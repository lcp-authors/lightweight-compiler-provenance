
../repos/coreutils/src/basenc:     file format elf32-littlearm


Disassembly of section .init:

00010e4c <.init>:
   10e4c:	push	{r3, lr}
   10e50:	bl	11130 <__assert_fail@plt+0x48>
   10e54:	pop	{r3, pc}

Disassembly of section .plt:

00010e58 <calloc@plt-0x14>:
   10e58:	push	{lr}		; (str lr, [sp, #-4]!)
   10e5c:	ldr	lr, [pc, #4]	; 10e68 <calloc@plt-0x4>
   10e60:	add	lr, pc, lr
   10e64:	ldr	pc, [lr, #8]!
   10e68:	muleq	r2, r8, r1

00010e6c <calloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #139264	; 0x22000
   10e74:	ldr	pc, [ip, #408]!	; 0x198

00010e78 <fputs_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #139264	; 0x22000
   10e80:	ldr	pc, [ip, #400]!	; 0x190

00010e84 <raise@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #139264	; 0x22000
   10e8c:	ldr	pc, [ip, #392]!	; 0x188

00010e90 <strcmp@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #139264	; 0x22000
   10e98:	ldr	pc, [ip, #384]!	; 0x180

00010e9c <posix_fadvise64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #139264	; 0x22000
   10ea4:	ldr	pc, [ip, #376]!	; 0x178

00010ea8 <printf@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #139264	; 0x22000
   10eb0:	ldr	pc, [ip, #368]!	; 0x170

00010eb4 <fflush@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #139264	; 0x22000
   10ebc:	ldr	pc, [ip, #360]!	; 0x168

00010ec0 <memmove@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #139264	; 0x22000
   10ec8:	ldr	pc, [ip, #352]!	; 0x160

00010ecc <free@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #139264	; 0x22000
   10ed4:	ldr	pc, [ip, #344]!	; 0x158

00010ed8 <_exit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #139264	; 0x22000
   10ee0:	ldr	pc, [ip, #336]!	; 0x150

00010ee4 <memcpy@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #139264	; 0x22000
   10eec:	ldr	pc, [ip, #328]!	; 0x148

00010ef0 <mbsinit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #139264	; 0x22000
   10ef8:	ldr	pc, [ip, #320]!	; 0x140

00010efc <fwrite_unlocked@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #139264	; 0x22000
   10f04:	ldr	pc, [ip, #312]!	; 0x138

00010f08 <memcmp@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #139264	; 0x22000
   10f10:	ldr	pc, [ip, #304]!	; 0x130

00010f14 <fputc_unlocked@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #139264	; 0x22000
   10f1c:	ldr	pc, [ip, #296]!	; 0x128

00010f20 <realloc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #139264	; 0x22000
   10f28:	ldr	pc, [ip, #288]!	; 0x120

00010f2c <textdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #139264	; 0x22000
   10f34:	ldr	pc, [ip, #280]!	; 0x118

00010f38 <iswprint@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #139264	; 0x22000
   10f40:	ldr	pc, [ip, #272]!	; 0x110

00010f44 <lseek64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #139264	; 0x22000
   10f4c:	ldr	pc, [ip, #264]!	; 0x108

00010f50 <__ctype_get_mb_cur_max@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #139264	; 0x22000
   10f58:	ldr	pc, [ip, #256]!	; 0x100

00010f5c <__fpending@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #139264	; 0x22000
   10f64:	ldr	pc, [ip, #248]!	; 0xf8

00010f68 <ferror_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #139264	; 0x22000
   10f70:	ldr	pc, [ip, #240]!	; 0xf0

00010f74 <mbrtowc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #139264	; 0x22000
   10f7c:	ldr	pc, [ip, #232]!	; 0xe8

00010f80 <error@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #139264	; 0x22000
   10f88:	ldr	pc, [ip, #224]!	; 0xe0

00010f8c <malloc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #139264	; 0x22000
   10f94:	ldr	pc, [ip, #216]!	; 0xd8

00010f98 <__libc_start_main@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #139264	; 0x22000
   10fa0:	ldr	pc, [ip, #208]!	; 0xd0

00010fa4 <__freading@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #139264	; 0x22000
   10fac:	ldr	pc, [ip, #200]!	; 0xc8

00010fb0 <__gmon_start__@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #139264	; 0x22000
   10fb8:	ldr	pc, [ip, #192]!	; 0xc0

00010fbc <getopt_long@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #139264	; 0x22000
   10fc4:	ldr	pc, [ip, #184]!	; 0xb8

00010fc8 <__ctype_b_loc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #139264	; 0x22000
   10fd0:	ldr	pc, [ip, #176]!	; 0xb0

00010fd4 <exit@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #139264	; 0x22000
   10fdc:	ldr	pc, [ip, #168]!	; 0xa8

00010fe0 <gettext@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #139264	; 0x22000
   10fe8:	ldr	pc, [ip, #160]!	; 0xa0

00010fec <strlen@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #139264	; 0x22000
   10ff4:	ldr	pc, [ip, #152]!	; 0x98

00010ff8 <strchr@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #139264	; 0x22000
   11000:	ldr	pc, [ip, #144]!	; 0x90

00011004 <fprintf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #139264	; 0x22000
   1100c:	ldr	pc, [ip, #136]!	; 0x88

00011010 <__errno_location@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #139264	; 0x22000
   11018:	ldr	pc, [ip, #128]!	; 0x80

0001101c <__cxa_atexit@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #139264	; 0x22000
   11024:	ldr	pc, [ip, #120]!	; 0x78

00011028 <memset@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #139264	; 0x22000
   11030:	ldr	pc, [ip, #112]!	; 0x70

00011034 <fileno@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #139264	; 0x22000
   1103c:	ldr	pc, [ip, #104]!	; 0x68

00011040 <memchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #139264	; 0x22000
   11048:	ldr	pc, [ip, #96]!	; 0x60

0001104c <strtoimax@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #139264	; 0x22000
   11054:	ldr	pc, [ip, #88]!	; 0x58

00011058 <fclose@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #139264	; 0x22000
   11060:	ldr	pc, [ip, #80]!	; 0x50

00011064 <fseeko64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #139264	; 0x22000
   1106c:	ldr	pc, [ip, #72]!	; 0x48

00011070 <setlocale@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #139264	; 0x22000
   11078:	ldr	pc, [ip, #64]!	; 0x40

0001107c <strrchr@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #139264	; 0x22000
   11084:	ldr	pc, [ip, #56]!	; 0x38

00011088 <nl_langinfo@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #139264	; 0x22000
   11090:	ldr	pc, [ip, #48]!	; 0x30

00011094 <fopen64@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #139264	; 0x22000
   1109c:	ldr	pc, [ip, #40]!	; 0x28

000110a0 <bindtextdomain@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #139264	; 0x22000
   110a8:	ldr	pc, [ip, #32]!

000110ac <fread_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #139264	; 0x22000
   110b4:	ldr	pc, [ip, #24]!

000110b8 <fputs@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #139264	; 0x22000
   110c0:	ldr	pc, [ip, #16]!

000110c4 <strncmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #139264	; 0x22000
   110cc:	ldr	pc, [ip, #8]!

000110d0 <abort@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #139264	; 0x22000
   110d8:	ldr	pc, [ip, #0]!

000110dc <feof_unlocked@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #135168	; 0x21000
   110e4:	ldr	pc, [ip, #4088]!	; 0xff8

000110e8 <__assert_fail@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #135168	; 0x21000
   110f0:	ldr	pc, [ip, #4080]!	; 0xff0

Disassembly of section .text:

000110f4 <.text>:
   110f4:	mov	fp, #0
   110f8:	mov	lr, #0
   110fc:	pop	{r1}		; (ldr r1, [sp], #4)
   11100:	mov	r2, sp
   11104:	push	{r2}		; (str r2, [sp, #-4]!)
   11108:	push	{r0}		; (str r0, [sp, #-4]!)
   1110c:	ldr	ip, [pc, #16]	; 11124 <__assert_fail@plt+0x3c>
   11110:	push	{ip}		; (str ip, [sp, #-4]!)
   11114:	ldr	r0, [pc, #12]	; 11128 <__assert_fail@plt+0x40>
   11118:	ldr	r3, [pc, #12]	; 1112c <__assert_fail@plt+0x44>
   1111c:	bl	10f98 <__libc_start_main@plt>
   11120:	bl	110d0 <abort@plt>
   11124:	andeq	r1, r2, r8, lsr ip
   11128:	andeq	r1, r1, r4, asr r6
   1112c:	ldrdeq	r1, [r2], -r8
   11130:	ldr	r3, [pc, #20]	; 1114c <__assert_fail@plt+0x64>
   11134:	ldr	r2, [pc, #20]	; 11150 <__assert_fail@plt+0x68>
   11138:	add	r3, pc, r3
   1113c:	ldr	r2, [r3, r2]
   11140:	cmp	r2, #0
   11144:	bxeq	lr
   11148:	b	10fb0 <__gmon_start__@plt>
   1114c:	andeq	r1, r2, r0, asr #29
   11150:	andeq	r0, r0, r4, ror #1
   11154:	ldr	r0, [pc, #24]	; 11174 <__assert_fail@plt+0x8c>
   11158:	ldr	r3, [pc, #24]	; 11178 <__assert_fail@plt+0x90>
   1115c:	cmp	r3, r0
   11160:	bxeq	lr
   11164:	ldr	r3, [pc, #16]	; 1117c <__assert_fail@plt+0x94>
   11168:	cmp	r3, #0
   1116c:	bxeq	lr
   11170:	bx	r3
   11174:	andeq	r3, r3, r8, lsr r1
   11178:	andeq	r3, r3, r8, lsr r1
   1117c:	andeq	r0, r0, r0
   11180:	ldr	r0, [pc, #36]	; 111ac <__assert_fail@plt+0xc4>
   11184:	ldr	r1, [pc, #36]	; 111b0 <__assert_fail@plt+0xc8>
   11188:	sub	r1, r1, r0
   1118c:	asr	r1, r1, #2
   11190:	add	r1, r1, r1, lsr #31
   11194:	asrs	r1, r1, #1
   11198:	bxeq	lr
   1119c:	ldr	r3, [pc, #16]	; 111b4 <__assert_fail@plt+0xcc>
   111a0:	cmp	r3, #0
   111a4:	bxeq	lr
   111a8:	bx	r3
   111ac:	andeq	r3, r3, r8, lsr r1
   111b0:	andeq	r3, r3, r8, lsr r1
   111b4:	andeq	r0, r0, r0
   111b8:	push	{r4, lr}
   111bc:	ldr	r4, [pc, #24]	; 111dc <__assert_fail@plt+0xf4>
   111c0:	ldrb	r3, [r4]
   111c4:	cmp	r3, #0
   111c8:	popne	{r4, pc}
   111cc:	bl	11154 <__assert_fail@plt+0x6c>
   111d0:	mov	r3, #1
   111d4:	strb	r3, [r4]
   111d8:	pop	{r4, pc}
   111dc:	andeq	r3, r3, ip, asr r1
   111e0:	b	11180 <__assert_fail@plt+0x98>
   111e4:	push	{fp, lr}
   111e8:	mov	fp, sp
   111ec:	sub	sp, sp, #72	; 0x48
   111f0:	str	r0, [fp, #-4]
   111f4:	ldr	r0, [fp, #-4]
   111f8:	cmp	r0, #0
   111fc:	beq	11248 <__assert_fail@plt+0x160>
   11200:	b	11204 <__assert_fail@plt+0x11c>
   11204:	movw	r0, #12616	; 0x3148
   11208:	movt	r0, #3
   1120c:	ldr	r0, [r0]
   11210:	movw	r1, #7264	; 0x1c60
   11214:	movt	r1, #2
   11218:	str	r0, [fp, #-8]
   1121c:	mov	r0, r1
   11220:	bl	10fe0 <gettext@plt>
   11224:	movw	r1, #12668	; 0x317c
   11228:	movt	r1, #3
   1122c:	ldr	r2, [r1]
   11230:	ldr	r1, [fp, #-8]
   11234:	str	r0, [fp, #-12]
   11238:	mov	r0, r1
   1123c:	ldr	r1, [fp, #-12]
   11240:	bl	11004 <fprintf@plt>
   11244:	b	11450 <__assert_fail@plt+0x368>
   11248:	movw	r0, #7303	; 0x1c87
   1124c:	movt	r0, #2
   11250:	bl	10fe0 <gettext@plt>
   11254:	movw	r1, #12668	; 0x317c
   11258:	movt	r1, #3
   1125c:	ldr	r1, [r1]
   11260:	bl	10ea8 <printf@plt>
   11264:	movw	r1, #7333	; 0x1ca5
   11268:	movt	r1, #2
   1126c:	str	r0, [fp, #-16]
   11270:	mov	r0, r1
   11274:	bl	10fe0 <gettext@plt>
   11278:	movw	r1, #12628	; 0x3154
   1127c:	movt	r1, #3
   11280:	ldr	r1, [r1]
   11284:	bl	10e78 <fputs_unlocked@plt>
   11288:	str	r0, [fp, #-20]	; 0xffffffec
   1128c:	bl	11458 <__assert_fail@plt+0x370>
   11290:	bl	11480 <__assert_fail@plt+0x398>
   11294:	movw	r0, #7403	; 0x1ceb
   11298:	movt	r0, #2
   1129c:	bl	10fe0 <gettext@plt>
   112a0:	movw	r1, #12628	; 0x3154
   112a4:	movt	r1, #3
   112a8:	ldr	r1, [r1]
   112ac:	bl	10e78 <fputs_unlocked@plt>
   112b0:	movw	r1, #7473	; 0x1d31
   112b4:	movt	r1, #2
   112b8:	str	r0, [fp, #-24]	; 0xffffffe8
   112bc:	mov	r0, r1
   112c0:	bl	10fe0 <gettext@plt>
   112c4:	movw	r1, #12628	; 0x3154
   112c8:	movt	r1, #3
   112cc:	ldr	r1, [r1]
   112d0:	bl	10e78 <fputs_unlocked@plt>
   112d4:	movw	r1, #7544	; 0x1d78
   112d8:	movt	r1, #2
   112dc:	str	r0, [fp, #-28]	; 0xffffffe4
   112e0:	mov	r0, r1
   112e4:	bl	10fe0 <gettext@plt>
   112e8:	movw	r1, #12628	; 0x3154
   112ec:	movt	r1, #3
   112f0:	ldr	r1, [r1]
   112f4:	bl	10e78 <fputs_unlocked@plt>
   112f8:	movw	r1, #7614	; 0x1dbe
   112fc:	movt	r1, #2
   11300:	str	r0, [fp, #-32]	; 0xffffffe0
   11304:	mov	r0, r1
   11308:	bl	10fe0 <gettext@plt>
   1130c:	movw	r1, #12628	; 0x3154
   11310:	movt	r1, #3
   11314:	ldr	r1, [r1]
   11318:	bl	10e78 <fputs_unlocked@plt>
   1131c:	movw	r1, #7688	; 0x1e08
   11320:	movt	r1, #2
   11324:	str	r0, [sp, #36]	; 0x24
   11328:	mov	r0, r1
   1132c:	bl	10fe0 <gettext@plt>
   11330:	movw	r1, #12628	; 0x3154
   11334:	movt	r1, #3
   11338:	ldr	r1, [r1]
   1133c:	bl	10e78 <fputs_unlocked@plt>
   11340:	movw	r1, #7746	; 0x1e42
   11344:	movt	r1, #2
   11348:	str	r0, [sp, #32]
   1134c:	mov	r0, r1
   11350:	bl	10fe0 <gettext@plt>
   11354:	movw	r1, #12628	; 0x3154
   11358:	movt	r1, #3
   1135c:	ldr	r1, [r1]
   11360:	bl	10e78 <fputs_unlocked@plt>
   11364:	movw	r1, #7820	; 0x1e8c
   11368:	movt	r1, #2
   1136c:	str	r0, [sp, #28]
   11370:	mov	r0, r1
   11374:	bl	10fe0 <gettext@plt>
   11378:	movw	r1, #12628	; 0x3154
   1137c:	movt	r1, #3
   11380:	ldr	r1, [r1]
   11384:	bl	10e78 <fputs_unlocked@plt>
   11388:	movw	r1, #7895	; 0x1ed7
   1138c:	movt	r1, #2
   11390:	str	r0, [sp, #24]
   11394:	mov	r0, r1
   11398:	bl	10fe0 <gettext@plt>
   1139c:	movw	r1, #12628	; 0x3154
   113a0:	movt	r1, #3
   113a4:	ldr	r1, [r1]
   113a8:	bl	10e78 <fputs_unlocked@plt>
   113ac:	movw	r1, #8137	; 0x1fc9
   113b0:	movt	r1, #2
   113b4:	str	r0, [sp, #20]
   113b8:	mov	r0, r1
   113bc:	bl	10fe0 <gettext@plt>
   113c0:	movw	r1, #12628	; 0x3154
   113c4:	movt	r1, #3
   113c8:	ldr	r1, [r1]
   113cc:	bl	10e78 <fputs_unlocked@plt>
   113d0:	movw	r1, #8359	; 0x20a7
   113d4:	movt	r1, #2
   113d8:	str	r0, [sp, #16]
   113dc:	mov	r0, r1
   113e0:	bl	10fe0 <gettext@plt>
   113e4:	movw	r1, #12628	; 0x3154
   113e8:	movt	r1, #3
   113ec:	ldr	r1, [r1]
   113f0:	bl	10e78 <fputs_unlocked@plt>
   113f4:	movw	r1, #8404	; 0x20d4
   113f8:	movt	r1, #2
   113fc:	str	r0, [sp, #12]
   11400:	mov	r0, r1
   11404:	bl	10fe0 <gettext@plt>
   11408:	movw	r1, #12628	; 0x3154
   1140c:	movt	r1, #3
   11410:	ldr	r1, [r1]
   11414:	bl	10e78 <fputs_unlocked@plt>
   11418:	movw	r1, #8458	; 0x210a
   1141c:	movt	r1, #2
   11420:	str	r0, [sp, #8]
   11424:	mov	r0, r1
   11428:	bl	10fe0 <gettext@plt>
   1142c:	movw	r1, #12628	; 0x3154
   11430:	movt	r1, #3
   11434:	ldr	r1, [r1]
   11438:	bl	10e78 <fputs_unlocked@plt>
   1143c:	movw	r1, #8656	; 0x21d0
   11440:	movt	r1, #2
   11444:	str	r0, [sp, #4]
   11448:	mov	r0, r1
   1144c:	bl	114a8 <__assert_fail@plt+0x3c0>
   11450:	ldr	r0, [fp, #-4]
   11454:	bl	10fd4 <exit@plt>
   11458:	push	{fp, lr}
   1145c:	mov	fp, sp
   11460:	movw	r0, #8802	; 0x2262
   11464:	movt	r0, #2
   11468:	bl	10fe0 <gettext@plt>
   1146c:	movw	r1, #12628	; 0x3154
   11470:	movt	r1, #3
   11474:	ldr	r1, [r1]
   11478:	bl	10e78 <fputs_unlocked@plt>
   1147c:	pop	{fp, pc}
   11480:	push	{fp, lr}
   11484:	mov	fp, sp
   11488:	movw	r0, #8858	; 0x229a
   1148c:	movt	r0, #2
   11490:	bl	10fe0 <gettext@plt>
   11494:	movw	r1, #12628	; 0x3154
   11498:	movt	r1, #3
   1149c:	ldr	r1, [r1]
   114a0:	bl	10e78 <fputs_unlocked@plt>
   114a4:	pop	{fp, pc}
   114a8:	push	{fp, lr}
   114ac:	mov	fp, sp
   114b0:	sub	sp, sp, #88	; 0x58
   114b4:	add	r1, sp, #28
   114b8:	movw	r2, #9828	; 0x2664
   114bc:	movt	r2, #2
   114c0:	str	r0, [fp, #-4]
   114c4:	mov	r0, r1
   114c8:	str	r1, [sp, #12]
   114cc:	mov	r1, r2
   114d0:	movw	r2, #56	; 0x38
   114d4:	bl	10ee4 <memcpy@plt>
   114d8:	ldr	r0, [fp, #-4]
   114dc:	str	r0, [sp, #24]
   114e0:	ldr	r0, [sp, #12]
   114e4:	str	r0, [sp, #20]
   114e8:	ldr	r0, [sp, #20]
   114ec:	ldr	r0, [r0]
   114f0:	movw	r1, #0
   114f4:	cmp	r0, r1
   114f8:	movw	r0, #0
   114fc:	str	r0, [sp, #8]
   11500:	beq	1152c <__assert_fail@plt+0x444>
   11504:	ldr	r0, [fp, #-4]
   11508:	ldr	r1, [sp, #20]
   1150c:	ldr	r1, [r1]
   11510:	bl	10e90 <strcmp@plt>
   11514:	cmp	r0, #0
   11518:	movw	r0, #0
   1151c:	moveq	r0, #1
   11520:	mvn	r1, #0
   11524:	eor	r0, r0, r1
   11528:	str	r0, [sp, #8]
   1152c:	ldr	r0, [sp, #8]
   11530:	tst	r0, #1
   11534:	beq	11548 <__assert_fail@plt+0x460>
   11538:	ldr	r0, [sp, #20]
   1153c:	add	r0, r0, #8
   11540:	str	r0, [sp, #20]
   11544:	b	114e8 <__assert_fail@plt+0x400>
   11548:	ldr	r0, [sp, #20]
   1154c:	ldr	r0, [r0, #4]
   11550:	movw	r1, #0
   11554:	cmp	r0, r1
   11558:	beq	11568 <__assert_fail@plt+0x480>
   1155c:	ldr	r0, [sp, #20]
   11560:	ldr	r0, [r0, #4]
   11564:	str	r0, [sp, #24]
   11568:	movw	r0, #9028	; 0x2344
   1156c:	movt	r0, #2
   11570:	bl	10fe0 <gettext@plt>
   11574:	movw	r1, #8717	; 0x220d
   11578:	movt	r1, #2
   1157c:	movw	r2, #9051	; 0x235b
   11580:	movt	r2, #2
   11584:	bl	10ea8 <printf@plt>
   11588:	movw	r1, #5
   1158c:	str	r0, [sp, #4]
   11590:	mov	r0, r1
   11594:	movw	r1, #0
   11598:	bl	11070 <setlocale@plt>
   1159c:	str	r0, [sp, #16]
   115a0:	ldr	r0, [sp, #16]
   115a4:	movw	r1, #0
   115a8:	cmp	r0, r1
   115ac:	beq	115e8 <__assert_fail@plt+0x500>
   115b0:	ldr	r0, [sp, #16]
   115b4:	movw	r1, #9091	; 0x2383
   115b8:	movt	r1, #2
   115bc:	movw	r2, #3
   115c0:	bl	110c4 <strncmp@plt>
   115c4:	cmp	r0, #0
   115c8:	beq	115e8 <__assert_fail@plt+0x500>
   115cc:	movw	r0, #9095	; 0x2387
   115d0:	movt	r0, #2
   115d4:	bl	10fe0 <gettext@plt>
   115d8:	movw	r1, #12628	; 0x3154
   115dc:	movt	r1, #3
   115e0:	ldr	r1, [r1]
   115e4:	bl	10e78 <fputs_unlocked@plt>
   115e8:	movw	r0, #9166	; 0x23ce
   115ec:	movt	r0, #2
   115f0:	bl	10fe0 <gettext@plt>
   115f4:	ldr	r2, [fp, #-4]
   115f8:	movw	r1, #9051	; 0x235b
   115fc:	movt	r1, #2
   11600:	bl	10ea8 <printf@plt>
   11604:	movw	r1, #9193	; 0x23e9
   11608:	movt	r1, #2
   1160c:	str	r0, [sp]
   11610:	mov	r0, r1
   11614:	bl	10fe0 <gettext@plt>
   11618:	ldr	r1, [sp, #24]
   1161c:	ldr	r2, [sp, #24]
   11620:	ldr	r3, [fp, #-4]
   11624:	cmp	r2, r3
   11628:	movw	r2, #0
   1162c:	moveq	r2, #1
   11630:	tst	r2, #1
   11634:	movw	r2, #9243	; 0x241b
   11638:	movt	r2, #2
   1163c:	movw	r3, #8961	; 0x2301
   11640:	movt	r3, #2
   11644:	movne	r2, r3
   11648:	bl	10ea8 <printf@plt>
   1164c:	mov	sp, fp
   11650:	pop	{fp, pc}
   11654:	push	{fp, lr}
   11658:	mov	fp, sp
   1165c:	sub	sp, sp, #128	; 0x80
   11660:	movw	r2, #0
   11664:	str	r2, [fp, #-4]
   11668:	str	r0, [fp, #-8]
   1166c:	str	r1, [fp, #-12]
   11670:	movw	r0, #0
   11674:	strb	r0, [fp, #-25]	; 0xffffffe7
   11678:	strb	r0, [fp, #-26]	; 0xffffffe6
   1167c:	movw	r0, #76	; 0x4c
   11680:	str	r0, [fp, #-32]	; 0xffffffe0
   11684:	str	r2, [fp, #-36]	; 0xffffffdc
   11688:	ldr	r0, [fp, #-12]
   1168c:	ldr	r0, [r0]
   11690:	bl	181a8 <__assert_fail@plt+0x70c0>
   11694:	movw	r0, #6
   11698:	movw	r1, #9243	; 0x241b
   1169c:	movt	r1, #2
   116a0:	bl	11070 <setlocale@plt>
   116a4:	movw	r1, #8721	; 0x2211
   116a8:	movt	r1, #2
   116ac:	str	r0, [fp, #-56]	; 0xffffffc8
   116b0:	mov	r0, r1
   116b4:	movw	r1, #8663	; 0x21d7
   116b8:	movt	r1, #2
   116bc:	bl	110a0 <bindtextdomain@plt>
   116c0:	movw	r1, #8721	; 0x2211
   116c4:	movt	r1, #2
   116c8:	str	r0, [fp, #-60]	; 0xffffffc4
   116cc:	mov	r0, r1
   116d0:	bl	10f2c <textdomain@plt>
   116d4:	movw	r1, #31512	; 0x7b18
   116d8:	movt	r1, #1
   116dc:	str	r0, [sp, #64]	; 0x40
   116e0:	mov	r0, r1
   116e4:	bl	21c3c <__assert_fail@plt+0x10b54>
   116e8:	ldr	r0, [fp, #-8]
   116ec:	ldr	r1, [fp, #-12]
   116f0:	movw	r2, #8687	; 0x21ef
   116f4:	movt	r2, #2
   116f8:	movw	r3, #9604	; 0x2584
   116fc:	movt	r3, #2
   11700:	movw	ip, #0
   11704:	str	ip, [sp]
   11708:	bl	10fbc <getopt_long@plt>
   1170c:	str	r0, [fp, #-16]
   11710:	cmn	r0, #1
   11714:	beq	11900 <__assert_fail@plt+0x818>
   11718:	ldr	r0, [fp, #-16]
   1171c:	cmn	r0, #3
   11720:	str	r0, [sp, #60]	; 0x3c
   11724:	beq	118a0 <__assert_fail@plt+0x7b8>
   11728:	b	1172c <__assert_fail@plt+0x644>
   1172c:	ldr	r0, [sp, #60]	; 0x3c
   11730:	cmn	r0, #2
   11734:	beq	11898 <__assert_fail@plt+0x7b0>
   11738:	b	1173c <__assert_fail@plt+0x654>
   1173c:	ldr	r0, [sp, #60]	; 0x3c
   11740:	cmp	r0, #100	; 0x64
   11744:	beq	11780 <__assert_fail@plt+0x698>
   11748:	b	1174c <__assert_fail@plt+0x664>
   1174c:	ldr	r0, [sp, #60]	; 0x3c
   11750:	cmp	r0, #105	; 0x69
   11754:	beq	11880 <__assert_fail@plt+0x798>
   11758:	b	1175c <__assert_fail@plt+0x674>
   1175c:	ldr	r0, [sp, #60]	; 0x3c
   11760:	cmp	r0, #119	; 0x77
   11764:	beq	1178c <__assert_fail@plt+0x6a4>
   11768:	b	1176c <__assert_fail@plt+0x684>
   1176c:	ldr	r0, [sp, #60]	; 0x3c
   11770:	sub	r1, r0, #256	; 0x100
   11774:	cmp	r1, #8
   11778:	bcc	1188c <__assert_fail@plt+0x7a4>
   1177c:	b	118f4 <__assert_fail@plt+0x80c>
   11780:	movw	r0, #1
   11784:	strb	r0, [fp, #-25]	; 0xffffffe7
   11788:	b	118fc <__assert_fail@plt+0x814>
   1178c:	movw	r0, #12632	; 0x3158
   11790:	movt	r0, #3
   11794:	ldr	r0, [r0]
   11798:	movw	r1, #0
   1179c:	movw	r2, #10
   117a0:	sub	r3, fp, #48	; 0x30
   117a4:	movw	ip, #9243	; 0x241b
   117a8:	movt	ip, #2
   117ac:	str	ip, [sp]
   117b0:	bl	1f308 <__assert_fail@plt+0xe220>
   117b4:	str	r0, [fp, #-52]	; 0xffffffcc
   117b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   117bc:	movw	r1, #1
   117c0:	cmp	r1, r0
   117c4:	bcc	117d8 <__assert_fail@plt+0x6f0>
   117c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   117cc:	cmn	r0, #1
   117d0:	bgt	11824 <__assert_fail@plt+0x73c>
   117d4:	b	117d8 <__assert_fail@plt+0x6f0>
   117d8:	movw	r0, #8699	; 0x21fb
   117dc:	movt	r0, #2
   117e0:	bl	10fe0 <gettext@plt>
   117e4:	movw	r1, #12632	; 0x3158
   117e8:	movt	r1, #3
   117ec:	ldr	r1, [r1]
   117f0:	str	r0, [sp, #56]	; 0x38
   117f4:	mov	r0, r1
   117f8:	bl	1a804 <__assert_fail@plt+0x971c>
   117fc:	movw	r1, #1
   11800:	str	r0, [sp, #52]	; 0x34
   11804:	mov	r0, r1
   11808:	movw	r1, #0
   1180c:	movw	r2, #8692	; 0x21f4
   11810:	movt	r2, #2
   11814:	ldr	r3, [sp, #56]	; 0x38
   11818:	ldr	ip, [sp, #52]	; 0x34
   1181c:	str	ip, [sp]
   11820:	bl	10f80 <error@plt>
   11824:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11828:	cmp	r0, #1
   1182c:	beq	11848 <__assert_fail@plt+0x760>
   11830:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11834:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11838:	subs	r0, r0, #-2147483648	; 0x80000000
   1183c:	sbcs	r1, r1, #0
   11840:	blt	1185c <__assert_fail@plt+0x774>
   11844:	b	11848 <__assert_fail@plt+0x760>
   11848:	mov	r0, #0
   1184c:	mov	r1, r0
   11850:	str	r1, [sp, #48]	; 0x30
   11854:	str	r0, [sp, #44]	; 0x2c
   11858:	b	11870 <__assert_fail@plt+0x788>
   1185c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11860:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11864:	str	r0, [sp, #48]	; 0x30
   11868:	str	r1, [sp, #44]	; 0x2c
   1186c:	b	11870 <__assert_fail@plt+0x788>
   11870:	ldr	r0, [sp, #44]	; 0x2c
   11874:	ldr	r1, [sp, #48]	; 0x30
   11878:	str	r1, [fp, #-32]	; 0xffffffe0
   1187c:	b	118fc <__assert_fail@plt+0x814>
   11880:	movw	r0, #1
   11884:	strb	r0, [fp, #-26]	; 0xffffffe6
   11888:	b	118fc <__assert_fail@plt+0x814>
   1188c:	ldr	r0, [fp, #-16]
   11890:	str	r0, [fp, #-36]	; 0xffffffdc
   11894:	b	118fc <__assert_fail@plt+0x814>
   11898:	movw	r0, #0
   1189c:	bl	111e4 <__assert_fail@plt+0xfc>
   118a0:	movw	r0, #12628	; 0x3154
   118a4:	movt	r0, #3
   118a8:	ldr	r0, [r0]
   118ac:	movw	r1, #12528	; 0x30f0
   118b0:	movt	r1, #3
   118b4:	ldr	r3, [r1]
   118b8:	movw	r1, #8656	; 0x21d0
   118bc:	movt	r1, #2
   118c0:	movw	r2, #8717	; 0x220d
   118c4:	movt	r2, #2
   118c8:	movw	ip, #8731	; 0x221b
   118cc:	movt	ip, #2
   118d0:	str	ip, [sp]
   118d4:	movw	ip, #8747	; 0x222b
   118d8:	movt	ip, #2
   118dc:	str	ip, [sp, #4]
   118e0:	movw	ip, #0
   118e4:	str	ip, [sp, #8]
   118e8:	bl	1c3c0 <__assert_fail@plt+0xb2d8>
   118ec:	movw	r0, #0
   118f0:	bl	10fd4 <exit@plt>
   118f4:	movw	r0, #1
   118f8:	bl	111e4 <__assert_fail@plt+0xfc>
   118fc:	b	116e8 <__assert_fail@plt+0x600>
   11900:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11904:	sub	r0, r0, #256	; 0x100
   11908:	cmp	r0, #7
   1190c:	str	r0, [sp, #40]	; 0x28
   11910:	bhi	11c84 <__assert_fail@plt+0xb9c>
   11914:	add	r0, pc, #8
   11918:	ldr	r1, [sp, #40]	; 0x28
   1191c:	ldr	r0, [r0, r1, lsl #2]
   11920:	mov	pc, r0
   11924:	andeq	r1, r1, r4, asr #18
   11928:	andeq	r1, r1, ip, lsr #19
   1192c:	andeq	r1, r1, r4, lsl sl
   11930:	andeq	r1, r1, ip, ror sl
   11934:	andeq	r1, r1, r4, ror #21
   11938:	andeq	r1, r1, ip, asr #22
   1193c:			; <UNDEFINED> instruction: 0x00011bb4
   11940:	andeq	r1, r1, ip, lsl ip
   11944:	movw	r0, #12640	; 0x3160
   11948:	movt	r0, #3
   1194c:	movw	r1, #7784	; 0x1e68
   11950:	movt	r1, #1
   11954:	str	r1, [r0]
   11958:	movw	r0, #12644	; 0x3164
   1195c:	movt	r0, #3
   11960:	movw	r1, #27560	; 0x6ba8
   11964:	movt	r1, #1
   11968:	str	r1, [r0]
   1196c:	movw	r0, #12648	; 0x3168
   11970:	movt	r0, #3
   11974:	movw	r1, #23076	; 0x5a24
   11978:	movt	r1, #1
   1197c:	str	r1, [r0]
   11980:	movw	r0, #12652	; 0x316c
   11984:	movt	r0, #3
   11988:	movw	r1, #7828	; 0x1e94
   1198c:	movt	r1, #1
   11990:	str	r1, [r0]
   11994:	movw	r0, #12656	; 0x3170
   11998:	movt	r0, #3
   1199c:	movw	r1, #7864	; 0x1eb8
   119a0:	movt	r1, #1
   119a4:	str	r1, [r0]
   119a8:	b	11cac <__assert_fail@plt+0xbc4>
   119ac:	movw	r0, #12640	; 0x3160
   119b0:	movt	r0, #3
   119b4:	movw	r1, #7784	; 0x1e68
   119b8:	movt	r1, #1
   119bc:	str	r1, [r0]
   119c0:	movw	r0, #12644	; 0x3164
   119c4:	movt	r0, #3
   119c8:	movw	r1, #7972	; 0x1f24
   119cc:	movt	r1, #1
   119d0:	str	r1, [r0]
   119d4:	movw	r0, #12648	; 0x3168
   119d8:	movt	r0, #3
   119dc:	movw	r1, #8104	; 0x1fa8
   119e0:	movt	r1, #1
   119e4:	str	r1, [r0]
   119e8:	movw	r0, #12652	; 0x316c
   119ec:	movt	r0, #3
   119f0:	movw	r1, #8272	; 0x2050
   119f4:	movt	r1, #1
   119f8:	str	r1, [r0]
   119fc:	movw	r0, #12656	; 0x3170
   11a00:	movt	r0, #3
   11a04:	movw	r1, #8316	; 0x207c
   11a08:	movt	r1, #1
   11a0c:	str	r1, [r0]
   11a10:	b	11cac <__assert_fail@plt+0xbc4>
   11a14:	movw	r0, #12640	; 0x3160
   11a18:	movt	r0, #3
   11a1c:	movw	r1, #8660	; 0x21d4
   11a20:	movt	r1, #1
   11a24:	str	r1, [r0]
   11a28:	movw	r0, #12644	; 0x3164
   11a2c:	movt	r0, #3
   11a30:	movw	r1, #20200	; 0x4ee8
   11a34:	movt	r1, #1
   11a38:	str	r1, [r0]
   11a3c:	movw	r0, #12648	; 0x3168
   11a40:	movt	r0, #3
   11a44:	movw	r1, #15516	; 0x3c9c
   11a48:	movt	r1, #1
   11a4c:	str	r1, [r0]
   11a50:	movw	r0, #12652	; 0x316c
   11a54:	movt	r0, #3
   11a58:	movw	r1, #8708	; 0x2204
   11a5c:	movt	r1, #1
   11a60:	str	r1, [r0]
   11a64:	movw	r0, #12656	; 0x3170
   11a68:	movt	r0, #3
   11a6c:	movw	r1, #8744	; 0x2228
   11a70:	movt	r1, #1
   11a74:	str	r1, [r0]
   11a78:	b	11cac <__assert_fail@plt+0xbc4>
   11a7c:	movw	r0, #12640	; 0x3160
   11a80:	movt	r0, #3
   11a84:	movw	r1, #8660	; 0x21d4
   11a88:	movt	r1, #1
   11a8c:	str	r1, [r0]
   11a90:	movw	r0, #12644	; 0x3164
   11a94:	movt	r0, #3
   11a98:	movw	r1, #8852	; 0x2294
   11a9c:	movt	r1, #1
   11aa0:	str	r1, [r0]
   11aa4:	movw	r0, #12648	; 0x3168
   11aa8:	movt	r0, #3
   11aac:	movw	r1, #8964	; 0x2304
   11ab0:	movt	r1, #1
   11ab4:	str	r1, [r0]
   11ab8:	movw	r0, #12652	; 0x316c
   11abc:	movt	r0, #3
   11ac0:	movw	r1, #9176	; 0x23d8
   11ac4:	movt	r1, #1
   11ac8:	str	r1, [r0]
   11acc:	movw	r0, #12656	; 0x3170
   11ad0:	movt	r0, #3
   11ad4:	movw	r1, #9220	; 0x2404
   11ad8:	movt	r1, #1
   11adc:	str	r1, [r0]
   11ae0:	b	11cac <__assert_fail@plt+0xbc4>
   11ae4:	movw	r0, #12640	; 0x3160
   11ae8:	movt	r0, #3
   11aec:	movw	r1, #9492	; 0x2514
   11af0:	movt	r1, #1
   11af4:	str	r1, [r0]
   11af8:	movw	r0, #12644	; 0x3164
   11afc:	movt	r0, #3
   11b00:	movw	r1, #9516	; 0x252c
   11b04:	movt	r1, #1
   11b08:	str	r1, [r0]
   11b0c:	movw	r0, #12648	; 0x3168
   11b10:	movt	r0, #3
   11b14:	movw	r1, #9628	; 0x259c
   11b18:	movt	r1, #1
   11b1c:	str	r1, [r0]
   11b20:	movw	r0, #12652	; 0x316c
   11b24:	movt	r0, #3
   11b28:	movw	r1, #9780	; 0x2634
   11b2c:	movt	r1, #1
   11b30:	str	r1, [r0]
   11b34:	movw	r0, #12656	; 0x3170
   11b38:	movt	r0, #3
   11b3c:	movw	r1, #9836	; 0x266c
   11b40:	movt	r1, #1
   11b44:	str	r1, [r0]
   11b48:	b	11cac <__assert_fail@plt+0xbc4>
   11b4c:	movw	r0, #12640	; 0x3160
   11b50:	movt	r0, #3
   11b54:	movw	r1, #10264	; 0x2818
   11b58:	movt	r1, #1
   11b5c:	str	r1, [r0]
   11b60:	movw	r0, #12644	; 0x3164
   11b64:	movt	r0, #3
   11b68:	movw	r1, #10288	; 0x2830
   11b6c:	movt	r1, #1
   11b70:	str	r1, [r0]
   11b74:	movw	r0, #12648	; 0x3168
   11b78:	movt	r0, #3
   11b7c:	movw	r1, #10352	; 0x2870
   11b80:	movt	r1, #1
   11b84:	str	r1, [r0]
   11b88:	movw	r0, #12652	; 0x316c
   11b8c:	movt	r0, #3
   11b90:	movw	r1, #10540	; 0x292c
   11b94:	movt	r1, #1
   11b98:	str	r1, [r0]
   11b9c:	movw	r0, #12656	; 0x3170
   11ba0:	movt	r0, #3
   11ba4:	movw	r1, #10596	; 0x2964
   11ba8:	movt	r1, #1
   11bac:	str	r1, [r0]
   11bb0:	b	11cac <__assert_fail@plt+0xbc4>
   11bb4:	movw	r0, #12640	; 0x3160
   11bb8:	movt	r0, #3
   11bbc:	movw	r1, #10264	; 0x2818
   11bc0:	movt	r1, #1
   11bc4:	str	r1, [r0]
   11bc8:	movw	r0, #12644	; 0x3164
   11bcc:	movt	r0, #3
   11bd0:	movw	r1, #10288	; 0x2830
   11bd4:	movt	r1, #1
   11bd8:	str	r1, [r0]
   11bdc:	movw	r0, #12648	; 0x3168
   11be0:	movt	r0, #3
   11be4:	movw	r1, #11036	; 0x2b1c
   11be8:	movt	r1, #1
   11bec:	str	r1, [r0]
   11bf0:	movw	r0, #12652	; 0x316c
   11bf4:	movt	r0, #3
   11bf8:	movw	r1, #10540	; 0x292c
   11bfc:	movt	r1, #1
   11c00:	str	r1, [r0]
   11c04:	movw	r0, #12656	; 0x3170
   11c08:	movt	r0, #3
   11c0c:	movw	r1, #11224	; 0x2bd8
   11c10:	movt	r1, #1
   11c14:	str	r1, [r0]
   11c18:	b	11cac <__assert_fail@plt+0xbc4>
   11c1c:	movw	r0, #12640	; 0x3160
   11c20:	movt	r0, #3
   11c24:	movw	r1, #11632	; 0x2d70
   11c28:	movt	r1, #1
   11c2c:	str	r1, [r0]
   11c30:	movw	r0, #12644	; 0x3164
   11c34:	movt	r0, #3
   11c38:	movw	r1, #11676	; 0x2d9c
   11c3c:	movt	r1, #1
   11c40:	str	r1, [r0]
   11c44:	movw	r0, #12648	; 0x3168
   11c48:	movt	r0, #3
   11c4c:	movw	r1, #11768	; 0x2df8
   11c50:	movt	r1, #1
   11c54:	str	r1, [r0]
   11c58:	movw	r0, #12652	; 0x316c
   11c5c:	movt	r0, #3
   11c60:	movw	r1, #12228	; 0x2fc4
   11c64:	movt	r1, #1
   11c68:	str	r1, [r0]
   11c6c:	movw	r0, #12656	; 0x3170
   11c70:	movt	r0, #3
   11c74:	movw	r1, #12284	; 0x2ffc
   11c78:	movt	r1, #1
   11c7c:	str	r1, [r0]
   11c80:	b	11cac <__assert_fail@plt+0xbc4>
   11c84:	movw	r0, #8760	; 0x2238
   11c88:	movt	r0, #2
   11c8c:	bl	10fe0 <gettext@plt>
   11c90:	movw	r1, #0
   11c94:	str	r0, [sp, #36]	; 0x24
   11c98:	mov	r0, r1
   11c9c:	ldr	r2, [sp, #36]	; 0x24
   11ca0:	bl	10f80 <error@plt>
   11ca4:	movw	r0, #1
   11ca8:	bl	111e4 <__assert_fail@plt+0xfc>
   11cac:	ldr	r0, [fp, #-8]
   11cb0:	movw	r1, #12608	; 0x3140
   11cb4:	movt	r1, #3
   11cb8:	ldr	r1, [r1]
   11cbc:	sub	r0, r0, r1
   11cc0:	cmp	r0, #1
   11cc4:	ble	11d1c <__assert_fail@plt+0xc34>
   11cc8:	movw	r0, #8782	; 0x224e
   11ccc:	movt	r0, #2
   11cd0:	bl	10fe0 <gettext@plt>
   11cd4:	ldr	r1, [fp, #-12]
   11cd8:	movw	r2, #12608	; 0x3140
   11cdc:	movt	r2, #3
   11ce0:	ldr	r2, [r2]
   11ce4:	add	r2, r2, #1
   11ce8:	add	r1, r1, r2, lsl #2
   11cec:	ldr	r1, [r1]
   11cf0:	str	r0, [sp, #32]
   11cf4:	mov	r0, r1
   11cf8:	bl	1a804 <__assert_fail@plt+0x971c>
   11cfc:	movw	r1, #0
   11d00:	str	r0, [sp, #28]
   11d04:	mov	r0, r1
   11d08:	ldr	r2, [sp, #32]
   11d0c:	ldr	r3, [sp, #28]
   11d10:	bl	10f80 <error@plt>
   11d14:	movw	r0, #1
   11d18:	bl	111e4 <__assert_fail@plt+0xfc>
   11d1c:	movw	r0, #12608	; 0x3140
   11d20:	movt	r0, #3
   11d24:	ldr	r0, [r0]
   11d28:	ldr	r1, [fp, #-8]
   11d2c:	cmp	r0, r1
   11d30:	bge	11d54 <__assert_fail@plt+0xc6c>
   11d34:	ldr	r0, [fp, #-12]
   11d38:	movw	r1, #12608	; 0x3140
   11d3c:	movt	r1, #3
   11d40:	ldr	r1, [r1]
   11d44:	add	r0, r0, r1, lsl #2
   11d48:	ldr	r0, [r0]
   11d4c:	str	r0, [fp, #-24]	; 0xffffffe8
   11d50:	b	11d60 <__assert_fail@plt+0xc78>
   11d54:	movw	r0, #10849	; 0x2a61
   11d58:	movt	r0, #2
   11d5c:	str	r0, [fp, #-24]	; 0xffffffe8
   11d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d64:	movw	r1, #10849	; 0x2a61
   11d68:	movt	r1, #2
   11d6c:	bl	10e90 <strcmp@plt>
   11d70:	cmp	r0, #0
   11d74:	bne	11d9c <__assert_fail@plt+0xcb4>
   11d78:	movw	r0, #0
   11d7c:	str	r0, [sp, #24]
   11d80:	ldr	r1, [sp, #24]
   11d84:	bl	1f2d4 <__assert_fail@plt+0xe1ec>
   11d88:	movw	r0, #12624	; 0x3150
   11d8c:	movt	r0, #3
   11d90:	ldr	r0, [r0]
   11d94:	str	r0, [fp, #-20]	; 0xffffffec
   11d98:	b	11e04 <__assert_fail@plt+0xd1c>
   11d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11da0:	movw	r1, #8799	; 0x225f
   11da4:	movt	r1, #2
   11da8:	bl	11094 <fopen64@plt>
   11dac:	str	r0, [fp, #-20]	; 0xffffffec
   11db0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11db4:	movw	r1, #0
   11db8:	cmp	r0, r1
   11dbc:	bne	11e00 <__assert_fail@plt+0xd18>
   11dc0:	bl	11010 <__errno_location@plt>
   11dc4:	ldr	r1, [r0]
   11dc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11dcc:	movw	r0, #0
   11dd0:	movw	r3, #3
   11dd4:	str	r1, [sp, #20]
   11dd8:	mov	r1, r3
   11ddc:	bl	1a5c0 <__assert_fail@plt+0x94d8>
   11de0:	movw	r1, #1
   11de4:	str	r0, [sp, #16]
   11de8:	mov	r0, r1
   11dec:	ldr	r1, [sp, #20]
   11df0:	movw	r2, #8696	; 0x21f8
   11df4:	movt	r2, #2
   11df8:	ldr	r3, [sp, #16]
   11dfc:	bl	10f80 <error@plt>
   11e00:	b	11e04 <__assert_fail@plt+0xd1c>
   11e04:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e08:	movw	r1, #2
   11e0c:	bl	17c9c <__assert_fail@plt+0x6bb4>
   11e10:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11e14:	tst	r0, #1
   11e18:	beq	11e40 <__assert_fail@plt+0xd58>
   11e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11e24:	movw	r2, #12628	; 0x3154
   11e28:	movt	r2, #3
   11e2c:	ldr	r2, [r2]
   11e30:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   11e34:	and	r3, r3, #1
   11e38:	bl	13290 <__assert_fail@plt+0x21a8>
   11e3c:	b	11e5c <__assert_fail@plt+0xd74>
   11e40:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11e48:	movw	r2, #12628	; 0x3154
   11e4c:	movt	r2, #3
   11e50:	ldr	r2, [r2]
   11e54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e58:	bl	136c0 <__assert_fail@plt+0x25d8>
   11e5c:	ldr	r0, [fp, #-4]
   11e60:	mov	sp, fp
   11e64:	pop	{fp, pc}
   11e68:	sub	sp, sp, #4
   11e6c:	str	r0, [sp]
   11e70:	ldr	r0, [sp]
   11e74:	add	r0, r0, #2
   11e78:	movw	r1, #21846	; 0x5556
   11e7c:	movt	r1, #21845	; 0x5555
   11e80:	smmul	r0, r0, r1
   11e84:	add	r0, r0, r0, lsr #31
   11e88:	lsl	r0, r0, #2
   11e8c:	add	sp, sp, #4
   11e90:	bx	lr
   11e94:	push	{fp, lr}
   11e98:	mov	fp, sp
   11e9c:	sub	sp, sp, #8
   11ea0:	str	r0, [sp, #4]
   11ea4:	ldr	r0, [sp, #4]
   11ea8:	add	r0, r0, #4
   11eac:	bl	16bf0 <__assert_fail@plt+0x5b08>
   11eb0:	mov	sp, fp
   11eb4:	pop	{fp, pc}
   11eb8:	push	{fp, lr}
   11ebc:	mov	fp, sp
   11ec0:	sub	sp, sp, #32
   11ec4:	ldr	ip, [fp, #8]
   11ec8:	str	r0, [fp, #-4]
   11ecc:	str	r1, [fp, #-8]
   11ed0:	str	r2, [fp, #-12]
   11ed4:	str	r3, [sp, #16]
   11ed8:	ldr	r0, [fp, #-4]
   11edc:	add	r0, r0, #4
   11ee0:	ldr	r1, [fp, #-8]
   11ee4:	ldr	r2, [fp, #-12]
   11ee8:	ldr	r3, [sp, #16]
   11eec:	ldr	lr, [fp, #8]
   11ef0:	str	lr, [sp]
   11ef4:	str	ip, [sp, #8]
   11ef8:	bl	16c0c <__assert_fail@plt+0x5b24>
   11efc:	and	r0, r0, #1
   11f00:	strb	r0, [sp, #15]
   11f04:	ldr	r0, [fp, #-4]
   11f08:	ldr	r0, [r0, #4]
   11f0c:	ldr	r1, [fp, #-4]
   11f10:	str	r0, [r1]
   11f14:	ldrb	r0, [sp, #15]
   11f18:	and	r0, r0, #1
   11f1c:	mov	sp, fp
   11f20:	pop	{fp, pc}
   11f24:	push	{fp, lr}
   11f28:	mov	fp, sp
   11f2c:	sub	sp, sp, #16
   11f30:	strb	r0, [fp, #-1]
   11f34:	ldrb	r0, [fp, #-1]
   11f38:	cmp	r0, #45	; 0x2d
   11f3c:	movw	r0, #1
   11f40:	str	r0, [sp, #8]
   11f44:	beq	11f98 <__assert_fail@plt+0xeb0>
   11f48:	ldrb	r0, [fp, #-1]
   11f4c:	cmp	r0, #95	; 0x5f
   11f50:	movw	r0, #1
   11f54:	str	r0, [sp, #8]
   11f58:	beq	11f98 <__assert_fail@plt+0xeb0>
   11f5c:	ldrb	r0, [fp, #-1]
   11f60:	cmp	r0, #43	; 0x2b
   11f64:	movw	r0, #0
   11f68:	str	r0, [sp, #4]
   11f6c:	beq	11f90 <__assert_fail@plt+0xea8>
   11f70:	ldrb	r0, [fp, #-1]
   11f74:	cmp	r0, #47	; 0x2f
   11f78:	movw	r0, #0
   11f7c:	str	r0, [sp, #4]
   11f80:	beq	11f90 <__assert_fail@plt+0xea8>
   11f84:	ldrb	r0, [fp, #-1]
   11f88:	bl	16ba8 <__assert_fail@plt+0x5ac0>
   11f8c:	str	r0, [sp, #4]
   11f90:	ldr	r0, [sp, #4]
   11f94:	str	r0, [sp, #8]
   11f98:	ldr	r0, [sp, #8]
   11f9c:	and	r0, r0, #1
   11fa0:	mov	sp, fp
   11fa4:	pop	{fp, pc}
   11fa8:	push	{fp, lr}
   11fac:	mov	fp, sp
   11fb0:	sub	sp, sp, #24
   11fb4:	str	r0, [fp, #-4]
   11fb8:	str	r1, [fp, #-8]
   11fbc:	str	r2, [sp, #12]
   11fc0:	str	r3, [sp, #8]
   11fc4:	ldr	r0, [fp, #-4]
   11fc8:	ldr	r1, [fp, #-8]
   11fcc:	ldr	r2, [sp, #12]
   11fd0:	ldr	r3, [sp, #8]
   11fd4:	bl	15a24 <__assert_fail@plt+0x493c>
   11fd8:	ldr	r0, [sp, #12]
   11fdc:	str	r0, [sp, #4]
   11fe0:	ldr	r0, [sp, #8]
   11fe4:	mvn	r1, #0
   11fe8:	add	r1, r0, r1
   11fec:	str	r1, [sp, #8]
   11ff0:	cmp	r0, #0
   11ff4:	beq	12048 <__assert_fail@plt+0xf60>
   11ff8:	ldr	r0, [sp, #4]
   11ffc:	ldrb	r0, [r0]
   12000:	cmp	r0, #43	; 0x2b
   12004:	bne	12018 <__assert_fail@plt+0xf30>
   12008:	ldr	r0, [sp, #4]
   1200c:	movw	r1, #45	; 0x2d
   12010:	strb	r1, [r0]
   12014:	b	12038 <__assert_fail@plt+0xf50>
   12018:	ldr	r0, [sp, #4]
   1201c:	ldrb	r0, [r0]
   12020:	cmp	r0, #47	; 0x2f
   12024:	bne	12034 <__assert_fail@plt+0xf4c>
   12028:	ldr	r0, [sp, #4]
   1202c:	movw	r1, #95	; 0x5f
   12030:	strb	r1, [r0]
   12034:	b	12038 <__assert_fail@plt+0xf50>
   12038:	ldr	r0, [sp, #4]
   1203c:	add	r0, r0, #1
   12040:	str	r0, [sp, #4]
   12044:	b	11fe0 <__assert_fail@plt+0xef8>
   12048:	mov	sp, fp
   1204c:	pop	{fp, pc}
   12050:	push	{fp, lr}
   12054:	mov	fp, sp
   12058:	sub	sp, sp, #8
   1205c:	str	r0, [sp, #4]
   12060:	ldr	r0, [sp, #4]
   12064:	add	r0, r0, #4
   12068:	bl	16bf0 <__assert_fail@plt+0x5b08>
   1206c:	ldr	r0, [sp, #4]
   12070:	bl	13968 <__assert_fail@plt+0x2880>
   12074:	mov	sp, fp
   12078:	pop	{fp, pc}
   1207c:	push	{fp, lr}
   12080:	mov	fp, sp
   12084:	sub	sp, sp, #40	; 0x28
   12088:	ldr	ip, [fp, #8]
   1208c:	str	r0, [fp, #-8]
   12090:	str	r1, [fp, #-12]
   12094:	str	r2, [fp, #-16]
   12098:	str	r3, [sp, #20]
   1209c:	ldr	r0, [fp, #-8]
   120a0:	ldr	r1, [fp, #-16]
   120a4:	str	ip, [sp, #4]
   120a8:	bl	139a0 <__assert_fail@plt+0x28b8>
   120ac:	ldr	r0, [fp, #-8]
   120b0:	ldr	r0, [r0, #16]
   120b4:	ldr	r1, [fp, #-12]
   120b8:	ldr	r2, [fp, #-16]
   120bc:	bl	10ee4 <memcpy@plt>
   120c0:	ldr	r0, [fp, #-16]
   120c4:	str	r0, [sp, #16]
   120c8:	ldr	r0, [fp, #-8]
   120cc:	ldr	r0, [r0, #16]
   120d0:	str	r0, [sp, #12]
   120d4:	ldr	r0, [sp, #16]
   120d8:	mvn	r1, #0
   120dc:	add	r1, r0, r1
   120e0:	str	r1, [sp, #16]
   120e4:	cmp	r0, #0
   120e8:	beq	1217c <__assert_fail@plt+0x1094>
   120ec:	ldr	r0, [sp, #12]
   120f0:	ldrb	r0, [r0]
   120f4:	cmp	r0, #43	; 0x2b
   120f8:	beq	1210c <__assert_fail@plt+0x1024>
   120fc:	ldr	r0, [sp, #12]
   12100:	ldrb	r0, [r0]
   12104:	cmp	r0, #47	; 0x2f
   12108:	bne	12128 <__assert_fail@plt+0x1040>
   1210c:	ldr	r0, [fp, #8]
   12110:	movw	r1, #0
   12114:	str	r1, [r0]
   12118:	movw	r0, #0
   1211c:	and	r0, r0, #1
   12120:	strb	r0, [fp, #-1]
   12124:	b	121c4 <__assert_fail@plt+0x10dc>
   12128:	ldr	r0, [sp, #12]
   1212c:	ldrb	r0, [r0]
   12130:	cmp	r0, #45	; 0x2d
   12134:	bne	12148 <__assert_fail@plt+0x1060>
   12138:	ldr	r0, [sp, #12]
   1213c:	movw	r1, #43	; 0x2b
   12140:	strb	r1, [r0]
   12144:	b	12168 <__assert_fail@plt+0x1080>
   12148:	ldr	r0, [sp, #12]
   1214c:	ldrb	r0, [r0]
   12150:	cmp	r0, #95	; 0x5f
   12154:	bne	12164 <__assert_fail@plt+0x107c>
   12158:	ldr	r0, [sp, #12]
   1215c:	movw	r1, #47	; 0x2f
   12160:	strb	r1, [r0]
   12164:	b	12168 <__assert_fail@plt+0x1080>
   12168:	b	1216c <__assert_fail@plt+0x1084>
   1216c:	ldr	r0, [sp, #12]
   12170:	add	r0, r0, #1
   12174:	str	r0, [sp, #12]
   12178:	b	120d4 <__assert_fail@plt+0xfec>
   1217c:	ldr	r0, [fp, #-8]
   12180:	add	r0, r0, #4
   12184:	ldr	r1, [fp, #-8]
   12188:	ldr	r1, [r1, #16]
   1218c:	ldr	r2, [fp, #-16]
   12190:	ldr	r3, [sp, #20]
   12194:	ldr	ip, [fp, #8]
   12198:	str	ip, [sp]
   1219c:	bl	16c0c <__assert_fail@plt+0x5b24>
   121a0:	and	r0, r0, #1
   121a4:	strb	r0, [sp, #11]
   121a8:	ldr	r0, [fp, #-8]
   121ac:	ldr	r0, [r0, #4]
   121b0:	ldr	r1, [fp, #-8]
   121b4:	str	r0, [r1]
   121b8:	ldrb	r0, [sp, #11]
   121bc:	and	r0, r0, #1
   121c0:	strb	r0, [fp, #-1]
   121c4:	ldrb	r0, [fp, #-1]
   121c8:	and	r0, r0, #1
   121cc:	mov	sp, fp
   121d0:	pop	{fp, pc}
   121d4:	sub	sp, sp, #4
   121d8:	str	r0, [sp]
   121dc:	ldr	r0, [sp]
   121e0:	add	r0, r0, #4
   121e4:	movw	r1, #26215	; 0x6667
   121e8:	movt	r1, #26214	; 0x6666
   121ec:	smmul	r0, r0, r1
   121f0:	asr	r1, r0, #1
   121f4:	add	r0, r1, r0, lsr #31
   121f8:	lsl	r0, r0, #3
   121fc:	add	sp, sp, #4
   12200:	bx	lr
   12204:	push	{fp, lr}
   12208:	mov	fp, sp
   1220c:	sub	sp, sp, #8
   12210:	str	r0, [sp, #4]
   12214:	ldr	r0, [sp, #4]
   12218:	add	r0, r0, #4
   1221c:	bl	14f30 <__assert_fail@plt+0x3e48>
   12220:	mov	sp, fp
   12224:	pop	{fp, pc}
   12228:	push	{fp, lr}
   1222c:	mov	fp, sp
   12230:	sub	sp, sp, #32
   12234:	ldr	ip, [fp, #8]
   12238:	str	r0, [fp, #-4]
   1223c:	str	r1, [fp, #-8]
   12240:	str	r2, [fp, #-12]
   12244:	str	r3, [sp, #16]
   12248:	ldr	r0, [fp, #-4]
   1224c:	add	r0, r0, #4
   12250:	ldr	r1, [fp, #-8]
   12254:	ldr	r2, [fp, #-12]
   12258:	ldr	r3, [sp, #16]
   1225c:	ldr	lr, [fp, #8]
   12260:	str	lr, [sp]
   12264:	str	ip, [sp, #8]
   12268:	bl	14f4c <__assert_fail@plt+0x3e64>
   1226c:	and	r0, r0, #1
   12270:	strb	r0, [sp, #15]
   12274:	ldr	r0, [fp, #-4]
   12278:	ldr	r0, [r0, #4]
   1227c:	ldr	r1, [fp, #-4]
   12280:	str	r0, [r1]
   12284:	ldrb	r0, [sp, #15]
   12288:	and	r0, r0, #1
   1228c:	mov	sp, fp
   12290:	pop	{fp, pc}
   12294:	sub	sp, sp, #12
   12298:	strb	r0, [sp, #11]
   1229c:	ldrb	r0, [sp, #11]
   122a0:	movw	r1, #48	; 0x30
   122a4:	cmp	r1, r0
   122a8:	bgt	122c0 <__assert_fail@plt+0x11d8>
   122ac:	ldrb	r0, [sp, #11]
   122b0:	cmp	r0, #57	; 0x39
   122b4:	movw	r0, #1
   122b8:	str	r0, [sp, #4]
   122bc:	ble	122f4 <__assert_fail@plt+0x120c>
   122c0:	ldrb	r0, [sp, #11]
   122c4:	movw	r1, #65	; 0x41
   122c8:	cmp	r1, r0
   122cc:	movw	r0, #0
   122d0:	str	r0, [sp]
   122d4:	bgt	122ec <__assert_fail@plt+0x1204>
   122d8:	ldrb	r0, [sp, #11]
   122dc:	cmp	r0, #86	; 0x56
   122e0:	movw	r0, #0
   122e4:	movle	r0, #1
   122e8:	str	r0, [sp]
   122ec:	ldr	r0, [sp]
   122f0:	str	r0, [sp, #4]
   122f4:	ldr	r0, [sp, #4]
   122f8:	and	r0, r0, #1
   122fc:	add	sp, sp, #12
   12300:	bx	lr
   12304:	push	{fp, lr}
   12308:	mov	fp, sp
   1230c:	sub	sp, sp, #24
   12310:	str	r0, [fp, #-4]
   12314:	str	r1, [fp, #-8]
   12318:	str	r2, [sp, #12]
   1231c:	str	r3, [sp, #8]
   12320:	ldr	r0, [fp, #-4]
   12324:	ldr	r1, [fp, #-8]
   12328:	ldr	r2, [sp, #12]
   1232c:	ldr	r3, [sp, #8]
   12330:	bl	13c9c <__assert_fail@plt+0x2bb4>
   12334:	ldr	r0, [sp, #12]
   12338:	str	r0, [sp, #4]
   1233c:	ldr	r0, [sp, #8]
   12340:	mvn	r1, #0
   12344:	add	r1, r0, r1
   12348:	str	r1, [sp, #8]
   1234c:	cmp	r0, #0
   12350:	beq	123d0 <__assert_fail@plt+0x12e8>
   12354:	ldr	r0, [sp, #4]
   12358:	ldrb	r0, [r0]
   1235c:	movw	r1, #50	; 0x32
   12360:	cmp	r1, r0
   12364:	bgt	1237c <__assert_fail@plt+0x1294>
   12368:	ldr	r0, [sp, #4]
   1236c:	ldrb	r0, [r0]
   12370:	cmp	r0, #90	; 0x5a
   12374:	bgt	1237c <__assert_fail@plt+0x1294>
   12378:	b	1239c <__assert_fail@plt+0x12b4>
   1237c:	movw	r0, #9349	; 0x2485
   12380:	movt	r0, #2
   12384:	movw	r1, #9374	; 0x249e
   12388:	movt	r1, #2
   1238c:	movw	r2, #452	; 0x1c4
   12390:	movw	r3, #9387	; 0x24ab
   12394:	movt	r3, #2
   12398:	bl	110e8 <__assert_fail@plt>
   1239c:	ldr	r0, [sp, #4]
   123a0:	ldrb	r0, [r0]
   123a4:	sub	r0, r0, #50	; 0x32
   123a8:	movw	r1, #9884	; 0x269c
   123ac:	movt	r1, #2
   123b0:	add	r0, r1, r0
   123b4:	ldrb	r0, [r0]
   123b8:	ldr	r1, [sp, #4]
   123bc:	strb	r0, [r1]
   123c0:	ldr	r0, [sp, #4]
   123c4:	add	r0, r0, #1
   123c8:	str	r0, [sp, #4]
   123cc:	b	1233c <__assert_fail@plt+0x1254>
   123d0:	mov	sp, fp
   123d4:	pop	{fp, pc}
   123d8:	push	{fp, lr}
   123dc:	mov	fp, sp
   123e0:	sub	sp, sp, #8
   123e4:	str	r0, [sp, #4]
   123e8:	ldr	r0, [sp, #4]
   123ec:	add	r0, r0, #4
   123f0:	bl	14f30 <__assert_fail@plt+0x3e48>
   123f4:	ldr	r0, [sp, #4]
   123f8:	bl	13968 <__assert_fail@plt+0x2880>
   123fc:	mov	sp, fp
   12400:	pop	{fp, pc}
   12404:	push	{fp, lr}
   12408:	mov	fp, sp
   1240c:	sub	sp, sp, #40	; 0x28
   12410:	ldr	ip, [fp, #8]
   12414:	str	r0, [fp, #-4]
   12418:	str	r1, [fp, #-8]
   1241c:	str	r2, [fp, #-12]
   12420:	str	r3, [fp, #-16]
   12424:	ldr	r0, [fp, #-4]
   12428:	ldr	r1, [fp, #-12]
   1242c:	str	ip, [sp, #8]
   12430:	bl	139a0 <__assert_fail@plt+0x28b8>
   12434:	ldr	r0, [fp, #-12]
   12438:	str	r0, [sp, #20]
   1243c:	ldr	r0, [fp, #-4]
   12440:	ldr	r0, [r0, #16]
   12444:	str	r0, [sp, #16]
   12448:	ldr	r0, [sp, #20]
   1244c:	mvn	r1, #0
   12450:	add	r1, r0, r1
   12454:	str	r1, [sp, #20]
   12458:	cmp	r0, #0
   1245c:	beq	124c8 <__assert_fail@plt+0x13e0>
   12460:	ldr	r0, [fp, #-8]
   12464:	ldrb	r0, [r0]
   12468:	bl	12294 <__assert_fail@plt+0x11ac>
   1246c:	tst	r0, #1
   12470:	beq	1249c <__assert_fail@plt+0x13b4>
   12474:	ldr	r0, [fp, #-8]
   12478:	ldrb	r0, [r0]
   1247c:	sub	r0, r0, #48	; 0x30
   12480:	movw	r1, #9925	; 0x26c5
   12484:	movt	r1, #2
   12488:	add	r0, r1, r0
   1248c:	ldrb	r0, [r0]
   12490:	ldr	r1, [sp, #16]
   12494:	strb	r0, [r1]
   12498:	b	124ac <__assert_fail@plt+0x13c4>
   1249c:	ldr	r0, [fp, #-8]
   124a0:	ldrb	r0, [r0]
   124a4:	ldr	r1, [sp, #16]
   124a8:	strb	r0, [r1]
   124ac:	ldr	r0, [sp, #16]
   124b0:	add	r0, r0, #1
   124b4:	str	r0, [sp, #16]
   124b8:	ldr	r0, [fp, #-8]
   124bc:	add	r0, r0, #1
   124c0:	str	r0, [fp, #-8]
   124c4:	b	12448 <__assert_fail@plt+0x1360>
   124c8:	ldr	r0, [fp, #-4]
   124cc:	add	r0, r0, #4
   124d0:	ldr	r1, [fp, #-4]
   124d4:	ldr	r1, [r1, #16]
   124d8:	ldr	r2, [fp, #-12]
   124dc:	ldr	r3, [fp, #-16]
   124e0:	ldr	ip, [fp, #8]
   124e4:	str	ip, [sp]
   124e8:	bl	14f4c <__assert_fail@plt+0x3e64>
   124ec:	and	r0, r0, #1
   124f0:	strb	r0, [sp, #15]
   124f4:	ldr	r0, [fp, #-4]
   124f8:	ldr	r0, [r0, #4]
   124fc:	ldr	r1, [fp, #-4]
   12500:	str	r0, [r1]
   12504:	ldrb	r0, [sp, #15]
   12508:	and	r0, r0, #1
   1250c:	mov	sp, fp
   12510:	pop	{fp, pc}
   12514:	sub	sp, sp, #4
   12518:	str	r0, [sp]
   1251c:	ldr	r0, [sp]
   12520:	lsl	r0, r0, #1
   12524:	add	sp, sp, #4
   12528:	bx	lr
   1252c:	sub	sp, sp, #12
   12530:	strb	r0, [sp, #11]
   12534:	ldrb	r0, [sp, #11]
   12538:	movw	r1, #48	; 0x30
   1253c:	cmp	r1, r0
   12540:	bgt	12558 <__assert_fail@plt+0x1470>
   12544:	ldrb	r0, [sp, #11]
   12548:	cmp	r0, #57	; 0x39
   1254c:	movw	r0, #1
   12550:	str	r0, [sp, #4]
   12554:	ble	1258c <__assert_fail@plt+0x14a4>
   12558:	ldrb	r0, [sp, #11]
   1255c:	movw	r1, #65	; 0x41
   12560:	cmp	r1, r0
   12564:	movw	r0, #0
   12568:	str	r0, [sp]
   1256c:	bgt	12584 <__assert_fail@plt+0x149c>
   12570:	ldrb	r0, [sp, #11]
   12574:	cmp	r0, #70	; 0x46
   12578:	movw	r0, #0
   1257c:	movle	r0, #1
   12580:	str	r0, [sp]
   12584:	ldr	r0, [sp]
   12588:	str	r0, [sp, #4]
   1258c:	ldr	r0, [sp, #4]
   12590:	and	r0, r0, #1
   12594:	add	sp, sp, #12
   12598:	bx	lr
   1259c:	sub	sp, sp, #20
   125a0:	str	r0, [sp, #16]
   125a4:	str	r1, [sp, #12]
   125a8:	str	r2, [sp, #8]
   125ac:	str	r3, [sp, #4]
   125b0:	ldr	r0, [sp, #12]
   125b4:	mvn	r1, #0
   125b8:	add	r1, r0, r1
   125bc:	str	r1, [sp, #12]
   125c0:	cmp	r0, #0
   125c4:	beq	1262c <__assert_fail@plt+0x1544>
   125c8:	ldr	r0, [sp, #16]
   125cc:	ldrb	r0, [r0]
   125d0:	strb	r0, [sp, #3]
   125d4:	ldrb	r0, [sp, #3]
   125d8:	asr	r0, r0, #4
   125dc:	movw	r1, #9966	; 0x26ee
   125e0:	movt	r1, #2
   125e4:	add	r0, r1, r0
   125e8:	ldrb	r0, [r0]
   125ec:	ldr	r2, [sp, #8]
   125f0:	add	r3, r2, #1
   125f4:	str	r3, [sp, #8]
   125f8:	strb	r0, [r2]
   125fc:	ldrb	r0, [sp, #3]
   12600:	and	r0, r0, #15
   12604:	add	r0, r1, r0
   12608:	ldrb	r0, [r0]
   1260c:	ldr	r1, [sp, #8]
   12610:	add	r2, r1, #1
   12614:	str	r2, [sp, #8]
   12618:	strb	r0, [r1]
   1261c:	ldr	r0, [sp, #16]
   12620:	add	r0, r0, #1
   12624:	str	r0, [sp, #16]
   12628:	b	125b0 <__assert_fail@plt+0x14c8>
   1262c:	add	sp, sp, #20
   12630:	bx	lr
   12634:	push	{fp, lr}
   12638:	mov	fp, sp
   1263c:	sub	sp, sp, #8
   12640:	str	r0, [sp, #4]
   12644:	ldr	r0, [sp, #4]
   12648:	bl	13968 <__assert_fail@plt+0x2880>
   1264c:	ldr	r0, [sp, #4]
   12650:	movw	r1, #0
   12654:	strb	r1, [r0, #5]
   12658:	ldr	r0, [sp, #4]
   1265c:	movw	r1, #1
   12660:	str	r1, [r0]
   12664:	mov	sp, fp
   12668:	pop	{fp, pc}
   1266c:	sub	sp, sp, #28
   12670:	ldr	ip, [sp, #28]
   12674:	str	r0, [sp, #20]
   12678:	str	r1, [sp, #16]
   1267c:	str	r2, [sp, #12]
   12680:	str	r3, [sp, #8]
   12684:	movw	r0, #1
   12688:	strb	r0, [sp, #7]
   1268c:	ldr	r0, [sp, #28]
   12690:	movw	r1, #0
   12694:	str	r1, [r0]
   12698:	ldr	r0, [sp, #12]
   1269c:	cmp	r0, #0
   126a0:	bne	126c0 <__assert_fail@plt+0x15d8>
   126a4:	ldr	r0, [sp, #20]
   126a8:	ldrb	r0, [r0, #5]
   126ac:	mvn	r1, #0
   126b0:	eor	r0, r0, r1
   126b4:	and	r0, r0, #1
   126b8:	strb	r0, [sp, #27]
   126bc:	b	12808 <__assert_fail@plt+0x1720>
   126c0:	b	126c4 <__assert_fail@plt+0x15dc>
   126c4:	ldr	r0, [sp, #12]
   126c8:	mvn	r1, #0
   126cc:	add	r1, r0, r1
   126d0:	str	r1, [sp, #12]
   126d4:	cmp	r0, #0
   126d8:	beq	127fc <__assert_fail@plt+0x1714>
   126dc:	ldrb	r0, [sp, #7]
   126e0:	tst	r0, #1
   126e4:	beq	12708 <__assert_fail@plt+0x1620>
   126e8:	ldr	r0, [sp, #16]
   126ec:	ldrb	r0, [r0]
   126f0:	cmp	r0, #10
   126f4:	bne	12708 <__assert_fail@plt+0x1620>
   126f8:	ldr	r0, [sp, #16]
   126fc:	add	r0, r0, #1
   12700:	str	r0, [sp, #16]
   12704:	b	126c4 <__assert_fail@plt+0x15dc>
   12708:	ldr	r0, [sp, #16]
   1270c:	add	r1, r0, #1
   12710:	str	r1, [sp, #16]
   12714:	ldrb	r0, [r0]
   12718:	str	r0, [sp]
   1271c:	ldr	r0, [sp]
   12720:	movw	r1, #48	; 0x30
   12724:	cmp	r1, r0
   12728:	bgt	12748 <__assert_fail@plt+0x1660>
   1272c:	ldr	r0, [sp]
   12730:	cmp	r0, #57	; 0x39
   12734:	bgt	12748 <__assert_fail@plt+0x1660>
   12738:	ldr	r0, [sp]
   1273c:	sub	r0, r0, #48	; 0x30
   12740:	str	r0, [sp]
   12744:	b	12788 <__assert_fail@plt+0x16a0>
   12748:	ldr	r0, [sp]
   1274c:	movw	r1, #65	; 0x41
   12750:	cmp	r1, r0
   12754:	bgt	12774 <__assert_fail@plt+0x168c>
   12758:	ldr	r0, [sp]
   1275c:	cmp	r0, #70	; 0x46
   12760:	bgt	12774 <__assert_fail@plt+0x168c>
   12764:	ldr	r0, [sp]
   12768:	sub	r0, r0, #55	; 0x37
   1276c:	str	r0, [sp]
   12770:	b	12784 <__assert_fail@plt+0x169c>
   12774:	movw	r0, #0
   12778:	and	r0, r0, #1
   1277c:	strb	r0, [sp, #27]
   12780:	b	12808 <__assert_fail@plt+0x1720>
   12784:	b	12788 <__assert_fail@plt+0x16a0>
   12788:	ldr	r0, [sp, #20]
   1278c:	ldrb	r0, [r0, #5]
   12790:	tst	r0, #1
   12794:	beq	127d0 <__assert_fail@plt+0x16e8>
   12798:	ldr	r0, [sp, #20]
   1279c:	ldrb	r0, [r0, #4]
   127a0:	lsl	r0, r0, #4
   127a4:	ldr	r1, [sp]
   127a8:	add	r0, r0, r1
   127ac:	ldr	r1, [sp, #8]
   127b0:	add	r2, r1, #1
   127b4:	str	r2, [sp, #8]
   127b8:	strb	r0, [r1]
   127bc:	ldr	r0, [sp, #28]
   127c0:	ldr	r1, [r0]
   127c4:	add	r1, r1, #1
   127c8:	str	r1, [r0]
   127cc:	b	127dc <__assert_fail@plt+0x16f4>
   127d0:	ldr	r0, [sp]
   127d4:	ldr	r1, [sp, #20]
   127d8:	strb	r0, [r1, #4]
   127dc:	ldr	r0, [sp, #20]
   127e0:	ldrb	r0, [r0, #5]
   127e4:	mvn	r1, #0
   127e8:	eor	r0, r0, r1
   127ec:	ldr	r1, [sp, #20]
   127f0:	and	r0, r0, #1
   127f4:	strb	r0, [r1, #5]
   127f8:	b	126c4 <__assert_fail@plt+0x15dc>
   127fc:	movw	r0, #1
   12800:	and	r0, r0, #1
   12804:	strb	r0, [sp, #27]
   12808:	ldrb	r0, [sp, #27]
   1280c:	and	r0, r0, #1
   12810:	add	sp, sp, #28
   12814:	bx	lr
   12818:	sub	sp, sp, #4
   1281c:	str	r0, [sp]
   12820:	ldr	r0, [sp]
   12824:	lsl	r0, r0, #3
   12828:	add	sp, sp, #4
   1282c:	bx	lr
   12830:	sub	sp, sp, #8
   12834:	strb	r0, [sp, #7]
   12838:	ldrb	r0, [sp, #7]
   1283c:	cmp	r0, #48	; 0x30
   12840:	movw	r0, #1
   12844:	str	r0, [sp]
   12848:	beq	12860 <__assert_fail@plt+0x1778>
   1284c:	ldrb	r0, [sp, #7]
   12850:	cmp	r0, #49	; 0x31
   12854:	movw	r0, #0
   12858:	moveq	r0, #1
   1285c:	str	r0, [sp]
   12860:	ldr	r0, [sp]
   12864:	and	r0, r0, #1
   12868:	add	sp, sp, #8
   1286c:	bx	lr
   12870:	sub	sp, sp, #24
   12874:	str	r0, [sp, #20]
   12878:	str	r1, [sp, #16]
   1287c:	str	r2, [sp, #12]
   12880:	str	r3, [sp, #8]
   12884:	ldr	r0, [sp, #16]
   12888:	mvn	r1, #0
   1288c:	add	r1, r0, r1
   12890:	str	r1, [sp, #16]
   12894:	cmp	r0, #0
   12898:	beq	12924 <__assert_fail@plt+0x183c>
   1289c:	ldr	r0, [sp, #20]
   128a0:	ldrb	r0, [r0]
   128a4:	strb	r0, [sp, #7]
   128a8:	movw	r0, #0
   128ac:	str	r0, [sp]
   128b0:	ldr	r0, [sp]
   128b4:	cmp	r0, #8
   128b8:	bge	12908 <__assert_fail@plt+0x1820>
   128bc:	ldrb	r0, [sp, #7]
   128c0:	and	r0, r0, #128	; 0x80
   128c4:	cmp	r0, #0
   128c8:	movw	r0, #0
   128cc:	movne	r0, #1
   128d0:	tst	r0, #1
   128d4:	movw	r0, #49	; 0x31
   128d8:	moveq	r0, #48	; 0x30
   128dc:	ldr	r1, [sp, #12]
   128e0:	add	r2, r1, #1
   128e4:	str	r2, [sp, #12]
   128e8:	strb	r0, [r1]
   128ec:	ldrb	r0, [sp, #7]
   128f0:	lsl	r0, r0, #1
   128f4:	strb	r0, [sp, #7]
   128f8:	ldr	r0, [sp]
   128fc:	add	r0, r0, #1
   12900:	str	r0, [sp]
   12904:	b	128b0 <__assert_fail@plt+0x17c8>
   12908:	ldr	r0, [sp, #8]
   1290c:	sub	r0, r0, #8
   12910:	str	r0, [sp, #8]
   12914:	ldr	r0, [sp, #20]
   12918:	add	r0, r0, #1
   1291c:	str	r0, [sp, #20]
   12920:	b	12884 <__assert_fail@plt+0x179c>
   12924:	add	sp, sp, #24
   12928:	bx	lr
   1292c:	push	{fp, lr}
   12930:	mov	fp, sp
   12934:	sub	sp, sp, #8
   12938:	str	r0, [sp, #4]
   1293c:	ldr	r0, [sp, #4]
   12940:	bl	13968 <__assert_fail@plt+0x2880>
   12944:	ldr	r0, [sp, #4]
   12948:	movw	r1, #0
   1294c:	strb	r1, [r0, #4]
   12950:	ldr	r0, [sp, #4]
   12954:	movw	r1, #0
   12958:	str	r1, [r0]
   1295c:	mov	sp, fp
   12960:	pop	{fp, pc}
   12964:	push	{fp, lr}
   12968:	mov	fp, sp
   1296c:	sub	sp, sp, #24
   12970:	ldr	ip, [fp, #8]
   12974:	str	r0, [fp, #-8]
   12978:	str	r1, [sp, #12]
   1297c:	str	r2, [sp, #8]
   12980:	str	r3, [sp, #4]
   12984:	movw	r0, #1
   12988:	strb	r0, [sp, #3]
   1298c:	ldr	r0, [fp, #8]
   12990:	movw	r1, #0
   12994:	str	r1, [r0]
   12998:	ldr	r0, [sp, #8]
   1299c:	cmp	r0, #0
   129a0:	bne	129c4 <__assert_fail@plt+0x18dc>
   129a4:	ldr	r0, [fp, #-8]
   129a8:	ldr	r0, [r0]
   129ac:	cmp	r0, #0
   129b0:	movw	r0, #0
   129b4:	moveq	r0, #1
   129b8:	and	r0, r0, #1
   129bc:	strb	r0, [fp, #-1]
   129c0:	b	12b0c <__assert_fail@plt+0x1a24>
   129c4:	b	129c8 <__assert_fail@plt+0x18e0>
   129c8:	ldr	r0, [sp, #8]
   129cc:	mvn	r1, #0
   129d0:	add	r1, r0, r1
   129d4:	str	r1, [sp, #8]
   129d8:	cmp	r0, #0
   129dc:	beq	12b00 <__assert_fail@plt+0x1a18>
   129e0:	ldrb	r0, [sp, #3]
   129e4:	tst	r0, #1
   129e8:	beq	12a0c <__assert_fail@plt+0x1924>
   129ec:	ldr	r0, [sp, #12]
   129f0:	ldrb	r0, [r0]
   129f4:	cmp	r0, #10
   129f8:	bne	12a0c <__assert_fail@plt+0x1924>
   129fc:	ldr	r0, [sp, #12]
   12a00:	add	r0, r0, #1
   12a04:	str	r0, [sp, #12]
   12a08:	b	129c8 <__assert_fail@plt+0x18e0>
   12a0c:	ldr	r0, [sp, #12]
   12a10:	ldrb	r0, [r0]
   12a14:	bl	12830 <__assert_fail@plt+0x1748>
   12a18:	tst	r0, #1
   12a1c:	bne	12a30 <__assert_fail@plt+0x1948>
   12a20:	movw	r0, #0
   12a24:	and	r0, r0, #1
   12a28:	strb	r0, [fp, #-1]
   12a2c:	b	12b0c <__assert_fail@plt+0x1a24>
   12a30:	ldr	r0, [sp, #12]
   12a34:	ldrb	r0, [r0]
   12a38:	cmp	r0, #49	; 0x31
   12a3c:	movw	r0, #0
   12a40:	moveq	r0, #1
   12a44:	and	r0, r0, #1
   12a48:	strb	r0, [sp, #2]
   12a4c:	ldr	r0, [fp, #-8]
   12a50:	ldr	r0, [r0]
   12a54:	cmp	r0, #0
   12a58:	bne	12a68 <__assert_fail@plt+0x1980>
   12a5c:	ldr	r0, [fp, #-8]
   12a60:	movw	r1, #8
   12a64:	str	r1, [r0]
   12a68:	ldr	r0, [fp, #-8]
   12a6c:	ldr	r1, [r0]
   12a70:	mvn	r2, #0
   12a74:	add	r1, r1, r2
   12a78:	str	r1, [r0]
   12a7c:	ldrb	r0, [sp, #2]
   12a80:	and	r0, r0, #1
   12a84:	ldr	r1, [fp, #-8]
   12a88:	ldr	r1, [r1]
   12a8c:	lsl	r0, r0, r1
   12a90:	ldr	r1, [fp, #-8]
   12a94:	ldrb	r2, [r1, #4]
   12a98:	orr	r0, r2, r0
   12a9c:	strb	r0, [r1, #4]
   12aa0:	ldr	r0, [fp, #-8]
   12aa4:	ldr	r0, [r0]
   12aa8:	cmp	r0, #0
   12aac:	bne	12af0 <__assert_fail@plt+0x1a08>
   12ab0:	ldr	r0, [fp, #-8]
   12ab4:	ldrb	r0, [r0, #4]
   12ab8:	ldr	r1, [sp, #4]
   12abc:	add	r2, r1, #1
   12ac0:	str	r2, [sp, #4]
   12ac4:	strb	r0, [r1]
   12ac8:	ldr	r0, [fp, #-8]
   12acc:	movw	r1, #0
   12ad0:	strb	r1, [r0, #4]
   12ad4:	ldr	r0, [fp, #8]
   12ad8:	ldr	r1, [r0]
   12adc:	add	r1, r1, #1
   12ae0:	str	r1, [r0]
   12ae4:	ldr	r0, [fp, #-8]
   12ae8:	movw	r1, #0
   12aec:	str	r1, [r0]
   12af0:	ldr	r0, [sp, #12]
   12af4:	add	r0, r0, #1
   12af8:	str	r0, [sp, #12]
   12afc:	b	129c8 <__assert_fail@plt+0x18e0>
   12b00:	movw	r0, #1
   12b04:	and	r0, r0, #1
   12b08:	strb	r0, [fp, #-1]
   12b0c:	ldrb	r0, [fp, #-1]
   12b10:	and	r0, r0, #1
   12b14:	mov	sp, fp
   12b18:	pop	{fp, pc}
   12b1c:	sub	sp, sp, #24
   12b20:	str	r0, [sp, #20]
   12b24:	str	r1, [sp, #16]
   12b28:	str	r2, [sp, #12]
   12b2c:	str	r3, [sp, #8]
   12b30:	ldr	r0, [sp, #16]
   12b34:	mvn	r1, #0
   12b38:	add	r1, r0, r1
   12b3c:	str	r1, [sp, #16]
   12b40:	cmp	r0, #0
   12b44:	beq	12bd0 <__assert_fail@plt+0x1ae8>
   12b48:	ldr	r0, [sp, #20]
   12b4c:	ldrb	r0, [r0]
   12b50:	strb	r0, [sp, #7]
   12b54:	movw	r0, #0
   12b58:	str	r0, [sp]
   12b5c:	ldr	r0, [sp]
   12b60:	cmp	r0, #8
   12b64:	bge	12bb4 <__assert_fail@plt+0x1acc>
   12b68:	ldrb	r0, [sp, #7]
   12b6c:	and	r0, r0, #1
   12b70:	cmp	r0, #0
   12b74:	movw	r0, #0
   12b78:	movne	r0, #1
   12b7c:	tst	r0, #1
   12b80:	movw	r0, #49	; 0x31
   12b84:	moveq	r0, #48	; 0x30
   12b88:	ldr	r1, [sp, #12]
   12b8c:	add	r2, r1, #1
   12b90:	str	r2, [sp, #12]
   12b94:	strb	r0, [r1]
   12b98:	ldrb	r0, [sp, #7]
   12b9c:	asr	r0, r0, #1
   12ba0:	strb	r0, [sp, #7]
   12ba4:	ldr	r0, [sp]
   12ba8:	add	r0, r0, #1
   12bac:	str	r0, [sp]
   12bb0:	b	12b5c <__assert_fail@plt+0x1a74>
   12bb4:	ldr	r0, [sp, #8]
   12bb8:	sub	r0, r0, #8
   12bbc:	str	r0, [sp, #8]
   12bc0:	ldr	r0, [sp, #20]
   12bc4:	add	r0, r0, #1
   12bc8:	str	r0, [sp, #20]
   12bcc:	b	12b30 <__assert_fail@plt+0x1a48>
   12bd0:	add	sp, sp, #24
   12bd4:	bx	lr
   12bd8:	push	{fp, lr}
   12bdc:	mov	fp, sp
   12be0:	sub	sp, sp, #24
   12be4:	ldr	ip, [fp, #8]
   12be8:	str	r0, [fp, #-8]
   12bec:	str	r1, [sp, #12]
   12bf0:	str	r2, [sp, #8]
   12bf4:	str	r3, [sp, #4]
   12bf8:	movw	r0, #1
   12bfc:	strb	r0, [sp, #3]
   12c00:	ldr	r0, [fp, #8]
   12c04:	movw	r1, #0
   12c08:	str	r1, [r0]
   12c0c:	ldr	r0, [sp, #8]
   12c10:	cmp	r0, #0
   12c14:	bne	12c38 <__assert_fail@plt+0x1b50>
   12c18:	ldr	r0, [fp, #-8]
   12c1c:	ldr	r0, [r0]
   12c20:	cmp	r0, #0
   12c24:	movw	r0, #0
   12c28:	moveq	r0, #1
   12c2c:	and	r0, r0, #1
   12c30:	strb	r0, [fp, #-1]
   12c34:	b	12d60 <__assert_fail@plt+0x1c78>
   12c38:	b	12c3c <__assert_fail@plt+0x1b54>
   12c3c:	ldr	r0, [sp, #8]
   12c40:	mvn	r1, #0
   12c44:	add	r1, r0, r1
   12c48:	str	r1, [sp, #8]
   12c4c:	cmp	r0, #0
   12c50:	beq	12d54 <__assert_fail@plt+0x1c6c>
   12c54:	ldrb	r0, [sp, #3]
   12c58:	tst	r0, #1
   12c5c:	beq	12c80 <__assert_fail@plt+0x1b98>
   12c60:	ldr	r0, [sp, #12]
   12c64:	ldrb	r0, [r0]
   12c68:	cmp	r0, #10
   12c6c:	bne	12c80 <__assert_fail@plt+0x1b98>
   12c70:	ldr	r0, [sp, #12]
   12c74:	add	r0, r0, #1
   12c78:	str	r0, [sp, #12]
   12c7c:	b	12c3c <__assert_fail@plt+0x1b54>
   12c80:	ldr	r0, [sp, #12]
   12c84:	ldrb	r0, [r0]
   12c88:	bl	12830 <__assert_fail@plt+0x1748>
   12c8c:	tst	r0, #1
   12c90:	bne	12ca4 <__assert_fail@plt+0x1bbc>
   12c94:	movw	r0, #0
   12c98:	and	r0, r0, #1
   12c9c:	strb	r0, [fp, #-1]
   12ca0:	b	12d60 <__assert_fail@plt+0x1c78>
   12ca4:	ldr	r0, [sp, #12]
   12ca8:	ldrb	r0, [r0]
   12cac:	cmp	r0, #49	; 0x31
   12cb0:	movw	r0, #0
   12cb4:	moveq	r0, #1
   12cb8:	and	r0, r0, #1
   12cbc:	strb	r0, [sp, #2]
   12cc0:	ldrb	r0, [sp, #2]
   12cc4:	and	r0, r0, #1
   12cc8:	ldr	r1, [fp, #-8]
   12ccc:	ldr	r1, [r1]
   12cd0:	lsl	r0, r0, r1
   12cd4:	ldr	r1, [fp, #-8]
   12cd8:	ldrb	r2, [r1, #4]
   12cdc:	orr	r0, r2, r0
   12ce0:	strb	r0, [r1, #4]
   12ce4:	ldr	r0, [fp, #-8]
   12ce8:	ldr	r1, [r0]
   12cec:	add	r1, r1, #1
   12cf0:	str	r1, [r0]
   12cf4:	ldr	r0, [fp, #-8]
   12cf8:	ldr	r0, [r0]
   12cfc:	cmp	r0, #8
   12d00:	bne	12d44 <__assert_fail@plt+0x1c5c>
   12d04:	ldr	r0, [fp, #-8]
   12d08:	ldrb	r0, [r0, #4]
   12d0c:	ldr	r1, [sp, #4]
   12d10:	add	r2, r1, #1
   12d14:	str	r2, [sp, #4]
   12d18:	strb	r0, [r1]
   12d1c:	ldr	r0, [fp, #-8]
   12d20:	movw	r1, #0
   12d24:	strb	r1, [r0, #4]
   12d28:	ldr	r0, [fp, #8]
   12d2c:	ldr	r1, [r0]
   12d30:	add	r1, r1, #1
   12d34:	str	r1, [r0]
   12d38:	ldr	r0, [fp, #-8]
   12d3c:	movw	r1, #0
   12d40:	str	r1, [r0]
   12d44:	ldr	r0, [sp, #12]
   12d48:	add	r0, r0, #1
   12d4c:	str	r0, [sp, #12]
   12d50:	b	12c3c <__assert_fail@plt+0x1b54>
   12d54:	movw	r0, #1
   12d58:	and	r0, r0, #1
   12d5c:	strb	r0, [fp, #-1]
   12d60:	ldrb	r0, [fp, #-1]
   12d64:	and	r0, r0, #1
   12d68:	mov	sp, fp
   12d6c:	pop	{fp, pc}
   12d70:	sub	sp, sp, #8
   12d74:	str	r0, [sp, #4]
   12d78:	ldr	r0, [sp, #4]
   12d7c:	movw	r1, #5
   12d80:	mul	r0, r0, r1
   12d84:	movw	r1, #4
   12d88:	sdiv	r0, r0, r1
   12d8c:	str	r0, [sp]
   12d90:	ldr	r0, [sp]
   12d94:	add	sp, sp, #8
   12d98:	bx	lr
   12d9c:	push	{fp, lr}
   12da0:	mov	fp, sp
   12da4:	sub	sp, sp, #8
   12da8:	strb	r0, [fp, #-1]
   12dac:	ldrb	r0, [fp, #-1]
   12db0:	bl	17490 <__assert_fail@plt+0x63a8>
   12db4:	tst	r0, #1
   12db8:	movw	r0, #1
   12dbc:	str	r0, [sp]
   12dc0:	bne	12de8 <__assert_fail@plt+0x1d00>
   12dc4:	ldrb	r1, [fp, #-1]
   12dc8:	movw	r0, #9461	; 0x24f5
   12dcc:	movt	r0, #2
   12dd0:	bl	10ff8 <strchr@plt>
   12dd4:	movw	r1, #0
   12dd8:	cmp	r0, r1
   12ddc:	movw	r0, #0
   12de0:	movne	r0, #1
   12de4:	str	r0, [sp]
   12de8:	ldr	r0, [sp]
   12dec:	and	r0, r0, #1
   12df0:	mov	sp, fp
   12df4:	pop	{fp, pc}
   12df8:	push	{fp, lr}
   12dfc:	mov	fp, sp
   12e00:	sub	sp, sp, #72	; 0x48
   12e04:	str	r0, [fp, #-4]
   12e08:	str	r1, [fp, #-8]
   12e0c:	str	r2, [fp, #-12]
   12e10:	str	r3, [fp, #-16]
   12e14:	movw	r0, #0
   12e18:	str	r0, [fp, #-20]	; 0xffffffec
   12e1c:	str	r0, [fp, #-28]	; 0xffffffe4
   12e20:	ldr	r0, [fp, #-8]
   12e24:	cmp	r0, #0
   12e28:	bne	12e64 <__assert_fail@plt+0x1d7c>
   12e2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e30:	cmp	r0, #0
   12e34:	bne	12e40 <__assert_fail@plt+0x1d58>
   12e38:	mov	sp, fp
   12e3c:	pop	{fp, pc}
   12e40:	movw	r0, #9485	; 0x250d
   12e44:	movt	r0, #2
   12e48:	bl	10fe0 <gettext@plt>
   12e4c:	movw	r1, #1
   12e50:	str	r0, [sp, #20]
   12e54:	mov	r0, r1
   12e58:	movw	r1, #0
   12e5c:	ldr	r2, [sp, #20]
   12e60:	bl	10f80 <error@plt>
   12e64:	ldr	r0, [fp, #-4]
   12e68:	add	r1, r0, #1
   12e6c:	str	r1, [fp, #-4]
   12e70:	ldrb	r0, [r0]
   12e74:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e78:	add	r2, r1, #1
   12e7c:	str	r2, [fp, #-20]	; 0xffffffec
   12e80:	sub	r2, fp, #24
   12e84:	add	r1, r2, r1
   12e88:	strb	r0, [r1]
   12e8c:	ldr	r0, [fp, #-8]
   12e90:	mvn	r1, #0
   12e94:	add	r0, r0, r1
   12e98:	str	r0, [fp, #-8]
   12e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ea0:	cmp	r0, #4
   12ea4:	bne	12fc0 <__assert_fail@plt+0x1ed8>
   12ea8:	ldrb	r0, [fp, #-24]	; 0xffffffe8
   12eac:	mov	r1, #0
   12eb0:	str	r1, [sp, #36]	; 0x24
   12eb4:	str	r0, [sp, #32]
   12eb8:	ldr	r0, [sp, #32]
   12ebc:	ldr	r1, [sp, #36]	; 0x24
   12ec0:	lsl	r1, r1, #24
   12ec4:	orr	r1, r1, r0, lsr #8
   12ec8:	lsl	r0, r0, #24
   12ecc:	ldrb	r2, [fp, #-23]	; 0xffffffe9
   12ed0:	ldrb	r3, [fp, #-22]	; 0xffffffea
   12ed4:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   12ed8:	orr	r0, r0, r2, lsl #16
   12edc:	orr	r0, r0, r3, lsl #8
   12ee0:	orr	r0, r0, ip
   12ee4:	str	r1, [sp, #36]	; 0x24
   12ee8:	str	r0, [sp, #32]
   12eec:	movw	r0, #4
   12ef0:	str	r0, [sp, #28]
   12ef4:	ldr	r0, [sp, #28]
   12ef8:	cmp	r0, #0
   12efc:	blt	12fa0 <__assert_fail@plt+0x1eb8>
   12f00:	ldr	r0, [sp, #32]
   12f04:	ldr	r1, [sp, #36]	; 0x24
   12f08:	mov	r2, #85	; 0x55
   12f0c:	mov	r3, #0
   12f10:	str	r2, [sp, #16]
   12f14:	str	r3, [sp, #12]
   12f18:	bl	21990 <__assert_fail@plt+0x108a8>
   12f1c:	str	r2, [sp, #24]
   12f20:	ldr	r2, [sp, #32]
   12f24:	ldr	r3, [sp, #36]	; 0x24
   12f28:	str	r0, [sp, #8]
   12f2c:	mov	r0, r2
   12f30:	str	r1, [sp, #4]
   12f34:	mov	r1, r3
   12f38:	ldr	r2, [sp, #16]
   12f3c:	ldr	r3, [sp, #12]
   12f40:	bl	21990 <__assert_fail@plt+0x108a8>
   12f44:	str	r1, [sp, #36]	; 0x24
   12f48:	str	r0, [sp, #32]
   12f4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f50:	ldr	r1, [sp, #28]
   12f54:	add	r0, r0, r1
   12f58:	ldr	r1, [fp, #-16]
   12f5c:	cmp	r0, r1
   12f60:	bge	12f88 <__assert_fail@plt+0x1ea0>
   12f64:	ldr	r0, [sp, #24]
   12f68:	movw	r1, #9982	; 0x26fe
   12f6c:	movt	r1, #2
   12f70:	add	r0, r1, r0
   12f74:	ldrb	r0, [r0]
   12f78:	ldr	r1, [fp, #-12]
   12f7c:	ldr	r2, [sp, #28]
   12f80:	add	r1, r1, r2
   12f84:	strb	r0, [r1]
   12f88:	b	12f8c <__assert_fail@plt+0x1ea4>
   12f8c:	ldr	r0, [sp, #28]
   12f90:	mvn	r1, #0
   12f94:	add	r0, r0, r1
   12f98:	str	r0, [sp, #28]
   12f9c:	b	12ef4 <__assert_fail@plt+0x1e0c>
   12fa0:	ldr	r0, [fp, #-12]
   12fa4:	add	r0, r0, #5
   12fa8:	str	r0, [fp, #-12]
   12fac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12fb0:	add	r0, r0, #5
   12fb4:	str	r0, [fp, #-28]	; 0xffffffe4
   12fb8:	movw	r0, #0
   12fbc:	str	r0, [fp, #-20]	; 0xffffffec
   12fc0:	b	12e20 <__assert_fail@plt+0x1d38>
   12fc4:	push	{fp, lr}
   12fc8:	mov	fp, sp
   12fcc:	sub	sp, sp, #8
   12fd0:	str	r0, [sp, #4]
   12fd4:	ldr	r0, [sp, #4]
   12fd8:	bl	13968 <__assert_fail@plt+0x2880>
   12fdc:	ldr	r0, [sp, #4]
   12fe0:	movw	r1, #0
   12fe4:	str	r1, [r0, #4]
   12fe8:	ldr	r0, [sp, #4]
   12fec:	movw	r1, #1
   12ff0:	str	r1, [r0]
   12ff4:	mov	sp, fp
   12ff8:	pop	{fp, pc}
   12ffc:	sub	sp, sp, #32
   13000:	ldr	ip, [sp, #32]
   13004:	str	r0, [sp, #24]
   13008:	str	r1, [sp, #20]
   1300c:	str	r2, [sp, #16]
   13010:	str	r3, [sp, #12]
   13014:	movw	r0, #1
   13018:	strb	r0, [sp, #11]
   1301c:	ldr	r0, [sp, #32]
   13020:	movw	r1, #0
   13024:	str	r1, [r0]
   13028:	ldr	r0, [sp, #16]
   1302c:	cmp	r0, #0
   13030:	bne	13064 <__assert_fail@plt+0x1f7c>
   13034:	ldr	r0, [sp, #24]
   13038:	ldr	r0, [r0, #4]
   1303c:	cmp	r0, #0
   13040:	ble	13054 <__assert_fail@plt+0x1f6c>
   13044:	movw	r0, #0
   13048:	and	r0, r0, #1
   1304c:	strb	r0, [sp, #31]
   13050:	b	13280 <__assert_fail@plt+0x2198>
   13054:	movw	r0, #1
   13058:	and	r0, r0, #1
   1305c:	strb	r0, [sp, #31]
   13060:	b	13280 <__assert_fail@plt+0x2198>
   13064:	b	13068 <__assert_fail@plt+0x1f80>
   13068:	ldr	r0, [sp, #16]
   1306c:	mvn	r1, #0
   13070:	add	r1, r0, r1
   13074:	str	r1, [sp, #16]
   13078:	cmp	r0, #0
   1307c:	beq	13264 <__assert_fail@plt+0x217c>
   13080:	ldrb	r0, [sp, #11]
   13084:	tst	r0, #1
   13088:	beq	130ac <__assert_fail@plt+0x1fc4>
   1308c:	ldr	r0, [sp, #20]
   13090:	ldrb	r0, [r0]
   13094:	cmp	r0, #10
   13098:	bne	130ac <__assert_fail@plt+0x1fc4>
   1309c:	ldr	r0, [sp, #20]
   130a0:	add	r0, r0, #1
   130a4:	str	r0, [sp, #20]
   130a8:	b	13068 <__assert_fail@plt+0x1f80>
   130ac:	ldr	r0, [sp, #20]
   130b0:	ldrb	r0, [r0]
   130b4:	strb	r0, [sp, #10]
   130b8:	ldrb	r0, [sp, #10]
   130bc:	cmp	r0, #33	; 0x21
   130c0:	blt	13114 <__assert_fail@plt+0x202c>
   130c4:	ldrb	r0, [sp, #10]
   130c8:	cmp	r0, #125	; 0x7d
   130cc:	bgt	13114 <__assert_fail@plt+0x202c>
   130d0:	ldrb	r0, [sp, #10]
   130d4:	sub	r0, r0, #33	; 0x21
   130d8:	movw	r1, #10067	; 0x2753
   130dc:	movt	r1, #2
   130e0:	add	r0, r1, r0
   130e4:	ldrb	r0, [r0]
   130e8:	strb	r0, [sp, #9]
   130ec:	ldrsb	r0, [sp, #9]
   130f0:	cmp	r0, #0
   130f4:	bge	13108 <__assert_fail@plt+0x2020>
   130f8:	movw	r0, #0
   130fc:	and	r0, r0, #1
   13100:	strb	r0, [sp, #31]
   13104:	b	13280 <__assert_fail@plt+0x2198>
   13108:	ldrb	r0, [sp, #9]
   1310c:	strb	r0, [sp, #10]
   13110:	b	13124 <__assert_fail@plt+0x203c>
   13114:	movw	r0, #0
   13118:	and	r0, r0, #1
   1311c:	strb	r0, [sp, #31]
   13120:	b	13280 <__assert_fail@plt+0x2198>
   13124:	ldr	r0, [sp, #20]
   13128:	add	r0, r0, #1
   1312c:	str	r0, [sp, #20]
   13130:	ldrb	r0, [sp, #10]
   13134:	ldr	r1, [sp, #24]
   13138:	add	r1, r1, #4
   1313c:	add	r1, r1, #4
   13140:	ldr	r2, [sp, #24]
   13144:	ldr	r3, [r2, #4]
   13148:	add	ip, r3, #1
   1314c:	str	ip, [r2, #4]
   13150:	add	r1, r1, r3
   13154:	strb	r0, [r1]
   13158:	ldr	r0, [sp, #24]
   1315c:	ldr	r0, [r0, #4]
   13160:	cmp	r0, #5
   13164:	bne	13260 <__assert_fail@plt+0x2178>
   13168:	ldr	r0, [sp, #24]
   1316c:	ldrb	r1, [r0, #9]
   13170:	ldrb	r2, [r0, #10]
   13174:	ldrb	r3, [r0, #11]
   13178:	ldrb	r0, [r0, #12]
   1317c:	movw	ip, #24301	; 0x5eed
   13180:	movt	ip, #9
   13184:	mul	r1, r1, ip
   13188:	movw	ip, #7225	; 0x1c39
   1318c:	smlabb	r1, r2, ip, r1
   13190:	mov	r2, #85	; 0x55
   13194:	smlabb	r1, r3, r2, r1
   13198:	add	r0, r1, r0
   1319c:	mov	r1, #0
   131a0:	str	r1, [sp, #4]
   131a4:	str	r0, [sp]
   131a8:	ldr	r0, [sp, #24]
   131ac:	ldrb	r0, [r0, #8]
   131b0:	ldr	r1, [sp]
   131b4:	ldr	r2, [sp, #4]
   131b8:	movw	r3, #33969	; 0x84b1
   131bc:	movt	r3, #796	; 0x31c
   131c0:	umlal	r1, r2, r0, r3
   131c4:	str	r2, [sp, #4]
   131c8:	str	r1, [sp]
   131cc:	ldr	r0, [sp, #4]
   131d0:	lsl	r1, r0, #8
   131d4:	orr	r0, r1, r0, asr #24
   131d8:	cmp	r0, #0
   131dc:	beq	131f4 <__assert_fail@plt+0x210c>
   131e0:	b	131e4 <__assert_fail@plt+0x20fc>
   131e4:	movw	r0, #0
   131e8:	and	r0, r0, #1
   131ec:	strb	r0, [sp, #31]
   131f0:	b	13280 <__assert_fail@plt+0x2198>
   131f4:	ldrb	r0, [sp, #3]
   131f8:	ldr	r1, [sp, #12]
   131fc:	add	r2, r1, #1
   13200:	str	r2, [sp, #12]
   13204:	strb	r0, [r1]
   13208:	ldrb	r0, [sp, #2]
   1320c:	ldr	r1, [sp, #12]
   13210:	add	r2, r1, #1
   13214:	str	r2, [sp, #12]
   13218:	strb	r0, [r1]
   1321c:	ldrb	r0, [sp, #1]
   13220:	ldr	r1, [sp, #12]
   13224:	add	r2, r1, #1
   13228:	str	r2, [sp, #12]
   1322c:	strb	r0, [r1]
   13230:	ldrb	r0, [sp]
   13234:	ldr	r1, [sp, #12]
   13238:	add	r2, r1, #1
   1323c:	str	r2, [sp, #12]
   13240:	strb	r0, [r1]
   13244:	ldr	r0, [sp, #32]
   13248:	ldr	r1, [r0]
   1324c:	add	r1, r1, #4
   13250:	str	r1, [r0]
   13254:	ldr	r0, [sp, #24]
   13258:	movw	r1, #0
   1325c:	str	r1, [r0, #4]
   13260:	b	13068 <__assert_fail@plt+0x1f80>
   13264:	ldr	r0, [sp, #24]
   13268:	ldr	r0, [r0, #4]
   1326c:	ldr	r1, [sp, #24]
   13270:	str	r0, [r1]
   13274:	movw	r0, #1
   13278:	and	r0, r0, #1
   1327c:	strb	r0, [sp, #31]
   13280:	ldrb	r0, [sp, #31]
   13284:	and	r0, r0, #1
   13288:	add	sp, sp, #32
   1328c:	bx	lr
   13290:	push	{fp, lr}
   13294:	mov	fp, sp
   13298:	sub	sp, sp, #144	; 0x90
   1329c:	str	r0, [fp, #-4]
   132a0:	str	r1, [fp, #-8]
   132a4:	str	r2, [fp, #-12]
   132a8:	and	r0, r3, #1
   132ac:	strb	r0, [fp, #-13]
   132b0:	movw	r0, #12640	; 0x3160
   132b4:	movt	r0, #3
   132b8:	ldr	r0, [r0]
   132bc:	movw	r1, #4200	; 0x1068
   132c0:	str	r0, [sp, #68]	; 0x44
   132c4:	mov	r0, r1
   132c8:	ldr	r1, [sp, #68]	; 0x44
   132cc:	blx	r1
   132d0:	bl	1c548 <__assert_fail@plt+0xb460>
   132d4:	str	r0, [fp, #-20]	; 0xffffffec
   132d8:	movw	r0, #4200	; 0x1068
   132dc:	bl	1c548 <__assert_fail@plt+0xb460>
   132e0:	str	r0, [fp, #-24]	; 0xffffffe8
   132e4:	movw	r0, #0
   132e8:	str	r0, [fp, #-36]	; 0xffffffdc
   132ec:	movw	r0, #12652	; 0x316c
   132f0:	movt	r0, #3
   132f4:	ldr	r0, [r0]
   132f8:	sub	r1, fp, #52	; 0x34
   132fc:	str	r0, [sp, #64]	; 0x40
   13300:	mov	r0, r1
   13304:	ldr	r1, [sp, #64]	; 0x40
   13308:	blx	r1
   1330c:	movw	r0, #0
   13310:	str	r0, [fp, #-28]	; 0xffffffe4
   13314:	ldr	r0, [fp, #-20]	; 0xffffffec
   13318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1331c:	add	r0, r0, r1
   13320:	movw	r1, #12640	; 0x3160
   13324:	movt	r1, #3
   13328:	ldr	r1, [r1]
   1332c:	movw	r2, #4200	; 0x1068
   13330:	str	r0, [sp, #60]	; 0x3c
   13334:	mov	r0, r2
   13338:	blx	r1
   1333c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13340:	sub	r2, r0, r1
   13344:	ldr	r3, [fp, #-4]
   13348:	ldr	r0, [sp, #60]	; 0x3c
   1334c:	movw	r1, #1
   13350:	bl	110ac <fread_unlocked@plt>
   13354:	str	r0, [fp, #-60]	; 0xffffffc4
   13358:	ldrb	r0, [fp, #-13]
   1335c:	tst	r0, #1
   13360:	beq	13460 <__assert_fail@plt+0x2378>
   13364:	movw	r0, #0
   13368:	str	r0, [fp, #-64]	; 0xffffffc0
   1336c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13370:	cmp	r0, #0
   13374:	movw	r0, #0
   13378:	str	r0, [sp, #56]	; 0x38
   1337c:	ble	13398 <__assert_fail@plt+0x22b0>
   13380:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13384:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13388:	cmp	r0, r1
   1338c:	movw	r0, #0
   13390:	movlt	r0, #1
   13394:	str	r0, [sp, #56]	; 0x38
   13398:	ldr	r0, [sp, #56]	; 0x38
   1339c:	tst	r0, #1
   133a0:	beq	1345c <__assert_fail@plt+0x2374>
   133a4:	movw	r0, #12644	; 0x3164
   133a8:	movt	r0, #3
   133ac:	ldr	r0, [r0]
   133b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   133b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   133b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   133bc:	add	r2, r2, r3
   133c0:	add	r1, r1, r2
   133c4:	ldrb	r1, [r1]
   133c8:	str	r0, [sp, #52]	; 0x34
   133cc:	mov	r0, r1
   133d0:	ldr	r1, [sp, #52]	; 0x34
   133d4:	blx	r1
   133d8:	tst	r0, #1
   133dc:	bne	13400 <__assert_fail@plt+0x2318>
   133e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   133e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   133ec:	add	r1, r1, r2
   133f0:	add	r0, r0, r1
   133f4:	ldrb	r0, [r0]
   133f8:	cmp	r0, #61	; 0x3d
   133fc:	bne	13410 <__assert_fail@plt+0x2328>
   13400:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13404:	add	r0, r0, #1
   13408:	str	r0, [fp, #-64]	; 0xffffffc0
   1340c:	b	13458 <__assert_fail@plt+0x2370>
   13410:	ldr	r0, [fp, #-20]	; 0xffffffec
   13414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13418:	add	r0, r0, r1
   1341c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13420:	add	r0, r0, r1
   13424:	ldr	r1, [fp, #-20]	; 0xffffffec
   13428:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1342c:	add	r1, r1, r2
   13430:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13434:	add	r1, r1, r2
   13438:	add	r1, r1, #1
   1343c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13440:	mvn	r3, #0
   13444:	add	r2, r2, r3
   13448:	str	r2, [fp, #-60]	; 0xffffffc4
   1344c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13450:	sub	r2, r2, r3
   13454:	bl	10ec0 <memmove@plt>
   13458:	b	1336c <__assert_fail@plt+0x2284>
   1345c:	b	13460 <__assert_fail@plt+0x2378>
   13460:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13464:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13468:	add	r0, r1, r0
   1346c:	str	r0, [fp, #-28]	; 0xffffffe4
   13470:	ldr	r0, [fp, #-4]
   13474:	bl	10f68 <ferror_unlocked@plt>
   13478:	cmp	r0, #0
   1347c:	beq	134b0 <__assert_fail@plt+0x23c8>
   13480:	bl	11010 <__errno_location@plt>
   13484:	ldr	r1, [r0]
   13488:	movw	r0, #9541	; 0x2545
   1348c:	movt	r0, #2
   13490:	str	r1, [sp, #48]	; 0x30
   13494:	bl	10fe0 <gettext@plt>
   13498:	movw	r1, #1
   1349c:	str	r0, [sp, #44]	; 0x2c
   134a0:	mov	r0, r1
   134a4:	ldr	r1, [sp, #48]	; 0x30
   134a8:	ldr	r2, [sp, #44]	; 0x2c
   134ac:	bl	10f80 <error@plt>
   134b0:	b	134b4 <__assert_fail@plt+0x23cc>
   134b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134b8:	movw	r1, #12640	; 0x3160
   134bc:	movt	r1, #3
   134c0:	ldr	r1, [r1]
   134c4:	movw	r2, #4200	; 0x1068
   134c8:	str	r0, [sp, #40]	; 0x28
   134cc:	mov	r0, r2
   134d0:	blx	r1
   134d4:	ldr	r1, [sp, #40]	; 0x28
   134d8:	cmp	r1, r0
   134dc:	movw	r0, #0
   134e0:	str	r0, [sp, #36]	; 0x24
   134e4:	bge	13508 <__assert_fail@plt+0x2420>
   134e8:	ldr	r0, [fp, #-4]
   134ec:	bl	110dc <feof_unlocked@plt>
   134f0:	cmp	r0, #0
   134f4:	movw	r0, #0
   134f8:	movne	r0, #1
   134fc:	mvn	r1, #0
   13500:	eor	r0, r0, r1
   13504:	str	r0, [sp, #36]	; 0x24
   13508:	ldr	r0, [sp, #36]	; 0x24
   1350c:	tst	r0, #1
   13510:	bne	13314 <__assert_fail@plt+0x222c>
   13514:	movw	r0, #0
   13518:	str	r0, [fp, #-68]	; 0xffffffbc
   1351c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13520:	ldr	r1, [fp, #-4]
   13524:	str	r0, [sp, #32]
   13528:	mov	r0, r1
   1352c:	bl	110dc <feof_unlocked@plt>
   13530:	cmp	r0, #0
   13534:	movw	r0, #0
   13538:	movne	r0, #1
   1353c:	mvn	r1, #0
   13540:	eor	r0, r0, r1
   13544:	eor	r0, r0, r1
   13548:	and	r0, r0, #1
   1354c:	add	r0, r0, #1
   13550:	ldr	r1, [sp, #32]
   13554:	cmp	r1, r0
   13558:	bge	13684 <__assert_fail@plt+0x259c>
   1355c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13560:	cmp	r0, #1
   13564:	bne	13578 <__assert_fail@plt+0x2490>
   13568:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1356c:	cmp	r0, #0
   13570:	bne	13578 <__assert_fail@plt+0x2490>
   13574:	b	13684 <__assert_fail@plt+0x259c>
   13578:	movw	r0, #4200	; 0x1068
   1357c:	str	r0, [sp, #72]	; 0x48
   13580:	movw	r0, #12656	; 0x3170
   13584:	movt	r0, #3
   13588:	ldr	r0, [r0]
   1358c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13590:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13594:	cmp	r2, #0
   13598:	str	r0, [sp, #28]
   1359c:	str	r1, [sp, #24]
   135a0:	bne	135b0 <__assert_fail@plt+0x24c8>
   135a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   135a8:	str	r0, [sp, #20]
   135ac:	b	135bc <__assert_fail@plt+0x24d4>
   135b0:	movw	r0, #0
   135b4:	str	r0, [sp, #20]
   135b8:	b	135bc <__assert_fail@plt+0x24d4>
   135bc:	ldr	r0, [sp, #20]
   135c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   135c4:	sub	r1, fp, #52	; 0x34
   135c8:	str	r0, [sp, #16]
   135cc:	mov	r0, r1
   135d0:	ldr	r1, [sp, #24]
   135d4:	ldr	r2, [sp, #16]
   135d8:	add	ip, sp, #72	; 0x48
   135dc:	str	ip, [sp]
   135e0:	ldr	ip, [sp, #28]
   135e4:	blx	ip
   135e8:	and	r0, r0, #1
   135ec:	strb	r0, [fp, #-53]	; 0xffffffcb
   135f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135f4:	ldr	r2, [sp, #72]	; 0x48
   135f8:	ldr	r3, [fp, #-12]
   135fc:	movw	r1, #1
   13600:	bl	10efc <fwrite_unlocked@plt>
   13604:	ldr	r1, [sp, #72]	; 0x48
   13608:	cmp	r0, r1
   1360c:	bcs	13640 <__assert_fail@plt+0x2558>
   13610:	bl	11010 <__errno_location@plt>
   13614:	ldr	r1, [r0]
   13618:	movw	r0, #9552	; 0x2550
   1361c:	movt	r0, #2
   13620:	str	r1, [sp, #12]
   13624:	bl	10fe0 <gettext@plt>
   13628:	movw	r1, #1
   1362c:	str	r0, [sp, #8]
   13630:	mov	r0, r1
   13634:	ldr	r1, [sp, #12]
   13638:	ldr	r2, [sp, #8]
   1363c:	bl	10f80 <error@plt>
   13640:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   13644:	tst	r0, #1
   13648:	bne	13670 <__assert_fail@plt+0x2588>
   1364c:	movw	r0, #9564	; 0x255c
   13650:	movt	r0, #2
   13654:	bl	10fe0 <gettext@plt>
   13658:	movw	r1, #1
   1365c:	str	r0, [sp, #4]
   13660:	mov	r0, r1
   13664:	movw	r1, #0
   13668:	ldr	r2, [sp, #4]
   1366c:	bl	10f80 <error@plt>
   13670:	b	13674 <__assert_fail@plt+0x258c>
   13674:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13678:	add	r0, r0, #1
   1367c:	str	r0, [fp, #-68]	; 0xffffffbc
   13680:	b	1351c <__assert_fail@plt+0x2434>
   13684:	b	13688 <__assert_fail@plt+0x25a0>
   13688:	ldr	r0, [fp, #-4]
   1368c:	bl	110dc <feof_unlocked@plt>
   13690:	cmp	r0, #0
   13694:	movw	r0, #0
   13698:	movne	r0, #1
   1369c:	mvn	r1, #0
   136a0:	eor	r0, r0, r1
   136a4:	tst	r0, #1
   136a8:	bne	1330c <__assert_fail@plt+0x2224>
   136ac:	ldr	r0, [fp, #-4]
   136b0:	ldr	r1, [fp, #-8]
   136b4:	bl	13a00 <__assert_fail@plt+0x2918>
   136b8:	mov	sp, fp
   136bc:	pop	{fp, pc}
   136c0:	push	{fp, lr}
   136c4:	mov	fp, sp
   136c8:	sub	sp, sp, #104	; 0x68
   136cc:	str	r0, [fp, #-4]
   136d0:	str	r1, [fp, #-8]
   136d4:	str	r2, [fp, #-12]
   136d8:	str	r3, [fp, #-16]
   136dc:	movw	r0, #0
   136e0:	str	r0, [fp, #-20]	; 0xffffffec
   136e4:	movw	r0, #30720	; 0x7800
   136e8:	bl	1c548 <__assert_fail@plt+0xb460>
   136ec:	str	r0, [fp, #-24]	; 0xffffffe8
   136f0:	movw	r0, #12640	; 0x3160
   136f4:	movt	r0, #3
   136f8:	ldr	r0, [r0]
   136fc:	movw	r1, #30720	; 0x7800
   13700:	str	r0, [fp, #-40]	; 0xffffffd8
   13704:	mov	r0, r1
   13708:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1370c:	blx	r1
   13710:	bl	1c548 <__assert_fail@plt+0xb460>
   13714:	str	r0, [fp, #-28]	; 0xffffffe4
   13718:	movw	r0, #0
   1371c:	str	r0, [fp, #-32]	; 0xffffffe0
   13720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13724:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13728:	add	r0, r0, r1
   1372c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13730:	movw	r2, #30720	; 0x7800
   13734:	sub	r2, r2, r1
   13738:	ldr	r3, [fp, #-4]
   1373c:	movw	r1, #1
   13740:	bl	110ac <fread_unlocked@plt>
   13744:	str	r0, [fp, #-36]	; 0xffffffdc
   13748:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1374c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13750:	add	r0, r1, r0
   13754:	str	r0, [fp, #-32]	; 0xffffffe0
   13758:	ldr	r0, [fp, #-4]
   1375c:	bl	110dc <feof_unlocked@plt>
   13760:	cmp	r0, #0
   13764:	movw	r0, #0
   13768:	str	r0, [fp, #-44]	; 0xffffffd4
   1376c:	bne	1379c <__assert_fail@plt+0x26b4>
   13770:	ldr	r0, [fp, #-4]
   13774:	bl	10f68 <ferror_unlocked@plt>
   13778:	cmp	r0, #0
   1377c:	movw	r0, #0
   13780:	str	r0, [fp, #-44]	; 0xffffffd4
   13784:	bne	1379c <__assert_fail@plt+0x26b4>
   13788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1378c:	cmp	r0, #30720	; 0x7800
   13790:	movw	r0, #0
   13794:	movlt	r0, #1
   13798:	str	r0, [fp, #-44]	; 0xffffffd4
   1379c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137a0:	tst	r0, #1
   137a4:	bne	13720 <__assert_fail@plt+0x2638>
   137a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137ac:	cmp	r0, #0
   137b0:	ble	13864 <__assert_fail@plt+0x277c>
   137b4:	movw	r0, #12648	; 0x3168
   137b8:	movt	r0, #3
   137bc:	ldr	r0, [r0]
   137c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   137cc:	movw	ip, #12640	; 0x3160
   137d0:	movt	ip, #3
   137d4:	ldr	ip, [ip]
   137d8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   137dc:	str	r0, [fp, #-48]	; 0xffffffd0
   137e0:	mov	r0, lr
   137e4:	str	r1, [sp, #52]	; 0x34
   137e8:	str	r2, [sp, #48]	; 0x30
   137ec:	str	r3, [sp, #44]	; 0x2c
   137f0:	blx	ip
   137f4:	ldr	r1, [sp, #52]	; 0x34
   137f8:	str	r0, [sp, #40]	; 0x28
   137fc:	mov	r0, r1
   13800:	ldr	r1, [sp, #48]	; 0x30
   13804:	ldr	r2, [sp, #44]	; 0x2c
   13808:	ldr	r3, [sp, #40]	; 0x28
   1380c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   13810:	blx	ip
   13814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13818:	movw	r1, #12640	; 0x3160
   1381c:	movt	r1, #3
   13820:	ldr	r1, [r1]
   13824:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13828:	str	r0, [sp, #36]	; 0x24
   1382c:	mov	r0, r2
   13830:	blx	r1
   13834:	ldr	r2, [fp, #-16]
   13838:	ldr	r1, [fp, #-12]
   1383c:	ldr	r3, [sp, #36]	; 0x24
   13840:	str	r0, [sp, #32]
   13844:	mov	r0, r3
   13848:	ldr	ip, [sp, #32]
   1384c:	str	r1, [sp, #28]
   13850:	mov	r1, ip
   13854:	sub	r3, fp, #20
   13858:	ldr	lr, [sp, #28]
   1385c:	str	lr, [sp]
   13860:	bl	13ab4 <__assert_fail@plt+0x29cc>
   13864:	b	13868 <__assert_fail@plt+0x2780>
   13868:	ldr	r0, [fp, #-4]
   1386c:	bl	110dc <feof_unlocked@plt>
   13870:	cmp	r0, #0
   13874:	movw	r0, #0
   13878:	str	r0, [sp, #24]
   1387c:	bne	138ac <__assert_fail@plt+0x27c4>
   13880:	ldr	r0, [fp, #-4]
   13884:	bl	10f68 <ferror_unlocked@plt>
   13888:	cmp	r0, #0
   1388c:	movw	r0, #0
   13890:	str	r0, [sp, #24]
   13894:	bne	138ac <__assert_fail@plt+0x27c4>
   13898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1389c:	cmp	r0, #30720	; 0x7800
   138a0:	movw	r0, #0
   138a4:	moveq	r0, #1
   138a8:	str	r0, [sp, #24]
   138ac:	ldr	r0, [sp, #24]
   138b0:	tst	r0, #1
   138b4:	bne	13718 <__assert_fail@plt+0x2630>
   138b8:	ldr	r0, [fp, #-16]
   138bc:	cmp	r0, #0
   138c0:	beq	13914 <__assert_fail@plt+0x282c>
   138c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   138c8:	cmp	r0, #0
   138cc:	ble	13914 <__assert_fail@plt+0x282c>
   138d0:	ldr	r1, [fp, #-12]
   138d4:	movw	r0, #10
   138d8:	bl	10f14 <fputc_unlocked@plt>
   138dc:	cmn	r0, #1
   138e0:	bne	13914 <__assert_fail@plt+0x282c>
   138e4:	bl	11010 <__errno_location@plt>
   138e8:	ldr	r1, [r0]
   138ec:	movw	r0, #9552	; 0x2550
   138f0:	movt	r0, #2
   138f4:	str	r1, [sp, #20]
   138f8:	bl	10fe0 <gettext@plt>
   138fc:	movw	r1, #1
   13900:	str	r0, [sp, #16]
   13904:	mov	r0, r1
   13908:	ldr	r1, [sp, #20]
   1390c:	ldr	r2, [sp, #16]
   13910:	bl	10f80 <error@plt>
   13914:	ldr	r0, [fp, #-4]
   13918:	bl	10f68 <ferror_unlocked@plt>
   1391c:	cmp	r0, #0
   13920:	beq	13954 <__assert_fail@plt+0x286c>
   13924:	bl	11010 <__errno_location@plt>
   13928:	ldr	r1, [r0]
   1392c:	movw	r0, #9541	; 0x2545
   13930:	movt	r0, #2
   13934:	str	r1, [sp, #12]
   13938:	bl	10fe0 <gettext@plt>
   1393c:	movw	r1, #1
   13940:	str	r0, [sp, #8]
   13944:	mov	r0, r1
   13948:	ldr	r1, [sp, #12]
   1394c:	ldr	r2, [sp, #8]
   13950:	bl	10f80 <error@plt>
   13954:	ldr	r0, [fp, #-4]
   13958:	ldr	r1, [fp, #-8]
   1395c:	bl	13a00 <__assert_fail@plt+0x2918>
   13960:	mov	sp, fp
   13964:	pop	{fp, pc}
   13968:	push	{fp, lr}
   1396c:	mov	fp, sp
   13970:	sub	sp, sp, #8
   13974:	str	r0, [sp, #4]
   13978:	ldr	r0, [sp, #4]
   1397c:	movw	r1, #4200	; 0x1068
   13980:	str	r1, [r0, #20]
   13984:	ldr	r0, [sp, #4]
   13988:	ldr	r0, [r0, #20]
   1398c:	bl	1c5c0 <__assert_fail@plt+0xb4d8>
   13990:	ldr	r1, [sp, #4]
   13994:	str	r0, [r1, #16]
   13998:	mov	sp, fp
   1399c:	pop	{fp, pc}
   139a0:	push	{fp, lr}
   139a4:	mov	fp, sp
   139a8:	sub	sp, sp, #8
   139ac:	str	r0, [sp, #4]
   139b0:	str	r1, [sp]
   139b4:	ldr	r0, [sp, #4]
   139b8:	ldr	r0, [r0, #20]
   139bc:	ldr	r1, [sp]
   139c0:	cmp	r0, r1
   139c4:	bge	139f8 <__assert_fail@plt+0x2910>
   139c8:	ldr	r0, [sp]
   139cc:	lsl	r0, r0, #1
   139d0:	ldr	r1, [sp, #4]
   139d4:	str	r0, [r1, #20]
   139d8:	ldr	r0, [sp, #4]
   139dc:	ldr	r0, [r0, #16]
   139e0:	ldr	r1, [sp, #4]
   139e4:	ldr	r1, [r1, #20]
   139e8:	movw	r2, #1
   139ec:	bl	1c4a4 <__assert_fail@plt+0xb3bc>
   139f0:	ldr	r1, [sp, #4]
   139f4:	str	r0, [r1, #16]
   139f8:	mov	sp, fp
   139fc:	pop	{fp, pc}
   13a00:	push	{fp, lr}
   13a04:	mov	fp, sp
   13a08:	sub	sp, sp, #24
   13a0c:	str	r0, [fp, #-4]
   13a10:	str	r1, [fp, #-8]
   13a14:	ldr	r0, [fp, #-4]
   13a18:	bl	17cf4 <__assert_fail@plt+0x6c0c>
   13a1c:	cmp	r0, #0
   13a20:	beq	13aac <__assert_fail@plt+0x29c4>
   13a24:	ldr	r0, [fp, #-8]
   13a28:	movw	r1, #10849	; 0x2a61
   13a2c:	movt	r1, #2
   13a30:	bl	10e90 <strcmp@plt>
   13a34:	cmp	r0, #0
   13a38:	bne	13a6c <__assert_fail@plt+0x2984>
   13a3c:	bl	11010 <__errno_location@plt>
   13a40:	ldr	r1, [r0]
   13a44:	movw	r0, #9578	; 0x256a
   13a48:	movt	r0, #2
   13a4c:	str	r1, [sp, #12]
   13a50:	bl	10fe0 <gettext@plt>
   13a54:	movw	r1, #1
   13a58:	str	r0, [sp, #8]
   13a5c:	mov	r0, r1
   13a60:	ldr	r1, [sp, #12]
   13a64:	ldr	r2, [sp, #8]
   13a68:	bl	10f80 <error@plt>
   13a6c:	bl	11010 <__errno_location@plt>
   13a70:	ldr	r1, [r0]
   13a74:	ldr	r2, [fp, #-8]
   13a78:	movw	r0, #0
   13a7c:	movw	r3, #3
   13a80:	str	r1, [sp, #4]
   13a84:	mov	r1, r3
   13a88:	bl	1a5c0 <__assert_fail@plt+0x94d8>
   13a8c:	movw	r1, #1
   13a90:	str	r0, [sp]
   13a94:	mov	r0, r1
   13a98:	ldr	r1, [sp, #4]
   13a9c:	movw	r2, #8696	; 0x21f8
   13aa0:	movt	r2, #2
   13aa4:	ldr	r3, [sp]
   13aa8:	bl	10f80 <error@plt>
   13aac:	movw	r0, #0
   13ab0:	bl	10fd4 <exit@plt>
   13ab4:	push	{fp, lr}
   13ab8:	mov	fp, sp
   13abc:	sub	sp, sp, #56	; 0x38
   13ac0:	ldr	ip, [fp, #8]
   13ac4:	str	r0, [fp, #-4]
   13ac8:	str	r1, [fp, #-8]
   13acc:	str	r2, [fp, #-12]
   13ad0:	str	r3, [fp, #-16]
   13ad4:	ldr	r0, [fp, #-12]
   13ad8:	cmp	r0, #0
   13adc:	bne	13b3c <__assert_fail@plt+0x2a54>
   13ae0:	ldr	r0, [fp, #-4]
   13ae4:	ldr	r2, [fp, #-8]
   13ae8:	movw	r1, #12628	; 0x3154
   13aec:	movt	r1, #3
   13af0:	ldr	r3, [r1]
   13af4:	movw	r1, #1
   13af8:	bl	10efc <fwrite_unlocked@plt>
   13afc:	ldr	r1, [fp, #-8]
   13b00:	cmp	r0, r1
   13b04:	bcs	13b38 <__assert_fail@plt+0x2a50>
   13b08:	bl	11010 <__errno_location@plt>
   13b0c:	ldr	r1, [r0]
   13b10:	movw	r0, #9552	; 0x2550
   13b14:	movt	r0, #2
   13b18:	str	r1, [sp, #28]
   13b1c:	bl	10fe0 <gettext@plt>
   13b20:	movw	r1, #1
   13b24:	str	r0, [sp, #24]
   13b28:	mov	r0, r1
   13b2c:	ldr	r1, [sp, #28]
   13b30:	ldr	r2, [sp, #24]
   13b34:	bl	10f80 <error@plt>
   13b38:	b	13c94 <__assert_fail@plt+0x2bac>
   13b3c:	movw	r0, #0
   13b40:	str	r0, [fp, #-20]	; 0xffffffec
   13b44:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b48:	ldr	r1, [fp, #-8]
   13b4c:	cmp	r0, r1
   13b50:	bge	13c90 <__assert_fail@plt+0x2ba8>
   13b54:	ldr	r0, [fp, #-12]
   13b58:	ldr	r1, [fp, #-16]
   13b5c:	ldr	r1, [r1]
   13b60:	sub	r0, r0, r1
   13b64:	ldr	r1, [fp, #-8]
   13b68:	ldr	r2, [fp, #-20]	; 0xffffffec
   13b6c:	sub	r1, r1, r2
   13b70:	cmp	r0, r1
   13b74:	bge	13b90 <__assert_fail@plt+0x2aa8>
   13b78:	ldr	r0, [fp, #-12]
   13b7c:	ldr	r1, [fp, #-16]
   13b80:	ldr	r1, [r1]
   13b84:	sub	r0, r0, r1
   13b88:	str	r0, [sp, #20]
   13b8c:	b	13ba0 <__assert_fail@plt+0x2ab8>
   13b90:	ldr	r0, [fp, #-8]
   13b94:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b98:	sub	r0, r0, r1
   13b9c:	str	r0, [sp, #20]
   13ba0:	ldr	r0, [sp, #20]
   13ba4:	str	r0, [fp, #-24]	; 0xffffffe8
   13ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bac:	cmp	r0, #0
   13bb0:	bne	13c08 <__assert_fail@plt+0x2b20>
   13bb4:	ldr	r1, [fp, #8]
   13bb8:	movw	r0, #10
   13bbc:	bl	10f14 <fputc_unlocked@plt>
   13bc0:	cmn	r0, #1
   13bc4:	bne	13bf8 <__assert_fail@plt+0x2b10>
   13bc8:	bl	11010 <__errno_location@plt>
   13bcc:	ldr	r1, [r0]
   13bd0:	movw	r0, #9552	; 0x2550
   13bd4:	movt	r0, #2
   13bd8:	str	r1, [sp, #16]
   13bdc:	bl	10fe0 <gettext@plt>
   13be0:	movw	r1, #1
   13be4:	str	r0, [sp, #12]
   13be8:	mov	r0, r1
   13bec:	ldr	r1, [sp, #16]
   13bf0:	ldr	r2, [sp, #12]
   13bf4:	bl	10f80 <error@plt>
   13bf8:	ldr	r0, [fp, #-16]
   13bfc:	movw	r1, #0
   13c00:	str	r1, [r0]
   13c04:	b	13c8c <__assert_fail@plt+0x2ba4>
   13c08:	ldr	r0, [fp, #-4]
   13c0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c10:	add	r0, r0, r1
   13c14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c18:	movw	r1, #12628	; 0x3154
   13c1c:	movt	r1, #3
   13c20:	ldr	r3, [r1]
   13c24:	movw	r1, #1
   13c28:	bl	10efc <fwrite_unlocked@plt>
   13c2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c30:	cmp	r0, r1
   13c34:	bcs	13c68 <__assert_fail@plt+0x2b80>
   13c38:	bl	11010 <__errno_location@plt>
   13c3c:	ldr	r1, [r0]
   13c40:	movw	r0, #9552	; 0x2550
   13c44:	movt	r0, #2
   13c48:	str	r1, [sp, #8]
   13c4c:	bl	10fe0 <gettext@plt>
   13c50:	movw	r1, #1
   13c54:	str	r0, [sp, #4]
   13c58:	mov	r0, r1
   13c5c:	ldr	r1, [sp, #8]
   13c60:	ldr	r2, [sp, #4]
   13c64:	bl	10f80 <error@plt>
   13c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c6c:	ldr	r1, [fp, #-16]
   13c70:	ldr	r2, [r1]
   13c74:	add	r0, r2, r0
   13c78:	str	r0, [r1]
   13c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c80:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c84:	add	r0, r1, r0
   13c88:	str	r0, [fp, #-20]	; 0xffffffec
   13c8c:	b	13b44 <__assert_fail@plt+0x2a5c>
   13c90:	b	13c94 <__assert_fail@plt+0x2bac>
   13c94:	mov	sp, fp
   13c98:	pop	{fp, pc}
   13c9c:	push	{fp, lr}
   13ca0:	mov	fp, sp
   13ca4:	sub	sp, sp, #80	; 0x50
   13ca8:	str	r0, [fp, #-4]
   13cac:	str	r1, [fp, #-8]
   13cb0:	str	r2, [fp, #-12]
   13cb4:	str	r3, [fp, #-16]
   13cb8:	ldr	r0, [fp, #-8]
   13cbc:	cmp	r0, #0
   13cc0:	movw	r0, #0
   13cc4:	str	r0, [fp, #-20]	; 0xffffffec
   13cc8:	beq	13ce0 <__assert_fail@plt+0x2bf8>
   13ccc:	ldr	r0, [fp, #-16]
   13cd0:	cmp	r0, #0
   13cd4:	movw	r0, #0
   13cd8:	movne	r0, #1
   13cdc:	str	r0, [fp, #-20]	; 0xffffffec
   13ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ce4:	tst	r0, #1
   13ce8:	beq	141d8 <__assert_fail@plt+0x30f0>
   13cec:	ldr	r0, [fp, #-4]
   13cf0:	ldrb	r0, [r0]
   13cf4:	bl	141f8 <__assert_fail@plt+0x3110>
   13cf8:	and	r0, r0, #255	; 0xff
   13cfc:	asr	r0, r0, #3
   13d00:	and	r0, r0, #31
   13d04:	movw	r1, #10175	; 0x27bf
   13d08:	movt	r1, #2
   13d0c:	add	r0, r1, r0
   13d10:	ldrb	r0, [r0]
   13d14:	ldr	r1, [fp, #-12]
   13d18:	add	r2, r1, #1
   13d1c:	str	r2, [fp, #-12]
   13d20:	strb	r0, [r1]
   13d24:	ldr	r0, [fp, #-16]
   13d28:	mvn	r1, #0
   13d2c:	add	r0, r0, r1
   13d30:	str	r0, [fp, #-16]
   13d34:	cmp	r0, #0
   13d38:	bne	13d40 <__assert_fail@plt+0x2c58>
   13d3c:	b	141d8 <__assert_fail@plt+0x30f0>
   13d40:	ldr	r0, [fp, #-4]
   13d44:	ldrb	r0, [r0]
   13d48:	bl	141f8 <__assert_fail@plt+0x3110>
   13d4c:	and	r0, r0, #255	; 0xff
   13d50:	lsl	r0, r0, #2
   13d54:	ldr	r1, [fp, #-8]
   13d58:	mvn	r2, #0
   13d5c:	add	r1, r1, r2
   13d60:	str	r1, [fp, #-8]
   13d64:	cmp	r1, #0
   13d68:	str	r0, [fp, #-24]	; 0xffffffe8
   13d6c:	beq	13d8c <__assert_fail@plt+0x2ca4>
   13d70:	ldr	r0, [fp, #-4]
   13d74:	ldrb	r0, [r0, #1]
   13d78:	bl	141f8 <__assert_fail@plt+0x3110>
   13d7c:	and	r0, r0, #255	; 0xff
   13d80:	asr	r0, r0, #6
   13d84:	str	r0, [fp, #-28]	; 0xffffffe4
   13d88:	b	13d98 <__assert_fail@plt+0x2cb0>
   13d8c:	movw	r0, #0
   13d90:	str	r0, [fp, #-28]	; 0xffffffe4
   13d94:	b	13d98 <__assert_fail@plt+0x2cb0>
   13d98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13da0:	add	r0, r1, r0
   13da4:	and	r0, r0, #31
   13da8:	movw	r2, #10175	; 0x27bf
   13dac:	movt	r2, #2
   13db0:	add	r0, r2, r0
   13db4:	ldrb	r0, [r0]
   13db8:	ldr	r2, [fp, #-12]
   13dbc:	add	r3, r2, #1
   13dc0:	str	r3, [fp, #-12]
   13dc4:	strb	r0, [r2]
   13dc8:	ldr	r0, [fp, #-16]
   13dcc:	mvn	r2, #0
   13dd0:	add	r0, r0, r2
   13dd4:	str	r0, [fp, #-16]
   13dd8:	cmp	r0, #0
   13ddc:	bne	13de4 <__assert_fail@plt+0x2cfc>
   13de0:	b	141d8 <__assert_fail@plt+0x30f0>
   13de4:	ldr	r0, [fp, #-8]
   13de8:	cmp	r0, #0
   13dec:	beq	13e20 <__assert_fail@plt+0x2d38>
   13df0:	ldr	r0, [fp, #-4]
   13df4:	ldrb	r0, [r0, #1]
   13df8:	bl	141f8 <__assert_fail@plt+0x3110>
   13dfc:	and	r0, r0, #255	; 0xff
   13e00:	asr	r0, r0, #1
   13e04:	and	r0, r0, #31
   13e08:	movw	r1, #10175	; 0x27bf
   13e0c:	movt	r1, #2
   13e10:	add	r0, r1, r0
   13e14:	ldrb	r0, [r0]
   13e18:	str	r0, [fp, #-32]	; 0xffffffe0
   13e1c:	b	13e2c <__assert_fail@plt+0x2d44>
   13e20:	movw	r0, #61	; 0x3d
   13e24:	str	r0, [fp, #-32]	; 0xffffffe0
   13e28:	b	13e2c <__assert_fail@plt+0x2d44>
   13e2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e30:	ldr	r1, [fp, #-12]
   13e34:	add	r2, r1, #1
   13e38:	str	r2, [fp, #-12]
   13e3c:	strb	r0, [r1]
   13e40:	ldr	r0, [fp, #-16]
   13e44:	mvn	r1, #0
   13e48:	add	r0, r0, r1
   13e4c:	str	r0, [fp, #-16]
   13e50:	cmp	r0, #0
   13e54:	bne	13e5c <__assert_fail@plt+0x2d74>
   13e58:	b	141d8 <__assert_fail@plt+0x30f0>
   13e5c:	ldr	r0, [fp, #-8]
   13e60:	cmp	r0, #0
   13e64:	beq	13ee8 <__assert_fail@plt+0x2e00>
   13e68:	ldr	r0, [fp, #-4]
   13e6c:	ldrb	r0, [r0, #1]
   13e70:	bl	141f8 <__assert_fail@plt+0x3110>
   13e74:	and	r0, r0, #255	; 0xff
   13e78:	lsl	r0, r0, #4
   13e7c:	ldr	r1, [fp, #-8]
   13e80:	mvn	r2, #0
   13e84:	add	r1, r1, r2
   13e88:	str	r1, [fp, #-8]
   13e8c:	cmp	r1, #0
   13e90:	str	r0, [fp, #-36]	; 0xffffffdc
   13e94:	beq	13eb4 <__assert_fail@plt+0x2dcc>
   13e98:	ldr	r0, [fp, #-4]
   13e9c:	ldrb	r0, [r0, #2]
   13ea0:	bl	141f8 <__assert_fail@plt+0x3110>
   13ea4:	and	r0, r0, #255	; 0xff
   13ea8:	asr	r0, r0, #4
   13eac:	str	r0, [sp, #40]	; 0x28
   13eb0:	b	13ec0 <__assert_fail@plt+0x2dd8>
   13eb4:	movw	r0, #0
   13eb8:	str	r0, [sp, #40]	; 0x28
   13ebc:	b	13ec0 <__assert_fail@plt+0x2dd8>
   13ec0:	ldr	r0, [sp, #40]	; 0x28
   13ec4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ec8:	add	r0, r1, r0
   13ecc:	and	r0, r0, #31
   13ed0:	movw	r2, #10175	; 0x27bf
   13ed4:	movt	r2, #2
   13ed8:	add	r0, r2, r0
   13edc:	ldrb	r0, [r0]
   13ee0:	str	r0, [sp, #36]	; 0x24
   13ee4:	b	13ef4 <__assert_fail@plt+0x2e0c>
   13ee8:	movw	r0, #61	; 0x3d
   13eec:	str	r0, [sp, #36]	; 0x24
   13ef0:	b	13ef4 <__assert_fail@plt+0x2e0c>
   13ef4:	ldr	r0, [sp, #36]	; 0x24
   13ef8:	ldr	r1, [fp, #-12]
   13efc:	add	r2, r1, #1
   13f00:	str	r2, [fp, #-12]
   13f04:	strb	r0, [r1]
   13f08:	ldr	r0, [fp, #-16]
   13f0c:	mvn	r1, #0
   13f10:	add	r0, r0, r1
   13f14:	str	r0, [fp, #-16]
   13f18:	cmp	r0, #0
   13f1c:	bne	13f24 <__assert_fail@plt+0x2e3c>
   13f20:	b	141d8 <__assert_fail@plt+0x30f0>
   13f24:	ldr	r0, [fp, #-8]
   13f28:	cmp	r0, #0
   13f2c:	beq	13fb0 <__assert_fail@plt+0x2ec8>
   13f30:	ldr	r0, [fp, #-4]
   13f34:	ldrb	r0, [r0, #2]
   13f38:	bl	141f8 <__assert_fail@plt+0x3110>
   13f3c:	and	r0, r0, #255	; 0xff
   13f40:	lsl	r0, r0, #1
   13f44:	ldr	r1, [fp, #-8]
   13f48:	mvn	r2, #0
   13f4c:	add	r1, r1, r2
   13f50:	str	r1, [fp, #-8]
   13f54:	cmp	r1, #0
   13f58:	str	r0, [sp, #32]
   13f5c:	beq	13f7c <__assert_fail@plt+0x2e94>
   13f60:	ldr	r0, [fp, #-4]
   13f64:	ldrb	r0, [r0, #3]
   13f68:	bl	141f8 <__assert_fail@plt+0x3110>
   13f6c:	and	r0, r0, #255	; 0xff
   13f70:	asr	r0, r0, #7
   13f74:	str	r0, [sp, #28]
   13f78:	b	13f88 <__assert_fail@plt+0x2ea0>
   13f7c:	movw	r0, #0
   13f80:	str	r0, [sp, #28]
   13f84:	b	13f88 <__assert_fail@plt+0x2ea0>
   13f88:	ldr	r0, [sp, #28]
   13f8c:	ldr	r1, [sp, #32]
   13f90:	add	r0, r1, r0
   13f94:	and	r0, r0, #31
   13f98:	movw	r2, #10175	; 0x27bf
   13f9c:	movt	r2, #2
   13fa0:	add	r0, r2, r0
   13fa4:	ldrb	r0, [r0]
   13fa8:	str	r0, [sp, #24]
   13fac:	b	13fbc <__assert_fail@plt+0x2ed4>
   13fb0:	movw	r0, #61	; 0x3d
   13fb4:	str	r0, [sp, #24]
   13fb8:	b	13fbc <__assert_fail@plt+0x2ed4>
   13fbc:	ldr	r0, [sp, #24]
   13fc0:	ldr	r1, [fp, #-12]
   13fc4:	add	r2, r1, #1
   13fc8:	str	r2, [fp, #-12]
   13fcc:	strb	r0, [r1]
   13fd0:	ldr	r0, [fp, #-16]
   13fd4:	mvn	r1, #0
   13fd8:	add	r0, r0, r1
   13fdc:	str	r0, [fp, #-16]
   13fe0:	cmp	r0, #0
   13fe4:	bne	13fec <__assert_fail@plt+0x2f04>
   13fe8:	b	141d8 <__assert_fail@plt+0x30f0>
   13fec:	ldr	r0, [fp, #-8]
   13ff0:	cmp	r0, #0
   13ff4:	beq	14028 <__assert_fail@plt+0x2f40>
   13ff8:	ldr	r0, [fp, #-4]
   13ffc:	ldrb	r0, [r0, #3]
   14000:	bl	141f8 <__assert_fail@plt+0x3110>
   14004:	and	r0, r0, #255	; 0xff
   14008:	asr	r0, r0, #2
   1400c:	and	r0, r0, #31
   14010:	movw	r1, #10175	; 0x27bf
   14014:	movt	r1, #2
   14018:	add	r0, r1, r0
   1401c:	ldrb	r0, [r0]
   14020:	str	r0, [sp, #20]
   14024:	b	14034 <__assert_fail@plt+0x2f4c>
   14028:	movw	r0, #61	; 0x3d
   1402c:	str	r0, [sp, #20]
   14030:	b	14034 <__assert_fail@plt+0x2f4c>
   14034:	ldr	r0, [sp, #20]
   14038:	ldr	r1, [fp, #-12]
   1403c:	add	r2, r1, #1
   14040:	str	r2, [fp, #-12]
   14044:	strb	r0, [r1]
   14048:	ldr	r0, [fp, #-16]
   1404c:	mvn	r1, #0
   14050:	add	r0, r0, r1
   14054:	str	r0, [fp, #-16]
   14058:	cmp	r0, #0
   1405c:	bne	14064 <__assert_fail@plt+0x2f7c>
   14060:	b	141d8 <__assert_fail@plt+0x30f0>
   14064:	ldr	r0, [fp, #-8]
   14068:	cmp	r0, #0
   1406c:	beq	140f0 <__assert_fail@plt+0x3008>
   14070:	ldr	r0, [fp, #-4]
   14074:	ldrb	r0, [r0, #3]
   14078:	bl	141f8 <__assert_fail@plt+0x3110>
   1407c:	and	r0, r0, #255	; 0xff
   14080:	lsl	r0, r0, #3
   14084:	ldr	r1, [fp, #-8]
   14088:	mvn	r2, #0
   1408c:	add	r1, r1, r2
   14090:	str	r1, [fp, #-8]
   14094:	cmp	r1, #0
   14098:	str	r0, [sp, #16]
   1409c:	beq	140bc <__assert_fail@plt+0x2fd4>
   140a0:	ldr	r0, [fp, #-4]
   140a4:	ldrb	r0, [r0, #4]
   140a8:	bl	141f8 <__assert_fail@plt+0x3110>
   140ac:	and	r0, r0, #255	; 0xff
   140b0:	asr	r0, r0, #5
   140b4:	str	r0, [sp, #12]
   140b8:	b	140c8 <__assert_fail@plt+0x2fe0>
   140bc:	movw	r0, #0
   140c0:	str	r0, [sp, #12]
   140c4:	b	140c8 <__assert_fail@plt+0x2fe0>
   140c8:	ldr	r0, [sp, #12]
   140cc:	ldr	r1, [sp, #16]
   140d0:	add	r0, r1, r0
   140d4:	and	r0, r0, #31
   140d8:	movw	r2, #10175	; 0x27bf
   140dc:	movt	r2, #2
   140e0:	add	r0, r2, r0
   140e4:	ldrb	r0, [r0]
   140e8:	str	r0, [sp, #8]
   140ec:	b	140fc <__assert_fail@plt+0x3014>
   140f0:	movw	r0, #61	; 0x3d
   140f4:	str	r0, [sp, #8]
   140f8:	b	140fc <__assert_fail@plt+0x3014>
   140fc:	ldr	r0, [sp, #8]
   14100:	ldr	r1, [fp, #-12]
   14104:	add	r2, r1, #1
   14108:	str	r2, [fp, #-12]
   1410c:	strb	r0, [r1]
   14110:	ldr	r0, [fp, #-16]
   14114:	mvn	r1, #0
   14118:	add	r0, r0, r1
   1411c:	str	r0, [fp, #-16]
   14120:	cmp	r0, #0
   14124:	bne	1412c <__assert_fail@plt+0x3044>
   14128:	b	141d8 <__assert_fail@plt+0x30f0>
   1412c:	ldr	r0, [fp, #-8]
   14130:	cmp	r0, #0
   14134:	beq	14164 <__assert_fail@plt+0x307c>
   14138:	ldr	r0, [fp, #-4]
   1413c:	ldrb	r0, [r0, #4]
   14140:	bl	141f8 <__assert_fail@plt+0x3110>
   14144:	and	r0, r0, #255	; 0xff
   14148:	and	r0, r0, #31
   1414c:	movw	r1, #10175	; 0x27bf
   14150:	movt	r1, #2
   14154:	add	r0, r1, r0
   14158:	ldrb	r0, [r0]
   1415c:	str	r0, [sp, #4]
   14160:	b	14170 <__assert_fail@plt+0x3088>
   14164:	movw	r0, #61	; 0x3d
   14168:	str	r0, [sp, #4]
   1416c:	b	14170 <__assert_fail@plt+0x3088>
   14170:	ldr	r0, [sp, #4]
   14174:	ldr	r1, [fp, #-12]
   14178:	add	r2, r1, #1
   1417c:	str	r2, [fp, #-12]
   14180:	strb	r0, [r1]
   14184:	ldr	r0, [fp, #-16]
   14188:	mvn	r1, #0
   1418c:	add	r0, r0, r1
   14190:	str	r0, [fp, #-16]
   14194:	cmp	r0, #0
   14198:	bne	141a0 <__assert_fail@plt+0x30b8>
   1419c:	b	141d8 <__assert_fail@plt+0x30f0>
   141a0:	ldr	r0, [fp, #-8]
   141a4:	cmp	r0, #0
   141a8:	beq	141bc <__assert_fail@plt+0x30d4>
   141ac:	ldr	r0, [fp, #-8]
   141b0:	mvn	r1, #0
   141b4:	add	r0, r0, r1
   141b8:	str	r0, [fp, #-8]
   141bc:	ldr	r0, [fp, #-8]
   141c0:	cmp	r0, #0
   141c4:	beq	141d4 <__assert_fail@plt+0x30ec>
   141c8:	ldr	r0, [fp, #-4]
   141cc:	add	r0, r0, #5
   141d0:	str	r0, [fp, #-4]
   141d4:	b	13cb8 <__assert_fail@plt+0x2bd0>
   141d8:	ldr	r0, [fp, #-16]
   141dc:	cmp	r0, #0
   141e0:	beq	141f0 <__assert_fail@plt+0x3108>
   141e4:	ldr	r0, [fp, #-12]
   141e8:	movw	r1, #0
   141ec:	strb	r1, [r0]
   141f0:	mov	sp, fp
   141f4:	pop	{fp, pc}
   141f8:	sub	sp, sp, #4
   141fc:	strb	r0, [sp, #3]
   14200:	ldrb	r0, [sp, #3]
   14204:	add	sp, sp, #4
   14208:	bx	lr
   1420c:	push	{fp, lr}
   14210:	mov	fp, sp
   14214:	sub	sp, sp, #32
   14218:	str	r0, [fp, #-8]
   1421c:	str	r1, [fp, #-12]
   14220:	str	r2, [sp, #16]
   14224:	ldr	r0, [fp, #-12]
   14228:	movw	r1, #26215	; 0x6667
   1422c:	movt	r1, #26214	; 0x6666
   14230:	smmul	r1, r0, r1
   14234:	asr	r2, r1, #1
   14238:	add	r1, r2, r1, lsr #31
   1423c:	add	r2, r1, r1, lsl #2
   14240:	sub	r0, r0, r2
   14244:	cmp	r0, #0
   14248:	movw	r0, #0
   1424c:	movne	r0, #1
   14250:	and	r0, r0, #1
   14254:	add	r0, r1, r0
   14258:	str	r0, [sp, #12]
   1425c:	b	144c8 <__assert_fail@plt+0x33e0>
   14260:	b	14264 <__assert_fail@plt+0x317c>
   14264:	b	14310 <__assert_fail@plt+0x3228>
   14268:	ldr	r0, [sp, #12]
   1426c:	cmp	r0, #0
   14270:	bge	142a4 <__assert_fail@plt+0x31bc>
   14274:	b	14278 <__assert_fail@plt+0x3190>
   14278:	ldr	r0, [sp, #12]
   1427c:	cmp	r0, #15
   14280:	blt	14370 <__assert_fail@plt+0x3288>
   14284:	b	14384 <__assert_fail@plt+0x329c>
   14288:	ldr	r0, [sp, #12]
   1428c:	mvn	r1, #0
   14290:	sub	r0, r1, r0
   14294:	mvn	r1, #14
   14298:	cmp	r1, r0
   1429c:	ble	14370 <__assert_fail@plt+0x3288>
   142a0:	b	14384 <__assert_fail@plt+0x329c>
   142a4:	b	142a8 <__assert_fail@plt+0x31c0>
   142a8:	b	142fc <__assert_fail@plt+0x3214>
   142ac:	b	142fc <__assert_fail@plt+0x3214>
   142b0:	b	142fc <__assert_fail@plt+0x3214>
   142b4:	b	142b8 <__assert_fail@plt+0x31d0>
   142b8:	ldr	r0, [sp, #12]
   142bc:	mvn	r1, #127	; 0x7f
   142c0:	add	r0, r0, r1
   142c4:	movw	r1, #0
   142c8:	cmp	r1, r0
   142cc:	blt	14370 <__assert_fail@plt+0x3288>
   142d0:	b	14384 <__assert_fail@plt+0x329c>
   142d4:	ldr	r0, [sp, #12]
   142d8:	movw	r1, #0
   142dc:	cmp	r1, r0
   142e0:	bge	14384 <__assert_fail@plt+0x329c>
   142e4:	ldr	r0, [sp, #12]
   142e8:	sub	r0, r0, #1
   142ec:	movw	r1, #127	; 0x7f
   142f0:	cmp	r1, r0
   142f4:	blt	14370 <__assert_fail@plt+0x3288>
   142f8:	b	14384 <__assert_fail@plt+0x329c>
   142fc:	ldr	r0, [sp, #12]
   14300:	mvn	r1, #15
   14304:	cmp	r1, r0
   14308:	blt	14370 <__assert_fail@plt+0x3288>
   1430c:	b	14384 <__assert_fail@plt+0x329c>
   14310:	b	14318 <__assert_fail@plt+0x3230>
   14314:	b	14384 <__assert_fail@plt+0x329c>
   14318:	ldr	r0, [sp, #12]
   1431c:	cmp	r0, #0
   14320:	bge	14360 <__assert_fail@plt+0x3278>
   14324:	b	14328 <__assert_fail@plt+0x3240>
   14328:	b	14348 <__assert_fail@plt+0x3260>
   1432c:	b	14348 <__assert_fail@plt+0x3260>
   14330:	ldr	r0, [sp, #12]
   14334:	cmn	r0, #1
   14338:	bne	14348 <__assert_fail@plt+0x3260>
   1433c:	b	14340 <__assert_fail@plt+0x3258>
   14340:	b	14384 <__assert_fail@plt+0x329c>
   14344:	b	14384 <__assert_fail@plt+0x329c>
   14348:	ldr	r0, [sp, #12]
   1434c:	mvn	r1, #127	; 0x7f
   14350:	sdiv	r0, r1, r0
   14354:	cmp	r0, #8
   14358:	blt	14370 <__assert_fail@plt+0x3288>
   1435c:	b	14384 <__assert_fail@plt+0x329c>
   14360:	ldr	r0, [sp, #12]
   14364:	movw	r1, #15
   14368:	cmp	r1, r0
   1436c:	bge	14384 <__assert_fail@plt+0x329c>
   14370:	ldr	r0, [sp, #12]
   14374:	lsl	r0, r0, #3
   14378:	sxtb	r0, r0
   1437c:	str	r0, [sp, #8]
   14380:	b	14e40 <__assert_fail@plt+0x3d58>
   14384:	ldr	r0, [sp, #12]
   14388:	lsl	r0, r0, #3
   1438c:	sxtb	r0, r0
   14390:	str	r0, [sp, #8]
   14394:	b	14e34 <__assert_fail@plt+0x3d4c>
   14398:	b	14440 <__assert_fail@plt+0x3358>
   1439c:	ldr	r0, [sp, #12]
   143a0:	cmp	r0, #0
   143a4:	bge	143d8 <__assert_fail@plt+0x32f0>
   143a8:	b	143ac <__assert_fail@plt+0x32c4>
   143ac:	ldr	r0, [sp, #12]
   143b0:	cmp	r0, #31
   143b4:	blt	144a0 <__assert_fail@plt+0x33b8>
   143b8:	b	144b4 <__assert_fail@plt+0x33cc>
   143bc:	ldr	r0, [sp, #12]
   143c0:	mvn	r1, #0
   143c4:	sub	r0, r1, r0
   143c8:	mvn	r1, #30
   143cc:	cmp	r1, r0
   143d0:	ble	144a0 <__assert_fail@plt+0x33b8>
   143d4:	b	144b4 <__assert_fail@plt+0x33cc>
   143d8:	b	143dc <__assert_fail@plt+0x32f4>
   143dc:	b	1442c <__assert_fail@plt+0x3344>
   143e0:	b	1442c <__assert_fail@plt+0x3344>
   143e4:	b	1442c <__assert_fail@plt+0x3344>
   143e8:	b	143ec <__assert_fail@plt+0x3304>
   143ec:	ldr	r0, [sp, #12]
   143f0:	add	r0, r0, #0
   143f4:	movw	r1, #0
   143f8:	cmp	r1, r0
   143fc:	blt	144a0 <__assert_fail@plt+0x33b8>
   14400:	b	144b4 <__assert_fail@plt+0x33cc>
   14404:	ldr	r0, [sp, #12]
   14408:	movw	r1, #0
   1440c:	cmp	r1, r0
   14410:	bge	144b4 <__assert_fail@plt+0x33cc>
   14414:	ldr	r0, [sp, #12]
   14418:	sub	r0, r0, #1
   1441c:	mvn	r1, #0
   14420:	cmp	r1, r0
   14424:	blt	144a0 <__assert_fail@plt+0x33b8>
   14428:	b	144b4 <__assert_fail@plt+0x33cc>
   1442c:	ldr	r0, [sp, #12]
   14430:	movw	r1, #0
   14434:	cmp	r1, r0
   14438:	blt	144a0 <__assert_fail@plt+0x33b8>
   1443c:	b	144b4 <__assert_fail@plt+0x33cc>
   14440:	b	14448 <__assert_fail@plt+0x3360>
   14444:	b	144b4 <__assert_fail@plt+0x33cc>
   14448:	ldr	r0, [sp, #12]
   1444c:	cmp	r0, #0
   14450:	bge	14490 <__assert_fail@plt+0x33a8>
   14454:	b	14458 <__assert_fail@plt+0x3370>
   14458:	b	14478 <__assert_fail@plt+0x3390>
   1445c:	b	14478 <__assert_fail@plt+0x3390>
   14460:	ldr	r0, [sp, #12]
   14464:	cmn	r0, #1
   14468:	bne	14478 <__assert_fail@plt+0x3390>
   1446c:	b	14470 <__assert_fail@plt+0x3388>
   14470:	b	144a0 <__assert_fail@plt+0x33b8>
   14474:	b	144a0 <__assert_fail@plt+0x33b8>
   14478:	ldr	r0, [sp, #12]
   1447c:	movw	r1, #0
   14480:	sdiv	r0, r1, r0
   14484:	cmp	r0, #8
   14488:	blt	144a0 <__assert_fail@plt+0x33b8>
   1448c:	b	144b4 <__assert_fail@plt+0x33cc>
   14490:	ldr	r0, [sp, #12]
   14494:	movw	r1, #31
   14498:	cmp	r1, r0
   1449c:	bge	144b4 <__assert_fail@plt+0x33cc>
   144a0:	ldr	r0, [sp, #12]
   144a4:	lsl	r0, r0, #3
   144a8:	and	r0, r0, #255	; 0xff
   144ac:	str	r0, [sp, #8]
   144b0:	b	14e40 <__assert_fail@plt+0x3d58>
   144b4:	ldr	r0, [sp, #12]
   144b8:	lsl	r0, r0, #3
   144bc:	and	r0, r0, #255	; 0xff
   144c0:	str	r0, [sp, #8]
   144c4:	b	14e34 <__assert_fail@plt+0x3d4c>
   144c8:	b	1473c <__assert_fail@plt+0x3654>
   144cc:	b	144d0 <__assert_fail@plt+0x33e8>
   144d0:	b	14580 <__assert_fail@plt+0x3498>
   144d4:	ldr	r0, [sp, #12]
   144d8:	cmp	r0, #0
   144dc:	bge	14514 <__assert_fail@plt+0x342c>
   144e0:	b	144e4 <__assert_fail@plt+0x33fc>
   144e4:	ldr	r0, [sp, #12]
   144e8:	movw	r1, #4095	; 0xfff
   144ec:	cmp	r0, r1
   144f0:	blt	145e0 <__assert_fail@plt+0x34f8>
   144f4:	b	145f4 <__assert_fail@plt+0x350c>
   144f8:	ldr	r0, [pc, #2528]	; 14ee0 <__assert_fail@plt+0x3df8>
   144fc:	ldr	r1, [sp, #12]
   14500:	mvn	r2, #0
   14504:	sub	r1, r2, r1
   14508:	cmp	r0, r1
   1450c:	ble	145e0 <__assert_fail@plt+0x34f8>
   14510:	b	145f4 <__assert_fail@plt+0x350c>
   14514:	b	14518 <__assert_fail@plt+0x3430>
   14518:	b	1456c <__assert_fail@plt+0x3484>
   1451c:	b	1456c <__assert_fail@plt+0x3484>
   14520:	b	1456c <__assert_fail@plt+0x3484>
   14524:	b	14528 <__assert_fail@plt+0x3440>
   14528:	ldr	r0, [pc, #2472]	; 14ed8 <__assert_fail@plt+0x3df0>
   1452c:	ldr	r1, [sp, #12]
   14530:	add	r0, r1, r0
   14534:	movw	r1, #0
   14538:	cmp	r1, r0
   1453c:	blt	145e0 <__assert_fail@plt+0x34f8>
   14540:	b	145f4 <__assert_fail@plt+0x350c>
   14544:	ldr	r0, [sp, #12]
   14548:	movw	r1, #0
   1454c:	cmp	r1, r0
   14550:	bge	145f4 <__assert_fail@plt+0x350c>
   14554:	ldr	r0, [sp, #12]
   14558:	sub	r0, r0, #1
   1455c:	movw	r1, #32767	; 0x7fff
   14560:	cmp	r1, r0
   14564:	blt	145e0 <__assert_fail@plt+0x34f8>
   14568:	b	145f4 <__assert_fail@plt+0x350c>
   1456c:	ldr	r0, [pc, #2408]	; 14edc <__assert_fail@plt+0x3df4>
   14570:	ldr	r1, [sp, #12]
   14574:	cmp	r0, r1
   14578:	blt	145e0 <__assert_fail@plt+0x34f8>
   1457c:	b	145f4 <__assert_fail@plt+0x350c>
   14580:	b	14588 <__assert_fail@plt+0x34a0>
   14584:	b	145f4 <__assert_fail@plt+0x350c>
   14588:	ldr	r0, [sp, #12]
   1458c:	cmp	r0, #0
   14590:	bge	145d0 <__assert_fail@plt+0x34e8>
   14594:	b	14598 <__assert_fail@plt+0x34b0>
   14598:	b	145b8 <__assert_fail@plt+0x34d0>
   1459c:	b	145b8 <__assert_fail@plt+0x34d0>
   145a0:	ldr	r0, [sp, #12]
   145a4:	cmn	r0, #1
   145a8:	bne	145b8 <__assert_fail@plt+0x34d0>
   145ac:	b	145b0 <__assert_fail@plt+0x34c8>
   145b0:	b	145f4 <__assert_fail@plt+0x350c>
   145b4:	b	145f4 <__assert_fail@plt+0x350c>
   145b8:	ldr	r0, [pc, #2328]	; 14ed8 <__assert_fail@plt+0x3df0>
   145bc:	ldr	r1, [sp, #12]
   145c0:	sdiv	r0, r0, r1
   145c4:	cmp	r0, #8
   145c8:	blt	145e0 <__assert_fail@plt+0x34f8>
   145cc:	b	145f4 <__assert_fail@plt+0x350c>
   145d0:	ldr	r0, [sp, #12]
   145d4:	movw	r1, #4095	; 0xfff
   145d8:	cmp	r1, r0
   145dc:	bge	145f4 <__assert_fail@plt+0x350c>
   145e0:	ldr	r0, [sp, #12]
   145e4:	lsl	r0, r0, #3
   145e8:	sxth	r0, r0
   145ec:	str	r0, [sp, #8]
   145f0:	b	14e40 <__assert_fail@plt+0x3d58>
   145f4:	ldr	r0, [sp, #12]
   145f8:	lsl	r0, r0, #3
   145fc:	sxth	r0, r0
   14600:	str	r0, [sp, #8]
   14604:	b	14e34 <__assert_fail@plt+0x3d4c>
   14608:	b	146b4 <__assert_fail@plt+0x35cc>
   1460c:	ldr	r0, [sp, #12]
   14610:	cmp	r0, #0
   14614:	bge	1464c <__assert_fail@plt+0x3564>
   14618:	b	1461c <__assert_fail@plt+0x3534>
   1461c:	ldr	r0, [sp, #12]
   14620:	movw	r1, #8191	; 0x1fff
   14624:	cmp	r0, r1
   14628:	blt	14714 <__assert_fail@plt+0x362c>
   1462c:	b	14728 <__assert_fail@plt+0x3640>
   14630:	ldr	r0, [pc, #2220]	; 14ee4 <__assert_fail@plt+0x3dfc>
   14634:	ldr	r1, [sp, #12]
   14638:	mvn	r2, #0
   1463c:	sub	r1, r2, r1
   14640:	cmp	r0, r1
   14644:	ble	14714 <__assert_fail@plt+0x362c>
   14648:	b	14728 <__assert_fail@plt+0x3640>
   1464c:	b	14650 <__assert_fail@plt+0x3568>
   14650:	b	146a0 <__assert_fail@plt+0x35b8>
   14654:	b	146a0 <__assert_fail@plt+0x35b8>
   14658:	b	146a0 <__assert_fail@plt+0x35b8>
   1465c:	b	14660 <__assert_fail@plt+0x3578>
   14660:	ldr	r0, [sp, #12]
   14664:	add	r0, r0, #0
   14668:	movw	r1, #0
   1466c:	cmp	r1, r0
   14670:	blt	14714 <__assert_fail@plt+0x362c>
   14674:	b	14728 <__assert_fail@plt+0x3640>
   14678:	ldr	r0, [sp, #12]
   1467c:	movw	r1, #0
   14680:	cmp	r1, r0
   14684:	bge	14728 <__assert_fail@plt+0x3640>
   14688:	ldr	r0, [sp, #12]
   1468c:	sub	r0, r0, #1
   14690:	mvn	r1, #0
   14694:	cmp	r1, r0
   14698:	blt	14714 <__assert_fail@plt+0x362c>
   1469c:	b	14728 <__assert_fail@plt+0x3640>
   146a0:	ldr	r0, [sp, #12]
   146a4:	movw	r1, #0
   146a8:	cmp	r1, r0
   146ac:	blt	14714 <__assert_fail@plt+0x362c>
   146b0:	b	14728 <__assert_fail@plt+0x3640>
   146b4:	b	146bc <__assert_fail@plt+0x35d4>
   146b8:	b	14728 <__assert_fail@plt+0x3640>
   146bc:	ldr	r0, [sp, #12]
   146c0:	cmp	r0, #0
   146c4:	bge	14704 <__assert_fail@plt+0x361c>
   146c8:	b	146cc <__assert_fail@plt+0x35e4>
   146cc:	b	146ec <__assert_fail@plt+0x3604>
   146d0:	b	146ec <__assert_fail@plt+0x3604>
   146d4:	ldr	r0, [sp, #12]
   146d8:	cmn	r0, #1
   146dc:	bne	146ec <__assert_fail@plt+0x3604>
   146e0:	b	146e4 <__assert_fail@plt+0x35fc>
   146e4:	b	14714 <__assert_fail@plt+0x362c>
   146e8:	b	14714 <__assert_fail@plt+0x362c>
   146ec:	ldr	r0, [sp, #12]
   146f0:	movw	r1, #0
   146f4:	sdiv	r0, r1, r0
   146f8:	cmp	r0, #8
   146fc:	blt	14714 <__assert_fail@plt+0x362c>
   14700:	b	14728 <__assert_fail@plt+0x3640>
   14704:	ldr	r0, [sp, #12]
   14708:	movw	r1, #8191	; 0x1fff
   1470c:	cmp	r1, r0
   14710:	bge	14728 <__assert_fail@plt+0x3640>
   14714:	ldr	r0, [sp, #12]
   14718:	lsl	r0, r0, #3
   1471c:	uxth	r0, r0
   14720:	str	r0, [sp, #8]
   14724:	b	14e40 <__assert_fail@plt+0x3d58>
   14728:	ldr	r0, [sp, #12]
   1472c:	lsl	r0, r0, #3
   14730:	uxth	r0, r0
   14734:	str	r0, [sp, #8]
   14738:	b	14e34 <__assert_fail@plt+0x3d4c>
   1473c:	b	14740 <__assert_fail@plt+0x3658>
   14740:	b	14744 <__assert_fail@plt+0x365c>
   14744:	b	147e4 <__assert_fail@plt+0x36fc>
   14748:	ldr	r0, [sp, #12]
   1474c:	cmp	r0, #0
   14750:	bge	14788 <__assert_fail@plt+0x36a0>
   14754:	b	14758 <__assert_fail@plt+0x3670>
   14758:	ldr	r0, [pc, #1892]	; 14ec4 <__assert_fail@plt+0x3ddc>
   1475c:	ldr	r1, [sp, #12]
   14760:	cmp	r1, r0
   14764:	blt	14838 <__assert_fail@plt+0x3750>
   14768:	b	14848 <__assert_fail@plt+0x3760>
   1476c:	ldr	r0, [pc, #1888]	; 14ed4 <__assert_fail@plt+0x3dec>
   14770:	ldr	r1, [sp, #12]
   14774:	mvn	r2, #0
   14778:	sub	r1, r2, r1
   1477c:	cmp	r0, r1
   14780:	ble	14838 <__assert_fail@plt+0x3750>
   14784:	b	14848 <__assert_fail@plt+0x3760>
   14788:	b	147d0 <__assert_fail@plt+0x36e8>
   1478c:	b	14790 <__assert_fail@plt+0x36a8>
   14790:	ldr	r0, [sp, #12]
   14794:	add	r0, r0, #-2147483648	; 0x80000000
   14798:	movw	r1, #0
   1479c:	cmp	r1, r0
   147a0:	blt	14838 <__assert_fail@plt+0x3750>
   147a4:	b	14848 <__assert_fail@plt+0x3760>
   147a8:	ldr	r0, [sp, #12]
   147ac:	movw	r1, #0
   147b0:	cmp	r1, r0
   147b4:	bge	14848 <__assert_fail@plt+0x3760>
   147b8:	ldr	r0, [pc, #1808]	; 14ed0 <__assert_fail@plt+0x3de8>
   147bc:	ldr	r1, [sp, #12]
   147c0:	sub	r1, r1, #1
   147c4:	cmp	r0, r1
   147c8:	blt	14838 <__assert_fail@plt+0x3750>
   147cc:	b	14848 <__assert_fail@plt+0x3760>
   147d0:	ldr	r0, [pc, #1780]	; 14ecc <__assert_fail@plt+0x3de4>
   147d4:	ldr	r1, [sp, #12]
   147d8:	cmp	r0, r1
   147dc:	blt	14838 <__assert_fail@plt+0x3750>
   147e0:	b	14848 <__assert_fail@plt+0x3760>
   147e4:	b	147ec <__assert_fail@plt+0x3704>
   147e8:	b	14848 <__assert_fail@plt+0x3760>
   147ec:	ldr	r0, [sp, #12]
   147f0:	cmp	r0, #0
   147f4:	bge	14828 <__assert_fail@plt+0x3740>
   147f8:	ldr	r0, [sp, #12]
   147fc:	cmn	r0, #1
   14800:	bne	14810 <__assert_fail@plt+0x3728>
   14804:	b	14808 <__assert_fail@plt+0x3720>
   14808:	b	14848 <__assert_fail@plt+0x3760>
   1480c:	b	14848 <__assert_fail@plt+0x3760>
   14810:	ldr	r0, [pc, #1712]	; 14ec8 <__assert_fail@plt+0x3de0>
   14814:	ldr	r1, [sp, #12]
   14818:	sdiv	r0, r0, r1
   1481c:	cmp	r0, #8
   14820:	blt	14838 <__assert_fail@plt+0x3750>
   14824:	b	14848 <__assert_fail@plt+0x3760>
   14828:	ldr	r0, [pc, #1684]	; 14ec4 <__assert_fail@plt+0x3ddc>
   1482c:	ldr	r1, [sp, #12]
   14830:	cmp	r0, r1
   14834:	bge	14848 <__assert_fail@plt+0x3760>
   14838:	ldr	r0, [sp, #12]
   1483c:	lsl	r0, r0, #3
   14840:	str	r0, [sp, #8]
   14844:	b	14e40 <__assert_fail@plt+0x3d58>
   14848:	ldr	r0, [sp, #12]
   1484c:	lsl	r0, r0, #3
   14850:	str	r0, [sp, #8]
   14854:	b	14e34 <__assert_fail@plt+0x3d4c>
   14858:	b	14904 <__assert_fail@plt+0x381c>
   1485c:	ldr	r0, [sp, #12]
   14860:	cmp	r0, #0
   14864:	bge	1489c <__assert_fail@plt+0x37b4>
   14868:	b	14880 <__assert_fail@plt+0x3798>
   1486c:	ldr	r0, [pc, #1612]	; 14ec0 <__assert_fail@plt+0x3dd8>
   14870:	ldr	r1, [sp, #12]
   14874:	cmp	r1, r0
   14878:	bcc	14964 <__assert_fail@plt+0x387c>
   1487c:	b	14974 <__assert_fail@plt+0x388c>
   14880:	ldr	r0, [sp, #12]
   14884:	mvn	r1, #0
   14888:	sub	r0, r1, r0
   1488c:	movw	r1, #1
   14890:	cmp	r1, r0
   14894:	bls	14964 <__assert_fail@plt+0x387c>
   14898:	b	14974 <__assert_fail@plt+0x388c>
   1489c:	b	148a0 <__assert_fail@plt+0x37b8>
   148a0:	b	148f0 <__assert_fail@plt+0x3808>
   148a4:	b	148f0 <__assert_fail@plt+0x3808>
   148a8:	b	148f0 <__assert_fail@plt+0x3808>
   148ac:	b	148b0 <__assert_fail@plt+0x37c8>
   148b0:	ldr	r0, [sp, #12]
   148b4:	add	r0, r0, #0
   148b8:	movw	r1, #0
   148bc:	cmp	r1, r0
   148c0:	blt	14964 <__assert_fail@plt+0x387c>
   148c4:	b	14974 <__assert_fail@plt+0x388c>
   148c8:	ldr	r0, [sp, #12]
   148cc:	movw	r1, #0
   148d0:	cmp	r1, r0
   148d4:	bge	14974 <__assert_fail@plt+0x388c>
   148d8:	ldr	r0, [sp, #12]
   148dc:	sub	r0, r0, #1
   148e0:	mvn	r1, #0
   148e4:	cmp	r1, r0
   148e8:	blt	14964 <__assert_fail@plt+0x387c>
   148ec:	b	14974 <__assert_fail@plt+0x388c>
   148f0:	ldr	r0, [sp, #12]
   148f4:	movw	r1, #0
   148f8:	cmp	r1, r0
   148fc:	blt	14964 <__assert_fail@plt+0x387c>
   14900:	b	14974 <__assert_fail@plt+0x388c>
   14904:	b	1490c <__assert_fail@plt+0x3824>
   14908:	b	14974 <__assert_fail@plt+0x388c>
   1490c:	ldr	r0, [sp, #12]
   14910:	cmp	r0, #0
   14914:	bge	14954 <__assert_fail@plt+0x386c>
   14918:	b	1491c <__assert_fail@plt+0x3834>
   1491c:	b	1493c <__assert_fail@plt+0x3854>
   14920:	b	1493c <__assert_fail@plt+0x3854>
   14924:	ldr	r0, [sp, #12]
   14928:	cmn	r0, #1
   1492c:	bne	1493c <__assert_fail@plt+0x3854>
   14930:	b	14934 <__assert_fail@plt+0x384c>
   14934:	b	14964 <__assert_fail@plt+0x387c>
   14938:	b	14964 <__assert_fail@plt+0x387c>
   1493c:	ldr	r0, [sp, #12]
   14940:	movw	r1, #0
   14944:	sdiv	r0, r1, r0
   14948:	cmp	r0, #8
   1494c:	blt	14964 <__assert_fail@plt+0x387c>
   14950:	b	14974 <__assert_fail@plt+0x388c>
   14954:	ldr	r0, [pc, #1380]	; 14ec0 <__assert_fail@plt+0x3dd8>
   14958:	ldr	r1, [sp, #12]
   1495c:	cmp	r0, r1
   14960:	bcs	14974 <__assert_fail@plt+0x388c>
   14964:	ldr	r0, [sp, #12]
   14968:	lsl	r0, r0, #3
   1496c:	str	r0, [sp, #8]
   14970:	b	14e40 <__assert_fail@plt+0x3d58>
   14974:	ldr	r0, [sp, #12]
   14978:	lsl	r0, r0, #3
   1497c:	str	r0, [sp, #8]
   14980:	b	14e34 <__assert_fail@plt+0x3d4c>
   14984:	b	14988 <__assert_fail@plt+0x38a0>
   14988:	b	1498c <__assert_fail@plt+0x38a4>
   1498c:	b	14a2c <__assert_fail@plt+0x3944>
   14990:	ldr	r0, [sp, #12]
   14994:	cmp	r0, #0
   14998:	bge	149d0 <__assert_fail@plt+0x38e8>
   1499c:	b	149a0 <__assert_fail@plt+0x38b8>
   149a0:	ldr	r0, [pc, #1308]	; 14ec4 <__assert_fail@plt+0x3ddc>
   149a4:	ldr	r1, [sp, #12]
   149a8:	cmp	r1, r0
   149ac:	blt	14a80 <__assert_fail@plt+0x3998>
   149b0:	b	14a90 <__assert_fail@plt+0x39a8>
   149b4:	ldr	r0, [pc, #1304]	; 14ed4 <__assert_fail@plt+0x3dec>
   149b8:	ldr	r1, [sp, #12]
   149bc:	mvn	r2, #0
   149c0:	sub	r1, r2, r1
   149c4:	cmp	r0, r1
   149c8:	ble	14a80 <__assert_fail@plt+0x3998>
   149cc:	b	14a90 <__assert_fail@plt+0x39a8>
   149d0:	b	14a18 <__assert_fail@plt+0x3930>
   149d4:	b	149d8 <__assert_fail@plt+0x38f0>
   149d8:	ldr	r0, [sp, #12]
   149dc:	add	r0, r0, #-2147483648	; 0x80000000
   149e0:	movw	r1, #0
   149e4:	cmp	r1, r0
   149e8:	blt	14a80 <__assert_fail@plt+0x3998>
   149ec:	b	14a90 <__assert_fail@plt+0x39a8>
   149f0:	ldr	r0, [sp, #12]
   149f4:	movw	r1, #0
   149f8:	cmp	r1, r0
   149fc:	bge	14a90 <__assert_fail@plt+0x39a8>
   14a00:	ldr	r0, [pc, #1224]	; 14ed0 <__assert_fail@plt+0x3de8>
   14a04:	ldr	r1, [sp, #12]
   14a08:	sub	r1, r1, #1
   14a0c:	cmp	r0, r1
   14a10:	blt	14a80 <__assert_fail@plt+0x3998>
   14a14:	b	14a90 <__assert_fail@plt+0x39a8>
   14a18:	ldr	r0, [pc, #1196]	; 14ecc <__assert_fail@plt+0x3de4>
   14a1c:	ldr	r1, [sp, #12]
   14a20:	cmp	r0, r1
   14a24:	blt	14a80 <__assert_fail@plt+0x3998>
   14a28:	b	14a90 <__assert_fail@plt+0x39a8>
   14a2c:	b	14a34 <__assert_fail@plt+0x394c>
   14a30:	b	14a90 <__assert_fail@plt+0x39a8>
   14a34:	ldr	r0, [sp, #12]
   14a38:	cmp	r0, #0
   14a3c:	bge	14a70 <__assert_fail@plt+0x3988>
   14a40:	ldr	r0, [sp, #12]
   14a44:	cmn	r0, #1
   14a48:	bne	14a58 <__assert_fail@plt+0x3970>
   14a4c:	b	14a50 <__assert_fail@plt+0x3968>
   14a50:	b	14a90 <__assert_fail@plt+0x39a8>
   14a54:	b	14a90 <__assert_fail@plt+0x39a8>
   14a58:	ldr	r0, [pc, #1128]	; 14ec8 <__assert_fail@plt+0x3de0>
   14a5c:	ldr	r1, [sp, #12]
   14a60:	sdiv	r0, r0, r1
   14a64:	cmp	r0, #8
   14a68:	blt	14a80 <__assert_fail@plt+0x3998>
   14a6c:	b	14a90 <__assert_fail@plt+0x39a8>
   14a70:	ldr	r0, [pc, #1100]	; 14ec4 <__assert_fail@plt+0x3ddc>
   14a74:	ldr	r1, [sp, #12]
   14a78:	cmp	r0, r1
   14a7c:	bge	14a90 <__assert_fail@plt+0x39a8>
   14a80:	ldr	r0, [sp, #12]
   14a84:	lsl	r0, r0, #3
   14a88:	str	r0, [sp, #8]
   14a8c:	b	14e40 <__assert_fail@plt+0x3d58>
   14a90:	ldr	r0, [sp, #12]
   14a94:	lsl	r0, r0, #3
   14a98:	str	r0, [sp, #8]
   14a9c:	b	14e34 <__assert_fail@plt+0x3d4c>
   14aa0:	b	14b4c <__assert_fail@plt+0x3a64>
   14aa4:	ldr	r0, [sp, #12]
   14aa8:	cmp	r0, #0
   14aac:	bge	14ae4 <__assert_fail@plt+0x39fc>
   14ab0:	b	14ac8 <__assert_fail@plt+0x39e0>
   14ab4:	ldr	r0, [pc, #1028]	; 14ec0 <__assert_fail@plt+0x3dd8>
   14ab8:	ldr	r1, [sp, #12]
   14abc:	cmp	r1, r0
   14ac0:	bcc	14bac <__assert_fail@plt+0x3ac4>
   14ac4:	b	14bbc <__assert_fail@plt+0x3ad4>
   14ac8:	ldr	r0, [sp, #12]
   14acc:	mvn	r1, #0
   14ad0:	sub	r0, r1, r0
   14ad4:	movw	r1, #1
   14ad8:	cmp	r1, r0
   14adc:	bls	14bac <__assert_fail@plt+0x3ac4>
   14ae0:	b	14bbc <__assert_fail@plt+0x3ad4>
   14ae4:	b	14ae8 <__assert_fail@plt+0x3a00>
   14ae8:	b	14b38 <__assert_fail@plt+0x3a50>
   14aec:	b	14b38 <__assert_fail@plt+0x3a50>
   14af0:	b	14b38 <__assert_fail@plt+0x3a50>
   14af4:	b	14af8 <__assert_fail@plt+0x3a10>
   14af8:	ldr	r0, [sp, #12]
   14afc:	add	r0, r0, #0
   14b00:	movw	r1, #0
   14b04:	cmp	r1, r0
   14b08:	blt	14bac <__assert_fail@plt+0x3ac4>
   14b0c:	b	14bbc <__assert_fail@plt+0x3ad4>
   14b10:	ldr	r0, [sp, #12]
   14b14:	movw	r1, #0
   14b18:	cmp	r1, r0
   14b1c:	bge	14bbc <__assert_fail@plt+0x3ad4>
   14b20:	ldr	r0, [sp, #12]
   14b24:	sub	r0, r0, #1
   14b28:	mvn	r1, #0
   14b2c:	cmp	r1, r0
   14b30:	blt	14bac <__assert_fail@plt+0x3ac4>
   14b34:	b	14bbc <__assert_fail@plt+0x3ad4>
   14b38:	ldr	r0, [sp, #12]
   14b3c:	movw	r1, #0
   14b40:	cmp	r1, r0
   14b44:	blt	14bac <__assert_fail@plt+0x3ac4>
   14b48:	b	14bbc <__assert_fail@plt+0x3ad4>
   14b4c:	b	14b54 <__assert_fail@plt+0x3a6c>
   14b50:	b	14bbc <__assert_fail@plt+0x3ad4>
   14b54:	ldr	r0, [sp, #12]
   14b58:	cmp	r0, #0
   14b5c:	bge	14b9c <__assert_fail@plt+0x3ab4>
   14b60:	b	14b64 <__assert_fail@plt+0x3a7c>
   14b64:	b	14b84 <__assert_fail@plt+0x3a9c>
   14b68:	b	14b84 <__assert_fail@plt+0x3a9c>
   14b6c:	ldr	r0, [sp, #12]
   14b70:	cmn	r0, #1
   14b74:	bne	14b84 <__assert_fail@plt+0x3a9c>
   14b78:	b	14b7c <__assert_fail@plt+0x3a94>
   14b7c:	b	14bac <__assert_fail@plt+0x3ac4>
   14b80:	b	14bac <__assert_fail@plt+0x3ac4>
   14b84:	ldr	r0, [sp, #12]
   14b88:	movw	r1, #0
   14b8c:	sdiv	r0, r1, r0
   14b90:	cmp	r0, #8
   14b94:	blt	14bac <__assert_fail@plt+0x3ac4>
   14b98:	b	14bbc <__assert_fail@plt+0x3ad4>
   14b9c:	ldr	r0, [pc, #796]	; 14ec0 <__assert_fail@plt+0x3dd8>
   14ba0:	ldr	r1, [sp, #12]
   14ba4:	cmp	r0, r1
   14ba8:	bcs	14bbc <__assert_fail@plt+0x3ad4>
   14bac:	ldr	r0, [sp, #12]
   14bb0:	lsl	r0, r0, #3
   14bb4:	str	r0, [sp, #8]
   14bb8:	b	14e40 <__assert_fail@plt+0x3d58>
   14bbc:	ldr	r0, [sp, #12]
   14bc0:	lsl	r0, r0, #3
   14bc4:	str	r0, [sp, #8]
   14bc8:	b	14e34 <__assert_fail@plt+0x3d4c>
   14bcc:	b	14bd0 <__assert_fail@plt+0x3ae8>
   14bd0:	b	14c78 <__assert_fail@plt+0x3b90>
   14bd4:	ldr	r0, [sp, #12]
   14bd8:	cmp	r0, #0
   14bdc:	bge	14c1c <__assert_fail@plt+0x3b34>
   14be0:	b	14be4 <__assert_fail@plt+0x3afc>
   14be4:	ldr	r0, [sp, #12]
   14be8:	mvn	r1, #0
   14bec:	subs	r1, r0, r1
   14bf0:	mvn	r2, #-268435456	; 0xf0000000
   14bf4:	rscs	r0, r2, r0, asr #31
   14bf8:	blt	14cec <__assert_fail@plt+0x3c04>
   14bfc:	b	14cfc <__assert_fail@plt+0x3c14>
   14c00:	ldr	r0, [sp, #12]
   14c04:	mvn	r0, r0
   14c08:	rsbs	r1, r0, #0
   14c0c:	mov	r2, #-268435456	; 0xf0000000
   14c10:	sbcs	r0, r2, r0, asr #31
   14c14:	blt	14cec <__assert_fail@plt+0x3c04>
   14c18:	b	14cfc <__assert_fail@plt+0x3c14>
   14c1c:	b	14c60 <__assert_fail@plt+0x3b78>
   14c20:	b	14c24 <__assert_fail@plt+0x3b3c>
   14c24:	ldr	r0, [sp, #12]
   14c28:	mov	r1, #-2147483648	; 0x80000000
   14c2c:	add	r1, r1, r0, asr #31
   14c30:	rsbs	r0, r0, #0
   14c34:	rscs	r1, r1, #0
   14c38:	blt	14cec <__assert_fail@plt+0x3c04>
   14c3c:	b	14cfc <__assert_fail@plt+0x3c14>
   14c40:	ldr	r0, [sp, #12]
   14c44:	movw	r1, #0
   14c48:	cmp	r1, r0
   14c4c:	bge	14cfc <__assert_fail@plt+0x3c14>
   14c50:	mov	r0, #0
   14c54:	cmp	r0, #0
   14c58:	bne	14cec <__assert_fail@plt+0x3c04>
   14c5c:	b	14cfc <__assert_fail@plt+0x3c14>
   14c60:	ldr	r0, [sp, #12]
   14c64:	rsbs	r1, r0, #0
   14c68:	mov	r2, #-268435456	; 0xf0000000
   14c6c:	sbcs	r0, r2, r0, asr #31
   14c70:	blt	14cec <__assert_fail@plt+0x3c04>
   14c74:	b	14cfc <__assert_fail@plt+0x3c14>
   14c78:	b	14c80 <__assert_fail@plt+0x3b98>
   14c7c:	b	14cfc <__assert_fail@plt+0x3c14>
   14c80:	ldr	r0, [sp, #12]
   14c84:	cmp	r0, #0
   14c88:	bge	14cd8 <__assert_fail@plt+0x3bf0>
   14c8c:	ldr	r0, [sp, #12]
   14c90:	cmn	r0, #1
   14c94:	bne	14ca4 <__assert_fail@plt+0x3bbc>
   14c98:	b	14c9c <__assert_fail@plt+0x3bb4>
   14c9c:	b	14cfc <__assert_fail@plt+0x3c14>
   14ca0:	b	14cfc <__assert_fail@plt+0x3c14>
   14ca4:	ldr	r0, [sp, #12]
   14ca8:	asr	r3, r0, #31
   14cac:	mov	r1, #0
   14cb0:	mov	r2, #-2147483648	; 0x80000000
   14cb4:	str	r0, [sp, #4]
   14cb8:	mov	r0, r1
   14cbc:	mov	r1, r2
   14cc0:	ldr	r2, [sp, #4]
   14cc4:	bl	21990 <__assert_fail@plt+0x108a8>
   14cc8:	subs	r0, r0, #8
   14ccc:	sbcs	r1, r1, #0
   14cd0:	blt	14cec <__assert_fail@plt+0x3c04>
   14cd4:	b	14cfc <__assert_fail@plt+0x3c14>
   14cd8:	ldr	r0, [sp, #12]
   14cdc:	asr	r0, r0, #31
   14ce0:	cmp	r0, #268435456	; 0x10000000
   14ce4:	blt	14cfc <__assert_fail@plt+0x3c14>
   14ce8:	b	14cec <__assert_fail@plt+0x3c04>
   14cec:	ldr	r0, [sp, #12]
   14cf0:	lsl	r0, r0, #3
   14cf4:	str	r0, [sp, #8]
   14cf8:	b	14e40 <__assert_fail@plt+0x3d58>
   14cfc:	ldr	r0, [sp, #12]
   14d00:	lsl	r0, r0, #3
   14d04:	str	r0, [sp, #8]
   14d08:	b	14e34 <__assert_fail@plt+0x3d4c>
   14d0c:	b	14db4 <__assert_fail@plt+0x3ccc>
   14d10:	ldr	r0, [sp, #12]
   14d14:	cmp	r0, #0
   14d18:	bge	14d4c <__assert_fail@plt+0x3c64>
   14d1c:	b	14d3c <__assert_fail@plt+0x3c54>
   14d20:	ldr	r0, [sp, #12]
   14d24:	mvn	r1, #0
   14d28:	subs	r1, r0, r1
   14d2c:	mvn	r2, #-536870912	; 0xe0000000
   14d30:	rscs	r0, r2, r0, asr #31
   14d34:	bcc	14e18 <__assert_fail@plt+0x3d30>
   14d38:	b	14e28 <__assert_fail@plt+0x3d40>
   14d3c:	ldr	r0, [sp, #12]
   14d40:	cmn	r0, #1
   14d44:	bne	14e18 <__assert_fail@plt+0x3d30>
   14d48:	b	14e28 <__assert_fail@plt+0x3d40>
   14d4c:	b	14d50 <__assert_fail@plt+0x3c68>
   14d50:	b	14da0 <__assert_fail@plt+0x3cb8>
   14d54:	b	14da0 <__assert_fail@plt+0x3cb8>
   14d58:	b	14da0 <__assert_fail@plt+0x3cb8>
   14d5c:	b	14d60 <__assert_fail@plt+0x3c78>
   14d60:	ldr	r0, [sp, #12]
   14d64:	add	r0, r0, #0
   14d68:	movw	r1, #0
   14d6c:	cmp	r1, r0
   14d70:	blt	14e18 <__assert_fail@plt+0x3d30>
   14d74:	b	14e28 <__assert_fail@plt+0x3d40>
   14d78:	ldr	r0, [sp, #12]
   14d7c:	movw	r1, #0
   14d80:	cmp	r1, r0
   14d84:	bge	14e28 <__assert_fail@plt+0x3d40>
   14d88:	ldr	r0, [sp, #12]
   14d8c:	sub	r0, r0, #1
   14d90:	mvn	r1, #0
   14d94:	cmp	r1, r0
   14d98:	blt	14e18 <__assert_fail@plt+0x3d30>
   14d9c:	b	14e28 <__assert_fail@plt+0x3d40>
   14da0:	ldr	r0, [sp, #12]
   14da4:	movw	r1, #0
   14da8:	cmp	r1, r0
   14dac:	blt	14e18 <__assert_fail@plt+0x3d30>
   14db0:	b	14e28 <__assert_fail@plt+0x3d40>
   14db4:	b	14dbc <__assert_fail@plt+0x3cd4>
   14db8:	b	14e28 <__assert_fail@plt+0x3d40>
   14dbc:	ldr	r0, [sp, #12]
   14dc0:	cmp	r0, #0
   14dc4:	bge	14e04 <__assert_fail@plt+0x3d1c>
   14dc8:	b	14dcc <__assert_fail@plt+0x3ce4>
   14dcc:	b	14dec <__assert_fail@plt+0x3d04>
   14dd0:	b	14dec <__assert_fail@plt+0x3d04>
   14dd4:	ldr	r0, [sp, #12]
   14dd8:	cmn	r0, #1
   14ddc:	bne	14dec <__assert_fail@plt+0x3d04>
   14de0:	b	14de4 <__assert_fail@plt+0x3cfc>
   14de4:	b	14e18 <__assert_fail@plt+0x3d30>
   14de8:	b	14e18 <__assert_fail@plt+0x3d30>
   14dec:	ldr	r0, [sp, #12]
   14df0:	movw	r1, #0
   14df4:	sdiv	r0, r1, r0
   14df8:	cmp	r0, #8
   14dfc:	blt	14e18 <__assert_fail@plt+0x3d30>
   14e00:	b	14e28 <__assert_fail@plt+0x3d40>
   14e04:	ldr	r0, [sp, #12]
   14e08:	asr	r0, r0, #31
   14e0c:	cmp	r0, #536870912	; 0x20000000
   14e10:	bcc	14e28 <__assert_fail@plt+0x3d40>
   14e14:	b	14e18 <__assert_fail@plt+0x3d30>
   14e18:	ldr	r0, [sp, #12]
   14e1c:	lsl	r0, r0, #3
   14e20:	str	r0, [sp, #8]
   14e24:	b	14e40 <__assert_fail@plt+0x3d58>
   14e28:	ldr	r0, [sp, #12]
   14e2c:	lsl	r0, r0, #3
   14e30:	str	r0, [sp, #8]
   14e34:	ldr	r0, [fp, #-12]
   14e38:	cmp	r0, #0
   14e3c:	bge	14e54 <__assert_fail@plt+0x3d6c>
   14e40:	ldr	r0, [sp, #16]
   14e44:	movw	r1, #0
   14e48:	str	r1, [r0]
   14e4c:	str	r1, [fp, #-4]
   14e50:	b	14eb4 <__assert_fail@plt+0x3dcc>
   14e54:	ldr	r0, [sp, #8]
   14e58:	add	r0, r0, #1
   14e5c:	str	r0, [sp, #8]
   14e60:	ldr	r0, [sp, #8]
   14e64:	bl	17ff0 <__assert_fail@plt+0x6f08>
   14e68:	ldr	r1, [sp, #16]
   14e6c:	str	r0, [r1]
   14e70:	ldr	r0, [sp, #16]
   14e74:	ldr	r0, [r0]
   14e78:	movw	r1, #0
   14e7c:	cmp	r0, r1
   14e80:	bne	14e90 <__assert_fail@plt+0x3da8>
   14e84:	ldr	r0, [sp, #8]
   14e88:	str	r0, [fp, #-4]
   14e8c:	b	14eb4 <__assert_fail@plt+0x3dcc>
   14e90:	ldr	r0, [fp, #-8]
   14e94:	ldr	r1, [fp, #-12]
   14e98:	ldr	r2, [sp, #16]
   14e9c:	ldr	r2, [r2]
   14ea0:	ldr	r3, [sp, #8]
   14ea4:	bl	13c9c <__assert_fail@plt+0x2bb4>
   14ea8:	ldr	r0, [sp, #8]
   14eac:	sub	r0, r0, #1
   14eb0:	str	r0, [fp, #-4]
   14eb4:	ldr	r0, [fp, #-4]
   14eb8:	mov	sp, fp
   14ebc:	pop	{fp, pc}
   14ec0:	svcne	0x00ffffff
   14ec4:	svceq	0x00ffffff
   14ec8:	andhi	r0, r0, r0
   14ecc:			; <UNDEFINED> instruction: 0xf0000000
   14ed0:	svcvc	0x00ffffff
   14ed4:			; <UNDEFINED> instruction: 0xf0000001
   14ed8:			; <UNDEFINED> instruction: 0xffff8000
   14edc:			; <UNDEFINED> instruction: 0xfffff000
   14ee0:			; <UNDEFINED> instruction: 0xfffff001
   14ee4:			; <UNDEFINED> instruction: 0xffffe001
   14ee8:	push	{fp, lr}
   14eec:	mov	fp, sp
   14ef0:	sub	sp, sp, #8
   14ef4:	strb	r0, [fp, #-1]
   14ef8:	ldrb	r0, [fp, #-1]
   14efc:	bl	141f8 <__assert_fail@plt+0x3110>
   14f00:	and	r0, r0, #255	; 0xff
   14f04:	movw	r1, #10207	; 0x27df
   14f08:	movt	r1, #2
   14f0c:	add	r0, r1, r0
   14f10:	ldrsb	r0, [r0]
   14f14:	movw	r1, #0
   14f18:	cmp	r1, r0
   14f1c:	movw	r0, #0
   14f20:	movle	r0, #1
   14f24:	and	r0, r0, #1
   14f28:	mov	sp, fp
   14f2c:	pop	{fp, pc}
   14f30:	sub	sp, sp, #4
   14f34:	str	r0, [sp]
   14f38:	ldr	r0, [sp]
   14f3c:	movw	r1, #0
   14f40:	str	r1, [r0]
   14f44:	add	sp, sp, #4
   14f48:	bx	lr
   14f4c:	push	{fp, lr}
   14f50:	mov	fp, sp
   14f54:	sub	sp, sp, #40	; 0x28
   14f58:	ldr	ip, [fp, #8]
   14f5c:	str	r0, [fp, #-4]
   14f60:	str	r1, [fp, #-8]
   14f64:	str	r2, [fp, #-12]
   14f68:	str	r3, [fp, #-16]
   14f6c:	ldr	r0, [fp, #8]
   14f70:	ldr	r0, [r0]
   14f74:	str	r0, [sp, #20]
   14f78:	ldr	r0, [fp, #-4]
   14f7c:	movw	r1, #0
   14f80:	cmp	r0, r1
   14f84:	movw	r0, #0
   14f88:	movne	r0, #1
   14f8c:	and	r0, r0, #1
   14f90:	strb	r0, [sp, #19]
   14f94:	movw	r0, #0
   14f98:	strb	r0, [sp, #18]
   14f9c:	str	r1, [sp, #12]
   14fa0:	ldrb	r0, [sp, #19]
   14fa4:	tst	r0, #1
   14fa8:	beq	14fd0 <__assert_fail@plt+0x3ee8>
   14fac:	ldr	r0, [fp, #-4]
   14fb0:	ldr	r0, [r0]
   14fb4:	str	r0, [sp, #12]
   14fb8:	ldr	r0, [fp, #-12]
   14fbc:	cmp	r0, #0
   14fc0:	movw	r0, #0
   14fc4:	moveq	r0, #1
   14fc8:	and	r0, r0, #1
   14fcc:	strb	r0, [sp, #18]
   14fd0:	b	14fd4 <__assert_fail@plt+0x3eec>
   14fd4:	ldr	r0, [sp, #20]
   14fd8:	str	r0, [sp, #8]
   14fdc:	ldr	r0, [sp, #12]
   14fe0:	cmp	r0, #0
   14fe4:	bne	15040 <__assert_fail@plt+0x3f58>
   14fe8:	ldrb	r0, [sp, #18]
   14fec:	tst	r0, #1
   14ff0:	bne	15040 <__assert_fail@plt+0x3f58>
   14ff4:	b	14ff8 <__assert_fail@plt+0x3f10>
   14ff8:	ldr	r0, [sp, #20]
   14ffc:	str	r0, [sp, #8]
   15000:	ldr	r0, [fp, #-8]
   15004:	ldr	r1, [fp, #-12]
   15008:	sub	r2, fp, #16
   1500c:	add	r3, sp, #20
   15010:	bl	151ac <__assert_fail@plt+0x40c4>
   15014:	tst	r0, #1
   15018:	bne	15020 <__assert_fail@plt+0x3f38>
   1501c:	b	1503c <__assert_fail@plt+0x3f54>
   15020:	ldr	r0, [fp, #-8]
   15024:	add	r0, r0, #8
   15028:	str	r0, [fp, #-8]
   1502c:	ldr	r0, [fp, #-12]
   15030:	sub	r0, r0, #8
   15034:	str	r0, [fp, #-12]
   15038:	b	14ff8 <__assert_fail@plt+0x3f10>
   1503c:	b	15040 <__assert_fail@plt+0x3f58>
   15040:	ldr	r0, [fp, #-12]
   15044:	cmp	r0, #0
   15048:	bne	1505c <__assert_fail@plt+0x3f74>
   1504c:	ldrb	r0, [sp, #18]
   15050:	tst	r0, #1
   15054:	bne	1505c <__assert_fail@plt+0x3f74>
   15058:	b	1517c <__assert_fail@plt+0x4094>
   1505c:	ldr	r0, [fp, #-12]
   15060:	cmp	r0, #0
   15064:	beq	150a4 <__assert_fail@plt+0x3fbc>
   15068:	ldr	r0, [fp, #-8]
   1506c:	ldrb	r0, [r0]
   15070:	cmp	r0, #10
   15074:	bne	150a4 <__assert_fail@plt+0x3fbc>
   15078:	ldrb	r0, [sp, #19]
   1507c:	tst	r0, #1
   15080:	beq	150a4 <__assert_fail@plt+0x3fbc>
   15084:	ldr	r0, [fp, #-8]
   15088:	add	r0, r0, #1
   1508c:	str	r0, [fp, #-8]
   15090:	ldr	r0, [fp, #-12]
   15094:	mvn	r1, #0
   15098:	add	r0, r0, r1
   1509c:	str	r0, [fp, #-12]
   150a0:	b	14fd4 <__assert_fail@plt+0x3eec>
   150a4:	ldr	r0, [sp, #8]
   150a8:	ldr	r1, [sp, #20]
   150ac:	sub	r0, r0, r1
   150b0:	ldr	r1, [fp, #-16]
   150b4:	movw	r2, #0
   150b8:	sub	r0, r2, r0
   150bc:	add	r0, r1, r0
   150c0:	str	r0, [fp, #-16]
   150c4:	ldr	r0, [sp, #8]
   150c8:	str	r0, [sp, #20]
   150cc:	ldr	r0, [fp, #-8]
   150d0:	ldr	r1, [fp, #-12]
   150d4:	add	r0, r0, r1
   150d8:	str	r0, [sp, #4]
   150dc:	ldrb	r0, [sp, #19]
   150e0:	tst	r0, #1
   150e4:	beq	15104 <__assert_fail@plt+0x401c>
   150e8:	ldr	r0, [fp, #-4]
   150ec:	ldr	r2, [sp, #4]
   150f0:	sub	r1, fp, #8
   150f4:	sub	r3, fp, #12
   150f8:	bl	157c4 <__assert_fail@plt+0x46dc>
   150fc:	str	r0, [sp]
   15100:	b	1510c <__assert_fail@plt+0x4024>
   15104:	ldr	r0, [fp, #-8]
   15108:	str	r0, [sp]
   1510c:	ldr	r0, [fp, #-12]
   15110:	cmp	r0, #0
   15114:	beq	1513c <__assert_fail@plt+0x4054>
   15118:	ldr	r0, [fp, #-12]
   1511c:	cmp	r0, #8
   15120:	bge	15148 <__assert_fail@plt+0x4060>
   15124:	ldrb	r0, [sp, #18]
   15128:	tst	r0, #1
   1512c:	bne	15148 <__assert_fail@plt+0x4060>
   15130:	ldrb	r0, [sp, #19]
   15134:	tst	r0, #1
   15138:	beq	15148 <__assert_fail@plt+0x4060>
   1513c:	movw	r0, #0
   15140:	str	r0, [fp, #-12]
   15144:	b	1517c <__assert_fail@plt+0x4094>
   15148:	ldr	r0, [sp]
   1514c:	ldr	r1, [fp, #-12]
   15150:	sub	r2, fp, #16
   15154:	add	r3, sp, #20
   15158:	bl	151ac <__assert_fail@plt+0x40c4>
   1515c:	tst	r0, #1
   15160:	bne	15168 <__assert_fail@plt+0x4080>
   15164:	b	1517c <__assert_fail@plt+0x4094>
   15168:	ldr	r0, [sp, #4]
   1516c:	ldr	r1, [fp, #-8]
   15170:	sub	r0, r0, r1
   15174:	str	r0, [fp, #-12]
   15178:	b	14fd4 <__assert_fail@plt+0x3eec>
   1517c:	ldr	r0, [sp, #20]
   15180:	ldr	r1, [fp, #8]
   15184:	ldr	r2, [r1]
   15188:	sub	r0, r2, r0
   1518c:	str	r0, [r1]
   15190:	ldr	r0, [fp, #-12]
   15194:	cmp	r0, #0
   15198:	movw	r0, #0
   1519c:	moveq	r0, #1
   151a0:	and	r0, r0, #1
   151a4:	mov	sp, fp
   151a8:	pop	{fp, pc}
   151ac:	push	{fp, lr}
   151b0:	mov	fp, sp
   151b4:	sub	sp, sp, #56	; 0x38
   151b8:	str	r0, [fp, #-8]
   151bc:	str	r1, [fp, #-12]
   151c0:	str	r2, [fp, #-16]
   151c4:	str	r3, [fp, #-20]	; 0xffffffec
   151c8:	ldr	r0, [fp, #-16]
   151cc:	ldr	r0, [r0]
   151d0:	str	r0, [fp, #-24]	; 0xffffffe8
   151d4:	ldr	r0, [fp, #-12]
   151d8:	cmp	r0, #8
   151dc:	bge	151f0 <__assert_fail@plt+0x4108>
   151e0:	movw	r0, #0
   151e4:	and	r0, r0, #1
   151e8:	strb	r0, [fp, #-1]
   151ec:	b	157b4 <__assert_fail@plt+0x46cc>
   151f0:	ldr	r0, [fp, #-8]
   151f4:	ldrb	r0, [r0]
   151f8:	bl	14ee8 <__assert_fail@plt+0x3e00>
   151fc:	tst	r0, #1
   15200:	beq	15218 <__assert_fail@plt+0x4130>
   15204:	ldr	r0, [fp, #-8]
   15208:	ldrb	r0, [r0, #1]
   1520c:	bl	14ee8 <__assert_fail@plt+0x3e00>
   15210:	tst	r0, #1
   15214:	bne	15228 <__assert_fail@plt+0x4140>
   15218:	movw	r0, #0
   1521c:	and	r0, r0, #1
   15220:	strb	r0, [fp, #-1]
   15224:	b	157b4 <__assert_fail@plt+0x46cc>
   15228:	ldr	r0, [fp, #-20]	; 0xffffffec
   1522c:	ldr	r0, [r0]
   15230:	cmp	r0, #0
   15234:	beq	152b4 <__assert_fail@plt+0x41cc>
   15238:	ldr	r0, [fp, #-8]
   1523c:	ldrb	r0, [r0]
   15240:	bl	141f8 <__assert_fail@plt+0x3110>
   15244:	and	r0, r0, #255	; 0xff
   15248:	movw	r1, #10207	; 0x27df
   1524c:	movt	r1, #2
   15250:	add	r0, r1, r0
   15254:	ldrsb	r0, [r0]
   15258:	lsl	r0, r0, #3
   1525c:	ldr	r1, [fp, #-8]
   15260:	ldrb	r1, [r1, #1]
   15264:	str	r0, [sp, #28]
   15268:	mov	r0, r1
   1526c:	bl	141f8 <__assert_fail@plt+0x3110>
   15270:	and	r0, r0, #255	; 0xff
   15274:	movw	r1, #10207	; 0x27df
   15278:	movt	r1, #2
   1527c:	add	r0, r1, r0
   15280:	ldrsb	r0, [r0]
   15284:	asr	r0, r0, #2
   15288:	ldr	r1, [sp, #28]
   1528c:	orr	r0, r1, r0
   15290:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15294:	add	r2, r1, #1
   15298:	str	r2, [fp, #-24]	; 0xffffffe8
   1529c:	strb	r0, [r1]
   152a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   152a4:	ldr	r1, [r0]
   152a8:	mvn	r2, #0
   152ac:	add	r1, r1, r2
   152b0:	str	r1, [r0]
   152b4:	ldr	r0, [fp, #-8]
   152b8:	ldrb	r0, [r0, #2]
   152bc:	cmp	r0, #61	; 0x3d
   152c0:	bne	15338 <__assert_fail@plt+0x4250>
   152c4:	ldr	r0, [fp, #-8]
   152c8:	ldrb	r0, [r0, #3]
   152cc:	cmp	r0, #61	; 0x3d
   152d0:	bne	15314 <__assert_fail@plt+0x422c>
   152d4:	ldr	r0, [fp, #-8]
   152d8:	ldrb	r0, [r0, #4]
   152dc:	cmp	r0, #61	; 0x3d
   152e0:	bne	15314 <__assert_fail@plt+0x422c>
   152e4:	ldr	r0, [fp, #-8]
   152e8:	ldrb	r0, [r0, #5]
   152ec:	cmp	r0, #61	; 0x3d
   152f0:	bne	15314 <__assert_fail@plt+0x422c>
   152f4:	ldr	r0, [fp, #-8]
   152f8:	ldrb	r0, [r0, #6]
   152fc:	cmp	r0, #61	; 0x3d
   15300:	bne	15314 <__assert_fail@plt+0x422c>
   15304:	ldr	r0, [fp, #-8]
   15308:	ldrb	r0, [r0, #7]
   1530c:	cmp	r0, #61	; 0x3d
   15310:	beq	15334 <__assert_fail@plt+0x424c>
   15314:	b	15318 <__assert_fail@plt+0x4230>
   15318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1531c:	ldr	r1, [fp, #-16]
   15320:	str	r0, [r1]
   15324:	movw	r0, #0
   15328:	and	r0, r0, #1
   1532c:	strb	r0, [fp, #-1]
   15330:	b	157b4 <__assert_fail@plt+0x46cc>
   15334:	b	1579c <__assert_fail@plt+0x46b4>
   15338:	ldr	r0, [fp, #-8]
   1533c:	ldrb	r0, [r0, #2]
   15340:	bl	14ee8 <__assert_fail@plt+0x3e00>
   15344:	tst	r0, #1
   15348:	beq	15360 <__assert_fail@plt+0x4278>
   1534c:	ldr	r0, [fp, #-8]
   15350:	ldrb	r0, [r0, #3]
   15354:	bl	14ee8 <__assert_fail@plt+0x3e00>
   15358:	tst	r0, #1
   1535c:	bne	15380 <__assert_fail@plt+0x4298>
   15360:	b	15364 <__assert_fail@plt+0x427c>
   15364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15368:	ldr	r1, [fp, #-16]
   1536c:	str	r0, [r1]
   15370:	movw	r0, #0
   15374:	and	r0, r0, #1
   15378:	strb	r0, [fp, #-1]
   1537c:	b	157b4 <__assert_fail@plt+0x46cc>
   15380:	ldr	r0, [fp, #-20]	; 0xffffffec
   15384:	ldr	r0, [r0]
   15388:	cmp	r0, #0
   1538c:	beq	15440 <__assert_fail@plt+0x4358>
   15390:	ldr	r0, [fp, #-8]
   15394:	ldrb	r0, [r0, #1]
   15398:	bl	141f8 <__assert_fail@plt+0x3110>
   1539c:	and	r0, r0, #255	; 0xff
   153a0:	movw	r1, #10207	; 0x27df
   153a4:	movt	r1, #2
   153a8:	add	r0, r1, r0
   153ac:	ldrsb	r0, [r0]
   153b0:	lsl	r0, r0, #6
   153b4:	ldr	r1, [fp, #-8]
   153b8:	ldrb	r1, [r1, #2]
   153bc:	str	r0, [sp, #24]
   153c0:	mov	r0, r1
   153c4:	bl	141f8 <__assert_fail@plt+0x3110>
   153c8:	and	r0, r0, #255	; 0xff
   153cc:	movw	r1, #10207	; 0x27df
   153d0:	movt	r1, #2
   153d4:	add	r0, r1, r0
   153d8:	ldrsb	r0, [r0]
   153dc:	lsl	r0, r0, #1
   153e0:	ldr	r1, [sp, #24]
   153e4:	orr	r0, r1, r0
   153e8:	ldr	r1, [fp, #-8]
   153ec:	ldrb	r1, [r1, #3]
   153f0:	str	r0, [sp, #20]
   153f4:	mov	r0, r1
   153f8:	bl	141f8 <__assert_fail@plt+0x3110>
   153fc:	and	r0, r0, #255	; 0xff
   15400:	movw	r1, #10207	; 0x27df
   15404:	movt	r1, #2
   15408:	add	r0, r1, r0
   1540c:	ldrsb	r0, [r0]
   15410:	asr	r0, r0, #4
   15414:	ldr	r1, [sp, #20]
   15418:	orr	r0, r1, r0
   1541c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15420:	add	r2, r1, #1
   15424:	str	r2, [fp, #-24]	; 0xffffffe8
   15428:	strb	r0, [r1]
   1542c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15430:	ldr	r1, [r0]
   15434:	mvn	r2, #0
   15438:	add	r1, r1, r2
   1543c:	str	r1, [r0]
   15440:	ldr	r0, [fp, #-8]
   15444:	ldrb	r0, [r0, #4]
   15448:	cmp	r0, #61	; 0x3d
   1544c:	bne	154a4 <__assert_fail@plt+0x43bc>
   15450:	ldr	r0, [fp, #-8]
   15454:	ldrb	r0, [r0, #5]
   15458:	cmp	r0, #61	; 0x3d
   1545c:	bne	15480 <__assert_fail@plt+0x4398>
   15460:	ldr	r0, [fp, #-8]
   15464:	ldrb	r0, [r0, #6]
   15468:	cmp	r0, #61	; 0x3d
   1546c:	bne	15480 <__assert_fail@plt+0x4398>
   15470:	ldr	r0, [fp, #-8]
   15474:	ldrb	r0, [r0, #7]
   15478:	cmp	r0, #61	; 0x3d
   1547c:	beq	154a0 <__assert_fail@plt+0x43b8>
   15480:	b	15484 <__assert_fail@plt+0x439c>
   15484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15488:	ldr	r1, [fp, #-16]
   1548c:	str	r0, [r1]
   15490:	movw	r0, #0
   15494:	and	r0, r0, #1
   15498:	strb	r0, [fp, #-1]
   1549c:	b	157b4 <__assert_fail@plt+0x46cc>
   154a0:	b	15798 <__assert_fail@plt+0x46b0>
   154a4:	ldr	r0, [fp, #-8]
   154a8:	ldrb	r0, [r0, #4]
   154ac:	bl	14ee8 <__assert_fail@plt+0x3e00>
   154b0:	tst	r0, #1
   154b4:	bne	154d8 <__assert_fail@plt+0x43f0>
   154b8:	b	154bc <__assert_fail@plt+0x43d4>
   154bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154c0:	ldr	r1, [fp, #-16]
   154c4:	str	r0, [r1]
   154c8:	movw	r0, #0
   154cc:	and	r0, r0, #1
   154d0:	strb	r0, [fp, #-1]
   154d4:	b	157b4 <__assert_fail@plt+0x46cc>
   154d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   154dc:	ldr	r0, [r0]
   154e0:	cmp	r0, #0
   154e4:	beq	15564 <__assert_fail@plt+0x447c>
   154e8:	ldr	r0, [fp, #-8]
   154ec:	ldrb	r0, [r0, #3]
   154f0:	bl	141f8 <__assert_fail@plt+0x3110>
   154f4:	and	r0, r0, #255	; 0xff
   154f8:	movw	r1, #10207	; 0x27df
   154fc:	movt	r1, #2
   15500:	add	r0, r1, r0
   15504:	ldrsb	r0, [r0]
   15508:	lsl	r0, r0, #4
   1550c:	ldr	r1, [fp, #-8]
   15510:	ldrb	r1, [r1, #4]
   15514:	str	r0, [sp, #16]
   15518:	mov	r0, r1
   1551c:	bl	141f8 <__assert_fail@plt+0x3110>
   15520:	and	r0, r0, #255	; 0xff
   15524:	movw	r1, #10207	; 0x27df
   15528:	movt	r1, #2
   1552c:	add	r0, r1, r0
   15530:	ldrsb	r0, [r0]
   15534:	asr	r0, r0, #1
   15538:	ldr	r1, [sp, #16]
   1553c:	orr	r0, r1, r0
   15540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15544:	add	r2, r1, #1
   15548:	str	r2, [fp, #-24]	; 0xffffffe8
   1554c:	strb	r0, [r1]
   15550:	ldr	r0, [fp, #-20]	; 0xffffffec
   15554:	ldr	r1, [r0]
   15558:	mvn	r2, #0
   1555c:	add	r1, r1, r2
   15560:	str	r1, [r0]
   15564:	ldr	r0, [fp, #-8]
   15568:	ldrb	r0, [r0, #5]
   1556c:	cmp	r0, #61	; 0x3d
   15570:	bne	155b8 <__assert_fail@plt+0x44d0>
   15574:	ldr	r0, [fp, #-8]
   15578:	ldrb	r0, [r0, #6]
   1557c:	cmp	r0, #61	; 0x3d
   15580:	bne	15594 <__assert_fail@plt+0x44ac>
   15584:	ldr	r0, [fp, #-8]
   15588:	ldrb	r0, [r0, #7]
   1558c:	cmp	r0, #61	; 0x3d
   15590:	beq	155b4 <__assert_fail@plt+0x44cc>
   15594:	b	15598 <__assert_fail@plt+0x44b0>
   15598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1559c:	ldr	r1, [fp, #-16]
   155a0:	str	r0, [r1]
   155a4:	movw	r0, #0
   155a8:	and	r0, r0, #1
   155ac:	strb	r0, [fp, #-1]
   155b0:	b	157b4 <__assert_fail@plt+0x46cc>
   155b4:	b	15794 <__assert_fail@plt+0x46ac>
   155b8:	ldr	r0, [fp, #-8]
   155bc:	ldrb	r0, [r0, #5]
   155c0:	bl	14ee8 <__assert_fail@plt+0x3e00>
   155c4:	tst	r0, #1
   155c8:	beq	155e0 <__assert_fail@plt+0x44f8>
   155cc:	ldr	r0, [fp, #-8]
   155d0:	ldrb	r0, [r0, #6]
   155d4:	bl	14ee8 <__assert_fail@plt+0x3e00>
   155d8:	tst	r0, #1
   155dc:	bne	15600 <__assert_fail@plt+0x4518>
   155e0:	b	155e4 <__assert_fail@plt+0x44fc>
   155e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155e8:	ldr	r1, [fp, #-16]
   155ec:	str	r0, [r1]
   155f0:	movw	r0, #0
   155f4:	and	r0, r0, #1
   155f8:	strb	r0, [fp, #-1]
   155fc:	b	157b4 <__assert_fail@plt+0x46cc>
   15600:	ldr	r0, [fp, #-20]	; 0xffffffec
   15604:	ldr	r0, [r0]
   15608:	cmp	r0, #0
   1560c:	beq	156c0 <__assert_fail@plt+0x45d8>
   15610:	ldr	r0, [fp, #-8]
   15614:	ldrb	r0, [r0, #4]
   15618:	bl	141f8 <__assert_fail@plt+0x3110>
   1561c:	and	r0, r0, #255	; 0xff
   15620:	movw	r1, #10207	; 0x27df
   15624:	movt	r1, #2
   15628:	add	r0, r1, r0
   1562c:	ldrsb	r0, [r0]
   15630:	lsl	r0, r0, #7
   15634:	ldr	r1, [fp, #-8]
   15638:	ldrb	r1, [r1, #5]
   1563c:	str	r0, [sp, #12]
   15640:	mov	r0, r1
   15644:	bl	141f8 <__assert_fail@plt+0x3110>
   15648:	and	r0, r0, #255	; 0xff
   1564c:	movw	r1, #10207	; 0x27df
   15650:	movt	r1, #2
   15654:	add	r0, r1, r0
   15658:	ldrsb	r0, [r0]
   1565c:	lsl	r0, r0, #2
   15660:	ldr	r1, [sp, #12]
   15664:	orr	r0, r1, r0
   15668:	ldr	r1, [fp, #-8]
   1566c:	ldrb	r1, [r1, #6]
   15670:	str	r0, [sp, #8]
   15674:	mov	r0, r1
   15678:	bl	141f8 <__assert_fail@plt+0x3110>
   1567c:	and	r0, r0, #255	; 0xff
   15680:	movw	r1, #10207	; 0x27df
   15684:	movt	r1, #2
   15688:	add	r0, r1, r0
   1568c:	ldrsb	r0, [r0]
   15690:	asr	r0, r0, #3
   15694:	ldr	r1, [sp, #8]
   15698:	orr	r0, r1, r0
   1569c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156a0:	add	r2, r1, #1
   156a4:	str	r2, [fp, #-24]	; 0xffffffe8
   156a8:	strb	r0, [r1]
   156ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   156b0:	ldr	r1, [r0]
   156b4:	mvn	r2, #0
   156b8:	add	r1, r1, r2
   156bc:	str	r1, [r0]
   156c0:	ldr	r0, [fp, #-8]
   156c4:	ldrb	r0, [r0, #7]
   156c8:	cmp	r0, #61	; 0x3d
   156cc:	beq	15790 <__assert_fail@plt+0x46a8>
   156d0:	ldr	r0, [fp, #-8]
   156d4:	ldrb	r0, [r0, #7]
   156d8:	bl	14ee8 <__assert_fail@plt+0x3e00>
   156dc:	tst	r0, #1
   156e0:	bne	15704 <__assert_fail@plt+0x461c>
   156e4:	b	156e8 <__assert_fail@plt+0x4600>
   156e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156ec:	ldr	r1, [fp, #-16]
   156f0:	str	r0, [r1]
   156f4:	movw	r0, #0
   156f8:	and	r0, r0, #1
   156fc:	strb	r0, [fp, #-1]
   15700:	b	157b4 <__assert_fail@plt+0x46cc>
   15704:	ldr	r0, [fp, #-20]	; 0xffffffec
   15708:	ldr	r0, [r0]
   1570c:	cmp	r0, #0
   15710:	beq	1578c <__assert_fail@plt+0x46a4>
   15714:	ldr	r0, [fp, #-8]
   15718:	ldrb	r0, [r0, #6]
   1571c:	bl	141f8 <__assert_fail@plt+0x3110>
   15720:	and	r0, r0, #255	; 0xff
   15724:	movw	r1, #10207	; 0x27df
   15728:	movt	r1, #2
   1572c:	add	r0, r1, r0
   15730:	ldrsb	r0, [r0]
   15734:	lsl	r0, r0, #5
   15738:	ldr	r1, [fp, #-8]
   1573c:	ldrb	r1, [r1, #7]
   15740:	str	r0, [sp, #4]
   15744:	mov	r0, r1
   15748:	bl	141f8 <__assert_fail@plt+0x3110>
   1574c:	and	r0, r0, #255	; 0xff
   15750:	movw	r1, #10207	; 0x27df
   15754:	movt	r1, #2
   15758:	add	r0, r1, r0
   1575c:	ldrsb	r0, [r0]
   15760:	ldr	r1, [sp, #4]
   15764:	orr	r0, r1, r0
   15768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1576c:	add	r2, r1, #1
   15770:	str	r2, [fp, #-24]	; 0xffffffe8
   15774:	strb	r0, [r1]
   15778:	ldr	r0, [fp, #-20]	; 0xffffffec
   1577c:	ldr	r1, [r0]
   15780:	mvn	r2, #0
   15784:	add	r1, r1, r2
   15788:	str	r1, [r0]
   1578c:	b	15790 <__assert_fail@plt+0x46a8>
   15790:	b	15794 <__assert_fail@plt+0x46ac>
   15794:	b	15798 <__assert_fail@plt+0x46b0>
   15798:	b	1579c <__assert_fail@plt+0x46b4>
   1579c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157a0:	ldr	r1, [fp, #-16]
   157a4:	str	r0, [r1]
   157a8:	movw	r0, #1
   157ac:	and	r0, r0, #1
   157b0:	strb	r0, [fp, #-1]
   157b4:	ldrb	r0, [fp, #-1]
   157b8:	and	r0, r0, #1
   157bc:	mov	sp, fp
   157c0:	pop	{fp, pc}
   157c4:	push	{fp, lr}
   157c8:	mov	fp, sp
   157cc:	sub	sp, sp, #32
   157d0:	str	r0, [fp, #-8]
   157d4:	str	r1, [fp, #-12]
   157d8:	str	r2, [sp, #16]
   157dc:	str	r3, [sp, #12]
   157e0:	ldr	r0, [fp, #-8]
   157e4:	ldr	r0, [r0]
   157e8:	cmp	r0, #8
   157ec:	bne	157fc <__assert_fail@plt+0x4714>
   157f0:	ldr	r0, [fp, #-8]
   157f4:	movw	r1, #0
   157f8:	str	r1, [r0]
   157fc:	ldr	r0, [fp, #-8]
   15800:	ldr	r0, [r0]
   15804:	cmp	r0, #0
   15808:	bne	1587c <__assert_fail@plt+0x4794>
   1580c:	ldr	r0, [fp, #-12]
   15810:	ldr	r0, [r0]
   15814:	str	r0, [sp, #8]
   15818:	ldr	r0, [sp, #16]
   1581c:	ldr	r1, [fp, #-12]
   15820:	ldr	r1, [r1]
   15824:	sub	r0, r0, r1
   15828:	movw	r1, #8
   1582c:	cmp	r1, r0
   15830:	bgt	15878 <__assert_fail@plt+0x4790>
   15834:	ldr	r0, [sp, #8]
   15838:	mov	r1, #10
   1583c:	mov	r2, #8
   15840:	bl	11040 <memchr@plt>
   15844:	movw	r1, #0
   15848:	cmp	r0, r1
   1584c:	bne	15878 <__assert_fail@plt+0x4790>
   15850:	ldr	r0, [fp, #-12]
   15854:	ldr	r1, [r0]
   15858:	add	r1, r1, #8
   1585c:	str	r1, [r0]
   15860:	ldr	r0, [sp, #12]
   15864:	movw	r1, #8
   15868:	str	r1, [r0]
   1586c:	ldr	r0, [sp, #8]
   15870:	str	r0, [fp, #-4]
   15874:	b	15920 <__assert_fail@plt+0x4838>
   15878:	b	1587c <__assert_fail@plt+0x4794>
   1587c:	ldr	r0, [fp, #-12]
   15880:	ldr	r0, [r0]
   15884:	str	r0, [sp, #4]
   15888:	ldr	r0, [sp, #4]
   1588c:	ldr	r1, [sp, #16]
   15890:	cmp	r0, r1
   15894:	bcs	158f8 <__assert_fail@plt+0x4810>
   15898:	ldr	r0, [sp, #4]
   1589c:	add	r1, r0, #1
   158a0:	str	r1, [sp, #4]
   158a4:	ldrb	r0, [r0]
   158a8:	strb	r0, [sp, #3]
   158ac:	ldrb	r0, [sp, #3]
   158b0:	cmp	r0, #10
   158b4:	beq	158f4 <__assert_fail@plt+0x480c>
   158b8:	ldrb	r0, [sp, #3]
   158bc:	ldr	r1, [fp, #-8]
   158c0:	add	r1, r1, #4
   158c4:	ldr	r2, [fp, #-8]
   158c8:	ldr	r3, [r2]
   158cc:	add	ip, r3, #1
   158d0:	str	ip, [r2]
   158d4:	add	r1, r1, r3
   158d8:	strb	r0, [r1]
   158dc:	ldr	r0, [fp, #-8]
   158e0:	ldr	r0, [r0]
   158e4:	cmp	r0, #8
   158e8:	bne	158f0 <__assert_fail@plt+0x4808>
   158ec:	b	158f8 <__assert_fail@plt+0x4810>
   158f0:	b	158f4 <__assert_fail@plt+0x480c>
   158f4:	b	15888 <__assert_fail@plt+0x47a0>
   158f8:	ldr	r0, [sp, #4]
   158fc:	ldr	r1, [fp, #-12]
   15900:	str	r0, [r1]
   15904:	ldr	r0, [fp, #-8]
   15908:	ldr	r0, [r0]
   1590c:	ldr	r1, [sp, #12]
   15910:	str	r0, [r1]
   15914:	ldr	r0, [fp, #-8]
   15918:	add	r0, r0, #4
   1591c:	str	r0, [fp, #-4]
   15920:	ldr	r0, [fp, #-4]
   15924:	mov	sp, fp
   15928:	pop	{fp, pc}
   1592c:	push	{fp, lr}
   15930:	mov	fp, sp
   15934:	sub	sp, sp, #32
   15938:	ldr	ip, [fp, #8]
   1593c:	str	r0, [fp, #-8]
   15940:	str	r1, [fp, #-12]
   15944:	str	r2, [sp, #16]
   15948:	str	r3, [sp, #12]
   1594c:	ldr	r0, [sp, #16]
   15950:	asr	r0, r0, #3
   15954:	add	r0, r0, #1
   15958:	movw	r1, #5
   1595c:	mul	r0, r0, r1
   15960:	str	r0, [sp, #8]
   15964:	ldr	r0, [sp, #8]
   15968:	str	ip, [sp, #4]
   1596c:	bl	17ff0 <__assert_fail@plt+0x6f08>
   15970:	ldr	r1, [sp, #12]
   15974:	str	r0, [r1]
   15978:	ldr	r0, [sp, #12]
   1597c:	ldr	r0, [r0]
   15980:	movw	r1, #0
   15984:	cmp	r0, r1
   15988:	bne	1599c <__assert_fail@plt+0x48b4>
   1598c:	movw	r0, #1
   15990:	and	r0, r0, #1
   15994:	strb	r0, [fp, #-1]
   15998:	b	15a14 <__assert_fail@plt+0x492c>
   1599c:	ldr	r0, [fp, #-8]
   159a0:	ldr	r1, [fp, #-12]
   159a4:	ldr	r2, [sp, #16]
   159a8:	ldr	r3, [sp, #12]
   159ac:	ldr	r3, [r3]
   159b0:	add	ip, sp, #8
   159b4:	str	ip, [sp]
   159b8:	bl	14f4c <__assert_fail@plt+0x3e64>
   159bc:	tst	r0, #1
   159c0:	bne	159ec <__assert_fail@plt+0x4904>
   159c4:	ldr	r0, [sp, #12]
   159c8:	ldr	r0, [r0]
   159cc:	bl	17e8c <__assert_fail@plt+0x6da4>
   159d0:	ldr	r0, [sp, #12]
   159d4:	movw	r1, #0
   159d8:	str	r1, [r0]
   159dc:	movw	r0, #0
   159e0:	and	r0, r0, #1
   159e4:	strb	r0, [fp, #-1]
   159e8:	b	15a14 <__assert_fail@plt+0x492c>
   159ec:	ldr	r0, [fp, #8]
   159f0:	movw	r1, #0
   159f4:	cmp	r0, r1
   159f8:	beq	15a08 <__assert_fail@plt+0x4920>
   159fc:	ldr	r0, [sp, #8]
   15a00:	ldr	r1, [fp, #8]
   15a04:	str	r0, [r1]
   15a08:	movw	r0, #1
   15a0c:	and	r0, r0, #1
   15a10:	strb	r0, [fp, #-1]
   15a14:	ldrb	r0, [fp, #-1]
   15a18:	and	r0, r0, #1
   15a1c:	mov	sp, fp
   15a20:	pop	{fp, pc}
   15a24:	push	{fp, lr}
   15a28:	mov	fp, sp
   15a2c:	sub	sp, sp, #48	; 0x30
   15a30:	str	r0, [fp, #-4]
   15a34:	str	r1, [fp, #-8]
   15a38:	str	r2, [fp, #-12]
   15a3c:	str	r3, [fp, #-16]
   15a40:	ldr	r0, [fp, #-16]
   15a44:	asr	r1, r0, #31
   15a48:	add	r1, r0, r1, lsr #30
   15a4c:	bic	r1, r1, #3
   15a50:	sub	r0, r0, r1
   15a54:	cmp	r0, #0
   15a58:	bne	15a8c <__assert_fail@plt+0x49a4>
   15a5c:	ldr	r0, [fp, #-8]
   15a60:	ldr	r1, [fp, #-16]
   15a64:	asr	r1, r1, #2
   15a68:	movw	r2, #3
   15a6c:	mul	r1, r1, r2
   15a70:	cmp	r0, r1
   15a74:	bne	15a8c <__assert_fail@plt+0x49a4>
   15a78:	ldr	r0, [fp, #-4]
   15a7c:	ldr	r1, [fp, #-8]
   15a80:	ldr	r2, [fp, #-12]
   15a84:	bl	15d50 <__assert_fail@plt+0x4c68>
   15a88:	b	15d48 <__assert_fail@plt+0x4c60>
   15a8c:	b	15a90 <__assert_fail@plt+0x49a8>
   15a90:	ldr	r0, [fp, #-8]
   15a94:	cmp	r0, #0
   15a98:	movw	r0, #0
   15a9c:	str	r0, [fp, #-20]	; 0xffffffec
   15aa0:	beq	15ab8 <__assert_fail@plt+0x49d0>
   15aa4:	ldr	r0, [fp, #-16]
   15aa8:	cmp	r0, #0
   15aac:	movw	r0, #0
   15ab0:	movne	r0, #1
   15ab4:	str	r0, [fp, #-20]	; 0xffffffec
   15ab8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15abc:	tst	r0, #1
   15ac0:	beq	15d30 <__assert_fail@plt+0x4c48>
   15ac4:	ldr	r0, [fp, #-4]
   15ac8:	ldrb	r0, [r0]
   15acc:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15ad0:	and	r0, r0, #255	; 0xff
   15ad4:	asr	r0, r0, #2
   15ad8:	and	r0, r0, #63	; 0x3f
   15adc:	movw	r1, #10463	; 0x28df
   15ae0:	movt	r1, #2
   15ae4:	add	r0, r1, r0
   15ae8:	ldrb	r0, [r0]
   15aec:	ldr	r1, [fp, #-12]
   15af0:	add	r2, r1, #1
   15af4:	str	r2, [fp, #-12]
   15af8:	strb	r0, [r1]
   15afc:	ldr	r0, [fp, #-16]
   15b00:	mvn	r1, #0
   15b04:	add	r0, r0, r1
   15b08:	str	r0, [fp, #-16]
   15b0c:	cmp	r0, #0
   15b10:	bne	15b18 <__assert_fail@plt+0x4a30>
   15b14:	b	15d30 <__assert_fail@plt+0x4c48>
   15b18:	ldr	r0, [fp, #-4]
   15b1c:	ldrb	r0, [r0]
   15b20:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15b24:	and	r0, r0, #255	; 0xff
   15b28:	lsl	r0, r0, #4
   15b2c:	ldr	r1, [fp, #-8]
   15b30:	mvn	r2, #0
   15b34:	add	r1, r1, r2
   15b38:	str	r1, [fp, #-8]
   15b3c:	cmp	r1, #0
   15b40:	str	r0, [sp, #24]
   15b44:	beq	15b64 <__assert_fail@plt+0x4a7c>
   15b48:	ldr	r0, [fp, #-4]
   15b4c:	ldrb	r0, [r0, #1]
   15b50:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15b54:	and	r0, r0, #255	; 0xff
   15b58:	asr	r0, r0, #4
   15b5c:	str	r0, [sp, #20]
   15b60:	b	15b70 <__assert_fail@plt+0x4a88>
   15b64:	movw	r0, #0
   15b68:	str	r0, [sp, #20]
   15b6c:	b	15b70 <__assert_fail@plt+0x4a88>
   15b70:	ldr	r0, [sp, #20]
   15b74:	ldr	r1, [sp, #24]
   15b78:	add	r0, r1, r0
   15b7c:	and	r0, r0, #63	; 0x3f
   15b80:	movw	r2, #10463	; 0x28df
   15b84:	movt	r2, #2
   15b88:	add	r0, r2, r0
   15b8c:	ldrb	r0, [r0]
   15b90:	ldr	r2, [fp, #-12]
   15b94:	add	r3, r2, #1
   15b98:	str	r3, [fp, #-12]
   15b9c:	strb	r0, [r2]
   15ba0:	ldr	r0, [fp, #-16]
   15ba4:	mvn	r2, #0
   15ba8:	add	r0, r0, r2
   15bac:	str	r0, [fp, #-16]
   15bb0:	cmp	r0, #0
   15bb4:	bne	15bbc <__assert_fail@plt+0x4ad4>
   15bb8:	b	15d30 <__assert_fail@plt+0x4c48>
   15bbc:	ldr	r0, [fp, #-8]
   15bc0:	cmp	r0, #0
   15bc4:	beq	15c48 <__assert_fail@plt+0x4b60>
   15bc8:	ldr	r0, [fp, #-4]
   15bcc:	ldrb	r0, [r0, #1]
   15bd0:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15bd4:	and	r0, r0, #255	; 0xff
   15bd8:	lsl	r0, r0, #2
   15bdc:	ldr	r1, [fp, #-8]
   15be0:	mvn	r2, #0
   15be4:	add	r1, r1, r2
   15be8:	str	r1, [fp, #-8]
   15bec:	cmp	r1, #0
   15bf0:	str	r0, [sp, #16]
   15bf4:	beq	15c14 <__assert_fail@plt+0x4b2c>
   15bf8:	ldr	r0, [fp, #-4]
   15bfc:	ldrb	r0, [r0, #2]
   15c00:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15c04:	and	r0, r0, #255	; 0xff
   15c08:	asr	r0, r0, #6
   15c0c:	str	r0, [sp, #12]
   15c10:	b	15c20 <__assert_fail@plt+0x4b38>
   15c14:	movw	r0, #0
   15c18:	str	r0, [sp, #12]
   15c1c:	b	15c20 <__assert_fail@plt+0x4b38>
   15c20:	ldr	r0, [sp, #12]
   15c24:	ldr	r1, [sp, #16]
   15c28:	add	r0, r1, r0
   15c2c:	and	r0, r0, #63	; 0x3f
   15c30:	movw	r2, #10463	; 0x28df
   15c34:	movt	r2, #2
   15c38:	add	r0, r2, r0
   15c3c:	ldrb	r0, [r0]
   15c40:	str	r0, [sp, #8]
   15c44:	b	15c54 <__assert_fail@plt+0x4b6c>
   15c48:	movw	r0, #61	; 0x3d
   15c4c:	str	r0, [sp, #8]
   15c50:	b	15c54 <__assert_fail@plt+0x4b6c>
   15c54:	ldr	r0, [sp, #8]
   15c58:	ldr	r1, [fp, #-12]
   15c5c:	add	r2, r1, #1
   15c60:	str	r2, [fp, #-12]
   15c64:	strb	r0, [r1]
   15c68:	ldr	r0, [fp, #-16]
   15c6c:	mvn	r1, #0
   15c70:	add	r0, r0, r1
   15c74:	str	r0, [fp, #-16]
   15c78:	cmp	r0, #0
   15c7c:	bne	15c84 <__assert_fail@plt+0x4b9c>
   15c80:	b	15d30 <__assert_fail@plt+0x4c48>
   15c84:	ldr	r0, [fp, #-8]
   15c88:	cmp	r0, #0
   15c8c:	beq	15cbc <__assert_fail@plt+0x4bd4>
   15c90:	ldr	r0, [fp, #-4]
   15c94:	ldrb	r0, [r0, #2]
   15c98:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15c9c:	and	r0, r0, #255	; 0xff
   15ca0:	and	r0, r0, #63	; 0x3f
   15ca4:	movw	r1, #10463	; 0x28df
   15ca8:	movt	r1, #2
   15cac:	add	r0, r1, r0
   15cb0:	ldrb	r0, [r0]
   15cb4:	str	r0, [sp, #4]
   15cb8:	b	15cc8 <__assert_fail@plt+0x4be0>
   15cbc:	movw	r0, #61	; 0x3d
   15cc0:	str	r0, [sp, #4]
   15cc4:	b	15cc8 <__assert_fail@plt+0x4be0>
   15cc8:	ldr	r0, [sp, #4]
   15ccc:	ldr	r1, [fp, #-12]
   15cd0:	add	r2, r1, #1
   15cd4:	str	r2, [fp, #-12]
   15cd8:	strb	r0, [r1]
   15cdc:	ldr	r0, [fp, #-16]
   15ce0:	mvn	r1, #0
   15ce4:	add	r0, r0, r1
   15ce8:	str	r0, [fp, #-16]
   15cec:	cmp	r0, #0
   15cf0:	bne	15cf8 <__assert_fail@plt+0x4c10>
   15cf4:	b	15d30 <__assert_fail@plt+0x4c48>
   15cf8:	ldr	r0, [fp, #-8]
   15cfc:	cmp	r0, #0
   15d00:	beq	15d14 <__assert_fail@plt+0x4c2c>
   15d04:	ldr	r0, [fp, #-8]
   15d08:	mvn	r1, #0
   15d0c:	add	r0, r0, r1
   15d10:	str	r0, [fp, #-8]
   15d14:	ldr	r0, [fp, #-8]
   15d18:	cmp	r0, #0
   15d1c:	beq	15d2c <__assert_fail@plt+0x4c44>
   15d20:	ldr	r0, [fp, #-4]
   15d24:	add	r0, r0, #3
   15d28:	str	r0, [fp, #-4]
   15d2c:	b	15a90 <__assert_fail@plt+0x49a8>
   15d30:	ldr	r0, [fp, #-16]
   15d34:	cmp	r0, #0
   15d38:	beq	15d48 <__assert_fail@plt+0x4c60>
   15d3c:	ldr	r0, [fp, #-12]
   15d40:	movw	r1, #0
   15d44:	strb	r1, [r0]
   15d48:	mov	sp, fp
   15d4c:	pop	{fp, pc}
   15d50:	push	{fp, lr}
   15d54:	mov	fp, sp
   15d58:	sub	sp, sp, #24
   15d5c:	str	r0, [fp, #-4]
   15d60:	str	r1, [fp, #-8]
   15d64:	str	r2, [sp, #12]
   15d68:	ldr	r0, [fp, #-8]
   15d6c:	cmp	r0, #0
   15d70:	beq	15eb4 <__assert_fail@plt+0x4dcc>
   15d74:	ldr	r0, [fp, #-4]
   15d78:	ldrb	r0, [r0]
   15d7c:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15d80:	and	r0, r0, #255	; 0xff
   15d84:	asr	r0, r0, #2
   15d88:	and	r0, r0, #63	; 0x3f
   15d8c:	movw	r1, #10463	; 0x28df
   15d90:	movt	r1, #2
   15d94:	add	r0, r1, r0
   15d98:	ldrb	r0, [r0]
   15d9c:	ldr	r1, [sp, #12]
   15da0:	add	r2, r1, #1
   15da4:	str	r2, [sp, #12]
   15da8:	strb	r0, [r1]
   15dac:	ldr	r0, [fp, #-4]
   15db0:	ldrb	r0, [r0]
   15db4:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15db8:	and	r0, r0, #255	; 0xff
   15dbc:	lsl	r0, r0, #4
   15dc0:	ldr	r1, [fp, #-4]
   15dc4:	ldrb	r1, [r1, #1]
   15dc8:	str	r0, [sp, #8]
   15dcc:	mov	r0, r1
   15dd0:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15dd4:	and	r0, r0, #255	; 0xff
   15dd8:	asr	r0, r0, #4
   15ddc:	ldr	r1, [sp, #8]
   15de0:	add	r0, r1, r0
   15de4:	and	r0, r0, #63	; 0x3f
   15de8:	movw	r1, #10463	; 0x28df
   15dec:	movt	r1, #2
   15df0:	add	r0, r1, r0
   15df4:	ldrb	r0, [r0]
   15df8:	ldr	r1, [sp, #12]
   15dfc:	add	r2, r1, #1
   15e00:	str	r2, [sp, #12]
   15e04:	strb	r0, [r1]
   15e08:	ldr	r0, [fp, #-4]
   15e0c:	ldrb	r0, [r0, #1]
   15e10:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15e14:	and	r0, r0, #255	; 0xff
   15e18:	lsl	r0, r0, #2
   15e1c:	ldr	r1, [fp, #-4]
   15e20:	ldrb	r1, [r1, #2]
   15e24:	str	r0, [sp, #4]
   15e28:	mov	r0, r1
   15e2c:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15e30:	and	r0, r0, #255	; 0xff
   15e34:	asr	r0, r0, #6
   15e38:	ldr	r1, [sp, #4]
   15e3c:	add	r0, r1, r0
   15e40:	and	r0, r0, #63	; 0x3f
   15e44:	movw	r1, #10463	; 0x28df
   15e48:	movt	r1, #2
   15e4c:	add	r0, r1, r0
   15e50:	ldrb	r0, [r0]
   15e54:	ldr	r1, [sp, #12]
   15e58:	add	r2, r1, #1
   15e5c:	str	r2, [sp, #12]
   15e60:	strb	r0, [r1]
   15e64:	ldr	r0, [fp, #-4]
   15e68:	ldrb	r0, [r0, #2]
   15e6c:	bl	15ebc <__assert_fail@plt+0x4dd4>
   15e70:	and	r0, r0, #255	; 0xff
   15e74:	and	r0, r0, #63	; 0x3f
   15e78:	movw	r1, #10463	; 0x28df
   15e7c:	movt	r1, #2
   15e80:	add	r0, r1, r0
   15e84:	ldrb	r0, [r0]
   15e88:	ldr	r1, [sp, #12]
   15e8c:	add	r2, r1, #1
   15e90:	str	r2, [sp, #12]
   15e94:	strb	r0, [r1]
   15e98:	ldr	r0, [fp, #-8]
   15e9c:	sub	r0, r0, #3
   15ea0:	str	r0, [fp, #-8]
   15ea4:	ldr	r0, [fp, #-4]
   15ea8:	add	r0, r0, #3
   15eac:	str	r0, [fp, #-4]
   15eb0:	b	15d68 <__assert_fail@plt+0x4c80>
   15eb4:	mov	sp, fp
   15eb8:	pop	{fp, pc}
   15ebc:	sub	sp, sp, #4
   15ec0:	strb	r0, [sp, #3]
   15ec4:	ldrb	r0, [sp, #3]
   15ec8:	add	sp, sp, #4
   15ecc:	bx	lr
   15ed0:	push	{fp, lr}
   15ed4:	mov	fp, sp
   15ed8:	sub	sp, sp, #32
   15edc:	str	r0, [fp, #-8]
   15ee0:	str	r1, [fp, #-12]
   15ee4:	str	r2, [sp, #16]
   15ee8:	ldr	r0, [fp, #-12]
   15eec:	movw	r1, #21846	; 0x5556
   15ef0:	movt	r1, #21845	; 0x5555
   15ef4:	smmul	r1, r0, r1
   15ef8:	add	r1, r1, r1, lsr #31
   15efc:	add	r2, r1, r1, lsl #1
   15f00:	sub	r0, r0, r2
   15f04:	cmp	r0, #0
   15f08:	movw	r0, #0
   15f0c:	movne	r0, #1
   15f10:	and	r0, r0, #1
   15f14:	add	r0, r1, r0
   15f18:	str	r0, [sp, #12]
   15f1c:	b	16188 <__assert_fail@plt+0x50a0>
   15f20:	b	15f24 <__assert_fail@plt+0x4e3c>
   15f24:	b	15fd0 <__assert_fail@plt+0x4ee8>
   15f28:	ldr	r0, [sp, #12]
   15f2c:	cmp	r0, #0
   15f30:	bge	15f64 <__assert_fail@plt+0x4e7c>
   15f34:	b	15f38 <__assert_fail@plt+0x4e50>
   15f38:	ldr	r0, [sp, #12]
   15f3c:	cmp	r0, #31
   15f40:	blt	16030 <__assert_fail@plt+0x4f48>
   15f44:	b	16044 <__assert_fail@plt+0x4f5c>
   15f48:	ldr	r0, [sp, #12]
   15f4c:	mvn	r1, #0
   15f50:	sub	r0, r1, r0
   15f54:	mvn	r1, #30
   15f58:	cmp	r1, r0
   15f5c:	ble	16030 <__assert_fail@plt+0x4f48>
   15f60:	b	16044 <__assert_fail@plt+0x4f5c>
   15f64:	b	15f68 <__assert_fail@plt+0x4e80>
   15f68:	b	15fbc <__assert_fail@plt+0x4ed4>
   15f6c:	b	15fbc <__assert_fail@plt+0x4ed4>
   15f70:	b	15fbc <__assert_fail@plt+0x4ed4>
   15f74:	b	15f78 <__assert_fail@plt+0x4e90>
   15f78:	ldr	r0, [sp, #12]
   15f7c:	mvn	r1, #127	; 0x7f
   15f80:	add	r0, r0, r1
   15f84:	movw	r1, #0
   15f88:	cmp	r1, r0
   15f8c:	blt	16030 <__assert_fail@plt+0x4f48>
   15f90:	b	16044 <__assert_fail@plt+0x4f5c>
   15f94:	ldr	r0, [sp, #12]
   15f98:	movw	r1, #0
   15f9c:	cmp	r1, r0
   15fa0:	bge	16044 <__assert_fail@plt+0x4f5c>
   15fa4:	ldr	r0, [sp, #12]
   15fa8:	sub	r0, r0, #1
   15fac:	movw	r1, #127	; 0x7f
   15fb0:	cmp	r1, r0
   15fb4:	blt	16030 <__assert_fail@plt+0x4f48>
   15fb8:	b	16044 <__assert_fail@plt+0x4f5c>
   15fbc:	ldr	r0, [sp, #12]
   15fc0:	mvn	r1, #31
   15fc4:	cmp	r1, r0
   15fc8:	blt	16030 <__assert_fail@plt+0x4f48>
   15fcc:	b	16044 <__assert_fail@plt+0x4f5c>
   15fd0:	b	15fd8 <__assert_fail@plt+0x4ef0>
   15fd4:	b	16044 <__assert_fail@plt+0x4f5c>
   15fd8:	ldr	r0, [sp, #12]
   15fdc:	cmp	r0, #0
   15fe0:	bge	16020 <__assert_fail@plt+0x4f38>
   15fe4:	b	15fe8 <__assert_fail@plt+0x4f00>
   15fe8:	b	16008 <__assert_fail@plt+0x4f20>
   15fec:	b	16008 <__assert_fail@plt+0x4f20>
   15ff0:	ldr	r0, [sp, #12]
   15ff4:	cmn	r0, #1
   15ff8:	bne	16008 <__assert_fail@plt+0x4f20>
   15ffc:	b	16000 <__assert_fail@plt+0x4f18>
   16000:	b	16044 <__assert_fail@plt+0x4f5c>
   16004:	b	16044 <__assert_fail@plt+0x4f5c>
   16008:	ldr	r0, [sp, #12]
   1600c:	mvn	r1, #127	; 0x7f
   16010:	sdiv	r0, r1, r0
   16014:	cmp	r0, #4
   16018:	blt	16030 <__assert_fail@plt+0x4f48>
   1601c:	b	16044 <__assert_fail@plt+0x4f5c>
   16020:	ldr	r0, [sp, #12]
   16024:	movw	r1, #31
   16028:	cmp	r1, r0
   1602c:	bge	16044 <__assert_fail@plt+0x4f5c>
   16030:	ldr	r0, [sp, #12]
   16034:	lsl	r0, r0, #2
   16038:	sxtb	r0, r0
   1603c:	str	r0, [sp, #8]
   16040:	b	16b00 <__assert_fail@plt+0x5a18>
   16044:	ldr	r0, [sp, #12]
   16048:	lsl	r0, r0, #2
   1604c:	sxtb	r0, r0
   16050:	str	r0, [sp, #8]
   16054:	b	16af4 <__assert_fail@plt+0x5a0c>
   16058:	b	16100 <__assert_fail@plt+0x5018>
   1605c:	ldr	r0, [sp, #12]
   16060:	cmp	r0, #0
   16064:	bge	16098 <__assert_fail@plt+0x4fb0>
   16068:	b	1606c <__assert_fail@plt+0x4f84>
   1606c:	ldr	r0, [sp, #12]
   16070:	cmp	r0, #63	; 0x3f
   16074:	blt	16160 <__assert_fail@plt+0x5078>
   16078:	b	16174 <__assert_fail@plt+0x508c>
   1607c:	ldr	r0, [sp, #12]
   16080:	mvn	r1, #0
   16084:	sub	r0, r1, r0
   16088:	mvn	r1, #62	; 0x3e
   1608c:	cmp	r1, r0
   16090:	ble	16160 <__assert_fail@plt+0x5078>
   16094:	b	16174 <__assert_fail@plt+0x508c>
   16098:	b	1609c <__assert_fail@plt+0x4fb4>
   1609c:	b	160ec <__assert_fail@plt+0x5004>
   160a0:	b	160ec <__assert_fail@plt+0x5004>
   160a4:	b	160ec <__assert_fail@plt+0x5004>
   160a8:	b	160ac <__assert_fail@plt+0x4fc4>
   160ac:	ldr	r0, [sp, #12]
   160b0:	add	r0, r0, #0
   160b4:	movw	r1, #0
   160b8:	cmp	r1, r0
   160bc:	blt	16160 <__assert_fail@plt+0x5078>
   160c0:	b	16174 <__assert_fail@plt+0x508c>
   160c4:	ldr	r0, [sp, #12]
   160c8:	movw	r1, #0
   160cc:	cmp	r1, r0
   160d0:	bge	16174 <__assert_fail@plt+0x508c>
   160d4:	ldr	r0, [sp, #12]
   160d8:	sub	r0, r0, #1
   160dc:	mvn	r1, #0
   160e0:	cmp	r1, r0
   160e4:	blt	16160 <__assert_fail@plt+0x5078>
   160e8:	b	16174 <__assert_fail@plt+0x508c>
   160ec:	ldr	r0, [sp, #12]
   160f0:	movw	r1, #0
   160f4:	cmp	r1, r0
   160f8:	blt	16160 <__assert_fail@plt+0x5078>
   160fc:	b	16174 <__assert_fail@plt+0x508c>
   16100:	b	16108 <__assert_fail@plt+0x5020>
   16104:	b	16174 <__assert_fail@plt+0x508c>
   16108:	ldr	r0, [sp, #12]
   1610c:	cmp	r0, #0
   16110:	bge	16150 <__assert_fail@plt+0x5068>
   16114:	b	16118 <__assert_fail@plt+0x5030>
   16118:	b	16138 <__assert_fail@plt+0x5050>
   1611c:	b	16138 <__assert_fail@plt+0x5050>
   16120:	ldr	r0, [sp, #12]
   16124:	cmn	r0, #1
   16128:	bne	16138 <__assert_fail@plt+0x5050>
   1612c:	b	16130 <__assert_fail@plt+0x5048>
   16130:	b	16160 <__assert_fail@plt+0x5078>
   16134:	b	16160 <__assert_fail@plt+0x5078>
   16138:	ldr	r0, [sp, #12]
   1613c:	movw	r1, #0
   16140:	sdiv	r0, r1, r0
   16144:	cmp	r0, #4
   16148:	blt	16160 <__assert_fail@plt+0x5078>
   1614c:	b	16174 <__assert_fail@plt+0x508c>
   16150:	ldr	r0, [sp, #12]
   16154:	movw	r1, #63	; 0x3f
   16158:	cmp	r1, r0
   1615c:	bge	16174 <__assert_fail@plt+0x508c>
   16160:	ldr	r0, [sp, #12]
   16164:	lsl	r0, r0, #2
   16168:	and	r0, r0, #255	; 0xff
   1616c:	str	r0, [sp, #8]
   16170:	b	16b00 <__assert_fail@plt+0x5a18>
   16174:	ldr	r0, [sp, #12]
   16178:	lsl	r0, r0, #2
   1617c:	and	r0, r0, #255	; 0xff
   16180:	str	r0, [sp, #8]
   16184:	b	16af4 <__assert_fail@plt+0x5a0c>
   16188:	b	163fc <__assert_fail@plt+0x5314>
   1618c:	b	16190 <__assert_fail@plt+0x50a8>
   16190:	b	16240 <__assert_fail@plt+0x5158>
   16194:	ldr	r0, [sp, #12]
   16198:	cmp	r0, #0
   1619c:	bge	161d4 <__assert_fail@plt+0x50ec>
   161a0:	b	161a4 <__assert_fail@plt+0x50bc>
   161a4:	ldr	r0, [sp, #12]
   161a8:	movw	r1, #8191	; 0x1fff
   161ac:	cmp	r0, r1
   161b0:	blt	162a0 <__assert_fail@plt+0x51b8>
   161b4:	b	162b4 <__assert_fail@plt+0x51cc>
   161b8:	ldr	r0, [pc, #2528]	; 16ba0 <__assert_fail@plt+0x5ab8>
   161bc:	ldr	r1, [sp, #12]
   161c0:	mvn	r2, #0
   161c4:	sub	r1, r2, r1
   161c8:	cmp	r0, r1
   161cc:	ble	162a0 <__assert_fail@plt+0x51b8>
   161d0:	b	162b4 <__assert_fail@plt+0x51cc>
   161d4:	b	161d8 <__assert_fail@plt+0x50f0>
   161d8:	b	1622c <__assert_fail@plt+0x5144>
   161dc:	b	1622c <__assert_fail@plt+0x5144>
   161e0:	b	1622c <__assert_fail@plt+0x5144>
   161e4:	b	161e8 <__assert_fail@plt+0x5100>
   161e8:	ldr	r0, [pc, #2472]	; 16b98 <__assert_fail@plt+0x5ab0>
   161ec:	ldr	r1, [sp, #12]
   161f0:	add	r0, r1, r0
   161f4:	movw	r1, #0
   161f8:	cmp	r1, r0
   161fc:	blt	162a0 <__assert_fail@plt+0x51b8>
   16200:	b	162b4 <__assert_fail@plt+0x51cc>
   16204:	ldr	r0, [sp, #12]
   16208:	movw	r1, #0
   1620c:	cmp	r1, r0
   16210:	bge	162b4 <__assert_fail@plt+0x51cc>
   16214:	ldr	r0, [sp, #12]
   16218:	sub	r0, r0, #1
   1621c:	movw	r1, #32767	; 0x7fff
   16220:	cmp	r1, r0
   16224:	blt	162a0 <__assert_fail@plt+0x51b8>
   16228:	b	162b4 <__assert_fail@plt+0x51cc>
   1622c:	ldr	r0, [pc, #2408]	; 16b9c <__assert_fail@plt+0x5ab4>
   16230:	ldr	r1, [sp, #12]
   16234:	cmp	r0, r1
   16238:	blt	162a0 <__assert_fail@plt+0x51b8>
   1623c:	b	162b4 <__assert_fail@plt+0x51cc>
   16240:	b	16248 <__assert_fail@plt+0x5160>
   16244:	b	162b4 <__assert_fail@plt+0x51cc>
   16248:	ldr	r0, [sp, #12]
   1624c:	cmp	r0, #0
   16250:	bge	16290 <__assert_fail@plt+0x51a8>
   16254:	b	16258 <__assert_fail@plt+0x5170>
   16258:	b	16278 <__assert_fail@plt+0x5190>
   1625c:	b	16278 <__assert_fail@plt+0x5190>
   16260:	ldr	r0, [sp, #12]
   16264:	cmn	r0, #1
   16268:	bne	16278 <__assert_fail@plt+0x5190>
   1626c:	b	16270 <__assert_fail@plt+0x5188>
   16270:	b	162b4 <__assert_fail@plt+0x51cc>
   16274:	b	162b4 <__assert_fail@plt+0x51cc>
   16278:	ldr	r0, [pc, #2328]	; 16b98 <__assert_fail@plt+0x5ab0>
   1627c:	ldr	r1, [sp, #12]
   16280:	sdiv	r0, r0, r1
   16284:	cmp	r0, #4
   16288:	blt	162a0 <__assert_fail@plt+0x51b8>
   1628c:	b	162b4 <__assert_fail@plt+0x51cc>
   16290:	ldr	r0, [sp, #12]
   16294:	movw	r1, #8191	; 0x1fff
   16298:	cmp	r1, r0
   1629c:	bge	162b4 <__assert_fail@plt+0x51cc>
   162a0:	ldr	r0, [sp, #12]
   162a4:	lsl	r0, r0, #2
   162a8:	sxth	r0, r0
   162ac:	str	r0, [sp, #8]
   162b0:	b	16b00 <__assert_fail@plt+0x5a18>
   162b4:	ldr	r0, [sp, #12]
   162b8:	lsl	r0, r0, #2
   162bc:	sxth	r0, r0
   162c0:	str	r0, [sp, #8]
   162c4:	b	16af4 <__assert_fail@plt+0x5a0c>
   162c8:	b	16374 <__assert_fail@plt+0x528c>
   162cc:	ldr	r0, [sp, #12]
   162d0:	cmp	r0, #0
   162d4:	bge	1630c <__assert_fail@plt+0x5224>
   162d8:	b	162dc <__assert_fail@plt+0x51f4>
   162dc:	ldr	r0, [sp, #12]
   162e0:	movw	r1, #16383	; 0x3fff
   162e4:	cmp	r0, r1
   162e8:	blt	163d4 <__assert_fail@plt+0x52ec>
   162ec:	b	163e8 <__assert_fail@plt+0x5300>
   162f0:	ldr	r0, [pc, #2220]	; 16ba4 <__assert_fail@plt+0x5abc>
   162f4:	ldr	r1, [sp, #12]
   162f8:	mvn	r2, #0
   162fc:	sub	r1, r2, r1
   16300:	cmp	r0, r1
   16304:	ble	163d4 <__assert_fail@plt+0x52ec>
   16308:	b	163e8 <__assert_fail@plt+0x5300>
   1630c:	b	16310 <__assert_fail@plt+0x5228>
   16310:	b	16360 <__assert_fail@plt+0x5278>
   16314:	b	16360 <__assert_fail@plt+0x5278>
   16318:	b	16360 <__assert_fail@plt+0x5278>
   1631c:	b	16320 <__assert_fail@plt+0x5238>
   16320:	ldr	r0, [sp, #12]
   16324:	add	r0, r0, #0
   16328:	movw	r1, #0
   1632c:	cmp	r1, r0
   16330:	blt	163d4 <__assert_fail@plt+0x52ec>
   16334:	b	163e8 <__assert_fail@plt+0x5300>
   16338:	ldr	r0, [sp, #12]
   1633c:	movw	r1, #0
   16340:	cmp	r1, r0
   16344:	bge	163e8 <__assert_fail@plt+0x5300>
   16348:	ldr	r0, [sp, #12]
   1634c:	sub	r0, r0, #1
   16350:	mvn	r1, #0
   16354:	cmp	r1, r0
   16358:	blt	163d4 <__assert_fail@plt+0x52ec>
   1635c:	b	163e8 <__assert_fail@plt+0x5300>
   16360:	ldr	r0, [sp, #12]
   16364:	movw	r1, #0
   16368:	cmp	r1, r0
   1636c:	blt	163d4 <__assert_fail@plt+0x52ec>
   16370:	b	163e8 <__assert_fail@plt+0x5300>
   16374:	b	1637c <__assert_fail@plt+0x5294>
   16378:	b	163e8 <__assert_fail@plt+0x5300>
   1637c:	ldr	r0, [sp, #12]
   16380:	cmp	r0, #0
   16384:	bge	163c4 <__assert_fail@plt+0x52dc>
   16388:	b	1638c <__assert_fail@plt+0x52a4>
   1638c:	b	163ac <__assert_fail@plt+0x52c4>
   16390:	b	163ac <__assert_fail@plt+0x52c4>
   16394:	ldr	r0, [sp, #12]
   16398:	cmn	r0, #1
   1639c:	bne	163ac <__assert_fail@plt+0x52c4>
   163a0:	b	163a4 <__assert_fail@plt+0x52bc>
   163a4:	b	163d4 <__assert_fail@plt+0x52ec>
   163a8:	b	163d4 <__assert_fail@plt+0x52ec>
   163ac:	ldr	r0, [sp, #12]
   163b0:	movw	r1, #0
   163b4:	sdiv	r0, r1, r0
   163b8:	cmp	r0, #4
   163bc:	blt	163d4 <__assert_fail@plt+0x52ec>
   163c0:	b	163e8 <__assert_fail@plt+0x5300>
   163c4:	ldr	r0, [sp, #12]
   163c8:	movw	r1, #16383	; 0x3fff
   163cc:	cmp	r1, r0
   163d0:	bge	163e8 <__assert_fail@plt+0x5300>
   163d4:	ldr	r0, [sp, #12]
   163d8:	lsl	r0, r0, #2
   163dc:	uxth	r0, r0
   163e0:	str	r0, [sp, #8]
   163e4:	b	16b00 <__assert_fail@plt+0x5a18>
   163e8:	ldr	r0, [sp, #12]
   163ec:	lsl	r0, r0, #2
   163f0:	uxth	r0, r0
   163f4:	str	r0, [sp, #8]
   163f8:	b	16af4 <__assert_fail@plt+0x5a0c>
   163fc:	b	16400 <__assert_fail@plt+0x5318>
   16400:	b	16404 <__assert_fail@plt+0x531c>
   16404:	b	164a4 <__assert_fail@plt+0x53bc>
   16408:	ldr	r0, [sp, #12]
   1640c:	cmp	r0, #0
   16410:	bge	16448 <__assert_fail@plt+0x5360>
   16414:	b	16418 <__assert_fail@plt+0x5330>
   16418:	ldr	r0, [pc, #1892]	; 16b84 <__assert_fail@plt+0x5a9c>
   1641c:	ldr	r1, [sp, #12]
   16420:	cmp	r1, r0
   16424:	blt	164f8 <__assert_fail@plt+0x5410>
   16428:	b	16508 <__assert_fail@plt+0x5420>
   1642c:	ldr	r0, [pc, #1888]	; 16b94 <__assert_fail@plt+0x5aac>
   16430:	ldr	r1, [sp, #12]
   16434:	mvn	r2, #0
   16438:	sub	r1, r2, r1
   1643c:	cmp	r0, r1
   16440:	ble	164f8 <__assert_fail@plt+0x5410>
   16444:	b	16508 <__assert_fail@plt+0x5420>
   16448:	b	16490 <__assert_fail@plt+0x53a8>
   1644c:	b	16450 <__assert_fail@plt+0x5368>
   16450:	ldr	r0, [sp, #12]
   16454:	add	r0, r0, #-2147483648	; 0x80000000
   16458:	movw	r1, #0
   1645c:	cmp	r1, r0
   16460:	blt	164f8 <__assert_fail@plt+0x5410>
   16464:	b	16508 <__assert_fail@plt+0x5420>
   16468:	ldr	r0, [sp, #12]
   1646c:	movw	r1, #0
   16470:	cmp	r1, r0
   16474:	bge	16508 <__assert_fail@plt+0x5420>
   16478:	ldr	r0, [pc, #1808]	; 16b90 <__assert_fail@plt+0x5aa8>
   1647c:	ldr	r1, [sp, #12]
   16480:	sub	r1, r1, #1
   16484:	cmp	r0, r1
   16488:	blt	164f8 <__assert_fail@plt+0x5410>
   1648c:	b	16508 <__assert_fail@plt+0x5420>
   16490:	ldr	r0, [pc, #1780]	; 16b8c <__assert_fail@plt+0x5aa4>
   16494:	ldr	r1, [sp, #12]
   16498:	cmp	r0, r1
   1649c:	blt	164f8 <__assert_fail@plt+0x5410>
   164a0:	b	16508 <__assert_fail@plt+0x5420>
   164a4:	b	164ac <__assert_fail@plt+0x53c4>
   164a8:	b	16508 <__assert_fail@plt+0x5420>
   164ac:	ldr	r0, [sp, #12]
   164b0:	cmp	r0, #0
   164b4:	bge	164e8 <__assert_fail@plt+0x5400>
   164b8:	ldr	r0, [sp, #12]
   164bc:	cmn	r0, #1
   164c0:	bne	164d0 <__assert_fail@plt+0x53e8>
   164c4:	b	164c8 <__assert_fail@plt+0x53e0>
   164c8:	b	16508 <__assert_fail@plt+0x5420>
   164cc:	b	16508 <__assert_fail@plt+0x5420>
   164d0:	ldr	r0, [pc, #1712]	; 16b88 <__assert_fail@plt+0x5aa0>
   164d4:	ldr	r1, [sp, #12]
   164d8:	sdiv	r0, r0, r1
   164dc:	cmp	r0, #4
   164e0:	blt	164f8 <__assert_fail@plt+0x5410>
   164e4:	b	16508 <__assert_fail@plt+0x5420>
   164e8:	ldr	r0, [pc, #1684]	; 16b84 <__assert_fail@plt+0x5a9c>
   164ec:	ldr	r1, [sp, #12]
   164f0:	cmp	r0, r1
   164f4:	bge	16508 <__assert_fail@plt+0x5420>
   164f8:	ldr	r0, [sp, #12]
   164fc:	lsl	r0, r0, #2
   16500:	str	r0, [sp, #8]
   16504:	b	16b00 <__assert_fail@plt+0x5a18>
   16508:	ldr	r0, [sp, #12]
   1650c:	lsl	r0, r0, #2
   16510:	str	r0, [sp, #8]
   16514:	b	16af4 <__assert_fail@plt+0x5a0c>
   16518:	b	165c4 <__assert_fail@plt+0x54dc>
   1651c:	ldr	r0, [sp, #12]
   16520:	cmp	r0, #0
   16524:	bge	1655c <__assert_fail@plt+0x5474>
   16528:	b	16540 <__assert_fail@plt+0x5458>
   1652c:	ldr	r0, [pc, #1612]	; 16b80 <__assert_fail@plt+0x5a98>
   16530:	ldr	r1, [sp, #12]
   16534:	cmp	r1, r0
   16538:	bcc	16624 <__assert_fail@plt+0x553c>
   1653c:	b	16634 <__assert_fail@plt+0x554c>
   16540:	ldr	r0, [sp, #12]
   16544:	mvn	r1, #0
   16548:	sub	r0, r1, r0
   1654c:	movw	r1, #1
   16550:	cmp	r1, r0
   16554:	bls	16624 <__assert_fail@plt+0x553c>
   16558:	b	16634 <__assert_fail@plt+0x554c>
   1655c:	b	16560 <__assert_fail@plt+0x5478>
   16560:	b	165b0 <__assert_fail@plt+0x54c8>
   16564:	b	165b0 <__assert_fail@plt+0x54c8>
   16568:	b	165b0 <__assert_fail@plt+0x54c8>
   1656c:	b	16570 <__assert_fail@plt+0x5488>
   16570:	ldr	r0, [sp, #12]
   16574:	add	r0, r0, #0
   16578:	movw	r1, #0
   1657c:	cmp	r1, r0
   16580:	blt	16624 <__assert_fail@plt+0x553c>
   16584:	b	16634 <__assert_fail@plt+0x554c>
   16588:	ldr	r0, [sp, #12]
   1658c:	movw	r1, #0
   16590:	cmp	r1, r0
   16594:	bge	16634 <__assert_fail@plt+0x554c>
   16598:	ldr	r0, [sp, #12]
   1659c:	sub	r0, r0, #1
   165a0:	mvn	r1, #0
   165a4:	cmp	r1, r0
   165a8:	blt	16624 <__assert_fail@plt+0x553c>
   165ac:	b	16634 <__assert_fail@plt+0x554c>
   165b0:	ldr	r0, [sp, #12]
   165b4:	movw	r1, #0
   165b8:	cmp	r1, r0
   165bc:	blt	16624 <__assert_fail@plt+0x553c>
   165c0:	b	16634 <__assert_fail@plt+0x554c>
   165c4:	b	165cc <__assert_fail@plt+0x54e4>
   165c8:	b	16634 <__assert_fail@plt+0x554c>
   165cc:	ldr	r0, [sp, #12]
   165d0:	cmp	r0, #0
   165d4:	bge	16614 <__assert_fail@plt+0x552c>
   165d8:	b	165dc <__assert_fail@plt+0x54f4>
   165dc:	b	165fc <__assert_fail@plt+0x5514>
   165e0:	b	165fc <__assert_fail@plt+0x5514>
   165e4:	ldr	r0, [sp, #12]
   165e8:	cmn	r0, #1
   165ec:	bne	165fc <__assert_fail@plt+0x5514>
   165f0:	b	165f4 <__assert_fail@plt+0x550c>
   165f4:	b	16624 <__assert_fail@plt+0x553c>
   165f8:	b	16624 <__assert_fail@plt+0x553c>
   165fc:	ldr	r0, [sp, #12]
   16600:	movw	r1, #0
   16604:	sdiv	r0, r1, r0
   16608:	cmp	r0, #4
   1660c:	blt	16624 <__assert_fail@plt+0x553c>
   16610:	b	16634 <__assert_fail@plt+0x554c>
   16614:	ldr	r0, [pc, #1380]	; 16b80 <__assert_fail@plt+0x5a98>
   16618:	ldr	r1, [sp, #12]
   1661c:	cmp	r0, r1
   16620:	bcs	16634 <__assert_fail@plt+0x554c>
   16624:	ldr	r0, [sp, #12]
   16628:	lsl	r0, r0, #2
   1662c:	str	r0, [sp, #8]
   16630:	b	16b00 <__assert_fail@plt+0x5a18>
   16634:	ldr	r0, [sp, #12]
   16638:	lsl	r0, r0, #2
   1663c:	str	r0, [sp, #8]
   16640:	b	16af4 <__assert_fail@plt+0x5a0c>
   16644:	b	16648 <__assert_fail@plt+0x5560>
   16648:	b	1664c <__assert_fail@plt+0x5564>
   1664c:	b	166ec <__assert_fail@plt+0x5604>
   16650:	ldr	r0, [sp, #12]
   16654:	cmp	r0, #0
   16658:	bge	16690 <__assert_fail@plt+0x55a8>
   1665c:	b	16660 <__assert_fail@plt+0x5578>
   16660:	ldr	r0, [pc, #1308]	; 16b84 <__assert_fail@plt+0x5a9c>
   16664:	ldr	r1, [sp, #12]
   16668:	cmp	r1, r0
   1666c:	blt	16740 <__assert_fail@plt+0x5658>
   16670:	b	16750 <__assert_fail@plt+0x5668>
   16674:	ldr	r0, [pc, #1304]	; 16b94 <__assert_fail@plt+0x5aac>
   16678:	ldr	r1, [sp, #12]
   1667c:	mvn	r2, #0
   16680:	sub	r1, r2, r1
   16684:	cmp	r0, r1
   16688:	ble	16740 <__assert_fail@plt+0x5658>
   1668c:	b	16750 <__assert_fail@plt+0x5668>
   16690:	b	166d8 <__assert_fail@plt+0x55f0>
   16694:	b	16698 <__assert_fail@plt+0x55b0>
   16698:	ldr	r0, [sp, #12]
   1669c:	add	r0, r0, #-2147483648	; 0x80000000
   166a0:	movw	r1, #0
   166a4:	cmp	r1, r0
   166a8:	blt	16740 <__assert_fail@plt+0x5658>
   166ac:	b	16750 <__assert_fail@plt+0x5668>
   166b0:	ldr	r0, [sp, #12]
   166b4:	movw	r1, #0
   166b8:	cmp	r1, r0
   166bc:	bge	16750 <__assert_fail@plt+0x5668>
   166c0:	ldr	r0, [pc, #1224]	; 16b90 <__assert_fail@plt+0x5aa8>
   166c4:	ldr	r1, [sp, #12]
   166c8:	sub	r1, r1, #1
   166cc:	cmp	r0, r1
   166d0:	blt	16740 <__assert_fail@plt+0x5658>
   166d4:	b	16750 <__assert_fail@plt+0x5668>
   166d8:	ldr	r0, [pc, #1196]	; 16b8c <__assert_fail@plt+0x5aa4>
   166dc:	ldr	r1, [sp, #12]
   166e0:	cmp	r0, r1
   166e4:	blt	16740 <__assert_fail@plt+0x5658>
   166e8:	b	16750 <__assert_fail@plt+0x5668>
   166ec:	b	166f4 <__assert_fail@plt+0x560c>
   166f0:	b	16750 <__assert_fail@plt+0x5668>
   166f4:	ldr	r0, [sp, #12]
   166f8:	cmp	r0, #0
   166fc:	bge	16730 <__assert_fail@plt+0x5648>
   16700:	ldr	r0, [sp, #12]
   16704:	cmn	r0, #1
   16708:	bne	16718 <__assert_fail@plt+0x5630>
   1670c:	b	16710 <__assert_fail@plt+0x5628>
   16710:	b	16750 <__assert_fail@plt+0x5668>
   16714:	b	16750 <__assert_fail@plt+0x5668>
   16718:	ldr	r0, [pc, #1128]	; 16b88 <__assert_fail@plt+0x5aa0>
   1671c:	ldr	r1, [sp, #12]
   16720:	sdiv	r0, r0, r1
   16724:	cmp	r0, #4
   16728:	blt	16740 <__assert_fail@plt+0x5658>
   1672c:	b	16750 <__assert_fail@plt+0x5668>
   16730:	ldr	r0, [pc, #1100]	; 16b84 <__assert_fail@plt+0x5a9c>
   16734:	ldr	r1, [sp, #12]
   16738:	cmp	r0, r1
   1673c:	bge	16750 <__assert_fail@plt+0x5668>
   16740:	ldr	r0, [sp, #12]
   16744:	lsl	r0, r0, #2
   16748:	str	r0, [sp, #8]
   1674c:	b	16b00 <__assert_fail@plt+0x5a18>
   16750:	ldr	r0, [sp, #12]
   16754:	lsl	r0, r0, #2
   16758:	str	r0, [sp, #8]
   1675c:	b	16af4 <__assert_fail@plt+0x5a0c>
   16760:	b	1680c <__assert_fail@plt+0x5724>
   16764:	ldr	r0, [sp, #12]
   16768:	cmp	r0, #0
   1676c:	bge	167a4 <__assert_fail@plt+0x56bc>
   16770:	b	16788 <__assert_fail@plt+0x56a0>
   16774:	ldr	r0, [pc, #1028]	; 16b80 <__assert_fail@plt+0x5a98>
   16778:	ldr	r1, [sp, #12]
   1677c:	cmp	r1, r0
   16780:	bcc	1686c <__assert_fail@plt+0x5784>
   16784:	b	1687c <__assert_fail@plt+0x5794>
   16788:	ldr	r0, [sp, #12]
   1678c:	mvn	r1, #0
   16790:	sub	r0, r1, r0
   16794:	movw	r1, #1
   16798:	cmp	r1, r0
   1679c:	bls	1686c <__assert_fail@plt+0x5784>
   167a0:	b	1687c <__assert_fail@plt+0x5794>
   167a4:	b	167a8 <__assert_fail@plt+0x56c0>
   167a8:	b	167f8 <__assert_fail@plt+0x5710>
   167ac:	b	167f8 <__assert_fail@plt+0x5710>
   167b0:	b	167f8 <__assert_fail@plt+0x5710>
   167b4:	b	167b8 <__assert_fail@plt+0x56d0>
   167b8:	ldr	r0, [sp, #12]
   167bc:	add	r0, r0, #0
   167c0:	movw	r1, #0
   167c4:	cmp	r1, r0
   167c8:	blt	1686c <__assert_fail@plt+0x5784>
   167cc:	b	1687c <__assert_fail@plt+0x5794>
   167d0:	ldr	r0, [sp, #12]
   167d4:	movw	r1, #0
   167d8:	cmp	r1, r0
   167dc:	bge	1687c <__assert_fail@plt+0x5794>
   167e0:	ldr	r0, [sp, #12]
   167e4:	sub	r0, r0, #1
   167e8:	mvn	r1, #0
   167ec:	cmp	r1, r0
   167f0:	blt	1686c <__assert_fail@plt+0x5784>
   167f4:	b	1687c <__assert_fail@plt+0x5794>
   167f8:	ldr	r0, [sp, #12]
   167fc:	movw	r1, #0
   16800:	cmp	r1, r0
   16804:	blt	1686c <__assert_fail@plt+0x5784>
   16808:	b	1687c <__assert_fail@plt+0x5794>
   1680c:	b	16814 <__assert_fail@plt+0x572c>
   16810:	b	1687c <__assert_fail@plt+0x5794>
   16814:	ldr	r0, [sp, #12]
   16818:	cmp	r0, #0
   1681c:	bge	1685c <__assert_fail@plt+0x5774>
   16820:	b	16824 <__assert_fail@plt+0x573c>
   16824:	b	16844 <__assert_fail@plt+0x575c>
   16828:	b	16844 <__assert_fail@plt+0x575c>
   1682c:	ldr	r0, [sp, #12]
   16830:	cmn	r0, #1
   16834:	bne	16844 <__assert_fail@plt+0x575c>
   16838:	b	1683c <__assert_fail@plt+0x5754>
   1683c:	b	1686c <__assert_fail@plt+0x5784>
   16840:	b	1686c <__assert_fail@plt+0x5784>
   16844:	ldr	r0, [sp, #12]
   16848:	movw	r1, #0
   1684c:	sdiv	r0, r1, r0
   16850:	cmp	r0, #4
   16854:	blt	1686c <__assert_fail@plt+0x5784>
   16858:	b	1687c <__assert_fail@plt+0x5794>
   1685c:	ldr	r0, [pc, #796]	; 16b80 <__assert_fail@plt+0x5a98>
   16860:	ldr	r1, [sp, #12]
   16864:	cmp	r0, r1
   16868:	bcs	1687c <__assert_fail@plt+0x5794>
   1686c:	ldr	r0, [sp, #12]
   16870:	lsl	r0, r0, #2
   16874:	str	r0, [sp, #8]
   16878:	b	16b00 <__assert_fail@plt+0x5a18>
   1687c:	ldr	r0, [sp, #12]
   16880:	lsl	r0, r0, #2
   16884:	str	r0, [sp, #8]
   16888:	b	16af4 <__assert_fail@plt+0x5a0c>
   1688c:	b	16890 <__assert_fail@plt+0x57a8>
   16890:	b	16938 <__assert_fail@plt+0x5850>
   16894:	ldr	r0, [sp, #12]
   16898:	cmp	r0, #0
   1689c:	bge	168dc <__assert_fail@plt+0x57f4>
   168a0:	b	168a4 <__assert_fail@plt+0x57bc>
   168a4:	ldr	r0, [sp, #12]
   168a8:	mvn	r1, #0
   168ac:	subs	r1, r0, r1
   168b0:	mvn	r2, #-536870912	; 0xe0000000
   168b4:	rscs	r0, r2, r0, asr #31
   168b8:	blt	169ac <__assert_fail@plt+0x58c4>
   168bc:	b	169bc <__assert_fail@plt+0x58d4>
   168c0:	ldr	r0, [sp, #12]
   168c4:	mvn	r0, r0
   168c8:	rsbs	r1, r0, #0
   168cc:	mov	r2, #-536870912	; 0xe0000000
   168d0:	sbcs	r0, r2, r0, asr #31
   168d4:	blt	169ac <__assert_fail@plt+0x58c4>
   168d8:	b	169bc <__assert_fail@plt+0x58d4>
   168dc:	b	16920 <__assert_fail@plt+0x5838>
   168e0:	b	168e4 <__assert_fail@plt+0x57fc>
   168e4:	ldr	r0, [sp, #12]
   168e8:	mov	r1, #-2147483648	; 0x80000000
   168ec:	add	r1, r1, r0, asr #31
   168f0:	rsbs	r0, r0, #0
   168f4:	rscs	r1, r1, #0
   168f8:	blt	169ac <__assert_fail@plt+0x58c4>
   168fc:	b	169bc <__assert_fail@plt+0x58d4>
   16900:	ldr	r0, [sp, #12]
   16904:	movw	r1, #0
   16908:	cmp	r1, r0
   1690c:	bge	169bc <__assert_fail@plt+0x58d4>
   16910:	mov	r0, #0
   16914:	cmp	r0, #0
   16918:	bne	169ac <__assert_fail@plt+0x58c4>
   1691c:	b	169bc <__assert_fail@plt+0x58d4>
   16920:	ldr	r0, [sp, #12]
   16924:	rsbs	r1, r0, #0
   16928:	mov	r2, #-536870912	; 0xe0000000
   1692c:	sbcs	r0, r2, r0, asr #31
   16930:	blt	169ac <__assert_fail@plt+0x58c4>
   16934:	b	169bc <__assert_fail@plt+0x58d4>
   16938:	b	16940 <__assert_fail@plt+0x5858>
   1693c:	b	169bc <__assert_fail@plt+0x58d4>
   16940:	ldr	r0, [sp, #12]
   16944:	cmp	r0, #0
   16948:	bge	16998 <__assert_fail@plt+0x58b0>
   1694c:	ldr	r0, [sp, #12]
   16950:	cmn	r0, #1
   16954:	bne	16964 <__assert_fail@plt+0x587c>
   16958:	b	1695c <__assert_fail@plt+0x5874>
   1695c:	b	169bc <__assert_fail@plt+0x58d4>
   16960:	b	169bc <__assert_fail@plt+0x58d4>
   16964:	ldr	r0, [sp, #12]
   16968:	asr	r3, r0, #31
   1696c:	mov	r1, #0
   16970:	mov	r2, #-2147483648	; 0x80000000
   16974:	str	r0, [sp, #4]
   16978:	mov	r0, r1
   1697c:	mov	r1, r2
   16980:	ldr	r2, [sp, #4]
   16984:	bl	21990 <__assert_fail@plt+0x108a8>
   16988:	subs	r0, r0, #4
   1698c:	sbcs	r1, r1, #0
   16990:	blt	169ac <__assert_fail@plt+0x58c4>
   16994:	b	169bc <__assert_fail@plt+0x58d4>
   16998:	ldr	r0, [sp, #12]
   1699c:	asr	r0, r0, #31
   169a0:	cmp	r0, #536870912	; 0x20000000
   169a4:	blt	169bc <__assert_fail@plt+0x58d4>
   169a8:	b	169ac <__assert_fail@plt+0x58c4>
   169ac:	ldr	r0, [sp, #12]
   169b0:	lsl	r0, r0, #2
   169b4:	str	r0, [sp, #8]
   169b8:	b	16b00 <__assert_fail@plt+0x5a18>
   169bc:	ldr	r0, [sp, #12]
   169c0:	lsl	r0, r0, #2
   169c4:	str	r0, [sp, #8]
   169c8:	b	16af4 <__assert_fail@plt+0x5a0c>
   169cc:	b	16a74 <__assert_fail@plt+0x598c>
   169d0:	ldr	r0, [sp, #12]
   169d4:	cmp	r0, #0
   169d8:	bge	16a0c <__assert_fail@plt+0x5924>
   169dc:	b	169fc <__assert_fail@plt+0x5914>
   169e0:	ldr	r0, [sp, #12]
   169e4:	mvn	r1, #0
   169e8:	subs	r1, r0, r1
   169ec:	mvn	r2, #-1073741824	; 0xc0000000
   169f0:	rscs	r0, r2, r0, asr #31
   169f4:	bcc	16ad8 <__assert_fail@plt+0x59f0>
   169f8:	b	16ae8 <__assert_fail@plt+0x5a00>
   169fc:	ldr	r0, [sp, #12]
   16a00:	cmn	r0, #1
   16a04:	bne	16ad8 <__assert_fail@plt+0x59f0>
   16a08:	b	16ae8 <__assert_fail@plt+0x5a00>
   16a0c:	b	16a10 <__assert_fail@plt+0x5928>
   16a10:	b	16a60 <__assert_fail@plt+0x5978>
   16a14:	b	16a60 <__assert_fail@plt+0x5978>
   16a18:	b	16a60 <__assert_fail@plt+0x5978>
   16a1c:	b	16a20 <__assert_fail@plt+0x5938>
   16a20:	ldr	r0, [sp, #12]
   16a24:	add	r0, r0, #0
   16a28:	movw	r1, #0
   16a2c:	cmp	r1, r0
   16a30:	blt	16ad8 <__assert_fail@plt+0x59f0>
   16a34:	b	16ae8 <__assert_fail@plt+0x5a00>
   16a38:	ldr	r0, [sp, #12]
   16a3c:	movw	r1, #0
   16a40:	cmp	r1, r0
   16a44:	bge	16ae8 <__assert_fail@plt+0x5a00>
   16a48:	ldr	r0, [sp, #12]
   16a4c:	sub	r0, r0, #1
   16a50:	mvn	r1, #0
   16a54:	cmp	r1, r0
   16a58:	blt	16ad8 <__assert_fail@plt+0x59f0>
   16a5c:	b	16ae8 <__assert_fail@plt+0x5a00>
   16a60:	ldr	r0, [sp, #12]
   16a64:	movw	r1, #0
   16a68:	cmp	r1, r0
   16a6c:	blt	16ad8 <__assert_fail@plt+0x59f0>
   16a70:	b	16ae8 <__assert_fail@plt+0x5a00>
   16a74:	b	16a7c <__assert_fail@plt+0x5994>
   16a78:	b	16ae8 <__assert_fail@plt+0x5a00>
   16a7c:	ldr	r0, [sp, #12]
   16a80:	cmp	r0, #0
   16a84:	bge	16ac4 <__assert_fail@plt+0x59dc>
   16a88:	b	16a8c <__assert_fail@plt+0x59a4>
   16a8c:	b	16aac <__assert_fail@plt+0x59c4>
   16a90:	b	16aac <__assert_fail@plt+0x59c4>
   16a94:	ldr	r0, [sp, #12]
   16a98:	cmn	r0, #1
   16a9c:	bne	16aac <__assert_fail@plt+0x59c4>
   16aa0:	b	16aa4 <__assert_fail@plt+0x59bc>
   16aa4:	b	16ad8 <__assert_fail@plt+0x59f0>
   16aa8:	b	16ad8 <__assert_fail@plt+0x59f0>
   16aac:	ldr	r0, [sp, #12]
   16ab0:	movw	r1, #0
   16ab4:	sdiv	r0, r1, r0
   16ab8:	cmp	r0, #4
   16abc:	blt	16ad8 <__assert_fail@plt+0x59f0>
   16ac0:	b	16ae8 <__assert_fail@plt+0x5a00>
   16ac4:	ldr	r0, [sp, #12]
   16ac8:	asr	r0, r0, #31
   16acc:	cmp	r0, #1073741824	; 0x40000000
   16ad0:	bcc	16ae8 <__assert_fail@plt+0x5a00>
   16ad4:	b	16ad8 <__assert_fail@plt+0x59f0>
   16ad8:	ldr	r0, [sp, #12]
   16adc:	lsl	r0, r0, #2
   16ae0:	str	r0, [sp, #8]
   16ae4:	b	16b00 <__assert_fail@plt+0x5a18>
   16ae8:	ldr	r0, [sp, #12]
   16aec:	lsl	r0, r0, #2
   16af0:	str	r0, [sp, #8]
   16af4:	ldr	r0, [fp, #-12]
   16af8:	cmp	r0, #0
   16afc:	bge	16b14 <__assert_fail@plt+0x5a2c>
   16b00:	ldr	r0, [sp, #16]
   16b04:	movw	r1, #0
   16b08:	str	r1, [r0]
   16b0c:	str	r1, [fp, #-4]
   16b10:	b	16b74 <__assert_fail@plt+0x5a8c>
   16b14:	ldr	r0, [sp, #8]
   16b18:	add	r0, r0, #1
   16b1c:	str	r0, [sp, #8]
   16b20:	ldr	r0, [sp, #8]
   16b24:	bl	17ff0 <__assert_fail@plt+0x6f08>
   16b28:	ldr	r1, [sp, #16]
   16b2c:	str	r0, [r1]
   16b30:	ldr	r0, [sp, #16]
   16b34:	ldr	r0, [r0]
   16b38:	movw	r1, #0
   16b3c:	cmp	r0, r1
   16b40:	bne	16b50 <__assert_fail@plt+0x5a68>
   16b44:	ldr	r0, [sp, #8]
   16b48:	str	r0, [fp, #-4]
   16b4c:	b	16b74 <__assert_fail@plt+0x5a8c>
   16b50:	ldr	r0, [fp, #-8]
   16b54:	ldr	r1, [fp, #-12]
   16b58:	ldr	r2, [sp, #16]
   16b5c:	ldr	r2, [r2]
   16b60:	ldr	r3, [sp, #8]
   16b64:	bl	15a24 <__assert_fail@plt+0x493c>
   16b68:	ldr	r0, [sp, #8]
   16b6c:	sub	r0, r0, #1
   16b70:	str	r0, [fp, #-4]
   16b74:	ldr	r0, [fp, #-4]
   16b78:	mov	sp, fp
   16b7c:	pop	{fp, pc}
   16b80:	svccc	0x00ffffff
   16b84:	svcne	0x00ffffff
   16b88:	andhi	r0, r0, r0
   16b8c:	and	r0, r0, r0
   16b90:	svcvc	0x00ffffff
   16b94:	and	r0, r0, r1
   16b98:			; <UNDEFINED> instruction: 0xffff8000
   16b9c:			; <UNDEFINED> instruction: 0xffffe000
   16ba0:			; <UNDEFINED> instruction: 0xffffe001
   16ba4:			; <UNDEFINED> instruction: 0xffffc001
   16ba8:	push	{fp, lr}
   16bac:	mov	fp, sp
   16bb0:	sub	sp, sp, #8
   16bb4:	strb	r0, [fp, #-1]
   16bb8:	ldrb	r0, [fp, #-1]
   16bbc:	bl	15ebc <__assert_fail@plt+0x4dd4>
   16bc0:	and	r0, r0, #255	; 0xff
   16bc4:	movw	r1, #10527	; 0x291f
   16bc8:	movt	r1, #2
   16bcc:	add	r0, r1, r0
   16bd0:	ldrsb	r0, [r0]
   16bd4:	movw	r1, #0
   16bd8:	cmp	r1, r0
   16bdc:	movw	r0, #0
   16be0:	movle	r0, #1
   16be4:	and	r0, r0, #1
   16be8:	mov	sp, fp
   16bec:	pop	{fp, pc}
   16bf0:	sub	sp, sp, #4
   16bf4:	str	r0, [sp]
   16bf8:	ldr	r0, [sp]
   16bfc:	movw	r1, #0
   16c00:	str	r1, [r0]
   16c04:	add	sp, sp, #4
   16c08:	bx	lr
   16c0c:	push	{fp, lr}
   16c10:	mov	fp, sp
   16c14:	sub	sp, sp, #40	; 0x28
   16c18:	ldr	ip, [fp, #8]
   16c1c:	str	r0, [fp, #-4]
   16c20:	str	r1, [fp, #-8]
   16c24:	str	r2, [fp, #-12]
   16c28:	str	r3, [fp, #-16]
   16c2c:	ldr	r0, [fp, #8]
   16c30:	ldr	r0, [r0]
   16c34:	str	r0, [sp, #20]
   16c38:	ldr	r0, [fp, #-4]
   16c3c:	movw	r1, #0
   16c40:	cmp	r0, r1
   16c44:	movw	r0, #0
   16c48:	movne	r0, #1
   16c4c:	and	r0, r0, #1
   16c50:	strb	r0, [sp, #19]
   16c54:	movw	r0, #0
   16c58:	strb	r0, [sp, #18]
   16c5c:	str	r1, [sp, #12]
   16c60:	ldrb	r0, [sp, #19]
   16c64:	tst	r0, #1
   16c68:	beq	16c90 <__assert_fail@plt+0x5ba8>
   16c6c:	ldr	r0, [fp, #-4]
   16c70:	ldr	r0, [r0]
   16c74:	str	r0, [sp, #12]
   16c78:	ldr	r0, [fp, #-12]
   16c7c:	cmp	r0, #0
   16c80:	movw	r0, #0
   16c84:	moveq	r0, #1
   16c88:	and	r0, r0, #1
   16c8c:	strb	r0, [sp, #18]
   16c90:	b	16c94 <__assert_fail@plt+0x5bac>
   16c94:	ldr	r0, [sp, #20]
   16c98:	str	r0, [sp, #8]
   16c9c:	ldr	r0, [sp, #12]
   16ca0:	cmp	r0, #0
   16ca4:	bne	16d00 <__assert_fail@plt+0x5c18>
   16ca8:	ldrb	r0, [sp, #18]
   16cac:	tst	r0, #1
   16cb0:	bne	16d00 <__assert_fail@plt+0x5c18>
   16cb4:	b	16cb8 <__assert_fail@plt+0x5bd0>
   16cb8:	ldr	r0, [sp, #20]
   16cbc:	str	r0, [sp, #8]
   16cc0:	ldr	r0, [fp, #-8]
   16cc4:	ldr	r1, [fp, #-12]
   16cc8:	sub	r2, fp, #16
   16ccc:	add	r3, sp, #20
   16cd0:	bl	16e6c <__assert_fail@plt+0x5d84>
   16cd4:	tst	r0, #1
   16cd8:	bne	16ce0 <__assert_fail@plt+0x5bf8>
   16cdc:	b	16cfc <__assert_fail@plt+0x5c14>
   16ce0:	ldr	r0, [fp, #-8]
   16ce4:	add	r0, r0, #4
   16ce8:	str	r0, [fp, #-8]
   16cec:	ldr	r0, [fp, #-12]
   16cf0:	sub	r0, r0, #4
   16cf4:	str	r0, [fp, #-12]
   16cf8:	b	16cb8 <__assert_fail@plt+0x5bd0>
   16cfc:	b	16d00 <__assert_fail@plt+0x5c18>
   16d00:	ldr	r0, [fp, #-12]
   16d04:	cmp	r0, #0
   16d08:	bne	16d1c <__assert_fail@plt+0x5c34>
   16d0c:	ldrb	r0, [sp, #18]
   16d10:	tst	r0, #1
   16d14:	bne	16d1c <__assert_fail@plt+0x5c34>
   16d18:	b	16e3c <__assert_fail@plt+0x5d54>
   16d1c:	ldr	r0, [fp, #-12]
   16d20:	cmp	r0, #0
   16d24:	beq	16d64 <__assert_fail@plt+0x5c7c>
   16d28:	ldr	r0, [fp, #-8]
   16d2c:	ldrb	r0, [r0]
   16d30:	cmp	r0, #10
   16d34:	bne	16d64 <__assert_fail@plt+0x5c7c>
   16d38:	ldrb	r0, [sp, #19]
   16d3c:	tst	r0, #1
   16d40:	beq	16d64 <__assert_fail@plt+0x5c7c>
   16d44:	ldr	r0, [fp, #-8]
   16d48:	add	r0, r0, #1
   16d4c:	str	r0, [fp, #-8]
   16d50:	ldr	r0, [fp, #-12]
   16d54:	mvn	r1, #0
   16d58:	add	r0, r0, r1
   16d5c:	str	r0, [fp, #-12]
   16d60:	b	16c94 <__assert_fail@plt+0x5bac>
   16d64:	ldr	r0, [sp, #8]
   16d68:	ldr	r1, [sp, #20]
   16d6c:	sub	r0, r0, r1
   16d70:	ldr	r1, [fp, #-16]
   16d74:	movw	r2, #0
   16d78:	sub	r0, r2, r0
   16d7c:	add	r0, r1, r0
   16d80:	str	r0, [fp, #-16]
   16d84:	ldr	r0, [sp, #8]
   16d88:	str	r0, [sp, #20]
   16d8c:	ldr	r0, [fp, #-8]
   16d90:	ldr	r1, [fp, #-12]
   16d94:	add	r0, r0, r1
   16d98:	str	r0, [sp, #4]
   16d9c:	ldrb	r0, [sp, #19]
   16da0:	tst	r0, #1
   16da4:	beq	16dc4 <__assert_fail@plt+0x5cdc>
   16da8:	ldr	r0, [fp, #-4]
   16dac:	ldr	r2, [sp, #4]
   16db0:	sub	r1, fp, #8
   16db4:	sub	r3, fp, #12
   16db8:	bl	17230 <__assert_fail@plt+0x6148>
   16dbc:	str	r0, [sp]
   16dc0:	b	16dcc <__assert_fail@plt+0x5ce4>
   16dc4:	ldr	r0, [fp, #-8]
   16dc8:	str	r0, [sp]
   16dcc:	ldr	r0, [fp, #-12]
   16dd0:	cmp	r0, #0
   16dd4:	beq	16dfc <__assert_fail@plt+0x5d14>
   16dd8:	ldr	r0, [fp, #-12]
   16ddc:	cmp	r0, #4
   16de0:	bge	16e08 <__assert_fail@plt+0x5d20>
   16de4:	ldrb	r0, [sp, #18]
   16de8:	tst	r0, #1
   16dec:	bne	16e08 <__assert_fail@plt+0x5d20>
   16df0:	ldrb	r0, [sp, #19]
   16df4:	tst	r0, #1
   16df8:	beq	16e08 <__assert_fail@plt+0x5d20>
   16dfc:	movw	r0, #0
   16e00:	str	r0, [fp, #-12]
   16e04:	b	16e3c <__assert_fail@plt+0x5d54>
   16e08:	ldr	r0, [sp]
   16e0c:	ldr	r1, [fp, #-12]
   16e10:	sub	r2, fp, #16
   16e14:	add	r3, sp, #20
   16e18:	bl	16e6c <__assert_fail@plt+0x5d84>
   16e1c:	tst	r0, #1
   16e20:	bne	16e28 <__assert_fail@plt+0x5d40>
   16e24:	b	16e3c <__assert_fail@plt+0x5d54>
   16e28:	ldr	r0, [sp, #4]
   16e2c:	ldr	r1, [fp, #-8]
   16e30:	sub	r0, r0, r1
   16e34:	str	r0, [fp, #-12]
   16e38:	b	16c94 <__assert_fail@plt+0x5bac>
   16e3c:	ldr	r0, [sp, #20]
   16e40:	ldr	r1, [fp, #8]
   16e44:	ldr	r2, [r1]
   16e48:	sub	r0, r2, r0
   16e4c:	str	r0, [r1]
   16e50:	ldr	r0, [fp, #-12]
   16e54:	cmp	r0, #0
   16e58:	movw	r0, #0
   16e5c:	moveq	r0, #1
   16e60:	and	r0, r0, #1
   16e64:	mov	sp, fp
   16e68:	pop	{fp, pc}
   16e6c:	push	{fp, lr}
   16e70:	mov	fp, sp
   16e74:	sub	sp, sp, #40	; 0x28
   16e78:	str	r0, [fp, #-8]
   16e7c:	str	r1, [fp, #-12]
   16e80:	str	r2, [fp, #-16]
   16e84:	str	r3, [sp, #20]
   16e88:	ldr	r0, [fp, #-16]
   16e8c:	ldr	r0, [r0]
   16e90:	str	r0, [sp, #16]
   16e94:	ldr	r0, [fp, #-12]
   16e98:	cmp	r0, #2
   16e9c:	bge	16eb0 <__assert_fail@plt+0x5dc8>
   16ea0:	movw	r0, #0
   16ea4:	and	r0, r0, #1
   16ea8:	strb	r0, [fp, #-1]
   16eac:	b	17220 <__assert_fail@plt+0x6138>
   16eb0:	ldr	r0, [fp, #-8]
   16eb4:	ldrb	r0, [r0]
   16eb8:	bl	16ba8 <__assert_fail@plt+0x5ac0>
   16ebc:	tst	r0, #1
   16ec0:	beq	16ed8 <__assert_fail@plt+0x5df0>
   16ec4:	ldr	r0, [fp, #-8]
   16ec8:	ldrb	r0, [r0, #1]
   16ecc:	bl	16ba8 <__assert_fail@plt+0x5ac0>
   16ed0:	tst	r0, #1
   16ed4:	bne	16ee8 <__assert_fail@plt+0x5e00>
   16ed8:	movw	r0, #0
   16edc:	and	r0, r0, #1
   16ee0:	strb	r0, [fp, #-1]
   16ee4:	b	17220 <__assert_fail@plt+0x6138>
   16ee8:	ldr	r0, [sp, #20]
   16eec:	ldr	r0, [r0]
   16ef0:	cmp	r0, #0
   16ef4:	beq	16f74 <__assert_fail@plt+0x5e8c>
   16ef8:	ldr	r0, [fp, #-8]
   16efc:	ldrb	r0, [r0]
   16f00:	bl	15ebc <__assert_fail@plt+0x4dd4>
   16f04:	and	r0, r0, #255	; 0xff
   16f08:	movw	r1, #10527	; 0x291f
   16f0c:	movt	r1, #2
   16f10:	add	r0, r1, r0
   16f14:	ldrsb	r0, [r0]
   16f18:	lsl	r0, r0, #2
   16f1c:	ldr	r1, [fp, #-8]
   16f20:	ldrb	r1, [r1, #1]
   16f24:	str	r0, [sp, #12]
   16f28:	mov	r0, r1
   16f2c:	bl	15ebc <__assert_fail@plt+0x4dd4>
   16f30:	and	r0, r0, #255	; 0xff
   16f34:	movw	r1, #10527	; 0x291f
   16f38:	movt	r1, #2
   16f3c:	add	r0, r1, r0
   16f40:	ldrsb	r0, [r0]
   16f44:	asr	r0, r0, #4
   16f48:	ldr	r1, [sp, #12]
   16f4c:	orr	r0, r1, r0
   16f50:	ldr	r1, [sp, #16]
   16f54:	add	r2, r1, #1
   16f58:	str	r2, [sp, #16]
   16f5c:	strb	r0, [r1]
   16f60:	ldr	r0, [sp, #20]
   16f64:	ldr	r1, [r0]
   16f68:	mvn	r2, #0
   16f6c:	add	r1, r1, r2
   16f70:	str	r1, [r0]
   16f74:	ldr	r0, [fp, #-12]
   16f78:	cmp	r0, #2
   16f7c:	bne	16fa0 <__assert_fail@plt+0x5eb8>
   16f80:	b	16f84 <__assert_fail@plt+0x5e9c>
   16f84:	ldr	r0, [sp, #16]
   16f88:	ldr	r1, [fp, #-16]
   16f8c:	str	r0, [r1]
   16f90:	movw	r0, #0
   16f94:	and	r0, r0, #1
   16f98:	strb	r0, [fp, #-1]
   16f9c:	b	17220 <__assert_fail@plt+0x6138>
   16fa0:	ldr	r0, [fp, #-8]
   16fa4:	ldrb	r0, [r0, #2]
   16fa8:	cmp	r0, #61	; 0x3d
   16fac:	bne	17010 <__assert_fail@plt+0x5f28>
   16fb0:	ldr	r0, [fp, #-12]
   16fb4:	cmp	r0, #4
   16fb8:	beq	16fdc <__assert_fail@plt+0x5ef4>
   16fbc:	b	16fc0 <__assert_fail@plt+0x5ed8>
   16fc0:	ldr	r0, [sp, #16]
   16fc4:	ldr	r1, [fp, #-16]
   16fc8:	str	r0, [r1]
   16fcc:	movw	r0, #0
   16fd0:	and	r0, r0, #1
   16fd4:	strb	r0, [fp, #-1]
   16fd8:	b	17220 <__assert_fail@plt+0x6138>
   16fdc:	ldr	r0, [fp, #-8]
   16fe0:	ldrb	r0, [r0, #3]
   16fe4:	cmp	r0, #61	; 0x3d
   16fe8:	beq	1700c <__assert_fail@plt+0x5f24>
   16fec:	b	16ff0 <__assert_fail@plt+0x5f08>
   16ff0:	ldr	r0, [sp, #16]
   16ff4:	ldr	r1, [fp, #-16]
   16ff8:	str	r0, [r1]
   16ffc:	movw	r0, #0
   17000:	and	r0, r0, #1
   17004:	strb	r0, [fp, #-1]
   17008:	b	17220 <__assert_fail@plt+0x6138>
   1700c:	b	17208 <__assert_fail@plt+0x6120>
   17010:	ldr	r0, [fp, #-8]
   17014:	ldrb	r0, [r0, #2]
   17018:	bl	16ba8 <__assert_fail@plt+0x5ac0>
   1701c:	tst	r0, #1
   17020:	bne	17044 <__assert_fail@plt+0x5f5c>
   17024:	b	17028 <__assert_fail@plt+0x5f40>
   17028:	ldr	r0, [sp, #16]
   1702c:	ldr	r1, [fp, #-16]
   17030:	str	r0, [r1]
   17034:	movw	r0, #0
   17038:	and	r0, r0, #1
   1703c:	strb	r0, [fp, #-1]
   17040:	b	17220 <__assert_fail@plt+0x6138>
   17044:	ldr	r0, [sp, #20]
   17048:	ldr	r0, [r0]
   1704c:	cmp	r0, #0
   17050:	beq	170d4 <__assert_fail@plt+0x5fec>
   17054:	ldr	r0, [fp, #-8]
   17058:	ldrb	r0, [r0, #1]
   1705c:	bl	15ebc <__assert_fail@plt+0x4dd4>
   17060:	and	r0, r0, #255	; 0xff
   17064:	movw	r1, #10527	; 0x291f
   17068:	movt	r1, #2
   1706c:	add	r0, r1, r0
   17070:	ldrsb	r0, [r0]
   17074:	lsl	r0, r0, #4
   17078:	and	r0, r0, #240	; 0xf0
   1707c:	ldr	r1, [fp, #-8]
   17080:	ldrb	r1, [r1, #2]
   17084:	str	r0, [sp, #8]
   17088:	mov	r0, r1
   1708c:	bl	15ebc <__assert_fail@plt+0x4dd4>
   17090:	and	r0, r0, #255	; 0xff
   17094:	movw	r1, #10527	; 0x291f
   17098:	movt	r1, #2
   1709c:	add	r0, r1, r0
   170a0:	ldrsb	r0, [r0]
   170a4:	asr	r0, r0, #2
   170a8:	ldr	r1, [sp, #8]
   170ac:	orr	r0, r1, r0
   170b0:	ldr	r1, [sp, #16]
   170b4:	add	r2, r1, #1
   170b8:	str	r2, [sp, #16]
   170bc:	strb	r0, [r1]
   170c0:	ldr	r0, [sp, #20]
   170c4:	ldr	r1, [r0]
   170c8:	mvn	r2, #0
   170cc:	add	r1, r1, r2
   170d0:	str	r1, [r0]
   170d4:	ldr	r0, [fp, #-12]
   170d8:	cmp	r0, #3
   170dc:	bne	17100 <__assert_fail@plt+0x6018>
   170e0:	b	170e4 <__assert_fail@plt+0x5ffc>
   170e4:	ldr	r0, [sp, #16]
   170e8:	ldr	r1, [fp, #-16]
   170ec:	str	r0, [r1]
   170f0:	movw	r0, #0
   170f4:	and	r0, r0, #1
   170f8:	strb	r0, [fp, #-1]
   170fc:	b	17220 <__assert_fail@plt+0x6138>
   17100:	ldr	r0, [fp, #-8]
   17104:	ldrb	r0, [r0, #3]
   17108:	cmp	r0, #61	; 0x3d
   1710c:	bne	17140 <__assert_fail@plt+0x6058>
   17110:	ldr	r0, [fp, #-12]
   17114:	cmp	r0, #4
   17118:	beq	1713c <__assert_fail@plt+0x6054>
   1711c:	b	17120 <__assert_fail@plt+0x6038>
   17120:	ldr	r0, [sp, #16]
   17124:	ldr	r1, [fp, #-16]
   17128:	str	r0, [r1]
   1712c:	movw	r0, #0
   17130:	and	r0, r0, #1
   17134:	strb	r0, [fp, #-1]
   17138:	b	17220 <__assert_fail@plt+0x6138>
   1713c:	b	17204 <__assert_fail@plt+0x611c>
   17140:	ldr	r0, [fp, #-8]
   17144:	ldrb	r0, [r0, #3]
   17148:	bl	16ba8 <__assert_fail@plt+0x5ac0>
   1714c:	tst	r0, #1
   17150:	bne	17174 <__assert_fail@plt+0x608c>
   17154:	b	17158 <__assert_fail@plt+0x6070>
   17158:	ldr	r0, [sp, #16]
   1715c:	ldr	r1, [fp, #-16]
   17160:	str	r0, [r1]
   17164:	movw	r0, #0
   17168:	and	r0, r0, #1
   1716c:	strb	r0, [fp, #-1]
   17170:	b	17220 <__assert_fail@plt+0x6138>
   17174:	ldr	r0, [sp, #20]
   17178:	ldr	r0, [r0]
   1717c:	cmp	r0, #0
   17180:	beq	17200 <__assert_fail@plt+0x6118>
   17184:	ldr	r0, [fp, #-8]
   17188:	ldrb	r0, [r0, #2]
   1718c:	bl	15ebc <__assert_fail@plt+0x4dd4>
   17190:	and	r0, r0, #255	; 0xff
   17194:	movw	r1, #10527	; 0x291f
   17198:	movt	r1, #2
   1719c:	add	r0, r1, r0
   171a0:	ldrsb	r0, [r0]
   171a4:	lsl	r0, r0, #6
   171a8:	and	r0, r0, #192	; 0xc0
   171ac:	ldr	r1, [fp, #-8]
   171b0:	ldrb	r1, [r1, #3]
   171b4:	str	r0, [sp, #4]
   171b8:	mov	r0, r1
   171bc:	bl	15ebc <__assert_fail@plt+0x4dd4>
   171c0:	and	r0, r0, #255	; 0xff
   171c4:	movw	r1, #10527	; 0x291f
   171c8:	movt	r1, #2
   171cc:	add	r0, r1, r0
   171d0:	ldrsb	r0, [r0]
   171d4:	ldr	r1, [sp, #4]
   171d8:	orr	r0, r1, r0
   171dc:	ldr	r1, [sp, #16]
   171e0:	add	r2, r1, #1
   171e4:	str	r2, [sp, #16]
   171e8:	strb	r0, [r1]
   171ec:	ldr	r0, [sp, #20]
   171f0:	ldr	r1, [r0]
   171f4:	mvn	r2, #0
   171f8:	add	r1, r1, r2
   171fc:	str	r1, [r0]
   17200:	b	17204 <__assert_fail@plt+0x611c>
   17204:	b	17208 <__assert_fail@plt+0x6120>
   17208:	ldr	r0, [sp, #16]
   1720c:	ldr	r1, [fp, #-16]
   17210:	str	r0, [r1]
   17214:	movw	r0, #1
   17218:	and	r0, r0, #1
   1721c:	strb	r0, [fp, #-1]
   17220:	ldrb	r0, [fp, #-1]
   17224:	and	r0, r0, #1
   17228:	mov	sp, fp
   1722c:	pop	{fp, pc}
   17230:	push	{fp, lr}
   17234:	mov	fp, sp
   17238:	sub	sp, sp, #32
   1723c:	str	r0, [fp, #-8]
   17240:	str	r1, [fp, #-12]
   17244:	str	r2, [sp, #16]
   17248:	str	r3, [sp, #12]
   1724c:	ldr	r0, [fp, #-8]
   17250:	ldr	r0, [r0]
   17254:	cmp	r0, #4
   17258:	bne	17268 <__assert_fail@plt+0x6180>
   1725c:	ldr	r0, [fp, #-8]
   17260:	movw	r1, #0
   17264:	str	r1, [r0]
   17268:	ldr	r0, [fp, #-8]
   1726c:	ldr	r0, [r0]
   17270:	cmp	r0, #0
   17274:	bne	172e8 <__assert_fail@plt+0x6200>
   17278:	ldr	r0, [fp, #-12]
   1727c:	ldr	r0, [r0]
   17280:	str	r0, [sp, #8]
   17284:	ldr	r0, [sp, #16]
   17288:	ldr	r1, [fp, #-12]
   1728c:	ldr	r1, [r1]
   17290:	sub	r0, r0, r1
   17294:	movw	r1, #4
   17298:	cmp	r1, r0
   1729c:	bgt	172e4 <__assert_fail@plt+0x61fc>
   172a0:	ldr	r0, [sp, #8]
   172a4:	mov	r1, #10
   172a8:	mov	r2, #4
   172ac:	bl	11040 <memchr@plt>
   172b0:	movw	r1, #0
   172b4:	cmp	r0, r1
   172b8:	bne	172e4 <__assert_fail@plt+0x61fc>
   172bc:	ldr	r0, [fp, #-12]
   172c0:	ldr	r1, [r0]
   172c4:	add	r1, r1, #4
   172c8:	str	r1, [r0]
   172cc:	ldr	r0, [sp, #12]
   172d0:	movw	r1, #4
   172d4:	str	r1, [r0]
   172d8:	ldr	r0, [sp, #8]
   172dc:	str	r0, [fp, #-4]
   172e0:	b	1738c <__assert_fail@plt+0x62a4>
   172e4:	b	172e8 <__assert_fail@plt+0x6200>
   172e8:	ldr	r0, [fp, #-12]
   172ec:	ldr	r0, [r0]
   172f0:	str	r0, [sp, #4]
   172f4:	ldr	r0, [sp, #4]
   172f8:	ldr	r1, [sp, #16]
   172fc:	cmp	r0, r1
   17300:	bcs	17364 <__assert_fail@plt+0x627c>
   17304:	ldr	r0, [sp, #4]
   17308:	add	r1, r0, #1
   1730c:	str	r1, [sp, #4]
   17310:	ldrb	r0, [r0]
   17314:	strb	r0, [sp, #3]
   17318:	ldrb	r0, [sp, #3]
   1731c:	cmp	r0, #10
   17320:	beq	17360 <__assert_fail@plt+0x6278>
   17324:	ldrb	r0, [sp, #3]
   17328:	ldr	r1, [fp, #-8]
   1732c:	add	r1, r1, #4
   17330:	ldr	r2, [fp, #-8]
   17334:	ldr	r3, [r2]
   17338:	add	ip, r3, #1
   1733c:	str	ip, [r2]
   17340:	add	r1, r1, r3
   17344:	strb	r0, [r1]
   17348:	ldr	r0, [fp, #-8]
   1734c:	ldr	r0, [r0]
   17350:	cmp	r0, #4
   17354:	bne	1735c <__assert_fail@plt+0x6274>
   17358:	b	17364 <__assert_fail@plt+0x627c>
   1735c:	b	17360 <__assert_fail@plt+0x6278>
   17360:	b	172f4 <__assert_fail@plt+0x620c>
   17364:	ldr	r0, [sp, #4]
   17368:	ldr	r1, [fp, #-12]
   1736c:	str	r0, [r1]
   17370:	ldr	r0, [fp, #-8]
   17374:	ldr	r0, [r0]
   17378:	ldr	r1, [sp, #12]
   1737c:	str	r0, [r1]
   17380:	ldr	r0, [fp, #-8]
   17384:	add	r0, r0, #4
   17388:	str	r0, [fp, #-4]
   1738c:	ldr	r0, [fp, #-4]
   17390:	mov	sp, fp
   17394:	pop	{fp, pc}
   17398:	push	{fp, lr}
   1739c:	mov	fp, sp
   173a0:	sub	sp, sp, #32
   173a4:	ldr	ip, [fp, #8]
   173a8:	str	r0, [fp, #-8]
   173ac:	str	r1, [fp, #-12]
   173b0:	str	r2, [sp, #16]
   173b4:	str	r3, [sp, #12]
   173b8:	ldr	r0, [sp, #16]
   173bc:	asr	r0, r0, #2
   173c0:	add	r0, r0, #1
   173c4:	movw	r1, #3
   173c8:	mul	r0, r0, r1
   173cc:	str	r0, [sp, #8]
   173d0:	ldr	r0, [sp, #8]
   173d4:	str	ip, [sp, #4]
   173d8:	bl	17ff0 <__assert_fail@plt+0x6f08>
   173dc:	ldr	r1, [sp, #12]
   173e0:	str	r0, [r1]
   173e4:	ldr	r0, [sp, #12]
   173e8:	ldr	r0, [r0]
   173ec:	movw	r1, #0
   173f0:	cmp	r0, r1
   173f4:	bne	17408 <__assert_fail@plt+0x6320>
   173f8:	movw	r0, #1
   173fc:	and	r0, r0, #1
   17400:	strb	r0, [fp, #-1]
   17404:	b	17480 <__assert_fail@plt+0x6398>
   17408:	ldr	r0, [fp, #-8]
   1740c:	ldr	r1, [fp, #-12]
   17410:	ldr	r2, [sp, #16]
   17414:	ldr	r3, [sp, #12]
   17418:	ldr	r3, [r3]
   1741c:	add	ip, sp, #8
   17420:	str	ip, [sp]
   17424:	bl	16c0c <__assert_fail@plt+0x5b24>
   17428:	tst	r0, #1
   1742c:	bne	17458 <__assert_fail@plt+0x6370>
   17430:	ldr	r0, [sp, #12]
   17434:	ldr	r0, [r0]
   17438:	bl	17e8c <__assert_fail@plt+0x6da4>
   1743c:	ldr	r0, [sp, #12]
   17440:	movw	r1, #0
   17444:	str	r1, [r0]
   17448:	movw	r0, #0
   1744c:	and	r0, r0, #1
   17450:	strb	r0, [fp, #-1]
   17454:	b	17480 <__assert_fail@plt+0x6398>
   17458:	ldr	r0, [fp, #8]
   1745c:	movw	r1, #0
   17460:	cmp	r0, r1
   17464:	beq	17474 <__assert_fail@plt+0x638c>
   17468:	ldr	r0, [sp, #8]
   1746c:	ldr	r1, [fp, #8]
   17470:	str	r0, [r1]
   17474:	movw	r0, #1
   17478:	and	r0, r0, #1
   1747c:	strb	r0, [fp, #-1]
   17480:	ldrb	r0, [fp, #-1]
   17484:	and	r0, r0, #1
   17488:	mov	sp, fp
   1748c:	pop	{fp, pc}
   17490:	sub	sp, sp, #12
   17494:	str	r0, [sp, #4]
   17498:	ldr	r0, [sp, #4]
   1749c:	sub	r1, r0, #48	; 0x30
   174a0:	cmp	r1, #10
   174a4:	str	r0, [sp]
   174a8:	bcc	174d8 <__assert_fail@plt+0x63f0>
   174ac:	b	174b0 <__assert_fail@plt+0x63c8>
   174b0:	ldr	r0, [sp]
   174b4:	sub	r1, r0, #65	; 0x41
   174b8:	cmp	r1, #26
   174bc:	bcc	174d8 <__assert_fail@plt+0x63f0>
   174c0:	b	174c4 <__assert_fail@plt+0x63dc>
   174c4:	ldr	r0, [sp]
   174c8:	sub	r1, r0, #97	; 0x61
   174cc:	cmp	r1, #25
   174d0:	bhi	174e8 <__assert_fail@plt+0x6400>
   174d4:	b	174d8 <__assert_fail@plt+0x63f0>
   174d8:	movw	r0, #1
   174dc:	and	r0, r0, #1
   174e0:	strb	r0, [sp, #11]
   174e4:	b	174f4 <__assert_fail@plt+0x640c>
   174e8:	movw	r0, #0
   174ec:	and	r0, r0, #1
   174f0:	strb	r0, [sp, #11]
   174f4:	ldrb	r0, [sp, #11]
   174f8:	and	r0, r0, #1
   174fc:	add	sp, sp, #12
   17500:	bx	lr
   17504:	sub	sp, sp, #12
   17508:	str	r0, [sp, #4]
   1750c:	ldr	r0, [sp, #4]
   17510:	sub	r1, r0, #65	; 0x41
   17514:	cmp	r1, #26
   17518:	str	r0, [sp]
   1751c:	bcc	17538 <__assert_fail@plt+0x6450>
   17520:	b	17524 <__assert_fail@plt+0x643c>
   17524:	ldr	r0, [sp]
   17528:	sub	r1, r0, #97	; 0x61
   1752c:	cmp	r1, #25
   17530:	bhi	17548 <__assert_fail@plt+0x6460>
   17534:	b	17538 <__assert_fail@plt+0x6450>
   17538:	movw	r0, #1
   1753c:	and	r0, r0, #1
   17540:	strb	r0, [sp, #11]
   17544:	b	17554 <__assert_fail@plt+0x646c>
   17548:	movw	r0, #0
   1754c:	and	r0, r0, #1
   17550:	strb	r0, [sp, #11]
   17554:	ldrb	r0, [sp, #11]
   17558:	and	r0, r0, #1
   1755c:	add	sp, sp, #12
   17560:	bx	lr
   17564:	sub	sp, sp, #8
   17568:	str	r0, [sp]
   1756c:	ldr	r0, [sp]
   17570:	cmp	r0, #127	; 0x7f
   17574:	bhi	1758c <__assert_fail@plt+0x64a4>
   17578:	b	1757c <__assert_fail@plt+0x6494>
   1757c:	movw	r0, #1
   17580:	and	r0, r0, #1
   17584:	strb	r0, [sp, #7]
   17588:	b	17598 <__assert_fail@plt+0x64b0>
   1758c:	movw	r0, #0
   17590:	and	r0, r0, #1
   17594:	strb	r0, [sp, #7]
   17598:	ldrb	r0, [sp, #7]
   1759c:	and	r0, r0, #1
   175a0:	add	sp, sp, #8
   175a4:	bx	lr
   175a8:	sub	sp, sp, #8
   175ac:	str	r0, [sp, #4]
   175b0:	ldr	r0, [sp, #4]
   175b4:	cmp	r0, #32
   175b8:	movw	r0, #1
   175bc:	str	r0, [sp]
   175c0:	beq	175d8 <__assert_fail@plt+0x64f0>
   175c4:	ldr	r0, [sp, #4]
   175c8:	cmp	r0, #9
   175cc:	movw	r0, #0
   175d0:	moveq	r0, #1
   175d4:	str	r0, [sp]
   175d8:	ldr	r0, [sp]
   175dc:	and	r0, r0, #1
   175e0:	add	sp, sp, #8
   175e4:	bx	lr
   175e8:	sub	sp, sp, #12
   175ec:	str	r0, [sp, #4]
   175f0:	ldr	r0, [sp, #4]
   175f4:	cmp	r0, #32
   175f8:	str	r0, [sp]
   175fc:	bcc	17614 <__assert_fail@plt+0x652c>
   17600:	b	17604 <__assert_fail@plt+0x651c>
   17604:	ldr	r0, [sp]
   17608:	cmp	r0, #127	; 0x7f
   1760c:	bne	17624 <__assert_fail@plt+0x653c>
   17610:	b	17614 <__assert_fail@plt+0x652c>
   17614:	movw	r0, #1
   17618:	and	r0, r0, #1
   1761c:	strb	r0, [sp, #11]
   17620:	b	17630 <__assert_fail@plt+0x6548>
   17624:	movw	r0, #0
   17628:	and	r0, r0, #1
   1762c:	strb	r0, [sp, #11]
   17630:	ldrb	r0, [sp, #11]
   17634:	and	r0, r0, #1
   17638:	add	sp, sp, #12
   1763c:	bx	lr
   17640:	sub	sp, sp, #8
   17644:	str	r0, [sp]
   17648:	ldr	r0, [sp]
   1764c:	sub	r0, r0, #48	; 0x30
   17650:	cmp	r0, #9
   17654:	bhi	1766c <__assert_fail@plt+0x6584>
   17658:	b	1765c <__assert_fail@plt+0x6574>
   1765c:	movw	r0, #1
   17660:	and	r0, r0, #1
   17664:	strb	r0, [sp, #7]
   17668:	b	17678 <__assert_fail@plt+0x6590>
   1766c:	movw	r0, #0
   17670:	and	r0, r0, #1
   17674:	strb	r0, [sp, #7]
   17678:	ldrb	r0, [sp, #7]
   1767c:	and	r0, r0, #1
   17680:	add	sp, sp, #8
   17684:	bx	lr
   17688:	sub	sp, sp, #8
   1768c:	str	r0, [sp]
   17690:	ldr	r0, [sp]
   17694:	sub	r0, r0, #33	; 0x21
   17698:	cmp	r0, #93	; 0x5d
   1769c:	bhi	176b4 <__assert_fail@plt+0x65cc>
   176a0:	b	176a4 <__assert_fail@plt+0x65bc>
   176a4:	movw	r0, #1
   176a8:	and	r0, r0, #1
   176ac:	strb	r0, [sp, #7]
   176b0:	b	176c0 <__assert_fail@plt+0x65d8>
   176b4:	movw	r0, #0
   176b8:	and	r0, r0, #1
   176bc:	strb	r0, [sp, #7]
   176c0:	ldrb	r0, [sp, #7]
   176c4:	and	r0, r0, #1
   176c8:	add	sp, sp, #8
   176cc:	bx	lr
   176d0:	sub	sp, sp, #8
   176d4:	str	r0, [sp]
   176d8:	ldr	r0, [sp]
   176dc:	sub	r0, r0, #97	; 0x61
   176e0:	cmp	r0, #25
   176e4:	bhi	176fc <__assert_fail@plt+0x6614>
   176e8:	b	176ec <__assert_fail@plt+0x6604>
   176ec:	movw	r0, #1
   176f0:	and	r0, r0, #1
   176f4:	strb	r0, [sp, #7]
   176f8:	b	17708 <__assert_fail@plt+0x6620>
   176fc:	movw	r0, #0
   17700:	and	r0, r0, #1
   17704:	strb	r0, [sp, #7]
   17708:	ldrb	r0, [sp, #7]
   1770c:	and	r0, r0, #1
   17710:	add	sp, sp, #8
   17714:	bx	lr
   17718:	sub	sp, sp, #8
   1771c:	str	r0, [sp]
   17720:	ldr	r0, [sp]
   17724:	sub	r0, r0, #32
   17728:	cmp	r0, #94	; 0x5e
   1772c:	bhi	17744 <__assert_fail@plt+0x665c>
   17730:	b	17734 <__assert_fail@plt+0x664c>
   17734:	movw	r0, #1
   17738:	and	r0, r0, #1
   1773c:	strb	r0, [sp, #7]
   17740:	b	17750 <__assert_fail@plt+0x6668>
   17744:	movw	r0, #0
   17748:	and	r0, r0, #1
   1774c:	strb	r0, [sp, #7]
   17750:	ldrb	r0, [sp, #7]
   17754:	and	r0, r0, #1
   17758:	add	sp, sp, #8
   1775c:	bx	lr
   17760:	sub	sp, sp, #12
   17764:	str	r0, [sp, #4]
   17768:	ldr	r0, [sp, #4]
   1776c:	sub	r0, r0, #33	; 0x21
   17770:	cmp	r0, #93	; 0x5d
   17774:	str	r0, [sp]
   17778:	bhi	17914 <__assert_fail@plt+0x682c>
   1777c:	add	r0, pc, #8
   17780:	ldr	r1, [sp]
   17784:	ldr	r0, [r0, r1, lsl #2]
   17788:	mov	pc, r0
   1778c:	andeq	r7, r1, r4, lsl #18
   17790:	andeq	r7, r1, r4, lsl #18
   17794:	andeq	r7, r1, r4, lsl #18
   17798:	andeq	r7, r1, r4, lsl #18
   1779c:	andeq	r7, r1, r4, lsl #18
   177a0:	andeq	r7, r1, r4, lsl #18
   177a4:	andeq	r7, r1, r4, lsl #18
   177a8:	andeq	r7, r1, r4, lsl #18
   177ac:	andeq	r7, r1, r4, lsl #18
   177b0:	andeq	r7, r1, r4, lsl #18
   177b4:	andeq	r7, r1, r4, lsl #18
   177b8:	andeq	r7, r1, r4, lsl #18
   177bc:	andeq	r7, r1, r4, lsl #18
   177c0:	andeq	r7, r1, r4, lsl #18
   177c4:	andeq	r7, r1, r4, lsl #18
   177c8:	andeq	r7, r1, r4, lsl r9
   177cc:	andeq	r7, r1, r4, lsl r9
   177d0:	andeq	r7, r1, r4, lsl r9
   177d4:	andeq	r7, r1, r4, lsl r9
   177d8:	andeq	r7, r1, r4, lsl r9
   177dc:	andeq	r7, r1, r4, lsl r9
   177e0:	andeq	r7, r1, r4, lsl r9
   177e4:	andeq	r7, r1, r4, lsl r9
   177e8:	andeq	r7, r1, r4, lsl r9
   177ec:	andeq	r7, r1, r4, lsl r9
   177f0:	andeq	r7, r1, r4, lsl #18
   177f4:	andeq	r7, r1, r4, lsl #18
   177f8:	andeq	r7, r1, r4, lsl #18
   177fc:	andeq	r7, r1, r4, lsl #18
   17800:	andeq	r7, r1, r4, lsl #18
   17804:	andeq	r7, r1, r4, lsl #18
   17808:	andeq	r7, r1, r4, lsl #18
   1780c:	andeq	r7, r1, r4, lsl r9
   17810:	andeq	r7, r1, r4, lsl r9
   17814:	andeq	r7, r1, r4, lsl r9
   17818:	andeq	r7, r1, r4, lsl r9
   1781c:	andeq	r7, r1, r4, lsl r9
   17820:	andeq	r7, r1, r4, lsl r9
   17824:	andeq	r7, r1, r4, lsl r9
   17828:	andeq	r7, r1, r4, lsl r9
   1782c:	andeq	r7, r1, r4, lsl r9
   17830:	andeq	r7, r1, r4, lsl r9
   17834:	andeq	r7, r1, r4, lsl r9
   17838:	andeq	r7, r1, r4, lsl r9
   1783c:	andeq	r7, r1, r4, lsl r9
   17840:	andeq	r7, r1, r4, lsl r9
   17844:	andeq	r7, r1, r4, lsl r9
   17848:	andeq	r7, r1, r4, lsl r9
   1784c:	andeq	r7, r1, r4, lsl r9
   17850:	andeq	r7, r1, r4, lsl r9
   17854:	andeq	r7, r1, r4, lsl r9
   17858:	andeq	r7, r1, r4, lsl r9
   1785c:	andeq	r7, r1, r4, lsl r9
   17860:	andeq	r7, r1, r4, lsl r9
   17864:	andeq	r7, r1, r4, lsl r9
   17868:	andeq	r7, r1, r4, lsl r9
   1786c:	andeq	r7, r1, r4, lsl r9
   17870:	andeq	r7, r1, r4, lsl r9
   17874:	andeq	r7, r1, r4, lsl #18
   17878:	andeq	r7, r1, r4, lsl #18
   1787c:	andeq	r7, r1, r4, lsl #18
   17880:	andeq	r7, r1, r4, lsl #18
   17884:	andeq	r7, r1, r4, lsl #18
   17888:	andeq	r7, r1, r4, lsl #18
   1788c:	andeq	r7, r1, r4, lsl r9
   17890:	andeq	r7, r1, r4, lsl r9
   17894:	andeq	r7, r1, r4, lsl r9
   17898:	andeq	r7, r1, r4, lsl r9
   1789c:	andeq	r7, r1, r4, lsl r9
   178a0:	andeq	r7, r1, r4, lsl r9
   178a4:	andeq	r7, r1, r4, lsl r9
   178a8:	andeq	r7, r1, r4, lsl r9
   178ac:	andeq	r7, r1, r4, lsl r9
   178b0:	andeq	r7, r1, r4, lsl r9
   178b4:	andeq	r7, r1, r4, lsl r9
   178b8:	andeq	r7, r1, r4, lsl r9
   178bc:	andeq	r7, r1, r4, lsl r9
   178c0:	andeq	r7, r1, r4, lsl r9
   178c4:	andeq	r7, r1, r4, lsl r9
   178c8:	andeq	r7, r1, r4, lsl r9
   178cc:	andeq	r7, r1, r4, lsl r9
   178d0:	andeq	r7, r1, r4, lsl r9
   178d4:	andeq	r7, r1, r4, lsl r9
   178d8:	andeq	r7, r1, r4, lsl r9
   178dc:	andeq	r7, r1, r4, lsl r9
   178e0:	andeq	r7, r1, r4, lsl r9
   178e4:	andeq	r7, r1, r4, lsl r9
   178e8:	andeq	r7, r1, r4, lsl r9
   178ec:	andeq	r7, r1, r4, lsl r9
   178f0:	andeq	r7, r1, r4, lsl r9
   178f4:	andeq	r7, r1, r4, lsl #18
   178f8:	andeq	r7, r1, r4, lsl #18
   178fc:	andeq	r7, r1, r4, lsl #18
   17900:	andeq	r7, r1, r4, lsl #18
   17904:	movw	r0, #1
   17908:	and	r0, r0, #1
   1790c:	strb	r0, [sp, #11]
   17910:	b	17920 <__assert_fail@plt+0x6838>
   17914:	movw	r0, #0
   17918:	and	r0, r0, #1
   1791c:	strb	r0, [sp, #11]
   17920:	ldrb	r0, [sp, #11]
   17924:	and	r0, r0, #1
   17928:	add	sp, sp, #12
   1792c:	bx	lr
   17930:	sub	sp, sp, #12
   17934:	str	r0, [sp, #4]
   17938:	ldr	r0, [sp, #4]
   1793c:	sub	r1, r0, #9
   17940:	cmp	r1, #5
   17944:	str	r0, [sp]
   17948:	bcc	17960 <__assert_fail@plt+0x6878>
   1794c:	b	17950 <__assert_fail@plt+0x6868>
   17950:	ldr	r0, [sp]
   17954:	cmp	r0, #32
   17958:	bne	17970 <__assert_fail@plt+0x6888>
   1795c:	b	17960 <__assert_fail@plt+0x6878>
   17960:	movw	r0, #1
   17964:	and	r0, r0, #1
   17968:	strb	r0, [sp, #11]
   1796c:	b	1797c <__assert_fail@plt+0x6894>
   17970:	movw	r0, #0
   17974:	and	r0, r0, #1
   17978:	strb	r0, [sp, #11]
   1797c:	ldrb	r0, [sp, #11]
   17980:	and	r0, r0, #1
   17984:	add	sp, sp, #12
   17988:	bx	lr
   1798c:	sub	sp, sp, #8
   17990:	str	r0, [sp]
   17994:	ldr	r0, [sp]
   17998:	sub	r0, r0, #65	; 0x41
   1799c:	cmp	r0, #25
   179a0:	bhi	179b8 <__assert_fail@plt+0x68d0>
   179a4:	b	179a8 <__assert_fail@plt+0x68c0>
   179a8:	movw	r0, #1
   179ac:	and	r0, r0, #1
   179b0:	strb	r0, [sp, #7]
   179b4:	b	179c4 <__assert_fail@plt+0x68dc>
   179b8:	movw	r0, #0
   179bc:	and	r0, r0, #1
   179c0:	strb	r0, [sp, #7]
   179c4:	ldrb	r0, [sp, #7]
   179c8:	and	r0, r0, #1
   179cc:	add	sp, sp, #8
   179d0:	bx	lr
   179d4:	sub	sp, sp, #12
   179d8:	str	r0, [sp, #4]
   179dc:	ldr	r0, [sp, #4]
   179e0:	sub	r1, r0, #48	; 0x30
   179e4:	cmp	r1, #10
   179e8:	str	r0, [sp]
   179ec:	bcc	17a1c <__assert_fail@plt+0x6934>
   179f0:	b	179f4 <__assert_fail@plt+0x690c>
   179f4:	ldr	r0, [sp]
   179f8:	sub	r1, r0, #65	; 0x41
   179fc:	cmp	r1, #6
   17a00:	bcc	17a1c <__assert_fail@plt+0x6934>
   17a04:	b	17a08 <__assert_fail@plt+0x6920>
   17a08:	ldr	r0, [sp]
   17a0c:	sub	r1, r0, #97	; 0x61
   17a10:	cmp	r1, #5
   17a14:	bhi	17a2c <__assert_fail@plt+0x6944>
   17a18:	b	17a1c <__assert_fail@plt+0x6934>
   17a1c:	movw	r0, #1
   17a20:	and	r0, r0, #1
   17a24:	strb	r0, [sp, #11]
   17a28:	b	17a38 <__assert_fail@plt+0x6950>
   17a2c:	movw	r0, #0
   17a30:	and	r0, r0, #1
   17a34:	strb	r0, [sp, #11]
   17a38:	ldrb	r0, [sp, #11]
   17a3c:	and	r0, r0, #1
   17a40:	add	sp, sp, #12
   17a44:	bx	lr
   17a48:	sub	sp, sp, #8
   17a4c:	str	r0, [sp]
   17a50:	ldr	r0, [sp]
   17a54:	sub	r0, r0, #65	; 0x41
   17a58:	cmp	r0, #25
   17a5c:	bhi	17a78 <__assert_fail@plt+0x6990>
   17a60:	b	17a64 <__assert_fail@plt+0x697c>
   17a64:	ldr	r0, [sp]
   17a68:	sub	r0, r0, #65	; 0x41
   17a6c:	add	r0, r0, #97	; 0x61
   17a70:	str	r0, [sp, #4]
   17a74:	b	17a80 <__assert_fail@plt+0x6998>
   17a78:	ldr	r0, [sp]
   17a7c:	str	r0, [sp, #4]
   17a80:	ldr	r0, [sp, #4]
   17a84:	add	sp, sp, #8
   17a88:	bx	lr
   17a8c:	sub	sp, sp, #8
   17a90:	str	r0, [sp]
   17a94:	ldr	r0, [sp]
   17a98:	sub	r0, r0, #97	; 0x61
   17a9c:	cmp	r0, #25
   17aa0:	bhi	17abc <__assert_fail@plt+0x69d4>
   17aa4:	b	17aa8 <__assert_fail@plt+0x69c0>
   17aa8:	ldr	r0, [sp]
   17aac:	sub	r0, r0, #97	; 0x61
   17ab0:	add	r0, r0, #65	; 0x41
   17ab4:	str	r0, [sp, #4]
   17ab8:	b	17ac4 <__assert_fail@plt+0x69dc>
   17abc:	ldr	r0, [sp]
   17ac0:	str	r0, [sp, #4]
   17ac4:	ldr	r0, [sp, #4]
   17ac8:	add	sp, sp, #8
   17acc:	bx	lr
   17ad0:	sub	sp, sp, #4
   17ad4:	str	r0, [sp]
   17ad8:	ldr	r0, [sp]
   17adc:	movw	r1, #12660	; 0x3174
   17ae0:	movt	r1, #3
   17ae4:	str	r0, [r1]
   17ae8:	add	sp, sp, #4
   17aec:	bx	lr
   17af0:	sub	sp, sp, #4
   17af4:	and	r0, r0, #1
   17af8:	strb	r0, [sp, #3]
   17afc:	ldrb	r0, [sp, #3]
   17b00:	and	r0, r0, #1
   17b04:	movw	r1, #12664	; 0x3178
   17b08:	movt	r1, #3
   17b0c:	strb	r0, [r1]
   17b10:	add	sp, sp, #4
   17b14:	bx	lr
   17b18:	push	{fp, lr}
   17b1c:	mov	fp, sp
   17b20:	sub	sp, sp, #24
   17b24:	movw	r0, #12628	; 0x3154
   17b28:	movt	r0, #3
   17b2c:	ldr	r0, [r0]
   17b30:	bl	215bc <__assert_fail@plt+0x104d4>
   17b34:	cmp	r0, #0
   17b38:	beq	17c08 <__assert_fail@plt+0x6b20>
   17b3c:	movw	r0, #12664	; 0x3178
   17b40:	movt	r0, #3
   17b44:	ldrb	r0, [r0]
   17b48:	tst	r0, #1
   17b4c:	beq	17b60 <__assert_fail@plt+0x6a78>
   17b50:	bl	11010 <__errno_location@plt>
   17b54:	ldr	r0, [r0]
   17b58:	cmp	r0, #32
   17b5c:	beq	17c08 <__assert_fail@plt+0x6b20>
   17b60:	movw	r0, #9552	; 0x2550
   17b64:	movt	r0, #2
   17b68:	bl	10fe0 <gettext@plt>
   17b6c:	str	r0, [fp, #-4]
   17b70:	movw	r0, #12660	; 0x3174
   17b74:	movt	r0, #3
   17b78:	ldr	r0, [r0]
   17b7c:	movw	r1, #0
   17b80:	cmp	r0, r1
   17b84:	beq	17bdc <__assert_fail@plt+0x6af4>
   17b88:	bl	11010 <__errno_location@plt>
   17b8c:	ldr	r1, [r0]
   17b90:	movw	r0, #12660	; 0x3174
   17b94:	movt	r0, #3
   17b98:	ldr	r0, [r0]
   17b9c:	str	r1, [fp, #-8]
   17ba0:	bl	1a568 <__assert_fail@plt+0x9480>
   17ba4:	ldr	r1, [fp, #-4]
   17ba8:	movw	r2, #0
   17bac:	str	r0, [sp, #12]
   17bb0:	mov	r0, r2
   17bb4:	ldr	r2, [fp, #-8]
   17bb8:	str	r1, [sp, #8]
   17bbc:	mov	r1, r2
   17bc0:	movw	r2, #8692	; 0x21f4
   17bc4:	movt	r2, #2
   17bc8:	ldr	r3, [sp, #12]
   17bcc:	ldr	ip, [sp, #8]
   17bd0:	str	ip, [sp]
   17bd4:	bl	10f80 <error@plt>
   17bd8:	b	17bf8 <__assert_fail@plt+0x6b10>
   17bdc:	bl	11010 <__errno_location@plt>
   17be0:	ldr	r1, [r0]
   17be4:	ldr	r3, [fp, #-4]
   17be8:	movw	r0, #0
   17bec:	movw	r2, #8696	; 0x21f8
   17bf0:	movt	r2, #2
   17bf4:	bl	10f80 <error@plt>
   17bf8:	movw	r0, #12532	; 0x30f4
   17bfc:	movt	r0, #3
   17c00:	ldr	r0, [r0]
   17c04:	bl	10ed8 <_exit@plt>
   17c08:	movw	r0, #12616	; 0x3148
   17c0c:	movt	r0, #3
   17c10:	ldr	r0, [r0]
   17c14:	bl	215bc <__assert_fail@plt+0x104d4>
   17c18:	cmp	r0, #0
   17c1c:	beq	17c30 <__assert_fail@plt+0x6b48>
   17c20:	movw	r0, #12532	; 0x30f4
   17c24:	movt	r0, #3
   17c28:	ldr	r0, [r0]
   17c2c:	bl	10ed8 <_exit@plt>
   17c30:	mov	sp, fp
   17c34:	pop	{fp, pc}
   17c38:	push	{r4, r5, fp, lr}
   17c3c:	add	fp, sp, #8
   17c40:	sub	sp, sp, #40	; 0x28
   17c44:	ldr	r1, [fp, #12]
   17c48:	ldr	ip, [fp, #8]
   17c4c:	ldr	lr, [fp, #16]
   17c50:	str	r0, [fp, #-12]
   17c54:	str	r3, [sp, #28]
   17c58:	str	r2, [sp, #24]
   17c5c:	str	r1, [sp, #20]
   17c60:	str	ip, [sp, #16]
   17c64:	ldr	r0, [fp, #-12]
   17c68:	ldr	r2, [sp, #24]
   17c6c:	ldr	r3, [sp, #28]
   17c70:	ldr	r1, [sp, #16]
   17c74:	ldr	ip, [sp, #20]
   17c78:	ldr	r4, [fp, #16]
   17c7c:	mov	r5, sp
   17c80:	str	r4, [r5, #8]
   17c84:	str	ip, [r5, #4]
   17c88:	str	r1, [r5]
   17c8c:	str	lr, [sp, #12]
   17c90:	bl	10e9c <posix_fadvise64@plt>
   17c94:	sub	sp, fp, #8
   17c98:	pop	{r4, r5, fp, pc}
   17c9c:	push	{fp, lr}
   17ca0:	mov	fp, sp
   17ca4:	sub	sp, sp, #24
   17ca8:	str	r0, [fp, #-4]
   17cac:	str	r1, [fp, #-8]
   17cb0:	ldr	r0, [fp, #-4]
   17cb4:	movw	r1, #0
   17cb8:	cmp	r0, r1
   17cbc:	beq	17cec <__assert_fail@plt+0x6c04>
   17cc0:	ldr	r0, [fp, #-4]
   17cc4:	bl	11034 <fileno@plt>
   17cc8:	ldr	r1, [fp, #-8]
   17ccc:	mov	r2, sp
   17cd0:	str	r1, [r2, #8]
   17cd4:	mov	r1, #0
   17cd8:	str	r1, [r2, #4]
   17cdc:	str	r1, [r2]
   17ce0:	mov	r2, r1
   17ce4:	mov	r3, r1
   17ce8:	bl	17c38 <__assert_fail@plt+0x6b50>
   17cec:	mov	sp, fp
   17cf0:	pop	{fp, pc}
   17cf4:	push	{fp, lr}
   17cf8:	mov	fp, sp
   17cfc:	sub	sp, sp, #32
   17d00:	str	r0, [fp, #-8]
   17d04:	movw	r0, #0
   17d08:	str	r0, [fp, #-12]
   17d0c:	str	r0, [sp, #12]
   17d10:	ldr	r0, [fp, #-8]
   17d14:	bl	11034 <fileno@plt>
   17d18:	str	r0, [sp, #16]
   17d1c:	ldr	r0, [sp, #16]
   17d20:	cmp	r0, #0
   17d24:	bge	17d38 <__assert_fail@plt+0x6c50>
   17d28:	ldr	r0, [fp, #-8]
   17d2c:	bl	11058 <fclose@plt>
   17d30:	str	r0, [fp, #-4]
   17d34:	b	17dd4 <__assert_fail@plt+0x6cec>
   17d38:	ldr	r0, [fp, #-8]
   17d3c:	bl	10fa4 <__freading@plt>
   17d40:	cmp	r0, #0
   17d44:	beq	17d7c <__assert_fail@plt+0x6c94>
   17d48:	ldr	r0, [fp, #-8]
   17d4c:	bl	11034 <fileno@plt>
   17d50:	mov	r1, sp
   17d54:	mov	r2, #1
   17d58:	str	r2, [r1]
   17d5c:	mov	r1, #0
   17d60:	mov	r2, r1
   17d64:	mov	r3, r1
   17d68:	bl	10f44 <lseek64@plt>
   17d6c:	and	r0, r0, r1
   17d70:	cmn	r0, #1
   17d74:	beq	17d98 <__assert_fail@plt+0x6cb0>
   17d78:	b	17d7c <__assert_fail@plt+0x6c94>
   17d7c:	ldr	r0, [fp, #-8]
   17d80:	bl	17de0 <__assert_fail@plt+0x6cf8>
   17d84:	cmp	r0, #0
   17d88:	beq	17d98 <__assert_fail@plt+0x6cb0>
   17d8c:	bl	11010 <__errno_location@plt>
   17d90:	ldr	r0, [r0]
   17d94:	str	r0, [fp, #-12]
   17d98:	ldr	r0, [fp, #-8]
   17d9c:	bl	11058 <fclose@plt>
   17da0:	str	r0, [sp, #12]
   17da4:	ldr	r0, [fp, #-12]
   17da8:	cmp	r0, #0
   17dac:	beq	17dcc <__assert_fail@plt+0x6ce4>
   17db0:	ldr	r0, [fp, #-12]
   17db4:	str	r0, [sp, #8]
   17db8:	bl	11010 <__errno_location@plt>
   17dbc:	ldr	r1, [sp, #8]
   17dc0:	str	r1, [r0]
   17dc4:	mvn	r0, #0
   17dc8:	str	r0, [sp, #12]
   17dcc:	ldr	r0, [sp, #12]
   17dd0:	str	r0, [fp, #-4]
   17dd4:	ldr	r0, [fp, #-4]
   17dd8:	mov	sp, fp
   17ddc:	pop	{fp, pc}
   17de0:	push	{fp, lr}
   17de4:	mov	fp, sp
   17de8:	sub	sp, sp, #8
   17dec:	str	r0, [sp]
   17df0:	ldr	r0, [sp]
   17df4:	movw	r1, #0
   17df8:	cmp	r0, r1
   17dfc:	beq	17e10 <__assert_fail@plt+0x6d28>
   17e00:	ldr	r0, [sp]
   17e04:	bl	10fa4 <__freading@plt>
   17e08:	cmp	r0, #0
   17e0c:	bne	17e20 <__assert_fail@plt+0x6d38>
   17e10:	ldr	r0, [sp]
   17e14:	bl	10eb4 <fflush@plt>
   17e18:	str	r0, [sp, #4]
   17e1c:	b	17e34 <__assert_fail@plt+0x6d4c>
   17e20:	ldr	r0, [sp]
   17e24:	bl	17e40 <__assert_fail@plt+0x6d58>
   17e28:	ldr	r0, [sp]
   17e2c:	bl	10eb4 <fflush@plt>
   17e30:	str	r0, [sp, #4]
   17e34:	ldr	r0, [sp, #4]
   17e38:	mov	sp, fp
   17e3c:	pop	{fp, pc}
   17e40:	push	{fp, lr}
   17e44:	mov	fp, sp
   17e48:	sub	sp, sp, #8
   17e4c:	str	r0, [sp, #4]
   17e50:	ldr	r0, [sp, #4]
   17e54:	ldr	r0, [r0]
   17e58:	and	r0, r0, #256	; 0x100
   17e5c:	cmp	r0, #0
   17e60:	beq	17e84 <__assert_fail@plt+0x6d9c>
   17e64:	ldr	r0, [sp, #4]
   17e68:	mov	r1, sp
   17e6c:	mov	r2, #1
   17e70:	str	r2, [r1]
   17e74:	mov	r1, #0
   17e78:	mov	r2, r1
   17e7c:	mov	r3, r1
   17e80:	bl	17ecc <__assert_fail@plt+0x6de4>
   17e84:	mov	sp, fp
   17e88:	pop	{fp, pc}
   17e8c:	push	{fp, lr}
   17e90:	mov	fp, sp
   17e94:	sub	sp, sp, #16
   17e98:	str	r0, [fp, #-4]
   17e9c:	bl	11010 <__errno_location@plt>
   17ea0:	ldr	r0, [r0]
   17ea4:	str	r0, [sp, #8]
   17ea8:	ldr	r0, [fp, #-4]
   17eac:	bl	10ecc <free@plt>
   17eb0:	ldr	r0, [sp, #8]
   17eb4:	str	r0, [sp, #4]
   17eb8:	bl	11010 <__errno_location@plt>
   17ebc:	ldr	r1, [sp, #4]
   17ec0:	str	r1, [r0]
   17ec4:	mov	sp, fp
   17ec8:	pop	{fp, pc}
   17ecc:	push	{fp, lr}
   17ed0:	mov	fp, sp
   17ed4:	sub	sp, sp, #32
   17ed8:	ldr	r1, [fp, #8]
   17edc:	str	r0, [fp, #-8]
   17ee0:	str	r3, [sp, #20]
   17ee4:	str	r2, [sp, #16]
   17ee8:	ldr	r0, [fp, #-8]
   17eec:	ldr	r0, [r0, #8]
   17ef0:	ldr	r2, [fp, #-8]
   17ef4:	ldr	r2, [r2, #4]
   17ef8:	cmp	r0, r2
   17efc:	bne	17fa8 <__assert_fail@plt+0x6ec0>
   17f00:	ldr	r0, [fp, #-8]
   17f04:	ldr	r0, [r0, #20]
   17f08:	ldr	r1, [fp, #-8]
   17f0c:	ldr	r1, [r1, #16]
   17f10:	cmp	r0, r1
   17f14:	bne	17fa8 <__assert_fail@plt+0x6ec0>
   17f18:	ldr	r0, [fp, #-8]
   17f1c:	ldr	r0, [r0, #36]	; 0x24
   17f20:	movw	r1, #0
   17f24:	cmp	r0, r1
   17f28:	bne	17fa8 <__assert_fail@plt+0x6ec0>
   17f2c:	ldr	r0, [fp, #-8]
   17f30:	bl	11034 <fileno@plt>
   17f34:	ldr	r2, [sp, #16]
   17f38:	ldr	r3, [sp, #20]
   17f3c:	ldr	r1, [fp, #8]
   17f40:	mov	ip, sp
   17f44:	str	r1, [ip]
   17f48:	bl	10f44 <lseek64@plt>
   17f4c:	str	r1, [sp, #12]
   17f50:	str	r0, [sp, #8]
   17f54:	ldr	r0, [sp, #8]
   17f58:	ldr	r1, [sp, #12]
   17f5c:	and	r0, r0, r1
   17f60:	cmn	r0, #1
   17f64:	bne	17f78 <__assert_fail@plt+0x6e90>
   17f68:	b	17f6c <__assert_fail@plt+0x6e84>
   17f6c:	mvn	r0, #0
   17f70:	str	r0, [fp, #-4]
   17f74:	b	17fc8 <__assert_fail@plt+0x6ee0>
   17f78:	ldr	r0, [fp, #-8]
   17f7c:	ldr	r1, [r0]
   17f80:	bic	r1, r1, #16
   17f84:	str	r1, [r0]
   17f88:	ldr	r0, [sp, #8]
   17f8c:	ldr	r1, [sp, #12]
   17f90:	ldr	r2, [fp, #-8]
   17f94:	str	r1, [r2, #84]	; 0x54
   17f98:	str	r0, [r2, #80]	; 0x50
   17f9c:	movw	r0, #0
   17fa0:	str	r0, [fp, #-4]
   17fa4:	b	17fc8 <__assert_fail@plt+0x6ee0>
   17fa8:	ldr	r0, [fp, #-8]
   17fac:	ldr	r2, [sp, #16]
   17fb0:	ldr	r3, [sp, #20]
   17fb4:	ldr	r1, [fp, #8]
   17fb8:	mov	ip, sp
   17fbc:	str	r1, [ip]
   17fc0:	bl	11064 <fseeko64@plt>
   17fc4:	str	r0, [fp, #-4]
   17fc8:	ldr	r0, [fp, #-4]
   17fcc:	mov	sp, fp
   17fd0:	pop	{fp, pc}
   17fd4:	push	{fp, lr}
   17fd8:	mov	fp, sp
   17fdc:	bl	11010 <__errno_location@plt>
   17fe0:	movw	r1, #12
   17fe4:	str	r1, [r0]
   17fe8:	movw	r0, #0
   17fec:	pop	{fp, pc}
   17ff0:	push	{fp, lr}
   17ff4:	mov	fp, sp
   17ff8:	sub	sp, sp, #8
   17ffc:	str	r0, [sp, #4]
   18000:	ldr	r0, [sp, #4]
   18004:	cmn	r0, #1
   18008:	bhi	1801c <__assert_fail@plt+0x6f34>
   1800c:	ldr	r0, [sp, #4]
   18010:	bl	213b0 <__assert_fail@plt+0x102c8>
   18014:	str	r0, [sp]
   18018:	b	18024 <__assert_fail@plt+0x6f3c>
   1801c:	bl	17fd4 <__assert_fail@plt+0x6eec>
   18020:	str	r0, [sp]
   18024:	ldr	r0, [sp]
   18028:	mov	sp, fp
   1802c:	pop	{fp, pc}
   18030:	push	{fp, lr}
   18034:	mov	fp, sp
   18038:	sub	sp, sp, #16
   1803c:	str	r0, [fp, #-4]
   18040:	str	r1, [sp, #8]
   18044:	ldr	r0, [sp, #8]
   18048:	cmn	r0, #1
   1804c:	bhi	18084 <__assert_fail@plt+0x6f9c>
   18050:	ldr	r0, [fp, #-4]
   18054:	ldr	r1, [sp, #8]
   18058:	ldr	r2, [sp, #8]
   1805c:	cmp	r2, #0
   18060:	movw	r2, #0
   18064:	movne	r2, #1
   18068:	mvn	r3, #0
   1806c:	eor	r2, r2, r3
   18070:	and	r2, r2, #1
   18074:	orr	r1, r1, r2
   18078:	bl	21420 <__assert_fail@plt+0x10338>
   1807c:	str	r0, [sp, #4]
   18080:	b	1808c <__assert_fail@plt+0x6fa4>
   18084:	bl	17fd4 <__assert_fail@plt+0x6eec>
   18088:	str	r0, [sp, #4]
   1808c:	ldr	r0, [sp, #4]
   18090:	mov	sp, fp
   18094:	pop	{fp, pc}
   18098:	push	{fp, lr}
   1809c:	mov	fp, sp
   180a0:	sub	sp, sp, #16
   180a4:	str	r0, [sp, #8]
   180a8:	str	r1, [sp, #4]
   180ac:	ldr	r0, [sp, #8]
   180b0:	mvn	r1, #0
   180b4:	cmp	r1, r0
   180b8:	bcs	180dc <__assert_fail@plt+0x6ff4>
   180bc:	ldr	r0, [sp, #4]
   180c0:	cmp	r0, #0
   180c4:	beq	180d4 <__assert_fail@plt+0x6fec>
   180c8:	bl	17fd4 <__assert_fail@plt+0x6eec>
   180cc:	str	r0, [fp, #-4]
   180d0:	b	1811c <__assert_fail@plt+0x7034>
   180d4:	movw	r0, #0
   180d8:	str	r0, [sp, #8]
   180dc:	ldr	r0, [sp, #4]
   180e0:	mvn	r1, #0
   180e4:	cmp	r1, r0
   180e8:	bcs	1810c <__assert_fail@plt+0x7024>
   180ec:	ldr	r0, [sp, #8]
   180f0:	cmp	r0, #0
   180f4:	beq	18104 <__assert_fail@plt+0x701c>
   180f8:	bl	17fd4 <__assert_fail@plt+0x6eec>
   180fc:	str	r0, [fp, #-4]
   18100:	b	1811c <__assert_fail@plt+0x7034>
   18104:	movw	r0, #0
   18108:	str	r0, [sp, #4]
   1810c:	ldr	r0, [sp, #8]
   18110:	ldr	r1, [sp, #4]
   18114:	bl	21314 <__assert_fail@plt+0x1022c>
   18118:	str	r0, [fp, #-4]
   1811c:	ldr	r0, [fp, #-4]
   18120:	mov	sp, fp
   18124:	pop	{fp, pc}
   18128:	push	{fp, lr}
   1812c:	mov	fp, sp
   18130:	sub	sp, sp, #16
   18134:	str	r0, [fp, #-4]
   18138:	str	r1, [sp, #8]
   1813c:	str	r2, [sp, #4]
   18140:	ldr	r0, [sp, #8]
   18144:	cmp	r0, #0
   18148:	beq	18158 <__assert_fail@plt+0x7070>
   1814c:	ldr	r0, [sp, #4]
   18150:	cmp	r0, #0
   18154:	bne	18164 <__assert_fail@plt+0x707c>
   18158:	movw	r0, #1
   1815c:	str	r0, [sp, #4]
   18160:	str	r0, [sp, #8]
   18164:	ldr	r0, [sp, #8]
   18168:	cmn	r0, #1
   1816c:	bhi	18194 <__assert_fail@plt+0x70ac>
   18170:	ldr	r0, [sp, #4]
   18174:	cmn	r0, #1
   18178:	bhi	18194 <__assert_fail@plt+0x70ac>
   1817c:	ldr	r0, [fp, #-4]
   18180:	ldr	r1, [sp, #8]
   18184:	ldr	r2, [sp, #4]
   18188:	bl	1a93c <__assert_fail@plt+0x9854>
   1818c:	str	r0, [sp]
   18190:	b	1819c <__assert_fail@plt+0x70b4>
   18194:	bl	17fd4 <__assert_fail@plt+0x6eec>
   18198:	str	r0, [sp]
   1819c:	ldr	r0, [sp]
   181a0:	mov	sp, fp
   181a4:	pop	{fp, pc}
   181a8:	push	{fp, lr}
   181ac:	mov	fp, sp
   181b0:	sub	sp, sp, #24
   181b4:	str	r0, [fp, #-4]
   181b8:	ldr	r0, [fp, #-4]
   181bc:	movw	r1, #0
   181c0:	cmp	r0, r1
   181c4:	bne	181e8 <__assert_fail@plt+0x7100>
   181c8:	movw	r0, #12616	; 0x3148
   181cc:	movt	r0, #3
   181d0:	ldr	r1, [r0]
   181d4:	movw	r0, #10783	; 0x2a1f
   181d8:	movt	r0, #2
   181dc:	bl	110b8 <fputs@plt>
   181e0:	str	r0, [sp, #8]
   181e4:	bl	110d0 <abort@plt>
   181e8:	ldr	r0, [fp, #-4]
   181ec:	movw	r1, #47	; 0x2f
   181f0:	bl	1107c <strrchr@plt>
   181f4:	str	r0, [fp, #-8]
   181f8:	ldr	r0, [fp, #-8]
   181fc:	movw	r1, #0
   18200:	cmp	r0, r1
   18204:	beq	18218 <__assert_fail@plt+0x7130>
   18208:	ldr	r0, [fp, #-8]
   1820c:	add	r0, r0, #1
   18210:	str	r0, [sp, #4]
   18214:	b	18220 <__assert_fail@plt+0x7138>
   18218:	ldr	r0, [fp, #-4]
   1821c:	str	r0, [sp, #4]
   18220:	ldr	r0, [sp, #4]
   18224:	str	r0, [sp, #12]
   18228:	ldr	r0, [sp, #12]
   1822c:	ldr	r1, [fp, #-4]
   18230:	sub	r0, r0, r1
   18234:	cmp	r0, #7
   18238:	blt	182a4 <__assert_fail@plt+0x71bc>
   1823c:	ldr	r0, [sp, #12]
   18240:	mvn	r1, #6
   18244:	add	r0, r0, r1
   18248:	movw	r1, #10839	; 0x2a57
   1824c:	movt	r1, #2
   18250:	movw	r2, #7
   18254:	bl	110c4 <strncmp@plt>
   18258:	cmp	r0, #0
   1825c:	bne	182a4 <__assert_fail@plt+0x71bc>
   18260:	ldr	r0, [sp, #12]
   18264:	str	r0, [fp, #-4]
   18268:	ldr	r0, [sp, #12]
   1826c:	movw	r1, #10847	; 0x2a5f
   18270:	movt	r1, #2
   18274:	movw	r2, #3
   18278:	bl	110c4 <strncmp@plt>
   1827c:	cmp	r0, #0
   18280:	bne	182a0 <__assert_fail@plt+0x71b8>
   18284:	ldr	r0, [sp, #12]
   18288:	add	r0, r0, #3
   1828c:	str	r0, [fp, #-4]
   18290:	ldr	r0, [fp, #-4]
   18294:	movw	r1, #12600	; 0x3138
   18298:	movt	r1, #3
   1829c:	str	r0, [r1]
   182a0:	b	182a4 <__assert_fail@plt+0x71bc>
   182a4:	ldr	r0, [fp, #-4]
   182a8:	movw	r1, #12668	; 0x317c
   182ac:	movt	r1, #3
   182b0:	str	r0, [r1]
   182b4:	ldr	r0, [fp, #-4]
   182b8:	movw	r1, #12604	; 0x313c
   182bc:	movt	r1, #3
   182c0:	str	r0, [r1]
   182c4:	mov	sp, fp
   182c8:	pop	{fp, pc}
   182cc:	push	{fp, lr}
   182d0:	mov	fp, sp
   182d4:	sub	sp, sp, #24
   182d8:	str	r0, [fp, #-4]
   182dc:	bl	11010 <__errno_location@plt>
   182e0:	ldr	r0, [r0]
   182e4:	str	r0, [fp, #-8]
   182e8:	ldr	r0, [fp, #-4]
   182ec:	movw	r1, #0
   182f0:	cmp	r0, r1
   182f4:	beq	18304 <__assert_fail@plt+0x721c>
   182f8:	ldr	r0, [fp, #-4]
   182fc:	str	r0, [sp, #8]
   18300:	b	18314 <__assert_fail@plt+0x722c>
   18304:	movw	r0, #12672	; 0x3180
   18308:	movt	r0, #3
   1830c:	str	r0, [sp, #8]
   18310:	b	18314 <__assert_fail@plt+0x722c>
   18314:	ldr	r0, [sp, #8]
   18318:	movw	r1, #48	; 0x30
   1831c:	bl	1f180 <__assert_fail@plt+0xe098>
   18320:	str	r0, [sp, #12]
   18324:	ldr	r0, [fp, #-8]
   18328:	str	r0, [sp, #4]
   1832c:	bl	11010 <__errno_location@plt>
   18330:	ldr	r1, [sp, #4]
   18334:	str	r1, [r0]
   18338:	ldr	r0, [sp, #12]
   1833c:	mov	sp, fp
   18340:	pop	{fp, pc}
   18344:	sub	sp, sp, #8
   18348:	str	r0, [sp, #4]
   1834c:	ldr	r0, [sp, #4]
   18350:	movw	r1, #0
   18354:	cmp	r0, r1
   18358:	beq	18368 <__assert_fail@plt+0x7280>
   1835c:	ldr	r0, [sp, #4]
   18360:	str	r0, [sp]
   18364:	b	18378 <__assert_fail@plt+0x7290>
   18368:	movw	r0, #12672	; 0x3180
   1836c:	movt	r0, #3
   18370:	str	r0, [sp]
   18374:	b	18378 <__assert_fail@plt+0x7290>
   18378:	ldr	r0, [sp]
   1837c:	ldr	r0, [r0]
   18380:	add	sp, sp, #8
   18384:	bx	lr
   18388:	sub	sp, sp, #16
   1838c:	str	r0, [sp, #12]
   18390:	str	r1, [sp, #8]
   18394:	ldr	r0, [sp, #8]
   18398:	ldr	r1, [sp, #12]
   1839c:	movw	r2, #0
   183a0:	cmp	r1, r2
   183a4:	str	r0, [sp, #4]
   183a8:	beq	183b8 <__assert_fail@plt+0x72d0>
   183ac:	ldr	r0, [sp, #12]
   183b0:	str	r0, [sp]
   183b4:	b	183c8 <__assert_fail@plt+0x72e0>
   183b8:	movw	r0, #12672	; 0x3180
   183bc:	movt	r0, #3
   183c0:	str	r0, [sp]
   183c4:	b	183c8 <__assert_fail@plt+0x72e0>
   183c8:	ldr	r0, [sp]
   183cc:	ldr	r1, [sp, #4]
   183d0:	str	r1, [r0]
   183d4:	add	sp, sp, #16
   183d8:	bx	lr
   183dc:	sub	sp, sp, #32
   183e0:	str	r0, [sp, #28]
   183e4:	strb	r1, [sp, #27]
   183e8:	str	r2, [sp, #20]
   183ec:	ldrb	r0, [sp, #27]
   183f0:	strb	r0, [sp, #19]
   183f4:	ldr	r0, [sp, #28]
   183f8:	movw	r1, #0
   183fc:	cmp	r0, r1
   18400:	beq	18410 <__assert_fail@plt+0x7328>
   18404:	ldr	r0, [sp, #28]
   18408:	str	r0, [sp]
   1840c:	b	18420 <__assert_fail@plt+0x7338>
   18410:	movw	r0, #12672	; 0x3180
   18414:	movt	r0, #3
   18418:	str	r0, [sp]
   1841c:	b	18420 <__assert_fail@plt+0x7338>
   18420:	ldr	r0, [sp]
   18424:	add	r0, r0, #8
   18428:	ldrb	r1, [sp, #19]
   1842c:	lsr	r1, r1, #5
   18430:	add	r0, r0, r1, lsl #2
   18434:	str	r0, [sp, #12]
   18438:	ldrb	r0, [sp, #19]
   1843c:	and	r0, r0, #31
   18440:	str	r0, [sp, #8]
   18444:	ldr	r0, [sp, #12]
   18448:	ldr	r0, [r0]
   1844c:	ldr	r1, [sp, #8]
   18450:	lsr	r0, r0, r1
   18454:	and	r0, r0, #1
   18458:	str	r0, [sp, #4]
   1845c:	ldr	r0, [sp, #20]
   18460:	and	r0, r0, #1
   18464:	ldr	r1, [sp, #4]
   18468:	eor	r0, r0, r1
   1846c:	ldr	r1, [sp, #8]
   18470:	lsl	r0, r0, r1
   18474:	ldr	r1, [sp, #12]
   18478:	ldr	r2, [r1]
   1847c:	eor	r0, r2, r0
   18480:	str	r0, [r1]
   18484:	ldr	r0, [sp, #4]
   18488:	add	sp, sp, #32
   1848c:	bx	lr
   18490:	sub	sp, sp, #12
   18494:	str	r0, [sp, #8]
   18498:	str	r1, [sp, #4]
   1849c:	ldr	r0, [sp, #8]
   184a0:	movw	r1, #0
   184a4:	cmp	r0, r1
   184a8:	bne	184b8 <__assert_fail@plt+0x73d0>
   184ac:	movw	r0, #12672	; 0x3180
   184b0:	movt	r0, #3
   184b4:	str	r0, [sp, #8]
   184b8:	ldr	r0, [sp, #8]
   184bc:	ldr	r0, [r0, #4]
   184c0:	str	r0, [sp]
   184c4:	ldr	r0, [sp, #4]
   184c8:	ldr	r1, [sp, #8]
   184cc:	str	r0, [r1, #4]
   184d0:	ldr	r0, [sp]
   184d4:	add	sp, sp, #12
   184d8:	bx	lr
   184dc:	push	{fp, lr}
   184e0:	mov	fp, sp
   184e4:	sub	sp, sp, #16
   184e8:	str	r0, [fp, #-4]
   184ec:	str	r1, [sp, #8]
   184f0:	str	r2, [sp, #4]
   184f4:	ldr	r0, [fp, #-4]
   184f8:	movw	r1, #0
   184fc:	cmp	r0, r1
   18500:	bne	18510 <__assert_fail@plt+0x7428>
   18504:	movw	r0, #12672	; 0x3180
   18508:	movt	r0, #3
   1850c:	str	r0, [fp, #-4]
   18510:	ldr	r0, [fp, #-4]
   18514:	movw	r1, #10
   18518:	str	r1, [r0]
   1851c:	ldr	r0, [sp, #8]
   18520:	movw	r1, #0
   18524:	cmp	r0, r1
   18528:	beq	1853c <__assert_fail@plt+0x7454>
   1852c:	ldr	r0, [sp, #4]
   18530:	movw	r1, #0
   18534:	cmp	r0, r1
   18538:	bne	18540 <__assert_fail@plt+0x7458>
   1853c:	bl	110d0 <abort@plt>
   18540:	ldr	r0, [sp, #8]
   18544:	ldr	r1, [fp, #-4]
   18548:	str	r0, [r1, #40]	; 0x28
   1854c:	ldr	r0, [sp, #4]
   18550:	ldr	r1, [fp, #-4]
   18554:	str	r0, [r1, #44]	; 0x2c
   18558:	mov	sp, fp
   1855c:	pop	{fp, pc}
   18560:	push	{r4, r5, r6, sl, fp, lr}
   18564:	add	fp, sp, #16
   18568:	sub	sp, sp, #56	; 0x38
   1856c:	ldr	ip, [fp, #8]
   18570:	str	r0, [fp, #-20]	; 0xffffffec
   18574:	str	r1, [fp, #-24]	; 0xffffffe8
   18578:	str	r2, [fp, #-28]	; 0xffffffe4
   1857c:	str	r3, [fp, #-32]	; 0xffffffe0
   18580:	ldr	r0, [fp, #8]
   18584:	movw	r1, #0
   18588:	cmp	r0, r1
   1858c:	beq	1859c <__assert_fail@plt+0x74b4>
   18590:	ldr	r0, [fp, #8]
   18594:	str	r0, [sp, #24]
   18598:	b	185ac <__assert_fail@plt+0x74c4>
   1859c:	movw	r0, #12672	; 0x3180
   185a0:	movt	r0, #3
   185a4:	str	r0, [sp, #24]
   185a8:	b	185ac <__assert_fail@plt+0x74c4>
   185ac:	ldr	r0, [sp, #24]
   185b0:	str	r0, [sp, #36]	; 0x24
   185b4:	bl	11010 <__errno_location@plt>
   185b8:	ldr	r0, [r0]
   185bc:	str	r0, [sp, #32]
   185c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   185c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   185cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185d0:	ldr	ip, [sp, #36]	; 0x24
   185d4:	ldr	ip, [ip]
   185d8:	ldr	lr, [sp, #36]	; 0x24
   185dc:	ldr	lr, [lr, #4]
   185e0:	ldr	r4, [sp, #36]	; 0x24
   185e4:	add	r4, r4, #8
   185e8:	ldr	r5, [sp, #36]	; 0x24
   185ec:	ldr	r5, [r5, #40]	; 0x28
   185f0:	ldr	r6, [sp, #36]	; 0x24
   185f4:	ldr	r6, [r6, #44]	; 0x2c
   185f8:	str	ip, [sp]
   185fc:	str	lr, [sp, #4]
   18600:	str	r4, [sp, #8]
   18604:	str	r5, [sp, #12]
   18608:	str	r6, [sp, #16]
   1860c:	bl	18634 <__assert_fail@plt+0x754c>
   18610:	str	r0, [sp, #28]
   18614:	ldr	r0, [sp, #32]
   18618:	str	r0, [sp, #20]
   1861c:	bl	11010 <__errno_location@plt>
   18620:	ldr	r1, [sp, #20]
   18624:	str	r1, [r0]
   18628:	ldr	r0, [sp, #28]
   1862c:	sub	sp, fp, #16
   18630:	pop	{r4, r5, r6, sl, fp, pc}
   18634:	push	{r4, r5, r6, sl, fp, lr}
   18638:	add	fp, sp, #16
   1863c:	sub	sp, sp, #160	; 0xa0
   18640:	ldr	ip, [fp, #24]
   18644:	ldr	lr, [fp, #20]
   18648:	ldr	r4, [fp, #16]
   1864c:	ldr	r5, [fp, #12]
   18650:	ldr	r6, [fp, #8]
   18654:	str	r0, [fp, #-24]	; 0xffffffe8
   18658:	str	r1, [fp, #-28]	; 0xffffffe4
   1865c:	str	r2, [fp, #-32]	; 0xffffffe0
   18660:	str	r3, [fp, #-36]	; 0xffffffdc
   18664:	movw	r0, #0
   18668:	str	r0, [fp, #-44]	; 0xffffffd4
   1866c:	str	r0, [fp, #-48]	; 0xffffffd0
   18670:	str	r0, [fp, #-52]	; 0xffffffcc
   18674:	str	r0, [fp, #-56]	; 0xffffffc8
   18678:	movw	r0, #0
   1867c:	strb	r0, [fp, #-57]	; 0xffffffc7
   18680:	str	ip, [sp, #72]	; 0x48
   18684:	str	lr, [sp, #68]	; 0x44
   18688:	str	r4, [sp, #64]	; 0x40
   1868c:	str	r5, [sp, #60]	; 0x3c
   18690:	str	r6, [sp, #56]	; 0x38
   18694:	bl	10f50 <__ctype_get_mb_cur_max@plt>
   18698:	cmp	r0, #1
   1869c:	movw	r0, #0
   186a0:	moveq	r0, #1
   186a4:	and	r0, r0, #1
   186a8:	strb	r0, [fp, #-58]	; 0xffffffc6
   186ac:	ldr	r0, [fp, #12]
   186b0:	and	r0, r0, #2
   186b4:	cmp	r0, #0
   186b8:	movw	r0, #0
   186bc:	movne	r0, #1
   186c0:	and	r0, r0, #1
   186c4:	strb	r0, [fp, #-59]	; 0xffffffc5
   186c8:	movw	r0, #0
   186cc:	strb	r0, [fp, #-60]	; 0xffffffc4
   186d0:	strb	r0, [fp, #-61]	; 0xffffffc3
   186d4:	movw	r0, #1
   186d8:	strb	r0, [fp, #-62]	; 0xffffffc2
   186dc:	ldr	r0, [fp, #8]
   186e0:	cmp	r0, #10
   186e4:	str	r0, [sp, #52]	; 0x34
   186e8:	bhi	18910 <__assert_fail@plt+0x7828>
   186ec:	add	r0, pc, #8
   186f0:	ldr	r1, [sp, #52]	; 0x34
   186f4:	ldr	r0, [r0, r1, lsl #2]
   186f8:	mov	pc, r0
   186fc:	andeq	r8, r1, r4, lsl #18
   18700:	andeq	r8, r1, r0, lsl #17
   18704:	andeq	r8, r1, r0, lsr #17
   18708:	andeq	r8, r1, r8, ror r8
   1870c:	andeq	r8, r1, r8, lsl #17
   18710:	andeq	r8, r1, r8, lsr r7
   18714:	andeq	r8, r1, r8, lsr #14
   18718:	muleq	r1, ip, r7
   1871c:			; <UNDEFINED> instruction: 0x000187b0
   18720:			; <UNDEFINED> instruction: 0x000187b0
   18724:			; <UNDEFINED> instruction: 0x000187b0
   18728:	movw	r0, #5
   1872c:	str	r0, [fp, #8]
   18730:	movw	r0, #1
   18734:	strb	r0, [fp, #-59]	; 0xffffffc5
   18738:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1873c:	tst	r0, #1
   18740:	bne	1877c <__assert_fail@plt+0x7694>
   18744:	b	18748 <__assert_fail@plt+0x7660>
   18748:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1874c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18750:	cmp	r0, r1
   18754:	bcs	1876c <__assert_fail@plt+0x7684>
   18758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1875c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18760:	add	r0, r0, r1
   18764:	movw	r1, #34	; 0x22
   18768:	strb	r1, [r0]
   1876c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18770:	add	r0, r0, #1
   18774:	str	r0, [fp, #-44]	; 0xffffffd4
   18778:	b	1877c <__assert_fail@plt+0x7694>
   1877c:	movw	r0, #1
   18780:	strb	r0, [fp, #-57]	; 0xffffffc7
   18784:	movw	r0, #10927	; 0x2aaf
   18788:	movt	r0, #2
   1878c:	str	r0, [fp, #-52]	; 0xffffffcc
   18790:	movw	r0, #1
   18794:	str	r0, [fp, #-56]	; 0xffffffc8
   18798:	b	18914 <__assert_fail@plt+0x782c>
   1879c:	movw	r0, #1
   187a0:	strb	r0, [fp, #-57]	; 0xffffffc7
   187a4:	movw	r0, #0
   187a8:	strb	r0, [fp, #-59]	; 0xffffffc5
   187ac:	b	18914 <__assert_fail@plt+0x782c>
   187b0:	ldr	r0, [fp, #8]
   187b4:	cmp	r0, #10
   187b8:	beq	187e4 <__assert_fail@plt+0x76fc>
   187bc:	ldr	r1, [fp, #8]
   187c0:	movw	r0, #10929	; 0x2ab1
   187c4:	movt	r0, #2
   187c8:	bl	1a828 <__assert_fail@plt+0x9740>
   187cc:	str	r0, [fp, #20]
   187d0:	ldr	r1, [fp, #8]
   187d4:	movw	r0, #10931	; 0x2ab3
   187d8:	movt	r0, #2
   187dc:	bl	1a828 <__assert_fail@plt+0x9740>
   187e0:	str	r0, [fp, #24]
   187e4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   187e8:	tst	r0, #1
   187ec:	bne	18858 <__assert_fail@plt+0x7770>
   187f0:	ldr	r0, [fp, #20]
   187f4:	str	r0, [fp, #-52]	; 0xffffffcc
   187f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   187fc:	ldrsb	r0, [r0]
   18800:	cmp	r0, #0
   18804:	beq	18854 <__assert_fail@plt+0x776c>
   18808:	b	1880c <__assert_fail@plt+0x7724>
   1880c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18810:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18814:	cmp	r0, r1
   18818:	bcs	18834 <__assert_fail@plt+0x774c>
   1881c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18820:	ldrb	r0, [r0]
   18824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18828:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1882c:	add	r1, r1, r2
   18830:	strb	r0, [r1]
   18834:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18838:	add	r0, r0, #1
   1883c:	str	r0, [fp, #-44]	; 0xffffffd4
   18840:	b	18844 <__assert_fail@plt+0x775c>
   18844:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18848:	add	r0, r0, #1
   1884c:	str	r0, [fp, #-52]	; 0xffffffcc
   18850:	b	187f8 <__assert_fail@plt+0x7710>
   18854:	b	18858 <__assert_fail@plt+0x7770>
   18858:	movw	r0, #1
   1885c:	strb	r0, [fp, #-57]	; 0xffffffc7
   18860:	ldr	r0, [fp, #24]
   18864:	str	r0, [fp, #-52]	; 0xffffffcc
   18868:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1886c:	bl	10fec <strlen@plt>
   18870:	str	r0, [fp, #-56]	; 0xffffffc8
   18874:	b	18914 <__assert_fail@plt+0x782c>
   18878:	movw	r0, #1
   1887c:	strb	r0, [fp, #-57]	; 0xffffffc7
   18880:	movw	r0, #1
   18884:	strb	r0, [fp, #-59]	; 0xffffffc5
   18888:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1888c:	tst	r0, #1
   18890:	bne	1889c <__assert_fail@plt+0x77b4>
   18894:	movw	r0, #1
   18898:	strb	r0, [fp, #-57]	; 0xffffffc7
   1889c:	b	188a0 <__assert_fail@plt+0x77b8>
   188a0:	movw	r0, #2
   188a4:	str	r0, [fp, #8]
   188a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   188ac:	tst	r0, #1
   188b0:	bne	188ec <__assert_fail@plt+0x7804>
   188b4:	b	188b8 <__assert_fail@plt+0x77d0>
   188b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   188c0:	cmp	r0, r1
   188c4:	bcs	188dc <__assert_fail@plt+0x77f4>
   188c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   188d0:	add	r0, r0, r1
   188d4:	movw	r1, #39	; 0x27
   188d8:	strb	r1, [r0]
   188dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188e0:	add	r0, r0, #1
   188e4:	str	r0, [fp, #-44]	; 0xffffffd4
   188e8:	b	188ec <__assert_fail@plt+0x7804>
   188ec:	movw	r0, #10931	; 0x2ab3
   188f0:	movt	r0, #2
   188f4:	str	r0, [fp, #-52]	; 0xffffffcc
   188f8:	movw	r0, #1
   188fc:	str	r0, [fp, #-56]	; 0xffffffc8
   18900:	b	18914 <__assert_fail@plt+0x782c>
   18904:	movw	r0, #0
   18908:	strb	r0, [fp, #-59]	; 0xffffffc5
   1890c:	b	18914 <__assert_fail@plt+0x782c>
   18910:	bl	110d0 <abort@plt>
   18914:	movw	r0, #0
   18918:	str	r0, [fp, #-40]	; 0xffffffd8
   1891c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18920:	cmn	r0, #1
   18924:	bne	18950 <__assert_fail@plt+0x7868>
   18928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1892c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18930:	add	r0, r0, r1
   18934:	ldrb	r0, [r0]
   18938:	cmp	r0, #0
   1893c:	movw	r0, #0
   18940:	moveq	r0, #1
   18944:	and	r0, r0, #1
   18948:	str	r0, [sp, #48]	; 0x30
   1894c:	b	1896c <__assert_fail@plt+0x7884>
   18950:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18954:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18958:	cmp	r0, r1
   1895c:	movw	r0, #0
   18960:	moveq	r0, #1
   18964:	and	r0, r0, #1
   18968:	str	r0, [sp, #48]	; 0x30
   1896c:	ldr	r0, [sp, #48]	; 0x30
   18970:	cmp	r0, #0
   18974:	movw	r0, #0
   18978:	movne	r0, #1
   1897c:	mvn	r1, #0
   18980:	eor	r0, r0, r1
   18984:	tst	r0, #1
   18988:	beq	19b74 <__assert_fail@plt+0x8a8c>
   1898c:	movw	r0, #0
   18990:	strb	r0, [fp, #-65]	; 0xffffffbf
   18994:	strb	r0, [fp, #-66]	; 0xffffffbe
   18998:	strb	r0, [fp, #-67]	; 0xffffffbd
   1899c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   189a0:	tst	r0, #1
   189a4:	beq	18a50 <__assert_fail@plt+0x7968>
   189a8:	ldr	r0, [fp, #8]
   189ac:	cmp	r0, #2
   189b0:	beq	18a50 <__assert_fail@plt+0x7968>
   189b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   189b8:	cmp	r0, #0
   189bc:	beq	18a50 <__assert_fail@plt+0x7968>
   189c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   189c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   189c8:	add	r0, r0, r1
   189cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   189d0:	cmn	r1, #1
   189d4:	str	r0, [sp, #44]	; 0x2c
   189d8:	bne	18a00 <__assert_fail@plt+0x7918>
   189dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   189e0:	movw	r1, #1
   189e4:	cmp	r1, r0
   189e8:	bcs	18a00 <__assert_fail@plt+0x7918>
   189ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189f0:	bl	10fec <strlen@plt>
   189f4:	str	r0, [fp, #-36]	; 0xffffffdc
   189f8:	str	r0, [sp, #40]	; 0x28
   189fc:	b	18a08 <__assert_fail@plt+0x7920>
   18a00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a04:	str	r0, [sp, #40]	; 0x28
   18a08:	ldr	r0, [sp, #40]	; 0x28
   18a0c:	ldr	r1, [sp, #44]	; 0x2c
   18a10:	cmp	r1, r0
   18a14:	bhi	18a50 <__assert_fail@plt+0x7968>
   18a18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a20:	add	r0, r0, r1
   18a24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18a2c:	bl	10f08 <memcmp@plt>
   18a30:	cmp	r0, #0
   18a34:	bne	18a50 <__assert_fail@plt+0x7968>
   18a38:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18a3c:	tst	r0, #1
   18a40:	beq	18a48 <__assert_fail@plt+0x7960>
   18a44:	b	19cf4 <__assert_fail@plt+0x8c0c>
   18a48:	movw	r0, #1
   18a4c:	strb	r0, [fp, #-65]	; 0xffffffbf
   18a50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a58:	ldrb	r0, [r0, r1]
   18a5c:	strb	r0, [fp, #-63]	; 0xffffffc1
   18a60:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18a64:	mov	r1, r0
   18a68:	cmp	r0, #126	; 0x7e
   18a6c:	str	r1, [sp, #36]	; 0x24
   18a70:	bhi	192e0 <__assert_fail@plt+0x81f8>
   18a74:	add	r0, pc, #8
   18a78:	ldr	r1, [sp, #36]	; 0x24
   18a7c:	ldr	r0, [r0, r1, lsl #2]
   18a80:	mov	pc, r0
   18a84:	andeq	r8, r1, r0, lsl #25
   18a88:	andeq	r9, r1, r0, ror #5
   18a8c:	andeq	r9, r1, r0, ror #5
   18a90:	andeq	r9, r1, r0, ror #5
   18a94:	andeq	r9, r1, r0, ror #5
   18a98:	andeq	r9, r1, r0, ror #5
   18a9c:	andeq	r9, r1, r0, ror #5
   18aa0:	andeq	r9, r1, r8, lsl #1
   18aa4:	muleq	r1, r4, r0
   18aa8:	andeq	r9, r1, r4, asr #1
   18aac:	andeq	r9, r1, ip, lsr #1
   18ab0:	ldrdeq	r9, [r1], -r0
   18ab4:	andeq	r9, r1, r0, lsr #1
   18ab8:	strheq	r9, [r1], -r8
   18abc:	andeq	r9, r1, r0, ror #5
   18ac0:	andeq	r9, r1, r0, ror #5
   18ac4:	andeq	r9, r1, r0, ror #5
   18ac8:	andeq	r9, r1, r0, ror #5
   18acc:	andeq	r9, r1, r0, ror #5
   18ad0:	andeq	r9, r1, r0, ror #5
   18ad4:	andeq	r9, r1, r0, ror #5
   18ad8:	andeq	r9, r1, r0, ror #5
   18adc:	andeq	r9, r1, r0, ror #5
   18ae0:	andeq	r9, r1, r0, ror #5
   18ae4:	andeq	r9, r1, r0, ror #5
   18ae8:	andeq	r9, r1, r0, ror #5
   18aec:	andeq	r9, r1, r0, ror #5
   18af0:	andeq	r9, r1, r0, ror #5
   18af4:	andeq	r9, r1, r0, ror #5
   18af8:	andeq	r9, r1, r0, ror #5
   18afc:	andeq	r9, r1, r0, ror #5
   18b00:	andeq	r9, r1, r0, ror #5
   18b04:			; <UNDEFINED> instruction: 0x000191b4
   18b08:			; <UNDEFINED> instruction: 0x000191bc
   18b0c:			; <UNDEFINED> instruction: 0x000191bc
   18b10:	andeq	r9, r1, r0, lsr #3
   18b14:			; <UNDEFINED> instruction: 0x000191bc
   18b18:	ldrdeq	r9, [r1], -r4
   18b1c:			; <UNDEFINED> instruction: 0x000191bc
   18b20:	ldrdeq	r9, [r1], -ip
   18b24:			; <UNDEFINED> instruction: 0x000191bc
   18b28:			; <UNDEFINED> instruction: 0x000191bc
   18b2c:			; <UNDEFINED> instruction: 0x000191bc
   18b30:	ldrdeq	r9, [r1], -r4
   18b34:	ldrdeq	r9, [r1], -r4
   18b38:	ldrdeq	r9, [r1], -r4
   18b3c:	ldrdeq	r9, [r1], -r4
   18b40:	ldrdeq	r9, [r1], -r4
   18b44:	ldrdeq	r9, [r1], -r4
   18b48:	ldrdeq	r9, [r1], -r4
   18b4c:	ldrdeq	r9, [r1], -r4
   18b50:	ldrdeq	r9, [r1], -r4
   18b54:	ldrdeq	r9, [r1], -r4
   18b58:	ldrdeq	r9, [r1], -r4
   18b5c:	ldrdeq	r9, [r1], -r4
   18b60:	ldrdeq	r9, [r1], -r4
   18b64:	ldrdeq	r9, [r1], -r4
   18b68:	ldrdeq	r9, [r1], -r4
   18b6c:	ldrdeq	r9, [r1], -r4
   18b70:			; <UNDEFINED> instruction: 0x000191bc
   18b74:			; <UNDEFINED> instruction: 0x000191bc
   18b78:			; <UNDEFINED> instruction: 0x000191bc
   18b7c:			; <UNDEFINED> instruction: 0x000191bc
   18b80:	andeq	r8, r1, ip, lsl #29
   18b84:	andeq	r9, r1, r0, ror #5
   18b88:	ldrdeq	r9, [r1], -r4
   18b8c:	ldrdeq	r9, [r1], -r4
   18b90:	ldrdeq	r9, [r1], -r4
   18b94:	ldrdeq	r9, [r1], -r4
   18b98:	ldrdeq	r9, [r1], -r4
   18b9c:	ldrdeq	r9, [r1], -r4
   18ba0:	ldrdeq	r9, [r1], -r4
   18ba4:	ldrdeq	r9, [r1], -r4
   18ba8:	ldrdeq	r9, [r1], -r4
   18bac:	ldrdeq	r9, [r1], -r4
   18bb0:	ldrdeq	r9, [r1], -r4
   18bb4:	ldrdeq	r9, [r1], -r4
   18bb8:	ldrdeq	r9, [r1], -r4
   18bbc:	ldrdeq	r9, [r1], -r4
   18bc0:	ldrdeq	r9, [r1], -r4
   18bc4:	ldrdeq	r9, [r1], -r4
   18bc8:	ldrdeq	r9, [r1], -r4
   18bcc:	ldrdeq	r9, [r1], -r4
   18bd0:	ldrdeq	r9, [r1], -r4
   18bd4:	ldrdeq	r9, [r1], -r4
   18bd8:	ldrdeq	r9, [r1], -r4
   18bdc:	ldrdeq	r9, [r1], -r4
   18be0:	ldrdeq	r9, [r1], -r4
   18be4:	ldrdeq	r9, [r1], -r4
   18be8:	ldrdeq	r9, [r1], -r4
   18bec:	ldrdeq	r9, [r1], -r4
   18bf0:			; <UNDEFINED> instruction: 0x000191bc
   18bf4:	ldrdeq	r9, [r1], -ip
   18bf8:	ldrdeq	r9, [r1], -r4
   18bfc:			; <UNDEFINED> instruction: 0x000191bc
   18c00:	ldrdeq	r9, [r1], -r4
   18c04:			; <UNDEFINED> instruction: 0x000191bc
   18c08:	ldrdeq	r9, [r1], -r4
   18c0c:	ldrdeq	r9, [r1], -r4
   18c10:	ldrdeq	r9, [r1], -r4
   18c14:	ldrdeq	r9, [r1], -r4
   18c18:	ldrdeq	r9, [r1], -r4
   18c1c:	ldrdeq	r9, [r1], -r4
   18c20:	ldrdeq	r9, [r1], -r4
   18c24:	ldrdeq	r9, [r1], -r4
   18c28:	ldrdeq	r9, [r1], -r4
   18c2c:	ldrdeq	r9, [r1], -r4
   18c30:	ldrdeq	r9, [r1], -r4
   18c34:	ldrdeq	r9, [r1], -r4
   18c38:	ldrdeq	r9, [r1], -r4
   18c3c:	ldrdeq	r9, [r1], -r4
   18c40:	ldrdeq	r9, [r1], -r4
   18c44:	ldrdeq	r9, [r1], -r4
   18c48:	ldrdeq	r9, [r1], -r4
   18c4c:	ldrdeq	r9, [r1], -r4
   18c50:	ldrdeq	r9, [r1], -r4
   18c54:	ldrdeq	r9, [r1], -r4
   18c58:	ldrdeq	r9, [r1], -r4
   18c5c:	ldrdeq	r9, [r1], -r4
   18c60:	ldrdeq	r9, [r1], -r4
   18c64:	ldrdeq	r9, [r1], -r4
   18c68:	ldrdeq	r9, [r1], -r4
   18c6c:	ldrdeq	r9, [r1], -r4
   18c70:	andeq	r9, r1, ip, ror #2
   18c74:			; <UNDEFINED> instruction: 0x000191bc
   18c78:	andeq	r9, r1, ip, ror #2
   18c7c:	andeq	r9, r1, r0, lsr #3
   18c80:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18c84:	tst	r0, #1
   18c88:	beq	18e70 <__assert_fail@plt+0x7d88>
   18c8c:	b	18c90 <__assert_fail@plt+0x7ba8>
   18c90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18c94:	tst	r0, #1
   18c98:	beq	18ca0 <__assert_fail@plt+0x7bb8>
   18c9c:	b	19cf4 <__assert_fail@plt+0x8c0c>
   18ca0:	movw	r0, #1
   18ca4:	strb	r0, [fp, #-66]	; 0xffffffbe
   18ca8:	ldr	r0, [fp, #8]
   18cac:	cmp	r0, #2
   18cb0:	bne	18d64 <__assert_fail@plt+0x7c7c>
   18cb4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   18cb8:	tst	r0, #1
   18cbc:	bne	18d64 <__assert_fail@plt+0x7c7c>
   18cc0:	b	18cc4 <__assert_fail@plt+0x7bdc>
   18cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18cc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ccc:	cmp	r0, r1
   18cd0:	bcs	18ce8 <__assert_fail@plt+0x7c00>
   18cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18cdc:	add	r0, r0, r1
   18ce0:	movw	r1, #39	; 0x27
   18ce4:	strb	r1, [r0]
   18ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18cec:	add	r0, r0, #1
   18cf0:	str	r0, [fp, #-44]	; 0xffffffd4
   18cf4:	b	18cf8 <__assert_fail@plt+0x7c10>
   18cf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18cfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d00:	cmp	r0, r1
   18d04:	bcs	18d1c <__assert_fail@plt+0x7c34>
   18d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d10:	add	r0, r0, r1
   18d14:	movw	r1, #36	; 0x24
   18d18:	strb	r1, [r0]
   18d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d20:	add	r0, r0, #1
   18d24:	str	r0, [fp, #-44]	; 0xffffffd4
   18d28:	b	18d2c <__assert_fail@plt+0x7c44>
   18d2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d34:	cmp	r0, r1
   18d38:	bcs	18d50 <__assert_fail@plt+0x7c68>
   18d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d44:	add	r0, r0, r1
   18d48:	movw	r1, #39	; 0x27
   18d4c:	strb	r1, [r0]
   18d50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d54:	add	r0, r0, #1
   18d58:	str	r0, [fp, #-44]	; 0xffffffd4
   18d5c:	movw	r0, #1
   18d60:	strb	r0, [fp, #-60]	; 0xffffffc4
   18d64:	b	18d68 <__assert_fail@plt+0x7c80>
   18d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d70:	cmp	r0, r1
   18d74:	bcs	18d8c <__assert_fail@plt+0x7ca4>
   18d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d80:	add	r0, r0, r1
   18d84:	movw	r1, #92	; 0x5c
   18d88:	strb	r1, [r0]
   18d8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d90:	add	r0, r0, #1
   18d94:	str	r0, [fp, #-44]	; 0xffffffd4
   18d98:	b	18d9c <__assert_fail@plt+0x7cb4>
   18d9c:	ldr	r0, [fp, #8]
   18da0:	cmp	r0, #2
   18da4:	beq	18e64 <__assert_fail@plt+0x7d7c>
   18da8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18dac:	add	r0, r0, #1
   18db0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18db4:	cmp	r0, r1
   18db8:	bcs	18e64 <__assert_fail@plt+0x7d7c>
   18dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18dc4:	add	r1, r1, #1
   18dc8:	add	r0, r0, r1
   18dcc:	ldrb	r0, [r0]
   18dd0:	movw	r1, #48	; 0x30
   18dd4:	cmp	r1, r0
   18dd8:	bgt	18e64 <__assert_fail@plt+0x7d7c>
   18ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18de0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18de4:	add	r1, r1, #1
   18de8:	add	r0, r0, r1
   18dec:	ldrb	r0, [r0]
   18df0:	cmp	r0, #57	; 0x39
   18df4:	bgt	18e64 <__assert_fail@plt+0x7d7c>
   18df8:	b	18dfc <__assert_fail@plt+0x7d14>
   18dfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e04:	cmp	r0, r1
   18e08:	bcs	18e20 <__assert_fail@plt+0x7d38>
   18e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18e14:	add	r0, r0, r1
   18e18:	movw	r1, #48	; 0x30
   18e1c:	strb	r1, [r0]
   18e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e24:	add	r0, r0, #1
   18e28:	str	r0, [fp, #-44]	; 0xffffffd4
   18e2c:	b	18e30 <__assert_fail@plt+0x7d48>
   18e30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e38:	cmp	r0, r1
   18e3c:	bcs	18e54 <__assert_fail@plt+0x7d6c>
   18e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18e48:	add	r0, r0, r1
   18e4c:	movw	r1, #48	; 0x30
   18e50:	strb	r1, [r0]
   18e54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e58:	add	r0, r0, #1
   18e5c:	str	r0, [fp, #-44]	; 0xffffffd4
   18e60:	b	18e64 <__assert_fail@plt+0x7d7c>
   18e64:	movw	r0, #48	; 0x30
   18e68:	strb	r0, [fp, #-63]	; 0xffffffc1
   18e6c:	b	18e88 <__assert_fail@plt+0x7da0>
   18e70:	ldr	r0, [fp, #12]
   18e74:	and	r0, r0, #1
   18e78:	cmp	r0, #0
   18e7c:	beq	18e84 <__assert_fail@plt+0x7d9c>
   18e80:	b	19b64 <__assert_fail@plt+0x8a7c>
   18e84:	b	18e88 <__assert_fail@plt+0x7da0>
   18e88:	b	19900 <__assert_fail@plt+0x8818>
   18e8c:	ldr	r0, [fp, #8]
   18e90:	cmp	r0, #2
   18e94:	str	r0, [sp, #32]
   18e98:	beq	18eb0 <__assert_fail@plt+0x7dc8>
   18e9c:	b	18ea0 <__assert_fail@plt+0x7db8>
   18ea0:	ldr	r0, [sp, #32]
   18ea4:	cmp	r0, #5
   18ea8:	beq	18ec4 <__assert_fail@plt+0x7ddc>
   18eac:	b	19080 <__assert_fail@plt+0x7f98>
   18eb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18eb4:	tst	r0, #1
   18eb8:	beq	18ec0 <__assert_fail@plt+0x7dd8>
   18ebc:	b	19cf4 <__assert_fail@plt+0x8c0c>
   18ec0:	b	19084 <__assert_fail@plt+0x7f9c>
   18ec4:	ldr	r0, [fp, #12]
   18ec8:	and	r0, r0, #4
   18ecc:	cmp	r0, #0
   18ed0:	beq	1907c <__assert_fail@plt+0x7f94>
   18ed4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18ed8:	add	r0, r0, #2
   18edc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18ee0:	cmp	r0, r1
   18ee4:	bcs	1907c <__assert_fail@plt+0x7f94>
   18ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18eec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ef0:	add	r1, r1, #1
   18ef4:	add	r0, r0, r1
   18ef8:	ldrb	r0, [r0]
   18efc:	cmp	r0, #63	; 0x3f
   18f00:	bne	1907c <__assert_fail@plt+0x7f94>
   18f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f0c:	add	r0, r1, r0
   18f10:	ldrb	r0, [r0, #2]
   18f14:	mov	r1, r0
   18f18:	cmp	r0, #33	; 0x21
   18f1c:	str	r1, [sp, #28]
   18f20:	beq	18f70 <__assert_fail@plt+0x7e88>
   18f24:	b	18f28 <__assert_fail@plt+0x7e40>
   18f28:	ldr	r0, [sp, #28]
   18f2c:	sub	r1, r0, #39	; 0x27
   18f30:	cmp	r1, #3
   18f34:	bcc	18f70 <__assert_fail@plt+0x7e88>
   18f38:	b	18f3c <__assert_fail@plt+0x7e54>
   18f3c:	ldr	r0, [sp, #28]
   18f40:	cmp	r0, #45	; 0x2d
   18f44:	beq	18f70 <__assert_fail@plt+0x7e88>
   18f48:	b	18f4c <__assert_fail@plt+0x7e64>
   18f4c:	ldr	r0, [sp, #28]
   18f50:	cmp	r0, #47	; 0x2f
   18f54:	beq	18f70 <__assert_fail@plt+0x7e88>
   18f58:	b	18f5c <__assert_fail@plt+0x7e74>
   18f5c:	ldr	r0, [sp, #28]
   18f60:	sub	r1, r0, #60	; 0x3c
   18f64:	cmp	r1, #2
   18f68:	bhi	19074 <__assert_fail@plt+0x7f8c>
   18f6c:	b	18f70 <__assert_fail@plt+0x7e88>
   18f70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18f74:	tst	r0, #1
   18f78:	beq	18f80 <__assert_fail@plt+0x7e98>
   18f7c:	b	19cf4 <__assert_fail@plt+0x8c0c>
   18f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f88:	add	r1, r1, #2
   18f8c:	add	r0, r0, r1
   18f90:	ldrb	r0, [r0]
   18f94:	strb	r0, [fp, #-63]	; 0xffffffc1
   18f98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f9c:	add	r0, r0, #2
   18fa0:	str	r0, [fp, #-40]	; 0xffffffd8
   18fa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18fa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18fac:	cmp	r0, r1
   18fb0:	bcs	18fc8 <__assert_fail@plt+0x7ee0>
   18fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18fbc:	add	r0, r0, r1
   18fc0:	movw	r1, #63	; 0x3f
   18fc4:	strb	r1, [r0]
   18fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18fcc:	add	r0, r0, #1
   18fd0:	str	r0, [fp, #-44]	; 0xffffffd4
   18fd4:	b	18fd8 <__assert_fail@plt+0x7ef0>
   18fd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18fdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18fe0:	cmp	r0, r1
   18fe4:	bcs	18ffc <__assert_fail@plt+0x7f14>
   18fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ff0:	add	r0, r0, r1
   18ff4:	movw	r1, #34	; 0x22
   18ff8:	strb	r1, [r0]
   18ffc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19000:	add	r0, r0, #1
   19004:	str	r0, [fp, #-44]	; 0xffffffd4
   19008:	b	1900c <__assert_fail@plt+0x7f24>
   1900c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19010:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19014:	cmp	r0, r1
   19018:	bcs	19030 <__assert_fail@plt+0x7f48>
   1901c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19020:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19024:	add	r0, r0, r1
   19028:	movw	r1, #34	; 0x22
   1902c:	strb	r1, [r0]
   19030:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19034:	add	r0, r0, #1
   19038:	str	r0, [fp, #-44]	; 0xffffffd4
   1903c:	b	19040 <__assert_fail@plt+0x7f58>
   19040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19048:	cmp	r0, r1
   1904c:	bcs	19064 <__assert_fail@plt+0x7f7c>
   19050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19054:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19058:	add	r0, r0, r1
   1905c:	movw	r1, #63	; 0x3f
   19060:	strb	r1, [r0]
   19064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19068:	add	r0, r0, #1
   1906c:	str	r0, [fp, #-44]	; 0xffffffd4
   19070:	b	19078 <__assert_fail@plt+0x7f90>
   19074:	b	19078 <__assert_fail@plt+0x7f90>
   19078:	b	1907c <__assert_fail@plt+0x7f94>
   1907c:	b	19084 <__assert_fail@plt+0x7f9c>
   19080:	b	19084 <__assert_fail@plt+0x7f9c>
   19084:	b	19900 <__assert_fail@plt+0x8818>
   19088:	movw	r0, #97	; 0x61
   1908c:	strb	r0, [fp, #-64]	; 0xffffffc0
   19090:	b	19150 <__assert_fail@plt+0x8068>
   19094:	movw	r0, #98	; 0x62
   19098:	strb	r0, [fp, #-64]	; 0xffffffc0
   1909c:	b	19150 <__assert_fail@plt+0x8068>
   190a0:	movw	r0, #102	; 0x66
   190a4:	strb	r0, [fp, #-64]	; 0xffffffc0
   190a8:	b	19150 <__assert_fail@plt+0x8068>
   190ac:	movw	r0, #110	; 0x6e
   190b0:	strb	r0, [fp, #-64]	; 0xffffffc0
   190b4:	b	19130 <__assert_fail@plt+0x8048>
   190b8:	movw	r0, #114	; 0x72
   190bc:	strb	r0, [fp, #-64]	; 0xffffffc0
   190c0:	b	19130 <__assert_fail@plt+0x8048>
   190c4:	movw	r0, #116	; 0x74
   190c8:	strb	r0, [fp, #-64]	; 0xffffffc0
   190cc:	b	19130 <__assert_fail@plt+0x8048>
   190d0:	movw	r0, #118	; 0x76
   190d4:	strb	r0, [fp, #-64]	; 0xffffffc0
   190d8:	b	19150 <__assert_fail@plt+0x8068>
   190dc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   190e0:	strb	r0, [fp, #-64]	; 0xffffffc0
   190e4:	ldr	r0, [fp, #8]
   190e8:	cmp	r0, #2
   190ec:	bne	19104 <__assert_fail@plt+0x801c>
   190f0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   190f4:	tst	r0, #1
   190f8:	beq	19100 <__assert_fail@plt+0x8018>
   190fc:	b	19cf4 <__assert_fail@plt+0x8c0c>
   19100:	b	19a88 <__assert_fail@plt+0x89a0>
   19104:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19108:	tst	r0, #1
   1910c:	beq	1912c <__assert_fail@plt+0x8044>
   19110:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19114:	tst	r0, #1
   19118:	beq	1912c <__assert_fail@plt+0x8044>
   1911c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19120:	cmp	r0, #0
   19124:	beq	1912c <__assert_fail@plt+0x8044>
   19128:	b	19a88 <__assert_fail@plt+0x89a0>
   1912c:	b	19130 <__assert_fail@plt+0x8048>
   19130:	ldr	r0, [fp, #8]
   19134:	cmp	r0, #2
   19138:	bne	1914c <__assert_fail@plt+0x8064>
   1913c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19140:	tst	r0, #1
   19144:	beq	1914c <__assert_fail@plt+0x8064>
   19148:	b	19cf4 <__assert_fail@plt+0x8c0c>
   1914c:	b	19150 <__assert_fail@plt+0x8068>
   19150:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19154:	tst	r0, #1
   19158:	beq	19168 <__assert_fail@plt+0x8080>
   1915c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   19160:	strb	r0, [fp, #-63]	; 0xffffffc1
   19164:	b	19974 <__assert_fail@plt+0x888c>
   19168:	b	19900 <__assert_fail@plt+0x8818>
   1916c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19170:	cmn	r0, #1
   19174:	bne	1918c <__assert_fail@plt+0x80a4>
   19178:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1917c:	ldrb	r0, [r0, #1]
   19180:	cmp	r0, #0
   19184:	beq	1919c <__assert_fail@plt+0x80b4>
   19188:	b	19198 <__assert_fail@plt+0x80b0>
   1918c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19190:	cmp	r0, #1
   19194:	beq	1919c <__assert_fail@plt+0x80b4>
   19198:	b	19900 <__assert_fail@plt+0x8818>
   1919c:	b	191a0 <__assert_fail@plt+0x80b8>
   191a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   191a4:	cmp	r0, #0
   191a8:	beq	191b0 <__assert_fail@plt+0x80c8>
   191ac:	b	19900 <__assert_fail@plt+0x8818>
   191b0:	b	191b4 <__assert_fail@plt+0x80cc>
   191b4:	movw	r0, #1
   191b8:	strb	r0, [fp, #-67]	; 0xffffffbd
   191bc:	ldr	r0, [fp, #8]
   191c0:	cmp	r0, #2
   191c4:	bne	191d8 <__assert_fail@plt+0x80f0>
   191c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   191cc:	tst	r0, #1
   191d0:	beq	191d8 <__assert_fail@plt+0x80f0>
   191d4:	b	19cf4 <__assert_fail@plt+0x8c0c>
   191d8:	b	19900 <__assert_fail@plt+0x8818>
   191dc:	movw	r0, #1
   191e0:	strb	r0, [fp, #-61]	; 0xffffffc3
   191e4:	strb	r0, [fp, #-67]	; 0xffffffbd
   191e8:	ldr	r0, [fp, #8]
   191ec:	cmp	r0, #2
   191f0:	bne	192d0 <__assert_fail@plt+0x81e8>
   191f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   191f8:	tst	r0, #1
   191fc:	beq	19204 <__assert_fail@plt+0x811c>
   19200:	b	19cf4 <__assert_fail@plt+0x8c0c>
   19204:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19208:	cmp	r0, #0
   1920c:	beq	1922c <__assert_fail@plt+0x8144>
   19210:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19214:	cmp	r0, #0
   19218:	bne	1922c <__assert_fail@plt+0x8144>
   1921c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19220:	str	r0, [fp, #-48]	; 0xffffffd0
   19224:	movw	r0, #0
   19228:	str	r0, [fp, #-28]	; 0xffffffe4
   1922c:	b	19230 <__assert_fail@plt+0x8148>
   19230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19234:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19238:	cmp	r0, r1
   1923c:	bcs	19254 <__assert_fail@plt+0x816c>
   19240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19244:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19248:	add	r0, r0, r1
   1924c:	movw	r1, #39	; 0x27
   19250:	strb	r1, [r0]
   19254:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19258:	add	r0, r0, #1
   1925c:	str	r0, [fp, #-44]	; 0xffffffd4
   19260:	b	19264 <__assert_fail@plt+0x817c>
   19264:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19268:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1926c:	cmp	r0, r1
   19270:	bcs	19288 <__assert_fail@plt+0x81a0>
   19274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19278:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1927c:	add	r0, r0, r1
   19280:	movw	r1, #92	; 0x5c
   19284:	strb	r1, [r0]
   19288:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1928c:	add	r0, r0, #1
   19290:	str	r0, [fp, #-44]	; 0xffffffd4
   19294:	b	19298 <__assert_fail@plt+0x81b0>
   19298:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1929c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   192a0:	cmp	r0, r1
   192a4:	bcs	192bc <__assert_fail@plt+0x81d4>
   192a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   192b0:	add	r0, r0, r1
   192b4:	movw	r1, #39	; 0x27
   192b8:	strb	r1, [r0]
   192bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   192c0:	add	r0, r0, #1
   192c4:	str	r0, [fp, #-44]	; 0xffffffd4
   192c8:	movw	r0, #0
   192cc:	strb	r0, [fp, #-60]	; 0xffffffc4
   192d0:	b	19900 <__assert_fail@plt+0x8818>
   192d4:	movw	r0, #1
   192d8:	strb	r0, [fp, #-67]	; 0xffffffbd
   192dc:	b	19900 <__assert_fail@plt+0x8818>
   192e0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   192e4:	tst	r0, #1
   192e8:	beq	19328 <__assert_fail@plt+0x8240>
   192ec:	mov	r0, #1
   192f0:	str	r0, [fp, #-72]	; 0xffffffb8
   192f4:	bl	10fc8 <__ctype_b_loc@plt>
   192f8:	ldr	r0, [r0]
   192fc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   19300:	mov	r2, r1
   19304:	add	r0, r0, r1, lsl #1
   19308:	ldrh	r0, [r0]
   1930c:	and	r0, r0, #16384	; 0x4000
   19310:	cmp	r0, #0
   19314:	movw	r0, #0
   19318:	movne	r0, #1
   1931c:	and	r0, r0, #1
   19320:	strb	r0, [fp, #-73]	; 0xffffffb7
   19324:	b	195b4 <__assert_fail@plt+0x84cc>
   19328:	sub	r0, fp, #84	; 0x54
   1932c:	movw	r1, #0
   19330:	and	r1, r1, #255	; 0xff
   19334:	movw	r2, #8
   19338:	bl	11028 <memset@plt>
   1933c:	movw	r0, #0
   19340:	str	r0, [fp, #-72]	; 0xffffffb8
   19344:	movw	r0, #1
   19348:	strb	r0, [fp, #-73]	; 0xffffffb7
   1934c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19350:	cmn	r0, #1
   19354:	bne	19364 <__assert_fail@plt+0x827c>
   19358:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1935c:	bl	10fec <strlen@plt>
   19360:	str	r0, [fp, #-36]	; 0xffffffdc
   19364:	b	19368 <__assert_fail@plt+0x8280>
   19368:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1936c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19370:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19374:	add	r1, r1, r2
   19378:	add	r1, r0, r1
   1937c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19380:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19384:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19388:	add	r2, r2, r3
   1938c:	sub	r2, r0, r2
   19390:	add	r0, sp, #88	; 0x58
   19394:	sub	r3, fp, #84	; 0x54
   19398:	bl	216e8 <__assert_fail@plt+0x10600>
   1939c:	str	r0, [sp, #84]	; 0x54
   193a0:	ldr	r0, [sp, #84]	; 0x54
   193a4:	cmp	r0, #0
   193a8:	bne	193b0 <__assert_fail@plt+0x82c8>
   193ac:	b	195b0 <__assert_fail@plt+0x84c8>
   193b0:	ldr	r0, [sp, #84]	; 0x54
   193b4:	cmn	r0, #1
   193b8:	bne	193c8 <__assert_fail@plt+0x82e0>
   193bc:	movw	r0, #0
   193c0:	strb	r0, [fp, #-73]	; 0xffffffb7
   193c4:	b	195b0 <__assert_fail@plt+0x84c8>
   193c8:	ldr	r0, [sp, #84]	; 0x54
   193cc:	cmn	r0, #2
   193d0:	bne	19444 <__assert_fail@plt+0x835c>
   193d4:	movw	r0, #0
   193d8:	strb	r0, [fp, #-73]	; 0xffffffb7
   193dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   193e0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   193e4:	add	r0, r0, r1
   193e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   193ec:	cmp	r0, r1
   193f0:	movw	r0, #0
   193f4:	str	r0, [sp, #24]
   193f8:	bcs	19424 <__assert_fail@plt+0x833c>
   193fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19400:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19404:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19408:	add	r1, r1, r2
   1940c:	add	r0, r0, r1
   19410:	ldrb	r0, [r0]
   19414:	cmp	r0, #0
   19418:	movw	r0, #0
   1941c:	movne	r0, #1
   19420:	str	r0, [sp, #24]
   19424:	ldr	r0, [sp, #24]
   19428:	tst	r0, #1
   1942c:	beq	19440 <__assert_fail@plt+0x8358>
   19430:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19434:	add	r0, r0, #1
   19438:	str	r0, [fp, #-72]	; 0xffffffb8
   1943c:	b	193dc <__assert_fail@plt+0x82f4>
   19440:	b	195b0 <__assert_fail@plt+0x84c8>
   19444:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19448:	tst	r0, #1
   1944c:	beq	19558 <__assert_fail@plt+0x8470>
   19450:	ldr	r0, [fp, #8]
   19454:	cmp	r0, #2
   19458:	bne	19558 <__assert_fail@plt+0x8470>
   1945c:	movw	r0, #1
   19460:	str	r0, [sp, #80]	; 0x50
   19464:	ldr	r0, [sp, #80]	; 0x50
   19468:	ldr	r1, [sp, #84]	; 0x54
   1946c:	cmp	r0, r1
   19470:	bcs	19554 <__assert_fail@plt+0x846c>
   19474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19478:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1947c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19480:	add	r1, r1, r2
   19484:	ldr	r2, [sp, #80]	; 0x50
   19488:	add	r1, r1, r2
   1948c:	ldrb	r0, [r0, r1]
   19490:	sub	r0, r0, #91	; 0x5b
   19494:	cmp	r0, #33	; 0x21
   19498:	str	r0, [sp, #20]
   1949c:	bhi	1953c <__assert_fail@plt+0x8454>
   194a0:	add	r0, pc, #8
   194a4:	ldr	r1, [sp, #20]
   194a8:	ldr	r0, [r0, r1, lsl #2]
   194ac:	mov	pc, r0
   194b0:	andeq	r9, r1, r8, lsr r5
   194b4:	andeq	r9, r1, r8, lsr r5
   194b8:	andeq	r9, r1, ip, lsr r5
   194bc:	andeq	r9, r1, r8, lsr r5
   194c0:	andeq	r9, r1, ip, lsr r5
   194c4:	andeq	r9, r1, r8, lsr r5
   194c8:	andeq	r9, r1, ip, lsr r5
   194cc:	andeq	r9, r1, ip, lsr r5
   194d0:	andeq	r9, r1, ip, lsr r5
   194d4:	andeq	r9, r1, ip, lsr r5
   194d8:	andeq	r9, r1, ip, lsr r5
   194dc:	andeq	r9, r1, ip, lsr r5
   194e0:	andeq	r9, r1, ip, lsr r5
   194e4:	andeq	r9, r1, ip, lsr r5
   194e8:	andeq	r9, r1, ip, lsr r5
   194ec:	andeq	r9, r1, ip, lsr r5
   194f0:	andeq	r9, r1, ip, lsr r5
   194f4:	andeq	r9, r1, ip, lsr r5
   194f8:	andeq	r9, r1, ip, lsr r5
   194fc:	andeq	r9, r1, ip, lsr r5
   19500:	andeq	r9, r1, ip, lsr r5
   19504:	andeq	r9, r1, ip, lsr r5
   19508:	andeq	r9, r1, ip, lsr r5
   1950c:	andeq	r9, r1, ip, lsr r5
   19510:	andeq	r9, r1, ip, lsr r5
   19514:	andeq	r9, r1, ip, lsr r5
   19518:	andeq	r9, r1, ip, lsr r5
   1951c:	andeq	r9, r1, ip, lsr r5
   19520:	andeq	r9, r1, ip, lsr r5
   19524:	andeq	r9, r1, ip, lsr r5
   19528:	andeq	r9, r1, ip, lsr r5
   1952c:	andeq	r9, r1, ip, lsr r5
   19530:	andeq	r9, r1, ip, lsr r5
   19534:	andeq	r9, r1, r8, lsr r5
   19538:	b	19cf4 <__assert_fail@plt+0x8c0c>
   1953c:	b	19540 <__assert_fail@plt+0x8458>
   19540:	b	19544 <__assert_fail@plt+0x845c>
   19544:	ldr	r0, [sp, #80]	; 0x50
   19548:	add	r0, r0, #1
   1954c:	str	r0, [sp, #80]	; 0x50
   19550:	b	19464 <__assert_fail@plt+0x837c>
   19554:	b	19558 <__assert_fail@plt+0x8470>
   19558:	ldr	r0, [sp, #88]	; 0x58
   1955c:	bl	10f38 <iswprint@plt>
   19560:	cmp	r0, #0
   19564:	bne	19570 <__assert_fail@plt+0x8488>
   19568:	movw	r0, #0
   1956c:	strb	r0, [fp, #-73]	; 0xffffffb7
   19570:	ldr	r0, [sp, #84]	; 0x54
   19574:	ldr	r1, [fp, #-72]	; 0xffffffb8
   19578:	add	r0, r1, r0
   1957c:	str	r0, [fp, #-72]	; 0xffffffb8
   19580:	b	19584 <__assert_fail@plt+0x849c>
   19584:	b	19588 <__assert_fail@plt+0x84a0>
   19588:	b	1958c <__assert_fail@plt+0x84a4>
   1958c:	sub	r0, fp, #84	; 0x54
   19590:	bl	10ef0 <mbsinit@plt>
   19594:	cmp	r0, #0
   19598:	movw	r0, #0
   1959c:	movne	r0, #1
   195a0:	mvn	r1, #0
   195a4:	eor	r0, r0, r1
   195a8:	tst	r0, #1
   195ac:	bne	19368 <__assert_fail@plt+0x8280>
   195b0:	b	195b4 <__assert_fail@plt+0x84cc>
   195b4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   195b8:	and	r0, r0, #1
   195bc:	strb	r0, [fp, #-67]	; 0xffffffbd
   195c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   195c4:	movw	r1, #1
   195c8:	cmp	r1, r0
   195cc:	bcc	195e8 <__assert_fail@plt+0x8500>
   195d0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   195d4:	tst	r0, #1
   195d8:	beq	198fc <__assert_fail@plt+0x8814>
   195dc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   195e0:	tst	r0, #1
   195e4:	bne	198fc <__assert_fail@plt+0x8814>
   195e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   195ec:	ldr	r1, [fp, #-72]	; 0xffffffb8
   195f0:	add	r0, r0, r1
   195f4:	str	r0, [sp, #76]	; 0x4c
   195f8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   195fc:	tst	r0, #1
   19600:	beq	197b0 <__assert_fail@plt+0x86c8>
   19604:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   19608:	tst	r0, #1
   1960c:	bne	197b0 <__assert_fail@plt+0x86c8>
   19610:	b	19614 <__assert_fail@plt+0x852c>
   19614:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19618:	tst	r0, #1
   1961c:	beq	19624 <__assert_fail@plt+0x853c>
   19620:	b	19cf4 <__assert_fail@plt+0x8c0c>
   19624:	movw	r0, #1
   19628:	strb	r0, [fp, #-66]	; 0xffffffbe
   1962c:	ldr	r0, [fp, #8]
   19630:	cmp	r0, #2
   19634:	bne	196e8 <__assert_fail@plt+0x8600>
   19638:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1963c:	tst	r0, #1
   19640:	bne	196e8 <__assert_fail@plt+0x8600>
   19644:	b	19648 <__assert_fail@plt+0x8560>
   19648:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1964c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19650:	cmp	r0, r1
   19654:	bcs	1966c <__assert_fail@plt+0x8584>
   19658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1965c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19660:	add	r0, r0, r1
   19664:	movw	r1, #39	; 0x27
   19668:	strb	r1, [r0]
   1966c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19670:	add	r0, r0, #1
   19674:	str	r0, [fp, #-44]	; 0xffffffd4
   19678:	b	1967c <__assert_fail@plt+0x8594>
   1967c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19680:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19684:	cmp	r0, r1
   19688:	bcs	196a0 <__assert_fail@plt+0x85b8>
   1968c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19690:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19694:	add	r0, r0, r1
   19698:	movw	r1, #36	; 0x24
   1969c:	strb	r1, [r0]
   196a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   196a4:	add	r0, r0, #1
   196a8:	str	r0, [fp, #-44]	; 0xffffffd4
   196ac:	b	196b0 <__assert_fail@plt+0x85c8>
   196b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   196b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   196b8:	cmp	r0, r1
   196bc:	bcs	196d4 <__assert_fail@plt+0x85ec>
   196c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   196c8:	add	r0, r0, r1
   196cc:	movw	r1, #39	; 0x27
   196d0:	strb	r1, [r0]
   196d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   196d8:	add	r0, r0, #1
   196dc:	str	r0, [fp, #-44]	; 0xffffffd4
   196e0:	movw	r0, #1
   196e4:	strb	r0, [fp, #-60]	; 0xffffffc4
   196e8:	b	196ec <__assert_fail@plt+0x8604>
   196ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   196f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   196f4:	cmp	r0, r1
   196f8:	bcs	19710 <__assert_fail@plt+0x8628>
   196fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19700:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19704:	add	r0, r0, r1
   19708:	movw	r1, #92	; 0x5c
   1970c:	strb	r1, [r0]
   19710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19714:	add	r0, r0, #1
   19718:	str	r0, [fp, #-44]	; 0xffffffd4
   1971c:	b	19720 <__assert_fail@plt+0x8638>
   19720:	b	19724 <__assert_fail@plt+0x863c>
   19724:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1972c:	cmp	r0, r1
   19730:	bcs	19750 <__assert_fail@plt+0x8668>
   19734:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19738:	asr	r0, r0, #6
   1973c:	add	r0, r0, #48	; 0x30
   19740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19744:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19748:	add	r1, r1, r2
   1974c:	strb	r0, [r1]
   19750:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19754:	add	r0, r0, #1
   19758:	str	r0, [fp, #-44]	; 0xffffffd4
   1975c:	b	19760 <__assert_fail@plt+0x8678>
   19760:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19768:	cmp	r0, r1
   1976c:	bcs	19790 <__assert_fail@plt+0x86a8>
   19770:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19774:	asr	r0, r0, #3
   19778:	and	r0, r0, #7
   1977c:	add	r0, r0, #48	; 0x30
   19780:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19784:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19788:	add	r1, r1, r2
   1978c:	strb	r0, [r1]
   19790:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19794:	add	r0, r0, #1
   19798:	str	r0, [fp, #-44]	; 0xffffffd4
   1979c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   197a0:	and	r0, r0, #7
   197a4:	add	r0, r0, #48	; 0x30
   197a8:	strb	r0, [fp, #-63]	; 0xffffffc1
   197ac:	b	197fc <__assert_fail@plt+0x8714>
   197b0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   197b4:	tst	r0, #1
   197b8:	beq	197f8 <__assert_fail@plt+0x8710>
   197bc:	b	197c0 <__assert_fail@plt+0x86d8>
   197c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   197c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   197c8:	cmp	r0, r1
   197cc:	bcs	197e4 <__assert_fail@plt+0x86fc>
   197d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   197d8:	add	r0, r0, r1
   197dc:	movw	r1, #92	; 0x5c
   197e0:	strb	r1, [r0]
   197e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   197e8:	add	r0, r0, #1
   197ec:	str	r0, [fp, #-44]	; 0xffffffd4
   197f0:	movw	r0, #0
   197f4:	strb	r0, [fp, #-65]	; 0xffffffbf
   197f8:	b	197fc <__assert_fail@plt+0x8714>
   197fc:	ldr	r0, [sp, #76]	; 0x4c
   19800:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19804:	add	r1, r1, #1
   19808:	cmp	r0, r1
   1980c:	bhi	19814 <__assert_fail@plt+0x872c>
   19810:	b	198f8 <__assert_fail@plt+0x8810>
   19814:	b	19818 <__assert_fail@plt+0x8730>
   19818:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1981c:	tst	r0, #1
   19820:	beq	198a0 <__assert_fail@plt+0x87b8>
   19824:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   19828:	tst	r0, #1
   1982c:	bne	198a0 <__assert_fail@plt+0x87b8>
   19830:	b	19834 <__assert_fail@plt+0x874c>
   19834:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19838:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1983c:	cmp	r0, r1
   19840:	bcs	19858 <__assert_fail@plt+0x8770>
   19844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19848:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1984c:	add	r0, r0, r1
   19850:	movw	r1, #39	; 0x27
   19854:	strb	r1, [r0]
   19858:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1985c:	add	r0, r0, #1
   19860:	str	r0, [fp, #-44]	; 0xffffffd4
   19864:	b	19868 <__assert_fail@plt+0x8780>
   19868:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1986c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19870:	cmp	r0, r1
   19874:	bcs	1988c <__assert_fail@plt+0x87a4>
   19878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1987c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19880:	add	r0, r0, r1
   19884:	movw	r1, #39	; 0x27
   19888:	strb	r1, [r0]
   1988c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19890:	add	r0, r0, #1
   19894:	str	r0, [fp, #-44]	; 0xffffffd4
   19898:	movw	r0, #0
   1989c:	strb	r0, [fp, #-60]	; 0xffffffc4
   198a0:	b	198a4 <__assert_fail@plt+0x87bc>
   198a4:	b	198a8 <__assert_fail@plt+0x87c0>
   198a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   198ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   198b0:	cmp	r0, r1
   198b4:	bcs	198cc <__assert_fail@plt+0x87e4>
   198b8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   198bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   198c4:	add	r1, r1, r2
   198c8:	strb	r0, [r1]
   198cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   198d0:	add	r0, r0, #1
   198d4:	str	r0, [fp, #-44]	; 0xffffffd4
   198d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   198dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   198e0:	add	r1, r1, #1
   198e4:	str	r1, [fp, #-40]	; 0xffffffd8
   198e8:	add	r0, r0, r1
   198ec:	ldrb	r0, [r0]
   198f0:	strb	r0, [fp, #-63]	; 0xffffffc1
   198f4:	b	195f8 <__assert_fail@plt+0x8510>
   198f8:	b	19a88 <__assert_fail@plt+0x89a0>
   198fc:	b	19900 <__assert_fail@plt+0x8818>
   19900:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19904:	tst	r0, #1
   19908:	beq	19918 <__assert_fail@plt+0x8830>
   1990c:	ldr	r0, [fp, #8]
   19910:	cmp	r0, #2
   19914:	bne	19924 <__assert_fail@plt+0x883c>
   19918:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1991c:	tst	r0, #1
   19920:	beq	19960 <__assert_fail@plt+0x8878>
   19924:	ldr	r0, [fp, #16]
   19928:	movw	r1, #0
   1992c:	cmp	r0, r1
   19930:	beq	19960 <__assert_fail@plt+0x8878>
   19934:	ldr	r0, [fp, #16]
   19938:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1993c:	lsr	r1, r1, #5
   19940:	add	r0, r0, r1, lsl #2
   19944:	ldr	r0, [r0]
   19948:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1994c:	and	r1, r1, #31
   19950:	lsr	r0, r0, r1
   19954:	and	r0, r0, #1
   19958:	cmp	r0, #0
   1995c:	bne	19970 <__assert_fail@plt+0x8888>
   19960:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   19964:	tst	r0, #1
   19968:	bne	19970 <__assert_fail@plt+0x8888>
   1996c:	b	19a88 <__assert_fail@plt+0x89a0>
   19970:	b	19974 <__assert_fail@plt+0x888c>
   19974:	b	19978 <__assert_fail@plt+0x8890>
   19978:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1997c:	tst	r0, #1
   19980:	beq	19988 <__assert_fail@plt+0x88a0>
   19984:	b	19cf4 <__assert_fail@plt+0x8c0c>
   19988:	movw	r0, #1
   1998c:	strb	r0, [fp, #-66]	; 0xffffffbe
   19990:	ldr	r0, [fp, #8]
   19994:	cmp	r0, #2
   19998:	bne	19a4c <__assert_fail@plt+0x8964>
   1999c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   199a0:	tst	r0, #1
   199a4:	bne	19a4c <__assert_fail@plt+0x8964>
   199a8:	b	199ac <__assert_fail@plt+0x88c4>
   199ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199b4:	cmp	r0, r1
   199b8:	bcs	199d0 <__assert_fail@plt+0x88e8>
   199bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199c4:	add	r0, r0, r1
   199c8:	movw	r1, #39	; 0x27
   199cc:	strb	r1, [r0]
   199d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199d4:	add	r0, r0, #1
   199d8:	str	r0, [fp, #-44]	; 0xffffffd4
   199dc:	b	199e0 <__assert_fail@plt+0x88f8>
   199e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199e8:	cmp	r0, r1
   199ec:	bcs	19a04 <__assert_fail@plt+0x891c>
   199f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199f8:	add	r0, r0, r1
   199fc:	movw	r1, #36	; 0x24
   19a00:	strb	r1, [r0]
   19a04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a08:	add	r0, r0, #1
   19a0c:	str	r0, [fp, #-44]	; 0xffffffd4
   19a10:	b	19a14 <__assert_fail@plt+0x892c>
   19a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a1c:	cmp	r0, r1
   19a20:	bcs	19a38 <__assert_fail@plt+0x8950>
   19a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a2c:	add	r0, r0, r1
   19a30:	movw	r1, #39	; 0x27
   19a34:	strb	r1, [r0]
   19a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a3c:	add	r0, r0, #1
   19a40:	str	r0, [fp, #-44]	; 0xffffffd4
   19a44:	movw	r0, #1
   19a48:	strb	r0, [fp, #-60]	; 0xffffffc4
   19a4c:	b	19a50 <__assert_fail@plt+0x8968>
   19a50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a58:	cmp	r0, r1
   19a5c:	bcs	19a74 <__assert_fail@plt+0x898c>
   19a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a68:	add	r0, r0, r1
   19a6c:	movw	r1, #92	; 0x5c
   19a70:	strb	r1, [r0]
   19a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a78:	add	r0, r0, #1
   19a7c:	str	r0, [fp, #-44]	; 0xffffffd4
   19a80:	b	19a84 <__assert_fail@plt+0x899c>
   19a84:	b	19a88 <__assert_fail@plt+0x89a0>
   19a88:	b	19a8c <__assert_fail@plt+0x89a4>
   19a8c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19a90:	tst	r0, #1
   19a94:	beq	19b14 <__assert_fail@plt+0x8a2c>
   19a98:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   19a9c:	tst	r0, #1
   19aa0:	bne	19b14 <__assert_fail@plt+0x8a2c>
   19aa4:	b	19aa8 <__assert_fail@plt+0x89c0>
   19aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19aac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ab0:	cmp	r0, r1
   19ab4:	bcs	19acc <__assert_fail@plt+0x89e4>
   19ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19abc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ac0:	add	r0, r0, r1
   19ac4:	movw	r1, #39	; 0x27
   19ac8:	strb	r1, [r0]
   19acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ad0:	add	r0, r0, #1
   19ad4:	str	r0, [fp, #-44]	; 0xffffffd4
   19ad8:	b	19adc <__assert_fail@plt+0x89f4>
   19adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ae0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ae4:	cmp	r0, r1
   19ae8:	bcs	19b00 <__assert_fail@plt+0x8a18>
   19aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19af4:	add	r0, r0, r1
   19af8:	movw	r1, #39	; 0x27
   19afc:	strb	r1, [r0]
   19b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b04:	add	r0, r0, #1
   19b08:	str	r0, [fp, #-44]	; 0xffffffd4
   19b0c:	movw	r0, #0
   19b10:	strb	r0, [fp, #-60]	; 0xffffffc4
   19b14:	b	19b18 <__assert_fail@plt+0x8a30>
   19b18:	b	19b1c <__assert_fail@plt+0x8a34>
   19b1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19b24:	cmp	r0, r1
   19b28:	bcs	19b40 <__assert_fail@plt+0x8a58>
   19b2c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19b30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19b38:	add	r1, r1, r2
   19b3c:	strb	r0, [r1]
   19b40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b44:	add	r0, r0, #1
   19b48:	str	r0, [fp, #-44]	; 0xffffffd4
   19b4c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   19b50:	tst	r0, #1
   19b54:	bne	19b60 <__assert_fail@plt+0x8a78>
   19b58:	movw	r0, #0
   19b5c:	strb	r0, [fp, #-62]	; 0xffffffc2
   19b60:	b	19b64 <__assert_fail@plt+0x8a7c>
   19b64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b68:	add	r0, r0, #1
   19b6c:	str	r0, [fp, #-40]	; 0xffffffd8
   19b70:	b	1891c <__assert_fail@plt+0x7834>
   19b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b78:	cmp	r0, #0
   19b7c:	bne	19b9c <__assert_fail@plt+0x8ab4>
   19b80:	ldr	r0, [fp, #8]
   19b84:	cmp	r0, #2
   19b88:	bne	19b9c <__assert_fail@plt+0x8ab4>
   19b8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b90:	tst	r0, #1
   19b94:	beq	19b9c <__assert_fail@plt+0x8ab4>
   19b98:	b	19cf4 <__assert_fail@plt+0x8c0c>
   19b9c:	ldr	r0, [fp, #8]
   19ba0:	cmp	r0, #2
   19ba4:	bne	19c44 <__assert_fail@plt+0x8b5c>
   19ba8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19bac:	tst	r0, #1
   19bb0:	bne	19c44 <__assert_fail@plt+0x8b5c>
   19bb4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   19bb8:	tst	r0, #1
   19bbc:	beq	19c44 <__assert_fail@plt+0x8b5c>
   19bc0:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   19bc4:	tst	r0, #1
   19bc8:	beq	19c10 <__assert_fail@plt+0x8b28>
   19bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bd0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19bd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19bdc:	ldr	ip, [fp, #12]
   19be0:	ldr	lr, [fp, #16]
   19be4:	ldr	r4, [fp, #20]
   19be8:	ldr	r5, [fp, #24]
   19bec:	movw	r6, #5
   19bf0:	str	r6, [sp]
   19bf4:	str	ip, [sp, #4]
   19bf8:	str	lr, [sp, #8]
   19bfc:	str	r4, [sp, #12]
   19c00:	str	r5, [sp, #16]
   19c04:	bl	18634 <__assert_fail@plt+0x754c>
   19c08:	str	r0, [fp, #-20]	; 0xffffffec
   19c0c:	b	19d5c <__assert_fail@plt+0x8c74>
   19c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19c14:	cmp	r0, #0
   19c18:	bne	19c3c <__assert_fail@plt+0x8b54>
   19c1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19c20:	cmp	r0, #0
   19c24:	beq	19c3c <__assert_fail@plt+0x8b54>
   19c28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19c2c:	str	r0, [fp, #-28]	; 0xffffffe4
   19c30:	movw	r0, #0
   19c34:	str	r0, [fp, #-44]	; 0xffffffd4
   19c38:	b	186dc <__assert_fail@plt+0x75f4>
   19c3c:	b	19c40 <__assert_fail@plt+0x8b58>
   19c40:	b	19c44 <__assert_fail@plt+0x8b5c>
   19c44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19c48:	movw	r1, #0
   19c4c:	cmp	r0, r1
   19c50:	beq	19cc4 <__assert_fail@plt+0x8bdc>
   19c54:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19c58:	tst	r0, #1
   19c5c:	bne	19cc4 <__assert_fail@plt+0x8bdc>
   19c60:	b	19c64 <__assert_fail@plt+0x8b7c>
   19c64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19c68:	ldrsb	r0, [r0]
   19c6c:	cmp	r0, #0
   19c70:	beq	19cc0 <__assert_fail@plt+0x8bd8>
   19c74:	b	19c78 <__assert_fail@plt+0x8b90>
   19c78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c80:	cmp	r0, r1
   19c84:	bcs	19ca0 <__assert_fail@plt+0x8bb8>
   19c88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19c8c:	ldrb	r0, [r0]
   19c90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c94:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19c98:	add	r1, r1, r2
   19c9c:	strb	r0, [r1]
   19ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ca4:	add	r0, r0, #1
   19ca8:	str	r0, [fp, #-44]	; 0xffffffd4
   19cac:	b	19cb0 <__assert_fail@plt+0x8bc8>
   19cb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19cb4:	add	r0, r0, #1
   19cb8:	str	r0, [fp, #-52]	; 0xffffffcc
   19cbc:	b	19c64 <__assert_fail@plt+0x8b7c>
   19cc0:	b	19cc4 <__assert_fail@plt+0x8bdc>
   19cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19cc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ccc:	cmp	r0, r1
   19cd0:	bcs	19ce8 <__assert_fail@plt+0x8c00>
   19cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19cdc:	add	r0, r0, r1
   19ce0:	movw	r1, #0
   19ce4:	strb	r1, [r0]
   19ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19cec:	str	r0, [fp, #-20]	; 0xffffffec
   19cf0:	b	19d5c <__assert_fail@plt+0x8c74>
   19cf4:	ldr	r0, [fp, #8]
   19cf8:	cmp	r0, #2
   19cfc:	bne	19d14 <__assert_fail@plt+0x8c2c>
   19d00:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19d04:	tst	r0, #1
   19d08:	beq	19d14 <__assert_fail@plt+0x8c2c>
   19d0c:	movw	r0, #4
   19d10:	str	r0, [fp, #8]
   19d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19d20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19d24:	ldr	ip, [fp, #8]
   19d28:	ldr	lr, [fp, #12]
   19d2c:	mvn	r4, #2
   19d30:	and	lr, lr, r4
   19d34:	ldr	r4, [fp, #20]
   19d38:	ldr	r5, [fp, #24]
   19d3c:	str	ip, [sp]
   19d40:	str	lr, [sp, #4]
   19d44:	movw	ip, #0
   19d48:	str	ip, [sp, #8]
   19d4c:	str	r4, [sp, #12]
   19d50:	str	r5, [sp, #16]
   19d54:	bl	18634 <__assert_fail@plt+0x754c>
   19d58:	str	r0, [fp, #-20]	; 0xffffffec
   19d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19d60:	sub	sp, fp, #16
   19d64:	pop	{r4, r5, r6, sl, fp, pc}
   19d68:	push	{fp, lr}
   19d6c:	mov	fp, sp
   19d70:	sub	sp, sp, #16
   19d74:	str	r0, [fp, #-4]
   19d78:	str	r1, [sp, #8]
   19d7c:	str	r2, [sp, #4]
   19d80:	ldr	r0, [fp, #-4]
   19d84:	ldr	r1, [sp, #8]
   19d88:	ldr	r3, [sp, #4]
   19d8c:	movw	r2, #0
   19d90:	bl	19d9c <__assert_fail@plt+0x8cb4>
   19d94:	mov	sp, fp
   19d98:	pop	{fp, pc}
   19d9c:	push	{r4, r5, r6, sl, fp, lr}
   19da0:	add	fp, sp, #16
   19da4:	sub	sp, sp, #80	; 0x50
   19da8:	str	r0, [fp, #-20]	; 0xffffffec
   19dac:	str	r1, [fp, #-24]	; 0xffffffe8
   19db0:	str	r2, [fp, #-28]	; 0xffffffe4
   19db4:	str	r3, [fp, #-32]	; 0xffffffe0
   19db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19dbc:	movw	r1, #0
   19dc0:	cmp	r0, r1
   19dc4:	beq	19dd4 <__assert_fail@plt+0x8cec>
   19dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19dcc:	str	r0, [sp, #40]	; 0x28
   19dd0:	b	19de4 <__assert_fail@plt+0x8cfc>
   19dd4:	movw	r0, #12672	; 0x3180
   19dd8:	movt	r0, #3
   19ddc:	str	r0, [sp, #40]	; 0x28
   19de0:	b	19de4 <__assert_fail@plt+0x8cfc>
   19de4:	ldr	r0, [sp, #40]	; 0x28
   19de8:	str	r0, [fp, #-36]	; 0xffffffdc
   19dec:	bl	11010 <__errno_location@plt>
   19df0:	ldr	r0, [r0]
   19df4:	str	r0, [fp, #-40]	; 0xffffffd8
   19df8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19dfc:	ldr	r0, [r0, #4]
   19e00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e04:	movw	r2, #0
   19e08:	cmp	r1, r2
   19e0c:	movw	r1, #0
   19e10:	movne	r1, #1
   19e14:	tst	r1, #1
   19e18:	mov	r1, r2
   19e1c:	moveq	r1, #1
   19e20:	orr	r0, r0, r1
   19e24:	str	r0, [fp, #-44]	; 0xffffffd4
   19e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19e34:	ldr	r1, [r1]
   19e38:	ldr	ip, [fp, #-44]	; 0xffffffd4
   19e3c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19e40:	add	lr, lr, #8
   19e44:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19e48:	ldr	r4, [r4, #40]	; 0x28
   19e4c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19e50:	ldr	r5, [r5, #44]	; 0x2c
   19e54:	str	r0, [sp, #36]	; 0x24
   19e58:	mov	r0, r2
   19e5c:	str	r1, [sp, #32]
   19e60:	mov	r1, r2
   19e64:	ldr	r2, [sp, #36]	; 0x24
   19e68:	ldr	r6, [sp, #32]
   19e6c:	str	r6, [sp]
   19e70:	str	ip, [sp, #4]
   19e74:	str	lr, [sp, #8]
   19e78:	str	r4, [sp, #12]
   19e7c:	str	r5, [sp, #16]
   19e80:	bl	18634 <__assert_fail@plt+0x754c>
   19e84:	add	r0, r0, #1
   19e88:	str	r0, [sp, #48]	; 0x30
   19e8c:	ldr	r0, [sp, #48]	; 0x30
   19e90:	bl	1c5c0 <__assert_fail@plt+0xb4d8>
   19e94:	str	r0, [sp, #44]	; 0x2c
   19e98:	ldr	r0, [sp, #44]	; 0x2c
   19e9c:	ldr	r1, [sp, #48]	; 0x30
   19ea0:	ldr	r2, [fp, #-20]	; 0xffffffec
   19ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ea8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19eac:	ldr	ip, [ip]
   19eb0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   19eb4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19eb8:	add	r4, r4, #8
   19ebc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19ec0:	ldr	r5, [r5, #40]	; 0x28
   19ec4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19ec8:	ldr	r6, [r6, #44]	; 0x2c
   19ecc:	str	ip, [sp]
   19ed0:	str	lr, [sp, #4]
   19ed4:	str	r4, [sp, #8]
   19ed8:	str	r5, [sp, #12]
   19edc:	str	r6, [sp, #16]
   19ee0:	bl	18634 <__assert_fail@plt+0x754c>
   19ee4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19ee8:	str	r0, [sp, #28]
   19eec:	str	r1, [sp, #24]
   19ef0:	bl	11010 <__errno_location@plt>
   19ef4:	ldr	r1, [sp, #24]
   19ef8:	str	r1, [r0]
   19efc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19f00:	movw	r2, #0
   19f04:	cmp	r0, r2
   19f08:	beq	19f1c <__assert_fail@plt+0x8e34>
   19f0c:	ldr	r0, [sp, #48]	; 0x30
   19f10:	sub	r0, r0, #1
   19f14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f18:	str	r0, [r1]
   19f1c:	ldr	r0, [sp, #44]	; 0x2c
   19f20:	sub	sp, fp, #16
   19f24:	pop	{r4, r5, r6, sl, fp, pc}
   19f28:	push	{fp, lr}
   19f2c:	mov	fp, sp
   19f30:	sub	sp, sp, #8
   19f34:	movw	r0, #12536	; 0x30f8
   19f38:	movt	r0, #3
   19f3c:	ldr	r0, [r0]
   19f40:	str	r0, [sp, #4]
   19f44:	movw	r0, #1
   19f48:	str	r0, [sp]
   19f4c:	ldr	r0, [sp]
   19f50:	movw	r1, #12540	; 0x30fc
   19f54:	movt	r1, #3
   19f58:	ldr	r1, [r1]
   19f5c:	cmp	r0, r1
   19f60:	bge	19f88 <__assert_fail@plt+0x8ea0>
   19f64:	ldr	r0, [sp, #4]
   19f68:	ldr	r1, [sp]
   19f6c:	add	r0, r0, r1, lsl #3
   19f70:	ldr	r0, [r0, #4]
   19f74:	bl	17e8c <__assert_fail@plt+0x6da4>
   19f78:	ldr	r0, [sp]
   19f7c:	add	r0, r0, #1
   19f80:	str	r0, [sp]
   19f84:	b	19f4c <__assert_fail@plt+0x8e64>
   19f88:	ldr	r0, [sp, #4]
   19f8c:	ldr	r0, [r0, #4]
   19f90:	movw	r1, #12720	; 0x31b0
   19f94:	movt	r1, #3
   19f98:	cmp	r0, r1
   19f9c:	beq	19fc8 <__assert_fail@plt+0x8ee0>
   19fa0:	ldr	r0, [sp, #4]
   19fa4:	ldr	r0, [r0, #4]
   19fa8:	bl	17e8c <__assert_fail@plt+0x6da4>
   19fac:	movw	r0, #256	; 0x100
   19fb0:	movw	r1, #12544	; 0x3100
   19fb4:	movt	r1, #3
   19fb8:	str	r0, [r1]
   19fbc:	movw	r0, #12720	; 0x31b0
   19fc0:	movt	r0, #3
   19fc4:	str	r0, [r1, #4]
   19fc8:	ldr	r0, [sp, #4]
   19fcc:	movw	r1, #12544	; 0x3100
   19fd0:	movt	r1, #3
   19fd4:	cmp	r0, r1
   19fd8:	beq	19ff8 <__assert_fail@plt+0x8f10>
   19fdc:	ldr	r0, [sp, #4]
   19fe0:	bl	17e8c <__assert_fail@plt+0x6da4>
   19fe4:	movw	r0, #12536	; 0x30f8
   19fe8:	movt	r0, #3
   19fec:	movw	r1, #12544	; 0x3100
   19ff0:	movt	r1, #3
   19ff4:	str	r1, [r0]
   19ff8:	movw	r0, #12540	; 0x30fc
   19ffc:	movt	r0, #3
   1a000:	movw	r1, #1
   1a004:	str	r1, [r0]
   1a008:	mov	sp, fp
   1a00c:	pop	{fp, pc}
   1a010:	push	{fp, lr}
   1a014:	mov	fp, sp
   1a018:	sub	sp, sp, #8
   1a01c:	str	r0, [sp, #4]
   1a020:	str	r1, [sp]
   1a024:	ldr	r0, [sp, #4]
   1a028:	ldr	r1, [sp]
   1a02c:	mvn	r2, #0
   1a030:	movw	r3, #12672	; 0x3180
   1a034:	movt	r3, #3
   1a038:	bl	1a044 <__assert_fail@plt+0x8f5c>
   1a03c:	mov	sp, fp
   1a040:	pop	{fp, pc}
   1a044:	push	{r4, r5, r6, sl, fp, lr}
   1a048:	add	fp, sp, #16
   1a04c:	sub	sp, sp, #80	; 0x50
   1a050:	str	r0, [fp, #-20]	; 0xffffffec
   1a054:	str	r1, [fp, #-24]	; 0xffffffe8
   1a058:	str	r2, [fp, #-28]	; 0xffffffe4
   1a05c:	str	r3, [fp, #-32]	; 0xffffffe0
   1a060:	bl	11010 <__errno_location@plt>
   1a064:	ldr	r1, [pc, #672]	; 1a30c <__assert_fail@plt+0x9224>
   1a068:	ldr	r0, [r0]
   1a06c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a070:	movw	r0, #12536	; 0x30f8
   1a074:	movt	r0, #3
   1a078:	ldr	r0, [r0]
   1a07c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a080:	str	r1, [fp, #-44]	; 0xffffffd4
   1a084:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a088:	movw	r1, #0
   1a08c:	cmp	r1, r0
   1a090:	bgt	1a0a4 <__assert_fail@plt+0x8fbc>
   1a094:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a098:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a09c:	cmp	r0, r1
   1a0a0:	blt	1a0a8 <__assert_fail@plt+0x8fc0>
   1a0a4:	bl	110d0 <abort@plt>
   1a0a8:	movw	r0, #12540	; 0x30fc
   1a0ac:	movt	r0, #3
   1a0b0:	ldr	r0, [r0]
   1a0b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a0b8:	cmp	r0, r1
   1a0bc:	bgt	1a1b4 <__assert_fail@plt+0x90cc>
   1a0c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a0c4:	movw	r1, #12544	; 0x3100
   1a0c8:	movt	r1, #3
   1a0cc:	cmp	r0, r1
   1a0d0:	movw	r0, #0
   1a0d4:	moveq	r0, #1
   1a0d8:	and	r0, r0, #1
   1a0dc:	strb	r0, [fp, #-45]	; 0xffffffd3
   1a0e0:	movw	r0, #12540	; 0x30fc
   1a0e4:	movt	r0, #3
   1a0e8:	ldr	r0, [r0]
   1a0ec:	str	r0, [sp, #44]	; 0x2c
   1a0f0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1a0f4:	tst	r0, #1
   1a0f8:	beq	1a108 <__assert_fail@plt+0x9020>
   1a0fc:	movw	r0, #0
   1a100:	str	r0, [sp, #24]
   1a104:	b	1a110 <__assert_fail@plt+0x9028>
   1a108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a10c:	str	r0, [sp, #24]
   1a110:	ldr	r0, [sp, #24]
   1a114:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a118:	movw	r2, #12540	; 0x30fc
   1a11c:	movt	r2, #3
   1a120:	ldr	r2, [r2]
   1a124:	sub	r1, r1, r2
   1a128:	add	r2, r1, #1
   1a12c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a130:	add	r1, sp, #44	; 0x2c
   1a134:	movw	ip, #8
   1a138:	str	ip, [sp]
   1a13c:	bl	1c7fc <__assert_fail@plt+0xb714>
   1a140:	str	r0, [fp, #-40]	; 0xffffffd8
   1a144:	movw	r1, #12536	; 0x30f8
   1a148:	movt	r1, #3
   1a14c:	str	r0, [r1]
   1a150:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1a154:	tst	r0, #1
   1a158:	beq	1a178 <__assert_fail@plt+0x9090>
   1a15c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a160:	movw	r1, #12544	; 0x3100
   1a164:	movt	r1, #3
   1a168:	ldr	r2, [r1]
   1a16c:	str	r2, [r0]
   1a170:	ldr	r1, [r1, #4]
   1a174:	str	r1, [r0, #4]
   1a178:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a17c:	movw	r1, #12540	; 0x30fc
   1a180:	movt	r1, #3
   1a184:	ldr	r1, [r1]
   1a188:	add	r0, r0, r1, lsl #3
   1a18c:	ldr	r2, [sp, #44]	; 0x2c
   1a190:	sub	r1, r2, r1
   1a194:	lsl	r2, r1, #3
   1a198:	movw	r1, #0
   1a19c:	and	r1, r1, #255	; 0xff
   1a1a0:	bl	11028 <memset@plt>
   1a1a4:	ldr	r0, [sp, #44]	; 0x2c
   1a1a8:	movw	r1, #12540	; 0x30fc
   1a1ac:	movt	r1, #3
   1a1b0:	str	r0, [r1]
   1a1b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a1b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a1bc:	ldr	r0, [r0, r1, lsl #3]
   1a1c0:	str	r0, [sp, #40]	; 0x28
   1a1c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a1c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a1cc:	add	r0, r0, r1, lsl #3
   1a1d0:	ldr	r0, [r0, #4]
   1a1d4:	str	r0, [sp, #36]	; 0x24
   1a1d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1dc:	ldr	r0, [r0, #4]
   1a1e0:	orr	r0, r0, #1
   1a1e4:	str	r0, [sp, #32]
   1a1e8:	ldr	r0, [sp, #36]	; 0x24
   1a1ec:	ldr	r1, [sp, #40]	; 0x28
   1a1f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a1f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a1f8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1a1fc:	ldr	ip, [ip]
   1a200:	ldr	lr, [sp, #32]
   1a204:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1a208:	add	r4, r4, #8
   1a20c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1a210:	ldr	r5, [r5, #40]	; 0x28
   1a214:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1a218:	ldr	r6, [r6, #44]	; 0x2c
   1a21c:	str	ip, [sp]
   1a220:	str	lr, [sp, #4]
   1a224:	str	r4, [sp, #8]
   1a228:	str	r5, [sp, #12]
   1a22c:	str	r6, [sp, #16]
   1a230:	bl	18634 <__assert_fail@plt+0x754c>
   1a234:	str	r0, [sp, #28]
   1a238:	ldr	r0, [sp, #40]	; 0x28
   1a23c:	ldr	r1, [sp, #28]
   1a240:	cmp	r0, r1
   1a244:	bhi	1a2ec <__assert_fail@plt+0x9204>
   1a248:	ldr	r0, [sp, #28]
   1a24c:	add	r0, r0, #1
   1a250:	str	r0, [sp, #40]	; 0x28
   1a254:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a258:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a25c:	add	r1, r1, r2, lsl #3
   1a260:	str	r0, [r1]
   1a264:	ldr	r0, [sp, #36]	; 0x24
   1a268:	movw	r1, #12720	; 0x31b0
   1a26c:	movt	r1, #3
   1a270:	cmp	r0, r1
   1a274:	beq	1a280 <__assert_fail@plt+0x9198>
   1a278:	ldr	r0, [sp, #36]	; 0x24
   1a27c:	bl	17e8c <__assert_fail@plt+0x6da4>
   1a280:	ldr	r0, [sp, #40]	; 0x28
   1a284:	bl	1c5c0 <__assert_fail@plt+0xb4d8>
   1a288:	mov	r1, r0
   1a28c:	str	r0, [sp, #36]	; 0x24
   1a290:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a294:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a298:	add	r0, r0, r2, lsl #3
   1a29c:	str	r1, [r0, #4]
   1a2a0:	ldr	r0, [sp, #36]	; 0x24
   1a2a4:	ldr	r1, [sp, #40]	; 0x28
   1a2a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a2ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a2b0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1a2b4:	ldr	ip, [ip]
   1a2b8:	ldr	lr, [sp, #32]
   1a2bc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1a2c0:	add	r4, r4, #8
   1a2c4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1a2c8:	ldr	r5, [r5, #40]	; 0x28
   1a2cc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1a2d0:	ldr	r6, [r6, #44]	; 0x2c
   1a2d4:	str	ip, [sp]
   1a2d8:	str	lr, [sp, #4]
   1a2dc:	str	r4, [sp, #8]
   1a2e0:	str	r5, [sp, #12]
   1a2e4:	str	r6, [sp, #16]
   1a2e8:	bl	18634 <__assert_fail@plt+0x754c>
   1a2ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a2f0:	str	r0, [sp, #20]
   1a2f4:	bl	11010 <__errno_location@plt>
   1a2f8:	ldr	r1, [sp, #20]
   1a2fc:	str	r1, [r0]
   1a300:	ldr	r0, [sp, #36]	; 0x24
   1a304:	sub	sp, fp, #16
   1a308:	pop	{r4, r5, r6, sl, fp, pc}
   1a30c:	svcvc	0x00ffffff
   1a310:	push	{fp, lr}
   1a314:	mov	fp, sp
   1a318:	sub	sp, sp, #16
   1a31c:	str	r0, [fp, #-4]
   1a320:	str	r1, [sp, #8]
   1a324:	str	r2, [sp, #4]
   1a328:	ldr	r0, [fp, #-4]
   1a32c:	ldr	r1, [sp, #8]
   1a330:	ldr	r2, [sp, #4]
   1a334:	movw	r3, #12672	; 0x3180
   1a338:	movt	r3, #3
   1a33c:	bl	1a044 <__assert_fail@plt+0x8f5c>
   1a340:	mov	sp, fp
   1a344:	pop	{fp, pc}
   1a348:	push	{fp, lr}
   1a34c:	mov	fp, sp
   1a350:	sub	sp, sp, #8
   1a354:	str	r0, [sp, #4]
   1a358:	ldr	r1, [sp, #4]
   1a35c:	movw	r0, #0
   1a360:	bl	1a010 <__assert_fail@plt+0x8f28>
   1a364:	mov	sp, fp
   1a368:	pop	{fp, pc}
   1a36c:	push	{fp, lr}
   1a370:	mov	fp, sp
   1a374:	sub	sp, sp, #8
   1a378:	str	r0, [sp, #4]
   1a37c:	str	r1, [sp]
   1a380:	ldr	r1, [sp, #4]
   1a384:	ldr	r2, [sp]
   1a388:	movw	r0, #0
   1a38c:	bl	1a310 <__assert_fail@plt+0x9228>
   1a390:	mov	sp, fp
   1a394:	pop	{fp, pc}
   1a398:	push	{fp, lr}
   1a39c:	mov	fp, sp
   1a3a0:	sub	sp, sp, #64	; 0x40
   1a3a4:	str	r0, [fp, #-4]
   1a3a8:	str	r1, [fp, #-8]
   1a3ac:	str	r2, [fp, #-12]
   1a3b0:	ldr	r1, [fp, #-8]
   1a3b4:	add	r0, sp, #4
   1a3b8:	bl	1a3d8 <__assert_fail@plt+0x92f0>
   1a3bc:	ldr	r0, [fp, #-4]
   1a3c0:	ldr	r1, [fp, #-12]
   1a3c4:	mvn	r2, #0
   1a3c8:	add	r3, sp, #4
   1a3cc:	bl	1a044 <__assert_fail@plt+0x8f5c>
   1a3d0:	mov	sp, fp
   1a3d4:	pop	{fp, pc}
   1a3d8:	push	{fp, lr}
   1a3dc:	mov	fp, sp
   1a3e0:	sub	sp, sp, #8
   1a3e4:	str	r1, [sp, #4]
   1a3e8:	mov	r1, r0
   1a3ec:	str	r0, [sp]
   1a3f0:	mov	r0, r1
   1a3f4:	movw	r1, #0
   1a3f8:	and	r1, r1, #255	; 0xff
   1a3fc:	movw	r2, #48	; 0x30
   1a400:	bl	11028 <memset@plt>
   1a404:	ldr	r0, [sp, #4]
   1a408:	cmp	r0, #10
   1a40c:	bne	1a414 <__assert_fail@plt+0x932c>
   1a410:	bl	110d0 <abort@plt>
   1a414:	ldr	r0, [sp, #4]
   1a418:	ldr	r1, [sp]
   1a41c:	str	r0, [r1]
   1a420:	mov	sp, fp
   1a424:	pop	{fp, pc}
   1a428:	push	{fp, lr}
   1a42c:	mov	fp, sp
   1a430:	sub	sp, sp, #64	; 0x40
   1a434:	str	r0, [fp, #-4]
   1a438:	str	r1, [fp, #-8]
   1a43c:	str	r2, [fp, #-12]
   1a440:	str	r3, [fp, #-16]
   1a444:	ldr	r1, [fp, #-8]
   1a448:	mov	r0, sp
   1a44c:	bl	1a3d8 <__assert_fail@plt+0x92f0>
   1a450:	ldr	r0, [fp, #-4]
   1a454:	ldr	r1, [fp, #-12]
   1a458:	ldr	r2, [fp, #-16]
   1a45c:	mov	r3, sp
   1a460:	bl	1a044 <__assert_fail@plt+0x8f5c>
   1a464:	mov	sp, fp
   1a468:	pop	{fp, pc}
   1a46c:	push	{fp, lr}
   1a470:	mov	fp, sp
   1a474:	sub	sp, sp, #8
   1a478:	str	r0, [sp, #4]
   1a47c:	str	r1, [sp]
   1a480:	ldr	r1, [sp, #4]
   1a484:	ldr	r2, [sp]
   1a488:	movw	r0, #0
   1a48c:	bl	1a398 <__assert_fail@plt+0x92b0>
   1a490:	mov	sp, fp
   1a494:	pop	{fp, pc}
   1a498:	push	{fp, lr}
   1a49c:	mov	fp, sp
   1a4a0:	sub	sp, sp, #16
   1a4a4:	str	r0, [fp, #-4]
   1a4a8:	str	r1, [sp, #8]
   1a4ac:	str	r2, [sp, #4]
   1a4b0:	ldr	r1, [fp, #-4]
   1a4b4:	ldr	r2, [sp, #8]
   1a4b8:	ldr	r3, [sp, #4]
   1a4bc:	movw	r0, #0
   1a4c0:	bl	1a428 <__assert_fail@plt+0x9340>
   1a4c4:	mov	sp, fp
   1a4c8:	pop	{fp, pc}
   1a4cc:	push	{fp, lr}
   1a4d0:	mov	fp, sp
   1a4d4:	sub	sp, sp, #72	; 0x48
   1a4d8:	movw	r3, #12672	; 0x3180
   1a4dc:	movt	r3, #3
   1a4e0:	str	r0, [fp, #-4]
   1a4e4:	str	r1, [fp, #-8]
   1a4e8:	strb	r2, [fp, #-9]
   1a4ec:	add	r0, sp, #12
   1a4f0:	mov	r1, r0
   1a4f4:	str	r0, [sp, #8]
   1a4f8:	mov	r0, r1
   1a4fc:	mov	r1, r3
   1a500:	movw	r2, #48	; 0x30
   1a504:	bl	10ee4 <memcpy@plt>
   1a508:	ldr	r0, [sp, #8]
   1a50c:	ldrb	r1, [fp, #-9]
   1a510:	movw	r2, #1
   1a514:	bl	183dc <__assert_fail@plt+0x72f4>
   1a518:	ldr	r1, [fp, #-4]
   1a51c:	ldr	r2, [fp, #-8]
   1a520:	movw	r3, #0
   1a524:	str	r0, [sp, #4]
   1a528:	mov	r0, r3
   1a52c:	add	r3, sp, #12
   1a530:	bl	1a044 <__assert_fail@plt+0x8f5c>
   1a534:	mov	sp, fp
   1a538:	pop	{fp, pc}
   1a53c:	push	{fp, lr}
   1a540:	mov	fp, sp
   1a544:	sub	sp, sp, #8
   1a548:	str	r0, [sp, #4]
   1a54c:	strb	r1, [sp, #3]
   1a550:	ldr	r0, [sp, #4]
   1a554:	mvn	r1, #0
   1a558:	ldrb	r2, [sp, #3]
   1a55c:	bl	1a4cc <__assert_fail@plt+0x93e4>
   1a560:	mov	sp, fp
   1a564:	pop	{fp, pc}
   1a568:	push	{fp, lr}
   1a56c:	mov	fp, sp
   1a570:	sub	sp, sp, #8
   1a574:	str	r0, [sp, #4]
   1a578:	ldr	r0, [sp, #4]
   1a57c:	movw	r1, #58	; 0x3a
   1a580:	and	r1, r1, #255	; 0xff
   1a584:	bl	1a53c <__assert_fail@plt+0x9454>
   1a588:	mov	sp, fp
   1a58c:	pop	{fp, pc}
   1a590:	push	{fp, lr}
   1a594:	mov	fp, sp
   1a598:	sub	sp, sp, #8
   1a59c:	str	r0, [sp, #4]
   1a5a0:	str	r1, [sp]
   1a5a4:	ldr	r0, [sp, #4]
   1a5a8:	ldr	r1, [sp]
   1a5ac:	movw	r2, #58	; 0x3a
   1a5b0:	and	r2, r2, #255	; 0xff
   1a5b4:	bl	1a4cc <__assert_fail@plt+0x93e4>
   1a5b8:	mov	sp, fp
   1a5bc:	pop	{fp, pc}
   1a5c0:	push	{fp, lr}
   1a5c4:	mov	fp, sp
   1a5c8:	sub	sp, sp, #120	; 0x78
   1a5cc:	str	r0, [fp, #-4]
   1a5d0:	str	r1, [fp, #-8]
   1a5d4:	str	r2, [fp, #-12]
   1a5d8:	ldr	r1, [fp, #-8]
   1a5dc:	add	r0, sp, #12
   1a5e0:	bl	1a3d8 <__assert_fail@plt+0x92f0>
   1a5e4:	add	r0, sp, #60	; 0x3c
   1a5e8:	mov	r1, r0
   1a5ec:	add	r2, sp, #12
   1a5f0:	str	r0, [sp, #8]
   1a5f4:	mov	r0, r1
   1a5f8:	mov	r1, r2
   1a5fc:	movw	r2, #48	; 0x30
   1a600:	bl	10ee4 <memcpy@plt>
   1a604:	ldr	r0, [sp, #8]
   1a608:	movw	r1, #58	; 0x3a
   1a60c:	and	r1, r1, #255	; 0xff
   1a610:	movw	r2, #1
   1a614:	bl	183dc <__assert_fail@plt+0x72f4>
   1a618:	ldr	r1, [fp, #-4]
   1a61c:	ldr	r2, [fp, #-12]
   1a620:	str	r0, [sp, #4]
   1a624:	mov	r0, r1
   1a628:	mov	r1, r2
   1a62c:	mvn	r2, #0
   1a630:	add	r3, sp, #60	; 0x3c
   1a634:	bl	1a044 <__assert_fail@plt+0x8f5c>
   1a638:	mov	sp, fp
   1a63c:	pop	{fp, pc}
   1a640:	push	{fp, lr}
   1a644:	mov	fp, sp
   1a648:	sub	sp, sp, #24
   1a64c:	str	r0, [fp, #-4]
   1a650:	str	r1, [fp, #-8]
   1a654:	str	r2, [sp, #12]
   1a658:	str	r3, [sp, #8]
   1a65c:	ldr	r0, [fp, #-4]
   1a660:	ldr	r1, [fp, #-8]
   1a664:	ldr	r2, [sp, #12]
   1a668:	ldr	r3, [sp, #8]
   1a66c:	mvn	ip, #0
   1a670:	str	ip, [sp]
   1a674:	bl	1a680 <__assert_fail@plt+0x9598>
   1a678:	mov	sp, fp
   1a67c:	pop	{fp, pc}
   1a680:	push	{fp, lr}
   1a684:	mov	fp, sp
   1a688:	sub	sp, sp, #72	; 0x48
   1a68c:	ldr	ip, [fp, #8]
   1a690:	movw	lr, #12672	; 0x3180
   1a694:	movt	lr, #3
   1a698:	str	r0, [fp, #-4]
   1a69c:	str	r1, [fp, #-8]
   1a6a0:	str	r2, [fp, #-12]
   1a6a4:	str	r3, [fp, #-16]
   1a6a8:	add	r0, sp, #8
   1a6ac:	mov	r1, r0
   1a6b0:	str	r0, [sp, #4]
   1a6b4:	mov	r0, r1
   1a6b8:	mov	r1, lr
   1a6bc:	movw	r2, #48	; 0x30
   1a6c0:	str	ip, [sp]
   1a6c4:	bl	10ee4 <memcpy@plt>
   1a6c8:	ldr	r1, [fp, #-8]
   1a6cc:	ldr	r2, [fp, #-12]
   1a6d0:	ldr	r0, [sp, #4]
   1a6d4:	bl	184dc <__assert_fail@plt+0x73f4>
   1a6d8:	ldr	r0, [fp, #-4]
   1a6dc:	ldr	r1, [fp, #-16]
   1a6e0:	ldr	r2, [fp, #8]
   1a6e4:	add	r3, sp, #8
   1a6e8:	bl	1a044 <__assert_fail@plt+0x8f5c>
   1a6ec:	mov	sp, fp
   1a6f0:	pop	{fp, pc}
   1a6f4:	push	{fp, lr}
   1a6f8:	mov	fp, sp
   1a6fc:	sub	sp, sp, #16
   1a700:	str	r0, [fp, #-4]
   1a704:	str	r1, [sp, #8]
   1a708:	str	r2, [sp, #4]
   1a70c:	ldr	r1, [fp, #-4]
   1a710:	ldr	r2, [sp, #8]
   1a714:	ldr	r3, [sp, #4]
   1a718:	movw	r0, #0
   1a71c:	bl	1a640 <__assert_fail@plt+0x9558>
   1a720:	mov	sp, fp
   1a724:	pop	{fp, pc}
   1a728:	push	{fp, lr}
   1a72c:	mov	fp, sp
   1a730:	sub	sp, sp, #24
   1a734:	str	r0, [fp, #-4]
   1a738:	str	r1, [fp, #-8]
   1a73c:	str	r2, [sp, #12]
   1a740:	str	r3, [sp, #8]
   1a744:	ldr	r1, [fp, #-4]
   1a748:	ldr	r2, [fp, #-8]
   1a74c:	ldr	r3, [sp, #12]
   1a750:	ldr	r0, [sp, #8]
   1a754:	movw	ip, #0
   1a758:	str	r0, [sp, #4]
   1a75c:	mov	r0, ip
   1a760:	ldr	ip, [sp, #4]
   1a764:	str	ip, [sp]
   1a768:	bl	1a680 <__assert_fail@plt+0x9598>
   1a76c:	mov	sp, fp
   1a770:	pop	{fp, pc}
   1a774:	push	{fp, lr}
   1a778:	mov	fp, sp
   1a77c:	sub	sp, sp, #16
   1a780:	str	r0, [fp, #-4]
   1a784:	str	r1, [sp, #8]
   1a788:	str	r2, [sp, #4]
   1a78c:	ldr	r0, [fp, #-4]
   1a790:	ldr	r1, [sp, #8]
   1a794:	ldr	r2, [sp, #4]
   1a798:	movw	r3, #12552	; 0x3108
   1a79c:	movt	r3, #3
   1a7a0:	bl	1a044 <__assert_fail@plt+0x8f5c>
   1a7a4:	mov	sp, fp
   1a7a8:	pop	{fp, pc}
   1a7ac:	push	{fp, lr}
   1a7b0:	mov	fp, sp
   1a7b4:	sub	sp, sp, #8
   1a7b8:	str	r0, [sp, #4]
   1a7bc:	str	r1, [sp]
   1a7c0:	ldr	r1, [sp, #4]
   1a7c4:	ldr	r2, [sp]
   1a7c8:	movw	r0, #0
   1a7cc:	bl	1a774 <__assert_fail@plt+0x968c>
   1a7d0:	mov	sp, fp
   1a7d4:	pop	{fp, pc}
   1a7d8:	push	{fp, lr}
   1a7dc:	mov	fp, sp
   1a7e0:	sub	sp, sp, #8
   1a7e4:	str	r0, [sp, #4]
   1a7e8:	str	r1, [sp]
   1a7ec:	ldr	r0, [sp, #4]
   1a7f0:	ldr	r1, [sp]
   1a7f4:	mvn	r2, #0
   1a7f8:	bl	1a774 <__assert_fail@plt+0x968c>
   1a7fc:	mov	sp, fp
   1a800:	pop	{fp, pc}
   1a804:	push	{fp, lr}
   1a808:	mov	fp, sp
   1a80c:	sub	sp, sp, #8
   1a810:	str	r0, [sp, #4]
   1a814:	ldr	r1, [sp, #4]
   1a818:	movw	r0, #0
   1a81c:	bl	1a7d8 <__assert_fail@plt+0x96f0>
   1a820:	mov	sp, fp
   1a824:	pop	{fp, pc}
   1a828:	push	{fp, lr}
   1a82c:	mov	fp, sp
   1a830:	sub	sp, sp, #24
   1a834:	str	r0, [fp, #-8]
   1a838:	str	r1, [sp, #12]
   1a83c:	ldr	r0, [fp, #-8]
   1a840:	bl	10fe0 <gettext@plt>
   1a844:	str	r0, [sp, #8]
   1a848:	ldr	r0, [sp, #8]
   1a84c:	ldr	r1, [fp, #-8]
   1a850:	cmp	r0, r1
   1a854:	beq	1a864 <__assert_fail@plt+0x977c>
   1a858:	ldr	r0, [sp, #8]
   1a85c:	str	r0, [fp, #-4]
   1a860:	b	1a930 <__assert_fail@plt+0x9848>
   1a864:	bl	2168c <__assert_fail@plt+0x105a4>
   1a868:	str	r0, [sp, #4]
   1a86c:	ldr	r0, [sp, #4]
   1a870:	movw	r1, #10933	; 0x2ab5
   1a874:	movt	r1, #2
   1a878:	bl	21504 <__assert_fail@plt+0x1041c>
   1a87c:	cmp	r0, #0
   1a880:	bne	1a8b8 <__assert_fail@plt+0x97d0>
   1a884:	ldr	r0, [fp, #-8]
   1a888:	ldrb	r0, [r0]
   1a88c:	cmp	r0, #96	; 0x60
   1a890:	movw	r0, #0
   1a894:	moveq	r0, #1
   1a898:	tst	r0, #1
   1a89c:	movw	r0, #10943	; 0x2abf
   1a8a0:	movt	r0, #2
   1a8a4:	movw	r1, #10939	; 0x2abb
   1a8a8:	movt	r1, #2
   1a8ac:	movne	r0, r1
   1a8b0:	str	r0, [fp, #-4]
   1a8b4:	b	1a930 <__assert_fail@plt+0x9848>
   1a8b8:	ldr	r0, [sp, #4]
   1a8bc:	movw	r1, #10947	; 0x2ac3
   1a8c0:	movt	r1, #2
   1a8c4:	bl	21504 <__assert_fail@plt+0x1041c>
   1a8c8:	cmp	r0, #0
   1a8cc:	bne	1a904 <__assert_fail@plt+0x981c>
   1a8d0:	ldr	r0, [fp, #-8]
   1a8d4:	ldrb	r0, [r0]
   1a8d8:	cmp	r0, #96	; 0x60
   1a8dc:	movw	r0, #0
   1a8e0:	moveq	r0, #1
   1a8e4:	tst	r0, #1
   1a8e8:	movw	r0, #10959	; 0x2acf
   1a8ec:	movt	r0, #2
   1a8f0:	movw	r1, #10955	; 0x2acb
   1a8f4:	movt	r1, #2
   1a8f8:	movne	r0, r1
   1a8fc:	str	r0, [fp, #-4]
   1a900:	b	1a930 <__assert_fail@plt+0x9848>
   1a904:	ldr	r0, [sp, #12]
   1a908:	cmp	r0, #9
   1a90c:	movw	r0, #0
   1a910:	moveq	r0, #1
   1a914:	tst	r0, #1
   1a918:	movw	r0, #10931	; 0x2ab3
   1a91c:	movt	r0, #2
   1a920:	movw	r1, #10927	; 0x2aaf
   1a924:	movt	r1, #2
   1a928:	movne	r0, r1
   1a92c:	str	r0, [fp, #-4]
   1a930:	ldr	r0, [fp, #-4]
   1a934:	mov	sp, fp
   1a938:	pop	{fp, pc}
   1a93c:	push	{fp, lr}
   1a940:	mov	fp, sp
   1a944:	sub	sp, sp, #96	; 0x60
   1a948:	str	r0, [fp, #-8]
   1a94c:	str	r1, [fp, #-12]
   1a950:	str	r2, [fp, #-16]
   1a954:	b	1ad0c <__assert_fail@plt+0x9c24>
   1a958:	b	1ab2c <__assert_fail@plt+0x9a44>
   1a95c:	ldr	r0, [fp, #-16]
   1a960:	cmp	r0, #0
   1a964:	bcs	1aa68 <__assert_fail@plt+0x9980>
   1a968:	ldr	r0, [fp, #-12]
   1a96c:	cmp	r0, #0
   1a970:	bcs	1a9f8 <__assert_fail@plt+0x9910>
   1a974:	b	1a994 <__assert_fail@plt+0x98ac>
   1a978:	ldr	r0, [fp, #-12]
   1a97c:	ldr	r1, [fp, #-16]
   1a980:	movw	r2, #127	; 0x7f
   1a984:	udiv	r1, r2, r1
   1a988:	cmp	r0, r1
   1a98c:	bcc	1aafc <__assert_fail@plt+0x9a14>
   1a990:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1a994:	b	1a9a8 <__assert_fail@plt+0x98c0>
   1a998:	ldr	r0, [fp, #-16]
   1a99c:	cmp	r0, #1
   1a9a0:	bcc	1a9b8 <__assert_fail@plt+0x98d0>
   1a9a4:	b	1a9c4 <__assert_fail@plt+0x98dc>
   1a9a8:	ldr	r0, [fp, #-16]
   1a9ac:	movw	r1, #0
   1a9b0:	cmp	r1, r0
   1a9b4:	bcs	1a9c4 <__assert_fail@plt+0x98dc>
   1a9b8:	movw	r0, #0
   1a9bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a9c0:	b	1a9dc <__assert_fail@plt+0x98f4>
   1a9c4:	ldr	r0, [fp, #-16]
   1a9c8:	movw	r1, #0
   1a9cc:	sub	r0, r1, r0
   1a9d0:	movw	r1, #127	; 0x7f
   1a9d4:	udiv	r0, r1, r0
   1a9d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1a9dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9e0:	ldr	r1, [fp, #-12]
   1a9e4:	mvn	r2, #0
   1a9e8:	sub	r1, r2, r1
   1a9ec:	cmp	r0, r1
   1a9f0:	bls	1aafc <__assert_fail@plt+0x9a14>
   1a9f4:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1a9f8:	ldr	r0, [fp, #-16]
   1a9fc:	cmn	r0, #1
   1aa00:	bne	1aa4c <__assert_fail@plt+0x9964>
   1aa04:	b	1aa24 <__assert_fail@plt+0x993c>
   1aa08:	ldr	r0, [fp, #-12]
   1aa0c:	mvn	r1, #127	; 0x7f
   1aa10:	add	r0, r0, r1
   1aa14:	movw	r1, #0
   1aa18:	cmp	r1, r0
   1aa1c:	bcc	1aafc <__assert_fail@plt+0x9a14>
   1aa20:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1aa24:	ldr	r0, [fp, #-12]
   1aa28:	movw	r1, #0
   1aa2c:	cmp	r1, r0
   1aa30:	bcs	1ab14 <__assert_fail@plt+0x9a2c>
   1aa34:	ldr	r0, [fp, #-12]
   1aa38:	sub	r0, r0, #1
   1aa3c:	movw	r1, #127	; 0x7f
   1aa40:	cmp	r1, r0
   1aa44:	bcc	1aafc <__assert_fail@plt+0x9a14>
   1aa48:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1aa4c:	ldr	r0, [fp, #-16]
   1aa50:	mvn	r1, #127	; 0x7f
   1aa54:	udiv	r0, r1, r0
   1aa58:	ldr	r1, [fp, #-12]
   1aa5c:	cmp	r0, r1
   1aa60:	bcc	1aafc <__assert_fail@plt+0x9a14>
   1aa64:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1aa68:	ldr	r0, [fp, #-16]
   1aa6c:	cmp	r0, #0
   1aa70:	bne	1aa78 <__assert_fail@plt+0x9990>
   1aa74:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1aa78:	ldr	r0, [fp, #-12]
   1aa7c:	cmp	r0, #0
   1aa80:	bcs	1aae4 <__assert_fail@plt+0x99fc>
   1aa84:	ldr	r0, [fp, #-12]
   1aa88:	cmn	r0, #1
   1aa8c:	bne	1aac8 <__assert_fail@plt+0x99e0>
   1aa90:	b	1aab0 <__assert_fail@plt+0x99c8>
   1aa94:	ldr	r0, [fp, #-16]
   1aa98:	mvn	r1, #127	; 0x7f
   1aa9c:	add	r0, r0, r1
   1aaa0:	movw	r1, #0
   1aaa4:	cmp	r1, r0
   1aaa8:	bcc	1aafc <__assert_fail@plt+0x9a14>
   1aaac:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1aab0:	ldr	r0, [fp, #-16]
   1aab4:	sub	r0, r0, #1
   1aab8:	movw	r1, #127	; 0x7f
   1aabc:	cmp	r1, r0
   1aac0:	bcc	1aafc <__assert_fail@plt+0x9a14>
   1aac4:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1aac8:	ldr	r0, [fp, #-12]
   1aacc:	mvn	r1, #127	; 0x7f
   1aad0:	udiv	r0, r1, r0
   1aad4:	ldr	r1, [fp, #-16]
   1aad8:	cmp	r0, r1
   1aadc:	bcc	1aafc <__assert_fail@plt+0x9a14>
   1aae0:	b	1ab14 <__assert_fail@plt+0x9a2c>
   1aae4:	ldr	r0, [fp, #-16]
   1aae8:	movw	r1, #127	; 0x7f
   1aaec:	udiv	r0, r1, r0
   1aaf0:	ldr	r1, [fp, #-12]
   1aaf4:	cmp	r0, r1
   1aaf8:	bcs	1ab14 <__assert_fail@plt+0x9a2c>
   1aafc:	ldr	r0, [fp, #-12]
   1ab00:	ldr	r1, [fp, #-16]
   1ab04:	mul	r0, r0, r1
   1ab08:	sxtb	r0, r0
   1ab0c:	str	r0, [fp, #-20]	; 0xffffffec
   1ab10:	b	1bc3c <__assert_fail@plt+0xab54>
   1ab14:	ldr	r0, [fp, #-12]
   1ab18:	ldr	r1, [fp, #-16]
   1ab1c:	mul	r0, r0, r1
   1ab20:	sxtb	r0, r0
   1ab24:	str	r0, [fp, #-20]	; 0xffffffec
   1ab28:	b	1bc54 <__assert_fail@plt+0xab6c>
   1ab2c:	ldr	r0, [fp, #-16]
   1ab30:	cmp	r0, #0
   1ab34:	bcs	1ac40 <__assert_fail@plt+0x9b58>
   1ab38:	ldr	r0, [fp, #-12]
   1ab3c:	cmp	r0, #0
   1ab40:	bcs	1abc8 <__assert_fail@plt+0x9ae0>
   1ab44:	b	1ab64 <__assert_fail@plt+0x9a7c>
   1ab48:	ldr	r0, [fp, #-12]
   1ab4c:	ldr	r1, [fp, #-16]
   1ab50:	movw	r2, #255	; 0xff
   1ab54:	udiv	r1, r2, r1
   1ab58:	cmp	r0, r1
   1ab5c:	bcc	1acdc <__assert_fail@plt+0x9bf4>
   1ab60:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1ab64:	b	1ab78 <__assert_fail@plt+0x9a90>
   1ab68:	ldr	r0, [fp, #-16]
   1ab6c:	cmp	r0, #1
   1ab70:	bcc	1ab88 <__assert_fail@plt+0x9aa0>
   1ab74:	b	1ab94 <__assert_fail@plt+0x9aac>
   1ab78:	ldr	r0, [fp, #-16]
   1ab7c:	movw	r1, #0
   1ab80:	cmp	r1, r0
   1ab84:	bcs	1ab94 <__assert_fail@plt+0x9aac>
   1ab88:	movw	r0, #0
   1ab8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab90:	b	1abac <__assert_fail@plt+0x9ac4>
   1ab94:	ldr	r0, [fp, #-16]
   1ab98:	movw	r1, #0
   1ab9c:	sub	r0, r1, r0
   1aba0:	movw	r1, #255	; 0xff
   1aba4:	udiv	r0, r1, r0
   1aba8:	str	r0, [fp, #-28]	; 0xffffffe4
   1abac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1abb0:	ldr	r1, [fp, #-12]
   1abb4:	mvn	r2, #0
   1abb8:	sub	r1, r2, r1
   1abbc:	cmp	r0, r1
   1abc0:	bls	1acdc <__assert_fail@plt+0x9bf4>
   1abc4:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1abc8:	b	1abd0 <__assert_fail@plt+0x9ae8>
   1abcc:	b	1abd4 <__assert_fail@plt+0x9aec>
   1abd0:	b	1ac24 <__assert_fail@plt+0x9b3c>
   1abd4:	ldr	r0, [fp, #-16]
   1abd8:	cmn	r0, #1
   1abdc:	bne	1ac24 <__assert_fail@plt+0x9b3c>
   1abe0:	b	1abfc <__assert_fail@plt+0x9b14>
   1abe4:	ldr	r0, [fp, #-12]
   1abe8:	add	r0, r0, #0
   1abec:	movw	r1, #0
   1abf0:	cmp	r1, r0
   1abf4:	bcc	1acdc <__assert_fail@plt+0x9bf4>
   1abf8:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1abfc:	ldr	r0, [fp, #-12]
   1ac00:	movw	r1, #0
   1ac04:	cmp	r1, r0
   1ac08:	bcs	1acf4 <__assert_fail@plt+0x9c0c>
   1ac0c:	ldr	r0, [fp, #-12]
   1ac10:	sub	r0, r0, #1
   1ac14:	mvn	r1, #0
   1ac18:	cmp	r1, r0
   1ac1c:	bcc	1acdc <__assert_fail@plt+0x9bf4>
   1ac20:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1ac24:	ldr	r0, [fp, #-16]
   1ac28:	movw	r1, #0
   1ac2c:	udiv	r0, r1, r0
   1ac30:	ldr	r1, [fp, #-12]
   1ac34:	cmp	r0, r1
   1ac38:	bcc	1acdc <__assert_fail@plt+0x9bf4>
   1ac3c:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1ac40:	ldr	r0, [fp, #-16]
   1ac44:	cmp	r0, #0
   1ac48:	bne	1ac50 <__assert_fail@plt+0x9b68>
   1ac4c:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1ac50:	ldr	r0, [fp, #-12]
   1ac54:	cmp	r0, #0
   1ac58:	bcs	1acc4 <__assert_fail@plt+0x9bdc>
   1ac5c:	b	1ac64 <__assert_fail@plt+0x9b7c>
   1ac60:	b	1ac68 <__assert_fail@plt+0x9b80>
   1ac64:	b	1aca8 <__assert_fail@plt+0x9bc0>
   1ac68:	ldr	r0, [fp, #-12]
   1ac6c:	cmn	r0, #1
   1ac70:	bne	1aca8 <__assert_fail@plt+0x9bc0>
   1ac74:	b	1ac90 <__assert_fail@plt+0x9ba8>
   1ac78:	ldr	r0, [fp, #-16]
   1ac7c:	add	r0, r0, #0
   1ac80:	movw	r1, #0
   1ac84:	cmp	r1, r0
   1ac88:	bcc	1acdc <__assert_fail@plt+0x9bf4>
   1ac8c:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1ac90:	ldr	r0, [fp, #-16]
   1ac94:	sub	r0, r0, #1
   1ac98:	mvn	r1, #0
   1ac9c:	cmp	r1, r0
   1aca0:	bcc	1acdc <__assert_fail@plt+0x9bf4>
   1aca4:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1aca8:	ldr	r0, [fp, #-12]
   1acac:	movw	r1, #0
   1acb0:	udiv	r0, r1, r0
   1acb4:	ldr	r1, [fp, #-16]
   1acb8:	cmp	r0, r1
   1acbc:	bcc	1acdc <__assert_fail@plt+0x9bf4>
   1acc0:	b	1acf4 <__assert_fail@plt+0x9c0c>
   1acc4:	ldr	r0, [fp, #-16]
   1acc8:	movw	r1, #255	; 0xff
   1accc:	udiv	r0, r1, r0
   1acd0:	ldr	r1, [fp, #-12]
   1acd4:	cmp	r0, r1
   1acd8:	bcs	1acf4 <__assert_fail@plt+0x9c0c>
   1acdc:	ldr	r0, [fp, #-12]
   1ace0:	ldr	r1, [fp, #-16]
   1ace4:	mul	r0, r0, r1
   1ace8:	and	r0, r0, #255	; 0xff
   1acec:	str	r0, [fp, #-20]	; 0xffffffec
   1acf0:	b	1bc3c <__assert_fail@plt+0xab54>
   1acf4:	ldr	r0, [fp, #-12]
   1acf8:	ldr	r1, [fp, #-16]
   1acfc:	mul	r0, r0, r1
   1ad00:	and	r0, r0, #255	; 0xff
   1ad04:	str	r0, [fp, #-20]	; 0xffffffec
   1ad08:	b	1bc54 <__assert_fail@plt+0xab6c>
   1ad0c:	b	1b0c4 <__assert_fail@plt+0x9fdc>
   1ad10:	b	1aee4 <__assert_fail@plt+0x9dfc>
   1ad14:	ldr	r0, [fp, #-16]
   1ad18:	cmp	r0, #0
   1ad1c:	bcs	1ae20 <__assert_fail@plt+0x9d38>
   1ad20:	ldr	r0, [fp, #-12]
   1ad24:	cmp	r0, #0
   1ad28:	bcs	1adb0 <__assert_fail@plt+0x9cc8>
   1ad2c:	b	1ad4c <__assert_fail@plt+0x9c64>
   1ad30:	ldr	r0, [fp, #-12]
   1ad34:	ldr	r1, [fp, #-16]
   1ad38:	movw	r2, #32767	; 0x7fff
   1ad3c:	udiv	r1, r2, r1
   1ad40:	cmp	r0, r1
   1ad44:	bcc	1aeb4 <__assert_fail@plt+0x9dcc>
   1ad48:	b	1aecc <__assert_fail@plt+0x9de4>
   1ad4c:	b	1ad60 <__assert_fail@plt+0x9c78>
   1ad50:	ldr	r0, [fp, #-16]
   1ad54:	cmp	r0, #1
   1ad58:	bcc	1ad70 <__assert_fail@plt+0x9c88>
   1ad5c:	b	1ad7c <__assert_fail@plt+0x9c94>
   1ad60:	ldr	r0, [fp, #-16]
   1ad64:	movw	r1, #0
   1ad68:	cmp	r1, r0
   1ad6c:	bcs	1ad7c <__assert_fail@plt+0x9c94>
   1ad70:	movw	r0, #0
   1ad74:	str	r0, [fp, #-32]	; 0xffffffe0
   1ad78:	b	1ad94 <__assert_fail@plt+0x9cac>
   1ad7c:	ldr	r0, [fp, #-16]
   1ad80:	movw	r1, #0
   1ad84:	sub	r0, r1, r0
   1ad88:	movw	r1, #32767	; 0x7fff
   1ad8c:	udiv	r0, r1, r0
   1ad90:	str	r0, [fp, #-32]	; 0xffffffe0
   1ad94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ad98:	ldr	r1, [fp, #-12]
   1ad9c:	mvn	r2, #0
   1ada0:	sub	r1, r2, r1
   1ada4:	cmp	r0, r1
   1ada8:	bls	1aeb4 <__assert_fail@plt+0x9dcc>
   1adac:	b	1aecc <__assert_fail@plt+0x9de4>
   1adb0:	ldr	r0, [fp, #-16]
   1adb4:	cmn	r0, #1
   1adb8:	bne	1ae04 <__assert_fail@plt+0x9d1c>
   1adbc:	b	1addc <__assert_fail@plt+0x9cf4>
   1adc0:	ldr	r0, [pc, #3760]	; 1bc78 <__assert_fail@plt+0xab90>
   1adc4:	ldr	r1, [fp, #-12]
   1adc8:	add	r0, r1, r0
   1adcc:	movw	r1, #0
   1add0:	cmp	r1, r0
   1add4:	bcc	1aeb4 <__assert_fail@plt+0x9dcc>
   1add8:	b	1aecc <__assert_fail@plt+0x9de4>
   1addc:	ldr	r0, [fp, #-12]
   1ade0:	movw	r1, #0
   1ade4:	cmp	r1, r0
   1ade8:	bcs	1aecc <__assert_fail@plt+0x9de4>
   1adec:	ldr	r0, [fp, #-12]
   1adf0:	sub	r0, r0, #1
   1adf4:	movw	r1, #32767	; 0x7fff
   1adf8:	cmp	r1, r0
   1adfc:	bcc	1aeb4 <__assert_fail@plt+0x9dcc>
   1ae00:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae04:	ldr	r0, [pc, #3692]	; 1bc78 <__assert_fail@plt+0xab90>
   1ae08:	ldr	r1, [fp, #-16]
   1ae0c:	udiv	r0, r0, r1
   1ae10:	ldr	r1, [fp, #-12]
   1ae14:	cmp	r0, r1
   1ae18:	bcc	1aeb4 <__assert_fail@plt+0x9dcc>
   1ae1c:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae20:	ldr	r0, [fp, #-16]
   1ae24:	cmp	r0, #0
   1ae28:	bne	1ae30 <__assert_fail@plt+0x9d48>
   1ae2c:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae30:	ldr	r0, [fp, #-12]
   1ae34:	cmp	r0, #0
   1ae38:	bcs	1ae9c <__assert_fail@plt+0x9db4>
   1ae3c:	ldr	r0, [fp, #-12]
   1ae40:	cmn	r0, #1
   1ae44:	bne	1ae80 <__assert_fail@plt+0x9d98>
   1ae48:	b	1ae68 <__assert_fail@plt+0x9d80>
   1ae4c:	ldr	r0, [pc, #3620]	; 1bc78 <__assert_fail@plt+0xab90>
   1ae50:	ldr	r1, [fp, #-16]
   1ae54:	add	r0, r1, r0
   1ae58:	movw	r1, #0
   1ae5c:	cmp	r1, r0
   1ae60:	bcc	1aeb4 <__assert_fail@plt+0x9dcc>
   1ae64:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae68:	ldr	r0, [fp, #-16]
   1ae6c:	sub	r0, r0, #1
   1ae70:	movw	r1, #32767	; 0x7fff
   1ae74:	cmp	r1, r0
   1ae78:	bcc	1aeb4 <__assert_fail@plt+0x9dcc>
   1ae7c:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae80:	ldr	r0, [pc, #3568]	; 1bc78 <__assert_fail@plt+0xab90>
   1ae84:	ldr	r1, [fp, #-12]
   1ae88:	udiv	r0, r0, r1
   1ae8c:	ldr	r1, [fp, #-16]
   1ae90:	cmp	r0, r1
   1ae94:	bcc	1aeb4 <__assert_fail@plt+0x9dcc>
   1ae98:	b	1aecc <__assert_fail@plt+0x9de4>
   1ae9c:	ldr	r0, [fp, #-16]
   1aea0:	movw	r1, #32767	; 0x7fff
   1aea4:	udiv	r0, r1, r0
   1aea8:	ldr	r1, [fp, #-12]
   1aeac:	cmp	r0, r1
   1aeb0:	bcs	1aecc <__assert_fail@plt+0x9de4>
   1aeb4:	ldr	r0, [fp, #-12]
   1aeb8:	ldr	r1, [fp, #-16]
   1aebc:	mul	r0, r0, r1
   1aec0:	sxth	r0, r0
   1aec4:	str	r0, [fp, #-20]	; 0xffffffec
   1aec8:	b	1bc3c <__assert_fail@plt+0xab54>
   1aecc:	ldr	r0, [fp, #-12]
   1aed0:	ldr	r1, [fp, #-16]
   1aed4:	mul	r0, r0, r1
   1aed8:	sxth	r0, r0
   1aedc:	str	r0, [fp, #-20]	; 0xffffffec
   1aee0:	b	1bc54 <__assert_fail@plt+0xab6c>
   1aee4:	ldr	r0, [fp, #-16]
   1aee8:	cmp	r0, #0
   1aeec:	bcs	1aff8 <__assert_fail@plt+0x9f10>
   1aef0:	ldr	r0, [fp, #-12]
   1aef4:	cmp	r0, #0
   1aef8:	bcs	1af80 <__assert_fail@plt+0x9e98>
   1aefc:	b	1af1c <__assert_fail@plt+0x9e34>
   1af00:	ldr	r0, [fp, #-12]
   1af04:	ldr	r1, [fp, #-16]
   1af08:	movw	r2, #65535	; 0xffff
   1af0c:	udiv	r1, r2, r1
   1af10:	cmp	r0, r1
   1af14:	bcc	1b094 <__assert_fail@plt+0x9fac>
   1af18:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1af1c:	b	1af30 <__assert_fail@plt+0x9e48>
   1af20:	ldr	r0, [fp, #-16]
   1af24:	cmp	r0, #1
   1af28:	bcc	1af40 <__assert_fail@plt+0x9e58>
   1af2c:	b	1af4c <__assert_fail@plt+0x9e64>
   1af30:	ldr	r0, [fp, #-16]
   1af34:	movw	r1, #0
   1af38:	cmp	r1, r0
   1af3c:	bcs	1af4c <__assert_fail@plt+0x9e64>
   1af40:	movw	r0, #0
   1af44:	str	r0, [fp, #-36]	; 0xffffffdc
   1af48:	b	1af64 <__assert_fail@plt+0x9e7c>
   1af4c:	ldr	r0, [fp, #-16]
   1af50:	movw	r1, #0
   1af54:	sub	r0, r1, r0
   1af58:	movw	r1, #65535	; 0xffff
   1af5c:	udiv	r0, r1, r0
   1af60:	str	r0, [fp, #-36]	; 0xffffffdc
   1af64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af68:	ldr	r1, [fp, #-12]
   1af6c:	mvn	r2, #0
   1af70:	sub	r1, r2, r1
   1af74:	cmp	r0, r1
   1af78:	bls	1b094 <__assert_fail@plt+0x9fac>
   1af7c:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1af80:	b	1af88 <__assert_fail@plt+0x9ea0>
   1af84:	b	1af8c <__assert_fail@plt+0x9ea4>
   1af88:	b	1afdc <__assert_fail@plt+0x9ef4>
   1af8c:	ldr	r0, [fp, #-16]
   1af90:	cmn	r0, #1
   1af94:	bne	1afdc <__assert_fail@plt+0x9ef4>
   1af98:	b	1afb4 <__assert_fail@plt+0x9ecc>
   1af9c:	ldr	r0, [fp, #-12]
   1afa0:	add	r0, r0, #0
   1afa4:	movw	r1, #0
   1afa8:	cmp	r1, r0
   1afac:	bcc	1b094 <__assert_fail@plt+0x9fac>
   1afb0:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1afb4:	ldr	r0, [fp, #-12]
   1afb8:	movw	r1, #0
   1afbc:	cmp	r1, r0
   1afc0:	bcs	1b0ac <__assert_fail@plt+0x9fc4>
   1afc4:	ldr	r0, [fp, #-12]
   1afc8:	sub	r0, r0, #1
   1afcc:	mvn	r1, #0
   1afd0:	cmp	r1, r0
   1afd4:	bcc	1b094 <__assert_fail@plt+0x9fac>
   1afd8:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1afdc:	ldr	r0, [fp, #-16]
   1afe0:	movw	r1, #0
   1afe4:	udiv	r0, r1, r0
   1afe8:	ldr	r1, [fp, #-12]
   1afec:	cmp	r0, r1
   1aff0:	bcc	1b094 <__assert_fail@plt+0x9fac>
   1aff4:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1aff8:	ldr	r0, [fp, #-16]
   1affc:	cmp	r0, #0
   1b000:	bne	1b008 <__assert_fail@plt+0x9f20>
   1b004:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1b008:	ldr	r0, [fp, #-12]
   1b00c:	cmp	r0, #0
   1b010:	bcs	1b07c <__assert_fail@plt+0x9f94>
   1b014:	b	1b01c <__assert_fail@plt+0x9f34>
   1b018:	b	1b020 <__assert_fail@plt+0x9f38>
   1b01c:	b	1b060 <__assert_fail@plt+0x9f78>
   1b020:	ldr	r0, [fp, #-12]
   1b024:	cmn	r0, #1
   1b028:	bne	1b060 <__assert_fail@plt+0x9f78>
   1b02c:	b	1b048 <__assert_fail@plt+0x9f60>
   1b030:	ldr	r0, [fp, #-16]
   1b034:	add	r0, r0, #0
   1b038:	movw	r1, #0
   1b03c:	cmp	r1, r0
   1b040:	bcc	1b094 <__assert_fail@plt+0x9fac>
   1b044:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1b048:	ldr	r0, [fp, #-16]
   1b04c:	sub	r0, r0, #1
   1b050:	mvn	r1, #0
   1b054:	cmp	r1, r0
   1b058:	bcc	1b094 <__assert_fail@plt+0x9fac>
   1b05c:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1b060:	ldr	r0, [fp, #-12]
   1b064:	movw	r1, #0
   1b068:	udiv	r0, r1, r0
   1b06c:	ldr	r1, [fp, #-16]
   1b070:	cmp	r0, r1
   1b074:	bcc	1b094 <__assert_fail@plt+0x9fac>
   1b078:	b	1b0ac <__assert_fail@plt+0x9fc4>
   1b07c:	ldr	r0, [fp, #-16]
   1b080:	movw	r1, #65535	; 0xffff
   1b084:	udiv	r0, r1, r0
   1b088:	ldr	r1, [fp, #-12]
   1b08c:	cmp	r0, r1
   1b090:	bcs	1b0ac <__assert_fail@plt+0x9fc4>
   1b094:	ldr	r0, [fp, #-12]
   1b098:	ldr	r1, [fp, #-16]
   1b09c:	mul	r0, r0, r1
   1b0a0:	uxth	r0, r0
   1b0a4:	str	r0, [fp, #-20]	; 0xffffffec
   1b0a8:	b	1bc3c <__assert_fail@plt+0xab54>
   1b0ac:	ldr	r0, [fp, #-12]
   1b0b0:	ldr	r1, [fp, #-16]
   1b0b4:	mul	r0, r0, r1
   1b0b8:	uxth	r0, r0
   1b0bc:	str	r0, [fp, #-20]	; 0xffffffec
   1b0c0:	b	1bc54 <__assert_fail@plt+0xab6c>
   1b0c4:	b	1b0c8 <__assert_fail@plt+0x9fe0>
   1b0c8:	b	1b28c <__assert_fail@plt+0xa1a4>
   1b0cc:	ldr	r0, [fp, #-16]
   1b0d0:	cmp	r0, #0
   1b0d4:	bcs	1b1d4 <__assert_fail@plt+0xa0ec>
   1b0d8:	ldr	r0, [fp, #-12]
   1b0dc:	cmp	r0, #0
   1b0e0:	bcs	1b168 <__assert_fail@plt+0xa080>
   1b0e4:	b	1b104 <__assert_fail@plt+0xa01c>
   1b0e8:	ldr	r0, [pc, #2944]	; 1bc70 <__assert_fail@plt+0xab88>
   1b0ec:	ldr	r1, [fp, #-12]
   1b0f0:	ldr	r2, [fp, #-16]
   1b0f4:	udiv	r0, r0, r2
   1b0f8:	cmp	r1, r0
   1b0fc:	bcc	1b264 <__assert_fail@plt+0xa17c>
   1b100:	b	1b278 <__assert_fail@plt+0xa190>
   1b104:	b	1b118 <__assert_fail@plt+0xa030>
   1b108:	ldr	r0, [fp, #-16]
   1b10c:	cmp	r0, #1
   1b110:	bcc	1b128 <__assert_fail@plt+0xa040>
   1b114:	b	1b134 <__assert_fail@plt+0xa04c>
   1b118:	ldr	r0, [fp, #-16]
   1b11c:	movw	r1, #0
   1b120:	cmp	r1, r0
   1b124:	bcs	1b134 <__assert_fail@plt+0xa04c>
   1b128:	movw	r0, #0
   1b12c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b130:	b	1b14c <__assert_fail@plt+0xa064>
   1b134:	ldr	r0, [pc, #2868]	; 1bc70 <__assert_fail@plt+0xab88>
   1b138:	ldr	r1, [fp, #-16]
   1b13c:	movw	r2, #0
   1b140:	sub	r1, r2, r1
   1b144:	udiv	r0, r0, r1
   1b148:	str	r0, [fp, #-40]	; 0xffffffd8
   1b14c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b150:	ldr	r1, [fp, #-12]
   1b154:	mvn	r2, #0
   1b158:	sub	r1, r2, r1
   1b15c:	cmp	r0, r1
   1b160:	bls	1b264 <__assert_fail@plt+0xa17c>
   1b164:	b	1b278 <__assert_fail@plt+0xa190>
   1b168:	ldr	r0, [fp, #-16]
   1b16c:	cmn	r0, #1
   1b170:	bne	1b1b8 <__assert_fail@plt+0xa0d0>
   1b174:	b	1b190 <__assert_fail@plt+0xa0a8>
   1b178:	ldr	r0, [fp, #-12]
   1b17c:	add	r0, r0, #-2147483648	; 0x80000000
   1b180:	movw	r1, #0
   1b184:	cmp	r1, r0
   1b188:	bcc	1b264 <__assert_fail@plt+0xa17c>
   1b18c:	b	1b278 <__assert_fail@plt+0xa190>
   1b190:	ldr	r0, [fp, #-12]
   1b194:	movw	r1, #0
   1b198:	cmp	r1, r0
   1b19c:	bcs	1b278 <__assert_fail@plt+0xa190>
   1b1a0:	ldr	r0, [pc, #2760]	; 1bc70 <__assert_fail@plt+0xab88>
   1b1a4:	ldr	r1, [fp, #-12]
   1b1a8:	sub	r1, r1, #1
   1b1ac:	cmp	r0, r1
   1b1b0:	bcc	1b264 <__assert_fail@plt+0xa17c>
   1b1b4:	b	1b278 <__assert_fail@plt+0xa190>
   1b1b8:	ldr	r0, [pc, #2740]	; 1bc74 <__assert_fail@plt+0xab8c>
   1b1bc:	ldr	r1, [fp, #-16]
   1b1c0:	udiv	r0, r0, r1
   1b1c4:	ldr	r1, [fp, #-12]
   1b1c8:	cmp	r0, r1
   1b1cc:	bcc	1b264 <__assert_fail@plt+0xa17c>
   1b1d0:	b	1b278 <__assert_fail@plt+0xa190>
   1b1d4:	ldr	r0, [fp, #-16]
   1b1d8:	cmp	r0, #0
   1b1dc:	bne	1b1e4 <__assert_fail@plt+0xa0fc>
   1b1e0:	b	1b278 <__assert_fail@plt+0xa190>
   1b1e4:	ldr	r0, [fp, #-12]
   1b1e8:	cmp	r0, #0
   1b1ec:	bcs	1b24c <__assert_fail@plt+0xa164>
   1b1f0:	ldr	r0, [fp, #-12]
   1b1f4:	cmn	r0, #1
   1b1f8:	bne	1b230 <__assert_fail@plt+0xa148>
   1b1fc:	b	1b218 <__assert_fail@plt+0xa130>
   1b200:	ldr	r0, [fp, #-16]
   1b204:	add	r0, r0, #-2147483648	; 0x80000000
   1b208:	movw	r1, #0
   1b20c:	cmp	r1, r0
   1b210:	bcc	1b264 <__assert_fail@plt+0xa17c>
   1b214:	b	1b278 <__assert_fail@plt+0xa190>
   1b218:	ldr	r0, [pc, #2640]	; 1bc70 <__assert_fail@plt+0xab88>
   1b21c:	ldr	r1, [fp, #-16]
   1b220:	sub	r1, r1, #1
   1b224:	cmp	r0, r1
   1b228:	bcc	1b264 <__assert_fail@plt+0xa17c>
   1b22c:	b	1b278 <__assert_fail@plt+0xa190>
   1b230:	ldr	r0, [pc, #2620]	; 1bc74 <__assert_fail@plt+0xab8c>
   1b234:	ldr	r1, [fp, #-12]
   1b238:	udiv	r0, r0, r1
   1b23c:	ldr	r1, [fp, #-16]
   1b240:	cmp	r0, r1
   1b244:	bcc	1b264 <__assert_fail@plt+0xa17c>
   1b248:	b	1b278 <__assert_fail@plt+0xa190>
   1b24c:	ldr	r0, [pc, #2588]	; 1bc70 <__assert_fail@plt+0xab88>
   1b250:	ldr	r1, [fp, #-16]
   1b254:	udiv	r0, r0, r1
   1b258:	ldr	r1, [fp, #-12]
   1b25c:	cmp	r0, r1
   1b260:	bcs	1b278 <__assert_fail@plt+0xa190>
   1b264:	ldr	r0, [fp, #-12]
   1b268:	ldr	r1, [fp, #-16]
   1b26c:	mul	r0, r0, r1
   1b270:	str	r0, [fp, #-20]	; 0xffffffec
   1b274:	b	1bc3c <__assert_fail@plt+0xab54>
   1b278:	ldr	r0, [fp, #-12]
   1b27c:	ldr	r1, [fp, #-16]
   1b280:	mul	r0, r0, r1
   1b284:	str	r0, [fp, #-20]	; 0xffffffec
   1b288:	b	1bc54 <__assert_fail@plt+0xab6c>
   1b28c:	ldr	r0, [fp, #-16]
   1b290:	cmp	r0, #0
   1b294:	bcs	1b3a0 <__assert_fail@plt+0xa2b8>
   1b298:	ldr	r0, [fp, #-12]
   1b29c:	cmp	r0, #0
   1b2a0:	bcs	1b328 <__assert_fail@plt+0xa240>
   1b2a4:	b	1b2c4 <__assert_fail@plt+0xa1dc>
   1b2a8:	ldr	r0, [fp, #-12]
   1b2ac:	ldr	r1, [fp, #-16]
   1b2b0:	mvn	r2, #0
   1b2b4:	udiv	r1, r2, r1
   1b2b8:	cmp	r0, r1
   1b2bc:	bcc	1b43c <__assert_fail@plt+0xa354>
   1b2c0:	b	1b450 <__assert_fail@plt+0xa368>
   1b2c4:	b	1b2d8 <__assert_fail@plt+0xa1f0>
   1b2c8:	ldr	r0, [fp, #-16]
   1b2cc:	cmp	r0, #1
   1b2d0:	bcc	1b2e8 <__assert_fail@plt+0xa200>
   1b2d4:	b	1b2f4 <__assert_fail@plt+0xa20c>
   1b2d8:	ldr	r0, [fp, #-16]
   1b2dc:	movw	r1, #0
   1b2e0:	cmp	r1, r0
   1b2e4:	bcs	1b2f4 <__assert_fail@plt+0xa20c>
   1b2e8:	movw	r0, #1
   1b2ec:	str	r0, [fp, #-44]	; 0xffffffd4
   1b2f0:	b	1b30c <__assert_fail@plt+0xa224>
   1b2f4:	ldr	r0, [fp, #-16]
   1b2f8:	movw	r1, #0
   1b2fc:	sub	r0, r1, r0
   1b300:	mvn	r1, #0
   1b304:	udiv	r0, r1, r0
   1b308:	str	r0, [fp, #-44]	; 0xffffffd4
   1b30c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b310:	ldr	r1, [fp, #-12]
   1b314:	mvn	r2, #0
   1b318:	sub	r1, r2, r1
   1b31c:	cmp	r0, r1
   1b320:	bls	1b43c <__assert_fail@plt+0xa354>
   1b324:	b	1b450 <__assert_fail@plt+0xa368>
   1b328:	b	1b330 <__assert_fail@plt+0xa248>
   1b32c:	b	1b334 <__assert_fail@plt+0xa24c>
   1b330:	b	1b384 <__assert_fail@plt+0xa29c>
   1b334:	ldr	r0, [fp, #-16]
   1b338:	cmn	r0, #1
   1b33c:	bne	1b384 <__assert_fail@plt+0xa29c>
   1b340:	b	1b35c <__assert_fail@plt+0xa274>
   1b344:	ldr	r0, [fp, #-12]
   1b348:	add	r0, r0, #0
   1b34c:	movw	r1, #0
   1b350:	cmp	r1, r0
   1b354:	bcc	1b43c <__assert_fail@plt+0xa354>
   1b358:	b	1b450 <__assert_fail@plt+0xa368>
   1b35c:	ldr	r0, [fp, #-12]
   1b360:	movw	r1, #0
   1b364:	cmp	r1, r0
   1b368:	bcs	1b450 <__assert_fail@plt+0xa368>
   1b36c:	ldr	r0, [fp, #-12]
   1b370:	sub	r0, r0, #1
   1b374:	mvn	r1, #0
   1b378:	cmp	r1, r0
   1b37c:	bcc	1b43c <__assert_fail@plt+0xa354>
   1b380:	b	1b450 <__assert_fail@plt+0xa368>
   1b384:	ldr	r0, [fp, #-16]
   1b388:	movw	r1, #0
   1b38c:	udiv	r0, r1, r0
   1b390:	ldr	r1, [fp, #-12]
   1b394:	cmp	r0, r1
   1b398:	bcc	1b43c <__assert_fail@plt+0xa354>
   1b39c:	b	1b450 <__assert_fail@plt+0xa368>
   1b3a0:	ldr	r0, [fp, #-16]
   1b3a4:	cmp	r0, #0
   1b3a8:	bne	1b3b0 <__assert_fail@plt+0xa2c8>
   1b3ac:	b	1b450 <__assert_fail@plt+0xa368>
   1b3b0:	ldr	r0, [fp, #-12]
   1b3b4:	cmp	r0, #0
   1b3b8:	bcs	1b424 <__assert_fail@plt+0xa33c>
   1b3bc:	b	1b3c4 <__assert_fail@plt+0xa2dc>
   1b3c0:	b	1b3c8 <__assert_fail@plt+0xa2e0>
   1b3c4:	b	1b408 <__assert_fail@plt+0xa320>
   1b3c8:	ldr	r0, [fp, #-12]
   1b3cc:	cmn	r0, #1
   1b3d0:	bne	1b408 <__assert_fail@plt+0xa320>
   1b3d4:	b	1b3f0 <__assert_fail@plt+0xa308>
   1b3d8:	ldr	r0, [fp, #-16]
   1b3dc:	add	r0, r0, #0
   1b3e0:	movw	r1, #0
   1b3e4:	cmp	r1, r0
   1b3e8:	bcc	1b43c <__assert_fail@plt+0xa354>
   1b3ec:	b	1b450 <__assert_fail@plt+0xa368>
   1b3f0:	ldr	r0, [fp, #-16]
   1b3f4:	sub	r0, r0, #1
   1b3f8:	mvn	r1, #0
   1b3fc:	cmp	r1, r0
   1b400:	bcc	1b43c <__assert_fail@plt+0xa354>
   1b404:	b	1b450 <__assert_fail@plt+0xa368>
   1b408:	ldr	r0, [fp, #-12]
   1b40c:	movw	r1, #0
   1b410:	udiv	r0, r1, r0
   1b414:	ldr	r1, [fp, #-16]
   1b418:	cmp	r0, r1
   1b41c:	bcc	1b43c <__assert_fail@plt+0xa354>
   1b420:	b	1b450 <__assert_fail@plt+0xa368>
   1b424:	ldr	r0, [fp, #-16]
   1b428:	mvn	r1, #0
   1b42c:	udiv	r0, r1, r0
   1b430:	ldr	r1, [fp, #-12]
   1b434:	cmp	r0, r1
   1b438:	bcs	1b450 <__assert_fail@plt+0xa368>
   1b43c:	ldr	r0, [fp, #-12]
   1b440:	ldr	r1, [fp, #-16]
   1b444:	mul	r0, r0, r1
   1b448:	str	r0, [fp, #-20]	; 0xffffffec
   1b44c:	b	1bc3c <__assert_fail@plt+0xab54>
   1b450:	ldr	r0, [fp, #-12]
   1b454:	ldr	r1, [fp, #-16]
   1b458:	mul	r0, r0, r1
   1b45c:	str	r0, [fp, #-20]	; 0xffffffec
   1b460:	b	1bc54 <__assert_fail@plt+0xab6c>
   1b464:	b	1b468 <__assert_fail@plt+0xa380>
   1b468:	b	1b62c <__assert_fail@plt+0xa544>
   1b46c:	ldr	r0, [fp, #-16]
   1b470:	cmp	r0, #0
   1b474:	bcs	1b574 <__assert_fail@plt+0xa48c>
   1b478:	ldr	r0, [fp, #-12]
   1b47c:	cmp	r0, #0
   1b480:	bcs	1b508 <__assert_fail@plt+0xa420>
   1b484:	b	1b4a4 <__assert_fail@plt+0xa3bc>
   1b488:	ldr	r0, [pc, #2016]	; 1bc70 <__assert_fail@plt+0xab88>
   1b48c:	ldr	r1, [fp, #-12]
   1b490:	ldr	r2, [fp, #-16]
   1b494:	udiv	r0, r0, r2
   1b498:	cmp	r1, r0
   1b49c:	bcc	1b604 <__assert_fail@plt+0xa51c>
   1b4a0:	b	1b618 <__assert_fail@plt+0xa530>
   1b4a4:	b	1b4b8 <__assert_fail@plt+0xa3d0>
   1b4a8:	ldr	r0, [fp, #-16]
   1b4ac:	cmp	r0, #1
   1b4b0:	bcc	1b4c8 <__assert_fail@plt+0xa3e0>
   1b4b4:	b	1b4d4 <__assert_fail@plt+0xa3ec>
   1b4b8:	ldr	r0, [fp, #-16]
   1b4bc:	movw	r1, #0
   1b4c0:	cmp	r1, r0
   1b4c4:	bcs	1b4d4 <__assert_fail@plt+0xa3ec>
   1b4c8:	movw	r0, #0
   1b4cc:	str	r0, [sp, #48]	; 0x30
   1b4d0:	b	1b4ec <__assert_fail@plt+0xa404>
   1b4d4:	ldr	r0, [pc, #1940]	; 1bc70 <__assert_fail@plt+0xab88>
   1b4d8:	ldr	r1, [fp, #-16]
   1b4dc:	movw	r2, #0
   1b4e0:	sub	r1, r2, r1
   1b4e4:	udiv	r0, r0, r1
   1b4e8:	str	r0, [sp, #48]	; 0x30
   1b4ec:	ldr	r0, [sp, #48]	; 0x30
   1b4f0:	ldr	r1, [fp, #-12]
   1b4f4:	mvn	r2, #0
   1b4f8:	sub	r1, r2, r1
   1b4fc:	cmp	r0, r1
   1b500:	bls	1b604 <__assert_fail@plt+0xa51c>
   1b504:	b	1b618 <__assert_fail@plt+0xa530>
   1b508:	ldr	r0, [fp, #-16]
   1b50c:	cmn	r0, #1
   1b510:	bne	1b558 <__assert_fail@plt+0xa470>
   1b514:	b	1b530 <__assert_fail@plt+0xa448>
   1b518:	ldr	r0, [fp, #-12]
   1b51c:	add	r0, r0, #-2147483648	; 0x80000000
   1b520:	movw	r1, #0
   1b524:	cmp	r1, r0
   1b528:	bcc	1b604 <__assert_fail@plt+0xa51c>
   1b52c:	b	1b618 <__assert_fail@plt+0xa530>
   1b530:	ldr	r0, [fp, #-12]
   1b534:	movw	r1, #0
   1b538:	cmp	r1, r0
   1b53c:	bcs	1b618 <__assert_fail@plt+0xa530>
   1b540:	ldr	r0, [pc, #1832]	; 1bc70 <__assert_fail@plt+0xab88>
   1b544:	ldr	r1, [fp, #-12]
   1b548:	sub	r1, r1, #1
   1b54c:	cmp	r0, r1
   1b550:	bcc	1b604 <__assert_fail@plt+0xa51c>
   1b554:	b	1b618 <__assert_fail@plt+0xa530>
   1b558:	ldr	r0, [pc, #1812]	; 1bc74 <__assert_fail@plt+0xab8c>
   1b55c:	ldr	r1, [fp, #-16]
   1b560:	udiv	r0, r0, r1
   1b564:	ldr	r1, [fp, #-12]
   1b568:	cmp	r0, r1
   1b56c:	bcc	1b604 <__assert_fail@plt+0xa51c>
   1b570:	b	1b618 <__assert_fail@plt+0xa530>
   1b574:	ldr	r0, [fp, #-16]
   1b578:	cmp	r0, #0
   1b57c:	bne	1b584 <__assert_fail@plt+0xa49c>
   1b580:	b	1b618 <__assert_fail@plt+0xa530>
   1b584:	ldr	r0, [fp, #-12]
   1b588:	cmp	r0, #0
   1b58c:	bcs	1b5ec <__assert_fail@plt+0xa504>
   1b590:	ldr	r0, [fp, #-12]
   1b594:	cmn	r0, #1
   1b598:	bne	1b5d0 <__assert_fail@plt+0xa4e8>
   1b59c:	b	1b5b8 <__assert_fail@plt+0xa4d0>
   1b5a0:	ldr	r0, [fp, #-16]
   1b5a4:	add	r0, r0, #-2147483648	; 0x80000000
   1b5a8:	movw	r1, #0
   1b5ac:	cmp	r1, r0
   1b5b0:	bcc	1b604 <__assert_fail@plt+0xa51c>
   1b5b4:	b	1b618 <__assert_fail@plt+0xa530>
   1b5b8:	ldr	r0, [pc, #1712]	; 1bc70 <__assert_fail@plt+0xab88>
   1b5bc:	ldr	r1, [fp, #-16]
   1b5c0:	sub	r1, r1, #1
   1b5c4:	cmp	r0, r1
   1b5c8:	bcc	1b604 <__assert_fail@plt+0xa51c>
   1b5cc:	b	1b618 <__assert_fail@plt+0xa530>
   1b5d0:	ldr	r0, [pc, #1692]	; 1bc74 <__assert_fail@plt+0xab8c>
   1b5d4:	ldr	r1, [fp, #-12]
   1b5d8:	udiv	r0, r0, r1
   1b5dc:	ldr	r1, [fp, #-16]
   1b5e0:	cmp	r0, r1
   1b5e4:	bcc	1b604 <__assert_fail@plt+0xa51c>
   1b5e8:	b	1b618 <__assert_fail@plt+0xa530>
   1b5ec:	ldr	r0, [pc, #1660]	; 1bc70 <__assert_fail@plt+0xab88>
   1b5f0:	ldr	r1, [fp, #-16]
   1b5f4:	udiv	r0, r0, r1
   1b5f8:	ldr	r1, [fp, #-12]
   1b5fc:	cmp	r0, r1
   1b600:	bcs	1b618 <__assert_fail@plt+0xa530>
   1b604:	ldr	r0, [fp, #-12]
   1b608:	ldr	r1, [fp, #-16]
   1b60c:	mul	r0, r0, r1
   1b610:	str	r0, [fp, #-20]	; 0xffffffec
   1b614:	b	1bc3c <__assert_fail@plt+0xab54>
   1b618:	ldr	r0, [fp, #-12]
   1b61c:	ldr	r1, [fp, #-16]
   1b620:	mul	r0, r0, r1
   1b624:	str	r0, [fp, #-20]	; 0xffffffec
   1b628:	b	1bc54 <__assert_fail@plt+0xab6c>
   1b62c:	ldr	r0, [fp, #-16]
   1b630:	cmp	r0, #0
   1b634:	bcs	1b740 <__assert_fail@plt+0xa658>
   1b638:	ldr	r0, [fp, #-12]
   1b63c:	cmp	r0, #0
   1b640:	bcs	1b6c8 <__assert_fail@plt+0xa5e0>
   1b644:	b	1b664 <__assert_fail@plt+0xa57c>
   1b648:	ldr	r0, [fp, #-12]
   1b64c:	ldr	r1, [fp, #-16]
   1b650:	mvn	r2, #0
   1b654:	udiv	r1, r2, r1
   1b658:	cmp	r0, r1
   1b65c:	bcc	1b7dc <__assert_fail@plt+0xa6f4>
   1b660:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b664:	b	1b678 <__assert_fail@plt+0xa590>
   1b668:	ldr	r0, [fp, #-16]
   1b66c:	cmp	r0, #1
   1b670:	bcc	1b688 <__assert_fail@plt+0xa5a0>
   1b674:	b	1b694 <__assert_fail@plt+0xa5ac>
   1b678:	ldr	r0, [fp, #-16]
   1b67c:	movw	r1, #0
   1b680:	cmp	r1, r0
   1b684:	bcs	1b694 <__assert_fail@plt+0xa5ac>
   1b688:	movw	r0, #1
   1b68c:	str	r0, [sp, #44]	; 0x2c
   1b690:	b	1b6ac <__assert_fail@plt+0xa5c4>
   1b694:	ldr	r0, [fp, #-16]
   1b698:	movw	r1, #0
   1b69c:	sub	r0, r1, r0
   1b6a0:	mvn	r1, #0
   1b6a4:	udiv	r0, r1, r0
   1b6a8:	str	r0, [sp, #44]	; 0x2c
   1b6ac:	ldr	r0, [sp, #44]	; 0x2c
   1b6b0:	ldr	r1, [fp, #-12]
   1b6b4:	mvn	r2, #0
   1b6b8:	sub	r1, r2, r1
   1b6bc:	cmp	r0, r1
   1b6c0:	bls	1b7dc <__assert_fail@plt+0xa6f4>
   1b6c4:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b6c8:	b	1b6d0 <__assert_fail@plt+0xa5e8>
   1b6cc:	b	1b6d4 <__assert_fail@plt+0xa5ec>
   1b6d0:	b	1b724 <__assert_fail@plt+0xa63c>
   1b6d4:	ldr	r0, [fp, #-16]
   1b6d8:	cmn	r0, #1
   1b6dc:	bne	1b724 <__assert_fail@plt+0xa63c>
   1b6e0:	b	1b6fc <__assert_fail@plt+0xa614>
   1b6e4:	ldr	r0, [fp, #-12]
   1b6e8:	add	r0, r0, #0
   1b6ec:	movw	r1, #0
   1b6f0:	cmp	r1, r0
   1b6f4:	bcc	1b7dc <__assert_fail@plt+0xa6f4>
   1b6f8:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b6fc:	ldr	r0, [fp, #-12]
   1b700:	movw	r1, #0
   1b704:	cmp	r1, r0
   1b708:	bcs	1b7f0 <__assert_fail@plt+0xa708>
   1b70c:	ldr	r0, [fp, #-12]
   1b710:	sub	r0, r0, #1
   1b714:	mvn	r1, #0
   1b718:	cmp	r1, r0
   1b71c:	bcc	1b7dc <__assert_fail@plt+0xa6f4>
   1b720:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b724:	ldr	r0, [fp, #-16]
   1b728:	movw	r1, #0
   1b72c:	udiv	r0, r1, r0
   1b730:	ldr	r1, [fp, #-12]
   1b734:	cmp	r0, r1
   1b738:	bcc	1b7dc <__assert_fail@plt+0xa6f4>
   1b73c:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b740:	ldr	r0, [fp, #-16]
   1b744:	cmp	r0, #0
   1b748:	bne	1b750 <__assert_fail@plt+0xa668>
   1b74c:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b750:	ldr	r0, [fp, #-12]
   1b754:	cmp	r0, #0
   1b758:	bcs	1b7c4 <__assert_fail@plt+0xa6dc>
   1b75c:	b	1b764 <__assert_fail@plt+0xa67c>
   1b760:	b	1b768 <__assert_fail@plt+0xa680>
   1b764:	b	1b7a8 <__assert_fail@plt+0xa6c0>
   1b768:	ldr	r0, [fp, #-12]
   1b76c:	cmn	r0, #1
   1b770:	bne	1b7a8 <__assert_fail@plt+0xa6c0>
   1b774:	b	1b790 <__assert_fail@plt+0xa6a8>
   1b778:	ldr	r0, [fp, #-16]
   1b77c:	add	r0, r0, #0
   1b780:	movw	r1, #0
   1b784:	cmp	r1, r0
   1b788:	bcc	1b7dc <__assert_fail@plt+0xa6f4>
   1b78c:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b790:	ldr	r0, [fp, #-16]
   1b794:	sub	r0, r0, #1
   1b798:	mvn	r1, #0
   1b79c:	cmp	r1, r0
   1b7a0:	bcc	1b7dc <__assert_fail@plt+0xa6f4>
   1b7a4:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b7a8:	ldr	r0, [fp, #-12]
   1b7ac:	movw	r1, #0
   1b7b0:	udiv	r0, r1, r0
   1b7b4:	ldr	r1, [fp, #-16]
   1b7b8:	cmp	r0, r1
   1b7bc:	bcc	1b7dc <__assert_fail@plt+0xa6f4>
   1b7c0:	b	1b7f0 <__assert_fail@plt+0xa708>
   1b7c4:	ldr	r0, [fp, #-16]
   1b7c8:	mvn	r1, #0
   1b7cc:	udiv	r0, r1, r0
   1b7d0:	ldr	r1, [fp, #-12]
   1b7d4:	cmp	r0, r1
   1b7d8:	bcs	1b7f0 <__assert_fail@plt+0xa708>
   1b7dc:	ldr	r0, [fp, #-12]
   1b7e0:	ldr	r1, [fp, #-16]
   1b7e4:	mul	r0, r0, r1
   1b7e8:	str	r0, [fp, #-20]	; 0xffffffec
   1b7ec:	b	1bc3c <__assert_fail@plt+0xab54>
   1b7f0:	ldr	r0, [fp, #-12]
   1b7f4:	ldr	r1, [fp, #-16]
   1b7f8:	mul	r0, r0, r1
   1b7fc:	str	r0, [fp, #-20]	; 0xffffffec
   1b800:	b	1bc54 <__assert_fail@plt+0xab6c>
   1b804:	b	1ba20 <__assert_fail@plt+0xa938>
   1b808:	ldr	r0, [fp, #-16]
   1b80c:	cmp	r0, #0
   1b810:	bcs	1b950 <__assert_fail@plt+0xa868>
   1b814:	ldr	r0, [fp, #-12]
   1b818:	cmp	r0, #0
   1b81c:	bcs	1b8dc <__assert_fail@plt+0xa7f4>
   1b820:	b	1b824 <__assert_fail@plt+0xa73c>
   1b824:	ldr	r0, [fp, #-12]
   1b828:	ldr	r2, [fp, #-16]
   1b82c:	mvn	r1, #0
   1b830:	mvn	r3, #-2147483648	; 0x80000000
   1b834:	mov	ip, #0
   1b838:	str	r0, [sp, #40]	; 0x28
   1b83c:	mov	r0, r1
   1b840:	mov	r1, r3
   1b844:	mov	r3, ip
   1b848:	bl	21a64 <__assert_fail@plt+0x1097c>
   1b84c:	ldr	r2, [sp, #40]	; 0x28
   1b850:	subs	r0, r2, r0
   1b854:	rscs	r1, r1, #0
   1b858:	blt	1b9f8 <__assert_fail@plt+0xa910>
   1b85c:	b	1ba0c <__assert_fail@plt+0xa924>
   1b860:	b	1b874 <__assert_fail@plt+0xa78c>
   1b864:	ldr	r0, [fp, #-16]
   1b868:	cmp	r0, #1
   1b86c:	bcc	1b884 <__assert_fail@plt+0xa79c>
   1b870:	b	1b898 <__assert_fail@plt+0xa7b0>
   1b874:	ldr	r0, [fp, #-16]
   1b878:	movw	r1, #0
   1b87c:	cmp	r1, r0
   1b880:	bcs	1b898 <__assert_fail@plt+0xa7b0>
   1b884:	mov	r0, #0
   1b888:	mvn	r1, #0
   1b88c:	str	r1, [sp, #36]	; 0x24
   1b890:	str	r0, [sp, #32]
   1b894:	b	1b8bc <__assert_fail@plt+0xa7d4>
   1b898:	ldr	r0, [fp, #-16]
   1b89c:	rsb	r2, r0, #0
   1b8a0:	mvn	r0, #0
   1b8a4:	mvn	r1, #-2147483648	; 0x80000000
   1b8a8:	mov	r3, #0
   1b8ac:	bl	21a64 <__assert_fail@plt+0x1097c>
   1b8b0:	str	r0, [sp, #36]	; 0x24
   1b8b4:	str	r1, [sp, #32]
   1b8b8:	b	1b8bc <__assert_fail@plt+0xa7d4>
   1b8bc:	ldr	r0, [sp, #32]
   1b8c0:	ldr	r1, [sp, #36]	; 0x24
   1b8c4:	ldr	r2, [fp, #-12]
   1b8c8:	mvn	r2, r2
   1b8cc:	subs	r1, r2, r1
   1b8d0:	rscs	r0, r0, #0
   1b8d4:	bge	1b9f8 <__assert_fail@plt+0xa910>
   1b8d8:	b	1ba0c <__assert_fail@plt+0xa924>
   1b8dc:	ldr	r0, [fp, #-16]
   1b8e0:	cmn	r0, #1
   1b8e4:	bne	1b924 <__assert_fail@plt+0xa83c>
   1b8e8:	b	1b904 <__assert_fail@plt+0xa81c>
   1b8ec:	ldr	r0, [fp, #-12]
   1b8f0:	rsbs	r0, r0, #0
   1b8f4:	mov	r1, #0
   1b8f8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1b8fc:	blt	1b9f8 <__assert_fail@plt+0xa910>
   1b900:	b	1ba0c <__assert_fail@plt+0xa924>
   1b904:	ldr	r0, [fp, #-12]
   1b908:	movw	r1, #0
   1b90c:	cmp	r1, r0
   1b910:	bcs	1ba0c <__assert_fail@plt+0xa924>
   1b914:	mov	r0, #0
   1b918:	cmp	r0, #0
   1b91c:	bne	1b9f8 <__assert_fail@plt+0xa910>
   1b920:	b	1ba0c <__assert_fail@plt+0xa924>
   1b924:	ldr	r2, [fp, #-16]
   1b928:	mov	r1, #-2147483648	; 0x80000000
   1b92c:	mov	r0, #0
   1b930:	str	r0, [sp, #28]
   1b934:	ldr	r3, [sp, #28]
   1b938:	bl	21990 <__assert_fail@plt+0x108a8>
   1b93c:	ldr	r2, [fp, #-12]
   1b940:	subs	r0, r0, r2
   1b944:	sbcs	r1, r1, #0
   1b948:	blt	1b9f8 <__assert_fail@plt+0xa910>
   1b94c:	b	1ba0c <__assert_fail@plt+0xa924>
   1b950:	ldr	r0, [fp, #-16]
   1b954:	cmp	r0, #0
   1b958:	bne	1b960 <__assert_fail@plt+0xa878>
   1b95c:	b	1ba0c <__assert_fail@plt+0xa924>
   1b960:	ldr	r0, [fp, #-12]
   1b964:	cmp	r0, #0
   1b968:	bcs	1b9d0 <__assert_fail@plt+0xa8e8>
   1b96c:	ldr	r0, [fp, #-12]
   1b970:	cmn	r0, #1
   1b974:	bne	1b9a4 <__assert_fail@plt+0xa8bc>
   1b978:	b	1b994 <__assert_fail@plt+0xa8ac>
   1b97c:	ldr	r0, [fp, #-16]
   1b980:	rsbs	r0, r0, #0
   1b984:	mov	r1, #0
   1b988:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1b98c:	blt	1b9f8 <__assert_fail@plt+0xa910>
   1b990:	b	1ba0c <__assert_fail@plt+0xa924>
   1b994:	mov	r0, #0
   1b998:	cmp	r0, #0
   1b99c:	bne	1b9f8 <__assert_fail@plt+0xa910>
   1b9a0:	b	1ba0c <__assert_fail@plt+0xa924>
   1b9a4:	ldr	r2, [fp, #-12]
   1b9a8:	mov	r1, #-2147483648	; 0x80000000
   1b9ac:	mov	r0, #0
   1b9b0:	str	r0, [sp, #24]
   1b9b4:	ldr	r3, [sp, #24]
   1b9b8:	bl	21990 <__assert_fail@plt+0x108a8>
   1b9bc:	ldr	r2, [fp, #-16]
   1b9c0:	subs	r0, r0, r2
   1b9c4:	sbcs	r1, r1, #0
   1b9c8:	blt	1b9f8 <__assert_fail@plt+0xa910>
   1b9cc:	b	1ba0c <__assert_fail@plt+0xa924>
   1b9d0:	ldr	r2, [fp, #-16]
   1b9d4:	mvn	r0, #0
   1b9d8:	mvn	r1, #-2147483648	; 0x80000000
   1b9dc:	mov	r3, #0
   1b9e0:	bl	21a64 <__assert_fail@plt+0x1097c>
   1b9e4:	ldr	r2, [fp, #-12]
   1b9e8:	subs	r0, r0, r2
   1b9ec:	sbcs	r1, r1, #0
   1b9f0:	bge	1ba0c <__assert_fail@plt+0xa924>
   1b9f4:	b	1b9f8 <__assert_fail@plt+0xa910>
   1b9f8:	ldr	r0, [fp, #-12]
   1b9fc:	ldr	r1, [fp, #-16]
   1ba00:	mul	r0, r0, r1
   1ba04:	str	r0, [fp, #-20]	; 0xffffffec
   1ba08:	b	1bc3c <__assert_fail@plt+0xab54>
   1ba0c:	ldr	r0, [fp, #-12]
   1ba10:	ldr	r1, [fp, #-16]
   1ba14:	mul	r0, r0, r1
   1ba18:	str	r0, [fp, #-20]	; 0xffffffec
   1ba1c:	b	1bc54 <__assert_fail@plt+0xab6c>
   1ba20:	ldr	r0, [fp, #-16]
   1ba24:	cmp	r0, #0
   1ba28:	bcs	1bb64 <__assert_fail@plt+0xaa7c>
   1ba2c:	ldr	r0, [fp, #-12]
   1ba30:	cmp	r0, #0
   1ba34:	bcs	1baec <__assert_fail@plt+0xaa04>
   1ba38:	b	1ba6c <__assert_fail@plt+0xa984>
   1ba3c:	ldr	r0, [fp, #-12]
   1ba40:	ldr	r2, [fp, #-16]
   1ba44:	mvn	r1, #0
   1ba48:	mov	r3, #0
   1ba4c:	str	r0, [sp, #20]
   1ba50:	mov	r0, r1
   1ba54:	bl	21a64 <__assert_fail@plt+0x1097c>
   1ba58:	ldr	r2, [sp, #20]
   1ba5c:	subs	r0, r2, r0
   1ba60:	rscs	r1, r1, #0
   1ba64:	bcc	1bc14 <__assert_fail@plt+0xab2c>
   1ba68:	b	1bc28 <__assert_fail@plt+0xab40>
   1ba6c:	b	1ba80 <__assert_fail@plt+0xa998>
   1ba70:	ldr	r0, [fp, #-16]
   1ba74:	cmp	r0, #1
   1ba78:	bcc	1ba90 <__assert_fail@plt+0xa9a8>
   1ba7c:	b	1baa4 <__assert_fail@plt+0xa9bc>
   1ba80:	ldr	r0, [fp, #-16]
   1ba84:	movw	r1, #0
   1ba88:	cmp	r1, r0
   1ba8c:	bcs	1baa4 <__assert_fail@plt+0xa9bc>
   1ba90:	mov	r0, #1
   1ba94:	mvn	r1, #0
   1ba98:	str	r1, [sp, #16]
   1ba9c:	str	r0, [sp, #12]
   1baa0:	b	1bacc <__assert_fail@plt+0xa9e4>
   1baa4:	ldr	r0, [fp, #-16]
   1baa8:	rsb	r2, r0, #0
   1baac:	mvn	r0, #0
   1bab0:	mov	r3, #0
   1bab4:	str	r0, [sp, #8]
   1bab8:	ldr	r1, [sp, #8]
   1babc:	bl	21a64 <__assert_fail@plt+0x1097c>
   1bac0:	str	r0, [sp, #16]
   1bac4:	str	r1, [sp, #12]
   1bac8:	b	1bacc <__assert_fail@plt+0xa9e4>
   1bacc:	ldr	r0, [sp, #12]
   1bad0:	ldr	r1, [sp, #16]
   1bad4:	ldr	r2, [fp, #-12]
   1bad8:	mvn	r2, r2
   1badc:	subs	r1, r2, r1
   1bae0:	rscs	r0, r0, #0
   1bae4:	bcs	1bc14 <__assert_fail@plt+0xab2c>
   1bae8:	b	1bc28 <__assert_fail@plt+0xab40>
   1baec:	b	1baf4 <__assert_fail@plt+0xaa0c>
   1baf0:	b	1baf8 <__assert_fail@plt+0xaa10>
   1baf4:	b	1bb48 <__assert_fail@plt+0xaa60>
   1baf8:	ldr	r0, [fp, #-16]
   1bafc:	cmn	r0, #1
   1bb00:	bne	1bb48 <__assert_fail@plt+0xaa60>
   1bb04:	b	1bb20 <__assert_fail@plt+0xaa38>
   1bb08:	ldr	r0, [fp, #-12]
   1bb0c:	add	r0, r0, #0
   1bb10:	movw	r1, #0
   1bb14:	cmp	r1, r0
   1bb18:	bcc	1bc14 <__assert_fail@plt+0xab2c>
   1bb1c:	b	1bc28 <__assert_fail@plt+0xab40>
   1bb20:	ldr	r0, [fp, #-12]
   1bb24:	movw	r1, #0
   1bb28:	cmp	r1, r0
   1bb2c:	bcs	1bc28 <__assert_fail@plt+0xab40>
   1bb30:	ldr	r0, [fp, #-12]
   1bb34:	sub	r0, r0, #1
   1bb38:	mvn	r1, #0
   1bb3c:	cmp	r1, r0
   1bb40:	bcc	1bc14 <__assert_fail@plt+0xab2c>
   1bb44:	b	1bc28 <__assert_fail@plt+0xab40>
   1bb48:	ldr	r0, [fp, #-16]
   1bb4c:	movw	r1, #0
   1bb50:	udiv	r0, r1, r0
   1bb54:	ldr	r1, [fp, #-12]
   1bb58:	cmp	r0, r1
   1bb5c:	bcc	1bc14 <__assert_fail@plt+0xab2c>
   1bb60:	b	1bc28 <__assert_fail@plt+0xab40>
   1bb64:	ldr	r0, [fp, #-16]
   1bb68:	cmp	r0, #0
   1bb6c:	bne	1bb74 <__assert_fail@plt+0xaa8c>
   1bb70:	b	1bc28 <__assert_fail@plt+0xab40>
   1bb74:	ldr	r0, [fp, #-12]
   1bb78:	cmp	r0, #0
   1bb7c:	bcs	1bbe8 <__assert_fail@plt+0xab00>
   1bb80:	b	1bb88 <__assert_fail@plt+0xaaa0>
   1bb84:	b	1bb8c <__assert_fail@plt+0xaaa4>
   1bb88:	b	1bbcc <__assert_fail@plt+0xaae4>
   1bb8c:	ldr	r0, [fp, #-12]
   1bb90:	cmn	r0, #1
   1bb94:	bne	1bbcc <__assert_fail@plt+0xaae4>
   1bb98:	b	1bbb4 <__assert_fail@plt+0xaacc>
   1bb9c:	ldr	r0, [fp, #-16]
   1bba0:	add	r0, r0, #0
   1bba4:	movw	r1, #0
   1bba8:	cmp	r1, r0
   1bbac:	bcc	1bc14 <__assert_fail@plt+0xab2c>
   1bbb0:	b	1bc28 <__assert_fail@plt+0xab40>
   1bbb4:	ldr	r0, [fp, #-16]
   1bbb8:	sub	r0, r0, #1
   1bbbc:	mvn	r1, #0
   1bbc0:	cmp	r1, r0
   1bbc4:	bcc	1bc14 <__assert_fail@plt+0xab2c>
   1bbc8:	b	1bc28 <__assert_fail@plt+0xab40>
   1bbcc:	ldr	r0, [fp, #-12]
   1bbd0:	movw	r1, #0
   1bbd4:	udiv	r0, r1, r0
   1bbd8:	ldr	r1, [fp, #-16]
   1bbdc:	cmp	r0, r1
   1bbe0:	bcc	1bc14 <__assert_fail@plt+0xab2c>
   1bbe4:	b	1bc28 <__assert_fail@plt+0xab40>
   1bbe8:	ldr	r2, [fp, #-16]
   1bbec:	mvn	r0, #0
   1bbf0:	mov	r3, #0
   1bbf4:	str	r0, [sp, #4]
   1bbf8:	ldr	r1, [sp, #4]
   1bbfc:	bl	21a64 <__assert_fail@plt+0x1097c>
   1bc00:	ldr	r2, [fp, #-12]
   1bc04:	subs	r0, r0, r2
   1bc08:	sbcs	r1, r1, #0
   1bc0c:	bcs	1bc28 <__assert_fail@plt+0xab40>
   1bc10:	b	1bc14 <__assert_fail@plt+0xab2c>
   1bc14:	ldr	r0, [fp, #-12]
   1bc18:	ldr	r1, [fp, #-16]
   1bc1c:	mul	r0, r0, r1
   1bc20:	str	r0, [fp, #-20]	; 0xffffffec
   1bc24:	b	1bc3c <__assert_fail@plt+0xab54>
   1bc28:	ldr	r0, [fp, #-12]
   1bc2c:	ldr	r1, [fp, #-16]
   1bc30:	mul	r0, r0, r1
   1bc34:	str	r0, [fp, #-20]	; 0xffffffec
   1bc38:	b	1bc54 <__assert_fail@plt+0xab6c>
   1bc3c:	bl	11010 <__errno_location@plt>
   1bc40:	movw	r1, #12
   1bc44:	str	r1, [r0]
   1bc48:	movw	r0, #0
   1bc4c:	str	r0, [fp, #-4]
   1bc50:	b	1bc64 <__assert_fail@plt+0xab7c>
   1bc54:	ldr	r0, [fp, #-8]
   1bc58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc5c:	bl	21420 <__assert_fail@plt+0x10338>
   1bc60:	str	r0, [fp, #-4]
   1bc64:	ldr	r0, [fp, #-4]
   1bc68:	mov	sp, fp
   1bc6c:	pop	{fp, pc}
   1bc70:	svcvc	0x00ffffff
   1bc74:	andhi	r0, r0, r0
   1bc78:			; <UNDEFINED> instruction: 0xffff8000
   1bc7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc80:	add	fp, sp, #28
   1bc84:	sub	sp, sp, #196	; 0xc4
   1bc88:	ldr	ip, [fp, #12]
   1bc8c:	ldr	lr, [fp, #8]
   1bc90:	str	r0, [fp, #-32]	; 0xffffffe0
   1bc94:	str	r1, [fp, #-36]	; 0xffffffdc
   1bc98:	str	r2, [fp, #-40]	; 0xffffffd8
   1bc9c:	str	r3, [fp, #-44]	; 0xffffffd4
   1bca0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bca4:	movw	r1, #0
   1bca8:	cmp	r0, r1
   1bcac:	beq	1bce0 <__assert_fail@plt+0xabf8>
   1bcb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bcb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bcb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bcbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bcc0:	movw	ip, #11048	; 0x2b28
   1bcc4:	movt	ip, #2
   1bcc8:	str	r1, [fp, #-48]	; 0xffffffd0
   1bccc:	mov	r1, ip
   1bcd0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1bcd4:	str	ip, [sp]
   1bcd8:	bl	11004 <fprintf@plt>
   1bcdc:	b	1bcf8 <__assert_fail@plt+0xac10>
   1bce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bce4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bce8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bcec:	movw	r1, #11060	; 0x2b34
   1bcf0:	movt	r1, #2
   1bcf4:	bl	11004 <fprintf@plt>
   1bcf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bcfc:	movw	r1, #11067	; 0x2b3b
   1bd00:	movt	r1, #2
   1bd04:	str	r0, [fp, #-52]	; 0xffffffcc
   1bd08:	mov	r0, r1
   1bd0c:	bl	10fe0 <gettext@plt>
   1bd10:	movw	r1, #11785	; 0x2e09
   1bd14:	movt	r1, #2
   1bd18:	movw	r3, #2022	; 0x7e6
   1bd1c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bd20:	str	r0, [fp, #-56]	; 0xffffffc8
   1bd24:	mov	r0, r2
   1bd28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bd2c:	bl	11004 <fprintf@plt>
   1bd30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bd34:	movw	r2, #9242	; 0x241a
   1bd38:	movt	r2, #2
   1bd3c:	str	r0, [fp, #-60]	; 0xffffffc4
   1bd40:	mov	r0, r2
   1bd44:	str	r2, [fp, #-64]	; 0xffffffc0
   1bd48:	bl	10e78 <fputs_unlocked@plt>
   1bd4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bd50:	movw	r2, #11071	; 0x2b3f
   1bd54:	movt	r2, #2
   1bd58:	str	r0, [fp, #-68]	; 0xffffffbc
   1bd5c:	mov	r0, r2
   1bd60:	str	r1, [fp, #-72]	; 0xffffffb8
   1bd64:	bl	10fe0 <gettext@plt>
   1bd68:	movw	r2, #11242	; 0x2bea
   1bd6c:	movt	r2, #2
   1bd70:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1bd74:	str	r0, [fp, #-76]	; 0xffffffb4
   1bd78:	mov	r0, r1
   1bd7c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1bd80:	bl	11004 <fprintf@plt>
   1bd84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bd88:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bd8c:	str	r0, [fp, #-80]	; 0xffffffb0
   1bd90:	mov	r0, r2
   1bd94:	bl	10e78 <fputs_unlocked@plt>
   1bd98:	ldr	r1, [fp, #12]
   1bd9c:	cmp	r1, #9
   1bda0:	str	r1, [fp, #-84]	; 0xffffffac
   1bda4:	bhi	1c1c0 <__assert_fail@plt+0xb0d8>
   1bda8:	add	r0, pc, #8
   1bdac:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bdb0:	ldr	r0, [r0, r1, lsl #2]
   1bdb4:	mov	pc, r0
   1bdb8:	andeq	fp, r1, r0, ror #27
   1bdbc:	andeq	fp, r1, r4, ror #27
   1bdc0:	andeq	fp, r1, ip, lsl lr
   1bdc4:	andeq	fp, r1, ip, asr lr
   1bdc8:			; <UNDEFINED> instruction: 0x0001beb4
   1bdcc:	andeq	fp, r1, r8, lsl pc
   1bdd0:	andeq	fp, r1, r8, lsl #31
   1bdd4:	andeq	ip, r1, r4
   1bdd8:	andeq	ip, r1, ip, lsl #1
   1bddc:	andeq	ip, r1, r0, lsr #2
   1bde0:	b	1c25c <__assert_fail@plt+0xb174>
   1bde4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bde8:	movw	r1, #11276	; 0x2c0c
   1bdec:	movt	r1, #2
   1bdf0:	str	r0, [fp, #-88]	; 0xffffffa8
   1bdf4:	mov	r0, r1
   1bdf8:	bl	10fe0 <gettext@plt>
   1bdfc:	ldr	r1, [fp, #8]
   1be00:	ldr	r2, [r1]
   1be04:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1be08:	str	r0, [fp, #-92]	; 0xffffffa4
   1be0c:	mov	r0, r1
   1be10:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1be14:	bl	11004 <fprintf@plt>
   1be18:	b	1c25c <__assert_fail@plt+0xb174>
   1be1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be20:	movw	r1, #11292	; 0x2c1c
   1be24:	movt	r1, #2
   1be28:	str	r0, [fp, #-96]	; 0xffffffa0
   1be2c:	mov	r0, r1
   1be30:	bl	10fe0 <gettext@plt>
   1be34:	ldr	r1, [fp, #8]
   1be38:	ldr	r2, [r1]
   1be3c:	ldr	r1, [fp, #8]
   1be40:	ldr	r3, [r1, #4]
   1be44:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1be48:	str	r0, [fp, #-100]	; 0xffffff9c
   1be4c:	mov	r0, r1
   1be50:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1be54:	bl	11004 <fprintf@plt>
   1be58:	b	1c25c <__assert_fail@plt+0xb174>
   1be5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be60:	movw	r1, #11315	; 0x2c33
   1be64:	movt	r1, #2
   1be68:	str	r0, [fp, #-104]	; 0xffffff98
   1be6c:	mov	r0, r1
   1be70:	bl	10fe0 <gettext@plt>
   1be74:	ldr	r1, [fp, #8]
   1be78:	ldr	r2, [r1]
   1be7c:	ldr	r1, [fp, #8]
   1be80:	ldr	r3, [r1, #4]
   1be84:	ldr	r1, [fp, #8]
   1be88:	ldr	r1, [r1, #8]
   1be8c:	ldr	ip, [fp, #-104]	; 0xffffff98
   1be90:	str	r0, [fp, #-108]	; 0xffffff94
   1be94:	mov	r0, ip
   1be98:	ldr	lr, [fp, #-108]	; 0xffffff94
   1be9c:	str	r1, [sp, #112]	; 0x70
   1bea0:	mov	r1, lr
   1bea4:	ldr	r4, [sp, #112]	; 0x70
   1bea8:	str	r4, [sp]
   1beac:	bl	11004 <fprintf@plt>
   1beb0:	b	1c25c <__assert_fail@plt+0xb174>
   1beb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1beb8:	movw	r1, #11343	; 0x2c4f
   1bebc:	movt	r1, #2
   1bec0:	str	r0, [sp, #108]	; 0x6c
   1bec4:	mov	r0, r1
   1bec8:	bl	10fe0 <gettext@plt>
   1becc:	ldr	r1, [fp, #8]
   1bed0:	ldr	r2, [r1]
   1bed4:	ldr	r1, [fp, #8]
   1bed8:	ldr	r3, [r1, #4]
   1bedc:	ldr	r1, [fp, #8]
   1bee0:	ldr	r1, [r1, #8]
   1bee4:	ldr	ip, [fp, #8]
   1bee8:	ldr	ip, [ip, #12]
   1beec:	ldr	lr, [sp, #108]	; 0x6c
   1bef0:	str	r0, [sp, #104]	; 0x68
   1bef4:	mov	r0, lr
   1bef8:	ldr	r4, [sp, #104]	; 0x68
   1befc:	str	r1, [sp, #100]	; 0x64
   1bf00:	mov	r1, r4
   1bf04:	ldr	r5, [sp, #100]	; 0x64
   1bf08:	str	r5, [sp]
   1bf0c:	str	ip, [sp, #4]
   1bf10:	bl	11004 <fprintf@plt>
   1bf14:	b	1c25c <__assert_fail@plt+0xb174>
   1bf18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf1c:	movw	r1, #11375	; 0x2c6f
   1bf20:	movt	r1, #2
   1bf24:	str	r0, [sp, #96]	; 0x60
   1bf28:	mov	r0, r1
   1bf2c:	bl	10fe0 <gettext@plt>
   1bf30:	ldr	r1, [fp, #8]
   1bf34:	ldr	r2, [r1]
   1bf38:	ldr	r1, [fp, #8]
   1bf3c:	ldr	r3, [r1, #4]
   1bf40:	ldr	r1, [fp, #8]
   1bf44:	ldr	r1, [r1, #8]
   1bf48:	ldr	ip, [fp, #8]
   1bf4c:	ldr	ip, [ip, #12]
   1bf50:	ldr	lr, [fp, #8]
   1bf54:	ldr	lr, [lr, #16]
   1bf58:	ldr	r4, [sp, #96]	; 0x60
   1bf5c:	str	r0, [sp, #92]	; 0x5c
   1bf60:	mov	r0, r4
   1bf64:	ldr	r5, [sp, #92]	; 0x5c
   1bf68:	str	r1, [sp, #88]	; 0x58
   1bf6c:	mov	r1, r5
   1bf70:	ldr	r6, [sp, #88]	; 0x58
   1bf74:	str	r6, [sp]
   1bf78:	str	ip, [sp, #4]
   1bf7c:	str	lr, [sp, #8]
   1bf80:	bl	11004 <fprintf@plt>
   1bf84:	b	1c25c <__assert_fail@plt+0xb174>
   1bf88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf8c:	movw	r1, #11411	; 0x2c93
   1bf90:	movt	r1, #2
   1bf94:	str	r0, [sp, #84]	; 0x54
   1bf98:	mov	r0, r1
   1bf9c:	bl	10fe0 <gettext@plt>
   1bfa0:	ldr	r1, [fp, #8]
   1bfa4:	ldr	r2, [r1]
   1bfa8:	ldr	r1, [fp, #8]
   1bfac:	ldr	r3, [r1, #4]
   1bfb0:	ldr	r1, [fp, #8]
   1bfb4:	ldr	r1, [r1, #8]
   1bfb8:	ldr	ip, [fp, #8]
   1bfbc:	ldr	ip, [ip, #12]
   1bfc0:	ldr	lr, [fp, #8]
   1bfc4:	ldr	lr, [lr, #16]
   1bfc8:	ldr	r4, [fp, #8]
   1bfcc:	ldr	r4, [r4, #20]
   1bfd0:	ldr	r5, [sp, #84]	; 0x54
   1bfd4:	str	r0, [sp, #80]	; 0x50
   1bfd8:	mov	r0, r5
   1bfdc:	ldr	r6, [sp, #80]	; 0x50
   1bfe0:	str	r1, [sp, #76]	; 0x4c
   1bfe4:	mov	r1, r6
   1bfe8:	ldr	r7, [sp, #76]	; 0x4c
   1bfec:	str	r7, [sp]
   1bff0:	str	ip, [sp, #4]
   1bff4:	str	lr, [sp, #8]
   1bff8:	str	r4, [sp, #12]
   1bffc:	bl	11004 <fprintf@plt>
   1c000:	b	1c25c <__assert_fail@plt+0xb174>
   1c004:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c008:	movw	r1, #11451	; 0x2cbb
   1c00c:	movt	r1, #2
   1c010:	str	r0, [sp, #72]	; 0x48
   1c014:	mov	r0, r1
   1c018:	bl	10fe0 <gettext@plt>
   1c01c:	ldr	r1, [fp, #8]
   1c020:	ldr	r2, [r1]
   1c024:	ldr	r1, [fp, #8]
   1c028:	ldr	r3, [r1, #4]
   1c02c:	ldr	r1, [fp, #8]
   1c030:	ldr	r1, [r1, #8]
   1c034:	ldr	ip, [fp, #8]
   1c038:	ldr	ip, [ip, #12]
   1c03c:	ldr	lr, [fp, #8]
   1c040:	ldr	lr, [lr, #16]
   1c044:	ldr	r4, [fp, #8]
   1c048:	ldr	r4, [r4, #20]
   1c04c:	ldr	r5, [fp, #8]
   1c050:	ldr	r5, [r5, #24]
   1c054:	ldr	r6, [sp, #72]	; 0x48
   1c058:	str	r0, [sp, #68]	; 0x44
   1c05c:	mov	r0, r6
   1c060:	ldr	r7, [sp, #68]	; 0x44
   1c064:	str	r1, [sp, #64]	; 0x40
   1c068:	mov	r1, r7
   1c06c:	ldr	r8, [sp, #64]	; 0x40
   1c070:	str	r8, [sp]
   1c074:	str	ip, [sp, #4]
   1c078:	str	lr, [sp, #8]
   1c07c:	str	r4, [sp, #12]
   1c080:	str	r5, [sp, #16]
   1c084:	bl	11004 <fprintf@plt>
   1c088:	b	1c25c <__assert_fail@plt+0xb174>
   1c08c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c090:	movw	r1, #11495	; 0x2ce7
   1c094:	movt	r1, #2
   1c098:	str	r0, [sp, #60]	; 0x3c
   1c09c:	mov	r0, r1
   1c0a0:	bl	10fe0 <gettext@plt>
   1c0a4:	ldr	r1, [fp, #8]
   1c0a8:	ldr	r2, [r1]
   1c0ac:	ldr	r1, [fp, #8]
   1c0b0:	ldr	r3, [r1, #4]
   1c0b4:	ldr	r1, [fp, #8]
   1c0b8:	ldr	r1, [r1, #8]
   1c0bc:	ldr	ip, [fp, #8]
   1c0c0:	ldr	ip, [ip, #12]
   1c0c4:	ldr	lr, [fp, #8]
   1c0c8:	ldr	lr, [lr, #16]
   1c0cc:	ldr	r4, [fp, #8]
   1c0d0:	ldr	r4, [r4, #20]
   1c0d4:	ldr	r5, [fp, #8]
   1c0d8:	ldr	r5, [r5, #24]
   1c0dc:	ldr	r6, [fp, #8]
   1c0e0:	ldr	r6, [r6, #28]
   1c0e4:	ldr	r7, [sp, #60]	; 0x3c
   1c0e8:	str	r0, [sp, #56]	; 0x38
   1c0ec:	mov	r0, r7
   1c0f0:	ldr	r8, [sp, #56]	; 0x38
   1c0f4:	str	r1, [sp, #52]	; 0x34
   1c0f8:	mov	r1, r8
   1c0fc:	ldr	r9, [sp, #52]	; 0x34
   1c100:	str	r9, [sp]
   1c104:	str	ip, [sp, #4]
   1c108:	str	lr, [sp, #8]
   1c10c:	str	r4, [sp, #12]
   1c110:	str	r5, [sp, #16]
   1c114:	str	r6, [sp, #20]
   1c118:	bl	11004 <fprintf@plt>
   1c11c:	b	1c25c <__assert_fail@plt+0xb174>
   1c120:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c124:	movw	r1, #11543	; 0x2d17
   1c128:	movt	r1, #2
   1c12c:	str	r0, [sp, #48]	; 0x30
   1c130:	mov	r0, r1
   1c134:	bl	10fe0 <gettext@plt>
   1c138:	ldr	r1, [fp, #8]
   1c13c:	ldr	r2, [r1]
   1c140:	ldr	r1, [fp, #8]
   1c144:	ldr	r3, [r1, #4]
   1c148:	ldr	r1, [fp, #8]
   1c14c:	ldr	r1, [r1, #8]
   1c150:	ldr	ip, [fp, #8]
   1c154:	ldr	ip, [ip, #12]
   1c158:	ldr	lr, [fp, #8]
   1c15c:	ldr	lr, [lr, #16]
   1c160:	ldr	r4, [fp, #8]
   1c164:	ldr	r4, [r4, #20]
   1c168:	ldr	r5, [fp, #8]
   1c16c:	ldr	r5, [r5, #24]
   1c170:	ldr	r6, [fp, #8]
   1c174:	ldr	r6, [r6, #28]
   1c178:	ldr	r7, [fp, #8]
   1c17c:	ldr	r7, [r7, #32]
   1c180:	ldr	r8, [sp, #48]	; 0x30
   1c184:	str	r0, [sp, #44]	; 0x2c
   1c188:	mov	r0, r8
   1c18c:	ldr	r9, [sp, #44]	; 0x2c
   1c190:	str	r1, [sp, #40]	; 0x28
   1c194:	mov	r1, r9
   1c198:	ldr	sl, [sp, #40]	; 0x28
   1c19c:	str	sl, [sp]
   1c1a0:	str	ip, [sp, #4]
   1c1a4:	str	lr, [sp, #8]
   1c1a8:	str	r4, [sp, #12]
   1c1ac:	str	r5, [sp, #16]
   1c1b0:	str	r6, [sp, #20]
   1c1b4:	str	r7, [sp, #24]
   1c1b8:	bl	11004 <fprintf@plt>
   1c1bc:	b	1c25c <__assert_fail@plt+0xb174>
   1c1c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c1c4:	movw	r1, #11595	; 0x2d4b
   1c1c8:	movt	r1, #2
   1c1cc:	str	r0, [sp, #36]	; 0x24
   1c1d0:	mov	r0, r1
   1c1d4:	bl	10fe0 <gettext@plt>
   1c1d8:	ldr	r1, [fp, #8]
   1c1dc:	ldr	r2, [r1]
   1c1e0:	ldr	r1, [fp, #8]
   1c1e4:	ldr	r3, [r1, #4]
   1c1e8:	ldr	r1, [fp, #8]
   1c1ec:	ldr	r1, [r1, #8]
   1c1f0:	ldr	ip, [fp, #8]
   1c1f4:	ldr	ip, [ip, #12]
   1c1f8:	ldr	lr, [fp, #8]
   1c1fc:	ldr	lr, [lr, #16]
   1c200:	ldr	r4, [fp, #8]
   1c204:	ldr	r4, [r4, #20]
   1c208:	ldr	r5, [fp, #8]
   1c20c:	ldr	r5, [r5, #24]
   1c210:	ldr	r6, [fp, #8]
   1c214:	ldr	r6, [r6, #28]
   1c218:	ldr	r7, [fp, #8]
   1c21c:	ldr	r7, [r7, #32]
   1c220:	ldr	r8, [sp, #36]	; 0x24
   1c224:	str	r0, [sp, #32]
   1c228:	mov	r0, r8
   1c22c:	ldr	r9, [sp, #32]
   1c230:	str	r1, [sp, #28]
   1c234:	mov	r1, r9
   1c238:	ldr	sl, [sp, #28]
   1c23c:	str	sl, [sp]
   1c240:	str	ip, [sp, #4]
   1c244:	str	lr, [sp, #8]
   1c248:	str	r4, [sp, #12]
   1c24c:	str	r5, [sp, #16]
   1c250:	str	r6, [sp, #20]
   1c254:	str	r7, [sp, #24]
   1c258:	bl	11004 <fprintf@plt>
   1c25c:	sub	sp, fp, #28
   1c260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c264:	push	{fp, lr}
   1c268:	mov	fp, sp
   1c26c:	sub	sp, sp, #32
   1c270:	ldr	ip, [fp, #8]
   1c274:	str	r0, [fp, #-4]
   1c278:	str	r1, [fp, #-8]
   1c27c:	str	r2, [fp, #-12]
   1c280:	str	r3, [sp, #16]
   1c284:	movw	r0, #0
   1c288:	str	r0, [sp, #12]
   1c28c:	ldr	r0, [fp, #8]
   1c290:	ldr	r1, [sp, #12]
   1c294:	add	r0, r0, r1, lsl #2
   1c298:	ldr	r0, [r0]
   1c29c:	movw	r1, #0
   1c2a0:	cmp	r0, r1
   1c2a4:	beq	1c2bc <__assert_fail@plt+0xb1d4>
   1c2a8:	b	1c2ac <__assert_fail@plt+0xb1c4>
   1c2ac:	ldr	r0, [sp, #12]
   1c2b0:	add	r0, r0, #1
   1c2b4:	str	r0, [sp, #12]
   1c2b8:	b	1c28c <__assert_fail@plt+0xb1a4>
   1c2bc:	ldr	r0, [fp, #-4]
   1c2c0:	ldr	r1, [fp, #-8]
   1c2c4:	ldr	r2, [fp, #-12]
   1c2c8:	ldr	r3, [sp, #16]
   1c2cc:	ldr	ip, [fp, #8]
   1c2d0:	ldr	lr, [sp, #12]
   1c2d4:	str	ip, [sp]
   1c2d8:	str	lr, [sp, #4]
   1c2dc:	bl	1bc7c <__assert_fail@plt+0xab94>
   1c2e0:	mov	sp, fp
   1c2e4:	pop	{fp, pc}
   1c2e8:	push	{fp, lr}
   1c2ec:	mov	fp, sp
   1c2f0:	sub	sp, sp, #80	; 0x50
   1c2f4:	ldr	ip, [fp, #8]
   1c2f8:	str	ip, [fp, #-4]
   1c2fc:	str	r0, [fp, #-8]
   1c300:	str	r1, [fp, #-12]
   1c304:	str	r2, [fp, #-16]
   1c308:	str	r3, [fp, #-20]	; 0xffffffec
   1c30c:	movw	r0, #0
   1c310:	str	r0, [fp, #-24]	; 0xffffffe8
   1c314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c318:	cmp	r0, #10
   1c31c:	movw	r0, #0
   1c320:	str	r0, [sp, #12]
   1c324:	bcs	1c35c <__assert_fail@plt+0xb274>
   1c328:	ldr	r0, [fp, #-4]
   1c32c:	add	r1, r0, #4
   1c330:	str	r1, [fp, #-4]
   1c334:	ldr	r0, [r0]
   1c338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c33c:	add	r2, sp, #16
   1c340:	add	r1, r2, r1, lsl #2
   1c344:	str	r0, [r1]
   1c348:	movw	r1, #0
   1c34c:	cmp	r0, r1
   1c350:	movw	r0, #0
   1c354:	movne	r0, #1
   1c358:	str	r0, [sp, #12]
   1c35c:	ldr	r0, [sp, #12]
   1c360:	tst	r0, #1
   1c364:	beq	1c37c <__assert_fail@plt+0xb294>
   1c368:	b	1c36c <__assert_fail@plt+0xb284>
   1c36c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c370:	add	r0, r0, #1
   1c374:	str	r0, [fp, #-24]	; 0xffffffe8
   1c378:	b	1c314 <__assert_fail@plt+0xb22c>
   1c37c:	add	r0, sp, #16
   1c380:	ldr	r1, [fp, #-8]
   1c384:	ldr	r2, [fp, #-12]
   1c388:	ldr	r3, [fp, #-16]
   1c38c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1c390:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1c394:	str	r0, [sp, #8]
   1c398:	mov	r0, r1
   1c39c:	mov	r1, r2
   1c3a0:	mov	r2, r3
   1c3a4:	mov	r3, ip
   1c3a8:	ldr	ip, [sp, #8]
   1c3ac:	str	ip, [sp]
   1c3b0:	str	lr, [sp, #4]
   1c3b4:	bl	1bc7c <__assert_fail@plt+0xab94>
   1c3b8:	mov	sp, fp
   1c3bc:	pop	{fp, pc}
   1c3c0:	push	{fp, lr}
   1c3c4:	mov	fp, sp
   1c3c8:	sub	sp, sp, #24
   1c3cc:	str	r0, [fp, #-4]
   1c3d0:	str	r1, [fp, #-8]
   1c3d4:	str	r2, [sp, #12]
   1c3d8:	str	r3, [sp, #8]
   1c3dc:	add	r0, fp, #8
   1c3e0:	str	r0, [sp, #4]
   1c3e4:	ldr	r0, [fp, #-4]
   1c3e8:	ldr	r1, [fp, #-8]
   1c3ec:	ldr	r2, [sp, #12]
   1c3f0:	ldr	r3, [sp, #8]
   1c3f4:	ldr	ip, [sp, #4]
   1c3f8:	mov	lr, sp
   1c3fc:	str	ip, [lr]
   1c400:	bl	1c2e8 <__assert_fail@plt+0xb200>
   1c404:	add	r0, sp, #4
   1c408:	mov	sp, fp
   1c40c:	pop	{fp, pc}
   1c410:	push	{fp, lr}
   1c414:	mov	fp, sp
   1c418:	sub	sp, sp, #16
   1c41c:	movw	r0, #12628	; 0x3154
   1c420:	movt	r0, #3
   1c424:	ldr	r1, [r0]
   1c428:	movw	r0, #9242	; 0x241a
   1c42c:	movt	r0, #2
   1c430:	bl	10e78 <fputs_unlocked@plt>
   1c434:	movw	r1, #11655	; 0x2d87
   1c438:	movt	r1, #2
   1c43c:	str	r0, [fp, #-4]
   1c440:	mov	r0, r1
   1c444:	bl	10fe0 <gettext@plt>
   1c448:	movw	r1, #11675	; 0x2d9b
   1c44c:	movt	r1, #2
   1c450:	bl	10ea8 <printf@plt>
   1c454:	movw	r1, #11697	; 0x2db1
   1c458:	movt	r1, #2
   1c45c:	str	r0, [sp, #8]
   1c460:	mov	r0, r1
   1c464:	bl	10fe0 <gettext@plt>
   1c468:	movw	r1, #8717	; 0x220d
   1c46c:	movt	r1, #2
   1c470:	movw	r2, #9051	; 0x235b
   1c474:	movt	r2, #2
   1c478:	bl	10ea8 <printf@plt>
   1c47c:	movw	r1, #11717	; 0x2dc5
   1c480:	movt	r1, #2
   1c484:	str	r0, [sp, #4]
   1c488:	mov	r0, r1
   1c48c:	bl	10fe0 <gettext@plt>
   1c490:	movw	r1, #11756	; 0x2dec
   1c494:	movt	r1, #2
   1c498:	bl	10ea8 <printf@plt>
   1c49c:	mov	sp, fp
   1c4a0:	pop	{fp, pc}
   1c4a4:	push	{fp, lr}
   1c4a8:	mov	fp, sp
   1c4ac:	sub	sp, sp, #16
   1c4b0:	str	r0, [fp, #-4]
   1c4b4:	str	r1, [sp, #8]
   1c4b8:	str	r2, [sp, #4]
   1c4bc:	ldr	r0, [fp, #-4]
   1c4c0:	ldr	r1, [sp, #8]
   1c4c4:	ldr	r2, [sp, #4]
   1c4c8:	bl	1c4d4 <__assert_fail@plt+0xb3ec>
   1c4cc:	mov	sp, fp
   1c4d0:	pop	{fp, pc}
   1c4d4:	push	{fp, lr}
   1c4d8:	mov	fp, sp
   1c4dc:	sub	sp, sp, #16
   1c4e0:	str	r0, [fp, #-4]
   1c4e4:	str	r1, [sp, #8]
   1c4e8:	str	r2, [sp, #4]
   1c4ec:	ldr	r0, [fp, #-4]
   1c4f0:	ldr	r1, [sp, #8]
   1c4f4:	ldr	r2, [sp, #4]
   1c4f8:	bl	1a93c <__assert_fail@plt+0x9854>
   1c4fc:	str	r0, [sp]
   1c500:	ldr	r0, [sp]
   1c504:	movw	r1, #0
   1c508:	cmp	r0, r1
   1c50c:	bne	1c53c <__assert_fail@plt+0xb454>
   1c510:	ldr	r0, [fp, #-4]
   1c514:	movw	r1, #0
   1c518:	cmp	r0, r1
   1c51c:	beq	1c538 <__assert_fail@plt+0xb450>
   1c520:	ldr	r0, [sp, #8]
   1c524:	cmp	r0, #0
   1c528:	beq	1c53c <__assert_fail@plt+0xb454>
   1c52c:	ldr	r0, [sp, #4]
   1c530:	cmp	r0, #0
   1c534:	beq	1c53c <__assert_fail@plt+0xb454>
   1c538:	bl	1f280 <__assert_fail@plt+0xe198>
   1c53c:	ldr	r0, [sp]
   1c540:	mov	sp, fp
   1c544:	pop	{fp, pc}
   1c548:	push	{fp, lr}
   1c54c:	mov	fp, sp
   1c550:	sub	sp, sp, #8
   1c554:	str	r0, [sp, #4]
   1c558:	ldr	r0, [sp, #4]
   1c55c:	bl	213b0 <__assert_fail@plt+0x102c8>
   1c560:	bl	1c56c <__assert_fail@plt+0xb484>
   1c564:	mov	sp, fp
   1c568:	pop	{fp, pc}
   1c56c:	push	{fp, lr}
   1c570:	mov	fp, sp
   1c574:	sub	sp, sp, #8
   1c578:	str	r0, [sp, #4]
   1c57c:	ldr	r0, [sp, #4]
   1c580:	movw	r1, #0
   1c584:	cmp	r0, r1
   1c588:	bne	1c590 <__assert_fail@plt+0xb4a8>
   1c58c:	bl	1f280 <__assert_fail@plt+0xe198>
   1c590:	ldr	r0, [sp, #4]
   1c594:	mov	sp, fp
   1c598:	pop	{fp, pc}
   1c59c:	push	{fp, lr}
   1c5a0:	mov	fp, sp
   1c5a4:	sub	sp, sp, #8
   1c5a8:	str	r0, [sp, #4]
   1c5ac:	ldr	r0, [sp, #4]
   1c5b0:	bl	17ff0 <__assert_fail@plt+0x6f08>
   1c5b4:	bl	1c56c <__assert_fail@plt+0xb484>
   1c5b8:	mov	sp, fp
   1c5bc:	pop	{fp, pc}
   1c5c0:	push	{fp, lr}
   1c5c4:	mov	fp, sp
   1c5c8:	sub	sp, sp, #8
   1c5cc:	str	r0, [sp, #4]
   1c5d0:	ldr	r0, [sp, #4]
   1c5d4:	bl	1c548 <__assert_fail@plt+0xb460>
   1c5d8:	mov	sp, fp
   1c5dc:	pop	{fp, pc}
   1c5e0:	push	{fp, lr}
   1c5e4:	mov	fp, sp
   1c5e8:	sub	sp, sp, #16
   1c5ec:	str	r0, [fp, #-4]
   1c5f0:	str	r1, [sp, #8]
   1c5f4:	ldr	r0, [fp, #-4]
   1c5f8:	ldr	r1, [sp, #8]
   1c5fc:	bl	21420 <__assert_fail@plt+0x10338>
   1c600:	str	r0, [sp, #4]
   1c604:	ldr	r0, [sp, #4]
   1c608:	movw	r1, #0
   1c60c:	cmp	r0, r1
   1c610:	bne	1c634 <__assert_fail@plt+0xb54c>
   1c614:	ldr	r0, [fp, #-4]
   1c618:	movw	r1, #0
   1c61c:	cmp	r0, r1
   1c620:	beq	1c630 <__assert_fail@plt+0xb548>
   1c624:	ldr	r0, [sp, #8]
   1c628:	cmp	r0, #0
   1c62c:	beq	1c634 <__assert_fail@plt+0xb54c>
   1c630:	bl	1f280 <__assert_fail@plt+0xe198>
   1c634:	ldr	r0, [sp, #4]
   1c638:	mov	sp, fp
   1c63c:	pop	{fp, pc}
   1c640:	push	{fp, lr}
   1c644:	mov	fp, sp
   1c648:	sub	sp, sp, #8
   1c64c:	str	r0, [sp, #4]
   1c650:	str	r1, [sp]
   1c654:	ldr	r0, [sp, #4]
   1c658:	ldr	r1, [sp]
   1c65c:	bl	18030 <__assert_fail@plt+0x6f48>
   1c660:	bl	1c56c <__assert_fail@plt+0xb484>
   1c664:	mov	sp, fp
   1c668:	pop	{fp, pc}
   1c66c:	push	{fp, lr}
   1c670:	mov	fp, sp
   1c674:	sub	sp, sp, #16
   1c678:	str	r0, [fp, #-4]
   1c67c:	str	r1, [sp, #8]
   1c680:	str	r2, [sp, #4]
   1c684:	ldr	r0, [fp, #-4]
   1c688:	ldr	r1, [sp, #8]
   1c68c:	ldr	r2, [sp, #4]
   1c690:	bl	18128 <__assert_fail@plt+0x7040>
   1c694:	bl	1c56c <__assert_fail@plt+0xb484>
   1c698:	mov	sp, fp
   1c69c:	pop	{fp, pc}
   1c6a0:	push	{fp, lr}
   1c6a4:	mov	fp, sp
   1c6a8:	sub	sp, sp, #8
   1c6ac:	str	r0, [sp, #4]
   1c6b0:	str	r1, [sp]
   1c6b4:	ldr	r1, [sp, #4]
   1c6b8:	ldr	r2, [sp]
   1c6bc:	movw	r0, #0
   1c6c0:	bl	1c4d4 <__assert_fail@plt+0xb3ec>
   1c6c4:	mov	sp, fp
   1c6c8:	pop	{fp, pc}
   1c6cc:	push	{fp, lr}
   1c6d0:	mov	fp, sp
   1c6d4:	sub	sp, sp, #8
   1c6d8:	str	r0, [sp, #4]
   1c6dc:	str	r1, [sp]
   1c6e0:	ldr	r1, [sp, #4]
   1c6e4:	ldr	r2, [sp]
   1c6e8:	movw	r0, #0
   1c6ec:	bl	1c66c <__assert_fail@plt+0xb584>
   1c6f0:	mov	sp, fp
   1c6f4:	pop	{fp, pc}
   1c6f8:	push	{fp, lr}
   1c6fc:	mov	fp, sp
   1c700:	sub	sp, sp, #8
   1c704:	str	r0, [sp, #4]
   1c708:	str	r1, [sp]
   1c70c:	ldr	r0, [sp, #4]
   1c710:	ldr	r1, [sp]
   1c714:	movw	r2, #1
   1c718:	bl	1c724 <__assert_fail@plt+0xb63c>
   1c71c:	mov	sp, fp
   1c720:	pop	{fp, pc}
   1c724:	push	{fp, lr}
   1c728:	mov	fp, sp
   1c72c:	sub	sp, sp, #16
   1c730:	str	r0, [fp, #-4]
   1c734:	str	r1, [sp, #8]
   1c738:	str	r2, [sp, #4]
   1c73c:	ldr	r0, [sp, #8]
   1c740:	ldr	r0, [r0]
   1c744:	str	r0, [sp]
   1c748:	ldr	r0, [fp, #-4]
   1c74c:	movw	r1, #0
   1c750:	cmp	r0, r1
   1c754:	bne	1c7a0 <__assert_fail@plt+0xb6b8>
   1c758:	ldr	r0, [sp]
   1c75c:	cmp	r0, #0
   1c760:	bne	1c79c <__assert_fail@plt+0xb6b4>
   1c764:	ldr	r0, [sp, #4]
   1c768:	movw	r1, #64	; 0x40
   1c76c:	udiv	r0, r1, r0
   1c770:	str	r0, [sp]
   1c774:	ldr	r0, [sp]
   1c778:	cmp	r0, #0
   1c77c:	movw	r0, #0
   1c780:	movne	r0, #1
   1c784:	mvn	r1, #0
   1c788:	eor	r0, r0, r1
   1c78c:	and	r0, r0, #1
   1c790:	ldr	r1, [sp]
   1c794:	add	r0, r1, r0
   1c798:	str	r0, [sp]
   1c79c:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c7a0:	ldr	r0, [sp]
   1c7a4:	ldr	r1, [sp]
   1c7a8:	lsr	r1, r1, #1
   1c7ac:	add	r1, r1, #1
   1c7b0:	adds	r0, r0, r1
   1c7b4:	mov	r1, #0
   1c7b8:	adc	r1, r1, #0
   1c7bc:	str	r0, [sp]
   1c7c0:	tst	r1, #1
   1c7c4:	beq	1c7cc <__assert_fail@plt+0xb6e4>
   1c7c8:	bl	1f280 <__assert_fail@plt+0xe198>
   1c7cc:	b	1c7d0 <__assert_fail@plt+0xb6e8>
   1c7d0:	ldr	r0, [fp, #-4]
   1c7d4:	ldr	r1, [sp]
   1c7d8:	ldr	r2, [sp, #4]
   1c7dc:	bl	1c4d4 <__assert_fail@plt+0xb3ec>
   1c7e0:	str	r0, [fp, #-4]
   1c7e4:	ldr	r0, [sp]
   1c7e8:	ldr	r1, [sp, #8]
   1c7ec:	str	r0, [r1]
   1c7f0:	ldr	r0, [fp, #-4]
   1c7f4:	mov	sp, fp
   1c7f8:	pop	{fp, pc}
   1c7fc:	push	{fp, lr}
   1c800:	mov	fp, sp
   1c804:	sub	sp, sp, #216	; 0xd8
   1c808:	ldr	ip, [fp, #8]
   1c80c:	str	r0, [fp, #-4]
   1c810:	str	r1, [fp, #-8]
   1c814:	str	r2, [fp, #-12]
   1c818:	str	r3, [fp, #-16]
   1c81c:	ldr	r0, [fp, #-8]
   1c820:	ldr	r0, [r0]
   1c824:	str	r0, [fp, #-20]	; 0xffffffec
   1c828:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c82c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c830:	asr	r1, r1, #1
   1c834:	add	r1, r0, r1
   1c838:	mov	r2, #1
   1c83c:	cmp	r1, r0
   1c840:	movwvc	r2, #0
   1c844:	str	r1, [fp, #-24]	; 0xffffffe8
   1c848:	tst	r2, #1
   1c84c:	beq	1c858 <__assert_fail@plt+0xb770>
   1c850:	ldr	r0, [pc, #4036]	; 1d81c <__assert_fail@plt+0xc734>
   1c854:	str	r0, [fp, #-24]	; 0xffffffe8
   1c858:	ldr	r0, [fp, #-16]
   1c85c:	movw	r1, #0
   1c860:	cmp	r1, r0
   1c864:	bgt	1c880 <__assert_fail@plt+0xb798>
   1c868:	ldr	r0, [fp, #-16]
   1c86c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c870:	cmp	r0, r1
   1c874:	bge	1c880 <__assert_fail@plt+0xb798>
   1c878:	ldr	r0, [fp, #-16]
   1c87c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c880:	b	1cc58 <__assert_fail@plt+0xbb70>
   1c884:	b	1c888 <__assert_fail@plt+0xb7a0>
   1c888:	ldr	r0, [fp, #8]
   1c88c:	cmp	r0, #0
   1c890:	bge	1c9a4 <__assert_fail@plt+0xb8bc>
   1c894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c898:	cmp	r0, #0
   1c89c:	bge	1c928 <__assert_fail@plt+0xb840>
   1c8a0:	b	1c8a4 <__assert_fail@plt+0xb7bc>
   1c8a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8a8:	ldr	r1, [fp, #8]
   1c8ac:	movw	r2, #127	; 0x7f
   1c8b0:	sdiv	r1, r2, r1
   1c8b4:	cmp	r0, r1
   1c8b8:	blt	1ca44 <__assert_fail@plt+0xb95c>
   1c8bc:	b	1ca5c <__assert_fail@plt+0xb974>
   1c8c0:	b	1c8c4 <__assert_fail@plt+0xb7dc>
   1c8c4:	ldr	r0, [pc, #4084]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1c8c8:	ldr	r1, [fp, #8]
   1c8cc:	cmp	r1, r0
   1c8d0:	blt	1c8e8 <__assert_fail@plt+0xb800>
   1c8d4:	b	1c8f4 <__assert_fail@plt+0xb80c>
   1c8d8:	ldr	r0, [fp, #8]
   1c8dc:	movw	r1, #0
   1c8e0:	cmp	r1, r0
   1c8e4:	bge	1c8f4 <__assert_fail@plt+0xb80c>
   1c8e8:	movw	r0, #0
   1c8ec:	str	r0, [fp, #-36]	; 0xffffffdc
   1c8f0:	b	1c90c <__assert_fail@plt+0xb824>
   1c8f4:	ldr	r0, [fp, #8]
   1c8f8:	movw	r1, #0
   1c8fc:	sub	r0, r1, r0
   1c900:	movw	r1, #127	; 0x7f
   1c904:	sdiv	r0, r1, r0
   1c908:	str	r0, [fp, #-36]	; 0xffffffdc
   1c90c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c914:	mvn	r2, #0
   1c918:	sub	r1, r2, r1
   1c91c:	cmp	r0, r1
   1c920:	ble	1ca44 <__assert_fail@plt+0xb95c>
   1c924:	b	1ca5c <__assert_fail@plt+0xb974>
   1c928:	b	1c92c <__assert_fail@plt+0xb844>
   1c92c:	b	1c988 <__assert_fail@plt+0xb8a0>
   1c930:	b	1c988 <__assert_fail@plt+0xb8a0>
   1c934:	ldr	r0, [fp, #8]
   1c938:	cmn	r0, #1
   1c93c:	bne	1c988 <__assert_fail@plt+0xb8a0>
   1c940:	b	1c944 <__assert_fail@plt+0xb85c>
   1c944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c948:	mvn	r1, #127	; 0x7f
   1c94c:	add	r0, r0, r1
   1c950:	movw	r1, #0
   1c954:	cmp	r1, r0
   1c958:	blt	1ca44 <__assert_fail@plt+0xb95c>
   1c95c:	b	1ca5c <__assert_fail@plt+0xb974>
   1c960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c964:	movw	r1, #0
   1c968:	cmp	r1, r0
   1c96c:	bge	1ca5c <__assert_fail@plt+0xb974>
   1c970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c974:	sub	r0, r0, #1
   1c978:	movw	r1, #127	; 0x7f
   1c97c:	cmp	r1, r0
   1c980:	blt	1ca44 <__assert_fail@plt+0xb95c>
   1c984:	b	1ca5c <__assert_fail@plt+0xb974>
   1c988:	ldr	r0, [fp, #8]
   1c98c:	mvn	r1, #127	; 0x7f
   1c990:	sdiv	r0, r1, r0
   1c994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c998:	cmp	r0, r1
   1c99c:	blt	1ca44 <__assert_fail@plt+0xb95c>
   1c9a0:	b	1ca5c <__assert_fail@plt+0xb974>
   1c9a4:	ldr	r0, [fp, #8]
   1c9a8:	cmp	r0, #0
   1c9ac:	bne	1c9b4 <__assert_fail@plt+0xb8cc>
   1c9b0:	b	1ca5c <__assert_fail@plt+0xb974>
   1c9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9b8:	cmp	r0, #0
   1c9bc:	bge	1ca2c <__assert_fail@plt+0xb944>
   1c9c0:	b	1c9c4 <__assert_fail@plt+0xb8dc>
   1c9c4:	b	1ca10 <__assert_fail@plt+0xb928>
   1c9c8:	b	1ca10 <__assert_fail@plt+0xb928>
   1c9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9d0:	cmn	r0, #1
   1c9d4:	bne	1ca10 <__assert_fail@plt+0xb928>
   1c9d8:	b	1c9dc <__assert_fail@plt+0xb8f4>
   1c9dc:	ldr	r0, [fp, #8]
   1c9e0:	mvn	r1, #127	; 0x7f
   1c9e4:	add	r0, r0, r1
   1c9e8:	movw	r1, #0
   1c9ec:	cmp	r1, r0
   1c9f0:	blt	1ca44 <__assert_fail@plt+0xb95c>
   1c9f4:	b	1ca5c <__assert_fail@plt+0xb974>
   1c9f8:	ldr	r0, [fp, #8]
   1c9fc:	sub	r0, r0, #1
   1ca00:	movw	r1, #127	; 0x7f
   1ca04:	cmp	r1, r0
   1ca08:	blt	1ca44 <__assert_fail@plt+0xb95c>
   1ca0c:	b	1ca5c <__assert_fail@plt+0xb974>
   1ca10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca14:	mvn	r1, #127	; 0x7f
   1ca18:	sdiv	r0, r1, r0
   1ca1c:	ldr	r1, [fp, #8]
   1ca20:	cmp	r0, r1
   1ca24:	blt	1ca44 <__assert_fail@plt+0xb95c>
   1ca28:	b	1ca5c <__assert_fail@plt+0xb974>
   1ca2c:	ldr	r0, [fp, #8]
   1ca30:	movw	r1, #127	; 0x7f
   1ca34:	sdiv	r0, r1, r0
   1ca38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca3c:	cmp	r0, r1
   1ca40:	bge	1ca5c <__assert_fail@plt+0xb974>
   1ca44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca48:	ldr	r1, [fp, #8]
   1ca4c:	mul	r0, r0, r1
   1ca50:	sxtb	r0, r0
   1ca54:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca58:	b	1dc20 <__assert_fail@plt+0xcb38>
   1ca5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca60:	ldr	r1, [fp, #8]
   1ca64:	mul	r0, r0, r1
   1ca68:	sxtb	r0, r0
   1ca6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca70:	b	1dc2c <__assert_fail@plt+0xcb44>
   1ca74:	ldr	r0, [fp, #8]
   1ca78:	cmp	r0, #0
   1ca7c:	bge	1cb8c <__assert_fail@plt+0xbaa4>
   1ca80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca84:	cmp	r0, #0
   1ca88:	bge	1cb14 <__assert_fail@plt+0xba2c>
   1ca8c:	b	1ca90 <__assert_fail@plt+0xb9a8>
   1ca90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca94:	ldr	r1, [fp, #8]
   1ca98:	movw	r2, #255	; 0xff
   1ca9c:	sdiv	r1, r2, r1
   1caa0:	cmp	r0, r1
   1caa4:	blt	1cc28 <__assert_fail@plt+0xbb40>
   1caa8:	b	1cc40 <__assert_fail@plt+0xbb58>
   1caac:	b	1cab0 <__assert_fail@plt+0xb9c8>
   1cab0:	ldr	r0, [pc, #3592]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1cab4:	ldr	r1, [fp, #8]
   1cab8:	cmp	r1, r0
   1cabc:	blt	1cad4 <__assert_fail@plt+0xb9ec>
   1cac0:	b	1cae0 <__assert_fail@plt+0xb9f8>
   1cac4:	ldr	r0, [fp, #8]
   1cac8:	movw	r1, #0
   1cacc:	cmp	r1, r0
   1cad0:	bge	1cae0 <__assert_fail@plt+0xb9f8>
   1cad4:	movw	r0, #0
   1cad8:	str	r0, [fp, #-40]	; 0xffffffd8
   1cadc:	b	1caf8 <__assert_fail@plt+0xba10>
   1cae0:	ldr	r0, [fp, #8]
   1cae4:	movw	r1, #0
   1cae8:	sub	r0, r1, r0
   1caec:	movw	r1, #255	; 0xff
   1caf0:	sdiv	r0, r1, r0
   1caf4:	str	r0, [fp, #-40]	; 0xffffffd8
   1caf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cafc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb00:	mvn	r2, #0
   1cb04:	sub	r1, r2, r1
   1cb08:	cmp	r0, r1
   1cb0c:	ble	1cc28 <__assert_fail@plt+0xbb40>
   1cb10:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cb14:	b	1cb18 <__assert_fail@plt+0xba30>
   1cb18:	b	1cb70 <__assert_fail@plt+0xba88>
   1cb1c:	b	1cb70 <__assert_fail@plt+0xba88>
   1cb20:	ldr	r0, [fp, #8]
   1cb24:	cmn	r0, #1
   1cb28:	bne	1cb70 <__assert_fail@plt+0xba88>
   1cb2c:	b	1cb30 <__assert_fail@plt+0xba48>
   1cb30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb34:	add	r0, r0, #0
   1cb38:	movw	r1, #0
   1cb3c:	cmp	r1, r0
   1cb40:	blt	1cc28 <__assert_fail@plt+0xbb40>
   1cb44:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cb48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb4c:	movw	r1, #0
   1cb50:	cmp	r1, r0
   1cb54:	bge	1cc40 <__assert_fail@plt+0xbb58>
   1cb58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb5c:	sub	r0, r0, #1
   1cb60:	mvn	r1, #0
   1cb64:	cmp	r1, r0
   1cb68:	blt	1cc28 <__assert_fail@plt+0xbb40>
   1cb6c:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cb70:	ldr	r0, [fp, #8]
   1cb74:	movw	r1, #0
   1cb78:	sdiv	r0, r1, r0
   1cb7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb80:	cmp	r0, r1
   1cb84:	blt	1cc28 <__assert_fail@plt+0xbb40>
   1cb88:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cb8c:	ldr	r0, [fp, #8]
   1cb90:	cmp	r0, #0
   1cb94:	bne	1cb9c <__assert_fail@plt+0xbab4>
   1cb98:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cb9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cba0:	cmp	r0, #0
   1cba4:	bge	1cc10 <__assert_fail@plt+0xbb28>
   1cba8:	b	1cbac <__assert_fail@plt+0xbac4>
   1cbac:	b	1cbf4 <__assert_fail@plt+0xbb0c>
   1cbb0:	b	1cbf4 <__assert_fail@plt+0xbb0c>
   1cbb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbb8:	cmn	r0, #1
   1cbbc:	bne	1cbf4 <__assert_fail@plt+0xbb0c>
   1cbc0:	b	1cbc4 <__assert_fail@plt+0xbadc>
   1cbc4:	ldr	r0, [fp, #8]
   1cbc8:	add	r0, r0, #0
   1cbcc:	movw	r1, #0
   1cbd0:	cmp	r1, r0
   1cbd4:	blt	1cc28 <__assert_fail@plt+0xbb40>
   1cbd8:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cbdc:	ldr	r0, [fp, #8]
   1cbe0:	sub	r0, r0, #1
   1cbe4:	mvn	r1, #0
   1cbe8:	cmp	r1, r0
   1cbec:	blt	1cc28 <__assert_fail@plt+0xbb40>
   1cbf0:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cbf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbf8:	movw	r1, #0
   1cbfc:	sdiv	r0, r1, r0
   1cc00:	ldr	r1, [fp, #8]
   1cc04:	cmp	r0, r1
   1cc08:	blt	1cc28 <__assert_fail@plt+0xbb40>
   1cc0c:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cc10:	ldr	r0, [fp, #8]
   1cc14:	movw	r1, #255	; 0xff
   1cc18:	sdiv	r0, r1, r0
   1cc1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc20:	cmp	r0, r1
   1cc24:	bge	1cc40 <__assert_fail@plt+0xbb58>
   1cc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc2c:	ldr	r1, [fp, #8]
   1cc30:	mul	r0, r0, r1
   1cc34:	and	r0, r0, #255	; 0xff
   1cc38:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc3c:	b	1dc20 <__assert_fail@plt+0xcb38>
   1cc40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc44:	ldr	r1, [fp, #8]
   1cc48:	mul	r0, r0, r1
   1cc4c:	and	r0, r0, #255	; 0xff
   1cc50:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc54:	b	1dc2c <__assert_fail@plt+0xcb44>
   1cc58:	b	1d030 <__assert_fail@plt+0xbf48>
   1cc5c:	b	1cc60 <__assert_fail@plt+0xbb78>
   1cc60:	ldr	r0, [fp, #8]
   1cc64:	cmp	r0, #0
   1cc68:	bge	1cd7c <__assert_fail@plt+0xbc94>
   1cc6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc70:	cmp	r0, #0
   1cc74:	bge	1cd00 <__assert_fail@plt+0xbc18>
   1cc78:	b	1cc7c <__assert_fail@plt+0xbb94>
   1cc7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc80:	ldr	r1, [fp, #8]
   1cc84:	movw	r2, #32767	; 0x7fff
   1cc88:	sdiv	r1, r2, r1
   1cc8c:	cmp	r0, r1
   1cc90:	blt	1ce1c <__assert_fail@plt+0xbd34>
   1cc94:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1cc98:	b	1cc9c <__assert_fail@plt+0xbbb4>
   1cc9c:	ldr	r0, [pc, #3100]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1cca0:	ldr	r1, [fp, #8]
   1cca4:	cmp	r1, r0
   1cca8:	blt	1ccc0 <__assert_fail@plt+0xbbd8>
   1ccac:	b	1cccc <__assert_fail@plt+0xbbe4>
   1ccb0:	ldr	r0, [fp, #8]
   1ccb4:	movw	r1, #0
   1ccb8:	cmp	r1, r0
   1ccbc:	bge	1cccc <__assert_fail@plt+0xbbe4>
   1ccc0:	movw	r0, #0
   1ccc4:	str	r0, [fp, #-44]	; 0xffffffd4
   1ccc8:	b	1cce4 <__assert_fail@plt+0xbbfc>
   1cccc:	ldr	r0, [fp, #8]
   1ccd0:	movw	r1, #0
   1ccd4:	sub	r0, r1, r0
   1ccd8:	movw	r1, #32767	; 0x7fff
   1ccdc:	sdiv	r0, r1, r0
   1cce0:	str	r0, [fp, #-44]	; 0xffffffd4
   1cce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cce8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ccec:	mvn	r2, #0
   1ccf0:	sub	r1, r2, r1
   1ccf4:	cmp	r0, r1
   1ccf8:	ble	1ce1c <__assert_fail@plt+0xbd34>
   1ccfc:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1cd00:	b	1cd04 <__assert_fail@plt+0xbc1c>
   1cd04:	b	1cd60 <__assert_fail@plt+0xbc78>
   1cd08:	b	1cd60 <__assert_fail@plt+0xbc78>
   1cd0c:	ldr	r0, [fp, #8]
   1cd10:	cmn	r0, #1
   1cd14:	bne	1cd60 <__assert_fail@plt+0xbc78>
   1cd18:	b	1cd1c <__assert_fail@plt+0xbc34>
   1cd1c:	ldr	r0, [pc, #4068]	; 1dd08 <__assert_fail@plt+0xcc20>
   1cd20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd24:	add	r0, r1, r0
   1cd28:	movw	r1, #0
   1cd2c:	cmp	r1, r0
   1cd30:	blt	1ce1c <__assert_fail@plt+0xbd34>
   1cd34:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1cd38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd3c:	movw	r1, #0
   1cd40:	cmp	r1, r0
   1cd44:	bge	1ce34 <__assert_fail@plt+0xbd4c>
   1cd48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd4c:	sub	r0, r0, #1
   1cd50:	movw	r1, #32767	; 0x7fff
   1cd54:	cmp	r1, r0
   1cd58:	blt	1ce1c <__assert_fail@plt+0xbd34>
   1cd5c:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1cd60:	ldr	r0, [pc, #4000]	; 1dd08 <__assert_fail@plt+0xcc20>
   1cd64:	ldr	r1, [fp, #8]
   1cd68:	sdiv	r0, r0, r1
   1cd6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd70:	cmp	r0, r1
   1cd74:	blt	1ce1c <__assert_fail@plt+0xbd34>
   1cd78:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1cd7c:	ldr	r0, [fp, #8]
   1cd80:	cmp	r0, #0
   1cd84:	bne	1cd8c <__assert_fail@plt+0xbca4>
   1cd88:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1cd8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd90:	cmp	r0, #0
   1cd94:	bge	1ce04 <__assert_fail@plt+0xbd1c>
   1cd98:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cd9c:	b	1cde8 <__assert_fail@plt+0xbd00>
   1cda0:	b	1cde8 <__assert_fail@plt+0xbd00>
   1cda4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cda8:	cmn	r0, #1
   1cdac:	bne	1cde8 <__assert_fail@plt+0xbd00>
   1cdb0:	b	1cdb4 <__assert_fail@plt+0xbccc>
   1cdb4:	ldr	r0, [pc, #3916]	; 1dd08 <__assert_fail@plt+0xcc20>
   1cdb8:	ldr	r1, [fp, #8]
   1cdbc:	add	r0, r1, r0
   1cdc0:	movw	r1, #0
   1cdc4:	cmp	r1, r0
   1cdc8:	blt	1ce1c <__assert_fail@plt+0xbd34>
   1cdcc:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1cdd0:	ldr	r0, [fp, #8]
   1cdd4:	sub	r0, r0, #1
   1cdd8:	movw	r1, #32767	; 0x7fff
   1cddc:	cmp	r1, r0
   1cde0:	blt	1ce1c <__assert_fail@plt+0xbd34>
   1cde4:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1cde8:	ldr	r0, [pc, #3864]	; 1dd08 <__assert_fail@plt+0xcc20>
   1cdec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdf0:	sdiv	r0, r0, r1
   1cdf4:	ldr	r1, [fp, #8]
   1cdf8:	cmp	r0, r1
   1cdfc:	blt	1ce1c <__assert_fail@plt+0xbd34>
   1ce00:	b	1ce34 <__assert_fail@plt+0xbd4c>
   1ce04:	ldr	r0, [fp, #8]
   1ce08:	movw	r1, #32767	; 0x7fff
   1ce0c:	sdiv	r0, r1, r0
   1ce10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce14:	cmp	r0, r1
   1ce18:	bge	1ce34 <__assert_fail@plt+0xbd4c>
   1ce1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce20:	ldr	r1, [fp, #8]
   1ce24:	mul	r0, r0, r1
   1ce28:	sxth	r0, r0
   1ce2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce30:	b	1dc20 <__assert_fail@plt+0xcb38>
   1ce34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce38:	ldr	r1, [fp, #8]
   1ce3c:	mul	r0, r0, r1
   1ce40:	sxth	r0, r0
   1ce44:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce48:	b	1dc2c <__assert_fail@plt+0xcb44>
   1ce4c:	ldr	r0, [fp, #8]
   1ce50:	cmp	r0, #0
   1ce54:	bge	1cf64 <__assert_fail@plt+0xbe7c>
   1ce58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce5c:	cmp	r0, #0
   1ce60:	bge	1ceec <__assert_fail@plt+0xbe04>
   1ce64:	b	1ce68 <__assert_fail@plt+0xbd80>
   1ce68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce6c:	ldr	r1, [fp, #8]
   1ce70:	movw	r2, #65535	; 0xffff
   1ce74:	sdiv	r1, r2, r1
   1ce78:	cmp	r0, r1
   1ce7c:	blt	1d000 <__assert_fail@plt+0xbf18>
   1ce80:	b	1d018 <__assert_fail@plt+0xbf30>
   1ce84:	b	1ce88 <__assert_fail@plt+0xbda0>
   1ce88:	ldr	r0, [pc, #2608]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1ce8c:	ldr	r1, [fp, #8]
   1ce90:	cmp	r1, r0
   1ce94:	blt	1ceac <__assert_fail@plt+0xbdc4>
   1ce98:	b	1ceb8 <__assert_fail@plt+0xbdd0>
   1ce9c:	ldr	r0, [fp, #8]
   1cea0:	movw	r1, #0
   1cea4:	cmp	r1, r0
   1cea8:	bge	1ceb8 <__assert_fail@plt+0xbdd0>
   1ceac:	movw	r0, #0
   1ceb0:	str	r0, [fp, #-48]	; 0xffffffd0
   1ceb4:	b	1ced0 <__assert_fail@plt+0xbde8>
   1ceb8:	ldr	r0, [fp, #8]
   1cebc:	movw	r1, #0
   1cec0:	sub	r0, r1, r0
   1cec4:	movw	r1, #65535	; 0xffff
   1cec8:	sdiv	r0, r1, r0
   1cecc:	str	r0, [fp, #-48]	; 0xffffffd0
   1ced0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ced4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ced8:	mvn	r2, #0
   1cedc:	sub	r1, r2, r1
   1cee0:	cmp	r0, r1
   1cee4:	ble	1d000 <__assert_fail@plt+0xbf18>
   1cee8:	b	1d018 <__assert_fail@plt+0xbf30>
   1ceec:	b	1cef0 <__assert_fail@plt+0xbe08>
   1cef0:	b	1cf48 <__assert_fail@plt+0xbe60>
   1cef4:	b	1cf48 <__assert_fail@plt+0xbe60>
   1cef8:	ldr	r0, [fp, #8]
   1cefc:	cmn	r0, #1
   1cf00:	bne	1cf48 <__assert_fail@plt+0xbe60>
   1cf04:	b	1cf08 <__assert_fail@plt+0xbe20>
   1cf08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf0c:	add	r0, r0, #0
   1cf10:	movw	r1, #0
   1cf14:	cmp	r1, r0
   1cf18:	blt	1d000 <__assert_fail@plt+0xbf18>
   1cf1c:	b	1d018 <__assert_fail@plt+0xbf30>
   1cf20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf24:	movw	r1, #0
   1cf28:	cmp	r1, r0
   1cf2c:	bge	1d018 <__assert_fail@plt+0xbf30>
   1cf30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf34:	sub	r0, r0, #1
   1cf38:	mvn	r1, #0
   1cf3c:	cmp	r1, r0
   1cf40:	blt	1d000 <__assert_fail@plt+0xbf18>
   1cf44:	b	1d018 <__assert_fail@plt+0xbf30>
   1cf48:	ldr	r0, [fp, #8]
   1cf4c:	movw	r1, #0
   1cf50:	sdiv	r0, r1, r0
   1cf54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf58:	cmp	r0, r1
   1cf5c:	blt	1d000 <__assert_fail@plt+0xbf18>
   1cf60:	b	1d018 <__assert_fail@plt+0xbf30>
   1cf64:	ldr	r0, [fp, #8]
   1cf68:	cmp	r0, #0
   1cf6c:	bne	1cf74 <__assert_fail@plt+0xbe8c>
   1cf70:	b	1d018 <__assert_fail@plt+0xbf30>
   1cf74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf78:	cmp	r0, #0
   1cf7c:	bge	1cfe8 <__assert_fail@plt+0xbf00>
   1cf80:	b	1cf84 <__assert_fail@plt+0xbe9c>
   1cf84:	b	1cfcc <__assert_fail@plt+0xbee4>
   1cf88:	b	1cfcc <__assert_fail@plt+0xbee4>
   1cf8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf90:	cmn	r0, #1
   1cf94:	bne	1cfcc <__assert_fail@plt+0xbee4>
   1cf98:	b	1cf9c <__assert_fail@plt+0xbeb4>
   1cf9c:	ldr	r0, [fp, #8]
   1cfa0:	add	r0, r0, #0
   1cfa4:	movw	r1, #0
   1cfa8:	cmp	r1, r0
   1cfac:	blt	1d000 <__assert_fail@plt+0xbf18>
   1cfb0:	b	1d018 <__assert_fail@plt+0xbf30>
   1cfb4:	ldr	r0, [fp, #8]
   1cfb8:	sub	r0, r0, #1
   1cfbc:	mvn	r1, #0
   1cfc0:	cmp	r1, r0
   1cfc4:	blt	1d000 <__assert_fail@plt+0xbf18>
   1cfc8:	b	1d018 <__assert_fail@plt+0xbf30>
   1cfcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfd0:	movw	r1, #0
   1cfd4:	sdiv	r0, r1, r0
   1cfd8:	ldr	r1, [fp, #8]
   1cfdc:	cmp	r0, r1
   1cfe0:	blt	1d000 <__assert_fail@plt+0xbf18>
   1cfe4:	b	1d018 <__assert_fail@plt+0xbf30>
   1cfe8:	ldr	r0, [fp, #8]
   1cfec:	movw	r1, #65535	; 0xffff
   1cff0:	sdiv	r0, r1, r0
   1cff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cff8:	cmp	r0, r1
   1cffc:	bge	1d018 <__assert_fail@plt+0xbf30>
   1d000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d004:	ldr	r1, [fp, #8]
   1d008:	mul	r0, r0, r1
   1d00c:	uxth	r0, r0
   1d010:	str	r0, [fp, #-28]	; 0xffffffe4
   1d014:	b	1dc20 <__assert_fail@plt+0xcb38>
   1d018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d01c:	ldr	r1, [fp, #8]
   1d020:	mul	r0, r0, r1
   1d024:	uxth	r0, r0
   1d028:	str	r0, [fp, #-28]	; 0xffffffe4
   1d02c:	b	1dc2c <__assert_fail@plt+0xcb44>
   1d030:	b	1d034 <__assert_fail@plt+0xbf4c>
   1d034:	b	1d038 <__assert_fail@plt+0xbf50>
   1d038:	ldr	r0, [fp, #8]
   1d03c:	cmp	r0, #0
   1d040:	bge	1d144 <__assert_fail@plt+0xc05c>
   1d044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d048:	cmp	r0, #0
   1d04c:	bge	1d0d8 <__assert_fail@plt+0xbff0>
   1d050:	b	1d054 <__assert_fail@plt+0xbf6c>
   1d054:	ldr	r0, [pc, #1984]	; 1d81c <__assert_fail@plt+0xc734>
   1d058:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d05c:	ldr	r2, [fp, #8]
   1d060:	sdiv	r0, r0, r2
   1d064:	cmp	r1, r0
   1d068:	blt	1d1d4 <__assert_fail@plt+0xc0ec>
   1d06c:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d070:	b	1d074 <__assert_fail@plt+0xbf8c>
   1d074:	ldr	r0, [pc, #2116]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1d078:	ldr	r1, [fp, #8]
   1d07c:	cmp	r1, r0
   1d080:	blt	1d098 <__assert_fail@plt+0xbfb0>
   1d084:	b	1d0a4 <__assert_fail@plt+0xbfbc>
   1d088:	ldr	r0, [fp, #8]
   1d08c:	movw	r1, #0
   1d090:	cmp	r1, r0
   1d094:	bge	1d0a4 <__assert_fail@plt+0xbfbc>
   1d098:	movw	r0, #0
   1d09c:	str	r0, [fp, #-52]	; 0xffffffcc
   1d0a0:	b	1d0bc <__assert_fail@plt+0xbfd4>
   1d0a4:	ldr	r0, [pc, #1904]	; 1d81c <__assert_fail@plt+0xc734>
   1d0a8:	ldr	r1, [fp, #8]
   1d0ac:	movw	r2, #0
   1d0b0:	sub	r1, r2, r1
   1d0b4:	sdiv	r0, r0, r1
   1d0b8:	str	r0, [fp, #-52]	; 0xffffffcc
   1d0bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d0c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0c4:	mvn	r2, #0
   1d0c8:	sub	r1, r2, r1
   1d0cc:	cmp	r0, r1
   1d0d0:	ble	1d1d4 <__assert_fail@plt+0xc0ec>
   1d0d4:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d0d8:	ldr	r0, [fp, #8]
   1d0dc:	cmn	r0, #1
   1d0e0:	bne	1d128 <__assert_fail@plt+0xc040>
   1d0e4:	b	1d0e8 <__assert_fail@plt+0xc000>
   1d0e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0ec:	add	r0, r0, #-2147483648	; 0x80000000
   1d0f0:	movw	r1, #0
   1d0f4:	cmp	r1, r0
   1d0f8:	blt	1d1d4 <__assert_fail@plt+0xc0ec>
   1d0fc:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d104:	movw	r1, #0
   1d108:	cmp	r1, r0
   1d10c:	bge	1d1e8 <__assert_fail@plt+0xc100>
   1d110:	ldr	r0, [pc, #1796]	; 1d81c <__assert_fail@plt+0xc734>
   1d114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d118:	sub	r1, r1, #1
   1d11c:	cmp	r0, r1
   1d120:	blt	1d1d4 <__assert_fail@plt+0xc0ec>
   1d124:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d128:	ldr	r0, [pc, #4080]	; 1e120 <__assert_fail@plt+0xd038>
   1d12c:	ldr	r1, [fp, #8]
   1d130:	sdiv	r0, r0, r1
   1d134:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d138:	cmp	r0, r1
   1d13c:	blt	1d1d4 <__assert_fail@plt+0xc0ec>
   1d140:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d144:	ldr	r0, [fp, #8]
   1d148:	cmp	r0, #0
   1d14c:	bne	1d154 <__assert_fail@plt+0xc06c>
   1d150:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d158:	cmp	r0, #0
   1d15c:	bge	1d1bc <__assert_fail@plt+0xc0d4>
   1d160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d164:	cmn	r0, #1
   1d168:	bne	1d1a0 <__assert_fail@plt+0xc0b8>
   1d16c:	b	1d170 <__assert_fail@plt+0xc088>
   1d170:	ldr	r0, [fp, #8]
   1d174:	add	r0, r0, #-2147483648	; 0x80000000
   1d178:	movw	r1, #0
   1d17c:	cmp	r1, r0
   1d180:	blt	1d1d4 <__assert_fail@plt+0xc0ec>
   1d184:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d188:	ldr	r0, [pc, #1676]	; 1d81c <__assert_fail@plt+0xc734>
   1d18c:	ldr	r1, [fp, #8]
   1d190:	sub	r1, r1, #1
   1d194:	cmp	r0, r1
   1d198:	blt	1d1d4 <__assert_fail@plt+0xc0ec>
   1d19c:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d1a0:	ldr	r0, [pc, #3960]	; 1e120 <__assert_fail@plt+0xd038>
   1d1a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1a8:	sdiv	r0, r0, r1
   1d1ac:	ldr	r1, [fp, #8]
   1d1b0:	cmp	r0, r1
   1d1b4:	blt	1d1d4 <__assert_fail@plt+0xc0ec>
   1d1b8:	b	1d1e8 <__assert_fail@plt+0xc100>
   1d1bc:	ldr	r0, [pc, #1624]	; 1d81c <__assert_fail@plt+0xc734>
   1d1c0:	ldr	r1, [fp, #8]
   1d1c4:	sdiv	r0, r0, r1
   1d1c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1cc:	cmp	r0, r1
   1d1d0:	bge	1d1e8 <__assert_fail@plt+0xc100>
   1d1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1d8:	ldr	r1, [fp, #8]
   1d1dc:	mul	r0, r0, r1
   1d1e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1e4:	b	1dc20 <__assert_fail@plt+0xcb38>
   1d1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1ec:	ldr	r1, [fp, #8]
   1d1f0:	mul	r0, r0, r1
   1d1f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1f8:	b	1dc2c <__assert_fail@plt+0xcb44>
   1d1fc:	ldr	r0, [fp, #8]
   1d200:	cmp	r0, #0
   1d204:	bge	1d314 <__assert_fail@plt+0xc22c>
   1d208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d20c:	cmp	r0, #0
   1d210:	bge	1d29c <__assert_fail@plt+0xc1b4>
   1d214:	b	1d234 <__assert_fail@plt+0xc14c>
   1d218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d21c:	ldr	r1, [fp, #8]
   1d220:	mvn	r2, #0
   1d224:	udiv	r1, r2, r1
   1d228:	cmp	r0, r1
   1d22c:	bcc	1d3b0 <__assert_fail@plt+0xc2c8>
   1d230:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d234:	b	1d238 <__assert_fail@plt+0xc150>
   1d238:	ldr	r0, [pc, #1664]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1d23c:	ldr	r1, [fp, #8]
   1d240:	cmp	r1, r0
   1d244:	blt	1d25c <__assert_fail@plt+0xc174>
   1d248:	b	1d268 <__assert_fail@plt+0xc180>
   1d24c:	ldr	r0, [fp, #8]
   1d250:	movw	r1, #0
   1d254:	cmp	r1, r0
   1d258:	bge	1d268 <__assert_fail@plt+0xc180>
   1d25c:	movw	r0, #1
   1d260:	str	r0, [fp, #-56]	; 0xffffffc8
   1d264:	b	1d280 <__assert_fail@plt+0xc198>
   1d268:	ldr	r0, [fp, #8]
   1d26c:	movw	r1, #0
   1d270:	sub	r0, r1, r0
   1d274:	mvn	r1, #0
   1d278:	udiv	r0, r1, r0
   1d27c:	str	r0, [fp, #-56]	; 0xffffffc8
   1d280:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d288:	mvn	r2, #0
   1d28c:	sub	r1, r2, r1
   1d290:	cmp	r0, r1
   1d294:	bls	1d3b0 <__assert_fail@plt+0xc2c8>
   1d298:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d29c:	b	1d2a0 <__assert_fail@plt+0xc1b8>
   1d2a0:	b	1d2f8 <__assert_fail@plt+0xc210>
   1d2a4:	b	1d2f8 <__assert_fail@plt+0xc210>
   1d2a8:	ldr	r0, [fp, #8]
   1d2ac:	cmn	r0, #1
   1d2b0:	bne	1d2f8 <__assert_fail@plt+0xc210>
   1d2b4:	b	1d2b8 <__assert_fail@plt+0xc1d0>
   1d2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2bc:	add	r0, r0, #0
   1d2c0:	movw	r1, #0
   1d2c4:	cmp	r1, r0
   1d2c8:	blt	1d3b0 <__assert_fail@plt+0xc2c8>
   1d2cc:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d2d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2d4:	movw	r1, #0
   1d2d8:	cmp	r1, r0
   1d2dc:	bge	1d3c4 <__assert_fail@plt+0xc2dc>
   1d2e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2e4:	sub	r0, r0, #1
   1d2e8:	mvn	r1, #0
   1d2ec:	cmp	r1, r0
   1d2f0:	blt	1d3b0 <__assert_fail@plt+0xc2c8>
   1d2f4:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d2f8:	ldr	r0, [fp, #8]
   1d2fc:	movw	r1, #0
   1d300:	sdiv	r0, r1, r0
   1d304:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d308:	cmp	r0, r1
   1d30c:	blt	1d3b0 <__assert_fail@plt+0xc2c8>
   1d310:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d314:	ldr	r0, [fp, #8]
   1d318:	cmp	r0, #0
   1d31c:	bne	1d324 <__assert_fail@plt+0xc23c>
   1d320:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d328:	cmp	r0, #0
   1d32c:	bge	1d398 <__assert_fail@plt+0xc2b0>
   1d330:	b	1d334 <__assert_fail@plt+0xc24c>
   1d334:	b	1d37c <__assert_fail@plt+0xc294>
   1d338:	b	1d37c <__assert_fail@plt+0xc294>
   1d33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d340:	cmn	r0, #1
   1d344:	bne	1d37c <__assert_fail@plt+0xc294>
   1d348:	b	1d34c <__assert_fail@plt+0xc264>
   1d34c:	ldr	r0, [fp, #8]
   1d350:	add	r0, r0, #0
   1d354:	movw	r1, #0
   1d358:	cmp	r1, r0
   1d35c:	blt	1d3b0 <__assert_fail@plt+0xc2c8>
   1d360:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d364:	ldr	r0, [fp, #8]
   1d368:	sub	r0, r0, #1
   1d36c:	mvn	r1, #0
   1d370:	cmp	r1, r0
   1d374:	blt	1d3b0 <__assert_fail@plt+0xc2c8>
   1d378:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d37c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d380:	movw	r1, #0
   1d384:	sdiv	r0, r1, r0
   1d388:	ldr	r1, [fp, #8]
   1d38c:	cmp	r0, r1
   1d390:	blt	1d3b0 <__assert_fail@plt+0xc2c8>
   1d394:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d398:	ldr	r0, [fp, #8]
   1d39c:	mvn	r1, #0
   1d3a0:	udiv	r0, r1, r0
   1d3a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3a8:	cmp	r0, r1
   1d3ac:	bcs	1d3c4 <__assert_fail@plt+0xc2dc>
   1d3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3b4:	ldr	r1, [fp, #8]
   1d3b8:	mul	r0, r0, r1
   1d3bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3c0:	b	1dc20 <__assert_fail@plt+0xcb38>
   1d3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3c8:	ldr	r1, [fp, #8]
   1d3cc:	mul	r0, r0, r1
   1d3d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3d4:	b	1dc2c <__assert_fail@plt+0xcb44>
   1d3d8:	b	1d3dc <__assert_fail@plt+0xc2f4>
   1d3dc:	b	1d3e0 <__assert_fail@plt+0xc2f8>
   1d3e0:	ldr	r0, [fp, #8]
   1d3e4:	cmp	r0, #0
   1d3e8:	bge	1d4ec <__assert_fail@plt+0xc404>
   1d3ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3f0:	cmp	r0, #0
   1d3f4:	bge	1d480 <__assert_fail@plt+0xc398>
   1d3f8:	b	1d3fc <__assert_fail@plt+0xc314>
   1d3fc:	ldr	r0, [pc, #1048]	; 1d81c <__assert_fail@plt+0xc734>
   1d400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d404:	ldr	r2, [fp, #8]
   1d408:	sdiv	r0, r0, r2
   1d40c:	cmp	r1, r0
   1d410:	blt	1d57c <__assert_fail@plt+0xc494>
   1d414:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d418:	b	1d41c <__assert_fail@plt+0xc334>
   1d41c:	ldr	r0, [pc, #1180]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1d420:	ldr	r1, [fp, #8]
   1d424:	cmp	r1, r0
   1d428:	blt	1d440 <__assert_fail@plt+0xc358>
   1d42c:	b	1d44c <__assert_fail@plt+0xc364>
   1d430:	ldr	r0, [fp, #8]
   1d434:	movw	r1, #0
   1d438:	cmp	r1, r0
   1d43c:	bge	1d44c <__assert_fail@plt+0xc364>
   1d440:	movw	r0, #0
   1d444:	str	r0, [fp, #-60]	; 0xffffffc4
   1d448:	b	1d464 <__assert_fail@plt+0xc37c>
   1d44c:	ldr	r0, [pc, #968]	; 1d81c <__assert_fail@plt+0xc734>
   1d450:	ldr	r1, [fp, #8]
   1d454:	movw	r2, #0
   1d458:	sub	r1, r2, r1
   1d45c:	sdiv	r0, r0, r1
   1d460:	str	r0, [fp, #-60]	; 0xffffffc4
   1d464:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d46c:	mvn	r2, #0
   1d470:	sub	r1, r2, r1
   1d474:	cmp	r0, r1
   1d478:	ble	1d57c <__assert_fail@plt+0xc494>
   1d47c:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d480:	ldr	r0, [fp, #8]
   1d484:	cmn	r0, #1
   1d488:	bne	1d4d0 <__assert_fail@plt+0xc3e8>
   1d48c:	b	1d490 <__assert_fail@plt+0xc3a8>
   1d490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d494:	add	r0, r0, #-2147483648	; 0x80000000
   1d498:	movw	r1, #0
   1d49c:	cmp	r1, r0
   1d4a0:	blt	1d57c <__assert_fail@plt+0xc494>
   1d4a4:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d4a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4ac:	movw	r1, #0
   1d4b0:	cmp	r1, r0
   1d4b4:	bge	1d590 <__assert_fail@plt+0xc4a8>
   1d4b8:	ldr	r0, [pc, #860]	; 1d81c <__assert_fail@plt+0xc734>
   1d4bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4c0:	sub	r1, r1, #1
   1d4c4:	cmp	r0, r1
   1d4c8:	blt	1d57c <__assert_fail@plt+0xc494>
   1d4cc:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d4d0:	ldr	r0, [pc, #3144]	; 1e120 <__assert_fail@plt+0xd038>
   1d4d4:	ldr	r1, [fp, #8]
   1d4d8:	sdiv	r0, r0, r1
   1d4dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4e0:	cmp	r0, r1
   1d4e4:	blt	1d57c <__assert_fail@plt+0xc494>
   1d4e8:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d4ec:	ldr	r0, [fp, #8]
   1d4f0:	cmp	r0, #0
   1d4f4:	bne	1d4fc <__assert_fail@plt+0xc414>
   1d4f8:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d4fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d500:	cmp	r0, #0
   1d504:	bge	1d564 <__assert_fail@plt+0xc47c>
   1d508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d50c:	cmn	r0, #1
   1d510:	bne	1d548 <__assert_fail@plt+0xc460>
   1d514:	b	1d518 <__assert_fail@plt+0xc430>
   1d518:	ldr	r0, [fp, #8]
   1d51c:	add	r0, r0, #-2147483648	; 0x80000000
   1d520:	movw	r1, #0
   1d524:	cmp	r1, r0
   1d528:	blt	1d57c <__assert_fail@plt+0xc494>
   1d52c:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d530:	ldr	r0, [pc, #740]	; 1d81c <__assert_fail@plt+0xc734>
   1d534:	ldr	r1, [fp, #8]
   1d538:	sub	r1, r1, #1
   1d53c:	cmp	r0, r1
   1d540:	blt	1d57c <__assert_fail@plt+0xc494>
   1d544:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d548:	ldr	r0, [pc, #3024]	; 1e120 <__assert_fail@plt+0xd038>
   1d54c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d550:	sdiv	r0, r0, r1
   1d554:	ldr	r1, [fp, #8]
   1d558:	cmp	r0, r1
   1d55c:	blt	1d57c <__assert_fail@plt+0xc494>
   1d560:	b	1d590 <__assert_fail@plt+0xc4a8>
   1d564:	ldr	r0, [pc, #688]	; 1d81c <__assert_fail@plt+0xc734>
   1d568:	ldr	r1, [fp, #8]
   1d56c:	sdiv	r0, r0, r1
   1d570:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d574:	cmp	r0, r1
   1d578:	bge	1d590 <__assert_fail@plt+0xc4a8>
   1d57c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d580:	ldr	r1, [fp, #8]
   1d584:	mul	r0, r0, r1
   1d588:	str	r0, [fp, #-28]	; 0xffffffe4
   1d58c:	b	1dc20 <__assert_fail@plt+0xcb38>
   1d590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d594:	ldr	r1, [fp, #8]
   1d598:	mul	r0, r0, r1
   1d59c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d5a0:	b	1dc2c <__assert_fail@plt+0xcb44>
   1d5a4:	ldr	r0, [fp, #8]
   1d5a8:	cmp	r0, #0
   1d5ac:	bge	1d6bc <__assert_fail@plt+0xc5d4>
   1d5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5b4:	cmp	r0, #0
   1d5b8:	bge	1d644 <__assert_fail@plt+0xc55c>
   1d5bc:	b	1d5dc <__assert_fail@plt+0xc4f4>
   1d5c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5c4:	ldr	r1, [fp, #8]
   1d5c8:	mvn	r2, #0
   1d5cc:	udiv	r1, r2, r1
   1d5d0:	cmp	r0, r1
   1d5d4:	bcc	1d758 <__assert_fail@plt+0xc670>
   1d5d8:	b	1d76c <__assert_fail@plt+0xc684>
   1d5dc:	b	1d5e0 <__assert_fail@plt+0xc4f8>
   1d5e0:	ldr	r0, [pc, #728]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1d5e4:	ldr	r1, [fp, #8]
   1d5e8:	cmp	r1, r0
   1d5ec:	blt	1d604 <__assert_fail@plt+0xc51c>
   1d5f0:	b	1d610 <__assert_fail@plt+0xc528>
   1d5f4:	ldr	r0, [fp, #8]
   1d5f8:	movw	r1, #0
   1d5fc:	cmp	r1, r0
   1d600:	bge	1d610 <__assert_fail@plt+0xc528>
   1d604:	movw	r0, #1
   1d608:	str	r0, [fp, #-64]	; 0xffffffc0
   1d60c:	b	1d628 <__assert_fail@plt+0xc540>
   1d610:	ldr	r0, [fp, #8]
   1d614:	movw	r1, #0
   1d618:	sub	r0, r1, r0
   1d61c:	mvn	r1, #0
   1d620:	udiv	r0, r1, r0
   1d624:	str	r0, [fp, #-64]	; 0xffffffc0
   1d628:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d62c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d630:	mvn	r2, #0
   1d634:	sub	r1, r2, r1
   1d638:	cmp	r0, r1
   1d63c:	bls	1d758 <__assert_fail@plt+0xc670>
   1d640:	b	1d76c <__assert_fail@plt+0xc684>
   1d644:	b	1d648 <__assert_fail@plt+0xc560>
   1d648:	b	1d6a0 <__assert_fail@plt+0xc5b8>
   1d64c:	b	1d6a0 <__assert_fail@plt+0xc5b8>
   1d650:	ldr	r0, [fp, #8]
   1d654:	cmn	r0, #1
   1d658:	bne	1d6a0 <__assert_fail@plt+0xc5b8>
   1d65c:	b	1d660 <__assert_fail@plt+0xc578>
   1d660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d664:	add	r0, r0, #0
   1d668:	movw	r1, #0
   1d66c:	cmp	r1, r0
   1d670:	blt	1d758 <__assert_fail@plt+0xc670>
   1d674:	b	1d76c <__assert_fail@plt+0xc684>
   1d678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d67c:	movw	r1, #0
   1d680:	cmp	r1, r0
   1d684:	bge	1d76c <__assert_fail@plt+0xc684>
   1d688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d68c:	sub	r0, r0, #1
   1d690:	mvn	r1, #0
   1d694:	cmp	r1, r0
   1d698:	blt	1d758 <__assert_fail@plt+0xc670>
   1d69c:	b	1d76c <__assert_fail@plt+0xc684>
   1d6a0:	ldr	r0, [fp, #8]
   1d6a4:	movw	r1, #0
   1d6a8:	sdiv	r0, r1, r0
   1d6ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6b0:	cmp	r0, r1
   1d6b4:	blt	1d758 <__assert_fail@plt+0xc670>
   1d6b8:	b	1d76c <__assert_fail@plt+0xc684>
   1d6bc:	ldr	r0, [fp, #8]
   1d6c0:	cmp	r0, #0
   1d6c4:	bne	1d6cc <__assert_fail@plt+0xc5e4>
   1d6c8:	b	1d76c <__assert_fail@plt+0xc684>
   1d6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6d0:	cmp	r0, #0
   1d6d4:	bge	1d740 <__assert_fail@plt+0xc658>
   1d6d8:	b	1d6dc <__assert_fail@plt+0xc5f4>
   1d6dc:	b	1d724 <__assert_fail@plt+0xc63c>
   1d6e0:	b	1d724 <__assert_fail@plt+0xc63c>
   1d6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6e8:	cmn	r0, #1
   1d6ec:	bne	1d724 <__assert_fail@plt+0xc63c>
   1d6f0:	b	1d6f4 <__assert_fail@plt+0xc60c>
   1d6f4:	ldr	r0, [fp, #8]
   1d6f8:	add	r0, r0, #0
   1d6fc:	movw	r1, #0
   1d700:	cmp	r1, r0
   1d704:	blt	1d758 <__assert_fail@plt+0xc670>
   1d708:	b	1d76c <__assert_fail@plt+0xc684>
   1d70c:	ldr	r0, [fp, #8]
   1d710:	sub	r0, r0, #1
   1d714:	mvn	r1, #0
   1d718:	cmp	r1, r0
   1d71c:	blt	1d758 <__assert_fail@plt+0xc670>
   1d720:	b	1d76c <__assert_fail@plt+0xc684>
   1d724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d728:	movw	r1, #0
   1d72c:	sdiv	r0, r1, r0
   1d730:	ldr	r1, [fp, #8]
   1d734:	cmp	r0, r1
   1d738:	blt	1d758 <__assert_fail@plt+0xc670>
   1d73c:	b	1d76c <__assert_fail@plt+0xc684>
   1d740:	ldr	r0, [fp, #8]
   1d744:	mvn	r1, #0
   1d748:	udiv	r0, r1, r0
   1d74c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d750:	cmp	r0, r1
   1d754:	bcs	1d76c <__assert_fail@plt+0xc684>
   1d758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d75c:	ldr	r1, [fp, #8]
   1d760:	mul	r0, r0, r1
   1d764:	str	r0, [fp, #-28]	; 0xffffffe4
   1d768:	b	1dc20 <__assert_fail@plt+0xcb38>
   1d76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d770:	ldr	r1, [fp, #8]
   1d774:	mul	r0, r0, r1
   1d778:	str	r0, [fp, #-28]	; 0xffffffe4
   1d77c:	b	1dc2c <__assert_fail@plt+0xcb44>
   1d780:	b	1d784 <__assert_fail@plt+0xc69c>
   1d784:	ldr	r0, [fp, #8]
   1d788:	cmp	r0, #0
   1d78c:	bge	1d8fc <__assert_fail@plt+0xc814>
   1d790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d794:	cmp	r0, #0
   1d798:	bge	1d874 <__assert_fail@plt+0xc78c>
   1d79c:	b	1d7a0 <__assert_fail@plt+0xc6b8>
   1d7a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7a4:	ldr	r1, [fp, #8]
   1d7a8:	asr	r3, r1, #31
   1d7ac:	mvn	r2, #0
   1d7b0:	mvn	ip, #-2147483648	; 0x80000000
   1d7b4:	str	r0, [fp, #-68]	; 0xffffffbc
   1d7b8:	mov	r0, r2
   1d7bc:	str	r1, [fp, #-72]	; 0xffffffb8
   1d7c0:	mov	r1, ip
   1d7c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d7c8:	bl	21990 <__assert_fail@plt+0x108a8>
   1d7cc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1d7d0:	subs	r0, r2, r0
   1d7d4:	rscs	r1, r1, r2, asr #31
   1d7d8:	blt	1d9c4 <__assert_fail@plt+0xc8dc>
   1d7dc:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d7e0:	b	1d7e4 <__assert_fail@plt+0xc6fc>
   1d7e4:	ldr	r0, [pc, #212]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1d7e8:	ldr	r1, [fp, #8]
   1d7ec:	cmp	r1, r0
   1d7f0:	blt	1d808 <__assert_fail@plt+0xc720>
   1d7f4:	b	1d820 <__assert_fail@plt+0xc738>
   1d7f8:	ldr	r0, [fp, #8]
   1d7fc:	movw	r1, #0
   1d800:	cmp	r1, r0
   1d804:	bge	1d820 <__assert_fail@plt+0xc738>
   1d808:	mov	r0, #0
   1d80c:	mvn	r1, #0
   1d810:	str	r1, [fp, #-76]	; 0xffffffb4
   1d814:	str	r0, [fp, #-80]	; 0xffffffb0
   1d818:	b	1d854 <__assert_fail@plt+0xc76c>
   1d81c:	svcvc	0x00ffffff
   1d820:	ldr	r0, [fp, #8]
   1d824:	rsb	r0, r0, #0
   1d828:	asr	r3, r0, #31
   1d82c:	mvn	r1, #0
   1d830:	mvn	r2, #-2147483648	; 0x80000000
   1d834:	str	r0, [fp, #-84]	; 0xffffffac
   1d838:	mov	r0, r1
   1d83c:	mov	r1, r2
   1d840:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d844:	bl	21990 <__assert_fail@plt+0x108a8>
   1d848:	str	r0, [fp, #-76]	; 0xffffffb4
   1d84c:	str	r1, [fp, #-80]	; 0xffffffb0
   1d850:	b	1d854 <__assert_fail@plt+0xc76c>
   1d854:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d858:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1d85c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d860:	mvn	r2, r2
   1d864:	subs	r1, r2, r1
   1d868:	rscs	r0, r0, r2, asr #31
   1d86c:	bge	1d9c4 <__assert_fail@plt+0xc8dc>
   1d870:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d874:	ldr	r0, [fp, #8]
   1d878:	cmn	r0, #1
   1d87c:	bne	1d8c4 <__assert_fail@plt+0xc7dc>
   1d880:	b	1d884 <__assert_fail@plt+0xc79c>
   1d884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d888:	mov	r1, #-2147483648	; 0x80000000
   1d88c:	add	r1, r1, r0, asr #31
   1d890:	rsbs	r0, r0, #0
   1d894:	rscs	r1, r1, #0
   1d898:	blt	1d9c4 <__assert_fail@plt+0xc8dc>
   1d89c:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d8a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8a4:	movw	r1, #0
   1d8a8:	cmp	r1, r0
   1d8ac:	bge	1d9d8 <__assert_fail@plt+0xc8f0>
   1d8b0:	mov	r0, #0
   1d8b4:	cmp	r0, #0
   1d8b8:	bne	1d9c4 <__assert_fail@plt+0xc8dc>
   1d8bc:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d8c0:	andhi	r0, r0, r1
   1d8c4:	ldr	r0, [fp, #8]
   1d8c8:	asr	r3, r0, #31
   1d8cc:	mov	r1, #0
   1d8d0:	mov	r2, #-2147483648	; 0x80000000
   1d8d4:	str	r0, [fp, #-88]	; 0xffffffa8
   1d8d8:	mov	r0, r1
   1d8dc:	mov	r1, r2
   1d8e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d8e4:	bl	21990 <__assert_fail@plt+0x108a8>
   1d8e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d8ec:	subs	r0, r0, r2
   1d8f0:	sbcs	r1, r1, r2, asr #31
   1d8f4:	blt	1d9c4 <__assert_fail@plt+0xc8dc>
   1d8f8:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d8fc:	ldr	r0, [fp, #8]
   1d900:	cmp	r0, #0
   1d904:	bne	1d90c <__assert_fail@plt+0xc824>
   1d908:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d90c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d910:	cmp	r0, #0
   1d914:	bge	1d98c <__assert_fail@plt+0xc8a4>
   1d918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d91c:	cmn	r0, #1
   1d920:	bne	1d954 <__assert_fail@plt+0xc86c>
   1d924:	b	1d928 <__assert_fail@plt+0xc840>
   1d928:	ldr	r0, [fp, #8]
   1d92c:	mov	r1, #-2147483648	; 0x80000000
   1d930:	add	r1, r1, r0, asr #31
   1d934:	rsbs	r0, r0, #0
   1d938:	rscs	r1, r1, #0
   1d93c:	blt	1d9c4 <__assert_fail@plt+0xc8dc>
   1d940:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d944:	mov	r0, #0
   1d948:	cmp	r0, #0
   1d94c:	bne	1d9c4 <__assert_fail@plt+0xc8dc>
   1d950:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d958:	asr	r3, r0, #31
   1d95c:	mov	r1, #0
   1d960:	mov	r2, #-2147483648	; 0x80000000
   1d964:	str	r0, [fp, #-92]	; 0xffffffa4
   1d968:	mov	r0, r1
   1d96c:	mov	r1, r2
   1d970:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1d974:	bl	21990 <__assert_fail@plt+0x108a8>
   1d978:	ldr	r2, [fp, #8]
   1d97c:	subs	r0, r0, r2
   1d980:	sbcs	r1, r1, r2, asr #31
   1d984:	blt	1d9c4 <__assert_fail@plt+0xc8dc>
   1d988:	b	1d9d8 <__assert_fail@plt+0xc8f0>
   1d98c:	ldr	r0, [fp, #8]
   1d990:	asr	r3, r0, #31
   1d994:	mvn	r1, #0
   1d998:	mvn	r2, #-2147483648	; 0x80000000
   1d99c:	str	r0, [fp, #-96]	; 0xffffffa0
   1d9a0:	mov	r0, r1
   1d9a4:	mov	r1, r2
   1d9a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1d9ac:	bl	21990 <__assert_fail@plt+0x108a8>
   1d9b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d9b4:	subs	r0, r0, r2
   1d9b8:	sbcs	r1, r1, r2, asr #31
   1d9bc:	bge	1d9d8 <__assert_fail@plt+0xc8f0>
   1d9c0:	b	1d9c4 <__assert_fail@plt+0xc8dc>
   1d9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9c8:	ldr	r1, [fp, #8]
   1d9cc:	mul	r0, r0, r1
   1d9d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d9d4:	b	1dc20 <__assert_fail@plt+0xcb38>
   1d9d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9dc:	ldr	r1, [fp, #8]
   1d9e0:	mul	r0, r0, r1
   1d9e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d9e8:	b	1dc2c <__assert_fail@plt+0xcb44>
   1d9ec:	ldr	r0, [fp, #8]
   1d9f0:	cmp	r0, #0
   1d9f4:	bge	1db44 <__assert_fail@plt+0xca5c>
   1d9f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9fc:	cmp	r0, #0
   1da00:	bge	1dacc <__assert_fail@plt+0xc9e4>
   1da04:	b	1da44 <__assert_fail@plt+0xc95c>
   1da08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da0c:	ldr	r1, [fp, #8]
   1da10:	asr	r3, r1, #31
   1da14:	mvn	r2, #0
   1da18:	str	r0, [fp, #-100]	; 0xffffff9c
   1da1c:	mov	r0, r2
   1da20:	str	r1, [fp, #-104]	; 0xffffff98
   1da24:	mov	r1, r2
   1da28:	ldr	r2, [fp, #-104]	; 0xffffff98
   1da2c:	bl	21a64 <__assert_fail@plt+0x1097c>
   1da30:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1da34:	subs	r0, r2, r0
   1da38:	rscs	r1, r1, r2, asr #31
   1da3c:	bcc	1dbf8 <__assert_fail@plt+0xcb10>
   1da40:	b	1dc0c <__assert_fail@plt+0xcb24>
   1da44:	b	1da48 <__assert_fail@plt+0xc960>
   1da48:	ldr	r0, [pc, #-400]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1da4c:	ldr	r1, [fp, #8]
   1da50:	cmp	r1, r0
   1da54:	blt	1da6c <__assert_fail@plt+0xc984>
   1da58:	b	1da80 <__assert_fail@plt+0xc998>
   1da5c:	ldr	r0, [fp, #8]
   1da60:	movw	r1, #0
   1da64:	cmp	r1, r0
   1da68:	bge	1da80 <__assert_fail@plt+0xc998>
   1da6c:	mov	r0, #1
   1da70:	mvn	r1, #0
   1da74:	str	r1, [sp, #108]	; 0x6c
   1da78:	str	r0, [sp, #104]	; 0x68
   1da7c:	b	1daac <__assert_fail@plt+0xc9c4>
   1da80:	ldr	r0, [fp, #8]
   1da84:	rsb	r0, r0, #0
   1da88:	asr	r3, r0, #31
   1da8c:	mvn	r1, #0
   1da90:	str	r0, [sp, #100]	; 0x64
   1da94:	mov	r0, r1
   1da98:	ldr	r2, [sp, #100]	; 0x64
   1da9c:	bl	21a64 <__assert_fail@plt+0x1097c>
   1daa0:	str	r0, [sp, #108]	; 0x6c
   1daa4:	str	r1, [sp, #104]	; 0x68
   1daa8:	b	1daac <__assert_fail@plt+0xc9c4>
   1daac:	ldr	r0, [sp, #104]	; 0x68
   1dab0:	ldr	r1, [sp, #108]	; 0x6c
   1dab4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dab8:	mvn	r2, r2
   1dabc:	subs	r1, r2, r1
   1dac0:	rscs	r0, r0, r2, asr #31
   1dac4:	bcs	1dbf8 <__assert_fail@plt+0xcb10>
   1dac8:	b	1dc0c <__assert_fail@plt+0xcb24>
   1dacc:	b	1dad0 <__assert_fail@plt+0xc9e8>
   1dad0:	b	1db28 <__assert_fail@plt+0xca40>
   1dad4:	b	1db28 <__assert_fail@plt+0xca40>
   1dad8:	ldr	r0, [fp, #8]
   1dadc:	cmn	r0, #1
   1dae0:	bne	1db28 <__assert_fail@plt+0xca40>
   1dae4:	b	1dae8 <__assert_fail@plt+0xca00>
   1dae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daec:	add	r0, r0, #0
   1daf0:	movw	r1, #0
   1daf4:	cmp	r1, r0
   1daf8:	blt	1dbf8 <__assert_fail@plt+0xcb10>
   1dafc:	b	1dc0c <__assert_fail@plt+0xcb24>
   1db00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db04:	movw	r1, #0
   1db08:	cmp	r1, r0
   1db0c:	bge	1dc0c <__assert_fail@plt+0xcb24>
   1db10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db14:	sub	r0, r0, #1
   1db18:	mvn	r1, #0
   1db1c:	cmp	r1, r0
   1db20:	blt	1dbf8 <__assert_fail@plt+0xcb10>
   1db24:	b	1dc0c <__assert_fail@plt+0xcb24>
   1db28:	ldr	r0, [fp, #8]
   1db2c:	movw	r1, #0
   1db30:	sdiv	r0, r1, r0
   1db34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db38:	cmp	r0, r1
   1db3c:	blt	1dbf8 <__assert_fail@plt+0xcb10>
   1db40:	b	1dc0c <__assert_fail@plt+0xcb24>
   1db44:	ldr	r0, [fp, #8]
   1db48:	cmp	r0, #0
   1db4c:	bne	1db54 <__assert_fail@plt+0xca6c>
   1db50:	b	1dc0c <__assert_fail@plt+0xcb24>
   1db54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db58:	cmp	r0, #0
   1db5c:	bge	1dbc8 <__assert_fail@plt+0xcae0>
   1db60:	b	1db64 <__assert_fail@plt+0xca7c>
   1db64:	b	1dbac <__assert_fail@plt+0xcac4>
   1db68:	b	1dbac <__assert_fail@plt+0xcac4>
   1db6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db70:	cmn	r0, #1
   1db74:	bne	1dbac <__assert_fail@plt+0xcac4>
   1db78:	b	1db7c <__assert_fail@plt+0xca94>
   1db7c:	ldr	r0, [fp, #8]
   1db80:	add	r0, r0, #0
   1db84:	movw	r1, #0
   1db88:	cmp	r1, r0
   1db8c:	blt	1dbf8 <__assert_fail@plt+0xcb10>
   1db90:	b	1dc0c <__assert_fail@plt+0xcb24>
   1db94:	ldr	r0, [fp, #8]
   1db98:	sub	r0, r0, #1
   1db9c:	mvn	r1, #0
   1dba0:	cmp	r1, r0
   1dba4:	blt	1dbf8 <__assert_fail@plt+0xcb10>
   1dba8:	b	1dc0c <__assert_fail@plt+0xcb24>
   1dbac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbb0:	movw	r1, #0
   1dbb4:	sdiv	r0, r1, r0
   1dbb8:	ldr	r1, [fp, #8]
   1dbbc:	cmp	r0, r1
   1dbc0:	blt	1dbf8 <__assert_fail@plt+0xcb10>
   1dbc4:	b	1dc0c <__assert_fail@plt+0xcb24>
   1dbc8:	ldr	r0, [fp, #8]
   1dbcc:	asr	r3, r0, #31
   1dbd0:	mvn	r1, #0
   1dbd4:	str	r0, [sp, #96]	; 0x60
   1dbd8:	mov	r0, r1
   1dbdc:	ldr	r2, [sp, #96]	; 0x60
   1dbe0:	bl	21a64 <__assert_fail@plt+0x1097c>
   1dbe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dbe8:	subs	r0, r0, r2
   1dbec:	sbcs	r1, r1, r2, asr #31
   1dbf0:	bcs	1dc0c <__assert_fail@plt+0xcb24>
   1dbf4:	b	1dbf8 <__assert_fail@plt+0xcb10>
   1dbf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbfc:	ldr	r1, [fp, #8]
   1dc00:	mul	r0, r0, r1
   1dc04:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc08:	b	1dc20 <__assert_fail@plt+0xcb38>
   1dc0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc10:	ldr	r1, [fp, #8]
   1dc14:	mul	r0, r0, r1
   1dc18:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc1c:	b	1dc2c <__assert_fail@plt+0xcb44>
   1dc20:	ldr	r0, [pc, #-1036]	; 1d81c <__assert_fail@plt+0xc734>
   1dc24:	str	r0, [sp, #92]	; 0x5c
   1dc28:	b	1dc4c <__assert_fail@plt+0xcb64>
   1dc2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc30:	cmp	r0, #64	; 0x40
   1dc34:	movw	r0, #0
   1dc38:	movlt	r0, #1
   1dc3c:	tst	r0, #1
   1dc40:	movw	r0, #64	; 0x40
   1dc44:	moveq	r0, #0
   1dc48:	str	r0, [sp, #92]	; 0x5c
   1dc4c:	ldr	r0, [sp, #92]	; 0x5c
   1dc50:	str	r0, [fp, #-32]	; 0xffffffe0
   1dc54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dc58:	cmp	r0, #0
   1dc5c:	beq	1dc8c <__assert_fail@plt+0xcba4>
   1dc60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dc64:	ldr	r1, [fp, #8]
   1dc68:	sdiv	r0, r0, r1
   1dc6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1dc70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dc74:	mov	r1, r0
   1dc78:	ldr	r2, [fp, #8]
   1dc7c:	sdiv	r3, r0, r2
   1dc80:	mls	r0, r3, r2, r0
   1dc84:	sub	r0, r1, r0
   1dc88:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc8c:	ldr	r0, [fp, #-4]
   1dc90:	movw	r1, #0
   1dc94:	cmp	r0, r1
   1dc98:	bne	1dca8 <__assert_fail@plt+0xcbc0>
   1dc9c:	ldr	r0, [fp, #-8]
   1dca0:	movw	r1, #0
   1dca4:	str	r1, [r0]
   1dca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dcb0:	sub	r0, r0, r1
   1dcb4:	ldr	r1, [fp, #-12]
   1dcb8:	cmp	r0, r1
   1dcbc:	bge	1f0a8 <__assert_fail@plt+0xdfc0>
   1dcc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dcc4:	ldr	r1, [fp, #-12]
   1dcc8:	add	r1, r0, r1
   1dccc:	mov	r2, #1
   1dcd0:	cmp	r1, r0
   1dcd4:	movwvc	r2, #0
   1dcd8:	str	r1, [fp, #-24]	; 0xffffffe8
   1dcdc:	tst	r2, #1
   1dce0:	bne	1f0a4 <__assert_fail@plt+0xdfbc>
   1dce4:	ldr	r0, [fp, #-16]
   1dce8:	movw	r1, #0
   1dcec:	cmp	r1, r0
   1dcf0:	bgt	1dd04 <__assert_fail@plt+0xcc1c>
   1dcf4:	ldr	r0, [fp, #-16]
   1dcf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dcfc:	cmp	r0, r1
   1dd00:	blt	1f0a4 <__assert_fail@plt+0xdfbc>
   1dd04:	b	1e0e0 <__assert_fail@plt+0xcff8>
   1dd08:			; <UNDEFINED> instruction: 0xffff8000
   1dd0c:	b	1dd10 <__assert_fail@plt+0xcc28>
   1dd10:	ldr	r0, [fp, #8]
   1dd14:	cmp	r0, #0
   1dd18:	bge	1de2c <__assert_fail@plt+0xcd44>
   1dd1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd20:	cmp	r0, #0
   1dd24:	bge	1ddb0 <__assert_fail@plt+0xccc8>
   1dd28:	b	1dd2c <__assert_fail@plt+0xcc44>
   1dd2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd30:	ldr	r1, [fp, #8]
   1dd34:	movw	r2, #127	; 0x7f
   1dd38:	sdiv	r1, r2, r1
   1dd3c:	cmp	r0, r1
   1dd40:	blt	1decc <__assert_fail@plt+0xcde4>
   1dd44:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1dd48:	b	1dd4c <__assert_fail@plt+0xcc64>
   1dd4c:	ldr	r0, [pc, #-1172]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1dd50:	ldr	r1, [fp, #8]
   1dd54:	cmp	r1, r0
   1dd58:	blt	1dd70 <__assert_fail@plt+0xcc88>
   1dd5c:	b	1dd7c <__assert_fail@plt+0xcc94>
   1dd60:	ldr	r0, [fp, #8]
   1dd64:	movw	r1, #0
   1dd68:	cmp	r1, r0
   1dd6c:	bge	1dd7c <__assert_fail@plt+0xcc94>
   1dd70:	movw	r0, #0
   1dd74:	str	r0, [sp, #88]	; 0x58
   1dd78:	b	1dd94 <__assert_fail@plt+0xccac>
   1dd7c:	ldr	r0, [fp, #8]
   1dd80:	movw	r1, #0
   1dd84:	sub	r0, r1, r0
   1dd88:	movw	r1, #127	; 0x7f
   1dd8c:	sdiv	r0, r1, r0
   1dd90:	str	r0, [sp, #88]	; 0x58
   1dd94:	ldr	r0, [sp, #88]	; 0x58
   1dd98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd9c:	mvn	r2, #0
   1dda0:	sub	r1, r2, r1
   1dda4:	cmp	r0, r1
   1dda8:	ble	1decc <__assert_fail@plt+0xcde4>
   1ddac:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1ddb0:	b	1ddb4 <__assert_fail@plt+0xcccc>
   1ddb4:	b	1de10 <__assert_fail@plt+0xcd28>
   1ddb8:	b	1de10 <__assert_fail@plt+0xcd28>
   1ddbc:	ldr	r0, [fp, #8]
   1ddc0:	cmn	r0, #1
   1ddc4:	bne	1de10 <__assert_fail@plt+0xcd28>
   1ddc8:	b	1ddcc <__assert_fail@plt+0xcce4>
   1ddcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddd0:	mvn	r1, #127	; 0x7f
   1ddd4:	add	r0, r0, r1
   1ddd8:	movw	r1, #0
   1dddc:	cmp	r1, r0
   1dde0:	blt	1decc <__assert_fail@plt+0xcde4>
   1dde4:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1dde8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddec:	movw	r1, #0
   1ddf0:	cmp	r1, r0
   1ddf4:	bge	1dee4 <__assert_fail@plt+0xcdfc>
   1ddf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddfc:	sub	r0, r0, #1
   1de00:	movw	r1, #127	; 0x7f
   1de04:	cmp	r1, r0
   1de08:	blt	1decc <__assert_fail@plt+0xcde4>
   1de0c:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1de10:	ldr	r0, [fp, #8]
   1de14:	mvn	r1, #127	; 0x7f
   1de18:	sdiv	r0, r1, r0
   1de1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de20:	cmp	r0, r1
   1de24:	blt	1decc <__assert_fail@plt+0xcde4>
   1de28:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1de2c:	ldr	r0, [fp, #8]
   1de30:	cmp	r0, #0
   1de34:	bne	1de3c <__assert_fail@plt+0xcd54>
   1de38:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1de3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de40:	cmp	r0, #0
   1de44:	bge	1deb4 <__assert_fail@plt+0xcdcc>
   1de48:	b	1de4c <__assert_fail@plt+0xcd64>
   1de4c:	b	1de98 <__assert_fail@plt+0xcdb0>
   1de50:	b	1de98 <__assert_fail@plt+0xcdb0>
   1de54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de58:	cmn	r0, #1
   1de5c:	bne	1de98 <__assert_fail@plt+0xcdb0>
   1de60:	b	1de64 <__assert_fail@plt+0xcd7c>
   1de64:	ldr	r0, [fp, #8]
   1de68:	mvn	r1, #127	; 0x7f
   1de6c:	add	r0, r0, r1
   1de70:	movw	r1, #0
   1de74:	cmp	r1, r0
   1de78:	blt	1decc <__assert_fail@plt+0xcde4>
   1de7c:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1de80:	ldr	r0, [fp, #8]
   1de84:	sub	r0, r0, #1
   1de88:	movw	r1, #127	; 0x7f
   1de8c:	cmp	r1, r0
   1de90:	blt	1decc <__assert_fail@plt+0xcde4>
   1de94:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1de98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de9c:	mvn	r1, #127	; 0x7f
   1dea0:	sdiv	r0, r1, r0
   1dea4:	ldr	r1, [fp, #8]
   1dea8:	cmp	r0, r1
   1deac:	blt	1decc <__assert_fail@plt+0xcde4>
   1deb0:	b	1dee4 <__assert_fail@plt+0xcdfc>
   1deb4:	ldr	r0, [fp, #8]
   1deb8:	movw	r1, #127	; 0x7f
   1debc:	sdiv	r0, r1, r0
   1dec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dec4:	cmp	r0, r1
   1dec8:	bge	1dee4 <__assert_fail@plt+0xcdfc>
   1decc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ded0:	ldr	r1, [fp, #8]
   1ded4:	mul	r0, r0, r1
   1ded8:	sxtb	r0, r0
   1dedc:	str	r0, [fp, #-28]	; 0xffffffe4
   1dee0:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1dee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dee8:	ldr	r1, [fp, #8]
   1deec:	mul	r0, r0, r1
   1def0:	sxtb	r0, r0
   1def4:	str	r0, [fp, #-28]	; 0xffffffe4
   1def8:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1defc:	ldr	r0, [fp, #8]
   1df00:	cmp	r0, #0
   1df04:	bge	1e014 <__assert_fail@plt+0xcf2c>
   1df08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df0c:	cmp	r0, #0
   1df10:	bge	1df9c <__assert_fail@plt+0xceb4>
   1df14:	b	1df18 <__assert_fail@plt+0xce30>
   1df18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df1c:	ldr	r1, [fp, #8]
   1df20:	movw	r2, #255	; 0xff
   1df24:	sdiv	r1, r2, r1
   1df28:	cmp	r0, r1
   1df2c:	blt	1e0b0 <__assert_fail@plt+0xcfc8>
   1df30:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1df34:	b	1df38 <__assert_fail@plt+0xce50>
   1df38:	ldr	r0, [pc, #-1664]	; 1d8c0 <__assert_fail@plt+0xc7d8>
   1df3c:	ldr	r1, [fp, #8]
   1df40:	cmp	r1, r0
   1df44:	blt	1df5c <__assert_fail@plt+0xce74>
   1df48:	b	1df68 <__assert_fail@plt+0xce80>
   1df4c:	ldr	r0, [fp, #8]
   1df50:	movw	r1, #0
   1df54:	cmp	r1, r0
   1df58:	bge	1df68 <__assert_fail@plt+0xce80>
   1df5c:	movw	r0, #0
   1df60:	str	r0, [sp, #84]	; 0x54
   1df64:	b	1df80 <__assert_fail@plt+0xce98>
   1df68:	ldr	r0, [fp, #8]
   1df6c:	movw	r1, #0
   1df70:	sub	r0, r1, r0
   1df74:	movw	r1, #255	; 0xff
   1df78:	sdiv	r0, r1, r0
   1df7c:	str	r0, [sp, #84]	; 0x54
   1df80:	ldr	r0, [sp, #84]	; 0x54
   1df84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1df88:	mvn	r2, #0
   1df8c:	sub	r1, r2, r1
   1df90:	cmp	r0, r1
   1df94:	ble	1e0b0 <__assert_fail@plt+0xcfc8>
   1df98:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1df9c:	b	1dfa0 <__assert_fail@plt+0xceb8>
   1dfa0:	b	1dff8 <__assert_fail@plt+0xcf10>
   1dfa4:	b	1dff8 <__assert_fail@plt+0xcf10>
   1dfa8:	ldr	r0, [fp, #8]
   1dfac:	cmn	r0, #1
   1dfb0:	bne	1dff8 <__assert_fail@plt+0xcf10>
   1dfb4:	b	1dfb8 <__assert_fail@plt+0xced0>
   1dfb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfbc:	add	r0, r0, #0
   1dfc0:	movw	r1, #0
   1dfc4:	cmp	r1, r0
   1dfc8:	blt	1e0b0 <__assert_fail@plt+0xcfc8>
   1dfcc:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1dfd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfd4:	movw	r1, #0
   1dfd8:	cmp	r1, r0
   1dfdc:	bge	1e0c8 <__assert_fail@plt+0xcfe0>
   1dfe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfe4:	sub	r0, r0, #1
   1dfe8:	mvn	r1, #0
   1dfec:	cmp	r1, r0
   1dff0:	blt	1e0b0 <__assert_fail@plt+0xcfc8>
   1dff4:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1dff8:	ldr	r0, [fp, #8]
   1dffc:	movw	r1, #0
   1e000:	sdiv	r0, r1, r0
   1e004:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e008:	cmp	r0, r1
   1e00c:	blt	1e0b0 <__assert_fail@plt+0xcfc8>
   1e010:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1e014:	ldr	r0, [fp, #8]
   1e018:	cmp	r0, #0
   1e01c:	bne	1e024 <__assert_fail@plt+0xcf3c>
   1e020:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1e024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e028:	cmp	r0, #0
   1e02c:	bge	1e098 <__assert_fail@plt+0xcfb0>
   1e030:	b	1e034 <__assert_fail@plt+0xcf4c>
   1e034:	b	1e07c <__assert_fail@plt+0xcf94>
   1e038:	b	1e07c <__assert_fail@plt+0xcf94>
   1e03c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e040:	cmn	r0, #1
   1e044:	bne	1e07c <__assert_fail@plt+0xcf94>
   1e048:	b	1e04c <__assert_fail@plt+0xcf64>
   1e04c:	ldr	r0, [fp, #8]
   1e050:	add	r0, r0, #0
   1e054:	movw	r1, #0
   1e058:	cmp	r1, r0
   1e05c:	blt	1e0b0 <__assert_fail@plt+0xcfc8>
   1e060:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1e064:	ldr	r0, [fp, #8]
   1e068:	sub	r0, r0, #1
   1e06c:	mvn	r1, #0
   1e070:	cmp	r1, r0
   1e074:	blt	1e0b0 <__assert_fail@plt+0xcfc8>
   1e078:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1e07c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e080:	movw	r1, #0
   1e084:	sdiv	r0, r1, r0
   1e088:	ldr	r1, [fp, #8]
   1e08c:	cmp	r0, r1
   1e090:	blt	1e0b0 <__assert_fail@plt+0xcfc8>
   1e094:	b	1e0c8 <__assert_fail@plt+0xcfe0>
   1e098:	ldr	r0, [fp, #8]
   1e09c:	movw	r1, #255	; 0xff
   1e0a0:	sdiv	r0, r1, r0
   1e0a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0a8:	cmp	r0, r1
   1e0ac:	bge	1e0c8 <__assert_fail@plt+0xcfe0>
   1e0b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0b4:	ldr	r1, [fp, #8]
   1e0b8:	mul	r0, r0, r1
   1e0bc:	and	r0, r0, #255	; 0xff
   1e0c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0c4:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1e0c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0cc:	ldr	r1, [fp, #8]
   1e0d0:	mul	r0, r0, r1
   1e0d4:	and	r0, r0, #255	; 0xff
   1e0d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0dc:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1e0e0:	b	1e4bc <__assert_fail@plt+0xd3d4>
   1e0e4:	b	1e0e8 <__assert_fail@plt+0xd000>
   1e0e8:	ldr	r0, [fp, #8]
   1e0ec:	cmp	r0, #0
   1e0f0:	bge	1e208 <__assert_fail@plt+0xd120>
   1e0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0f8:	cmp	r0, #0
   1e0fc:	bge	1e18c <__assert_fail@plt+0xd0a4>
   1e100:	b	1e104 <__assert_fail@plt+0xd01c>
   1e104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e108:	ldr	r1, [fp, #8]
   1e10c:	movw	r2, #32767	; 0x7fff
   1e110:	sdiv	r1, r2, r1
   1e114:	cmp	r0, r1
   1e118:	blt	1e2a8 <__assert_fail@plt+0xd1c0>
   1e11c:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e120:	andhi	r0, r0, r0
   1e124:	b	1e128 <__assert_fail@plt+0xd040>
   1e128:	ldr	r0, [pc, #4004]	; 1f0d4 <__assert_fail@plt+0xdfec>
   1e12c:	ldr	r1, [fp, #8]
   1e130:	cmp	r1, r0
   1e134:	blt	1e14c <__assert_fail@plt+0xd064>
   1e138:	b	1e158 <__assert_fail@plt+0xd070>
   1e13c:	ldr	r0, [fp, #8]
   1e140:	movw	r1, #0
   1e144:	cmp	r1, r0
   1e148:	bge	1e158 <__assert_fail@plt+0xd070>
   1e14c:	movw	r0, #0
   1e150:	str	r0, [sp, #80]	; 0x50
   1e154:	b	1e170 <__assert_fail@plt+0xd088>
   1e158:	ldr	r0, [fp, #8]
   1e15c:	movw	r1, #0
   1e160:	sub	r0, r1, r0
   1e164:	movw	r1, #32767	; 0x7fff
   1e168:	sdiv	r0, r1, r0
   1e16c:	str	r0, [sp, #80]	; 0x50
   1e170:	ldr	r0, [sp, #80]	; 0x50
   1e174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e178:	mvn	r2, #0
   1e17c:	sub	r1, r2, r1
   1e180:	cmp	r0, r1
   1e184:	ble	1e2a8 <__assert_fail@plt+0xd1c0>
   1e188:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e18c:	b	1e190 <__assert_fail@plt+0xd0a8>
   1e190:	b	1e1ec <__assert_fail@plt+0xd104>
   1e194:	b	1e1ec <__assert_fail@plt+0xd104>
   1e198:	ldr	r0, [fp, #8]
   1e19c:	cmn	r0, #1
   1e1a0:	bne	1e1ec <__assert_fail@plt+0xd104>
   1e1a4:	b	1e1a8 <__assert_fail@plt+0xd0c0>
   1e1a8:	ldr	r0, [pc, #3884]	; 1f0dc <__assert_fail@plt+0xdff4>
   1e1ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1b0:	add	r0, r1, r0
   1e1b4:	movw	r1, #0
   1e1b8:	cmp	r1, r0
   1e1bc:	blt	1e2a8 <__assert_fail@plt+0xd1c0>
   1e1c0:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1c8:	movw	r1, #0
   1e1cc:	cmp	r1, r0
   1e1d0:	bge	1e2c0 <__assert_fail@plt+0xd1d8>
   1e1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1d8:	sub	r0, r0, #1
   1e1dc:	movw	r1, #32767	; 0x7fff
   1e1e0:	cmp	r1, r0
   1e1e4:	blt	1e2a8 <__assert_fail@plt+0xd1c0>
   1e1e8:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e1ec:	ldr	r0, [pc, #3816]	; 1f0dc <__assert_fail@plt+0xdff4>
   1e1f0:	ldr	r1, [fp, #8]
   1e1f4:	sdiv	r0, r0, r1
   1e1f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1fc:	cmp	r0, r1
   1e200:	blt	1e2a8 <__assert_fail@plt+0xd1c0>
   1e204:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e208:	ldr	r0, [fp, #8]
   1e20c:	cmp	r0, #0
   1e210:	bne	1e218 <__assert_fail@plt+0xd130>
   1e214:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e21c:	cmp	r0, #0
   1e220:	bge	1e290 <__assert_fail@plt+0xd1a8>
   1e224:	b	1e228 <__assert_fail@plt+0xd140>
   1e228:	b	1e274 <__assert_fail@plt+0xd18c>
   1e22c:	b	1e274 <__assert_fail@plt+0xd18c>
   1e230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e234:	cmn	r0, #1
   1e238:	bne	1e274 <__assert_fail@plt+0xd18c>
   1e23c:	b	1e240 <__assert_fail@plt+0xd158>
   1e240:	ldr	r0, [pc, #3732]	; 1f0dc <__assert_fail@plt+0xdff4>
   1e244:	ldr	r1, [fp, #8]
   1e248:	add	r0, r1, r0
   1e24c:	movw	r1, #0
   1e250:	cmp	r1, r0
   1e254:	blt	1e2a8 <__assert_fail@plt+0xd1c0>
   1e258:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e25c:	ldr	r0, [fp, #8]
   1e260:	sub	r0, r0, #1
   1e264:	movw	r1, #32767	; 0x7fff
   1e268:	cmp	r1, r0
   1e26c:	blt	1e2a8 <__assert_fail@plt+0xd1c0>
   1e270:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e274:	ldr	r0, [pc, #3680]	; 1f0dc <__assert_fail@plt+0xdff4>
   1e278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e27c:	sdiv	r0, r0, r1
   1e280:	ldr	r1, [fp, #8]
   1e284:	cmp	r0, r1
   1e288:	blt	1e2a8 <__assert_fail@plt+0xd1c0>
   1e28c:	b	1e2c0 <__assert_fail@plt+0xd1d8>
   1e290:	ldr	r0, [fp, #8]
   1e294:	movw	r1, #32767	; 0x7fff
   1e298:	sdiv	r0, r1, r0
   1e29c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2a0:	cmp	r0, r1
   1e2a4:	bge	1e2c0 <__assert_fail@plt+0xd1d8>
   1e2a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2ac:	ldr	r1, [fp, #8]
   1e2b0:	mul	r0, r0, r1
   1e2b4:	sxth	r0, r0
   1e2b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e2bc:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1e2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2c4:	ldr	r1, [fp, #8]
   1e2c8:	mul	r0, r0, r1
   1e2cc:	sxth	r0, r0
   1e2d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e2d4:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1e2d8:	ldr	r0, [fp, #8]
   1e2dc:	cmp	r0, #0
   1e2e0:	bge	1e3f0 <__assert_fail@plt+0xd308>
   1e2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2e8:	cmp	r0, #0
   1e2ec:	bge	1e378 <__assert_fail@plt+0xd290>
   1e2f0:	b	1e2f4 <__assert_fail@plt+0xd20c>
   1e2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2f8:	ldr	r1, [fp, #8]
   1e2fc:	movw	r2, #65535	; 0xffff
   1e300:	sdiv	r1, r2, r1
   1e304:	cmp	r0, r1
   1e308:	blt	1e48c <__assert_fail@plt+0xd3a4>
   1e30c:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e310:	b	1e314 <__assert_fail@plt+0xd22c>
   1e314:	ldr	r0, [pc, #3512]	; 1f0d4 <__assert_fail@plt+0xdfec>
   1e318:	ldr	r1, [fp, #8]
   1e31c:	cmp	r1, r0
   1e320:	blt	1e338 <__assert_fail@plt+0xd250>
   1e324:	b	1e344 <__assert_fail@plt+0xd25c>
   1e328:	ldr	r0, [fp, #8]
   1e32c:	movw	r1, #0
   1e330:	cmp	r1, r0
   1e334:	bge	1e344 <__assert_fail@plt+0xd25c>
   1e338:	movw	r0, #0
   1e33c:	str	r0, [sp, #76]	; 0x4c
   1e340:	b	1e35c <__assert_fail@plt+0xd274>
   1e344:	ldr	r0, [fp, #8]
   1e348:	movw	r1, #0
   1e34c:	sub	r0, r1, r0
   1e350:	movw	r1, #65535	; 0xffff
   1e354:	sdiv	r0, r1, r0
   1e358:	str	r0, [sp, #76]	; 0x4c
   1e35c:	ldr	r0, [sp, #76]	; 0x4c
   1e360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e364:	mvn	r2, #0
   1e368:	sub	r1, r2, r1
   1e36c:	cmp	r0, r1
   1e370:	ble	1e48c <__assert_fail@plt+0xd3a4>
   1e374:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e378:	b	1e37c <__assert_fail@plt+0xd294>
   1e37c:	b	1e3d4 <__assert_fail@plt+0xd2ec>
   1e380:	b	1e3d4 <__assert_fail@plt+0xd2ec>
   1e384:	ldr	r0, [fp, #8]
   1e388:	cmn	r0, #1
   1e38c:	bne	1e3d4 <__assert_fail@plt+0xd2ec>
   1e390:	b	1e394 <__assert_fail@plt+0xd2ac>
   1e394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e398:	add	r0, r0, #0
   1e39c:	movw	r1, #0
   1e3a0:	cmp	r1, r0
   1e3a4:	blt	1e48c <__assert_fail@plt+0xd3a4>
   1e3a8:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e3ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3b0:	movw	r1, #0
   1e3b4:	cmp	r1, r0
   1e3b8:	bge	1e4a4 <__assert_fail@plt+0xd3bc>
   1e3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3c0:	sub	r0, r0, #1
   1e3c4:	mvn	r1, #0
   1e3c8:	cmp	r1, r0
   1e3cc:	blt	1e48c <__assert_fail@plt+0xd3a4>
   1e3d0:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e3d4:	ldr	r0, [fp, #8]
   1e3d8:	movw	r1, #0
   1e3dc:	sdiv	r0, r1, r0
   1e3e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e3e4:	cmp	r0, r1
   1e3e8:	blt	1e48c <__assert_fail@plt+0xd3a4>
   1e3ec:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e3f0:	ldr	r0, [fp, #8]
   1e3f4:	cmp	r0, #0
   1e3f8:	bne	1e400 <__assert_fail@plt+0xd318>
   1e3fc:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e404:	cmp	r0, #0
   1e408:	bge	1e474 <__assert_fail@plt+0xd38c>
   1e40c:	b	1e410 <__assert_fail@plt+0xd328>
   1e410:	b	1e458 <__assert_fail@plt+0xd370>
   1e414:	b	1e458 <__assert_fail@plt+0xd370>
   1e418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e41c:	cmn	r0, #1
   1e420:	bne	1e458 <__assert_fail@plt+0xd370>
   1e424:	b	1e428 <__assert_fail@plt+0xd340>
   1e428:	ldr	r0, [fp, #8]
   1e42c:	add	r0, r0, #0
   1e430:	movw	r1, #0
   1e434:	cmp	r1, r0
   1e438:	blt	1e48c <__assert_fail@plt+0xd3a4>
   1e43c:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e440:	ldr	r0, [fp, #8]
   1e444:	sub	r0, r0, #1
   1e448:	mvn	r1, #0
   1e44c:	cmp	r1, r0
   1e450:	blt	1e48c <__assert_fail@plt+0xd3a4>
   1e454:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e45c:	movw	r1, #0
   1e460:	sdiv	r0, r1, r0
   1e464:	ldr	r1, [fp, #8]
   1e468:	cmp	r0, r1
   1e46c:	blt	1e48c <__assert_fail@plt+0xd3a4>
   1e470:	b	1e4a4 <__assert_fail@plt+0xd3bc>
   1e474:	ldr	r0, [fp, #8]
   1e478:	movw	r1, #65535	; 0xffff
   1e47c:	sdiv	r0, r1, r0
   1e480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e484:	cmp	r0, r1
   1e488:	bge	1e4a4 <__assert_fail@plt+0xd3bc>
   1e48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e490:	ldr	r1, [fp, #8]
   1e494:	mul	r0, r0, r1
   1e498:	uxth	r0, r0
   1e49c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e4a0:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1e4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4a8:	ldr	r1, [fp, #8]
   1e4ac:	mul	r0, r0, r1
   1e4b0:	uxth	r0, r0
   1e4b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e4b8:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1e4bc:	b	1e4c0 <__assert_fail@plt+0xd3d8>
   1e4c0:	b	1e4c4 <__assert_fail@plt+0xd3dc>
   1e4c4:	ldr	r0, [fp, #8]
   1e4c8:	cmp	r0, #0
   1e4cc:	bge	1e5d0 <__assert_fail@plt+0xd4e8>
   1e4d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4d4:	cmp	r0, #0
   1e4d8:	bge	1e564 <__assert_fail@plt+0xd47c>
   1e4dc:	b	1e4e0 <__assert_fail@plt+0xd3f8>
   1e4e0:	ldr	r0, [pc, #3048]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e4e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4e8:	ldr	r2, [fp, #8]
   1e4ec:	sdiv	r0, r0, r2
   1e4f0:	cmp	r1, r0
   1e4f4:	blt	1e660 <__assert_fail@plt+0xd578>
   1e4f8:	b	1e674 <__assert_fail@plt+0xd58c>
   1e4fc:	b	1e500 <__assert_fail@plt+0xd418>
   1e500:	ldr	r0, [pc, #3020]	; 1f0d4 <__assert_fail@plt+0xdfec>
   1e504:	ldr	r1, [fp, #8]
   1e508:	cmp	r1, r0
   1e50c:	blt	1e524 <__assert_fail@plt+0xd43c>
   1e510:	b	1e530 <__assert_fail@plt+0xd448>
   1e514:	ldr	r0, [fp, #8]
   1e518:	movw	r1, #0
   1e51c:	cmp	r1, r0
   1e520:	bge	1e530 <__assert_fail@plt+0xd448>
   1e524:	movw	r0, #0
   1e528:	str	r0, [sp, #72]	; 0x48
   1e52c:	b	1e548 <__assert_fail@plt+0xd460>
   1e530:	ldr	r0, [pc, #2968]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e534:	ldr	r1, [fp, #8]
   1e538:	movw	r2, #0
   1e53c:	sub	r1, r2, r1
   1e540:	sdiv	r0, r0, r1
   1e544:	str	r0, [sp, #72]	; 0x48
   1e548:	ldr	r0, [sp, #72]	; 0x48
   1e54c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e550:	mvn	r2, #0
   1e554:	sub	r1, r2, r1
   1e558:	cmp	r0, r1
   1e55c:	ble	1e660 <__assert_fail@plt+0xd578>
   1e560:	b	1e674 <__assert_fail@plt+0xd58c>
   1e564:	ldr	r0, [fp, #8]
   1e568:	cmn	r0, #1
   1e56c:	bne	1e5b4 <__assert_fail@plt+0xd4cc>
   1e570:	b	1e574 <__assert_fail@plt+0xd48c>
   1e574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e578:	add	r0, r0, #-2147483648	; 0x80000000
   1e57c:	movw	r1, #0
   1e580:	cmp	r1, r0
   1e584:	blt	1e660 <__assert_fail@plt+0xd578>
   1e588:	b	1e674 <__assert_fail@plt+0xd58c>
   1e58c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e590:	movw	r1, #0
   1e594:	cmp	r1, r0
   1e598:	bge	1e674 <__assert_fail@plt+0xd58c>
   1e59c:	ldr	r0, [pc, #2860]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e5a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5a4:	sub	r1, r1, #1
   1e5a8:	cmp	r0, r1
   1e5ac:	blt	1e660 <__assert_fail@plt+0xd578>
   1e5b0:	b	1e674 <__assert_fail@plt+0xd58c>
   1e5b4:	ldr	r0, [pc, #2844]	; 1f0d8 <__assert_fail@plt+0xdff0>
   1e5b8:	ldr	r1, [fp, #8]
   1e5bc:	sdiv	r0, r0, r1
   1e5c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5c4:	cmp	r0, r1
   1e5c8:	blt	1e660 <__assert_fail@plt+0xd578>
   1e5cc:	b	1e674 <__assert_fail@plt+0xd58c>
   1e5d0:	ldr	r0, [fp, #8]
   1e5d4:	cmp	r0, #0
   1e5d8:	bne	1e5e0 <__assert_fail@plt+0xd4f8>
   1e5dc:	b	1e674 <__assert_fail@plt+0xd58c>
   1e5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5e4:	cmp	r0, #0
   1e5e8:	bge	1e648 <__assert_fail@plt+0xd560>
   1e5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5f0:	cmn	r0, #1
   1e5f4:	bne	1e62c <__assert_fail@plt+0xd544>
   1e5f8:	b	1e5fc <__assert_fail@plt+0xd514>
   1e5fc:	ldr	r0, [fp, #8]
   1e600:	add	r0, r0, #-2147483648	; 0x80000000
   1e604:	movw	r1, #0
   1e608:	cmp	r1, r0
   1e60c:	blt	1e660 <__assert_fail@plt+0xd578>
   1e610:	b	1e674 <__assert_fail@plt+0xd58c>
   1e614:	ldr	r0, [pc, #2740]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e618:	ldr	r1, [fp, #8]
   1e61c:	sub	r1, r1, #1
   1e620:	cmp	r0, r1
   1e624:	blt	1e660 <__assert_fail@plt+0xd578>
   1e628:	b	1e674 <__assert_fail@plt+0xd58c>
   1e62c:	ldr	r0, [pc, #2724]	; 1f0d8 <__assert_fail@plt+0xdff0>
   1e630:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e634:	sdiv	r0, r0, r1
   1e638:	ldr	r1, [fp, #8]
   1e63c:	cmp	r0, r1
   1e640:	blt	1e660 <__assert_fail@plt+0xd578>
   1e644:	b	1e674 <__assert_fail@plt+0xd58c>
   1e648:	ldr	r0, [pc, #2688]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e64c:	ldr	r1, [fp, #8]
   1e650:	sdiv	r0, r0, r1
   1e654:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e658:	cmp	r0, r1
   1e65c:	bge	1e674 <__assert_fail@plt+0xd58c>
   1e660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e664:	ldr	r1, [fp, #8]
   1e668:	mul	r0, r0, r1
   1e66c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e670:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1e674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e678:	ldr	r1, [fp, #8]
   1e67c:	mul	r0, r0, r1
   1e680:	str	r0, [fp, #-28]	; 0xffffffe4
   1e684:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1e688:	ldr	r0, [fp, #8]
   1e68c:	cmp	r0, #0
   1e690:	bge	1e7a0 <__assert_fail@plt+0xd6b8>
   1e694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e698:	cmp	r0, #0
   1e69c:	bge	1e728 <__assert_fail@plt+0xd640>
   1e6a0:	b	1e6c0 <__assert_fail@plt+0xd5d8>
   1e6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6a8:	ldr	r1, [fp, #8]
   1e6ac:	mvn	r2, #0
   1e6b0:	udiv	r1, r2, r1
   1e6b4:	cmp	r0, r1
   1e6b8:	bcc	1e83c <__assert_fail@plt+0xd754>
   1e6bc:	b	1e850 <__assert_fail@plt+0xd768>
   1e6c0:	b	1e6c4 <__assert_fail@plt+0xd5dc>
   1e6c4:	ldr	r0, [pc, #2568]	; 1f0d4 <__assert_fail@plt+0xdfec>
   1e6c8:	ldr	r1, [fp, #8]
   1e6cc:	cmp	r1, r0
   1e6d0:	blt	1e6e8 <__assert_fail@plt+0xd600>
   1e6d4:	b	1e6f4 <__assert_fail@plt+0xd60c>
   1e6d8:	ldr	r0, [fp, #8]
   1e6dc:	movw	r1, #0
   1e6e0:	cmp	r1, r0
   1e6e4:	bge	1e6f4 <__assert_fail@plt+0xd60c>
   1e6e8:	movw	r0, #1
   1e6ec:	str	r0, [sp, #68]	; 0x44
   1e6f0:	b	1e70c <__assert_fail@plt+0xd624>
   1e6f4:	ldr	r0, [fp, #8]
   1e6f8:	movw	r1, #0
   1e6fc:	sub	r0, r1, r0
   1e700:	mvn	r1, #0
   1e704:	udiv	r0, r1, r0
   1e708:	str	r0, [sp, #68]	; 0x44
   1e70c:	ldr	r0, [sp, #68]	; 0x44
   1e710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e714:	mvn	r2, #0
   1e718:	sub	r1, r2, r1
   1e71c:	cmp	r0, r1
   1e720:	bls	1e83c <__assert_fail@plt+0xd754>
   1e724:	b	1e850 <__assert_fail@plt+0xd768>
   1e728:	b	1e72c <__assert_fail@plt+0xd644>
   1e72c:	b	1e784 <__assert_fail@plt+0xd69c>
   1e730:	b	1e784 <__assert_fail@plt+0xd69c>
   1e734:	ldr	r0, [fp, #8]
   1e738:	cmn	r0, #1
   1e73c:	bne	1e784 <__assert_fail@plt+0xd69c>
   1e740:	b	1e744 <__assert_fail@plt+0xd65c>
   1e744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e748:	add	r0, r0, #0
   1e74c:	movw	r1, #0
   1e750:	cmp	r1, r0
   1e754:	blt	1e83c <__assert_fail@plt+0xd754>
   1e758:	b	1e850 <__assert_fail@plt+0xd768>
   1e75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e760:	movw	r1, #0
   1e764:	cmp	r1, r0
   1e768:	bge	1e850 <__assert_fail@plt+0xd768>
   1e76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e770:	sub	r0, r0, #1
   1e774:	mvn	r1, #0
   1e778:	cmp	r1, r0
   1e77c:	blt	1e83c <__assert_fail@plt+0xd754>
   1e780:	b	1e850 <__assert_fail@plt+0xd768>
   1e784:	ldr	r0, [fp, #8]
   1e788:	movw	r1, #0
   1e78c:	sdiv	r0, r1, r0
   1e790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e794:	cmp	r0, r1
   1e798:	blt	1e83c <__assert_fail@plt+0xd754>
   1e79c:	b	1e850 <__assert_fail@plt+0xd768>
   1e7a0:	ldr	r0, [fp, #8]
   1e7a4:	cmp	r0, #0
   1e7a8:	bne	1e7b0 <__assert_fail@plt+0xd6c8>
   1e7ac:	b	1e850 <__assert_fail@plt+0xd768>
   1e7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7b4:	cmp	r0, #0
   1e7b8:	bge	1e824 <__assert_fail@plt+0xd73c>
   1e7bc:	b	1e7c0 <__assert_fail@plt+0xd6d8>
   1e7c0:	b	1e808 <__assert_fail@plt+0xd720>
   1e7c4:	b	1e808 <__assert_fail@plt+0xd720>
   1e7c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7cc:	cmn	r0, #1
   1e7d0:	bne	1e808 <__assert_fail@plt+0xd720>
   1e7d4:	b	1e7d8 <__assert_fail@plt+0xd6f0>
   1e7d8:	ldr	r0, [fp, #8]
   1e7dc:	add	r0, r0, #0
   1e7e0:	movw	r1, #0
   1e7e4:	cmp	r1, r0
   1e7e8:	blt	1e83c <__assert_fail@plt+0xd754>
   1e7ec:	b	1e850 <__assert_fail@plt+0xd768>
   1e7f0:	ldr	r0, [fp, #8]
   1e7f4:	sub	r0, r0, #1
   1e7f8:	mvn	r1, #0
   1e7fc:	cmp	r1, r0
   1e800:	blt	1e83c <__assert_fail@plt+0xd754>
   1e804:	b	1e850 <__assert_fail@plt+0xd768>
   1e808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e80c:	movw	r1, #0
   1e810:	sdiv	r0, r1, r0
   1e814:	ldr	r1, [fp, #8]
   1e818:	cmp	r0, r1
   1e81c:	blt	1e83c <__assert_fail@plt+0xd754>
   1e820:	b	1e850 <__assert_fail@plt+0xd768>
   1e824:	ldr	r0, [fp, #8]
   1e828:	mvn	r1, #0
   1e82c:	udiv	r0, r1, r0
   1e830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e834:	cmp	r0, r1
   1e838:	bcs	1e850 <__assert_fail@plt+0xd768>
   1e83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e840:	ldr	r1, [fp, #8]
   1e844:	mul	r0, r0, r1
   1e848:	str	r0, [fp, #-28]	; 0xffffffe4
   1e84c:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1e850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e854:	ldr	r1, [fp, #8]
   1e858:	mul	r0, r0, r1
   1e85c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e860:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1e864:	b	1e868 <__assert_fail@plt+0xd780>
   1e868:	b	1e86c <__assert_fail@plt+0xd784>
   1e86c:	ldr	r0, [fp, #8]
   1e870:	cmp	r0, #0
   1e874:	bge	1e978 <__assert_fail@plt+0xd890>
   1e878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e87c:	cmp	r0, #0
   1e880:	bge	1e90c <__assert_fail@plt+0xd824>
   1e884:	b	1e888 <__assert_fail@plt+0xd7a0>
   1e888:	ldr	r0, [pc, #2112]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e88c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e890:	ldr	r2, [fp, #8]
   1e894:	sdiv	r0, r0, r2
   1e898:	cmp	r1, r0
   1e89c:	blt	1ea08 <__assert_fail@plt+0xd920>
   1e8a0:	b	1ea1c <__assert_fail@plt+0xd934>
   1e8a4:	b	1e8a8 <__assert_fail@plt+0xd7c0>
   1e8a8:	ldr	r0, [pc, #2084]	; 1f0d4 <__assert_fail@plt+0xdfec>
   1e8ac:	ldr	r1, [fp, #8]
   1e8b0:	cmp	r1, r0
   1e8b4:	blt	1e8cc <__assert_fail@plt+0xd7e4>
   1e8b8:	b	1e8d8 <__assert_fail@plt+0xd7f0>
   1e8bc:	ldr	r0, [fp, #8]
   1e8c0:	movw	r1, #0
   1e8c4:	cmp	r1, r0
   1e8c8:	bge	1e8d8 <__assert_fail@plt+0xd7f0>
   1e8cc:	movw	r0, #0
   1e8d0:	str	r0, [sp, #64]	; 0x40
   1e8d4:	b	1e8f0 <__assert_fail@plt+0xd808>
   1e8d8:	ldr	r0, [pc, #2032]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e8dc:	ldr	r1, [fp, #8]
   1e8e0:	movw	r2, #0
   1e8e4:	sub	r1, r2, r1
   1e8e8:	sdiv	r0, r0, r1
   1e8ec:	str	r0, [sp, #64]	; 0x40
   1e8f0:	ldr	r0, [sp, #64]	; 0x40
   1e8f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8f8:	mvn	r2, #0
   1e8fc:	sub	r1, r2, r1
   1e900:	cmp	r0, r1
   1e904:	ble	1ea08 <__assert_fail@plt+0xd920>
   1e908:	b	1ea1c <__assert_fail@plt+0xd934>
   1e90c:	ldr	r0, [fp, #8]
   1e910:	cmn	r0, #1
   1e914:	bne	1e95c <__assert_fail@plt+0xd874>
   1e918:	b	1e91c <__assert_fail@plt+0xd834>
   1e91c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e920:	add	r0, r0, #-2147483648	; 0x80000000
   1e924:	movw	r1, #0
   1e928:	cmp	r1, r0
   1e92c:	blt	1ea08 <__assert_fail@plt+0xd920>
   1e930:	b	1ea1c <__assert_fail@plt+0xd934>
   1e934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e938:	movw	r1, #0
   1e93c:	cmp	r1, r0
   1e940:	bge	1ea1c <__assert_fail@plt+0xd934>
   1e944:	ldr	r0, [pc, #1924]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e948:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e94c:	sub	r1, r1, #1
   1e950:	cmp	r0, r1
   1e954:	blt	1ea08 <__assert_fail@plt+0xd920>
   1e958:	b	1ea1c <__assert_fail@plt+0xd934>
   1e95c:	ldr	r0, [pc, #1908]	; 1f0d8 <__assert_fail@plt+0xdff0>
   1e960:	ldr	r1, [fp, #8]
   1e964:	sdiv	r0, r0, r1
   1e968:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e96c:	cmp	r0, r1
   1e970:	blt	1ea08 <__assert_fail@plt+0xd920>
   1e974:	b	1ea1c <__assert_fail@plt+0xd934>
   1e978:	ldr	r0, [fp, #8]
   1e97c:	cmp	r0, #0
   1e980:	bne	1e988 <__assert_fail@plt+0xd8a0>
   1e984:	b	1ea1c <__assert_fail@plt+0xd934>
   1e988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e98c:	cmp	r0, #0
   1e990:	bge	1e9f0 <__assert_fail@plt+0xd908>
   1e994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e998:	cmn	r0, #1
   1e99c:	bne	1e9d4 <__assert_fail@plt+0xd8ec>
   1e9a0:	b	1e9a4 <__assert_fail@plt+0xd8bc>
   1e9a4:	ldr	r0, [fp, #8]
   1e9a8:	add	r0, r0, #-2147483648	; 0x80000000
   1e9ac:	movw	r1, #0
   1e9b0:	cmp	r1, r0
   1e9b4:	blt	1ea08 <__assert_fail@plt+0xd920>
   1e9b8:	b	1ea1c <__assert_fail@plt+0xd934>
   1e9bc:	ldr	r0, [pc, #1804]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e9c0:	ldr	r1, [fp, #8]
   1e9c4:	sub	r1, r1, #1
   1e9c8:	cmp	r0, r1
   1e9cc:	blt	1ea08 <__assert_fail@plt+0xd920>
   1e9d0:	b	1ea1c <__assert_fail@plt+0xd934>
   1e9d4:	ldr	r0, [pc, #1788]	; 1f0d8 <__assert_fail@plt+0xdff0>
   1e9d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9dc:	sdiv	r0, r0, r1
   1e9e0:	ldr	r1, [fp, #8]
   1e9e4:	cmp	r0, r1
   1e9e8:	blt	1ea08 <__assert_fail@plt+0xd920>
   1e9ec:	b	1ea1c <__assert_fail@plt+0xd934>
   1e9f0:	ldr	r0, [pc, #1752]	; 1f0d0 <__assert_fail@plt+0xdfe8>
   1e9f4:	ldr	r1, [fp, #8]
   1e9f8:	sdiv	r0, r0, r1
   1e9fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea00:	cmp	r0, r1
   1ea04:	bge	1ea1c <__assert_fail@plt+0xd934>
   1ea08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea0c:	ldr	r1, [fp, #8]
   1ea10:	mul	r0, r0, r1
   1ea14:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea18:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1ea1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea20:	ldr	r1, [fp, #8]
   1ea24:	mul	r0, r0, r1
   1ea28:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea2c:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1ea30:	ldr	r0, [fp, #8]
   1ea34:	cmp	r0, #0
   1ea38:	bge	1eb48 <__assert_fail@plt+0xda60>
   1ea3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea40:	cmp	r0, #0
   1ea44:	bge	1ead0 <__assert_fail@plt+0xd9e8>
   1ea48:	b	1ea68 <__assert_fail@plt+0xd980>
   1ea4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea50:	ldr	r1, [fp, #8]
   1ea54:	mvn	r2, #0
   1ea58:	udiv	r1, r2, r1
   1ea5c:	cmp	r0, r1
   1ea60:	bcc	1ebe4 <__assert_fail@plt+0xdafc>
   1ea64:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1ea68:	b	1ea6c <__assert_fail@plt+0xd984>
   1ea6c:	ldr	r0, [pc, #1632]	; 1f0d4 <__assert_fail@plt+0xdfec>
   1ea70:	ldr	r1, [fp, #8]
   1ea74:	cmp	r1, r0
   1ea78:	blt	1ea90 <__assert_fail@plt+0xd9a8>
   1ea7c:	b	1ea9c <__assert_fail@plt+0xd9b4>
   1ea80:	ldr	r0, [fp, #8]
   1ea84:	movw	r1, #0
   1ea88:	cmp	r1, r0
   1ea8c:	bge	1ea9c <__assert_fail@plt+0xd9b4>
   1ea90:	movw	r0, #1
   1ea94:	str	r0, [sp, #60]	; 0x3c
   1ea98:	b	1eab4 <__assert_fail@plt+0xd9cc>
   1ea9c:	ldr	r0, [fp, #8]
   1eaa0:	movw	r1, #0
   1eaa4:	sub	r0, r1, r0
   1eaa8:	mvn	r1, #0
   1eaac:	udiv	r0, r1, r0
   1eab0:	str	r0, [sp, #60]	; 0x3c
   1eab4:	ldr	r0, [sp, #60]	; 0x3c
   1eab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eabc:	mvn	r2, #0
   1eac0:	sub	r1, r2, r1
   1eac4:	cmp	r0, r1
   1eac8:	bls	1ebe4 <__assert_fail@plt+0xdafc>
   1eacc:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1ead0:	b	1ead4 <__assert_fail@plt+0xd9ec>
   1ead4:	b	1eb2c <__assert_fail@plt+0xda44>
   1ead8:	b	1eb2c <__assert_fail@plt+0xda44>
   1eadc:	ldr	r0, [fp, #8]
   1eae0:	cmn	r0, #1
   1eae4:	bne	1eb2c <__assert_fail@plt+0xda44>
   1eae8:	b	1eaec <__assert_fail@plt+0xda04>
   1eaec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eaf0:	add	r0, r0, #0
   1eaf4:	movw	r1, #0
   1eaf8:	cmp	r1, r0
   1eafc:	blt	1ebe4 <__assert_fail@plt+0xdafc>
   1eb00:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1eb04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb08:	movw	r1, #0
   1eb0c:	cmp	r1, r0
   1eb10:	bge	1ebf8 <__assert_fail@plt+0xdb10>
   1eb14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb18:	sub	r0, r0, #1
   1eb1c:	mvn	r1, #0
   1eb20:	cmp	r1, r0
   1eb24:	blt	1ebe4 <__assert_fail@plt+0xdafc>
   1eb28:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1eb2c:	ldr	r0, [fp, #8]
   1eb30:	movw	r1, #0
   1eb34:	sdiv	r0, r1, r0
   1eb38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb3c:	cmp	r0, r1
   1eb40:	blt	1ebe4 <__assert_fail@plt+0xdafc>
   1eb44:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1eb48:	ldr	r0, [fp, #8]
   1eb4c:	cmp	r0, #0
   1eb50:	bne	1eb58 <__assert_fail@plt+0xda70>
   1eb54:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1eb58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb5c:	cmp	r0, #0
   1eb60:	bge	1ebcc <__assert_fail@plt+0xdae4>
   1eb64:	b	1eb68 <__assert_fail@plt+0xda80>
   1eb68:	b	1ebb0 <__assert_fail@plt+0xdac8>
   1eb6c:	b	1ebb0 <__assert_fail@plt+0xdac8>
   1eb70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb74:	cmn	r0, #1
   1eb78:	bne	1ebb0 <__assert_fail@plt+0xdac8>
   1eb7c:	b	1eb80 <__assert_fail@plt+0xda98>
   1eb80:	ldr	r0, [fp, #8]
   1eb84:	add	r0, r0, #0
   1eb88:	movw	r1, #0
   1eb8c:	cmp	r1, r0
   1eb90:	blt	1ebe4 <__assert_fail@plt+0xdafc>
   1eb94:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1eb98:	ldr	r0, [fp, #8]
   1eb9c:	sub	r0, r0, #1
   1eba0:	mvn	r1, #0
   1eba4:	cmp	r1, r0
   1eba8:	blt	1ebe4 <__assert_fail@plt+0xdafc>
   1ebac:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1ebb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebb4:	movw	r1, #0
   1ebb8:	sdiv	r0, r1, r0
   1ebbc:	ldr	r1, [fp, #8]
   1ebc0:	cmp	r0, r1
   1ebc4:	blt	1ebe4 <__assert_fail@plt+0xdafc>
   1ebc8:	b	1ebf8 <__assert_fail@plt+0xdb10>
   1ebcc:	ldr	r0, [fp, #8]
   1ebd0:	mvn	r1, #0
   1ebd4:	udiv	r0, r1, r0
   1ebd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ebdc:	cmp	r0, r1
   1ebe0:	bcs	1ebf8 <__assert_fail@plt+0xdb10>
   1ebe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebe8:	ldr	r1, [fp, #8]
   1ebec:	mul	r0, r0, r1
   1ebf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ebf4:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1ebf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebfc:	ldr	r1, [fp, #8]
   1ec00:	mul	r0, r0, r1
   1ec04:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec08:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1ec0c:	b	1ec10 <__assert_fail@plt+0xdb28>
   1ec10:	ldr	r0, [fp, #8]
   1ec14:	cmp	r0, #0
   1ec18:	bge	1ed80 <__assert_fail@plt+0xdc98>
   1ec1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec20:	cmp	r0, #0
   1ec24:	bge	1ecfc <__assert_fail@plt+0xdc14>
   1ec28:	b	1ec2c <__assert_fail@plt+0xdb44>
   1ec2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec30:	ldr	r1, [fp, #8]
   1ec34:	asr	r3, r1, #31
   1ec38:	mvn	r2, #0
   1ec3c:	mvn	ip, #-2147483648	; 0x80000000
   1ec40:	str	r0, [sp, #56]	; 0x38
   1ec44:	mov	r0, r2
   1ec48:	str	r1, [sp, #52]	; 0x34
   1ec4c:	mov	r1, ip
   1ec50:	ldr	r2, [sp, #52]	; 0x34
   1ec54:	bl	21990 <__assert_fail@plt+0x108a8>
   1ec58:	ldr	r2, [sp, #56]	; 0x38
   1ec5c:	subs	r0, r2, r0
   1ec60:	rscs	r1, r1, r2, asr #31
   1ec64:	blt	1ee48 <__assert_fail@plt+0xdd60>
   1ec68:	b	1ee5c <__assert_fail@plt+0xdd74>
   1ec6c:	b	1ec70 <__assert_fail@plt+0xdb88>
   1ec70:	ldr	r0, [pc, #1116]	; 1f0d4 <__assert_fail@plt+0xdfec>
   1ec74:	ldr	r1, [fp, #8]
   1ec78:	cmp	r1, r0
   1ec7c:	blt	1ec94 <__assert_fail@plt+0xdbac>
   1ec80:	b	1eca8 <__assert_fail@plt+0xdbc0>
   1ec84:	ldr	r0, [fp, #8]
   1ec88:	movw	r1, #0
   1ec8c:	cmp	r1, r0
   1ec90:	bge	1eca8 <__assert_fail@plt+0xdbc0>
   1ec94:	mov	r0, #0
   1ec98:	mvn	r1, #0
   1ec9c:	str	r1, [sp, #48]	; 0x30
   1eca0:	str	r0, [sp, #44]	; 0x2c
   1eca4:	b	1ecdc <__assert_fail@plt+0xdbf4>
   1eca8:	ldr	r0, [fp, #8]
   1ecac:	rsb	r0, r0, #0
   1ecb0:	asr	r3, r0, #31
   1ecb4:	mvn	r1, #0
   1ecb8:	mvn	r2, #-2147483648	; 0x80000000
   1ecbc:	str	r0, [sp, #40]	; 0x28
   1ecc0:	mov	r0, r1
   1ecc4:	mov	r1, r2
   1ecc8:	ldr	r2, [sp, #40]	; 0x28
   1eccc:	bl	21990 <__assert_fail@plt+0x108a8>
   1ecd0:	str	r0, [sp, #48]	; 0x30
   1ecd4:	str	r1, [sp, #44]	; 0x2c
   1ecd8:	b	1ecdc <__assert_fail@plt+0xdbf4>
   1ecdc:	ldr	r0, [sp, #44]	; 0x2c
   1ece0:	ldr	r1, [sp, #48]	; 0x30
   1ece4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ece8:	mvn	r2, r2
   1ecec:	subs	r1, r2, r1
   1ecf0:	rscs	r0, r0, r2, asr #31
   1ecf4:	bge	1ee48 <__assert_fail@plt+0xdd60>
   1ecf8:	b	1ee5c <__assert_fail@plt+0xdd74>
   1ecfc:	ldr	r0, [fp, #8]
   1ed00:	cmn	r0, #1
   1ed04:	bne	1ed48 <__assert_fail@plt+0xdc60>
   1ed08:	b	1ed0c <__assert_fail@plt+0xdc24>
   1ed0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed10:	mov	r1, #-2147483648	; 0x80000000
   1ed14:	add	r1, r1, r0, asr #31
   1ed18:	rsbs	r0, r0, #0
   1ed1c:	rscs	r1, r1, #0
   1ed20:	blt	1ee48 <__assert_fail@plt+0xdd60>
   1ed24:	b	1ee5c <__assert_fail@plt+0xdd74>
   1ed28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed2c:	movw	r1, #0
   1ed30:	cmp	r1, r0
   1ed34:	bge	1ee5c <__assert_fail@plt+0xdd74>
   1ed38:	mov	r0, #0
   1ed3c:	cmp	r0, #0
   1ed40:	bne	1ee48 <__assert_fail@plt+0xdd60>
   1ed44:	b	1ee5c <__assert_fail@plt+0xdd74>
   1ed48:	ldr	r0, [fp, #8]
   1ed4c:	asr	r3, r0, #31
   1ed50:	mov	r1, #0
   1ed54:	mov	r2, #-2147483648	; 0x80000000
   1ed58:	str	r0, [sp, #36]	; 0x24
   1ed5c:	mov	r0, r1
   1ed60:	mov	r1, r2
   1ed64:	ldr	r2, [sp, #36]	; 0x24
   1ed68:	bl	21990 <__assert_fail@plt+0x108a8>
   1ed6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed70:	subs	r0, r0, r2
   1ed74:	sbcs	r1, r1, r2, asr #31
   1ed78:	blt	1ee48 <__assert_fail@plt+0xdd60>
   1ed7c:	b	1ee5c <__assert_fail@plt+0xdd74>
   1ed80:	ldr	r0, [fp, #8]
   1ed84:	cmp	r0, #0
   1ed88:	bne	1ed90 <__assert_fail@plt+0xdca8>
   1ed8c:	b	1ee5c <__assert_fail@plt+0xdd74>
   1ed90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed94:	cmp	r0, #0
   1ed98:	bge	1ee10 <__assert_fail@plt+0xdd28>
   1ed9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eda0:	cmn	r0, #1
   1eda4:	bne	1edd8 <__assert_fail@plt+0xdcf0>
   1eda8:	b	1edac <__assert_fail@plt+0xdcc4>
   1edac:	ldr	r0, [fp, #8]
   1edb0:	mov	r1, #-2147483648	; 0x80000000
   1edb4:	add	r1, r1, r0, asr #31
   1edb8:	rsbs	r0, r0, #0
   1edbc:	rscs	r1, r1, #0
   1edc0:	blt	1ee48 <__assert_fail@plt+0xdd60>
   1edc4:	b	1ee5c <__assert_fail@plt+0xdd74>
   1edc8:	mov	r0, #0
   1edcc:	cmp	r0, #0
   1edd0:	bne	1ee48 <__assert_fail@plt+0xdd60>
   1edd4:	b	1ee5c <__assert_fail@plt+0xdd74>
   1edd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eddc:	asr	r3, r0, #31
   1ede0:	mov	r1, #0
   1ede4:	mov	r2, #-2147483648	; 0x80000000
   1ede8:	str	r0, [sp, #32]
   1edec:	mov	r0, r1
   1edf0:	mov	r1, r2
   1edf4:	ldr	r2, [sp, #32]
   1edf8:	bl	21990 <__assert_fail@plt+0x108a8>
   1edfc:	ldr	r2, [fp, #8]
   1ee00:	subs	r0, r0, r2
   1ee04:	sbcs	r1, r1, r2, asr #31
   1ee08:	blt	1ee48 <__assert_fail@plt+0xdd60>
   1ee0c:	b	1ee5c <__assert_fail@plt+0xdd74>
   1ee10:	ldr	r0, [fp, #8]
   1ee14:	asr	r3, r0, #31
   1ee18:	mvn	r1, #0
   1ee1c:	mvn	r2, #-2147483648	; 0x80000000
   1ee20:	str	r0, [sp, #28]
   1ee24:	mov	r0, r1
   1ee28:	mov	r1, r2
   1ee2c:	ldr	r2, [sp, #28]
   1ee30:	bl	21990 <__assert_fail@plt+0x108a8>
   1ee34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ee38:	subs	r0, r0, r2
   1ee3c:	sbcs	r1, r1, r2, asr #31
   1ee40:	bge	1ee5c <__assert_fail@plt+0xdd74>
   1ee44:	b	1ee48 <__assert_fail@plt+0xdd60>
   1ee48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee4c:	ldr	r1, [fp, #8]
   1ee50:	mul	r0, r0, r1
   1ee54:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee58:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1ee5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee60:	ldr	r1, [fp, #8]
   1ee64:	mul	r0, r0, r1
   1ee68:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee6c:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1ee70:	ldr	r0, [fp, #8]
   1ee74:	cmp	r0, #0
   1ee78:	bge	1efc8 <__assert_fail@plt+0xdee0>
   1ee7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee80:	cmp	r0, #0
   1ee84:	bge	1ef50 <__assert_fail@plt+0xde68>
   1ee88:	b	1eec8 <__assert_fail@plt+0xdde0>
   1ee8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee90:	ldr	r1, [fp, #8]
   1ee94:	asr	r3, r1, #31
   1ee98:	mvn	r2, #0
   1ee9c:	str	r0, [sp, #24]
   1eea0:	mov	r0, r2
   1eea4:	str	r1, [sp, #20]
   1eea8:	mov	r1, r2
   1eeac:	ldr	r2, [sp, #20]
   1eeb0:	bl	21a64 <__assert_fail@plt+0x1097c>
   1eeb4:	ldr	r2, [sp, #24]
   1eeb8:	subs	r0, r2, r0
   1eebc:	rscs	r1, r1, r2, asr #31
   1eec0:	bcc	1f07c <__assert_fail@plt+0xdf94>
   1eec4:	b	1f090 <__assert_fail@plt+0xdfa8>
   1eec8:	b	1eecc <__assert_fail@plt+0xdde4>
   1eecc:	ldr	r0, [pc, #512]	; 1f0d4 <__assert_fail@plt+0xdfec>
   1eed0:	ldr	r1, [fp, #8]
   1eed4:	cmp	r1, r0
   1eed8:	blt	1eef0 <__assert_fail@plt+0xde08>
   1eedc:	b	1ef04 <__assert_fail@plt+0xde1c>
   1eee0:	ldr	r0, [fp, #8]
   1eee4:	movw	r1, #0
   1eee8:	cmp	r1, r0
   1eeec:	bge	1ef04 <__assert_fail@plt+0xde1c>
   1eef0:	mov	r0, #1
   1eef4:	mvn	r1, #0
   1eef8:	str	r1, [sp, #16]
   1eefc:	str	r0, [sp, #12]
   1ef00:	b	1ef30 <__assert_fail@plt+0xde48>
   1ef04:	ldr	r0, [fp, #8]
   1ef08:	rsb	r0, r0, #0
   1ef0c:	asr	r3, r0, #31
   1ef10:	mvn	r1, #0
   1ef14:	str	r0, [sp, #8]
   1ef18:	mov	r0, r1
   1ef1c:	ldr	r2, [sp, #8]
   1ef20:	bl	21a64 <__assert_fail@plt+0x1097c>
   1ef24:	str	r0, [sp, #16]
   1ef28:	str	r1, [sp, #12]
   1ef2c:	b	1ef30 <__assert_fail@plt+0xde48>
   1ef30:	ldr	r0, [sp, #12]
   1ef34:	ldr	r1, [sp, #16]
   1ef38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ef3c:	mvn	r2, r2
   1ef40:	subs	r1, r2, r1
   1ef44:	rscs	r0, r0, r2, asr #31
   1ef48:	bcs	1f07c <__assert_fail@plt+0xdf94>
   1ef4c:	b	1f090 <__assert_fail@plt+0xdfa8>
   1ef50:	b	1ef54 <__assert_fail@plt+0xde6c>
   1ef54:	b	1efac <__assert_fail@plt+0xdec4>
   1ef58:	b	1efac <__assert_fail@plt+0xdec4>
   1ef5c:	ldr	r0, [fp, #8]
   1ef60:	cmn	r0, #1
   1ef64:	bne	1efac <__assert_fail@plt+0xdec4>
   1ef68:	b	1ef6c <__assert_fail@plt+0xde84>
   1ef6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef70:	add	r0, r0, #0
   1ef74:	movw	r1, #0
   1ef78:	cmp	r1, r0
   1ef7c:	blt	1f07c <__assert_fail@plt+0xdf94>
   1ef80:	b	1f090 <__assert_fail@plt+0xdfa8>
   1ef84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef88:	movw	r1, #0
   1ef8c:	cmp	r1, r0
   1ef90:	bge	1f090 <__assert_fail@plt+0xdfa8>
   1ef94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef98:	sub	r0, r0, #1
   1ef9c:	mvn	r1, #0
   1efa0:	cmp	r1, r0
   1efa4:	blt	1f07c <__assert_fail@plt+0xdf94>
   1efa8:	b	1f090 <__assert_fail@plt+0xdfa8>
   1efac:	ldr	r0, [fp, #8]
   1efb0:	movw	r1, #0
   1efb4:	sdiv	r0, r1, r0
   1efb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1efbc:	cmp	r0, r1
   1efc0:	blt	1f07c <__assert_fail@plt+0xdf94>
   1efc4:	b	1f090 <__assert_fail@plt+0xdfa8>
   1efc8:	ldr	r0, [fp, #8]
   1efcc:	cmp	r0, #0
   1efd0:	bne	1efd8 <__assert_fail@plt+0xdef0>
   1efd4:	b	1f090 <__assert_fail@plt+0xdfa8>
   1efd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efdc:	cmp	r0, #0
   1efe0:	bge	1f04c <__assert_fail@plt+0xdf64>
   1efe4:	b	1efe8 <__assert_fail@plt+0xdf00>
   1efe8:	b	1f030 <__assert_fail@plt+0xdf48>
   1efec:	b	1f030 <__assert_fail@plt+0xdf48>
   1eff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eff4:	cmn	r0, #1
   1eff8:	bne	1f030 <__assert_fail@plt+0xdf48>
   1effc:	b	1f000 <__assert_fail@plt+0xdf18>
   1f000:	ldr	r0, [fp, #8]
   1f004:	add	r0, r0, #0
   1f008:	movw	r1, #0
   1f00c:	cmp	r1, r0
   1f010:	blt	1f07c <__assert_fail@plt+0xdf94>
   1f014:	b	1f090 <__assert_fail@plt+0xdfa8>
   1f018:	ldr	r0, [fp, #8]
   1f01c:	sub	r0, r0, #1
   1f020:	mvn	r1, #0
   1f024:	cmp	r1, r0
   1f028:	blt	1f07c <__assert_fail@plt+0xdf94>
   1f02c:	b	1f090 <__assert_fail@plt+0xdfa8>
   1f030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f034:	movw	r1, #0
   1f038:	sdiv	r0, r1, r0
   1f03c:	ldr	r1, [fp, #8]
   1f040:	cmp	r0, r1
   1f044:	blt	1f07c <__assert_fail@plt+0xdf94>
   1f048:	b	1f090 <__assert_fail@plt+0xdfa8>
   1f04c:	ldr	r0, [fp, #8]
   1f050:	asr	r3, r0, #31
   1f054:	mvn	r1, #0
   1f058:	str	r0, [sp, #4]
   1f05c:	mov	r0, r1
   1f060:	ldr	r2, [sp, #4]
   1f064:	bl	21a64 <__assert_fail@plt+0x1097c>
   1f068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f06c:	subs	r0, r0, r2
   1f070:	sbcs	r1, r1, r2, asr #31
   1f074:	bcs	1f090 <__assert_fail@plt+0xdfa8>
   1f078:	b	1f07c <__assert_fail@plt+0xdf94>
   1f07c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f080:	ldr	r1, [fp, #8]
   1f084:	mul	r0, r0, r1
   1f088:	str	r0, [fp, #-28]	; 0xffffffe4
   1f08c:	b	1f0a4 <__assert_fail@plt+0xdfbc>
   1f090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f094:	ldr	r1, [fp, #8]
   1f098:	mul	r0, r0, r1
   1f09c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f0a0:	b	1f0a8 <__assert_fail@plt+0xdfc0>
   1f0a4:	bl	1f280 <__assert_fail@plt+0xe198>
   1f0a8:	ldr	r0, [fp, #-4]
   1f0ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f0b0:	bl	1c5e0 <__assert_fail@plt+0xb4f8>
   1f0b4:	str	r0, [fp, #-4]
   1f0b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0bc:	ldr	r1, [fp, #-8]
   1f0c0:	str	r0, [r1]
   1f0c4:	ldr	r0, [fp, #-4]
   1f0c8:	mov	sp, fp
   1f0cc:	pop	{fp, pc}
   1f0d0:	svcvc	0x00ffffff
   1f0d4:	andhi	r0, r0, r1
   1f0d8:	andhi	r0, r0, r0
   1f0dc:			; <UNDEFINED> instruction: 0xffff8000
   1f0e0:	push	{fp, lr}
   1f0e4:	mov	fp, sp
   1f0e8:	sub	sp, sp, #8
   1f0ec:	str	r0, [sp, #4]
   1f0f0:	ldr	r0, [sp, #4]
   1f0f4:	movw	r1, #1
   1f0f8:	bl	1f104 <__assert_fail@plt+0xe01c>
   1f0fc:	mov	sp, fp
   1f100:	pop	{fp, pc}
   1f104:	push	{fp, lr}
   1f108:	mov	fp, sp
   1f10c:	sub	sp, sp, #8
   1f110:	str	r0, [sp, #4]
   1f114:	str	r1, [sp]
   1f118:	ldr	r0, [sp, #4]
   1f11c:	ldr	r1, [sp]
   1f120:	bl	21314 <__assert_fail@plt+0x1022c>
   1f124:	bl	1c56c <__assert_fail@plt+0xb484>
   1f128:	mov	sp, fp
   1f12c:	pop	{fp, pc}
   1f130:	push	{fp, lr}
   1f134:	mov	fp, sp
   1f138:	sub	sp, sp, #8
   1f13c:	str	r0, [sp, #4]
   1f140:	ldr	r0, [sp, #4]
   1f144:	movw	r1, #1
   1f148:	bl	1f154 <__assert_fail@plt+0xe06c>
   1f14c:	mov	sp, fp
   1f150:	pop	{fp, pc}
   1f154:	push	{fp, lr}
   1f158:	mov	fp, sp
   1f15c:	sub	sp, sp, #8
   1f160:	str	r0, [sp, #4]
   1f164:	str	r1, [sp]
   1f168:	ldr	r0, [sp, #4]
   1f16c:	ldr	r1, [sp]
   1f170:	bl	18098 <__assert_fail@plt+0x6fb0>
   1f174:	bl	1c56c <__assert_fail@plt+0xb484>
   1f178:	mov	sp, fp
   1f17c:	pop	{fp, pc}
   1f180:	push	{fp, lr}
   1f184:	mov	fp, sp
   1f188:	sub	sp, sp, #16
   1f18c:	str	r0, [fp, #-4]
   1f190:	str	r1, [sp, #8]
   1f194:	ldr	r0, [sp, #8]
   1f198:	bl	1c548 <__assert_fail@plt+0xb460>
   1f19c:	ldr	r1, [fp, #-4]
   1f1a0:	ldr	r2, [sp, #8]
   1f1a4:	str	r0, [sp, #4]
   1f1a8:	bl	10ee4 <memcpy@plt>
   1f1ac:	ldr	r0, [sp, #4]
   1f1b0:	mov	sp, fp
   1f1b4:	pop	{fp, pc}
   1f1b8:	push	{fp, lr}
   1f1bc:	mov	fp, sp
   1f1c0:	sub	sp, sp, #16
   1f1c4:	str	r0, [fp, #-4]
   1f1c8:	str	r1, [sp, #8]
   1f1cc:	ldr	r0, [sp, #8]
   1f1d0:	bl	1c59c <__assert_fail@plt+0xb4b4>
   1f1d4:	ldr	r1, [fp, #-4]
   1f1d8:	ldr	r2, [sp, #8]
   1f1dc:	str	r0, [sp, #4]
   1f1e0:	bl	10ee4 <memcpy@plt>
   1f1e4:	ldr	r0, [sp, #4]
   1f1e8:	mov	sp, fp
   1f1ec:	pop	{fp, pc}
   1f1f0:	push	{fp, lr}
   1f1f4:	mov	fp, sp
   1f1f8:	sub	sp, sp, #16
   1f1fc:	str	r0, [fp, #-4]
   1f200:	str	r1, [sp, #8]
   1f204:	ldr	r0, [sp, #8]
   1f208:	add	r0, r0, #1
   1f20c:	bl	1c59c <__assert_fail@plt+0xb4b4>
   1f210:	str	r0, [sp, #4]
   1f214:	ldr	r0, [sp, #4]
   1f218:	ldr	r1, [sp, #8]
   1f21c:	add	r0, r0, r1
   1f220:	movw	r1, #0
   1f224:	strb	r1, [r0]
   1f228:	ldr	r0, [sp, #4]
   1f22c:	ldr	r1, [fp, #-4]
   1f230:	ldr	r2, [sp, #8]
   1f234:	str	r0, [sp]
   1f238:	bl	10ee4 <memcpy@plt>
   1f23c:	ldr	r0, [sp]
   1f240:	mov	sp, fp
   1f244:	pop	{fp, pc}
   1f248:	push	{fp, lr}
   1f24c:	mov	fp, sp
   1f250:	sub	sp, sp, #8
   1f254:	str	r0, [sp, #4]
   1f258:	ldr	r0, [sp, #4]
   1f25c:	ldr	r1, [sp, #4]
   1f260:	str	r0, [sp]
   1f264:	mov	r0, r1
   1f268:	bl	10fec <strlen@plt>
   1f26c:	add	r1, r0, #1
   1f270:	ldr	r0, [sp]
   1f274:	bl	1f180 <__assert_fail@plt+0xe098>
   1f278:	mov	sp, fp
   1f27c:	pop	{fp, pc}
   1f280:	push	{fp, lr}
   1f284:	mov	fp, sp
   1f288:	sub	sp, sp, #8
   1f28c:	movw	r0, #12532	; 0x30f4
   1f290:	movt	r0, #3
   1f294:	ldr	r0, [r0]
   1f298:	movw	r1, #11832	; 0x2e38
   1f29c:	movt	r1, #2
   1f2a0:	str	r0, [sp, #4]
   1f2a4:	mov	r0, r1
   1f2a8:	bl	10fe0 <gettext@plt>
   1f2ac:	ldr	r1, [sp, #4]
   1f2b0:	str	r0, [sp]
   1f2b4:	mov	r0, r1
   1f2b8:	movw	r1, #0
   1f2bc:	movw	r2, #8696	; 0x21f8
   1f2c0:	movt	r2, #2
   1f2c4:	ldr	r3, [sp]
   1f2c8:	bl	10f80 <error@plt>
   1f2cc:	bl	110d0 <abort@plt>
   1f2d0:	bx	lr
   1f2d4:	push	{fp, lr}
   1f2d8:	mov	fp, sp
   1f2dc:	sub	sp, sp, #8
   1f2e0:	str	r0, [sp, #4]
   1f2e4:	str	r1, [sp]
   1f2e8:	ldr	r0, [sp, #4]
   1f2ec:	ldr	r1, [sp]
   1f2f0:	bl	214dc <__assert_fail@plt+0x103f4>
   1f2f4:	cmp	r0, #0
   1f2f8:	bge	1f300 <__assert_fail@plt+0xe218>
   1f2fc:	bl	1f2d0 <__assert_fail@plt+0xe1e8>
   1f300:	mov	sp, fp
   1f304:	pop	{fp, pc}
   1f308:	push	{fp, lr}
   1f30c:	mov	fp, sp
   1f310:	sub	sp, sp, #72	; 0x48
   1f314:	ldr	ip, [fp, #8]
   1f318:	str	r0, [fp, #-8]
   1f31c:	str	r1, [fp, #-12]
   1f320:	str	r2, [fp, #-16]
   1f324:	str	r3, [fp, #-20]	; 0xffffffec
   1f328:	movw	r0, #0
   1f32c:	str	r0, [sp, #28]
   1f330:	ldr	r1, [fp, #-16]
   1f334:	cmp	r0, r1
   1f338:	bgt	1f34c <__assert_fail@plt+0xe264>
   1f33c:	ldr	r0, [fp, #-16]
   1f340:	cmp	r0, #36	; 0x24
   1f344:	bgt	1f34c <__assert_fail@plt+0xe264>
   1f348:	b	1f36c <__assert_fail@plt+0xe284>
   1f34c:	movw	r0, #11849	; 0x2e49
   1f350:	movt	r0, #2
   1f354:	movw	r1, #11887	; 0x2e6f
   1f358:	movt	r1, #2
   1f35c:	movw	r2, #85	; 0x55
   1f360:	movw	r3, #11903	; 0x2e7f
   1f364:	movt	r3, #2
   1f368:	bl	110e8 <__assert_fail@plt>
   1f36c:	ldr	r0, [fp, #-12]
   1f370:	movw	r1, #0
   1f374:	cmp	r0, r1
   1f378:	beq	1f388 <__assert_fail@plt+0xe2a0>
   1f37c:	ldr	r0, [fp, #-12]
   1f380:	str	r0, [sp, #12]
   1f384:	b	1f394 <__assert_fail@plt+0xe2ac>
   1f388:	sub	r0, fp, #24
   1f38c:	str	r0, [sp, #12]
   1f390:	b	1f394 <__assert_fail@plt+0xe2ac>
   1f394:	ldr	r0, [sp, #12]
   1f398:	str	r0, [fp, #-28]	; 0xffffffe4
   1f39c:	bl	11010 <__errno_location@plt>
   1f3a0:	mov	r1, #0
   1f3a4:	str	r1, [r0]
   1f3a8:	ldr	r0, [fp, #-8]
   1f3ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f3b0:	ldr	r2, [fp, #-16]
   1f3b4:	bl	1104c <strtoimax@plt>
   1f3b8:	str	r1, [sp, #36]	; 0x24
   1f3bc:	str	r0, [sp, #32]
   1f3c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f3c4:	ldr	r0, [r0]
   1f3c8:	ldr	r1, [fp, #-8]
   1f3cc:	cmp	r0, r1
   1f3d0:	bne	1f43c <__assert_fail@plt+0xe354>
   1f3d4:	ldr	r0, [fp, #8]
   1f3d8:	movw	r1, #0
   1f3dc:	cmp	r0, r1
   1f3e0:	beq	1f42c <__assert_fail@plt+0xe344>
   1f3e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f3e8:	ldr	r0, [r0]
   1f3ec:	ldrb	r0, [r0]
   1f3f0:	cmp	r0, #0
   1f3f4:	beq	1f42c <__assert_fail@plt+0xe344>
   1f3f8:	ldr	r0, [fp, #8]
   1f3fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f400:	ldr	r1, [r1]
   1f404:	ldrb	r1, [r1]
   1f408:	bl	10ff8 <strchr@plt>
   1f40c:	movw	r1, #0
   1f410:	cmp	r0, r1
   1f414:	beq	1f42c <__assert_fail@plt+0xe344>
   1f418:	mov	r0, #0
   1f41c:	str	r0, [sp, #36]	; 0x24
   1f420:	mov	r0, #1
   1f424:	str	r0, [sp, #32]
   1f428:	b	1f438 <__assert_fail@plt+0xe350>
   1f42c:	movw	r0, #4
   1f430:	str	r0, [fp, #-4]
   1f434:	b	1f924 <__assert_fail@plt+0xe83c>
   1f438:	b	1f474 <__assert_fail@plt+0xe38c>
   1f43c:	bl	11010 <__errno_location@plt>
   1f440:	ldr	r0, [r0]
   1f444:	cmp	r0, #0
   1f448:	beq	1f470 <__assert_fail@plt+0xe388>
   1f44c:	bl	11010 <__errno_location@plt>
   1f450:	ldr	r0, [r0]
   1f454:	cmp	r0, #34	; 0x22
   1f458:	beq	1f468 <__assert_fail@plt+0xe380>
   1f45c:	movw	r0, #4
   1f460:	str	r0, [fp, #-4]
   1f464:	b	1f924 <__assert_fail@plt+0xe83c>
   1f468:	movw	r0, #1
   1f46c:	str	r0, [sp, #28]
   1f470:	b	1f474 <__assert_fail@plt+0xe38c>
   1f474:	ldr	r0, [fp, #8]
   1f478:	movw	r1, #0
   1f47c:	cmp	r0, r1
   1f480:	bne	1f4a4 <__assert_fail@plt+0xe3bc>
   1f484:	ldr	r0, [sp, #32]
   1f488:	ldr	r1, [sp, #36]	; 0x24
   1f48c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f490:	str	r1, [r2, #4]
   1f494:	str	r0, [r2]
   1f498:	ldr	r0, [sp, #28]
   1f49c:	str	r0, [fp, #-4]
   1f4a0:	b	1f924 <__assert_fail@plt+0xe83c>
   1f4a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f4a8:	ldr	r0, [r0]
   1f4ac:	ldrb	r0, [r0]
   1f4b0:	cmp	r0, #0
   1f4b4:	beq	1f908 <__assert_fail@plt+0xe820>
   1f4b8:	movw	r0, #1024	; 0x400
   1f4bc:	str	r0, [sp, #24]
   1f4c0:	movw	r0, #1
   1f4c4:	str	r0, [sp, #20]
   1f4c8:	ldr	r0, [fp, #8]
   1f4cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f4d0:	ldr	r1, [r1]
   1f4d4:	ldrb	r1, [r1]
   1f4d8:	bl	10ff8 <strchr@plt>
   1f4dc:	movw	r1, #0
   1f4e0:	cmp	r0, r1
   1f4e4:	bne	1f50c <__assert_fail@plt+0xe424>
   1f4e8:	ldr	r0, [sp, #32]
   1f4ec:	ldr	r1, [sp, #36]	; 0x24
   1f4f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f4f4:	str	r1, [r2, #4]
   1f4f8:	str	r0, [r2]
   1f4fc:	ldr	r0, [sp, #28]
   1f500:	orr	r0, r0, #2
   1f504:	str	r0, [fp, #-4]
   1f508:	b	1f924 <__assert_fail@plt+0xe83c>
   1f50c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f510:	ldr	r0, [r0]
   1f514:	ldrb	r0, [r0]
   1f518:	sub	r0, r0, #69	; 0x45
   1f51c:	cmp	r0, #47	; 0x2f
   1f520:	str	r0, [sp, #8]
   1f524:	bhi	1f690 <__assert_fail@plt+0xe5a8>
   1f528:	add	r0, pc, #8
   1f52c:	ldr	r1, [sp, #8]
   1f530:	ldr	r0, [r0, r1, lsl #2]
   1f534:	mov	pc, r0
   1f538:	strdeq	pc, [r1], -r8
   1f53c:	muleq	r1, r0, r6
   1f540:	strdeq	pc, [r1], -r8
   1f544:	muleq	r1, r0, r6
   1f548:	muleq	r1, r0, r6
   1f54c:	muleq	r1, r0, r6
   1f550:	strdeq	pc, [r1], -r8
   1f554:	muleq	r1, r0, r6
   1f558:	strdeq	pc, [r1], -r8
   1f55c:	muleq	r1, r0, r6
   1f560:	muleq	r1, r0, r6
   1f564:	strdeq	pc, [r1], -r8
   1f568:	muleq	r1, r0, r6
   1f56c:	muleq	r1, r0, r6
   1f570:	muleq	r1, r0, r6
   1f574:	strdeq	pc, [r1], -r8
   1f578:	muleq	r1, r0, r6
   1f57c:	muleq	r1, r0, r6
   1f580:	muleq	r1, r0, r6
   1f584:	muleq	r1, r0, r6
   1f588:	strdeq	pc, [r1], -r8
   1f58c:	strdeq	pc, [r1], -r8
   1f590:	muleq	r1, r0, r6
   1f594:	muleq	r1, r0, r6
   1f598:	muleq	r1, r0, r6
   1f59c:	muleq	r1, r0, r6
   1f5a0:	muleq	r1, r0, r6
   1f5a4:	muleq	r1, r0, r6
   1f5a8:	muleq	r1, r0, r6
   1f5ac:	muleq	r1, r0, r6
   1f5b0:	muleq	r1, r0, r6
   1f5b4:	muleq	r1, r0, r6
   1f5b8:	muleq	r1, r0, r6
   1f5bc:	muleq	r1, r0, r6
   1f5c0:	strdeq	pc, [r1], -r8
   1f5c4:	muleq	r1, r0, r6
   1f5c8:	muleq	r1, r0, r6
   1f5cc:	muleq	r1, r0, r6
   1f5d0:	strdeq	pc, [r1], -r8
   1f5d4:	muleq	r1, r0, r6
   1f5d8:	strdeq	pc, [r1], -r8
   1f5dc:	muleq	r1, r0, r6
   1f5e0:	muleq	r1, r0, r6
   1f5e4:	muleq	r1, r0, r6
   1f5e8:	muleq	r1, r0, r6
   1f5ec:	muleq	r1, r0, r6
   1f5f0:	muleq	r1, r0, r6
   1f5f4:	strdeq	pc, [r1], -r8
   1f5f8:	ldr	r0, [fp, #8]
   1f5fc:	movw	r1, #48	; 0x30
   1f600:	bl	10ff8 <strchr@plt>
   1f604:	movw	r1, #0
   1f608:	cmp	r0, r1
   1f60c:	beq	1f68c <__assert_fail@plt+0xe5a4>
   1f610:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f614:	ldr	r0, [r0]
   1f618:	ldrb	r0, [r0, #1]
   1f61c:	mov	r1, r0
   1f620:	cmp	r0, #66	; 0x42
   1f624:	str	r1, [sp, #4]
   1f628:	beq	1f674 <__assert_fail@plt+0xe58c>
   1f62c:	b	1f630 <__assert_fail@plt+0xe548>
   1f630:	ldr	r0, [sp, #4]
   1f634:	cmp	r0, #68	; 0x44
   1f638:	beq	1f674 <__assert_fail@plt+0xe58c>
   1f63c:	b	1f640 <__assert_fail@plt+0xe558>
   1f640:	ldr	r0, [sp, #4]
   1f644:	cmp	r0, #105	; 0x69
   1f648:	bne	1f688 <__assert_fail@plt+0xe5a0>
   1f64c:	b	1f650 <__assert_fail@plt+0xe568>
   1f650:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f654:	ldr	r0, [r0]
   1f658:	ldrb	r0, [r0, #2]
   1f65c:	cmp	r0, #66	; 0x42
   1f660:	bne	1f670 <__assert_fail@plt+0xe588>
   1f664:	ldr	r0, [sp, #20]
   1f668:	add	r0, r0, #2
   1f66c:	str	r0, [sp, #20]
   1f670:	b	1f688 <__assert_fail@plt+0xe5a0>
   1f674:	movw	r0, #1000	; 0x3e8
   1f678:	str	r0, [sp, #24]
   1f67c:	ldr	r0, [sp, #20]
   1f680:	add	r0, r0, #1
   1f684:	str	r0, [sp, #20]
   1f688:	b	1f68c <__assert_fail@plt+0xe5a4>
   1f68c:	b	1f690 <__assert_fail@plt+0xe5a8>
   1f690:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f694:	ldr	r0, [r0]
   1f698:	ldrb	r0, [r0]
   1f69c:	sub	r0, r0, #66	; 0x42
   1f6a0:	cmp	r0, #53	; 0x35
   1f6a4:	str	r0, [sp]
   1f6a8:	bhi	1f89c <__assert_fail@plt+0xe7b4>
   1f6ac:	add	r0, pc, #8
   1f6b0:	ldr	r1, [sp]
   1f6b4:	ldr	r0, [r0, r1, lsl #2]
   1f6b8:	mov	pc, r0
   1f6bc:	andeq	pc, r1, r8, lsr #15
   1f6c0:	muleq	r1, ip, r8
   1f6c4:	muleq	r1, ip, r8
   1f6c8:	andeq	pc, r1, r8, asr #15
   1f6cc:	muleq	r1, ip, r8
   1f6d0:	andeq	pc, r1, r0, ror #15
   1f6d4:	muleq	r1, ip, r8
   1f6d8:	muleq	r1, ip, r8
   1f6dc:	muleq	r1, ip, r8
   1f6e0:	strdeq	pc, [r1], -r8
   1f6e4:	muleq	r1, ip, r8
   1f6e8:	andeq	pc, r1, r0, lsl r8	; <UNPREDICTABLE>
   1f6ec:	muleq	r1, ip, r8
   1f6f0:	muleq	r1, ip, r8
   1f6f4:	andeq	pc, r1, r8, lsr #16
   1f6f8:	muleq	r1, ip, r8
   1f6fc:	muleq	r1, ip, r8
   1f700:	muleq	r1, ip, r8
   1f704:	andeq	pc, r1, r0, asr #16
   1f708:	muleq	r1, ip, r8
   1f70c:	muleq	r1, ip, r8
   1f710:	muleq	r1, ip, r8
   1f714:	muleq	r1, ip, r8
   1f718:	andeq	pc, r1, ip, ror #16
   1f71c:	andeq	pc, r1, r4, lsl #17
   1f720:	muleq	r1, ip, r8
   1f724:	muleq	r1, ip, r8
   1f728:	muleq	r1, ip, r8
   1f72c:	muleq	r1, ip, r8
   1f730:	muleq	r1, ip, r8
   1f734:	muleq	r1, ip, r8
   1f738:	muleq	r1, ip, r8
   1f73c:	muleq	r1, r4, r7
   1f740:			; <UNDEFINED> instruction: 0x0001f7bc
   1f744:	muleq	r1, ip, r8
   1f748:	muleq	r1, ip, r8
   1f74c:	muleq	r1, ip, r8
   1f750:	andeq	pc, r1, r0, ror #15
   1f754:	muleq	r1, ip, r8
   1f758:	muleq	r1, ip, r8
   1f75c:	muleq	r1, ip, r8
   1f760:	strdeq	pc, [r1], -r8
   1f764:	muleq	r1, ip, r8
   1f768:	andeq	pc, r1, r0, lsl r8	; <UNPREDICTABLE>
   1f76c:	muleq	r1, ip, r8
   1f770:	muleq	r1, ip, r8
   1f774:	muleq	r1, ip, r8
   1f778:	muleq	r1, ip, r8
   1f77c:	muleq	r1, ip, r8
   1f780:	muleq	r1, ip, r8
   1f784:	andeq	pc, r1, r0, asr #16
   1f788:	muleq	r1, ip, r8
   1f78c:	muleq	r1, ip, r8
   1f790:	andeq	pc, r1, r8, asr r8	; <UNPREDICTABLE>
   1f794:	add	r0, sp, #32
   1f798:	movw	r1, #512	; 0x200
   1f79c:	bl	1f930 <__assert_fail@plt+0xe848>
   1f7a0:	str	r0, [sp, #16]
   1f7a4:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f7a8:	add	r0, sp, #32
   1f7ac:	movw	r1, #1024	; 0x400
   1f7b0:	bl	1f930 <__assert_fail@plt+0xe848>
   1f7b4:	str	r0, [sp, #16]
   1f7b8:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f7bc:	movw	r0, #0
   1f7c0:	str	r0, [sp, #16]
   1f7c4:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f7c8:	ldr	r1, [sp, #24]
   1f7cc:	add	r0, sp, #32
   1f7d0:	movw	r2, #6
   1f7d4:	bl	212b4 <__assert_fail@plt+0x101cc>
   1f7d8:	str	r0, [sp, #16]
   1f7dc:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f7e0:	ldr	r1, [sp, #24]
   1f7e4:	add	r0, sp, #32
   1f7e8:	movw	r2, #3
   1f7ec:	bl	212b4 <__assert_fail@plt+0x101cc>
   1f7f0:	str	r0, [sp, #16]
   1f7f4:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f7f8:	ldr	r1, [sp, #24]
   1f7fc:	add	r0, sp, #32
   1f800:	movw	r2, #1
   1f804:	bl	212b4 <__assert_fail@plt+0x101cc>
   1f808:	str	r0, [sp, #16]
   1f80c:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f810:	ldr	r1, [sp, #24]
   1f814:	add	r0, sp, #32
   1f818:	movw	r2, #2
   1f81c:	bl	212b4 <__assert_fail@plt+0x101cc>
   1f820:	str	r0, [sp, #16]
   1f824:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f828:	ldr	r1, [sp, #24]
   1f82c:	add	r0, sp, #32
   1f830:	movw	r2, #5
   1f834:	bl	212b4 <__assert_fail@plt+0x101cc>
   1f838:	str	r0, [sp, #16]
   1f83c:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f840:	ldr	r1, [sp, #24]
   1f844:	add	r0, sp, #32
   1f848:	movw	r2, #4
   1f84c:	bl	212b4 <__assert_fail@plt+0x101cc>
   1f850:	str	r0, [sp, #16]
   1f854:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f858:	add	r0, sp, #32
   1f85c:	movw	r1, #2
   1f860:	bl	1f930 <__assert_fail@plt+0xe848>
   1f864:	str	r0, [sp, #16]
   1f868:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f86c:	ldr	r1, [sp, #24]
   1f870:	add	r0, sp, #32
   1f874:	movw	r2, #8
   1f878:	bl	212b4 <__assert_fail@plt+0x101cc>
   1f87c:	str	r0, [sp, #16]
   1f880:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f884:	ldr	r1, [sp, #24]
   1f888:	add	r0, sp, #32
   1f88c:	movw	r2, #7
   1f890:	bl	212b4 <__assert_fail@plt+0x101cc>
   1f894:	str	r0, [sp, #16]
   1f898:	b	1f8c0 <__assert_fail@plt+0xe7d8>
   1f89c:	ldr	r0, [sp, #32]
   1f8a0:	ldr	r1, [sp, #36]	; 0x24
   1f8a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f8a8:	str	r1, [r2, #4]
   1f8ac:	str	r0, [r2]
   1f8b0:	ldr	r0, [sp, #28]
   1f8b4:	orr	r0, r0, #2
   1f8b8:	str	r0, [fp, #-4]
   1f8bc:	b	1f924 <__assert_fail@plt+0xe83c>
   1f8c0:	ldr	r0, [sp, #16]
   1f8c4:	ldr	r1, [sp, #28]
   1f8c8:	orr	r0, r1, r0
   1f8cc:	str	r0, [sp, #28]
   1f8d0:	ldr	r0, [sp, #20]
   1f8d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f8d8:	ldr	r2, [r1]
   1f8dc:	add	r0, r2, r0
   1f8e0:	str	r0, [r1]
   1f8e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f8e8:	ldr	r0, [r0]
   1f8ec:	ldrsb	r0, [r0]
   1f8f0:	cmp	r0, #0
   1f8f4:	beq	1f904 <__assert_fail@plt+0xe81c>
   1f8f8:	ldr	r0, [sp, #28]
   1f8fc:	orr	r0, r0, #2
   1f900:	str	r0, [sp, #28]
   1f904:	b	1f908 <__assert_fail@plt+0xe820>
   1f908:	ldr	r0, [sp, #32]
   1f90c:	ldr	r1, [sp, #36]	; 0x24
   1f910:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f914:	str	r1, [r2, #4]
   1f918:	str	r0, [r2]
   1f91c:	ldr	r0, [sp, #28]
   1f920:	str	r0, [fp, #-4]
   1f924:	ldr	r0, [fp, #-4]
   1f928:	mov	sp, fp
   1f92c:	pop	{fp, pc}
   1f930:	push	{fp, lr}
   1f934:	mov	fp, sp
   1f938:	sub	sp, sp, #112	; 0x70
   1f93c:	str	r0, [fp, #-8]
   1f940:	str	r1, [fp, #-12]
   1f944:	b	1fe2c <__assert_fail@plt+0xed44>
   1f948:	b	1f94c <__assert_fail@plt+0xe864>
   1f94c:	ldr	r0, [fp, #-12]
   1f950:	cmp	r0, #0
   1f954:	bge	1fab4 <__assert_fail@plt+0xe9cc>
   1f958:	ldr	r0, [fp, #-8]
   1f95c:	ldr	r0, [r0, #4]
   1f960:	cmn	r0, #1
   1f964:	bgt	1fa0c <__assert_fail@plt+0xe924>
   1f968:	b	1f96c <__assert_fail@plt+0xe884>
   1f96c:	b	1f970 <__assert_fail@plt+0xe888>
   1f970:	ldr	r0, [fp, #-8]
   1f974:	ldr	r1, [r0]
   1f978:	ldr	r0, [r0, #4]
   1f97c:	ldr	r2, [fp, #-12]
   1f980:	mov	r3, #127	; 0x7f
   1f984:	sdiv	r2, r3, r2
   1f988:	subs	r1, r1, r2
   1f98c:	sbcs	r0, r0, r2, asr #31
   1f990:	blt	1fb8c <__assert_fail@plt+0xeaa4>
   1f994:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1f998:	b	1f99c <__assert_fail@plt+0xe8b4>
   1f99c:	ldr	r0, [pc, #4092]	; 209a0 <__assert_fail@plt+0xf8b8>
   1f9a0:	ldr	r1, [fp, #-12]
   1f9a4:	cmp	r1, r0
   1f9a8:	blt	1f9c0 <__assert_fail@plt+0xe8d8>
   1f9ac:	b	1f9cc <__assert_fail@plt+0xe8e4>
   1f9b0:	ldr	r0, [fp, #-12]
   1f9b4:	movw	r1, #0
   1f9b8:	cmp	r1, r0
   1f9bc:	bge	1f9cc <__assert_fail@plt+0xe8e4>
   1f9c0:	movw	r0, #0
   1f9c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f9c8:	b	1f9e4 <__assert_fail@plt+0xe8fc>
   1f9cc:	ldr	r0, [fp, #-12]
   1f9d0:	movw	r1, #0
   1f9d4:	sub	r0, r1, r0
   1f9d8:	movw	r1, #127	; 0x7f
   1f9dc:	sdiv	r0, r1, r0
   1f9e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f9e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f9e8:	ldr	r1, [fp, #-8]
   1f9ec:	ldr	r2, [r1]
   1f9f0:	ldr	r1, [r1, #4]
   1f9f4:	mvn	r1, r1
   1f9f8:	mvn	r2, r2
   1f9fc:	subs	r2, r2, r0
   1fa00:	sbcs	r0, r1, r0, asr #31
   1fa04:	bge	1fb8c <__assert_fail@plt+0xeaa4>
   1fa08:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1fa0c:	b	1fa10 <__assert_fail@plt+0xe928>
   1fa10:	b	1fa8c <__assert_fail@plt+0xe9a4>
   1fa14:	b	1fa8c <__assert_fail@plt+0xe9a4>
   1fa18:	ldr	r0, [fp, #-12]
   1fa1c:	cmn	r0, #1
   1fa20:	bne	1fa8c <__assert_fail@plt+0xe9a4>
   1fa24:	b	1fa28 <__assert_fail@plt+0xe940>
   1fa28:	ldr	r0, [fp, #-8]
   1fa2c:	ldr	r1, [r0]
   1fa30:	ldr	r0, [r0, #4]
   1fa34:	subs	r1, r1, #128	; 0x80
   1fa38:	sbc	r0, r0, #0
   1fa3c:	rsbs	r1, r1, #0
   1fa40:	rscs	r0, r0, #0
   1fa44:	blt	1fb8c <__assert_fail@plt+0xeaa4>
   1fa48:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1fa4c:	ldr	r0, [fp, #-8]
   1fa50:	ldr	r1, [r0]
   1fa54:	ldr	r0, [r0, #4]
   1fa58:	subs	r1, r1, #1
   1fa5c:	sbcs	r0, r0, #0
   1fa60:	blt	1fbb0 <__assert_fail@plt+0xeac8>
   1fa64:	b	1fa68 <__assert_fail@plt+0xe980>
   1fa68:	ldr	r0, [fp, #-8]
   1fa6c:	ldr	r1, [r0]
   1fa70:	ldr	r0, [r0, #4]
   1fa74:	subs	r1, r1, #1
   1fa78:	sbc	r0, r0, #0
   1fa7c:	rsbs	r1, r1, #127	; 0x7f
   1fa80:	rscs	r0, r0, #0
   1fa84:	blt	1fb8c <__assert_fail@plt+0xeaa4>
   1fa88:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1fa8c:	ldr	r0, [fp, #-12]
   1fa90:	mvn	r1, #127	; 0x7f
   1fa94:	sdiv	r0, r1, r0
   1fa98:	ldr	r1, [fp, #-8]
   1fa9c:	ldr	r2, [r1]
   1faa0:	ldr	r1, [r1, #4]
   1faa4:	subs	r2, r0, r2
   1faa8:	rscs	r0, r1, r0, asr #31
   1faac:	blt	1fb8c <__assert_fail@plt+0xeaa4>
   1fab0:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1fab4:	ldr	r0, [fp, #-12]
   1fab8:	cmp	r0, #0
   1fabc:	bne	1fac4 <__assert_fail@plt+0xe9dc>
   1fac0:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1fac4:	ldr	r0, [fp, #-8]
   1fac8:	ldr	r0, [r0, #4]
   1facc:	cmn	r0, #1
   1fad0:	bgt	1fb64 <__assert_fail@plt+0xea7c>
   1fad4:	b	1fad8 <__assert_fail@plt+0xe9f0>
   1fad8:	b	1fadc <__assert_fail@plt+0xe9f4>
   1fadc:	b	1fb38 <__assert_fail@plt+0xea50>
   1fae0:	b	1fb38 <__assert_fail@plt+0xea50>
   1fae4:	ldr	r0, [fp, #-8]
   1fae8:	ldr	r1, [r0]
   1faec:	ldr	r0, [r0, #4]
   1faf0:	and	r0, r1, r0
   1faf4:	cmn	r0, #1
   1faf8:	bne	1fb38 <__assert_fail@plt+0xea50>
   1fafc:	b	1fb00 <__assert_fail@plt+0xea18>
   1fb00:	b	1fb04 <__assert_fail@plt+0xea1c>
   1fb04:	ldr	r0, [fp, #-12]
   1fb08:	mvn	r1, #127	; 0x7f
   1fb0c:	add	r0, r0, r1
   1fb10:	movw	r1, #0
   1fb14:	cmp	r1, r0
   1fb18:	blt	1fb8c <__assert_fail@plt+0xeaa4>
   1fb1c:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1fb20:	ldr	r0, [fp, #-12]
   1fb24:	sub	r0, r0, #1
   1fb28:	movw	r1, #127	; 0x7f
   1fb2c:	cmp	r1, r0
   1fb30:	blt	1fb8c <__assert_fail@plt+0xeaa4>
   1fb34:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1fb38:	ldr	r0, [fp, #-8]
   1fb3c:	ldr	r2, [r0]
   1fb40:	ldr	r3, [r0, #4]
   1fb44:	mvn	r0, #127	; 0x7f
   1fb48:	mvn	r1, #0
   1fb4c:	bl	21990 <__assert_fail@plt+0x108a8>
   1fb50:	ldr	r2, [fp, #-12]
   1fb54:	subs	r0, r0, r2
   1fb58:	sbcs	r1, r1, r2, asr #31
   1fb5c:	blt	1fb8c <__assert_fail@plt+0xeaa4>
   1fb60:	b	1fbb0 <__assert_fail@plt+0xeac8>
   1fb64:	ldr	r0, [fp, #-12]
   1fb68:	mov	r1, #127	; 0x7f
   1fb6c:	sdiv	r0, r1, r0
   1fb70:	ldr	r1, [fp, #-8]
   1fb74:	ldr	r2, [r1]
   1fb78:	ldr	r1, [r1, #4]
   1fb7c:	subs	r2, r0, r2
   1fb80:	rscs	r0, r1, r0, asr #31
   1fb84:	bge	1fbb0 <__assert_fail@plt+0xeac8>
   1fb88:	b	1fb8c <__assert_fail@plt+0xeaa4>
   1fb8c:	ldr	r0, [fp, #-8]
   1fb90:	ldr	r0, [r0]
   1fb94:	ldr	r1, [fp, #-12]
   1fb98:	mul	r0, r0, r1
   1fb9c:	sxtb	r0, r0
   1fba0:	asr	r1, r0, #31
   1fba4:	str	r0, [fp, #-24]	; 0xffffffe8
   1fba8:	str	r1, [fp, #-20]	; 0xffffffec
   1fbac:	b	21250 <__assert_fail@plt+0x10168>
   1fbb0:	ldr	r0, [fp, #-8]
   1fbb4:	ldr	r0, [r0]
   1fbb8:	ldr	r1, [fp, #-12]
   1fbbc:	mul	r0, r0, r1
   1fbc0:	sxtb	r0, r0
   1fbc4:	asr	r1, r0, #31
   1fbc8:	str	r0, [fp, #-24]	; 0xffffffe8
   1fbcc:	str	r1, [fp, #-20]	; 0xffffffec
   1fbd0:	b	21284 <__assert_fail@plt+0x1019c>
   1fbd4:	ldr	r0, [fp, #-12]
   1fbd8:	cmp	r0, #0
   1fbdc:	bge	1fd24 <__assert_fail@plt+0xec3c>
   1fbe0:	ldr	r0, [fp, #-8]
   1fbe4:	ldr	r0, [r0, #4]
   1fbe8:	cmn	r0, #1
   1fbec:	bgt	1fc94 <__assert_fail@plt+0xebac>
   1fbf0:	b	1fbf4 <__assert_fail@plt+0xeb0c>
   1fbf4:	b	1fbf8 <__assert_fail@plt+0xeb10>
   1fbf8:	ldr	r0, [fp, #-8]
   1fbfc:	ldr	r1, [r0]
   1fc00:	ldr	r0, [r0, #4]
   1fc04:	ldr	r2, [fp, #-12]
   1fc08:	mov	r3, #255	; 0xff
   1fc0c:	sdiv	r2, r3, r2
   1fc10:	subs	r1, r1, r2
   1fc14:	sbcs	r0, r0, r2, asr #31
   1fc18:	blt	1fde4 <__assert_fail@plt+0xecfc>
   1fc1c:	b	1fe08 <__assert_fail@plt+0xed20>
   1fc20:	b	1fc24 <__assert_fail@plt+0xeb3c>
   1fc24:	ldr	r0, [pc, #3444]	; 209a0 <__assert_fail@plt+0xf8b8>
   1fc28:	ldr	r1, [fp, #-12]
   1fc2c:	cmp	r1, r0
   1fc30:	blt	1fc48 <__assert_fail@plt+0xeb60>
   1fc34:	b	1fc54 <__assert_fail@plt+0xeb6c>
   1fc38:	ldr	r0, [fp, #-12]
   1fc3c:	movw	r1, #0
   1fc40:	cmp	r1, r0
   1fc44:	bge	1fc54 <__assert_fail@plt+0xeb6c>
   1fc48:	movw	r0, #0
   1fc4c:	str	r0, [fp, #-32]	; 0xffffffe0
   1fc50:	b	1fc6c <__assert_fail@plt+0xeb84>
   1fc54:	ldr	r0, [fp, #-12]
   1fc58:	movw	r1, #0
   1fc5c:	sub	r0, r1, r0
   1fc60:	movw	r1, #255	; 0xff
   1fc64:	sdiv	r0, r1, r0
   1fc68:	str	r0, [fp, #-32]	; 0xffffffe0
   1fc6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc70:	ldr	r1, [fp, #-8]
   1fc74:	ldr	r2, [r1]
   1fc78:	ldr	r1, [r1, #4]
   1fc7c:	mvn	r1, r1
   1fc80:	mvn	r2, r2
   1fc84:	subs	r2, r2, r0
   1fc88:	sbcs	r0, r1, r0, asr #31
   1fc8c:	bge	1fde4 <__assert_fail@plt+0xecfc>
   1fc90:	b	1fe08 <__assert_fail@plt+0xed20>
   1fc94:	b	1fc98 <__assert_fail@plt+0xebb0>
   1fc98:	b	1fd08 <__assert_fail@plt+0xec20>
   1fc9c:	b	1fd08 <__assert_fail@plt+0xec20>
   1fca0:	ldr	r0, [fp, #-12]
   1fca4:	cmn	r0, #1
   1fca8:	bne	1fd08 <__assert_fail@plt+0xec20>
   1fcac:	b	1fcb0 <__assert_fail@plt+0xebc8>
   1fcb0:	ldr	r0, [fp, #-8]
   1fcb4:	ldr	r1, [r0]
   1fcb8:	ldr	r0, [r0, #4]
   1fcbc:	rsbs	r1, r1, #0
   1fcc0:	rscs	r0, r0, #0
   1fcc4:	blt	1fde4 <__assert_fail@plt+0xecfc>
   1fcc8:	b	1fe08 <__assert_fail@plt+0xed20>
   1fccc:	ldr	r0, [fp, #-8]
   1fcd0:	ldr	r1, [r0]
   1fcd4:	ldr	r0, [r0, #4]
   1fcd8:	subs	r1, r1, #1
   1fcdc:	sbcs	r0, r0, #0
   1fce0:	blt	1fe08 <__assert_fail@plt+0xed20>
   1fce4:	b	1fce8 <__assert_fail@plt+0xec00>
   1fce8:	ldr	r0, [fp, #-8]
   1fcec:	ldr	r1, [r0]
   1fcf0:	ldr	r0, [r0, #4]
   1fcf4:	subs	r1, r1, #1
   1fcf8:	sbc	r0, r0, #0
   1fcfc:	cmn	r0, #1
   1fd00:	bgt	1fde4 <__assert_fail@plt+0xecfc>
   1fd04:	b	1fe08 <__assert_fail@plt+0xed20>
   1fd08:	ldr	r0, [fp, #-8]
   1fd0c:	ldr	r1, [r0]
   1fd10:	ldr	r0, [r0, #4]
   1fd14:	rsbs	r1, r1, #0
   1fd18:	rscs	r0, r0, #0
   1fd1c:	blt	1fde4 <__assert_fail@plt+0xecfc>
   1fd20:	b	1fe08 <__assert_fail@plt+0xed20>
   1fd24:	ldr	r0, [fp, #-12]
   1fd28:	cmp	r0, #0
   1fd2c:	bne	1fd34 <__assert_fail@plt+0xec4c>
   1fd30:	b	1fe08 <__assert_fail@plt+0xed20>
   1fd34:	ldr	r0, [fp, #-8]
   1fd38:	ldr	r0, [r0, #4]
   1fd3c:	cmn	r0, #1
   1fd40:	bgt	1fdbc <__assert_fail@plt+0xecd4>
   1fd44:	b	1fd48 <__assert_fail@plt+0xec60>
   1fd48:	b	1fd4c <__assert_fail@plt+0xec64>
   1fd4c:	b	1fda4 <__assert_fail@plt+0xecbc>
   1fd50:	b	1fda4 <__assert_fail@plt+0xecbc>
   1fd54:	ldr	r0, [fp, #-8]
   1fd58:	ldr	r1, [r0]
   1fd5c:	ldr	r0, [r0, #4]
   1fd60:	and	r0, r1, r0
   1fd64:	cmn	r0, #1
   1fd68:	bne	1fda4 <__assert_fail@plt+0xecbc>
   1fd6c:	b	1fd70 <__assert_fail@plt+0xec88>
   1fd70:	b	1fd74 <__assert_fail@plt+0xec8c>
   1fd74:	ldr	r0, [fp, #-12]
   1fd78:	add	r0, r0, #0
   1fd7c:	movw	r1, #0
   1fd80:	cmp	r1, r0
   1fd84:	blt	1fde4 <__assert_fail@plt+0xecfc>
   1fd88:	b	1fe08 <__assert_fail@plt+0xed20>
   1fd8c:	ldr	r0, [fp, #-12]
   1fd90:	sub	r0, r0, #1
   1fd94:	mvn	r1, #0
   1fd98:	cmp	r1, r0
   1fd9c:	blt	1fde4 <__assert_fail@plt+0xecfc>
   1fda0:	b	1fe08 <__assert_fail@plt+0xed20>
   1fda4:	ldr	r0, [fp, #-12]
   1fda8:	rsbs	r1, r0, #0
   1fdac:	mov	r2, #0
   1fdb0:	sbcs	r0, r2, r0, asr #31
   1fdb4:	blt	1fde4 <__assert_fail@plt+0xecfc>
   1fdb8:	b	1fe08 <__assert_fail@plt+0xed20>
   1fdbc:	ldr	r0, [fp, #-12]
   1fdc0:	mov	r1, #255	; 0xff
   1fdc4:	sdiv	r0, r1, r0
   1fdc8:	ldr	r1, [fp, #-8]
   1fdcc:	ldr	r2, [r1]
   1fdd0:	ldr	r1, [r1, #4]
   1fdd4:	subs	r2, r0, r2
   1fdd8:	rscs	r0, r1, r0, asr #31
   1fddc:	bge	1fe08 <__assert_fail@plt+0xed20>
   1fde0:	b	1fde4 <__assert_fail@plt+0xecfc>
   1fde4:	ldr	r0, [fp, #-8]
   1fde8:	ldr	r0, [r0]
   1fdec:	ldr	r1, [fp, #-12]
   1fdf0:	mul	r0, r0, r1
   1fdf4:	uxtb	r0, r0
   1fdf8:	mov	r1, #0
   1fdfc:	str	r1, [fp, #-20]	; 0xffffffec
   1fe00:	str	r0, [fp, #-24]	; 0xffffffe8
   1fe04:	b	21250 <__assert_fail@plt+0x10168>
   1fe08:	ldr	r0, [fp, #-8]
   1fe0c:	ldr	r0, [r0]
   1fe10:	ldr	r1, [fp, #-12]
   1fe14:	mul	r0, r0, r1
   1fe18:	uxtb	r0, r0
   1fe1c:	mov	r1, #0
   1fe20:	str	r1, [fp, #-20]	; 0xffffffec
   1fe24:	str	r0, [fp, #-24]	; 0xffffffe8
   1fe28:	b	21284 <__assert_fail@plt+0x1019c>
   1fe2c:	b	20320 <__assert_fail@plt+0xf238>
   1fe30:	b	1fe34 <__assert_fail@plt+0xed4c>
   1fe34:	ldr	r0, [fp, #-12]
   1fe38:	cmp	r0, #0
   1fe3c:	bge	1ffa4 <__assert_fail@plt+0xeebc>
   1fe40:	ldr	r0, [fp, #-8]
   1fe44:	ldr	r0, [r0, #4]
   1fe48:	cmn	r0, #1
   1fe4c:	bgt	1fef4 <__assert_fail@plt+0xee0c>
   1fe50:	b	1fe54 <__assert_fail@plt+0xed6c>
   1fe54:	b	1fe58 <__assert_fail@plt+0xed70>
   1fe58:	ldr	r0, [fp, #-8]
   1fe5c:	ldr	r1, [r0]
   1fe60:	ldr	r0, [r0, #4]
   1fe64:	ldr	r2, [fp, #-12]
   1fe68:	movw	r3, #32767	; 0x7fff
   1fe6c:	sdiv	r2, r3, r2
   1fe70:	subs	r1, r1, r2
   1fe74:	sbcs	r0, r0, r2, asr #31
   1fe78:	blt	20080 <__assert_fail@plt+0xef98>
   1fe7c:	b	200a4 <__assert_fail@plt+0xefbc>
   1fe80:	b	1fe84 <__assert_fail@plt+0xed9c>
   1fe84:	ldr	r0, [pc, #2836]	; 209a0 <__assert_fail@plt+0xf8b8>
   1fe88:	ldr	r1, [fp, #-12]
   1fe8c:	cmp	r1, r0
   1fe90:	blt	1fea8 <__assert_fail@plt+0xedc0>
   1fe94:	b	1feb4 <__assert_fail@plt+0xedcc>
   1fe98:	ldr	r0, [fp, #-12]
   1fe9c:	movw	r1, #0
   1fea0:	cmp	r1, r0
   1fea4:	bge	1feb4 <__assert_fail@plt+0xedcc>
   1fea8:	movw	r0, #0
   1feac:	str	r0, [fp, #-36]	; 0xffffffdc
   1feb0:	b	1fecc <__assert_fail@plt+0xede4>
   1feb4:	ldr	r0, [fp, #-12]
   1feb8:	movw	r1, #0
   1febc:	sub	r0, r1, r0
   1fec0:	movw	r1, #32767	; 0x7fff
   1fec4:	sdiv	r0, r1, r0
   1fec8:	str	r0, [fp, #-36]	; 0xffffffdc
   1fecc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fed0:	ldr	r1, [fp, #-8]
   1fed4:	ldr	r2, [r1]
   1fed8:	ldr	r1, [r1, #4]
   1fedc:	mvn	r1, r1
   1fee0:	mvn	r2, r2
   1fee4:	subs	r2, r2, r0
   1fee8:	sbcs	r0, r1, r0, asr #31
   1feec:	bge	20080 <__assert_fail@plt+0xef98>
   1fef0:	b	200a4 <__assert_fail@plt+0xefbc>
   1fef4:	b	1fef8 <__assert_fail@plt+0xee10>
   1fef8:	b	1ff78 <__assert_fail@plt+0xee90>
   1fefc:	b	1ff78 <__assert_fail@plt+0xee90>
   1ff00:	ldr	r0, [fp, #-12]
   1ff04:	cmn	r0, #1
   1ff08:	bne	1ff78 <__assert_fail@plt+0xee90>
   1ff0c:	b	1ff10 <__assert_fail@plt+0xee28>
   1ff10:	ldr	r0, [fp, #-8]
   1ff14:	ldr	r1, [r0]
   1ff18:	ldr	r0, [r0, #4]
   1ff1c:	subs	r1, r1, #32768	; 0x8000
   1ff20:	sbc	r0, r0, #0
   1ff24:	rsbs	r1, r1, #0
   1ff28:	rscs	r0, r0, #0
   1ff2c:	blt	20080 <__assert_fail@plt+0xef98>
   1ff30:	b	200a4 <__assert_fail@plt+0xefbc>
   1ff34:	ldr	r0, [fp, #-8]
   1ff38:	ldr	r1, [r0]
   1ff3c:	ldr	r0, [r0, #4]
   1ff40:	subs	r1, r1, #1
   1ff44:	sbcs	r0, r0, #0
   1ff48:	blt	200a4 <__assert_fail@plt+0xefbc>
   1ff4c:	b	1ff50 <__assert_fail@plt+0xee68>
   1ff50:	ldr	r0, [fp, #-8]
   1ff54:	ldr	r1, [r0]
   1ff58:	ldr	r0, [r0, #4]
   1ff5c:	subs	r1, r1, #1
   1ff60:	sbc	r0, r0, #0
   1ff64:	movw	r2, #32767	; 0x7fff
   1ff68:	subs	r1, r2, r1
   1ff6c:	rscs	r0, r0, #0
   1ff70:	blt	20080 <__assert_fail@plt+0xef98>
   1ff74:	b	200a4 <__assert_fail@plt+0xefbc>
   1ff78:	ldr	r0, [fp, #-12]
   1ff7c:	movw	r1, #32768	; 0x8000
   1ff80:	movt	r1, #65535	; 0xffff
   1ff84:	sdiv	r0, r1, r0
   1ff88:	ldr	r1, [fp, #-8]
   1ff8c:	ldr	r2, [r1]
   1ff90:	ldr	r1, [r1, #4]
   1ff94:	subs	r2, r0, r2
   1ff98:	rscs	r0, r1, r0, asr #31
   1ff9c:	blt	20080 <__assert_fail@plt+0xef98>
   1ffa0:	b	200a4 <__assert_fail@plt+0xefbc>
   1ffa4:	ldr	r0, [fp, #-12]
   1ffa8:	cmp	r0, #0
   1ffac:	bne	1ffb4 <__assert_fail@plt+0xeecc>
   1ffb0:	b	200a4 <__assert_fail@plt+0xefbc>
   1ffb4:	ldr	r0, [fp, #-8]
   1ffb8:	ldr	r0, [r0, #4]
   1ffbc:	cmn	r0, #1
   1ffc0:	bgt	20058 <__assert_fail@plt+0xef70>
   1ffc4:	b	1ffc8 <__assert_fail@plt+0xeee0>
   1ffc8:	b	1ffcc <__assert_fail@plt+0xeee4>
   1ffcc:	b	20028 <__assert_fail@plt+0xef40>
   1ffd0:	b	20028 <__assert_fail@plt+0xef40>
   1ffd4:	ldr	r0, [fp, #-8]
   1ffd8:	ldr	r1, [r0]
   1ffdc:	ldr	r0, [r0, #4]
   1ffe0:	and	r0, r1, r0
   1ffe4:	cmn	r0, #1
   1ffe8:	bne	20028 <__assert_fail@plt+0xef40>
   1ffec:	b	1fff0 <__assert_fail@plt+0xef08>
   1fff0:	b	1fff4 <__assert_fail@plt+0xef0c>
   1fff4:	ldr	r0, [pc, #4032]	; 20fbc <__assert_fail@plt+0xfed4>
   1fff8:	ldr	r1, [fp, #-12]
   1fffc:	add	r0, r1, r0
   20000:	movw	r1, #0
   20004:	cmp	r1, r0
   20008:	blt	20080 <__assert_fail@plt+0xef98>
   2000c:	b	200a4 <__assert_fail@plt+0xefbc>
   20010:	ldr	r0, [fp, #-12]
   20014:	sub	r0, r0, #1
   20018:	movw	r1, #32767	; 0x7fff
   2001c:	cmp	r1, r0
   20020:	blt	20080 <__assert_fail@plt+0xef98>
   20024:	b	200a4 <__assert_fail@plt+0xefbc>
   20028:	ldr	r0, [fp, #-8]
   2002c:	ldr	r2, [r0]
   20030:	ldr	r3, [r0, #4]
   20034:	movw	r0, #32768	; 0x8000
   20038:	movt	r0, #65535	; 0xffff
   2003c:	mvn	r1, #0
   20040:	bl	21990 <__assert_fail@plt+0x108a8>
   20044:	ldr	r2, [fp, #-12]
   20048:	subs	r0, r0, r2
   2004c:	sbcs	r1, r1, r2, asr #31
   20050:	blt	20080 <__assert_fail@plt+0xef98>
   20054:	b	200a4 <__assert_fail@plt+0xefbc>
   20058:	ldr	r0, [fp, #-12]
   2005c:	movw	r1, #32767	; 0x7fff
   20060:	sdiv	r0, r1, r0
   20064:	ldr	r1, [fp, #-8]
   20068:	ldr	r2, [r1]
   2006c:	ldr	r1, [r1, #4]
   20070:	subs	r2, r0, r2
   20074:	rscs	r0, r1, r0, asr #31
   20078:	bge	200a4 <__assert_fail@plt+0xefbc>
   2007c:	b	20080 <__assert_fail@plt+0xef98>
   20080:	ldr	r0, [fp, #-8]
   20084:	ldr	r0, [r0]
   20088:	ldr	r1, [fp, #-12]
   2008c:	mul	r0, r0, r1
   20090:	sxth	r0, r0
   20094:	asr	r1, r0, #31
   20098:	str	r0, [fp, #-24]	; 0xffffffe8
   2009c:	str	r1, [fp, #-20]	; 0xffffffec
   200a0:	b	21250 <__assert_fail@plt+0x10168>
   200a4:	ldr	r0, [fp, #-8]
   200a8:	ldr	r0, [r0]
   200ac:	ldr	r1, [fp, #-12]
   200b0:	mul	r0, r0, r1
   200b4:	sxth	r0, r0
   200b8:	asr	r1, r0, #31
   200bc:	str	r0, [fp, #-24]	; 0xffffffe8
   200c0:	str	r1, [fp, #-20]	; 0xffffffec
   200c4:	b	21284 <__assert_fail@plt+0x1019c>
   200c8:	ldr	r0, [fp, #-12]
   200cc:	cmp	r0, #0
   200d0:	bge	20218 <__assert_fail@plt+0xf130>
   200d4:	ldr	r0, [fp, #-8]
   200d8:	ldr	r0, [r0, #4]
   200dc:	cmn	r0, #1
   200e0:	bgt	20188 <__assert_fail@plt+0xf0a0>
   200e4:	b	200e8 <__assert_fail@plt+0xf000>
   200e8:	b	200ec <__assert_fail@plt+0xf004>
   200ec:	ldr	r0, [fp, #-8]
   200f0:	ldr	r1, [r0]
   200f4:	ldr	r0, [r0, #4]
   200f8:	ldr	r2, [fp, #-12]
   200fc:	movw	r3, #65535	; 0xffff
   20100:	sdiv	r2, r3, r2
   20104:	subs	r1, r1, r2
   20108:	sbcs	r0, r0, r2, asr #31
   2010c:	blt	202d8 <__assert_fail@plt+0xf1f0>
   20110:	b	202fc <__assert_fail@plt+0xf214>
   20114:	b	20118 <__assert_fail@plt+0xf030>
   20118:	ldr	r0, [pc, #2176]	; 209a0 <__assert_fail@plt+0xf8b8>
   2011c:	ldr	r1, [fp, #-12]
   20120:	cmp	r1, r0
   20124:	blt	2013c <__assert_fail@plt+0xf054>
   20128:	b	20148 <__assert_fail@plt+0xf060>
   2012c:	ldr	r0, [fp, #-12]
   20130:	movw	r1, #0
   20134:	cmp	r1, r0
   20138:	bge	20148 <__assert_fail@plt+0xf060>
   2013c:	movw	r0, #0
   20140:	str	r0, [fp, #-40]	; 0xffffffd8
   20144:	b	20160 <__assert_fail@plt+0xf078>
   20148:	ldr	r0, [fp, #-12]
   2014c:	movw	r1, #0
   20150:	sub	r0, r1, r0
   20154:	movw	r1, #65535	; 0xffff
   20158:	sdiv	r0, r1, r0
   2015c:	str	r0, [fp, #-40]	; 0xffffffd8
   20160:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20164:	ldr	r1, [fp, #-8]
   20168:	ldr	r2, [r1]
   2016c:	ldr	r1, [r1, #4]
   20170:	mvn	r1, r1
   20174:	mvn	r2, r2
   20178:	subs	r2, r2, r0
   2017c:	sbcs	r0, r1, r0, asr #31
   20180:	bge	202d8 <__assert_fail@plt+0xf1f0>
   20184:	b	202fc <__assert_fail@plt+0xf214>
   20188:	b	2018c <__assert_fail@plt+0xf0a4>
   2018c:	b	201fc <__assert_fail@plt+0xf114>
   20190:	b	201fc <__assert_fail@plt+0xf114>
   20194:	ldr	r0, [fp, #-12]
   20198:	cmn	r0, #1
   2019c:	bne	201fc <__assert_fail@plt+0xf114>
   201a0:	b	201a4 <__assert_fail@plt+0xf0bc>
   201a4:	ldr	r0, [fp, #-8]
   201a8:	ldr	r1, [r0]
   201ac:	ldr	r0, [r0, #4]
   201b0:	rsbs	r1, r1, #0
   201b4:	rscs	r0, r0, #0
   201b8:	blt	202d8 <__assert_fail@plt+0xf1f0>
   201bc:	b	202fc <__assert_fail@plt+0xf214>
   201c0:	ldr	r0, [fp, #-8]
   201c4:	ldr	r1, [r0]
   201c8:	ldr	r0, [r0, #4]
   201cc:	subs	r1, r1, #1
   201d0:	sbcs	r0, r0, #0
   201d4:	blt	202fc <__assert_fail@plt+0xf214>
   201d8:	b	201dc <__assert_fail@plt+0xf0f4>
   201dc:	ldr	r0, [fp, #-8]
   201e0:	ldr	r1, [r0]
   201e4:	ldr	r0, [r0, #4]
   201e8:	subs	r1, r1, #1
   201ec:	sbc	r0, r0, #0
   201f0:	cmn	r0, #1
   201f4:	bgt	202d8 <__assert_fail@plt+0xf1f0>
   201f8:	b	202fc <__assert_fail@plt+0xf214>
   201fc:	ldr	r0, [fp, #-8]
   20200:	ldr	r1, [r0]
   20204:	ldr	r0, [r0, #4]
   20208:	rsbs	r1, r1, #0
   2020c:	rscs	r0, r0, #0
   20210:	blt	202d8 <__assert_fail@plt+0xf1f0>
   20214:	b	202fc <__assert_fail@plt+0xf214>
   20218:	ldr	r0, [fp, #-12]
   2021c:	cmp	r0, #0
   20220:	bne	20228 <__assert_fail@plt+0xf140>
   20224:	b	202fc <__assert_fail@plt+0xf214>
   20228:	ldr	r0, [fp, #-8]
   2022c:	ldr	r0, [r0, #4]
   20230:	cmn	r0, #1
   20234:	bgt	202b0 <__assert_fail@plt+0xf1c8>
   20238:	b	2023c <__assert_fail@plt+0xf154>
   2023c:	b	20240 <__assert_fail@plt+0xf158>
   20240:	b	20298 <__assert_fail@plt+0xf1b0>
   20244:	b	20298 <__assert_fail@plt+0xf1b0>
   20248:	ldr	r0, [fp, #-8]
   2024c:	ldr	r1, [r0]
   20250:	ldr	r0, [r0, #4]
   20254:	and	r0, r1, r0
   20258:	cmn	r0, #1
   2025c:	bne	20298 <__assert_fail@plt+0xf1b0>
   20260:	b	20264 <__assert_fail@plt+0xf17c>
   20264:	b	20268 <__assert_fail@plt+0xf180>
   20268:	ldr	r0, [fp, #-12]
   2026c:	add	r0, r0, #0
   20270:	movw	r1, #0
   20274:	cmp	r1, r0
   20278:	blt	202d8 <__assert_fail@plt+0xf1f0>
   2027c:	b	202fc <__assert_fail@plt+0xf214>
   20280:	ldr	r0, [fp, #-12]
   20284:	sub	r0, r0, #1
   20288:	mvn	r1, #0
   2028c:	cmp	r1, r0
   20290:	blt	202d8 <__assert_fail@plt+0xf1f0>
   20294:	b	202fc <__assert_fail@plt+0xf214>
   20298:	ldr	r0, [fp, #-12]
   2029c:	rsbs	r1, r0, #0
   202a0:	mov	r2, #0
   202a4:	sbcs	r0, r2, r0, asr #31
   202a8:	blt	202d8 <__assert_fail@plt+0xf1f0>
   202ac:	b	202fc <__assert_fail@plt+0xf214>
   202b0:	ldr	r0, [fp, #-12]
   202b4:	movw	r1, #65535	; 0xffff
   202b8:	sdiv	r0, r1, r0
   202bc:	ldr	r1, [fp, #-8]
   202c0:	ldr	r2, [r1]
   202c4:	ldr	r1, [r1, #4]
   202c8:	subs	r2, r0, r2
   202cc:	rscs	r0, r1, r0, asr #31
   202d0:	bge	202fc <__assert_fail@plt+0xf214>
   202d4:	b	202d8 <__assert_fail@plt+0xf1f0>
   202d8:	ldr	r0, [fp, #-8]
   202dc:	ldr	r0, [r0]
   202e0:	ldr	r1, [fp, #-12]
   202e4:	mul	r0, r0, r1
   202e8:	uxth	r0, r0
   202ec:	mov	r1, #0
   202f0:	str	r1, [fp, #-20]	; 0xffffffec
   202f4:	str	r0, [fp, #-24]	; 0xffffffe8
   202f8:	b	21250 <__assert_fail@plt+0x10168>
   202fc:	ldr	r0, [fp, #-8]
   20300:	ldr	r0, [r0]
   20304:	ldr	r1, [fp, #-12]
   20308:	mul	r0, r0, r1
   2030c:	uxth	r0, r0
   20310:	mov	r1, #0
   20314:	str	r1, [fp, #-20]	; 0xffffffec
   20318:	str	r0, [fp, #-24]	; 0xffffffe8
   2031c:	b	21284 <__assert_fail@plt+0x1019c>
   20320:	b	207ec <__assert_fail@plt+0xf704>
   20324:	b	20328 <__assert_fail@plt+0xf240>
   20328:	ldr	r0, [fp, #-12]
   2032c:	cmp	r0, #0
   20330:	bge	20488 <__assert_fail@plt+0xf3a0>
   20334:	ldr	r0, [fp, #-8]
   20338:	ldr	r0, [r0, #4]
   2033c:	cmn	r0, #1
   20340:	bgt	203e8 <__assert_fail@plt+0xf300>
   20344:	b	20348 <__assert_fail@plt+0xf260>
   20348:	b	2034c <__assert_fail@plt+0xf264>
   2034c:	ldr	r0, [fp, #-8]
   20350:	ldr	r1, [r0]
   20354:	ldr	r0, [r0, #4]
   20358:	ldr	r2, [fp, #-12]
   2035c:	mvn	r3, #-2147483648	; 0x80000000
   20360:	sdiv	r2, r3, r2
   20364:	subs	r1, r1, r2
   20368:	sbcs	r0, r0, r2, asr #31
   2036c:	blt	2055c <__assert_fail@plt+0xf474>
   20370:	b	2057c <__assert_fail@plt+0xf494>
   20374:	b	20378 <__assert_fail@plt+0xf290>
   20378:	ldr	r0, [pc, #3884]	; 212ac <__assert_fail@plt+0x101c4>
   2037c:	ldr	r1, [fp, #-12]
   20380:	cmp	r1, r0
   20384:	blt	2039c <__assert_fail@plt+0xf2b4>
   20388:	b	203a8 <__assert_fail@plt+0xf2c0>
   2038c:	ldr	r0, [fp, #-12]
   20390:	movw	r1, #0
   20394:	cmp	r1, r0
   20398:	bge	203a8 <__assert_fail@plt+0xf2c0>
   2039c:	movw	r0, #0
   203a0:	str	r0, [fp, #-44]	; 0xffffffd4
   203a4:	b	203c0 <__assert_fail@plt+0xf2d8>
   203a8:	ldr	r0, [pc, #3840]	; 212b0 <__assert_fail@plt+0x101c8>
   203ac:	ldr	r1, [fp, #-12]
   203b0:	movw	r2, #0
   203b4:	sub	r1, r2, r1
   203b8:	sdiv	r0, r0, r1
   203bc:	str	r0, [fp, #-44]	; 0xffffffd4
   203c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   203c4:	ldr	r1, [fp, #-8]
   203c8:	ldr	r2, [r1]
   203cc:	ldr	r1, [r1, #4]
   203d0:	mvn	r1, r1
   203d4:	mvn	r2, r2
   203d8:	subs	r2, r2, r0
   203dc:	sbcs	r0, r1, r0, asr #31
   203e0:	bge	2055c <__assert_fail@plt+0xf474>
   203e4:	b	2057c <__assert_fail@plt+0xf494>
   203e8:	ldr	r0, [fp, #-12]
   203ec:	cmn	r0, #1
   203f0:	bne	20460 <__assert_fail@plt+0xf378>
   203f4:	b	203f8 <__assert_fail@plt+0xf310>
   203f8:	ldr	r0, [fp, #-8]
   203fc:	ldr	r1, [r0]
   20400:	ldr	r0, [r0, #4]
   20404:	adds	r1, r1, #-2147483648	; 0x80000000
   20408:	sbc	r0, r0, #0
   2040c:	rsbs	r1, r1, #0
   20410:	rscs	r0, r0, #0
   20414:	blt	2055c <__assert_fail@plt+0xf474>
   20418:	b	2057c <__assert_fail@plt+0xf494>
   2041c:	ldr	r0, [fp, #-8]
   20420:	ldr	r1, [r0]
   20424:	ldr	r0, [r0, #4]
   20428:	subs	r1, r1, #1
   2042c:	sbcs	r0, r0, #0
   20430:	blt	2057c <__assert_fail@plt+0xf494>
   20434:	b	20438 <__assert_fail@plt+0xf350>
   20438:	ldr	r0, [fp, #-8]
   2043c:	ldr	r1, [r0]
   20440:	ldr	r0, [r0, #4]
   20444:	subs	r1, r1, #1
   20448:	sbc	r0, r0, #0
   2044c:	mvn	r2, #-2147483648	; 0x80000000
   20450:	subs	r1, r2, r1
   20454:	rscs	r0, r0, #0
   20458:	blt	2055c <__assert_fail@plt+0xf474>
   2045c:	b	2057c <__assert_fail@plt+0xf494>
   20460:	ldr	r0, [fp, #-12]
   20464:	mov	r1, #-2147483648	; 0x80000000
   20468:	sdiv	r0, r1, r0
   2046c:	ldr	r1, [fp, #-8]
   20470:	ldr	r2, [r1]
   20474:	ldr	r1, [r1, #4]
   20478:	subs	r2, r0, r2
   2047c:	rscs	r0, r1, r0, asr #31
   20480:	blt	2055c <__assert_fail@plt+0xf474>
   20484:	b	2057c <__assert_fail@plt+0xf494>
   20488:	ldr	r0, [fp, #-12]
   2048c:	cmp	r0, #0
   20490:	bne	20498 <__assert_fail@plt+0xf3b0>
   20494:	b	2057c <__assert_fail@plt+0xf494>
   20498:	ldr	r0, [fp, #-8]
   2049c:	ldr	r0, [r0, #4]
   204a0:	cmn	r0, #1
   204a4:	bgt	20534 <__assert_fail@plt+0xf44c>
   204a8:	b	204ac <__assert_fail@plt+0xf3c4>
   204ac:	b	204b0 <__assert_fail@plt+0xf3c8>
   204b0:	b	20508 <__assert_fail@plt+0xf420>
   204b4:	b	20508 <__assert_fail@plt+0xf420>
   204b8:	ldr	r0, [fp, #-8]
   204bc:	ldr	r1, [r0]
   204c0:	ldr	r0, [r0, #4]
   204c4:	and	r0, r1, r0
   204c8:	cmn	r0, #1
   204cc:	bne	20508 <__assert_fail@plt+0xf420>
   204d0:	b	204d4 <__assert_fail@plt+0xf3ec>
   204d4:	b	204d8 <__assert_fail@plt+0xf3f0>
   204d8:	ldr	r0, [fp, #-12]
   204dc:	add	r0, r0, #-2147483648	; 0x80000000
   204e0:	movw	r1, #0
   204e4:	cmp	r1, r0
   204e8:	blt	2055c <__assert_fail@plt+0xf474>
   204ec:	b	2057c <__assert_fail@plt+0xf494>
   204f0:	ldr	r0, [pc, #3512]	; 212b0 <__assert_fail@plt+0x101c8>
   204f4:	ldr	r1, [fp, #-12]
   204f8:	sub	r1, r1, #1
   204fc:	cmp	r0, r1
   20500:	blt	2055c <__assert_fail@plt+0xf474>
   20504:	b	2057c <__assert_fail@plt+0xf494>
   20508:	ldr	r0, [fp, #-8]
   2050c:	ldr	r2, [r0]
   20510:	ldr	r3, [r0, #4]
   20514:	mov	r0, #-2147483648	; 0x80000000
   20518:	mvn	r1, #0
   2051c:	bl	21990 <__assert_fail@plt+0x108a8>
   20520:	ldr	r2, [fp, #-12]
   20524:	subs	r0, r0, r2
   20528:	sbcs	r1, r1, r2, asr #31
   2052c:	blt	2055c <__assert_fail@plt+0xf474>
   20530:	b	2057c <__assert_fail@plt+0xf494>
   20534:	ldr	r0, [fp, #-12]
   20538:	mvn	r1, #-2147483648	; 0x80000000
   2053c:	sdiv	r0, r1, r0
   20540:	ldr	r1, [fp, #-8]
   20544:	ldr	r2, [r1]
   20548:	ldr	r1, [r1, #4]
   2054c:	subs	r2, r0, r2
   20550:	rscs	r0, r1, r0, asr #31
   20554:	bge	2057c <__assert_fail@plt+0xf494>
   20558:	b	2055c <__assert_fail@plt+0xf474>
   2055c:	ldr	r0, [fp, #-8]
   20560:	ldr	r0, [r0]
   20564:	ldr	r1, [fp, #-12]
   20568:	mul	r0, r0, r1
   2056c:	asr	r1, r0, #31
   20570:	str	r0, [fp, #-24]	; 0xffffffe8
   20574:	str	r1, [fp, #-20]	; 0xffffffec
   20578:	b	21250 <__assert_fail@plt+0x10168>
   2057c:	ldr	r0, [fp, #-8]
   20580:	ldr	r0, [r0]
   20584:	ldr	r1, [fp, #-12]
   20588:	mul	r0, r0, r1
   2058c:	asr	r1, r0, #31
   20590:	str	r0, [fp, #-24]	; 0xffffffe8
   20594:	str	r1, [fp, #-20]	; 0xffffffec
   20598:	b	21284 <__assert_fail@plt+0x1019c>
   2059c:	ldr	r0, [fp, #-12]
   205a0:	cmp	r0, #0
   205a4:	bge	206ec <__assert_fail@plt+0xf604>
   205a8:	ldr	r0, [fp, #-8]
   205ac:	ldr	r0, [r0, #4]
   205b0:	cmn	r0, #1
   205b4:	bgt	2065c <__assert_fail@plt+0xf574>
   205b8:	b	205bc <__assert_fail@plt+0xf4d4>
   205bc:	b	205e8 <__assert_fail@plt+0xf500>
   205c0:	ldr	r0, [fp, #-8]
   205c4:	ldr	r1, [r0]
   205c8:	ldr	r0, [r0, #4]
   205cc:	ldr	r2, [fp, #-12]
   205d0:	mvn	r3, #0
   205d4:	udiv	r2, r3, r2
   205d8:	subs	r1, r1, r2
   205dc:	sbcs	r0, r0, #0
   205e0:	blt	207ac <__assert_fail@plt+0xf6c4>
   205e4:	b	207cc <__assert_fail@plt+0xf6e4>
   205e8:	b	205ec <__assert_fail@plt+0xf504>
   205ec:	ldr	r0, [pc, #3256]	; 212ac <__assert_fail@plt+0x101c4>
   205f0:	ldr	r1, [fp, #-12]
   205f4:	cmp	r1, r0
   205f8:	blt	20610 <__assert_fail@plt+0xf528>
   205fc:	b	2061c <__assert_fail@plt+0xf534>
   20600:	ldr	r0, [fp, #-12]
   20604:	movw	r1, #0
   20608:	cmp	r1, r0
   2060c:	bge	2061c <__assert_fail@plt+0xf534>
   20610:	movw	r0, #1
   20614:	str	r0, [fp, #-48]	; 0xffffffd0
   20618:	b	20634 <__assert_fail@plt+0xf54c>
   2061c:	ldr	r0, [fp, #-12]
   20620:	movw	r1, #0
   20624:	sub	r0, r1, r0
   20628:	mvn	r1, #0
   2062c:	udiv	r0, r1, r0
   20630:	str	r0, [fp, #-48]	; 0xffffffd0
   20634:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20638:	ldr	r1, [fp, #-8]
   2063c:	ldr	r2, [r1]
   20640:	ldr	r1, [r1, #4]
   20644:	mvn	r1, r1
   20648:	mvn	r2, r2
   2064c:	subs	r0, r2, r0
   20650:	sbcs	r1, r1, #0
   20654:	bge	207ac <__assert_fail@plt+0xf6c4>
   20658:	b	207cc <__assert_fail@plt+0xf6e4>
   2065c:	b	20660 <__assert_fail@plt+0xf578>
   20660:	b	206d0 <__assert_fail@plt+0xf5e8>
   20664:	b	206d0 <__assert_fail@plt+0xf5e8>
   20668:	ldr	r0, [fp, #-12]
   2066c:	cmn	r0, #1
   20670:	bne	206d0 <__assert_fail@plt+0xf5e8>
   20674:	b	20678 <__assert_fail@plt+0xf590>
   20678:	ldr	r0, [fp, #-8]
   2067c:	ldr	r1, [r0]
   20680:	ldr	r0, [r0, #4]
   20684:	rsbs	r1, r1, #0
   20688:	rscs	r0, r0, #0
   2068c:	blt	207ac <__assert_fail@plt+0xf6c4>
   20690:	b	207cc <__assert_fail@plt+0xf6e4>
   20694:	ldr	r0, [fp, #-8]
   20698:	ldr	r1, [r0]
   2069c:	ldr	r0, [r0, #4]
   206a0:	subs	r1, r1, #1
   206a4:	sbcs	r0, r0, #0
   206a8:	blt	207cc <__assert_fail@plt+0xf6e4>
   206ac:	b	206b0 <__assert_fail@plt+0xf5c8>
   206b0:	ldr	r0, [fp, #-8]
   206b4:	ldr	r1, [r0]
   206b8:	ldr	r0, [r0, #4]
   206bc:	subs	r1, r1, #1
   206c0:	sbc	r0, r0, #0
   206c4:	cmn	r0, #1
   206c8:	bgt	207ac <__assert_fail@plt+0xf6c4>
   206cc:	b	207cc <__assert_fail@plt+0xf6e4>
   206d0:	ldr	r0, [fp, #-8]
   206d4:	ldr	r1, [r0]
   206d8:	ldr	r0, [r0, #4]
   206dc:	rsbs	r1, r1, #0
   206e0:	rscs	r0, r0, #0
   206e4:	blt	207ac <__assert_fail@plt+0xf6c4>
   206e8:	b	207cc <__assert_fail@plt+0xf6e4>
   206ec:	ldr	r0, [fp, #-12]
   206f0:	cmp	r0, #0
   206f4:	bne	206fc <__assert_fail@plt+0xf614>
   206f8:	b	207cc <__assert_fail@plt+0xf6e4>
   206fc:	ldr	r0, [fp, #-8]
   20700:	ldr	r0, [r0, #4]
   20704:	cmn	r0, #1
   20708:	bgt	20784 <__assert_fail@plt+0xf69c>
   2070c:	b	20710 <__assert_fail@plt+0xf628>
   20710:	b	20714 <__assert_fail@plt+0xf62c>
   20714:	b	2076c <__assert_fail@plt+0xf684>
   20718:	b	2076c <__assert_fail@plt+0xf684>
   2071c:	ldr	r0, [fp, #-8]
   20720:	ldr	r1, [r0]
   20724:	ldr	r0, [r0, #4]
   20728:	and	r0, r1, r0
   2072c:	cmn	r0, #1
   20730:	bne	2076c <__assert_fail@plt+0xf684>
   20734:	b	20738 <__assert_fail@plt+0xf650>
   20738:	b	2073c <__assert_fail@plt+0xf654>
   2073c:	ldr	r0, [fp, #-12]
   20740:	add	r0, r0, #0
   20744:	movw	r1, #0
   20748:	cmp	r1, r0
   2074c:	blt	207ac <__assert_fail@plt+0xf6c4>
   20750:	b	207cc <__assert_fail@plt+0xf6e4>
   20754:	ldr	r0, [fp, #-12]
   20758:	sub	r0, r0, #1
   2075c:	mvn	r1, #0
   20760:	cmp	r1, r0
   20764:	blt	207ac <__assert_fail@plt+0xf6c4>
   20768:	b	207cc <__assert_fail@plt+0xf6e4>
   2076c:	ldr	r0, [fp, #-12]
   20770:	rsbs	r1, r0, #0
   20774:	mov	r2, #0
   20778:	sbcs	r0, r2, r0, asr #31
   2077c:	blt	207ac <__assert_fail@plt+0xf6c4>
   20780:	b	207cc <__assert_fail@plt+0xf6e4>
   20784:	ldr	r0, [fp, #-12]
   20788:	mvn	r1, #0
   2078c:	udiv	r0, r1, r0
   20790:	ldr	r1, [fp, #-8]
   20794:	ldr	r2, [r1]
   20798:	ldr	r1, [r1, #4]
   2079c:	subs	r0, r0, r2
   207a0:	rscs	r1, r1, #0
   207a4:	bge	207cc <__assert_fail@plt+0xf6e4>
   207a8:	b	207ac <__assert_fail@plt+0xf6c4>
   207ac:	ldr	r0, [fp, #-8]
   207b0:	ldr	r0, [r0]
   207b4:	ldr	r1, [fp, #-12]
   207b8:	mul	r0, r0, r1
   207bc:	mov	r1, #0
   207c0:	str	r1, [fp, #-20]	; 0xffffffec
   207c4:	str	r0, [fp, #-24]	; 0xffffffe8
   207c8:	b	21250 <__assert_fail@plt+0x10168>
   207cc:	ldr	r0, [fp, #-8]
   207d0:	ldr	r0, [r0]
   207d4:	ldr	r1, [fp, #-12]
   207d8:	mul	r0, r0, r1
   207dc:	mov	r1, #0
   207e0:	str	r1, [fp, #-20]	; 0xffffffec
   207e4:	str	r0, [fp, #-24]	; 0xffffffe8
   207e8:	b	21284 <__assert_fail@plt+0x1019c>
   207ec:	b	20cbc <__assert_fail@plt+0xfbd4>
   207f0:	b	207f4 <__assert_fail@plt+0xf70c>
   207f4:	ldr	r0, [fp, #-12]
   207f8:	cmp	r0, #0
   207fc:	bge	20954 <__assert_fail@plt+0xf86c>
   20800:	ldr	r0, [fp, #-8]
   20804:	ldr	r0, [r0, #4]
   20808:	cmn	r0, #1
   2080c:	bgt	208b4 <__assert_fail@plt+0xf7cc>
   20810:	b	20814 <__assert_fail@plt+0xf72c>
   20814:	b	20818 <__assert_fail@plt+0xf730>
   20818:	ldr	r0, [fp, #-8]
   2081c:	ldr	r1, [r0]
   20820:	ldr	r0, [r0, #4]
   20824:	ldr	r2, [fp, #-12]
   20828:	mvn	r3, #-2147483648	; 0x80000000
   2082c:	sdiv	r2, r3, r2
   20830:	subs	r1, r1, r2
   20834:	sbcs	r0, r0, r2, asr #31
   20838:	blt	20a2c <__assert_fail@plt+0xf944>
   2083c:	b	20a4c <__assert_fail@plt+0xf964>
   20840:	b	20844 <__assert_fail@plt+0xf75c>
   20844:	ldr	r0, [pc, #2656]	; 212ac <__assert_fail@plt+0x101c4>
   20848:	ldr	r1, [fp, #-12]
   2084c:	cmp	r1, r0
   20850:	blt	20868 <__assert_fail@plt+0xf780>
   20854:	b	20874 <__assert_fail@plt+0xf78c>
   20858:	ldr	r0, [fp, #-12]
   2085c:	movw	r1, #0
   20860:	cmp	r1, r0
   20864:	bge	20874 <__assert_fail@plt+0xf78c>
   20868:	movw	r0, #0
   2086c:	str	r0, [fp, #-52]	; 0xffffffcc
   20870:	b	2088c <__assert_fail@plt+0xf7a4>
   20874:	ldr	r0, [pc, #2612]	; 212b0 <__assert_fail@plt+0x101c8>
   20878:	ldr	r1, [fp, #-12]
   2087c:	movw	r2, #0
   20880:	sub	r1, r2, r1
   20884:	sdiv	r0, r0, r1
   20888:	str	r0, [fp, #-52]	; 0xffffffcc
   2088c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20890:	ldr	r1, [fp, #-8]
   20894:	ldr	r2, [r1]
   20898:	ldr	r1, [r1, #4]
   2089c:	mvn	r1, r1
   208a0:	mvn	r2, r2
   208a4:	subs	r2, r2, r0
   208a8:	sbcs	r0, r1, r0, asr #31
   208ac:	bge	20a2c <__assert_fail@plt+0xf944>
   208b0:	b	20a4c <__assert_fail@plt+0xf964>
   208b4:	ldr	r0, [fp, #-12]
   208b8:	cmn	r0, #1
   208bc:	bne	2092c <__assert_fail@plt+0xf844>
   208c0:	b	208c4 <__assert_fail@plt+0xf7dc>
   208c4:	ldr	r0, [fp, #-8]
   208c8:	ldr	r1, [r0]
   208cc:	ldr	r0, [r0, #4]
   208d0:	adds	r1, r1, #-2147483648	; 0x80000000
   208d4:	sbc	r0, r0, #0
   208d8:	rsbs	r1, r1, #0
   208dc:	rscs	r0, r0, #0
   208e0:	blt	20a2c <__assert_fail@plt+0xf944>
   208e4:	b	20a4c <__assert_fail@plt+0xf964>
   208e8:	ldr	r0, [fp, #-8]
   208ec:	ldr	r1, [r0]
   208f0:	ldr	r0, [r0, #4]
   208f4:	subs	r1, r1, #1
   208f8:	sbcs	r0, r0, #0
   208fc:	blt	20a4c <__assert_fail@plt+0xf964>
   20900:	b	20904 <__assert_fail@plt+0xf81c>
   20904:	ldr	r0, [fp, #-8]
   20908:	ldr	r1, [r0]
   2090c:	ldr	r0, [r0, #4]
   20910:	subs	r1, r1, #1
   20914:	sbc	r0, r0, #0
   20918:	mvn	r2, #-2147483648	; 0x80000000
   2091c:	subs	r1, r2, r1
   20920:	rscs	r0, r0, #0
   20924:	blt	20a2c <__assert_fail@plt+0xf944>
   20928:	b	20a4c <__assert_fail@plt+0xf964>
   2092c:	ldr	r0, [fp, #-12]
   20930:	mov	r1, #-2147483648	; 0x80000000
   20934:	sdiv	r0, r1, r0
   20938:	ldr	r1, [fp, #-8]
   2093c:	ldr	r2, [r1]
   20940:	ldr	r1, [r1, #4]
   20944:	subs	r2, r0, r2
   20948:	rscs	r0, r1, r0, asr #31
   2094c:	blt	20a2c <__assert_fail@plt+0xf944>
   20950:	b	20a4c <__assert_fail@plt+0xf964>
   20954:	ldr	r0, [fp, #-12]
   20958:	cmp	r0, #0
   2095c:	bne	20964 <__assert_fail@plt+0xf87c>
   20960:	b	20a4c <__assert_fail@plt+0xf964>
   20964:	ldr	r0, [fp, #-8]
   20968:	ldr	r0, [r0, #4]
   2096c:	cmn	r0, #1
   20970:	bgt	20a04 <__assert_fail@plt+0xf91c>
   20974:	b	20978 <__assert_fail@plt+0xf890>
   20978:	b	2097c <__assert_fail@plt+0xf894>
   2097c:	b	209d8 <__assert_fail@plt+0xf8f0>
   20980:	b	209d8 <__assert_fail@plt+0xf8f0>
   20984:	ldr	r0, [fp, #-8]
   20988:	ldr	r1, [r0]
   2098c:	ldr	r0, [r0, #4]
   20990:	and	r0, r1, r0
   20994:	cmn	r0, #1
   20998:	bne	209d8 <__assert_fail@plt+0xf8f0>
   2099c:	b	209a4 <__assert_fail@plt+0xf8bc>
   209a0:	andhi	r0, r0, r1
   209a4:	b	209a8 <__assert_fail@plt+0xf8c0>
   209a8:	ldr	r0, [fp, #-12]
   209ac:	add	r0, r0, #-2147483648	; 0x80000000
   209b0:	movw	r1, #0
   209b4:	cmp	r1, r0
   209b8:	blt	20a2c <__assert_fail@plt+0xf944>
   209bc:	b	20a4c <__assert_fail@plt+0xf964>
   209c0:	ldr	r0, [pc, #2280]	; 212b0 <__assert_fail@plt+0x101c8>
   209c4:	ldr	r1, [fp, #-12]
   209c8:	sub	r1, r1, #1
   209cc:	cmp	r0, r1
   209d0:	blt	20a2c <__assert_fail@plt+0xf944>
   209d4:	b	20a4c <__assert_fail@plt+0xf964>
   209d8:	ldr	r0, [fp, #-8]
   209dc:	ldr	r2, [r0]
   209e0:	ldr	r3, [r0, #4]
   209e4:	mov	r0, #-2147483648	; 0x80000000
   209e8:	mvn	r1, #0
   209ec:	bl	21990 <__assert_fail@plt+0x108a8>
   209f0:	ldr	r2, [fp, #-12]
   209f4:	subs	r0, r0, r2
   209f8:	sbcs	r1, r1, r2, asr #31
   209fc:	blt	20a2c <__assert_fail@plt+0xf944>
   20a00:	b	20a4c <__assert_fail@plt+0xf964>
   20a04:	ldr	r0, [fp, #-12]
   20a08:	mvn	r1, #-2147483648	; 0x80000000
   20a0c:	sdiv	r0, r1, r0
   20a10:	ldr	r1, [fp, #-8]
   20a14:	ldr	r2, [r1]
   20a18:	ldr	r1, [r1, #4]
   20a1c:	subs	r2, r0, r2
   20a20:	rscs	r0, r1, r0, asr #31
   20a24:	bge	20a4c <__assert_fail@plt+0xf964>
   20a28:	b	20a2c <__assert_fail@plt+0xf944>
   20a2c:	ldr	r0, [fp, #-8]
   20a30:	ldr	r0, [r0]
   20a34:	ldr	r1, [fp, #-12]
   20a38:	mul	r0, r0, r1
   20a3c:	asr	r1, r0, #31
   20a40:	str	r0, [fp, #-24]	; 0xffffffe8
   20a44:	str	r1, [fp, #-20]	; 0xffffffec
   20a48:	b	21250 <__assert_fail@plt+0x10168>
   20a4c:	ldr	r0, [fp, #-8]
   20a50:	ldr	r0, [r0]
   20a54:	ldr	r1, [fp, #-12]
   20a58:	mul	r0, r0, r1
   20a5c:	asr	r1, r0, #31
   20a60:	str	r0, [fp, #-24]	; 0xffffffe8
   20a64:	str	r1, [fp, #-20]	; 0xffffffec
   20a68:	b	21284 <__assert_fail@plt+0x1019c>
   20a6c:	ldr	r0, [fp, #-12]
   20a70:	cmp	r0, #0
   20a74:	bge	20bbc <__assert_fail@plt+0xfad4>
   20a78:	ldr	r0, [fp, #-8]
   20a7c:	ldr	r0, [r0, #4]
   20a80:	cmn	r0, #1
   20a84:	bgt	20b2c <__assert_fail@plt+0xfa44>
   20a88:	b	20a8c <__assert_fail@plt+0xf9a4>
   20a8c:	b	20ab8 <__assert_fail@plt+0xf9d0>
   20a90:	ldr	r0, [fp, #-8]
   20a94:	ldr	r1, [r0]
   20a98:	ldr	r0, [r0, #4]
   20a9c:	ldr	r2, [fp, #-12]
   20aa0:	mvn	r3, #0
   20aa4:	udiv	r2, r3, r2
   20aa8:	subs	r1, r1, r2
   20aac:	sbcs	r0, r0, #0
   20ab0:	blt	20c7c <__assert_fail@plt+0xfb94>
   20ab4:	b	20c9c <__assert_fail@plt+0xfbb4>
   20ab8:	b	20abc <__assert_fail@plt+0xf9d4>
   20abc:	ldr	r0, [pc, #2024]	; 212ac <__assert_fail@plt+0x101c4>
   20ac0:	ldr	r1, [fp, #-12]
   20ac4:	cmp	r1, r0
   20ac8:	blt	20ae0 <__assert_fail@plt+0xf9f8>
   20acc:	b	20aec <__assert_fail@plt+0xfa04>
   20ad0:	ldr	r0, [fp, #-12]
   20ad4:	movw	r1, #0
   20ad8:	cmp	r1, r0
   20adc:	bge	20aec <__assert_fail@plt+0xfa04>
   20ae0:	movw	r0, #1
   20ae4:	str	r0, [sp, #56]	; 0x38
   20ae8:	b	20b04 <__assert_fail@plt+0xfa1c>
   20aec:	ldr	r0, [fp, #-12]
   20af0:	movw	r1, #0
   20af4:	sub	r0, r1, r0
   20af8:	mvn	r1, #0
   20afc:	udiv	r0, r1, r0
   20b00:	str	r0, [sp, #56]	; 0x38
   20b04:	ldr	r0, [sp, #56]	; 0x38
   20b08:	ldr	r1, [fp, #-8]
   20b0c:	ldr	r2, [r1]
   20b10:	ldr	r1, [r1, #4]
   20b14:	mvn	r1, r1
   20b18:	mvn	r2, r2
   20b1c:	subs	r0, r2, r0
   20b20:	sbcs	r1, r1, #0
   20b24:	bge	20c7c <__assert_fail@plt+0xfb94>
   20b28:	b	20c9c <__assert_fail@plt+0xfbb4>
   20b2c:	b	20b30 <__assert_fail@plt+0xfa48>
   20b30:	b	20ba0 <__assert_fail@plt+0xfab8>
   20b34:	b	20ba0 <__assert_fail@plt+0xfab8>
   20b38:	ldr	r0, [fp, #-12]
   20b3c:	cmn	r0, #1
   20b40:	bne	20ba0 <__assert_fail@plt+0xfab8>
   20b44:	b	20b48 <__assert_fail@plt+0xfa60>
   20b48:	ldr	r0, [fp, #-8]
   20b4c:	ldr	r1, [r0]
   20b50:	ldr	r0, [r0, #4]
   20b54:	rsbs	r1, r1, #0
   20b58:	rscs	r0, r0, #0
   20b5c:	blt	20c7c <__assert_fail@plt+0xfb94>
   20b60:	b	20c9c <__assert_fail@plt+0xfbb4>
   20b64:	ldr	r0, [fp, #-8]
   20b68:	ldr	r1, [r0]
   20b6c:	ldr	r0, [r0, #4]
   20b70:	subs	r1, r1, #1
   20b74:	sbcs	r0, r0, #0
   20b78:	blt	20c9c <__assert_fail@plt+0xfbb4>
   20b7c:	b	20b80 <__assert_fail@plt+0xfa98>
   20b80:	ldr	r0, [fp, #-8]
   20b84:	ldr	r1, [r0]
   20b88:	ldr	r0, [r0, #4]
   20b8c:	subs	r1, r1, #1
   20b90:	sbc	r0, r0, #0
   20b94:	cmn	r0, #1
   20b98:	bgt	20c7c <__assert_fail@plt+0xfb94>
   20b9c:	b	20c9c <__assert_fail@plt+0xfbb4>
   20ba0:	ldr	r0, [fp, #-8]
   20ba4:	ldr	r1, [r0]
   20ba8:	ldr	r0, [r0, #4]
   20bac:	rsbs	r1, r1, #0
   20bb0:	rscs	r0, r0, #0
   20bb4:	blt	20c7c <__assert_fail@plt+0xfb94>
   20bb8:	b	20c9c <__assert_fail@plt+0xfbb4>
   20bbc:	ldr	r0, [fp, #-12]
   20bc0:	cmp	r0, #0
   20bc4:	bne	20bcc <__assert_fail@plt+0xfae4>
   20bc8:	b	20c9c <__assert_fail@plt+0xfbb4>
   20bcc:	ldr	r0, [fp, #-8]
   20bd0:	ldr	r0, [r0, #4]
   20bd4:	cmn	r0, #1
   20bd8:	bgt	20c54 <__assert_fail@plt+0xfb6c>
   20bdc:	b	20be0 <__assert_fail@plt+0xfaf8>
   20be0:	b	20be4 <__assert_fail@plt+0xfafc>
   20be4:	b	20c3c <__assert_fail@plt+0xfb54>
   20be8:	b	20c3c <__assert_fail@plt+0xfb54>
   20bec:	ldr	r0, [fp, #-8]
   20bf0:	ldr	r1, [r0]
   20bf4:	ldr	r0, [r0, #4]
   20bf8:	and	r0, r1, r0
   20bfc:	cmn	r0, #1
   20c00:	bne	20c3c <__assert_fail@plt+0xfb54>
   20c04:	b	20c08 <__assert_fail@plt+0xfb20>
   20c08:	b	20c0c <__assert_fail@plt+0xfb24>
   20c0c:	ldr	r0, [fp, #-12]
   20c10:	add	r0, r0, #0
   20c14:	movw	r1, #0
   20c18:	cmp	r1, r0
   20c1c:	blt	20c7c <__assert_fail@plt+0xfb94>
   20c20:	b	20c9c <__assert_fail@plt+0xfbb4>
   20c24:	ldr	r0, [fp, #-12]
   20c28:	sub	r0, r0, #1
   20c2c:	mvn	r1, #0
   20c30:	cmp	r1, r0
   20c34:	blt	20c7c <__assert_fail@plt+0xfb94>
   20c38:	b	20c9c <__assert_fail@plt+0xfbb4>
   20c3c:	ldr	r0, [fp, #-12]
   20c40:	rsbs	r1, r0, #0
   20c44:	mov	r2, #0
   20c48:	sbcs	r0, r2, r0, asr #31
   20c4c:	blt	20c7c <__assert_fail@plt+0xfb94>
   20c50:	b	20c9c <__assert_fail@plt+0xfbb4>
   20c54:	ldr	r0, [fp, #-12]
   20c58:	mvn	r1, #0
   20c5c:	udiv	r0, r1, r0
   20c60:	ldr	r1, [fp, #-8]
   20c64:	ldr	r2, [r1]
   20c68:	ldr	r1, [r1, #4]
   20c6c:	subs	r0, r0, r2
   20c70:	rscs	r1, r1, #0
   20c74:	bge	20c9c <__assert_fail@plt+0xfbb4>
   20c78:	b	20c7c <__assert_fail@plt+0xfb94>
   20c7c:	ldr	r0, [fp, #-8]
   20c80:	ldr	r0, [r0]
   20c84:	ldr	r1, [fp, #-12]
   20c88:	mul	r0, r0, r1
   20c8c:	mov	r1, #0
   20c90:	str	r1, [fp, #-20]	; 0xffffffec
   20c94:	str	r0, [fp, #-24]	; 0xffffffe8
   20c98:	b	21250 <__assert_fail@plt+0x10168>
   20c9c:	ldr	r0, [fp, #-8]
   20ca0:	ldr	r0, [r0]
   20ca4:	ldr	r1, [fp, #-12]
   20ca8:	mul	r0, r0, r1
   20cac:	mov	r1, #0
   20cb0:	str	r1, [fp, #-20]	; 0xffffffec
   20cb4:	str	r0, [fp, #-24]	; 0xffffffe8
   20cb8:	b	21284 <__assert_fail@plt+0x1019c>
   20cbc:	b	20cc0 <__assert_fail@plt+0xfbd8>
   20cc0:	ldr	r0, [fp, #-12]
   20cc4:	cmp	r0, #0
   20cc8:	bge	20e64 <__assert_fail@plt+0xfd7c>
   20ccc:	ldr	r0, [fp, #-8]
   20cd0:	ldr	r0, [r0, #4]
   20cd4:	cmn	r0, #1
   20cd8:	bgt	20dc8 <__assert_fail@plt+0xfce0>
   20cdc:	b	20ce0 <__assert_fail@plt+0xfbf8>
   20ce0:	b	20ce4 <__assert_fail@plt+0xfbfc>
   20ce4:	ldr	r0, [fp, #-8]
   20ce8:	ldr	r1, [r0]
   20cec:	ldr	r0, [r0, #4]
   20cf0:	ldr	r2, [fp, #-12]
   20cf4:	asr	r3, r2, #31
   20cf8:	mvn	ip, #0
   20cfc:	mvn	lr, #-2147483648	; 0x80000000
   20d00:	str	r0, [sp, #52]	; 0x34
   20d04:	mov	r0, ip
   20d08:	str	r1, [sp, #48]	; 0x30
   20d0c:	mov	r1, lr
   20d10:	bl	21990 <__assert_fail@plt+0x108a8>
   20d14:	ldr	r2, [sp, #48]	; 0x30
   20d18:	subs	r0, r2, r0
   20d1c:	ldr	r2, [sp, #52]	; 0x34
   20d20:	sbcs	r1, r2, r1
   20d24:	blt	20f40 <__assert_fail@plt+0xfe58>
   20d28:	b	20f6c <__assert_fail@plt+0xfe84>
   20d2c:	b	20d30 <__assert_fail@plt+0xfc48>
   20d30:	ldr	r0, [pc, #1396]	; 212ac <__assert_fail@plt+0x101c4>
   20d34:	ldr	r1, [fp, #-12]
   20d38:	cmp	r1, r0
   20d3c:	blt	20d54 <__assert_fail@plt+0xfc6c>
   20d40:	b	20d68 <__assert_fail@plt+0xfc80>
   20d44:	ldr	r0, [fp, #-12]
   20d48:	movw	r1, #0
   20d4c:	cmp	r1, r0
   20d50:	bge	20d68 <__assert_fail@plt+0xfc80>
   20d54:	mov	r0, #0
   20d58:	mvn	r1, #0
   20d5c:	str	r1, [sp, #44]	; 0x2c
   20d60:	str	r0, [sp, #40]	; 0x28
   20d64:	b	20d9c <__assert_fail@plt+0xfcb4>
   20d68:	ldr	r0, [fp, #-12]
   20d6c:	rsb	r0, r0, #0
   20d70:	asr	r3, r0, #31
   20d74:	mvn	r1, #0
   20d78:	mvn	r2, #-2147483648	; 0x80000000
   20d7c:	str	r0, [sp, #36]	; 0x24
   20d80:	mov	r0, r1
   20d84:	mov	r1, r2
   20d88:	ldr	r2, [sp, #36]	; 0x24
   20d8c:	bl	21990 <__assert_fail@plt+0x108a8>
   20d90:	str	r0, [sp, #44]	; 0x2c
   20d94:	str	r1, [sp, #40]	; 0x28
   20d98:	b	20d9c <__assert_fail@plt+0xfcb4>
   20d9c:	ldr	r0, [sp, #40]	; 0x28
   20da0:	ldr	r1, [sp, #44]	; 0x2c
   20da4:	ldr	r2, [fp, #-8]
   20da8:	ldr	r3, [r2]
   20dac:	ldr	r2, [r2, #4]
   20db0:	mvn	r2, r2
   20db4:	mvn	r3, r3
   20db8:	subs	r1, r3, r1
   20dbc:	sbcs	r0, r2, r0
   20dc0:	bge	20f40 <__assert_fail@plt+0xfe58>
   20dc4:	b	20f6c <__assert_fail@plt+0xfe84>
   20dc8:	ldr	r0, [fp, #-12]
   20dcc:	cmn	r0, #1
   20dd0:	bne	20e24 <__assert_fail@plt+0xfd3c>
   20dd4:	b	20dd8 <__assert_fail@plt+0xfcf0>
   20dd8:	ldr	r0, [fp, #-8]
   20ddc:	ldr	r1, [r0]
   20de0:	ldr	r0, [r0, #4]
   20de4:	add	r0, r0, #-2147483648	; 0x80000000
   20de8:	rsbs	r1, r1, #0
   20dec:	rscs	r0, r0, #0
   20df0:	blt	20f40 <__assert_fail@plt+0xfe58>
   20df4:	b	20f6c <__assert_fail@plt+0xfe84>
   20df8:	ldr	r0, [fp, #-8]
   20dfc:	ldr	r1, [r0]
   20e00:	ldr	r0, [r0, #4]
   20e04:	subs	r1, r1, #1
   20e08:	sbcs	r0, r0, #0
   20e0c:	blt	20f6c <__assert_fail@plt+0xfe84>
   20e10:	b	20e14 <__assert_fail@plt+0xfd2c>
   20e14:	mov	r0, #0
   20e18:	cmp	r0, #0
   20e1c:	bne	20f40 <__assert_fail@plt+0xfe58>
   20e20:	b	20f6c <__assert_fail@plt+0xfe84>
   20e24:	ldr	r0, [fp, #-12]
   20e28:	asr	r3, r0, #31
   20e2c:	mov	r1, #0
   20e30:	mov	r2, #-2147483648	; 0x80000000
   20e34:	str	r0, [sp, #32]
   20e38:	mov	r0, r1
   20e3c:	mov	r1, r2
   20e40:	ldr	r2, [sp, #32]
   20e44:	bl	21990 <__assert_fail@plt+0x108a8>
   20e48:	ldr	r2, [fp, #-8]
   20e4c:	ldr	r3, [r2]
   20e50:	ldr	r2, [r2, #4]
   20e54:	subs	r0, r0, r3
   20e58:	sbcs	r1, r1, r2
   20e5c:	blt	20f40 <__assert_fail@plt+0xfe58>
   20e60:	b	20f6c <__assert_fail@plt+0xfe84>
   20e64:	ldr	r0, [fp, #-12]
   20e68:	cmp	r0, #0
   20e6c:	bne	20e74 <__assert_fail@plt+0xfd8c>
   20e70:	b	20f6c <__assert_fail@plt+0xfe84>
   20e74:	ldr	r0, [fp, #-8]
   20e78:	ldr	r0, [r0, #4]
   20e7c:	cmn	r0, #1
   20e80:	bgt	20f00 <__assert_fail@plt+0xfe18>
   20e84:	b	20e88 <__assert_fail@plt+0xfda0>
   20e88:	ldr	r0, [fp, #-8]
   20e8c:	ldr	r1, [r0]
   20e90:	ldr	r0, [r0, #4]
   20e94:	and	r0, r1, r0
   20e98:	cmn	r0, #1
   20e9c:	bne	20ed4 <__assert_fail@plt+0xfdec>
   20ea0:	b	20ea4 <__assert_fail@plt+0xfdbc>
   20ea4:	b	20ea8 <__assert_fail@plt+0xfdc0>
   20ea8:	ldr	r0, [fp, #-12]
   20eac:	mov	r1, #-2147483648	; 0x80000000
   20eb0:	add	r1, r1, r0, asr #31
   20eb4:	rsbs	r0, r0, #0
   20eb8:	rscs	r1, r1, #0
   20ebc:	blt	20f40 <__assert_fail@plt+0xfe58>
   20ec0:	b	20f6c <__assert_fail@plt+0xfe84>
   20ec4:	mov	r0, #0
   20ec8:	cmp	r0, #0
   20ecc:	bne	20f40 <__assert_fail@plt+0xfe58>
   20ed0:	b	20f6c <__assert_fail@plt+0xfe84>
   20ed4:	ldr	r0, [fp, #-8]
   20ed8:	ldr	r2, [r0]
   20edc:	ldr	r3, [r0, #4]
   20ee0:	mov	r0, #0
   20ee4:	mov	r1, #-2147483648	; 0x80000000
   20ee8:	bl	21990 <__assert_fail@plt+0x108a8>
   20eec:	ldr	r2, [fp, #-12]
   20ef0:	subs	r0, r0, r2
   20ef4:	sbcs	r1, r1, r2, asr #31
   20ef8:	blt	20f40 <__assert_fail@plt+0xfe58>
   20efc:	b	20f6c <__assert_fail@plt+0xfe84>
   20f00:	ldr	r0, [fp, #-12]
   20f04:	asr	r3, r0, #31
   20f08:	mvn	r1, #0
   20f0c:	mvn	r2, #-2147483648	; 0x80000000
   20f10:	str	r0, [sp, #28]
   20f14:	mov	r0, r1
   20f18:	mov	r1, r2
   20f1c:	ldr	r2, [sp, #28]
   20f20:	bl	21990 <__assert_fail@plt+0x108a8>
   20f24:	ldr	r2, [fp, #-8]
   20f28:	ldr	r3, [r2]
   20f2c:	ldr	r2, [r2, #4]
   20f30:	subs	r0, r0, r3
   20f34:	sbcs	r1, r1, r2
   20f38:	bge	20f6c <__assert_fail@plt+0xfe84>
   20f3c:	b	20f40 <__assert_fail@plt+0xfe58>
   20f40:	ldr	r0, [fp, #-8]
   20f44:	ldr	r1, [r0]
   20f48:	ldr	r0, [r0, #4]
   20f4c:	ldr	r2, [fp, #-12]
   20f50:	asr	r3, r2, #31
   20f54:	umull	ip, lr, r1, r2
   20f58:	mla	r1, r1, r3, lr
   20f5c:	mla	r0, r0, r2, r1
   20f60:	str	ip, [fp, #-24]	; 0xffffffe8
   20f64:	str	r0, [fp, #-20]	; 0xffffffec
   20f68:	b	21250 <__assert_fail@plt+0x10168>
   20f6c:	ldr	r0, [fp, #-8]
   20f70:	ldr	r1, [r0]
   20f74:	ldr	r0, [r0, #4]
   20f78:	ldr	r2, [fp, #-12]
   20f7c:	asr	r3, r2, #31
   20f80:	umull	ip, lr, r1, r2
   20f84:	mla	r1, r1, r3, lr
   20f88:	mla	r0, r0, r2, r1
   20f8c:	str	ip, [fp, #-24]	; 0xffffffe8
   20f90:	str	r0, [fp, #-20]	; 0xffffffec
   20f94:	b	21284 <__assert_fail@plt+0x1019c>
   20f98:	ldr	r0, [fp, #-12]
   20f9c:	cmp	r0, #0
   20fa0:	bge	21128 <__assert_fail@plt+0x10040>
   20fa4:	ldr	r0, [fp, #-8]
   20fa8:	ldr	r0, [r0, #4]
   20fac:	cmn	r0, #1
   20fb0:	bgt	21098 <__assert_fail@plt+0xffb0>
   20fb4:	b	20fb8 <__assert_fail@plt+0xfed0>
   20fb8:	b	21004 <__assert_fail@plt+0xff1c>
   20fbc:			; <UNDEFINED> instruction: 0xffff8000
   20fc0:	ldr	r0, [fp, #-8]
   20fc4:	ldr	r1, [r0]
   20fc8:	ldr	r0, [r0, #4]
   20fcc:	ldr	r2, [fp, #-12]
   20fd0:	asr	r3, r2, #31
   20fd4:	mvn	ip, #0
   20fd8:	str	r0, [sp, #24]
   20fdc:	mov	r0, ip
   20fe0:	str	r1, [sp, #20]
   20fe4:	mov	r1, ip
   20fe8:	bl	21a64 <__assert_fail@plt+0x1097c>
   20fec:	ldr	r2, [sp, #20]
   20ff0:	subs	r0, r2, r0
   20ff4:	ldr	r2, [sp, #24]
   20ff8:	sbcs	r1, r2, r1
   20ffc:	bcc	211f8 <__assert_fail@plt+0x10110>
   21000:	b	21224 <__assert_fail@plt+0x1013c>
   21004:	b	21008 <__assert_fail@plt+0xff20>
   21008:	ldr	r0, [pc, #668]	; 212ac <__assert_fail@plt+0x101c4>
   2100c:	ldr	r1, [fp, #-12]
   21010:	cmp	r1, r0
   21014:	blt	2102c <__assert_fail@plt+0xff44>
   21018:	b	21040 <__assert_fail@plt+0xff58>
   2101c:	ldr	r0, [fp, #-12]
   21020:	movw	r1, #0
   21024:	cmp	r1, r0
   21028:	bge	21040 <__assert_fail@plt+0xff58>
   2102c:	mov	r0, #1
   21030:	mvn	r1, #0
   21034:	str	r1, [sp, #16]
   21038:	str	r0, [sp, #12]
   2103c:	b	2106c <__assert_fail@plt+0xff84>
   21040:	ldr	r0, [fp, #-12]
   21044:	rsb	r0, r0, #0
   21048:	asr	r3, r0, #31
   2104c:	mvn	r1, #0
   21050:	str	r0, [sp, #8]
   21054:	mov	r0, r1
   21058:	ldr	r2, [sp, #8]
   2105c:	bl	21a64 <__assert_fail@plt+0x1097c>
   21060:	str	r0, [sp, #16]
   21064:	str	r1, [sp, #12]
   21068:	b	2106c <__assert_fail@plt+0xff84>
   2106c:	ldr	r0, [sp, #12]
   21070:	ldr	r1, [sp, #16]
   21074:	ldr	r2, [fp, #-8]
   21078:	ldr	r3, [r2]
   2107c:	ldr	r2, [r2, #4]
   21080:	mvn	r2, r2
   21084:	mvn	r3, r3
   21088:	subs	r1, r3, r1
   2108c:	sbcs	r0, r2, r0
   21090:	bcs	211f8 <__assert_fail@plt+0x10110>
   21094:	b	21224 <__assert_fail@plt+0x1013c>
   21098:	b	2109c <__assert_fail@plt+0xffb4>
   2109c:	b	2110c <__assert_fail@plt+0x10024>
   210a0:	b	2110c <__assert_fail@plt+0x10024>
   210a4:	ldr	r0, [fp, #-12]
   210a8:	cmn	r0, #1
   210ac:	bne	2110c <__assert_fail@plt+0x10024>
   210b0:	b	210b4 <__assert_fail@plt+0xffcc>
   210b4:	ldr	r0, [fp, #-8]
   210b8:	ldr	r1, [r0]
   210bc:	ldr	r0, [r0, #4]
   210c0:	rsbs	r1, r1, #0
   210c4:	rscs	r0, r0, #0
   210c8:	blt	211f8 <__assert_fail@plt+0x10110>
   210cc:	b	21224 <__assert_fail@plt+0x1013c>
   210d0:	ldr	r0, [fp, #-8]
   210d4:	ldr	r1, [r0]
   210d8:	ldr	r0, [r0, #4]
   210dc:	subs	r1, r1, #1
   210e0:	sbcs	r0, r0, #0
   210e4:	blt	21224 <__assert_fail@plt+0x1013c>
   210e8:	b	210ec <__assert_fail@plt+0x10004>
   210ec:	ldr	r0, [fp, #-8]
   210f0:	ldr	r1, [r0]
   210f4:	ldr	r0, [r0, #4]
   210f8:	subs	r1, r1, #1
   210fc:	sbc	r0, r0, #0
   21100:	cmn	r0, #1
   21104:	bgt	211f8 <__assert_fail@plt+0x10110>
   21108:	b	21224 <__assert_fail@plt+0x1013c>
   2110c:	ldr	r0, [fp, #-8]
   21110:	ldr	r1, [r0]
   21114:	ldr	r0, [r0, #4]
   21118:	rsbs	r1, r1, #0
   2111c:	rscs	r0, r0, #0
   21120:	blt	211f8 <__assert_fail@plt+0x10110>
   21124:	b	21224 <__assert_fail@plt+0x1013c>
   21128:	ldr	r0, [fp, #-12]
   2112c:	cmp	r0, #0
   21130:	bne	21138 <__assert_fail@plt+0x10050>
   21134:	b	21224 <__assert_fail@plt+0x1013c>
   21138:	ldr	r0, [fp, #-8]
   2113c:	ldr	r0, [r0, #4]
   21140:	cmn	r0, #1
   21144:	bgt	211c0 <__assert_fail@plt+0x100d8>
   21148:	b	2114c <__assert_fail@plt+0x10064>
   2114c:	b	21150 <__assert_fail@plt+0x10068>
   21150:	b	211a8 <__assert_fail@plt+0x100c0>
   21154:	b	211a8 <__assert_fail@plt+0x100c0>
   21158:	ldr	r0, [fp, #-8]
   2115c:	ldr	r1, [r0]
   21160:	ldr	r0, [r0, #4]
   21164:	and	r0, r1, r0
   21168:	cmn	r0, #1
   2116c:	bne	211a8 <__assert_fail@plt+0x100c0>
   21170:	b	21174 <__assert_fail@plt+0x1008c>
   21174:	b	21178 <__assert_fail@plt+0x10090>
   21178:	ldr	r0, [fp, #-12]
   2117c:	add	r0, r0, #0
   21180:	movw	r1, #0
   21184:	cmp	r1, r0
   21188:	blt	211f8 <__assert_fail@plt+0x10110>
   2118c:	b	21224 <__assert_fail@plt+0x1013c>
   21190:	ldr	r0, [fp, #-12]
   21194:	sub	r0, r0, #1
   21198:	mvn	r1, #0
   2119c:	cmp	r1, r0
   211a0:	blt	211f8 <__assert_fail@plt+0x10110>
   211a4:	b	21224 <__assert_fail@plt+0x1013c>
   211a8:	ldr	r0, [fp, #-12]
   211ac:	rsbs	r1, r0, #0
   211b0:	mov	r2, #0
   211b4:	sbcs	r0, r2, r0, asr #31
   211b8:	blt	211f8 <__assert_fail@plt+0x10110>
   211bc:	b	21224 <__assert_fail@plt+0x1013c>
   211c0:	ldr	r0, [fp, #-12]
   211c4:	asr	r3, r0, #31
   211c8:	mvn	r1, #0
   211cc:	str	r0, [sp, #4]
   211d0:	mov	r0, r1
   211d4:	ldr	r2, [sp, #4]
   211d8:	bl	21a64 <__assert_fail@plt+0x1097c>
   211dc:	ldr	r2, [fp, #-8]
   211e0:	ldr	r3, [r2]
   211e4:	ldr	r2, [r2, #4]
   211e8:	subs	r0, r0, r3
   211ec:	sbcs	r1, r1, r2
   211f0:	bcs	21224 <__assert_fail@plt+0x1013c>
   211f4:	b	211f8 <__assert_fail@plt+0x10110>
   211f8:	ldr	r0, [fp, #-8]
   211fc:	ldr	r1, [r0]
   21200:	ldr	r0, [r0, #4]
   21204:	ldr	r2, [fp, #-12]
   21208:	asr	r3, r2, #31
   2120c:	umull	ip, lr, r1, r2
   21210:	mla	r1, r1, r3, lr
   21214:	mla	r0, r0, r2, r1
   21218:	str	ip, [fp, #-24]	; 0xffffffe8
   2121c:	str	r0, [fp, #-20]	; 0xffffffec
   21220:	b	21250 <__assert_fail@plt+0x10168>
   21224:	ldr	r0, [fp, #-8]
   21228:	ldr	r1, [r0]
   2122c:	ldr	r0, [r0, #4]
   21230:	ldr	r2, [fp, #-12]
   21234:	asr	r3, r2, #31
   21238:	umull	ip, lr, r1, r2
   2123c:	mla	r1, r1, r3, lr
   21240:	mla	r0, r0, r2, r1
   21244:	str	ip, [fp, #-24]	; 0xffffffe8
   21248:	str	r0, [fp, #-20]	; 0xffffffec
   2124c:	b	21284 <__assert_fail@plt+0x1019c>
   21250:	ldr	r0, [fp, #-8]
   21254:	ldr	r1, [r0, #4]
   21258:	mvn	r2, #0
   2125c:	cmp	r1, #0
   21260:	movwmi	r2, #0
   21264:	mvn	r3, #-2147483648	; 0x80000000
   21268:	cmp	r1, #0
   2126c:	movmi	r3, #-2147483648	; 0x80000000
   21270:	str	r3, [r0, #4]
   21274:	str	r2, [r0]
   21278:	movw	r0, #1
   2127c:	str	r0, [fp, #-4]
   21280:	b	212a0 <__assert_fail@plt+0x101b8>
   21284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21288:	ldr	r1, [fp, #-20]	; 0xffffffec
   2128c:	ldr	r2, [fp, #-8]
   21290:	str	r1, [r2, #4]
   21294:	str	r0, [r2]
   21298:	movw	r0, #0
   2129c:	str	r0, [fp, #-4]
   212a0:	ldr	r0, [fp, #-4]
   212a4:	mov	sp, fp
   212a8:	pop	{fp, pc}
   212ac:	andhi	r0, r0, r1
   212b0:	svcvc	0x00ffffff
   212b4:	push	{fp, lr}
   212b8:	mov	fp, sp
   212bc:	sub	sp, sp, #16
   212c0:	str	r0, [fp, #-4]
   212c4:	str	r1, [sp, #8]
   212c8:	str	r2, [sp, #4]
   212cc:	movw	r0, #0
   212d0:	str	r0, [sp]
   212d4:	ldr	r0, [sp, #4]
   212d8:	mvn	r1, #0
   212dc:	add	r1, r0, r1
   212e0:	str	r1, [sp, #4]
   212e4:	cmp	r0, #0
   212e8:	beq	21308 <__assert_fail@plt+0x10220>
   212ec:	ldr	r0, [fp, #-4]
   212f0:	ldr	r1, [sp, #8]
   212f4:	bl	1f930 <__assert_fail@plt+0xe848>
   212f8:	ldr	r1, [sp]
   212fc:	orr	r0, r1, r0
   21300:	str	r0, [sp]
   21304:	b	212d4 <__assert_fail@plt+0x101ec>
   21308:	ldr	r0, [sp]
   2130c:	mov	sp, fp
   21310:	pop	{fp, pc}
   21314:	push	{fp, lr}
   21318:	mov	fp, sp
   2131c:	sub	sp, sp, #16
   21320:	str	r0, [sp, #8]
   21324:	str	r1, [sp, #4]
   21328:	ldr	r0, [sp, #8]
   2132c:	cmp	r0, #0
   21330:	beq	21340 <__assert_fail@plt+0x10258>
   21334:	ldr	r0, [sp, #4]
   21338:	cmp	r0, #0
   2133c:	bne	2134c <__assert_fail@plt+0x10264>
   21340:	movw	r0, #1
   21344:	str	r0, [sp, #4]
   21348:	str	r0, [sp, #8]
   2134c:	ldr	r0, [sp, #4]
   21350:	cmp	r0, #0
   21354:	beq	21388 <__assert_fail@plt+0x102a0>
   21358:	ldr	r0, [pc, #76]	; 213ac <__assert_fail@plt+0x102c4>
   2135c:	ldr	r1, [sp, #4]
   21360:	udiv	r0, r0, r1
   21364:	ldr	r1, [sp, #8]
   21368:	cmp	r0, r1
   2136c:	bcs	21388 <__assert_fail@plt+0x102a0>
   21370:	bl	11010 <__errno_location@plt>
   21374:	movw	r1, #12
   21378:	str	r1, [r0]
   2137c:	movw	r0, #0
   21380:	str	r0, [fp, #-4]
   21384:	b	213a0 <__assert_fail@plt+0x102b8>
   21388:	ldr	r0, [sp, #8]
   2138c:	ldr	r1, [sp, #4]
   21390:	bl	10e6c <calloc@plt>
   21394:	str	r0, [sp]
   21398:	ldr	r0, [sp]
   2139c:	str	r0, [fp, #-4]
   213a0:	ldr	r0, [fp, #-4]
   213a4:	mov	sp, fp
   213a8:	pop	{fp, pc}
   213ac:	svcvc	0x00ffffff
   213b0:	push	{fp, lr}
   213b4:	mov	fp, sp
   213b8:	sub	sp, sp, #16
   213bc:	str	r0, [sp, #8]
   213c0:	ldr	r0, [sp, #8]
   213c4:	cmp	r0, #0
   213c8:	bne	213d4 <__assert_fail@plt+0x102ec>
   213cc:	movw	r0, #1
   213d0:	str	r0, [sp, #8]
   213d4:	ldr	r0, [pc, #64]	; 2141c <__assert_fail@plt+0x10334>
   213d8:	ldr	r1, [sp, #8]
   213dc:	cmp	r0, r1
   213e0:	bcs	213fc <__assert_fail@plt+0x10314>
   213e4:	bl	11010 <__errno_location@plt>
   213e8:	movw	r1, #12
   213ec:	str	r1, [r0]
   213f0:	movw	r0, #0
   213f4:	str	r0, [fp, #-4]
   213f8:	b	21410 <__assert_fail@plt+0x10328>
   213fc:	ldr	r0, [sp, #8]
   21400:	bl	10f8c <malloc@plt>
   21404:	str	r0, [sp, #4]
   21408:	ldr	r0, [sp, #4]
   2140c:	str	r0, [fp, #-4]
   21410:	ldr	r0, [fp, #-4]
   21414:	mov	sp, fp
   21418:	pop	{fp, pc}
   2141c:	svcvc	0x00ffffff
   21420:	push	{fp, lr}
   21424:	mov	fp, sp
   21428:	sub	sp, sp, #16
   2142c:	str	r0, [sp, #8]
   21430:	str	r1, [sp, #4]
   21434:	ldr	r0, [sp, #8]
   21438:	movw	r1, #0
   2143c:	cmp	r0, r1
   21440:	bne	21454 <__assert_fail@plt+0x1036c>
   21444:	ldr	r0, [sp, #4]
   21448:	bl	213b0 <__assert_fail@plt+0x102c8>
   2144c:	str	r0, [fp, #-4]
   21450:	b	214b4 <__assert_fail@plt+0x103cc>
   21454:	ldr	r0, [sp, #4]
   21458:	cmp	r0, #0
   2145c:	bne	21474 <__assert_fail@plt+0x1038c>
   21460:	ldr	r0, [sp, #8]
   21464:	bl	17e8c <__assert_fail@plt+0x6da4>
   21468:	movw	r0, #0
   2146c:	str	r0, [fp, #-4]
   21470:	b	214b4 <__assert_fail@plt+0x103cc>
   21474:	ldr	r0, [pc, #68]	; 214c0 <__assert_fail@plt+0x103d8>
   21478:	ldr	r1, [sp, #4]
   2147c:	cmp	r0, r1
   21480:	bcs	2149c <__assert_fail@plt+0x103b4>
   21484:	bl	11010 <__errno_location@plt>
   21488:	movw	r1, #12
   2148c:	str	r1, [r0]
   21490:	movw	r0, #0
   21494:	str	r0, [fp, #-4]
   21498:	b	214b4 <__assert_fail@plt+0x103cc>
   2149c:	ldr	r0, [sp, #8]
   214a0:	ldr	r1, [sp, #4]
   214a4:	bl	10f20 <realloc@plt>
   214a8:	str	r0, [sp]
   214ac:	ldr	r0, [sp]
   214b0:	str	r0, [fp, #-4]
   214b4:	ldr	r0, [fp, #-4]
   214b8:	mov	sp, fp
   214bc:	pop	{fp, pc}
   214c0:	svcvc	0x00ffffff
   214c4:	sub	sp, sp, #8
   214c8:	str	r0, [sp, #4]
   214cc:	str	r1, [sp]
   214d0:	movw	r0, #0
   214d4:	add	sp, sp, #8
   214d8:	bx	lr
   214dc:	push	{fp, lr}
   214e0:	mov	fp, sp
   214e4:	sub	sp, sp, #8
   214e8:	str	r0, [sp, #4]
   214ec:	str	r1, [sp]
   214f0:	ldr	r0, [sp, #4]
   214f4:	ldr	r1, [sp]
   214f8:	bl	214c4 <__assert_fail@plt+0x103dc>
   214fc:	mov	sp, fp
   21500:	pop	{fp, pc}
   21504:	push	{fp, lr}
   21508:	mov	fp, sp
   2150c:	sub	sp, sp, #24
   21510:	str	r0, [fp, #-8]
   21514:	str	r1, [sp, #12]
   21518:	ldr	r0, [fp, #-8]
   2151c:	str	r0, [sp, #8]
   21520:	ldr	r0, [sp, #12]
   21524:	str	r0, [sp, #4]
   21528:	ldr	r0, [sp, #8]
   2152c:	ldr	r1, [sp, #4]
   21530:	cmp	r0, r1
   21534:	bne	21544 <__assert_fail@plt+0x1045c>
   21538:	movw	r0, #0
   2153c:	str	r0, [fp, #-4]
   21540:	b	215b0 <__assert_fail@plt+0x104c8>
   21544:	b	21548 <__assert_fail@plt+0x10460>
   21548:	ldr	r0, [sp, #8]
   2154c:	ldrb	r0, [r0]
   21550:	bl	17a48 <__assert_fail@plt+0x6960>
   21554:	strb	r0, [sp, #3]
   21558:	ldr	r0, [sp, #4]
   2155c:	ldrb	r0, [r0]
   21560:	bl	17a48 <__assert_fail@plt+0x6960>
   21564:	strb	r0, [sp, #2]
   21568:	ldrb	r0, [sp, #3]
   2156c:	cmp	r0, #0
   21570:	bne	21578 <__assert_fail@plt+0x10490>
   21574:	b	215a0 <__assert_fail@plt+0x104b8>
   21578:	ldr	r0, [sp, #8]
   2157c:	add	r0, r0, #1
   21580:	str	r0, [sp, #8]
   21584:	ldr	r0, [sp, #4]
   21588:	add	r0, r0, #1
   2158c:	str	r0, [sp, #4]
   21590:	ldrb	r0, [sp, #3]
   21594:	ldrb	r1, [sp, #2]
   21598:	cmp	r0, r1
   2159c:	beq	21548 <__assert_fail@plt+0x10460>
   215a0:	ldrb	r0, [sp, #3]
   215a4:	ldrb	r1, [sp, #2]
   215a8:	sub	r0, r0, r1
   215ac:	str	r0, [fp, #-4]
   215b0:	ldr	r0, [fp, #-4]
   215b4:	mov	sp, fp
   215b8:	pop	{fp, pc}
   215bc:	push	{fp, lr}
   215c0:	mov	fp, sp
   215c4:	sub	sp, sp, #16
   215c8:	str	r0, [sp, #8]
   215cc:	ldr	r0, [sp, #8]
   215d0:	bl	10f5c <__fpending@plt>
   215d4:	cmp	r0, #0
   215d8:	movw	r0, #0
   215dc:	movne	r0, #1
   215e0:	and	r0, r0, #1
   215e4:	strb	r0, [sp, #7]
   215e8:	ldr	r0, [sp, #8]
   215ec:	bl	10f68 <ferror_unlocked@plt>
   215f0:	cmp	r0, #0
   215f4:	movw	r0, #0
   215f8:	movne	r0, #1
   215fc:	and	r0, r0, #1
   21600:	strb	r0, [sp, #6]
   21604:	ldr	r0, [sp, #8]
   21608:	bl	17cf4 <__assert_fail@plt+0x6c0c>
   2160c:	cmp	r0, #0
   21610:	movw	r0, #0
   21614:	movne	r0, #1
   21618:	and	r0, r0, #1
   2161c:	strb	r0, [sp, #5]
   21620:	ldrb	r0, [sp, #6]
   21624:	tst	r0, #1
   21628:	bne	21654 <__assert_fail@plt+0x1056c>
   2162c:	ldrb	r0, [sp, #5]
   21630:	tst	r0, #1
   21634:	beq	21678 <__assert_fail@plt+0x10590>
   21638:	ldrb	r0, [sp, #7]
   2163c:	tst	r0, #1
   21640:	bne	21654 <__assert_fail@plt+0x1056c>
   21644:	bl	11010 <__errno_location@plt>
   21648:	ldr	r0, [r0]
   2164c:	cmp	r0, #9
   21650:	beq	21678 <__assert_fail@plt+0x10590>
   21654:	ldrb	r0, [sp, #5]
   21658:	tst	r0, #1
   2165c:	bne	2166c <__assert_fail@plt+0x10584>
   21660:	bl	11010 <__errno_location@plt>
   21664:	movw	r1, #0
   21668:	str	r1, [r0]
   2166c:	mvn	r0, #0
   21670:	str	r0, [fp, #-4]
   21674:	b	21680 <__assert_fail@plt+0x10598>
   21678:	movw	r0, #0
   2167c:	str	r0, [fp, #-4]
   21680:	ldr	r0, [fp, #-4]
   21684:	mov	sp, fp
   21688:	pop	{fp, pc}
   2168c:	push	{fp, lr}
   21690:	mov	fp, sp
   21694:	sub	sp, sp, #8
   21698:	movw	r0, #14
   2169c:	bl	11088 <nl_langinfo@plt>
   216a0:	str	r0, [sp, #4]
   216a4:	ldr	r0, [sp, #4]
   216a8:	movw	r1, #0
   216ac:	cmp	r0, r1
   216b0:	bne	216c0 <__assert_fail@plt+0x105d8>
   216b4:	movw	r0, #9243	; 0x241b
   216b8:	movt	r0, #2
   216bc:	str	r0, [sp, #4]
   216c0:	ldr	r0, [sp, #4]
   216c4:	ldrb	r0, [r0]
   216c8:	cmp	r0, #0
   216cc:	bne	216dc <__assert_fail@plt+0x105f4>
   216d0:	movw	r0, #11981	; 0x2ecd
   216d4:	movt	r0, #2
   216d8:	str	r0, [sp, #4]
   216dc:	ldr	r0, [sp, #4]
   216e0:	mov	sp, fp
   216e4:	pop	{fp, pc}
   216e8:	push	{fp, lr}
   216ec:	mov	fp, sp
   216f0:	sub	sp, sp, #32
   216f4:	str	r0, [fp, #-8]
   216f8:	str	r1, [fp, #-12]
   216fc:	str	r2, [sp, #16]
   21700:	str	r3, [sp, #12]
   21704:	ldr	r0, [fp, #-8]
   21708:	movw	r1, #0
   2170c:	cmp	r0, r1
   21710:	bne	2171c <__assert_fail@plt+0x10634>
   21714:	add	r0, sp, #4
   21718:	str	r0, [fp, #-8]
   2171c:	ldr	r0, [fp, #-8]
   21720:	ldr	r1, [fp, #-12]
   21724:	ldr	r2, [sp, #16]
   21728:	ldr	r3, [sp, #12]
   2172c:	bl	10f74 <mbrtowc@plt>
   21730:	str	r0, [sp, #8]
   21734:	ldr	r0, [sp, #8]
   21738:	mvn	r1, #1
   2173c:	cmp	r1, r0
   21740:	bhi	21784 <__assert_fail@plt+0x1069c>
   21744:	ldr	r0, [sp, #16]
   21748:	cmp	r0, #0
   2174c:	beq	21784 <__assert_fail@plt+0x1069c>
   21750:	movw	r0, #0
   21754:	bl	21798 <__assert_fail@plt+0x106b0>
   21758:	tst	r0, #1
   2175c:	bne	21784 <__assert_fail@plt+0x1069c>
   21760:	ldr	r0, [fp, #-12]
   21764:	ldrb	r0, [r0]
   21768:	strb	r0, [sp, #3]
   2176c:	ldrb	r0, [sp, #3]
   21770:	ldr	r1, [fp, #-8]
   21774:	str	r0, [r1]
   21778:	movw	r0, #1
   2177c:	str	r0, [fp, #-4]
   21780:	b	2178c <__assert_fail@plt+0x106a4>
   21784:	ldr	r0, [sp, #8]
   21788:	str	r0, [fp, #-4]
   2178c:	ldr	r0, [fp, #-4]
   21790:	mov	sp, fp
   21794:	pop	{fp, pc}
   21798:	push	{r4, r5, fp, lr}
   2179c:	add	fp, sp, #8
   217a0:	sub	sp, sp, #272	; 0x110
   217a4:	add	r1, sp, #7
   217a8:	str	r0, [fp, #-16]
   217ac:	ldr	r0, [fp, #-16]
   217b0:	movw	r2, #257	; 0x101
   217b4:	bl	21834 <__assert_fail@plt+0x1074c>
   217b8:	cmp	r0, #0
   217bc:	beq	217d0 <__assert_fail@plt+0x106e8>
   217c0:	movw	r0, #0
   217c4:	and	r0, r0, #1
   217c8:	strb	r0, [fp, #-9]
   217cc:	b	21824 <__assert_fail@plt+0x1073c>
   217d0:	add	r0, sp, #7
   217d4:	movw	r1, #11987	; 0x2ed3
   217d8:	movt	r1, #2
   217dc:	bl	10e90 <strcmp@plt>
   217e0:	cmp	r0, #0
   217e4:	movw	r0, #1
   217e8:	str	r0, [sp]
   217ec:	beq	21810 <__assert_fail@plt+0x10728>
   217f0:	add	r0, sp, #7
   217f4:	movw	r1, #11989	; 0x2ed5
   217f8:	movt	r1, #2
   217fc:	bl	10e90 <strcmp@plt>
   21800:	cmp	r0, #0
   21804:	movw	r0, #0
   21808:	moveq	r0, #1
   2180c:	str	r0, [sp]
   21810:	ldr	r0, [sp]
   21814:	mvn	r1, #0
   21818:	eor	r0, r0, r1
   2181c:	and	r0, r0, #1
   21820:	strb	r0, [fp, #-9]
   21824:	ldrb	r0, [fp, #-9]
   21828:	and	r0, r0, #1
   2182c:	sub	sp, fp, #8
   21830:	pop	{r4, r5, fp, pc}
   21834:	push	{fp, lr}
   21838:	mov	fp, sp
   2183c:	sub	sp, sp, #16
   21840:	str	r0, [fp, #-4]
   21844:	str	r1, [sp, #8]
   21848:	str	r2, [sp, #4]
   2184c:	ldr	r0, [fp, #-4]
   21850:	ldr	r1, [sp, #8]
   21854:	ldr	r2, [sp, #4]
   21858:	bl	21864 <__assert_fail@plt+0x1077c>
   2185c:	mov	sp, fp
   21860:	pop	{fp, pc}
   21864:	push	{fp, lr}
   21868:	mov	fp, sp
   2186c:	sub	sp, sp, #24
   21870:	str	r0, [fp, #-8]
   21874:	str	r1, [sp, #12]
   21878:	str	r2, [sp, #8]
   2187c:	ldr	r0, [fp, #-8]
   21880:	bl	21964 <__assert_fail@plt+0x1087c>
   21884:	str	r0, [sp, #4]
   21888:	ldr	r0, [sp, #4]
   2188c:	movw	r1, #0
   21890:	cmp	r0, r1
   21894:	bne	218bc <__assert_fail@plt+0x107d4>
   21898:	ldr	r0, [sp, #8]
   2189c:	cmp	r0, #0
   218a0:	bls	218b0 <__assert_fail@plt+0x107c8>
   218a4:	ldr	r0, [sp, #12]
   218a8:	movw	r1, #0
   218ac:	strb	r1, [r0]
   218b0:	movw	r0, #22
   218b4:	str	r0, [fp, #-4]
   218b8:	b	21938 <__assert_fail@plt+0x10850>
   218bc:	ldr	r0, [sp, #4]
   218c0:	bl	10fec <strlen@plt>
   218c4:	str	r0, [sp]
   218c8:	ldr	r0, [sp]
   218cc:	ldr	r1, [sp, #8]
   218d0:	cmp	r0, r1
   218d4:	bcs	218f8 <__assert_fail@plt+0x10810>
   218d8:	ldr	r0, [sp, #12]
   218dc:	ldr	r1, [sp, #4]
   218e0:	ldr	r2, [sp]
   218e4:	add	r2, r2, #1
   218e8:	bl	10ee4 <memcpy@plt>
   218ec:	movw	r0, #0
   218f0:	str	r0, [fp, #-4]
   218f4:	b	21938 <__assert_fail@plt+0x10850>
   218f8:	ldr	r0, [sp, #8]
   218fc:	cmp	r0, #0
   21900:	bls	21930 <__assert_fail@plt+0x10848>
   21904:	ldr	r0, [sp, #12]
   21908:	ldr	r1, [sp, #4]
   2190c:	ldr	r2, [sp, #8]
   21910:	sub	r2, r2, #1
   21914:	bl	10ee4 <memcpy@plt>
   21918:	ldr	r0, [sp, #12]
   2191c:	ldr	r1, [sp, #8]
   21920:	sub	r1, r1, #1
   21924:	add	r0, r0, r1
   21928:	movw	r1, #0
   2192c:	strb	r1, [r0]
   21930:	movw	r0, #34	; 0x22
   21934:	str	r0, [fp, #-4]
   21938:	ldr	r0, [fp, #-4]
   2193c:	mov	sp, fp
   21940:	pop	{fp, pc}
   21944:	push	{fp, lr}
   21948:	mov	fp, sp
   2194c:	sub	sp, sp, #8
   21950:	str	r0, [sp, #4]
   21954:	ldr	r0, [sp, #4]
   21958:	bl	21964 <__assert_fail@plt+0x1087c>
   2195c:	mov	sp, fp
   21960:	pop	{fp, pc}
   21964:	push	{fp, lr}
   21968:	mov	fp, sp
   2196c:	sub	sp, sp, #8
   21970:	str	r0, [sp, #4]
   21974:	ldr	r0, [sp, #4]
   21978:	movw	r1, #0
   2197c:	bl	11070 <setlocale@plt>
   21980:	str	r0, [sp]
   21984:	ldr	r0, [sp]
   21988:	mov	sp, fp
   2198c:	pop	{fp, pc}
   21990:	cmp	r3, #0
   21994:	cmpeq	r2, #0
   21998:	bne	219bc <__assert_fail@plt+0x108d4>
   2199c:	cmp	r1, #0
   219a0:	movlt	r1, #-2147483648	; 0x80000000
   219a4:	movlt	r0, #0
   219a8:	blt	219b8 <__assert_fail@plt+0x108d0>
   219ac:	cmpeq	r0, #0
   219b0:	mvnne	r1, #-2147483648	; 0x80000000
   219b4:	mvnne	r0, #0
   219b8:	b	21aa0 <__assert_fail@plt+0x109b8>
   219bc:	sub	sp, sp, #8
   219c0:	push	{sp, lr}
   219c4:	cmp	r1, #0
   219c8:	blt	219e8 <__assert_fail@plt+0x10900>
   219cc:	cmp	r3, #0
   219d0:	blt	21a1c <__assert_fail@plt+0x10934>
   219d4:	bl	21ab0 <__assert_fail@plt+0x109c8>
   219d8:	ldr	lr, [sp, #4]
   219dc:	add	sp, sp, #8
   219e0:	pop	{r2, r3}
   219e4:	bx	lr
   219e8:	rsbs	r0, r0, #0
   219ec:	sbc	r1, r1, r1, lsl #1
   219f0:	cmp	r3, #0
   219f4:	blt	21a40 <__assert_fail@plt+0x10958>
   219f8:	bl	21ab0 <__assert_fail@plt+0x109c8>
   219fc:	ldr	lr, [sp, #4]
   21a00:	add	sp, sp, #8
   21a04:	pop	{r2, r3}
   21a08:	rsbs	r0, r0, #0
   21a0c:	sbc	r1, r1, r1, lsl #1
   21a10:	rsbs	r2, r2, #0
   21a14:	sbc	r3, r3, r3, lsl #1
   21a18:	bx	lr
   21a1c:	rsbs	r2, r2, #0
   21a20:	sbc	r3, r3, r3, lsl #1
   21a24:	bl	21ab0 <__assert_fail@plt+0x109c8>
   21a28:	ldr	lr, [sp, #4]
   21a2c:	add	sp, sp, #8
   21a30:	pop	{r2, r3}
   21a34:	rsbs	r0, r0, #0
   21a38:	sbc	r1, r1, r1, lsl #1
   21a3c:	bx	lr
   21a40:	rsbs	r2, r2, #0
   21a44:	sbc	r3, r3, r3, lsl #1
   21a48:	bl	21ab0 <__assert_fail@plt+0x109c8>
   21a4c:	ldr	lr, [sp, #4]
   21a50:	add	sp, sp, #8
   21a54:	pop	{r2, r3}
   21a58:	rsbs	r2, r2, #0
   21a5c:	sbc	r3, r3, r3, lsl #1
   21a60:	bx	lr
   21a64:	cmp	r3, #0
   21a68:	cmpeq	r2, #0
   21a6c:	bne	21a84 <__assert_fail@plt+0x1099c>
   21a70:	cmp	r1, #0
   21a74:	cmpeq	r0, #0
   21a78:	mvnne	r1, #0
   21a7c:	mvnne	r0, #0
   21a80:	b	21aa0 <__assert_fail@plt+0x109b8>
   21a84:	sub	sp, sp, #8
   21a88:	push	{sp, lr}
   21a8c:	bl	21ab0 <__assert_fail@plt+0x109c8>
   21a90:	ldr	lr, [sp, #4]
   21a94:	add	sp, sp, #8
   21a98:	pop	{r2, r3}
   21a9c:	bx	lr
   21aa0:	push	{r1, lr}
   21aa4:	mov	r0, #8
   21aa8:	bl	10e84 <raise@plt>
   21aac:	pop	{r1, pc}
   21ab0:	cmp	r1, r3
   21ab4:	cmpeq	r0, r2
   21ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21abc:	mov	r4, r0
   21ac0:	movcc	r0, #0
   21ac4:	mov	r5, r1
   21ac8:	ldr	lr, [sp, #36]	; 0x24
   21acc:	movcc	r1, r0
   21ad0:	bcc	21bcc <__assert_fail@plt+0x10ae4>
   21ad4:	cmp	r3, #0
   21ad8:	clzeq	ip, r2
   21adc:	clzne	ip, r3
   21ae0:	addeq	ip, ip, #32
   21ae4:	cmp	r5, #0
   21ae8:	clzeq	r1, r4
   21aec:	addeq	r1, r1, #32
   21af0:	clzne	r1, r5
   21af4:	sub	ip, ip, r1
   21af8:	sub	sl, ip, #32
   21afc:	lsl	r9, r3, ip
   21b00:	rsb	fp, ip, #32
   21b04:	orr	r9, r9, r2, lsl sl
   21b08:	orr	r9, r9, r2, lsr fp
   21b0c:	lsl	r8, r2, ip
   21b10:	cmp	r5, r9
   21b14:	cmpeq	r4, r8
   21b18:	movcc	r0, #0
   21b1c:	movcc	r1, r0
   21b20:	bcc	21b3c <__assert_fail@plt+0x10a54>
   21b24:	mov	r0, #1
   21b28:	subs	r4, r4, r8
   21b2c:	lsl	r1, r0, sl
   21b30:	orr	r1, r1, r0, lsr fp
   21b34:	lsl	r0, r0, ip
   21b38:	sbc	r5, r5, r9
   21b3c:	cmp	ip, #0
   21b40:	beq	21bcc <__assert_fail@plt+0x10ae4>
   21b44:	lsr	r6, r8, #1
   21b48:	orr	r6, r6, r9, lsl #31
   21b4c:	lsr	r7, r9, #1
   21b50:	mov	r2, ip
   21b54:	b	21b78 <__assert_fail@plt+0x10a90>
   21b58:	subs	r3, r4, r6
   21b5c:	sbc	r8, r5, r7
   21b60:	adds	r3, r3, r3
   21b64:	adc	r8, r8, r8
   21b68:	adds	r4, r3, #1
   21b6c:	adc	r5, r8, #0
   21b70:	subs	r2, r2, #1
   21b74:	beq	21b94 <__assert_fail@plt+0x10aac>
   21b78:	cmp	r5, r7
   21b7c:	cmpeq	r4, r6
   21b80:	bcs	21b58 <__assert_fail@plt+0x10a70>
   21b84:	adds	r4, r4, r4
   21b88:	adc	r5, r5, r5
   21b8c:	subs	r2, r2, #1
   21b90:	bne	21b78 <__assert_fail@plt+0x10a90>
   21b94:	lsr	r3, r4, ip
   21b98:	orr	r3, r3, r5, lsl fp
   21b9c:	lsr	r2, r5, ip
   21ba0:	orr	r3, r3, r5, lsr sl
   21ba4:	adds	r0, r0, r4
   21ba8:	mov	r4, r3
   21bac:	lsl	r3, r2, ip
   21bb0:	orr	r3, r3, r4, lsl sl
   21bb4:	lsl	ip, r4, ip
   21bb8:	orr	r3, r3, r4, lsr fp
   21bbc:	adc	r1, r1, r5
   21bc0:	subs	r0, r0, ip
   21bc4:	mov	r5, r2
   21bc8:	sbc	r1, r1, r3
   21bcc:	cmp	lr, #0
   21bd0:	strdne	r4, [lr]
   21bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21bd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21bdc:	mov	r7, r0
   21be0:	ldr	r6, [pc, #72]	; 21c30 <__assert_fail@plt+0x10b48>
   21be4:	ldr	r5, [pc, #72]	; 21c34 <__assert_fail@plt+0x10b4c>
   21be8:	add	r6, pc, r6
   21bec:	add	r5, pc, r5
   21bf0:	sub	r6, r6, r5
   21bf4:	mov	r8, r1
   21bf8:	mov	r9, r2
   21bfc:	bl	10e4c <calloc@plt-0x20>
   21c00:	asrs	r6, r6, #2
   21c04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   21c08:	mov	r4, #0
   21c0c:	add	r4, r4, #1
   21c10:	ldr	r3, [r5], #4
   21c14:	mov	r2, r9
   21c18:	mov	r1, r8
   21c1c:	mov	r0, r7
   21c20:	blx	r3
   21c24:	cmp	r6, r4
   21c28:	bne	21c0c <__assert_fail@plt+0x10b24>
   21c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21c30:	andeq	r1, r1, ip, lsl r3
   21c34:	andeq	r1, r1, r4, lsl r3
   21c38:	bx	lr
   21c3c:	ldr	r3, [pc, #12]	; 21c50 <__assert_fail@plt+0x10b68>
   21c40:	mov	r1, #0
   21c44:	add	r3, pc, r3
   21c48:	ldr	r2, [r3]
   21c4c:	b	1101c <__cxa_atexit@plt>
   21c50:	andeq	r1, r1, r0, lsr #9

Disassembly of section .fini:

00021c54 <.fini>:
   21c54:	push	{r3, lr}
   21c58:	pop	{r3, pc}
