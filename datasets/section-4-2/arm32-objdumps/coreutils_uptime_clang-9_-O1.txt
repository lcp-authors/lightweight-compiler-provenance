
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

000111c8 <.init>:
   111c8:	push	{r3, lr}
   111cc:	bl	1156c <putchar_unlocked@plt+0x48>
   111d0:	pop	{r3, pc}

Disassembly of section .plt:

000111d4 <calloc@plt-0x14>:
   111d4:	push	{lr}		; (str lr, [sp, #-4]!)
   111d8:	ldr	lr, [pc, #4]	; 111e4 <calloc@plt-0x4>
   111dc:	add	lr, pc, lr
   111e0:	ldr	pc, [lr, #8]!
   111e4:	andeq	r6, r1, ip, lsl lr

000111e8 <calloc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3612]!	; 0xe1c

000111f4 <fputs_unlocked@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3604]!	; 0xe14

00011200 <raise@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3596]!	; 0xe0c

0001120c <gmtime_r@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3588]!	; 0xe04

00011218 <strcmp@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3580]!	; 0xdfc

00011224 <mktime@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011230 <fflush@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3564]!	; 0xdec

0001123c <utmpxname@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3556]!	; 0xde4

00011248 <free@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3548]!	; 0xddc

00011254 <_exit@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011260 <memcpy@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3532]!	; 0xdcc

0001126c <mbsinit@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3524]!	; 0xdc4

00011278 <time@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3516]!	; 0xdbc

00011284 <dcgettext@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011290 <setutxent@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3500]!	; 0xdac

0001129c <realloc@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3492]!	; 0xda4

000112a8 <localtime_r@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b4 <textdomain@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3476]!	; 0xd94

000112c0 <iswprint@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112cc <tzset@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3460]!	; 0xd84

000112d8 <fwrite@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e4 <lseek64@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3444]!	; 0xd74

000112f0 <__ctype_get_mb_cur_max@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3436]!	; 0xd6c

000112fc <__fpending@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3428]!	; 0xd64

00011308 <ferror_unlocked@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #90112	; 0x16000
   11310:	ldr	pc, [ip, #3420]!	; 0xd5c

00011314 <mbrtowc@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #90112	; 0x16000
   1131c:	ldr	pc, [ip, #3412]!	; 0xd54

00011320 <error@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #90112	; 0x16000
   11328:	ldr	pc, [ip, #3404]!	; 0xd4c

0001132c <getenv@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #90112	; 0x16000
   11334:	ldr	pc, [ip, #3396]!	; 0xd44

00011338 <malloc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #90112	; 0x16000
   11340:	ldr	pc, [ip, #3388]!	; 0xd3c

00011344 <__libc_start_main@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #90112	; 0x16000
   1134c:	ldr	pc, [ip, #3380]!	; 0xd34

00011350 <strftime@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #90112	; 0x16000
   11358:	ldr	pc, [ip, #3372]!	; 0xd2c

0001135c <__freading@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #90112	; 0x16000
   11364:	ldr	pc, [ip, #3364]!	; 0xd24

00011368 <localtime@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #90112	; 0x16000
   11370:	ldr	pc, [ip, #3356]!	; 0xd1c

00011374 <__ctype_tolower_loc@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #90112	; 0x16000
   1137c:	ldr	pc, [ip, #3348]!	; 0xd14

00011380 <__ctype_toupper_loc@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #90112	; 0x16000
   11388:	ldr	pc, [ip, #3340]!	; 0xd0c

0001138c <__gmon_start__@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #90112	; 0x16000
   11394:	ldr	pc, [ip, #3332]!	; 0xd04

00011398 <getopt_long@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #90112	; 0x16000
   113a0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a4 <kill@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #90112	; 0x16000
   113ac:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b0 <__ctype_b_loc@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #90112	; 0x16000
   113b8:	ldr	pc, [ip, #3308]!	; 0xcec

000113bc <exit@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #90112	; 0x16000
   113c4:	ldr	pc, [ip, #3300]!	; 0xce4

000113c8 <bcmp@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #90112	; 0x16000
   113d0:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d4 <strlen@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #90112	; 0x16000
   113dc:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e0 <setenv@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #90112	; 0x16000
   113e8:	ldr	pc, [ip, #3276]!	; 0xccc

000113ec <__errno_location@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #90112	; 0x16000
   113f4:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f8 <__cxa_atexit@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #90112	; 0x16000
   11400:	ldr	pc, [ip, #3260]!	; 0xcbc

00011404 <memset@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #90112	; 0x16000
   1140c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011410 <strncpy@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #90112	; 0x16000
   11418:	ldr	pc, [ip, #3244]!	; 0xcac

0001141c <__printf_chk@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #90112	; 0x16000
   11424:	ldr	pc, [ip, #3236]!	; 0xca4

00011428 <fileno@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #90112	; 0x16000
   11430:	ldr	pc, [ip, #3228]!	; 0xc9c

00011434 <__fprintf_chk@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #90112	; 0x16000
   1143c:	ldr	pc, [ip, #3220]!	; 0xc94

00011440 <fclose@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #90112	; 0x16000
   11448:	ldr	pc, [ip, #3212]!	; 0xc8c

0001144c <fseeko64@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #90112	; 0x16000
   11454:	ldr	pc, [ip, #3204]!	; 0xc84

00011458 <getloadavg@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #90112	; 0x16000
   11460:	ldr	pc, [ip, #3196]!	; 0xc7c

00011464 <strtod_l@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #90112	; 0x16000
   1146c:	ldr	pc, [ip, #3188]!	; 0xc74

00011470 <endutxent@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #90112	; 0x16000
   11478:	ldr	pc, [ip, #3180]!	; 0xc6c

0001147c <setlocale@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #90112	; 0x16000
   11484:	ldr	pc, [ip, #3172]!	; 0xc64

00011488 <strrchr@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #90112	; 0x16000
   11490:	ldr	pc, [ip, #3164]!	; 0xc5c

00011494 <nl_langinfo@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #90112	; 0x16000
   1149c:	ldr	pc, [ip, #3156]!	; 0xc54

000114a0 <fputc@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #90112	; 0x16000
   114a8:	ldr	pc, [ip, #3148]!	; 0xc4c

000114ac <newlocale@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #90112	; 0x16000
   114b4:	ldr	pc, [ip, #3140]!	; 0xc44

000114b8 <timegm@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #90112	; 0x16000
   114c0:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c4 <fopen64@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #90112	; 0x16000
   114cc:	ldr	pc, [ip, #3124]!	; 0xc34

000114d0 <fgets_unlocked@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #90112	; 0x16000
   114d8:	ldr	pc, [ip, #3116]!	; 0xc2c

000114dc <bindtextdomain@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #90112	; 0x16000
   114e4:	ldr	pc, [ip, #3108]!	; 0xc24

000114e8 <unsetenv@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #90112	; 0x16000
   114f0:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f4 <strncmp@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #90112	; 0x16000
   114fc:	ldr	pc, [ip, #3092]!	; 0xc14

00011500 <abort@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #90112	; 0x16000
   11508:	ldr	pc, [ip, #3084]!	; 0xc0c

0001150c <getutxent@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #90112	; 0x16000
   11514:	ldr	pc, [ip, #3076]!	; 0xc04

00011518 <dcngettext@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #90112	; 0x16000
   11520:	ldr	pc, [ip, #3068]!	; 0xbfc

00011524 <putchar_unlocked@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #90112	; 0x16000
   1152c:	ldr	pc, [ip, #3060]!	; 0xbf4

Disassembly of section .text:

00011530 <.text>:
   11530:	mov	fp, #0
   11534:	mov	lr, #0
   11538:	pop	{r1}		; (ldr r1, [sp], #4)
   1153c:	mov	r2, sp
   11540:	push	{r2}		; (str r2, [sp, #-4]!)
   11544:	push	{r0}		; (str r0, [sp, #-4]!)
   11548:	ldr	ip, [pc, #16]	; 11560 <putchar_unlocked@plt+0x3c>
   1154c:	push	{ip}		; (str ip, [sp, #-4]!)
   11550:	ldr	r0, [pc, #12]	; 11564 <putchar_unlocked@plt+0x40>
   11554:	ldr	r3, [pc, #12]	; 11568 <putchar_unlocked@plt+0x44>
   11558:	bl	11344 <__libc_start_main@plt>
   1155c:	bl	11500 <abort@plt>
   11560:	andeq	r6, r1, r8, asr pc
   11564:	andeq	r1, r1, r8, ror #17
   11568:	strdeq	r6, [r1], -r8
   1156c:	ldr	r3, [pc, #20]	; 11588 <putchar_unlocked@plt+0x64>
   11570:	ldr	r2, [pc, #20]	; 1158c <putchar_unlocked@plt+0x68>
   11574:	add	r3, pc, r3
   11578:	ldr	r2, [r3, r2]
   1157c:	cmp	r2, #0
   11580:	bxeq	lr
   11584:	b	1138c <__gmon_start__@plt>
   11588:	andeq	r6, r1, r4, lsl #21
   1158c:	andeq	r0, r0, r4, lsr #2
   11590:	ldr	r0, [pc, #24]	; 115b0 <putchar_unlocked@plt+0x8c>
   11594:	ldr	r3, [pc, #24]	; 115b4 <putchar_unlocked@plt+0x90>
   11598:	cmp	r3, r0
   1159c:	bxeq	lr
   115a0:	ldr	r3, [pc, #16]	; 115b8 <putchar_unlocked@plt+0x94>
   115a4:	cmp	r3, #0
   115a8:	bxeq	lr
   115ac:	bx	r3
   115b0:	andeq	r8, r2, r8, ror r1
   115b4:	andeq	r8, r2, r8, ror r1
   115b8:	andeq	r0, r0, r0
   115bc:	ldr	r0, [pc, #36]	; 115e8 <putchar_unlocked@plt+0xc4>
   115c0:	ldr	r1, [pc, #36]	; 115ec <putchar_unlocked@plt+0xc8>
   115c4:	sub	r1, r1, r0
   115c8:	asr	r1, r1, #2
   115cc:	add	r1, r1, r1, lsr #31
   115d0:	asrs	r1, r1, #1
   115d4:	bxeq	lr
   115d8:	ldr	r3, [pc, #16]	; 115f0 <putchar_unlocked@plt+0xcc>
   115dc:	cmp	r3, #0
   115e0:	bxeq	lr
   115e4:	bx	r3
   115e8:	andeq	r8, r2, r8, ror r1
   115ec:	andeq	r8, r2, r8, ror r1
   115f0:	andeq	r0, r0, r0
   115f4:	push	{r4, lr}
   115f8:	ldr	r4, [pc, #24]	; 11618 <putchar_unlocked@plt+0xf4>
   115fc:	ldrb	r3, [r4]
   11600:	cmp	r3, #0
   11604:	popne	{r4, pc}
   11608:	bl	11590 <putchar_unlocked@plt+0x6c>
   1160c:	mov	r3, #1
   11610:	strb	r3, [r4]
   11614:	pop	{r4, pc}
   11618:	muleq	r2, r4, r1
   1161c:	b	115bc <putchar_unlocked@plt+0x98>
   11620:	push	{fp, lr}
   11624:	mov	fp, sp
   11628:	mov	r4, r0
   1162c:	cmp	r0, #0
   11630:	bne	1171c <putchar_unlocked@plt+0x1f8>
   11634:	movw	r1, #28587	; 0x6fab
   11638:	movt	r1, #1
   1163c:	mov	r0, #0
   11640:	mov	r2, #5
   11644:	bl	11284 <dcgettext@plt>
   11648:	mov	r1, r0
   1164c:	movw	r0, #33188	; 0x81a4
   11650:	movt	r0, #2
   11654:	ldr	r2, [r0]
   11658:	mov	r0, #1
   1165c:	bl	1141c <__printf_chk@plt>
   11660:	movw	r1, #28617	; 0x6fc9
   11664:	movt	r1, #1
   11668:	mov	r0, #0
   1166c:	mov	r2, #5
   11670:	bl	11284 <dcgettext@plt>
   11674:	mov	r1, r0
   11678:	mov	r0, #1
   1167c:	bl	1141c <__printf_chk@plt>
   11680:	movw	r1, #28802	; 0x7082
   11684:	movt	r1, #1
   11688:	mov	r0, #0
   1168c:	mov	r2, #5
   11690:	bl	11284 <dcgettext@plt>
   11694:	mov	r1, r0
   11698:	mov	r0, #1
   1169c:	bl	1141c <__printf_chk@plt>
   116a0:	movw	r1, #28886	; 0x70d6
   116a4:	movt	r1, #1
   116a8:	mov	r0, #0
   116ac:	mov	r2, #5
   116b0:	bl	11284 <dcgettext@plt>
   116b4:	mov	r1, r0
   116b8:	movw	r2, #28945	; 0x7111
   116bc:	movt	r2, #1
   116c0:	movw	r3, #28959	; 0x711f
   116c4:	movt	r3, #1
   116c8:	mov	r0, #1
   116cc:	bl	1141c <__printf_chk@plt>
   116d0:	movw	r1, #28973	; 0x712d
   116d4:	movt	r1, #1
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	bl	11284 <dcgettext@plt>
   116e4:	movw	r5, #33164	; 0x818c
   116e8:	movt	r5, #2
   116ec:	ldr	r1, [r5]
   116f0:	bl	111f4 <fputs_unlocked@plt>
   116f4:	movw	r1, #29018	; 0x715a
   116f8:	movt	r1, #1
   116fc:	mov	r0, #0
   11700:	mov	r2, #5
   11704:	bl	11284 <dcgettext@plt>
   11708:	ldr	r1, [r5]
   1170c:	bl	111f4 <fputs_unlocked@plt>
   11710:	bl	11760 <putchar_unlocked@plt+0x23c>
   11714:	mov	r0, r4
   11718:	bl	113bc <exit@plt>
   1171c:	movw	r0, #33160	; 0x8188
   11720:	movt	r0, #2
   11724:	ldr	r5, [r0]
   11728:	movw	r1, #28548	; 0x6f84
   1172c:	movt	r1, #1
   11730:	mov	r0, #0
   11734:	mov	r2, #5
   11738:	bl	11284 <dcgettext@plt>
   1173c:	mov	r2, r0
   11740:	movw	r0, #33188	; 0x81a4
   11744:	movt	r0, #2
   11748:	ldr	r3, [r0]
   1174c:	mov	r0, r5
   11750:	mov	r1, #1
   11754:	bl	11434 <__fprintf_chk@plt>
   11758:	mov	r0, r4
   1175c:	bl	113bc <exit@plt>
   11760:	push	{r4, r5, r6, sl, fp, lr}
   11764:	add	fp, sp, #16
   11768:	sub	sp, sp, #56	; 0x38
   1176c:	movw	r0, #29680	; 0x73f0
   11770:	movt	r0, #1
   11774:	add	r1, r0, #32
   11778:	mov	r2, #48	; 0x30
   1177c:	vld1.64	{d16-d17}, [r1]
   11780:	mov	r6, sp
   11784:	add	r1, r6, #32
   11788:	add	r3, r0, #16
   1178c:	vld1.64	{d18-d19}, [r0], r2
   11790:	vld1.64	{d20-d21}, [r3]
   11794:	vldr	d22, [r0]
   11798:	vst1.64	{d16-d17}, [r1]
   1179c:	add	r0, r6, #16
   117a0:	vst1.64	{d20-d21}, [r0]
   117a4:	mov	r0, r6
   117a8:	vst1.64	{d18-d19}, [r0], r2
   117ac:	vstr	d22, [r0]
   117b0:	ldr	r1, [sp]
   117b4:	cmp	r1, #0
   117b8:	movw	r4, #29489	; 0x7331
   117bc:	movt	r4, #1
   117c0:	beq	117e8 <putchar_unlocked@plt+0x2c4>
   117c4:	mov	r6, sp
   117c8:	movw	r5, #29489	; 0x7331
   117cc:	movt	r5, #1
   117d0:	mov	r0, r5
   117d4:	bl	11218 <strcmp@plt>
   117d8:	cmp	r0, #0
   117dc:	ldrne	r1, [r6, #8]!
   117e0:	cmpne	r1, #0
   117e4:	bne	117d0 <putchar_unlocked@plt+0x2ac>
   117e8:	ldr	r5, [r6, #4]
   117ec:	movw	r1, #29267	; 0x7253
   117f0:	movt	r1, #1
   117f4:	mov	r0, #0
   117f8:	mov	r2, #5
   117fc:	bl	11284 <dcgettext@plt>
   11800:	mov	r1, r0
   11804:	movw	r2, #29096	; 0x71a8
   11808:	movt	r2, #1
   1180c:	movw	r3, #29290	; 0x726a
   11810:	movt	r3, #1
   11814:	mov	r0, #1
   11818:	bl	1141c <__printf_chk@plt>
   1181c:	cmp	r5, #0
   11820:	moveq	r5, r4
   11824:	mov	r0, #5
   11828:	mov	r1, #0
   1182c:	bl	1147c <setlocale@plt>
   11830:	cmp	r0, #0
   11834:	beq	11874 <putchar_unlocked@plt+0x350>
   11838:	movw	r1, #29330	; 0x7292
   1183c:	movt	r1, #1
   11840:	mov	r2, #3
   11844:	bl	114f4 <strncmp@plt>
   11848:	cmp	r0, #0
   1184c:	beq	11874 <putchar_unlocked@plt+0x350>
   11850:	movw	r1, #29334	; 0x7296
   11854:	movt	r1, #1
   11858:	mov	r0, #0
   1185c:	mov	r2, #5
   11860:	bl	11284 <dcgettext@plt>
   11864:	movw	r1, #33164	; 0x818c
   11868:	movt	r1, #2
   1186c:	ldr	r1, [r1]
   11870:	bl	111f4 <fputs_unlocked@plt>
   11874:	movw	r1, #29405	; 0x72dd
   11878:	movt	r1, #1
   1187c:	mov	r0, #0
   11880:	mov	r2, #5
   11884:	bl	11284 <dcgettext@plt>
   11888:	mov	r1, r0
   1188c:	movw	r2, #29290	; 0x726a
   11890:	movt	r2, #1
   11894:	mov	r0, #1
   11898:	mov	r3, r4
   1189c:	bl	1141c <__printf_chk@plt>
   118a0:	movw	r0, #29200	; 0x7210
   118a4:	movt	r0, #1
   118a8:	movw	r6, #28944	; 0x7110
   118ac:	movt	r6, #1
   118b0:	cmp	r5, r4
   118b4:	moveq	r6, r0
   118b8:	movw	r1, #29432	; 0x72f8
   118bc:	movt	r1, #1
   118c0:	mov	r0, #0
   118c4:	mov	r2, #5
   118c8:	bl	11284 <dcgettext@plt>
   118cc:	mov	r1, r0
   118d0:	mov	r0, #1
   118d4:	mov	r2, r5
   118d8:	mov	r3, r6
   118dc:	sub	sp, fp, #16
   118e0:	pop	{r4, r5, r6, sl, fp, lr}
   118e4:	b	1141c <__printf_chk@plt>
   118e8:	push	{r4, r5, r6, sl, fp, lr}
   118ec:	add	fp, sp, #16
   118f0:	sub	sp, sp, #32
   118f4:	mov	r4, r1
   118f8:	mov	r5, r0
   118fc:	ldr	r0, [r1]
   11900:	bl	13b98 <putchar_unlocked@plt+0x2674>
   11904:	movw	r1, #28944	; 0x7110
   11908:	movt	r1, #1
   1190c:	mov	r0, #6
   11910:	bl	1147c <setlocale@plt>
   11914:	movw	r6, #29100	; 0x71ac
   11918:	movt	r6, #1
   1191c:	movw	r1, #29072	; 0x7190
   11920:	movt	r1, #1
   11924:	mov	r0, r6
   11928:	bl	114dc <bindtextdomain@plt>
   1192c:	mov	r0, r6
   11930:	bl	112b4 <textdomain@plt>
   11934:	movw	r0, #7972	; 0x1f24
   11938:	movt	r0, #1
   1193c:	bl	16f5c <putchar_unlocked@plt+0x5a38>
   11940:	movw	r0, #33072	; 0x8130
   11944:	movt	r0, #2
   11948:	ldr	r0, [r0]
   1194c:	mov	ip, #0
   11950:	movw	lr, #29143	; 0x71d7
   11954:	movt	lr, #1
   11958:	movw	r3, #29127	; 0x71c7
   1195c:	movt	r3, #1
   11960:	movw	r6, #29110	; 0x71b6
   11964:	movt	r6, #1
   11968:	movw	r1, #5664	; 0x1620
   1196c:	movt	r1, #1
   11970:	mov	r2, #1
   11974:	stm	sp, {r0, r2}
   11978:	str	r1, [sp, #8]
   1197c:	str	r6, [sp, #12]
   11980:	str	r3, [sp, #16]
   11984:	str	lr, [sp, #20]
   11988:	str	ip, [sp, #24]
   1198c:	movw	r2, #29489	; 0x7331
   11990:	movt	r2, #1
   11994:	movw	r3, #29096	; 0x71a8
   11998:	movt	r3, #1
   1199c:	mov	r0, r5
   119a0:	mov	r1, r4
   119a4:	bl	13ad4 <putchar_unlocked@plt+0x25b0>
   119a8:	movw	r6, #33152	; 0x8180
   119ac:	movt	r6, #2
   119b0:	ldr	r0, [r6]
   119b4:	sub	r1, r5, r0
   119b8:	cmp	r1, #1
   119bc:	beq	119d8 <putchar_unlocked@plt+0x4b4>
   119c0:	cmp	r1, #0
   119c4:	bne	119e4 <putchar_unlocked@plt+0x4c0>
   119c8:	movw	r0, #28945	; 0x7111
   119cc:	movt	r0, #1
   119d0:	mov	r1, #1
   119d4:	bl	11a28 <putchar_unlocked@plt+0x504>
   119d8:	ldr	r0, [r4, r0, lsl #2]
   119dc:	mov	r1, #0
   119e0:	bl	11a28 <putchar_unlocked@plt+0x504>
   119e4:	movw	r1, #29155	; 0x71e3
   119e8:	movt	r1, #1
   119ec:	mov	r0, #0
   119f0:	mov	r2, #5
   119f4:	bl	11284 <dcgettext@plt>
   119f8:	mov	r5, r0
   119fc:	ldr	r0, [r6]
   11a00:	add	r0, r4, r0, lsl #2
   11a04:	ldr	r0, [r0, #4]
   11a08:	bl	1538c <putchar_unlocked@plt+0x3e68>
   11a0c:	mov	r3, r0
   11a10:	mov	r0, #0
   11a14:	mov	r1, #0
   11a18:	mov	r2, r5
   11a1c:	bl	11320 <error@plt>
   11a20:	mov	r0, #1
   11a24:	bl	11620 <putchar_unlocked@plt+0xfc>
   11a28:	push	{fp, lr}
   11a2c:	mov	fp, sp
   11a30:	sub	sp, sp, #8
   11a34:	mov	r3, r1
   11a38:	mov	r4, r0
   11a3c:	mov	r0, #0
   11a40:	str	r0, [sp]
   11a44:	add	r1, sp, #4
   11a48:	mov	r2, sp
   11a4c:	mov	r0, r4
   11a50:	bl	15808 <putchar_unlocked@plt+0x42e4>
   11a54:	cmp	r0, #0
   11a58:	bne	11a70 <putchar_unlocked@plt+0x54c>
   11a5c:	ldr	r1, [sp]
   11a60:	ldr	r0, [sp, #4]
   11a64:	bl	11aa0 <putchar_unlocked@plt+0x57c>
   11a68:	mov	r0, #0
   11a6c:	bl	113bc <exit@plt>
   11a70:	bl	113ec <__errno_location@plt>
   11a74:	ldr	r5, [r0]
   11a78:	mov	r0, #0
   11a7c:	mov	r1, #3
   11a80:	mov	r2, r4
   11a84:	bl	1524c <putchar_unlocked@plt+0x3d28>
   11a88:	mov	r3, r0
   11a8c:	movw	r2, #29769	; 0x7449
   11a90:	movt	r2, #1
   11a94:	mov	r0, #1
   11a98:	mov	r1, r5
   11a9c:	bl	11320 <error@plt>
   11aa0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11aa4:	add	fp, sp, #24
   11aa8:	sub	sp, sp, #16
   11aac:	sub	sp, sp, #8192	; 0x2000
   11ab0:	mov	r5, r1
   11ab4:	mov	r6, r0
   11ab8:	movw	r0, #29483	; 0x732b
   11abc:	movt	r0, #1
   11ac0:	movw	r1, #29634	; 0x73c2
   11ac4:	movt	r1, #1
   11ac8:	bl	114c4 <fopen64@plt>
   11acc:	mov	r7, #0
   11ad0:	cmp	r0, #0
   11ad4:	mov	r9, #0
   11ad8:	beq	11b50 <putchar_unlocked@plt+0x62c>
   11adc:	mov	r4, r0
   11ae0:	add	r8, sp, #8
   11ae4:	mov	r0, r8
   11ae8:	mov	r1, #8192	; 0x2000
   11aec:	mov	r2, r4
   11af0:	bl	114d0 <fgets_unlocked@plt>
   11af4:	mov	r9, #0
   11af8:	cmp	r0, r8
   11afc:	bne	11b48 <putchar_unlocked@plt+0x624>
   11b00:	sub	r1, fp, #32
   11b04:	mov	r0, r8
   11b08:	bl	11e80 <putchar_unlocked@plt+0x95c>
   11b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b10:	cmp	r8, r0
   11b14:	beq	11b44 <putchar_unlocked@plt+0x620>
   11b18:	vldr	d16, [pc, #808]	; 11e48 <putchar_unlocked@plt+0x924>
   11b1c:	vcvt.s32.f64	s2, d0
   11b20:	vmov	r9, s2
   11b24:	mvn	r0, #0
   11b28:	vcmpe.f64	d0, d16
   11b2c:	vmrs	APSR_nzcv, fpscr
   11b30:	movpl	r9, r0
   11b34:	vcmpe.f64	d0, #0.0
   11b38:	vmrs	APSR_nzcv, fpscr
   11b3c:	movlt	r9, r0
   11b40:	b	11b48 <putchar_unlocked@plt+0x624>
   11b44:	mov	r9, #0
   11b48:	mov	r0, r4
   11b4c:	bl	1200c <putchar_unlocked@plt+0xae8>
   11b50:	cmp	r6, #0
   11b54:	mov	r4, #0
   11b58:	beq	11bac <putchar_unlocked@plt+0x688>
   11b5c:	mov	r4, #0
   11b60:	mov	r7, #0
   11b64:	b	11b88 <putchar_unlocked@plt+0x664>
   11b68:	sub	r6, r6, #1
   11b6c:	ldrh	r1, [r5]
   11b70:	cmp	r1, #2
   11b74:	ldreq	r7, [r5, #340]	; 0x154
   11b78:	add	r4, r0, r4
   11b7c:	add	r5, r5, #384	; 0x180
   11b80:	cmp	r6, #0
   11b84:	beq	11bac <putchar_unlocked@plt+0x688>
   11b88:	ldrb	r0, [r5, #44]	; 0x2c
   11b8c:	cmp	r0, #0
   11b90:	mov	r0, #0
   11b94:	beq	11b68 <putchar_unlocked@plt+0x644>
   11b98:	ldrh	r0, [r5]
   11b9c:	sub	r0, r0, #7
   11ba0:	clz	r0, r0
   11ba4:	lsr	r0, r0, #5
   11ba8:	b	11b68 <putchar_unlocked@plt+0x644>
   11bac:	mov	r0, #0
   11bb0:	bl	11278 <time@plt>
   11bb4:	str	r0, [fp, #-32]	; 0xffffffe0
   11bb8:	cmp	r9, #0
   11bbc:	bne	11bcc <putchar_unlocked@plt+0x6a8>
   11bc0:	cmp	r7, #0
   11bc4:	beq	11e1c <putchar_unlocked@plt+0x8f8>
   11bc8:	sub	r9, r0, r7
   11bcc:	sub	r0, fp, #32
   11bd0:	bl	11368 <localtime@plt>
   11bd4:	cmp	r0, #0
   11bd8:	beq	11cd0 <putchar_unlocked@plt+0x7ac>
   11bdc:	mov	r5, r0
   11be0:	movw	r0, #33164	; 0x818c
   11be4:	movt	r0, #2
   11be8:	ldr	r6, [r0]
   11bec:	mov	r7, #0
   11bf0:	movw	r1, #29519	; 0x734f
   11bf4:	movt	r1, #1
   11bf8:	mov	r0, #0
   11bfc:	mov	r2, #5
   11c00:	bl	11284 <dcgettext@plt>
   11c04:	mov	r1, r0
   11c08:	str	r7, [sp]
   11c0c:	mov	r0, r6
   11c10:	mov	r2, r5
   11c14:	mov	r3, #0
   11c18:	bl	12114 <putchar_unlocked@plt+0xbf0>
   11c1c:	cmn	r9, #1
   11c20:	beq	11cf8 <putchar_unlocked@plt+0x7d4>
   11c24:	movw	r0, #17671	; 0x4507
   11c28:	movt	r0, #49710	; 0xc22e
   11c2c:	smmla	r0, r9, r0, r9
   11c30:	asr	r1, r0, #16
   11c34:	add	r6, r1, r0, lsr #31
   11c38:	movw	r0, #44672	; 0xae80
   11c3c:	movt	r0, #65534	; 0xfffe
   11c40:	mla	r0, r6, r0, r9
   11c44:	movw	r1, #46021	; 0xb3c5
   11c48:	movt	r1, #37282	; 0x91a2
   11c4c:	smmla	r1, r0, r1, r0
   11c50:	asr	r2, r1, #11
   11c54:	add	r5, r2, r1, lsr #31
   11c58:	movw	r1, #61936	; 0xf1f0
   11c5c:	movt	r1, #65535	; 0xffff
   11c60:	mla	r0, r5, r1, r0
   11c64:	movw	r1, #34953	; 0x8889
   11c68:	movt	r1, #34952	; 0x8888
   11c6c:	smmla	r0, r0, r1, r0
   11c70:	asr	r1, r0, #5
   11c74:	add	r8, r1, r0, lsr #31
   11c78:	movw	r0, #20864	; 0x5180
   11c7c:	movt	r0, #1
   11c80:	cmp	r9, r0
   11c84:	blt	11d1c <putchar_unlocked@plt+0x7f8>
   11c88:	asr	r1, r6, #31
   11c8c:	mov	r0, r6
   11c90:	bl	11e50 <putchar_unlocked@plt+0x92c>
   11c94:	mov	r3, r0
   11c98:	mov	r0, #5
   11c9c:	str	r0, [sp]
   11ca0:	movw	r1, #29564	; 0x737c
   11ca4:	movt	r1, #1
   11ca8:	movw	r2, #29587	; 0x7393
   11cac:	movt	r2, #1
   11cb0:	mov	r0, #0
   11cb4:	bl	11518 <dcngettext@plt>
   11cb8:	mov	r1, r0
   11cbc:	str	r8, [sp]
   11cc0:	mov	r0, #1
   11cc4:	mov	r2, r6
   11cc8:	mov	r3, r5
   11ccc:	b	11d40 <putchar_unlocked@plt+0x81c>
   11cd0:	movw	r1, #29531	; 0x735b
   11cd4:	movt	r1, #1
   11cd8:	mov	r0, #0
   11cdc:	mov	r2, #5
   11ce0:	bl	11284 <dcgettext@plt>
   11ce4:	mov	r1, r0
   11ce8:	mov	r0, #1
   11cec:	bl	1141c <__printf_chk@plt>
   11cf0:	cmn	r9, #1
   11cf4:	bne	11c24 <putchar_unlocked@plt+0x700>
   11cf8:	movw	r1, #29542	; 0x7366
   11cfc:	movt	r1, #1
   11d00:	mov	r0, #0
   11d04:	mov	r2, #5
   11d08:	bl	11284 <dcgettext@plt>
   11d0c:	mov	r1, r0
   11d10:	mov	r0, #1
   11d14:	bl	1141c <__printf_chk@plt>
   11d18:	b	11d44 <putchar_unlocked@plt+0x820>
   11d1c:	movw	r1, #29611	; 0x73ab
   11d20:	movt	r1, #1
   11d24:	mov	r0, #0
   11d28:	mov	r2, #5
   11d2c:	bl	11284 <dcgettext@plt>
   11d30:	mov	r1, r0
   11d34:	mov	r0, #1
   11d38:	mov	r2, r5
   11d3c:	mov	r3, r8
   11d40:	bl	1141c <__printf_chk@plt>
   11d44:	mov	r0, r4
   11d48:	mov	r1, #0
   11d4c:	bl	11e50 <putchar_unlocked@plt+0x92c>
   11d50:	mov	r3, r0
   11d54:	mov	r0, #5
   11d58:	str	r0, [sp]
   11d5c:	movw	r1, #29627	; 0x73bb
   11d60:	movt	r1, #1
   11d64:	movw	r2, #29636	; 0x73c4
   11d68:	movt	r2, #1
   11d6c:	mov	r0, #0
   11d70:	bl	11518 <dcngettext@plt>
   11d74:	mov	r1, r0
   11d78:	mov	r0, #1
   11d7c:	mov	r2, r4
   11d80:	bl	1141c <__printf_chk@plt>
   11d84:	add	r0, sp, #8
   11d88:	mov	r1, #3
   11d8c:	bl	11458 <getloadavg@plt>
   11d90:	cmn	r0, #1
   11d94:	beq	11e0c <putchar_unlocked@plt+0x8e8>
   11d98:	mov	r4, r0
   11d9c:	cmp	r0, #1
   11da0:	blt	11e14 <putchar_unlocked@plt+0x8f0>
   11da4:	movw	r1, #29646	; 0x73ce
   11da8:	movt	r1, #1
   11dac:	mov	r0, #0
   11db0:	mov	r2, #5
   11db4:	bl	11284 <dcgettext@plt>
   11db8:	mov	r1, r0
   11dbc:	vldr	d16, [sp, #8]
   11dc0:	vmov	r2, r3, d16
   11dc4:	mov	r0, #1
   11dc8:	bl	1141c <__printf_chk@plt>
   11dcc:	cmp	r4, #1
   11dd0:	beq	11e0c <putchar_unlocked@plt+0x8e8>
   11dd4:	vldr	d16, [sp, #16]
   11dd8:	vmov	r2, r3, d16
   11ddc:	movw	r1, #29668	; 0x73e4
   11de0:	movt	r1, #1
   11de4:	mov	r0, #1
   11de8:	bl	1141c <__printf_chk@plt>
   11dec:	cmp	r4, #3
   11df0:	blt	11e0c <putchar_unlocked@plt+0x8e8>
   11df4:	vldr	d16, [sp, #24]
   11df8:	vmov	r2, r3, d16
   11dfc:	movw	r1, #29668	; 0x73e4
   11e00:	movt	r1, #1
   11e04:	mov	r0, #1
   11e08:	bl	1141c <__printf_chk@plt>
   11e0c:	mov	r0, #10
   11e10:	bl	11524 <putchar_unlocked@plt>
   11e14:	sub	sp, fp, #24
   11e18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e1c:	bl	113ec <__errno_location@plt>
   11e20:	ldr	r4, [r0]
   11e24:	movw	r1, #29496	; 0x7338
   11e28:	movt	r1, #1
   11e2c:	mov	r0, #0
   11e30:	mov	r2, #5
   11e34:	bl	11284 <dcgettext@plt>
   11e38:	mov	r2, r0
   11e3c:	mov	r0, #1
   11e40:	mov	r1, r4
   11e44:	bl	11320 <error@plt>
   11e48:			; <UNDEFINED> instruction: 0xffc00000
   11e4c:	ldrshmi	pc, [pc, #255]	; 11f53 <putchar_unlocked@plt+0xa2f>	; <UNPREDICTABLE>
   11e50:	cmp	r1, #0
   11e54:	bxeq	lr
   11e58:	push	{r4, sl, fp, lr}
   11e5c:	add	fp, sp, #8
   11e60:	movw	r4, #16960	; 0x4240
   11e64:	movt	r4, #15
   11e68:	mov	r2, r4
   11e6c:	mov	r3, #0
   11e70:	bl	16d84 <putchar_unlocked@plt+0x5860>
   11e74:	add	r0, r2, r4
   11e78:	pop	{r4, sl, fp, lr}
   11e7c:	bx	lr
   11e80:	push	{r4, r5, fp, lr}
   11e84:	add	fp, sp, #8
   11e88:	mov	r4, r1
   11e8c:	mov	r5, r0
   11e90:	bl	11ec0 <putchar_unlocked@plt+0x99c>
   11e94:	cmp	r0, #0
   11e98:	beq	11eb0 <putchar_unlocked@plt+0x98c>
   11e9c:	mov	r2, r0
   11ea0:	mov	r0, r5
   11ea4:	mov	r1, r4
   11ea8:	pop	{r4, r5, fp, lr}
   11eac:	b	11464 <strtod_l@plt>
   11eb0:	cmp	r4, #0
   11eb4:	strne	r5, [r4]
   11eb8:	vmov.i32	d0, #0	; 0x00000000
   11ebc:	pop	{r4, r5, fp, pc}
   11ec0:	push	{r4, sl, fp, lr}
   11ec4:	add	fp, sp, #8
   11ec8:	movw	r4, #33176	; 0x8198
   11ecc:	movt	r4, #2
   11ed0:	ldr	r0, [r4]
   11ed4:	cmp	r0, #0
   11ed8:	beq	11ee4 <putchar_unlocked@plt+0x9c0>
   11edc:	ldr	r0, [r4]
   11ee0:	pop	{r4, sl, fp, pc}
   11ee4:	movw	r1, #29751	; 0x7437
   11ee8:	movt	r1, #1
   11eec:	movw	r0, #8127	; 0x1fbf
   11ef0:	mov	r2, #0
   11ef4:	bl	114ac <newlocale@plt>
   11ef8:	str	r0, [r4]
   11efc:	ldr	r0, [r4]
   11f00:	pop	{r4, sl, fp, pc}
   11f04:	movw	r1, #33180	; 0x819c
   11f08:	movt	r1, #2
   11f0c:	str	r0, [r1]
   11f10:	bx	lr
   11f14:	movw	r1, #33184	; 0x81a0
   11f18:	movt	r1, #2
   11f1c:	strb	r0, [r1]
   11f20:	bx	lr
   11f24:	push	{r4, r5, r6, sl, fp, lr}
   11f28:	add	fp, sp, #16
   11f2c:	sub	sp, sp, #8
   11f30:	movw	r0, #33164	; 0x818c
   11f34:	movt	r0, #2
   11f38:	ldr	r0, [r0]
   11f3c:	bl	16aa0 <putchar_unlocked@plt+0x557c>
   11f40:	cmp	r0, #0
   11f44:	beq	11f6c <putchar_unlocked@plt+0xa48>
   11f48:	movw	r0, #33184	; 0x81a0
   11f4c:	movt	r0, #2
   11f50:	ldrb	r0, [r0]
   11f54:	cmp	r0, #0
   11f58:	beq	11f8c <putchar_unlocked@plt+0xa68>
   11f5c:	bl	113ec <__errno_location@plt>
   11f60:	ldr	r0, [r0]
   11f64:	cmp	r0, #32
   11f68:	bne	11f8c <putchar_unlocked@plt+0xa68>
   11f6c:	movw	r0, #33160	; 0x8188
   11f70:	movt	r0, #2
   11f74:	ldr	r0, [r0]
   11f78:	bl	16aa0 <putchar_unlocked@plt+0x557c>
   11f7c:	cmp	r0, #0
   11f80:	subeq	sp, fp, #16
   11f84:	popeq	{r4, r5, r6, sl, fp, pc}
   11f88:	b	11ffc <putchar_unlocked@plt+0xad8>
   11f8c:	movw	r1, #29753	; 0x7439
   11f90:	movt	r1, #1
   11f94:	mov	r0, #0
   11f98:	mov	r2, #5
   11f9c:	bl	11284 <dcgettext@plt>
   11fa0:	mov	r4, r0
   11fa4:	movw	r0, #33180	; 0x819c
   11fa8:	movt	r0, #2
   11fac:	ldr	r6, [r0]
   11fb0:	bl	113ec <__errno_location@plt>
   11fb4:	ldr	r5, [r0]
   11fb8:	cmp	r6, #0
   11fbc:	bne	11fd8 <putchar_unlocked@plt+0xab4>
   11fc0:	movw	r2, #29769	; 0x7449
   11fc4:	movt	r2, #1
   11fc8:	mov	r0, #0
   11fcc:	mov	r1, r5
   11fd0:	mov	r3, r4
   11fd4:	b	11ff8 <putchar_unlocked@plt+0xad4>
   11fd8:	mov	r0, r6
   11fdc:	bl	1523c <putchar_unlocked@plt+0x3d18>
   11fe0:	mov	r3, r0
   11fe4:	str	r4, [sp]
   11fe8:	movw	r2, #29765	; 0x7445
   11fec:	movt	r2, #1
   11ff0:	mov	r0, #0
   11ff4:	mov	r1, r5
   11ff8:	bl	11320 <error@plt>
   11ffc:	movw	r0, #33076	; 0x8134
   12000:	movt	r0, #2
   12004:	ldr	r0, [r0]
   12008:	bl	11254 <_exit@plt>
   1200c:	push	{r4, r5, fp, lr}
   12010:	add	fp, sp, #8
   12014:	sub	sp, sp, #8
   12018:	mov	r4, r0
   1201c:	bl	11428 <fileno@plt>
   12020:	cmn	r0, #1
   12024:	ble	1209c <putchar_unlocked@plt+0xb78>
   12028:	mov	r0, r4
   1202c:	bl	1135c <__freading@plt>
   12030:	cmp	r0, #0
   12034:	beq	12060 <putchar_unlocked@plt+0xb3c>
   12038:	mov	r0, r4
   1203c:	bl	11428 <fileno@plt>
   12040:	mov	r1, #1
   12044:	str	r1, [sp]
   12048:	mov	r2, #0
   1204c:	mov	r3, #0
   12050:	bl	112e4 <lseek64@plt>
   12054:	and	r0, r0, r1
   12058:	cmn	r0, #1
   1205c:	beq	1209c <putchar_unlocked@plt+0xb78>
   12060:	mov	r0, r4
   12064:	bl	120ac <putchar_unlocked@plt+0xb88>
   12068:	cmp	r0, #0
   1206c:	beq	1209c <putchar_unlocked@plt+0xb78>
   12070:	bl	113ec <__errno_location@plt>
   12074:	ldr	r5, [r0]
   12078:	mov	r0, r4
   1207c:	bl	11440 <fclose@plt>
   12080:	cmp	r5, #0
   12084:	beq	12094 <putchar_unlocked@plt+0xb70>
   12088:	bl	113ec <__errno_location@plt>
   1208c:	str	r5, [r0]
   12090:	mvn	r0, #0
   12094:	sub	sp, fp, #8
   12098:	pop	{r4, r5, fp, pc}
   1209c:	mov	r0, r4
   120a0:	sub	sp, fp, #8
   120a4:	pop	{r4, r5, fp, lr}
   120a8:	b	11440 <fclose@plt>
   120ac:	push	{r4, sl, fp, lr}
   120b0:	add	fp, sp, #8
   120b4:	mov	r4, r0
   120b8:	cmp	r0, #0
   120bc:	beq	120d4 <putchar_unlocked@plt+0xbb0>
   120c0:	mov	r0, r4
   120c4:	bl	1135c <__freading@plt>
   120c8:	cmp	r0, #0
   120cc:	movne	r0, r4
   120d0:	blne	120e0 <putchar_unlocked@plt+0xbbc>
   120d4:	mov	r0, r4
   120d8:	pop	{r4, sl, fp, lr}
   120dc:	b	11230 <fflush@plt>
   120e0:	push	{fp, lr}
   120e4:	mov	fp, sp
   120e8:	sub	sp, sp, #8
   120ec:	ldrb	r1, [r0, #1]
   120f0:	tst	r1, #1
   120f4:	beq	1210c <putchar_unlocked@plt+0xbe8>
   120f8:	mov	r1, #1
   120fc:	str	r1, [sp]
   12100:	mov	r2, #0
   12104:	mov	r3, #0
   12108:	bl	1397c <putchar_unlocked@plt+0x2458>
   1210c:	mov	sp, fp
   12110:	pop	{fp, pc}
   12114:	push	{fp, lr}
   12118:	mov	fp, sp
   1211c:	sub	sp, sp, #16
   12120:	str	r3, [sp, #8]
   12124:	mvn	r3, #0
   12128:	str	r3, [sp, #4]
   1212c:	mov	r3, #0
   12130:	str	r3, [sp]
   12134:	ldr	r3, [fp, #8]
   12138:	str	r3, [sp, #12]
   1213c:	mov	r3, #0
   12140:	bl	1214c <putchar_unlocked@plt+0xc28>
   12144:	mov	sp, fp
   12148:	pop	{fp, pc}
   1214c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12150:	add	fp, sp, #28
   12154:	sub	sp, sp, #124	; 0x7c
   12158:	sub	sp, sp, #1024	; 0x400
   1215c:	str	r3, [sp, #80]	; 0x50
   12160:	mov	r4, r2
   12164:	mov	sl, r1
   12168:	mov	r5, r0
   1216c:	bl	113ec <__errno_location@plt>
   12170:	mov	r2, r4
   12174:	ldr	r1, [r2, #8]!
   12178:	cmp	r1, #0
   1217c:	mov	r3, r1
   12180:	movweq	r3, #12
   12184:	cmp	r1, #12
   12188:	subgt	r3, r1, #12
   1218c:	ldr	r1, [r2, #32]
   12190:	movw	r7, #28944	; 0x7110
   12194:	movt	r7, #1
   12198:	cmp	r1, #0
   1219c:	movne	r7, r1
   121a0:	str	r0, [sp, #60]	; 0x3c
   121a4:	ldr	r1, [r0]
   121a8:	ldrb	r0, [sl]
   121ac:	cmp	r0, #0
   121b0:	str	r1, [sp, #56]	; 0x38
   121b4:	beq	13888 <putchar_unlocked@plt+0x2364>
   121b8:	str	r7, [sp, #44]	; 0x2c
   121bc:	str	r3, [sp, #36]	; 0x24
   121c0:	str	r2, [sp, #40]	; 0x28
   121c4:	str	r5, [sp, #92]	; 0x5c
   121c8:	ldr	r7, [fp, #12]
   121cc:	sub	r1, fp, #46	; 0x2e
   121d0:	add	r0, r1, #13
   121d4:	str	r0, [sp, #28]
   121d8:	add	r0, sp, #96	; 0x60
   121dc:	add	r0, r0, #1
   121e0:	str	r0, [sp, #48]	; 0x30
   121e4:	sub	r0, fp, #51	; 0x33
   121e8:	add	r2, r0, #3
   121ec:	str	r2, [sp, #52]	; 0x34
   121f0:	add	r0, r0, #2
   121f4:	str	r0, [sp, #68]	; 0x44
   121f8:	add	r0, r1, #14
   121fc:	str	r0, [sp, #64]	; 0x40
   12200:	str	r4, [sp, #72]	; 0x48
   12204:	add	r0, r4, #12
   12208:	str	r0, [sp, #32]
   1220c:	mov	r9, #0
   12210:	mov	ip, #-2147483648	; 0x80000000
   12214:	movw	lr, #52428	; 0xcccc
   12218:	movt	lr, #3276	; 0xccc
   1221c:	b	12250 <putchar_unlocked@plt+0xd2c>
   12220:	ldrb	r0, [r8]
   12224:	mov	r1, r7
   12228:	bl	114a0 <fputc@plt>
   1222c:	mov	ip, #-2147483648	; 0x80000000
   12230:	movw	lr, #52428	; 0xcccc
   12234:	movt	lr, #3276	; 0xccc
   12238:	add	r9, r4, r9
   1223c:	mov	sl, r8
   12240:	ldrb	r0, [sl, #1]!
   12244:	mvn	r7, #0
   12248:	cmp	r0, #0
   1224c:	beq	1388c <putchar_unlocked@plt+0x2368>
   12250:	mov	r8, sl
   12254:	ldrb	r0, [sl]
   12258:	cmp	r0, #37	; 0x25
   1225c:	bne	122fc <putchar_unlocked@plt+0xdd8>
   12260:	str	r9, [sp, #88]	; 0x58
   12264:	mov	r3, #0
   12268:	ldr	r2, [sp, #80]	; 0x50
   1226c:	mov	r4, #0
   12270:	mov	sl, r8
   12274:	add	sl, r8, #1
   12278:	b	1228c <putchar_unlocked@plt+0xd68>
   1227c:	cmp	r9, #95	; 0x5f
   12280:	bne	122e8 <putchar_unlocked@plt+0xdc4>
   12284:	add	sl, sl, #1
   12288:	mov	r4, r9
   1228c:	ldrb	r9, [sl]
   12290:	sub	r0, r9, #35	; 0x23
   12294:	cmp	r0, #13
   12298:	bhi	1227c <putchar_unlocked@plt+0xd58>
   1229c:	add	r1, pc, #0
   122a0:	ldr	pc, [r1, r0, lsl #2]
   122a4:	ldrdeq	r2, [r1], -ip
   122a8:	andeq	r2, r1, r0, asr r3
   122ac:	andeq	r2, r1, r0, asr r3
   122b0:	andeq	r2, r1, r0, asr r3
   122b4:	andeq	r2, r1, r0, asr r3
   122b8:	andeq	r2, r1, r0, asr r3
   122bc:	andeq	r2, r1, r0, asr r3
   122c0:	andeq	r2, r1, r0, asr r3
   122c4:	andeq	r2, r1, r4, lsl #5
   122c8:	andeq	r2, r1, r0, asr r3
   122cc:	andeq	r2, r1, r4, lsl #5
   122d0:	andeq	r2, r1, r0, asr r3
   122d4:	andeq	r2, r1, r0, asr r3
   122d8:	andeq	r2, r1, r4, lsl #5
   122dc:	mov	r3, #1
   122e0:	add	sl, sl, #1
   122e4:	b	1228c <putchar_unlocked@plt+0xd68>
   122e8:	cmp	r9, #94	; 0x5e
   122ec:	bne	12350 <putchar_unlocked@plt+0xe2c>
   122f0:	mov	r2, #1
   122f4:	add	sl, sl, #1
   122f8:	b	1228c <putchar_unlocked@plt+0xd68>
   122fc:	bic	r0, r7, r7, asr #31
   12300:	cmp	r0, #1
   12304:	mov	r4, #1
   12308:	movhi	r4, r0
   1230c:	mvn	r1, r9
   12310:	cmp	r4, r1
   12314:	bcs	1389c <putchar_unlocked@plt+0x2378>
   12318:	ldr	r7, [sp, #92]	; 0x5c
   1231c:	cmp	r7, #0
   12320:	beq	12238 <putchar_unlocked@plt+0xd14>
   12324:	cmp	r0, #2
   12328:	bcc	12220 <putchar_unlocked@plt+0xcfc>
   1232c:	sub	r5, r0, #1
   12330:	mov	r6, #0
   12334:	mov	r0, #32
   12338:	mov	r1, r7
   1233c:	bl	114a0 <fputc@plt>
   12340:	add	r6, r6, #1
   12344:	cmp	r6, r5
   12348:	bcc	12334 <putchar_unlocked@plt+0xe10>
   1234c:	b	12220 <putchar_unlocked@plt+0xcfc>
   12350:	sub	r0, r9, #48	; 0x30
   12354:	cmp	r0, #9
   12358:	bhi	123c0 <putchar_unlocked@plt+0xe9c>
   1235c:	mov	r7, #0
   12360:	cmn	r7, #1
   12364:	bgt	1239c <putchar_unlocked@plt+0xe78>
   12368:	b	123a8 <putchar_unlocked@plt+0xe84>
   1236c:	ldrb	r0, [sl]
   12370:	add	r1, r7, r7, lsl #2
   12374:	add	r0, r0, r1, lsl #1
   12378:	sub	r7, r0, #48	; 0x30
   1237c:	cmp	r7, r1, lsl #1
   12380:	mvnvs	r7, #-2147483648	; 0x80000000
   12384:	ldrb	r9, [sl, #1]!
   12388:	sub	r0, r9, #48	; 0x30
   1238c:	cmp	r0, #10
   12390:	bcs	123c0 <putchar_unlocked@plt+0xe9c>
   12394:	cmn	r7, #1
   12398:	ble	123a8 <putchar_unlocked@plt+0xe84>
   1239c:	cmp	r7, lr
   123a0:	ble	1236c <putchar_unlocked@plt+0xe48>
   123a4:	b	123b8 <putchar_unlocked@plt+0xe94>
   123a8:	beq	1236c <putchar_unlocked@plt+0xe48>
   123ac:	sdiv	r0, ip, r7
   123b0:	cmp	r0, #10
   123b4:	bge	1236c <putchar_unlocked@plt+0xe48>
   123b8:	mvn	r7, #-2147483648	; 0x80000000
   123bc:	b	12384 <putchar_unlocked@plt+0xe60>
   123c0:	cmp	r9, #79	; 0x4f
   123c4:	cmpne	r9, #69	; 0x45
   123c8:	bne	123d4 <putchar_unlocked@plt+0xeb0>
   123cc:	add	sl, sl, #1
   123d0:	b	123d8 <putchar_unlocked@plt+0xeb4>
   123d4:	mov	r9, #0
   123d8:	ldrb	ip, [sl]
   123dc:	cmp	ip, #122	; 0x7a
   123e0:	bhi	12e84 <putchar_unlocked@plt+0x1960>
   123e4:	str	r3, [sp, #76]	; 0x4c
   123e8:	mov	r3, #0
   123ec:	mvn	r1, #0
   123f0:	add	r0, pc, #16
   123f4:	movw	r6, #26215	; 0x6667
   123f8:	movt	r6, #26214	; 0x6666
   123fc:	movw	r5, #29790	; 0x745e
   12400:	movt	r5, #1
   12404:	ldr	pc, [r0, ip, lsl #2]
   12408:	ldrdeq	r2, [r1], -r0
   1240c:	andeq	r2, r1, r4, lsl #29
   12410:	andeq	r2, r1, r4, lsl #29
   12414:	andeq	r2, r1, r4, lsl #29
   12418:	andeq	r2, r1, r4, lsl #29
   1241c:	andeq	r2, r1, r4, lsl #29
   12420:	andeq	r2, r1, r4, lsl #29
   12424:	andeq	r2, r1, r4, lsl #29
   12428:	andeq	r2, r1, r4, lsl #29
   1242c:	andeq	r2, r1, r4, lsl #29
   12430:	andeq	r2, r1, r4, lsl #29
   12434:	andeq	r2, r1, r4, lsl #29
   12438:	andeq	r2, r1, r4, lsl #29
   1243c:	andeq	r2, r1, r4, lsl #29
   12440:	andeq	r2, r1, r4, lsl #29
   12444:	andeq	r2, r1, r4, lsl #29
   12448:	andeq	r2, r1, r4, lsl #29
   1244c:	andeq	r2, r1, r4, lsl #29
   12450:	andeq	r2, r1, r4, lsl #29
   12454:	andeq	r2, r1, r4, lsl #29
   12458:	andeq	r2, r1, r4, lsl #29
   1245c:	andeq	r2, r1, r4, lsl #29
   12460:	andeq	r2, r1, r4, lsl #29
   12464:	andeq	r2, r1, r4, lsl #29
   12468:	andeq	r2, r1, r4, lsl #29
   1246c:	andeq	r2, r1, r4, lsl #29
   12470:	andeq	r2, r1, r4, lsl #29
   12474:	andeq	r2, r1, r4, lsl #29
   12478:	andeq	r2, r1, r4, lsl #29
   1247c:	andeq	r2, r1, r4, lsl #29
   12480:	andeq	r2, r1, r4, lsl #29
   12484:	andeq	r2, r1, r4, lsl #29
   12488:	andeq	r2, r1, r4, lsl #29
   1248c:	andeq	r2, r1, r4, lsl #29
   12490:	andeq	r2, r1, r4, lsl #29
   12494:	andeq	r2, r1, r4, lsl #29
   12498:	andeq	r2, r1, r4, lsl #29
   1249c:	andeq	r2, r1, r4, asr #13
   124a0:	andeq	r2, r1, r4, lsl #29
   124a4:	andeq	r2, r1, r4, lsl #29
   124a8:	andeq	r2, r1, r4, lsl #29
   124ac:	andeq	r2, r1, r4, lsl #29
   124b0:	andeq	r2, r1, r4, lsl #29
   124b4:	andeq	r2, r1, r4, lsl #29
   124b8:	andeq	r2, r1, r4, lsl #29
   124bc:	andeq	r2, r1, r4, lsl #29
   124c0:	andeq	r2, r1, r4, lsl #29
   124c4:	andeq	r2, r1, r4, lsl #29
   124c8:	andeq	r2, r1, r4, lsl #29
   124cc:	andeq	r2, r1, r4, lsl #29
   124d0:	andeq	r2, r1, r4, lsl #29
   124d4:	andeq	r2, r1, r4, lsl #29
   124d8:	andeq	r2, r1, r4, lsl #29
   124dc:	andeq	r2, r1, r4, lsl #29
   124e0:	andeq	r2, r1, r4, lsl #29
   124e4:	andeq	r2, r1, r4, lsl #29
   124e8:	andeq	r2, r1, r4, lsl #29
   124ec:	andeq	r2, r1, r4, lsl #29
   124f0:	ldrdeq	r2, [r1], -r8
   124f4:	andeq	r2, r1, r4, lsl #29
   124f8:	andeq	r2, r1, r4, lsl #29
   124fc:	andeq	r2, r1, r4, lsl #29
   12500:	andeq	r2, r1, r4, lsl #29
   12504:	andeq	r2, r1, r4, lsl #29
   12508:	andeq	r2, r1, r4, lsl #29
   1250c:	strdeq	r2, [r1], -r0
   12510:	andeq	r2, r1, ip, lsl #14
   12514:	andeq	r2, r1, r8, lsr #14
   12518:	andeq	r2, r1, ip, lsr r7
   1251c:	andeq	r2, r1, r4, lsl #29
   12520:	andeq	r2, r1, r0, asr r7
   12524:	strdeq	r2, [r1], -r4
   12528:	andeq	r2, r1, ip, ror r7
   1252c:	muleq	r1, r4, r7
   12530:	andeq	r2, r1, r4, lsl #29
   12534:	andeq	r2, r1, r4, lsl #29
   12538:	andeq	r2, r1, r4, lsl #29
   1253c:	andeq	r2, r1, ip, lsr #15
   12540:	andeq	r2, r1, r4, asr #15
   12544:	andeq	r2, r1, r4, lsl #29
   12548:	andeq	r2, r1, r8, lsr #17
   1254c:	andeq	r2, r1, r4, lsl #29
   12550:	andeq	r2, r1, r4, ror #17
   12554:	andeq	r2, r1, r4, asr #17
   12558:	ldrdeq	r2, [r1], -ip
   1255c:	muleq	r1, r4, r9
   12560:	strdeq	r2, [r1], -r4
   12564:	andeq	r2, r1, r4, asr #19
   12568:	andeq	r2, r1, r4, lsl sl
   1256c:	andeq	r2, r1, r8, lsr #20
   12570:	andeq	r2, r1, ip, asr sl
   12574:	andeq	r2, r1, r4, lsl #29
   12578:	andeq	r2, r1, r4, lsl #29
   1257c:	andeq	r2, r1, r4, lsl #29
   12580:	andeq	r2, r1, r4, lsl #29
   12584:	andeq	r2, r1, r4, lsl #29
   12588:	andeq	r2, r1, r4, lsl #29
   1258c:	ldrdeq	r2, [r1], -ip
   12590:	andeq	r2, r1, ip, lsr #13
   12594:	strdeq	r2, [r1], -r8
   12598:	andeq	r2, r1, ip, lsl #22
   1259c:	andeq	r2, r1, r4, lsr #22
   125a0:	andeq	r2, r1, r4, lsl #29
   125a4:	strdeq	r2, [r1], -r4
   125a8:	andeq	r2, r1, ip, lsr #13
   125ac:	andeq	r2, r1, r4, lsl #29
   125b0:	andeq	r2, r1, r4, lsr fp
   125b4:	andeq	r2, r1, r0, ror #22
   125b8:	andeq	r2, r1, r4, ror fp
   125bc:	muleq	r1, r0, fp
   125c0:			; <UNDEFINED> instruction: 0x00012bbc
   125c4:	andeq	r2, r1, r4, lsl #29
   125c8:	andeq	r2, r1, ip, lsr #17
   125cc:	andeq	r2, r1, r0, asr #24
   125d0:	andeq	r3, r1, r8, ror #4
   125d4:	andeq	r2, r1, r4, ror #24
   125d8:	andeq	r2, r1, r8, lsr #26
   125dc:	andeq	r2, r1, ip, lsr #27
   125e0:	andeq	r2, r1, r4, lsl #29
   125e4:	andeq	r2, r1, r4, ror #27
   125e8:	andeq	r2, r1, r0, lsl #28
   125ec:	andeq	r2, r1, r4, lsl lr
   125f0:	andeq	r2, r1, r4, lsr lr
   125f4:	cmp	r9, #69	; 0x45
   125f8:	beq	12e84 <putchar_unlocked@plt+0x1960>
   125fc:	str	ip, [sp, #76]	; 0x4c
   12600:	str	r2, [sp, #84]	; 0x54
   12604:	ldr	r0, [sp, #72]	; 0x48
   12608:	ldr	r2, [r0, #20]
   1260c:	ldr	r1, [r0, #24]
   12610:	ldr	r8, [r0, #28]
   12614:	mvn	r0, #99	; 0x63
   12618:	cmp	r2, #0
   1261c:	movwmi	r0, #300	; 0x12c
   12620:	str	r2, [sp, #20]
   12624:	add	r6, r0, r2
   12628:	mov	r0, r8
   1262c:	str	r1, [sp, #24]
   12630:	bl	13948 <putchar_unlocked@plt+0x2424>
   12634:	cmn	r0, #1
   12638:	ble	12f6c <putchar_unlocked@plt+0x1a48>
   1263c:	mov	r5, r0
   12640:	movw	r0, #365	; 0x16d
   12644:	tst	r6, #3
   12648:	bne	1268c <putchar_unlocked@plt+0x1168>
   1264c:	movw	r0, #34079	; 0x851f
   12650:	movt	r0, #20971	; 0x51eb
   12654:	smmul	r0, r6, r0
   12658:	asr	r1, r0, #5
   1265c:	add	r1, r1, r0, lsr #31
   12660:	mov	r2, #100	; 0x64
   12664:	mls	r1, r1, r2, r6
   12668:	asr	r2, r0, #7
   1266c:	add	r0, r2, r0, lsr #31
   12670:	mov	r2, #400	; 0x190
   12674:	mls	r2, r0, r2, r6
   12678:	movw	r0, #365	; 0x16d
   1267c:	cmp	r2, #0
   12680:	movweq	r0, #366	; 0x16e
   12684:	cmp	r1, #0
   12688:	movwne	r0, #366	; 0x16e
   1268c:	sub	r0, r8, r0
   12690:	ldr	r1, [sp, #24]
   12694:	bl	13948 <putchar_unlocked@plt+0x2424>
   12698:	cmn	r0, #1
   1269c:	movgt	r5, r0
   126a0:	mvn	r0, r0
   126a4:	lsr	r0, r0, #31
   126a8:	b	12fd0 <putchar_unlocked@plt+0x1aac>
   126ac:	ldr	r0, [sp, #76]	; 0x4c
   126b0:	orr	r2, r0, r2
   126b4:	mov	r3, #0
   126b8:	cmp	r9, #69	; 0x45
   126bc:	bne	13268 <putchar_unlocked@plt+0x1d44>
   126c0:	b	12e84 <putchar_unlocked@plt+0x1960>
   126c4:	sub	r0, sl, #1
   126c8:	cmp	r0, r8
   126cc:	beq	134c4 <putchar_unlocked@plt+0x1fa0>
   126d0:	sub	sl, sl, #1
   126d4:	b	12e84 <putchar_unlocked@plt+0x1960>
   126d8:	mov	r3, #1
   126dc:	ldrb	r0, [sl, r3]
   126e0:	cmp	r0, #58	; 0x3a
   126e4:	bne	12e28 <putchar_unlocked@plt+0x1904>
   126e8:	add	r3, r3, #1
   126ec:	b	126dc <putchar_unlocked@plt+0x11b8>
   126f0:	cmp	r9, #0
   126f4:	bne	12e84 <putchar_unlocked@plt+0x1960>
   126f8:	ldr	r0, [sp, #76]	; 0x4c
   126fc:	orr	r2, r0, r2
   12700:	mov	r3, #0
   12704:	mov	ip, #65	; 0x41
   12708:	b	13268 <putchar_unlocked@plt+0x1d44>
   1270c:	cmp	r9, #69	; 0x45
   12710:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12714:	ldr	r0, [sp, #76]	; 0x4c
   12718:	orr	r2, r0, r2
   1271c:	mov	r3, #0
   12720:	mov	ip, #66	; 0x42
   12724:	b	13268 <putchar_unlocked@plt+0x1d44>
   12728:	cmp	r9, #69	; 0x45
   1272c:	bne	13048 <putchar_unlocked@plt+0x1b24>
   12730:	mov	r3, #0
   12734:	mov	ip, #67	; 0x43
   12738:	b	13268 <putchar_unlocked@plt+0x1d44>
   1273c:	cmp	r9, #0
   12740:	bne	12e84 <putchar_unlocked@plt+0x1960>
   12744:	movw	r5, #29772	; 0x744c
   12748:	movt	r5, #1
   1274c:	b	128e4 <putchar_unlocked@plt+0x13c0>
   12750:	cmp	r9, #0
   12754:	bne	12e84 <putchar_unlocked@plt+0x1960>
   12758:	movw	r5, #29781	; 0x7455
   1275c:	movt	r5, #1
   12760:	cmp	r4, #0
   12764:	bne	13658 <putchar_unlocked@plt+0x2134>
   12768:	cmp	r7, #0
   1276c:	bpl	13658 <putchar_unlocked@plt+0x2134>
   12770:	mov	r4, #43	; 0x2b
   12774:	mov	r1, #4
   12778:	b	128e4 <putchar_unlocked@plt+0x13c0>
   1277c:	cmp	r9, #69	; 0x45
   12780:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12784:	str	r2, [sp, #84]	; 0x54
   12788:	ldr	r0, [sp, #40]	; 0x28
   1278c:	ldr	r0, [r0]
   12790:	b	13120 <putchar_unlocked@plt+0x1bfc>
   12794:	mov	r3, #2
   12798:	cmp	r9, #69	; 0x45
   1279c:	beq	12e84 <putchar_unlocked@plt+0x1960>
   127a0:	str	r2, [sp, #84]	; 0x54
   127a4:	ldr	r0, [sp, #36]	; 0x24
   127a8:	b	13124 <putchar_unlocked@plt+0x1c00>
   127ac:	cmp	r9, #69	; 0x45
   127b0:	beq	12e84 <putchar_unlocked@plt+0x1960>
   127b4:	str	r2, [sp, #84]	; 0x54
   127b8:	ldr	r0, [sp, #72]	; 0x48
   127bc:	ldr	r0, [r0, #4]
   127c0:	b	13120 <putchar_unlocked@plt+0x1bfc>
   127c4:	cmp	r9, #69	; 0x45
   127c8:	beq	12e84 <putchar_unlocked@plt+0x1960>
   127cc:	mov	lr, r2
   127d0:	cmp	r7, #1
   127d4:	movwlt	r7, #9
   127d8:	mov	r5, #0
   127dc:	mov	r0, #8
   127e0:	ldr	r1, [fp, #20]
   127e4:	ldr	r8, [sp, #88]	; 0x58
   127e8:	sub	ip, fp, #46	; 0x2e
   127ec:	mov	r9, r6
   127f0:	b	12808 <putchar_unlocked@plt+0x12e4>
   127f4:	smmul	r1, r1, r9
   127f8:	asr	r2, r1, #2
   127fc:	add	r1, r2, r1, lsr #31
   12800:	sub	r0, r0, #1
   12804:	sub	r5, r5, #1
   12808:	add	r2, r5, #9
   1280c:	cmp	r7, r2
   12810:	blt	127f4 <putchar_unlocked@plt+0x12d0>
   12814:	cmp	r2, #2
   12818:	blt	12838 <putchar_unlocked@plt+0x1314>
   1281c:	smmul	r3, r1, r9
   12820:	asr	r6, r3, #2
   12824:	add	r3, r6, r3, lsr #31
   12828:	add	r3, r3, r3, lsl #2
   1282c:	sub	r3, r1, r3, lsl #1
   12830:	cmp	r3, #0
   12834:	beq	127f4 <putchar_unlocked@plt+0x12d0>
   12838:	cmp	r2, #1
   1283c:	blt	12870 <putchar_unlocked@plt+0x134c>
   12840:	smmul	r3, r1, r9
   12844:	asr	r6, r3, #2
   12848:	add	r3, r6, r3, lsr #31
   1284c:	add	r6, r3, r3, lsl #2
   12850:	sub	r1, r1, r6, lsl #1
   12854:	add	r1, r1, #48	; 0x30
   12858:	strb	r1, [ip, r0]
   1285c:	sub	r1, r0, #1
   12860:	cmp	r0, #0
   12864:	mov	r0, r1
   12868:	mov	r1, r3
   1286c:	bgt	12840 <putchar_unlocked@plt+0x131c>
   12870:	cmp	r4, #0
   12874:	movweq	r4, #48	; 0x30
   12878:	mvn	r0, r8
   1287c:	cmp	r2, r0
   12880:	bcs	1389c <putchar_unlocked@plt+0x2378>
   12884:	ldr	r0, [sp, #92]	; 0x5c
   12888:	cmp	r0, #0
   1288c:	beq	13740 <putchar_unlocked@plt+0x221c>
   12890:	tst	lr, #1
   12894:	beq	1372c <putchar_unlocked@plt+0x2208>
   12898:	sub	r1, fp, #46	; 0x2e
   1289c:	ldr	r0, [sp, #92]	; 0x5c
   128a0:	bl	13904 <putchar_unlocked@plt+0x23e0>
   128a4:	b	13740 <putchar_unlocked@plt+0x221c>
   128a8:	mov	r3, #1
   128ac:	ldr	r6, [sp, #76]	; 0x4c
   128b0:	orr	r3, r6, r3
   128b4:	eor	r0, r6, #1
   128b8:	and	r2, r2, r0
   128bc:	mov	ip, #112	; 0x70
   128c0:	b	13268 <putchar_unlocked@plt+0x1d44>
   128c4:	cmp	r9, #69	; 0x45
   128c8:	beq	12e84 <putchar_unlocked@plt+0x1960>
   128cc:	str	r2, [sp, #84]	; 0x54
   128d0:	ldr	r0, [sp, #72]	; 0x48
   128d4:	ldr	r0, [r0]
   128d8:	b	13120 <putchar_unlocked@plt+0x1bfc>
   128dc:	movw	r5, #29796	; 0x7464
   128e0:	movt	r5, #1
   128e4:	str	r4, [sp]
   128e8:	str	r1, [sp, #84]	; 0x54
   128ec:	str	r1, [sp, #4]
   128f0:	ldr	r0, [fp, #16]
   128f4:	str	r0, [sp, #8]
   128f8:	ldr	r0, [fp, #20]
   128fc:	str	r0, [sp, #12]
   12900:	and	r6, r2, #1
   12904:	mov	r0, #0
   12908:	mov	r1, r5
   1290c:	ldr	r2, [sp, #72]	; 0x48
   12910:	mov	r3, r6
   12914:	bl	1214c <putchar_unlocked@plt+0xc28>
   12918:	subs	r1, r4, #45	; 0x2d
   1291c:	movne	r1, r7
   12920:	cmp	r7, #0
   12924:	movwmi	r1, #0
   12928:	cmp	r1, r0
   1292c:	mov	r7, r0
   12930:	movhi	r7, r1
   12934:	ldr	r9, [sp, #88]	; 0x58
   12938:	mvn	r2, r9
   1293c:	cmp	r7, r2
   12940:	bcs	1389c <putchar_unlocked@plt+0x2378>
   12944:	ldr	r2, [sp, #92]	; 0x5c
   12948:	cmp	r2, #0
   1294c:	beq	13644 <putchar_unlocked@plt+0x2120>
   12950:	str	r6, [sp, #76]	; 0x4c
   12954:	cmp	r1, r0
   12958:	ldr	r8, [sp, #92]	; 0x5c
   1295c:	bls	13614 <putchar_unlocked@plt+0x20f0>
   12960:	sub	r6, r1, r0
   12964:	cmp	r4, #43	; 0x2b
   12968:	cmpne	r4, #48	; 0x30
   1296c:	bne	135f4 <putchar_unlocked@plt+0x20d0>
   12970:	cmp	r6, #0
   12974:	ldr	r8, [sp, #92]	; 0x5c
   12978:	beq	13614 <putchar_unlocked@plt+0x20f0>
   1297c:	mov	r0, #48	; 0x30
   12980:	mov	r1, r8
   12984:	bl	114a0 <fputc@plt>
   12988:	subs	r6, r6, #1
   1298c:	bne	1297c <putchar_unlocked@plt+0x1458>
   12990:	b	13614 <putchar_unlocked@plt+0x20f0>
   12994:	cmp	r9, #69	; 0x45
   12998:	beq	12e84 <putchar_unlocked@plt+0x1960>
   1299c:	str	r2, [sp, #84]	; 0x54
   129a0:	ldr	r1, [sp, #72]	; 0x48
   129a4:	ldr	r0, [r1, #24]
   129a8:	ldr	r1, [r1, #28]
   129ac:	sub	r0, r1, r0
   129b0:	add	r0, r0, #7
   129b4:	movw	r1, #9363	; 0x2493
   129b8:	movt	r1, #37449	; 0x9249
   129bc:	smmla	r0, r0, r1, r0
   129c0:	b	12a08 <putchar_unlocked@plt+0x14e4>
   129c4:	cmp	r9, #69	; 0x45
   129c8:	beq	12e84 <putchar_unlocked@plt+0x1960>
   129cc:	str	r2, [sp, #84]	; 0x54
   129d0:	ldr	r1, [sp, #72]	; 0x48
   129d4:	ldr	r0, [r1, #24]
   129d8:	ldr	r1, [r1, #28]
   129dc:	add	r0, r0, #6
   129e0:	movw	r2, #9363	; 0x2493
   129e4:	movt	r2, #37449	; 0x9249
   129e8:	smmla	r3, r0, r2, r0
   129ec:	asr	r6, r3, #2
   129f0:	add	r3, r6, r3, lsr #31
   129f4:	rsb	r3, r3, r3, lsl #3
   129f8:	sub	r0, r3, r0
   129fc:	add	r0, r1, r0
   12a00:	add	r0, r0, #7
   12a04:	smmla	r0, r0, r2, r0
   12a08:	asr	r1, r0, #2
   12a0c:	add	r0, r1, r0, lsr #31
   12a10:	b	13120 <putchar_unlocked@plt+0x1bfc>
   12a14:	cmp	r9, #79	; 0x4f
   12a18:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12a1c:	mov	r3, #0
   12a20:	mov	ip, #88	; 0x58
   12a24:	b	13268 <putchar_unlocked@plt+0x1d44>
   12a28:	cmp	r9, #69	; 0x45
   12a2c:	beq	135e8 <putchar_unlocked@plt+0x20c4>
   12a30:	cmp	r9, #79	; 0x4f
   12a34:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12a38:	str	r2, [sp, #84]	; 0x54
   12a3c:	ldr	r0, [sp, #72]	; 0x48
   12a40:	ldr	r0, [r0, #20]
   12a44:	movw	r2, #63636	; 0xf894
   12a48:	movt	r2, #65535	; 0xffff
   12a4c:	mov	r1, #0
   12a50:	cmp	r0, r2
   12a54:	movwlt	r1, #1
   12a58:	b	130f8 <putchar_unlocked@plt+0x1bd4>
   12a5c:	str	r2, [sp, #84]	; 0x54
   12a60:	subs	r5, r4, #45	; 0x2d
   12a64:	bicne	r5, r7, r7, asr #31
   12a68:	ldr	r0, [sp, #44]	; 0x2c
   12a6c:	bl	113d4 <strlen@plt>
   12a70:	mov	r6, r0
   12a74:	cmp	r5, r0
   12a78:	mov	r8, r0
   12a7c:	movhi	r8, r5
   12a80:	ldr	r9, [sp, #88]	; 0x58
   12a84:	mvn	r0, r9
   12a88:	cmp	r8, r0
   12a8c:	bcs	1389c <putchar_unlocked@plt+0x2378>
   12a90:	ldr	r0, [sp, #92]	; 0x5c
   12a94:	cmp	r0, #0
   12a98:	beq	13854 <putchar_unlocked@plt+0x2330>
   12a9c:	cmp	r5, r6
   12aa0:	bls	137f4 <putchar_unlocked@plt+0x22d0>
   12aa4:	sub	r7, r5, r6
   12aa8:	uxtb	r0, r4
   12aac:	cmp	r0, #43	; 0x2b
   12ab0:	cmpne	r0, #48	; 0x30
   12ab4:	bne	137d4 <putchar_unlocked@plt+0x22b0>
   12ab8:	cmp	r7, #0
   12abc:	ldr	r4, [sp, #92]	; 0x5c
   12ac0:	beq	137f4 <putchar_unlocked@plt+0x22d0>
   12ac4:	mov	r0, #48	; 0x30
   12ac8:	mov	r1, r4
   12acc:	bl	114a0 <fputc@plt>
   12ad0:	subs	r7, r7, #1
   12ad4:	bne	12ac4 <putchar_unlocked@plt+0x15a0>
   12ad8:	b	137f4 <putchar_unlocked@plt+0x22d0>
   12adc:	cmp	r9, #0
   12ae0:	bne	12e84 <putchar_unlocked@plt+0x1960>
   12ae4:	ldr	r0, [sp, #76]	; 0x4c
   12ae8:	orr	r2, r0, r2
   12aec:	mov	r3, #0
   12af0:	mov	ip, #97	; 0x61
   12af4:	b	13268 <putchar_unlocked@plt+0x1d44>
   12af8:	cmp	r9, #79	; 0x4f
   12afc:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12b00:	mov	r3, #0
   12b04:	mov	ip, #99	; 0x63
   12b08:	b	13268 <putchar_unlocked@plt+0x1d44>
   12b0c:	cmp	r9, #69	; 0x45
   12b10:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12b14:	str	r2, [sp, #84]	; 0x54
   12b18:	ldr	r0, [sp, #72]	; 0x48
   12b1c:	ldr	r0, [r0, #12]
   12b20:	b	13120 <putchar_unlocked@plt+0x1bfc>
   12b24:	cmp	r9, #69	; 0x45
   12b28:	ldr	r0, [sp, #32]
   12b2c:	bne	12b6c <putchar_unlocked@plt+0x1648>
   12b30:	b	12e84 <putchar_unlocked@plt+0x1960>
   12b34:	cmp	r9, #69	; 0x45
   12b38:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12b3c:	str	r2, [sp, #84]	; 0x54
   12b40:	ldr	r0, [sp, #72]	; 0x48
   12b44:	ldr	r0, [r0, #28]
   12b48:	mov	r1, #0
   12b4c:	cmn	r0, #1
   12b50:	movwlt	r1, #1
   12b54:	add	r0, r0, #1
   12b58:	mov	r3, #3
   12b5c:	b	13128 <putchar_unlocked@plt+0x1c04>
   12b60:	cmp	r9, #69	; 0x45
   12b64:	ldr	r0, [sp, #40]	; 0x28
   12b68:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12b6c:	ldr	r0, [r0]
   12b70:	b	12b80 <putchar_unlocked@plt+0x165c>
   12b74:	cmp	r9, #69	; 0x45
   12b78:	ldr	r0, [sp, #36]	; 0x24
   12b7c:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12b80:	str	r2, [sp, #84]	; 0x54
   12b84:	cmp	r4, #0
   12b88:	movweq	r4, #95	; 0x5f
   12b8c:	b	13120 <putchar_unlocked@plt+0x1bfc>
   12b90:	cmp	r9, #69	; 0x45
   12b94:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12b98:	str	r2, [sp, #84]	; 0x54
   12b9c:	ldr	r0, [sp, #72]	; 0x48
   12ba0:	ldr	r0, [r0, #16]
   12ba4:	mov	r1, #0
   12ba8:	cmn	r0, #1
   12bac:	movwlt	r1, #1
   12bb0:	add	r0, r0, #1
   12bb4:	mov	r3, #2
   12bb8:	b	13128 <putchar_unlocked@plt+0x1c04>
   12bbc:	subs	r0, r4, #45	; 0x2d
   12bc0:	bicne	r0, r7, r7, asr #31
   12bc4:	cmp	r0, #1
   12bc8:	mov	r5, r0
   12bcc:	movls	r5, #1
   12bd0:	ldr	r9, [sp, #88]	; 0x58
   12bd4:	mvn	r1, r9
   12bd8:	cmp	r5, r1
   12bdc:	mov	ip, #-2147483648	; 0x80000000
   12be0:	bcs	1389c <putchar_unlocked@plt+0x2378>
   12be4:	ldr	r6, [sp, #92]	; 0x5c
   12be8:	cmp	r6, #0
   12bec:	beq	13558 <putchar_unlocked@plt+0x2034>
   12bf0:	cmp	r0, #2
   12bf4:	bcc	12c38 <putchar_unlocked@plt+0x1714>
   12bf8:	uxtb	r1, r4
   12bfc:	sub	r4, r0, #1
   12c00:	cmp	r1, #43	; 0x2b
   12c04:	cmpne	r1, #48	; 0x30
   12c08:	bne	12c24 <putchar_unlocked@plt+0x1700>
   12c0c:	mov	r0, #48	; 0x30
   12c10:	mov	r1, r6
   12c14:	bl	114a0 <fputc@plt>
   12c18:	subs	r4, r4, #1
   12c1c:	bne	12c0c <putchar_unlocked@plt+0x16e8>
   12c20:	b	12c38 <putchar_unlocked@plt+0x1714>
   12c24:	mov	r0, #32
   12c28:	mov	r1, r6
   12c2c:	bl	114a0 <fputc@plt>
   12c30:	subs	r4, r4, #1
   12c34:	bne	12c24 <putchar_unlocked@plt+0x1700>
   12c38:	mov	r0, #10
   12c3c:	b	13544 <putchar_unlocked@plt+0x2020>
   12c40:	str	r2, [sp, #84]	; 0x54
   12c44:	ldr	r0, [sp, #72]	; 0x48
   12c48:	ldr	r0, [r0, #16]
   12c4c:	mov	r1, #11
   12c50:	mul	r0, r0, r1
   12c54:	mov	r3, #1
   12c58:	add	r0, r3, r0, asr #5
   12c5c:	mov	r1, #0
   12c60:	b	13128 <putchar_unlocked@plt+0x1c04>
   12c64:	str	r2, [sp, #84]	; 0x54
   12c68:	mov	r0, #28
   12c6c:	ldr	r2, [sp, #72]	; 0x48
   12c70:	mov	r3, r2
   12c74:	vld1.32	{d16-d17}, [r3], r0
   12c78:	add	r2, r2, #16
   12c7c:	vld1.32	{d18-d19}, [r2]
   12c80:	add	r1, sp, #96	; 0x60
   12c84:	add	r2, r1, #16
   12c88:	vld1.32	{d20-d21}, [r3]
   12c8c:	vst1.64	{d18-d19}, [r2]
   12c90:	mov	r5, r1
   12c94:	vst1.64	{d16-d17}, [r5], r0
   12c98:	vst1.32	{d20-d21}, [r5]
   12c9c:	mvn	r0, #0
   12ca0:	str	r0, [r5]
   12ca4:	ldr	r0, [fp, #16]
   12ca8:	bl	15ccc <putchar_unlocked@plt+0x47a8>
   12cac:	ldr	r1, [r5]
   12cb0:	cmp	r1, #0
   12cb4:	bmi	138b8 <putchar_unlocked@plt+0x2394>
   12cb8:	lsr	r1, r0, #31
   12cbc:	ldr	r2, [sp, #28]
   12cc0:	mov	r3, r0
   12cc4:	mov	ip, r6
   12cc8:	smmul	r6, r3, ip
   12ccc:	asr	r5, r6, #2
   12cd0:	add	r6, r5, r6, lsr #31
   12cd4:	add	r5, r6, r6, lsl #2
   12cd8:	sub	r5, r3, r5, lsl #1
   12cdc:	cmp	r0, #0
   12ce0:	rsbmi	r5, r5, #0
   12ce4:	add	r5, r5, #48	; 0x30
   12ce8:	strb	r5, [r2], #-1
   12cec:	add	r3, r3, #9
   12cf0:	cmp	r3, #18
   12cf4:	mov	r3, r6
   12cf8:	bhi	12cc8 <putchar_unlocked@plt+0x17a4>
   12cfc:	add	r6, r2, #1
   12d00:	cmp	r7, #0
   12d04:	movwmi	r7, #1
   12d08:	cmp	r4, #0
   12d0c:	movweq	r4, #48	; 0x30
   12d10:	mov	r8, #0
   12d14:	mov	r2, r7
   12d18:	mov	ip, #-2147483648	; 0x80000000
   12d1c:	movw	lr, #52428	; 0xcccc
   12d20:	movt	lr, #3276	; 0xccc
   12d24:	b	131bc <putchar_unlocked@plt+0x1c98>
   12d28:	subs	r0, r4, #45	; 0x2d
   12d2c:	bicne	r0, r7, r7, asr #31
   12d30:	cmp	r0, #1
   12d34:	mov	r5, r0
   12d38:	movls	r5, #1
   12d3c:	ldr	r9, [sp, #88]	; 0x58
   12d40:	mvn	r1, r9
   12d44:	cmp	r5, r1
   12d48:	mov	ip, #-2147483648	; 0x80000000
   12d4c:	bcs	1389c <putchar_unlocked@plt+0x2378>
   12d50:	ldr	r6, [sp, #92]	; 0x5c
   12d54:	cmp	r6, #0
   12d58:	beq	13558 <putchar_unlocked@plt+0x2034>
   12d5c:	cmp	r0, #2
   12d60:	bcc	12da4 <putchar_unlocked@plt+0x1880>
   12d64:	uxtb	r1, r4
   12d68:	sub	r4, r0, #1
   12d6c:	cmp	r1, #43	; 0x2b
   12d70:	cmpne	r1, #48	; 0x30
   12d74:	bne	12d90 <putchar_unlocked@plt+0x186c>
   12d78:	mov	r0, #48	; 0x30
   12d7c:	mov	r1, r6
   12d80:	bl	114a0 <fputc@plt>
   12d84:	subs	r4, r4, #1
   12d88:	bne	12d78 <putchar_unlocked@plt+0x1854>
   12d8c:	b	12da4 <putchar_unlocked@plt+0x1880>
   12d90:	mov	r0, #32
   12d94:	mov	r1, r6
   12d98:	bl	114a0 <fputc@plt>
   12d9c:	subs	r4, r4, #1
   12da0:	bne	12d90 <putchar_unlocked@plt+0x186c>
   12da4:	mov	r0, #9
   12da8:	b	13544 <putchar_unlocked@plt+0x2020>
   12dac:	str	r2, [sp, #84]	; 0x54
   12db0:	ldr	r0, [sp, #72]	; 0x48
   12db4:	ldr	r0, [r0, #24]
   12db8:	add	r0, r0, #6
   12dbc:	movw	r1, #9363	; 0x2493
   12dc0:	movt	r1, #37449	; 0x9249
   12dc4:	smmla	r1, r0, r1, r0
   12dc8:	asr	r2, r1, #2
   12dcc:	add	r1, r2, r1, lsr #31
   12dd0:	rsb	r1, r1, r1, lsl #3
   12dd4:	sub	r0, r0, r1
   12dd8:	add	r0, r0, #1
   12ddc:	mov	r3, #1
   12de0:	b	13124 <putchar_unlocked@plt+0x1c00>
   12de4:	cmp	r9, #69	; 0x45
   12de8:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12dec:	str	r2, [sp, #84]	; 0x54
   12df0:	ldr	r0, [sp, #72]	; 0x48
   12df4:	ldr	r0, [r0, #24]
   12df8:	mov	r3, #1
   12dfc:	b	13124 <putchar_unlocked@plt+0x1c00>
   12e00:	cmp	r9, #79	; 0x4f
   12e04:	beq	12e84 <putchar_unlocked@plt+0x1960>
   12e08:	mov	r3, #0
   12e0c:	mov	ip, #120	; 0x78
   12e10:	b	13268 <putchar_unlocked@plt+0x1d44>
   12e14:	cmp	r9, #69	; 0x45
   12e18:	bne	1309c <putchar_unlocked@plt+0x1b78>
   12e1c:	mov	r3, #0
   12e20:	mov	ip, #121	; 0x79
   12e24:	b	13268 <putchar_unlocked@plt+0x1d44>
   12e28:	cmp	r0, #122	; 0x7a
   12e2c:	bne	12e84 <putchar_unlocked@plt+0x1960>
   12e30:	add	sl, sl, r3
   12e34:	ldr	r1, [sp, #72]	; 0x48
   12e38:	ldr	r0, [r1, #32]
   12e3c:	cmp	r0, #0
   12e40:	bmi	1303c <putchar_unlocked@plt+0x1b18>
   12e44:	str	r2, [sp, #84]	; 0x54
   12e48:	ldr	r2, [r1, #36]	; 0x24
   12e4c:	cmp	r2, #0
   12e50:	bmi	13560 <putchar_unlocked@plt+0x203c>
   12e54:	mov	r1, #0
   12e58:	bne	13564 <putchar_unlocked@plt+0x2040>
   12e5c:	ldr	r0, [sp, #44]	; 0x2c
   12e60:	ldrb	r0, [r0]
   12e64:	sub	r0, r0, #45	; 0x2d
   12e68:	clz	r0, r0
   12e6c:	lsr	r1, r0, #5
   12e70:	cmp	r3, #3
   12e74:	bls	1356c <putchar_unlocked@plt+0x2048>
   12e78:	ldr	r9, [sp, #88]	; 0x58
   12e7c:	ldr	r2, [sp, #84]	; 0x54
   12e80:	b	12e88 <putchar_unlocked@plt+0x1964>
   12e84:	ldr	r9, [sp, #88]	; 0x58
   12e88:	mov	ip, #-2147483648	; 0x80000000
   12e8c:	subs	r0, r4, #45	; 0x2d
   12e90:	bicne	r0, r7, r7, asr #31
   12e94:	sub	r1, sl, r8
   12e98:	add	r5, r1, #1
   12e9c:	cmp	r0, r5
   12ea0:	mov	r6, r5
   12ea4:	movhi	r6, r0
   12ea8:	mvn	r1, r9
   12eac:	cmp	r6, r1
   12eb0:	bcs	1389c <putchar_unlocked@plt+0x2378>
   12eb4:	ldr	r1, [sp, #92]	; 0x5c
   12eb8:	cmp	r1, #0
   12ebc:	beq	12f64 <putchar_unlocked@plt+0x1a40>
   12ec0:	str	r2, [sp, #84]	; 0x54
   12ec4:	cmp	r0, r5
   12ec8:	bls	12f24 <putchar_unlocked@plt+0x1a00>
   12ecc:	sub	r7, r0, r5
   12ed0:	uxtb	r0, r4
   12ed4:	cmp	r0, #43	; 0x2b
   12ed8:	cmpne	r0, #48	; 0x30
   12edc:	bne	12f04 <putchar_unlocked@plt+0x19e0>
   12ee0:	cmp	r7, #0
   12ee4:	ldr	r4, [sp, #92]	; 0x5c
   12ee8:	beq	12f24 <putchar_unlocked@plt+0x1a00>
   12eec:	mov	r0, #48	; 0x30
   12ef0:	mov	r1, r4
   12ef4:	bl	114a0 <fputc@plt>
   12ef8:	subs	r7, r7, #1
   12efc:	bne	12eec <putchar_unlocked@plt+0x19c8>
   12f00:	b	12f24 <putchar_unlocked@plt+0x1a00>
   12f04:	cmp	r7, #0
   12f08:	ldr	r4, [sp, #92]	; 0x5c
   12f0c:	beq	12f24 <putchar_unlocked@plt+0x1a00>
   12f10:	mov	r0, #32
   12f14:	mov	r1, r4
   12f18:	bl	114a0 <fputc@plt>
   12f1c:	subs	r7, r7, #1
   12f20:	bne	12f10 <putchar_unlocked@plt+0x19ec>
   12f24:	ldr	r0, [sp, #84]	; 0x54
   12f28:	tst	r0, #1
   12f2c:	beq	12f44 <putchar_unlocked@plt+0x1a20>
   12f30:	ldr	r0, [sp, #92]	; 0x5c
   12f34:	mov	r1, r8
   12f38:	mov	r2, r5
   12f3c:	bl	13904 <putchar_unlocked@plt+0x23e0>
   12f40:	b	12f58 <putchar_unlocked@plt+0x1a34>
   12f44:	mov	r0, r8
   12f48:	mov	r1, r5
   12f4c:	mov	r2, #1
   12f50:	ldr	r3, [sp, #92]	; 0x5c
   12f54:	bl	112d8 <fwrite@plt>
   12f58:	mov	ip, #-2147483648	; 0x80000000
   12f5c:	movw	lr, #52428	; 0xcccc
   12f60:	movt	lr, #3276	; 0xccc
   12f64:	add	r9, r6, r9
   12f68:	b	12240 <putchar_unlocked@plt+0xd1c>
   12f6c:	sub	r0, r6, #1
   12f70:	movw	r1, #365	; 0x16d
   12f74:	tst	r0, #3
   12f78:	bne	12fbc <putchar_unlocked@plt+0x1a98>
   12f7c:	movw	r1, #34079	; 0x851f
   12f80:	movt	r1, #20971	; 0x51eb
   12f84:	smmul	r1, r0, r1
   12f88:	asr	r2, r1, #5
   12f8c:	add	r2, r2, r1, lsr #31
   12f90:	mov	r3, #100	; 0x64
   12f94:	mls	r2, r2, r3, r0
   12f98:	asr	r3, r1, #7
   12f9c:	add	r1, r3, r1, lsr #31
   12fa0:	mov	r3, #400	; 0x190
   12fa4:	mls	r0, r1, r3, r0
   12fa8:	movw	r1, #365	; 0x16d
   12fac:	cmp	r0, #0
   12fb0:	movweq	r1, #366	; 0x16e
   12fb4:	cmp	r2, #0
   12fb8:	movwne	r1, #366	; 0x16e
   12fbc:	add	r0, r1, r8
   12fc0:	ldr	r1, [sp, #24]
   12fc4:	bl	13948 <putchar_unlocked@plt+0x2424>
   12fc8:	mov	r5, r0
   12fcc:	mvn	r0, #0
   12fd0:	movw	lr, #52428	; 0xcccc
   12fd4:	movt	lr, #3276	; 0xccc
   12fd8:	ldr	ip, [sp, #76]	; 0x4c
   12fdc:	cmp	ip, #71	; 0x47
   12fe0:	beq	130d8 <putchar_unlocked@plt+0x1bb4>
   12fe4:	cmp	ip, #103	; 0x67
   12fe8:	bne	13108 <putchar_unlocked@plt+0x1be4>
   12fec:	movw	r1, #34079	; 0x851f
   12ff0:	movt	r1, #20971	; 0x51eb
   12ff4:	ldr	r5, [sp, #20]
   12ff8:	smmul	r2, r5, r1
   12ffc:	asr	r3, r2, #5
   13000:	add	r2, r3, r2, lsr #31
   13004:	mov	r3, #100	; 0x64
   13008:	mls	r2, r2, r3, r5
   1300c:	add	r2, r0, r2
   13010:	smmul	r1, r2, r1
   13014:	asr	r6, r1, #5
   13018:	add	r1, r6, r1, lsr #31
   1301c:	mls	r2, r1, r3, r2
   13020:	mov	r3, #2
   13024:	mov	r1, #0
   13028:	cmn	r2, #1
   1302c:	ble	1366c <putchar_unlocked@plt+0x2148>
   13030:	mov	r0, r2
   13034:	ldr	ip, [sp, #76]	; 0x4c
   13038:	b	136a8 <putchar_unlocked@plt+0x2184>
   1303c:	ldr	r9, [sp, #88]	; 0x58
   13040:	mov	ip, #-2147483648	; 0x80000000
   13044:	b	12240 <putchar_unlocked@plt+0xd1c>
   13048:	str	r2, [sp, #84]	; 0x54
   1304c:	ldr	r0, [sp, #72]	; 0x48
   13050:	ldr	r2, [r0, #20]
   13054:	movw	r3, #63636	; 0xf894
   13058:	movt	r3, #65535	; 0xffff
   1305c:	mov	r1, #0
   13060:	cmp	r2, r3
   13064:	mov	r0, #0
   13068:	movwge	r0, #1
   1306c:	and	r0, r0, r2, lsr #31
   13070:	mvn	r6, #98	; 0x62
   13074:	smlabb	r0, r0, r6, r2
   13078:	movw	r6, #34079	; 0x851f
   1307c:	movt	r6, #20971	; 0x51eb
   13080:	smmul	r0, r0, r6
   13084:	asr	r6, r0, #5
   13088:	add	r0, r6, r0, lsr #31
   1308c:	add	r0, r0, #19
   13090:	cmp	r2, r3
   13094:	movwlt	r1, #1
   13098:	b	136a4 <putchar_unlocked@plt+0x2180>
   1309c:	str	r2, [sp, #84]	; 0x54
   130a0:	ldr	r0, [sp, #72]	; 0x48
   130a4:	ldr	r2, [r0, #20]
   130a8:	movw	r0, #34079	; 0x851f
   130ac:	movt	r0, #20971	; 0x51eb
   130b0:	smmul	r0, r2, r0
   130b4:	asr	r1, r0, #5
   130b8:	add	r0, r1, r0, lsr #31
   130bc:	mov	r1, #100	; 0x64
   130c0:	mls	r3, r0, r1, r2
   130c4:	mov	r1, #0
   130c8:	cmn	r3, #1
   130cc:	ble	13690 <putchar_unlocked@plt+0x216c>
   130d0:	mov	r0, r3
   130d4:	b	136a4 <putchar_unlocked@plt+0x2180>
   130d8:	movw	r1, #63636	; 0xf894
   130dc:	movt	r1, #65535	; 0xffff
   130e0:	sub	r2, r1, r0
   130e4:	mov	r1, #0
   130e8:	ldr	r3, [sp, #20]
   130ec:	cmp	r3, r2
   130f0:	movwlt	r1, #1
   130f4:	add	r0, r3, r0
   130f8:	movw	r2, #1900	; 0x76c
   130fc:	add	r0, r0, r2
   13100:	mov	r3, #4
   13104:	b	136a8 <putchar_unlocked@plt+0x2184>
   13108:	movw	r0, #9363	; 0x2493
   1310c:	movt	r0, #37449	; 0x9249
   13110:	smmla	r0, r5, r0, r5
   13114:	asr	r1, r0, #2
   13118:	add	r0, r1, r0, lsr #31
   1311c:	add	r0, r0, #1
   13120:	mov	r3, #2
   13124:	lsr	r1, r0, #31
   13128:	cmp	r1, #0
   1312c:	movwne	r1, #1
   13130:	mov	r2, #0
   13134:	mov	r8, #0
   13138:	cmp	r9, #79	; 0x4f
   1313c:	cmpeq	r1, #0
   13140:	beq	13260 <putchar_unlocked@plt+0x1d3c>
   13144:	mov	r9, r3
   13148:	cmp	r1, #0
   1314c:	rsbne	r0, r0, #0
   13150:	ldr	r6, [sp, #64]	; 0x40
   13154:	mov	ip, #-2147483648	; 0x80000000
   13158:	tst	r2, #1
   1315c:	movne	r3, #58	; 0x3a
   13160:	strbne	r3, [r6, #-1]!
   13164:	movw	r3, #52429	; 0xcccd
   13168:	movt	r3, #52428	; 0xcccc
   1316c:	umull	r3, r5, r0, r3
   13170:	lsr	r3, r5, #3
   13174:	add	r5, r3, r3, lsl #2
   13178:	sub	r5, r0, r5, lsl #1
   1317c:	orr	r5, r5, #48	; 0x30
   13180:	strb	r5, [r6, #-1]!
   13184:	asr	r2, r2, #1
   13188:	cmp	r0, #9
   1318c:	mov	r0, r3
   13190:	bhi	13158 <putchar_unlocked@plt+0x1c34>
   13194:	cmp	r2, #0
   13198:	mov	r0, r3
   1319c:	bne	13158 <putchar_unlocked@plt+0x1c34>
   131a0:	cmp	r7, #0
   131a4:	mov	r2, r9
   131a8:	movpl	r2, r7
   131ac:	cmp	r8, #0
   131b0:	movwne	r8, #43	; 0x2b
   131b4:	cmp	r4, #0
   131b8:	movweq	r4, #48	; 0x30
   131bc:	cmp	r1, #0
   131c0:	movwne	r8, #45	; 0x2d
   131c4:	cmp	r8, #0
   131c8:	mov	r0, r2
   131cc:	subne	r0, r0, #1
   131d0:	ldr	r1, [sp, #64]	; 0x40
   131d4:	sub	r9, r1, r6
   131d8:	sub	r0, r0, r9
   131dc:	cmp	r0, #1
   131e0:	movwlt	r0, #0
   131e4:	subs	r5, r4, #45	; 0x2d
   131e8:	movne	r5, r0
   131ec:	cmp	r8, #0
   131f0:	ldr	r7, [sp, #92]	; 0x5c
   131f4:	beq	13330 <putchar_unlocked@plt+0x1e0c>
   131f8:	cmp	r4, #95	; 0x5f
   131fc:	bne	13338 <putchar_unlocked@plt+0x1e14>
   13200:	str	r9, [sp, #24]
   13204:	str	r2, [sp, #76]	; 0x4c
   13208:	cmp	r7, #0
   1320c:	mov	r9, r7
   13210:	cmpne	r5, #0
   13214:	beq	13230 <putchar_unlocked@plt+0x1d0c>
   13218:	mov	r7, r5
   1321c:	mov	r0, #32
   13220:	mov	r1, r9
   13224:	bl	114a0 <fputc@plt>
   13228:	subs	r7, r7, #1
   1322c:	bne	1321c <putchar_unlocked@plt+0x1cf8>
   13230:	ldr	r2, [sp, #76]	; 0x4c
   13234:	sub	r2, r2, r5
   13238:	ldr	r0, [sp, #88]	; 0x58
   1323c:	add	r0, r5, r0
   13240:	mov	r7, r9
   13244:	mov	ip, #-2147483648	; 0x80000000
   13248:	movw	lr, #52428	; 0xcccc
   1324c:	movt	lr, #3276	; 0xccc
   13250:	ldr	r9, [sp, #24]
   13254:	cmn	r0, #3
   13258:	bls	13344 <putchar_unlocked@plt+0x1e20>
   1325c:	b	1389c <putchar_unlocked@plt+0x2378>
   13260:	ldr	r2, [sp, #84]	; 0x54
   13264:	mov	r3, #0
   13268:	str	r2, [sp, #84]	; 0x54
   1326c:	mov	r8, r3
   13270:	movw	r0, #9504	; 0x2520
   13274:	strh	r0, [fp, #-51]	; 0xffffffcd
   13278:	cmp	r9, #0
   1327c:	ldr	r0, [sp, #68]	; 0x44
   13280:	strbne	r9, [fp, #-49]	; 0xffffffcf
   13284:	ldrne	r0, [sp, #52]	; 0x34
   13288:	mov	r1, #0
   1328c:	strb	r1, [r0, #1]
   13290:	strb	ip, [r0]
   13294:	add	r0, sp, #96	; 0x60
   13298:	sub	r2, fp, #51	; 0x33
   1329c:	mov	r1, #1024	; 0x400
   132a0:	ldr	r3, [sp, #72]	; 0x48
   132a4:	bl	11350 <strftime@plt>
   132a8:	cmp	r0, #0
   132ac:	beq	13328 <putchar_unlocked@plt+0x1e04>
   132b0:	subs	r1, r4, #45	; 0x2d
   132b4:	movne	r1, r7
   132b8:	cmp	r7, #0
   132bc:	movwmi	r1, #0
   132c0:	sub	r5, r0, #1
   132c4:	cmp	r1, r5
   132c8:	mov	r7, r5
   132cc:	movhi	r7, r1
   132d0:	ldr	r9, [sp, #88]	; 0x58
   132d4:	mvn	r0, r9
   132d8:	cmp	r7, r0
   132dc:	bcs	1389c <putchar_unlocked@plt+0x2378>
   132e0:	ldr	r0, [sp, #92]	; 0x5c
   132e4:	cmp	r0, #0
   132e8:	beq	13644 <putchar_unlocked@plt+0x2120>
   132ec:	cmp	r1, r5
   132f0:	bls	13404 <putchar_unlocked@plt+0x1ee0>
   132f4:	sub	r6, r1, r5
   132f8:	cmp	r4, #43	; 0x2b
   132fc:	cmpne	r4, #48	; 0x30
   13300:	bne	133e4 <putchar_unlocked@plt+0x1ec0>
   13304:	cmp	r6, #0
   13308:	ldr	r4, [sp, #92]	; 0x5c
   1330c:	beq	13404 <putchar_unlocked@plt+0x1ee0>
   13310:	mov	r0, #48	; 0x30
   13314:	mov	r1, r4
   13318:	bl	114a0 <fputc@plt>
   1331c:	subs	r6, r6, #1
   13320:	bne	13310 <putchar_unlocked@plt+0x1dec>
   13324:	b	13404 <putchar_unlocked@plt+0x1ee0>
   13328:	ldr	r9, [sp, #88]	; 0x58
   1332c:	b	13648 <putchar_unlocked@plt+0x2124>
   13330:	ldr	r1, [sp, #88]	; 0x58
   13334:	b	1337c <putchar_unlocked@plt+0x1e58>
   13338:	ldr	r0, [sp, #88]	; 0x58
   1333c:	cmn	r0, #3
   13340:	bhi	1389c <putchar_unlocked@plt+0x2378>
   13344:	mov	r5, r0
   13348:	cmp	r7, #0
   1334c:	beq	13370 <putchar_unlocked@plt+0x1e4c>
   13350:	mov	r0, r8
   13354:	mov	r1, r7
   13358:	mov	r8, r2
   1335c:	bl	114a0 <fputc@plt>
   13360:	mov	r2, r8
   13364:	movw	lr, #52428	; 0xcccc
   13368:	movt	lr, #3276	; 0xccc
   1336c:	mov	ip, #-2147483648	; 0x80000000
   13370:	sub	r2, r2, #1
   13374:	mov	r1, r5
   13378:	add	r1, r5, #1
   1337c:	subs	r0, r4, #45	; 0x2d
   13380:	bicne	r0, r2, r2, asr #31
   13384:	cmp	r0, r9
   13388:	mov	r5, r9
   1338c:	movhi	r5, r0
   13390:	mov	r8, r1
   13394:	mvn	r1, r1
   13398:	cmp	r5, r1
   1339c:	bcs	1389c <putchar_unlocked@plt+0x2378>
   133a0:	cmp	r7, #0
   133a4:	beq	134b8 <putchar_unlocked@plt+0x1f94>
   133a8:	cmp	r0, r9
   133ac:	bls	13478 <putchar_unlocked@plt+0x1f54>
   133b0:	sub	r7, r0, r9
   133b4:	cmp	r4, #43	; 0x2b
   133b8:	cmpne	r4, #48	; 0x30
   133bc:	bne	13458 <putchar_unlocked@plt+0x1f34>
   133c0:	cmp	r7, #0
   133c4:	ldr	r4, [sp, #92]	; 0x5c
   133c8:	beq	13478 <putchar_unlocked@plt+0x1f54>
   133cc:	mov	r0, #48	; 0x30
   133d0:	mov	r1, r4
   133d4:	bl	114a0 <fputc@plt>
   133d8:	subs	r7, r7, #1
   133dc:	bne	133cc <putchar_unlocked@plt+0x1ea8>
   133e0:	b	13478 <putchar_unlocked@plt+0x1f54>
   133e4:	cmp	r6, #0
   133e8:	ldr	r4, [sp, #92]	; 0x5c
   133ec:	beq	13404 <putchar_unlocked@plt+0x1ee0>
   133f0:	mov	r0, #32
   133f4:	mov	r1, r4
   133f8:	bl	114a0 <fputc@plt>
   133fc:	subs	r6, r6, #1
   13400:	bne	133f0 <putchar_unlocked@plt+0x1ecc>
   13404:	tst	r8, #1
   13408:	beq	13420 <putchar_unlocked@plt+0x1efc>
   1340c:	ldr	r0, [sp, #92]	; 0x5c
   13410:	ldr	r1, [sp, #48]	; 0x30
   13414:	mov	r2, r5
   13418:	bl	138c0 <putchar_unlocked@plt+0x239c>
   1341c:	b	13644 <putchar_unlocked@plt+0x2120>
   13420:	ldr	r0, [sp, #84]	; 0x54
   13424:	tst	r0, #1
   13428:	beq	13440 <putchar_unlocked@plt+0x1f1c>
   1342c:	ldr	r0, [sp, #92]	; 0x5c
   13430:	ldr	r1, [sp, #48]	; 0x30
   13434:	mov	r2, r5
   13438:	bl	13904 <putchar_unlocked@plt+0x23e0>
   1343c:	b	13644 <putchar_unlocked@plt+0x2120>
   13440:	ldr	r0, [sp, #48]	; 0x30
   13444:	mov	r1, r5
   13448:	mov	r2, #1
   1344c:	ldr	r3, [sp, #92]	; 0x5c
   13450:	bl	112d8 <fwrite@plt>
   13454:	b	13644 <putchar_unlocked@plt+0x2120>
   13458:	cmp	r7, #0
   1345c:	ldr	r4, [sp, #92]	; 0x5c
   13460:	beq	13478 <putchar_unlocked@plt+0x1f54>
   13464:	mov	r0, #32
   13468:	mov	r1, r4
   1346c:	bl	114a0 <fputc@plt>
   13470:	subs	r7, r7, #1
   13474:	bne	13464 <putchar_unlocked@plt+0x1f40>
   13478:	ldr	r0, [sp, #84]	; 0x54
   1347c:	tst	r0, #1
   13480:	beq	13498 <putchar_unlocked@plt+0x1f74>
   13484:	ldr	r0, [sp, #92]	; 0x5c
   13488:	mov	r1, r6
   1348c:	mov	r2, r9
   13490:	bl	13904 <putchar_unlocked@plt+0x23e0>
   13494:	b	134ac <putchar_unlocked@plt+0x1f88>
   13498:	mov	r0, r6
   1349c:	mov	r1, r9
   134a0:	mov	r2, #1
   134a4:	ldr	r3, [sp, #92]	; 0x5c
   134a8:	bl	112d8 <fwrite@plt>
   134ac:	mov	ip, #-2147483648	; 0x80000000
   134b0:	movw	lr, #52428	; 0xcccc
   134b4:	movt	lr, #3276	; 0xccc
   134b8:	mov	r9, r8
   134bc:	add	r9, r5, r8
   134c0:	b	12240 <putchar_unlocked@plt+0xd1c>
   134c4:	subs	r0, r4, #45	; 0x2d
   134c8:	bicne	r0, r7, r7, asr #31
   134cc:	cmp	r0, #1
   134d0:	mov	r5, r0
   134d4:	movls	r5, #1
   134d8:	ldr	r9, [sp, #88]	; 0x58
   134dc:	mvn	r1, r9
   134e0:	cmp	r5, r1
   134e4:	mov	ip, #-2147483648	; 0x80000000
   134e8:	bcs	1389c <putchar_unlocked@plt+0x2378>
   134ec:	ldr	r6, [sp, #92]	; 0x5c
   134f0:	cmp	r6, #0
   134f4:	beq	13558 <putchar_unlocked@plt+0x2034>
   134f8:	cmp	r0, #2
   134fc:	bcc	13540 <putchar_unlocked@plt+0x201c>
   13500:	uxtb	r1, r4
   13504:	sub	r4, r0, #1
   13508:	cmp	r1, #43	; 0x2b
   1350c:	cmpne	r1, #48	; 0x30
   13510:	bne	1352c <putchar_unlocked@plt+0x2008>
   13514:	mov	r0, #48	; 0x30
   13518:	mov	r1, r6
   1351c:	bl	114a0 <fputc@plt>
   13520:	subs	r4, r4, #1
   13524:	bne	13514 <putchar_unlocked@plt+0x1ff0>
   13528:	b	13540 <putchar_unlocked@plt+0x201c>
   1352c:	mov	r0, #32
   13530:	mov	r1, r6
   13534:	bl	114a0 <fputc@plt>
   13538:	subs	r4, r4, #1
   1353c:	bne	1352c <putchar_unlocked@plt+0x2008>
   13540:	ldrb	r0, [sl]
   13544:	mov	r1, r6
   13548:	bl	114a0 <fputc@plt>
   1354c:	mov	ip, #-2147483648	; 0x80000000
   13550:	movw	lr, #52428	; 0xcccc
   13554:	movt	lr, #3276	; 0xccc
   13558:	add	r9, r5, r9
   1355c:	b	12240 <putchar_unlocked@plt+0xd1c>
   13560:	mov	r1, #1
   13564:	cmp	r3, #3
   13568:	bhi	12e78 <putchar_unlocked@plt+0x1954>
   1356c:	str	ip, [sp, #76]	; 0x4c
   13570:	movw	r0, #34953	; 0x8889
   13574:	movt	r0, #34952	; 0x8888
   13578:	mov	r8, r3
   1357c:	smmla	r3, r2, r0, r2
   13580:	asr	r6, r3, #5
   13584:	add	r6, r6, r3, lsr #31
   13588:	smmla	r0, r6, r0, r6
   1358c:	asr	r3, r0, #5
   13590:	add	r0, r3, r0, lsr #31
   13594:	rsb	r0, r0, r0, lsl #4
   13598:	sub	r3, r6, r0, lsl #2
   1359c:	movw	r0, #46021	; 0xb3c5
   135a0:	movt	r0, #37282	; 0x91a2
   135a4:	smmla	r0, r2, r0, r2
   135a8:	asr	r5, r0, #11
   135ac:	add	r0, r5, r0, lsr #31
   135b0:	rsb	r6, r6, r6, lsl #4
   135b4:	sub	r2, r2, r6, lsl #2
   135b8:	add	r6, pc, #0
   135bc:	ldr	pc, [r6, r8, lsl #2]
   135c0:	ldrdeq	r3, [r1], -r0
   135c4:	andeq	r3, r1, r4, ror #16
   135c8:	andeq	r3, r1, ip, lsl #14
   135cc:	andeq	r3, r1, r4, lsl #14
   135d0:	mov	r2, #100	; 0x64
   135d4:	mla	r0, r0, r2, r3
   135d8:	mov	r3, #5
   135dc:	mov	r8, #1
   135e0:	mov	r2, #0
   135e4:	b	13878 <putchar_unlocked@plt+0x2354>
   135e8:	mov	r3, #0
   135ec:	mov	ip, #89	; 0x59
   135f0:	b	13268 <putchar_unlocked@plt+0x1d44>
   135f4:	cmp	r6, #0
   135f8:	ldr	r8, [sp, #92]	; 0x5c
   135fc:	beq	13614 <putchar_unlocked@plt+0x20f0>
   13600:	mov	r0, #32
   13604:	mov	r1, r8
   13608:	bl	114a0 <fputc@plt>
   1360c:	subs	r6, r6, #1
   13610:	bne	13600 <putchar_unlocked@plt+0x20dc>
   13614:	str	r4, [sp]
   13618:	ldr	r0, [sp, #84]	; 0x54
   1361c:	str	r0, [sp, #4]
   13620:	ldr	r0, [fp, #16]
   13624:	str	r0, [sp, #8]
   13628:	ldr	r0, [fp, #20]
   1362c:	str	r0, [sp, #12]
   13630:	mov	r0, r8
   13634:	mov	r1, r5
   13638:	ldr	r2, [sp, #72]	; 0x48
   1363c:	ldr	r3, [sp, #76]	; 0x4c
   13640:	bl	1214c <putchar_unlocked@plt+0xc28>
   13644:	add	r9, r7, r9
   13648:	mov	ip, #-2147483648	; 0x80000000
   1364c:	movw	lr, #52428	; 0xcccc
   13650:	movt	lr, #3276	; 0xccc
   13654:	b	12240 <putchar_unlocked@plt+0xd1c>
   13658:	cmp	r7, #6
   1365c:	mov	r0, r7
   13660:	movle	r0, #6
   13664:	sub	r1, r0, #6
   13668:	b	128e4 <putchar_unlocked@plt+0x13c0>
   1366c:	movw	r3, #63636	; 0xf894
   13670:	movt	r3, #65535	; 0xffff
   13674:	sub	r3, r3, r0
   13678:	add	r0, r2, #100	; 0x64
   1367c:	cmp	r5, r3
   13680:	mov	r3, #2
   13684:	rsblt	r0, r2, #0
   13688:	ldr	ip, [sp, #76]	; 0x4c
   1368c:	b	136a8 <putchar_unlocked@plt+0x2184>
   13690:	add	r0, r3, #100	; 0x64
   13694:	movw	r6, #63636	; 0xf894
   13698:	movt	r6, #65535	; 0xffff
   1369c:	cmp	r2, r6
   136a0:	rsblt	r0, r3, #0
   136a4:	mov	r3, #2
   136a8:	cmp	r4, #0
   136ac:	ldr	r2, [fp, #8]
   136b0:	moveq	r4, r2
   136b4:	mov	r2, #0
   136b8:	cmp	r4, #43	; 0x2b
   136bc:	mov	r8, #0
   136c0:	bne	13138 <putchar_unlocked@plt+0x1c14>
   136c4:	str	r1, [sp, #24]
   136c8:	mov	r1, r3
   136cc:	mov	r3, #0
   136d0:	cmp	r1, r7
   136d4:	str	ip, [sp, #76]	; 0x4c
   136d8:	mov	r6, #0
   136dc:	movwlt	r6, #1
   136e0:	movw	r5, #9999	; 0x270f
   136e4:	cmp	r1, #2
   136e8:	movweq	r5, #99	; 0x63
   136ec:	cmp	r5, r0
   136f0:	movwcc	r3, #1
   136f4:	orr	r8, r6, r3
   136f8:	mov	r3, r1
   136fc:	ldr	r1, [sp, #24]
   13700:	b	13878 <putchar_unlocked@plt+0x2354>
   13704:	cmp	r2, #0
   13708:	beq	1385c <putchar_unlocked@plt+0x2338>
   1370c:	movw	r6, #10000	; 0x2710
   13710:	mla	r0, r0, r6, r2
   13714:	mov	r2, #100	; 0x64
   13718:	mla	r0, r3, r2, r0
   1371c:	mov	r3, #9
   13720:	mov	r8, #1
   13724:	mov	r2, #20
   13728:	b	13878 <putchar_unlocked@plt+0x2354>
   1372c:	sub	r0, fp, #46	; 0x2e
   13730:	mov	r1, r2
   13734:	mov	r2, #1
   13738:	ldr	r3, [sp, #92]	; 0x5c
   1373c:	bl	112d8 <fwrite@plt>
   13740:	mov	r6, #0
   13744:	cmp	r4, #45	; 0x2d
   13748:	subne	r0, r7, r5
   1374c:	subne	r0, r0, #9
   13750:	bicne	r6, r0, r0, asr #31
   13754:	add	r0, r8, r5
   13758:	mvn	r1, #9
   1375c:	sub	r0, r1, r0
   13760:	cmp	r6, r0
   13764:	bcs	1389c <putchar_unlocked@plt+0x2378>
   13768:	ldr	r7, [sp, #92]	; 0x5c
   1376c:	cmp	r7, #0
   13770:	cmpne	r6, #0
   13774:	bne	13788 <putchar_unlocked@plt+0x2264>
   13778:	add	r0, r8, r6
   1377c:	add	r0, r0, r5
   13780:	add	r9, r0, #9
   13784:	b	13648 <putchar_unlocked@plt+0x2124>
   13788:	uxtb	r0, r4
   1378c:	cmp	r0, #43	; 0x2b
   13790:	beq	137a0 <putchar_unlocked@plt+0x227c>
   13794:	cmp	r0, #48	; 0x30
   13798:	mov	r4, r6
   1379c:	bne	137bc <putchar_unlocked@plt+0x2298>
   137a0:	mov	r4, r6
   137a4:	mov	r0, #48	; 0x30
   137a8:	mov	r1, r7
   137ac:	bl	114a0 <fputc@plt>
   137b0:	subs	r4, r4, #1
   137b4:	bne	137a4 <putchar_unlocked@plt+0x2280>
   137b8:	b	13778 <putchar_unlocked@plt+0x2254>
   137bc:	mov	r0, #32
   137c0:	mov	r1, r7
   137c4:	bl	114a0 <fputc@plt>
   137c8:	subs	r4, r4, #1
   137cc:	bne	137bc <putchar_unlocked@plt+0x2298>
   137d0:	b	13778 <putchar_unlocked@plt+0x2254>
   137d4:	cmp	r7, #0
   137d8:	ldr	r4, [sp, #92]	; 0x5c
   137dc:	beq	137f4 <putchar_unlocked@plt+0x22d0>
   137e0:	mov	r0, #32
   137e4:	mov	r1, r4
   137e8:	bl	114a0 <fputc@plt>
   137ec:	subs	r7, r7, #1
   137f0:	bne	137e0 <putchar_unlocked@plt+0x22bc>
   137f4:	mov	r2, r6
   137f8:	ldr	r6, [sp, #76]	; 0x4c
   137fc:	tst	r6, #1
   13800:	beq	13818 <putchar_unlocked@plt+0x22f4>
   13804:	ldr	r0, [sp, #92]	; 0x5c
   13808:	ldr	r1, [sp, #44]	; 0x2c
   1380c:	bl	138c0 <putchar_unlocked@plt+0x239c>
   13810:	add	r9, r8, r9
   13814:	b	13648 <putchar_unlocked@plt+0x2124>
   13818:	eor	r0, r6, #1
   1381c:	ldr	r1, [sp, #84]	; 0x54
   13820:	and	r0, r1, r0
   13824:	tst	r0, #1
   13828:	beq	13840 <putchar_unlocked@plt+0x231c>
   1382c:	ldr	r0, [sp, #92]	; 0x5c
   13830:	ldr	r1, [sp, #44]	; 0x2c
   13834:	bl	13904 <putchar_unlocked@plt+0x23e0>
   13838:	add	r9, r8, r9
   1383c:	b	13648 <putchar_unlocked@plt+0x2124>
   13840:	ldr	r0, [sp, #44]	; 0x2c
   13844:	mov	r1, r2
   13848:	mov	r2, #1
   1384c:	ldr	r3, [sp, #92]	; 0x5c
   13850:	bl	112d8 <fwrite@plt>
   13854:	add	r9, r8, r9
   13858:	b	13648 <putchar_unlocked@plt+0x2124>
   1385c:	cmp	r3, #0
   13860:	beq	13880 <putchar_unlocked@plt+0x235c>
   13864:	mov	r2, #100	; 0x64
   13868:	mla	r0, r0, r2, r3
   1386c:	mov	r3, #6
   13870:	mov	r8, #1
   13874:	mov	r2, #4
   13878:	ldr	ip, [sp, #76]	; 0x4c
   1387c:	b	13138 <putchar_unlocked@plt+0x1c14>
   13880:	mov	r3, #3
   13884:	b	135dc <putchar_unlocked@plt+0x20b8>
   13888:	mov	r9, #0
   1388c:	ldr	r0, [sp, #60]	; 0x3c
   13890:	ldr	r1, [sp, #56]	; 0x38
   13894:	str	r1, [r0]
   13898:	b	138ac <putchar_unlocked@plt+0x2388>
   1389c:	mov	r0, #34	; 0x22
   138a0:	ldr	r1, [sp, #60]	; 0x3c
   138a4:	str	r0, [r1]
   138a8:	mov	r9, #0
   138ac:	mov	r0, r9
   138b0:	sub	sp, fp, #28
   138b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138b8:	mov	r0, #75	; 0x4b
   138bc:	b	138a0 <putchar_unlocked@plt+0x237c>
   138c0:	push	{r4, r5, r6, r7, fp, lr}
   138c4:	add	fp, sp, #16
   138c8:	cmp	r2, #0
   138cc:	beq	13900 <putchar_unlocked@plt+0x23dc>
   138d0:	mov	r4, r2
   138d4:	mov	r5, r1
   138d8:	mov	r6, r0
   138dc:	bl	11374 <__ctype_tolower_loc@plt>
   138e0:	mov	r7, r0
   138e4:	ldrb	r0, [r5], #1
   138e8:	ldr	r1, [r7]
   138ec:	ldr	r0, [r1, r0, lsl #2]
   138f0:	mov	r1, r6
   138f4:	bl	114a0 <fputc@plt>
   138f8:	subs	r4, r4, #1
   138fc:	bne	138e4 <putchar_unlocked@plt+0x23c0>
   13900:	pop	{r4, r5, r6, r7, fp, pc}
   13904:	push	{r4, r5, r6, r7, fp, lr}
   13908:	add	fp, sp, #16
   1390c:	cmp	r2, #0
   13910:	beq	13944 <putchar_unlocked@plt+0x2420>
   13914:	mov	r4, r2
   13918:	mov	r5, r1
   1391c:	mov	r6, r0
   13920:	bl	11380 <__ctype_toupper_loc@plt>
   13924:	mov	r7, r0
   13928:	ldrb	r0, [r5], #1
   1392c:	ldr	r1, [r7]
   13930:	ldr	r0, [r1, r0, lsl #2]
   13934:	mov	r1, r6
   13938:	bl	114a0 <fputc@plt>
   1393c:	subs	r4, r4, #1
   13940:	bne	13928 <putchar_unlocked@plt+0x2404>
   13944:	pop	{r4, r5, r6, r7, fp, pc}
   13948:	sub	r1, r0, r1
   1394c:	movw	r2, #382	; 0x17e
   13950:	add	r1, r1, r2
   13954:	movw	r2, #9363	; 0x2493
   13958:	movt	r2, #37449	; 0x9249
   1395c:	smmla	r2, r1, r2, r1
   13960:	asr	r3, r2, #2
   13964:	add	r2, r3, r2, lsr #31
   13968:	rsb	r2, r2, r2, lsl #3
   1396c:	sub	r1, r2, r1
   13970:	add	r0, r0, r1
   13974:	add	r0, r0, #3
   13978:	bx	lr
   1397c:	push	{r4, r5, r6, r7, fp, lr}
   13980:	add	fp, sp, #16
   13984:	sub	sp, sp, #8
   13988:	mov	r5, r3
   1398c:	mov	r6, r2
   13990:	mov	r4, r0
   13994:	ldr	r0, [r0, #4]
   13998:	ldr	r1, [r4, #8]
   1399c:	cmp	r1, r0
   139a0:	bne	139bc <putchar_unlocked@plt+0x2498>
   139a4:	ldrd	r0, [r4, #16]
   139a8:	cmp	r1, r0
   139ac:	bne	139bc <putchar_unlocked@plt+0x2498>
   139b0:	ldr	r0, [r4, #36]	; 0x24
   139b4:	cmp	r0, #0
   139b8:	beq	139d4 <putchar_unlocked@plt+0x24b0>
   139bc:	mov	r0, r4
   139c0:	mov	r2, r6
   139c4:	mov	r3, r5
   139c8:	sub	sp, fp, #16
   139cc:	pop	{r4, r5, r6, r7, fp, lr}
   139d0:	b	1144c <fseeko64@plt>
   139d4:	ldr	r7, [fp, #8]
   139d8:	mov	r0, r4
   139dc:	bl	11428 <fileno@plt>
   139e0:	str	r7, [sp]
   139e4:	mov	r2, r6
   139e8:	mov	r3, r5
   139ec:	bl	112e4 <lseek64@plt>
   139f0:	and	r2, r0, r1
   139f4:	cmn	r2, #1
   139f8:	beq	13a18 <putchar_unlocked@plt+0x24f4>
   139fc:	strd	r0, [r4, #80]	; 0x50
   13a00:	ldr	r0, [r4]
   13a04:	bic	r0, r0, #16
   13a08:	str	r0, [r4]
   13a0c:	mov	r0, #0
   13a10:	sub	sp, fp, #16
   13a14:	pop	{r4, r5, r6, r7, fp, pc}
   13a18:	mvn	r0, #0
   13a1c:	sub	sp, fp, #16
   13a20:	pop	{r4, r5, r6, r7, fp, pc}
   13a24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a28:	add	fp, sp, #24
   13a2c:	sub	sp, sp, #8
   13a30:	movw	r6, #33168	; 0x8190
   13a34:	movt	r6, #2
   13a38:	ldr	r7, [r6]
   13a3c:	mov	r4, #0
   13a40:	str	r4, [r6]
   13a44:	cmp	r0, #2
   13a48:	bne	13abc <putchar_unlocked@plt+0x2598>
   13a4c:	mov	r8, r3
   13a50:	mov	r5, r2
   13a54:	str	r4, [sp]
   13a58:	movw	r2, #29805	; 0x746d
   13a5c:	movt	r2, #1
   13a60:	movw	r3, #29820	; 0x747c
   13a64:	movt	r3, #1
   13a68:	mov	r0, #2
   13a6c:	bl	11398 <getopt_long@plt>
   13a70:	cmp	r0, #104	; 0x68
   13a74:	beq	13ab0 <putchar_unlocked@plt+0x258c>
   13a78:	cmp	r0, #118	; 0x76
   13a7c:	bne	13abc <putchar_unlocked@plt+0x2598>
   13a80:	ldr	r3, [fp, #8]
   13a84:	add	r1, fp, #16
   13a88:	str	r1, [sp, #4]
   13a8c:	movw	r0, #33164	; 0x818c
   13a90:	movt	r0, #2
   13a94:	ldr	r0, [r0]
   13a98:	str	r1, [sp]
   13a9c:	mov	r1, r5
   13aa0:	mov	r2, r8
   13aa4:	bl	16180 <putchar_unlocked@plt+0x4c5c>
   13aa8:	mov	r0, #0
   13aac:	bl	113bc <exit@plt>
   13ab0:	ldr	r1, [fp, #12]
   13ab4:	mov	r0, #0
   13ab8:	blx	r1
   13abc:	movw	r0, #33152	; 0x8180
   13ac0:	movt	r0, #2
   13ac4:	str	r4, [r0]
   13ac8:	str	r7, [r6]
   13acc:	sub	sp, fp, #24
   13ad0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ad4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ad8:	add	fp, sp, #24
   13adc:	sub	sp, sp, #8
   13ae0:	mov	r8, r3
   13ae4:	mov	r9, r2
   13ae8:	movw	r7, #33168	; 0x8190
   13aec:	movt	r7, #2
   13af0:	ldr	r4, [r7]
   13af4:	mov	r2, #1
   13af8:	str	r2, [r7]
   13afc:	mov	r6, #0
   13b00:	str	r6, [sp]
   13b04:	ldr	r3, [fp, #12]
   13b08:	movw	r5, #28944	; 0x7110
   13b0c:	movt	r5, #1
   13b10:	movw	r2, #29805	; 0x746d
   13b14:	movt	r2, #1
   13b18:	cmp	r3, #0
   13b1c:	movne	r2, r5
   13b20:	movw	r3, #29820	; 0x747c
   13b24:	movt	r3, #1
   13b28:	bl	11398 <getopt_long@plt>
   13b2c:	cmn	r0, #1
   13b30:	beq	13b5c <putchar_unlocked@plt+0x2638>
   13b34:	cmp	r0, #104	; 0x68
   13b38:	beq	13b50 <putchar_unlocked@plt+0x262c>
   13b3c:	cmp	r0, #118	; 0x76
   13b40:	beq	13b68 <putchar_unlocked@plt+0x2644>
   13b44:	movw	r0, #33076	; 0x8134
   13b48:	movt	r0, #2
   13b4c:	ldr	r6, [r0]
   13b50:	ldr	r1, [fp, #16]
   13b54:	mov	r0, r6
   13b58:	blx	r1
   13b5c:	str	r4, [r7]
   13b60:	sub	sp, fp, #24
   13b64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13b68:	ldr	r3, [fp, #8]
   13b6c:	add	r1, fp, #20
   13b70:	str	r1, [sp, #4]
   13b74:	movw	r0, #33164	; 0x818c
   13b78:	movt	r0, #2
   13b7c:	ldr	r0, [r0]
   13b80:	str	r1, [sp]
   13b84:	mov	r1, r9
   13b88:	mov	r2, r8
   13b8c:	bl	16180 <putchar_unlocked@plt+0x4c5c>
   13b90:	mov	r0, #0
   13b94:	bl	113bc <exit@plt>
   13b98:	push	{r4, r5, fp, lr}
   13b9c:	add	fp, sp, #8
   13ba0:	cmp	r0, #0
   13ba4:	beq	13c38 <putchar_unlocked@plt+0x2714>
   13ba8:	mov	r4, r0
   13bac:	mov	r1, #47	; 0x2f
   13bb0:	bl	11488 <strrchr@plt>
   13bb4:	cmp	r0, #0
   13bb8:	mov	r5, r4
   13bbc:	addne	r5, r0, #1
   13bc0:	sub	r0, r5, r4
   13bc4:	cmp	r0, #7
   13bc8:	blt	13c1c <putchar_unlocked@plt+0x26f8>
   13bcc:	sub	r0, r5, #7
   13bd0:	movw	r1, #29924	; 0x74e4
   13bd4:	movt	r1, #1
   13bd8:	mov	r2, #7
   13bdc:	bl	114f4 <strncmp@plt>
   13be0:	cmp	r0, #0
   13be4:	bne	13c1c <putchar_unlocked@plt+0x26f8>
   13be8:	movw	r1, #29932	; 0x74ec
   13bec:	movt	r1, #1
   13bf0:	mov	r0, r5
   13bf4:	mov	r2, #3
   13bf8:	bl	114f4 <strncmp@plt>
   13bfc:	cmp	r0, #0
   13c00:	beq	13c0c <putchar_unlocked@plt+0x26e8>
   13c04:	mov	r4, r5
   13c08:	b	13c1c <putchar_unlocked@plt+0x26f8>
   13c0c:	add	r4, r5, #3
   13c10:	movw	r0, #33144	; 0x8178
   13c14:	movt	r0, #2
   13c18:	str	r4, [r0]
   13c1c:	movw	r0, #33148	; 0x817c
   13c20:	movt	r0, #2
   13c24:	str	r4, [r0]
   13c28:	movw	r0, #33188	; 0x81a4
   13c2c:	movt	r0, #2
   13c30:	str	r4, [r0]
   13c34:	pop	{r4, r5, fp, pc}
   13c38:	movw	r0, #33160	; 0x8188
   13c3c:	movt	r0, #2
   13c40:	ldr	r3, [r0]
   13c44:	movw	r0, #29868	; 0x74ac
   13c48:	movt	r0, #1
   13c4c:	mov	r1, #55	; 0x37
   13c50:	mov	r2, #1
   13c54:	bl	112d8 <fwrite@plt>
   13c58:	bl	11500 <abort@plt>
   13c5c:	push	{r4, r5, r6, sl, fp, lr}
   13c60:	add	fp, sp, #16
   13c64:	mov	r4, r0
   13c68:	movw	r0, #33192	; 0x81a8
   13c6c:	movt	r0, #2
   13c70:	cmp	r4, #0
   13c74:	moveq	r4, r0
   13c78:	bl	113ec <__errno_location@plt>
   13c7c:	mov	r5, r0
   13c80:	ldr	r6, [r0]
   13c84:	mov	r0, r4
   13c88:	mov	r1, #48	; 0x30
   13c8c:	bl	165c0 <putchar_unlocked@plt+0x509c>
   13c90:	str	r6, [r5]
   13c94:	pop	{r4, r5, r6, sl, fp, pc}
   13c98:	movw	r1, #33192	; 0x81a8
   13c9c:	movt	r1, #2
   13ca0:	cmp	r0, #0
   13ca4:	movne	r1, r0
   13ca8:	ldr	r0, [r1]
   13cac:	bx	lr
   13cb0:	movw	r2, #33192	; 0x81a8
   13cb4:	movt	r2, #2
   13cb8:	cmp	r0, #0
   13cbc:	movne	r2, r0
   13cc0:	str	r1, [r2]
   13cc4:	bx	lr
   13cc8:	movw	r3, #33192	; 0x81a8
   13ccc:	movt	r3, #2
   13cd0:	cmp	r0, #0
   13cd4:	movne	r3, r0
   13cd8:	ubfx	r0, r1, #5, #3
   13cdc:	add	ip, r3, r0, lsl #2
   13ce0:	ldr	r3, [ip, #8]
   13ce4:	and	r1, r1, #31
   13ce8:	mov	r0, #1
   13cec:	and	r0, r0, r3, lsr r1
   13cf0:	and	r2, r2, #1
   13cf4:	eor	r2, r0, r2
   13cf8:	eor	r1, r3, r2, lsl r1
   13cfc:	str	r1, [ip, #8]
   13d00:	bx	lr
   13d04:	movw	r2, #33192	; 0x81a8
   13d08:	movt	r2, #2
   13d0c:	cmp	r0, #0
   13d10:	movne	r2, r0
   13d14:	ldr	r0, [r2, #4]
   13d18:	str	r1, [r2, #4]
   13d1c:	bx	lr
   13d20:	push	{fp, lr}
   13d24:	mov	fp, sp
   13d28:	movw	r3, #33192	; 0x81a8
   13d2c:	movt	r3, #2
   13d30:	cmp	r0, #0
   13d34:	movne	r3, r0
   13d38:	mov	r0, #10
   13d3c:	str	r0, [r3]
   13d40:	cmp	r1, #0
   13d44:	cmpne	r2, #0
   13d48:	bne	13d50 <putchar_unlocked@plt+0x282c>
   13d4c:	bl	11500 <abort@plt>
   13d50:	str	r1, [r3, #40]	; 0x28
   13d54:	str	r2, [r3, #44]	; 0x2c
   13d58:	pop	{fp, pc}
   13d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d60:	add	fp, sp, #28
   13d64:	sub	sp, sp, #20
   13d68:	mov	r8, r3
   13d6c:	mov	r9, r2
   13d70:	mov	sl, r1
   13d74:	mov	r7, r0
   13d78:	ldr	r0, [fp, #8]
   13d7c:	movw	r5, #33192	; 0x81a8
   13d80:	movt	r5, #2
   13d84:	cmp	r0, #0
   13d88:	movne	r5, r0
   13d8c:	bl	113ec <__errno_location@plt>
   13d90:	mov	r4, r0
   13d94:	ldm	r5, {r0, r1}
   13d98:	ldr	r2, [r5, #40]	; 0x28
   13d9c:	ldr	r3, [r5, #44]	; 0x2c
   13da0:	ldr	r6, [r4]
   13da4:	add	r5, r5, #8
   13da8:	stm	sp, {r0, r1, r5}
   13dac:	str	r2, [sp, #12]
   13db0:	str	r3, [sp, #16]
   13db4:	mov	r0, r7
   13db8:	mov	r1, sl
   13dbc:	mov	r2, r9
   13dc0:	mov	r3, r8
   13dc4:	bl	13dd4 <putchar_unlocked@plt+0x28b0>
   13dc8:	str	r6, [r4]
   13dcc:	sub	sp, fp, #28
   13dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dd8:	add	fp, sp, #28
   13ddc:	sub	sp, sp, #156	; 0x9c
   13de0:	mov	r9, r3
   13de4:	mov	r7, r1
   13de8:	mov	r6, r0
   13dec:	str	r2, [fp, #-80]	; 0xffffffb0
   13df0:	add	r0, r2, #1
   13df4:	str	r0, [sp, #76]	; 0x4c
   13df8:	ldr	r0, [fp, #12]
   13dfc:	and	r1, r0, #1
   13e00:	str	r1, [sp, #40]	; 0x28
   13e04:	and	r1, r0, #4
   13e08:	str	r1, [sp, #36]	; 0x24
   13e0c:	ubfx	r4, r0, #1, #1
   13e10:	bl	112f0 <__ctype_get_mb_cur_max@plt>
   13e14:	str	r0, [sp, #44]	; 0x2c
   13e18:	ldr	r0, [fp, #24]
   13e1c:	str	r0, [sp, #88]	; 0x58
   13e20:	ldr	r0, [fp, #20]
   13e24:	str	r0, [sp, #80]	; 0x50
   13e28:	ldr	r1, [fp, #8]
   13e2c:	mov	r0, #0
   13e30:	str	r0, [sp, #84]	; 0x54
   13e34:	mov	r0, #0
   13e38:	str	r0, [fp, #-84]	; 0xffffffac
   13e3c:	mov	r0, #0
   13e40:	str	r0, [fp, #-72]	; 0xffffffb8
   13e44:	mov	r0, #0
   13e48:	mov	r2, #0
   13e4c:	str	r2, [fp, #-56]	; 0xffffffc8
   13e50:	mov	r2, #0
   13e54:	str	r2, [sp, #64]	; 0x40
   13e58:	mov	r2, #1
   13e5c:	str	r2, [fp, #-48]	; 0xffffffd0
   13e60:	cmp	r1, #10
   13e64:	bhi	14d90 <putchar_unlocked@plt+0x386c>
   13e68:	mov	sl, r7
   13e6c:	mov	r7, r1
   13e70:	add	r1, pc, #24
   13e74:	mov	r8, #0
   13e78:	mov	r2, #1
   13e7c:	mov	r3, #0
   13e80:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13e84:	mov	lr, r9
   13e88:	mov	r5, r6
   13e8c:	ldr	pc, [r1, r7, lsl #2]
   13e90:	andeq	r3, r1, r4, ror #30
   13e94:	andeq	r3, r1, r4, lsr #31
   13e98:	andeq	r3, r1, r4, ror pc
   13e9c:	andeq	r3, r1, ip, asr pc
   13ea0:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13ea4:	strdeq	r3, [r1], -r8
   13ea8:	andeq	r3, r1, r4, lsl #31
   13eac:	andeq	r4, r1, r4, asr r0
   13eb0:			; <UNDEFINED> instruction: 0x00013ebc
   13eb4:			; <UNDEFINED> instruction: 0x00013ebc
   13eb8:	andeq	r3, r1, r8, ror #29
   13ebc:	movw	r0, #30016	; 0x7540
   13ec0:	movt	r0, #1
   13ec4:	mov	r1, r7
   13ec8:	bl	15398 <putchar_unlocked@plt+0x3e74>
   13ecc:	str	r0, [sp, #80]	; 0x50
   13ed0:	movw	r0, #30018	; 0x7542
   13ed4:	movt	r0, #1
   13ed8:	mov	r1, r7
   13edc:	bl	15398 <putchar_unlocked@plt+0x3e74>
   13ee0:	mov	r5, r6
   13ee4:	str	r0, [sp, #88]	; 0x58
   13ee8:	mov	r8, #0
   13eec:	tst	r4, #1
   13ef0:	str	r7, [fp, #-64]	; 0xffffffc0
   13ef4:	bne	13f2c <putchar_unlocked@plt+0x2a08>
   13ef8:	ldr	r0, [sp, #80]	; 0x50
   13efc:	ldrb	r0, [r0]
   13f00:	cmp	r0, #0
   13f04:	beq	13f2c <putchar_unlocked@plt+0x2a08>
   13f08:	ldr	r1, [sp, #80]	; 0x50
   13f0c:	add	r1, r1, #1
   13f10:	mov	r8, #0
   13f14:	cmp	r8, sl
   13f18:	strbcc	r0, [r5, r8]
   13f1c:	ldrb	r0, [r1, r8]
   13f20:	add	r8, r8, #1
   13f24:	cmp	r0, #0
   13f28:	bne	13f14 <putchar_unlocked@plt+0x29f0>
   13f2c:	ldr	r7, [sp, #88]	; 0x58
   13f30:	mov	r0, r7
   13f34:	bl	113d4 <strlen@plt>
   13f38:	mov	r5, r6
   13f3c:	str	r0, [fp, #-72]	; 0xffffffb8
   13f40:	str	r7, [fp, #-84]	; 0xffffffac
   13f44:	mov	r2, #1
   13f48:	mov	r3, r4
   13f4c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13f50:	mov	lr, r9
   13f54:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13f58:	b	14054 <putchar_unlocked@plt+0x2b30>
   13f5c:	mov	r0, #1
   13f60:	b	13fa4 <putchar_unlocked@plt+0x2a80>
   13f64:	mov	r7, #0
   13f68:	mov	r8, #0
   13f6c:	mov	r2, r0
   13f70:	b	14050 <putchar_unlocked@plt+0x2b2c>
   13f74:	tst	r4, #1
   13f78:	bne	13fa4 <putchar_unlocked@plt+0x2a80>
   13f7c:	mov	r2, r0
   13f80:	b	13fcc <putchar_unlocked@plt+0x2aa8>
   13f84:	mov	r0, #1
   13f88:	str	r0, [fp, #-72]	; 0xffffffb8
   13f8c:	mov	r8, #0
   13f90:	mov	r7, #5
   13f94:	b	14010 <putchar_unlocked@plt+0x2aec>
   13f98:	mov	r2, #1
   13f9c:	tst	r4, #1
   13fa0:	beq	13fcc <putchar_unlocked@plt+0x2aa8>
   13fa4:	mov	r1, #1
   13fa8:	str	r1, [fp, #-72]	; 0xffffffb8
   13fac:	mov	r8, #0
   13fb0:	mov	r7, #2
   13fb4:	movw	r1, #30018	; 0x7542
   13fb8:	movt	r1, #1
   13fbc:	str	r1, [fp, #-84]	; 0xffffffac
   13fc0:	mov	r2, r0
   13fc4:	mov	r3, #1
   13fc8:	b	14054 <putchar_unlocked@plt+0x2b30>
   13fcc:	mov	r8, #1
   13fd0:	mov	r7, #2
   13fd4:	cmp	sl, #0
   13fd8:	movne	r0, #39	; 0x27
   13fdc:	strbne	r0, [r5]
   13fe0:	movw	r0, #30018	; 0x7542
   13fe4:	movt	r0, #1
   13fe8:	str	r0, [fp, #-84]	; 0xffffffac
   13fec:	mov	r0, #1
   13ff0:	str	r0, [fp, #-72]	; 0xffffffb8
   13ff4:	b	14050 <putchar_unlocked@plt+0x2b2c>
   13ff8:	mov	r7, #5
   13ffc:	tst	r4, #1
   14000:	beq	14028 <putchar_unlocked@plt+0x2b04>
   14004:	mov	r0, #1
   14008:	str	r0, [fp, #-72]	; 0xffffffb8
   1400c:	mov	r8, #0
   14010:	movw	r0, #30014	; 0x753e
   14014:	movt	r0, #1
   14018:	str	r0, [fp, #-84]	; 0xffffffac
   1401c:	mov	r2, #1
   14020:	mov	r3, #1
   14024:	b	14054 <putchar_unlocked@plt+0x2b30>
   14028:	cmp	sl, #0
   1402c:	movne	r0, #34	; 0x22
   14030:	strbne	r0, [r5]
   14034:	mov	r8, #1
   14038:	movw	r0, #30014	; 0x753e
   1403c:	movt	r0, #1
   14040:	str	r0, [fp, #-84]	; 0xffffffac
   14044:	mov	r0, #1
   14048:	str	r0, [fp, #-72]	; 0xffffffb8
   1404c:	mov	r2, #1
   14050:	mov	r3, #0
   14054:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14058:	cmp	r0, #0
   1405c:	movwne	r0, #1
   14060:	and	r1, r0, r3
   14064:	and	r1, r2, r1
   14068:	str	r1, [sp, #56]	; 0x38
   1406c:	sub	r1, r7, #2
   14070:	clz	r1, r1
   14074:	lsr	r1, r1, #5
   14078:	and	r1, r1, r3
   1407c:	str	r1, [sp, #68]	; 0x44
   14080:	str	r7, [fp, #-64]	; 0xffffffc0
   14084:	subs	r1, r7, #2
   14088:	movwne	r1, #1
   1408c:	eor	r4, r3, #1
   14090:	str	r4, [fp, #-88]	; 0xffffffa8
   14094:	orr	r4, r1, r4
   14098:	str	r4, [sp, #72]	; 0x48
   1409c:	and	r1, r1, r2
   140a0:	and	r0, r0, r1
   140a4:	str	r0, [fp, #-60]	; 0xffffffc4
   140a8:	str	r3, [fp, #-76]	; 0xffffffb4
   140ac:	orr	r0, r1, r3
   140b0:	eor	r0, r0, #1
   140b4:	ldr	r1, [fp, #16]
   140b8:	clz	r1, r1
   140bc:	lsr	r1, r1, #5
   140c0:	orr	r0, r1, r0
   140c4:	str	r0, [fp, #-68]	; 0xffffffbc
   140c8:	str	r2, [sp, #92]	; 0x5c
   140cc:	eor	r0, r2, #1
   140d0:	str	r0, [sp, #60]	; 0x3c
   140d4:	mov	r7, #0
   140d8:	cmn	lr, #1
   140dc:	beq	140ec <putchar_unlocked@plt+0x2bc8>
   140e0:	cmp	r7, lr
   140e4:	bne	140f8 <putchar_unlocked@plt+0x2bd4>
   140e8:	b	14c04 <putchar_unlocked@plt+0x36e0>
   140ec:	ldrb	r0, [ip, r7]
   140f0:	cmp	r0, #0
   140f4:	beq	14c04 <putchar_unlocked@plt+0x36e0>
   140f8:	mov	r9, #0
   140fc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14100:	cmp	r0, #0
   14104:	beq	14138 <putchar_unlocked@plt+0x2c14>
   14108:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1410c:	add	r4, r7, r0
   14110:	cmp	r0, #2
   14114:	bcc	14130 <putchar_unlocked@plt+0x2c0c>
   14118:	cmn	lr, #1
   1411c:	bne	14130 <putchar_unlocked@plt+0x2c0c>
   14120:	mov	r0, ip
   14124:	bl	113d4 <strlen@plt>
   14128:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1412c:	mov	lr, r0
   14130:	cmp	r4, lr
   14134:	bls	14144 <putchar_unlocked@plt+0x2c20>
   14138:	mov	r0, #0
   1413c:	str	r0, [fp, #-52]	; 0xffffffcc
   14140:	b	14188 <putchar_unlocked@plt+0x2c64>
   14144:	mov	r4, lr
   14148:	add	r0, ip, r7
   1414c:	ldr	r1, [fp, #-84]	; 0xffffffac
   14150:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14154:	bl	113c8 <bcmp@plt>
   14158:	cmp	r0, #0
   1415c:	mov	r1, r0
   14160:	movwne	r1, #1
   14164:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14168:	orr	r1, r1, r2
   1416c:	tst	r1, #1
   14170:	beq	14cd8 <putchar_unlocked@plt+0x37b4>
   14174:	clz	r0, r0
   14178:	lsr	r0, r0, #5
   1417c:	str	r0, [fp, #-52]	; 0xffffffcc
   14180:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14184:	mov	lr, r4
   14188:	ldrb	r4, [ip, r7]
   1418c:	cmp	r4, #126	; 0x7e
   14190:	bhi	146c0 <putchar_unlocked@plt+0x319c>
   14194:	mov	r6, #1
   14198:	mov	r2, #110	; 0x6e
   1419c:	mov	r0, #97	; 0x61
   141a0:	add	r3, pc, #4
   141a4:	mov	r1, #0
   141a8:	ldr	pc, [r3, r4, lsl #2]
   141ac:	andeq	r4, r1, r0, lsr #10
   141b0:	andeq	r4, r1, r0, asr #13
   141b4:	andeq	r4, r1, r0, asr #13
   141b8:	andeq	r4, r1, r0, asr #13
   141bc:	andeq	r4, r1, r0, asr #13
   141c0:	andeq	r4, r1, r0, asr #13
   141c4:	andeq	r4, r1, r0, asr #13
   141c8:	muleq	r1, r4, r7
   141cc:	andeq	r4, r1, r0, lsl #10
   141d0:	strdeq	r4, [r1], -r8
   141d4:	andeq	r4, r1, ip, lsl #10
   141d8:	andeq	r4, r1, r8, lsr #12
   141dc:	strdeq	r4, [r1], -r0
   141e0:	andeq	r4, r1, r8, lsl #10
   141e4:	andeq	r4, r1, r0, asr #13
   141e8:	andeq	r4, r1, r0, asr #13
   141ec:	andeq	r4, r1, r0, asr #13
   141f0:	andeq	r4, r1, r0, asr #13
   141f4:	andeq	r4, r1, r0, asr #13
   141f8:	andeq	r4, r1, r0, asr #13
   141fc:	andeq	r4, r1, r0, asr #13
   14200:	andeq	r4, r1, r0, asr #13
   14204:	andeq	r4, r1, r0, asr #13
   14208:	andeq	r4, r1, r0, asr #13
   1420c:	andeq	r4, r1, r0, asr #13
   14210:	andeq	r4, r1, r0, asr #13
   14214:	andeq	r4, r1, r0, asr #13
   14218:	andeq	r4, r1, r0, asr #13
   1421c:	andeq	r4, r1, r0, asr #13
   14220:	andeq	r4, r1, r0, asr #13
   14224:	andeq	r4, r1, r0, asr #13
   14228:	andeq	r4, r1, r0, asr #13
   1422c:	andeq	r4, r1, r4, lsr #9
   14230:	andeq	r4, r1, r8, lsr #9
   14234:	andeq	r4, r1, r8, lsr #9
   14238:	muleq	r1, r0, r4
   1423c:	andeq	r4, r1, r8, lsr #9
   14240:	andeq	r4, r1, r8, lsr #7
   14244:	andeq	r4, r1, r8, lsr #9
   14248:	andeq	r4, r1, r0, lsr r6
   1424c:	andeq	r4, r1, r8, lsr #9
   14250:	andeq	r4, r1, r8, lsr #9
   14254:	andeq	r4, r1, r8, lsr #9
   14258:	andeq	r4, r1, r8, lsr #7
   1425c:	andeq	r4, r1, r8, lsr #7
   14260:	andeq	r4, r1, r8, lsr #7
   14264:	andeq	r4, r1, r8, lsr #7
   14268:	andeq	r4, r1, r8, lsr #7
   1426c:	andeq	r4, r1, r8, lsr #7
   14270:	andeq	r4, r1, r8, lsr #7
   14274:	andeq	r4, r1, r8, lsr #7
   14278:	andeq	r4, r1, r8, lsr #7
   1427c:	andeq	r4, r1, r8, lsr #7
   14280:	andeq	r4, r1, r8, lsr #7
   14284:	andeq	r4, r1, r8, lsr #7
   14288:	andeq	r4, r1, r8, lsr #7
   1428c:	andeq	r4, r1, r8, lsr #7
   14290:	andeq	r4, r1, r8, lsr #7
   14294:	andeq	r4, r1, r8, lsr #7
   14298:	andeq	r4, r1, r8, lsr #9
   1429c:	andeq	r4, r1, r8, lsr #9
   142a0:	andeq	r4, r1, r8, lsr #9
   142a4:	andeq	r4, r1, r8, lsr #9
   142a8:	strdeq	r4, [r1], -r8
   142ac:	andeq	r4, r1, r0, asr #13
   142b0:	andeq	r4, r1, r8, lsr #7
   142b4:	andeq	r4, r1, r8, lsr #7
   142b8:	andeq	r4, r1, r8, lsr #7
   142bc:	andeq	r4, r1, r8, lsr #7
   142c0:	andeq	r4, r1, r8, lsr #7
   142c4:	andeq	r4, r1, r8, lsr #7
   142c8:	andeq	r4, r1, r8, lsr #7
   142cc:	andeq	r4, r1, r8, lsr #7
   142d0:	andeq	r4, r1, r8, lsr #7
   142d4:	andeq	r4, r1, r8, lsr #7
   142d8:	andeq	r4, r1, r8, lsr #7
   142dc:	andeq	r4, r1, r8, lsr #7
   142e0:	andeq	r4, r1, r8, lsr #7
   142e4:	andeq	r4, r1, r8, lsr #7
   142e8:	andeq	r4, r1, r8, lsr #7
   142ec:	andeq	r4, r1, r8, lsr #7
   142f0:	andeq	r4, r1, r8, lsr #7
   142f4:	andeq	r4, r1, r8, lsr #7
   142f8:	andeq	r4, r1, r8, lsr #7
   142fc:	andeq	r4, r1, r8, lsr #7
   14300:	andeq	r4, r1, r8, lsr #7
   14304:	andeq	r4, r1, r8, lsr #7
   14308:	andeq	r4, r1, r8, lsr #7
   1430c:	andeq	r4, r1, r8, lsr #7
   14310:	andeq	r4, r1, r8, lsr #7
   14314:	andeq	r4, r1, r8, lsr #7
   14318:	andeq	r4, r1, r8, lsr #9
   1431c:	ldrdeq	r4, [r1], -r0
   14320:	andeq	r4, r1, r8, lsr #7
   14324:	andeq	r4, r1, r8, lsr #9
   14328:	andeq	r4, r1, r8, lsr #7
   1432c:	andeq	r4, r1, r8, lsr #9
   14330:	andeq	r4, r1, r8, lsr #7
   14334:	andeq	r4, r1, r8, lsr #7
   14338:	andeq	r4, r1, r8, lsr #7
   1433c:	andeq	r4, r1, r8, lsr #7
   14340:	andeq	r4, r1, r8, lsr #7
   14344:	andeq	r4, r1, r8, lsr #7
   14348:	andeq	r4, r1, r8, lsr #7
   1434c:	andeq	r4, r1, r8, lsr #7
   14350:	andeq	r4, r1, r8, lsr #7
   14354:	andeq	r4, r1, r8, lsr #7
   14358:	andeq	r4, r1, r8, lsr #7
   1435c:	andeq	r4, r1, r8, lsr #7
   14360:	andeq	r4, r1, r8, lsr #7
   14364:	andeq	r4, r1, r8, lsr #7
   14368:	andeq	r4, r1, r8, lsr #7
   1436c:	andeq	r4, r1, r8, lsr #7
   14370:	andeq	r4, r1, r8, lsr #7
   14374:	andeq	r4, r1, r8, lsr #7
   14378:	andeq	r4, r1, r8, lsr #7
   1437c:	andeq	r4, r1, r8, lsr #7
   14380:	andeq	r4, r1, r8, lsr #7
   14384:	andeq	r4, r1, r8, lsr #7
   14388:	andeq	r4, r1, r8, lsr #7
   1438c:	andeq	r4, r1, r8, lsr #7
   14390:	andeq	r4, r1, r8, lsr #7
   14394:	andeq	r4, r1, r8, lsr #7
   14398:	andeq	r4, r1, r4, ror #8
   1439c:	andeq	r4, r1, r8, lsr #9
   143a0:	andeq	r4, r1, r4, ror #8
   143a4:	muleq	r1, r0, r4
   143a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   143ac:	tst	r0, #1
   143b0:	bne	143dc <putchar_unlocked@plt+0x2eb8>
   143b4:	ubfx	r0, r4, #5, #3
   143b8:	ldr	r1, [fp, #16]
   143bc:	ldr	r0, [r1, r0, lsl #2]
   143c0:	and	r1, r4, #31
   143c4:	mov	r2, #1
   143c8:	tst	r0, r2, lsl r1
   143cc:	beq	143dc <putchar_unlocked@plt+0x2eb8>
   143d0:	mov	r0, r4
   143d4:	mov	r1, r6
   143d8:	b	143f0 <putchar_unlocked@plt+0x2ecc>
   143dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   143e0:	cmp	r0, #0
   143e4:	mov	r0, r4
   143e8:	mov	r1, r6
   143ec:	beq	14728 <putchar_unlocked@plt+0x3204>
   143f0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   143f4:	tst	r2, #1
   143f8:	bne	14cec <putchar_unlocked@plt+0x37c8>
   143fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14400:	subs	r2, r2, #2
   14404:	movwne	r2, #1
   14408:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1440c:	orr	r2, r2, r3
   14410:	tst	r2, #1
   14414:	bne	14450 <putchar_unlocked@plt+0x2f2c>
   14418:	cmp	r8, sl
   1441c:	movcc	r2, #39	; 0x27
   14420:	strbcc	r2, [r5, r8]
   14424:	add	r2, r8, #1
   14428:	cmp	r2, sl
   1442c:	movcc	r3, #36	; 0x24
   14430:	strbcc	r3, [r5, r2]
   14434:	add	r2, r8, #2
   14438:	cmp	r2, sl
   1443c:	movcc	r3, #39	; 0x27
   14440:	strbcc	r3, [r5, r2]
   14444:	add	r8, r8, #3
   14448:	mov	r2, #1
   1444c:	str	r2, [fp, #-56]	; 0xffffffc8
   14450:	cmp	r8, sl
   14454:	movcc	r2, #92	; 0x5c
   14458:	strbcc	r2, [r5, r8]
   1445c:	add	r8, r8, #1
   14460:	b	1476c <putchar_unlocked@plt+0x3248>
   14464:	cmp	lr, #1
   14468:	beq	14490 <putchar_unlocked@plt+0x2f6c>
   1446c:	mov	r6, #0
   14470:	cmn	lr, #1
   14474:	bne	1449c <putchar_unlocked@plt+0x2f78>
   14478:	ldrb	r0, [ip, #1]
   1447c:	cmp	r0, #0
   14480:	beq	14490 <putchar_unlocked@plt+0x2f6c>
   14484:	mvn	lr, #0
   14488:	mov	r9, #0
   1448c:	b	143a8 <putchar_unlocked@plt+0x2e84>
   14490:	mov	r6, #0
   14494:	cmp	r7, #0
   14498:	beq	144a4 <putchar_unlocked@plt+0x2f80>
   1449c:	mov	r9, #0
   144a0:	b	143a8 <putchar_unlocked@plt+0x2e84>
   144a4:	mov	r1, #1
   144a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   144ac:	cmp	r0, #2
   144b0:	bne	144c8 <putchar_unlocked@plt+0x2fa4>
   144b4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   144b8:	tst	r0, #1
   144bc:	mov	r6, r1
   144c0:	beq	143a8 <putchar_unlocked@plt+0x2e84>
   144c4:	b	14cec <putchar_unlocked@plt+0x37c8>
   144c8:	mov	r6, r1
   144cc:	b	143a8 <putchar_unlocked@plt+0x2e84>
   144d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   144d4:	cmp	r0, #2
   144d8:	bne	1470c <putchar_unlocked@plt+0x31e8>
   144dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   144e0:	tst	r0, #1
   144e4:	bne	14cec <putchar_unlocked@plt+0x37c8>
   144e8:	mov	r9, #0
   144ec:	b	14720 <putchar_unlocked@plt+0x31fc>
   144f0:	mov	r0, #102	; 0x66
   144f4:	b	14794 <putchar_unlocked@plt+0x3270>
   144f8:	mov	r2, #116	; 0x74
   144fc:	b	1450c <putchar_unlocked@plt+0x2fe8>
   14500:	mov	r0, #98	; 0x62
   14504:	b	14794 <putchar_unlocked@plt+0x3270>
   14508:	mov	r2, #114	; 0x72
   1450c:	ldr	r0, [sp, #72]	; 0x48
   14510:	tst	r0, #1
   14514:	mov	r0, r2
   14518:	bne	14794 <putchar_unlocked@plt+0x3270>
   1451c:	b	14cec <putchar_unlocked@plt+0x37c8>
   14520:	ldr	r0, [sp, #92]	; 0x5c
   14524:	tst	r0, #1
   14528:	beq	147b0 <putchar_unlocked@plt+0x328c>
   1452c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14530:	tst	r0, #1
   14534:	bne	14cec <putchar_unlocked@plt+0x37c8>
   14538:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1453c:	subs	r0, r0, #2
   14540:	movwne	r0, #1
   14544:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14548:	orr	r0, r0, r1
   1454c:	tst	r0, #1
   14550:	bne	1458c <putchar_unlocked@plt+0x3068>
   14554:	cmp	r8, sl
   14558:	movcc	r0, #39	; 0x27
   1455c:	strbcc	r0, [r5, r8]
   14560:	add	r0, r8, #1
   14564:	cmp	r0, sl
   14568:	movcc	r1, #36	; 0x24
   1456c:	strbcc	r1, [r5, r0]
   14570:	add	r0, r8, #2
   14574:	cmp	r0, sl
   14578:	movcc	r1, #39	; 0x27
   1457c:	strbcc	r1, [r5, r0]
   14580:	add	r8, r8, #3
   14584:	mov	r0, #1
   14588:	str	r0, [fp, #-56]	; 0xffffffc8
   1458c:	cmp	r8, sl
   14590:	movcc	r0, #92	; 0x5c
   14594:	strbcc	r0, [r5, r8]
   14598:	add	r0, r8, #1
   1459c:	mov	r6, #0
   145a0:	mov	r9, #1
   145a4:	mov	r4, #48	; 0x30
   145a8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   145ac:	cmp	r1, #2
   145b0:	beq	14974 <putchar_unlocked@plt+0x3450>
   145b4:	add	r1, r7, #1
   145b8:	cmp	r1, lr
   145bc:	bcs	14974 <putchar_unlocked@plt+0x3450>
   145c0:	ldrb	r1, [ip, r1]
   145c4:	sub	r1, r1, #48	; 0x30
   145c8:	uxtb	r1, r1
   145cc:	cmp	r1, #9
   145d0:	bhi	14974 <putchar_unlocked@plt+0x3450>
   145d4:	cmp	r0, sl
   145d8:	movcc	r1, #48	; 0x30
   145dc:	strbcc	r1, [r5, r0]
   145e0:	add	r0, r8, #2
   145e4:	cmp	r0, sl
   145e8:	movcc	r1, #48	; 0x30
   145ec:	strbcc	r1, [r5, r0]
   145f0:	add	r8, r8, #3
   145f4:	b	143a8 <putchar_unlocked@plt+0x2e84>
   145f8:	mov	r9, #0
   145fc:	mov	r4, #63	; 0x3f
   14600:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14604:	cmp	r0, #5
   14608:	beq	1497c <putchar_unlocked@plt+0x3458>
   1460c:	cmp	r0, #2
   14610:	bne	14a24 <putchar_unlocked@plt+0x3500>
   14614:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14618:	tst	r0, #1
   1461c:	mov	r6, #0
   14620:	beq	143a8 <putchar_unlocked@plt+0x2e84>
   14624:	b	14cec <putchar_unlocked@plt+0x37c8>
   14628:	mov	r0, #118	; 0x76
   1462c:	b	14794 <putchar_unlocked@plt+0x3270>
   14630:	mov	r4, #39	; 0x27
   14634:	mov	r0, #1
   14638:	str	r0, [sp, #64]	; 0x40
   1463c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14640:	cmp	r0, #2
   14644:	bne	147cc <putchar_unlocked@plt+0x32a8>
   14648:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1464c:	tst	r0, #1
   14650:	bne	14cec <putchar_unlocked@plt+0x37c8>
   14654:	ldr	r2, [sp, #84]	; 0x54
   14658:	cmp	r2, #0
   1465c:	mov	r0, r2
   14660:	movwne	r0, #1
   14664:	clz	r1, sl
   14668:	lsr	r1, r1, #5
   1466c:	orrs	r0, r0, r1
   14670:	moveq	r2, sl
   14674:	str	r2, [sp, #84]	; 0x54
   14678:	moveq	sl, r0
   1467c:	cmp	r8, sl
   14680:	movcc	r0, #39	; 0x27
   14684:	strbcc	r0, [r5, r8]
   14688:	add	r0, r8, #1
   1468c:	cmp	r0, sl
   14690:	movcc	r1, #92	; 0x5c
   14694:	strbcc	r1, [r5, r0]
   14698:	add	r0, r8, #2
   1469c:	cmp	r0, sl
   146a0:	movcc	r1, #39	; 0x27
   146a4:	strbcc	r1, [r5, r0]
   146a8:	add	r8, r8, #3
   146ac:	mov	r0, #0
   146b0:	str	r0, [fp, #-56]	; 0xffffffc8
   146b4:	mov	r9, #0
   146b8:	mov	r6, #1
   146bc:	b	143a8 <putchar_unlocked@plt+0x2e84>
   146c0:	ldr	r0, [sp, #44]	; 0x2c
   146c4:	cmp	r0, #1
   146c8:	bne	147d4 <putchar_unlocked@plt+0x32b0>
   146cc:	str	lr, [sp, #32]
   146d0:	bl	113b0 <__ctype_b_loc@plt>
   146d4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   146d8:	ldr	r0, [r0]
   146dc:	add	r0, r0, r4, lsl #1
   146e0:	ldrb	r0, [r0, #1]
   146e4:	ubfx	r6, r0, #6, #1
   146e8:	mov	r2, #1
   146ec:	ldr	r0, [sp, #60]	; 0x3c
   146f0:	orr	r1, r6, r0
   146f4:	cmp	r2, #1
   146f8:	bhi	14a2c <putchar_unlocked@plt+0x3508>
   146fc:	tst	r1, #1
   14700:	beq	14a2c <putchar_unlocked@plt+0x3508>
   14704:	ldr	lr, [sp, #32]
   14708:	b	143a8 <putchar_unlocked@plt+0x2e84>
   1470c:	mov	r9, #0
   14710:	mov	r0, #92	; 0x5c
   14714:	ldr	r1, [sp, #56]	; 0x38
   14718:	cmp	r1, #0
   1471c:	beq	14794 <putchar_unlocked@plt+0x3270>
   14720:	mov	r4, #92	; 0x5c
   14724:	mov	r6, #0
   14728:	cmp	r9, #0
   1472c:	bne	14764 <putchar_unlocked@plt+0x3240>
   14730:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14734:	tst	r0, #1
   14738:	beq	14764 <putchar_unlocked@plt+0x3240>
   1473c:	cmp	r8, sl
   14740:	movcc	r0, #39	; 0x27
   14744:	strbcc	r0, [r5, r8]
   14748:	add	r0, r8, #1
   1474c:	cmp	r0, sl
   14750:	movcc	r1, #39	; 0x27
   14754:	strbcc	r1, [r5, r0]
   14758:	add	r8, r8, #2
   1475c:	mov	r0, #0
   14760:	str	r0, [fp, #-56]	; 0xffffffc8
   14764:	mov	r1, r6
   14768:	mov	r0, r4
   1476c:	cmp	r8, sl
   14770:	strbcc	r0, [r5, r8]
   14774:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14778:	and	r0, r0, r1
   1477c:	str	r0, [fp, #-48]	; 0xffffffd0
   14780:	add	r8, r8, #1
   14784:	add	r7, r7, #1
   14788:	cmn	lr, #1
   1478c:	bne	140e0 <putchar_unlocked@plt+0x2bbc>
   14790:	b	140ec <putchar_unlocked@plt+0x2bc8>
   14794:	mov	r9, #0
   14798:	ldr	r1, [sp, #92]	; 0x5c
   1479c:	tst	r1, #1
   147a0:	mov	r6, #0
   147a4:	mov	r1, #0
   147a8:	beq	143a8 <putchar_unlocked@plt+0x2e84>
   147ac:	b	143f0 <putchar_unlocked@plt+0x2ecc>
   147b0:	mov	r4, #0
   147b4:	ldr	r0, [sp, #40]	; 0x28
   147b8:	cmp	r0, #0
   147bc:	mov	r9, #0
   147c0:	mov	r6, #0
   147c4:	beq	143a8 <putchar_unlocked@plt+0x2e84>
   147c8:	b	14784 <putchar_unlocked@plt+0x3260>
   147cc:	mov	r6, #1
   147d0:	b	143a8 <putchar_unlocked@plt+0x2e84>
   147d4:	mov	r0, #0
   147d8:	str	r0, [fp, #-36]	; 0xffffffdc
   147dc:	str	r0, [fp, #-40]	; 0xffffffd8
   147e0:	cmn	lr, #1
   147e4:	bne	147f8 <putchar_unlocked@plt+0x32d4>
   147e8:	mov	r0, ip
   147ec:	bl	113d4 <strlen@plt>
   147f0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   147f4:	mov	lr, r0
   147f8:	ldr	r0, [sp, #76]	; 0x4c
   147fc:	add	r0, r0, r7
   14800:	str	r0, [sp, #24]
   14804:	mov	r6, #1
   14808:	mov	r2, #0
   1480c:	sub	r0, fp, #40	; 0x28
   14810:	mov	r3, r0
   14814:	str	r5, [sp, #28]
   14818:	str	lr, [sp, #32]
   1481c:	b	14860 <putchar_unlocked@plt+0x333c>
   14820:	ldr	r5, [sp, #52]	; 0x34
   14824:	add	r5, r0, r5
   14828:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1482c:	bl	112c0 <iswprint@plt>
   14830:	cmp	r0, #0
   14834:	movwne	r0, #1
   14838:	and	r6, r6, r0
   1483c:	sub	r0, fp, #40	; 0x28
   14840:	bl	1126c <mbsinit@plt>
   14844:	sub	r3, fp, #40	; 0x28
   14848:	mov	r2, r5
   1484c:	ldr	lr, [sp, #32]
   14850:	cmp	r0, #0
   14854:	ldr	r5, [sp, #28]
   14858:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1485c:	bne	146ec <putchar_unlocked@plt+0x31c8>
   14860:	str	r2, [sp, #52]	; 0x34
   14864:	add	r0, r2, r7
   14868:	add	r1, ip, r0
   1486c:	str	r0, [sp, #48]	; 0x30
   14870:	sub	r2, lr, r0
   14874:	sub	r0, fp, #44	; 0x2c
   14878:	bl	16bd4 <putchar_unlocked@plt+0x56b0>
   1487c:	cmp	r0, #0
   14880:	beq	14bf8 <putchar_unlocked@plt+0x36d4>
   14884:	cmn	r0, #1
   14888:	beq	14bb4 <putchar_unlocked@plt+0x3690>
   1488c:	cmn	r0, #2
   14890:	ldr	lr, [sp, #32]
   14894:	beq	14bbc <putchar_unlocked@plt+0x3698>
   14898:	cmp	r0, #2
   1489c:	mov	r1, #0
   148a0:	movwcc	r1, #1
   148a4:	ldr	r2, [sp, #68]	; 0x44
   148a8:	eor	r2, r2, #1
   148ac:	orrs	r1, r2, r1
   148b0:	bne	14820 <putchar_unlocked@plt+0x32fc>
   148b4:	ldr	r1, [sp, #52]	; 0x34
   148b8:	ldr	r2, [sp, #24]
   148bc:	add	r1, r2, r1
   148c0:	sub	r2, r0, #1
   148c4:	b	148d4 <putchar_unlocked@plt+0x33b0>
   148c8:	add	r1, r1, #1
   148cc:	subs	r2, r2, #1
   148d0:	beq	14820 <putchar_unlocked@plt+0x32fc>
   148d4:	ldrb	r3, [r1]
   148d8:	sub	r3, r3, #91	; 0x5b
   148dc:	cmp	r3, #33	; 0x21
   148e0:	bhi	148c8 <putchar_unlocked@plt+0x33a4>
   148e4:	add	r5, pc, #0
   148e8:	ldr	pc, [r5, r3, lsl #2]
   148ec:	andeq	r4, r1, r4, ror #25
   148f0:	andeq	r4, r1, r4, ror #25
   148f4:	andeq	r4, r1, r8, asr #17
   148f8:	andeq	r4, r1, r4, ror #25
   148fc:	andeq	r4, r1, r8, asr #17
   14900:	andeq	r4, r1, r4, ror #25
   14904:	andeq	r4, r1, r8, asr #17
   14908:	andeq	r4, r1, r8, asr #17
   1490c:	andeq	r4, r1, r8, asr #17
   14910:	andeq	r4, r1, r8, asr #17
   14914:	andeq	r4, r1, r8, asr #17
   14918:	andeq	r4, r1, r8, asr #17
   1491c:	andeq	r4, r1, r8, asr #17
   14920:	andeq	r4, r1, r8, asr #17
   14924:	andeq	r4, r1, r8, asr #17
   14928:	andeq	r4, r1, r8, asr #17
   1492c:	andeq	r4, r1, r8, asr #17
   14930:	andeq	r4, r1, r8, asr #17
   14934:	andeq	r4, r1, r8, asr #17
   14938:	andeq	r4, r1, r8, asr #17
   1493c:	andeq	r4, r1, r8, asr #17
   14940:	andeq	r4, r1, r8, asr #17
   14944:	andeq	r4, r1, r8, asr #17
   14948:	andeq	r4, r1, r8, asr #17
   1494c:	andeq	r4, r1, r8, asr #17
   14950:	andeq	r4, r1, r8, asr #17
   14954:	andeq	r4, r1, r8, asr #17
   14958:	andeq	r4, r1, r8, asr #17
   1495c:	andeq	r4, r1, r8, asr #17
   14960:	andeq	r4, r1, r8, asr #17
   14964:	andeq	r4, r1, r8, asr #17
   14968:	andeq	r4, r1, r8, asr #17
   1496c:	andeq	r4, r1, r8, asr #17
   14970:	andeq	r4, r1, r4, ror #25
   14974:	mov	r8, r0
   14978:	b	143a8 <putchar_unlocked@plt+0x2e84>
   1497c:	ldr	r0, [sp, #36]	; 0x24
   14980:	cmp	r0, #0
   14984:	beq	14a24 <putchar_unlocked@plt+0x3500>
   14988:	add	r0, r7, #2
   1498c:	cmp	r0, lr
   14990:	bcs	14a24 <putchar_unlocked@plt+0x3500>
   14994:	add	r1, r7, ip
   14998:	ldrb	r1, [r1, #1]
   1499c:	cmp	r1, #63	; 0x3f
   149a0:	bne	14a24 <putchar_unlocked@plt+0x3500>
   149a4:	ldrb	r1, [ip, r0]
   149a8:	sub	r2, r1, #33	; 0x21
   149ac:	cmp	r2, #29
   149b0:	bhi	14a24 <putchar_unlocked@plt+0x3500>
   149b4:	mov	r3, #1
   149b8:	movw	r6, #20929	; 0x51c1
   149bc:	movt	r6, #14336	; 0x3800
   149c0:	tst	r6, r3, lsl r2
   149c4:	beq	14a24 <putchar_unlocked@plt+0x3500>
   149c8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   149cc:	tst	r2, #1
   149d0:	bne	14cec <putchar_unlocked@plt+0x37c8>
   149d4:	cmp	r8, sl
   149d8:	movcc	r2, #63	; 0x3f
   149dc:	strbcc	r2, [r5, r8]
   149e0:	add	r2, r8, #1
   149e4:	cmp	r2, sl
   149e8:	movcc	r3, #34	; 0x22
   149ec:	strbcc	r3, [r5, r2]
   149f0:	add	r2, r8, #2
   149f4:	cmp	r2, sl
   149f8:	movcc	r3, #34	; 0x22
   149fc:	strbcc	r3, [r5, r2]
   14a00:	add	r2, r8, #3
   14a04:	cmp	r2, sl
   14a08:	movcc	r3, #63	; 0x3f
   14a0c:	strbcc	r3, [r5, r2]
   14a10:	add	r8, r8, #4
   14a14:	mov	r7, r0
   14a18:	mov	r4, r1
   14a1c:	mov	r6, #0
   14a20:	b	143a8 <putchar_unlocked@plt+0x2e84>
   14a24:	mov	r6, #0
   14a28:	b	143a8 <putchar_unlocked@plt+0x2e84>
   14a2c:	add	r0, r2, r7
   14a30:	str	r0, [sp, #52]	; 0x34
   14a34:	mov	r2, #0
   14a38:	ldr	lr, [sp, #32]
   14a3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14a40:	str	r1, [sp, #48]	; 0x30
   14a44:	tst	r1, #1
   14a48:	bne	14b24 <putchar_unlocked@plt+0x3600>
   14a4c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14a50:	tst	r1, #1
   14a54:	bne	14cec <putchar_unlocked@plt+0x37c8>
   14a58:	mov	r3, r0
   14a5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14a60:	subs	r1, r0, #2
   14a64:	movwne	r1, #1
   14a68:	orr	r1, r1, r3
   14a6c:	tst	r1, #1
   14a70:	bne	14aa8 <putchar_unlocked@plt+0x3584>
   14a74:	cmp	r8, sl
   14a78:	movcc	r0, #39	; 0x27
   14a7c:	strbcc	r0, [r5, r8]
   14a80:	add	r2, r8, #1
   14a84:	cmp	r2, sl
   14a88:	movcc	r0, #36	; 0x24
   14a8c:	strbcc	r0, [r5, r2]
   14a90:	add	r2, r8, #2
   14a94:	cmp	r2, sl
   14a98:	movcc	r0, #39	; 0x27
   14a9c:	strbcc	r0, [r5, r2]
   14aa0:	add	r8, r8, #3
   14aa4:	mov	r3, #1
   14aa8:	cmp	r8, sl
   14aac:	movcc	r1, #92	; 0x5c
   14ab0:	strbcc	r1, [r5, r8]
   14ab4:	add	r2, r8, #1
   14ab8:	cmp	r2, sl
   14abc:	bcs	14ad0 <putchar_unlocked@plt+0x35ac>
   14ac0:	uxtb	r1, r4
   14ac4:	mov	r0, #48	; 0x30
   14ac8:	orr	r1, r0, r1, lsr #6
   14acc:	strb	r1, [r5, r2]
   14ad0:	add	r2, r8, #2
   14ad4:	cmp	r2, sl
   14ad8:	lsrcc	r1, r4, #3
   14adc:	movcc	r0, #6
   14ae0:	bficc	r1, r0, #3, #29
   14ae4:	strbcc	r1, [r5, r2]
   14ae8:	mov	r0, #6
   14aec:	bfi	r4, r0, #3, #29
   14af0:	add	r8, r8, #3
   14af4:	mov	r2, #1
   14af8:	mov	r0, r3
   14afc:	b	14b48 <putchar_unlocked@plt+0x3624>
   14b00:	cmp	r8, sl
   14b04:	strbcc	r4, [r5, r8]
   14b08:	ldr	r1, [sp, #76]	; 0x4c
   14b0c:	ldrb	r4, [r1, r7]
   14b10:	add	r8, r8, #1
   14b14:	mov	r7, r3
   14b18:	ldr	r1, [sp, #48]	; 0x30
   14b1c:	tst	r1, #1
   14b20:	beq	14a4c <putchar_unlocked@plt+0x3528>
   14b24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14b28:	tst	r1, #1
   14b2c:	beq	14b40 <putchar_unlocked@plt+0x361c>
   14b30:	cmp	r8, sl
   14b34:	movcc	r1, #92	; 0x5c
   14b38:	strbcc	r1, [r5, r8]
   14b3c:	add	r8, r8, #1
   14b40:	mov	r1, #0
   14b44:	str	r1, [fp, #-52]	; 0xffffffcc
   14b48:	and	r9, r2, #1
   14b4c:	add	r3, r7, #1
   14b50:	ldr	r1, [sp, #52]	; 0x34
   14b54:	cmp	r1, r3
   14b58:	bls	14b9c <putchar_unlocked@plt+0x3678>
   14b5c:	cmp	r9, #0
   14b60:	movwne	r9, #1
   14b64:	mvn	r1, r0
   14b68:	orr	r1, r1, r9
   14b6c:	tst	r1, #1
   14b70:	bne	14b00 <putchar_unlocked@plt+0x35dc>
   14b74:	cmp	r8, sl
   14b78:	movcc	r1, #39	; 0x27
   14b7c:	strbcc	r1, [r5, r8]
   14b80:	add	r1, r8, #1
   14b84:	cmp	r1, sl
   14b88:	movcc	r0, #39	; 0x27
   14b8c:	strbcc	r0, [r5, r1]
   14b90:	add	r8, r8, #2
   14b94:	mov	r0, #0
   14b98:	b	14b00 <putchar_unlocked@plt+0x35dc>
   14b9c:	str	r0, [fp, #-56]	; 0xffffffc8
   14ba0:	cmp	r9, #0
   14ba4:	movwne	r9, #1
   14ba8:	cmp	r9, #0
   14bac:	beq	14730 <putchar_unlocked@plt+0x320c>
   14bb0:	b	14764 <putchar_unlocked@plt+0x3240>
   14bb4:	mov	r6, #0
   14bb8:	b	14bf8 <putchar_unlocked@plt+0x36d4>
   14bbc:	mov	r6, #0
   14bc0:	ldr	r0, [sp, #48]	; 0x30
   14bc4:	cmp	r0, lr
   14bc8:	bcs	14bf8 <putchar_unlocked@plt+0x36d4>
   14bcc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14bd0:	add	r0, ip, r7
   14bd4:	ldr	r2, [sp, #52]	; 0x34
   14bd8:	ldrb	r1, [r0, r2]
   14bdc:	cmp	r1, #0
   14be0:	beq	146ec <putchar_unlocked@plt+0x31c8>
   14be4:	add	r2, r2, #1
   14be8:	add	r1, r7, r2
   14bec:	cmp	r1, lr
   14bf0:	bcc	14bd8 <putchar_unlocked@plt+0x36b4>
   14bf4:	b	146ec <putchar_unlocked@plt+0x31c8>
   14bf8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14bfc:	ldr	r2, [sp, #52]	; 0x34
   14c00:	b	146ec <putchar_unlocked@plt+0x31c8>
   14c04:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14c08:	eor	r0, r1, #2
   14c0c:	orr	r0, r0, r8
   14c10:	clz	r0, r0
   14c14:	lsr	r0, r0, #5
   14c18:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14c1c:	tst	r3, r0
   14c20:	bne	14cec <putchar_unlocked@plt+0x37c8>
   14c24:	mov	r6, r5
   14c28:	subs	r0, r1, #2
   14c2c:	movwne	r0, #1
   14c30:	orr	r0, r3, r0
   14c34:	tst	r0, #1
   14c38:	ldr	r2, [sp, #92]	; 0x5c
   14c3c:	ldreq	r0, [sp, #64]	; 0x40
   14c40:	eoreq	r0, r0, #1
   14c44:	tsteq	r0, #1
   14c48:	bne	14c88 <putchar_unlocked@plt+0x3764>
   14c4c:	mov	r9, lr
   14c50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c54:	tst	r0, #1
   14c58:	bne	14d54 <putchar_unlocked@plt+0x3830>
   14c5c:	ldr	r0, [sp, #84]	; 0x54
   14c60:	cmp	r0, #0
   14c64:	beq	14c88 <putchar_unlocked@plt+0x3764>
   14c68:	mov	r0, #0
   14c6c:	str	r0, [fp, #-48]	; 0xffffffd0
   14c70:	mov	r1, #2
   14c74:	cmp	sl, #0
   14c78:	mov	r0, r2
   14c7c:	mov	r4, r3
   14c80:	ldr	r7, [sp, #84]	; 0x54
   14c84:	beq	13e60 <putchar_unlocked@plt+0x293c>
   14c88:	ldr	r1, [fp, #-84]	; 0xffffffac
   14c8c:	clz	r0, r1
   14c90:	lsr	r0, r0, #5
   14c94:	orr	r0, r0, r3
   14c98:	tst	r0, #1
   14c9c:	bne	14cc8 <putchar_unlocked@plt+0x37a4>
   14ca0:	ldrb	r0, [r1]
   14ca4:	cmp	r0, #0
   14ca8:	beq	14cc8 <putchar_unlocked@plt+0x37a4>
   14cac:	add	r1, r1, #1
   14cb0:	cmp	r8, sl
   14cb4:	strbcc	r0, [r6, r8]
   14cb8:	add	r8, r8, #1
   14cbc:	ldrb	r0, [r1], #1
   14cc0:	cmp	r0, #0
   14cc4:	bne	14cb0 <putchar_unlocked@plt+0x378c>
   14cc8:	cmp	r8, sl
   14ccc:	movcc	r0, #0
   14cd0:	strbcc	r0, [r6, r8]
   14cd4:	b	14d48 <putchar_unlocked@plt+0x3824>
   14cd8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14cdc:	mov	lr, r4
   14ce0:	b	14cec <putchar_unlocked@plt+0x37c8>
   14ce4:	ldr	r5, [sp, #28]
   14ce8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14cec:	mov	r0, #0
   14cf0:	ldr	r1, [fp, #12]
   14cf4:	bic	r1, r1, #2
   14cf8:	mov	r2, #2
   14cfc:	ldr	r3, [sp, #92]	; 0x5c
   14d00:	tst	r3, #1
   14d04:	movwne	r2, #4
   14d08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14d0c:	cmp	r3, #2
   14d10:	movne	r2, r3
   14d14:	str	r2, [sp]
   14d18:	str	r1, [sp, #4]
   14d1c:	str	r0, [sp, #8]
   14d20:	ldr	r0, [sp, #80]	; 0x50
   14d24:	str	r0, [sp, #12]
   14d28:	ldr	r0, [sp, #88]	; 0x58
   14d2c:	str	r0, [sp, #16]
   14d30:	mov	r0, r5
   14d34:	mov	r1, sl
   14d38:	mov	r2, ip
   14d3c:	mov	r3, lr
   14d40:	bl	13dd4 <putchar_unlocked@plt+0x28b0>
   14d44:	mov	r8, r0
   14d48:	mov	r0, r8
   14d4c:	sub	sp, fp, #28
   14d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d54:	mov	r0, #5
   14d58:	str	r0, [sp]
   14d5c:	ldr	r0, [fp, #12]
   14d60:	str	r0, [sp, #4]
   14d64:	ldr	r0, [fp, #16]
   14d68:	str	r0, [sp, #8]
   14d6c:	ldr	r0, [sp, #80]	; 0x50
   14d70:	str	r0, [sp, #12]
   14d74:	ldr	r0, [sp, #88]	; 0x58
   14d78:	str	r0, [sp, #16]
   14d7c:	mov	r0, r6
   14d80:	ldr	r1, [sp, #84]	; 0x54
   14d84:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14d88:	mov	r3, r9
   14d8c:	b	14d40 <putchar_unlocked@plt+0x381c>
   14d90:	bl	11500 <abort@plt>
   14d94:	mov	r3, r2
   14d98:	mov	r2, #0
   14d9c:	b	14da0 <putchar_unlocked@plt+0x387c>
   14da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14da4:	add	fp, sp, #28
   14da8:	sub	sp, sp, #36	; 0x24
   14dac:	mov	r4, r2
   14db0:	str	r2, [sp, #24]
   14db4:	mov	r5, r1
   14db8:	mov	r6, r0
   14dbc:	str	r0, [sp, #20]
   14dc0:	movw	r8, #33192	; 0x81a8
   14dc4:	movt	r8, #2
   14dc8:	cmp	r3, #0
   14dcc:	movne	r8, r3
   14dd0:	bl	113ec <__errno_location@plt>
   14dd4:	str	r0, [sp, #28]
   14dd8:	ldm	r8, {r3, r9}
   14ddc:	ldr	r1, [r8, #40]	; 0x28
   14de0:	ldr	r2, [r8, #44]	; 0x2c
   14de4:	ldr	r7, [r0]
   14de8:	str	r7, [sp, #32]
   14dec:	add	sl, r8, #8
   14df0:	cmp	r4, #0
   14df4:	orreq	r9, r9, #1
   14df8:	stm	sp, {r3, r9, sl}
   14dfc:	str	r1, [sp, #12]
   14e00:	str	r2, [sp, #16]
   14e04:	mov	r0, #0
   14e08:	mov	r1, #0
   14e0c:	mov	r2, r6
   14e10:	mov	r3, r5
   14e14:	mov	r7, r5
   14e18:	bl	13dd4 <putchar_unlocked@plt+0x28b0>
   14e1c:	mov	r5, r0
   14e20:	add	r4, r0, #1
   14e24:	mov	r0, r4
   14e28:	bl	16314 <putchar_unlocked@plt+0x4df0>
   14e2c:	mov	r6, r0
   14e30:	ldr	r0, [r8]
   14e34:	ldr	r1, [r8, #40]	; 0x28
   14e38:	ldr	r2, [r8, #44]	; 0x2c
   14e3c:	stm	sp, {r0, r9, sl}
   14e40:	str	r1, [sp, #12]
   14e44:	str	r2, [sp, #16]
   14e48:	mov	r0, r6
   14e4c:	mov	r1, r4
   14e50:	ldr	r2, [sp, #20]
   14e54:	mov	r3, r7
   14e58:	bl	13dd4 <putchar_unlocked@plt+0x28b0>
   14e5c:	ldr	r0, [sp, #24]
   14e60:	ldr	r1, [sp, #32]
   14e64:	ldr	r2, [sp, #28]
   14e68:	str	r1, [r2]
   14e6c:	cmp	r0, #0
   14e70:	strne	r5, [r0]
   14e74:	mov	r0, r6
   14e78:	sub	sp, fp, #28
   14e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e84:	add	fp, sp, #24
   14e88:	movw	r8, #33080	; 0x8138
   14e8c:	movt	r8, #2
   14e90:	ldr	r4, [r8]
   14e94:	movw	r5, #33084	; 0x813c
   14e98:	movt	r5, #2
   14e9c:	ldr	r0, [r5]
   14ea0:	cmp	r0, #2
   14ea4:	blt	14ed0 <putchar_unlocked@plt+0x39ac>
   14ea8:	add	r7, r4, #12
   14eac:	mov	r6, #0
   14eb0:	ldr	r0, [r7, r6, lsl #3]
   14eb4:	bl	16b24 <putchar_unlocked@plt+0x5600>
   14eb8:	add	r0, r6, #1
   14ebc:	ldr	r1, [r5]
   14ec0:	add	r2, r6, #2
   14ec4:	cmp	r2, r1
   14ec8:	mov	r6, r0
   14ecc:	blt	14eb0 <putchar_unlocked@plt+0x398c>
   14ed0:	ldr	r0, [r4, #4]
   14ed4:	movw	r9, #33240	; 0x81d8
   14ed8:	movt	r9, #2
   14edc:	cmp	r0, r9
   14ee0:	movw	r7, #33088	; 0x8140
   14ee4:	movt	r7, #2
   14ee8:	beq	14ef8 <putchar_unlocked@plt+0x39d4>
   14eec:	bl	16b24 <putchar_unlocked@plt+0x5600>
   14ef0:	mov	r0, #256	; 0x100
   14ef4:	stm	r7, {r0, r9}
   14ef8:	cmp	r4, r7
   14efc:	beq	14f0c <putchar_unlocked@plt+0x39e8>
   14f00:	mov	r0, r4
   14f04:	bl	16b24 <putchar_unlocked@plt+0x5600>
   14f08:	str	r7, [r8]
   14f0c:	mov	r0, #1
   14f10:	str	r0, [r5]
   14f14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14f18:	movw	r3, #33192	; 0x81a8
   14f1c:	movt	r3, #2
   14f20:	mvn	r2, #0
   14f24:	b	14f28 <putchar_unlocked@plt+0x3a04>
   14f28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f2c:	add	fp, sp, #28
   14f30:	sub	sp, sp, #44	; 0x2c
   14f34:	mov	r7, r3
   14f38:	str	r2, [sp, #36]	; 0x24
   14f3c:	str	r1, [sp, #32]
   14f40:	mov	r5, r0
   14f44:	bl	113ec <__errno_location@plt>
   14f48:	cmp	r5, #0
   14f4c:	bmi	150bc <putchar_unlocked@plt+0x3b98>
   14f50:	cmn	r5, #-2147483647	; 0x80000001
   14f54:	beq	150bc <putchar_unlocked@plt+0x3b98>
   14f58:	movw	r4, #33080	; 0x8138
   14f5c:	movt	r4, #2
   14f60:	ldr	r6, [r4]
   14f64:	str	r0, [sp, #28]
   14f68:	ldr	r0, [r0]
   14f6c:	str	r0, [sp, #24]
   14f70:	movw	r8, #33084	; 0x813c
   14f74:	movt	r8, #2
   14f78:	ldr	r1, [r8]
   14f7c:	cmp	r1, r5
   14f80:	ble	14f8c <putchar_unlocked@plt+0x3a68>
   14f84:	mov	sl, r6
   14f88:	b	14ff8 <putchar_unlocked@plt+0x3ad4>
   14f8c:	str	r1, [fp, #-32]	; 0xffffffe0
   14f90:	mov	r0, #8
   14f94:	str	r0, [sp]
   14f98:	movw	r9, #33088	; 0x8140
   14f9c:	movt	r9, #2
   14fa0:	subs	r0, r6, r9
   14fa4:	movne	r0, r6
   14fa8:	sub	r1, r5, r1
   14fac:	add	r2, r1, #1
   14fb0:	sub	r1, fp, #32
   14fb4:	mvn	r3, #-2147483648	; 0x80000000
   14fb8:	bl	163f0 <putchar_unlocked@plt+0x4ecc>
   14fbc:	mov	sl, r0
   14fc0:	str	r0, [r4]
   14fc4:	cmp	r6, r9
   14fc8:	bne	14fd4 <putchar_unlocked@plt+0x3ab0>
   14fcc:	ldrd	r0, [r9]
   14fd0:	stm	sl, {r0, r1}
   14fd4:	ldr	r1, [r8]
   14fd8:	add	r0, sl, r1, lsl #3
   14fdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fe0:	sub	r1, r2, r1
   14fe4:	lsl	r2, r1, #3
   14fe8:	mov	r1, #0
   14fec:	bl	11404 <memset@plt>
   14ff0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ff4:	str	r0, [r8]
   14ff8:	mov	r9, sl
   14ffc:	ldr	r6, [r9, r5, lsl #3]!
   15000:	ldr	r4, [r9, #4]!
   15004:	ldm	r7, {r0, r1}
   15008:	ldr	r2, [r7, #40]	; 0x28
   1500c:	ldr	r3, [r7, #44]	; 0x2c
   15010:	orr	r8, r1, #1
   15014:	add	r1, r7, #8
   15018:	stm	sp, {r0, r8}
   1501c:	str	r1, [sp, #20]
   15020:	add	r0, sp, #8
   15024:	stm	r0, {r1, r2, r3}
   15028:	mov	r0, r4
   1502c:	mov	r1, r6
   15030:	ldr	r2, [sp, #32]
   15034:	ldr	r3, [sp, #36]	; 0x24
   15038:	bl	13dd4 <putchar_unlocked@plt+0x28b0>
   1503c:	cmp	r6, r0
   15040:	bhi	150a4 <putchar_unlocked@plt+0x3b80>
   15044:	add	r6, r0, #1
   15048:	str	r6, [sl, r5, lsl #3]
   1504c:	movw	r0, #33240	; 0x81d8
   15050:	movt	r0, #2
   15054:	cmp	r4, r0
   15058:	beq	15064 <putchar_unlocked@plt+0x3b40>
   1505c:	mov	r0, r4
   15060:	bl	16b24 <putchar_unlocked@plt+0x5600>
   15064:	mov	r0, r6
   15068:	bl	16314 <putchar_unlocked@plt+0x4df0>
   1506c:	mov	r4, r0
   15070:	str	r0, [r9]
   15074:	ldr	r0, [r7]
   15078:	ldr	r1, [r7, #40]	; 0x28
   1507c:	ldr	r2, [r7, #44]	; 0x2c
   15080:	stm	sp, {r0, r8}
   15084:	ldr	r0, [sp, #20]
   15088:	add	r3, sp, #8
   1508c:	stm	r3, {r0, r1, r2}
   15090:	mov	r0, r4
   15094:	mov	r1, r6
   15098:	ldr	r2, [sp, #32]
   1509c:	ldr	r3, [sp, #36]	; 0x24
   150a0:	bl	13dd4 <putchar_unlocked@plt+0x28b0>
   150a4:	ldr	r0, [sp, #28]
   150a8:	ldr	r1, [sp, #24]
   150ac:	str	r1, [r0]
   150b0:	mov	r0, r4
   150b4:	sub	sp, fp, #28
   150b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150bc:	bl	11500 <abort@plt>
   150c0:	movw	r3, #33192	; 0x81a8
   150c4:	movt	r3, #2
   150c8:	b	14f28 <putchar_unlocked@plt+0x3a04>
   150cc:	mov	r1, r0
   150d0:	mov	r0, #0
   150d4:	b	14f18 <putchar_unlocked@plt+0x39f4>
   150d8:	mov	r2, r1
   150dc:	mov	r1, r0
   150e0:	mov	r0, #0
   150e4:	b	150c0 <putchar_unlocked@plt+0x3b9c>
   150e8:	push	{r4, r5, r6, sl, fp, lr}
   150ec:	add	fp, sp, #16
   150f0:	sub	sp, sp, #48	; 0x30
   150f4:	mov	r4, r2
   150f8:	mov	r5, r0
   150fc:	mov	r6, sp
   15100:	mov	r0, r6
   15104:	bl	15124 <putchar_unlocked@plt+0x3c00>
   15108:	mov	r0, r5
   1510c:	mov	r1, r4
   15110:	mvn	r2, #0
   15114:	mov	r3, r6
   15118:	bl	14f28 <putchar_unlocked@plt+0x3a04>
   1511c:	sub	sp, fp, #16
   15120:	pop	{r4, r5, r6, sl, fp, pc}
   15124:	push	{fp, lr}
   15128:	mov	fp, sp
   1512c:	vmov.i32	q8, #0	; 0x00000000
   15130:	mov	r2, #32
   15134:	mov	r3, r0
   15138:	vst1.32	{d16-d17}, [r3], r2
   1513c:	vst1.32	{d16-d17}, [r3]
   15140:	add	r2, r0, #16
   15144:	vst1.32	{d16-d17}, [r2]
   15148:	cmp	r1, #10
   1514c:	strne	r1, [r0]
   15150:	popne	{fp, pc}
   15154:	bl	11500 <abort@plt>
   15158:	push	{r4, r5, r6, r7, fp, lr}
   1515c:	add	fp, sp, #16
   15160:	sub	sp, sp, #48	; 0x30
   15164:	mov	r4, r3
   15168:	mov	r5, r2
   1516c:	mov	r6, r0
   15170:	mov	r7, sp
   15174:	mov	r0, r7
   15178:	bl	15124 <putchar_unlocked@plt+0x3c00>
   1517c:	mov	r0, r6
   15180:	mov	r1, r5
   15184:	mov	r2, r4
   15188:	mov	r3, r7
   1518c:	bl	14f28 <putchar_unlocked@plt+0x3a04>
   15190:	sub	sp, fp, #16
   15194:	pop	{r4, r5, r6, r7, fp, pc}
   15198:	mov	r2, r1
   1519c:	mov	r1, r0
   151a0:	mov	r0, #0
   151a4:	b	150e8 <putchar_unlocked@plt+0x3bc4>
   151a8:	mov	r3, r2
   151ac:	mov	r2, r1
   151b0:	mov	r1, r0
   151b4:	mov	r0, #0
   151b8:	b	15158 <putchar_unlocked@plt+0x3c34>
   151bc:	push	{r4, r5, r6, sl, fp, lr}
   151c0:	add	fp, sp, #16
   151c4:	sub	sp, sp, #48	; 0x30
   151c8:	mov	r4, r1
   151cc:	mov	r5, r0
   151d0:	movw	r0, #33192	; 0x81a8
   151d4:	movt	r0, #2
   151d8:	add	r1, r0, #16
   151dc:	mov	r3, #32
   151e0:	vld1.64	{d16-d17}, [r0], r3
   151e4:	vld1.64	{d18-d19}, [r1]
   151e8:	mov	r6, sp
   151ec:	add	r1, r6, #16
   151f0:	vld1.64	{d20-d21}, [r0]
   151f4:	vst1.64	{d18-d19}, [r1]
   151f8:	mov	r0, r6
   151fc:	vst1.64	{d16-d17}, [r0], r3
   15200:	vst1.64	{d20-d21}, [r0]
   15204:	mov	r0, r6
   15208:	mov	r1, r2
   1520c:	mov	r2, #1
   15210:	bl	13cc8 <putchar_unlocked@plt+0x27a4>
   15214:	mov	r0, #0
   15218:	mov	r1, r5
   1521c:	mov	r2, r4
   15220:	mov	r3, r6
   15224:	bl	14f28 <putchar_unlocked@plt+0x3a04>
   15228:	sub	sp, fp, #16
   1522c:	pop	{r4, r5, r6, sl, fp, pc}
   15230:	mov	r2, r1
   15234:	mvn	r1, #0
   15238:	b	151bc <putchar_unlocked@plt+0x3c98>
   1523c:	mov	r1, #58	; 0x3a
   15240:	b	15230 <putchar_unlocked@plt+0x3d0c>
   15244:	mov	r2, #58	; 0x3a
   15248:	b	151bc <putchar_unlocked@plt+0x3c98>
   1524c:	push	{r4, r5, r6, sl, fp, lr}
   15250:	add	fp, sp, #16
   15254:	sub	sp, sp, #48	; 0x30
   15258:	mov	r4, r2
   1525c:	mov	r5, r0
   15260:	mov	r6, sp
   15264:	mov	r0, r6
   15268:	bl	15124 <putchar_unlocked@plt+0x3c00>
   1526c:	mov	r0, r6
   15270:	mov	r1, #58	; 0x3a
   15274:	mov	r2, #1
   15278:	bl	13cc8 <putchar_unlocked@plt+0x27a4>
   1527c:	mov	r0, r5
   15280:	mov	r1, r4
   15284:	mvn	r2, #0
   15288:	mov	r3, r6
   1528c:	bl	14f28 <putchar_unlocked@plt+0x3a04>
   15290:	sub	sp, fp, #16
   15294:	pop	{r4, r5, r6, sl, fp, pc}
   15298:	push	{fp, lr}
   1529c:	mov	fp, sp
   152a0:	sub	sp, sp, #8
   152a4:	mvn	ip, #0
   152a8:	str	ip, [sp]
   152ac:	bl	152b8 <putchar_unlocked@plt+0x3d94>
   152b0:	mov	sp, fp
   152b4:	pop	{fp, pc}
   152b8:	push	{r4, r5, r6, r7, fp, lr}
   152bc:	add	fp, sp, #16
   152c0:	sub	sp, sp, #48	; 0x30
   152c4:	mov	r7, r3
   152c8:	mov	r5, r0
   152cc:	movw	r0, #33192	; 0x81a8
   152d0:	movt	r0, #2
   152d4:	add	r3, r0, #16
   152d8:	mov	r4, #32
   152dc:	vld1.64	{d16-d17}, [r0], r4
   152e0:	vld1.64	{d18-d19}, [r3]
   152e4:	mov	r6, sp
   152e8:	add	r3, r6, #16
   152ec:	vld1.64	{d20-d21}, [r0]
   152f0:	vst1.64	{d18-d19}, [r3]
   152f4:	mov	r0, r6
   152f8:	vst1.64	{d16-d17}, [r0], r4
   152fc:	vst1.64	{d20-d21}, [r0]
   15300:	mov	r0, r6
   15304:	bl	13d20 <putchar_unlocked@plt+0x27fc>
   15308:	ldr	r2, [fp, #8]
   1530c:	mov	r0, r5
   15310:	mov	r1, r7
   15314:	mov	r3, r6
   15318:	bl	14f28 <putchar_unlocked@plt+0x3a04>
   1531c:	sub	sp, fp, #16
   15320:	pop	{r4, r5, r6, r7, fp, pc}
   15324:	mov	r3, r2
   15328:	mov	r2, r1
   1532c:	mov	r1, r0
   15330:	mov	r0, #0
   15334:	b	15298 <putchar_unlocked@plt+0x3d74>
   15338:	push	{fp, lr}
   1533c:	mov	fp, sp
   15340:	sub	sp, sp, #8
   15344:	mov	ip, r2
   15348:	mov	r2, r1
   1534c:	mov	r1, r0
   15350:	str	r3, [sp]
   15354:	mov	r0, #0
   15358:	mov	r3, ip
   1535c:	bl	152b8 <putchar_unlocked@plt+0x3d94>
   15360:	mov	sp, fp
   15364:	pop	{fp, pc}
   15368:	movw	r3, #33096	; 0x8148
   1536c:	movt	r3, #2
   15370:	b	14f28 <putchar_unlocked@plt+0x3a04>
   15374:	mov	r2, r1
   15378:	mov	r1, r0
   1537c:	mov	r0, #0
   15380:	b	15368 <putchar_unlocked@plt+0x3e44>
   15384:	mvn	r2, #0
   15388:	b	15368 <putchar_unlocked@plt+0x3e44>
   1538c:	mov	r1, r0
   15390:	mov	r0, #0
   15394:	b	15384 <putchar_unlocked@plt+0x3e60>
   15398:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1539c:	add	fp, sp, #24
   153a0:	sub	sp, sp, #16
   153a4:	mov	r4, r1
   153a8:	mov	r5, r0
   153ac:	mov	r7, #0
   153b0:	mov	r0, #0
   153b4:	mov	r1, r5
   153b8:	mov	r2, #5
   153bc:	bl	11284 <dcgettext@plt>
   153c0:	cmp	r0, r5
   153c4:	beq	153d0 <putchar_unlocked@plt+0x3eac>
   153c8:	sub	sp, fp, #24
   153cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   153d0:	bl	16b9c <putchar_unlocked@plt+0x5678>
   153d4:	mov	r6, r0
   153d8:	mov	r8, #56	; 0x38
   153dc:	mov	r0, #45	; 0x2d
   153e0:	stm	sp, {r0, r8}
   153e4:	str	r7, [sp, #8]
   153e8:	str	r7, [sp, #12]
   153ec:	mov	r0, r6
   153f0:	mov	r1, #85	; 0x55
   153f4:	mov	r2, #84	; 0x54
   153f8:	mov	r3, #70	; 0x46
   153fc:	bl	15494 <putchar_unlocked@plt+0x3f70>
   15400:	cmp	r0, #0
   15404:	beq	15420 <putchar_unlocked@plt+0x3efc>
   15408:	ldrb	r1, [r5]
   1540c:	movw	r2, #30020	; 0x7544
   15410:	movt	r2, #1
   15414:	movw	r0, #30024	; 0x7548
   15418:	movt	r0, #1
   1541c:	b	15464 <putchar_unlocked@plt+0x3f40>
   15420:	mov	r0, #48	; 0x30
   15424:	mov	r1, #51	; 0x33
   15428:	str	r8, [sp]
   1542c:	stmib	sp, {r0, r1}
   15430:	str	r0, [sp, #12]
   15434:	mov	r0, r6
   15438:	mov	r1, #71	; 0x47
   1543c:	mov	r2, #66	; 0x42
   15440:	mov	r3, #49	; 0x31
   15444:	bl	15494 <putchar_unlocked@plt+0x3f70>
   15448:	cmp	r0, #0
   1544c:	beq	15474 <putchar_unlocked@plt+0x3f50>
   15450:	ldrb	r1, [r5]
   15454:	movw	r2, #30028	; 0x754c
   15458:	movt	r2, #1
   1545c:	movw	r0, #30032	; 0x7550
   15460:	movt	r0, #1
   15464:	cmp	r1, #96	; 0x60
   15468:	moveq	r0, r2
   1546c:	sub	sp, fp, #24
   15470:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15474:	movw	r1, #30014	; 0x753e
   15478:	movt	r1, #1
   1547c:	movw	r0, #30018	; 0x7542
   15480:	movt	r0, #1
   15484:	cmp	r4, #9
   15488:	moveq	r0, r1
   1548c:	sub	sp, fp, #24
   15490:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15494:	push	{r4, r5, r6, r7, fp, lr}
   15498:	add	fp, sp, #16
   1549c:	sub	sp, sp, #16
   154a0:	mov	r4, r3
   154a4:	mov	r5, r2
   154a8:	mov	r7, r1
   154ac:	mov	r6, r0
   154b0:	mov	r0, r1
   154b4:	bl	16a30 <putchar_unlocked@plt+0x550c>
   154b8:	ldrb	r1, [r6]
   154bc:	cmp	r0, #0
   154c0:	andne	r1, r1, #223	; 0xdf
   154c4:	mov	r0, #0
   154c8:	cmp	r1, r7
   154cc:	bne	15504 <putchar_unlocked@plt+0x3fe0>
   154d0:	cmp	r7, #0
   154d4:	beq	1550c <putchar_unlocked@plt+0x3fe8>
   154d8:	ldr	r0, [fp, #20]
   154dc:	ldr	r1, [fp, #16]
   154e0:	ldr	r2, [fp, #12]
   154e4:	ldr	r3, [fp, #8]
   154e8:	str	r2, [sp]
   154ec:	str	r1, [sp, #4]
   154f0:	str	r0, [sp, #8]
   154f4:	mov	r0, r6
   154f8:	mov	r1, r5
   154fc:	mov	r2, r4
   15500:	bl	15518 <putchar_unlocked@plt+0x3ff4>
   15504:	sub	sp, fp, #16
   15508:	pop	{r4, r5, r6, r7, fp, pc}
   1550c:	mov	r0, #1
   15510:	sub	sp, fp, #16
   15514:	pop	{r4, r5, r6, r7, fp, pc}
   15518:	push	{r4, r5, r6, r7, fp, lr}
   1551c:	add	fp, sp, #16
   15520:	sub	sp, sp, #8
   15524:	mov	r4, r3
   15528:	mov	r5, r2
   1552c:	mov	r7, r1
   15530:	mov	r6, r0
   15534:	mov	r0, r1
   15538:	bl	16a30 <putchar_unlocked@plt+0x550c>
   1553c:	ldrb	r1, [r6, #1]
   15540:	cmp	r0, #0
   15544:	andne	r1, r1, #223	; 0xdf
   15548:	mov	r0, #0
   1554c:	cmp	r1, r7
   15550:	bne	15580 <putchar_unlocked@plt+0x405c>
   15554:	cmp	r7, #0
   15558:	beq	15588 <putchar_unlocked@plt+0x4064>
   1555c:	ldr	r0, [fp, #16]
   15560:	ldr	r1, [fp, #12]
   15564:	ldr	r3, [fp, #8]
   15568:	str	r1, [sp]
   1556c:	str	r0, [sp, #4]
   15570:	mov	r0, r6
   15574:	mov	r1, r5
   15578:	mov	r2, r4
   1557c:	bl	15594 <putchar_unlocked@plt+0x4070>
   15580:	sub	sp, fp, #16
   15584:	pop	{r4, r5, r6, r7, fp, pc}
   15588:	mov	r0, #1
   1558c:	sub	sp, fp, #16
   15590:	pop	{r4, r5, r6, r7, fp, pc}
   15594:	push	{r4, r5, r6, r7, fp, lr}
   15598:	add	fp, sp, #16
   1559c:	sub	sp, sp, #8
   155a0:	mov	r4, r3
   155a4:	mov	r5, r2
   155a8:	mov	r7, r1
   155ac:	mov	r6, r0
   155b0:	mov	r0, r1
   155b4:	bl	16a30 <putchar_unlocked@plt+0x550c>
   155b8:	ldrb	r1, [r6, #2]
   155bc:	cmp	r0, #0
   155c0:	andne	r1, r1, #223	; 0xdf
   155c4:	mov	r0, #0
   155c8:	cmp	r1, r7
   155cc:	bne	155f4 <putchar_unlocked@plt+0x40d0>
   155d0:	cmp	r7, #0
   155d4:	beq	155fc <putchar_unlocked@plt+0x40d8>
   155d8:	ldr	r0, [fp, #12]
   155dc:	ldr	r3, [fp, #8]
   155e0:	str	r0, [sp]
   155e4:	mov	r0, r6
   155e8:	mov	r1, r5
   155ec:	mov	r2, r4
   155f0:	bl	15608 <putchar_unlocked@plt+0x40e4>
   155f4:	sub	sp, fp, #16
   155f8:	pop	{r4, r5, r6, r7, fp, pc}
   155fc:	mov	r0, #1
   15600:	sub	sp, fp, #16
   15604:	pop	{r4, r5, r6, r7, fp, pc}
   15608:	push	{r4, r5, r6, r7, fp, lr}
   1560c:	add	fp, sp, #16
   15610:	mov	r4, r3
   15614:	mov	r5, r2
   15618:	mov	r7, r1
   1561c:	mov	r6, r0
   15620:	mov	r0, r1
   15624:	bl	16a30 <putchar_unlocked@plt+0x550c>
   15628:	ldrb	r1, [r6, #3]
   1562c:	ldr	r3, [fp, #8]
   15630:	cmp	r0, #0
   15634:	andne	r1, r1, #223	; 0xdf
   15638:	mov	r0, #0
   1563c:	cmp	r1, r7
   15640:	bne	15664 <putchar_unlocked@plt+0x4140>
   15644:	cmp	r7, #0
   15648:	beq	15660 <putchar_unlocked@plt+0x413c>
   1564c:	mov	r0, r6
   15650:	mov	r1, r5
   15654:	mov	r2, r4
   15658:	pop	{r4, r5, r6, r7, fp, lr}
   1565c:	b	15668 <putchar_unlocked@plt+0x4144>
   15660:	mov	r0, #1
   15664:	pop	{r4, r5, r6, r7, fp, pc}
   15668:	push	{r4, r5, r6, r7, fp, lr}
   1566c:	add	fp, sp, #16
   15670:	mov	r4, r3
   15674:	mov	r5, r2
   15678:	mov	r7, r1
   1567c:	mov	r6, r0
   15680:	mov	r0, r1
   15684:	bl	16a30 <putchar_unlocked@plt+0x550c>
   15688:	ldrb	r1, [r6, #4]
   1568c:	cmp	r0, #0
   15690:	andne	r1, r1, #223	; 0xdf
   15694:	mov	r0, #0
   15698:	cmp	r1, r7
   1569c:	bne	156c0 <putchar_unlocked@plt+0x419c>
   156a0:	cmp	r7, #0
   156a4:	beq	156bc <putchar_unlocked@plt+0x4198>
   156a8:	mov	r0, r6
   156ac:	mov	r1, r5
   156b0:	mov	r2, r4
   156b4:	pop	{r4, r5, r6, r7, fp, lr}
   156b8:	b	156c4 <putchar_unlocked@plt+0x41a0>
   156bc:	mov	r0, #1
   156c0:	pop	{r4, r5, r6, r7, fp, pc}
   156c4:	push	{r4, r5, r6, sl, fp, lr}
   156c8:	add	fp, sp, #16
   156cc:	mov	r4, r2
   156d0:	mov	r6, r1
   156d4:	mov	r5, r0
   156d8:	mov	r0, r1
   156dc:	bl	16a30 <putchar_unlocked@plt+0x550c>
   156e0:	ldrb	r1, [r5, #5]
   156e4:	cmp	r0, #0
   156e8:	andne	r1, r1, #223	; 0xdf
   156ec:	mov	r0, #0
   156f0:	cmp	r1, r6
   156f4:	bne	15714 <putchar_unlocked@plt+0x41f0>
   156f8:	cmp	r6, #0
   156fc:	beq	15710 <putchar_unlocked@plt+0x41ec>
   15700:	mov	r0, r5
   15704:	mov	r1, r4
   15708:	pop	{r4, r5, r6, sl, fp, lr}
   1570c:	b	15718 <putchar_unlocked@plt+0x41f4>
   15710:	mov	r0, #1
   15714:	pop	{r4, r5, r6, sl, fp, pc}
   15718:	push	{r4, r5, fp, lr}
   1571c:	add	fp, sp, #8
   15720:	mov	r5, r1
   15724:	mov	r4, r0
   15728:	mov	r0, r1
   1572c:	bl	16a30 <putchar_unlocked@plt+0x550c>
   15730:	ldrb	r1, [r4, #6]
   15734:	cmp	r0, #0
   15738:	andne	r1, r1, #223	; 0xdf
   1573c:	mov	r0, #0
   15740:	cmp	r1, r5
   15744:	popne	{r4, r5, fp, pc}
   15748:	cmp	r5, #0
   1574c:	beq	1575c <putchar_unlocked@plt+0x4238>
   15750:	mov	r0, r4
   15754:	pop	{r4, r5, fp, lr}
   15758:	b	15764 <putchar_unlocked@plt+0x4240>
   1575c:	mov	r0, #1
   15760:	pop	{r4, r5, fp, pc}
   15764:	push	{r4, sl, fp, lr}
   15768:	add	fp, sp, #8
   1576c:	mov	r4, r0
   15770:	mov	r0, #0
   15774:	bl	16a30 <putchar_unlocked@plt+0x550c>
   15778:	ldrb	r1, [r4, #7]
   1577c:	cmp	r0, #0
   15780:	beq	15794 <putchar_unlocked@plt+0x4270>
   15784:	tst	r1, #223	; 0xdf
   15788:	bne	1579c <putchar_unlocked@plt+0x4278>
   1578c:	mov	r0, #1
   15790:	pop	{r4, sl, fp, pc}
   15794:	cmp	r1, #0
   15798:	beq	1578c <putchar_unlocked@plt+0x4268>
   1579c:	mov	r0, #0
   157a0:	pop	{r4, sl, fp, pc}
   157a4:	push	{r4, r5, fp, lr}
   157a8:	add	fp, sp, #8
   157ac:	mov	r5, r0
   157b0:	mov	r0, #33	; 0x21
   157b4:	bl	162d8 <putchar_unlocked@plt+0x4db4>
   157b8:	mov	r4, r0
   157bc:	add	r1, r5, #44	; 0x2c
   157c0:	mov	r2, #32
   157c4:	bl	11410 <strncpy@plt>
   157c8:	mov	r5, #0
   157cc:	strb	r5, [r0, #32]
   157d0:	bl	113d4 <strlen@plt>
   157d4:	cmp	r0, #1
   157d8:	blt	15800 <putchar_unlocked@plt+0x42dc>
   157dc:	add	r1, r4, r0
   157e0:	mov	r0, r1
   157e4:	ldrb	r2, [r0, #-1]!
   157e8:	cmp	r2, #32
   157ec:	bne	15800 <putchar_unlocked@plt+0x42dc>
   157f0:	strb	r5, [r1, #-1]
   157f4:	cmp	r4, r0
   157f8:	mov	r1, r0
   157fc:	bcc	157e4 <putchar_unlocked@plt+0x42c0>
   15800:	mov	r0, r4
   15804:	pop	{r4, r5, fp, pc}
   15808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1580c:	add	fp, sp, #28
   15810:	sub	sp, sp, #12
   15814:	mov	r6, r3
   15818:	str	r2, [sp, #4]
   1581c:	mov	r9, r1
   15820:	mov	r7, #0
   15824:	str	r7, [sp, #8]
   15828:	bl	1123c <utmpxname@plt>
   1582c:	bl	11290 <setutxent@plt>
   15830:	bl	1150c <getutxent@plt>
   15834:	cmp	r0, #0
   15838:	beq	158bc <putchar_unlocked@plt+0x4398>
   1583c:	mov	r5, r0
   15840:	mov	r4, #0
   15844:	mov	r8, #384	; 0x180
   15848:	add	sl, sp, #8
   1584c:	mov	r7, #0
   15850:	b	1587c <putchar_unlocked@plt+0x4358>
   15854:	add	r0, r4, r4, lsl #1
   15858:	add	r0, r7, r0, lsl #7
   1585c:	mov	r1, r5
   15860:	mov	r2, #384	; 0x180
   15864:	bl	11260 <memcpy@plt>
   15868:	add	r4, r4, #1
   1586c:	bl	1150c <getutxent@plt>
   15870:	mov	r5, r0
   15874:	cmp	r0, #0
   15878:	beq	158c0 <putchar_unlocked@plt+0x439c>
   1587c:	mov	r0, r5
   15880:	mov	r1, r6
   15884:	bl	158dc <putchar_unlocked@plt+0x43b8>
   15888:	cmp	r0, #0
   1588c:	beq	1586c <putchar_unlocked@plt+0x4348>
   15890:	ldr	r0, [sp, #8]
   15894:	cmp	r4, r0
   15898:	bne	15854 <putchar_unlocked@plt+0x4330>
   1589c:	str	r8, [sp]
   158a0:	mov	r0, r7
   158a4:	mov	r1, sl
   158a8:	mov	r2, #1
   158ac:	mvn	r3, #0
   158b0:	bl	163f0 <putchar_unlocked@plt+0x4ecc>
   158b4:	mov	r7, r0
   158b8:	b	15854 <putchar_unlocked@plt+0x4330>
   158bc:	mov	r4, #0
   158c0:	bl	11470 <endutxent@plt>
   158c4:	str	r4, [r9]
   158c8:	ldr	r0, [sp, #4]
   158cc:	str	r7, [r0]
   158d0:	mov	r0, #0
   158d4:	sub	sp, fp, #28
   158d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158dc:	push	{r4, sl, fp, lr}
   158e0:	add	fp, sp, #8
   158e4:	ldrb	r2, [r0, #44]	; 0x2c
   158e8:	mov	r4, #0
   158ec:	cmp	r2, #0
   158f0:	mov	r2, #0
   158f4:	beq	15908 <putchar_unlocked@plt+0x43e4>
   158f8:	ldrh	r2, [r0]
   158fc:	sub	r2, r2, #7
   15900:	clz	r2, r2
   15904:	lsr	r2, r2, #5
   15908:	tst	r1, #2
   1590c:	beq	15920 <putchar_unlocked@plt+0x43fc>
   15910:	cmp	r2, #0
   15914:	bne	15920 <putchar_unlocked@plt+0x43fc>
   15918:	mov	r0, r4
   1591c:	pop	{r4, sl, fp, pc}
   15920:	tst	r1, #1
   15924:	beq	15950 <putchar_unlocked@plt+0x442c>
   15928:	eors	r1, r2, #1
   1592c:	bne	15950 <putchar_unlocked@plt+0x442c>
   15930:	ldr	r0, [r0, #4]
   15934:	cmp	r0, #1
   15938:	blt	15950 <putchar_unlocked@plt+0x442c>
   1593c:	mov	r4, #0
   15940:	mov	r1, #0
   15944:	bl	113a4 <kill@plt>
   15948:	cmn	r0, #1
   1594c:	ble	1595c <putchar_unlocked@plt+0x4438>
   15950:	mov	r4, #1
   15954:	mov	r0, r4
   15958:	pop	{r4, sl, fp, pc}
   1595c:	bl	113ec <__errno_location@plt>
   15960:	ldr	r0, [r0]
   15964:	cmp	r0, #3
   15968:	movne	r4, #1
   1596c:	mov	r0, r4
   15970:	pop	{r4, sl, fp, pc}
   15974:	push	{r4, r5, r6, sl, fp, lr}
   15978:	add	fp, sp, #16
   1597c:	mov	r4, r0
   15980:	cmp	r0, #0
   15984:	beq	159a8 <putchar_unlocked@plt+0x4484>
   15988:	mov	r0, r4
   1598c:	bl	113d4 <strlen@plt>
   15990:	add	r5, r0, #1
   15994:	cmp	r5, #58	; 0x3a
   15998:	bls	159ac <putchar_unlocked@plt+0x4488>
   1599c:	add	r0, r0, #10
   159a0:	bic	r0, r0, #3
   159a4:	b	159b0 <putchar_unlocked@plt+0x448c>
   159a8:	mov	r5, #0
   159ac:	mov	r0, #64	; 0x40
   159b0:	bl	166f8 <putchar_unlocked@plt+0x51d4>
   159b4:	mov	r6, r0
   159b8:	cmp	r0, #0
   159bc:	beq	159ec <putchar_unlocked@plt+0x44c8>
   159c0:	mov	r1, #0
   159c4:	str	r1, [r6]
   159c8:	cmp	r4, #0
   159cc:	mov	r0, r4
   159d0:	movwne	r0, #1
   159d4:	strb	r0, [r6, #4]
   159d8:	mov	r0, r6
   159dc:	strb	r1, [r0, #5]!
   159e0:	movne	r1, r4
   159e4:	movne	r2, r5
   159e8:	blne	159f4 <putchar_unlocked@plt+0x44d0>
   159ec:	mov	r0, r6
   159f0:	pop	{r4, r5, r6, sl, fp, pc}
   159f4:	push	{r4, r5, fp, lr}
   159f8:	add	fp, sp, #8
   159fc:	mov	r4, r2
   15a00:	mov	r5, r0
   15a04:	bl	11260 <memcpy@plt>
   15a08:	mov	r0, #0
   15a0c:	strb	r0, [r5, r4]
   15a10:	pop	{r4, r5, fp, pc}
   15a14:	push	{r4, sl, fp, lr}
   15a18:	add	fp, sp, #8
   15a1c:	cmp	r0, #2
   15a20:	popcc	{r4, sl, fp, pc}
   15a24:	ldr	r4, [r0]
   15a28:	bl	16b24 <putchar_unlocked@plt+0x5600>
   15a2c:	cmp	r4, #0
   15a30:	mov	r0, r4
   15a34:	bne	15a24 <putchar_unlocked@plt+0x4500>
   15a38:	pop	{r4, sl, fp, pc}
   15a3c:	push	{r4, r5, r6, r7, fp, lr}
   15a40:	add	fp, sp, #16
   15a44:	mov	r4, r2
   15a48:	mov	r7, r1
   15a4c:	cmp	r0, #0
   15a50:	beq	15a90 <putchar_unlocked@plt+0x456c>
   15a54:	mov	r6, r0
   15a58:	bl	15ac8 <putchar_unlocked@plt+0x45a4>
   15a5c:	cmp	r0, #0
   15a60:	beq	15aa0 <putchar_unlocked@plt+0x457c>
   15a64:	mov	r5, r0
   15a68:	mov	r0, r7
   15a6c:	mov	r1, r4
   15a70:	bl	112a8 <localtime_r@plt>
   15a74:	cmp	r0, #0
   15a78:	beq	15aa8 <putchar_unlocked@plt+0x4584>
   15a7c:	mov	r0, r6
   15a80:	mov	r1, r4
   15a84:	bl	15b60 <putchar_unlocked@plt+0x463c>
   15a88:	eor	r6, r0, #1
   15a8c:	b	15aac <putchar_unlocked@plt+0x4588>
   15a90:	mov	r0, r7
   15a94:	mov	r1, r4
   15a98:	pop	{r4, r5, r6, r7, fp, lr}
   15a9c:	b	1120c <gmtime_r@plt>
   15aa0:	mov	r0, #0
   15aa4:	pop	{r4, r5, r6, r7, fp, pc}
   15aa8:	mov	r6, #1
   15aac:	mov	r0, r5
   15ab0:	bl	15c78 <putchar_unlocked@plt+0x4754>
   15ab4:	cmp	r0, #0
   15ab8:	movne	r0, r4
   15abc:	cmp	r6, #0
   15ac0:	movwne	r0, #0
   15ac4:	pop	{r4, r5, r6, r7, fp, pc}
   15ac8:	push	{r4, r5, r6, r7, fp, lr}
   15acc:	add	fp, sp, #16
   15ad0:	mov	r4, r0
   15ad4:	bl	15da4 <putchar_unlocked@plt+0x4880>
   15ad8:	mov	r5, r0
   15adc:	ldrb	r0, [r4, #4]
   15ae0:	cmp	r5, #0
   15ae4:	beq	15afc <putchar_unlocked@plt+0x45d8>
   15ae8:	cmp	r0, #0
   15aec:	beq	15b04 <putchar_unlocked@plt+0x45e0>
   15af0:	add	r0, r4, #5
   15af4:	mov	r1, r5
   15af8:	bl	11218 <strcmp@plt>
   15afc:	cmp	r0, #0
   15b00:	beq	15b34 <putchar_unlocked@plt+0x4610>
   15b04:	mov	r0, r5
   15b08:	bl	15974 <putchar_unlocked@plt+0x4450>
   15b0c:	mov	r5, #0
   15b10:	cmp	r0, #0
   15b14:	beq	15b58 <putchar_unlocked@plt+0x4634>
   15b18:	mov	r6, r0
   15b1c:	mov	r0, r4
   15b20:	bl	15db0 <putchar_unlocked@plt+0x488c>
   15b24:	cmp	r0, #0
   15b28:	beq	15b40 <putchar_unlocked@plt+0x461c>
   15b2c:	mov	r0, r6
   15b30:	pop	{r4, r5, r6, r7, fp, pc}
   15b34:	mov	r5, #1
   15b38:	mov	r0, r5
   15b3c:	pop	{r4, r5, r6, r7, fp, pc}
   15b40:	bl	113ec <__errno_location@plt>
   15b44:	mov	r4, r0
   15b48:	ldr	r7, [r0]
   15b4c:	mov	r0, r6
   15b50:	bl	15a14 <putchar_unlocked@plt+0x44f0>
   15b54:	str	r7, [r4]
   15b58:	mov	r0, r5
   15b5c:	pop	{r4, r5, r6, r7, fp, pc}
   15b60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15b64:	add	fp, sp, #24
   15b68:	ldr	r7, [r1, #40]	; 0x28
   15b6c:	mov	r8, #1
   15b70:	cmp	r7, #0
   15b74:	beq	15c14 <putchar_unlocked@plt+0x46f0>
   15b78:	mov	r5, r1
   15b7c:	mov	r6, r0
   15b80:	cmp	r7, r1
   15b84:	bcc	15b94 <putchar_unlocked@plt+0x4670>
   15b88:	add	r0, r5, #44	; 0x2c
   15b8c:	cmp	r7, r0
   15b90:	bcc	15c14 <putchar_unlocked@plt+0x46f0>
   15b94:	ldrb	r0, [r7]
   15b98:	cmp	r0, #0
   15b9c:	beq	15c08 <putchar_unlocked@plt+0x46e4>
   15ba0:	add	r4, r6, #5
   15ba4:	mov	r0, r4
   15ba8:	mov	r1, r7
   15bac:	bl	11218 <strcmp@plt>
   15bb0:	cmp	r0, #0
   15bb4:	beq	15c10 <putchar_unlocked@plt+0x46ec>
   15bb8:	ldrb	r0, [r4]
   15bbc:	cmp	r0, #0
   15bc0:	bne	15bdc <putchar_unlocked@plt+0x46b8>
   15bc4:	add	r0, r6, #5
   15bc8:	cmp	r4, r0
   15bcc:	bne	15c1c <putchar_unlocked@plt+0x46f8>
   15bd0:	ldrb	r0, [r6, #4]
   15bd4:	cmp	r0, #0
   15bd8:	beq	15c1c <putchar_unlocked@plt+0x46f8>
   15bdc:	mov	r0, r4
   15be0:	bl	113d4 <strlen@plt>
   15be4:	add	r4, r0, r4
   15be8:	ldrb	r0, [r4, #1]!
   15bec:	cmp	r0, #0
   15bf0:	bne	15ba4 <putchar_unlocked@plt+0x4680>
   15bf4:	ldr	r0, [r6]
   15bf8:	cmp	r0, #0
   15bfc:	addne	r4, r0, #5
   15c00:	movne	r6, r0
   15c04:	b	15ba4 <putchar_unlocked@plt+0x4680>
   15c08:	movw	r4, #28944	; 0x7110
   15c0c:	movt	r4, #1
   15c10:	str	r4, [r5, #40]	; 0x28
   15c14:	mov	r0, r8
   15c18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15c1c:	sub	r0, r6, r4
   15c20:	add	r9, r0, #64	; 0x40
   15c24:	mov	r0, r7
   15c28:	bl	113d4 <strlen@plt>
   15c2c:	add	r2, r0, #1
   15c30:	cmp	r2, r9
   15c34:	bge	15c48 <putchar_unlocked@plt+0x4724>
   15c38:	mov	r0, r4
   15c3c:	mov	r1, r7
   15c40:	bl	159f4 <putchar_unlocked@plt+0x44d0>
   15c44:	b	15c10 <putchar_unlocked@plt+0x46ec>
   15c48:	mov	r0, r7
   15c4c:	bl	15974 <putchar_unlocked@plt+0x4450>
   15c50:	str	r0, [r6]
   15c54:	cmp	r0, #0
   15c58:	beq	15c6c <putchar_unlocked@plt+0x4748>
   15c5c:	mov	r1, #0
   15c60:	strb	r1, [r0, #4]
   15c64:	add	r4, r0, #5
   15c68:	b	15c10 <putchar_unlocked@plt+0x46ec>
   15c6c:	mov	r8, #0
   15c70:	mov	r0, r8
   15c74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15c78:	push	{r4, r5, r6, r7, fp, lr}
   15c7c:	add	fp, sp, #16
   15c80:	cmp	r0, #1
   15c84:	beq	15cc0 <putchar_unlocked@plt+0x479c>
   15c88:	mov	r4, r0
   15c8c:	bl	113ec <__errno_location@plt>
   15c90:	mov	r6, r0
   15c94:	ldr	r7, [r0]
   15c98:	mov	r0, r4
   15c9c:	bl	15db0 <putchar_unlocked@plt+0x488c>
   15ca0:	mov	r5, r0
   15ca4:	cmp	r0, #0
   15ca8:	ldreq	r7, [r6]
   15cac:	mov	r0, r4
   15cb0:	bl	15a14 <putchar_unlocked@plt+0x44f0>
   15cb4:	str	r7, [r6]
   15cb8:	mov	r0, r5
   15cbc:	pop	{r4, r5, r6, r7, fp, pc}
   15cc0:	mov	r5, #1
   15cc4:	mov	r0, r5
   15cc8:	pop	{r4, r5, r6, r7, fp, pc}
   15ccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15cd0:	add	fp, sp, #24
   15cd4:	sub	sp, sp, #48	; 0x30
   15cd8:	mov	r4, r1
   15cdc:	cmp	r0, #0
   15ce0:	beq	15d7c <putchar_unlocked@plt+0x4858>
   15ce4:	mov	r6, r0
   15ce8:	bl	15ac8 <putchar_unlocked@plt+0x45a4>
   15cec:	cmp	r0, #0
   15cf0:	beq	15d94 <putchar_unlocked@plt+0x4870>
   15cf4:	mov	r7, r0
   15cf8:	ldm	r4, {r0, r1, r2, r3, r5, ip}
   15cfc:	stm	sp, {r0, r1, r2, r3, r5}
   15d00:	mvn	r0, #0
   15d04:	str	r0, [sp, #28]
   15d08:	str	ip, [sp, #20]
   15d0c:	ldr	r0, [r4, #32]
   15d10:	str	r0, [sp, #32]
   15d14:	mov	r0, sp
   15d18:	bl	11224 <mktime@plt>
   15d1c:	mov	r5, r0
   15d20:	ldr	r0, [sp, #28]
   15d24:	cmn	r0, #1
   15d28:	ble	15d8c <putchar_unlocked@plt+0x4868>
   15d2c:	mov	r8, sp
   15d30:	mov	r0, r6
   15d34:	mov	r1, r8
   15d38:	bl	15b60 <putchar_unlocked@plt+0x463c>
   15d3c:	mov	r6, r0
   15d40:	mov	r0, r7
   15d44:	bl	15c78 <putchar_unlocked@plt+0x4754>
   15d48:	cmp	r6, #0
   15d4c:	cmpne	r0, #0
   15d50:	beq	15d94 <putchar_unlocked@plt+0x4870>
   15d54:	mov	r0, #28
   15d58:	add	r1, r8, #16
   15d5c:	vld1.32	{d16-d17}, [r8], r0
   15d60:	vld1.64	{d18-d19}, [r1]
   15d64:	add	r1, r4, #16
   15d68:	vld1.32	{d20-d21}, [r8]
   15d6c:	vst1.32	{d18-d19}, [r1]
   15d70:	vst1.32	{d16-d17}, [r4], r0
   15d74:	vst1.32	{d20-d21}, [r4]
   15d78:	b	15d98 <putchar_unlocked@plt+0x4874>
   15d7c:	mov	r0, r4
   15d80:	sub	sp, fp, #24
   15d84:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15d88:	b	114b8 <timegm@plt>
   15d8c:	mov	r0, r7
   15d90:	bl	15c78 <putchar_unlocked@plt+0x4754>
   15d94:	mvn	r5, #0
   15d98:	mov	r0, r5
   15d9c:	sub	sp, fp, #24
   15da0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15da4:	movw	r0, #30120	; 0x75a8
   15da8:	movt	r0, #1
   15dac:	b	1132c <getenv@plt>
   15db0:	push	{fp, lr}
   15db4:	mov	fp, sp
   15db8:	ldrb	r1, [r0, #4]
   15dbc:	cmp	r1, #0
   15dc0:	addne	r1, r0, #5
   15dc4:	mov	r0, r1
   15dc8:	bl	15de8 <putchar_unlocked@plt+0x48c4>
   15dcc:	mov	r1, r0
   15dd0:	mov	r0, #0
   15dd4:	cmp	r1, #0
   15dd8:	popne	{fp, pc}
   15ddc:	bl	112cc <tzset@plt>
   15de0:	mov	r0, #1
   15de4:	pop	{fp, pc}
   15de8:	cmp	r0, #0
   15dec:	beq	15e04 <putchar_unlocked@plt+0x48e0>
   15df0:	mov	r1, r0
   15df4:	movw	r0, #30120	; 0x75a8
   15df8:	movt	r0, #1
   15dfc:	mov	r2, #1
   15e00:	b	113e0 <setenv@plt>
   15e04:	movw	r0, #30120	; 0x75a8
   15e08:	movt	r0, #1
   15e0c:	b	114e8 <unsetenv@plt>
   15e10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15e14:	add	fp, sp, #24
   15e18:	sub	sp, sp, #32
   15e1c:	mov	r4, r2
   15e20:	mov	r8, r0
   15e24:	ldr	r6, [fp, #12]
   15e28:	ldr	r7, [fp, #8]
   15e2c:	cmp	r1, #0
   15e30:	beq	15e58 <putchar_unlocked@plt+0x4934>
   15e34:	mov	r5, r1
   15e38:	str	r4, [sp]
   15e3c:	str	r3, [sp, #4]
   15e40:	movw	r2, #30123	; 0x75ab
   15e44:	movt	r2, #1
   15e48:	mov	r0, r8
   15e4c:	mov	r1, #1
   15e50:	mov	r3, r5
   15e54:	b	15e70 <putchar_unlocked@plt+0x494c>
   15e58:	str	r3, [sp]
   15e5c:	movw	r2, #30135	; 0x75b7
   15e60:	movt	r2, #1
   15e64:	mov	r0, r8
   15e68:	mov	r1, #1
   15e6c:	mov	r3, r4
   15e70:	bl	11434 <__fprintf_chk@plt>
   15e74:	movw	r1, #30142	; 0x75be
   15e78:	movt	r1, #1
   15e7c:	mov	r0, #0
   15e80:	mov	r2, #5
   15e84:	bl	11284 <dcgettext@plt>
   15e88:	mov	r3, r0
   15e8c:	movw	r0, #2022	; 0x7e6
   15e90:	str	r0, [sp]
   15e94:	movw	r2, #30860	; 0x788c
   15e98:	movt	r2, #1
   15e9c:	mov	r0, r8
   15ea0:	mov	r1, #1
   15ea4:	bl	11434 <__fprintf_chk@plt>
   15ea8:	movw	r4, #28943	; 0x710f
   15eac:	movt	r4, #1
   15eb0:	mov	r0, r4
   15eb4:	mov	r1, r8
   15eb8:	bl	111f4 <fputs_unlocked@plt>
   15ebc:	movw	r1, #30146	; 0x75c2
   15ec0:	movt	r1, #1
   15ec4:	mov	r0, #0
   15ec8:	mov	r2, #5
   15ecc:	bl	11284 <dcgettext@plt>
   15ed0:	mov	r2, r0
   15ed4:	movw	r3, #30317	; 0x766d
   15ed8:	movt	r3, #1
   15edc:	mov	r0, r8
   15ee0:	mov	r1, #1
   15ee4:	bl	11434 <__fprintf_chk@plt>
   15ee8:	mov	r0, r4
   15eec:	mov	r1, r8
   15ef0:	bl	111f4 <fputs_unlocked@plt>
   15ef4:	cmp	r6, #9
   15ef8:	bhi	15f34 <putchar_unlocked@plt+0x4a10>
   15efc:	add	r0, pc, #0
   15f00:	ldr	pc, [r0, r6, lsl #2]
   15f04:	andeq	r5, r1, ip, lsr #30
   15f08:	andeq	r5, r1, r0, asr #30
   15f0c:	andeq	r5, r1, r0, ror pc
   15f10:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   15f14:	andeq	r5, r1, r0, asr #31
   15f18:	andeq	r5, r1, r8, ror #31
   15f1c:	andeq	r6, r1, r0, lsl r0
   15f20:	andeq	r6, r1, r8, asr #32
   15f24:	andeq	r6, r1, r8, ror #1
   15f28:	muleq	r1, r0, r0
   15f2c:	sub	sp, fp, #24
   15f30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15f34:	movw	r1, #30670	; 0x77ce
   15f38:	movt	r1, #1
   15f3c:	b	16098 <putchar_unlocked@plt+0x4b74>
   15f40:	movw	r1, #30351	; 0x768f
   15f44:	movt	r1, #1
   15f48:	mov	r0, #0
   15f4c:	mov	r2, #5
   15f50:	bl	11284 <dcgettext@plt>
   15f54:	mov	r2, r0
   15f58:	ldr	r3, [r7]
   15f5c:	mov	r0, r8
   15f60:	mov	r1, #1
   15f64:	sub	sp, fp, #24
   15f68:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f6c:	b	11434 <__fprintf_chk@plt>
   15f70:	movw	r1, #30367	; 0x769f
   15f74:	movt	r1, #1
   15f78:	mov	r0, #0
   15f7c:	mov	r2, #5
   15f80:	bl	11284 <dcgettext@plt>
   15f84:	mov	r2, r0
   15f88:	ldr	r3, [r7]
   15f8c:	ldr	r0, [r7, #4]
   15f90:	str	r0, [sp]
   15f94:	b	16084 <putchar_unlocked@plt+0x4b60>
   15f98:	movw	r1, #30390	; 0x76b6
   15f9c:	movt	r1, #1
   15fa0:	mov	r0, #0
   15fa4:	mov	r2, #5
   15fa8:	bl	11284 <dcgettext@plt>
   15fac:	mov	r2, r0
   15fb0:	ldr	r3, [r7]
   15fb4:	ldmib	r7, {r0, r1}
   15fb8:	stm	sp, {r0, r1}
   15fbc:	b	16084 <putchar_unlocked@plt+0x4b60>
   15fc0:	movw	r1, #30418	; 0x76d2
   15fc4:	movt	r1, #1
   15fc8:	mov	r0, #0
   15fcc:	mov	r2, #5
   15fd0:	bl	11284 <dcgettext@plt>
   15fd4:	mov	r2, r0
   15fd8:	ldr	r3, [r7]
   15fdc:	ldmib	r7, {r0, r1, r7}
   15fe0:	stm	sp, {r0, r1, r7}
   15fe4:	b	16084 <putchar_unlocked@plt+0x4b60>
   15fe8:	movw	r1, #30450	; 0x76f2
   15fec:	movt	r1, #1
   15ff0:	mov	r0, #0
   15ff4:	mov	r2, #5
   15ff8:	bl	11284 <dcgettext@plt>
   15ffc:	mov	r2, r0
   16000:	ldr	r3, [r7]
   16004:	ldmib	r7, {r0, r1, r6, r7}
   16008:	stm	sp, {r0, r1, r6, r7}
   1600c:	b	16084 <putchar_unlocked@plt+0x4b60>
   16010:	movw	r1, #30486	; 0x7716
   16014:	movt	r1, #1
   16018:	mov	r0, #0
   1601c:	mov	r2, #5
   16020:	bl	11284 <dcgettext@plt>
   16024:	mov	r2, r0
   16028:	ldr	r3, [r7]
   1602c:	ldmib	r7, {r0, r1, r6}
   16030:	ldr	r5, [r7, #16]
   16034:	ldr	r7, [r7, #20]
   16038:	stm	sp, {r0, r1, r6}
   1603c:	str	r5, [sp, #12]
   16040:	str	r7, [sp, #16]
   16044:	b	16084 <putchar_unlocked@plt+0x4b60>
   16048:	movw	r1, #30526	; 0x773e
   1604c:	movt	r1, #1
   16050:	mov	r0, #0
   16054:	mov	r2, #5
   16058:	bl	11284 <dcgettext@plt>
   1605c:	mov	r2, r0
   16060:	ldr	r3, [r7]
   16064:	ldmib	r7, {r0, r1, r6}
   16068:	ldr	r5, [r7, #16]
   1606c:	ldr	r4, [r7, #20]
   16070:	ldr	r7, [r7, #24]
   16074:	stm	sp, {r0, r1, r6}
   16078:	str	r5, [sp, #12]
   1607c:	str	r4, [sp, #16]
   16080:	str	r7, [sp, #20]
   16084:	mov	r0, r8
   16088:	mov	r1, #1
   1608c:	b	16138 <putchar_unlocked@plt+0x4c14>
   16090:	movw	r1, #30618	; 0x779a
   16094:	movt	r1, #1
   16098:	mov	r0, #0
   1609c:	mov	r2, #5
   160a0:	bl	11284 <dcgettext@plt>
   160a4:	mov	ip, r0
   160a8:	ldr	r3, [r7]
   160ac:	ldr	r0, [r7, #4]
   160b0:	ldr	r1, [r7, #8]
   160b4:	ldr	r6, [r7, #12]
   160b8:	ldr	r5, [r7, #16]
   160bc:	ldr	r4, [r7, #20]
   160c0:	ldr	r2, [r7, #24]
   160c4:	ldr	lr, [r7, #28]
   160c8:	ldr	r7, [r7, #32]
   160cc:	stm	sp, {r0, r1, r6}
   160d0:	str	r5, [sp, #12]
   160d4:	str	r4, [sp, #16]
   160d8:	str	r2, [sp, #20]
   160dc:	str	lr, [sp, #24]
   160e0:	str	r7, [sp, #28]
   160e4:	b	1612c <putchar_unlocked@plt+0x4c08>
   160e8:	movw	r1, #30570	; 0x776a
   160ec:	movt	r1, #1
   160f0:	mov	r0, #0
   160f4:	mov	r2, #5
   160f8:	bl	11284 <dcgettext@plt>
   160fc:	mov	ip, r0
   16100:	ldr	r3, [r7]
   16104:	ldmib	r7, {r0, r1, r6}
   16108:	ldr	r5, [r7, #16]
   1610c:	ldr	r4, [r7, #20]
   16110:	ldr	r2, [r7, #24]
   16114:	ldr	r7, [r7, #28]
   16118:	stm	sp, {r0, r1, r6}
   1611c:	str	r5, [sp, #12]
   16120:	str	r4, [sp, #16]
   16124:	str	r2, [sp, #20]
   16128:	str	r7, [sp, #24]
   1612c:	mov	r0, r8
   16130:	mov	r1, #1
   16134:	mov	r2, ip
   16138:	bl	11434 <__fprintf_chk@plt>
   1613c:	sub	sp, fp, #24
   16140:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16144:	push	{r4, sl, fp, lr}
   16148:	add	fp, sp, #8
   1614c:	sub	sp, sp, #8
   16150:	mov	lr, #0
   16154:	ldr	ip, [fp, #8]
   16158:	ldr	r4, [ip, lr, lsl #2]
   1615c:	add	lr, lr, #1
   16160:	cmp	r4, #0
   16164:	bne	16158 <putchar_unlocked@plt+0x4c34>
   16168:	sub	r4, lr, #1
   1616c:	str	ip, [sp]
   16170:	str	r4, [sp, #4]
   16174:	bl	15e10 <putchar_unlocked@plt+0x48ec>
   16178:	sub	sp, fp, #8
   1617c:	pop	{r4, sl, fp, pc}
   16180:	push	{r4, r5, fp, lr}
   16184:	add	fp, sp, #8
   16188:	sub	sp, sp, #48	; 0x30
   1618c:	mov	ip, #0
   16190:	ldr	r4, [fp, #8]
   16194:	add	lr, sp, #8
   16198:	ldr	r5, [r4]
   1619c:	str	r5, [lr, ip, lsl #2]
   161a0:	cmp	r5, #0
   161a4:	beq	161bc <putchar_unlocked@plt+0x4c98>
   161a8:	add	ip, ip, #1
   161ac:	add	r4, r4, #4
   161b0:	cmp	ip, #10
   161b4:	bne	16198 <putchar_unlocked@plt+0x4c74>
   161b8:	mov	ip, #10
   161bc:	str	lr, [sp]
   161c0:	str	ip, [sp, #4]
   161c4:	bl	15e10 <putchar_unlocked@plt+0x48ec>
   161c8:	sub	sp, fp, #8
   161cc:	pop	{r4, r5, fp, pc}
   161d0:	push	{fp, lr}
   161d4:	mov	fp, sp
   161d8:	sub	sp, sp, #8
   161dc:	add	ip, fp, #8
   161e0:	str	ip, [sp, #4]
   161e4:	str	ip, [sp]
   161e8:	bl	16180 <putchar_unlocked@plt+0x4c5c>
   161ec:	mov	sp, fp
   161f0:	pop	{fp, pc}
   161f4:	push	{fp, lr}
   161f8:	mov	fp, sp
   161fc:	movw	r0, #33164	; 0x818c
   16200:	movt	r0, #2
   16204:	ldr	r1, [r0]
   16208:	movw	r0, #28943	; 0x710f
   1620c:	movt	r0, #1
   16210:	bl	111f4 <fputs_unlocked@plt>
   16214:	movw	r1, #30730	; 0x780a
   16218:	movt	r1, #1
   1621c:	mov	r0, #0
   16220:	mov	r2, #5
   16224:	bl	11284 <dcgettext@plt>
   16228:	mov	r1, r0
   1622c:	movw	r2, #30750	; 0x781e
   16230:	movt	r2, #1
   16234:	mov	r0, #1
   16238:	bl	1141c <__printf_chk@plt>
   1623c:	movw	r1, #30772	; 0x7834
   16240:	movt	r1, #1
   16244:	mov	r0, #0
   16248:	mov	r2, #5
   1624c:	bl	11284 <dcgettext@plt>
   16250:	mov	r1, r0
   16254:	movw	r2, #29096	; 0x71a8
   16258:	movt	r2, #1
   1625c:	movw	r3, #29290	; 0x726a
   16260:	movt	r3, #1
   16264:	mov	r0, #1
   16268:	bl	1141c <__printf_chk@plt>
   1626c:	movw	r1, #30792	; 0x7848
   16270:	movt	r1, #1
   16274:	mov	r0, #0
   16278:	mov	r2, #5
   1627c:	bl	11284 <dcgettext@plt>
   16280:	mov	r1, r0
   16284:	movw	r2, #30831	; 0x786f
   16288:	movt	r2, #1
   1628c:	mov	r0, #1
   16290:	pop	{fp, lr}
   16294:	b	1141c <__printf_chk@plt>
   16298:	b	1629c <putchar_unlocked@plt+0x4d78>
   1629c:	push	{r4, r5, r6, sl, fp, lr}
   162a0:	add	fp, sp, #16
   162a4:	mov	r4, r2
   162a8:	mov	r5, r1
   162ac:	mov	r6, r0
   162b0:	bl	16c38 <putchar_unlocked@plt+0x5714>
   162b4:	cmp	r0, #0
   162b8:	popne	{r4, r5, r6, sl, fp, pc}
   162bc:	cmp	r6, #0
   162c0:	beq	162d4 <putchar_unlocked@plt+0x4db0>
   162c4:	cmp	r5, #0
   162c8:	cmpne	r4, #0
   162cc:	bne	162d4 <putchar_unlocked@plt+0x4db0>
   162d0:	pop	{r4, r5, r6, sl, fp, pc}
   162d4:	bl	16660 <putchar_unlocked@plt+0x513c>
   162d8:	push	{fp, lr}
   162dc:	mov	fp, sp
   162e0:	bl	166f8 <putchar_unlocked@plt+0x51d4>
   162e4:	pop	{fp, lr}
   162e8:	b	162ec <putchar_unlocked@plt+0x4dc8>
   162ec:	cmp	r0, #0
   162f0:	bxne	lr
   162f4:	push	{fp, lr}
   162f8:	mov	fp, sp
   162fc:	bl	16660 <putchar_unlocked@plt+0x513c>
   16300:	push	{fp, lr}
   16304:	mov	fp, sp
   16308:	bl	16b68 <putchar_unlocked@plt+0x5644>
   1630c:	pop	{fp, lr}
   16310:	b	162ec <putchar_unlocked@plt+0x4dc8>
   16314:	b	162d8 <putchar_unlocked@plt+0x4db4>
   16318:	push	{r4, r5, fp, lr}
   1631c:	add	fp, sp, #8
   16320:	mov	r4, r1
   16324:	mov	r5, r0
   16328:	bl	16728 <putchar_unlocked@plt+0x5204>
   1632c:	cmp	r0, #0
   16330:	popne	{r4, r5, fp, pc}
   16334:	cmp	r5, #0
   16338:	beq	16348 <putchar_unlocked@plt+0x4e24>
   1633c:	cmp	r4, #0
   16340:	bne	16348 <putchar_unlocked@plt+0x4e24>
   16344:	pop	{r4, r5, fp, pc}
   16348:	bl	16660 <putchar_unlocked@plt+0x513c>
   1634c:	push	{fp, lr}
   16350:	mov	fp, sp
   16354:	bl	16b6c <putchar_unlocked@plt+0x5648>
   16358:	pop	{fp, lr}
   1635c:	b	162ec <putchar_unlocked@plt+0x4dc8>
   16360:	push	{fp, lr}
   16364:	mov	fp, sp
   16368:	bl	16b7c <putchar_unlocked@plt+0x5658>
   1636c:	pop	{fp, lr}
   16370:	b	162ec <putchar_unlocked@plt+0x4dc8>
   16374:	mov	r2, r1
   16378:	mov	r1, r0
   1637c:	mov	r0, #0
   16380:	b	1629c <putchar_unlocked@plt+0x4d78>
   16384:	mov	r2, r1
   16388:	mov	r1, r0
   1638c:	mov	r0, #0
   16390:	b	16360 <putchar_unlocked@plt+0x4e3c>
   16394:	mov	r2, #1
   16398:	b	1639c <putchar_unlocked@plt+0x4e78>
   1639c:	push	{r4, r5, fp, lr}
   163a0:	add	fp, sp, #8
   163a4:	mov	r4, r1
   163a8:	ldr	r5, [r1]
   163ac:	cmp	r0, #0
   163b0:	beq	163c8 <putchar_unlocked@plt+0x4ea4>
   163b4:	mov	r1, #1
   163b8:	add	r1, r1, r5, lsr #1
   163bc:	adds	r5, r5, r1
   163c0:	bcc	163e0 <putchar_unlocked@plt+0x4ebc>
   163c4:	bl	16660 <putchar_unlocked@plt+0x513c>
   163c8:	cmp	r5, #0
   163cc:	bne	163e0 <putchar_unlocked@plt+0x4ebc>
   163d0:	mov	r1, #64	; 0x40
   163d4:	udiv	r5, r1, r2
   163d8:	cmp	r2, #64	; 0x40
   163dc:	addhi	r5, r5, #1
   163e0:	mov	r1, r5
   163e4:	bl	1629c <putchar_unlocked@plt+0x4d78>
   163e8:	str	r5, [r4]
   163ec:	pop	{r4, r5, fp, pc}
   163f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   163f4:	add	fp, sp, #24
   163f8:	mov	r8, r1
   163fc:	ldr	r6, [r1]
   16400:	add	r1, r6, r6, asr #1
   16404:	cmp	r1, r6
   16408:	mvnvs	r1, #-2147483648	; 0x80000000
   1640c:	cmp	r1, r3
   16410:	mov	r5, r1
   16414:	movgt	r5, r3
   16418:	cmn	r3, #1
   1641c:	movle	r5, r1
   16420:	ldr	r4, [fp, #8]
   16424:	cmn	r4, #1
   16428:	ble	16450 <putchar_unlocked@plt+0x4f2c>
   1642c:	cmp	r4, #0
   16430:	beq	164a4 <putchar_unlocked@plt+0x4f80>
   16434:	cmn	r5, #1
   16438:	ble	16478 <putchar_unlocked@plt+0x4f54>
   1643c:	mvn	r7, #-2147483648	; 0x80000000
   16440:	udiv	r1, r7, r4
   16444:	cmp	r1, r5
   16448:	bge	164a4 <putchar_unlocked@plt+0x4f80>
   1644c:	b	164b4 <putchar_unlocked@plt+0x4f90>
   16450:	cmn	r5, #1
   16454:	ble	16494 <putchar_unlocked@plt+0x4f70>
   16458:	cmn	r4, #1
   1645c:	beq	164a4 <putchar_unlocked@plt+0x4f80>
   16460:	mov	r1, #-2147483648	; 0x80000000
   16464:	sdiv	r1, r1, r4
   16468:	mvn	r7, #-2147483648	; 0x80000000
   1646c:	cmp	r1, r5
   16470:	bge	164a4 <putchar_unlocked@plt+0x4f80>
   16474:	b	164b4 <putchar_unlocked@plt+0x4f90>
   16478:	beq	164a4 <putchar_unlocked@plt+0x4f80>
   1647c:	mov	r1, #-2147483648	; 0x80000000
   16480:	sdiv	r1, r1, r5
   16484:	mvn	r7, #-2147483648	; 0x80000000
   16488:	cmp	r1, r4
   1648c:	bge	164a4 <putchar_unlocked@plt+0x4f80>
   16490:	b	164b4 <putchar_unlocked@plt+0x4f90>
   16494:	mvn	r7, #-2147483648	; 0x80000000
   16498:	sdiv	r1, r7, r4
   1649c:	cmp	r5, r1
   164a0:	blt	164b4 <putchar_unlocked@plt+0x4f90>
   164a4:	mul	r1, r5, r4
   164a8:	mov	r7, #64	; 0x40
   164ac:	cmp	r1, #63	; 0x3f
   164b0:	bgt	164bc <putchar_unlocked@plt+0x4f98>
   164b4:	sdiv	r5, r7, r4
   164b8:	mul	r1, r5, r4
   164bc:	cmp	r0, #0
   164c0:	moveq	r7, #0
   164c4:	streq	r7, [r8]
   164c8:	sub	r7, r5, r6
   164cc:	cmp	r7, r2
   164d0:	bge	1657c <putchar_unlocked@plt+0x5058>
   164d4:	add	r5, r6, r2
   164d8:	mov	r1, #0
   164dc:	cmp	r5, r3
   164e0:	mov	r2, #0
   164e4:	movwgt	r2, #1
   164e8:	cmn	r3, #1
   164ec:	movwgt	r1, #1
   164f0:	cmp	r5, r6
   164f4:	bvs	16564 <putchar_unlocked@plt+0x5040>
   164f8:	ands	r1, r1, r2
   164fc:	bne	16564 <putchar_unlocked@plt+0x5040>
   16500:	cmn	r4, #1
   16504:	ble	1652c <putchar_unlocked@plt+0x5008>
   16508:	cmp	r4, #0
   1650c:	beq	16578 <putchar_unlocked@plt+0x5054>
   16510:	cmn	r5, #1
   16514:	ble	16550 <putchar_unlocked@plt+0x502c>
   16518:	mvn	r1, #-2147483648	; 0x80000000
   1651c:	udiv	r1, r1, r4
   16520:	cmp	r1, r5
   16524:	bge	16578 <putchar_unlocked@plt+0x5054>
   16528:	b	16564 <putchar_unlocked@plt+0x5040>
   1652c:	cmn	r5, #1
   16530:	ble	16568 <putchar_unlocked@plt+0x5044>
   16534:	cmn	r4, #1
   16538:	beq	16578 <putchar_unlocked@plt+0x5054>
   1653c:	mov	r1, #-2147483648	; 0x80000000
   16540:	sdiv	r1, r1, r4
   16544:	cmp	r1, r5
   16548:	bge	16578 <putchar_unlocked@plt+0x5054>
   1654c:	b	16564 <putchar_unlocked@plt+0x5040>
   16550:	beq	16578 <putchar_unlocked@plt+0x5054>
   16554:	mov	r1, #-2147483648	; 0x80000000
   16558:	sdiv	r1, r1, r5
   1655c:	cmp	r1, r4
   16560:	bge	16578 <putchar_unlocked@plt+0x5054>
   16564:	bl	16660 <putchar_unlocked@plt+0x513c>
   16568:	mvn	r1, #-2147483648	; 0x80000000
   1656c:	sdiv	r1, r1, r4
   16570:	cmp	r5, r1
   16574:	blt	16564 <putchar_unlocked@plt+0x5040>
   16578:	mul	r1, r5, r4
   1657c:	bl	16318 <putchar_unlocked@plt+0x4df4>
   16580:	str	r5, [r8]
   16584:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16588:	mov	r1, #1
   1658c:	b	16590 <putchar_unlocked@plt+0x506c>
   16590:	push	{fp, lr}
   16594:	mov	fp, sp
   16598:	bl	166a4 <putchar_unlocked@plt+0x5180>
   1659c:	pop	{fp, lr}
   165a0:	b	162ec <putchar_unlocked@plt+0x4dc8>
   165a4:	mov	r1, #1
   165a8:	b	165ac <putchar_unlocked@plt+0x5088>
   165ac:	push	{fp, lr}
   165b0:	mov	fp, sp
   165b4:	bl	16b78 <putchar_unlocked@plt+0x5654>
   165b8:	pop	{fp, lr}
   165bc:	b	162ec <putchar_unlocked@plt+0x4dc8>
   165c0:	push	{r4, r5, fp, lr}
   165c4:	add	fp, sp, #8
   165c8:	mov	r4, r1
   165cc:	mov	r5, r0
   165d0:	mov	r0, r1
   165d4:	bl	162d8 <putchar_unlocked@plt+0x4db4>
   165d8:	mov	r1, r5
   165dc:	mov	r2, r4
   165e0:	pop	{r4, r5, fp, lr}
   165e4:	b	11260 <memcpy@plt>
   165e8:	push	{r4, r5, fp, lr}
   165ec:	add	fp, sp, #8
   165f0:	mov	r4, r1
   165f4:	mov	r5, r0
   165f8:	mov	r0, r1
   165fc:	bl	16300 <putchar_unlocked@plt+0x4ddc>
   16600:	mov	r1, r5
   16604:	mov	r2, r4
   16608:	pop	{r4, r5, fp, lr}
   1660c:	b	11260 <memcpy@plt>
   16610:	push	{r4, r5, fp, lr}
   16614:	add	fp, sp, #8
   16618:	mov	r4, r1
   1661c:	mov	r5, r0
   16620:	add	r0, r1, #1
   16624:	bl	16300 <putchar_unlocked@plt+0x4ddc>
   16628:	mov	r1, #0
   1662c:	strb	r1, [r0, r4]
   16630:	mov	r1, r5
   16634:	mov	r2, r4
   16638:	pop	{r4, r5, fp, lr}
   1663c:	b	11260 <memcpy@plt>
   16640:	push	{r4, sl, fp, lr}
   16644:	add	fp, sp, #8
   16648:	mov	r4, r0
   1664c:	bl	113d4 <strlen@plt>
   16650:	add	r1, r0, #1
   16654:	mov	r0, r4
   16658:	pop	{r4, sl, fp, lr}
   1665c:	b	165c0 <putchar_unlocked@plt+0x509c>
   16660:	push	{fp, lr}
   16664:	mov	fp, sp
   16668:	movw	r0, #33076	; 0x8134
   1666c:	movt	r0, #2
   16670:	ldr	r4, [r0]
   16674:	movw	r1, #30907	; 0x78bb
   16678:	movt	r1, #1
   1667c:	mov	r0, #0
   16680:	mov	r2, #5
   16684:	bl	11284 <dcgettext@plt>
   16688:	mov	r3, r0
   1668c:	movw	r2, #29769	; 0x7449
   16690:	movt	r2, #1
   16694:	mov	r0, r4
   16698:	mov	r1, #0
   1669c:	bl	11320 <error@plt>
   166a0:	bl	11500 <abort@plt>
   166a4:	clz	r2, r1
   166a8:	lsr	r2, r2, #5
   166ac:	clz	r3, r0
   166b0:	lsr	r3, r3, #5
   166b4:	orrs	r2, r3, r2
   166b8:	movwne	r1, #1
   166bc:	movwne	r0, #1
   166c0:	cmp	r1, #0
   166c4:	beq	166f4 <putchar_unlocked@plt+0x51d0>
   166c8:	mvn	r2, #-2147483648	; 0x80000000
   166cc:	udiv	r2, r2, r1
   166d0:	cmp	r2, r0
   166d4:	bcs	166f4 <putchar_unlocked@plt+0x51d0>
   166d8:	push	{fp, lr}
   166dc:	mov	fp, sp
   166e0:	bl	113ec <__errno_location@plt>
   166e4:	mov	r1, #12
   166e8:	str	r1, [r0]
   166ec:	mov	r0, #0
   166f0:	pop	{fp, pc}
   166f4:	b	111e8 <calloc@plt>
   166f8:	cmp	r0, #0
   166fc:	movweq	r0, #1
   16700:	cmn	r0, #1
   16704:	ble	1670c <putchar_unlocked@plt+0x51e8>
   16708:	b	11338 <malloc@plt>
   1670c:	push	{fp, lr}
   16710:	mov	fp, sp
   16714:	bl	113ec <__errno_location@plt>
   16718:	mov	r1, #12
   1671c:	str	r1, [r0]
   16720:	mov	r0, #0
   16724:	pop	{fp, pc}
   16728:	push	{fp, lr}
   1672c:	mov	fp, sp
   16730:	cmp	r0, #0
   16734:	beq	16750 <putchar_unlocked@plt+0x522c>
   16738:	cmp	r1, #0
   1673c:	beq	1675c <putchar_unlocked@plt+0x5238>
   16740:	cmn	r1, #1
   16744:	ble	16768 <putchar_unlocked@plt+0x5244>
   16748:	pop	{fp, lr}
   1674c:	b	1129c <realloc@plt>
   16750:	mov	r0, r1
   16754:	pop	{fp, lr}
   16758:	b	166f8 <putchar_unlocked@plt+0x51d4>
   1675c:	bl	16b24 <putchar_unlocked@plt+0x5600>
   16760:	mov	r0, #0
   16764:	pop	{fp, pc}
   16768:	bl	113ec <__errno_location@plt>
   1676c:	mov	r1, #12
   16770:	str	r1, [r0]
   16774:	mov	r0, #0
   16778:	pop	{fp, pc}
   1677c:	mov	r1, r0
   16780:	sub	r2, r0, #65	; 0x41
   16784:	mov	r0, #1
   16788:	cmp	r2, #26
   1678c:	subcs	r2, r1, #97	; 0x61
   16790:	cmpcs	r2, #26
   16794:	bcs	1679c <putchar_unlocked@plt+0x5278>
   16798:	bx	lr
   1679c:	sub	r1, r1, #48	; 0x30
   167a0:	cmp	r1, #10
   167a4:	movcs	r0, #0
   167a8:	bx	lr
   167ac:	mov	r1, r0
   167b0:	sub	r2, r0, #65	; 0x41
   167b4:	mov	r0, #1
   167b8:	cmp	r2, #26
   167bc:	subcs	r1, r1, #97	; 0x61
   167c0:	cmpcs	r1, #26
   167c4:	movcs	r0, #0
   167c8:	bx	lr
   167cc:	mov	r1, #0
   167d0:	cmp	r0, #128	; 0x80
   167d4:	movwcc	r1, #1
   167d8:	mov	r0, r1
   167dc:	bx	lr
   167e0:	sub	r1, r0, #9
   167e4:	clz	r1, r1
   167e8:	lsr	r1, r1, #5
   167ec:	sub	r0, r0, #32
   167f0:	clz	r0, r0
   167f4:	lsr	r0, r0, #5
   167f8:	orr	r0, r0, r1
   167fc:	bx	lr
   16800:	mov	r1, r0
   16804:	mov	r0, #1
   16808:	cmp	r1, #32
   1680c:	bxcc	lr
   16810:	cmp	r1, #127	; 0x7f
   16814:	movne	r0, #0
   16818:	bx	lr
   1681c:	sub	r1, r0, #48	; 0x30
   16820:	mov	r0, #0
   16824:	cmp	r1, #10
   16828:	movwcc	r0, #1
   1682c:	bx	lr
   16830:	sub	r1, r0, #33	; 0x21
   16834:	mov	r0, #0
   16838:	cmp	r1, #94	; 0x5e
   1683c:	movwcc	r0, #1
   16840:	bx	lr
   16844:	sub	r1, r0, #97	; 0x61
   16848:	mov	r0, #0
   1684c:	cmp	r1, #26
   16850:	movwcc	r0, #1
   16854:	bx	lr
   16858:	sub	r1, r0, #32
   1685c:	mov	r0, #0
   16860:	cmp	r1, #95	; 0x5f
   16864:	movwcc	r0, #1
   16868:	bx	lr
   1686c:	sub	r1, r0, #33	; 0x21
   16870:	cmp	r1, #93	; 0x5d
   16874:	bhi	16a00 <putchar_unlocked@plt+0x54dc>
   16878:	mov	r0, #1
   1687c:	add	r2, pc, #0
   16880:	ldr	pc, [r2, r1, lsl #2]
   16884:	strdeq	r6, [r1], -ip
   16888:	strdeq	r6, [r1], -ip
   1688c:	strdeq	r6, [r1], -ip
   16890:	strdeq	r6, [r1], -ip
   16894:	strdeq	r6, [r1], -ip
   16898:	strdeq	r6, [r1], -ip
   1689c:	strdeq	r6, [r1], -ip
   168a0:	strdeq	r6, [r1], -ip
   168a4:	strdeq	r6, [r1], -ip
   168a8:	strdeq	r6, [r1], -ip
   168ac:	strdeq	r6, [r1], -ip
   168b0:	strdeq	r6, [r1], -ip
   168b4:	strdeq	r6, [r1], -ip
   168b8:	strdeq	r6, [r1], -ip
   168bc:	strdeq	r6, [r1], -ip
   168c0:	andeq	r6, r1, r0, lsl #20
   168c4:	andeq	r6, r1, r0, lsl #20
   168c8:	andeq	r6, r1, r0, lsl #20
   168cc:	andeq	r6, r1, r0, lsl #20
   168d0:	andeq	r6, r1, r0, lsl #20
   168d4:	andeq	r6, r1, r0, lsl #20
   168d8:	andeq	r6, r1, r0, lsl #20
   168dc:	andeq	r6, r1, r0, lsl #20
   168e0:	andeq	r6, r1, r0, lsl #20
   168e4:	andeq	r6, r1, r0, lsl #20
   168e8:	strdeq	r6, [r1], -ip
   168ec:	strdeq	r6, [r1], -ip
   168f0:	strdeq	r6, [r1], -ip
   168f4:	strdeq	r6, [r1], -ip
   168f8:	strdeq	r6, [r1], -ip
   168fc:	strdeq	r6, [r1], -ip
   16900:	strdeq	r6, [r1], -ip
   16904:	andeq	r6, r1, r0, lsl #20
   16908:	andeq	r6, r1, r0, lsl #20
   1690c:	andeq	r6, r1, r0, lsl #20
   16910:	andeq	r6, r1, r0, lsl #20
   16914:	andeq	r6, r1, r0, lsl #20
   16918:	andeq	r6, r1, r0, lsl #20
   1691c:	andeq	r6, r1, r0, lsl #20
   16920:	andeq	r6, r1, r0, lsl #20
   16924:	andeq	r6, r1, r0, lsl #20
   16928:	andeq	r6, r1, r0, lsl #20
   1692c:	andeq	r6, r1, r0, lsl #20
   16930:	andeq	r6, r1, r0, lsl #20
   16934:	andeq	r6, r1, r0, lsl #20
   16938:	andeq	r6, r1, r0, lsl #20
   1693c:	andeq	r6, r1, r0, lsl #20
   16940:	andeq	r6, r1, r0, lsl #20
   16944:	andeq	r6, r1, r0, lsl #20
   16948:	andeq	r6, r1, r0, lsl #20
   1694c:	andeq	r6, r1, r0, lsl #20
   16950:	andeq	r6, r1, r0, lsl #20
   16954:	andeq	r6, r1, r0, lsl #20
   16958:	andeq	r6, r1, r0, lsl #20
   1695c:	andeq	r6, r1, r0, lsl #20
   16960:	andeq	r6, r1, r0, lsl #20
   16964:	andeq	r6, r1, r0, lsl #20
   16968:	andeq	r6, r1, r0, lsl #20
   1696c:	strdeq	r6, [r1], -ip
   16970:	strdeq	r6, [r1], -ip
   16974:	strdeq	r6, [r1], -ip
   16978:	strdeq	r6, [r1], -ip
   1697c:	strdeq	r6, [r1], -ip
   16980:	strdeq	r6, [r1], -ip
   16984:	andeq	r6, r1, r0, lsl #20
   16988:	andeq	r6, r1, r0, lsl #20
   1698c:	andeq	r6, r1, r0, lsl #20
   16990:	andeq	r6, r1, r0, lsl #20
   16994:	andeq	r6, r1, r0, lsl #20
   16998:	andeq	r6, r1, r0, lsl #20
   1699c:	andeq	r6, r1, r0, lsl #20
   169a0:	andeq	r6, r1, r0, lsl #20
   169a4:	andeq	r6, r1, r0, lsl #20
   169a8:	andeq	r6, r1, r0, lsl #20
   169ac:	andeq	r6, r1, r0, lsl #20
   169b0:	andeq	r6, r1, r0, lsl #20
   169b4:	andeq	r6, r1, r0, lsl #20
   169b8:	andeq	r6, r1, r0, lsl #20
   169bc:	andeq	r6, r1, r0, lsl #20
   169c0:	andeq	r6, r1, r0, lsl #20
   169c4:	andeq	r6, r1, r0, lsl #20
   169c8:	andeq	r6, r1, r0, lsl #20
   169cc:	andeq	r6, r1, r0, lsl #20
   169d0:	andeq	r6, r1, r0, lsl #20
   169d4:	andeq	r6, r1, r0, lsl #20
   169d8:	andeq	r6, r1, r0, lsl #20
   169dc:	andeq	r6, r1, r0, lsl #20
   169e0:	andeq	r6, r1, r0, lsl #20
   169e4:	andeq	r6, r1, r0, lsl #20
   169e8:	andeq	r6, r1, r0, lsl #20
   169ec:	strdeq	r6, [r1], -ip
   169f0:	strdeq	r6, [r1], -ip
   169f4:	strdeq	r6, [r1], -ip
   169f8:	strdeq	r6, [r1], -ip
   169fc:	bx	lr
   16a00:	mov	r0, #0
   16a04:	bx	lr
   16a08:	sub	r0, r0, #9
   16a0c:	cmp	r0, #23
   16a10:	movhi	r0, #0
   16a14:	bxhi	lr
   16a18:	bic	r0, r0, #-16777216	; 0xff000000
   16a1c:	movw	r1, #31
   16a20:	movt	r1, #128	; 0x80
   16a24:	mov	r2, #1
   16a28:	and	r0, r2, r1, lsr r0
   16a2c:	bx	lr
   16a30:	sub	r1, r0, #65	; 0x41
   16a34:	mov	r0, #0
   16a38:	cmp	r1, #26
   16a3c:	movwcc	r0, #1
   16a40:	bx	lr
   16a44:	mov	r1, r0
   16a48:	sub	r2, r0, #48	; 0x30
   16a4c:	mov	r0, #1
   16a50:	cmp	r2, #22
   16a54:	bhi	16a6c <putchar_unlocked@plt+0x5548>
   16a58:	mov	ip, #1
   16a5c:	movw	r3, #1023	; 0x3ff
   16a60:	movt	r3, #126	; 0x7e
   16a64:	tst	r3, ip, lsl r2
   16a68:	bxne	lr
   16a6c:	sub	r1, r1, #97	; 0x61
   16a70:	cmp	r1, #6
   16a74:	movcs	r0, #0
   16a78:	bxcs	lr
   16a7c:	bx	lr
   16a80:	sub	r1, r0, #65	; 0x41
   16a84:	cmp	r1, #26
   16a88:	addcc	r0, r0, #32
   16a8c:	bx	lr
   16a90:	sub	r1, r0, #97	; 0x61
   16a94:	cmp	r1, #26
   16a98:	subcc	r0, r0, #32
   16a9c:	bx	lr
   16aa0:	push	{r4, r5, r6, sl, fp, lr}
   16aa4:	add	fp, sp, #16
   16aa8:	mov	r4, r0
   16aac:	bl	112fc <__fpending@plt>
   16ab0:	mov	r5, r0
   16ab4:	mov	r0, r4
   16ab8:	bl	11308 <ferror_unlocked@plt>
   16abc:	mov	r6, r0
   16ac0:	mov	r0, r4
   16ac4:	bl	1200c <putchar_unlocked@plt+0xae8>
   16ac8:	cmp	r6, #0
   16acc:	beq	16af0 <putchar_unlocked@plt+0x55cc>
   16ad0:	mvn	r4, #0
   16ad4:	cmp	r0, #0
   16ad8:	bne	16b1c <putchar_unlocked@plt+0x55f8>
   16adc:	bl	113ec <__errno_location@plt>
   16ae0:	mov	r1, #0
   16ae4:	str	r1, [r0]
   16ae8:	mov	r0, r4
   16aec:	pop	{r4, r5, r6, sl, fp, pc}
   16af0:	cmp	r0, #0
   16af4:	mov	r4, r0
   16af8:	mvnne	r4, #0
   16afc:	cmp	r5, #0
   16b00:	bne	16b1c <putchar_unlocked@plt+0x55f8>
   16b04:	cmp	r0, #0
   16b08:	beq	16b1c <putchar_unlocked@plt+0x55f8>
   16b0c:	bl	113ec <__errno_location@plt>
   16b10:	ldr	r0, [r0]
   16b14:	subs	r4, r0, #9
   16b18:	mvnne	r4, #0
   16b1c:	mov	r0, r4
   16b20:	pop	{r4, r5, r6, sl, fp, pc}
   16b24:	push	{r4, r5, r6, sl, fp, lr}
   16b28:	add	fp, sp, #16
   16b2c:	mov	r4, r0
   16b30:	bl	113ec <__errno_location@plt>
   16b34:	mov	r5, r0
   16b38:	ldr	r6, [r0]
   16b3c:	mov	r0, r4
   16b40:	bl	11248 <free@plt>
   16b44:	str	r6, [r5]
   16b48:	pop	{r4, r5, r6, sl, fp, pc}
   16b4c:	push	{fp, lr}
   16b50:	mov	fp, sp
   16b54:	bl	113ec <__errno_location@plt>
   16b58:	mov	r1, #12
   16b5c:	str	r1, [r0]
   16b60:	mov	r0, #0
   16b64:	pop	{fp, pc}
   16b68:	b	166f8 <putchar_unlocked@plt+0x51d4>
   16b6c:	cmp	r1, #0
   16b70:	orreq	r1, r1, #1
   16b74:	b	16728 <putchar_unlocked@plt+0x5204>
   16b78:	b	166a4 <putchar_unlocked@plt+0x5180>
   16b7c:	clz	r3, r2
   16b80:	lsr	ip, r3, #5
   16b84:	clz	r3, r1
   16b88:	lsr	r3, r3, #5
   16b8c:	orrs	r3, r3, ip
   16b90:	movwne	r1, #1
   16b94:	movwne	r2, #1
   16b98:	b	16c38 <putchar_unlocked@plt+0x5714>
   16b9c:	push	{fp, lr}
   16ba0:	mov	fp, sp
   16ba4:	mov	r0, #14
   16ba8:	bl	11494 <nl_langinfo@plt>
   16bac:	movw	r1, #28944	; 0x7110
   16bb0:	movt	r1, #1
   16bb4:	cmp	r0, #0
   16bb8:	movne	r1, r0
   16bbc:	ldrb	r2, [r1]
   16bc0:	movw	r0, #30924	; 0x78cc
   16bc4:	movt	r0, #1
   16bc8:	cmp	r2, #0
   16bcc:	movne	r0, r1
   16bd0:	pop	{fp, pc}
   16bd4:	push	{r4, r5, r6, r7, fp, lr}
   16bd8:	add	fp, sp, #16
   16bdc:	sub	sp, sp, #8
   16be0:	mov	r7, r2
   16be4:	mov	r4, r1
   16be8:	add	r5, sp, #4
   16bec:	cmp	r0, #0
   16bf0:	movne	r5, r0
   16bf4:	mov	r0, r5
   16bf8:	bl	11314 <mbrtowc@plt>
   16bfc:	mov	r6, r0
   16c00:	cmp	r7, #0
   16c04:	beq	16c2c <putchar_unlocked@plt+0x5708>
   16c08:	cmn	r6, #2
   16c0c:	bcc	16c2c <putchar_unlocked@plt+0x5708>
   16c10:	mov	r0, #0
   16c14:	bl	16c74 <putchar_unlocked@plt+0x5750>
   16c18:	cmp	r0, #0
   16c1c:	bne	16c2c <putchar_unlocked@plt+0x5708>
   16c20:	ldrb	r0, [r4]
   16c24:	str	r0, [r5]
   16c28:	mov	r6, #1
   16c2c:	mov	r0, r6
   16c30:	sub	sp, fp, #16
   16c34:	pop	{r4, r5, r6, r7, fp, pc}
   16c38:	cmp	r2, #0
   16c3c:	beq	16c6c <putchar_unlocked@plt+0x5748>
   16c40:	mvn	r3, #0
   16c44:	udiv	r3, r3, r2
   16c48:	cmp	r3, r1
   16c4c:	bcs	16c6c <putchar_unlocked@plt+0x5748>
   16c50:	push	{fp, lr}
   16c54:	mov	fp, sp
   16c58:	bl	113ec <__errno_location@plt>
   16c5c:	mov	r1, #12
   16c60:	str	r1, [r0]
   16c64:	mov	r0, #0
   16c68:	pop	{fp, pc}
   16c6c:	mul	r1, r2, r1
   16c70:	b	16728 <putchar_unlocked@plt+0x5204>
   16c74:	push	{r4, sl, fp, lr}
   16c78:	add	fp, sp, #8
   16c7c:	sub	sp, sp, #264	; 0x108
   16c80:	add	r1, sp, #7
   16c84:	movw	r2, #257	; 0x101
   16c88:	bl	16ce0 <putchar_unlocked@plt+0x57bc>
   16c8c:	mov	r4, #0
   16c90:	cmp	r0, #0
   16c94:	bne	16cd4 <putchar_unlocked@plt+0x57b0>
   16c98:	add	r0, sp, #7
   16c9c:	movw	r1, #29751	; 0x7437
   16ca0:	movt	r1, #1
   16ca4:	mov	r2, #2
   16ca8:	bl	113c8 <bcmp@plt>
   16cac:	cmp	r0, #0
   16cb0:	beq	16cd4 <putchar_unlocked@plt+0x57b0>
   16cb4:	add	r0, sp, #7
   16cb8:	movw	r1, #30930	; 0x78d2
   16cbc:	movt	r1, #1
   16cc0:	mov	r2, #6
   16cc4:	bl	113c8 <bcmp@plt>
   16cc8:	mov	r4, r0
   16ccc:	cmp	r0, #0
   16cd0:	movwne	r4, #1
   16cd4:	mov	r0, r4
   16cd8:	sub	sp, fp, #8
   16cdc:	pop	{r4, sl, fp, pc}
   16ce0:	b	16ce4 <putchar_unlocked@plt+0x57c0>
   16ce4:	push	{r4, r5, r6, r7, fp, lr}
   16ce8:	add	fp, sp, #16
   16cec:	mov	r6, r2
   16cf0:	mov	r4, r1
   16cf4:	bl	16d7c <putchar_unlocked@plt+0x5858>
   16cf8:	cmp	r0, #0
   16cfc:	beq	16d2c <putchar_unlocked@plt+0x5808>
   16d00:	mov	r7, r0
   16d04:	bl	113d4 <strlen@plt>
   16d08:	cmp	r0, r6
   16d0c:	bcs	16d48 <putchar_unlocked@plt+0x5824>
   16d10:	add	r2, r0, #1
   16d14:	mov	r0, r4
   16d18:	mov	r1, r7
   16d1c:	bl	11260 <memcpy@plt>
   16d20:	mov	r5, #0
   16d24:	mov	r0, r5
   16d28:	pop	{r4, r5, r6, r7, fp, pc}
   16d2c:	mov	r5, #22
   16d30:	cmp	r6, #0
   16d34:	beq	16d70 <putchar_unlocked@plt+0x584c>
   16d38:	mov	r0, #0
   16d3c:	strb	r0, [r4]
   16d40:	mov	r0, r5
   16d44:	pop	{r4, r5, r6, r7, fp, pc}
   16d48:	mov	r5, #34	; 0x22
   16d4c:	cmp	r6, #0
   16d50:	beq	16d70 <putchar_unlocked@plt+0x584c>
   16d54:	sub	r6, r6, #1
   16d58:	mov	r0, r4
   16d5c:	mov	r1, r7
   16d60:	mov	r2, r6
   16d64:	bl	11260 <memcpy@plt>
   16d68:	mov	r0, #0
   16d6c:	strb	r0, [r4, r6]
   16d70:	mov	r0, r5
   16d74:	pop	{r4, r5, r6, r7, fp, pc}
   16d78:	b	16d7c <putchar_unlocked@plt+0x5858>
   16d7c:	mov	r1, #0
   16d80:	b	1147c <setlocale@plt>
   16d84:	cmp	r3, #0
   16d88:	cmpeq	r2, #0
   16d8c:	bne	16da4 <putchar_unlocked@plt+0x5880>
   16d90:	cmp	r1, #0
   16d94:	cmpeq	r0, #0
   16d98:	mvnne	r1, #0
   16d9c:	mvnne	r0, #0
   16da0:	b	16dc0 <putchar_unlocked@plt+0x589c>
   16da4:	sub	sp, sp, #8
   16da8:	push	{sp, lr}
   16dac:	bl	16dd0 <putchar_unlocked@plt+0x58ac>
   16db0:	ldr	lr, [sp, #4]
   16db4:	add	sp, sp, #8
   16db8:	pop	{r2, r3}
   16dbc:	bx	lr
   16dc0:	push	{r1, lr}
   16dc4:	mov	r0, #8
   16dc8:	bl	11200 <raise@plt>
   16dcc:	pop	{r1, pc}
   16dd0:	cmp	r1, r3
   16dd4:	cmpeq	r0, r2
   16dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ddc:	mov	r4, r0
   16de0:	movcc	r0, #0
   16de4:	mov	r5, r1
   16de8:	ldr	lr, [sp, #36]	; 0x24
   16dec:	movcc	r1, r0
   16df0:	bcc	16eec <putchar_unlocked@plt+0x59c8>
   16df4:	cmp	r3, #0
   16df8:	clzeq	ip, r2
   16dfc:	clzne	ip, r3
   16e00:	addeq	ip, ip, #32
   16e04:	cmp	r5, #0
   16e08:	clzeq	r1, r4
   16e0c:	addeq	r1, r1, #32
   16e10:	clzne	r1, r5
   16e14:	sub	ip, ip, r1
   16e18:	sub	sl, ip, #32
   16e1c:	lsl	r9, r3, ip
   16e20:	rsb	fp, ip, #32
   16e24:	orr	r9, r9, r2, lsl sl
   16e28:	orr	r9, r9, r2, lsr fp
   16e2c:	lsl	r8, r2, ip
   16e30:	cmp	r5, r9
   16e34:	cmpeq	r4, r8
   16e38:	movcc	r0, #0
   16e3c:	movcc	r1, r0
   16e40:	bcc	16e5c <putchar_unlocked@plt+0x5938>
   16e44:	mov	r0, #1
   16e48:	subs	r4, r4, r8
   16e4c:	lsl	r1, r0, sl
   16e50:	orr	r1, r1, r0, lsr fp
   16e54:	lsl	r0, r0, ip
   16e58:	sbc	r5, r5, r9
   16e5c:	cmp	ip, #0
   16e60:	beq	16eec <putchar_unlocked@plt+0x59c8>
   16e64:	lsr	r6, r8, #1
   16e68:	orr	r6, r6, r9, lsl #31
   16e6c:	lsr	r7, r9, #1
   16e70:	mov	r2, ip
   16e74:	b	16e98 <putchar_unlocked@plt+0x5974>
   16e78:	subs	r3, r4, r6
   16e7c:	sbc	r8, r5, r7
   16e80:	adds	r3, r3, r3
   16e84:	adc	r8, r8, r8
   16e88:	adds	r4, r3, #1
   16e8c:	adc	r5, r8, #0
   16e90:	subs	r2, r2, #1
   16e94:	beq	16eb4 <putchar_unlocked@plt+0x5990>
   16e98:	cmp	r5, r7
   16e9c:	cmpeq	r4, r6
   16ea0:	bcs	16e78 <putchar_unlocked@plt+0x5954>
   16ea4:	adds	r4, r4, r4
   16ea8:	adc	r5, r5, r5
   16eac:	subs	r2, r2, #1
   16eb0:	bne	16e98 <putchar_unlocked@plt+0x5974>
   16eb4:	lsr	r3, r4, ip
   16eb8:	orr	r3, r3, r5, lsl fp
   16ebc:	lsr	r2, r5, ip
   16ec0:	orr	r3, r3, r5, lsr sl
   16ec4:	adds	r0, r0, r4
   16ec8:	mov	r4, r3
   16ecc:	lsl	r3, r2, ip
   16ed0:	orr	r3, r3, r4, lsl sl
   16ed4:	lsl	ip, r4, ip
   16ed8:	orr	r3, r3, r4, lsr fp
   16edc:	adc	r1, r1, r5
   16ee0:	subs	r0, r0, ip
   16ee4:	mov	r5, r2
   16ee8:	sbc	r1, r1, r3
   16eec:	cmp	lr, #0
   16ef0:	strdne	r4, [lr]
   16ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ef8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16efc:	mov	r7, r0
   16f00:	ldr	r6, [pc, #72]	; 16f50 <putchar_unlocked@plt+0x5a2c>
   16f04:	ldr	r5, [pc, #72]	; 16f54 <putchar_unlocked@plt+0x5a30>
   16f08:	add	r6, pc, r6
   16f0c:	add	r5, pc, r5
   16f10:	sub	r6, r6, r5
   16f14:	mov	r8, r1
   16f18:	mov	r9, r2
   16f1c:	bl	111c8 <calloc@plt-0x20>
   16f20:	asrs	r6, r6, #2
   16f24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f28:	mov	r4, #0
   16f2c:	add	r4, r4, #1
   16f30:	ldr	r3, [r5], #4
   16f34:	mov	r2, r9
   16f38:	mov	r1, r8
   16f3c:	mov	r0, r7
   16f40:	blx	r3
   16f44:	cmp	r6, r4
   16f48:	bne	16f2c <putchar_unlocked@plt+0x5a08>
   16f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f50:	strdeq	r0, [r1], -ip
   16f54:	strdeq	r0, [r1], -r4
   16f58:	bx	lr
   16f5c:	ldr	r3, [pc, #12]	; 16f70 <putchar_unlocked@plt+0x5a4c>
   16f60:	mov	r1, #0
   16f64:	add	r3, pc, r3
   16f68:	ldr	r2, [r3]
   16f6c:	b	113f8 <__cxa_atexit@plt>
   16f70:	andeq	r1, r1, r0, asr #3

Disassembly of section .fini:

00016f74 <.fini>:
   16f74:	push	{r3, lr}
   16f78:	pop	{r3, pc}
