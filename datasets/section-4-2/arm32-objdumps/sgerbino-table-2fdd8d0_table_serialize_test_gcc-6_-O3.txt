
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011b4c <.init>:
   11b4c:	push	{r3, lr}
   11b50:	bl	123e0 <_start@@Base+0x3c>
   11b54:	pop	{r3, pc}

Disassembly of section .plt:

00011b58 <raise@plt-0x14>:
   11b58:	push	{lr}		; (str lr, [sp, #-4]!)
   11b5c:	ldr	lr, [pc, #4]	; 11b68 <raise@plt-0x4>
   11b60:	add	lr, pc, lr
   11b64:	ldr	pc, [lr, #8]!
   11b68:	muleq	r1, r8, r4

00011b6c <raise@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #86016	; 0x15000
   11b74:	ldr	pc, [ip, #1176]!	; 0x498

00011b78 <strcmp@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #86016	; 0x15000
   11b80:	ldr	pc, [ip, #1168]!	; 0x490

00011b84 <printf@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #86016	; 0x15000
   11b8c:	ldr	pc, [ip, #1160]!	; 0x488

00011b90 <free@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #86016	; 0x15000
   11b98:	ldr	pc, [ip, #1152]!	; 0x480

00011b9c <time@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #86016	; 0x15000
   11ba4:	ldr	pc, [ip, #1144]!	; 0x478

00011ba8 <realloc@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #86016	; 0x15000
   11bb0:	ldr	pc, [ip, #1136]!	; 0x470

00011bb4 <strcpy@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #86016	; 0x15000
   11bbc:	ldr	pc, [ip, #1128]!	; 0x468

00011bc0 <malloc@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #86016	; 0x15000
   11bc8:	ldr	pc, [ip, #1120]!	; 0x460

00011bcc <__libc_start_main@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #86016	; 0x15000
   11bd4:	ldr	pc, [ip, #1112]!	; 0x458

00011bd8 <__gmon_start__@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #86016	; 0x15000
   11be0:	ldr	pc, [ip, #1104]!	; 0x450

00011be4 <strlen@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #86016	; 0x15000
   11bec:	ldr	pc, [ip, #1096]!	; 0x448

00011bf0 <srand@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #86016	; 0x15000
   11bf8:	ldr	pc, [ip, #1088]!	; 0x440

00011bfc <snprintf@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #86016	; 0x15000
   11c04:	ldr	pc, [ip, #1080]!	; 0x438

00011c08 <__isoc99_sscanf@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #86016	; 0x15000
   11c10:	ldr	pc, [ip, #1072]!	; 0x430

00011c14 <strncpy@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #86016	; 0x15000
   11c1c:	ldr	pc, [ip, #1064]!	; 0x428

00011c20 <rand@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #86016	; 0x15000
   11c28:	ldr	pc, [ip, #1056]!	; 0x420

00011c2c <abort@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #86016	; 0x15000
   11c34:	ldr	pc, [ip, #1048]!	; 0x418

Disassembly of section .text:

00011c38 <main@@Base>:
   11c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c3c:	vpush	{d8}
   11c40:	ldr	r7, [pc, #1852]	; 12384 <main@@Base+0x74c>
   11c44:	mov	r4, #0
   11c48:	mov	r6, #255	; 0xff
   11c4c:	sub	sp, sp, #99328	; 0x18400
   11c50:	sub	sp, sp, #748	; 0x2ec
   11c54:	add	r0, sp, #12
   11c58:	bl	11b9c <time@plt>
   11c5c:	add	r3, sp, #16
   11c60:	str	r3, [sp, #4]
   11c64:	bl	11bf0 <srand@plt>
   11c68:	bl	11c20 <rand@plt>
   11c6c:	mov	r5, r0
   11c70:	ldr	r0, [sp, #4]
   11c74:	bl	12520 <table_init@@Base>
   11c78:	mov	r2, #0
   11c7c:	ldr	r1, [pc, #1796]	; 12388 <main@@Base+0x750>
   11c80:	ldr	r0, [sp, #4]
   11c84:	bl	12f44 <table_add_column@@Base>
   11c88:	mov	r2, #21
   11c8c:	ldr	r1, [pc, #1784]	; 1238c <main@@Base+0x754>
   11c90:	mov	r9, r0
   11c94:	ldr	r0, [sp, #4]
   11c98:	bl	12f44 <table_add_column@@Base>
   11c9c:	ldr	r1, [pc, #1772]	; 12390 <main@@Base+0x758>
   11ca0:	asr	r2, r5, #31
   11ca4:	mov	r3, #100	; 0x64
   11ca8:	mov	r8, r0
   11cac:	smull	r0, r1, r1, r5
   11cb0:	rsb	r2, r2, r1, asr #5
   11cb4:	mul	r3, r3, r2
   11cb8:	sub	r5, r5, r3
   11cbc:	add	r5, r5, #100	; 0x64
   11cc0:	mov	r3, r4
   11cc4:	mov	r2, r7
   11cc8:	mov	r1, r6
   11ccc:	add	r0, sp, #72	; 0x48
   11cd0:	bl	11bfc <snprintf@plt>
   11cd4:	ldr	r0, [sp, #4]
   11cd8:	bl	13ad0 <table_add_row@@Base>
   11cdc:	mov	r3, r4
   11ce0:	mov	r1, r4
   11ce4:	mov	r2, r9
   11ce8:	ldr	r0, [sp, #4]
   11cec:	bl	14064 <table_set_int@@Base>
   11cf0:	mov	r1, r4
   11cf4:	add	r3, sp, #72	; 0x48
   11cf8:	mov	r2, r8
   11cfc:	ldr	r0, [sp, #4]
   11d00:	add	r4, r4, #1
   11d04:	bl	149fc <table_set_string@@Base>
   11d08:	cmp	r5, r4
   11d0c:	bne	11cc0 <main@@Base+0x88>
   11d10:	ldr	r2, [pc, #1660]	; 12394 <main@@Base+0x75c>
   11d14:	add	r1, sp, #72	; 0x48
   11d18:	ldr	r0, [sp, #4]
   11d1c:	bl	14bd0 <table_serialize@@Base>
   11d20:	ldr	r1, [pc, #1644]	; 12394 <main@@Base+0x75c>
   11d24:	add	r0, sp, #72	; 0x48
   11d28:	bl	14e7c <table_deserialize@@Base>
   11d2c:	mov	r6, r0
   11d30:	ldr	r0, [sp, #4]
   11d34:	bl	13ac8 <table_get_row_length@@Base>
   11d38:	mov	r7, r0
   11d3c:	mov	r0, r6
   11d40:	bl	13ac8 <table_get_row_length@@Base>
   11d44:	cmp	r7, r0
   11d48:	beq	11da0 <main@@Base+0x168>
   11d4c:	mov	r2, r0
   11d50:	mov	r1, r7
   11d54:	ldr	r0, [pc, #1596]	; 12398 <main@@Base+0x760>
   11d58:	bl	11b84 <printf@plt>
   11d5c:	ldr	r0, [sp, #4]
   11d60:	bl	12ec0 <table_get_column_length@@Base>
   11d64:	mov	r5, r0
   11d68:	mov	r0, r6
   11d6c:	bl	12ec0 <table_get_column_length@@Base>
   11d70:	cmp	r5, r0
   11d74:	mvneq	sl, #0
   11d78:	bne	11dbc <main@@Base+0x184>
   11d7c:	ldr	r0, [sp, #4]
   11d80:	bl	12568 <table_destroy@@Base>
   11d84:	mov	r0, r6
   11d88:	bl	12630 <table_delete@@Base>
   11d8c:	mov	r0, sl
   11d90:	add	sp, sp, #99328	; 0x18400
   11d94:	add	sp, sp, #748	; 0x2ec
   11d98:	vpop	{d8}
   11d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11da0:	ldr	r0, [sp, #4]
   11da4:	bl	12ec0 <table_get_column_length@@Base>
   11da8:	mov	r5, r0
   11dac:	mov	r0, r6
   11db0:	bl	12ec0 <table_get_column_length@@Base>
   11db4:	cmp	r0, r5
   11db8:	beq	11dd4 <main@@Base+0x19c>
   11dbc:	mov	r2, r0
   11dc0:	mov	r1, r5
   11dc4:	ldr	r0, [pc, #1488]	; 1239c <main@@Base+0x764>
   11dc8:	bl	11b84 <printf@plt>
   11dcc:	mvn	sl, #0
   11dd0:	b	11d7c <main@@Base+0x144>
   11dd4:	mov	sl, #0
   11dd8:	cmp	r7, #0
   11ddc:	movgt	r4, sl
   11de0:	ble	11d7c <main@@Base+0x144>
   11de4:	cmp	r5, #0
   11de8:	movgt	fp, #0
   11dec:	ble	11ea8 <main@@Base+0x270>
   11df0:	mov	r1, fp
   11df4:	ldr	r0, [sp, #4]
   11df8:	bl	12f30 <table_get_column_data_type@@Base>
   11dfc:	cmp	r0, #23
   11e00:	ldrls	pc, [pc, r0, lsl #2]
   11e04:	b	11e9c <main@@Base+0x264>
   11e08:	strdeq	r2, [r1], -r4
   11e0c:	andeq	r2, r1, r4, asr #5
   11e10:	andeq	r2, r1, r4, asr r3
   11e14:	andeq	r2, r1, r4, lsr #6
   11e18:	muleq	r1, r4, r2
   11e1c:	andeq	r2, r1, r4, ror #4
   11e20:	andeq	r2, r1, r4, lsr r2
   11e24:	andeq	r2, r1, r4, lsl #4
   11e28:	andeq	r2, r1, r8, asr #3
   11e2c:	andeq	r2, r1, ip, lsl #3
   11e30:	andeq	r2, r1, ip, asr r1
   11e34:	andeq	r2, r1, ip, lsr #2
   11e38:	strdeq	r2, [r1], -ip
   11e3c:	andeq	r2, r1, ip, asr #1
   11e40:	muleq	r1, r0, r0
   11e44:	andeq	r2, r1, r4, asr r0
   11e48:	andeq	r2, r1, ip, lsl r0
   11e4c:	andeq	r1, r1, r4, ror #31
   11e50:	andeq	r1, r1, ip, lsr #31
   11e54:	andeq	r1, r1, ip, ror pc
   11e58:	andeq	r1, r1, ip, asr #30
   11e5c:	andeq	r1, r1, r0, lsl pc
   11e60:			; <UNDEFINED> instruction: 0x00011eb8
   11e64:	andeq	r1, r1, r8, ror #28
   11e68:	mov	r2, fp
   11e6c:	mov	r1, r4
   11e70:	ldr	r0, [sp, #4]
   11e74:	bl	13a44 <table_get_ptr@@Base>
   11e78:	mov	r2, fp
   11e7c:	mov	r1, r4
   11e80:	mov	r8, r0
   11e84:	mov	r0, r6
   11e88:	bl	13a44 <table_get_ptr@@Base>
   11e8c:	subs	r0, r8, r0
   11e90:	movne	r0, #1
   11e94:	cmp	r0, #0
   11e98:	bne	11eec <main@@Base+0x2b4>
   11e9c:	add	fp, fp, #1
   11ea0:	cmp	fp, r5
   11ea4:	bne	11df0 <main@@Base+0x1b8>
   11ea8:	add	r4, r4, #1
   11eac:	cmp	r7, r4
   11eb0:	bne	11de4 <main@@Base+0x1ac>
   11eb4:	b	11d7c <main@@Base+0x144>
   11eb8:	mov	r2, fp
   11ebc:	mov	r1, r4
   11ec0:	ldr	r0, [sp, #4]
   11ec4:	bl	1387c <table_get_bool@@Base>
   11ec8:	mov	r2, fp
   11ecc:	mov	r1, r4
   11ed0:	mov	r8, r0
   11ed4:	mov	r0, r6
   11ed8:	bl	1387c <table_get_bool@@Base>
   11edc:	eor	r0, r0, r8
   11ee0:	uxtb	r0, r0
   11ee4:	cmp	r0, #0
   11ee8:	beq	11e9c <main@@Base+0x264>
   11eec:	mov	r1, r4
   11ef0:	mov	r2, fp
   11ef4:	ldr	r0, [pc, #1188]	; 123a0 <main@@Base+0x768>
   11ef8:	add	r4, r4, #1
   11efc:	bl	11b84 <printf@plt>
   11f00:	cmp	r7, r4
   11f04:	mvn	sl, #0
   11f08:	bne	11de4 <main@@Base+0x1ac>
   11f0c:	b	11d7c <main@@Base+0x144>
   11f10:	mov	r2, fp
   11f14:	mov	r1, r4
   11f18:	ldr	r0, [sp, #4]
   11f1c:	bl	13a34 <table_get_string@@Base>
   11f20:	mov	r2, fp
   11f24:	mov	r1, r4
   11f28:	mov	r8, r0
   11f2c:	mov	r0, r6
   11f30:	bl	13a34 <table_get_string@@Base>
   11f34:	mov	r1, r0
   11f38:	mov	r0, r8
   11f3c:	bl	11b78 <strcmp@plt>
   11f40:	adds	r0, r0, #0
   11f44:	movne	r0, #1
   11f48:	b	11e94 <main@@Base+0x25c>
   11f4c:	mov	r2, fp
   11f50:	mov	r1, r4
   11f54:	ldr	r0, [sp, #4]
   11f58:	bl	13a20 <table_get_uchar@@Base>
   11f5c:	mov	r2, fp
   11f60:	mov	r1, r4
   11f64:	mov	r8, r0
   11f68:	mov	r0, r6
   11f6c:	bl	13a20 <table_get_uchar@@Base>
   11f70:	subs	r0, r8, r0
   11f74:	movne	r0, #1
   11f78:	b	11e94 <main@@Base+0x25c>
   11f7c:	mov	r2, fp
   11f80:	mov	r1, r4
   11f84:	ldr	r0, [sp, #4]
   11f88:	bl	13a0c <table_get_char@@Base>
   11f8c:	mov	r2, fp
   11f90:	mov	r1, r4
   11f94:	mov	r8, r0
   11f98:	mov	r0, r6
   11f9c:	bl	13a0c <table_get_char@@Base>
   11fa0:	subs	r0, r8, r0
   11fa4:	movne	r0, #1
   11fa8:	b	11e94 <main@@Base+0x25c>
   11fac:	mov	r2, fp
   11fb0:	mov	r1, r4
   11fb4:	ldr	r0, [sp, #4]
   11fb8:	bl	139f8 <table_get_ldouble@@Base>
   11fbc:	mov	r0, r6
   11fc0:	mov	r2, fp
   11fc4:	mov	r1, r4
   11fc8:	vmov.f64	d8, d0
   11fcc:	bl	139f8 <table_get_ldouble@@Base>
   11fd0:	vcmp.f64	d8, d0
   11fd4:	vmrs	APSR_nzcv, fpscr
   11fd8:	movne	r0, #1
   11fdc:	moveq	r0, #0
   11fe0:	b	11e94 <main@@Base+0x25c>
   11fe4:	mov	r2, fp
   11fe8:	mov	r1, r4
   11fec:	ldr	r0, [sp, #4]
   11ff0:	bl	139e4 <table_get_double@@Base>
   11ff4:	mov	r0, r6
   11ff8:	mov	r2, fp
   11ffc:	mov	r1, r4
   12000:	vmov.f64	d8, d0
   12004:	bl	139e4 <table_get_double@@Base>
   12008:	vcmp.f64	d8, d0
   1200c:	vmrs	APSR_nzcv, fpscr
   12010:	movne	r0, #1
   12014:	moveq	r0, #0
   12018:	b	11e94 <main@@Base+0x25c>
   1201c:	mov	r2, fp
   12020:	mov	r1, r4
   12024:	ldr	r0, [sp, #4]
   12028:	bl	139d0 <table_get_float@@Base>
   1202c:	mov	r0, r6
   12030:	mov	r2, fp
   12034:	mov	r1, r4
   12038:	vmov.f32	s16, s0
   1203c:	bl	139d0 <table_get_float@@Base>
   12040:	vcmp.f32	s16, s0
   12044:	vmrs	APSR_nzcv, fpscr
   12048:	movne	r0, #1
   1204c:	moveq	r0, #0
   12050:	b	11e94 <main@@Base+0x25c>
   12054:	mov	r2, fp
   12058:	mov	r1, r4
   1205c:	ldr	r0, [sp, #4]
   12060:	bl	139bc <table_get_ullong@@Base>
   12064:	mov	r2, fp
   12068:	mov	r8, r0
   1206c:	mov	r9, r1
   12070:	mov	r0, r6
   12074:	mov	r1, r4
   12078:	bl	139bc <table_get_ullong@@Base>
   1207c:	cmp	r9, r1
   12080:	cmpeq	r8, r0
   12084:	movne	r0, #1
   12088:	moveq	r0, #0
   1208c:	b	11e94 <main@@Base+0x25c>
   12090:	mov	r2, fp
   12094:	mov	r1, r4
   12098:	ldr	r0, [sp, #4]
   1209c:	bl	139a8 <table_get_llong@@Base>
   120a0:	mov	r2, fp
   120a4:	mov	r8, r0
   120a8:	mov	r9, r1
   120ac:	mov	r0, r6
   120b0:	mov	r1, r4
   120b4:	bl	139a8 <table_get_llong@@Base>
   120b8:	cmp	r9, r1
   120bc:	cmpeq	r8, r0
   120c0:	movne	r0, #1
   120c4:	moveq	r0, #0
   120c8:	b	11e94 <main@@Base+0x25c>
   120cc:	mov	r2, fp
   120d0:	mov	r1, r4
   120d4:	ldr	r0, [sp, #4]
   120d8:	bl	13994 <table_get_ulong@@Base>
   120dc:	mov	r2, fp
   120e0:	mov	r1, r4
   120e4:	mov	r8, r0
   120e8:	mov	r0, r6
   120ec:	bl	13994 <table_get_ulong@@Base>
   120f0:	subs	r0, r8, r0
   120f4:	movne	r0, #1
   120f8:	b	11e94 <main@@Base+0x25c>
   120fc:	mov	r2, fp
   12100:	mov	r1, r4
   12104:	ldr	r0, [sp, #4]
   12108:	bl	13980 <table_get_long@@Base>
   1210c:	mov	r2, fp
   12110:	mov	r1, r4
   12114:	mov	r8, r0
   12118:	mov	r0, r6
   1211c:	bl	13980 <table_get_long@@Base>
   12120:	subs	r0, r8, r0
   12124:	movne	r0, #1
   12128:	b	11e94 <main@@Base+0x25c>
   1212c:	mov	r2, fp
   12130:	mov	r1, r4
   12134:	ldr	r0, [sp, #4]
   12138:	bl	1396c <table_get_ushort@@Base>
   1213c:	mov	r2, fp
   12140:	mov	r1, r4
   12144:	mov	r8, r0
   12148:	mov	r0, r6
   1214c:	bl	1396c <table_get_ushort@@Base>
   12150:	subs	r0, r8, r0
   12154:	movne	r0, #1
   12158:	b	11e94 <main@@Base+0x25c>
   1215c:	mov	r2, fp
   12160:	mov	r1, r4
   12164:	ldr	r0, [sp, #4]
   12168:	bl	13958 <table_get_short@@Base>
   1216c:	mov	r2, fp
   12170:	mov	r1, r4
   12174:	mov	r8, r0
   12178:	mov	r0, r6
   1217c:	bl	13958 <table_get_short@@Base>
   12180:	subs	r0, r8, r0
   12184:	movne	r0, #1
   12188:	b	11e94 <main@@Base+0x25c>
   1218c:	mov	r2, fp
   12190:	mov	r1, r4
   12194:	ldr	r0, [sp, #4]
   12198:	bl	13944 <table_get_uint64@@Base>
   1219c:	mov	r2, fp
   121a0:	mov	r8, r0
   121a4:	mov	r9, r1
   121a8:	mov	r0, r6
   121ac:	mov	r1, r4
   121b0:	bl	13944 <table_get_uint64@@Base>
   121b4:	cmp	r9, r1
   121b8:	cmpeq	r8, r0
   121bc:	movne	r0, #1
   121c0:	moveq	r0, #0
   121c4:	b	11e94 <main@@Base+0x25c>
   121c8:	mov	r2, fp
   121cc:	mov	r1, r4
   121d0:	ldr	r0, [sp, #4]
   121d4:	bl	13930 <table_get_int64@@Base>
   121d8:	mov	r2, fp
   121dc:	mov	r8, r0
   121e0:	mov	r9, r1
   121e4:	mov	r0, r6
   121e8:	mov	r1, r4
   121ec:	bl	13930 <table_get_int64@@Base>
   121f0:	cmp	r9, r1
   121f4:	cmpeq	r8, r0
   121f8:	movne	r0, #1
   121fc:	moveq	r0, #0
   12200:	b	11e94 <main@@Base+0x25c>
   12204:	mov	r2, fp
   12208:	mov	r1, r4
   1220c:	ldr	r0, [sp, #4]
   12210:	bl	1391c <table_get_uint32@@Base>
   12214:	mov	r2, fp
   12218:	mov	r1, r4
   1221c:	mov	r8, r0
   12220:	mov	r0, r6
   12224:	bl	1391c <table_get_uint32@@Base>
   12228:	subs	r0, r8, r0
   1222c:	movne	r0, #1
   12230:	b	11e94 <main@@Base+0x25c>
   12234:	mov	r2, fp
   12238:	mov	r1, r4
   1223c:	ldr	r0, [sp, #4]
   12240:	bl	13908 <table_get_int32@@Base>
   12244:	mov	r2, fp
   12248:	mov	r1, r4
   1224c:	mov	r8, r0
   12250:	mov	r0, r6
   12254:	bl	13908 <table_get_int32@@Base>
   12258:	subs	r0, r8, r0
   1225c:	movne	r0, #1
   12260:	b	11e94 <main@@Base+0x25c>
   12264:	mov	r2, fp
   12268:	mov	r1, r4
   1226c:	ldr	r0, [sp, #4]
   12270:	bl	138f4 <table_get_uint16@@Base>
   12274:	mov	r2, fp
   12278:	mov	r1, r4
   1227c:	mov	r8, r0
   12280:	mov	r0, r6
   12284:	bl	138f4 <table_get_uint16@@Base>
   12288:	subs	r0, r8, r0
   1228c:	movne	r0, #1
   12290:	b	11e94 <main@@Base+0x25c>
   12294:	mov	r2, fp
   12298:	mov	r1, r4
   1229c:	ldr	r0, [sp, #4]
   122a0:	bl	138e0 <table_get_int16@@Base>
   122a4:	mov	r2, fp
   122a8:	mov	r1, r4
   122ac:	mov	r8, r0
   122b0:	mov	r0, r6
   122b4:	bl	138e0 <table_get_int16@@Base>
   122b8:	subs	r0, r8, r0
   122bc:	movne	r0, #1
   122c0:	b	11e94 <main@@Base+0x25c>
   122c4:	mov	r2, fp
   122c8:	mov	r1, r4
   122cc:	ldr	r0, [sp, #4]
   122d0:	bl	138a4 <table_get_uint@@Base>
   122d4:	mov	r2, fp
   122d8:	mov	r1, r4
   122dc:	mov	r8, r0
   122e0:	mov	r0, r6
   122e4:	bl	138a4 <table_get_uint@@Base>
   122e8:	subs	r0, r8, r0
   122ec:	movne	r0, #1
   122f0:	b	11e94 <main@@Base+0x25c>
   122f4:	mov	r2, fp
   122f8:	mov	r1, r4
   122fc:	ldr	r0, [sp, #4]
   12300:	bl	13890 <table_get_int@@Base>
   12304:	mov	r2, fp
   12308:	mov	r1, r4
   1230c:	mov	r8, r0
   12310:	mov	r0, r6
   12314:	bl	13890 <table_get_int@@Base>
   12318:	subs	r0, r8, r0
   1231c:	movne	r0, #1
   12320:	b	11e94 <main@@Base+0x25c>
   12324:	mov	r2, fp
   12328:	mov	r1, r4
   1232c:	ldr	r0, [sp, #4]
   12330:	bl	138cc <table_get_uint8@@Base>
   12334:	mov	r2, fp
   12338:	mov	r1, r4
   1233c:	mov	r8, r0
   12340:	mov	r0, r6
   12344:	bl	138cc <table_get_uint8@@Base>
   12348:	subs	r0, r8, r0
   1234c:	movne	r0, #1
   12350:	b	11e94 <main@@Base+0x25c>
   12354:	mov	r2, fp
   12358:	mov	r1, r4
   1235c:	ldr	r0, [sp, #4]
   12360:	bl	138b8 <table_get_int8@@Base>
   12364:	mov	r2, fp
   12368:	mov	r1, r4
   1236c:	mov	r8, r0
   12370:	mov	r0, r6
   12374:	bl	138b8 <table_get_int8@@Base>
   12378:	subs	r0, r8, r0
   1237c:	movne	r0, #1
   12380:	b	11e94 <main@@Base+0x25c>
   12384:	andeq	r5, r1, ip, ror pc
   12388:	andeq	r5, r1, r8, lsr pc
   1238c:	andeq	r5, r1, ip, lsr pc
   12390:	mvnpl	r8, pc, lsl r5
   12394:	andeq	r8, r1, r0, lsr #13
   12398:	andeq	r5, r1, r4, asr #30
   1239c:	andeq	r5, r1, r0, lsl #31
   123a0:	andeq	r5, r1, r0, asr #31

000123a4 <_start@@Base>:
   123a4:	mov	fp, #0
   123a8:	mov	lr, #0
   123ac:	pop	{r1}		; (ldr r1, [sp], #4)
   123b0:	mov	r2, sp
   123b4:	push	{r2}		; (str r2, [sp, #-4]!)
   123b8:	push	{r0}		; (str r0, [sp, #-4]!)
   123bc:	ldr	ip, [pc, #16]	; 123d4 <_start@@Base+0x30>
   123c0:	push	{ip}		; (str ip, [sp, #-4]!)
   123c4:	ldr	r0, [pc, #12]	; 123d8 <_start@@Base+0x34>
   123c8:	ldr	r3, [pc, #12]	; 123dc <_start@@Base+0x38>
   123cc:	bl	11bcc <__libc_start_main@plt>
   123d0:	bl	11c2c <abort@plt>
   123d4:	andeq	r5, r1, r8, lsr #30
   123d8:	andeq	r1, r1, r8, lsr ip
   123dc:	andeq	r5, r1, r8, asr #29
   123e0:	ldr	r3, [pc, #20]	; 123fc <_start@@Base+0x58>
   123e4:	ldr	r2, [pc, #20]	; 12400 <_start@@Base+0x5c>
   123e8:	add	r3, pc, r3
   123ec:	ldr	r2, [r3, r2]
   123f0:	cmp	r2, #0
   123f4:	bxeq	lr
   123f8:	b	11bd8 <__gmon_start__@plt>
   123fc:	andeq	r4, r1, r0, lsl ip
   12400:	andeq	r0, r0, r0, asr r0
   12404:	ldr	r3, [pc, #28]	; 12428 <_start@@Base+0x84>
   12408:	ldr	r0, [pc, #28]	; 1242c <_start@@Base+0x88>
   1240c:	sub	r3, r3, r0
   12410:	cmp	r3, #6
   12414:	bxls	lr
   12418:	ldr	r3, [pc, #16]	; 12430 <_start@@Base+0x8c>
   1241c:	cmp	r3, #0
   12420:	bxeq	lr
   12424:	bx	r3
   12428:	andeq	r7, r2, pc, asr r0
   1242c:	andeq	r7, r2, ip, asr r0
   12430:	andeq	r0, r0, r0
   12434:	ldr	r1, [pc, #36]	; 12460 <_start@@Base+0xbc>
   12438:	ldr	r0, [pc, #36]	; 12464 <_start@@Base+0xc0>
   1243c:	sub	r1, r1, r0
   12440:	asr	r1, r1, #2
   12444:	add	r1, r1, r1, lsr #31
   12448:	asrs	r1, r1, #1
   1244c:	bxeq	lr
   12450:	ldr	r3, [pc, #16]	; 12468 <_start@@Base+0xc4>
   12454:	cmp	r3, #0
   12458:	bxeq	lr
   1245c:	bx	r3
   12460:	andeq	r7, r2, ip, asr r0
   12464:	andeq	r7, r2, ip, asr r0
   12468:	andeq	r0, r0, r0
   1246c:	push	{r4, lr}
   12470:	ldr	r4, [pc, #24]	; 12490 <_start@@Base+0xec>
   12474:	ldrb	r3, [r4]
   12478:	cmp	r3, #0
   1247c:	popne	{r4, pc}
   12480:	bl	12404 <_start@@Base+0x60>
   12484:	mov	r3, #1
   12488:	strb	r3, [r4]
   1248c:	pop	{r4, pc}
   12490:	andeq	r7, r2, ip, asr r0
   12494:	ldr	r0, [pc, #40]	; 124c4 <_start@@Base+0x120>
   12498:	ldr	r3, [r0]
   1249c:	cmp	r3, #0
   124a0:	bne	124a8 <_start@@Base+0x104>
   124a4:	b	12434 <_start@@Base+0x90>
   124a8:	ldr	r3, [pc, #24]	; 124c8 <_start@@Base+0x124>
   124ac:	cmp	r3, #0
   124b0:	beq	124a4 <_start@@Base+0x100>
   124b4:	push	{r4, lr}
   124b8:	blx	r3
   124bc:	pop	{r4, lr}
   124c0:	b	12434 <_start@@Base+0x90>
   124c4:	andeq	r6, r2, r4, lsl pc
   124c8:	andeq	r0, r0, r0

000124cc <table_new@@Base>:
   124cc:	push	{r4, lr}
   124d0:	mov	r0, #56	; 0x38
   124d4:	bl	11bc0 <malloc@plt>
   124d8:	mov	r2, #0
   124dc:	mov	r1, #10
   124e0:	mov	ip, #20
   124e4:	str	ip, [r0, #24]
   124e8:	str	r2, [r0]
   124ec:	str	r2, [r0, #4]
   124f0:	str	r2, [r0, #12]
   124f4:	str	r2, [r0, #16]
   124f8:	str	r2, [r0, #20]
   124fc:	str	r2, [r0, #28]
   12500:	str	r2, [r0, #36]	; 0x24
   12504:	str	r2, [r0, #40]	; 0x28
   12508:	str	r2, [r0, #44]	; 0x2c
   1250c:	str	r2, [r0, #32]
   12510:	str	r2, [r0, #52]	; 0x34
   12514:	str	r1, [r0, #8]
   12518:	str	r1, [r0, #48]	; 0x30
   1251c:	pop	{r4, pc}

00012520 <table_init@@Base>:
   12520:	mov	r3, #0
   12524:	mov	r2, #10
   12528:	mov	r1, #20
   1252c:	str	r1, [r0, #24]
   12530:	str	r3, [r0]
   12534:	str	r3, [r0, #4]
   12538:	str	r3, [r0, #12]
   1253c:	str	r3, [r0, #16]
   12540:	str	r3, [r0, #20]
   12544:	str	r3, [r0, #28]
   12548:	str	r3, [r0, #36]	; 0x24
   1254c:	str	r3, [r0, #40]	; 0x28
   12550:	str	r3, [r0, #44]	; 0x2c
   12554:	str	r3, [r0, #32]
   12558:	str	r3, [r0, #52]	; 0x34
   1255c:	str	r2, [r0, #8]
   12560:	str	r2, [r0, #48]	; 0x30
   12564:	bx	lr

00012568 <table_destroy@@Base>:
   12568:	push	{r4, r5, r6, lr}
   1256c:	subs	r5, r0, #0
   12570:	popeq	{r4, r5, r6, pc}
   12574:	mvn	r2, #0
   12578:	mov	r1, r2
   1257c:	mov	r3, #64	; 0x40
   12580:	bl	12dd0 <table_notify@@Base>
   12584:	mov	r0, r5
   12588:	bl	13ac8 <table_get_row_length@@Base>
   1258c:	subs	r6, r0, #0
   12590:	movgt	r4, #0
   12594:	ble	125b0 <table_destroy@@Base+0x48>
   12598:	mov	r1, r4
   1259c:	mov	r0, r5
   125a0:	add	r4, r4, #1
   125a4:	bl	13a74 <table_row_destroy@@Base>
   125a8:	cmp	r6, r4
   125ac:	bne	12598 <table_destroy@@Base+0x30>
   125b0:	ldr	r0, [r5, #16]
   125b4:	cmp	r0, #0
   125b8:	beq	125c0 <table_destroy@@Base+0x58>
   125bc:	bl	11b90 <free@plt>
   125c0:	mov	r0, r5
   125c4:	bl	12ec0 <table_get_column_length@@Base>
   125c8:	subs	r6, r0, #0
   125cc:	movgt	r4, #0
   125d0:	ble	125ec <table_destroy@@Base+0x84>
   125d4:	mov	r1, r4
   125d8:	mov	r0, r5
   125dc:	add	r4, r4, #1
   125e0:	bl	12ea8 <table_column_destroy@@Base>
   125e4:	cmp	r6, r4
   125e8:	bne	125d4 <table_destroy@@Base+0x6c>
   125ec:	ldr	r0, [r5]
   125f0:	cmp	r0, #0
   125f4:	beq	125fc <table_destroy@@Base+0x94>
   125f8:	bl	11b90 <free@plt>
   125fc:	ldr	r0, [r5, #36]	; 0x24
   12600:	cmp	r0, #0
   12604:	beq	1260c <table_destroy@@Base+0xa4>
   12608:	bl	11b90 <free@plt>
   1260c:	ldr	r0, [r5, #40]	; 0x28
   12610:	cmp	r0, #0
   12614:	beq	1261c <table_destroy@@Base+0xb4>
   12618:	bl	11b90 <free@plt>
   1261c:	ldr	r0, [r5, #44]	; 0x2c
   12620:	cmp	r0, #0
   12624:	popeq	{r4, r5, r6, pc}
   12628:	pop	{r4, r5, r6, lr}
   1262c:	b	11b90 <free@plt>

00012630 <table_delete@@Base>:
   12630:	push	{r4, lr}
   12634:	mov	r4, r0
   12638:	bl	12568 <table_destroy@@Base>
   1263c:	mov	r0, r4
   12640:	pop	{r4, lr}
   12644:	b	11b90 <free@plt>

00012648 <table_dupe@@Base>:
   12648:	push	{r4, r5, r6, r7, r8, r9, lr}
   1264c:	sub	sp, sp, #20
   12650:	mov	r6, r0
   12654:	bl	13ac8 <table_get_row_length@@Base>
   12658:	mov	r4, #0
   1265c:	mov	r9, r0
   12660:	mov	r0, r6
   12664:	bl	12ec0 <table_get_column_length@@Base>
   12668:	mov	r8, r0
   1266c:	mov	r0, #56	; 0x38
   12670:	bl	11bc0 <malloc@plt>
   12674:	mov	r3, #10
   12678:	mov	r2, #20
   1267c:	cmp	r8, #0
   12680:	mov	r7, r0
   12684:	str	r2, [r0, #24]
   12688:	str	r4, [r0]
   1268c:	str	r4, [r0, #4]
   12690:	str	r4, [r0, #12]
   12694:	str	r4, [r0, #16]
   12698:	str	r4, [r0, #20]
   1269c:	str	r4, [r0, #28]
   126a0:	str	r4, [r0, #36]	; 0x24
   126a4:	str	r4, [r0, #40]	; 0x28
   126a8:	str	r4, [r0, #44]	; 0x2c
   126ac:	str	r4, [r0, #32]
   126b0:	str	r4, [r0, #52]	; 0x34
   126b4:	str	r3, [r0, #8]
   126b8:	str	r3, [r0, #48]	; 0x30
   126bc:	ble	126f8 <table_dupe@@Base+0xb0>
   126c0:	mov	r1, r4
   126c4:	mov	r0, r6
   126c8:	bl	131fc <table_get_column_name@@Base>
   126cc:	mov	r1, r4
   126d0:	add	r4, r4, #1
   126d4:	mov	r5, r0
   126d8:	mov	r0, r6
   126dc:	bl	12f30 <table_get_column_data_type@@Base>
   126e0:	mov	r1, r5
   126e4:	mov	r2, r0
   126e8:	mov	r0, r7
   126ec:	bl	12f44 <table_add_column@@Base>
   126f0:	cmp	r8, r4
   126f4:	bne	126c0 <table_dupe@@Base+0x78>
   126f8:	cmp	r9, #0
   126fc:	movgt	r5, #0
   12700:	ble	127d0 <table_dupe@@Base+0x188>
   12704:	mov	r0, r7
   12708:	bl	13ad0 <table_add_row@@Base>
   1270c:	cmp	r8, #0
   12710:	movgt	r4, #0
   12714:	ble	127c4 <table_dupe@@Base+0x17c>
   12718:	mov	r1, r4
   1271c:	mov	r0, r6
   12720:	bl	12f30 <table_get_column_data_type@@Base>
   12724:	cmp	r0, #23
   12728:	ldrls	pc, [pc, r0, lsl #2]
   1272c:	b	127b8 <table_dupe@@Base+0x170>
   12730:	andeq	r2, r1, ip, lsr #16
   12734:	andeq	r2, r1, r0, lsr #21
   12738:	andeq	r2, r1, r8, ror sl
   1273c:	andeq	r2, r1, r0, asr sl
   12740:	andeq	r2, r1, r8, lsr #20
   12744:	andeq	r2, r1, r0, asr #22
   12748:	andeq	r2, r1, r8, lsl fp
   1274c:	strdeq	r2, [r1], -r0
   12750:	andeq	r2, r1, r8, asr #21
   12754:	andeq	r2, r1, r0, lsl #20
   12758:	ldrdeq	r2, [r1], -r8
   1275c:			; <UNDEFINED> instruction: 0x000129b0
   12760:	andeq	r2, r1, r8, lsl #19
   12764:	andeq	r2, r1, r0, ror #18
   12768:	andeq	r2, r1, r8, lsr r9
   1276c:	andeq	r2, r1, r0, lsl r9
   12770:	andeq	r2, r1, ip, ror #17
   12774:	andeq	r2, r1, r8, asr #17
   12778:	andeq	r2, r1, r4, lsr #17
   1277c:	andeq	r2, r1, ip, ror r8
   12780:	andeq	r2, r1, r4, asr r8
   12784:	andeq	r2, r1, r4, lsl #16
   12788:	ldrdeq	r2, [r1], -ip
   1278c:	muleq	r1, r0, r7
   12790:	mov	r2, r4
   12794:	mov	r1, r5
   12798:	mov	r0, r6
   1279c:	bl	13a44 <table_get_ptr@@Base>
   127a0:	add	r3, sp, #12
   127a4:	mov	r2, r4
   127a8:	mov	r1, r5
   127ac:	str	r0, [sp, #12]
   127b0:	mov	r0, r7
   127b4:	bl	14b74 <table_set_ptr@@Base>
   127b8:	add	r4, r4, #1
   127bc:	cmp	r8, r4
   127c0:	bne	12718 <table_dupe@@Base+0xd0>
   127c4:	add	r5, r5, #1
   127c8:	cmp	r9, r5
   127cc:	bne	12704 <table_dupe@@Base+0xbc>
   127d0:	mov	r0, r7
   127d4:	add	sp, sp, #20
   127d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   127dc:	mov	r2, r4
   127e0:	mov	r1, r5
   127e4:	mov	r0, r6
   127e8:	bl	1387c <table_get_bool@@Base>
   127ec:	mov	r2, r4
   127f0:	mov	r1, r5
   127f4:	mov	r3, r0
   127f8:	mov	r0, r7
   127fc:	bl	13fe8 <table_set_bool@@Base>
   12800:	b	127b8 <table_dupe@@Base+0x170>
   12804:	mov	r2, r4
   12808:	mov	r1, r5
   1280c:	mov	r0, r6
   12810:	bl	13a34 <table_get_string@@Base>
   12814:	mov	r2, r4
   12818:	mov	r1, r5
   1281c:	mov	r3, r0
   12820:	mov	r0, r7
   12824:	bl	149fc <table_set_string@@Base>
   12828:	b	127b8 <table_dupe@@Base+0x170>
   1282c:	mov	r2, r4
   12830:	mov	r1, r5
   12834:	mov	r0, r6
   12838:	bl	13890 <table_get_int@@Base>
   1283c:	mov	r2, r4
   12840:	mov	r1, r5
   12844:	mov	r3, r0
   12848:	mov	r0, r7
   1284c:	bl	14064 <table_set_int@@Base>
   12850:	b	127b8 <table_dupe@@Base+0x170>
   12854:	mov	r2, r4
   12858:	mov	r1, r5
   1285c:	mov	r0, r6
   12860:	bl	13a20 <table_get_uchar@@Base>
   12864:	mov	r2, r4
   12868:	mov	r1, r5
   1286c:	mov	r3, r0
   12870:	mov	r0, r7
   12874:	bl	14af8 <table_set_uchar@@Base>
   12878:	b	127b8 <table_dupe@@Base+0x170>
   1287c:	mov	r2, r4
   12880:	mov	r1, r5
   12884:	mov	r0, r6
   12888:	bl	13a0c <table_get_char@@Base>
   1288c:	mov	r2, r4
   12890:	mov	r1, r5
   12894:	mov	r3, r0
   12898:	mov	r0, r7
   1289c:	bl	14a7c <table_set_char@@Base>
   128a0:	b	127b8 <table_dupe@@Base+0x170>
   128a4:	mov	r2, r4
   128a8:	mov	r1, r5
   128ac:	mov	r0, r6
   128b0:	bl	139f8 <table_get_ldouble@@Base>
   128b4:	mov	r2, r4
   128b8:	mov	r1, r5
   128bc:	mov	r0, r7
   128c0:	bl	14964 <table_set_ldouble@@Base>
   128c4:	b	127b8 <table_dupe@@Base+0x170>
   128c8:	mov	r2, r4
   128cc:	mov	r1, r5
   128d0:	mov	r0, r6
   128d4:	bl	139e4 <table_get_double@@Base>
   128d8:	mov	r2, r4
   128dc:	mov	r1, r5
   128e0:	mov	r0, r7
   128e4:	bl	148cc <table_set_double@@Base>
   128e8:	b	127b8 <table_dupe@@Base+0x170>
   128ec:	mov	r2, r4
   128f0:	mov	r1, r5
   128f4:	mov	r0, r6
   128f8:	bl	139d0 <table_get_float@@Base>
   128fc:	mov	r2, r4
   12900:	mov	r1, r5
   12904:	mov	r0, r7
   12908:	bl	14850 <table_set_float@@Base>
   1290c:	b	127b8 <table_dupe@@Base+0x170>
   12910:	mov	r2, r4
   12914:	mov	r1, r5
   12918:	mov	r0, r6
   1291c:	bl	139bc <table_get_ullong@@Base>
   12920:	mov	r2, r4
   12924:	strd	r0, [sp]
   12928:	mov	r1, r5
   1292c:	mov	r0, r7
   12930:	bl	147c8 <table_set_ullong@@Base>
   12934:	b	127b8 <table_dupe@@Base+0x170>
   12938:	mov	r2, r4
   1293c:	mov	r1, r5
   12940:	mov	r0, r6
   12944:	bl	139a8 <table_get_llong@@Base>
   12948:	mov	r2, r4
   1294c:	strd	r0, [sp]
   12950:	mov	r1, r5
   12954:	mov	r0, r7
   12958:	bl	14740 <table_set_llong@@Base>
   1295c:	b	127b8 <table_dupe@@Base+0x170>
   12960:	mov	r2, r4
   12964:	mov	r1, r5
   12968:	mov	r0, r6
   1296c:	bl	13994 <table_get_ulong@@Base>
   12970:	mov	r2, r4
   12974:	mov	r1, r5
   12978:	mov	r3, r0
   1297c:	mov	r0, r7
   12980:	bl	146c4 <table_set_ulong@@Base>
   12984:	b	127b8 <table_dupe@@Base+0x170>
   12988:	mov	r2, r4
   1298c:	mov	r1, r5
   12990:	mov	r0, r6
   12994:	bl	13980 <table_get_long@@Base>
   12998:	mov	r2, r4
   1299c:	mov	r1, r5
   129a0:	mov	r3, r0
   129a4:	mov	r0, r7
   129a8:	bl	14648 <table_set_long@@Base>
   129ac:	b	127b8 <table_dupe@@Base+0x170>
   129b0:	mov	r2, r4
   129b4:	mov	r1, r5
   129b8:	mov	r0, r6
   129bc:	bl	1396c <table_get_ushort@@Base>
   129c0:	mov	r2, r4
   129c4:	mov	r1, r5
   129c8:	mov	r3, r0
   129cc:	mov	r0, r7
   129d0:	bl	145cc <table_set_ushort@@Base>
   129d4:	b	127b8 <table_dupe@@Base+0x170>
   129d8:	mov	r2, r4
   129dc:	mov	r1, r5
   129e0:	mov	r0, r6
   129e4:	bl	13958 <table_get_short@@Base>
   129e8:	mov	r2, r4
   129ec:	mov	r1, r5
   129f0:	mov	r3, r0
   129f4:	mov	r0, r7
   129f8:	bl	14550 <table_set_short@@Base>
   129fc:	b	127b8 <table_dupe@@Base+0x170>
   12a00:	mov	r2, r4
   12a04:	mov	r1, r5
   12a08:	mov	r0, r6
   12a0c:	bl	13944 <table_get_uint64@@Base>
   12a10:	mov	r2, r4
   12a14:	strd	r0, [sp]
   12a18:	mov	r1, r5
   12a1c:	mov	r0, r7
   12a20:	bl	144c8 <table_set_uint64@@Base>
   12a24:	b	127b8 <table_dupe@@Base+0x170>
   12a28:	mov	r2, r4
   12a2c:	mov	r1, r5
   12a30:	mov	r0, r6
   12a34:	bl	138e0 <table_get_int16@@Base>
   12a38:	mov	r2, r4
   12a3c:	mov	r1, r5
   12a40:	mov	r3, r0
   12a44:	mov	r0, r7
   12a48:	bl	14254 <table_set_int16@@Base>
   12a4c:	b	127b8 <table_dupe@@Base+0x170>
   12a50:	mov	r2, r4
   12a54:	mov	r1, r5
   12a58:	mov	r0, r6
   12a5c:	bl	138cc <table_get_uint8@@Base>
   12a60:	mov	r2, r4
   12a64:	mov	r1, r5
   12a68:	mov	r3, r0
   12a6c:	mov	r0, r7
   12a70:	bl	141d8 <table_set_uint8@@Base>
   12a74:	b	127b8 <table_dupe@@Base+0x170>
   12a78:	mov	r2, r4
   12a7c:	mov	r1, r5
   12a80:	mov	r0, r6
   12a84:	bl	138b8 <table_get_int8@@Base>
   12a88:	mov	r2, r4
   12a8c:	mov	r1, r5
   12a90:	mov	r3, r0
   12a94:	mov	r0, r7
   12a98:	bl	1415c <table_set_int8@@Base>
   12a9c:	b	127b8 <table_dupe@@Base+0x170>
   12aa0:	mov	r2, r4
   12aa4:	mov	r1, r5
   12aa8:	mov	r0, r6
   12aac:	bl	138a4 <table_get_uint@@Base>
   12ab0:	mov	r2, r4
   12ab4:	mov	r1, r5
   12ab8:	mov	r3, r0
   12abc:	mov	r0, r7
   12ac0:	bl	140e0 <table_set_uint@@Base>
   12ac4:	b	127b8 <table_dupe@@Base+0x170>
   12ac8:	mov	r2, r4
   12acc:	mov	r1, r5
   12ad0:	mov	r0, r6
   12ad4:	bl	13930 <table_get_int64@@Base>
   12ad8:	mov	r2, r4
   12adc:	strd	r0, [sp]
   12ae0:	mov	r1, r5
   12ae4:	mov	r0, r7
   12ae8:	bl	14444 <table_set_int64@@Base>
   12aec:	b	127b8 <table_dupe@@Base+0x170>
   12af0:	mov	r2, r4
   12af4:	mov	r1, r5
   12af8:	mov	r0, r6
   12afc:	bl	1391c <table_get_uint32@@Base>
   12b00:	mov	r2, r4
   12b04:	mov	r1, r5
   12b08:	mov	r3, r0
   12b0c:	mov	r0, r7
   12b10:	bl	143c8 <table_set_uint32@@Base>
   12b14:	b	127b8 <table_dupe@@Base+0x170>
   12b18:	mov	r2, r4
   12b1c:	mov	r1, r5
   12b20:	mov	r0, r6
   12b24:	bl	13908 <table_get_int32@@Base>
   12b28:	mov	r2, r4
   12b2c:	mov	r1, r5
   12b30:	mov	r3, r0
   12b34:	mov	r0, r7
   12b38:	bl	1434c <table_set_int32@@Base>
   12b3c:	b	127b8 <table_dupe@@Base+0x170>
   12b40:	mov	r2, r4
   12b44:	mov	r1, r5
   12b48:	mov	r0, r6
   12b4c:	bl	138f4 <table_get_uint16@@Base>
   12b50:	mov	r2, r4
   12b54:	mov	r1, r5
   12b58:	mov	r3, r0
   12b5c:	mov	r0, r7
   12b60:	bl	142d0 <table_set_uint16@@Base>
   12b64:	b	127b8 <table_dupe@@Base+0x170>

00012b68 <table_get_major_version@@Base>:
   12b68:	mov	r0, #0
   12b6c:	bx	lr

00012b70 <table_get_minor_version@@Base>:
   12b70:	mov	r0, #0
   12b74:	bx	lr

00012b78 <table_get_patch_version@@Base>:
   12b78:	mov	r0, #0
   12b7c:	bx	lr

00012b80 <table_get_version@@Base>:
   12b80:	ldr	r0, [pc]	; 12b88 <table_get_version@@Base+0x8>
   12b84:	bx	lr
   12b88:	muleq	r1, r4, r0

00012b8c <table_get_callback_length@@Base>:
   12b8c:	ldr	r0, [r0, #32]
   12b90:	bx	lr

00012b94 <table_register_callback@@Base>:
   12b94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b98:	ldr	r5, [r0, #32]
   12b9c:	ldr	r7, [r0, #36]	; 0x24
   12ba0:	cmp	r5, #0
   12ba4:	ble	12bfc <table_register_callback@@Base+0x68>
   12ba8:	mov	ip, #0
   12bac:	sub	lr, r7, #4
   12bb0:	b	12bc0 <table_register_callback@@Base+0x2c>
   12bb4:	add	ip, ip, #1
   12bb8:	cmp	ip, r5
   12bbc:	beq	12bfc <table_register_callback@@Base+0x68>
   12bc0:	ldr	r4, [lr, #4]!
   12bc4:	lsl	r6, ip, #2
   12bc8:	cmp	r1, r4
   12bcc:	bne	12bb4 <table_register_callback@@Base+0x20>
   12bd0:	ldr	r4, [r0, #40]	; 0x28
   12bd4:	ldr	r4, [r4, ip, lsl #2]
   12bd8:	cmp	r2, r4
   12bdc:	bne	12bb4 <table_register_callback@@Base+0x20>
   12be0:	cmp	ip, #0
   12be4:	beq	12bfc <table_register_callback@@Base+0x68>
   12be8:	ldr	r1, [r0, #44]	; 0x2c
   12bec:	ldr	r2, [r1, r6]
   12bf0:	orr	r3, r2, r3
   12bf4:	str	r3, [r1, r6]
   12bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bfc:	ldr	sl, [r0, #48]	; 0x30
   12c00:	mov	r9, r1
   12c04:	mov	r8, r0
   12c08:	mov	r1, sl
   12c0c:	mov	r0, r5
   12c10:	mov	r6, r3
   12c14:	mov	r4, r2
   12c18:	bl	15e98 <table_get_cell_ptr@@Base+0x204>
   12c1c:	cmp	r1, #0
   12c20:	beq	12c48 <table_register_callback@@Base+0xb4>
   12c24:	str	r9, [r7, r5, lsl #2]
   12c28:	ldr	r3, [r8, #40]	; 0x28
   12c2c:	str	r4, [r3, r5, lsl #2]
   12c30:	ldr	r3, [r8, #44]	; 0x2c
   12c34:	str	r6, [r3, r5, lsl #2]
   12c38:	ldr	r3, [r8, #32]
   12c3c:	add	r3, r3, #1
   12c40:	str	r3, [r8, #32]
   12c44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c48:	ldr	r1, [r8, #52]	; 0x34
   12c4c:	mov	r0, r7
   12c50:	add	r1, sl, r1
   12c54:	str	r1, [r8, #52]	; 0x34
   12c58:	lsl	r1, r1, #2
   12c5c:	bl	11ba8 <realloc@plt>
   12c60:	ldr	r1, [r8, #52]	; 0x34
   12c64:	lsl	r1, r1, #2
   12c68:	str	r0, [r8, #36]	; 0x24
   12c6c:	ldr	r0, [r8, #40]	; 0x28
   12c70:	bl	11ba8 <realloc@plt>
   12c74:	ldr	r1, [r8, #52]	; 0x34
   12c78:	lsl	r1, r1, #2
   12c7c:	str	r0, [r8, #40]	; 0x28
   12c80:	ldr	r0, [r8, #44]	; 0x2c
   12c84:	bl	11ba8 <realloc@plt>
   12c88:	ldr	r7, [r8, #36]	; 0x24
   12c8c:	ldr	r5, [r8, #32]
   12c90:	str	r0, [r8, #44]	; 0x2c
   12c94:	b	12c24 <table_register_callback@@Base+0x90>

00012c98 <table_unregister_callback@@Base>:
   12c98:	push	{r4, r5, r6, lr}
   12c9c:	ldr	lr, [r0, #32]
   12ca0:	cmp	lr, #0
   12ca4:	pople	{r4, r5, r6, pc}
   12ca8:	ldr	r6, [r0, #36]	; 0x24
   12cac:	mov	r3, #0
   12cb0:	sub	r4, r6, #4
   12cb4:	b	12cc4 <table_unregister_callback@@Base+0x2c>
   12cb8:	add	r3, r3, #1
   12cbc:	cmp	r3, lr
   12cc0:	beq	12d90 <table_unregister_callback@@Base+0xf8>
   12cc4:	ldr	r5, [r4, #4]!
   12cc8:	lsl	ip, r3, #2
   12ccc:	cmp	r1, r5
   12cd0:	bne	12cb8 <table_unregister_callback@@Base+0x20>
   12cd4:	ldr	r5, [r0, #40]	; 0x28
   12cd8:	ldr	r5, [r5, r3, lsl #2]
   12cdc:	cmp	r2, r5
   12ce0:	bne	12cb8 <table_unregister_callback@@Base+0x20>
   12ce4:	sub	lr, lr, #1
   12ce8:	cmp	lr, r3
   12cec:	bgt	12cf8 <table_unregister_callback@@Base+0x60>
   12cf0:	b	12d34 <table_unregister_callback@@Base+0x9c>
   12cf4:	ldr	r6, [r0, #36]	; 0x24
   12cf8:	add	r2, ip, #4
   12cfc:	add	r3, r3, #1
   12d00:	ldr	r1, [r6, r2]
   12d04:	str	r1, [r6, ip]
   12d08:	ldr	r1, [r0, #40]	; 0x28
   12d0c:	ldr	lr, [r1, r2]
   12d10:	str	lr, [r1, ip]
   12d14:	ldr	r1, [r0, #44]	; 0x2c
   12d18:	ldr	lr, [r1, r2]
   12d1c:	str	lr, [r1, ip]
   12d20:	ldr	lr, [r0, #32]
   12d24:	mov	ip, r2
   12d28:	sub	lr, lr, #1
   12d2c:	cmp	lr, r3
   12d30:	bgt	12cf4 <table_unregister_callback@@Base+0x5c>
   12d34:	ldr	r6, [r0, #48]	; 0x30
   12d38:	str	lr, [r0, #32]
   12d3c:	mov	r4, r0
   12d40:	mov	r1, r6
   12d44:	mov	r0, lr
   12d48:	bl	15e98 <table_get_cell_ptr@@Base+0x204>
   12d4c:	cmp	r1, #0
   12d50:	popne	{r4, r5, r6, pc}
   12d54:	ldr	r5, [r4, #52]	; 0x34
   12d58:	sub	r5, r5, r6
   12d5c:	cmp	r5, #0
   12d60:	str	r5, [r4, #52]	; 0x34
   12d64:	bne	12d94 <table_unregister_callback@@Base+0xfc>
   12d68:	ldr	r0, [r4, #36]	; 0x24
   12d6c:	bl	11b90 <free@plt>
   12d70:	ldr	r0, [r4, #40]	; 0x28
   12d74:	bl	11b90 <free@plt>
   12d78:	ldr	r0, [r4, #44]	; 0x2c
   12d7c:	bl	11b90 <free@plt>
   12d80:	str	r5, [r4, #36]	; 0x24
   12d84:	str	r5, [r4, #40]	; 0x28
   12d88:	str	r5, [r4, #44]	; 0x2c
   12d8c:	pop	{r4, r5, r6, pc}
   12d90:	pop	{r4, r5, r6, pc}
   12d94:	lsl	r1, r5, #2
   12d98:	ldr	r0, [r4, #36]	; 0x24
   12d9c:	bl	11ba8 <realloc@plt>
   12da0:	ldr	r1, [r4, #52]	; 0x34
   12da4:	lsl	r1, r1, #2
   12da8:	str	r0, [r4, #36]	; 0x24
   12dac:	ldr	r0, [r4, #40]	; 0x28
   12db0:	bl	11ba8 <realloc@plt>
   12db4:	ldr	r1, [r4, #52]	; 0x34
   12db8:	lsl	r1, r1, #2
   12dbc:	str	r0, [r4, #40]	; 0x28
   12dc0:	ldr	r0, [r4, #44]	; 0x2c
   12dc4:	bl	11ba8 <realloc@plt>
   12dc8:	str	r0, [r4, #44]	; 0x2c
   12dcc:	pop	{r4, r5, r6, pc}

00012dd0 <table_notify@@Base>:
   12dd0:	ldr	ip, [r0, #32]
   12dd4:	cmp	ip, #0
   12dd8:	bxle	lr
   12ddc:	push	{r4, r5, r6, r7, r8, r9, lr}
   12de0:	mov	r6, r3
   12de4:	sub	sp, sp, #12
   12de8:	mov	r8, r2
   12dec:	mov	r7, r1
   12df0:	mov	r5, r0
   12df4:	mov	r4, #0
   12df8:	b	12e08 <table_notify@@Base+0x38>
   12dfc:	add	r4, r4, #1
   12e00:	cmp	r4, ip
   12e04:	bge	12e50 <table_notify@@Base+0x80>
   12e08:	ldr	r0, [r5, #44]	; 0x2c
   12e0c:	ldr	r0, [r0, r4, lsl #2]
   12e10:	tst	r6, r0
   12e14:	beq	12dfc <table_notify@@Base+0x2c>
   12e18:	ldr	r2, [r5, #40]	; 0x28
   12e1c:	ldr	r0, [r5, #36]	; 0x24
   12e20:	mov	r3, r6
   12e24:	ldr	r1, [r2, r4, lsl #2]
   12e28:	mov	r2, r8
   12e2c:	str	r1, [sp]
   12e30:	mov	r1, r7
   12e34:	ldr	r9, [r0, r4, lsl #2]
   12e38:	mov	r0, r5
   12e3c:	blx	r9
   12e40:	ldr	ip, [r5, #32]
   12e44:	add	r4, r4, #1
   12e48:	cmp	r4, ip
   12e4c:	blt	12e08 <table_notify@@Base+0x38>
   12e50:	add	sp, sp, #12
   12e54:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012e58 <table_column_init@@Base>:
   12e58:	add	r1, r1, r1, lsl #1
   12e5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e60:	lsl	r4, r1, #2
   12e64:	ldr	r6, [r0]
   12e68:	mov	r0, r2
   12e6c:	mov	r9, r3
   12e70:	mov	r7, r2
   12e74:	bl	11be4 <strlen@plt>
   12e78:	ldr	r8, [sp, #32]
   12e7c:	add	r5, r6, r4
   12e80:	add	r0, r0, #1
   12e84:	bl	11bc0 <malloc@plt>
   12e88:	subs	r3, r0, #0
   12e8c:	str	r0, [r6, r4]
   12e90:	beq	12e9c <table_column_init@@Base+0x44>
   12e94:	mov	r1, r7
   12e98:	bl	11bb4 <strcpy@plt>
   12e9c:	str	r9, [r5, #4]
   12ea0:	str	r8, [r5, #8]
   12ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012ea8 <table_column_destroy@@Base>:
   12ea8:	ldr	r3, [r0]
   12eac:	add	r1, r1, r1, lsl #1
   12eb0:	ldr	r0, [r3, r1, lsl #2]
   12eb4:	cmp	r0, #0
   12eb8:	bxeq	lr
   12ebc:	b	11b90 <free@plt>

00012ec0 <table_get_column_length@@Base>:
   12ec0:	ldr	r0, [r0, #4]
   12ec4:	bx	lr

00012ec8 <table_get_column@@Base>:
   12ec8:	push	{r4, r5, r6, r7, r8, lr}
   12ecc:	ldr	r7, [r0, #4]
   12ed0:	cmp	r7, #0
   12ed4:	ble	12f24 <table_get_column@@Base+0x5c>
   12ed8:	mov	r4, #0
   12edc:	mov	r6, r1
   12ee0:	ldr	r8, [r0]
   12ee4:	mov	r5, r4
   12ee8:	b	12ef8 <table_get_column@@Base+0x30>
   12eec:	add	r5, r5, #1
   12ef0:	cmp	r7, r5
   12ef4:	beq	12f18 <table_get_column@@Base+0x50>
   12ef8:	ldr	r0, [r8, r4]
   12efc:	mov	r1, r6
   12f00:	bl	11b78 <strcmp@plt>
   12f04:	add	r4, r4, #12
   12f08:	cmp	r0, #0
   12f0c:	bne	12eec <table_get_column@@Base+0x24>
   12f10:	mov	r0, r5
   12f14:	pop	{r4, r5, r6, r7, r8, pc}
   12f18:	mvn	r5, #0
   12f1c:	mov	r0, r5
   12f20:	pop	{r4, r5, r6, r7, r8, pc}
   12f24:	mvneq	r5, #0
   12f28:	movne	r5, #0
   12f2c:	b	12f10 <table_get_column@@Base+0x48>

00012f30 <table_get_column_data_type@@Base>:
   12f30:	ldr	r3, [r0]
   12f34:	add	r1, r1, r1, lsl #1
   12f38:	add	r3, r3, r1, lsl #2
   12f3c:	ldr	r0, [r3, #4]
   12f40:	bx	lr

00012f44 <table_add_column@@Base>:
   12f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f48:	mov	r5, r0
   12f4c:	ldmib	r0, {r0, r6}
   12f50:	sub	sp, sp, #12
   12f54:	mov	r9, r1
   12f58:	mov	r1, r6
   12f5c:	mov	r8, r2
   12f60:	bl	15e98 <table_get_cell_ptr@@Base+0x204>
   12f64:	subs	r4, r1, #0
   12f68:	beq	13018 <table_add_column@@Base+0xd4>
   12f6c:	mov	r0, r5
   12f70:	bl	13ac8 <table_get_row_length@@Base>
   12f74:	ldr	r6, [r5, #4]
   12f78:	add	r4, r6, r6, lsl #1
   12f7c:	lsl	r4, r4, #2
   12f80:	mov	r7, r0
   12f84:	mov	r0, r8
   12f88:	bl	13854 <table_get_default_compare_function_for_data_type@@Base>
   12f8c:	mov	fp, r0
   12f90:	mov	r0, r9
   12f94:	bl	11be4 <strlen@plt>
   12f98:	ldr	r3, [r5]
   12f9c:	add	sl, r3, r4
   12fa0:	str	r3, [sp, #4]
   12fa4:	add	r0, r0, #1
   12fa8:	bl	11bc0 <malloc@plt>
   12fac:	ldr	r3, [sp, #4]
   12fb0:	cmp	r0, #0
   12fb4:	str	r0, [r3, r4]
   12fb8:	beq	12fc4 <table_add_column@@Base+0x80>
   12fbc:	mov	r1, r9
   12fc0:	bl	11bb4 <strcpy@plt>
   12fc4:	cmp	r7, #0
   12fc8:	stmib	sl, {r8, fp}
   12fcc:	ble	12ff0 <table_add_column@@Base+0xac>
   12fd0:	mov	r4, #0
   12fd4:	mov	r1, r4
   12fd8:	mov	r2, r6
   12fdc:	mov	r0, r5
   12fe0:	add	r4, r4, #1
   12fe4:	bl	1523c <table_cell_init@@Base>
   12fe8:	cmp	r7, r4
   12fec:	bne	12fd4 <table_add_column@@Base+0x90>
   12ff0:	mov	r0, r5
   12ff4:	mov	r3, #8
   12ff8:	ldr	r2, [r5, #4]
   12ffc:	mvn	r1, #0
   13000:	bl	12dd0 <table_notify@@Base>
   13004:	ldr	r0, [r5, #4]
   13008:	add	r3, r0, #1
   1300c:	str	r3, [r5, #4]
   13010:	add	sp, sp, #12
   13014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13018:	ldr	r1, [r5, #12]
   1301c:	ldr	r0, [r5]
   13020:	add	r6, r6, r1
   13024:	str	r6, [r5, #12]
   13028:	add	r6, r6, r6, lsl #1
   1302c:	lsl	r1, r6, #2
   13030:	bl	11ba8 <realloc@plt>
   13034:	str	r0, [r5]
   13038:	mov	r0, r5
   1303c:	bl	13ac8 <table_get_row_length@@Base>
   13040:	subs	r7, r0, #0
   13044:	ble	12f6c <table_add_column@@Base+0x28>
   13048:	mov	r1, r4
   1304c:	mov	r0, r5
   13050:	bl	13c80 <table_get_row_ptr@@Base>
   13054:	ldr	r1, [r5, #12]
   13058:	add	r4, r4, #1
   1305c:	lsl	r1, r1, #2
   13060:	mov	r6, r0
   13064:	ldr	r0, [r0]
   13068:	bl	11ba8 <realloc@plt>
   1306c:	cmp	r7, r4
   13070:	str	r0, [r6]
   13074:	bne	13048 <table_add_column@@Base+0x104>
   13078:	b	12f6c <table_add_column@@Base+0x28>

0001307c <table_remove_column@@Base>:
   1307c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13080:	add	r5, r1, r1, lsl #1
   13084:	ldr	r3, [r0]
   13088:	lsl	r5, r5, #2
   1308c:	mov	r6, r0
   13090:	ldr	r0, [r3, r5]
   13094:	mov	r9, r1
   13098:	cmp	r0, #0
   1309c:	beq	130a4 <table_remove_column@@Base+0x28>
   130a0:	bl	11b90 <free@plt>
   130a4:	ldr	r4, [r6, #4]
   130a8:	sub	r4, r4, #1
   130ac:	cmp	r9, r4
   130b0:	movlt	r1, r9
   130b4:	bge	130f0 <table_remove_column@@Base+0x74>
   130b8:	ldr	r3, [r6]
   130bc:	add	r0, r5, #12
   130c0:	add	r2, r3, r0
   130c4:	add	r1, r1, #1
   130c8:	ldr	lr, [r2, #4]
   130cc:	ldr	ip, [r2, #8]
   130d0:	ldr	r7, [r2]
   130d4:	add	r2, r3, r5
   130d8:	cmp	r1, r4
   130dc:	str	r7, [r3, r5]
   130e0:	str	lr, [r2, #4]
   130e4:	str	ip, [r2, #8]
   130e8:	mov	r5, r0
   130ec:	bne	130b8 <table_remove_column@@Base+0x3c>
   130f0:	mov	r0, r6
   130f4:	bl	13ac8 <table_get_row_length@@Base>
   130f8:	subs	r7, r0, #0
   130fc:	lslgt	r8, r9, #2
   13100:	movgt	r5, #0
   13104:	ble	13160 <table_remove_column@@Base+0xe4>
   13108:	mov	r2, r9
   1310c:	mov	r1, r5
   13110:	mov	r0, r6
   13114:	bl	15258 <table_cell_destroy@@Base>
   13118:	mov	r1, r5
   1311c:	mov	r0, r6
   13120:	bl	13c80 <table_get_row_ptr@@Base>
   13124:	cmp	r9, r4
   13128:	movlt	r2, r8
   1312c:	movlt	r3, r9
   13130:	bge	13154 <table_remove_column@@Base+0xd8>
   13134:	ldr	ip, [r0]
   13138:	add	r1, r2, #4
   1313c:	add	r3, r3, #1
   13140:	ldr	lr, [ip, r1]
   13144:	cmp	r3, r4
   13148:	str	lr, [ip, r2]
   1314c:	mov	r2, r1
   13150:	bne	13134 <table_remove_column@@Base+0xb8>
   13154:	add	r5, r5, #1
   13158:	cmp	r7, r5
   1315c:	bne	13108 <table_remove_column@@Base+0x8c>
   13160:	ldmib	r6, {r0, r5}
   13164:	sub	r0, r0, #1
   13168:	str	r0, [r6, #4]
   1316c:	mov	r1, r5
   13170:	bl	15e98 <table_get_cell_ptr@@Base+0x204>
   13174:	subs	r4, r1, #0
   13178:	beq	13198 <table_remove_column@@Base+0x11c>
   1317c:	mov	r0, r6
   13180:	mov	r2, r9
   13184:	mov	r3, #16
   13188:	mvn	r1, #0
   1318c:	bl	12dd0 <table_notify@@Base>
   13190:	mov	r0, #0
   13194:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13198:	ldr	r1, [r6, #12]
   1319c:	ldr	r0, [r6]
   131a0:	sub	r1, r1, r5
   131a4:	str	r1, [r6, #12]
   131a8:	add	r1, r1, r1, lsl #1
   131ac:	lsl	r1, r1, #2
   131b0:	bl	11ba8 <realloc@plt>
   131b4:	str	r0, [r6]
   131b8:	mov	r0, r6
   131bc:	bl	13ac8 <table_get_row_length@@Base>
   131c0:	subs	r7, r0, #0
   131c4:	ble	1317c <table_remove_column@@Base+0x100>
   131c8:	mov	r1, r4
   131cc:	mov	r0, r6
   131d0:	bl	13c80 <table_get_row_ptr@@Base>
   131d4:	ldr	r1, [r6, #12]
   131d8:	add	r4, r4, #1
   131dc:	lsl	r1, r1, #2
   131e0:	mov	r5, r0
   131e4:	ldr	r0, [r0]
   131e8:	bl	11ba8 <realloc@plt>
   131ec:	cmp	r7, r4
   131f0:	str	r0, [r5]
   131f4:	bne	131c8 <table_remove_column@@Base+0x14c>
   131f8:	b	1317c <table_remove_column@@Base+0x100>

000131fc <table_get_column_name@@Base>:
   131fc:	ldr	r3, [r0]
   13200:	add	r1, r1, r1, lsl #1
   13204:	ldr	r0, [r3, r1, lsl #2]
   13208:	bx	lr

0001320c <table_get_col_ptr@@Base>:
   1320c:	add	r1, r1, r1, lsl #1
   13210:	ldr	r0, [r0]
   13214:	add	r0, r0, r1, lsl #2
   13218:	bx	lr

0001321c <table_get_column_compare_function@@Base>:
   1321c:	ldr	r3, [r0]
   13220:	add	r1, r1, r1, lsl #1
   13224:	add	r3, r3, r1, lsl #2
   13228:	ldr	r0, [r3, #8]
   1322c:	bx	lr

00013230 <table_set_column_compare_function@@Base>:
   13230:	ldr	r3, [r0]
   13234:	add	r1, r1, r1, lsl #1
   13238:	add	r3, r3, r1, lsl #2
   1323c:	str	r2, [r3, #8]
   13240:	bx	lr

00013244 <table_compare_bool@@Base>:
   13244:	cmp	r0, #0
   13248:	beq	13278 <table_compare_bool@@Base+0x34>
   1324c:	cmp	r1, #0
   13250:	beq	13270 <table_compare_bool@@Base+0x2c>
   13254:	ldrb	r2, [r0]
   13258:	ldrb	r3, [r1]
   1325c:	cmp	r2, r3
   13260:	bgt	13270 <table_compare_bool@@Base+0x2c>
   13264:	mvnlt	r0, #0
   13268:	movge	r0, #0
   1326c:	bx	lr
   13270:	mov	r0, #1
   13274:	bx	lr
   13278:	adds	r0, r1, #0
   1327c:	mvnne	r0, #0
   13280:	bx	lr

00013284 <table_compare_int8@@Base>:
   13284:	cmp	r0, #0
   13288:	beq	132b8 <table_compare_int8@@Base+0x34>
   1328c:	cmp	r1, #0
   13290:	beq	132b0 <table_compare_int8@@Base+0x2c>
   13294:	ldrsb	r2, [r0]
   13298:	ldrsb	r3, [r1]
   1329c:	cmp	r2, r3
   132a0:	bgt	132b0 <table_compare_int8@@Base+0x2c>
   132a4:	mvnlt	r0, #0
   132a8:	movge	r0, #0
   132ac:	bx	lr
   132b0:	mov	r0, #1
   132b4:	bx	lr
   132b8:	adds	r0, r1, #0
   132bc:	mvnne	r0, #0
   132c0:	bx	lr

000132c4 <table_compare_int32@@Base>:
   132c4:	cmp	r0, #0
   132c8:	beq	132f8 <table_compare_int32@@Base+0x34>
   132cc:	cmp	r1, #0
   132d0:	beq	132f0 <table_compare_int32@@Base+0x2c>
   132d4:	ldr	r2, [r0]
   132d8:	ldr	r3, [r1]
   132dc:	cmp	r2, r3
   132e0:	bgt	132f0 <table_compare_int32@@Base+0x2c>
   132e4:	mvnlt	r0, #0
   132e8:	movge	r0, #0
   132ec:	bx	lr
   132f0:	mov	r0, #1
   132f4:	bx	lr
   132f8:	adds	r0, r1, #0
   132fc:	mvnne	r0, #0
   13300:	bx	lr

00013304 <table_compare_uint32@@Base>:
   13304:	cmp	r0, #0
   13308:	beq	13338 <table_compare_uint32@@Base+0x34>
   1330c:	cmp	r1, #0
   13310:	beq	13330 <table_compare_uint32@@Base+0x2c>
   13314:	ldr	r2, [r0]
   13318:	ldr	r3, [r1]
   1331c:	cmp	r2, r3
   13320:	bhi	13330 <table_compare_uint32@@Base+0x2c>
   13324:	mvncc	r0, #0
   13328:	movcs	r0, #0
   1332c:	bx	lr
   13330:	mov	r0, #1
   13334:	bx	lr
   13338:	adds	r0, r1, #0
   1333c:	mvnne	r0, #0
   13340:	bx	lr

00013344 <table_compare_uint64@@Base>:
   13344:	cmp	r0, #0
   13348:	beq	13380 <table_compare_uint64@@Base+0x3c>
   1334c:	cmp	r1, #0
   13350:	beq	1338c <table_compare_uint64@@Base+0x48>
   13354:	ldrd	r2, [r1]
   13358:	push	{r4, r5}
   1335c:	ldrd	r4, [r0]
   13360:	cmp	r5, r3
   13364:	cmpeq	r4, r2
   13368:	movhi	r0, #1
   1336c:	bhi	13378 <table_compare_uint64@@Base+0x34>
   13370:	mvncc	r0, #0
   13374:	movcs	r0, #0
   13378:	pop	{r4, r5}
   1337c:	bx	lr
   13380:	adds	r0, r1, #0
   13384:	mvnne	r0, #0
   13388:	bx	lr
   1338c:	mov	r0, #1
   13390:	bx	lr

00013394 <table_compare_short@@Base>:
   13394:	cmp	r0, #0
   13398:	beq	133c8 <table_compare_short@@Base+0x34>
   1339c:	cmp	r1, #0
   133a0:	beq	133c0 <table_compare_short@@Base+0x2c>
   133a4:	ldrsh	r2, [r0]
   133a8:	ldrsh	r3, [r1]
   133ac:	cmp	r2, r3
   133b0:	bgt	133c0 <table_compare_short@@Base+0x2c>
   133b4:	mvnlt	r0, #0
   133b8:	movge	r0, #0
   133bc:	bx	lr
   133c0:	mov	r0, #1
   133c4:	bx	lr
   133c8:	adds	r0, r1, #0
   133cc:	mvnne	r0, #0
   133d0:	bx	lr

000133d4 <table_compare_ushort@@Base>:
   133d4:	cmp	r0, #0
   133d8:	beq	13408 <table_compare_ushort@@Base+0x34>
   133dc:	cmp	r1, #0
   133e0:	beq	13400 <table_compare_ushort@@Base+0x2c>
   133e4:	ldrh	r2, [r0]
   133e8:	ldrh	r3, [r1]
   133ec:	cmp	r2, r3
   133f0:	bhi	13400 <table_compare_ushort@@Base+0x2c>
   133f4:	mvncc	r0, #0
   133f8:	movcs	r0, #0
   133fc:	bx	lr
   13400:	mov	r0, #1
   13404:	bx	lr
   13408:	adds	r0, r1, #0
   1340c:	mvnne	r0, #0
   13410:	bx	lr

00013414 <table_compare_long@@Base>:
   13414:	cmp	r0, #0
   13418:	beq	13448 <table_compare_long@@Base+0x34>
   1341c:	cmp	r1, #0
   13420:	beq	13440 <table_compare_long@@Base+0x2c>
   13424:	ldr	r2, [r0]
   13428:	ldr	r3, [r1]
   1342c:	cmp	r2, r3
   13430:	bgt	13440 <table_compare_long@@Base+0x2c>
   13434:	mvnlt	r0, #0
   13438:	movge	r0, #0
   1343c:	bx	lr
   13440:	mov	r0, #1
   13444:	bx	lr
   13448:	adds	r0, r1, #0
   1344c:	mvnne	r0, #0
   13450:	bx	lr

00013454 <table_compare_llong@@Base>:
   13454:	cmp	r0, #0
   13458:	beq	13498 <table_compare_llong@@Base+0x44>
   1345c:	cmp	r1, #0
   13460:	beq	134a4 <table_compare_llong@@Base+0x50>
   13464:	ldrd	r2, [r1]
   13468:	push	{r4, r5}
   1346c:	ldrd	r4, [r0]
   13470:	cmp	r2, r4
   13474:	sbcs	r1, r3, r5
   13478:	movlt	r0, #1
   1347c:	blt	13490 <table_compare_llong@@Base+0x3c>
   13480:	cmp	r4, r2
   13484:	sbcs	r3, r5, r3
   13488:	mvnlt	r0, #0
   1348c:	movge	r0, #0
   13490:	pop	{r4, r5}
   13494:	bx	lr
   13498:	adds	r0, r1, #0
   1349c:	mvnne	r0, #0
   134a0:	bx	lr
   134a4:	mov	r0, #1
   134a8:	bx	lr

000134ac <table_compare_ullong@@Base>:
   134ac:	cmp	r0, #0
   134b0:	beq	134e0 <table_compare_ullong@@Base+0x34>
   134b4:	cmp	r1, #0
   134b8:	beq	134d8 <table_compare_ullong@@Base+0x2c>
   134bc:	ldr	r2, [r0]
   134c0:	ldr	r3, [r1]
   134c4:	cmp	r2, r3
   134c8:	bhi	134d8 <table_compare_ullong@@Base+0x2c>
   134cc:	mvncc	r0, #0
   134d0:	movcs	r0, #0
   134d4:	bx	lr
   134d8:	mov	r0, #1
   134dc:	bx	lr
   134e0:	adds	r0, r1, #0
   134e4:	mvnne	r0, #0
   134e8:	bx	lr

000134ec <table_compare_float@@Base>:
   134ec:	cmp	r0, #0
   134f0:	beq	13524 <table_compare_float@@Base+0x38>
   134f4:	cmp	r1, #0
   134f8:	beq	1351c <table_compare_float@@Base+0x30>
   134fc:	vldr	s14, [r0]
   13500:	vldr	s15, [r1]
   13504:	vcmpe.f32	s14, s15
   13508:	vmrs	APSR_nzcv, fpscr
   1350c:	bgt	1351c <table_compare_float@@Base+0x30>
   13510:	mvnmi	r0, #0
   13514:	movpl	r0, #0
   13518:	bx	lr
   1351c:	mov	r0, #1
   13520:	bx	lr
   13524:	adds	r0, r1, #0
   13528:	mvnne	r0, #0
   1352c:	bx	lr

00013530 <table_compare_double@@Base>:
   13530:	cmp	r0, #0
   13534:	beq	13568 <table_compare_double@@Base+0x38>
   13538:	cmp	r1, #0
   1353c:	beq	13560 <table_compare_double@@Base+0x30>
   13540:	vldr	d6, [r0]
   13544:	vldr	d7, [r1]
   13548:	vcmpe.f64	d6, d7
   1354c:	vmrs	APSR_nzcv, fpscr
   13550:	bgt	13560 <table_compare_double@@Base+0x30>
   13554:	mvnmi	r0, #0
   13558:	movpl	r0, #0
   1355c:	bx	lr
   13560:	mov	r0, #1
   13564:	bx	lr
   13568:	adds	r0, r1, #0
   1356c:	mvnne	r0, #0
   13570:	bx	lr

00013574 <table_compare_ldouble@@Base>:
   13574:	cmp	r0, #0
   13578:	beq	135ac <table_compare_ldouble@@Base+0x38>
   1357c:	cmp	r1, #0
   13580:	beq	135a4 <table_compare_ldouble@@Base+0x30>
   13584:	vldr	d6, [r0]
   13588:	vldr	d7, [r1]
   1358c:	vcmpe.f64	d6, d7
   13590:	vmrs	APSR_nzcv, fpscr
   13594:	bgt	135a4 <table_compare_ldouble@@Base+0x30>
   13598:	mvnmi	r0, #0
   1359c:	movpl	r0, #0
   135a0:	bx	lr
   135a4:	mov	r0, #1
   135a8:	bx	lr
   135ac:	adds	r0, r1, #0
   135b0:	mvnne	r0, #0
   135b4:	bx	lr

000135b8 <table_compare_uchar@@Base>:
   135b8:	cmp	r0, #0
   135bc:	beq	135ec <table_compare_uchar@@Base+0x34>
   135c0:	cmp	r1, #0
   135c4:	beq	135e4 <table_compare_uchar@@Base+0x2c>
   135c8:	ldrb	r2, [r0]
   135cc:	ldrb	r3, [r1]
   135d0:	cmp	r2, r3
   135d4:	bhi	135e4 <table_compare_uchar@@Base+0x2c>
   135d8:	mvncc	r0, #0
   135dc:	movcs	r0, #0
   135e0:	bx	lr
   135e4:	mov	r0, #1
   135e8:	bx	lr
   135ec:	adds	r0, r1, #0
   135f0:	mvnne	r0, #0
   135f4:	bx	lr

000135f8 <table_compare_ptr@@Base>:
   135f8:	cmp	r0, r1
   135fc:	bhi	1360c <table_compare_ptr@@Base+0x14>
   13600:	mvncc	r0, #0
   13604:	movcs	r0, #0
   13608:	bx	lr
   1360c:	mov	r0, #1
   13610:	bx	lr

00013614 <table_compare_string@@Base>:
   13614:	cmp	r0, #0
   13618:	beq	13628 <table_compare_string@@Base+0x14>
   1361c:	cmp	r1, #0
   13620:	beq	13634 <table_compare_string@@Base+0x20>
   13624:	b	11b78 <strcmp@plt>
   13628:	adds	r0, r1, #0
   1362c:	mvnne	r0, #0
   13630:	bx	lr
   13634:	mov	r0, #1
   13638:	bx	lr

0001363c <table_compare_ulong@@Base>:
   1363c:	cmp	r0, #0
   13640:	beq	13670 <table_compare_ulong@@Base+0x34>
   13644:	cmp	r1, #0
   13648:	beq	13668 <table_compare_ulong@@Base+0x2c>
   1364c:	ldr	r2, [r0]
   13650:	ldr	r3, [r1]
   13654:	cmp	r2, r3
   13658:	bhi	13668 <table_compare_ulong@@Base+0x2c>
   1365c:	mvncc	r0, #0
   13660:	movcs	r0, #0
   13664:	bx	lr
   13668:	mov	r0, #1
   1366c:	bx	lr
   13670:	adds	r0, r1, #0
   13674:	mvnne	r0, #0
   13678:	bx	lr

0001367c <table_compare_int@@Base>:
   1367c:	cmp	r0, #0
   13680:	beq	136b0 <table_compare_int@@Base+0x34>
   13684:	cmp	r1, #0
   13688:	beq	136a8 <table_compare_int@@Base+0x2c>
   1368c:	ldr	r2, [r0]
   13690:	ldr	r3, [r1]
   13694:	cmp	r2, r3
   13698:	bgt	136a8 <table_compare_int@@Base+0x2c>
   1369c:	mvnlt	r0, #0
   136a0:	movge	r0, #0
   136a4:	bx	lr
   136a8:	mov	r0, #1
   136ac:	bx	lr
   136b0:	adds	r0, r1, #0
   136b4:	mvnne	r0, #0
   136b8:	bx	lr

000136bc <table_compare_uint@@Base>:
   136bc:	cmp	r0, #0
   136c0:	beq	136f0 <table_compare_uint@@Base+0x34>
   136c4:	cmp	r1, #0
   136c8:	beq	136e8 <table_compare_uint@@Base+0x2c>
   136cc:	ldr	r2, [r0]
   136d0:	ldr	r3, [r1]
   136d4:	cmp	r2, r3
   136d8:	bhi	136e8 <table_compare_uint@@Base+0x2c>
   136dc:	mvncc	r0, #0
   136e0:	movcs	r0, #0
   136e4:	bx	lr
   136e8:	mov	r0, #1
   136ec:	bx	lr
   136f0:	adds	r0, r1, #0
   136f4:	mvnne	r0, #0
   136f8:	bx	lr

000136fc <table_compare_int16@@Base>:
   136fc:	cmp	r0, #0
   13700:	beq	13730 <table_compare_int16@@Base+0x34>
   13704:	cmp	r1, #0
   13708:	beq	13728 <table_compare_int16@@Base+0x2c>
   1370c:	ldrsh	r2, [r0]
   13710:	ldrsh	r3, [r1]
   13714:	cmp	r2, r3
   13718:	bgt	13728 <table_compare_int16@@Base+0x2c>
   1371c:	mvnlt	r0, #0
   13720:	movge	r0, #0
   13724:	bx	lr
   13728:	mov	r0, #1
   1372c:	bx	lr
   13730:	adds	r0, r1, #0
   13734:	mvnne	r0, #0
   13738:	bx	lr

0001373c <table_compare_uint16@@Base>:
   1373c:	cmp	r0, #0
   13740:	beq	13770 <table_compare_uint16@@Base+0x34>
   13744:	cmp	r1, #0
   13748:	beq	13768 <table_compare_uint16@@Base+0x2c>
   1374c:	ldrh	r2, [r0]
   13750:	ldrh	r3, [r1]
   13754:	cmp	r2, r3
   13758:	bhi	13768 <table_compare_uint16@@Base+0x2c>
   1375c:	mvncc	r0, #0
   13760:	movcs	r0, #0
   13764:	bx	lr
   13768:	mov	r0, #1
   1376c:	bx	lr
   13770:	adds	r0, r1, #0
   13774:	mvnne	r0, #0
   13778:	bx	lr

0001377c <table_compare_int64@@Base>:
   1377c:	cmp	r0, #0
   13780:	beq	137c0 <table_compare_int64@@Base+0x44>
   13784:	cmp	r1, #0
   13788:	beq	137cc <table_compare_int64@@Base+0x50>
   1378c:	ldrd	r2, [r1]
   13790:	push	{r4, r5}
   13794:	ldrd	r4, [r0]
   13798:	cmp	r2, r4
   1379c:	sbcs	r1, r3, r5
   137a0:	movlt	r0, #1
   137a4:	blt	137b8 <table_compare_int64@@Base+0x3c>
   137a8:	cmp	r4, r2
   137ac:	sbcs	r3, r5, r3
   137b0:	mvnlt	r0, #0
   137b4:	movge	r0, #0
   137b8:	pop	{r4, r5}
   137bc:	bx	lr
   137c0:	adds	r0, r1, #0
   137c4:	mvnne	r0, #0
   137c8:	bx	lr
   137cc:	mov	r0, #1
   137d0:	bx	lr

000137d4 <table_compare_char@@Base>:
   137d4:	cmp	r0, #0
   137d8:	beq	13808 <table_compare_char@@Base+0x34>
   137dc:	cmp	r1, #0
   137e0:	beq	13800 <table_compare_char@@Base+0x2c>
   137e4:	ldrb	r2, [r0]
   137e8:	ldrb	r3, [r1]
   137ec:	cmp	r2, r3
   137f0:	bhi	13800 <table_compare_char@@Base+0x2c>
   137f4:	mvncc	r0, #0
   137f8:	movcs	r0, #0
   137fc:	bx	lr
   13800:	mov	r0, #1
   13804:	bx	lr
   13808:	adds	r0, r1, #0
   1380c:	mvnne	r0, #0
   13810:	bx	lr

00013814 <table_compare_uint8@@Base>:
   13814:	cmp	r0, #0
   13818:	beq	13848 <table_compare_uint8@@Base+0x34>
   1381c:	cmp	r1, #0
   13820:	beq	13840 <table_compare_uint8@@Base+0x2c>
   13824:	ldrb	r2, [r0]
   13828:	ldrb	r3, [r1]
   1382c:	cmp	r2, r3
   13830:	bhi	13840 <table_compare_uint8@@Base+0x2c>
   13834:	mvncc	r0, #0
   13838:	movcs	r0, #0
   1383c:	bx	lr
   13840:	mov	r0, #1
   13844:	bx	lr
   13848:	adds	r0, r1, #0
   1384c:	mvnne	r0, #0
   13850:	bx	lr

00013854 <table_get_default_compare_function_for_data_type@@Base>:
   13854:	cmp	r0, #23
   13858:	ldrls	r3, [pc, #8]	; 13868 <table_get_default_compare_function_for_data_type@@Base+0x14>
   1385c:	ldrls	r0, [r3, r0, lsl #2]
   13860:	movhi	r0, #0
   13864:	bx	lr
   13868:	strdeq	r5, [r1], -r4

0001386c <table_get@@Base>:
   1386c:	push	{r4, lr}
   13870:	bl	15c94 <table_get_cell_ptr@@Base>
   13874:	ldr	r0, [r0]
   13878:	pop	{r4, pc}

0001387c <table_get_bool@@Base>:
   1387c:	push	{r4, lr}
   13880:	bl	15c94 <table_get_cell_ptr@@Base>
   13884:	ldr	r3, [r0]
   13888:	ldrb	r0, [r3]
   1388c:	pop	{r4, pc}

00013890 <table_get_int@@Base>:
   13890:	push	{r4, lr}
   13894:	bl	15c94 <table_get_cell_ptr@@Base>
   13898:	ldr	r3, [r0]
   1389c:	ldr	r0, [r3]
   138a0:	pop	{r4, pc}

000138a4 <table_get_uint@@Base>:
   138a4:	push	{r4, lr}
   138a8:	bl	15c94 <table_get_cell_ptr@@Base>
   138ac:	ldr	r3, [r0]
   138b0:	ldr	r0, [r3]
   138b4:	pop	{r4, pc}

000138b8 <table_get_int8@@Base>:
   138b8:	push	{r4, lr}
   138bc:	bl	15c94 <table_get_cell_ptr@@Base>
   138c0:	ldr	r3, [r0]
   138c4:	ldrsb	r0, [r3]
   138c8:	pop	{r4, pc}

000138cc <table_get_uint8@@Base>:
   138cc:	push	{r4, lr}
   138d0:	bl	15c94 <table_get_cell_ptr@@Base>
   138d4:	ldr	r3, [r0]
   138d8:	ldrb	r0, [r3]
   138dc:	pop	{r4, pc}

000138e0 <table_get_int16@@Base>:
   138e0:	push	{r4, lr}
   138e4:	bl	15c94 <table_get_cell_ptr@@Base>
   138e8:	ldr	r3, [r0]
   138ec:	ldrsh	r0, [r3]
   138f0:	pop	{r4, pc}

000138f4 <table_get_uint16@@Base>:
   138f4:	push	{r4, lr}
   138f8:	bl	15c94 <table_get_cell_ptr@@Base>
   138fc:	ldr	r3, [r0]
   13900:	ldrh	r0, [r3]
   13904:	pop	{r4, pc}

00013908 <table_get_int32@@Base>:
   13908:	push	{r4, lr}
   1390c:	bl	15c94 <table_get_cell_ptr@@Base>
   13910:	ldr	r3, [r0]
   13914:	ldr	r0, [r3]
   13918:	pop	{r4, pc}

0001391c <table_get_uint32@@Base>:
   1391c:	push	{r4, lr}
   13920:	bl	15c94 <table_get_cell_ptr@@Base>
   13924:	ldr	r3, [r0]
   13928:	ldr	r0, [r3]
   1392c:	pop	{r4, pc}

00013930 <table_get_int64@@Base>:
   13930:	push	{r4, lr}
   13934:	bl	15c94 <table_get_cell_ptr@@Base>
   13938:	ldr	r3, [r0]
   1393c:	ldrd	r0, [r3]
   13940:	pop	{r4, pc}

00013944 <table_get_uint64@@Base>:
   13944:	push	{r4, lr}
   13948:	bl	15c94 <table_get_cell_ptr@@Base>
   1394c:	ldr	r3, [r0]
   13950:	ldrd	r0, [r3]
   13954:	pop	{r4, pc}

00013958 <table_get_short@@Base>:
   13958:	push	{r4, lr}
   1395c:	bl	15c94 <table_get_cell_ptr@@Base>
   13960:	ldr	r3, [r0]
   13964:	ldrsh	r0, [r3]
   13968:	pop	{r4, pc}

0001396c <table_get_ushort@@Base>:
   1396c:	push	{r4, lr}
   13970:	bl	15c94 <table_get_cell_ptr@@Base>
   13974:	ldr	r3, [r0]
   13978:	ldrh	r0, [r3]
   1397c:	pop	{r4, pc}

00013980 <table_get_long@@Base>:
   13980:	push	{r4, lr}
   13984:	bl	15c94 <table_get_cell_ptr@@Base>
   13988:	ldr	r3, [r0]
   1398c:	ldr	r0, [r3]
   13990:	pop	{r4, pc}

00013994 <table_get_ulong@@Base>:
   13994:	push	{r4, lr}
   13998:	bl	15c94 <table_get_cell_ptr@@Base>
   1399c:	ldr	r3, [r0]
   139a0:	ldr	r0, [r3]
   139a4:	pop	{r4, pc}

000139a8 <table_get_llong@@Base>:
   139a8:	push	{r4, lr}
   139ac:	bl	15c94 <table_get_cell_ptr@@Base>
   139b0:	ldr	r3, [r0]
   139b4:	ldrd	r0, [r3]
   139b8:	pop	{r4, pc}

000139bc <table_get_ullong@@Base>:
   139bc:	push	{r4, lr}
   139c0:	bl	15c94 <table_get_cell_ptr@@Base>
   139c4:	ldr	r3, [r0]
   139c8:	ldrd	r0, [r3]
   139cc:	pop	{r4, pc}

000139d0 <table_get_float@@Base>:
   139d0:	push	{r4, lr}
   139d4:	bl	15c94 <table_get_cell_ptr@@Base>
   139d8:	ldr	r3, [r0]
   139dc:	vldr	s0, [r3]
   139e0:	pop	{r4, pc}

000139e4 <table_get_double@@Base>:
   139e4:	push	{r4, lr}
   139e8:	bl	15c94 <table_get_cell_ptr@@Base>
   139ec:	ldr	r3, [r0]
   139f0:	vldr	d0, [r3]
   139f4:	pop	{r4, pc}

000139f8 <table_get_ldouble@@Base>:
   139f8:	push	{r4, lr}
   139fc:	bl	15c94 <table_get_cell_ptr@@Base>
   13a00:	ldr	r3, [r0]
   13a04:	vldr	d0, [r3]
   13a08:	pop	{r4, pc}

00013a0c <table_get_char@@Base>:
   13a0c:	push	{r4, lr}
   13a10:	bl	15c94 <table_get_cell_ptr@@Base>
   13a14:	ldr	r3, [r0]
   13a18:	ldrb	r0, [r3]
   13a1c:	pop	{r4, pc}

00013a20 <table_get_uchar@@Base>:
   13a20:	push	{r4, lr}
   13a24:	bl	15c94 <table_get_cell_ptr@@Base>
   13a28:	ldr	r3, [r0]
   13a2c:	ldrb	r0, [r3]
   13a30:	pop	{r4, pc}

00013a34 <table_get_string@@Base>:
   13a34:	push	{r4, lr}
   13a38:	bl	15c94 <table_get_cell_ptr@@Base>
   13a3c:	ldr	r0, [r0]
   13a40:	pop	{r4, pc}

00013a44 <table_get_ptr@@Base>:
   13a44:	push	{r4, lr}
   13a48:	bl	15c94 <table_get_cell_ptr@@Base>
   13a4c:	ldr	r0, [r0]
   13a50:	pop	{r4, pc}

00013a54 <table_row_init@@Base>:
   13a54:	ldr	r3, [r0, #12]
   13a58:	push	{r4, r5, r6, lr}
   13a5c:	mov	r5, r1
   13a60:	ldr	r4, [r0, #16]
   13a64:	lsl	r0, r3, #2
   13a68:	bl	11bc0 <malloc@plt>
   13a6c:	str	r0, [r4, r5, lsl #2]
   13a70:	pop	{r4, r5, r6, pc}

00013a74 <table_row_destroy@@Base>:
   13a74:	push	{r4, r5, r6, r7, r8, lr}
   13a78:	mov	r6, r0
   13a7c:	mov	r5, r1
   13a80:	bl	12ec0 <table_get_column_length@@Base>
   13a84:	ldr	r8, [r6, #16]
   13a88:	subs	r7, r0, #0
   13a8c:	movgt	r4, #0
   13a90:	ble	13ab0 <table_row_destroy@@Base+0x3c>
   13a94:	mov	r2, r4
   13a98:	mov	r1, r5
   13a9c:	add	r4, r4, #1
   13aa0:	mov	r0, r6
   13aa4:	bl	15258 <table_cell_destroy@@Base>
   13aa8:	cmp	r7, r4
   13aac:	bne	13a94 <table_row_destroy@@Base+0x20>
   13ab0:	ldr	r0, [r8, r5, lsl #2]
   13ab4:	cmp	r0, #0
   13ab8:	beq	13ac4 <table_row_destroy@@Base+0x50>
   13abc:	pop	{r4, r5, r6, r7, r8, lr}
   13ac0:	b	11b90 <free@plt>
   13ac4:	pop	{r4, r5, r6, r7, r8, pc}

00013ac8 <table_get_row_length@@Base>:
   13ac8:	ldr	r0, [r0, #20]
   13acc:	bx	lr

00013ad0 <table_add_row@@Base>:
   13ad0:	push	{r4, r5, r6, r7, r8, lr}
   13ad4:	mov	r5, r0
   13ad8:	ldr	r4, [r0, #24]
   13adc:	ldr	r6, [r0, #20]
   13ae0:	mov	r1, r4
   13ae4:	mov	r0, r6
   13ae8:	bl	15e98 <table_get_cell_ptr@@Base+0x204>
   13aec:	cmp	r1, #0
   13af0:	bne	13b14 <table_add_row@@Base+0x44>
   13af4:	ldr	r1, [r5, #28]
   13af8:	ldr	r0, [r5, #16]
   13afc:	add	r1, r4, r1
   13b00:	str	r1, [r5, #28]
   13b04:	lsl	r1, r1, #2
   13b08:	bl	11ba8 <realloc@plt>
   13b0c:	ldr	r6, [r5, #20]
   13b10:	str	r0, [r5, #16]
   13b14:	mov	r0, r5
   13b18:	bl	12ec0 <table_get_column_length@@Base>
   13b1c:	ldr	r4, [r5, #16]
   13b20:	mov	r7, r0
   13b24:	ldr	r0, [r5, #12]
   13b28:	lsl	r0, r0, #2
   13b2c:	bl	11bc0 <malloc@plt>
   13b30:	cmp	r7, #0
   13b34:	str	r0, [r4, r6, lsl #2]
   13b38:	ble	13b5c <table_add_row@@Base+0x8c>
   13b3c:	mov	r4, #0
   13b40:	mov	r2, r4
   13b44:	mov	r1, r6
   13b48:	add	r4, r4, #1
   13b4c:	mov	r0, r5
   13b50:	bl	1523c <table_cell_init@@Base>
   13b54:	cmp	r7, r4
   13b58:	bne	13b40 <table_add_row@@Base+0x70>
   13b5c:	mov	r0, r5
   13b60:	mov	r3, #2
   13b64:	mvn	r2, #0
   13b68:	ldr	r1, [r5, #20]
   13b6c:	bl	12dd0 <table_notify@@Base>
   13b70:	ldr	r0, [r5, #20]
   13b74:	add	r3, r0, #1
   13b78:	str	r3, [r5, #20]
   13b7c:	pop	{r4, r5, r6, r7, r8, pc}

00013b80 <table_remove_row@@Base>:
   13b80:	push	{r4, r5, r6, r7, r8, lr}
   13b84:	mov	r5, r0
   13b88:	mov	r6, r1
   13b8c:	ldr	r7, [r0, #20]
   13b90:	bl	12ec0 <table_get_column_length@@Base>
   13b94:	subs	r8, r0, #0
   13b98:	movgt	r4, #0
   13b9c:	ble	13be0 <table_remove_row@@Base+0x60>
   13ba0:	mov	r1, r4
   13ba4:	mov	r0, r5
   13ba8:	bl	12f30 <table_get_column_data_type@@Base>
   13bac:	mov	r2, r4
   13bb0:	mov	r1, r6
   13bb4:	add	r4, r4, #1
   13bb8:	cmp	r0, #23
   13bbc:	mov	r0, r5
   13bc0:	beq	13bd8 <table_remove_row@@Base+0x58>
   13bc4:	bl	15c94 <table_get_cell_ptr@@Base>
   13bc8:	ldr	r3, [r0]
   13bcc:	subs	r0, r3, #0
   13bd0:	beq	13bd8 <table_remove_row@@Base+0x58>
   13bd4:	bl	11b90 <free@plt>
   13bd8:	cmp	r8, r4
   13bdc:	bne	13ba0 <table_remove_row@@Base+0x20>
   13be0:	ldr	r3, [r5, #16]
   13be4:	lsl	r4, r6, #2
   13be8:	ldr	r0, [r3, r6, lsl #2]
   13bec:	cmp	r0, #0
   13bf0:	beq	13bf8 <table_remove_row@@Base+0x78>
   13bf4:	bl	11b90 <free@plt>
   13bf8:	sub	ip, r7, #1
   13bfc:	cmp	r6, ip
   13c00:	movlt	r3, r6
   13c04:	bge	13c28 <table_remove_row@@Base+0xa8>
   13c08:	ldr	r1, [r5, #16]
   13c0c:	add	r2, r4, #4
   13c10:	add	r3, r3, #1
   13c14:	ldr	r0, [r1, r2]
   13c18:	cmp	r3, ip
   13c1c:	str	r0, [r1, r4]
   13c20:	mov	r4, r2
   13c24:	bne	13c08 <table_remove_row@@Base+0x88>
   13c28:	ldr	r0, [r5, #20]
   13c2c:	ldr	r4, [r5, #24]
   13c30:	sub	r0, r0, #1
   13c34:	str	r0, [r5, #20]
   13c38:	mov	r1, r4
   13c3c:	bl	15e98 <table_get_cell_ptr@@Base+0x204>
   13c40:	cmp	r1, #0
   13c44:	bne	13c64 <table_remove_row@@Base+0xe4>
   13c48:	ldr	r1, [r5, #28]
   13c4c:	ldr	r0, [r5, #16]
   13c50:	sub	r1, r1, r4
   13c54:	str	r1, [r5, #28]
   13c58:	lsl	r1, r1, #2
   13c5c:	bl	11ba8 <realloc@plt>
   13c60:	str	r0, [r5, #16]
   13c64:	mov	r0, r5
   13c68:	mov	r1, r6
   13c6c:	mov	r3, #4
   13c70:	mvn	r2, #0
   13c74:	bl	12dd0 <table_notify@@Base>
   13c78:	mov	r0, #0
   13c7c:	pop	{r4, r5, r6, r7, r8, pc}

00013c80 <table_get_row_ptr@@Base>:
   13c80:	ldr	r0, [r0, #16]
   13c84:	add	r0, r0, r1, lsl #2
   13c88:	bx	lr

00013c8c <table_set_row_ptr@@Base>:
   13c8c:	ldr	r3, [r0, #16]
   13c90:	ldr	r2, [r2]
   13c94:	str	r2, [r3, r1, lsl #2]
   13c98:	bx	lr

00013c9c <table_set@@Base>:
   13c9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ca0:	mov	r5, r0
   13ca4:	mov	r6, r2
   13ca8:	ldr	r4, [sp, #32]
   13cac:	mov	r9, r1
   13cb0:	mov	r7, r3
   13cb4:	bl	15c94 <table_get_cell_ptr@@Base>
   13cb8:	mov	r1, r6
   13cbc:	mov	r8, r0
   13cc0:	mov	r0, r5
   13cc4:	bl	1320c <table_get_col_ptr@@Base>
   13cc8:	cmp	r4, #23
   13ccc:	ldrls	pc, [pc, r4, lsl #2]
   13cd0:	b	13d48 <table_set@@Base+0xac>
   13cd4:	andeq	r3, r1, ip, ror #29
   13cd8:	ldrdeq	r3, [r1], -ip
   13cdc:	andeq	r3, r1, ip, asr #29
   13ce0:			; <UNDEFINED> instruction: 0x00013ebc
   13ce4:	andeq	r3, r1, ip, lsr #29
   13ce8:	andeq	r3, r1, r8, lsl #29
   13cec:	andeq	r3, r1, r8, ror lr
   13cf0:	andeq	r3, r1, r8, ror #28
   13cf4:	andeq	r3, r1, ip, lsr #30
   13cf8:	andeq	r3, r1, ip, lsl pc
   13cfc:	andeq	r3, r1, ip, lsl #30
   13d00:	strdeq	r3, [r1], -ip
   13d04:	andeq	r3, r1, r8, ror pc
   13d08:	andeq	r3, r1, r8, asr pc
   13d0c:	andeq	r3, r1, r8, ror #30
   13d10:	andeq	r3, r1, r8, asr lr
   13d14:	andeq	r3, r1, r4, lsr lr
   13d18:	andeq	r3, r1, r4, lsr #28
   13d1c:	strdeq	r3, [r1], -r8
   13d20:	andeq	r3, r1, r8, ror #27
   13d24:	ldrdeq	r3, [r1], -r8
   13d28:	andeq	r3, r1, r0, lsr #27
   13d2c:	andeq	r3, r1, ip, ror sp
   13d30:	andeq	r3, r1, r0, asr sp
   13d34:	bl	11bc0 <malloc@plt>
   13d38:	cmp	r0, #0
   13d3c:	mov	r3, r0
   13d40:	str	r0, [r8]
   13d44:	bne	13f44 <table_set@@Base+0x2a8>
   13d48:	mvn	r0, #0
   13d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d50:	ldr	r3, [r0, #4]
   13d54:	cmp	r3, #23
   13d58:	bne	13d48 <table_set@@Base+0xac>
   13d5c:	str	r7, [r8]
   13d60:	mov	r0, r5
   13d64:	mov	r2, r6
   13d68:	mov	r1, r9
   13d6c:	mov	r3, #1
   13d70:	bl	12dd0 <table_notify@@Base>
   13d74:	mov	r0, #0
   13d78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d7c:	ldr	r3, [r0, #4]
   13d80:	cmp	r3, #22
   13d84:	bne	13d48 <table_set@@Base+0xac>
   13d88:	ldr	r0, [r8]
   13d8c:	cmp	r0, #0
   13d90:	beq	13fa0 <table_set@@Base+0x304>
   13d94:	ldrb	r3, [r7]
   13d98:	strb	r3, [r0]
   13d9c:	b	13d60 <table_set@@Base+0xc4>
   13da0:	ldr	r3, [r0, #4]
   13da4:	cmp	r3, #21
   13da8:	bne	13d48 <table_set@@Base+0xac>
   13dac:	mov	r0, r7
   13db0:	bl	11be4 <strlen@plt>
   13db4:	add	r1, r0, #1
   13db8:	ldr	r0, [r8]
   13dbc:	bl	11ba8 <realloc@plt>
   13dc0:	cmp	r0, #0
   13dc4:	str	r0, [r8]
   13dc8:	beq	13d48 <table_set@@Base+0xac>
   13dcc:	mov	r1, r7
   13dd0:	bl	11bb4 <strcpy@plt>
   13dd4:	b	13d60 <table_set@@Base+0xc4>
   13dd8:	ldr	r3, [r0, #4]
   13ddc:	cmp	r3, #20
   13de0:	beq	13d88 <table_set@@Base+0xec>
   13de4:	b	13d48 <table_set@@Base+0xac>
   13de8:	ldr	r3, [r0, #4]
   13dec:	cmp	r3, #19
   13df0:	beq	13d88 <table_set@@Base+0xec>
   13df4:	b	13d48 <table_set@@Base+0xac>
   13df8:	ldr	r3, [r0, #4]
   13dfc:	cmp	r3, #18
   13e00:	bne	13d48 <table_set@@Base+0xac>
   13e04:	ldr	r0, [r8]
   13e08:	cmp	r0, #0
   13e0c:	beq	13fb8 <table_set@@Base+0x31c>
   13e10:	ldr	r2, [r7]
   13e14:	ldr	r3, [r7, #4]
   13e18:	str	r2, [r0]
   13e1c:	str	r3, [r0, #4]
   13e20:	b	13d60 <table_set@@Base+0xc4>
   13e24:	ldr	r3, [r0, #4]
   13e28:	cmp	r3, #17
   13e2c:	beq	13e04 <table_set@@Base+0x168>
   13e30:	b	13d48 <table_set@@Base+0xac>
   13e34:	ldr	r3, [r0, #4]
   13e38:	cmp	r3, #16
   13e3c:	bne	13d48 <table_set@@Base+0xac>
   13e40:	ldr	r0, [r8]
   13e44:	cmp	r0, #0
   13e48:	beq	13f88 <table_set@@Base+0x2ec>
   13e4c:	ldr	r3, [r7]
   13e50:	str	r3, [r0]
   13e54:	b	13d60 <table_set@@Base+0xc4>
   13e58:	ldr	r3, [r0, #4]
   13e5c:	cmp	r3, #15
   13e60:	beq	13e04 <table_set@@Base+0x168>
   13e64:	b	13d48 <table_set@@Base+0xac>
   13e68:	ldr	r3, [r0, #4]
   13e6c:	cmp	r3, #7
   13e70:	beq	13e40 <table_set@@Base+0x1a4>
   13e74:	b	13d48 <table_set@@Base+0xac>
   13e78:	ldr	r3, [r0, #4]
   13e7c:	cmp	r3, #6
   13e80:	beq	13e40 <table_set@@Base+0x1a4>
   13e84:	b	13d48 <table_set@@Base+0xac>
   13e88:	ldr	r3, [r0, #4]
   13e8c:	cmp	r3, #5
   13e90:	bne	13d48 <table_set@@Base+0xac>
   13e94:	ldr	r0, [r8]
   13e98:	cmp	r0, #0
   13e9c:	beq	13fd0 <table_set@@Base+0x334>
   13ea0:	ldrh	r3, [r7]
   13ea4:	strh	r3, [r0]
   13ea8:	b	13d60 <table_set@@Base+0xc4>
   13eac:	ldr	r3, [r0, #4]
   13eb0:	cmp	r3, #4
   13eb4:	beq	13e94 <table_set@@Base+0x1f8>
   13eb8:	b	13d48 <table_set@@Base+0xac>
   13ebc:	ldr	r3, [r0, #4]
   13ec0:	cmp	r3, #3
   13ec4:	beq	13d88 <table_set@@Base+0xec>
   13ec8:	b	13d48 <table_set@@Base+0xac>
   13ecc:	ldr	r3, [r0, #4]
   13ed0:	cmp	r3, #2
   13ed4:	beq	13d88 <table_set@@Base+0xec>
   13ed8:	b	13d48 <table_set@@Base+0xac>
   13edc:	ldr	r3, [r0, #4]
   13ee0:	cmp	r3, #1
   13ee4:	beq	13e40 <table_set@@Base+0x1a4>
   13ee8:	b	13d48 <table_set@@Base+0xac>
   13eec:	ldr	r3, [r0, #4]
   13ef0:	cmp	r3, #0
   13ef4:	beq	13e40 <table_set@@Base+0x1a4>
   13ef8:	b	13d48 <table_set@@Base+0xac>
   13efc:	ldr	r3, [r0, #4]
   13f00:	cmp	r3, #11
   13f04:	beq	13e94 <table_set@@Base+0x1f8>
   13f08:	b	13d48 <table_set@@Base+0xac>
   13f0c:	ldr	r3, [r0, #4]
   13f10:	cmp	r3, #10
   13f14:	beq	13e94 <table_set@@Base+0x1f8>
   13f18:	b	13d48 <table_set@@Base+0xac>
   13f1c:	ldr	r3, [r0, #4]
   13f20:	cmp	r3, #9
   13f24:	beq	13e04 <table_set@@Base+0x168>
   13f28:	b	13d48 <table_set@@Base+0xac>
   13f2c:	ldr	r0, [r0, #4]
   13f30:	cmp	r0, #8
   13f34:	bne	13d48 <table_set@@Base+0xac>
   13f38:	ldr	r3, [r8]
   13f3c:	cmp	r3, #0
   13f40:	beq	13d34 <table_set@@Base+0x98>
   13f44:	ldr	r1, [r7]
   13f48:	ldr	r2, [r7, #4]
   13f4c:	str	r1, [r3]
   13f50:	str	r2, [r3, #4]
   13f54:	b	13d60 <table_set@@Base+0xc4>
   13f58:	ldr	r3, [r0, #4]
   13f5c:	cmp	r3, #13
   13f60:	beq	13e40 <table_set@@Base+0x1a4>
   13f64:	b	13d48 <table_set@@Base+0xac>
   13f68:	ldr	r3, [r0, #4]
   13f6c:	cmp	r3, #14
   13f70:	beq	13e04 <table_set@@Base+0x168>
   13f74:	b	13d48 <table_set@@Base+0xac>
   13f78:	ldr	r3, [r0, #4]
   13f7c:	cmp	r3, #12
   13f80:	beq	13e40 <table_set@@Base+0x1a4>
   13f84:	b	13d48 <table_set@@Base+0xac>
   13f88:	mov	r0, #4
   13f8c:	bl	11bc0 <malloc@plt>
   13f90:	cmp	r0, #0
   13f94:	str	r0, [r8]
   13f98:	bne	13e4c <table_set@@Base+0x1b0>
   13f9c:	b	13d48 <table_set@@Base+0xac>
   13fa0:	mov	r0, #1
   13fa4:	bl	11bc0 <malloc@plt>
   13fa8:	cmp	r0, #0
   13fac:	str	r0, [r8]
   13fb0:	bne	13d94 <table_set@@Base+0xf8>
   13fb4:	b	13d48 <table_set@@Base+0xac>
   13fb8:	mov	r0, #8
   13fbc:	bl	11bc0 <malloc@plt>
   13fc0:	cmp	r0, #0
   13fc4:	str	r0, [r8]
   13fc8:	bne	13e10 <table_set@@Base+0x174>
   13fcc:	b	13d48 <table_set@@Base+0xac>
   13fd0:	mov	r0, #2
   13fd4:	bl	11bc0 <malloc@plt>
   13fd8:	cmp	r0, #0
   13fdc:	str	r0, [r8]
   13fe0:	bne	13ea0 <table_set@@Base+0x204>
   13fe4:	b	13d48 <table_set@@Base+0xac>

00013fe8 <table_set_bool@@Base>:
   13fe8:	push	{r4, r5, r6, r7, r8, lr}
   13fec:	mov	r5, r2
   13ff0:	mov	r4, r0
   13ff4:	mov	r8, r3
   13ff8:	mov	r7, r1
   13ffc:	bl	15c94 <table_get_cell_ptr@@Base>
   14000:	mov	r1, r5
   14004:	mov	r6, r0
   14008:	mov	r0, r4
   1400c:	bl	1320c <table_get_col_ptr@@Base>
   14010:	ldr	r2, [r0, #4]
   14014:	cmp	r2, #22
   14018:	bne	1405c <table_set_bool@@Base+0x74>
   1401c:	ldr	r0, [r6]
   14020:	cmp	r0, #0
   14024:	beq	14048 <table_set_bool@@Base+0x60>
   14028:	strb	r8, [r0]
   1402c:	mov	r2, r5
   14030:	mov	r0, r4
   14034:	mov	r1, r7
   14038:	mov	r3, #1
   1403c:	bl	12dd0 <table_notify@@Base>
   14040:	mov	r0, #0
   14044:	pop	{r4, r5, r6, r7, r8, pc}
   14048:	mov	r0, #1
   1404c:	bl	11bc0 <malloc@plt>
   14050:	cmp	r0, #0
   14054:	str	r0, [r6]
   14058:	bne	14028 <table_set_bool@@Base+0x40>
   1405c:	mvn	r0, #0
   14060:	pop	{r4, r5, r6, r7, r8, pc}

00014064 <table_set_int@@Base>:
   14064:	push	{r4, r5, r6, r7, r8, lr}
   14068:	mov	r5, r2
   1406c:	mov	r4, r0
   14070:	mov	r8, r3
   14074:	mov	r7, r1
   14078:	bl	15c94 <table_get_cell_ptr@@Base>
   1407c:	mov	r1, r5
   14080:	mov	r6, r0
   14084:	mov	r0, r4
   14088:	bl	1320c <table_get_col_ptr@@Base>
   1408c:	ldr	r2, [r0, #4]
   14090:	cmp	r2, #0
   14094:	bne	140d8 <table_set_int@@Base+0x74>
   14098:	ldr	r0, [r6]
   1409c:	cmp	r0, #0
   140a0:	beq	140c4 <table_set_int@@Base+0x60>
   140a4:	str	r8, [r0]
   140a8:	mov	r2, r5
   140ac:	mov	r0, r4
   140b0:	mov	r1, r7
   140b4:	mov	r3, #1
   140b8:	bl	12dd0 <table_notify@@Base>
   140bc:	mov	r0, #0
   140c0:	pop	{r4, r5, r6, r7, r8, pc}
   140c4:	mov	r0, #4
   140c8:	bl	11bc0 <malloc@plt>
   140cc:	cmp	r0, #0
   140d0:	str	r0, [r6]
   140d4:	bne	140a4 <table_set_int@@Base+0x40>
   140d8:	mvn	r0, #0
   140dc:	pop	{r4, r5, r6, r7, r8, pc}

000140e0 <table_set_uint@@Base>:
   140e0:	push	{r4, r5, r6, r7, r8, lr}
   140e4:	mov	r5, r2
   140e8:	mov	r4, r0
   140ec:	mov	r8, r3
   140f0:	mov	r7, r1
   140f4:	bl	15c94 <table_get_cell_ptr@@Base>
   140f8:	mov	r1, r5
   140fc:	mov	r6, r0
   14100:	mov	r0, r4
   14104:	bl	1320c <table_get_col_ptr@@Base>
   14108:	ldr	r2, [r0, #4]
   1410c:	cmp	r2, #1
   14110:	bne	14154 <table_set_uint@@Base+0x74>
   14114:	ldr	r0, [r6]
   14118:	cmp	r0, #0
   1411c:	beq	14140 <table_set_uint@@Base+0x60>
   14120:	str	r8, [r0]
   14124:	mov	r2, r5
   14128:	mov	r0, r4
   1412c:	mov	r1, r7
   14130:	mov	r3, #1
   14134:	bl	12dd0 <table_notify@@Base>
   14138:	mov	r0, #0
   1413c:	pop	{r4, r5, r6, r7, r8, pc}
   14140:	mov	r0, #4
   14144:	bl	11bc0 <malloc@plt>
   14148:	cmp	r0, #0
   1414c:	str	r0, [r6]
   14150:	bne	14120 <table_set_uint@@Base+0x40>
   14154:	mvn	r0, #0
   14158:	pop	{r4, r5, r6, r7, r8, pc}

0001415c <table_set_int8@@Base>:
   1415c:	push	{r4, r5, r6, r7, r8, lr}
   14160:	mov	r5, r2
   14164:	mov	r4, r0
   14168:	mov	r8, r3
   1416c:	mov	r7, r1
   14170:	bl	15c94 <table_get_cell_ptr@@Base>
   14174:	mov	r1, r5
   14178:	mov	r6, r0
   1417c:	mov	r0, r4
   14180:	bl	1320c <table_get_col_ptr@@Base>
   14184:	ldr	r2, [r0, #4]
   14188:	cmp	r2, #2
   1418c:	bne	141d0 <table_set_int8@@Base+0x74>
   14190:	ldr	r0, [r6]
   14194:	cmp	r0, #0
   14198:	beq	141bc <table_set_int8@@Base+0x60>
   1419c:	strb	r8, [r0]
   141a0:	mov	r2, r5
   141a4:	mov	r0, r4
   141a8:	mov	r1, r7
   141ac:	mov	r3, #1
   141b0:	bl	12dd0 <table_notify@@Base>
   141b4:	mov	r0, #0
   141b8:	pop	{r4, r5, r6, r7, r8, pc}
   141bc:	mov	r0, #1
   141c0:	bl	11bc0 <malloc@plt>
   141c4:	cmp	r0, #0
   141c8:	str	r0, [r6]
   141cc:	bne	1419c <table_set_int8@@Base+0x40>
   141d0:	mvn	r0, #0
   141d4:	pop	{r4, r5, r6, r7, r8, pc}

000141d8 <table_set_uint8@@Base>:
   141d8:	push	{r4, r5, r6, r7, r8, lr}
   141dc:	mov	r5, r2
   141e0:	mov	r4, r0
   141e4:	mov	r8, r3
   141e8:	mov	r7, r1
   141ec:	bl	15c94 <table_get_cell_ptr@@Base>
   141f0:	mov	r1, r5
   141f4:	mov	r6, r0
   141f8:	mov	r0, r4
   141fc:	bl	1320c <table_get_col_ptr@@Base>
   14200:	ldr	r2, [r0, #4]
   14204:	cmp	r2, #3
   14208:	bne	1424c <table_set_uint8@@Base+0x74>
   1420c:	ldr	r0, [r6]
   14210:	cmp	r0, #0
   14214:	beq	14238 <table_set_uint8@@Base+0x60>
   14218:	strb	r8, [r0]
   1421c:	mov	r2, r5
   14220:	mov	r0, r4
   14224:	mov	r1, r7
   14228:	mov	r3, #1
   1422c:	bl	12dd0 <table_notify@@Base>
   14230:	mov	r0, #0
   14234:	pop	{r4, r5, r6, r7, r8, pc}
   14238:	mov	r0, #1
   1423c:	bl	11bc0 <malloc@plt>
   14240:	cmp	r0, #0
   14244:	str	r0, [r6]
   14248:	bne	14218 <table_set_uint8@@Base+0x40>
   1424c:	mvn	r0, #0
   14250:	pop	{r4, r5, r6, r7, r8, pc}

00014254 <table_set_int16@@Base>:
   14254:	push	{r4, r5, r6, r7, r8, lr}
   14258:	mov	r5, r2
   1425c:	mov	r4, r0
   14260:	mov	r8, r3
   14264:	mov	r7, r1
   14268:	bl	15c94 <table_get_cell_ptr@@Base>
   1426c:	mov	r1, r5
   14270:	mov	r6, r0
   14274:	mov	r0, r4
   14278:	bl	1320c <table_get_col_ptr@@Base>
   1427c:	ldr	r2, [r0, #4]
   14280:	cmp	r2, #4
   14284:	bne	142c8 <table_set_int16@@Base+0x74>
   14288:	ldr	r0, [r6]
   1428c:	cmp	r0, #0
   14290:	beq	142b4 <table_set_int16@@Base+0x60>
   14294:	strh	r8, [r0]
   14298:	mov	r2, r5
   1429c:	mov	r0, r4
   142a0:	mov	r1, r7
   142a4:	mov	r3, #1
   142a8:	bl	12dd0 <table_notify@@Base>
   142ac:	mov	r0, #0
   142b0:	pop	{r4, r5, r6, r7, r8, pc}
   142b4:	mov	r0, #2
   142b8:	bl	11bc0 <malloc@plt>
   142bc:	cmp	r0, #0
   142c0:	str	r0, [r6]
   142c4:	bne	14294 <table_set_int16@@Base+0x40>
   142c8:	mvn	r0, #0
   142cc:	pop	{r4, r5, r6, r7, r8, pc}

000142d0 <table_set_uint16@@Base>:
   142d0:	push	{r4, r5, r6, r7, r8, lr}
   142d4:	mov	r5, r2
   142d8:	mov	r4, r0
   142dc:	mov	r8, r3
   142e0:	mov	r7, r1
   142e4:	bl	15c94 <table_get_cell_ptr@@Base>
   142e8:	mov	r1, r5
   142ec:	mov	r6, r0
   142f0:	mov	r0, r4
   142f4:	bl	1320c <table_get_col_ptr@@Base>
   142f8:	ldr	r2, [r0, #4]
   142fc:	cmp	r2, #5
   14300:	bne	14344 <table_set_uint16@@Base+0x74>
   14304:	ldr	r0, [r6]
   14308:	cmp	r0, #0
   1430c:	beq	14330 <table_set_uint16@@Base+0x60>
   14310:	strh	r8, [r0]
   14314:	mov	r2, r5
   14318:	mov	r0, r4
   1431c:	mov	r1, r7
   14320:	mov	r3, #1
   14324:	bl	12dd0 <table_notify@@Base>
   14328:	mov	r0, #0
   1432c:	pop	{r4, r5, r6, r7, r8, pc}
   14330:	mov	r0, #2
   14334:	bl	11bc0 <malloc@plt>
   14338:	cmp	r0, #0
   1433c:	str	r0, [r6]
   14340:	bne	14310 <table_set_uint16@@Base+0x40>
   14344:	mvn	r0, #0
   14348:	pop	{r4, r5, r6, r7, r8, pc}

0001434c <table_set_int32@@Base>:
   1434c:	push	{r4, r5, r6, r7, r8, lr}
   14350:	mov	r5, r2
   14354:	mov	r4, r0
   14358:	mov	r8, r3
   1435c:	mov	r7, r1
   14360:	bl	15c94 <table_get_cell_ptr@@Base>
   14364:	mov	r1, r5
   14368:	mov	r6, r0
   1436c:	mov	r0, r4
   14370:	bl	1320c <table_get_col_ptr@@Base>
   14374:	ldr	r2, [r0, #4]
   14378:	cmp	r2, #6
   1437c:	bne	143c0 <table_set_int32@@Base+0x74>
   14380:	ldr	r0, [r6]
   14384:	cmp	r0, #0
   14388:	beq	143ac <table_set_int32@@Base+0x60>
   1438c:	str	r8, [r0]
   14390:	mov	r2, r5
   14394:	mov	r0, r4
   14398:	mov	r1, r7
   1439c:	mov	r3, #1
   143a0:	bl	12dd0 <table_notify@@Base>
   143a4:	mov	r0, #0
   143a8:	pop	{r4, r5, r6, r7, r8, pc}
   143ac:	mov	r0, #4
   143b0:	bl	11bc0 <malloc@plt>
   143b4:	cmp	r0, #0
   143b8:	str	r0, [r6]
   143bc:	bne	1438c <table_set_int32@@Base+0x40>
   143c0:	mvn	r0, #0
   143c4:	pop	{r4, r5, r6, r7, r8, pc}

000143c8 <table_set_uint32@@Base>:
   143c8:	push	{r4, r5, r6, r7, r8, lr}
   143cc:	mov	r5, r2
   143d0:	mov	r4, r0
   143d4:	mov	r8, r3
   143d8:	mov	r7, r1
   143dc:	bl	15c94 <table_get_cell_ptr@@Base>
   143e0:	mov	r1, r5
   143e4:	mov	r6, r0
   143e8:	mov	r0, r4
   143ec:	bl	1320c <table_get_col_ptr@@Base>
   143f0:	ldr	r2, [r0, #4]
   143f4:	cmp	r2, #7
   143f8:	bne	1443c <table_set_uint32@@Base+0x74>
   143fc:	ldr	r0, [r6]
   14400:	cmp	r0, #0
   14404:	beq	14428 <table_set_uint32@@Base+0x60>
   14408:	str	r8, [r0]
   1440c:	mov	r2, r5
   14410:	mov	r0, r4
   14414:	mov	r1, r7
   14418:	mov	r3, #1
   1441c:	bl	12dd0 <table_notify@@Base>
   14420:	mov	r0, #0
   14424:	pop	{r4, r5, r6, r7, r8, pc}
   14428:	mov	r0, #4
   1442c:	bl	11bc0 <malloc@plt>
   14430:	cmp	r0, #0
   14434:	str	r0, [r6]
   14438:	bne	14408 <table_set_uint32@@Base+0x40>
   1443c:	mvn	r0, #0
   14440:	pop	{r4, r5, r6, r7, r8, pc}

00014444 <table_set_int64@@Base>:
   14444:	push	{r4, r5, r6, r7, r8, lr}
   14448:	mov	r5, r2
   1444c:	mov	r4, r0
   14450:	mov	r7, r1
   14454:	bl	15c94 <table_get_cell_ptr@@Base>
   14458:	mov	r1, r5
   1445c:	mov	r6, r0
   14460:	mov	r0, r4
   14464:	bl	1320c <table_get_col_ptr@@Base>
   14468:	ldr	r0, [r0, #4]
   1446c:	cmp	r0, #8
   14470:	bne	144c0 <table_set_int64@@Base+0x7c>
   14474:	ldr	ip, [r6]
   14478:	cmp	ip, #0
   1447c:	beq	144ac <table_set_int64@@Base+0x68>
   14480:	add	r3, sp, #24
   14484:	mov	r2, r5
   14488:	ldm	r3!, {r0, r1}
   1448c:	mov	r3, #1
   14490:	str	r0, [ip]
   14494:	str	r1, [ip, #4]
   14498:	mov	r0, r4
   1449c:	mov	r1, r7
   144a0:	bl	12dd0 <table_notify@@Base>
   144a4:	mov	r0, #0
   144a8:	pop	{r4, r5, r6, r7, r8, pc}
   144ac:	bl	11bc0 <malloc@plt>
   144b0:	cmp	r0, #0
   144b4:	mov	ip, r0
   144b8:	str	r0, [r6]
   144bc:	bne	14480 <table_set_int64@@Base+0x3c>
   144c0:	mvn	r0, #0
   144c4:	pop	{r4, r5, r6, r7, r8, pc}

000144c8 <table_set_uint64@@Base>:
   144c8:	push	{r4, r5, r6, r7, r8, lr}
   144cc:	mov	r5, r2
   144d0:	mov	r4, r0
   144d4:	mov	r7, r1
   144d8:	bl	15c94 <table_get_cell_ptr@@Base>
   144dc:	mov	r1, r5
   144e0:	mov	r6, r0
   144e4:	mov	r0, r4
   144e8:	bl	1320c <table_get_col_ptr@@Base>
   144ec:	ldr	r3, [r0, #4]
   144f0:	cmp	r3, #9
   144f4:	bne	14548 <table_set_uint64@@Base+0x80>
   144f8:	ldr	ip, [r6]
   144fc:	cmp	ip, #0
   14500:	beq	14530 <table_set_uint64@@Base+0x68>
   14504:	add	r3, sp, #24
   14508:	mov	r2, r5
   1450c:	ldm	r3!, {r0, r1}
   14510:	mov	r3, #1
   14514:	str	r0, [ip]
   14518:	str	r1, [ip, #4]
   1451c:	mov	r0, r4
   14520:	mov	r1, r7
   14524:	bl	12dd0 <table_notify@@Base>
   14528:	mov	r0, #0
   1452c:	pop	{r4, r5, r6, r7, r8, pc}
   14530:	mov	r0, #8
   14534:	bl	11bc0 <malloc@plt>
   14538:	cmp	r0, #0
   1453c:	mov	ip, r0
   14540:	str	r0, [r6]
   14544:	bne	14504 <table_set_uint64@@Base+0x3c>
   14548:	mvn	r0, #0
   1454c:	pop	{r4, r5, r6, r7, r8, pc}

00014550 <table_set_short@@Base>:
   14550:	push	{r4, r5, r6, r7, r8, lr}
   14554:	mov	r5, r2
   14558:	mov	r4, r0
   1455c:	mov	r8, r3
   14560:	mov	r7, r1
   14564:	bl	15c94 <table_get_cell_ptr@@Base>
   14568:	mov	r1, r5
   1456c:	mov	r6, r0
   14570:	mov	r0, r4
   14574:	bl	1320c <table_get_col_ptr@@Base>
   14578:	ldr	r2, [r0, #4]
   1457c:	cmp	r2, #10
   14580:	bne	145c4 <table_set_short@@Base+0x74>
   14584:	ldr	r0, [r6]
   14588:	cmp	r0, #0
   1458c:	beq	145b0 <table_set_short@@Base+0x60>
   14590:	strh	r8, [r0]
   14594:	mov	r2, r5
   14598:	mov	r0, r4
   1459c:	mov	r1, r7
   145a0:	mov	r3, #1
   145a4:	bl	12dd0 <table_notify@@Base>
   145a8:	mov	r0, #0
   145ac:	pop	{r4, r5, r6, r7, r8, pc}
   145b0:	mov	r0, #2
   145b4:	bl	11bc0 <malloc@plt>
   145b8:	cmp	r0, #0
   145bc:	str	r0, [r6]
   145c0:	bne	14590 <table_set_short@@Base+0x40>
   145c4:	mvn	r0, #0
   145c8:	pop	{r4, r5, r6, r7, r8, pc}

000145cc <table_set_ushort@@Base>:
   145cc:	push	{r4, r5, r6, r7, r8, lr}
   145d0:	mov	r5, r2
   145d4:	mov	r4, r0
   145d8:	mov	r8, r3
   145dc:	mov	r7, r1
   145e0:	bl	15c94 <table_get_cell_ptr@@Base>
   145e4:	mov	r1, r5
   145e8:	mov	r6, r0
   145ec:	mov	r0, r4
   145f0:	bl	1320c <table_get_col_ptr@@Base>
   145f4:	ldr	r2, [r0, #4]
   145f8:	cmp	r2, #11
   145fc:	bne	14640 <table_set_ushort@@Base+0x74>
   14600:	ldr	r0, [r6]
   14604:	cmp	r0, #0
   14608:	beq	1462c <table_set_ushort@@Base+0x60>
   1460c:	strh	r8, [r0]
   14610:	mov	r2, r5
   14614:	mov	r0, r4
   14618:	mov	r1, r7
   1461c:	mov	r3, #1
   14620:	bl	12dd0 <table_notify@@Base>
   14624:	mov	r0, #0
   14628:	pop	{r4, r5, r6, r7, r8, pc}
   1462c:	mov	r0, #2
   14630:	bl	11bc0 <malloc@plt>
   14634:	cmp	r0, #0
   14638:	str	r0, [r6]
   1463c:	bne	1460c <table_set_ushort@@Base+0x40>
   14640:	mvn	r0, #0
   14644:	pop	{r4, r5, r6, r7, r8, pc}

00014648 <table_set_long@@Base>:
   14648:	push	{r4, r5, r6, r7, r8, lr}
   1464c:	mov	r5, r2
   14650:	mov	r4, r0
   14654:	mov	r8, r3
   14658:	mov	r7, r1
   1465c:	bl	15c94 <table_get_cell_ptr@@Base>
   14660:	mov	r1, r5
   14664:	mov	r6, r0
   14668:	mov	r0, r4
   1466c:	bl	1320c <table_get_col_ptr@@Base>
   14670:	ldr	r2, [r0, #4]
   14674:	cmp	r2, #12
   14678:	bne	146bc <table_set_long@@Base+0x74>
   1467c:	ldr	r0, [r6]
   14680:	cmp	r0, #0
   14684:	beq	146a8 <table_set_long@@Base+0x60>
   14688:	str	r8, [r0]
   1468c:	mov	r2, r5
   14690:	mov	r0, r4
   14694:	mov	r1, r7
   14698:	mov	r3, #1
   1469c:	bl	12dd0 <table_notify@@Base>
   146a0:	mov	r0, #0
   146a4:	pop	{r4, r5, r6, r7, r8, pc}
   146a8:	mov	r0, #4
   146ac:	bl	11bc0 <malloc@plt>
   146b0:	cmp	r0, #0
   146b4:	str	r0, [r6]
   146b8:	bne	14688 <table_set_long@@Base+0x40>
   146bc:	mvn	r0, #0
   146c0:	pop	{r4, r5, r6, r7, r8, pc}

000146c4 <table_set_ulong@@Base>:
   146c4:	push	{r4, r5, r6, r7, r8, lr}
   146c8:	mov	r5, r2
   146cc:	mov	r4, r0
   146d0:	mov	r8, r3
   146d4:	mov	r7, r1
   146d8:	bl	15c94 <table_get_cell_ptr@@Base>
   146dc:	mov	r1, r5
   146e0:	mov	r6, r0
   146e4:	mov	r0, r4
   146e8:	bl	1320c <table_get_col_ptr@@Base>
   146ec:	ldr	r2, [r0, #4]
   146f0:	cmp	r2, #13
   146f4:	bne	14738 <table_set_ulong@@Base+0x74>
   146f8:	ldr	r0, [r6]
   146fc:	cmp	r0, #0
   14700:	beq	14724 <table_set_ulong@@Base+0x60>
   14704:	str	r8, [r0]
   14708:	mov	r2, r5
   1470c:	mov	r0, r4
   14710:	mov	r1, r7
   14714:	mov	r3, #1
   14718:	bl	12dd0 <table_notify@@Base>
   1471c:	mov	r0, #0
   14720:	pop	{r4, r5, r6, r7, r8, pc}
   14724:	mov	r0, #4
   14728:	bl	11bc0 <malloc@plt>
   1472c:	cmp	r0, #0
   14730:	str	r0, [r6]
   14734:	bne	14704 <table_set_ulong@@Base+0x40>
   14738:	mvn	r0, #0
   1473c:	pop	{r4, r5, r6, r7, r8, pc}

00014740 <table_set_llong@@Base>:
   14740:	push	{r4, r5, r6, r7, r8, lr}
   14744:	mov	r5, r2
   14748:	mov	r4, r0
   1474c:	mov	r7, r1
   14750:	bl	15c94 <table_get_cell_ptr@@Base>
   14754:	mov	r1, r5
   14758:	mov	r6, r0
   1475c:	mov	r0, r4
   14760:	bl	1320c <table_get_col_ptr@@Base>
   14764:	ldr	r3, [r0, #4]
   14768:	cmp	r3, #14
   1476c:	bne	147c0 <table_set_llong@@Base+0x80>
   14770:	ldr	ip, [r6]
   14774:	cmp	ip, #0
   14778:	beq	147a8 <table_set_llong@@Base+0x68>
   1477c:	add	r3, sp, #24
   14780:	mov	r2, r5
   14784:	ldm	r3!, {r0, r1}
   14788:	mov	r3, #1
   1478c:	str	r0, [ip]
   14790:	str	r1, [ip, #4]
   14794:	mov	r0, r4
   14798:	mov	r1, r7
   1479c:	bl	12dd0 <table_notify@@Base>
   147a0:	mov	r0, #0
   147a4:	pop	{r4, r5, r6, r7, r8, pc}
   147a8:	mov	r0, #8
   147ac:	bl	11bc0 <malloc@plt>
   147b0:	cmp	r0, #0
   147b4:	mov	ip, r0
   147b8:	str	r0, [r6]
   147bc:	bne	1477c <table_set_llong@@Base+0x3c>
   147c0:	mvn	r0, #0
   147c4:	pop	{r4, r5, r6, r7, r8, pc}

000147c8 <table_set_ullong@@Base>:
   147c8:	push	{r4, r5, r6, r7, r8, lr}
   147cc:	mov	r5, r2
   147d0:	mov	r4, r0
   147d4:	mov	r7, r1
   147d8:	bl	15c94 <table_get_cell_ptr@@Base>
   147dc:	mov	r1, r5
   147e0:	mov	r6, r0
   147e4:	mov	r0, r4
   147e8:	bl	1320c <table_get_col_ptr@@Base>
   147ec:	ldr	r3, [r0, #4]
   147f0:	cmp	r3, #15
   147f4:	bne	14848 <table_set_ullong@@Base+0x80>
   147f8:	ldr	ip, [r6]
   147fc:	cmp	ip, #0
   14800:	beq	14830 <table_set_ullong@@Base+0x68>
   14804:	add	r3, sp, #24
   14808:	mov	r2, r5
   1480c:	ldm	r3!, {r0, r1}
   14810:	mov	r3, #1
   14814:	str	r0, [ip]
   14818:	str	r1, [ip, #4]
   1481c:	mov	r0, r4
   14820:	mov	r1, r7
   14824:	bl	12dd0 <table_notify@@Base>
   14828:	mov	r0, #0
   1482c:	pop	{r4, r5, r6, r7, r8, pc}
   14830:	mov	r0, #8
   14834:	bl	11bc0 <malloc@plt>
   14838:	cmp	r0, #0
   1483c:	mov	ip, r0
   14840:	str	r0, [r6]
   14844:	bne	14804 <table_set_ullong@@Base+0x3c>
   14848:	mvn	r0, #0
   1484c:	pop	{r4, r5, r6, r7, r8, pc}

00014850 <table_set_float@@Base>:
   14850:	push	{r4, r5, r6, r7, r8, lr}
   14854:	mov	r5, r2
   14858:	mov	r4, r0
   1485c:	mov	r7, r1
   14860:	vmov	r8, s0
   14864:	bl	15c94 <table_get_cell_ptr@@Base>
   14868:	mov	r1, r5
   1486c:	mov	r6, r0
   14870:	mov	r0, r4
   14874:	bl	1320c <table_get_col_ptr@@Base>
   14878:	ldr	r3, [r0, #4]
   1487c:	cmp	r3, #16
   14880:	bne	148c4 <table_set_float@@Base+0x74>
   14884:	ldr	r0, [r6]
   14888:	cmp	r0, #0
   1488c:	beq	148b0 <table_set_float@@Base+0x60>
   14890:	str	r8, [r0]
   14894:	mov	r2, r5
   14898:	mov	r0, r4
   1489c:	mov	r1, r7
   148a0:	mov	r3, #1
   148a4:	bl	12dd0 <table_notify@@Base>
   148a8:	mov	r0, #0
   148ac:	pop	{r4, r5, r6, r7, r8, pc}
   148b0:	mov	r0, #4
   148b4:	bl	11bc0 <malloc@plt>
   148b8:	cmp	r0, #0
   148bc:	str	r0, [r6]
   148c0:	bne	14890 <table_set_float@@Base+0x40>
   148c4:	mvn	r0, #0
   148c8:	pop	{r4, r5, r6, r7, r8, pc}

000148cc <table_set_double@@Base>:
   148cc:	push	{r4, r5, r6, r7, lr}
   148d0:	sub	sp, sp, #12
   148d4:	mov	r5, r2
   148d8:	mov	r4, r0
   148dc:	vstr	d0, [sp]
   148e0:	mov	r7, r1
   148e4:	bl	15c94 <table_get_cell_ptr@@Base>
   148e8:	mov	r1, r5
   148ec:	mov	r6, r0
   148f0:	mov	r0, r4
   148f4:	bl	1320c <table_get_col_ptr@@Base>
   148f8:	ldr	r3, [r0, #4]
   148fc:	cmp	r3, #17
   14900:	bne	14958 <table_set_double@@Base+0x8c>
   14904:	ldr	ip, [r6]
   14908:	cmp	ip, #0
   1490c:	beq	14940 <table_set_double@@Base+0x74>
   14910:	mov	r3, sp
   14914:	mov	r2, r5
   14918:	ldm	r3!, {r0, r1}
   1491c:	mov	r3, #1
   14920:	str	r0, [ip]
   14924:	str	r1, [ip, #4]
   14928:	mov	r0, r4
   1492c:	mov	r1, r7
   14930:	bl	12dd0 <table_notify@@Base>
   14934:	mov	r0, #0
   14938:	add	sp, sp, #12
   1493c:	pop	{r4, r5, r6, r7, pc}
   14940:	mov	r0, #8
   14944:	bl	11bc0 <malloc@plt>
   14948:	cmp	r0, #0
   1494c:	mov	ip, r0
   14950:	str	r0, [r6]
   14954:	bne	14910 <table_set_double@@Base+0x44>
   14958:	mvn	r0, #0
   1495c:	add	sp, sp, #12
   14960:	pop	{r4, r5, r6, r7, pc}

00014964 <table_set_ldouble@@Base>:
   14964:	push	{r4, r5, r6, r7, lr}
   14968:	sub	sp, sp, #12
   1496c:	mov	r5, r2
   14970:	mov	r4, r0
   14974:	vstr	d0, [sp]
   14978:	mov	r7, r1
   1497c:	bl	15c94 <table_get_cell_ptr@@Base>
   14980:	mov	r1, r5
   14984:	mov	r6, r0
   14988:	mov	r0, r4
   1498c:	bl	1320c <table_get_col_ptr@@Base>
   14990:	ldr	r3, [r0, #4]
   14994:	cmp	r3, #18
   14998:	bne	149f0 <table_set_ldouble@@Base+0x8c>
   1499c:	ldr	ip, [r6]
   149a0:	cmp	ip, #0
   149a4:	beq	149d8 <table_set_ldouble@@Base+0x74>
   149a8:	mov	r3, sp
   149ac:	mov	r2, r5
   149b0:	ldm	r3!, {r0, r1}
   149b4:	mov	r3, #1
   149b8:	str	r0, [ip]
   149bc:	str	r1, [ip, #4]
   149c0:	mov	r0, r4
   149c4:	mov	r1, r7
   149c8:	bl	12dd0 <table_notify@@Base>
   149cc:	mov	r0, #0
   149d0:	add	sp, sp, #12
   149d4:	pop	{r4, r5, r6, r7, pc}
   149d8:	mov	r0, #8
   149dc:	bl	11bc0 <malloc@plt>
   149e0:	cmp	r0, #0
   149e4:	mov	ip, r0
   149e8:	str	r0, [r6]
   149ec:	bne	149a8 <table_set_ldouble@@Base+0x44>
   149f0:	mvn	r0, #0
   149f4:	add	sp, sp, #12
   149f8:	pop	{r4, r5, r6, r7, pc}

000149fc <table_set_string@@Base>:
   149fc:	push	{r4, r5, r6, r7, r8, lr}
   14a00:	mov	r5, r2
   14a04:	mov	r7, r3
   14a08:	mov	r4, r0
   14a0c:	mov	r8, r1
   14a10:	bl	15c94 <table_get_cell_ptr@@Base>
   14a14:	mov	r1, r5
   14a18:	mov	r6, r0
   14a1c:	mov	r0, r4
   14a20:	bl	1320c <table_get_col_ptr@@Base>
   14a24:	ldr	r3, [r0, #4]
   14a28:	cmp	r3, #21
   14a2c:	bne	14a74 <table_set_string@@Base+0x78>
   14a30:	mov	r0, r7
   14a34:	bl	11be4 <strlen@plt>
   14a38:	add	r1, r0, #1
   14a3c:	ldr	r0, [r6]
   14a40:	bl	11ba8 <realloc@plt>
   14a44:	cmp	r0, #0
   14a48:	str	r0, [r6]
   14a4c:	beq	14a74 <table_set_string@@Base+0x78>
   14a50:	mov	r1, r7
   14a54:	bl	11bb4 <strcpy@plt>
   14a58:	mov	r0, r4
   14a5c:	mov	r2, r5
   14a60:	mov	r1, r8
   14a64:	mov	r3, #1
   14a68:	bl	12dd0 <table_notify@@Base>
   14a6c:	mov	r0, #0
   14a70:	pop	{r4, r5, r6, r7, r8, pc}
   14a74:	mvn	r0, #0
   14a78:	pop	{r4, r5, r6, r7, r8, pc}

00014a7c <table_set_char@@Base>:
   14a7c:	push	{r4, r5, r6, r7, r8, lr}
   14a80:	mov	r5, r2
   14a84:	mov	r4, r0
   14a88:	mov	r8, r3
   14a8c:	mov	r7, r1
   14a90:	bl	15c94 <table_get_cell_ptr@@Base>
   14a94:	mov	r1, r5
   14a98:	mov	r6, r0
   14a9c:	mov	r0, r4
   14aa0:	bl	1320c <table_get_col_ptr@@Base>
   14aa4:	ldr	r2, [r0, #4]
   14aa8:	cmp	r2, #19
   14aac:	bne	14af0 <table_set_char@@Base+0x74>
   14ab0:	ldr	r0, [r6]
   14ab4:	cmp	r0, #0
   14ab8:	beq	14adc <table_set_char@@Base+0x60>
   14abc:	strb	r8, [r0]
   14ac0:	mov	r2, r5
   14ac4:	mov	r0, r4
   14ac8:	mov	r1, r7
   14acc:	mov	r3, #1
   14ad0:	bl	12dd0 <table_notify@@Base>
   14ad4:	mov	r0, #0
   14ad8:	pop	{r4, r5, r6, r7, r8, pc}
   14adc:	mov	r0, #1
   14ae0:	bl	11bc0 <malloc@plt>
   14ae4:	cmp	r0, #0
   14ae8:	str	r0, [r6]
   14aec:	bne	14abc <table_set_char@@Base+0x40>
   14af0:	mvn	r0, #0
   14af4:	pop	{r4, r5, r6, r7, r8, pc}

00014af8 <table_set_uchar@@Base>:
   14af8:	push	{r4, r5, r6, r7, r8, lr}
   14afc:	mov	r5, r2
   14b00:	mov	r4, r0
   14b04:	mov	r8, r3
   14b08:	mov	r7, r1
   14b0c:	bl	15c94 <table_get_cell_ptr@@Base>
   14b10:	mov	r1, r5
   14b14:	mov	r6, r0
   14b18:	mov	r0, r4
   14b1c:	bl	1320c <table_get_col_ptr@@Base>
   14b20:	ldr	r2, [r0, #4]
   14b24:	cmp	r2, #20
   14b28:	bne	14b6c <table_set_uchar@@Base+0x74>
   14b2c:	ldr	r0, [r6]
   14b30:	cmp	r0, #0
   14b34:	beq	14b58 <table_set_uchar@@Base+0x60>
   14b38:	strb	r8, [r0]
   14b3c:	mov	r2, r5
   14b40:	mov	r0, r4
   14b44:	mov	r1, r7
   14b48:	mov	r3, #1
   14b4c:	bl	12dd0 <table_notify@@Base>
   14b50:	mov	r0, #0
   14b54:	pop	{r4, r5, r6, r7, r8, pc}
   14b58:	mov	r0, #1
   14b5c:	bl	11bc0 <malloc@plt>
   14b60:	cmp	r0, #0
   14b64:	str	r0, [r6]
   14b68:	bne	14b38 <table_set_uchar@@Base+0x40>
   14b6c:	mvn	r0, #0
   14b70:	pop	{r4, r5, r6, r7, r8, pc}

00014b74 <table_set_ptr@@Base>:
   14b74:	push	{r4, r5, r6, r7, r8, lr}
   14b78:	mov	r5, r2
   14b7c:	mov	r4, r0
   14b80:	mov	r8, r3
   14b84:	mov	r6, r1
   14b88:	bl	15c94 <table_get_cell_ptr@@Base>
   14b8c:	mov	r1, r5
   14b90:	mov	r7, r0
   14b94:	mov	r0, r4
   14b98:	bl	1320c <table_get_col_ptr@@Base>
   14b9c:	ldr	r2, [r0, #4]
   14ba0:	cmp	r2, #23
   14ba4:	bne	14bc8 <table_set_ptr@@Base+0x54>
   14ba8:	mov	r0, r4
   14bac:	str	r8, [r7]
   14bb0:	mov	r2, r5
   14bb4:	mov	r1, r6
   14bb8:	mov	r3, #1
   14bbc:	bl	12dd0 <table_notify@@Base>
   14bc0:	mov	r0, #0
   14bc4:	pop	{r4, r5, r6, r7, r8, pc}
   14bc8:	mvn	r0, #0
   14bcc:	pop	{r4, r5, r6, r7, r8, pc}

00014bd0 <table_serialize@@Base>:
   14bd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14bd4:	mov	r5, r1
   14bd8:	mov	r6, r0
   14bdc:	bl	13ac8 <table_get_row_length@@Base>
   14be0:	add	r5, r5, #8
   14be4:	mov	r8, r0
   14be8:	mov	r0, r6
   14bec:	bl	12ec0 <table_get_column_length@@Base>
   14bf0:	str	r0, [r5, #-8]
   14bf4:	ldr	r3, [r6, #8]
   14bf8:	cmp	r0, #0
   14bfc:	str	r3, [r5, #-4]
   14c00:	mov	r7, r0
   14c04:	ble	14c54 <table_serialize@@Base+0x84>
   14c08:	mov	r4, #0
   14c0c:	mov	r1, r4
   14c10:	mov	r0, r6
   14c14:	bl	131fc <table_get_column_name@@Base>
   14c18:	mov	sl, r0
   14c1c:	bl	11be4 <strlen@plt>
   14c20:	mov	r1, r4
   14c24:	add	r4, r4, #1
   14c28:	add	r9, r0, #1
   14c2c:	mov	r0, r6
   14c30:	bl	12f30 <table_get_column_data_type@@Base>
   14c34:	mov	r1, sl
   14c38:	mov	r2, r9
   14c3c:	str	r0, [r5], #4
   14c40:	mov	r0, r5
   14c44:	bl	11c14 <strncpy@plt>
   14c48:	cmp	r7, r4
   14c4c:	add	r5, r5, r9
   14c50:	bne	14c0c <table_serialize@@Base+0x3c>
   14c54:	str	r8, [r5]
   14c58:	ldr	r3, [r6, #24]
   14c5c:	cmp	r8, #0
   14c60:	str	r3, [r5, #4]
   14c64:	movgt	r9, #0
   14c68:	add	r5, r5, #8
   14c6c:	ble	14d24 <table_serialize@@Base+0x154>
   14c70:	cmp	r7, #0
   14c74:	movgt	r4, #0
   14c78:	ble	14d18 <table_serialize@@Base+0x148>
   14c7c:	mov	r1, r4
   14c80:	mov	r0, r6
   14c84:	bl	12f30 <table_get_column_data_type@@Base>
   14c88:	cmp	r0, #23
   14c8c:	ldrls	pc, [pc, r0, lsl #2]
   14c90:	b	14d0c <table_serialize@@Base+0x13c>
   14c94:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14c98:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14c9c:	andeq	r4, r1, ip, lsr #28
   14ca0:	andeq	r4, r1, r0, lsr #27
   14ca4:			; <UNDEFINED> instruction: 0x00014dbc
   14ca8:	ldrdeq	r4, [r1], -r8
   14cac:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14cb0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14cb4:	andeq	r4, r1, r4, lsl #27
   14cb8:	andeq	r4, r1, r4, lsl #27
   14cbc:			; <UNDEFINED> instruction: 0x00014dbc
   14cc0:	ldrdeq	r4, [r1], -r8
   14cc4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14cc8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ccc:	andeq	r4, r1, r4, lsl #27
   14cd0:	andeq	r4, r1, r4, lsl #27
   14cd4:	andeq	r4, r1, r0, lsl lr
   14cd8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14cdc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ce0:	andeq	r4, r1, r0, lsr #27
   14ce4:	andeq	r4, r1, r0, lsr #27
   14ce8:	andeq	r4, r1, r8, asr #28
   14cec:	andeq	r4, r1, r0, lsr #27
   14cf0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14cf4:	mov	r2, r4
   14cf8:	mov	r1, r9
   14cfc:	mov	r0, r6
   14d00:	bl	1386c <table_get@@Base>
   14d04:	ldr	r3, [r0]
   14d08:	str	r3, [r5], #4
   14d0c:	add	r4, r4, #1
   14d10:	cmp	r7, r4
   14d14:	bne	14c7c <table_serialize@@Base+0xac>
   14d18:	add	r9, r9, #1
   14d1c:	cmp	r8, r9
   14d20:	bne	14c70 <table_serialize@@Base+0xa0>
   14d24:	ldr	r3, [r6, #32]
   14d28:	str	r3, [r5]
   14d2c:	ldr	r3, [r6, #48]	; 0x30
   14d30:	str	r3, [r5, #4]
   14d34:	ldr	r3, [r6, #32]
   14d38:	cmp	r3, #0
   14d3c:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d40:	add	r5, r5, #20
   14d44:	mov	r3, #0
   14d48:	ldr	r2, [r6, #36]	; 0x24
   14d4c:	add	r5, r5, #12
   14d50:	ldr	r2, [r2, r3, lsl #2]
   14d54:	str	r2, [r5, #-24]	; 0xffffffe8
   14d58:	ldr	r2, [r6, #40]	; 0x28
   14d5c:	ldr	r2, [r2, r3, lsl #2]
   14d60:	str	r2, [r5, #-20]	; 0xffffffec
   14d64:	ldr	r2, [r6, #44]	; 0x2c
   14d68:	ldr	r2, [r2, r3, lsl #2]
   14d6c:	add	r3, r3, #1
   14d70:	str	r2, [r5, #-16]
   14d74:	ldr	r2, [r6, #32]
   14d78:	cmp	r2, r3
   14d7c:	bgt	14d48 <table_serialize@@Base+0x178>
   14d80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d84:	mov	r2, r4
   14d88:	mov	r1, r9
   14d8c:	mov	r0, r6
   14d90:	bl	1386c <table_get@@Base>
   14d94:	ldrd	r2, [r0]
   14d98:	strd	r2, [r5], #8
   14d9c:	b	14d0c <table_serialize@@Base+0x13c>
   14da0:	mov	r2, r4
   14da4:	mov	r1, r9
   14da8:	mov	r0, r6
   14dac:	bl	1386c <table_get@@Base>
   14db0:	ldrb	r3, [r0]
   14db4:	strb	r3, [r5], #1
   14db8:	b	14d0c <table_serialize@@Base+0x13c>
   14dbc:	mov	r2, r4
   14dc0:	mov	r1, r9
   14dc4:	mov	r0, r6
   14dc8:	bl	1386c <table_get@@Base>
   14dcc:	ldrsh	r3, [r0]
   14dd0:	strh	r3, [r5], #2
   14dd4:	b	14d0c <table_serialize@@Base+0x13c>
   14dd8:	mov	r2, r4
   14ddc:	mov	r1, r9
   14de0:	mov	r0, r6
   14de4:	bl	1386c <table_get@@Base>
   14de8:	ldrh	r3, [r0]
   14dec:	strh	r3, [r5], #2
   14df0:	b	14d0c <table_serialize@@Base+0x13c>
   14df4:	mov	r2, r4
   14df8:	mov	r1, r9
   14dfc:	mov	r0, r6
   14e00:	bl	1386c <table_get@@Base>
   14e04:	ldrd	r2, [r0]
   14e08:	strd	r2, [r5], #8
   14e0c:	b	14d0c <table_serialize@@Base+0x13c>
   14e10:	mov	r2, r4
   14e14:	mov	r1, r9
   14e18:	mov	r0, r6
   14e1c:	bl	1386c <table_get@@Base>
   14e20:	ldr	r3, [r0]
   14e24:	str	r3, [r5], #4
   14e28:	b	14d0c <table_serialize@@Base+0x13c>
   14e2c:	mov	r2, r4
   14e30:	mov	r1, r9
   14e34:	mov	r0, r6
   14e38:	bl	1386c <table_get@@Base>
   14e3c:	ldrsb	r3, [r0]
   14e40:	strb	r3, [r5], #1
   14e44:	b	14d0c <table_serialize@@Base+0x13c>
   14e48:	mov	r2, r4
   14e4c:	mov	r1, r9
   14e50:	mov	r0, r6
   14e54:	bl	13a34 <table_get_string@@Base>
   14e58:	mov	sl, r0
   14e5c:	bl	11be4 <strlen@plt>
   14e60:	mov	r1, sl
   14e64:	add	sl, r0, #1
   14e68:	mov	r2, sl
   14e6c:	mov	r0, r5
   14e70:	bl	11c14 <strncpy@plt>
   14e74:	add	r5, r5, sl
   14e78:	b	14d0c <table_serialize@@Base+0x13c>

00014e7c <table_deserialize@@Base>:
   14e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e80:	sub	sp, sp, #12
   14e84:	mov	r5, r0
   14e88:	bl	124cc <table_new@@Base>
   14e8c:	ldr	r8, [r5]
   14e90:	ldr	r3, [r5, #4]
   14e94:	cmp	r8, #0
   14e98:	mov	r7, r0
   14e9c:	str	r3, [r0, #8]
   14ea0:	add	r0, r5, #8
   14ea4:	ble	14edc <table_deserialize@@Base+0x60>
   14ea8:	mov	r5, #0
   14eac:	add	r4, r0, #4
   14eb0:	ldr	r2, [r0]
   14eb4:	mov	r1, r4
   14eb8:	mov	r0, r7
   14ebc:	bl	12f44 <table_add_column@@Base>
   14ec0:	mov	r0, r4
   14ec4:	bl	11be4 <strlen@plt>
   14ec8:	add	r5, r5, #1
   14ecc:	cmp	r8, r5
   14ed0:	add	r0, r0, #1
   14ed4:	add	r0, r4, r0
   14ed8:	bne	14eac <table_deserialize@@Base+0x30>
   14edc:	ldr	r9, [r0]
   14ee0:	ldr	r3, [r0, #4]
   14ee4:	cmp	r9, #0
   14ee8:	str	r3, [r7, #24]
   14eec:	add	r5, r0, #8
   14ef0:	ble	14fb0 <table_deserialize@@Base+0x134>
   14ef4:	mov	r6, #0
   14ef8:	mov	r0, r7
   14efc:	bl	13ad0 <table_add_row@@Base>
   14f00:	cmp	r8, #0
   14f04:	ble	14fa4 <table_deserialize@@Base+0x128>
   14f08:	mov	r4, #0
   14f0c:	mov	r1, r4
   14f10:	mov	r0, r7
   14f14:	bl	12f30 <table_get_column_data_type@@Base>
   14f18:	cmp	r0, #23
   14f1c:	ldrls	pc, [pc, r0, lsl #2]
   14f20:	b	14f98 <table_deserialize@@Base+0x11c>
   14f24:	andeq	r5, r1, r4, lsr r0
   14f28:	andeq	r5, r1, r0, asr #3
   14f2c:	andeq	r5, r1, r8, lsr #3
   14f30:	muleq	r1, r0, r1
   14f34:	andeq	r5, r1, r8, ror r1
   14f38:	andeq	r5, r1, r4, lsr #4
   14f3c:	andeq	r5, r1, ip, lsl #4
   14f40:	strdeq	r5, [r1], -r4
   14f44:	ldrdeq	r5, [r1], -r8
   14f48:	andeq	r5, r1, ip, asr r1
   14f4c:	andeq	r5, r1, r4, asr #2
   14f50:	andeq	r5, r1, ip, lsr #2
   14f54:	andeq	r5, r1, r4, lsl r1
   14f58:	strdeq	r5, [r1], -ip
   14f5c:	andeq	r5, r1, r0, ror #1
   14f60:	andeq	r5, r1, r4, asr #1
   14f64:	andeq	r5, r1, ip, lsr #1
   14f68:	muleq	r1, r4, r0
   14f6c:	andeq	r5, r1, ip, ror r0
   14f70:	andeq	r5, r1, r4, rrx
   14f74:	andeq	r5, r1, ip, asr #32
   14f78:	andeq	r5, r1, ip
   14f7c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14f80:	andeq	r4, r1, r4, lsl #31
   14f84:	ldr	r3, [r5], #4
   14f88:	mov	r2, r4
   14f8c:	mov	r1, r6
   14f90:	mov	r0, r7
   14f94:	bl	14b74 <table_set_ptr@@Base>
   14f98:	add	r4, r4, #1
   14f9c:	cmp	r8, r4
   14fa0:	bne	14f0c <table_deserialize@@Base+0x90>
   14fa4:	add	r6, r6, #1
   14fa8:	cmp	r9, r6
   14fac:	bne	14ef8 <table_deserialize@@Base+0x7c>
   14fb0:	ldr	r6, [r5]
   14fb4:	ldr	r3, [r5, #4]
   14fb8:	cmp	r6, #0
   14fbc:	str	r3, [r7, #48]	; 0x30
   14fc0:	ble	14fe8 <table_deserialize@@Base+0x16c>
   14fc4:	add	r5, r5, #20
   14fc8:	mov	r4, #0
   14fcc:	ldmdb	r5, {r1, r2, r3}
   14fd0:	add	r4, r4, #1
   14fd4:	mov	r0, r7
   14fd8:	bl	12b94 <table_register_callback@@Base>
   14fdc:	cmp	r6, r4
   14fe0:	add	r5, r5, #12
   14fe4:	bne	14fcc <table_deserialize@@Base+0x150>
   14fe8:	mov	r0, r7
   14fec:	add	sp, sp, #12
   14ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ff4:	ldrb	r3, [r5], #1
   14ff8:	mov	r2, r4
   14ffc:	mov	r1, r6
   15000:	mov	r0, r7
   15004:	bl	13fe8 <table_set_bool@@Base>
   15008:	b	14f98 <table_deserialize@@Base+0x11c>
   1500c:	mov	r3, r5
   15010:	mov	r2, r4
   15014:	mov	r1, r6
   15018:	mov	r0, r7
   1501c:	bl	149fc <table_set_string@@Base>
   15020:	mov	r0, r5
   15024:	bl	11be4 <strlen@plt>
   15028:	add	r0, r0, #1
   1502c:	add	r5, r5, r0
   15030:	b	14f98 <table_deserialize@@Base+0x11c>
   15034:	ldr	r3, [r5], #4
   15038:	mov	r2, r4
   1503c:	mov	r1, r6
   15040:	mov	r0, r7
   15044:	bl	14064 <table_set_int@@Base>
   15048:	b	14f98 <table_deserialize@@Base+0x11c>
   1504c:	ldrb	r3, [r5], #1
   15050:	mov	r2, r4
   15054:	mov	r1, r6
   15058:	mov	r0, r7
   1505c:	bl	14af8 <table_set_uchar@@Base>
   15060:	b	14f98 <table_deserialize@@Base+0x11c>
   15064:	ldrb	r3, [r5], #1
   15068:	mov	r2, r4
   1506c:	mov	r1, r6
   15070:	mov	r0, r7
   15074:	bl	14a7c <table_set_char@@Base>
   15078:	b	14f98 <table_deserialize@@Base+0x11c>
   1507c:	vldmia	r5!, {d0}
   15080:	mov	r2, r4
   15084:	mov	r1, r6
   15088:	mov	r0, r7
   1508c:	bl	14964 <table_set_ldouble@@Base>
   15090:	b	14f98 <table_deserialize@@Base+0x11c>
   15094:	vldmia	r5!, {d0}
   15098:	mov	r2, r4
   1509c:	mov	r1, r6
   150a0:	mov	r0, r7
   150a4:	bl	148cc <table_set_double@@Base>
   150a8:	b	14f98 <table_deserialize@@Base+0x11c>
   150ac:	vldmia	r5!, {s0}
   150b0:	mov	r2, r4
   150b4:	mov	r1, r6
   150b8:	mov	r0, r7
   150bc:	bl	14850 <table_set_float@@Base>
   150c0:	b	14f98 <table_deserialize@@Base+0x11c>
   150c4:	ldrd	sl, [r5], #8
   150c8:	mov	r2, r4
   150cc:	mov	r1, r6
   150d0:	strd	sl, [sp]
   150d4:	mov	r0, r7
   150d8:	bl	147c8 <table_set_ullong@@Base>
   150dc:	b	14f98 <table_deserialize@@Base+0x11c>
   150e0:	ldrd	sl, [r5], #8
   150e4:	mov	r2, r4
   150e8:	mov	r1, r6
   150ec:	strd	sl, [sp]
   150f0:	mov	r0, r7
   150f4:	bl	14740 <table_set_llong@@Base>
   150f8:	b	14f98 <table_deserialize@@Base+0x11c>
   150fc:	ldr	r3, [r5], #4
   15100:	mov	r2, r4
   15104:	mov	r1, r6
   15108:	mov	r0, r7
   1510c:	bl	146c4 <table_set_ulong@@Base>
   15110:	b	14f98 <table_deserialize@@Base+0x11c>
   15114:	ldr	r3, [r5], #4
   15118:	mov	r2, r4
   1511c:	mov	r1, r6
   15120:	mov	r0, r7
   15124:	bl	14648 <table_set_long@@Base>
   15128:	b	14f98 <table_deserialize@@Base+0x11c>
   1512c:	ldrh	r3, [r5], #2
   15130:	mov	r2, r4
   15134:	mov	r1, r6
   15138:	mov	r0, r7
   1513c:	bl	145cc <table_set_ushort@@Base>
   15140:	b	14f98 <table_deserialize@@Base+0x11c>
   15144:	ldrsh	r3, [r5], #2
   15148:	mov	r2, r4
   1514c:	mov	r1, r6
   15150:	mov	r0, r7
   15154:	bl	14550 <table_set_short@@Base>
   15158:	b	14f98 <table_deserialize@@Base+0x11c>
   1515c:	ldrd	sl, [r5], #8
   15160:	mov	r2, r4
   15164:	mov	r1, r6
   15168:	strd	sl, [sp]
   1516c:	mov	r0, r7
   15170:	bl	144c8 <table_set_uint64@@Base>
   15174:	b	14f98 <table_deserialize@@Base+0x11c>
   15178:	ldrsh	r3, [r5], #2
   1517c:	mov	r2, r4
   15180:	mov	r1, r6
   15184:	mov	r0, r7
   15188:	bl	14254 <table_set_int16@@Base>
   1518c:	b	14f98 <table_deserialize@@Base+0x11c>
   15190:	ldrb	r3, [r5], #1
   15194:	mov	r2, r4
   15198:	mov	r1, r6
   1519c:	mov	r0, r7
   151a0:	bl	141d8 <table_set_uint8@@Base>
   151a4:	b	14f98 <table_deserialize@@Base+0x11c>
   151a8:	ldrsb	r3, [r5], #1
   151ac:	mov	r2, r4
   151b0:	mov	r1, r6
   151b4:	mov	r0, r7
   151b8:	bl	1415c <table_set_int8@@Base>
   151bc:	b	14f98 <table_deserialize@@Base+0x11c>
   151c0:	ldr	r3, [r5], #4
   151c4:	mov	r2, r4
   151c8:	mov	r1, r6
   151cc:	mov	r0, r7
   151d0:	bl	140e0 <table_set_uint@@Base>
   151d4:	b	14f98 <table_deserialize@@Base+0x11c>
   151d8:	ldrd	sl, [r5], #8
   151dc:	mov	r2, r4
   151e0:	mov	r1, r6
   151e4:	strd	sl, [sp]
   151e8:	mov	r0, r7
   151ec:	bl	14444 <table_set_int64@@Base>
   151f0:	b	14f98 <table_deserialize@@Base+0x11c>
   151f4:	ldr	r3, [r5], #4
   151f8:	mov	r2, r4
   151fc:	mov	r1, r6
   15200:	mov	r0, r7
   15204:	bl	143c8 <table_set_uint32@@Base>
   15208:	b	14f98 <table_deserialize@@Base+0x11c>
   1520c:	ldr	r3, [r5], #4
   15210:	mov	r2, r4
   15214:	mov	r1, r6
   15218:	mov	r0, r7
   1521c:	bl	1434c <table_set_int32@@Base>
   15220:	b	14f98 <table_deserialize@@Base+0x11c>
   15224:	ldrh	r3, [r5], #2
   15228:	mov	r2, r4
   1522c:	mov	r1, r6
   15230:	mov	r0, r7
   15234:	bl	142d0 <table_set_uint16@@Base>
   15238:	b	14f98 <table_deserialize@@Base+0x11c>

0001523c <table_cell_init@@Base>:
   1523c:	push	{r4, lr}
   15240:	mov	r4, r2
   15244:	bl	13c80 <table_get_row_ptr@@Base>
   15248:	mov	r2, #0
   1524c:	ldr	r3, [r0]
   15250:	str	r2, [r3, r4, lsl #2]
   15254:	pop	{r4, pc}

00015258 <table_cell_destroy@@Base>:
   15258:	push	{r4, r5, r6, lr}
   1525c:	mov	r6, r1
   15260:	mov	r1, r2
   15264:	mov	r4, r2
   15268:	mov	r5, r0
   1526c:	bl	12f30 <table_get_column_data_type@@Base>
   15270:	cmp	r0, #23
   15274:	popeq	{r4, r5, r6, pc}
   15278:	mov	r1, r6
   1527c:	mov	r0, r5
   15280:	bl	13c80 <table_get_row_ptr@@Base>
   15284:	ldr	r3, [r0]
   15288:	ldr	r0, [r3, r4, lsl #2]
   1528c:	cmp	r0, #0
   15290:	popeq	{r4, r5, r6, pc}
   15294:	pop	{r4, r5, r6, lr}
   15298:	b	11b90 <free@plt>

0001529c <table_cell_to_buffer@@Base>:
   1529c:	push	{r4, r5, r6, r7, lr}
   152a0:	mov	r7, r1
   152a4:	sub	sp, sp, #12
   152a8:	mov	r1, r2
   152ac:	mov	r4, r2
   152b0:	mov	r5, r3
   152b4:	mov	r6, r0
   152b8:	bl	12f30 <table_get_column_data_type@@Base>
   152bc:	cmp	r0, #23
   152c0:	ldrls	pc, [pc, r0, lsl #2]
   152c4:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   152c8:	andeq	r5, r1, r0, lsr #12
   152cc:	andeq	r5, r1, ip, lsl #12
   152d0:	strdeq	r5, [r1], -r8
   152d4:	andeq	r5, r1, r4, ror #11
   152d8:	ldrdeq	r5, [r1], -r0
   152dc:			; <UNDEFINED> instruction: 0x000155bc
   152e0:	andeq	r5, r1, r8, lsr #11
   152e4:	andeq	r5, r1, r8, ror r5
   152e8:	andeq	r5, r1, r4, ror #10
   152ec:	andeq	r5, r1, r0, asr r5
   152f0:	andeq	r5, r1, r8, lsr #10
   152f4:	andeq	r5, r1, r0, lsl #10
   152f8:	ldrdeq	r5, [r1], -r8
   152fc:			; <UNDEFINED> instruction: 0x000154b0
   15300:	andeq	r5, r1, r8, lsl #9
   15304:	andeq	r5, r1, r0, ror #8
   15308:	andeq	r5, r1, r4, lsr r4
   1530c:	andeq	r5, r1, ip, lsl #8
   15310:	andeq	r5, r1, r4, ror #7
   15314:	ldrdeq	r5, [r1], -r0
   15318:	andeq	r5, r1, r8, lsr #7
   1531c:	andeq	r5, r1, r0, lsl #7
   15320:	andeq	r5, r1, r8, lsr #6
   15324:	andeq	r5, r1, r8, asr r3
   15328:	mov	r2, r4
   1532c:	mov	r1, r7
   15330:	mov	r0, r6
   15334:	bl	1387c <table_get_bool@@Base>
   15338:	mov	r3, r0
   1533c:	ldr	r2, [pc, #752]	; 15634 <table_cell_to_buffer@@Base+0x398>
   15340:	mov	r0, r5
   15344:	ldr	r1, [sp, #32]
   15348:	bl	11bfc <snprintf@plt>
   1534c:	mov	r0, #0
   15350:	add	sp, sp, #12
   15354:	pop	{r4, r5, r6, r7, pc}
   15358:	mov	r2, r4
   1535c:	mov	r1, r7
   15360:	mov	r0, r6
   15364:	bl	13a44 <table_get_ptr@@Base>
   15368:	ldr	r2, [pc, #712]	; 15638 <table_cell_to_buffer@@Base+0x39c>
   1536c:	ldr	r1, [sp, #32]
   15370:	mov	r3, r0
   15374:	mov	r0, r5
   15378:	bl	11bfc <snprintf@plt>
   1537c:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   15380:	mov	r2, r4
   15384:	mov	r1, r7
   15388:	mov	r0, r6
   1538c:	bl	13a34 <table_get_string@@Base>
   15390:	ldr	r2, [pc, #676]	; 1563c <table_cell_to_buffer@@Base+0x3a0>
   15394:	ldr	r1, [sp, #32]
   15398:	mov	r3, r0
   1539c:	mov	r0, r5
   153a0:	bl	11bfc <snprintf@plt>
   153a4:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   153a8:	mov	r2, r4
   153ac:	mov	r1, r7
   153b0:	mov	r0, r6
   153b4:	bl	13a20 <table_get_uchar@@Base>
   153b8:	mov	r3, r0
   153bc:	ldr	r2, [pc, #636]	; 15640 <table_cell_to_buffer@@Base+0x3a4>
   153c0:	mov	r0, r5
   153c4:	ldr	r1, [sp, #32]
   153c8:	bl	11bfc <snprintf@plt>
   153cc:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   153d0:	mov	r2, r4
   153d4:	mov	r1, r7
   153d8:	mov	r0, r6
   153dc:	bl	13a0c <table_get_char@@Base>
   153e0:	b	153b8 <table_cell_to_buffer@@Base+0x11c>
   153e4:	mov	r2, r4
   153e8:	mov	r1, r7
   153ec:	mov	r0, r6
   153f0:	bl	139f8 <table_get_ldouble@@Base>
   153f4:	mov	r0, r5
   153f8:	ldr	r2, [pc, #580]	; 15644 <table_cell_to_buffer@@Base+0x3a8>
   153fc:	ldr	r1, [sp, #32]
   15400:	vstr	d0, [sp]
   15404:	bl	11bfc <snprintf@plt>
   15408:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   1540c:	mov	r2, r4
   15410:	mov	r1, r7
   15414:	mov	r0, r6
   15418:	bl	139e4 <table_get_double@@Base>
   1541c:	mov	r0, r5
   15420:	ldr	r2, [pc, #544]	; 15648 <table_cell_to_buffer@@Base+0x3ac>
   15424:	ldr	r1, [sp, #32]
   15428:	vstr	d0, [sp]
   1542c:	bl	11bfc <snprintf@plt>
   15430:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   15434:	mov	r2, r4
   15438:	mov	r1, r7
   1543c:	mov	r0, r6
   15440:	bl	139d0 <table_get_float@@Base>
   15444:	mov	r0, r5
   15448:	ldr	r2, [pc, #508]	; 1564c <table_cell_to_buffer@@Base+0x3b0>
   1544c:	ldr	r1, [sp, #32]
   15450:	vcvt.f64.f32	d0, s0
   15454:	vstr	d0, [sp]
   15458:	bl	11bfc <snprintf@plt>
   1545c:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   15460:	mov	r2, r4
   15464:	mov	r1, r7
   15468:	mov	r0, r6
   1546c:	bl	139bc <table_get_ullong@@Base>
   15470:	strd	r0, [sp]
   15474:	ldr	r2, [pc, #468]	; 15650 <table_cell_to_buffer@@Base+0x3b4>
   15478:	mov	r0, r5
   1547c:	ldr	r1, [sp, #32]
   15480:	bl	11bfc <snprintf@plt>
   15484:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   15488:	mov	r2, r4
   1548c:	mov	r1, r7
   15490:	mov	r0, r6
   15494:	bl	139a8 <table_get_llong@@Base>
   15498:	strd	r0, [sp]
   1549c:	ldr	r2, [pc, #432]	; 15654 <table_cell_to_buffer@@Base+0x3b8>
   154a0:	mov	r0, r5
   154a4:	ldr	r1, [sp, #32]
   154a8:	bl	11bfc <snprintf@plt>
   154ac:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   154b0:	mov	r2, r4
   154b4:	mov	r1, r7
   154b8:	mov	r0, r6
   154bc:	bl	13994 <table_get_ulong@@Base>
   154c0:	ldr	r2, [pc, #400]	; 15658 <table_cell_to_buffer@@Base+0x3bc>
   154c4:	ldr	r1, [sp, #32]
   154c8:	mov	r3, r0
   154cc:	mov	r0, r5
   154d0:	bl	11bfc <snprintf@plt>
   154d4:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   154d8:	mov	r2, r4
   154dc:	mov	r1, r7
   154e0:	mov	r0, r6
   154e4:	bl	13980 <table_get_long@@Base>
   154e8:	ldr	r2, [pc, #364]	; 1565c <table_cell_to_buffer@@Base+0x3c0>
   154ec:	ldr	r1, [sp, #32]
   154f0:	mov	r3, r0
   154f4:	mov	r0, r5
   154f8:	bl	11bfc <snprintf@plt>
   154fc:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   15500:	mov	r2, r4
   15504:	mov	r1, r7
   15508:	mov	r0, r6
   1550c:	bl	1396c <table_get_ushort@@Base>
   15510:	ldr	r2, [pc, #328]	; 15660 <table_cell_to_buffer@@Base+0x3c4>
   15514:	ldr	r1, [sp, #32]
   15518:	mov	r3, r0
   1551c:	mov	r0, r5
   15520:	bl	11bfc <snprintf@plt>
   15524:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   15528:	mov	r2, r4
   1552c:	mov	r1, r7
   15530:	mov	r0, r6
   15534:	bl	13958 <table_get_short@@Base>
   15538:	ldr	r2, [pc, #292]	; 15664 <table_cell_to_buffer@@Base+0x3c8>
   1553c:	ldr	r1, [sp, #32]
   15540:	mov	r3, r0
   15544:	mov	r0, r5
   15548:	bl	11bfc <snprintf@plt>
   1554c:	b	1534c <table_cell_to_buffer@@Base+0xb0>
   15550:	mov	r2, r4
   15554:	mov	r1, r7
   15558:	mov	r0, r6
   1555c:	bl	13944 <table_get_uint64@@Base>
   15560:	b	15470 <table_cell_to_buffer@@Base+0x1d4>
   15564:	mov	r2, r4
   15568:	mov	r1, r7
   1556c:	mov	r0, r6
   15570:	bl	13930 <table_get_int64@@Base>
   15574:	b	15498 <table_cell_to_buffer@@Base+0x1fc>
   15578:	mov	r2, r4
   1557c:	mov	r1, r7
   15580:	mov	r0, r6
   15584:	bl	1391c <table_get_uint32@@Base>
   15588:	mov	r3, r0
   1558c:	ldr	r2, [pc, #212]	; 15668 <table_cell_to_buffer@@Base+0x3cc>
   15590:	mov	r0, r5
   15594:	ldr	r1, [sp, #32]
   15598:	bl	11bfc <snprintf@plt>
   1559c:	mov	r0, #0
   155a0:	add	sp, sp, #12
   155a4:	pop	{r4, r5, r6, r7, pc}
   155a8:	mov	r2, r4
   155ac:	mov	r1, r7
   155b0:	mov	r0, r6
   155b4:	bl	13908 <table_get_int32@@Base>
   155b8:	b	15338 <table_cell_to_buffer@@Base+0x9c>
   155bc:	mov	r2, r4
   155c0:	mov	r1, r7
   155c4:	mov	r0, r6
   155c8:	bl	138f4 <table_get_uint16@@Base>
   155cc:	b	15588 <table_cell_to_buffer@@Base+0x2ec>
   155d0:	mov	r2, r4
   155d4:	mov	r1, r7
   155d8:	mov	r0, r6
   155dc:	bl	138e0 <table_get_int16@@Base>
   155e0:	b	15338 <table_cell_to_buffer@@Base+0x9c>
   155e4:	mov	r2, r4
   155e8:	mov	r1, r7
   155ec:	mov	r0, r6
   155f0:	bl	138cc <table_get_uint8@@Base>
   155f4:	b	15588 <table_cell_to_buffer@@Base+0x2ec>
   155f8:	mov	r2, r4
   155fc:	mov	r1, r7
   15600:	mov	r0, r6
   15604:	bl	138b8 <table_get_int8@@Base>
   15608:	b	15338 <table_cell_to_buffer@@Base+0x9c>
   1560c:	mov	r2, r4
   15610:	mov	r1, r7
   15614:	mov	r0, r6
   15618:	bl	138a4 <table_get_uint@@Base>
   1561c:	b	15588 <table_cell_to_buffer@@Base+0x2ec>
   15620:	mov	r2, r4
   15624:	mov	r1, r7
   15628:	mov	r0, r6
   1562c:	bl	13890 <table_get_int@@Base>
   15630:	b	15338 <table_cell_to_buffer@@Base+0x9c>
   15634:	andeq	r5, r1, ip, ror pc
   15638:	andeq	r6, r1, ip, lsl #1
   1563c:	andeq	r6, r1, r8, ror r0
   15640:	andeq	r6, r1, r8, lsl #1
   15644:	andeq	r6, r1, r4, lsl #1
   15648:	andeq	r6, r1, r0, lsl #1
   1564c:	andeq	r6, r1, ip, ror r0
   15650:	andeq	r6, r1, r0, rrx
   15654:	andeq	r6, r1, r8, asr r0
   15658:	andeq	r6, r1, r4, ror r0
   1565c:	andeq	r6, r1, r0, ror r0
   15660:	andeq	r6, r1, ip, rrx
   15664:	andeq	r6, r1, r8, rrx
   15668:	andeq	r6, r1, r4, asr r0

0001566c <table_cell_from_buffer@@Base>:
   1566c:	push	{r4, r5, r6, r7, r8, lr}
   15670:	mov	r8, r1
   15674:	sub	sp, sp, #264	; 0x108
   15678:	mov	r1, r2
   1567c:	mov	r4, r2
   15680:	mov	r6, r3
   15684:	mov	r5, r0
   15688:	bl	12f30 <table_get_column_data_type@@Base>
   1568c:	cmp	r0, #23
   15690:	ldrls	pc, [pc, r0, lsl #2]
   15694:	b	15c1c <table_cell_from_buffer@@Base+0x5b0>
   15698:			; <UNDEFINED> instruction: 0x00015bb4
   1569c:	andeq	r5, r1, r0, lsl #23
   156a0:	andeq	r5, r1, ip, asr #22
   156a4:	andeq	r5, r1, r8, lsl fp
   156a8:	andeq	r5, r1, r4, ror #21
   156ac:			; <UNDEFINED> instruction: 0x00015ab0
   156b0:	andeq	r5, r1, ip, ror sl
   156b4:	andeq	r5, r1, r8, asr #20
   156b8:	andeq	r5, r1, r0, lsl sl
   156bc:	ldrdeq	r5, [r1], -r8
   156c0:	andeq	r5, r1, r4, lsr #19
   156c4:	andeq	r5, r1, r0, ror r9
   156c8:	andeq	r5, r1, ip, lsr r9
   156cc:	andeq	r5, r1, r8, lsl #18
   156d0:	ldrdeq	r5, [r1], -r0
   156d4:	muleq	r1, r8, r8
   156d8:	andeq	r5, r1, r0, lsr r8
   156dc:	strdeq	r5, [r1], -ip
   156e0:	andeq	r5, r1, r4, ror #16
   156e4:	andeq	r5, r1, r0, ror #14
   156e8:	andeq	r5, r1, r8, asr #15
   156ec:	muleq	r1, r4, r7
   156f0:	andeq	r5, r1, r0, lsr #14
   156f4:	strdeq	r5, [r1], -r8
   156f8:	mov	r0, r6
   156fc:	add	r2, sp, #8
   15700:	ldr	r1, [pc, #1308]	; 15c24 <table_cell_from_buffer@@Base+0x5b8>
   15704:	bl	11c08 <__isoc99_sscanf@plt>
   15708:	cmp	r0, #1
   1570c:	beq	15c00 <table_cell_from_buffer@@Base+0x594>
   15710:	mvn	r6, #0
   15714:	mov	r0, r6
   15718:	add	sp, sp, #264	; 0x108
   1571c:	pop	{r4, r5, r6, r7, r8, pc}
   15720:	mov	r0, r6
   15724:	add	r2, sp, #8
   15728:	ldr	r1, [pc, #1272]	; 15c28 <table_cell_from_buffer@@Base+0x5bc>
   1572c:	bl	11c08 <__isoc99_sscanf@plt>
   15730:	cmp	r0, #1
   15734:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15738:	ldr	r6, [sp, #8]
   1573c:	cmp	r6, #0
   15740:	beq	15be8 <table_cell_from_buffer@@Base+0x57c>
   15744:	mov	r3, r0
   15748:	mov	r2, r4
   1574c:	mov	r1, r8
   15750:	mov	r0, r5
   15754:	bl	13fe8 <table_set_bool@@Base>
   15758:	mov	r6, #0
   1575c:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15760:	mov	r0, r6
   15764:	add	r2, sp, #8
   15768:	ldr	r1, [pc, #1212]	; 15c2c <table_cell_from_buffer@@Base+0x5c0>
   1576c:	bl	11c08 <__isoc99_sscanf@plt>
   15770:	cmp	r0, #1
   15774:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15778:	mov	r2, r4
   1577c:	mov	r1, r8
   15780:	mov	r0, r5
   15784:	ldrb	r3, [sp, #8]
   15788:	bl	14a7c <table_set_char@@Base>
   1578c:	mov	r6, #0
   15790:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15794:	mov	r0, r6
   15798:	add	r2, sp, #8
   1579c:	ldr	r1, [pc, #1164]	; 15c30 <table_cell_from_buffer@@Base+0x5c4>
   157a0:	bl	11c08 <__isoc99_sscanf@plt>
   157a4:	cmp	r0, #1
   157a8:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   157ac:	add	r3, sp, #8
   157b0:	mov	r2, r4
   157b4:	mov	r1, r8
   157b8:	mov	r0, r5
   157bc:	bl	149fc <table_set_string@@Base>
   157c0:	mov	r6, #0
   157c4:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   157c8:	mov	r0, r6
   157cc:	add	r2, sp, #8
   157d0:	ldr	r1, [pc, #1108]	; 15c2c <table_cell_from_buffer@@Base+0x5c0>
   157d4:	bl	11c08 <__isoc99_sscanf@plt>
   157d8:	cmp	r0, #1
   157dc:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   157e0:	mov	r2, r4
   157e4:	mov	r1, r8
   157e8:	mov	r0, r5
   157ec:	ldrb	r3, [sp, #8]
   157f0:	bl	14af8 <table_set_uchar@@Base>
   157f4:	mov	r6, #0
   157f8:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   157fc:	mov	r0, r6
   15800:	add	r2, sp, #8
   15804:	ldr	r1, [pc, #1064]	; 15c34 <table_cell_from_buffer@@Base+0x5c8>
   15808:	bl	11c08 <__isoc99_sscanf@plt>
   1580c:	cmp	r0, #1
   15810:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15814:	mov	r2, r4
   15818:	mov	r1, r8
   1581c:	mov	r0, r5
   15820:	vldr	d0, [sp, #8]
   15824:	bl	148cc <table_set_double@@Base>
   15828:	mov	r6, #0
   1582c:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15830:	mov	r0, r6
   15834:	add	r2, sp, #8
   15838:	ldr	r1, [pc, #1016]	; 15c38 <table_cell_from_buffer@@Base+0x5cc>
   1583c:	bl	11c08 <__isoc99_sscanf@plt>
   15840:	cmp	r0, #1
   15844:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15848:	mov	r2, r4
   1584c:	mov	r1, r8
   15850:	mov	r0, r5
   15854:	vldr	s0, [sp, #8]
   15858:	bl	14850 <table_set_float@@Base>
   1585c:	mov	r6, #0
   15860:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15864:	mov	r0, r6
   15868:	add	r2, sp, #8
   1586c:	ldr	r1, [pc, #968]	; 15c3c <table_cell_from_buffer@@Base+0x5d0>
   15870:	bl	11c08 <__isoc99_sscanf@plt>
   15874:	cmp	r0, #1
   15878:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   1587c:	mov	r2, r4
   15880:	mov	r1, r8
   15884:	mov	r0, r5
   15888:	vldr	d0, [sp, #8]
   1588c:	bl	14964 <table_set_ldouble@@Base>
   15890:	mov	r6, #0
   15894:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15898:	mov	r0, r6
   1589c:	add	r2, sp, #8
   158a0:	ldr	r1, [pc, #920]	; 15c40 <table_cell_from_buffer@@Base+0x5d4>
   158a4:	bl	11c08 <__isoc99_sscanf@plt>
   158a8:	cmp	r0, #1
   158ac:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   158b0:	ldrd	r6, [sp, #8]
   158b4:	mov	r2, r4
   158b8:	mov	r1, r8
   158bc:	strd	r6, [sp]
   158c0:	mov	r0, r5
   158c4:	bl	147c8 <table_set_ullong@@Base>
   158c8:	mov	r6, #0
   158cc:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   158d0:	mov	r0, r6
   158d4:	add	r2, sp, #8
   158d8:	ldr	r1, [pc, #868]	; 15c44 <table_cell_from_buffer@@Base+0x5d8>
   158dc:	bl	11c08 <__isoc99_sscanf@plt>
   158e0:	cmp	r0, #1
   158e4:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   158e8:	ldrd	r6, [sp, #8]
   158ec:	mov	r2, r4
   158f0:	mov	r1, r8
   158f4:	strd	r6, [sp]
   158f8:	mov	r0, r5
   158fc:	bl	14740 <table_set_llong@@Base>
   15900:	mov	r6, #0
   15904:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15908:	mov	r0, r6
   1590c:	add	r2, sp, #8
   15910:	ldr	r1, [pc, #816]	; 15c48 <table_cell_from_buffer@@Base+0x5dc>
   15914:	bl	11c08 <__isoc99_sscanf@plt>
   15918:	cmp	r0, #1
   1591c:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15920:	mov	r2, r4
   15924:	mov	r1, r8
   15928:	mov	r0, r5
   1592c:	ldr	r3, [sp, #8]
   15930:	bl	146c4 <table_set_ulong@@Base>
   15934:	mov	r6, #0
   15938:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   1593c:	mov	r0, r6
   15940:	add	r2, sp, #8
   15944:	ldr	r1, [pc, #768]	; 15c4c <table_cell_from_buffer@@Base+0x5e0>
   15948:	bl	11c08 <__isoc99_sscanf@plt>
   1594c:	cmp	r0, #1
   15950:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15954:	mov	r2, r4
   15958:	mov	r1, r8
   1595c:	mov	r0, r5
   15960:	ldr	r3, [sp, #8]
   15964:	bl	14648 <table_set_long@@Base>
   15968:	mov	r6, #0
   1596c:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15970:	mov	r0, r6
   15974:	add	r2, sp, #8
   15978:	ldr	r1, [pc, #720]	; 15c50 <table_cell_from_buffer@@Base+0x5e4>
   1597c:	bl	11c08 <__isoc99_sscanf@plt>
   15980:	cmp	r0, #1
   15984:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15988:	ldrh	r3, [sp, #8]
   1598c:	mov	r2, r4
   15990:	mov	r1, r8
   15994:	mov	r0, r5
   15998:	bl	145cc <table_set_ushort@@Base>
   1599c:	mov	r6, #0
   159a0:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   159a4:	mov	r0, r6
   159a8:	add	r2, sp, #8
   159ac:	ldr	r1, [pc, #672]	; 15c54 <table_cell_from_buffer@@Base+0x5e8>
   159b0:	bl	11c08 <__isoc99_sscanf@plt>
   159b4:	cmp	r0, #1
   159b8:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   159bc:	ldrsh	r3, [sp, #8]
   159c0:	mov	r2, r4
   159c4:	mov	r1, r8
   159c8:	mov	r0, r5
   159cc:	bl	14550 <table_set_short@@Base>
   159d0:	mov	r6, #0
   159d4:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   159d8:	mov	r0, r6
   159dc:	add	r2, sp, #8
   159e0:	ldr	r1, [pc, #600]	; 15c40 <table_cell_from_buffer@@Base+0x5d4>
   159e4:	bl	11c08 <__isoc99_sscanf@plt>
   159e8:	cmp	r0, #1
   159ec:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   159f0:	ldrd	r6, [sp, #8]
   159f4:	mov	r2, r4
   159f8:	mov	r1, r8
   159fc:	strd	r6, [sp]
   15a00:	mov	r0, r5
   15a04:	bl	144c8 <table_set_uint64@@Base>
   15a08:	mov	r6, #0
   15a0c:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15a10:	mov	r0, r6
   15a14:	add	r2, sp, #8
   15a18:	ldr	r1, [pc, #548]	; 15c44 <table_cell_from_buffer@@Base+0x5d8>
   15a1c:	bl	11c08 <__isoc99_sscanf@plt>
   15a20:	cmp	r0, #1
   15a24:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15a28:	ldrd	r6, [sp, #8]
   15a2c:	mov	r2, r4
   15a30:	mov	r1, r8
   15a34:	strd	r6, [sp]
   15a38:	mov	r0, r5
   15a3c:	bl	14444 <table_set_int64@@Base>
   15a40:	mov	r6, #0
   15a44:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15a48:	mov	r0, r6
   15a4c:	add	r2, sp, #8
   15a50:	ldr	r1, [pc, #512]	; 15c58 <table_cell_from_buffer@@Base+0x5ec>
   15a54:	bl	11c08 <__isoc99_sscanf@plt>
   15a58:	cmp	r0, #1
   15a5c:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15a60:	mov	r2, r4
   15a64:	mov	r1, r8
   15a68:	mov	r0, r5
   15a6c:	ldr	r3, [sp, #8]
   15a70:	bl	143c8 <table_set_uint32@@Base>
   15a74:	mov	r6, #0
   15a78:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15a7c:	mov	r0, r6
   15a80:	add	r2, sp, #8
   15a84:	ldr	r1, [pc, #412]	; 15c28 <table_cell_from_buffer@@Base+0x5bc>
   15a88:	bl	11c08 <__isoc99_sscanf@plt>
   15a8c:	cmp	r0, #1
   15a90:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15a94:	mov	r2, r4
   15a98:	mov	r1, r8
   15a9c:	mov	r0, r5
   15aa0:	ldr	r3, [sp, #8]
   15aa4:	bl	1434c <table_set_int32@@Base>
   15aa8:	mov	r6, #0
   15aac:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15ab0:	mov	r0, r6
   15ab4:	add	r2, sp, #8
   15ab8:	ldr	r1, [pc, #400]	; 15c50 <table_cell_from_buffer@@Base+0x5e4>
   15abc:	bl	11c08 <__isoc99_sscanf@plt>
   15ac0:	cmp	r0, #1
   15ac4:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15ac8:	ldrh	r3, [sp, #8]
   15acc:	mov	r2, r4
   15ad0:	mov	r1, r8
   15ad4:	mov	r0, r5
   15ad8:	bl	142d0 <table_set_uint16@@Base>
   15adc:	mov	r6, #0
   15ae0:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15ae4:	mov	r0, r6
   15ae8:	add	r2, sp, #8
   15aec:	ldr	r1, [pc, #352]	; 15c54 <table_cell_from_buffer@@Base+0x5e8>
   15af0:	bl	11c08 <__isoc99_sscanf@plt>
   15af4:	cmp	r0, #1
   15af8:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15afc:	ldrsh	r3, [sp, #8]
   15b00:	mov	r2, r4
   15b04:	mov	r1, r8
   15b08:	mov	r0, r5
   15b0c:	bl	14254 <table_set_int16@@Base>
   15b10:	mov	r6, #0
   15b14:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15b18:	mov	r0, r6
   15b1c:	add	r2, sp, #8
   15b20:	ldr	r1, [pc, #308]	; 15c5c <table_cell_from_buffer@@Base+0x5f0>
   15b24:	bl	11c08 <__isoc99_sscanf@plt>
   15b28:	cmp	r0, #1
   15b2c:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15b30:	mov	r2, r4
   15b34:	mov	r1, r8
   15b38:	mov	r0, r5
   15b3c:	ldrb	r3, [sp, #8]
   15b40:	bl	141d8 <table_set_uint8@@Base>
   15b44:	mov	r6, #0
   15b48:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15b4c:	mov	r0, r6
   15b50:	add	r2, sp, #8
   15b54:	ldr	r1, [pc, #260]	; 15c60 <table_cell_from_buffer@@Base+0x5f4>
   15b58:	bl	11c08 <__isoc99_sscanf@plt>
   15b5c:	cmp	r0, #1
   15b60:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15b64:	ldrsb	r3, [sp, #8]
   15b68:	mov	r2, r4
   15b6c:	mov	r1, r8
   15b70:	mov	r0, r5
   15b74:	bl	1415c <table_set_int8@@Base>
   15b78:	mov	r6, #0
   15b7c:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15b80:	mov	r0, r6
   15b84:	add	r2, sp, #8
   15b88:	ldr	r1, [pc, #200]	; 15c58 <table_cell_from_buffer@@Base+0x5ec>
   15b8c:	bl	11c08 <__isoc99_sscanf@plt>
   15b90:	cmp	r0, #1
   15b94:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15b98:	mov	r2, r4
   15b9c:	mov	r1, r8
   15ba0:	mov	r0, r5
   15ba4:	ldr	r3, [sp, #8]
   15ba8:	bl	140e0 <table_set_uint@@Base>
   15bac:	mov	r6, #0
   15bb0:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15bb4:	mov	r0, r6
   15bb8:	add	r2, sp, #8
   15bbc:	ldr	r1, [pc, #100]	; 15c28 <table_cell_from_buffer@@Base+0x5bc>
   15bc0:	bl	11c08 <__isoc99_sscanf@plt>
   15bc4:	cmp	r0, #1
   15bc8:	bne	15710 <table_cell_from_buffer@@Base+0xa4>
   15bcc:	mov	r2, r4
   15bd0:	mov	r1, r8
   15bd4:	mov	r0, r5
   15bd8:	ldr	r3, [sp, #8]
   15bdc:	bl	14064 <table_set_int@@Base>
   15be0:	mov	r6, #0
   15be4:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15be8:	mov	r2, r4
   15bec:	mov	r1, r8
   15bf0:	mov	r0, r5
   15bf4:	mov	r3, r6
   15bf8:	bl	13fe8 <table_set_bool@@Base>
   15bfc:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15c00:	mov	r2, r4
   15c04:	mov	r1, r8
   15c08:	mov	r0, r5
   15c0c:	ldr	r3, [sp, #8]
   15c10:	bl	14b74 <table_set_ptr@@Base>
   15c14:	mov	r6, #0
   15c18:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15c1c:	mov	r6, #0
   15c20:	b	15714 <table_cell_from_buffer@@Base+0xa8>
   15c24:	andeq	r6, r1, ip, lsl #1
   15c28:	andeq	r5, r1, ip, ror pc
   15c2c:	andeq	r6, r1, r8, lsl #1
   15c30:	andeq	r6, r1, r8, ror r0
   15c34:	andeq	r6, r1, r0, lsl #1
   15c38:	andeq	r6, r1, ip, ror r0
   15c3c:	andeq	r6, r1, r4, lsl #1
   15c40:	andeq	r6, r1, r0, rrx
   15c44:	andeq	r6, r1, r8, asr r0
   15c48:	andeq	r6, r1, r4, ror r0
   15c4c:	andeq	r6, r1, r0, ror r0
   15c50:	andeq	r6, r1, ip, rrx
   15c54:	andeq	r6, r1, r8, rrx
   15c58:	andeq	r6, r1, r4, asr r0
   15c5c:	muleq	r1, r8, r0
   15c60:	muleq	r1, r0, r0

00015c64 <table_cell_nullify@@Base>:
   15c64:	push	{r4, r5, r6, lr}
   15c68:	mov	r5, r2
   15c6c:	bl	13c80 <table_get_row_ptr@@Base>
   15c70:	ldr	r4, [r0]
   15c74:	ldr	r0, [r4, r5, lsl #2]
   15c78:	cmp	r0, #0
   15c7c:	beq	15c8c <table_cell_nullify@@Base+0x28>
   15c80:	bl	11b90 <free@plt>
   15c84:	mov	r3, #0
   15c88:	str	r3, [r4, r5, lsl #2]
   15c8c:	mov	r0, #0
   15c90:	pop	{r4, r5, r6, pc}

00015c94 <table_get_cell_ptr@@Base>:
   15c94:	push	{r4, lr}
   15c98:	mov	r4, r2
   15c9c:	bl	13c80 <table_get_row_ptr@@Base>
   15ca0:	ldr	r0, [r0]
   15ca4:	add	r0, r0, r4, lsl #2
   15ca8:	pop	{r4, pc}
   15cac:	subs	r2, r1, #1
   15cb0:	bxeq	lr
   15cb4:	bcc	15e8c <table_get_cell_ptr@@Base+0x1f8>
   15cb8:	cmp	r0, r1
   15cbc:	bls	15e70 <table_get_cell_ptr@@Base+0x1dc>
   15cc0:	tst	r1, r2
   15cc4:	beq	15e7c <table_get_cell_ptr@@Base+0x1e8>
   15cc8:	clz	r3, r0
   15ccc:	clz	r2, r1
   15cd0:	sub	r3, r2, r3
   15cd4:	rsbs	r3, r3, #31
   15cd8:	addne	r3, r3, r3, lsl #1
   15cdc:	mov	r2, #0
   15ce0:	addne	pc, pc, r3, lsl #2
   15ce4:	nop			; (mov r0, r0)
   15ce8:	cmp	r0, r1, lsl #31
   15cec:	adc	r2, r2, r2
   15cf0:	subcs	r0, r0, r1, lsl #31
   15cf4:	cmp	r0, r1, lsl #30
   15cf8:	adc	r2, r2, r2
   15cfc:	subcs	r0, r0, r1, lsl #30
   15d00:	cmp	r0, r1, lsl #29
   15d04:	adc	r2, r2, r2
   15d08:	subcs	r0, r0, r1, lsl #29
   15d0c:	cmp	r0, r1, lsl #28
   15d10:	adc	r2, r2, r2
   15d14:	subcs	r0, r0, r1, lsl #28
   15d18:	cmp	r0, r1, lsl #27
   15d1c:	adc	r2, r2, r2
   15d20:	subcs	r0, r0, r1, lsl #27
   15d24:	cmp	r0, r1, lsl #26
   15d28:	adc	r2, r2, r2
   15d2c:	subcs	r0, r0, r1, lsl #26
   15d30:	cmp	r0, r1, lsl #25
   15d34:	adc	r2, r2, r2
   15d38:	subcs	r0, r0, r1, lsl #25
   15d3c:	cmp	r0, r1, lsl #24
   15d40:	adc	r2, r2, r2
   15d44:	subcs	r0, r0, r1, lsl #24
   15d48:	cmp	r0, r1, lsl #23
   15d4c:	adc	r2, r2, r2
   15d50:	subcs	r0, r0, r1, lsl #23
   15d54:	cmp	r0, r1, lsl #22
   15d58:	adc	r2, r2, r2
   15d5c:	subcs	r0, r0, r1, lsl #22
   15d60:	cmp	r0, r1, lsl #21
   15d64:	adc	r2, r2, r2
   15d68:	subcs	r0, r0, r1, lsl #21
   15d6c:	cmp	r0, r1, lsl #20
   15d70:	adc	r2, r2, r2
   15d74:	subcs	r0, r0, r1, lsl #20
   15d78:	cmp	r0, r1, lsl #19
   15d7c:	adc	r2, r2, r2
   15d80:	subcs	r0, r0, r1, lsl #19
   15d84:	cmp	r0, r1, lsl #18
   15d88:	adc	r2, r2, r2
   15d8c:	subcs	r0, r0, r1, lsl #18
   15d90:	cmp	r0, r1, lsl #17
   15d94:	adc	r2, r2, r2
   15d98:	subcs	r0, r0, r1, lsl #17
   15d9c:	cmp	r0, r1, lsl #16
   15da0:	adc	r2, r2, r2
   15da4:	subcs	r0, r0, r1, lsl #16
   15da8:	cmp	r0, r1, lsl #15
   15dac:	adc	r2, r2, r2
   15db0:	subcs	r0, r0, r1, lsl #15
   15db4:	cmp	r0, r1, lsl #14
   15db8:	adc	r2, r2, r2
   15dbc:	subcs	r0, r0, r1, lsl #14
   15dc0:	cmp	r0, r1, lsl #13
   15dc4:	adc	r2, r2, r2
   15dc8:	subcs	r0, r0, r1, lsl #13
   15dcc:	cmp	r0, r1, lsl #12
   15dd0:	adc	r2, r2, r2
   15dd4:	subcs	r0, r0, r1, lsl #12
   15dd8:	cmp	r0, r1, lsl #11
   15ddc:	adc	r2, r2, r2
   15de0:	subcs	r0, r0, r1, lsl #11
   15de4:	cmp	r0, r1, lsl #10
   15de8:	adc	r2, r2, r2
   15dec:	subcs	r0, r0, r1, lsl #10
   15df0:	cmp	r0, r1, lsl #9
   15df4:	adc	r2, r2, r2
   15df8:	subcs	r0, r0, r1, lsl #9
   15dfc:	cmp	r0, r1, lsl #8
   15e00:	adc	r2, r2, r2
   15e04:	subcs	r0, r0, r1, lsl #8
   15e08:	cmp	r0, r1, lsl #7
   15e0c:	adc	r2, r2, r2
   15e10:	subcs	r0, r0, r1, lsl #7
   15e14:	cmp	r0, r1, lsl #6
   15e18:	adc	r2, r2, r2
   15e1c:	subcs	r0, r0, r1, lsl #6
   15e20:	cmp	r0, r1, lsl #5
   15e24:	adc	r2, r2, r2
   15e28:	subcs	r0, r0, r1, lsl #5
   15e2c:	cmp	r0, r1, lsl #4
   15e30:	adc	r2, r2, r2
   15e34:	subcs	r0, r0, r1, lsl #4
   15e38:	cmp	r0, r1, lsl #3
   15e3c:	adc	r2, r2, r2
   15e40:	subcs	r0, r0, r1, lsl #3
   15e44:	cmp	r0, r1, lsl #2
   15e48:	adc	r2, r2, r2
   15e4c:	subcs	r0, r0, r1, lsl #2
   15e50:	cmp	r0, r1, lsl #1
   15e54:	adc	r2, r2, r2
   15e58:	subcs	r0, r0, r1, lsl #1
   15e5c:	cmp	r0, r1
   15e60:	adc	r2, r2, r2
   15e64:	subcs	r0, r0, r1
   15e68:	mov	r0, r2
   15e6c:	bx	lr
   15e70:	moveq	r0, #1
   15e74:	movne	r0, #0
   15e78:	bx	lr
   15e7c:	clz	r2, r1
   15e80:	rsb	r2, r2, #31
   15e84:	lsr	r0, r0, r2
   15e88:	bx	lr
   15e8c:	cmp	r0, #0
   15e90:	mvnne	r0, #0
   15e94:	b	15eb8 <table_get_cell_ptr@@Base+0x224>
   15e98:	cmp	r1, #0
   15e9c:	beq	15e8c <table_get_cell_ptr@@Base+0x1f8>
   15ea0:	push	{r0, r1, lr}
   15ea4:	bl	15cac <table_get_cell_ptr@@Base+0x18>
   15ea8:	pop	{r1, r2, lr}
   15eac:	mul	r3, r2, r0
   15eb0:	sub	r1, r1, r3
   15eb4:	bx	lr
   15eb8:	push	{r1, lr}
   15ebc:	mov	r0, #8
   15ec0:	bl	11b6c <raise@plt>
   15ec4:	pop	{r1, pc}

00015ec8 <__libc_csu_init@@Base>:
   15ec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ecc:	mov	r7, r0
   15ed0:	ldr	r6, [pc, #72]	; 15f20 <__libc_csu_init@@Base+0x58>
   15ed4:	ldr	r5, [pc, #72]	; 15f24 <__libc_csu_init@@Base+0x5c>
   15ed8:	add	r6, pc, r6
   15edc:	add	r5, pc, r5
   15ee0:	sub	r6, r6, r5
   15ee4:	mov	r8, r1
   15ee8:	mov	r9, r2
   15eec:	bl	11b4c <raise@plt-0x20>
   15ef0:	asrs	r6, r6, #2
   15ef4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ef8:	mov	r4, #0
   15efc:	add	r4, r4, #1
   15f00:	ldr	r3, [r5], #4
   15f04:	mov	r2, r9
   15f08:	mov	r1, r8
   15f0c:	mov	r0, r7
   15f10:	blx	r3
   15f14:	cmp	r6, r4
   15f18:	bne	15efc <__libc_csu_init@@Base+0x34>
   15f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f20:	andeq	r1, r1, r0, lsr r0
   15f24:	andeq	r1, r1, r8, lsr #32

00015f28 <__libc_csu_fini@@Base>:
   15f28:	bx	lr

Disassembly of section .fini:

00015f2c <.fini>:
   15f2c:	push	{r3, lr}
   15f30:	pop	{r3, pc}
