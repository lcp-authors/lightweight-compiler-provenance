
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

0000204c <.init>:
    204c:	push	{r3, lr}
    2050:	bl	24c0 <__assert_fail@plt+0x10>
    2054:	pop	{r3, pc}

Disassembly of section .plt:

00002058 <calloc@plt-0x14>:
    2058:	push	{lr}		; (str lr, [sp, #-4]!)
    205c:	ldr	lr, [pc, #4]	; 2068 <calloc@plt-0x4>
    2060:	add	lr, pc, lr
    2064:	ldr	pc, [lr, #8]!
    2068:	muleq	r2, r8, pc	; <UNPREDICTABLE>

0000206c <calloc@plt>:
    206c:	add	ip, pc, #0, 12
    2070:	add	ip, ip, #40, 20	; 0x28000
    2074:	ldr	pc, [ip, #3992]!	; 0xf98

00002078 <raise@plt>:
    2078:	add	ip, pc, #0, 12
    207c:	add	ip, ip, #40, 20	; 0x28000
    2080:	ldr	pc, [ip, #3984]!	; 0xf90

00002084 <btbb_piconet_new@plt>:
    2084:	add	ip, pc, #0, 12
    2088:	add	ip, ip, #40, 20	; 0x28000
    208c:	ldr	pc, [ip, #3976]!	; 0xf88

00002090 <gen_hop_pattern@plt>:
    2090:	add	ip, pc, #0, 12
    2094:	add	ip, ip, #40, 20	; 0x28000
    2098:	ldr	pc, [ip, #3968]!	; 0xf80

0000209c <count_bits@plt>:
    209c:	add	ip, pc, #0, 12
    20a0:	add	ip, ip, #40, 20	; 0x28000
    20a4:	ldr	pc, [ip, #3960]!	; 0xf78

000020a8 <__cxa_finalize@plt>:
    20a8:	add	ip, pc, #0, 12
    20ac:	add	ip, ip, #40, 20	; 0x28000
    20b0:	ldr	pc, [ip, #3952]!	; 0xf70

000020b4 <btbb_get_payload_packed@plt>:
    20b4:	add	ip, pc, #0, 12
    20b8:	add	ip, ip, #40, 20	; 0x28000
    20bc:	ldr	pc, [ip, #3944]!	; 0xf68

000020c0 <printf@plt>:
    20c0:	add	ip, pc, #0, 12
    20c4:	add	ip, ip, #40, 20	; 0x28000
    20c8:	ldr	pc, [ip, #3936]!	; 0xf60

000020cc <fopen@plt>:
    20cc:	add	ip, pc, #0, 12
    20d0:	add	ip, ip, #40, 20	; 0x28000
    20d4:	ldr	pc, [ip, #3928]!	; 0xf58

000020d8 <lell_packet_is_data@plt>:
    20d8:	add	ip, pc, #0, 12
    20dc:	add	ip, ip, #40, 20	; 0x28000
    20e0:	ldr	pc, [ip, #3920]!	; 0xf50

000020e4 <fflush@plt>:
    20e4:	add	ip, pc, #0, 12
    20e8:	add	ip, ip, #40, 20	; 0x28000
    20ec:	ldr	pc, [ip, #3912]!	; 0xf48

000020f0 <btbb_packet_set_flag@plt>:
    20f0:	add	ip, pc, #0, 12
    20f4:	add	ip, ip, #40, 20	; 0x28000
    20f8:	ldr	pc, [ip, #3904]!	; 0xf40

000020fc <pcapng_append_interface_option@plt>:
    20fc:	add	ip, pc, #0, 12
    2100:	add	ip, ip, #40, 20	; 0x28000
    2104:	ldr	pc, [ip, #3896]!	; 0xf38

00002108 <free@plt>:
    2108:	add	ip, pc, #0, 12
    210c:	add	ip, ip, #40, 20	; 0x28000
    2110:	ldr	pc, [ip, #3888]!	; 0xf30

00002114 <btbb_packet_get_modulation@plt>:
    2114:	add	ip, pc, #0, 12
    2118:	add	ip, ip, #40, 20	; 0x28000
    211c:	ldr	pc, [ip, #3880]!	; 0xf28

00002120 <btbb_packet_get_ac_errors@plt>:
    2120:	add	ip, pc, #0, 12
    2124:	add	ip, ip, #40, 20	; 0x28000
    2128:	ldr	pc, [ip, #3872]!	; 0xf20

0000212c <memcpy@plt>:
    212c:	add	ip, pc, #0, 12
    2130:	add	ip, ip, #40, 20	; 0x28000
    2134:	ldr	pc, [ip, #3864]!	; 0xf18

00002138 <btbb_uap_from_header@plt>:
    2138:	add	ip, pc, #0, 12
    213c:	add	ip, ip, #40, 20	; 0x28000
    2140:	ldr	pc, [ip, #3856]!	; 0xf10

00002144 <btbb_packet_get_flag@plt>:
    2144:	add	ip, pc, #0, 12
    2148:	add	ip, ip, #40, 20	; 0x28000
    214c:	ldr	pc, [ip, #3848]!	; 0xf08

00002150 <fhs@plt>:
    2150:	add	ip, pc, #0, 12
    2154:	add	ip, ip, #40, 20	; 0x28000
    2158:	ldr	pc, [ip, #3840]!	; 0xf00

0000215c <EV4@plt>:
    215c:	add	ip, pc, #0, 12
    2160:	add	ip, ip, #40, 20	; 0x28000
    2164:	ldr	pc, [ip, #3832]!	; 0xef8

00002168 <btbb_piconet_get_uap@plt>:
    2168:	add	ip, pc, #0, 12
    216c:	add	ip, ip, #40, 20	; 0x28000
    2170:	ldr	pc, [ip, #3824]!	; 0xef0

00002174 <memcmp@plt>:
    2174:	add	ip, pc, #0, 12
    2178:	add	ip, ip, #40, 20	; 0x28000
    217c:	ldr	pc, [ip, #3816]!	; 0xee8

00002180 <lell_pcap_close@plt>:
    2180:	add	ip, pc, #0, 12
    2184:	add	ip, ip, #40, 20	; 0x28000
    2188:	ldr	pc, [ip, #3808]!	; 0xee0

0000218c <btbb_piconet_get_channel_seen@plt>:
    218c:	add	ip, pc, #0, 12
    2190:	add	ip, ip, #40, 20	; 0x28000
    2194:	ldr	pc, [ip, #3800]!	; 0xed8

00002198 <btbb_pcap_open@plt>:
    2198:	add	ip, pc, #0, 12
    219c:	add	ip, ip, #40, 20	; 0x28000
    21a0:	ldr	pc, [ip, #3792]!	; 0xed0

000021a4 <btbb_header_present@plt>:
    21a4:	add	ip, pc, #0, 12
    21a8:	add	ip, ip, #40, 20	; 0x28000
    21ac:	ldr	pc, [ip, #3784]!	; 0xec8

000021b0 <btbb_piconet_get_flag@plt>:
    21b0:	add	ip, pc, #0, 12
    21b4:	add	ip, ip, #40, 20	; 0x28000
    21b8:	ldr	pc, [ip, #3776]!	; 0xec0

000021bc <pcapng_create@plt>:
    21bc:	add	ip, pc, #0, 12
    21c0:	add	ip, ip, #40, 20	; 0x28000
    21c4:	ldr	pc, [ip, #3768]!	; 0xeb8

000021c8 <DM@plt>:
    21c8:	add	ip, pc, #0, 12
    21cc:	add	ip, ip, #40, 20	; 0x28000
    21d0:	ldr	pc, [ip, #3760]!	; 0xeb0

000021d4 <btbb_piconet_set_flag@plt>:
    21d4:	add	ip, pc, #0, 12
    21d8:	add	ip, ip, #40, 20	; 0x28000
    21dc:	ldr	pc, [ip, #3752]!	; 0xea8

000021e0 <HV@plt>:
    21e0:	add	ip, pc, #0, 12
    21e4:	add	ip, ip, #40, 20	; 0x28000
    21e8:	ldr	pc, [ip, #3744]!	; 0xea0

000021ec <perror@plt>:
    21ec:	add	ip, pc, #0, 12
    21f0:	add	ip, ip, #40, 20	; 0x28000
    21f4:	ldr	pc, [ip, #3736]!	; 0xe98

000021f8 <btbb_piconet_set_channel_seen@plt>:
    21f8:	add	ip, pc, #0, 12
    21fc:	add	ip, ip, #40, 20	; 0x28000
    2200:	ldr	pc, [ip, #3728]!	; 0xe90

00002204 <perm_table_init@plt>:
    2204:	add	ip, pc, #0, 12
    2208:	add	ip, ip, #40, 20	; 0x28000
    220c:	ldr	pc, [ip, #3720]!	; 0xe88

00002210 <btbb_packet_set_uap@plt>:
    2210:	add	ip, pc, #0, 12
    2214:	add	ip, ip, #40, 20	; 0x28000
    2218:	ldr	pc, [ip, #3712]!	; 0xe80

0000221c <fwrite@plt>:
    221c:	add	ip, pc, #0, 12
    2220:	add	ip, ip, #40, 20	; 0x28000
    2224:	ldr	pc, [ip, #3704]!	; 0xe78

00002228 <btbb_gen_syncword@plt>:
    2228:	add	ip, pc, #0, 12
    222c:	add	ip, ip, #40, 20	; 0x28000
    2230:	ldr	pc, [ip, #3696]!	; 0xe70

00002234 <btbb_pcap_close@plt>:
    2234:	add	ip, pc, #0, 12
    2238:	add	ip, ip, #40, 20	; 0x28000
    223c:	ldr	pc, [ip, #3688]!	; 0xe68

00002240 <crc_check@plt>:
    2240:	add	ip, pc, #0, 12
    2244:	add	ip, ip, #40, 20	; 0x28000
    2248:	ldr	pc, [ip, #3680]!	; 0xe60

0000224c <btbb_decode@plt>:
    224c:	add	ip, pc, #0, 12
    2250:	add	ip, ip, #40, 20	; 0x28000
    2254:	ldr	pc, [ip, #3672]!	; 0xe58

00002258 <btbb_winnow@plt>:
    2258:	add	ip, pc, #0, 12
    225c:	add	ip, ip, #40, 20	; 0x28000
    2260:	ldr	pc, [ip, #3664]!	; 0xe50

00002264 <lell_get_adv_type_str@plt>:
    2264:	add	ip, pc, #0, 12
    2268:	add	ip, ip, #40, 20	; 0x28000
    226c:	ldr	pc, [ip, #3656]!	; 0xe48

00002270 <get_hop_pattern@plt>:
    2270:	add	ip, pc, #0, 12
    2274:	add	ip, ip, #40, 20	; 0x28000
    2278:	ldr	pc, [ip, #3648]!	; 0xe40

0000227c <puts@plt>:
    227c:	add	ip, pc, #0, 12
    2280:	add	ip, ip, #40, 20	; 0x28000
    2284:	ldr	pc, [ip, #3640]!	; 0xe38

00002288 <malloc@plt>:
    2288:	add	ip, pc, #0, 12
    228c:	add	ip, ip, #40, 20	; 0x28000
    2290:	ldr	pc, [ip, #3632]!	; 0xe30

00002294 <try_hop@plt>:
    2294:	add	ip, pc, #0, 12
    2298:	add	ip, ip, #40, 20	; 0x28000
    229c:	ldr	pc, [ip, #3624]!	; 0xe28

000022a0 <btbb_packet_new@plt>:
    22a0:	add	ip, pc, #0, 12
    22a4:	add	ip, ip, #40, 20	; 0x28000
    22a8:	ldr	pc, [ip, #3616]!	; 0xe20

000022ac <btbb_pcap_dump@plt>:
    22ac:	add	ip, pc, #0, 12
    22b0:	add	ip, ip, #40, 20	; 0x28000
    22b4:	ldr	pc, [ip, #3608]!	; 0xe18

000022b8 <__gmon_start__@plt>:
    22b8:	add	ip, pc, #0, 12
    22bc:	add	ip, ip, #40, 20	; 0x28000
    22c0:	ldr	pc, [ip, #3600]!	; 0xe10

000022c4 <open@plt>:
    22c4:	add	ip, pc, #0, 12
    22c8:	add	ip, ip, #40, 20	; 0x28000
    22cc:	ldr	pc, [ip, #3592]!	; 0xe08

000022d0 <__ctype_b_loc@plt>:
    22d0:	add	ip, pc, #0, 12
    22d4:	add	ip, ip, #40, 20	; 0x28000
    22d8:	ldr	pc, [ip, #3584]!	; 0xe00

000022dc <exit@plt>:
    22dc:	add	ip, pc, #0, 12
    22e0:	add	ip, ip, #40, 20	; 0x28000
    22e4:	ldr	pc, [ip, #3576]!	; 0xdf8

000022e8 <btbb_packet_get_payload_length@plt>:
    22e8:	add	ip, pc, #0, 12
    22ec:	add	ip, ip, #40, 20	; 0x28000
    22f0:	ldr	pc, [ip, #3568]!	; 0xdf0

000022f4 <strlen@plt>:
    22f4:	add	ip, pc, #0, 12
    22f8:	add	ip, ip, #40, 20	; 0x28000
    22fc:	ldr	pc, [ip, #3560]!	; 0xde8

00002300 <btbb_decode_header@plt>:
    2300:	add	ip, pc, #0, 12
    2304:	add	ip, ip, #40, 20	; 0x28000
    2308:	ldr	pc, [ip, #3552]!	; 0xde0

0000230c <mmap@plt>:
    230c:	add	ip, pc, #0, 12
    2310:	add	ip, ip, #40, 20	; 0x28000
    2314:	ldr	pc, [ip, #3544]!	; 0xdd8

00002318 <btbb_packet_get_header_packed@plt>:
    2318:	add	ip, pc, #0, 12
    231c:	add	ip, ip, #40, 20	; 0x28000
    2320:	ldr	pc, [ip, #3536]!	; 0xdd0

00002324 <lell_pcapng_record_connect_req@plt>:
    2324:	add	ip, pc, #0, 12
    2328:	add	ip, ip, #40, 20	; 0x28000
    232c:	ldr	pc, [ip, #3528]!	; 0xdc8

00002330 <lell_get_channel_k@plt>:
    2330:	add	ip, pc, #0, 12
    2334:	add	ip, ip, #40, 20	; 0x28000
    2338:	ldr	pc, [ip, #3520]!	; 0xdc0

0000233c <fprintf@plt>:
    233c:	add	ip, pc, #0, 12
    2340:	add	ip, ip, #40, 20	; 0x28000
    2344:	ldr	pc, [ip, #3512]!	; 0xdb8

00002348 <getpagesize@plt>:
    2348:	add	ip, pc, #0, 12
    234c:	add	ip, ip, #40, 20	; 0x28000
    2350:	ldr	pc, [ip, #3504]!	; 0xdb0

00002354 <pcapng_append_packet@plt>:
    2354:	add	ip, pc, #0, 12
    2358:	add	ip, ip, #40, 20	; 0x28000
    235c:	ldr	pc, [ip, #3496]!	; 0xda8

00002360 <btbb_packet_get_transport@plt>:
    2360:	add	ip, pc, #0, 12
    2364:	add	ip, ip, #40, 20	; 0x28000
    2368:	ldr	pc, [ip, #3488]!	; 0xda0

0000236c <find_known_lap@plt>:
    236c:	add	ip, pc, #0, 12
    2370:	add	ip, ip, #40, 20	; 0x28000
    2374:	ldr	pc, [ip, #3480]!	; 0xd98

00002378 <address_precalc@plt>:
    2378:	add	ip, pc, #0, 12
    237c:	add	ip, ip, #40, 20	; 0x28000
    2380:	ldr	pc, [ip, #3472]!	; 0xd90

00002384 <memset@plt>:
    2384:	add	ip, pc, #0, 12
    2388:	add	ip, ip, #40, 20	; 0x28000
    238c:	ldr	pc, [ip, #3464]!	; 0xd88

00002390 <putchar@plt>:
    2390:	add	ip, pc, #0, 12
    2394:	add	ip, ip, #40, 20	; 0x28000
    2398:	ldr	pc, [ip, #3456]!	; 0xd80

0000239c <strncpy@plt>:
    239c:	add	ip, pc, #0, 12
    23a0:	add	ip, ip, #40, 20	; 0x28000
    23a4:	ldr	pc, [ip, #3448]!	; 0xd78

000023a8 <EV3@plt>:
    23a8:	add	ip, pc, #0, 12
    23ac:	add	ip, ip, #40, 20	; 0x28000
    23b0:	ldr	pc, [ip, #3440]!	; 0xd70

000023b4 <btbb_packet_get_lap@plt>:
    23b4:	add	ip, pc, #0, 12
    23b8:	add	ip, ip, #40, 20	; 0x28000
    23bc:	ldr	pc, [ip, #3432]!	; 0xd68

000023c0 <lell_packet_new@plt>:
    23c0:	add	ip, pc, #0, 12
    23c4:	add	ip, ip, #40, 20	; 0x28000
    23c8:	ldr	pc, [ip, #3424]!	; 0xd60

000023cc <bt_compidtostr@plt>:
    23cc:	add	ip, pc, #0, 12
    23d0:	add	ip, ip, #40, 20	; 0x28000
    23d4:	ldr	pc, [ip, #3416]!	; 0xd58

000023d8 <write@plt>:
    23d8:	add	ip, pc, #0, 12
    23dc:	add	ip, ip, #40, 20	; 0x28000
    23e0:	ldr	pc, [ip, #3408]!	; 0xd50

000023e4 <get_piconet@plt>:
    23e4:	add	ip, pc, #0, 12
    23e8:	add	ip, ip, #40, 20	; 0x28000
    23ec:	ldr	pc, [ip, #3400]!	; 0xd48

000023f0 <perm5@plt>:
    23f0:	add	ip, pc, #0, 12
    23f4:	add	ip, ip, #40, 20	; 0x28000
    23f8:	ldr	pc, [ip, #3392]!	; 0xd40

000023fc <fclose@plt>:
    23fc:	add	ip, pc, #0, 12
    2400:	add	ip, ip, #40, 20	; 0x28000
    2404:	ldr	pc, [ip, #3384]!	; 0xd38

00002408 <EV5@plt>:
    2408:	add	ip, pc, #0, 12
    240c:	add	ip, ip, #40, 20	; 0x28000
    2410:	ldr	pc, [ip, #3376]!	; 0xd30

00002414 <munmap@plt>:
    2414:	add	ip, pc, #0, 12
    2418:	add	ip, ip, #40, 20	; 0x28000
    241c:	ldr	pc, [ip, #3368]!	; 0xd28

00002420 <DH@plt>:
    2420:	add	ip, pc, #0, 12
    2424:	add	ip, ip, #40, 20	; 0x28000
    2428:	ldr	pc, [ip, #3360]!	; 0xd20

0000242c <btbb_packet_get_channel@plt>:
    242c:	add	ip, pc, #0, 12
    2430:	add	ip, ip, #40, 20	; 0x28000
    2434:	ldr	pc, [ip, #3352]!	; 0xd18

00002438 <precalc@plt>:
    2438:	add	ip, pc, #0, 12
    243c:	add	ip, ip, #40, 20	; 0x28000
    2440:	ldr	pc, [ip, #3344]!	; 0xd10

00002444 <btbb_decode_payload@plt>:
    2444:	add	ip, pc, #0, 12
    2448:	add	ip, ip, #40, 20	; 0x28000
    244c:	ldr	pc, [ip, #3336]!	; 0xd08

00002450 <promiscuous_packet_search@plt>:
    2450:	add	ip, pc, #0, 12
    2454:	add	ip, ip, #40, 20	; 0x28000
    2458:	ldr	pc, [ip, #3328]!	; 0xd00

0000245c <pcapng_close@plt>:
    245c:	add	ip, pc, #0, 12
    2460:	add	ip, ip, #40, 20	; 0x28000
    2464:	ldr	pc, [ip, #3320]!	; 0xcf8

00002468 <btbb_print_packet@plt>:
    2468:	add	ip, pc, #0, 12
    246c:	add	ip, ip, #40, 20	; 0x28000
    2470:	ldr	pc, [ip, #3312]!	; 0xcf0

00002474 <fast_perm@plt>:
    2474:	add	ip, pc, #0, 12
    2478:	add	ip, ip, #40, 20	; 0x28000
    247c:	ldr	pc, [ip, #3304]!	; 0xce8

00002480 <try_clock@plt>:
    2480:	add	ip, pc, #0, 12
    2484:	add	ip, ip, #40, 20	; 0x28000
    2488:	ldr	pc, [ip, #3296]!	; 0xce0

0000248c <btbb_init_hop_reversal@plt>:
    248c:	add	ip, pc, #0, 12
    2490:	add	ip, ip, #40, 20	; 0x28000
    2494:	ldr	pc, [ip, #3288]!	; 0xcd8

00002498 <btbb_init_piconet@plt>:
    2498:	add	ip, pc, #0, 12
    249c:	add	ip, ip, #40, 20	; 0x28000
    24a0:	ldr	pc, [ip, #3280]!	; 0xcd0

000024a4 <close@plt>:
    24a4:	add	ip, pc, #0, 12
    24a8:	add	ip, ip, #40, 20	; 0x28000
    24ac:	ldr	pc, [ip, #3272]!	; 0xcc8

000024b0 <__assert_fail@plt>:
    24b0:	add	ip, pc, #0, 12
    24b4:	add	ip, ip, #40, 20	; 0x28000
    24b8:	ldr	pc, [ip, #3264]!	; 0xcc0

Disassembly of section .text:

000024c0 <btbb_gen_syncword@@Base-0xad4>:
    24c0:	ldr	r3, [pc, #20]	; 24dc <__assert_fail@plt+0x2c>
    24c4:	ldr	r2, [pc, #20]	; 24e0 <__assert_fail@plt+0x30>
    24c8:	add	r3, pc, r3
    24cc:	ldr	r2, [r3, r2]
    24d0:	cmp	r2, #0
    24d4:	bxeq	lr
    24d8:	b	22b8 <__gmon_start__@plt>
    24dc:	andeq	r8, r2, r0, lsr fp
    24e0:	muleq	r0, r0, r1
    24e4:	ldr	r0, [pc, #44]	; 2518 <__assert_fail@plt+0x68>
    24e8:	ldr	r3, [pc, #44]	; 251c <__assert_fail@plt+0x6c>
    24ec:	add	r0, pc, r0
    24f0:	add	r3, pc, r3
    24f4:	cmp	r3, r0
    24f8:	ldr	r3, [pc, #32]	; 2520 <__assert_fail@plt+0x70>
    24fc:	add	r3, pc, r3
    2500:	bxeq	lr
    2504:	ldr	r2, [pc, #24]	; 2524 <__assert_fail@plt+0x74>
    2508:	ldr	r3, [r3, r2]
    250c:	cmp	r3, #0
    2510:	bxeq	lr
    2514:	bx	r3
    2518:			; <UNDEFINED> instruction: 0x00028cb0
    251c:	andeq	r8, r2, ip, lsr #25
    2520:	strdeq	r8, [r2], -ip
    2524:	andeq	r0, r0, r0, lsl #3
    2528:	ldr	r0, [pc, #56]	; 2568 <__assert_fail@plt+0xb8>
    252c:	ldr	r3, [pc, #56]	; 256c <__assert_fail@plt+0xbc>
    2530:	add	r0, pc, r0
    2534:	add	r3, pc, r3
    2538:	sub	r1, r3, r0
    253c:	ldr	r3, [pc, #44]	; 2570 <__assert_fail@plt+0xc0>
    2540:	asr	r1, r1, #2
    2544:	add	r3, pc, r3
    2548:	add	r1, r1, r1, lsr #31
    254c:	asrs	r1, r1, #1
    2550:	bxeq	lr
    2554:	ldr	r2, [pc, #24]	; 2574 <__assert_fail@plt+0xc4>
    2558:	ldr	r3, [r3, r2]
    255c:	cmp	r3, #0
    2560:	bxeq	lr
    2564:	bx	r3
    2568:	andeq	r8, r2, ip, ror #24
    256c:	andeq	r8, r2, r8, ror #24
    2570:			; <UNDEFINED> instruction: 0x00028ab4
    2574:	muleq	r0, r8, r1
    2578:	ldr	r3, [pc, #76]	; 25cc <__assert_fail@plt+0x11c>
    257c:	ldr	r2, [pc, #76]	; 25d0 <__assert_fail@plt+0x120>
    2580:	add	r3, pc, r3
    2584:	add	r2, pc, r2
    2588:	ldrb	r3, [r3]
    258c:	cmp	r3, #0
    2590:	bxne	lr
    2594:	ldr	r3, [pc, #56]	; 25d4 <__assert_fail@plt+0x124>
    2598:	push	{r4, lr}
    259c:	ldr	r3, [r2, r3]
    25a0:	cmp	r3, #0
    25a4:	beq	25b4 <__assert_fail@plt+0x104>
    25a8:	ldr	r3, [pc, #40]	; 25d8 <__assert_fail@plt+0x128>
    25ac:	ldr	r0, [pc, r3]
    25b0:	bl	20a8 <__cxa_finalize@plt>
    25b4:	bl	24e4 <__assert_fail@plt+0x34>
    25b8:	ldr	r3, [pc, #28]	; 25dc <__assert_fail@plt+0x12c>
    25bc:	mov	r2, #1
    25c0:	add	r3, pc, r3
    25c4:	strb	r2, [r3]
    25c8:	pop	{r4, pc}
    25cc:	andeq	r8, r2, ip, lsl ip
    25d0:	andeq	r8, r2, r4, ror sl
    25d4:	andeq	r0, r0, ip, ror r1
    25d8:	andeq	r8, r2, r8, ror #23
    25dc:	ldrdeq	r8, [r2], -ip
    25e0:	b	2528 <__assert_fail@plt+0x78>
    25e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    25e8:	mov	r4, r2
    25ec:	mov	r5, r3
    25f0:	strd	r6, [sp, #8]
    25f4:	strd	r8, [sp, #16]
    25f8:	mov	r8, r0
    25fc:	mov	r0, #48	; 0x30
    2600:	strd	sl, [sp, #24]
    2604:	mov	r9, r1
    2608:	str	lr, [sp, #32]
    260c:	sub	sp, sp, #12
    2610:	bl	2288 <malloc@plt>
    2614:	ldr	r3, [pc, #912]	; 29ac <__assert_fail@plt+0x4fc>
    2618:	mov	r2, #0
    261c:	mov	r1, #8
    2620:	strd	r8, [r0]
    2624:	mov	r7, r0
    2628:	strd	r4, [r0, #8]
    262c:	str	r2, [r0, #24]
    2630:	str	r0, [r0, #36]	; 0x24
    2634:	add	r3, pc, r3
    2638:	str	r1, [r0, #40]	; 0x28
    263c:	ldr	r8, [r3]
    2640:	cmp	r8, r2
    2644:	beq	2914 <__assert_fail@plt+0x464>
    2648:	ldr	r5, [r8, #16]
    264c:	add	r4, r0, #16
    2650:	ldr	r3, [r5, #16]
    2654:	ldr	r2, [r5, #20]
    2658:	str	r0, [r3, #8]
    265c:	sub	r3, r3, r2
    2660:	str	r3, [r0, #20]
    2664:	str	r4, [r5, #16]
    2668:	ldr	r6, [r5, #12]
    266c:	movw	r1, #31161	; 0x79b9
    2670:	movt	r1, #40503	; 0x9e37
    2674:	movw	r2, #47810	; 0xbac2
    2678:	movt	r2, #40777	; 0x9f49
    267c:	movw	lr, #63341	; 0xf76d
    2680:	movt	lr, #7
    2684:	movw	ip, #16649	; 0x4109
    2688:	movt	ip, #274	; 0x112
    268c:	movw	r3, #48887	; 0xbef7
    2690:	movt	r3, #65261	; 0xfeed
    2694:	add	r6, r6, #1
    2698:	mov	r0, #0
    269c:	str	r6, [r5, #12]
    26a0:	ldrb	r6, [r7, #4]
    26a4:	str	r5, [r7, #16]
    26a8:	ldrb	sl, [r7]
    26ac:	ldrb	r9, [r7, #7]
    26b0:	add	r1, r6, r1
    26b4:	ldrb	r6, [r7, #3]
    26b8:	add	r2, sl, r2
    26bc:	ldrb	fp, [r7, #6]
    26c0:	add	r1, r1, r9, lsl #24
    26c4:	ldrb	sl, [r7, #2]
    26c8:	add	r6, r2, r6, lsl #24
    26cc:	ldrb	r9, [r7, #5]
    26d0:	add	r1, r1, fp, lsl #16
    26d4:	ldrb	r2, [r7, #1]
    26d8:	add	r6, r6, sl, lsl #16
    26dc:	ldr	r8, [r8, #16]
    26e0:	add	r1, r1, r9, lsl #8
    26e4:	add	r6, r6, r2, lsl #8
    26e8:	add	ip, r1, ip
    26ec:	sub	r6, r6, r1
    26f0:	ldm	r8, {r1, r2}
    26f4:	eor	lr, lr, r6
    26f8:	sub	ip, ip, lr
    26fc:	sub	r3, r3, lr
    2700:	eor	ip, ip, lr, lsl #8
    2704:	sub	r3, r3, ip
    2708:	sub	lr, lr, ip
    270c:	eor	r3, r3, ip, lsr #13
    2710:	sub	r2, r2, #1
    2714:	sub	lr, lr, r3
    2718:	sub	ip, ip, r3
    271c:	eor	lr, lr, r3, lsr #12
    2720:	sub	ip, ip, lr
    2724:	sub	r3, r3, lr
    2728:	eor	ip, ip, lr, lsl #16
    272c:	sub	r3, r3, ip
    2730:	sub	lr, lr, ip
    2734:	eor	r3, r3, ip, lsr #5
    2738:	sub	lr, lr, r3
    273c:	sub	ip, ip, r3
    2740:	eor	lr, lr, r3, lsr #3
    2744:	sub	ip, ip, lr
    2748:	sub	r3, r3, lr
    274c:	eor	ip, ip, lr, lsl #10
    2750:	sub	r3, r3, ip
    2754:	eor	r3, r3, ip, lsr #15
    2758:	and	r2, r2, r3
    275c:	add	r2, r2, r2, lsl #1
    2760:	str	r3, [r7, #44]	; 0x2c
    2764:	lsl	r3, r2, #2
    2768:	add	r2, r1, r3
    276c:	ldr	lr, [r1, r3]
    2770:	ldr	ip, [r2, #4]
    2774:	cmp	lr, r0
    2778:	add	ip, ip, #1
    277c:	str	ip, [r2, #4]
    2780:	ldr	r2, [r2, #8]
    2784:	str	r0, [r7, #28]
    2788:	str	lr, [r7, #32]
    278c:	strne	r4, [lr, #12]
    2790:	str	r4, [r1, r3]
    2794:	add	r3, r2, #1
    2798:	add	r3, r3, r3, lsl #2
    279c:	cmp	ip, r3, lsl #1
    27a0:	bcc	28dc <__assert_fail@plt+0x42c>
    27a4:	ldr	r3, [r5, #36]	; 0x24
    27a8:	cmp	r3, #1
    27ac:	beq	28dc <__assert_fail@plt+0x42c>
    27b0:	ldr	r0, [r5, #4]
    27b4:	mov	r1, #1
    27b8:	add	r0, r0, r0, lsl r1
    27bc:	lsl	r0, r0, #3
    27c0:	bl	206c <calloc@plt>
    27c4:	subs	r4, r0, #0
    27c8:	beq	29a4 <__assert_fail@plt+0x4f4>
    27cc:	ldr	fp, [r5, #4]
    27d0:	mov	r8, #0
    27d4:	ldr	r2, [r5, #8]
    27d8:	str	r8, [r5, #28]
    27dc:	ldr	r1, [r5, #12]
    27e0:	lsl	r3, fp, #1
    27e4:	sub	r9, r3, #1
    27e8:	add	r2, r2, #1
    27ec:	tst	r1, r9
    27f0:	movne	r6, #1
    27f4:	moveq	r6, r8
    27f8:	add	r6, r6, r1, lsr r2
    27fc:	cmp	fp, r8
    2800:	str	r6, [r5, #24]
    2804:	beq	2998 <__assert_fail@plt+0x4e8>
    2808:	ldr	r2, [r5]
    280c:	add	r3, r3, fp
    2810:	add	fp, r2, r3, lsl #2
    2814:	mov	sl, r2
    2818:	str	r2, [sp, #4]
    281c:	ldr	r2, [sl]
    2820:	cmp	r2, #0
    2824:	bne	2840 <__assert_fail@plt+0x390>
    2828:	b	289c <__assert_fail@plt+0x3ec>
    282c:	cmp	ip, #0
    2830:	str	r2, [r1, #12]
    2834:	str	r2, [r4, r3, lsl #2]
    2838:	beq	289c <__assert_fail@plt+0x3ec>
    283c:	mov	r2, ip
    2840:	ldr	ip, [r2, #16]
    2844:	ldr	r3, [r2, #28]
    2848:	and	r3, r3, r9
    284c:	add	r3, r3, r3, lsl #1
    2850:	add	r0, r4, r3, lsl #2
    2854:	ldr	r1, [r0, #4]
    2858:	add	r1, r1, #1
    285c:	cmp	r6, r1
    2860:	str	r1, [r0, #4]
    2864:	bcs	287c <__assert_fail@plt+0x3cc>
    2868:	udiv	r1, r1, r6
    286c:	ldr	lr, [r5, #28]
    2870:	add	lr, lr, #1
    2874:	str	lr, [r5, #28]
    2878:	str	r1, [r0, #8]
    287c:	ldr	r1, [r4, r3, lsl #2]
    2880:	str	r8, [r2, #12]
    2884:	cmp	r1, #0
    2888:	str	r1, [r2, #16]
    288c:	bne	282c <__assert_fail@plt+0x37c>
    2890:	cmp	ip, #0
    2894:	str	r2, [r4, r3, lsl #2]
    2898:	bne	283c <__assert_fail@plt+0x38c>
    289c:	add	sl, sl, #12
    28a0:	cmp	sl, fp
    28a4:	bne	281c <__assert_fail@plt+0x36c>
    28a8:	ldr	r0, [sp, #4]
    28ac:	bl	2108 <free@plt>
    28b0:	ldr	r3, [r7, #16]
    28b4:	ldmib	r3, {r1, r2, ip}
    28b8:	str	r4, [r3]
    28bc:	ldr	r0, [r3, #28]
    28c0:	lsl	r1, r1, #1
    28c4:	add	r2, r2, #1
    28c8:	stmib	r3, {r1, r2}
    28cc:	cmp	r0, ip, lsr #1
    28d0:	movls	r2, #0
    28d4:	strls	r2, [r3, #32]
    28d8:	bhi	28f8 <__assert_fail@plt+0x448>
    28dc:	add	sp, sp, #12
    28e0:	ldrd	r4, [sp]
    28e4:	ldrd	r6, [sp, #8]
    28e8:	ldrd	r8, [sp, #16]
    28ec:	ldrd	sl, [sp, #24]
    28f0:	add	sp, sp, #32
    28f4:	pop	{pc}		; (ldr pc, [sp], #4)
    28f8:	ldr	r2, [r3, #32]
    28fc:	add	r2, r2, #1
    2900:	cmp	r2, #1
    2904:	str	r2, [r3, #32]
    2908:	movhi	r2, #1
    290c:	strhi	r2, [r3, #36]	; 0x24
    2910:	b	28dc <__assert_fail@plt+0x42c>
    2914:	mov	r0, #44	; 0x2c
    2918:	str	r7, [r3]
    291c:	str	r8, [r7, #20]
    2920:	bl	2288 <malloc@plt>
    2924:	cmp	r0, #0
    2928:	mov	r5, r0
    292c:	str	r0, [r7, #16]
    2930:	beq	29a4 <__assert_fail@plt+0x4f4>
    2934:	mov	r0, #0
    2938:	mov	r1, #0
    293c:	mov	lr, #32
    2940:	mov	ip, #5
    2944:	mov	r2, #16
    2948:	add	r4, r7, #16
    294c:	str	lr, [r5, #4]
    2950:	str	ip, [r5, #8]
    2954:	strd	r0, [r5, #12]
    2958:	str	r4, [r5, #16]
    295c:	strd	r0, [r5, #20]
    2960:	str	r2, [r5, #20]
    2964:	strd	r0, [r5, #28]
    2968:	strd	r0, [r5, #36]	; 0x24
    296c:	mov	r1, #1
    2970:	mov	r0, #384	; 0x180
    2974:	bl	206c <calloc@plt>
    2978:	cmp	r0, #0
    297c:	str	r0, [r5]
    2980:	beq	29a4 <__assert_fail@plt+0x4f4>
    2984:	movw	r3, #8161	; 0x1fe1
    2988:	movt	r3, #40977	; 0xa011
    298c:	mov	r8, r7
    2990:	str	r3, [r5, #40]	; 0x28
    2994:	b	2668 <__assert_fail@plt+0x1b8>
    2998:	ldr	r3, [r5]
    299c:	str	r3, [sp, #4]
    29a0:	b	28a8 <__assert_fail@plt+0x3f8>
    29a4:	mvn	r0, #0
    29a8:	bl	22dc <exit@plt>
    29ac:	andeq	r8, r2, ip, ror #22
    29b0:	movw	r2, #26215	; 0x6667
    29b4:	movt	r2, #26214	; 0x6666
    29b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    29bc:	asr	r3, r1, #31
    29c0:	mov	r4, r0
    29c4:	strd	r6, [sp, #8]
    29c8:	strd	r8, [sp, #16]
    29cc:	mov	r9, r1
    29d0:	strd	sl, [sp, #24]
    29d4:	smull	r1, r2, r2, r9
    29d8:	str	lr, [sp, #32]
    29dc:	sub	sp, sp, #12
    29e0:	rsb	r3, r3, r2, asr #2
    29e4:	add	r3, r3, r3, lsl #2
    29e8:	sub	r3, r9, r3, lsl #1
    29ec:	ands	r3, r3, #255	; 0xff
    29f0:	rsbne	r3, r3, #10
    29f4:	addne	r9, r9, r3
    29f8:	mov	r0, r9
    29fc:	bl	2288 <malloc@plt>
    2a00:	cmp	r9, #0
    2a04:	mov	r3, r0
    2a08:	str	r0, [sp, #4]
    2a0c:	ble	2bf8 <__assert_fail@plt+0x748>
    2a10:	mvn	r1, #3
    2a14:	mov	r0, r4
    2a18:	sub	r1, r1, r3
    2a1c:	add	ip, r3, #4
    2a20:	movw	fp, #7172	; 0x1c04
    2a24:	movw	sl, #14344	; 0x3808
    2a28:	ldrb	r3, [r0, #2]
    2a2c:	ldrb	r2, [r0, #1]
    2a30:	ldrb	r4, [r0]
    2a34:	lsl	r3, r3, #2
    2a38:	ldrb	lr, [r0, #3]
    2a3c:	orr	r3, r3, r2, lsl #1
    2a40:	ldrb	r2, [r0, #4]
    2a44:	orr	r3, r3, r4
    2a48:	ldrb	r4, [r0, #5]
    2a4c:	orr	r3, r3, lr, lsl #3
    2a50:	ldrb	lr, [r0, #6]
    2a54:	orr	r3, r3, r2, lsl #4
    2a58:	ldrb	r5, [r0, #7]
    2a5c:	orr	r3, r3, r4, lsl #5
    2a60:	ldrb	r2, [r0, #12]
    2a64:	orr	r3, r3, lr, lsl #6
    2a68:	ldrb	r4, [r0, #11]
    2a6c:	orr	r3, r3, r5, lsl #7
    2a70:	ldrb	r5, [r0, #10]
    2a74:	lsl	r2, r2, #2
    2a78:	ldrb	lr, [r0, #8]
    2a7c:	orr	r2, r2, r4, lsl #1
    2a80:	ldrb	r6, [r0, #13]
    2a84:	orr	r2, r2, r5
    2a88:	ldrb	r4, [r0, #9]
    2a8c:	orr	r3, r3, lr, lsl #8
    2a90:	strb	lr, [ip, #4]
    2a94:	ldrb	r5, [r0, #14]
    2a98:	orr	r2, r2, r6, lsl #3
    2a9c:	ldr	r8, [r0, #4]
    2aa0:	orr	r3, r3, r4, lsl #9
    2aa4:	ldr	r7, [r0]
    2aa8:	orr	r2, r2, r5, lsl #4
    2aac:	uxth	r3, r3
    2ab0:	ands	r6, r3, #1
    2ab4:	uxtb	r5, r2
    2ab8:	movweq	r2, #22530	; 0x5802
    2abc:	str	r7, [ip, #-4]
    2ac0:	str	r8, [ip]
    2ac4:	strb	r4, [ip, #5]
    2ac8:	beq	2ad4 <__assert_fail@plt+0x624>
    2acc:	movw	r2, #29699	; 0x7403
    2ad0:	movw	r6, #11265	; 0x2c01
    2ad4:	tst	r3, #2
    2ad8:	moveq	r2, r6
    2adc:	tst	r3, #4
    2ae0:	eorne	r2, r2, fp
    2ae4:	uxthne	r2, r2
    2ae8:	tst	r3, #8
    2aec:	eorne	r2, r2, sl
    2af0:	uxthne	r2, r2
    2af4:	tst	r3, #16
    2af8:	beq	2b08 <__assert_fail@plt+0x658>
    2afc:	eor	r2, r2, #28672	; 0x7000
    2b00:	eor	r2, r2, #16
    2b04:	uxth	r2, r2
    2b08:	tst	r3, #32
    2b0c:	beq	2b1c <__assert_fail@plt+0x66c>
    2b10:	eor	r2, r2, #19456	; 0x4c00
    2b14:	eor	r2, r2, #32
    2b18:	uxth	r2, r2
    2b1c:	tst	r3, #64	; 0x40
    2b20:	eorne	r2, r2, #13376	; 0x3440
    2b24:	uxthne	r2, r2
    2b28:	tst	r3, #128	; 0x80
    2b2c:	beq	2b3c <__assert_fail@plt+0x68c>
    2b30:	eor	r2, r2, #26624	; 0x6800
    2b34:	eor	r2, r2, #128	; 0x80
    2b38:	uxth	r2, r2
    2b3c:	tst	r3, #256	; 0x100
    2b40:	eorne	r2, r2, #32000	; 0x7d00
    2b44:	uxthne	r2, r2
    2b48:	tst	r3, #512	; 0x200
    2b4c:	eorne	r2, r2, #22016	; 0x5600
    2b50:	uxthne	r2, r2
    2b54:	eor	r2, r5, r2, lsr #10
    2b58:	uxtb	r2, r2
    2b5c:	sub	r3, r2, #1
    2b60:	tst	r3, r2
    2b64:	beq	2be4 <__assert_fail@plt+0x734>
    2b68:	sub	r2, r2, #7
    2b6c:	cmp	r2, #24
    2b70:	addls	pc, pc, r2, lsl #2
    2b74:	b	2ca4 <__assert_fail@plt+0x7f4>
    2b78:	b	2c94 <__assert_fail@plt+0x7e4>
    2b7c:	b	2ca4 <__assert_fail@plt+0x7f4>
    2b80:	b	2ca4 <__assert_fail@plt+0x7f4>
    2b84:	b	2ca4 <__assert_fail@plt+0x7f4>
    2b88:	b	2c84 <__assert_fail@plt+0x7d4>
    2b8c:	b	2ca4 <__assert_fail@plt+0x7f4>
    2b90:	b	2c74 <__assert_fail@plt+0x7c4>
    2b94:	b	2c64 <__assert_fail@plt+0x7b4>
    2b98:	b	2ca4 <__assert_fail@plt+0x7f4>
    2b9c:	b	2ca4 <__assert_fail@plt+0x7f4>
    2ba0:	b	2ca4 <__assert_fail@plt+0x7f4>
    2ba4:	b	2ca4 <__assert_fail@plt+0x7f4>
    2ba8:	b	2c54 <__assert_fail@plt+0x7a4>
    2bac:	b	2ca4 <__assert_fail@plt+0x7f4>
    2bb0:	b	2c48 <__assert_fail@plt+0x798>
    2bb4:	b	2c38 <__assert_fail@plt+0x788>
    2bb8:	b	2ca4 <__assert_fail@plt+0x7f4>
    2bbc:	b	2ca4 <__assert_fail@plt+0x7f4>
    2bc0:	b	2ca4 <__assert_fail@plt+0x7f4>
    2bc4:	b	2c28 <__assert_fail@plt+0x778>
    2bc8:	b	2ca4 <__assert_fail@plt+0x7f4>
    2bcc:	b	2c18 <__assert_fail@plt+0x768>
    2bd0:	b	2ca4 <__assert_fail@plt+0x7f4>
    2bd4:	b	2ca4 <__assert_fail@plt+0x7f4>
    2bd8:	b	2bdc <__assert_fail@plt+0x72c>
    2bdc:	eor	lr, lr, #1
    2be0:	strb	lr, [ip, #4]
    2be4:	add	ip, ip, #10
    2be8:	add	r0, r0, #15
    2bec:	add	r3, r1, ip
    2bf0:	cmp	r9, r3
    2bf4:	bgt	2a28 <__assert_fail@plt+0x578>
    2bf8:	ldr	r0, [sp, #4]
    2bfc:	add	sp, sp, #12
    2c00:	ldrd	r4, [sp]
    2c04:	ldrd	r6, [sp, #8]
    2c08:	ldrd	r8, [sp, #16]
    2c0c:	ldrd	sl, [sp, #24]
    2c10:	add	sp, sp, #32
    2c14:	pop	{pc}		; (ldr pc, [sp], #4)
    2c18:	ldrb	r3, [ip]
    2c1c:	eor	r3, r3, #1
    2c20:	strb	r3, [ip]
    2c24:	b	2be4 <__assert_fail@plt+0x734>
    2c28:	ldrb	r3, [ip, #3]
    2c2c:	eor	r3, r3, #1
    2c30:	strb	r3, [ip, #3]
    2c34:	b	2be4 <__assert_fail@plt+0x734>
    2c38:	ldrb	r3, [ip, #-3]
    2c3c:	eor	r3, r3, #1
    2c40:	strb	r3, [ip, #-3]
    2c44:	b	2be4 <__assert_fail@plt+0x734>
    2c48:	eor	r4, r4, #1
    2c4c:	strb	r4, [ip, #5]
    2c50:	b	2be4 <__assert_fail@plt+0x734>
    2c54:	ldrb	r3, [ip, #1]
    2c58:	eor	r3, r3, #1
    2c5c:	strb	r3, [ip, #1]
    2c60:	b	2be4 <__assert_fail@plt+0x734>
    2c64:	ldrb	r3, [ip, #-1]
    2c68:	eor	r3, r3, #1
    2c6c:	strb	r3, [ip, #-1]
    2c70:	b	2be4 <__assert_fail@plt+0x734>
    2c74:	ldrb	r3, [ip, #2]
    2c78:	eor	r3, r3, #1
    2c7c:	strb	r3, [ip, #2]
    2c80:	b	2be4 <__assert_fail@plt+0x734>
    2c84:	ldrb	r3, [ip, #-4]
    2c88:	eor	r3, r3, #1
    2c8c:	strb	r3, [ip, #-4]
    2c90:	b	2be4 <__assert_fail@plt+0x734>
    2c94:	ldrb	r3, [ip, #-2]
    2c98:	eor	r3, r3, #1
    2c9c:	strb	r3, [ip, #-2]
    2ca0:	b	2be4 <__assert_fail@plt+0x734>
    2ca4:	ldr	r0, [sp, #4]
    2ca8:	bl	2108 <free@plt>
    2cac:	mov	r3, #0
    2cb0:	str	r3, [sp, #4]
    2cb4:	b	2bf8 <__assert_fail@plt+0x748>
    2cb8:	str	r4, [sp, #-8]!
    2cbc:	ldr	ip, [r0, #64]	; 0x40
    2cc0:	str	lr, [sp, #4]
    2cc4:	ldrb	r2, [r0, #9]
    2cc8:	sub	ip, ip, #2
    2ccc:	lsl	ip, ip, #3
    2cd0:	lsl	r3, r2, #7
    2cd4:	asr	r1, r2, #5
    2cd8:	cmp	ip, #0
    2cdc:	orr	r3, r3, r2, lsr #7
    2ce0:	and	r1, r1, #2
    2ce4:	asr	r4, r2, #3
    2ce8:	orr	r3, r3, r1
    2cec:	asr	r1, r2, #1
    2cf0:	and	r4, r4, #4
    2cf4:	orr	r3, r3, r4
    2cf8:	and	r1, r1, #8
    2cfc:	lsl	r4, r2, #1
    2d00:	orr	r3, r3, r1
    2d04:	lsl	r1, r2, #3
    2d08:	and	r4, r4, #16
    2d0c:	lsl	r2, r2, #5
    2d10:	and	r1, r1, #32
    2d14:	orr	r3, r3, r4
    2d18:	orr	r3, r3, r1
    2d1c:	and	r1, r2, #64	; 0x40
    2d20:	orr	r3, r3, r1
    2d24:	uxtb	r3, r3
    2d28:	lsl	r1, r3, #8
    2d2c:	ble	2d78 <__assert_fail@plt+0x8c8>
    2d30:	add	lr, r0, #68	; 0x44
    2d34:	mov	r2, #0
    2d38:	ldrb	r4, [lr, r2]
    2d3c:	lsr	r3, r1, #1
    2d40:	add	r2, r2, #1
    2d44:	uxth	r2, r2
    2d48:	cmp	ip, r2
    2d4c:	eor	r1, r1, r4
    2d50:	orr	r3, r3, r1, lsl #15
    2d54:	sxth	r3, r3
    2d58:	ubfx	r1, r3, #5, #11
    2d5c:	and	r1, r1, #1024	; 0x400
    2d60:	eor	r3, r3, r1
    2d64:	ubfx	r1, r3, #12, #4
    2d68:	and	r1, r1, #8
    2d6c:	eor	r3, r3, r1
    2d70:	uxth	r1, r3
    2d74:	bgt	2d38 <__assert_fail@plt+0x888>
    2d78:	add	ip, ip, #68	; 0x44
    2d7c:	ldr	r4, [sp]
    2d80:	add	sp, sp, #4
    2d84:	add	r3, r0, ip
    2d88:	ldrb	r0, [r0, ip]
    2d8c:	ldrb	ip, [r3, #1]
    2d90:	ldrb	r2, [r3, #2]
    2d94:	ldrb	lr, [r3, #3]
    2d98:	orr	r0, r0, ip, lsl #1
    2d9c:	ldrb	ip, [r3, #4]
    2da0:	orr	r0, r0, r2, lsl #2
    2da4:	ldrb	r2, [r3, #5]
    2da8:	orr	r0, r0, lr, lsl #3
    2dac:	ldrb	lr, [r3, #6]
    2db0:	orr	r0, r0, ip, lsl #4
    2db4:	ldrb	ip, [r3, #7]
    2db8:	orr	r0, r0, r2, lsl #5
    2dbc:	ldrb	r2, [r3, #8]
    2dc0:	orr	r0, r0, lr, lsl #6
    2dc4:	ldrb	lr, [r3, #9]
    2dc8:	orr	r0, r0, ip, lsl #7
    2dcc:	ldrb	ip, [r3, #10]
    2dd0:	orr	r0, r0, r2, lsl #8
    2dd4:	ldrb	r2, [r3, #11]
    2dd8:	orr	r0, r0, lr, lsl #9
    2ddc:	ldrb	lr, [r3, #12]
    2de0:	orr	r0, r0, ip, lsl #10
    2de4:	ldrb	ip, [r3, #13]
    2de8:	orr	r0, r0, r2, lsl #11
    2dec:	ldrb	r2, [r3, #14]
    2df0:	orr	r0, r0, lr, lsl #12
    2df4:	ldrb	r3, [r3, #15]
    2df8:	orr	r0, r0, ip, lsl #13
    2dfc:	orr	r0, r0, r2, lsl #14
    2e00:	orr	r0, r0, r3, lsl #15
    2e04:	uxth	r0, r0
    2e08:	sub	r0, r0, r1
    2e0c:	clz	r0, r0
    2e10:	lsr	r0, r0, #5
    2e14:	pop	{pc}		; (ldr pc, [sp], #4)
    2e18:	cmp	r2, #58	; 0x3a
    2e1c:	bxeq	lr
    2e20:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2e24:	mov	r4, r2
    2e28:	strd	r6, [sp, #8]
    2e2c:	sub	r6, r3, #1
    2e30:	cmp	r6, #0
    2e34:	strd	r8, [sp, #16]
    2e38:	mov	r8, r1
    2e3c:	movne	r5, #1
    2e40:	strd	sl, [sp, #24]
    2e44:	mov	sl, r0
    2e48:	str	lr, [sp, #32]
    2e4c:	sub	sp, sp, #28
    2e50:	bne	2f54 <__assert_fail@plt+0xaa4>
    2e54:	ldr	r3, [pc, #304]	; 2f8c <__assert_fail@plt+0xadc>
    2e58:	movw	r2, #19995	; 0x4e1b
    2e5c:	movt	r2, #65377	; 0xff61
    2e60:	mov	r6, #1
    2e64:	ldr	r7, [pc, #292]	; 2f90 <__assert_fail@plt+0xae0>
    2e68:	str	r2, [sp, #8]
    2e6c:	movw	r2, #29288	; 0x7268
    2e70:	movt	r2, #52347	; 0xcc7b
    2e74:	add	r3, pc, r3
    2e78:	str	r0, [sp, #16]
    2e7c:	str	r1, [sp, #20]
    2e80:	add	r7, pc, r7
    2e84:	str	r3, [sp]
    2e88:	sub	r3, r3, #4080	; 0xff0
    2e8c:	str	r2, [sp, #12]
    2e90:	str	r3, [sp, #4]
    2e94:	sub	r3, r4, #32
    2e98:	rsb	r1, r4, #32
    2e9c:	ldm	sp, {r0, r8}
    2ea0:	lsl	r3, r6, r3
    2ea4:	add	r5, r7, #2048	; 0x800
    2ea8:	ldr	r2, [sp, #16]
    2eac:	orr	r3, r3, r6, lsr r1
    2eb0:	ldr	r1, [sp, #8]
    2eb4:	sub	ip, r0, #2032	; 0x7f0
    2eb8:	orr	r2, r2, r6, lsl r4
    2ebc:	add	r4, r4, #1
    2ec0:	eor	r0, r2, r1
    2ec4:	ldr	r1, [sp, #20]
    2ec8:	orr	r3, r1, r3
    2ecc:	ldr	r1, [sp, #12]
    2ed0:	eor	lr, r3, r1
    2ed4:	lsr	fp, lr, #24
    2ed8:	and	r9, lr, #255	; 0xff
    2edc:	add	r1, r5, r9, lsl #3
    2ee0:	ldr	sl, [r5, r9, lsl #3]
    2ee4:	ubfx	r5, lr, #8, #8
    2ee8:	add	r9, r7, fp, lsl #3
    2eec:	ldr	fp, [r7, fp, lsl #3]
    2ef0:	ubfx	lr, lr, #16, #8
    2ef4:	add	r5, r8, r5, lsl #3
    2ef8:	ldr	r1, [r1, #4]
    2efc:	add	ip, ip, lr, lsl #3
    2f00:	ldr	r9, [r9, #4]
    2f04:	eor	r0, r0, fp
    2f08:	ldr	lr, [r5, #-8]
    2f0c:	eor	r0, r0, sl
    2f10:	ldr	r5, [r5, #-4]
    2f14:	eor	r9, r9, r1
    2f18:	ldmdb	ip, {fp, ip}
    2f1c:	eor	r0, r0, lr
    2f20:	eor	r1, r9, r5
    2f24:	eor	r0, r0, fp
    2f28:	eor	r1, r1, ip
    2f2c:	bl	25e4 <__assert_fail@plt+0x134>
    2f30:	cmp	r4, #58	; 0x3a
    2f34:	bne	2e94 <__assert_fail@plt+0x9e4>
    2f38:	add	sp, sp, #28
    2f3c:	ldrd	r4, [sp]
    2f40:	ldrd	r6, [sp, #8]
    2f44:	ldrd	r8, [sp, #16]
    2f48:	ldrd	sl, [sp, #24]
    2f4c:	add	sp, sp, #32
    2f50:	pop	{pc}		; (ldr pc, [sp], #4)
    2f54:	sub	r1, r4, #32
    2f58:	rsb	ip, r4, #32
    2f5c:	lsl	r0, r5, r4
    2f60:	lsl	r1, r5, r1
    2f64:	add	r4, r4, #1
    2f68:	mov	r3, r6
    2f6c:	orr	r0, r0, sl
    2f70:	mov	r2, r4
    2f74:	orr	r1, r1, r5, lsr ip
    2f78:	orr	r1, r1, r8
    2f7c:	bl	2e18 <__assert_fail@plt+0x968>
    2f80:	cmp	r4, #58	; 0x3a
    2f84:	bne	2f54 <__assert_fail@plt+0xaa4>
    2f88:	b	2f38 <__assert_fail@plt+0xa88>
    2f8c:			; <UNDEFINED> instruction: 0x000106b4
    2f90:			; <UNDEFINED> instruction: 0x0000e6b0

00002f94 <btbb_gen_syncword@@Base>:
    2f94:	ldr	r2, [pc, #88]	; 2ff4 <btbb_gen_syncword@@Base+0x60>
    2f98:	mov	r1, #-1342177278	; 0xb0000002
    2f9c:	mov	r3, #0
    2fa0:	strd	r4, [sp, #-12]!
    2fa4:	mov	r4, r0
    2fa8:	movw	r0, #3710	; 0xe7e
    2fac:	movt	r0, #51074	; 0xc782
    2fb0:	str	lr, [sp, #8]
    2fb4:	mov	lr, #8388608	; 0x800000
    2fb8:	add	r2, pc, r2
    2fbc:	add	r2, r2, #8
    2fc0:	ands	r5, r4, lr, asr r3
    2fc4:	add	ip, r2, r3, lsl #3
    2fc8:	beq	2fdc <btbb_gen_syncword@@Base+0x48>
    2fcc:	ldr	r5, [r2, r3, lsl #3]
    2fd0:	ldr	ip, [ip, #4]
    2fd4:	eor	r0, r0, r5
    2fd8:	eor	r1, r1, ip
    2fdc:	add	r3, r3, #1
    2fe0:	cmp	r3, #24
    2fe4:	bne	2fc0 <btbb_gen_syncword@@Base+0x2c>
    2fe8:	ldrd	r4, [sp]
    2fec:	add	sp, sp, #8
    2ff0:	pop	{pc}		; (ldr pc, [sp], #4)
    2ff4:	andeq	r0, r1, r0, ror r5

00002ff8 <btbb_get_release@@Base>:
    2ff8:	ldr	r0, [pc, #4]	; 3004 <btbb_get_release@@Base+0xc>
    2ffc:	add	r0, pc, r0
    3000:	bx	lr
    3004:	andeq	r0, r1, r8, ror fp

00003008 <btbb_get_version@@Base>:
    3008:	ldr	r0, [pc, #4]	; 3014 <btbb_get_version@@Base+0xc>
    300c:	add	r0, pc, r0
    3010:	bx	lr
    3014:	andeq	r0, r1, r4, ror fp

00003018 <btbb_init@@Base>:
    3018:	ldr	r3, [pc, #464]	; 31f0 <btbb_init@@Base+0x1d8>
    301c:	cmp	r0, #5
    3020:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3024:	strd	r6, [sp, #8]
    3028:	strd	r8, [sp, #16]
    302c:	strd	sl, [sp, #24]
    3030:	add	r3, pc, r3
    3034:	str	lr, [sp, #32]
    3038:	sub	sp, sp, #28
    303c:	bhi	31c4 <btbb_init@@Base+0x1ac>
    3040:	ldr	r2, [pc, #428]	; 31f4 <btbb_init@@Base+0x1dc>
    3044:	adds	r3, r0, #0
    3048:	movne	r3, #1
    304c:	add	r2, pc, r2
    3050:	ldr	r2, [r2]
    3054:	cmp	r2, #0
    3058:	movne	r3, #0
    305c:	cmp	r3, #0
    3060:	bne	3084 <btbb_init@@Base+0x6c>
    3064:	mov	r0, #0
    3068:	add	sp, sp, #28
    306c:	ldrd	r4, [sp]
    3070:	ldrd	r6, [sp, #8]
    3074:	ldrd	r8, [sp, #16]
    3078:	ldrd	sl, [sp, #24]
    307c:	add	sp, sp, #32
    3080:	pop	{pc}		; (ldr pc, [sp], #4)
    3084:	ldr	r3, [pc, #364]	; 31f8 <btbb_init@@Base+0x1e0>
    3088:	movw	r2, #19995	; 0x4e1b
    308c:	movt	r2, #65377	; 0xff61
    3090:	mov	r6, #0
    3094:	mov	r5, #1
    3098:	ldr	sl, [pc, #348]	; 31fc <btbb_init@@Base+0x1e4>
    309c:	cmp	r6, #0
    30a0:	str	r2, [sp]
    30a4:	movw	r2, #29288	; 0x7268
    30a8:	movt	r2, #52347	; 0xcc7b
    30ac:	add	r3, pc, r3
    30b0:	str	r2, [sp, #4]
    30b4:	str	r0, [sp, #16]
    30b8:	str	r3, [sp, #8]
    30bc:	sub	r3, r3, #4080	; 0xff0
    30c0:	add	sl, pc, sl
    30c4:	str	r3, [sp, #12]
    30c8:	bne	3190 <btbb_init@@Base+0x178>
    30cc:	mov	r4, r6
    30d0:	str	r6, [sp, #20]
    30d4:	sub	r3, r4, #32
    30d8:	rsb	r1, r4, #32
    30dc:	ldr	r0, [sp, #8]
    30e0:	lsl	r3, r5, r3
    30e4:	add	r7, sl, #2048	; 0x800
    30e8:	lsl	r2, r5, r4
    30ec:	ldr	r6, [sp, #12]
    30f0:	add	r4, r4, #1
    30f4:	orr	r3, r3, r5, lsr r1
    30f8:	ldr	r1, [sp]
    30fc:	sub	ip, r0, #2032	; 0x7f0
    3100:	eor	r0, r2, r1
    3104:	ldr	r1, [sp, #4]
    3108:	eor	lr, r3, r1
    310c:	lsr	fp, lr, #24
    3110:	and	r8, lr, #255	; 0xff
    3114:	add	r1, r7, r8, lsl #3
    3118:	ldr	r9, [r7, r8, lsl #3]
    311c:	ubfx	r7, lr, #8, #8
    3120:	add	r8, sl, fp, lsl #3
    3124:	ldr	fp, [sl, fp, lsl #3]
    3128:	ubfx	lr, lr, #16, #8
    312c:	add	r7, r6, r7, lsl #3
    3130:	ldr	r1, [r1, #4]
    3134:	add	ip, ip, lr, lsl #3
    3138:	ldr	r8, [r8, #4]
    313c:	eor	r0, r0, fp
    3140:	ldr	lr, [r7, #-8]
    3144:	eor	r0, r0, r9
    3148:	ldr	r7, [r7, #-4]
    314c:	eor	r8, r8, r1
    3150:	ldmdb	ip, {fp, ip}
    3154:	eor	r0, r0, lr
    3158:	eor	r1, r8, r7
    315c:	eor	r0, r0, fp
    3160:	eor	r1, r1, ip
    3164:	bl	25e4 <__assert_fail@plt+0x134>
    3168:	cmp	r4, #58	; 0x3a
    316c:	bne	30d4 <btbb_init@@Base+0xbc>
    3170:	ldr	r6, [sp, #20]
    3174:	add	r3, r6, #2
    3178:	add	r6, r6, #1
    317c:	ldr	r2, [sp, #16]
    3180:	cmp	r2, r3
    3184:	blt	3064 <btbb_init@@Base+0x4c>
    3188:	cmp	r6, #0
    318c:	beq	30cc <btbb_init@@Base+0xb4>
    3190:	mov	r4, #0
    3194:	sub	r1, r4, #32
    3198:	rsb	ip, r4, #32
    319c:	lsl	r0, r5, r4
    31a0:	lsl	r1, r5, r1
    31a4:	add	r4, r4, #1
    31a8:	mov	r3, r6
    31ac:	mov	r2, r4
    31b0:	orr	r1, r1, r5, lsr ip
    31b4:	bl	2e18 <__assert_fail@plt+0x968>
    31b8:	cmp	r4, #58	; 0x3a
    31bc:	bne	3194 <btbb_init@@Base+0x17c>
    31c0:	b	3174 <btbb_init@@Base+0x15c>
    31c4:	ldr	r0, [pc, #52]	; 3200 <btbb_init@@Base+0x1e8>
    31c8:	ldr	r2, [pc, #52]	; 3204 <btbb_init@@Base+0x1ec>
    31cc:	ldr	r1, [pc, #52]	; 3208 <btbb_init@@Base+0x1f0>
    31d0:	ldr	r3, [r3, r0]
    31d4:	add	r2, pc, r2
    31d8:	add	r2, r2, #200	; 0xc8
    31dc:	add	r1, pc, r1
    31e0:	ldr	r0, [r3]
    31e4:	bl	233c <fprintf@plt>
    31e8:	mvn	r0, #0
    31ec:	b	3068 <btbb_init@@Base+0x50>
    31f0:	andeq	r7, r2, r8, asr #31
    31f4:	andeq	r8, r2, r4, asr r1
    31f8:	andeq	r0, r1, ip, ror r4
    31fc:	andeq	lr, r0, r0, ror r4
    3200:	andeq	r0, r0, r4, lsl #3
    3204:	andeq	r0, r1, r4, asr r3
    3208:	andeq	r0, r1, r8, lsr #19

0000320c <btbb_packet_new@@Base>:
    320c:	strd	r4, [sp, #-16]!
    3210:	mov	r1, #5952	; 0x1740
    3214:	mov	r0, #1
    3218:	ldr	r5, [pc, #84]	; 3274 <btbb_packet_new@@Base+0x68>
    321c:	str	r6, [sp, #8]
    3220:	str	lr, [sp, #12]
    3224:	bl	206c <calloc@plt>
    3228:	subs	r4, r0, #0
    322c:	add	r5, pc, r5
    3230:	beq	3250 <btbb_packet_new@@Base+0x44>
    3234:	mov	r3, #1
    3238:	str	r3, [r4]
    323c:	mov	r0, r4
    3240:	ldrd	r4, [sp]
    3244:	ldr	r6, [sp, #8]
    3248:	add	sp, sp, #12
    324c:	pop	{pc}		; (ldr pc, [sp], #4)
    3250:	ldr	r3, [pc, #32]	; 3278 <btbb_packet_new@@Base+0x6c>
    3254:	mov	r2, #25
    3258:	mov	r1, #1
    325c:	ldr	r0, [pc, #24]	; 327c <btbb_packet_new@@Base+0x70>
    3260:	ldr	r3, [r5, r3]
    3264:	add	r0, pc, r0
    3268:	ldr	r3, [r3]
    326c:	bl	221c <fwrite@plt>
    3270:	b	323c <btbb_packet_new@@Base+0x30>
    3274:	andeq	r7, r2, ip, asr #27
    3278:	andeq	r0, r0, r4, lsl #3
    327c:	andeq	r0, r1, r0, asr #18

00003280 <btbb_packet_ref@@Base>:
    3280:	ldr	r3, [r0]
    3284:	add	r3, r3, #1
    3288:	str	r3, [r0]
    328c:	bx	lr

00003290 <btbb_packet_unref@@Base>:
    3290:	ldr	r3, [r0]
    3294:	subs	r3, r3, #1
    3298:	beq	32a4 <btbb_packet_unref@@Base+0x14>
    329c:	str	r3, [r0]
    32a0:	bx	lr
    32a4:	b	2108 <free@plt>

000032a8 <btbb_packet_get_lap@@Base>:
    32a8:	ldr	r0, [r0, #12]
    32ac:	bx	lr

000032b0 <btbb_packet_get_uap@@Base>:
    32b0:	ldrb	r0, [r0, #9]
    32b4:	bx	lr

000032b8 <btbb_packet_get_nap@@Base>:
    32b8:	ldrh	r0, [r0, #10]
    32bc:	bx	lr

000032c0 <btbb_packet_get_clkn@@Base>:
    32c0:	ldr	r0, [r0, #2816]	; 0xb00
    32c4:	bx	lr

000032c8 <btbb_packet_get_channel@@Base>:
    32c8:	ldrb	r0, [r0, #8]
    32cc:	bx	lr

000032d0 <btbb_packet_set_modulation@@Base>:
    32d0:	strb	r1, [r0, #16]
    32d4:	bx	lr

000032d8 <btbb_packet_get_modulation@@Base>:
    32d8:	ldrb	r0, [r0, #16]
    32dc:	bx	lr

000032e0 <btbb_packet_set_transport@@Base>:
    32e0:	strb	r1, [r0, #17]
    32e4:	bx	lr

000032e8 <btbb_packet_get_transport@@Base>:
    32e8:	ldrb	r0, [r0, #17]
    32ec:	bx	lr

000032f0 <btbb_packet_get_ac_errors@@Base>:
    32f0:	ldrb	r0, [r0, #2820]	; 0xb04
    32f4:	bx	lr

000032f8 <promiscuous_packet_search@@Base>:
    32f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    32fc:	cmp	r1, #0
    3300:	strd	r6, [sp, #8]
    3304:	strd	r8, [sp, #16]
    3308:	strd	sl, [sp, #24]
    330c:	str	lr, [sp, #32]
    3310:	sub	sp, sp, #68	; 0x44
    3314:	ldrb	ip, [r0, #58]	; 0x3a
    3318:	ldrb	r4, [r0, #57]	; 0x39
    331c:	ldrb	r5, [r0, #59]	; 0x3b
    3320:	orr	r4, r4, ip, lsl #1
    3324:	ldrb	ip, [r0, #60]	; 0x3c
    3328:	orr	r4, r4, r5, lsl #2
    332c:	ldrb	r5, [r0, #61]	; 0x3d
    3330:	orr	r4, r4, ip, lsl #3
    3334:	ldrb	ip, [r0, #62]	; 0x3e
    3338:	orr	r4, r4, r5, lsl #4
    333c:	orr	r4, r4, ip, lsl #5
    3340:	ble	36ac <promiscuous_packet_search@@Base+0x3b4>
    3344:	str	r3, [sp, #36]	; 0x24
    3348:	add	r1, r1, #62	; 0x3e
    334c:	lsl	r4, r4, #1
    3350:	ldr	r3, [pc, #908]	; 36e4 <promiscuous_packet_search@@Base+0x3ec>
    3354:	add	r6, r0, r1
    3358:	movw	r1, #21756	; 0x54fc
    335c:	movt	r1, #48076	; 0xbbcc
    3360:	movw	r7, #65474	; 0xffc2
    3364:	movt	r7, #65535	; 0xffff
    3368:	add	lr, r0, #62	; 0x3e
    336c:	str	r2, [sp, #52]	; 0x34
    3370:	uxtb	r4, r4
    3374:	sub	r7, r7, r0
    3378:	ldr	r2, [pc, #872]	; 36e8 <promiscuous_packet_search@@Base+0x3f0>
    337c:	add	r3, pc, r3
    3380:	str	r3, [sp, #12]
    3384:	add	r3, r3, #352	; 0x160
    3388:	str	r1, [sp, #20]
    338c:	movw	r1, #36246	; 0x8d96
    3390:	movt	r1, #33668	; 0x8384
    3394:	str	r3, [sp, #16]
    3398:	movw	r3, #31161	; 0x79b9
    339c:	movt	r3, #40503	; 0x9e37
    33a0:	add	r2, pc, r2
    33a4:	str	r1, [sp, #24]
    33a8:	str	r3, [sp, #40]	; 0x28
    33ac:	movw	r3, #47810	; 0xbac2
    33b0:	movt	r3, #40777	; 0x9f49
    33b4:	str	r2, [sp, #28]
    33b8:	str	r3, [sp, #44]	; 0x2c
    33bc:	add	r3, r2, #2048	; 0x800
    33c0:	str	r3, [sp, #32]
    33c4:	movw	r3, #16649	; 0x4109
    33c8:	movt	r3, #274	; 0x112
    33cc:	str	r3, [sp, #48]	; 0x30
    33d0:	b	33e0 <promiscuous_packet_search@@Base+0xe8>
    33d4:	cmp	r6, r5
    33d8:	mov	lr, r5
    33dc:	beq	36ac <promiscuous_packet_search@@Base+0x3b4>
    33e0:	ldrb	r2, [lr, #1]
    33e4:	lsr	r4, r4, #1
    33e8:	add	r8, r7, lr
    33ec:	add	r5, lr, #1
    33f0:	ldr	r3, [pc, #756]	; 36ec <promiscuous_packet_search@@Base+0x3f4>
    33f4:	orr	r4, r4, r2, lsl #6
    33f8:	add	r3, pc, r3
    33fc:	uxtb	r4, r4
    3400:	add	r3, r3, r4
    3404:	ldrb	r3, [r3, #212]	; 0xd4
    3408:	cmp	r3, #1
    340c:	bhi	33d4 <promiscuous_packet_search@@Base+0xdc>
    3410:	mov	r3, #0
    3414:	rsb	sl, r5, #64	; 0x40
    3418:	sub	r2, lr, #63	; 0x3f
    341c:	mov	r9, r3
    3420:	mov	ip, sl
    3424:	ldrb	sl, [r2, #1]
    3428:	add	r0, ip, r2
    342c:	cmp	r2, lr
    3430:	sub	r1, r0, #32
    3434:	add	r2, r2, #1
    3438:	lsl	r1, sl, r1
    343c:	orr	r3, r3, sl, lsl r0
    3440:	rsb	r0, r0, #32
    3444:	orr	r1, r1, sl, lsr r0
    3448:	orr	r9, r1, r9
    344c:	bne	3424 <promiscuous_packet_search@@Base+0x12c>
    3450:	ldr	r2, [sp, #12]
    3454:	lsr	ip, r9, #25
    3458:	mov	r0, #0
    345c:	bic	r9, r9, #-33554432	; 0xfe000000
    3460:	ldr	sl, [sp, #104]	; 0x68
    3464:	sub	lr, r2, #4080	; 0xff0
    3468:	sub	r1, r2, #2032	; 0x7f0
    346c:	ldr	r2, [sp, #16]
    3470:	strb	r0, [sl]
    3474:	add	ip, r2, ip, lsl #3
    3478:	ldr	sl, [ip, #-8]
    347c:	ldr	r2, [ip, #-4]
    3480:	ldr	ip, [sp, #24]
    3484:	orr	r3, r3, sl
    3488:	ldr	sl, [sp, #32]
    348c:	orr	r2, r9, r2
    3490:	str	r2, [sp, #8]
    3494:	eor	r2, r2, ip
    3498:	and	ip, r2, #255	; 0xff
    349c:	ubfx	r9, r2, #8, #8
    34a0:	ldr	fp, [sl, ip, lsl #3]
    34a4:	add	ip, sl, ip, lsl #3
    34a8:	add	lr, lr, r9, lsl #3
    34ac:	ldr	sl, [sp, #20]
    34b0:	ubfx	r9, r2, #16, #8
    34b4:	lsr	r2, r2, #24
    34b8:	add	r1, r1, r9, lsl #3
    34bc:	ldr	r9, [lr, #-4]
    34c0:	lsl	r2, r2, #3
    34c4:	ldr	ip, [ip, #4]
    34c8:	eor	r3, r3, sl
    34cc:	ldr	sl, [lr, #-8]
    34d0:	ldr	lr, [r1, #-8]
    34d4:	eor	ip, ip, r9
    34d8:	ldr	r1, [r1, #-4]
    34dc:	eor	sl, sl, fp
    34e0:	eor	r3, r3, sl
    34e4:	ldr	r9, [sp, #28]
    34e8:	eor	r3, r3, lr
    34ec:	str	r3, [sp]
    34f0:	eor	r3, ip, r1
    34f4:	str	r3, [sp, #4]
    34f8:	ldrd	sl, [r9, r2]
    34fc:	ldrd	r2, [sp]
    3500:	cmp	r3, fp
    3504:	cmpeq	r2, sl
    3508:	bne	352c <promiscuous_packet_search@@Base+0x234>
    350c:	ldr	r3, [sp, #36]	; 0x24
    3510:	cmp	r3, r0
    3514:	blt	33d4 <promiscuous_packet_search@@Base+0xdc>
    3518:	ldr	r3, [sp, #8]
    351c:	ldr	r2, [sp, #52]	; 0x34
    3520:	ubfx	r3, r3, #2, #24
    3524:	str	r3, [r2]
    3528:	b	36b0 <promiscuous_packet_search@@Base+0x3b8>
    352c:	ldr	r2, [pc, #444]	; 36f0 <promiscuous_packet_search@@Base+0x3f8>
    3530:	ldr	r3, [sp]
    3534:	add	r2, pc, r2
    3538:	ldr	r2, [r2]
    353c:	eor	r0, r3, sl
    3540:	ldr	r3, [sp, #4]
    3544:	str	r0, [sp, #56]	; 0x38
    3548:	cmp	r2, #0
    354c:	eor	r3, r3, fp
    3550:	str	r3, [sp, #60]	; 0x3c
    3554:	beq	36d0 <promiscuous_packet_search@@Base+0x3d8>
    3558:	ldr	lr, [r2, #16]
    355c:	bic	r1, r3, #16711680	; 0xff0000
    3560:	and	r9, r3, #16711680	; 0xff0000
    3564:	bic	r1, r1, #65280	; 0xff00
    3568:	bic	ip, r0, #16711680	; 0xff0000
    356c:	ldr	r2, [sp, #40]	; 0x28
    3570:	and	r3, r3, #65280	; 0xff00
    3574:	bic	ip, ip, #65280	; 0xff00
    3578:	movw	sl, #63341	; 0xf76d
    357c:	movt	sl, #7
    3580:	add	r1, r1, r2
    3584:	ldr	r2, [sp, #44]	; 0x2c
    3588:	add	r1, r1, r9
    358c:	add	r3, r1, r3
    3590:	ldr	r1, [sp, #48]	; 0x30
    3594:	ldr	r9, [lr, #4]
    3598:	add	ip, ip, r2
    359c:	and	r2, r0, #16711680	; 0xff0000
    35a0:	add	r2, ip, r2
    35a4:	and	r0, r0, #65280	; 0xff00
    35a8:	add	r2, r2, r0
    35ac:	sub	r2, r2, r3
    35b0:	add	r3, r3, r1
    35b4:	ldr	r1, [lr]
    35b8:	eor	sl, sl, r2
    35bc:	movw	r2, #48887	; 0xbef7
    35c0:	movt	r2, #65261	; 0xfeed
    35c4:	sub	r3, r3, sl
    35c8:	eor	r3, r3, sl, lsl #8
    35cc:	sub	r2, r2, sl
    35d0:	sub	r9, r9, #1
    35d4:	sub	r2, r2, r3
    35d8:	sub	sl, sl, r3
    35dc:	eor	r2, r2, r3, lsr #13
    35e0:	sub	sl, sl, r2
    35e4:	sub	r3, r3, r2
    35e8:	eor	sl, sl, r2, lsr #12
    35ec:	sub	r3, r3, sl
    35f0:	sub	r2, r2, sl
    35f4:	eor	r3, r3, sl, lsl #16
    35f8:	sub	r2, r2, r3
    35fc:	sub	sl, sl, r3
    3600:	eor	r2, r2, r3, lsr #5
    3604:	sub	sl, sl, r2
    3608:	sub	r3, r3, r2
    360c:	eor	sl, sl, r2, lsr #3
    3610:	sub	r3, r3, sl
    3614:	sub	r2, r2, sl
    3618:	eor	sl, r3, sl, lsl #10
    361c:	sub	r2, r2, sl
    3620:	eor	r2, r2, sl, lsr #15
    3624:	and	r9, r9, r2
    3628:	add	r9, r9, r9, lsl #1
    362c:	ldr	r9, [r1, r9, lsl #2]
    3630:	cmp	r9, #0
    3634:	beq	36d0 <promiscuous_packet_search@@Base+0x3d8>
    3638:	ldr	fp, [lr, #20]
    363c:	rsb	fp, fp, #0
    3640:	adds	r9, r9, fp
    3644:	beq	36d0 <promiscuous_packet_search@@Base+0x3d8>
    3648:	add	sl, sp, #56	; 0x38
    364c:	b	3664 <promiscuous_packet_search@@Base+0x36c>
    3650:	ldr	r3, [r9, #32]
    3654:	cmp	r3, #0
    3658:	beq	36d0 <promiscuous_packet_search@@Base+0x3d8>
    365c:	adds	r9, r3, fp
    3660:	beq	36d0 <promiscuous_packet_search@@Base+0x3d8>
    3664:	ldr	r2, [r9, #40]	; 0x28
    3668:	cmp	r2, #8
    366c:	bne	3650 <promiscuous_packet_search@@Base+0x358>
    3670:	mov	r1, sl
    3674:	ldr	r0, [r9, #36]	; 0x24
    3678:	bl	2174 <memcmp@plt>
    367c:	cmp	r0, #0
    3680:	bne	3650 <promiscuous_packet_search@@Base+0x358>
    3684:	ldr	r2, [sp, #8]
    3688:	ldr	r0, [r9, #8]
    368c:	ldr	r3, [r9, #12]
    3690:	eor	r2, r2, r3
    3694:	mov	r1, r3
    3698:	str	r2, [sp, #8]
    369c:	bl	113a0 <lell_pcapng_close@@Base+0x7c>
    36a0:	ldr	r3, [sp, #104]	; 0x68
    36a4:	strb	r0, [r3]
    36a8:	b	350c <promiscuous_packet_search@@Base+0x214>
    36ac:	mvn	r8, #0
    36b0:	mov	r0, r8
    36b4:	add	sp, sp, #68	; 0x44
    36b8:	ldrd	r4, [sp]
    36bc:	ldrd	r6, [sp, #8]
    36c0:	ldrd	r8, [sp, #16]
    36c4:	ldrd	sl, [sp, #24]
    36c8:	add	sp, sp, #32
    36cc:	pop	{pc}		; (ldr pc, [sp], #4)
    36d0:	ldr	r2, [sp, #104]	; 0x68
    36d4:	mvn	r3, #0
    36d8:	mov	r0, #255	; 0xff
    36dc:	strb	r3, [r2]
    36e0:	b	350c <promiscuous_packet_search@@Base+0x214>
    36e4:	andeq	r0, r1, ip, lsr #3
    36e8:	muleq	r0, r0, r1
    36ec:	andeq	r0, r1, r0, lsr r1
    36f0:	andeq	r7, r2, ip, ror #24

000036f4 <find_known_lap@@Base>:
    36f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    36f8:	mov	r5, r1
    36fc:	strd	r6, [sp, #8]
    3700:	strd	r8, [sp, #16]
    3704:	mov	r8, r0
    3708:	mov	r0, r2
    370c:	strd	sl, [sp, #24]
    3710:	str	lr, [sp, #32]
    3714:	sub	sp, sp, #12
    3718:	str	r3, [sp]
    371c:	bl	2228 <btbb_gen_syncword@plt>
    3720:	cmp	r5, #0
    3724:	ble	37c0 <find_known_lap@@Base+0xcc>
    3728:	movw	r6, #65473	; 0xffc1
    372c:	movt	r6, #65535	; 0xffff
    3730:	add	fp, r8, #63	; 0x3f
    3734:	sub	r6, r6, r8
    3738:	rsb	r8, r8, #0
    373c:	add	r3, r5, fp
    3740:	mov	r9, r0
    3744:	mov	sl, r1
    3748:	mov	r7, r8
    374c:	str	r3, [sp, #4]
    3750:	mov	r0, #0
    3754:	add	r8, r6, fp
    3758:	mov	r1, r0
    375c:	sub	ip, fp, #64	; 0x40
    3760:	add	lr, r7, #1
    3764:	add	r2, lr, ip
    3768:	ldrb	r4, [ip, #1]!
    376c:	sub	r3, r2, #32
    3770:	lsl	r3, r4, r3
    3774:	cmp	fp, ip
    3778:	orr	r0, r0, r4, lsl r2
    377c:	rsb	r2, r2, #32
    3780:	orr	r3, r3, r4, lsr r2
    3784:	orr	r1, r3, r1
    3788:	bne	3764 <find_known_lap@@Base+0x70>
    378c:	eor	r0, r0, r9
    3790:	eor	r1, r1, sl
    3794:	bl	113a0 <lell_pcapng_close@@Base+0x7c>
    3798:	ldr	r3, [sp]
    379c:	cmp	r0, r3
    37a0:	ldr	r3, [sp, #48]	; 0x30
    37a4:	strb	r0, [r3]
    37a8:	ble	37e4 <find_known_lap@@Base+0xf0>
    37ac:	ldr	r3, [sp, #4]
    37b0:	add	fp, fp, #1
    37b4:	sub	r7, r7, #1
    37b8:	cmp	fp, r3
    37bc:	bne	3750 <find_known_lap@@Base+0x5c>
    37c0:	mvn	r7, #0
    37c4:	mov	r0, r7
    37c8:	add	sp, sp, #12
    37cc:	ldrd	r4, [sp]
    37d0:	ldrd	r6, [sp, #8]
    37d4:	ldrd	r8, [sp, #16]
    37d8:	ldrd	sl, [sp, #24]
    37dc:	add	sp, sp, #32
    37e0:	pop	{pc}		; (ldr pc, [sp], #4)
    37e4:	mov	r7, r8
    37e8:	b	37c4 <find_known_lap@@Base+0xd0>

000037ec <btbb_packet_set_data@@Base>:
    37ec:	strd	r4, [sp, #-16]!
    37f0:	str	r6, [sp, #8]
    37f4:	str	lr, [sp, #12]
    37f8:	movw	lr, #3125	; 0xc35
    37fc:	cmp	r2, lr
    3800:	ldr	r6, [sp, #16]
    3804:	movlt	lr, r2
    3808:	cmp	r2, #0
    380c:	ble	38ac <btbb_packet_set_data@@Base+0xc0>
    3810:	add	ip, r0, #2816	; 0xb00
    3814:	add	r4, r1, #4
    3818:	mov	r5, ip
    381c:	add	ip, ip, #8
    3820:	add	r5, r5, #12
    3824:	cmp	r1, r5
    3828:	cmpcc	ip, r4
    382c:	movcs	r4, #1
    3830:	movcc	r4, #0
    3834:	cmp	r2, #8
    3838:	movle	r4, #0
    383c:	andgt	r4, r4, #1
    3840:	cmp	r4, #0
    3844:	beq	38d0 <btbb_packet_set_data@@Base+0xe4>
    3848:	bic	r5, lr, #3
    384c:	mov	r2, r1
    3850:	add	r5, r5, r1
    3854:	ldr	r4, [r2], #4
    3858:	cmp	r2, r5
    385c:	str	r4, [ip], #4
    3860:	bne	3854 <btbb_packet_set_data@@Base+0x68>
    3864:	bic	r2, lr, #3
    3868:	cmp	lr, r2
    386c:	beq	38ac <btbb_packet_set_data@@Base+0xc0>
    3870:	ldrb	r5, [r1, r2]
    3874:	add	r4, r0, r2
    3878:	add	ip, r2, #1
    387c:	cmp	lr, ip
    3880:	strb	r5, [r4, #2824]	; 0xb08
    3884:	ble	38ac <btbb_packet_set_data@@Base+0xc0>
    3888:	ldrb	r4, [r1, ip]
    388c:	add	r2, r2, #2
    3890:	add	ip, r0, ip
    3894:	cmp	lr, r2
    3898:	strb	r4, [ip, #2824]	; 0xb08
    389c:	ble	38ac <btbb_packet_set_data@@Base+0xc0>
    38a0:	ldrb	r1, [r1, r2]
    38a4:	add	r2, r0, r2
    38a8:	strb	r1, [r2, #2824]	; 0xb08
    38ac:	lsr	r6, r6, #1
    38b0:	movw	r2, #2822	; 0xb06
    38b4:	strb	r3, [r0, #8]
    38b8:	ldrd	r4, [sp]
    38bc:	strh	lr, [r0, r2]
    38c0:	str	r6, [r0, #2816]	; 0xb00
    38c4:	ldr	r6, [sp, #8]
    38c8:	add	sp, sp, #12
    38cc:	pop	{pc}		; (ldr pc, [sp], #4)
    38d0:	add	r4, r0, #2816	; 0xb00
    38d4:	sub	ip, r1, #1
    38d8:	add	r4, r4, #7
    38dc:	ldrb	r5, [ip, #1]
    38e0:	add	r2, ip, #2
    38e4:	add	ip, ip, #1
    38e8:	sub	r2, r2, r1
    38ec:	cmp	lr, r2
    38f0:	strb	r5, [r4, #1]!
    38f4:	bgt	38dc <btbb_packet_set_data@@Base+0xf0>
    38f8:	b	38ac <btbb_packet_set_data@@Base+0xc0>

000038fc <btbb_packet_set_flag@@Base>:
    38fc:	ldr	r3, [r0, #4]
    3900:	cmp	r2, #0
    3904:	mov	r2, #1
    3908:	lsl	r1, r2, r1
    390c:	biceq	r3, r3, r1
    3910:	orrne	r3, r3, r1
    3914:	str	r3, [r0, #4]
    3918:	bx	lr

0000391c <btbb_packet_set_uap@@Base>:
    391c:	mov	r2, #1
    3920:	strb	r1, [r0, #9]
    3924:	mov	r1, #2
    3928:	b	20f0 <btbb_packet_set_flag@plt>

0000392c <btbb_find_ac@@Base>:
    392c:	str	r4, [sp, #-8]!
    3930:	cmn	r2, #1
    3934:	str	lr, [sp, #4]
    3938:	sub	sp, sp, #24
    393c:	str	r2, [sp, #12]
    3940:	beq	39a8 <btbb_find_ac@@Base+0x7c>
    3944:	add	ip, sp, #23
    3948:	str	ip, [sp]
    394c:	bl	236c <find_known_lap@plt>
    3950:	mov	r4, r0
    3954:	cmp	r4, #0
    3958:	blt	3994 <btbb_find_ac@@Base+0x68>
    395c:	ldr	r3, [sp, #32]
    3960:	ldr	r3, [r3]
    3964:	cmp	r3, #0
    3968:	beq	39c0 <btbb_find_ac@@Base+0x94>
    396c:	ldrb	lr, [sp, #23]
    3970:	mov	r2, #0
    3974:	mov	r0, r3
    3978:	mov	r1, r2
    397c:	ldr	ip, [sp, #12]
    3980:	str	r2, [r3, #4]
    3984:	mov	r2, #1
    3988:	str	ip, [r3, #12]
    398c:	strb	lr, [r3, #2820]	; 0xb04
    3990:	bl	20f0 <btbb_packet_set_flag@plt>
    3994:	mov	r0, r4
    3998:	add	sp, sp, #24
    399c:	ldr	r4, [sp]
    39a0:	add	sp, sp, #4
    39a4:	pop	{pc}		; (ldr pc, [sp], #4)
    39a8:	add	ip, sp, #23
    39ac:	add	r2, sp, #12
    39b0:	str	ip, [sp]
    39b4:	bl	2450 <promiscuous_packet_search@plt>
    39b8:	mov	r4, r0
    39bc:	b	3954 <btbb_find_ac@@Base+0x28>
    39c0:	bl	22a0 <btbb_packet_new@plt>
    39c4:	ldr	r2, [sp, #32]
    39c8:	mov	r3, r0
    39cc:	str	r0, [r2]
    39d0:	b	396c <btbb_find_ac@@Base+0x40>

000039d4 <btbb_packet_get_flag@@Base>:
    39d4:	ldr	r3, [r0, #4]
    39d8:	mov	r2, #1
    39dc:	ands	r3, r3, r2, lsl r1
    39e0:	movne	r0, r2
    39e4:	moveq	r0, #0
    39e8:	bx	lr

000039ec <btbb_get_symbols@@Base>:
    39ec:	add	r0, r0, #2816	; 0xb00
    39f0:	add	r0, r0, #8
    39f4:	bx	lr

000039f8 <btbb_packet_get_payload_length@@Base>:
    39f8:	ldr	r0, [r0, #64]	; 0x40
    39fc:	bx	lr

00003a00 <btbb_get_payload@@Base>:
    3a00:	add	r0, r0, #68	; 0x44
    3a04:	bx	lr

00003a08 <btbb_get_payload_packed@@Base>:
    3a08:	ldr	r3, [r0, #64]	; 0x40
    3a0c:	cmp	r3, #0
    3a10:	ble	3a9c <btbb_get_payload_packed@@Base+0x94>
    3a14:	mov	r2, r0
    3a18:	sub	ip, r1, #1
    3a1c:	strd	r4, [sp, #-16]!
    3a20:	str	r6, [sp, #8]
    3a24:	str	lr, [sp, #12]
    3a28:	ldrb	r3, [r2, #70]	; 0x46
    3a2c:	add	lr, ip, #2
    3a30:	add	r2, r2, #8
    3a34:	sub	lr, lr, r1
    3a38:	add	ip, ip, #1
    3a3c:	ldrb	r4, [r2, #61]	; 0x3d
    3a40:	ldrb	r6, [r2, #60]	; 0x3c
    3a44:	lsl	r3, r3, #2
    3a48:	ldrb	r5, [r2, #63]	; 0x3f
    3a4c:	orr	r3, r3, r4, lsl #1
    3a50:	ldrb	r4, [r2, #64]	; 0x40
    3a54:	orr	r3, r3, r6
    3a58:	ldrb	r6, [r2, #65]	; 0x41
    3a5c:	orr	r3, r3, r5, lsl #3
    3a60:	ldrb	r5, [r2, #66]	; 0x42
    3a64:	orr	r3, r3, r4, lsl #4
    3a68:	ldrb	r4, [r2, #67]	; 0x43
    3a6c:	orr	r3, r3, r6, lsl #5
    3a70:	orr	r3, r3, r5, lsl #6
    3a74:	orr	r3, r3, r4, lsl #7
    3a78:	strb	r3, [ip]
    3a7c:	ldr	r3, [r0, #64]	; 0x40
    3a80:	cmp	r3, lr
    3a84:	bgt	3a28 <btbb_get_payload_packed@@Base+0x20>
    3a88:	ldrd	r4, [sp]
    3a8c:	mov	r0, r3
    3a90:	ldr	r6, [sp, #8]
    3a94:	add	sp, sp, #12
    3a98:	pop	{pc}		; (ldr pc, [sp], #4)
    3a9c:	mov	r0, r3
    3aa0:	bx	lr

00003aa4 <btbb_packet_get_type@@Base>:
    3aa4:	ldrb	r0, [r0, #18]
    3aa8:	bx	lr

00003aac <btbb_packet_get_lt_addr@@Base>:
    3aac:	ldrb	r0, [r0, #19]
    3ab0:	bx	lr

00003ab4 <btbb_packet_get_header_flags@@Base>:
    3ab4:	ldrb	r0, [r0, #20]
    3ab8:	bx	lr

00003abc <btbb_packet_get_hec@@Base>:
    3abc:	ldrb	r0, [r0, #21]
    3ac0:	bx	lr

00003ac4 <btbb_packet_get_header_packed@@Base>:
    3ac4:	push	{lr}		; (str lr, [sp, #-4]!)
    3ac8:	movw	lr, #65515	; 0xffeb
    3acc:	movt	lr, #65535	; 0xffff
    3ad0:	add	r3, r0, #21
    3ad4:	sub	lr, lr, r0
    3ad8:	add	ip, r0, #39	; 0x27
    3adc:	mov	r0, #0
    3ae0:	add	r2, lr, r3
    3ae4:	ldrb	r1, [r3, #1]!
    3ae8:	cmp	r3, ip
    3aec:	orr	r0, r0, r1, lsl r2
    3af0:	bne	3ae0 <btbb_packet_get_header_packed@@Base+0x1c>
    3af4:	pop	{pc}		; (ldr pc, [sp], #4)

00003af8 <fhs@@Base>:
    3af8:	movw	r3, #2822	; 0xb06
    3afc:	mov	ip, #20
    3b00:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3b04:	ldrh	r2, [r1, r3]
    3b08:	movw	r3, #361	; 0x169
    3b0c:	strd	r6, [sp, #8]
    3b10:	strd	r8, [sp, #16]
    3b14:	strd	sl, [sp, #24]
    3b18:	str	lr, [sp, #32]
    3b1c:	sub	sp, sp, #12
    3b20:	cmp	r2, r3
    3b24:	str	ip, [r1, #64]	; 0x40
    3b28:	movls	r4, #1
    3b2c:	bhi	3b50 <fhs@@Base+0x58>
    3b30:	mov	r0, r4
    3b34:	add	sp, sp, #12
    3b38:	ldrd	r4, [sp]
    3b3c:	ldrd	r6, [sp, #8]
    3b40:	ldrd	r8, [sp, #16]
    3b44:	ldrd	sl, [sp, #24]
    3b48:	add	sp, sp, #32
    3b4c:	pop	{pc}		; (ldr pc, [sp], #4)
    3b50:	mov	r4, r0
    3b54:	add	r0, r1, #2944	; 0xb80
    3b58:	mov	r7, r1
    3b5c:	add	r0, r0, #2
    3b60:	mov	r1, #160	; 0xa0
    3b64:	bl	29b0 <__assert_fail@plt+0x500>
    3b68:	subs	sl, r0, #0
    3b6c:	moveq	r4, sl
    3b70:	beq	3b30 <fhs@@Base+0x38>
    3b74:	ldr	r3, [pc, #512]	; 3d7c <fhs@@Base+0x284>
    3b78:	and	r0, r4, #63	; 0x3f
    3b7c:	movw	r6, #1033	; 0x409
    3b80:	movt	r6, #33026	; 0x8102
    3b84:	ldr	r8, [r7, #64]	; 0x40
    3b88:	add	r3, pc, r3
    3b8c:	add	r0, r3, r0
    3b90:	ldrb	r3, [r0, #1368]	; 0x558
    3b94:	lsl	r8, r8, #3
    3b98:	cmp	r8, #0
    3b9c:	add	r3, r3, #18
    3ba0:	smull	r2, r4, r6, r3
    3ba4:	add	r4, r4, r3
    3ba8:	asr	r4, r4, #6
    3bac:	rsb	r4, r4, r4, lsl #7
    3bb0:	sub	r4, r3, r4
    3bb4:	ble	3c1c <fhs@@Base+0x124>
    3bb8:	ldr	r9, [pc, #448]	; 3d80 <fhs@@Base+0x288>
    3bbc:	add	r5, r7, #67	; 0x43
    3bc0:	mov	fp, sl
    3bc4:	add	r8, r5, r8
    3bc8:	add	r9, pc, r9
    3bcc:	mov	r1, #0
    3bd0:	mov	r0, r7
    3bd4:	bl	2144 <btbb_packet_get_flag@plt>
    3bd8:	add	r3, r4, #1
    3bdc:	cmp	r0, #0
    3be0:	mov	r2, r3
    3be4:	add	r4, r9, r4
    3be8:	asr	ip, r3, #31
    3bec:	smull	r0, r1, r6, r3
    3bf0:	beq	3d50 <fhs@@Base+0x258>
    3bf4:	ldrb	r0, [r4, #1432]	; 0x598
    3bf8:	add	r1, r1, r3
    3bfc:	rsb	r4, ip, r1, asr #6
    3c00:	ldrb	r2, [fp], #1
    3c04:	rsb	r4, r4, r4, lsl #7
    3c08:	sub	r4, r3, r4
    3c0c:	eor	r2, r2, r0
    3c10:	strb	r2, [r5, #1]!
    3c14:	cmp	r5, r8
    3c18:	bne	3bcc <fhs@@Base+0xd4>
    3c1c:	mov	r0, r7
    3c20:	bl	2cb8 <__assert_fail@plt+0x808>
    3c24:	cmp	r0, #0
    3c28:	bne	3d40 <fhs@@Base+0x248>
    3c2c:	ldr	r3, [pc, #336]	; 3d84 <fhs@@Base+0x28c>
    3c30:	movw	r8, #1033	; 0x409
    3c34:	movt	r8, #33026	; 0x8102
    3c38:	ldr	r2, [pc, #328]	; 3d88 <fhs@@Base+0x290>
    3c3c:	add	r3, pc, r3
    3c40:	add	r3, r3, #1360	; 0x550
    3c44:	add	r2, pc, r2
    3c48:	add	r9, r3, #39	; 0x27
    3c4c:	add	r3, r3, #71	; 0x47
    3c50:	strd	r2, [sp]
    3c54:	ldrb	r3, [r9, #1]!
    3c58:	ldr	r6, [r7, #64]	; 0x40
    3c5c:	add	r3, r3, #18
    3c60:	smull	r2, r4, r8, r3
    3c64:	lsl	r6, r6, #3
    3c68:	add	r4, r4, r3
    3c6c:	cmp	r6, #0
    3c70:	asr	r4, r4, #6
    3c74:	addgt	r5, r7, #67	; 0x43
    3c78:	movgt	fp, sl
    3c7c:	addgt	r6, r5, r6
    3c80:	rsb	r4, r4, r4, lsl #7
    3c84:	sub	r4, r3, r4
    3c88:	ble	3ce0 <fhs@@Base+0x1e8>
    3c8c:	mov	r1, #0
    3c90:	mov	r0, r7
    3c94:	bl	2144 <btbb_packet_get_flag@plt>
    3c98:	ldr	r2, [sp]
    3c9c:	add	r1, r4, #1
    3ca0:	cmp	r0, #0
    3ca4:	mov	r3, r1
    3ca8:	add	ip, r2, r4
    3cac:	asr	r4, r1, #31
    3cb0:	smull	r2, r0, r8, r1
    3cb4:	beq	3d08 <fhs@@Base+0x210>
    3cb8:	ldrb	r3, [fp], #1
    3cbc:	add	r0, r0, r1
    3cc0:	rsb	r4, r4, r0, asr #6
    3cc4:	ldrb	ip, [ip, #1432]	; 0x598
    3cc8:	rsb	r4, r4, r4, lsl #7
    3ccc:	sub	r4, r1, r4
    3cd0:	eor	r3, r3, ip
    3cd4:	strb	r3, [r5, #1]!
    3cd8:	cmp	r6, r5
    3cdc:	bne	3c8c <fhs@@Base+0x194>
    3ce0:	mov	r0, r7
    3ce4:	bl	2cb8 <__assert_fail@plt+0x808>
    3ce8:	subs	r4, r0, #0
    3cec:	bne	3d40 <fhs@@Base+0x248>
    3cf0:	ldr	r3, [sp, #4]
    3cf4:	cmp	r9, r3
    3cf8:	bne	3c54 <fhs@@Base+0x15c>
    3cfc:	mov	r0, sl
    3d00:	bl	2108 <free@plt>
    3d04:	b	3b30 <fhs@@Base+0x38>
    3d08:	smull	r2, r1, r8, r1
    3d0c:	ldrb	r0, [fp], #1
    3d10:	asr	r4, r3, #31
    3d14:	add	r1, r1, r3
    3d18:	rsb	r4, r4, r1, asr #6
    3d1c:	strb	r0, [r5, #1]!
    3d20:	cmp	r6, r5
    3d24:	rsb	r4, r4, r4, lsl #7
    3d28:	sub	r4, r3, r4
    3d2c:	bne	3c8c <fhs@@Base+0x194>
    3d30:	mov	r0, r7
    3d34:	bl	2cb8 <__assert_fail@plt+0x808>
    3d38:	subs	r4, r0, #0
    3d3c:	beq	3cf0 <fhs@@Base+0x1f8>
    3d40:	mov	r0, sl
    3d44:	mov	r4, #1000	; 0x3e8
    3d48:	bl	2108 <free@plt>
    3d4c:	b	3b30 <fhs@@Base+0x38>
    3d50:	smull	r1, r3, r6, r3
    3d54:	ldrb	r1, [fp], #1
    3d58:	asr	r4, r2, #31
    3d5c:	add	r3, r3, r2
    3d60:	rsb	r4, r4, r3, asr #6
    3d64:	strb	r1, [r5, #1]!
    3d68:	cmp	r8, r5
    3d6c:	rsb	r4, r4, r4, lsl #7
    3d70:	sub	r4, r2, r4
    3d74:	bne	3bcc <fhs@@Base+0xd4>
    3d78:	b	3c1c <fhs@@Base+0x124>
    3d7c:	andeq	pc, r0, r0, lsr #19
    3d80:	andeq	pc, r0, r0, ror #18
    3d84:	andeq	pc, r0, ip, ror #17
    3d88:	andeq	pc, r0, r4, ror #17

00003d8c <DM@@Base>:
    3d8c:	movw	r2, #2822	; 0xb06
    3d90:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3d94:	mov	r5, r1
    3d98:	ldrh	r2, [r1, r2]
    3d9c:	mov	r4, r0
    3da0:	strd	r6, [sp, #8]
    3da4:	add	r7, r1, #2944	; 0xb80
    3da8:	strd	r8, [sp, #16]
    3dac:	add	r7, r7, #2
    3db0:	strd	sl, [sp, #24]
    3db4:	str	lr, [sp, #32]
    3db8:	sub	sp, sp, #20
    3dbc:	ldrb	r3, [r1, #18]
    3dc0:	sub	r8, r2, #122	; 0x7a
    3dc4:	sub	r3, r3, #3
    3dc8:	cmp	r3, #11
    3dcc:	addls	pc, pc, r3, lsl #2
    3dd0:	b	3e14 <DM@@Base+0x88>
    3dd4:	b	3e34 <DM@@Base+0xa8>
    3dd8:	b	3e14 <DM@@Base+0x88>
    3ddc:	b	3e14 <DM@@Base+0x88>
    3de0:	b	3e14 <DM@@Base+0x88>
    3de4:	b	3e14 <DM@@Base+0x88>
    3de8:	b	4030 <DM@@Base+0x2a4>
    3dec:	b	3e14 <DM@@Base+0x88>
    3df0:	b	4024 <DM@@Base+0x298>
    3df4:	b	3e14 <DM@@Base+0x88>
    3df8:	b	3e14 <DM@@Base+0x88>
    3dfc:	b	3e14 <DM@@Base+0x88>
    3e00:	b	3e04 <DM@@Base+0x78>
    3e04:	mov	r3, #228	; 0xe4
    3e08:	str	r3, [sp]
    3e0c:	cmp	r8, #29
    3e10:	bgt	4048 <DM@@Base+0x2bc>
    3e14:	mov	r0, #0
    3e18:	add	sp, sp, #20
    3e1c:	ldrd	r4, [sp]
    3e20:	ldrd	r6, [sp, #8]
    3e24:	ldrd	r8, [sp, #16]
    3e28:	ldrd	sl, [sp, #24]
    3e2c:	add	sp, sp, #32
    3e30:	pop	{pc}		; (ldr pc, [sp], #4)
    3e34:	mov	r3, #20
    3e38:	str	r3, [sp]
    3e3c:	cmp	r8, #14
    3e40:	ble	3e14 <DM@@Base+0x88>
    3e44:	mov	r1, #8
    3e48:	mov	r0, r7
    3e4c:	bl	29b0 <__assert_fail@plt+0x500>
    3e50:	subs	sl, r0, #0
    3e54:	str	sl, [sp, #12]
    3e58:	beq	3e14 <DM@@Base+0x88>
    3e5c:	ldr	r1, [pc, #1012]	; 4258 <DM@@Base+0x4cc>
    3e60:	and	r4, r4, #63	; 0x3f
    3e64:	movw	r3, #1033	; 0x409
    3e68:	movt	r3, #33026	; 0x8102
    3e6c:	add	fp, r5, #43	; 0x2b
    3e70:	mov	r9, r3
    3e74:	ldr	r2, [pc, #992]	; 425c <DM@@Base+0x4d0>
    3e78:	add	r1, pc, r1
    3e7c:	add	r4, r1, r4
    3e80:	ldrb	r1, [r4, #1368]	; 0x558
    3e84:	add	r2, pc, r2
    3e88:	str	r2, [sp, #4]
    3e8c:	add	r2, r5, #51	; 0x33
    3e90:	str	r2, [sp, #8]
    3e94:	add	r1, r1, #18
    3e98:	smull	r3, r4, r3, r1
    3e9c:	add	r4, r4, r1
    3ea0:	asr	r4, r4, #6
    3ea4:	rsb	r4, r4, r4, lsl #7
    3ea8:	sub	r4, r1, r4
    3eac:	mov	r6, r4
    3eb0:	mov	r1, #0
    3eb4:	mov	r0, r5
    3eb8:	bl	2144 <btbb_packet_get_flag@plt>
    3ebc:	ldr	r1, [sp, #4]
    3ec0:	add	r3, r6, #1
    3ec4:	cmp	r0, #0
    3ec8:	mov	r2, r3
    3ecc:	asr	ip, r3, #31
    3ed0:	add	r6, r1, r6
    3ed4:	smull	r0, r1, r9, r3
    3ed8:	beq	4174 <DM@@Base+0x3e8>
    3edc:	add	r1, r1, r3
    3ee0:	ldrb	r0, [r6, #1432]	; 0x598
    3ee4:	rsb	r6, ip, r1, asr #6
    3ee8:	ldrb	r2, [sl], #1
    3eec:	rsb	r6, r6, r6, lsl #7
    3ef0:	sub	r6, r3, r6
    3ef4:	ldr	r3, [sp, #8]
    3ef8:	eor	r2, r2, r0
    3efc:	strb	r2, [fp, #1]!
    3f00:	cmp	fp, r3
    3f04:	bne	3eb0 <DM@@Base+0x124>
    3f08:	ldr	r0, [sp, #12]
    3f0c:	bl	2108 <free@plt>
    3f10:	ldrb	r2, [r5, #48]	; 0x30
    3f14:	mov	r0, #1
    3f18:	ldrb	r1, [r5, #47]	; 0x2f
    3f1c:	ldrb	r3, [r5, #49]	; 0x31
    3f20:	orr	r1, r1, r2, lsl r0
    3f24:	ldrb	r2, [r5, #50]	; 0x32
    3f28:	orr	r1, r1, r3, lsl #2
    3f2c:	ldrb	r3, [r5, #51]	; 0x33
    3f30:	orr	r1, r1, r2, lsl #3
    3f34:	orr	r1, r1, r3, lsl #4
    3f38:	uxtb	r1, r1
    3f3c:	add	r1, r1, #3
    3f40:	str	r1, [r5, #64]	; 0x40
    3f44:	ldrb	r3, [r5, #18]
    3f48:	sub	r3, r3, #3
    3f4c:	uxtb	r2, r3
    3f50:	cmp	r2, #12
    3f54:	bls	41d0 <DM@@Base+0x444>
    3f58:	ldrb	r1, [r5, #45]	; 0x2d
    3f5c:	mov	r6, #0
    3f60:	str	r0, [r5, #40]	; 0x28
    3f64:	ldrb	r3, [r5, #44]	; 0x2c
    3f68:	str	r6, [r5, #64]	; 0x40
    3f6c:	ldrb	r2, [r5, #46]	; 0x2e
    3f70:	orr	r3, r3, r1, lsl #1
    3f74:	strb	r3, [r5, #60]	; 0x3c
    3f78:	strb	r2, [r5, #61]	; 0x3d
    3f7c:	mov	r0, r7
    3f80:	mov	r1, r6
    3f84:	bl	29b0 <__assert_fail@plt+0x500>
    3f88:	subs	r9, r0, #0
    3f8c:	beq	3e14 <DM@@Base+0x88>
    3f90:	cmp	r6, #0
    3f94:	ble	4004 <DM@@Base+0x278>
    3f98:	ldr	r8, [pc, #704]	; 4260 <DM@@Base+0x4d4>
    3f9c:	add	r7, r5, #67	; 0x43
    3fa0:	movw	sl, #1033	; 0x409
    3fa4:	movt	sl, #33026	; 0x8102
    3fa8:	add	r6, r7, r6
    3fac:	mov	fp, r9
    3fb0:	add	r8, pc, r8
    3fb4:	mov	r1, #0
    3fb8:	mov	r0, r5
    3fbc:	bl	2144 <btbb_packet_get_flag@plt>
    3fc0:	add	r3, r4, #1
    3fc4:	cmp	r0, #0
    3fc8:	mov	r2, r3
    3fcc:	add	r4, r8, r4
    3fd0:	asr	ip, r3, #31
    3fd4:	smull	r0, r1, sl, r3
    3fd8:	beq	41a4 <DM@@Base+0x418>
    3fdc:	ldrb	r0, [r4, #1432]	; 0x598
    3fe0:	add	r1, r1, r3
    3fe4:	rsb	r4, ip, r1, asr #6
    3fe8:	ldrb	r2, [fp], #1
    3fec:	rsb	r4, r4, r4, lsl #7
    3ff0:	sub	r4, r3, r4
    3ff4:	eor	r2, r2, r0
    3ff8:	strb	r2, [r7, #1]!
    3ffc:	cmp	r7, r6
    4000:	bne	3fb4 <DM@@Base+0x228>
    4004:	mov	r0, r9
    4008:	bl	2108 <free@plt>
    400c:	mov	r0, r5
    4010:	bl	2cb8 <__assert_fail@plt+0x808>
    4014:	cmp	r0, #0
    4018:	moveq	r0, #2
    401c:	movne	r0, #10
    4020:	b	3e18 <DM@@Base+0x8c>
    4024:	mov	r3, #125	; 0x7d
    4028:	str	r3, [sp]
    402c:	b	3e0c <DM@@Base+0x80>
    4030:	mov	r3, #12
    4034:	add	r7, r1, #3024	; 0xbd0
    4038:	sub	r8, r2, #202	; 0xca
    403c:	add	r7, r7, #2
    4040:	str	r3, [sp]
    4044:	b	3e3c <DM@@Base+0xb0>
    4048:	mov	r1, #16
    404c:	mov	r0, r7
    4050:	bl	29b0 <__assert_fail@plt+0x500>
    4054:	subs	fp, r0, #0
    4058:	str	fp, [sp, #12]
    405c:	beq	3e14 <DM@@Base+0x88>
    4060:	ldr	r2, [pc, #508]	; 4264 <DM@@Base+0x4d8>
    4064:	and	r1, r4, #63	; 0x3f
    4068:	movw	r3, #1033	; 0x409
    406c:	movt	r3, #33026	; 0x8102
    4070:	add	sl, r5, #43	; 0x2b
    4074:	mov	r9, r3
    4078:	ldr	r0, [pc, #488]	; 4268 <DM@@Base+0x4dc>
    407c:	add	r2, pc, r2
    4080:	add	r4, r2, r1
    4084:	ldrb	r2, [r4, #1368]	; 0x558
    4088:	add	r0, pc, r0
    408c:	str	r0, [sp, #8]
    4090:	add	r0, r5, #59	; 0x3b
    4094:	str	r0, [sp, #4]
    4098:	add	r2, r2, #18
    409c:	smull	r3, r4, r3, r2
    40a0:	add	r4, r4, r2
    40a4:	asr	r4, r4, #6
    40a8:	rsb	r4, r4, r4, lsl #7
    40ac:	sub	r4, r2, r4
    40b0:	mov	r6, r4
    40b4:	mov	r1, #0
    40b8:	mov	r0, r5
    40bc:	bl	2144 <btbb_packet_get_flag@plt>
    40c0:	ldr	r1, [sp, #8]
    40c4:	add	r3, r6, #1
    40c8:	cmp	r0, #0
    40cc:	mov	r2, r3
    40d0:	asr	ip, r3, #31
    40d4:	add	r6, r1, r6
    40d8:	smull	r0, r1, r9, r3
    40dc:	beq	4228 <DM@@Base+0x49c>
    40e0:	add	r1, r1, r3
    40e4:	ldrb	r0, [r6, #1432]	; 0x598
    40e8:	rsb	r6, ip, r1, asr #6
    40ec:	ldrb	r2, [fp], #1
    40f0:	rsb	r6, r6, r6, lsl #7
    40f4:	sub	r6, r3, r6
    40f8:	ldr	r3, [sp, #4]
    40fc:	eor	r2, r2, r0
    4100:	strb	r2, [sl, #1]!
    4104:	cmp	sl, r3
    4108:	bne	40b4 <DM@@Base+0x328>
    410c:	ldr	r0, [sp, #12]
    4110:	bl	2108 <free@plt>
    4114:	ldrb	r3, [r5, #48]	; 0x30
    4118:	mov	r0, #2
    411c:	ldrb	r1, [r5, #47]	; 0x2f
    4120:	ldrb	r2, [r5, #49]	; 0x31
    4124:	orr	r1, r1, r3, lsl #1
    4128:	ldrb	r3, [r5, #50]	; 0x32
    412c:	orr	r1, r1, r2, lsl r0
    4130:	ldrb	r2, [r5, #51]	; 0x33
    4134:	orr	r1, r1, r3, lsl #3
    4138:	ldrb	r3, [r5, #52]	; 0x34
    413c:	orr	r1, r1, r2, lsl #4
    4140:	ldrb	r2, [r5, #53]	; 0x35
    4144:	orr	r1, r1, r3, lsl #5
    4148:	ldrb	r3, [r5, #54]	; 0x36
    414c:	orr	r1, r1, r2, lsl #6
    4150:	ldrb	r2, [r5, #55]	; 0x37
    4154:	orr	r1, r1, r3, lsl #7
    4158:	ldrb	r3, [r5, #56]	; 0x38
    415c:	orr	r1, r1, r2, lsl #8
    4160:	orr	r1, r1, r3, lsl #9
    4164:	uxth	r1, r1
    4168:	add	r1, r1, #4
    416c:	str	r1, [r5, #64]	; 0x40
    4170:	b	3f44 <DM@@Base+0x1b8>
    4174:	smull	r1, r3, r9, r3
    4178:	ldrb	r1, [sl], #1
    417c:	asr	r6, r2, #31
    4180:	add	r3, r3, r2
    4184:	rsb	r6, r6, r3, asr #6
    4188:	ldr	r3, [sp, #8]
    418c:	strb	r1, [fp, #1]!
    4190:	rsb	r6, r6, r6, lsl #7
    4194:	sub	r6, r2, r6
    4198:	cmp	r3, fp
    419c:	bne	3eb0 <DM@@Base+0x124>
    41a0:	b	3f08 <DM@@Base+0x17c>
    41a4:	smull	r1, r3, sl, r3
    41a8:	ldrb	r1, [fp], #1
    41ac:	asr	r4, r2, #31
    41b0:	add	r3, r3, r2
    41b4:	rsb	r4, r4, r3, asr #6
    41b8:	strb	r1, [r7, #1]!
    41bc:	cmp	r7, r6
    41c0:	rsb	r4, r4, r4, lsl #7
    41c4:	sub	r4, r2, r4
    41c8:	bne	3fb4 <DM@@Base+0x228>
    41cc:	b	4004 <DM@@Base+0x278>
    41d0:	ldr	r3, [pc, #148]	; 426c <DM@@Base+0x4e0>
    41d4:	str	r0, [r5, #40]	; 0x28
    41d8:	ldrb	lr, [r5, #45]	; 0x2d
    41dc:	ldrb	ip, [r5, #46]	; 0x2e
    41e0:	add	r3, pc, r3
    41e4:	add	r3, r3, r2, lsl #2
    41e8:	ldrb	r2, [r5, #44]	; 0x2c
    41ec:	ldr	r0, [r3, #1560]	; 0x618
    41f0:	strb	ip, [r5, #61]	; 0x3d
    41f4:	orr	r3, r2, lr, lsl #1
    41f8:	cmp	r1, r0
    41fc:	strb	r3, [r5, #60]	; 0x3c
    4200:	movge	r1, r0
    4204:	ldr	r3, [sp]
    4208:	str	r1, [r5, #64]	; 0x40
    420c:	cmp	r1, r3
    4210:	bgt	4220 <DM@@Base+0x494>
    4214:	lsl	r6, r1, #3
    4218:	cmp	r6, r8
    421c:	ble	3f7c <DM@@Base+0x1f0>
    4220:	mov	r0, #1
    4224:	b	3e18 <DM@@Base+0x8c>
    4228:	smull	r1, r3, r9, r3
    422c:	ldrb	r1, [fp], #1
    4230:	asr	r6, r2, #31
    4234:	add	r3, r3, r2
    4238:	rsb	r6, r6, r3, asr #6
    423c:	ldr	r3, [sp, #4]
    4240:	strb	r1, [sl, #1]!
    4244:	rsb	r6, r6, r6, lsl #7
    4248:	sub	r6, r2, r6
    424c:	cmp	r3, sl
    4250:	bne	40b4 <DM@@Base+0x328>
    4254:	b	410c <DM@@Base+0x380>
    4258:			; <UNDEFINED> instruction: 0x0000f6b0
    425c:	andeq	pc, r0, r4, lsr #13
    4260:	andeq	pc, r0, r8, ror r5	; <UNPREDICTABLE>
    4264:	andeq	pc, r0, ip, lsr #9
    4268:	andeq	pc, r0, r0, lsr #9
    426c:	andeq	pc, r0, r8, asr #6

00004270 <DH@@Base>:
    4270:	movw	r2, #2822	; 0xb06
    4274:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4278:	strd	r6, [sp, #8]
    427c:	mov	r6, r1
    4280:	strd	r8, [sp, #16]
    4284:	strd	sl, [sp, #24]
    4288:	str	lr, [sp, #32]
    428c:	sub	sp, sp, #12
    4290:	ldrb	r3, [r1, #18]
    4294:	ldrh	r8, [r1, r2]
    4298:	sub	r3, r3, #4
    429c:	sub	r8, r8, #122	; 0x7a
    42a0:	cmp	r3, #11
    42a4:	addls	pc, pc, r3, lsl #2
    42a8:	b	4548 <DH@@Base+0x2d8>
    42ac:	b	42dc <DH@@Base+0x6c>
    42b0:	b	4548 <DH@@Base+0x2d8>
    42b4:	b	4548 <DH@@Base+0x2d8>
    42b8:	b	4548 <DH@@Base+0x2d8>
    42bc:	b	4548 <DH@@Base+0x2d8>
    42c0:	b	42dc <DH@@Base+0x6c>
    42c4:	b	4548 <DH@@Base+0x2d8>
    42c8:	b	453c <DH@@Base+0x2cc>
    42cc:	b	4548 <DH@@Base+0x2d8>
    42d0:	b	4548 <DH@@Base+0x2d8>
    42d4:	b	4548 <DH@@Base+0x2d8>
    42d8:	b	4430 <DH@@Base+0x1c0>
    42dc:	cmp	r8, #7
    42e0:	ble	4548 <DH@@Base+0x2d8>
    42e4:	ldr	r3, [pc, #956]	; 46a8 <DH@@Base+0x438>
    42e8:	and	r0, r0, #63	; 0x3f
    42ec:	movw	r4, #1033	; 0x409
    42f0:	movt	r4, #33026	; 0x8102
    42f4:	add	r7, r1, #43	; 0x2b
    42f8:	mov	fp, r4
    42fc:	ldr	r9, [pc, #936]	; 46ac <DH@@Base+0x43c>
    4300:	add	sl, r1, #51	; 0x33
    4304:	add	r3, pc, r3
    4308:	add	r0, r3, r0
    430c:	ldrb	r3, [r0, #1368]	; 0x558
    4310:	add	r9, pc, r9
    4314:	add	r3, r3, #18
    4318:	smull	r2, r4, r4, r3
    431c:	add	r4, r4, r3
    4320:	asr	r4, r4, #6
    4324:	rsb	r4, r4, r4, lsl #7
    4328:	sub	r4, r3, r4
    432c:	mov	r5, r4
    4330:	mov	r1, #0
    4334:	mov	r0, r6
    4338:	bl	2144 <btbb_packet_get_flag@plt>
    433c:	add	ip, r5, #1
    4340:	cmp	r0, #0
    4344:	add	r3, r9, r5
    4348:	asr	r5, ip, #31
    434c:	smull	r0, r2, fp, ip
    4350:	beq	4550 <DH@@Base+0x2e0>
    4354:	ldrb	r1, [r3, #1432]	; 0x598
    4358:	add	r2, r2, ip
    435c:	rsb	r5, r5, r2, asr #6
    4360:	ldrb	r3, [r7, #2903]	; 0xb57
    4364:	rsb	r5, r5, r5, lsl #7
    4368:	sub	r5, ip, r5
    436c:	eor	r3, r3, r1
    4370:	strb	r3, [r7, #1]!
    4374:	cmp	r7, sl
    4378:	bne	4330 <DH@@Base+0xc0>
    437c:	mov	r3, #30
    4380:	ldrb	r0, [r6, #48]	; 0x30
    4384:	mov	r2, #1
    4388:	str	r3, [sp, #4]
    438c:	ldrb	r3, [r6, #47]	; 0x2f
    4390:	ldrb	r1, [r6, #49]	; 0x31
    4394:	orr	r3, r3, r0, lsl r2
    4398:	ldrb	r0, [r6, #50]	; 0x32
    439c:	orr	r3, r3, r1, lsl #2
    43a0:	ldrb	r1, [r6, #51]	; 0x33
    43a4:	orr	r3, r3, r0, lsl #3
    43a8:	orr	r3, r3, r1, lsl #4
    43ac:	uxtb	r3, r3
    43b0:	add	r3, r3, #3
    43b4:	str	r3, [r6, #64]	; 0x40
    43b8:	ldrb	ip, [r6, #18]
    43bc:	sub	r1, ip, #3
    43c0:	uxtb	r1, r1
    43c4:	cmp	r1, #12
    43c8:	bhi	457c <DH@@Base+0x30c>
    43cc:	ldr	r0, [pc, #732]	; 46b0 <DH@@Base+0x440>
    43d0:	str	r2, [r6, #40]	; 0x28
    43d4:	ldrb	lr, [r6, #45]	; 0x2d
    43d8:	ldrb	r2, [r6, #44]	; 0x2c
    43dc:	add	r0, pc, r0
    43e0:	add	r1, r0, r1, lsl #2
    43e4:	ldr	r5, [r1, #1560]	; 0x618
    43e8:	orr	r2, r2, lr, lsl #1
    43ec:	ldrb	r1, [r6, #46]	; 0x2e
    43f0:	strb	r2, [r6, #60]	; 0x3c
    43f4:	ldr	r2, [sp, #4]
    43f8:	cmp	r3, r5
    43fc:	movge	r3, r5
    4400:	strb	r1, [r6, #61]	; 0x3d
    4404:	str	r3, [r6, #64]	; 0x40
    4408:	cmp	r2, r3
    440c:	bge	45ac <DH@@Base+0x33c>
    4410:	mov	r0, #1
    4414:	add	sp, sp, #12
    4418:	ldrd	r4, [sp]
    441c:	ldrd	r6, [sp, #8]
    4420:	ldrd	r8, [sp, #16]
    4424:	ldrd	sl, [sp, #24]
    4428:	add	sp, sp, #32
    442c:	pop	{pc}		; (ldr pc, [sp], #4)
    4430:	movw	r3, #343	; 0x157
    4434:	str	r3, [sp, #4]
    4438:	cmp	r8, #15
    443c:	ble	4548 <DH@@Base+0x2d8>
    4440:	ldr	r2, [pc, #620]	; 46b4 <DH@@Base+0x444>
    4444:	and	r0, r0, #63	; 0x3f
    4448:	movw	r4, #1033	; 0x409
    444c:	movt	r4, #33026	; 0x8102
    4450:	add	r7, r6, #43	; 0x2b
    4454:	mov	r9, r4
    4458:	ldr	fp, [pc, #600]	; 46b8 <DH@@Base+0x448>
    445c:	add	sl, r6, #59	; 0x3b
    4460:	add	r2, pc, r2
    4464:	add	r0, r2, r0
    4468:	ldrb	r2, [r0, #1368]	; 0x558
    446c:	add	fp, pc, fp
    4470:	add	r2, r2, #18
    4474:	smull	r3, r4, r4, r2
    4478:	add	r4, r4, r2
    447c:	asr	r4, r4, #6
    4480:	rsb	r4, r4, r4, lsl #7
    4484:	sub	r4, r2, r4
    4488:	mov	r5, r4
    448c:	mov	r1, #0
    4490:	mov	r0, r6
    4494:	bl	2144 <btbb_packet_get_flag@plt>
    4498:	add	r2, r5, #1
    449c:	cmp	r0, #0
    44a0:	add	lr, fp, r5
    44a4:	mov	r1, r2
    44a8:	asr	ip, r2, #31
    44ac:	smull	r3, r5, r9, r2
    44b0:	beq	4650 <DH@@Base+0x3e0>
    44b4:	ldrb	r1, [r7, #2903]	; 0xb57
    44b8:	add	r5, r5, r2
    44bc:	rsb	r5, ip, r5, asr #6
    44c0:	ldrb	r0, [lr, #1432]	; 0x598
    44c4:	rsb	r5, r5, r5, lsl #7
    44c8:	sub	r5, r2, r5
    44cc:	eor	r1, r1, r0
    44d0:	strb	r1, [r7, #1]!
    44d4:	cmp	r7, sl
    44d8:	bne	448c <DH@@Base+0x21c>
    44dc:	ldrb	r1, [r6, #48]	; 0x30
    44e0:	mov	r2, #2
    44e4:	ldrb	r3, [r6, #47]	; 0x2f
    44e8:	ldrb	r0, [r6, #49]	; 0x31
    44ec:	orr	r3, r3, r1, lsl #1
    44f0:	ldrb	r1, [r6, #50]	; 0x32
    44f4:	orr	r3, r3, r0, lsl r2
    44f8:	ldrb	r0, [r6, #51]	; 0x33
    44fc:	orr	r3, r3, r1, lsl #3
    4500:	ldrb	r1, [r6, #52]	; 0x34
    4504:	orr	r3, r3, r0, lsl #4
    4508:	ldrb	r0, [r6, #53]	; 0x35
    450c:	orr	r3, r3, r1, lsl #5
    4510:	ldrb	r1, [r6, #54]	; 0x36
    4514:	orr	r3, r3, r0, lsl #6
    4518:	ldrb	r0, [r6, #55]	; 0x37
    451c:	orr	r3, r3, r1, lsl #7
    4520:	ldrb	r1, [r6, #56]	; 0x38
    4524:	orr	r3, r3, r0, lsl #8
    4528:	orr	r3, r3, r1, lsl #9
    452c:	uxth	r3, r3
    4530:	add	r3, r3, #4
    4534:	str	r3, [r6, #64]	; 0x40
    4538:	b	43b8 <DH@@Base+0x148>
    453c:	mov	r3, #187	; 0xbb
    4540:	str	r3, [sp, #4]
    4544:	b	4438 <DH@@Base+0x1c8>
    4548:	mov	r0, #0
    454c:	b	4414 <DH@@Base+0x1a4>
    4550:	smull	r2, r3, fp, ip
    4554:	ldrb	r2, [r7, #2903]	; 0xb57
    4558:	asr	r5, ip, #31
    455c:	add	r3, r3, ip
    4560:	rsb	r5, r5, r3, asr #6
    4564:	strb	r2, [r7, #1]!
    4568:	cmp	r7, sl
    456c:	rsb	r5, r5, r5, lsl #7
    4570:	sub	r5, ip, r5
    4574:	bne	4330 <DH@@Base+0xc0>
    4578:	b	437c <DH@@Base+0x10c>
    457c:	ldrb	r1, [r6, #45]	; 0x2d
    4580:	mov	r0, #0
    4584:	str	r2, [r6, #40]	; 0x28
    4588:	cmp	r8, r0
    458c:	ldrb	r3, [r6, #44]	; 0x2c
    4590:	str	r0, [r6, #64]	; 0x40
    4594:	ldrb	r2, [r6, #46]	; 0x2e
    4598:	orr	r3, r3, r1, lsl #1
    459c:	strb	r3, [r6, #60]	; 0x3c
    45a0:	strb	r2, [r6, #61]	; 0x3d
    45a4:	blt	4410 <DH@@Base+0x1a0>
    45a8:	b	462c <DH@@Base+0x3bc>
    45ac:	lsl	r3, r3, #3
    45b0:	cmp	r8, r3
    45b4:	blt	4410 <DH@@Base+0x1a0>
    45b8:	cmp	r3, #0
    45bc:	ble	462c <DH@@Base+0x3bc>
    45c0:	ldr	r8, [pc, #244]	; 46bc <DH@@Base+0x44c>
    45c4:	add	r7, r6, #67	; 0x43
    45c8:	movw	r9, #1033	; 0x409
    45cc:	movt	r9, #33026	; 0x8102
    45d0:	add	r5, r7, r3
    45d4:	add	r8, pc, r8
    45d8:	mov	r1, #0
    45dc:	mov	r0, r6
    45e0:	bl	2144 <btbb_packet_get_flag@plt>
    45e4:	add	r2, r4, #1
    45e8:	cmp	r0, #0
    45ec:	mov	r1, r2
    45f0:	add	r4, r8, r4
    45f4:	asr	ip, r2, #31
    45f8:	smull	r0, r3, r9, r2
    45fc:	beq	467c <DH@@Base+0x40c>
    4600:	ldrb	r0, [r4, #1432]	; 0x598
    4604:	add	r3, r3, r2
    4608:	rsb	r4, ip, r3, asr #6
    460c:	ldrb	r1, [r7, #2879]	; 0xb3f
    4610:	rsb	r4, r4, r4, lsl #7
    4614:	sub	r4, r2, r4
    4618:	eor	r3, r1, r0
    461c:	strb	r3, [r7, #1]!
    4620:	cmp	r7, r5
    4624:	bne	45d8 <DH@@Base+0x368>
    4628:	ldrb	ip, [r6, #18]
    462c:	cmp	ip, #9
    4630:	moveq	r0, #2
    4634:	beq	4414 <DH@@Base+0x1a4>
    4638:	mov	r0, r6
    463c:	bl	2cb8 <__assert_fail@plt+0x808>
    4640:	cmp	r0, #0
    4644:	moveq	r0, #2
    4648:	movne	r0, #10
    464c:	b	4414 <DH@@Base+0x1a4>
    4650:	smull	r3, r2, r9, r2
    4654:	ldrb	r0, [r7, #2903]	; 0xb57
    4658:	asr	r5, r1, #31
    465c:	add	r2, r2, r1
    4660:	rsb	r5, r5, r2, asr #6
    4664:	strb	r0, [r7, #1]!
    4668:	cmp	sl, r7
    466c:	rsb	r5, r5, r5, lsl #7
    4670:	sub	r5, r1, r5
    4674:	bne	448c <DH@@Base+0x21c>
    4678:	b	44dc <DH@@Base+0x26c>
    467c:	smull	r2, r3, r9, r1
    4680:	ldrb	r2, [r7, #2879]	; 0xb3f
    4684:	asr	r4, r1, #31
    4688:	add	r3, r3, r1
    468c:	rsb	r4, r4, r3, asr #6
    4690:	strb	r2, [r7, #1]!
    4694:	cmp	r7, r5
    4698:	rsb	r4, r4, r4, lsl #7
    469c:	sub	r4, r1, r4
    46a0:	bne	45d8 <DH@@Base+0x368>
    46a4:	b	4628 <DH@@Base+0x3b8>
    46a8:	andeq	pc, r0, r4, lsr #4
    46ac:	andeq	pc, r0, r8, lsl r2	; <UNPREDICTABLE>
    46b0:	andeq	pc, r0, ip, asr #2
    46b4:	andeq	pc, r0, r8, asr #1
    46b8:	strheq	pc, [r0], -ip	; <UNPREDICTABLE>
    46bc:	andeq	lr, r0, r4, asr pc

000046c0 <EV3@@Base>:
    46c0:	movw	r3, #2822	; 0xb06
    46c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    46c8:	mov	r5, #0
    46cc:	strd	r6, [sp, #8]
    46d0:	strd	r8, [sp, #16]
    46d4:	ldrh	r8, [r1, r3]
    46d8:	strd	sl, [sp, #24]
    46dc:	str	lr, [sp, #32]
    46e0:	sub	sp, sp, #12
    46e4:	str	r5, [r1, #64]	; 0x40
    46e8:	sub	r3, r8, #122	; 0x7a
    46ec:	cmp	r3, #7
    46f0:	str	r3, [sp, #4]
    46f4:	ble	47e4 <EV3@@Base+0x124>
    46f8:	ldr	r3, [pc, #344]	; 4858 <EV3@@Base+0x198>
    46fc:	and	r0, r0, #63	; 0x3f
    4700:	add	r9, r1, #2944	; 0xb80
    4704:	mov	r7, r9
    4708:	movw	r8, #1033	; 0x409
    470c:	movt	r8, #33026	; 0x8102
    4710:	ldr	sl, [pc, #324]	; 485c <EV3@@Base+0x19c>
    4714:	mov	fp, r1
    4718:	add	r9, r9, #2
    471c:	add	r7, r7, #10
    4720:	add	r3, pc, r3
    4724:	add	r0, r3, r0
    4728:	ldrb	r3, [r0, #1368]	; 0x558
    472c:	add	sl, pc, sl
    4730:	str	r3, [sp]
    4734:	ldr	r2, [sp]
    4738:	add	r3, r5, #18
    473c:	add	r5, r5, #67	; 0x43
    4740:	add	r5, fp, r5
    4744:	mov	r6, r9
    4748:	add	r3, r3, r2
    474c:	asr	r4, r3, #31
    4750:	smull	r2, r1, r8, r3
    4754:	add	r1, r1, r3
    4758:	rsb	r4, r4, r1, asr #6
    475c:	rsb	r4, r4, r4, lsl #7
    4760:	sub	r4, r3, r4
    4764:	mov	r1, #0
    4768:	mov	r0, fp
    476c:	bl	2144 <btbb_packet_get_flag@plt>
    4770:	add	r1, r4, #1
    4774:	cmp	r0, #0
    4778:	add	ip, sl, r4
    477c:	mov	r3, r1
    4780:	asr	r4, r1, #31
    4784:	smull	r2, r0, r8, r1
    4788:	beq	4804 <EV3@@Base+0x144>
    478c:	ldrb	r3, [r6], #1
    4790:	add	r0, r0, r1
    4794:	rsb	r4, r4, r0, asr #6
    4798:	ldrb	ip, [ip, #1432]	; 0x598
    479c:	rsb	r4, r4, r4, lsl #7
    47a0:	cmp	r6, r7
    47a4:	sub	r4, r1, r4
    47a8:	eor	r3, r3, ip
    47ac:	strb	r3, [r5, #1]!
    47b0:	bne	4764 <EV3@@Base+0xa4>
    47b4:	ldr	r5, [fp, #64]	; 0x40
    47b8:	cmp	r5, #2
    47bc:	bgt	4838 <EV3@@Base+0x178>
    47c0:	add	r5, r5, #1
    47c4:	cmp	r5, #31
    47c8:	str	r5, [fp, #64]	; 0x40
    47cc:	bgt	4850 <EV3@@Base+0x190>
    47d0:	ldr	r2, [sp, #4]
    47d4:	lsl	r5, r5, #3
    47d8:	add	r3, r5, #7
    47dc:	cmp	r3, r2
    47e0:	blt	4734 <EV3@@Base+0x74>
    47e4:	mov	r0, #1
    47e8:	add	sp, sp, #12
    47ec:	ldrd	r4, [sp]
    47f0:	ldrd	r6, [sp, #8]
    47f4:	ldrd	r8, [sp, #16]
    47f8:	ldrd	sl, [sp, #24]
    47fc:	add	sp, sp, #32
    4800:	pop	{pc}		; (ldr pc, [sp], #4)
    4804:	smull	r2, r1, r8, r1
    4808:	ldrb	r0, [r6], #1
    480c:	asr	r4, r3, #31
    4810:	add	r1, r1, r3
    4814:	rsb	r4, r4, r1, asr #6
    4818:	cmp	r6, r7
    481c:	strb	r0, [r5, #1]!
    4820:	rsb	r4, r4, r4, lsl #7
    4824:	sub	r4, r3, r4
    4828:	bne	4764 <EV3@@Base+0xa4>
    482c:	ldr	r5, [fp, #64]	; 0x40
    4830:	cmp	r5, #2
    4834:	ble	47c0 <EV3@@Base+0x100>
    4838:	mov	r0, fp
    483c:	bl	2cb8 <__assert_fail@plt+0x808>
    4840:	cmp	r0, #0
    4844:	beq	47c0 <EV3@@Base+0x100>
    4848:	mov	r0, #10
    484c:	b	47e8 <EV3@@Base+0x128>
    4850:	mov	r0, #2
    4854:	b	47e8 <EV3@@Base+0x128>
    4858:	andeq	lr, r0, r8, lsl #28
    485c:	strdeq	lr, [r0], -ip

00004860 <EV4@@Base>:
    4860:	ldr	r3, [pc, #800]	; 4b88 <EV4@@Base+0x328>
    4864:	movw	r2, #2822	; 0xb06
    4868:	and	r0, r0, #63	; 0x3f
    486c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4870:	mov	r5, #0
    4874:	movw	r4, #1033	; 0x409
    4878:	movt	r4, #33026	; 0x8102
    487c:	ldrh	r2, [r1, r2]
    4880:	strd	r6, [sp, #8]
    4884:	ldr	ip, [pc, #768]	; 4b8c <EV4@@Base+0x32c>
    4888:	add	r3, pc, r3
    488c:	strd	r8, [sp, #16]
    4890:	mov	r8, r1
    4894:	add	r3, r3, r0
    4898:	strd	sl, [sp, #24]
    489c:	mov	r1, #1
    48a0:	str	lr, [sp, #32]
    48a4:	sub	sp, sp, #28
    48a8:	add	r6, r8, #78	; 0x4e
    48ac:	str	r1, [r8, #64]	; 0x40
    48b0:	add	ip, pc, ip
    48b4:	str	r3, [sp, #20]
    48b8:	sub	r3, r2, #122	; 0x7a
    48bc:	str	ip, [sp, #4]
    48c0:	str	r5, [sp, #12]
    48c4:	str	r3, [sp, #16]
    48c8:	ldr	r2, [sp, #12]
    48cc:	ldr	r1, [sp, #16]
    48d0:	add	r3, r2, #14
    48d4:	cmp	r1, r3
    48d8:	ble	4b6c <EV4@@Base+0x30c>
    48dc:	add	r0, r8, #2944	; 0xb80
    48e0:	mov	r1, #10
    48e4:	add	r0, r0, #2
    48e8:	add	r0, r0, r2
    48ec:	bl	29b0 <__assert_fail@plt+0x500>
    48f0:	subs	r3, r0, #0
    48f4:	str	r3, [sp, #8]
    48f8:	beq	4b74 <EV4@@Base+0x314>
    48fc:	mov	sl, r3
    4900:	ldr	r3, [sp, #20]
    4904:	add	r7, r8, #68	; 0x44
    4908:	sub	fp, r6, #10
    490c:	ldrb	r1, [r3, #1368]	; 0x558
    4910:	add	r3, r5, #18
    4914:	add	r3, r3, r1
    4918:	asr	r9, r3, #31
    491c:	smull	r2, r1, r4, r3
    4920:	add	r1, r1, r3
    4924:	rsb	r9, r9, r1, asr #6
    4928:	rsb	r9, r9, r9, lsl #7
    492c:	sub	r9, r3, r9
    4930:	mov	r1, #0
    4934:	mov	r0, r8
    4938:	bl	2144 <btbb_packet_get_flag@plt>
    493c:	ldr	r1, [sp, #4]
    4940:	add	r3, r9, #1
    4944:	cmp	r0, #0
    4948:	mov	r2, r3
    494c:	asr	ip, r3, #31
    4950:	add	r9, r1, r9
    4954:	smull	r0, r1, r4, r3
    4958:	beq	4b20 <EV4@@Base+0x2c0>
    495c:	ldrb	r0, [r9, #1432]	; 0x598
    4960:	add	r1, r1, r3
    4964:	rsb	r9, ip, r1, asr #6
    4968:	ldrb	r2, [sl], #1
    496c:	rsb	r9, r9, r9, lsl #7
    4970:	sub	r9, r3, r9
    4974:	eor	r2, r2, r0
    4978:	strb	r2, [fp], #1
    497c:	cmp	r6, fp
    4980:	bne	4930 <EV4@@Base+0xd0>
    4984:	ldr	r0, [sp, #8]
    4988:	bl	2108 <free@plt>
    498c:	ldr	ip, [r8, #64]	; 0x40
    4990:	lsl	r2, ip, #3
    4994:	cmp	r2, r5
    4998:	bgt	4af4 <EV4@@Base+0x294>
    499c:	ldrb	r3, [r8, #9]
    49a0:	sub	r0, r2, #16
    49a4:	add	r2, r8, r2
    49a8:	lsl	lr, r3, #7
    49ac:	asr	r1, r3, #5
    49b0:	orr	lr, lr, r3, lsr #7
    49b4:	and	r1, r1, #2
    49b8:	asr	r9, r3, #3
    49bc:	orr	lr, lr, r1
    49c0:	asr	r1, r3, #1
    49c4:	and	r9, r9, #4
    49c8:	orr	lr, lr, r9
    49cc:	and	r1, r1, #8
    49d0:	lsl	r9, r3, #1
    49d4:	orr	lr, lr, r1
    49d8:	lsl	r1, r3, #3
    49dc:	and	r9, r9, #16
    49e0:	lsl	r3, r3, #5
    49e4:	orr	lr, lr, r9
    49e8:	and	r1, r1, #32
    49ec:	orr	lr, lr, r1
    49f0:	and	r3, r3, #64	; 0x40
    49f4:	orr	lr, lr, r3
    49f8:	uxtb	lr, lr
    49fc:	lsl	lr, lr, #8
    4a00:	cmp	r0, #0
    4a04:	mov	r1, lr
    4a08:	ble	4a50 <EV4@@Base+0x1f0>
    4a0c:	mov	r3, #0
    4a10:	ldrb	sl, [r7, r3]
    4a14:	lsr	r9, r1, #1
    4a18:	add	r3, r3, #1
    4a1c:	uxth	r3, r3
    4a20:	cmp	r3, r0
    4a24:	eor	r1, r1, sl
    4a28:	orr	r1, r9, r1, lsl #15
    4a2c:	sxth	r1, r1
    4a30:	ubfx	r9, r1, #5, #11
    4a34:	and	r9, r9, #1024	; 0x400
    4a38:	eor	r1, r1, r9
    4a3c:	ubfx	r9, r1, #12, #4
    4a40:	and	r9, r9, #8
    4a44:	eor	r1, r1, r9
    4a48:	uxth	r1, r1
    4a4c:	blt	4a10 <EV4@@Base+0x1b0>
    4a50:	ldrb	sl, [r2, #54]	; 0x36
    4a54:	ldrb	fp, [r2, #53]	; 0x35
    4a58:	ldrb	r3, [r2, #52]	; 0x34
    4a5c:	lsl	sl, sl, #2
    4a60:	ldrb	r9, [r2, #55]	; 0x37
    4a64:	orr	sl, sl, fp, lsl #1
    4a68:	ldrb	fp, [r2, #56]	; 0x38
    4a6c:	orr	r3, r3, sl
    4a70:	ldrb	sl, [r2, #57]	; 0x39
    4a74:	orr	r3, r3, r9, lsl #3
    4a78:	ldrb	r9, [r2, #58]	; 0x3a
    4a7c:	orr	r3, r3, fp, lsl #4
    4a80:	ldrb	fp, [r2, #59]	; 0x3b
    4a84:	orr	r3, r3, sl, lsl #5
    4a88:	ldrb	sl, [r2, #60]	; 0x3c
    4a8c:	orr	r3, r3, r9, lsl #6
    4a90:	ldrb	r9, [r2, #61]	; 0x3d
    4a94:	orr	r3, r3, fp, lsl #7
    4a98:	ldrb	fp, [r2, #62]	; 0x3e
    4a9c:	orr	r3, r3, sl, lsl #8
    4aa0:	ldrb	sl, [r2, #63]	; 0x3f
    4aa4:	orr	r3, r3, r9, lsl #9
    4aa8:	ldrb	r9, [r2, #64]	; 0x40
    4aac:	orr	r3, r3, fp, lsl #10
    4ab0:	ldrb	fp, [r2, #65]	; 0x41
    4ab4:	orr	r3, r3, sl, lsl #11
    4ab8:	ldrb	sl, [r2, #66]	; 0x42
    4abc:	orr	r3, r3, r9, lsl #12
    4ac0:	ldrb	r9, [r2, #67]	; 0x43
    4ac4:	orr	r3, r3, fp, lsl #13
    4ac8:	orr	r3, r3, sl, lsl #14
    4acc:	orr	r3, r3, r9, lsl #15
    4ad0:	uxth	r3, r3
    4ad4:	cmp	r1, r3
    4ad8:	beq	4b4c <EV4@@Base+0x2ec>
    4adc:	add	ip, ip, #1
    4ae0:	add	r0, r0, #8
    4ae4:	cmp	r5, ip, lsl #3
    4ae8:	add	r2, r2, #8
    4aec:	str	ip, [r8, #64]	; 0x40
    4af0:	bge	4a00 <EV4@@Base+0x1a0>
    4af4:	ldr	r3, [sp, #12]
    4af8:	add	r5, r5, #10
    4afc:	add	r6, r6, #10
    4b00:	add	r3, r3, #15
    4b04:	mov	r2, r3
    4b08:	movw	r3, #1470	; 0x5be
    4b0c:	cmp	r2, r3
    4b10:	str	r2, [sp, #12]
    4b14:	bne	48c8 <EV4@@Base+0x68>
    4b18:	mov	r0, #2
    4b1c:	b	4b50 <EV4@@Base+0x2f0>
    4b20:	smull	r1, r3, r4, r3
    4b24:	ldrb	r1, [sl], #1
    4b28:	asr	r9, r2, #31
    4b2c:	add	r3, r3, r2
    4b30:	rsb	r9, r9, r3, asr #6
    4b34:	strb	r1, [fp], #1
    4b38:	cmp	r6, fp
    4b3c:	rsb	r9, r9, r9, lsl #7
    4b40:	sub	r9, r2, r9
    4b44:	bne	4930 <EV4@@Base+0xd0>
    4b48:	b	4984 <EV4@@Base+0x124>
    4b4c:	mov	r0, #10
    4b50:	add	sp, sp, #28
    4b54:	ldrd	r4, [sp]
    4b58:	ldrd	r6, [sp, #8]
    4b5c:	ldrd	r8, [sp, #16]
    4b60:	ldrd	sl, [sp, #24]
    4b64:	add	sp, sp, #32
    4b68:	pop	{pc}		; (ldr pc, [sp], #4)
    4b6c:	mov	r0, #1
    4b70:	b	4b50 <EV4@@Base+0x2f0>
    4b74:	ldr	r3, [sp, #12]
    4b78:	cmp	r3, #44	; 0x2c
    4b7c:	movle	r0, #0
    4b80:	movgt	r0, #1
    4b84:	b	4b50 <EV4@@Base+0x2f0>
    4b88:	andeq	lr, r0, r0, lsr #25
    4b8c:	andeq	lr, r0, r8, ror ip

00004b90 <EV5@@Base>:
    4b90:	movw	r3, #2822	; 0xb06
    4b94:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4b98:	mov	r5, #0
    4b9c:	strd	r6, [sp, #8]
    4ba0:	strd	r8, [sp, #16]
    4ba4:	ldrh	r8, [r1, r3]
    4ba8:	strd	sl, [sp, #24]
    4bac:	str	lr, [sp, #32]
    4bb0:	sub	sp, sp, #12
    4bb4:	str	r5, [r1, #64]	; 0x40
    4bb8:	sub	r3, r8, #122	; 0x7a
    4bbc:	cmp	r3, #7
    4bc0:	str	r3, [sp, #4]
    4bc4:	ble	4cb4 <EV5@@Base+0x124>
    4bc8:	ldr	r3, [pc, #344]	; 4d28 <EV5@@Base+0x198>
    4bcc:	and	r0, r0, #63	; 0x3f
    4bd0:	add	r9, r1, #2944	; 0xb80
    4bd4:	mov	r7, r9
    4bd8:	movw	r8, #1033	; 0x409
    4bdc:	movt	r8, #33026	; 0x8102
    4be0:	ldr	sl, [pc, #324]	; 4d2c <EV5@@Base+0x19c>
    4be4:	mov	fp, r1
    4be8:	add	r9, r9, #2
    4bec:	add	r7, r7, #10
    4bf0:	add	r3, pc, r3
    4bf4:	add	r0, r3, r0
    4bf8:	ldrb	r3, [r0, #1368]	; 0x558
    4bfc:	add	sl, pc, sl
    4c00:	str	r3, [sp]
    4c04:	ldr	r2, [sp]
    4c08:	add	r3, r5, #18
    4c0c:	add	r5, r5, #67	; 0x43
    4c10:	add	r5, fp, r5
    4c14:	mov	r6, r9
    4c18:	add	r3, r3, r2
    4c1c:	asr	r4, r3, #31
    4c20:	smull	r2, r1, r8, r3
    4c24:	add	r1, r1, r3
    4c28:	rsb	r4, r4, r1, asr #6
    4c2c:	rsb	r4, r4, r4, lsl #7
    4c30:	sub	r4, r3, r4
    4c34:	mov	r1, #0
    4c38:	mov	r0, fp
    4c3c:	bl	2144 <btbb_packet_get_flag@plt>
    4c40:	add	r1, r4, #1
    4c44:	cmp	r0, #0
    4c48:	add	ip, sl, r4
    4c4c:	mov	r3, r1
    4c50:	asr	r4, r1, #31
    4c54:	smull	r2, r0, r8, r1
    4c58:	beq	4cd4 <EV5@@Base+0x144>
    4c5c:	ldrb	r3, [r6], #1
    4c60:	add	r0, r0, r1
    4c64:	rsb	r4, r4, r0, asr #6
    4c68:	ldrb	ip, [ip, #1432]	; 0x598
    4c6c:	rsb	r4, r4, r4, lsl #7
    4c70:	cmp	r6, r7
    4c74:	sub	r4, r1, r4
    4c78:	eor	r3, r3, ip
    4c7c:	strb	r3, [r5, #1]!
    4c80:	bne	4c34 <EV5@@Base+0xa4>
    4c84:	ldr	r5, [fp, #64]	; 0x40
    4c88:	cmp	r5, #2
    4c8c:	bgt	4d08 <EV5@@Base+0x178>
    4c90:	add	r5, r5, #1
    4c94:	cmp	r5, #181	; 0xb5
    4c98:	str	r5, [fp, #64]	; 0x40
    4c9c:	bgt	4d20 <EV5@@Base+0x190>
    4ca0:	ldr	r2, [sp, #4]
    4ca4:	lsl	r5, r5, #3
    4ca8:	add	r3, r5, #7
    4cac:	cmp	r3, r2
    4cb0:	blt	4c04 <EV5@@Base+0x74>
    4cb4:	mov	r0, #1
    4cb8:	add	sp, sp, #12
    4cbc:	ldrd	r4, [sp]
    4cc0:	ldrd	r6, [sp, #8]
    4cc4:	ldrd	r8, [sp, #16]
    4cc8:	ldrd	sl, [sp, #24]
    4ccc:	add	sp, sp, #32
    4cd0:	pop	{pc}		; (ldr pc, [sp], #4)
    4cd4:	smull	r2, r1, r8, r1
    4cd8:	ldrb	r0, [r6], #1
    4cdc:	asr	r4, r3, #31
    4ce0:	add	r1, r1, r3
    4ce4:	rsb	r4, r4, r1, asr #6
    4ce8:	cmp	r6, r7
    4cec:	strb	r0, [r5, #1]!
    4cf0:	rsb	r4, r4, r4, lsl #7
    4cf4:	sub	r4, r3, r4
    4cf8:	bne	4c34 <EV5@@Base+0xa4>
    4cfc:	ldr	r5, [fp, #64]	; 0x40
    4d00:	cmp	r5, #2
    4d04:	ble	4c90 <EV5@@Base+0x100>
    4d08:	mov	r0, fp
    4d0c:	bl	2cb8 <__assert_fail@plt+0x808>
    4d10:	cmp	r0, #0
    4d14:	beq	4c90 <EV5@@Base+0x100>
    4d18:	mov	r0, #10
    4d1c:	b	4cb8 <EV5@@Base+0x128>
    4d20:	mov	r0, #2
    4d24:	b	4cb8 <EV5@@Base+0x128>
    4d28:	andeq	lr, r0, r8, lsr r9
    4d2c:	andeq	lr, r0, ip, lsr #18

00004d30 <HV@@Base>:
    4d30:	movw	r3, #2822	; 0xb06
    4d34:	mov	ip, #0
    4d38:	ldrh	r2, [r1, r3]
    4d3c:	movw	r3, #361	; 0x169
    4d40:	str	ip, [r1, #40]	; 0x28
    4d44:	cmp	r2, r3
    4d48:	bls	4db0 <HV@@Base+0x80>
    4d4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4d50:	mov	r4, r0
    4d54:	mov	r5, r1
    4d58:	add	r0, r1, #2944	; 0xb80
    4d5c:	strd	r6, [sp, #8]
    4d60:	strd	r8, [sp, #16]
    4d64:	add	r0, r0, #2
    4d68:	strd	sl, [sp, #24]
    4d6c:	str	lr, [sp, #32]
    4d70:	sub	sp, sp, #84	; 0x54
    4d74:	ldrb	r1, [r1, #18]
    4d78:	cmp	r1, #6
    4d7c:	beq	4f94 <HV@@Base+0x264>
    4d80:	cmp	r1, #7
    4d84:	beq	4edc <HV@@Base+0x1ac>
    4d88:	cmp	r1, #5
    4d8c:	beq	4dbc <HV@@Base+0x8c>
    4d90:	mov	r0, #2
    4d94:	add	sp, sp, #84	; 0x54
    4d98:	ldrd	r4, [sp]
    4d9c:	ldrd	r6, [sp, #8]
    4da0:	ldrd	r8, [sp, #16]
    4da4:	ldrd	sl, [sp, #24]
    4da8:	add	sp, sp, #32
    4dac:	pop	{pc}		; (ldr pc, [sp], #4)
    4db0:	mov	r0, #1
    4db4:	str	ip, [r1, #64]	; 0x40
    4db8:	bx	lr
    4dbc:	mov	lr, sp
    4dc0:	add	r6, sp, #80	; 0x50
    4dc4:	mov	r0, r5
    4dc8:	ldrb	r3, [r0, #2946]	; 0xb82
    4dcc:	add	r0, r0, #3
    4dd0:	ldrb	r8, [r0, #2945]	; 0xb81
    4dd4:	ldrb	r1, [r0, #2944]	; 0xb80
    4dd8:	orr	r2, r3, r8
    4ddc:	and	r9, r3, r8
    4de0:	eor	r7, r3, r8
    4de4:	and	r2, r2, r1
    4de8:	eor	r3, r3, r1
    4dec:	orr	r2, r2, r9
    4df0:	eor	r1, r1, r8
    4df4:	orr	r3, r3, r1
    4df8:	orr	r3, r3, r7
    4dfc:	strb	r2, [lr], #1
    4e00:	cmp	r6, lr
    4e04:	add	ip, ip, r3
    4e08:	bne	4dc8 <HV@@Base+0x98>
    4e0c:	cmp	ip, #19
    4e10:	movgt	r0, #0
    4e14:	bgt	4d94 <HV@@Base+0x64>
    4e18:	mov	r3, #10
    4e1c:	mov	r2, #1
    4e20:	mov	r0, r5
    4e24:	mov	r1, #7
    4e28:	str	r3, [r5, #64]	; 0x40
    4e2c:	movw	r7, #1033	; 0x409
    4e30:	movt	r7, #33026	; 0x8102
    4e34:	bl	20f0 <btbb_packet_set_flag@plt>
    4e38:	ldr	r3, [pc, #692]	; 50f4 <HV@@Base+0x3c4>
    4e3c:	and	r0, r4, #63	; 0x3f
    4e40:	ldr	r8, [r5, #64]	; 0x40
    4e44:	add	r3, pc, r3
    4e48:	add	r4, r3, r0
    4e4c:	ldrb	r3, [r4, #1368]	; 0x558
    4e50:	lsl	r8, r8, #3
    4e54:	cmp	r8, #0
    4e58:	add	r3, r3, #18
    4e5c:	smull	r2, r4, r7, r3
    4e60:	add	r4, r4, r3
    4e64:	asr	r4, r4, #6
    4e68:	rsb	r4, r4, r4, lsl #7
    4e6c:	sub	r4, r3, r4
    4e70:	ble	4d90 <HV@@Base+0x60>
    4e74:	ldr	r9, [pc, #636]	; 50f8 <HV@@Base+0x3c8>
    4e78:	add	r6, r5, #67	; 0x43
    4e7c:	sub	sl, sp, #1
    4e80:	add	r8, r6, r8
    4e84:	add	r9, pc, r9
    4e88:	mov	r1, #0
    4e8c:	mov	r0, r5
    4e90:	bl	2144 <btbb_packet_get_flag@plt>
    4e94:	add	r3, r4, #1
    4e98:	cmp	r0, #0
    4e9c:	ldrb	ip, [sl, #1]!
    4ea0:	mov	r2, r3
    4ea4:	add	r4, r9, r4
    4ea8:	asr	lr, r3, #31
    4eac:	smull	r0, r1, r7, r3
    4eb0:	beq	50cc <HV@@Base+0x39c>
    4eb4:	ldrb	r2, [r4, #1432]	; 0x598
    4eb8:	add	r1, r1, r3
    4ebc:	rsb	r4, lr, r1, asr #6
    4ec0:	rsb	r4, r4, r4, lsl #7
    4ec4:	eor	ip, ip, r2
    4ec8:	sub	r4, r3, r4
    4ecc:	strb	ip, [r6, #1]!
    4ed0:	cmp	r6, r8
    4ed4:	bne	4e88 <HV@@Base+0x158>
    4ed8:	b	4d90 <HV@@Base+0x60>
    4edc:	mov	r3, #30
    4ee0:	mov	r2, #1
    4ee4:	mov	r0, r5
    4ee8:	and	r4, r4, #63	; 0x3f
    4eec:	str	r3, [r5, #64]	; 0x40
    4ef0:	movw	r7, #1033	; 0x409
    4ef4:	movt	r7, #33026	; 0x8102
    4ef8:	bl	20f0 <btbb_packet_set_flag@plt>
    4efc:	ldr	r3, [pc, #504]	; 50fc <HV@@Base+0x3cc>
    4f00:	ldr	r8, [r5, #64]	; 0x40
    4f04:	add	r3, pc, r3
    4f08:	add	r4, r3, r4
    4f0c:	ldrb	r3, [r4, #1368]	; 0x558
    4f10:	lsl	r8, r8, #3
    4f14:	cmp	r8, #0
    4f18:	add	r3, r3, #18
    4f1c:	smull	r2, r4, r7, r3
    4f20:	add	r4, r4, r3
    4f24:	asr	r4, r4, #6
    4f28:	rsb	r4, r4, r4, lsl #7
    4f2c:	sub	r4, r3, r4
    4f30:	ble	4d90 <HV@@Base+0x60>
    4f34:	ldr	r9, [pc, #452]	; 5100 <HV@@Base+0x3d0>
    4f38:	add	r6, r5, #67	; 0x43
    4f3c:	add	r8, r6, r8
    4f40:	add	r9, pc, r9
    4f44:	mov	r1, #0
    4f48:	mov	r0, r5
    4f4c:	bl	2144 <btbb_packet_get_flag@plt>
    4f50:	add	ip, r4, #1
    4f54:	cmp	r0, #0
    4f58:	add	r4, r9, r4
    4f5c:	asr	r1, ip, #31
    4f60:	smull	r0, r3, r7, ip
    4f64:	beq	5074 <HV@@Base+0x344>
    4f68:	ldrb	r0, [r4, #1432]	; 0x598
    4f6c:	add	r3, r3, ip
    4f70:	rsb	r4, r1, r3, asr #6
    4f74:	ldrb	r2, [r6, #2879]	; 0xb3f
    4f78:	rsb	r4, r4, r4, lsl #7
    4f7c:	sub	r4, ip, r4
    4f80:	eor	r3, r2, r0
    4f84:	strb	r3, [r6, #1]!
    4f88:	cmp	r8, r6
    4f8c:	bne	4f44 <HV@@Base+0x214>
    4f90:	b	4d90 <HV@@Base+0x60>
    4f94:	mov	r1, #160	; 0xa0
    4f98:	bl	29b0 <__assert_fail@plt+0x500>
    4f9c:	subs	r6, r0, #0
    4fa0:	moveq	r0, r6
    4fa4:	beq	4d94 <HV@@Base+0x64>
    4fa8:	mov	r3, #20
    4fac:	mov	r2, #1
    4fb0:	mov	r1, #7
    4fb4:	mov	r0, r5
    4fb8:	str	r3, [r5, #64]	; 0x40
    4fbc:	bl	20f0 <btbb_packet_set_flag@plt>
    4fc0:	ldr	r0, [pc, #316]	; 5104 <HV@@Base+0x3d4>
    4fc4:	and	r3, r4, #63	; 0x3f
    4fc8:	movw	r4, #1033	; 0x409
    4fcc:	movt	r4, #33026	; 0x8102
    4fd0:	ldr	r7, [r5, #64]	; 0x40
    4fd4:	add	r0, pc, r0
    4fd8:	add	r0, r0, r3
    4fdc:	ldrb	r3, [r0, #1368]	; 0x558
    4fe0:	lsl	r7, r7, #3
    4fe4:	cmp	r7, #0
    4fe8:	add	r3, r3, #18
    4fec:	smull	r1, r2, r4, r3
    4ff0:	add	r2, r2, r3
    4ff4:	asr	fp, r2, #6
    4ff8:	rsb	r2, fp, fp, lsl #7
    4ffc:	sub	fp, r3, r2
    5000:	ble	5068 <HV@@Base+0x338>
    5004:	ldr	r8, [pc, #252]	; 5108 <HV@@Base+0x3d8>
    5008:	add	r9, r5, #67	; 0x43
    500c:	mov	sl, r6
    5010:	add	r7, r9, r7
    5014:	add	r8, pc, r8
    5018:	mov	r1, #0
    501c:	mov	r0, r5
    5020:	bl	2144 <btbb_packet_get_flag@plt>
    5024:	add	r1, fp, #1
    5028:	cmp	r0, #0
    502c:	mov	r3, r1
    5030:	add	fp, r8, fp
    5034:	asr	ip, r1, #31
    5038:	smull	r0, r2, r4, r1
    503c:	beq	50a0 <HV@@Base+0x370>
    5040:	ldrb	r0, [fp, #1432]	; 0x598
    5044:	add	r2, r2, r1
    5048:	rsb	fp, ip, r2, asr #6
    504c:	ldrb	r3, [sl], #1
    5050:	rsb	r2, fp, fp, lsl #7
    5054:	sub	fp, r1, r2
    5058:	eor	r3, r3, r0
    505c:	strb	r3, [r9, #1]!
    5060:	cmp	r7, r9
    5064:	bne	5018 <HV@@Base+0x2e8>
    5068:	mov	r0, r6
    506c:	bl	2108 <free@plt>
    5070:	b	4d90 <HV@@Base+0x60>
    5074:	smull	r1, r3, r7, ip
    5078:	ldrb	r1, [r6, #2879]	; 0xb3f
    507c:	asr	r4, ip, #31
    5080:	add	r3, r3, ip
    5084:	rsb	r4, r4, r3, asr #6
    5088:	strb	r1, [r6, #1]!
    508c:	cmp	r8, r6
    5090:	rsb	r4, r4, r4, lsl #7
    5094:	sub	r4, ip, r4
    5098:	bne	4f44 <HV@@Base+0x214>
    509c:	b	4d90 <HV@@Base+0x60>
    50a0:	smull	r2, fp, r4, r1
    50a4:	ldrb	r1, [sl], #1
    50a8:	asr	r0, r3, #31
    50ac:	add	r2, fp, r3
    50b0:	rsb	fp, r0, r2, asr #6
    50b4:	strb	r1, [r9, #1]!
    50b8:	cmp	r7, r9
    50bc:	rsb	r2, fp, fp, lsl #7
    50c0:	sub	fp, r3, r2
    50c4:	bne	5018 <HV@@Base+0x2e8>
    50c8:	b	5068 <HV@@Base+0x338>
    50cc:	smull	r1, r3, r7, r3
    50d0:	strb	ip, [r6, #1]!
    50d4:	cmp	r8, r6
    50d8:	asr	r4, r2, #31
    50dc:	add	r3, r3, r2
    50e0:	rsb	r4, r4, r3, asr #6
    50e4:	rsb	r4, r4, r4, lsl #7
    50e8:	sub	r4, r2, r4
    50ec:	bne	4e88 <HV@@Base+0x158>
    50f0:	b	4d90 <HV@@Base+0x60>
    50f4:	andeq	lr, r0, r4, ror #13
    50f8:	andeq	lr, r0, r4, lsr #13
    50fc:	andeq	lr, r0, r4, lsr #12
    5100:	andeq	lr, r0, r8, ror #11
    5104:	andeq	lr, r0, r4, asr r5
    5108:	andeq	lr, r0, r4, lsl r5

0000510c <crc_check@@Base>:
    510c:	ldrb	r3, [r1, #18]
    5110:	str	r4, [sp, #-8]!
    5114:	mov	r4, r1
    5118:	str	lr, [sp, #4]
    511c:	sub	r3, r3, #2
    5120:	cmp	r3, #13
    5124:	addls	pc, pc, r3, lsl #2
    5128:	b	51ec <crc_check@@Base+0xe0>
    512c:	b	5194 <crc_check@@Base+0x88>
    5130:	b	51c4 <crc_check@@Base+0xb8>
    5134:	b	51cc <crc_check@@Base+0xc0>
    5138:	b	51d4 <crc_check@@Base+0xc8>
    513c:	b	51ec <crc_check@@Base+0xe0>
    5140:	b	51dc <crc_check@@Base+0xd0>
    5144:	b	51c4 <crc_check@@Base+0xb8>
    5148:	b	51ec <crc_check@@Base+0xe0>
    514c:	b	51c4 <crc_check@@Base+0xb8>
    5150:	b	51cc <crc_check@@Base+0xc0>
    5154:	b	51e4 <crc_check@@Base+0xd8>
    5158:	b	5164 <crc_check@@Base+0x58>
    515c:	b	51c4 <crc_check@@Base+0xb8>
    5160:	b	51cc <crc_check@@Base+0xc0>
    5164:	bl	2408 <EV5@plt>
    5168:	cmp	r0, #0
    516c:	bne	51a0 <crc_check@@Base+0x94>
    5170:	ldrb	r3, [r4, #18]
    5174:	sub	r0, r3, #2
    5178:	cmp	r3, #5
    517c:	cmpne	r0, #1
    5180:	movhi	r0, #1
    5184:	movls	r0, #0
    5188:	ldr	r4, [sp]
    518c:	add	sp, sp, #4
    5190:	pop	{pc}		; (ldr pc, [sp], #4)
    5194:	bl	2150 <fhs@plt>
    5198:	cmp	r0, #0
    519c:	beq	5170 <crc_check@@Base+0x64>
    51a0:	cmp	r0, #1
    51a4:	ble	5188 <crc_check@@Base+0x7c>
    51a8:	ldrb	r3, [r4, #18]
    51ac:	ldr	r4, [sp]
    51b0:	add	sp, sp, #4
    51b4:	cmp	r3, #13
    51b8:	cmpne	r3, #7
    51bc:	moveq	r0, #1
    51c0:	pop	{pc}		; (ldr pc, [sp], #4)
    51c4:	bl	21c8 <DM@plt>
    51c8:	b	5168 <crc_check@@Base+0x5c>
    51cc:	bl	2420 <DH@plt>
    51d0:	b	5168 <crc_check@@Base+0x5c>
    51d4:	bl	21e0 <HV@plt>
    51d8:	b	5168 <crc_check@@Base+0x5c>
    51dc:	bl	23a8 <EV3@plt>
    51e0:	b	5168 <crc_check@@Base+0x5c>
    51e4:	bl	215c <EV4@plt>
    51e8:	b	5168 <crc_check@@Base+0x5c>
    51ec:	mov	r0, #1
    51f0:	b	5188 <crc_check@@Base+0x7c>

000051f4 <try_clock@@Base>:
    51f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    51f8:	strd	r6, [sp, #8]
    51fc:	mov	r6, #0
    5200:	strd	r8, [sp, #16]
    5204:	add	r8, r1, #54	; 0x36
    5208:	str	sl, [sp, #24]
    520c:	str	lr, [sp, #28]
    5210:	sub	sp, sp, #40	; 0x28
    5214:	mov	lr, r1
    5218:	sub	r5, sp, #1
    521c:	mov	r7, r5
    5220:	ldrb	r3, [lr, #2892]	; 0xb4c
    5224:	add	lr, lr, #3
    5228:	ldrb	ip, [lr, #2891]	; 0xb4b
    522c:	ldrb	r2, [lr, #2890]	; 0xb4a
    5230:	cmp	lr, r8
    5234:	orr	r4, r3, ip
    5238:	and	sl, r3, ip
    523c:	eor	r9, r3, ip
    5240:	and	r4, r4, r2
    5244:	eor	r3, r3, r2
    5248:	eor	r2, r2, ip
    524c:	orr	r4, r4, sl
    5250:	orr	r3, r3, r2
    5254:	orr	r3, r3, r9
    5258:	strb	r4, [r7, #1]!
    525c:	add	r6, r6, r3
    5260:	bne	5220 <try_clock@@Base+0x2c>
    5264:	cmp	r6, #3
    5268:	movgt	r0, #0
    526c:	ble	528c <try_clock@@Base+0x98>
    5270:	add	sp, sp, #40	; 0x28
    5274:	ldrd	r4, [sp]
    5278:	ldrd	r6, [sp, #8]
    527c:	ldrd	r8, [sp, #16]
    5280:	ldr	sl, [sp, #24]
    5284:	add	sp, sp, #28
    5288:	pop	{pc}		; (ldr pc, [sp], #4)
    528c:	ldr	r3, [pc, #724]	; 5568 <try_clock@@Base+0x374>
    5290:	and	r0, r0, #63	; 0x3f
    5294:	movw	r4, #1033	; 0x409
    5298:	movt	r4, #33026	; 0x8102
    529c:	mov	r6, r1
    52a0:	mov	r7, r4
    52a4:	ldr	r9, [pc, #704]	; 556c <try_clock@@Base+0x378>
    52a8:	add	sl, sp, #19
    52ac:	add	r8, sp, #17
    52b0:	add	r3, pc, r3
    52b4:	add	r0, r3, r0
    52b8:	ldrb	r3, [r0, #1368]	; 0x558
    52bc:	add	r9, pc, r9
    52c0:	smull	r2, r4, r4, r3
    52c4:	add	r4, r4, r3
    52c8:	asr	r4, r4, #6
    52cc:	rsb	r4, r4, r4, lsl #7
    52d0:	sub	r4, r3, r4
    52d4:	mov	r1, #0
    52d8:	mov	r0, r6
    52dc:	bl	2144 <btbb_packet_get_flag@plt>
    52e0:	add	r1, r4, #1
    52e4:	cmp	r0, #0
    52e8:	ldrb	ip, [r5, #1]!
    52ec:	mov	r3, r1
    52f0:	add	r4, r9, r4
    52f4:	asr	lr, r1, #31
    52f8:	smull	r0, r2, r7, r1
    52fc:	beq	5540 <try_clock@@Base+0x34c>
    5300:	ldrb	r3, [r4, #1432]	; 0x598
    5304:	add	r2, r2, r1
    5308:	cmp	r8, r5
    530c:	rsb	r4, lr, r2, asr #6
    5310:	rsb	r4, r4, r4, lsl #7
    5314:	eor	ip, ip, r3
    5318:	sub	r4, r1, r4
    531c:	strb	ip, [sl, #1]!
    5320:	bne	52d4 <try_clock@@Base+0xe0>
    5324:	ldrb	r2, [sp, #21]
    5328:	ldrb	r4, [sp, #20]
    532c:	ldrb	r3, [sp, #22]
    5330:	ldrb	r1, [sp, #31]
    5334:	orr	r4, r4, r2, lsl #1
    5338:	ldrb	r2, [sp, #30]
    533c:	orr	r4, r4, r3, lsl #2
    5340:	ldrb	r3, [sp, #32]
    5344:	ldrb	ip, [sp, #23]
    5348:	orr	r2, r2, r1, lsl #1
    534c:	ldrb	r0, [sp, #33]	; 0x21
    5350:	orr	r2, r2, r3, lsl #2
    5354:	ldrb	lr, [sp, #24]
    5358:	orr	r4, r4, ip, lsl #3
    535c:	ldrb	r3, [sp, #34]	; 0x22
    5360:	orr	r2, r2, r0, lsl #3
    5364:	ldrb	r1, [sp, #25]
    5368:	orr	r4, r4, lr, lsl #4
    536c:	ldrb	r7, [sp, #35]	; 0x23
    5370:	orr	r2, r2, r3, lsl #4
    5374:	ldrb	r0, [sp, #26]
    5378:	orr	r4, r4, r1, lsl #5
    537c:	ldrb	r3, [sp, #36]	; 0x24
    5380:	lsl	r1, r1, #2
    5384:	orr	r2, r2, r7, lsl #5
    5388:	ldrb	r5, [sp, #27]
    538c:	orr	lr, r1, lr, lsl #1
    5390:	orr	r4, r4, r0, lsl #6
    5394:	ldrb	r7, [sp, #28]
    5398:	orr	lr, lr, ip
    539c:	orr	r2, r2, r3, lsl #6
    53a0:	ldrb	r3, [sp, #29]
    53a4:	orr	lr, lr, r0, lsl #3
    53a8:	orr	r4, r4, r5, lsl #7
    53ac:	ldrb	r5, [sp, #37]	; 0x25
    53b0:	orr	r4, r4, r7, lsl #8
    53b4:	strb	lr, [r6, #18]
    53b8:	orr	r4, r4, r3, lsl #9
    53bc:	orr	r2, r2, r5, lsl #7
    53c0:	sxth	r4, r4
    53c4:	uxth	r3, r4
    53c8:	sxtb	r2, r2
    53cc:	ubfx	r5, r3, #9, #1
    53d0:	cmp	r2, #0
    53d4:	uxtb	r2, r2
    53d8:	eorlt	r2, r2, #101	; 0x65
    53dc:	eor	r5, r5, r2, lsr #7
    53e0:	orr	r2, r5, r2, lsl #1
    53e4:	sxtb	r2, r2
    53e8:	uxtb	r5, r2
    53ec:	cmp	r2, #0
    53f0:	ubfx	r2, r3, #8, #1
    53f4:	eorlt	r5, r5, #101	; 0x65
    53f8:	eor	r2, r2, r5, lsr #7
    53fc:	orr	r2, r2, r5, lsl #1
    5400:	sxtb	r2, r2
    5404:	uxtb	r5, r2
    5408:	cmp	r2, #0
    540c:	eorlt	r5, r5, #101	; 0x65
    5410:	eor	r2, r3, r5
    5414:	ubfx	r2, r2, #7, #1
    5418:	orr	r2, r2, r5, lsl #1
    541c:	sxtb	r2, r2
    5420:	uxtb	r5, r2
    5424:	cmp	r2, #0
    5428:	ubfx	r2, r3, #6, #1
    542c:	eorlt	r5, r5, #101	; 0x65
    5430:	eor	r2, r2, r5, lsr #7
    5434:	orr	r2, r2, r5, lsl #1
    5438:	sxtb	r2, r2
    543c:	uxtb	r5, r2
    5440:	cmp	r2, #0
    5444:	ubfx	r2, r3, #5, #1
    5448:	eorlt	r5, r5, #101	; 0x65
    544c:	eor	r2, r2, r5, lsr #7
    5450:	orr	r2, r2, r5, lsl #1
    5454:	sxtb	r2, r2
    5458:	uxtb	r5, r2
    545c:	cmp	r2, #0
    5460:	ubfx	r2, r3, #4, #1
    5464:	eorlt	r5, r5, #101	; 0x65
    5468:	eor	r2, r2, r5, lsr #7
    546c:	orr	r2, r2, r5, lsl #1
    5470:	sxtb	r2, r2
    5474:	uxtb	r5, r2
    5478:	cmp	r2, #0
    547c:	ubfx	r2, r3, #3, #1
    5480:	eorlt	r5, r5, #101	; 0x65
    5484:	eor	r2, r2, r5, lsr #7
    5488:	orr	r2, r2, r5, lsl #1
    548c:	sxtb	r2, r2
    5490:	uxtb	r5, r2
    5494:	cmp	r2, #0
    5498:	ubfx	r2, r3, #2, #1
    549c:	eorlt	r5, r5, #101	; 0x65
    54a0:	ubfx	r3, r3, #1, #1
    54a4:	eor	r2, r2, r5, lsr #7
    54a8:	orr	r2, r2, r5, lsl #1
    54ac:	sxtb	r2, r2
    54b0:	cmp	r2, #0
    54b4:	uxtb	r2, r2
    54b8:	eorlt	r2, r2, #101	; 0x65
    54bc:	eor	r3, r3, r2, lsr #7
    54c0:	orr	r3, r3, r2, lsl #1
    54c4:	sxtb	r3, r3
    54c8:	cmp	r3, #0
    54cc:	uxtb	r3, r3
    54d0:	eorlt	r3, r3, #101	; 0x65
    54d4:	eor	r4, r4, r3, lsr #7
    54d8:	and	r4, r4, #1
    54dc:	orr	r3, r4, r3, lsl #1
    54e0:	uxtb	r3, r3
    54e4:	lsl	r2, r3, #7
    54e8:	asr	ip, r3, #5
    54ec:	orr	r2, r2, r3, lsr #7
    54f0:	asr	r1, r3, #3
    54f4:	and	ip, ip, #2
    54f8:	asr	r4, r3, #1
    54fc:	orr	r2, r2, ip
    5500:	and	r1, r1, #4
    5504:	lsl	ip, r3, #1
    5508:	orr	r2, r2, r1
    550c:	and	r4, r4, #8
    5510:	lsl	r1, r3, #3
    5514:	orr	r2, r2, r4
    5518:	and	ip, ip, #16
    551c:	lsl	r3, r3, #5
    5520:	orr	r2, r2, ip
    5524:	and	r1, r1, #32
    5528:	orr	r0, r2, r1
    552c:	and	r3, r3, #64	; 0x40
    5530:	orr	r0, r0, r3
    5534:	uxtb	r0, r0
    5538:	strb	r0, [r6, #9]
    553c:	b	5270 <try_clock@@Base+0x7c>
    5540:	smull	r1, r2, r7, r3
    5544:	cmp	r8, r5
    5548:	strb	ip, [sl, #1]!
    554c:	asr	r4, r3, #31
    5550:	add	r2, r2, r3
    5554:	rsb	r4, r4, r2, asr #6
    5558:	rsb	r4, r4, r4, lsl #7
    555c:	sub	r4, r3, r4
    5560:	bne	52d4 <try_clock@@Base+0xe0>
    5564:	b	5324 <try_clock@@Base+0x130>
    5568:	andeq	lr, r0, r8, ror r2
    556c:	andeq	lr, r0, ip, ror #4

00005570 <btbb_decode_header@@Base>:
    5570:	mov	r1, #4
    5574:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5578:	mov	r4, r0
    557c:	strd	r6, [sp, #8]
    5580:	strd	r8, [sp, #16]
    5584:	strd	sl, [sp, #24]
    5588:	str	lr, [sp, #32]
    558c:	sub	sp, sp, #36	; 0x24
    5590:	bl	2144 <btbb_packet_get_flag@plt>
    5594:	cmp	r0, #0
    5598:	bne	55bc <btbb_decode_header@@Base+0x4c>
    559c:	mov	r0, #0
    55a0:	add	sp, sp, #36	; 0x24
    55a4:	ldrd	r4, [sp]
    55a8:	ldrd	r6, [sp, #8]
    55ac:	ldrd	r8, [sp, #16]
    55b0:	ldrd	sl, [sp, #24]
    55b4:	add	sp, sp, #32
    55b8:	pop	{pc}		; (ldr pc, [sp], #4)
    55bc:	add	r6, sp, #11
    55c0:	add	r5, r4, #54	; 0x36
    55c4:	mov	lr, r6
    55c8:	mov	r2, r4
    55cc:	mov	ip, #0
    55d0:	ldrb	r3, [r2, #2892]	; 0xb4c
    55d4:	add	r2, r2, #3
    55d8:	ldrb	r9, [r2, #2891]	; 0xb4b
    55dc:	ldrb	r0, [r2, #2890]	; 0xb4a
    55e0:	cmp	r5, r2
    55e4:	orr	r1, r3, r9
    55e8:	and	r8, r3, r9
    55ec:	eor	r7, r3, r9
    55f0:	and	r1, r1, r0
    55f4:	eor	r3, r3, r0
    55f8:	eor	r0, r0, r9
    55fc:	orr	r1, r1, r8
    5600:	orr	r3, r3, r0
    5604:	orr	r3, r3, r7
    5608:	strb	r1, [lr, #1]!
    560c:	add	ip, ip, r3
    5610:	bne	55d0 <btbb_decode_header@@Base+0x60>
    5614:	cmp	ip, #3
    5618:	bgt	559c <btbb_decode_header@@Base+0x2c>
    561c:	ldr	r3, [pc, #780]	; 5930 <btbb_decode_header@@Base+0x3c0>
    5620:	movw	r5, #1033	; 0x409
    5624:	movt	r5, #33026	; 0x8102
    5628:	mov	r8, r5
    562c:	add	r7, r4, #21
    5630:	ldr	r2, [r4, #2816]	; 0xb00
    5634:	add	sl, r4, #39	; 0x27
    5638:	ldr	r9, [pc, #756]	; 5934 <btbb_decode_header@@Base+0x3c4>
    563c:	add	r3, pc, r3
    5640:	and	r2, r2, #63	; 0x3f
    5644:	add	r3, r3, r2
    5648:	ldrb	r3, [r3, #1368]	; 0x558
    564c:	add	r9, pc, r9
    5650:	smull	r2, r5, r5, r3
    5654:	add	r5, r5, r3
    5658:	asr	r5, r5, #6
    565c:	rsb	r5, r5, r5, lsl #7
    5660:	sub	r5, r3, r5
    5664:	mov	r1, #0
    5668:	mov	r0, r4
    566c:	bl	2144 <btbb_packet_get_flag@plt>
    5670:	add	r3, r5, #1
    5674:	cmp	r0, #0
    5678:	ldrb	ip, [r6, #1]!
    567c:	mov	r2, r3
    5680:	add	r5, r9, r5
    5684:	asr	lr, r3, #31
    5688:	smull	r0, r1, r8, r3
    568c:	beq	5908 <btbb_decode_header@@Base+0x398>
    5690:	ldrb	r2, [r5, #1432]	; 0x598
    5694:	add	r1, r1, r3
    5698:	rsb	r5, lr, r1, asr #6
    569c:	rsb	r5, r5, r5, lsl #7
    56a0:	eor	ip, ip, r2
    56a4:	sub	r5, r3, r5
    56a8:	strb	ip, [r7, #1]!
    56ac:	cmp	sl, r7
    56b0:	bne	5664 <btbb_decode_header@@Base+0xf4>
    56b4:	ldrb	r2, [r4, #23]
    56b8:	ldrb	lr, [r4, #22]
    56bc:	ldrb	r3, [r4, #33]	; 0x21
    56c0:	ldrb	r0, [r4, #34]	; 0x22
    56c4:	orr	lr, lr, r2, lsl #1
    56c8:	ldrb	r2, [r4, #32]
    56cc:	ldrb	r5, [r4, #24]
    56d0:	ldrb	r6, [r4, #25]
    56d4:	orr	r2, r2, r3, lsl #1
    56d8:	ldrb	r3, [r4, #35]	; 0x23
    56dc:	orr	r2, r2, r0, lsl #2
    56e0:	lsl	r5, r5, #2
    56e4:	ldrb	r0, [r4, #36]	; 0x24
    56e8:	ldrb	sl, [r4, #26]
    56ec:	orr	r1, lr, r5
    56f0:	orr	r2, r2, r3, lsl #3
    56f4:	ldrb	r8, [r4, #27]
    56f8:	orr	r1, r1, r6, lsl #3
    56fc:	orr	r2, r2, r0, lsl #4
    5700:	ldrb	r3, [r4, #37]	; 0x25
    5704:	orr	r1, r1, sl, lsl #4
    5708:	ldrb	fp, [r4, #28]
    570c:	orr	r1, r1, r8, lsl #5
    5710:	ldrb	r0, [r4, #38]	; 0x26
    5714:	orr	r2, r2, r3, lsl #5
    5718:	ldrb	r7, [r4, #29]
    571c:	orr	r1, r1, fp, lsl #6
    5720:	ldrb	r9, [r4, #30]
    5724:	orr	r2, r2, r0, lsl #6
    5728:	ldrb	r0, [r4, #31]
    572c:	orr	r1, r1, r7, lsl #7
    5730:	ldrb	r3, [r4, #39]	; 0x27
    5734:	orr	r1, r1, r9, lsl #8
    5738:	orr	r1, r1, r0, lsl #9
    573c:	str	r0, [sp, #4]
    5740:	orr	r2, r2, r3, lsl #7
    5744:	sxth	r1, r1
    5748:	uxth	r3, r1
    574c:	sxtb	r2, r2
    5750:	ubfx	r0, r3, #9, #1
    5754:	cmp	r2, #0
    5758:	uxtb	r2, r2
    575c:	eorlt	ip, r2, #101	; 0x65
    5760:	movge	ip, r2
    5764:	eor	r0, r0, ip, lsr #7
    5768:	orr	r0, r0, ip, lsl #1
    576c:	ubfx	ip, r3, #8, #1
    5770:	sxtb	r0, r0
    5774:	cmp	r0, #0
    5778:	uxtb	r0, r0
    577c:	eorlt	r0, r0, #101	; 0x65
    5780:	eor	ip, ip, r0, lsr #7
    5784:	orr	r0, ip, r0, lsl #1
    5788:	sxtb	r0, r0
    578c:	cmp	r0, #0
    5790:	uxtb	r0, r0
    5794:	eorlt	r0, r0, #101	; 0x65
    5798:	eor	ip, r3, r0
    579c:	ubfx	ip, ip, #7, #1
    57a0:	orr	r0, ip, r0, lsl #1
    57a4:	ubfx	ip, r3, #6, #1
    57a8:	sxtb	r0, r0
    57ac:	cmp	r0, #0
    57b0:	uxtb	r0, r0
    57b4:	eorlt	r0, r0, #101	; 0x65
    57b8:	eor	ip, ip, r0, lsr #7
    57bc:	orr	r0, ip, r0, lsl #1
    57c0:	ubfx	ip, r3, #5, #1
    57c4:	sxtb	r0, r0
    57c8:	cmp	r0, #0
    57cc:	uxtb	r0, r0
    57d0:	eorlt	r0, r0, #101	; 0x65
    57d4:	eor	ip, ip, r0, lsr #7
    57d8:	orr	r0, ip, r0, lsl #1
    57dc:	ubfx	ip, r3, #4, #1
    57e0:	sxtb	r0, r0
    57e4:	cmp	r0, #0
    57e8:	uxtb	r0, r0
    57ec:	eorlt	r0, r0, #101	; 0x65
    57f0:	eor	ip, ip, r0, lsr #7
    57f4:	orr	r0, ip, r0, lsl #1
    57f8:	ubfx	ip, r3, #3, #1
    57fc:	sxtb	r0, r0
    5800:	cmp	r0, #0
    5804:	uxtb	r0, r0
    5808:	eorlt	r0, r0, #101	; 0x65
    580c:	eor	ip, ip, r0, lsr #7
    5810:	orr	ip, ip, r0, lsl #1
    5814:	ubfx	r0, r3, #2, #1
    5818:	sxtb	ip, ip
    581c:	cmp	ip, #0
    5820:	uxtb	ip, ip
    5824:	eorlt	ip, ip, #101	; 0x65
    5828:	eor	r0, r0, ip, lsr #7
    582c:	orr	r0, r0, ip, lsl #1
    5830:	sxtb	r0, r0
    5834:	uxtb	ip, r0
    5838:	cmp	r0, #0
    583c:	ubfx	r0, r3, #1, #1
    5840:	eorlt	ip, ip, #101	; 0x65
    5844:	eor	r0, r0, ip, lsr #7
    5848:	orr	r0, r0, ip, lsl #1
    584c:	sxtb	r0, r0
    5850:	cmp	r0, #0
    5854:	uxtb	r0, r0
    5858:	eorlt	r0, r0, #101	; 0x65
    585c:	eor	r3, r1, r0, lsr #7
    5860:	ldrb	r1, [r4, #9]
    5864:	and	r3, r3, #1
    5868:	orr	r3, r3, r0, lsl #1
    586c:	uxtb	r3, r3
    5870:	str	r1, [sp]
    5874:	lsl	r0, r3, #7
    5878:	asr	r1, r3, #5
    587c:	orr	r0, r0, r3, lsr #7
    5880:	asr	ip, r3, #3
    5884:	and	r1, r1, #2
    5888:	orr	r0, r0, r1
    588c:	asr	r1, r3, #1
    5890:	and	ip, ip, #4
    5894:	orr	r0, r0, ip
    5898:	and	r1, r1, #8
    589c:	lsl	ip, r3, #1
    58a0:	orr	r0, r0, r1
    58a4:	lsl	r1, r3, #3
    58a8:	and	ip, ip, #16
    58ac:	lsl	r3, r3, #5
    58b0:	and	r1, r1, #32
    58b4:	orr	r0, r0, ip
    58b8:	orr	r0, r0, r1
    58bc:	ldr	r1, [sp]
    58c0:	and	r3, r3, #64	; 0x40
    58c4:	orr	r3, r0, r3
    58c8:	uxtb	r3, r3
    58cc:	cmp	r1, r3
    58d0:	bne	559c <btbb_decode_header@@Base+0x2c>
    58d4:	ldr	r3, [sp, #4]
    58d8:	orr	r6, r6, sl, lsl #1
    58dc:	mov	r0, #1
    58e0:	orr	r7, r7, r9, lsl r0
    58e4:	orr	lr, lr, r5
    58e8:	orr	r8, r6, r8, lsl #2
    58ec:	strb	lr, [r4, #19]
    58f0:	orr	r8, r8, fp, lsl #3
    58f4:	strb	r2, [r4, #21]
    58f8:	orr	r7, r7, r3, lsl #2
    58fc:	strb	r8, [r4, #18]
    5900:	strb	r7, [r4, #20]
    5904:	b	55a0 <btbb_decode_header@@Base+0x30>
    5908:	smull	r1, r3, r8, r3
    590c:	strb	ip, [r7, #1]!
    5910:	cmp	r7, sl
    5914:	asr	r5, r2, #31
    5918:	add	r3, r3, r2
    591c:	rsb	r5, r5, r3, asr #6
    5920:	rsb	r5, r5, r5, lsl #7
    5924:	sub	r5, r2, r5
    5928:	bne	5664 <btbb_decode_header@@Base+0xf4>
    592c:	b	56b4 <btbb_decode_header@@Base+0x144>
    5930:	andeq	sp, r0, ip, ror #29
    5934:	ldrdeq	sp, [r0], -ip

00005938 <btbb_decode_payload@@Base>:
    5938:	strd	r4, [sp, #-16]!
    593c:	mov	r2, #0
    5940:	mov	r4, r0
    5944:	str	r6, [sp, #8]
    5948:	str	lr, [sp, #12]
    594c:	ldrb	r3, [r0, #18]
    5950:	str	r2, [r0, #40]	; 0x28
    5954:	cmp	r3, #15
    5958:	addls	pc, pc, r3, lsl #2
    595c:	b	5a60 <btbb_decode_payload@@Base+0x128>
    5960:	b	5a14 <btbb_decode_payload@@Base+0xdc>
    5964:	b	5a14 <btbb_decode_payload@@Base+0xdc>
    5968:	b	5a4c <btbb_decode_payload@@Base+0x114>
    596c:	b	59d4 <btbb_decode_payload@@Base+0x9c>
    5970:	b	59a0 <btbb_decode_payload@@Base+0x68>
    5974:	b	5a00 <btbb_decode_payload@@Base+0xc8>
    5978:	b	5a00 <btbb_decode_payload@@Base+0xc8>
    597c:	b	59e8 <btbb_decode_payload@@Base+0xb0>
    5980:	b	59d4 <btbb_decode_payload@@Base+0x9c>
    5984:	b	59a0 <btbb_decode_payload@@Base+0x68>
    5988:	b	59d4 <btbb_decode_payload@@Base+0x9c>
    598c:	b	59a0 <btbb_decode_payload@@Base+0x68>
    5990:	b	5a24 <btbb_decode_payload@@Base+0xec>
    5994:	b	5a38 <btbb_decode_payload@@Base+0x100>
    5998:	b	59d4 <btbb_decode_payload@@Base+0x9c>
    599c:	b	59a0 <btbb_decode_payload@@Base+0x68>
    59a0:	mov	r1, r0
    59a4:	ldr	r0, [r0, #2816]	; 0xb00
    59a8:	bl	2420 <DH@plt>
    59ac:	mov	r5, r0
    59b0:	mov	r0, r4
    59b4:	mov	r2, #1
    59b8:	mov	r1, #7
    59bc:	bl	20f0 <btbb_packet_set_flag@plt>
    59c0:	mov	r0, r5
    59c4:	ldrd	r4, [sp]
    59c8:	ldr	r6, [sp, #8]
    59cc:	add	sp, sp, #12
    59d0:	pop	{pc}		; (ldr pc, [sp], #4)
    59d4:	mov	r1, r0
    59d8:	ldr	r0, [r0, #2816]	; 0xb00
    59dc:	bl	21c8 <DM@plt>
    59e0:	mov	r5, r0
    59e4:	b	59b0 <btbb_decode_payload@@Base+0x78>
    59e8:	mov	r1, r0
    59ec:	ldr	r0, [r0, #2816]	; 0xb00
    59f0:	bl	23a8 <EV3@plt>
    59f4:	cmp	r0, #1
    59f8:	mov	r5, r0
    59fc:	bgt	59b0 <btbb_decode_payload@@Base+0x78>
    5a00:	mov	r1, r4
    5a04:	ldr	r0, [r4, #2816]	; 0xb00
    5a08:	bl	21e0 <HV@plt>
    5a0c:	mov	r5, r0
    5a10:	b	59b0 <btbb_decode_payload@@Base+0x78>
    5a14:	mov	r3, #0
    5a18:	mov	r5, #1
    5a1c:	str	r3, [r0, #64]	; 0x40
    5a20:	b	59b0 <btbb_decode_payload@@Base+0x78>
    5a24:	mov	r1, r0
    5a28:	ldr	r0, [r0, #2816]	; 0xb00
    5a2c:	bl	215c <EV4@plt>
    5a30:	mov	r5, r0
    5a34:	b	59b0 <btbb_decode_payload@@Base+0x78>
    5a38:	mov	r1, r0
    5a3c:	ldr	r0, [r0, #2816]	; 0xb00
    5a40:	bl	2408 <EV5@plt>
    5a44:	mov	r5, r0
    5a48:	b	59b0 <btbb_decode_payload@@Base+0x78>
    5a4c:	mov	r1, r0
    5a50:	ldr	r0, [r0, #2816]	; 0xb00
    5a54:	bl	2150 <fhs@plt>
    5a58:	mov	r5, r0
    5a5c:	b	59b0 <btbb_decode_payload@@Base+0x78>
    5a60:	mov	r5, #0
    5a64:	b	59b0 <btbb_decode_payload@@Base+0x78>

00005a68 <btbb_print_packet@@Base>:
    5a68:	mov	r1, #7
    5a6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5a70:	mov	r4, r0
    5a74:	strd	r6, [sp, #8]
    5a78:	str	r8, [sp, #16]
    5a7c:	str	lr, [sp, #20]
    5a80:	bl	2144 <btbb_packet_get_flag@plt>
    5a84:	cmp	r0, #0
    5a88:	bne	5aa0 <btbb_print_packet@@Base+0x38>
    5a8c:	ldrd	r4, [sp]
    5a90:	ldrd	r6, [sp, #8]
    5a94:	ldr	r8, [sp, #16]
    5a98:	add	sp, sp, #20
    5a9c:	pop	{pc}		; (ldr pc, [sp], #4)
    5aa0:	ldr	r3, [pc, #288]	; 5bc8 <btbb_print_packet@@Base+0x160>
    5aa4:	ldrb	r2, [r4, #18]
    5aa8:	ldr	r0, [pc, #284]	; 5bcc <btbb_print_packet@@Base+0x164>
    5aac:	add	r3, pc, r3
    5ab0:	ldr	r1, [r3, r2, lsl #2]
    5ab4:	add	r0, pc, r0
    5ab8:	bl	20c0 <printf@plt>
    5abc:	ldr	r3, [r4, #40]	; 0x28
    5ac0:	cmp	r3, #0
    5ac4:	bgt	5b78 <btbb_print_packet@@Base+0x110>
    5ac8:	ldr	r3, [r4, #64]	; 0x40
    5acc:	cmp	r3, #0
    5ad0:	beq	5a8c <btbb_print_packet@@Base+0x24>
    5ad4:	ldr	r0, [pc, #244]	; 5bd0 <btbb_print_packet@@Base+0x168>
    5ad8:	add	r0, pc, r0
    5adc:	bl	20c0 <printf@plt>
    5ae0:	ldr	r3, [r4, #64]	; 0x40
    5ae4:	cmp	r3, #0
    5ae8:	ble	5b5c <btbb_print_packet@@Base+0xf4>
    5aec:	ldr	r5, [pc, #224]	; 5bd4 <btbb_print_packet@@Base+0x16c>
    5af0:	mov	r6, r4
    5af4:	mov	r7, #0
    5af8:	add	r5, pc, r5
    5afc:	ldrb	r1, [r6, #70]	; 0x46
    5b00:	mov	r0, r5
    5b04:	add	r7, r7, #1
    5b08:	add	r6, r6, #8
    5b0c:	ldrb	r2, [r6, #61]	; 0x3d
    5b10:	ldrb	ip, [r6, #60]	; 0x3c
    5b14:	lsl	r1, r1, #2
    5b18:	ldrb	r3, [r6, #63]	; 0x3f
    5b1c:	orr	r1, r1, r2, lsl #1
    5b20:	ldrb	r2, [r6, #64]	; 0x40
    5b24:	orr	r1, r1, ip
    5b28:	orr	r1, r1, r3, lsl #3
    5b2c:	ldrb	r3, [r6, #65]	; 0x41
    5b30:	orr	r1, r1, r2, lsl #4
    5b34:	ldrb	r2, [r6, #66]	; 0x42
    5b38:	orr	r1, r1, r3, lsl #5
    5b3c:	ldrb	r3, [r6, #67]	; 0x43
    5b40:	orr	r1, r1, r2, lsl #6
    5b44:	orr	r1, r1, r3, lsl #7
    5b48:	uxtb	r1, r1
    5b4c:	bl	20c0 <printf@plt>
    5b50:	ldr	r3, [r4, #64]	; 0x40
    5b54:	cmp	r7, r3
    5b58:	blt	5afc <btbb_print_packet@@Base+0x94>
    5b5c:	mov	r0, #10
    5b60:	ldrd	r4, [sp]
    5b64:	ldrd	r6, [sp, #8]
    5b68:	ldr	r8, [sp, #16]
    5b6c:	ldr	lr, [sp, #20]
    5b70:	add	sp, sp, #24
    5b74:	b	2390 <putchar@plt>
    5b78:	ldr	r0, [pc, #88]	; 5bd8 <btbb_print_packet@@Base+0x170>
    5b7c:	ldrb	r1, [r4, #19]
    5b80:	add	r0, pc, r0
    5b84:	bl	20c0 <printf@plt>
    5b88:	ldr	r0, [pc, #76]	; 5bdc <btbb_print_packet@@Base+0x174>
    5b8c:	ldrb	r1, [r4, #60]	; 0x3c
    5b90:	add	r0, pc, r0
    5b94:	bl	20c0 <printf@plt>
    5b98:	ldr	r0, [pc, #64]	; 5be0 <btbb_print_packet@@Base+0x178>
    5b9c:	ldrb	r1, [r4, #61]	; 0x3d
    5ba0:	add	r0, pc, r0
    5ba4:	bl	20c0 <printf@plt>
    5ba8:	ldr	r0, [pc, #52]	; 5be4 <btbb_print_packet@@Base+0x17c>
    5bac:	ldr	r1, [r4, #64]	; 0x40
    5bb0:	add	r0, pc, r0
    5bb4:	bl	20c0 <printf@plt>
    5bb8:	ldr	r3, [r4, #64]	; 0x40
    5bbc:	cmp	r3, #0
    5bc0:	beq	5a8c <btbb_print_packet@@Base+0x24>
    5bc4:	b	5ad4 <btbb_print_packet@@Base+0x6c>
    5bc8:	andeq	r5, r2, r4, lsl #7
    5bcc:	andeq	lr, r0, ip, lsl #2
    5bd0:	andeq	lr, r0, r4, lsr r1
    5bd4:	andeq	lr, r0, r8, asr #14
    5bd8:	andeq	lr, r0, ip, asr #32
    5bdc:	andeq	lr, r0, ip, asr #32
    5be0:	andeq	lr, r0, r8, asr #32
    5be4:	andeq	lr, r0, r4, asr #32

00005be8 <btbb_decode@@Base>:
    5be8:	mov	r2, #0
    5bec:	mov	r1, #7
    5bf0:	strd	r4, [sp, #-16]!
    5bf4:	mov	r4, r0
    5bf8:	str	r6, [sp, #8]
    5bfc:	str	lr, [sp, #12]
    5c00:	bl	20f0 <btbb_packet_set_flag@plt>
    5c04:	mov	r0, r4
    5c08:	bl	2300 <btbb_decode_header@plt>
    5c0c:	subs	r5, r0, #0
    5c10:	bne	5c28 <btbb_decode@@Base+0x40>
    5c14:	mov	r0, r5
    5c18:	ldrd	r4, [sp]
    5c1c:	ldr	r6, [sp, #8]
    5c20:	add	sp, sp, #12
    5c24:	pop	{pc}		; (ldr pc, [sp], #4)
    5c28:	mov	r0, r4
    5c2c:	bl	2444 <btbb_decode_payload@plt>
    5c30:	subs	r5, r0, #0
    5c34:	ble	5c14 <btbb_decode@@Base+0x2c>
    5c38:	ldr	r0, [pc, #28]	; 5c5c <btbb_decode@@Base+0x74>
    5c3c:	mov	r2, r5
    5c40:	ldr	r1, [r4, #2816]	; 0xb00
    5c44:	add	r0, pc, r0
    5c48:	and	r1, r1, #63	; 0x3f
    5c4c:	bl	20c0 <printf@plt>
    5c50:	mov	r0, r4
    5c54:	bl	2468 <btbb_print_packet@plt>
    5c58:	b	5c14 <btbb_decode@@Base+0x2c>
    5c5c:	ldrdeq	sp, [r0], -r4

00005c60 <tun_format@@Base>:
    5c60:	strd	r4, [sp, #-16]!
    5c64:	mov	r5, r0
    5c68:	ldr	r0, [r0, #64]	; 0x40
    5c6c:	str	r6, [sp, #8]
    5c70:	str	lr, [sp, #12]
    5c74:	add	r0, r0, #9
    5c78:	bl	2288 <malloc@plt>
    5c7c:	ldrb	r2, [r5, #8]
    5c80:	mov	r4, r0
    5c84:	mov	r1, #5
    5c88:	mov	r0, r5
    5c8c:	ldr	r3, [r5, #2816]	; 0xb00
    5c90:	str	r3, [r4]
    5c94:	strb	r2, [r4, #4]
    5c98:	bl	2144 <btbb_packet_get_flag@plt>
    5c9c:	mov	r6, r0
    5ca0:	mov	r1, #1
    5ca4:	mov	r0, r5
    5ca8:	bl	2144 <btbb_packet_get_flag@plt>
    5cac:	ldrb	r1, [r5, #33]	; 0x21
    5cb0:	orr	r0, r6, r0, lsl #1
    5cb4:	ldrb	r3, [r5, #32]
    5cb8:	strb	r0, [r4, #5]
    5cbc:	ldrb	ip, [r5, #23]
    5cc0:	ldrb	r2, [r5, #22]
    5cc4:	orr	r3, r3, r1, lsl #1
    5cc8:	ldrb	r0, [r5, #24]
    5ccc:	ldrb	r1, [r5, #34]	; 0x22
    5cd0:	orr	r2, r2, ip, lsl #1
    5cd4:	ldrb	ip, [r5, #35]	; 0x23
    5cd8:	orr	r2, r2, r0, lsl #2
    5cdc:	ldrb	r0, [r5, #36]	; 0x24
    5ce0:	orr	r3, r3, r1, lsl #2
    5ce4:	ldrb	r1, [r5, #25]
    5ce8:	orr	r3, r3, ip, lsl #3
    5cec:	ldrb	ip, [r5, #26]
    5cf0:	orr	r3, r3, r0, lsl #4
    5cf4:	ldrb	r0, [r5, #27]
    5cf8:	orr	r2, r2, r1, lsl #3
    5cfc:	ldrb	r1, [r5, #37]	; 0x25
    5d00:	orr	r2, r2, ip, lsl #4
    5d04:	ldrb	lr, [r5, #30]
    5d08:	orr	r2, r2, r0, lsl #5
    5d0c:	ldrb	r0, [r5, #28]
    5d10:	orr	r3, r3, r1, lsl #5
    5d14:	ldrb	r1, [r5, #29]
    5d18:	ldrb	ip, [r5, #38]	; 0x26
    5d1c:	orr	r2, r2, r0, lsl #6
    5d20:	ldrb	r0, [r5, #39]	; 0x27
    5d24:	orr	r1, r1, lr, lsl #1
    5d28:	ldrb	lr, [r5, #31]
    5d2c:	orr	r3, r3, ip, lsl #6
    5d30:	strb	r2, [r4, #6]
    5d34:	ldr	ip, [r5, #64]	; 0x40
    5d38:	orr	r3, r3, r0, lsl #7
    5d3c:	orr	r1, r1, lr, lsl #2
    5d40:	cmp	ip, #0
    5d44:	strb	r1, [r4, #7]
    5d48:	strb	r3, [r4, #8]
    5d4c:	ble	5dac <tun_format@@Base+0x14c>
    5d50:	add	ip, r5, ip, lsl #3
    5d54:	mov	r2, r5
    5d58:	add	r1, r4, #8
    5d5c:	ldrb	r3, [r2, #70]	; 0x46
    5d60:	add	r2, r2, #8
    5d64:	ldrb	r0, [r2, #61]	; 0x3d
    5d68:	ldrb	r5, [r2, #60]	; 0x3c
    5d6c:	lsl	r3, r3, #2
    5d70:	ldrb	lr, [r2, #63]	; 0x3f
    5d74:	orr	r3, r3, r0, lsl #1
    5d78:	ldrb	r0, [r2, #64]	; 0x40
    5d7c:	orr	r3, r3, r5
    5d80:	ldrb	r5, [r2, #65]	; 0x41
    5d84:	orr	r3, r3, lr, lsl #3
    5d88:	ldrb	lr, [r2, #66]	; 0x42
    5d8c:	orr	r3, r3, r0, lsl #4
    5d90:	ldrb	r0, [r2, #67]	; 0x43
    5d94:	cmp	ip, r2
    5d98:	orr	r3, r3, r5, lsl #5
    5d9c:	orr	r3, r3, lr, lsl #6
    5da0:	orr	r3, r3, r0, lsl #7
    5da4:	strb	r3, [r1, #1]!
    5da8:	bne	5d5c <tun_format@@Base+0xfc>
    5dac:	mov	r0, r4
    5db0:	ldrd	r4, [sp]
    5db4:	ldr	r6, [sp, #8]
    5db8:	add	sp, sp, #12
    5dbc:	pop	{pc}		; (ldr pc, [sp], #4)

00005dc0 <btbb_header_present@@Base>:
    5dc0:	movw	r3, #2822	; 0xb06
    5dc4:	ldrh	r3, [r0, r3]
    5dc8:	cmp	r3, #121	; 0x79
    5dcc:	bls	5e60 <btbb_header_present@@Base+0xa0>
    5dd0:	strd	r4, [sp, #-12]!
    5dd4:	mov	r3, r0
    5dd8:	str	lr, [sp, #8]
    5ddc:	ldrb	r2, [r0, #2887]	; 0xb47
    5de0:	ldrb	ip, [r0, #2888]	; 0xb48
    5de4:	ldrb	r4, [r0, #2889]	; 0xb49
    5de8:	clz	lr, r2
    5dec:	ldrb	r1, [r0, #2890]	; 0xb4a
    5df0:	lsr	lr, lr, #5
    5df4:	ldrb	r5, [r0, #2891]	; 0xb4b
    5df8:	eor	ip, ip, lr
    5dfc:	eor	r0, r2, r4
    5e00:	add	r4, r3, #54	; 0x36
    5e04:	add	r0, ip, r0
    5e08:	eor	r1, r1, lr
    5e0c:	add	r1, r1, r0
    5e10:	eor	r0, r2, r5
    5e14:	add	r0, r0, r1
    5e18:	ldrb	r1, [r3, #2892]	; 0xb4c
    5e1c:	add	r3, r3, #3
    5e20:	ldrb	ip, [r3, #2890]	; 0xb4a
    5e24:	ldrb	lr, [r3, #2891]	; 0xb4b
    5e28:	cmp	r4, r3
    5e2c:	eor	r2, r1, ip
    5e30:	eor	ip, ip, lr
    5e34:	eor	r1, r1, lr
    5e38:	orr	r2, r2, ip
    5e3c:	orr	r2, r2, r1
    5e40:	add	r0, r0, r2
    5e44:	bne	5e18 <btbb_header_present@@Base+0x58>
    5e48:	cmp	r0, #4
    5e4c:	ldrd	r4, [sp]
    5e50:	add	sp, sp, #8
    5e54:	movgt	r0, #0
    5e58:	movle	r0, #1
    5e5c:	pop	{pc}		; (ldr pc, [sp], #4)
    5e60:	mov	r0, #0
    5e64:	bx	lr

00005e68 <lap_from_fhs@@Base>:
    5e68:	push	{lr}		; (str lr, [sp, #-4]!)
    5e6c:	movw	lr, #65435	; 0xff9b
    5e70:	movt	lr, #65535	; 0xffff
    5e74:	add	r3, r0, #101	; 0x65
    5e78:	sub	lr, lr, r0
    5e7c:	add	ip, r0, #125	; 0x7d
    5e80:	mov	r0, #0
    5e84:	add	r2, lr, r3
    5e88:	ldrb	r1, [r3, #1]!
    5e8c:	cmp	r3, ip
    5e90:	orr	r0, r0, r1, lsl r2
    5e94:	bne	5e84 <lap_from_fhs@@Base+0x1c>
    5e98:	pop	{pc}		; (ldr pc, [sp], #4)

00005e9c <uap_from_fhs@@Base>:
    5e9c:	ldrb	r2, [r0, #133]	; 0x85
    5ea0:	ldrb	r3, [r0, #132]	; 0x84
    5ea4:	ldrb	ip, [r0, #134]	; 0x86
    5ea8:	ldrb	r1, [r0, #135]	; 0x87
    5eac:	orr	r3, r3, r2, lsl #1
    5eb0:	ldrb	r2, [r0, #136]	; 0x88
    5eb4:	orr	r3, r3, ip, lsl #2
    5eb8:	ldrb	ip, [r0, #137]	; 0x89
    5ebc:	orr	r3, r3, r1, lsl #3
    5ec0:	ldrb	r1, [r0, #138]	; 0x8a
    5ec4:	orr	r3, r3, r2, lsl #4
    5ec8:	ldrb	r2, [r0, #139]	; 0x8b
    5ecc:	orr	r0, r3, ip, lsl #5
    5ed0:	orr	r0, r0, r1, lsl #6
    5ed4:	orr	r0, r0, r2, lsl #7
    5ed8:	uxtb	r0, r0
    5edc:	bx	lr

00005ee0 <nap_from_fhs@@Base>:
    5ee0:	ldrb	ip, [r0, #141]	; 0x8d
    5ee4:	ldrb	r3, [r0, #140]	; 0x8c
    5ee8:	ldrb	r1, [r0, #142]	; 0x8e
    5eec:	ldrb	r2, [r0, #143]	; 0x8f
    5ef0:	orr	r3, r3, ip, lsl #1
    5ef4:	ldrb	ip, [r0, #144]	; 0x90
    5ef8:	orr	r3, r3, r1, lsl #2
    5efc:	ldrb	r1, [r0, #145]	; 0x91
    5f00:	orr	r3, r3, r2, lsl #3
    5f04:	ldrb	r2, [r0, #146]	; 0x92
    5f08:	orr	r3, r3, ip, lsl #4
    5f0c:	ldrb	ip, [r0, #147]	; 0x93
    5f10:	orr	r3, r3, r1, lsl #5
    5f14:	ldrb	r1, [r0, #148]	; 0x94
    5f18:	orr	r3, r3, r2, lsl #6
    5f1c:	ldrb	r2, [r0, #149]	; 0x95
    5f20:	orr	r3, r3, ip, lsl #7
    5f24:	ldrb	ip, [r0, #150]	; 0x96
    5f28:	orr	r3, r3, r1, lsl #8
    5f2c:	ldrb	r1, [r0, #151]	; 0x97
    5f30:	orr	r3, r3, r2, lsl #9
    5f34:	ldrb	r2, [r0, #152]	; 0x98
    5f38:	orr	r3, r3, ip, lsl #10
    5f3c:	ldrb	ip, [r0, #153]	; 0x99
    5f40:	orr	r3, r3, r1, lsl #11
    5f44:	ldrb	r1, [r0, #154]	; 0x9a
    5f48:	orr	r3, r3, r2, lsl #12
    5f4c:	ldrb	r2, [r0, #155]	; 0x9b
    5f50:	orr	r0, r3, ip, lsl #13
    5f54:	orr	r0, r0, r1, lsl #14
    5f58:	orr	r0, r0, r2, lsl #15
    5f5c:	uxth	r0, r0
    5f60:	bx	lr

00005f64 <clock_from_fhs@@Base>:
    5f64:	push	{lr}		; (str lr, [sp, #-4]!)
    5f68:	movw	lr, #65354	; 0xff4a
    5f6c:	movt	lr, #65535	; 0xffff
    5f70:	add	r3, r0, #182	; 0xb6
    5f74:	sub	lr, lr, r0
    5f78:	add	ip, r0, #208	; 0xd0
    5f7c:	mov	r0, #0
    5f80:	add	r2, lr, r3
    5f84:	ldrb	r1, [r3, #1]!
    5f88:	cmp	r3, ip
    5f8c:	orr	r0, r0, r1, lsl r2
    5f90:	bne	5f80 <clock_from_fhs@@Base+0x1c>
    5f94:	pop	{pc}		; (ldr pc, [sp], #4)

00005f98 <count_bits@@Base>:
    5f98:	subs	r3, r0, #0
    5f9c:	beq	5fb8 <count_bits@@Base+0x20>
    5fa0:	mov	r0, #0
    5fa4:	sub	r2, r3, #1
    5fa8:	add	r0, r0, #1
    5fac:	ands	r3, r2, r3
    5fb0:	bne	5fa4 <count_bits@@Base+0xc>
    5fb4:	bx	lr
    5fb8:	mov	r0, r3
    5fbc:	bx	lr

00005fc0 <btbb_piconet_new@@Base>:
    5fc0:	movw	r1, #5660	; 0x161c
    5fc4:	mov	r0, #1
    5fc8:	str	r4, [sp, #-8]!
    5fcc:	str	lr, [sp, #4]
    5fd0:	bl	206c <calloc@plt>
    5fd4:	mov	r3, #1
    5fd8:	ldr	r4, [sp]
    5fdc:	add	sp, sp, #4
    5fe0:	str	r3, [r0]
    5fe4:	pop	{pc}		; (ldr pc, [sp], #4)

00005fe8 <btbb_piconet_ref@@Base>:
    5fe8:	ldr	r3, [r0]
    5fec:	add	r3, r3, #1
    5ff0:	str	r3, [r0]
    5ff4:	bx	lr

00005ff8 <btbb_piconet_unref@@Base>:
    5ff8:	ldr	r3, [r0]
    5ffc:	subs	r3, r3, #1
    6000:	beq	600c <btbb_piconet_unref@@Base+0x14>
    6004:	str	r3, [r0]
    6008:	bx	lr
    600c:	b	2108 <free@plt>

00006010 <btbb_init_survey@@Base>:
    6010:	ldr	r3, [pc, #16]	; 6028 <btbb_init_survey@@Base+0x18>
    6014:	mov	r2, #1
    6018:	mov	r0, #0
    601c:	add	r3, pc, r3
    6020:	str	r2, [r3]
    6024:	bx	lr
    6028:	andeq	r5, r2, r8, lsl #3

0000602c <btbb_piconet_set_flag@@Base>:
    602c:	ldr	r3, [r0, #4]
    6030:	cmp	r2, #0
    6034:	mov	r2, #1
    6038:	lsl	r1, r2, r1
    603c:	biceq	r3, r3, r1
    6040:	orrne	r3, r3, r1
    6044:	str	r3, [r0, #4]
    6048:	bx	lr

0000604c <btbb_init_piconet@@Base>:
    604c:	mov	r2, #1
    6050:	str	r1, [r0, #24]
    6054:	mov	r1, #3
    6058:	b	21d4 <btbb_piconet_set_flag@plt>

0000605c <btbb_piconet_get_flag@@Base>:
    605c:	ldr	r3, [r0, #4]
    6060:	mov	r2, #1
    6064:	ands	r3, r3, r2, lsl r1
    6068:	movne	r0, r2
    606c:	moveq	r0, #0
    6070:	bx	lr
    6074:	mov	r1, #9
    6078:	str	r4, [sp, #-8]!
    607c:	mov	r4, r0
    6080:	str	lr, [sp, #4]
    6084:	bl	21b0 <btbb_piconet_get_flag@plt>
    6088:	cmp	r0, #0
    608c:	bne	6110 <btbb_piconet_get_flag@@Base+0xb4>
    6090:	mov	r0, r4
    6094:	mov	r2, #0
    6098:	mov	r1, #10
    609c:	bl	21d4 <btbb_piconet_set_flag@plt>
    60a0:	mov	r0, r4
    60a4:	mov	r2, #0
    60a8:	mov	r1, #9
    60ac:	bl	21d4 <btbb_piconet_set_flag@plt>
    60b0:	mov	r0, r4
    60b4:	mov	r2, #0
    60b8:	mov	r1, #2
    60bc:	bl	21d4 <btbb_piconet_set_flag@plt>
    60c0:	mov	r0, r4
    60c4:	mov	r2, #0
    60c8:	mov	r1, #4
    60cc:	bl	21d4 <btbb_piconet_set_flag@plt>
    60d0:	mov	r2, #0
    60d4:	mov	r0, r4
    60d8:	mov	r1, #5
    60dc:	bl	21d4 <btbb_piconet_set_flag@plt>
    60e0:	mov	r3, #0
    60e4:	mov	r1, #12
    60e8:	mov	r0, r4
    60ec:	str	r3, [r4, #380]	; 0x17c
    60f0:	bl	21b0 <btbb_piconet_get_flag@plt>
    60f4:	mov	r2, r0
    60f8:	mov	r1, #11
    60fc:	ldr	lr, [sp, #4]
    6100:	mov	r0, r4
    6104:	ldr	r4, [sp]
    6108:	add	sp, sp, #8
    610c:	b	21d4 <btbb_piconet_set_flag@plt>
    6110:	ldr	r0, [r4, #32]
    6114:	bl	2108 <free@plt>
    6118:	mov	r3, #0
    611c:	str	r3, [r4, #372]	; 0x174
    6120:	b	6090 <btbb_piconet_get_flag@@Base+0x34>

00006124 <btbb_piconet_set_uap@@Base>:
    6124:	mov	r2, #1
    6128:	strb	r1, [r0, #28]
    612c:	mov	r1, #2
    6130:	b	21d4 <btbb_piconet_set_flag@plt>

00006134 <btbb_piconet_get_uap@@Base>:
    6134:	ldrb	r0, [r0, #28]
    6138:	bx	lr

0000613c <btbb_piconet_get_lap@@Base>:
    613c:	ldr	r0, [r0, #24]
    6140:	bx	lr

00006144 <btbb_piconet_get_nap@@Base>:
    6144:	ldrh	r0, [r0, #30]
    6148:	bx	lr

0000614c <btbb_piconet_get_bdaddr@@Base>:
    614c:	ldrb	r2, [r0, #28]
    6150:	ldr	r3, [r0, #24]
    6154:	ldrh	r1, [r0, #30]
    6158:	orr	r0, r3, r2, lsl #24
    615c:	bx	lr

00006160 <btbb_piconet_get_clk_offset@@Base>:
    6160:	add	r0, r0, #4096	; 0x1000
    6164:	ldr	r0, [r0, #1552]	; 0x610
    6168:	bx	lr

0000616c <btbb_piconet_set_clk_offset@@Base>:
    616c:	add	r0, r0, #4096	; 0x1000
    6170:	str	r1, [r0, #1552]	; 0x610
    6174:	bx	lr

00006178 <btbb_piconet_get_afh_map@@Base>:
    6178:	add	r0, r0, #12
    617c:	bx	lr

00006180 <btbb_piconet_set_channel_seen@@Base>:
    6180:	push	{lr}		; (str lr, [sp, #-4]!)
    6184:	add	lr, r0, r1, lsr #3
    6188:	and	r1, r1, #7
    618c:	ldrb	r2, [lr, #12]
    6190:	asr	r3, r2, r1
    6194:	tst	r3, #1
    6198:	movne	r0, #0
    619c:	bne	61c0 <btbb_piconet_set_channel_seen@@Base+0x40>
    61a0:	mov	r3, #1
    61a4:	mov	ip, r0
    61a8:	orr	r1, r2, r3, lsl r1
    61ac:	mov	r0, r3
    61b0:	strb	r1, [lr, #12]
    61b4:	ldrb	r3, [ip, #22]
    61b8:	add	r3, r3, r0
    61bc:	strb	r3, [ip, #22]
    61c0:	pop	{pc}		; (ldr pc, [sp], #4)

000061c4 <btbb_piconet_clear_channel_seen@@Base>:
    61c4:	add	ip, r0, r1, lsr #3
    61c8:	and	r1, r1, #7
    61cc:	ldrb	r2, [ip, #12]
    61d0:	asr	r3, r2, r1
    61d4:	ands	r3, r3, #1
    61d8:	beq	61f4 <btbb_piconet_clear_channel_seen@@Base+0x30>
    61dc:	mov	r3, #1
    61e0:	bic	r1, r2, r3, lsl r1
    61e4:	strb	r1, [ip, #12]
    61e8:	ldrb	r2, [r0, #22]
    61ec:	sub	r2, r2, #1
    61f0:	strb	r2, [r0, #22]
    61f4:	mov	r0, r3
    61f8:	bx	lr

000061fc <btbb_piconet_get_channel_seen@@Base>:
    61fc:	cmp	r1, #78	; 0x4e
    6200:	bhi	621c <btbb_piconet_get_channel_seen@@Base+0x20>
    6204:	add	r0, r0, r1, lsr #3
    6208:	and	r1, r1, #7
    620c:	ldrb	r0, [r0, #12]
    6210:	asr	r0, r0, r1
    6214:	and	r0, r0, #1
    6218:	bx	lr
    621c:	mov	r0, #1
    6220:	bx	lr

00006224 <precalc@@Base>:
    6224:	strd	r4, [sp, #-32]!	; 0xffffffe0
    6228:	mov	r5, #0
    622c:	strd	r6, [sp, #8]
    6230:	movw	r7, #29865	; 0x74a9
    6234:	movt	r7, #53092	; 0xcf64
    6238:	mov	r6, r0
    623c:	strd	r8, [sp, #16]
    6240:	mov	r9, r5
    6244:	mov	r8, #79	; 0x4f
    6248:	str	sl, [sp, #24]
    624c:	str	lr, [sp, #28]
    6250:	b	6260 <precalc@@Base+0x3c>
    6254:	add	r5, r5, #2
    6258:	cmp	r5, #158	; 0x9e
    625c:	beq	62b0 <precalc@@Base+0x8c>
    6260:	umull	r3, r4, r7, r5
    6264:	mov	r1, #11
    6268:	mov	r0, r6
    626c:	bl	21b0 <btbb_piconet_get_flag@plt>
    6270:	cmp	r0, #0
    6274:	add	r3, r6, #56	; 0x38
    6278:	lsr	r4, r4, #6
    627c:	mls	r4, r8, r4, r5
    6280:	streq	r4, [r3, r5, lsl #1]
    6284:	beq	6254 <precalc@@Base+0x30>
    6288:	mov	r0, r6
    628c:	uxtb	r1, r4
    6290:	bl	218c <btbb_piconet_get_channel_seen@plt>
    6294:	cmp	r0, #0
    6298:	add	r3, r9, #14
    629c:	add	r5, r5, #2
    62a0:	addne	r9, r9, #1
    62a4:	strne	r4, [r6, r3, lsl #2]
    62a8:	cmp	r5, #158	; 0x9e
    62ac:	bne	6260 <precalc@@Base+0x3c>
    62b0:	ldrd	r4, [sp]
    62b4:	ldrd	r6, [sp, #8]
    62b8:	ldrd	r8, [sp, #16]
    62bc:	ldr	sl, [sp, #24]
    62c0:	add	sp, sp, #28
    62c4:	pop	{pc}		; (ldr pc, [sp], #4)

000062c8 <address_precalc@@Base>:
    62c8:	asr	r3, r0, #7
    62cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
    62d0:	asr	r2, r0, #6
    62d4:	strd	r6, [sp, #8]
    62d8:	asr	ip, r0, #4
    62dc:	and	r3, r3, #64	; 0x40
    62e0:	str	r8, [sp, #16]
    62e4:	asr	r7, r0, #3
    62e8:	str	lr, [sp, #20]
    62ec:	and	r2, r2, #32
    62f0:	asr	lr, r0, #5
    62f4:	orr	r2, r3, r2
    62f8:	and	r4, ip, #16
    62fc:	asr	r5, r0, #2
    6300:	and	r3, r7, #8
    6304:	and	r6, ip, #8
    6308:	and	lr, lr, #16
    630c:	orr	r4, r4, r3
    6310:	asr	ip, r0, #1
    6314:	add	r3, r2, lr
    6318:	and	r7, r7, #4
    631c:	ubfx	r8, r0, #23, #5
    6320:	add	r3, r3, r6
    6324:	and	r2, r5, #4
    6328:	and	lr, ip, #2
    632c:	add	r2, r4, r2
    6330:	ubfx	r4, r0, #19, #4
    6334:	and	r5, r5, #2
    6338:	add	r3, r3, r7
    633c:	ldrd	r6, [sp, #8]
    6340:	add	r2, r2, lr
    6344:	add	r3, r3, r5
    6348:	ubfx	lr, r0, #10, #9
    634c:	and	ip, ip, #1
    6350:	and	r0, r0, #1
    6354:	str	r4, [r1, #36]	; 0x24
    6358:	add	r0, r2, r0
    635c:	add	r3, r3, ip
    6360:	ldrd	r4, [sp]
    6364:	str	r8, [r1, #44]	; 0x2c
    6368:	ldr	r8, [sp, #16]
    636c:	add	sp, sp, #20
    6370:	str	r3, [r1, #40]	; 0x28
    6374:	str	r0, [r1, #48]	; 0x30
    6378:	str	lr, [r1, #52]	; 0x34
    637c:	pop	{pc}		; (ldr pc, [sp], #4)

00006380 <perm5@@Base>:
    6380:	ldr	r3, [pc, #928]	; 6728 <perm5@@Base+0x3a8>
    6384:	ubfx	ip, r0, #2, #1
    6388:	tst	r1, #16
    638c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6390:	and	r4, r0, #1
    6394:	strd	r6, [sp, #8]
    6398:	ubfx	r7, r0, #1, #1
    639c:	strd	r8, [sp, #16]
    63a0:	and	r8, r1, #1
    63a4:	ubfx	r6, r0, #3, #1
    63a8:	strd	sl, [sp, #24]
    63ac:	ubfx	r0, r0, #4, #1
    63b0:	and	fp, r2, #1
    63b4:	str	lr, [sp, #32]
    63b8:	sub	sp, sp, #156	; 0x9c
    63bc:	add	r3, pc, r3
    63c0:	ubfx	sl, r1, #2, #1
    63c4:	str	r8, [sp, #8]
    63c8:	ubfx	lr, r2, #3, #1
    63cc:	ldrd	r8, [r3, #64]	; 0x40
    63d0:	str	r4, [sp, #20]
    63d4:	str	r7, [sp, #24]
    63d8:	ubfx	r7, r2, #1, #1
    63dc:	str	r6, [sp, #32]
    63e0:	str	r7, [sp, #12]
    63e4:	strd	r8, [sp, #104]	; 0x68
    63e8:	ldrd	r8, [r3]
    63ec:	str	ip, [sp, #28]
    63f0:	ubfx	ip, r2, #2, #1
    63f4:	ldrd	r6, [r3, #8]
    63f8:	strd	r8, [sp, #40]	; 0x28
    63fc:	ldrd	r8, [r3, #72]	; 0x48
    6400:	strd	r6, [sp, #48]	; 0x30
    6404:	ldrd	r6, [r3, #80]	; 0x50
    6408:	strd	r8, [sp, #112]	; 0x70
    640c:	ldrd	r8, [r3, #16]
    6410:	strd	r8, [sp, #56]	; 0x38
    6414:	ldrd	r8, [r3, #24]
    6418:	strd	r6, [sp, #120]	; 0x78
    641c:	ldrd	r6, [r3, #32]
    6420:	strd	r8, [sp, #64]	; 0x40
    6424:	ldrd	r8, [r3, #96]	; 0x60
    6428:	strd	r6, [sp, #72]	; 0x48
    642c:	ldrd	r6, [r3, #104]	; 0x68
    6430:	strd	r8, [sp, #136]	; 0x88
    6434:	ldrd	r8, [r3, #88]	; 0x58
    6438:	strd	r8, [sp, #128]	; 0x80
    643c:	ldrd	r8, [r3, #48]	; 0x30
    6440:	str	r0, [sp, #36]	; 0x24
    6444:	ldrd	r4, [r3, #56]	; 0x38
    6448:	strd	r8, [sp, #88]	; 0x58
    644c:	ldrd	r8, [r3, #40]	; 0x28
    6450:	ubfx	r3, r2, #8, #1
    6454:	str	r3, [sp, #4]
    6458:	strd	r4, [sp, #96]	; 0x60
    645c:	ubfx	r4, r2, #4, #1
    6460:	ubfx	r5, r2, #5, #1
    6464:	strd	r8, [sp, #80]	; 0x50
    6468:	ubfx	r9, r1, #1, #1
    646c:	strd	r6, [sp, #144]	; 0x90
    6470:	ubfx	r1, r1, #3, #1
    6474:	ubfx	r6, r2, #6, #1
    6478:	ubfx	r7, r2, #7, #1
    647c:	beq	64a4 <perm5@@Base+0x124>
    6480:	ldr	r0, [sp, #92]	; 0x5c
    6484:	add	r8, sp, #152	; 0x98
    6488:	ldr	r3, [sp, #148]	; 0x94
    648c:	add	r0, r8, r0, lsl #2
    6490:	add	r3, r8, r3, lsl #2
    6494:	ldr	r8, [r0, #-132]	; 0xffffff7c
    6498:	ldr	r2, [r3, #-132]	; 0xffffff7c
    649c:	str	r2, [r0, #-132]	; 0xffffff7c
    64a0:	str	r8, [r3, #-132]	; 0xffffff7c
    64a4:	cmp	r1, #0
    64a8:	beq	64d0 <perm5@@Base+0x150>
    64ac:	ldr	r1, [sp, #88]	; 0x58
    64b0:	add	r2, sp, #152	; 0x98
    64b4:	ldr	r3, [sp, #144]	; 0x90
    64b8:	add	r1, r2, r1, lsl #2
    64bc:	add	r3, r2, r3, lsl #2
    64c0:	ldr	r0, [r1, #-132]	; 0xffffff7c
    64c4:	ldr	r2, [r3, #-132]	; 0xffffff7c
    64c8:	str	r2, [r1, #-132]	; 0xffffff7c
    64cc:	str	r0, [r3, #-132]	; 0xffffff7c
    64d0:	cmp	sl, #0
    64d4:	beq	64fc <perm5@@Base+0x17c>
    64d8:	ldr	r1, [sp, #84]	; 0x54
    64dc:	add	r2, sp, #152	; 0x98
    64e0:	ldr	r3, [sp, #140]	; 0x8c
    64e4:	add	r1, r2, r1, lsl #2
    64e8:	add	r3, r2, r3, lsl #2
    64ec:	ldr	r0, [r1, #-132]	; 0xffffff7c
    64f0:	ldr	sl, [r3, #-132]	; 0xffffff7c
    64f4:	str	sl, [r1, #-132]	; 0xffffff7c
    64f8:	str	r0, [r3, #-132]	; 0xffffff7c
    64fc:	cmp	r9, #0
    6500:	beq	6528 <perm5@@Base+0x1a8>
    6504:	ldr	r1, [sp, #80]	; 0x50
    6508:	add	r2, sp, #152	; 0x98
    650c:	ldr	r3, [sp, #136]	; 0x88
    6510:	add	r1, r2, r1, lsl #2
    6514:	add	r3, r2, r3, lsl #2
    6518:	ldr	r0, [r1, #-132]	; 0xffffff7c
    651c:	ldr	r9, [r3, #-132]	; 0xffffff7c
    6520:	str	r9, [r1, #-132]	; 0xffffff7c
    6524:	str	r0, [r3, #-132]	; 0xffffff7c
    6528:	ldr	r3, [sp, #8]
    652c:	cmp	r3, #0
    6530:	beq	6558 <perm5@@Base+0x1d8>
    6534:	ldr	r1, [sp, #76]	; 0x4c
    6538:	add	r2, sp, #152	; 0x98
    653c:	ldr	r3, [sp, #132]	; 0x84
    6540:	add	r1, r2, r1, lsl #2
    6544:	add	r3, r2, r3, lsl #2
    6548:	ldr	r0, [r1, #-132]	; 0xffffff7c
    654c:	ldr	r8, [r3, #-132]	; 0xffffff7c
    6550:	str	r8, [r1, #-132]	; 0xffffff7c
    6554:	str	r0, [r3, #-132]	; 0xffffff7c
    6558:	ldr	r3, [sp, #4]
    655c:	cmp	r3, #0
    6560:	beq	6588 <perm5@@Base+0x208>
    6564:	ldr	r2, [sp, #72]	; 0x48
    6568:	add	r1, sp, #152	; 0x98
    656c:	ldr	r3, [sp, #128]	; 0x80
    6570:	add	r2, r1, r2, lsl #2
    6574:	add	r3, r1, r3, lsl #2
    6578:	ldr	r1, [r2, #-132]	; 0xffffff7c
    657c:	ldr	r0, [r3, #-132]	; 0xffffff7c
    6580:	str	r0, [r2, #-132]	; 0xffffff7c
    6584:	str	r1, [r3, #-132]	; 0xffffff7c
    6588:	cmp	r7, #0
    658c:	beq	65b4 <perm5@@Base+0x234>
    6590:	ldr	r2, [sp, #68]	; 0x44
    6594:	add	r1, sp, #152	; 0x98
    6598:	ldr	r3, [sp, #124]	; 0x7c
    659c:	add	r2, r1, r2, lsl #2
    65a0:	add	r3, r1, r3, lsl #2
    65a4:	ldr	r1, [r2, #-132]	; 0xffffff7c
    65a8:	ldr	r0, [r3, #-132]	; 0xffffff7c
    65ac:	str	r0, [r2, #-132]	; 0xffffff7c
    65b0:	str	r1, [r3, #-132]	; 0xffffff7c
    65b4:	cmp	r6, #0
    65b8:	beq	65e0 <perm5@@Base+0x260>
    65bc:	ldr	r2, [sp, #64]	; 0x40
    65c0:	add	r1, sp, #152	; 0x98
    65c4:	ldr	r3, [sp, #120]	; 0x78
    65c8:	add	r2, r1, r2, lsl #2
    65cc:	add	r3, r1, r3, lsl #2
    65d0:	ldr	r1, [r2, #-132]	; 0xffffff7c
    65d4:	ldr	r0, [r3, #-132]	; 0xffffff7c
    65d8:	str	r0, [r2, #-132]	; 0xffffff7c
    65dc:	str	r1, [r3, #-132]	; 0xffffff7c
    65e0:	cmp	r5, #0
    65e4:	beq	660c <perm5@@Base+0x28c>
    65e8:	ldr	r2, [sp, #60]	; 0x3c
    65ec:	add	r1, sp, #152	; 0x98
    65f0:	ldr	r3, [sp, #116]	; 0x74
    65f4:	add	r2, r1, r2, lsl #2
    65f8:	add	r3, r1, r3, lsl #2
    65fc:	ldr	r1, [r2, #-132]	; 0xffffff7c
    6600:	ldr	r0, [r3, #-132]	; 0xffffff7c
    6604:	str	r0, [r2, #-132]	; 0xffffff7c
    6608:	str	r1, [r3, #-132]	; 0xffffff7c
    660c:	cmp	r4, #0
    6610:	beq	6638 <perm5@@Base+0x2b8>
    6614:	ldr	r2, [sp, #56]	; 0x38
    6618:	add	r1, sp, #152	; 0x98
    661c:	ldr	r3, [sp, #112]	; 0x70
    6620:	add	r2, r1, r2, lsl #2
    6624:	add	r3, r1, r3, lsl #2
    6628:	ldr	r1, [r2, #-132]	; 0xffffff7c
    662c:	ldr	r0, [r3, #-132]	; 0xffffff7c
    6630:	str	r0, [r2, #-132]	; 0xffffff7c
    6634:	str	r1, [r3, #-132]	; 0xffffff7c
    6638:	cmp	lr, #0
    663c:	beq	6664 <perm5@@Base+0x2e4>
    6640:	ldr	r2, [sp, #52]	; 0x34
    6644:	add	r1, sp, #152	; 0x98
    6648:	ldr	r3, [sp, #108]	; 0x6c
    664c:	add	r2, r1, r2, lsl #2
    6650:	add	r3, r1, r3, lsl #2
    6654:	ldr	r1, [r2, #-132]	; 0xffffff7c
    6658:	ldr	r0, [r3, #-132]	; 0xffffff7c
    665c:	str	r0, [r2, #-132]	; 0xffffff7c
    6660:	str	r1, [r3, #-132]	; 0xffffff7c
    6664:	cmp	ip, #0
    6668:	beq	6690 <perm5@@Base+0x310>
    666c:	ldr	r2, [sp, #48]	; 0x30
    6670:	add	r1, sp, #152	; 0x98
    6674:	ldr	r3, [sp, #104]	; 0x68
    6678:	add	r2, r1, r2, lsl #2
    667c:	add	r3, r1, r3, lsl #2
    6680:	ldr	r1, [r2, #-132]	; 0xffffff7c
    6684:	ldr	r0, [r3, #-132]	; 0xffffff7c
    6688:	str	r0, [r2, #-132]	; 0xffffff7c
    668c:	str	r1, [r3, #-132]	; 0xffffff7c
    6690:	ldr	r3, [sp, #12]
    6694:	cmp	r3, #0
    6698:	beq	66c0 <perm5@@Base+0x340>
    669c:	ldr	r2, [sp, #44]	; 0x2c
    66a0:	add	r1, sp, #152	; 0x98
    66a4:	ldr	r3, [sp, #100]	; 0x64
    66a8:	add	r2, r1, r2, lsl #2
    66ac:	add	r3, r1, r3, lsl #2
    66b0:	ldr	r1, [r2, #-132]	; 0xffffff7c
    66b4:	ldr	r0, [r3, #-132]	; 0xffffff7c
    66b8:	str	r0, [r2, #-132]	; 0xffffff7c
    66bc:	str	r1, [r3, #-132]	; 0xffffff7c
    66c0:	cmp	fp, #0
    66c4:	beq	66ec <perm5@@Base+0x36c>
    66c8:	ldr	r2, [sp, #40]	; 0x28
    66cc:	add	r1, sp, #152	; 0x98
    66d0:	ldr	r3, [sp, #96]	; 0x60
    66d4:	add	r2, r1, r2, lsl #2
    66d8:	add	r3, r1, r3, lsl #2
    66dc:	ldr	r1, [r2, #-132]	; 0xffffff7c
    66e0:	ldr	r0, [r3, #-132]	; 0xffffff7c
    66e4:	str	r0, [r2, #-132]	; 0xffffff7c
    66e8:	str	r1, [r3, #-132]	; 0xffffff7c
    66ec:	ldr	r3, [sp, #20]
    66f0:	ldrd	r0, [sp, #24]
    66f4:	ldr	r2, [sp, #32]
    66f8:	add	r3, r3, r0, lsl #1
    66fc:	ldr	r0, [sp, #36]	; 0x24
    6700:	add	r3, r3, r1, lsl #2
    6704:	add	r3, r3, r2, lsl #3
    6708:	add	r0, r3, r0, lsl #4
    670c:	add	sp, sp, #156	; 0x9c
    6710:	ldrd	r4, [sp]
    6714:	ldrd	r6, [sp, #8]
    6718:	ldrd	r8, [sp, #16]
    671c:	ldrd	sl, [sp, #24]
    6720:	add	sp, sp, #32
    6724:	pop	{pc}		; (ldr pc, [sp], #4)
    6728:	andeq	sp, r0, r8, lsr #18

0000672c <perm_table_init@@Base>:
    672c:	ldr	r3, [pc, #164]	; 67d8 <perm_table_init@@Base+0xac>
    6730:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6734:	ldr	r2, [pc, #160]	; 67dc <perm_table_init@@Base+0xb0>
    6738:	strd	r6, [sp, #8]
    673c:	mov	r7, #0
    6740:	strd	r8, [sp, #16]
    6744:	add	r3, pc, r3
    6748:	strd	sl, [sp, #24]
    674c:	str	lr, [sp, #32]
    6750:	sub	sp, sp, #4
    6754:	ldr	r9, [r3, r2]
    6758:	rsb	sl, r9, #-16777216	; 0xff000000
    675c:	rsb	r9, r9, #0
    6760:	add	sl, sl, #16252928	; 0xf80000
    6764:	rsb	r5, r9, #508	; 0x1fc
    6768:	mov	r8, r9
    676c:	add	r5, r5, #3
    6770:	mov	r4, #0
    6774:	mvn	fp, r8
    6778:	add	r6, r8, #1
    677c:	add	r2, r6, fp
    6780:	mov	r1, r4
    6784:	mov	r0, r7
    6788:	bl	23f0 <perm5@plt>
    678c:	strb	r0, [fp, #1]!
    6790:	cmp	fp, r5
    6794:	bne	677c <perm_table_init@@Base+0x50>
    6798:	add	r4, r4, #1
    679c:	sub	r8, r8, #512	; 0x200
    67a0:	cmp	r4, #32
    67a4:	add	r5, fp, #512	; 0x200
    67a8:	bne	6774 <perm_table_init@@Base+0x48>
    67ac:	sub	r9, r9, #16384	; 0x4000
    67b0:	add	r7, r7, #1
    67b4:	cmp	r9, sl
    67b8:	bne	6764 <perm_table_init@@Base+0x38>
    67bc:	add	sp, sp, #4
    67c0:	ldrd	r4, [sp]
    67c4:	ldrd	r6, [sp, #8]
    67c8:	ldrd	r8, [sp, #16]
    67cc:	ldrd	sl, [sp, #24]
    67d0:	add	sp, sp, #32
    67d4:	pop	{pc}		; (ldr pc, [sp], #4)
    67d8:			; <UNDEFINED> instruction: 0x000248b4
    67dc:	andeq	r0, r0, r8, lsl #3

000067e0 <fast_perm@@Base>:
    67e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    67e4:	mov	r4, r1
    67e8:	ldr	r5, [pc, #96]	; 6850 <fast_perm@@Base+0x70>
    67ec:	strd	r6, [sp, #8]
    67f0:	mov	r7, r2
    67f4:	ldr	r3, [pc, #88]	; 6854 <fast_perm@@Base+0x74>
    67f8:	str	r8, [sp, #16]
    67fc:	mov	r8, r0
    6800:	str	lr, [sp, #20]
    6804:	add	r5, pc, r5
    6808:	ldr	r6, [r5, r3]
    680c:	ldr	r3, [r6]
    6810:	cmp	r3, #0
    6814:	beq	6840 <fast_perm@@Base+0x60>
    6818:	ldr	r3, [pc, #56]	; 6858 <fast_perm@@Base+0x78>
    681c:	add	r4, r4, r8, lsl #5
    6820:	ldr	r8, [sp, #16]
    6824:	ldr	r1, [r5, r3]
    6828:	add	r1, r1, r4, lsl #9
    682c:	ldrd	r4, [sp]
    6830:	ldrb	r0, [r1, r7]
    6834:	ldrd	r6, [sp, #8]
    6838:	add	sp, sp, #20
    683c:	pop	{pc}		; (ldr pc, [sp], #4)
    6840:	bl	2204 <perm_table_init@plt>
    6844:	mov	r3, #1
    6848:	str	r3, [r6]
    684c:	b	6818 <fast_perm@@Base+0x38>
    6850:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
    6854:	andeq	r0, r0, ip, lsl #3
    6858:	andeq	r0, r0, r8, lsl #3

0000685c <gen_hop_pattern@@Base>:
    685c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6860:	strd	r6, [sp, #8]
    6864:	mov	r6, #0
    6868:	strd	sl, [sp, #24]
    686c:	mov	fp, r0
    6870:	movw	sl, #29865	; 0x74a9
    6874:	movt	sl, #53092	; 0xcf64
    6878:	ldr	r0, [pc, #740]	; 6b64 <gen_hop_pattern@@Base+0x308>
    687c:	strd	r8, [sp, #16]
    6880:	str	lr, [sp, #32]
    6884:	sub	sp, sp, #68	; 0x44
    6888:	add	r0, pc, r0
    688c:	bl	227c <puts@plt>
    6890:	mov	r0, #134217728	; 0x8000000
    6894:	bl	2288 <malloc@plt>
    6898:	str	r0, [fp, #372]	; 0x174
    689c:	mov	r0, fp
    68a0:	bl	2438 <precalc@plt>
    68a4:	ldrb	r3, [fp, #28]
    68a8:	mov	r1, fp
    68ac:	ldr	r0, [fp, #24]
    68b0:	orr	r0, r0, r3, lsl #24
    68b4:	bic	r0, r0, #-268435456	; 0xf0000000
    68b8:	bl	2378 <address_precalc@plt>
    68bc:	mov	r3, r6
    68c0:	str	r6, [sp, #24]
    68c4:	str	sl, [sp, #28]
    68c8:	mov	sl, fp
    68cc:	mov	fp, r6
    68d0:	lsl	r2, fp, #2
    68d4:	mov	r7, sl
    68d8:	str	fp, [sp, #8]
    68dc:	str	r2, [sp, #16]
    68e0:	mov	r2, #0
    68e4:	str	fp, [sp, #52]	; 0x34
    68e8:	mov	fp, r3
    68ec:	str	r2, [sp, #4]
    68f0:	ldr	r2, [sp, #16]
    68f4:	mov	sl, #0
    68f8:	ldr	r3, [r7, #44]	; 0x2c
    68fc:	str	r2, [sp, #20]
    6900:	ldr	r2, [sp, #8]
    6904:	str	r2, [sp, #12]
    6908:	ldr	r2, [sp, #4]
    690c:	eor	r3, r2, r3
    6910:	str	r3, [sp, #36]	; 0x24
    6914:	ldr	r2, [r7, #48]	; 0x30
    6918:	mov	r8, #0
    691c:	mov	r9, #79	; 0x4f
    6920:	str	sl, [sp, #56]	; 0x38
    6924:	ldr	r3, [sp, #12]
    6928:	ldr	r4, [sp, #20]
    692c:	eor	r2, sl, r2
    6930:	mov	sl, r8
    6934:	mov	r8, r3
    6938:	str	r2, [sp, #40]	; 0x28
    693c:	eor	r2, r2, #31
    6940:	str	r2, [sp, #44]	; 0x2c
    6944:	ldr	r2, [r7, #52]	; 0x34
    6948:	add	r3, r4, #64	; 0x40
    694c:	ldr	r6, [sp, #36]	; 0x24
    6950:	str	r3, [sp, #48]	; 0x30
    6954:	eor	r3, sl, r2
    6958:	str	r3, [sp, #32]
    695c:	ldr	r0, [r7, #36]	; 0x24
    6960:	rsbs	r1, r6, #0
    6964:	and	r5, r6, #31
    6968:	and	r1, r1, #31
    696c:	rsbpl	r5, r1, #0
    6970:	ldr	r2, [sp, #32]
    6974:	ldr	r1, [sp, #40]	; 0x28
    6978:	eor	r5, r5, r0
    697c:	mov	r0, r5
    6980:	bl	2474 <fast_perm@plt>
    6984:	mov	r2, r0
    6988:	mov	r1, #11
    698c:	mov	r0, r7
    6990:	str	r2, [sp, #60]	; 0x3c
    6994:	bl	21b0 <btbb_piconet_get_flag@plt>
    6998:	cmp	r0, #0
    699c:	ldr	r2, [sp, #60]	; 0x3c
    69a0:	beq	6b34 <gen_hop_pattern@@Base+0x2d8>
    69a4:	ldr	ip, [r7, #40]	; 0x28
    69a8:	ldr	r3, [sp, #24]
    69ac:	ldrb	r1, [r7, #22]
    69b0:	add	r2, r2, ip
    69b4:	ldr	r0, [r7, #372]	; 0x174
    69b8:	add	r2, r2, r3
    69bc:	udiv	ip, r2, r1
    69c0:	mls	r2, r1, ip, r2
    69c4:	add	r2, r2, #14
    69c8:	ldr	r2, [r7, r2, lsl #2]
    69cc:	strb	r2, [r0, r4]
    69d0:	mov	r0, r5
    69d4:	ldr	r2, [sp, #32]
    69d8:	ldr	r1, [sp, #44]	; 0x2c
    69dc:	bl	2474 <fast_perm@plt>
    69e0:	mov	r5, r0
    69e4:	mov	r1, #11
    69e8:	mov	r0, r7
    69ec:	bl	21b0 <btbb_piconet_get_flag@plt>
    69f0:	ldr	r3, [sp, #24]
    69f4:	cmp	r0, #0
    69f8:	add	ip, fp, #32
    69fc:	add	r1, r4, #1
    6a00:	ldr	r2, [r7, #40]	; 0x28
    6a04:	add	lr, r3, #32
    6a08:	beq	6b08 <gen_hop_pattern@@Base+0x2ac>
    6a0c:	ldrb	r0, [r7, #22]
    6a10:	add	r5, r5, r2
    6a14:	add	r5, r5, lr
    6a18:	ldr	ip, [r7, #372]	; 0x174
    6a1c:	udiv	r2, r5, r0
    6a20:	mls	r5, r0, r2, r5
    6a24:	add	r5, r5, #14
    6a28:	ldr	r2, [r7, r5, lsl #2]
    6a2c:	strb	r2, [ip, r1]
    6a30:	ldr	r3, [sp, #48]	; 0x30
    6a34:	add	r4, r4, #2
    6a38:	add	r6, r6, #1
    6a3c:	cmp	r4, r3
    6a40:	bne	695c <gen_hop_pattern@@Base+0x100>
    6a44:	ldr	r3, [sp, #28]
    6a48:	add	r8, r8, #16
    6a4c:	add	sl, sl, #1
    6a50:	cmp	sl, #512	; 0x200
    6a54:	ldrb	r2, [r7, #22]
    6a58:	umull	r3, fp, r3, r8
    6a5c:	lsr	fp, fp, #6
    6a60:	mls	fp, r9, fp, r8
    6a64:	udiv	r1, fp, r2
    6a68:	mls	r3, r2, r1, fp
    6a6c:	str	r3, [sp, #24]
    6a70:	bne	6944 <gen_hop_pattern@@Base+0xe8>
    6a74:	ldr	r3, [sp, #20]
    6a78:	ldr	sl, [sp, #56]	; 0x38
    6a7c:	add	r3, r3, #32768	; 0x8000
    6a80:	str	r3, [sp, #20]
    6a84:	add	sl, sl, #1
    6a88:	ldr	r3, [sp, #12]
    6a8c:	cmp	sl, #32
    6a90:	add	r3, r3, #8192	; 0x2000
    6a94:	str	r3, [sp, #12]
    6a98:	bne	6914 <gen_hop_pattern@@Base+0xb8>
    6a9c:	ldr	r3, [sp, #4]
    6aa0:	ldr	r2, [sp, #16]
    6aa4:	add	r3, r3, #1
    6aa8:	cmp	r3, #32
    6aac:	str	r3, [sp, #4]
    6ab0:	add	r2, r2, #1048576	; 0x100000
    6ab4:	ldr	r3, [sp, #8]
    6ab8:	str	r2, [sp, #16]
    6abc:	add	r3, r3, #262144	; 0x40000
    6ac0:	str	r3, [sp, #8]
    6ac4:	bne	68f0 <gen_hop_pattern@@Base+0x94>
    6ac8:	mov	r3, fp
    6acc:	ldr	fp, [sp, #52]	; 0x34
    6ad0:	mov	sl, r7
    6ad4:	add	fp, fp, #8388608	; 0x800000
    6ad8:	cmp	fp, #33554432	; 0x2000000
    6adc:	bne	68d0 <gen_hop_pattern@@Base+0x74>
    6ae0:	ldr	r0, [pc, #128]	; 6b68 <gen_hop_pattern@@Base+0x30c>
    6ae4:	add	r0, pc, r0
    6ae8:	add	sp, sp, #68	; 0x44
    6aec:	ldrd	r4, [sp]
    6af0:	ldrd	r6, [sp, #8]
    6af4:	ldrd	r8, [sp, #16]
    6af8:	ldrd	sl, [sp, #24]
    6afc:	ldr	lr, [sp, #32]
    6b00:	add	sp, sp, #36	; 0x24
    6b04:	b	227c <puts@plt>
    6b08:	ldr	r3, [sp, #28]
    6b0c:	add	r5, r5, r2
    6b10:	add	r5, r5, ip
    6b14:	ldr	r0, [r7, #372]	; 0x174
    6b18:	umull	r3, r2, r3, r5
    6b1c:	lsr	r2, r2, #6
    6b20:	mls	r2, r9, r2, r5
    6b24:	add	r2, r2, #14
    6b28:	ldr	r2, [r7, r2, lsl #2]
    6b2c:	strb	r2, [r0, r1]
    6b30:	b	6a30 <gen_hop_pattern@@Base+0x1d4>
    6b34:	ldr	r0, [r7, #40]	; 0x28
    6b38:	ldr	r3, [sp, #28]
    6b3c:	ldr	r1, [r7, #372]	; 0x174
    6b40:	add	r2, r2, r0
    6b44:	add	r0, r2, fp
    6b48:	umull	r3, r2, r3, r0
    6b4c:	lsr	r2, r2, #6
    6b50:	mls	r2, r9, r2, r0
    6b54:	add	r2, r2, #14
    6b58:	ldr	r2, [r7, r2, lsl #2]
    6b5c:	strb	r2, [r1, r4]
    6b60:	b	69d0 <gen_hop_pattern@@Base+0x174>
    6b64:	andeq	sp, r0, ip, asr #9
    6b68:	muleq	r0, r8, r2

00006b6c <get_hop_pattern@@Base>:
    6b6c:	mov	r1, #11
    6b70:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6b74:	mov	r5, r0
    6b78:	strd	r6, [sp, #8]
    6b7c:	strd	r8, [sp, #16]
    6b80:	strd	sl, [sp, #24]
    6b84:	str	lr, [sp, #32]
    6b88:	sub	sp, sp, #20
    6b8c:	bl	21b0 <btbb_piconet_get_flag@plt>
    6b90:	ldr	r3, [pc, #1268]	; 708c <get_hop_pattern@@Base+0x520>
    6b94:	ldrb	r6, [r5, #22]
    6b98:	ldrb	r2, [r5, #28]
    6b9c:	add	r3, pc, r3
    6ba0:	ldr	r4, [r5, #24]
    6ba4:	orr	r6, r6, r0, lsl #7
    6ba8:	ldr	r1, [r3, #4]
    6bac:	str	r6, [sp, #12]
    6bb0:	orr	r4, r4, r2, lsl #24
    6bb4:	cmp	r1, #0
    6bb8:	str	r4, [sp, #8]
    6bbc:	beq	6d2c <get_hop_pattern@@Base+0x1c0>
    6bc0:	bic	r2, r4, #16711680	; 0xff0000
    6bc4:	movw	r3, #16653	; 0x410d
    6bc8:	movt	r3, #274	; 0x112
    6bcc:	bic	r2, r2, #65280	; 0xff00
    6bd0:	ldr	r1, [r1, #12]
    6bd4:	add	r3, r2, r3
    6bd8:	and	r2, r4, #16711680	; 0xff0000
    6bdc:	add	r3, r3, r2
    6be0:	and	r2, r4, #65280	; 0xff00
    6be4:	add	r3, r3, r2
    6be8:	movw	ip, #63341	; 0xf76d
    6bec:	movt	ip, #7
    6bf0:	movw	r2, #47814	; 0xbac6
    6bf4:	movt	r2, #40777	; 0x9f49
    6bf8:	eor	ip, ip, r3
    6bfc:	ldr	r0, [r1, #4]
    6c00:	sub	r2, r2, ip
    6c04:	movw	r3, #48883	; 0xbef3
    6c08:	movt	r3, #65261	; 0xfeed
    6c0c:	eor	r2, r2, ip, lsl #8
    6c10:	sub	r3, r3, ip
    6c14:	sub	r3, r3, r2
    6c18:	sub	lr, ip, r2
    6c1c:	ldr	ip, [r1]
    6c20:	eor	r3, r3, r2, lsr #13
    6c24:	sub	r0, r0, #1
    6c28:	sub	lr, lr, r3
    6c2c:	sub	r2, r2, r3
    6c30:	eor	lr, lr, r3, lsr #12
    6c34:	sub	r2, r2, lr
    6c38:	sub	r3, r3, lr
    6c3c:	eor	r2, r2, lr, lsl #16
    6c40:	sub	r3, r3, r2
    6c44:	sub	lr, lr, r2
    6c48:	eor	r3, r3, r2, lsr #5
    6c4c:	sub	lr, lr, r3
    6c50:	sub	r2, r2, r3
    6c54:	eor	lr, lr, r3, lsr #3
    6c58:	sub	r2, r2, lr
    6c5c:	sub	r3, r3, lr
    6c60:	eor	r2, r2, lr, lsl #10
    6c64:	sub	r3, r3, r2
    6c68:	eor	r3, r3, r2, lsr #15
    6c6c:	and	r3, r3, r0
    6c70:	add	r3, r3, r3, lsl #1
    6c74:	ldr	r3, [ip, r3, lsl #2]
    6c78:	cmp	r3, #0
    6c7c:	beq	6d2c <get_hop_pattern@@Base+0x1c0>
    6c80:	ldr	r2, [r1, #20]
    6c84:	rsb	r2, r2, #0
    6c88:	b	6c98 <get_hop_pattern@@Base+0x12c>
    6c8c:	ldr	r3, [r3, #28]
    6c90:	cmp	r3, #0
    6c94:	beq	6d2c <get_hop_pattern@@Base+0x1c0>
    6c98:	adds	r3, r3, r2
    6c9c:	beq	6d2c <get_hop_pattern@@Base+0x1c0>
    6ca0:	ldr	r1, [r3, #36]	; 0x24
    6ca4:	cmp	r1, #4
    6ca8:	bne	6c8c <get_hop_pattern@@Base+0x120>
    6cac:	ldr	r1, [r3, #32]
    6cb0:	ldrb	r0, [sp, #8]
    6cb4:	ldrb	ip, [r1]
    6cb8:	cmp	ip, r0
    6cbc:	bne	6c8c <get_hop_pattern@@Base+0x120>
    6cc0:	ldrb	ip, [r1, #1]
    6cc4:	add	r1, r1, #1
    6cc8:	ldrb	r0, [sp, #9]
    6ccc:	cmp	ip, r0
    6cd0:	bne	6c8c <get_hop_pattern@@Base+0x120>
    6cd4:	ldrb	ip, [r1, #1]!
    6cd8:	ldrb	r0, [sp, #10]
    6cdc:	cmp	ip, r0
    6ce0:	bne	6c8c <get_hop_pattern@@Base+0x120>
    6ce4:	ldrb	r0, [r1, #1]
    6ce8:	ldrb	r1, [sp, #11]
    6cec:	cmp	r0, r1
    6cf0:	bne	6c8c <get_hop_pattern@@Base+0x120>
    6cf4:	ldr	r0, [pc, #916]	; 7090 <get_hop_pattern@@Base+0x524>
    6cf8:	str	r3, [sp, #4]
    6cfc:	add	r0, pc, r0
    6d00:	bl	227c <puts@plt>
    6d04:	ldr	r3, [sp, #4]
    6d08:	ldr	r3, [r3, #8]
    6d0c:	str	r3, [r5, #372]	; 0x174
    6d10:	add	sp, sp, #20
    6d14:	ldrd	r4, [sp]
    6d18:	ldrd	r6, [sp, #8]
    6d1c:	ldrd	r8, [sp, #16]
    6d20:	ldrd	sl, [sp, #24]
    6d24:	add	sp, sp, #32
    6d28:	pop	{pc}		; (ldr pc, [sp], #4)
    6d2c:	mov	r0, r5
    6d30:	bl	2090 <gen_hop_pattern@plt>
    6d34:	mov	r0, #48	; 0x30
    6d38:	bl	2288 <malloc@plt>
    6d3c:	ldr	r3, [pc, #848]	; 7094 <get_hop_pattern@@Base+0x528>
    6d40:	mov	r7, r0
    6d44:	mov	ip, #0
    6d48:	mov	r2, #4
    6d4c:	ldr	r0, [r5, #372]	; 0x174
    6d50:	stm	r7, {r4, r6}
    6d54:	add	r3, pc, r3
    6d58:	ldr	r1, [r3, #4]
    6d5c:	str	r0, [r7, #8]
    6d60:	str	ip, [r7, #20]
    6d64:	str	r7, [r7, #32]
    6d68:	str	r2, [r7, #36]	; 0x24
    6d6c:	cmp	r1, ip
    6d70:	beq	6ff4 <get_hop_pattern@@Base+0x488>
    6d74:	ldr	r5, [r1, #12]
    6d78:	add	r4, r7, #12
    6d7c:	ldr	r3, [r5, #16]
    6d80:	ldr	r2, [r5, #20]
    6d84:	str	r7, [r3, #8]
    6d88:	sub	r3, r3, r2
    6d8c:	str	r3, [r7, #16]
    6d90:	str	r4, [r5, #16]
    6d94:	ldr	r2, [r5, #12]
    6d98:	movw	r6, #16653	; 0x410d
    6d9c:	movt	r6, #274	; 0x112
    6da0:	movw	lr, #63341	; 0xf76d
    6da4:	movt	lr, #7
    6da8:	movw	ip, #47814	; 0xbac6
    6dac:	movt	ip, #40777	; 0x9f49
    6db0:	movw	r3, #48883	; 0xbef3
    6db4:	movt	r3, #65261	; 0xfeed
    6db8:	mov	r0, #0
    6dbc:	add	r2, r2, #1
    6dc0:	str	r2, [r5, #12]
    6dc4:	ldrb	r2, [r7]
    6dc8:	str	r5, [r7, #12]
    6dcc:	ldrb	r8, [r7, #3]
    6dd0:	ldr	r1, [r1, #12]
    6dd4:	add	r6, r2, r6
    6dd8:	ldrb	r2, [r7, #2]
    6ddc:	add	r6, r6, r8, lsl #24
    6de0:	ldrb	r8, [r7, #1]
    6de4:	add	r6, r6, r2, lsl #16
    6de8:	ldm	r1, {r1, r2}
    6dec:	add	r6, r6, r8, lsl #8
    6df0:	eor	lr, lr, r6
    6df4:	sub	ip, ip, lr
    6df8:	sub	r3, r3, lr
    6dfc:	eor	ip, ip, lr, lsl #8
    6e00:	sub	r2, r2, #1
    6e04:	sub	r3, r3, ip
    6e08:	sub	lr, lr, ip
    6e0c:	eor	r3, r3, ip, lsr #13
    6e10:	sub	lr, lr, r3
    6e14:	sub	ip, ip, r3
    6e18:	eor	lr, lr, r3, lsr #12
    6e1c:	sub	ip, ip, lr
    6e20:	sub	r3, r3, lr
    6e24:	eor	ip, ip, lr, lsl #16
    6e28:	sub	r3, r3, ip
    6e2c:	sub	lr, lr, ip
    6e30:	eor	r3, r3, ip, lsr #5
    6e34:	sub	lr, lr, r3
    6e38:	sub	ip, ip, r3
    6e3c:	eor	lr, lr, r3, lsr #3
    6e40:	sub	ip, ip, lr
    6e44:	sub	r3, r3, lr
    6e48:	eor	ip, ip, lr, lsl #10
    6e4c:	sub	r3, r3, ip
    6e50:	eor	r3, r3, ip, lsr #15
    6e54:	and	r2, r2, r3
    6e58:	add	r2, r2, r2, lsl #1
    6e5c:	str	r3, [r7, #40]	; 0x28
    6e60:	lsl	r3, r2, #2
    6e64:	add	r2, r1, r3
    6e68:	ldr	lr, [r1, r3]
    6e6c:	ldr	ip, [r2, #4]
    6e70:	cmp	lr, r0
    6e74:	add	ip, ip, #1
    6e78:	str	ip, [r2, #4]
    6e7c:	ldr	r2, [r2, #8]
    6e80:	str	r0, [r7, #24]
    6e84:	str	lr, [r7, #28]
    6e88:	strne	r4, [lr, #12]
    6e8c:	str	r4, [r1, r3]
    6e90:	add	r3, r2, #1
    6e94:	add	r3, r3, r3, lsl #2
    6e98:	cmp	ip, r3, lsl #1
    6e9c:	bcc	6d10 <get_hop_pattern@@Base+0x1a4>
    6ea0:	ldr	r3, [r5, #36]	; 0x24
    6ea4:	cmp	r3, #1
    6ea8:	beq	6d10 <get_hop_pattern@@Base+0x1a4>
    6eac:	ldr	r0, [r5, #4]
    6eb0:	mov	r1, #1
    6eb4:	add	r0, r0, r0, lsl r1
    6eb8:	lsl	r0, r0, #3
    6ebc:	bl	206c <calloc@plt>
    6ec0:	subs	r4, r0, #0
    6ec4:	beq	7084 <get_hop_pattern@@Base+0x518>
    6ec8:	ldr	fp, [r5, #4]
    6ecc:	mov	r8, #0
    6ed0:	ldr	r2, [r5, #8]
    6ed4:	str	r8, [r5, #28]
    6ed8:	ldr	r1, [r5, #12]
    6edc:	lsl	r3, fp, #1
    6ee0:	sub	r9, r3, #1
    6ee4:	add	r2, r2, #1
    6ee8:	tst	r1, r9
    6eec:	movne	r6, #1
    6ef0:	moveq	r6, r8
    6ef4:	add	r6, r6, r1, lsr r2
    6ef8:	cmp	fp, r8
    6efc:	str	r6, [r5, #24]
    6f00:	beq	7078 <get_hop_pattern@@Base+0x50c>
    6f04:	ldr	r2, [r5]
    6f08:	add	r3, r3, fp
    6f0c:	add	fp, r2, r3, lsl #2
    6f10:	mov	sl, r2
    6f14:	str	r2, [sp, #4]
    6f18:	ldr	r2, [sl]
    6f1c:	cmp	r2, #0
    6f20:	bne	6f3c <get_hop_pattern@@Base+0x3d0>
    6f24:	b	6f98 <get_hop_pattern@@Base+0x42c>
    6f28:	cmp	ip, #0
    6f2c:	str	r2, [r1, #12]
    6f30:	str	r2, [r4, r3, lsl #2]
    6f34:	beq	6f98 <get_hop_pattern@@Base+0x42c>
    6f38:	mov	r2, ip
    6f3c:	ldr	ip, [r2, #16]
    6f40:	ldr	r3, [r2, #28]
    6f44:	and	r3, r3, r9
    6f48:	add	r3, r3, r3, lsl #1
    6f4c:	add	r0, r4, r3, lsl #2
    6f50:	ldr	r1, [r0, #4]
    6f54:	add	r1, r1, #1
    6f58:	cmp	r6, r1
    6f5c:	str	r1, [r0, #4]
    6f60:	bcs	6f78 <get_hop_pattern@@Base+0x40c>
    6f64:	udiv	r1, r1, r6
    6f68:	ldr	lr, [r5, #28]
    6f6c:	add	lr, lr, #1
    6f70:	str	lr, [r5, #28]
    6f74:	str	r1, [r0, #8]
    6f78:	ldr	r1, [r4, r3, lsl #2]
    6f7c:	str	r8, [r2, #12]
    6f80:	cmp	r1, #0
    6f84:	str	r1, [r2, #16]
    6f88:	bne	6f28 <get_hop_pattern@@Base+0x3bc>
    6f8c:	cmp	ip, #0
    6f90:	str	r2, [r4, r3, lsl #2]
    6f94:	bne	6f38 <get_hop_pattern@@Base+0x3cc>
    6f98:	add	sl, sl, #12
    6f9c:	cmp	fp, sl
    6fa0:	bne	6f18 <get_hop_pattern@@Base+0x3ac>
    6fa4:	ldr	r0, [sp, #4]
    6fa8:	bl	2108 <free@plt>
    6fac:	ldr	r3, [r7, #12]
    6fb0:	ldmib	r3, {r1, r2, ip}
    6fb4:	str	r4, [r3]
    6fb8:	ldr	r0, [r3, #28]
    6fbc:	lsl	r1, r1, #1
    6fc0:	add	r2, r2, #1
    6fc4:	stmib	r3, {r1, r2}
    6fc8:	cmp	r0, ip, lsr #1
    6fcc:	movls	r2, #0
    6fd0:	strls	r2, [r3, #32]
    6fd4:	bls	6d10 <get_hop_pattern@@Base+0x1a4>
    6fd8:	ldr	r2, [r3, #32]
    6fdc:	add	r2, r2, #1
    6fe0:	cmp	r2, #1
    6fe4:	str	r2, [r3, #32]
    6fe8:	movhi	r2, #1
    6fec:	strhi	r2, [r3, #36]	; 0x24
    6ff0:	b	6d10 <get_hop_pattern@@Base+0x1a4>
    6ff4:	mov	r0, #44	; 0x2c
    6ff8:	str	r7, [r3, #4]
    6ffc:	str	r1, [r7, #16]
    7000:	bl	2288 <malloc@plt>
    7004:	cmp	r0, #0
    7008:	mov	r5, r0
    700c:	str	r0, [r7, #12]
    7010:	beq	7084 <get_hop_pattern@@Base+0x518>
    7014:	mov	r0, #0
    7018:	mov	r1, #0
    701c:	mov	lr, #32
    7020:	mov	ip, #5
    7024:	mov	r2, #12
    7028:	add	r4, r7, #12
    702c:	str	lr, [r5, #4]
    7030:	str	ip, [r5, #8]
    7034:	strd	r0, [r5, #12]
    7038:	str	r4, [r5, #16]
    703c:	strd	r0, [r5, #20]
    7040:	str	r2, [r5, #20]
    7044:	strd	r0, [r5, #28]
    7048:	strd	r0, [r5, #36]	; 0x24
    704c:	mov	r1, #1
    7050:	mov	r0, #384	; 0x180
    7054:	bl	206c <calloc@plt>
    7058:	cmp	r0, #0
    705c:	str	r0, [r5]
    7060:	beq	7084 <get_hop_pattern@@Base+0x518>
    7064:	movw	r3, #8161	; 0x1fe1
    7068:	movt	r3, #40977	; 0xa011
    706c:	mov	r1, r7
    7070:	str	r3, [r5, #40]	; 0x28
    7074:	b	6d94 <get_hop_pattern@@Base+0x228>
    7078:	ldr	r3, [r5]
    707c:	str	r3, [sp, #4]
    7080:	b	6fa4 <get_hop_pattern@@Base+0x438>
    7084:	mvn	r0, #0
    7088:	bl	22dc <exit@plt>
    708c:	andeq	r4, r2, r8, lsl #12
    7090:	andeq	sp, r0, r0, lsr #1
    7094:	andeq	r4, r2, r0, asr r4

00007098 <btbb_piconet_set_afh_map@@Base>:
    7098:	mov	r3, #0
    709c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    70a0:	mov	r5, r0
    70a4:	add	r4, r0, #12
    70a8:	strd	r6, [sp, #8]
    70ac:	sub	r6, r1, #1
    70b0:	add	r7, r0, #22
    70b4:	str	r8, [sp, #16]
    70b8:	str	lr, [sp, #20]
    70bc:	strb	r3, [r0, #22]
    70c0:	ldrb	r3, [r6, #1]!
    70c4:	mov	r0, r3
    70c8:	strb	r3, [r4], #1
    70cc:	bl	209c <count_bits@plt>
    70d0:	ldrb	r3, [r5, #22]
    70d4:	cmp	r4, r7
    70d8:	add	r0, r3, r0
    70dc:	strb	r0, [r5, #22]
    70e0:	bne	70c0 <btbb_piconet_set_afh_map@@Base+0x28>
    70e4:	mov	r1, #2
    70e8:	mov	r0, r5
    70ec:	bl	21b0 <btbb_piconet_get_flag@plt>
    70f0:	cmp	r0, #0
    70f4:	bne	710c <btbb_piconet_set_afh_map@@Base+0x74>
    70f8:	ldrd	r4, [sp]
    70fc:	ldrd	r6, [sp, #8]
    7100:	ldr	r8, [sp, #16]
    7104:	add	sp, sp, #20
    7108:	pop	{pc}		; (ldr pc, [sp], #4)
    710c:	mov	r0, r5
    7110:	ldrd	r4, [sp]
    7114:	ldrd	r6, [sp, #8]
    7118:	ldr	r8, [sp, #16]
    711c:	ldr	lr, [sp, #20]
    7120:	add	sp, sp, #24
    7124:	b	2270 <get_hop_pattern@plt>

00007128 <single_hop@@Base>:
    7128:	ldr	r3, [r1, #44]	; 0x2c
    712c:	ubfx	ip, r0, #1, #1
    7130:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7134:	mov	r4, r1
    7138:	movw	r5, #65520	; 0xfff0
    713c:	movt	r5, #511	; 0x1ff
    7140:	ldr	r1, [r1, #48]	; 0x30
    7144:	and	r5, r5, r0, asr #3
    7148:	ldr	r2, [r4, #52]	; 0x34
    714c:	eor	r3, r3, r0, asr #21
    7150:	strd	r6, [sp, #8]
    7154:	str	lr, [sp, #20]
    7158:	lsl	r6, ip, #5
    715c:	ldr	lr, [r4, #36]	; 0x24
    7160:	add	r3, r3, r0, lsr #2
    7164:	eor	r1, r1, r0, asr #16
    7168:	sub	ip, r6, ip
    716c:	str	r8, [sp, #16]
    7170:	eor	r2, r2, r0, asr #7
    7174:	and	r3, r3, #31
    7178:	and	r1, r1, #31
    717c:	eor	r1, r1, ip
    7180:	ubfx	r2, r2, #0, #9
    7184:	eor	r0, r3, lr
    7188:	bl	2474 <fast_perm@plt>
    718c:	mov	r7, r0
    7190:	mov	r1, #11
    7194:	mov	r0, r4
    7198:	bl	21b0 <btbb_piconet_get_flag@plt>
    719c:	cmp	r0, #0
    71a0:	beq	71e8 <single_hop@@Base+0xc0>
    71a4:	ldrb	r1, [r4, #22]
    71a8:	ldr	r3, [r4, #40]	; 0x28
    71ac:	udiv	r2, r5, r1
    71b0:	add	r7, r7, r3
    71b4:	mls	r5, r1, r2, r5
    71b8:	add	r6, r5, r6
    71bc:	add	r6, r7, r6
    71c0:	udiv	r7, r6, r1
    71c4:	mls	r6, r1, r7, r6
    71c8:	add	r6, r6, #14
    71cc:	ldr	r0, [r4, r6, lsl #2]
    71d0:	uxtb	r0, r0
    71d4:	ldrd	r4, [sp]
    71d8:	ldrd	r6, [sp, #8]
    71dc:	ldr	r8, [sp, #16]
    71e0:	add	sp, sp, #20
    71e4:	pop	{pc}		; (ldr pc, [sp], #4)
    71e8:	movw	r3, #29865	; 0x74a9
    71ec:	movt	r3, #53092	; 0xcf64
    71f0:	ldr	r0, [r4, #40]	; 0x28
    71f4:	mov	r1, #79	; 0x4f
    71f8:	umull	ip, r2, r3, r5
    71fc:	lsr	r2, r2, #6
    7200:	add	r7, r7, r0
    7204:	mls	r5, r1, r2, r5
    7208:	add	r6, r5, r6
    720c:	add	r7, r7, r6
    7210:	umull	r2, r3, r3, r7
    7214:	lsr	r3, r3, #6
    7218:	mls	r3, r1, r3, r7
    721c:	add	r3, r3, #14
    7220:	ldr	r0, [r4, r3, lsl #2]
    7224:	b	71d0 <single_hop@@Base+0xa8>

00007228 <hop@@Base>:
    7228:	ldr	r3, [r1, #372]	; 0x174
    722c:	ldrb	r0, [r3, r0]
    7230:	bx	lr

00007234 <btbb_init_hop_reversal@@Base>:
    7234:	strd	r4, [sp, #-32]!	; 0xffffffe0
    7238:	mov	r5, r0
    723c:	mov	r0, r1
    7240:	mov	r4, r1
    7244:	strd	r6, [sp, #8]
    7248:	strd	r8, [sp, #16]
    724c:	str	sl, [sp, #24]
    7250:	str	lr, [sp, #28]
    7254:	bl	2270 <get_hop_pattern@plt>
    7258:	cmp	r5, #0
    725c:	movw	r3, #15760	; 0x3d90
    7260:	movt	r3, #3
    7264:	movw	r0, #15728	; 0x3d70
    7268:	movt	r0, #10
    726c:	moveq	r0, r3
    7270:	bl	2288 <malloc@plt>
    7274:	add	r2, r4, #4096	; 0x1000
    7278:	ldr	r1, [r4, #8]
    727c:	ldr	r3, [r2, #1552]	; 0x610
    7280:	ldr	r6, [r2, #1556]	; 0x614
    7284:	cmp	r1, #0
    7288:	str	r0, [r4, #32]
    728c:	ldrb	ip, [r2, #552]	; 0x228
    7290:	ldr	lr, [r4, #372]	; 0x174
    7294:	add	r3, r3, r6
    7298:	and	r3, r3, #63	; 0x3f
    729c:	beq	734c <btbb_init_hop_reversal@@Base+0x118>
    72a0:	movw	r6, #34079	; 0x851f
    72a4:	movt	r6, #20971	; 0x51eb
    72a8:	mov	r1, #0
    72ac:	mov	r7, #25
    72b0:	ldrb	r2, [lr, r3]
    72b4:	add	r8, r2, #24
    72b8:	umull	r9, r2, r6, r8
    72bc:	lsr	r2, r2, #3
    72c0:	mls	r2, r7, r2, r8
    72c4:	add	r2, r2, #26
    72c8:	uxtb	r2, r2
    72cc:	cmp	ip, r2
    72d0:	streq	r3, [r0, r1, lsl #2]
    72d4:	add	r3, r3, #64	; 0x40
    72d8:	addeq	r1, r1, #1
    72dc:	cmn	r3, #-134217727	; 0xf8000001
    72e0:	ble	72b0 <btbb_init_hop_reversal@@Base+0x7c>
    72e4:	mov	r6, #0
    72e8:	mov	r0, r4
    72ec:	str	r1, [r4, #376]	; 0x178
    72f0:	mov	r2, #1
    72f4:	mov	r1, #9
    72f8:	str	r6, [r4, #388]	; 0x184
    72fc:	bl	21d4 <btbb_piconet_set_flag@plt>
    7300:	mov	r2, r6
    7304:	mov	r0, r4
    7308:	mov	r1, #5
    730c:	bl	21d4 <btbb_piconet_set_flag@plt>
    7310:	mov	r2, r5
    7314:	mov	r0, r4
    7318:	mov	r1, #13
    731c:	bl	21d4 <btbb_piconet_set_flag@plt>
    7320:	ldr	r0, [pc, #68]	; 736c <btbb_init_hop_reversal@@Base+0x138>
    7324:	ldr	r1, [r4, #376]	; 0x178
    7328:	add	r0, pc, r0
    732c:	bl	20c0 <printf@plt>
    7330:	ldrd	r6, [sp, #8]
    7334:	ldrd	r8, [sp, #16]
    7338:	ldr	sl, [sp, #24]
    733c:	ldr	r0, [r4, #376]	; 0x178
    7340:	ldrd	r4, [sp]
    7344:	add	sp, sp, #28
    7348:	pop	{pc}		; (ldr pc, [sp], #4)
    734c:	ldrb	r2, [lr, r3]
    7350:	cmp	r2, ip
    7354:	streq	r3, [r0, r1, lsl #2]
    7358:	add	r3, r3, #64	; 0x40
    735c:	addeq	r1, r1, #1
    7360:	cmn	r3, #-134217727	; 0xf8000001
    7364:	ble	734c <btbb_init_hop_reversal@@Base+0x118>
    7368:	b	72e4 <btbb_init_hop_reversal@@Base+0xb0>
    736c:	muleq	r0, r8, sl

00007370 <btbb_winnow@@Base>:
    7370:	ldr	r1, [r0, #376]	; 0x178
    7374:	strd	r4, [sp, #-36]!	; 0xffffffdc
    7378:	ldr	r2, [r0, #380]	; 0x17c
    737c:	ldr	r3, [r0, #388]	; 0x184
    7380:	mov	r5, r1
    7384:	strd	r6, [sp, #8]
    7388:	strd	r8, [sp, #16]
    738c:	strd	sl, [sp, #24]
    7390:	str	lr, [sp, #32]
    7394:	sub	sp, sp, #12
    7398:	cmp	r2, r3
    739c:	ble	74a4 <btbb_winnow@@Base+0x134>
    73a0:	mov	r4, r0
    73a4:	movw	r2, #4648	; 0x1228
    73a8:	add	r0, r3, #162	; 0xa2
    73ac:	cmp	r1, #0
    73b0:	add	r3, r4, r3
    73b4:	ldr	r6, [r4, r0, lsl #2]
    73b8:	ldrb	r7, [r3, r2]
    73bc:	ble	7490 <btbb_winnow@@Base+0x120>
    73c0:	movw	r3, #34079	; 0x851f
    73c4:	movt	r3, #20971	; 0x51eb
    73c8:	str	r3, [sp]
    73cc:	ldr	r3, [pc, #452]	; 7598 <btbb_winnow@@Base+0x228>
    73d0:	add	r3, pc, r3
    73d4:	str	r3, [sp, #4]
    73d8:	ldr	r9, [r4, #8]
    73dc:	mov	r5, #0
    73e0:	mov	r0, r5
    73e4:	ldr	ip, [r4, #32]
    73e8:	ldr	sl, [r4, #372]	; 0x174
    73ec:	sub	r8, ip, #4
    73f0:	ldr	r2, [r8, #4]!
    73f4:	cmp	r9, #0
    73f8:	add	r3, r2, r6
    73fc:	bic	r3, r3, #-134217728	; 0xf8000000
    7400:	ldrb	r3, [sl, r3]
    7404:	beq	7428 <btbb_winnow@@Base+0xb8>
    7408:	add	lr, r3, #24
    740c:	ldr	r3, [sp]
    7410:	umull	fp, r3, r3, lr
    7414:	mov	fp, #25
    7418:	lsr	r3, r3, #3
    741c:	mls	r3, fp, r3, lr
    7420:	add	r3, r3, #26
    7424:	uxtb	r3, r3
    7428:	cmp	r3, r7
    742c:	beq	74c4 <btbb_winnow@@Base+0x154>
    7430:	add	r0, r0, #1
    7434:	cmp	r0, r1
    7438:	blt	73f0 <btbb_winnow@@Base+0x80>
    743c:	cmp	r5, #1
    7440:	str	r5, [r4, #376]	; 0x178
    7444:	beq	753c <btbb_winnow@@Base+0x1cc>
    7448:	cmp	r5, #0
    744c:	beq	7498 <btbb_winnow@@Base+0x128>
    7450:	ldr	r1, [r4, #380]	; 0x17c
    7454:	ldr	r3, [r4, #388]	; 0x184
    7458:	cmp	r1, #0
    745c:	bgt	74e8 <btbb_winnow@@Base+0x178>
    7460:	add	r2, r3, #1
    7464:	cmp	r2, r1
    7468:	str	r2, [r4, #388]	; 0x184
    746c:	bge	74a4 <btbb_winnow@@Base+0x134>
    7470:	ldr	r1, [r4, #376]	; 0x178
    7474:	add	r3, r3, #163	; 0xa3
    7478:	add	r2, r4, r2
    747c:	movw	r0, #4648	; 0x1228
    7480:	ldrb	r7, [r2, r0]
    7484:	ldr	r6, [r4, r3, lsl #2]
    7488:	cmp	r1, #0
    748c:	bgt	73d8 <btbb_winnow@@Base+0x68>
    7490:	mov	r3, #0
    7494:	str	r3, [r4, #376]	; 0x178
    7498:	mov	r0, r4
    749c:	mov	r5, #0
    74a0:	bl	6074 <btbb_piconet_get_flag@@Base+0x18>
    74a4:	mov	r0, r5
    74a8:	add	sp, sp, #12
    74ac:	ldrd	r4, [sp]
    74b0:	ldrd	r6, [sp, #8]
    74b4:	ldrd	r8, [sp, #16]
    74b8:	ldrd	sl, [sp, #24]
    74bc:	add	sp, sp, #32
    74c0:	pop	{pc}		; (ldr pc, [sp], #4)
    74c4:	str	r2, [ip, r5, lsl #2]
    74c8:	add	r0, r0, #1
    74cc:	add	r3, r5, #1
    74d0:	ldr	r1, [r4, #376]	; 0x178
    74d4:	mov	r5, r3
    74d8:	cmp	r1, r0
    74dc:	ble	7530 <btbb_winnow@@Base+0x1c0>
    74e0:	ldr	r9, [r4, #8]
    74e4:	b	73f0 <btbb_winnow@@Base+0x80>
    74e8:	sub	r2, r3, #1
    74ec:	movw	ip, #4648	; 0x1228
    74f0:	add	r3, r3, #161	; 0xa1
    74f4:	add	r2, r4, r2
    74f8:	mov	r1, #12
    74fc:	mov	r0, r4
    7500:	ldrb	r9, [r2, ip]
    7504:	ldr	r8, [r4, r3, lsl #2]
    7508:	bl	21b0 <btbb_piconet_get_flag@plt>
    750c:	cmp	r0, #0
    7510:	bne	7524 <btbb_winnow@@Base+0x1b4>
    7514:	add	r8, r8, #1
    7518:	cmp	r8, r6
    751c:	cmpeq	r9, r7
    7520:	beq	757c <btbb_winnow@@Base+0x20c>
    7524:	ldr	r1, [r4, #380]	; 0x17c
    7528:	ldr	r3, [r4, #388]	; 0x184
    752c:	b	7460 <btbb_winnow@@Base+0xf0>
    7530:	cmp	r3, #1
    7534:	str	r3, [r4, #376]	; 0x178
    7538:	bne	7450 <btbb_winnow@@Base+0xe0>
    753c:	add	r2, r4, #4096	; 0x1000
    7540:	ldr	r1, [ip]
    7544:	mov	r5, #1
    7548:	ldr	r3, [r2, #1556]	; 0x614
    754c:	ldr	r0, [pc, #72]	; 759c <btbb_winnow@@Base+0x22c>
    7550:	lsl	r3, r3, r5
    7554:	rsb	r3, r3, r1, lsl r5
    7558:	add	r0, pc, r0
    755c:	str	r3, [r2, #1552]	; 0x610
    7560:	ldr	r1, [ip]
    7564:	bl	20c0 <printf@plt>
    7568:	mov	r0, r4
    756c:	mov	r2, r5
    7570:	mov	r1, #5
    7574:	bl	21d4 <btbb_piconet_set_flag@plt>
    7578:	b	74a4 <btbb_winnow@@Base+0x134>
    757c:	mov	r0, r4
    7580:	mov	r2, #1
    7584:	mov	r1, #12
    7588:	bl	21d4 <btbb_piconet_set_flag@plt>
    758c:	ldr	r0, [sp, #4]
    7590:	bl	227c <puts@plt>
    7594:	b	7524 <btbb_winnow@@Base+0x1b4>
    7598:	andeq	ip, r0, ip, lsr #20
    759c:	andeq	ip, r0, r8, lsl #17

000075a0 <btbb_uap_from_header@@Base>:
    75a0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    75a4:	mov	r4, r1
    75a8:	mov	r1, #10
    75ac:	strd	r6, [sp, #8]
    75b0:	mov	r7, r0
    75b4:	mov	r0, r4
    75b8:	strd	r8, [sp, #16]
    75bc:	strd	sl, [sp, #24]
    75c0:	str	lr, [sp, #32]
    75c4:	sub	sp, sp, #12
    75c8:	ldr	sl, [r7, #2816]	; 0xb00
    75cc:	bl	21b0 <btbb_piconet_get_flag@plt>
    75d0:	cmp	r0, #0
    75d4:	mov	r0, r4
    75d8:	addeq	r3, r4, #4096	; 0x1000
    75dc:	streq	sl, [r3, #1556]	; 0x614
    75e0:	ldrb	r1, [r7, #8]
    75e4:	bl	21f8 <btbb_piconet_set_channel_seen@plt>
    75e8:	ldr	r3, [r4, #380]	; 0x17c
    75ec:	cmp	r3, #1000	; 0x3e8
    75f0:	bge	7728 <btbb_uap_from_header@@Base+0x188>
    75f4:	add	fp, r4, #4096	; 0x1000
    75f8:	add	ip, r3, #162	; 0xa2
    75fc:	ldr	r2, [fp, #1556]	; 0x614
    7600:	add	r0, r4, r3
    7604:	movw	r1, #4648	; 0x1228
    7608:	add	r3, r3, #1
    760c:	mov	r5, #0
    7610:	add	r6, r4, #388	; 0x184
    7614:	str	r5, [sp]
    7618:	str	r5, [sp, #4]
    761c:	sub	r2, sl, r2
    7620:	str	r2, [r4, ip, lsl #2]
    7624:	ldrb	r2, [r7, #8]
    7628:	strb	r2, [r0, r1]
    762c:	ldr	r2, [r4, #384]	; 0x180
    7630:	str	r3, [r4, #380]	; 0x17c
    7634:	add	r3, r2, #1
    7638:	str	r3, [r4, #384]	; 0x180
    763c:	b	76a0 <btbb_uap_from_header@@Base+0x100>
    7640:	ldr	r9, [fp, #1556]	; 0x614
    7644:	mov	r1, r7
    7648:	sub	r9, sl, r9
    764c:	add	r9, r9, r5
    7650:	and	r9, r9, #63	; 0x3f
    7654:	mov	r0, r9
    7658:	bl	2480 <try_clock@plt>
    765c:	mov	r8, r0
    7660:	mov	r1, #10
    7664:	mov	r0, r4
    7668:	bl	21b0 <btbb_piconet_get_flag@plt>
    766c:	cmp	r0, #0
    7670:	beq	76c4 <btbb_uap_from_header@@Base+0x124>
    7674:	ldr	r3, [r6]
    7678:	cmp	r8, r3
    767c:	beq	76c4 <btbb_uap_from_header@@Base+0x124>
    7680:	mov	r1, #2
    7684:	mov	r0, r4
    7688:	bl	21b0 <btbb_piconet_get_flag@plt>
    768c:	mvn	r3, #0
    7690:	str	r3, [r6]
    7694:	add	r5, r5, #1
    7698:	cmp	r5, #64	; 0x40
    769c:	beq	7764 <btbb_uap_from_header@@Base+0x1c4>
    76a0:	ldr	r3, [r6, #4]!
    76a4:	cmp	r3, #0
    76a8:	bge	7640 <btbb_uap_from_header@@Base+0xa0>
    76ac:	mov	r1, #10
    76b0:	mov	r0, r4
    76b4:	bl	21b0 <btbb_piconet_get_flag@plt>
    76b8:	cmp	r0, #0
    76bc:	beq	7640 <btbb_uap_from_header@@Base+0xa0>
    76c0:	b	7694 <btbb_uap_from_header@@Base+0xf4>
    76c4:	mov	r0, r9
    76c8:	mov	r1, r7
    76cc:	bl	2240 <crc_check@plt>
    76d0:	mov	r9, r0
    76d4:	mov	r1, #2
    76d8:	mov	r0, r4
    76dc:	bl	21b0 <btbb_piconet_get_flag@plt>
    76e0:	cmp	r0, #0
    76e4:	beq	76f4 <btbb_uap_from_header@@Base+0x154>
    76e8:	ldrb	r3, [r4, #28]
    76ec:	cmp	r3, r8
    76f0:	bne	768c <btbb_uap_from_header@@Base+0xec>
    76f4:	add	r9, r9, #1
    76f8:	cmp	r9, #3
    76fc:	addls	pc, pc, r9, lsl #2
    7700:	b	7830 <btbb_uap_from_header@@Base+0x290>
    7704:	b	768c <btbb_uap_from_header@@Base+0xec>
    7708:	b	768c <btbb_uap_from_header@@Base+0xec>
    770c:	b	7714 <btbb_uap_from_header@@Base+0x174>
    7710:	b	7714 <btbb_uap_from_header@@Base+0x174>
    7714:	ldr	r3, [sp]
    7718:	str	r8, [r6]
    771c:	add	r3, r3, #1
    7720:	stm	sp, {r3, r5}
    7724:	b	7694 <btbb_uap_from_header@@Base+0xf4>
    7728:	ldr	r0, [pc, #360]	; 7898 <btbb_uap_from_header@@Base+0x2f8>
    772c:	mov	r3, #0
    7730:	str	r3, [sp]
    7734:	add	r0, pc, r0
    7738:	bl	227c <puts@plt>
    773c:	mov	r0, r4
    7740:	bl	6074 <btbb_piconet_get_flag@@Base+0x18>
    7744:	ldr	r0, [sp]
    7748:	add	sp, sp, #12
    774c:	ldrd	r4, [sp]
    7750:	ldrd	r6, [sp, #8]
    7754:	ldrd	r8, [sp, #16]
    7758:	ldrd	sl, [sp, #24]
    775c:	add	sp, sp, #32
    7760:	pop	{pc}		; (ldr pc, [sp], #4)
    7764:	mov	r2, #1
    7768:	mov	r1, #10
    776c:	mov	r0, r4
    7770:	bl	21d4 <btbb_piconet_set_flag@plt>
    7774:	ldr	r3, [sp]
    7778:	cmp	r3, #1
    777c:	beq	779c <btbb_uap_from_header@@Base+0x1fc>
    7780:	cmp	r3, #0
    7784:	movne	r3, #0
    7788:	strne	r3, [sp]
    778c:	bne	7744 <btbb_uap_from_header@@Base+0x1a4>
    7790:	mov	r0, r4
    7794:	bl	6074 <btbb_piconet_get_flag@@Base+0x18>
    7798:	b	7744 <btbb_uap_from_header@@Base+0x1a4>
    779c:	ldr	r5, [sp, #4]
    77a0:	mov	r1, #2
    77a4:	mov	r0, r4
    77a8:	ldr	r3, [fp, #1556]	; 0x614
    77ac:	sub	r3, r5, r3
    77b0:	and	r3, r3, #63	; 0x3f
    77b4:	str	r3, [fp, #1552]	; 0x610
    77b8:	bl	21b0 <btbb_piconet_get_flag@plt>
    77bc:	cmp	r0, #0
    77c0:	bne	7810 <btbb_uap_from_header@@Base+0x270>
    77c4:	ldr	r0, [pc, #208]	; 789c <btbb_uap_from_header@@Base+0x2fc>
    77c8:	add	r5, r5, #98	; 0x62
    77cc:	ldr	r1, [r4, r5, lsl #2]
    77d0:	ldr	r2, [r4, #384]	; 0x180
    77d4:	add	r0, pc, r0
    77d8:	bl	20c0 <printf@plt>
    77dc:	ldr	r3, [r4, r5, lsl #2]
    77e0:	mov	r2, #1
    77e4:	mov	r1, #4
    77e8:	mov	r0, r4
    77ec:	strb	r3, [r4, #28]
    77f0:	bl	21d4 <btbb_piconet_set_flag@plt>
    77f4:	mov	r2, #1
    77f8:	mov	r1, #2
    77fc:	mov	r0, r4
    7800:	bl	21d4 <btbb_piconet_set_flag@plt>
    7804:	mov	r3, #0
    7808:	str	r3, [r4, #384]	; 0x180
    780c:	b	7744 <btbb_uap_from_header@@Base+0x1a4>
    7810:	ldr	r0, [pc, #136]	; 78a0 <btbb_uap_from_header@@Base+0x300>
    7814:	ldr	r3, [sp, #4]
    7818:	ldr	r2, [r4, #384]	; 0x180
    781c:	add	r0, pc, r0
    7820:	ldr	r1, [fp, #1552]	; 0x610
    7824:	add	r5, r3, #98	; 0x62
    7828:	bl	20c0 <printf@plt>
    782c:	b	77dc <btbb_uap_from_header@@Base+0x23c>
    7830:	ldr	r3, [fp, #1556]	; 0x614
    7834:	mov	r1, #2
    7838:	mov	r0, r4
    783c:	sub	r3, r5, r3
    7840:	and	r3, r3, #63	; 0x3f
    7844:	str	r3, [fp, #1552]	; 0x610
    7848:	bl	21b0 <btbb_piconet_get_flag@plt>
    784c:	cmp	r0, #0
    7850:	bne	7880 <btbb_uap_from_header@@Base+0x2e0>
    7854:	ldr	r0, [pc, #72]	; 78a4 <btbb_uap_from_header@@Base+0x304>
    7858:	mov	r1, r8
    785c:	ldr	r2, [r4, #384]	; 0x180
    7860:	add	r0, pc, r0
    7864:	bl	20c0 <printf@plt>
    7868:	mov	r2, #1
    786c:	mov	r1, #4
    7870:	strb	r8, [r4, #28]
    7874:	mov	r0, r4
    7878:	str	r2, [sp]
    787c:	b	77f0 <btbb_uap_from_header@@Base+0x250>
    7880:	ldr	r0, [pc, #32]	; 78a8 <btbb_uap_from_header@@Base+0x308>
    7884:	ldr	r2, [r4, #384]	; 0x180
    7888:	ldr	r1, [fp, #1552]	; 0x610
    788c:	add	r0, pc, r0
    7890:	bl	20c0 <printf@plt>
    7894:	b	7868 <btbb_uap_from_header@@Base+0x2c8>
    7898:	andeq	ip, r0, ip, ror #13
    789c:	andeq	ip, r0, r4, ror #13
    78a0:	andeq	ip, r0, r8, asr #13
    78a4:	andeq	ip, r0, r8, ror #11
    78a8:	strdeq	ip, [r0], -r4

000078ac <try_hop@@Base>:
    78ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
    78b0:	mov	r4, r1
    78b4:	mov	r5, r0
    78b8:	strd	r6, [sp, #8]
    78bc:	str	r8, [sp, #16]
    78c0:	str	lr, [sp, #20]
    78c4:	ldrb	r6, [r1, #28]
    78c8:	bl	224c <btbb_decode@plt>
    78cc:	mov	r0, r4
    78d0:	mov	r1, #9
    78d4:	bl	21b0 <btbb_piconet_get_flag@plt>
    78d8:	cmp	r0, #0
    78dc:	beq	7964 <try_hop@@Base+0xb8>
    78e0:	add	r7, r4, #4096	; 0x1000
    78e4:	ldr	r3, [r4, #380]	; 0x17c
    78e8:	movw	r1, #4648	; 0x1228
    78ec:	ldr	lr, [r7, #1556]	; 0x614
    78f0:	ldr	r2, [r5, #2816]	; 0xb00
    78f4:	add	r0, r3, #162	; 0xa2
    78f8:	add	ip, r4, r3
    78fc:	add	r3, r3, #1
    7900:	sub	r2, r2, lr
    7904:	str	r2, [r4, r0, lsl #2]
    7908:	mov	r0, r4
    790c:	ldrb	r2, [r5, #8]
    7910:	strb	r2, [ip, r1]
    7914:	ldr	r2, [r4, #384]	; 0x180
    7918:	str	r3, [r4, #380]	; 0x17c
    791c:	add	r3, r2, #1
    7920:	str	r3, [r4, #384]	; 0x180
    7924:	bl	2258 <btbb_winnow@plt>
    7928:	mov	r1, #5
    792c:	mov	r0, r4
    7930:	bl	21b0 <btbb_piconet_get_flag@plt>
    7934:	cmp	r0, #0
    7938:	bne	79fc <try_hop@@Base+0x150>
    793c:	mov	r1, #2
    7940:	mov	r0, r4
    7944:	bl	21b0 <btbb_piconet_get_flag@plt>
    7948:	cmp	r0, #0
    794c:	beq	79bc <try_hop@@Base+0x110>
    7950:	ldrd	r4, [sp]
    7954:	ldrd	r6, [sp, #8]
    7958:	ldr	r8, [sp, #16]
    795c:	add	sp, sp, #20
    7960:	pop	{pc}		; (ldr pc, [sp], #4)
    7964:	mov	r1, #4
    7968:	mov	r0, r4
    796c:	bl	21b0 <btbb_piconet_get_flag@plt>
    7970:	subs	r7, r0, #0
    7974:	mov	r1, r4
    7978:	mov	r0, r5
    797c:	beq	79d4 <try_hop@@Base+0x128>
    7980:	bl	2138 <btbb_uap_from_header@plt>
    7984:	mov	r1, #5
    7988:	mov	r0, r4
    798c:	bl	21b0 <btbb_piconet_get_flag@plt>
    7990:	cmp	r0, #0
    7994:	beq	793c <try_hop@@Base+0x90>
    7998:	ldr	r0, [pc, #148]	; 7a34 <try_hop@@Base+0x188>
    799c:	add	r0, pc, r0
    79a0:	bl	227c <puts@plt>
    79a4:	ldr	r0, [pc, #140]	; 7a38 <try_hop@@Base+0x18c>
    79a8:	add	r3, r4, #4096	; 0x1000
    79ac:	ldr	r1, [r3, #1552]	; 0x610
    79b0:	add	r0, pc, r0
    79b4:	bl	20c0 <printf@plt>
    79b8:	b	793c <try_hop@@Base+0x90>
    79bc:	mov	r2, #1
    79c0:	mov	r1, #2
    79c4:	mov	r0, r4
    79c8:	bl	21d4 <btbb_piconet_set_flag@plt>
    79cc:	strb	r6, [r4, #28]
    79d0:	b	7950 <try_hop@@Base+0xa4>
    79d4:	bl	2138 <btbb_uap_from_header@plt>
    79d8:	cmp	r0, #0
    79dc:	beq	793c <try_hop@@Base+0x90>
    79e0:	ldrb	r3, [r4, #28]
    79e4:	cmp	r3, r6
    79e8:	beq	7a1c <try_hop@@Base+0x170>
    79ec:	ldr	r0, [pc, #72]	; 7a3c <try_hop@@Base+0x190>
    79f0:	add	r0, pc, r0
    79f4:	bl	227c <puts@plt>
    79f8:	b	793c <try_hop@@Base+0x90>
    79fc:	ldr	r0, [pc, #60]	; 7a40 <try_hop@@Base+0x194>
    7a00:	add	r0, pc, r0
    7a04:	bl	227c <puts@plt>
    7a08:	ldr	r0, [pc, #52]	; 7a44 <try_hop@@Base+0x198>
    7a0c:	ldr	r1, [r7, #1552]	; 0x610
    7a10:	add	r0, pc, r0
    7a14:	bl	20c0 <printf@plt>
    7a18:	b	793c <try_hop@@Base+0x90>
    7a1c:	mov	r0, r7
    7a20:	mov	r1, r4
    7a24:	bl	248c <btbb_init_hop_reversal@plt>
    7a28:	mov	r0, r4
    7a2c:	bl	2258 <btbb_winnow@plt>
    7a30:	b	793c <try_hop@@Base+0x90>
    7a34:	andeq	ip, r0, r4, ror r5
    7a38:	andeq	ip, r0, ip, ror #10
    7a3c:	andeq	ip, r0, r0, asr #10
    7a40:	andeq	ip, r0, r0, lsl r5
    7a44:	andeq	ip, r0, ip, lsl #10

00007a48 <btbb_print_afh_map@@Base>:
    7a48:	mov	r1, r0
    7a4c:	push	{lr}		; (str lr, [sp, #-4]!)
    7a50:	sub	sp, sp, #36	; 0x24
    7a54:	ldrb	ip, [r1, #21]
    7a58:	ldrb	r3, [r1, #20]
    7a5c:	ldrb	r2, [r1, #19]
    7a60:	str	ip, [sp, #24]
    7a64:	ldrb	ip, [r1, #18]
    7a68:	str	r3, [sp, #20]
    7a6c:	ldrb	r3, [r1, #17]
    7a70:	str	r2, [sp, #16]
    7a74:	ldrb	r2, [r1, #16]
    7a78:	str	ip, [sp, #12]
    7a7c:	ldrb	ip, [r1, #15]
    7a80:	str	r3, [sp, #8]
    7a84:	ldr	r0, [pc, #32]	; 7aac <btbb_print_afh_map@@Base+0x64>
    7a88:	ldrb	r3, [r1, #14]
    7a8c:	str	r2, [sp, #4]
    7a90:	ldrb	r2, [r1, #13]
    7a94:	str	ip, [sp]
    7a98:	add	r0, pc, r0
    7a9c:	ldrb	r1, [r1, #12]
    7aa0:	bl	20c0 <printf@plt>
    7aa4:	add	sp, sp, #36	; 0x24
    7aa8:	pop	{pc}		; (ldr pc, [sp], #4)
    7aac:			; <UNDEFINED> instruction: 0x0000c4b0

00007ab0 <get_piconet@@Base>:
    7ab0:	ldr	r3, [pc, #1252]	; 7f9c <get_piconet@@Base+0x4ec>
    7ab4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    7ab8:	add	r3, pc, r3
    7abc:	ldr	r1, [r3, #8]
    7ac0:	strd	r6, [sp, #8]
    7ac4:	strd	r8, [sp, #16]
    7ac8:	strd	sl, [sp, #24]
    7acc:	str	lr, [sp, #32]
    7ad0:	sub	sp, sp, #20
    7ad4:	cmp	r1, #0
    7ad8:	str	r0, [sp, #12]
    7adc:	beq	7c38 <get_piconet@@Base+0x188>
    7ae0:	ldrb	r0, [sp, #12]
    7ae4:	movw	r3, #16653	; 0x410d
    7ae8:	movt	r3, #274	; 0x112
    7aec:	movw	lr, #63341	; 0xf76d
    7af0:	movt	lr, #7
    7af4:	ldrb	r4, [sp, #15]
    7af8:	movw	r2, #47814	; 0xbac6
    7afc:	movt	r2, #40777	; 0x9f49
    7b00:	ldrb	ip, [sp, #14]
    7b04:	add	r3, r0, r3
    7b08:	ldrb	r0, [sp, #13]
    7b0c:	add	r4, r3, r4, lsl #24
    7b10:	movw	r3, #48883	; 0xbef3
    7b14:	movt	r3, #65261	; 0xfeed
    7b18:	ldr	r1, [r1, #8]
    7b1c:	add	r4, r4, ip, lsl #16
    7b20:	add	r4, r4, r0, lsl #8
    7b24:	eor	lr, lr, r4
    7b28:	ldm	r1, {r0, ip}
    7b2c:	sub	r2, r2, lr
    7b30:	sub	r3, r3, lr
    7b34:	eor	r2, r2, lr, lsl #8
    7b38:	sub	r3, r3, r2
    7b3c:	sub	lr, lr, r2
    7b40:	eor	r3, r3, r2, lsr #13
    7b44:	sub	ip, ip, #1
    7b48:	sub	lr, lr, r3
    7b4c:	sub	r2, r2, r3
    7b50:	eor	lr, lr, r3, lsr #12
    7b54:	sub	r2, r2, lr
    7b58:	sub	r3, r3, lr
    7b5c:	eor	r2, r2, lr, lsl #16
    7b60:	sub	r3, r3, r2
    7b64:	sub	lr, lr, r2
    7b68:	eor	r3, r3, r2, lsr #5
    7b6c:	sub	lr, lr, r3
    7b70:	sub	r2, r2, r3
    7b74:	eor	lr, lr, r3, lsr #3
    7b78:	sub	r2, r2, lr
    7b7c:	sub	r3, r3, lr
    7b80:	eor	r2, r2, lr, lsl #10
    7b84:	sub	r3, r3, r2
    7b88:	eor	r3, r3, r2, lsr #15
    7b8c:	and	r3, r3, ip
    7b90:	add	r3, r3, r3, lsl #1
    7b94:	ldr	r3, [r0, r3, lsl #2]
    7b98:	cmp	r3, #0
    7b9c:	beq	7c38 <get_piconet@@Base+0x188>
    7ba0:	ldr	r2, [r1, #20]
    7ba4:	rsb	r2, r2, #0
    7ba8:	b	7bb8 <get_piconet@@Base+0x108>
    7bac:	ldr	r3, [r3, #24]
    7bb0:	cmp	r3, #0
    7bb4:	beq	7c38 <get_piconet@@Base+0x188>
    7bb8:	adds	r3, r3, r2
    7bbc:	beq	7c38 <get_piconet@@Base+0x188>
    7bc0:	ldr	r1, [r3, #32]
    7bc4:	cmp	r1, #4
    7bc8:	bne	7bac <get_piconet@@Base+0xfc>
    7bcc:	ldr	r1, [r3, #28]
    7bd0:	ldrb	r0, [sp, #12]
    7bd4:	ldrb	ip, [r1]
    7bd8:	cmp	ip, r0
    7bdc:	bne	7bac <get_piconet@@Base+0xfc>
    7be0:	ldrb	ip, [r1, #1]
    7be4:	add	r1, r1, #1
    7be8:	ldrb	r0, [sp, #13]
    7bec:	cmp	ip, r0
    7bf0:	bne	7bac <get_piconet@@Base+0xfc>
    7bf4:	ldrb	ip, [r1, #1]!
    7bf8:	ldrb	r0, [sp, #14]
    7bfc:	cmp	ip, r0
    7c00:	bne	7bac <get_piconet@@Base+0xfc>
    7c04:	ldrb	r0, [r1, #1]
    7c08:	ldrb	r1, [sp, #15]
    7c0c:	cmp	r0, r1
    7c10:	bne	7bac <get_piconet@@Base+0xfc>
    7c14:	ldr	r7, [r3, #4]
    7c18:	mov	r0, r7
    7c1c:	add	sp, sp, #20
    7c20:	ldrd	r4, [sp]
    7c24:	ldrd	r6, [sp, #8]
    7c28:	ldrd	r8, [sp, #16]
    7c2c:	ldrd	sl, [sp, #24]
    7c30:	add	sp, sp, #32
    7c34:	pop	{pc}		; (ldr pc, [sp], #4)
    7c38:	bl	2084 <btbb_piconet_new@plt>
    7c3c:	ldr	r4, [sp, #12]
    7c40:	mov	r7, r0
    7c44:	mov	r1, r4
    7c48:	bl	2498 <btbb_init_piconet@plt>
    7c4c:	mov	r0, #40	; 0x28
    7c50:	bl	2288 <malloc@plt>
    7c54:	ldr	r3, [pc, #836]	; 7fa0 <get_piconet@@Base+0x4f0>
    7c58:	mov	r1, #0
    7c5c:	mov	r6, r0
    7c60:	mov	r2, #4
    7c64:	stm	r0, {r4, r7}
    7c68:	str	r1, [r0, #16]
    7c6c:	str	r0, [r6, #28]
    7c70:	str	r2, [r0, #32]
    7c74:	add	r3, pc, r3
    7c78:	ldr	r1, [r3, #8]
    7c7c:	cmp	r1, #0
    7c80:	beq	7f04 <get_piconet@@Base+0x454>
    7c84:	ldr	r5, [r1, #8]
    7c88:	add	r4, r0, #8
    7c8c:	ldr	r3, [r5, #16]
    7c90:	ldr	r2, [r5, #20]
    7c94:	str	r0, [r3, #8]
    7c98:	sub	r3, r3, r2
    7c9c:	str	r3, [r0, #12]
    7ca0:	str	r4, [r5, #16]
    7ca4:	ldr	r2, [r5, #12]
    7ca8:	movw	r8, #16653	; 0x410d
    7cac:	movt	r8, #274	; 0x112
    7cb0:	movw	ip, #63341	; 0xf76d
    7cb4:	movt	ip, #7
    7cb8:	movw	lr, #47814	; 0xbac6
    7cbc:	movt	lr, #40777	; 0x9f49
    7cc0:	movw	r3, #48883	; 0xbef3
    7cc4:	movt	r3, #65261	; 0xfeed
    7cc8:	mov	r0, #0
    7ccc:	add	r2, r2, #1
    7cd0:	str	r2, [r5, #12]
    7cd4:	ldrb	r2, [r6]
    7cd8:	str	r5, [r6, #8]
    7cdc:	ldrb	r9, [r6, #3]
    7ce0:	ldr	r1, [r1, #8]
    7ce4:	add	r8, r2, r8
    7ce8:	ldrb	r2, [r6, #2]
    7cec:	add	r8, r8, r9, lsl #24
    7cf0:	ldrb	r9, [r6, #1]
    7cf4:	add	r8, r8, r2, lsl #16
    7cf8:	ldm	r1, {r1, r2}
    7cfc:	add	r8, r8, r9, lsl #8
    7d00:	eor	ip, ip, r8
    7d04:	sub	lr, lr, ip
    7d08:	sub	r3, r3, ip
    7d0c:	eor	lr, lr, ip, lsl #8
    7d10:	sub	r2, r2, #1
    7d14:	sub	r3, r3, lr
    7d18:	sub	ip, ip, lr
    7d1c:	eor	r3, r3, lr, lsr #13
    7d20:	sub	ip, ip, r3
    7d24:	sub	lr, lr, r3
    7d28:	eor	ip, ip, r3, lsr #12
    7d2c:	sub	lr, lr, ip
    7d30:	sub	r3, r3, ip
    7d34:	eor	lr, lr, ip, lsl #16
    7d38:	sub	r3, r3, lr
    7d3c:	sub	ip, ip, lr
    7d40:	eor	r3, r3, lr, lsr #5
    7d44:	sub	ip, ip, r3
    7d48:	sub	lr, lr, r3
    7d4c:	eor	ip, ip, r3, lsr #3
    7d50:	sub	lr, lr, ip
    7d54:	sub	r3, r3, ip
    7d58:	eor	ip, lr, ip, lsl #10
    7d5c:	sub	r3, r3, ip
    7d60:	eor	r3, r3, ip, lsr #15
    7d64:	and	r2, r2, r3
    7d68:	add	r2, r2, r2, lsl #1
    7d6c:	str	r3, [r6, #36]	; 0x24
    7d70:	lsl	r3, r2, #2
    7d74:	add	r2, r1, r3
    7d78:	ldr	lr, [r1, r3]
    7d7c:	ldr	ip, [r2, #4]
    7d80:	cmp	lr, r0
    7d84:	add	ip, ip, #1
    7d88:	str	ip, [r2, #4]
    7d8c:	ldr	r2, [r2, #8]
    7d90:	str	r0, [r6, #20]
    7d94:	str	lr, [r6, #24]
    7d98:	strne	r4, [lr, #12]
    7d9c:	str	r4, [r1, r3]
    7da0:	add	r3, r2, #1
    7da4:	add	r3, r3, r3, lsl #2
    7da8:	cmp	ip, r3, lsl #1
    7dac:	bcc	7c18 <get_piconet@@Base+0x168>
    7db0:	ldr	r3, [r5, #36]	; 0x24
    7db4:	cmp	r3, #1
    7db8:	beq	7c18 <get_piconet@@Base+0x168>
    7dbc:	ldr	r0, [r5, #4]
    7dc0:	mov	r1, #1
    7dc4:	add	r0, r0, r0, lsl r1
    7dc8:	lsl	r0, r0, #3
    7dcc:	bl	206c <calloc@plt>
    7dd0:	subs	r4, r0, #0
    7dd4:	beq	7f94 <get_piconet@@Base+0x4e4>
    7dd8:	ldmib	r5, {r1, r2}
    7ddc:	mov	r9, #0
    7de0:	ldr	r0, [r5, #12]
    7de4:	lsl	r3, r1, #1
    7de8:	add	r2, r2, #1
    7dec:	sub	sl, r3, #1
    7df0:	tst	r0, sl
    7df4:	movne	r8, #1
    7df8:	moveq	r8, r9
    7dfc:	add	r8, r8, r0, lsr r2
    7e00:	cmp	r1, r9
    7e04:	strd	r8, [r5, #24]
    7e08:	beq	7f88 <get_piconet@@Base+0x4d8>
    7e0c:	ldr	fp, [r5]
    7e10:	add	r3, r3, r1
    7e14:	add	r3, fp, r3, lsl #2
    7e18:	str	r6, [sp, #8]
    7e1c:	str	fp, [sp, #4]
    7e20:	mov	r6, r3
    7e24:	ldr	r2, [fp]
    7e28:	cmp	r2, #0
    7e2c:	bne	7e48 <get_piconet@@Base+0x398>
    7e30:	b	7ea4 <get_piconet@@Base+0x3f4>
    7e34:	cmp	ip, #0
    7e38:	str	r2, [r1, #12]
    7e3c:	str	r2, [r4, r3, lsl #2]
    7e40:	beq	7ea4 <get_piconet@@Base+0x3f4>
    7e44:	mov	r2, ip
    7e48:	ldr	ip, [r2, #16]
    7e4c:	ldr	r3, [r2, #28]
    7e50:	and	r3, r3, sl
    7e54:	add	r3, r3, r3, lsl #1
    7e58:	add	r0, r4, r3, lsl #2
    7e5c:	ldr	r1, [r0, #4]
    7e60:	add	r1, r1, #1
    7e64:	cmp	r8, r1
    7e68:	str	r1, [r0, #4]
    7e6c:	bcs	7e84 <get_piconet@@Base+0x3d4>
    7e70:	udiv	r1, r1, r8
    7e74:	ldr	lr, [r5, #28]
    7e78:	add	lr, lr, #1
    7e7c:	str	lr, [r5, #28]
    7e80:	str	r1, [r0, #8]
    7e84:	ldr	r1, [r4, r3, lsl #2]
    7e88:	str	r9, [r2, #12]
    7e8c:	cmp	r1, #0
    7e90:	str	r1, [r2, #16]
    7e94:	bne	7e34 <get_piconet@@Base+0x384>
    7e98:	cmp	ip, #0
    7e9c:	str	r2, [r4, r3, lsl #2]
    7ea0:	bne	7e44 <get_piconet@@Base+0x394>
    7ea4:	add	fp, fp, #12
    7ea8:	cmp	r6, fp
    7eac:	bne	7e24 <get_piconet@@Base+0x374>
    7eb0:	ldr	r6, [sp, #8]
    7eb4:	ldr	r0, [sp, #4]
    7eb8:	bl	2108 <free@plt>
    7ebc:	ldr	r3, [r6, #8]
    7ec0:	ldmib	r3, {r1, r2, ip}
    7ec4:	str	r4, [r3]
    7ec8:	ldr	r0, [r3, #28]
    7ecc:	lsl	r1, r1, #1
    7ed0:	add	r2, r2, #1
    7ed4:	stmib	r3, {r1, r2}
    7ed8:	cmp	r0, ip, lsr #1
    7edc:	movls	r2, #0
    7ee0:	strls	r2, [r3, #32]
    7ee4:	bls	7c18 <get_piconet@@Base+0x168>
    7ee8:	ldr	r2, [r3, #32]
    7eec:	add	r2, r2, #1
    7ef0:	cmp	r2, #1
    7ef4:	str	r2, [r3, #32]
    7ef8:	movhi	r2, #1
    7efc:	strhi	r2, [r3, #36]	; 0x24
    7f00:	b	7c18 <get_piconet@@Base+0x168>
    7f04:	mov	r0, #44	; 0x2c
    7f08:	str	r1, [r6, #12]
    7f0c:	str	r6, [r3, #8]
    7f10:	bl	2288 <malloc@plt>
    7f14:	cmp	r0, #0
    7f18:	mov	r5, r0
    7f1c:	str	r0, [r6, #8]
    7f20:	beq	7f94 <get_piconet@@Base+0x4e4>
    7f24:	mov	r0, #0
    7f28:	mov	r1, #0
    7f2c:	mov	lr, #32
    7f30:	mov	ip, #5
    7f34:	mov	r2, #8
    7f38:	add	r4, r6, #8
    7f3c:	str	lr, [r5, #4]
    7f40:	str	ip, [r5, #8]
    7f44:	strd	r0, [r5, #12]
    7f48:	str	r4, [r5, #16]
    7f4c:	strd	r0, [r5, #20]
    7f50:	str	r2, [r5, #20]
    7f54:	strd	r0, [r5, #28]
    7f58:	strd	r0, [r5, #36]	; 0x24
    7f5c:	mov	r1, #1
    7f60:	mov	r0, #384	; 0x180
    7f64:	bl	206c <calloc@plt>
    7f68:	cmp	r0, #0
    7f6c:	str	r0, [r5]
    7f70:	beq	7f94 <get_piconet@@Base+0x4e4>
    7f74:	movw	r3, #8161	; 0x1fe1
    7f78:	movt	r3, #40977	; 0xa011
    7f7c:	mov	r1, r6
    7f80:	str	r3, [r5, #40]	; 0x28
    7f84:	b	7ca4 <get_piconet@@Base+0x1f4>
    7f88:	ldr	r3, [r5]
    7f8c:	str	r3, [sp, #4]
    7f90:	b	7eb4 <get_piconet@@Base+0x404>
    7f94:	mvn	r0, #0
    7f98:	bl	22dc <exit@plt>
    7f9c:	andeq	r3, r2, ip, ror #13
    7fa0:	andeq	r3, r2, r0, lsr r5

00007fa4 <btbb_next_survey_result@@Base>:
    7fa4:	ldr	r2, [pc, #56]	; 7fe4 <btbb_next_survey_result@@Base+0x40>
    7fa8:	str	r4, [sp, #-8]!
    7fac:	add	r2, pc, r2
    7fb0:	ldr	r4, [r2, #8]
    7fb4:	str	lr, [sp, #4]
    7fb8:	cmp	r4, #0
    7fbc:	beq	7fd4 <btbb_next_survey_result@@Base+0x30>
    7fc0:	ldr	r1, [r4, #16]
    7fc4:	mov	r0, r4
    7fc8:	ldr	r4, [r4, #4]
    7fcc:	str	r1, [r2, #8]
    7fd0:	bl	2108 <free@plt>
    7fd4:	mov	r0, r4
    7fd8:	ldr	r4, [sp]
    7fdc:	add	sp, sp, #4
    7fe0:	pop	{pc}		; (ldr pc, [sp], #4)
    7fe4:	strdeq	r3, [r2], -r8

00007fe8 <btbb_process_packet@@Base>:
    7fe8:	ldr	r3, [pc, #400]	; 8180 <btbb_process_packet@@Base+0x198>
    7fec:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7ff0:	mov	r5, r0
    7ff4:	strd	r6, [sp, #8]
    7ff8:	str	r8, [sp, #16]
    7ffc:	str	lr, [sp, #20]
    8000:	add	r3, pc, r3
    8004:	ldr	r7, [r3]
    8008:	cmp	r7, #0
    800c:	bne	8058 <btbb_process_packet@@Base+0x70>
    8010:	cmp	r1, #0
    8014:	mov	r4, r1
    8018:	beq	803c <btbb_process_packet@@Base+0x54>
    801c:	ldrb	r1, [r0, #8]
    8020:	mov	r0, r4
    8024:	bl	21f8 <btbb_piconet_set_channel_seen@plt>
    8028:	mov	r1, #3
    802c:	mov	r0, r4
    8030:	bl	21b0 <btbb_piconet_get_flag@plt>
    8034:	cmp	r0, #0
    8038:	bne	80a0 <btbb_process_packet@@Base+0xb8>
    803c:	mov	r6, #0
    8040:	mov	r0, r6
    8044:	ldrd	r4, [sp]
    8048:	ldrd	r6, [sp, #8]
    804c:	ldr	r8, [sp, #16]
    8050:	add	sp, sp, #20
    8054:	pop	{pc}		; (ldr pc, [sp], #4)
    8058:	bl	23b4 <btbb_packet_get_lap@plt>
    805c:	bl	23e4 <get_piconet@plt>
    8060:	ldrb	r1, [r5, #8]
    8064:	mov	r4, r0
    8068:	bl	21f8 <btbb_piconet_set_channel_seen@plt>
    806c:	mov	r0, r5
    8070:	bl	21a4 <btbb_header_present@plt>
    8074:	cmp	r0, #0
    8078:	beq	803c <btbb_process_packet@@Base+0x54>
    807c:	mov	r1, #2
    8080:	mov	r0, r4
    8084:	bl	21b0 <btbb_piconet_get_flag@plt>
    8088:	subs	r6, r0, #0
    808c:	bne	803c <btbb_process_packet@@Base+0x54>
    8090:	mov	r1, r4
    8094:	mov	r0, r5
    8098:	bl	2138 <btbb_uap_from_header@plt>
    809c:	b	8040 <btbb_process_packet@@Base+0x58>
    80a0:	mov	r0, r5
    80a4:	bl	21a4 <btbb_header_present@plt>
    80a8:	cmp	r0, #0
    80ac:	beq	803c <btbb_process_packet@@Base+0x54>
    80b0:	mov	r1, #14
    80b4:	mov	r0, r4
    80b8:	bl	21b0 <btbb_piconet_get_flag@plt>
    80bc:	subs	r6, r0, #0
    80c0:	mov	r0, r4
    80c4:	beq	8118 <btbb_process_packet@@Base+0x130>
    80c8:	bl	2168 <btbb_piconet_get_uap@plt>
    80cc:	mov	r1, r0
    80d0:	mov	r0, r5
    80d4:	bl	2210 <btbb_packet_set_uap@plt>
    80d8:	mov	r2, #1
    80dc:	mov	r1, #4
    80e0:	mov	r0, r5
    80e4:	bl	20f0 <btbb_packet_set_flag@plt>
    80e8:	mov	r2, #1
    80ec:	mov	r1, #5
    80f0:	mov	r0, r5
    80f4:	bl	20f0 <btbb_packet_set_flag@plt>
    80f8:	mov	r0, r5
    80fc:	bl	224c <btbb_decode@plt>
    8100:	subs	r6, r0, #0
    8104:	beq	8170 <btbb_process_packet@@Base+0x188>
    8108:	mov	r0, r5
    810c:	mov	r6, r7
    8110:	bl	2468 <btbb_print_packet@plt>
    8114:	b	8040 <btbb_process_packet@@Base+0x58>
    8118:	bl	2168 <btbb_piconet_get_uap@plt>
    811c:	cmp	r0, #0
    8120:	beq	8090 <btbb_process_packet@@Base+0xa8>
    8124:	mov	r0, r5
    8128:	mov	r1, r4
    812c:	bl	2294 <try_hop@plt>
    8130:	mov	r1, #4
    8134:	mov	r0, r4
    8138:	bl	21b0 <btbb_piconet_get_flag@plt>
    813c:	cmp	r0, #0
    8140:	beq	803c <btbb_process_packet@@Base+0x54>
    8144:	mov	r1, #5
    8148:	mov	r0, r4
    814c:	bl	21b0 <btbb_piconet_get_flag@plt>
    8150:	cmp	r0, #0
    8154:	beq	803c <btbb_process_packet@@Base+0x54>
    8158:	mov	r0, r4
    815c:	mov	r2, #1
    8160:	mov	r1, #14
    8164:	mvn	r6, #0
    8168:	bl	21d4 <btbb_piconet_set_flag@plt>
    816c:	b	8040 <btbb_process_packet@@Base+0x58>
    8170:	ldr	r0, [pc, #12]	; 8184 <btbb_process_packet@@Base+0x19c>
    8174:	add	r0, pc, r0
    8178:	bl	227c <puts@plt>
    817c:	b	8040 <btbb_process_packet@@Base+0x58>
    8180:	andeq	r3, r2, r4, lsr #3
    8184:	andeq	fp, r0, ip, lsl #28
    8188:	strd	r4, [sp, #-36]!	; 0xffffffdc
    818c:	mov	r2, #256	; 0x100
    8190:	ldr	r4, [pc, #1068]	; 85c4 <btbb_process_packet@@Base+0x5dc>
    8194:	strd	r6, [sp, #8]
    8198:	mov	r6, r0
    819c:	strd	r8, [sp, #16]
    81a0:	uxtb	r7, r6
    81a4:	strd	sl, [sp, #24]
    81a8:	str	lr, [sp, #32]
    81ac:	sub	sp, sp, #580	; 0x244
    81b0:	add	r4, pc, r4
    81b4:	add	r0, sp, #64	; 0x40
    81b8:	mov	r1, r4
    81bc:	mov	r8, sp
    81c0:	bl	212c <memcpy@plt>
    81c4:	add	r1, r4, #256	; 0x100
    81c8:	mov	r2, #256	; 0x100
    81cc:	add	r0, sp, #320	; 0x140
    81d0:	bl	212c <memcpy@plt>
    81d4:	lsr	r2, r6, #8
    81d8:	add	r3, sp, #576	; 0x240
    81dc:	tst	r6, #1
    81e0:	add	r3, r3, r7
    81e4:	add	r1, sp, #576	; 0x240
    81e8:	lsr	r0, r6, #16
    81ec:	ldrbne	ip, [r3, #-256]	; 0xffffff00
    81f0:	add	lr, sp, #576	; 0x240
    81f4:	ldrbeq	ip, [r3, #-512]	; 0xfffffe00
    81f8:	uxtb	r3, r2
    81fc:	tst	r6, #128	; 0x80
    8200:	add	r1, r1, r3
    8204:	ldrbne	r9, [r1, #-256]	; 0xffffff00
    8208:	ldrbeq	r9, [r1, #-512]	; 0xfffffe00
    820c:	tst	r2, #128	; 0x80
    8210:	uxtb	r1, r0
    8214:	add	r2, sp, #576	; 0x240
    8218:	add	r2, r2, r1
    821c:	add	ip, ip, r9
    8220:	ldrbne	r9, [r2, #-256]	; 0xffffff00
    8224:	ldrbeq	r9, [r2, #-512]	; 0xfffffe00
    8228:	lsr	r2, r6, #24
    822c:	tst	r0, #128	; 0x80
    8230:	uxtb	r0, r2
    8234:	add	r2, lr, r2
    8238:	ldr	lr, [pc, #904]	; 85c8 <btbb_process_packet@@Base+0x5e0>
    823c:	add	ip, r9, ip
    8240:	ldrbne	r9, [r2, #-256]	; 0xffffff00
    8244:	ldrbeq	r9, [r2, #-512]	; 0xfffffe00
    8248:	add	lr, pc, lr
    824c:	add	r2, sp, #576	; 0x240
    8250:	add	lr, lr, #512	; 0x200
    8254:	add	sl, r2, r0, lsr #2
    8258:	ldrd	r4, [lr, #16]
    825c:	add	r9, r9, ip
    8260:	movw	ip, #48854	; 0xbed6
    8264:	movt	ip, #36489	; 0x8e89
    8268:	cmp	r9, #24
    826c:	subgt	r9, r9, #24
    8270:	movle	r9, #0
    8274:	strd	r4, [r8, #16]
    8278:	cmp	r7, r3
    827c:	cmpeq	r7, r1
    8280:	ldrd	r4, [lr, #40]	; 0x28
    8284:	moveq	r3, #1
    8288:	movne	r3, #0
    828c:	cmp	r7, r0
    8290:	movne	r7, #0
    8294:	andeq	r7, r3, #1
    8298:	ldrd	r0, [lr]
    829c:	cmp	r6, ip
    82a0:	eor	ip, ip, r6
    82a4:	ldrd	r2, [lr, #8]
    82a8:	strd	r0, [r8]
    82ac:	ldrd	r0, [lr, #24]
    82b0:	strd	r2, [r8, #8]
    82b4:	ldrd	r2, [lr, #32]
    82b8:	strd	r0, [r8, #24]
    82bc:	ldrd	r0, [lr, #48]	; 0x30
    82c0:	strd	r2, [r8, #32]
    82c4:	ldrd	r2, [lr, #56]	; 0x38
    82c8:	strd	r4, [r8, #40]	; 0x28
    82cc:	strd	r0, [r8, #48]	; 0x30
    82d0:	moveq	r0, #1
    82d4:	movne	r0, #0
    82d8:	strd	r2, [r8, #56]	; 0x38
    82dc:	ldrb	r3, [sl, #-576]	; 0xfffffdc0
    82e0:	rsb	r3, r3, #1
    82e4:	add	r9, r3, r9
    82e8:	add	r9, r7, r9
    82ec:	add	r0, r0, r9
    82f0:	beq	8314 <btbb_process_packet@@Base+0x32c>
    82f4:	mov	r3, #0
    82f8:	sub	r2, ip, #1
    82fc:	add	r3, r3, #1
    8300:	ands	ip, ip, r2
    8304:	uxtb	r3, r3
    8308:	bne	82f8 <btbb_process_packet@@Base+0x310>
    830c:	cmp	r3, #1
    8310:	addeq	r0, r0, #1
    8314:	mov	r2, #0
    8318:	movw	sl, #1793	; 0x701
    831c:	movw	r9, #3587	; 0xe03
    8320:	movw	r8, #3580	; 0xdfc
    8324:	movw	r7, #3326	; 0xcfe
    8328:	movw	r5, #3329	; 0xd01
    832c:	movw	r4, #2563	; 0xa03
    8330:	movw	lr, #2036	; 0x7f4
    8334:	movw	ip, #1790	; 0x6fe
    8338:	movw	r1, #769	; 0x301
    833c:	b	837c <btbb_process_packet@@Base+0x394>
    8340:	movw	fp, #766	; 0x2fe
    8344:	cmp	r3, fp
    8348:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    834c:	movw	fp, #257	; 0x101
    8350:	cmp	r3, fp
    8354:	bls	84ac <btbb_process_packet@@Base+0x4c4>
    8358:	cmp	r3, #512	; 0x200
    835c:	bcs	8478 <btbb_process_packet@@Base+0x490>
    8360:	cmp	r3, #508	; 0x1fc
    8364:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    8368:	cmp	r3, #384	; 0x180
    836c:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    8370:	add	r2, r2, #4
    8374:	cmp	r2, #24
    8378:	beq	83dc <btbb_process_packet@@Base+0x3f4>
    837c:	lsr	r3, r6, r2
    8380:	ubfx	r3, r3, #0, #12
    8384:	cmp	r3, sl
    8388:	bhi	8444 <btbb_process_packet@@Base+0x45c>
    838c:	cmp	r3, ip
    8390:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    8394:	cmp	r3, r1
    8398:	bls	8340 <btbb_process_packet@@Base+0x358>
    839c:	movw	fp, #1281	; 0x501
    83a0:	cmp	r3, fp
    83a4:	bhi	8420 <btbb_process_packet@@Base+0x438>
    83a8:	movw	fp, #1278	; 0x4fe
    83ac:	cmp	r3, fp
    83b0:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    83b4:	cmp	r3, #1024	; 0x400
    83b8:	bhi	83f8 <btbb_process_packet@@Base+0x410>
    83bc:	cmp	r3, #1016	; 0x3f8
    83c0:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    83c4:	cmp	r3, #896	; 0x380
    83c8:	bne	8370 <btbb_process_packet@@Base+0x388>
    83cc:	add	r0, r0, #1
    83d0:	add	r2, r2, #4
    83d4:	cmp	r2, #24
    83d8:	bne	837c <btbb_process_packet@@Base+0x394>
    83dc:	add	sp, sp, #580	; 0x244
    83e0:	ldrd	r4, [sp]
    83e4:	ldrd	r6, [sp, #8]
    83e8:	ldrd	r8, [sp, #16]
    83ec:	ldrd	sl, [sp, #24]
    83f0:	add	sp, sp, #32
    83f4:	pop	{pc}		; (ldr pc, [sp], #4)
    83f8:	movw	fp, #1026	; 0x402
    83fc:	cmp	r3, fp
    8400:	bcc	8370 <btbb_process_packet@@Base+0x388>
    8404:	movw	fp, #1031	; 0x407
    8408:	cmp	r3, fp
    840c:	bls	83cc <btbb_process_packet@@Base+0x3e4>
    8410:	cmp	r3, #1152	; 0x480
    8414:	bne	8370 <btbb_process_packet@@Base+0x388>
    8418:	add	r0, r0, #1
    841c:	b	83d0 <btbb_process_packet@@Base+0x3e8>
    8420:	cmp	r3, #1536	; 0x600
    8424:	bcs	8490 <btbb_process_packet@@Base+0x4a8>
    8428:	movw	fp, #1532	; 0x5fc
    842c:	cmp	r3, fp
    8430:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    8434:	cmp	r3, #1408	; 0x580
    8438:	bne	8370 <btbb_process_packet@@Base+0x388>
    843c:	add	r0, r0, #1
    8440:	b	83d0 <btbb_process_packet@@Base+0x3e8>
    8444:	cmp	r3, #2944	; 0xb80
    8448:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    844c:	bhi	8510 <btbb_process_packet@@Base+0x528>
    8450:	cmp	r3, #2432	; 0x980
    8454:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    8458:	bhi	84ec <btbb_process_packet@@Base+0x504>
    845c:	cmp	r3, #2064	; 0x810
    8460:	bcs	84cc <btbb_process_packet@@Base+0x4e4>
    8464:	cmp	r3, lr
    8468:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    846c:	cmp	r3, #1920	; 0x780
    8470:	bne	8370 <btbb_process_packet@@Base+0x388>
    8474:	b	83cc <btbb_process_packet@@Base+0x3e4>
    8478:	bls	8370 <btbb_process_packet@@Base+0x388>
    847c:	cmp	r3, #516	; 0x204
    8480:	bcc	83cc <btbb_process_packet@@Base+0x3e4>
    8484:	cmp	r3, #640	; 0x280
    8488:	bne	8370 <btbb_process_packet@@Base+0x388>
    848c:	b	83cc <btbb_process_packet@@Base+0x3e4>
    8490:	bls	8370 <btbb_process_packet@@Base+0x388>
    8494:	movw	fp, #1539	; 0x603
    8498:	cmp	r3, fp
    849c:	bls	83cc <btbb_process_packet@@Base+0x3e4>
    84a0:	cmp	r3, #1664	; 0x680
    84a4:	bne	8370 <btbb_process_packet@@Base+0x388>
    84a8:	b	83cc <btbb_process_packet@@Base+0x3e4>
    84ac:	cmp	r3, #254	; 0xfe
    84b0:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    84b4:	cmp	r3, #31
    84b8:	bls	83cc <btbb_process_packet@@Base+0x3e4>
    84bc:	sub	r3, r3, #127	; 0x7f
    84c0:	cmp	r3, #1
    84c4:	bhi	8370 <btbb_process_packet@@Base+0x388>
    84c8:	b	83cc <btbb_process_packet@@Base+0x3e4>
    84cc:	cmp	r3, #2176	; 0x880
    84d0:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    84d4:	bcc	8370 <btbb_process_packet@@Base+0x388>
    84d8:	sub	r3, r3, #2288	; 0x8f0
    84dc:	sub	r3, r3, #14
    84e0:	cmp	r3, #3
    84e4:	bhi	8370 <btbb_process_packet@@Base+0x388>
    84e8:	b	83cc <btbb_process_packet@@Base+0x3e4>
    84ec:	cmp	r3, r4
    84f0:	bhi	8548 <btbb_process_packet@@Base+0x560>
    84f4:	cmp	r3, #2560	; 0xa00
    84f8:	bhi	83cc <btbb_process_packet@@Base+0x3e4>
    84fc:	sub	r3, r3, #2544	; 0x9f0
    8500:	sub	r3, r3, #12
    8504:	cmp	r3, #3
    8508:	bhi	8370 <btbb_process_packet@@Base+0x388>
    850c:	b	83cc <btbb_process_packet@@Base+0x3e4>
    8510:	cmp	r3, r9
    8514:	bhi	857c <btbb_process_packet@@Base+0x594>
    8518:	cmp	r3, r8
    851c:	bcs	83cc <btbb_process_packet@@Base+0x3e4>
    8520:	cmp	r3, #3200	; 0xc80
    8524:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    8528:	bls	8568 <btbb_process_packet@@Base+0x580>
    852c:	cmp	r3, r7
    8530:	bcc	8370 <btbb_process_packet@@Base+0x388>
    8534:	cmp	r3, r5
    8538:	bls	83cc <btbb_process_packet@@Base+0x3e4>
    853c:	cmp	r3, #3456	; 0xd80
    8540:	bne	8370 <btbb_process_packet@@Base+0x388>
    8544:	b	83cc <btbb_process_packet@@Base+0x3e4>
    8548:	cmp	r3, #2688	; 0xa80
    854c:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    8550:	bcc	8370 <btbb_process_packet@@Base+0x388>
    8554:	sub	r3, r3, #2800	; 0xaf0
    8558:	sub	r3, r3, #14
    855c:	cmp	r3, #3
    8560:	bhi	8370 <btbb_process_packet@@Base+0x388>
    8564:	b	83cc <btbb_process_packet@@Base+0x3e4>
    8568:	sub	r3, r3, #3056	; 0xbf0
    856c:	sub	r3, r3, #8
    8570:	cmp	r3, #15
    8574:	bhi	8370 <btbb_process_packet@@Base+0x388>
    8578:	b	83cc <btbb_process_packet@@Base+0x3e4>
    857c:	cmp	r3, #3968	; 0xf80
    8580:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    8584:	bhi	85a8 <btbb_process_packet@@Base+0x5c0>
    8588:	cmp	r3, #3712	; 0xe80
    858c:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    8590:	bcc	8370 <btbb_process_packet@@Base+0x388>
    8594:	sub	r3, r3, #3824	; 0xef0
    8598:	sub	r3, r3, #14
    859c:	cmp	r3, #3
    85a0:	bhi	8370 <btbb_process_packet@@Base+0x388>
    85a4:	b	83cc <btbb_process_packet@@Base+0x3e4>
    85a8:	cmp	r3, #4064	; 0xfe0
    85ac:	beq	83cc <btbb_process_packet@@Base+0x3e4>
    85b0:	bcc	8370 <btbb_process_packet@@Base+0x388>
    85b4:	sub	r3, r3, #4080	; 0xff0
    85b8:	cmp	r3, #15
    85bc:	bhi	8370 <btbb_process_packet@@Base+0x388>
    85c0:	b	83cc <btbb_process_packet@@Base+0x3e4>
    85c4:	andeq	fp, r0, r8, ror #27
    85c8:	andeq	fp, r0, r0, asr sp
    85cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    85d0:	strd	r6, [sp, #8]
    85d4:	strd	r8, [sp, #16]
    85d8:	subs	r8, r1, #0
    85dc:	strd	sl, [sp, #24]
    85e0:	str	lr, [sp, #32]
    85e4:	vpush	{d8}
    85e8:	sub	sp, sp, #36	; 0x24
    85ec:	ble	8724 <btbb_process_packet@@Base+0x73c>
    85f0:	ldrb	r4, [r0]
    85f4:	mov	r7, r0
    85f8:	add	r5, r4, #1
    85fc:	cmp	r8, r5
    8600:	blt	8c88 <btbb_process_packet@@Base+0xca0>
    8604:	cmp	r4, #0
    8608:	beq	8cc4 <btbb_process_packet@@Base+0xcdc>
    860c:	ldr	r3, [pc, #1012]	; 8a08 <btbb_process_packet@@Base+0xa20>
    8610:	mov	r6, #0
    8614:	mov	sl, #1
    8618:	ldr	r9, [pc, #1004]	; 8a0c <btbb_process_packet@@Base+0xa24>
    861c:	str	r6, [sp]
    8620:	vldr	d8, [pc, #984]	; 8a00 <btbb_process_packet@@Base+0xa18>
    8624:	add	r3, pc, r3
    8628:	str	r3, [sp, #4]
    862c:	add	r9, pc, r9
    8630:	ldr	r3, [pc, #984]	; 8a10 <btbb_process_packet@@Base+0xa28>
    8634:	add	r3, pc, r3
    8638:	str	r3, [sp, #8]
    863c:	b	86b0 <btbb_process_packet@@Base+0x6c8>
    8640:	cmp	fp, #9
    8644:	beq	8924 <btbb_process_packet@@Base+0x93c>
    8648:	cmp	fp, #10
    864c:	bne	88d8 <btbb_process_packet@@Base+0x8f0>
    8650:	ldr	r0, [pc, #956]	; 8a14 <btbb_process_packet@@Base+0xa2c>
    8654:	add	r0, pc, r0
    8658:	bl	227c <puts@plt>
    865c:	ldr	r0, [pc, #948]	; 8a18 <btbb_process_packet@@Base+0xa30>
    8660:	add	r0, pc, r0
    8664:	bl	20c0 <printf@plt>
    8668:	cmp	r4, #2
    866c:	beq	8cf0 <btbb_process_packet@@Base+0xd08>
    8670:	ldr	r0, [pc, #932]	; 8a1c <btbb_process_packet@@Base+0xa34>
    8674:	sub	r1, r4, #1
    8678:	add	r0, pc, r0
    867c:	bl	20c0 <printf@plt>
    8680:	cmp	r8, r5
    8684:	ble	8724 <btbb_process_packet@@Base+0x73c>
    8688:	ldrb	r4, [r7, r5]
    868c:	add	sl, r5, #1
    8690:	str	r5, [sp]
    8694:	add	r3, r4, sl
    8698:	cmp	r3, r8
    869c:	bgt	8c8c <btbb_process_packet@@Base+0xca4>
    86a0:	cmp	r4, #0
    86a4:	mov	r6, r5
    86a8:	beq	8cc4 <btbb_process_packet@@Base+0xcdc>
    86ac:	mov	r5, r3
    86b0:	ldrb	fp, [r7, sl]
    86b4:	ldr	r0, [sp, #4]
    86b8:	mov	r1, fp
    86bc:	bl	20c0 <printf@plt>
    86c0:	cmp	fp, #7
    86c4:	beq	899c <btbb_process_packet@@Base+0x9b4>
    86c8:	bls	8744 <btbb_process_packet@@Base+0x75c>
    86cc:	cmp	fp, #18
    86d0:	beq	8894 <btbb_process_packet@@Base+0x8ac>
    86d4:	bls	8640 <btbb_process_packet@@Base+0x658>
    86d8:	cmp	fp, #22
    86dc:	beq	8bf0 <btbb_process_packet@@Base+0xc08>
    86e0:	cmp	fp, #255	; 0xff
    86e4:	bne	88d8 <btbb_process_packet@@Base+0x8f0>
    86e8:	ldr	r6, [pc, #816]	; 8a20 <btbb_process_packet@@Base+0xa38>
    86ec:	ldr	r0, [pc, #816]	; 8a24 <btbb_process_packet@@Base+0xa3c>
    86f0:	add	r6, pc, r6
    86f4:	add	r0, pc, r0
    86f8:	bl	227c <puts@plt>
    86fc:	mov	r0, r6
    8700:	bl	20c0 <printf@plt>
    8704:	cmp	r4, #2
    8708:	bgt	8e64 <btbb_process_packet@@Base+0xe7c>
    870c:	ldr	r0, [pc, #788]	; 8a28 <btbb_process_packet@@Base+0xa40>
    8710:	sub	r1, r4, #1
    8714:	add	r0, pc, r0
    8718:	bl	20c0 <printf@plt>
    871c:	cmp	r8, r5
    8720:	bgt	8688 <btbb_process_packet@@Base+0x6a0>
    8724:	add	sp, sp, #36	; 0x24
    8728:	vpop	{d8}
    872c:	ldrd	r4, [sp]
    8730:	ldrd	r6, [sp, #8]
    8734:	ldrd	r8, [sp, #16]
    8738:	ldrd	sl, [sp, #24]
    873c:	add	sp, sp, #32
    8740:	pop	{pc}		; (ldr pc, [sp], #4)
    8744:	cmp	fp, #2
    8748:	beq	883c <btbb_process_packet@@Base+0x854>
    874c:	bls	878c <btbb_process_packet@@Base+0x7a4>
    8750:	cmp	fp, #3
    8754:	beq	88c8 <btbb_process_packet@@Base+0x8e0>
    8758:	cmp	fp, #6
    875c:	bne	88d8 <btbb_process_packet@@Base+0x8f0>
    8760:	ldr	r0, [pc, #708]	; 8a2c <btbb_process_packet@@Base+0xa44>
    8764:	sub	r4, r4, #1
    8768:	add	r0, pc, r0
    876c:	bl	227c <puts@plt>
    8770:	tst	r4, #15
    8774:	beq	89b4 <btbb_process_packet@@Base+0x9cc>
    8778:	ldr	r0, [pc, #688]	; 8a30 <btbb_process_packet@@Base+0xa48>
    877c:	mov	r1, r4
    8780:	add	r0, pc, r0
    8784:	bl	20c0 <printf@plt>
    8788:	b	8680 <btbb_process_packet@@Base+0x698>
    878c:	cmp	fp, #1
    8790:	bne	88d8 <btbb_process_packet@@Base+0x8f0>
    8794:	ldr	r0, [pc, #664]	; 8a34 <btbb_process_packet@@Base+0xa4c>
    8798:	mov	sl, #7
    879c:	ldr	r3, [sp]
    87a0:	ldr	r6, [pc, #656]	; 8a38 <btbb_process_packet@@Base+0xa50>
    87a4:	add	r0, pc, r0
    87a8:	add	fp, r3, #2
    87ac:	bl	227c <puts@plt>
    87b0:	ldr	r0, [pc, #644]	; 8a3c <btbb_process_packet@@Base+0xa54>
    87b4:	add	r6, pc, r6
    87b8:	add	r4, r7, fp
    87bc:	add	r0, pc, r0
    87c0:	bl	20c0 <printf@plt>
    87c4:	ldrb	r1, [r4]
    87c8:	mov	r0, r6
    87cc:	asr	r1, r1, sl
    87d0:	sub	sl, sl, #1
    87d4:	and	r1, r1, #1
    87d8:	bl	20c0 <printf@plt>
    87dc:	cmn	sl, #1
    87e0:	bne	87c4 <btbb_process_packet@@Base+0x7dc>
    87e4:	mov	r0, #10
    87e8:	bl	2390 <putchar@plt>
    87ec:	ldrb	r3, [r7, fp]
    87f0:	tst	r3, #1
    87f4:	bne	8e44 <btbb_process_packet@@Base+0xe5c>
    87f8:	tst	r3, #2
    87fc:	bne	8e24 <btbb_process_packet@@Base+0xe3c>
    8800:	tst	r3, #4
    8804:	bne	8e04 <btbb_process_packet@@Base+0xe1c>
    8808:	tst	r3, #8
    880c:	bne	8de4 <btbb_process_packet@@Base+0xdfc>
    8810:	tst	r3, #16
    8814:	bne	8dc4 <btbb_process_packet@@Base+0xddc>
    8818:	tst	r3, #32
    881c:	bne	8da4 <btbb_process_packet@@Base+0xdbc>
    8820:	tst	r3, #64	; 0x40
    8824:	bne	8d84 <btbb_process_packet@@Base+0xd9c>
    8828:	lsrs	r3, r3, #7
    882c:	bne	8d68 <btbb_process_packet@@Base+0xd80>
    8830:	mov	r0, #10
    8834:	bl	2390 <putchar@plt>
    8838:	b	8680 <btbb_process_packet@@Base+0x698>
    883c:	ldr	r0, [pc, #508]	; 8a40 <btbb_process_packet@@Base+0xa58>
    8840:	add	r0, pc, r0
    8844:	bl	227c <puts@plt>
    8848:	sub	r3, r4, #1
    884c:	tst	r3, #1
    8850:	bne	8680 <btbb_process_packet@@Base+0x698>
    8854:	cmp	r3, #0
    8858:	beq	8680 <btbb_process_packet@@Base+0x698>
    885c:	ldr	sl, [pc, #480]	; 8a44 <btbb_process_packet@@Base+0xa5c>
    8860:	sub	r3, r4, #2
    8864:	add	r4, r7, #2
    8868:	add	r4, r4, r6
    886c:	bic	r3, r3, #1
    8870:	add	r4, r4, r3
    8874:	add	r6, r7, r6
    8878:	add	sl, pc, sl
    887c:	ldrh	r1, [r6, #2]!
    8880:	mov	r0, sl
    8884:	bl	20c0 <printf@plt>
    8888:	cmp	r4, r6
    888c:	bne	887c <btbb_process_packet@@Base+0x894>
    8890:	b	8680 <btbb_process_packet@@Base+0x698>
    8894:	ldr	r0, [pc, #428]	; 8a48 <btbb_process_packet@@Base+0xa60>
    8898:	add	r0, pc, r0
    889c:	bl	227c <puts@plt>
    88a0:	ldr	r0, [pc, #420]	; 8a4c <btbb_process_packet@@Base+0xa64>
    88a4:	add	r0, pc, r0
    88a8:	bl	20c0 <printf@plt>
    88ac:	cmp	r4, #5
    88b0:	beq	8d0c <btbb_process_packet@@Base+0xd24>
    88b4:	ldr	r0, [pc, #404]	; 8a50 <btbb_process_packet@@Base+0xa68>
    88b8:	sub	r1, r4, #1
    88bc:	add	r0, pc, r0
    88c0:	bl	20c0 <printf@plt>
    88c4:	b	8680 <btbb_process_packet@@Base+0x698>
    88c8:	ldr	r0, [pc, #388]	; 8a54 <btbb_process_packet@@Base+0xa6c>
    88cc:	add	r0, pc, r0
    88d0:	bl	227c <puts@plt>
    88d4:	b	8848 <btbb_process_packet@@Base+0x860>
    88d8:	mov	r0, #10
    88dc:	bl	2390 <putchar@plt>
    88e0:	ldr	r0, [pc, #368]	; 8a58 <btbb_process_packet@@Base+0xa70>
    88e4:	add	r0, pc, r0
    88e8:	bl	20c0 <printf@plt>
    88ec:	cmp	r4, #1
    88f0:	beq	8830 <btbb_process_packet@@Base+0x848>
    88f4:	ldr	r6, [pc, #352]	; 8a5c <btbb_process_packet@@Base+0xa74>
    88f8:	add	r4, r4, sl
    88fc:	add	sl, sl, #1
    8900:	add	r4, r7, r4
    8904:	add	sl, r7, sl
    8908:	add	r6, pc, r6
    890c:	ldrb	r1, [sl], #1
    8910:	mov	r0, r6
    8914:	bl	20c0 <printf@plt>
    8918:	cmp	r4, sl
    891c:	bne	890c <btbb_process_packet@@Base+0x924>
    8920:	b	8830 <btbb_process_packet@@Base+0x848>
    8924:	ldr	r0, [pc, #308]	; 8a60 <btbb_process_packet@@Base+0xa78>
    8928:	add	r0, pc, r0
    892c:	bl	227c <puts@plt>
    8930:	ldr	r0, [pc, #300]	; 8a64 <btbb_process_packet@@Base+0xa7c>
    8934:	add	r0, pc, r0
    8938:	bl	20c0 <printf@plt>
    893c:	cmp	r4, #1
    8940:	beq	8830 <btbb_process_packet@@Base+0x848>
    8944:	add	r4, r4, sl
    8948:	add	sl, sl, #1
    894c:	bl	22d0 <__ctype_b_loc@plt>
    8950:	mov	r6, r0
    8954:	add	r4, r7, r4
    8958:	add	sl, r7, sl
    895c:	ldrb	r3, [sl], #1
    8960:	mov	r0, #46	; 0x2e
    8964:	ldr	r1, [r6]
    8968:	lsl	r2, r3, #1
    896c:	ldrh	r2, [r1, r2]
    8970:	tst	r2, #16384	; 0x4000
    8974:	beq	898c <btbb_process_packet@@Base+0x9a4>
    8978:	mov	r0, r3
    897c:	bl	2390 <putchar@plt>
    8980:	cmp	r4, sl
    8984:	bne	895c <btbb_process_packet@@Base+0x974>
    8988:	b	8830 <btbb_process_packet@@Base+0x848>
    898c:	bl	2390 <putchar@plt>
    8990:	cmp	r4, sl
    8994:	bne	895c <btbb_process_packet@@Base+0x974>
    8998:	b	8830 <btbb_process_packet@@Base+0x848>
    899c:	ldr	r0, [pc, #196]	; 8a68 <btbb_process_packet@@Base+0xa80>
    89a0:	sub	r4, r4, #1
    89a4:	add	r0, pc, r0
    89a8:	bl	227c <puts@plt>
    89ac:	tst	r4, #15
    89b0:	bne	8778 <btbb_process_packet@@Base+0x790>
    89b4:	cmp	r4, #0
    89b8:	beq	8680 <btbb_process_packet@@Base+0x698>
    89bc:	add	r3, r7, r6
    89c0:	cmp	r4, #1
    89c4:	ldrb	r3, [r3, #2]
    89c8:	strb	r3, [sp, #31]
    89cc:	beq	8680 <btbb_process_packet@@Base+0x698>
    89d0:	ldr	r3, [pc, #148]	; 8a6c <btbb_process_packet@@Base+0xa84>
    89d4:	mov	fp, #1
    89d8:	add	r6, r6, #2
    89dc:	add	r6, r7, r6
    89e0:	str	r5, [sp]
    89e4:	mov	r5, fp
    89e8:	mov	fp, r4
    89ec:	str	r7, [sp, #12]
    89f0:	add	r3, pc, r3
    89f4:	mov	r4, r3
    89f8:	b	8af4 <btbb_process_packet@@Base+0xb0c>
    89fc:	nop	{0}
    8a00:	andeq	r0, r0, r0
    8a04:	svccc	0x00f40000
    8a08:	andeq	fp, r0, r0, lsl ip
    8a0c:			; <UNDEFINED> instruction: 0x0000bdbc
    8a10:	andeq	fp, r0, r8, lsr #24
    8a14:	andeq	fp, r0, r0, ror #27
    8a18:	strdeq	fp, [r0], -ip
    8a1c:	ldrdeq	fp, [r0], -r8
    8a20:	andeq	fp, r0, ip, ror #22
    8a24:	andeq	fp, r0, r8, lsr #28
    8a28:	andeq	fp, r0, r4, ror #27
    8a2c:	andeq	fp, r0, r8, lsr ip
    8a30:	andeq	fp, r0, r0, ror ip
    8a34:	andeq	fp, r0, r4, lsr #21
    8a38:	andeq	fp, r0, r0, lsr #21
    8a3c:	andeq	fp, r0, r0, lsr #21
    8a40:	andeq	fp, r0, r8, lsl #22
    8a44:	andeq	fp, r0, r4, lsl fp
    8a48:	ldrdeq	fp, [r0], -r8
    8a4c:			; <UNDEFINED> instruction: 0x0000b9b8
    8a50:	strdeq	fp, [r0], -r0
    8a54:	andeq	fp, r0, r4, lsr #21
    8a58:	andeq	fp, r0, r8, ror r9
    8a5c:	andeq	fp, r0, r8, lsr r9
    8a60:	strdeq	fp, [r0], -r4
    8a64:	andeq	fp, r0, r8, lsr #18
    8a68:	andeq	fp, r0, r8, lsr #20
    8a6c:	strdeq	fp, [r0], -r8
    8a70:	ldrdeq	fp, [r0], -r8
    8a74:	andeq	fp, r0, ip, asr r6
    8a78:			; <UNDEFINED> instruction: 0x0000b8bc
    8a7c:	strdeq	fp, [r0], -r4
    8a80:	muleq	r0, r8, r8
    8a84:	andeq	fp, r0, ip, ror r8
    8a88:	andeq	fp, r0, ip, asr r5
    8a8c:	andeq	fp, r0, r0, lsl r5
    8a90:	andeq	fp, r0, r8, asr #14
    8a94:	andeq	fp, r0, r8, ror r7
    8a98:	andeq	fp, r0, r4, asr r7
    8a9c:	andeq	fp, r0, ip, ror #9
    8aa0:	andeq	fp, r0, r4, asr #11
    8aa4:	ldrdeq	fp, [r0], -r0
    8aa8:	andeq	fp, r0, r8, lsr #11
    8aac:			; <UNDEFINED> instruction: 0x0000b4b0
    8ab0:	andeq	fp, r0, r8, lsl #11
    8ab4:	muleq	r0, r0, r4
    8ab8:	andeq	fp, r0, ip, lsr #10
    8abc:	andeq	fp, r0, r0, ror r4
    8ac0:	andeq	fp, r0, ip, asr #9
    8ac4:	andeq	fp, r0, r0, asr r4
    8ac8:	muleq	r0, r4, r4
    8acc:	andeq	fp, r0, r0, lsr r4
    8ad0:	andeq	fp, r0, r4, asr r4
    8ad4:	andeq	fp, r0, r0, lsl r4
    8ad8:	andeq	fp, r0, r4, lsl r4
    8adc:			; <UNDEFINED> instruction: 0x0000b6b8
    8ae0:			; <UNDEFINED> instruction: 0x0000b6b4
    8ae4:	andeq	fp, r0, r4, lsl #7
    8ae8:	add	r5, r5, #1
    8aec:	cmp	r5, fp
    8af0:	beq	8be4 <btbb_process_packet@@Base+0xbfc>
    8af4:	ldrb	r0, [r6, #1]!
    8af8:	and	r3, r5, #15
    8afc:	mvn	r1, r3
    8b00:	cmp	r3, #15
    8b04:	add	r2, r1, #16
    8b08:	add	r3, sp, #16
    8b0c:	strb	r0, [r3, r2]
    8b10:	bne	8ae8 <btbb_process_packet@@Base+0xb00>
    8b14:	ldr	r0, [sp, #8]
    8b18:	add	r7, sp, #25
    8b1c:	add	sl, sp, #31
    8b20:	bl	20c0 <printf@plt>
    8b24:	ldrb	r1, [sp, #16]
    8b28:	mov	r0, r9
    8b2c:	bl	20c0 <printf@plt>
    8b30:	ldrb	r1, [sp, #17]
    8b34:	mov	r0, r9
    8b38:	bl	20c0 <printf@plt>
    8b3c:	ldrb	r1, [sp, #18]
    8b40:	mov	r0, r9
    8b44:	bl	20c0 <printf@plt>
    8b48:	ldrb	r1, [sp, #19]
    8b4c:	mov	r0, r9
    8b50:	bl	20c0 <printf@plt>
    8b54:	mov	r0, #45	; 0x2d
    8b58:	bl	2390 <putchar@plt>
    8b5c:	ldrb	r1, [sp, #20]
    8b60:	mov	r0, r9
    8b64:	bl	20c0 <printf@plt>
    8b68:	ldrb	r1, [sp, #21]
    8b6c:	mov	r0, r9
    8b70:	bl	20c0 <printf@plt>
    8b74:	mov	r0, #45	; 0x2d
    8b78:	bl	2390 <putchar@plt>
    8b7c:	ldrb	r1, [sp, #22]
    8b80:	mov	r0, r9
    8b84:	bl	20c0 <printf@plt>
    8b88:	ldrb	r1, [sp, #23]
    8b8c:	mov	r0, r9
    8b90:	bl	20c0 <printf@plt>
    8b94:	mov	r0, #45	; 0x2d
    8b98:	bl	2390 <putchar@plt>
    8b9c:	ldrb	r1, [sp, #24]
    8ba0:	mov	r0, r9
    8ba4:	bl	20c0 <printf@plt>
    8ba8:	ldrb	r1, [sp, #25]
    8bac:	mov	r0, r9
    8bb0:	bl	20c0 <printf@plt>
    8bb4:	mov	r0, #45	; 0x2d
    8bb8:	bl	2390 <putchar@plt>
    8bbc:	ldrb	r1, [r7, #1]!
    8bc0:	mov	r0, r4
    8bc4:	bl	20c0 <printf@plt>
    8bc8:	cmp	sl, r7
    8bcc:	bne	8bbc <btbb_process_packet@@Base+0xbd4>
    8bd0:	mov	r0, #10
    8bd4:	add	r5, r5, #1
    8bd8:	bl	2390 <putchar@plt>
    8bdc:	cmp	r5, fp
    8be0:	bne	8af4 <btbb_process_packet@@Base+0xb0c>
    8be4:	ldr	r5, [sp]
    8be8:	ldr	r7, [sp, #12]
    8bec:	b	8680 <btbb_process_packet@@Base+0x698>
    8bf0:	ldr	r0, [pc, #-392]	; 8a70 <btbb_process_packet@@Base+0xa88>
    8bf4:	add	r0, pc, r0
    8bf8:	bl	227c <puts@plt>
    8bfc:	ldr	r0, [pc, #-400]	; 8a74 <btbb_process_packet@@Base+0xa8c>
    8c00:	add	r0, pc, r0
    8c04:	bl	20c0 <printf@plt>
    8c08:	cmp	r4, #2
    8c0c:	ble	8c74 <btbb_process_packet@@Base+0xc8c>
    8c10:	ldr	r3, [sp]
    8c14:	ldr	r0, [pc, #-420]	; 8a78 <btbb_process_packet@@Base+0xa90>
    8c18:	add	fp, r7, r3
    8c1c:	ldrb	r1, [fp, #3]
    8c20:	add	r0, pc, r0
    8c24:	ldrb	r3, [fp, #2]
    8c28:	orr	r1, r3, r1, lsl #8
    8c2c:	bl	20c0 <printf@plt>
    8c30:	cmp	r4, #3
    8c34:	beq	8830 <btbb_process_packet@@Base+0x848>
    8c38:	ldr	fp, [pc, #-452]	; 8a7c <btbb_process_packet@@Base+0xa94>
    8c3c:	add	r6, r7, sl
    8c40:	add	sl, sl, #3
    8c44:	add	sl, r7, sl
    8c48:	ldr	r0, [pc, #-464]	; 8a80 <btbb_process_packet@@Base+0xa98>
    8c4c:	add	fp, pc, fp
    8c50:	add	r0, pc, r0
    8c54:	bl	20c0 <printf@plt>
    8c58:	ldrb	r1, [sl], #1
    8c5c:	mov	r0, fp
    8c60:	bl	20c0 <printf@plt>
    8c64:	sub	r3, sl, r6
    8c68:	cmp	r3, r4
    8c6c:	blt	8c58 <btbb_process_packet@@Base+0xc70>
    8c70:	b	8830 <btbb_process_packet@@Base+0x848>
    8c74:	ldr	r0, [pc, #-504]	; 8a84 <btbb_process_packet@@Base+0xa9c>
    8c78:	sub	r1, r4, #1
    8c7c:	add	r0, pc, r0
    8c80:	bl	20c0 <printf@plt>
    8c84:	b	8680 <btbb_process_packet@@Base+0x698>
    8c88:	mov	sl, #1
    8c8c:	ldr	r0, [pc, #-524]	; 8a88 <btbb_process_packet@@Base+0xaa0>
    8c90:	mov	r3, r8
    8c94:	mov	r2, r4
    8c98:	mov	r1, sl
    8c9c:	add	r0, pc, r0
    8ca0:	add	sp, sp, #36	; 0x24
    8ca4:	vpop	{d8}
    8ca8:	ldrd	r4, [sp]
    8cac:	ldrd	r6, [sp, #8]
    8cb0:	ldrd	r8, [sp, #16]
    8cb4:	ldrd	sl, [sp, #24]
    8cb8:	ldr	lr, [sp, #32]
    8cbc:	add	sp, sp, #36	; 0x24
    8cc0:	b	20c0 <printf@plt>
    8cc4:	ldr	r0, [pc, #-576]	; 8a8c <btbb_process_packet@@Base+0xaa4>
    8cc8:	add	r0, pc, r0
    8ccc:	add	sp, sp, #36	; 0x24
    8cd0:	vpop	{d8}
    8cd4:	ldrd	r4, [sp]
    8cd8:	ldrd	r6, [sp, #8]
    8cdc:	ldrd	r8, [sp, #16]
    8ce0:	ldrd	sl, [sp, #24]
    8ce4:	ldr	lr, [sp, #32]
    8ce8:	add	sp, sp, #36	; 0x24
    8cec:	b	227c <puts@plt>
    8cf0:	ldr	r3, [sp]
    8cf4:	ldr	r0, [pc, #-620]	; 8a90 <btbb_process_packet@@Base+0xaa8>
    8cf8:	add	fp, r7, r3
    8cfc:	ldrb	r1, [fp, #2]
    8d00:	add	r0, pc, r0
    8d04:	bl	20c0 <printf@plt>
    8d08:	b	8680 <btbb_process_packet@@Base+0x698>
    8d0c:	ldr	r3, [sp]
    8d10:	ldr	r0, [pc, #-644]	; 8a94 <btbb_process_packet@@Base+0xaac>
    8d14:	add	fp, r7, r3
    8d18:	ldrb	r2, [fp, #3]
    8d1c:	add	r0, pc, r0
    8d20:	ldrb	r3, [fp, #2]
    8d24:	orr	r3, r3, r2, lsl #8
    8d28:	vmov	s15, r3
    8d2c:	vcvt.f64.s32	d7, s15
    8d30:	vmul.f64	d7, d7, d8
    8d34:	vmov	r2, r3, d7
    8d38:	bl	20c0 <printf@plt>
    8d3c:	ldrb	r2, [fp, #5]
    8d40:	ldrb	r3, [fp, #4]
    8d44:	ldr	r0, [pc, #-692]	; 8a98 <btbb_process_packet@@Base+0xab0>
    8d48:	orr	r3, r3, r2, lsl #8
    8d4c:	add	r0, pc, r0
    8d50:	vmov	s15, r3
    8d54:	vcvt.f64.s32	d7, s15
    8d58:	vmul.f64	d7, d7, d8
    8d5c:	vmov	r2, r3, d7
    8d60:	bl	20c0 <printf@plt>
    8d64:	b	8680 <btbb_process_packet@@Base+0x698>
    8d68:	ldr	r0, [pc, #-724]	; 8a9c <btbb_process_packet@@Base+0xab4>
    8d6c:	add	r0, pc, r0
    8d70:	bl	20c0 <printf@plt>
    8d74:	ldr	r0, [pc, #-732]	; 8aa0 <btbb_process_packet@@Base+0xab8>
    8d78:	add	r0, pc, r0
    8d7c:	bl	227c <puts@plt>
    8d80:	b	8830 <btbb_process_packet@@Base+0x848>
    8d84:	ldr	r0, [pc, #-744]	; 8aa4 <btbb_process_packet@@Base+0xabc>
    8d88:	add	r0, pc, r0
    8d8c:	bl	20c0 <printf@plt>
    8d90:	ldr	r0, [pc, #-752]	; 8aa8 <btbb_process_packet@@Base+0xac0>
    8d94:	add	r0, pc, r0
    8d98:	bl	227c <puts@plt>
    8d9c:	ldrb	r3, [r7, fp]
    8da0:	b	8828 <btbb_process_packet@@Base+0x840>
    8da4:	ldr	r0, [pc, #-768]	; 8aac <btbb_process_packet@@Base+0xac4>
    8da8:	add	r0, pc, r0
    8dac:	bl	20c0 <printf@plt>
    8db0:	ldr	r0, [pc, #-776]	; 8ab0 <btbb_process_packet@@Base+0xac8>
    8db4:	add	r0, pc, r0
    8db8:	bl	227c <puts@plt>
    8dbc:	ldrb	r3, [r7, fp]
    8dc0:	b	8820 <btbb_process_packet@@Base+0x838>
    8dc4:	ldr	r0, [pc, #-792]	; 8ab4 <btbb_process_packet@@Base+0xacc>
    8dc8:	add	r0, pc, r0
    8dcc:	bl	20c0 <printf@plt>
    8dd0:	ldr	r0, [pc, #-800]	; 8ab8 <btbb_process_packet@@Base+0xad0>
    8dd4:	add	r0, pc, r0
    8dd8:	bl	227c <puts@plt>
    8ddc:	ldrb	r3, [r7, fp]
    8de0:	b	8818 <btbb_process_packet@@Base+0x830>
    8de4:	ldr	r0, [pc, #-816]	; 8abc <btbb_process_packet@@Base+0xad4>
    8de8:	add	r0, pc, r0
    8dec:	bl	20c0 <printf@plt>
    8df0:	ldr	r0, [pc, #-824]	; 8ac0 <btbb_process_packet@@Base+0xad8>
    8df4:	add	r0, pc, r0
    8df8:	bl	227c <puts@plt>
    8dfc:	ldrb	r3, [r7, fp]
    8e00:	b	8810 <btbb_process_packet@@Base+0x828>
    8e04:	ldr	r0, [pc, #-840]	; 8ac4 <btbb_process_packet@@Base+0xadc>
    8e08:	add	r0, pc, r0
    8e0c:	bl	20c0 <printf@plt>
    8e10:	ldr	r0, [pc, #-848]	; 8ac8 <btbb_process_packet@@Base+0xae0>
    8e14:	add	r0, pc, r0
    8e18:	bl	227c <puts@plt>
    8e1c:	ldrb	r3, [r7, fp]
    8e20:	b	8808 <btbb_process_packet@@Base+0x820>
    8e24:	ldr	r0, [pc, #-864]	; 8acc <btbb_process_packet@@Base+0xae4>
    8e28:	add	r0, pc, r0
    8e2c:	bl	20c0 <printf@plt>
    8e30:	ldr	r0, [pc, #-872]	; 8ad0 <btbb_process_packet@@Base+0xae8>
    8e34:	add	r0, pc, r0
    8e38:	bl	227c <puts@plt>
    8e3c:	ldrb	r3, [r7, fp]
    8e40:	b	8800 <btbb_process_packet@@Base+0x818>
    8e44:	ldr	r0, [pc, #-888]	; 8ad4 <btbb_process_packet@@Base+0xaec>
    8e48:	add	r0, pc, r0
    8e4c:	bl	20c0 <printf@plt>
    8e50:	ldr	r0, [pc, #-896]	; 8ad8 <btbb_process_packet@@Base+0xaf0>
    8e54:	add	r0, pc, r0
    8e58:	bl	227c <puts@plt>
    8e5c:	ldrb	r3, [r7, fp]
    8e60:	b	87f8 <btbb_process_packet@@Base+0x810>
    8e64:	ldr	r3, [sp]
    8e68:	add	fp, r7, r3
    8e6c:	ldrb	r3, [fp, #2]
    8e70:	ldrb	r0, [fp, #3]
    8e74:	orr	r0, r3, r0, lsl #8
    8e78:	bl	23cc <bt_compidtostr@plt>
    8e7c:	mov	r1, r0
    8e80:	ldr	r0, [pc, #-940]	; 8adc <btbb_process_packet@@Base+0xaf4>
    8e84:	add	r0, pc, r0
    8e88:	bl	20c0 <printf@plt>
    8e8c:	mov	r0, r6
    8e90:	bl	20c0 <printf@plt>
    8e94:	ldr	r0, [pc, #-956]	; 8ae0 <btbb_process_packet@@Base+0xaf8>
    8e98:	add	r0, pc, r0
    8e9c:	bl	20c0 <printf@plt>
    8ea0:	cmp	r4, #3
    8ea4:	beq	8830 <btbb_process_packet@@Base+0x848>
    8ea8:	ldr	r6, [pc, #-972]	; 8ae4 <btbb_process_packet@@Base+0xafc>
    8eac:	add	r4, r4, sl
    8eb0:	add	sl, sl, #3
    8eb4:	add	r4, r7, r4
    8eb8:	add	sl, r7, sl
    8ebc:	add	r6, pc, r6
    8ec0:	ldrb	r1, [sl], #1
    8ec4:	mov	r0, r6
    8ec8:	bl	20c0 <printf@plt>
    8ecc:	cmp	r4, sl
    8ed0:	bne	8ec0 <btbb_process_packet@@Base+0xed8>
    8ed4:	b	8830 <btbb_process_packet@@Base+0x848>

00008ed8 <lell_packet_new@@Base>:
    8ed8:	mov	r1, #104	; 0x68
    8edc:	mov	r0, #1
    8ee0:	str	r4, [sp, #-8]!
    8ee4:	str	lr, [sp, #4]
    8ee8:	bl	206c <calloc@plt>
    8eec:	mov	r3, #1
    8ef0:	ldr	r4, [sp]
    8ef4:	add	sp, sp, #4
    8ef8:	str	r3, [r0, #96]	; 0x60
    8efc:	pop	{pc}		; (ldr pc, [sp], #4)

00008f00 <lell_packet_ref@@Base>:
    8f00:	ldr	r3, [r0, #96]	; 0x60
    8f04:	add	r3, r3, #1
    8f08:	str	r3, [r0, #96]	; 0x60
    8f0c:	bx	lr

00008f10 <lell_packet_unref@@Base>:
    8f10:	ldr	r3, [r0, #96]	; 0x60
    8f14:	subs	r3, r3, #1
    8f18:	beq	8f24 <lell_packet_unref@@Base+0x14>
    8f1c:	str	r3, [r0, #96]	; 0x60
    8f20:	bx	lr
    8f24:	b	2108 <free@plt>

00008f28 <lell_packet_is_data@@Base>:
    8f28:	ldrb	r0, [r0, #68]	; 0x44
    8f2c:	cmp	r0, #36	; 0x24
    8f30:	movhi	r0, #0
    8f34:	movls	r0, #1
    8f38:	bx	lr

00008f3c <lell_allocate_and_decode@@Base>:
    8f3c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    8f40:	mov	r4, r0
    8f44:	mov	r5, r1
    8f48:	strd	r6, [sp, #8]
    8f4c:	mov	r6, r3
    8f50:	mov	r7, r2
    8f54:	str	r8, [sp, #16]
    8f58:	str	lr, [sp, #20]
    8f5c:	bl	23c0 <lell_packet_new@plt>
    8f60:	mov	lr, r0
    8f64:	mov	ip, r4
    8f68:	str	r0, [r6]
    8f6c:	add	r4, r4, #64	; 0x40
    8f70:	ldr	r0, [ip]
    8f74:	add	ip, ip, #16
    8f78:	add	lr, lr, #16
    8f7c:	ldr	r1, [ip, #-12]
    8f80:	ldr	r2, [ip, #-8]
    8f84:	ldr	r3, [ip, #-4]
    8f88:	cmp	ip, r4
    8f8c:	str	r0, [lr, #-16]
    8f90:	str	r1, [lr, #-12]
    8f94:	str	r2, [lr, #-8]
    8f98:	str	r3, [lr, #-4]
    8f9c:	bne	8f70 <lell_allocate_and_decode@@Base+0x34>
    8fa0:	movw	r3, #2402	; 0x962
    8fa4:	ldr	r1, [r6]
    8fa8:	cmp	r5, r3
    8fac:	beq	9100 <lell_allocate_and_decode@@Base+0x1c4>
    8fb0:	movw	r3, #2425	; 0x979
    8fb4:	cmp	r5, r3
    8fb8:	bhi	9098 <lell_allocate_and_decode@@Base+0x15c>
    8fbc:	sub	r5, r5, #2400	; 0x960
    8fc0:	sub	r3, r5, #4
    8fc4:	add	r3, r3, r3, lsr #31
    8fc8:	ubfx	r3, r3, #1, #8
    8fcc:	sub	r5, r5, #2
    8fd0:	ldr	r2, [r1]
    8fd4:	mov	r0, r1
    8fd8:	add	r5, r5, r5, lsr #31
    8fdc:	asr	r5, r5, #1
    8fe0:	str	r2, [r1, #64]	; 0x40
    8fe4:	strb	r3, [r1, #68]	; 0x44
    8fe8:	strb	r5, [r1, #69]	; 0x45
    8fec:	str	r7, [r1, #76]	; 0x4c
    8ff0:	bl	20d8 <lell_packet_is_data@plt>
    8ff4:	cmp	r0, #0
    8ff8:	bne	90cc <lell_allocate_and_decode@@Base+0x190>
    8ffc:	ldr	ip, [r6]
    9000:	movw	r4, #48854	; 0xbed6
    9004:	movt	r4, #36489	; 0x8e89
    9008:	ldr	r3, [ip, #64]	; 0x40
    900c:	ldrb	r2, [ip, #4]
    9010:	ldrb	lr, [ip, #100]	; 0x64
    9014:	sub	r1, r3, r4
    9018:	ldrb	r5, [ip, #5]
    901c:	clz	r1, r1
    9020:	lsr	r1, r1, #5
    9024:	and	r6, r2, #15
    9028:	ubfx	r7, r2, #6, #1
    902c:	bfi	lr, r1, #0, #1
    9030:	strb	r6, [ip, #80]	; 0x50
    9034:	lsr	r1, r2, #7
    9038:	and	r5, r5, #63	; 0x3f
    903c:	ands	r2, lr, #1
    9040:	str	r5, [ip, #72]	; 0x48
    9044:	str	r7, [ip, #84]	; 0x54
    9048:	str	r1, [ip, #88]	; 0x58
    904c:	strb	lr, [ip, #100]	; 0x64
    9050:	bne	9080 <lell_allocate_and_decode@@Base+0x144>
    9054:	cmp	r3, r4
    9058:	eor	r3, r3, r4
    905c:	beq	9124 <lell_allocate_and_decode@@Base+0x1e8>
    9060:	sub	r1, r3, #1
    9064:	add	r2, r2, #1
    9068:	ands	r3, r3, r1
    906c:	uxtb	r2, r2
    9070:	bne	9060 <lell_allocate_and_decode@@Base+0x124>
    9074:	cmp	r2, #1
    9078:	movne	r0, #32
    907c:	moveq	r0, #1
    9080:	str	r0, [ip, #92]	; 0x5c
    9084:	ldrd	r4, [sp]
    9088:	ldrd	r6, [sp, #8]
    908c:	ldr	r8, [sp, #16]
    9090:	add	sp, sp, #20
    9094:	pop	{pc}		; (ldr pc, [sp], #4)
    9098:	movw	r3, #2426	; 0x97a
    909c:	cmp	r5, r3
    90a0:	beq	9118 <lell_allocate_and_decode@@Base+0x1dc>
    90a4:	cmp	r5, #2480	; 0x9b0
    90a8:	bcs	910c <lell_allocate_and_decode@@Base+0x1d0>
    90ac:	sub	r3, r5, #2416	; 0x970
    90b0:	sub	r5, r5, #2400	; 0x960
    90b4:	sub	r3, r3, #12
    90b8:	add	r3, r3, r3, lsr #31
    90bc:	asr	r3, r3, #1
    90c0:	add	r3, r3, #11
    90c4:	uxtb	r3, r3
    90c8:	b	8fcc <lell_allocate_and_decode@@Base+0x90>
    90cc:	ldr	r4, [r6]
    90d0:	ldrb	r3, [r4, #5]
    90d4:	ldr	r0, [r4, #64]	; 0x40
    90d8:	and	r3, r3, #31
    90dc:	str	r3, [r4, #72]	; 0x48
    90e0:	bl	8188 <btbb_process_packet@@Base+0x1a0>
    90e4:	ldrb	r2, [r4, #100]	; 0x64
    90e8:	clz	r3, r0
    90ec:	lsr	r3, r3, #5
    90f0:	str	r0, [r4, #92]	; 0x5c
    90f4:	bfi	r2, r3, #0, #1
    90f8:	strb	r2, [r4, #100]	; 0x64
    90fc:	b	9084 <lell_allocate_and_decode@@Base+0x148>
    9100:	mov	r3, #37	; 0x25
    9104:	mov	r5, #2
    9108:	b	8fcc <lell_allocate_and_decode@@Base+0x90>
    910c:	sub	r5, r5, #2400	; 0x960
    9110:	mov	r3, #39	; 0x27
    9114:	b	8fcc <lell_allocate_and_decode@@Base+0x90>
    9118:	mov	r3, #38	; 0x26
    911c:	mov	r5, #26
    9120:	b	8fcc <lell_allocate_and_decode@@Base+0x90>
    9124:	mov	r0, #32
    9128:	b	9080 <lell_allocate_and_decode@@Base+0x144>

0000912c <lell_get_access_address@@Base>:
    912c:	ldr	r0, [r0, #64]	; 0x40
    9130:	bx	lr

00009134 <lell_get_access_address_offenses@@Base>:
    9134:	ldr	r0, [r0, #92]	; 0x5c
    9138:	bx	lr

0000913c <lell_get_channel_index@@Base>:
    913c:	ldrb	r0, [r0, #68]	; 0x44
    9140:	bx	lr

00009144 <lell_get_channel_k@@Base>:
    9144:	ldrb	r0, [r0, #69]	; 0x45
    9148:	bx	lr

0000914c <lell_get_adv_type_str@@Base>:
    914c:	str	r4, [sp, #-8]!
    9150:	mov	r4, r0
    9154:	str	lr, [sp, #4]
    9158:	bl	20d8 <lell_packet_is_data@plt>
    915c:	cmp	r0, #0
    9160:	movne	r0, #0
    9164:	bne	917c <lell_get_adv_type_str@@Base+0x30>
    9168:	ldrb	r3, [r4, #80]	; 0x50
    916c:	cmp	r3, #6
    9170:	bls	9188 <lell_get_adv_type_str@@Base+0x3c>
    9174:	ldr	r0, [pc, #36]	; 91a0 <lell_get_adv_type_str@@Base+0x54>
    9178:	add	r0, pc, r0
    917c:	ldr	r4, [sp]
    9180:	add	sp, sp, #4
    9184:	pop	{pc}		; (ldr pc, [sp], #4)
    9188:	ldr	r2, [pc, #20]	; 91a4 <lell_get_adv_type_str@@Base+0x58>
    918c:	ldr	r4, [sp]
    9190:	add	sp, sp, #4
    9194:	add	r2, pc, r2
    9198:	ldr	r0, [r2, r3, lsl #2]
    919c:	pop	{pc}		; (ldr pc, [sp], #4)
    91a0:	ldrdeq	fp, [r0], -ip
    91a4:	ldrdeq	r1, [r2], -ip

000091a8 <lell_print@@Base>:
    91a8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    91ac:	mov	r4, r0
    91b0:	strd	r6, [sp, #8]
    91b4:	strd	r8, [sp, #16]
    91b8:	str	sl, [sp, #24]
    91bc:	str	lr, [sp, #28]
    91c0:	bl	20d8 <lell_packet_is_data@plt>
    91c4:	cmp	r0, #0
    91c8:	ldrb	r3, [r4, #100]	; 0x64
    91cc:	beq	930c <lell_print@@Base+0x164>
    91d0:	ldrb	r5, [r4, #4]
    91d4:	tst	r3, #1
    91d8:	ldr	r1, [r4, #64]	; 0x40
    91dc:	and	r5, r5, #3
    91e0:	bne	9390 <lell_print@@Base+0x1e8>
    91e4:	ldr	r2, [pc, #1864]	; 9934 <lell_print@@Base+0x78c>
    91e8:	add	r2, pc, r2
    91ec:	ldr	r0, [pc, #1860]	; 9938 <lell_print@@Base+0x790>
    91f0:	ldr	r3, [r4, #72]	; 0x48
    91f4:	ldr	r6, [pc, #1856]	; 993c <lell_print@@Base+0x794>
    91f8:	add	r0, pc, r0
    91fc:	bl	20c0 <printf@plt>
    9200:	ldr	r0, [pc, #1848]	; 9940 <lell_print@@Base+0x798>
    9204:	ldrb	r1, [r4, #68]	; 0x44
    9208:	add	r6, pc, r6
    920c:	add	r0, pc, r0
    9210:	bl	20c0 <printf@plt>
    9214:	ldr	r0, [pc, #1832]	; 9944 <lell_print@@Base+0x79c>
    9218:	add	r3, r6, r5, lsl #2
    921c:	mov	r1, r5
    9220:	ldr	r2, [r3, #28]
    9224:	add	r0, pc, r0
    9228:	bl	20c0 <printf@plt>
    922c:	ldrb	r1, [r4, #4]
    9230:	ldr	r0, [pc, #1808]	; 9948 <lell_print@@Base+0x7a0>
    9234:	ubfx	r3, r1, #4, #1
    9238:	ubfx	r2, r1, #3, #1
    923c:	add	r0, pc, r0
    9240:	ubfx	r1, r1, #2, #1
    9244:	bl	20c0 <printf@plt>
    9248:	cmp	r5, #3
    924c:	beq	98ac <lell_print@@Base+0x704>
    9250:	mov	r0, #10
    9254:	bl	2390 <putchar@plt>
    9258:	ldr	r0, [pc, #1772]	; 994c <lell_print@@Base+0x7a4>
    925c:	add	r0, pc, r0
    9260:	bl	20c0 <printf@plt>
    9264:	ldr	r3, [r4, #72]	; 0x48
    9268:	cmp	r3, #0
    926c:	ble	92a8 <lell_print@@Base+0x100>
    9270:	ldr	r7, [pc, #1752]	; 9950 <lell_print@@Base+0x7a8>
    9274:	add	r5, r4, #5
    9278:	add	r7, pc, r7
    927c:	ldrb	r1, [r5, #1]
    9280:	mov	r0, r7
    9284:	add	r6, r5, #1
    9288:	bl	20c0 <printf@plt>
    928c:	ldr	r2, [r4, #72]	; 0x48
    9290:	add	r3, r5, #2
    9294:	mov	r5, r6
    9298:	sub	r3, r3, r4
    929c:	add	r2, r2, #5
    92a0:	cmp	r2, r3
    92a4:	bge	927c <lell_print@@Base+0xd4>
    92a8:	mov	r0, #10
    92ac:	ldr	r6, [pc, #1696]	; 9954 <lell_print@@Base+0x7ac>
    92b0:	mov	r5, #0
    92b4:	bl	2390 <putchar@plt>
    92b8:	ldr	r0, [pc, #1688]	; 9958 <lell_print@@Base+0x7b0>
    92bc:	add	r6, pc, r6
    92c0:	add	r0, pc, r0
    92c4:	bl	20c0 <printf@plt>
    92c8:	ldr	r2, [r4, #72]	; 0x48
    92cc:	add	r3, r4, r5
    92d0:	mov	r0, r6
    92d4:	add	r5, r5, #1
    92d8:	add	r3, r3, r2
    92dc:	ldrb	r1, [r3, #6]
    92e0:	bl	20c0 <printf@plt>
    92e4:	cmp	r5, #3
    92e8:	bne	92c8 <lell_print@@Base+0x120>
    92ec:	mov	r0, #10
    92f0:	ldrd	r4, [sp]
    92f4:	ldrd	r6, [sp, #8]
    92f8:	ldrd	r8, [sp, #16]
    92fc:	ldr	sl, [sp, #24]
    9300:	ldr	lr, [sp, #28]
    9304:	add	sp, sp, #32
    9308:	b	2390 <putchar@plt>
    930c:	tst	r3, #1
    9310:	ldr	r1, [r4, #64]	; 0x40
    9314:	bne	9384 <lell_print@@Base+0x1dc>
    9318:	ldr	r2, [pc, #1596]	; 995c <lell_print@@Base+0x7b4>
    931c:	add	r2, pc, r2
    9320:	ldr	r0, [pc, #1592]	; 9960 <lell_print@@Base+0x7b8>
    9324:	ldr	r3, [r4, #72]	; 0x48
    9328:	add	r0, pc, r0
    932c:	bl	20c0 <printf@plt>
    9330:	ldr	r0, [pc, #1580]	; 9964 <lell_print@@Base+0x7bc>
    9334:	ldrb	r1, [r4, #68]	; 0x44
    9338:	add	r0, pc, r0
    933c:	bl	20c0 <printf@plt>
    9340:	mov	r0, r4
    9344:	bl	2264 <lell_get_adv_type_str@plt>
    9348:	mov	r1, r0
    934c:	ldr	r0, [pc, #1556]	; 9968 <lell_print@@Base+0x7c0>
    9350:	add	r0, pc, r0
    9354:	bl	20c0 <printf@plt>
    9358:	ldrb	r3, [r4, #80]	; 0x50
    935c:	cmp	r3, #6
    9360:	addls	pc, pc, r3, lsl #2
    9364:	b	9250 <lell_print@@Base+0xa8>
    9368:	b	9734 <lell_print@@Base+0x58c>
    936c:	b	97f0 <lell_print@@Base+0x648>
    9370:	b	9734 <lell_print@@Base+0x58c>
    9374:	b	9678 <lell_print@@Base+0x4d0>
    9378:	b	95b0 <lell_print@@Base+0x408>
    937c:	b	939c <lell_print@@Base+0x1f4>
    9380:	b	9734 <lell_print@@Base+0x58c>
    9384:	ldr	r2, [pc, #1504]	; 996c <lell_print@@Base+0x7c4>
    9388:	add	r2, pc, r2
    938c:	b	9320 <lell_print@@Base+0x178>
    9390:	ldr	r2, [pc, #1496]	; 9970 <lell_print@@Base+0x7c8>
    9394:	add	r2, pc, r2
    9398:	b	91ec <lell_print@@Base+0x44>
    939c:	ldr	r1, [pc, #1488]	; 9974 <lell_print@@Base+0x7cc>
    93a0:	mov	r5, r4
    93a4:	add	r6, r4, #6
    93a8:	ldr	r0, [pc, #1480]	; 9978 <lell_print@@Base+0x7d0>
    93ac:	ldr	r7, [pc, #1480]	; 997c <lell_print@@Base+0x7d4>
    93b0:	add	r1, pc, r1
    93b4:	ldrb	r2, [r5, #11]!
    93b8:	add	r0, pc, r0
    93bc:	ldr	r8, [r4, #84]	; 0x54
    93c0:	add	r7, pc, r7
    93c4:	bl	20c0 <printf@plt>
    93c8:	ldrb	r1, [r5, #-1]!
    93cc:	mov	r0, r7
    93d0:	bl	20c0 <printf@plt>
    93d4:	cmp	r6, r5
    93d8:	bne	93c8 <lell_print@@Base+0x220>
    93dc:	cmp	r8, #0
    93e0:	bne	98f8 <lell_print@@Base+0x750>
    93e4:	ldr	r1, [pc, #1428]	; 9980 <lell_print@@Base+0x7d8>
    93e8:	add	r1, pc, r1
    93ec:	ldr	r0, [pc, #1424]	; 9984 <lell_print@@Base+0x7dc>
    93f0:	mov	r5, r4
    93f4:	add	r6, r4, #12
    93f8:	ldr	r7, [pc, #1416]	; 9988 <lell_print@@Base+0x7e0>
    93fc:	add	r0, pc, r0
    9400:	bl	20c0 <printf@plt>
    9404:	ldr	r1, [pc, #1408]	; 998c <lell_print@@Base+0x7e4>
    9408:	add	r7, pc, r7
    940c:	ldr	r0, [pc, #1404]	; 9990 <lell_print@@Base+0x7e8>
    9410:	ldrb	r2, [r5, #17]!
    9414:	add	r1, pc, r1
    9418:	ldr	r8, [r4, #88]	; 0x58
    941c:	add	r0, pc, r0
    9420:	bl	20c0 <printf@plt>
    9424:	ldrb	r1, [r5, #-1]!
    9428:	mov	r0, r7
    942c:	bl	20c0 <printf@plt>
    9430:	cmp	r6, r5
    9434:	bne	9424 <lell_print@@Base+0x27c>
    9438:	cmp	r8, #0
    943c:	bne	991c <lell_print@@Base+0x774>
    9440:	ldr	r1, [pc, #1356]	; 9994 <lell_print@@Base+0x7ec>
    9444:	add	r1, pc, r1
    9448:	ldr	r0, [pc, #1352]	; 9998 <lell_print@@Base+0x7f0>
    944c:	add	r5, r4, #34	; 0x22
    9450:	add	r7, r4, #39	; 0x27
    9454:	ldr	r6, [pc, #1344]	; 999c <lell_print@@Base+0x7f4>
    9458:	add	r0, pc, r0
    945c:	bl	20c0 <printf@plt>
    9460:	ldr	r1, [pc, #1336]	; 99a0 <lell_print@@Base+0x7f8>
    9464:	add	r6, pc, r6
    9468:	ldr	r0, [pc, #1332]	; 99a4 <lell_print@@Base+0x7fc>
    946c:	ldr	r2, [r4, #18]
    9470:	add	r1, pc, r1
    9474:	add	r0, pc, r0
    9478:	bl	20c0 <printf@plt>
    947c:	ldrb	r3, [r4, #23]
    9480:	ldrb	r0, [r4, #24]
    9484:	ldrb	r2, [r4, #22]
    9488:	lsl	r3, r3, #8
    948c:	ldr	r1, [pc, #1300]	; 99a8 <lell_print@@Base+0x800>
    9490:	orr	r3, r3, r0, lsl #16
    9494:	ldr	r0, [pc, #1296]	; 99ac <lell_print@@Base+0x804>
    9498:	orr	r2, r3, r2
    949c:	add	r1, pc, r1
    94a0:	add	r0, pc, r0
    94a4:	bl	20c0 <printf@plt>
    94a8:	ldrb	r3, [r4, #25]
    94ac:	ldr	r1, [pc, #1276]	; 99b0 <lell_print@@Base+0x808>
    94b0:	ldr	r0, [pc, #1276]	; 99b4 <lell_print@@Base+0x80c>
    94b4:	mov	r2, r3
    94b8:	add	r1, pc, r1
    94bc:	add	r0, pc, r0
    94c0:	bl	20c0 <printf@plt>
    94c4:	ldrb	r2, [r4, #27]
    94c8:	mov	r0, r6
    94cc:	ldrb	r3, [r4, #26]
    94d0:	ldr	r1, [pc, #1248]	; 99b8 <lell_print@@Base+0x810>
    94d4:	orr	r3, r3, r2, lsl #8
    94d8:	add	r1, pc, r1
    94dc:	mov	r2, r3
    94e0:	bl	20c0 <printf@plt>
    94e4:	ldrb	r2, [r4, #29]
    94e8:	mov	r0, r6
    94ec:	ldrb	r3, [r4, #28]
    94f0:	ldr	r1, [pc, #1220]	; 99bc <lell_print@@Base+0x814>
    94f4:	orr	r3, r3, r2, lsl #8
    94f8:	add	r1, pc, r1
    94fc:	mov	r2, r3
    9500:	bl	20c0 <printf@plt>
    9504:	ldrb	r2, [r4, #31]
    9508:	mov	r0, r6
    950c:	ldrb	r3, [r4, #30]
    9510:	ldr	r1, [pc, #1192]	; 99c0 <lell_print@@Base+0x818>
    9514:	orr	r3, r3, r2, lsl #8
    9518:	add	r1, pc, r1
    951c:	mov	r2, r3
    9520:	bl	20c0 <printf@plt>
    9524:	ldrb	r2, [r4, #33]	; 0x21
    9528:	mov	r0, r6
    952c:	ldrb	r3, [r4, #32]
    9530:	ldr	r1, [pc, #1164]	; 99c4 <lell_print@@Base+0x81c>
    9534:	ldr	r6, [pc, #1164]	; 99c8 <lell_print@@Base+0x820>
    9538:	orr	r3, r3, r2, lsl #8
    953c:	add	r1, pc, r1
    9540:	mov	r2, r3
    9544:	bl	20c0 <printf@plt>
    9548:	ldr	r0, [pc, #1148]	; 99cc <lell_print@@Base+0x824>
    954c:	add	r6, pc, r6
    9550:	add	r0, pc, r0
    9554:	bl	20c0 <printf@plt>
    9558:	ldrb	r1, [r5], #1
    955c:	mov	r0, r6
    9560:	bl	20c0 <printf@plt>
    9564:	cmp	r7, r5
    9568:	bne	9558 <lell_print@@Base+0x3b0>
    956c:	mov	r0, #10
    9570:	bl	2390 <putchar@plt>
    9574:	ldrb	r1, [r4, #39]	; 0x27
    9578:	ldr	r0, [pc, #1104]	; 99d0 <lell_print@@Base+0x828>
    957c:	and	r1, r1, #31
    9580:	add	r0, pc, r0
    9584:	bl	20c0 <printf@plt>
    9588:	ldrb	r1, [r4, #39]	; 0x27
    958c:	ldr	r3, [pc, #1088]	; 99d4 <lell_print@@Base+0x82c>
    9590:	ldr	r0, [pc, #1088]	; 99d8 <lell_print@@Base+0x830>
    9594:	lsr	r1, r1, #5
    9598:	add	r3, pc, r3
    959c:	add	r3, r3, r1, lsl #2
    95a0:	add	r0, pc, r0
    95a4:	ldr	r2, [r3, #128]	; 0x80
    95a8:	bl	20c0 <printf@plt>
    95ac:	b	9250 <lell_print@@Base+0xa8>
    95b0:	mov	r5, r4
    95b4:	ldr	r1, [pc, #1056]	; 99dc <lell_print@@Base+0x834>
    95b8:	add	r8, r4, #6
    95bc:	ldr	r0, [pc, #1052]	; 99e0 <lell_print@@Base+0x838>
    95c0:	ldrb	r2, [r5, #11]!
    95c4:	add	r1, pc, r1
    95c8:	ldr	r7, [pc, #1044]	; 99e4 <lell_print@@Base+0x83c>
    95cc:	add	r0, pc, r0
    95d0:	ldr	r9, [r4, #84]	; 0x54
    95d4:	mov	r6, r5
    95d8:	add	r7, pc, r7
    95dc:	bl	20c0 <printf@plt>
    95e0:	ldrb	r1, [r6, #-1]!
    95e4:	mov	r0, r7
    95e8:	bl	20c0 <printf@plt>
    95ec:	cmp	r8, r6
    95f0:	bne	95e0 <lell_print@@Base+0x438>
    95f4:	cmp	r9, #0
    95f8:	bne	98e0 <lell_print@@Base+0x738>
    95fc:	ldr	r1, [pc, #996]	; 99e8 <lell_print@@Base+0x840>
    9600:	add	r1, pc, r1
    9604:	ldr	r0, [pc, #992]	; 99ec <lell_print@@Base+0x844>
    9608:	ldr	r7, [pc, #992]	; 99f0 <lell_print@@Base+0x848>
    960c:	add	r0, pc, r0
    9610:	bl	20c0 <printf@plt>
    9614:	ldr	r0, [pc, #984]	; 99f4 <lell_print@@Base+0x84c>
    9618:	add	r7, pc, r7
    961c:	add	r0, pc, r0
    9620:	bl	20c0 <printf@plt>
    9624:	ldr	r3, [r4, #72]	; 0x48
    9628:	cmp	r3, #6
    962c:	ble	965c <lell_print@@Base+0x4b4>
    9630:	ldrb	r1, [r5, #1]
    9634:	mov	r0, r7
    9638:	add	r6, r5, #1
    963c:	bl	20c0 <printf@plt>
    9640:	ldr	r2, [r4, #72]	; 0x48
    9644:	sub	r3, r5, #10
    9648:	mov	r5, r6
    964c:	sub	r3, r3, r4
    9650:	sub	r2, r2, #6
    9654:	cmp	r2, r3
    9658:	bgt	9630 <lell_print@@Base+0x488>
    965c:	mov	r0, #10
    9660:	bl	2390 <putchar@plt>
    9664:	ldr	r1, [r4, #72]	; 0x48
    9668:	add	r0, r4, #12
    966c:	sub	r1, r1, #6
    9670:	bl	85cc <btbb_process_packet@@Base+0x5e4>
    9674:	b	9250 <lell_print@@Base+0xa8>
    9678:	ldr	r1, [pc, #888]	; 99f8 <lell_print@@Base+0x850>
    967c:	mov	r5, r4
    9680:	add	r6, r4, #6
    9684:	ldr	r0, [pc, #880]	; 99fc <lell_print@@Base+0x854>
    9688:	ldr	r7, [pc, #880]	; 9a00 <lell_print@@Base+0x858>
    968c:	add	r1, pc, r1
    9690:	ldrb	r2, [r5, #11]!
    9694:	add	r0, pc, r0
    9698:	ldr	r8, [r4, #84]	; 0x54
    969c:	add	r7, pc, r7
    96a0:	bl	20c0 <printf@plt>
    96a4:	ldrb	r1, [r5, #-1]!
    96a8:	mov	r0, r7
    96ac:	bl	20c0 <printf@plt>
    96b0:	cmp	r6, r5
    96b4:	bne	96a4 <lell_print@@Base+0x4fc>
    96b8:	cmp	r8, #0
    96bc:	bne	98ec <lell_print@@Base+0x744>
    96c0:	ldr	r1, [pc, #828]	; 9a04 <lell_print@@Base+0x85c>
    96c4:	add	r1, pc, r1
    96c8:	ldr	r0, [pc, #824]	; 9a08 <lell_print@@Base+0x860>
    96cc:	mov	r5, r4
    96d0:	add	r6, r4, #12
    96d4:	ldr	r7, [pc, #816]	; 9a0c <lell_print@@Base+0x864>
    96d8:	add	r0, pc, r0
    96dc:	bl	20c0 <printf@plt>
    96e0:	ldr	r1, [pc, #808]	; 9a10 <lell_print@@Base+0x868>
    96e4:	add	r7, pc, r7
    96e8:	ldr	r0, [pc, #804]	; 9a14 <lell_print@@Base+0x86c>
    96ec:	ldrb	r2, [r5, #17]!
    96f0:	add	r1, pc, r1
    96f4:	ldr	r8, [r4, #88]	; 0x58
    96f8:	add	r0, pc, r0
    96fc:	bl	20c0 <printf@plt>
    9700:	ldrb	r1, [r5, #-1]!
    9704:	mov	r0, r7
    9708:	bl	20c0 <printf@plt>
    970c:	cmp	r6, r5
    9710:	bne	9700 <lell_print@@Base+0x558>
    9714:	cmp	r8, #0
    9718:	bne	9928 <lell_print@@Base+0x780>
    971c:	ldr	r1, [pc, #756]	; 9a18 <lell_print@@Base+0x870>
    9720:	add	r1, pc, r1
    9724:	ldr	r0, [pc, #752]	; 9a1c <lell_print@@Base+0x874>
    9728:	add	r0, pc, r0
    972c:	bl	20c0 <printf@plt>
    9730:	b	9250 <lell_print@@Base+0xa8>
    9734:	mov	r5, r4
    9738:	ldr	r1, [pc, #736]	; 9a20 <lell_print@@Base+0x878>
    973c:	add	r8, r4, #6
    9740:	ldr	r0, [pc, #732]	; 9a24 <lell_print@@Base+0x87c>
    9744:	ldrb	r2, [r5, #11]!
    9748:	add	r1, pc, r1
    974c:	ldr	r7, [pc, #724]	; 9a28 <lell_print@@Base+0x880>
    9750:	add	r0, pc, r0
    9754:	ldr	r9, [r4, #84]	; 0x54
    9758:	mov	r6, r5
    975c:	add	r7, pc, r7
    9760:	bl	20c0 <printf@plt>
    9764:	ldrb	r1, [r6, #-1]!
    9768:	mov	r0, r7
    976c:	bl	20c0 <printf@plt>
    9770:	cmp	r8, r6
    9774:	bne	9764 <lell_print@@Base+0x5bc>
    9778:	cmp	r9, #0
    977c:	bne	98d4 <lell_print@@Base+0x72c>
    9780:	ldr	r1, [pc, #676]	; 9a2c <lell_print@@Base+0x884>
    9784:	add	r1, pc, r1
    9788:	ldr	r0, [pc, #672]	; 9a30 <lell_print@@Base+0x888>
    978c:	add	r0, pc, r0
    9790:	bl	20c0 <printf@plt>
    9794:	ldr	r3, [r4, #72]	; 0x48
    9798:	cmp	r3, #6
    979c:	ble	9250 <lell_print@@Base+0xa8>
    97a0:	ldr	r0, [pc, #652]	; 9a34 <lell_print@@Base+0x88c>
    97a4:	ldr	r6, [pc, #652]	; 9a38 <lell_print@@Base+0x890>
    97a8:	add	r0, pc, r0
    97ac:	bl	20c0 <printf@plt>
    97b0:	ldr	r3, [r4, #72]	; 0x48
    97b4:	add	r6, pc, r6
    97b8:	cmp	r3, #6
    97bc:	ble	965c <lell_print@@Base+0x4b4>
    97c0:	ldrb	r1, [r5, #1]
    97c4:	mov	r0, r6
    97c8:	add	r7, r5, #1
    97cc:	bl	20c0 <printf@plt>
    97d0:	ldr	r2, [r4, #72]	; 0x48
    97d4:	sub	r3, r5, #10
    97d8:	mov	r5, r7
    97dc:	sub	r3, r3, r4
    97e0:	sub	r2, r2, #6
    97e4:	cmp	r2, r3
    97e8:	bgt	97c0 <lell_print@@Base+0x618>
    97ec:	b	965c <lell_print@@Base+0x4b4>
    97f0:	ldr	r1, [pc, #580]	; 9a3c <lell_print@@Base+0x894>
    97f4:	mov	r5, r4
    97f8:	add	r6, r4, #6
    97fc:	ldr	r0, [pc, #572]	; 9a40 <lell_print@@Base+0x898>
    9800:	ldr	r7, [pc, #572]	; 9a44 <lell_print@@Base+0x89c>
    9804:	add	r1, pc, r1
    9808:	ldrb	r2, [r5, #11]!
    980c:	add	r0, pc, r0
    9810:	ldr	r8, [r4, #84]	; 0x54
    9814:	add	r7, pc, r7
    9818:	bl	20c0 <printf@plt>
    981c:	ldrb	r1, [r5, #-1]!
    9820:	mov	r0, r7
    9824:	bl	20c0 <printf@plt>
    9828:	cmp	r6, r5
    982c:	bne	981c <lell_print@@Base+0x674>
    9830:	cmp	r8, #0
    9834:	bne	9904 <lell_print@@Base+0x75c>
    9838:	ldr	r1, [pc, #520]	; 9a48 <lell_print@@Base+0x8a0>
    983c:	add	r1, pc, r1
    9840:	ldr	r0, [pc, #516]	; 9a4c <lell_print@@Base+0x8a4>
    9844:	mov	r5, r4
    9848:	add	r6, r4, #12
    984c:	ldr	r7, [pc, #508]	; 9a50 <lell_print@@Base+0x8a8>
    9850:	add	r0, pc, r0
    9854:	bl	20c0 <printf@plt>
    9858:	ldr	r1, [pc, #500]	; 9a54 <lell_print@@Base+0x8ac>
    985c:	add	r7, pc, r7
    9860:	ldr	r0, [pc, #496]	; 9a58 <lell_print@@Base+0x8b0>
    9864:	ldrb	r2, [r5, #17]!
    9868:	add	r1, pc, r1
    986c:	ldr	r8, [r4, #88]	; 0x58
    9870:	add	r0, pc, r0
    9874:	bl	20c0 <printf@plt>
    9878:	ldrb	r1, [r5, #-1]!
    987c:	mov	r0, r7
    9880:	bl	20c0 <printf@plt>
    9884:	cmp	r6, r5
    9888:	bne	9878 <lell_print@@Base+0x6d0>
    988c:	cmp	r8, #0
    9890:	bne	9910 <lell_print@@Base+0x768>
    9894:	ldr	r1, [pc, #448]	; 9a5c <lell_print@@Base+0x8b4>
    9898:	add	r1, pc, r1
    989c:	ldr	r0, [pc, #444]	; 9a60 <lell_print@@Base+0x8b8>
    98a0:	add	r0, pc, r0
    98a4:	bl	20c0 <printf@plt>
    98a8:	b	9250 <lell_print@@Base+0xa8>
    98ac:	ldrb	r3, [r4, #6]
    98b0:	ldr	r0, [pc, #428]	; 9a64 <lell_print@@Base+0x8bc>
    98b4:	cmp	r3, #20
    98b8:	mov	r1, r3
    98bc:	movge	r3, #20
    98c0:	add	r6, r6, r3, lsl #2
    98c4:	add	r0, pc, r0
    98c8:	ldr	r2, [r6, #44]	; 0x2c
    98cc:	bl	20c0 <printf@plt>
    98d0:	b	9250 <lell_print@@Base+0xa8>
    98d4:	ldr	r1, [pc, #396]	; 9a68 <lell_print@@Base+0x8c0>
    98d8:	add	r1, pc, r1
    98dc:	b	9788 <lell_print@@Base+0x5e0>
    98e0:	ldr	r1, [pc, #388]	; 9a6c <lell_print@@Base+0x8c4>
    98e4:	add	r1, pc, r1
    98e8:	b	9604 <lell_print@@Base+0x45c>
    98ec:	ldr	r1, [pc, #380]	; 9a70 <lell_print@@Base+0x8c8>
    98f0:	add	r1, pc, r1
    98f4:	b	96c8 <lell_print@@Base+0x520>
    98f8:	ldr	r1, [pc, #372]	; 9a74 <lell_print@@Base+0x8cc>
    98fc:	add	r1, pc, r1
    9900:	b	93ec <lell_print@@Base+0x244>
    9904:	ldr	r1, [pc, #364]	; 9a78 <lell_print@@Base+0x8d0>
    9908:	add	r1, pc, r1
    990c:	b	9840 <lell_print@@Base+0x698>
    9910:	ldr	r1, [pc, #356]	; 9a7c <lell_print@@Base+0x8d4>
    9914:	add	r1, pc, r1
    9918:	b	989c <lell_print@@Base+0x6f4>
    991c:	ldr	r1, [pc, #348]	; 9a80 <lell_print@@Base+0x8d8>
    9920:	add	r1, pc, r1
    9924:	b	9448 <lell_print@@Base+0x2a0>
    9928:	ldr	r1, [pc, #340]	; 9a84 <lell_print@@Base+0x8dc>
    992c:	add	r1, pc, r1
    9930:	b	9724 <lell_print@@Base+0x57c>
    9934:	andeq	fp, r0, ip, ror r3
    9938:	andeq	fp, r0, r4, lsl #7
    993c:	andeq	r1, r2, r8, ror #24
    9940:	muleq	r0, r4, r3
    9944:	muleq	r0, r4, r3
    9948:	muleq	r0, r0, r3
    994c:	strdeq	fp, [r0], -r8
    9950:	andeq	sl, r0, r8, asr #31
    9954:	andeq	sl, r0, r4, lsl #31
    9958:	andeq	fp, r0, r0, lsr #9
    995c:	andeq	fp, r0, r8, asr #4
    9960:	ldrdeq	fp, [r0], -ip
    9964:	andeq	fp, r0, r8, ror #4
    9968:	ldrdeq	fp, [r0], -ip
    996c:	ldrdeq	fp, [r0], -r4
    9970:	andeq	fp, r0, r8, asr #3
    9974:	andeq	fp, r0, r0, asr #5
    9978:	andeq	fp, r0, ip, lsl #5
    997c:	muleq	r0, r0, r2
    9980:	andeq	fp, r0, ip, lsl #3
    9984:	andeq	fp, r0, ip, asr r2
    9988:	andeq	fp, r0, r8, asr #4
    998c:	andeq	fp, r0, r8, lsr #4
    9990:	andeq	fp, r0, r8, lsr #4
    9994:	andeq	fp, r0, r0, lsr r1
    9998:	andeq	fp, r0, r0, lsl #4
    999c:	andeq	fp, r0, r8, lsl #5
    99a0:	andeq	fp, r0, r4, lsr #4
    99a4:	andeq	fp, r0, r8, lsr #4
    99a8:	andeq	fp, r0, ip, lsl #4
    99ac:	andeq	fp, r0, r4, lsl r2
    99b0:	andeq	fp, r0, r8, lsl #4
    99b4:	andeq	fp, r0, r0, lsl r2
    99b8:	andeq	fp, r0, r8, lsl #4
    99bc:	andeq	fp, r0, r8, lsl #4
    99c0:	strdeq	fp, [r0], -r4
    99c4:	ldrdeq	fp, [r0], -ip
    99c8:	strdeq	sl, [r0], -r4
    99cc:	ldrdeq	fp, [r0], -r4
    99d0:			; <UNDEFINED> instruction: 0x0000b1b0
    99d4:	ldrdeq	r1, [r2], -r8
    99d8:	andeq	fp, r0, r0, lsr #3
    99dc:	andeq	fp, r0, r8, ror r0
    99e0:	andeq	fp, r0, r8, ror r0
    99e4:	andeq	fp, r0, r8, ror r0
    99e8:	andeq	sl, r0, r4, ror pc
    99ec:	andeq	fp, r0, ip, asr #32
    99f0:	andeq	sl, r0, r8, lsr #24
    99f4:	andeq	fp, r0, r4, rrx
    99f8:	andeq	sl, r0, ip, ror #31
    99fc:			; <UNDEFINED> instruction: 0x0000afb0
    9a00:			; <UNDEFINED> instruction: 0x0000afb4
    9a04:			; <UNDEFINED> instruction: 0x0000aeb0
    9a08:	andeq	sl, r0, r0, lsl #31
    9a0c:	andeq	sl, r0, ip, ror #30
    9a10:	andeq	sl, r0, ip, asr #30
    9a14:	andeq	sl, r0, ip, asr #30
    9a18:	andeq	sl, r0, r4, asr lr
    9a1c:	andeq	sl, r0, r0, lsr pc
    9a20:	strdeq	sl, [r0], -r4
    9a24:	strdeq	sl, [r0], -r4
    9a28:	strdeq	sl, [r0], -r4
    9a2c:	strdeq	sl, [r0], -r0
    9a30:	andeq	sl, r0, ip, asr #29
    9a34:			; <UNDEFINED> instruction: 0x0000aeb8
    9a38:	andeq	sl, r0, ip, lsl #21
    9a3c:	andeq	sl, r0, r8, lsr lr
    9a40:	andeq	sl, r0, r8, lsr lr
    9a44:	andeq	sl, r0, ip, lsr lr
    9a48:	andeq	sl, r0, r8, lsr sp
    9a4c:	andeq	sl, r0, r8, lsl #28
    9a50:	strdeq	sl, [r0], -r4
    9a54:	andeq	sl, r0, r8, lsl #28
    9a58:	ldrdeq	sl, [r0], -r4
    9a5c:	ldrdeq	sl, [r0], -ip
    9a60:			; <UNDEFINED> instruction: 0x0000adb8
    9a64:	andeq	sl, r0, r8, lsr #26
    9a68:	muleq	r0, r4, ip
    9a6c:	andeq	sl, r0, r8, lsl #25
    9a70:	andeq	sl, r0, ip, ror ip
    9a74:	andeq	sl, r0, r0, ror ip
    9a78:	andeq	sl, r0, r4, ror #24
    9a7c:	andeq	sl, r0, r8, asr ip
    9a80:	andeq	sl, r0, ip, asr #24
    9a84:	andeq	sl, r0, r0, asr #24

00009a88 <bt_compidtostr@@Base>:
    9a88:	movw	r3, #519	; 0x207
    9a8c:	cmp	r0, r3
    9a90:	beq	fbbc <bt_compidtostr@@Base+0x6134>
    9a94:	cmp	r0, #520	; 0x208
    9a98:	bcs	9b20 <bt_compidtostr@@Base+0x98>
    9a9c:	movw	r3, #259	; 0x103
    9aa0:	cmp	r0, r3
    9aa4:	beq	fbb0 <bt_compidtostr@@Base+0x6128>
    9aa8:	cmp	r0, #260	; 0x104
    9aac:	bcs	a12c <bt_compidtostr@@Base+0x6a4>
    9ab0:	cmp	r0, #129	; 0x81
    9ab4:	beq	f608 <bt_compidtostr@@Base+0x5b80>
    9ab8:	bhi	9ce0 <bt_compidtostr@@Base+0x258>
    9abc:	cmp	r0, #64	; 0x40
    9ac0:	beq	f5fc <bt_compidtostr@@Base+0x5b74>
    9ac4:	bhi	9d44 <bt_compidtostr@@Base+0x2bc>
    9ac8:	cmp	r0, #31
    9acc:	beq	f524 <bt_compidtostr@@Base+0x5a9c>
    9ad0:	bls	9ca4 <bt_compidtostr@@Base+0x21c>
    9ad4:	cmp	r0, #47	; 0x2f
    9ad8:	beq	f440 <bt_compidtostr@@Base+0x59b8>
    9adc:	bls	9c20 <bt_compidtostr@@Base+0x198>
    9ae0:	cmp	r0, #55	; 0x37
    9ae4:	beq	f338 <bt_compidtostr@@Base+0x58b0>
    9ae8:	bls	9bfc <bt_compidtostr@@Base+0x174>
    9aec:	cmp	r0, #59	; 0x3b
    9af0:	beq	f014 <bt_compidtostr@@Base+0x558c>
    9af4:	bls	9be4 <bt_compidtostr@@Base+0x15c>
    9af8:	cmp	r0, #61	; 0x3d
    9afc:	beq	e9f0 <bt_compidtostr@@Base+0x4f68>
    9b00:	bcc	e510 <bt_compidtostr@@Base+0x4a88>
    9b04:	cmp	r0, #62	; 0x3e
    9b08:	beq	c99c <bt_compidtostr@@Base+0x2f14>
    9b0c:	cmp	r0, #63	; 0x3f
    9b10:	bne	9bd8 <bt_compidtostr@@Base+0x150>
    9b14:	ldr	r0, [pc, #4080]	; ab0c <bt_compidtostr@@Base+0x1084>
    9b18:	add	r0, pc, r0
    9b1c:	bx	lr
    9b20:	movw	r3, #779	; 0x30b
    9b24:	cmp	r0, r3
    9b28:	beq	fba4 <bt_compidtostr@@Base+0x611c>
    9b2c:	cmp	r0, #780	; 0x30c
    9b30:	bcs	b79c <bt_compidtostr@@Base+0x1d14>
    9b34:	movw	r3, #649	; 0x289
    9b38:	cmp	r0, r3
    9b3c:	beq	fb98 <bt_compidtostr@@Base+0x6110>
    9b40:	bhi	b71c <bt_compidtostr@@Base+0x1c94>
    9b44:	cmp	r0, #584	; 0x248
    9b48:	beq	f5a8 <bt_compidtostr@@Base+0x5b20>
    9b4c:	bhi	b390 <bt_compidtostr@@Base+0x1908>
    9b50:	movw	r3, #551	; 0x227
    9b54:	cmp	r0, r3
    9b58:	beq	f59c <bt_compidtostr@@Base+0x5b14>
    9b5c:	cmp	r0, #552	; 0x228
    9b60:	bcc	b338 <bt_compidtostr@@Base+0x18b0>
    9b64:	movw	r3, #567	; 0x237
    9b68:	cmp	r0, r3
    9b6c:	beq	f458 <bt_compidtostr@@Base+0x59d0>
    9b70:	cmp	r0, #568	; 0x238
    9b74:	bcc	c270 <bt_compidtostr@@Base+0x27e8>
    9b78:	movw	r3, #575	; 0x23f
    9b7c:	cmp	r0, r3
    9b80:	beq	f2c0 <bt_compidtostr@@Base+0x5838>
    9b84:	cmp	r0, #576	; 0x240
    9b88:	bcc	c240 <bt_compidtostr@@Base+0x27b8>
    9b8c:	movw	r3, #579	; 0x243
    9b90:	cmp	r0, r3
    9b94:	beq	efb4 <bt_compidtostr@@Base+0x552c>
    9b98:	cmp	r0, #580	; 0x244
    9b9c:	bcc	c31c <bt_compidtostr@@Base+0x2894>
    9ba0:	movw	r3, #581	; 0x245
    9ba4:	cmp	r0, r3
    9ba8:	beq	ea50 <bt_compidtostr@@Base+0x4fc8>
    9bac:	cmp	r0, #580	; 0x244
    9bb0:	bls	dda8 <bt_compidtostr@@Base+0x4320>
    9bb4:	movw	r3, #582	; 0x246
    9bb8:	cmp	r0, r3
    9bbc:	beq	dd9c <bt_compidtostr@@Base+0x4314>
    9bc0:	movw	r3, #583	; 0x247
    9bc4:	cmp	r0, r3
    9bc8:	bne	b05c <bt_compidtostr@@Base+0x15d4>
    9bcc:	ldr	r0, [pc, #3900]	; ab10 <bt_compidtostr@@Base+0x1088>
    9bd0:	add	r0, pc, r0
    9bd4:	bx	lr
    9bd8:	ldr	r0, [pc, #3892]	; ab14 <bt_compidtostr@@Base+0x108c>
    9bdc:	add	r0, pc, r0
    9be0:	bx	lr
    9be4:	cmp	r0, #57	; 0x39
    9be8:	beq	ddb4 <bt_compidtostr@@Base+0x432c>
    9bec:	bhi	dd90 <bt_compidtostr@@Base+0x4308>
    9bf0:	ldr	r0, [pc, #3872]	; ab18 <bt_compidtostr@@Base+0x1090>
    9bf4:	add	r0, pc, r0
    9bf8:	bx	lr
    9bfc:	cmp	r0, #51	; 0x33
    9c00:	beq	ef54 <bt_compidtostr@@Base+0x54cc>
    9c04:	bls	9c50 <bt_compidtostr@@Base+0x1c8>
    9c08:	cmp	r0, #53	; 0x35
    9c0c:	beq	ddcc <bt_compidtostr@@Base+0x4344>
    9c10:	bhi	dd84 <bt_compidtostr@@Base+0x42fc>
    9c14:	ldr	r0, [pc, #3840]	; ab1c <bt_compidtostr@@Base+0x1094>
    9c18:	add	r0, pc, r0
    9c1c:	bx	lr
    9c20:	cmp	r0, #39	; 0x27
    9c24:	beq	f1ac <bt_compidtostr@@Base+0x5724>
    9c28:	bls	9c80 <bt_compidtostr@@Base+0x1f8>
    9c2c:	cmp	r0, #43	; 0x2b
    9c30:	beq	ea68 <bt_compidtostr@@Base+0x4fe0>
    9c34:	bls	9c68 <bt_compidtostr@@Base+0x1e0>
    9c38:	cmp	r0, #45	; 0x2d
    9c3c:	beq	de44 <bt_compidtostr@@Base+0x43bc>
    9c40:	bhi	dd78 <bt_compidtostr@@Base+0x42f0>
    9c44:	ldr	r0, [pc, #3796]	; ab20 <bt_compidtostr@@Base+0x1098>
    9c48:	add	r0, pc, r0
    9c4c:	bx	lr
    9c50:	cmp	r0, #49	; 0x31
    9c54:	beq	de38 <bt_compidtostr@@Base+0x43b0>
    9c58:	bhi	dd6c <bt_compidtostr@@Base+0x42e4>
    9c5c:	ldr	r0, [pc, #3776]	; ab24 <bt_compidtostr@@Base+0x109c>
    9c60:	add	r0, pc, r0
    9c64:	bx	lr
    9c68:	cmp	r0, #41	; 0x29
    9c6c:	beq	de2c <bt_compidtostr@@Base+0x43a4>
    9c70:	bhi	dd60 <bt_compidtostr@@Base+0x42d8>
    9c74:	ldr	r0, [pc, #3756]	; ab28 <bt_compidtostr@@Base+0x10a0>
    9c78:	add	r0, pc, r0
    9c7c:	bx	lr
    9c80:	cmp	r0, #35	; 0x23
    9c84:	beq	ef60 <bt_compidtostr@@Base+0x54d8>
    9c88:	bls	9d9c <bt_compidtostr@@Base+0x314>
    9c8c:	cmp	r0, #37	; 0x25
    9c90:	beq	ddc0 <bt_compidtostr@@Base+0x4338>
    9c94:	bhi	dd54 <bt_compidtostr@@Base+0x42cc>
    9c98:	ldr	r0, [pc, #3724]	; ab2c <bt_compidtostr@@Base+0x10a4>
    9c9c:	add	r0, pc, r0
    9ca0:	bx	lr
    9ca4:	cmp	r0, #15
    9ca8:	beq	f368 <bt_compidtostr@@Base+0x58e0>
    9cac:	bls	a714 <bt_compidtostr@@Base+0xc8c>
    9cb0:	cmp	r0, #23
    9cb4:	beq	f068 <bt_compidtostr@@Base+0x55e0>
    9cb8:	bls	a6f0 <bt_compidtostr@@Base+0xc68>
    9cbc:	cmp	r0, #27
    9cc0:	beq	ef9c <bt_compidtostr@@Base+0x5514>
    9cc4:	bls	a1d0 <bt_compidtostr@@Base+0x748>
    9cc8:	cmp	r0, #29
    9ccc:	beq	de5c <bt_compidtostr@@Base+0x43d4>
    9cd0:	bhi	dd48 <bt_compidtostr@@Base+0x42c0>
    9cd4:	ldr	r0, [pc, #3668]	; ab30 <bt_compidtostr@@Base+0x10a8>
    9cd8:	add	r0, pc, r0
    9cdc:	bx	lr
    9ce0:	cmp	r0, #194	; 0xc2
    9ce4:	beq	f5b4 <bt_compidtostr@@Base+0x5b2c>
    9ce8:	bhi	a0b4 <bt_compidtostr@@Base+0x62c>
    9cec:	cmp	r0, #161	; 0xa1
    9cf0:	beq	f4e8 <bt_compidtostr@@Base+0x5a60>
    9cf4:	bls	a078 <bt_compidtostr@@Base+0x5f0>
    9cf8:	cmp	r0, #177	; 0xb1
    9cfc:	beq	f4dc <bt_compidtostr@@Base+0x5a54>
    9d00:	bls	9ff4 <bt_compidtostr@@Base+0x56c>
    9d04:	cmp	r0, #185	; 0xb9
    9d08:	beq	f2e4 <bt_compidtostr@@Base+0x585c>
    9d0c:	bls	9fd0 <bt_compidtostr@@Base+0x548>
    9d10:	cmp	r0, #189	; 0xbd
    9d14:	beq	efcc <bt_compidtostr@@Base+0x5544>
    9d18:	bls	9e38 <bt_compidtostr@@Base+0x3b0>
    9d1c:	cmp	r0, #191	; 0xbf
    9d20:	beq	ea5c <bt_compidtostr@@Base+0x4fd4>
    9d24:	bcc	de50 <bt_compidtostr@@Base+0x43c8>
    9d28:	cmp	r0, #192	; 0xc0
    9d2c:	beq	dd3c <bt_compidtostr@@Base+0x42b4>
    9d30:	cmp	r0, #193	; 0xc1
    9d34:	bne	9e2c <bt_compidtostr@@Base+0x3a4>
    9d38:	ldr	r0, [pc, #3572]	; ab34 <bt_compidtostr@@Base+0x10ac>
    9d3c:	add	r0, pc, r0
    9d40:	bx	lr
    9d44:	cmp	r0, #96	; 0x60
    9d48:	beq	f590 <bt_compidtostr@@Base+0x5b08>
    9d4c:	bls	9e50 <bt_compidtostr@@Base+0x3c8>
    9d50:	cmp	r0, #112	; 0x70
    9d54:	beq	f4d0 <bt_compidtostr@@Base+0x5a48>
    9d58:	bls	9dfc <bt_compidtostr@@Base+0x374>
    9d5c:	cmp	r0, #120	; 0x78
    9d60:	beq	f2d8 <bt_compidtostr@@Base+0x5850>
    9d64:	bls	9dd8 <bt_compidtostr@@Base+0x350>
    9d68:	cmp	r0, #124	; 0x7c
    9d6c:	beq	efe4 <bt_compidtostr@@Base+0x555c>
    9d70:	bls	9dc0 <bt_compidtostr@@Base+0x338>
    9d74:	cmp	r0, #126	; 0x7e
    9d78:	beq	ea38 <bt_compidtostr@@Base+0x4fb0>
    9d7c:	bcc	debc <bt_compidtostr@@Base+0x4434>
    9d80:	cmp	r0, #127	; 0x7f
    9d84:	beq	dd30 <bt_compidtostr@@Base+0x42a8>
    9d88:	cmp	r0, #128	; 0x80
    9d8c:	bne	9db4 <bt_compidtostr@@Base+0x32c>
    9d90:	ldr	r0, [pc, #3488]	; ab38 <bt_compidtostr@@Base+0x10b0>
    9d94:	add	r0, pc, r0
    9d98:	bx	lr
    9d9c:	cmp	r0, #33	; 0x21
    9da0:	beq	deb0 <bt_compidtostr@@Base+0x4428>
    9da4:	bhi	dd24 <bt_compidtostr@@Base+0x429c>
    9da8:	ldr	r0, [pc, #3468]	; ab3c <bt_compidtostr@@Base+0x10b4>
    9dac:	add	r0, pc, r0
    9db0:	bx	lr
    9db4:	ldr	r0, [pc, #3460]	; ab40 <bt_compidtostr@@Base+0x10b8>
    9db8:	add	r0, pc, r0
    9dbc:	bx	lr
    9dc0:	cmp	r0, #122	; 0x7a
    9dc4:	beq	ded4 <bt_compidtostr@@Base+0x444c>
    9dc8:	bhi	dd18 <bt_compidtostr@@Base+0x4290>
    9dcc:	ldr	r0, [pc, #3440]	; ab44 <bt_compidtostr@@Base+0x10bc>
    9dd0:	add	r0, pc, r0
    9dd4:	bx	lr
    9dd8:	cmp	r0, #116	; 0x74
    9ddc:	beq	eed0 <bt_compidtostr@@Base+0x5448>
    9de0:	bls	9e8c <bt_compidtostr@@Base+0x404>
    9de4:	cmp	r0, #118	; 0x76
    9de8:	beq	dee0 <bt_compidtostr@@Base+0x4458>
    9dec:	bhi	dd0c <bt_compidtostr@@Base+0x4284>
    9df0:	ldr	r0, [pc, #3408]	; ab48 <bt_compidtostr@@Base+0x10c0>
    9df4:	add	r0, pc, r0
    9df8:	bx	lr
    9dfc:	cmp	r0, #104	; 0x68
    9e00:	beq	f1d0 <bt_compidtostr@@Base+0x5748>
    9e04:	bls	9f7c <bt_compidtostr@@Base+0x4f4>
    9e08:	cmp	r0, #108	; 0x6c
    9e0c:	beq	eeb8 <bt_compidtostr@@Base+0x5430>
    9e10:	bls	9f64 <bt_compidtostr@@Base+0x4dc>
    9e14:	cmp	r0, #110	; 0x6e
    9e18:	beq	dec8 <bt_compidtostr@@Base+0x4440>
    9e1c:	bhi	dd00 <bt_compidtostr@@Base+0x4278>
    9e20:	ldr	r0, [pc, #3364]	; ab4c <bt_compidtostr@@Base+0x10c4>
    9e24:	add	r0, pc, r0
    9e28:	bx	lr
    9e2c:	ldr	r0, [pc, #3356]	; ab50 <bt_compidtostr@@Base+0x10c8>
    9e30:	add	r0, pc, r0
    9e34:	bx	lr
    9e38:	cmp	r0, #187	; 0xbb
    9e3c:	beq	df04 <bt_compidtostr@@Base+0x447c>
    9e40:	bhi	dcf4 <bt_compidtostr@@Base+0x426c>
    9e44:	ldr	r0, [pc, #3336]	; ab54 <bt_compidtostr@@Base+0x10cc>
    9e48:	add	r0, pc, r0
    9e4c:	bx	lr
    9e50:	cmp	r0, #80	; 0x50
    9e54:	beq	f3bc <bt_compidtostr@@Base+0x5934>
    9e58:	bls	9ee0 <bt_compidtostr@@Base+0x458>
    9e5c:	cmp	r0, #88	; 0x58
    9e60:	beq	f23c <bt_compidtostr@@Base+0x57b4>
    9e64:	bls	9ebc <bt_compidtostr@@Base+0x434>
    9e68:	cmp	r0, #92	; 0x5c
    9e6c:	beq	ee58 <bt_compidtostr@@Base+0x53d0>
    9e70:	bls	9ea4 <bt_compidtostr@@Base+0x41c>
    9e74:	cmp	r0, #94	; 0x5e
    9e78:	beq	df28 <bt_compidtostr@@Base+0x44a0>
    9e7c:	bhi	dce8 <bt_compidtostr@@Base+0x4260>
    9e80:	ldr	r0, [pc, #3280]	; ab58 <bt_compidtostr@@Base+0x10d0>
    9e84:	add	r0, pc, r0
    9e88:	bx	lr
    9e8c:	cmp	r0, #114	; 0x72
    9e90:	beq	df1c <bt_compidtostr@@Base+0x4494>
    9e94:	bhi	dcdc <bt_compidtostr@@Base+0x4254>
    9e98:	ldr	r0, [pc, #3260]	; ab5c <bt_compidtostr@@Base+0x10d4>
    9e9c:	add	r0, pc, r0
    9ea0:	bx	lr
    9ea4:	cmp	r0, #90	; 0x5a
    9ea8:	beq	df10 <bt_compidtostr@@Base+0x4488>
    9eac:	bhi	dcd0 <bt_compidtostr@@Base+0x4248>
    9eb0:	ldr	r0, [pc, #3240]	; ab60 <bt_compidtostr@@Base+0x10d8>
    9eb4:	add	r0, pc, r0
    9eb8:	bx	lr
    9ebc:	cmp	r0, #84	; 0x54
    9ec0:	beq	ee70 <bt_compidtostr@@Base+0x53e8>
    9ec4:	bls	9f10 <bt_compidtostr@@Base+0x488>
    9ec8:	cmp	r0, #86	; 0x56
    9ecc:	beq	def8 <bt_compidtostr@@Base+0x4470>
    9ed0:	bhi	dcc4 <bt_compidtostr@@Base+0x423c>
    9ed4:	ldr	r0, [pc, #3208]	; ab64 <bt_compidtostr@@Base+0x10dc>
    9ed8:	add	r0, pc, r0
    9edc:	bx	lr
    9ee0:	cmp	r0, #72	; 0x48
    9ee4:	beq	f1c4 <bt_compidtostr@@Base+0x573c>
    9ee8:	bls	9f40 <bt_compidtostr@@Base+0x4b8>
    9eec:	cmp	r0, #76	; 0x4c
    9ef0:	beq	ef90 <bt_compidtostr@@Base+0x5508>
    9ef4:	bls	9f28 <bt_compidtostr@@Base+0x4a0>
    9ef8:	cmp	r0, #78	; 0x4e
    9efc:	beq	de80 <bt_compidtostr@@Base+0x43f8>
    9f00:	bhi	dcb8 <bt_compidtostr@@Base+0x4230>
    9f04:	ldr	r0, [pc, #3164]	; ab68 <bt_compidtostr@@Base+0x10e0>
    9f08:	add	r0, pc, r0
    9f0c:	bx	lr
    9f10:	cmp	r0, #82	; 0x52
    9f14:	beq	de74 <bt_compidtostr@@Base+0x43ec>
    9f18:	bhi	dcac <bt_compidtostr@@Base+0x4224>
    9f1c:	ldr	r0, [pc, #3144]	; ab6c <bt_compidtostr@@Base+0x10e4>
    9f20:	add	r0, pc, r0
    9f24:	bx	lr
    9f28:	cmp	r0, #74	; 0x4a
    9f2c:	beq	de68 <bt_compidtostr@@Base+0x43e0>
    9f30:	bhi	dca0 <bt_compidtostr@@Base+0x4218>
    9f34:	ldr	r0, [pc, #3124]	; ab70 <bt_compidtostr@@Base+0x10e8>
    9f38:	add	r0, pc, r0
    9f3c:	bx	lr
    9f40:	cmp	r0, #68	; 0x44
    9f44:	beq	ee7c <bt_compidtostr@@Base+0x53f4>
    9f48:	bls	9fa0 <bt_compidtostr@@Base+0x518>
    9f4c:	cmp	r0, #70	; 0x46
    9f50:	beq	deec <bt_compidtostr@@Base+0x4464>
    9f54:	bhi	dc94 <bt_compidtostr@@Base+0x420c>
    9f58:	ldr	r0, [pc, #3092]	; ab74 <bt_compidtostr@@Base+0x10ec>
    9f5c:	add	r0, pc, r0
    9f60:	bx	lr
    9f64:	cmp	r0, #106	; 0x6a
    9f68:	beq	dea4 <bt_compidtostr@@Base+0x441c>
    9f6c:	bhi	dc88 <bt_compidtostr@@Base+0x4200>
    9f70:	ldr	r0, [pc, #3072]	; ab78 <bt_compidtostr@@Base+0x10f0>
    9f74:	add	r0, pc, r0
    9f78:	bx	lr
    9f7c:	cmp	r0, #100	; 0x64
    9f80:	beq	eec4 <bt_compidtostr@@Base+0x543c>
    9f84:	bls	9fb8 <bt_compidtostr@@Base+0x530>
    9f88:	cmp	r0, #102	; 0x66
    9f8c:	beq	de8c <bt_compidtostr@@Base+0x4404>
    9f90:	bhi	dc7c <bt_compidtostr@@Base+0x41f4>
    9f94:	ldr	r0, [pc, #3040]	; ab7c <bt_compidtostr@@Base+0x10f4>
    9f98:	add	r0, pc, r0
    9f9c:	bx	lr
    9fa0:	cmp	r0, #66	; 0x42
    9fa4:	beq	de98 <bt_compidtostr@@Base+0x4410>
    9fa8:	bhi	dc70 <bt_compidtostr@@Base+0x41e8>
    9fac:	ldr	r0, [pc, #3020]	; ab80 <bt_compidtostr@@Base+0x10f8>
    9fb0:	add	r0, pc, r0
    9fb4:	bx	lr
    9fb8:	cmp	r0, #98	; 0x62
    9fbc:	beq	ddf0 <bt_compidtostr@@Base+0x4368>
    9fc0:	bhi	dc64 <bt_compidtostr@@Base+0x41dc>
    9fc4:	ldr	r0, [pc, #3000]	; ab84 <bt_compidtostr@@Base+0x10fc>
    9fc8:	add	r0, pc, r0
    9fcc:	bx	lr
    9fd0:	cmp	r0, #181	; 0xb5
    9fd4:	beq	ef78 <bt_compidtostr@@Base+0x54f0>
    9fd8:	bls	a024 <bt_compidtostr@@Base+0x59c>
    9fdc:	cmp	r0, #183	; 0xb7
    9fe0:	beq	de20 <bt_compidtostr@@Base+0x4398>
    9fe4:	bhi	dc58 <bt_compidtostr@@Base+0x41d0>
    9fe8:	ldr	r0, [pc, #2968]	; ab88 <bt_compidtostr@@Base+0x1100>
    9fec:	add	r0, pc, r0
    9ff0:	bx	lr
    9ff4:	cmp	r0, #169	; 0xa9
    9ff8:	beq	f1b8 <bt_compidtostr@@Base+0x5730>
    9ffc:	bls	a054 <bt_compidtostr@@Base+0x5cc>
    a000:	cmp	r0, #173	; 0xad
    a004:	beq	ef6c <bt_compidtostr@@Base+0x54e4>
    a008:	bls	a03c <bt_compidtostr@@Base+0x5b4>
    a00c:	cmp	r0, #175	; 0xaf
    a010:	beq	de14 <bt_compidtostr@@Base+0x438c>
    a014:	bhi	dc4c <bt_compidtostr@@Base+0x41c4>
    a018:	ldr	r0, [pc, #2924]	; ab8c <bt_compidtostr@@Base+0x1104>
    a01c:	add	r0, pc, r0
    a020:	bx	lr
    a024:	cmp	r0, #179	; 0xb3
    a028:	beq	de08 <bt_compidtostr@@Base+0x4380>
    a02c:	bhi	dc40 <bt_compidtostr@@Base+0x41b8>
    a030:	ldr	r0, [pc, #2904]	; ab90 <bt_compidtostr@@Base+0x1108>
    a034:	add	r0, pc, r0
    a038:	bx	lr
    a03c:	cmp	r0, #171	; 0xab
    a040:	beq	ddfc <bt_compidtostr@@Base+0x4374>
    a044:	bhi	dc34 <bt_compidtostr@@Base+0x41ac>
    a048:	ldr	r0, [pc, #2884]	; ab94 <bt_compidtostr@@Base+0x110c>
    a04c:	add	r0, pc, r0
    a050:	bx	lr
    a054:	cmp	r0, #165	; 0xa5
    a058:	beq	ef84 <bt_compidtostr@@Base+0x54fc>
    a05c:	bls	a114 <bt_compidtostr@@Base+0x68c>
    a060:	cmp	r0, #167	; 0xa7
    a064:	beq	dde4 <bt_compidtostr@@Base+0x435c>
    a068:	bhi	dc28 <bt_compidtostr@@Base+0x41a0>
    a06c:	ldr	r0, [pc, #2852]	; ab98 <bt_compidtostr@@Base+0x1110>
    a070:	add	r0, pc, r0
    a074:	bx	lr
    a078:	cmp	r0, #145	; 0x91
    a07c:	beq	f41c <bt_compidtostr@@Base+0x5994>
    a080:	bls	b08c <bt_compidtostr@@Base+0x1604>
    a084:	cmp	r0, #153	; 0x99
    a088:	beq	f260 <bt_compidtostr@@Base+0x57d8>
    a08c:	bls	b068 <bt_compidtostr@@Base+0x15e0>
    a090:	cmp	r0, #157	; 0x9d
    a094:	beq	ef48 <bt_compidtostr@@Base+0x54c0>
    a098:	bls	b110 <bt_compidtostr@@Base+0x1688>
    a09c:	cmp	r0, #159	; 0x9f
    a0a0:	beq	ddd8 <bt_compidtostr@@Base+0x4350>
    a0a4:	bhi	dc1c <bt_compidtostr@@Base+0x4194>
    a0a8:	ldr	r0, [pc, #2796]	; ab9c <bt_compidtostr@@Base+0x1114>
    a0ac:	add	r0, pc, r0
    a0b0:	bx	lr
    a0b4:	cmp	r0, #226	; 0xe2
    a0b8:	beq	f53c <bt_compidtostr@@Base+0x5ab4>
    a0bc:	bls	b1b8 <bt_compidtostr@@Base+0x1730>
    a0c0:	cmp	r0, #242	; 0xf2
    a0c4:	beq	f464 <bt_compidtostr@@Base+0x59dc>
    a0c8:	bls	b188 <bt_compidtostr@@Base+0x1700>
    a0cc:	cmp	r0, #250	; 0xfa
    a0d0:	beq	f2cc <bt_compidtostr@@Base+0x5844>
    a0d4:	bls	b164 <bt_compidtostr@@Base+0x16dc>
    a0d8:	cmp	r0, #254	; 0xfe
    a0dc:	beq	efd8 <bt_compidtostr@@Base+0x5550>
    a0e0:	bls	b14c <bt_compidtostr@@Base+0x16c4>
    a0e4:	cmp	r0, #256	; 0x100
    a0e8:	beq	ea20 <bt_compidtostr@@Base+0x4f98>
    a0ec:	bcc	e054 <bt_compidtostr@@Base+0x45cc>
    a0f0:	movw	r3, #257	; 0x101
    a0f4:	cmp	r0, r3
    a0f8:	beq	dc10 <bt_compidtostr@@Base+0x4188>
    a0fc:	movw	r3, #258	; 0x102
    a100:	cmp	r0, r3
    a104:	bne	b128 <bt_compidtostr@@Base+0x16a0>
    a108:	ldr	r0, [pc, #2704]	; aba0 <bt_compidtostr@@Base+0x1118>
    a10c:	add	r0, pc, r0
    a110:	bx	lr
    a114:	cmp	r0, #163	; 0xa3
    a118:	beq	e03c <bt_compidtostr@@Base+0x45b4>
    a11c:	bhi	dc04 <bt_compidtostr@@Base+0x417c>
    a120:	ldr	r0, [pc, #2684]	; aba4 <bt_compidtostr@@Base+0x111c>
    a124:	add	r0, pc, r0
    a128:	bx	lr
    a12c:	movw	r3, #389	; 0x185
    a130:	cmp	r0, r3
    a134:	beq	fb80 <bt_compidtostr@@Base+0x60f8>
    a138:	bhi	a4d4 <bt_compidtostr@@Base+0xa4c>
    a13c:	cmp	r0, #324	; 0x144
    a140:	beq	f5e4 <bt_compidtostr@@Base+0x5b5c>
    a144:	bhi	a474 <bt_compidtostr@@Base+0x9ec>
    a148:	movw	r3, #291	; 0x123
    a14c:	cmp	r0, r3
    a150:	beq	f530 <bt_compidtostr@@Base+0x5aa8>
    a154:	cmp	r0, #292	; 0x124
    a158:	bcc	a284 <bt_compidtostr@@Base+0x7fc>
    a15c:	movw	r3, #307	; 0x133
    a160:	cmp	r0, r3
    a164:	beq	f4c4 <bt_compidtostr@@Base+0x5a3c>
    a168:	cmp	r0, #308	; 0x134
    a16c:	bcc	a240 <bt_compidtostr@@Base+0x7b8>
    a170:	movw	r3, #315	; 0x13b
    a174:	cmp	r0, r3
    a178:	beq	f2b4 <bt_compidtostr@@Base+0x582c>
    a17c:	cmp	r0, #316	; 0x13c
    a180:	bcc	a210 <bt_compidtostr@@Base+0x788>
    a184:	movw	r3, #319	; 0x13f
    a188:	cmp	r0, r3
    a18c:	beq	effc <bt_compidtostr@@Base+0x5574>
    a190:	cmp	r0, #320	; 0x140
    a194:	bcc	a1f4 <bt_compidtostr@@Base+0x76c>
    a198:	movw	r3, #321	; 0x141
    a19c:	cmp	r0, r3
    a1a0:	beq	ea14 <bt_compidtostr@@Base+0x4f8c>
    a1a4:	cmp	r0, #320	; 0x140
    a1a8:	bls	e06c <bt_compidtostr@@Base+0x45e4>
    a1ac:	movw	r3, #322	; 0x142
    a1b0:	cmp	r0, r3
    a1b4:	beq	dbf8 <bt_compidtostr@@Base+0x4170>
    a1b8:	movw	r3, #323	; 0x143
    a1bc:	cmp	r0, r3
    a1c0:	bne	a1e8 <bt_compidtostr@@Base+0x760>
    a1c4:	ldr	r0, [pc, #2524]	; aba8 <bt_compidtostr@@Base+0x1120>
    a1c8:	add	r0, pc, r0
    a1cc:	bx	lr
    a1d0:	cmp	r0, #25
    a1d4:	beq	e060 <bt_compidtostr@@Base+0x45d8>
    a1d8:	bhi	dbec <bt_compidtostr@@Base+0x4164>
    a1dc:	ldr	r0, [pc, #2504]	; abac <bt_compidtostr@@Base+0x1124>
    a1e0:	add	r0, pc, r0
    a1e4:	bx	lr
    a1e8:	ldr	r0, [pc, #2496]	; abb0 <bt_compidtostr@@Base+0x1128>
    a1ec:	add	r0, pc, r0
    a1f0:	bx	lr
    a1f4:	movw	r3, #317	; 0x13d
    a1f8:	cmp	r0, r3
    a1fc:	beq	e048 <bt_compidtostr@@Base+0x45c0>
    a200:	bhi	dbe0 <bt_compidtostr@@Base+0x4158>
    a204:	ldr	r0, [pc, #2472]	; abb4 <bt_compidtostr@@Base+0x112c>
    a208:	add	r0, pc, r0
    a20c:	bx	lr
    a210:	movw	r3, #311	; 0x137
    a214:	cmp	r0, r3
    a218:	beq	ee88 <bt_compidtostr@@Base+0x5400>
    a21c:	cmp	r0, #312	; 0x138
    a220:	bcc	a2dc <bt_compidtostr@@Base+0x854>
    a224:	movw	r3, #313	; 0x139
    a228:	cmp	r0, r3
    a22c:	beq	df4c <bt_compidtostr@@Base+0x44c4>
    a230:	bhi	dbd4 <bt_compidtostr@@Base+0x414c>
    a234:	ldr	r0, [pc, #2428]	; abb8 <bt_compidtostr@@Base+0x1130>
    a238:	add	r0, pc, r0
    a23c:	bx	lr
    a240:	movw	r3, #299	; 0x12b
    a244:	cmp	r0, r3
    a248:	beq	f290 <bt_compidtostr@@Base+0x5808>
    a24c:	cmp	r0, #300	; 0x12c
    a250:	bcc	a40c <bt_compidtostr@@Base+0x984>
    a254:	movw	r3, #303	; 0x12f
    a258:	cmp	r0, r3
    a25c:	beq	ee64 <bt_compidtostr@@Base+0x53dc>
    a260:	cmp	r0, #304	; 0x130
    a264:	bcc	a3f0 <bt_compidtostr@@Base+0x968>
    a268:	movw	r3, #305	; 0x131
    a26c:	cmp	r0, r3
    a270:	beq	df40 <bt_compidtostr@@Base+0x44b8>
    a274:	bhi	dbc8 <bt_compidtostr@@Base+0x4140>
    a278:	ldr	r0, [pc, #2364]	; abbc <bt_compidtostr@@Base+0x1134>
    a27c:	add	r0, pc, r0
    a280:	bx	lr
    a284:	movw	r3, #275	; 0x113
    a288:	cmp	r0, r3
    a28c:	beq	f3f8 <bt_compidtostr@@Base+0x5970>
    a290:	cmp	r0, #276	; 0x114
    a294:	bcc	a344 <bt_compidtostr@@Base+0x8bc>
    a298:	movw	r3, #283	; 0x11b
    a29c:	cmp	r0, r3
    a2a0:	beq	f248 <bt_compidtostr@@Base+0x57c0>
    a2a4:	cmp	r0, #284	; 0x11c
    a2a8:	bcc	a314 <bt_compidtostr@@Base+0x88c>
    a2ac:	movw	r3, #287	; 0x11f
    a2b0:	cmp	r0, r3
    a2b4:	beq	eee8 <bt_compidtostr@@Base+0x5460>
    a2b8:	cmp	r0, #288	; 0x120
    a2bc:	bcc	a2f8 <bt_compidtostr@@Base+0x870>
    a2c0:	movw	r3, #289	; 0x121
    a2c4:	cmp	r0, r3
    a2c8:	beq	df34 <bt_compidtostr@@Base+0x44ac>
    a2cc:	bhi	dbbc <bt_compidtostr@@Base+0x4134>
    a2d0:	ldr	r0, [pc, #2280]	; abc0 <bt_compidtostr@@Base+0x1138>
    a2d4:	add	r0, pc, r0
    a2d8:	bx	lr
    a2dc:	movw	r3, #309	; 0x135
    a2e0:	cmp	r0, r3
    a2e4:	beq	df70 <bt_compidtostr@@Base+0x44e8>
    a2e8:	bhi	dbb0 <bt_compidtostr@@Base+0x4128>
    a2ec:	ldr	r0, [pc, #2256]	; abc4 <bt_compidtostr@@Base+0x113c>
    a2f0:	add	r0, pc, r0
    a2f4:	bx	lr
    a2f8:	movw	r3, #285	; 0x11d
    a2fc:	cmp	r0, r3
    a300:	beq	df64 <bt_compidtostr@@Base+0x44dc>
    a304:	bhi	dba4 <bt_compidtostr@@Base+0x411c>
    a308:	ldr	r0, [pc, #2232]	; abc8 <bt_compidtostr@@Base+0x1140>
    a30c:	add	r0, pc, r0
    a310:	bx	lr
    a314:	movw	r3, #279	; 0x117
    a318:	cmp	r0, r3
    a31c:	beq	ef3c <bt_compidtostr@@Base+0x54b4>
    a320:	cmp	r0, #280	; 0x118
    a324:	bcc	a388 <bt_compidtostr@@Base+0x900>
    a328:	movw	r3, #281	; 0x119
    a32c:	cmp	r0, r3
    a330:	beq	df94 <bt_compidtostr@@Base+0x450c>
    a334:	bhi	db98 <bt_compidtostr@@Base+0x4110>
    a338:	ldr	r0, [pc, #2188]	; abcc <bt_compidtostr@@Base+0x1144>
    a33c:	add	r0, pc, r0
    a340:	bx	lr
    a344:	movw	r3, #267	; 0x10b
    a348:	cmp	r0, r3
    a34c:	beq	f1dc <bt_compidtostr@@Base+0x5754>
    a350:	cmp	r0, #268	; 0x10c
    a354:	bcc	a3c0 <bt_compidtostr@@Base+0x938>
    a358:	movw	r3, #271	; 0x10f
    a35c:	cmp	r0, r3
    a360:	beq	eedc <bt_compidtostr@@Base+0x5454>
    a364:	cmp	r0, #272	; 0x110
    a368:	bcc	a3a4 <bt_compidtostr@@Base+0x91c>
    a36c:	movw	r3, #273	; 0x111
    a370:	cmp	r0, r3
    a374:	beq	df7c <bt_compidtostr@@Base+0x44f4>
    a378:	bhi	db8c <bt_compidtostr@@Base+0x4104>
    a37c:	ldr	r0, [pc, #2124]	; abd0 <bt_compidtostr@@Base+0x1148>
    a380:	add	r0, pc, r0
    a384:	bx	lr
    a388:	movw	r3, #277	; 0x115
    a38c:	cmp	r0, r3
    a390:	beq	df88 <bt_compidtostr@@Base+0x4500>
    a394:	bhi	db80 <bt_compidtostr@@Base+0x40f8>
    a398:	ldr	r0, [pc, #2100]	; abd4 <bt_compidtostr@@Base+0x114c>
    a39c:	add	r0, pc, r0
    a3a0:	bx	lr
    a3a4:	movw	r3, #269	; 0x10d
    a3a8:	cmp	r0, r3
    a3ac:	beq	dfc4 <bt_compidtostr@@Base+0x453c>
    a3b0:	bhi	db74 <bt_compidtostr@@Base+0x40ec>
    a3b4:	ldr	r0, [pc, #2076]	; abd8 <bt_compidtostr@@Base+0x1150>
    a3b8:	add	r0, pc, r0
    a3bc:	bx	lr
    a3c0:	movw	r3, #263	; 0x107
    a3c4:	cmp	r0, r3
    a3c8:	beq	ef24 <bt_compidtostr@@Base+0x549c>
    a3cc:	cmp	r0, #264	; 0x108
    a3d0:	bcc	a43c <bt_compidtostr@@Base+0x9b4>
    a3d4:	movw	r3, #265	; 0x109
    a3d8:	cmp	r0, r3
    a3dc:	beq	dfdc <bt_compidtostr@@Base+0x4554>
    a3e0:	bhi	db68 <bt_compidtostr@@Base+0x40e0>
    a3e4:	ldr	r0, [pc, #2032]	; abdc <bt_compidtostr@@Base+0x1154>
    a3e8:	add	r0, pc, r0
    a3ec:	bx	lr
    a3f0:	movw	r3, #301	; 0x12d
    a3f4:	cmp	r0, r3
    a3f8:	beq	dfd0 <bt_compidtostr@@Base+0x4548>
    a3fc:	bhi	db5c <bt_compidtostr@@Base+0x40d4>
    a400:	ldr	r0, [pc, #2008]	; abe0 <bt_compidtostr@@Base+0x1158>
    a404:	add	r0, pc, r0
    a408:	bx	lr
    a40c:	movw	r3, #295	; 0x127
    a410:	cmp	r0, r3
    a414:	beq	ef30 <bt_compidtostr@@Base+0x54a8>
    a418:	cmp	r0, #296	; 0x128
    a41c:	bcc	a458 <bt_compidtostr@@Base+0x9d0>
    a420:	movw	r3, #297	; 0x129
    a424:	cmp	r0, r3
    a428:	beq	dfb8 <bt_compidtostr@@Base+0x4530>
    a42c:	bhi	db50 <bt_compidtostr@@Base+0x40c8>
    a430:	ldr	r0, [pc, #1964]	; abe4 <bt_compidtostr@@Base+0x115c>
    a434:	add	r0, pc, r0
    a438:	bx	lr
    a43c:	movw	r3, #261	; 0x105
    a440:	cmp	r0, r3
    a444:	beq	dfac <bt_compidtostr@@Base+0x4524>
    a448:	bhi	db44 <bt_compidtostr@@Base+0x40bc>
    a44c:	ldr	r0, [pc, #1940]	; abe8 <bt_compidtostr@@Base+0x1160>
    a450:	add	r0, pc, r0
    a454:	bx	lr
    a458:	movw	r3, #293	; 0x125
    a45c:	cmp	r0, r3
    a460:	beq	dfa0 <bt_compidtostr@@Base+0x4518>
    a464:	bhi	db38 <bt_compidtostr@@Base+0x40b0>
    a468:	ldr	r0, [pc, #1916]	; abec <bt_compidtostr@@Base+0x1164>
    a46c:	add	r0, pc, r0
    a470:	bx	lr
    a474:	cmp	r0, #356	; 0x164
    a478:	beq	f560 <bt_compidtostr@@Base+0x5ad8>
    a47c:	bls	ae28 <bt_compidtostr@@Base+0x13a0>
    a480:	cmp	r0, #372	; 0x174
    a484:	beq	f470 <bt_compidtostr@@Base+0x59e8>
    a488:	bls	a6bc <bt_compidtostr@@Base+0xc34>
    a48c:	cmp	r0, #380	; 0x17c
    a490:	beq	f2fc <bt_compidtostr@@Base+0x5874>
    a494:	bls	a82c <bt_compidtostr@@Base+0xda4>
    a498:	cmp	r0, #384	; 0x180
    a49c:	beq	eff0 <bt_compidtostr@@Base+0x5568>
    a4a0:	bls	a810 <bt_compidtostr@@Base+0xd88>
    a4a4:	movw	r3, #386	; 0x182
    a4a8:	cmp	r0, r3
    a4ac:	beq	ea2c <bt_compidtostr@@Base+0x4fa4>
    a4b0:	bcc	df58 <bt_compidtostr@@Base+0x44d0>
    a4b4:	movw	r3, #387	; 0x183
    a4b8:	cmp	r0, r3
    a4bc:	beq	db2c <bt_compidtostr@@Base+0x40a4>
    a4c0:	cmp	r0, #388	; 0x184
    a4c4:	bne	a554 <bt_compidtostr@@Base+0xacc>
    a4c8:	ldr	r0, [pc, #1824]	; abf0 <bt_compidtostr@@Base+0x1168>
    a4cc:	add	r0, pc, r0
    a4d0:	bx	lr
    a4d4:	movw	r3, #454	; 0x1c6
    a4d8:	cmp	r0, r3
    a4dc:	beq	f5cc <bt_compidtostr@@Base+0x5b44>
    a4e0:	bhi	a854 <bt_compidtostr@@Base+0xdcc>
    a4e4:	movw	r3, #421	; 0x1a5
    a4e8:	cmp	r0, r3
    a4ec:	beq	f578 <bt_compidtostr@@Base+0x5af0>
    a4f0:	bls	a66c <bt_compidtostr@@Base+0xbe4>
    a4f4:	movw	r3, #437	; 0x1b5
    a4f8:	cmp	r0, r3
    a4fc:	beq	f47c <bt_compidtostr@@Base+0x59f4>
    a500:	bls	a5bc <bt_compidtostr@@Base+0xb34>
    a504:	movw	r3, #445	; 0x1bd
    a508:	cmp	r0, r3
    a50c:	beq	f2f0 <bt_compidtostr@@Base+0x5868>
    a510:	bls	a58c <bt_compidtostr@@Base+0xb04>
    a514:	movw	r3, #449	; 0x1c1
    a518:	cmp	r0, r3
    a51c:	beq	efc0 <bt_compidtostr@@Base+0x5538>
    a520:	bls	a56c <bt_compidtostr@@Base+0xae4>
    a524:	movw	r3, #451	; 0x1c3
    a528:	cmp	r0, r3
    a52c:	beq	ea44 <bt_compidtostr@@Base+0x4fbc>
    a530:	bcc	e00c <bt_compidtostr@@Base+0x4584>
    a534:	cmp	r0, #452	; 0x1c4
    a538:	beq	db20 <bt_compidtostr@@Base+0x4098>
    a53c:	movw	r3, #453	; 0x1c5
    a540:	cmp	r0, r3
    a544:	bne	a560 <bt_compidtostr@@Base+0xad8>
    a548:	ldr	r0, [pc, #1700]	; abf4 <bt_compidtostr@@Base+0x116c>
    a54c:	add	r0, pc, r0
    a550:	bx	lr
    a554:	ldr	r0, [pc, #1692]	; abf8 <bt_compidtostr@@Base+0x1170>
    a558:	add	r0, pc, r0
    a55c:	bx	lr
    a560:	ldr	r0, [pc, #1684]	; abfc <bt_compidtostr@@Base+0x1174>
    a564:	add	r0, pc, r0
    a568:	bx	lr
    a56c:	movw	r3, #447	; 0x1bf
    a570:	cmp	r0, r3
    a574:	beq	e000 <bt_compidtostr@@Base+0x4578>
    a578:	cmp	r0, #448	; 0x1c0
    a57c:	bcs	db14 <bt_compidtostr@@Base+0x408c>
    a580:	ldr	r0, [pc, #1656]	; ac00 <bt_compidtostr@@Base+0x1178>
    a584:	add	r0, pc, r0
    a588:	bx	lr
    a58c:	movw	r3, #441	; 0x1b9
    a590:	cmp	r0, r3
    a594:	beq	ef0c <bt_compidtostr@@Base+0x5484>
    a598:	bls	a5fc <bt_compidtostr@@Base+0xb74>
    a59c:	movw	r3, #443	; 0x1bb
    a5a0:	cmp	r0, r3
    a5a4:	beq	e030 <bt_compidtostr@@Base+0x45a8>
    a5a8:	cmp	r0, #444	; 0x1bc
    a5ac:	bcs	db08 <bt_compidtostr@@Base+0x4080>
    a5b0:	ldr	r0, [pc, #1612]	; ac04 <bt_compidtostr@@Base+0x117c>
    a5b4:	add	r0, pc, r0
    a5b8:	bx	lr
    a5bc:	movw	r3, #429	; 0x1ad
    a5c0:	cmp	r0, r3
    a5c4:	beq	f254 <bt_compidtostr@@Base+0x57cc>
    a5c8:	bls	a63c <bt_compidtostr@@Base+0xbb4>
    a5cc:	movw	r3, #433	; 0x1b1
    a5d0:	cmp	r0, r3
    a5d4:	beq	eef4 <bt_compidtostr@@Base+0x546c>
    a5d8:	bls	a61c <bt_compidtostr@@Base+0xb94>
    a5dc:	movw	r3, #435	; 0x1b3
    a5e0:	cmp	r0, r3
    a5e4:	beq	e018 <bt_compidtostr@@Base+0x4590>
    a5e8:	cmp	r0, #436	; 0x1b4
    a5ec:	bcs	dafc <bt_compidtostr@@Base+0x4074>
    a5f0:	ldr	r0, [pc, #1552]	; ac08 <bt_compidtostr@@Base+0x1180>
    a5f4:	add	r0, pc, r0
    a5f8:	bx	lr
    a5fc:	movw	r3, #439	; 0x1b7
    a600:	cmp	r0, r3
    a604:	beq	e024 <bt_compidtostr@@Base+0x459c>
    a608:	cmp	r0, #440	; 0x1b8
    a60c:	bcs	daf0 <bt_compidtostr@@Base+0x4068>
    a610:	ldr	r0, [pc, #1524]	; ac0c <bt_compidtostr@@Base+0x1184>
    a614:	add	r0, pc, r0
    a618:	bx	lr
    a61c:	movw	r3, #431	; 0x1af
    a620:	cmp	r0, r3
    a624:	beq	dfe8 <bt_compidtostr@@Base+0x4560>
    a628:	cmp	r0, #432	; 0x1b0
    a62c:	bcs	dae4 <bt_compidtostr@@Base+0x405c>
    a630:	ldr	r0, [pc, #1496]	; ac10 <bt_compidtostr@@Base+0x1188>
    a634:	add	r0, pc, r0
    a638:	bx	lr
    a63c:	movw	r3, #425	; 0x1a9
    a640:	cmp	r0, r3
    a644:	beq	ef18 <bt_compidtostr@@Base+0x5490>
    a648:	bls	a8c4 <bt_compidtostr@@Base+0xe3c>
    a64c:	movw	r3, #427	; 0x1ab
    a650:	cmp	r0, r3
    a654:	beq	e258 <bt_compidtostr@@Base+0x47d0>
    a658:	cmp	r0, #428	; 0x1ac
    a65c:	bcs	dad8 <bt_compidtostr@@Base+0x4050>
    a660:	ldr	r0, [pc, #1452]	; ac14 <bt_compidtostr@@Base+0x118c>
    a664:	add	r0, pc, r0
    a668:	bx	lr
    a66c:	movw	r3, #405	; 0x195
    a670:	cmp	r0, r3
    a674:	beq	f3e0 <bt_compidtostr@@Base+0x5958>
    a678:	bls	af90 <bt_compidtostr@@Base+0x1508>
    a67c:	movw	r3, #413	; 0x19d
    a680:	cmp	r0, r3
    a684:	beq	f11c <bt_compidtostr@@Base+0x5694>
    a688:	bls	af60 <bt_compidtostr@@Base+0x14d8>
    a68c:	movw	r3, #417	; 0x1a1
    a690:	cmp	r0, r3
    a694:	beq	ef00 <bt_compidtostr@@Base+0x5478>
    a698:	bls	ae68 <bt_compidtostr@@Base+0x13e0>
    a69c:	movw	r3, #419	; 0x1a3
    a6a0:	cmp	r0, r3
    a6a4:	beq	dff4 <bt_compidtostr@@Base+0x456c>
    a6a8:	cmp	r0, #420	; 0x1a4
    a6ac:	bcs	dacc <bt_compidtostr@@Base+0x4044>
    a6b0:	ldr	r0, [pc, #1376]	; ac18 <bt_compidtostr@@Base+0x1190>
    a6b4:	add	r0, pc, r0
    a6b8:	bx	lr
    a6bc:	cmp	r0, #364	; 0x16c
    a6c0:	beq	f128 <bt_compidtostr@@Base+0x56a0>
    a6c4:	bls	a7b4 <bt_compidtostr@@Base+0xd2c>
    a6c8:	cmp	r0, #368	; 0x170
    a6cc:	beq	ed38 <bt_compidtostr@@Base+0x52b0>
    a6d0:	bls	a798 <bt_compidtostr@@Base+0xd10>
    a6d4:	movw	r3, #370	; 0x172
    a6d8:	cmp	r0, r3
    a6dc:	beq	e234 <bt_compidtostr@@Base+0x47ac>
    a6e0:	bhi	dac0 <bt_compidtostr@@Base+0x4038>
    a6e4:	ldr	r0, [pc, #1328]	; ac1c <bt_compidtostr@@Base+0x1194>
    a6e8:	add	r0, pc, r0
    a6ec:	bx	lr
    a6f0:	cmp	r0, #19
    a6f4:	beq	ed80 <bt_compidtostr@@Base+0x52f8>
    a6f8:	bls	a744 <bt_compidtostr@@Base+0xcbc>
    a6fc:	cmp	r0, #21
    a700:	beq	e228 <bt_compidtostr@@Base+0x47a0>
    a704:	bhi	dab4 <bt_compidtostr@@Base+0x402c>
    a708:	ldr	r0, [pc, #1296]	; ac20 <bt_compidtostr@@Base+0x1198>
    a70c:	add	r0, pc, r0
    a710:	bx	lr
    a714:	cmp	r0, #7
    a718:	beq	f170 <bt_compidtostr@@Base+0x56e8>
    a71c:	bls	a774 <bt_compidtostr@@Base+0xcec>
    a720:	cmp	r0, #11
    a724:	beq	ed14 <bt_compidtostr@@Base+0x528c>
    a728:	bls	a75c <bt_compidtostr@@Base+0xcd4>
    a72c:	cmp	r0, #13
    a730:	beq	e24c <bt_compidtostr@@Base+0x47c4>
    a734:	bhi	daa8 <bt_compidtostr@@Base+0x4020>
    a738:	ldr	r0, [pc, #1252]	; ac24 <bt_compidtostr@@Base+0x119c>
    a73c:	add	r0, pc, r0
    a740:	bx	lr
    a744:	cmp	r0, #17
    a748:	beq	e240 <bt_compidtostr@@Base+0x47b8>
    a74c:	bhi	da9c <bt_compidtostr@@Base+0x4014>
    a750:	ldr	r0, [pc, #1232]	; ac28 <bt_compidtostr@@Base+0x11a0>
    a754:	add	r0, pc, r0
    a758:	bx	lr
    a75c:	cmp	r0, #9
    a760:	beq	e270 <bt_compidtostr@@Base+0x47e8>
    a764:	bhi	da90 <bt_compidtostr@@Base+0x4008>
    a768:	ldr	r0, [pc, #1212]	; ac2c <bt_compidtostr@@Base+0x11a4>
    a76c:	add	r0, pc, r0
    a770:	bx	lr
    a774:	cmp	r0, #3
    a778:	beq	ed2c <bt_compidtostr@@Base+0x52a4>
    a77c:	bls	a7dc <bt_compidtostr@@Base+0xd54>
    a780:	cmp	r0, #5
    a784:	beq	e27c <bt_compidtostr@@Base+0x47f4>
    a788:	bhi	da84 <bt_compidtostr@@Base+0x3ffc>
    a78c:	ldr	r0, [pc, #1180]	; ac30 <bt_compidtostr@@Base+0x11a8>
    a790:	add	r0, pc, r0
    a794:	bx	lr
    a798:	movw	r3, #366	; 0x16e
    a79c:	cmp	r0, r3
    a7a0:	beq	e264 <bt_compidtostr@@Base+0x47dc>
    a7a4:	bhi	da78 <bt_compidtostr@@Base+0x3ff0>
    a7a8:	ldr	r0, [pc, #1156]	; ac34 <bt_compidtostr@@Base+0x11ac>
    a7ac:	add	r0, pc, r0
    a7b0:	bx	lr
    a7b4:	cmp	r0, #360	; 0x168
    a7b8:	beq	ed50 <bt_compidtostr@@Base+0x52c8>
    a7bc:	bls	a7f4 <bt_compidtostr@@Base+0xd6c>
    a7c0:	movw	r3, #362	; 0x16a
    a7c4:	cmp	r0, r3
    a7c8:	beq	e324 <bt_compidtostr@@Base+0x489c>
    a7cc:	bhi	da6c <bt_compidtostr@@Base+0x3fe4>
    a7d0:	ldr	r0, [pc, #1120]	; ac38 <bt_compidtostr@@Base+0x11b0>
    a7d4:	add	r0, pc, r0
    a7d8:	bx	lr
    a7dc:	cmp	r0, #1
    a7e0:	beq	e318 <bt_compidtostr@@Base+0x4890>
    a7e4:	bhi	da60 <bt_compidtostr@@Base+0x3fd8>
    a7e8:	ldr	r0, [pc, #1100]	; ac3c <bt_compidtostr@@Base+0x11b4>
    a7ec:	add	r0, pc, r0
    a7f0:	bx	lr
    a7f4:	movw	r3, #358	; 0x166
    a7f8:	cmp	r0, r3
    a7fc:	beq	e30c <bt_compidtostr@@Base+0x4884>
    a800:	bhi	da54 <bt_compidtostr@@Base+0x3fcc>
    a804:	ldr	r0, [pc, #1076]	; ac40 <bt_compidtostr@@Base+0x11b8>
    a808:	add	r0, pc, r0
    a80c:	bx	lr
    a810:	movw	r3, #382	; 0x17e
    a814:	cmp	r0, r3
    a818:	beq	e33c <bt_compidtostr@@Base+0x48b4>
    a81c:	bhi	da48 <bt_compidtostr@@Base+0x3fc0>
    a820:	ldr	r0, [pc, #1052]	; ac44 <bt_compidtostr@@Base+0x11bc>
    a824:	add	r0, pc, r0
    a828:	bx	lr
    a82c:	cmp	r0, #376	; 0x178
    a830:	beq	ed44 <bt_compidtostr@@Base+0x52bc>
    a834:	bls	a8e4 <bt_compidtostr@@Base+0xe5c>
    a838:	movw	r3, #378	; 0x17a
    a83c:	cmp	r0, r3
    a840:	beq	e330 <bt_compidtostr@@Base+0x48a8>
    a844:	bhi	da3c <bt_compidtostr@@Base+0x3fb4>
    a848:	ldr	r0, [pc, #1016]	; ac48 <bt_compidtostr@@Base+0x11c0>
    a84c:	add	r0, pc, r0
    a850:	bx	lr
    a854:	movw	r3, #486	; 0x1e6
    a858:	cmp	r0, r3
    a85c:	beq	f554 <bt_compidtostr@@Base+0x5acc>
    a860:	bls	a984 <bt_compidtostr@@Base+0xefc>
    a864:	movw	r3, #502	; 0x1f6
    a868:	cmp	r0, r3
    a86c:	beq	f4ac <bt_compidtostr@@Base+0x5a24>
    a870:	bls	a94c <bt_compidtostr@@Base+0xec4>
    a874:	movw	r3, #510	; 0x1fe
    a878:	cmp	r0, r3
    a87c:	beq	f344 <bt_compidtostr@@Base+0x58bc>
    a880:	bls	a924 <bt_compidtostr@@Base+0xe9c>
    a884:	movw	r3, #514	; 0x202
    a888:	cmp	r0, r3
    a88c:	beq	f02c <bt_compidtostr@@Base+0x55a4>
    a890:	bls	a90c <bt_compidtostr@@Base+0xe84>
    a894:	cmp	r0, #516	; 0x204
    a898:	beq	e9fc <bt_compidtostr@@Base+0x4f74>
    a89c:	bcc	e384 <bt_compidtostr@@Base+0x48fc>
    a8a0:	movw	r3, #517	; 0x205
    a8a4:	cmp	r0, r3
    a8a8:	beq	da30 <bt_compidtostr@@Base+0x3fa8>
    a8ac:	movw	r3, #518	; 0x206
    a8b0:	cmp	r0, r3
    a8b4:	bne	a900 <bt_compidtostr@@Base+0xe78>
    a8b8:	ldr	r0, [pc, #908]	; ac4c <bt_compidtostr@@Base+0x11c4>
    a8bc:	add	r0, pc, r0
    a8c0:	bx	lr
    a8c4:	movw	r3, #423	; 0x1a7
    a8c8:	cmp	r0, r3
    a8cc:	beq	e378 <bt_compidtostr@@Base+0x48f0>
    a8d0:	cmp	r0, #424	; 0x1a8
    a8d4:	bcs	da24 <bt_compidtostr@@Base+0x3f9c>
    a8d8:	ldr	r0, [pc, #880]	; ac50 <bt_compidtostr@@Base+0x11c8>
    a8dc:	add	r0, pc, r0
    a8e0:	bx	lr
    a8e4:	movw	r3, #374	; 0x176
    a8e8:	cmp	r0, r3
    a8ec:	beq	e39c <bt_compidtostr@@Base+0x4914>
    a8f0:	bhi	da18 <bt_compidtostr@@Base+0x3f90>
    a8f4:	ldr	r0, [pc, #856]	; ac54 <bt_compidtostr@@Base+0x11cc>
    a8f8:	add	r0, pc, r0
    a8fc:	bx	lr
    a900:	ldr	r0, [pc, #848]	; ac58 <bt_compidtostr@@Base+0x11d0>
    a904:	add	r0, pc, r0
    a908:	bx	lr
    a90c:	cmp	r0, #512	; 0x200
    a910:	beq	e390 <bt_compidtostr@@Base+0x4908>
    a914:	bhi	da0c <bt_compidtostr@@Base+0x3f84>
    a918:	ldr	r0, [pc, #828]	; ac5c <bt_compidtostr@@Base+0x11d4>
    a91c:	add	r0, pc, r0
    a920:	bx	lr
    a924:	movw	r3, #506	; 0x1fa
    a928:	cmp	r0, r3
    a92c:	beq	ec78 <bt_compidtostr@@Base+0x51f0>
    a930:	bls	a9cc <bt_compidtostr@@Base+0xf44>
    a934:	cmp	r0, #508	; 0x1fc
    a938:	beq	e3c0 <bt_compidtostr@@Base+0x4938>
    a93c:	bhi	da00 <bt_compidtostr@@Base+0x3f78>
    a940:	ldr	r0, [pc, #792]	; ac60 <bt_compidtostr@@Base+0x11d8>
    a944:	add	r0, pc, r0
    a948:	bx	lr
    a94c:	movw	r3, #494	; 0x1ee
    a950:	cmp	r0, r3
    a954:	beq	f098 <bt_compidtostr@@Base+0x5610>
    a958:	bls	aacc <bt_compidtostr@@Base+0x1044>
    a95c:	movw	r3, #498	; 0x1f2
    a960:	cmp	r0, r3
    a964:	beq	ec60 <bt_compidtostr@@Base+0x51d8>
    a968:	bls	aab4 <bt_compidtostr@@Base+0x102c>
    a96c:	cmp	r0, #500	; 0x1f4
    a970:	beq	e354 <bt_compidtostr@@Base+0x48cc>
    a974:	bhi	d9f4 <bt_compidtostr@@Base+0x3f6c>
    a978:	ldr	r0, [pc, #740]	; ac64 <bt_compidtostr@@Base+0x11dc>
    a97c:	add	r0, pc, r0
    a980:	bx	lr
    a984:	movw	r3, #470	; 0x1d6
    a988:	cmp	r0, r3
    a98c:	beq	f3a4 <bt_compidtostr@@Base+0x591c>
    a990:	bls	aa24 <bt_compidtostr@@Base+0xf9c>
    a994:	movw	r3, #478	; 0x1de
    a998:	cmp	r0, r3
    a99c:	beq	f284 <bt_compidtostr@@Base+0x57fc>
    a9a0:	bls	a9fc <bt_compidtostr@@Base+0xf74>
    a9a4:	movw	r3, #482	; 0x1e2
    a9a8:	cmp	r0, r3
    a9ac:	beq	ec6c <bt_compidtostr@@Base+0x51e4>
    a9b0:	bls	a9e4 <bt_compidtostr@@Base+0xf5c>
    a9b4:	cmp	r0, #484	; 0x1e4
    a9b8:	beq	e36c <bt_compidtostr@@Base+0x48e4>
    a9bc:	bhi	d9e8 <bt_compidtostr@@Base+0x3f60>
    a9c0:	ldr	r0, [pc, #672]	; ac68 <bt_compidtostr@@Base+0x11e0>
    a9c4:	add	r0, pc, r0
    a9c8:	bx	lr
    a9cc:	cmp	r0, #504	; 0x1f8
    a9d0:	beq	e360 <bt_compidtostr@@Base+0x48d8>
    a9d4:	bhi	d9dc <bt_compidtostr@@Base+0x3f54>
    a9d8:	ldr	r0, [pc, #652]	; ac6c <bt_compidtostr@@Base+0x11e4>
    a9dc:	add	r0, pc, r0
    a9e0:	bx	lr
    a9e4:	cmp	r0, #480	; 0x1e0
    a9e8:	beq	e348 <bt_compidtostr@@Base+0x48c0>
    a9ec:	bhi	d9d0 <bt_compidtostr@@Base+0x3f48>
    a9f0:	ldr	r0, [pc, #632]	; ac70 <bt_compidtostr@@Base+0x11e8>
    a9f4:	add	r0, pc, r0
    a9f8:	bx	lr
    a9fc:	movw	r3, #474	; 0x1da
    aa00:	cmp	r0, r3
    aa04:	beq	ec84 <bt_compidtostr@@Base+0x51fc>
    aa08:	bls	aa5c <bt_compidtostr@@Base+0xfd4>
    aa0c:	cmp	r0, #476	; 0x1dc
    aa10:	beq	e3b4 <bt_compidtostr@@Base+0x492c>
    aa14:	bhi	d9c4 <bt_compidtostr@@Base+0x3f3c>
    aa18:	ldr	r0, [pc, #596]	; ac74 <bt_compidtostr@@Base+0x11ec>
    aa1c:	add	r0, pc, r0
    aa20:	bx	lr
    aa24:	movw	r3, #462	; 0x1ce
    aa28:	cmp	r0, r3
    aa2c:	beq	f164 <bt_compidtostr@@Base+0x56dc>
    aa30:	bls	aa8c <bt_compidtostr@@Base+0x1004>
    aa34:	movw	r3, #466	; 0x1d2
    aa38:	cmp	r0, r3
    aa3c:	beq	ed20 <bt_compidtostr@@Base+0x5298>
    aa40:	bls	aa74 <bt_compidtostr@@Base+0xfec>
    aa44:	cmp	r0, #468	; 0x1d4
    aa48:	beq	e2a0 <bt_compidtostr@@Base+0x4818>
    aa4c:	bhi	d9b8 <bt_compidtostr@@Base+0x3f30>
    aa50:	ldr	r0, [pc, #544]	; ac78 <bt_compidtostr@@Base+0x11f0>
    aa54:	add	r0, pc, r0
    aa58:	bx	lr
    aa5c:	cmp	r0, #472	; 0x1d8
    aa60:	beq	e294 <bt_compidtostr@@Base+0x480c>
    aa64:	bhi	d9ac <bt_compidtostr@@Base+0x3f24>
    aa68:	ldr	r0, [pc, #524]	; ac7c <bt_compidtostr@@Base+0x11f4>
    aa6c:	add	r0, pc, r0
    aa70:	bx	lr
    aa74:	cmp	r0, #464	; 0x1d0
    aa78:	beq	e288 <bt_compidtostr@@Base+0x4800>
    aa7c:	bhi	d9a0 <bt_compidtostr@@Base+0x3f18>
    aa80:	ldr	r0, [pc, #504]	; ac80 <bt_compidtostr@@Base+0x11f8>
    aa84:	add	r0, pc, r0
    aa88:	bx	lr
    aa8c:	movw	r3, #458	; 0x1ca
    aa90:	cmp	r0, r3
    aa94:	beq	ec54 <bt_compidtostr@@Base+0x51cc>
    aa98:	bls	aaf4 <bt_compidtostr@@Base+0x106c>
    aa9c:	cmp	r0, #460	; 0x1cc
    aaa0:	beq	e3a8 <bt_compidtostr@@Base+0x4920>
    aaa4:	bhi	d994 <bt_compidtostr@@Base+0x3f0c>
    aaa8:	ldr	r0, [pc, #468]	; ac84 <bt_compidtostr@@Base+0x11fc>
    aaac:	add	r0, pc, r0
    aab0:	bx	lr
    aab4:	cmp	r0, #496	; 0x1f0
    aab8:	beq	e2c4 <bt_compidtostr@@Base+0x483c>
    aabc:	bhi	d988 <bt_compidtostr@@Base+0x3f00>
    aac0:	ldr	r0, [pc, #448]	; ac88 <bt_compidtostr@@Base+0x1200>
    aac4:	add	r0, pc, r0
    aac8:	bx	lr
    aacc:	movw	r3, #490	; 0x1ea
    aad0:	cmp	r0, r3
    aad4:	beq	ed68 <bt_compidtostr@@Base+0x52e0>
    aad8:	bls	ae10 <bt_compidtostr@@Base+0x1388>
    aadc:	cmp	r0, #492	; 0x1ec
    aae0:	beq	e2ac <bt_compidtostr@@Base+0x4824>
    aae4:	bhi	d97c <bt_compidtostr@@Base+0x3ef4>
    aae8:	ldr	r0, [pc, #412]	; ac8c <bt_compidtostr@@Base+0x1204>
    aaec:	add	r0, pc, r0
    aaf0:	bx	lr
    aaf4:	cmp	r0, #456	; 0x1c8
    aaf8:	beq	e2b8 <bt_compidtostr@@Base+0x4830>
    aafc:	bhi	d970 <bt_compidtostr@@Base+0x3ee8>
    ab00:	ldr	r0, [pc, #392]	; ac90 <bt_compidtostr@@Base+0x1208>
    ab04:	add	r0, pc, r0
    ab08:	bx	lr
    ab0c:	andeq	fp, r0, ip, ror r4
    ab10:	andeq	sp, r0, r4, ror lr
    ab14:	andeq	sl, r0, r8, ror #28
    ab18:	ldrdeq	fp, [r0], -r8
    ab1c:	andeq	fp, r0, r0, lsr r2
    ab20:	andeq	fp, r0, r8, asr r1
    ab24:	muleq	r0, ip, r1
    ab28:	andeq	fp, r0, r4, ror #1
    ab2c:	andeq	fp, r0, r0, rrx
    ab30:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    ab34:	andeq	fp, r0, r0, asr lr
    ab38:	ldrdeq	fp, [r0], -r8
    ab3c:	andeq	sl, r0, r0, lsl #30
    ab40:	andeq	sl, r0, ip, lsl #25
    ab44:	strdeq	fp, [r0], -ip
    ab48:	andeq	fp, r0, ip, ror r6
    ab4c:	andeq	fp, r0, r0, lsr #11
    ab50:	andeq	sl, r0, r4, lsl ip
    ab54:	muleq	r0, ip, ip
    ab58:	andeq	fp, r0, r8, ror #7
    ab5c:	andeq	fp, r0, r8, ror r5
    ab60:	andeq	fp, r0, r4, asr #6
    ab64:			; <UNDEFINED> instruction: 0x0000b2b4
    ab68:	ldrdeq	fp, [r0], -ip
    ab6c:	andeq	fp, r0, ip, lsl r2
    ab70:	andeq	fp, r0, r0, asr r1
    ab74:	ldrdeq	fp, [r0], -r0
    ab78:	strdeq	fp, [r0], -r4
    ab7c:	andeq	fp, r0, r8, lsl #7
    ab80:	andeq	fp, r0, r0, lsl r0
    ab84:	andeq	fp, r0, r4, lsl #6
    ab88:	muleq	r0, r8, sl
    ab8c:	andeq	fp, r0, r0, asr #19
    ab90:	strdeq	fp, [r0], -r8
    ab94:	andeq	fp, r0, r8, lsr #18
    ab98:			; <UNDEFINED> instruction: 0x0000b8b0
    ab9c:	andeq	fp, r0, ip, asr #15
    aba0:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    aba4:			; <UNDEFINED> instruction: 0x0000b7b0
    aba8:	andeq	ip, r0, r0, lsr r4
    abac:	andeq	sl, r0, r0, lsr sl
    abb0:	andeq	sl, r0, r8, asr r8
    abb4:	andeq	ip, r0, r0, asr r3
    abb8:	ldrdeq	ip, [r0], -r0
    abbc:			; <UNDEFINED> instruction: 0x0000c1bc
    abc0:	andeq	ip, r0, r0, asr #32
    abc4:	andeq	ip, r0, r8, lsr #3
    abc8:	ldrdeq	fp, [r0], -r4
    abcc:	andeq	fp, r0, ip, asr #30
    abd0:	andeq	fp, r0, r0, ror lr
    abd4:	andeq	fp, r0, ip, lsr #29
    abd8:	andeq	fp, r0, r0, ror #27
    abdc:	andeq	fp, r0, ip, ror #26
    abe0:	andeq	fp, r0, r8, ror #31
    abe4:	andeq	fp, r0, r4, ror #30
    abe8:	andeq	fp, r0, ip, ror ip
    abec:	andeq	fp, r0, ip, ror #29
    abf0:	andeq	ip, r0, ip, lsl r6
    abf4:			; <UNDEFINED> instruction: 0x0000cab0
    abf8:	andeq	sl, r0, ip, ror #9
    abfc:	andeq	sl, r0, r0, ror #9
    ac00:	andeq	ip, r0, r8, ror #19
    ac04:	andeq	ip, r0, ip, asr r9
    ac08:	muleq	r0, r8, r8
    ac0c:			; <UNDEFINED> instruction: 0x0000c8b4
    ac10:	strdeq	ip, [r0], -r8
    ac14:	andeq	ip, r0, r8, ror #14
    ac18:	muleq	r0, r0, r6
    ac1c:	andeq	ip, r0, r8, lsl #5
    ac20:			; <UNDEFINED> instruction: 0x0000a4b4
    ac24:	andeq	sl, r0, ip, asr #7
    ac28:	andeq	sl, r0, r8, lsr #8
    ac2c:	andeq	sl, r0, ip, asr #6
    ac30:	strdeq	sl, [r0], -ip
    ac34:	andeq	ip, r0, r0, lsl #3
    ac38:	andeq	ip, r0, ip, lsl r1
    ac3c:	andeq	sl, r0, r8, ror #4
    ac40:	andeq	ip, r0, r0, lsl #1
    ac44:	andeq	ip, r0, r4, asr #4
    ac48:	ldrdeq	ip, [r0], -r0
    ac4c:	andeq	ip, r0, r4, ror ip
    ac50:			; <UNDEFINED> instruction: 0x0000c4b4
    ac54:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    ac58:	andeq	sl, r0, r0, asr #2
    ac5c:	andeq	ip, r0, r4, lsl #23
    ac60:	strdeq	ip, [r0], -r4
    ac64:	andeq	ip, r0, r0, lsl #20
    ac68:	andeq	ip, r0, ip, ror #16
    ac6c:	strdeq	ip, [r0], -r4
    ac70:	andeq	ip, r0, r0, lsl #16
    ac74:	andeq	ip, r0, ip, ror #14
    ac78:	muleq	r0, r8, r6
    ac7c:	andeq	ip, r0, r0, asr #13
    ac80:	andeq	ip, r0, r0, lsr r6
    ac84:	andeq	ip, r0, ip, lsr #11
    ac88:	andeq	ip, r0, r0, ror #16
    ac8c:	andeq	ip, r0, r4, ror #15
    ac90:	andeq	ip, r0, r4, lsl r5
    ac94:	andeq	ip, r0, r8, ror #8
    ac98:	andeq	fp, r0, r4, asr #19
    ac9c:	andeq	fp, r0, r4, lsl #29
    aca0:	andeq	fp, r0, r4, asr #18
    aca4:	ldrdeq	fp, [r0], -r4
    aca8:	andeq	fp, r0, r0, lsl #16
    acac:	andeq	fp, r0, ip, lsr #16
    acb0:	andeq	fp, r0, ip, ror #14
    acb4:	andeq	fp, r0, r4, lsl #14
    acb8:	andeq	fp, r0, r4, lsr #26
    acbc:	andeq	fp, r0, r4, lsr ip
    acc0:	andeq	fp, r0, r4, lsr r6
    acc4:	andeq	fp, r0, r4, asr #24
    acc8:	andeq	fp, r0, r4, lsl #23
    accc:	strdeq	fp, [r0], -ip
    acd0:	andeq	r9, r0, r4, ror #19
    acd4:	andeq	sl, r0, r4, lsr r7
    acd8:	andeq	sl, r0, r8, lsl r6
    acdc:	muleq	r0, r0, r6
    ace0:	andeq	sl, r0, r0, ror #10
    ace4:	strdeq	sl, [r0], -ip
    ace8:	strdeq	sl, [r0], -ip
    acec:	andeq	r9, r0, r8, lsl r9
    acf0:	andeq	sl, r0, ip, asr r4
    acf4:	ldrdeq	sl, [r0], -r8
    acf8:	andeq	sl, r0, ip, ror #28
    acfc:	andeq	sl, r0, r0, lsl #27
    ad00:	andeq	sl, r0, r0, lsl #24
    ad04:	andeq	sl, r0, r0, lsr #27
    ad08:	andeq	sl, r0, ip, lsl #23
    ad0c:	andeq	sl, r0, r0, lsl #22
    ad10:	andeq	sl, r0, r0, lsl sl
    ad14:	andeq	sl, r0, ip, asr #20
    ad18:	muleq	r0, r0, r9
    ad1c:	andeq	sl, r0, r4, asr #18
    ad20:	strdeq	sl, [r0], -r0
    ad24:	andeq	sl, r0, ip, ror fp
    ad28:	andeq	sl, r0, ip, lsr #17
    ad2c:	strdeq	sl, [r0], -r8
    ad30:	strdeq	ip, [r0], -r4
    ad34:	andeq	ip, r0, r8, lsr #23
    ad38:	andeq	ip, r0, r0, lsr #6
    ad3c:	andeq	r9, r0, r4, lsr r6
    ad40:	andeq	ip, r0, r4, ror #21
    ad44:	andeq	ip, r0, r8, asr #20
    ad48:	andeq	ip, r0, ip, ror r9
    ad4c:	andeq	ip, r0, r4, lsl r8
    ad50:	andeq	ip, r0, ip, ror #18
    ad54:	muleq	r0, r8, r7
    ad58:	andeq	ip, r0, r0, lsr #14
    ad5c:	andeq	ip, r0, r0, lsl #12
    ad60:	andeq	ip, r0, r4, asr #12
    ad64:	andeq	ip, r0, r8, lsl #11
    ad68:	strdeq	ip, [r0], -r0
    ad6c:	andeq	ip, r0, ip, ror #15
    ad70:	andeq	ip, r0, ip, ror r7
    ad74:	andeq	ip, r0, r0, asr r4
    ad78:	andeq	ip, r0, r8, ror #13
    ad7c:	andeq	ip, r0, ip, ror r0
    ad80:	andeq	fp, r0, r0, lsr #31
    ad84:	ldrdeq	fp, [r0], -r4
    ad88:	andeq	fp, r0, r0, lsr #30
    ad8c:	andeq	fp, r0, ip, lsl #29
    ad90:	andeq	ip, r0, ip, asr sp
    ad94:	strdeq	sp, [r0], -r4
    ad98:	strdeq	fp, [r0], -ip
    ad9c:	andeq	r9, r0, r4, ror #3
    ada0:	andeq	sp, r0, r8, asr #12
    ada4:			; <UNDEFINED> instruction: 0x0000d5b8
    ada8:	strdeq	sp, [r0], -r0
    adac:	andeq	sp, r0, r8, lsl #7
    adb0:			; <UNDEFINED> instruction: 0x0000d4b4
    adb4:	strdeq	sp, [r0], -r4
    adb8:	andeq	sp, r0, r0, ror r2
    adbc:	muleq	r0, ip, r1
    adc0:	andeq	sp, r0, r8, asr #3
    adc4:	strdeq	sp, [r0], -ip
    adc8:	andeq	sp, r0, r0, lsl #1
    adcc:	andeq	sp, r0, ip, lsr #6
    add0:	andeq	sp, r0, r4, lsr #5
    add4:	andeq	ip, r0, r0, ror #31
    add8:	andeq	sp, r0, ip, lsr #4
    addc:	andeq	sp, r0, r0, lsl r9
    ade0:	muleq	r0, ip, sp
    ade4:	andeq	r8, r0, r8, ror lr
    ade8:	andeq	r8, r0, ip, ror #28
    adec:	ldrdeq	sp, [r0], -r0
    adf0:	andeq	sp, r0, r8, asr #24
    adf4:	andeq	sp, r0, ip, asr #22
    adf8:	andeq	sp, r0, r8, lsl #23
    adfc:	ldrdeq	sp, [r0], -r0
    ae00:	andeq	sp, r0, r0, asr #20
    ae04:	andeq	sp, r0, r4, asr r9
    ae08:	andeq	ip, r0, ip, asr #12
    ae0c:	andeq	ip, r0, r0, lsr #8
    ae10:	cmp	r0, #488	; 0x1e8
    ae14:	beq	e144 <bt_compidtostr@@Base+0x46bc>
    ae18:	bhi	d964 <bt_compidtostr@@Base+0x3edc>
    ae1c:	ldr	r0, [pc, #-400]	; ac94 <bt_compidtostr@@Base+0x120c>
    ae20:	add	r0, pc, r0
    ae24:	bx	lr
    ae28:	cmp	r0, #340	; 0x154
    ae2c:	beq	f380 <bt_compidtostr@@Base+0x58f8>
    ae30:	bls	aecc <bt_compidtostr@@Base+0x1444>
    ae34:	cmp	r0, #348	; 0x15c
    ae38:	beq	f20c <bt_compidtostr@@Base+0x5784>
    ae3c:	bls	aea4 <bt_compidtostr@@Base+0x141c>
    ae40:	cmp	r0, #352	; 0x160
    ae44:	beq	edf8 <bt_compidtostr@@Base+0x5370>
    ae48:	bls	ae88 <bt_compidtostr@@Base+0x1400>
    ae4c:	movw	r3, #354	; 0x162
    ae50:	cmp	r0, r3
    ae54:	beq	e168 <bt_compidtostr@@Base+0x46e0>
    ae58:	bhi	d958 <bt_compidtostr@@Base+0x3ed0>
    ae5c:	ldr	r0, [pc, #-460]	; ac98 <bt_compidtostr@@Base+0x1210>
    ae60:	add	r0, pc, r0
    ae64:	bx	lr
    ae68:	movw	r3, #415	; 0x19f
    ae6c:	cmp	r0, r3
    ae70:	beq	e15c <bt_compidtostr@@Base+0x46d4>
    ae74:	cmp	r0, #416	; 0x1a0
    ae78:	bcs	d94c <bt_compidtostr@@Base+0x3ec4>
    ae7c:	ldr	r0, [pc, #-488]	; ac9c <bt_compidtostr@@Base+0x1214>
    ae80:	add	r0, pc, r0
    ae84:	bx	lr
    ae88:	movw	r3, #350	; 0x15e
    ae8c:	cmp	r0, r3
    ae90:	beq	e150 <bt_compidtostr@@Base+0x46c8>
    ae94:	bhi	d940 <bt_compidtostr@@Base+0x3eb8>
    ae98:	ldr	r0, [pc, #-512]	; aca0 <bt_compidtostr@@Base+0x1218>
    ae9c:	add	r0, pc, r0
    aea0:	bx	lr
    aea4:	cmp	r0, #344	; 0x158
    aea8:	beq	edc8 <bt_compidtostr@@Base+0x5340>
    aeac:	bls	af00 <bt_compidtostr@@Base+0x1478>
    aeb0:	movw	r3, #346	; 0x15a
    aeb4:	cmp	r0, r3
    aeb8:	beq	e1a4 <bt_compidtostr@@Base+0x471c>
    aebc:	bhi	d934 <bt_compidtostr@@Base+0x3eac>
    aec0:	ldr	r0, [pc, #-548]	; aca4 <bt_compidtostr@@Base+0x121c>
    aec4:	add	r0, pc, r0
    aec8:	bx	lr
    aecc:	cmp	r0, #332	; 0x14c
    aed0:	beq	f200 <bt_compidtostr@@Base+0x5778>
    aed4:	bls	af38 <bt_compidtostr@@Base+0x14b0>
    aed8:	cmp	r0, #336	; 0x150
    aedc:	beq	edec <bt_compidtostr@@Base+0x5364>
    aee0:	bls	af1c <bt_compidtostr@@Base+0x1494>
    aee4:	movw	r3, #338	; 0x152
    aee8:	cmp	r0, r3
    aeec:	beq	e18c <bt_compidtostr@@Base+0x4704>
    aef0:	bhi	d928 <bt_compidtostr@@Base+0x3ea0>
    aef4:	ldr	r0, [pc, #-596]	; aca8 <bt_compidtostr@@Base+0x1220>
    aef8:	add	r0, pc, r0
    aefc:	bx	lr
    af00:	movw	r3, #342	; 0x156
    af04:	cmp	r0, r3
    af08:	beq	e180 <bt_compidtostr@@Base+0x46f8>
    af0c:	bhi	d91c <bt_compidtostr@@Base+0x3e94>
    af10:	ldr	r0, [pc, #-620]	; acac <bt_compidtostr@@Base+0x1224>
    af14:	add	r0, pc, r0
    af18:	bx	lr
    af1c:	movw	r3, #334	; 0x14e
    af20:	cmp	r0, r3
    af24:	beq	e174 <bt_compidtostr@@Base+0x46ec>
    af28:	bhi	d910 <bt_compidtostr@@Base+0x3e88>
    af2c:	ldr	r0, [pc, #-644]	; acb0 <bt_compidtostr@@Base+0x1228>
    af30:	add	r0, pc, r0
    af34:	bx	lr
    af38:	cmp	r0, #328	; 0x148
    af3c:	beq	ede0 <bt_compidtostr@@Base+0x5358>
    af40:	bls	afd0 <bt_compidtostr@@Base+0x1548>
    af44:	movw	r3, #330	; 0x14a
    af48:	cmp	r0, r3
    af4c:	beq	e198 <bt_compidtostr@@Base+0x4710>
    af50:	bhi	d904 <bt_compidtostr@@Base+0x3e7c>
    af54:	ldr	r0, [pc, #-680]	; acb4 <bt_compidtostr@@Base+0x122c>
    af58:	add	r0, pc, r0
    af5c:	bx	lr
    af60:	movw	r3, #409	; 0x199
    af64:	cmp	r0, r3
    af68:	beq	ed5c <bt_compidtostr@@Base+0x52d4>
    af6c:	bls	afec <bt_compidtostr@@Base+0x1564>
    af70:	movw	r3, #411	; 0x19b
    af74:	cmp	r0, r3
    af78:	beq	e2e8 <bt_compidtostr@@Base+0x4860>
    af7c:	cmp	r0, #412	; 0x19c
    af80:	bcs	d8f8 <bt_compidtostr@@Base+0x3e70>
    af84:	ldr	r0, [pc, #-724]	; acb8 <bt_compidtostr@@Base+0x1230>
    af88:	add	r0, pc, r0
    af8c:	bx	lr
    af90:	movw	r3, #397	; 0x18d
    af94:	cmp	r0, r3
    af98:	beq	f134 <bt_compidtostr@@Base+0x56ac>
    af9c:	bls	b02c <bt_compidtostr@@Base+0x15a4>
    afa0:	movw	r3, #401	; 0x191
    afa4:	cmp	r0, r3
    afa8:	beq	ed74 <bt_compidtostr@@Base+0x52ec>
    afac:	bls	b00c <bt_compidtostr@@Base+0x1584>
    afb0:	movw	r3, #403	; 0x193
    afb4:	cmp	r0, r3
    afb8:	beq	e300 <bt_compidtostr@@Base+0x4878>
    afbc:	cmp	r0, #404	; 0x194
    afc0:	bcs	d8ec <bt_compidtostr@@Base+0x3e64>
    afc4:	ldr	r0, [pc, #-784]	; acbc <bt_compidtostr@@Base+0x1234>
    afc8:	add	r0, pc, r0
    afcc:	bx	lr
    afd0:	movw	r3, #326	; 0x146
    afd4:	cmp	r0, r3
    afd8:	beq	e2f4 <bt_compidtostr@@Base+0x486c>
    afdc:	bhi	d8e0 <bt_compidtostr@@Base+0x3e58>
    afe0:	ldr	r0, [pc, #-808]	; acc0 <bt_compidtostr@@Base+0x1238>
    afe4:	add	r0, pc, r0
    afe8:	bx	lr
    afec:	movw	r3, #407	; 0x197
    aff0:	cmp	r0, r3
    aff4:	beq	e2dc <bt_compidtostr@@Base+0x4854>
    aff8:	cmp	r0, #408	; 0x198
    affc:	bcs	d8d4 <bt_compidtostr@@Base+0x3e4c>
    b000:	ldr	r0, [pc, #-836]	; acc4 <bt_compidtostr@@Base+0x123c>
    b004:	add	r0, pc, r0
    b008:	bx	lr
    b00c:	movw	r3, #399	; 0x18f
    b010:	cmp	r0, r3
    b014:	beq	e2d0 <bt_compidtostr@@Base+0x4848>
    b018:	cmp	r0, #400	; 0x190
    b01c:	bcs	d8c8 <bt_compidtostr@@Base+0x3e40>
    b020:	ldr	r0, [pc, #-864]	; acc8 <bt_compidtostr@@Base+0x1240>
    b024:	add	r0, pc, r0
    b028:	bx	lr
    b02c:	movw	r3, #393	; 0x189
    b030:	cmp	r0, r3
    b034:	beq	eda4 <bt_compidtostr@@Base+0x531c>
    b038:	bls	c338 <bt_compidtostr@@Base+0x28b0>
    b03c:	movw	r3, #395	; 0x18b
    b040:	cmp	r0, r3
    b044:	beq	e1d4 <bt_compidtostr@@Base+0x474c>
    b048:	cmp	r0, #396	; 0x18c
    b04c:	bcs	d8bc <bt_compidtostr@@Base+0x3e34>
    b050:	ldr	r0, [pc, #-908]	; accc <bt_compidtostr@@Base+0x1244>
    b054:	add	r0, pc, r0
    b058:	bx	lr
    b05c:	ldr	r0, [pc, #-916]	; acd0 <bt_compidtostr@@Base+0x1248>
    b060:	add	r0, pc, r0
    b064:	bx	lr
    b068:	cmp	r0, #149	; 0x95
    b06c:	beq	edb0 <bt_compidtostr@@Base+0x5328>
    b070:	bls	b0bc <bt_compidtostr@@Base+0x1634>
    b074:	cmp	r0, #151	; 0x97
    b078:	beq	e1c8 <bt_compidtostr@@Base+0x4740>
    b07c:	bhi	d8b0 <bt_compidtostr@@Base+0x3e28>
    b080:	ldr	r0, [pc, #-948]	; acd4 <bt_compidtostr@@Base+0x124c>
    b084:	add	r0, pc, r0
    b088:	bx	lr
    b08c:	cmp	r0, #137	; 0x89
    b090:	beq	f1f4 <bt_compidtostr@@Base+0x576c>
    b094:	bls	b0ec <bt_compidtostr@@Base+0x1664>
    b098:	cmp	r0, #141	; 0x8d
    b09c:	beq	edbc <bt_compidtostr@@Base+0x5334>
    b0a0:	bls	b0d4 <bt_compidtostr@@Base+0x164c>
    b0a4:	cmp	r0, #143	; 0x8f
    b0a8:	beq	e1bc <bt_compidtostr@@Base+0x4734>
    b0ac:	bhi	d8a4 <bt_compidtostr@@Base+0x3e1c>
    b0b0:	ldr	r0, [pc, #-992]	; acd8 <bt_compidtostr@@Base+0x1250>
    b0b4:	add	r0, pc, r0
    b0b8:	bx	lr
    b0bc:	cmp	r0, #147	; 0x93
    b0c0:	beq	e1b0 <bt_compidtostr@@Base+0x4728>
    b0c4:	bhi	d898 <bt_compidtostr@@Base+0x3e10>
    b0c8:	ldr	r0, [pc, #-1012]	; acdc <bt_compidtostr@@Base+0x1254>
    b0cc:	add	r0, pc, r0
    b0d0:	bx	lr
    b0d4:	cmp	r0, #139	; 0x8b
    b0d8:	beq	e1f8 <bt_compidtostr@@Base+0x4770>
    b0dc:	bhi	d88c <bt_compidtostr@@Base+0x3e04>
    b0e0:	ldr	r0, [pc, #-1032]	; ace0 <bt_compidtostr@@Base+0x1258>
    b0e4:	add	r0, pc, r0
    b0e8:	bx	lr
    b0ec:	cmp	r0, #133	; 0x85
    b0f0:	beq	ed98 <bt_compidtostr@@Base+0x5310>
    b0f4:	bls	b134 <bt_compidtostr@@Base+0x16ac>
    b0f8:	cmp	r0, #135	; 0x87
    b0fc:	beq	e1ec <bt_compidtostr@@Base+0x4764>
    b100:	bhi	d880 <bt_compidtostr@@Base+0x3df8>
    b104:	ldr	r0, [pc, #-1064]	; ace4 <bt_compidtostr@@Base+0x125c>
    b108:	add	r0, pc, r0
    b10c:	bx	lr
    b110:	cmp	r0, #155	; 0x9b
    b114:	beq	e1e0 <bt_compidtostr@@Base+0x4758>
    b118:	bhi	d874 <bt_compidtostr@@Base+0x3dec>
    b11c:	ldr	r0, [pc, #-1084]	; ace8 <bt_compidtostr@@Base+0x1260>
    b120:	add	r0, pc, r0
    b124:	bx	lr
    b128:	ldr	r0, [pc, #-1092]	; acec <bt_compidtostr@@Base+0x1264>
    b12c:	add	r0, pc, r0
    b130:	bx	lr
    b134:	cmp	r0, #131	; 0x83
    b138:	beq	e21c <bt_compidtostr@@Base+0x4794>
    b13c:	bhi	d868 <bt_compidtostr@@Base+0x3de0>
    b140:	ldr	r0, [pc, #-1112]	; acf0 <bt_compidtostr@@Base+0x1268>
    b144:	add	r0, pc, r0
    b148:	bx	lr
    b14c:	cmp	r0, #252	; 0xfc
    b150:	beq	e210 <bt_compidtostr@@Base+0x4788>
    b154:	bhi	d85c <bt_compidtostr@@Base+0x3dd4>
    b158:	ldr	r0, [pc, #-1132]	; acf4 <bt_compidtostr@@Base+0x126c>
    b15c:	add	r0, pc, r0
    b160:	bx	lr
    b164:	cmp	r0, #246	; 0xf6
    b168:	beq	ed8c <bt_compidtostr@@Base+0x5304>
    b16c:	bls	b1f4 <bt_compidtostr@@Base+0x176c>
    b170:	cmp	r0, #248	; 0xf8
    b174:	beq	e204 <bt_compidtostr@@Base+0x477c>
    b178:	bhi	d850 <bt_compidtostr@@Base+0x3dc8>
    b17c:	ldr	r0, [pc, #-1164]	; acf8 <bt_compidtostr@@Base+0x1270>
    b180:	add	r0, pc, r0
    b184:	bx	lr
    b188:	cmp	r0, #234	; 0xea
    b18c:	beq	f230 <bt_compidtostr@@Base+0x57a8>
    b190:	bls	b2e4 <bt_compidtostr@@Base+0x185c>
    b194:	cmp	r0, #238	; 0xee
    b198:	beq	ee4c <bt_compidtostr@@Base+0x53c4>
    b19c:	bls	b2cc <bt_compidtostr@@Base+0x1844>
    b1a0:	cmp	r0, #240	; 0xf0
    b1a4:	beq	e078 <bt_compidtostr@@Base+0x45f0>
    b1a8:	bhi	d844 <bt_compidtostr@@Base+0x3dbc>
    b1ac:	ldr	r0, [pc, #-1208]	; acfc <bt_compidtostr@@Base+0x1274>
    b1b0:	add	r0, pc, r0
    b1b4:	bx	lr
    b1b8:	cmp	r0, #210	; 0xd2
    b1bc:	beq	f404 <bt_compidtostr@@Base+0x597c>
    b1c0:	bls	b248 <bt_compidtostr@@Base+0x17c0>
    b1c4:	cmp	r0, #218	; 0xda
    b1c8:	beq	f29c <bt_compidtostr@@Base+0x5814>
    b1cc:	bls	b224 <bt_compidtostr@@Base+0x179c>
    b1d0:	cmp	r0, #222	; 0xde
    b1d4:	beq	ee40 <bt_compidtostr@@Base+0x53b8>
    b1d8:	bls	b20c <bt_compidtostr@@Base+0x1784>
    b1dc:	cmp	r0, #224	; 0xe0
    b1e0:	beq	e090 <bt_compidtostr@@Base+0x4608>
    b1e4:	bhi	d838 <bt_compidtostr@@Base+0x3db0>
    b1e8:	ldr	r0, [pc, #-1264]	; ad00 <bt_compidtostr@@Base+0x1278>
    b1ec:	add	r0, pc, r0
    b1f0:	bx	lr
    b1f4:	cmp	r0, #244	; 0xf4
    b1f8:	beq	e084 <bt_compidtostr@@Base+0x45fc>
    b1fc:	bhi	d82c <bt_compidtostr@@Base+0x3da4>
    b200:	ldr	r0, [pc, #-1284]	; ad04 <bt_compidtostr@@Base+0x127c>
    b204:	add	r0, pc, r0
    b208:	bx	lr
    b20c:	cmp	r0, #220	; 0xdc
    b210:	beq	e0c0 <bt_compidtostr@@Base+0x4638>
    b214:	bhi	d820 <bt_compidtostr@@Base+0x3d98>
    b218:	ldr	r0, [pc, #-1304]	; ad08 <bt_compidtostr@@Base+0x1280>
    b21c:	add	r0, pc, r0
    b220:	bx	lr
    b224:	cmp	r0, #214	; 0xd6
    b228:	beq	ee34 <bt_compidtostr@@Base+0x53ac>
    b22c:	bls	b278 <bt_compidtostr@@Base+0x17f0>
    b230:	cmp	r0, #216	; 0xd8
    b234:	beq	e0cc <bt_compidtostr@@Base+0x4644>
    b238:	bhi	d814 <bt_compidtostr@@Base+0x3d8c>
    b23c:	ldr	r0, [pc, #-1336]	; ad0c <bt_compidtostr@@Base+0x1284>
    b240:	add	r0, pc, r0
    b244:	bx	lr
    b248:	cmp	r0, #202	; 0xca
    b24c:	beq	f218 <bt_compidtostr@@Base+0x5790>
    b250:	bls	b2a8 <bt_compidtostr@@Base+0x1820>
    b254:	cmp	r0, #206	; 0xce
    b258:	beq	ee1c <bt_compidtostr@@Base+0x5394>
    b25c:	bls	b290 <bt_compidtostr@@Base+0x1808>
    b260:	cmp	r0, #208	; 0xd0
    b264:	beq	e0b4 <bt_compidtostr@@Base+0x462c>
    b268:	bhi	d808 <bt_compidtostr@@Base+0x3d80>
    b26c:	ldr	r0, [pc, #-1380]	; ad10 <bt_compidtostr@@Base+0x1288>
    b270:	add	r0, pc, r0
    b274:	bx	lr
    b278:	cmp	r0, #212	; 0xd4
    b27c:	beq	e0a8 <bt_compidtostr@@Base+0x4620>
    b280:	bhi	d7fc <bt_compidtostr@@Base+0x3d74>
    b284:	ldr	r0, [pc, #-1400]	; ad14 <bt_compidtostr@@Base+0x128c>
    b288:	add	r0, pc, r0
    b28c:	bx	lr
    b290:	cmp	r0, #204	; 0xcc
    b294:	beq	e09c <bt_compidtostr@@Base+0x4614>
    b298:	bhi	d7f0 <bt_compidtostr@@Base+0x3d68>
    b29c:	ldr	r0, [pc, #-1420]	; ad18 <bt_compidtostr@@Base+0x1290>
    b2a0:	add	r0, pc, r0
    b2a4:	bx	lr
    b2a8:	cmp	r0, #198	; 0xc6
    b2ac:	beq	ee04 <bt_compidtostr@@Base+0x537c>
    b2b0:	bls	b308 <bt_compidtostr@@Base+0x1880>
    b2b4:	cmp	r0, #200	; 0xc8
    b2b8:	beq	e108 <bt_compidtostr@@Base+0x4680>
    b2bc:	bhi	d7e4 <bt_compidtostr@@Base+0x3d5c>
    b2c0:	ldr	r0, [pc, #-1452]	; ad1c <bt_compidtostr@@Base+0x1294>
    b2c4:	add	r0, pc, r0
    b2c8:	bx	lr
    b2cc:	cmp	r0, #236	; 0xec
    b2d0:	beq	e12c <bt_compidtostr@@Base+0x46a4>
    b2d4:	bhi	d7d8 <bt_compidtostr@@Base+0x3d50>
    b2d8:	ldr	r0, [pc, #-1472]	; ad20 <bt_compidtostr@@Base+0x1298>
    b2dc:	add	r0, pc, r0
    b2e0:	bx	lr
    b2e4:	cmp	r0, #230	; 0xe6
    b2e8:	beq	edd4 <bt_compidtostr@@Base+0x534c>
    b2ec:	bls	b320 <bt_compidtostr@@Base+0x1898>
    b2f0:	cmp	r0, #232	; 0xe8
    b2f4:	beq	e138 <bt_compidtostr@@Base+0x46b0>
    b2f8:	bhi	d7cc <bt_compidtostr@@Base+0x3d44>
    b2fc:	ldr	r0, [pc, #-1504]	; ad24 <bt_compidtostr@@Base+0x129c>
    b300:	add	r0, pc, r0
    b304:	bx	lr
    b308:	cmp	r0, #196	; 0xc4
    b30c:	beq	e120 <bt_compidtostr@@Base+0x4698>
    b310:	bhi	d7c0 <bt_compidtostr@@Base+0x3d38>
    b314:	ldr	r0, [pc, #-1524]	; ad28 <bt_compidtostr@@Base+0x12a0>
    b318:	add	r0, pc, r0
    b31c:	bx	lr
    b320:	cmp	r0, #228	; 0xe4
    b324:	beq	e114 <bt_compidtostr@@Base+0x468c>
    b328:	bhi	d7b4 <bt_compidtostr@@Base+0x3d2c>
    b32c:	ldr	r0, [pc, #-1544]	; ad2c <bt_compidtostr@@Base+0x12a4>
    b330:	add	r0, pc, r0
    b334:	bx	lr
    b338:	movw	r3, #535	; 0x217
    b33c:	cmp	r0, r3
    b340:	beq	f38c <bt_compidtostr@@Base+0x5904>
    b344:	cmp	r0, #536	; 0x218
    b348:	bcc	b670 <bt_compidtostr@@Base+0x1be8>
    b34c:	movw	r3, #543	; 0x21f
    b350:	cmp	r0, r3
    b354:	beq	f08c <bt_compidtostr@@Base+0x5604>
    b358:	cmp	r0, #544	; 0x220
    b35c:	bcc	b640 <bt_compidtostr@@Base+0x1bb8>
    b360:	movw	r3, #547	; 0x223
    b364:	cmp	r0, r3
    b368:	beq	eb7c <bt_compidtostr@@Base+0x50f4>
    b36c:	cmp	r0, #548	; 0x224
    b370:	bcc	b3f0 <bt_compidtostr@@Base+0x1968>
    b374:	movw	r3, #549	; 0x225
    b378:	cmp	r0, r3
    b37c:	beq	e744 <bt_compidtostr@@Base+0x4cbc>
    b380:	bhi	d7a8 <bt_compidtostr@@Base+0x3d20>
    b384:	ldr	r0, [pc, #-1628]	; ad30 <bt_compidtostr@@Base+0x12a8>
    b388:	add	r0, pc, r0
    b38c:	bx	lr
    b390:	cmp	r0, #616	; 0x268
    b394:	beq	f518 <bt_compidtostr@@Base+0x5a90>
    b398:	bls	b490 <bt_compidtostr@@Base+0x1a08>
    b39c:	cmp	r0, #632	; 0x278
    b3a0:	beq	f434 <bt_compidtostr@@Base+0x59ac>
    b3a4:	bls	b45c <bt_compidtostr@@Base+0x19d4>
    b3a8:	cmp	r0, #640	; 0x280
    b3ac:	beq	f314 <bt_compidtostr@@Base+0x588c>
    b3b0:	bls	b434 <bt_compidtostr@@Base+0x19ac>
    b3b4:	cmp	r0, #644	; 0x284
    b3b8:	beq	f044 <bt_compidtostr@@Base+0x55bc>
    b3bc:	bls	b418 <bt_compidtostr@@Base+0x1990>
    b3c0:	movw	r3, #646	; 0x286
    b3c4:	cmp	r0, r3
    b3c8:	beq	e9e4 <bt_compidtostr@@Base+0x4f5c>
    b3cc:	bcc	e750 <bt_compidtostr@@Base+0x4cc8>
    b3d0:	movw	r3, #647	; 0x287
    b3d4:	cmp	r0, r3
    b3d8:	beq	d79c <bt_compidtostr@@Base+0x3d14>
    b3dc:	cmp	r0, #648	; 0x288
    b3e0:	bne	b40c <bt_compidtostr@@Base+0x1984>
    b3e4:	ldr	r0, [pc, #-1720]	; ad34 <bt_compidtostr@@Base+0x12ac>
    b3e8:	add	r0, pc, r0
    b3ec:	bx	lr
    b3f0:	movw	r3, #545	; 0x221
    b3f4:	cmp	r0, r3
    b3f8:	beq	e738 <bt_compidtostr@@Base+0x4cb0>
    b3fc:	bhi	d790 <bt_compidtostr@@Base+0x3d08>
    b400:	ldr	r0, [pc, #-1744]	; ad38 <bt_compidtostr@@Base+0x12b0>
    b404:	add	r0, pc, r0
    b408:	bx	lr
    b40c:	ldr	r0, [pc, #-1752]	; ad3c <bt_compidtostr@@Base+0x12b4>
    b410:	add	r0, pc, r0
    b414:	bx	lr
    b418:	movw	r3, #642	; 0x282
    b41c:	cmp	r0, r3
    b420:	beq	e72c <bt_compidtostr@@Base+0x4ca4>
    b424:	bhi	d784 <bt_compidtostr@@Base+0x3cfc>
    b428:	ldr	r0, [pc, #-1776]	; ad40 <bt_compidtostr@@Base+0x12b8>
    b42c:	add	r0, pc, r0
    b430:	bx	lr
    b434:	cmp	r0, #636	; 0x27c
    b438:	beq	ec48 <bt_compidtostr@@Base+0x51c0>
    b43c:	bls	b4d0 <bt_compidtostr@@Base+0x1a48>
    b440:	movw	r3, #638	; 0x27e
    b444:	cmp	r0, r3
    b448:	beq	e720 <bt_compidtostr@@Base+0x4c98>
    b44c:	bhi	d778 <bt_compidtostr@@Base+0x3cf0>
    b450:	ldr	r0, [pc, #-1812]	; ad44 <bt_compidtostr@@Base+0x12bc>
    b454:	add	r0, pc, r0
    b458:	bx	lr
    b45c:	cmp	r0, #624	; 0x270
    b460:	beq	f0ec <bt_compidtostr@@Base+0x5664>
    b464:	bls	b5e0 <bt_compidtostr@@Base+0x1b58>
    b468:	cmp	r0, #628	; 0x274
    b46c:	beq	eb4c <bt_compidtostr@@Base+0x50c4>
    b470:	bls	b5c4 <bt_compidtostr@@Base+0x1b3c>
    b474:	movw	r3, #630	; 0x276
    b478:	cmp	r0, r3
    b47c:	beq	e714 <bt_compidtostr@@Base+0x4c8c>
    b480:	bhi	d76c <bt_compidtostr@@Base+0x3ce4>
    b484:	ldr	r0, [pc, #-1860]	; ad48 <bt_compidtostr@@Base+0x12c0>
    b488:	add	r0, pc, r0
    b48c:	bx	lr
    b490:	cmp	r0, #600	; 0x258
    b494:	beq	f374 <bt_compidtostr@@Base+0x58ec>
    b498:	bls	b530 <bt_compidtostr@@Base+0x1aa8>
    b49c:	cmp	r0, #608	; 0x260
    b4a0:	beq	f224 <bt_compidtostr@@Base+0x579c>
    b4a4:	bls	b508 <bt_compidtostr@@Base+0x1a80>
    b4a8:	cmp	r0, #612	; 0x264
    b4ac:	beq	ee10 <bt_compidtostr@@Base+0x5388>
    b4b0:	bls	b4ec <bt_compidtostr@@Base+0x1a64>
    b4b4:	movw	r3, #614	; 0x266
    b4b8:	cmp	r0, r3
    b4bc:	beq	e0fc <bt_compidtostr@@Base+0x4674>
    b4c0:	bhi	d760 <bt_compidtostr@@Base+0x3cd8>
    b4c4:	ldr	r0, [pc, #-1920]	; ad4c <bt_compidtostr@@Base+0x12c4>
    b4c8:	add	r0, pc, r0
    b4cc:	bx	lr
    b4d0:	movw	r3, #634	; 0x27a
    b4d4:	cmp	r0, r3
    b4d8:	beq	e0e4 <bt_compidtostr@@Base+0x465c>
    b4dc:	bhi	d754 <bt_compidtostr@@Base+0x3ccc>
    b4e0:	ldr	r0, [pc, #-1944]	; ad50 <bt_compidtostr@@Base+0x12c8>
    b4e4:	add	r0, pc, r0
    b4e8:	bx	lr
    b4ec:	movw	r3, #610	; 0x262
    b4f0:	cmp	r0, r3
    b4f4:	beq	e0d8 <bt_compidtostr@@Base+0x4650>
    b4f8:	bhi	d748 <bt_compidtostr@@Base+0x3cc0>
    b4fc:	ldr	r0, [pc, #-1968]	; ad54 <bt_compidtostr@@Base+0x12cc>
    b500:	add	r0, pc, r0
    b504:	bx	lr
    b508:	cmp	r0, #604	; 0x25c
    b50c:	beq	ee28 <bt_compidtostr@@Base+0x53a0>
    b510:	bls	b564 <bt_compidtostr@@Base+0x1adc>
    b514:	movw	r3, #606	; 0x25e
    b518:	cmp	r0, r3
    b51c:	beq	e0f0 <bt_compidtostr@@Base+0x4668>
    b520:	bhi	d73c <bt_compidtostr@@Base+0x3cb4>
    b524:	ldr	r0, [pc, #-2004]	; ad58 <bt_compidtostr@@Base+0x12d0>
    b528:	add	r0, pc, r0
    b52c:	bx	lr
    b530:	cmp	r0, #592	; 0x250
    b534:	beq	f0f8 <bt_compidtostr@@Base+0x5670>
    b538:	bls	b59c <bt_compidtostr@@Base+0x1b14>
    b53c:	cmp	r0, #596	; 0x254
    b540:	beq	eb10 <bt_compidtostr@@Base+0x5088>
    b544:	bls	b580 <bt_compidtostr@@Base+0x1af8>
    b548:	movw	r3, #598	; 0x256
    b54c:	cmp	r0, r3
    b550:	beq	e7a4 <bt_compidtostr@@Base+0x4d1c>
    b554:	bhi	d730 <bt_compidtostr@@Base+0x3ca8>
    b558:	ldr	r0, [pc, #-2052]	; ad5c <bt_compidtostr@@Base+0x12d4>
    b55c:	add	r0, pc, r0
    b560:	bx	lr
    b564:	movw	r3, #602	; 0x25a
    b568:	cmp	r0, r3
    b56c:	beq	e798 <bt_compidtostr@@Base+0x4d10>
    b570:	bhi	d724 <bt_compidtostr@@Base+0x3c9c>
    b574:	ldr	r0, [pc, #-2076]	; ad60 <bt_compidtostr@@Base+0x12d8>
    b578:	add	r0, pc, r0
    b57c:	bx	lr
    b580:	movw	r3, #594	; 0x252
    b584:	cmp	r0, r3
    b588:	beq	e7c8 <bt_compidtostr@@Base+0x4d40>
    b58c:	bhi	d718 <bt_compidtostr@@Base+0x3c90>
    b590:	ldr	r0, [pc, #-2100]	; ad64 <bt_compidtostr@@Base+0x12dc>
    b594:	add	r0, pc, r0
    b598:	bx	lr
    b59c:	cmp	r0, #588	; 0x24c
    b5a0:	beq	eaf8 <bt_compidtostr@@Base+0x5070>
    b5a4:	bls	b608 <bt_compidtostr@@Base+0x1b80>
    b5a8:	movw	r3, #590	; 0x24e
    b5ac:	cmp	r0, r3
    b5b0:	beq	e7b0 <bt_compidtostr@@Base+0x4d28>
    b5b4:	bhi	d70c <bt_compidtostr@@Base+0x3c84>
    b5b8:	ldr	r0, [pc, #-2136]	; ad68 <bt_compidtostr@@Base+0x12e0>
    b5bc:	add	r0, pc, r0
    b5c0:	bx	lr
    b5c4:	movw	r3, #626	; 0x272
    b5c8:	cmp	r0, r3
    b5cc:	beq	e7bc <bt_compidtostr@@Base+0x4d34>
    b5d0:	bhi	d700 <bt_compidtostr@@Base+0x3c78>
    b5d4:	ldr	r0, [pc, #-2160]	; ad6c <bt_compidtostr@@Base+0x12e4>
    b5d8:	add	r0, pc, r0
    b5dc:	bx	lr
    b5e0:	cmp	r0, #620	; 0x26c
    b5e4:	beq	eb04 <bt_compidtostr@@Base+0x507c>
    b5e8:	bls	b624 <bt_compidtostr@@Base+0x1b9c>
    b5ec:	movw	r3, #622	; 0x26e
    b5f0:	cmp	r0, r3
    b5f4:	beq	e774 <bt_compidtostr@@Base+0x4cec>
    b5f8:	bhi	d6f4 <bt_compidtostr@@Base+0x3c6c>
    b5fc:	ldr	r0, [pc, #-2196]	; ad70 <bt_compidtostr@@Base+0x12e8>
    b600:	add	r0, pc, r0
    b604:	bx	lr
    b608:	movw	r3, #586	; 0x24a
    b60c:	cmp	r0, r3
    b610:	beq	e78c <bt_compidtostr@@Base+0x4d04>
    b614:	bhi	d6e8 <bt_compidtostr@@Base+0x3c60>
    b618:	ldr	r0, [pc, #-2220]	; ad74 <bt_compidtostr@@Base+0x12ec>
    b61c:	add	r0, pc, r0
    b620:	bx	lr
    b624:	movw	r3, #618	; 0x26a
    b628:	cmp	r0, r3
    b62c:	beq	e780 <bt_compidtostr@@Base+0x4cf8>
    b630:	bhi	d6dc <bt_compidtostr@@Base+0x3c54>
    b634:	ldr	r0, [pc, #-2244]	; ad78 <bt_compidtostr@@Base+0x12f0>
    b638:	add	r0, pc, r0
    b63c:	bx	lr
    b640:	movw	r3, #539	; 0x21b
    b644:	cmp	r0, r3
    b648:	beq	eb1c <bt_compidtostr@@Base+0x5094>
    b64c:	cmp	r0, #540	; 0x21c
    b650:	bcc	b6b4 <bt_compidtostr@@Base+0x1c2c>
    b654:	movw	r3, #541	; 0x21d
    b658:	cmp	r0, r3
    b65c:	beq	e768 <bt_compidtostr@@Base+0x4ce0>
    b660:	bhi	d6d0 <bt_compidtostr@@Base+0x3c48>
    b664:	ldr	r0, [pc, #-2288]	; ad7c <bt_compidtostr@@Base+0x12f4>
    b668:	add	r0, pc, r0
    b66c:	bx	lr
    b670:	movw	r3, #527	; 0x20f
    b674:	cmp	r0, r3
    b678:	beq	f104 <bt_compidtostr@@Base+0x567c>
    b67c:	cmp	r0, #528	; 0x210
    b680:	bcc	b6ec <bt_compidtostr@@Base+0x1c64>
    b684:	movw	r3, #531	; 0x213
    b688:	cmp	r0, r3
    b68c:	beq	ea8c <bt_compidtostr@@Base+0x5004>
    b690:	cmp	r0, #532	; 0x214
    b694:	bcc	b6d0 <bt_compidtostr@@Base+0x1c48>
    b698:	movw	r3, #533	; 0x215
    b69c:	cmp	r0, r3
    b6a0:	beq	e87c <bt_compidtostr@@Base+0x4df4>
    b6a4:	bhi	d6c4 <bt_compidtostr@@Base+0x3c3c>
    b6a8:	ldr	r0, [pc, #-2352]	; ad80 <bt_compidtostr@@Base+0x12f8>
    b6ac:	add	r0, pc, r0
    b6b0:	bx	lr
    b6b4:	movw	r3, #537	; 0x219
    b6b8:	cmp	r0, r3
    b6bc:	beq	e75c <bt_compidtostr@@Base+0x4cd4>
    b6c0:	bhi	d6b8 <bt_compidtostr@@Base+0x3c30>
    b6c4:	ldr	r0, [pc, #-2376]	; ad84 <bt_compidtostr@@Base+0x12fc>
    b6c8:	add	r0, pc, r0
    b6cc:	bx	lr
    b6d0:	movw	r3, #529	; 0x211
    b6d4:	cmp	r0, r3
    b6d8:	beq	e870 <bt_compidtostr@@Base+0x4de8>
    b6dc:	bhi	d6ac <bt_compidtostr@@Base+0x3c24>
    b6e0:	ldr	r0, [pc, #-2400]	; ad88 <bt_compidtostr@@Base+0x1300>
    b6e4:	add	r0, pc, r0
    b6e8:	bx	lr
    b6ec:	movw	r3, #523	; 0x20b
    b6f0:	cmp	r0, r3
    b6f4:	beq	ea74 <bt_compidtostr@@Base+0x4fec>
    b6f8:	cmp	r0, #524	; 0x20c
    b6fc:	bcc	b840 <bt_compidtostr@@Base+0x1db8>
    b700:	movw	r3, #525	; 0x20d
    b704:	cmp	r0, r3
    b708:	beq	e8b8 <bt_compidtostr@@Base+0x4e30>
    b70c:	bhi	d6a0 <bt_compidtostr@@Base+0x3c18>
    b710:	ldr	r0, [pc, #-2444]	; ad8c <bt_compidtostr@@Base+0x1304>
    b714:	add	r0, pc, r0
    b718:	bx	lr
    b71c:	movw	r3, #714	; 0x2ca
    b720:	cmp	r0, r3
    b724:	beq	f5d8 <bt_compidtostr@@Base+0x5b50>
    b728:	bhi	bdb0 <bt_compidtostr@@Base+0x2328>
    b72c:	movw	r3, #681	; 0x2a9
    b730:	cmp	r0, r3
    b734:	beq	f50c <bt_compidtostr@@Base+0x5a84>
    b738:	bls	bd60 <bt_compidtostr@@Base+0x22d8>
    b73c:	movw	r3, #697	; 0x2b9
    b740:	cmp	r0, r3
    b744:	beq	f428 <bt_compidtostr@@Base+0x59a0>
    b748:	bls	c374 <bt_compidtostr@@Base+0x28ec>
    b74c:	movw	r3, #705	; 0x2c1
    b750:	cmp	r0, r3
    b754:	beq	f2a8 <bt_compidtostr@@Base+0x5820>
    b758:	bls	bd30 <bt_compidtostr@@Base+0x22a8>
    b75c:	movw	r3, #709	; 0x2c5
    b760:	cmp	r0, r3
    b764:	beq	efa8 <bt_compidtostr@@Base+0x5520>
    b768:	bls	c220 <bt_compidtostr@@Base+0x2798>
    b76c:	movw	r3, #711	; 0x2c7
    b770:	cmp	r0, r3
    b774:	beq	e9c0 <bt_compidtostr@@Base+0x4f38>
    b778:	bcc	e8ac <bt_compidtostr@@Base+0x4e24>
    b77c:	cmp	r0, #712	; 0x2c8
    b780:	beq	d694 <bt_compidtostr@@Base+0x3c0c>
    b784:	movw	r3, #713	; 0x2c9
    b788:	cmp	r0, r3
    b78c:	bne	c214 <bt_compidtostr@@Base+0x278c>
    b790:	ldr	r0, [pc, #-2568]	; ad90 <bt_compidtostr@@Base+0x1308>
    b794:	add	r0, pc, r0
    b798:	bx	lr
    b79c:	movw	r3, #909	; 0x38d
    b7a0:	cmp	r0, r3
    b7a4:	beq	fb8c <bt_compidtostr@@Base+0x6104>
    b7a8:	bhi	bb48 <bt_compidtostr@@Base+0x20c0>
    b7ac:	cmp	r0, #844	; 0x34c
    b7b0:	beq	f5f0 <bt_compidtostr@@Base+0x5b68>
    b7b4:	bhi	bae8 <bt_compidtostr@@Base+0x2060>
    b7b8:	movw	r3, #811	; 0x32b
    b7bc:	cmp	r0, r3
    b7c0:	beq	f548 <bt_compidtostr@@Base+0x5ac0>
    b7c4:	cmp	r0, #812	; 0x32c
    b7c8:	bcc	b8f8 <bt_compidtostr@@Base+0x1e70>
    b7cc:	movw	r3, #827	; 0x33b
    b7d0:	cmp	r0, r3
    b7d4:	beq	f488 <bt_compidtostr@@Base+0x5a00>
    b7d8:	cmp	r0, #828	; 0x33c
    b7dc:	bcc	b8b4 <bt_compidtostr@@Base+0x1e2c>
    b7e0:	movw	r3, #835	; 0x343
    b7e4:	cmp	r0, r3
    b7e8:	beq	f308 <bt_compidtostr@@Base+0x5880>
    b7ec:	cmp	r0, #836	; 0x344
    b7f0:	bcc	b884 <bt_compidtostr@@Base+0x1dfc>
    b7f4:	movw	r3, #839	; 0x347
    b7f8:	cmp	r0, r3
    b7fc:	beq	f038 <bt_compidtostr@@Base+0x55b0>
    b800:	cmp	r0, #840	; 0x348
    b804:	bcc	b868 <bt_compidtostr@@Base+0x1de0>
    b808:	movw	r3, #841	; 0x349
    b80c:	cmp	r0, r3
    b810:	beq	e9b4 <bt_compidtostr@@Base+0x4f2c>
    b814:	cmp	r0, #840	; 0x348
    b818:	bls	e8a0 <bt_compidtostr@@Base+0x4e18>
    b81c:	movw	r3, #842	; 0x34a
    b820:	cmp	r0, r3
    b824:	beq	d688 <bt_compidtostr@@Base+0x3c00>
    b828:	movw	r3, #843	; 0x34b
    b82c:	cmp	r0, r3
    b830:	bne	b85c <bt_compidtostr@@Base+0x1dd4>
    b834:	ldr	r0, [pc, #-2728]	; ad94 <bt_compidtostr@@Base+0x130c>
    b838:	add	r0, pc, r0
    b83c:	bx	lr
    b840:	movw	r3, #521	; 0x209
    b844:	cmp	r0, r3
    b848:	beq	e894 <bt_compidtostr@@Base+0x4e0c>
    b84c:	bhi	d67c <bt_compidtostr@@Base+0x3bf4>
    b850:	ldr	r0, [pc, #-2752]	; ad98 <bt_compidtostr@@Base+0x1310>
    b854:	add	r0, pc, r0
    b858:	bx	lr
    b85c:	ldr	r0, [pc, #-2760]	; ad9c <bt_compidtostr@@Base+0x1314>
    b860:	add	r0, pc, r0
    b864:	bx	lr
    b868:	movw	r3, #837	; 0x345
    b86c:	cmp	r0, r3
    b870:	beq	e888 <bt_compidtostr@@Base+0x4e00>
    b874:	bhi	d670 <bt_compidtostr@@Base+0x3be8>
    b878:	ldr	r0, [pc, #-2784]	; ada0 <bt_compidtostr@@Base+0x1318>
    b87c:	add	r0, pc, r0
    b880:	bx	lr
    b884:	movw	r3, #831	; 0x33f
    b888:	cmp	r0, r3
    b88c:	beq	ead4 <bt_compidtostr@@Base+0x504c>
    b890:	cmp	r0, #832	; 0x340
    b894:	bcc	b950 <bt_compidtostr@@Base+0x1ec8>
    b898:	movw	r3, #833	; 0x341
    b89c:	cmp	r0, r3
    b8a0:	beq	e8c4 <bt_compidtostr@@Base+0x4e3c>
    b8a4:	bhi	d664 <bt_compidtostr@@Base+0x3bdc>
    b8a8:	ldr	r0, [pc, #-2828]	; ada4 <bt_compidtostr@@Base+0x131c>
    b8ac:	add	r0, pc, r0
    b8b0:	bx	lr
    b8b4:	movw	r3, #819	; 0x333
    b8b8:	cmp	r0, r3
    b8bc:	beq	f194 <bt_compidtostr@@Base+0x570c>
    b8c0:	cmp	r0, #820	; 0x334
    b8c4:	bcc	ba80 <bt_compidtostr@@Base+0x1ff8>
    b8c8:	movw	r3, #823	; 0x337
    b8cc:	cmp	r0, r3
    b8d0:	beq	eabc <bt_compidtostr@@Base+0x5034>
    b8d4:	cmp	r0, #824	; 0x338
    b8d8:	bcc	ba64 <bt_compidtostr@@Base+0x1fdc>
    b8dc:	movw	r3, #825	; 0x339
    b8e0:	cmp	r0, r3
    b8e4:	beq	e90c <bt_compidtostr@@Base+0x4e84>
    b8e8:	bhi	d658 <bt_compidtostr@@Base+0x3bd0>
    b8ec:	ldr	r0, [pc, #-2892]	; ada8 <bt_compidtostr@@Base+0x1320>
    b8f0:	add	r0, pc, r0
    b8f4:	bx	lr
    b8f8:	movw	r3, #795	; 0x31b
    b8fc:	cmp	r0, r3
    b900:	beq	f3b0 <bt_compidtostr@@Base+0x5928>
    b904:	cmp	r0, #796	; 0x31c
    b908:	bcc	b9b8 <bt_compidtostr@@Base+0x1f30>
    b90c:	movw	r3, #803	; 0x323
    b910:	cmp	r0, r3
    b914:	beq	f17c <bt_compidtostr@@Base+0x56f4>
    b918:	cmp	r0, #804	; 0x324
    b91c:	bcc	b988 <bt_compidtostr@@Base+0x1f00>
    b920:	movw	r3, #807	; 0x327
    b924:	cmp	r0, r3
    b928:	beq	ec9c <bt_compidtostr@@Base+0x5214>
    b92c:	cmp	r0, #808	; 0x328
    b930:	bcc	b96c <bt_compidtostr@@Base+0x1ee4>
    b934:	movw	r3, #809	; 0x329
    b938:	cmp	r0, r3
    b93c:	beq	e8f4 <bt_compidtostr@@Base+0x4e6c>
    b940:	bhi	d64c <bt_compidtostr@@Base+0x3bc4>
    b944:	ldr	r0, [pc, #-2976]	; adac <bt_compidtostr@@Base+0x1324>
    b948:	add	r0, pc, r0
    b94c:	bx	lr
    b950:	movw	r3, #829	; 0x33d
    b954:	cmp	r0, r3
    b958:	beq	e900 <bt_compidtostr@@Base+0x4e78>
    b95c:	bhi	d640 <bt_compidtostr@@Base+0x3bb8>
    b960:	ldr	r0, [pc, #-3000]	; adb0 <bt_compidtostr@@Base+0x1328>
    b964:	add	r0, pc, r0
    b968:	bx	lr
    b96c:	movw	r3, #805	; 0x325
    b970:	cmp	r0, r3
    b974:	beq	e930 <bt_compidtostr@@Base+0x4ea8>
    b978:	bhi	d634 <bt_compidtostr@@Base+0x3bac>
    b97c:	ldr	r0, [pc, #-3024]	; adb4 <bt_compidtostr@@Base+0x132c>
    b980:	add	r0, pc, r0
    b984:	bx	lr
    b988:	movw	r3, #799	; 0x31f
    b98c:	cmp	r0, r3
    b990:	beq	ec90 <bt_compidtostr@@Base+0x5208>
    b994:	cmp	r0, #800	; 0x320
    b998:	bcc	b9fc <bt_compidtostr@@Base+0x1f74>
    b99c:	movw	r3, #801	; 0x321
    b9a0:	cmp	r0, r3
    b9a4:	beq	e924 <bt_compidtostr@@Base+0x4e9c>
    b9a8:	bhi	d628 <bt_compidtostr@@Base+0x3ba0>
    b9ac:	ldr	r0, [pc, #-3068]	; adb8 <bt_compidtostr@@Base+0x1330>
    b9b0:	add	r0, pc, r0
    b9b4:	bx	lr
    b9b8:	movw	r3, #787	; 0x313
    b9bc:	cmp	r0, r3
    b9c0:	beq	f188 <bt_compidtostr@@Base+0x5700>
    b9c4:	cmp	r0, #788	; 0x314
    b9c8:	bcc	ba34 <bt_compidtostr@@Base+0x1fac>
    b9cc:	movw	r3, #791	; 0x317
    b9d0:	cmp	r0, r3
    b9d4:	beq	eab0 <bt_compidtostr@@Base+0x5028>
    b9d8:	cmp	r0, #792	; 0x318
    b9dc:	bcc	ba18 <bt_compidtostr@@Base+0x1f90>
    b9e0:	movw	r3, #793	; 0x319
    b9e4:	cmp	r0, r3
    b9e8:	beq	e918 <bt_compidtostr@@Base+0x4e90>
    b9ec:	bhi	d61c <bt_compidtostr@@Base+0x3b94>
    b9f0:	ldr	r0, [pc, #-3132]	; adbc <bt_compidtostr@@Base+0x1334>
    b9f4:	add	r0, pc, r0
    b9f8:	bx	lr
    b9fc:	movw	r3, #797	; 0x31d
    ba00:	cmp	r0, r3
    ba04:	beq	e948 <bt_compidtostr@@Base+0x4ec0>
    ba08:	bhi	ce04 <bt_compidtostr@@Base+0x337c>
    ba0c:	ldr	r0, [pc, #-3156]	; adc0 <bt_compidtostr@@Base+0x1338>
    ba10:	add	r0, pc, r0
    ba14:	bx	lr
    ba18:	movw	r3, #789	; 0x315
    ba1c:	cmp	r0, r3
    ba20:	beq	e93c <bt_compidtostr@@Base+0x4eb4>
    ba24:	bhi	cdf8 <bt_compidtostr@@Base+0x3370>
    ba28:	ldr	r0, [pc, #-3180]	; adc4 <bt_compidtostr@@Base+0x133c>
    ba2c:	add	r0, pc, r0
    ba30:	bx	lr
    ba34:	movw	r3, #783	; 0x30f
    ba38:	cmp	r0, r3
    ba3c:	beq	eae0 <bt_compidtostr@@Base+0x5058>
    ba40:	cmp	r0, #784	; 0x310
    ba44:	bcc	bab0 <bt_compidtostr@@Base+0x2028>
    ba48:	movw	r3, #785	; 0x311
    ba4c:	cmp	r0, r3
    ba50:	beq	e8dc <bt_compidtostr@@Base+0x4e54>
    ba54:	bhi	cdec <bt_compidtostr@@Base+0x3364>
    ba58:	ldr	r0, [pc, #-3224]	; adc8 <bt_compidtostr@@Base+0x1340>
    ba5c:	add	r0, pc, r0
    ba60:	bx	lr
    ba64:	movw	r3, #821	; 0x335
    ba68:	cmp	r0, r3
    ba6c:	beq	e8d0 <bt_compidtostr@@Base+0x4e48>
    ba70:	bhi	cde0 <bt_compidtostr@@Base+0x3358>
    ba74:	ldr	r0, [pc, #-3248]	; adcc <bt_compidtostr@@Base+0x1344>
    ba78:	add	r0, pc, r0
    ba7c:	bx	lr
    ba80:	movw	r3, #815	; 0x32f
    ba84:	cmp	r0, r3
    ba88:	beq	eac8 <bt_compidtostr@@Base+0x5040>
    ba8c:	cmp	r0, #816	; 0x330
    ba90:	bcc	bacc <bt_compidtostr@@Base+0x2044>
    ba94:	movw	r3, #817	; 0x331
    ba98:	cmp	r0, r3
    ba9c:	beq	e7e0 <bt_compidtostr@@Base+0x4d58>
    baa0:	bhi	cdd4 <bt_compidtostr@@Base+0x334c>
    baa4:	ldr	r0, [pc, #-3292]	; add0 <bt_compidtostr@@Base+0x1348>
    baa8:	add	r0, pc, r0
    baac:	bx	lr
    bab0:	movw	r3, #781	; 0x30d
    bab4:	cmp	r0, r3
    bab8:	beq	e7d4 <bt_compidtostr@@Base+0x4d4c>
    babc:	bhi	cdc8 <bt_compidtostr@@Base+0x3340>
    bac0:	ldr	r0, [pc, #-3316]	; add4 <bt_compidtostr@@Base+0x134c>
    bac4:	add	r0, pc, r0
    bac8:	bx	lr
    bacc:	movw	r3, #813	; 0x32d
    bad0:	cmp	r0, r3
    bad4:	beq	e7ec <bt_compidtostr@@Base+0x4d64>
    bad8:	bhi	cdbc <bt_compidtostr@@Base+0x3334>
    badc:	ldr	r0, [pc, #-3340]	; add8 <bt_compidtostr@@Base+0x1350>
    bae0:	add	r0, pc, r0
    bae4:	bx	lr
    bae8:	cmp	r0, #876	; 0x36c
    baec:	beq	f4f4 <bt_compidtostr@@Base+0x5a6c>
    baf0:	bls	c1b8 <bt_compidtostr@@Base+0x2730>
    baf4:	cmp	r0, #892	; 0x37c
    baf8:	beq	f494 <bt_compidtostr@@Base+0x5a0c>
    bafc:	bls	c184 <bt_compidtostr@@Base+0x26fc>
    bb00:	cmp	r0, #900	; 0x384
    bb04:	beq	f35c <bt_compidtostr@@Base+0x58d4>
    bb08:	bls	c6d0 <bt_compidtostr@@Base+0x2c48>
    bb0c:	cmp	r0, #904	; 0x388
    bb10:	beq	f05c <bt_compidtostr@@Base+0x55d4>
    bb14:	bls	c524 <bt_compidtostr@@Base+0x2a9c>
    bb18:	movw	r3, #906	; 0x38a
    bb1c:	cmp	r0, r3
    bb20:	beq	e9d8 <bt_compidtostr@@Base+0x4f50>
    bb24:	bcc	e8e8 <bt_compidtostr@@Base+0x4e60>
    bb28:	movw	r3, #907	; 0x38b
    bb2c:	cmp	r0, r3
    bb30:	beq	cdb0 <bt_compidtostr@@Base+0x3328>
    bb34:	cmp	r0, #908	; 0x38c
    bb38:	bne	bbc8 <bt_compidtostr@@Base+0x2140>
    bb3c:	ldr	r0, [pc, #-3432]	; addc <bt_compidtostr@@Base+0x1354>
    bb40:	add	r0, pc, r0
    bb44:	bx	lr
    bb48:	movw	r3, #974	; 0x3ce
    bb4c:	cmp	r0, r3
    bb50:	beq	f5c0 <bt_compidtostr@@Base+0x5b38>
    bb54:	bhi	c65c <bt_compidtostr@@Base+0x2bd4>
    bb58:	movw	r3, #941	; 0x3ad
    bb5c:	cmp	r0, r3
    bb60:	beq	f500 <bt_compidtostr@@Base+0x5a78>
    bb64:	bls	bce0 <bt_compidtostr@@Base+0x2258>
    bb68:	movw	r3, #957	; 0x3bd
    bb6c:	cmp	r0, r3
    bb70:	beq	f4a0 <bt_compidtostr@@Base+0x5a18>
    bb74:	bls	bc30 <bt_compidtostr@@Base+0x21a8>
    bb78:	movw	r3, #965	; 0x3c5
    bb7c:	cmp	r0, r3
    bb80:	beq	f350 <bt_compidtostr@@Base+0x58c8>
    bb84:	bls	bc00 <bt_compidtostr@@Base+0x2178>
    bb88:	movw	r3, #969	; 0x3c9
    bb8c:	cmp	r0, r3
    bb90:	beq	f050 <bt_compidtostr@@Base+0x55c8>
    bb94:	bls	bbe0 <bt_compidtostr@@Base+0x2158>
    bb98:	movw	r3, #971	; 0x3cb
    bb9c:	cmp	r0, r3
    bba0:	beq	e9cc <bt_compidtostr@@Base+0x4f44>
    bba4:	bcc	e840 <bt_compidtostr@@Base+0x4db8>
    bba8:	cmp	r0, #972	; 0x3cc
    bbac:	beq	cda4 <bt_compidtostr@@Base+0x331c>
    bbb0:	movw	r3, #973	; 0x3cd
    bbb4:	cmp	r0, r3
    bbb8:	bne	bbd4 <bt_compidtostr@@Base+0x214c>
    bbbc:	ldr	r0, [pc, #-3556]	; ade0 <bt_compidtostr@@Base+0x1358>
    bbc0:	add	r0, pc, r0
    bbc4:	bx	lr
    bbc8:	ldr	r0, [pc, #-3564]	; ade4 <bt_compidtostr@@Base+0x135c>
    bbcc:	add	r0, pc, r0
    bbd0:	bx	lr
    bbd4:	ldr	r0, [pc, #-3572]	; ade8 <bt_compidtostr@@Base+0x1360>
    bbd8:	add	r0, pc, r0
    bbdc:	bx	lr
    bbe0:	movw	r3, #967	; 0x3c7
    bbe4:	cmp	r0, r3
    bbe8:	beq	e81c <bt_compidtostr@@Base+0x4d94>
    bbec:	cmp	r0, #968	; 0x3c8
    bbf0:	bcs	cd98 <bt_compidtostr@@Base+0x3310>
    bbf4:	ldr	r0, [pc, #-3600]	; adec <bt_compidtostr@@Base+0x1364>
    bbf8:	add	r0, pc, r0
    bbfc:	bx	lr
    bc00:	movw	r3, #961	; 0x3c1
    bc04:	cmp	r0, r3
    bc08:	beq	eaec <bt_compidtostr@@Base+0x5064>
    bc0c:	bls	bc70 <bt_compidtostr@@Base+0x21e8>
    bc10:	movw	r3, #963	; 0x3c3
    bc14:	cmp	r0, r3
    bc18:	beq	e858 <bt_compidtostr@@Base+0x4dd0>
    bc1c:	cmp	r0, #964	; 0x3c4
    bc20:	bcs	cd8c <bt_compidtostr@@Base+0x3304>
    bc24:	ldr	r0, [pc, #-3644]	; adf0 <bt_compidtostr@@Base+0x1368>
    bc28:	add	r0, pc, r0
    bc2c:	bx	lr
    bc30:	movw	r3, #949	; 0x3b5
    bc34:	cmp	r0, r3
    bc38:	beq	f0e0 <bt_compidtostr@@Base+0x5658>
    bc3c:	bls	bcb0 <bt_compidtostr@@Base+0x2228>
    bc40:	movw	r3, #953	; 0x3b9
    bc44:	cmp	r0, r3
    bc48:	beq	eaa4 <bt_compidtostr@@Base+0x501c>
    bc4c:	bls	bc90 <bt_compidtostr@@Base+0x2208>
    bc50:	movw	r3, #955	; 0x3bb
    bc54:	cmp	r0, r3
    bc58:	beq	e84c <bt_compidtostr@@Base+0x4dc4>
    bc5c:	cmp	r0, #956	; 0x3bc
    bc60:	bcs	cd80 <bt_compidtostr@@Base+0x32f8>
    bc64:	ldr	r0, [pc, #-3704]	; adf4 <bt_compidtostr@@Base+0x136c>
    bc68:	add	r0, pc, r0
    bc6c:	bx	lr
    bc70:	movw	r3, #959	; 0x3bf
    bc74:	cmp	r0, r3
    bc78:	beq	e834 <bt_compidtostr@@Base+0x4dac>
    bc7c:	cmp	r0, #960	; 0x3c0
    bc80:	bcs	cd74 <bt_compidtostr@@Base+0x32ec>
    bc84:	ldr	r0, [pc, #-3732]	; adf8 <bt_compidtostr@@Base+0x1370>
    bc88:	add	r0, pc, r0
    bc8c:	bx	lr
    bc90:	movw	r3, #951	; 0x3b7
    bc94:	cmp	r0, r3
    bc98:	beq	e828 <bt_compidtostr@@Base+0x4da0>
    bc9c:	cmp	r0, #952	; 0x3b8
    bca0:	bcs	cd68 <bt_compidtostr@@Base+0x32e0>
    bca4:	ldr	r0, [pc, #-3760]	; adfc <bt_compidtostr@@Base+0x1374>
    bca8:	add	r0, pc, r0
    bcac:	bx	lr
    bcb0:	movw	r3, #945	; 0x3b1
    bcb4:	cmp	r0, r3
    bcb8:	beq	eb40 <bt_compidtostr@@Base+0x50b8>
    bcbc:	bls	c6f8 <bt_compidtostr@@Base+0x2c70>
    bcc0:	movw	r3, #947	; 0x3b3
    bcc4:	cmp	r0, r3
    bcc8:	beq	e804 <bt_compidtostr@@Base+0x4d7c>
    bccc:	cmp	r0, #948	; 0x3b4
    bcd0:	bcs	cd5c <bt_compidtostr@@Base+0x32d4>
    bcd4:	ldr	r0, [pc, #-3804]	; ae00 <bt_compidtostr@@Base+0x1378>
    bcd8:	add	r0, pc, r0
    bcdc:	bx	lr
    bce0:	movw	r3, #925	; 0x39d
    bce4:	cmp	r0, r3
    bce8:	beq	f398 <bt_compidtostr@@Base+0x5910>
    bcec:	bls	c454 <bt_compidtostr@@Base+0x29cc>
    bcf0:	movw	r3, #933	; 0x3a5
    bcf4:	cmp	r0, r3
    bcf8:	beq	f110 <bt_compidtostr@@Base+0x5688>
    bcfc:	bls	c424 <bt_compidtostr@@Base+0x299c>
    bd00:	movw	r3, #937	; 0x3a9
    bd04:	cmp	r0, r3
    bd08:	beq	eb34 <bt_compidtostr@@Base+0x50ac>
    bd0c:	bls	c3b4 <bt_compidtostr@@Base+0x292c>
    bd10:	movw	r3, #939	; 0x3ab
    bd14:	cmp	r0, r3
    bd18:	beq	e810 <bt_compidtostr@@Base+0x4d88>
    bd1c:	cmp	r0, #940	; 0x3ac
    bd20:	bcs	cd50 <bt_compidtostr@@Base+0x32c8>
    bd24:	ldr	r0, [pc, #-3880]	; ae04 <bt_compidtostr@@Base+0x137c>
    bd28:	add	r0, pc, r0
    bd2c:	bx	lr
    bd30:	movw	r3, #701	; 0x2bd
    bd34:	cmp	r0, r3
    bd38:	beq	eb28 <bt_compidtostr@@Base+0x50a0>
    bd3c:	bls	be20 <bt_compidtostr@@Base+0x2398>
    bd40:	movw	r3, #703	; 0x2bf
    bd44:	cmp	r0, r3
    bd48:	beq	e7f8 <bt_compidtostr@@Base+0x4d70>
    bd4c:	cmp	r0, #704	; 0x2c0
    bd50:	bcs	cd44 <bt_compidtostr@@Base+0x32bc>
    bd54:	ldr	r0, [pc, #-3924]	; ae08 <bt_compidtostr@@Base+0x1380>
    bd58:	add	r0, pc, r0
    bd5c:	bx	lr
    bd60:	movw	r3, #665	; 0x299
    bd64:	cmp	r0, r3
    bd68:	beq	f3c8 <bt_compidtostr@@Base+0x5940>
    bd6c:	bls	be70 <bt_compidtostr@@Base+0x23e8>
    bd70:	movw	r3, #673	; 0x2a1
    bd74:	cmp	r0, r3
    bd78:	beq	f0d4 <bt_compidtostr@@Base+0x564c>
    bd7c:	bls	be40 <bt_compidtostr@@Base+0x23b8>
    bd80:	movw	r3, #677	; 0x2a5
    bd84:	cmp	r0, r3
    bd88:	beq	ea98 <bt_compidtostr@@Base+0x5010>
    bd8c:	bls	bf20 <bt_compidtostr@@Base+0x2498>
    bd90:	movw	r3, #679	; 0x2a7
    bd94:	cmp	r0, r3
    bd98:	beq	e864 <bt_compidtostr@@Base+0x4ddc>
    bd9c:	cmp	r0, #680	; 0x2a8
    bda0:	bcs	cd38 <bt_compidtostr@@Base+0x32b0>
    bda4:	ldr	r0, [pc, #-4000]	; ae0c <bt_compidtostr@@Base+0x1384>
    bda8:	add	r0, pc, r0
    bdac:	bx	lr
    bdb0:	movw	r3, #746	; 0x2ea
    bdb4:	cmp	r0, r3
    bdb8:	beq	f584 <bt_compidtostr@@Base+0x5afc>
    bdbc:	bls	bfe4 <bt_compidtostr@@Base+0x255c>
    bdc0:	movw	r3, #762	; 0x2fa
    bdc4:	cmp	r0, r3
    bdc8:	beq	f44c <bt_compidtostr@@Base+0x59c4>
    bdcc:	bls	bfac <bt_compidtostr@@Base+0x2524>
    bdd0:	movw	r3, #770	; 0x302
    bdd4:	cmp	r0, r3
    bdd8:	beq	f32c <bt_compidtostr@@Base+0x58a4>
    bddc:	bls	bf84 <bt_compidtostr@@Base+0x24fc>
    bde0:	movw	r3, #774	; 0x306
    bde4:	cmp	r0, r3
    bde8:	beq	f008 <bt_compidtostr@@Base+0x5580>
    bdec:	bls	bf6c <bt_compidtostr@@Base+0x24e4>
    bdf0:	cmp	r0, #776	; 0x308
    bdf4:	beq	e9a8 <bt_compidtostr@@Base+0x4f20>
    bdf8:	bcc	e960 <bt_compidtostr@@Base+0x4ed8>
    bdfc:	movw	r3, #777	; 0x309
    be00:	cmp	r0, r3
    be04:	beq	cd2c <bt_compidtostr@@Base+0x32a4>
    be08:	movw	r3, #778	; 0x30a
    be0c:	cmp	r0, r3
    be10:	bne	bf40 <bt_compidtostr@@Base+0x24b8>
    be14:	ldr	r0, [pc, #4084]	; ce10 <bt_compidtostr@@Base+0x3388>
    be18:	add	r0, pc, r0
    be1c:	bx	lr
    be20:	movw	r3, #699	; 0x2bb
    be24:	cmp	r0, r3
    be28:	beq	e954 <bt_compidtostr@@Base+0x4ecc>
    be2c:	cmp	r0, #700	; 0x2bc
    be30:	bcs	cd20 <bt_compidtostr@@Base+0x3298>
    be34:	ldr	r0, [pc, #4056]	; ce14 <bt_compidtostr@@Base+0x338c>
    be38:	add	r0, pc, r0
    be3c:	bx	lr
    be40:	movw	r3, #669	; 0x29d
    be44:	cmp	r0, r3
    be48:	beq	eca8 <bt_compidtostr@@Base+0x5220>
    be4c:	bls	beb0 <bt_compidtostr@@Base+0x2428>
    be50:	movw	r3, #671	; 0x29f
    be54:	cmp	r0, r3
    be58:	beq	e99c <bt_compidtostr@@Base+0x4f14>
    be5c:	cmp	r0, #672	; 0x2a0
    be60:	bcs	cd14 <bt_compidtostr@@Base+0x328c>
    be64:	ldr	r0, [pc, #4012]	; ce18 <bt_compidtostr@@Base+0x3390>
    be68:	add	r0, pc, r0
    be6c:	bx	lr
    be70:	movw	r3, #657	; 0x291
    be74:	cmp	r0, r3
    be78:	beq	f1a0 <bt_compidtostr@@Base+0x5718>
    be7c:	bls	bef0 <bt_compidtostr@@Base+0x2468>
    be80:	movw	r3, #661	; 0x295
    be84:	cmp	r0, r3
    be88:	beq	ea80 <bt_compidtostr@@Base+0x4ff8>
    be8c:	bls	bed0 <bt_compidtostr@@Base+0x2448>
    be90:	movw	r3, #663	; 0x297
    be94:	cmp	r0, r3
    be98:	beq	e990 <bt_compidtostr@@Base+0x4f08>
    be9c:	cmp	r0, #664	; 0x298
    bea0:	bcs	cd08 <bt_compidtostr@@Base+0x3280>
    bea4:	ldr	r0, [pc, #3952]	; ce1c <bt_compidtostr@@Base+0x3394>
    bea8:	add	r0, pc, r0
    beac:	bx	lr
    beb0:	movw	r3, #667	; 0x29b
    beb4:	cmp	r0, r3
    beb8:	beq	e984 <bt_compidtostr@@Base+0x4efc>
    bebc:	cmp	r0, #668	; 0x29c
    bec0:	bcs	ccfc <bt_compidtostr@@Base+0x3274>
    bec4:	ldr	r0, [pc, #3924]	; ce20 <bt_compidtostr@@Base+0x3398>
    bec8:	add	r0, pc, r0
    becc:	bx	lr
    bed0:	movw	r3, #659	; 0x293
    bed4:	cmp	r0, r3
    bed8:	beq	e978 <bt_compidtostr@@Base+0x4ef0>
    bedc:	cmp	r0, #660	; 0x294
    bee0:	bcs	ccf0 <bt_compidtostr@@Base+0x3268>
    bee4:	ldr	r0, [pc, #3896]	; ce24 <bt_compidtostr@@Base+0x339c>
    bee8:	add	r0, pc, r0
    beec:	bx	lr
    bef0:	movw	r3, #653	; 0x28d
    bef4:	cmp	r0, r3
    bef8:	beq	ecb4 <bt_compidtostr@@Base+0x522c>
    befc:	bls	bf4c <bt_compidtostr@@Base+0x24c4>
    bf00:	movw	r3, #655	; 0x28f
    bf04:	cmp	r0, r3
    bf08:	beq	e96c <bt_compidtostr@@Base+0x4ee4>
    bf0c:	cmp	r0, #656	; 0x290
    bf10:	bcs	cce4 <bt_compidtostr@@Base+0x325c>
    bf14:	ldr	r0, [pc, #3852]	; ce28 <bt_compidtostr@@Base+0x33a0>
    bf18:	add	r0, pc, r0
    bf1c:	bx	lr
    bf20:	movw	r3, #675	; 0x2a3
    bf24:	cmp	r0, r3
    bf28:	beq	e57c <bt_compidtostr@@Base+0x4af4>
    bf2c:	cmp	r0, #676	; 0x2a4
    bf30:	bcs	ccd8 <bt_compidtostr@@Base+0x3250>
    bf34:	ldr	r0, [pc, #3824]	; ce2c <bt_compidtostr@@Base+0x33a4>
    bf38:	add	r0, pc, r0
    bf3c:	bx	lr
    bf40:	ldr	r0, [pc, #3816]	; ce30 <bt_compidtostr@@Base+0x33a8>
    bf44:	add	r0, pc, r0
    bf48:	bx	lr
    bf4c:	movw	r3, #651	; 0x28b
    bf50:	cmp	r0, r3
    bf54:	beq	e570 <bt_compidtostr@@Base+0x4ae8>
    bf58:	cmp	r0, #652	; 0x28c
    bf5c:	bcs	cccc <bt_compidtostr@@Base+0x3244>
    bf60:	ldr	r0, [pc, #3788]	; ce34 <bt_compidtostr@@Base+0x33ac>
    bf64:	add	r0, pc, r0
    bf68:	bx	lr
    bf6c:	cmp	r0, #772	; 0x304
    bf70:	beq	e588 <bt_compidtostr@@Base+0x4b00>
    bf74:	bhi	ccc0 <bt_compidtostr@@Base+0x3238>
    bf78:	ldr	r0, [pc, #3768]	; ce38 <bt_compidtostr@@Base+0x33b0>
    bf7c:	add	r0, pc, r0
    bf80:	bx	lr
    bf84:	movw	r3, #766	; 0x2fe
    bf88:	cmp	r0, r3
    bf8c:	beq	eb88 <bt_compidtostr@@Base+0x5100>
    bf90:	bls	c02c <bt_compidtostr@@Base+0x25a4>
    bf94:	cmp	r0, #768	; 0x300
    bf98:	beq	e558 <bt_compidtostr@@Base+0x4ad0>
    bf9c:	bhi	ccb4 <bt_compidtostr@@Base+0x322c>
    bfa0:	ldr	r0, [pc, #3732]	; ce3c <bt_compidtostr@@Base+0x33b4>
    bfa4:	add	r0, pc, r0
    bfa8:	bx	lr
    bfac:	movw	r3, #754	; 0x2f2
    bfb0:	cmp	r0, r3
    bfb4:	beq	f278 <bt_compidtostr@@Base+0x57f0>
    bfb8:	bls	c12c <bt_compidtostr@@Base+0x26a4>
    bfbc:	movw	r3, #758	; 0x2f6
    bfc0:	cmp	r0, r3
    bfc4:	beq	ec18 <bt_compidtostr@@Base+0x5190>
    bfc8:	bls	c114 <bt_compidtostr@@Base+0x268c>
    bfcc:	cmp	r0, #760	; 0x2f8
    bfd0:	beq	e54c <bt_compidtostr@@Base+0x4ac4>
    bfd4:	bhi	cca8 <bt_compidtostr@@Base+0x3220>
    bfd8:	ldr	r0, [pc, #3680]	; ce40 <bt_compidtostr@@Base+0x33b8>
    bfdc:	add	r0, pc, r0
    bfe0:	bx	lr
    bfe4:	movw	r3, #730	; 0x2da
    bfe8:	cmp	r0, r3
    bfec:	beq	f410 <bt_compidtostr@@Base+0x5988>
    bff0:	bls	c084 <bt_compidtostr@@Base+0x25fc>
    bff4:	movw	r3, #738	; 0x2e2
    bff8:	cmp	r0, r3
    bffc:	beq	f26c <bt_compidtostr@@Base+0x57e4>
    c000:	bls	c05c <bt_compidtostr@@Base+0x25d4>
    c004:	movw	r3, #742	; 0x2e6
    c008:	cmp	r0, r3
    c00c:	beq	ebac <bt_compidtostr@@Base+0x5124>
    c010:	bls	c044 <bt_compidtostr@@Base+0x25bc>
    c014:	cmp	r0, #744	; 0x2e8
    c018:	beq	e5ac <bt_compidtostr@@Base+0x4b24>
    c01c:	bhi	cc9c <bt_compidtostr@@Base+0x3214>
    c020:	ldr	r0, [pc, #3612]	; ce44 <bt_compidtostr@@Base+0x33bc>
    c024:	add	r0, pc, r0
    c028:	bx	lr
    c02c:	cmp	r0, #764	; 0x2fc
    c030:	beq	e5a0 <bt_compidtostr@@Base+0x4b18>
    c034:	bhi	cc90 <bt_compidtostr@@Base+0x3208>
    c038:	ldr	r0, [pc, #3592]	; ce48 <bt_compidtostr@@Base+0x33c0>
    c03c:	add	r0, pc, r0
    c040:	bx	lr
    c044:	cmp	r0, #740	; 0x2e4
    c048:	beq	e594 <bt_compidtostr@@Base+0x4b0c>
    c04c:	bhi	cc84 <bt_compidtostr@@Base+0x31fc>
    c050:	ldr	r0, [pc, #3572]	; ce4c <bt_compidtostr@@Base+0x33c4>
    c054:	add	r0, pc, r0
    c058:	bx	lr
    c05c:	movw	r3, #734	; 0x2de
    c060:	cmp	r0, r3
    c064:	beq	eb94 <bt_compidtostr@@Base+0x510c>
    c068:	bls	c0bc <bt_compidtostr@@Base+0x2634>
    c06c:	cmp	r0, #736	; 0x2e0
    c070:	beq	e564 <bt_compidtostr@@Base+0x4adc>
    c074:	bhi	cc78 <bt_compidtostr@@Base+0x31f0>
    c078:	ldr	r0, [pc, #3536]	; ce50 <bt_compidtostr@@Base+0x33c8>
    c07c:	add	r0, pc, r0
    c080:	bx	lr
    c084:	movw	r3, #722	; 0x2d2
    c088:	cmp	r0, r3
    c08c:	beq	f0b0 <bt_compidtostr@@Base+0x5628>
    c090:	bls	c0ec <bt_compidtostr@@Base+0x2664>
    c094:	movw	r3, #726	; 0x2d6
    c098:	cmp	r0, r3
    c09c:	beq	ebf4 <bt_compidtostr@@Base+0x516c>
    c0a0:	bls	c0d4 <bt_compidtostr@@Base+0x264c>
    c0a4:	cmp	r0, #728	; 0x2d8
    c0a8:	beq	e63c <bt_compidtostr@@Base+0x4bb4>
    c0ac:	bhi	cc6c <bt_compidtostr@@Base+0x31e4>
    c0b0:	ldr	r0, [pc, #3484]	; ce54 <bt_compidtostr@@Base+0x33cc>
    c0b4:	add	r0, pc, r0
    c0b8:	bx	lr
    c0bc:	cmp	r0, #732	; 0x2dc
    c0c0:	beq	e630 <bt_compidtostr@@Base+0x4ba8>
    c0c4:	bhi	cc60 <bt_compidtostr@@Base+0x31d8>
    c0c8:	ldr	r0, [pc, #3464]	; ce58 <bt_compidtostr@@Base+0x33d0>
    c0cc:	add	r0, pc, r0
    c0d0:	bx	lr
    c0d4:	cmp	r0, #724	; 0x2d4
    c0d8:	beq	e660 <bt_compidtostr@@Base+0x4bd8>
    c0dc:	bhi	cc54 <bt_compidtostr@@Base+0x31cc>
    c0e0:	ldr	r0, [pc, #3444]	; ce5c <bt_compidtostr@@Base+0x33d4>
    c0e4:	add	r0, pc, r0
    c0e8:	bx	lr
    c0ec:	movw	r3, #718	; 0x2ce
    c0f0:	cmp	r0, r3
    c0f4:	beq	ec0c <bt_compidtostr@@Base+0x5184>
    c0f8:	bls	c154 <bt_compidtostr@@Base+0x26cc>
    c0fc:	cmp	r0, #720	; 0x2d0
    c100:	beq	e66c <bt_compidtostr@@Base+0x4be4>
    c104:	bhi	cc48 <bt_compidtostr@@Base+0x31c0>
    c108:	ldr	r0, [pc, #3408]	; ce60 <bt_compidtostr@@Base+0x33d8>
    c10c:	add	r0, pc, r0
    c110:	bx	lr
    c114:	cmp	r0, #756	; 0x2f4
    c118:	beq	e654 <bt_compidtostr@@Base+0x4bcc>
    c11c:	bhi	cc3c <bt_compidtostr@@Base+0x31b4>
    c120:	ldr	r0, [pc, #3388]	; ce64 <bt_compidtostr@@Base+0x33dc>
    c124:	add	r0, pc, r0
    c128:	bx	lr
    c12c:	movw	r3, #750	; 0x2ee
    c130:	cmp	r0, r3
    c134:	beq	ec00 <bt_compidtostr@@Base+0x5178>
    c138:	bls	c16c <bt_compidtostr@@Base+0x26e4>
    c13c:	cmp	r0, #752	; 0x2f0
    c140:	beq	e690 <bt_compidtostr@@Base+0x4c08>
    c144:	bhi	cc30 <bt_compidtostr@@Base+0x31a8>
    c148:	ldr	r0, [pc, #3352]	; ce68 <bt_compidtostr@@Base+0x33e0>
    c14c:	add	r0, pc, r0
    c150:	bx	lr
    c154:	cmp	r0, #716	; 0x2cc
    c158:	beq	e684 <bt_compidtostr@@Base+0x4bfc>
    c15c:	bhi	cc24 <bt_compidtostr@@Base+0x319c>
    c160:	ldr	r0, [pc, #3332]	; ce6c <bt_compidtostr@@Base+0x33e4>
    c164:	add	r0, pc, r0
    c168:	bx	lr
    c16c:	cmp	r0, #748	; 0x2ec
    c170:	beq	e678 <bt_compidtostr@@Base+0x4bf0>
    c174:	bhi	cc18 <bt_compidtostr@@Base+0x3190>
    c178:	ldr	r0, [pc, #3312]	; ce70 <bt_compidtostr@@Base+0x33e8>
    c17c:	add	r0, pc, r0
    c180:	bx	lr
    c184:	cmp	r0, #884	; 0x374
    c188:	beq	f0a4 <bt_compidtostr@@Base+0x561c>
    c18c:	bls	c540 <bt_compidtostr@@Base+0x2ab8>
    c190:	cmp	r0, #888	; 0x378
    c194:	beq	ebd0 <bt_compidtostr@@Base+0x5148>
    c198:	bls	c1f8 <bt_compidtostr@@Base+0x2770>
    c19c:	movw	r3, #890	; 0x37a
    c1a0:	cmp	r0, r3
    c1a4:	beq	e6e4 <bt_compidtostr@@Base+0x4c5c>
    c1a8:	bhi	cc0c <bt_compidtostr@@Base+0x3184>
    c1ac:	ldr	r0, [pc, #3264]	; ce74 <bt_compidtostr@@Base+0x33ec>
    c1b0:	add	r0, pc, r0
    c1b4:	bx	lr
    c1b8:	cmp	r0, #860	; 0x35c
    c1bc:	beq	f3ec <bt_compidtostr@@Base+0x5964>
    c1c0:	bls	c5c8 <bt_compidtostr@@Base+0x2b40>
    c1c4:	cmp	r0, #868	; 0x364
    c1c8:	beq	f074 <bt_compidtostr@@Base+0x55ec>
    c1cc:	bls	c5a0 <bt_compidtostr@@Base+0x2b18>
    c1d0:	cmp	r0, #872	; 0x368
    c1d4:	beq	ebdc <bt_compidtostr@@Base+0x5154>
    c1d8:	bls	c568 <bt_compidtostr@@Base+0x2ae0>
    c1dc:	movw	r3, #874	; 0x36a
    c1e0:	cmp	r0, r3
    c1e4:	beq	e648 <bt_compidtostr@@Base+0x4bc0>
    c1e8:	bhi	cc00 <bt_compidtostr@@Base+0x3178>
    c1ec:	ldr	r0, [pc, #3204]	; ce78 <bt_compidtostr@@Base+0x33f0>
    c1f0:	add	r0, pc, r0
    c1f4:	bx	lr
    c1f8:	movw	r3, #886	; 0x376
    c1fc:	cmp	r0, r3
    c200:	beq	e6d8 <bt_compidtostr@@Base+0x4c50>
    c204:	bhi	cbf4 <bt_compidtostr@@Base+0x316c>
    c208:	ldr	r0, [pc, #3180]	; ce7c <bt_compidtostr@@Base+0x33f4>
    c20c:	add	r0, pc, r0
    c210:	bx	lr
    c214:	ldr	r0, [pc, #3172]	; ce80 <bt_compidtostr@@Base+0x33f8>
    c218:	add	r0, pc, r0
    c21c:	bx	lr
    c220:	movw	r3, #707	; 0x2c3
    c224:	cmp	r0, r3
    c228:	beq	e69c <bt_compidtostr@@Base+0x4c14>
    c22c:	cmp	r0, #708	; 0x2c4
    c230:	bcs	cbe8 <bt_compidtostr@@Base+0x3160>
    c234:	ldr	r0, [pc, #3144]	; ce84 <bt_compidtostr@@Base+0x33fc>
    c238:	add	r0, pc, r0
    c23c:	bx	lr
    c240:	movw	r3, #571	; 0x23b
    c244:	cmp	r0, r3
    c248:	beq	eb64 <bt_compidtostr@@Base+0x50dc>
    c24c:	cmp	r0, #572	; 0x23c
    c250:	bcc	c2b4 <bt_compidtostr@@Base+0x282c>
    c254:	movw	r3, #573	; 0x23d
    c258:	cmp	r0, r3
    c25c:	beq	e6cc <bt_compidtostr@@Base+0x4c44>
    c260:	bhi	cbdc <bt_compidtostr@@Base+0x3154>
    c264:	ldr	r0, [pc, #3100]	; ce88 <bt_compidtostr@@Base+0x3400>
    c268:	add	r0, pc, r0
    c26c:	bx	lr
    c270:	movw	r3, #559	; 0x22f
    c274:	cmp	r0, r3
    c278:	beq	f080 <bt_compidtostr@@Base+0x55f8>
    c27c:	cmp	r0, #560	; 0x230
    c280:	bcc	c2ec <bt_compidtostr@@Base+0x2864>
    c284:	movw	r3, #563	; 0x233
    c288:	cmp	r0, r3
    c28c:	beq	eb70 <bt_compidtostr@@Base+0x50e8>
    c290:	cmp	r0, #564	; 0x234
    c294:	bcc	c2d0 <bt_compidtostr@@Base+0x2848>
    c298:	movw	r3, #565	; 0x235
    c29c:	cmp	r0, r3
    c2a0:	beq	e6c0 <bt_compidtostr@@Base+0x4c38>
    c2a4:	bhi	cbd0 <bt_compidtostr@@Base+0x3148>
    c2a8:	ldr	r0, [pc, #3036]	; ce8c <bt_compidtostr@@Base+0x3404>
    c2ac:	add	r0, pc, r0
    c2b0:	bx	lr
    c2b4:	movw	r3, #569	; 0x239
    c2b8:	cmp	r0, r3
    c2bc:	beq	e6b4 <bt_compidtostr@@Base+0x4c2c>
    c2c0:	bhi	cbc4 <bt_compidtostr@@Base+0x313c>
    c2c4:	ldr	r0, [pc, #3012]	; ce90 <bt_compidtostr@@Base+0x3408>
    c2c8:	add	r0, pc, r0
    c2cc:	bx	lr
    c2d0:	movw	r3, #561	; 0x231
    c2d4:	cmp	r0, r3
    c2d8:	beq	e6a8 <bt_compidtostr@@Base+0x4c20>
    c2dc:	bhi	cbb8 <bt_compidtostr@@Base+0x3130>
    c2e0:	ldr	r0, [pc, #2988]	; ce94 <bt_compidtostr@@Base+0x340c>
    c2e4:	add	r0, pc, r0
    c2e8:	bx	lr
    c2ec:	movw	r3, #555	; 0x22b
    c2f0:	cmp	r0, r3
    c2f4:	beq	eb58 <bt_compidtostr@@Base+0x50d0>
    c2f8:	cmp	r0, #556	; 0x22c
    c2fc:	bcc	c358 <bt_compidtostr@@Base+0x28d0>
    c300:	movw	r3, #557	; 0x22d
    c304:	cmp	r0, r3
    c308:	beq	e708 <bt_compidtostr@@Base+0x4c80>
    c30c:	bhi	cbac <bt_compidtostr@@Base+0x3124>
    c310:	ldr	r0, [pc, #2944]	; ce98 <bt_compidtostr@@Base+0x3410>
    c314:	add	r0, pc, r0
    c318:	bx	lr
    c31c:	movw	r3, #577	; 0x241
    c320:	cmp	r0, r3
    c324:	beq	e6fc <bt_compidtostr@@Base+0x4c74>
    c328:	bhi	cba0 <bt_compidtostr@@Base+0x3118>
    c32c:	ldr	r0, [pc, #2920]	; ce9c <bt_compidtostr@@Base+0x3414>
    c330:	add	r0, pc, r0
    c334:	bx	lr
    c338:	movw	r3, #391	; 0x187
    c33c:	cmp	r0, r3
    c340:	beq	e6f0 <bt_compidtostr@@Base+0x4c68>
    c344:	cmp	r0, #392	; 0x188
    c348:	bcs	cb94 <bt_compidtostr@@Base+0x310c>
    c34c:	ldr	r0, [pc, #2892]	; cea0 <bt_compidtostr@@Base+0x3418>
    c350:	add	r0, pc, r0
    c354:	bx	lr
    c358:	movw	r3, #553	; 0x229
    c35c:	cmp	r0, r3
    c360:	beq	e5dc <bt_compidtostr@@Base+0x4b54>
    c364:	bhi	cb88 <bt_compidtostr@@Base+0x3100>
    c368:	ldr	r0, [pc, #2868]	; cea4 <bt_compidtostr@@Base+0x341c>
    c36c:	add	r0, pc, r0
    c370:	bx	lr
    c374:	movw	r3, #689	; 0x2b1
    c378:	cmp	r0, r3
    c37c:	beq	f0c8 <bt_compidtostr@@Base+0x5640>
    c380:	bls	c3f4 <bt_compidtostr@@Base+0x296c>
    c384:	movw	r3, #693	; 0x2b5
    c388:	cmp	r0, r3
    c38c:	beq	eba0 <bt_compidtostr@@Base+0x5118>
    c390:	bls	c3d4 <bt_compidtostr@@Base+0x294c>
    c394:	movw	r3, #695	; 0x2b7
    c398:	cmp	r0, r3
    c39c:	beq	e5d0 <bt_compidtostr@@Base+0x4b48>
    c3a0:	cmp	r0, #696	; 0x2b8
    c3a4:	bcs	cb7c <bt_compidtostr@@Base+0x30f4>
    c3a8:	ldr	r0, [pc, #2808]	; cea8 <bt_compidtostr@@Base+0x3420>
    c3ac:	add	r0, pc, r0
    c3b0:	bx	lr
    c3b4:	movw	r3, #935	; 0x3a7
    c3b8:	cmp	r0, r3
    c3bc:	beq	e5c4 <bt_compidtostr@@Base+0x4b3c>
    c3c0:	cmp	r0, #936	; 0x3a8
    c3c4:	bcs	cb70 <bt_compidtostr@@Base+0x30e8>
    c3c8:	ldr	r0, [pc, #2780]	; ceac <bt_compidtostr@@Base+0x3424>
    c3cc:	add	r0, pc, r0
    c3d0:	bx	lr
    c3d4:	movw	r3, #691	; 0x2b3
    c3d8:	cmp	r0, r3
    c3dc:	beq	e5b8 <bt_compidtostr@@Base+0x4b30>
    c3e0:	cmp	r0, #692	; 0x2b4
    c3e4:	bcs	cb64 <bt_compidtostr@@Base+0x30dc>
    c3e8:	ldr	r0, [pc, #2752]	; ceb0 <bt_compidtostr@@Base+0x3428>
    c3ec:	add	r0, pc, r0
    c3f0:	bx	lr
    c3f4:	movw	r3, #685	; 0x2ad
    c3f8:	cmp	r0, r3
    c3fc:	beq	ebc4 <bt_compidtostr@@Base+0x513c>
    c400:	bls	c494 <bt_compidtostr@@Base+0x2a0c>
    c404:	movw	r3, #687	; 0x2af
    c408:	cmp	r0, r3
    c40c:	beq	e5e8 <bt_compidtostr@@Base+0x4b60>
    c410:	cmp	r0, #688	; 0x2b0
    c414:	bcs	cb58 <bt_compidtostr@@Base+0x30d0>
    c418:	ldr	r0, [pc, #2708]	; ceb4 <bt_compidtostr@@Base+0x342c>
    c41c:	add	r0, pc, r0
    c420:	bx	lr
    c424:	movw	r3, #929	; 0x3a1
    c428:	cmp	r0, r3
    c42c:	beq	eccc <bt_compidtostr@@Base+0x5244>
    c430:	bls	c4b4 <bt_compidtostr@@Base+0x2a2c>
    c434:	movw	r3, #931	; 0x3a3
    c438:	cmp	r0, r3
    c43c:	beq	e498 <bt_compidtostr@@Base+0x4a10>
    c440:	cmp	r0, #932	; 0x3a4
    c444:	bcs	cb4c <bt_compidtostr@@Base+0x30c4>
    c448:	ldr	r0, [pc, #2664]	; ceb8 <bt_compidtostr@@Base+0x3430>
    c44c:	add	r0, pc, r0
    c450:	bx	lr
    c454:	movw	r3, #917	; 0x395
    c458:	cmp	r0, r3
    c45c:	beq	f158 <bt_compidtostr@@Base+0x56d0>
    c460:	bls	c4f4 <bt_compidtostr@@Base+0x2a6c>
    c464:	movw	r3, #921	; 0x399
    c468:	cmp	r0, r3
    c46c:	beq	ece4 <bt_compidtostr@@Base+0x525c>
    c470:	bls	c4d4 <bt_compidtostr@@Base+0x2a4c>
    c474:	movw	r3, #923	; 0x39b
    c478:	cmp	r0, r3
    c47c:	beq	e4b0 <bt_compidtostr@@Base+0x4a28>
    c480:	cmp	r0, #924	; 0x39c
    c484:	bcs	cb40 <bt_compidtostr@@Base+0x30b8>
    c488:	ldr	r0, [pc, #2604]	; cebc <bt_compidtostr@@Base+0x3434>
    c48c:	add	r0, pc, r0
    c490:	bx	lr
    c494:	movw	r3, #683	; 0x2ab
    c498:	cmp	r0, r3
    c49c:	beq	e4a4 <bt_compidtostr@@Base+0x4a1c>
    c4a0:	cmp	r0, #684	; 0x2ac
    c4a4:	bcs	cb34 <bt_compidtostr@@Base+0x30ac>
    c4a8:	ldr	r0, [pc, #2576]	; cec0 <bt_compidtostr@@Base+0x3438>
    c4ac:	add	r0, pc, r0
    c4b0:	bx	lr
    c4b4:	movw	r3, #927	; 0x39f
    c4b8:	cmp	r0, r3
    c4bc:	beq	e48c <bt_compidtostr@@Base+0x4a04>
    c4c0:	cmp	r0, #928	; 0x3a0
    c4c4:	bcs	cb28 <bt_compidtostr@@Base+0x30a0>
    c4c8:	ldr	r0, [pc, #2548]	; cec4 <bt_compidtostr@@Base+0x343c>
    c4cc:	add	r0, pc, r0
    c4d0:	bx	lr
    c4d4:	movw	r3, #919	; 0x397
    c4d8:	cmp	r0, r3
    c4dc:	beq	e480 <bt_compidtostr@@Base+0x49f8>
    c4e0:	cmp	r0, #920	; 0x398
    c4e4:	bcs	cb1c <bt_compidtostr@@Base+0x3094>
    c4e8:	ldr	r0, [pc, #2520]	; cec8 <bt_compidtostr@@Base+0x3440>
    c4ec:	add	r0, pc, r0
    c4f0:	bx	lr
    c4f4:	movw	r3, #913	; 0x391
    c4f8:	cmp	r0, r3
    c4fc:	beq	ec3c <bt_compidtostr@@Base+0x51b4>
    c500:	bls	c938 <bt_compidtostr@@Base+0x2eb0>
    c504:	movw	r3, #915	; 0x393
    c508:	cmp	r0, r3
    c50c:	beq	e4ec <bt_compidtostr@@Base+0x4a64>
    c510:	cmp	r0, #916	; 0x394
    c514:	bcs	cb10 <bt_compidtostr@@Base+0x3088>
    c518:	ldr	r0, [pc, #2476]	; cecc <bt_compidtostr@@Base+0x3444>
    c51c:	add	r0, pc, r0
    c520:	bx	lr
    c524:	movw	r3, #902	; 0x386
    c528:	cmp	r0, r3
    c52c:	beq	e4e0 <bt_compidtostr@@Base+0x4a58>
    c530:	bhi	cb04 <bt_compidtostr@@Base+0x307c>
    c534:	ldr	r0, [pc, #2452]	; ced0 <bt_compidtostr@@Base+0x3448>
    c538:	add	r0, pc, r0
    c53c:	bx	lr
    c540:	cmp	r0, #880	; 0x370
    c544:	beq	ec24 <bt_compidtostr@@Base+0x519c>
    c548:	bls	c584 <bt_compidtostr@@Base+0x2afc>
    c54c:	movw	r3, #882	; 0x372
    c550:	cmp	r0, r3
    c554:	beq	e4c8 <bt_compidtostr@@Base+0x4a40>
    c558:	bhi	caf8 <bt_compidtostr@@Base+0x3070>
    c55c:	ldr	r0, [pc, #2416]	; ced4 <bt_compidtostr@@Base+0x344c>
    c560:	add	r0, pc, r0
    c564:	bx	lr
    c568:	movw	r3, #870	; 0x366
    c56c:	cmp	r0, r3
    c570:	beq	e4d4 <bt_compidtostr@@Base+0x4a4c>
    c574:	bhi	caec <bt_compidtostr@@Base+0x3064>
    c578:	ldr	r0, [pc, #2392]	; ced8 <bt_compidtostr@@Base+0x3450>
    c57c:	add	r0, pc, r0
    c580:	bx	lr
    c584:	movw	r3, #878	; 0x36e
    c588:	cmp	r0, r3
    c58c:	beq	e4bc <bt_compidtostr@@Base+0x4a34>
    c590:	bhi	cae0 <bt_compidtostr@@Base+0x3058>
    c594:	ldr	r0, [pc, #2368]	; cedc <bt_compidtostr@@Base+0x3454>
    c598:	add	r0, pc, r0
    c59c:	bx	lr
    c5a0:	cmp	r0, #864	; 0x360
    c5a4:	beq	ec30 <bt_compidtostr@@Base+0x51a8>
    c5a8:	bls	c5fc <bt_compidtostr@@Base+0x2b74>
    c5ac:	movw	r3, #866	; 0x362
    c5b0:	cmp	r0, r3
    c5b4:	beq	e624 <bt_compidtostr@@Base+0x4b9c>
    c5b8:	bhi	cad4 <bt_compidtostr@@Base+0x304c>
    c5bc:	ldr	r0, [pc, #2332]	; cee0 <bt_compidtostr@@Base+0x3458>
    c5c0:	add	r0, pc, r0
    c5c4:	bx	lr
    c5c8:	cmp	r0, #852	; 0x354
    c5cc:	beq	f0bc <bt_compidtostr@@Base+0x5634>
    c5d0:	bls	c634 <bt_compidtostr@@Base+0x2bac>
    c5d4:	cmp	r0, #856	; 0x358
    c5d8:	beq	ebb8 <bt_compidtostr@@Base+0x5130>
    c5dc:	bls	c618 <bt_compidtostr@@Base+0x2b90>
    c5e0:	movw	r3, #858	; 0x35a
    c5e4:	cmp	r0, r3
    c5e8:	beq	e618 <bt_compidtostr@@Base+0x4b90>
    c5ec:	bhi	cac8 <bt_compidtostr@@Base+0x3040>
    c5f0:	ldr	r0, [pc, #2284]	; cee4 <bt_compidtostr@@Base+0x345c>
    c5f4:	add	r0, pc, r0
    c5f8:	bx	lr
    c5fc:	movw	r3, #862	; 0x35e
    c600:	cmp	r0, r3
    c604:	beq	e60c <bt_compidtostr@@Base+0x4b84>
    c608:	bhi	cabc <bt_compidtostr@@Base+0x3034>
    c60c:	ldr	r0, [pc, #2260]	; cee8 <bt_compidtostr@@Base+0x3460>
    c610:	add	r0, pc, r0
    c614:	bx	lr
    c618:	movw	r3, #854	; 0x356
    c61c:	cmp	r0, r3
    c620:	beq	e600 <bt_compidtostr@@Base+0x4b78>
    c624:	bhi	cab0 <bt_compidtostr@@Base+0x3028>
    c628:	ldr	r0, [pc, #2236]	; ceec <bt_compidtostr@@Base+0x3464>
    c62c:	add	r0, pc, r0
    c630:	bx	lr
    c634:	cmp	r0, #848	; 0x350
    c638:	beq	ebe8 <bt_compidtostr@@Base+0x5160>
    c63c:	bls	c964 <bt_compidtostr@@Base+0x2edc>
    c640:	movw	r3, #850	; 0x352
    c644:	cmp	r0, r3
    c648:	beq	e5f4 <bt_compidtostr@@Base+0x4b6c>
    c64c:	bhi	caa4 <bt_compidtostr@@Base+0x301c>
    c650:	ldr	r0, [pc, #2200]	; cef0 <bt_compidtostr@@Base+0x3468>
    c654:	add	r0, pc, r0
    c658:	bx	lr
    c65c:	movw	r3, #1006	; 0x3ee
    c660:	cmp	r0, r3
    c664:	beq	f56c <bt_compidtostr@@Base+0x5ae4>
    c668:	bls	c798 <bt_compidtostr@@Base+0x2d10>
    c66c:	movw	r3, #1022	; 0x3fe
    c670:	cmp	r0, r3
    c674:	beq	f4b8 <bt_compidtostr@@Base+0x5a30>
    c678:	bls	c760 <bt_compidtostr@@Base+0x2cd8>
    c67c:	movw	r3, #1030	; 0x406
    c680:	cmp	r0, r3
    c684:	beq	f320 <bt_compidtostr@@Base+0x5898>
    c688:	bls	c734 <bt_compidtostr@@Base+0x2cac>
    c68c:	movw	r3, #1034	; 0x40a
    c690:	cmp	r0, r3
    c694:	beq	f020 <bt_compidtostr@@Base+0x5598>
    c698:	bls	c718 <bt_compidtostr@@Base+0x2c90>
    c69c:	movw	r3, #1036	; 0x40c
    c6a0:	cmp	r0, r3
    c6a4:	beq	ea08 <bt_compidtostr@@Base+0x4f80>
    c6a8:	bcc	e3fc <bt_compidtostr@@Base+0x4974>
    c6ac:	movw	r3, #1037	; 0x40d
    c6b0:	cmp	r0, r3
    c6b4:	beq	ca98 <bt_compidtostr@@Base+0x3010>
    c6b8:	movw	r3, #65535	; 0xffff
    c6bc:	cmp	r0, r3
    c6c0:	bne	c958 <bt_compidtostr@@Base+0x2ed0>
    c6c4:	ldr	r0, [pc, #2088]	; cef4 <bt_compidtostr@@Base+0x346c>
    c6c8:	add	r0, pc, r0
    c6cc:	bx	lr
    c6d0:	cmp	r0, #896	; 0x380
    c6d4:	beq	ecfc <bt_compidtostr@@Base+0x5274>
    c6d8:	bls	c980 <bt_compidtostr@@Base+0x2ef8>
    c6dc:	movw	r3, #898	; 0x382
    c6e0:	cmp	r0, r3
    c6e4:	beq	e42c <bt_compidtostr@@Base+0x49a4>
    c6e8:	bhi	ca8c <bt_compidtostr@@Base+0x3004>
    c6ec:	ldr	r0, [pc, #2052]	; cef8 <bt_compidtostr@@Base+0x3470>
    c6f0:	add	r0, pc, r0
    c6f4:	bx	lr
    c6f8:	movw	r3, #943	; 0x3af
    c6fc:	cmp	r0, r3
    c700:	beq	e420 <bt_compidtostr@@Base+0x4998>
    c704:	cmp	r0, #944	; 0x3b0
    c708:	bcs	ca80 <bt_compidtostr@@Base+0x2ff8>
    c70c:	ldr	r0, [pc, #2024]	; cefc <bt_compidtostr@@Base+0x3474>
    c710:	add	r0, pc, r0
    c714:	bx	lr
    c718:	movw	r3, #1032	; 0x408
    c71c:	cmp	r0, r3
    c720:	beq	e414 <bt_compidtostr@@Base+0x498c>
    c724:	bhi	ca74 <bt_compidtostr@@Base+0x2fec>
    c728:	ldr	r0, [pc, #2000]	; cf00 <bt_compidtostr@@Base+0x3478>
    c72c:	add	r0, pc, r0
    c730:	bx	lr
    c734:	movw	r3, #1026	; 0x402
    c738:	cmp	r0, r3
    c73c:	beq	ed08 <bt_compidtostr@@Base+0x5280>
    c740:	bls	c7e0 <bt_compidtostr@@Base+0x2d58>
    c744:	movw	r3, #1028	; 0x404
    c748:	cmp	r0, r3
    c74c:	beq	e408 <bt_compidtostr@@Base+0x4980>
    c750:	bhi	ca68 <bt_compidtostr@@Base+0x2fe0>
    c754:	ldr	r0, [pc, #1960]	; cf04 <bt_compidtostr@@Base+0x347c>
    c758:	add	r0, pc, r0
    c75c:	bx	lr
    c760:	movw	r3, #1014	; 0x3f6
    c764:	cmp	r0, r3
    c768:	beq	f14c <bt_compidtostr@@Base+0x56c4>
    c76c:	bls	c8e0 <bt_compidtostr@@Base+0x2e58>
    c770:	movw	r3, #1018	; 0x3fa
    c774:	cmp	r0, r3
    c778:	beq	ecc0 <bt_compidtostr@@Base+0x5238>
    c77c:	bls	c8c8 <bt_compidtostr@@Base+0x2e40>
    c780:	cmp	r0, #1020	; 0x3fc
    c784:	beq	e474 <bt_compidtostr@@Base+0x49ec>
    c788:	bhi	ca5c <bt_compidtostr@@Base+0x2fd4>
    c78c:	ldr	r0, [pc, #1908]	; cf08 <bt_compidtostr@@Base+0x3480>
    c790:	add	r0, pc, r0
    c794:	bx	lr
    c798:	movw	r3, #990	; 0x3de
    c79c:	cmp	r0, r3
    c7a0:	beq	f3d4 <bt_compidtostr@@Base+0x594c>
    c7a4:	bls	c838 <bt_compidtostr@@Base+0x2db0>
    c7a8:	movw	r3, #998	; 0x3e6
    c7ac:	cmp	r0, r3
    c7b0:	beq	f140 <bt_compidtostr@@Base+0x56b8>
    c7b4:	bls	c810 <bt_compidtostr@@Base+0x2d88>
    c7b8:	movw	r3, #1002	; 0x3ea
    c7bc:	cmp	r0, r3
    c7c0:	beq	ecd8 <bt_compidtostr@@Base+0x5250>
    c7c4:	bls	c7f8 <bt_compidtostr@@Base+0x2d70>
    c7c8:	cmp	r0, #1004	; 0x3ec
    c7cc:	beq	e45c <bt_compidtostr@@Base+0x49d4>
    c7d0:	bhi	ca50 <bt_compidtostr@@Base+0x2fc8>
    c7d4:	ldr	r0, [pc, #1840]	; cf0c <bt_compidtostr@@Base+0x3484>
    c7d8:	add	r0, pc, r0
    c7dc:	bx	lr
    c7e0:	cmp	r0, #1024	; 0x400
    c7e4:	beq	e468 <bt_compidtostr@@Base+0x49e0>
    c7e8:	bhi	ca44 <bt_compidtostr@@Base+0x2fbc>
    c7ec:	ldr	r0, [pc, #1820]	; cf10 <bt_compidtostr@@Base+0x3488>
    c7f0:	add	r0, pc, r0
    c7f4:	bx	lr
    c7f8:	cmp	r0, #1000	; 0x3e8
    c7fc:	beq	e438 <bt_compidtostr@@Base+0x49b0>
    c800:	bhi	ca38 <bt_compidtostr@@Base+0x2fb0>
    c804:	ldr	r0, [pc, #1800]	; cf14 <bt_compidtostr@@Base+0x348c>
    c808:	add	r0, pc, r0
    c80c:	bx	lr
    c810:	movw	r3, #994	; 0x3e2
    c814:	cmp	r0, r3
    c818:	beq	ecf0 <bt_compidtostr@@Base+0x5268>
    c81c:	bls	c870 <bt_compidtostr@@Base+0x2de8>
    c820:	cmp	r0, #996	; 0x3e4
    c824:	beq	e3d8 <bt_compidtostr@@Base+0x4950>
    c828:	bhi	ca2c <bt_compidtostr@@Base+0x2fa4>
    c82c:	ldr	r0, [pc, #1764]	; cf18 <bt_compidtostr@@Base+0x3490>
    c830:	add	r0, pc, r0
    c834:	bx	lr
    c838:	movw	r3, #982	; 0x3d6
    c83c:	cmp	r0, r3
    c840:	beq	f1e8 <bt_compidtostr@@Base+0x5760>
    c844:	bls	c8a0 <bt_compidtostr@@Base+0x2e18>
    c848:	movw	r3, #986	; 0x3da
    c84c:	cmp	r0, r3
    c850:	beq	ee94 <bt_compidtostr@@Base+0x540c>
    c854:	bls	c888 <bt_compidtostr@@Base+0x2e00>
    c858:	cmp	r0, #988	; 0x3dc
    c85c:	beq	e3cc <bt_compidtostr@@Base+0x4944>
    c860:	bhi	ca20 <bt_compidtostr@@Base+0x2f98>
    c864:	ldr	r0, [pc, #1712]	; cf1c <bt_compidtostr@@Base+0x3494>
    c868:	add	r0, pc, r0
    c86c:	bx	lr
    c870:	cmp	r0, #992	; 0x3e0
    c874:	beq	e450 <bt_compidtostr@@Base+0x49c8>
    c878:	bhi	ca14 <bt_compidtostr@@Base+0x2f8c>
    c87c:	ldr	r0, [pc, #1692]	; cf20 <bt_compidtostr@@Base+0x3498>
    c880:	add	r0, pc, r0
    c884:	bx	lr
    c888:	cmp	r0, #984	; 0x3d8
    c88c:	beq	e444 <bt_compidtostr@@Base+0x49bc>
    c890:	bhi	ca08 <bt_compidtostr@@Base+0x2f80>
    c894:	ldr	r0, [pc, #1672]	; cf24 <bt_compidtostr@@Base+0x349c>
    c898:	add	r0, pc, r0
    c89c:	bx	lr
    c8a0:	movw	r3, #978	; 0x3d2
    c8a4:	cmp	r0, r3
    c8a8:	beq	eea0 <bt_compidtostr@@Base+0x5418>
    c8ac:	bls	c908 <bt_compidtostr@@Base+0x2e80>
    c8b0:	cmp	r0, #980	; 0x3d4
    c8b4:	beq	e3f0 <bt_compidtostr@@Base+0x4968>
    c8b8:	bhi	c9fc <bt_compidtostr@@Base+0x2f74>
    c8bc:	ldr	r0, [pc, #1636]	; cf28 <bt_compidtostr@@Base+0x34a0>
    c8c0:	add	r0, pc, r0
    c8c4:	bx	lr
    c8c8:	cmp	r0, #1016	; 0x3f8
    c8cc:	beq	e3e4 <bt_compidtostr@@Base+0x495c>
    c8d0:	bhi	c9f0 <bt_compidtostr@@Base+0x2f68>
    c8d4:	ldr	r0, [pc, #1616]	; cf2c <bt_compidtostr@@Base+0x34a4>
    c8d8:	add	r0, pc, r0
    c8dc:	bx	lr
    c8e0:	movw	r3, #1010	; 0x3f2
    c8e4:	cmp	r0, r3
    c8e8:	beq	eeac <bt_compidtostr@@Base+0x5424>
    c8ec:	bls	c920 <bt_compidtostr@@Base+0x2e98>
    c8f0:	cmp	r0, #1012	; 0x3f4
    c8f4:	beq	e528 <bt_compidtostr@@Base+0x4aa0>
    c8f8:	bhi	c9e4 <bt_compidtostr@@Base+0x2f5c>
    c8fc:	ldr	r0, [pc, #1580]	; cf30 <bt_compidtostr@@Base+0x34a8>
    c900:	add	r0, pc, r0
    c904:	bx	lr
    c908:	cmp	r0, #976	; 0x3d0
    c90c:	beq	e51c <bt_compidtostr@@Base+0x4a94>
    c910:	bhi	c9d8 <bt_compidtostr@@Base+0x2f50>
    c914:	ldr	r0, [pc, #1560]	; cf34 <bt_compidtostr@@Base+0x34ac>
    c918:	add	r0, pc, r0
    c91c:	bx	lr
    c920:	cmp	r0, #1008	; 0x3f0
    c924:	beq	e540 <bt_compidtostr@@Base+0x4ab8>
    c928:	bhi	c9cc <bt_compidtostr@@Base+0x2f44>
    c92c:	ldr	r0, [pc, #1540]	; cf38 <bt_compidtostr@@Base+0x34b0>
    c930:	add	r0, pc, r0
    c934:	bx	lr
    c938:	movw	r3, #911	; 0x38f
    c93c:	cmp	r0, r3
    c940:	beq	e534 <bt_compidtostr@@Base+0x4aac>
    c944:	cmp	r0, #912	; 0x390
    c948:	bcs	c9c0 <bt_compidtostr@@Base+0x2f38>
    c94c:	ldr	r0, [pc, #1512]	; cf3c <bt_compidtostr@@Base+0x34b4>
    c950:	add	r0, pc, r0
    c954:	bx	lr
    c958:	ldr	r0, [pc, #1504]	; cf40 <bt_compidtostr@@Base+0x34b8>
    c95c:	add	r0, pc, r0
    c960:	bx	lr
    c964:	movw	r3, #846	; 0x34e
    c968:	cmp	r0, r3
    c96c:	beq	e504 <bt_compidtostr@@Base+0x4a7c>
    c970:	bhi	c9b4 <bt_compidtostr@@Base+0x2f2c>
    c974:	ldr	r0, [pc, #1480]	; cf44 <bt_compidtostr@@Base+0x34bc>
    c978:	add	r0, pc, r0
    c97c:	bx	lr
    c980:	movw	r3, #894	; 0x37e
    c984:	cmp	r0, r3
    c988:	beq	e4f8 <bt_compidtostr@@Base+0x4a70>
    c98c:	bhi	c9a8 <bt_compidtostr@@Base+0x2f20>
    c990:	ldr	r0, [pc, #1456]	; cf48 <bt_compidtostr@@Base+0x34c0>
    c994:	add	r0, pc, r0
    c998:	bx	lr
    c99c:	ldr	r0, [pc, #1448]	; cf4c <bt_compidtostr@@Base+0x34c4>
    c9a0:	add	r0, pc, r0
    c9a4:	bx	lr
    c9a8:	ldr	r0, [pc, #1440]	; cf50 <bt_compidtostr@@Base+0x34c8>
    c9ac:	add	r0, pc, r0
    c9b0:	bx	lr
    c9b4:	ldr	r0, [pc, #1432]	; cf54 <bt_compidtostr@@Base+0x34cc>
    c9b8:	add	r0, pc, r0
    c9bc:	bx	lr
    c9c0:	ldr	r0, [pc, #1424]	; cf58 <bt_compidtostr@@Base+0x34d0>
    c9c4:	add	r0, pc, r0
    c9c8:	bx	lr
    c9cc:	ldr	r0, [pc, #1416]	; cf5c <bt_compidtostr@@Base+0x34d4>
    c9d0:	add	r0, pc, r0
    c9d4:	bx	lr
    c9d8:	ldr	r0, [pc, #1408]	; cf60 <bt_compidtostr@@Base+0x34d8>
    c9dc:	add	r0, pc, r0
    c9e0:	bx	lr
    c9e4:	ldr	r0, [pc, #1400]	; cf64 <bt_compidtostr@@Base+0x34dc>
    c9e8:	add	r0, pc, r0
    c9ec:	bx	lr
    c9f0:	ldr	r0, [pc, #1392]	; cf68 <bt_compidtostr@@Base+0x34e0>
    c9f4:	add	r0, pc, r0
    c9f8:	bx	lr
    c9fc:	ldr	r0, [pc, #1384]	; cf6c <bt_compidtostr@@Base+0x34e4>
    ca00:	add	r0, pc, r0
    ca04:	bx	lr
    ca08:	ldr	r0, [pc, #1376]	; cf70 <bt_compidtostr@@Base+0x34e8>
    ca0c:	add	r0, pc, r0
    ca10:	bx	lr
    ca14:	ldr	r0, [pc, #1368]	; cf74 <bt_compidtostr@@Base+0x34ec>
    ca18:	add	r0, pc, r0
    ca1c:	bx	lr
    ca20:	ldr	r0, [pc, #1360]	; cf78 <bt_compidtostr@@Base+0x34f0>
    ca24:	add	r0, pc, r0
    ca28:	bx	lr
    ca2c:	ldr	r0, [pc, #1352]	; cf7c <bt_compidtostr@@Base+0x34f4>
    ca30:	add	r0, pc, r0
    ca34:	bx	lr
    ca38:	ldr	r0, [pc, #1344]	; cf80 <bt_compidtostr@@Base+0x34f8>
    ca3c:	add	r0, pc, r0
    ca40:	bx	lr
    ca44:	ldr	r0, [pc, #1336]	; cf84 <bt_compidtostr@@Base+0x34fc>
    ca48:	add	r0, pc, r0
    ca4c:	bx	lr
    ca50:	ldr	r0, [pc, #1328]	; cf88 <bt_compidtostr@@Base+0x3500>
    ca54:	add	r0, pc, r0
    ca58:	bx	lr
    ca5c:	ldr	r0, [pc, #1320]	; cf8c <bt_compidtostr@@Base+0x3504>
    ca60:	add	r0, pc, r0
    ca64:	bx	lr
    ca68:	ldr	r0, [pc, #1312]	; cf90 <bt_compidtostr@@Base+0x3508>
    ca6c:	add	r0, pc, r0
    ca70:	bx	lr
    ca74:	ldr	r0, [pc, #1304]	; cf94 <bt_compidtostr@@Base+0x350c>
    ca78:	add	r0, pc, r0
    ca7c:	bx	lr
    ca80:	ldr	r0, [pc, #1296]	; cf98 <bt_compidtostr@@Base+0x3510>
    ca84:	add	r0, pc, r0
    ca88:	bx	lr
    ca8c:	ldr	r0, [pc, #1288]	; cf9c <bt_compidtostr@@Base+0x3514>
    ca90:	add	r0, pc, r0
    ca94:	bx	lr
    ca98:	ldr	r0, [pc, #1280]	; cfa0 <bt_compidtostr@@Base+0x3518>
    ca9c:	add	r0, pc, r0
    caa0:	bx	lr
    caa4:	ldr	r0, [pc, #1272]	; cfa4 <bt_compidtostr@@Base+0x351c>
    caa8:	add	r0, pc, r0
    caac:	bx	lr
    cab0:	ldr	r0, [pc, #1264]	; cfa8 <bt_compidtostr@@Base+0x3520>
    cab4:	add	r0, pc, r0
    cab8:	bx	lr
    cabc:	ldr	r0, [pc, #1256]	; cfac <bt_compidtostr@@Base+0x3524>
    cac0:	add	r0, pc, r0
    cac4:	bx	lr
    cac8:	ldr	r0, [pc, #1248]	; cfb0 <bt_compidtostr@@Base+0x3528>
    cacc:	add	r0, pc, r0
    cad0:	bx	lr
    cad4:	ldr	r0, [pc, #1240]	; cfb4 <bt_compidtostr@@Base+0x352c>
    cad8:	add	r0, pc, r0
    cadc:	bx	lr
    cae0:	ldr	r0, [pc, #1232]	; cfb8 <bt_compidtostr@@Base+0x3530>
    cae4:	add	r0, pc, r0
    cae8:	bx	lr
    caec:	ldr	r0, [pc, #1224]	; cfbc <bt_compidtostr@@Base+0x3534>
    caf0:	add	r0, pc, r0
    caf4:	bx	lr
    caf8:	ldr	r0, [pc, #1216]	; cfc0 <bt_compidtostr@@Base+0x3538>
    cafc:	add	r0, pc, r0
    cb00:	bx	lr
    cb04:	ldr	r0, [pc, #1208]	; cfc4 <bt_compidtostr@@Base+0x353c>
    cb08:	add	r0, pc, r0
    cb0c:	bx	lr
    cb10:	ldr	r0, [pc, #1200]	; cfc8 <bt_compidtostr@@Base+0x3540>
    cb14:	add	r0, pc, r0
    cb18:	bx	lr
    cb1c:	ldr	r0, [pc, #1192]	; cfcc <bt_compidtostr@@Base+0x3544>
    cb20:	add	r0, pc, r0
    cb24:	bx	lr
    cb28:	ldr	r0, [pc, #1184]	; cfd0 <bt_compidtostr@@Base+0x3548>
    cb2c:	add	r0, pc, r0
    cb30:	bx	lr
    cb34:	ldr	r0, [pc, #1176]	; cfd4 <bt_compidtostr@@Base+0x354c>
    cb38:	add	r0, pc, r0
    cb3c:	bx	lr
    cb40:	ldr	r0, [pc, #1168]	; cfd8 <bt_compidtostr@@Base+0x3550>
    cb44:	add	r0, pc, r0
    cb48:	bx	lr
    cb4c:	ldr	r0, [pc, #1160]	; cfdc <bt_compidtostr@@Base+0x3554>
    cb50:	add	r0, pc, r0
    cb54:	bx	lr
    cb58:	ldr	r0, [pc, #1152]	; cfe0 <bt_compidtostr@@Base+0x3558>
    cb5c:	add	r0, pc, r0
    cb60:	bx	lr
    cb64:	ldr	r0, [pc, #1144]	; cfe4 <bt_compidtostr@@Base+0x355c>
    cb68:	add	r0, pc, r0
    cb6c:	bx	lr
    cb70:	ldr	r0, [pc, #1136]	; cfe8 <bt_compidtostr@@Base+0x3560>
    cb74:	add	r0, pc, r0
    cb78:	bx	lr
    cb7c:	ldr	r0, [pc, #1128]	; cfec <bt_compidtostr@@Base+0x3564>
    cb80:	add	r0, pc, r0
    cb84:	bx	lr
    cb88:	ldr	r0, [pc, #1120]	; cff0 <bt_compidtostr@@Base+0x3568>
    cb8c:	add	r0, pc, r0
    cb90:	bx	lr
    cb94:	ldr	r0, [pc, #1112]	; cff4 <bt_compidtostr@@Base+0x356c>
    cb98:	add	r0, pc, r0
    cb9c:	bx	lr
    cba0:	ldr	r0, [pc, #1104]	; cff8 <bt_compidtostr@@Base+0x3570>
    cba4:	add	r0, pc, r0
    cba8:	bx	lr
    cbac:	ldr	r0, [pc, #1096]	; cffc <bt_compidtostr@@Base+0x3574>
    cbb0:	add	r0, pc, r0
    cbb4:	bx	lr
    cbb8:	ldr	r0, [pc, #1088]	; d000 <bt_compidtostr@@Base+0x3578>
    cbbc:	add	r0, pc, r0
    cbc0:	bx	lr
    cbc4:	ldr	r0, [pc, #1080]	; d004 <bt_compidtostr@@Base+0x357c>
    cbc8:	add	r0, pc, r0
    cbcc:	bx	lr
    cbd0:	ldr	r0, [pc, #1072]	; d008 <bt_compidtostr@@Base+0x3580>
    cbd4:	add	r0, pc, r0
    cbd8:	bx	lr
    cbdc:	ldr	r0, [pc, #1064]	; d00c <bt_compidtostr@@Base+0x3584>
    cbe0:	add	r0, pc, r0
    cbe4:	bx	lr
    cbe8:	ldr	r0, [pc, #1056]	; d010 <bt_compidtostr@@Base+0x3588>
    cbec:	add	r0, pc, r0
    cbf0:	bx	lr
    cbf4:	ldr	r0, [pc, #1048]	; d014 <bt_compidtostr@@Base+0x358c>
    cbf8:	add	r0, pc, r0
    cbfc:	bx	lr
    cc00:	ldr	r0, [pc, #1040]	; d018 <bt_compidtostr@@Base+0x3590>
    cc04:	add	r0, pc, r0
    cc08:	bx	lr
    cc0c:	ldr	r0, [pc, #1032]	; d01c <bt_compidtostr@@Base+0x3594>
    cc10:	add	r0, pc, r0
    cc14:	bx	lr
    cc18:	ldr	r0, [pc, #1024]	; d020 <bt_compidtostr@@Base+0x3598>
    cc1c:	add	r0, pc, r0
    cc20:	bx	lr
    cc24:	ldr	r0, [pc, #1016]	; d024 <bt_compidtostr@@Base+0x359c>
    cc28:	add	r0, pc, r0
    cc2c:	bx	lr
    cc30:	ldr	r0, [pc, #1008]	; d028 <bt_compidtostr@@Base+0x35a0>
    cc34:	add	r0, pc, r0
    cc38:	bx	lr
    cc3c:	ldr	r0, [pc, #1000]	; d02c <bt_compidtostr@@Base+0x35a4>
    cc40:	add	r0, pc, r0
    cc44:	bx	lr
    cc48:	ldr	r0, [pc, #992]	; d030 <bt_compidtostr@@Base+0x35a8>
    cc4c:	add	r0, pc, r0
    cc50:	bx	lr
    cc54:	ldr	r0, [pc, #984]	; d034 <bt_compidtostr@@Base+0x35ac>
    cc58:	add	r0, pc, r0
    cc5c:	bx	lr
    cc60:	ldr	r0, [pc, #976]	; d038 <bt_compidtostr@@Base+0x35b0>
    cc64:	add	r0, pc, r0
    cc68:	bx	lr
    cc6c:	ldr	r0, [pc, #968]	; d03c <bt_compidtostr@@Base+0x35b4>
    cc70:	add	r0, pc, r0
    cc74:	bx	lr
    cc78:	ldr	r0, [pc, #960]	; d040 <bt_compidtostr@@Base+0x35b8>
    cc7c:	add	r0, pc, r0
    cc80:	bx	lr
    cc84:	ldr	r0, [pc, #952]	; d044 <bt_compidtostr@@Base+0x35bc>
    cc88:	add	r0, pc, r0
    cc8c:	bx	lr
    cc90:	ldr	r0, [pc, #944]	; d048 <bt_compidtostr@@Base+0x35c0>
    cc94:	add	r0, pc, r0
    cc98:	bx	lr
    cc9c:	ldr	r0, [pc, #936]	; d04c <bt_compidtostr@@Base+0x35c4>
    cca0:	add	r0, pc, r0
    cca4:	bx	lr
    cca8:	ldr	r0, [pc, #928]	; d050 <bt_compidtostr@@Base+0x35c8>
    ccac:	add	r0, pc, r0
    ccb0:	bx	lr
    ccb4:	ldr	r0, [pc, #920]	; d054 <bt_compidtostr@@Base+0x35cc>
    ccb8:	add	r0, pc, r0
    ccbc:	bx	lr
    ccc0:	ldr	r0, [pc, #912]	; d058 <bt_compidtostr@@Base+0x35d0>
    ccc4:	add	r0, pc, r0
    ccc8:	bx	lr
    cccc:	ldr	r0, [pc, #904]	; d05c <bt_compidtostr@@Base+0x35d4>
    ccd0:	add	r0, pc, r0
    ccd4:	bx	lr
    ccd8:	ldr	r0, [pc, #896]	; d060 <bt_compidtostr@@Base+0x35d8>
    ccdc:	add	r0, pc, r0
    cce0:	bx	lr
    cce4:	ldr	r0, [pc, #888]	; d064 <bt_compidtostr@@Base+0x35dc>
    cce8:	add	r0, pc, r0
    ccec:	bx	lr
    ccf0:	ldr	r0, [pc, #880]	; d068 <bt_compidtostr@@Base+0x35e0>
    ccf4:	add	r0, pc, r0
    ccf8:	bx	lr
    ccfc:	ldr	r0, [pc, #872]	; d06c <bt_compidtostr@@Base+0x35e4>
    cd00:	add	r0, pc, r0
    cd04:	bx	lr
    cd08:	ldr	r0, [pc, #864]	; d070 <bt_compidtostr@@Base+0x35e8>
    cd0c:	add	r0, pc, r0
    cd10:	bx	lr
    cd14:	ldr	r0, [pc, #856]	; d074 <bt_compidtostr@@Base+0x35ec>
    cd18:	add	r0, pc, r0
    cd1c:	bx	lr
    cd20:	ldr	r0, [pc, #848]	; d078 <bt_compidtostr@@Base+0x35f0>
    cd24:	add	r0, pc, r0
    cd28:	bx	lr
    cd2c:	ldr	r0, [pc, #840]	; d07c <bt_compidtostr@@Base+0x35f4>
    cd30:	add	r0, pc, r0
    cd34:	bx	lr
    cd38:	ldr	r0, [pc, #832]	; d080 <bt_compidtostr@@Base+0x35f8>
    cd3c:	add	r0, pc, r0
    cd40:	bx	lr
    cd44:	ldr	r0, [pc, #824]	; d084 <bt_compidtostr@@Base+0x35fc>
    cd48:	add	r0, pc, r0
    cd4c:	bx	lr
    cd50:	ldr	r0, [pc, #816]	; d088 <bt_compidtostr@@Base+0x3600>
    cd54:	add	r0, pc, r0
    cd58:	bx	lr
    cd5c:	ldr	r0, [pc, #808]	; d08c <bt_compidtostr@@Base+0x3604>
    cd60:	add	r0, pc, r0
    cd64:	bx	lr
    cd68:	ldr	r0, [pc, #800]	; d090 <bt_compidtostr@@Base+0x3608>
    cd6c:	add	r0, pc, r0
    cd70:	bx	lr
    cd74:	ldr	r0, [pc, #792]	; d094 <bt_compidtostr@@Base+0x360c>
    cd78:	add	r0, pc, r0
    cd7c:	bx	lr
    cd80:	ldr	r0, [pc, #784]	; d098 <bt_compidtostr@@Base+0x3610>
    cd84:	add	r0, pc, r0
    cd88:	bx	lr
    cd8c:	ldr	r0, [pc, #776]	; d09c <bt_compidtostr@@Base+0x3614>
    cd90:	add	r0, pc, r0
    cd94:	bx	lr
    cd98:	ldr	r0, [pc, #768]	; d0a0 <bt_compidtostr@@Base+0x3618>
    cd9c:	add	r0, pc, r0
    cda0:	bx	lr
    cda4:	ldr	r0, [pc, #760]	; d0a4 <bt_compidtostr@@Base+0x361c>
    cda8:	add	r0, pc, r0
    cdac:	bx	lr
    cdb0:	ldr	r0, [pc, #752]	; d0a8 <bt_compidtostr@@Base+0x3620>
    cdb4:	add	r0, pc, r0
    cdb8:	bx	lr
    cdbc:	ldr	r0, [pc, #744]	; d0ac <bt_compidtostr@@Base+0x3624>
    cdc0:	add	r0, pc, r0
    cdc4:	bx	lr
    cdc8:	ldr	r0, [pc, #736]	; d0b0 <bt_compidtostr@@Base+0x3628>
    cdcc:	add	r0, pc, r0
    cdd0:	bx	lr
    cdd4:	ldr	r0, [pc, #728]	; d0b4 <bt_compidtostr@@Base+0x362c>
    cdd8:	add	r0, pc, r0
    cddc:	bx	lr
    cde0:	ldr	r0, [pc, #720]	; d0b8 <bt_compidtostr@@Base+0x3630>
    cde4:	add	r0, pc, r0
    cde8:	bx	lr
    cdec:	ldr	r0, [pc, #712]	; d0bc <bt_compidtostr@@Base+0x3634>
    cdf0:	add	r0, pc, r0
    cdf4:	bx	lr
    cdf8:	ldr	r0, [pc, #704]	; d0c0 <bt_compidtostr@@Base+0x3638>
    cdfc:	add	r0, pc, r0
    ce00:	bx	lr
    ce04:	ldr	r0, [pc, #696]	; d0c4 <bt_compidtostr@@Base+0x363c>
    ce08:	add	r0, pc, r0
    ce0c:	bx	lr
    ce10:	andeq	ip, r0, r4, ror #24
    ce14:	andeq	ip, r0, r8, lsr #10
    ce18:	muleq	r0, ip, r2
    ce1c:	andeq	ip, r0, r4, asr #3
    ce20:	andeq	ip, r0, r4, ror #3
    ce24:	andeq	ip, r0, ip, asr #2
    ce28:	ldrdeq	ip, [r0], -r4
    ce2c:	andeq	ip, r0, r8, lsr #4
    ce30:	andeq	r8, r0, r0, lsl #22
    ce34:	andeq	ip, r0, r4, asr r0
    ce38:	andeq	ip, r0, r0, lsl #21
    ce3c:	andeq	ip, r0, r4, lsl #20
    ce40:	andeq	ip, r0, ip, ror #17
    ce44:	andeq	ip, r0, ip, asr r7
    ce48:	andeq	ip, r0, r8, ror #17
    ce4c:			; <UNDEFINED> instruction: 0x0000c6b4
    ce50:	andeq	ip, r0, r8, lsr r6
    ce54:	andeq	ip, r0, r0, asr #10
    ce58:	andeq	ip, r0, r4, ror r5
    ce5c:	andeq	ip, r0, r8, asr #9
    ce60:	andeq	ip, r0, r8, ror r4
    ce64:	andeq	ip, r0, r0, ror #14
    ce68:	andeq	ip, r0, ip, ror #13
    ce6c:			; <UNDEFINED> instruction: 0x0000c3b0
    ce70:	andeq	ip, r0, r8, ror #12
    ce74:	andeq	sp, r0, r4, lsl #2
    ce78:			; <UNDEFINED> instruction: 0x0000cfb0
    ce7c:	andeq	sp, r0, r4, asr r0
    ce80:	andeq	r8, r0, ip, lsr #16
    ce84:	andeq	ip, r0, ip, asr #3
    ce88:	andeq	fp, r0, r4, lsr #14
    ce8c:	andeq	fp, r0, r0, lsr r6
    ce90:	andeq	fp, r0, r8, ror #12
    ce94:	muleq	r0, r4, r5
    ce98:	andeq	fp, r0, r8, lsl #10
    ce9c:	andeq	fp, r0, r4, lsr #13
    cea0:			; <UNDEFINED> instruction: 0x0000a7b0
    cea4:	andeq	fp, r0, ip, asr r4
    cea8:	andeq	fp, r0, r0, ror #30
    ceac:	andeq	sp, r0, r8, ror r2
    ceb0:	ldrdeq	fp, [r0], -r0
    ceb4:	andeq	fp, r0, ip, asr #28
    ceb8:	andeq	sp, r0, ip, lsl #3
    cebc:	muleq	r0, r8, r0
    cec0:	andeq	fp, r0, ip, ror #26
    cec4:	strheq	sp, [r0], -ip
    cec8:	strdeq	ip, [r0], -r4
    cecc:	andeq	ip, r0, r8, lsl #31
    ced0:	andeq	ip, r0, r4, ror lr
    ced4:	andeq	ip, r0, r0, asr #25
    ced8:	andeq	ip, r0, r0, asr #23
    cedc:	andeq	ip, r0, r8, asr #24
    cee0:	andeq	ip, r0, r4, lsr fp
    cee4:	andeq	ip, r0, r4, ror sl
    cee8:			; <UNDEFINED> instruction: 0x0000cab0
    ceec:	andeq	ip, r0, ip, ror #19
    cef0:	andeq	ip, r0, r0, ror #18
    cef4:	andeq	sp, r0, r4, lsr #15
    cef8:	andeq	ip, r0, r8, ror #24
    cefc:	andeq	ip, r0, r8, lsr #31
    cf00:	andeq	sp, r0, r8, asr #13
    cf04:	andeq	sp, r0, r0, asr r6
    cf08:	andeq	sp, r0, r0, ror r5
    cf0c:	andeq	sp, r0, ip, ror #7
    cf10:	andeq	sp, r0, r0, asr r5
    cf14:	andeq	sp, r0, ip, asr #6
    cf18:	andeq	sp, r0, r8, ror #5
    cf1c:	strdeq	sp, [r0], -r8
    cf20:	andeq	sp, r0, ip, lsr #4
    cf24:	andeq	sp, r0, r8, lsl #3
    cf28:	andeq	sp, r0, ip, lsl #2
    cf2c:	ldrdeq	sp, [r0], -r0
    cf30:	andeq	sp, r0, ip, asr r3
    cf34:	andeq	sp, r0, ip, rrx
    cf38:	andeq	sp, r0, r0, ror #5
    cf3c:	andeq	ip, r0, r8, lsl fp
    cf40:	andeq	r8, r0, r8, ror #1
    cf44:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    cf48:	andeq	ip, r0, r0, lsl #19
    cf4c:	ldrdeq	r8, [r0], -ip
    cf50:	andeq	ip, r0, r8, lsl #19
    cf54:	andeq	ip, r0, r8, asr #11
    cf58:	andeq	ip, r0, r0, asr #21
    cf5c:	andeq	sp, r0, ip, asr r2
    cf60:	andeq	ip, r0, r0, asr #31
    cf64:	muleq	r0, ip, r2
    cf68:	ldrdeq	sp, [r0], -r4
    cf6c:	strdeq	ip, [r0], -r4
    cf70:	andeq	sp, r0, r0, lsr r0
    cf74:	ldrdeq	sp, [r0], -r8
    cf78:	andeq	sp, r0, r8, asr r0
    cf7c:	andeq	sp, r0, r8, lsl #2
    cf80:	andeq	sp, r0, r4, asr r1
    cf84:	andeq	sp, r0, r0, lsr #6
    cf88:	muleq	r0, r0, r1
    cf8c:			; <UNDEFINED> instruction: 0x0000d2bc
    cf90:	andeq	sp, r0, r4, ror #6
    cf94:	muleq	r0, ip, r3
    cf98:	andeq	ip, r0, r4, ror #24
    cf9c:	strdeq	ip, [r0], -r4
    cfa0:			; <UNDEFINED> instruction: 0x0000d3b0
    cfa4:	andeq	ip, r0, ip, lsr r5
    cfa8:	muleq	r0, r0, r5
    cfac:	andeq	ip, r0, r8, lsl r6
    cfb0:	ldrdeq	ip, [r0], -r4
    cfb4:	andeq	ip, r0, r0, asr #12
    cfb8:	andeq	ip, r0, ip, lsl r7
    cfbc:	andeq	ip, r0, ip, lsl #13
    cfc0:	andeq	ip, r0, r0, asr #14
    cfc4:	andeq	ip, r0, r8, ror #17
    cfc8:	andeq	ip, r0, r4, lsr #19
    cfcc:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    cfd0:	andeq	ip, r0, r4, lsl #21
    cfd4:	strdeq	fp, [r0], -ip
    cfd8:	andeq	ip, r0, r0, lsl sl
    cfdc:			; <UNDEFINED> instruction: 0x0000cabc
    cfe0:	andeq	fp, r0, r8, lsr r7
    cfe4:	andeq	fp, r0, r0, ror r7
    cfe8:	andeq	ip, r0, r8, ror #21
    cfec:			; <UNDEFINED> instruction: 0x0000b7b8
    cff0:	andeq	sl, r0, r4, ror #24
    cff4:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    cff8:	andeq	sl, r0, r4, asr lr
    cffc:	andeq	sl, r0, ip, lsl #25
    d000:	andeq	sl, r0, r4, ror #25
    d004:	andeq	sl, r0, r0, lsl #27
    d008:	andeq	sl, r0, ip, lsr sp
    d00c:	andeq	sl, r0, r8, asr #27
    d010:	andeq	fp, r0, ip, asr r8
    d014:	muleq	r0, ip, r6
    d018:			; <UNDEFINED> instruction: 0x0000c5bc
    d01c:	ldrdeq	ip, [r0], -r8
    d020:	strdeq	fp, [r0], -r0
    d024:	andeq	fp, r0, r8, lsl r9
    d028:	andeq	fp, r0, r0, lsr ip
    d02c:	andeq	fp, r0, r0, ror #24
    d030:	andeq	fp, r0, r4, asr #18
    d034:	andeq	fp, r0, r8, ror r9
    d038:	andeq	fp, r0, r4, lsl sl
    d03c:	andeq	fp, r0, r8, lsr #19
    d040:	andeq	fp, r0, ip, ror #20
    d044:	andeq	fp, r0, ip, lsr #21
    d048:	ldrdeq	fp, [r0], -r8
    d04c:	andeq	fp, r0, r4, lsl fp
    d050:	andeq	fp, r0, r4, asr #24
    d054:	andeq	fp, r0, r8, lsl sp
    d058:	andeq	fp, r0, ip, asr sp
    d05c:	andeq	fp, r0, r4, lsl #6
    d060:	muleq	r0, r8, r4
    d064:	andeq	fp, r0, r0, lsr r3
    d068:	andeq	fp, r0, ip, asr r3
    d06c:	ldrdeq	fp, [r0], -r4
    d070:	andeq	fp, r0, r8, ror r3
    d074:	andeq	fp, r0, r8, lsl r4
    d078:	andeq	fp, r0, r8, ror #12
    d07c:	andeq	fp, r0, r0, asr #26
    d080:	andeq	fp, r0, r0, asr #9
    d084:	muleq	r0, r8, r6
    d088:	andeq	ip, r0, r4, asr r9
    d08c:	strdeq	ip, [r0], -r4
    d090:	andeq	ip, r0, r0, lsr #20
    d094:	andeq	ip, r0, r8, asr #21
    d098:	andeq	ip, r0, r4, ror sl
    d09c:	andeq	ip, r0, r8, lsl #22
    d0a0:	andeq	ip, r0, r8, asr fp
    d0a4:	muleq	r0, ip, fp
    d0a8:	muleq	r0, r4, r6
    d0ac:	andeq	fp, r0, r4, ror pc
    d0b0:	strdeq	fp, [r0], -r4
    d0b4:	andeq	fp, r0, r8, lsr #31
    d0b8:	andeq	fp, r0, r0, ror #31
    d0bc:	andeq	fp, r0, ip, lsl #26
    d0c0:	andeq	fp, r0, ip, asr sp
    d0c4:	strdeq	fp, [r0], -r8
    d0c8:	muleq	r0, ip, r5
    d0cc:	andeq	fp, r0, ip, lsl r6
    d0d0:	andeq	fp, r0, ip, asr r6
    d0d4:	strdeq	fp, [r0], -r8
    d0d8:	muleq	r0, ip, r6
    d0dc:	muleq	r0, r0, r7
    d0e0:	andeq	fp, r0, r8, lsr #16
    d0e4:	andeq	fp, r0, r0, ror r8
    d0e8:	strdeq	r9, [r0], -r4
    d0ec:	muleq	r0, r8, r8
    d0f0:	andeq	sl, r0, r0, lsr lr
    d0f4:	andeq	r9, r0, r4, lsr pc
    d0f8:	andeq	r9, r0, ip, ror pc
    d0fc:	strdeq	r9, [r0], -ip
    d100:			; <UNDEFINED> instruction: 0x00009fbc
    d104:	andeq	sl, r0, r8, lsr #32
    d108:	andeq	sl, r0, ip, asr r6
    d10c:	andeq	sl, r0, r0, lsr #7
    d110:	andeq	sl, r0, r4, lsr #13
    d114:	andeq	sl, r0, r4, ror #13
    d118:	ldrdeq	sl, [r0], -r4
    d11c:	andeq	sl, r0, r8, lsr #8
    d120:	ldrdeq	sl, [r0], -ip
    d124:	andeq	sl, r0, ip, asr r4
    d128:	andeq	sl, r0, r8, lsr r5
    d12c:	andeq	sl, r0, r4, ror r5
    d130:	andeq	sl, r0, ip, lsr #14
    d134:	andeq	sl, r0, r4, lsr #11
    d138:			; <UNDEFINED> instruction: 0x0000a6bc
    d13c:	andeq	sl, r0, ip, ror #14
    d140:	muleq	r0, ip, r7
    d144:			; <UNDEFINED> instruction: 0x00009fbc
    d148:	ldrdeq	sl, [r0], -ip
    d14c:	strdeq	r9, [r0], -r4
    d150:	muleq	r0, r8, r6
    d154:	andeq	r8, r0, ip, lsl r4
    d158:	ldrdeq	r8, [r0], -r0
    d15c:	andeq	r8, r0, r0, lsr #14
    d160:	andeq	r8, r0, r8, lsr r4
    d164:	andeq	r8, r0, ip, asr r4
    d168:	andeq	r8, r0, r8, lsl #10
    d16c:	muleq	r0, r0, r4
    d170:	andeq	r8, r0, ip, ror #10
    d174:	andeq	r8, r0, r8, lsr #11
    d178:	muleq	r0, r8, r7
    d17c:	ldrdeq	r8, [r0], -r0
    d180:	andeq	r8, r0, ip, lsl #14
    d184:	andeq	r8, r0, r4, asr #15
    d188:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    d18c:	andeq	r7, r0, r0, ror sp
    d190:	andeq	r7, r0, r0, ror #31
    d194:	andeq	r7, r0, r8, lsr #27
    d198:	ldrdeq	r7, [r0], -ip
    d19c:	strdeq	r7, [r0], -r0
    d1a0:	andeq	r7, r0, r0, ror lr
    d1a4:	andeq	r7, r0, r0, lsr pc
    d1a8:	andeq	r9, r0, r8, asr #5
    d1ac:	andeq	r9, r0, r0, lsl #6
    d1b0:	muleq	r0, r4, r3
    d1b4:	andeq	r8, r0, r0, asr sp
    d1b8:	andeq	r9, r0, r4, lsr r3
    d1bc:	andeq	r9, r0, r8, ror #7
    d1c0:	andeq	r8, r0, r8, ror sp
    d1c4:	andeq	r8, r0, r0, asr #27
    d1c8:	andeq	r8, r0, r8, lsr lr
    d1cc:	strdeq	r8, [r0], -r4
    d1d0:	andeq	r8, r0, ip, ror lr
    d1d4:	andeq	r8, r0, r8, asr #29
    d1d8:	andeq	r9, r0, ip, asr #7
    d1dc:	andeq	r8, r0, r4, ror #29
    d1e0:	andeq	r9, r0, r8, lsr r9
    d1e4:	andeq	r9, r0, r8, asr #13
    d1e8:	andeq	r9, r0, r4, lsl #19
    d1ec:	andeq	r9, r0, r4, asr #19
    d1f0:	andeq	r9, r0, r0, ror #13
    d1f4:	andeq	r9, r0, ip, lsr #14
    d1f8:	andeq	r9, r0, r8, lsr #15
    d1fc:	andeq	r9, r0, r0, asr r7
    d200:	andeq	r9, r0, r4, ror #15
    d204:	andeq	r9, r0, r0, asr #16
    d208:	andeq	r9, r0, ip, lsr sl
    d20c:	andeq	r9, r0, r8, ror #16
    d210:			; <UNDEFINED> instruction: 0x000099b4
    d214:	andeq	r9, r0, ip, asr sl
    d218:	ldrdeq	r9, [r0], -r8
    d21c:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    d220:	muleq	r0, r0, r3
    d224:	andeq	r9, r0, r8, ror #21
    d228:	andeq	r9, r0, r0, lsl r0
    d22c:	andeq	r9, r0, r4, lsr r0
    d230:	andeq	r8, r0, r4, ror lr
    d234:	andeq	r7, r0, r0, lsl r0
    d238:	andeq	r8, r0, r8, lsr #29
    d23c:	andeq	r8, r0, ip, asr #29
    d240:	andeq	r7, r0, ip, lsl r0
    d244:	andeq	r7, r0, ip, asr #32
    d248:	andeq	r7, r0, r0, lsl #2
    d24c:	andeq	r7, r0, r4, lsl #1
    d250:	andeq	r7, r0, r8, lsr r1
    d254:	strdeq	r8, [r0], -r0
    d258:	muleq	r0, r0, r2
    d25c:	andeq	r9, r0, ip, lsl r3
    d260:	andeq	r9, r0, r4, ror r3
    d264:	andeq	r9, r0, r4, lsl #8
    d268:	andeq	r9, r0, r4, lsr #7
    d26c:	andeq	r9, r0, ip, lsr r4
    d270:	muleq	r0, r0, r4
    d274:	andeq	r9, r0, r0, asr #9
    d278:	andeq	r8, r0, r8, lsr #31
    d27c:	andeq	r8, r0, r0, lsr r8
    d280:	ldrdeq	r8, [r0], -r0
    d284:	andeq	r8, r0, ip, ror #16
    d288:			; <UNDEFINED> instruction: 0x000088b8
    d28c:	andeq	r8, r0, r0, lsl r6
    d290:	andeq	r8, r0, ip, asr #12
    d294:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    d298:	andeq	r8, r0, r8, lsl #13
    d29c:	andeq	r8, r0, r0, lsr #14
    d2a0:	andeq	r8, r0, ip, asr #14
    d2a4:	andeq	r8, r0, r0, lsl r9
    d2a8:	andeq	r8, r0, ip, ror r7
    d2ac:	andeq	r8, r0, r8, lsr #17
    d2b0:	andeq	r8, r0, r8, asr r9
    d2b4:	andeq	r8, r0, r4, lsr #19
    d2b8:	andeq	r7, r0, r4, asr r0
    d2bc:	andeq	r8, r0, r8, ror #19
    d2c0:	strdeq	r7, [r0], -r8
    d2c4:	andeq	r8, r0, r4, lsl #9
    d2c8:	andeq	r7, r0, r8, ror ip
    d2cc:	andeq	r7, r0, ip, lsl sp
    d2d0:	andeq	r7, r0, r0, ror sp
    d2d4:	andeq	r7, r0, r4, lsl lr
    d2d8:	andeq	r7, r0, r4, lsr #27
    d2dc:	andeq	r7, r0, r8, asr #28
    d2e0:	andeq	r7, r0, ip, lsl #13
    d2e4:	muleq	r0, ip, r3
    d2e8:	andeq	r7, r0, r8, asr #13
    d2ec:	andeq	r7, r0, r4, lsl #14
    d2f0:	andeq	r7, r0, r4, asr #7
    d2f4:	andeq	r7, r0, r4, lsl r4
    d2f8:			; <UNDEFINED> instruction: 0x000074b8
    d2fc:	andeq	r7, r0, ip, asr r4
    d300:	strdeq	r7, [r0], -ip
    d304:	andeq	r7, r0, ip, asr r5
    d308:	andeq	r7, r0, r0, ror r7
    d30c:			; <UNDEFINED> instruction: 0x000075bc
    d310:	andeq	r7, r0, r4, lsr #28
    d314:	strdeq	r7, [r0], -r4
    d318:	muleq	r0, ip, r7
    d31c:	ldrdeq	r7, [r0], -r8
    d320:	andeq	r6, r0, r4, lsr #31
    d324:	andeq	r7, r0, r8, lsr #16
    d328:	andeq	r7, r0, ip, lsr #28
    d32c:	andeq	r6, r0, r8, asr #30
    d330:	andeq	r6, r0, r4, ror #31
    d334:	andeq	r7, r0, r8, lsl r0
    d338:	strheq	r7, [r0], -r0
    d33c:	andeq	r7, r0, r8, asr r0
    d340:	andeq	r7, r0, ip, lsl #2
    d344:	andeq	r7, r0, r4, ror #2
    d348:	andeq	r9, r0, ip, lsl #25
    d34c:	andeq	r9, r0, r4, ror #24
    d350:	andeq	r7, r0, ip, lsl r1
    d354:	andeq	r6, r0, r0, asr #30
    d358:	andeq	r7, r0, r8, lsr #1
    d35c:			; <UNDEFINED> instruction: 0x00007ab0
    d360:	andeq	r7, r0, ip, asr #22
    d364:	strdeq	r7, [r0], -r0
    d368:	andeq	r7, r0, r4, lsl #23
    d36c:	andeq	r7, r0, ip, lsr #24
    d370:	ldrdeq	r7, [r0], -r4
    d374:	andeq	r7, r0, r4, ror ip
    d378:	andeq	r6, r0, r0, asr #30
    d37c:	ldrdeq	r6, [r0], -r4
    d380:	andeq	r6, r0, r8, ror pc
    d384:	andeq	r7, r0, ip, ror #25
    d388:	andeq	r6, r0, r8, lsr #28
    d38c:	andeq	r7, r0, r0, lsr r2
    d390:	andeq	r7, r0, r0, ror #5
    d394:	andeq	r7, r0, r0, lsl #5
    d398:	andeq	r7, r0, r8, lsr #9
    d39c:	andeq	r7, r0, r0, asr r1
    d3a0:	ldrdeq	r7, [r0], -r8
    d3a4:	andeq	r6, r0, r8, lsl #28
    d3a8:	andeq	r7, r0, ip, asr r6
    d3ac:	andeq	r7, r0, r8, lsl #10
    d3b0:	andeq	r7, r0, r0, lsl #12
    d3b4:	andeq	r7, r0, ip, lsr #11
    d3b8:	andeq	r7, r0, ip, asr r1
    d3bc:	andeq	r7, r0, r4, lsr #5
    d3c0:	strdeq	r7, [r0], -r8
    d3c4:	andeq	r7, r0, r0, lsl #6
    d3c8:	andeq	r7, r0, r4, lsl #10
    d3cc:	andeq	r7, r0, r4, ror #6
    d3d0:	andeq	r8, r0, r8, ror #7
    d3d4:	andeq	r8, r0, ip, lsl #10
    d3d8:	andeq	r8, r0, r4, asr #11
    d3dc:	andeq	r8, r0, ip, asr #22
    d3e0:	andeq	r8, r0, r0, lsl #7
    d3e4:	andeq	r8, r0, r0, asr #10
    d3e8:	andeq	r8, r0, r8, lsl #5
    d3ec:	andeq	r8, r0, r4, asr #5
    d3f0:	andeq	r8, r0, r8, lsl #6
    d3f4:	andeq	r8, r0, r0, asr #7
    d3f8:	andeq	r8, r0, ip, lsr r1
    d3fc:	strdeq	r8, [r0], -r0
    d400:	andeq	r8, r0, r8, ror #3
    d404:	andeq	r8, r0, r0, lsr r4
    d408:	muleq	r0, r4, r1
    d40c:	andeq	r8, r0, r4, asr lr
    d410:	andeq	r8, r0, r0, ror #26
    d414:	andeq	r8, r0, ip, ror pc
    d418:			; <UNDEFINED> instruction: 0x00008fb8
    d41c:	andeq	r8, r0, ip, ror lr
    d420:			; <UNDEFINED> instruction: 0x00008eb4
    d424:	strdeq	r8, [r0], -r0
    d428:			; <UNDEFINED> instruction: 0x000078b0
    d42c:	andeq	r8, r0, ip, lsr #10
    d430:	andeq	r8, r0, r4, lsl r0
    d434:	andeq	r6, r0, r0, asr #23
    d438:	andeq	r8, r0, r0, asr #10
    d43c:	andeq	r7, r0, r8, asr #29
    d440:	andeq	r7, r0, r0, lsr pc
    d444:	andeq	r7, r0, r0, ror sp
    d448:	muleq	r0, ip, fp
    d44c:	andeq	r7, r0, r0, asr ip
    d450:	ldrdeq	r7, [r0], -r4
    d454:	strdeq	r7, [r0], -r4
    d458:	andeq	r7, r0, ip, lsl #25
    d45c:	andeq	r9, r0, r8, asr #23
    d460:	andeq	r9, r0, ip, lsl #27
    d464:	andeq	r9, r0, r0, ror fp
    d468:	andeq	r9, r0, ip, ror #23
    d46c:	andeq	r7, r0, r8, lsl #22
    d470:	andeq	r7, r0, r4, lsr #26
    d474:	andeq	r7, r0, ip, lsr #21
    d478:			; <UNDEFINED> instruction: 0x00007db4
    d47c:	andeq	r7, r0, r0, asr sp
    d480:	andeq	r9, r0, r0, asr r1
    d484:	muleq	r0, ip, r6
    d488:	andeq	r8, r0, ip, lsr #23
    d48c:	andeq	r8, r0, r0, asr #13
    d490:	andeq	r8, r0, ip, asr #10
    d494:	andeq	r8, r0, r4, asr #11
    d498:	andeq	r8, r0, r0, ror r5
    d49c:	ldrdeq	r8, [r0], -r0
    d4a0:	andeq	r8, r0, r0, lsl #12
    d4a4:			; <UNDEFINED> instruction: 0x000075bc
    d4a8:	andeq	r7, r0, ip, lsl r5
    d4ac:	andeq	r7, r0, r4, lsl #12
    d4b0:	muleq	r0, r8, r9
    d4b4:	andeq	r7, r0, r0, asr #12
    d4b8:	andeq	r7, r0, r0, lsr #8
    d4bc:	andeq	r7, r0, r0, asr r4
    d4c0:	strdeq	r7, [r0], -ip
    d4c4:	andeq	r7, r0, r0, lsr lr
    d4c8:	andeq	r7, r0, r0, lsr #7
    d4cc:			; <UNDEFINED> instruction: 0x000069b4
    d4d0:	andeq	r8, r0, r4, asr r7
    d4d4:	andeq	r6, r0, ip, asr #18
    d4d8:	andeq	r6, r0, r8, asr #17
    d4dc:	andeq	r8, r0, ip, lsl #23
    d4e0:	ldrdeq	r8, [r0], -r4
    d4e4:	andeq	r6, r0, r0, asr r8
    d4e8:	andeq	r6, r0, ip, lsl r8
    d4ec:	andeq	r8, r0, ip, lsr #28
    d4f0:	andeq	r8, r0, ip, lsr #29
    d4f4:	andeq	r8, r0, r8, asr lr
    d4f8:	andeq	r9, r0, ip, lsr #32
    d4fc:	andeq	r8, r0, ip, ror #26
    d500:	andeq	r9, r0, ip, ror r0
    d504:	andeq	r8, r0, r4, ror #17
    d508:	andeq	r8, r0, ip, ror r9
    d50c:	andeq	r8, r0, r8, ror #19
    d510:	andeq	r8, r0, r4, lsr r3
    d514:	andeq	r8, r0, r8, lsl #18
    d518:	andeq	r8, r0, ip, lsr #11
    d51c:	andeq	fp, r0, r0, ror #22
    d520:	ldrdeq	r8, [r0], -r4
    d524:	andeq	r8, r0, r8, lsl #14
    d528:	andeq	r8, r0, r4, lsr r7
    d52c:			; <UNDEFINED> instruction: 0x00008ebc
    d530:	andeq	r9, r0, ip, lsr r0
    d534:	andeq	r9, r0, r0, lsl #1
    d538:	ldrdeq	r8, [r0], -r0
    d53c:	andeq	r8, r0, r4, lsr #20
    d540:	andeq	r9, r0, r8, ror r1
    d544:	andeq	r9, r0, ip, lsr #2
    d548:	andeq	r8, r0, r8, asr #12
    d54c:			; <UNDEFINED> instruction: 0x00008cbc
    d550:	andeq	r8, r0, r4, ror #27
    d554:	andeq	r9, r0, r8, lsl #1
    d558:	andeq	fp, r0, r0, lsr #13
    d55c:	andeq	fp, r0, r0, asr r7
    d560:	ldrdeq	fp, [r0], -r0
    d564:	strdeq	fp, [r0], -r0
    d568:	andeq	fp, r0, r8, lsr #20
    d56c:			; <UNDEFINED> instruction: 0x0000b9b4
    d570:	andeq	fp, r0, ip, ror #19
    d574:	andeq	fp, r0, r4, lsr #5
    d578:	andeq	sl, r0, ip, lsr pc
    d57c:	andeq	fp, r0, r0, lsr r7
    d580:	andeq	fp, r0, r4, ror #11
    d584:	andeq	fp, r0, r0, ror r6
    d588:	andeq	fp, r0, r4, ror r7
    d58c:	andeq	fp, r0, r0, ror #17
    d590:	muleq	r0, r4, r8
    d594:	andeq	fp, r0, r8, rrx
    d598:	andeq	fp, r0, ip, lsl #2
    d59c:	andeq	fp, r0, r0, asr r1
    d5a0:	andeq	r9, r0, ip, ror sp
    d5a4:	andeq	fp, r0, r8, ror r0
    d5a8:	andeq	sl, r0, r0, lsr sp
    d5ac:	andeq	sl, r0, ip, asr sp
    d5b0:	andeq	sl, r0, r8, ror ip
    d5b4:	strdeq	sl, [r0], -ip
    d5b8:			; <UNDEFINED> instruction: 0x0000afb8
    d5bc:	andeq	sl, r0, r8, lsr #28
    d5c0:	andeq	sl, r0, r8, ror #20
    d5c4:	andeq	r6, r0, r4, lsr #20
    d5c8:	andeq	fp, r0, r0, ror r4
    d5cc:	andeq	fp, r0, r0, asr #14
    d5d0:	andeq	sl, r0, r0, asr #30
    d5d4:	andeq	fp, r0, r0, ror #13
    d5d8:	muleq	r0, r0, r3
    d5dc:	andeq	sl, r0, r4, ror #8
    d5e0:	andeq	sl, r0, r8, ror #2
    d5e4:	andeq	r9, r0, r0, asr sl
    d5e8:	andeq	r9, r0, ip, ror #23
    d5ec:	andeq	sl, r0, r4, lsl #9
    d5f0:	andeq	sl, r0, ip, lsl #3
    d5f4:	muleq	r0, ip, r3
    d5f8:	andeq	sl, r0, r8, ror #3
    d5fc:	andeq	r9, r0, ip, lsl #26
    d600:	andeq	fp, r0, r8, lsl #1
    d604:	andeq	r9, r0, ip, asr #26
    d608:	strdeq	r9, [r0], -ip
    d60c:	muleq	r0, r0, ip
    d610:	andeq	sl, r0, r8, asr #19
    d614:	andeq	sl, r0, r8, lsr #20
    d618:			; <UNDEFINED> instruction: 0x0000aab4
    d61c:	ldr	r0, [pc, #-1372]	; d0c8 <bt_compidtostr@@Base+0x3640>
    d620:	add	r0, pc, r0
    d624:	bx	lr
    d628:	ldr	r0, [pc, #-1380]	; d0cc <bt_compidtostr@@Base+0x3644>
    d62c:	add	r0, pc, r0
    d630:	bx	lr
    d634:	ldr	r0, [pc, #-1388]	; d0d0 <bt_compidtostr@@Base+0x3648>
    d638:	add	r0, pc, r0
    d63c:	bx	lr
    d640:	ldr	r0, [pc, #-1396]	; d0d4 <bt_compidtostr@@Base+0x364c>
    d644:	add	r0, pc, r0
    d648:	bx	lr
    d64c:	ldr	r0, [pc, #-1404]	; d0d8 <bt_compidtostr@@Base+0x3650>
    d650:	add	r0, pc, r0
    d654:	bx	lr
    d658:	ldr	r0, [pc, #-1412]	; d0dc <bt_compidtostr@@Base+0x3654>
    d65c:	add	r0, pc, r0
    d660:	bx	lr
    d664:	ldr	r0, [pc, #-1420]	; d0e0 <bt_compidtostr@@Base+0x3658>
    d668:	add	r0, pc, r0
    d66c:	bx	lr
    d670:	ldr	r0, [pc, #-1428]	; d0e4 <bt_compidtostr@@Base+0x365c>
    d674:	add	r0, pc, r0
    d678:	bx	lr
    d67c:	ldr	r0, [pc, #-1436]	; d0e8 <bt_compidtostr@@Base+0x3660>
    d680:	add	r0, pc, r0
    d684:	bx	lr
    d688:	ldr	r0, [pc, #-1444]	; d0ec <bt_compidtostr@@Base+0x3664>
    d68c:	add	r0, pc, r0
    d690:	bx	lr
    d694:	ldr	r0, [pc, #-1452]	; d0f0 <bt_compidtostr@@Base+0x3668>
    d698:	add	r0, pc, r0
    d69c:	bx	lr
    d6a0:	ldr	r0, [pc, #-1460]	; d0f4 <bt_compidtostr@@Base+0x366c>
    d6a4:	add	r0, pc, r0
    d6a8:	bx	lr
    d6ac:	ldr	r0, [pc, #-1468]	; d0f8 <bt_compidtostr@@Base+0x3670>
    d6b0:	add	r0, pc, r0
    d6b4:	bx	lr
    d6b8:	ldr	r0, [pc, #-1476]	; d0fc <bt_compidtostr@@Base+0x3674>
    d6bc:	add	r0, pc, r0
    d6c0:	bx	lr
    d6c4:	ldr	r0, [pc, #-1484]	; d100 <bt_compidtostr@@Base+0x3678>
    d6c8:	add	r0, pc, r0
    d6cc:	bx	lr
    d6d0:	ldr	r0, [pc, #-1492]	; d104 <bt_compidtostr@@Base+0x367c>
    d6d4:	add	r0, pc, r0
    d6d8:	bx	lr
    d6dc:	ldr	r0, [pc, #-1500]	; d108 <bt_compidtostr@@Base+0x3680>
    d6e0:	add	r0, pc, r0
    d6e4:	bx	lr
    d6e8:	ldr	r0, [pc, #-1508]	; d10c <bt_compidtostr@@Base+0x3684>
    d6ec:	add	r0, pc, r0
    d6f0:	bx	lr
    d6f4:	ldr	r0, [pc, #-1516]	; d110 <bt_compidtostr@@Base+0x3688>
    d6f8:	add	r0, pc, r0
    d6fc:	bx	lr
    d700:	ldr	r0, [pc, #-1524]	; d114 <bt_compidtostr@@Base+0x368c>
    d704:	add	r0, pc, r0
    d708:	bx	lr
    d70c:	ldr	r0, [pc, #-1532]	; d118 <bt_compidtostr@@Base+0x3690>
    d710:	add	r0, pc, r0
    d714:	bx	lr
    d718:	ldr	r0, [pc, #-1540]	; d11c <bt_compidtostr@@Base+0x3694>
    d71c:	add	r0, pc, r0
    d720:	bx	lr
    d724:	ldr	r0, [pc, #-1548]	; d120 <bt_compidtostr@@Base+0x3698>
    d728:	add	r0, pc, r0
    d72c:	bx	lr
    d730:	ldr	r0, [pc, #-1556]	; d124 <bt_compidtostr@@Base+0x369c>
    d734:	add	r0, pc, r0
    d738:	bx	lr
    d73c:	ldr	r0, [pc, #-1564]	; d128 <bt_compidtostr@@Base+0x36a0>
    d740:	add	r0, pc, r0
    d744:	bx	lr
    d748:	ldr	r0, [pc, #-1572]	; d12c <bt_compidtostr@@Base+0x36a4>
    d74c:	add	r0, pc, r0
    d750:	bx	lr
    d754:	ldr	r0, [pc, #-1580]	; d130 <bt_compidtostr@@Base+0x36a8>
    d758:	add	r0, pc, r0
    d75c:	bx	lr
    d760:	ldr	r0, [pc, #-1588]	; d134 <bt_compidtostr@@Base+0x36ac>
    d764:	add	r0, pc, r0
    d768:	bx	lr
    d76c:	ldr	r0, [pc, #-1596]	; d138 <bt_compidtostr@@Base+0x36b0>
    d770:	add	r0, pc, r0
    d774:	bx	lr
    d778:	ldr	r0, [pc, #-1604]	; d13c <bt_compidtostr@@Base+0x36b4>
    d77c:	add	r0, pc, r0
    d780:	bx	lr
    d784:	ldr	r0, [pc, #-1612]	; d140 <bt_compidtostr@@Base+0x36b8>
    d788:	add	r0, pc, r0
    d78c:	bx	lr
    d790:	ldr	r0, [pc, #-1620]	; d144 <bt_compidtostr@@Base+0x36bc>
    d794:	add	r0, pc, r0
    d798:	bx	lr
    d79c:	ldr	r0, [pc, #-1628]	; d148 <bt_compidtostr@@Base+0x36c0>
    d7a0:	add	r0, pc, r0
    d7a4:	bx	lr
    d7a8:	ldr	r0, [pc, #-1636]	; d14c <bt_compidtostr@@Base+0x36c4>
    d7ac:	add	r0, pc, r0
    d7b0:	bx	lr
    d7b4:	ldr	r0, [pc, #-1644]	; d150 <bt_compidtostr@@Base+0x36c8>
    d7b8:	add	r0, pc, r0
    d7bc:	bx	lr
    d7c0:	ldr	r0, [pc, #-1652]	; d154 <bt_compidtostr@@Base+0x36cc>
    d7c4:	add	r0, pc, r0
    d7c8:	bx	lr
    d7cc:	ldr	r0, [pc, #-1660]	; d158 <bt_compidtostr@@Base+0x36d0>
    d7d0:	add	r0, pc, r0
    d7d4:	bx	lr
    d7d8:	ldr	r0, [pc, #-1668]	; d15c <bt_compidtostr@@Base+0x36d4>
    d7dc:	add	r0, pc, r0
    d7e0:	bx	lr
    d7e4:	ldr	r0, [pc, #-1676]	; d160 <bt_compidtostr@@Base+0x36d8>
    d7e8:	add	r0, pc, r0
    d7ec:	bx	lr
    d7f0:	ldr	r0, [pc, #-1684]	; d164 <bt_compidtostr@@Base+0x36dc>
    d7f4:	add	r0, pc, r0
    d7f8:	bx	lr
    d7fc:	ldr	r0, [pc, #-1692]	; d168 <bt_compidtostr@@Base+0x36e0>
    d800:	add	r0, pc, r0
    d804:	bx	lr
    d808:	ldr	r0, [pc, #-1700]	; d16c <bt_compidtostr@@Base+0x36e4>
    d80c:	add	r0, pc, r0
    d810:	bx	lr
    d814:	ldr	r0, [pc, #-1708]	; d170 <bt_compidtostr@@Base+0x36e8>
    d818:	add	r0, pc, r0
    d81c:	bx	lr
    d820:	ldr	r0, [pc, #-1716]	; d174 <bt_compidtostr@@Base+0x36ec>
    d824:	add	r0, pc, r0
    d828:	bx	lr
    d82c:	ldr	r0, [pc, #-1724]	; d178 <bt_compidtostr@@Base+0x36f0>
    d830:	add	r0, pc, r0
    d834:	bx	lr
    d838:	ldr	r0, [pc, #-1732]	; d17c <bt_compidtostr@@Base+0x36f4>
    d83c:	add	r0, pc, r0
    d840:	bx	lr
    d844:	ldr	r0, [pc, #-1740]	; d180 <bt_compidtostr@@Base+0x36f8>
    d848:	add	r0, pc, r0
    d84c:	bx	lr
    d850:	ldr	r0, [pc, #-1748]	; d184 <bt_compidtostr@@Base+0x36fc>
    d854:	add	r0, pc, r0
    d858:	bx	lr
    d85c:	ldr	r0, [pc, #-1756]	; d188 <bt_compidtostr@@Base+0x3700>
    d860:	add	r0, pc, r0
    d864:	bx	lr
    d868:	ldr	r0, [pc, #-1764]	; d18c <bt_compidtostr@@Base+0x3704>
    d86c:	add	r0, pc, r0
    d870:	bx	lr
    d874:	ldr	r0, [pc, #-1772]	; d190 <bt_compidtostr@@Base+0x3708>
    d878:	add	r0, pc, r0
    d87c:	bx	lr
    d880:	ldr	r0, [pc, #-1780]	; d194 <bt_compidtostr@@Base+0x370c>
    d884:	add	r0, pc, r0
    d888:	bx	lr
    d88c:	ldr	r0, [pc, #-1788]	; d198 <bt_compidtostr@@Base+0x3710>
    d890:	add	r0, pc, r0
    d894:	bx	lr
    d898:	ldr	r0, [pc, #-1796]	; d19c <bt_compidtostr@@Base+0x3714>
    d89c:	add	r0, pc, r0
    d8a0:	bx	lr
    d8a4:	ldr	r0, [pc, #-1804]	; d1a0 <bt_compidtostr@@Base+0x3718>
    d8a8:	add	r0, pc, r0
    d8ac:	bx	lr
    d8b0:	ldr	r0, [pc, #-1812]	; d1a4 <bt_compidtostr@@Base+0x371c>
    d8b4:	add	r0, pc, r0
    d8b8:	bx	lr
    d8bc:	ldr	r0, [pc, #-1820]	; d1a8 <bt_compidtostr@@Base+0x3720>
    d8c0:	add	r0, pc, r0
    d8c4:	bx	lr
    d8c8:	ldr	r0, [pc, #-1828]	; d1ac <bt_compidtostr@@Base+0x3724>
    d8cc:	add	r0, pc, r0
    d8d0:	bx	lr
    d8d4:	ldr	r0, [pc, #-1836]	; d1b0 <bt_compidtostr@@Base+0x3728>
    d8d8:	add	r0, pc, r0
    d8dc:	bx	lr
    d8e0:	ldr	r0, [pc, #-1844]	; d1b4 <bt_compidtostr@@Base+0x372c>
    d8e4:	add	r0, pc, r0
    d8e8:	bx	lr
    d8ec:	ldr	r0, [pc, #-1852]	; d1b8 <bt_compidtostr@@Base+0x3730>
    d8f0:	add	r0, pc, r0
    d8f4:	bx	lr
    d8f8:	ldr	r0, [pc, #-1860]	; d1bc <bt_compidtostr@@Base+0x3734>
    d8fc:	add	r0, pc, r0
    d900:	bx	lr
    d904:	ldr	r0, [pc, #-1868]	; d1c0 <bt_compidtostr@@Base+0x3738>
    d908:	add	r0, pc, r0
    d90c:	bx	lr
    d910:	ldr	r0, [pc, #-1876]	; d1c4 <bt_compidtostr@@Base+0x373c>
    d914:	add	r0, pc, r0
    d918:	bx	lr
    d91c:	ldr	r0, [pc, #-1884]	; d1c8 <bt_compidtostr@@Base+0x3740>
    d920:	add	r0, pc, r0
    d924:	bx	lr
    d928:	ldr	r0, [pc, #-1892]	; d1cc <bt_compidtostr@@Base+0x3744>
    d92c:	add	r0, pc, r0
    d930:	bx	lr
    d934:	ldr	r0, [pc, #-1900]	; d1d0 <bt_compidtostr@@Base+0x3748>
    d938:	add	r0, pc, r0
    d93c:	bx	lr
    d940:	ldr	r0, [pc, #-1908]	; d1d4 <bt_compidtostr@@Base+0x374c>
    d944:	add	r0, pc, r0
    d948:	bx	lr
    d94c:	ldr	r0, [pc, #-1916]	; d1d8 <bt_compidtostr@@Base+0x3750>
    d950:	add	r0, pc, r0
    d954:	bx	lr
    d958:	ldr	r0, [pc, #-1924]	; d1dc <bt_compidtostr@@Base+0x3754>
    d95c:	add	r0, pc, r0
    d960:	bx	lr
    d964:	ldr	r0, [pc, #-1932]	; d1e0 <bt_compidtostr@@Base+0x3758>
    d968:	add	r0, pc, r0
    d96c:	bx	lr
    d970:	ldr	r0, [pc, #-1940]	; d1e4 <bt_compidtostr@@Base+0x375c>
    d974:	add	r0, pc, r0
    d978:	bx	lr
    d97c:	ldr	r0, [pc, #-1948]	; d1e8 <bt_compidtostr@@Base+0x3760>
    d980:	add	r0, pc, r0
    d984:	bx	lr
    d988:	ldr	r0, [pc, #-1956]	; d1ec <bt_compidtostr@@Base+0x3764>
    d98c:	add	r0, pc, r0
    d990:	bx	lr
    d994:	ldr	r0, [pc, #-1964]	; d1f0 <bt_compidtostr@@Base+0x3768>
    d998:	add	r0, pc, r0
    d99c:	bx	lr
    d9a0:	ldr	r0, [pc, #-1972]	; d1f4 <bt_compidtostr@@Base+0x376c>
    d9a4:	add	r0, pc, r0
    d9a8:	bx	lr
    d9ac:	ldr	r0, [pc, #-1980]	; d1f8 <bt_compidtostr@@Base+0x3770>
    d9b0:	add	r0, pc, r0
    d9b4:	bx	lr
    d9b8:	ldr	r0, [pc, #-1988]	; d1fc <bt_compidtostr@@Base+0x3774>
    d9bc:	add	r0, pc, r0
    d9c0:	bx	lr
    d9c4:	ldr	r0, [pc, #-1996]	; d200 <bt_compidtostr@@Base+0x3778>
    d9c8:	add	r0, pc, r0
    d9cc:	bx	lr
    d9d0:	ldr	r0, [pc, #-2004]	; d204 <bt_compidtostr@@Base+0x377c>
    d9d4:	add	r0, pc, r0
    d9d8:	bx	lr
    d9dc:	ldr	r0, [pc, #-2012]	; d208 <bt_compidtostr@@Base+0x3780>
    d9e0:	add	r0, pc, r0
    d9e4:	bx	lr
    d9e8:	ldr	r0, [pc, #-2020]	; d20c <bt_compidtostr@@Base+0x3784>
    d9ec:	add	r0, pc, r0
    d9f0:	bx	lr
    d9f4:	ldr	r0, [pc, #-2028]	; d210 <bt_compidtostr@@Base+0x3788>
    d9f8:	add	r0, pc, r0
    d9fc:	bx	lr
    da00:	ldr	r0, [pc, #-2036]	; d214 <bt_compidtostr@@Base+0x378c>
    da04:	add	r0, pc, r0
    da08:	bx	lr
    da0c:	ldr	r0, [pc, #-2044]	; d218 <bt_compidtostr@@Base+0x3790>
    da10:	add	r0, pc, r0
    da14:	bx	lr
    da18:	ldr	r0, [pc, #-2052]	; d21c <bt_compidtostr@@Base+0x3794>
    da1c:	add	r0, pc, r0
    da20:	bx	lr
    da24:	ldr	r0, [pc, #-2060]	; d220 <bt_compidtostr@@Base+0x3798>
    da28:	add	r0, pc, r0
    da2c:	bx	lr
    da30:	ldr	r0, [pc, #-2068]	; d224 <bt_compidtostr@@Base+0x379c>
    da34:	add	r0, pc, r0
    da38:	bx	lr
    da3c:	ldr	r0, [pc, #-2076]	; d228 <bt_compidtostr@@Base+0x37a0>
    da40:	add	r0, pc, r0
    da44:	bx	lr
    da48:	ldr	r0, [pc, #-2084]	; d22c <bt_compidtostr@@Base+0x37a4>
    da4c:	add	r0, pc, r0
    da50:	bx	lr
    da54:	ldr	r0, [pc, #-2092]	; d230 <bt_compidtostr@@Base+0x37a8>
    da58:	add	r0, pc, r0
    da5c:	bx	lr
    da60:	ldr	r0, [pc, #-2100]	; d234 <bt_compidtostr@@Base+0x37ac>
    da64:	add	r0, pc, r0
    da68:	bx	lr
    da6c:	ldr	r0, [pc, #-2108]	; d238 <bt_compidtostr@@Base+0x37b0>
    da70:	add	r0, pc, r0
    da74:	bx	lr
    da78:	ldr	r0, [pc, #-2116]	; d23c <bt_compidtostr@@Base+0x37b4>
    da7c:	add	r0, pc, r0
    da80:	bx	lr
    da84:	ldr	r0, [pc, #-2124]	; d240 <bt_compidtostr@@Base+0x37b8>
    da88:	add	r0, pc, r0
    da8c:	bx	lr
    da90:	ldr	r0, [pc, #-2132]	; d244 <bt_compidtostr@@Base+0x37bc>
    da94:	add	r0, pc, r0
    da98:	bx	lr
    da9c:	ldr	r0, [pc, #-2140]	; d248 <bt_compidtostr@@Base+0x37c0>
    daa0:	add	r0, pc, r0
    daa4:	bx	lr
    daa8:	ldr	r0, [pc, #-2148]	; d24c <bt_compidtostr@@Base+0x37c4>
    daac:	add	r0, pc, r0
    dab0:	bx	lr
    dab4:	ldr	r0, [pc, #-2156]	; d250 <bt_compidtostr@@Base+0x37c8>
    dab8:	add	r0, pc, r0
    dabc:	bx	lr
    dac0:	ldr	r0, [pc, #-2164]	; d254 <bt_compidtostr@@Base+0x37cc>
    dac4:	add	r0, pc, r0
    dac8:	bx	lr
    dacc:	ldr	r0, [pc, #-2172]	; d258 <bt_compidtostr@@Base+0x37d0>
    dad0:	add	r0, pc, r0
    dad4:	bx	lr
    dad8:	ldr	r0, [pc, #-2180]	; d25c <bt_compidtostr@@Base+0x37d4>
    dadc:	add	r0, pc, r0
    dae0:	bx	lr
    dae4:	ldr	r0, [pc, #-2188]	; d260 <bt_compidtostr@@Base+0x37d8>
    dae8:	add	r0, pc, r0
    daec:	bx	lr
    daf0:	ldr	r0, [pc, #-2196]	; d264 <bt_compidtostr@@Base+0x37dc>
    daf4:	add	r0, pc, r0
    daf8:	bx	lr
    dafc:	ldr	r0, [pc, #-2204]	; d268 <bt_compidtostr@@Base+0x37e0>
    db00:	add	r0, pc, r0
    db04:	bx	lr
    db08:	ldr	r0, [pc, #-2212]	; d26c <bt_compidtostr@@Base+0x37e4>
    db0c:	add	r0, pc, r0
    db10:	bx	lr
    db14:	ldr	r0, [pc, #-2220]	; d270 <bt_compidtostr@@Base+0x37e8>
    db18:	add	r0, pc, r0
    db1c:	bx	lr
    db20:	ldr	r0, [pc, #-2228]	; d274 <bt_compidtostr@@Base+0x37ec>
    db24:	add	r0, pc, r0
    db28:	bx	lr
    db2c:	ldr	r0, [pc, #-2236]	; d278 <bt_compidtostr@@Base+0x37f0>
    db30:	add	r0, pc, r0
    db34:	bx	lr
    db38:	ldr	r0, [pc, #-2244]	; d27c <bt_compidtostr@@Base+0x37f4>
    db3c:	add	r0, pc, r0
    db40:	bx	lr
    db44:	ldr	r0, [pc, #-2252]	; d280 <bt_compidtostr@@Base+0x37f8>
    db48:	add	r0, pc, r0
    db4c:	bx	lr
    db50:	ldr	r0, [pc, #-2260]	; d284 <bt_compidtostr@@Base+0x37fc>
    db54:	add	r0, pc, r0
    db58:	bx	lr
    db5c:	ldr	r0, [pc, #-2268]	; d288 <bt_compidtostr@@Base+0x3800>
    db60:	add	r0, pc, r0
    db64:	bx	lr
    db68:	ldr	r0, [pc, #-2276]	; d28c <bt_compidtostr@@Base+0x3804>
    db6c:	add	r0, pc, r0
    db70:	bx	lr
    db74:	ldr	r0, [pc, #-2284]	; d290 <bt_compidtostr@@Base+0x3808>
    db78:	add	r0, pc, r0
    db7c:	bx	lr
    db80:	ldr	r0, [pc, #-2292]	; d294 <bt_compidtostr@@Base+0x380c>
    db84:	add	r0, pc, r0
    db88:	bx	lr
    db8c:	ldr	r0, [pc, #-2300]	; d298 <bt_compidtostr@@Base+0x3810>
    db90:	add	r0, pc, r0
    db94:	bx	lr
    db98:	ldr	r0, [pc, #-2308]	; d29c <bt_compidtostr@@Base+0x3814>
    db9c:	add	r0, pc, r0
    dba0:	bx	lr
    dba4:	ldr	r0, [pc, #-2316]	; d2a0 <bt_compidtostr@@Base+0x3818>
    dba8:	add	r0, pc, r0
    dbac:	bx	lr
    dbb0:	ldr	r0, [pc, #-2324]	; d2a4 <bt_compidtostr@@Base+0x381c>
    dbb4:	add	r0, pc, r0
    dbb8:	bx	lr
    dbbc:	ldr	r0, [pc, #-2332]	; d2a8 <bt_compidtostr@@Base+0x3820>
    dbc0:	add	r0, pc, r0
    dbc4:	bx	lr
    dbc8:	ldr	r0, [pc, #-2340]	; d2ac <bt_compidtostr@@Base+0x3824>
    dbcc:	add	r0, pc, r0
    dbd0:	bx	lr
    dbd4:	ldr	r0, [pc, #-2348]	; d2b0 <bt_compidtostr@@Base+0x3828>
    dbd8:	add	r0, pc, r0
    dbdc:	bx	lr
    dbe0:	ldr	r0, [pc, #-2356]	; d2b4 <bt_compidtostr@@Base+0x382c>
    dbe4:	add	r0, pc, r0
    dbe8:	bx	lr
    dbec:	ldr	r0, [pc, #-2364]	; d2b8 <bt_compidtostr@@Base+0x3830>
    dbf0:	add	r0, pc, r0
    dbf4:	bx	lr
    dbf8:	ldr	r0, [pc, #-2372]	; d2bc <bt_compidtostr@@Base+0x3834>
    dbfc:	add	r0, pc, r0
    dc00:	bx	lr
    dc04:	ldr	r0, [pc, #-2380]	; d2c0 <bt_compidtostr@@Base+0x3838>
    dc08:	add	r0, pc, r0
    dc0c:	bx	lr
    dc10:	ldr	r0, [pc, #-2388]	; d2c4 <bt_compidtostr@@Base+0x383c>
    dc14:	add	r0, pc, r0
    dc18:	bx	lr
    dc1c:	ldr	r0, [pc, #-2396]	; d2c8 <bt_compidtostr@@Base+0x3840>
    dc20:	add	r0, pc, r0
    dc24:	bx	lr
    dc28:	ldr	r0, [pc, #-2404]	; d2cc <bt_compidtostr@@Base+0x3844>
    dc2c:	add	r0, pc, r0
    dc30:	bx	lr
    dc34:	ldr	r0, [pc, #-2412]	; d2d0 <bt_compidtostr@@Base+0x3848>
    dc38:	add	r0, pc, r0
    dc3c:	bx	lr
    dc40:	ldr	r0, [pc, #-2420]	; d2d4 <bt_compidtostr@@Base+0x384c>
    dc44:	add	r0, pc, r0
    dc48:	bx	lr
    dc4c:	ldr	r0, [pc, #-2428]	; d2d8 <bt_compidtostr@@Base+0x3850>
    dc50:	add	r0, pc, r0
    dc54:	bx	lr
    dc58:	ldr	r0, [pc, #-2436]	; d2dc <bt_compidtostr@@Base+0x3854>
    dc5c:	add	r0, pc, r0
    dc60:	bx	lr
    dc64:	ldr	r0, [pc, #-2444]	; d2e0 <bt_compidtostr@@Base+0x3858>
    dc68:	add	r0, pc, r0
    dc6c:	bx	lr
    dc70:	ldr	r0, [pc, #-2452]	; d2e4 <bt_compidtostr@@Base+0x385c>
    dc74:	add	r0, pc, r0
    dc78:	bx	lr
    dc7c:	ldr	r0, [pc, #-2460]	; d2e8 <bt_compidtostr@@Base+0x3860>
    dc80:	add	r0, pc, r0
    dc84:	bx	lr
    dc88:	ldr	r0, [pc, #-2468]	; d2ec <bt_compidtostr@@Base+0x3864>
    dc8c:	add	r0, pc, r0
    dc90:	bx	lr
    dc94:	ldr	r0, [pc, #-2476]	; d2f0 <bt_compidtostr@@Base+0x3868>
    dc98:	add	r0, pc, r0
    dc9c:	bx	lr
    dca0:	ldr	r0, [pc, #-2484]	; d2f4 <bt_compidtostr@@Base+0x386c>
    dca4:	add	r0, pc, r0
    dca8:	bx	lr
    dcac:	ldr	r0, [pc, #-2492]	; d2f8 <bt_compidtostr@@Base+0x3870>
    dcb0:	add	r0, pc, r0
    dcb4:	bx	lr
    dcb8:	ldr	r0, [pc, #-2500]	; d2fc <bt_compidtostr@@Base+0x3874>
    dcbc:	add	r0, pc, r0
    dcc0:	bx	lr
    dcc4:	ldr	r0, [pc, #-2508]	; d300 <bt_compidtostr@@Base+0x3878>
    dcc8:	add	r0, pc, r0
    dccc:	bx	lr
    dcd0:	ldr	r0, [pc, #-2516]	; d304 <bt_compidtostr@@Base+0x387c>
    dcd4:	add	r0, pc, r0
    dcd8:	bx	lr
    dcdc:	ldr	r0, [pc, #-2524]	; d308 <bt_compidtostr@@Base+0x3880>
    dce0:	add	r0, pc, r0
    dce4:	bx	lr
    dce8:	ldr	r0, [pc, #-2532]	; d30c <bt_compidtostr@@Base+0x3884>
    dcec:	add	r0, pc, r0
    dcf0:	bx	lr
    dcf4:	ldr	r0, [pc, #-2540]	; d310 <bt_compidtostr@@Base+0x3888>
    dcf8:	add	r0, pc, r0
    dcfc:	bx	lr
    dd00:	ldr	r0, [pc, #-2548]	; d314 <bt_compidtostr@@Base+0x388c>
    dd04:	add	r0, pc, r0
    dd08:	bx	lr
    dd0c:	ldr	r0, [pc, #-2556]	; d318 <bt_compidtostr@@Base+0x3890>
    dd10:	add	r0, pc, r0
    dd14:	bx	lr
    dd18:	ldr	r0, [pc, #-2564]	; d31c <bt_compidtostr@@Base+0x3894>
    dd1c:	add	r0, pc, r0
    dd20:	bx	lr
    dd24:	ldr	r0, [pc, #-2572]	; d320 <bt_compidtostr@@Base+0x3898>
    dd28:	add	r0, pc, r0
    dd2c:	bx	lr
    dd30:	ldr	r0, [pc, #-2580]	; d324 <bt_compidtostr@@Base+0x389c>
    dd34:	add	r0, pc, r0
    dd38:	bx	lr
    dd3c:	ldr	r0, [pc, #-2588]	; d328 <bt_compidtostr@@Base+0x38a0>
    dd40:	add	r0, pc, r0
    dd44:	bx	lr
    dd48:	ldr	r0, [pc, #-2596]	; d32c <bt_compidtostr@@Base+0x38a4>
    dd4c:	add	r0, pc, r0
    dd50:	bx	lr
    dd54:	ldr	r0, [pc, #-2604]	; d330 <bt_compidtostr@@Base+0x38a8>
    dd58:	add	r0, pc, r0
    dd5c:	bx	lr
    dd60:	ldr	r0, [pc, #-2612]	; d334 <bt_compidtostr@@Base+0x38ac>
    dd64:	add	r0, pc, r0
    dd68:	bx	lr
    dd6c:	ldr	r0, [pc, #-2620]	; d338 <bt_compidtostr@@Base+0x38b0>
    dd70:	add	r0, pc, r0
    dd74:	bx	lr
    dd78:	ldr	r0, [pc, #-2628]	; d33c <bt_compidtostr@@Base+0x38b4>
    dd7c:	add	r0, pc, r0
    dd80:	bx	lr
    dd84:	ldr	r0, [pc, #-2636]	; d340 <bt_compidtostr@@Base+0x38b8>
    dd88:	add	r0, pc, r0
    dd8c:	bx	lr
    dd90:	ldr	r0, [pc, #-2644]	; d344 <bt_compidtostr@@Base+0x38bc>
    dd94:	add	r0, pc, r0
    dd98:	bx	lr
    dd9c:	ldr	r0, [pc, #-2652]	; d348 <bt_compidtostr@@Base+0x38c0>
    dda0:	add	r0, pc, r0
    dda4:	bx	lr
    dda8:	ldr	r0, [pc, #-2660]	; d34c <bt_compidtostr@@Base+0x38c4>
    ddac:	add	r0, pc, r0
    ddb0:	bx	lr
    ddb4:	ldr	r0, [pc, #-2668]	; d350 <bt_compidtostr@@Base+0x38c8>
    ddb8:	add	r0, pc, r0
    ddbc:	bx	lr
    ddc0:	ldr	r0, [pc, #-2676]	; d354 <bt_compidtostr@@Base+0x38cc>
    ddc4:	add	r0, pc, r0
    ddc8:	bx	lr
    ddcc:	ldr	r0, [pc, #-2684]	; d358 <bt_compidtostr@@Base+0x38d0>
    ddd0:	add	r0, pc, r0
    ddd4:	bx	lr
    ddd8:	ldr	r0, [pc, #-2692]	; d35c <bt_compidtostr@@Base+0x38d4>
    dddc:	add	r0, pc, r0
    dde0:	bx	lr
    dde4:	ldr	r0, [pc, #-2700]	; d360 <bt_compidtostr@@Base+0x38d8>
    dde8:	add	r0, pc, r0
    ddec:	bx	lr
    ddf0:	ldr	r0, [pc, #-2708]	; d364 <bt_compidtostr@@Base+0x38dc>
    ddf4:	add	r0, pc, r0
    ddf8:	bx	lr
    ddfc:	ldr	r0, [pc, #-2716]	; d368 <bt_compidtostr@@Base+0x38e0>
    de00:	add	r0, pc, r0
    de04:	bx	lr
    de08:	ldr	r0, [pc, #-2724]	; d36c <bt_compidtostr@@Base+0x38e4>
    de0c:	add	r0, pc, r0
    de10:	bx	lr
    de14:	ldr	r0, [pc, #-2732]	; d370 <bt_compidtostr@@Base+0x38e8>
    de18:	add	r0, pc, r0
    de1c:	bx	lr
    de20:	ldr	r0, [pc, #-2740]	; d374 <bt_compidtostr@@Base+0x38ec>
    de24:	add	r0, pc, r0
    de28:	bx	lr
    de2c:	ldr	r0, [pc, #-2748]	; d378 <bt_compidtostr@@Base+0x38f0>
    de30:	add	r0, pc, r0
    de34:	bx	lr
    de38:	ldr	r0, [pc, #-2756]	; d37c <bt_compidtostr@@Base+0x38f4>
    de3c:	add	r0, pc, r0
    de40:	bx	lr
    de44:	ldr	r0, [pc, #-2764]	; d380 <bt_compidtostr@@Base+0x38f8>
    de48:	add	r0, pc, r0
    de4c:	bx	lr
    de50:	ldr	r0, [pc, #-2772]	; d384 <bt_compidtostr@@Base+0x38fc>
    de54:	add	r0, pc, r0
    de58:	bx	lr
    de5c:	ldr	r0, [pc, #-2780]	; d388 <bt_compidtostr@@Base+0x3900>
    de60:	add	r0, pc, r0
    de64:	bx	lr
    de68:	ldr	r0, [pc, #-2788]	; d38c <bt_compidtostr@@Base+0x3904>
    de6c:	add	r0, pc, r0
    de70:	bx	lr
    de74:	ldr	r0, [pc, #-2796]	; d390 <bt_compidtostr@@Base+0x3908>
    de78:	add	r0, pc, r0
    de7c:	bx	lr
    de80:	ldr	r0, [pc, #-2804]	; d394 <bt_compidtostr@@Base+0x390c>
    de84:	add	r0, pc, r0
    de88:	bx	lr
    de8c:	ldr	r0, [pc, #-2812]	; d398 <bt_compidtostr@@Base+0x3910>
    de90:	add	r0, pc, r0
    de94:	bx	lr
    de98:	ldr	r0, [pc, #-2820]	; d39c <bt_compidtostr@@Base+0x3914>
    de9c:	add	r0, pc, r0
    dea0:	bx	lr
    dea4:	ldr	r0, [pc, #-2828]	; d3a0 <bt_compidtostr@@Base+0x3918>
    dea8:	add	r0, pc, r0
    deac:	bx	lr
    deb0:	ldr	r0, [pc, #-2836]	; d3a4 <bt_compidtostr@@Base+0x391c>
    deb4:	add	r0, pc, r0
    deb8:	bx	lr
    debc:	ldr	r0, [pc, #-2844]	; d3a8 <bt_compidtostr@@Base+0x3920>
    dec0:	add	r0, pc, r0
    dec4:	bx	lr
    dec8:	ldr	r0, [pc, #-2852]	; d3ac <bt_compidtostr@@Base+0x3924>
    decc:	add	r0, pc, r0
    ded0:	bx	lr
    ded4:	ldr	r0, [pc, #-2860]	; d3b0 <bt_compidtostr@@Base+0x3928>
    ded8:	add	r0, pc, r0
    dedc:	bx	lr
    dee0:	ldr	r0, [pc, #-2868]	; d3b4 <bt_compidtostr@@Base+0x392c>
    dee4:	add	r0, pc, r0
    dee8:	bx	lr
    deec:	ldr	r0, [pc, #-2876]	; d3b8 <bt_compidtostr@@Base+0x3930>
    def0:	add	r0, pc, r0
    def4:	bx	lr
    def8:	ldr	r0, [pc, #-2884]	; d3bc <bt_compidtostr@@Base+0x3934>
    defc:	add	r0, pc, r0
    df00:	bx	lr
    df04:	ldr	r0, [pc, #-2892]	; d3c0 <bt_compidtostr@@Base+0x3938>
    df08:	add	r0, pc, r0
    df0c:	bx	lr
    df10:	ldr	r0, [pc, #-2900]	; d3c4 <bt_compidtostr@@Base+0x393c>
    df14:	add	r0, pc, r0
    df18:	bx	lr
    df1c:	ldr	r0, [pc, #-2908]	; d3c8 <bt_compidtostr@@Base+0x3940>
    df20:	add	r0, pc, r0
    df24:	bx	lr
    df28:	ldr	r0, [pc, #-2916]	; d3cc <bt_compidtostr@@Base+0x3944>
    df2c:	add	r0, pc, r0
    df30:	bx	lr
    df34:	ldr	r0, [pc, #-2924]	; d3d0 <bt_compidtostr@@Base+0x3948>
    df38:	add	r0, pc, r0
    df3c:	bx	lr
    df40:	ldr	r0, [pc, #-2932]	; d3d4 <bt_compidtostr@@Base+0x394c>
    df44:	add	r0, pc, r0
    df48:	bx	lr
    df4c:	ldr	r0, [pc, #-2940]	; d3d8 <bt_compidtostr@@Base+0x3950>
    df50:	add	r0, pc, r0
    df54:	bx	lr
    df58:	ldr	r0, [pc, #-2948]	; d3dc <bt_compidtostr@@Base+0x3954>
    df5c:	add	r0, pc, r0
    df60:	bx	lr
    df64:	ldr	r0, [pc, #-2956]	; d3e0 <bt_compidtostr@@Base+0x3958>
    df68:	add	r0, pc, r0
    df6c:	bx	lr
    df70:	ldr	r0, [pc, #-2964]	; d3e4 <bt_compidtostr@@Base+0x395c>
    df74:	add	r0, pc, r0
    df78:	bx	lr
    df7c:	ldr	r0, [pc, #-2972]	; d3e8 <bt_compidtostr@@Base+0x3960>
    df80:	add	r0, pc, r0
    df84:	bx	lr
    df88:	ldr	r0, [pc, #-2980]	; d3ec <bt_compidtostr@@Base+0x3964>
    df8c:	add	r0, pc, r0
    df90:	bx	lr
    df94:	ldr	r0, [pc, #-2988]	; d3f0 <bt_compidtostr@@Base+0x3968>
    df98:	add	r0, pc, r0
    df9c:	bx	lr
    dfa0:	ldr	r0, [pc, #-2996]	; d3f4 <bt_compidtostr@@Base+0x396c>
    dfa4:	add	r0, pc, r0
    dfa8:	bx	lr
    dfac:	ldr	r0, [pc, #-3004]	; d3f8 <bt_compidtostr@@Base+0x3970>
    dfb0:	add	r0, pc, r0
    dfb4:	bx	lr
    dfb8:	ldr	r0, [pc, #-3012]	; d3fc <bt_compidtostr@@Base+0x3974>
    dfbc:	add	r0, pc, r0
    dfc0:	bx	lr
    dfc4:	ldr	r0, [pc, #-3020]	; d400 <bt_compidtostr@@Base+0x3978>
    dfc8:	add	r0, pc, r0
    dfcc:	bx	lr
    dfd0:	ldr	r0, [pc, #-3028]	; d404 <bt_compidtostr@@Base+0x397c>
    dfd4:	add	r0, pc, r0
    dfd8:	bx	lr
    dfdc:	ldr	r0, [pc, #-3036]	; d408 <bt_compidtostr@@Base+0x3980>
    dfe0:	add	r0, pc, r0
    dfe4:	bx	lr
    dfe8:	ldr	r0, [pc, #-3044]	; d40c <bt_compidtostr@@Base+0x3984>
    dfec:	add	r0, pc, r0
    dff0:	bx	lr
    dff4:	ldr	r0, [pc, #-3052]	; d410 <bt_compidtostr@@Base+0x3988>
    dff8:	add	r0, pc, r0
    dffc:	bx	lr
    e000:	ldr	r0, [pc, #-3060]	; d414 <bt_compidtostr@@Base+0x398c>
    e004:	add	r0, pc, r0
    e008:	bx	lr
    e00c:	ldr	r0, [pc, #-3068]	; d418 <bt_compidtostr@@Base+0x3990>
    e010:	add	r0, pc, r0
    e014:	bx	lr
    e018:	ldr	r0, [pc, #-3076]	; d41c <bt_compidtostr@@Base+0x3994>
    e01c:	add	r0, pc, r0
    e020:	bx	lr
    e024:	ldr	r0, [pc, #-3084]	; d420 <bt_compidtostr@@Base+0x3998>
    e028:	add	r0, pc, r0
    e02c:	bx	lr
    e030:	ldr	r0, [pc, #-3092]	; d424 <bt_compidtostr@@Base+0x399c>
    e034:	add	r0, pc, r0
    e038:	bx	lr
    e03c:	ldr	r0, [pc, #-3100]	; d428 <bt_compidtostr@@Base+0x39a0>
    e040:	add	r0, pc, r0
    e044:	bx	lr
    e048:	ldr	r0, [pc, #-3108]	; d42c <bt_compidtostr@@Base+0x39a4>
    e04c:	add	r0, pc, r0
    e050:	bx	lr
    e054:	ldr	r0, [pc, #-3116]	; d430 <bt_compidtostr@@Base+0x39a8>
    e058:	add	r0, pc, r0
    e05c:	bx	lr
    e060:	ldr	r0, [pc, #-3124]	; d434 <bt_compidtostr@@Base+0x39ac>
    e064:	add	r0, pc, r0
    e068:	bx	lr
    e06c:	ldr	r0, [pc, #-3132]	; d438 <bt_compidtostr@@Base+0x39b0>
    e070:	add	r0, pc, r0
    e074:	bx	lr
    e078:	ldr	r0, [pc, #-3140]	; d43c <bt_compidtostr@@Base+0x39b4>
    e07c:	add	r0, pc, r0
    e080:	bx	lr
    e084:	ldr	r0, [pc, #-3148]	; d440 <bt_compidtostr@@Base+0x39b8>
    e088:	add	r0, pc, r0
    e08c:	bx	lr
    e090:	ldr	r0, [pc, #-3156]	; d444 <bt_compidtostr@@Base+0x39bc>
    e094:	add	r0, pc, r0
    e098:	bx	lr
    e09c:	ldr	r0, [pc, #-3164]	; d448 <bt_compidtostr@@Base+0x39c0>
    e0a0:	add	r0, pc, r0
    e0a4:	bx	lr
    e0a8:	ldr	r0, [pc, #-3172]	; d44c <bt_compidtostr@@Base+0x39c4>
    e0ac:	add	r0, pc, r0
    e0b0:	bx	lr
    e0b4:	ldr	r0, [pc, #-3180]	; d450 <bt_compidtostr@@Base+0x39c8>
    e0b8:	add	r0, pc, r0
    e0bc:	bx	lr
    e0c0:	ldr	r0, [pc, #-3188]	; d454 <bt_compidtostr@@Base+0x39cc>
    e0c4:	add	r0, pc, r0
    e0c8:	bx	lr
    e0cc:	ldr	r0, [pc, #-3196]	; d458 <bt_compidtostr@@Base+0x39d0>
    e0d0:	add	r0, pc, r0
    e0d4:	bx	lr
    e0d8:	ldr	r0, [pc, #-3204]	; d45c <bt_compidtostr@@Base+0x39d4>
    e0dc:	add	r0, pc, r0
    e0e0:	bx	lr
    e0e4:	ldr	r0, [pc, #-3212]	; d460 <bt_compidtostr@@Base+0x39d8>
    e0e8:	add	r0, pc, r0
    e0ec:	bx	lr
    e0f0:	ldr	r0, [pc, #-3220]	; d464 <bt_compidtostr@@Base+0x39dc>
    e0f4:	add	r0, pc, r0
    e0f8:	bx	lr
    e0fc:	ldr	r0, [pc, #-3228]	; d468 <bt_compidtostr@@Base+0x39e0>
    e100:	add	r0, pc, r0
    e104:	bx	lr
    e108:	ldr	r0, [pc, #-3236]	; d46c <bt_compidtostr@@Base+0x39e4>
    e10c:	add	r0, pc, r0
    e110:	bx	lr
    e114:	ldr	r0, [pc, #-3244]	; d470 <bt_compidtostr@@Base+0x39e8>
    e118:	add	r0, pc, r0
    e11c:	bx	lr
    e120:	ldr	r0, [pc, #-3252]	; d474 <bt_compidtostr@@Base+0x39ec>
    e124:	add	r0, pc, r0
    e128:	bx	lr
    e12c:	ldr	r0, [pc, #-3260]	; d478 <bt_compidtostr@@Base+0x39f0>
    e130:	add	r0, pc, r0
    e134:	bx	lr
    e138:	ldr	r0, [pc, #-3268]	; d47c <bt_compidtostr@@Base+0x39f4>
    e13c:	add	r0, pc, r0
    e140:	bx	lr
    e144:	ldr	r0, [pc, #-3276]	; d480 <bt_compidtostr@@Base+0x39f8>
    e148:	add	r0, pc, r0
    e14c:	bx	lr
    e150:	ldr	r0, [pc, #-3284]	; d484 <bt_compidtostr@@Base+0x39fc>
    e154:	add	r0, pc, r0
    e158:	bx	lr
    e15c:	ldr	r0, [pc, #-3292]	; d488 <bt_compidtostr@@Base+0x3a00>
    e160:	add	r0, pc, r0
    e164:	bx	lr
    e168:	ldr	r0, [pc, #-3300]	; d48c <bt_compidtostr@@Base+0x3a04>
    e16c:	add	r0, pc, r0
    e170:	bx	lr
    e174:	ldr	r0, [pc, #-3308]	; d490 <bt_compidtostr@@Base+0x3a08>
    e178:	add	r0, pc, r0
    e17c:	bx	lr
    e180:	ldr	r0, [pc, #-3316]	; d494 <bt_compidtostr@@Base+0x3a0c>
    e184:	add	r0, pc, r0
    e188:	bx	lr
    e18c:	ldr	r0, [pc, #-3324]	; d498 <bt_compidtostr@@Base+0x3a10>
    e190:	add	r0, pc, r0
    e194:	bx	lr
    e198:	ldr	r0, [pc, #-3332]	; d49c <bt_compidtostr@@Base+0x3a14>
    e19c:	add	r0, pc, r0
    e1a0:	bx	lr
    e1a4:	ldr	r0, [pc, #-3340]	; d4a0 <bt_compidtostr@@Base+0x3a18>
    e1a8:	add	r0, pc, r0
    e1ac:	bx	lr
    e1b0:	ldr	r0, [pc, #-3348]	; d4a4 <bt_compidtostr@@Base+0x3a1c>
    e1b4:	add	r0, pc, r0
    e1b8:	bx	lr
    e1bc:	ldr	r0, [pc, #-3356]	; d4a8 <bt_compidtostr@@Base+0x3a20>
    e1c0:	add	r0, pc, r0
    e1c4:	bx	lr
    e1c8:	ldr	r0, [pc, #-3364]	; d4ac <bt_compidtostr@@Base+0x3a24>
    e1cc:	add	r0, pc, r0
    e1d0:	bx	lr
    e1d4:	ldr	r0, [pc, #-3372]	; d4b0 <bt_compidtostr@@Base+0x3a28>
    e1d8:	add	r0, pc, r0
    e1dc:	bx	lr
    e1e0:	ldr	r0, [pc, #-3380]	; d4b4 <bt_compidtostr@@Base+0x3a2c>
    e1e4:	add	r0, pc, r0
    e1e8:	bx	lr
    e1ec:	ldr	r0, [pc, #-3388]	; d4b8 <bt_compidtostr@@Base+0x3a30>
    e1f0:	add	r0, pc, r0
    e1f4:	bx	lr
    e1f8:	ldr	r0, [pc, #-3396]	; d4bc <bt_compidtostr@@Base+0x3a34>
    e1fc:	add	r0, pc, r0
    e200:	bx	lr
    e204:	ldr	r0, [pc, #-3404]	; d4c0 <bt_compidtostr@@Base+0x3a38>
    e208:	add	r0, pc, r0
    e20c:	bx	lr
    e210:	ldr	r0, [pc, #-3412]	; d4c4 <bt_compidtostr@@Base+0x3a3c>
    e214:	add	r0, pc, r0
    e218:	bx	lr
    e21c:	ldr	r0, [pc, #-3420]	; d4c8 <bt_compidtostr@@Base+0x3a40>
    e220:	add	r0, pc, r0
    e224:	bx	lr
    e228:	ldr	r0, [pc, #-3428]	; d4cc <bt_compidtostr@@Base+0x3a44>
    e22c:	add	r0, pc, r0
    e230:	bx	lr
    e234:	ldr	r0, [pc, #-3436]	; d4d0 <bt_compidtostr@@Base+0x3a48>
    e238:	add	r0, pc, r0
    e23c:	bx	lr
    e240:	ldr	r0, [pc, #-3444]	; d4d4 <bt_compidtostr@@Base+0x3a4c>
    e244:	add	r0, pc, r0
    e248:	bx	lr
    e24c:	ldr	r0, [pc, #-3452]	; d4d8 <bt_compidtostr@@Base+0x3a50>
    e250:	add	r0, pc, r0
    e254:	bx	lr
    e258:	ldr	r0, [pc, #-3460]	; d4dc <bt_compidtostr@@Base+0x3a54>
    e25c:	add	r0, pc, r0
    e260:	bx	lr
    e264:	ldr	r0, [pc, #-3468]	; d4e0 <bt_compidtostr@@Base+0x3a58>
    e268:	add	r0, pc, r0
    e26c:	bx	lr
    e270:	ldr	r0, [pc, #-3476]	; d4e4 <bt_compidtostr@@Base+0x3a5c>
    e274:	add	r0, pc, r0
    e278:	bx	lr
    e27c:	ldr	r0, [pc, #-3484]	; d4e8 <bt_compidtostr@@Base+0x3a60>
    e280:	add	r0, pc, r0
    e284:	bx	lr
    e288:	ldr	r0, [pc, #-3492]	; d4ec <bt_compidtostr@@Base+0x3a64>
    e28c:	add	r0, pc, r0
    e290:	bx	lr
    e294:	ldr	r0, [pc, #-3500]	; d4f0 <bt_compidtostr@@Base+0x3a68>
    e298:	add	r0, pc, r0
    e29c:	bx	lr
    e2a0:	ldr	r0, [pc, #-3508]	; d4f4 <bt_compidtostr@@Base+0x3a6c>
    e2a4:	add	r0, pc, r0
    e2a8:	bx	lr
    e2ac:	ldr	r0, [pc, #-3516]	; d4f8 <bt_compidtostr@@Base+0x3a70>
    e2b0:	add	r0, pc, r0
    e2b4:	bx	lr
    e2b8:	ldr	r0, [pc, #-3524]	; d4fc <bt_compidtostr@@Base+0x3a74>
    e2bc:	add	r0, pc, r0
    e2c0:	bx	lr
    e2c4:	ldr	r0, [pc, #-3532]	; d500 <bt_compidtostr@@Base+0x3a78>
    e2c8:	add	r0, pc, r0
    e2cc:	bx	lr
    e2d0:	ldr	r0, [pc, #-3540]	; d504 <bt_compidtostr@@Base+0x3a7c>
    e2d4:	add	r0, pc, r0
    e2d8:	bx	lr
    e2dc:	ldr	r0, [pc, #-3548]	; d508 <bt_compidtostr@@Base+0x3a80>
    e2e0:	add	r0, pc, r0
    e2e4:	bx	lr
    e2e8:	ldr	r0, [pc, #-3556]	; d50c <bt_compidtostr@@Base+0x3a84>
    e2ec:	add	r0, pc, r0
    e2f0:	bx	lr
    e2f4:	ldr	r0, [pc, #-3564]	; d510 <bt_compidtostr@@Base+0x3a88>
    e2f8:	add	r0, pc, r0
    e2fc:	bx	lr
    e300:	ldr	r0, [pc, #-3572]	; d514 <bt_compidtostr@@Base+0x3a8c>
    e304:	add	r0, pc, r0
    e308:	bx	lr
    e30c:	ldr	r0, [pc, #-3580]	; d518 <bt_compidtostr@@Base+0x3a90>
    e310:	add	r0, pc, r0
    e314:	bx	lr
    e318:	ldr	r0, [pc, #-3588]	; d51c <bt_compidtostr@@Base+0x3a94>
    e31c:	add	r0, pc, r0
    e320:	bx	lr
    e324:	ldr	r0, [pc, #-3596]	; d520 <bt_compidtostr@@Base+0x3a98>
    e328:	add	r0, pc, r0
    e32c:	bx	lr
    e330:	ldr	r0, [pc, #-3604]	; d524 <bt_compidtostr@@Base+0x3a9c>
    e334:	add	r0, pc, r0
    e338:	bx	lr
    e33c:	ldr	r0, [pc, #-3612]	; d528 <bt_compidtostr@@Base+0x3aa0>
    e340:	add	r0, pc, r0
    e344:	bx	lr
    e348:	ldr	r0, [pc, #-3620]	; d52c <bt_compidtostr@@Base+0x3aa4>
    e34c:	add	r0, pc, r0
    e350:	bx	lr
    e354:	ldr	r0, [pc, #-3628]	; d530 <bt_compidtostr@@Base+0x3aa8>
    e358:	add	r0, pc, r0
    e35c:	bx	lr
    e360:	ldr	r0, [pc, #-3636]	; d534 <bt_compidtostr@@Base+0x3aac>
    e364:	add	r0, pc, r0
    e368:	bx	lr
    e36c:	ldr	r0, [pc, #-3644]	; d538 <bt_compidtostr@@Base+0x3ab0>
    e370:	add	r0, pc, r0
    e374:	bx	lr
    e378:	ldr	r0, [pc, #-3652]	; d53c <bt_compidtostr@@Base+0x3ab4>
    e37c:	add	r0, pc, r0
    e380:	bx	lr
    e384:	ldr	r0, [pc, #-3660]	; d540 <bt_compidtostr@@Base+0x3ab8>
    e388:	add	r0, pc, r0
    e38c:	bx	lr
    e390:	ldr	r0, [pc, #-3668]	; d544 <bt_compidtostr@@Base+0x3abc>
    e394:	add	r0, pc, r0
    e398:	bx	lr
    e39c:	ldr	r0, [pc, #-3676]	; d548 <bt_compidtostr@@Base+0x3ac0>
    e3a0:	add	r0, pc, r0
    e3a4:	bx	lr
    e3a8:	ldr	r0, [pc, #-3684]	; d54c <bt_compidtostr@@Base+0x3ac4>
    e3ac:	add	r0, pc, r0
    e3b0:	bx	lr
    e3b4:	ldr	r0, [pc, #-3692]	; d550 <bt_compidtostr@@Base+0x3ac8>
    e3b8:	add	r0, pc, r0
    e3bc:	bx	lr
    e3c0:	ldr	r0, [pc, #-3700]	; d554 <bt_compidtostr@@Base+0x3acc>
    e3c4:	add	r0, pc, r0
    e3c8:	bx	lr
    e3cc:	ldr	r0, [pc, #-3708]	; d558 <bt_compidtostr@@Base+0x3ad0>
    e3d0:	add	r0, pc, r0
    e3d4:	bx	lr
    e3d8:	ldr	r0, [pc, #-3716]	; d55c <bt_compidtostr@@Base+0x3ad4>
    e3dc:	add	r0, pc, r0
    e3e0:	bx	lr
    e3e4:	ldr	r0, [pc, #-3724]	; d560 <bt_compidtostr@@Base+0x3ad8>
    e3e8:	add	r0, pc, r0
    e3ec:	bx	lr
    e3f0:	ldr	r0, [pc, #-3732]	; d564 <bt_compidtostr@@Base+0x3adc>
    e3f4:	add	r0, pc, r0
    e3f8:	bx	lr
    e3fc:	ldr	r0, [pc, #-3740]	; d568 <bt_compidtostr@@Base+0x3ae0>
    e400:	add	r0, pc, r0
    e404:	bx	lr
    e408:	ldr	r0, [pc, #-3748]	; d56c <bt_compidtostr@@Base+0x3ae4>
    e40c:	add	r0, pc, r0
    e410:	bx	lr
    e414:	ldr	r0, [pc, #-3756]	; d570 <bt_compidtostr@@Base+0x3ae8>
    e418:	add	r0, pc, r0
    e41c:	bx	lr
    e420:	ldr	r0, [pc, #-3764]	; d574 <bt_compidtostr@@Base+0x3aec>
    e424:	add	r0, pc, r0
    e428:	bx	lr
    e42c:	ldr	r0, [pc, #-3772]	; d578 <bt_compidtostr@@Base+0x3af0>
    e430:	add	r0, pc, r0
    e434:	bx	lr
    e438:	ldr	r0, [pc, #-3780]	; d57c <bt_compidtostr@@Base+0x3af4>
    e43c:	add	r0, pc, r0
    e440:	bx	lr
    e444:	ldr	r0, [pc, #-3788]	; d580 <bt_compidtostr@@Base+0x3af8>
    e448:	add	r0, pc, r0
    e44c:	bx	lr
    e450:	ldr	r0, [pc, #-3796]	; d584 <bt_compidtostr@@Base+0x3afc>
    e454:	add	r0, pc, r0
    e458:	bx	lr
    e45c:	ldr	r0, [pc, #-3804]	; d588 <bt_compidtostr@@Base+0x3b00>
    e460:	add	r0, pc, r0
    e464:	bx	lr
    e468:	ldr	r0, [pc, #-3812]	; d58c <bt_compidtostr@@Base+0x3b04>
    e46c:	add	r0, pc, r0
    e470:	bx	lr
    e474:	ldr	r0, [pc, #-3820]	; d590 <bt_compidtostr@@Base+0x3b08>
    e478:	add	r0, pc, r0
    e47c:	bx	lr
    e480:	ldr	r0, [pc, #-3828]	; d594 <bt_compidtostr@@Base+0x3b0c>
    e484:	add	r0, pc, r0
    e488:	bx	lr
    e48c:	ldr	r0, [pc, #-3836]	; d598 <bt_compidtostr@@Base+0x3b10>
    e490:	add	r0, pc, r0
    e494:	bx	lr
    e498:	ldr	r0, [pc, #-3844]	; d59c <bt_compidtostr@@Base+0x3b14>
    e49c:	add	r0, pc, r0
    e4a0:	bx	lr
    e4a4:	ldr	r0, [pc, #-3852]	; d5a0 <bt_compidtostr@@Base+0x3b18>
    e4a8:	add	r0, pc, r0
    e4ac:	bx	lr
    e4b0:	ldr	r0, [pc, #-3860]	; d5a4 <bt_compidtostr@@Base+0x3b1c>
    e4b4:	add	r0, pc, r0
    e4b8:	bx	lr
    e4bc:	ldr	r0, [pc, #-3868]	; d5a8 <bt_compidtostr@@Base+0x3b20>
    e4c0:	add	r0, pc, r0
    e4c4:	bx	lr
    e4c8:	ldr	r0, [pc, #-3876]	; d5ac <bt_compidtostr@@Base+0x3b24>
    e4cc:	add	r0, pc, r0
    e4d0:	bx	lr
    e4d4:	ldr	r0, [pc, #-3884]	; d5b0 <bt_compidtostr@@Base+0x3b28>
    e4d8:	add	r0, pc, r0
    e4dc:	bx	lr
    e4e0:	ldr	r0, [pc, #-3892]	; d5b4 <bt_compidtostr@@Base+0x3b2c>
    e4e4:	add	r0, pc, r0
    e4e8:	bx	lr
    e4ec:	ldr	r0, [pc, #-3900]	; d5b8 <bt_compidtostr@@Base+0x3b30>
    e4f0:	add	r0, pc, r0
    e4f4:	bx	lr
    e4f8:	ldr	r0, [pc, #-3908]	; d5bc <bt_compidtostr@@Base+0x3b34>
    e4fc:	add	r0, pc, r0
    e500:	bx	lr
    e504:	ldr	r0, [pc, #-3916]	; d5c0 <bt_compidtostr@@Base+0x3b38>
    e508:	add	r0, pc, r0
    e50c:	bx	lr
    e510:	ldr	r0, [pc, #-3924]	; d5c4 <bt_compidtostr@@Base+0x3b3c>
    e514:	add	r0, pc, r0
    e518:	bx	lr
    e51c:	ldr	r0, [pc, #-3932]	; d5c8 <bt_compidtostr@@Base+0x3b40>
    e520:	add	r0, pc, r0
    e524:	bx	lr
    e528:	ldr	r0, [pc, #-3940]	; d5cc <bt_compidtostr@@Base+0x3b44>
    e52c:	add	r0, pc, r0
    e530:	bx	lr
    e534:	ldr	r0, [pc, #-3948]	; d5d0 <bt_compidtostr@@Base+0x3b48>
    e538:	add	r0, pc, r0
    e53c:	bx	lr
    e540:	ldr	r0, [pc, #-3956]	; d5d4 <bt_compidtostr@@Base+0x3b4c>
    e544:	add	r0, pc, r0
    e548:	bx	lr
    e54c:	ldr	r0, [pc, #-3964]	; d5d8 <bt_compidtostr@@Base+0x3b50>
    e550:	add	r0, pc, r0
    e554:	bx	lr
    e558:	ldr	r0, [pc, #-3972]	; d5dc <bt_compidtostr@@Base+0x3b54>
    e55c:	add	r0, pc, r0
    e560:	bx	lr
    e564:	ldr	r0, [pc, #-3980]	; d5e0 <bt_compidtostr@@Base+0x3b58>
    e568:	add	r0, pc, r0
    e56c:	bx	lr
    e570:	ldr	r0, [pc, #-3988]	; d5e4 <bt_compidtostr@@Base+0x3b5c>
    e574:	add	r0, pc, r0
    e578:	bx	lr
    e57c:	ldr	r0, [pc, #-3996]	; d5e8 <bt_compidtostr@@Base+0x3b60>
    e580:	add	r0, pc, r0
    e584:	bx	lr
    e588:	ldr	r0, [pc, #-4004]	; d5ec <bt_compidtostr@@Base+0x3b64>
    e58c:	add	r0, pc, r0
    e590:	bx	lr
    e594:	ldr	r0, [pc, #-4012]	; d5f0 <bt_compidtostr@@Base+0x3b68>
    e598:	add	r0, pc, r0
    e59c:	bx	lr
    e5a0:	ldr	r0, [pc, #-4020]	; d5f4 <bt_compidtostr@@Base+0x3b6c>
    e5a4:	add	r0, pc, r0
    e5a8:	bx	lr
    e5ac:	ldr	r0, [pc, #-4028]	; d5f8 <bt_compidtostr@@Base+0x3b70>
    e5b0:	add	r0, pc, r0
    e5b4:	bx	lr
    e5b8:	ldr	r0, [pc, #-4036]	; d5fc <bt_compidtostr@@Base+0x3b74>
    e5bc:	add	r0, pc, r0
    e5c0:	bx	lr
    e5c4:	ldr	r0, [pc, #-4044]	; d600 <bt_compidtostr@@Base+0x3b78>
    e5c8:	add	r0, pc, r0
    e5cc:	bx	lr
    e5d0:	ldr	r0, [pc, #-4052]	; d604 <bt_compidtostr@@Base+0x3b7c>
    e5d4:	add	r0, pc, r0
    e5d8:	bx	lr
    e5dc:	ldr	r0, [pc, #-4060]	; d608 <bt_compidtostr@@Base+0x3b80>
    e5e0:	add	r0, pc, r0
    e5e4:	bx	lr
    e5e8:	ldr	r0, [pc, #-4068]	; d60c <bt_compidtostr@@Base+0x3b84>
    e5ec:	add	r0, pc, r0
    e5f0:	bx	lr
    e5f4:	ldr	r0, [pc, #-4076]	; d610 <bt_compidtostr@@Base+0x3b88>
    e5f8:	add	r0, pc, r0
    e5fc:	bx	lr
    e600:	ldr	r0, [pc, #-4084]	; d614 <bt_compidtostr@@Base+0x3b8c>
    e604:	add	r0, pc, r0
    e608:	bx	lr
    e60c:	ldr	r0, [pc, #-4092]	; d618 <bt_compidtostr@@Base+0x3b90>
    e610:	add	r0, pc, r0
    e614:	bx	lr
    e618:	ldr	r0, [pc, #4084]	; f614 <bt_compidtostr@@Base+0x5b8c>
    e61c:	add	r0, pc, r0
    e620:	bx	lr
    e624:	ldr	r0, [pc, #4076]	; f618 <bt_compidtostr@@Base+0x5b90>
    e628:	add	r0, pc, r0
    e62c:	bx	lr
    e630:	ldr	r0, [pc, #4068]	; f61c <bt_compidtostr@@Base+0x5b94>
    e634:	add	r0, pc, r0
    e638:	bx	lr
    e63c:	ldr	r0, [pc, #4060]	; f620 <bt_compidtostr@@Base+0x5b98>
    e640:	add	r0, pc, r0
    e644:	bx	lr
    e648:	ldr	r0, [pc, #4052]	; f624 <bt_compidtostr@@Base+0x5b9c>
    e64c:	add	r0, pc, r0
    e650:	bx	lr
    e654:	ldr	r0, [pc, #4044]	; f628 <bt_compidtostr@@Base+0x5ba0>
    e658:	add	r0, pc, r0
    e65c:	bx	lr
    e660:	ldr	r0, [pc, #4036]	; f62c <bt_compidtostr@@Base+0x5ba4>
    e664:	add	r0, pc, r0
    e668:	bx	lr
    e66c:	ldr	r0, [pc, #4028]	; f630 <bt_compidtostr@@Base+0x5ba8>
    e670:	add	r0, pc, r0
    e674:	bx	lr
    e678:	ldr	r0, [pc, #4020]	; f634 <bt_compidtostr@@Base+0x5bac>
    e67c:	add	r0, pc, r0
    e680:	bx	lr
    e684:	ldr	r0, [pc, #4012]	; f638 <bt_compidtostr@@Base+0x5bb0>
    e688:	add	r0, pc, r0
    e68c:	bx	lr
    e690:	ldr	r0, [pc, #4004]	; f63c <bt_compidtostr@@Base+0x5bb4>
    e694:	add	r0, pc, r0
    e698:	bx	lr
    e69c:	ldr	r0, [pc, #3996]	; f640 <bt_compidtostr@@Base+0x5bb8>
    e6a0:	add	r0, pc, r0
    e6a4:	bx	lr
    e6a8:	ldr	r0, [pc, #3988]	; f644 <bt_compidtostr@@Base+0x5bbc>
    e6ac:	add	r0, pc, r0
    e6b0:	bx	lr
    e6b4:	ldr	r0, [pc, #3980]	; f648 <bt_compidtostr@@Base+0x5bc0>
    e6b8:	add	r0, pc, r0
    e6bc:	bx	lr
    e6c0:	ldr	r0, [pc, #3972]	; f64c <bt_compidtostr@@Base+0x5bc4>
    e6c4:	add	r0, pc, r0
    e6c8:	bx	lr
    e6cc:	ldr	r0, [pc, #3964]	; f650 <bt_compidtostr@@Base+0x5bc8>
    e6d0:	add	r0, pc, r0
    e6d4:	bx	lr
    e6d8:	ldr	r0, [pc, #3956]	; f654 <bt_compidtostr@@Base+0x5bcc>
    e6dc:	add	r0, pc, r0
    e6e0:	bx	lr
    e6e4:	ldr	r0, [pc, #3948]	; f658 <bt_compidtostr@@Base+0x5bd0>
    e6e8:	add	r0, pc, r0
    e6ec:	bx	lr
    e6f0:	ldr	r0, [pc, #3940]	; f65c <bt_compidtostr@@Base+0x5bd4>
    e6f4:	add	r0, pc, r0
    e6f8:	bx	lr
    e6fc:	ldr	r0, [pc, #3932]	; f660 <bt_compidtostr@@Base+0x5bd8>
    e700:	add	r0, pc, r0
    e704:	bx	lr
    e708:	ldr	r0, [pc, #3924]	; f664 <bt_compidtostr@@Base+0x5bdc>
    e70c:	add	r0, pc, r0
    e710:	bx	lr
    e714:	ldr	r0, [pc, #3916]	; f668 <bt_compidtostr@@Base+0x5be0>
    e718:	add	r0, pc, r0
    e71c:	bx	lr
    e720:	ldr	r0, [pc, #3908]	; f66c <bt_compidtostr@@Base+0x5be4>
    e724:	add	r0, pc, r0
    e728:	bx	lr
    e72c:	ldr	r0, [pc, #3900]	; f670 <bt_compidtostr@@Base+0x5be8>
    e730:	add	r0, pc, r0
    e734:	bx	lr
    e738:	ldr	r0, [pc, #3892]	; f674 <bt_compidtostr@@Base+0x5bec>
    e73c:	add	r0, pc, r0
    e740:	bx	lr
    e744:	ldr	r0, [pc, #3884]	; f678 <bt_compidtostr@@Base+0x5bf0>
    e748:	add	r0, pc, r0
    e74c:	bx	lr
    e750:	ldr	r0, [pc, #3876]	; f67c <bt_compidtostr@@Base+0x5bf4>
    e754:	add	r0, pc, r0
    e758:	bx	lr
    e75c:	ldr	r0, [pc, #3868]	; f680 <bt_compidtostr@@Base+0x5bf8>
    e760:	add	r0, pc, r0
    e764:	bx	lr
    e768:	ldr	r0, [pc, #3860]	; f684 <bt_compidtostr@@Base+0x5bfc>
    e76c:	add	r0, pc, r0
    e770:	bx	lr
    e774:	ldr	r0, [pc, #3852]	; f688 <bt_compidtostr@@Base+0x5c00>
    e778:	add	r0, pc, r0
    e77c:	bx	lr
    e780:	ldr	r0, [pc, #3844]	; f68c <bt_compidtostr@@Base+0x5c04>
    e784:	add	r0, pc, r0
    e788:	bx	lr
    e78c:	ldr	r0, [pc, #3836]	; f690 <bt_compidtostr@@Base+0x5c08>
    e790:	add	r0, pc, r0
    e794:	bx	lr
    e798:	ldr	r0, [pc, #3828]	; f694 <bt_compidtostr@@Base+0x5c0c>
    e79c:	add	r0, pc, r0
    e7a0:	bx	lr
    e7a4:	ldr	r0, [pc, #3820]	; f698 <bt_compidtostr@@Base+0x5c10>
    e7a8:	add	r0, pc, r0
    e7ac:	bx	lr
    e7b0:	ldr	r0, [pc, #3812]	; f69c <bt_compidtostr@@Base+0x5c14>
    e7b4:	add	r0, pc, r0
    e7b8:	bx	lr
    e7bc:	ldr	r0, [pc, #3804]	; f6a0 <bt_compidtostr@@Base+0x5c18>
    e7c0:	add	r0, pc, r0
    e7c4:	bx	lr
    e7c8:	ldr	r0, [pc, #3796]	; f6a4 <bt_compidtostr@@Base+0x5c1c>
    e7cc:	add	r0, pc, r0
    e7d0:	bx	lr
    e7d4:	ldr	r0, [pc, #3788]	; f6a8 <bt_compidtostr@@Base+0x5c20>
    e7d8:	add	r0, pc, r0
    e7dc:	bx	lr
    e7e0:	ldr	r0, [pc, #3780]	; f6ac <bt_compidtostr@@Base+0x5c24>
    e7e4:	add	r0, pc, r0
    e7e8:	bx	lr
    e7ec:	ldr	r0, [pc, #3772]	; f6b0 <bt_compidtostr@@Base+0x5c28>
    e7f0:	add	r0, pc, r0
    e7f4:	bx	lr
    e7f8:	ldr	r0, [pc, #3764]	; f6b4 <bt_compidtostr@@Base+0x5c2c>
    e7fc:	add	r0, pc, r0
    e800:	bx	lr
    e804:	ldr	r0, [pc, #3756]	; f6b8 <bt_compidtostr@@Base+0x5c30>
    e808:	add	r0, pc, r0
    e80c:	bx	lr
    e810:	ldr	r0, [pc, #3748]	; f6bc <bt_compidtostr@@Base+0x5c34>
    e814:	add	r0, pc, r0
    e818:	bx	lr
    e81c:	ldr	r0, [pc, #3740]	; f6c0 <bt_compidtostr@@Base+0x5c38>
    e820:	add	r0, pc, r0
    e824:	bx	lr
    e828:	ldr	r0, [pc, #3732]	; f6c4 <bt_compidtostr@@Base+0x5c3c>
    e82c:	add	r0, pc, r0
    e830:	bx	lr
    e834:	ldr	r0, [pc, #3724]	; f6c8 <bt_compidtostr@@Base+0x5c40>
    e838:	add	r0, pc, r0
    e83c:	bx	lr
    e840:	ldr	r0, [pc, #3716]	; f6cc <bt_compidtostr@@Base+0x5c44>
    e844:	add	r0, pc, r0
    e848:	bx	lr
    e84c:	ldr	r0, [pc, #3708]	; f6d0 <bt_compidtostr@@Base+0x5c48>
    e850:	add	r0, pc, r0
    e854:	bx	lr
    e858:	ldr	r0, [pc, #3700]	; f6d4 <bt_compidtostr@@Base+0x5c4c>
    e85c:	add	r0, pc, r0
    e860:	bx	lr
    e864:	ldr	r0, [pc, #3692]	; f6d8 <bt_compidtostr@@Base+0x5c50>
    e868:	add	r0, pc, r0
    e86c:	bx	lr
    e870:	ldr	r0, [pc, #3684]	; f6dc <bt_compidtostr@@Base+0x5c54>
    e874:	add	r0, pc, r0
    e878:	bx	lr
    e87c:	ldr	r0, [pc, #3676]	; f6e0 <bt_compidtostr@@Base+0x5c58>
    e880:	add	r0, pc, r0
    e884:	bx	lr
    e888:	ldr	r0, [pc, #3668]	; f6e4 <bt_compidtostr@@Base+0x5c5c>
    e88c:	add	r0, pc, r0
    e890:	bx	lr
    e894:	ldr	r0, [pc, #3660]	; f6e8 <bt_compidtostr@@Base+0x5c60>
    e898:	add	r0, pc, r0
    e89c:	bx	lr
    e8a0:	ldr	r0, [pc, #3652]	; f6ec <bt_compidtostr@@Base+0x5c64>
    e8a4:	add	r0, pc, r0
    e8a8:	bx	lr
    e8ac:	ldr	r0, [pc, #3644]	; f6f0 <bt_compidtostr@@Base+0x5c68>
    e8b0:	add	r0, pc, r0
    e8b4:	bx	lr
    e8b8:	ldr	r0, [pc, #3636]	; f6f4 <bt_compidtostr@@Base+0x5c6c>
    e8bc:	add	r0, pc, r0
    e8c0:	bx	lr
    e8c4:	ldr	r0, [pc, #3628]	; f6f8 <bt_compidtostr@@Base+0x5c70>
    e8c8:	add	r0, pc, r0
    e8cc:	bx	lr
    e8d0:	ldr	r0, [pc, #3620]	; f6fc <bt_compidtostr@@Base+0x5c74>
    e8d4:	add	r0, pc, r0
    e8d8:	bx	lr
    e8dc:	ldr	r0, [pc, #3612]	; f700 <bt_compidtostr@@Base+0x5c78>
    e8e0:	add	r0, pc, r0
    e8e4:	bx	lr
    e8e8:	ldr	r0, [pc, #3604]	; f704 <bt_compidtostr@@Base+0x5c7c>
    e8ec:	add	r0, pc, r0
    e8f0:	bx	lr
    e8f4:	ldr	r0, [pc, #3596]	; f708 <bt_compidtostr@@Base+0x5c80>
    e8f8:	add	r0, pc, r0
    e8fc:	bx	lr
    e900:	ldr	r0, [pc, #3588]	; f70c <bt_compidtostr@@Base+0x5c84>
    e904:	add	r0, pc, r0
    e908:	bx	lr
    e90c:	ldr	r0, [pc, #3580]	; f710 <bt_compidtostr@@Base+0x5c88>
    e910:	add	r0, pc, r0
    e914:	bx	lr
    e918:	ldr	r0, [pc, #3572]	; f714 <bt_compidtostr@@Base+0x5c8c>
    e91c:	add	r0, pc, r0
    e920:	bx	lr
    e924:	ldr	r0, [pc, #3564]	; f718 <bt_compidtostr@@Base+0x5c90>
    e928:	add	r0, pc, r0
    e92c:	bx	lr
    e930:	ldr	r0, [pc, #3556]	; f71c <bt_compidtostr@@Base+0x5c94>
    e934:	add	r0, pc, r0
    e938:	bx	lr
    e93c:	ldr	r0, [pc, #3548]	; f720 <bt_compidtostr@@Base+0x5c98>
    e940:	add	r0, pc, r0
    e944:	bx	lr
    e948:	ldr	r0, [pc, #3540]	; f724 <bt_compidtostr@@Base+0x5c9c>
    e94c:	add	r0, pc, r0
    e950:	bx	lr
    e954:	ldr	r0, [pc, #3532]	; f728 <bt_compidtostr@@Base+0x5ca0>
    e958:	add	r0, pc, r0
    e95c:	bx	lr
    e960:	ldr	r0, [pc, #3524]	; f72c <bt_compidtostr@@Base+0x5ca4>
    e964:	add	r0, pc, r0
    e968:	bx	lr
    e96c:	ldr	r0, [pc, #3516]	; f730 <bt_compidtostr@@Base+0x5ca8>
    e970:	add	r0, pc, r0
    e974:	bx	lr
    e978:	ldr	r0, [pc, #3508]	; f734 <bt_compidtostr@@Base+0x5cac>
    e97c:	add	r0, pc, r0
    e980:	bx	lr
    e984:	ldr	r0, [pc, #3500]	; f738 <bt_compidtostr@@Base+0x5cb0>
    e988:	add	r0, pc, r0
    e98c:	bx	lr
    e990:	ldr	r0, [pc, #3492]	; f73c <bt_compidtostr@@Base+0x5cb4>
    e994:	add	r0, pc, r0
    e998:	bx	lr
    e99c:	ldr	r0, [pc, #3484]	; f740 <bt_compidtostr@@Base+0x5cb8>
    e9a0:	add	r0, pc, r0
    e9a4:	bx	lr
    e9a8:	ldr	r0, [pc, #3476]	; f744 <bt_compidtostr@@Base+0x5cbc>
    e9ac:	add	r0, pc, r0
    e9b0:	bx	lr
    e9b4:	ldr	r0, [pc, #3468]	; f748 <bt_compidtostr@@Base+0x5cc0>
    e9b8:	add	r0, pc, r0
    e9bc:	bx	lr
    e9c0:	ldr	r0, [pc, #3460]	; f74c <bt_compidtostr@@Base+0x5cc4>
    e9c4:	add	r0, pc, r0
    e9c8:	bx	lr
    e9cc:	ldr	r0, [pc, #3452]	; f750 <bt_compidtostr@@Base+0x5cc8>
    e9d0:	add	r0, pc, r0
    e9d4:	bx	lr
    e9d8:	ldr	r0, [pc, #3444]	; f754 <bt_compidtostr@@Base+0x5ccc>
    e9dc:	add	r0, pc, r0
    e9e0:	bx	lr
    e9e4:	ldr	r0, [pc, #3436]	; f758 <bt_compidtostr@@Base+0x5cd0>
    e9e8:	add	r0, pc, r0
    e9ec:	bx	lr
    e9f0:	ldr	r0, [pc, #3428]	; f75c <bt_compidtostr@@Base+0x5cd4>
    e9f4:	add	r0, pc, r0
    e9f8:	bx	lr
    e9fc:	ldr	r0, [pc, #3420]	; f760 <bt_compidtostr@@Base+0x5cd8>
    ea00:	add	r0, pc, r0
    ea04:	bx	lr
    ea08:	ldr	r0, [pc, #3412]	; f764 <bt_compidtostr@@Base+0x5cdc>
    ea0c:	add	r0, pc, r0
    ea10:	bx	lr
    ea14:	ldr	r0, [pc, #3404]	; f768 <bt_compidtostr@@Base+0x5ce0>
    ea18:	add	r0, pc, r0
    ea1c:	bx	lr
    ea20:	ldr	r0, [pc, #3396]	; f76c <bt_compidtostr@@Base+0x5ce4>
    ea24:	add	r0, pc, r0
    ea28:	bx	lr
    ea2c:	ldr	r0, [pc, #3388]	; f770 <bt_compidtostr@@Base+0x5ce8>
    ea30:	add	r0, pc, r0
    ea34:	bx	lr
    ea38:	ldr	r0, [pc, #3380]	; f774 <bt_compidtostr@@Base+0x5cec>
    ea3c:	add	r0, pc, r0
    ea40:	bx	lr
    ea44:	ldr	r0, [pc, #3372]	; f778 <bt_compidtostr@@Base+0x5cf0>
    ea48:	add	r0, pc, r0
    ea4c:	bx	lr
    ea50:	ldr	r0, [pc, #3364]	; f77c <bt_compidtostr@@Base+0x5cf4>
    ea54:	add	r0, pc, r0
    ea58:	bx	lr
    ea5c:	ldr	r0, [pc, #3356]	; f780 <bt_compidtostr@@Base+0x5cf8>
    ea60:	add	r0, pc, r0
    ea64:	bx	lr
    ea68:	ldr	r0, [pc, #3348]	; f784 <bt_compidtostr@@Base+0x5cfc>
    ea6c:	add	r0, pc, r0
    ea70:	bx	lr
    ea74:	ldr	r0, [pc, #3340]	; f788 <bt_compidtostr@@Base+0x5d00>
    ea78:	add	r0, pc, r0
    ea7c:	bx	lr
    ea80:	ldr	r0, [pc, #3332]	; f78c <bt_compidtostr@@Base+0x5d04>
    ea84:	add	r0, pc, r0
    ea88:	bx	lr
    ea8c:	ldr	r0, [pc, #3324]	; f790 <bt_compidtostr@@Base+0x5d08>
    ea90:	add	r0, pc, r0
    ea94:	bx	lr
    ea98:	ldr	r0, [pc, #3316]	; f794 <bt_compidtostr@@Base+0x5d0c>
    ea9c:	add	r0, pc, r0
    eaa0:	bx	lr
    eaa4:	ldr	r0, [pc, #3308]	; f798 <bt_compidtostr@@Base+0x5d10>
    eaa8:	add	r0, pc, r0
    eaac:	bx	lr
    eab0:	ldr	r0, [pc, #3300]	; f79c <bt_compidtostr@@Base+0x5d14>
    eab4:	add	r0, pc, r0
    eab8:	bx	lr
    eabc:	ldr	r0, [pc, #3292]	; f7a0 <bt_compidtostr@@Base+0x5d18>
    eac0:	add	r0, pc, r0
    eac4:	bx	lr
    eac8:	ldr	r0, [pc, #3284]	; f7a4 <bt_compidtostr@@Base+0x5d1c>
    eacc:	add	r0, pc, r0
    ead0:	bx	lr
    ead4:	ldr	r0, [pc, #3276]	; f7a8 <bt_compidtostr@@Base+0x5d20>
    ead8:	add	r0, pc, r0
    eadc:	bx	lr
    eae0:	ldr	r0, [pc, #3268]	; f7ac <bt_compidtostr@@Base+0x5d24>
    eae4:	add	r0, pc, r0
    eae8:	bx	lr
    eaec:	ldr	r0, [pc, #3260]	; f7b0 <bt_compidtostr@@Base+0x5d28>
    eaf0:	add	r0, pc, r0
    eaf4:	bx	lr
    eaf8:	ldr	r0, [pc, #3252]	; f7b4 <bt_compidtostr@@Base+0x5d2c>
    eafc:	add	r0, pc, r0
    eb00:	bx	lr
    eb04:	ldr	r0, [pc, #3244]	; f7b8 <bt_compidtostr@@Base+0x5d30>
    eb08:	add	r0, pc, r0
    eb0c:	bx	lr
    eb10:	ldr	r0, [pc, #3236]	; f7bc <bt_compidtostr@@Base+0x5d34>
    eb14:	add	r0, pc, r0
    eb18:	bx	lr
    eb1c:	ldr	r0, [pc, #3228]	; f7c0 <bt_compidtostr@@Base+0x5d38>
    eb20:	add	r0, pc, r0
    eb24:	bx	lr
    eb28:	ldr	r0, [pc, #3220]	; f7c4 <bt_compidtostr@@Base+0x5d3c>
    eb2c:	add	r0, pc, r0
    eb30:	bx	lr
    eb34:	ldr	r0, [pc, #3212]	; f7c8 <bt_compidtostr@@Base+0x5d40>
    eb38:	add	r0, pc, r0
    eb3c:	bx	lr
    eb40:	ldr	r0, [pc, #3204]	; f7cc <bt_compidtostr@@Base+0x5d44>
    eb44:	add	r0, pc, r0
    eb48:	bx	lr
    eb4c:	ldr	r0, [pc, #3196]	; f7d0 <bt_compidtostr@@Base+0x5d48>
    eb50:	add	r0, pc, r0
    eb54:	bx	lr
    eb58:	ldr	r0, [pc, #3188]	; f7d4 <bt_compidtostr@@Base+0x5d4c>
    eb5c:	add	r0, pc, r0
    eb60:	bx	lr
    eb64:	ldr	r0, [pc, #3180]	; f7d8 <bt_compidtostr@@Base+0x5d50>
    eb68:	add	r0, pc, r0
    eb6c:	bx	lr
    eb70:	ldr	r0, [pc, #3172]	; f7dc <bt_compidtostr@@Base+0x5d54>
    eb74:	add	r0, pc, r0
    eb78:	bx	lr
    eb7c:	ldr	r0, [pc, #3164]	; f7e0 <bt_compidtostr@@Base+0x5d58>
    eb80:	add	r0, pc, r0
    eb84:	bx	lr
    eb88:	ldr	r0, [pc, #3156]	; f7e4 <bt_compidtostr@@Base+0x5d5c>
    eb8c:	add	r0, pc, r0
    eb90:	bx	lr
    eb94:	ldr	r0, [pc, #3148]	; f7e8 <bt_compidtostr@@Base+0x5d60>
    eb98:	add	r0, pc, r0
    eb9c:	bx	lr
    eba0:	ldr	r0, [pc, #3140]	; f7ec <bt_compidtostr@@Base+0x5d64>
    eba4:	add	r0, pc, r0
    eba8:	bx	lr
    ebac:	ldr	r0, [pc, #3132]	; f7f0 <bt_compidtostr@@Base+0x5d68>
    ebb0:	add	r0, pc, r0
    ebb4:	bx	lr
    ebb8:	ldr	r0, [pc, #3124]	; f7f4 <bt_compidtostr@@Base+0x5d6c>
    ebbc:	add	r0, pc, r0
    ebc0:	bx	lr
    ebc4:	ldr	r0, [pc, #3116]	; f7f8 <bt_compidtostr@@Base+0x5d70>
    ebc8:	add	r0, pc, r0
    ebcc:	bx	lr
    ebd0:	ldr	r0, [pc, #3108]	; f7fc <bt_compidtostr@@Base+0x5d74>
    ebd4:	add	r0, pc, r0
    ebd8:	bx	lr
    ebdc:	ldr	r0, [pc, #3100]	; f800 <bt_compidtostr@@Base+0x5d78>
    ebe0:	add	r0, pc, r0
    ebe4:	bx	lr
    ebe8:	ldr	r0, [pc, #3092]	; f804 <bt_compidtostr@@Base+0x5d7c>
    ebec:	add	r0, pc, r0
    ebf0:	bx	lr
    ebf4:	ldr	r0, [pc, #3084]	; f808 <bt_compidtostr@@Base+0x5d80>
    ebf8:	add	r0, pc, r0
    ebfc:	bx	lr
    ec00:	ldr	r0, [pc, #3076]	; f80c <bt_compidtostr@@Base+0x5d84>
    ec04:	add	r0, pc, r0
    ec08:	bx	lr
    ec0c:	ldr	r0, [pc, #3068]	; f810 <bt_compidtostr@@Base+0x5d88>
    ec10:	add	r0, pc, r0
    ec14:	bx	lr
    ec18:	ldr	r0, [pc, #3060]	; f814 <bt_compidtostr@@Base+0x5d8c>
    ec1c:	add	r0, pc, r0
    ec20:	bx	lr
    ec24:	ldr	r0, [pc, #3052]	; f818 <bt_compidtostr@@Base+0x5d90>
    ec28:	add	r0, pc, r0
    ec2c:	bx	lr
    ec30:	ldr	r0, [pc, #3044]	; f81c <bt_compidtostr@@Base+0x5d94>
    ec34:	add	r0, pc, r0
    ec38:	bx	lr
    ec3c:	ldr	r0, [pc, #3036]	; f820 <bt_compidtostr@@Base+0x5d98>
    ec40:	add	r0, pc, r0
    ec44:	bx	lr
    ec48:	ldr	r0, [pc, #3028]	; f824 <bt_compidtostr@@Base+0x5d9c>
    ec4c:	add	r0, pc, r0
    ec50:	bx	lr
    ec54:	ldr	r0, [pc, #3020]	; f828 <bt_compidtostr@@Base+0x5da0>
    ec58:	add	r0, pc, r0
    ec5c:	bx	lr
    ec60:	ldr	r0, [pc, #3012]	; f82c <bt_compidtostr@@Base+0x5da4>
    ec64:	add	r0, pc, r0
    ec68:	bx	lr
    ec6c:	ldr	r0, [pc, #3004]	; f830 <bt_compidtostr@@Base+0x5da8>
    ec70:	add	r0, pc, r0
    ec74:	bx	lr
    ec78:	ldr	r0, [pc, #2996]	; f834 <bt_compidtostr@@Base+0x5dac>
    ec7c:	add	r0, pc, r0
    ec80:	bx	lr
    ec84:	ldr	r0, [pc, #2988]	; f838 <bt_compidtostr@@Base+0x5db0>
    ec88:	add	r0, pc, r0
    ec8c:	bx	lr
    ec90:	ldr	r0, [pc, #2980]	; f83c <bt_compidtostr@@Base+0x5db4>
    ec94:	add	r0, pc, r0
    ec98:	bx	lr
    ec9c:	ldr	r0, [pc, #2972]	; f840 <bt_compidtostr@@Base+0x5db8>
    eca0:	add	r0, pc, r0
    eca4:	bx	lr
    eca8:	ldr	r0, [pc, #2964]	; f844 <bt_compidtostr@@Base+0x5dbc>
    ecac:	add	r0, pc, r0
    ecb0:	bx	lr
    ecb4:	ldr	r0, [pc, #2956]	; f848 <bt_compidtostr@@Base+0x5dc0>
    ecb8:	add	r0, pc, r0
    ecbc:	bx	lr
    ecc0:	ldr	r0, [pc, #2948]	; f84c <bt_compidtostr@@Base+0x5dc4>
    ecc4:	add	r0, pc, r0
    ecc8:	bx	lr
    eccc:	ldr	r0, [pc, #2940]	; f850 <bt_compidtostr@@Base+0x5dc8>
    ecd0:	add	r0, pc, r0
    ecd4:	bx	lr
    ecd8:	ldr	r0, [pc, #2932]	; f854 <bt_compidtostr@@Base+0x5dcc>
    ecdc:	add	r0, pc, r0
    ece0:	bx	lr
    ece4:	ldr	r0, [pc, #2924]	; f858 <bt_compidtostr@@Base+0x5dd0>
    ece8:	add	r0, pc, r0
    ecec:	bx	lr
    ecf0:	ldr	r0, [pc, #2916]	; f85c <bt_compidtostr@@Base+0x5dd4>
    ecf4:	add	r0, pc, r0
    ecf8:	bx	lr
    ecfc:	ldr	r0, [pc, #2908]	; f860 <bt_compidtostr@@Base+0x5dd8>
    ed00:	add	r0, pc, r0
    ed04:	bx	lr
    ed08:	ldr	r0, [pc, #2900]	; f864 <bt_compidtostr@@Base+0x5ddc>
    ed0c:	add	r0, pc, r0
    ed10:	bx	lr
    ed14:	ldr	r0, [pc, #2892]	; f868 <bt_compidtostr@@Base+0x5de0>
    ed18:	add	r0, pc, r0
    ed1c:	bx	lr
    ed20:	ldr	r0, [pc, #2884]	; f86c <bt_compidtostr@@Base+0x5de4>
    ed24:	add	r0, pc, r0
    ed28:	bx	lr
    ed2c:	ldr	r0, [pc, #2876]	; f870 <bt_compidtostr@@Base+0x5de8>
    ed30:	add	r0, pc, r0
    ed34:	bx	lr
    ed38:	ldr	r0, [pc, #2868]	; f874 <bt_compidtostr@@Base+0x5dec>
    ed3c:	add	r0, pc, r0
    ed40:	bx	lr
    ed44:	ldr	r0, [pc, #2860]	; f878 <bt_compidtostr@@Base+0x5df0>
    ed48:	add	r0, pc, r0
    ed4c:	bx	lr
    ed50:	ldr	r0, [pc, #2852]	; f87c <bt_compidtostr@@Base+0x5df4>
    ed54:	add	r0, pc, r0
    ed58:	bx	lr
    ed5c:	ldr	r0, [pc, #2844]	; f880 <bt_compidtostr@@Base+0x5df8>
    ed60:	add	r0, pc, r0
    ed64:	bx	lr
    ed68:	ldr	r0, [pc, #2836]	; f884 <bt_compidtostr@@Base+0x5dfc>
    ed6c:	add	r0, pc, r0
    ed70:	bx	lr
    ed74:	ldr	r0, [pc, #2828]	; f888 <bt_compidtostr@@Base+0x5e00>
    ed78:	add	r0, pc, r0
    ed7c:	bx	lr
    ed80:	ldr	r0, [pc, #2820]	; f88c <bt_compidtostr@@Base+0x5e04>
    ed84:	add	r0, pc, r0
    ed88:	bx	lr
    ed8c:	ldr	r0, [pc, #2812]	; f890 <bt_compidtostr@@Base+0x5e08>
    ed90:	add	r0, pc, r0
    ed94:	bx	lr
    ed98:	ldr	r0, [pc, #2804]	; f894 <bt_compidtostr@@Base+0x5e0c>
    ed9c:	add	r0, pc, r0
    eda0:	bx	lr
    eda4:	ldr	r0, [pc, #2796]	; f898 <bt_compidtostr@@Base+0x5e10>
    eda8:	add	r0, pc, r0
    edac:	bx	lr
    edb0:	ldr	r0, [pc, #2788]	; f89c <bt_compidtostr@@Base+0x5e14>
    edb4:	add	r0, pc, r0
    edb8:	bx	lr
    edbc:	ldr	r0, [pc, #2780]	; f8a0 <bt_compidtostr@@Base+0x5e18>
    edc0:	add	r0, pc, r0
    edc4:	bx	lr
    edc8:	ldr	r0, [pc, #2772]	; f8a4 <bt_compidtostr@@Base+0x5e1c>
    edcc:	add	r0, pc, r0
    edd0:	bx	lr
    edd4:	ldr	r0, [pc, #2764]	; f8a8 <bt_compidtostr@@Base+0x5e20>
    edd8:	add	r0, pc, r0
    eddc:	bx	lr
    ede0:	ldr	r0, [pc, #2756]	; f8ac <bt_compidtostr@@Base+0x5e24>
    ede4:	add	r0, pc, r0
    ede8:	bx	lr
    edec:	ldr	r0, [pc, #2748]	; f8b0 <bt_compidtostr@@Base+0x5e28>
    edf0:	add	r0, pc, r0
    edf4:	bx	lr
    edf8:	ldr	r0, [pc, #2740]	; f8b4 <bt_compidtostr@@Base+0x5e2c>
    edfc:	add	r0, pc, r0
    ee00:	bx	lr
    ee04:	ldr	r0, [pc, #2732]	; f8b8 <bt_compidtostr@@Base+0x5e30>
    ee08:	add	r0, pc, r0
    ee0c:	bx	lr
    ee10:	ldr	r0, [pc, #2724]	; f8bc <bt_compidtostr@@Base+0x5e34>
    ee14:	add	r0, pc, r0
    ee18:	bx	lr
    ee1c:	ldr	r0, [pc, #2716]	; f8c0 <bt_compidtostr@@Base+0x5e38>
    ee20:	add	r0, pc, r0
    ee24:	bx	lr
    ee28:	ldr	r0, [pc, #2708]	; f8c4 <bt_compidtostr@@Base+0x5e3c>
    ee2c:	add	r0, pc, r0
    ee30:	bx	lr
    ee34:	ldr	r0, [pc, #2700]	; f8c8 <bt_compidtostr@@Base+0x5e40>
    ee38:	add	r0, pc, r0
    ee3c:	bx	lr
    ee40:	ldr	r0, [pc, #2692]	; f8cc <bt_compidtostr@@Base+0x5e44>
    ee44:	add	r0, pc, r0
    ee48:	bx	lr
    ee4c:	ldr	r0, [pc, #2684]	; f8d0 <bt_compidtostr@@Base+0x5e48>
    ee50:	add	r0, pc, r0
    ee54:	bx	lr
    ee58:	ldr	r0, [pc, #2676]	; f8d4 <bt_compidtostr@@Base+0x5e4c>
    ee5c:	add	r0, pc, r0
    ee60:	bx	lr
    ee64:	ldr	r0, [pc, #2668]	; f8d8 <bt_compidtostr@@Base+0x5e50>
    ee68:	add	r0, pc, r0
    ee6c:	bx	lr
    ee70:	ldr	r0, [pc, #2660]	; f8dc <bt_compidtostr@@Base+0x5e54>
    ee74:	add	r0, pc, r0
    ee78:	bx	lr
    ee7c:	ldr	r0, [pc, #2652]	; f8e0 <bt_compidtostr@@Base+0x5e58>
    ee80:	add	r0, pc, r0
    ee84:	bx	lr
    ee88:	ldr	r0, [pc, #2644]	; f8e4 <bt_compidtostr@@Base+0x5e5c>
    ee8c:	add	r0, pc, r0
    ee90:	bx	lr
    ee94:	ldr	r0, [pc, #2636]	; f8e8 <bt_compidtostr@@Base+0x5e60>
    ee98:	add	r0, pc, r0
    ee9c:	bx	lr
    eea0:	ldr	r0, [pc, #2628]	; f8ec <bt_compidtostr@@Base+0x5e64>
    eea4:	add	r0, pc, r0
    eea8:	bx	lr
    eeac:	ldr	r0, [pc, #2620]	; f8f0 <bt_compidtostr@@Base+0x5e68>
    eeb0:	add	r0, pc, r0
    eeb4:	bx	lr
    eeb8:	ldr	r0, [pc, #2612]	; f8f4 <bt_compidtostr@@Base+0x5e6c>
    eebc:	add	r0, pc, r0
    eec0:	bx	lr
    eec4:	ldr	r0, [pc, #2604]	; f8f8 <bt_compidtostr@@Base+0x5e70>
    eec8:	add	r0, pc, r0
    eecc:	bx	lr
    eed0:	ldr	r0, [pc, #2596]	; f8fc <bt_compidtostr@@Base+0x5e74>
    eed4:	add	r0, pc, r0
    eed8:	bx	lr
    eedc:	ldr	r0, [pc, #2588]	; f900 <bt_compidtostr@@Base+0x5e78>
    eee0:	add	r0, pc, r0
    eee4:	bx	lr
    eee8:	ldr	r0, [pc, #2580]	; f904 <bt_compidtostr@@Base+0x5e7c>
    eeec:	add	r0, pc, r0
    eef0:	bx	lr
    eef4:	ldr	r0, [pc, #2572]	; f908 <bt_compidtostr@@Base+0x5e80>
    eef8:	add	r0, pc, r0
    eefc:	bx	lr
    ef00:	ldr	r0, [pc, #2564]	; f90c <bt_compidtostr@@Base+0x5e84>
    ef04:	add	r0, pc, r0
    ef08:	bx	lr
    ef0c:	ldr	r0, [pc, #2556]	; f910 <bt_compidtostr@@Base+0x5e88>
    ef10:	add	r0, pc, r0
    ef14:	bx	lr
    ef18:	ldr	r0, [pc, #2548]	; f914 <bt_compidtostr@@Base+0x5e8c>
    ef1c:	add	r0, pc, r0
    ef20:	bx	lr
    ef24:	ldr	r0, [pc, #2540]	; f918 <bt_compidtostr@@Base+0x5e90>
    ef28:	add	r0, pc, r0
    ef2c:	bx	lr
    ef30:	ldr	r0, [pc, #2532]	; f91c <bt_compidtostr@@Base+0x5e94>
    ef34:	add	r0, pc, r0
    ef38:	bx	lr
    ef3c:	ldr	r0, [pc, #2524]	; f920 <bt_compidtostr@@Base+0x5e98>
    ef40:	add	r0, pc, r0
    ef44:	bx	lr
    ef48:	ldr	r0, [pc, #2516]	; f924 <bt_compidtostr@@Base+0x5e9c>
    ef4c:	add	r0, pc, r0
    ef50:	bx	lr
    ef54:	ldr	r0, [pc, #2508]	; f928 <bt_compidtostr@@Base+0x5ea0>
    ef58:	add	r0, pc, r0
    ef5c:	bx	lr
    ef60:	ldr	r0, [pc, #2500]	; f92c <bt_compidtostr@@Base+0x5ea4>
    ef64:	add	r0, pc, r0
    ef68:	bx	lr
    ef6c:	ldr	r0, [pc, #2492]	; f930 <bt_compidtostr@@Base+0x5ea8>
    ef70:	add	r0, pc, r0
    ef74:	bx	lr
    ef78:	ldr	r0, [pc, #2484]	; f934 <bt_compidtostr@@Base+0x5eac>
    ef7c:	add	r0, pc, r0
    ef80:	bx	lr
    ef84:	ldr	r0, [pc, #2476]	; f938 <bt_compidtostr@@Base+0x5eb0>
    ef88:	add	r0, pc, r0
    ef8c:	bx	lr
    ef90:	ldr	r0, [pc, #2468]	; f93c <bt_compidtostr@@Base+0x5eb4>
    ef94:	add	r0, pc, r0
    ef98:	bx	lr
    ef9c:	ldr	r0, [pc, #2460]	; f940 <bt_compidtostr@@Base+0x5eb8>
    efa0:	add	r0, pc, r0
    efa4:	bx	lr
    efa8:	ldr	r0, [pc, #2452]	; f944 <bt_compidtostr@@Base+0x5ebc>
    efac:	add	r0, pc, r0
    efb0:	bx	lr
    efb4:	ldr	r0, [pc, #2444]	; f948 <bt_compidtostr@@Base+0x5ec0>
    efb8:	add	r0, pc, r0
    efbc:	bx	lr
    efc0:	ldr	r0, [pc, #2436]	; f94c <bt_compidtostr@@Base+0x5ec4>
    efc4:	add	r0, pc, r0
    efc8:	bx	lr
    efcc:	ldr	r0, [pc, #2428]	; f950 <bt_compidtostr@@Base+0x5ec8>
    efd0:	add	r0, pc, r0
    efd4:	bx	lr
    efd8:	ldr	r0, [pc, #2420]	; f954 <bt_compidtostr@@Base+0x5ecc>
    efdc:	add	r0, pc, r0
    efe0:	bx	lr
    efe4:	ldr	r0, [pc, #2412]	; f958 <bt_compidtostr@@Base+0x5ed0>
    efe8:	add	r0, pc, r0
    efec:	bx	lr
    eff0:	ldr	r0, [pc, #2404]	; f95c <bt_compidtostr@@Base+0x5ed4>
    eff4:	add	r0, pc, r0
    eff8:	bx	lr
    effc:	ldr	r0, [pc, #2396]	; f960 <bt_compidtostr@@Base+0x5ed8>
    f000:	add	r0, pc, r0
    f004:	bx	lr
    f008:	ldr	r0, [pc, #2388]	; f964 <bt_compidtostr@@Base+0x5edc>
    f00c:	add	r0, pc, r0
    f010:	bx	lr
    f014:	ldr	r0, [pc, #2380]	; f968 <bt_compidtostr@@Base+0x5ee0>
    f018:	add	r0, pc, r0
    f01c:	bx	lr
    f020:	ldr	r0, [pc, #2372]	; f96c <bt_compidtostr@@Base+0x5ee4>
    f024:	add	r0, pc, r0
    f028:	bx	lr
    f02c:	ldr	r0, [pc, #2364]	; f970 <bt_compidtostr@@Base+0x5ee8>
    f030:	add	r0, pc, r0
    f034:	bx	lr
    f038:	ldr	r0, [pc, #2356]	; f974 <bt_compidtostr@@Base+0x5eec>
    f03c:	add	r0, pc, r0
    f040:	bx	lr
    f044:	ldr	r0, [pc, #2348]	; f978 <bt_compidtostr@@Base+0x5ef0>
    f048:	add	r0, pc, r0
    f04c:	bx	lr
    f050:	ldr	r0, [pc, #2340]	; f97c <bt_compidtostr@@Base+0x5ef4>
    f054:	add	r0, pc, r0
    f058:	bx	lr
    f05c:	ldr	r0, [pc, #2332]	; f980 <bt_compidtostr@@Base+0x5ef8>
    f060:	add	r0, pc, r0
    f064:	bx	lr
    f068:	ldr	r0, [pc, #2324]	; f984 <bt_compidtostr@@Base+0x5efc>
    f06c:	add	r0, pc, r0
    f070:	bx	lr
    f074:	ldr	r0, [pc, #2316]	; f988 <bt_compidtostr@@Base+0x5f00>
    f078:	add	r0, pc, r0
    f07c:	bx	lr
    f080:	ldr	r0, [pc, #2308]	; f98c <bt_compidtostr@@Base+0x5f04>
    f084:	add	r0, pc, r0
    f088:	bx	lr
    f08c:	ldr	r0, [pc, #2300]	; f990 <bt_compidtostr@@Base+0x5f08>
    f090:	add	r0, pc, r0
    f094:	bx	lr
    f098:	ldr	r0, [pc, #2292]	; f994 <bt_compidtostr@@Base+0x5f0c>
    f09c:	add	r0, pc, r0
    f0a0:	bx	lr
    f0a4:	ldr	r0, [pc, #2284]	; f998 <bt_compidtostr@@Base+0x5f10>
    f0a8:	add	r0, pc, r0
    f0ac:	bx	lr
    f0b0:	ldr	r0, [pc, #2276]	; f99c <bt_compidtostr@@Base+0x5f14>
    f0b4:	add	r0, pc, r0
    f0b8:	bx	lr
    f0bc:	ldr	r0, [pc, #2268]	; f9a0 <bt_compidtostr@@Base+0x5f18>
    f0c0:	add	r0, pc, r0
    f0c4:	bx	lr
    f0c8:	ldr	r0, [pc, #2260]	; f9a4 <bt_compidtostr@@Base+0x5f1c>
    f0cc:	add	r0, pc, r0
    f0d0:	bx	lr
    f0d4:	ldr	r0, [pc, #2252]	; f9a8 <bt_compidtostr@@Base+0x5f20>
    f0d8:	add	r0, pc, r0
    f0dc:	bx	lr
    f0e0:	ldr	r0, [pc, #2244]	; f9ac <bt_compidtostr@@Base+0x5f24>
    f0e4:	add	r0, pc, r0
    f0e8:	bx	lr
    f0ec:	ldr	r0, [pc, #2236]	; f9b0 <bt_compidtostr@@Base+0x5f28>
    f0f0:	add	r0, pc, r0
    f0f4:	bx	lr
    f0f8:	ldr	r0, [pc, #2228]	; f9b4 <bt_compidtostr@@Base+0x5f2c>
    f0fc:	add	r0, pc, r0
    f100:	bx	lr
    f104:	ldr	r0, [pc, #2220]	; f9b8 <bt_compidtostr@@Base+0x5f30>
    f108:	add	r0, pc, r0
    f10c:	bx	lr
    f110:	ldr	r0, [pc, #2212]	; f9bc <bt_compidtostr@@Base+0x5f34>
    f114:	add	r0, pc, r0
    f118:	bx	lr
    f11c:	ldr	r0, [pc, #2204]	; f9c0 <bt_compidtostr@@Base+0x5f38>
    f120:	add	r0, pc, r0
    f124:	bx	lr
    f128:	ldr	r0, [pc, #2196]	; f9c4 <bt_compidtostr@@Base+0x5f3c>
    f12c:	add	r0, pc, r0
    f130:	bx	lr
    f134:	ldr	r0, [pc, #2188]	; f9c8 <bt_compidtostr@@Base+0x5f40>
    f138:	add	r0, pc, r0
    f13c:	bx	lr
    f140:	ldr	r0, [pc, #2180]	; f9cc <bt_compidtostr@@Base+0x5f44>
    f144:	add	r0, pc, r0
    f148:	bx	lr
    f14c:	ldr	r0, [pc, #2172]	; f9d0 <bt_compidtostr@@Base+0x5f48>
    f150:	add	r0, pc, r0
    f154:	bx	lr
    f158:	ldr	r0, [pc, #2164]	; f9d4 <bt_compidtostr@@Base+0x5f4c>
    f15c:	add	r0, pc, r0
    f160:	bx	lr
    f164:	ldr	r0, [pc, #2156]	; f9d8 <bt_compidtostr@@Base+0x5f50>
    f168:	add	r0, pc, r0
    f16c:	bx	lr
    f170:	ldr	r0, [pc, #2148]	; f9dc <bt_compidtostr@@Base+0x5f54>
    f174:	add	r0, pc, r0
    f178:	bx	lr
    f17c:	ldr	r0, [pc, #2140]	; f9e0 <bt_compidtostr@@Base+0x5f58>
    f180:	add	r0, pc, r0
    f184:	bx	lr
    f188:	ldr	r0, [pc, #2132]	; f9e4 <bt_compidtostr@@Base+0x5f5c>
    f18c:	add	r0, pc, r0
    f190:	bx	lr
    f194:	ldr	r0, [pc, #2124]	; f9e8 <bt_compidtostr@@Base+0x5f60>
    f198:	add	r0, pc, r0
    f19c:	bx	lr
    f1a0:	ldr	r0, [pc, #2116]	; f9ec <bt_compidtostr@@Base+0x5f64>
    f1a4:	add	r0, pc, r0
    f1a8:	bx	lr
    f1ac:	ldr	r0, [pc, #2108]	; f9f0 <bt_compidtostr@@Base+0x5f68>
    f1b0:	add	r0, pc, r0
    f1b4:	bx	lr
    f1b8:	ldr	r0, [pc, #2100]	; f9f4 <bt_compidtostr@@Base+0x5f6c>
    f1bc:	add	r0, pc, r0
    f1c0:	bx	lr
    f1c4:	ldr	r0, [pc, #2092]	; f9f8 <bt_compidtostr@@Base+0x5f70>
    f1c8:	add	r0, pc, r0
    f1cc:	bx	lr
    f1d0:	ldr	r0, [pc, #2084]	; f9fc <bt_compidtostr@@Base+0x5f74>
    f1d4:	add	r0, pc, r0
    f1d8:	bx	lr
    f1dc:	ldr	r0, [pc, #2076]	; fa00 <bt_compidtostr@@Base+0x5f78>
    f1e0:	add	r0, pc, r0
    f1e4:	bx	lr
    f1e8:	ldr	r0, [pc, #2068]	; fa04 <bt_compidtostr@@Base+0x5f7c>
    f1ec:	add	r0, pc, r0
    f1f0:	bx	lr
    f1f4:	ldr	r0, [pc, #2060]	; fa08 <bt_compidtostr@@Base+0x5f80>
    f1f8:	add	r0, pc, r0
    f1fc:	bx	lr
    f200:	ldr	r0, [pc, #2052]	; fa0c <bt_compidtostr@@Base+0x5f84>
    f204:	add	r0, pc, r0
    f208:	bx	lr
    f20c:	ldr	r0, [pc, #2044]	; fa10 <bt_compidtostr@@Base+0x5f88>
    f210:	add	r0, pc, r0
    f214:	bx	lr
    f218:	ldr	r0, [pc, #2036]	; fa14 <bt_compidtostr@@Base+0x5f8c>
    f21c:	add	r0, pc, r0
    f220:	bx	lr
    f224:	ldr	r0, [pc, #2028]	; fa18 <bt_compidtostr@@Base+0x5f90>
    f228:	add	r0, pc, r0
    f22c:	bx	lr
    f230:	ldr	r0, [pc, #2020]	; fa1c <bt_compidtostr@@Base+0x5f94>
    f234:	add	r0, pc, r0
    f238:	bx	lr
    f23c:	ldr	r0, [pc, #2012]	; fa20 <bt_compidtostr@@Base+0x5f98>
    f240:	add	r0, pc, r0
    f244:	bx	lr
    f248:	ldr	r0, [pc, #2004]	; fa24 <bt_compidtostr@@Base+0x5f9c>
    f24c:	add	r0, pc, r0
    f250:	bx	lr
    f254:	ldr	r0, [pc, #1996]	; fa28 <bt_compidtostr@@Base+0x5fa0>
    f258:	add	r0, pc, r0
    f25c:	bx	lr
    f260:	ldr	r0, [pc, #1988]	; fa2c <bt_compidtostr@@Base+0x5fa4>
    f264:	add	r0, pc, r0
    f268:	bx	lr
    f26c:	ldr	r0, [pc, #1980]	; fa30 <bt_compidtostr@@Base+0x5fa8>
    f270:	add	r0, pc, r0
    f274:	bx	lr
    f278:	ldr	r0, [pc, #1972]	; fa34 <bt_compidtostr@@Base+0x5fac>
    f27c:	add	r0, pc, r0
    f280:	bx	lr
    f284:	ldr	r0, [pc, #1964]	; fa38 <bt_compidtostr@@Base+0x5fb0>
    f288:	add	r0, pc, r0
    f28c:	bx	lr
    f290:	ldr	r0, [pc, #1956]	; fa3c <bt_compidtostr@@Base+0x5fb4>
    f294:	add	r0, pc, r0
    f298:	bx	lr
    f29c:	ldr	r0, [pc, #1948]	; fa40 <bt_compidtostr@@Base+0x5fb8>
    f2a0:	add	r0, pc, r0
    f2a4:	bx	lr
    f2a8:	ldr	r0, [pc, #1940]	; fa44 <bt_compidtostr@@Base+0x5fbc>
    f2ac:	add	r0, pc, r0
    f2b0:	bx	lr
    f2b4:	ldr	r0, [pc, #1932]	; fa48 <bt_compidtostr@@Base+0x5fc0>
    f2b8:	add	r0, pc, r0
    f2bc:	bx	lr
    f2c0:	ldr	r0, [pc, #1924]	; fa4c <bt_compidtostr@@Base+0x5fc4>
    f2c4:	add	r0, pc, r0
    f2c8:	bx	lr
    f2cc:	ldr	r0, [pc, #1916]	; fa50 <bt_compidtostr@@Base+0x5fc8>
    f2d0:	add	r0, pc, r0
    f2d4:	bx	lr
    f2d8:	ldr	r0, [pc, #1908]	; fa54 <bt_compidtostr@@Base+0x5fcc>
    f2dc:	add	r0, pc, r0
    f2e0:	bx	lr
    f2e4:	ldr	r0, [pc, #1900]	; fa58 <bt_compidtostr@@Base+0x5fd0>
    f2e8:	add	r0, pc, r0
    f2ec:	bx	lr
    f2f0:	ldr	r0, [pc, #1892]	; fa5c <bt_compidtostr@@Base+0x5fd4>
    f2f4:	add	r0, pc, r0
    f2f8:	bx	lr
    f2fc:	ldr	r0, [pc, #1884]	; fa60 <bt_compidtostr@@Base+0x5fd8>
    f300:	add	r0, pc, r0
    f304:	bx	lr
    f308:	ldr	r0, [pc, #1876]	; fa64 <bt_compidtostr@@Base+0x5fdc>
    f30c:	add	r0, pc, r0
    f310:	bx	lr
    f314:	ldr	r0, [pc, #1868]	; fa68 <bt_compidtostr@@Base+0x5fe0>
    f318:	add	r0, pc, r0
    f31c:	bx	lr
    f320:	ldr	r0, [pc, #1860]	; fa6c <bt_compidtostr@@Base+0x5fe4>
    f324:	add	r0, pc, r0
    f328:	bx	lr
    f32c:	ldr	r0, [pc, #1852]	; fa70 <bt_compidtostr@@Base+0x5fe8>
    f330:	add	r0, pc, r0
    f334:	bx	lr
    f338:	ldr	r0, [pc, #1844]	; fa74 <bt_compidtostr@@Base+0x5fec>
    f33c:	add	r0, pc, r0
    f340:	bx	lr
    f344:	ldr	r0, [pc, #1836]	; fa78 <bt_compidtostr@@Base+0x5ff0>
    f348:	add	r0, pc, r0
    f34c:	bx	lr
    f350:	ldr	r0, [pc, #1828]	; fa7c <bt_compidtostr@@Base+0x5ff4>
    f354:	add	r0, pc, r0
    f358:	bx	lr
    f35c:	ldr	r0, [pc, #1820]	; fa80 <bt_compidtostr@@Base+0x5ff8>
    f360:	add	r0, pc, r0
    f364:	bx	lr
    f368:	ldr	r0, [pc, #1812]	; fa84 <bt_compidtostr@@Base+0x5ffc>
    f36c:	add	r0, pc, r0
    f370:	bx	lr
    f374:	ldr	r0, [pc, #1804]	; fa88 <bt_compidtostr@@Base+0x6000>
    f378:	add	r0, pc, r0
    f37c:	bx	lr
    f380:	ldr	r0, [pc, #1796]	; fa8c <bt_compidtostr@@Base+0x6004>
    f384:	add	r0, pc, r0
    f388:	bx	lr
    f38c:	ldr	r0, [pc, #1788]	; fa90 <bt_compidtostr@@Base+0x6008>
    f390:	add	r0, pc, r0
    f394:	bx	lr
    f398:	ldr	r0, [pc, #1780]	; fa94 <bt_compidtostr@@Base+0x600c>
    f39c:	add	r0, pc, r0
    f3a0:	bx	lr
    f3a4:	ldr	r0, [pc, #1772]	; fa98 <bt_compidtostr@@Base+0x6010>
    f3a8:	add	r0, pc, r0
    f3ac:	bx	lr
    f3b0:	ldr	r0, [pc, #1764]	; fa9c <bt_compidtostr@@Base+0x6014>
    f3b4:	add	r0, pc, r0
    f3b8:	bx	lr
    f3bc:	ldr	r0, [pc, #1756]	; faa0 <bt_compidtostr@@Base+0x6018>
    f3c0:	add	r0, pc, r0
    f3c4:	bx	lr
    f3c8:	ldr	r0, [pc, #1748]	; faa4 <bt_compidtostr@@Base+0x601c>
    f3cc:	add	r0, pc, r0
    f3d0:	bx	lr
    f3d4:	ldr	r0, [pc, #1740]	; faa8 <bt_compidtostr@@Base+0x6020>
    f3d8:	add	r0, pc, r0
    f3dc:	bx	lr
    f3e0:	ldr	r0, [pc, #1732]	; faac <bt_compidtostr@@Base+0x6024>
    f3e4:	add	r0, pc, r0
    f3e8:	bx	lr
    f3ec:	ldr	r0, [pc, #1724]	; fab0 <bt_compidtostr@@Base+0x6028>
    f3f0:	add	r0, pc, r0
    f3f4:	bx	lr
    f3f8:	ldr	r0, [pc, #1716]	; fab4 <bt_compidtostr@@Base+0x602c>
    f3fc:	add	r0, pc, r0
    f400:	bx	lr
    f404:	ldr	r0, [pc, #1708]	; fab8 <bt_compidtostr@@Base+0x6030>
    f408:	add	r0, pc, r0
    f40c:	bx	lr
    f410:	ldr	r0, [pc, #1700]	; fabc <bt_compidtostr@@Base+0x6034>
    f414:	add	r0, pc, r0
    f418:	bx	lr
    f41c:	ldr	r0, [pc, #1692]	; fac0 <bt_compidtostr@@Base+0x6038>
    f420:	add	r0, pc, r0
    f424:	bx	lr
    f428:	ldr	r0, [pc, #1684]	; fac4 <bt_compidtostr@@Base+0x603c>
    f42c:	add	r0, pc, r0
    f430:	bx	lr
    f434:	ldr	r0, [pc, #1676]	; fac8 <bt_compidtostr@@Base+0x6040>
    f438:	add	r0, pc, r0
    f43c:	bx	lr
    f440:	ldr	r0, [pc, #1668]	; facc <bt_compidtostr@@Base+0x6044>
    f444:	add	r0, pc, r0
    f448:	bx	lr
    f44c:	ldr	r0, [pc, #1660]	; fad0 <bt_compidtostr@@Base+0x6048>
    f450:	add	r0, pc, r0
    f454:	bx	lr
    f458:	ldr	r0, [pc, #1652]	; fad4 <bt_compidtostr@@Base+0x604c>
    f45c:	add	r0, pc, r0
    f460:	bx	lr
    f464:	ldr	r0, [pc, #1644]	; fad8 <bt_compidtostr@@Base+0x6050>
    f468:	add	r0, pc, r0
    f46c:	bx	lr
    f470:	ldr	r0, [pc, #1636]	; fadc <bt_compidtostr@@Base+0x6054>
    f474:	add	r0, pc, r0
    f478:	bx	lr
    f47c:	ldr	r0, [pc, #1628]	; fae0 <bt_compidtostr@@Base+0x6058>
    f480:	add	r0, pc, r0
    f484:	bx	lr
    f488:	ldr	r0, [pc, #1620]	; fae4 <bt_compidtostr@@Base+0x605c>
    f48c:	add	r0, pc, r0
    f490:	bx	lr
    f494:	ldr	r0, [pc, #1612]	; fae8 <bt_compidtostr@@Base+0x6060>
    f498:	add	r0, pc, r0
    f49c:	bx	lr
    f4a0:	ldr	r0, [pc, #1604]	; faec <bt_compidtostr@@Base+0x6064>
    f4a4:	add	r0, pc, r0
    f4a8:	bx	lr
    f4ac:	ldr	r0, [pc, #1596]	; faf0 <bt_compidtostr@@Base+0x6068>
    f4b0:	add	r0, pc, r0
    f4b4:	bx	lr
    f4b8:	ldr	r0, [pc, #1588]	; faf4 <bt_compidtostr@@Base+0x606c>
    f4bc:	add	r0, pc, r0
    f4c0:	bx	lr
    f4c4:	ldr	r0, [pc, #1580]	; faf8 <bt_compidtostr@@Base+0x6070>
    f4c8:	add	r0, pc, r0
    f4cc:	bx	lr
    f4d0:	ldr	r0, [pc, #1572]	; fafc <bt_compidtostr@@Base+0x6074>
    f4d4:	add	r0, pc, r0
    f4d8:	bx	lr
    f4dc:	ldr	r0, [pc, #1564]	; fb00 <bt_compidtostr@@Base+0x6078>
    f4e0:	add	r0, pc, r0
    f4e4:	bx	lr
    f4e8:	ldr	r0, [pc, #1556]	; fb04 <bt_compidtostr@@Base+0x607c>
    f4ec:	add	r0, pc, r0
    f4f0:	bx	lr
    f4f4:	ldr	r0, [pc, #1548]	; fb08 <bt_compidtostr@@Base+0x6080>
    f4f8:	add	r0, pc, r0
    f4fc:	bx	lr
    f500:	ldr	r0, [pc, #1540]	; fb0c <bt_compidtostr@@Base+0x6084>
    f504:	add	r0, pc, r0
    f508:	bx	lr
    f50c:	ldr	r0, [pc, #1532]	; fb10 <bt_compidtostr@@Base+0x6088>
    f510:	add	r0, pc, r0
    f514:	bx	lr
    f518:	ldr	r0, [pc, #1524]	; fb14 <bt_compidtostr@@Base+0x608c>
    f51c:	add	r0, pc, r0
    f520:	bx	lr
    f524:	ldr	r0, [pc, #1516]	; fb18 <bt_compidtostr@@Base+0x6090>
    f528:	add	r0, pc, r0
    f52c:	bx	lr
    f530:	ldr	r0, [pc, #1508]	; fb1c <bt_compidtostr@@Base+0x6094>
    f534:	add	r0, pc, r0
    f538:	bx	lr
    f53c:	ldr	r0, [pc, #1500]	; fb20 <bt_compidtostr@@Base+0x6098>
    f540:	add	r0, pc, r0
    f544:	bx	lr
    f548:	ldr	r0, [pc, #1492]	; fb24 <bt_compidtostr@@Base+0x609c>
    f54c:	add	r0, pc, r0
    f550:	bx	lr
    f554:	ldr	r0, [pc, #1484]	; fb28 <bt_compidtostr@@Base+0x60a0>
    f558:	add	r0, pc, r0
    f55c:	bx	lr
    f560:	ldr	r0, [pc, #1476]	; fb2c <bt_compidtostr@@Base+0x60a4>
    f564:	add	r0, pc, r0
    f568:	bx	lr
    f56c:	ldr	r0, [pc, #1468]	; fb30 <bt_compidtostr@@Base+0x60a8>
    f570:	add	r0, pc, r0
    f574:	bx	lr
    f578:	ldr	r0, [pc, #1460]	; fb34 <bt_compidtostr@@Base+0x60ac>
    f57c:	add	r0, pc, r0
    f580:	bx	lr
    f584:	ldr	r0, [pc, #1452]	; fb38 <bt_compidtostr@@Base+0x60b0>
    f588:	add	r0, pc, r0
    f58c:	bx	lr
    f590:	ldr	r0, [pc, #1444]	; fb3c <bt_compidtostr@@Base+0x60b4>
    f594:	add	r0, pc, r0
    f598:	bx	lr
    f59c:	ldr	r0, [pc, #1436]	; fb40 <bt_compidtostr@@Base+0x60b8>
    f5a0:	add	r0, pc, r0
    f5a4:	bx	lr
    f5a8:	ldr	r0, [pc, #1428]	; fb44 <bt_compidtostr@@Base+0x60bc>
    f5ac:	add	r0, pc, r0
    f5b0:	bx	lr
    f5b4:	ldr	r0, [pc, #1420]	; fb48 <bt_compidtostr@@Base+0x60c0>
    f5b8:	add	r0, pc, r0
    f5bc:	bx	lr
    f5c0:	ldr	r0, [pc, #1412]	; fb4c <bt_compidtostr@@Base+0x60c4>
    f5c4:	add	r0, pc, r0
    f5c8:	bx	lr
    f5cc:	ldr	r0, [pc, #1404]	; fb50 <bt_compidtostr@@Base+0x60c8>
    f5d0:	add	r0, pc, r0
    f5d4:	bx	lr
    f5d8:	ldr	r0, [pc, #1396]	; fb54 <bt_compidtostr@@Base+0x60cc>
    f5dc:	add	r0, pc, r0
    f5e0:	bx	lr
    f5e4:	ldr	r0, [pc, #1388]	; fb58 <bt_compidtostr@@Base+0x60d0>
    f5e8:	add	r0, pc, r0
    f5ec:	bx	lr
    f5f0:	ldr	r0, [pc, #1380]	; fb5c <bt_compidtostr@@Base+0x60d4>
    f5f4:	add	r0, pc, r0
    f5f8:	bx	lr
    f5fc:	ldr	r0, [pc, #1372]	; fb60 <bt_compidtostr@@Base+0x60d8>
    f600:	add	r0, pc, r0
    f604:	bx	lr
    f608:	ldr	r0, [pc, #1364]	; fb64 <bt_compidtostr@@Base+0x60dc>
    f60c:	add	r0, pc, r0
    f610:	bx	lr
    f614:	andeq	sl, r0, r4, ror #20
    f618:	ldrdeq	sl, [r0], -ip
    f61c:	andeq	sl, r0, r8, lsr #32
    f620:	ldrdeq	r9, [r0], -r0
    f624:	andeq	sl, r0, r0, ror #22
    f628:	andeq	sl, r0, ip, lsr r2
    f62c:	andeq	r9, r0, r0, ror #30
    f630:	andeq	r9, r0, ip, lsl pc
    f634:	andeq	sl, r0, ip, ror r1
    f638:	andeq	r9, r0, r0, lsr #29
    f63c:			; <UNDEFINED> instruction: 0x0000a1bc
    f640:	andeq	r9, r0, ip, ror sp
    f644:	andeq	r9, r0, ip, ror #3
    f648:	andeq	r9, r0, r4, lsl #5
    f64c:	andeq	r9, r0, r0, asr #4
    f650:	andeq	r9, r0, r8, asr #5
    f654:	muleq	r0, r0, fp
    f658:	strdeq	sl, [r0], -r8
    f65c:	andeq	r8, r0, r0, lsr #8
    f660:	andeq	r9, r0, ip, ror #5
    f664:	andeq	r9, r0, r8, lsr #2
    f668:	strdeq	r9, [r0], -r4
    f66c:			; <UNDEFINED> instruction: 0x000097b4
    f670:	andeq	r9, r0, r8, ror #15
    f674:	strdeq	r8, [r0], -ip
    f678:	andeq	r9, r0, r0, asr #32
    f67c:	strdeq	r9, [r0], -ip
    f680:	andeq	r8, r0, r8, asr #30
    f684:	andeq	r8, r0, r8, lsl #31
    f688:	andeq	r9, r0, r4, lsl r6
    f68c:			; <UNDEFINED> instruction: 0x000095b0
    f690:	strdeq	r9, [r0], -r0
    f694:	andeq	r9, r0, r8, lsr #8
    f698:	ldrdeq	r9, [r0], -r4
    f69c:	andeq	r9, r0, r0, lsl r3
    f6a0:	andeq	r9, r0, r0, lsl r6
    f6a4:	andeq	r9, r0, r4, ror #6
    f6a8:	ldrdeq	sl, [r0], -r8
    f6ac:	andeq	sl, r0, r0, lsl #11
    f6b0:	andeq	sl, r0, r0, lsr r5
    f6b4:	andeq	r9, r0, r8, asr #23
    f6b8:	andeq	sl, r0, ip, lsr #30
    f6bc:	andeq	sl, r0, r8, ror lr
    f6c0:	strheq	fp, [r0], -r4
    f6c4:	andeq	sl, r0, r4, asr pc
    f6c8:	strdeq	sl, [r0], -r0
    f6cc:	ldrdeq	fp, [r0], -r4
    f6d0:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    f6d4:	andeq	fp, r0, r4, lsr #32
    f6d8:	andeq	r9, r0, r4, ror r9
    f6dc:	muleq	r0, r8, sp
    f6e0:	andeq	r8, r0, ip, ror #27
    f6e4:	andeq	sl, r0, r4, asr #12
    f6e8:	andeq	r8, r0, r8, asr #25
    f6ec:	andeq	sl, r0, r0, ror r6
    f6f0:	andeq	r9, r0, r8, ror #23
    f6f4:	andeq	r8, r0, r0, lsl #26
    f6f8:	andeq	sl, r0, ip, lsr #11
    f6fc:	andeq	sl, r0, r0, ror #9
    f700:	andeq	sl, r0, r0, lsl r2
    f704:	andeq	sl, r0, r0, lsr fp
    f708:	andeq	sl, r0, r8, ror #7
    f70c:	andeq	sl, r0, r0, lsr #10
    f710:	andeq	r9, r0, r4, asr #15
    f714:	andeq	sl, r0, ip, lsl #5
    f718:	andeq	sl, r0, r4, lsl r3
    f71c:	andeq	sl, r0, ip, asr #6
    f720:	strdeq	sl, [r0], -ip
    f724:	andeq	sl, r0, r4, lsr #5
    f728:	andeq	r9, r0, r4, lsr #20
    f72c:	andeq	sl, r0, r0, ror #1
    f730:	andeq	r9, r0, ip, lsl #13
    f734:	andeq	r9, r0, r8, asr #13
    f738:	andeq	r9, r0, r4, lsr r7
    f73c:	andeq	r9, r0, r0, ror #13
    f740:	andeq	r9, r0, r8, ror r7
    f744:	strheq	sl, [r0], -r4
    f748:	andeq	sl, r0, r4, ror #10
    f74c:	andeq	r9, r0, r4, ror #21
    f750:	andeq	sl, r0, r8, ror #30
    f754:	andeq	sl, r0, r8, asr sl
    f758:	andeq	r9, r0, r4, lsl #11
    f75c:	andeq	r6, r0, r8, ror r5
    f760:	andeq	r8, r0, ip, lsl #22
    f764:	andeq	fp, r0, ip, lsr #8
    f768:			; <UNDEFINED> instruction: 0x00007bbc
    f76c:	andeq	r7, r0, ip, asr r6
    f770:	muleq	r0, r8, r0
    f774:	strdeq	r6, [r0], -ip
    f778:	muleq	r0, r4, r5
    f77c:	andeq	r8, r0, r8, asr #31
    f780:	strdeq	r7, [r0], -r0
    f784:	andeq	r6, r0, ip, lsr #6
    f788:	andeq	r8, r0, ip, lsl #22
    f78c:	ldrdeq	r9, [r0], -r8
    f790:			; <UNDEFINED> instruction: 0x00008bb0
    f794:	strdeq	r9, [r0], -r0
    f798:	strdeq	sl, [r0], -r4
    f79c:	andeq	sl, r0, r0, asr #1
    f7a0:	andeq	sl, r0, ip, lsl #6
    f7a4:	andeq	sl, r0, r4, ror r2
    f7a8:	andeq	sl, r0, r0, ror r3
    f7ac:	andeq	r9, r0, r8, ror #31
    f7b0:	andeq	sl, r0, r4, ror #26
    f7b4:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    f7b8:	andeq	r9, r0, r8, asr r2
    f7bc:	andeq	r9, r0, ip, lsr r0
    f7c0:			; <UNDEFINED> instruction: 0x00008bb0
    f7c4:	andeq	r9, r0, ip, ror #16
    f7c8:	andeq	sl, r0, r4, lsr fp
    f7cc:			; <UNDEFINED> instruction: 0x0000abb4
    f7d0:	andeq	r9, r0, r4, lsr #5
    f7d4:			; <UNDEFINED> instruction: 0x00008cb0
    f7d8:	strdeq	r8, [r0], -r4
    f7dc:	andeq	r8, r0, r4, asr #26
    f7e0:	andeq	r8, r0, r0, ror #23
    f7e4:	strdeq	r9, [r0], -r0
    f7e8:	andeq	r9, r0, r4, lsl #22
    f7ec:	andeq	r9, r0, r4, asr #14
    f7f0:	andeq	r9, r0, r8, asr #23
    f7f4:	muleq	r0, ip, r4
    f7f8:	andeq	r9, r0, ip, lsl #13
    f7fc:	andeq	sl, r0, ip, asr #13
    f800:			; <UNDEFINED> instruction: 0x0000a5b0
    f804:			; <UNDEFINED> instruction: 0x0000a3b0
    f808:	andeq	r9, r0, ip, ror #19
    f80c:	andeq	r9, r0, r8, lsl ip
    f810:	andeq	r9, r0, r4, asr #18
    f814:	muleq	r0, r8, ip
    f818:	andeq	sl, r0, r4, ror #11
    f81c:	andeq	sl, r0, ip, lsr #9
    f820:	andeq	sl, r0, r4, asr r8
    f824:	andeq	r9, r0, r0, asr #4
    f828:	andeq	r8, r0, ip, ror #7
    f82c:	andeq	r8, r0, ip, lsl #14
    f830:			; <UNDEFINED> instruction: 0x000085b0
    f834:			; <UNDEFINED> instruction: 0x000087b0
    f838:	andeq	r8, r0, r4, ror #9
    f83c:	andeq	r9, r0, r8, ror pc
    f840:	andeq	sl, r0, ip, lsl r0
    f844:	andeq	r9, r0, r4, asr #8
    f848:	andeq	r9, r0, ip, lsr #6
    f84c:	andeq	fp, r0, r0, lsr #32
    f850:	strdeq	sl, [r0], -r8
    f854:	ldrdeq	sl, [r0], -ip
    f858:	andeq	sl, r0, r8, lsr #16
    f85c:	andeq	sl, r0, r8, lsl lr
    f860:	andeq	sl, r0, r0, asr #12
    f864:	andeq	fp, r0, r0, lsl #1
    f868:	andeq	r5, r0, r0, ror #27
    f86c:			; <UNDEFINED> instruction: 0x000083b4
    f870:	andeq	r5, r0, r0, asr sp
    f874:	andeq	r7, r0, ip, lsl ip
    f878:			; <UNDEFINED> instruction: 0x00007cb8
    f87c:	andeq	r7, r0, ip, lsl #23
    f880:	andeq	r7, r0, r8, lsr pc
    f884:	andeq	r8, r0, r0, asr #10
    f888:	andeq	r7, r0, r4, ror lr
    f88c:	andeq	r5, r0, r8, lsr #28
    f890:	andeq	r7, r0, r8, asr #4
    f894:	andeq	r6, r0, r4, asr r8
    f898:	andeq	r7, r0, ip, lsl #27
    f89c:	strdeq	r6, [r0], -r0
    f8a0:	strdeq	r6, [r0], -ip
    f8a4:			; <UNDEFINED> instruction: 0x000079bc
    f8a8:	muleq	r0, r8, r0
    f8ac:	andeq	r7, r0, r4, ror #16
    f8b0:	strdeq	r7, [r0], -r4
    f8b4:	andeq	r7, r0, r0, lsr #20
    f8b8:	strdeq	r6, [r0], -r4
    f8bc:			; <UNDEFINED> instruction: 0x00008ebc
    f8c0:	andeq	r6, r0, ip, asr #28
    f8c4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    f8c8:	strdeq	r6, [r0], -r0
    f8cc:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    f8d0:	andeq	r7, r0, r0, asr #1
    f8d4:	strdeq	r6, [r0], -r4
    f8d8:			; <UNDEFINED> instruction: 0x000075bc
    f8dc:	andeq	r6, r0, r4, lsl #6
    f8e0:	muleq	r0, ip, r1
    f8e4:	andeq	r7, r0, r4, ror #12
    f8e8:			; <UNDEFINED> instruction: 0x0000abb8
    f8ec:	andeq	sl, r0, r8, lsl #22
    f8f0:	muleq	r0, r8, sp
    f8f4:	andeq	r6, r0, r8, ror #9
    f8f8:	andeq	r6, r0, ip, lsr r4
    f8fc:	muleq	r0, r0, r5
    f900:	andeq	r7, r0, ip, ror #5
    f904:	andeq	r7, r0, r8, lsl r4
    f908:	andeq	r7, r0, r0, lsl #31
    f90c:	andeq	r7, r0, r8, lsr lr
    f910:	strdeq	r7, [r0], -r4
    f914:	andeq	r7, r0, r4, lsr #29
    f918:	andeq	r7, r0, r0, lsl r2
    f91c:	andeq	r7, r0, r8, asr #8
    f920:	andeq	r7, r0, r0, lsr r3
    f924:	andeq	r6, r0, ip, lsl r9
    f928:	andeq	r5, r0, r4, ror #29
    f92c:	andeq	r5, r0, r8, ror sp
    f930:	andeq	r6, r0, r0, asr sl
    f934:	strdeq	r6, [r0], -r8
    f938:	andeq	r6, r0, r4, lsl #19
    f93c:	andeq	r6, r0, r4, asr #2
    f940:			; <UNDEFINED> instruction: 0x00005cb4
    f944:			; <UNDEFINED> instruction: 0x000094b4
    f948:	andeq	r8, r0, ip, asr #20
    f94c:	strdeq	r7, [r0], -r4
    f950:	andeq	r6, r0, ip, asr fp
    f954:	andeq	r5, r0, r0, ror #6
    f958:	andeq	r6, r0, r4, lsr #10
    f95c:	muleq	r0, r8, sl
    f960:	muleq	r0, r4, r5
    f964:	andeq	r9, r0, r0, lsr #20
    f968:	andeq	r5, r0, ip, lsl #30
    f96c:	strdeq	sl, [r0], -r8
    f970:	andeq	r8, r0, r4, asr #9
    f974:	andeq	r9, r0, r4, asr #29
    f978:	strdeq	r8, [r0], -r4
    f97c:			; <UNDEFINED> instruction: 0x0000a8b4
    f980:	andeq	sl, r0, r4, lsr #7
    f984:	muleq	r0, r8, fp
    f988:	andeq	sl, r0, ip, lsr #1
    f98c:	andeq	r8, r0, r4, asr #15
    f990:	andeq	r8, r0, r8, ror r6
    f994:	andeq	r8, r0, r8, ror r2
    f998:	andeq	sl, r0, r4, lsr #3
    f99c:	andeq	r9, r0, ip, ror #9
    f9a0:	andeq	r9, r0, r0, asr #30
    f9a4:	andeq	r9, r0, r4, ror #3
    f9a8:	andeq	r9, r0, r0, ror r0
    f9ac:	andeq	sl, r0, r4, lsl #13
    f9b0:	andeq	r8, r0, r0, asr #25
    f9b4:	andeq	r8, r0, r8, lsl #20
    f9b8:	andeq	r8, r0, ip, ror #9
    f9bc:	andeq	sl, r0, r8, lsl #10
    f9c0:	ldrdeq	r7, [r0], -r8
    f9c4:	strdeq	r7, [r0], -r4
    f9c8:	andeq	r7, r0, r8, asr sl
    f9cc:	strdeq	sl, [r0], -ip
    f9d0:	andeq	sl, r0, r0, asr #22
    f9d4:	andeq	sl, r0, r8, ror r3
    f9d8:	andeq	r7, r0, r0, lsr pc
    f9dc:	andeq	r5, r0, ip, lsr r9
    f9e0:	ldrdeq	r9, [r0], -ip
    f9e4:	andeq	r9, r0, ip, lsl #19
    f9e8:	andeq	r9, r0, r0, lsl #24
    f9ec:	andeq	r8, r0, r0, lsl #29
    f9f0:	muleq	r0, ip, fp
    f9f4:	andeq	r6, r0, r0, lsr #15
    f9f8:	andeq	r5, r0, r0, lsr #29
    f9fc:	andeq	r6, r0, r4, lsl #3
    fa00:	andeq	r6, r0, ip, lsr #31
    fa04:	andeq	sl, r0, r0, lsr #16
    fa08:	andeq	r6, r0, ip, lsr r4
    fa0c:	andeq	r7, r0, r8, lsl #9
    fa10:	andeq	r7, r0, r0, asr #11
    fa14:	andeq	r6, r0, ip, lsl #20
    fa18:	andeq	r8, r0, r8, ror #20
    fa1c:	andeq	r6, r0, ip, ror ip
    fa20:	andeq	r5, r0, ip, lsr #31
    fa24:	andeq	r7, r0, r4, lsl #1
    fa28:			; <UNDEFINED> instruction: 0x00007bb8
    fa2c:	muleq	r0, r0, r5
    fa30:	andeq	r9, r0, ip, lsl #9
    fa34:	strdeq	r9, [r0], -ip
    fa38:	andeq	r7, r0, ip, asr #30
    fa3c:	andeq	r7, r0, r0, asr r1
    fa40:	strdeq	r6, [r0], -ip
    fa44:	andeq	r9, r0, r4, asr #2
    fa48:	muleq	r0, r4, r2
    fa4c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    fa50:	andeq	r6, r0, r4, asr sp
    fa54:	andeq	r6, r0, r4, ror #3
    fa58:	andeq	r6, r0, r4, ror #15
    fa5c:	andeq	r7, r0, r4, ror #24
    fa60:	andeq	r7, r0, ip, asr r7
    fa64:	muleq	r0, r8, fp
    fa68:	andeq	r8, r0, r4, ror #23
    fa6c:	andeq	sl, r0, r8, asr #21
    fa70:			; <UNDEFINED> instruction: 0x000096b8
    fa74:	andeq	r5, r0, r8, ror fp
    fa78:	andeq	r8, r0, ip, lsr r1
    fa7c:	andeq	sl, r0, ip, asr r5
    fa80:	andeq	sl, r0, r8, lsr r0
    fa84:	strdeq	r5, [r0], -r8
    fa88:	andeq	r8, r0, r8, lsr r8
    fa8c:	andeq	r7, r0, r8, lsr #7
    fa90:	strdeq	r8, [r0], -ip
    fa94:	andeq	sl, r0, ip, asr #3
    fa98:	andeq	r7, r0, r0, ror sp
    fa9c:	andeq	r9, r0, ip, lsl r8
    faa0:	andeq	r5, r0, ip, ror #26
    faa4:	andeq	r8, r0, r4, asr #25
    faa8:	andeq	sl, r0, r0, asr #13
    faac:	andeq	r7, r0, ip, asr r8
    fab0:			; <UNDEFINED> instruction: 0x00009cbc
    fab4:	andeq	r6, r0, r8, lsr #28
    fab8:			; <UNDEFINED> instruction: 0x000068b0
    fabc:	andeq	r9, r0, r0, lsr #4
    fac0:	andeq	r6, r0, r4, lsl r3
    fac4:	andeq	r8, r0, r0, lsr #30
    fac8:	andeq	r8, r0, r0, lsl #20
    facc:	andeq	r5, r0, r0, lsr #19
    fad0:	andeq	r9, r0, r0, asr #9
    fad4:	andeq	r8, r0, r4, asr #9
    fad8:	andeq	r6, r0, r8, lsl #22
    fadc:	andeq	r7, r0, r0, asr r5
    fae0:	andeq	r7, r0, r8, lsr sl
    fae4:	andeq	r9, r0, r4, ror r9
    fae8:	andeq	r9, r0, r4, ror #28
    faec:	andeq	sl, r0, r4, ror #6
    faf0:	andeq	r7, r0, r4, lsl pc
    faf4:	andeq	sl, r0, r8, ror r8
    faf8:			; <UNDEFINED> instruction: 0x00006fb8
    fafc:	andeq	r5, r0, r0, lsr pc
    fb00:	andeq	r6, r0, r0, lsr r5
    fb04:	ldrdeq	r6, [r0], -r0
    fb08:	andeq	r9, r0, r0, ror #25
    fb0c:			; <UNDEFINED> instruction: 0x0000a1b0
    fb10:	strdeq	r8, [r0], -ip
    fb14:	strdeq	r8, [r0], -ip
    fb18:	andeq	r5, r0, r8, ror r7
    fb1c:	andeq	r6, r0, r8, lsl lr
    fb20:	ldrdeq	r6, [r0], -r8
    fb24:			; <UNDEFINED> instruction: 0x000097b8
    fb28:	andeq	r7, r0, r0, lsl sp
    fb2c:	strdeq	r7, [r0], -r0
    fb30:	andeq	sl, r0, ip, lsl #13
    fb34:	strdeq	r7, [r0], -ip
    fb38:	andeq	r9, r0, ip, asr #4
    fb3c:	andeq	r5, r0, r4, lsr #26
    fb40:	andeq	r8, r0, r0, lsl r2
    fb44:	andeq	r8, r0, r8, lsr #9
    fb48:	andeq	r6, r0, r0, lsl #12
    fb4c:			; <UNDEFINED> instruction: 0x0000a3b0
    fb50:	andeq	r7, r0, r8, lsr sl
    fb54:	andeq	r8, r0, r4, lsr #30
    fb58:	andeq	r7, r0, r0, lsr #32
    fb5c:	andeq	r9, r0, r8, asr #18
    fb60:	andeq	r5, r0, r8, lsr #19
    fb64:	andeq	r5, r0, r4, lsl #31
    fb68:	andeq	r6, r0, ip, ror #30
    fb6c:	andeq	r9, r0, ip, asr #17
    fb70:	andeq	r8, r0, r0, lsl r4
    fb74:	ldrdeq	r8, [r0], -ip
    fb78:	andeq	r6, r0, r4, lsl #10
    fb7c:	andeq	r7, r0, r4, lsl #19
    fb80:	ldr	r0, [pc, #-32]	; fb68 <bt_compidtostr@@Base+0x60e0>
    fb84:	add	r0, pc, r0
    fb88:	bx	lr
    fb8c:	ldr	r0, [pc, #-40]	; fb6c <bt_compidtostr@@Base+0x60e4>
    fb90:	add	r0, pc, r0
    fb94:	bx	lr
    fb98:	ldr	r0, [pc, #-48]	; fb70 <bt_compidtostr@@Base+0x60e8>
    fb9c:	add	r0, pc, r0
    fba0:	bx	lr
    fba4:	ldr	r0, [pc, #-56]	; fb74 <bt_compidtostr@@Base+0x60ec>
    fba8:	add	r0, pc, r0
    fbac:	bx	lr
    fbb0:	ldr	r0, [pc, #-64]	; fb78 <bt_compidtostr@@Base+0x60f0>
    fbb4:	add	r0, pc, r0
    fbb8:	bx	lr
    fbbc:	ldr	r0, [pc, #-72]	; fb7c <bt_compidtostr@@Base+0x60f4>
    fbc0:	add	r0, pc, r0
    fbc4:	bx	lr

0000fbc8 <btbb_pcap_open@@Base>:
    fbc8:	str	r4, [sp, #-8]!
    fbcc:	mov	r3, #0
    fbd0:	mov	ip, #2
    fbd4:	movt	ip, #4
    fbd8:	str	lr, [sp, #4]
    fbdc:	sub	sp, sp, #24
    fbe0:	movw	lr, #15437	; 0x3c4d
    fbe4:	movt	lr, #41394	; 0xa1b2
    fbe8:	str	r1, [sp, #20]
    fbec:	ldr	r1, [pc, #72]	; fc3c <btbb_pcap_open@@Base+0x74>
    fbf0:	str	lr, [sp]
    fbf4:	str	ip, [sp, #4]
    fbf8:	str	r3, [sp, #8]
    fbfc:	str	r3, [sp, #12]
    fc00:	add	r1, pc, r1
    fc04:	str	r2, [sp, #16]
    fc08:	bl	20cc <fopen@plt>
    fc0c:	subs	r4, r0, #0
    fc10:	beq	fc28 <btbb_pcap_open@@Base+0x60>
    fc14:	mov	r3, r4
    fc18:	mov	r2, #1
    fc1c:	mov	r1, #24
    fc20:	mov	r0, sp
    fc24:	bl	221c <fwrite@plt>
    fc28:	mov	r0, r4
    fc2c:	add	sp, sp, #24
    fc30:	ldr	r4, [sp]
    fc34:	add	sp, sp, #4
    fc38:	pop	{pc}		; (ldr pc, [sp], #4)
    fc3c:	muleq	r0, r0, r2

0000fc40 <btbb_pcap_dump@@Base>:
    fc40:	mov	r3, r0
    fc44:	strd	r4, [sp, #-16]!
    fc48:	mov	r4, r0
    fc4c:	mov	r5, r1
    fc50:	mov	r0, r1
    fc54:	str	r6, [sp, #8]
    fc58:	mov	r1, #16
    fc5c:	mov	r6, r2
    fc60:	str	lr, [sp, #12]
    fc64:	mov	r2, #1
    fc68:	bl	221c <fwrite@plt>
    fc6c:	mov	r3, r4
    fc70:	ldr	r1, [r5, #8]
    fc74:	mov	r0, r6
    fc78:	mov	r2, #1
    fc7c:	bl	221c <fwrite@plt>
    fc80:	mov	r0, r4
    fc84:	ldrd	r4, [sp]
    fc88:	ldr	r6, [sp, #8]
    fc8c:	ldr	lr, [sp, #12]
    fc90:	add	sp, sp, #16
    fc94:	b	20e4 <fflush@plt>

0000fc98 <btbb_pcap_append_packet@@Base>:
    fc98:	strd	r4, [sp, #-36]!	; 0xffffffdc
    fc9c:	cmp	r0, #0
    fca0:	strd	r6, [sp, #8]
    fca4:	strd	r8, [sp, #16]
    fca8:	strd	sl, [sp, #24]
    fcac:	add	fp, sp, #32
    fcb0:	str	lr, [sp, #32]
    fcb4:	sub	sp, sp, #484	; 0x1e4
    fcb8:	ldrsb	r8, [fp, #4]
    fcbc:	ldrsb	sl, [fp, #8]
    fcc0:	ldrb	r9, [fp, #16]
    fcc4:	beq	fe8c <btbb_pcap_append_packet@@Base+0x1f4>
    fcc8:	mov	r7, r3
    fccc:	ldr	r3, [r0]
    fcd0:	cmp	r3, #0
    fcd4:	beq	fe8c <btbb_pcap_append_packet@@Base+0x1f4>
    fcd8:	ldr	r1, [fp, #12]
    fcdc:	cmp	sl, r8
    fce0:	mov	r6, r2
    fce4:	movlt	r3, #23
    fce8:	movlt	r2, #7
    fcec:	str	r0, [fp, #-516]	; 0xfffffdfc
    fcf0:	movge	r2, #3
    fcf4:	movge	r3, #19
    fcf8:	ldr	r0, [fp, #20]
    fcfc:	str	sp, [fp, #-492]	; 0xfffffe14
    fd00:	sub	r4, fp, #476	; 0x1dc
    fd04:	cmn	r1, #1
    fd08:	moveq	r3, r2
    fd0c:	cmp	r9, #255	; 0xff
    fd10:	orrne	r3, r3, #128	; 0x80
    fd14:	uxth	r3, r3
    fd18:	str	r3, [fp, #-496]	; 0xfffffe10
    fd1c:	bl	22e8 <btbb_packet_get_payload_length@plt>
    fd20:	add	r3, r0, #7
    fd24:	mov	r5, r0
    fd28:	ldr	r0, [fp, #20]
    fd2c:	bic	r3, r3, #7
    fd30:	sub	sp, sp, r3
    fd34:	mov	r1, sp
    fd38:	bl	20b4 <btbb_get_payload_packed@plt>
    fd3c:	cmp	r5, #400	; 0x190
    fd40:	ldr	r0, [fp, #20]
    fd44:	movcc	r2, r5
    fd48:	movcs	r2, #400	; 0x190
    fd4c:	str	r2, [fp, #-480]	; 0xfffffe20
    fd50:	bl	242c <btbb_packet_get_channel@plt>
    fd54:	str	r0, [fp, #-500]	; 0xfffffe0c
    fd58:	ldr	r0, [fp, #20]
    fd5c:	bl	2120 <btbb_packet_get_ac_errors@plt>
    fd60:	str	r0, [fp, #-504]	; 0xfffffe08
    fd64:	ldr	r0, [fp, #20]
    fd68:	bl	2360 <btbb_packet_get_transport@plt>
    fd6c:	str	r0, [fp, #-508]	; 0xfffffe04
    fd70:	ldr	r0, [fp, #20]
    fd74:	bl	2114 <btbb_packet_get_modulation@plt>
    fd78:	str	r0, [fp, #-512]	; 0xfffffe00
    fd7c:	ldr	r0, [fp, #20]
    fd80:	bl	23b4 <btbb_packet_get_lap@plt>
    fd84:	str	r0, [fp, #-484]	; 0xfffffe1c
    fd88:	ldr	r0, [fp, #20]
    fd8c:	bl	2318 <btbb_packet_get_header_packed@plt>
    fd90:	add	r3, pc, #256	; 0x100
    fd94:	ldrd	r2, [r3]
    fd98:	mov	r1, r7
    fd9c:	str	r0, [fp, #-488]	; 0xfffffe18
    fda0:	mov	r0, r6
    fda4:	bl	11354 <lell_pcapng_close@@Base+0x30>
    fda8:	ldr	r2, [fp, #-480]	; 0xfffffe20
    fdac:	mov	r1, r7
    fdb0:	str	r0, [fp, #-476]	; 0xfffffe24
    fdb4:	mov	r0, r6
    fdb8:	add	r7, r2, #22
    fdbc:	add	r3, pc, #212	; 0xd4
    fdc0:	ldrd	r2, [r3]
    fdc4:	bl	11354 <lell_pcapng_close@@Base+0x30>
    fdc8:	ldr	ip, [fp, #-508]	; 0xfffffe04
    fdcc:	str	r2, [fp, #-472]	; 0xfffffe28
    fdd0:	ldr	r1, [fp, #12]
    fdd4:	str	r7, [fp, #-468]	; 0xfffffe2c
    fdd8:	ldr	r0, [fp, #-488]	; 0xfffffe18
    fddc:	str	r7, [fp, #-464]	; 0xfffffe30
    fde0:	strb	r8, [fp, #-459]	; 0xfffffe35
    fde4:	bic	r3, r1, #-16777216	; 0xff000000
    fde8:	ldr	r1, [fp, #-512]	; 0xfffffe00
    fdec:	orr	r3, r3, r9, lsl #24
    fdf0:	strb	sl, [fp, #-458]	; 0xfffffe36
    fdf4:	str	r3, [fp, #-448]	; 0xfffffe40
    fdf8:	orr	r6, r1, ip, lsl #4
    fdfc:	ldr	ip, [fp, #-500]	; 0xfffffe0c
    fe00:	mov	r1, #0
    fe04:	cmp	r5, r1
    fe08:	ldr	r5, [fp, #-496]	; 0xfffffe10
    fe0c:	str	r0, [fp, #-444]	; 0xfffffe44
    fe10:	strh	r1, [r4, #22]
    fe14:	strb	ip, [fp, #-460]	; 0xfffffe34
    fe18:	ldr	ip, [fp, #-504]	; 0xfffffe08
    fe1c:	strb	r6, [fp, #-456]	; 0xfffffe38
    fe20:	strb	r1, [fp, #-455]	; 0xfffffe39
    fe24:	strh	r5, [r4, #36]	; 0x24
    fe28:	strb	ip, [fp, #-457]	; 0xfffffe37
    fe2c:	ldr	ip, [fp, #-484]	; 0xfffffe1c
    fe30:	str	ip, [fp, #-452]	; 0xfffffe3c
    fe34:	bne	fe70 <btbb_pcap_append_packet@@Base+0x1d8>
    fe38:	ldr	r3, [fp, #-516]	; 0xfffffdfc
    fe3c:	mov	r1, r4
    fe40:	sub	r2, fp, #460	; 0x1cc
    fe44:	ldr	r0, [r3]
    fe48:	bl	22ac <btbb_pcap_dump@plt>
    fe4c:	ldr	sp, [fp, #-492]	; 0xfffffe14
    fe50:	mov	r0, #0
    fe54:	sub	sp, fp, #32
    fe58:	ldrd	r4, [sp]
    fe5c:	ldrd	r6, [sp, #8]
    fe60:	ldrd	r8, [sp, #16]
    fe64:	ldrd	sl, [sp, #24]
    fe68:	add	sp, sp, #32
    fe6c:	pop	{pc}		; (ldr pc, [sp], #4)
    fe70:	mov	r1, sp
    fe74:	add	r0, r4, #38	; 0x26
    fe78:	ldr	r2, [fp, #-480]	; 0xfffffe20
    fe7c:	bl	212c <memcpy@plt>
    fe80:	orr	r3, r5, #32
    fe84:	strh	r3, [r4, #36]	; 0x24
    fe88:	b	fe38 <btbb_pcap_append_packet@@Base+0x1a0>
    fe8c:	mvn	r0, #0
    fe90:	b	fe54 <btbb_pcap_append_packet@@Base+0x1bc>
    fe94:	nop	{0}
    fe98:	blcc	fe6c26a0 <perm_table@@Base+0xfe6974e4>
    fe9c:	andeq	r0, r0, r0

0000fea0 <btbb_pcap_close@@Base>:
    fea0:	str	r4, [sp, #-8]!
    fea4:	subs	r4, r0, #0
    fea8:	mvneq	r0, #0
    feac:	str	lr, [sp, #4]
    feb0:	beq	fed0 <btbb_pcap_close@@Base+0x30>
    feb4:	ldr	r0, [r4]
    feb8:	cmp	r0, #0
    febc:	beq	fec4 <btbb_pcap_close@@Base+0x24>
    fec0:	bl	23fc <fclose@plt>
    fec4:	mov	r0, r4
    fec8:	bl	2108 <free@plt>
    fecc:	mov	r0, #0
    fed0:	ldr	r4, [sp]
    fed4:	add	sp, sp, #4
    fed8:	pop	{pc}		; (ldr pc, [sp], #4)

0000fedc <btbb_pcap_create_file@@Base>:
    fedc:	strd	r4, [sp, #-16]!
    fee0:	mov	r5, r0
    fee4:	mov	r0, #4
    fee8:	str	r6, [sp, #8]
    feec:	mov	r6, r1
    fef0:	mov	r1, #1
    fef4:	str	lr, [sp, #12]
    fef8:	bl	206c <calloc@plt>
    fefc:	subs	r4, r0, #0
    ff00:	beq	ff3c <btbb_pcap_create_file@@Base+0x60>
    ff04:	mov	r0, r5
    ff08:	mov	r2, #400	; 0x190
    ff0c:	mov	r1, #255	; 0xff
    ff10:	bl	2198 <btbb_pcap_open@plt>
    ff14:	cmp	r0, #0
    ff18:	str	r0, [r4]
    ff1c:	beq	ff4c <btbb_pcap_create_file@@Base+0x70>
    ff20:	mov	r5, #0
    ff24:	str	r4, [r6]
    ff28:	mov	r0, r5
    ff2c:	ldrd	r4, [sp]
    ff30:	ldr	r6, [sp, #8]
    ff34:	add	sp, sp, #12
    ff38:	pop	{pc}		; (ldr pc, [sp], #4)
    ff3c:	mvn	r5, #2
    ff40:	mov	r0, r4
    ff44:	bl	2234 <btbb_pcap_close@plt>
    ff48:	b	ff28 <btbb_pcap_create_file@@Base+0x4c>
    ff4c:	ldr	r0, [pc, #12]	; ff60 <btbb_pcap_create_file@@Base+0x84>
    ff50:	mvn	r5, #1
    ff54:	add	r0, pc, r0
    ff58:	bl	21ec <perror@plt>
    ff5c:	b	ff40 <btbb_pcap_create_file@@Base+0x64>
    ff60:	andeq	r9, r0, r0, asr #30

0000ff64 <lell_pcap_append_packet@@Base>:
    ff64:	strd	r4, [sp, #-36]!	; 0xffffffdc
    ff68:	cmp	r0, #0
    ff6c:	strd	r6, [sp, #8]
    ff70:	strd	r8, [sp, #16]
    ff74:	strd	sl, [sp, #24]
    ff78:	str	lr, [sp, #32]
    ff7c:	sub	sp, sp, #308	; 0x134
    ff80:	add	r1, sp, #344	; 0x158
    ff84:	ldr	r4, [sp, #356]	; 0x164
    ff88:	ldrsb	fp, [r1]
    ff8c:	add	r1, sp, #348	; 0x15c
    ff90:	ldrsb	sl, [r1]
    ff94:	beq	100ac <lell_pcap_append_packet@@Base+0x148>
    ff98:	ldr	r1, [r0]
    ff9c:	cmp	r1, #0
    ffa0:	beq	100ac <lell_pcap_append_packet@@Base+0x148>
    ffa4:	ldr	r1, [r0, #4]
    ffa8:	cmp	r1, #256	; 0x100
    ffac:	bne	100ac <lell_pcap_append_packet@@Base+0x148>
    ffb0:	cmp	sl, fp
    ffb4:	str	r0, [sp, #12]
    ffb8:	mov	r0, r4
    ffbc:	mov	r6, r2
    ffc0:	mov	r7, r3
    ffc4:	movlt	r5, #55	; 0x37
    ffc8:	movge	r5, #51	; 0x33
    ffcc:	movlt	r9, #39	; 0x27
    ffd0:	movge	r9, #35	; 0x23
    ffd4:	bl	20d8 <lell_packet_is_data@plt>
    ffd8:	ldr	r8, [r4, #72]	; 0x48
    ffdc:	cmp	r0, #0
    ffe0:	mov	r1, r7
    ffe4:	moveq	r9, r5
    ffe8:	mov	r0, r6
    ffec:	ldrb	ip, [r4, #69]	; 0x45
    fff0:	add	r3, pc, #192	; 0xc0
    fff4:	ldrd	r2, [r3]
    fff8:	add	r5, r8, #9
    fffc:	add	r8, r8, #19
   10000:	cmp	r5, #255	; 0xff
   10004:	movcs	r5, #255	; 0xff
   10008:	str	ip, [sp, #4]
   1000c:	bl	11354 <lell_pcapng_close@@Base+0x30>
   10010:	ldrb	r3, [r4, #92]	; 0x5c
   10014:	mov	r1, r7
   10018:	str	r3, [sp, #8]
   1001c:	add	r3, pc, #148	; 0x94
   10020:	ldrd	r2, [r3]
   10024:	str	r0, [sp, #20]
   10028:	mov	r0, r6
   1002c:	bl	11354 <lell_pcapng_close@@Base+0x30>
   10030:	add	r3, r5, #10
   10034:	ldr	ip, [sp, #4]
   10038:	mov	r1, r4
   1003c:	add	r0, sp, #46	; 0x2e
   10040:	str	r2, [sp, #24]
   10044:	mov	r2, r5
   10048:	str	r8, [sp, #28]
   1004c:	add	r4, sp, #20
   10050:	str	r3, [sp, #32]
   10054:	ldr	r3, [sp, #8]
   10058:	strb	ip, [sp, #36]	; 0x24
   1005c:	strb	fp, [sp, #37]	; 0x25
   10060:	strb	sl, [sp, #38]	; 0x26
   10064:	strb	r3, [sp, #39]	; 0x27
   10068:	ldr	r3, [sp, #352]	; 0x160
   1006c:	strh	r9, [sp, #44]	; 0x2c
   10070:	str	r3, [sp, #40]	; 0x28
   10074:	bl	212c <memcpy@plt>
   10078:	ldr	r3, [sp, #12]
   1007c:	mov	r1, r4
   10080:	add	r2, sp, #36	; 0x24
   10084:	ldr	r0, [r3]
   10088:	bl	22ac <btbb_pcap_dump@plt>
   1008c:	mov	r0, #0
   10090:	add	sp, sp, #308	; 0x134
   10094:	ldrd	r4, [sp]
   10098:	ldrd	r6, [sp, #8]
   1009c:	ldrd	r8, [sp, #16]
   100a0:	ldrd	sl, [sp, #24]
   100a4:	add	sp, sp, #32
   100a8:	pop	{pc}		; (ldr pc, [sp], #4)
   100ac:	mvn	r0, #0
   100b0:	b	10090 <lell_pcap_append_packet@@Base+0x12c>
   100b4:	nop	{0}
   100b8:	blcc	fe6c28c0 <perm_table@@Base+0xfe697704>
   100bc:	andeq	r0, r0, r0

000100c0 <lell_pcap_append_ppi_packet@@Base>:
   100c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   100c4:	subs	r5, r0, #0
   100c8:	strd	r6, [sp, #8]
   100cc:	strd	r8, [sp, #16]
   100d0:	strd	sl, [sp, #24]
   100d4:	str	lr, [sp, #32]
   100d8:	sub	sp, sp, #316	; 0x13c
   100dc:	add	r1, sp, #356	; 0x164
   100e0:	ldrb	r0, [sp, #368]	; 0x170
   100e4:	ldrsb	r9, [r1]
   100e8:	add	r1, sp, #360	; 0x168
   100ec:	ldrsb	sl, [r1]
   100f0:	add	r1, sp, #364	; 0x16c
   100f4:	str	r0, [sp, #12]
   100f8:	ldrsb	r1, [r1]
   100fc:	ldrb	fp, [sp, #352]	; 0x160
   10100:	ldr	r7, [sp, #372]	; 0x174
   10104:	str	r1, [sp, #8]
   10108:	beq	10214 <lell_pcap_append_ppi_packet@@Base+0x154>
   1010c:	ldr	r1, [r5]
   10110:	cmp	r1, #0
   10114:	beq	10214 <lell_pcap_append_ppi_packet@@Base+0x154>
   10118:	ldr	r1, [r5, #4]
   1011c:	cmp	r1, #192	; 0xc0
   10120:	bne	10214 <lell_pcap_append_ppi_packet@@Base+0x154>
   10124:	mov	r0, r7
   10128:	strd	r2, [sp]
   1012c:	bl	2330 <lell_get_channel_k@plt>
   10130:	ldr	r8, [r7, #72]	; 0x48
   10134:	add	r4, r0, #1200	; 0x4b0
   10138:	add	r4, r4, #1
   1013c:	add	r3, pc, #220	; 0xdc
   10140:	ldrd	r2, [r3]
   10144:	lsl	r4, r4, #1
   10148:	ldrd	r0, [sp]
   1014c:	add	r6, r8, #9
   10150:	add	r8, r8, #33	; 0x21
   10154:	cmp	r6, #255	; 0xff
   10158:	movcs	r6, #255	; 0xff
   1015c:	bl	11354 <lell_pcapng_close@@Base+0x30>
   10160:	add	r3, pc, #184	; 0xb8
   10164:	ldrd	r2, [r3]
   10168:	str	r0, [sp, #16]
   1016c:	ldrd	r0, [sp]
   10170:	bl	11354 <lell_pcapng_close@@Base+0x30>
   10174:	ldrb	r3, [r5, #8]
   10178:	add	r0, r6, #24
   1017c:	mov	lr, #147	; 0x93
   10180:	str	r2, [sp, #20]
   10184:	movw	ip, #30006	; 0x7536
   10188:	movt	ip, #12
   1018c:	ldr	r2, [r7, #76]	; 0x4c
   10190:	mov	r1, r7
   10194:	str	r0, [sp, #24]
   10198:	mov	r0, #1572864	; 0x180000
   1019c:	str	r8, [sp, #28]
   101a0:	str	r0, [sp, #32]
   101a4:	add	r0, sp, #56	; 0x38
   101a8:	strb	r3, [sp, #44]	; 0x2c
   101ac:	ldr	r3, [sp, #8]
   101b0:	str	lr, [sp, #36]	; 0x24
   101b4:	str	r2, [sp, #48]	; 0x30
   101b8:	mov	r2, r6
   101bc:	add	r6, sp, #16
   101c0:	str	ip, [sp, #40]	; 0x28
   101c4:	strh	r4, [sp, #45]	; 0x2d
   101c8:	strb	fp, [sp, #47]	; 0x2f
   101cc:	strb	r3, [sp, #54]	; 0x36
   101d0:	ldr	r3, [sp, #12]
   101d4:	strb	sl, [sp, #52]	; 0x34
   101d8:	strb	r9, [sp, #53]	; 0x35
   101dc:	strb	r3, [sp, #55]	; 0x37
   101e0:	bl	212c <memcpy@plt>
   101e4:	mov	r1, r6
   101e8:	add	r2, sp, #32
   101ec:	ldr	r0, [r5]
   101f0:	bl	22ac <btbb_pcap_dump@plt>
   101f4:	mov	r0, #0
   101f8:	add	sp, sp, #316	; 0x13c
   101fc:	ldrd	r4, [sp]
   10200:	ldrd	r6, [sp, #8]
   10204:	ldrd	r8, [sp, #16]
   10208:	ldrd	sl, [sp, #24]
   1020c:	add	sp, sp, #32
   10210:	pop	{pc}		; (ldr pc, [sp], #4)
   10214:	mvn	r0, #0
   10218:	b	101f8 <lell_pcap_append_ppi_packet@@Base+0x138>
   1021c:	nop	{0}
   10220:	blcc	fe6c2a28 <perm_table@@Base+0xfe69786c>
   10224:	andeq	r0, r0, r0

00010228 <lell_pcap_close@@Base>:
   10228:	str	r4, [sp, #-8]!
   1022c:	subs	r4, r0, #0
   10230:	mvneq	r0, #0
   10234:	str	lr, [sp, #4]
   10238:	beq	10258 <lell_pcap_close@@Base+0x30>
   1023c:	ldr	r0, [r4]
   10240:	cmp	r0, #0
   10244:	beq	1024c <lell_pcap_close@@Base+0x24>
   10248:	bl	23fc <fclose@plt>
   1024c:	mov	r0, r4
   10250:	bl	2108 <free@plt>
   10254:	mov	r0, #0
   10258:	ldr	r4, [sp]
   1025c:	add	sp, sp, #4
   10260:	pop	{pc}		; (ldr pc, [sp], #4)

00010264 <lell_pcap_ppi_create_file@@Base>:
   10264:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10268:	mov	r5, r0
   1026c:	mov	r0, #12
   10270:	strd	r6, [sp, #8]
   10274:	mov	r6, r1
   10278:	mov	r1, #1
   1027c:	mov	r7, r2
   10280:	str	r8, [sp, #16]
   10284:	str	lr, [sp, #20]
   10288:	bl	206c <calloc@plt>
   1028c:	subs	r4, r0, #0
   10290:	beq	102d8 <lell_pcap_ppi_create_file@@Base+0x74>
   10294:	mov	r0, r5
   10298:	mov	r2, #400	; 0x190
   1029c:	mov	r1, #192	; 0xc0
   102a0:	bl	2198 <btbb_pcap_open@plt>
   102a4:	cmp	r0, #0
   102a8:	str	r0, [r4]
   102ac:	beq	102e4 <lell_pcap_ppi_create_file@@Base+0x80>
   102b0:	mov	r3, #192	; 0xc0
   102b4:	mov	r0, #0
   102b8:	str	r4, [r7]
   102bc:	str	r3, [r4, #4]
   102c0:	strb	r6, [r4, #8]
   102c4:	ldrd	r4, [sp]
   102c8:	ldrd	r6, [sp, #8]
   102cc:	ldr	r8, [sp, #16]
   102d0:	add	sp, sp, #20
   102d4:	pop	{pc}		; (ldr pc, [sp], #4)
   102d8:	bl	2180 <lell_pcap_close@plt>
   102dc:	mvn	r0, #2
   102e0:	b	102c4 <lell_pcap_ppi_create_file@@Base+0x60>
   102e4:	mov	r0, r4
   102e8:	bl	2180 <lell_pcap_close@plt>
   102ec:	mvn	r0, #1
   102f0:	b	102c4 <lell_pcap_ppi_create_file@@Base+0x60>

000102f4 <lell_pcap_create_file@@Base>:
   102f4:	strd	r4, [sp, #-16]!
   102f8:	mov	r5, r0
   102fc:	mov	r0, #12
   10300:	str	r6, [sp, #8]
   10304:	mov	r6, r1
   10308:	mov	r1, #1
   1030c:	str	lr, [sp, #12]
   10310:	bl	206c <calloc@plt>
   10314:	subs	r4, r0, #0
   10318:	beq	1035c <lell_pcap_create_file@@Base+0x68>
   1031c:	mov	r0, r5
   10320:	mov	r2, #400	; 0x190
   10324:	mov	r1, #256	; 0x100
   10328:	bl	2198 <btbb_pcap_open@plt>
   1032c:	cmp	r0, #0
   10330:	str	r0, [r4]
   10334:	beq	1036c <lell_pcap_create_file@@Base+0x78>
   10338:	mov	r3, #256	; 0x100
   1033c:	mov	r5, #0
   10340:	str	r4, [r6]
   10344:	str	r3, [r4, #4]
   10348:	mov	r0, r5
   1034c:	ldrd	r4, [sp]
   10350:	ldr	r6, [sp, #8]
   10354:	add	sp, sp, #12
   10358:	pop	{pc}		; (ldr pc, [sp], #4)
   1035c:	mvn	r5, #2
   10360:	mov	r0, r4
   10364:	bl	2180 <lell_pcap_close@plt>
   10368:	b	10348 <lell_pcap_create_file@@Base+0x54>
   1036c:	mvn	r5, #1
   10370:	b	10360 <lell_pcap_create_file@@Base+0x6c>

00010374 <pcapng_append_section_option@@Base>:
   10374:	strd	r4, [sp, #-16]!
   10378:	subs	r4, r0, #0
   1037c:	str	r6, [sp, #8]
   10380:	str	lr, [sp, #12]
   10384:	beq	103c8 <pcapng_append_section_option@@Base+0x54>
   10388:	ldr	r2, [r4]
   1038c:	cmn	r2, #1
   10390:	beq	103c8 <pcapng_append_section_option@@Base+0x54>
   10394:	ldr	r2, [r4, #4]
   10398:	sub	ip, r2, #1
   1039c:	cmn	ip, #3
   103a0:	bhi	103b4 <pcapng_append_section_option@@Base+0x40>
   103a4:	ldr	ip, [r4, #12]
   103a8:	cmp	ip, #0
   103ac:	cmpne	r1, #0
   103b0:	bne	103dc <pcapng_append_section_option@@Base+0x68>
   103b4:	ldrd	r4, [sp]
   103b8:	mov	r0, #5
   103bc:	ldr	r6, [sp, #8]
   103c0:	add	sp, sp, #12
   103c4:	pop	{pc}		; (ldr pc, [sp], #4)
   103c8:	ldrd	r4, [sp]
   103cc:	mov	r0, #1
   103d0:	ldr	r6, [sp, #8]
   103d4:	add	sp, sp, #12
   103d8:	pop	{pc}		; (ldr pc, [sp], #4)
   103dc:	ldrh	r5, [r1, #2]
   103e0:	add	r0, r2, ip
   103e4:	add	r2, r5, #4
   103e8:	bl	212c <memcpy@plt>
   103ec:	ldr	r2, [r4, #8]
   103f0:	add	r3, r5, #7
   103f4:	mov	r0, #0
   103f8:	bic	r3, r3, #3
   103fc:	ldr	ip, [r4, #12]
   10400:	ldr	r1, [pc, #48]	; 10438 <pcapng_append_section_option@@Base+0xc4>
   10404:	sub	r2, r2, #12
   10408:	add	r3, r3, ip
   1040c:	ldr	ip, [r4, #4]
   10410:	sub	r2, r2, r3
   10414:	add	r1, pc, r1
   10418:	str	r3, [r4, #12]
   1041c:	strh	r2, [r1, #2]
   10420:	ldr	r2, [r1]
   10424:	str	r2, [ip, r3]
   10428:	ldrd	r4, [sp]
   1042c:	ldr	r6, [sp, #8]
   10430:	add	sp, sp, #12
   10434:	pop	{pc}		; (ldr pc, [sp], #4)
   10438:	andeq	sl, r1, r4, lsl #27

0001043c <pcapng_append_interface_option@@Base>:
   1043c:	strd	r4, [sp, #-16]!
   10440:	subs	r4, r0, #0
   10444:	str	r6, [sp, #8]
   10448:	str	lr, [sp, #12]
   1044c:	beq	10490 <pcapng_append_interface_option@@Base+0x54>
   10450:	ldr	r2, [r4]
   10454:	cmn	r2, #1
   10458:	beq	10490 <pcapng_append_interface_option@@Base+0x54>
   1045c:	ldr	r2, [r4, #16]
   10460:	sub	ip, r2, #1
   10464:	cmn	ip, #3
   10468:	bhi	1047c <pcapng_append_interface_option@@Base+0x40>
   1046c:	ldr	ip, [r4, #24]
   10470:	cmp	ip, #0
   10474:	cmpne	r1, #0
   10478:	bne	104a4 <pcapng_append_interface_option@@Base+0x68>
   1047c:	ldrd	r4, [sp]
   10480:	mov	r0, #5
   10484:	ldr	r6, [sp, #8]
   10488:	add	sp, sp, #12
   1048c:	pop	{pc}		; (ldr pc, [sp], #4)
   10490:	ldrd	r4, [sp]
   10494:	mov	r0, #1
   10498:	ldr	r6, [sp, #8]
   1049c:	add	sp, sp, #12
   104a0:	pop	{pc}		; (ldr pc, [sp], #4)
   104a4:	ldrh	r5, [r1, #2]
   104a8:	add	r0, r2, ip
   104ac:	add	r2, r5, #4
   104b0:	bl	212c <memcpy@plt>
   104b4:	ldr	r2, [r4, #20]
   104b8:	add	r3, r5, #7
   104bc:	mov	r0, #0
   104c0:	bic	r3, r3, #3
   104c4:	ldr	ip, [r4, #24]
   104c8:	ldr	r1, [pc, #48]	; 10500 <pcapng_append_interface_option@@Base+0xc4>
   104cc:	sub	r2, r2, #12
   104d0:	add	r3, r3, ip
   104d4:	ldr	ip, [r4, #16]
   104d8:	sub	r2, r2, r3
   104dc:	add	r1, pc, r1
   104e0:	str	r3, [r4, #24]
   104e4:	strh	r2, [r1, #2]
   104e8:	ldr	r2, [r1]
   104ec:	str	r2, [ip, r3]
   104f0:	ldrd	r4, [sp]
   104f4:	ldr	r6, [sp, #8]
   104f8:	add	sp, sp, #12
   104fc:	pop	{pc}		; (ldr pc, [sp], #4)
   10500:			; <UNDEFINED> instruction: 0x0001acbc

00010504 <pcapng_append_packet@@Base>:
   10504:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10508:	subs	r4, r0, #0
   1050c:	strd	r6, [sp, #8]
   10510:	str	r8, [sp, #16]
   10514:	str	lr, [sp, #20]
   10518:	beq	10528 <pcapng_append_packet@@Base+0x24>
   1051c:	ldr	r0, [r4]
   10520:	cmn	r0, #1
   10524:	bne	10540 <pcapng_append_packet@@Base+0x3c>
   10528:	mov	r0, #1
   1052c:	ldrd	r4, [sp]
   10530:	ldrd	r6, [sp, #8]
   10534:	ldr	r8, [sp, #16]
   10538:	add	sp, sp, #20
   1053c:	pop	{pc}		; (ldr pc, [sp], #4)
   10540:	ldr	r5, [r1, #4]
   10544:	mov	r2, r5
   10548:	bl	23d8 <write@plt>
   1054c:	cmn	r0, #1
   10550:	moveq	r0, #0
   10554:	beq	1052c <pcapng_append_packet@@Base+0x28>
   10558:	ldr	r1, [r4, #4]
   1055c:	mov	r0, #0
   10560:	ldr	r6, [r1, #16]
   10564:	ldr	r7, [r1, #20]
   10568:	adds	r2, r6, r5
   1056c:	adc	r3, r7, #0
   10570:	str	r2, [r1, #16]
   10574:	str	r3, [r1, #20]
   10578:	b	1052c <pcapng_append_packet@@Base+0x28>

0001057c <pcapng_close@@Base>:
   1057c:	str	r4, [sp, #-8]!
   10580:	mov	r4, r0
   10584:	ldr	r0, [r0, #16]
   10588:	str	lr, [sp, #4]
   1058c:	sub	r3, r0, #1
   10590:	cmn	r3, #3
   10594:	bls	105d4 <pcapng_close@@Base+0x58>
   10598:	ldr	r0, [r4, #4]
   1059c:	sub	r3, r0, #1
   105a0:	cmn	r3, #3
   105a4:	bls	105c8 <pcapng_close@@Base+0x4c>
   105a8:	ldr	r0, [r4]
   105ac:	cmn	r0, #1
   105b0:	beq	105b8 <pcapng_close@@Base+0x3c>
   105b4:	bl	24a4 <close@plt>
   105b8:	ldr	r4, [sp]
   105bc:	add	sp, sp, #4
   105c0:	mov	r0, #0
   105c4:	pop	{pc}		; (ldr pc, [sp], #4)
   105c8:	ldr	r1, [r4, #8]
   105cc:	bl	2414 <munmap@plt>
   105d0:	b	105a8 <pcapng_close@@Base+0x2c>
   105d4:	ldr	r1, [r4, #20]
   105d8:	bl	2414 <munmap@plt>
   105dc:	b	10598 <pcapng_close@@Base+0x1c>

000105e0 <pcapng_create@@Base>:
   105e0:	mov	ip, #0
   105e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   105e8:	mov	r5, r0
   105ec:	strd	r6, [sp, #8]
   105f0:	mov	r7, r2
   105f4:	mov	r2, #432	; 0x1b0
   105f8:	strd	r8, [sp, #16]
   105fc:	strd	sl, [sp, #24]
   10600:	str	lr, [sp, #32]
   10604:	sub	sp, sp, #52	; 0x34
   10608:	str	ip, [r0, #4]
   1060c:	str	ip, [r0, #8]
   10610:	str	ip, [r0, #12]
   10614:	str	ip, [r0, #16]
   10618:	str	ip, [r0, #20]
   1061c:	str	ip, [r0, #24]
   10620:	ldrh	r0, [sp, #88]	; 0x58
   10624:	str	r3, [sp, #12]
   10628:	ldr	fp, [sp, #96]	; 0x60
   1062c:	str	r0, [sp, #16]
   10630:	mov	r0, r1
   10634:	mov	r1, #194	; 0xc2
   10638:	str	fp, [sp, #8]
   1063c:	bl	22c4 <open@plt>
   10640:	cmn	r0, #1
   10644:	str	r0, [r5]
   10648:	bne	10678 <pcapng_create@@Base+0x98>
   1064c:	mov	r4, #6
   10650:	mov	r0, r5
   10654:	bl	245c <pcapng_close@plt>
   10658:	mov	r0, r4
   1065c:	add	sp, sp, #52	; 0x34
   10660:	ldrd	r4, [sp]
   10664:	ldrd	r6, [sp, #8]
   10668:	ldrd	r8, [sp, #16]
   1066c:	ldrd	sl, [sp, #24]
   10670:	add	sp, sp, #32
   10674:	pop	{pc}		; (ldr pc, [sp], #4)
   10678:	ldr	r3, [pc, #1168]	; 10b10 <pcapng_create@@Base+0x530>
   1067c:	mov	r2, #24
   10680:	add	sl, sp, r2
   10684:	mov	r1, sl
   10688:	str	r2, [r5, #8]
   1068c:	add	r3, pc, r3
   10690:	ldrd	r8, [r3]
   10694:	strd	r8, [sp, #24]
   10698:	ldrd	r8, [r3, #8]
   1069c:	strd	r8, [sl, #8]
   106a0:	ldrd	r8, [r3, #16]
   106a4:	strd	r8, [sl, #16]
   106a8:	bl	23d8 <write@plt>
   106ac:	adds	r2, r0, #1
   106b0:	mov	r4, r0
   106b4:	movne	r2, #1
   106b8:	cmp	r7, #0
   106bc:	movne	r3, r2
   106c0:	moveq	r3, #0
   106c4:	cmp	r3, #0
   106c8:	str	r3, [sp, #20]
   106cc:	beq	10b00 <pcapng_create@@Base+0x520>
   106d0:	ldrh	r3, [r7]
   106d4:	cmp	r3, #0
   106d8:	beq	10ad8 <pcapng_create@@Base+0x4f8>
   106dc:	ldrh	r3, [r7, #2]
   106e0:	cmp	r3, #0
   106e4:	beq	10ad8 <pcapng_create@@Base+0x4f8>
   106e8:	ldr	r6, [pc, #1060]	; 10b14 <pcapng_create@@Base+0x534>
   106ec:	mov	r9, fp
   106f0:	add	r6, pc, r6
   106f4:	add	r6, r6, #24
   106f8:	add	fp, r3, #3
   106fc:	add	r2, r3, #4
   10700:	ldr	r0, [r5]
   10704:	bic	fp, fp, #3
   10708:	mov	r1, r7
   1070c:	sub	r8, fp, r3
   10710:	bl	23d8 <write@plt>
   10714:	adds	r2, r0, #1
   10718:	movne	r2, #1
   1071c:	cmp	r8, #0
   10720:	cmnne	r0, #1
   10724:	beq	10754 <pcapng_create@@Base+0x174>
   10728:	mov	r2, #1
   1072c:	mov	r1, r6
   10730:	ldr	r0, [r5]
   10734:	bl	23d8 <write@plt>
   10738:	adds	r2, r0, #1
   1073c:	movne	r2, #1
   10740:	subs	r8, r8, #1
   10744:	movne	r3, r2
   10748:	moveq	r3, #0
   1074c:	cmp	r3, #0
   10750:	bne	10728 <pcapng_create@@Base+0x148>
   10754:	ldr	r3, [r5, #8]
   10758:	add	r1, fp, #4
   1075c:	adds	r7, r7, r1
   10760:	movne	r1, r2
   10764:	moveq	r1, #0
   10768:	cmp	r1, #0
   1076c:	add	r3, r3, #4
   10770:	add	fp, r3, fp
   10774:	str	fp, [r5, #8]
   10778:	beq	10ab8 <pcapng_create@@Base+0x4d8>
   1077c:	ldrh	r3, [r7]
   10780:	cmp	r3, #0
   10784:	beq	10794 <pcapng_create@@Base+0x1b4>
   10788:	ldrh	r3, [r7, #2]
   1078c:	cmp	r3, #0
   10790:	bne	106f8 <pcapng_create@@Base+0x118>
   10794:	mov	r8, fp
   10798:	mov	r4, r0
   1079c:	str	r9, [sp, #8]
   107a0:	str	r8, [r5, #12]
   107a4:	bl	2348 <getpagesize@plt>
   107a8:	ldr	r3, [sp, #12]
   107ac:	mov	r6, r0
   107b0:	add	r1, r3, #3
   107b4:	ldr	r3, [sp, #20]
   107b8:	add	r1, r1, r8
   107bc:	add	r1, r1, r0
   107c0:	udiv	r1, r1, r0
   107c4:	mul	r1, r0, r1
   107c8:	subs	r8, r1, r8
   107cc:	str	r1, [r5, #8]
   107d0:	moveq	fp, #0
   107d4:	andne	fp, r3, #1
   107d8:	cmp	fp, #0
   107dc:	beq	10828 <pcapng_create@@Base+0x248>
   107e0:	ldr	r7, [pc, #816]	; 10b18 <pcapng_create@@Base+0x538>
   107e4:	ldr	r9, [sp, #8]
   107e8:	add	r7, pc, r7
   107ec:	add	r7, r7, #24
   107f0:	mov	r2, #1
   107f4:	mov	r1, r7
   107f8:	ldr	r0, [r5]
   107fc:	bl	23d8 <write@plt>
   10800:	subs	r8, r8, #1
   10804:	movne	r2, #1
   10808:	moveq	r2, #0
   1080c:	adds	r3, r0, #1
   10810:	movne	r3, #1
   10814:	tst	r2, r3
   10818:	bne	107f0 <pcapng_create@@Base+0x210>
   1081c:	ldr	r1, [r5, #8]
   10820:	mov	r4, r0
   10824:	str	r9, [sp, #8]
   10828:	ldr	ip, [r5]
   1082c:	mov	r2, #0
   10830:	mov	r3, #1
   10834:	mov	r0, r2
   10838:	str	ip, [sp]
   1083c:	str	r2, [sp, #4]
   10840:	mov	r2, #3
   10844:	bl	230c <mmap@plt>
   10848:	cmn	r4, #1
   1084c:	str	r0, [r5, #4]
   10850:	beq	1064c <pcapng_create@@Base+0x6c>
   10854:	cmn	r0, #1
   10858:	beq	10a9c <pcapng_create@@Base+0x4bc>
   1085c:	ldr	r3, [sp, #92]	; 0x5c
   10860:	mov	r2, #16
   10864:	mov	r9, #0
   10868:	mov	r8, #0
   1086c:	mov	r1, sl
   10870:	str	r2, [r5, #20]
   10874:	ldr	r0, [r5]
   10878:	strd	r8, [sp, #28]
   1087c:	str	r3, [sp, #36]	; 0x24
   10880:	mov	r3, #1
   10884:	str	r3, [sp, #24]
   10888:	ldr	r3, [sp, #16]
   1088c:	strh	r3, [sp, #32]
   10890:	bl	23d8 <write@plt>
   10894:	ldr	r9, [sp, #8]
   10898:	cmp	r9, #0
   1089c:	cmnne	r0, #1
   108a0:	beq	10aa4 <pcapng_create@@Base+0x4c4>
   108a4:	ldrh	r3, [r9]
   108a8:	cmp	r3, #0
   108ac:	beq	10b08 <pcapng_create@@Base+0x528>
   108b0:	ldrh	r4, [r9, #2]
   108b4:	cmp	r4, #0
   108b8:	beq	10b08 <pcapng_create@@Base+0x528>
   108bc:	ldr	r7, [pc, #600]	; 10b1c <pcapng_create@@Base+0x53c>
   108c0:	add	r7, pc, r7
   108c4:	add	r7, r7, #24
   108c8:	add	r8, r4, #3
   108cc:	add	r2, r4, #4
   108d0:	ldr	r0, [r5]
   108d4:	mov	r1, r9
   108d8:	bic	r8, r8, #3
   108dc:	bl	23d8 <write@plt>
   108e0:	adds	r3, r0, #1
   108e4:	sub	r4, r8, r4
   108e8:	movne	r3, #1
   108ec:	cmp	r4, #0
   108f0:	cmnne	r0, #1
   108f4:	beq	10924 <pcapng_create@@Base+0x344>
   108f8:	mov	r2, #1
   108fc:	mov	r1, r7
   10900:	ldr	r0, [r5]
   10904:	bl	23d8 <write@plt>
   10908:	adds	r3, r0, #1
   1090c:	movne	r3, #1
   10910:	subs	r4, r4, #1
   10914:	movne	r2, r3
   10918:	moveq	r2, #0
   1091c:	cmp	r2, #0
   10920:	bne	108f8 <pcapng_create@@Base+0x318>
   10924:	ldr	r2, [r5, #20]
   10928:	add	r1, r8, #4
   1092c:	adds	r9, r9, r1
   10930:	moveq	r3, #0
   10934:	cmp	r3, #0
   10938:	add	r3, r2, #4
   1093c:	add	r8, r3, r8
   10940:	str	r8, [r5, #20]
   10944:	beq	10aa8 <pcapng_create@@Base+0x4c8>
   10948:	ldrh	r3, [r9]
   1094c:	cmp	r3, #0
   10950:	beq	10960 <pcapng_create@@Base+0x380>
   10954:	ldrh	r4, [r9, #2]
   10958:	cmp	r4, #0
   1095c:	bne	108c8 <pcapng_create@@Base+0x2e8>
   10960:	str	r8, [r5, #24]
   10964:	ldr	r3, [sp, #100]	; 0x64
   10968:	add	r1, r3, #3
   1096c:	ldr	r3, [r5]
   10970:	add	r1, r1, r6
   10974:	add	r1, r1, r8
   10978:	udiv	r1, r1, r6
   1097c:	mul	r1, r6, r1
   10980:	subs	r8, r1, r8
   10984:	str	r1, [r5, #20]
   10988:	beq	10ae0 <pcapng_create@@Base+0x500>
   1098c:	ldr	r7, [pc, #396]	; 10b20 <pcapng_create@@Base+0x540>
   10990:	mov	r0, r3
   10994:	add	r7, pc, r7
   10998:	add	r7, r7, #24
   1099c:	b	109a4 <pcapng_create@@Base+0x3c4>
   109a0:	ldr	r0, [r5]
   109a4:	mov	r2, #1
   109a8:	mov	r1, r7
   109ac:	bl	23d8 <write@plt>
   109b0:	subs	r8, r8, #1
   109b4:	movne	r3, #1
   109b8:	moveq	r3, #0
   109bc:	adds	r2, r0, #1
   109c0:	movne	r2, #1
   109c4:	ands	r3, r3, r2
   109c8:	bne	109a0 <pcapng_create@@Base+0x3c0>
   109cc:	ldr	r1, [r5]
   109d0:	mov	r6, r0
   109d4:	mov	r2, #3
   109d8:	mov	r0, r3
   109dc:	mov	r3, #1
   109e0:	ldr	ip, [r5, #8]
   109e4:	str	r1, [sp]
   109e8:	ldr	r1, [r5, #20]
   109ec:	str	ip, [sp, #4]
   109f0:	bl	230c <mmap@plt>
   109f4:	cmn	r6, #1
   109f8:	str	r0, [r5, #16]
   109fc:	beq	1064c <pcapng_create@@Base+0x6c>
   10a00:	cmn	r0, #1
   10a04:	beq	10a9c <pcapng_create@@Base+0x4bc>
   10a08:	ldr	r2, [pc, #276]	; 10b24 <pcapng_create@@Base+0x544>
   10a0c:	mov	r1, #0
   10a10:	mov	r4, r1
   10a14:	ldr	r3, [r5, #8]
   10a18:	ldr	ip, [r5, #4]
   10a1c:	add	r2, pc, r2
   10a20:	ldr	r0, [r5, #12]
   10a24:	sub	r3, r3, #12
   10a28:	sub	r3, r3, r0
   10a2c:	strh	r3, [r2, #2]
   10a30:	ldr	r3, [r2]
   10a34:	str	r3, [ip, r0]
   10a38:	ldr	ip, [r5, #4]
   10a3c:	ldr	r0, [r5, #8]
   10a40:	bic	r3, r0, #3
   10a44:	str	r0, [ip, #4]
   10a48:	add	r3, ip, r3
   10a4c:	ldr	ip, [r5, #16]
   10a50:	str	r0, [r3, #-4]
   10a54:	ldr	r3, [r5, #20]
   10a58:	ldr	r0, [r5, #24]
   10a5c:	sub	r3, r3, #12
   10a60:	sub	r3, r3, r0
   10a64:	strh	r3, [r2, #2]
   10a68:	ldr	r3, [r2]
   10a6c:	str	r3, [ip, r0]
   10a70:	ldr	r0, [r5, #4]
   10a74:	ldr	r2, [r5, #20]
   10a78:	ldr	ip, [r5, #16]
   10a7c:	bic	r3, r2, #3
   10a80:	add	r3, ip, r3
   10a84:	str	r2, [ip, #4]
   10a88:	str	r2, [r3, #-4]
   10a8c:	ldr	r3, [r5, #20]
   10a90:	str	r3, [r0, #16]
   10a94:	str	r1, [r0, #20]
   10a98:	b	10658 <pcapng_create@@Base+0x78>
   10a9c:	mov	r4, #7
   10aa0:	b	10650 <pcapng_create@@Base+0x70>
   10aa4:	ldr	r8, [r5, #20]
   10aa8:	cmn	r0, #1
   10aac:	str	r8, [r5, #24]
   10ab0:	bne	10964 <pcapng_create@@Base+0x384>
   10ab4:	b	1064c <pcapng_create@@Base+0x6c>
   10ab8:	mov	r8, fp
   10abc:	mov	r4, r0
   10ac0:	str	r9, [sp, #8]
   10ac4:	cmn	r4, #1
   10ac8:	str	r8, [r5, #12]
   10acc:	beq	1064c <pcapng_create@@Base+0x6c>
   10ad0:	str	r2, [sp, #20]
   10ad4:	b	107a4 <pcapng_create@@Base+0x1c4>
   10ad8:	ldr	r8, [r5, #8]
   10adc:	b	107a0 <pcapng_create@@Base+0x1c0>
   10ae0:	ldr	ip, [r5, #8]
   10ae4:	mov	r0, r8
   10ae8:	mov	r2, #3
   10aec:	stm	sp, {r3, ip}
   10af0:	mov	r3, #1
   10af4:	bl	230c <mmap@plt>
   10af8:	str	r0, [r5, #16]
   10afc:	b	10a00 <pcapng_create@@Base+0x420>
   10b00:	ldr	r8, [r5, #8]
   10b04:	b	10ac4 <pcapng_create@@Base+0x4e4>
   10b08:	ldr	r8, [r5, #20]
   10b0c:	b	10960 <pcapng_create@@Base+0x380>
   10b10:	andeq	r9, r0, r4, lsl r8
   10b14:			; <UNDEFINED> instruction: 0x000097b0
   10b18:			; <UNDEFINED> instruction: 0x000096b8
   10b1c:	andeq	r9, r0, r0, ror #11
   10b20:	andeq	r9, r0, ip, lsl #10
   10b24:	andeq	sl, r1, ip, ror r7

00010b28 <btbb_pcapng_create_file@@Base>:
   10b28:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10b2c:	mov	r4, r1
   10b30:	strd	r6, [sp, #8]
   10b34:	mov	r7, r2
   10b38:	strd	r8, [sp, #16]
   10b3c:	mov	r9, r0
   10b40:	mov	r0, #28
   10b44:	ldr	r8, [pc, #364]	; 10cb8 <btbb_pcapng_create_file@@Base+0x190>
   10b48:	str	lr, [sp, #24]
   10b4c:	sub	sp, sp, #292	; 0x124
   10b50:	bl	2288 <malloc@plt>
   10b54:	subs	r6, r0, #0
   10b58:	add	r8, pc, r8
   10b5c:	beq	10cb0 <btbb_pcapng_create_file@@Base+0x188>
   10b60:	add	r5, sp, #28
   10b64:	mov	r2, #260	; 0x104
   10b68:	mov	r0, r5
   10b6c:	mov	r1, #0
   10b70:	bl	2384 <memset@plt>
   10b74:	mov	r3, #3
   10b78:	cmp	r4, #0
   10b7c:	strh	r3, [r5]
   10b80:	beq	10bac <btbb_pcapng_create_file@@Base+0x84>
   10b84:	add	r3, sp, #32
   10b88:	mov	r1, r4
   10b8c:	mov	r0, r3
   10b90:	mov	r2, #256	; 0x100
   10b94:	bl	239c <strncpy@plt>
   10b98:	mov	r2, #0
   10b9c:	mov	r4, r5
   10ba0:	strb	r2, [sp, #287]	; 0x11f
   10ba4:	bl	22f4 <strlen@plt>
   10ba8:	strh	r0, [r5, #2]
   10bac:	bl	2348 <getpagesize@plt>
   10bb0:	ldr	r2, [pc, #260]	; 10cbc <btbb_pcapng_create_file@@Base+0x194>
   10bb4:	mov	ip, r0
   10bb8:	mov	lr, #255	; 0xff
   10bbc:	mov	r0, #400	; 0x190
   10bc0:	mov	r1, r9
   10bc4:	mov	r3, ip
   10bc8:	ldr	r2, [r8, r2]
   10bcc:	str	lr, [sp]
   10bd0:	stmib	sp, {r0, r4, ip}
   10bd4:	mov	r0, r6
   10bd8:	bl	21bc <pcapng_create@plt>
   10bdc:	cmp	r0, #0
   10be0:	rsbne	r4, r0, #0
   10be4:	beq	10c1c <btbb_pcapng_create_file@@Base+0xf4>
   10be8:	mov	r0, r6
   10bec:	bl	2108 <free@plt>
   10bf0:	mov	r0, r4
   10bf4:	add	sp, sp, #292	; 0x124
   10bf8:	ldrd	r4, [sp]
   10bfc:	ldrd	r6, [sp, #8]
   10c00:	ldrd	r8, [sp, #16]
   10c04:	add	sp, sp, #24
   10c08:	pop	{pc}		; (ldr pc, [sp], #4)
   10c0c:	add	r2, r2, #3
   10c10:	bic	r2, r2, #3
   10c14:	add	r2, r2, #4
   10c18:	add	r4, r4, r2
   10c1c:	adds	r0, r4, #0
   10c20:	mov	r1, #0
   10c24:	movne	r0, #1
   10c28:	b	10c50 <btbb_pcapng_create_file@@Base+0x128>
   10c2c:	ldrh	r3, [r4]
   10c30:	mov	r1, #1
   10c34:	cmp	r3, #0
   10c38:	beq	10c70 <btbb_pcapng_create_file@@Base+0x148>
   10c3c:	ldrh	r2, [r4, #2]
   10c40:	cmp	r2, #0
   10c44:	beq	10c70 <btbb_pcapng_create_file@@Base+0x148>
   10c48:	cmp	r3, #9
   10c4c:	bne	10c0c <btbb_pcapng_create_file@@Base+0xe4>
   10c50:	eor	r3, r1, #1
   10c54:	tst	r0, r3
   10c58:	bne	10c2c <btbb_pcapng_create_file@@Base+0x104>
   10c5c:	cmp	r1, #0
   10c60:	beq	10c70 <btbb_pcapng_create_file@@Base+0x148>
   10c64:	mov	r4, #0
   10c68:	str	r6, [r7]
   10c6c:	b	10bf0 <btbb_pcapng_create_file@@Base+0xc8>
   10c70:	ldr	r2, [pc, #72]	; 10cc0 <btbb_pcapng_create_file@@Base+0x198>
   10c74:	add	r3, sp, #20
   10c78:	mov	r0, r6
   10c7c:	mov	r1, r3
   10c80:	add	r2, pc, r2
   10c84:	ldr	ip, [r2]
   10c88:	ldrb	r2, [r2, #4]
   10c8c:	str	ip, [sp, #20]
   10c90:	strb	r2, [sp, #24]
   10c94:	bl	20fc <pcapng_append_interface_option@plt>
   10c98:	subs	r4, r0, #0
   10c9c:	beq	10c64 <btbb_pcapng_create_file@@Base+0x13c>
   10ca0:	mov	r0, r6
   10ca4:	rsb	r4, r4, #0
   10ca8:	bl	245c <pcapng_close@plt>
   10cac:	b	10be8 <btbb_pcapng_create_file@@Base+0xc0>
   10cb0:	mvn	r4, #4
   10cb4:	b	10bf0 <btbb_pcapng_create_file@@Base+0xc8>
   10cb8:	andeq	sl, r1, r0, lsr #9
   10cbc:	muleq	r0, r4, r1
   10cc0:	andeq	r9, r0, ip, lsr r2

00010cc4 <btbb_pcapng_append_packet@@Base>:
   10cc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10cc8:	strd	r6, [sp, #8]
   10ccc:	strd	r8, [sp, #16]
   10cd0:	strd	sl, [sp, #24]
   10cd4:	add	fp, sp, #32
   10cd8:	str	lr, [sp, #32]
   10cdc:	sub	sp, sp, #492	; 0x1ec
   10ce0:	sub	r6, fp, #488	; 0x1e8
   10ce4:	ldrsb	r9, [fp, #4]
   10ce8:	str	r0, [fp, #-524]	; 0xfffffdf4
   10cec:	ldrsb	r8, [fp, #8]
   10cf0:	str	r2, [fp, #-508]	; 0xfffffe04
   10cf4:	ldr	r5, [fp, #12]
   10cf8:	str	r3, [fp, #-520]	; 0xfffffdf8
   10cfc:	ldrb	sl, [fp, #16]
   10d00:	cmp	r8, r9
   10d04:	movlt	r2, #23
   10d08:	movge	r2, #19
   10d0c:	ldr	r0, [fp, #20]
   10d10:	movlt	r1, #7
   10d14:	movge	r1, #3
   10d18:	cmn	r5, #1
   10d1c:	bic	r5, r5, #-16777216	; 0xff000000
   10d20:	moveq	r2, r1
   10d24:	cmp	sl, #255	; 0xff
   10d28:	orr	r5, r5, sl, lsl #24
   10d2c:	orrne	r2, r2, #128	; 0x80
   10d30:	uxth	r3, r2
   10d34:	str	r3, [fp, #-496]	; 0xfffffe10
   10d38:	bl	22e8 <btbb_packet_get_payload_length@plt>
   10d3c:	add	r2, r0, #7
   10d40:	mov	r4, r0
   10d44:	ldr	r0, [fp, #20]
   10d48:	bic	r2, r2, #7
   10d4c:	sub	sp, sp, r2
   10d50:	mov	r1, sp
   10d54:	bl	20b4 <btbb_get_payload_packed@plt>
   10d58:	cmp	r4, #400	; 0x190
   10d5c:	ldr	r0, [fp, #20]
   10d60:	movge	r4, #400	; 0x190
   10d64:	bl	242c <btbb_packet_get_channel@plt>
   10d68:	str	r0, [fp, #-500]	; 0xfffffe0c
   10d6c:	ldr	r0, [fp, #20]
   10d70:	bl	2120 <btbb_packet_get_ac_errors@plt>
   10d74:	str	r0, [fp, #-504]	; 0xfffffe08
   10d78:	ldr	r0, [fp, #20]
   10d7c:	bl	2360 <btbb_packet_get_transport@plt>
   10d80:	mov	r1, r0
   10d84:	ldr	r0, [fp, #20]
   10d88:	str	r1, [fp, #-516]	; 0xfffffdfc
   10d8c:	bl	2114 <btbb_packet_get_modulation@plt>
   10d90:	mov	r7, r0
   10d94:	ldr	r0, [fp, #20]
   10d98:	bl	23b4 <btbb_packet_get_lap@plt>
   10d9c:	mov	r2, r0
   10da0:	ldr	r0, [fp, #20]
   10da4:	str	r2, [fp, #-512]	; 0xfffffe00
   10da8:	bl	2318 <btbb_packet_get_header_packed@plt>
   10dac:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   10db0:	mov	ip, #6
   10db4:	cmp	r4, #0
   10db8:	ldr	r2, [fp, #-508]	; 0xfffffe04
   10dbc:	str	ip, [fp, #-488]	; 0xfffffe18
   10dc0:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   10dc4:	str	r3, [fp, #-476]	; 0xfffffe24
   10dc8:	mov	r3, #0
   10dcc:	strb	r9, [fp, #-459]	; 0xfffffe35
   10dd0:	str	r3, [fp, #-480]	; 0xfffffe20
   10dd4:	str	r2, [fp, #-472]	; 0xfffffe28
   10dd8:	ldr	r2, [fp, #-500]	; 0xfffffe0c
   10ddc:	orr	r7, r7, r1, lsl #4
   10de0:	add	r1, r4, #61	; 0x3d
   10de4:	strh	r3, [r6, #34]	; 0x22
   10de8:	bic	sl, r1, #3
   10dec:	add	r1, r4, #22
   10df0:	strb	r3, [fp, #-455]	; 0xfffffe39
   10df4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   10df8:	str	sl, [fp, #-484]	; 0xfffffe1c
   10dfc:	str	r1, [fp, #-468]	; 0xfffffe2c
   10e00:	strb	r2, [fp, #-460]	; 0xfffffe34
   10e04:	ldr	r2, [fp, #-504]	; 0xfffffe08
   10e08:	str	r1, [fp, #-464]	; 0xfffffe30
   10e0c:	strb	r8, [fp, #-458]	; 0xfffffe36
   10e10:	str	r5, [fp, #-448]	; 0xfffffe40
   10e14:	str	r0, [fp, #-444]	; 0xfffffe44
   10e18:	strb	r2, [fp, #-457]	; 0xfffffe37
   10e1c:	ldr	r2, [fp, #-512]	; 0xfffffe00
   10e20:	strb	r7, [fp, #-456]	; 0xfffffe38
   10e24:	strh	r3, [r6, #48]	; 0x30
   10e28:	str	r2, [fp, #-452]	; 0xfffffe3c
   10e2c:	beq	10e54 <btbb_pcapng_append_packet@@Base+0x190>
   10e30:	cmp	r4, #400	; 0x190
   10e34:	bhi	10e94 <btbb_pcapng_append_packet@@Base+0x1d0>
   10e38:	mov	r2, r4
   10e3c:	mov	r1, sp
   10e40:	add	r0, r6, #50	; 0x32
   10e44:	bl	212c <memcpy@plt>
   10e48:	ldr	r3, [fp, #-496]	; 0xfffffe10
   10e4c:	orr	r3, r3, #32
   10e50:	strh	r3, [r6, #48]	; 0x30
   10e54:	sub	r3, fp, #36	; 0x24
   10e58:	mov	r2, #0
   10e5c:	ldr	r0, [fp, #-524]	; 0xfffffdf4
   10e60:	add	r3, r3, sl
   10e64:	mov	r1, r6
   10e68:	str	r2, [r3, #-460]	; 0xfffffe34
   10e6c:	str	sl, [r3, #-456]	; 0xfffffe38
   10e70:	bl	2354 <pcapng_append_packet@plt>
   10e74:	rsb	r0, r0, #0
   10e78:	sub	sp, fp, #32
   10e7c:	ldrd	r4, [sp]
   10e80:	ldrd	r6, [sp, #8]
   10e84:	ldrd	r8, [sp, #16]
   10e88:	ldrd	sl, [sp, #24]
   10e8c:	add	sp, sp, #32
   10e90:	pop	{pc}		; (ldr pc, [sp], #4)
   10e94:	ldr	r3, [pc, #28]	; 10eb8 <btbb_pcapng_append_packet@@Base+0x1f4>
   10e98:	mov	r2, #221	; 0xdd
   10e9c:	ldr	r1, [pc, #24]	; 10ebc <btbb_pcapng_append_packet@@Base+0x1f8>
   10ea0:	ldr	r0, [pc, #24]	; 10ec0 <btbb_pcapng_append_packet@@Base+0x1fc>
   10ea4:	add	r3, pc, r3
   10ea8:	add	r3, r3, #8
   10eac:	add	r1, pc, r1
   10eb0:	add	r0, pc, r0
   10eb4:	bl	24b0 <__assert_fail@plt>
   10eb8:	andeq	r9, r0, r8, lsl r0
   10ebc:	andeq	r9, r0, r4, rrx
   10ec0:	strheq	r9, [r0], -r0

00010ec4 <btbb_pcapng_record_bdaddr@@Base>:
   10ec4:	str	r4, [sp, #-8]!
   10ec8:	lsr	r4, r3, #8
   10ecc:	movw	ip, #54080	; 0xd340
   10ed0:	movt	ip, #12
   10ed4:	str	lr, [sp, #4]
   10ed8:	sub	sp, sp, #16
   10edc:	ldrb	lr, [sp, #24]
   10ee0:	add	r1, sp, #4
   10ee4:	str	ip, [sp, #4]
   10ee8:	str	r2, [sp, #8]
   10eec:	ldrb	r2, [sp, #28]
   10ef0:	strb	r3, [sp, #12]
   10ef4:	strb	r4, [sp, #13]
   10ef8:	strb	lr, [sp, #14]
   10efc:	strb	r2, [sp, #15]
   10f00:	bl	20fc <pcapng_append_interface_option@plt>
   10f04:	rsb	r0, r0, #0
   10f08:	add	sp, sp, #16
   10f0c:	ldr	r4, [sp]
   10f10:	add	sp, sp, #4
   10f14:	pop	{pc}		; (ldr pc, [sp], #4)

00010f18 <btbb_pcapng_record_btclock@@Base>:
   10f18:	push	{lr}		; (str lr, [sp, #-4]!)
   10f1c:	sub	sp, sp, #28
   10f20:	movw	r3, #54081	; 0xd341
   10f24:	movt	r3, #24
   10f28:	ldr	lr, [sp, #32]
   10f2c:	mov	r1, sp
   10f30:	ldr	ip, [sp, #36]	; 0x24
   10f34:	stm	sp, {r3, lr}
   10f38:	str	r2, [sp, #12]
   10f3c:	ldrd	r2, [sp, #40]	; 0x28
   10f40:	str	ip, [sp, #8]
   10f44:	strd	r2, [sp, #16]
   10f48:	bl	20fc <pcapng_append_interface_option@plt>
   10f4c:	rsb	r0, r0, #0
   10f50:	add	sp, sp, #28
   10f54:	pop	{pc}		; (ldr pc, [sp], #4)

00010f58 <btbb_pcapng_close@@Base>:
   10f58:	str	r4, [sp, #-8]!
   10f5c:	mov	r4, r0
   10f60:	str	lr, [sp, #4]
   10f64:	bl	245c <pcapng_close@plt>
   10f68:	cmp	r4, #0
   10f6c:	beq	10f78 <btbb_pcapng_close@@Base+0x20>
   10f70:	mov	r0, r4
   10f74:	bl	2108 <free@plt>
   10f78:	ldr	r4, [sp]
   10f7c:	add	sp, sp, #4
   10f80:	mvn	r0, #0
   10f84:	pop	{pc}		; (ldr pc, [sp], #4)

00010f88 <lell_pcapng_create_file@@Base>:
   10f88:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10f8c:	mov	r4, r1
   10f90:	strd	r6, [sp, #8]
   10f94:	mov	r7, r2
   10f98:	strd	r8, [sp, #16]
   10f9c:	mov	r9, r0
   10fa0:	mov	r0, #28
   10fa4:	ldr	r8, [pc, #364]	; 11118 <lell_pcapng_create_file@@Base+0x190>
   10fa8:	str	lr, [sp, #24]
   10fac:	sub	sp, sp, #292	; 0x124
   10fb0:	bl	2288 <malloc@plt>
   10fb4:	subs	r6, r0, #0
   10fb8:	add	r8, pc, r8
   10fbc:	beq	11110 <lell_pcapng_create_file@@Base+0x188>
   10fc0:	add	r5, sp, #28
   10fc4:	mov	r2, #260	; 0x104
   10fc8:	mov	r0, r5
   10fcc:	mov	r1, #0
   10fd0:	bl	2384 <memset@plt>
   10fd4:	mov	r3, #3
   10fd8:	cmp	r4, #0
   10fdc:	strh	r3, [r5]
   10fe0:	beq	1100c <lell_pcapng_create_file@@Base+0x84>
   10fe4:	add	r3, sp, #32
   10fe8:	mov	r1, r4
   10fec:	mov	r0, r3
   10ff0:	mov	r2, #256	; 0x100
   10ff4:	bl	239c <strncpy@plt>
   10ff8:	mov	r2, #0
   10ffc:	mov	r4, r5
   11000:	strb	r2, [sp, #287]	; 0x11f
   11004:	bl	22f4 <strlen@plt>
   11008:	strh	r0, [r5, #2]
   1100c:	bl	2348 <getpagesize@plt>
   11010:	ldr	r2, [pc, #260]	; 1111c <lell_pcapng_create_file@@Base+0x194>
   11014:	mov	ip, r0
   11018:	mov	lr, #256	; 0x100
   1101c:	mov	r0, #64	; 0x40
   11020:	mov	r1, r9
   11024:	mov	r3, ip
   11028:	ldr	r2, [r8, r2]
   1102c:	str	lr, [sp]
   11030:	stmib	sp, {r0, r4, ip}
   11034:	mov	r0, r6
   11038:	bl	21bc <pcapng_create@plt>
   1103c:	cmp	r0, #0
   11040:	rsbne	r4, r0, #0
   11044:	beq	1107c <lell_pcapng_create_file@@Base+0xf4>
   11048:	mov	r0, r6
   1104c:	bl	2108 <free@plt>
   11050:	mov	r0, r4
   11054:	add	sp, sp, #292	; 0x124
   11058:	ldrd	r4, [sp]
   1105c:	ldrd	r6, [sp, #8]
   11060:	ldrd	r8, [sp, #16]
   11064:	add	sp, sp, #24
   11068:	pop	{pc}		; (ldr pc, [sp], #4)
   1106c:	add	r2, r2, #3
   11070:	bic	r2, r2, #3
   11074:	add	r2, r2, #4
   11078:	add	r4, r4, r2
   1107c:	adds	r0, r4, #0
   11080:	mov	r1, #0
   11084:	movne	r0, #1
   11088:	b	110b0 <lell_pcapng_create_file@@Base+0x128>
   1108c:	ldrh	r3, [r4]
   11090:	mov	r1, #1
   11094:	cmp	r3, #0
   11098:	beq	110d0 <lell_pcapng_create_file@@Base+0x148>
   1109c:	ldrh	r2, [r4, #2]
   110a0:	cmp	r2, #0
   110a4:	beq	110d0 <lell_pcapng_create_file@@Base+0x148>
   110a8:	cmp	r3, #9
   110ac:	bne	1106c <lell_pcapng_create_file@@Base+0xe4>
   110b0:	eor	r3, r1, #1
   110b4:	tst	r0, r3
   110b8:	bne	1108c <lell_pcapng_create_file@@Base+0x104>
   110bc:	cmp	r1, #0
   110c0:	beq	110d0 <lell_pcapng_create_file@@Base+0x148>
   110c4:	mov	r4, #0
   110c8:	str	r6, [r7]
   110cc:	b	11050 <lell_pcapng_create_file@@Base+0xc8>
   110d0:	ldr	r2, [pc, #72]	; 11120 <lell_pcapng_create_file@@Base+0x198>
   110d4:	add	r3, sp, #20
   110d8:	mov	r0, r6
   110dc:	mov	r1, r3
   110e0:	add	r2, pc, r2
   110e4:	ldr	ip, [r2]
   110e8:	ldrb	r2, [r2, #4]
   110ec:	str	ip, [sp, #20]
   110f0:	strb	r2, [sp, #24]
   110f4:	bl	20fc <pcapng_append_interface_option@plt>
   110f8:	subs	r4, r0, #0
   110fc:	beq	110c4 <lell_pcapng_create_file@@Base+0x13c>
   11100:	mov	r0, r6
   11104:	rsb	r4, r4, #0
   11108:	bl	245c <pcapng_close@plt>
   1110c:	b	11048 <lell_pcapng_create_file@@Base+0xc0>
   11110:	mvn	r4, #4
   11114:	b	11050 <lell_pcapng_create_file@@Base+0xc8>
   11118:	andeq	sl, r1, r0, asr #32
   1111c:	muleq	r0, r4, r1
   11120:	ldrdeq	r8, [r0], -ip

00011124 <lell_pcapng_record_connect_req@@Base>:
   11124:	str	r4, [sp, #-8]!
   11128:	movw	r4, #54144	; 0xd380
   1112c:	movt	r4, #46	; 0x2e
   11130:	str	lr, [sp, #4]
   11134:	sub	sp, sp, #48	; 0x30
   11138:	ldr	ip, [sp, #56]	; 0x38
   1113c:	mov	r1, sp
   11140:	str	r4, [sp]
   11144:	strd	r2, [sp, #4]
   11148:	ldr	r4, [ip]
   1114c:	ldr	r2, [ip, #4]
   11150:	ldr	r3, [ip, #8]
   11154:	str	r4, [sp, #12]
   11158:	ldr	r4, [ip, #12]
   1115c:	strd	r2, [sp, #16]
   11160:	ldr	r2, [ip, #16]
   11164:	str	r4, [sp, #24]
   11168:	ldr	r3, [ip, #20]
   1116c:	ldr	r4, [ip, #24]
   11170:	strd	r2, [sp, #28]
   11174:	ldr	r2, [ip, #28]
   11178:	str	r4, [sp, #36]	; 0x24
   1117c:	ldrh	r3, [ip, #32]
   11180:	str	r2, [sp, #40]	; 0x28
   11184:	strh	r3, [sp, #44]	; 0x2c
   11188:	bl	20fc <pcapng_append_interface_option@plt>
   1118c:	rsb	r0, r0, #0
   11190:	add	sp, sp, #48	; 0x30
   11194:	ldr	r4, [sp]
   11198:	add	sp, sp, #4
   1119c:	pop	{pc}		; (ldr pc, [sp], #4)

000111a0 <lell_pcapng_append_packet@@Base>:
   111a0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   111a4:	strd	r6, [sp, #8]
   111a8:	strd	r8, [sp, #16]
   111ac:	strd	sl, [sp, #24]
   111b0:	mov	sl, r0
   111b4:	mov	fp, r2
   111b8:	str	lr, [sp, #32]
   111bc:	sub	sp, sp, #324	; 0x144
   111c0:	add	r1, sp, #360	; 0x168
   111c4:	ldr	r4, [sp, #372]	; 0x174
   111c8:	str	r3, [sp, #12]
   111cc:	add	r3, sp, #364	; 0x16c
   111d0:	ldrsb	r9, [r1]
   111d4:	ldrsb	r8, [r3]
   111d8:	mov	r0, r4
   111dc:	cmp	r8, r9
   111e0:	movlt	r5, #55	; 0x37
   111e4:	movge	r5, #51	; 0x33
   111e8:	movlt	r7, #39	; 0x27
   111ec:	movge	r7, #35	; 0x23
   111f0:	bl	20d8 <lell_packet_is_data@plt>
   111f4:	ldr	r3, [r4, #72]	; 0x48
   111f8:	cmp	r0, #0
   111fc:	moveq	r7, r5
   11200:	ldrb	r1, [r4, #69]	; 0x45
   11204:	ldrb	ip, [r4, #92]	; 0x5c
   11208:	add	r2, r3, #9
   1120c:	cmp	r2, #255	; 0xff
   11210:	bhi	112f4 <lell_pcapng_append_packet@@Base+0x154>
   11214:	add	r0, r3, #19
   11218:	add	r5, r3, #58	; 0x3a
   1121c:	ldr	r3, [sp, #12]
   11220:	bic	r5, r5, #3
   11224:	mov	lr, #6
   11228:	add	r6, sp, #16
   1122c:	str	r0, [sp, #36]	; 0x24
   11230:	str	r0, [sp, #40]	; 0x28
   11234:	add	r0, sp, #54	; 0x36
   11238:	strb	r1, [sp, #44]	; 0x2c
   1123c:	mov	r1, r4
   11240:	str	r3, [sp, #28]
   11244:	mov	r3, #0
   11248:	str	lr, [sp, #16]
   1124c:	str	r5, [sp, #20]
   11250:	str	r3, [sp, #24]
   11254:	ldr	r3, [sp, #368]	; 0x170
   11258:	str	fp, [sp, #32]
   1125c:	strb	r9, [sp, #45]	; 0x2d
   11260:	strb	r8, [sp, #46]	; 0x2e
   11264:	strb	ip, [sp, #47]	; 0x2f
   11268:	str	r3, [sp, #48]	; 0x30
   1126c:	strh	r7, [sp, #52]	; 0x34
   11270:	bl	212c <memcpy@plt>
   11274:	add	r3, sp, #320	; 0x140
   11278:	mov	r1, r6
   1127c:	add	r2, r3, r5
   11280:	mov	r3, #0
   11284:	mov	r0, sl
   11288:	str	r3, [r2, #-312]	; 0xfffffec8
   1128c:	str	r5, [r2, #-308]	; 0xfffffecc
   11290:	bl	2354 <pcapng_append_packet@plt>
   11294:	rsb	r5, r0, #0
   11298:	cmp	r5, #0
   1129c:	beq	112c0 <lell_pcapng_append_packet@@Base+0x120>
   112a0:	mov	r0, r5
   112a4:	add	sp, sp, #324	; 0x144
   112a8:	ldrd	r4, [sp]
   112ac:	ldrd	r6, [sp, #8]
   112b0:	ldrd	r8, [sp, #16]
   112b4:	ldrd	sl, [sp, #24]
   112b8:	add	sp, sp, #32
   112bc:	pop	{pc}		; (ldr pc, [sp], #4)
   112c0:	mov	r0, r4
   112c4:	bl	20d8 <lell_packet_is_data@plt>
   112c8:	cmp	r0, #0
   112cc:	bne	112a0 <lell_pcapng_append_packet@@Base+0x100>
   112d0:	ldrb	r3, [r4, #80]	; 0x50
   112d4:	cmp	r3, #5
   112d8:	bne	112a0 <lell_pcapng_append_packet@@Base+0x100>
   112dc:	mov	r2, fp
   112e0:	mov	r0, sl
   112e4:	str	r4, [sp]
   112e8:	ldr	r3, [sp, #12]
   112ec:	bl	2324 <lell_pcapng_record_connect_req@plt>
   112f0:	b	112a0 <lell_pcapng_append_packet@@Base+0x100>
   112f4:	ldr	r3, [pc, #28]	; 11318 <lell_pcapng_append_packet@@Base+0x178>
   112f8:	movw	r2, #441	; 0x1b9
   112fc:	ldr	r1, [pc, #24]	; 1131c <lell_pcapng_append_packet@@Base+0x17c>
   11300:	ldr	r0, [pc, #24]	; 11320 <lell_pcapng_append_packet@@Base+0x180>
   11304:	add	r3, pc, r3
   11308:	add	r3, r3, #40	; 0x28
   1130c:	add	r1, pc, r1
   11310:	add	r0, pc, r0
   11314:	bl	24b0 <__assert_fail@plt>
   11318:			; <UNDEFINED> instruction: 0x00008bb8
   1131c:	andeq	r8, r0, r4, lsl #24
   11320:	andeq	r8, r0, r8, lsl #25

00011324 <lell_pcapng_close@@Base>:
   11324:	str	r4, [sp, #-8]!
   11328:	mov	r4, r0
   1132c:	str	lr, [sp, #4]
   11330:	bl	245c <pcapng_close@plt>
   11334:	cmp	r4, #0
   11338:	beq	11344 <lell_pcapng_close@@Base+0x20>
   1133c:	mov	r0, r4
   11340:	bl	2108 <free@plt>
   11344:	ldr	r4, [sp]
   11348:	add	sp, sp, #4
   1134c:	mvn	r0, #0
   11350:	pop	{pc}		; (ldr pc, [sp], #4)
   11354:	cmp	r3, #0
   11358:	cmpeq	r2, #0
   1135c:	bne	11374 <lell_pcapng_close@@Base+0x50>
   11360:	cmp	r1, #0
   11364:	cmpeq	r0, #0
   11368:	mvnne	r1, #0
   1136c:	mvnne	r0, #0
   11370:	b	11390 <lell_pcapng_close@@Base+0x6c>
   11374:	sub	sp, sp, #8
   11378:	push	{sp, lr}
   1137c:	bl	11404 <lell_pcapng_close@@Base+0xe0>
   11380:	ldr	lr, [sp, #4]
   11384:	add	sp, sp, #8
   11388:	pop	{r2, r3}
   1138c:	bx	lr
   11390:	push	{r1, lr}
   11394:	mov	r0, #8
   11398:	bl	2078 <raise@plt>
   1139c:	pop	{r1, pc}
   113a0:	ldr	ip, [pc, #80]	; 113f8 <lell_pcapng_close@@Base+0xd4>
   113a4:	ldr	r2, [pc, #80]	; 113fc <lell_pcapng_close@@Base+0xd8>
   113a8:	and	r3, ip, r0, lsr #1
   113ac:	and	ip, ip, r1, lsr #1
   113b0:	sub	ip, r1, ip
   113b4:	sub	r0, r0, r3
   113b8:	and	r3, r0, r2
   113bc:	and	r1, ip, r2
   113c0:	and	r0, r2, r0, lsr #2
   113c4:	and	r2, r2, ip, lsr #2
   113c8:	add	r3, r3, r0
   113cc:	add	r1, r1, r2
   113d0:	ldr	r0, [pc, #40]	; 11400 <lell_pcapng_close@@Base+0xdc>
   113d4:	add	r1, r1, r1, lsr #4
   113d8:	add	r3, r3, r3, lsr #4
   113dc:	and	r3, r3, r0
   113e0:	and	r0, r0, r1
   113e4:	add	r0, r0, r3
   113e8:	add	r0, r0, r0, lsl #8
   113ec:	add	r0, r0, r0, lsl #16
   113f0:	lsr	r0, r0, #24
   113f4:	bx	lr
   113f8:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
   113fc:	teqcc	r3, #-872415232	; 0xcc000000
   11400:	svceq	0x000f0f0f
   11404:	cmp	r1, r3
   11408:	cmpeq	r0, r2
   1140c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11410:	mov	r4, r0
   11414:	movcc	r0, #0
   11418:	mov	r5, r1
   1141c:	ldr	lr, [sp, #36]	; 0x24
   11420:	movcc	r1, r0
   11424:	bcc	11520 <lell_pcapng_close@@Base+0x1fc>
   11428:	cmp	r3, #0
   1142c:	clzeq	ip, r2
   11430:	clzne	ip, r3
   11434:	addeq	ip, ip, #32
   11438:	cmp	r5, #0
   1143c:	clzeq	r1, r4
   11440:	addeq	r1, r1, #32
   11444:	clzne	r1, r5
   11448:	sub	ip, ip, r1
   1144c:	sub	sl, ip, #32
   11450:	lsl	r9, r3, ip
   11454:	rsb	fp, ip, #32
   11458:	orr	r9, r9, r2, lsl sl
   1145c:	orr	r9, r9, r2, lsr fp
   11460:	lsl	r8, r2, ip
   11464:	cmp	r5, r9
   11468:	cmpeq	r4, r8
   1146c:	movcc	r0, #0
   11470:	movcc	r1, r0
   11474:	bcc	11490 <lell_pcapng_close@@Base+0x16c>
   11478:	mov	r0, #1
   1147c:	subs	r4, r4, r8
   11480:	lsl	r1, r0, sl
   11484:	orr	r1, r1, r0, lsr fp
   11488:	lsl	r0, r0, ip
   1148c:	sbc	r5, r5, r9
   11490:	cmp	ip, #0
   11494:	beq	11520 <lell_pcapng_close@@Base+0x1fc>
   11498:	lsr	r6, r8, #1
   1149c:	orr	r6, r6, r9, lsl #31
   114a0:	lsr	r7, r9, #1
   114a4:	mov	r2, ip
   114a8:	b	114cc <lell_pcapng_close@@Base+0x1a8>
   114ac:	subs	r3, r4, r6
   114b0:	sbc	r8, r5, r7
   114b4:	adds	r3, r3, r3
   114b8:	adc	r8, r8, r8
   114bc:	adds	r4, r3, #1
   114c0:	adc	r5, r8, #0
   114c4:	subs	r2, r2, #1
   114c8:	beq	114e8 <lell_pcapng_close@@Base+0x1c4>
   114cc:	cmp	r5, r7
   114d0:	cmpeq	r4, r6
   114d4:	bcs	114ac <lell_pcapng_close@@Base+0x188>
   114d8:	adds	r4, r4, r4
   114dc:	adc	r5, r5, r5
   114e0:	subs	r2, r2, #1
   114e4:	bne	114cc <lell_pcapng_close@@Base+0x1a8>
   114e8:	lsr	r3, r4, ip
   114ec:	orr	r3, r3, r5, lsl fp
   114f0:	lsr	r2, r5, ip
   114f4:	orr	r3, r3, r5, lsr sl
   114f8:	adds	r0, r0, r4
   114fc:	mov	r4, r3
   11500:	lsl	r3, r2, ip
   11504:	orr	r3, r3, r4, lsl sl
   11508:	lsl	ip, r4, ip
   1150c:	orr	r3, r3, r4, lsr fp
   11510:	adc	r1, r1, r5
   11514:	subs	r0, r0, ip
   11518:	mov	r5, r2
   1151c:	sbc	r1, r1, r3
   11520:	cmp	lr, #0
   11524:	strdne	r4, [lr]
   11528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

0001152c <.fini>:
   1152c:	push	{r3, lr}
   11530:	pop	{r3, pc}
