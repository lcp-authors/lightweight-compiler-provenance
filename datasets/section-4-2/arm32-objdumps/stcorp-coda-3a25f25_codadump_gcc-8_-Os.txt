
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

00012174 <.init>:
   12174:	push	{r3, lr}
   12178:	bl	135f4 <_start@@Base+0x3c>
   1217c:	pop	{r3, pc}

Disassembly of section .plt:

00012180 <coda_cursor_get_byte_size@plt-0x14>:
   12180:	push	{lr}		; (str lr, [sp, #-4]!)
   12184:	ldr	lr, [pc, #4]	; 12190 <coda_cursor_get_byte_size@plt-0x4>
   12188:	add	lr, pc, lr
   1218c:	ldr	pc, [lr, #8]!
   12190:	andeq	r8, r1, r0, ror lr

00012194 <coda_cursor_get_byte_size@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #24, 20	; 0x18000
   1219c:	ldr	pc, [ip, #3696]!	; 0xe70

000121a0 <coda_type_get_special_type_name@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #24, 20	; 0x18000
   121a8:	ldr	pc, [ip, #3688]!	; 0xe68

000121ac <coda_set_option_use_fast_size_expressions@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #24, 20	; 0x18000
   121b4:	ldr	pc, [ip, #3680]!	; 0xe60

000121b8 <raise@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #24, 20	; 0x18000
   121c0:	ldr	pc, [ip, #3672]!	; 0xe58

000121c4 <coda_get_option_bypass_special_types@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #24, 20	; 0x18000
   121cc:	ldr	pc, [ip, #3664]!	; 0xe50

000121d0 <coda_set_option_perform_boundary_checks@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #24, 20	; 0x18000
   121d8:	ldr	pc, [ip, #3656]!	; 0xe48

000121dc <strcmp@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #24, 20	; 0x18000
   121e4:	ldr	pc, [ip, #3648]!	; 0xe40

000121e8 <coda_type_get_record_field_hidden_status@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #24, 20	; 0x18000
   121f0:	ldr	pc, [ip, #3640]!	; 0xe38

000121f4 <printf@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #24, 20	; 0x18000
   121fc:	ldr	pc, [ip, #3632]!	; 0xe30

00012200 <coda_cursor_get_record_field_available_status@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #24, 20	; 0x18000
   12208:	ldr	pc, [ip, #3624]!	; 0xe28

0001220c <fopen@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #24, 20	; 0x18000
   12214:	ldr	pc, [ip, #3616]!	; 0xe20

00012218 <coda_set_error@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #24, 20	; 0x18000
   12220:	ldr	pc, [ip, #3608]!	; 0xe18

00012224 <coda_open@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #24, 20	; 0x18000
   1222c:	ldr	pc, [ip, #3600]!	; 0xe10

00012230 <fflush@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #24, 20	; 0x18000
   12238:	ldr	pc, [ip, #3592]!	; 0xe08

0001223c <coda_time_double_to_string@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #24, 20	; 0x18000
   12244:	ldr	pc, [ip, #3584]!	; 0xe00

00012248 <coda_cursor_get_num_elements@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #24, 20	; 0x18000
   12250:	ldr	pc, [ip, #3576]!	; 0xdf8

00012254 <coda_str64u@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #24, 20	; 0x18000
   1225c:	ldr	pc, [ip, #3568]!	; 0xdf0

00012260 <free@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #24, 20	; 0x18000
   12268:	ldr	pc, [ip, #3560]!	; 0xde8

0001226c <coda_set_option_use_mmap@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #24, 20	; 0x18000
   12274:	ldr	pc, [ip, #3552]!	; 0xde0

00012278 <coda_set_definition_path_conditional@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #24, 20	; 0x18000
   12280:	ldr	pc, [ip, #3544]!	; 0xdd8

00012284 <coda_cursor_read_uint32@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #24, 20	; 0x18000
   1228c:	ldr	pc, [ip, #3536]!	; 0xdd0

00012290 <coda_set_option_bypass_special_types@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #24, 20	; 0x18000
   12298:	ldr	pc, [ip, #3528]!	; 0xdc8

0001229c <coda_type_get_record_field_type@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #24, 20	; 0x18000
   122a4:	ldr	pc, [ip, #3520]!	; 0xdc0

000122a8 <coda_cursor_get_type@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #24, 20	; 0x18000
   122b0:	ldr	pc, [ip, #3512]!	; 0xdb8

000122b4 <memcpy@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #24, 20	; 0x18000
   122bc:	ldr	pc, [ip, #3504]!	; 0xdb0

000122c0 <coda_isInf@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #24, 20	; 0x18000
   122c8:	ldr	pc, [ip, #3496]!	; 0xda8

000122cc <coda_type_get_bit_size@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #24, 20	; 0x18000
   122d4:	ldr	pc, [ip, #3488]!	; 0xda0

000122d8 <coda_type_get_record_field_available_status@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #24, 20	; 0x18000
   122e0:	ldr	pc, [ip, #3480]!	; 0xd98

000122e4 <coda_cursor_has_attributes@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #24, 20	; 0x18000
   122ec:	ldr	pc, [ip, #3472]!	; 0xd90

000122f0 <coda_cursor_get_type_class@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #24, 20	; 0x18000
   122f8:	ldr	pc, [ip, #3464]!	; 0xd88

000122fc <coda_set_definition_path@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #24, 20	; 0x18000
   12304:	ldr	pc, [ip, #3456]!	; 0xd80

00012308 <coda_get_product_format@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #24, 20	; 0x18000
   12310:	ldr	pc, [ip, #3448]!	; 0xd78

00012314 <coda_type_get_unit@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #24, 20	; 0x18000
   1231c:	ldr	pc, [ip, #3440]!	; 0xd70

00012320 <coda_type_get_description@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #24, 20	; 0x18000
   12328:	ldr	pc, [ip, #3432]!	; 0xd68

0001232c <coda_cursor_get_special_type@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #24, 20	; 0x18000
   12334:	ldr	pc, [ip, #3424]!	; 0xd60

00012338 <coda_cursor_goto_first_array_element@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #24, 20	; 0x18000
   12340:	ldr	pc, [ip, #3416]!	; 0xd58

00012344 <coda_cursor_set_product@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #24, 20	; 0x18000
   1234c:	ldr	pc, [ip, #3408]!	; 0xd50

00012350 <strcpy@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #24, 20	; 0x18000
   12358:	ldr	pc, [ip, #3400]!	; 0xd48

0001235c <coda_cursor_goto_first_record_field@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #24, 20	; 0x18000
   12364:	ldr	pc, [ip, #3392]!	; 0xd40

00012368 <coda_cursor_goto_record_field_by_index@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #24, 20	; 0x18000
   12370:	ldr	pc, [ip, #3384]!	; 0xd38

00012374 <coda_done@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #24, 20	; 0x18000
   1237c:	ldr	pc, [ip, #3376]!	; 0xd30

00012380 <puts@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #24, 20	; 0x18000
   12388:	ldr	pc, [ip, #3368]!	; 0xd28

0001238c <coda_cursor_get_read_type@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #24, 20	; 0x18000
   12394:	ldr	pc, [ip, #3360]!	; 0xd20

00012398 <malloc@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #24, 20	; 0x18000
   123a0:	ldr	pc, [ip, #3352]!	; 0xd18

000123a4 <__libc_start_main@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #24, 20	; 0x18000
   123ac:	ldr	pc, [ip, #3344]!	; 0xd10

000123b0 <__gmon_start__@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #24, 20	; 0x18000
   123b8:	ldr	pc, [ip, #3336]!	; 0xd08

000123bc <coda_cursor_read_string@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #24, 20	; 0x18000
   123c4:	ldr	pc, [ip, #3328]!	; 0xd00

000123c8 <coda_cursor_goto_parent@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #24, 20	; 0x18000
   123d0:	ldr	pc, [ip, #3320]!	; 0xcf8

000123d4 <coda_type_get_num_record_fields@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #24, 20	; 0x18000
   123dc:	ldr	pc, [ip, #3312]!	; 0xcf0

000123e0 <exit@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #24, 20	; 0x18000
   123e8:	ldr	pc, [ip, #3304]!	; 0xce8

000123ec <coda_type_get_read_type@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #24, 20	; 0x18000
   123f4:	ldr	pc, [ip, #3296]!	; 0xce0

000123f8 <coda_cursor_get_string_length@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #24, 20	; 0x18000
   12400:	ldr	pc, [ip, #3288]!	; 0xcd8

00012404 <coda_cursor_read_uint64@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #24, 20	; 0x18000
   1240c:	ldr	pc, [ip, #3280]!	; 0xcd0

00012410 <coda_cursor_read_double@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #24, 20	; 0x18000
   12418:	ldr	pc, [ip, #3272]!	; 0xcc8

0001241c <coda_isNaN@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #24, 20	; 0x18000
   12424:	ldr	pc, [ip, #3264]!	; 0xcc0

00012428 <fprintf@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #24, 20	; 0x18000
   12430:	ldr	pc, [ip, #3256]!	; 0xcb8

00012434 <coda_cursor_goto_next_array_element@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #24, 20	; 0x18000
   1243c:	ldr	pc, [ip, #3248]!	; 0xcb0

00012440 <coda_open_as@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #24, 20	; 0x18000
   12448:	ldr	pc, [ip, #3240]!	; 0xca8

0001244c <coda_init@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #24, 20	; 0x18000
   12454:	ldr	pc, [ip, #3232]!	; 0xca0

00012458 <coda_set_option_perform_conversions@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #24, 20	; 0x18000
   12460:	ldr	pc, [ip, #3224]!	; 0xc98

00012464 <coda_cursor_goto_attributes@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #24, 20	; 0x18000
   1246c:	ldr	pc, [ip, #3216]!	; 0xc90

00012470 <coda_cursor_read_char@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #24, 20	; 0x18000
   12478:	ldr	pc, [ip, #3208]!	; 0xc88

0001247c <memset@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #24, 20	; 0x18000
   12484:	ldr	pc, [ip, #3200]!	; 0xc80

00012488 <putchar@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #24, 20	; 0x18000
   12490:	ldr	pc, [ip, #3192]!	; 0xc78

00012494 <strncpy@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #24, 20	; 0x18000
   1249c:	ldr	pc, [ip, #3184]!	; 0xc70

000124a0 <coda_type_get_special_type@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #24, 20	; 0x18000
   124a8:	ldr	pc, [ip, #3176]!	; 0xc68

000124ac <coda_type_get_record_union_status@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #24, 20	; 0x18000
   124b4:	ldr	pc, [ip, #3168]!	; 0xc60

000124b8 <coda_cursor_read_complex_double_split@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #24, 20	; 0x18000
   124c0:	ldr	pc, [ip, #3160]!	; 0xc58

000124c4 <coda_type_get_array_base_type@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #24, 20	; 0x18000
   124cc:	ldr	pc, [ip, #3152]!	; 0xc50

000124d0 <fclose@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #24, 20	; 0x18000
   124d8:	ldr	pc, [ip, #3144]!	; 0xc48

000124dc <coda_type_get_string_length@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #24, 20	; 0x18000
   124e4:	ldr	pc, [ip, #3136]!	; 0xc40

000124e8 <coda_type_get_native_type_name@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #24, 20	; 0x18000
   124f0:	ldr	pc, [ip, #3128]!	; 0xc38

000124f4 <coda_cursor_get_array_dim@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #24, 20	; 0x18000
   124fc:	ldr	pc, [ip, #3120]!	; 0xc30

00012500 <coda_cursor_has_ascii_content@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #24, 20	; 0x18000
   12508:	ldr	pc, [ip, #3112]!	; 0xc28

0001250c <coda_close@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #24, 20	; 0x18000
   12514:	ldr	pc, [ip, #3104]!	; 0xc20

00012518 <coda_cursor_read_int64@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #24, 20	; 0x18000
   12520:	ldr	pc, [ip, #3096]!	; 0xc18

00012524 <vfprintf@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #24, 20	; 0x18000
   1252c:	ldr	pc, [ip, #3088]!	; 0xc10

00012530 <coda_cursor_goto@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #24, 20	; 0x18000
   12538:	ldr	pc, [ip, #3080]!	; 0xc08

0001253c <coda_type_get_record_field_index_from_name@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #24, 20	; 0x18000
   12544:	ldr	pc, [ip, #3072]!	; 0xc00

00012548 <coda_cursor_read_complex_double_pair@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #24, 20	; 0x18000
   12550:	ldr	pc, [ip, #3064]!	; 0xbf8

00012554 <coda_cursor_goto_next_record_field@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #24, 20	; 0x18000
   1255c:	ldr	pc, [ip, #3056]!	; 0xbf0

00012560 <fputc@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #24, 20	; 0x18000
   12568:	ldr	pc, [ip, #3048]!	; 0xbe8

0001256c <coda_type_get_array_dim@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #24, 20	; 0x18000
   12574:	ldr	pc, [ip, #3040]!	; 0xbe0

00012578 <coda_cursor_get_bit_size@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #24, 20	; 0x18000
   12580:	ldr	pc, [ip, #3032]!	; 0xbd8

00012584 <atoi@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #24, 20	; 0x18000
   1258c:	ldr	pc, [ip, #3024]!	; 0xbd0

00012590 <coda_errno_to_string@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #24, 20	; 0x18000
   12598:	ldr	pc, [ip, #3016]!	; 0xbc8

0001259c <coda_cursor_use_base_type_of_special_type@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #24, 20	; 0x18000
   125a4:	ldr	pc, [ip, #3008]!	; 0xbc0

000125a8 <coda_cursor_get_available_union_field_index@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #24, 20	; 0x18000
   125b0:	ldr	pc, [ip, #3000]!	; 0xbb8

000125b4 <coda_cursor_read_int32@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #24, 20	; 0x18000
   125bc:	ldr	pc, [ip, #2992]!	; 0xbb0

000125c0 <coda_cursor_get_file_bit_offset@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #24, 20	; 0x18000
   125c8:	ldr	pc, [ip, #2984]!	; 0xba8

000125cc <coda_get_libcoda_version@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #24, 20	; 0x18000
   125d4:	ldr	pc, [ip, #2976]!	; 0xba0

000125d8 <coda_get_errno@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #24, 20	; 0x18000
   125e0:	ldr	pc, [ip, #2968]!	; 0xb98

000125e4 <coda_type_get_special_base_type@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #24, 20	; 0x18000
   125ec:	ldr	pc, [ip, #2960]!	; 0xb90

000125f0 <coda_type_get_record_field_name@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #24, 20	; 0x18000
   125f8:	ldr	pc, [ip, #2952]!	; 0xb88

000125fc <fputs@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #24, 20	; 0x18000
   12604:	ldr	pc, [ip, #2944]!	; 0xb80

00012608 <abort@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #24, 20	; 0x18000
   12610:	ldr	pc, [ip, #2936]!	; 0xb78

00012614 <coda_cursor_read_bits@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #24, 20	; 0x18000
   1261c:	ldr	pc, [ip, #2928]!	; 0xb70

00012620 <coda_str64@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #24, 20	; 0x18000
   12628:	ldr	pc, [ip, #2920]!	; 0xb68

0001262c <__assert_fail@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #24, 20	; 0x18000
   12634:	ldr	pc, [ip, #2912]!	; 0xb60

00012638 <coda_type_get_class@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #24, 20	; 0x18000
   12640:	ldr	pc, [ip, #2904]!	; 0xb58

Disassembly of section .text:

00012644 <main@@Base>:
   12644:	cmp	r0, #1
   12648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1264c:	sub	sp, sp, #28
   12650:	beq	12688 <main@@Base+0x44>
   12654:	mov	r8, r1
   12658:	mov	r9, r0
   1265c:	ldr	r4, [r8, #4]
   12660:	ldr	r1, [pc, #3644]	; 134a4 <main@@Base+0xe60>
   12664:	mov	r0, r4
   12668:	bl	121dc <strcmp@plt>
   1266c:	cmp	r0, #0
   12670:	beq	12688 <main@@Base+0x44>
   12674:	ldr	r1, [pc, #3628]	; 134a8 <main@@Base+0xe64>
   12678:	mov	r0, r4
   1267c:	bl	121dc <strcmp@plt>
   12680:	cmp	r0, #0
   12684:	bne	12694 <main@@Base+0x50>
   12688:	bl	181f4 <print_yaml_data@@Base+0xd4>
   1268c:	mov	r0, #0
   12690:	bl	123e0 <exit@plt>
   12694:	ldr	r1, [pc, #3600]	; 134ac <main@@Base+0xe68>
   12698:	mov	r0, r4
   1269c:	bl	121dc <strcmp@plt>
   126a0:	cmp	r0, #0
   126a4:	beq	126bc <main@@Base+0x78>
   126a8:	ldr	r1, [pc, #3584]	; 134b0 <main@@Base+0xe6c>
   126ac:	mov	r0, r4
   126b0:	bl	121dc <strcmp@plt>
   126b4:	cmp	r0, #0
   126b8:	bne	126e0 <main@@Base+0x9c>
   126bc:	bl	125cc <coda_get_libcoda_version@plt>
   126c0:	mov	r1, r0
   126c4:	ldr	r0, [pc, #3560]	; 134b4 <main@@Base+0xe70>
   126c8:	bl	121f4 <printf@plt>
   126cc:	ldr	r0, [pc, #3556]	; 134b8 <main@@Base+0xe74>
   126d0:	bl	12380 <puts@plt>
   126d4:	mov	r0, #10
   126d8:	bl	12488 <putchar@plt>
   126dc:	b	1268c <main@@Base+0x48>
   126e0:	cmp	r9, #2
   126e4:	ble	127f4 <main@@Base+0x1b0>
   126e8:	ldr	r1, [pc, #3532]	; 134bc <main@@Base+0xe78>
   126ec:	mov	r0, r4
   126f0:	bl	121dc <strcmp@plt>
   126f4:	cmp	r0, #0
   126f8:	bne	127f4 <main@@Base+0x1b0>
   126fc:	ldr	r0, [r8, #8]
   12700:	mov	r4, #3
   12704:	bl	122fc <coda_set_definition_path@plt>
   12708:	ldr	fp, [r8, r4, lsl #2]
   1270c:	lsl	r5, r4, #2
   12710:	add	r4, r4, #1
   12714:	ldr	r1, [pc, #3492]	; 134c0 <main@@Base+0xe7c>
   12718:	add	r5, r5, #4
   1271c:	ldr	sl, [pc, #3488]	; 134c4 <main@@Base+0xe80>
   12720:	mov	r0, fp
   12724:	bl	121dc <strcmp@plt>
   12728:	subs	r6, r0, #0
   1272c:	bne	12a24 <main@@Base+0x3e0>
   12730:	ldr	r3, [pc, #3472]	; 134c8 <main@@Base+0xe84>
   12734:	add	r5, r8, r5
   12738:	sub	r4, r9, r4
   1273c:	str	r6, [sl]
   12740:	mov	sl, #1
   12744:	ldr	r1, [pc, #3456]	; 134cc <main@@Base+0xe88>
   12748:	mov	r8, sl
   1274c:	ldr	r2, [pc, #3452]	; 134d0 <main@@Base+0xe8c>
   12750:	str	r6, [r3]
   12754:	str	r6, [r3, #664]	; 0x298
   12758:	ldr	r3, [pc, #3444]	; 134d4 <main@@Base+0xe90>
   1275c:	str	r6, [r1]
   12760:	ldr	fp, [pc, #3440]	; 134d8 <main@@Base+0xe94>
   12764:	str	r6, [r2]
   12768:	ldr	r0, [pc, #3436]	; 134dc <main@@Base+0xe98>
   1276c:	str	sl, [r3]
   12770:	ldr	r3, [pc, #3432]	; 134e0 <main@@Base+0xe9c>
   12774:	str	r6, [fp]
   12778:	stmib	sp, {r1, r2}
   1277c:	str	r6, [r0]
   12780:	str	r6, [r3]
   12784:	str	r3, [sp, #12]
   12788:	cmp	r4, r6
   1278c:	bgt	1283c <main@@Base+0x1f8>
   12790:	ldr	r3, [pc, #3376]	; 134c8 <main@@Base+0xe84>
   12794:	ldr	r3, [r3]
   12798:	cmp	r3, #0
   1279c:	beq	13494 <main@@Base+0xe50>
   127a0:	ldrb	r3, [r3]
   127a4:	cmp	r3, #0
   127a8:	beq	13494 <main@@Base+0xe50>
   127ac:	bl	1244c <coda_init@plt>
   127b0:	subs	r4, r0, #0
   127b4:	bne	12810 <main@@Base+0x1cc>
   127b8:	eor	r0, r8, #1
   127bc:	bl	12290 <coda_set_option_bypass_special_types@plt>
   127c0:	mov	r0, r4
   127c4:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   127c8:	mov	r0, sl
   127cc:	bl	12458 <coda_set_option_perform_conversions@plt>
   127d0:	bl	17664 <traverse_info_init@@Base>
   127d4:	bl	15478 <dim_info_init@@Base>
   127d8:	bl	176c0 <traverse_product@@Base>
   127dc:	bl	15498 <dim_info_done@@Base>
   127e0:	bl	17684 <traverse_info_done@@Base>
   127e4:	bl	12374 <coda_done@plt>
   127e8:	mov	r0, #0
   127ec:	add	sp, sp, #28
   127f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127f4:	ldr	r2, [pc, #3304]	; 134e4 <main@@Base+0xea0>
   127f8:	mov	r1, #0
   127fc:	ldr	r0, [r8]
   12800:	bl	12278 <coda_set_definition_path_conditional@plt>
   12804:	cmp	r0, #0
   12808:	moveq	r4, #1
   1280c:	beq	12708 <main@@Base+0xc4>
   12810:	ldr	r3, [pc, #3280]	; 134e8 <main@@Base+0xea4>
   12814:	ldr	r4, [r3]
   12818:	bl	125d8 <coda_get_errno@plt>
   1281c:	ldr	r0, [r0]
   12820:	bl	12590 <coda_errno_to_string@plt>
   12824:	ldr	r1, [pc, #3264]	; 134ec <main@@Base+0xea8>
   12828:	mov	r2, r0
   1282c:	mov	r0, r4
   12830:	bl	12428 <fprintf@plt>
   12834:	mov	r0, #1
   12838:	b	12690 <main@@Base+0x4c>
   1283c:	ldr	r7, [r5, r6, lsl #2]
   12840:	lsl	r9, r6, #2
   12844:	ldr	r1, [pc, #3236]	; 134f0 <main@@Base+0xeac>
   12848:	mov	r0, r7
   1284c:	bl	121dc <strcmp@plt>
   12850:	cmp	r0, #0
   12854:	beq	1286c <main@@Base+0x228>
   12858:	ldr	r1, [pc, #3220]	; 134f4 <main@@Base+0xeb0>
   1285c:	mov	r0, r7
   12860:	bl	121dc <strcmp@plt>
   12864:	cmp	r0, #0
   12868:	bne	1287c <main@@Base+0x238>
   1286c:	mov	r3, #1
   12870:	str	r3, [fp]
   12874:	add	r6, r6, #1
   12878:	b	12788 <main@@Base+0x144>
   1287c:	ldr	r1, [pc, #3188]	; 134f8 <main@@Base+0xeb4>
   12880:	mov	r0, r7
   12884:	bl	121dc <strcmp@plt>
   12888:	cmp	r0, #0
   1288c:	beq	12a0c <main@@Base+0x3c8>
   12890:	ldr	r1, [pc, #3172]	; 134fc <main@@Base+0xeb8>
   12894:	mov	r0, r7
   12898:	bl	121dc <strcmp@plt>
   1289c:	cmp	r0, #0
   128a0:	beq	12a0c <main@@Base+0x3c8>
   128a4:	ldr	r1, [pc, #3156]	; 13500 <main@@Base+0xebc>
   128a8:	mov	r0, r7
   128ac:	bl	121dc <strcmp@plt>
   128b0:	cmp	r0, #0
   128b4:	beq	128cc <main@@Base+0x288>
   128b8:	ldr	r1, [pc, #3140]	; 13504 <main@@Base+0xec0>
   128bc:	mov	r0, r7
   128c0:	bl	121dc <strcmp@plt>
   128c4:	cmp	r0, #0
   128c8:	bne	12920 <main@@Base+0x2dc>
   128cc:	add	r3, r6, #1
   128d0:	cmp	r4, r3
   128d4:	str	r3, [sp, #16]
   128d8:	ble	12920 <main@@Base+0x2dc>
   128dc:	add	r9, r5, r9
   128e0:	ldr	r0, [r9, #4]
   128e4:	ldrb	r2, [r0]
   128e8:	cmp	r2, #45	; 0x2d
   128ec:	beq	12920 <main@@Base+0x2dc>
   128f0:	bl	1627c <codadump_filter_create@@Base>
   128f4:	ldr	r3, [pc, #3020]	; 134c8 <main@@Base+0xe84>
   128f8:	cmp	r0, #0
   128fc:	str	r0, [r3, #664]	; 0x298
   12900:	ldr	r3, [sp, #16]
   12904:	bne	12a14 <main@@Base+0x3d0>
   12908:	ldr	r3, [pc, #3032]	; 134e8 <main@@Base+0xea4>
   1290c:	ldr	r0, [pc, #3060]	; 13508 <main@@Base+0xec4>
   12910:	ldr	r1, [r3]
   12914:	bl	125fc <fputs@plt>
   12918:	bl	181f4 <print_yaml_data@@Base+0xd4>
   1291c:	b	12834 <main@@Base+0x1f0>
   12920:	ldr	r1, [pc, #3044]	; 1350c <main@@Base+0xec8>
   12924:	mov	r0, r7
   12928:	bl	121dc <strcmp@plt>
   1292c:	cmp	r0, #0
   12930:	beq	12948 <main@@Base+0x304>
   12934:	ldr	r1, [pc, #3028]	; 13510 <main@@Base+0xecc>
   12938:	mov	r0, r7
   1293c:	bl	121dc <strcmp@plt>
   12940:	cmp	r0, #0
   12944:	bne	12958 <main@@Base+0x314>
   12948:	ldr	r2, [sp, #8]
   1294c:	mov	r3, #1
   12950:	str	r3, [r2]
   12954:	b	12874 <main@@Base+0x230>
   12958:	ldr	r1, [pc, #2996]	; 13514 <main@@Base+0xed0>
   1295c:	mov	r0, r7
   12960:	bl	121dc <strcmp@plt>
   12964:	cmp	r0, #0
   12968:	beq	12980 <main@@Base+0x33c>
   1296c:	ldr	r1, [pc, #2980]	; 13518 <main@@Base+0xed4>
   12970:	mov	r0, r7
   12974:	bl	121dc <strcmp@plt>
   12978:	cmp	r0, #0
   1297c:	bne	1298c <main@@Base+0x348>
   12980:	mov	r3, #1
   12984:	ldr	r2, [sp, #12]
   12988:	b	12950 <main@@Base+0x30c>
   1298c:	ldr	r1, [pc, #2952]	; 1351c <main@@Base+0xed8>
   12990:	mov	r0, r7
   12994:	bl	121dc <strcmp@plt>
   12998:	cmp	r0, #0
   1299c:	bne	129b0 <main@@Base+0x36c>
   129a0:	ldr	r3, [pc, #2868]	; 134dc <main@@Base+0xe98>
   129a4:	mov	r2, #1
   129a8:	str	r2, [r3]
   129ac:	b	12874 <main@@Base+0x230>
   129b0:	ldr	r1, [pc, #2920]	; 13520 <main@@Base+0xedc>
   129b4:	mov	r0, r7
   129b8:	bl	121dc <strcmp@plt>
   129bc:	cmp	r0, #0
   129c0:	bne	129d4 <main@@Base+0x390>
   129c4:	mov	r3, #1
   129c8:	ldr	r2, [sp, #4]
   129cc:	str	r3, [fp]
   129d0:	b	12950 <main@@Base+0x30c>
   129d4:	ldr	r1, [pc, #2888]	; 13524 <main@@Base+0xee0>
   129d8:	mov	r0, r7
   129dc:	bl	121dc <strcmp@plt>
   129e0:	cmp	r0, #0
   129e4:	beq	12a1c <main@@Base+0x3d8>
   129e8:	sub	r3, r4, #1
   129ec:	cmp	r6, r3
   129f0:	bne	13494 <main@@Base+0xe50>
   129f4:	ldrb	r3, [r7]
   129f8:	cmp	r3, #45	; 0x2d
   129fc:	beq	13494 <main@@Base+0xe50>
   12a00:	ldr	r3, [pc, #2752]	; 134c8 <main@@Base+0xe84>
   12a04:	str	r7, [r3]
   12a08:	b	12874 <main@@Base+0x230>
   12a0c:	mov	sl, r0
   12a10:	b	12874 <main@@Base+0x230>
   12a14:	mov	r6, r3
   12a18:	b	12874 <main@@Base+0x230>
   12a1c:	mov	r8, r0
   12a20:	b	12874 <main@@Base+0x230>
   12a24:	ldr	r1, [pc, #2812]	; 13528 <main@@Base+0xee4>
   12a28:	mov	r0, fp
   12a2c:	bl	121dc <strcmp@plt>
   12a30:	subs	r7, r0, #0
   12a34:	ldr	r6, [pc, #2800]	; 1352c <main@@Base+0xee8>
   12a38:	ldr	r3, [pc, #2800]	; 13530 <main@@Base+0xeec>
   12a3c:	bne	12db0 <main@@Base+0x76c>
   12a40:	mov	fp, #1
   12a44:	add	r5, r8, r5
   12a48:	str	r7, [r6]
   12a4c:	ldr	r2, [pc, #2676]	; 134c8 <main@@Base+0xe84>
   12a50:	sub	r4, r9, r4
   12a54:	mov	r8, fp
   12a58:	str	fp, [sl]
   12a5c:	ldr	r1, [pc, #2768]	; 13534 <main@@Base+0xef0>
   12a60:	ldr	r3, [r3]
   12a64:	str	r7, [r2]
   12a68:	str	r7, [r2, #664]	; 0x298
   12a6c:	ldr	r2, [pc, #2756]	; 13538 <main@@Base+0xef4>
   12a70:	str	r1, [r2]
   12a74:	ldr	r1, [pc, #2752]	; 1353c <main@@Base+0xef8>
   12a78:	str	r2, [sp, #4]
   12a7c:	str	r3, [r1]
   12a80:	ldr	r3, [pc, #2636]	; 134d4 <main@@Base+0xe90>
   12a84:	ldr	r1, [pc, #2740]	; 13540 <main@@Base+0xefc>
   12a88:	str	fp, [r3]
   12a8c:	ldr	r3, [pc, #2628]	; 134d8 <main@@Base+0xe94>
   12a90:	str	r7, [r1]
   12a94:	ldr	r1, [pc, #2728]	; 13544 <main@@Base+0xf00>
   12a98:	str	fp, [r3]
   12a9c:	ldr	r3, [pc, #2724]	; 13548 <main@@Base+0xf04>
   12aa0:	str	r7, [r1]
   12aa4:	ldr	r1, [pc, #2720]	; 1354c <main@@Base+0xf08>
   12aa8:	str	r7, [r3]
   12aac:	str	r3, [sp, #8]
   12ab0:	str	r7, [r1]
   12ab4:	cmp	r4, r7
   12ab8:	bgt	12b3c <main@@Base+0x4f8>
   12abc:	ldr	r3, [pc, #2564]	; 134c8 <main@@Base+0xe84>
   12ac0:	ldr	r3, [r3]
   12ac4:	cmp	r3, #0
   12ac8:	beq	13494 <main@@Base+0xe50>
   12acc:	ldrb	r3, [r3]
   12ad0:	cmp	r3, #0
   12ad4:	beq	13494 <main@@Base+0xe50>
   12ad8:	bl	1244c <coda_init@plt>
   12adc:	subs	r4, r0, #0
   12ae0:	bne	12810 <main@@Base+0x1cc>
   12ae4:	eor	r0, r8, #1
   12ae8:	bl	12290 <coda_set_option_bypass_special_types@plt>
   12aec:	mov	r0, r4
   12af0:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   12af4:	mov	r0, fp
   12af8:	bl	12458 <coda_set_option_perform_conversions@plt>
   12afc:	bl	17664 <traverse_info_init@@Base>
   12b00:	bl	15478 <dim_info_init@@Base>
   12b04:	ldr	r0, [r6]
   12b08:	cmp	r0, #0
   12b0c:	beq	12d90 <main@@Base+0x74c>
   12b10:	ldr	r1, [pc, #2616]	; 13550 <main@@Base+0xf0c>
   12b14:	bl	1220c <fopen@plt>
   12b18:	ldr	r3, [pc, #2588]	; 1353c <main@@Base+0xef8>
   12b1c:	cmp	r0, #0
   12b20:	str	r0, [r3]
   12b24:	bne	12d90 <main@@Base+0x74c>
   12b28:	ldr	r3, [pc, #2488]	; 134e8 <main@@Base+0xea4>
   12b2c:	ldr	r1, [pc, #2592]	; 13554 <main@@Base+0xf10>
   12b30:	ldr	r2, [r6]
   12b34:	ldr	r0, [r3]
   12b38:	b	12830 <main@@Base+0x1ec>
   12b3c:	ldr	sl, [r5, r7, lsl #2]
   12b40:	lsl	r9, r7, #2
   12b44:	ldr	r1, [pc, #2476]	; 134f8 <main@@Base+0xeb4>
   12b48:	mov	r0, sl
   12b4c:	bl	121dc <strcmp@plt>
   12b50:	cmp	r0, #0
   12b54:	beq	12d80 <main@@Base+0x73c>
   12b58:	ldr	r1, [pc, #2460]	; 134fc <main@@Base+0xeb8>
   12b5c:	mov	r0, sl
   12b60:	bl	121dc <strcmp@plt>
   12b64:	cmp	r0, #0
   12b68:	beq	12d80 <main@@Base+0x73c>
   12b6c:	ldr	r1, [pc, #2444]	; 13500 <main@@Base+0xebc>
   12b70:	mov	r0, sl
   12b74:	bl	121dc <strcmp@plt>
   12b78:	cmp	r0, #0
   12b7c:	beq	12b94 <main@@Base+0x550>
   12b80:	ldr	r1, [pc, #2428]	; 13504 <main@@Base+0xec0>
   12b84:	mov	r0, sl
   12b88:	bl	121dc <strcmp@plt>
   12b8c:	cmp	r0, #0
   12b90:	bne	12bd8 <main@@Base+0x594>
   12b94:	add	r3, r7, #1
   12b98:	cmp	r4, r3
   12b9c:	str	r3, [sp, #12]
   12ba0:	ble	12bd8 <main@@Base+0x594>
   12ba4:	add	r2, r5, r9
   12ba8:	ldr	r0, [r2, #4]
   12bac:	ldrb	r2, [r0]
   12bb0:	cmp	r2, #45	; 0x2d
   12bb4:	beq	12bd8 <main@@Base+0x594>
   12bb8:	bl	1627c <codadump_filter_create@@Base>
   12bbc:	ldr	r3, [pc, #2308]	; 134c8 <main@@Base+0xe84>
   12bc0:	cmp	r0, #0
   12bc4:	str	r0, [r3, #664]	; 0x298
   12bc8:	ldr	r3, [sp, #12]
   12bcc:	beq	12908 <main@@Base+0x2c4>
   12bd0:	mov	r7, r3
   12bd4:	b	12c0c <main@@Base+0x5c8>
   12bd8:	ldr	r1, [pc, #2424]	; 13558 <main@@Base+0xf14>
   12bdc:	mov	r0, sl
   12be0:	bl	121dc <strcmp@plt>
   12be4:	cmp	r0, #0
   12be8:	beq	12c00 <main@@Base+0x5bc>
   12bec:	ldr	r1, [pc, #2408]	; 1355c <main@@Base+0xf18>
   12bf0:	mov	r0, sl
   12bf4:	bl	121dc <strcmp@plt>
   12bf8:	cmp	r0, #0
   12bfc:	bne	12c14 <main@@Base+0x5d0>
   12c00:	ldr	r2, [sp, #8]
   12c04:	mov	r3, #1
   12c08:	str	r3, [r2]
   12c0c:	add	r7, r7, #1
   12c10:	b	12ab4 <main@@Base+0x470>
   12c14:	ldr	r1, [pc, #2372]	; 13560 <main@@Base+0xf1c>
   12c18:	mov	r0, sl
   12c1c:	bl	121dc <strcmp@plt>
   12c20:	cmp	r0, #0
   12c24:	beq	12c3c <main@@Base+0x5f8>
   12c28:	ldr	r1, [pc, #2356]	; 13564 <main@@Base+0xf20>
   12c2c:	mov	r0, sl
   12c30:	bl	121dc <strcmp@plt>
   12c34:	cmp	r0, #0
   12c38:	bne	12c4c <main@@Base+0x608>
   12c3c:	ldr	r3, [pc, #2300]	; 13540 <main@@Base+0xefc>
   12c40:	mov	r2, #1
   12c44:	str	r2, [r3]
   12c48:	b	12c0c <main@@Base+0x5c8>
   12c4c:	ldr	r1, [pc, #2324]	; 13568 <main@@Base+0xf24>
   12c50:	mov	r0, sl
   12c54:	bl	121dc <strcmp@plt>
   12c58:	cmp	r0, #0
   12c5c:	beq	12c74 <main@@Base+0x630>
   12c60:	ldr	r1, [pc, #2308]	; 1356c <main@@Base+0xf28>
   12c64:	mov	r0, sl
   12c68:	bl	121dc <strcmp@plt>
   12c6c:	cmp	r0, #0
   12c70:	bne	12c98 <main@@Base+0x654>
   12c74:	add	r3, r7, #1
   12c78:	cmp	r4, r3
   12c7c:	ble	12c98 <main@@Base+0x654>
   12c80:	add	r2, r5, r9
   12c84:	ldr	r2, [r2, #4]
   12c88:	ldrb	r1, [r2]
   12c8c:	cmp	r1, #45	; 0x2d
   12c90:	strne	r2, [r6]
   12c94:	bne	12bd0 <main@@Base+0x58c>
   12c98:	ldr	r1, [pc, #2256]	; 13570 <main@@Base+0xf2c>
   12c9c:	mov	r0, sl
   12ca0:	bl	121dc <strcmp@plt>
   12ca4:	cmp	r0, #0
   12ca8:	beq	12cc0 <main@@Base+0x67c>
   12cac:	ldr	r1, [pc, #2240]	; 13574 <main@@Base+0xf30>
   12cb0:	mov	r0, sl
   12cb4:	bl	121dc <strcmp@plt>
   12cb8:	cmp	r0, #0
   12cbc:	bne	12cc8 <main@@Base+0x684>
   12cc0:	ldr	r3, [pc, #2172]	; 13544 <main@@Base+0xf00>
   12cc4:	b	12c40 <main@@Base+0x5fc>
   12cc8:	ldr	r1, [pc, #2216]	; 13578 <main@@Base+0xf34>
   12ccc:	mov	r0, sl
   12cd0:	bl	121dc <strcmp@plt>
   12cd4:	cmp	r0, #0
   12cd8:	beq	12cf0 <main@@Base+0x6ac>
   12cdc:	ldr	r1, [pc, #2200]	; 1357c <main@@Base+0xf38>
   12ce0:	mov	r0, sl
   12ce4:	bl	121dc <strcmp@plt>
   12ce8:	cmp	r0, #0
   12cec:	bne	12d18 <main@@Base+0x6d4>
   12cf0:	add	r3, r7, #1
   12cf4:	cmp	r4, r3
   12cf8:	ble	12d18 <main@@Base+0x6d4>
   12cfc:	add	r9, r5, r9
   12d00:	ldr	r2, [r9, #4]
   12d04:	ldrb	r1, [r2]
   12d08:	cmp	r1, #45	; 0x2d
   12d0c:	ldrne	r1, [sp, #4]
   12d10:	strne	r2, [r1]
   12d14:	bne	12bd0 <main@@Base+0x58c>
   12d18:	ldr	r1, [pc, #2028]	; 1350c <main@@Base+0xec8>
   12d1c:	mov	r0, sl
   12d20:	bl	121dc <strcmp@plt>
   12d24:	cmp	r0, #0
   12d28:	beq	12d40 <main@@Base+0x6fc>
   12d2c:	ldr	r1, [pc, #2124]	; 13580 <main@@Base+0xf3c>
   12d30:	mov	r0, sl
   12d34:	bl	121dc <strcmp@plt>
   12d38:	cmp	r0, #0
   12d3c:	bne	12d48 <main@@Base+0x704>
   12d40:	ldr	r3, [pc, #2052]	; 1354c <main@@Base+0xf08>
   12d44:	b	12c40 <main@@Base+0x5fc>
   12d48:	ldr	r1, [pc, #2004]	; 13524 <main@@Base+0xee0>
   12d4c:	mov	r0, sl
   12d50:	bl	121dc <strcmp@plt>
   12d54:	cmp	r0, #0
   12d58:	beq	12d88 <main@@Base+0x744>
   12d5c:	sub	r3, r4, #1
   12d60:	cmp	r7, r3
   12d64:	bne	13494 <main@@Base+0xe50>
   12d68:	ldrb	r3, [sl]
   12d6c:	cmp	r3, #45	; 0x2d
   12d70:	beq	13494 <main@@Base+0xe50>
   12d74:	ldr	r3, [pc, #1868]	; 134c8 <main@@Base+0xe84>
   12d78:	str	sl, [r3]
   12d7c:	b	12c0c <main@@Base+0x5c8>
   12d80:	mov	fp, r0
   12d84:	b	12c0c <main@@Base+0x5c8>
   12d88:	mov	r8, r0
   12d8c:	b	12c0c <main@@Base+0x5c8>
   12d90:	bl	176c0 <traverse_product@@Base>
   12d94:	ldr	r3, [r6]
   12d98:	cmp	r3, #0
   12d9c:	beq	127dc <main@@Base+0x198>
   12da0:	ldr	r3, [pc, #1940]	; 1353c <main@@Base+0xef8>
   12da4:	ldr	r0, [r3]
   12da8:	bl	124d0 <fclose@plt>
   12dac:	b	127dc <main@@Base+0x198>
   12db0:	ldr	r1, [pc, #1996]	; 13584 <main@@Base+0xf40>
   12db4:	mov	r0, fp
   12db8:	bl	121dc <strcmp@plt>
   12dbc:	subs	r7, r0, #0
   12dc0:	ldr	r3, [pc, #1896]	; 13530 <main@@Base+0xeec>
   12dc4:	bne	12fe0 <main@@Base+0x99c>
   12dc8:	mov	r2, #3
   12dcc:	ldr	r3, [r3]
   12dd0:	add	r5, r8, r5
   12dd4:	sub	r4, r9, r4
   12dd8:	mov	r8, #1
   12ddc:	str	r7, [r6]
   12de0:	str	r2, [sl]
   12de4:	mov	fp, r7
   12de8:	ldr	r2, [pc, #1752]	; 134c8 <main@@Base+0xe84>
   12dec:	str	r8, [sp, #4]
   12df0:	str	r7, [r2]
   12df4:	ldr	r2, [pc, #1932]	; 13588 <main@@Base+0xf44>
   12df8:	str	r7, [r2]
   12dfc:	ldr	r2, [pc, #1848]	; 1353c <main@@Base+0xef8>
   12e00:	str	r3, [r2]
   12e04:	cmp	r4, fp
   12e08:	bgt	12e90 <main@@Base+0x84c>
   12e0c:	ldr	r3, [pc, #1716]	; 134c8 <main@@Base+0xe84>
   12e10:	ldr	r3, [r3]
   12e14:	cmp	r3, #0
   12e18:	beq	13494 <main@@Base+0xe50>
   12e1c:	ldrb	r3, [r3]
   12e20:	cmp	r3, #0
   12e24:	beq	13494 <main@@Base+0xe50>
   12e28:	bl	1244c <coda_init@plt>
   12e2c:	cmp	r0, #0
   12e30:	bne	12810 <main@@Base+0x1cc>
   12e34:	ldr	r3, [sp, #4]
   12e38:	eor	r0, r3, #1
   12e3c:	bl	12290 <coda_set_option_bypass_special_types@plt>
   12e40:	mov	r0, r8
   12e44:	bl	12458 <coda_set_option_perform_conversions@plt>
   12e48:	ldr	r0, [r6]
   12e4c:	cmp	r0, #0
   12e50:	beq	12e6c <main@@Base+0x828>
   12e54:	ldr	r1, [pc, #1780]	; 13550 <main@@Base+0xf0c>
   12e58:	bl	1220c <fopen@plt>
   12e5c:	ldr	r3, [pc, #1752]	; 1353c <main@@Base+0xef8>
   12e60:	cmp	r0, #0
   12e64:	str	r0, [r3]
   12e68:	beq	12b28 <main@@Base+0x4e4>
   12e6c:	mov	r0, r7
   12e70:	bl	16bf0 <print_json_data@@Base>
   12e74:	ldr	r3, [r6]
   12e78:	cmp	r3, #0
   12e7c:	beq	127e4 <main@@Base+0x1a0>
   12e80:	ldr	r3, [pc, #1716]	; 1353c <main@@Base+0xef8>
   12e84:	ldr	r0, [r3]
   12e88:	bl	124d0 <fclose@plt>
   12e8c:	b	127e4 <main@@Base+0x1a0>
   12e90:	ldr	sl, [r5, fp, lsl #2]
   12e94:	lsl	r9, fp, #2
   12e98:	ldr	r1, [pc, #1772]	; 1358c <main@@Base+0xf48>
   12e9c:	mov	r0, sl
   12ea0:	bl	121dc <strcmp@plt>
   12ea4:	cmp	r0, #0
   12ea8:	beq	12fc8 <main@@Base+0x984>
   12eac:	ldr	r1, [pc, #1756]	; 13590 <main@@Base+0xf4c>
   12eb0:	mov	r0, sl
   12eb4:	bl	121dc <strcmp@plt>
   12eb8:	cmp	r0, #0
   12ebc:	beq	12fc8 <main@@Base+0x984>
   12ec0:	ldr	r1, [pc, #1584]	; 134f8 <main@@Base+0xeb4>
   12ec4:	mov	r0, sl
   12ec8:	bl	121dc <strcmp@plt>
   12ecc:	cmp	r0, #0
   12ed0:	beq	12fd0 <main@@Base+0x98c>
   12ed4:	ldr	r1, [pc, #1568]	; 134fc <main@@Base+0xeb8>
   12ed8:	mov	r0, sl
   12edc:	bl	121dc <strcmp@plt>
   12ee0:	cmp	r0, #0
   12ee4:	beq	12fd0 <main@@Base+0x98c>
   12ee8:	ldr	r1, [pc, #1656]	; 13568 <main@@Base+0xf24>
   12eec:	mov	r0, sl
   12ef0:	bl	121dc <strcmp@plt>
   12ef4:	cmp	r0, #0
   12ef8:	beq	12f10 <main@@Base+0x8cc>
   12efc:	ldr	r1, [pc, #1640]	; 1356c <main@@Base+0xf28>
   12f00:	mov	r0, sl
   12f04:	bl	121dc <strcmp@plt>
   12f08:	cmp	r0, #0
   12f0c:	bne	12f34 <main@@Base+0x8f0>
   12f10:	add	r3, fp, #1
   12f14:	cmp	r4, r3
   12f18:	ble	12f34 <main@@Base+0x8f0>
   12f1c:	add	r2, r5, r9
   12f20:	ldr	r2, [r2, #4]
   12f24:	ldrb	r1, [r2]
   12f28:	cmp	r1, #45	; 0x2d
   12f2c:	strne	r2, [r6]
   12f30:	bne	12f84 <main@@Base+0x940>
   12f34:	ldr	r1, [pc, #1624]	; 13594 <main@@Base+0xf50>
   12f38:	mov	r0, sl
   12f3c:	bl	121dc <strcmp@plt>
   12f40:	cmp	r0, #0
   12f44:	beq	12f5c <main@@Base+0x918>
   12f48:	ldr	r1, [pc, #1608]	; 13598 <main@@Base+0xf54>
   12f4c:	mov	r0, sl
   12f50:	bl	121dc <strcmp@plt>
   12f54:	cmp	r0, #0
   12f58:	bne	12f90 <main@@Base+0x94c>
   12f5c:	add	r3, fp, #1
   12f60:	cmp	r4, r3
   12f64:	ble	12f90 <main@@Base+0x94c>
   12f68:	add	r9, r5, r9
   12f6c:	ldr	r2, [r9, #4]
   12f70:	ldrb	r1, [r2]
   12f74:	cmp	r1, #45	; 0x2d
   12f78:	beq	12f90 <main@@Base+0x94c>
   12f7c:	ldr	r1, [pc, #1540]	; 13588 <main@@Base+0xf44>
   12f80:	str	r2, [r1]
   12f84:	mov	fp, r3
   12f88:	add	fp, fp, #1
   12f8c:	b	12e04 <main@@Base+0x7c0>
   12f90:	ldr	r1, [pc, #1420]	; 13524 <main@@Base+0xee0>
   12f94:	mov	r0, sl
   12f98:	bl	121dc <strcmp@plt>
   12f9c:	cmp	r0, #0
   12fa0:	beq	12fd8 <main@@Base+0x994>
   12fa4:	sub	r3, r4, #1
   12fa8:	cmp	fp, r3
   12fac:	bne	13494 <main@@Base+0xe50>
   12fb0:	ldrb	r3, [sl]
   12fb4:	cmp	r3, #45	; 0x2d
   12fb8:	beq	13494 <main@@Base+0xe50>
   12fbc:	ldr	r3, [pc, #1284]	; 134c8 <main@@Base+0xe84>
   12fc0:	str	sl, [r3]
   12fc4:	b	12f88 <main@@Base+0x944>
   12fc8:	mov	r7, #1
   12fcc:	b	12f88 <main@@Base+0x944>
   12fd0:	mov	r8, r0
   12fd4:	b	12f88 <main@@Base+0x944>
   12fd8:	str	r0, [sp, #4]
   12fdc:	b	12f88 <main@@Base+0x944>
   12fe0:	ldr	r1, [pc, #1460]	; 1359c <main@@Base+0xf58>
   12fe4:	mov	r0, fp
   12fe8:	bl	121dc <strcmp@plt>
   12fec:	subs	r7, r0, #0
   12ff0:	ldr	r3, [pc, #1336]	; 13530 <main@@Base+0xeec>
   12ff4:	bne	131f8 <main@@Base+0xbb4>
   12ff8:	mov	r2, #4
   12ffc:	ldr	r3, [r3]
   13000:	add	r5, r8, r5
   13004:	sub	r4, r9, r4
   13008:	mov	r8, #1
   1300c:	str	r7, [r6]
   13010:	str	r2, [sl]
   13014:	mov	fp, r7
   13018:	ldr	r2, [pc, #1192]	; 134c8 <main@@Base+0xe84>
   1301c:	str	r8, [sp, #4]
   13020:	str	r7, [r2]
   13024:	ldr	r2, [pc, #1372]	; 13588 <main@@Base+0xf44>
   13028:	str	r7, [r2]
   1302c:	ldr	r2, [pc, #1288]	; 1353c <main@@Base+0xef8>
   13030:	str	r3, [r2]
   13034:	cmp	r4, fp
   13038:	bgt	130a8 <main@@Base+0xa64>
   1303c:	ldr	r3, [pc, #1156]	; 134c8 <main@@Base+0xe84>
   13040:	ldr	r3, [r3]
   13044:	cmp	r3, #0
   13048:	beq	13494 <main@@Base+0xe50>
   1304c:	ldrb	r3, [r3]
   13050:	cmp	r3, #0
   13054:	beq	13494 <main@@Base+0xe50>
   13058:	bl	1244c <coda_init@plt>
   1305c:	cmp	r0, #0
   13060:	bne	12810 <main@@Base+0x1cc>
   13064:	ldr	r3, [sp, #4]
   13068:	eor	r0, r3, #1
   1306c:	bl	12290 <coda_set_option_bypass_special_types@plt>
   13070:	mov	r0, r8
   13074:	bl	12458 <coda_set_option_perform_conversions@plt>
   13078:	ldr	r0, [r6]
   1307c:	cmp	r0, #0
   13080:	beq	1309c <main@@Base+0xa58>
   13084:	ldr	r1, [pc, #1220]	; 13550 <main@@Base+0xf0c>
   13088:	bl	1220c <fopen@plt>
   1308c:	ldr	r3, [pc, #1192]	; 1353c <main@@Base+0xef8>
   13090:	cmp	r0, #0
   13094:	str	r0, [r3]
   13098:	beq	12b28 <main@@Base+0x4e4>
   1309c:	mov	r0, r7
   130a0:	bl	18120 <print_yaml_data@@Base>
   130a4:	b	12e74 <main@@Base+0x830>
   130a8:	ldr	sl, [r5, fp, lsl #2]
   130ac:	lsl	r9, fp, #2
   130b0:	ldr	r1, [pc, #1236]	; 1358c <main@@Base+0xf48>
   130b4:	mov	r0, sl
   130b8:	bl	121dc <strcmp@plt>
   130bc:	cmp	r0, #0
   130c0:	beq	131e0 <main@@Base+0xb9c>
   130c4:	ldr	r1, [pc, #1220]	; 13590 <main@@Base+0xf4c>
   130c8:	mov	r0, sl
   130cc:	bl	121dc <strcmp@plt>
   130d0:	cmp	r0, #0
   130d4:	beq	131e0 <main@@Base+0xb9c>
   130d8:	ldr	r1, [pc, #1048]	; 134f8 <main@@Base+0xeb4>
   130dc:	mov	r0, sl
   130e0:	bl	121dc <strcmp@plt>
   130e4:	cmp	r0, #0
   130e8:	beq	131e8 <main@@Base+0xba4>
   130ec:	ldr	r1, [pc, #1032]	; 134fc <main@@Base+0xeb8>
   130f0:	mov	r0, sl
   130f4:	bl	121dc <strcmp@plt>
   130f8:	cmp	r0, #0
   130fc:	beq	131e8 <main@@Base+0xba4>
   13100:	ldr	r1, [pc, #1120]	; 13568 <main@@Base+0xf24>
   13104:	mov	r0, sl
   13108:	bl	121dc <strcmp@plt>
   1310c:	cmp	r0, #0
   13110:	beq	13128 <main@@Base+0xae4>
   13114:	ldr	r1, [pc, #1104]	; 1356c <main@@Base+0xf28>
   13118:	mov	r0, sl
   1311c:	bl	121dc <strcmp@plt>
   13120:	cmp	r0, #0
   13124:	bne	1314c <main@@Base+0xb08>
   13128:	add	r3, fp, #1
   1312c:	cmp	r4, r3
   13130:	ble	1314c <main@@Base+0xb08>
   13134:	add	r2, r5, r9
   13138:	ldr	r2, [r2, #4]
   1313c:	ldrb	r1, [r2]
   13140:	cmp	r1, #45	; 0x2d
   13144:	strne	r2, [r6]
   13148:	bne	1319c <main@@Base+0xb58>
   1314c:	ldr	r1, [pc, #1088]	; 13594 <main@@Base+0xf50>
   13150:	mov	r0, sl
   13154:	bl	121dc <strcmp@plt>
   13158:	cmp	r0, #0
   1315c:	beq	13174 <main@@Base+0xb30>
   13160:	ldr	r1, [pc, #1072]	; 13598 <main@@Base+0xf54>
   13164:	mov	r0, sl
   13168:	bl	121dc <strcmp@plt>
   1316c:	cmp	r0, #0
   13170:	bne	131a8 <main@@Base+0xb64>
   13174:	add	r3, fp, #1
   13178:	cmp	r4, r3
   1317c:	ble	131a8 <main@@Base+0xb64>
   13180:	add	r9, r5, r9
   13184:	ldr	r2, [r9, #4]
   13188:	ldrb	r1, [r2]
   1318c:	cmp	r1, #45	; 0x2d
   13190:	beq	131a8 <main@@Base+0xb64>
   13194:	ldr	r1, [pc, #1004]	; 13588 <main@@Base+0xf44>
   13198:	str	r2, [r1]
   1319c:	mov	fp, r3
   131a0:	add	fp, fp, #1
   131a4:	b	13034 <main@@Base+0x9f0>
   131a8:	ldr	r1, [pc, #884]	; 13524 <main@@Base+0xee0>
   131ac:	mov	r0, sl
   131b0:	bl	121dc <strcmp@plt>
   131b4:	cmp	r0, #0
   131b8:	beq	131f0 <main@@Base+0xbac>
   131bc:	sub	r3, r4, #1
   131c0:	cmp	fp, r3
   131c4:	bne	13494 <main@@Base+0xe50>
   131c8:	ldrb	r3, [sl]
   131cc:	cmp	r3, #45	; 0x2d
   131d0:	beq	13494 <main@@Base+0xe50>
   131d4:	ldr	r3, [pc, #748]	; 134c8 <main@@Base+0xe84>
   131d8:	str	sl, [r3]
   131dc:	b	131a0 <main@@Base+0xb5c>
   131e0:	mov	r7, #1
   131e4:	b	131a0 <main@@Base+0xb5c>
   131e8:	mov	r8, r0
   131ec:	b	131a0 <main@@Base+0xb5c>
   131f0:	str	r0, [sp, #4]
   131f4:	b	131a0 <main@@Base+0xb5c>
   131f8:	ldr	r1, [pc, #928]	; 135a0 <main@@Base+0xf5c>
   131fc:	mov	r0, fp
   13200:	bl	121dc <strcmp@plt>
   13204:	subs	r7, r0, #0
   13208:	bne	13494 <main@@Base+0xe50>
   1320c:	ldr	r3, [pc, #692]	; 134c8 <main@@Base+0xe84>
   13210:	mov	r2, #5
   13214:	add	r5, r8, r5
   13218:	sub	r4, r9, r4
   1321c:	mov	r8, r7
   13220:	str	r7, [r6]
   13224:	str	r2, [sl]
   13228:	mov	fp, #1
   1322c:	ldr	r2, [pc, #776]	; 1353c <main@@Base+0xef8>
   13230:	str	r7, [sp, #4]
   13234:	str	r7, [r3]
   13238:	ldr	r3, [pc, #840]	; 13588 <main@@Base+0xf44>
   1323c:	str	r7, [sp, #8]
   13240:	str	r7, [r3]
   13244:	ldr	r3, [pc, #740]	; 13530 <main@@Base+0xeec>
   13248:	ldr	r3, [r3]
   1324c:	str	r3, [r2]
   13250:	ldr	r3, [pc, #816]	; 13588 <main@@Base+0xf44>
   13254:	str	r3, [sp, #12]
   13258:	cmp	r4, r8
   1325c:	bgt	132c8 <main@@Base+0xc84>
   13260:	ldr	r3, [pc, #608]	; 134c8 <main@@Base+0xe84>
   13264:	ldr	r3, [r3]
   13268:	cmp	r3, #0
   1326c:	beq	13494 <main@@Base+0xe50>
   13270:	ldrb	r3, [r3]
   13274:	cmp	r3, #0
   13278:	beq	13494 <main@@Base+0xe50>
   1327c:	bl	1244c <coda_init@plt>
   13280:	cmp	r0, #0
   13284:	bne	12810 <main@@Base+0x1cc>
   13288:	bl	12458 <coda_set_option_perform_conversions@plt>
   1328c:	mov	r0, fp
   13290:	bl	121ac <coda_set_option_use_fast_size_expressions@plt>
   13294:	ldr	r0, [r6]
   13298:	cmp	r0, #0
   1329c:	beq	132b8 <main@@Base+0xc74>
   132a0:	ldr	r1, [pc, #680]	; 13550 <main@@Base+0xf0c>
   132a4:	bl	1220c <fopen@plt>
   132a8:	ldr	r3, [pc, #652]	; 1353c <main@@Base+0xef8>
   132ac:	cmp	r0, #0
   132b0:	str	r0, [r3]
   132b4:	beq	12b28 <main@@Base+0x4e4>
   132b8:	mov	r2, r7
   132bc:	ldrd	r0, [sp, #4]
   132c0:	bl	14cf0 <print_debug_data@@Base>
   132c4:	b	12e74 <main@@Base+0x830>
   132c8:	ldr	r9, [r5, r8, lsl #2]
   132cc:	lsl	sl, r8, #2
   132d0:	ldr	r1, [pc, #544]	; 134f8 <main@@Base+0xeb4>
   132d4:	mov	r0, r9
   132d8:	bl	121dc <strcmp@plt>
   132dc:	cmp	r0, #0
   132e0:	beq	1348c <main@@Base+0xe48>
   132e4:	ldr	r1, [pc, #696]	; 135a4 <main@@Base+0xf60>
   132e8:	mov	r0, r9
   132ec:	bl	121dc <strcmp@plt>
   132f0:	cmp	r0, #0
   132f4:	beq	1348c <main@@Base+0xe48>
   132f8:	ldr	r1, [pc, #616]	; 13568 <main@@Base+0xf24>
   132fc:	mov	r0, r9
   13300:	bl	121dc <strcmp@plt>
   13304:	cmp	r0, #0
   13308:	beq	13320 <main@@Base+0xcdc>
   1330c:	ldr	r1, [pc, #600]	; 1356c <main@@Base+0xf28>
   13310:	mov	r0, r9
   13314:	bl	121dc <strcmp@plt>
   13318:	cmp	r0, #0
   1331c:	bne	13344 <main@@Base+0xd00>
   13320:	add	r3, r8, #1
   13324:	cmp	r4, r3
   13328:	ble	13344 <main@@Base+0xd00>
   1332c:	add	r2, r5, sl
   13330:	ldr	r2, [r2, #4]
   13334:	ldrb	r1, [r2]
   13338:	cmp	r1, #45	; 0x2d
   1333c:	strne	r2, [r6]
   13340:	bne	13394 <main@@Base+0xd50>
   13344:	ldr	r1, [pc, #584]	; 13594 <main@@Base+0xf50>
   13348:	mov	r0, r9
   1334c:	bl	121dc <strcmp@plt>
   13350:	cmp	r0, #0
   13354:	beq	1336c <main@@Base+0xd28>
   13358:	ldr	r1, [pc, #568]	; 13598 <main@@Base+0xf54>
   1335c:	mov	r0, r9
   13360:	bl	121dc <strcmp@plt>
   13364:	cmp	r0, #0
   13368:	bne	133a0 <main@@Base+0xd5c>
   1336c:	add	r3, r8, #1
   13370:	cmp	r4, r3
   13374:	ble	133a0 <main@@Base+0xd5c>
   13378:	add	r2, r5, sl
   1337c:	ldr	r2, [r2, #4]
   13380:	ldrb	r1, [r2]
   13384:	cmp	r1, #45	; 0x2d
   13388:	beq	133a0 <main@@Base+0xd5c>
   1338c:	ldr	r1, [sp, #12]
   13390:	str	r2, [r1]
   13394:	mov	r8, r3
   13398:	add	r8, r8, #1
   1339c:	b	13258 <main@@Base+0xc14>
   133a0:	ldr	r1, [pc, #512]	; 135a8 <main@@Base+0xf64>
   133a4:	mov	r0, r9
   133a8:	bl	121dc <strcmp@plt>
   133ac:	cmp	r0, #0
   133b0:	bne	133ec <main@@Base+0xda8>
   133b4:	add	r3, r8, #1
   133b8:	cmp	r4, r3
   133bc:	str	r3, [sp, #16]
   133c0:	ble	133ec <main@@Base+0xda8>
   133c4:	add	r2, r5, sl
   133c8:	ldr	r0, [r2, #4]
   133cc:	ldrb	r2, [r0]
   133d0:	cmp	r2, #45	; 0x2d
   133d4:	beq	133ec <main@@Base+0xda8>
   133d8:	bl	12584 <atoi@plt>
   133dc:	ldr	r3, [pc, #456]	; 135ac <main@@Base+0xf68>
   133e0:	str	r0, [r3]
   133e4:	ldr	r3, [sp, #16]
   133e8:	b	13394 <main@@Base+0xd50>
   133ec:	ldr	r1, [pc, #444]	; 135b0 <main@@Base+0xf6c>
   133f0:	mov	r0, r9
   133f4:	bl	121dc <strcmp@plt>
   133f8:	cmp	r0, #0
   133fc:	bne	13468 <main@@Base+0xe24>
   13400:	add	r2, r8, #3
   13404:	cmp	r4, r2
   13408:	str	r2, [sp, #20]
   1340c:	ble	13468 <main@@Base+0xe24>
   13410:	add	r1, r5, sl
   13414:	ldr	sl, [r1, #4]
   13418:	ldrb	r3, [sl]
   1341c:	cmp	r3, #45	; 0x2d
   13420:	beq	13468 <main@@Base+0xe24>
   13424:	ldr	r3, [r1, #8]
   13428:	ldrb	r0, [r3]
   1342c:	str	r3, [sp, #16]
   13430:	cmp	r0, #45	; 0x2d
   13434:	beq	13468 <main@@Base+0xe24>
   13438:	ldr	r0, [r1, #12]
   1343c:	ldrb	r1, [r0]
   13440:	cmp	r1, #45	; 0x2d
   13444:	beq	13468 <main@@Base+0xe24>
   13448:	bl	12584 <atoi@plt>
   1344c:	ldr	r3, [sp, #16]
   13450:	mov	r7, r0
   13454:	str	sl, [sp, #4]
   13458:	ldr	r2, [sp, #20]
   1345c:	str	r3, [sp, #8]
   13460:	mov	r8, r2
   13464:	b	13398 <main@@Base+0xd54>
   13468:	sub	r3, r4, #1
   1346c:	cmp	r8, r3
   13470:	bne	13494 <main@@Base+0xe50>
   13474:	ldrb	r3, [r9]
   13478:	cmp	r3, #45	; 0x2d
   1347c:	beq	13494 <main@@Base+0xe50>
   13480:	ldr	r3, [pc, #64]	; 134c8 <main@@Base+0xe84>
   13484:	str	r9, [r3]
   13488:	b	13398 <main@@Base+0xd54>
   1348c:	mov	fp, r0
   13490:	b	13398 <main@@Base+0xd54>
   13494:	ldr	r3, [pc, #76]	; 134e8 <main@@Base+0xea4>
   13498:	ldr	r0, [pc, #276]	; 135b4 <main@@Base+0xf70>
   1349c:	ldr	r1, [r3]
   134a0:	b	12914 <main@@Base+0x2d0>
   134a4:	andeq	sl, r1, r2, lsl r0
   134a8:	andeq	r9, r1, r2, asr #27
   134ac:	andeq	sl, r1, r5, lsl r0
   134b0:	strdeq	r9, [r1], -r8
   134b4:	andeq	sl, r1, r8, lsl r0
   134b8:	andeq	sl, r1, sp, lsr #32
   134bc:	andeq	sl, r1, sp, asr r0
   134c0:	andeq	sl, r1, sl, ror r0
   134c4:	andeq	ip, r2, ip, lsr #1
   134c8:	strdeq	fp, [r2], -r0
   134cc:	ldrdeq	fp, [r2], -ip
   134d0:	andeq	ip, r2, r0, lsr #1
   134d4:	ldrdeq	fp, [r2], -r8
   134d8:	andeq	fp, r2, ip, ror #3
   134dc:	andeq	ip, r2, r4, lsr #1
   134e0:	andeq	fp, r2, r8, ror #3
   134e4:	andeq	sl, r1, r0, rrx
   134e8:			; <UNDEFINED> instruction: 0x0002b1b8
   134ec:	andeq	sl, r1, r7
   134f0:	andeq	sl, r1, pc, ror r0
   134f4:	andeq	r9, r1, r6, ror r1
   134f8:	andeq	sl, r1, r2, lsl #1
   134fc:	andeq	r9, r1, r8, asr #3
   13500:	andeq	sl, r1, r5, lsl #1
   13504:	andeq	sl, r1, r8, lsl #1
   13508:	muleq	r1, r1, r0
   1350c:	strheq	sl, [r1], -sl	; <UNPREDICTABLE>
   13510:	muleq	r1, pc, r2	; <UNPREDICTABLE>
   13514:	strheq	sl, [r1], -sp
   13518:	ldrdeq	r9, [r1], -pc	; <UNPREDICTABLE>
   1351c:	andeq	r9, r1, ip, lsl r3
   13520:	andeq	r9, r1, r7, ror #6
   13524:	andeq	r9, r1, pc, ror #7
   13528:	ldrdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   1352c:	andeq	fp, r2, r0, ror #3
   13530:			; <UNDEFINED> instruction: 0x0002b1bc
   13534:	andeq	r8, r1, r6, asr #21
   13538:	muleq	r2, ip, r0
   1353c:	muleq	r2, r8, r0
   13540:	andeq	ip, r2, r8, lsr #4
   13544:	andeq	ip, r2, ip, lsr #4
   13548:	andeq	ip, r2, r8, lsr #1
   1354c:	andeq	fp, r2, r4, ror #3
   13550:	andeq	sl, r1, fp, lsl #2
   13554:	andeq	sl, r1, sp, lsl #2
   13558:	andeq	sl, r1, r0, ror #1
   1355c:	andeq	r9, r1, r2, asr r5
   13560:	andeq	sl, r1, r3, ror #1
   13564:	andeq	r9, r1, fp, lsr #11
   13568:	andeq	sl, r1, r6, ror #1
   1356c:	andeq	sl, r1, r9, ror #1
   13570:	strdeq	sl, [r1], -r2
   13574:	andeq	r9, r1, r5, ror #12
   13578:	strdeq	sl, [r1], -r5
   1357c:	strdeq	sl, [r1], -r8
   13580:	andeq	r9, r1, r4, asr r7
   13584:	andeq	sl, r1, r7, lsr r1
   13588:	strheq	ip, [r2], -r0
   1358c:	andeq	sl, r1, ip, lsr r1
   13590:	andeq	r9, r1, ip, asr r8
   13594:	andeq	sl, r1, pc, lsr r1
   13598:	andeq	sl, r1, r2, asr #2
   1359c:	andeq	sl, r1, r9, asr #2
   135a0:	andeq	r9, r1, sp, lsr fp
   135a4:	andeq	r9, r1, r2, ror #23
   135a8:	andeq	sl, r1, lr, asr #2
   135ac:			; <UNDEFINED> instruction: 0x0002b1b0
   135b0:	andeq	sl, r1, sl, asr r1
   135b4:	andeq	sl, r1, r0, asr #1

000135b8 <_start@@Base>:
   135b8:	mov	fp, #0
   135bc:	mov	lr, #0
   135c0:	pop	{r1}		; (ldr r1, [sp], #4)
   135c4:	mov	r2, sp
   135c8:	push	{r2}		; (str r2, [sp, #-4]!)
   135cc:	push	{r0}		; (str r0, [sp, #-4]!)
   135d0:	ldr	ip, [pc, #16]	; 135e8 <_start@@Base+0x30>
   135d4:	push	{ip}		; (str ip, [sp, #-4]!)
   135d8:	ldr	r0, [pc, #12]	; 135ec <_start@@Base+0x34>
   135dc:	ldr	r3, [pc, #12]	; 135f0 <_start@@Base+0x38>
   135e0:	bl	123a4 <__libc_start_main@plt>
   135e4:	bl	12608 <abort@plt>
   135e8:	ldrdeq	r8, [r1], -r4
   135ec:	andeq	r2, r1, r4, asr #12
   135f0:	andeq	r8, r1, r4, ror r9
   135f4:	ldr	r3, [pc, #20]	; 13610 <_start@@Base+0x58>
   135f8:	ldr	r2, [pc, #20]	; 13614 <_start@@Base+0x5c>
   135fc:	add	r3, pc, r3
   13600:	ldr	r2, [r3, r2]
   13604:	cmp	r2, #0
   13608:	bxeq	lr
   1360c:	b	123b0 <__gmon_start__@plt>
   13610:	strdeq	r7, [r1], -ip
   13614:	muleq	r0, ip, r1
   13618:	ldr	r0, [pc, #24]	; 13638 <_start@@Base+0x80>
   1361c:	ldr	r3, [pc, #24]	; 1363c <_start@@Base+0x84>
   13620:	cmp	r3, r0
   13624:	bxeq	lr
   13628:	ldr	r3, [pc, #16]	; 13640 <_start@@Base+0x88>
   1362c:	cmp	r3, #0
   13630:	bxeq	lr
   13634:	bx	r3
   13638:			; <UNDEFINED> instruction: 0x0002b1b4
   1363c:			; <UNDEFINED> instruction: 0x0002b1b4
   13640:	andeq	r0, r0, r0
   13644:	ldr	r0, [pc, #36]	; 13670 <_start@@Base+0xb8>
   13648:	ldr	r1, [pc, #36]	; 13674 <_start@@Base+0xbc>
   1364c:	sub	r1, r1, r0
   13650:	asr	r1, r1, #2
   13654:	add	r1, r1, r1, lsr #31
   13658:	asrs	r1, r1, #1
   1365c:	bxeq	lr
   13660:	ldr	r3, [pc, #16]	; 13678 <_start@@Base+0xc0>
   13664:	cmp	r3, #0
   13668:	bxeq	lr
   1366c:	bx	r3
   13670:			; <UNDEFINED> instruction: 0x0002b1b4
   13674:			; <UNDEFINED> instruction: 0x0002b1b4
   13678:	andeq	r0, r0, r0
   1367c:	push	{r4, lr}
   13680:	ldr	r4, [pc, #24]	; 136a0 <_start@@Base+0xe8>
   13684:	ldrb	r3, [r4]
   13688:	cmp	r3, #0
   1368c:	popne	{r4, pc}
   13690:	bl	13618 <_start@@Base+0x60>
   13694:	mov	r3, #1
   13698:	strb	r3, [r4]
   1369c:	pop	{r4, pc}
   136a0:	andeq	fp, r2, r0, asr #3
   136a4:	b	13644 <_start@@Base+0x8c>
   136a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136ac:	sub	sp, sp, #100	; 0x64
   136b0:	add	r5, r1, #2
   136b4:	mov	fp, r0
   136b8:	mov	r4, r2
   136bc:	mov	sl, r3
   136c0:	ldr	r9, [pc, #2164]	; 13f3c <_start@@Base+0x984>
   136c4:	str	r1, [sp, #20]
   136c8:	add	r1, sp, #44	; 0x2c
   136cc:	ldr	r0, [r9, r5, lsl #2]
   136d0:	bl	12638 <coda_type_get_class@plt>
   136d4:	cmp	r0, #0
   136d8:	beq	136e0 <_start@@Base+0x128>
   136dc:	bl	18728 <handle_coda_error@@Base>
   136e0:	ldr	r3, [sp, #44]	; 0x2c
   136e4:	cmp	r3, #0
   136e8:	beq	138e0 <_start@@Base+0x328>
   136ec:	cmp	r3, #1
   136f0:	bne	13948 <_start@@Base+0x390>
   136f4:	mov	r3, #80	; 0x50
   136f8:	cmp	r4, #0
   136fc:	mla	r3, r3, r4, r9
   13700:	streq	r4, [r9, #844]	; 0x34c
   13704:	ldr	r1, [r3, #800]	; 0x320
   13708:	ldr	r3, [pc, #2096]	; 13f40 <_start@@Base+0x988>
   1370c:	ldr	r2, [r3, #104]	; 0x68
   13710:	str	r2, [sp, #24]
   13714:	mov	r2, #80	; 0x50
   13718:	mla	lr, r2, r4, r9
   1371c:	ldr	ip, [lr, #804]	; 0x324
   13720:	add	r0, ip, r1
   13724:	add	r5, ip, r1
   13728:	str	r0, [sp, #28]
   1372c:	ldr	r0, [sp, #24]
   13730:	cmp	r0, r5
   13734:	blt	13760 <_start@@Base+0x1a8>
   13738:	ldr	r0, [r9, #3360]	; 0xd20
   1373c:	sub	r0, r0, #1
   13740:	cmp	r0, r4
   13744:	ble	13760 <_start@@Base+0x1a8>
   13748:	ldr	r0, [lr, #840]	; 0x348
   1374c:	mla	r2, r4, r2, r2
   13750:	ldr	r5, [lr, #844]	; 0x34c
   13754:	add	r2, r9, r2
   13758:	mul	r0, r0, r5
   1375c:	str	r0, [r2, #844]	; 0x34c
   13760:	mov	r2, #80	; 0x50
   13764:	add	r3, r3, r1, lsl #2
   13768:	mov	r1, #0
   1376c:	mov	r5, #1
   13770:	add	r8, sp, #64	; 0x40
   13774:	mul	r2, r2, r4
   13778:	mov	lr, r1
   1377c:	add	r0, r2, #848	; 0x350
   13780:	add	r2, r9, r2
   13784:	add	r0, r9, r0
   13788:	b	137b8 <_start@@Base+0x200>
   1378c:	ldr	r6, [r3, #72]	; 0x48
   13790:	add	r3, r3, #4
   13794:	cmp	r6, #0
   13798:	ldrne	r6, [r3, #104]	; 0x68
   1379c:	ldrne	r7, [r2, #844]	; 0x34c
   137a0:	ldreq	r6, [r3]
   137a4:	ldrne	r6, [r6, r7, lsl #2]
   137a8:	str	lr, [r0], #4
   137ac:	mul	r5, r6, r5
   137b0:	str	r6, [r8, r1, lsl #2]
   137b4:	add	r1, r1, #1
   137b8:	cmp	ip, r1
   137bc:	bgt	1378c <_start@@Base+0x1d4>
   137c0:	cmp	r5, #0
   137c4:	beq	13838 <_start@@Base+0x280>
   137c8:	ldr	r0, [pc, #1908]	; 13f44 <_start@@Base+0x98c>
   137cc:	bl	12338 <coda_cursor_goto_first_array_element@plt>
   137d0:	cmp	r0, #0
   137d4:	beq	137dc <_start@@Base+0x224>
   137d8:	bl	18728 <handle_coda_error@@Base>
   137dc:	mov	r3, #20
   137e0:	mov	r8, #80	; 0x50
   137e4:	mov	r7, #0
   137e8:	mul	r3, r3, r4
   137ec:	str	r3, [sp, #32]
   137f0:	mla	r3, r8, r4, r9
   137f4:	str	r3, [sp, #36]	; 0x24
   137f8:	b	13828 <_start@@Base+0x270>
   137fc:	ldr	r1, [sp, #20]
   13800:	add	r6, r4, #1
   13804:	mov	r3, sl
   13808:	mov	r2, r6
   1380c:	mov	r0, fp
   13810:	add	r1, r1, #1
   13814:	bl	136a8 <_start@@Base+0xf0>
   13818:	sub	r3, r5, #1
   1381c:	cmp	r3, r7
   13820:	bgt	13840 <_start@@Base+0x288>
   13824:	add	r7, r7, #1
   13828:	cmp	r5, r7
   1382c:	bgt	137fc <_start@@Base+0x244>
   13830:	ldr	r0, [pc, #1804]	; 13f44 <_start@@Base+0x98c>
   13834:	bl	123c8 <coda_cursor_goto_parent@plt>
   13838:	add	sp, sp, #100	; 0x64
   1383c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13840:	ldr	r0, [pc, #1788]	; 13f44 <_start@@Base+0x98c>
   13844:	bl	12434 <coda_cursor_goto_next_array_element@plt>
   13848:	cmp	r0, #0
   1384c:	beq	13854 <_start@@Base+0x29c>
   13850:	bl	18728 <handle_coda_error@@Base>
   13854:	ldr	r3, [sp, #24]
   13858:	ldr	r2, [sp, #28]
   1385c:	cmp	r3, r2
   13860:	blt	13880 <_start@@Base+0x2c8>
   13864:	ldr	r3, [r9, #3360]	; 0xd20
   13868:	sub	r3, r3, #1
   1386c:	cmp	r3, r4
   13870:	mlagt	r6, r8, r6, r9
   13874:	ldrgt	r3, [r6, #844]	; 0x34c
   13878:	addgt	r3, r3, #1
   1387c:	strgt	r3, [r6, #844]	; 0x34c
   13880:	ldr	r3, [pc, #1728]	; 13f48 <_start@@Base+0x990>
   13884:	ldr	r3, [r3]
   13888:	cmp	r3, #0
   1388c:	beq	13824 <_start@@Base+0x26c>
   13890:	ldr	r1, [sp, #32]
   13894:	add	r0, sp, #64	; 0x40
   13898:	mov	ip, #0
   1389c:	ldr	r3, [sp, #36]	; 0x24
   138a0:	ldr	r3, [r3, #804]	; 0x324
   138a4:	sub	r2, r3, #1
   138a8:	add	r3, r3, r1
   138ac:	add	r3, r3, #211	; 0xd3
   138b0:	add	r3, r9, r3, lsl #2
   138b4:	cmp	r2, #0
   138b8:	blt	13824 <_start@@Base+0x26c>
   138bc:	ldr	r1, [r3]
   138c0:	ldr	lr, [r0, r2, lsl #2]
   138c4:	add	r1, r1, #1
   138c8:	cmp	r1, lr
   138cc:	str	r1, [r3]
   138d0:	bne	13824 <_start@@Base+0x26c>
   138d4:	sub	r2, r2, #1
   138d8:	str	ip, [r3], #-4
   138dc:	b	138b4 <_start@@Base+0x2fc>
   138e0:	add	r5, sl, #872	; 0x368
   138e4:	add	r2, sp, #64	; 0x40
   138e8:	ldr	r0, [pc, #1620]	; 13f44 <_start@@Base+0x98c>
   138ec:	add	r3, r9, r5, lsl #2
   138f0:	ldr	r1, [r3, #4]
   138f4:	bl	12200 <coda_cursor_get_record_field_available_status@plt>
   138f8:	cmp	r0, #0
   138fc:	beq	13904 <_start@@Base+0x34c>
   13900:	bl	18728 <handle_coda_error@@Base>
   13904:	ldr	r3, [sp, #64]	; 0x40
   13908:	cmp	r3, #0
   1390c:	beq	13838 <_start@@Base+0x280>
   13910:	add	r5, r9, r5, lsl #2
   13914:	ldr	r0, [pc, #1576]	; 13f44 <_start@@Base+0x98c>
   13918:	ldr	r1, [r5, #4]
   1391c:	bl	12368 <coda_cursor_goto_record_field_by_index@plt>
   13920:	cmp	r0, #0
   13924:	beq	1392c <_start@@Base+0x374>
   13928:	bl	18728 <handle_coda_error@@Base>
   1392c:	ldr	r1, [sp, #20]
   13930:	add	r3, sl, #1
   13934:	mov	r2, r4
   13938:	mov	r0, fp
   1393c:	add	r1, r1, #1
   13940:	bl	136a8 <_start@@Base+0xf0>
   13944:	b	13830 <_start@@Base+0x278>
   13948:	ldr	r3, [pc, #1528]	; 13f48 <_start@@Base+0x990>
   1394c:	ldr	r3, [r3]
   13950:	cmp	r3, #0
   13954:	beq	13974 <_start@@Base+0x3bc>
   13958:	ldr	r3, [pc, #1516]	; 13f4c <_start@@Base+0x994>
   1395c:	mov	r6, #0
   13960:	mov	r8, r6
   13964:	str	r3, [sp, #20]
   13968:	ldr	r3, [r9, #136]	; 0x88
   1396c:	cmp	r6, r3
   13970:	blt	139b8 <_start@@Base+0x400>
   13974:	add	r1, sp, #48	; 0x30
   13978:	ldr	r0, [r9, r5, lsl #2]
   1397c:	bl	12638 <coda_type_get_class@plt>
   13980:	cmp	r0, #0
   13984:	beq	1398c <_start@@Base+0x3d4>
   13988:	bl	18728 <handle_coda_error@@Base>
   1398c:	ldr	r3, [sp, #48]	; 0x30
   13990:	cmp	r3, #6
   13994:	ldrls	pc, [pc, r3, lsl #2]
   13998:	b	13ad4 <_start@@Base+0x51c>
   1399c:	andeq	r3, r1, r0, lsr pc
   139a0:	andeq	r3, r1, r0, lsr pc
   139a4:	andeq	r3, r1, r4, lsr sl
   139a8:	andeq	r3, r1, r4, lsr sl
   139ac:	andeq	r3, r1, r4, lsr sl
   139b0:	andeq	r3, r1, r4, lsr sl
   139b4:	andeq	r3, r1, ip, lsl lr
   139b8:	ldr	r3, [sp, #20]
   139bc:	add	r1, sp, #64	; 0x40
   139c0:	ldr	r0, [r3], #4
   139c4:	str	r3, [sp, #20]
   139c8:	bl	12638 <coda_type_get_class@plt>
   139cc:	cmp	r0, #0
   139d0:	beq	139d8 <_start@@Base+0x420>
   139d4:	bl	18728 <handle_coda_error@@Base>
   139d8:	ldr	r3, [sp, #64]	; 0x40
   139dc:	cmp	r3, #1
   139e0:	bne	13a0c <_start@@Base+0x454>
   139e4:	mov	r4, #80	; 0x50
   139e8:	mov	sl, #0
   139ec:	mul	r4, r4, r8
   139f0:	add	r7, r4, #848	; 0x350
   139f4:	add	r4, r9, r4
   139f8:	add	r7, r9, r7
   139fc:	ldr	r3, [r4, #804]	; 0x324
   13a00:	cmp	sl, r3
   13a04:	blt	13a14 <_start@@Base+0x45c>
   13a08:	add	r8, r8, #1
   13a0c:	add	r6, r6, #1
   13a10:	b	13968 <_start@@Base+0x3b0>
   13a14:	ldr	r3, [pc, #1332]	; 13f50 <_start@@Base+0x998>
   13a18:	mov	r0, fp
   13a1c:	add	sl, sl, #1
   13a20:	ldr	r1, [pc, #1324]	; 13f54 <_start@@Base+0x99c>
   13a24:	ldr	r2, [r7], #4
   13a28:	ldr	r3, [r3]
   13a2c:	bl	12428 <fprintf@plt>
   13a30:	b	139fc <_start@@Base+0x444>
   13a34:	add	r1, sp, #52	; 0x34
   13a38:	ldr	r0, [r9, r5, lsl #2]
   13a3c:	bl	123ec <coda_type_get_read_type@plt>
   13a40:	cmp	r0, #0
   13a44:	beq	13a4c <_start@@Base+0x494>
   13a48:	bl	18728 <handle_coda_error@@Base>
   13a4c:	ldr	r3, [sp, #52]	; 0x34
   13a50:	add	r3, r3, #1
   13a54:	cmp	r3, #13
   13a58:	ldrls	pc, [pc, r3, lsl #2]
   13a5c:	b	13ad4 <_start@@Base+0x51c>
   13a60:	andeq	r3, r1, r8, lsl #28
   13a64:	andeq	r3, r1, r0, lsr #26
   13a68:	andeq	r3, r1, ip, asr #26
   13a6c:	andeq	r3, r1, r0, lsr #26
   13a70:	andeq	r3, r1, ip, asr #26
   13a74:	andeq	r3, r1, r0, lsr #26
   13a78:	andeq	r3, r1, ip, asr #26
   13a7c:	andeq	r3, r1, r0, ror sp
   13a80:	andeq	r3, r1, r4, lsr #27
   13a84:	andeq	r3, r1, ip, asr #27
   13a88:	andeq	r3, r1, ip, asr #27
   13a8c:	muleq	r1, r8, sl
   13a90:	andeq	r3, r1, r4, ror #21
   13a94:	muleq	r1, r0, fp
   13a98:	add	r1, sp, #64	; 0x40
   13a9c:	ldr	r0, [pc, #1184]	; 13f44 <_start@@Base+0x98c>
   13aa0:	bl	12470 <coda_cursor_read_char@plt>
   13aa4:	cmp	r0, #0
   13aa8:	beq	13ab0 <_start@@Base+0x4f8>
   13aac:	bl	18728 <handle_coda_error@@Base>
   13ab0:	ldr	r3, [pc, #1184]	; 13f58 <_start@@Base+0x9a0>
   13ab4:	ldrb	r2, [sp, #64]	; 0x40
   13ab8:	ldr	r3, [r3]
   13abc:	cmp	r3, #0
   13ac0:	ldrne	r1, [pc, #1172]	; 13f5c <_start@@Base+0x9a4>
   13ac4:	bne	13d40 <_start@@Base+0x788>
   13ac8:	mov	r1, fp
   13acc:	mov	r0, r2
   13ad0:	bl	12560 <fputc@plt>
   13ad4:	mov	r1, fp
   13ad8:	mov	r0, #10
   13adc:	bl	12560 <fputc@plt>
   13ae0:	b	13838 <_start@@Base+0x280>
   13ae4:	add	r1, sp, #64	; 0x40
   13ae8:	ldr	r0, [pc, #1108]	; 13f44 <_start@@Base+0x98c>
   13aec:	bl	123f8 <coda_cursor_get_string_length@plt>
   13af0:	cmp	r0, #0
   13af4:	beq	13afc <_start@@Base+0x544>
   13af8:	bl	18728 <handle_coda_error@@Base>
   13afc:	ldr	r0, [sp, #64]	; 0x40
   13b00:	add	r0, r0, #1
   13b04:	bl	12398 <malloc@plt>
   13b08:	subs	r4, r0, #0
   13b0c:	bne	13b34 <_start@@Base+0x57c>
   13b10:	ldr	r2, [sp, #64]	; 0x40
   13b14:	mov	r3, #126	; 0x7e
   13b18:	mvn	r0, #0
   13b1c:	ldr	r1, [pc, #1084]	; 13f60 <_start@@Base+0x9a8>
   13b20:	str	r3, [sp]
   13b24:	ldr	r3, [pc, #1080]	; 13f64 <_start@@Base+0x9ac>
   13b28:	add	r2, r2, #1
   13b2c:	bl	12218 <coda_set_error@plt>
   13b30:	bl	18728 <handle_coda_error@@Base>
   13b34:	ldr	r2, [sp, #64]	; 0x40
   13b38:	mov	r1, r4
   13b3c:	ldr	r0, [pc, #1024]	; 13f44 <_start@@Base+0x98c>
   13b40:	add	r2, r2, #1
   13b44:	bl	123bc <coda_cursor_read_string@plt>
   13b48:	cmp	r0, #0
   13b4c:	beq	13b54 <_start@@Base+0x59c>
   13b50:	bl	18728 <handle_coda_error@@Base>
   13b54:	ldr	r3, [pc, #1020]	; 13f58 <_start@@Base+0x9a0>
   13b58:	ldr	r3, [r3]
   13b5c:	cmp	r3, #0
   13b60:	beq	13b80 <_start@@Base+0x5c8>
   13b64:	mov	r2, r4
   13b68:	ldr	r1, [pc, #1016]	; 13f68 <_start@@Base+0x9b0>
   13b6c:	mov	r0, fp
   13b70:	bl	12428 <fprintf@plt>
   13b74:	mov	r0, r4
   13b78:	bl	12260 <free@plt>
   13b7c:	b	13ad4 <_start@@Base+0x51c>
   13b80:	mov	r1, fp
   13b84:	mov	r0, r4
   13b88:	bl	125fc <fputs@plt>
   13b8c:	b	13b74 <_start@@Base+0x5bc>
   13b90:	add	r1, sp, #64	; 0x40
   13b94:	ldr	r0, [pc, #936]	; 13f44 <_start@@Base+0x98c>
   13b98:	bl	12578 <coda_cursor_get_bit_size@plt>
   13b9c:	cmp	r0, #0
   13ba0:	beq	13ba8 <_start@@Base+0x5f0>
   13ba4:	bl	18728 <handle_coda_error@@Base>
   13ba8:	ldr	r2, [sp, #64]	; 0x40
   13bac:	ldr	r1, [sp, #68]	; 0x44
   13bb0:	lsr	r6, r2, #3
   13bb4:	ands	r3, r2, #7
   13bb8:	movne	r3, #1
   13bbc:	orr	r6, r6, r1, lsl #29
   13bc0:	asr	r7, r1, #3
   13bc4:	adds	r4, r6, r3
   13bc8:	mov	r0, r4
   13bcc:	adc	r5, r7, #0
   13bd0:	bl	12398 <malloc@plt>
   13bd4:	subs	r8, r0, #0
   13bd8:	bne	13bfc <_start@@Base+0x644>
   13bdc:	mov	r3, #163	; 0xa3
   13be0:	mov	r2, r4
   13be4:	ldr	r1, [pc, #884]	; 13f60 <_start@@Base+0x9a8>
   13be8:	mvn	r0, #0
   13bec:	str	r3, [sp]
   13bf0:	ldr	r3, [pc, #876]	; 13f64 <_start@@Base+0x9ac>
   13bf4:	bl	12218 <coda_set_error@plt>
   13bf8:	bl	18728 <handle_coda_error@@Base>
   13bfc:	ldrd	r2, [sp, #64]	; 0x40
   13c00:	mov	r1, r8
   13c04:	ldr	r0, [pc, #824]	; 13f44 <_start@@Base+0x98c>
   13c08:	strd	r2, [sp]
   13c0c:	mov	r2, #0
   13c10:	mov	r3, #0
   13c14:	bl	12614 <coda_cursor_read_bits@plt>
   13c18:	cmp	r0, #0
   13c1c:	beq	13c24 <_start@@Base+0x66c>
   13c20:	bl	18728 <handle_coda_error@@Base>
   13c24:	mov	r6, #0
   13c28:	mov	r7, #0
   13c2c:	ldr	r9, [pc, #824]	; 13f6c <_start@@Base+0x9b4>
   13c30:	ldr	sl, [pc, #824]	; 13f70 <_start@@Base+0x9b8>
   13c34:	b	13cb4 <_start@@Base+0x6fc>
   13c38:	add	r3, r8, r6
   13c3c:	ldrb	r2, [r3]
   13c40:	cmp	r2, #10
   13c44:	beq	13ce0 <_start@@Base+0x728>
   13c48:	bhi	13c84 <_start@@Base+0x6cc>
   13c4c:	cmp	r2, #8
   13c50:	beq	13cc8 <_start@@Base+0x710>
   13c54:	bhi	13cd4 <_start@@Base+0x71c>
   13c58:	cmp	r2, #7
   13c5c:	moveq	r1, fp
   13c60:	ldreq	r0, [pc, #780]	; 13f74 <_start@@Base+0x9bc>
   13c64:	beq	13ca8 <_start@@Base+0x6f0>
   13c68:	sub	r3, r2, #32
   13c6c:	cmp	r3, #94	; 0x5e
   13c70:	bhi	13d10 <_start@@Base+0x758>
   13c74:	mov	r1, fp
   13c78:	mov	r0, r2
   13c7c:	bl	12560 <fputc@plt>
   13c80:	b	13cac <_start@@Base+0x6f4>
   13c84:	cmp	r2, #12
   13c88:	beq	13cf8 <_start@@Base+0x740>
   13c8c:	bcc	13cec <_start@@Base+0x734>
   13c90:	cmp	r2, #13
   13c94:	beq	13d04 <_start@@Base+0x74c>
   13c98:	cmp	r2, #92	; 0x5c
   13c9c:	moveq	r1, fp
   13ca0:	ldreq	r0, [pc, #720]	; 13f78 <_start@@Base+0x9c0>
   13ca4:	bne	13c68 <_start@@Base+0x6b0>
   13ca8:	bl	125fc <fputs@plt>
   13cac:	adds	r6, r6, #1
   13cb0:	adc	r7, r7, #0
   13cb4:	cmp	r6, r4
   13cb8:	sbcs	r3, r7, r5
   13cbc:	blt	13c38 <_start@@Base+0x680>
   13cc0:	mov	r0, r8
   13cc4:	b	13b78 <_start@@Base+0x5c0>
   13cc8:	mov	r1, fp
   13ccc:	ldr	r0, [pc, #680]	; 13f7c <_start@@Base+0x9c4>
   13cd0:	b	13ca8 <_start@@Base+0x6f0>
   13cd4:	mov	r1, fp
   13cd8:	ldr	r0, [pc, #672]	; 13f80 <_start@@Base+0x9c8>
   13cdc:	b	13ca8 <_start@@Base+0x6f0>
   13ce0:	mov	r1, fp
   13ce4:	mov	r0, r9
   13ce8:	b	13ca8 <_start@@Base+0x6f0>
   13cec:	mov	r1, fp
   13cf0:	ldr	r0, [pc, #652]	; 13f84 <_start@@Base+0x9cc>
   13cf4:	b	13ca8 <_start@@Base+0x6f0>
   13cf8:	mov	r1, fp
   13cfc:	ldr	r0, [pc, #644]	; 13f88 <_start@@Base+0x9d0>
   13d00:	b	13ca8 <_start@@Base+0x6f0>
   13d04:	mov	r1, fp
   13d08:	ldr	r0, [pc, #636]	; 13f8c <_start@@Base+0x9d4>
   13d0c:	b	13ca8 <_start@@Base+0x6f0>
   13d10:	mov	r1, sl
   13d14:	mov	r0, fp
   13d18:	bl	12428 <fprintf@plt>
   13d1c:	b	13cac <_start@@Base+0x6f4>
   13d20:	add	r1, sp, #64	; 0x40
   13d24:	ldr	r0, [pc, #536]	; 13f44 <_start@@Base+0x98c>
   13d28:	bl	125b4 <coda_cursor_read_int32@plt>
   13d2c:	cmp	r0, #0
   13d30:	beq	13d38 <_start@@Base+0x780>
   13d34:	bl	18728 <handle_coda_error@@Base>
   13d38:	ldr	r1, [pc, #592]	; 13f90 <_start@@Base+0x9d8>
   13d3c:	ldr	r2, [sp, #64]	; 0x40
   13d40:	mov	r0, fp
   13d44:	bl	12428 <fprintf@plt>
   13d48:	b	13ad4 <_start@@Base+0x51c>
   13d4c:	add	r1, sp, #64	; 0x40
   13d50:	ldr	r0, [pc, #492]	; 13f44 <_start@@Base+0x98c>
   13d54:	bl	12284 <coda_cursor_read_uint32@plt>
   13d58:	cmp	r0, #0
   13d5c:	beq	13d64 <_start@@Base+0x7ac>
   13d60:	bl	18728 <handle_coda_error@@Base>
   13d64:	ldr	r1, [pc, #552]	; 13f94 <_start@@Base+0x9dc>
   13d68:	ldr	r2, [sp, #64]	; 0x40
   13d6c:	b	13d40 <_start@@Base+0x788>
   13d70:	add	r1, sp, #56	; 0x38
   13d74:	ldr	r0, [pc, #456]	; 13f44 <_start@@Base+0x98c>
   13d78:	bl	12518 <coda_cursor_read_int64@plt>
   13d7c:	cmp	r0, #0
   13d80:	beq	13d88 <_start@@Base+0x7d0>
   13d84:	bl	18728 <handle_coda_error@@Base>
   13d88:	add	r2, sp, #64	; 0x40
   13d8c:	ldrd	r0, [sp, #56]	; 0x38
   13d90:	bl	12620 <coda_str64@plt>
   13d94:	mov	r1, fp
   13d98:	add	r0, sp, #64	; 0x40
   13d9c:	bl	125fc <fputs@plt>
   13da0:	b	13ad4 <_start@@Base+0x51c>
   13da4:	add	r1, sp, #56	; 0x38
   13da8:	ldr	r0, [pc, #404]	; 13f44 <_start@@Base+0x98c>
   13dac:	bl	12404 <coda_cursor_read_uint64@plt>
   13db0:	cmp	r0, #0
   13db4:	beq	13dbc <_start@@Base+0x804>
   13db8:	bl	18728 <handle_coda_error@@Base>
   13dbc:	add	r2, sp, #64	; 0x40
   13dc0:	ldrd	r0, [sp, #56]	; 0x38
   13dc4:	bl	12254 <coda_str64u@plt>
   13dc8:	b	13d94 <_start@@Base+0x7dc>
   13dcc:	add	r1, sp, #64	; 0x40
   13dd0:	ldr	r0, [pc, #364]	; 13f44 <_start@@Base+0x98c>
   13dd4:	bl	12410 <coda_cursor_read_double@plt>
   13dd8:	cmp	r0, #0
   13ddc:	beq	13de4 <_start@@Base+0x82c>
   13de0:	bl	18728 <handle_coda_error@@Base>
   13de4:	ldr	r1, [sp, #52]	; 0x34
   13de8:	ldrd	r2, [sp, #64]	; 0x40
   13dec:	cmp	r1, #8
   13df0:	ldreq	r1, [pc, #416]	; 13f98 <_start@@Base+0x9e0>
   13df4:	beq	13dfc <_start@@Base+0x844>
   13df8:	ldr	r1, [pc, #412]	; 13f9c <_start@@Base+0x9e4>
   13dfc:	mov	r0, fp
   13e00:	bl	12428 <fprintf@plt>
   13e04:	b	13ad4 <_start@@Base+0x51c>
   13e08:	ldr	r3, [pc, #400]	; 13fa0 <_start@@Base+0x9e8>
   13e0c:	movw	r2, #294	; 0x126
   13e10:	ldr	r1, [pc, #332]	; 13f64 <_start@@Base+0x9ac>
   13e14:	ldr	r0, [pc, #392]	; 13fa4 <_start@@Base+0x9ec>
   13e18:	bl	1262c <__assert_fail@plt>
   13e1c:	add	r1, sp, #52	; 0x34
   13e20:	ldr	r0, [r9, r5, lsl #2]
   13e24:	bl	124a0 <coda_type_get_special_type@plt>
   13e28:	cmp	r0, #0
   13e2c:	beq	13e34 <_start@@Base+0x87c>
   13e30:	bl	18728 <handle_coda_error@@Base>
   13e34:	ldr	r3, [sp, #52]	; 0x34
   13e38:	cmp	r3, #0
   13e3c:	beq	13ad4 <_start@@Base+0x51c>
   13e40:	cmp	r3, #2
   13e44:	bls	13e90 <_start@@Base+0x8d8>
   13e48:	cmp	r3, #3
   13e4c:	bne	13ad4 <_start@@Base+0x51c>
   13e50:	add	r1, sp, #64	; 0x40
   13e54:	ldr	r0, [pc, #232]	; 13f44 <_start@@Base+0x98c>
   13e58:	bl	12548 <coda_cursor_read_complex_double_pair@plt>
   13e5c:	cmp	r0, #0
   13e60:	beq	13e68 <_start@@Base+0x8b0>
   13e64:	bl	18728 <handle_coda_error@@Base>
   13e68:	ldrd	r2, [sp, #72]	; 0x48
   13e6c:	mov	r0, fp
   13e70:	ldr	r1, [pc, #304]	; 13fa8 <_start@@Base+0x9f0>
   13e74:	strd	r2, [sp, #8]
   13e78:	ldr	r3, [pc, #208]	; 13f50 <_start@@Base+0x998>
   13e7c:	ldr	r3, [r3]
   13e80:	str	r3, [sp]
   13e84:	ldrd	r2, [sp, #64]	; 0x40
   13e88:	bl	12428 <fprintf@plt>
   13e8c:	b	13ad4 <_start@@Base+0x51c>
   13e90:	add	r1, sp, #56	; 0x38
   13e94:	ldr	r0, [pc, #168]	; 13f44 <_start@@Base+0x98c>
   13e98:	bl	12410 <coda_cursor_read_double@plt>
   13e9c:	cmp	r0, #0
   13ea0:	beq	13ea8 <_start@@Base+0x8f0>
   13ea4:	bl	18728 <handle_coda_error@@Base>
   13ea8:	ldr	r1, [sp, #52]	; 0x34
   13eac:	ldrd	r2, [sp, #56]	; 0x38
   13eb0:	cmp	r1, #2
   13eb4:	bne	13df8 <_start@@Base+0x840>
   13eb8:	ldr	r1, [pc, #236]	; 13fac <_start@@Base+0x9f4>
   13ebc:	ldr	r1, [r1]
   13ec0:	cmp	r1, #0
   13ec4:	beq	13df8 <_start@@Base+0x840>
   13ec8:	vmov	d0, r2, r3
   13ecc:	bl	1241c <coda_isNaN@plt>
   13ed0:	cmp	r0, #0
   13ed4:	beq	13f00 <_start@@Base+0x948>
   13ed8:	ldr	r1, [pc, #208]	; 13fb0 <_start@@Base+0x9f8>
   13edc:	add	r0, sp, #64	; 0x40
   13ee0:	bl	12350 <strcpy@plt>
   13ee4:	ldr	r3, [pc, #108]	; 13f58 <_start@@Base+0x9a0>
   13ee8:	ldr	r3, [r3]
   13eec:	cmp	r3, #0
   13ef0:	addne	r2, sp, #64	; 0x40
   13ef4:	ldrne	r1, [pc, #108]	; 13f68 <_start@@Base+0x9b0>
   13ef8:	bne	13d40 <_start@@Base+0x788>
   13efc:	b	13d94 <_start@@Base+0x7dc>
   13f00:	vldr	d0, [sp, #56]	; 0x38
   13f04:	bl	122c0 <coda_isInf@plt>
   13f08:	cmp	r0, #0
   13f0c:	bne	13ed8 <_start@@Base+0x920>
   13f10:	add	r1, sp, #64	; 0x40
   13f14:	ldr	r0, [pc, #152]	; 13fb4 <_start@@Base+0x9fc>
   13f18:	vldr	d0, [sp, #56]	; 0x38
   13f1c:	bl	1223c <coda_time_double_to_string@plt>
   13f20:	cmp	r0, #0
   13f24:	beq	13ee4 <_start@@Base+0x92c>
   13f28:	bl	18728 <handle_coda_error@@Base>
   13f2c:	b	13ee4 <_start@@Base+0x92c>
   13f30:	ldr	r3, [pc, #104]	; 13fa0 <_start@@Base+0x9e8>
   13f34:	mov	r2, #368	; 0x170
   13f38:	b	13e10 <_start@@Base+0x858>
   13f3c:	strdeq	fp, [r2], -r0
   13f40:	strheq	ip, [r2], -r8
   13f44:	andeq	fp, r2, r0, lsl #5
   13f48:	andeq	ip, r2, r8, lsr #1
   13f4c:	strdeq	fp, [r2], -r8
   13f50:	muleq	r2, ip, r0
   13f54:	strdeq	r8, [r1], -r5
   13f58:	andeq	ip, r2, ip, lsr #4
   13f5c:	strdeq	r8, [r1], -fp
   13f60:	andeq	r8, r1, fp, asr #20
   13f64:	andeq	r8, r1, r0, lsl #20
   13f68:	andeq	r9, r1, ip, lsl r0
   13f6c:	andeq	r8, r1, r9, lsl #21
   13f70:	muleq	r1, r8, sl
   13f74:	andeq	r8, r1, r0, lsl #21
   13f78:	muleq	r1, r5, sl
   13f7c:	andeq	r8, r1, r3, lsl #21
   13f80:	andeq	r8, r1, r6, lsl #21
   13f84:	andeq	r8, r1, ip, lsl #21
   13f88:	andeq	r8, r1, pc, lsl #21
   13f8c:	muleq	r1, r2, sl
   13f90:	muleq	r1, fp, pc	; <UNPREDICTABLE>
   13f94:	muleq	r1, lr, sl
   13f98:	andeq	r8, r1, r2, lsr #21
   13f9c:	andeq	r8, r1, r7, lsr #21
   13fa0:	andeq	r8, r1, r4, ror #19
   13fa4:	andeq	r8, r1, r4, asr fp
   13fa8:	andeq	r8, r1, r3, ror #21
   13fac:	andeq	fp, r2, r4, ror #3
   13fb0:	andeq	r8, r1, sp, lsr #21
   13fb4:	andeq	r8, r1, r8, asr #21

00013fb8 <export_data_element_to_ascii@@Base>:
   13fb8:	ldr	r3, [pc, #152]	; 14058 <export_data_element_to_ascii@@Base+0xa0>
   13fbc:	push	{r4, lr}
   13fc0:	ldr	r2, [r3]
   13fc4:	cmp	r2, #0
   13fc8:	movne	r2, #0
   13fcc:	strne	r2, [r3]
   13fd0:	bne	13fe4 <export_data_element_to_ascii@@Base+0x2c>
   13fd4:	ldr	r3, [pc, #128]	; 1405c <export_data_element_to_ascii@@Base+0xa4>
   13fd8:	mov	r0, #10
   13fdc:	ldr	r1, [r3]
   13fe0:	bl	12560 <fputc@plt>
   13fe4:	ldr	r3, [pc, #116]	; 14060 <export_data_element_to_ascii@@Base+0xa8>
   13fe8:	ldr	r3, [r3]
   13fec:	cmp	r3, #0
   13ff0:	beq	14014 <export_data_element_to_ascii@@Base+0x5c>
   13ff4:	ldr	r4, [pc, #96]	; 1405c <export_data_element_to_ascii@@Base+0xa4>
   13ff8:	mov	r1, #2
   13ffc:	mov	r2, #0
   14000:	ldr	r0, [r4]
   14004:	bl	16da4 <print_full_field_name@@Base>
   14008:	mov	r0, #10
   1400c:	ldr	r1, [r4]
   14010:	bl	12560 <fputc@plt>
   14014:	ldr	r2, [pc, #72]	; 14064 <export_data_element_to_ascii@@Base+0xac>
   14018:	ldr	r3, [r2]
   1401c:	cmp	r3, #0
   14020:	ble	1403c <export_data_element_to_ascii@@Base+0x84>
   14024:	add	r3, r3, #37	; 0x25
   14028:	lsl	r3, r3, #3
   1402c:	add	r2, r2, r3
   14030:	ldrd	r2, [r2]
   14034:	orrs	r3, r2, r3
   14038:	popeq	{r4, pc}
   1403c:	mov	r3, #0
   14040:	pop	{r4, lr}
   14044:	mov	r2, r3
   14048:	mov	r1, r3
   1404c:	ldr	r0, [pc, #8]	; 1405c <export_data_element_to_ascii@@Base+0xa4>
   14050:	ldr	r0, [r0]
   14054:	b	136a8 <_start@@Base+0xf0>
   14058:	andeq	fp, r2, r8, lsr #3
   1405c:	muleq	r2, r8, r0
   14060:	andeq	ip, r2, r8, lsr #4
   14064:	strheq	ip, [r2], -r8
   14068:	push	{r0, r1, r2, r3}
   1406c:	ldr	r3, [pc, #36]	; 14098 <export_data_element_to_ascii@@Base+0xe0>
   14070:	push	{r0, r1, r2, lr}
   14074:	add	r2, sp, #20
   14078:	ldr	r1, [sp, #16]
   1407c:	str	r2, [sp, #4]
   14080:	ldr	r0, [r3]
   14084:	bl	12524 <vfprintf@plt>
   14088:	add	sp, sp, #12
   1408c:	pop	{lr}		; (ldr lr, [sp], #4)
   14090:	add	sp, sp, #16
   14094:	bx	lr
   14098:	muleq	r2, r8, r0
   1409c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140a0:	mov	r6, r0
   140a4:	mov	r5, r1
   140a8:	mov	r4, #0
   140ac:	ldr	r7, [pc, #168]	; 1415c <export_data_element_to_ascii@@Base+0x1a4>
   140b0:	ldr	r8, [pc, #168]	; 14160 <export_data_element_to_ascii@@Base+0x1a8>
   140b4:	ldr	r9, [pc, #168]	; 14164 <export_data_element_to_ascii@@Base+0x1ac>
   140b8:	cmp	r4, r5
   140bc:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   140c0:	ldrb	r1, [r6, r4]
   140c4:	cmp	r1, #10
   140c8:	beq	1413c <export_data_element_to_ascii@@Base+0x184>
   140cc:	bhi	14100 <export_data_element_to_ascii@@Base+0x148>
   140d0:	cmp	r1, #8
   140d4:	beq	1412c <export_data_element_to_ascii@@Base+0x174>
   140d8:	bhi	14134 <export_data_element_to_ascii@@Base+0x17c>
   140dc:	cmp	r1, #7
   140e0:	ldreq	r0, [pc, #128]	; 14168 <export_data_element_to_ascii@@Base+0x1b0>
   140e4:	beq	14120 <export_data_element_to_ascii@@Base+0x168>
   140e8:	sub	r3, r1, #32
   140ec:	cmp	r3, #94	; 0x5e
   140f0:	movls	r0, r9
   140f4:	movhi	r0, r8
   140f8:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   140fc:	b	14124 <export_data_element_to_ascii@@Base+0x16c>
   14100:	cmp	r1, #12
   14104:	beq	1414c <export_data_element_to_ascii@@Base+0x194>
   14108:	bcc	14144 <export_data_element_to_ascii@@Base+0x18c>
   1410c:	cmp	r1, #13
   14110:	beq	14154 <export_data_element_to_ascii@@Base+0x19c>
   14114:	cmp	r1, #92	; 0x5c
   14118:	ldreq	r0, [pc, #76]	; 1416c <export_data_element_to_ascii@@Base+0x1b4>
   1411c:	bne	140e8 <export_data_element_to_ascii@@Base+0x130>
   14120:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14124:	add	r4, r4, #1
   14128:	b	140b8 <export_data_element_to_ascii@@Base+0x100>
   1412c:	ldr	r0, [pc, #60]	; 14170 <export_data_element_to_ascii@@Base+0x1b8>
   14130:	b	14120 <export_data_element_to_ascii@@Base+0x168>
   14134:	ldr	r0, [pc, #56]	; 14174 <export_data_element_to_ascii@@Base+0x1bc>
   14138:	b	14120 <export_data_element_to_ascii@@Base+0x168>
   1413c:	mov	r0, r7
   14140:	b	14120 <export_data_element_to_ascii@@Base+0x168>
   14144:	ldr	r0, [pc, #44]	; 14178 <export_data_element_to_ascii@@Base+0x1c0>
   14148:	b	14120 <export_data_element_to_ascii@@Base+0x168>
   1414c:	ldr	r0, [pc, #40]	; 1417c <export_data_element_to_ascii@@Base+0x1c4>
   14150:	b	14120 <export_data_element_to_ascii@@Base+0x168>
   14154:	ldr	r0, [pc, #36]	; 14180 <export_data_element_to_ascii@@Base+0x1c8>
   14158:	b	14120 <export_data_element_to_ascii@@Base+0x168>
   1415c:	andeq	r8, r1, r9, lsl #21
   14160:	muleq	r1, r8, sl
   14164:	strdeq	r8, [r1], -ip
   14168:	andeq	r8, r1, r0, lsl #21
   1416c:	muleq	r1, r5, sl
   14170:	andeq	r8, r1, r3, lsl #21
   14174:	andeq	r8, r1, r6, lsl #21
   14178:	andeq	r8, r1, ip, lsl #21
   1417c:	andeq	r8, r1, pc, lsl #21
   14180:	muleq	r1, r2, sl
   14184:	push	{r0, r1, r2, r3}
   14188:	ldr	r3, [pc, #104]	; 141f8 <export_data_element_to_ascii@@Base+0x240>
   1418c:	push	{r0, r1, r4, r5, r6, lr}
   14190:	ldr	r4, [r3]
   14194:	cmp	r4, #0
   14198:	blt	141d0 <export_data_element_to_ascii@@Base+0x218>
   1419c:	ldr	r5, [pc, #88]	; 141fc <export_data_element_to_ascii@@Base+0x244>
   141a0:	ldr	r6, [pc, #88]	; 14200 <export_data_element_to_ascii@@Base+0x248>
   141a4:	cmp	r4, #0
   141a8:	bne	141e4 <export_data_element_to_ascii@@Base+0x22c>
   141ac:	ldr	r1, [sp, #24]
   141b0:	add	r2, sp, #28
   141b4:	ldr	r0, [r5]
   141b8:	str	r2, [sp, #4]
   141bc:	bl	12524 <vfprintf@plt>
   141c0:	add	sp, sp, #8
   141c4:	pop	{r4, r5, r6, lr}
   141c8:	add	sp, sp, #16
   141cc:	bx	lr
   141d0:	ldr	r3, [pc, #44]	; 14204 <export_data_element_to_ascii@@Base+0x24c>
   141d4:	mov	r2, #44	; 0x2c
   141d8:	ldr	r1, [pc, #40]	; 14208 <export_data_element_to_ascii@@Base+0x250>
   141dc:	ldr	r0, [pc, #40]	; 1420c <export_data_element_to_ascii@@Base+0x254>
   141e0:	bl	1262c <__assert_fail@plt>
   141e4:	mov	r0, r6
   141e8:	ldr	r1, [r5]
   141ec:	sub	r4, r4, #1
   141f0:	bl	125fc <fputs@plt>
   141f4:	b	141a4 <export_data_element_to_ascii@@Base+0x1ec>
   141f8:	andeq	fp, r2, r4, asr #3
   141fc:	muleq	r2, r8, r0
   14200:	andeq	r8, r1, r5, asr #21
   14204:	andeq	r8, r1, sl, ror #21
   14208:	strdeq	r8, [r1], -pc	; <UNPREDICTABLE>
   1420c:	andeq	r8, r1, sl, asr #22
   14210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14214:	sub	sp, sp, #636	; 0x27c
   14218:	mov	r5, r1
   1421c:	add	r1, sp, #32
   14220:	mov	r4, r0
   14224:	bl	122e4 <coda_cursor_has_attributes@plt>
   14228:	cmp	r0, #0
   1422c:	beq	14234 <export_data_element_to_ascii@@Base+0x27c>
   14230:	bl	18728 <handle_coda_error@@Base>
   14234:	ldr	r3, [sp, #32]
   14238:	cmp	r3, #0
   1423c:	beq	1428c <export_data_element_to_ascii@@Base+0x2d4>
   14240:	mov	r0, r4
   14244:	bl	12464 <coda_cursor_goto_attributes@plt>
   14248:	cmp	r0, #0
   1424c:	beq	14254 <export_data_element_to_ascii@@Base+0x29c>
   14250:	bl	18728 <handle_coda_error@@Base>
   14254:	ldr	r8, [pc, #2576]	; 14c6c <export_data_element_to_ascii@@Base+0xcb4>
   14258:	ldr	r0, [pc, #2576]	; 14c70 <export_data_element_to_ascii@@Base+0xcb8>
   1425c:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   14260:	mov	r0, r4
   14264:	mov	r1, r5
   14268:	ldr	r3, [r8]
   1426c:	add	r3, r3, #1
   14270:	str	r3, [r8]
   14274:	bl	14210 <export_data_element_to_ascii@@Base+0x258>
   14278:	ldr	r3, [r8]
   1427c:	mov	r0, r4
   14280:	sub	r3, r3, #1
   14284:	str	r3, [r8]
   14288:	bl	123c8 <coda_cursor_goto_parent@plt>
   1428c:	add	r1, sp, #28
   14290:	mov	r0, r4
   14294:	bl	122f0 <coda_cursor_get_type_class@plt>
   14298:	cmp	r0, #0
   1429c:	beq	142a4 <export_data_element_to_ascii@@Base+0x2ec>
   142a0:	bl	18728 <handle_coda_error@@Base>
   142a4:	ldr	r3, [sp, #28]
   142a8:	cmp	r3, #6
   142ac:	ldrls	pc, [pc, r3, lsl #2]
   142b0:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   142b4:	ldrdeq	r4, [r1], -r0
   142b8:	andeq	r4, r1, r4, asr #11
   142bc:	strdeq	r4, [r1], -r0
   142c0:	strdeq	r4, [r1], -r0
   142c4:	strdeq	r4, [r1], -r0
   142c8:	strdeq	r4, [r1], -r0
   142cc:	andeq	r4, r1, ip, lsl #22
   142d0:	add	r1, sp, #36	; 0x24
   142d4:	mov	r0, r4
   142d8:	bl	12248 <coda_cursor_get_num_elements@plt>
   142dc:	cmp	r0, #0
   142e0:	beq	142e8 <export_data_element_to_ascii@@Base+0x330>
   142e4:	bl	18728 <handle_coda_error@@Base>
   142e8:	ldr	r3, [sp, #36]	; 0x24
   142ec:	cmp	r3, #0
   142f0:	ble	145f0 <export_data_element_to_ascii@@Base+0x638>
   142f4:	add	r1, sp, #40	; 0x28
   142f8:	mov	r0, r4
   142fc:	bl	122a8 <coda_cursor_get_type@plt>
   14300:	cmp	r0, #0
   14304:	beq	1430c <export_data_element_to_ascii@@Base+0x354>
   14308:	bl	18728 <handle_coda_error@@Base>
   1430c:	add	r1, sp, #44	; 0x2c
   14310:	ldr	r0, [sp, #40]	; 0x28
   14314:	bl	124ac <coda_type_get_record_union_status@plt>
   14318:	cmp	r0, #0
   1431c:	beq	14324 <export_data_element_to_ascii@@Base+0x36c>
   14320:	bl	18728 <handle_coda_error@@Base>
   14324:	ldr	r3, [sp, #44]	; 0x2c
   14328:	cmp	r3, #0
   1432c:	beq	14468 <export_data_element_to_ascii@@Base+0x4b0>
   14330:	add	r1, sp, #48	; 0x30
   14334:	mov	r0, r4
   14338:	bl	125a8 <coda_cursor_get_available_union_field_index@plt>
   1433c:	cmp	r0, #0
   14340:	beq	14348 <export_data_element_to_ascii@@Base+0x390>
   14344:	bl	18728 <handle_coda_error@@Base>
   14348:	add	r2, sp, #56	; 0x38
   1434c:	ldr	r0, [sp, #40]	; 0x28
   14350:	ldr	r1, [sp, #48]	; 0x30
   14354:	bl	125f0 <coda_type_get_record_field_name@plt>
   14358:	cmp	r0, #0
   1435c:	beq	14364 <export_data_element_to_ascii@@Base+0x3ac>
   14360:	bl	18728 <handle_coda_error@@Base>
   14364:	mov	r0, r4
   14368:	ldr	r1, [sp, #48]	; 0x30
   1436c:	bl	12368 <coda_cursor_goto_record_field_by_index@plt>
   14370:	cmp	r0, #0
   14374:	beq	1437c <export_data_element_to_ascii@@Base+0x3c4>
   14378:	bl	18728 <handle_coda_error@@Base>
   1437c:	ldr	r0, [pc, #2288]	; 14c74 <export_data_element_to_ascii@@Base+0xcbc>
   14380:	ldr	r1, [sp, #56]	; 0x38
   14384:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   14388:	ldr	r3, [pc, #2280]	; 14c78 <export_data_element_to_ascii@@Base+0xcc0>
   1438c:	ldr	r3, [r3]
   14390:	cmp	r3, #0
   14394:	beq	14400 <export_data_element_to_ascii@@Base+0x448>
   14398:	add	r1, sp, #80	; 0x50
   1439c:	mov	r0, r4
   143a0:	bl	125c0 <coda_cursor_get_file_bit_offset@plt>
   143a4:	cmp	r0, #0
   143a8:	beq	143b0 <export_data_element_to_ascii@@Base+0x3f8>
   143ac:	bl	18728 <handle_coda_error@@Base>
   143b0:	ldrd	r6, [sp, #80]	; 0x50
   143b4:	cmp	r6, #0
   143b8:	sbcs	r3, r7, #0
   143bc:	blt	14400 <export_data_element_to_ascii@@Base+0x448>
   143c0:	lsr	r0, r6, #3
   143c4:	add	r2, sp, #112	; 0x70
   143c8:	asr	r1, r7, #3
   143cc:	orr	r0, r0, r7, lsl #29
   143d0:	bl	12620 <coda_str64@plt>
   143d4:	add	r1, sp, #112	; 0x70
   143d8:	ldr	r0, [pc, #2204]	; 14c7c <export_data_element_to_ascii@@Base+0xcc4>
   143dc:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   143e0:	ldr	r1, [sp, #80]	; 0x50
   143e4:	mov	r3, #0
   143e8:	and	r2, r1, #7
   143ec:	orrs	r3, r2, r3
   143f0:	beq	14400 <export_data_element_to_ascii@@Base+0x448>
   143f4:	mov	r1, r2
   143f8:	ldr	r0, [pc, #2176]	; 14c80 <export_data_element_to_ascii@@Base+0xcc8>
   143fc:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14400:	ldr	r0, [pc, #2172]	; 14c84 <export_data_element_to_ascii@@Base+0xccc>
   14404:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14408:	ldr	r3, [pc, #2140]	; 14c6c <export_data_element_to_ascii@@Base+0xcb4>
   1440c:	ldr	r2, [r3]
   14410:	mov	r6, r3
   14414:	add	r2, r2, #1
   14418:	str	r2, [r3]
   1441c:	ldr	r2, [pc, #2148]	; 14c88 <export_data_element_to_ascii@@Base+0xcd0>
   14420:	ldr	r2, [r2]
   14424:	cmp	r2, r5
   14428:	movle	r1, #0
   1442c:	movgt	r1, #1
   14430:	orrs	r2, r1, r2, lsr #31
   14434:	beq	1445c <export_data_element_to_ascii@@Base+0x4a4>
   14438:	add	r1, r5, #1
   1443c:	mov	r0, r4
   14440:	bl	14210 <export_data_element_to_ascii@@Base+0x258>
   14444:	ldr	r3, [r6]
   14448:	sub	r3, r3, #1
   1444c:	str	r3, [r6]
   14450:	mov	r0, r4
   14454:	bl	123c8 <coda_cursor_goto_parent@plt>
   14458:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   1445c:	ldr	r0, [pc, #2088]	; 14c8c <export_data_element_to_ascii@@Base+0xcd4>
   14460:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   14464:	b	14444 <export_data_element_to_ascii@@Base+0x48c>
   14468:	mov	r0, r4
   1446c:	bl	1235c <coda_cursor_goto_first_record_field@plt>
   14470:	cmp	r0, #0
   14474:	beq	1447c <export_data_element_to_ascii@@Base+0x4c4>
   14478:	bl	18728 <handle_coda_error@@Base>
   1447c:	ldr	r9, [pc, #2032]	; 14c74 <export_data_element_to_ascii@@Base+0xcbc>
   14480:	mov	r3, #0
   14484:	ldr	r8, [pc, #2016]	; 14c6c <export_data_element_to_ascii@@Base+0xcb4>
   14488:	str	r3, [sp, #48]	; 0x30
   1448c:	ldr	r3, [sp, #36]	; 0x24
   14490:	ldr	r1, [sp, #48]	; 0x30
   14494:	cmp	r1, r3
   14498:	bge	14450 <export_data_element_to_ascii@@Base+0x498>
   1449c:	add	r2, sp, #56	; 0x38
   144a0:	ldr	r0, [sp, #40]	; 0x28
   144a4:	bl	125f0 <coda_type_get_record_field_name@plt>
   144a8:	cmp	r0, #0
   144ac:	beq	144b4 <export_data_element_to_ascii@@Base+0x4fc>
   144b0:	bl	18728 <handle_coda_error@@Base>
   144b4:	mov	r0, r9
   144b8:	ldr	r1, [sp, #56]	; 0x38
   144bc:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   144c0:	ldr	r3, [pc, #1968]	; 14c78 <export_data_element_to_ascii@@Base+0xcc0>
   144c4:	ldr	r3, [r3]
   144c8:	cmp	r3, #0
   144cc:	beq	14538 <export_data_element_to_ascii@@Base+0x580>
   144d0:	add	r1, sp, #80	; 0x50
   144d4:	mov	r0, r4
   144d8:	bl	125c0 <coda_cursor_get_file_bit_offset@plt>
   144dc:	cmp	r0, #0
   144e0:	beq	144e8 <export_data_element_to_ascii@@Base+0x530>
   144e4:	bl	18728 <handle_coda_error@@Base>
   144e8:	ldrd	sl, [sp, #80]	; 0x50
   144ec:	cmp	sl, #0
   144f0:	sbcs	r3, fp, #0
   144f4:	blt	14538 <export_data_element_to_ascii@@Base+0x580>
   144f8:	lsr	r0, sl, #3
   144fc:	add	r2, sp, #112	; 0x70
   14500:	mov	r7, #0
   14504:	asr	r1, fp, #3
   14508:	orr	r0, r0, fp, lsl #29
   1450c:	bl	12620 <coda_str64@plt>
   14510:	add	r1, sp, #112	; 0x70
   14514:	ldr	r0, [pc, #1888]	; 14c7c <export_data_element_to_ascii@@Base+0xcc4>
   14518:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   1451c:	ldr	r1, [sp, #80]	; 0x50
   14520:	and	r6, r1, #7
   14524:	orrs	r3, r6, r7
   14528:	beq	14538 <export_data_element_to_ascii@@Base+0x580>
   1452c:	mov	r1, r6
   14530:	ldr	r0, [pc, #1864]	; 14c80 <export_data_element_to_ascii@@Base+0xcc8>
   14534:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14538:	ldr	r0, [pc, #1860]	; 14c84 <export_data_element_to_ascii@@Base+0xccc>
   1453c:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14540:	ldr	r3, [r8]
   14544:	add	r3, r3, #1
   14548:	str	r3, [r8]
   1454c:	ldr	r3, [pc, #1844]	; 14c88 <export_data_element_to_ascii@@Base+0xcd0>
   14550:	ldr	r3, [r3]
   14554:	cmp	r3, r5
   14558:	movle	r2, #0
   1455c:	movgt	r2, #1
   14560:	orrs	r3, r2, r3, lsr #31
   14564:	beq	145b8 <export_data_element_to_ascii@@Base+0x600>
   14568:	add	r1, r5, #1
   1456c:	mov	r0, r4
   14570:	bl	14210 <export_data_element_to_ascii@@Base+0x258>
   14574:	ldr	r3, [r8]
   14578:	ldr	r2, [sp, #48]	; 0x30
   1457c:	sub	r3, r3, #1
   14580:	str	r3, [r8]
   14584:	ldr	r3, [sp, #36]	; 0x24
   14588:	sub	r3, r3, #1
   1458c:	cmp	r3, r2
   14590:	ble	145a8 <export_data_element_to_ascii@@Base+0x5f0>
   14594:	mov	r0, r4
   14598:	bl	12554 <coda_cursor_goto_next_record_field@plt>
   1459c:	cmp	r0, #0
   145a0:	beq	145a8 <export_data_element_to_ascii@@Base+0x5f0>
   145a4:	bl	18728 <handle_coda_error@@Base>
   145a8:	ldr	r3, [sp, #48]	; 0x30
   145ac:	add	r3, r3, #1
   145b0:	str	r3, [sp, #48]	; 0x30
   145b4:	b	1448c <export_data_element_to_ascii@@Base+0x4d4>
   145b8:	ldr	r0, [pc, #1740]	; 14c8c <export_data_element_to_ascii@@Base+0xcd4>
   145bc:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   145c0:	b	14574 <export_data_element_to_ascii@@Base+0x5bc>
   145c4:	add	r9, sp, #80	; 0x50
   145c8:	add	r1, sp, #44	; 0x2c
   145cc:	mov	r2, r9
   145d0:	mov	r0, r4
   145d4:	bl	124f4 <coda_cursor_get_array_dim@plt>
   145d8:	cmp	r0, #0
   145dc:	beq	145e4 <export_data_element_to_ascii@@Base+0x62c>
   145e0:	bl	18728 <handle_coda_error@@Base>
   145e4:	ldr	r2, [sp, #44]	; 0x2c
   145e8:	cmp	r2, #0
   145ec:	bge	14794 <export_data_element_to_ascii@@Base+0x7dc>
   145f0:	add	sp, sp, #636	; 0x27c
   145f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145f8:	ldr	ip, [r9, r3, lsl #2]
   145fc:	str	r0, [r1, r3, lsl #2]
   14600:	add	r3, r3, #1
   14604:	mul	r7, ip, r7
   14608:	cmp	r2, r3
   1460c:	bne	145f8 <export_data_element_to_ascii@@Base+0x640>
   14610:	cmp	r7, #0
   14614:	ble	145f0 <export_data_element_to_ascii@@Base+0x638>
   14618:	mov	r0, r4
   1461c:	bl	12338 <coda_cursor_goto_first_array_element@plt>
   14620:	cmp	r0, #0
   14624:	beq	1462c <export_data_element_to_ascii@@Base+0x674>
   14628:	bl	18728 <handle_coda_error@@Base>
   1462c:	ldr	sl, [pc, #1592]	; 14c6c <export_data_element_to_ascii@@Base+0xcb4>
   14630:	mov	r8, #0
   14634:	mov	fp, sl
   14638:	ldr	r0, [pc, #1616]	; 14c90 <export_data_element_to_ascii@@Base+0xcd8>
   1463c:	mov	r6, #0
   14640:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   14644:	ldr	r2, [sp, #44]	; 0x2c
   14648:	cmp	r2, r6
   1464c:	bgt	147a8 <export_data_element_to_ascii@@Base+0x7f0>
   14650:	ldr	r0, [pc, #1596]	; 14c94 <export_data_element_to_ascii@@Base+0xcdc>
   14654:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14658:	ldr	r3, [pc, #1560]	; 14c78 <export_data_element_to_ascii@@Base+0xcc0>
   1465c:	ldr	r3, [r3]
   14660:	cmp	r3, #0
   14664:	beq	146e8 <export_data_element_to_ascii@@Base+0x730>
   14668:	add	r1, sp, #48	; 0x30
   1466c:	mov	r0, r4
   14670:	bl	125c0 <coda_cursor_get_file_bit_offset@plt>
   14674:	cmp	r0, #0
   14678:	beq	14680 <export_data_element_to_ascii@@Base+0x6c8>
   1467c:	bl	18728 <handle_coda_error@@Base>
   14680:	ldrd	r2, [sp, #48]	; 0x30
   14684:	cmp	r2, #0
   14688:	strd	r2, [sp, #8]
   1468c:	sbcs	r3, r3, #0
   14690:	blt	146e8 <export_data_element_to_ascii@@Base+0x730>
   14694:	ldr	r3, [sp, #8]
   14698:	add	r2, sp, #56	; 0x38
   1469c:	lsr	r0, r3, #3
   146a0:	ldr	r3, [sp, #12]
   146a4:	orr	r0, r0, r3, lsl #29
   146a8:	asr	r1, r3, #3
   146ac:	bl	12620 <coda_str64@plt>
   146b0:	add	r1, sp, #56	; 0x38
   146b4:	ldr	r0, [pc, #1472]	; 14c7c <export_data_element_to_ascii@@Base+0xcc4>
   146b8:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   146bc:	ldr	r1, [sp, #48]	; 0x30
   146c0:	and	r3, r1, #7
   146c4:	str	r3, [sp, #16]
   146c8:	mov	r3, #0
   146cc:	str	r3, [sp, #20]
   146d0:	ldrd	r2, [sp, #16]
   146d4:	orrs	r3, r2, r3
   146d8:	beq	146e8 <export_data_element_to_ascii@@Base+0x730>
   146dc:	and	r1, r1, #7
   146e0:	ldr	r0, [pc, #1432]	; 14c80 <export_data_element_to_ascii@@Base+0xcc8>
   146e4:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   146e8:	ldr	r0, [pc, #1428]	; 14c84 <export_data_element_to_ascii@@Base+0xccc>
   146ec:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   146f0:	ldr	r3, [sl]
   146f4:	add	r3, r3, #1
   146f8:	str	r3, [sl]
   146fc:	ldr	r3, [pc, #1412]	; 14c88 <export_data_element_to_ascii@@Base+0xcd0>
   14700:	ldr	r3, [r3]
   14704:	cmp	r3, r5
   14708:	movle	r2, #0
   1470c:	movgt	r2, #1
   14710:	orrs	r3, r2, r3, lsr #31
   14714:	beq	147d8 <export_data_element_to_ascii@@Base+0x820>
   14718:	add	r1, r5, #1
   1471c:	mov	r0, r4
   14720:	bl	14210 <export_data_element_to_ascii@@Base+0x258>
   14724:	ldr	r3, [fp]
   14728:	add	r1, sp, #112	; 0x70
   1472c:	ldr	r2, [sp, #44]	; 0x2c
   14730:	sub	r3, r3, #1
   14734:	add	r6, r1, r2, lsl #2
   14738:	mov	r1, #0
   1473c:	str	r3, [fp]
   14740:	sub	r3, r2, #1
   14744:	cmp	r3, #0
   14748:	blt	14764 <export_data_element_to_ascii@@Base+0x7ac>
   1474c:	ldr	r2, [r6, #-4]
   14750:	ldr	r0, [r9, r3, lsl #2]
   14754:	add	r2, r2, #1
   14758:	cmp	r2, r0
   1475c:	str	r2, [r6, #-4]!
   14760:	beq	147e4 <export_data_element_to_ascii@@Base+0x82c>
   14764:	sub	r3, r7, #1
   14768:	cmp	r3, r8
   1476c:	ble	14784 <export_data_element_to_ascii@@Base+0x7cc>
   14770:	mov	r0, r4
   14774:	bl	12434 <coda_cursor_goto_next_array_element@plt>
   14778:	cmp	r0, #0
   1477c:	beq	14784 <export_data_element_to_ascii@@Base+0x7cc>
   14780:	bl	18728 <handle_coda_error@@Base>
   14784:	add	r8, r8, #1
   14788:	cmp	r7, r8
   1478c:	bne	14638 <export_data_element_to_ascii@@Base+0x680>
   14790:	b	14450 <export_data_element_to_ascii@@Base+0x498>
   14794:	mov	r3, #0
   14798:	mov	r7, #1
   1479c:	add	r1, sp, #112	; 0x70
   147a0:	mov	r0, r3
   147a4:	b	14608 <export_data_element_to_ascii@@Base+0x650>
   147a8:	add	r3, sp, #112	; 0x70
   147ac:	ldr	r0, [pc, #1252]	; 14c98 <export_data_element_to_ascii@@Base+0xce0>
   147b0:	ldr	r1, [r3, r6, lsl #2]
   147b4:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   147b8:	ldr	r2, [sp, #44]	; 0x2c
   147bc:	sub	r2, r2, #1
   147c0:	cmp	r2, r6
   147c4:	ble	147d0 <export_data_element_to_ascii@@Base+0x818>
   147c8:	ldr	r0, [pc, #1228]	; 14c9c <export_data_element_to_ascii@@Base+0xce4>
   147cc:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   147d0:	add	r6, r6, #1
   147d4:	b	14644 <export_data_element_to_ascii@@Base+0x68c>
   147d8:	ldr	r0, [pc, #1196]	; 14c8c <export_data_element_to_ascii@@Base+0xcd4>
   147dc:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   147e0:	b	14724 <export_data_element_to_ascii@@Base+0x76c>
   147e4:	sub	r3, r3, #1
   147e8:	str	r1, [r6]
   147ec:	b	14744 <export_data_element_to_ascii@@Base+0x78c>
   147f0:	add	r1, sp, #56	; 0x38
   147f4:	mov	r0, r4
   147f8:	bl	12500 <coda_cursor_has_ascii_content@plt>
   147fc:	cmp	r0, #0
   14800:	beq	14808 <export_data_element_to_ascii@@Base+0x850>
   14804:	bl	18728 <handle_coda_error@@Base>
   14808:	ldr	r3, [sp, #56]	; 0x38
   1480c:	cmp	r3, #0
   14810:	beq	148ac <export_data_element_to_ascii@@Base+0x8f4>
   14814:	add	r1, sp, #112	; 0x70
   14818:	mov	r0, r4
   1481c:	bl	123f8 <coda_cursor_get_string_length@plt>
   14820:	cmp	r0, #0
   14824:	beq	1482c <export_data_element_to_ascii@@Base+0x874>
   14828:	bl	18728 <handle_coda_error@@Base>
   1482c:	ldr	r0, [sp, #112]	; 0x70
   14830:	add	r0, r0, #1
   14834:	bl	12398 <malloc@plt>
   14838:	subs	r5, r0, #0
   1483c:	bne	14864 <export_data_element_to_ascii@@Base+0x8ac>
   14840:	ldr	r2, [sp, #112]	; 0x70
   14844:	movw	r3, #410	; 0x19a
   14848:	mvn	r0, #0
   1484c:	ldr	r1, [pc, #1100]	; 14ca0 <export_data_element_to_ascii@@Base+0xce8>
   14850:	str	r3, [sp]
   14854:	ldr	r3, [pc, #1096]	; 14ca4 <export_data_element_to_ascii@@Base+0xcec>
   14858:	add	r2, r2, #1
   1485c:	bl	12218 <coda_set_error@plt>
   14860:	bl	18728 <handle_coda_error@@Base>
   14864:	ldr	r2, [sp, #112]	; 0x70
   14868:	mov	r1, r5
   1486c:	mov	r0, r4
   14870:	add	r2, r2, #1
   14874:	bl	123bc <coda_cursor_read_string@plt>
   14878:	cmp	r0, #0
   1487c:	beq	14884 <export_data_element_to_ascii@@Base+0x8cc>
   14880:	bl	18728 <handle_coda_error@@Base>
   14884:	ldr	r0, [pc, #1052]	; 14ca8 <export_data_element_to_ascii@@Base+0xcf0>
   14888:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   1488c:	mov	r0, r5
   14890:	ldr	r1, [sp, #112]	; 0x70
   14894:	bl	1409c <export_data_element_to_ascii@@Base+0xe4>
   14898:	ldr	r0, [pc, #1036]	; 14cac <export_data_element_to_ascii@@Base+0xcf4>
   1489c:	ldr	r1, [sp, #112]	; 0x70
   148a0:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   148a4:	mov	r0, r5
   148a8:	bl	12260 <free@plt>
   148ac:	add	r1, sp, #48	; 0x30
   148b0:	mov	r0, r4
   148b4:	bl	1238c <coda_cursor_get_read_type@plt>
   148b8:	cmp	r0, #0
   148bc:	beq	148c4 <export_data_element_to_ascii@@Base+0x90c>
   148c0:	bl	18728 <handle_coda_error@@Base>
   148c4:	ldr	r3, [sp, #48]	; 0x30
   148c8:	add	r3, r3, #1
   148cc:	cmp	r3, #13
   148d0:	ldrls	pc, [pc, r3, lsl #2]
   148d4:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   148d8:	andeq	r4, r1, ip, ror #21
   148dc:	andeq	r4, r1, r4, lsl sl
   148e0:	andeq	r4, r1, ip, lsr sl
   148e4:	andeq	r4, r1, r4, lsl sl
   148e8:	andeq	r4, r1, ip, lsr sl
   148ec:	andeq	r4, r1, r4, lsl sl
   148f0:	andeq	r4, r1, ip, lsr sl
   148f4:	andeq	r4, r1, r0, ror #20
   148f8:	muleq	r1, r0, sl
   148fc:			; <UNDEFINED> instruction: 0x00014ab8
   14900:			; <UNDEFINED> instruction: 0x00014ab8
   14904:	andeq	r4, r1, ip, ror #21
   14908:	andeq	r4, r1, ip, ror #21
   1490c:	andeq	r4, r1, r0, lsl r9
   14910:	add	r1, sp, #80	; 0x50
   14914:	mov	r0, r4
   14918:	bl	12578 <coda_cursor_get_bit_size@plt>
   1491c:	cmp	r0, #0
   14920:	beq	14928 <export_data_element_to_ascii@@Base+0x970>
   14924:	bl	18728 <handle_coda_error@@Base>
   14928:	ldr	r0, [sp, #80]	; 0x50
   1492c:	ldr	ip, [sp, #84]	; 0x54
   14930:	lsr	r2, r0, #3
   14934:	ands	r1, r0, #7
   14938:	movne	r1, #1
   1493c:	orr	r2, r2, ip, lsl #29
   14940:	adds	r6, r2, r1
   14944:	mov	r0, r6
   14948:	bl	12398 <malloc@plt>
   1494c:	subs	r5, r0, #0
   14950:	bne	14974 <export_data_element_to_ascii@@Base+0x9bc>
   14954:	movw	r3, #447	; 0x1bf
   14958:	mov	r2, r6
   1495c:	ldr	r1, [pc, #828]	; 14ca0 <export_data_element_to_ascii@@Base+0xce8>
   14960:	mvn	r0, #0
   14964:	str	r3, [sp]
   14968:	ldr	r3, [pc, #820]	; 14ca4 <export_data_element_to_ascii@@Base+0xcec>
   1496c:	bl	12218 <coda_set_error@plt>
   14970:	bl	18728 <handle_coda_error@@Base>
   14974:	ldrd	r2, [sp, #80]	; 0x50
   14978:	mov	r1, r5
   1497c:	mov	r0, r4
   14980:	strd	r2, [sp]
   14984:	mov	r2, #0
   14988:	mov	r3, #0
   1498c:	bl	12614 <coda_cursor_read_bits@plt>
   14990:	cmp	r0, #0
   14994:	beq	1499c <export_data_element_to_ascii@@Base+0x9e4>
   14998:	bl	18728 <handle_coda_error@@Base>
   1499c:	ldr	r0, [pc, #772]	; 14ca8 <export_data_element_to_ascii@@Base+0xcf0>
   149a0:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   149a4:	mov	r1, r6
   149a8:	mov	r0, r5
   149ac:	bl	1409c <export_data_element_to_ascii@@Base+0xe4>
   149b0:	ldr	r0, [pc, #760]	; 14cb0 <export_data_element_to_ascii@@Base+0xcf8>
   149b4:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   149b8:	ldrd	r0, [sp, #80]	; 0x50
   149bc:	add	r2, sp, #112	; 0x70
   149c0:	lsr	r0, r0, #3
   149c4:	orr	r0, r0, r1, lsl #29
   149c8:	asr	r1, r1, #3
   149cc:	bl	12620 <coda_str64@plt>
   149d0:	add	r1, sp, #112	; 0x70
   149d4:	ldr	r0, [pc, #728]	; 14cb4 <export_data_element_to_ascii@@Base+0xcfc>
   149d8:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   149dc:	ldr	r1, [sp, #80]	; 0x50
   149e0:	mov	r3, #0
   149e4:	and	r2, r1, #7
   149e8:	orrs	r3, r2, r3
   149ec:	beq	149fc <export_data_element_to_ascii@@Base+0xa44>
   149f0:	mov	r1, r2
   149f4:	ldr	r0, [pc, #644]	; 14c80 <export_data_element_to_ascii@@Base+0xcc8>
   149f8:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   149fc:	ldr	r0, [pc, #692]	; 14cb8 <export_data_element_to_ascii@@Base+0xd00>
   14a00:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14a04:	mov	r0, r5
   14a08:	add	sp, sp, #636	; 0x27c
   14a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a10:	b	12260 <free@plt>
   14a14:	add	r1, sp, #112	; 0x70
   14a18:	mov	r0, r4
   14a1c:	bl	125b4 <coda_cursor_read_int32@plt>
   14a20:	cmp	r0, #0
   14a24:	beq	14a2c <export_data_element_to_ascii@@Base+0xa74>
   14a28:	bl	18728 <handle_coda_error@@Base>
   14a2c:	ldr	r0, [pc, #648]	; 14cbc <export_data_element_to_ascii@@Base+0xd04>
   14a30:	ldr	r1, [sp, #112]	; 0x70
   14a34:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   14a38:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   14a3c:	add	r1, sp, #112	; 0x70
   14a40:	mov	r0, r4
   14a44:	bl	12284 <coda_cursor_read_uint32@plt>
   14a48:	cmp	r0, #0
   14a4c:	beq	14a54 <export_data_element_to_ascii@@Base+0xa9c>
   14a50:	bl	18728 <handle_coda_error@@Base>
   14a54:	ldr	r0, [pc, #612]	; 14cc0 <export_data_element_to_ascii@@Base+0xd08>
   14a58:	ldr	r1, [sp, #112]	; 0x70
   14a5c:	b	14a34 <export_data_element_to_ascii@@Base+0xa7c>
   14a60:	add	r1, sp, #80	; 0x50
   14a64:	mov	r0, r4
   14a68:	bl	12518 <coda_cursor_read_int64@plt>
   14a6c:	cmp	r0, #0
   14a70:	beq	14a78 <export_data_element_to_ascii@@Base+0xac0>
   14a74:	bl	18728 <handle_coda_error@@Base>
   14a78:	add	r2, sp, #112	; 0x70
   14a7c:	ldrd	r0, [sp, #80]	; 0x50
   14a80:	bl	12620 <coda_str64@plt>
   14a84:	add	r1, sp, #112	; 0x70
   14a88:	ldr	r0, [pc, #564]	; 14cc4 <export_data_element_to_ascii@@Base+0xd0c>
   14a8c:	b	14a34 <export_data_element_to_ascii@@Base+0xa7c>
   14a90:	add	r1, sp, #80	; 0x50
   14a94:	mov	r0, r4
   14a98:	bl	12404 <coda_cursor_read_uint64@plt>
   14a9c:	cmp	r0, #0
   14aa0:	beq	14aa8 <export_data_element_to_ascii@@Base+0xaf0>
   14aa4:	bl	18728 <handle_coda_error@@Base>
   14aa8:	add	r2, sp, #112	; 0x70
   14aac:	ldrd	r0, [sp, #80]	; 0x50
   14ab0:	bl	12254 <coda_str64u@plt>
   14ab4:	b	14a84 <export_data_element_to_ascii@@Base+0xacc>
   14ab8:	add	r1, sp, #112	; 0x70
   14abc:	mov	r0, r4
   14ac0:	bl	12410 <coda_cursor_read_double@plt>
   14ac4:	cmp	r0, #0
   14ac8:	beq	14ad0 <export_data_element_to_ascii@@Base+0xb18>
   14acc:	bl	18728 <handle_coda_error@@Base>
   14ad0:	ldr	r1, [sp, #48]	; 0x30
   14ad4:	ldrd	r2, [sp, #112]	; 0x70
   14ad8:	cmp	r1, #8
   14adc:	ldreq	r0, [pc, #484]	; 14cc8 <export_data_element_to_ascii@@Base+0xd10>
   14ae0:	ldrne	r0, [pc, #484]	; 14ccc <export_data_element_to_ascii@@Base+0xd14>
   14ae4:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   14ae8:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   14aec:	ldr	r3, [sp, #56]	; 0x38
   14af0:	cmp	r3, #0
   14af4:	bne	145f0 <export_data_element_to_ascii@@Base+0x638>
   14af8:	ldr	r3, [pc, #464]	; 14cd0 <export_data_element_to_ascii@@Base+0xd18>
   14afc:	mov	r2, #548	; 0x224
   14b00:	ldr	r1, [pc, #412]	; 14ca4 <export_data_element_to_ascii@@Base+0xcec>
   14b04:	ldr	r0, [pc, #456]	; 14cd4 <export_data_element_to_ascii@@Base+0xd1c>
   14b08:	bl	1262c <__assert_fail@plt>
   14b0c:	add	r1, sp, #56	; 0x38
   14b10:	mov	r0, r4
   14b14:	bl	1232c <coda_cursor_get_special_type@plt>
   14b18:	cmp	r0, #0
   14b1c:	beq	14b24 <export_data_element_to_ascii@@Base+0xb6c>
   14b20:	bl	18728 <handle_coda_error@@Base>
   14b24:	ldr	r3, [sp, #56]	; 0x38
   14b28:	cmp	r3, #0
   14b2c:	beq	14b60 <export_data_element_to_ascii@@Base+0xba8>
   14b30:	mov	r2, #520	; 0x208
   14b34:	mov	r1, r4
   14b38:	add	r0, sp, #112	; 0x70
   14b3c:	bl	122b4 <memcpy@plt>
   14b40:	add	r0, sp, #112	; 0x70
   14b44:	bl	1259c <coda_cursor_use_base_type_of_special_type@plt>
   14b48:	cmp	r0, #0
   14b4c:	beq	14b54 <export_data_element_to_ascii@@Base+0xb9c>
   14b50:	bl	18728 <handle_coda_error@@Base>
   14b54:	mov	r1, r5
   14b58:	add	r0, sp, #112	; 0x70
   14b5c:	bl	14210 <export_data_element_to_ascii@@Base+0x258>
   14b60:	ldr	r0, [sp, #56]	; 0x38
   14b64:	bl	121a0 <coda_type_get_special_type_name@plt>
   14b68:	mov	r1, r0
   14b6c:	ldr	r0, [pc, #356]	; 14cd8 <export_data_element_to_ascii@@Base+0xd20>
   14b70:	bl	14184 <export_data_element_to_ascii@@Base+0x1cc>
   14b74:	ldr	r3, [sp, #56]	; 0x38
   14b78:	cmp	r3, #3
   14b7c:	ldrls	pc, [pc, r3, lsl #2]
   14b80:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   14b84:	muleq	r1, r4, fp
   14b88:	andeq	r4, r1, r0, lsr #23
   14b8c:	andeq	r4, r1, r8, asr #23
   14b90:	andeq	r4, r1, r8, lsr ip
   14b94:	ldr	r0, [pc, #232]	; 14c84 <export_data_element_to_ascii@@Base+0xccc>
   14b98:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14b9c:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   14ba0:	add	r1, sp, #112	; 0x70
   14ba4:	mov	r0, r4
   14ba8:	bl	12410 <coda_cursor_read_double@plt>
   14bac:	cmp	r0, #0
   14bb0:	beq	14bb8 <export_data_element_to_ascii@@Base+0xc00>
   14bb4:	bl	18728 <handle_coda_error@@Base>
   14bb8:	ldr	r0, [pc, #268]	; 14ccc <export_data_element_to_ascii@@Base+0xd14>
   14bbc:	ldrd	r2, [sp, #112]	; 0x70
   14bc0:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14bc4:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   14bc8:	add	r1, sp, #80	; 0x50
   14bcc:	mov	r0, r4
   14bd0:	bl	12410 <coda_cursor_read_double@plt>
   14bd4:	cmp	r0, #0
   14bd8:	beq	14be0 <export_data_element_to_ascii@@Base+0xc28>
   14bdc:	bl	18728 <handle_coda_error@@Base>
   14be0:	vldr	d0, [sp, #80]	; 0x50
   14be4:	bl	1241c <coda_isNaN@plt>
   14be8:	cmp	r0, #0
   14bec:	beq	14bfc <export_data_element_to_ascii@@Base+0xc44>
   14bf0:	ldr	r0, [pc, #228]	; 14cdc <export_data_element_to_ascii@@Base+0xd24>
   14bf4:	ldrd	r2, [sp, #80]	; 0x50
   14bf8:	b	14bc0 <export_data_element_to_ascii@@Base+0xc08>
   14bfc:	vldr	d0, [sp, #80]	; 0x50
   14c00:	bl	122c0 <coda_isInf@plt>
   14c04:	cmp	r0, #0
   14c08:	bne	14bf0 <export_data_element_to_ascii@@Base+0xc38>
   14c0c:	add	r1, sp, #112	; 0x70
   14c10:	ldr	r0, [pc, #200]	; 14ce0 <export_data_element_to_ascii@@Base+0xd28>
   14c14:	vldr	d0, [sp, #80]	; 0x50
   14c18:	bl	1223c <coda_time_double_to_string@plt>
   14c1c:	cmp	r0, #0
   14c20:	ldrne	r0, [pc, #188]	; 14ce4 <export_data_element_to_ascii@@Base+0xd2c>
   14c24:	bne	14b98 <export_data_element_to_ascii@@Base+0xbe0>
   14c28:	add	r1, sp, #112	; 0x70
   14c2c:	ldr	r0, [pc, #180]	; 14ce8 <export_data_element_to_ascii@@Base+0xd30>
   14c30:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14c34:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   14c38:	add	r2, sp, #112	; 0x70
   14c3c:	add	r1, sp, #80	; 0x50
   14c40:	mov	r0, r4
   14c44:	bl	124b8 <coda_cursor_read_complex_double_split@plt>
   14c48:	cmp	r0, #0
   14c4c:	beq	14c54 <export_data_element_to_ascii@@Base+0xc9c>
   14c50:	bl	18728 <handle_coda_error@@Base>
   14c54:	ldrd	r2, [sp, #112]	; 0x70
   14c58:	ldr	r0, [pc, #140]	; 14cec <export_data_element_to_ascii@@Base+0xd34>
   14c5c:	strd	r2, [sp]
   14c60:	ldrd	r2, [sp, #80]	; 0x50
   14c64:	bl	14068 <export_data_element_to_ascii@@Base+0xb0>
   14c68:	b	145f0 <export_data_element_to_ascii@@Base+0x638>
   14c6c:	andeq	fp, r2, r4, asr #3
   14c70:	andeq	r8, r1, r6, asr fp
   14c74:	andeq	r9, r1, r6, lsl r0
   14c78:	andeq	fp, r2, ip, lsr #3
   14c7c:	andeq	r8, r1, r4, ror #22
   14c80:	andeq	r8, r1, r8, ror #22
   14c84:	andeq	sl, r1, r5, lsr r1
   14c88:			; <UNDEFINED> instruction: 0x0002b1b0
   14c8c:	andeq	r8, r1, ip, ror #22
   14c90:	andeq	r8, r1, lr, lsr sp
   14c94:	andeq	r9, r1, r2, asr #14
   14c98:	andeq	r8, r1, r9, ror #22
   14c9c:	andeq	r8, r1, r2, lsr sp
   14ca0:	andeq	r8, r1, fp, asr #20
   14ca4:	strdeq	r8, [r1], -pc	; <UNPREDICTABLE>
   14ca8:			; <UNDEFINED> instruction: 0x00018ebe
   14cac:	andeq	r8, r1, r1, ror fp
   14cb0:	andeq	r8, r1, r1, lsl #23
   14cb4:	andeq	r8, r1, r7, lsr #31
   14cb8:	andeq	r8, r1, lr, ror fp
   14cbc:	andeq	r8, r1, sl, lsl #23
   14cc0:	andeq	r8, r1, pc, lsl #23
   14cc4:	andeq	sl, r1, lr
   14cc8:	muleq	r1, r4, fp
   14ccc:			; <UNDEFINED> instruction: 0x00018bb2
   14cd0:	strdeq	r8, [r1], -r1
   14cd4:	muleq	r1, sl, fp
   14cd8:	andeq	r8, r1, ip, lsr #23
   14cdc:			; <UNDEFINED> instruction: 0x00018bb1
   14ce0:	andeq	r8, r1, r8, asr #21
   14ce4:			; <UNDEFINED> instruction: 0x00018bb9
   14ce8:	andeq	sl, r1, sp
   14cec:	ldrdeq	r8, [r1], -r4

00014cf0 <print_debug_data@@Base>:
   14cf0:	push	{r4, r5, r6, r7, r8, lr}
   14cf4:	subs	r6, r0, #0
   14cf8:	sub	sp, sp, #536	; 0x218
   14cfc:	mov	r7, r1
   14d00:	mov	r8, r2
   14d04:	add	r5, sp, #8
   14d08:	ldr	r4, [pc, #296]	; 14e38 <print_debug_data@@Base+0x148>
   14d0c:	ldr	ip, [r4]
   14d10:	bne	14dcc <print_debug_data@@Base+0xdc>
   14d14:	mov	r1, r5
   14d18:	mov	r0, ip
   14d1c:	bl	12224 <coda_open@plt>
   14d20:	cmp	r0, #0
   14d24:	beq	14d3c <print_debug_data@@Base+0x4c>
   14d28:	bl	125d8 <coda_get_errno@plt>
   14d2c:	ldr	r3, [r0]
   14d30:	cmn	r3, #21
   14d34:	beq	14de8 <print_debug_data@@Base+0xf8>
   14d38:	bl	18728 <handle_coda_error@@Base>
   14d3c:	add	r1, sp, #12
   14d40:	ldr	r0, [sp, #8]
   14d44:	bl	12308 <coda_get_product_format@plt>
   14d48:	cmp	r0, #0
   14d4c:	beq	14d54 <print_debug_data@@Base+0x64>
   14d50:	bl	18728 <handle_coda_error@@Base>
   14d54:	ldr	r2, [pc, #224]	; 14e3c <print_debug_data@@Base+0x14c>
   14d58:	add	r0, sp, #16
   14d5c:	ldr	r3, [sp, #12]
   14d60:	ldr	r1, [sp, #8]
   14d64:	cmp	r3, #2
   14d68:	movhi	r3, #0
   14d6c:	movls	r3, #1
   14d70:	str	r3, [r2]
   14d74:	bl	12344 <coda_cursor_set_product@plt>
   14d78:	cmp	r0, #0
   14d7c:	beq	14d84 <print_debug_data@@Base+0x94>
   14d80:	bl	18728 <handle_coda_error@@Base>
   14d84:	ldr	r3, [pc, #180]	; 14e40 <print_debug_data@@Base+0x150>
   14d88:	ldr	r1, [r3]
   14d8c:	cmp	r1, #0
   14d90:	beq	14da8 <print_debug_data@@Base+0xb8>
   14d94:	add	r0, sp, #16
   14d98:	bl	12530 <coda_cursor_goto@plt>
   14d9c:	cmp	r0, #0
   14da0:	beq	14da8 <print_debug_data@@Base+0xb8>
   14da4:	bl	18728 <handle_coda_error@@Base>
   14da8:	mov	r0, #0
   14dac:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   14db0:	mov	r1, #0
   14db4:	add	r0, sp, #16
   14db8:	bl	14210 <export_data_element_to_ascii@@Base+0x258>
   14dbc:	ldr	r0, [sp, #8]
   14dc0:	bl	1250c <coda_close@plt>
   14dc4:	add	sp, sp, #536	; 0x218
   14dc8:	pop	{r4, r5, r6, r7, r8, pc}
   14dcc:	mov	r3, r2
   14dd0:	mov	r0, ip
   14dd4:	str	r5, [sp]
   14dd8:	mov	r2, r1
   14ddc:	mov	r1, r6
   14de0:	bl	12440 <coda_open_as@plt>
   14de4:	b	14d20 <print_debug_data@@Base+0x30>
   14de8:	mov	r0, #0
   14dec:	bl	1226c <coda_set_option_use_mmap@plt>
   14df0:	cmp	r6, #0
   14df4:	bne	14e1c <print_debug_data@@Base+0x12c>
   14df8:	mov	r1, r5
   14dfc:	ldr	r0, [r4]
   14e00:	bl	12224 <coda_open@plt>
   14e04:	mov	r4, r0
   14e08:	mov	r0, #1
   14e0c:	bl	1226c <coda_set_option_use_mmap@plt>
   14e10:	cmp	r4, #0
   14e14:	bne	14d38 <print_debug_data@@Base+0x48>
   14e18:	b	14d3c <print_debug_data@@Base+0x4c>
   14e1c:	mov	r3, r8
   14e20:	mov	r2, r7
   14e24:	str	r5, [sp]
   14e28:	mov	r1, r6
   14e2c:	ldr	r0, [r4]
   14e30:	bl	12440 <coda_open_as@plt>
   14e34:	b	14e04 <print_debug_data@@Base+0x114>
   14e38:	strdeq	fp, [r2], -r0
   14e3c:	andeq	fp, r2, ip, lsr #3
   14e40:	strheq	ip, [r2], -r0
   14e44:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   14e48:	mov	r7, r0
   14e4c:	mov	r5, r1
   14e50:	mov	r1, sp
   14e54:	mov	r6, r2
   14e58:	ldr	r0, [pc, #508]	; 1505c <print_debug_data@@Base+0x36c>
   14e5c:	bl	122f0 <coda_cursor_get_type_class@plt>
   14e60:	cmp	r0, #0
   14e64:	beq	14e6c <print_debug_data@@Base+0x17c>
   14e68:	bl	18728 <handle_coda_error@@Base>
   14e6c:	ldr	r3, [sp]
   14e70:	ldr	r4, [pc, #488]	; 15060 <print_debug_data@@Base+0x370>
   14e74:	cmp	r3, #0
   14e78:	beq	14fb8 <print_debug_data@@Base+0x2c8>
   14e7c:	cmp	r3, #1
   14e80:	bne	15048 <print_debug_data@@Base+0x358>
   14e84:	mov	r3, #80	; 0x50
   14e88:	mla	r3, r3, r5, r4
   14e8c:	ldr	r2, [r3, #800]	; 0x320
   14e90:	ldr	r3, [r4, #3360]	; 0xd20
   14e94:	cmp	r3, r5
   14e98:	bgt	14eb0 <print_debug_data@@Base+0x1c0>
   14e9c:	ldr	r3, [pc, #448]	; 15064 <print_debug_data@@Base+0x374>
   14ea0:	movw	r2, #638	; 0x27e
   14ea4:	ldr	r1, [pc, #444]	; 15068 <print_debug_data@@Base+0x378>
   14ea8:	ldr	r0, [pc, #444]	; 1506c <print_debug_data@@Base+0x37c>
   14eac:	bl	1262c <__assert_fail@plt>
   14eb0:	add	r8, r5, #1
   14eb4:	mov	r1, #80	; 0x50
   14eb8:	cmp	r5, #0
   14ebc:	mla	r0, r1, r8, r4
   14ec0:	mla	r1, r1, r5, r4
   14ec4:	streq	r5, [r4, #844]	; 0x34c
   14ec8:	mov	r5, #1
   14ecc:	ldr	r3, [r1, #840]	; 0x348
   14ed0:	ldr	ip, [r1, #844]	; 0x34c
   14ed4:	mul	r3, r3, ip
   14ed8:	str	r3, [r0, #844]	; 0x34c
   14edc:	ldr	r3, [pc, #396]	; 15070 <print_debug_data@@Base+0x380>
   14ee0:	ldr	r0, [r1, #804]	; 0x324
   14ee4:	add	r3, r3, r2, lsl #2
   14ee8:	add	r0, r2, r0
   14eec:	cmp	r0, r2
   14ef0:	bgt	14f44 <print_debug_data@@Base+0x254>
   14ef4:	cmp	r5, #0
   14ef8:	ble	14fe8 <print_debug_data@@Base+0x2f8>
   14efc:	ldr	r0, [pc, #344]	; 1505c <print_debug_data@@Base+0x36c>
   14f00:	bl	12338 <coda_cursor_goto_first_array_element@plt>
   14f04:	cmp	r0, #0
   14f08:	beq	14f10 <print_debug_data@@Base+0x220>
   14f0c:	bl	18728 <handle_coda_error@@Base>
   14f10:	mov	r3, #80	; 0x50
   14f14:	mov	sl, #0
   14f18:	mla	r4, r3, r8, r4
   14f1c:	mov	r2, r6
   14f20:	mov	r1, r8
   14f24:	add	r0, r7, #1
   14f28:	bl	14e44 <print_debug_data@@Base+0x154>
   14f2c:	subs	r9, r0, #0
   14f30:	beq	14f6c <print_debug_data@@Base+0x27c>
   14f34:	ldr	r0, [pc, #288]	; 1505c <print_debug_data@@Base+0x36c>
   14f38:	bl	123c8 <coda_cursor_goto_parent@plt>
   14f3c:	mov	r9, #1
   14f40:	b	14fac <print_debug_data@@Base+0x2bc>
   14f44:	ldr	ip, [r3, #72]	; 0x48
   14f48:	add	r2, r2, #1
   14f4c:	add	r3, r3, #4
   14f50:	cmp	ip, #0
   14f54:	ldrne	ip, [r3, #104]	; 0x68
   14f58:	ldrne	lr, [r1, #844]	; 0x34c
   14f5c:	ldreq	ip, [r3]
   14f60:	ldrne	ip, [ip, lr, lsl #2]
   14f64:	mul	r5, ip, r5
   14f68:	b	14eec <print_debug_data@@Base+0x1fc>
   14f6c:	sub	r3, r5, #1
   14f70:	cmp	r3, sl
   14f74:	ble	14f98 <print_debug_data@@Base+0x2a8>
   14f78:	ldr	r0, [pc, #220]	; 1505c <print_debug_data@@Base+0x36c>
   14f7c:	bl	12434 <coda_cursor_goto_next_array_element@plt>
   14f80:	cmp	r0, #0
   14f84:	beq	14f8c <print_debug_data@@Base+0x29c>
   14f88:	bl	18728 <handle_coda_error@@Base>
   14f8c:	ldr	r3, [r4, #844]	; 0x34c
   14f90:	add	r3, r3, #1
   14f94:	str	r3, [r4, #844]	; 0x34c
   14f98:	add	sl, sl, #1
   14f9c:	cmp	r5, sl
   14fa0:	bne	14f1c <print_debug_data@@Base+0x22c>
   14fa4:	ldr	r0, [pc, #176]	; 1505c <print_debug_data@@Base+0x36c>
   14fa8:	bl	123c8 <coda_cursor_goto_parent@plt>
   14fac:	mov	r0, r9
   14fb0:	add	sp, sp, #8
   14fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14fb8:	add	r8, r6, #872	; 0x368
   14fbc:	add	r2, sp, #4
   14fc0:	add	r3, r4, r8, lsl #2
   14fc4:	add	r0, r4, #144	; 0x90
   14fc8:	ldr	r1, [r3, #4]
   14fcc:	bl	12200 <coda_cursor_get_record_field_available_status@plt>
   14fd0:	cmp	r0, #0
   14fd4:	beq	14fdc <print_debug_data@@Base+0x2ec>
   14fd8:	bl	18728 <handle_coda_error@@Base>
   14fdc:	ldr	r3, [sp, #4]
   14fe0:	cmp	r3, #0
   14fe4:	bne	14ff0 <print_debug_data@@Base+0x300>
   14fe8:	mov	r9, #0
   14fec:	b	14fac <print_debug_data@@Base+0x2bc>
   14ff0:	ldr	r3, [r4, #3748]	; 0xea4
   14ff4:	sub	r3, r3, #1
   14ff8:	cmp	r3, r6
   14ffc:	beq	14f3c <print_debug_data@@Base+0x24c>
   15000:	add	r4, r4, r8, lsl #2
   15004:	ldr	r0, [pc, #80]	; 1505c <print_debug_data@@Base+0x36c>
   15008:	ldr	r1, [r4, #4]
   1500c:	bl	12368 <coda_cursor_goto_record_field_by_index@plt>
   15010:	cmp	r0, #0
   15014:	beq	1501c <print_debug_data@@Base+0x32c>
   15018:	bl	18728 <handle_coda_error@@Base>
   1501c:	add	r2, r6, #1
   15020:	mov	r1, r5
   15024:	add	r0, r7, #1
   15028:	bl	14e44 <print_debug_data@@Base+0x154>
   1502c:	str	r0, [sp, #4]
   15030:	ldr	r0, [pc, #36]	; 1505c <print_debug_data@@Base+0x36c>
   15034:	bl	123c8 <coda_cursor_goto_parent@plt>
   15038:	ldr	r3, [sp, #4]
   1503c:	cmp	r3, #0
   15040:	beq	14fe8 <print_debug_data@@Base+0x2f8>
   15044:	b	14f3c <print_debug_data@@Base+0x24c>
   15048:	ldr	r3, [pc, #20]	; 15064 <print_debug_data@@Base+0x374>
   1504c:	movw	r2, #729	; 0x2d9
   15050:	ldr	r1, [pc, #16]	; 15068 <print_debug_data@@Base+0x378>
   15054:	ldr	r0, [pc, #24]	; 15074 <print_debug_data@@Base+0x384>
   15058:	b	14eac <print_debug_data@@Base+0x1bc>
   1505c:	andeq	fp, r2, r0, lsl #5
   15060:	strdeq	fp, [r2], -r0
   15064:	ldrdeq	r8, [r1], -pc	; <UNPREDICTABLE>
   15068:	andeq	r8, r1, r0, asr ip
   1506c:	muleq	r1, r9, ip
   15070:	strheq	ip, [r2], -r8
   15074:	andeq	r8, r1, r4, asr fp
   15078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1507c:	sub	sp, sp, #44	; 0x2c
   15080:	mov	sl, r0
   15084:	mov	r5, r1
   15088:	mov	r1, sp
   1508c:	mov	r6, r2
   15090:	ldr	r0, [pc, #960]	; 15458 <print_debug_data@@Base+0x768>
   15094:	bl	122f0 <coda_cursor_get_type_class@plt>
   15098:	cmp	r0, #0
   1509c:	beq	150a4 <print_debug_data@@Base+0x3b4>
   150a0:	bl	18728 <handle_coda_error@@Base>
   150a4:	ldr	r3, [sp]
   150a8:	ldr	r4, [pc, #940]	; 1545c <print_debug_data@@Base+0x76c>
   150ac:	cmp	r3, #5
   150b0:	ldrls	pc, [pc, r3, lsl #2]
   150b4:	b	15444 <print_debug_data@@Base+0x754>
   150b8:	muleq	r1, r8, r2
   150bc:	ldrdeq	r5, [r1], -r0
   150c0:	andeq	r5, r1, r4, asr #8
   150c4:	andeq	r5, r1, r4, asr #8
   150c8:	andeq	r5, r1, r8, ror #6
   150cc:	andeq	r5, r1, r8, ror #6
   150d0:	mov	r3, #80	; 0x50
   150d4:	ldr	r8, [pc, #900]	; 15460 <print_debug_data@@Base+0x770>
   150d8:	mla	r3, r3, r5, r4
   150dc:	ldr	r2, [r3, #800]	; 0x320
   150e0:	ldr	r3, [r4, #3360]	; 0xd20
   150e4:	lsl	r7, r2, #2
   150e8:	cmp	r3, r5
   150ec:	bne	151b4 <print_debug_data@@Base+0x4c4>
   150f0:	add	r6, sp, #8
   150f4:	add	r1, sp, #4
   150f8:	ldr	r0, [pc, #856]	; 15458 <print_debug_data@@Base+0x768>
   150fc:	mov	r2, r6
   15100:	bl	124f4 <coda_cursor_get_array_dim@plt>
   15104:	cmp	r0, #0
   15108:	beq	15110 <print_debug_data@@Base+0x420>
   1510c:	bl	18728 <handle_coda_error@@Base>
   15110:	mov	r3, #80	; 0x50
   15114:	mul	r5, r3, r5
   15118:	ldr	r3, [sp, #4]
   1511c:	add	r1, r4, r5
   15120:	ldr	r2, [r1, #804]	; 0x324
   15124:	cmp	r2, r3
   15128:	bne	15150 <print_debug_data@@Base+0x460>
   1512c:	add	r5, r5, #808	; 0x328
   15130:	add	r3, r8, r7
   15134:	add	r4, r4, r5
   15138:	mov	r0, #0
   1513c:	ldr	r2, [r1, #804]	; 0x324
   15140:	cmp	r2, r0
   15144:	bgt	15164 <print_debug_data@@Base+0x474>
   15148:	add	sp, sp, #44	; 0x2c
   1514c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15150:	ldr	r3, [pc, #780]	; 15464 <print_debug_data@@Base+0x774>
   15154:	mov	r2, #125	; 0x7d
   15158:	ldr	r1, [pc, #776]	; 15468 <print_debug_data@@Base+0x778>
   1515c:	ldr	r0, [pc, #776]	; 1546c <print_debug_data@@Base+0x77c>
   15160:	bl	1262c <__assert_fail@plt>
   15164:	ldr	r2, [r4], #4
   15168:	cmn	r2, #1
   1516c:	bne	151a8 <print_debug_data@@Base+0x4b8>
   15170:	ldr	r2, [r6, r0, lsl #2]
   15174:	ldr	ip, [r3, #108]	; 0x6c
   15178:	ldr	lr, [r1, #844]	; 0x34c
   1517c:	str	r2, [ip, lr, lsl #2]
   15180:	ldr	ip, [r3, #4]
   15184:	cmn	ip, #1
   15188:	streq	r2, [r3, #4]
   1518c:	beq	151a4 <print_debug_data@@Base+0x4b4>
   15190:	cmp	r2, ip
   15194:	ldr	ip, [r3, #36]	; 0x24
   15198:	strgt	r2, [r3, #4]
   1519c:	cmp	r2, ip
   151a0:	bge	151a8 <print_debug_data@@Base+0x4b8>
   151a4:	str	r2, [r3, #36]	; 0x24
   151a8:	add	r0, r0, #1
   151ac:	add	r3, r3, #4
   151b0:	b	1513c <print_debug_data@@Base+0x44c>
   151b4:	mov	r3, #80	; 0x50
   151b8:	cmp	r5, #0
   151bc:	add	r9, r5, #1
   151c0:	mov	fp, #1
   151c4:	streq	r5, [r4, #844]	; 0x34c
   151c8:	mla	r5, r3, r5, r4
   151cc:	mla	r1, r3, r9, r4
   151d0:	ldr	r3, [r5, #840]	; 0x348
   151d4:	ldr	r0, [r5, #844]	; 0x34c
   151d8:	mul	r3, r3, r0
   151dc:	str	r3, [r1, #844]	; 0x34c
   151e0:	add	r3, r8, r7
   151e4:	ldr	r1, [r5, #804]	; 0x324
   151e8:	add	r1, r2, r1
   151ec:	cmp	r1, r2
   151f0:	bgt	15270 <print_debug_data@@Base+0x580>
   151f4:	cmp	fp, #0
   151f8:	ble	15148 <print_debug_data@@Base+0x458>
   151fc:	ldr	r0, [pc, #596]	; 15458 <print_debug_data@@Base+0x768>
   15200:	bl	12338 <coda_cursor_goto_first_array_element@plt>
   15204:	cmp	r0, #0
   15208:	beq	15210 <print_debug_data@@Base+0x520>
   1520c:	bl	18728 <handle_coda_error@@Base>
   15210:	mov	r3, #80	; 0x50
   15214:	mov	r5, #0
   15218:	mla	r4, r3, r9, r4
   1521c:	mov	r2, r6
   15220:	mov	r1, r9
   15224:	add	r0, sl, #1
   15228:	bl	15078 <print_debug_data@@Base+0x388>
   1522c:	sub	r3, fp, #1
   15230:	cmp	r3, r5
   15234:	ble	15258 <print_debug_data@@Base+0x568>
   15238:	ldr	r0, [pc, #536]	; 15458 <print_debug_data@@Base+0x768>
   1523c:	bl	12434 <coda_cursor_goto_next_array_element@plt>
   15240:	cmp	r0, #0
   15244:	beq	1524c <print_debug_data@@Base+0x55c>
   15248:	bl	18728 <handle_coda_error@@Base>
   1524c:	ldr	r3, [r4, #844]	; 0x34c
   15250:	add	r3, r3, #1
   15254:	str	r3, [r4, #844]	; 0x34c
   15258:	add	r5, r5, #1
   1525c:	cmp	fp, r5
   15260:	bne	1521c <print_debug_data@@Base+0x52c>
   15264:	ldr	r0, [pc, #492]	; 15458 <print_debug_data@@Base+0x768>
   15268:	bl	123c8 <coda_cursor_goto_parent@plt>
   1526c:	b	15148 <print_debug_data@@Base+0x458>
   15270:	ldr	r0, [r3, #72]	; 0x48
   15274:	add	r2, r2, #1
   15278:	add	r3, r3, #4
   1527c:	cmp	r0, #0
   15280:	ldrne	r0, [r3, #104]	; 0x68
   15284:	ldrne	ip, [r5, #844]	; 0x34c
   15288:	ldreq	r0, [r3]
   1528c:	ldrne	r0, [r0, ip, lsl #2]
   15290:	mul	fp, r0, fp
   15294:	b	151ec <print_debug_data@@Base+0x4fc>
   15298:	add	r7, r6, #872	; 0x368
   1529c:	add	r2, sp, #8
   152a0:	ldr	r0, [pc, #432]	; 15458 <print_debug_data@@Base+0x768>
   152a4:	add	r3, r4, r7, lsl #2
   152a8:	ldr	r1, [r3, #4]
   152ac:	bl	12200 <coda_cursor_get_record_field_available_status@plt>
   152b0:	cmp	r0, #0
   152b4:	beq	152bc <print_debug_data@@Base+0x5cc>
   152b8:	bl	18728 <handle_coda_error@@Base>
   152bc:	ldr	r0, [sp, #8]
   152c0:	cmp	r0, #0
   152c4:	beq	152f8 <print_debug_data@@Base+0x608>
   152c8:	add	r4, r4, r7, lsl #2
   152cc:	ldr	r0, [pc, #388]	; 15458 <print_debug_data@@Base+0x768>
   152d0:	ldr	r1, [r4, #4]
   152d4:	bl	12368 <coda_cursor_goto_record_field_by_index@plt>
   152d8:	cmp	r0, #0
   152dc:	beq	152e4 <print_debug_data@@Base+0x5f4>
   152e0:	bl	18728 <handle_coda_error@@Base>
   152e4:	add	r2, r6, #1
   152e8:	mov	r1, r5
   152ec:	add	r0, sl, #1
   152f0:	bl	15078 <print_debug_data@@Base+0x388>
   152f4:	b	15264 <print_debug_data@@Base+0x574>
   152f8:	ldr	r2, [r4, #3360]	; 0xd20
   152fc:	mov	r3, #80	; 0x50
   15300:	mov	lr, r0
   15304:	ldr	r1, [pc, #340]	; 15460 <print_debug_data@@Base+0x770>
   15308:	mul	r3, r3, r2
   1530c:	add	r2, r4, r3
   15310:	add	r3, r3, #808	; 0x328
   15314:	ldr	ip, [r2, #800]	; 0x320
   15318:	add	r4, r4, r3
   1531c:	mov	r3, r2
   15320:	mov	r2, r0
   15324:	add	r1, r1, ip, lsl #2
   15328:	ldr	ip, [r3, #804]	; 0x324
   1532c:	cmp	ip, r0
   15330:	ble	15148 <print_debug_data@@Base+0x458>
   15334:	ldr	ip, [r4], #4
   15338:	cmn	ip, #1
   1533c:	bne	1535c <print_debug_data@@Base+0x66c>
   15340:	ldr	ip, [r1, #108]	; 0x6c
   15344:	ldr	r5, [r3, #844]	; 0x34c
   15348:	str	r2, [ip, r5, lsl #2]
   1534c:	ldr	ip, [r1, #4]
   15350:	str	lr, [r1, #36]	; 0x24
   15354:	cmn	ip, #1
   15358:	streq	r2, [r1, #4]
   1535c:	add	r0, r0, #1
   15360:	add	r1, r1, #4
   15364:	b	15328 <print_debug_data@@Base+0x638>
   15368:	ldr	r2, [r4, #3360]	; 0xd20
   1536c:	cmp	r2, r5
   15370:	beq	15388 <print_debug_data@@Base+0x698>
   15374:	ldr	r3, [pc, #232]	; 15464 <print_debug_data@@Base+0x774>
   15378:	mov	r2, #252	; 0xfc
   1537c:	ldr	r1, [pc, #228]	; 15468 <print_debug_data@@Base+0x778>
   15380:	ldr	r0, [pc, #232]	; 15470 <print_debug_data@@Base+0x780>
   15384:	b	15160 <print_debug_data@@Base+0x470>
   15388:	cmp	r3, #4
   1538c:	bne	15428 <print_debug_data@@Base+0x738>
   15390:	add	r1, sp, #4
   15394:	ldr	r0, [pc, #188]	; 15458 <print_debug_data@@Base+0x768>
   15398:	bl	123f8 <coda_cursor_get_string_length@plt>
   1539c:	cmp	r0, #0
   153a0:	beq	153a8 <print_debug_data@@Base+0x6b8>
   153a4:	bl	18728 <handle_coda_error@@Base>
   153a8:	ldr	r2, [sp, #4]
   153ac:	asr	r3, r2, #31
   153b0:	strd	r2, [sp, #8]
   153b4:	mov	r3, #80	; 0x50
   153b8:	ldr	r2, [pc, #160]	; 15460 <print_debug_data@@Base+0x770>
   153bc:	mla	r4, r3, r5, r4
   153c0:	ldrd	r0, [sp, #8]
   153c4:	ldr	r3, [r4, #800]	; 0x320
   153c8:	ldr	lr, [r4, #844]	; 0x34c
   153cc:	add	ip, r2, r3, lsl #2
   153d0:	ldr	ip, [ip, #108]	; 0x6c
   153d4:	str	r0, [ip, lr, lsl #2]
   153d8:	add	lr, r2, r3, lsl #2
   153dc:	add	r3, r3, #8
   153e0:	mov	ip, r2
   153e4:	ldr	r4, [lr, #4]
   153e8:	cmn	r4, #1
   153ec:	addeq	r3, r2, r3, lsl #2
   153f0:	streq	r0, [lr, #4]
   153f4:	beq	15420 <print_debug_data@@Base+0x730>
   153f8:	add	r3, ip, r3, lsl #2
   153fc:	cmp	r4, r0
   15400:	asr	r5, r4, #31
   15404:	ldr	r4, [r3, #4]
   15408:	sbcs	r2, r5, r1
   1540c:	strlt	r0, [lr, #4]
   15410:	asr	r5, r4, #31
   15414:	cmp	r0, r4
   15418:	sbcs	r2, r1, r5
   1541c:	bge	15148 <print_debug_data@@Base+0x458>
   15420:	str	r0, [r3, #4]
   15424:	b	15148 <print_debug_data@@Base+0x458>
   15428:	add	r1, sp, #8
   1542c:	ldr	r0, [pc, #36]	; 15458 <print_debug_data@@Base+0x768>
   15430:	bl	12194 <coda_cursor_get_byte_size@plt>
   15434:	cmp	r0, #0
   15438:	beq	153b4 <print_debug_data@@Base+0x6c4>
   1543c:	bl	18728 <handle_coda_error@@Base>
   15440:	b	153b4 <print_debug_data@@Base+0x6c4>
   15444:	ldr	r3, [pc, #24]	; 15464 <print_debug_data@@Base+0x774>
   15448:	movw	r2, #294	; 0x126
   1544c:	ldr	r1, [pc, #20]	; 15468 <print_debug_data@@Base+0x778>
   15450:	ldr	r0, [pc, #28]	; 15474 <print_debug_data@@Base+0x784>
   15454:	b	15160 <print_debug_data@@Base+0x470>
   15458:	andeq	fp, r2, r0, lsl #5
   1545c:	strdeq	fp, [r2], -r0
   15460:	strheq	ip, [r2], -r8
   15464:	andeq	r8, r1, r1, lsl #24
   15468:	andeq	r8, r1, r0, asr ip
   1546c:	andeq	r8, r1, r0, asr #25
   15470:	andeq	r8, r1, r1, ror #25
   15474:	andeq	r8, r1, r4, asr fp

00015478 <dim_info_init@@Base>:
   15478:	ldr	r3, [pc, #20]	; 15494 <dim_info_init@@Base+0x1c>
   1547c:	mov	r2, #0
   15480:	str	r2, [r3]
   15484:	str	r2, [r3, #68]	; 0x44
   15488:	mvn	r2, #0
   1548c:	str	r2, [r3, #104]	; 0x68
   15490:	bx	lr
   15494:	strheq	ip, [r2], -r8

00015498 <dim_info_done@@Base>:
   15498:	bx	lr

0001549c <print_all_distinct_dims@@Base>:
   1549c:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   154a0:	ldr	r4, [pc, #416]	; 15648 <print_all_distinct_dims@@Base+0x1ac>
   154a4:	ldr	r3, [r4]
   154a8:	cmp	r3, r0
   154ac:	bgt	154c4 <print_all_distinct_dims@@Base+0x28>
   154b0:	ldr	r3, [pc, #404]	; 1564c <print_all_distinct_dims@@Base+0x1b0>
   154b4:	mov	r2, #50	; 0x32
   154b8:	ldr	r1, [pc, #400]	; 15650 <print_all_distinct_dims@@Base+0x1b4>
   154bc:	ldr	r0, [pc, #400]	; 15654 <print_all_distinct_dims@@Base+0x1b8>
   154c0:	bl	1262c <__assert_fail@plt>
   154c4:	add	r3, r0, #18
   154c8:	mov	r5, r0
   154cc:	ldr	r3, [r4, r3, lsl #2]
   154d0:	cmp	r3, #0
   154d4:	beq	15640 <print_all_distinct_dims@@Base+0x1a4>
   154d8:	lsl	r8, r0, #2
   154dc:	add	r3, r4, r8
   154e0:	ldr	r7, [r3, #4]
   154e4:	add	r7, r7, #1
   154e8:	lsl	r7, r7, #2
   154ec:	mov	r0, r7
   154f0:	bl	12398 <malloc@plt>
   154f4:	subs	r6, r0, #0
   154f8:	bne	1551c <print_all_distinct_dims@@Base+0x80>
   154fc:	mov	r3, #61	; 0x3d
   15500:	mov	r2, r7
   15504:	ldr	r1, [pc, #332]	; 15658 <print_all_distinct_dims@@Base+0x1bc>
   15508:	mvn	r0, #0
   1550c:	str	r3, [sp]
   15510:	ldr	r3, [pc, #312]	; 15650 <print_all_distinct_dims@@Base+0x1b4>
   15514:	bl	12218 <coda_set_error@plt>
   15518:	bl	18728 <handle_coda_error@@Base>
   1551c:	add	r3, r4, r8
   15520:	mov	r1, #0
   15524:	ldr	r2, [r3, #4]
   15528:	mov	r0, r6
   1552c:	add	r2, r2, #1
   15530:	lsl	r2, r2, #2
   15534:	bl	1247c <memset@plt>
   15538:	add	r3, r4, r5, lsl #2
   1553c:	add	ip, r5, #26
   15540:	mov	r2, #0
   15544:	add	ip, r4, ip, lsl #2
   15548:	ldr	r3, [r3, #140]	; 0x8c
   1554c:	add	r3, r4, r3, lsl #3
   15550:	ldrd	r0, [r3, #232]	; 0xe8
   15554:	mov	r3, #0
   15558:	cmp	r2, r0
   1555c:	sbcs	lr, r3, r1
   15560:	blt	155e0 <print_all_distinct_dims@@Base+0x144>
   15564:	add	r1, r5, #1
   15568:	ldr	r0, [pc, #236]	; 1565c <print_all_distinct_dims@@Base+0x1c0>
   1556c:	add	r5, r5, #8
   15570:	bl	121f4 <printf@plt>
   15574:	add	r3, r4, r5, lsl #2
   15578:	ldr	sl, [pc, #224]	; 15660 <print_all_distinct_dims@@Base+0x1c4>
   1557c:	add	r9, r4, r8
   15580:	ldr	r7, [r3, #4]
   15584:	ldr	r1, [r9, #4]
   15588:	cmp	r1, r7
   1558c:	bgt	15604 <print_all_distinct_dims@@Base+0x168>
   15590:	add	r5, r4, r5, lsl #2
   15594:	ldr	r0, [pc, #200]	; 15664 <print_all_distinct_dims@@Base+0x1c8>
   15598:	add	r4, r4, r8
   1559c:	bl	121f4 <printf@plt>
   155a0:	ldr	r0, [pc, #192]	; 15668 <print_all_distinct_dims@@Base+0x1cc>
   155a4:	bl	121f4 <printf@plt>
   155a8:	ldr	r7, [pc, #176]	; 15660 <print_all_distinct_dims@@Base+0x1c4>
   155ac:	ldr	r5, [r5, #4]
   155b0:	ldr	r3, [r4, #4]
   155b4:	cmp	r3, r5
   155b8:	bgt	15624 <print_all_distinct_dims@@Base+0x188>
   155bc:	ldr	r1, [r6, r3, lsl #2]
   155c0:	ldr	r0, [pc, #156]	; 15664 <print_all_distinct_dims@@Base+0x1c8>
   155c4:	bl	121f4 <printf@plt>
   155c8:	mov	r0, #10
   155cc:	bl	12488 <putchar@plt>
   155d0:	mov	r0, r6
   155d4:	add	sp, sp, #8
   155d8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   155dc:	b	12260 <free@plt>
   155e0:	ldr	r7, [ip, #4]
   155e4:	ldr	lr, [r7, r2, lsl #2]
   155e8:	cmp	lr, #0
   155ec:	ldrge	r7, [r6, lr, lsl #2]
   155f0:	addge	r7, r7, #1
   155f4:	strge	r7, [r6, lr, lsl #2]
   155f8:	adds	r2, r2, #1
   155fc:	adc	r3, r3, #0
   15600:	b	15558 <print_all_distinct_dims@@Base+0xbc>
   15604:	ldr	r3, [r6, r7, lsl #2]
   15608:	cmp	r3, #0
   1560c:	ble	1561c <print_all_distinct_dims@@Base+0x180>
   15610:	mov	r1, r7
   15614:	mov	r0, sl
   15618:	bl	121f4 <printf@plt>
   1561c:	add	r7, r7, #1
   15620:	b	15584 <print_all_distinct_dims@@Base+0xe8>
   15624:	ldr	r1, [r6, r5, lsl #2]
   15628:	cmp	r1, #0
   1562c:	ble	15638 <print_all_distinct_dims@@Base+0x19c>
   15630:	mov	r0, r7
   15634:	bl	121f4 <printf@plt>
   15638:	add	r5, r5, #1
   1563c:	b	155b0 <print_all_distinct_dims@@Base+0x114>
   15640:	add	sp, sp, #8
   15644:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15648:	strheq	ip, [r2], -r8
   1564c:	andeq	r8, r1, r8, lsl ip
   15650:	andeq	r8, r1, r0, asr ip
   15654:	andeq	r8, r1, r9, lsl #26
   15658:	andeq	r8, r1, fp, asr #20
   1565c:	andeq	r8, r1, r4, lsr #26
   15660:	andeq	r8, r1, r0, lsr sp
   15664:	andeq	r8, r1, r4, lsr sp
   15668:	andeq	r8, r1, r8, lsr sp

0001566c <dim_enter_array@@Base>:
   1566c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15670:	sub	sp, sp, #92	; 0x5c
   15674:	add	r1, sp, #48	; 0x30
   15678:	ldr	r7, [pc, #1912]	; 15df8 <dim_enter_array@@Base+0x78c>
   1567c:	ldr	r3, [r7, #136]	; 0x88
   15680:	ldr	r5, [r7, #3360]	; 0xd20
   15684:	add	r3, r3, #2
   15688:	ldr	r0, [r7, r3, lsl #2]
   1568c:	bl	12638 <coda_type_get_class@plt>
   15690:	cmp	r0, #0
   15694:	beq	1569c <dim_enter_array@@Base+0x30>
   15698:	bl	18728 <handle_coda_error@@Base>
   1569c:	ldr	r3, [sp, #48]	; 0x30
   156a0:	add	r4, sp, #56	; 0x38
   156a4:	sub	r3, r3, #1
   156a8:	cmp	r3, #5
   156ac:	ldrls	pc, [pc, r3, lsl #2]
   156b0:	b	15848 <dim_enter_array@@Base+0x1dc>
   156b4:	andeq	r5, r1, ip, asr #13
   156b8:	andeq	r5, r1, r8, asr #16
   156bc:	andeq	r5, r1, r8, asr #16
   156c0:			; <UNDEFINED> instruction: 0x000157b4
   156c4:	andeq	r5, r1, ip, ror #15
   156c8:	andeq	r5, r1, r8, asr r7
   156cc:	ldr	r3, [r7, #136]	; 0x88
   156d0:	mov	r2, r4
   156d4:	add	r1, sp, #52	; 0x34
   156d8:	add	r3, r3, #2
   156dc:	ldr	r0, [r7, r3, lsl #2]
   156e0:	bl	1256c <coda_type_get_array_dim@plt>
   156e4:	cmp	r0, #0
   156e8:	beq	156f0 <dim_enter_array@@Base+0x84>
   156ec:	bl	18728 <handle_coda_error@@Base>
   156f0:	mov	r3, #80	; 0x50
   156f4:	ldr	r1, [sp, #52]	; 0x34
   156f8:	mul	r3, r3, r5
   156fc:	add	r2, r7, r3
   15700:	add	r3, r3, #808	; 0x328
   15704:	add	r3, r7, r3
   15708:	str	r1, [r2, #804]	; 0x324
   1570c:	mov	r2, #0
   15710:	cmp	r1, r2
   15714:	bgt	15748 <dim_enter_array@@Base+0xdc>
   15718:	ldr	r3, [pc, #1756]	; 15dfc <dim_enter_array@@Base+0x790>
   1571c:	mov	r2, #80	; 0x50
   15720:	ldr	r3, [r3]
   15724:	cmp	r3, #0
   15728:	bne	15854 <dim_enter_array@@Base+0x1e8>
   1572c:	mla	r7, r2, r5, r7
   15730:	mvn	r2, #0
   15734:	str	r2, [r7, #800]	; 0x320
   15738:	str	r3, [r7, #840]	; 0x348
   1573c:	str	r3, [r7, #844]	; 0x34c
   15740:	add	sp, sp, #92	; 0x5c
   15744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15748:	ldr	r0, [r4, r2, lsl #2]
   1574c:	add	r2, r2, #1
   15750:	str	r0, [r3], #4
   15754:	b	15710 <dim_enter_array@@Base+0xa4>
   15758:	ldr	r3, [r7, #136]	; 0x88
   1575c:	mov	r1, r4
   15760:	add	r3, r3, #2
   15764:	ldr	r0, [r7, r3, lsl #2]
   15768:	bl	124a0 <coda_type_get_special_type@plt>
   1576c:	cmp	r0, #0
   15770:	beq	15778 <dim_enter_array@@Base+0x10c>
   15774:	bl	18728 <handle_coda_error@@Base>
   15778:	ldr	r3, [sp, #56]	; 0x38
   1577c:	cmp	r3, #3
   15780:	bne	157a0 <dim_enter_array@@Base+0x134>
   15784:	mov	r3, #80	; 0x50
   15788:	mov	r2, #1
   1578c:	mla	r3, r3, r5, r7
   15790:	str	r2, [r3, #804]	; 0x324
   15794:	mov	r2, #2
   15798:	str	r2, [r3, #808]	; 0x328
   1579c:	b	15718 <dim_enter_array@@Base+0xac>
   157a0:	ldr	r3, [pc, #1624]	; 15e00 <dim_enter_array@@Base+0x794>
   157a4:	movw	r2, #349	; 0x15d
   157a8:	ldr	r1, [pc, #1620]	; 15e04 <dim_enter_array@@Base+0x798>
   157ac:	ldr	r0, [pc, #1620]	; 15e08 <dim_enter_array@@Base+0x79c>
   157b0:	bl	1262c <__assert_fail@plt>
   157b4:	ldr	r3, [r7, #136]	; 0x88
   157b8:	mov	r1, r4
   157bc:	add	r3, r3, #2
   157c0:	ldr	r0, [r7, r3, lsl #2]
   157c4:	bl	124dc <coda_type_get_string_length@plt>
   157c8:	cmp	r0, #0
   157cc:	beq	157d4 <dim_enter_array@@Base+0x168>
   157d0:	bl	18728 <handle_coda_error@@Base>
   157d4:	mov	r3, #80	; 0x50
   157d8:	mov	r2, #1
   157dc:	mla	r3, r3, r5, r7
   157e0:	str	r2, [r3, #804]	; 0x324
   157e4:	ldr	r2, [sp, #56]	; 0x38
   157e8:	b	15798 <dim_enter_array@@Base+0x12c>
   157ec:	ldr	r3, [r7, #136]	; 0x88
   157f0:	mov	r1, r4
   157f4:	add	r3, r3, #2
   157f8:	ldr	r0, [r7, r3, lsl #2]
   157fc:	bl	122cc <coda_type_get_bit_size@plt>
   15800:	cmp	r0, #0
   15804:	beq	1580c <dim_enter_array@@Base+0x1a0>
   15808:	bl	18728 <handle_coda_error@@Base>
   1580c:	ldrd	r0, [sp, #56]	; 0x38
   15810:	mov	r3, #80	; 0x50
   15814:	mov	r2, #1
   15818:	mla	r3, r3, r5, r7
   1581c:	cmp	r0, #0
   15820:	str	r2, [r3, #804]	; 0x324
   15824:	sbcs	r2, r1, #0
   15828:	mvnlt	r2, #0
   1582c:	blt	15798 <dim_enter_array@@Base+0x12c>
   15830:	lsr	r2, r0, #3
   15834:	and	ip, r0, #7
   15838:	orr	r2, r2, r1, lsl #29
   1583c:	cmp	ip, #0
   15840:	addne	r2, r2, #1
   15844:	b	15798 <dim_enter_array@@Base+0x12c>
   15848:	ldr	r3, [pc, #1456]	; 15e00 <dim_enter_array@@Base+0x794>
   1584c:	movw	r2, #386	; 0x182
   15850:	b	157a8 <dim_enter_array@@Base+0x13c>
   15854:	ldr	r3, [pc, #1456]	; 15e0c <dim_enter_array@@Base+0x7a0>
   15858:	mla	r2, r2, r5, r7
   1585c:	ldr	r1, [r2, #804]	; 0x324
   15860:	ldr	r4, [r3]
   15864:	mov	r6, r3
   15868:	str	r4, [r2, #800]	; 0x320
   1586c:	add	r2, r1, r4
   15870:	cmp	r2, #8
   15874:	ble	1588c <dim_enter_array@@Base+0x220>
   15878:	ldr	r3, [pc, #1408]	; 15e00 <dim_enter_array@@Base+0x794>
   1587c:	movw	r2, #402	; 0x192
   15880:	ldr	r1, [pc, #1404]	; 15e04 <dim_enter_array@@Base+0x798>
   15884:	ldr	r0, [pc, #1412]	; 15e10 <dim_enter_array@@Base+0x7a4>
   15888:	b	157b0 <dim_enter_array@@Base+0x144>
   1588c:	cmp	r4, #0
   15890:	str	r2, [r3]
   15894:	ble	159d8 <dim_enter_array@@Base+0x36c>
   15898:	add	r2, r3, r4, lsl #3
   1589c:	ldrd	r8, [r2, #232]	; 0xe8
   158a0:	add	r2, r4, #37	; 0x25
   158a4:	lsl	r2, r2, #3
   158a8:	strd	r8, [sp, #8]
   158ac:	ldrd	r8, [r3, r2]
   158b0:	cmp	r8, #1
   158b4:	strd	r8, [sp, #16]
   158b8:	sbcs	r2, r9, #0
   158bc:	movlt	r2, #0
   158c0:	addlt	r3, r3, r4, lsl #2
   158c4:	movlt	r0, r2
   158c8:	blt	159f8 <dim_enter_array@@Base+0x38c>
   158cc:	mov	r3, #80	; 0x50
   158d0:	add	r6, r6, r4, lsl #2
   158d4:	mla	r7, r3, r5, r7
   158d8:	mov	r3, #0
   158dc:	mov	r2, r6
   158e0:	mov	sl, r3
   158e4:	mov	lr, r3
   158e8:	add	r7, r7, #808	; 0x328
   158ec:	mov	r0, r7
   158f0:	b	15910 <dim_enter_array@@Base+0x2a4>
   158f4:	ldr	ip, [r0], #4
   158f8:	add	r3, r3, #1
   158fc:	add	r2, r2, #4
   15900:	cmn	ip, #1
   15904:	str	ip, [r2]
   15908:	moveq	sl, #1
   1590c:	str	lr, [r2, #68]	; 0x44
   15910:	cmp	r1, r3
   15914:	bgt	158f4 <dim_enter_array@@Base+0x288>
   15918:	cmp	sl, #0
   1591c:	moveq	r9, sl
   15920:	beq	15a08 <dim_enter_array@@Base+0x39c>
   15924:	ldr	r3, [sp, #8]
   15928:	mov	r9, #80	; 0x50
   1592c:	mov	r8, r6
   15930:	mov	fp, #0
   15934:	str	r7, [sp, #32]
   15938:	lsl	r3, r3, #2
   1593c:	str	r3, [sp, #28]
   15940:	ldr	r3, [pc, #1200]	; 15df8 <dim_enter_array@@Base+0x78c>
   15944:	mla	r9, r9, r5, r3
   15948:	ldr	r3, [r9, #804]	; 0x324
   1594c:	cmp	r3, fp
   15950:	bgt	15b94 <dim_enter_array@@Base+0x528>
   15954:	mov	r8, #0
   15958:	mov	fp, #80	; 0x50
   1595c:	mov	r2, r8
   15960:	mov	r1, r8
   15964:	mov	r0, r8
   15968:	str	r8, [r9, #844]	; 0x34c
   1596c:	mov	r9, r8
   15970:	bl	15078 <print_debug_data@@Base+0x388>
   15974:	ldr	r3, [pc, #1148]	; 15df8 <dim_enter_array@@Base+0x78c>
   15978:	mla	fp, fp, r5, r3
   1597c:	mov	r3, r8
   15980:	ldr	r2, [fp, #804]	; 0x324
   15984:	cmp	r2, r8
   15988:	ble	15a08 <dim_enter_array@@Base+0x39c>
   1598c:	ldr	r2, [r7], #4
   15990:	cmn	r2, #1
   15994:	bne	159cc <dim_enter_array@@Base+0x360>
   15998:	ldr	r1, [r6, #4]
   1599c:	ldr	r2, [r6, #36]	; 0x24
   159a0:	cmp	r1, r2
   159a4:	movne	r2, #1
   159a8:	movne	r9, sl
   159ac:	strne	r2, [r6, #72]	; 0x48
   159b0:	bne	159cc <dim_enter_array@@Base+0x360>
   159b4:	str	r3, [r6, #72]	; 0x48
   159b8:	ldr	r0, [r6, #108]	; 0x6c
   159bc:	bl	12260 <free@plt>
   159c0:	mov	r3, #0
   159c4:	str	r3, [r6, #108]	; 0x6c
   159c8:	str	r3, [r6, #140]	; 0x8c
   159cc:	add	r8, r8, #1
   159d0:	add	r6, r6, #4
   159d4:	b	15980 <dim_enter_array@@Base+0x314>
   159d8:	mov	r2, #1
   159dc:	mov	r3, #0
   159e0:	strd	r2, [sp, #8]
   159e4:	strd	r2, [sp, #16]
   159e8:	b	158cc <dim_enter_array@@Base+0x260>
   159ec:	add	r2, r2, #1
   159f0:	str	r0, [r3]
   159f4:	str	r0, [r3, #68]	; 0x44
   159f8:	cmp	r1, r2
   159fc:	add	r3, r3, #4
   15a00:	bgt	159ec <dim_enter_array@@Base+0x380>
   15a04:	mov	r9, #0
   15a08:	ldr	r2, [pc, #1020]	; 15e0c <dim_enter_array@@Base+0x7a0>
   15a0c:	mov	r3, #0
   15a10:	mvn	r1, #0
   15a14:	mov	lr, r3
   15a18:	mov	r0, r3
   15a1c:	mov	ip, r2
   15a20:	str	r3, [r2, #68]	; 0x44
   15a24:	ldr	r6, [ip], #72	; 0x48
   15a28:	str	r1, [r2, #104]	; 0x68
   15a2c:	cmp	r6, r0
   15a30:	bgt	15c34 <dim_enter_array@@Base+0x5c8>
   15a34:	cmp	r3, #0
   15a38:	ldr	r3, [pc, #952]	; 15df8 <dim_enter_array@@Base+0x78c>
   15a3c:	strne	lr, [r2, #68]	; 0x44
   15a40:	mov	lr, #0
   15a44:	strne	r1, [r2, #104]	; 0x68
   15a48:	mov	r2, #80	; 0x50
   15a4c:	ldr	sl, [pc, #952]	; 15e0c <dim_enter_array@@Base+0x7a0>
   15a50:	mla	r2, r2, r5, r3
   15a54:	mov	r3, #1
   15a58:	str	r3, [r2, #840]	; 0x348
   15a5c:	lsl	r3, r4, #3
   15a60:	ldr	fp, [r2, #804]	; 0x324
   15a64:	add	ip, r3, sl
   15a68:	str	r3, [sp, #24]
   15a6c:	lsl	r3, r4, #2
   15a70:	add	r1, r3, sl
   15a74:	mov	r8, r1
   15a78:	str	r1, [sp, #28]
   15a7c:	add	r1, r4, #30
   15a80:	add	r1, sl, r1, lsl #3
   15a84:	str	r1, [sp, #40]	; 0x28
   15a88:	str	r3, [sp, #44]	; 0x2c
   15a8c:	cmp	fp, lr
   15a90:	bgt	15c50 <dim_enter_array@@Base+0x5e4>
   15a94:	cmp	r9, #0
   15a98:	ldr	r1, [pc, #876]	; 15e0c <dim_enter_array@@Base+0x7a0>
   15a9c:	beq	15d54 <dim_enter_array@@Base+0x6e8>
   15aa0:	ldr	r3, [sp, #24]
   15aa4:	mov	r0, #0
   15aa8:	mov	r2, #0
   15aac:	add	lr, r3, #304	; 0x130
   15ab0:	mov	r3, #0
   15ab4:	add	lr, r1, lr
   15ab8:	mov	ip, lr
   15abc:	cmp	fp, r0
   15ac0:	bgt	15cd8 <dim_enter_array@@Base+0x66c>
   15ac4:	mov	r2, #0
   15ac8:	mov	r3, #0
   15acc:	strd	r2, [sp, #16]
   15ad0:	ldrd	r2, [sp, #8]
   15ad4:	ldrd	r6, [sp, #16]
   15ad8:	cmp	r6, r2
   15adc:	sbcs	r3, r7, r3
   15ae0:	blt	15d38 <dim_enter_array@@Base+0x6cc>
   15ae4:	ldr	r2, [pc, #780]	; 15df8 <dim_enter_array@@Base+0x78c>
   15ae8:	mov	r3, #80	; 0x50
   15aec:	ldr	ip, [pc, #792]	; 15e0c <dim_enter_array@@Base+0x7a0>
   15af0:	mla	r5, r3, r5, r2
   15af4:	ldr	lr, [r5, #804]	; 0x324
   15af8:	add	r0, lr, r4
   15afc:	add	r0, r0, #37	; 0x25
   15b00:	lsl	r0, r0, #3
   15b04:	ldrd	r2, [ip, r0]
   15b08:	cmp	r2, #1
   15b0c:	sbcs	r3, r3, #0
   15b10:	mov	r3, ip
   15b14:	blt	15740 <dim_enter_array@@Base+0xd4>
   15b18:	ldr	r2, [r3]
   15b1c:	sub	ip, lr, #2
   15b20:	ldr	r6, [r3, r2, lsl #2]
   15b24:	add	r0, r3, r2, lsl #3
   15b28:	add	r2, r4, #21
   15b2c:	add	r2, r2, lr
   15b30:	add	r2, r3, r2, lsl #3
   15b34:	asr	r7, r6, #31
   15b38:	strd	r6, [r0, #168]	; 0xa8
   15b3c:	ldr	r0, [sp, #28]
   15b40:	add	lr, r0, #4
   15b44:	cmp	ip, #0
   15b48:	bge	15dcc <dim_enter_array@@Base+0x760>
   15b4c:	ldr	r2, [sp, #24]
   15b50:	sub	ip, r4, #1
   15b54:	add	r4, r4, #22
   15b58:	add	r4, r1, r4, lsl #3
   15b5c:	add	r2, r2, #168	; 0xa8
   15b60:	add	r3, r3, r2
   15b64:	cmp	ip, #0
   15b68:	blt	15740 <dim_enter_array@@Base+0xd4>
   15b6c:	ldm	r4, {r0, r2}
   15b70:	sub	ip, ip, #1
   15b74:	ldr	lr, [r3]
   15b78:	ldr	r1, [r3, #4]
   15b7c:	mul	r1, r1, r0
   15b80:	mla	r2, lr, r2, r1
   15b84:	umull	r0, r1, r0, lr
   15b88:	add	r1, r2, r1
   15b8c:	strd	r0, [r3], #-8
   15b90:	b	15b64 <dim_enter_array@@Base+0x4f8>
   15b94:	ldr	r3, [sp, #32]
   15b98:	ldr	r2, [r3], #4
   15b9c:	cmn	r2, #1
   15ba0:	str	r2, [sp, #24]
   15ba4:	str	r3, [sp, #32]
   15ba8:	mov	r3, r2
   15bac:	movne	r3, #0
   15bb0:	strne	r3, [r8, #108]	; 0x6c
   15bb4:	strne	r3, [r8, #140]	; 0x8c
   15bb8:	bne	15c28 <dim_enter_array@@Base+0x5bc>
   15bbc:	str	r4, [r8, #140]	; 0x8c
   15bc0:	ldr	r0, [sp, #28]
   15bc4:	bl	12398 <malloc@plt>
   15bc8:	cmp	r0, #0
   15bcc:	str	r0, [r8, #108]	; 0x6c
   15bd0:	bne	15bf4 <dim_enter_array@@Base+0x588>
   15bd4:	mov	r3, #456	; 0x1c8
   15bd8:	ldr	r1, [pc, #564]	; 15e14 <dim_enter_array@@Base+0x7a8>
   15bdc:	str	r3, [sp]
   15be0:	ldr	r3, [pc, #540]	; 15e04 <dim_enter_array@@Base+0x798>
   15be4:	ldr	r0, [sp, #24]
   15be8:	ldr	r2, [sp, #28]
   15bec:	bl	12218 <coda_set_error@plt>
   15bf0:	bl	18728 <handle_coda_error@@Base>
   15bf4:	mov	r2, #0
   15bf8:	mov	r3, #0
   15bfc:	mvn	lr, #0
   15c00:	b	15c18 <dim_enter_array@@Base+0x5ac>
   15c04:	ldr	r0, [r8, #108]	; 0x6c
   15c08:	mov	ip, r2
   15c0c:	adds	r2, r2, #1
   15c10:	adc	r3, r3, #0
   15c14:	str	lr, [r0, ip, lsl #2]
   15c18:	ldrd	r0, [sp, #8]
   15c1c:	cmp	r2, r0
   15c20:	sbcs	r1, r3, r1
   15c24:	blt	15c04 <dim_enter_array@@Base+0x598>
   15c28:	add	fp, fp, #1
   15c2c:	add	r8, r8, #4
   15c30:	b	15948 <dim_enter_array@@Base+0x2dc>
   15c34:	ldr	r7, [ip], #4
   15c38:	cmp	r7, #0
   15c3c:	movne	r3, #1
   15c40:	movne	r1, r0
   15c44:	movne	lr, r3
   15c48:	add	r0, r0, #1
   15c4c:	b	15a2c <dim_enter_array@@Base+0x3c0>
   15c50:	ldr	r1, [r8, #4]
   15c54:	cmp	lr, #0
   15c58:	ldr	r0, [r2, #840]	; 0x348
   15c5c:	mul	r0, r1, r0
   15c60:	str	r0, [r2, #840]	; 0x348
   15c64:	bne	15cb4 <dim_enter_array@@Base+0x648>
   15c68:	ldr	r1, [sp, #44]	; 0x2c
   15c6c:	add	r1, sl, r1
   15c70:	ldr	r0, [r1, #4]
   15c74:	ldr	r1, [sp, #12]
   15c78:	asr	r7, r0, #31
   15c7c:	mov	r6, r0
   15c80:	strd	r6, [sp, #32]
   15c84:	mul	r6, r0, r1
   15c88:	ldr	r1, [sp, #8]
   15c8c:	ldr	r7, [sp, #36]	; 0x24
   15c90:	mla	r6, r1, r7, r6
   15c94:	umull	r0, r1, r0, r1
   15c98:	add	r1, r6, r1
   15c9c:	ldr	r6, [sp, #40]	; 0x28
   15ca0:	strd	r0, [r6]
   15ca4:	add	lr, lr, #1
   15ca8:	add	ip, ip, #8
   15cac:	add	r8, r8, #4
   15cb0:	b	15a8c <dim_enter_array@@Base+0x420>
   15cb4:	ldr	r0, [ip, #232]	; 0xe8
   15cb8:	asr	r7, r1, #31
   15cbc:	mul	r6, r7, r0
   15cc0:	ldr	r7, [ip, #236]	; 0xec
   15cc4:	mla	r6, r1, r7, r6
   15cc8:	umull	r0, r1, r0, r1
   15ccc:	add	r1, r6, r1
   15cd0:	strd	r0, [ip, #240]	; 0xf0
   15cd4:	b	15ca4 <dim_enter_array@@Base+0x638>
   15cd8:	add	r0, r0, #1
   15cdc:	strd	r2, [ip], #8
   15ce0:	b	15abc <dim_enter_array@@Base+0x450>
   15ce4:	ldr	sl, [ip, #72]	; 0x48
   15ce8:	add	r6, r6, #1
   15cec:	add	ip, ip, #4
   15cf0:	ldrd	r2, [r7]
   15cf4:	cmp	sl, #0
   15cf8:	ldrne	sl, [ip, #104]	; 0x68
   15cfc:	ldreq	sl, [ip]
   15d00:	ldrne	sl, [sl, r8]
   15d04:	mul	r0, sl, r0
   15d08:	adds	r2, r2, r0
   15d0c:	adc	r3, r3, r0, asr #31
   15d10:	strd	r2, [r7], #8
   15d14:	cmp	fp, r6
   15d18:	bgt	15ce4 <dim_enter_array@@Base+0x678>
   15d1c:	ldr	r3, [sp, #16]
   15d20:	adds	r3, r3, #1
   15d24:	str	r3, [sp, #16]
   15d28:	ldr	r3, [sp, #20]
   15d2c:	adc	r3, r3, #0
   15d30:	str	r3, [sp, #20]
   15d34:	b	15ad0 <dim_enter_array@@Base+0x464>
   15d38:	ldr	r3, [sp, #16]
   15d3c:	mov	r7, lr
   15d40:	mov	r0, r9
   15d44:	mov	r6, #0
   15d48:	ldr	ip, [sp, #28]
   15d4c:	lsl	r8, r3, #2
   15d50:	b	15d14 <dim_enter_array@@Base+0x6a8>
   15d54:	add	r0, r1, r4, lsl #2
   15d58:	ldr	ip, [sp, #16]
   15d5c:	add	r2, r4, #38	; 0x26
   15d60:	lsl	r2, r2, #3
   15d64:	add	r3, r3, #8
   15d68:	mov	r8, #1
   15d6c:	ldr	r6, [r0, #4]
   15d70:	ldr	r0, [sp, #20]
   15d74:	asr	r9, r6, #31
   15d78:	mul	r0, r6, r0
   15d7c:	umull	r6, r7, r6, ip
   15d80:	mla	r0, ip, r9, r0
   15d84:	add	r7, r0, r7
   15d88:	add	r0, r1, r3
   15d8c:	strd	r6, [r1, r2]
   15d90:	ldr	r2, [sp, #24]
   15d94:	add	ip, r2, #304	; 0x130
   15d98:	add	ip, r1, ip
   15d9c:	cmp	fp, r8
   15da0:	ble	15ae4 <dim_enter_array@@Base+0x478>
   15da4:	ldr	r2, [r0], #4
   15da8:	add	r8, r8, #1
   15dac:	ldm	ip, {r3, lr}
   15db0:	asr	r7, r2, #31
   15db4:	mul	lr, r2, lr
   15db8:	mla	lr, r3, r7, lr
   15dbc:	umull	r2, r3, r2, r3
   15dc0:	add	r3, lr, r3
   15dc4:	strd	r2, [ip, #8]!
   15dc8:	b	15d9c <dim_enter_array@@Base+0x730>
   15dcc:	ldr	r6, [lr, ip, lsl #2]
   15dd0:	sub	ip, ip, #1
   15dd4:	ldr	r5, [r2]
   15dd8:	ldr	r0, [r2, #4]
   15ddc:	asr	r9, r6, #31
   15de0:	mul	r0, r6, r0
   15de4:	umull	r6, r7, r6, r5
   15de8:	mla	r0, r5, r9, r0
   15dec:	add	r7, r0, r7
   15df0:	strd	r6, [r2, #-8]!
   15df4:	b	15b44 <dim_enter_array@@Base+0x4d8>
   15df8:	strdeq	fp, [r2], -r0
   15dfc:	andeq	fp, r2, ip, ror #3
   15e00:	andeq	r8, r1, r0, lsr ip
   15e04:	andeq	r8, r1, r0, asr ip
   15e08:	andeq	r8, r1, r4, asr fp
   15e0c:	strheq	ip, [r2], -r8
   15e10:	andeq	r8, r1, r0, asr #26
   15e14:	andeq	r8, r1, fp, asr #20

00015e18 <dim_leave_array@@Base>:
   15e18:	ldr	r2, [pc, #280]	; 15f38 <dim_leave_array@@Base+0x120>
   15e1c:	push	{r4, r5, r6, r7, r8, lr}
   15e20:	ldr	r3, [r2, #3360]	; 0xd20
   15e24:	cmp	r3, #0
   15e28:	bge	15e40 <dim_leave_array@@Base+0x28>
   15e2c:	ldr	r3, [pc, #264]	; 15f3c <dim_leave_array@@Base+0x124>
   15e30:	movw	r2, #579	; 0x243
   15e34:	ldr	r1, [pc, #260]	; 15f40 <dim_leave_array@@Base+0x128>
   15e38:	ldr	r0, [pc, #260]	; 15f44 <dim_leave_array@@Base+0x12c>
   15e3c:	bl	1262c <__assert_fail@plt>
   15e40:	mov	r1, #80	; 0x50
   15e44:	ldr	r4, [pc, #252]	; 15f48 <dim_leave_array@@Base+0x130>
   15e48:	mov	r8, #0
   15e4c:	mla	r3, r1, r3, r2
   15e50:	ldr	r6, [r3, #800]	; 0x320
   15e54:	mov	r5, r3
   15e58:	ldr	r2, [r4]
   15e5c:	ldr	r1, [r3, #804]	; 0x324
   15e60:	add	r7, r6, #18
   15e64:	add	r7, r4, r7, lsl #2
   15e68:	sub	r2, r2, r1
   15e6c:	str	r2, [r4]
   15e70:	ldr	r3, [r5, #804]	; 0x324
   15e74:	cmp	r3, r8
   15e78:	bgt	15f00 <dim_leave_array@@Base+0xe8>
   15e7c:	ldr	lr, [pc, #200]	; 15f4c <dim_leave_array@@Base+0x134>
   15e80:	mov	r2, #0
   15e84:	mvn	r1, #0
   15e88:	mov	ip, r2
   15e8c:	mov	r0, r2
   15e90:	ldr	r5, [r4]
   15e94:	str	r2, [r4, #68]	; 0x44
   15e98:	str	r1, [r4, #104]	; 0x68
   15e9c:	cmp	r5, r0
   15ea0:	bgt	15f1c <dim_leave_array@@Base+0x104>
   15ea4:	add	r3, r3, r6
   15ea8:	cmp	r2, #0
   15eac:	add	r3, r3, #37	; 0x25
   15eb0:	lsl	r3, r3, #3
   15eb4:	strne	ip, [r4, #68]	; 0x44
   15eb8:	strne	r1, [r4, #104]	; 0x68
   15ebc:	ldrd	r2, [r3, r4]
   15ec0:	cmp	r2, #1
   15ec4:	sbcs	r3, r3, #0
   15ec8:	poplt	{r4, r5, r6, r7, r8, pc}
   15ecc:	add	r5, r6, #21
   15ed0:	sub	r7, r6, #1
   15ed4:	add	r6, r6, #22
   15ed8:	add	r5, r4, r5, lsl #3
   15edc:	add	r4, r4, r6, lsl #3
   15ee0:	cmp	r7, #0
   15ee4:	poplt	{r4, r5, r6, r7, r8, pc}
   15ee8:	sub	r7, r7, #1
   15eec:	ldrd	r2, [r4]
   15ef0:	ldrd	r0, [r5]
   15ef4:	bl	18768 <handle_coda_error@@Base+0x40>
   15ef8:	strd	r0, [r5], #-8
   15efc:	b	15ee0 <dim_leave_array@@Base+0xc8>
   15f00:	ldr	r3, [r7], #4
   15f04:	cmp	r3, #0
   15f08:	beq	15f14 <dim_leave_array@@Base+0xfc>
   15f0c:	ldr	r0, [r7, #32]
   15f10:	bl	12260 <free@plt>
   15f14:	add	r8, r8, #1
   15f18:	b	15e70 <dim_leave_array@@Base+0x58>
   15f1c:	ldr	r7, [lr], #4
   15f20:	cmp	r7, #0
   15f24:	movne	r2, #1
   15f28:	movne	r1, r0
   15f2c:	movne	ip, r2
   15f30:	add	r0, r0, #1
   15f34:	b	15e9c <dim_leave_array@@Base+0x84>
   15f38:	strdeq	fp, [r2], -r0
   15f3c:	andeq	r8, r1, r0, asr #24
   15f40:	andeq	r8, r1, r0, asr ip
   15f44:	andeq	r8, r1, r9, ror sp
   15f48:	strheq	ip, [r2], -r8
   15f4c:	andeq	ip, r2, r0, lsl #2

00015f50 <dim_record_field_available@@Base>:
   15f50:	mov	r2, #0
   15f54:	mov	r1, r2
   15f58:	mov	r0, r2
   15f5c:	b	14e44 <print_debug_data@@Base+0x154>

00015f60 <codadump_filter_remove@@Base>:
   15f60:	push	{r4, lr}
   15f64:	subs	r4, r0, #0
   15f68:	bne	15f80 <codadump_filter_remove@@Base+0x20>
   15f6c:	ldr	r3, [pc, #120]	; 15fec <codadump_filter_remove@@Base+0x8c>
   15f70:	mov	r2, #192	; 0xc0
   15f74:	ldr	r1, [pc, #116]	; 15ff0 <codadump_filter_remove@@Base+0x90>
   15f78:	ldr	r0, [pc, #116]	; 15ff4 <codadump_filter_remove@@Base+0x94>
   15f7c:	bl	1262c <__assert_fail@plt>
   15f80:	ldr	r0, [r4]
   15f84:	cmp	r0, #0
   15f88:	popeq	{r4, pc}
   15f8c:	ldr	r3, [r0, #8]
   15f90:	cmp	r3, #0
   15f94:	beq	15fa0 <codadump_filter_remove@@Base+0x40>
   15f98:	add	r0, r0, #8
   15f9c:	bl	15f60 <codadump_filter_remove@@Base>
   15fa0:	ldr	r0, [r4]
   15fa4:	ldr	r3, [r0, #4]
   15fa8:	cmp	r3, #0
   15fac:	beq	15fb8 <codadump_filter_remove@@Base+0x58>
   15fb0:	add	r0, r0, #4
   15fb4:	bl	15f60 <codadump_filter_remove@@Base>
   15fb8:	ldr	r3, [r4]
   15fbc:	ldr	r0, [r3]
   15fc0:	cmp	r0, #0
   15fc4:	beq	15fd8 <codadump_filter_remove@@Base+0x78>
   15fc8:	bl	12260 <free@plt>
   15fcc:	ldr	r3, [r4]
   15fd0:	mov	r2, #0
   15fd4:	str	r2, [r3]
   15fd8:	ldr	r0, [r4]
   15fdc:	bl	12260 <free@plt>
   15fe0:	mov	r3, #0
   15fe4:	str	r3, [r4]
   15fe8:	pop	{r4, pc}
   15fec:	muleq	r1, r7, sp
   15ff0:	andeq	r8, r1, sl, lsl lr
   15ff4:	andeq	r8, r1, r6, ror #28
   15ff8:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   15ffc:	cmp	r0, #0
   16000:	bne	16018 <codadump_filter_remove@@Base+0xb8>
   16004:	ldr	r3, [pc, #452]	; 161d0 <codadump_filter_remove@@Base+0x270>
   16008:	mov	r2, #44	; 0x2c
   1600c:	ldr	r1, [pc, #448]	; 161d4 <codadump_filter_remove@@Base+0x274>
   16010:	ldr	r0, [pc, #448]	; 161d8 <codadump_filter_remove@@Base+0x278>
   16014:	bl	1262c <__assert_fail@plt>
   16018:	cmp	r1, #0
   1601c:	mov	r5, r1
   16020:	mov	r7, r2
   16024:	bne	16040 <codadump_filter_remove@@Base+0xe0>
   16028:	ldr	r3, [pc, #416]	; 161d0 <codadump_filter_remove@@Base+0x270>
   1602c:	mov	r2, #45	; 0x2d
   16030:	ldr	r1, [pc, #412]	; 161d4 <codadump_filter_remove@@Base+0x274>
   16034:	ldr	r0, [pc, #416]	; 161dc <codadump_filter_remove@@Base+0x27c>
   16038:	b	16014 <codadump_filter_remove@@Base+0xb4>
   1603c:	mov	r0, r2
   16040:	mov	r2, r0
   16044:	mov	r6, r0
   16048:	ldrb	r3, [r2], #1
   1604c:	sub	r4, r3, #9
   16050:	cmp	r3, #32
   16054:	cmpne	r4, #1
   16058:	movls	r4, #1
   1605c:	movhi	r4, #0
   16060:	bls	1603c <codadump_filter_remove@@Base+0xdc>
   16064:	ldrb	r3, [r0]
   16068:	mov	r8, r0
   1606c:	add	r0, r0, #1
   16070:	cmp	r3, #59	; 0x3b
   16074:	cmpne	r3, #0
   16078:	and	r3, r3, #253	; 0xfd
   1607c:	movne	r2, #1
   16080:	moveq	r2, #0
   16084:	cmp	r3, #44	; 0x2c
   16088:	moveq	r3, #0
   1608c:	andne	r3, r2, #1
   16090:	cmp	r3, #0
   16094:	bne	161ac <codadump_filter_remove@@Base+0x24c>
   16098:	cmp	r4, #0
   1609c:	streq	r4, [r5]
   160a0:	beq	161c8 <codadump_filter_remove@@Base+0x268>
   160a4:	mov	r0, #12
   160a8:	bl	12398 <malloc@plt>
   160ac:	cmp	r0, #0
   160b0:	str	r0, [r5]
   160b4:	bne	160d8 <codadump_filter_remove@@Base+0x178>
   160b8:	mov	r3, #69	; 0x45
   160bc:	mov	r2, #12
   160c0:	ldr	r1, [pc, #280]	; 161e0 <codadump_filter_remove@@Base+0x280>
   160c4:	mvn	r0, #0
   160c8:	str	r3, [sp]
   160cc:	ldr	r3, [pc, #256]	; 161d4 <codadump_filter_remove@@Base+0x274>
   160d0:	bl	12218 <coda_set_error@plt>
   160d4:	bl	18728 <handle_coda_error@@Base>
   160d8:	ldr	sl, [r5]
   160dc:	add	r9, r4, #1
   160e0:	mov	r0, r9
   160e4:	bl	12398 <malloc@plt>
   160e8:	cmp	r0, #0
   160ec:	str	r0, [sl]
   160f0:	bne	16114 <codadump_filter_remove@@Base+0x1b4>
   160f4:	mov	r3, #76	; 0x4c
   160f8:	mov	r2, r9
   160fc:	ldr	r1, [pc, #224]	; 161e4 <codadump_filter_remove@@Base+0x284>
   16100:	mvn	r0, #0
   16104:	str	r3, [sp]
   16108:	ldr	r3, [pc, #196]	; 161d4 <codadump_filter_remove@@Base+0x274>
   1610c:	bl	12218 <coda_set_error@plt>
   16110:	bl	18728 <handle_coda_error@@Base>
   16114:	ldr	r3, [r5]
   16118:	mov	r2, r4
   1611c:	mov	r1, r6
   16120:	ldr	r0, [r3]
   16124:	bl	12494 <strncpy@plt>
   16128:	ldr	r2, [r5]
   1612c:	mov	r3, #0
   16130:	str	r3, [r2, #4]
   16134:	ldr	r2, [r5]
   16138:	str	r3, [r2, #8]
   1613c:	ldr	r3, [r5]
   16140:	ldr	r2, [r3]
   16144:	add	r4, r2, r4
   16148:	sub	r0, r4, r2
   1614c:	ldrb	r1, [r4, #-1]!
   16150:	sub	r3, r1, #9
   16154:	cmp	r1, #32
   16158:	cmpne	r3, #1
   1615c:	movls	r3, #1
   16160:	movhi	r3, #0
   16164:	bls	16148 <codadump_filter_remove@@Base+0x1e8>
   16168:	strb	r3, [r2, r0]
   1616c:	ldrb	r3, [r8]
   16170:	cmp	r3, #46	; 0x2e
   16174:	bne	161b4 <codadump_filter_remove@@Base+0x254>
   16178:	ldr	r1, [r5]
   1617c:	mov	r2, r7
   16180:	add	r0, r6, r9
   16184:	add	r1, r1, #4
   16188:	bl	15ff8 <codadump_filter_remove@@Base+0x98>
   1618c:	ldr	r3, [r5]
   16190:	ldr	r3, [r3, #4]
   16194:	cmp	r3, #0
   16198:	bne	161c8 <codadump_filter_remove@@Base+0x268>
   1619c:	mov	r0, r5
   161a0:	add	sp, sp, #8
   161a4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   161a8:	b	15f60 <codadump_filter_remove@@Base>
   161ac:	add	r4, r4, #1
   161b0:	b	16064 <codadump_filter_remove@@Base+0x104>
   161b4:	cmp	r3, #44	; 0x2c
   161b8:	cmpne	r3, #59	; 0x3b
   161bc:	addeq	r6, r6, r9
   161c0:	strne	r8, [r7]
   161c4:	streq	r6, [r7]
   161c8:	add	sp, sp, #8
   161cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   161d0:	andeq	r8, r1, lr, lsr #27
   161d4:	andeq	r8, r1, sl, lsl lr
   161d8:	andeq	r8, r1, r5, ror lr
   161dc:	andeq	r8, r1, r6, ror #28
   161e0:	andeq	r8, r1, fp, asr #20
   161e4:	andeq	r8, r1, r9, lsl #29
   161e8:	push	{r0, r1, r4, r5, r6, lr}
   161ec:	subs	r5, r1, #0
   161f0:	str	r1, [sp, #4]
   161f4:	beq	1624c <codadump_filter_remove@@Base+0x2ec>
   161f8:	ldr	r4, [r0]
   161fc:	cmp	r4, #0
   16200:	streq	r5, [r0]
   16204:	beq	1624c <codadump_filter_remove@@Base+0x2ec>
   16208:	ldr	r0, [r4]
   1620c:	ldr	r1, [r5]
   16210:	bl	121dc <strcmp@plt>
   16214:	subs	r6, r0, #0
   16218:	bne	1625c <codadump_filter_remove@@Base+0x2fc>
   1621c:	ldr	r3, [r4, #4]
   16220:	cmp	r3, #0
   16224:	beq	16244 <codadump_filter_remove@@Base+0x2e4>
   16228:	ldr	r1, [r5, #4]
   1622c:	add	r0, r4, #4
   16230:	cmp	r1, #0
   16234:	beq	16254 <codadump_filter_remove@@Base+0x2f4>
   16238:	bl	161e8 <codadump_filter_remove@@Base+0x288>
   1623c:	ldr	r3, [sp, #4]
   16240:	str	r6, [r3, #4]
   16244:	add	r0, sp, #4
   16248:	bl	15f60 <codadump_filter_remove@@Base>
   1624c:	add	sp, sp, #8
   16250:	pop	{r4, r5, r6, pc}
   16254:	bl	15f60 <codadump_filter_remove@@Base>
   16258:	b	16244 <codadump_filter_remove@@Base+0x2e4>
   1625c:	ldr	r3, [r4, #8]
   16260:	cmp	r3, #0
   16264:	streq	r5, [r4, #8]
   16268:	beq	1624c <codadump_filter_remove@@Base+0x2ec>
   1626c:	mov	r1, r5
   16270:	add	r0, r4, #8
   16274:	bl	161e8 <codadump_filter_remove@@Base+0x288>
   16278:	b	1624c <codadump_filter_remove@@Base+0x2ec>

0001627c <codadump_filter_create@@Base>:
   1627c:	push	{r0, r1, r2, r3, r4, lr}
   16280:	mov	r3, #0
   16284:	cmp	r0, r3
   16288:	str	r3, [sp, #4]
   1628c:	str	r3, [sp, #8]
   16290:	str	r0, [sp, #12]
   16294:	beq	162c8 <codadump_filter_create@@Base+0x4c>
   16298:	ldr	r0, [sp, #12]
   1629c:	ldrb	r3, [r0]
   162a0:	cmp	r3, #0
   162a4:	beq	162c8 <codadump_filter_create@@Base+0x4c>
   162a8:	add	r1, sp, #8
   162ac:	add	r2, sp, #12
   162b0:	bl	15ff8 <codadump_filter_remove@@Base+0x98>
   162b4:	ldr	r1, [sp, #8]
   162b8:	add	r0, sp, #4
   162bc:	cmp	r1, #0
   162c0:	bne	162d4 <codadump_filter_create@@Base+0x58>
   162c4:	bl	15f60 <codadump_filter_remove@@Base>
   162c8:	ldr	r0, [sp, #4]
   162cc:	add	sp, sp, #20
   162d0:	pop	{pc}		; (ldr pc, [sp], #4)
   162d4:	bl	161e8 <codadump_filter_remove@@Base+0x288>
   162d8:	mov	r3, #0
   162dc:	str	r3, [sp, #8]
   162e0:	b	16298 <codadump_filter_create@@Base+0x1c>

000162e4 <codadump_filter_get_fieldname@@Base>:
   162e4:	cmp	r0, #0
   162e8:	bne	16304 <codadump_filter_get_fieldname@@Base+0x20>
   162ec:	push	{r4, lr}
   162f0:	mov	r2, #216	; 0xd8
   162f4:	ldr	r3, [pc, #16]	; 1630c <codadump_filter_get_fieldname@@Base+0x28>
   162f8:	ldr	r1, [pc, #16]	; 16310 <codadump_filter_get_fieldname@@Base+0x2c>
   162fc:	ldr	r0, [pc, #16]	; 16314 <codadump_filter_get_fieldname@@Base+0x30>
   16300:	bl	1262c <__assert_fail@plt>
   16304:	ldr	r0, [r0]
   16308:	bx	lr
   1630c:			; <UNDEFINED> instruction: 0x00018dbe
   16310:	andeq	r8, r1, sl, lsl lr
   16314:	andeq	r8, r1, r6, ror #28

00016318 <codadump_filter_get_subfilter@@Base>:
   16318:	cmp	r0, #0
   1631c:	bne	16338 <codadump_filter_get_subfilter@@Base+0x20>
   16320:	push	{r4, lr}
   16324:	mov	r2, #223	; 0xdf
   16328:	ldr	r3, [pc, #16]	; 16340 <codadump_filter_get_subfilter@@Base+0x28>
   1632c:	ldr	r1, [pc, #16]	; 16344 <codadump_filter_get_subfilter@@Base+0x2c>
   16330:	ldr	r0, [pc, #16]	; 16348 <codadump_filter_get_subfilter@@Base+0x30>
   16334:	bl	1262c <__assert_fail@plt>
   16338:	ldr	r0, [r0, #4]
   1633c:	bx	lr
   16340:	ldrdeq	r8, [r1], -ip
   16344:	andeq	r8, r1, sl, lsl lr
   16348:	andeq	r8, r1, r6, ror #28

0001634c <codadump_filter_get_next_filter@@Base>:
   1634c:	cmp	r0, #0
   16350:	bne	1636c <codadump_filter_get_next_filter@@Base+0x20>
   16354:	push	{r4, lr}
   16358:	mov	r2, #230	; 0xe6
   1635c:	ldr	r3, [pc, #16]	; 16374 <codadump_filter_get_next_filter@@Base+0x28>
   16360:	ldr	r1, [pc, #16]	; 16378 <codadump_filter_get_next_filter@@Base+0x2c>
   16364:	ldr	r0, [pc, #16]	; 1637c <codadump_filter_get_next_filter@@Base+0x30>
   16368:	bl	1262c <__assert_fail@plt>
   1636c:	ldr	r0, [r0, #8]
   16370:	bx	lr
   16374:	strdeq	r8, [r1], -sl
   16378:	andeq	r8, r1, sl, lsl lr
   1637c:	andeq	r8, r1, r6, ror #28
   16380:	push	{r0, r1, r2, r3}
   16384:	ldr	r3, [pc, #36]	; 163b0 <codadump_filter_get_next_filter@@Base+0x64>
   16388:	push	{r0, r1, r2, lr}
   1638c:	add	r2, sp, #20
   16390:	ldr	r1, [sp, #16]
   16394:	str	r2, [sp, #4]
   16398:	ldr	r0, [r3]
   1639c:	bl	12524 <vfprintf@plt>
   163a0:	add	sp, sp, #12
   163a4:	pop	{lr}		; (ldr lr, [sp], #4)
   163a8:	add	sp, sp, #16
   163ac:	bx	lr
   163b0:	muleq	r2, r8, r0
   163b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   163b8:	mov	r6, r0
   163bc:	mov	r5, r1
   163c0:	mov	r4, #0
   163c4:	ldr	r7, [pc, #164]	; 16470 <codadump_filter_get_next_filter@@Base+0x124>
   163c8:	ldr	r8, [pc, #164]	; 16474 <codadump_filter_get_next_filter@@Base+0x128>
   163cc:	ldr	r9, [pc, #164]	; 16478 <codadump_filter_get_next_filter@@Base+0x12c>
   163d0:	cmp	r4, r5
   163d4:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   163d8:	ldrb	r1, [r6, r4]
   163dc:	cmp	r1, #12
   163e0:	beq	16430 <codadump_filter_get_next_filter@@Base+0xe4>
   163e4:	bhi	16410 <codadump_filter_get_next_filter@@Base+0xc4>
   163e8:	cmp	r1, #9
   163ec:	beq	16440 <codadump_filter_get_next_filter@@Base+0xf4>
   163f0:	cmp	r1, #10
   163f4:	beq	16438 <codadump_filter_get_next_filter@@Base+0xec>
   163f8:	cmp	r1, #8
   163fc:	bne	16458 <codadump_filter_get_next_filter@@Base+0x10c>
   16400:	ldr	r0, [pc, #116]	; 1647c <codadump_filter_get_next_filter@@Base+0x130>
   16404:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16408:	add	r4, r4, #1
   1640c:	b	163d0 <codadump_filter_get_next_filter@@Base+0x84>
   16410:	cmp	r1, #34	; 0x22
   16414:	beq	16448 <codadump_filter_get_next_filter@@Base+0xfc>
   16418:	cmp	r1, #92	; 0x5c
   1641c:	beq	16450 <codadump_filter_get_next_filter@@Base+0x104>
   16420:	cmp	r1, #13
   16424:	bne	16458 <codadump_filter_get_next_filter@@Base+0x10c>
   16428:	ldr	r0, [pc, #80]	; 16480 <codadump_filter_get_next_filter@@Base+0x134>
   1642c:	b	16404 <codadump_filter_get_next_filter@@Base+0xb8>
   16430:	mov	r0, r7
   16434:	b	16404 <codadump_filter_get_next_filter@@Base+0xb8>
   16438:	ldr	r0, [pc, #68]	; 16484 <codadump_filter_get_next_filter@@Base+0x138>
   1643c:	b	16404 <codadump_filter_get_next_filter@@Base+0xb8>
   16440:	ldr	r0, [pc, #64]	; 16488 <codadump_filter_get_next_filter@@Base+0x13c>
   16444:	b	16404 <codadump_filter_get_next_filter@@Base+0xb8>
   16448:	ldr	r0, [pc, #60]	; 1648c <codadump_filter_get_next_filter@@Base+0x140>
   1644c:	b	16404 <codadump_filter_get_next_filter@@Base+0xb8>
   16450:	ldr	r0, [pc, #56]	; 16490 <codadump_filter_get_next_filter@@Base+0x144>
   16454:	b	16404 <codadump_filter_get_next_filter@@Base+0xb8>
   16458:	sub	r3, r1, #32
   1645c:	cmp	r3, #94	; 0x5e
   16460:	movls	r0, r9
   16464:	movhi	r0, r8
   16468:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   1646c:	b	16408 <codadump_filter_get_next_filter@@Base+0xbc>
   16470:	andeq	r8, r1, pc, lsl #21
   16474:	andeq	r8, r1, r0, asr #29
   16478:	strdeq	r8, [r1], -ip
   1647c:	andeq	r8, r1, r3, lsl #21
   16480:	muleq	r1, r2, sl
   16484:	andeq	r8, r1, r9, lsl #21
   16488:	andeq	r8, r1, r6, lsl #21
   1648c:			; <UNDEFINED> instruction: 0x00018ebd
   16490:	muleq	r1, r5, sl
   16494:	push	{r4, r5, r6, r7, r8, lr}
   16498:	mov	r3, #0
   1649c:	sub	sp, sp, #72	; 0x48
   164a0:	mov	r4, r0
   164a4:	str	r3, [sp, #12]
   164a8:	ldr	r3, [pc, #1768]	; 16b98 <codadump_filter_get_next_filter@@Base+0x84c>
   164ac:	ldr	r3, [r3]
   164b0:	cmp	r3, #0
   164b4:	beq	1650c <codadump_filter_get_next_filter@@Base+0x1c0>
   164b8:	add	r1, sp, #12
   164bc:	bl	122e4 <coda_cursor_has_attributes@plt>
   164c0:	cmp	r0, #0
   164c4:	beq	164cc <codadump_filter_get_next_filter@@Base+0x180>
   164c8:	bl	18728 <handle_coda_error@@Base>
   164cc:	ldr	r3, [sp, #12]
   164d0:	cmp	r3, #0
   164d4:	beq	1650c <codadump_filter_get_next_filter@@Base+0x1c0>
   164d8:	ldr	r0, [pc, #1724]	; 16b9c <codadump_filter_get_next_filter@@Base+0x850>
   164dc:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   164e0:	mov	r0, r4
   164e4:	bl	12464 <coda_cursor_goto_attributes@plt>
   164e8:	cmp	r0, #0
   164ec:	beq	164f4 <codadump_filter_get_next_filter@@Base+0x1a8>
   164f0:	bl	18728 <handle_coda_error@@Base>
   164f4:	mov	r0, r4
   164f8:	bl	16494 <codadump_filter_get_next_filter@@Base+0x148>
   164fc:	mov	r0, r4
   16500:	bl	123c8 <coda_cursor_goto_parent@plt>
   16504:	ldr	r0, [pc, #1684]	; 16ba0 <codadump_filter_get_next_filter@@Base+0x854>
   16508:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   1650c:	add	r1, sp, #8
   16510:	mov	r0, r4
   16514:	bl	122f0 <coda_cursor_get_type_class@plt>
   16518:	cmp	r0, #0
   1651c:	beq	16524 <codadump_filter_get_next_filter@@Base+0x1d8>
   16520:	bl	18728 <handle_coda_error@@Base>
   16524:	ldr	r3, [sp, #8]
   16528:	cmp	r3, #6
   1652c:	ldrls	pc, [pc, r3, lsl #2]
   16530:	b	168f8 <codadump_filter_get_next_filter@@Base+0x5ac>
   16534:	andeq	r6, r1, r0, asr r5
   16538:	andeq	r6, r1, r4, lsl #14
   1653c:	andeq	r6, r1, r8, asr #15
   16540:	andeq	r6, r1, r8, asr #15
   16544:	andeq	r6, r1, r8, asr #15
   16548:	andeq	r6, r1, r8, asr #15
   1654c:	muleq	r1, ip, sl
   16550:	ldr	r0, [pc, #1612]	; 16ba4 <codadump_filter_get_next_filter@@Base+0x858>
   16554:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16558:	add	r1, sp, #16
   1655c:	mov	r0, r4
   16560:	bl	12248 <coda_cursor_get_num_elements@plt>
   16564:	cmp	r0, #0
   16568:	beq	16570 <codadump_filter_get_next_filter@@Base+0x224>
   1656c:	bl	18728 <handle_coda_error@@Base>
   16570:	ldr	r3, [sp, #16]
   16574:	cmp	r3, #0
   16578:	ble	16620 <codadump_filter_get_next_filter@@Base+0x2d4>
   1657c:	add	r1, sp, #20
   16580:	mov	r0, r4
   16584:	bl	122a8 <coda_cursor_get_type@plt>
   16588:	cmp	r0, #0
   1658c:	beq	16594 <codadump_filter_get_next_filter@@Base+0x248>
   16590:	bl	18728 <handle_coda_error@@Base>
   16594:	add	r1, sp, #24
   16598:	ldr	r0, [sp, #20]
   1659c:	bl	124ac <coda_type_get_record_union_status@plt>
   165a0:	cmp	r0, #0
   165a4:	beq	165ac <codadump_filter_get_next_filter@@Base+0x260>
   165a8:	bl	18728 <handle_coda_error@@Base>
   165ac:	ldr	r3, [sp, #24]
   165b0:	cmp	r3, #0
   165b4:	beq	1662c <codadump_filter_get_next_filter@@Base+0x2e0>
   165b8:	add	r1, sp, #28
   165bc:	mov	r0, r4
   165c0:	bl	125a8 <coda_cursor_get_available_union_field_index@plt>
   165c4:	cmp	r0, #0
   165c8:	beq	165d0 <codadump_filter_get_next_filter@@Base+0x284>
   165cc:	bl	18728 <handle_coda_error@@Base>
   165d0:	add	r2, sp, #40	; 0x28
   165d4:	ldr	r0, [sp, #20]
   165d8:	ldr	r1, [sp, #28]
   165dc:	bl	125f0 <coda_type_get_record_field_name@plt>
   165e0:	cmp	r0, #0
   165e4:	beq	165ec <codadump_filter_get_next_filter@@Base+0x2a0>
   165e8:	bl	18728 <handle_coda_error@@Base>
   165ec:	mov	r0, r4
   165f0:	ldr	r1, [sp, #28]
   165f4:	bl	12368 <coda_cursor_goto_record_field_by_index@plt>
   165f8:	cmp	r0, #0
   165fc:	beq	16604 <codadump_filter_get_next_filter@@Base+0x2b8>
   16600:	bl	18728 <handle_coda_error@@Base>
   16604:	ldr	r0, [pc, #1436]	; 16ba8 <codadump_filter_get_next_filter@@Base+0x85c>
   16608:	ldr	r1, [sp, #40]	; 0x28
   1660c:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16610:	mov	r0, r4
   16614:	bl	16494 <codadump_filter_get_next_filter@@Base+0x148>
   16618:	mov	r0, r4
   1661c:	bl	123c8 <coda_cursor_goto_parent@plt>
   16620:	ldr	r0, [pc, #1412]	; 16bac <codadump_filter_get_next_filter@@Base+0x860>
   16624:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16628:	b	168f8 <codadump_filter_get_next_filter@@Base+0x5ac>
   1662c:	mov	r0, r4
   16630:	bl	1235c <coda_cursor_goto_first_record_field@plt>
   16634:	cmp	r0, #0
   16638:	beq	16640 <codadump_filter_get_next_filter@@Base+0x2f4>
   1663c:	bl	18728 <handle_coda_error@@Base>
   16640:	ldr	r6, [pc, #1376]	; 16ba8 <codadump_filter_get_next_filter@@Base+0x85c>
   16644:	mov	r3, #0
   16648:	mov	r5, #1
   1664c:	ldr	r7, [pc, #1372]	; 16bb0 <codadump_filter_get_next_filter@@Base+0x864>
   16650:	str	r3, [sp, #28]
   16654:	ldr	r3, [sp, #16]
   16658:	ldr	r1, [sp, #28]
   1665c:	cmp	r1, r3
   16660:	bge	16618 <codadump_filter_get_next_filter@@Base+0x2cc>
   16664:	add	r2, sp, #40	; 0x28
   16668:	ldr	r0, [sp, #20]
   1666c:	bl	121e8 <coda_type_get_record_field_hidden_status@plt>
   16670:	cmp	r0, #0
   16674:	beq	1667c <codadump_filter_get_next_filter@@Base+0x330>
   16678:	bl	18728 <handle_coda_error@@Base>
   1667c:	ldr	r3, [sp, #40]	; 0x28
   16680:	cmp	r3, #0
   16684:	bne	166cc <codadump_filter_get_next_filter@@Base+0x380>
   16688:	cmp	r5, #0
   1668c:	bne	16698 <codadump_filter_get_next_filter@@Base+0x34c>
   16690:	mov	r0, r7
   16694:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16698:	add	r2, sp, #32
   1669c:	ldr	r0, [sp, #20]
   166a0:	ldr	r1, [sp, #28]
   166a4:	bl	125f0 <coda_type_get_record_field_name@plt>
   166a8:	cmp	r0, #0
   166ac:	beq	166b4 <codadump_filter_get_next_filter@@Base+0x368>
   166b0:	bl	18728 <handle_coda_error@@Base>
   166b4:	mov	r0, r6
   166b8:	ldr	r1, [sp, #32]
   166bc:	mov	r5, #0
   166c0:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   166c4:	mov	r0, r4
   166c8:	bl	16494 <codadump_filter_get_next_filter@@Base+0x148>
   166cc:	ldr	r3, [sp, #16]
   166d0:	ldr	r2, [sp, #28]
   166d4:	sub	r3, r3, #1
   166d8:	cmp	r3, r2
   166dc:	ble	166f4 <codadump_filter_get_next_filter@@Base+0x3a8>
   166e0:	mov	r0, r4
   166e4:	bl	12554 <coda_cursor_goto_next_record_field@plt>
   166e8:	cmp	r0, #0
   166ec:	beq	166f4 <codadump_filter_get_next_filter@@Base+0x3a8>
   166f0:	bl	18728 <handle_coda_error@@Base>
   166f4:	ldr	r3, [sp, #28]
   166f8:	add	r3, r3, #1
   166fc:	str	r3, [sp, #28]
   16700:	b	16654 <codadump_filter_get_next_filter@@Base+0x308>
   16704:	ldr	r0, [pc, #1192]	; 16bb4 <codadump_filter_get_next_filter@@Base+0x868>
   16708:	add	r6, sp, #40	; 0x28
   1670c:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16710:	mov	r2, r6
   16714:	add	r1, sp, #32
   16718:	mov	r0, r4
   1671c:	bl	124f4 <coda_cursor_get_array_dim@plt>
   16720:	cmp	r0, #0
   16724:	beq	1672c <codadump_filter_get_next_filter@@Base+0x3e0>
   16728:	bl	18728 <handle_coda_error@@Base>
   1672c:	ldr	r2, [sp, #32]
   16730:	cmp	r2, #0
   16734:	movge	r3, #0
   16738:	movge	r5, #1
   1673c:	bge	16754 <codadump_filter_get_next_filter@@Base+0x408>
   16740:	ldr	r0, [pc, #1136]	; 16bb8 <codadump_filter_get_next_filter@@Base+0x86c>
   16744:	b	16624 <codadump_filter_get_next_filter@@Base+0x2d8>
   16748:	ldr	r1, [r6, r3, lsl #2]
   1674c:	add	r3, r3, #1
   16750:	mul	r5, r1, r5
   16754:	cmp	r2, r3
   16758:	bne	16748 <codadump_filter_get_next_filter@@Base+0x3fc>
   1675c:	cmp	r5, #0
   16760:	ble	16740 <codadump_filter_get_next_filter@@Base+0x3f4>
   16764:	mov	r0, r4
   16768:	bl	12338 <coda_cursor_goto_first_array_element@plt>
   1676c:	cmp	r0, #0
   16770:	beq	16778 <codadump_filter_get_next_filter@@Base+0x42c>
   16774:	bl	18728 <handle_coda_error@@Base>
   16778:	ldr	r8, [pc, #1072]	; 16bb0 <codadump_filter_get_next_filter@@Base+0x864>
   1677c:	mov	r6, #0
   16780:	sub	r7, r5, #1
   16784:	mov	r0, r4
   16788:	bl	16494 <codadump_filter_get_next_filter@@Base+0x148>
   1678c:	cmp	r7, r6
   16790:	ble	167b0 <codadump_filter_get_next_filter@@Base+0x464>
   16794:	mov	r0, r8
   16798:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   1679c:	mov	r0, r4
   167a0:	bl	12434 <coda_cursor_goto_next_array_element@plt>
   167a4:	cmp	r0, #0
   167a8:	beq	167b0 <codadump_filter_get_next_filter@@Base+0x464>
   167ac:	bl	18728 <handle_coda_error@@Base>
   167b0:	add	r6, r6, #1
   167b4:	cmp	r5, r6
   167b8:	bne	16784 <codadump_filter_get_next_filter@@Base+0x438>
   167bc:	mov	r0, r4
   167c0:	bl	123c8 <coda_cursor_goto_parent@plt>
   167c4:	b	16740 <codadump_filter_get_next_filter@@Base+0x3f4>
   167c8:	add	r1, sp, #28
   167cc:	mov	r0, r4
   167d0:	bl	1238c <coda_cursor_get_read_type@plt>
   167d4:	cmp	r0, #0
   167d8:	beq	167e0 <codadump_filter_get_next_filter@@Base+0x494>
   167dc:	bl	18728 <handle_coda_error@@Base>
   167e0:	ldr	r3, [sp, #28]
   167e4:	add	r3, r3, #1
   167e8:	cmp	r3, #13
   167ec:	ldrls	pc, [pc, r3, lsl #2]
   167f0:	b	168f8 <codadump_filter_get_next_filter@@Base+0x5ac>
   167f4:	ldrdeq	r6, [r1], -r4
   167f8:	andeq	r6, r1, r0, asr #19
   167fc:	andeq	r6, r1, r8, ror #19
   16800:	andeq	r6, r1, r0, asr #19
   16804:	andeq	r6, r1, r8, ror #19
   16808:	andeq	r6, r1, r0, asr #19
   1680c:	andeq	r6, r1, r8, ror #19
   16810:	andeq	r6, r1, ip, lsl #20
   16814:	andeq	r6, r1, ip, lsr sl
   16818:	andeq	r6, r1, r4, ror #20
   1681c:	andeq	r6, r1, r4, ror #20
   16820:	andeq	r6, r1, ip, lsr #16
   16824:	andeq	r6, r1, r0, ror #16
   16828:	andeq	r6, r1, r4, lsl r9
   1682c:	add	r1, sp, #40	; 0x28
   16830:	mov	r0, r4
   16834:	bl	12470 <coda_cursor_read_char@plt>
   16838:	cmp	r0, #0
   1683c:	beq	16844 <codadump_filter_get_next_filter@@Base+0x4f8>
   16840:	bl	18728 <handle_coda_error@@Base>
   16844:	ldr	r0, [pc, #880]	; 16bbc <codadump_filter_get_next_filter@@Base+0x870>
   16848:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   1684c:	add	r0, sp, #40	; 0x28
   16850:	mov	r1, #1
   16854:	bl	163b4 <codadump_filter_get_next_filter@@Base+0x68>
   16858:	ldr	r0, [pc, #860]	; 16bbc <codadump_filter_get_next_filter@@Base+0x870>
   1685c:	b	16624 <codadump_filter_get_next_filter@@Base+0x2d8>
   16860:	add	r1, sp, #40	; 0x28
   16864:	mov	r0, r4
   16868:	bl	123f8 <coda_cursor_get_string_length@plt>
   1686c:	cmp	r0, #0
   16870:	beq	16878 <codadump_filter_get_next_filter@@Base+0x52c>
   16874:	bl	18728 <handle_coda_error@@Base>
   16878:	ldr	r0, [sp, #40]	; 0x28
   1687c:	add	r0, r0, #1
   16880:	bl	12398 <malloc@plt>
   16884:	subs	r5, r0, #0
   16888:	bne	168b0 <codadump_filter_get_next_filter@@Base+0x564>
   1688c:	ldr	r2, [sp, #40]	; 0x28
   16890:	movw	r3, #303	; 0x12f
   16894:	mvn	r0, #0
   16898:	ldr	r1, [pc, #800]	; 16bc0 <codadump_filter_get_next_filter@@Base+0x874>
   1689c:	str	r3, [sp]
   168a0:	ldr	r3, [pc, #796]	; 16bc4 <codadump_filter_get_next_filter@@Base+0x878>
   168a4:	add	r2, r2, #1
   168a8:	bl	12218 <coda_set_error@plt>
   168ac:	bl	18728 <handle_coda_error@@Base>
   168b0:	ldr	r2, [sp, #40]	; 0x28
   168b4:	mov	r1, r5
   168b8:	mov	r0, r4
   168bc:	add	r2, r2, #1
   168c0:	bl	123bc <coda_cursor_read_string@plt>
   168c4:	cmp	r0, #0
   168c8:	beq	168d0 <codadump_filter_get_next_filter@@Base+0x584>
   168cc:	bl	18728 <handle_coda_error@@Base>
   168d0:	ldr	r0, [pc, #740]	; 16bbc <codadump_filter_get_next_filter@@Base+0x870>
   168d4:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   168d8:	mov	r0, r5
   168dc:	ldr	r1, [sp, #40]	; 0x28
   168e0:	bl	163b4 <codadump_filter_get_next_filter@@Base+0x68>
   168e4:	ldr	r0, [pc, #720]	; 16bbc <codadump_filter_get_next_filter@@Base+0x870>
   168e8:	ldr	r1, [sp, #40]	; 0x28
   168ec:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   168f0:	mov	r0, r5
   168f4:	bl	12260 <free@plt>
   168f8:	ldr	r3, [sp, #12]
   168fc:	cmp	r3, #0
   16900:	beq	1690c <codadump_filter_get_next_filter@@Base+0x5c0>
   16904:	ldr	r0, [pc, #672]	; 16bac <codadump_filter_get_next_filter@@Base+0x860>
   16908:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   1690c:	add	sp, sp, #72	; 0x48
   16910:	pop	{r4, r5, r6, r7, r8, pc}
   16914:	add	r1, sp, #40	; 0x28
   16918:	mov	r0, r4
   1691c:	bl	12578 <coda_cursor_get_bit_size@plt>
   16920:	cmp	r0, #0
   16924:	beq	1692c <codadump_filter_get_next_filter@@Base+0x5e0>
   16928:	bl	18728 <handle_coda_error@@Base>
   1692c:	ldr	r0, [sp, #40]	; 0x28
   16930:	ldr	ip, [sp, #44]	; 0x2c
   16934:	lsr	r2, r0, #3
   16938:	ands	r1, r0, #7
   1693c:	movne	r1, #1
   16940:	orr	r2, r2, ip, lsl #29
   16944:	adds	r6, r2, r1
   16948:	mov	r0, r6
   1694c:	bl	12398 <malloc@plt>
   16950:	subs	r5, r0, #0
   16954:	bne	16978 <codadump_filter_get_next_filter@@Base+0x62c>
   16958:	movw	r3, #334	; 0x14e
   1695c:	mov	r2, r6
   16960:	ldr	r1, [pc, #600]	; 16bc0 <codadump_filter_get_next_filter@@Base+0x874>
   16964:	mvn	r0, #0
   16968:	str	r3, [sp]
   1696c:	ldr	r3, [pc, #592]	; 16bc4 <codadump_filter_get_next_filter@@Base+0x878>
   16970:	bl	12218 <coda_set_error@plt>
   16974:	bl	18728 <handle_coda_error@@Base>
   16978:	ldrd	r2, [sp, #40]	; 0x28
   1697c:	mov	r1, r5
   16980:	mov	r0, r4
   16984:	strd	r2, [sp]
   16988:	mov	r2, #0
   1698c:	mov	r3, #0
   16990:	bl	12614 <coda_cursor_read_bits@plt>
   16994:	cmp	r0, #0
   16998:	beq	169a0 <codadump_filter_get_next_filter@@Base+0x654>
   1699c:	bl	18728 <handle_coda_error@@Base>
   169a0:	ldr	r0, [pc, #532]	; 16bbc <codadump_filter_get_next_filter@@Base+0x870>
   169a4:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   169a8:	mov	r0, r5
   169ac:	mov	r1, r6
   169b0:	bl	163b4 <codadump_filter_get_next_filter@@Base+0x68>
   169b4:	ldr	r0, [pc, #512]	; 16bbc <codadump_filter_get_next_filter@@Base+0x870>
   169b8:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   169bc:	b	168f0 <codadump_filter_get_next_filter@@Base+0x5a4>
   169c0:	add	r1, sp, #40	; 0x28
   169c4:	mov	r0, r4
   169c8:	bl	125b4 <coda_cursor_read_int32@plt>
   169cc:	cmp	r0, #0
   169d0:	beq	169d8 <codadump_filter_get_next_filter@@Base+0x68c>
   169d4:	bl	18728 <handle_coda_error@@Base>
   169d8:	ldr	r0, [pc, #488]	; 16bc8 <codadump_filter_get_next_filter@@Base+0x87c>
   169dc:	ldr	r1, [sp, #40]	; 0x28
   169e0:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   169e4:	b	168f8 <codadump_filter_get_next_filter@@Base+0x5ac>
   169e8:	add	r1, sp, #40	; 0x28
   169ec:	mov	r0, r4
   169f0:	bl	12284 <coda_cursor_read_uint32@plt>
   169f4:	cmp	r0, #0
   169f8:	beq	16a00 <codadump_filter_get_next_filter@@Base+0x6b4>
   169fc:	bl	18728 <handle_coda_error@@Base>
   16a00:	ldr	r0, [pc, #452]	; 16bcc <codadump_filter_get_next_filter@@Base+0x880>
   16a04:	ldr	r1, [sp, #40]	; 0x28
   16a08:	b	169e0 <codadump_filter_get_next_filter@@Base+0x694>
   16a0c:	add	r1, sp, #32
   16a10:	mov	r0, r4
   16a14:	bl	12518 <coda_cursor_read_int64@plt>
   16a18:	cmp	r0, #0
   16a1c:	beq	16a24 <codadump_filter_get_next_filter@@Base+0x6d8>
   16a20:	bl	18728 <handle_coda_error@@Base>
   16a24:	add	r2, sp, #40	; 0x28
   16a28:	ldrd	r0, [sp, #32]
   16a2c:	bl	12620 <coda_str64@plt>
   16a30:	add	r1, sp, #40	; 0x28
   16a34:	ldr	r0, [pc, #404]	; 16bd0 <codadump_filter_get_next_filter@@Base+0x884>
   16a38:	b	169e0 <codadump_filter_get_next_filter@@Base+0x694>
   16a3c:	add	r1, sp, #32
   16a40:	mov	r0, r4
   16a44:	bl	12404 <coda_cursor_read_uint64@plt>
   16a48:	cmp	r0, #0
   16a4c:	beq	16a54 <codadump_filter_get_next_filter@@Base+0x708>
   16a50:	bl	18728 <handle_coda_error@@Base>
   16a54:	add	r2, sp, #40	; 0x28
   16a58:	ldrd	r0, [sp, #32]
   16a5c:	bl	12254 <coda_str64u@plt>
   16a60:	b	16a30 <codadump_filter_get_next_filter@@Base+0x6e4>
   16a64:	add	r1, sp, #40	; 0x28
   16a68:	mov	r0, r4
   16a6c:	bl	12410 <coda_cursor_read_double@plt>
   16a70:	cmp	r0, #0
   16a74:	beq	16a7c <codadump_filter_get_next_filter@@Base+0x730>
   16a78:	bl	18728 <handle_coda_error@@Base>
   16a7c:	ldr	r1, [sp, #28]
   16a80:	ldrd	r2, [sp, #40]	; 0x28
   16a84:	cmp	r1, #8
   16a88:	ldreq	r0, [pc, #324]	; 16bd4 <codadump_filter_get_next_filter@@Base+0x888>
   16a8c:	beq	16a94 <codadump_filter_get_next_filter@@Base+0x748>
   16a90:	ldr	r0, [pc, #320]	; 16bd8 <codadump_filter_get_next_filter@@Base+0x88c>
   16a94:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16a98:	b	168f8 <codadump_filter_get_next_filter@@Base+0x5ac>
   16a9c:	add	r1, sp, #28
   16aa0:	mov	r0, r4
   16aa4:	bl	1232c <coda_cursor_get_special_type@plt>
   16aa8:	cmp	r0, #0
   16aac:	beq	16ab4 <codadump_filter_get_next_filter@@Base+0x768>
   16ab0:	bl	18728 <handle_coda_error@@Base>
   16ab4:	ldr	r3, [sp, #28]
   16ab8:	cmp	r3, #3
   16abc:	ldrls	pc, [pc, r3, lsl #2]
   16ac0:	b	168f8 <codadump_filter_get_next_filter@@Base+0x5ac>
   16ac4:	ldrdeq	r6, [r1], -r4
   16ac8:	ldrdeq	r6, [r1], -ip
   16acc:	strdeq	r6, [r1], -ip
   16ad0:	andeq	r6, r1, r4, ror #22
   16ad4:	ldr	r0, [pc, #256]	; 16bdc <codadump_filter_get_next_filter@@Base+0x890>
   16ad8:	b	16624 <codadump_filter_get_next_filter@@Base+0x2d8>
   16adc:	add	r1, sp, #40	; 0x28
   16ae0:	mov	r0, r4
   16ae4:	bl	12410 <coda_cursor_read_double@plt>
   16ae8:	cmp	r0, #0
   16aec:	beq	16af4 <codadump_filter_get_next_filter@@Base+0x7a8>
   16af0:	bl	18728 <handle_coda_error@@Base>
   16af4:	ldrd	r2, [sp, #40]	; 0x28
   16af8:	b	16a90 <codadump_filter_get_next_filter@@Base+0x744>
   16afc:	add	r1, sp, #32
   16b00:	mov	r0, r4
   16b04:	bl	12410 <coda_cursor_read_double@plt>
   16b08:	cmp	r0, #0
   16b0c:	beq	16b14 <codadump_filter_get_next_filter@@Base+0x7c8>
   16b10:	bl	18728 <handle_coda_error@@Base>
   16b14:	vldr	d0, [sp, #32]
   16b18:	bl	1241c <coda_isNaN@plt>
   16b1c:	cmp	r0, #0
   16b20:	beq	16b2c <codadump_filter_get_next_filter@@Base+0x7e0>
   16b24:	ldrd	r2, [sp, #32]
   16b28:	b	16a90 <codadump_filter_get_next_filter@@Base+0x744>
   16b2c:	vldr	d0, [sp, #32]
   16b30:	bl	122c0 <coda_isInf@plt>
   16b34:	cmp	r0, #0
   16b38:	bne	16b24 <codadump_filter_get_next_filter@@Base+0x7d8>
   16b3c:	add	r1, sp, #40	; 0x28
   16b40:	ldr	r0, [pc, #152]	; 16be0 <codadump_filter_get_next_filter@@Base+0x894>
   16b44:	vldr	d0, [sp, #32]
   16b48:	bl	1223c <coda_time_double_to_string@plt>
   16b4c:	cmp	r0, #0
   16b50:	ldrne	r0, [pc, #140]	; 16be4 <codadump_filter_get_next_filter@@Base+0x898>
   16b54:	bne	16624 <codadump_filter_get_next_filter@@Base+0x2d8>
   16b58:	add	r1, sp, #40	; 0x28
   16b5c:	ldr	r0, [pc, #132]	; 16be8 <codadump_filter_get_next_filter@@Base+0x89c>
   16b60:	b	169e0 <codadump_filter_get_next_filter@@Base+0x694>
   16b64:	add	r2, sp, #40	; 0x28
   16b68:	add	r1, sp, #32
   16b6c:	mov	r0, r4
   16b70:	bl	124b8 <coda_cursor_read_complex_double_split@plt>
   16b74:	cmp	r0, #0
   16b78:	beq	16b80 <codadump_filter_get_next_filter@@Base+0x834>
   16b7c:	bl	18728 <handle_coda_error@@Base>
   16b80:	ldrd	r2, [sp, #40]	; 0x28
   16b84:	ldr	r0, [pc, #96]	; 16bec <codadump_filter_get_next_filter@@Base+0x8a0>
   16b88:	strd	r2, [sp]
   16b8c:	ldrd	r2, [sp, #32]
   16b90:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16b94:	b	168f8 <codadump_filter_get_next_filter@@Base+0x5ac>
   16b98:	andeq	fp, r2, r8, asr #3
   16b9c:	andeq	r8, r1, r7, asr #29
   16ba0:	ldrdeq	r8, [r1], -r0
   16ba4:	ldrdeq	r8, [r1], -r9
   16ba8:	ldrdeq	r8, [r1], -fp
   16bac:	andeq	r8, r1, r1, ror #29
   16bb0:	andeq	r8, r1, r2, lsr sp
   16bb4:	andeq	r8, r1, r4, lsr #31
   16bb8:	andeq	r9, r1, r9, lsl r0
   16bbc:			; <UNDEFINED> instruction: 0x00018ebe
   16bc0:	andeq	r8, r1, fp, asr #20
   16bc4:	andeq	r8, r1, r3, ror #29
   16bc8:	muleq	r1, fp, pc	; <UNPREDICTABLE>
   16bcc:	muleq	r1, lr, sl
   16bd0:	andeq	r8, r1, r7, lsr #31
   16bd4:	andeq	r8, r1, r2, lsr #21
   16bd8:	andeq	r8, r1, r7, lsr #21
   16bdc:	andeq	r8, r1, sp, lsr #30
   16be0:	andeq	r8, r1, r2, lsr pc
   16be4:	andeq	r8, r1, pc, asr #30
   16be8:	andeq	r9, r1, ip, lsl r0
   16bec:	andeq	r8, r1, sl, ror #30

00016bf0 <print_json_data@@Base>:
   16bf0:	push	{r4, lr}
   16bf4:	sub	sp, sp, #528	; 0x210
   16bf8:	add	r1, sp, #4
   16bfc:	ldr	r3, [pc, #184]	; 16cbc <print_json_data@@Base+0xcc>
   16c00:	ldr	r4, [pc, #184]	; 16cc0 <print_json_data@@Base+0xd0>
   16c04:	str	r0, [r3]
   16c08:	ldr	r0, [r4]
   16c0c:	bl	12224 <coda_open@plt>
   16c10:	cmp	r0, #0
   16c14:	beq	16c2c <print_json_data@@Base+0x3c>
   16c18:	bl	125d8 <coda_get_errno@plt>
   16c1c:	ldr	r3, [r0]
   16c20:	cmn	r3, #21
   16c24:	beq	16c90 <print_json_data@@Base+0xa0>
   16c28:	bl	18728 <handle_coda_error@@Base>
   16c2c:	add	r0, sp, #8
   16c30:	ldr	r1, [sp, #4]
   16c34:	bl	12344 <coda_cursor_set_product@plt>
   16c38:	cmp	r0, #0
   16c3c:	beq	16c44 <print_json_data@@Base+0x54>
   16c40:	bl	18728 <handle_coda_error@@Base>
   16c44:	ldr	r3, [pc, #120]	; 16cc4 <print_json_data@@Base+0xd4>
   16c48:	ldr	r1, [r3]
   16c4c:	cmp	r1, #0
   16c50:	beq	16c68 <print_json_data@@Base+0x78>
   16c54:	add	r0, sp, #8
   16c58:	bl	12530 <coda_cursor_goto@plt>
   16c5c:	cmp	r0, #0
   16c60:	beq	16c68 <print_json_data@@Base+0x78>
   16c64:	bl	18728 <handle_coda_error@@Base>
   16c68:	mov	r0, #0
   16c6c:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   16c70:	add	r0, sp, #8
   16c74:	bl	16494 <codadump_filter_get_next_filter@@Base+0x148>
   16c78:	ldr	r0, [pc, #72]	; 16cc8 <print_json_data@@Base+0xd8>
   16c7c:	bl	16380 <codadump_filter_get_next_filter@@Base+0x34>
   16c80:	ldr	r0, [sp, #4]
   16c84:	bl	1250c <coda_close@plt>
   16c88:	add	sp, sp, #528	; 0x210
   16c8c:	pop	{r4, pc}
   16c90:	mov	r0, #0
   16c94:	bl	1226c <coda_set_option_use_mmap@plt>
   16c98:	add	r1, sp, #4
   16c9c:	ldr	r0, [r4]
   16ca0:	bl	12224 <coda_open@plt>
   16ca4:	mov	r4, r0
   16ca8:	mov	r0, #1
   16cac:	bl	1226c <coda_set_option_use_mmap@plt>
   16cb0:	cmp	r4, #0
   16cb4:	bne	16c28 <print_json_data@@Base+0x38>
   16cb8:	b	16c2c <print_json_data@@Base+0x3c>
   16cbc:	andeq	fp, r2, r8, asr #3
   16cc0:	strdeq	fp, [r2], -r0
   16cc4:	strheq	ip, [r2], -r0
   16cc8:	andeq	sl, r1, r5, lsr r1
   16ccc:	push	{r4, r5, r6, r7, r8, lr}
   16cd0:	mov	r5, #80	; 0x50
   16cd4:	mov	r6, r0
   16cd8:	mov	r4, #0
   16cdc:	mul	r1, r5, r1
   16ce0:	ldr	r5, [pc, #168]	; 16d90 <print_json_data@@Base+0x1a0>
   16ce4:	ldr	r8, [pc, #168]	; 16d94 <print_json_data@@Base+0x1a4>
   16ce8:	add	r7, r1, #808	; 0x328
   16cec:	add	r7, r7, r5
   16cf0:	add	r5, r5, r1
   16cf4:	ldr	r3, [r5, #804]	; 0x324
   16cf8:	cmp	r3, r4
   16cfc:	pople	{r4, r5, r6, r7, r8, pc}
   16d00:	cmp	r4, #0
   16d04:	ble	16d14 <print_json_data@@Base+0x124>
   16d08:	mov	r1, r6
   16d0c:	mov	r0, #44	; 0x2c
   16d10:	bl	12560 <fputc@plt>
   16d14:	ldr	r3, [r8]
   16d18:	cmp	r3, #0
   16d1c:	beq	16d74 <print_json_data@@Base+0x184>
   16d20:	ldr	r1, [r5, #800]	; 0x320
   16d24:	add	r0, r4, r1
   16d28:	ldr	r1, [pc, #104]	; 16d98 <print_json_data@@Base+0x1a8>
   16d2c:	add	r2, r0, #18
   16d30:	ldr	r2, [r1, r2, lsl #2]
   16d34:	add	r3, r1, r0, lsl #2
   16d38:	ldr	r3, [r3, #4]
   16d3c:	cmp	r2, #0
   16d40:	beq	16d60 <print_json_data@@Base+0x170>
   16d44:	add	r1, r1, r0, lsl #2
   16d48:	mov	r0, r6
   16d4c:	ldr	r2, [r1, #36]	; 0x24
   16d50:	ldr	r1, [pc, #68]	; 16d9c <print_json_data@@Base+0x1ac>
   16d54:	bl	12428 <fprintf@plt>
   16d58:	add	r4, r4, #1
   16d5c:	b	16cf4 <print_json_data@@Base+0x104>
   16d60:	mov	r2, r3
   16d64:	ldr	r1, [pc, #52]	; 16da0 <print_json_data@@Base+0x1b0>
   16d68:	mov	r0, r6
   16d6c:	bl	12428 <fprintf@plt>
   16d70:	b	16d58 <print_json_data@@Base+0x168>
   16d74:	ldr	r2, [r7, r4, lsl #2]
   16d78:	cmn	r2, #1
   16d7c:	bne	16d64 <print_json_data@@Base+0x174>
   16d80:	mov	r1, r6
   16d84:	mov	r0, #63	; 0x3f
   16d88:	bl	12560 <fputc@plt>
   16d8c:	b	16d58 <print_json_data@@Base+0x168>
   16d90:	strdeq	fp, [r2], -r0
   16d94:	andeq	fp, r2, ip, ror #3
   16d98:	strheq	ip, [r2], -r8
   16d9c:	muleq	r1, r7, pc	; <UNPREDICTABLE>
   16da0:	muleq	r1, fp, pc	; <UNPREDICTABLE>

00016da4 <print_full_field_name@@Base>:
   16da4:	cmp	r1, #1
   16da8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16dac:	mov	r4, r0
   16db0:	mov	r9, r2
   16db4:	ldr	r5, [pc, #548]	; 16fe0 <print_full_field_name@@Base+0x23c>
   16db8:	beq	16e4c <print_full_field_name@@Base+0xa8>
   16dbc:	mov	r7, r1
   16dc0:	mov	r6, #0
   16dc4:	ldr	r8, [pc, #536]	; 16fe4 <print_full_field_name@@Base+0x240>
   16dc8:	ldr	r3, [r5, #3748]	; 0xea4
   16dcc:	cmp	r3, r6
   16dd0:	bgt	16f30 <print_full_field_name@@Base+0x18c>
   16dd4:	cmp	r7, #2
   16dd8:	bne	16e88 <print_full_field_name@@Base+0xe4>
   16ddc:	ldr	r8, [pc, #516]	; 16fe8 <print_full_field_name@@Base+0x244>
   16de0:	mov	r6, #0
   16de4:	mov	sl, #80	; 0x50
   16de8:	mov	r7, r6
   16dec:	ldr	fp, [pc, #504]	; 16fec <print_full_field_name@@Base+0x248>
   16df0:	ldr	r3, [r5, #136]	; 0x88
   16df4:	cmp	r3, r7
   16df8:	bgt	16f58 <print_full_field_name@@Base+0x1b4>
   16dfc:	cmp	r9, #0
   16e00:	beq	16fd4 <print_full_field_name@@Base+0x230>
   16e04:	ldr	r3, [r5, #3360]	; 0xd20
   16e08:	cmp	r3, r6
   16e0c:	ble	16fd4 <print_full_field_name@@Base+0x230>
   16e10:	mov	r3, #80	; 0x50
   16e14:	mov	r1, r4
   16e18:	mla	r5, r3, r6, r5
   16e1c:	ldr	r3, [r5, #800]	; 0x320
   16e20:	cmp	r3, #0
   16e24:	bne	16fc8 <print_full_field_name@@Base+0x224>
   16e28:	ldr	r0, [pc, #444]	; 16fec <print_full_field_name@@Base+0x248>
   16e2c:	bl	125fc <fputs@plt>
   16e30:	mov	r1, r6
   16e34:	mov	r0, r4
   16e38:	bl	16ccc <print_json_data@@Base+0xdc>
   16e3c:	mov	r1, r4
   16e40:	mov	r0, #93	; 0x5d
   16e44:	bl	12560 <fputc@plt>
   16e48:	b	16e88 <print_full_field_name@@Base+0xe4>
   16e4c:	mov	r6, #0
   16e50:	add	sl, r5, #8
   16e54:	mov	r8, r6
   16e58:	mov	r7, r6
   16e5c:	mov	fp, #80	; 0x50
   16e60:	ldr	r3, [r5, #136]	; 0x88
   16e64:	cmp	r3, r7
   16e68:	bgt	16e90 <print_full_field_name@@Base+0xec>
   16e6c:	cmp	r9, #0
   16e70:	beq	16e88 <print_full_field_name@@Base+0xe4>
   16e74:	ldr	r3, [r5, #3360]	; 0xd20
   16e78:	cmp	r3, r6
   16e7c:	movgt	r1, r4
   16e80:	movgt	r0, #91	; 0x5b
   16e84:	bgt	16fcc <print_full_field_name@@Base+0x228>
   16e88:	add	sp, sp, #12
   16e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e90:	add	r1, sp, #4
   16e94:	ldr	r0, [sl], #4
   16e98:	bl	12638 <coda_type_get_class@plt>
   16e9c:	cmp	r0, #0
   16ea0:	beq	16ea8 <print_full_field_name@@Base+0x104>
   16ea4:	bl	18728 <handle_coda_error@@Base>
   16ea8:	ldr	r3, [sp, #4]
   16eac:	cmp	r3, #0
   16eb0:	beq	16ec4 <print_full_field_name@@Base+0x120>
   16eb4:	cmp	r3, #1
   16eb8:	beq	16ee0 <print_full_field_name@@Base+0x13c>
   16ebc:	add	r7, r7, #1
   16ec0:	b	16e60 <print_full_field_name@@Base+0xbc>
   16ec4:	add	r3, r5, r8, lsl #2
   16ec8:	ldr	r1, [pc, #288]	; 16ff0 <print_full_field_name@@Base+0x24c>
   16ecc:	mov	r0, r4
   16ed0:	add	r8, r8, #1
   16ed4:	ldr	r2, [r3, #3620]	; 0xe24
   16ed8:	bl	12428 <fprintf@plt>
   16edc:	b	16ebc <print_full_field_name@@Base+0x118>
   16ee0:	cmp	r7, #0
   16ee4:	bne	16ef4 <print_full_field_name@@Base+0x150>
   16ee8:	mov	r1, r4
   16eec:	mov	r0, #47	; 0x2f
   16ef0:	bl	12560 <fputc@plt>
   16ef4:	mla	r3, fp, r6, r5
   16ef8:	ldr	r3, [r3, #804]	; 0x324
   16efc:	cmp	r3, #0
   16f00:	ble	16f28 <print_full_field_name@@Base+0x184>
   16f04:	mov	r1, r4
   16f08:	mov	r0, #91	; 0x5b
   16f0c:	bl	12560 <fputc@plt>
   16f10:	mov	r1, r6
   16f14:	mov	r0, r4
   16f18:	bl	16ccc <print_json_data@@Base+0xdc>
   16f1c:	mov	r1, r4
   16f20:	mov	r0, #93	; 0x5d
   16f24:	bl	12560 <fputc@plt>
   16f28:	add	r6, r6, #1
   16f2c:	b	16ebc <print_full_field_name@@Base+0x118>
   16f30:	cmp	r6, #0
   16f34:	ble	16f44 <print_full_field_name@@Base+0x1a0>
   16f38:	mov	r1, r4
   16f3c:	mov	r0, #46	; 0x2e
   16f40:	bl	12560 <fputc@plt>
   16f44:	mov	r1, r4
   16f48:	ldr	r0, [r8], #4
   16f4c:	add	r6, r6, #1
   16f50:	bl	125fc <fputs@plt>
   16f54:	b	16dc8 <print_full_field_name@@Base+0x24>
   16f58:	add	r1, sp, #4
   16f5c:	ldr	r0, [r8], #4
   16f60:	bl	12638 <coda_type_get_class@plt>
   16f64:	cmp	r0, #0
   16f68:	beq	16f70 <print_full_field_name@@Base+0x1cc>
   16f6c:	bl	18728 <handle_coda_error@@Base>
   16f70:	ldr	r3, [sp, #4]
   16f74:	cmp	r3, #1
   16f78:	bne	16fb4 <print_full_field_name@@Base+0x210>
   16f7c:	mla	r3, sl, r6, r5
   16f80:	ldr	r2, [r3, #804]	; 0x324
   16f84:	cmp	r2, #0
   16f88:	ble	16fb4 <print_full_field_name@@Base+0x210>
   16f8c:	ldr	r3, [r3, #800]	; 0x320
   16f90:	mov	r1, r4
   16f94:	cmp	r3, #0
   16f98:	bne	16fbc <print_full_field_name@@Base+0x218>
   16f9c:	mov	r0, fp
   16fa0:	bl	125fc <fputs@plt>
   16fa4:	mov	r1, r6
   16fa8:	mov	r0, r4
   16fac:	add	r6, r6, #1
   16fb0:	bl	16ccc <print_json_data@@Base+0xdc>
   16fb4:	add	r7, r7, #1
   16fb8:	b	16df0 <print_full_field_name@@Base+0x4c>
   16fbc:	mov	r0, #44	; 0x2c
   16fc0:	bl	12560 <fputc@plt>
   16fc4:	b	16fa4 <print_full_field_name@@Base+0x200>
   16fc8:	mov	r0, #44	; 0x2c
   16fcc:	bl	12560 <fputc@plt>
   16fd0:	b	16e30 <print_full_field_name@@Base+0x8c>
   16fd4:	cmp	r6, #0
   16fd8:	beq	16e88 <print_full_field_name@@Base+0xe4>
   16fdc:	b	16e3c <print_full_field_name@@Base+0x98>
   16fe0:	strdeq	fp, [r2], -r0
   16fe4:	andeq	ip, r2, r4, lsl r0
   16fe8:	strdeq	fp, [r2], -r8
   16fec:	andeq	r8, r1, r3, lsr #31
   16ff0:	muleq	r1, pc, pc	; <UNPREDICTABLE>
   16ff4:	ldr	r3, [pc, #516]	; 17200 <print_full_field_name@@Base+0x45c>
   16ff8:	push	{r0, r1, r2, r4, r5, lr}
   16ffc:	ldr	r2, [r3]
   17000:	cmp	r2, #0
   17004:	bne	171f0 <print_full_field_name@@Base+0x44c>
   17008:	ldr	r5, [pc, #500]	; 17204 <print_full_field_name@@Base+0x460>
   1700c:	mov	r1, #1
   17010:	ldr	r0, [r5]
   17014:	bl	16da4 <print_full_field_name@@Base>
   17018:	ldr	r3, [pc, #488]	; 17208 <print_full_field_name@@Base+0x464>
   1701c:	ldr	r3, [r3]
   17020:	cmp	r3, #0
   17024:	beq	1708c <print_full_field_name@@Base+0x2e8>
   17028:	ldr	r4, [pc, #476]	; 1720c <print_full_field_name@@Base+0x468>
   1702c:	mov	r1, sp
   17030:	ldr	r3, [r4, #136]	; 0x88
   17034:	add	r3, r3, #2
   17038:	ldr	r0, [r4, r3, lsl #2]
   1703c:	bl	12638 <coda_type_get_class@plt>
   17040:	cmp	r0, #0
   17044:	beq	1704c <print_full_field_name@@Base+0x2a8>
   17048:	bl	18728 <handle_coda_error@@Base>
   1704c:	ldr	r3, [r4, #136]	; 0x88
   17050:	add	r1, sp, #4
   17054:	add	r3, r3, #2
   17058:	ldr	r0, [r4, r3, lsl #2]
   1705c:	ldr	r3, [sp]
   17060:	cmp	r3, #6
   17064:	bne	17154 <print_full_field_name@@Base+0x3b0>
   17068:	bl	124a0 <coda_type_get_special_type@plt>
   1706c:	cmp	r0, #0
   17070:	beq	17078 <print_full_field_name@@Base+0x2d4>
   17074:	bl	18728 <handle_coda_error@@Base>
   17078:	ldr	r0, [sp, #4]
   1707c:	bl	121a0 <coda_type_get_special_type_name@plt>
   17080:	mov	r1, r0
   17084:	ldr	r0, [pc, #388]	; 17210 <print_full_field_name@@Base+0x46c>
   17088:	bl	121f4 <printf@plt>
   1708c:	ldr	r3, [pc, #384]	; 17214 <print_full_field_name@@Base+0x470>
   17090:	ldr	r3, [r3]
   17094:	cmp	r3, #0
   17098:	beq	170e0 <print_full_field_name@@Base+0x33c>
   1709c:	ldr	r2, [pc, #360]	; 1720c <print_full_field_name@@Base+0x468>
   170a0:	add	r1, sp, #4
   170a4:	ldr	r3, [r2, #136]	; 0x88
   170a8:	add	r3, r3, #2
   170ac:	ldr	r0, [r2, r3, lsl #2]
   170b0:	bl	12314 <coda_type_get_unit@plt>
   170b4:	cmp	r0, #0
   170b8:	beq	170c0 <print_full_field_name@@Base+0x31c>
   170bc:	bl	18728 <handle_coda_error@@Base>
   170c0:	ldr	r1, [sp, #4]
   170c4:	cmp	r1, #0
   170c8:	beq	170e0 <print_full_field_name@@Base+0x33c>
   170cc:	ldrb	r3, [r1]
   170d0:	cmp	r3, #0
   170d4:	beq	170e0 <print_full_field_name@@Base+0x33c>
   170d8:	ldr	r0, [pc, #312]	; 17218 <print_full_field_name@@Base+0x474>
   170dc:	bl	121f4 <printf@plt>
   170e0:	ldr	r3, [pc, #308]	; 1721c <print_full_field_name@@Base+0x478>
   170e4:	ldr	r3, [r3]
   170e8:	cmp	r3, #0
   170ec:	beq	17134 <print_full_field_name@@Base+0x390>
   170f0:	ldr	r2, [pc, #276]	; 1720c <print_full_field_name@@Base+0x468>
   170f4:	add	r1, sp, #4
   170f8:	ldr	r3, [r2, #136]	; 0x88
   170fc:	add	r3, r3, #2
   17100:	ldr	r0, [r2, r3, lsl #2]
   17104:	bl	12320 <coda_type_get_description@plt>
   17108:	cmp	r0, #0
   1710c:	beq	17114 <print_full_field_name@@Base+0x370>
   17110:	bl	18728 <handle_coda_error@@Base>
   17114:	ldr	r1, [sp, #4]
   17118:	cmp	r1, #0
   1711c:	beq	17134 <print_full_field_name@@Base+0x390>
   17120:	ldrb	r3, [r1]
   17124:	cmp	r3, #0
   17128:	beq	17134 <print_full_field_name@@Base+0x390>
   1712c:	ldr	r0, [pc, #236]	; 17220 <print_full_field_name@@Base+0x47c>
   17130:	bl	121f4 <printf@plt>
   17134:	mov	r0, #10
   17138:	bl	12488 <putchar@plt>
   1713c:	ldr	r3, [pc, #224]	; 17224 <print_full_field_name@@Base+0x480>
   17140:	ldr	r3, [r3]
   17144:	cmp	r3, #0
   17148:	bne	171e4 <print_full_field_name@@Base+0x440>
   1714c:	add	sp, sp, #12
   17150:	pop	{r4, r5, pc}
   17154:	bl	123ec <coda_type_get_read_type@plt>
   17158:	cmp	r0, #0
   1715c:	beq	17164 <print_full_field_name@@Base+0x3c0>
   17160:	bl	18728 <handle_coda_error@@Base>
   17164:	ldr	r0, [sp, #4]
   17168:	bl	124e8 <coda_type_get_native_type_name@plt>
   1716c:	mov	r1, r0
   17170:	ldr	r0, [pc, #152]	; 17210 <print_full_field_name@@Base+0x46c>
   17174:	bl	121f4 <printf@plt>
   17178:	ldr	r3, [sp, #4]
   1717c:	sub	r3, r3, #11
   17180:	cmp	r3, #1
   17184:	bhi	1708c <print_full_field_name@@Base+0x2e8>
   17188:	mov	r0, #40	; 0x28
   1718c:	bl	12488 <putchar@plt>
   17190:	ldr	r1, [r4, #3360]	; 0xd20
   17194:	cmp	r1, #0
   17198:	bgt	171b0 <print_full_field_name@@Base+0x40c>
   1719c:	ldr	r3, [pc, #132]	; 17228 <print_full_field_name@@Base+0x484>
   171a0:	mov	r2, #238	; 0xee
   171a4:	ldr	r1, [pc, #128]	; 1722c <print_full_field_name@@Base+0x488>
   171a8:	ldr	r0, [pc, #128]	; 17230 <print_full_field_name@@Base+0x48c>
   171ac:	bl	1262c <__assert_fail@plt>
   171b0:	sub	r1, r1, #1
   171b4:	ldr	r0, [r5]
   171b8:	bl	16ccc <print_json_data@@Base+0xdc>
   171bc:	mov	r0, #41	; 0x29
   171c0:	bl	12488 <putchar@plt>
   171c4:	b	1708c <print_full_field_name@@Base+0x2e8>
   171c8:	mov	r0, r4
   171cc:	add	r4, r4, #1
   171d0:	bl	1549c <print_all_distinct_dims@@Base>
   171d4:	ldr	r3, [r5]
   171d8:	cmp	r4, r3
   171dc:	blt	171c8 <print_full_field_name@@Base+0x424>
   171e0:	b	1714c <print_full_field_name@@Base+0x3a8>
   171e4:	mov	r4, #0
   171e8:	ldr	r5, [pc, #68]	; 17234 <print_full_field_name@@Base+0x490>
   171ec:	b	171d4 <print_full_field_name@@Base+0x430>
   171f0:	cmp	r2, #1
   171f4:	bne	1714c <print_full_field_name@@Base+0x3a8>
   171f8:	bl	13fb8 <export_data_element_to_ascii@@Base>
   171fc:	b	1714c <print_full_field_name@@Base+0x3a8>
   17200:	andeq	ip, r2, ip, lsr #1
   17204:			; <UNDEFINED> instruction: 0x0002b1bc
   17208:	andeq	ip, r2, r0, lsr #1
   1720c:	strdeq	fp, [r2], -r0
   17210:	andeq	r8, r1, r6, lsr #31
   17214:	andeq	fp, r2, r8, ror #3
   17218:	andeq	r9, r1, r5, lsl r0
   1721c:	andeq	ip, r2, r4, lsr #1
   17220:	andeq	r9, r1, fp, lsl r0
   17224:	ldrdeq	fp, [r2], -ip
   17228:	andeq	r8, r1, r5, ror pc
   1722c:	andeq	r8, r1, sl, lsr #31
   17230:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17234:	strheq	ip, [r2], -r8
   17238:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1723c:	add	r1, sp, #4
   17240:	ldr	r4, [pc, #740]	; 1752c <print_full_field_name@@Base+0x788>
   17244:	ldr	r3, [r4, #136]	; 0x88
   17248:	add	r3, r3, #2
   1724c:	ldr	r0, [r4, r3, lsl #2]
   17250:	bl	12638 <coda_type_get_class@plt>
   17254:	cmp	r0, #0
   17258:	beq	17260 <print_full_field_name@@Base+0x4bc>
   1725c:	bl	18728 <handle_coda_error@@Base>
   17260:	ldr	r3, [sp, #4]
   17264:	cmp	r3, #6
   17268:	ldrls	pc, [pc, r3, lsl #2]
   1726c:	b	17310 <print_full_field_name@@Base+0x56c>
   17270:	andeq	r7, r1, ip, lsl #5
   17274:	andeq	r7, r1, r4, lsl #8
   17278:	andeq	r7, r1, r0, ror r4
   1727c:	andeq	r7, r1, r0, ror r4
   17280:	andeq	r7, r1, r0, ror r4
   17284:	andeq	r7, r1, r0, ror r4
   17288:			; <UNDEFINED> instruction: 0x000174b8
   1728c:	ldr	r3, [r4, #136]	; 0x88
   17290:	cmp	r3, #30
   17294:	bgt	17310 <print_full_field_name@@Base+0x56c>
   17298:	ldr	r2, [r4, #3748]	; 0xea4
   1729c:	add	r3, r3, #2
   172a0:	add	r1, sp, #8
   172a4:	ldr	r0, [r4, r3, lsl #2]
   172a8:	add	r2, r2, #1
   172ac:	str	r2, [r4, #3748]	; 0xea4
   172b0:	bl	123d4 <coda_type_get_num_record_fields@plt>
   172b4:	cmp	r0, #0
   172b8:	beq	172c0 <print_full_field_name@@Base+0x51c>
   172bc:	bl	18728 <handle_coda_error@@Base>
   172c0:	ldr	r3, [r4, #136]	; 0x88
   172c4:	add	r3, r3, #1
   172c8:	str	r3, [r4, #136]	; 0x88
   172cc:	ldr	r3, [r4, #796]	; 0x31c
   172d0:	add	r3, r3, #166	; 0xa6
   172d4:	ldr	r6, [r4, r3, lsl #2]
   172d8:	cmp	r6, #0
   172dc:	beq	173d8 <print_full_field_name@@Base+0x634>
   172e0:	ldr	r3, [r4, #796]	; 0x31c
   172e4:	add	r3, r3, #166	; 0xa6
   172e8:	ldr	r0, [r4, r3, lsl #2]
   172ec:	cmp	r0, #0
   172f0:	bne	17318 <print_full_field_name@@Base+0x574>
   172f4:	str	r6, [r4, r3, lsl #2]
   172f8:	ldr	r3, [r4, #136]	; 0x88
   172fc:	sub	r3, r3, #1
   17300:	str	r3, [r4, #136]	; 0x88
   17304:	ldr	r3, [r4, #3748]	; 0xea4
   17308:	sub	r3, r3, #1
   1730c:	str	r3, [r4, #3748]	; 0xea4
   17310:	add	sp, sp, #16
   17314:	pop	{r4, r5, r6, pc}
   17318:	bl	162e4 <codadump_filter_get_fieldname@@Base>
   1731c:	subs	r5, r0, #0
   17320:	bne	17338 <print_full_field_name@@Base+0x594>
   17324:	ldr	r3, [pc, #516]	; 17530 <print_full_field_name@@Base+0x78c>
   17328:	movw	r2, #393	; 0x189
   1732c:	ldr	r1, [pc, #512]	; 17534 <print_full_field_name@@Base+0x790>
   17330:	ldr	r0, [pc, #512]	; 17538 <print_full_field_name@@Base+0x794>
   17334:	bl	1262c <__assert_fail@plt>
   17338:	ldr	r3, [r4, #136]	; 0x88
   1733c:	add	r2, sp, #12
   17340:	mov	r1, r5
   17344:	add	r3, r3, #1
   17348:	ldr	r0, [r4, r3, lsl #2]
   1734c:	bl	1253c <coda_type_get_record_field_index_from_name@plt>
   17350:	cmp	r0, #0
   17354:	beq	17388 <print_full_field_name@@Base+0x5e4>
   17358:	bl	125d8 <coda_get_errno@plt>
   1735c:	ldr	r3, [r0]
   17360:	cmn	r3, #102	; 0x66
   17364:	bne	17384 <print_full_field_name@@Base+0x5e0>
   17368:	ldr	r3, [pc, #460]	; 1753c <print_full_field_name@@Base+0x798>
   1736c:	mov	r2, r5
   17370:	ldr	r1, [pc, #456]	; 17540 <print_full_field_name@@Base+0x79c>
   17374:	ldr	r0, [r3]
   17378:	bl	12428 <fprintf@plt>
   1737c:	mov	r0, #1
   17380:	bl	123e0 <exit@plt>
   17384:	bl	18728 <handle_coda_error@@Base>
   17388:	ldr	r5, [r4, #796]	; 0x31c
   1738c:	add	r3, r5, #166	; 0xa6
   17390:	add	r5, r5, #167	; 0xa7
   17394:	ldr	r0, [r4, r3, lsl #2]
   17398:	bl	16318 <codadump_filter_get_subfilter@@Base>
   1739c:	ldr	r3, [r4, #796]	; 0x31c
   173a0:	mov	r1, #1
   173a4:	str	r0, [r4, r5, lsl #2]
   173a8:	ldr	r0, [sp, #12]
   173ac:	add	r3, r3, #1
   173b0:	str	r3, [r4, #796]	; 0x31c
   173b4:	bl	17544 <print_full_field_name@@Base+0x7a0>
   173b8:	ldr	r5, [r4, #796]	; 0x31c
   173bc:	sub	r3, r5, #1
   173c0:	add	r5, r5, #165	; 0xa5
   173c4:	ldr	r0, [r4, r5, lsl #2]
   173c8:	str	r3, [r4, #796]	; 0x31c
   173cc:	bl	1634c <codadump_filter_get_next_filter@@Base>
   173d0:	str	r0, [r4, r5, lsl #2]
   173d4:	b	172e0 <print_full_field_name@@Base+0x53c>
   173d8:	str	r6, [sp, #12]
   173dc:	ldr	r3, [sp, #8]
   173e0:	ldr	r0, [sp, #12]
   173e4:	cmp	r0, r3
   173e8:	bge	172f8 <print_full_field_name@@Base+0x554>
   173ec:	mov	r1, #0
   173f0:	bl	17544 <print_full_field_name@@Base+0x7a0>
   173f4:	ldr	r3, [sp, #12]
   173f8:	add	r3, r3, #1
   173fc:	str	r3, [sp, #12]
   17400:	b	173dc <print_full_field_name@@Base+0x638>
   17404:	ldr	r3, [r4, #136]	; 0x88
   17408:	cmp	r3, #30
   1740c:	bgt	17310 <print_full_field_name@@Base+0x56c>
   17410:	bl	1566c <dim_enter_array@@Base>
   17414:	ldr	r3, [r4, #3360]	; 0xd20
   17418:	add	r3, r3, #1
   1741c:	str	r3, [r4, #3360]	; 0xd20
   17420:	ldr	r3, [r4, #136]	; 0x88
   17424:	add	r2, r3, #1
   17428:	add	r1, r3, #3
   1742c:	add	r3, r3, #2
   17430:	add	r1, r4, r1, lsl #2
   17434:	ldr	r0, [r4, r3, lsl #2]
   17438:	str	r2, [r4, #136]	; 0x88
   1743c:	bl	124c4 <coda_type_get_array_base_type@plt>
   17440:	cmp	r0, #0
   17444:	beq	1744c <print_full_field_name@@Base+0x6a8>
   17448:	bl	18728 <handle_coda_error@@Base>
   1744c:	bl	17238 <print_full_field_name@@Base+0x494>
   17450:	ldr	r3, [r4, #136]	; 0x88
   17454:	sub	r3, r3, #1
   17458:	str	r3, [r4, #136]	; 0x88
   1745c:	ldr	r3, [r4, #3360]	; 0xd20
   17460:	sub	r3, r3, #1
   17464:	str	r3, [r4, #3360]	; 0xd20
   17468:	bl	15e18 <dim_leave_array@@Base>
   1746c:	b	17310 <print_full_field_name@@Base+0x56c>
   17470:	ldr	r3, [r4, #136]	; 0x88
   17474:	add	r1, sp, #12
   17478:	add	r3, r3, #2
   1747c:	ldr	r0, [r4, r3, lsl #2]
   17480:	bl	123ec <coda_type_get_read_type@plt>
   17484:	cmp	r0, #0
   17488:	beq	17490 <print_full_field_name@@Base+0x6ec>
   1748c:	bl	18728 <handle_coda_error@@Base>
   17490:	ldr	r3, [sp, #12]
   17494:	sub	r3, r3, #11
   17498:	cmp	r3, #1
   1749c:	bhi	17524 <print_full_field_name@@Base+0x780>
   174a0:	bl	1566c <dim_enter_array@@Base>
   174a4:	ldr	r3, [r4, #3360]	; 0xd20
   174a8:	add	r3, r3, #1
   174ac:	str	r3, [r4, #3360]	; 0xd20
   174b0:	bl	16ff4 <print_full_field_name@@Base+0x250>
   174b4:	b	1745c <print_full_field_name@@Base+0x6b8>
   174b8:	bl	121c4 <coda_get_option_bypass_special_types@plt>
   174bc:	ldr	r3, [r4, #136]	; 0x88
   174c0:	cmp	r0, #0
   174c4:	add	r3, r3, #2
   174c8:	beq	174ec <print_full_field_name@@Base+0x748>
   174cc:	add	r1, r4, r3, lsl #2
   174d0:	ldr	r0, [r4, r3, lsl #2]
   174d4:	bl	125e4 <coda_type_get_special_base_type@plt>
   174d8:	cmp	r0, #0
   174dc:	beq	174e4 <print_full_field_name@@Base+0x740>
   174e0:	bl	18728 <handle_coda_error@@Base>
   174e4:	bl	17238 <print_full_field_name@@Base+0x494>
   174e8:	b	17310 <print_full_field_name@@Base+0x56c>
   174ec:	add	r1, sp, #12
   174f0:	ldr	r0, [r4, r3, lsl #2]
   174f4:	bl	124a0 <coda_type_get_special_type@plt>
   174f8:	cmp	r0, #0
   174fc:	beq	17504 <print_full_field_name@@Base+0x760>
   17500:	bl	18728 <handle_coda_error@@Base>
   17504:	ldr	r3, [sp, #12]
   17508:	cmp	r3, #3
   1750c:	ldrls	pc, [pc, r3, lsl #2]
   17510:	b	17310 <print_full_field_name@@Base+0x56c>
   17514:	andeq	r7, r1, r0, lsl r3
   17518:	andeq	r7, r1, r4, lsr #10
   1751c:	andeq	r7, r1, r4, lsr #10
   17520:	andeq	r7, r1, r0, lsr #9
   17524:	bl	16ff4 <print_full_field_name@@Base+0x250>
   17528:	b	17310 <print_full_field_name@@Base+0x56c>
   1752c:	strdeq	fp, [r2], -r0
   17530:	andeq	r8, r1, r9, lsl #31
   17534:	andeq	r8, r1, sl, lsr #31
   17538:	andeq	r9, r1, r1, lsr #32
   1753c:			; <UNDEFINED> instruction: 0x0002b1b8
   17540:	andeq	r9, r1, lr, lsr #32
   17544:	push	{r0, r1, r4, r5, r6, lr}
   17548:	mov	r5, r0
   1754c:	mov	r6, r1
   17550:	mov	r2, sp
   17554:	mov	r1, r0
   17558:	ldr	r4, [pc, #252]	; 1765c <print_full_field_name@@Base+0x8b8>
   1755c:	ldr	r3, [r4, #3748]	; 0xea4
   17560:	add	r3, r4, r3, lsl #2
   17564:	str	r0, [r3, #3488]	; 0xda0
   17568:	ldr	r3, [r4, #136]	; 0x88
   1756c:	add	r3, r3, #1
   17570:	ldr	r0, [r4, r3, lsl #2]
   17574:	bl	121e8 <coda_type_get_record_field_hidden_status@plt>
   17578:	cmp	r0, #0
   1757c:	beq	17584 <print_full_field_name@@Base+0x7e0>
   17580:	bl	18728 <handle_coda_error@@Base>
   17584:	ldr	r1, [sp]
   17588:	eor	r6, r6, #1
   1758c:	cmp	r1, #0
   17590:	andne	r1, r6, #1
   17594:	moveq	r1, #0
   17598:	cmp	r1, #0
   1759c:	bne	17654 <print_full_field_name@@Base+0x8b0>
   175a0:	ldr	r3, [pc, #184]	; 17660 <print_full_field_name@@Base+0x8bc>
   175a4:	ldr	r3, [r3]
   175a8:	cmp	r3, #0
   175ac:	beq	175fc <print_full_field_name@@Base+0x858>
   175b0:	ldr	r3, [r4, #136]	; 0x88
   175b4:	add	r2, sp, #4
   175b8:	mov	r1, r5
   175bc:	add	r3, r3, #1
   175c0:	ldr	r0, [r4, r3, lsl #2]
   175c4:	bl	122d8 <coda_type_get_record_field_available_status@plt>
   175c8:	cmp	r0, #0
   175cc:	beq	175d4 <print_full_field_name@@Base+0x830>
   175d0:	bl	18728 <handle_coda_error@@Base>
   175d4:	ldr	r3, [sp, #4]
   175d8:	cmn	r3, #1
   175dc:	bne	175ec <print_full_field_name@@Base+0x848>
   175e0:	bl	15f50 <dim_record_field_available@@Base>
   175e4:	cmp	r0, #0
   175e8:	beq	17654 <print_full_field_name@@Base+0x8b0>
   175ec:	ldr	r3, [r4, #136]	; 0x88
   175f0:	ldr	r2, [sp, #4]
   175f4:	add	r3, r4, r3, lsl #2
   175f8:	str	r2, [r3, #3360]	; 0xd20
   175fc:	ldr	r3, [r4, #136]	; 0x88
   17600:	mov	r1, r5
   17604:	ldr	r2, [r4, #3748]	; 0xea4
   17608:	add	r3, r3, #1
   1760c:	ldr	r0, [r4, r3, lsl #2]
   17610:	add	r2, r2, #904	; 0x388
   17614:	add	r2, r4, r2, lsl #2
   17618:	bl	125f0 <coda_type_get_record_field_name@plt>
   1761c:	cmp	r0, #0
   17620:	beq	17628 <print_full_field_name@@Base+0x884>
   17624:	bl	18728 <handle_coda_error@@Base>
   17628:	ldr	r3, [r4, #136]	; 0x88
   1762c:	mov	r1, r5
   17630:	add	r2, r3, #2
   17634:	add	r3, r3, #1
   17638:	add	r2, r4, r2, lsl #2
   1763c:	ldr	r0, [r4, r3, lsl #2]
   17640:	bl	1229c <coda_type_get_record_field_type@plt>
   17644:	cmp	r0, #0
   17648:	beq	17650 <print_full_field_name@@Base+0x8ac>
   1764c:	bl	18728 <handle_coda_error@@Base>
   17650:	bl	17238 <print_full_field_name@@Base+0x494>
   17654:	add	sp, sp, #8
   17658:	pop	{r4, r5, r6, pc}
   1765c:	strdeq	fp, [r2], -r0
   17660:	andeq	fp, r2, ip, ror #3

00017664 <traverse_info_init@@Base>:
   17664:	ldr	r3, [pc, #20]	; 17680 <traverse_info_init@@Base+0x1c>
   17668:	mov	r2, #0
   1766c:	str	r2, [r3, #4]
   17670:	str	r2, [r3, #136]	; 0x88
   17674:	str	r2, [r3, #3360]	; 0xd20
   17678:	str	r2, [r3, #3748]	; 0xea4
   1767c:	bx	lr
   17680:	strdeq	fp, [r2], -r0

00017684 <traverse_info_done@@Base>:
   17684:	ldr	r3, [pc, #44]	; 176b8 <traverse_info_done@@Base+0x34>
   17688:	push	{r4, lr}
   1768c:	ldr	r0, [r3, #4]
   17690:	mov	r4, r3
   17694:	cmp	r0, #0
   17698:	beq	176a0 <traverse_info_done@@Base+0x1c>
   1769c:	bl	1250c <coda_close@plt>
   176a0:	ldr	r3, [r4, #664]	; 0x298
   176a4:	cmp	r3, #0
   176a8:	popeq	{r4, pc}
   176ac:	pop	{r4, lr}
   176b0:	ldr	r0, [pc, #4]	; 176bc <traverse_info_done@@Base+0x38>
   176b4:	b	15f60 <codadump_filter_remove@@Base>
   176b8:	strdeq	fp, [r2], -r0
   176bc:	andeq	fp, r2, r8, lsl #9

000176c0 <traverse_product@@Base>:
   176c0:	push	{r4, lr}
   176c4:	ldr	r4, [pc, #164]	; 17770 <traverse_product@@Base+0xb0>
   176c8:	mov	r1, r4
   176cc:	ldr	r0, [r4, #-4]
   176d0:	bl	12224 <coda_open@plt>
   176d4:	cmp	r0, #0
   176d8:	beq	176f0 <traverse_product@@Base+0x30>
   176dc:	bl	125d8 <coda_get_errno@plt>
   176e0:	ldr	r3, [r0]
   176e4:	cmn	r3, #21
   176e8:	beq	17744 <traverse_product@@Base+0x84>
   176ec:	bl	18728 <handle_coda_error@@Base>
   176f0:	ldr	r4, [pc, #124]	; 17774 <traverse_product@@Base+0xb4>
   176f4:	add	r0, r4, #144	; 0x90
   176f8:	ldr	r1, [r4, #4]
   176fc:	bl	12344 <coda_cursor_set_product@plt>
   17700:	cmp	r0, #0
   17704:	beq	1770c <traverse_product@@Base+0x4c>
   17708:	bl	18728 <handle_coda_error@@Base>
   1770c:	ldr	r1, [r4, #136]	; 0x88
   17710:	ldr	r0, [pc, #96]	; 17778 <traverse_product@@Base+0xb8>
   17714:	add	r1, r1, #2
   17718:	add	r1, r4, r1, lsl #2
   1771c:	bl	122a8 <coda_cursor_get_type@plt>
   17720:	cmp	r0, #0
   17724:	beq	1772c <traverse_product@@Base+0x6c>
   17728:	bl	18728 <handle_coda_error@@Base>
   1772c:	bl	17238 <print_full_field_name@@Base+0x494>
   17730:	ldr	r0, [r4, #4]
   17734:	bl	1250c <coda_close@plt>
   17738:	mov	r3, #0
   1773c:	str	r3, [r4, #4]
   17740:	pop	{r4, pc}
   17744:	mov	r0, #0
   17748:	bl	1226c <coda_set_option_use_mmap@plt>
   1774c:	mov	r1, r4
   17750:	ldr	r0, [r4, #-4]
   17754:	bl	12224 <coda_open@plt>
   17758:	mov	r4, r0
   1775c:	mov	r0, #1
   17760:	bl	1226c <coda_set_option_use_mmap@plt>
   17764:	cmp	r4, #0
   17768:	bne	176ec <traverse_product@@Base+0x2c>
   1776c:	b	176f0 <traverse_product@@Base+0x30>
   17770:	strdeq	fp, [r2], -r4
   17774:	strdeq	fp, [r2], -r0
   17778:	andeq	fp, r2, r0, lsl #5
   1777c:	push	{r0, r1, r2, r3}
   17780:	ldr	r3, [pc, #36]	; 177ac <traverse_product@@Base+0xec>
   17784:	push	{r0, r1, r2, lr}
   17788:	add	r2, sp, #20
   1778c:	ldr	r1, [sp, #16]
   17790:	str	r2, [sp, #4]
   17794:	ldr	r0, [r3]
   17798:	bl	12524 <vfprintf@plt>
   1779c:	add	sp, sp, #12
   177a0:	pop	{lr}		; (ldr lr, [sp], #4)
   177a4:	add	sp, sp, #16
   177a8:	bx	lr
   177ac:	muleq	r2, r8, r0
   177b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   177b4:	mov	r6, r0
   177b8:	mov	r5, r1
   177bc:	mov	r4, #0
   177c0:	ldr	r7, [pc, #164]	; 1786c <traverse_product@@Base+0x1ac>
   177c4:	ldr	r8, [pc, #164]	; 17870 <traverse_product@@Base+0x1b0>
   177c8:	ldr	r9, [pc, #164]	; 17874 <traverse_product@@Base+0x1b4>
   177cc:	cmp	r4, r5
   177d0:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   177d4:	ldrb	r1, [r6, r4]
   177d8:	cmp	r1, #12
   177dc:	beq	1782c <traverse_product@@Base+0x16c>
   177e0:	bhi	1780c <traverse_product@@Base+0x14c>
   177e4:	cmp	r1, #9
   177e8:	beq	1783c <traverse_product@@Base+0x17c>
   177ec:	cmp	r1, #10
   177f0:	beq	17834 <traverse_product@@Base+0x174>
   177f4:	cmp	r1, #8
   177f8:	bne	17854 <traverse_product@@Base+0x194>
   177fc:	ldr	r0, [pc, #116]	; 17878 <traverse_product@@Base+0x1b8>
   17800:	bl	1777c <traverse_product@@Base+0xbc>
   17804:	add	r4, r4, #1
   17808:	b	177cc <traverse_product@@Base+0x10c>
   1780c:	cmp	r1, #34	; 0x22
   17810:	beq	17844 <traverse_product@@Base+0x184>
   17814:	cmp	r1, #92	; 0x5c
   17818:	beq	1784c <traverse_product@@Base+0x18c>
   1781c:	cmp	r1, #13
   17820:	bne	17854 <traverse_product@@Base+0x194>
   17824:	ldr	r0, [pc, #80]	; 1787c <traverse_product@@Base+0x1bc>
   17828:	b	17800 <traverse_product@@Base+0x140>
   1782c:	mov	r0, r7
   17830:	b	17800 <traverse_product@@Base+0x140>
   17834:	ldr	r0, [pc, #68]	; 17880 <traverse_product@@Base+0x1c0>
   17838:	b	17800 <traverse_product@@Base+0x140>
   1783c:	ldr	r0, [pc, #64]	; 17884 <traverse_product@@Base+0x1c4>
   17840:	b	17800 <traverse_product@@Base+0x140>
   17844:	ldr	r0, [pc, #60]	; 17888 <traverse_product@@Base+0x1c8>
   17848:	b	17800 <traverse_product@@Base+0x140>
   1784c:	ldr	r0, [pc, #56]	; 1788c <traverse_product@@Base+0x1cc>
   17850:	b	17800 <traverse_product@@Base+0x140>
   17854:	sub	r3, r1, #32
   17858:	cmp	r3, #94	; 0x5e
   1785c:	movls	r0, r9
   17860:	movhi	r0, r8
   17864:	bl	1777c <traverse_product@@Base+0xbc>
   17868:	b	17804 <traverse_product@@Base+0x144>
   1786c:	andeq	r8, r1, pc, lsl #21
   17870:	andeq	r8, r1, r0, asr #29
   17874:	strdeq	r8, [r1], -ip
   17878:	andeq	r8, r1, r3, lsl #21
   1787c:	muleq	r1, r2, sl
   17880:	andeq	r8, r1, r9, lsl #21
   17884:	andeq	r8, r1, r6, lsl #21
   17888:			; <UNDEFINED> instruction: 0x00018ebd
   1788c:	muleq	r1, r5, sl
   17890:	ldr	r3, [pc, #68]	; 178dc <traverse_product@@Base+0x21c>
   17894:	push	{r4, r5, r6, lr}
   17898:	ldr	r4, [r3]
   1789c:	cmp	r4, #0
   178a0:	blt	178c8 <traverse_product@@Base+0x208>
   178a4:	ldr	r5, [pc, #52]	; 178e0 <traverse_product@@Base+0x220>
   178a8:	ldr	r6, [pc, #52]	; 178e4 <traverse_product@@Base+0x224>
   178ac:	cmp	r4, #0
   178b0:	popeq	{r4, r5, r6, pc}
   178b4:	mov	r0, r6
   178b8:	sub	r4, r4, #1
   178bc:	ldr	r1, [r5]
   178c0:	bl	125fc <fputs@plt>
   178c4:	b	178ac <traverse_product@@Base+0x1ec>
   178c8:	ldr	r3, [pc, #24]	; 178e8 <traverse_product@@Base+0x228>
   178cc:	mov	r2, #44	; 0x2c
   178d0:	ldr	r1, [pc, #20]	; 178ec <traverse_product@@Base+0x22c>
   178d4:	ldr	r0, [pc, #20]	; 178f0 <traverse_product@@Base+0x230>
   178d8:	bl	1262c <__assert_fail@plt>
   178dc:	andeq	fp, r2, ip, asr #3
   178e0:	muleq	r2, r8, r0
   178e4:	andeq	r8, r1, r5, asr #21
   178e8:	andeq	r9, r1, r2, rrx
   178ec:	andeq	r9, r1, r9, rrx
   178f0:	andeq	r8, r1, sl, asr #22
   178f4:	push	{r0, r1, r2, r3}
   178f8:	push	{r0, r1, r2, lr}
   178fc:	bl	17890 <traverse_product@@Base+0x1d0>
   17900:	ldr	r3, [pc, #32]	; 17928 <traverse_product@@Base+0x268>
   17904:	add	r2, sp, #20
   17908:	ldr	r1, [sp, #16]
   1790c:	str	r2, [sp, #4]
   17910:	ldr	r0, [r3]
   17914:	bl	12524 <vfprintf@plt>
   17918:	add	sp, sp, #12
   1791c:	pop	{lr}		; (ldr lr, [sp], #4)
   17920:	add	sp, sp, #16
   17924:	bx	lr
   17928:	muleq	r2, r8, r0
   1792c:	push	{r4, r5, r6, r7, r8, r9, lr}
   17930:	mov	r3, #0
   17934:	sub	sp, sp, #76	; 0x4c
   17938:	mov	r4, r0
   1793c:	mov	r7, r1
   17940:	ldr	r5, [pc, #1924]	; 180cc <traverse_product@@Base+0xa0c>
   17944:	str	r3, [sp, #12]
   17948:	ldr	r3, [r5, #4]
   1794c:	cmp	r3, #0
   17950:	beq	179e4 <traverse_product@@Base+0x324>
   17954:	add	r1, sp, #12
   17958:	bl	122e4 <coda_cursor_has_attributes@plt>
   1795c:	cmp	r0, #0
   17960:	beq	17968 <traverse_product@@Base+0x2a8>
   17964:	bl	18728 <handle_coda_error@@Base>
   17968:	ldr	r3, [sp, #12]
   1796c:	cmp	r3, #0
   17970:	beq	179e4 <traverse_product@@Base+0x324>
   17974:	cmp	r7, #0
   17978:	beq	17988 <traverse_product@@Base+0x2c8>
   1797c:	ldr	r0, [pc, #1868]	; 180d0 <traverse_product@@Base+0xa10>
   17980:	bl	1777c <traverse_product@@Base+0xbc>
   17984:	bl	17890 <traverse_product@@Base+0x1d0>
   17988:	ldr	r0, [pc, #1860]	; 180d4 <traverse_product@@Base+0xa14>
   1798c:	bl	1777c <traverse_product@@Base+0xbc>
   17990:	mov	r0, r4
   17994:	bl	12464 <coda_cursor_goto_attributes@plt>
   17998:	cmp	r0, #0
   1799c:	beq	179a4 <traverse_product@@Base+0x2e4>
   179a0:	bl	18728 <handle_coda_error@@Base>
   179a4:	ldr	r3, [r5]
   179a8:	mov	r1, #1
   179ac:	mov	r0, r4
   179b0:	add	r3, r3, #1
   179b4:	str	r3, [r5]
   179b8:	bl	1792c <traverse_product@@Base+0x26c>
   179bc:	ldr	r3, [r5]
   179c0:	mov	r0, r4
   179c4:	sub	r3, r3, #1
   179c8:	str	r3, [r5]
   179cc:	bl	123c8 <coda_cursor_goto_parent@plt>
   179d0:	ldr	r0, [pc, #1792]	; 180d8 <traverse_product@@Base+0xa18>
   179d4:	bl	178f4 <traverse_product@@Base+0x234>
   179d8:	ldr	r3, [r5]
   179dc:	add	r3, r3, #1
   179e0:	str	r3, [r5]
   179e4:	add	r1, sp, #8
   179e8:	mov	r0, r4
   179ec:	bl	122f0 <coda_cursor_get_type_class@plt>
   179f0:	cmp	r0, #0
   179f4:	beq	179fc <traverse_product@@Base+0x33c>
   179f8:	bl	18728 <handle_coda_error@@Base>
   179fc:	ldr	r3, [sp, #8]
   17a00:	cmp	r3, #6
   17a04:	ldrls	pc, [pc, r3, lsl #2]
   17a08:	b	17b28 <traverse_product@@Base+0x468>
   17a0c:	andeq	r7, r1, r8, lsr #20
   17a10:	andeq	r7, r1, r0, asr #24
   17a14:	andeq	r7, r1, r8, lsl sp
   17a18:	andeq	r7, r1, r8, lsl sp
   17a1c:	andeq	r7, r1, r8, lsl sp
   17a20:	andeq	r7, r1, r8, lsl sp
   17a24:	ldrdeq	r7, [r1], -r8
   17a28:	add	r1, sp, #16
   17a2c:	mov	r0, r4
   17a30:	bl	12248 <coda_cursor_get_num_elements@plt>
   17a34:	cmp	r0, #0
   17a38:	beq	17a40 <traverse_product@@Base+0x380>
   17a3c:	bl	18728 <handle_coda_error@@Base>
   17a40:	ldr	r3, [sp, #16]
   17a44:	cmp	r3, #0
   17a48:	ble	17c34 <traverse_product@@Base+0x574>
   17a4c:	cmp	r7, #0
   17a50:	beq	17a5c <traverse_product@@Base+0x39c>
   17a54:	ldr	r0, [pc, #1652]	; 180d0 <traverse_product@@Base+0xa10>
   17a58:	bl	1777c <traverse_product@@Base+0xbc>
   17a5c:	add	r1, sp, #20
   17a60:	mov	r0, r4
   17a64:	bl	122a8 <coda_cursor_get_type@plt>
   17a68:	cmp	r0, #0
   17a6c:	beq	17a74 <traverse_product@@Base+0x3b4>
   17a70:	bl	18728 <handle_coda_error@@Base>
   17a74:	add	r1, sp, #24
   17a78:	ldr	r0, [sp, #20]
   17a7c:	bl	124ac <coda_type_get_record_union_status@plt>
   17a80:	cmp	r0, #0
   17a84:	beq	17a8c <traverse_product@@Base+0x3cc>
   17a88:	bl	18728 <handle_coda_error@@Base>
   17a8c:	ldr	r3, [sp, #24]
   17a90:	cmp	r3, #0
   17a94:	beq	17b44 <traverse_product@@Base+0x484>
   17a98:	add	r1, sp, #28
   17a9c:	mov	r0, r4
   17aa0:	bl	125a8 <coda_cursor_get_available_union_field_index@plt>
   17aa4:	cmp	r0, #0
   17aa8:	beq	17ab0 <traverse_product@@Base+0x3f0>
   17aac:	bl	18728 <handle_coda_error@@Base>
   17ab0:	add	r2, sp, #40	; 0x28
   17ab4:	ldr	r0, [sp, #20]
   17ab8:	ldr	r1, [sp, #28]
   17abc:	bl	125f0 <coda_type_get_record_field_name@plt>
   17ac0:	cmp	r0, #0
   17ac4:	beq	17acc <traverse_product@@Base+0x40c>
   17ac8:	bl	18728 <handle_coda_error@@Base>
   17acc:	mov	r0, r4
   17ad0:	ldr	r1, [sp, #28]
   17ad4:	bl	12368 <coda_cursor_goto_record_field_by_index@plt>
   17ad8:	cmp	r0, #0
   17adc:	beq	17ae4 <traverse_product@@Base+0x424>
   17ae0:	bl	18728 <handle_coda_error@@Base>
   17ae4:	cmp	r7, #0
   17ae8:	beq	17af0 <traverse_product@@Base+0x430>
   17aec:	bl	17890 <traverse_product@@Base+0x1d0>
   17af0:	ldr	r0, [pc, #1508]	; 180dc <traverse_product@@Base+0xa1c>
   17af4:	ldr	r1, [sp, #40]	; 0x28
   17af8:	bl	1777c <traverse_product@@Base+0xbc>
   17afc:	ldr	r3, [r5]
   17b00:	mov	r1, #1
   17b04:	mov	r0, r4
   17b08:	add	r3, r3, #1
   17b0c:	str	r3, [r5]
   17b10:	bl	1792c <traverse_product@@Base+0x26c>
   17b14:	ldr	r3, [r5]
   17b18:	sub	r3, r3, #1
   17b1c:	str	r3, [r5]
   17b20:	mov	r0, r4
   17b24:	bl	123c8 <coda_cursor_goto_parent@plt>
   17b28:	ldr	r3, [sp, #12]
   17b2c:	cmp	r3, #0
   17b30:	ldrne	r3, [r5]
   17b34:	subne	r3, r3, #1
   17b38:	strne	r3, [r5]
   17b3c:	add	sp, sp, #76	; 0x4c
   17b40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17b44:	mov	r0, r4
   17b48:	bl	1235c <coda_cursor_goto_first_record_field@plt>
   17b4c:	cmp	r0, #0
   17b50:	beq	17b58 <traverse_product@@Base+0x498>
   17b54:	bl	18728 <handle_coda_error@@Base>
   17b58:	ldr	r8, [pc, #1404]	; 180dc <traverse_product@@Base+0xa1c>
   17b5c:	mov	r3, #0
   17b60:	mov	r6, #1
   17b64:	str	r3, [sp, #28]
   17b68:	ldr	r3, [sp, #16]
   17b6c:	ldr	r1, [sp, #28]
   17b70:	cmp	r1, r3
   17b74:	bge	17b20 <traverse_product@@Base+0x460>
   17b78:	add	r2, sp, #40	; 0x28
   17b7c:	ldr	r0, [sp, #20]
   17b80:	bl	121e8 <coda_type_get_record_field_hidden_status@plt>
   17b84:	cmp	r0, #0
   17b88:	beq	17b90 <traverse_product@@Base+0x4d0>
   17b8c:	bl	18728 <handle_coda_error@@Base>
   17b90:	ldr	r3, [sp, #40]	; 0x28
   17b94:	cmp	r3, #0
   17b98:	bne	17bfc <traverse_product@@Base+0x53c>
   17b9c:	add	r2, sp, #32
   17ba0:	ldr	r0, [sp, #20]
   17ba4:	ldr	r1, [sp, #28]
   17ba8:	bl	125f0 <coda_type_get_record_field_name@plt>
   17bac:	cmp	r0, #0
   17bb0:	beq	17bb8 <traverse_product@@Base+0x4f8>
   17bb4:	bl	18728 <handle_coda_error@@Base>
   17bb8:	eor	r6, r6, #1
   17bbc:	orrs	r3, r6, r7
   17bc0:	beq	17bc8 <traverse_product@@Base+0x508>
   17bc4:	bl	17890 <traverse_product@@Base+0x1d0>
   17bc8:	mov	r0, r8
   17bcc:	ldr	r1, [sp, #32]
   17bd0:	mov	r6, #0
   17bd4:	bl	1777c <traverse_product@@Base+0xbc>
   17bd8:	ldr	r3, [r5]
   17bdc:	mov	r1, #1
   17be0:	mov	r0, r4
   17be4:	add	r3, r3, #1
   17be8:	str	r3, [r5]
   17bec:	bl	1792c <traverse_product@@Base+0x26c>
   17bf0:	ldr	r3, [r5]
   17bf4:	sub	r3, r3, #1
   17bf8:	str	r3, [r5]
   17bfc:	ldr	r3, [sp, #16]
   17c00:	ldr	r2, [sp, #28]
   17c04:	sub	r3, r3, #1
   17c08:	cmp	r3, r2
   17c0c:	ble	17c24 <traverse_product@@Base+0x564>
   17c10:	mov	r0, r4
   17c14:	bl	12554 <coda_cursor_goto_next_record_field@plt>
   17c18:	cmp	r0, #0
   17c1c:	beq	17c24 <traverse_product@@Base+0x564>
   17c20:	bl	18728 <handle_coda_error@@Base>
   17c24:	ldr	r3, [sp, #28]
   17c28:	add	r3, r3, #1
   17c2c:	str	r3, [sp, #28]
   17c30:	b	17b68 <traverse_product@@Base+0x4a8>
   17c34:	ldr	r0, [pc, #1188]	; 180e0 <traverse_product@@Base+0xa20>
   17c38:	bl	1777c <traverse_product@@Base+0xbc>
   17c3c:	b	17b28 <traverse_product@@Base+0x468>
   17c40:	add	r7, sp, #40	; 0x28
   17c44:	add	r1, sp, #32
   17c48:	mov	r2, r7
   17c4c:	mov	r0, r4
   17c50:	bl	124f4 <coda_cursor_get_array_dim@plt>
   17c54:	cmp	r0, #0
   17c58:	beq	17c60 <traverse_product@@Base+0x5a0>
   17c5c:	bl	18728 <handle_coda_error@@Base>
   17c60:	ldr	r2, [sp, #32]
   17c64:	cmp	r2, #0
   17c68:	movge	r3, #0
   17c6c:	movge	r6, #1
   17c70:	bge	17c88 <traverse_product@@Base+0x5c8>
   17c74:	ldr	r0, [pc, #1128]	; 180e4 <traverse_product@@Base+0xa24>
   17c78:	b	17c38 <traverse_product@@Base+0x578>
   17c7c:	ldr	r1, [r7, r3, lsl #2]
   17c80:	add	r3, r3, #1
   17c84:	mul	r6, r1, r6
   17c88:	cmp	r2, r3
   17c8c:	bne	17c7c <traverse_product@@Base+0x5bc>
   17c90:	cmp	r6, #0
   17c94:	ble	17c74 <traverse_product@@Base+0x5b4>
   17c98:	ldr	r0, [pc, #1072]	; 180d0 <traverse_product@@Base+0xa10>
   17c9c:	bl	1777c <traverse_product@@Base+0xbc>
   17ca0:	mov	r0, r4
   17ca4:	bl	12338 <coda_cursor_goto_first_array_element@plt>
   17ca8:	cmp	r0, #0
   17cac:	beq	17cb4 <traverse_product@@Base+0x5f4>
   17cb0:	bl	18728 <handle_coda_error@@Base>
   17cb4:	ldr	r9, [pc, #1068]	; 180e8 <traverse_product@@Base+0xa28>
   17cb8:	mov	r7, #0
   17cbc:	sub	r8, r6, #1
   17cc0:	mov	r0, r9
   17cc4:	bl	178f4 <traverse_product@@Base+0x234>
   17cc8:	ldr	r3, [r5]
   17ccc:	mov	r1, #0
   17cd0:	mov	r0, r4
   17cd4:	add	r3, r3, #1
   17cd8:	str	r3, [r5]
   17cdc:	bl	1792c <traverse_product@@Base+0x26c>
   17ce0:	ldr	r3, [r5]
   17ce4:	cmp	r8, r7
   17ce8:	sub	r3, r3, #1
   17cec:	str	r3, [r5]
   17cf0:	ble	17d08 <traverse_product@@Base+0x648>
   17cf4:	mov	r0, r4
   17cf8:	bl	12434 <coda_cursor_goto_next_array_element@plt>
   17cfc:	cmp	r0, #0
   17d00:	beq	17d08 <traverse_product@@Base+0x648>
   17d04:	bl	18728 <handle_coda_error@@Base>
   17d08:	add	r7, r7, #1
   17d0c:	cmp	r6, r7
   17d10:	bne	17cc0 <traverse_product@@Base+0x600>
   17d14:	b	17b20 <traverse_product@@Base+0x460>
   17d18:	add	r1, sp, #28
   17d1c:	mov	r0, r4
   17d20:	bl	1238c <coda_cursor_get_read_type@plt>
   17d24:	cmp	r0, #0
   17d28:	beq	17d30 <traverse_product@@Base+0x670>
   17d2c:	bl	18728 <handle_coda_error@@Base>
   17d30:	ldr	r3, [sp, #28]
   17d34:	add	r3, r3, #1
   17d38:	cmp	r3, #13
   17d3c:	ldrls	pc, [pc, r3, lsl #2]
   17d40:	b	17b28 <traverse_product@@Base+0x468>
   17d44:	andeq	r8, r1, r0, lsl r0
   17d48:	strdeq	r7, [r1], -ip
   17d4c:	andeq	r7, r1, r4, lsr #30
   17d50:	strdeq	r7, [r1], -ip
   17d54:	andeq	r7, r1, r4, lsr #30
   17d58:	strdeq	r7, [r1], -ip
   17d5c:	andeq	r7, r1, r4, lsr #30
   17d60:	andeq	r7, r1, r8, asr #30
   17d64:	andeq	r7, r1, r8, ror pc
   17d68:	andeq	r7, r1, r0, lsr #31
   17d6c:	andeq	r7, r1, r0, lsr #31
   17d70:	andeq	r7, r1, ip, ror sp
   17d74:			; <UNDEFINED> instruction: 0x00017db0
   17d78:	andeq	r7, r1, ip, asr #28
   17d7c:	add	r1, sp, #40	; 0x28
   17d80:	mov	r0, r4
   17d84:	bl	12470 <coda_cursor_read_char@plt>
   17d88:	cmp	r0, #0
   17d8c:	beq	17d94 <traverse_product@@Base+0x6d4>
   17d90:	bl	18728 <handle_coda_error@@Base>
   17d94:	ldr	r0, [pc, #848]	; 180ec <traverse_product@@Base+0xa2c>
   17d98:	bl	1777c <traverse_product@@Base+0xbc>
   17d9c:	add	r0, sp, #40	; 0x28
   17da0:	mov	r1, #1
   17da4:	bl	177b0 <traverse_product@@Base+0xf0>
   17da8:	ldr	r0, [pc, #832]	; 180f0 <traverse_product@@Base+0xa30>
   17dac:	b	17c38 <traverse_product@@Base+0x578>
   17db0:	add	r1, sp, #40	; 0x28
   17db4:	mov	r0, r4
   17db8:	bl	123f8 <coda_cursor_get_string_length@plt>
   17dbc:	cmp	r0, #0
   17dc0:	beq	17dc8 <traverse_product@@Base+0x708>
   17dc4:	bl	18728 <handle_coda_error@@Base>
   17dc8:	ldr	r0, [sp, #40]	; 0x28
   17dcc:	add	r0, r0, #1
   17dd0:	bl	12398 <malloc@plt>
   17dd4:	subs	r6, r0, #0
   17dd8:	bne	17e00 <traverse_product@@Base+0x740>
   17ddc:	ldr	r2, [sp, #40]	; 0x28
   17de0:	movw	r3, #361	; 0x169
   17de4:	mvn	r0, #0
   17de8:	ldr	r1, [pc, #772]	; 180f4 <traverse_product@@Base+0xa34>
   17dec:	str	r3, [sp]
   17df0:	ldr	r3, [pc, #768]	; 180f8 <traverse_product@@Base+0xa38>
   17df4:	add	r2, r2, #1
   17df8:	bl	12218 <coda_set_error@plt>
   17dfc:	bl	18728 <handle_coda_error@@Base>
   17e00:	ldr	r2, [sp, #40]	; 0x28
   17e04:	mov	r1, r6
   17e08:	mov	r0, r4
   17e0c:	add	r2, r2, #1
   17e10:	bl	123bc <coda_cursor_read_string@plt>
   17e14:	cmp	r0, #0
   17e18:	beq	17e20 <traverse_product@@Base+0x760>
   17e1c:	bl	18728 <handle_coda_error@@Base>
   17e20:	ldr	r0, [pc, #708]	; 180ec <traverse_product@@Base+0xa2c>
   17e24:	bl	1777c <traverse_product@@Base+0xbc>
   17e28:	mov	r0, r6
   17e2c:	ldr	r1, [sp, #40]	; 0x28
   17e30:	bl	177b0 <traverse_product@@Base+0xf0>
   17e34:	ldr	r0, [pc, #692]	; 180f0 <traverse_product@@Base+0xa30>
   17e38:	ldr	r1, [sp, #40]	; 0x28
   17e3c:	bl	1777c <traverse_product@@Base+0xbc>
   17e40:	mov	r0, r6
   17e44:	bl	12260 <free@plt>
   17e48:	b	17b28 <traverse_product@@Base+0x468>
   17e4c:	add	r1, sp, #40	; 0x28
   17e50:	mov	r0, r4
   17e54:	bl	12578 <coda_cursor_get_bit_size@plt>
   17e58:	cmp	r0, #0
   17e5c:	beq	17e64 <traverse_product@@Base+0x7a4>
   17e60:	bl	18728 <handle_coda_error@@Base>
   17e64:	ldr	r0, [sp, #40]	; 0x28
   17e68:	ldr	ip, [sp, #44]	; 0x2c
   17e6c:	lsr	r2, r0, #3
   17e70:	ands	r1, r0, #7
   17e74:	movne	r1, #1
   17e78:	orr	r2, r2, ip, lsl #29
   17e7c:	adds	r6, r2, r1
   17e80:	mov	r0, r6
   17e84:	bl	12398 <malloc@plt>
   17e88:	subs	r8, r0, #0
   17e8c:	bne	17eb0 <traverse_product@@Base+0x7f0>
   17e90:	mov	r3, #392	; 0x188
   17e94:	mov	r2, r6
   17e98:	ldr	r1, [pc, #596]	; 180f4 <traverse_product@@Base+0xa34>
   17e9c:	mvn	r0, #0
   17ea0:	str	r3, [sp]
   17ea4:	ldr	r3, [pc, #588]	; 180f8 <traverse_product@@Base+0xa38>
   17ea8:	bl	12218 <coda_set_error@plt>
   17eac:	bl	18728 <handle_coda_error@@Base>
   17eb0:	ldrd	r2, [sp, #40]	; 0x28
   17eb4:	mov	r1, r8
   17eb8:	mov	r0, r4
   17ebc:	strd	r2, [sp]
   17ec0:	mov	r2, #0
   17ec4:	mov	r3, #0
   17ec8:	bl	12614 <coda_cursor_read_bits@plt>
   17ecc:	cmp	r0, #0
   17ed0:	beq	17ed8 <traverse_product@@Base+0x818>
   17ed4:	bl	18728 <handle_coda_error@@Base>
   17ed8:	ldr	r0, [pc, #524]	; 180ec <traverse_product@@Base+0xa2c>
   17edc:	bl	1777c <traverse_product@@Base+0xbc>
   17ee0:	mov	r1, r6
   17ee4:	mov	r0, r8
   17ee8:	bl	177b0 <traverse_product@@Base+0xf0>
   17eec:	ldr	r0, [pc, #508]	; 180f0 <traverse_product@@Base+0xa30>
   17ef0:	bl	1777c <traverse_product@@Base+0xbc>
   17ef4:	mov	r0, r8
   17ef8:	b	17e44 <traverse_product@@Base+0x784>
   17efc:	add	r1, sp, #40	; 0x28
   17f00:	mov	r0, r4
   17f04:	bl	125b4 <coda_cursor_read_int32@plt>
   17f08:	cmp	r0, #0
   17f0c:	beq	17f14 <traverse_product@@Base+0x854>
   17f10:	bl	18728 <handle_coda_error@@Base>
   17f14:	ldr	r0, [pc, #480]	; 180fc <traverse_product@@Base+0xa3c>
   17f18:	ldr	r1, [sp, #40]	; 0x28
   17f1c:	bl	1777c <traverse_product@@Base+0xbc>
   17f20:	b	17b28 <traverse_product@@Base+0x468>
   17f24:	add	r1, sp, #40	; 0x28
   17f28:	mov	r0, r4
   17f2c:	bl	12284 <coda_cursor_read_uint32@plt>
   17f30:	cmp	r0, #0
   17f34:	beq	17f3c <traverse_product@@Base+0x87c>
   17f38:	bl	18728 <handle_coda_error@@Base>
   17f3c:	ldr	r0, [pc, #444]	; 18100 <traverse_product@@Base+0xa40>
   17f40:	ldr	r1, [sp, #40]	; 0x28
   17f44:	b	17f1c <traverse_product@@Base+0x85c>
   17f48:	add	r1, sp, #32
   17f4c:	mov	r0, r4
   17f50:	bl	12518 <coda_cursor_read_int64@plt>
   17f54:	cmp	r0, #0
   17f58:	beq	17f60 <traverse_product@@Base+0x8a0>
   17f5c:	bl	18728 <handle_coda_error@@Base>
   17f60:	add	r2, sp, #40	; 0x28
   17f64:	ldrd	r0, [sp, #32]
   17f68:	bl	12620 <coda_str64@plt>
   17f6c:	add	r1, sp, #40	; 0x28
   17f70:	ldr	r0, [pc, #396]	; 18104 <traverse_product@@Base+0xa44>
   17f74:	b	17f1c <traverse_product@@Base+0x85c>
   17f78:	add	r1, sp, #32
   17f7c:	mov	r0, r4
   17f80:	bl	12404 <coda_cursor_read_uint64@plt>
   17f84:	cmp	r0, #0
   17f88:	beq	17f90 <traverse_product@@Base+0x8d0>
   17f8c:	bl	18728 <handle_coda_error@@Base>
   17f90:	add	r2, sp, #40	; 0x28
   17f94:	ldrd	r0, [sp, #32]
   17f98:	bl	12254 <coda_str64u@plt>
   17f9c:	b	17f6c <traverse_product@@Base+0x8ac>
   17fa0:	add	r1, sp, #40	; 0x28
   17fa4:	mov	r0, r4
   17fa8:	bl	12410 <coda_cursor_read_double@plt>
   17fac:	cmp	r0, #0
   17fb0:	beq	17fb8 <traverse_product@@Base+0x8f8>
   17fb4:	bl	18728 <handle_coda_error@@Base>
   17fb8:	ldr	r1, [sp, #28]
   17fbc:	ldrd	r2, [sp, #40]	; 0x28
   17fc0:	cmp	r1, #8
   17fc4:	ldreq	r0, [pc, #316]	; 18108 <traverse_product@@Base+0xa48>
   17fc8:	beq	17fd0 <traverse_product@@Base+0x910>
   17fcc:	ldr	r0, [pc, #312]	; 1810c <traverse_product@@Base+0xa4c>
   17fd0:	bl	1777c <traverse_product@@Base+0xbc>
   17fd4:	b	17b28 <traverse_product@@Base+0x468>
   17fd8:	add	r1, sp, #28
   17fdc:	mov	r0, r4
   17fe0:	bl	1232c <coda_cursor_get_special_type@plt>
   17fe4:	cmp	r0, #0
   17fe8:	beq	17ff0 <traverse_product@@Base+0x930>
   17fec:	bl	18728 <handle_coda_error@@Base>
   17ff0:	ldr	r3, [sp, #28]
   17ff4:	cmp	r3, #3
   17ff8:	ldrls	pc, [pc, r3, lsl #2]
   17ffc:	b	17b28 <traverse_product@@Base+0x468>
   18000:	andeq	r8, r1, r0, lsl r0
   18004:	andeq	r8, r1, r8, lsl r0
   18008:	andeq	r8, r1, r8, lsr r0
   1800c:	muleq	r1, r8, r0
   18010:	ldr	r0, [pc, #248]	; 18110 <traverse_product@@Base+0xa50>
   18014:	b	17c38 <traverse_product@@Base+0x578>
   18018:	add	r1, sp, #40	; 0x28
   1801c:	mov	r0, r4
   18020:	bl	12410 <coda_cursor_read_double@plt>
   18024:	cmp	r0, #0
   18028:	beq	18030 <traverse_product@@Base+0x970>
   1802c:	bl	18728 <handle_coda_error@@Base>
   18030:	ldrd	r2, [sp, #40]	; 0x28
   18034:	b	17fcc <traverse_product@@Base+0x90c>
   18038:	add	r1, sp, #32
   1803c:	mov	r0, r4
   18040:	bl	12410 <coda_cursor_read_double@plt>
   18044:	cmp	r0, #0
   18048:	beq	18050 <traverse_product@@Base+0x990>
   1804c:	bl	18728 <handle_coda_error@@Base>
   18050:	vldr	d0, [sp, #32]
   18054:	bl	1241c <coda_isNaN@plt>
   18058:	cmp	r0, #0
   1805c:	beq	18068 <traverse_product@@Base+0x9a8>
   18060:	ldrd	r2, [sp, #32]
   18064:	b	17fcc <traverse_product@@Base+0x90c>
   18068:	vldr	d0, [sp, #32]
   1806c:	bl	122c0 <coda_isInf@plt>
   18070:	cmp	r0, #0
   18074:	bne	18060 <traverse_product@@Base+0x9a0>
   18078:	add	r1, sp, #40	; 0x28
   1807c:	ldr	r0, [pc, #144]	; 18114 <traverse_product@@Base+0xa54>
   18080:	vldr	d0, [sp, #32]
   18084:	bl	1223c <coda_time_double_to_string@plt>
   18088:	cmp	r0, #0
   1808c:	beq	17f6c <traverse_product@@Base+0x8ac>
   18090:	ldr	r0, [pc, #128]	; 18118 <traverse_product@@Base+0xa58>
   18094:	b	17c38 <traverse_product@@Base+0x578>
   18098:	add	r2, sp, #40	; 0x28
   1809c:	add	r1, sp, #32
   180a0:	mov	r0, r4
   180a4:	bl	124b8 <coda_cursor_read_complex_double_split@plt>
   180a8:	cmp	r0, #0
   180ac:	beq	180b4 <traverse_product@@Base+0x9f4>
   180b0:	bl	18728 <handle_coda_error@@Base>
   180b4:	ldrd	r2, [sp, #40]	; 0x28
   180b8:	ldr	r0, [pc, #92]	; 1811c <traverse_product@@Base+0xa5c>
   180bc:	strd	r2, [sp]
   180c0:	ldrd	r2, [sp, #32]
   180c4:	bl	1777c <traverse_product@@Base+0xbc>
   180c8:	b	17b28 <traverse_product@@Base+0x468>
   180cc:	andeq	fp, r2, ip, asr #3
   180d0:	andeq	sl, r1, r5, lsr r1
   180d4:	strheq	r9, [r1], -r3
   180d8:	strheq	r9, [r1], -sl
   180dc:	andeq	r9, r1, r1, asr #1
   180e0:	andeq	r9, r1, r6, asr #1
   180e4:	andeq	r9, r1, sp, asr #1
   180e8:	andeq	r9, r1, sl, asr #1
   180ec:			; <UNDEFINED> instruction: 0x00018ebe
   180f0:	andeq	sl, r1, r4, lsr r1
   180f4:	andeq	r8, r1, fp, asr #20
   180f8:	andeq	r9, r1, r9, rrx
   180fc:	andeq	r8, r1, sl, lsl #23
   18100:	andeq	r8, r1, pc, lsl #23
   18104:	andeq	sl, r1, lr
   18108:	muleq	r1, r4, fp
   1810c:			; <UNDEFINED> instruction: 0x00018bb2
   18110:	ldrdeq	r9, [r1], -r1
   18114:	andeq	r8, r1, r2, lsr pc
   18118:	andeq	r8, r1, pc, asr #30
   1811c:	ldrdeq	r8, [r1], -r5

00018120 <print_yaml_data@@Base>:
   18120:	push	{r4, lr}
   18124:	sub	sp, sp, #528	; 0x210
   18128:	add	r1, sp, #4
   1812c:	ldr	r3, [pc, #180]	; 181e8 <print_yaml_data@@Base+0xc8>
   18130:	ldr	r4, [pc, #180]	; 181ec <print_yaml_data@@Base+0xcc>
   18134:	str	r0, [r3, #4]
   18138:	ldr	r0, [r4]
   1813c:	bl	12224 <coda_open@plt>
   18140:	cmp	r0, #0
   18144:	beq	1815c <print_yaml_data@@Base+0x3c>
   18148:	bl	125d8 <coda_get_errno@plt>
   1814c:	ldr	r3, [r0]
   18150:	cmn	r3, #21
   18154:	beq	181bc <print_yaml_data@@Base+0x9c>
   18158:	bl	18728 <handle_coda_error@@Base>
   1815c:	add	r0, sp, #8
   18160:	ldr	r1, [sp, #4]
   18164:	bl	12344 <coda_cursor_set_product@plt>
   18168:	cmp	r0, #0
   1816c:	beq	18174 <print_yaml_data@@Base+0x54>
   18170:	bl	18728 <handle_coda_error@@Base>
   18174:	ldr	r3, [pc, #116]	; 181f0 <print_yaml_data@@Base+0xd0>
   18178:	ldr	r1, [r3]
   1817c:	cmp	r1, #0
   18180:	beq	18198 <print_yaml_data@@Base+0x78>
   18184:	add	r0, sp, #8
   18188:	bl	12530 <coda_cursor_goto@plt>
   1818c:	cmp	r0, #0
   18190:	beq	18198 <print_yaml_data@@Base+0x78>
   18194:	bl	18728 <handle_coda_error@@Base>
   18198:	mov	r0, #0
   1819c:	bl	121d0 <coda_set_option_perform_boundary_checks@plt>
   181a0:	mov	r1, #0
   181a4:	add	r0, sp, #8
   181a8:	bl	1792c <traverse_product@@Base+0x26c>
   181ac:	ldr	r0, [sp, #4]
   181b0:	bl	1250c <coda_close@plt>
   181b4:	add	sp, sp, #528	; 0x210
   181b8:	pop	{r4, pc}
   181bc:	mov	r0, #0
   181c0:	bl	1226c <coda_set_option_use_mmap@plt>
   181c4:	add	r1, sp, #4
   181c8:	ldr	r0, [r4]
   181cc:	bl	12224 <coda_open@plt>
   181d0:	mov	r4, r0
   181d4:	mov	r0, #1
   181d8:	bl	1226c <coda_set_option_use_mmap@plt>
   181dc:	cmp	r4, #0
   181e0:	bne	18158 <print_yaml_data@@Base+0x38>
   181e4:	b	1815c <print_yaml_data@@Base+0x3c>
   181e8:	andeq	fp, r2, ip, asr #3
   181ec:	strdeq	fp, [r2], -r0
   181f0:	strheq	ip, [r2], -r0
   181f4:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181f8:	ldr	r0, [pc, #1020]	; 185fc <print_yaml_data@@Base+0x4dc>
   181fc:	bl	12380 <puts@plt>
   18200:	ldr	r0, [pc, #1016]	; 18600 <print_yaml_data@@Base+0x4e0>
   18204:	bl	12380 <puts@plt>
   18208:	ldr	r0, [pc, #1012]	; 18604 <print_yaml_data@@Base+0x4e4>
   1820c:	bl	12380 <puts@plt>
   18210:	ldr	r3, [pc, #1008]	; 18608 <print_yaml_data@@Base+0x4e8>
   18214:	ldr	fp, [pc, #1008]	; 1860c <print_yaml_data@@Base+0x4ec>
   18218:	ldr	sl, [pc, #1008]	; 18610 <print_yaml_data@@Base+0x4f0>
   1821c:	mov	r0, r3
   18220:	ldr	r5, [pc, #1004]	; 18614 <print_yaml_data@@Base+0x4f4>
   18224:	bl	12380 <puts@plt>
   18228:	ldr	r4, [pc, #1000]	; 18618 <print_yaml_data@@Base+0x4f8>
   1822c:	ldr	r0, [pc, #1000]	; 1861c <print_yaml_data@@Base+0x4fc>
   18230:	bl	12380 <puts@plt>
   18234:	ldr	r0, [pc, #996]	; 18620 <print_yaml_data@@Base+0x500>
   18238:	bl	12380 <puts@plt>
   1823c:	mov	r0, fp
   18240:	ldr	r9, [pc, #988]	; 18624 <print_yaml_data@@Base+0x504>
   18244:	bl	12380 <puts@plt>
   18248:	mov	r0, sl
   1824c:	ldr	r8, [pc, #980]	; 18628 <print_yaml_data@@Base+0x508>
   18250:	bl	12380 <puts@plt>
   18254:	mov	r0, r5
   18258:	ldr	r7, [pc, #972]	; 1862c <print_yaml_data@@Base+0x50c>
   1825c:	bl	12380 <puts@plt>
   18260:	mov	r0, r4
   18264:	ldr	r6, [pc, #964]	; 18630 <print_yaml_data@@Base+0x510>
   18268:	bl	12380 <puts@plt>
   1826c:	ldr	r0, [pc, #960]	; 18634 <print_yaml_data@@Base+0x514>
   18270:	bl	12380 <puts@plt>
   18274:	ldr	r0, [pc, #956]	; 18638 <print_yaml_data@@Base+0x518>
   18278:	bl	12380 <puts@plt>
   1827c:	ldr	r0, [pc, #952]	; 1863c <print_yaml_data@@Base+0x51c>
   18280:	bl	12380 <puts@plt>
   18284:	ldr	r0, [pc, #948]	; 18640 <print_yaml_data@@Base+0x520>
   18288:	bl	12380 <puts@plt>
   1828c:	ldr	r0, [pc, #944]	; 18644 <print_yaml_data@@Base+0x524>
   18290:	bl	12380 <puts@plt>
   18294:	ldr	r0, [pc, #940]	; 18648 <print_yaml_data@@Base+0x528>
   18298:	bl	12380 <puts@plt>
   1829c:	ldr	r0, [pc, #936]	; 1864c <print_yaml_data@@Base+0x52c>
   182a0:	bl	12380 <puts@plt>
   182a4:	ldr	r0, [pc, #932]	; 18650 <print_yaml_data@@Base+0x530>
   182a8:	bl	12380 <puts@plt>
   182ac:	ldr	r0, [pc, #928]	; 18654 <print_yaml_data@@Base+0x534>
   182b0:	bl	12380 <puts@plt>
   182b4:	mov	r0, r9
   182b8:	bl	12380 <puts@plt>
   182bc:	mov	r0, r8
   182c0:	bl	12380 <puts@plt>
   182c4:	mov	r0, r7
   182c8:	bl	12380 <puts@plt>
   182cc:	mov	r0, r6
   182d0:	bl	12380 <puts@plt>
   182d4:	mov	r0, #10
   182d8:	bl	12488 <putchar@plt>
   182dc:	ldr	r0, [pc, #884]	; 18658 <print_yaml_data@@Base+0x538>
   182e0:	bl	12380 <puts@plt>
   182e4:	ldr	r0, [pc, #880]	; 1865c <print_yaml_data@@Base+0x53c>
   182e8:	bl	12380 <puts@plt>
   182ec:	ldr	r3, [pc, #788]	; 18608 <print_yaml_data@@Base+0x4e8>
   182f0:	mov	r0, r3
   182f4:	bl	12380 <puts@plt>
   182f8:	mov	r0, fp
   182fc:	bl	12380 <puts@plt>
   18300:	mov	r0, sl
   18304:	bl	12380 <puts@plt>
   18308:	mov	r0, r5
   1830c:	ldr	r5, [pc, #844]	; 18660 <print_yaml_data@@Base+0x540>
   18310:	bl	12380 <puts@plt>
   18314:	mov	r0, r4
   18318:	ldr	r4, [pc, #836]	; 18664 <print_yaml_data@@Base+0x544>
   1831c:	bl	12380 <puts@plt>
   18320:	ldr	r0, [pc, #832]	; 18668 <print_yaml_data@@Base+0x548>
   18324:	bl	12380 <puts@plt>
   18328:	ldr	r0, [pc, #828]	; 1866c <print_yaml_data@@Base+0x54c>
   1832c:	bl	12380 <puts@plt>
   18330:	ldr	r0, [pc, #824]	; 18670 <print_yaml_data@@Base+0x550>
   18334:	bl	12380 <puts@plt>
   18338:	ldr	r0, [pc, #820]	; 18674 <print_yaml_data@@Base+0x554>
   1833c:	bl	12380 <puts@plt>
   18340:	mov	r0, r5
   18344:	bl	12380 <puts@plt>
   18348:	mov	r0, r4
   1834c:	bl	12380 <puts@plt>
   18350:	ldr	r0, [pc, #800]	; 18678 <print_yaml_data@@Base+0x558>
   18354:	bl	12380 <puts@plt>
   18358:	ldr	r0, [pc, #796]	; 1867c <print_yaml_data@@Base+0x55c>
   1835c:	bl	12380 <puts@plt>
   18360:	ldr	r0, [pc, #792]	; 18680 <print_yaml_data@@Base+0x560>
   18364:	bl	12380 <puts@plt>
   18368:	ldr	r0, [pc, #788]	; 18684 <print_yaml_data@@Base+0x564>
   1836c:	bl	12380 <puts@plt>
   18370:	ldr	r0, [pc, #784]	; 18688 <print_yaml_data@@Base+0x568>
   18374:	bl	12380 <puts@plt>
   18378:	ldr	r0, [pc, #780]	; 1868c <print_yaml_data@@Base+0x56c>
   1837c:	bl	12380 <puts@plt>
   18380:	mov	r0, r9
   18384:	bl	12380 <puts@plt>
   18388:	mov	r0, r8
   1838c:	bl	12380 <puts@plt>
   18390:	mov	r0, r7
   18394:	bl	12380 <puts@plt>
   18398:	mov	r0, r6
   1839c:	bl	12380 <puts@plt>
   183a0:	mov	r0, #10
   183a4:	bl	12488 <putchar@plt>
   183a8:	ldr	r0, [pc, #736]	; 18690 <print_yaml_data@@Base+0x570>
   183ac:	bl	12380 <puts@plt>
   183b0:	ldr	r0, [pc, #732]	; 18694 <print_yaml_data@@Base+0x574>
   183b4:	bl	12380 <puts@plt>
   183b8:	ldr	r0, [pc, #728]	; 18698 <print_yaml_data@@Base+0x578>
   183bc:	bl	12380 <puts@plt>
   183c0:	ldr	r2, [pc, #724]	; 1869c <print_yaml_data@@Base+0x57c>
   183c4:	mov	r0, r2
   183c8:	bl	12380 <puts@plt>
   183cc:	ldr	r3, [pc, #716]	; 186a0 <print_yaml_data@@Base+0x580>
   183d0:	mov	r0, r3
   183d4:	bl	12380 <puts@plt>
   183d8:	ldr	r0, [pc, #708]	; 186a4 <print_yaml_data@@Base+0x584>
   183dc:	bl	12380 <puts@plt>
   183e0:	mov	r0, fp
   183e4:	bl	12380 <puts@plt>
   183e8:	mov	r0, sl
   183ec:	bl	12380 <puts@plt>
   183f0:	mov	r0, r5
   183f4:	bl	12380 <puts@plt>
   183f8:	mov	r0, r4
   183fc:	bl	12380 <puts@plt>
   18400:	ldr	r1, [pc, #672]	; 186a8 <print_yaml_data@@Base+0x588>
   18404:	mov	r0, r1
   18408:	bl	12380 <puts@plt>
   1840c:	ldr	r0, [pc, #664]	; 186ac <print_yaml_data@@Base+0x58c>
   18410:	bl	12380 <puts@plt>
   18414:	ldr	r0, [pc, #660]	; 186b0 <print_yaml_data@@Base+0x590>
   18418:	bl	12380 <puts@plt>
   1841c:	mov	r0, r9
   18420:	bl	12380 <puts@plt>
   18424:	mov	r0, r8
   18428:	bl	12380 <puts@plt>
   1842c:	mov	r0, r7
   18430:	bl	12380 <puts@plt>
   18434:	mov	r0, r6
   18438:	bl	12380 <puts@plt>
   1843c:	mov	r0, #10
   18440:	bl	12488 <putchar@plt>
   18444:	ldr	r0, [pc, #616]	; 186b4 <print_yaml_data@@Base+0x594>
   18448:	bl	12380 <puts@plt>
   1844c:	ldr	r0, [pc, #612]	; 186b8 <print_yaml_data@@Base+0x598>
   18450:	bl	12380 <puts@plt>
   18454:	ldr	r0, [pc, #608]	; 186bc <print_yaml_data@@Base+0x59c>
   18458:	bl	12380 <puts@plt>
   1845c:	ldr	r2, [pc, #568]	; 1869c <print_yaml_data@@Base+0x57c>
   18460:	mov	r0, r2
   18464:	bl	12380 <puts@plt>
   18468:	ldr	r3, [pc, #560]	; 186a0 <print_yaml_data@@Base+0x580>
   1846c:	mov	r0, r3
   18470:	bl	12380 <puts@plt>
   18474:	ldr	r0, [pc, #580]	; 186c0 <print_yaml_data@@Base+0x5a0>
   18478:	bl	12380 <puts@plt>
   1847c:	ldr	r0, [pc, #576]	; 186c4 <print_yaml_data@@Base+0x5a4>
   18480:	bl	12380 <puts@plt>
   18484:	mov	r0, fp
   18488:	bl	12380 <puts@plt>
   1848c:	mov	r0, sl
   18490:	bl	12380 <puts@plt>
   18494:	mov	r0, r5
   18498:	bl	12380 <puts@plt>
   1849c:	mov	r0, r4
   184a0:	bl	12380 <puts@plt>
   184a4:	ldr	r1, [pc, #508]	; 186a8 <print_yaml_data@@Base+0x588>
   184a8:	mov	r0, r1
   184ac:	bl	12380 <puts@plt>
   184b0:	ldr	r0, [pc, #500]	; 186ac <print_yaml_data@@Base+0x58c>
   184b4:	bl	12380 <puts@plt>
   184b8:	ldr	r0, [pc, #496]	; 186b0 <print_yaml_data@@Base+0x590>
   184bc:	bl	12380 <puts@plt>
   184c0:	mov	r0, r9
   184c4:	bl	12380 <puts@plt>
   184c8:	mov	r0, r8
   184cc:	bl	12380 <puts@plt>
   184d0:	mov	r0, r7
   184d4:	bl	12380 <puts@plt>
   184d8:	mov	r0, r6
   184dc:	bl	12380 <puts@plt>
   184e0:	mov	r0, #10
   184e4:	bl	12488 <putchar@plt>
   184e8:	ldr	r0, [pc, #472]	; 186c8 <print_yaml_data@@Base+0x5a8>
   184ec:	bl	12380 <puts@plt>
   184f0:	ldr	r0, [pc, #468]	; 186cc <print_yaml_data@@Base+0x5ac>
   184f4:	bl	12380 <puts@plt>
   184f8:	ldr	r0, [pc, #464]	; 186d0 <print_yaml_data@@Base+0x5b0>
   184fc:	bl	12380 <puts@plt>
   18500:	ldr	r0, [pc, #460]	; 186d4 <print_yaml_data@@Base+0x5b4>
   18504:	bl	12380 <puts@plt>
   18508:	ldr	r0, [pc, #456]	; 186d8 <print_yaml_data@@Base+0x5b8>
   1850c:	bl	12380 <puts@plt>
   18510:	ldr	r0, [pc, #452]	; 186dc <print_yaml_data@@Base+0x5bc>
   18514:	bl	12380 <puts@plt>
   18518:	ldr	r0, [pc, #448]	; 186e0 <print_yaml_data@@Base+0x5c0>
   1851c:	bl	12380 <puts@plt>
   18520:	mov	r0, r5
   18524:	bl	12380 <puts@plt>
   18528:	mov	r0, r4
   1852c:	bl	12380 <puts@plt>
   18530:	ldr	r1, [pc, #368]	; 186a8 <print_yaml_data@@Base+0x588>
   18534:	mov	r0, r1
   18538:	bl	12380 <puts@plt>
   1853c:	ldr	r0, [pc, #360]	; 186ac <print_yaml_data@@Base+0x58c>
   18540:	bl	12380 <puts@plt>
   18544:	ldr	r0, [pc, #356]	; 186b0 <print_yaml_data@@Base+0x590>
   18548:	bl	12380 <puts@plt>
   1854c:	ldr	r0, [pc, #400]	; 186e4 <print_yaml_data@@Base+0x5c4>
   18550:	bl	12380 <puts@plt>
   18554:	ldr	r0, [pc, #396]	; 186e8 <print_yaml_data@@Base+0x5c8>
   18558:	bl	12380 <puts@plt>
   1855c:	ldr	r0, [pc, #392]	; 186ec <print_yaml_data@@Base+0x5cc>
   18560:	bl	12380 <puts@plt>
   18564:	ldr	r0, [pc, #388]	; 186f0 <print_yaml_data@@Base+0x5d0>
   18568:	bl	12380 <puts@plt>
   1856c:	ldr	r0, [pc, #384]	; 186f4 <print_yaml_data@@Base+0x5d4>
   18570:	bl	12380 <puts@plt>
   18574:	ldr	r0, [pc, #380]	; 186f8 <print_yaml_data@@Base+0x5d8>
   18578:	bl	12380 <puts@plt>
   1857c:	mov	r0, #10
   18580:	bl	12488 <putchar@plt>
   18584:	ldr	r0, [pc, #368]	; 186fc <print_yaml_data@@Base+0x5dc>
   18588:	bl	12380 <puts@plt>
   1858c:	ldr	r0, [pc, #364]	; 18700 <print_yaml_data@@Base+0x5e0>
   18590:	bl	12380 <puts@plt>
   18594:	mov	r0, #10
   18598:	bl	12488 <putchar@plt>
   1859c:	ldr	r0, [pc, #352]	; 18704 <print_yaml_data@@Base+0x5e4>
   185a0:	bl	12380 <puts@plt>
   185a4:	ldr	r0, [pc, #348]	; 18708 <print_yaml_data@@Base+0x5e8>
   185a8:	bl	12380 <puts@plt>
   185ac:	mov	r0, #10
   185b0:	bl	12488 <putchar@plt>
   185b4:	ldr	r0, [pc, #336]	; 1870c <print_yaml_data@@Base+0x5ec>
   185b8:	bl	12380 <puts@plt>
   185bc:	ldr	r0, [pc, #332]	; 18710 <print_yaml_data@@Base+0x5f0>
   185c0:	bl	12380 <puts@plt>
   185c4:	ldr	r0, [pc, #328]	; 18714 <print_yaml_data@@Base+0x5f4>
   185c8:	bl	12380 <puts@plt>
   185cc:	ldr	r0, [pc, #324]	; 18718 <print_yaml_data@@Base+0x5f8>
   185d0:	bl	12380 <puts@plt>
   185d4:	ldr	r0, [pc, #320]	; 1871c <print_yaml_data@@Base+0x5fc>
   185d8:	bl	12380 <puts@plt>
   185dc:	ldr	r0, [pc, #316]	; 18720 <print_yaml_data@@Base+0x600>
   185e0:	bl	12380 <puts@plt>
   185e4:	ldr	r0, [pc, #312]	; 18724 <print_yaml_data@@Base+0x604>
   185e8:	bl	12380 <puts@plt>
   185ec:	mov	r0, #10
   185f0:	add	sp, sp, #4
   185f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185f8:	b	12488 <putchar@plt>
   185fc:	ldrdeq	r9, [r1], -r7
   18600:	ldrdeq	r9, [r1], -lr
   18604:	andeq	r9, r1, r4, lsr #2
   18608:	andeq	r9, r1, r0, asr r1
   1860c:			; <UNDEFINED> instruction: 0x000191b8
   18610:	ldrdeq	r9, [r1], -lr
   18614:	andeq	r9, r1, r8, lsl r2
   18618:	andeq	r9, r1, r7, asr #4
   1861c:	andeq	r9, r1, r6, ror #2
   18620:	andeq	r9, r1, r1, lsl #3
   18624:	andeq	r9, r1, r3, ror #7
   18628:	andeq	r9, r1, r2, lsl #8
   1862c:	andeq	r9, r1, r2, asr r4
   18630:	andeq	r9, r1, r0, lsr #9
   18634:	andeq	r9, r1, pc, lsl #5
   18638:	andeq	r9, r1, r6, lsr #5
   1863c:	andeq	r9, r1, pc, asr #5
   18640:	andeq	r9, r1, r6, ror #5
   18644:	andeq	r9, r1, r0, lsl r3
   18648:	andeq	r9, r1, sl, lsr #6
   1864c:	andeq	r9, r1, fp, asr r3
   18650:	andeq	r9, r1, r4, ror r3
   18654:			; <UNDEFINED> instruction: 0x000193ba
   18658:			; <UNDEFINED> instruction: 0x000194be
   1865c:	andeq	r9, r1, r6, lsl #10
   18660:	strdeq	r9, [r1], -lr
   18664:	andeq	r9, r1, r2, lsr #12
   18668:	andeq	r9, r1, r2, asr #10
   1866c:	andeq	r9, r1, sl, asr r5
   18670:	muleq	r1, fp, r5
   18674:			; <UNDEFINED> instruction: 0x000195b3
   18678:	andeq	r9, r1, r5, asr r6
   1867c:	andeq	r9, r1, r5, ror r6
   18680:	andeq	r9, r1, r0, asr #13
   18684:	strdeq	r9, [r1], -r8
   18688:	andeq	r9, r1, r4, asr #14
   1868c:	andeq	r9, r1, r5, ror #14
   18690:			; <UNDEFINED> instruction: 0x000197b4
   18694:	strdeq	r9, [r1], -sl
   18698:	andeq	r9, r1, r6, lsr r8
   1869c:	andeq	r9, r1, ip, asr #16
   186a0:	andeq	r9, r1, r9, ror #16
   186a4:			; <UNDEFINED> instruction: 0x000198b0
   186a8:	strdeq	r9, [r1], -fp
   186ac:	andeq	r9, r1, r9, lsl r9
   186b0:	andeq	r9, r1, r1, ror #18
   186b4:	andeq	r9, r1, lr, lsr #19
   186b8:	strdeq	r9, [r1], -r4
   186bc:	andeq	r9, r1, r0, lsr sl
   186c0:	andeq	r9, r1, r6, asr #20
   186c4:	muleq	r1, r2, sl
   186c8:			; <UNDEFINED> instruction: 0x00019ab1
   186cc:	strdeq	r9, [r1], -r9	; <UNPREDICTABLE>
   186d0:	andeq	r9, r1, r3, asr #22
   186d4:	andeq	r9, r1, sp, lsl #23
   186d8:			; <UNDEFINED> instruction: 0x00019bbb
   186dc:	ldrdeq	r9, [r1], -r2
   186e0:	andeq	r9, r1, r2, lsl #24
   186e4:	andeq	r9, r1, r7, lsr ip
   186e8:	andeq	r9, r1, r7, asr ip
   186ec:	andeq	r9, r1, r5, lsr #25
   186f0:	strdeq	r9, [r1], -r0
   186f4:	andeq	r9, r1, pc, lsr #26
   186f8:	andeq	r9, r1, ip, ror sp
   186fc:			; <UNDEFINED> instruction: 0x00019db1
   18700:	andeq	r9, r1, r9, asr #27
   18704:	andeq	r9, r1, r7, ror #27
   18708:	andeq	r9, r1, r2, lsl #28
   1870c:	andeq	r9, r1, r4, lsr lr
   18710:	andeq	r9, r1, r2, lsl #29
   18714:	andeq	r9, r1, fp, asr #29
   18718:	strdeq	r9, [r1], -r6
   1871c:	andeq	r9, r1, r2, asr #30
   18720:	andeq	r9, r1, r8, lsl #31
   18724:	andeq	r9, r1, r7, asr #31

00018728 <handle_coda_error@@Base>:
   18728:	push	{r4, lr}
   1872c:	ldr	r4, [pc, #44]	; 18760 <handle_coda_error@@Base+0x38>
   18730:	ldr	r5, [r4]
   18734:	bl	125d8 <coda_get_errno@plt>
   18738:	ldr	r0, [r0]
   1873c:	bl	12590 <coda_errno_to_string@plt>
   18740:	mov	r2, r0
   18744:	ldr	r1, [pc, #24]	; 18764 <handle_coda_error@@Base+0x3c>
   18748:	mov	r0, r5
   1874c:	bl	12428 <fprintf@plt>
   18750:	ldr	r0, [r4]
   18754:	bl	12230 <fflush@plt>
   18758:	mov	r0, #1
   1875c:	bl	123e0 <exit@plt>
   18760:			; <UNDEFINED> instruction: 0x0002b1b8
   18764:	andeq	sl, r1, r7
   18768:	cmp	r3, #0
   1876c:	cmpeq	r2, #0
   18770:	bne	18794 <handle_coda_error@@Base+0x6c>
   18774:	cmp	r1, #0
   18778:	movlt	r1, #-2147483648	; 0x80000000
   1877c:	movlt	r0, #0
   18780:	blt	18790 <handle_coda_error@@Base+0x68>
   18784:	cmpeq	r0, #0
   18788:	mvnne	r1, #-2147483648	; 0x80000000
   1878c:	mvnne	r0, #0
   18790:	b	1883c <handle_coda_error@@Base+0x114>
   18794:	sub	sp, sp, #8
   18798:	push	{sp, lr}
   1879c:	cmp	r1, #0
   187a0:	blt	187c0 <handle_coda_error@@Base+0x98>
   187a4:	cmp	r3, #0
   187a8:	blt	187f4 <handle_coda_error@@Base+0xcc>
   187ac:	bl	1884c <handle_coda_error@@Base+0x124>
   187b0:	ldr	lr, [sp, #4]
   187b4:	add	sp, sp, #8
   187b8:	pop	{r2, r3}
   187bc:	bx	lr
   187c0:	rsbs	r0, r0, #0
   187c4:	sbc	r1, r1, r1, lsl #1
   187c8:	cmp	r3, #0
   187cc:	blt	18818 <handle_coda_error@@Base+0xf0>
   187d0:	bl	1884c <handle_coda_error@@Base+0x124>
   187d4:	ldr	lr, [sp, #4]
   187d8:	add	sp, sp, #8
   187dc:	pop	{r2, r3}
   187e0:	rsbs	r0, r0, #0
   187e4:	sbc	r1, r1, r1, lsl #1
   187e8:	rsbs	r2, r2, #0
   187ec:	sbc	r3, r3, r3, lsl #1
   187f0:	bx	lr
   187f4:	rsbs	r2, r2, #0
   187f8:	sbc	r3, r3, r3, lsl #1
   187fc:	bl	1884c <handle_coda_error@@Base+0x124>
   18800:	ldr	lr, [sp, #4]
   18804:	add	sp, sp, #8
   18808:	pop	{r2, r3}
   1880c:	rsbs	r0, r0, #0
   18810:	sbc	r1, r1, r1, lsl #1
   18814:	bx	lr
   18818:	rsbs	r2, r2, #0
   1881c:	sbc	r3, r3, r3, lsl #1
   18820:	bl	1884c <handle_coda_error@@Base+0x124>
   18824:	ldr	lr, [sp, #4]
   18828:	add	sp, sp, #8
   1882c:	pop	{r2, r3}
   18830:	rsbs	r2, r2, #0
   18834:	sbc	r3, r3, r3, lsl #1
   18838:	bx	lr
   1883c:	push	{r1, lr}
   18840:	mov	r0, #8
   18844:	bl	121b8 <raise@plt>
   18848:	pop	{r1, pc}
   1884c:	cmp	r1, r3
   18850:	cmpeq	r0, r2
   18854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18858:	mov	r4, r0
   1885c:	movcc	r0, #0
   18860:	mov	r5, r1
   18864:	ldr	lr, [sp, #36]	; 0x24
   18868:	movcc	r1, r0
   1886c:	bcc	18968 <handle_coda_error@@Base+0x240>
   18870:	cmp	r3, #0
   18874:	clzeq	ip, r2
   18878:	clzne	ip, r3
   1887c:	addeq	ip, ip, #32
   18880:	cmp	r5, #0
   18884:	clzeq	r1, r4
   18888:	addeq	r1, r1, #32
   1888c:	clzne	r1, r5
   18890:	sub	ip, ip, r1
   18894:	sub	sl, ip, #32
   18898:	lsl	r9, r3, ip
   1889c:	rsb	fp, ip, #32
   188a0:	orr	r9, r9, r2, lsl sl
   188a4:	orr	r9, r9, r2, lsr fp
   188a8:	lsl	r8, r2, ip
   188ac:	cmp	r5, r9
   188b0:	cmpeq	r4, r8
   188b4:	movcc	r0, #0
   188b8:	movcc	r1, r0
   188bc:	bcc	188d8 <handle_coda_error@@Base+0x1b0>
   188c0:	mov	r0, #1
   188c4:	subs	r4, r4, r8
   188c8:	lsl	r1, r0, sl
   188cc:	orr	r1, r1, r0, lsr fp
   188d0:	lsl	r0, r0, ip
   188d4:	sbc	r5, r5, r9
   188d8:	cmp	ip, #0
   188dc:	beq	18968 <handle_coda_error@@Base+0x240>
   188e0:	lsr	r6, r8, #1
   188e4:	orr	r6, r6, r9, lsl #31
   188e8:	lsr	r7, r9, #1
   188ec:	mov	r2, ip
   188f0:	b	18914 <handle_coda_error@@Base+0x1ec>
   188f4:	subs	r3, r4, r6
   188f8:	sbc	r8, r5, r7
   188fc:	adds	r3, r3, r3
   18900:	adc	r8, r8, r8
   18904:	adds	r4, r3, #1
   18908:	adc	r5, r8, #0
   1890c:	subs	r2, r2, #1
   18910:	beq	18930 <handle_coda_error@@Base+0x208>
   18914:	cmp	r5, r7
   18918:	cmpeq	r4, r6
   1891c:	bcs	188f4 <handle_coda_error@@Base+0x1cc>
   18920:	adds	r4, r4, r4
   18924:	adc	r5, r5, r5
   18928:	subs	r2, r2, #1
   1892c:	bne	18914 <handle_coda_error@@Base+0x1ec>
   18930:	lsr	r3, r4, ip
   18934:	orr	r3, r3, r5, lsl fp
   18938:	lsr	r2, r5, ip
   1893c:	orr	r3, r3, r5, lsr sl
   18940:	adds	r0, r0, r4
   18944:	mov	r4, r3
   18948:	lsl	r3, r2, ip
   1894c:	orr	r3, r3, r4, lsl sl
   18950:	lsl	ip, r4, ip
   18954:	orr	r3, r3, r4, lsr fp
   18958:	adc	r1, r1, r5
   1895c:	subs	r0, r0, ip
   18960:	mov	r5, r2
   18964:	sbc	r1, r1, r3
   18968:	cmp	lr, #0
   1896c:	strdne	r4, [lr]
   18970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018974 <__libc_csu_init@@Base>:
   18974:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18978:	mov	r7, r0
   1897c:	ldr	r6, [pc, #72]	; 189cc <__libc_csu_init@@Base+0x58>
   18980:	ldr	r5, [pc, #72]	; 189d0 <__libc_csu_init@@Base+0x5c>
   18984:	add	r6, pc, r6
   18988:	add	r5, pc, r5
   1898c:	sub	r6, r6, r5
   18990:	mov	r8, r1
   18994:	mov	r9, r2
   18998:	bl	12174 <coda_cursor_get_byte_size@plt-0x20>
   1899c:	asrs	r6, r6, #2
   189a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   189a4:	mov	r4, #0
   189a8:	add	r4, r4, #1
   189ac:	ldr	r3, [r5], #4
   189b0:	mov	r2, r9
   189b4:	mov	r1, r8
   189b8:	mov	r0, r7
   189bc:	blx	r3
   189c0:	cmp	r6, r4
   189c4:	bne	189a8 <__libc_csu_init@@Base+0x34>
   189c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   189cc:	andeq	r2, r1, r0, ror r5
   189d0:	andeq	r2, r1, r8, ror #10

000189d4 <__libc_csu_fini@@Base>:
   189d4:	bx	lr

Disassembly of section .fini:

000189d8 <.fini>:
   189d8:	push	{r3, lr}
   189dc:	pop	{r3, pc}
