
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r3, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #77824	; 0x13000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #77824	; 0x13000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #77824	; 0x13000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #77824	; 0x13000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #77824	; 0x13000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #77824	; 0x13000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #77824	; 0x13000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #77824	; 0x13000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #77824	; 0x13000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #77824	; 0x13000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #77824	; 0x13000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #77824	; 0x13000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	ldrdeq	r4, [r1], -ip
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r4, r1, ip, ror sl
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r5, r2, r8, asr #32
   11fa4:	andeq	r5, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r5, r2, r8, asr #32
   11fdc:	andeq	r5, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r5, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{fp, lr}
   12014:	mov	fp, sp
   12018:	bl	12734 <table_get_major_version@@Base>
   1201c:	mov	r1, r0
   12020:	movw	r0, #19180	; 0x4aec
   12024:	movt	r0, #1
   12028:	bl	11e9c <printf@plt>
   1202c:	bl	1273c <table_get_minor_version@@Base>
   12030:	mov	r1, r0
   12034:	movw	r0, #19205	; 0x4b05
   12038:	movt	r0, #1
   1203c:	bl	11e9c <printf@plt>
   12040:	bl	12744 <table_get_patch_version@@Base>
   12044:	mov	r1, r0
   12048:	movw	r0, #19230	; 0x4b1e
   1204c:	movt	r0, #1
   12050:	bl	11e9c <printf@plt>
   12054:	bl	1274c <table_get_version@@Base>
   12058:	mov	r1, r0
   1205c:	movw	r0, #19255	; 0x4b37
   12060:	movt	r0, #1
   12064:	bl	11e9c <printf@plt>
   12068:	mov	r0, #0
   1206c:	pop	{fp, pc}

00012070 <table_new@@Base>:
   12070:	push	{r4, sl, fp, lr}
   12074:	add	fp, sp, #8
   12078:	mov	r0, #56	; 0x38
   1207c:	bl	11ecc <malloc@plt>
   12080:	mov	r4, r0
   12084:	bl	12090 <table_init@@Base>
   12088:	mov	r0, r4
   1208c:	pop	{r4, sl, fp, pc}

00012090 <table_init@@Base>:
   12090:	push	{r4, sl, fp, lr}
   12094:	add	fp, sp, #8
   12098:	mov	r4, r0
   1209c:	bl	12110 <table_destroy@@Base+0x40>
   120a0:	mov	r0, r4
   120a4:	bl	12128 <table_destroy@@Base+0x58>
   120a8:	mov	r0, r4
   120ac:	pop	{r4, sl, fp, lr}
   120b0:	b	12144 <table_destroy@@Base+0x74>

000120b4 <table_delete@@Base>:
   120b4:	push	{r4, sl, fp, lr}
   120b8:	add	fp, sp, #8
   120bc:	mov	r4, r0
   120c0:	bl	120d0 <table_destroy@@Base>
   120c4:	mov	r0, r4
   120c8:	pop	{r4, sl, fp, lr}
   120cc:	b	11ea8 <free@plt>

000120d0 <table_destroy@@Base>:
   120d0:	cmp	r0, #0
   120d4:	bxeq	lr
   120d8:	push	{r4, sl, fp, lr}
   120dc:	add	fp, sp, #8
   120e0:	mov	r4, r0
   120e4:	mvn	r1, #0
   120e8:	mvn	r2, #0
   120ec:	mov	r3, #64	; 0x40
   120f0:	bl	129dc <table_notify@@Base>
   120f4:	mov	r0, r4
   120f8:	bl	12164 <table_destroy@@Base+0x94>
   120fc:	mov	r0, r4
   12100:	bl	121b4 <table_destroy@@Base+0xe4>
   12104:	mov	r0, r4
   12108:	pop	{r4, sl, fp, lr}
   1210c:	b	12204 <table_destroy@@Base+0x134>
   12110:	mov	r1, #0
   12114:	mov	r2, #10
   12118:	str	r1, [r0]
   1211c:	stmib	r0, {r1, r2}
   12120:	str	r1, [r0, #12]
   12124:	bx	lr
   12128:	mov	r1, #0
   1212c:	mov	r2, #20
   12130:	str	r1, [r0, #16]
   12134:	str	r1, [r0, #20]
   12138:	str	r2, [r0, #24]
   1213c:	str	r1, [r0, #28]
   12140:	bx	lr
   12144:	mov	r1, #10
   12148:	vmov.i32	q8, #0	; 0x00000000
   1214c:	mov	r2, #0
   12150:	str	r1, [r0, #48]	; 0x30
   12154:	str	r2, [r0, #52]	; 0x34
   12158:	add	r0, r0, #32
   1215c:	vst1.32	{d16-d17}, [r0]
   12160:	bx	lr
   12164:	push	{r4, r5, r6, sl, fp, lr}
   12168:	add	fp, sp, #16
   1216c:	mov	r4, r0
   12170:	bl	13804 <table_get_row_length@@Base>
   12174:	cmp	r0, #1
   12178:	blt	1219c <table_destroy@@Base+0xcc>
   1217c:	mov	r5, r0
   12180:	mov	r6, #0
   12184:	mov	r0, r4
   12188:	mov	r1, r6
   1218c:	bl	1379c <table_row_destroy@@Base>
   12190:	add	r6, r6, #1
   12194:	cmp	r5, r6
   12198:	bne	12184 <table_destroy@@Base+0xb4>
   1219c:	ldr	r0, [r4, #16]
   121a0:	cmp	r0, #0
   121a4:	beq	121b0 <table_destroy@@Base+0xe0>
   121a8:	pop	{r4, r5, r6, sl, fp, lr}
   121ac:	b	11ea8 <free@plt>
   121b0:	pop	{r4, r5, r6, sl, fp, pc}
   121b4:	push	{r4, r5, r6, sl, fp, lr}
   121b8:	add	fp, sp, #16
   121bc:	mov	r4, r0
   121c0:	bl	12ad8 <table_get_column_length@@Base>
   121c4:	cmp	r0, #1
   121c8:	blt	121ec <table_destroy@@Base+0x11c>
   121cc:	mov	r5, r0
   121d0:	mov	r6, #0
   121d4:	mov	r0, r4
   121d8:	mov	r1, r6
   121dc:	bl	12ab8 <table_column_destroy@@Base>
   121e0:	add	r6, r6, #1
   121e4:	cmp	r5, r6
   121e8:	bne	121d4 <table_destroy@@Base+0x104>
   121ec:	ldr	r0, [r4]
   121f0:	cmp	r0, #0
   121f4:	beq	12200 <table_destroy@@Base+0x130>
   121f8:	pop	{r4, r5, r6, sl, fp, lr}
   121fc:	b	11ea8 <free@plt>
   12200:	pop	{r4, r5, r6, sl, fp, pc}
   12204:	push	{r4, sl, fp, lr}
   12208:	add	fp, sp, #8
   1220c:	mov	r4, r0
   12210:	ldr	r0, [r0, #36]	; 0x24
   12214:	cmp	r0, #0
   12218:	beq	12220 <table_destroy@@Base+0x150>
   1221c:	bl	11ea8 <free@plt>
   12220:	ldr	r0, [r4, #40]	; 0x28
   12224:	cmp	r0, #0
   12228:	beq	12230 <table_destroy@@Base+0x160>
   1222c:	bl	11ea8 <free@plt>
   12230:	ldr	r0, [r4, #44]	; 0x2c
   12234:	cmp	r0, #0
   12238:	popeq	{r4, sl, fp, pc}
   1223c:	pop	{r4, sl, fp, lr}
   12240:	b	11ea8 <free@plt>

00012244 <table_dupe@@Base>:
   12244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12248:	add	fp, sp, #28
   1224c:	sub	sp, sp, #12
   12250:	mov	r4, r0
   12254:	bl	13804 <table_get_row_length@@Base>
   12258:	mov	r8, r0
   1225c:	mov	r0, r4
   12260:	bl	12ad8 <table_get_column_length@@Base>
   12264:	mov	r6, r0
   12268:	bl	12070 <table_new@@Base>
   1226c:	mov	sl, r0
   12270:	cmp	r6, #1
   12274:	blt	122b4 <table_dupe@@Base+0x70>
   12278:	mov	r5, #0
   1227c:	mov	r0, r4
   12280:	mov	r1, r5
   12284:	bl	12b38 <table_get_column_name@@Base>
   12288:	mov	r7, r0
   1228c:	mov	r0, r4
   12290:	mov	r1, r5
   12294:	bl	12b4c <table_get_column_data_type@@Base>
   12298:	mov	r2, r0
   1229c:	mov	r0, sl
   122a0:	mov	r1, r7
   122a4:	bl	12b60 <table_add_column@@Base>
   122a8:	add	r5, r5, #1
   122ac:	cmp	r6, r5
   122b0:	bne	1227c <table_dupe@@Base+0x38>
   122b4:	cmp	r8, #1
   122b8:	blt	12728 <table_dupe@@Base+0x4e4>
   122bc:	mov	r5, #0
   122c0:	add	r9, sp, #8
   122c4:	b	122d4 <table_dupe@@Base+0x90>
   122c8:	add	r5, r5, #1
   122cc:	cmp	r5, r8
   122d0:	beq	12728 <table_dupe@@Base+0x4e4>
   122d4:	mov	r0, sl
   122d8:	bl	1380c <table_add_row@@Base>
   122dc:	cmp	r6, #1
   122e0:	blt	122c8 <table_dupe@@Base+0x84>
   122e4:	mov	r7, #0
   122e8:	b	12320 <table_dupe@@Base+0xdc>
   122ec:	mov	r0, r4
   122f0:	mov	r1, r5
   122f4:	mov	r2, r7
   122f8:	bl	13764 <table_get_ptr@@Base>
   122fc:	str	r0, [sp, #8]
   12300:	mov	r0, sl
   12304:	mov	r1, r5
   12308:	mov	r2, r7
   1230c:	mov	r3, r9
   12310:	bl	14004 <table_set_ptr@@Base>
   12314:	add	r7, r7, #1
   12318:	cmp	r6, r7
   1231c:	beq	122c8 <table_dupe@@Base+0x84>
   12320:	mov	r0, r4
   12324:	mov	r1, r7
   12328:	bl	12b4c <table_get_column_data_type@@Base>
   1232c:	cmp	r0, #23
   12330:	bhi	12314 <table_dupe@@Base+0xd0>
   12334:	add	r1, pc, #0
   12338:	ldr	pc, [r1, r0, lsl #2]
   1233c:	muleq	r1, ip, r3
   12340:	andeq	r2, r1, r4, asr #7
   12344:	andeq	r2, r1, ip, ror #7
   12348:	andeq	r2, r1, r4, lsl r4
   1234c:	andeq	r2, r1, ip, lsr r4
   12350:	andeq	r2, r1, r4, ror #8
   12354:	andeq	r2, r1, ip, lsl #9
   12358:			; <UNDEFINED> instruction: 0x000124b4
   1235c:	ldrdeq	r2, [r1], -ip
   12360:	andeq	r2, r1, r4, lsl #10
   12364:	andeq	r2, r1, ip, lsr #10
   12368:	andeq	r2, r1, r4, asr r5
   1236c:	andeq	r2, r1, ip, ror r5
   12370:	andeq	r2, r1, r4, lsr #11
   12374:	andeq	r2, r1, ip, asr #11
   12378:	strdeq	r2, [r1], -r4
   1237c:	andeq	r2, r1, ip, lsl r6
   12380:	andeq	r2, r1, r0, asr #12
   12384:	andeq	r2, r1, r4, ror #12
   12388:	andeq	r2, r1, r8, lsl #13
   1238c:			; <UNDEFINED> instruction: 0x000126b0
   12390:	ldrdeq	r2, [r1], -r8
   12394:	andeq	r2, r1, r0, lsl #14
   12398:	andeq	r2, r1, ip, ror #5
   1239c:	mov	r0, r4
   123a0:	mov	r1, r5
   123a4:	mov	r2, r7
   123a8:	bl	135bc <table_get_int@@Base>
   123ac:	mov	r3, r0
   123b0:	mov	r0, sl
   123b4:	mov	r1, r5
   123b8:	mov	r2, r7
   123bc:	bl	13c6c <table_set_int@@Base>
   123c0:	b	12314 <table_dupe@@Base+0xd0>
   123c4:	mov	r0, r4
   123c8:	mov	r1, r5
   123cc:	mov	r2, r7
   123d0:	bl	135d0 <table_get_uint@@Base>
   123d4:	mov	r3, r0
   123d8:	mov	r0, sl
   123dc:	mov	r1, r5
   123e0:	mov	r2, r7
   123e4:	bl	13c94 <table_set_uint@@Base>
   123e8:	b	12314 <table_dupe@@Base+0xd0>
   123ec:	mov	r0, r4
   123f0:	mov	r1, r5
   123f4:	mov	r2, r7
   123f8:	bl	135e4 <table_get_int8@@Base>
   123fc:	mov	r3, r0
   12400:	mov	r0, sl
   12404:	mov	r1, r5
   12408:	mov	r2, r7
   1240c:	bl	13cbc <table_set_int8@@Base>
   12410:	b	12314 <table_dupe@@Base+0xd0>
   12414:	mov	r0, r4
   12418:	mov	r1, r5
   1241c:	mov	r2, r7
   12420:	bl	135f8 <table_get_uint8@@Base>
   12424:	mov	r3, r0
   12428:	mov	r0, sl
   1242c:	mov	r1, r5
   12430:	mov	r2, r7
   12434:	bl	13ce4 <table_set_uint8@@Base>
   12438:	b	12314 <table_dupe@@Base+0xd0>
   1243c:	mov	r0, r4
   12440:	mov	r1, r5
   12444:	mov	r2, r7
   12448:	bl	1360c <table_get_int16@@Base>
   1244c:	mov	r3, r0
   12450:	mov	r0, sl
   12454:	mov	r1, r5
   12458:	mov	r2, r7
   1245c:	bl	13d0c <table_set_int16@@Base>
   12460:	b	12314 <table_dupe@@Base+0xd0>
   12464:	mov	r0, r4
   12468:	mov	r1, r5
   1246c:	mov	r2, r7
   12470:	bl	13620 <table_get_uint16@@Base>
   12474:	mov	r3, r0
   12478:	mov	r0, sl
   1247c:	mov	r1, r5
   12480:	mov	r2, r7
   12484:	bl	13d34 <table_set_uint16@@Base>
   12488:	b	12314 <table_dupe@@Base+0xd0>
   1248c:	mov	r0, r4
   12490:	mov	r1, r5
   12494:	mov	r2, r7
   12498:	bl	13634 <table_get_int32@@Base>
   1249c:	mov	r3, r0
   124a0:	mov	r0, sl
   124a4:	mov	r1, r5
   124a8:	mov	r2, r7
   124ac:	bl	13d5c <table_set_int32@@Base>
   124b0:	b	12314 <table_dupe@@Base+0xd0>
   124b4:	mov	r0, r4
   124b8:	mov	r1, r5
   124bc:	mov	r2, r7
   124c0:	bl	13648 <table_get_uint32@@Base>
   124c4:	mov	r3, r0
   124c8:	mov	r0, sl
   124cc:	mov	r1, r5
   124d0:	mov	r2, r7
   124d4:	bl	13d84 <table_set_uint32@@Base>
   124d8:	b	12314 <table_dupe@@Base+0xd0>
   124dc:	mov	r0, r4
   124e0:	mov	r1, r5
   124e4:	mov	r2, r7
   124e8:	bl	1365c <table_get_int64@@Base>
   124ec:	stm	sp, {r0, r1}
   124f0:	mov	r0, sl
   124f4:	mov	r1, r5
   124f8:	mov	r2, r7
   124fc:	bl	13dac <table_set_int64@@Base>
   12500:	b	12314 <table_dupe@@Base+0xd0>
   12504:	mov	r0, r4
   12508:	mov	r1, r5
   1250c:	mov	r2, r7
   12510:	bl	13670 <table_get_uint64@@Base>
   12514:	stm	sp, {r0, r1}
   12518:	mov	r0, sl
   1251c:	mov	r1, r5
   12520:	mov	r2, r7
   12524:	bl	13de0 <table_set_uint64@@Base>
   12528:	b	12314 <table_dupe@@Base+0xd0>
   1252c:	mov	r0, r4
   12530:	mov	r1, r5
   12534:	mov	r2, r7
   12538:	bl	13684 <table_get_short@@Base>
   1253c:	mov	r3, r0
   12540:	mov	r0, sl
   12544:	mov	r1, r5
   12548:	mov	r2, r7
   1254c:	bl	13e14 <table_set_short@@Base>
   12550:	b	12314 <table_dupe@@Base+0xd0>
   12554:	mov	r0, r4
   12558:	mov	r1, r5
   1255c:	mov	r2, r7
   12560:	bl	13698 <table_get_ushort@@Base>
   12564:	mov	r3, r0
   12568:	mov	r0, sl
   1256c:	mov	r1, r5
   12570:	mov	r2, r7
   12574:	bl	13e3c <table_set_ushort@@Base>
   12578:	b	12314 <table_dupe@@Base+0xd0>
   1257c:	mov	r0, r4
   12580:	mov	r1, r5
   12584:	mov	r2, r7
   12588:	bl	136ac <table_get_long@@Base>
   1258c:	mov	r3, r0
   12590:	mov	r0, sl
   12594:	mov	r1, r5
   12598:	mov	r2, r7
   1259c:	bl	13e64 <table_set_long@@Base>
   125a0:	b	12314 <table_dupe@@Base+0xd0>
   125a4:	mov	r0, r4
   125a8:	mov	r1, r5
   125ac:	mov	r2, r7
   125b0:	bl	136c0 <table_get_ulong@@Base>
   125b4:	mov	r3, r0
   125b8:	mov	r0, sl
   125bc:	mov	r1, r5
   125c0:	mov	r2, r7
   125c4:	bl	13e8c <table_set_ulong@@Base>
   125c8:	b	12314 <table_dupe@@Base+0xd0>
   125cc:	mov	r0, r4
   125d0:	mov	r1, r5
   125d4:	mov	r2, r7
   125d8:	bl	136d4 <table_get_llong@@Base>
   125dc:	stm	sp, {r0, r1}
   125e0:	mov	r0, sl
   125e4:	mov	r1, r5
   125e8:	mov	r2, r7
   125ec:	bl	13eb4 <table_set_llong@@Base>
   125f0:	b	12314 <table_dupe@@Base+0xd0>
   125f4:	mov	r0, r4
   125f8:	mov	r1, r5
   125fc:	mov	r2, r7
   12600:	bl	136e8 <table_get_ullong@@Base>
   12604:	stm	sp, {r0, r1}
   12608:	mov	r0, sl
   1260c:	mov	r1, r5
   12610:	mov	r2, r7
   12614:	bl	13ee8 <table_set_ullong@@Base>
   12618:	b	12314 <table_dupe@@Base+0xd0>
   1261c:	mov	r0, r4
   12620:	mov	r1, r5
   12624:	mov	r2, r7
   12628:	bl	136fc <table_get_float@@Base>
   1262c:	mov	r0, sl
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	13f1c <table_set_float@@Base>
   1263c:	b	12314 <table_dupe@@Base+0xd0>
   12640:	mov	r0, r4
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	13710 <table_get_double@@Base>
   12650:	mov	r0, sl
   12654:	mov	r1, r5
   12658:	mov	r2, r7
   1265c:	bl	13f44 <table_set_double@@Base>
   12660:	b	12314 <table_dupe@@Base+0xd0>
   12664:	mov	r0, r4
   12668:	mov	r1, r5
   1266c:	mov	r2, r7
   12670:	bl	13724 <table_get_ldouble@@Base>
   12674:	mov	r0, sl
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	13f6c <table_set_ldouble@@Base>
   12684:	b	12314 <table_dupe@@Base+0xd0>
   12688:	mov	r0, r4
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	13738 <table_get_char@@Base>
   12698:	mov	r3, r0
   1269c:	mov	r0, sl
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	13fb4 <table_set_char@@Base>
   126ac:	b	12314 <table_dupe@@Base+0xd0>
   126b0:	mov	r0, r4
   126b4:	mov	r1, r5
   126b8:	mov	r2, r7
   126bc:	bl	1374c <table_get_uchar@@Base>
   126c0:	mov	r3, r0
   126c4:	mov	r0, sl
   126c8:	mov	r1, r5
   126cc:	mov	r2, r7
   126d0:	bl	13fdc <table_set_uchar@@Base>
   126d4:	b	12314 <table_dupe@@Base+0xd0>
   126d8:	mov	r0, r4
   126dc:	mov	r1, r5
   126e0:	mov	r2, r7
   126e4:	bl	13760 <table_get_string@@Base>
   126e8:	mov	r3, r0
   126ec:	mov	r0, sl
   126f0:	mov	r1, r5
   126f4:	mov	r2, r7
   126f8:	bl	13f94 <table_set_string@@Base>
   126fc:	b	12314 <table_dupe@@Base+0xd0>
   12700:	mov	r0, r4
   12704:	mov	r1, r5
   12708:	mov	r2, r7
   1270c:	bl	135a8 <table_get_bool@@Base>
   12710:	mov	r3, r0
   12714:	mov	r0, sl
   12718:	mov	r1, r5
   1271c:	mov	r2, r7
   12720:	bl	13c44 <table_set_bool@@Base>
   12724:	b	12314 <table_dupe@@Base+0xd0>
   12728:	mov	r0, sl
   1272c:	sub	sp, fp, #28
   12730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012734 <table_get_major_version@@Base>:
   12734:	mov	r0, #0
   12738:	bx	lr

0001273c <table_get_minor_version@@Base>:
   1273c:	mov	r0, #0
   12740:	bx	lr

00012744 <table_get_patch_version@@Base>:
   12744:	mov	r0, #0
   12748:	bx	lr

0001274c <table_get_version@@Base>:
   1274c:	movw	r0, #19254	; 0x4b36
   12750:	movt	r0, #1
   12754:	bx	lr

00012758 <table_get_callback_length@@Base>:
   12758:	ldr	r0, [r0, #32]
   1275c:	bx	lr

00012760 <table_register_callback@@Base>:
   12760:	push	{r4, r5, r6, r7, fp, lr}
   12764:	add	fp, sp, #16
   12768:	sub	sp, sp, #8
   1276c:	mov	r5, r3
   12770:	mov	r6, r2
   12774:	mov	r7, r1
   12778:	mov	r4, r0
   1277c:	bl	127f0 <table_register_callback@@Base+0x90>
   12780:	cmp	r0, #1
   12784:	blt	127a0 <table_register_callback@@Base+0x40>
   12788:	ldr	r1, [r4, #44]	; 0x2c
   1278c:	ldr	r2, [r1, r0, lsl #2]
   12790:	orr	r2, r2, r5
   12794:	str	r2, [r1, r0, lsl #2]
   12798:	sub	sp, fp, #16
   1279c:	pop	{r4, r5, r6, r7, fp, pc}
   127a0:	ldr	r0, [r4, #32]
   127a4:	ldr	r1, [r4, #48]	; 0x30
   127a8:	udiv	r2, r0, r1
   127ac:	mls	r0, r2, r1, r0
   127b0:	cmp	r0, #0
   127b4:	moveq	r0, r4
   127b8:	bleq	1284c <table_register_callback@@Base+0xec>
   127bc:	mov	r0, r4
   127c0:	bl	12758 <table_get_callback_length@@Base>
   127c4:	mov	r1, r0
   127c8:	str	r5, [sp]
   127cc:	mov	r0, r4
   127d0:	mov	r2, r7
   127d4:	mov	r3, r6
   127d8:	bl	128a4 <table_register_callback@@Base+0x144>
   127dc:	ldr	r0, [r4, #32]
   127e0:	add	r0, r0, #1
   127e4:	str	r0, [r4, #32]
   127e8:	sub	sp, fp, #16
   127ec:	pop	{r4, r5, r6, r7, fp, pc}
   127f0:	push	{r4, sl, fp, lr}
   127f4:	add	fp, sp, #8
   127f8:	mov	ip, r0
   127fc:	ldr	r3, [r0, #32]
   12800:	mvn	r0, #0
   12804:	cmp	r3, #1
   12808:	blt	12848 <table_register_callback@@Base+0xe8>
   1280c:	ldr	lr, [ip, #36]	; 0x24
   12810:	mov	r3, #0
   12814:	b	12828 <table_register_callback@@Base+0xc8>
   12818:	add	r3, r3, #1
   1281c:	ldr	r4, [ip, #32]
   12820:	cmp	r3, r4
   12824:	bge	12848 <table_register_callback@@Base+0xe8>
   12828:	ldr	r4, [lr, r3, lsl #2]
   1282c:	cmp	r4, r1
   12830:	bne	12818 <table_register_callback@@Base+0xb8>
   12834:	ldr	r4, [ip, #40]	; 0x28
   12838:	ldr	r4, [r4, r3, lsl #2]
   1283c:	cmp	r4, r2
   12840:	bne	12818 <table_register_callback@@Base+0xb8>
   12844:	mov	r0, r3
   12848:	pop	{r4, sl, fp, pc}
   1284c:	push	{r4, sl, fp, lr}
   12850:	add	fp, sp, #8
   12854:	mov	r4, r0
   12858:	ldr	r0, [r0, #36]	; 0x24
   1285c:	ldr	r1, [r4, #48]	; 0x30
   12860:	ldr	r2, [r4, #52]	; 0x34
   12864:	add	r1, r2, r1
   12868:	str	r1, [r4, #52]	; 0x34
   1286c:	lsl	r1, r1, #2
   12870:	bl	11eb4 <realloc@plt>
   12874:	str	r0, [r4, #36]	; 0x24
   12878:	ldr	r0, [r4, #40]	; 0x28
   1287c:	ldr	r1, [r4, #52]	; 0x34
   12880:	lsl	r1, r1, #2
   12884:	bl	11eb4 <realloc@plt>
   12888:	str	r0, [r4, #40]	; 0x28
   1288c:	ldr	r0, [r4, #44]	; 0x2c
   12890:	ldr	r1, [r4, #52]	; 0x34
   12894:	lsl	r1, r1, #2
   12898:	bl	11eb4 <realloc@plt>
   1289c:	str	r0, [r4, #44]	; 0x2c
   128a0:	pop	{r4, sl, fp, pc}
   128a4:	ldr	ip, [r0, #36]	; 0x24
   128a8:	str	r2, [ip, r1, lsl #2]
   128ac:	ldr	r2, [r0, #40]	; 0x28
   128b0:	str	r3, [r2, r1, lsl #2]
   128b4:	ldr	r0, [r0, #44]	; 0x2c
   128b8:	ldr	r2, [sp]
   128bc:	str	r2, [r0, r1, lsl #2]
   128c0:	bx	lr

000128c4 <table_unregister_callback@@Base>:
   128c4:	push	{r4, sl, fp, lr}
   128c8:	add	fp, sp, #8
   128cc:	mov	r4, r0
   128d0:	bl	127f0 <table_register_callback@@Base+0x90>
   128d4:	cmn	r0, #1
   128d8:	popeq	{r4, sl, fp, pc}
   128dc:	ldr	r1, [r4, #32]
   128e0:	sub	r2, r1, #1
   128e4:	cmp	r0, r2
   128e8:	bge	12930 <table_unregister_callback@@Base+0x6c>
   128ec:	mov	r1, #4
   128f0:	add	r1, r1, r0, lsl #2
   128f4:	ldr	r2, [r4, #36]	; 0x24
   128f8:	ldr	r3, [r2, r1]!
   128fc:	str	r3, [r2, #-4]
   12900:	ldr	r2, [r4, #40]	; 0x28
   12904:	ldr	r3, [r2, r1]!
   12908:	str	r3, [r2, #-4]
   1290c:	ldr	r2, [r4, #44]	; 0x2c
   12910:	ldr	r3, [r2, r1]!
   12914:	str	r3, [r2, #-4]
   12918:	add	r1, r1, #4
   1291c:	add	r0, r0, #1
   12920:	ldr	r2, [r4, #32]
   12924:	sub	r2, r2, #1
   12928:	cmp	r0, r2
   1292c:	blt	128f4 <table_unregister_callback@@Base+0x30>
   12930:	str	r2, [r4, #32]
   12934:	ldr	r0, [r4, #48]	; 0x30
   12938:	udiv	r1, r2, r0
   1293c:	mls	r0, r1, r0, r2
   12940:	cmp	r0, #0
   12944:	beq	1294c <table_unregister_callback@@Base+0x88>
   12948:	pop	{r4, sl, fp, pc}
   1294c:	mov	r0, r4
   12950:	pop	{r4, sl, fp, lr}
   12954:	b	12958 <table_unregister_callback@@Base+0x94>
   12958:	push	{r4, sl, fp, lr}
   1295c:	add	fp, sp, #8
   12960:	mov	r4, r0
   12964:	ldr	r0, [r0, #36]	; 0x24
   12968:	ldr	r1, [r4, #48]	; 0x30
   1296c:	ldr	r2, [r4, #52]	; 0x34
   12970:	subs	r1, r2, r1
   12974:	str	r1, [r4, #52]	; 0x34
   12978:	beq	129b4 <table_unregister_callback@@Base+0xf0>
   1297c:	lsl	r1, r1, #2
   12980:	bl	11eb4 <realloc@plt>
   12984:	str	r0, [r4, #36]	; 0x24
   12988:	ldr	r0, [r4, #40]	; 0x28
   1298c:	ldr	r1, [r4, #52]	; 0x34
   12990:	lsl	r1, r1, #2
   12994:	bl	11eb4 <realloc@plt>
   12998:	str	r0, [r4, #40]	; 0x28
   1299c:	ldr	r0, [r4, #44]	; 0x2c
   129a0:	ldr	r1, [r4, #52]	; 0x34
   129a4:	lsl	r1, r1, #2
   129a8:	bl	11eb4 <realloc@plt>
   129ac:	str	r0, [r4, #44]	; 0x2c
   129b0:	pop	{r4, sl, fp, pc}
   129b4:	bl	11ea8 <free@plt>
   129b8:	ldr	r0, [r4, #40]	; 0x28
   129bc:	bl	11ea8 <free@plt>
   129c0:	ldr	r0, [r4, #44]	; 0x2c
   129c4:	bl	11ea8 <free@plt>
   129c8:	mov	r0, #0
   129cc:	str	r0, [r4, #36]	; 0x24
   129d0:	str	r0, [r4, #40]	; 0x28
   129d4:	str	r0, [r4, #44]	; 0x2c
   129d8:	pop	{r4, sl, fp, pc}

000129dc <table_notify@@Base>:
   129dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129e0:	add	fp, sp, #24
   129e4:	sub	sp, sp, #8
   129e8:	mov	r7, r0
   129ec:	ldr	r0, [r0, #32]
   129f0:	cmp	r0, #1
   129f4:	blt	12a58 <table_notify@@Base+0x7c>
   129f8:	mov	r4, r3
   129fc:	mov	r8, r2
   12a00:	mov	r9, r1
   12a04:	mov	r5, #0
   12a08:	b	12a1c <table_notify@@Base+0x40>
   12a0c:	ldr	r0, [r7, #32]
   12a10:	add	r5, r5, #1
   12a14:	cmp	r5, r0
   12a18:	bge	12a58 <table_notify@@Base+0x7c>
   12a1c:	ldr	r0, [r7, #44]	; 0x2c
   12a20:	ldr	r0, [r0, r5, lsl #2]
   12a24:	tst	r0, r4
   12a28:	beq	12a0c <table_notify@@Base+0x30>
   12a2c:	ldr	r0, [r7, #36]	; 0x24
   12a30:	ldr	r1, [r7, #40]	; 0x28
   12a34:	ldr	r6, [r0, r5, lsl #2]
   12a38:	ldr	r0, [r1, r5, lsl #2]
   12a3c:	str	r0, [sp]
   12a40:	mov	r0, r7
   12a44:	mov	r1, r9
   12a48:	mov	r2, r8
   12a4c:	mov	r3, r4
   12a50:	blx	r6
   12a54:	b	12a0c <table_notify@@Base+0x30>
   12a58:	sub	sp, fp, #24
   12a5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012a60 <table_column_init@@Base>:
   12a60:	push	{r4, r5, r6, r7, fp, lr}
   12a64:	add	fp, sp, #16
   12a68:	mov	r4, r3
   12a6c:	mov	r5, r2
   12a70:	bl	12aa8 <table_get_col_ptr@@Base>
   12a74:	mov	r6, r0
   12a78:	mov	r0, r5
   12a7c:	bl	11ef0 <strlen@plt>
   12a80:	add	r0, r0, #1
   12a84:	bl	11ecc <malloc@plt>
   12a88:	str	r0, [r6]
   12a8c:	ldr	r7, [fp, #8]
   12a90:	cmp	r0, #0
   12a94:	beq	12aa0 <table_column_init@@Base+0x40>
   12a98:	mov	r1, r5
   12a9c:	bl	11ec0 <strcpy@plt>
   12aa0:	stmib	r6, {r4, r7}
   12aa4:	pop	{r4, r5, r6, r7, fp, pc}

00012aa8 <table_get_col_ptr@@Base>:
   12aa8:	ldr	r0, [r0]
   12aac:	add	r1, r1, r1, lsl #1
   12ab0:	add	r0, r0, r1, lsl #2
   12ab4:	bx	lr

00012ab8 <table_column_destroy@@Base>:
   12ab8:	push	{fp, lr}
   12abc:	mov	fp, sp
   12ac0:	bl	12aa8 <table_get_col_ptr@@Base>
   12ac4:	ldr	r0, [r0]
   12ac8:	cmp	r0, #0
   12acc:	popeq	{fp, pc}
   12ad0:	pop	{fp, lr}
   12ad4:	b	11ea8 <free@plt>

00012ad8 <table_get_column_length@@Base>:
   12ad8:	ldr	r0, [r0, #4]
   12adc:	bx	lr

00012ae0 <table_get_column@@Base>:
   12ae0:	push	{r4, r5, r6, r7, fp, lr}
   12ae4:	add	fp, sp, #16
   12ae8:	mov	r6, r1
   12aec:	mov	r7, r0
   12af0:	bl	12ad8 <table_get_column_length@@Base>
   12af4:	mov	r4, r0
   12af8:	mov	r5, #0
   12afc:	cmp	r0, #1
   12b00:	blt	12b28 <table_get_column@@Base+0x48>
   12b04:	mov	r0, r7
   12b08:	mov	r1, r5
   12b0c:	bl	12b38 <table_get_column_name@@Base>
   12b10:	mov	r1, r6
   12b14:	bl	11e90 <strcmp@plt>
   12b18:	cmp	r0, #0
   12b1c:	addne	r5, r5, #1
   12b20:	cmpne	r4, r5
   12b24:	bne	12b04 <table_get_column@@Base+0x24>
   12b28:	cmp	r5, r4
   12b2c:	mvneq	r5, #0
   12b30:	mov	r0, r5
   12b34:	pop	{r4, r5, r6, r7, fp, pc}

00012b38 <table_get_column_name@@Base>:
   12b38:	push	{fp, lr}
   12b3c:	mov	fp, sp
   12b40:	bl	12aa8 <table_get_col_ptr@@Base>
   12b44:	ldr	r0, [r0]
   12b48:	pop	{fp, pc}

00012b4c <table_get_column_data_type@@Base>:
   12b4c:	push	{fp, lr}
   12b50:	mov	fp, sp
   12b54:	bl	12aa8 <table_get_col_ptr@@Base>
   12b58:	ldr	r0, [r0, #4]
   12b5c:	pop	{fp, pc}

00012b60 <table_add_column@@Base>:
   12b60:	push	{r4, r5, r6, sl, fp, lr}
   12b64:	add	fp, sp, #16
   12b68:	mov	r5, r2
   12b6c:	mov	r6, r1
   12b70:	mov	r4, r0
   12b74:	bl	12ad8 <table_get_column_length@@Base>
   12b78:	ldr	r1, [r4, #8]
   12b7c:	udiv	r2, r0, r1
   12b80:	mls	r0, r2, r1, r0
   12b84:	cmp	r0, #0
   12b88:	moveq	r0, r4
   12b8c:	bleq	12bcc <table_add_column@@Base+0x6c>
   12b90:	mov	r0, r4
   12b94:	mov	r1, r6
   12b98:	mov	r2, r5
   12b9c:	bl	12c48 <table_add_column@@Base+0xe8>
   12ba0:	mov	r0, r4
   12ba4:	bl	12ad8 <table_get_column_length@@Base>
   12ba8:	mov	r2, r0
   12bac:	mov	r0, r4
   12bb0:	mvn	r1, #0
   12bb4:	mov	r3, #8
   12bb8:	bl	129dc <table_notify@@Base>
   12bbc:	ldr	r0, [r4, #4]
   12bc0:	add	r1, r0, #1
   12bc4:	str	r1, [r4, #4]
   12bc8:	pop	{r4, r5, r6, sl, fp, pc}
   12bcc:	push	{r4, r5, r6, r7, fp, lr}
   12bd0:	add	fp, sp, #16
   12bd4:	mov	r4, r0
   12bd8:	ldr	r0, [r0]
   12bdc:	ldr	r1, [r4, #8]
   12be0:	ldr	r2, [r4, #12]
   12be4:	add	r1, r2, r1
   12be8:	str	r1, [r4, #12]
   12bec:	add	r1, r1, r1, lsl #1
   12bf0:	lsl	r1, r1, #2
   12bf4:	bl	11eb4 <realloc@plt>
   12bf8:	str	r0, [r4]
   12bfc:	mov	r0, r4
   12c00:	bl	13804 <table_get_row_length@@Base>
   12c04:	cmp	r0, #1
   12c08:	blt	12c44 <table_add_column@@Base+0xe4>
   12c0c:	mov	r5, r0
   12c10:	mov	r6, #0
   12c14:	mov	r0, r4
   12c18:	mov	r1, r6
   12c1c:	bl	13790 <table_get_row_ptr@@Base>
   12c20:	mov	r7, r0
   12c24:	ldr	r0, [r0]
   12c28:	ldr	r1, [r4, #12]
   12c2c:	lsl	r1, r1, #2
   12c30:	bl	11eb4 <realloc@plt>
   12c34:	str	r0, [r7]
   12c38:	add	r6, r6, #1
   12c3c:	cmp	r5, r6
   12c40:	bne	12c14 <table_add_column@@Base+0xb4>
   12c44:	pop	{r4, r5, r6, r7, fp, pc}
   12c48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c4c:	add	fp, sp, #24
   12c50:	sub	sp, sp, #8
   12c54:	mov	r7, r2
   12c58:	mov	r8, r1
   12c5c:	mov	r4, r0
   12c60:	bl	13804 <table_get_row_length@@Base>
   12c64:	mov	r5, r0
   12c68:	mov	r0, r4
   12c6c:	bl	12ad8 <table_get_column_length@@Base>
   12c70:	mov	r6, r0
   12c74:	mov	r0, r7
   12c78:	bl	13578 <table_get_default_compare_function_for_data_type@@Base>
   12c7c:	str	r0, [sp]
   12c80:	mov	r0, r4
   12c84:	mov	r1, r6
   12c88:	mov	r2, r8
   12c8c:	mov	r3, r7
   12c90:	bl	12a60 <table_column_init@@Base>
   12c94:	cmp	r5, #1
   12c98:	blt	12cbc <table_add_column@@Base+0x15c>
   12c9c:	mov	r7, #0
   12ca0:	mov	r0, r4
   12ca4:	mov	r1, r7
   12ca8:	mov	r2, r6
   12cac:	bl	14024 <table_cell_init@@Base>
   12cb0:	add	r7, r7, #1
   12cb4:	cmp	r5, r7
   12cb8:	bne	12ca0 <table_add_column@@Base+0x140>
   12cbc:	sub	sp, fp, #24
   12cc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012cc4 <table_remove_column@@Base>:
   12cc4:	push	{r4, r5, fp, lr}
   12cc8:	add	fp, sp, #8
   12ccc:	mov	r4, r1
   12cd0:	mov	r5, r0
   12cd4:	bl	12d20 <table_remove_column@@Base+0x5c>
   12cd8:	ldr	r0, [r5, #4]
   12cdc:	sub	r0, r0, #1
   12ce0:	str	r0, [r5, #4]
   12ce4:	mov	r0, r5
   12ce8:	bl	12ad8 <table_get_column_length@@Base>
   12cec:	ldr	r1, [r5, #8]
   12cf0:	udiv	r2, r0, r1
   12cf4:	mls	r0, r2, r1, r0
   12cf8:	cmp	r0, #0
   12cfc:	moveq	r0, r5
   12d00:	bleq	12df0 <table_remove_column@@Base+0x12c>
   12d04:	mov	r0, r5
   12d08:	mvn	r1, #0
   12d0c:	mov	r2, r4
   12d10:	mov	r3, #16
   12d14:	bl	129dc <table_notify@@Base>
   12d18:	mov	r0, #0
   12d1c:	pop	{r4, r5, fp, pc}
   12d20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d24:	add	fp, sp, #24
   12d28:	mov	r4, r1
   12d2c:	mov	r5, r0
   12d30:	bl	12ab8 <table_column_destroy@@Base>
   12d34:	mov	r0, r5
   12d38:	bl	12ad8 <table_get_column_length@@Base>
   12d3c:	sub	r6, r0, #1
   12d40:	cmp	r6, r4
   12d44:	ble	12d7c <table_remove_column@@Base+0xb8>
   12d48:	mvn	r1, r4
   12d4c:	add	r0, r1, r0
   12d50:	add	r1, r4, r4, lsl #1
   12d54:	lsl	r1, r1, #2
   12d58:	ldr	r2, [r5]
   12d5c:	add	r2, r2, r1
   12d60:	vldr	d16, [r2, #12]
   12d64:	ldr	r3, [r2, #20]
   12d68:	str	r3, [r2, #8]
   12d6c:	vstr	d16, [r2]
   12d70:	add	r1, r1, #12
   12d74:	subs	r0, r0, #1
   12d78:	bne	12d58 <table_remove_column@@Base+0x94>
   12d7c:	mov	r0, r5
   12d80:	bl	13804 <table_get_row_length@@Base>
   12d84:	cmp	r0, #1
   12d88:	blt	12dec <table_remove_column@@Base+0x128>
   12d8c:	mov	r8, r0
   12d90:	mov	r7, #0
   12d94:	b	12da4 <table_remove_column@@Base+0xe0>
   12d98:	add	r7, r7, #1
   12d9c:	cmp	r7, r8
   12da0:	beq	12dec <table_remove_column@@Base+0x128>
   12da4:	mov	r0, r5
   12da8:	mov	r1, r7
   12dac:	mov	r2, r4
   12db0:	bl	14058 <table_cell_destroy@@Base>
   12db4:	mov	r0, r5
   12db8:	mov	r1, r7
   12dbc:	bl	13790 <table_get_row_ptr@@Base>
   12dc0:	cmp	r6, r4
   12dc4:	ble	12d98 <table_remove_column@@Base+0xd4>
   12dc8:	mov	r1, r4
   12dcc:	ldr	r2, [r0]
   12dd0:	add	r3, r2, r1, lsl #2
   12dd4:	ldr	r3, [r3, #4]
   12dd8:	str	r3, [r2, r1, lsl #2]
   12ddc:	add	r1, r1, #1
   12de0:	cmp	r6, r1
   12de4:	bne	12dcc <table_remove_column@@Base+0x108>
   12de8:	b	12d98 <table_remove_column@@Base+0xd4>
   12dec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12df0:	push	{r4, r5, r6, r7, fp, lr}
   12df4:	add	fp, sp, #16
   12df8:	mov	r4, r0
   12dfc:	ldr	r0, [r0]
   12e00:	ldr	r1, [r4, #8]
   12e04:	ldr	r2, [r4, #12]
   12e08:	sub	r1, r2, r1
   12e0c:	str	r1, [r4, #12]
   12e10:	add	r1, r1, r1, lsl #1
   12e14:	lsl	r1, r1, #2
   12e18:	bl	11eb4 <realloc@plt>
   12e1c:	str	r0, [r4]
   12e20:	mov	r0, r4
   12e24:	bl	13804 <table_get_row_length@@Base>
   12e28:	cmp	r0, #1
   12e2c:	blt	12e68 <table_remove_column@@Base+0x1a4>
   12e30:	mov	r5, r0
   12e34:	mov	r6, #0
   12e38:	mov	r0, r4
   12e3c:	mov	r1, r6
   12e40:	bl	13790 <table_get_row_ptr@@Base>
   12e44:	mov	r7, r0
   12e48:	ldr	r0, [r0]
   12e4c:	ldr	r1, [r4, #12]
   12e50:	lsl	r1, r1, #2
   12e54:	bl	11eb4 <realloc@plt>
   12e58:	str	r0, [r7]
   12e5c:	add	r6, r6, #1
   12e60:	cmp	r5, r6
   12e64:	bne	12e38 <table_remove_column@@Base+0x174>
   12e68:	pop	{r4, r5, r6, r7, fp, pc}

00012e6c <table_get_column_compare_function@@Base>:
   12e6c:	push	{fp, lr}
   12e70:	mov	fp, sp
   12e74:	bl	12aa8 <table_get_col_ptr@@Base>
   12e78:	ldr	r0, [r0, #8]
   12e7c:	pop	{fp, pc}

00012e80 <table_set_column_compare_function@@Base>:
   12e80:	push	{r4, sl, fp, lr}
   12e84:	add	fp, sp, #8
   12e88:	mov	r4, r2
   12e8c:	bl	12aa8 <table_get_col_ptr@@Base>
   12e90:	str	r4, [r0, #8]
   12e94:	pop	{r4, sl, fp, pc}

00012e98 <table_compare_bool@@Base>:
   12e98:	cmp	r0, #0
   12e9c:	beq	12ed0 <table_compare_bool@@Base+0x38>
   12ea0:	cmp	r1, #0
   12ea4:	moveq	r1, #1
   12ea8:	moveq	r0, r1
   12eac:	bxeq	lr
   12eb0:	ldrb	r2, [r1]
   12eb4:	ldrb	r0, [r0]
   12eb8:	mov	r1, #0
   12ebc:	cmp	r0, r2
   12ec0:	mvncc	r1, #0
   12ec4:	movwhi	r1, #1
   12ec8:	mov	r0, r1
   12ecc:	bx	lr
   12ed0:	cmp	r1, #0
   12ed4:	mvnne	r1, #0
   12ed8:	mov	r0, r1
   12edc:	bx	lr

00012ee0 <table_compare_int@@Base>:
   12ee0:	cmp	r0, #0
   12ee4:	beq	12f18 <table_compare_int@@Base+0x38>
   12ee8:	cmp	r1, #0
   12eec:	moveq	r1, #1
   12ef0:	moveq	r0, r1
   12ef4:	bxeq	lr
   12ef8:	ldr	r2, [r1]
   12efc:	ldr	r0, [r0]
   12f00:	mov	r1, #0
   12f04:	cmp	r0, r2
   12f08:	mvnlt	r1, #0
   12f0c:	movwgt	r1, #1
   12f10:	mov	r0, r1
   12f14:	bx	lr
   12f18:	cmp	r1, #0
   12f1c:	mvnne	r1, #0
   12f20:	mov	r0, r1
   12f24:	bx	lr

00012f28 <table_compare_uint@@Base>:
   12f28:	cmp	r0, #0
   12f2c:	beq	12f60 <table_compare_uint@@Base+0x38>
   12f30:	cmp	r1, #0
   12f34:	moveq	r1, #1
   12f38:	moveq	r0, r1
   12f3c:	bxeq	lr
   12f40:	ldr	r2, [r1]
   12f44:	ldr	r0, [r0]
   12f48:	mov	r1, #0
   12f4c:	cmp	r0, r2
   12f50:	mvncc	r1, #0
   12f54:	movwhi	r1, #1
   12f58:	mov	r0, r1
   12f5c:	bx	lr
   12f60:	cmp	r1, #0
   12f64:	mvnne	r1, #0
   12f68:	mov	r0, r1
   12f6c:	bx	lr

00012f70 <table_compare_int8@@Base>:
   12f70:	cmp	r0, #0
   12f74:	beq	12fa8 <table_compare_int8@@Base+0x38>
   12f78:	cmp	r1, #0
   12f7c:	moveq	r1, #1
   12f80:	moveq	r0, r1
   12f84:	bxeq	lr
   12f88:	ldrsb	r2, [r1]
   12f8c:	ldrsb	r0, [r0]
   12f90:	mov	r1, #0
   12f94:	cmp	r0, r2
   12f98:	mvnlt	r1, #0
   12f9c:	movwgt	r1, #1
   12fa0:	mov	r0, r1
   12fa4:	bx	lr
   12fa8:	cmp	r1, #0
   12fac:	mvnne	r1, #0
   12fb0:	mov	r0, r1
   12fb4:	bx	lr

00012fb8 <table_compare_uint8@@Base>:
   12fb8:	cmp	r0, #0
   12fbc:	beq	12ff0 <table_compare_uint8@@Base+0x38>
   12fc0:	cmp	r1, #0
   12fc4:	moveq	r1, #1
   12fc8:	moveq	r0, r1
   12fcc:	bxeq	lr
   12fd0:	ldrb	r2, [r1]
   12fd4:	ldrb	r0, [r0]
   12fd8:	mov	r1, #0
   12fdc:	cmp	r0, r2
   12fe0:	mvncc	r1, #0
   12fe4:	movwhi	r1, #1
   12fe8:	mov	r0, r1
   12fec:	bx	lr
   12ff0:	cmp	r1, #0
   12ff4:	mvnne	r1, #0
   12ff8:	mov	r0, r1
   12ffc:	bx	lr

00013000 <table_compare_int16@@Base>:
   13000:	cmp	r0, #0
   13004:	beq	13038 <table_compare_int16@@Base+0x38>
   13008:	cmp	r1, #0
   1300c:	moveq	r1, #1
   13010:	moveq	r0, r1
   13014:	bxeq	lr
   13018:	ldrsh	r2, [r1]
   1301c:	ldrsh	r0, [r0]
   13020:	mov	r1, #0
   13024:	cmp	r0, r2
   13028:	mvnlt	r1, #0
   1302c:	movwgt	r1, #1
   13030:	mov	r0, r1
   13034:	bx	lr
   13038:	cmp	r1, #0
   1303c:	mvnne	r1, #0
   13040:	mov	r0, r1
   13044:	bx	lr

00013048 <table_compare_uint16@@Base>:
   13048:	cmp	r0, #0
   1304c:	beq	13080 <table_compare_uint16@@Base+0x38>
   13050:	cmp	r1, #0
   13054:	moveq	r1, #1
   13058:	moveq	r0, r1
   1305c:	bxeq	lr
   13060:	ldrh	r2, [r1]
   13064:	ldrh	r0, [r0]
   13068:	mov	r1, #0
   1306c:	cmp	r0, r2
   13070:	mvncc	r1, #0
   13074:	movwhi	r1, #1
   13078:	mov	r0, r1
   1307c:	bx	lr
   13080:	cmp	r1, #0
   13084:	mvnne	r1, #0
   13088:	mov	r0, r1
   1308c:	bx	lr

00013090 <table_compare_int32@@Base>:
   13090:	cmp	r0, #0
   13094:	beq	130c8 <table_compare_int32@@Base+0x38>
   13098:	cmp	r1, #0
   1309c:	moveq	r1, #1
   130a0:	moveq	r0, r1
   130a4:	bxeq	lr
   130a8:	ldr	r2, [r1]
   130ac:	ldr	r0, [r0]
   130b0:	mov	r1, #0
   130b4:	cmp	r0, r2
   130b8:	mvnlt	r1, #0
   130bc:	movwgt	r1, #1
   130c0:	mov	r0, r1
   130c4:	bx	lr
   130c8:	cmp	r1, #0
   130cc:	mvnne	r1, #0
   130d0:	mov	r0, r1
   130d4:	bx	lr

000130d8 <table_compare_uint32@@Base>:
   130d8:	cmp	r0, #0
   130dc:	beq	13110 <table_compare_uint32@@Base+0x38>
   130e0:	cmp	r1, #0
   130e4:	moveq	r1, #1
   130e8:	moveq	r0, r1
   130ec:	bxeq	lr
   130f0:	ldr	r2, [r1]
   130f4:	ldr	r0, [r0]
   130f8:	mov	r1, #0
   130fc:	cmp	r0, r2
   13100:	mvncc	r1, #0
   13104:	movwhi	r1, #1
   13108:	mov	r0, r1
   1310c:	bx	lr
   13110:	cmp	r1, #0
   13114:	mvnne	r1, #0
   13118:	mov	r0, r1
   1311c:	bx	lr

00013120 <table_compare_int64@@Base>:
   13120:	cmp	r0, #0
   13124:	beq	13178 <table_compare_int64@@Base+0x58>
   13128:	cmp	r1, #0
   1312c:	moveq	r1, #1
   13130:	moveq	r0, r1
   13134:	bxeq	lr
   13138:	push	{r5, r7, fp, lr}
   1313c:	add	fp, sp, #8
   13140:	ldm	r1, {r2, r7}
   13144:	ldm	r0, {r0, r5}
   13148:	mov	r1, #0
   1314c:	subs	r3, r0, r2
   13150:	sbcs	r3, r5, r7
   13154:	movwlt	r1, #1
   13158:	cmp	r1, #0
   1315c:	mvnne	r1, #0
   13160:	subs	r0, r2, r0
   13164:	sbcs	r0, r7, r5
   13168:	movwlt	r1, #1
   1316c:	pop	{r5, r7, fp, lr}
   13170:	mov	r0, r1
   13174:	bx	lr
   13178:	cmp	r1, #0
   1317c:	mvnne	r1, #0
   13180:	mov	r0, r1
   13184:	bx	lr

00013188 <table_compare_uint64@@Base>:
   13188:	cmp	r0, #0
   1318c:	beq	131e0 <table_compare_uint64@@Base+0x58>
   13190:	cmp	r1, #0
   13194:	moveq	r1, #1
   13198:	moveq	r0, r1
   1319c:	bxeq	lr
   131a0:	push	{r5, r7, fp, lr}
   131a4:	add	fp, sp, #8
   131a8:	ldm	r1, {r2, r7}
   131ac:	ldm	r0, {r0, r5}
   131b0:	mov	r1, #0
   131b4:	subs	r3, r0, r2
   131b8:	sbcs	r3, r5, r7
   131bc:	movwcc	r1, #1
   131c0:	cmp	r1, #0
   131c4:	mvnne	r1, #0
   131c8:	subs	r0, r2, r0
   131cc:	sbcs	r0, r7, r5
   131d0:	movwcc	r1, #1
   131d4:	pop	{r5, r7, fp, lr}
   131d8:	mov	r0, r1
   131dc:	bx	lr
   131e0:	cmp	r1, #0
   131e4:	mvnne	r1, #0
   131e8:	mov	r0, r1
   131ec:	bx	lr

000131f0 <table_compare_short@@Base>:
   131f0:	cmp	r0, #0
   131f4:	beq	13228 <table_compare_short@@Base+0x38>
   131f8:	cmp	r1, #0
   131fc:	moveq	r1, #1
   13200:	moveq	r0, r1
   13204:	bxeq	lr
   13208:	ldrsh	r2, [r1]
   1320c:	ldrsh	r0, [r0]
   13210:	mov	r1, #0
   13214:	cmp	r0, r2
   13218:	mvnlt	r1, #0
   1321c:	movwgt	r1, #1
   13220:	mov	r0, r1
   13224:	bx	lr
   13228:	cmp	r1, #0
   1322c:	mvnne	r1, #0
   13230:	mov	r0, r1
   13234:	bx	lr

00013238 <table_compare_ushort@@Base>:
   13238:	cmp	r0, #0
   1323c:	beq	13270 <table_compare_ushort@@Base+0x38>
   13240:	cmp	r1, #0
   13244:	moveq	r1, #1
   13248:	moveq	r0, r1
   1324c:	bxeq	lr
   13250:	ldrh	r2, [r1]
   13254:	ldrh	r0, [r0]
   13258:	mov	r1, #0
   1325c:	cmp	r0, r2
   13260:	mvncc	r1, #0
   13264:	movwhi	r1, #1
   13268:	mov	r0, r1
   1326c:	bx	lr
   13270:	cmp	r1, #0
   13274:	mvnne	r1, #0
   13278:	mov	r0, r1
   1327c:	bx	lr

00013280 <table_compare_long@@Base>:
   13280:	cmp	r0, #0
   13284:	beq	132b8 <table_compare_long@@Base+0x38>
   13288:	cmp	r1, #0
   1328c:	moveq	r1, #1
   13290:	moveq	r0, r1
   13294:	bxeq	lr
   13298:	ldr	r2, [r1]
   1329c:	ldr	r0, [r0]
   132a0:	mov	r1, #0
   132a4:	cmp	r0, r2
   132a8:	mvnlt	r1, #0
   132ac:	movwgt	r1, #1
   132b0:	mov	r0, r1
   132b4:	bx	lr
   132b8:	cmp	r1, #0
   132bc:	mvnne	r1, #0
   132c0:	mov	r0, r1
   132c4:	bx	lr

000132c8 <table_compare_ulong@@Base>:
   132c8:	cmp	r0, #0
   132cc:	beq	13300 <table_compare_ulong@@Base+0x38>
   132d0:	cmp	r1, #0
   132d4:	moveq	r1, #1
   132d8:	moveq	r0, r1
   132dc:	bxeq	lr
   132e0:	ldr	r2, [r1]
   132e4:	ldr	r0, [r0]
   132e8:	mov	r1, #0
   132ec:	cmp	r0, r2
   132f0:	mvncc	r1, #0
   132f4:	movwhi	r1, #1
   132f8:	mov	r0, r1
   132fc:	bx	lr
   13300:	cmp	r1, #0
   13304:	mvnne	r1, #0
   13308:	mov	r0, r1
   1330c:	bx	lr

00013310 <table_compare_llong@@Base>:
   13310:	cmp	r0, #0
   13314:	beq	13368 <table_compare_llong@@Base+0x58>
   13318:	cmp	r1, #0
   1331c:	moveq	r1, #1
   13320:	moveq	r0, r1
   13324:	bxeq	lr
   13328:	push	{r5, r7, fp, lr}
   1332c:	add	fp, sp, #8
   13330:	ldm	r1, {r2, r7}
   13334:	ldm	r0, {r0, r5}
   13338:	mov	r1, #0
   1333c:	subs	r3, r0, r2
   13340:	sbcs	r3, r5, r7
   13344:	movwlt	r1, #1
   13348:	cmp	r1, #0
   1334c:	mvnne	r1, #0
   13350:	subs	r0, r2, r0
   13354:	sbcs	r0, r7, r5
   13358:	movwlt	r1, #1
   1335c:	pop	{r5, r7, fp, lr}
   13360:	mov	r0, r1
   13364:	bx	lr
   13368:	cmp	r1, #0
   1336c:	mvnne	r1, #0
   13370:	mov	r0, r1
   13374:	bx	lr

00013378 <table_compare_ullong@@Base>:
   13378:	cmp	r0, #0
   1337c:	beq	133b0 <table_compare_ullong@@Base+0x38>
   13380:	cmp	r1, #0
   13384:	moveq	r1, #1
   13388:	moveq	r0, r1
   1338c:	bxeq	lr
   13390:	ldr	r2, [r1]
   13394:	ldr	r0, [r0]
   13398:	mov	r1, #0
   1339c:	cmp	r0, r2
   133a0:	mvncc	r1, #0
   133a4:	movwhi	r1, #1
   133a8:	mov	r0, r1
   133ac:	bx	lr
   133b0:	cmp	r1, #0
   133b4:	mvnne	r1, #0
   133b8:	mov	r0, r1
   133bc:	bx	lr

000133c0 <table_compare_float@@Base>:
   133c0:	cmp	r0, #0
   133c4:	beq	133fc <table_compare_float@@Base+0x3c>
   133c8:	cmp	r1, #0
   133cc:	moveq	r1, #1
   133d0:	moveq	r0, r1
   133d4:	bxeq	lr
   133d8:	vldr	s0, [r1]
   133dc:	vldr	s2, [r0]
   133e0:	mov	r1, #0
   133e4:	vcmpe.f32	s2, s0
   133e8:	vmrs	APSR_nzcv, fpscr
   133ec:	mvnmi	r1, #0
   133f0:	movwgt	r1, #1
   133f4:	mov	r0, r1
   133f8:	bx	lr
   133fc:	cmp	r1, #0
   13400:	mvnne	r1, #0
   13404:	mov	r0, r1
   13408:	bx	lr

0001340c <table_compare_double@@Base>:
   1340c:	cmp	r0, #0
   13410:	beq	13448 <table_compare_double@@Base+0x3c>
   13414:	cmp	r1, #0
   13418:	moveq	r1, #1
   1341c:	moveq	r0, r1
   13420:	bxeq	lr
   13424:	vldr	d16, [r1]
   13428:	vldr	d17, [r0]
   1342c:	mov	r1, #0
   13430:	vcmpe.f64	d17, d16
   13434:	vmrs	APSR_nzcv, fpscr
   13438:	mvnmi	r1, #0
   1343c:	movwgt	r1, #1
   13440:	mov	r0, r1
   13444:	bx	lr
   13448:	cmp	r1, #0
   1344c:	mvnne	r1, #0
   13450:	mov	r0, r1
   13454:	bx	lr

00013458 <table_compare_ldouble@@Base>:
   13458:	cmp	r0, #0
   1345c:	beq	13494 <table_compare_ldouble@@Base+0x3c>
   13460:	cmp	r1, #0
   13464:	moveq	r1, #1
   13468:	moveq	r0, r1
   1346c:	bxeq	lr
   13470:	vldr	d16, [r1]
   13474:	vldr	d17, [r0]
   13478:	mov	r1, #0
   1347c:	vcmpe.f64	d17, d16
   13480:	vmrs	APSR_nzcv, fpscr
   13484:	mvnmi	r1, #0
   13488:	movwgt	r1, #1
   1348c:	mov	r0, r1
   13490:	bx	lr
   13494:	cmp	r1, #0
   13498:	mvnne	r1, #0
   1349c:	mov	r0, r1
   134a0:	bx	lr

000134a4 <table_compare_char@@Base>:
   134a4:	cmp	r0, #0
   134a8:	beq	134dc <table_compare_char@@Base+0x38>
   134ac:	cmp	r1, #0
   134b0:	moveq	r1, #1
   134b4:	moveq	r0, r1
   134b8:	bxeq	lr
   134bc:	ldrb	r2, [r1]
   134c0:	ldrb	r0, [r0]
   134c4:	mov	r1, #0
   134c8:	cmp	r0, r2
   134cc:	mvncc	r1, #0
   134d0:	movwhi	r1, #1
   134d4:	mov	r0, r1
   134d8:	bx	lr
   134dc:	cmp	r1, #0
   134e0:	mvnne	r1, #0
   134e4:	mov	r0, r1
   134e8:	bx	lr

000134ec <table_compare_uchar@@Base>:
   134ec:	cmp	r0, #0
   134f0:	beq	13524 <table_compare_uchar@@Base+0x38>
   134f4:	cmp	r1, #0
   134f8:	moveq	r1, #1
   134fc:	moveq	r0, r1
   13500:	bxeq	lr
   13504:	ldrb	r2, [r1]
   13508:	ldrb	r0, [r0]
   1350c:	mov	r1, #0
   13510:	cmp	r0, r2
   13514:	mvncc	r1, #0
   13518:	movwhi	r1, #1
   1351c:	mov	r0, r1
   13520:	bx	lr
   13524:	cmp	r1, #0
   13528:	mvnne	r1, #0
   1352c:	mov	r0, r1
   13530:	bx	lr

00013534 <table_compare_string@@Base>:
   13534:	cmp	r0, #0
   13538:	beq	13550 <table_compare_string@@Base+0x1c>
   1353c:	cmp	r1, #0
   13540:	moveq	r1, #1
   13544:	moveq	r0, r1
   13548:	bxeq	lr
   1354c:	b	11e90 <strcmp@plt>
   13550:	cmp	r1, #0
   13554:	mvnne	r1, #0
   13558:	mov	r0, r1
   1355c:	bx	lr

00013560 <table_compare_ptr@@Base>:
   13560:	mov	r2, #0
   13564:	cmp	r0, r1
   13568:	mvncc	r2, #0
   1356c:	movwhi	r2, #1
   13570:	mov	r0, r2
   13574:	bx	lr

00013578 <table_get_default_compare_function_for_data_type@@Base>:
   13578:	cmp	r0, #23
   1357c:	movhi	r0, #0
   13580:	bxhi	lr
   13584:	movw	r1, #19276	; 0x4b4c
   13588:	movt	r1, #1
   1358c:	ldr	r0, [r1, r0, lsl #2]
   13590:	bx	lr

00013594 <table_get@@Base>:
   13594:	push	{fp, lr}
   13598:	mov	fp, sp
   1359c:	bl	1403c <table_get_cell_ptr@@Base>
   135a0:	ldr	r0, [r0]
   135a4:	pop	{fp, pc}

000135a8 <table_get_bool@@Base>:
   135a8:	push	{fp, lr}
   135ac:	mov	fp, sp
   135b0:	bl	13594 <table_get@@Base>
   135b4:	ldrb	r0, [r0]
   135b8:	pop	{fp, pc}

000135bc <table_get_int@@Base>:
   135bc:	push	{fp, lr}
   135c0:	mov	fp, sp
   135c4:	bl	13594 <table_get@@Base>
   135c8:	ldr	r0, [r0]
   135cc:	pop	{fp, pc}

000135d0 <table_get_uint@@Base>:
   135d0:	push	{fp, lr}
   135d4:	mov	fp, sp
   135d8:	bl	13594 <table_get@@Base>
   135dc:	ldr	r0, [r0]
   135e0:	pop	{fp, pc}

000135e4 <table_get_int8@@Base>:
   135e4:	push	{fp, lr}
   135e8:	mov	fp, sp
   135ec:	bl	13594 <table_get@@Base>
   135f0:	ldrsb	r0, [r0]
   135f4:	pop	{fp, pc}

000135f8 <table_get_uint8@@Base>:
   135f8:	push	{fp, lr}
   135fc:	mov	fp, sp
   13600:	bl	13594 <table_get@@Base>
   13604:	ldrb	r0, [r0]
   13608:	pop	{fp, pc}

0001360c <table_get_int16@@Base>:
   1360c:	push	{fp, lr}
   13610:	mov	fp, sp
   13614:	bl	13594 <table_get@@Base>
   13618:	ldrsh	r0, [r0]
   1361c:	pop	{fp, pc}

00013620 <table_get_uint16@@Base>:
   13620:	push	{fp, lr}
   13624:	mov	fp, sp
   13628:	bl	13594 <table_get@@Base>
   1362c:	ldrh	r0, [r0]
   13630:	pop	{fp, pc}

00013634 <table_get_int32@@Base>:
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	bl	13594 <table_get@@Base>
   13640:	ldr	r0, [r0]
   13644:	pop	{fp, pc}

00013648 <table_get_uint32@@Base>:
   13648:	push	{fp, lr}
   1364c:	mov	fp, sp
   13650:	bl	13594 <table_get@@Base>
   13654:	ldr	r0, [r0]
   13658:	pop	{fp, pc}

0001365c <table_get_int64@@Base>:
   1365c:	push	{fp, lr}
   13660:	mov	fp, sp
   13664:	bl	13594 <table_get@@Base>
   13668:	ldrd	r0, [r0]
   1366c:	pop	{fp, pc}

00013670 <table_get_uint64@@Base>:
   13670:	push	{fp, lr}
   13674:	mov	fp, sp
   13678:	bl	13594 <table_get@@Base>
   1367c:	ldrd	r0, [r0]
   13680:	pop	{fp, pc}

00013684 <table_get_short@@Base>:
   13684:	push	{fp, lr}
   13688:	mov	fp, sp
   1368c:	bl	13594 <table_get@@Base>
   13690:	ldrsh	r0, [r0]
   13694:	pop	{fp, pc}

00013698 <table_get_ushort@@Base>:
   13698:	push	{fp, lr}
   1369c:	mov	fp, sp
   136a0:	bl	13594 <table_get@@Base>
   136a4:	ldrh	r0, [r0]
   136a8:	pop	{fp, pc}

000136ac <table_get_long@@Base>:
   136ac:	push	{fp, lr}
   136b0:	mov	fp, sp
   136b4:	bl	13594 <table_get@@Base>
   136b8:	ldr	r0, [r0]
   136bc:	pop	{fp, pc}

000136c0 <table_get_ulong@@Base>:
   136c0:	push	{fp, lr}
   136c4:	mov	fp, sp
   136c8:	bl	13594 <table_get@@Base>
   136cc:	ldr	r0, [r0]
   136d0:	pop	{fp, pc}

000136d4 <table_get_llong@@Base>:
   136d4:	push	{fp, lr}
   136d8:	mov	fp, sp
   136dc:	bl	13594 <table_get@@Base>
   136e0:	ldrd	r0, [r0]
   136e4:	pop	{fp, pc}

000136e8 <table_get_ullong@@Base>:
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	13594 <table_get@@Base>
   136f4:	ldrd	r0, [r0]
   136f8:	pop	{fp, pc}

000136fc <table_get_float@@Base>:
   136fc:	push	{fp, lr}
   13700:	mov	fp, sp
   13704:	bl	13594 <table_get@@Base>
   13708:	vldr	s0, [r0]
   1370c:	pop	{fp, pc}

00013710 <table_get_double@@Base>:
   13710:	push	{fp, lr}
   13714:	mov	fp, sp
   13718:	bl	13594 <table_get@@Base>
   1371c:	vldr	d0, [r0]
   13720:	pop	{fp, pc}

00013724 <table_get_ldouble@@Base>:
   13724:	push	{fp, lr}
   13728:	mov	fp, sp
   1372c:	bl	13594 <table_get@@Base>
   13730:	vldr	d0, [r0]
   13734:	pop	{fp, pc}

00013738 <table_get_char@@Base>:
   13738:	push	{fp, lr}
   1373c:	mov	fp, sp
   13740:	bl	13594 <table_get@@Base>
   13744:	ldrb	r0, [r0]
   13748:	pop	{fp, pc}

0001374c <table_get_uchar@@Base>:
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	bl	13594 <table_get@@Base>
   13758:	ldrb	r0, [r0]
   1375c:	pop	{fp, pc}

00013760 <table_get_string@@Base>:
   13760:	b	13594 <table_get@@Base>

00013764 <table_get_ptr@@Base>:
   13764:	b	13594 <table_get@@Base>

00013768 <table_row_init@@Base>:
   13768:	push	{r4, r5, fp, lr}
   1376c:	add	fp, sp, #8
   13770:	mov	r4, r0
   13774:	bl	13790 <table_get_row_ptr@@Base>
   13778:	mov	r5, r0
   1377c:	ldr	r0, [r4, #12]
   13780:	lsl	r0, r0, #2
   13784:	bl	11ecc <malloc@plt>
   13788:	str	r0, [r5]
   1378c:	pop	{r4, r5, fp, pc}

00013790 <table_get_row_ptr@@Base>:
   13790:	ldr	r0, [r0, #16]
   13794:	add	r0, r0, r1, lsl #2
   13798:	bx	lr

0001379c <table_row_destroy@@Base>:
   1379c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   137a0:	add	fp, sp, #24
   137a4:	mov	r4, r1
   137a8:	mov	r5, r0
   137ac:	bl	12ad8 <table_get_column_length@@Base>
   137b0:	mov	r6, r0
   137b4:	mov	r0, r5
   137b8:	mov	r1, r4
   137bc:	bl	13790 <table_get_row_ptr@@Base>
   137c0:	mov	r8, r0
   137c4:	cmp	r6, #1
   137c8:	blt	137ec <table_row_destroy@@Base+0x50>
   137cc:	mov	r7, #0
   137d0:	mov	r0, r5
   137d4:	mov	r1, r4
   137d8:	mov	r2, r7
   137dc:	bl	14058 <table_cell_destroy@@Base>
   137e0:	add	r7, r7, #1
   137e4:	cmp	r6, r7
   137e8:	bne	137d0 <table_row_destroy@@Base+0x34>
   137ec:	ldr	r0, [r8]
   137f0:	cmp	r0, #0
   137f4:	beq	13800 <table_row_destroy@@Base+0x64>
   137f8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   137fc:	b	11ea8 <free@plt>
   13800:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013804 <table_get_row_length@@Base>:
   13804:	ldr	r0, [r0, #20]
   13808:	bx	lr

0001380c <table_add_row@@Base>:
   1380c:	push	{r4, sl, fp, lr}
   13810:	add	fp, sp, #8
   13814:	mov	r4, r0
   13818:	bl	13804 <table_get_row_length@@Base>
   1381c:	ldr	r1, [r4, #24]
   13820:	udiv	r2, r0, r1
   13824:	mls	r0, r2, r1, r0
   13828:	cmp	r0, #0
   1382c:	moveq	r0, r4
   13830:	bleq	13868 <table_add_row@@Base+0x5c>
   13834:	mov	r0, r4
   13838:	bl	13898 <table_add_row@@Base+0x8c>
   1383c:	mov	r0, r4
   13840:	bl	13804 <table_get_row_length@@Base>
   13844:	mov	r1, r0
   13848:	mov	r0, r4
   1384c:	mvn	r2, #0
   13850:	mov	r3, #2
   13854:	bl	129dc <table_notify@@Base>
   13858:	ldr	r0, [r4, #20]
   1385c:	add	r1, r0, #1
   13860:	str	r1, [r4, #20]
   13864:	pop	{r4, sl, fp, pc}
   13868:	push	{r4, sl, fp, lr}
   1386c:	add	fp, sp, #8
   13870:	mov	r4, r0
   13874:	ldr	r0, [r0, #16]
   13878:	ldr	r1, [r4, #24]
   1387c:	ldr	r2, [r4, #28]
   13880:	add	r1, r2, r1
   13884:	str	r1, [r4, #28]
   13888:	lsl	r1, r1, #2
   1388c:	bl	11eb4 <realloc@plt>
   13890:	str	r0, [r4, #16]
   13894:	pop	{r4, sl, fp, pc}
   13898:	push	{r4, r5, r6, r7, fp, lr}
   1389c:	add	fp, sp, #16
   138a0:	mov	r4, r0
   138a4:	bl	13804 <table_get_row_length@@Base>
   138a8:	mov	r5, r0
   138ac:	mov	r0, r4
   138b0:	bl	12ad8 <table_get_column_length@@Base>
   138b4:	mov	r6, r0
   138b8:	mov	r0, r4
   138bc:	mov	r1, r5
   138c0:	bl	13768 <table_row_init@@Base>
   138c4:	cmp	r6, #1
   138c8:	blt	138ec <table_add_row@@Base+0xe0>
   138cc:	mov	r7, #0
   138d0:	mov	r0, r4
   138d4:	mov	r1, r5
   138d8:	mov	r2, r7
   138dc:	bl	14024 <table_cell_init@@Base>
   138e0:	add	r7, r7, #1
   138e4:	cmp	r6, r7
   138e8:	bne	138d0 <table_add_row@@Base+0xc4>
   138ec:	pop	{r4, r5, r6, r7, fp, pc}

000138f0 <table_remove_row@@Base>:
   138f0:	push	{r4, r5, fp, lr}
   138f4:	add	fp, sp, #8
   138f8:	mov	r4, r1
   138fc:	mov	r5, r0
   13900:	bl	1394c <table_remove_row@@Base+0x5c>
   13904:	ldr	r0, [r5, #20]
   13908:	sub	r0, r0, #1
   1390c:	str	r0, [r5, #20]
   13910:	mov	r0, r5
   13914:	bl	13804 <table_get_row_length@@Base>
   13918:	ldr	r1, [r5, #24]
   1391c:	udiv	r2, r0, r1
   13920:	mls	r0, r2, r1, r0
   13924:	cmp	r0, #0
   13928:	moveq	r0, r5
   1392c:	bleq	13a0c <table_remove_row@@Base+0x11c>
   13930:	mov	r0, r5
   13934:	mov	r1, r4
   13938:	mvn	r2, #0
   1393c:	mov	r3, #4
   13940:	bl	129dc <table_notify@@Base>
   13944:	mov	r0, #0
   13948:	pop	{r4, r5, fp, pc}
   1394c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13950:	add	fp, sp, #24
   13954:	mov	r4, r1
   13958:	mov	r5, r0
   1395c:	bl	13804 <table_get_row_length@@Base>
   13960:	mov	r8, r0
   13964:	mov	r0, r5
   13968:	bl	12ad8 <table_get_column_length@@Base>
   1396c:	cmp	r0, #1
   13970:	blt	139c4 <table_remove_row@@Base+0xd4>
   13974:	mov	r7, r0
   13978:	mov	r6, #0
   1397c:	b	1398c <table_remove_row@@Base+0x9c>
   13980:	add	r6, r6, #1
   13984:	cmp	r7, r6
   13988:	beq	139c4 <table_remove_row@@Base+0xd4>
   1398c:	mov	r0, r5
   13990:	mov	r1, r6
   13994:	bl	12b4c <table_get_column_data_type@@Base>
   13998:	cmp	r0, #23
   1399c:	beq	13980 <table_remove_row@@Base+0x90>
   139a0:	mov	r0, r5
   139a4:	mov	r1, r4
   139a8:	mov	r2, r6
   139ac:	bl	1403c <table_get_cell_ptr@@Base>
   139b0:	ldr	r0, [r0]
   139b4:	cmp	r0, #0
   139b8:	beq	13980 <table_remove_row@@Base+0x90>
   139bc:	bl	11ea8 <free@plt>
   139c0:	b	13980 <table_remove_row@@Base+0x90>
   139c4:	mov	r0, r5
   139c8:	mov	r1, r4
   139cc:	bl	13790 <table_get_row_ptr@@Base>
   139d0:	ldr	r0, [r0]
   139d4:	cmp	r0, #0
   139d8:	beq	139e0 <table_remove_row@@Base+0xf0>
   139dc:	bl	11ea8 <free@plt>
   139e0:	sub	r0, r8, #1
   139e4:	cmp	r0, r4
   139e8:	ble	13a08 <table_remove_row@@Base+0x118>
   139ec:	ldr	r1, [r5, #16]
   139f0:	add	r2, r1, r4, lsl #2
   139f4:	ldr	r2, [r2, #4]
   139f8:	str	r2, [r1, r4, lsl #2]
   139fc:	add	r4, r4, #1
   13a00:	cmp	r0, r4
   13a04:	bne	139ec <table_remove_row@@Base+0xfc>
   13a08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a0c:	push	{r4, sl, fp, lr}
   13a10:	add	fp, sp, #8
   13a14:	mov	r4, r0
   13a18:	ldr	r0, [r0, #16]
   13a1c:	ldr	r1, [r4, #24]
   13a20:	ldr	r2, [r4, #28]
   13a24:	sub	r1, r2, r1
   13a28:	str	r1, [r4, #28]
   13a2c:	lsl	r1, r1, #2
   13a30:	bl	11eb4 <realloc@plt>
   13a34:	str	r0, [r4, #16]
   13a38:	pop	{r4, sl, fp, pc}

00013a3c <table_set_row_ptr@@Base>:
   13a3c:	ldr	r2, [r2]
   13a40:	ldr	r0, [r0, #16]
   13a44:	str	r2, [r0, r1, lsl #2]
   13a48:	bx	lr

00013a4c <table_set@@Base>:
   13a4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a50:	add	fp, sp, #24
   13a54:	mov	r8, r3
   13a58:	mov	r4, r2
   13a5c:	mov	r9, r1
   13a60:	mov	r6, r0
   13a64:	bl	1403c <table_get_cell_ptr@@Base>
   13a68:	mov	r5, r0
   13a6c:	mov	r0, r6
   13a70:	mov	r1, r4
   13a74:	bl	12aa8 <table_get_col_ptr@@Base>
   13a78:	mvn	r7, #0
   13a7c:	ldr	r1, [fp, #8]
   13a80:	cmp	r1, #23
   13a84:	bhi	13c3c <table_set@@Base+0x1f0>
   13a88:	add	r2, pc, #0
   13a8c:	ldr	pc, [r2, r1, lsl #2]
   13a90:	strdeq	r3, [r1], -r0
   13a94:	strdeq	r3, [r1], -r0
   13a98:	andeq	r3, r1, r8, ror #22
   13a9c:	andeq	r3, r1, r8, ror #22
   13aa0:	andeq	r3, r1, r0, lsr #23
   13aa4:	andeq	r3, r1, r0, lsr #23
   13aa8:	strdeq	r3, [r1], -r0
   13aac:	strdeq	r3, [r1], -r0
   13ab0:	andeq	r3, r1, r8, lsr #22
   13ab4:	andeq	r3, r1, r8, lsr #22
   13ab8:	andeq	r3, r1, r0, lsr #23
   13abc:	andeq	r3, r1, r0, lsr #23
   13ac0:	strdeq	r3, [r1], -r0
   13ac4:	strdeq	r3, [r1], -r0
   13ac8:	andeq	r3, r1, r8, lsr #22
   13acc:	andeq	r3, r1, r8, lsr #22
   13ad0:	strdeq	r3, [r1], -r0
   13ad4:	andeq	r3, r1, r8, lsr #22
   13ad8:	andeq	r3, r1, r8, lsr #22
   13adc:	andeq	r3, r1, r8, ror #22
   13ae0:	andeq	r3, r1, r8, ror #22
   13ae4:	ldrdeq	r3, [r1], -r8
   13ae8:	andeq	r3, r1, r8, ror #22
   13aec:	andeq	r3, r1, r4, lsl ip
   13af0:	ldr	r0, [r0, #4]
   13af4:	cmp	r0, r1
   13af8:	bne	13c3c <table_set@@Base+0x1f0>
   13afc:	ldr	r0, [r5]
   13b00:	cmp	r0, #0
   13b04:	bne	13b1c <table_set@@Base+0xd0>
   13b08:	mov	r0, #4
   13b0c:	bl	11ecc <malloc@plt>
   13b10:	str	r0, [r5]
   13b14:	cmp	r0, #0
   13b18:	beq	13c3c <table_set@@Base+0x1f0>
   13b1c:	ldr	r1, [r8]
   13b20:	str	r1, [r0]
   13b24:	b	13c24 <table_set@@Base+0x1d8>
   13b28:	ldr	r0, [r0, #4]
   13b2c:	cmp	r0, r1
   13b30:	bne	13c3c <table_set@@Base+0x1f0>
   13b34:	ldr	r0, [r5]
   13b38:	cmp	r0, #0
   13b3c:	bne	13b54 <table_set@@Base+0x108>
   13b40:	mov	r0, #8
   13b44:	bl	11ecc <malloc@plt>
   13b48:	str	r0, [r5]
   13b4c:	cmp	r0, #0
   13b50:	beq	13c3c <table_set@@Base+0x1f0>
   13b54:	ldr	r1, [r8]
   13b58:	ldr	r2, [r8, #4]
   13b5c:	str	r2, [r0, #4]
   13b60:	str	r1, [r0]
   13b64:	b	13c24 <table_set@@Base+0x1d8>
   13b68:	ldr	r0, [r0, #4]
   13b6c:	cmp	r0, r1
   13b70:	bne	13c3c <table_set@@Base+0x1f0>
   13b74:	ldr	r0, [r5]
   13b78:	cmp	r0, #0
   13b7c:	bne	13b94 <table_set@@Base+0x148>
   13b80:	mov	r0, #1
   13b84:	bl	11ecc <malloc@plt>
   13b88:	str	r0, [r5]
   13b8c:	cmp	r0, #0
   13b90:	beq	13c3c <table_set@@Base+0x1f0>
   13b94:	ldrb	r1, [r8]
   13b98:	strb	r1, [r0]
   13b9c:	b	13c24 <table_set@@Base+0x1d8>
   13ba0:	ldr	r0, [r0, #4]
   13ba4:	cmp	r0, r1
   13ba8:	bne	13c3c <table_set@@Base+0x1f0>
   13bac:	ldr	r0, [r5]
   13bb0:	cmp	r0, #0
   13bb4:	bne	13bcc <table_set@@Base+0x180>
   13bb8:	mov	r0, #2
   13bbc:	bl	11ecc <malloc@plt>
   13bc0:	str	r0, [r5]
   13bc4:	cmp	r0, #0
   13bc8:	beq	13c3c <table_set@@Base+0x1f0>
   13bcc:	ldrh	r1, [r8]
   13bd0:	strh	r1, [r0]
   13bd4:	b	13c24 <table_set@@Base+0x1d8>
   13bd8:	ldr	r0, [r0, #4]
   13bdc:	cmp	r0, r1
   13be0:	bne	13c3c <table_set@@Base+0x1f0>
   13be4:	mov	r0, r8
   13be8:	bl	11ef0 <strlen@plt>
   13bec:	ldr	r2, [r5]
   13bf0:	add	r1, r0, #1
   13bf4:	mov	r0, r2
   13bf8:	bl	11eb4 <realloc@plt>
   13bfc:	str	r0, [r5]
   13c00:	cmp	r0, #0
   13c04:	beq	13c3c <table_set@@Base+0x1f0>
   13c08:	mov	r1, r8
   13c0c:	bl	11ec0 <strcpy@plt>
   13c10:	b	13c24 <table_set@@Base+0x1d8>
   13c14:	ldr	r0, [r0, #4]
   13c18:	cmp	r0, r1
   13c1c:	bne	13c3c <table_set@@Base+0x1f0>
   13c20:	str	r8, [r5]
   13c24:	mov	r0, r6
   13c28:	mov	r1, r9
   13c2c:	mov	r2, r4
   13c30:	mov	r3, #1
   13c34:	bl	129dc <table_notify@@Base>
   13c38:	mov	r7, #0
   13c3c:	mov	r0, r7
   13c40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013c44 <table_set_bool@@Base>:
   13c44:	push	{fp, lr}
   13c48:	mov	fp, sp
   13c4c:	sub	sp, sp, #8
   13c50:	strb	r3, [fp, #-1]
   13c54:	mov	r3, #22
   13c58:	str	r3, [sp]
   13c5c:	sub	r3, fp, #1
   13c60:	bl	13a4c <table_set@@Base>
   13c64:	mov	sp, fp
   13c68:	pop	{fp, pc}

00013c6c <table_set_int@@Base>:
   13c6c:	push	{fp, lr}
   13c70:	mov	fp, sp
   13c74:	sub	sp, sp, #8
   13c78:	str	r3, [sp, #4]
   13c7c:	mov	r3, #0
   13c80:	str	r3, [sp]
   13c84:	add	r3, sp, #4
   13c88:	bl	13a4c <table_set@@Base>
   13c8c:	mov	sp, fp
   13c90:	pop	{fp, pc}

00013c94 <table_set_uint@@Base>:
   13c94:	push	{fp, lr}
   13c98:	mov	fp, sp
   13c9c:	sub	sp, sp, #8
   13ca0:	str	r3, [sp, #4]
   13ca4:	mov	r3, #1
   13ca8:	str	r3, [sp]
   13cac:	add	r3, sp, #4
   13cb0:	bl	13a4c <table_set@@Base>
   13cb4:	mov	sp, fp
   13cb8:	pop	{fp, pc}

00013cbc <table_set_int8@@Base>:
   13cbc:	push	{fp, lr}
   13cc0:	mov	fp, sp
   13cc4:	sub	sp, sp, #8
   13cc8:	strb	r3, [fp, #-1]
   13ccc:	mov	r3, #2
   13cd0:	str	r3, [sp]
   13cd4:	sub	r3, fp, #1
   13cd8:	bl	13a4c <table_set@@Base>
   13cdc:	mov	sp, fp
   13ce0:	pop	{fp, pc}

00013ce4 <table_set_uint8@@Base>:
   13ce4:	push	{fp, lr}
   13ce8:	mov	fp, sp
   13cec:	sub	sp, sp, #8
   13cf0:	strb	r3, [fp, #-1]
   13cf4:	mov	r3, #3
   13cf8:	str	r3, [sp]
   13cfc:	sub	r3, fp, #1
   13d00:	bl	13a4c <table_set@@Base>
   13d04:	mov	sp, fp
   13d08:	pop	{fp, pc}

00013d0c <table_set_int16@@Base>:
   13d0c:	push	{fp, lr}
   13d10:	mov	fp, sp
   13d14:	sub	sp, sp, #8
   13d18:	strh	r3, [fp, #-2]
   13d1c:	mov	r3, #4
   13d20:	str	r3, [sp]
   13d24:	sub	r3, fp, #2
   13d28:	bl	13a4c <table_set@@Base>
   13d2c:	mov	sp, fp
   13d30:	pop	{fp, pc}

00013d34 <table_set_uint16@@Base>:
   13d34:	push	{fp, lr}
   13d38:	mov	fp, sp
   13d3c:	sub	sp, sp, #8
   13d40:	strh	r3, [fp, #-2]
   13d44:	mov	r3, #5
   13d48:	str	r3, [sp]
   13d4c:	sub	r3, fp, #2
   13d50:	bl	13a4c <table_set@@Base>
   13d54:	mov	sp, fp
   13d58:	pop	{fp, pc}

00013d5c <table_set_int32@@Base>:
   13d5c:	push	{fp, lr}
   13d60:	mov	fp, sp
   13d64:	sub	sp, sp, #8
   13d68:	str	r3, [sp, #4]
   13d6c:	mov	r3, #6
   13d70:	str	r3, [sp]
   13d74:	add	r3, sp, #4
   13d78:	bl	13a4c <table_set@@Base>
   13d7c:	mov	sp, fp
   13d80:	pop	{fp, pc}

00013d84 <table_set_uint32@@Base>:
   13d84:	push	{fp, lr}
   13d88:	mov	fp, sp
   13d8c:	sub	sp, sp, #8
   13d90:	str	r3, [sp, #4]
   13d94:	mov	r3, #7
   13d98:	str	r3, [sp]
   13d9c:	add	r3, sp, #4
   13da0:	bl	13a4c <table_set@@Base>
   13da4:	mov	sp, fp
   13da8:	pop	{fp, pc}

00013dac <table_set_int64@@Base>:
   13dac:	push	{fp, lr}
   13db0:	mov	fp, sp
   13db4:	sub	sp, sp, #16
   13db8:	ldr	r3, [fp, #12]
   13dbc:	str	r3, [sp, #12]
   13dc0:	ldr	r3, [fp, #8]
   13dc4:	str	r3, [sp, #8]
   13dc8:	mov	r3, #8
   13dcc:	str	r3, [sp]
   13dd0:	add	r3, sp, #8
   13dd4:	bl	13a4c <table_set@@Base>
   13dd8:	mov	sp, fp
   13ddc:	pop	{fp, pc}

00013de0 <table_set_uint64@@Base>:
   13de0:	push	{fp, lr}
   13de4:	mov	fp, sp
   13de8:	sub	sp, sp, #16
   13dec:	ldr	r3, [fp, #12]
   13df0:	str	r3, [sp, #12]
   13df4:	ldr	r3, [fp, #8]
   13df8:	str	r3, [sp, #8]
   13dfc:	mov	r3, #9
   13e00:	str	r3, [sp]
   13e04:	add	r3, sp, #8
   13e08:	bl	13a4c <table_set@@Base>
   13e0c:	mov	sp, fp
   13e10:	pop	{fp, pc}

00013e14 <table_set_short@@Base>:
   13e14:	push	{fp, lr}
   13e18:	mov	fp, sp
   13e1c:	sub	sp, sp, #8
   13e20:	strh	r3, [fp, #-2]
   13e24:	mov	r3, #10
   13e28:	str	r3, [sp]
   13e2c:	sub	r3, fp, #2
   13e30:	bl	13a4c <table_set@@Base>
   13e34:	mov	sp, fp
   13e38:	pop	{fp, pc}

00013e3c <table_set_ushort@@Base>:
   13e3c:	push	{fp, lr}
   13e40:	mov	fp, sp
   13e44:	sub	sp, sp, #8
   13e48:	strh	r3, [fp, #-2]
   13e4c:	mov	r3, #11
   13e50:	str	r3, [sp]
   13e54:	sub	r3, fp, #2
   13e58:	bl	13a4c <table_set@@Base>
   13e5c:	mov	sp, fp
   13e60:	pop	{fp, pc}

00013e64 <table_set_long@@Base>:
   13e64:	push	{fp, lr}
   13e68:	mov	fp, sp
   13e6c:	sub	sp, sp, #8
   13e70:	str	r3, [sp, #4]
   13e74:	mov	r3, #12
   13e78:	str	r3, [sp]
   13e7c:	add	r3, sp, #4
   13e80:	bl	13a4c <table_set@@Base>
   13e84:	mov	sp, fp
   13e88:	pop	{fp, pc}

00013e8c <table_set_ulong@@Base>:
   13e8c:	push	{fp, lr}
   13e90:	mov	fp, sp
   13e94:	sub	sp, sp, #8
   13e98:	str	r3, [sp, #4]
   13e9c:	mov	r3, #13
   13ea0:	str	r3, [sp]
   13ea4:	add	r3, sp, #4
   13ea8:	bl	13a4c <table_set@@Base>
   13eac:	mov	sp, fp
   13eb0:	pop	{fp, pc}

00013eb4 <table_set_llong@@Base>:
   13eb4:	push	{fp, lr}
   13eb8:	mov	fp, sp
   13ebc:	sub	sp, sp, #16
   13ec0:	ldr	r3, [fp, #12]
   13ec4:	str	r3, [sp, #12]
   13ec8:	ldr	r3, [fp, #8]
   13ecc:	str	r3, [sp, #8]
   13ed0:	mov	r3, #14
   13ed4:	str	r3, [sp]
   13ed8:	add	r3, sp, #8
   13edc:	bl	13a4c <table_set@@Base>
   13ee0:	mov	sp, fp
   13ee4:	pop	{fp, pc}

00013ee8 <table_set_ullong@@Base>:
   13ee8:	push	{fp, lr}
   13eec:	mov	fp, sp
   13ef0:	sub	sp, sp, #16
   13ef4:	ldr	r3, [fp, #12]
   13ef8:	str	r3, [sp, #12]
   13efc:	ldr	r3, [fp, #8]
   13f00:	str	r3, [sp, #8]
   13f04:	mov	r3, #15
   13f08:	str	r3, [sp]
   13f0c:	add	r3, sp, #8
   13f10:	bl	13a4c <table_set@@Base>
   13f14:	mov	sp, fp
   13f18:	pop	{fp, pc}

00013f1c <table_set_float@@Base>:
   13f1c:	push	{fp, lr}
   13f20:	mov	fp, sp
   13f24:	sub	sp, sp, #8
   13f28:	vstr	s0, [sp, #4]
   13f2c:	mov	r3, #16
   13f30:	str	r3, [sp]
   13f34:	add	r3, sp, #4
   13f38:	bl	13a4c <table_set@@Base>
   13f3c:	mov	sp, fp
   13f40:	pop	{fp, pc}

00013f44 <table_set_double@@Base>:
   13f44:	push	{fp, lr}
   13f48:	mov	fp, sp
   13f4c:	sub	sp, sp, #16
   13f50:	vstr	d0, [sp, #8]
   13f54:	mov	r3, #17
   13f58:	str	r3, [sp]
   13f5c:	add	r3, sp, #8
   13f60:	bl	13a4c <table_set@@Base>
   13f64:	mov	sp, fp
   13f68:	pop	{fp, pc}

00013f6c <table_set_ldouble@@Base>:
   13f6c:	push	{fp, lr}
   13f70:	mov	fp, sp
   13f74:	sub	sp, sp, #16
   13f78:	vstr	d0, [sp, #8]
   13f7c:	mov	r3, #18
   13f80:	str	r3, [sp]
   13f84:	add	r3, sp, #8
   13f88:	bl	13a4c <table_set@@Base>
   13f8c:	mov	sp, fp
   13f90:	pop	{fp, pc}

00013f94 <table_set_string@@Base>:
   13f94:	push	{fp, lr}
   13f98:	mov	fp, sp
   13f9c:	sub	sp, sp, #8
   13fa0:	mov	ip, #21
   13fa4:	str	ip, [sp]
   13fa8:	bl	13a4c <table_set@@Base>
   13fac:	mov	sp, fp
   13fb0:	pop	{fp, pc}

00013fb4 <table_set_char@@Base>:
   13fb4:	push	{fp, lr}
   13fb8:	mov	fp, sp
   13fbc:	sub	sp, sp, #8
   13fc0:	strb	r3, [fp, #-1]
   13fc4:	mov	r3, #19
   13fc8:	str	r3, [sp]
   13fcc:	sub	r3, fp, #1
   13fd0:	bl	13a4c <table_set@@Base>
   13fd4:	mov	sp, fp
   13fd8:	pop	{fp, pc}

00013fdc <table_set_uchar@@Base>:
   13fdc:	push	{fp, lr}
   13fe0:	mov	fp, sp
   13fe4:	sub	sp, sp, #8
   13fe8:	strb	r3, [fp, #-1]
   13fec:	mov	r3, #20
   13ff0:	str	r3, [sp]
   13ff4:	sub	r3, fp, #1
   13ff8:	bl	13a4c <table_set@@Base>
   13ffc:	mov	sp, fp
   14000:	pop	{fp, pc}

00014004 <table_set_ptr@@Base>:
   14004:	push	{fp, lr}
   14008:	mov	fp, sp
   1400c:	sub	sp, sp, #8
   14010:	mov	ip, #23
   14014:	str	ip, [sp]
   14018:	bl	13a4c <table_set@@Base>
   1401c:	mov	sp, fp
   14020:	pop	{fp, pc}

00014024 <table_cell_init@@Base>:
   14024:	push	{fp, lr}
   14028:	mov	fp, sp
   1402c:	bl	1403c <table_get_cell_ptr@@Base>
   14030:	mov	r1, #0
   14034:	str	r1, [r0]
   14038:	pop	{fp, pc}

0001403c <table_get_cell_ptr@@Base>:
   1403c:	push	{r4, sl, fp, lr}
   14040:	add	fp, sp, #8
   14044:	mov	r4, r2
   14048:	bl	13790 <table_get_row_ptr@@Base>
   1404c:	ldr	r0, [r0]
   14050:	add	r0, r0, r4, lsl #2
   14054:	pop	{r4, sl, fp, pc}

00014058 <table_cell_destroy@@Base>:
   14058:	push	{r4, r5, r6, sl, fp, lr}
   1405c:	add	fp, sp, #16
   14060:	mov	r4, r2
   14064:	mov	r5, r1
   14068:	mov	r6, r0
   1406c:	mov	r1, r2
   14070:	bl	12b4c <table_get_column_data_type@@Base>
   14074:	cmp	r0, #23
   14078:	popeq	{r4, r5, r6, sl, fp, pc}
   1407c:	mov	r0, r6
   14080:	mov	r1, r5
   14084:	mov	r2, r4
   14088:	bl	1403c <table_get_cell_ptr@@Base>
   1408c:	ldr	r0, [r0]
   14090:	cmp	r0, #0
   14094:	beq	140a0 <table_cell_destroy@@Base+0x48>
   14098:	pop	{r4, r5, r6, sl, fp, lr}
   1409c:	b	11ea8 <free@plt>
   140a0:	pop	{r4, r5, r6, sl, fp, pc}

000140a4 <table_cell_to_buffer@@Base>:
   140a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   140a8:	add	fp, sp, #24
   140ac:	sub	sp, sp, #8
   140b0:	mov	r5, r3
   140b4:	mov	r6, r2
   140b8:	mov	r7, r1
   140bc:	mov	r4, r0
   140c0:	mov	r1, r2
   140c4:	bl	12b4c <table_get_column_data_type@@Base>
   140c8:	cmp	r0, #23
   140cc:	bhi	143bc <table_cell_to_buffer@@Base+0x318>
   140d0:	ldr	r8, [fp, #8]
   140d4:	add	r1, pc, #0
   140d8:	ldr	pc, [r1, r0, lsl #2]
   140dc:	andeq	r4, r1, ip, lsr r1
   140e0:	andeq	r4, r1, r0, asr r1
   140e4:	andeq	r4, r1, r4, ror #2
   140e8:	andeq	r4, r1, r8, ror r1
   140ec:	andeq	r4, r1, ip, lsl #3
   140f0:	andeq	r4, r1, r0, lsr #3
   140f4:			; <UNDEFINED> instruction: 0x000141b4
   140f8:	andeq	r4, r1, r8, asr #3
   140fc:	andeq	r4, r1, r8, ror #3
   14100:	strdeq	r4, [r1], -ip
   14104:	andeq	r4, r1, r0, lsl r2
   14108:	andeq	r4, r1, r0, lsr r2
   1410c:	andeq	r4, r1, r0, asr r2
   14110:	andeq	r4, r1, r0, ror r2
   14114:	muleq	r1, r0, r2
   14118:			; <UNDEFINED> instruction: 0x000142b0
   1411c:	ldrdeq	r4, [r1], -r0
   14120:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14124:	andeq	r4, r1, r4, lsl r3
   14128:	andeq	r4, r1, r0, asr #6
   1412c:	andeq	r4, r1, r4, asr r3
   14130:	andeq	r4, r1, r4, ror r3
   14134:	muleq	r1, r4, r3
   14138:	andeq	r4, r1, r8, asr #7
   1413c:	mov	r0, r4
   14140:	mov	r1, r7
   14144:	mov	r2, r6
   14148:	bl	135bc <table_get_int@@Base>
   1414c:	b	143a4 <table_cell_to_buffer@@Base+0x300>
   14150:	mov	r0, r4
   14154:	mov	r1, r7
   14158:	mov	r2, r6
   1415c:	bl	135d0 <table_get_uint@@Base>
   14160:	b	141d8 <table_cell_to_buffer@@Base+0x134>
   14164:	mov	r0, r4
   14168:	mov	r1, r7
   1416c:	mov	r2, r6
   14170:	bl	135e4 <table_get_int8@@Base>
   14174:	b	143a4 <table_cell_to_buffer@@Base+0x300>
   14178:	mov	r0, r4
   1417c:	mov	r1, r7
   14180:	mov	r2, r6
   14184:	bl	135f8 <table_get_uint8@@Base>
   14188:	b	141d8 <table_cell_to_buffer@@Base+0x134>
   1418c:	mov	r0, r4
   14190:	mov	r1, r7
   14194:	mov	r2, r6
   14198:	bl	1360c <table_get_int16@@Base>
   1419c:	b	143a4 <table_cell_to_buffer@@Base+0x300>
   141a0:	mov	r0, r4
   141a4:	mov	r1, r7
   141a8:	mov	r2, r6
   141ac:	bl	13620 <table_get_uint16@@Base>
   141b0:	b	141d8 <table_cell_to_buffer@@Base+0x134>
   141b4:	mov	r0, r4
   141b8:	mov	r1, r7
   141bc:	mov	r2, r6
   141c0:	bl	13634 <table_get_int32@@Base>
   141c4:	b	143a4 <table_cell_to_buffer@@Base+0x300>
   141c8:	mov	r0, r4
   141cc:	mov	r1, r7
   141d0:	mov	r2, r6
   141d4:	bl	13648 <table_get_uint32@@Base>
   141d8:	mov	r3, r0
   141dc:	movw	r2, #19375	; 0x4baf
   141e0:	movt	r2, #1
   141e4:	b	143b0 <table_cell_to_buffer@@Base+0x30c>
   141e8:	mov	r0, r4
   141ec:	mov	r1, r7
   141f0:	mov	r2, r6
   141f4:	bl	1365c <table_get_int64@@Base>
   141f8:	b	142a0 <table_cell_to_buffer@@Base+0x1fc>
   141fc:	mov	r0, r4
   14200:	mov	r1, r7
   14204:	mov	r2, r6
   14208:	bl	13670 <table_get_uint64@@Base>
   1420c:	b	142c0 <table_cell_to_buffer@@Base+0x21c>
   14210:	mov	r0, r4
   14214:	mov	r1, r7
   14218:	mov	r2, r6
   1421c:	bl	13684 <table_get_short@@Base>
   14220:	mov	r3, r0
   14224:	movw	r2, #19388	; 0x4bbc
   14228:	movt	r2, #1
   1422c:	b	143b0 <table_cell_to_buffer@@Base+0x30c>
   14230:	mov	r0, r4
   14234:	mov	r1, r7
   14238:	mov	r2, r6
   1423c:	bl	13698 <table_get_ushort@@Base>
   14240:	mov	r3, r0
   14244:	movw	r2, #19392	; 0x4bc0
   14248:	movt	r2, #1
   1424c:	b	143b0 <table_cell_to_buffer@@Base+0x30c>
   14250:	mov	r0, r4
   14254:	mov	r1, r7
   14258:	mov	r2, r6
   1425c:	bl	136ac <table_get_long@@Base>
   14260:	mov	r3, r0
   14264:	movw	r2, #19396	; 0x4bc4
   14268:	movt	r2, #1
   1426c:	b	143b0 <table_cell_to_buffer@@Base+0x30c>
   14270:	mov	r0, r4
   14274:	mov	r1, r7
   14278:	mov	r2, r6
   1427c:	bl	136c0 <table_get_ulong@@Base>
   14280:	mov	r3, r0
   14284:	movw	r2, #19400	; 0x4bc8
   14288:	movt	r2, #1
   1428c:	b	143b0 <table_cell_to_buffer@@Base+0x30c>
   14290:	mov	r0, r4
   14294:	mov	r1, r7
   14298:	mov	r2, r6
   1429c:	bl	136d4 <table_get_llong@@Base>
   142a0:	stm	sp, {r0, r1}
   142a4:	movw	r2, #19378	; 0x4bb2
   142a8:	movt	r2, #1
   142ac:	b	14330 <table_cell_to_buffer@@Base+0x28c>
   142b0:	mov	r0, r4
   142b4:	mov	r1, r7
   142b8:	mov	r2, r6
   142bc:	bl	136e8 <table_get_ullong@@Base>
   142c0:	stm	sp, {r0, r1}
   142c4:	movw	r2, #19383	; 0x4bb7
   142c8:	movt	r2, #1
   142cc:	b	14330 <table_cell_to_buffer@@Base+0x28c>
   142d0:	mov	r0, r4
   142d4:	mov	r1, r7
   142d8:	mov	r2, r6
   142dc:	bl	136fc <table_get_float@@Base>
   142e0:	vcvt.f64.f32	d16, s0
   142e4:	vstr	d16, [sp]
   142e8:	movw	r2, #19407	; 0x4bcf
   142ec:	movt	r2, #1
   142f0:	b	14330 <table_cell_to_buffer@@Base+0x28c>
   142f4:	mov	r0, r4
   142f8:	mov	r1, r7
   142fc:	mov	r2, r6
   14300:	bl	13710 <table_get_double@@Base>
   14304:	vstr	d0, [sp]
   14308:	movw	r2, #19410	; 0x4bd2
   1430c:	movt	r2, #1
   14310:	b	14330 <table_cell_to_buffer@@Base+0x28c>
   14314:	mov	r0, r4
   14318:	mov	r1, r7
   1431c:	mov	r2, r6
   14320:	bl	13724 <table_get_ldouble@@Base>
   14324:	vstr	d0, [sp]
   14328:	movw	r2, #19414	; 0x4bd6
   1432c:	movt	r2, #1
   14330:	mov	r0, r5
   14334:	mov	r1, r8
   14338:	bl	11efc <snprintf@plt>
   1433c:	b	143bc <table_cell_to_buffer@@Base+0x318>
   14340:	mov	r0, r4
   14344:	mov	r1, r7
   14348:	mov	r2, r6
   1434c:	bl	13738 <table_get_char@@Base>
   14350:	b	14364 <table_cell_to_buffer@@Base+0x2c0>
   14354:	mov	r0, r4
   14358:	mov	r1, r7
   1435c:	mov	r2, r6
   14360:	bl	1374c <table_get_uchar@@Base>
   14364:	mov	r3, r0
   14368:	movw	r2, #19418	; 0x4bda
   1436c:	movt	r2, #1
   14370:	b	143b0 <table_cell_to_buffer@@Base+0x30c>
   14374:	mov	r0, r4
   14378:	mov	r1, r7
   1437c:	mov	r2, r6
   14380:	bl	13760 <table_get_string@@Base>
   14384:	mov	r3, r0
   14388:	movw	r2, #19404	; 0x4bcc
   1438c:	movt	r2, #1
   14390:	b	143b0 <table_cell_to_buffer@@Base+0x30c>
   14394:	mov	r0, r4
   14398:	mov	r1, r7
   1439c:	mov	r2, r6
   143a0:	bl	135a8 <table_get_bool@@Base>
   143a4:	mov	r3, r0
   143a8:	movw	r2, #19372	; 0x4bac
   143ac:	movt	r2, #1
   143b0:	mov	r0, r5
   143b4:	mov	r1, r8
   143b8:	bl	11efc <snprintf@plt>
   143bc:	mov	r0, #0
   143c0:	sub	sp, fp, #24
   143c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   143c8:	mov	r0, r4
   143cc:	mov	r1, r7
   143d0:	mov	r2, r6
   143d4:	bl	13764 <table_get_ptr@@Base>
   143d8:	mov	r3, r0
   143dc:	movw	r2, #19421	; 0x4bdd
   143e0:	movt	r2, #1
   143e4:	b	143b0 <table_cell_to_buffer@@Base+0x30c>

000143e8 <table_cell_from_buffer@@Base>:
   143e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143ec:	add	fp, sp, #24
   143f0:	sub	sp, sp, #264	; 0x108
   143f4:	mov	r7, r3
   143f8:	mov	r4, r2
   143fc:	mov	r5, r1
   14400:	mov	r6, r0
   14404:	mov	r1, r2
   14408:	bl	12b4c <table_get_column_data_type@@Base>
   1440c:	cmp	r0, #23
   14410:	bhi	14a40 <table_cell_from_buffer@@Base+0x658>
   14414:	add	r1, pc, #0
   14418:	ldr	pc, [r1, r0, lsl #2]
   1441c:	andeq	r4, r1, ip, ror r4
   14420:			; <UNDEFINED> instruction: 0x000144b8
   14424:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14428:	andeq	r4, r1, r0, lsr r5
   1442c:	andeq	r4, r1, ip, ror #10
   14430:	andeq	r4, r1, r8, lsr #11
   14434:	andeq	r4, r1, r4, ror #11
   14438:	andeq	r4, r1, r0, lsr #12
   1443c:	andeq	r4, r1, ip, asr r6
   14440:	andeq	r4, r1, r0, lsr #13
   14444:	andeq	r4, r1, r4, ror #13
   14448:	andeq	r4, r1, r0, lsr #14
   1444c:	andeq	r4, r1, ip, asr r7
   14450:	muleq	r1, r8, r7
   14454:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14458:	andeq	r4, r1, r8, lsl r8
   1445c:	andeq	r4, r1, ip, asr r8
   14460:	muleq	r1, r8, r8
   14464:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14468:	andeq	r4, r1, r0, lsl r9
   1446c:	andeq	r4, r1, ip, asr #18
   14470:	andeq	r4, r1, r8, lsl #19
   14474:	andeq	r4, r1, r4, asr #19
   14478:	andeq	r4, r1, r8, lsl #20
   1447c:	movw	r1, #19372	; 0x4bac
   14480:	movt	r1, #1
   14484:	add	r2, sp, #8
   14488:	mov	r0, r7
   1448c:	bl	11f08 <__isoc99_sscanf@plt>
   14490:	mov	r1, r0
   14494:	mvn	r0, #0
   14498:	cmp	r1, #1
   1449c:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   144a0:	ldr	r3, [sp, #8]
   144a4:	mov	r0, r6
   144a8:	mov	r1, r5
   144ac:	mov	r2, r4
   144b0:	bl	13c6c <table_set_int@@Base>
   144b4:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   144b8:	movw	r1, #19375	; 0x4baf
   144bc:	movt	r1, #1
   144c0:	add	r2, sp, #8
   144c4:	mov	r0, r7
   144c8:	bl	11f08 <__isoc99_sscanf@plt>
   144cc:	mov	r1, r0
   144d0:	mvn	r0, #0
   144d4:	cmp	r1, #1
   144d8:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   144dc:	ldr	r3, [sp, #8]
   144e0:	mov	r0, r6
   144e4:	mov	r1, r5
   144e8:	mov	r2, r4
   144ec:	bl	13c94 <table_set_uint@@Base>
   144f0:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   144f4:	movw	r1, #19424	; 0x4be0
   144f8:	movt	r1, #1
   144fc:	add	r2, sp, #8
   14500:	mov	r0, r7
   14504:	bl	11f08 <__isoc99_sscanf@plt>
   14508:	mov	r1, r0
   1450c:	mvn	r0, #0
   14510:	cmp	r1, #1
   14514:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14518:	ldrsb	r3, [sp, #8]
   1451c:	mov	r0, r6
   14520:	mov	r1, r5
   14524:	mov	r2, r4
   14528:	bl	13cbc <table_set_int8@@Base>
   1452c:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14530:	movw	r1, #19429	; 0x4be5
   14534:	movt	r1, #1
   14538:	add	r2, sp, #8
   1453c:	mov	r0, r7
   14540:	bl	11f08 <__isoc99_sscanf@plt>
   14544:	mov	r1, r0
   14548:	mvn	r0, #0
   1454c:	cmp	r1, #1
   14550:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14554:	ldrb	r3, [sp, #8]
   14558:	mov	r0, r6
   1455c:	mov	r1, r5
   14560:	mov	r2, r4
   14564:	bl	13ce4 <table_set_uint8@@Base>
   14568:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   1456c:	movw	r1, #19388	; 0x4bbc
   14570:	movt	r1, #1
   14574:	add	r2, sp, #8
   14578:	mov	r0, r7
   1457c:	bl	11f08 <__isoc99_sscanf@plt>
   14580:	mov	r1, r0
   14584:	mvn	r0, #0
   14588:	cmp	r1, #1
   1458c:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14590:	ldrsh	r3, [sp, #8]
   14594:	mov	r0, r6
   14598:	mov	r1, r5
   1459c:	mov	r2, r4
   145a0:	bl	13d0c <table_set_int16@@Base>
   145a4:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   145a8:	movw	r1, #19392	; 0x4bc0
   145ac:	movt	r1, #1
   145b0:	add	r2, sp, #8
   145b4:	mov	r0, r7
   145b8:	bl	11f08 <__isoc99_sscanf@plt>
   145bc:	mov	r1, r0
   145c0:	mvn	r0, #0
   145c4:	cmp	r1, #1
   145c8:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   145cc:	ldrh	r3, [sp, #8]
   145d0:	mov	r0, r6
   145d4:	mov	r1, r5
   145d8:	mov	r2, r4
   145dc:	bl	13d34 <table_set_uint16@@Base>
   145e0:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   145e4:	movw	r1, #19372	; 0x4bac
   145e8:	movt	r1, #1
   145ec:	add	r2, sp, #8
   145f0:	mov	r0, r7
   145f4:	bl	11f08 <__isoc99_sscanf@plt>
   145f8:	mov	r1, r0
   145fc:	mvn	r0, #0
   14600:	cmp	r1, #1
   14604:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14608:	ldr	r3, [sp, #8]
   1460c:	mov	r0, r6
   14610:	mov	r1, r5
   14614:	mov	r2, r4
   14618:	bl	13d5c <table_set_int32@@Base>
   1461c:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14620:	movw	r1, #19375	; 0x4baf
   14624:	movt	r1, #1
   14628:	add	r2, sp, #8
   1462c:	mov	r0, r7
   14630:	bl	11f08 <__isoc99_sscanf@plt>
   14634:	mov	r1, r0
   14638:	mvn	r0, #0
   1463c:	cmp	r1, #1
   14640:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14644:	ldr	r3, [sp, #8]
   14648:	mov	r0, r6
   1464c:	mov	r1, r5
   14650:	mov	r2, r4
   14654:	bl	13d84 <table_set_uint32@@Base>
   14658:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   1465c:	movw	r1, #19378	; 0x4bb2
   14660:	movt	r1, #1
   14664:	add	r2, sp, #8
   14668:	mov	r0, r7
   1466c:	bl	11f08 <__isoc99_sscanf@plt>
   14670:	mov	r1, r0
   14674:	mvn	r0, #0
   14678:	cmp	r1, #1
   1467c:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14680:	ldr	r0, [sp, #8]
   14684:	ldr	r1, [sp, #12]
   14688:	stm	sp, {r0, r1}
   1468c:	mov	r0, r6
   14690:	mov	r1, r5
   14694:	mov	r2, r4
   14698:	bl	13dac <table_set_int64@@Base>
   1469c:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   146a0:	movw	r1, #19383	; 0x4bb7
   146a4:	movt	r1, #1
   146a8:	add	r2, sp, #8
   146ac:	mov	r0, r7
   146b0:	bl	11f08 <__isoc99_sscanf@plt>
   146b4:	mov	r1, r0
   146b8:	mvn	r0, #0
   146bc:	cmp	r1, #1
   146c0:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   146c4:	ldr	r0, [sp, #8]
   146c8:	ldr	r1, [sp, #12]
   146cc:	stm	sp, {r0, r1}
   146d0:	mov	r0, r6
   146d4:	mov	r1, r5
   146d8:	mov	r2, r4
   146dc:	bl	13de0 <table_set_uint64@@Base>
   146e0:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   146e4:	movw	r1, #19388	; 0x4bbc
   146e8:	movt	r1, #1
   146ec:	add	r2, sp, #8
   146f0:	mov	r0, r7
   146f4:	bl	11f08 <__isoc99_sscanf@plt>
   146f8:	mov	r1, r0
   146fc:	mvn	r0, #0
   14700:	cmp	r1, #1
   14704:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14708:	ldrsh	r3, [sp, #8]
   1470c:	mov	r0, r6
   14710:	mov	r1, r5
   14714:	mov	r2, r4
   14718:	bl	13e14 <table_set_short@@Base>
   1471c:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14720:	movw	r1, #19392	; 0x4bc0
   14724:	movt	r1, #1
   14728:	add	r2, sp, #8
   1472c:	mov	r0, r7
   14730:	bl	11f08 <__isoc99_sscanf@plt>
   14734:	mov	r1, r0
   14738:	mvn	r0, #0
   1473c:	cmp	r1, #1
   14740:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14744:	ldrh	r3, [sp, #8]
   14748:	mov	r0, r6
   1474c:	mov	r1, r5
   14750:	mov	r2, r4
   14754:	bl	13e3c <table_set_ushort@@Base>
   14758:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   1475c:	movw	r1, #19396	; 0x4bc4
   14760:	movt	r1, #1
   14764:	add	r2, sp, #8
   14768:	mov	r0, r7
   1476c:	bl	11f08 <__isoc99_sscanf@plt>
   14770:	mov	r1, r0
   14774:	mvn	r0, #0
   14778:	cmp	r1, #1
   1477c:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14780:	ldr	r3, [sp, #8]
   14784:	mov	r0, r6
   14788:	mov	r1, r5
   1478c:	mov	r2, r4
   14790:	bl	13e64 <table_set_long@@Base>
   14794:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14798:	movw	r1, #19400	; 0x4bc8
   1479c:	movt	r1, #1
   147a0:	add	r2, sp, #8
   147a4:	mov	r0, r7
   147a8:	bl	11f08 <__isoc99_sscanf@plt>
   147ac:	mov	r1, r0
   147b0:	mvn	r0, #0
   147b4:	cmp	r1, #1
   147b8:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   147bc:	ldr	r3, [sp, #8]
   147c0:	mov	r0, r6
   147c4:	mov	r1, r5
   147c8:	mov	r2, r4
   147cc:	bl	13e8c <table_set_ulong@@Base>
   147d0:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   147d4:	movw	r1, #19378	; 0x4bb2
   147d8:	movt	r1, #1
   147dc:	add	r2, sp, #8
   147e0:	mov	r0, r7
   147e4:	bl	11f08 <__isoc99_sscanf@plt>
   147e8:	mov	r1, r0
   147ec:	mvn	r0, #0
   147f0:	cmp	r1, #1
   147f4:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   147f8:	ldr	r0, [sp, #8]
   147fc:	ldr	r1, [sp, #12]
   14800:	stm	sp, {r0, r1}
   14804:	mov	r0, r6
   14808:	mov	r1, r5
   1480c:	mov	r2, r4
   14810:	bl	13eb4 <table_set_llong@@Base>
   14814:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14818:	movw	r1, #19383	; 0x4bb7
   1481c:	movt	r1, #1
   14820:	add	r2, sp, #8
   14824:	mov	r0, r7
   14828:	bl	11f08 <__isoc99_sscanf@plt>
   1482c:	mov	r1, r0
   14830:	mvn	r0, #0
   14834:	cmp	r1, #1
   14838:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   1483c:	ldr	r0, [sp, #8]
   14840:	ldr	r1, [sp, #12]
   14844:	stm	sp, {r0, r1}
   14848:	mov	r0, r6
   1484c:	mov	r1, r5
   14850:	mov	r2, r4
   14854:	bl	13ee8 <table_set_ullong@@Base>
   14858:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   1485c:	movw	r1, #19407	; 0x4bcf
   14860:	movt	r1, #1
   14864:	add	r2, sp, #8
   14868:	mov	r0, r7
   1486c:	bl	11f08 <__isoc99_sscanf@plt>
   14870:	mov	r1, r0
   14874:	mvn	r0, #0
   14878:	cmp	r1, #1
   1487c:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14880:	vldr	s0, [sp, #8]
   14884:	mov	r0, r6
   14888:	mov	r1, r5
   1488c:	mov	r2, r4
   14890:	bl	13f1c <table_set_float@@Base>
   14894:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14898:	movw	r1, #19410	; 0x4bd2
   1489c:	movt	r1, #1
   148a0:	add	r2, sp, #8
   148a4:	mov	r0, r7
   148a8:	bl	11f08 <__isoc99_sscanf@plt>
   148ac:	mov	r1, r0
   148b0:	mvn	r0, #0
   148b4:	cmp	r1, #1
   148b8:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   148bc:	vldr	d0, [sp, #8]
   148c0:	mov	r0, r6
   148c4:	mov	r1, r5
   148c8:	mov	r2, r4
   148cc:	bl	13f44 <table_set_double@@Base>
   148d0:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   148d4:	movw	r1, #19414	; 0x4bd6
   148d8:	movt	r1, #1
   148dc:	add	r2, sp, #8
   148e0:	mov	r0, r7
   148e4:	bl	11f08 <__isoc99_sscanf@plt>
   148e8:	mov	r1, r0
   148ec:	mvn	r0, #0
   148f0:	cmp	r1, #1
   148f4:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   148f8:	vldr	d0, [sp, #8]
   148fc:	mov	r0, r6
   14900:	mov	r1, r5
   14904:	mov	r2, r4
   14908:	bl	13f6c <table_set_ldouble@@Base>
   1490c:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14910:	movw	r1, #19418	; 0x4bda
   14914:	movt	r1, #1
   14918:	add	r2, sp, #8
   1491c:	mov	r0, r7
   14920:	bl	11f08 <__isoc99_sscanf@plt>
   14924:	mov	r1, r0
   14928:	mvn	r0, #0
   1492c:	cmp	r1, #1
   14930:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14934:	ldrb	r3, [sp, #8]
   14938:	mov	r0, r6
   1493c:	mov	r1, r5
   14940:	mov	r2, r4
   14944:	bl	13fb4 <table_set_char@@Base>
   14948:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   1494c:	movw	r1, #19418	; 0x4bda
   14950:	movt	r1, #1
   14954:	add	r2, sp, #8
   14958:	mov	r0, r7
   1495c:	bl	11f08 <__isoc99_sscanf@plt>
   14960:	mov	r1, r0
   14964:	mvn	r0, #0
   14968:	cmp	r1, #1
   1496c:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14970:	ldrb	r3, [sp, #8]
   14974:	mov	r0, r6
   14978:	mov	r1, r5
   1497c:	mov	r2, r4
   14980:	bl	13fdc <table_set_uchar@@Base>
   14984:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14988:	movw	r1, #19404	; 0x4bcc
   1498c:	movt	r1, #1
   14990:	add	r2, sp, #8
   14994:	mov	r0, r7
   14998:	bl	11f08 <__isoc99_sscanf@plt>
   1499c:	mov	r1, r0
   149a0:	mvn	r0, #0
   149a4:	cmp	r1, #1
   149a8:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   149ac:	add	r3, sp, #8
   149b0:	mov	r0, r6
   149b4:	mov	r1, r5
   149b8:	mov	r2, r4
   149bc:	bl	13f94 <table_set_string@@Base>
   149c0:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   149c4:	movw	r1, #19372	; 0x4bac
   149c8:	movt	r1, #1
   149cc:	add	r2, sp, #8
   149d0:	mov	r0, r7
   149d4:	bl	11f08 <__isoc99_sscanf@plt>
   149d8:	mov	r1, r0
   149dc:	mvn	r0, #0
   149e0:	cmp	r1, #1
   149e4:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   149e8:	ldr	r3, [sp, #8]
   149ec:	cmp	r3, #0
   149f0:	movwne	r3, #1
   149f4:	mov	r0, r6
   149f8:	mov	r1, r5
   149fc:	mov	r2, r4
   14a00:	bl	13c44 <table_set_bool@@Base>
   14a04:	b	14a40 <table_cell_from_buffer@@Base+0x658>
   14a08:	movw	r1, #19421	; 0x4bdd
   14a0c:	movt	r1, #1
   14a10:	add	r2, sp, #8
   14a14:	mov	r0, r7
   14a18:	bl	11f08 <__isoc99_sscanf@plt>
   14a1c:	mov	r1, r0
   14a20:	mvn	r0, #0
   14a24:	cmp	r1, #1
   14a28:	bne	14a44 <table_cell_from_buffer@@Base+0x65c>
   14a2c:	ldr	r3, [sp, #8]
   14a30:	mov	r0, r6
   14a34:	mov	r1, r5
   14a38:	mov	r2, r4
   14a3c:	bl	14004 <table_set_ptr@@Base>
   14a40:	mov	r0, #0
   14a44:	sub	sp, fp, #24
   14a48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a4c <table_cell_nullify@@Base>:
   14a4c:	push	{r4, sl, fp, lr}
   14a50:	add	fp, sp, #8
   14a54:	bl	1403c <table_get_cell_ptr@@Base>
   14a58:	mov	r4, r0
   14a5c:	ldr	r0, [r0]
   14a60:	cmp	r0, #0
   14a64:	beq	14a74 <table_cell_nullify@@Base+0x28>
   14a68:	bl	11ea8 <free@plt>
   14a6c:	mov	r0, #0
   14a70:	str	r0, [r4]
   14a74:	mov	r0, #0
   14a78:	pop	{r4, sl, fp, pc}

00014a7c <__libc_csu_init@@Base>:
   14a7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a80:	mov	r7, r0
   14a84:	ldr	r6, [pc, #72]	; 14ad4 <__libc_csu_init@@Base+0x58>
   14a88:	ldr	r5, [pc, #72]	; 14ad8 <__libc_csu_init@@Base+0x5c>
   14a8c:	add	r6, pc, r6
   14a90:	add	r5, pc, r5
   14a94:	sub	r6, r6, r5
   14a98:	mov	r8, r1
   14a9c:	mov	r9, r2
   14aa0:	bl	11e70 <strcmp@plt-0x20>
   14aa4:	asrs	r6, r6, #2
   14aa8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14aac:	mov	r4, #0
   14ab0:	add	r4, r4, #1
   14ab4:	ldr	r3, [r5], #4
   14ab8:	mov	r2, r9
   14abc:	mov	r1, r8
   14ac0:	mov	r0, r7
   14ac4:	blx	r3
   14ac8:	cmp	r6, r4
   14acc:	bne	14ab0 <__libc_csu_init@@Base+0x34>
   14ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ad4:	andeq	r0, r1, r8, ror r4
   14ad8:	andeq	r0, r1, r0, ror r4

00014adc <__libc_csu_fini@@Base>:
   14adc:	bx	lr

Disassembly of section .fini:

00014ae0 <.fini>:
   14ae0:	push	{r3, lr}
   14ae4:	pop	{r3, pc}
