
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00010f70 <.init>:
   10f70:	push	{r3, lr}
   10f74:	bl	1144c <dcngettext@plt+0x180>
   10f78:	pop	{r3, pc}

Disassembly of section .plt:

00010f7c <calloc@plt-0x14>:
   10f7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f80:	ldr	lr, [pc, #4]	; 10f8c <calloc@plt-0x4>
   10f84:	add	lr, pc, lr
   10f88:	ldr	pc, [lr, #8]!
   10f8c:	andeq	sl, r1, r4, ror r0

00010f90 <calloc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #106496	; 0x1a000
   10f98:	ldr	pc, [ip, #116]!	; 0x74

00010f9c <fputs_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #106496	; 0x1a000
   10fa4:	ldr	pc, [ip, #108]!	; 0x6c

00010fa8 <raise@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #106496	; 0x1a000
   10fb0:	ldr	pc, [ip, #100]!	; 0x64

00010fb4 <gmtime_r@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #106496	; 0x1a000
   10fbc:	ldr	pc, [ip, #92]!	; 0x5c

00010fc0 <strcmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #106496	; 0x1a000
   10fc8:	ldr	pc, [ip, #84]!	; 0x54

00010fcc <mktime@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #106496	; 0x1a000
   10fd4:	ldr	pc, [ip, #76]!	; 0x4c

00010fd8 <fflush@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #106496	; 0x1a000
   10fe0:	ldr	pc, [ip, #68]!	; 0x44

00010fe4 <utmpxname@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #106496	; 0x1a000
   10fec:	ldr	pc, [ip, #60]!	; 0x3c

00010ff0 <free@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #106496	; 0x1a000
   10ff8:	ldr	pc, [ip, #52]!	; 0x34

00010ffc <_exit@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #106496	; 0x1a000
   11004:	ldr	pc, [ip, #44]!	; 0x2c

00011008 <memcpy@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #106496	; 0x1a000
   11010:	ldr	pc, [ip, #36]!	; 0x24

00011014 <mbsinit@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #106496	; 0x1a000
   1101c:	ldr	pc, [ip, #28]!

00011020 <time@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #106496	; 0x1a000
   11028:	ldr	pc, [ip, #20]!

0001102c <memcmp@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #106496	; 0x1a000
   11034:	ldr	pc, [ip, #12]!

00011038 <fputc_unlocked@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #106496	; 0x1a000
   11040:	ldr	pc, [ip, #4]!

00011044 <dcgettext@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #102400	; 0x19000
   1104c:	ldr	pc, [ip, #4092]!	; 0xffc

00011050 <setutxent@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #102400	; 0x19000
   11058:	ldr	pc, [ip, #4084]!	; 0xff4

0001105c <realloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #102400	; 0x19000
   11064:	ldr	pc, [ip, #4076]!	; 0xfec

00011068 <localtime_r@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #102400	; 0x19000
   11070:	ldr	pc, [ip, #4068]!	; 0xfe4

00011074 <textdomain@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #102400	; 0x19000
   1107c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011080 <iswprint@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #102400	; 0x19000
   11088:	ldr	pc, [ip, #4052]!	; 0xfd4

0001108c <tzset@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #102400	; 0x19000
   11094:	ldr	pc, [ip, #4044]!	; 0xfcc

00011098 <fwrite@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #102400	; 0x19000
   110a0:	ldr	pc, [ip, #4036]!	; 0xfc4

000110a4 <lseek64@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #102400	; 0x19000
   110ac:	ldr	pc, [ip, #4028]!	; 0xfbc

000110b0 <__ctype_get_mb_cur_max@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #102400	; 0x19000
   110b8:	ldr	pc, [ip, #4020]!	; 0xfb4

000110bc <__fpending@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #102400	; 0x19000
   110c4:	ldr	pc, [ip, #4012]!	; 0xfac

000110c8 <mbrtowc@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #102400	; 0x19000
   110d0:	ldr	pc, [ip, #4004]!	; 0xfa4

000110d4 <error@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #102400	; 0x19000
   110dc:	ldr	pc, [ip, #3996]!	; 0xf9c

000110e0 <getenv@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #102400	; 0x19000
   110e8:	ldr	pc, [ip, #3988]!	; 0xf94

000110ec <malloc@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #102400	; 0x19000
   110f4:	ldr	pc, [ip, #3980]!	; 0xf8c

000110f8 <__libc_start_main@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #102400	; 0x19000
   11100:	ldr	pc, [ip, #3972]!	; 0xf84

00011104 <strftime@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #102400	; 0x19000
   1110c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011110 <__freading@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #102400	; 0x19000
   11118:	ldr	pc, [ip, #3956]!	; 0xf74

0001111c <localtime@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #102400	; 0x19000
   11124:	ldr	pc, [ip, #3948]!	; 0xf6c

00011128 <__ctype_tolower_loc@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #102400	; 0x19000
   11130:	ldr	pc, [ip, #3940]!	; 0xf64

00011134 <__ctype_toupper_loc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #102400	; 0x19000
   1113c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011140 <__gmon_start__@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #102400	; 0x19000
   11148:	ldr	pc, [ip, #3924]!	; 0xf54

0001114c <getopt_long@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #102400	; 0x19000
   11154:	ldr	pc, [ip, #3916]!	; 0xf4c

00011158 <kill@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #102400	; 0x19000
   11160:	ldr	pc, [ip, #3908]!	; 0xf44

00011164 <__ctype_b_loc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #102400	; 0x19000
   1116c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011170 <exit@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #102400	; 0x19000
   11178:	ldr	pc, [ip, #3892]!	; 0xf34

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #102400	; 0x19000
   11184:	ldr	pc, [ip, #3884]!	; 0xf2c

00011188 <setenv@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #102400	; 0x19000
   11190:	ldr	pc, [ip, #3876]!	; 0xf24

00011194 <__errno_location@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #102400	; 0x19000
   1119c:	ldr	pc, [ip, #3868]!	; 0xf1c

000111a0 <__cxa_atexit@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #102400	; 0x19000
   111a8:	ldr	pc, [ip, #3860]!	; 0xf14

000111ac <memset@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #102400	; 0x19000
   111b4:	ldr	pc, [ip, #3852]!	; 0xf0c

000111b8 <strncpy@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #102400	; 0x19000
   111c0:	ldr	pc, [ip, #3844]!	; 0xf04

000111c4 <__printf_chk@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #102400	; 0x19000
   111cc:	ldr	pc, [ip, #3836]!	; 0xefc

000111d0 <fileno@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #102400	; 0x19000
   111d8:	ldr	pc, [ip, #3828]!	; 0xef4

000111dc <__fprintf_chk@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #102400	; 0x19000
   111e4:	ldr	pc, [ip, #3820]!	; 0xeec

000111e8 <fclose@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #102400	; 0x19000
   111f0:	ldr	pc, [ip, #3812]!	; 0xee4

000111f4 <fseeko64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #102400	; 0x19000
   111fc:	ldr	pc, [ip, #3804]!	; 0xedc

00011200 <getloadavg@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #102400	; 0x19000
   11208:	ldr	pc, [ip, #3796]!	; 0xed4

0001120c <strtod_l@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #102400	; 0x19000
   11214:	ldr	pc, [ip, #3788]!	; 0xecc

00011218 <endutxent@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #102400	; 0x19000
   11220:	ldr	pc, [ip, #3780]!	; 0xec4

00011224 <__overflow@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #102400	; 0x19000
   1122c:	ldr	pc, [ip, #3772]!	; 0xebc

00011230 <setlocale@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #102400	; 0x19000
   11238:	ldr	pc, [ip, #3764]!	; 0xeb4

0001123c <strrchr@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #102400	; 0x19000
   11244:	ldr	pc, [ip, #3756]!	; 0xeac

00011248 <nl_langinfo@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #102400	; 0x19000
   11250:	ldr	pc, [ip, #3748]!	; 0xea4

00011254 <fputc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #102400	; 0x19000
   1125c:	ldr	pc, [ip, #3740]!	; 0xe9c

00011260 <newlocale@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #102400	; 0x19000
   11268:	ldr	pc, [ip, #3732]!	; 0xe94

0001126c <timegm@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #102400	; 0x19000
   11274:	ldr	pc, [ip, #3724]!	; 0xe8c

00011278 <fopen64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #102400	; 0x19000
   11280:	ldr	pc, [ip, #3716]!	; 0xe84

00011284 <fgets_unlocked@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #102400	; 0x19000
   1128c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011290 <bindtextdomain@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #102400	; 0x19000
   11298:	ldr	pc, [ip, #3700]!	; 0xe74

0001129c <unsetenv@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #102400	; 0x19000
   112a4:	ldr	pc, [ip, #3692]!	; 0xe6c

000112a8 <strncmp@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #102400	; 0x19000
   112b0:	ldr	pc, [ip, #3684]!	; 0xe64

000112b4 <abort@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #102400	; 0x19000
   112bc:	ldr	pc, [ip, #3676]!	; 0xe5c

000112c0 <getutxent@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #102400	; 0x19000
   112c8:	ldr	pc, [ip, #3668]!	; 0xe54

000112cc <dcngettext@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #102400	; 0x19000
   112d4:	ldr	pc, [ip, #3660]!	; 0xe4c

Disassembly of section .text:

000112d8 <.text>:
   112d8:	push	{r7, lr}
   112dc:	mov	r4, r0
   112e0:	sub	sp, sp, #32
   112e4:	ldr	r0, [r1]
   112e8:	mov	r5, r1
   112ec:	bl	140d4 <dcngettext@plt+0x2e08>
   112f0:	ldr	r1, [pc, #224]	; 113d8 <dcngettext@plt+0x10c>
   112f4:	mov	r0, #6
   112f8:	bl	11230 <setlocale@plt>
   112fc:	ldr	r1, [pc, #216]	; 113dc <dcngettext@plt+0x110>
   11300:	ldr	r0, [pc, #216]	; 113e0 <dcngettext@plt+0x114>
   11304:	bl	11290 <bindtextdomain@plt>
   11308:	ldr	r0, [pc, #208]	; 113e0 <dcngettext@plt+0x114>
   1130c:	bl	11074 <textdomain@plt>
   11310:	ldr	r0, [pc, #204]	; 113e4 <dcngettext@plt+0x118>
   11314:	bl	1a1f4 <dcngettext@plt+0x8f28>
   11318:	ldr	r3, [pc, #200]	; 113e8 <dcngettext@plt+0x11c>
   1131c:	ldr	lr, [pc, #200]	; 113ec <dcngettext@plt+0x120>
   11320:	ldr	ip, [pc, #200]	; 113f0 <dcngettext@plt+0x124>
   11324:	ldr	r1, [r3]
   11328:	ldr	r2, [pc, #196]	; 113f4 <dcngettext@plt+0x128>
   1132c:	ldr	r3, [pc, #196]	; 113f8 <dcngettext@plt+0x12c>
   11330:	ldr	r8, [pc, #196]	; 113fc <dcngettext@plt+0x130>
   11334:	mov	r6, #0
   11338:	mov	r7, #1
   1133c:	str	r1, [sp]
   11340:	mov	r0, r4
   11344:	str	r2, [sp, #12]
   11348:	str	r3, [sp, #8]
   1134c:	mov	r1, r5
   11350:	ldr	r3, [pc, #168]	; 11400 <dcngettext@plt+0x134>
   11354:	str	lr, [sp, #20]
   11358:	str	ip, [sp, #16]
   1135c:	str	r6, [sp, #24]
   11360:	str	r7, [sp, #4]
   11364:	ldr	r2, [pc, #152]	; 11404 <dcngettext@plt+0x138>
   11368:	bl	13ffc <dcngettext@plt+0x2d30>
   1136c:	ldr	r3, [r8]
   11370:	subs	r4, r4, r3
   11374:	beq	113cc <dcngettext@plt+0x100>
   11378:	cmp	r4, r7
   1137c:	bne	1138c <dcngettext@plt+0xc0>
   11380:	mov	r1, r6
   11384:	ldr	r0, [r5, r3, lsl #2]
   11388:	bl	118f4 <dcngettext@plt+0x628>
   1138c:	mov	r2, #5
   11390:	ldr	r1, [pc, #112]	; 11408 <dcngettext@plt+0x13c>
   11394:	mov	r0, r6
   11398:	bl	11044 <dcgettext@plt>
   1139c:	ldr	r3, [r8]
   113a0:	add	r3, r3, #1
   113a4:	mov	r4, r0
   113a8:	ldr	r0, [r5, r3, lsl #2]
   113ac:	bl	17fa0 <dcngettext@plt+0x6cd4>
   113b0:	mov	r2, r4
   113b4:	mov	r1, r6
   113b8:	mov	r3, r0
   113bc:	mov	r0, r6
   113c0:	bl	110d4 <error@plt>
   113c4:	mov	r0, r7
   113c8:	bl	11960 <dcngettext@plt+0x694>
   113cc:	mov	r1, r7
   113d0:	ldr	r0, [pc, #52]	; 1140c <dcngettext@plt+0x140>
   113d4:	bl	118f4 <dcngettext@plt+0x628>
   113d8:	andeq	sl, r1, ip, lsl #10
   113dc:	andeq	sl, r1, r4, lsr r6
   113e0:	andeq	sl, r1, ip, lsl #11
   113e4:	andeq	r1, r1, ip, lsl sp
   113e8:	andeq	fp, r2, r0, lsr r1
   113ec:	andeq	sl, r1, ip, asr #12
   113f0:	andeq	sl, r1, r8, asr r6
   113f4:	andeq	sl, r1, r8, ror #12
   113f8:	andeq	r1, r1, r0, ror #18
   113fc:	andeq	fp, r2, r0, lsl #3
   11400:	andeq	sl, r1, r8, lsl #11
   11404:	andeq	sl, r1, r4, lsr #6
   11408:	andeq	sl, r1, ip, ror r6
   1140c:	ldrdeq	sl, [r1], -r0
   11410:	mov	fp, #0
   11414:	mov	lr, #0
   11418:	pop	{r1}		; (ldr r1, [sp], #4)
   1141c:	mov	r2, sp
   11420:	push	{r2}		; (str r2, [sp, #-4]!)
   11424:	push	{r0}		; (str r0, [sp, #-4]!)
   11428:	ldr	ip, [pc, #16]	; 11440 <dcngettext@plt+0x174>
   1142c:	push	{ip}		; (str ip, [sp, #-4]!)
   11430:	ldr	r0, [pc, #12]	; 11444 <dcngettext@plt+0x178>
   11434:	ldr	r3, [pc, #12]	; 11448 <dcngettext@plt+0x17c>
   11438:	bl	110f8 <__libc_start_main@plt>
   1143c:	bl	112b4 <abort@plt>
   11440:	strdeq	sl, [r1], -r0
   11444:	ldrdeq	r1, [r1], -r8
   11448:	muleq	r1, r0, r1
   1144c:	ldr	r3, [pc, #20]	; 11468 <dcngettext@plt+0x19c>
   11450:	ldr	r2, [pc, #20]	; 1146c <dcngettext@plt+0x1a0>
   11454:	add	r3, pc, r3
   11458:	ldr	r2, [r3, r2]
   1145c:	cmp	r2, #0
   11460:	bxeq	lr
   11464:	b	11140 <__gmon_start__@plt>
   11468:	andeq	r9, r1, r4, lsr #23
   1146c:	andeq	r0, r0, r4, lsr #2
   11470:	ldr	r3, [pc, #28]	; 11494 <dcngettext@plt+0x1c8>
   11474:	ldr	r0, [pc, #28]	; 11498 <dcngettext@plt+0x1cc>
   11478:	sub	r3, r3, r0
   1147c:	cmp	r3, #6
   11480:	bxls	lr
   11484:	ldr	r3, [pc, #16]	; 1149c <dcngettext@plt+0x1d0>
   11488:	cmp	r3, #0
   1148c:	bxeq	lr
   11490:	bx	r3
   11494:	andeq	fp, r2, fp, ror r1
   11498:	andeq	fp, r2, r8, ror r1
   1149c:	andeq	r0, r0, r0
   114a0:	ldr	r1, [pc, #36]	; 114cc <dcngettext@plt+0x200>
   114a4:	ldr	r0, [pc, #36]	; 114d0 <dcngettext@plt+0x204>
   114a8:	sub	r1, r1, r0
   114ac:	asr	r1, r1, #2
   114b0:	add	r1, r1, r1, lsr #31
   114b4:	asrs	r1, r1, #1
   114b8:	bxeq	lr
   114bc:	ldr	r3, [pc, #16]	; 114d4 <dcngettext@plt+0x208>
   114c0:	cmp	r3, #0
   114c4:	bxeq	lr
   114c8:	bx	r3
   114cc:	andeq	fp, r2, r8, ror r1
   114d0:	andeq	fp, r2, r8, ror r1
   114d4:	andeq	r0, r0, r0
   114d8:	push	{r4, lr}
   114dc:	ldr	r4, [pc, #24]	; 114fc <dcngettext@plt+0x230>
   114e0:	ldrb	r3, [r4]
   114e4:	cmp	r3, #0
   114e8:	popne	{r4, pc}
   114ec:	bl	11470 <dcngettext@plt+0x1a4>
   114f0:	mov	r3, #1
   114f4:	strb	r3, [r4]
   114f8:	pop	{r4, pc}
   114fc:	muleq	r2, r4, r1
   11500:	ldr	r0, [pc, #40]	; 11530 <dcngettext@plt+0x264>
   11504:	ldr	r3, [r0]
   11508:	cmp	r3, #0
   1150c:	bne	11514 <dcngettext@plt+0x248>
   11510:	b	114a0 <dcngettext@plt+0x1d4>
   11514:	ldr	r3, [pc, #24]	; 11534 <dcngettext@plt+0x268>
   11518:	cmp	r3, #0
   1151c:	beq	11510 <dcngettext@plt+0x244>
   11520:	push	{r4, lr}
   11524:	blx	r3
   11528:	pop	{r4, lr}
   1152c:	b	114a0 <dcngettext@plt+0x1d4>
   11530:	andeq	sl, r2, r4, lsl pc
   11534:	andeq	r0, r0, r0
   11538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1153c:	sub	sp, sp, #8192	; 0x2000
   11540:	sub	sp, sp, #20
   11544:	mov	r5, r0
   11548:	mov	r4, r1
   1154c:	ldr	r0, [pc, #852]	; 118a8 <dcngettext@plt+0x5dc>
   11550:	ldr	r1, [pc, #852]	; 118ac <dcngettext@plt+0x5e0>
   11554:	bl	11278 <fopen64@plt>
   11558:	subs	r8, r0, #0
   1155c:	beq	11790 <dcngettext@plt+0x4c4>
   11560:	add	r7, sp, #16
   11564:	mov	r0, r7
   11568:	mov	r2, r8
   1156c:	mov	r1, #8192	; 0x2000
   11570:	bl	11284 <fgets_unlocked@plt>
   11574:	cmp	r7, r0
   11578:	beq	1185c <dcngettext@plt+0x590>
   1157c:	mov	r6, #0
   11580:	mov	r0, r8
   11584:	bl	11e00 <dcngettext@plt+0xb34>
   11588:	cmp	r5, #0
   1158c:	sub	r3, r5, #1
   11590:	beq	11844 <dcngettext@plt+0x578>
   11594:	mov	r8, #0
   11598:	mov	r5, r8
   1159c:	ldrb	r2, [r4, #44]	; 0x2c
   115a0:	cmp	r2, #0
   115a4:	ldrsh	r2, [r4]
   115a8:	beq	115b8 <dcngettext@plt+0x2ec>
   115ac:	cmp	r2, #7
   115b0:	addeq	r5, r5, #1
   115b4:	beq	115c0 <dcngettext@plt+0x2f4>
   115b8:	cmp	r2, #2
   115bc:	ldreq	r8, [r4, #340]	; 0x154
   115c0:	sub	r3, r3, #1
   115c4:	cmn	r3, #1
   115c8:	add	r4, r4, #384	; 0x180
   115cc:	bne	1159c <dcngettext@plt+0x2d0>
   115d0:	mov	r0, #0
   115d4:	bl	11020 <time@plt>
   115d8:	cmp	r6, #0
   115dc:	str	r0, [r7, #-4]
   115e0:	bne	115f0 <dcngettext@plt+0x324>
   115e4:	cmp	r8, #0
   115e8:	subne	r6, r0, r8
   115ec:	beq	117ac <dcngettext@plt+0x4e0>
   115f0:	ldr	r1, [pc, #696]	; 118b0 <dcngettext@plt+0x5e4>
   115f4:	asr	r4, r6, #31
   115f8:	ldr	r2, [pc, #692]	; 118b4 <dcngettext@plt+0x5e8>
   115fc:	smull	r3, r1, r1, r6
   11600:	ldr	r8, [pc, #688]	; 118b8 <dcngettext@plt+0x5ec>
   11604:	add	r1, r1, r6
   11608:	ldr	r3, [pc, #684]	; 118bc <dcngettext@plt+0x5f0>
   1160c:	rsb	r4, r4, r1, asr #16
   11610:	ldr	r9, [pc, #680]	; 118c0 <dcngettext@plt+0x5f4>
   11614:	mla	r2, r2, r4, r6
   11618:	sub	r0, r7, #4
   1161c:	smull	r1, r8, r8, r2
   11620:	add	r1, r8, r2
   11624:	asr	r8, r2, #31
   11628:	rsb	r8, r8, r1, asr #11
   1162c:	mla	r3, r3, r8, r2
   11630:	smull	r2, r9, r9, r3
   11634:	add	r9, r9, r3
   11638:	asr	r3, r3, #31
   1163c:	rsb	r9, r3, r9, asr #5
   11640:	bl	1111c <localtime@plt>
   11644:	subs	fp, r0, #0
   11648:	beq	117e0 <dcngettext@plt+0x514>
   1164c:	ldr	r3, [pc, #624]	; 118c4 <dcngettext@plt+0x5f8>
   11650:	mov	r2, #5
   11654:	ldr	r1, [pc, #620]	; 118c8 <dcngettext@plt+0x5fc>
   11658:	mov	r0, #0
   1165c:	ldr	sl, [r3]
   11660:	bl	11044 <dcgettext@plt>
   11664:	mov	r3, #0
   11668:	mov	r2, fp
   1166c:	str	r3, [sp]
   11670:	mov	r1, r0
   11674:	mov	r0, sl
   11678:	bl	13e64 <dcngettext@plt+0x2b98>
   1167c:	cmn	r6, #1
   11680:	beq	117fc <dcngettext@plt+0x530>
   11684:	cmp	r4, #0
   11688:	ble	1181c <dcngettext@plt+0x550>
   1168c:	mov	r3, #5
   11690:	str	r3, [sp]
   11694:	ldr	r2, [pc, #560]	; 118cc <dcngettext@plt+0x600>
   11698:	mov	r3, r4
   1169c:	ldr	r1, [pc, #556]	; 118d0 <dcngettext@plt+0x604>
   116a0:	mov	r0, #0
   116a4:	bl	112cc <dcngettext@plt>
   116a8:	str	r9, [sp]
   116ac:	mov	r3, r8
   116b0:	mov	r2, r4
   116b4:	mov	r1, r0
   116b8:	mov	r0, #1
   116bc:	bl	111c4 <__printf_chk@plt>
   116c0:	mov	r6, #5
   116c4:	mov	r3, r5
   116c8:	ldr	r2, [pc, #516]	; 118d4 <dcngettext@plt+0x608>
   116cc:	ldr	r1, [pc, #516]	; 118d8 <dcngettext@plt+0x60c>
   116d0:	str	r6, [sp]
   116d4:	mov	r0, #0
   116d8:	bl	112cc <dcngettext@plt>
   116dc:	mov	r2, r5
   116e0:	mov	r1, r0
   116e4:	mov	r0, #1
   116e8:	bl	111c4 <__printf_chk@plt>
   116ec:	mov	r1, #3
   116f0:	mov	r0, r7
   116f4:	bl	11200 <getloadavg@plt>
   116f8:	cmn	r0, #1
   116fc:	mov	r4, r0
   11700:	beq	1175c <dcngettext@plt+0x490>
   11704:	cmp	r0, #0
   11708:	ble	11784 <dcngettext@plt+0x4b8>
   1170c:	mov	r2, r6
   11710:	ldr	r1, [pc, #452]	; 118dc <dcngettext@plt+0x610>
   11714:	mov	r0, #0
   11718:	bl	11044 <dcgettext@plt>
   1171c:	ldrd	r2, [r7]
   11720:	mov	r1, r0
   11724:	mov	r0, #1
   11728:	bl	111c4 <__printf_chk@plt>
   1172c:	cmp	r4, #1
   11730:	beq	1175c <dcngettext@plt+0x490>
   11734:	ldrd	r2, [r7, #8]
   11738:	ldr	r1, [pc, #416]	; 118e0 <dcngettext@plt+0x614>
   1173c:	mov	r0, #1
   11740:	bl	111c4 <__printf_chk@plt>
   11744:	cmp	r4, #2
   11748:	beq	1175c <dcngettext@plt+0x490>
   1174c:	ldrd	r2, [r7, #16]
   11750:	ldr	r1, [pc, #392]	; 118e0 <dcngettext@plt+0x614>
   11754:	mov	r0, #1
   11758:	bl	111c4 <__printf_chk@plt>
   1175c:	ldr	r3, [pc, #352]	; 118c4 <dcngettext@plt+0x5f8>
   11760:	ldr	r0, [r3]
   11764:	ldr	r3, [r0, #20]
   11768:	ldr	r2, [r0, #24]
   1176c:	cmp	r3, r2
   11770:	addcc	r1, r3, #1
   11774:	movcc	r2, #10
   11778:	strcc	r1, [r0, #20]
   1177c:	strbcc	r2, [r3]
   11780:	bcs	117d4 <dcngettext@plt+0x508>
   11784:	add	sp, sp, #8192	; 0x2000
   11788:	add	sp, sp, #20
   1178c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11790:	cmp	r5, #0
   11794:	sub	r3, r5, #1
   11798:	movne	r6, r8
   1179c:	addne	r7, sp, #16
   117a0:	bne	11594 <dcngettext@plt+0x2c8>
   117a4:	bl	11020 <time@plt>
   117a8:	str	r0, [sp, #12]
   117ac:	bl	11194 <__errno_location@plt>
   117b0:	mov	r2, #5
   117b4:	ldr	r1, [pc, #296]	; 118e4 <dcngettext@plt+0x618>
   117b8:	ldr	r4, [r0]
   117bc:	mov	r0, #0
   117c0:	bl	11044 <dcgettext@plt>
   117c4:	mov	r1, r4
   117c8:	mov	r2, r0
   117cc:	mov	r0, #1
   117d0:	bl	110d4 <error@plt>
   117d4:	mov	r1, #10
   117d8:	bl	11224 <__overflow@plt>
   117dc:	b	11784 <dcngettext@plt+0x4b8>
   117e0:	mov	r2, #5
   117e4:	ldr	r1, [pc, #252]	; 118e8 <dcngettext@plt+0x61c>
   117e8:	bl	11044 <dcgettext@plt>
   117ec:	mov	r1, r0
   117f0:	mov	r0, #1
   117f4:	bl	111c4 <__printf_chk@plt>
   117f8:	b	1167c <dcngettext@plt+0x3b0>
   117fc:	mov	r2, #5
   11800:	ldr	r1, [pc, #228]	; 118ec <dcngettext@plt+0x620>
   11804:	mov	r0, #0
   11808:	bl	11044 <dcgettext@plt>
   1180c:	mov	r1, r0
   11810:	mov	r0, #1
   11814:	bl	111c4 <__printf_chk@plt>
   11818:	b	116c0 <dcngettext@plt+0x3f4>
   1181c:	mov	r2, #5
   11820:	ldr	r1, [pc, #200]	; 118f0 <dcngettext@plt+0x624>
   11824:	mov	r0, #0
   11828:	bl	11044 <dcgettext@plt>
   1182c:	mov	r3, r9
   11830:	mov	r2, r8
   11834:	mov	r1, r0
   11838:	mov	r0, #1
   1183c:	bl	111c4 <__printf_chk@plt>
   11840:	b	116c0 <dcngettext@plt+0x3f4>
   11844:	mov	r0, r5
   11848:	bl	11020 <time@plt>
   1184c:	cmp	r6, #0
   11850:	str	r0, [r7, #-4]
   11854:	bne	115f0 <dcngettext@plt+0x324>
   11858:	b	117ac <dcngettext@plt+0x4e0>
   1185c:	sub	r1, r7, #4
   11860:	bl	11c80 <dcngettext@plt+0x9b4>
   11864:	ldr	r3, [r7, #-4]
   11868:	cmp	r3, r7
   1186c:	beq	1157c <dcngettext@plt+0x2b0>
   11870:	vcmpe.f64	d0, #0.0
   11874:	vmrs	APSR_nzcv, fpscr
   11878:	blt	11894 <dcngettext@plt+0x5c8>
   1187c:	vldr	d7, [pc, #28]	; 118a0 <dcngettext@plt+0x5d4>
   11880:	vcmpe.f64	d0, d7
   11884:	vmrs	APSR_nzcv, fpscr
   11888:	vcvtmi.s32.f64	s15, d0
   1188c:	vmovmi	r6, s15
   11890:	bmi	11580 <dcngettext@plt+0x2b4>
   11894:	mvn	r6, #0
   11898:	b	11580 <dcngettext@plt+0x2b4>
   1189c:	nop			; (mov r0, r0)
   118a0:			; <UNDEFINED> instruction: 0xffc00000
   118a4:	ldrshmi	pc, [pc, #255]	; 119ab <dcngettext@plt+0x6df>	; <UNPREDICTABLE>
   118a8:	andeq	sl, r1, r4, asr r2
   118ac:	andeq	sl, r1, r0, asr r2
   118b0:	eorgt	r4, lr, #29360128	; 0x1c00000
   118b4:			; <UNDEFINED> instruction: 0xfffeae80
   118b8:			; <UNDEFINED> instruction: 0x91a2b3c5
   118bc:			; <UNDEFINED> instruction: 0xfffff1f0
   118c0:	stmhi	r8, {r0, r3, r7, fp, pc}
   118c4:	andeq	fp, r2, ip, lsl #3
   118c8:	andeq	sl, r1, ip, ror r2
   118cc:	andeq	sl, r1, ip, lsr #5
   118d0:	andeq	sl, r1, r4, asr #5
   118d4:	andeq	sl, r1, ip, ror #5
   118d8:	strdeq	sl, [r1], -r8
   118dc:	andeq	sl, r1, r4, lsl #6
   118e0:	andeq	sl, r1, ip, lsl r3
   118e4:	andeq	sl, r1, r4, ror #4
   118e8:	andeq	sl, r1, r8, lsl #5
   118ec:	muleq	r1, r4, r2
   118f0:	ldrdeq	sl, [r1], -ip
   118f4:	push	{lr}		; (str lr, [sp, #-4]!)
   118f8:	sub	sp, sp, #12
   118fc:	add	r2, sp, #8
   11900:	mov	r4, #0
   11904:	mov	r3, r1
   11908:	str	r4, [r2, #-4]!
   1190c:	mov	r1, sp
   11910:	mov	r6, r0
   11914:	bl	18194 <dcngettext@plt+0x6ec8>
   11918:	subs	r5, r0, #0
   1191c:	beq	1194c <dcngettext@plt+0x680>
   11920:	bl	11194 <__errno_location@plt>
   11924:	mov	r2, r6
   11928:	mov	r1, #3
   1192c:	ldr	r5, [r0]
   11930:	mov	r0, r4
   11934:	bl	170ac <dcngettext@plt+0x5de0>
   11938:	mov	r1, r5
   1193c:	ldr	r2, [pc, #24]	; 1195c <dcngettext@plt+0x690>
   11940:	mov	r3, r0
   11944:	mov	r0, #1
   11948:	bl	110d4 <error@plt>
   1194c:	ldm	sp, {r0, r1}
   11950:	bl	11538 <dcngettext@plt+0x26c>
   11954:	mov	r0, r5
   11958:	bl	11170 <exit@plt>
   1195c:	andeq	sl, r1, r0, lsr #14
   11960:	subs	r6, r0, #0
   11964:	push	{r7, lr}
   11968:	sub	sp, sp, #56	; 0x38
   1196c:	beq	119a8 <dcngettext@plt+0x6dc>
   11970:	ldr	r3, [pc, #680]	; 11c20 <dcngettext@plt+0x954>
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #676]	; 11c24 <dcngettext@plt+0x958>
   1197c:	mov	r0, #0
   11980:	ldr	r4, [r3]
   11984:	bl	11044 <dcgettext@plt>
   11988:	ldr	r3, [pc, #664]	; 11c28 <dcngettext@plt+0x95c>
   1198c:	mov	r1, #1
   11990:	ldr	r3, [r3]
   11994:	mov	r2, r0
   11998:	mov	r0, r4
   1199c:	bl	111dc <__fprintf_chk@plt>
   119a0:	mov	r0, r6
   119a4:	bl	11170 <exit@plt>
   119a8:	mov	r2, #5
   119ac:	ldr	r1, [pc, #632]	; 11c2c <dcngettext@plt+0x960>
   119b0:	bl	11044 <dcgettext@plt>
   119b4:	ldr	r3, [pc, #620]	; 11c28 <dcngettext@plt+0x95c>
   119b8:	ldr	r7, [pc, #624]	; 11c30 <dcngettext@plt+0x964>
   119bc:	ldr	r4, [pc, #624]	; 11c34 <dcngettext@plt+0x968>
   119c0:	ldr	r2, [r3]
   119c4:	mov	r1, r0
   119c8:	mov	r0, #1
   119cc:	bl	111c4 <__printf_chk@plt>
   119d0:	mov	r2, #5
   119d4:	ldr	r1, [pc, #604]	; 11c38 <dcngettext@plt+0x96c>
   119d8:	mov	r0, r6
   119dc:	bl	11044 <dcgettext@plt>
   119e0:	mov	r1, r0
   119e4:	mov	r0, #1
   119e8:	bl	111c4 <__printf_chk@plt>
   119ec:	mov	r2, #5
   119f0:	ldr	r1, [pc, #580]	; 11c3c <dcngettext@plt+0x970>
   119f4:	mov	r0, r6
   119f8:	bl	11044 <dcgettext@plt>
   119fc:	mov	r1, r0
   11a00:	mov	r0, #1
   11a04:	bl	111c4 <__printf_chk@plt>
   11a08:	mov	r2, #5
   11a0c:	ldr	r1, [pc, #556]	; 11c40 <dcngettext@plt+0x974>
   11a10:	mov	r0, r6
   11a14:	bl	11044 <dcgettext@plt>
   11a18:	ldr	r3, [pc, #548]	; 11c44 <dcngettext@plt+0x978>
   11a1c:	ldr	r2, [pc, #548]	; 11c48 <dcngettext@plt+0x97c>
   11a20:	mov	r1, r0
   11a24:	mov	r0, #1
   11a28:	bl	111c4 <__printf_chk@plt>
   11a2c:	mov	r2, #5
   11a30:	ldr	r1, [pc, #532]	; 11c4c <dcngettext@plt+0x980>
   11a34:	mov	r0, r6
   11a38:	bl	11044 <dcgettext@plt>
   11a3c:	ldr	r1, [r7]
   11a40:	bl	10f9c <fputs_unlocked@plt>
   11a44:	mov	r2, #5
   11a48:	ldr	r1, [pc, #512]	; 11c50 <dcngettext@plt+0x984>
   11a4c:	mov	r0, r6
   11a50:	bl	11044 <dcgettext@plt>
   11a54:	ldr	r1, [r7]
   11a58:	bl	10f9c <fputs_unlocked@plt>
   11a5c:	ldm	r4!, {r0, r1, r2, r3}
   11a60:	mov	lr, sp
   11a64:	stmia	lr!, {r0, r1, r2, r3}
   11a68:	ldm	r4!, {r0, r1, r2, r3}
   11a6c:	ldr	ip, [sp]
   11a70:	stmia	lr!, {r0, r1, r2, r3}
   11a74:	cmp	ip, #0
   11a78:	ldm	r4!, {r0, r1, r2, r3}
   11a7c:	stmia	lr!, {r0, r1, r2, r3}
   11a80:	ldm	r4, {r0, r1}
   11a84:	moveq	r4, sp
   11a88:	stm	lr, {r0, r1}
   11a8c:	beq	11abc <dcngettext@plt+0x7f0>
   11a90:	ldr	r5, [pc, #444]	; 11c54 <dcngettext@plt+0x988>
   11a94:	mov	r4, sp
   11a98:	b	11aa8 <dcngettext@plt+0x7dc>
   11a9c:	ldr	ip, [r4, #8]!
   11aa0:	cmp	ip, #0
   11aa4:	beq	11abc <dcngettext@plt+0x7f0>
   11aa8:	mov	r1, ip
   11aac:	mov	r0, r5
   11ab0:	bl	10fc0 <strcmp@plt>
   11ab4:	cmp	r0, #0
   11ab8:	bne	11a9c <dcngettext@plt+0x7d0>
   11abc:	ldr	r4, [r4, #4]
   11ac0:	mov	r2, #5
   11ac4:	cmp	r4, #0
   11ac8:	ldr	r1, [pc, #392]	; 11c58 <dcngettext@plt+0x98c>
   11acc:	beq	11b74 <dcngettext@plt+0x8a8>
   11ad0:	mov	r0, #0
   11ad4:	bl	11044 <dcgettext@plt>
   11ad8:	ldr	r3, [pc, #380]	; 11c5c <dcngettext@plt+0x990>
   11adc:	ldr	r2, [pc, #380]	; 11c60 <dcngettext@plt+0x994>
   11ae0:	mov	r1, r0
   11ae4:	mov	r0, #1
   11ae8:	bl	111c4 <__printf_chk@plt>
   11aec:	mov	r1, #0
   11af0:	mov	r0, #5
   11af4:	bl	11230 <setlocale@plt>
   11af8:	cmp	r0, #0
   11afc:	ldreq	r5, [pc, #336]	; 11c54 <dcngettext@plt+0x988>
   11b00:	beq	11b1c <dcngettext@plt+0x850>
   11b04:	mov	r2, #3
   11b08:	ldr	r1, [pc, #340]	; 11c64 <dcngettext@plt+0x998>
   11b0c:	bl	112a8 <strncmp@plt>
   11b10:	ldr	r5, [pc, #316]	; 11c54 <dcngettext@plt+0x988>
   11b14:	cmp	r0, #0
   11b18:	bne	11c04 <dcngettext@plt+0x938>
   11b1c:	mov	r2, #5
   11b20:	ldr	r1, [pc, #320]	; 11c68 <dcngettext@plt+0x99c>
   11b24:	mov	r0, #0
   11b28:	bl	11044 <dcgettext@plt>
   11b2c:	ldr	r3, [pc, #288]	; 11c54 <dcngettext@plt+0x988>
   11b30:	ldr	r2, [pc, #292]	; 11c5c <dcngettext@plt+0x990>
   11b34:	mov	r1, r0
   11b38:	mov	r0, #1
   11b3c:	bl	111c4 <__printf_chk@plt>
   11b40:	mov	r2, #5
   11b44:	ldr	r1, [pc, #288]	; 11c6c <dcngettext@plt+0x9a0>
   11b48:	mov	r0, #0
   11b4c:	bl	11044 <dcgettext@plt>
   11b50:	ldr	r2, [pc, #280]	; 11c70 <dcngettext@plt+0x9a4>
   11b54:	cmp	r4, r5
   11b58:	ldr	r3, [pc, #276]	; 11c74 <dcngettext@plt+0x9a8>
   11b5c:	movne	r3, r2
   11b60:	mov	r1, r0
   11b64:	mov	r2, r4
   11b68:	mov	r0, #1
   11b6c:	bl	111c4 <__printf_chk@plt>
   11b70:	b	119a0 <dcngettext@plt+0x6d4>
   11b74:	mov	r0, r4
   11b78:	bl	11044 <dcgettext@plt>
   11b7c:	ldr	r3, [pc, #216]	; 11c5c <dcngettext@plt+0x990>
   11b80:	ldr	r2, [pc, #216]	; 11c60 <dcngettext@plt+0x994>
   11b84:	mov	r1, r0
   11b88:	mov	r0, #1
   11b8c:	bl	111c4 <__printf_chk@plt>
   11b90:	mov	r1, r4
   11b94:	mov	r0, #5
   11b98:	bl	11230 <setlocale@plt>
   11b9c:	cmp	r0, #0
   11ba0:	beq	11bb8 <dcngettext@plt+0x8ec>
   11ba4:	mov	r2, #3
   11ba8:	ldr	r1, [pc, #180]	; 11c64 <dcngettext@plt+0x998>
   11bac:	bl	112a8 <strncmp@plt>
   11bb0:	cmp	r0, #0
   11bb4:	bne	11bfc <dcngettext@plt+0x930>
   11bb8:	mov	r2, #5
   11bbc:	ldr	r1, [pc, #164]	; 11c68 <dcngettext@plt+0x99c>
   11bc0:	mov	r0, #0
   11bc4:	bl	11044 <dcgettext@plt>
   11bc8:	ldr	r3, [pc, #132]	; 11c54 <dcngettext@plt+0x988>
   11bcc:	ldr	r2, [pc, #136]	; 11c5c <dcngettext@plt+0x990>
   11bd0:	mov	r4, r3
   11bd4:	mov	r1, r0
   11bd8:	mov	r0, #1
   11bdc:	bl	111c4 <__printf_chk@plt>
   11be0:	ldr	r1, [pc, #132]	; 11c6c <dcngettext@plt+0x9a0>
   11be4:	mov	r2, #5
   11be8:	mov	r0, #0
   11bec:	bl	11044 <dcgettext@plt>
   11bf0:	ldr	r3, [pc, #124]	; 11c74 <dcngettext@plt+0x9a8>
   11bf4:	mov	r1, r0
   11bf8:	b	11b64 <dcngettext@plt+0x898>
   11bfc:	ldr	r5, [pc, #80]	; 11c54 <dcngettext@plt+0x988>
   11c00:	mov	r4, r5
   11c04:	mov	r2, #5
   11c08:	ldr	r1, [pc, #104]	; 11c78 <dcngettext@plt+0x9ac>
   11c0c:	mov	r0, #0
   11c10:	bl	11044 <dcgettext@plt>
   11c14:	ldr	r1, [r7]
   11c18:	bl	10f9c <fputs_unlocked@plt>
   11c1c:	b	11b1c <dcngettext@plt+0x850>
   11c20:	andeq	fp, r2, r8, lsl #3
   11c24:	andeq	sl, r1, ip, lsr #6
   11c28:	andeq	fp, r2, r4, lsr #3
   11c2c:	andeq	sl, r1, r4, asr r3
   11c30:	andeq	fp, r2, ip, lsl #3
   11c34:	andeq	sl, r1, r8, lsl r2
   11c38:	andeq	sl, r1, r4, ror r3
   11c3c:	andeq	sl, r1, r0, lsr r4
   11c40:	andeq	sl, r1, r4, lsl #9
   11c44:	andeq	sl, r1, r0, asr #9
   11c48:	ldrdeq	sl, [r1], -r0
   11c4c:	andeq	sl, r1, r0, ror #9
   11c50:	andeq	sl, r1, r0, lsl r5
   11c54:	andeq	sl, r1, r4, lsr #6
   11c58:	andeq	sl, r1, r8, asr #10
   11c5c:	andeq	sl, r1, r0, ror #10
   11c60:	andeq	sl, r1, r8, lsl #11
   11c64:	muleq	r1, r8, r5
   11c68:	andeq	sl, r1, r4, ror #11
   11c6c:	andeq	sl, r1, r0, lsl #12
   11c70:	andeq	sl, r1, ip, lsl #10
   11c74:	muleq	r1, r8, r6
   11c78:	muleq	r1, ip, r5
   11c7c:	andeq	r0, r0, r0
   11c80:	push	{r4, r5, r6, lr}
   11c84:	mov	r6, r0
   11c88:	ldr	r4, [pc, #96]	; 11cf0 <dcngettext@plt+0xa24>
   11c8c:	mov	r5, r1
   11c90:	ldr	r2, [r4]
   11c94:	cmp	r2, #0
   11c98:	beq	11ccc <dcngettext@plt+0xa00>
   11c9c:	ldr	r2, [r4]
   11ca0:	cmp	r2, #0
   11ca4:	beq	11cb8 <dcngettext@plt+0x9ec>
   11ca8:	mov	r1, r5
   11cac:	mov	r0, r6
   11cb0:	pop	{r4, r5, r6, lr}
   11cb4:	b	1120c <strtod_l@plt>
   11cb8:	cmp	r5, #0
   11cbc:	beq	11ce0 <dcngettext@plt+0xa14>
   11cc0:	str	r6, [r5]
   11cc4:	vldr	d0, [pc, #28]	; 11ce8 <dcngettext@plt+0xa1c>
   11cc8:	pop	{r4, r5, r6, pc}
   11ccc:	ldr	r1, [pc, #32]	; 11cf4 <dcngettext@plt+0xa28>
   11cd0:	ldr	r0, [pc, #32]	; 11cf8 <dcngettext@plt+0xa2c>
   11cd4:	bl	11260 <newlocale@plt>
   11cd8:	str	r0, [r4]
   11cdc:	b	11c9c <dcngettext@plt+0x9d0>
   11ce0:	vldr	d0, [pc]	; 11ce8 <dcngettext@plt+0xa1c>
   11ce4:	pop	{r4, r5, r6, pc}
	...
   11cf0:	muleq	r2, r8, r1
   11cf4:	andeq	sl, r1, ip, lsl #14
   11cf8:			; <UNDEFINED> instruction: 0x00001fbf
   11cfc:	ldr	r3, [pc, #4]	; 11d08 <dcngettext@plt+0xa3c>
   11d00:	str	r0, [r3]
   11d04:	bx	lr
   11d08:	muleq	r2, ip, r1
   11d0c:	ldr	r3, [pc, #4]	; 11d18 <dcngettext@plt+0xa4c>
   11d10:	strb	r0, [r3, #4]
   11d14:	bx	lr
   11d18:	muleq	r2, ip, r1
   11d1c:	ldr	r3, [pc, #192]	; 11de4 <dcngettext@plt+0xb18>
   11d20:	push	{r4, r5, r6, lr}
   11d24:	sub	sp, sp, #8
   11d28:	ldr	r0, [r3]
   11d2c:	bl	19a98 <dcngettext@plt+0x87cc>
   11d30:	cmp	r0, #0
   11d34:	beq	11d58 <dcngettext@plt+0xa8c>
   11d38:	ldr	r4, [pc, #168]	; 11de8 <dcngettext@plt+0xb1c>
   11d3c:	ldrb	r3, [r4, #4]
   11d40:	cmp	r3, #0
   11d44:	beq	11d74 <dcngettext@plt+0xaa8>
   11d48:	bl	11194 <__errno_location@plt>
   11d4c:	ldr	r3, [r0]
   11d50:	cmp	r3, #32
   11d54:	bne	11d74 <dcngettext@plt+0xaa8>
   11d58:	ldr	r3, [pc, #140]	; 11dec <dcngettext@plt+0xb20>
   11d5c:	ldr	r0, [r3]
   11d60:	bl	19a98 <dcngettext@plt+0x87cc>
   11d64:	cmp	r0, #0
   11d68:	bne	11dbc <dcngettext@plt+0xaf0>
   11d6c:	add	sp, sp, #8
   11d70:	pop	{r4, r5, r6, pc}
   11d74:	mov	r2, #5
   11d78:	ldr	r1, [pc, #112]	; 11df0 <dcngettext@plt+0xb24>
   11d7c:	mov	r0, #0
   11d80:	bl	11044 <dcgettext@plt>
   11d84:	ldr	r4, [r4]
   11d88:	cmp	r4, #0
   11d8c:	mov	r5, r0
   11d90:	beq	11dc8 <dcngettext@plt+0xafc>
   11d94:	bl	11194 <__errno_location@plt>
   11d98:	ldr	r6, [r0]
   11d9c:	mov	r0, r4
   11da0:	bl	16d40 <dcngettext@plt+0x5a74>
   11da4:	mov	r1, r6
   11da8:	str	r5, [sp]
   11dac:	ldr	r2, [pc, #64]	; 11df4 <dcngettext@plt+0xb28>
   11db0:	mov	r3, r0
   11db4:	mov	r0, #0
   11db8:	bl	110d4 <error@plt>
   11dbc:	ldr	r3, [pc, #52]	; 11df8 <dcngettext@plt+0xb2c>
   11dc0:	ldr	r0, [r3]
   11dc4:	bl	10ffc <_exit@plt>
   11dc8:	bl	11194 <__errno_location@plt>
   11dcc:	mov	r3, r5
   11dd0:	ldr	r2, [pc, #36]	; 11dfc <dcngettext@plt+0xb30>
   11dd4:	ldr	r1, [r0]
   11dd8:	mov	r0, r4
   11ddc:	bl	110d4 <error@plt>
   11de0:	b	11dbc <dcngettext@plt+0xaf0>
   11de4:	andeq	fp, r2, ip, lsl #3
   11de8:	muleq	r2, ip, r1
   11dec:	andeq	fp, r2, r8, lsl #3
   11df0:	andeq	sl, r1, r0, lsl r7
   11df4:	andeq	sl, r1, ip, lsl r7
   11df8:	andeq	fp, r2, r4, lsr r1
   11dfc:	andeq	sl, r1, r0, lsr #14
   11e00:	push	{r4, r5, lr}
   11e04:	sub	sp, sp, #12
   11e08:	mov	r4, r0
   11e0c:	bl	111d0 <fileno@plt>
   11e10:	cmp	r0, #0
   11e14:	mov	r0, r4
   11e18:	blt	11e94 <dcngettext@plt+0xbc8>
   11e1c:	bl	11110 <__freading@plt>
   11e20:	cmp	r0, #0
   11e24:	bne	11e60 <dcngettext@plt+0xb94>
   11e28:	mov	r0, r4
   11e2c:	bl	11ea0 <dcngettext@plt+0xbd4>
   11e30:	cmp	r0, #0
   11e34:	beq	11e90 <dcngettext@plt+0xbc4>
   11e38:	bl	11194 <__errno_location@plt>
   11e3c:	mov	r5, r0
   11e40:	mov	r0, r4
   11e44:	ldr	r4, [r5]
   11e48:	bl	111e8 <fclose@plt>
   11e4c:	cmp	r4, #0
   11e50:	mvnne	r0, #0
   11e54:	strne	r4, [r5]
   11e58:	add	sp, sp, #12
   11e5c:	pop	{r4, r5, pc}
   11e60:	mov	r0, r4
   11e64:	bl	111d0 <fileno@plt>
   11e68:	mov	r3, #1
   11e6c:	str	r3, [sp]
   11e70:	mov	r2, #0
   11e74:	mov	r3, #0
   11e78:	bl	110a4 <lseek64@plt>
   11e7c:	mvn	r3, #0
   11e80:	mvn	r2, #0
   11e84:	cmp	r1, r3
   11e88:	cmpeq	r0, r2
   11e8c:	bne	11e28 <dcngettext@plt+0xb5c>
   11e90:	mov	r0, r4
   11e94:	add	sp, sp, #12
   11e98:	pop	{r4, r5, lr}
   11e9c:	b	111e8 <fclose@plt>
   11ea0:	push	{r4, lr}
   11ea4:	subs	r4, r0, #0
   11ea8:	sub	sp, sp, #8
   11eac:	beq	11ec8 <dcngettext@plt+0xbfc>
   11eb0:	bl	11110 <__freading@plt>
   11eb4:	cmp	r0, #0
   11eb8:	beq	11ec8 <dcngettext@plt+0xbfc>
   11ebc:	ldr	r3, [r4]
   11ec0:	tst	r3, #256	; 0x100
   11ec4:	bne	11ed8 <dcngettext@plt+0xc0c>
   11ec8:	mov	r0, r4
   11ecc:	add	sp, sp, #8
   11ed0:	pop	{r4, lr}
   11ed4:	b	10fd8 <fflush@plt>
   11ed8:	mov	r3, #1
   11edc:	str	r3, [sp]
   11ee0:	mov	r2, #0
   11ee4:	mov	r3, #0
   11ee8:	mov	r0, r4
   11eec:	bl	13ea4 <dcngettext@plt+0x2bd8>
   11ef0:	mov	r0, r4
   11ef4:	add	sp, sp, #8
   11ef8:	pop	{r4, lr}
   11efc:	b	10fd8 <fflush@plt>
   11f00:	cmp	r2, #0
   11f04:	bxeq	lr
   11f08:	push	{r4, r5, r6, r7, r8, lr}
   11f0c:	mov	r6, r0
   11f10:	mov	r4, r1
   11f14:	add	r5, r1, r2
   11f18:	bl	11134 <__ctype_toupper_loc@plt>
   11f1c:	mov	r7, r0
   11f20:	ldrb	r2, [r4], #1
   11f24:	ldr	r3, [r7]
   11f28:	mov	r1, r6
   11f2c:	ldr	r0, [r3, r2, lsl #2]
   11f30:	bl	11254 <fputc@plt>
   11f34:	cmp	r4, r5
   11f38:	bne	11f20 <dcngettext@plt+0xc54>
   11f3c:	pop	{r4, r5, r6, r7, r8, pc}
   11f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f44:	sub	sp, sp, #1104	; 0x450
   11f48:	sub	sp, sp, #12
   11f4c:	mov	r4, r2
   11f50:	str	r2, [sp, #32]
   11f54:	mov	r9, r1
   11f58:	str	r3, [sp, #52]	; 0x34
   11f5c:	mov	sl, r0
   11f60:	bl	11194 <__errno_location@plt>
   11f64:	ldr	r3, [r4, #40]	; 0x28
   11f68:	ldr	r2, [r4, #8]
   11f6c:	mov	r1, r3
   11f70:	ldr	r3, [pc, #3800]	; 12e50 <dcngettext@plt+0x1b84>
   11f74:	mov	ip, r2
   11f78:	str	r2, [sp, #48]	; 0x30
   11f7c:	subs	r2, r1, #0
   11f80:	moveq	r2, r3
   11f84:	cmp	ip, #12
   11f88:	str	r2, [sp, #56]	; 0x38
   11f8c:	ldr	r7, [sp, #1156]	; 0x484
   11f90:	mov	r2, ip
   11f94:	ldr	r3, [r0]
   11f98:	str	r0, [sp, #40]	; 0x28
   11f9c:	str	r3, [sp, #60]	; 0x3c
   11fa0:	subgt	r3, ip, #12
   11fa4:	strgt	r3, [sp, #48]	; 0x30
   11fa8:	bgt	11fb8 <dcngettext@plt+0xcec>
   11fac:	subs	r3, ip, #0
   11fb0:	moveq	r3, #12
   11fb4:	str	r3, [sp, #48]	; 0x30
   11fb8:	ldrb	r0, [r9]
   11fbc:	cmp	r0, #0
   11fc0:	beq	13970 <dcngettext@plt+0x26a4>
   11fc4:	ldr	fp, [pc, #3720]	; 12e54 <dcngettext@plt+0x1b88>
   11fc8:	mov	r3, #0
   11fcc:	str	r3, [sp, #24]
   11fd0:	cmp	r0, #37	; 0x25
   11fd4:	beq	12094 <dcngettext@plt+0xdc8>
   11fd8:	bic	r4, r7, r7, asr #31
   11fdc:	ldr	r3, [sp, #24]
   11fe0:	cmp	r4, #1
   11fe4:	movcs	r6, r4
   11fe8:	movcc	r6, #1
   11fec:	mvn	r3, r3
   11ff0:	cmp	r6, r3
   11ff4:	bcs	12070 <dcngettext@plt+0xda4>
   11ff8:	cmp	sl, #0
   11ffc:	beq	12038 <dcngettext@plt+0xd6c>
   12000:	cmp	r4, #1
   12004:	ble	12030 <dcngettext@plt+0xd64>
   12008:	sub	r4, r4, #1
   1200c:	mov	r7, #0
   12010:	mov	r5, #32
   12014:	add	r7, r7, #1
   12018:	mov	r1, sl
   1201c:	mov	r0, r5
   12020:	bl	11254 <fputc@plt>
   12024:	cmp	r4, r7
   12028:	bne	12014 <dcngettext@plt+0xd48>
   1202c:	ldrb	r0, [r9]
   12030:	mov	r1, sl
   12034:	bl	11254 <fputc@plt>
   12038:	ldr	r3, [sp, #24]
   1203c:	mov	r4, r9
   12040:	add	r3, r3, r6
   12044:	str	r3, [sp, #24]
   12048:	ldrb	r0, [r4, #1]
   1204c:	add	r9, r4, #1
   12050:	mvn	r7, #0
   12054:	cmp	r0, #0
   12058:	bne	11fd0 <dcngettext@plt+0xd04>
   1205c:	ldr	r3, [sp, #40]	; 0x28
   12060:	ldr	r2, [sp, #60]	; 0x3c
   12064:	ldr	r0, [sp, #24]
   12068:	str	r2, [r3]
   1206c:	b	12088 <dcngettext@plt+0xdbc>
   12070:	ldr	r2, [sp, #40]	; 0x28
   12074:	mov	r3, #34	; 0x22
   12078:	str	r3, [r2]
   1207c:	mov	r3, #0
   12080:	mov	r0, r3
   12084:	str	r3, [sp, #24]
   12088:	add	sp, sp, #1104	; 0x450
   1208c:	add	sp, sp, #12
   12090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12094:	ldr	r3, [sp, #52]	; 0x34
   12098:	mov	r4, r9
   1209c:	mov	r5, #0
   120a0:	str	r5, [sp, #28]
   120a4:	str	r3, [sp, #36]	; 0x24
   120a8:	ldrb	r1, [r4, #1]!
   120ac:	sub	r3, r1, #35	; 0x23
   120b0:	mov	r0, r1
   120b4:	cmp	r3, #60	; 0x3c
   120b8:	ldrls	pc, [pc, r3, lsl #2]
   120bc:	b	121d0 <dcngettext@plt+0xf04>
   120c0:	andeq	r2, r1, r8, asr #3
   120c4:	ldrdeq	r2, [r1], -r0
   120c8:	ldrdeq	r2, [r1], -r0
   120cc:	ldrdeq	r2, [r1], -r0
   120d0:	ldrdeq	r2, [r1], -r0
   120d4:	ldrdeq	r2, [r1], -r0
   120d8:	ldrdeq	r2, [r1], -r0
   120dc:	ldrdeq	r2, [r1], -r0
   120e0:	andeq	r2, r1, r0, asr #3
   120e4:	ldrdeq	r2, [r1], -r0
   120e8:	andeq	r2, r1, r0, asr #3
   120ec:	ldrdeq	r2, [r1], -r0
   120f0:	ldrdeq	r2, [r1], -r0
   120f4:	andeq	r2, r1, r0, asr #3
   120f8:	ldrdeq	r2, [r1], -r0
   120fc:	ldrdeq	r2, [r1], -r0
   12100:	ldrdeq	r2, [r1], -r0
   12104:	ldrdeq	r2, [r1], -r0
   12108:	ldrdeq	r2, [r1], -r0
   1210c:	ldrdeq	r2, [r1], -r0
   12110:	ldrdeq	r2, [r1], -r0
   12114:	ldrdeq	r2, [r1], -r0
   12118:	ldrdeq	r2, [r1], -r0
   1211c:	ldrdeq	r2, [r1], -r0
   12120:	ldrdeq	r2, [r1], -r0
   12124:	ldrdeq	r2, [r1], -r0
   12128:	ldrdeq	r2, [r1], -r0
   1212c:	ldrdeq	r2, [r1], -r0
   12130:	ldrdeq	r2, [r1], -r0
   12134:	ldrdeq	r2, [r1], -r0
   12138:	ldrdeq	r2, [r1], -r0
   1213c:	ldrdeq	r2, [r1], -r0
   12140:	ldrdeq	r2, [r1], -r0
   12144:	ldrdeq	r2, [r1], -r0
   12148:	ldrdeq	r2, [r1], -r0
   1214c:	ldrdeq	r2, [r1], -r0
   12150:	ldrdeq	r2, [r1], -r0
   12154:	ldrdeq	r2, [r1], -r0
   12158:	ldrdeq	r2, [r1], -r0
   1215c:	ldrdeq	r2, [r1], -r0
   12160:	ldrdeq	r2, [r1], -r0
   12164:	ldrdeq	r2, [r1], -r0
   12168:	ldrdeq	r2, [r1], -r0
   1216c:	ldrdeq	r2, [r1], -r0
   12170:	ldrdeq	r2, [r1], -r0
   12174:	ldrdeq	r2, [r1], -r0
   12178:	ldrdeq	r2, [r1], -r0
   1217c:	ldrdeq	r2, [r1], -r0
   12180:	ldrdeq	r2, [r1], -r0
   12184:	ldrdeq	r2, [r1], -r0
   12188:	ldrdeq	r2, [r1], -r0
   1218c:	ldrdeq	r2, [r1], -r0
   12190:	ldrdeq	r2, [r1], -r0
   12194:	ldrdeq	r2, [r1], -r0
   12198:	ldrdeq	r2, [r1], -r0
   1219c:	ldrdeq	r2, [r1], -r0
   121a0:	ldrdeq	r2, [r1], -r0
   121a4:	ldrdeq	r2, [r1], -r0
   121a8:	ldrdeq	r2, [r1], -r0
   121ac:			; <UNDEFINED> instruction: 0x000121b4
   121b0:	andeq	r2, r1, r0, asr #3
   121b4:	mov	r3, #1
   121b8:	str	r3, [sp, #36]	; 0x24
   121bc:	b	120a8 <dcngettext@plt+0xddc>
   121c0:	str	r1, [sp, #28]
   121c4:	b	120a8 <dcngettext@plt+0xddc>
   121c8:	mov	r5, #1
   121cc:	b	120a8 <dcngettext@plt+0xddc>
   121d0:	sub	r3, r1, #48	; 0x30
   121d4:	cmp	r3, #9
   121d8:	bhi	1221c <dcngettext@plt+0xf50>
   121dc:	ldr	r8, [pc, #3188]	; 12e58 <dcngettext@plt+0x1b8c>
   121e0:	mov	r7, #0
   121e4:	mvn	r6, #-2147483648	; 0x80000000
   121e8:	cmp	r7, #0
   121ec:	blt	12530 <dcngettext@plt+0x1264>
   121f0:	cmp	r7, r8
   121f4:	ble	1254c <dcngettext@plt+0x1280>
   121f8:	mov	r3, r4
   121fc:	ldrb	r1, [r3, #1]
   12200:	add	r4, r3, #1
   12204:	mov	r3, r4
   12208:	sub	r2, r1, #48	; 0x30
   1220c:	cmp	r2, #9
   12210:	bls	121fc <dcngettext@plt+0xf30>
   12214:	mov	r0, r1
   12218:	mvn	r7, #-2147483648	; 0x80000000
   1221c:	cmp	r1, #69	; 0x45
   12220:	beq	12428 <dcngettext@plt+0x115c>
   12224:	cmp	r1, #79	; 0x4f
   12228:	movne	r8, #0
   1222c:	beq	12428 <dcngettext@plt+0x115c>
   12230:	cmp	r1, #122	; 0x7a
   12234:	ldrls	pc, [pc, r1, lsl #2]
   12238:	b	12440 <dcngettext@plt+0x1174>
   1223c:	andeq	r2, r1, ip, lsr r4
   12240:	andeq	r2, r1, r0, asr #8
   12244:	andeq	r2, r1, r0, asr #8
   12248:	andeq	r2, r1, r0, asr #8
   1224c:	andeq	r2, r1, r0, asr #8
   12250:	andeq	r2, r1, r0, asr #8
   12254:	andeq	r2, r1, r0, asr #8
   12258:	andeq	r2, r1, r0, asr #8
   1225c:	andeq	r2, r1, r0, asr #8
   12260:	andeq	r2, r1, r0, asr #8
   12264:	andeq	r2, r1, r0, asr #8
   12268:	andeq	r2, r1, r0, asr #8
   1226c:	andeq	r2, r1, r0, asr #8
   12270:	andeq	r2, r1, r0, asr #8
   12274:	andeq	r2, r1, r0, asr #8
   12278:	andeq	r2, r1, r0, asr #8
   1227c:	andeq	r2, r1, r0, asr #8
   12280:	andeq	r2, r1, r0, asr #8
   12284:	andeq	r2, r1, r0, asr #8
   12288:	andeq	r2, r1, r0, asr #8
   1228c:	andeq	r2, r1, r0, asr #8
   12290:	andeq	r2, r1, r0, asr #8
   12294:	andeq	r2, r1, r0, asr #8
   12298:	andeq	r2, r1, r0, asr #8
   1229c:	andeq	r2, r1, r0, asr #8
   122a0:	andeq	r2, r1, r0, asr #8
   122a4:	andeq	r2, r1, r0, asr #8
   122a8:	andeq	r2, r1, r0, asr #8
   122ac:	andeq	r2, r1, r0, asr #8
   122b0:	andeq	r2, r1, r0, asr #8
   122b4:	andeq	r2, r1, r0, asr #8
   122b8:	andeq	r2, r1, r0, asr #8
   122bc:	andeq	r2, r1, r0, asr #8
   122c0:	andeq	r2, r1, r0, asr #8
   122c4:	andeq	r2, r1, r0, asr #8
   122c8:	andeq	r2, r1, r0, asr #8
   122cc:	andeq	r2, r1, r0, asr #8
   122d0:	strdeq	r3, [r1], -r0
   122d4:	andeq	r2, r1, r0, asr #8
   122d8:	andeq	r2, r1, r0, asr #8
   122dc:	andeq	r2, r1, r0, asr #8
   122e0:	andeq	r2, r1, r0, asr #8
   122e4:	andeq	r2, r1, r0, asr #8
   122e8:	andeq	r2, r1, r0, asr #8
   122ec:	andeq	r2, r1, r0, asr #8
   122f0:	andeq	r2, r1, r0, asr #8
   122f4:	andeq	r2, r1, r0, asr #8
   122f8:	andeq	r2, r1, r0, asr #8
   122fc:	andeq	r2, r1, r0, asr #8
   12300:	andeq	r2, r1, r0, asr #8
   12304:	andeq	r2, r1, r0, asr #8
   12308:	andeq	r2, r1, r0, asr #8
   1230c:	andeq	r2, r1, r0, asr #8
   12310:	andeq	r2, r1, r0, asr #8
   12314:	andeq	r2, r1, r0, asr #8
   12318:	andeq	r2, r1, r0, asr #8
   1231c:	andeq	r2, r1, r0, asr #8
   12320:	andeq	r2, r1, r0, asr #8
   12324:	andeq	r3, r1, r8, lsl r6
   12328:	andeq	r2, r1, r0, asr #8
   1232c:	andeq	r2, r1, r0, asr #8
   12330:	andeq	r2, r1, r0, asr #8
   12334:	andeq	r2, r1, r0, asr #8
   12338:	andeq	r2, r1, r0, asr #8
   1233c:	andeq	r2, r1, r0, asr #8
   12340:	andeq	r2, r1, r8, ror #15
   12344:	strdeq	r2, [r1], -r4
   12348:	andeq	r3, r1, r8, lsr #14
   1234c:	strdeq	r2, [r1], -r0
   12350:	andeq	r2, r1, r0, asr #8
   12354:			; <UNDEFINED> instruction: 0x00012eb8
   12358:	ldrdeq	r2, [r1], -r0
   1235c:			; <UNDEFINED> instruction: 0x00012cb8
   12360:	andeq	r2, r1, r4, lsr #25
   12364:	andeq	r2, r1, r0, asr #8
   12368:	andeq	r2, r1, r0, asr #8
   1236c:	andeq	r2, r1, r0, asr #8
   12370:	andeq	r2, r1, ip, lsl #25
   12374:	andeq	r3, r1, r0, lsr #32
   12378:	andeq	r2, r1, r0, asr #8
   1237c:	andeq	r3, r1, r8, asr #16
   12380:	andeq	r2, r1, r0, asr #8
   12384:	muleq	r1, r0, r6
   12388:	andeq	r3, r1, r8, ror r6
   1238c:	andeq	r3, r1, ip, asr #11
   12390:	muleq	r1, r4, r5
   12394:	ldrdeq	r2, [r1], -r0
   12398:	andeq	r3, r1, ip, lsr r6
   1239c:			; <UNDEFINED> instruction: 0x000127b4
   123a0:	andeq	r3, r1, r4, asr #13
   123a4:			; <UNDEFINED> instruction: 0x000137b4
   123a8:	andeq	r2, r1, r0, asr #8
   123ac:	andeq	r2, r1, r0, asr #8
   123b0:	andeq	r2, r1, r0, asr #8
   123b4:	andeq	r2, r1, r0, asr #8
   123b8:	andeq	r2, r1, r0, asr #8
   123bc:	andeq	r2, r1, r0, asr #8
   123c0:	andeq	r2, r1, r8, ror #15
   123c4:	andeq	r3, r1, r0, asr #8
   123c8:			; <UNDEFINED> instruction: 0x000127b4
   123cc:	andeq	r3, r1, r0, ror r3
   123d0:	andeq	r3, r1, r8, asr #6
   123d4:	andeq	r2, r1, r0, asr #8
   123d8:	ldrdeq	r2, [r1], -r0
   123dc:	andeq	r3, r1, r0, asr #8
   123e0:	andeq	r2, r1, r0, asr #8
   123e4:	ldrdeq	r3, [r1], -ip
   123e8:			; <UNDEFINED> instruction: 0x000136b0
   123ec:	andeq	r3, r1, r0, lsr #13
   123f0:	andeq	r2, r1, r0, asr ip
   123f4:	andeq	r2, r1, r8, lsr sl
   123f8:	andeq	r2, r1, r0, asr #8
   123fc:	ldrdeq	r3, [r1], -r0
   12400:	muleq	r1, ip, r4
   12404:	andeq	r2, r1, r8, lsl #12
   12408:	andeq	r2, r1, r0, lsr #16
   1240c:			; <UNDEFINED> instruction: 0x00012bbc
   12410:	ldrdeq	r2, [r1], -r8
   12414:	andeq	r2, r1, r0, asr #8
   12418:	andeq	r3, r1, r8
   1241c:			; <UNDEFINED> instruction: 0x000127b4
   12420:	andeq	r3, r1, r4, ror #8
   12424:	andeq	r3, r1, r8, lsl #7
   12428:	ldrb	r1, [r4, #1]
   1242c:	mov	r8, r0
   12430:	add	r4, r4, #1
   12434:	mov	r0, r1
   12438:	b	12230 <dcngettext@plt+0xf64>
   1243c:	sub	r4, r4, #1
   12440:	ldr	r3, [sp, #28]
   12444:	sub	r5, r4, r9
   12448:	subs	r3, r3, #45	; 0x2d
   1244c:	movne	r3, #1
   12450:	cmp	r7, #0
   12454:	movlt	r3, #0
   12458:	cmp	r3, #0
   1245c:	add	r5, r5, #1
   12460:	moveq	r7, #0
   12464:	cmp	r5, r7
   12468:	movcs	r3, r5
   1246c:	movcc	r3, r7
   12470:	mov	r2, r3
   12474:	str	r3, [sp, #44]	; 0x2c
   12478:	ldr	r3, [sp, #24]
   1247c:	mvn	r3, r3
   12480:	cmp	r2, r3
   12484:	bcs	12070 <dcngettext@plt+0xda4>
   12488:	cmp	sl, #0
   1248c:	beq	1251c <dcngettext@plt+0x1250>
   12490:	cmp	r5, r7
   12494:	bcs	124dc <dcngettext@plt+0x1210>
   12498:	ldr	r3, [sp, #28]
   1249c:	sub	r7, r7, r5
   124a0:	cmp	r3, #43	; 0x2b
   124a4:	cmpne	r3, #48	; 0x30
   124a8:	moveq	r3, #1
   124ac:	movne	r3, #0
   124b0:	beq	12788 <dcngettext@plt+0x14bc>
   124b4:	cmp	r7, #0
   124b8:	movne	r8, r3
   124bc:	movne	r6, #32
   124c0:	beq	124dc <dcngettext@plt+0x1210>
   124c4:	add	r8, r8, #1
   124c8:	mov	r1, sl
   124cc:	mov	r0, r6
   124d0:	bl	11254 <fputc@plt>
   124d4:	cmp	r7, r8
   124d8:	bne	124c4 <dcngettext@plt+0x11f8>
   124dc:	ldr	r3, [sp, #36]	; 0x24
   124e0:	cmp	r3, #0
   124e4:	beq	12734 <dcngettext@plt+0x1468>
   124e8:	cmp	r5, #0
   124ec:	beq	1251c <dcngettext@plt+0x1250>
   124f0:	bl	11134 <__ctype_toupper_loc@plt>
   124f4:	mov	r6, r9
   124f8:	mov	r7, r0
   124fc:	ldrb	r2, [r6], #1
   12500:	ldr	r3, [r7]
   12504:	mov	r1, sl
   12508:	ldr	r0, [r3, r2, lsl #2]
   1250c:	bl	11254 <fputc@plt>
   12510:	sub	r3, r5, r6
   12514:	cmn	r9, r3
   12518:	bne	124fc <dcngettext@plt+0x1230>
   1251c:	ldr	r3, [sp, #24]
   12520:	ldr	r2, [sp, #44]	; 0x2c
   12524:	add	r3, r3, r2
   12528:	str	r3, [sp, #24]
   1252c:	b	12048 <dcngettext@plt+0xd7c>
   12530:	cmn	r7, #1
   12534:	beq	125c8 <dcngettext@plt+0x12fc>
   12538:	mov	r1, r7
   1253c:	mov	r0, #-2147483648	; 0x80000000
   12540:	bl	19f40 <dcngettext@plt+0x8c74>
   12544:	cmp	r0, #9
   12548:	ble	121f8 <dcngettext@plt+0xf2c>
   1254c:	ldrb	r0, [r4]
   12550:	add	r7, r7, r7, lsl #2
   12554:	cmp	r0, #47	; 0x2f
   12558:	lsl	r3, r7, #1
   1255c:	mov	r1, r3
   12560:	ble	125e0 <dcngettext@plt+0x1314>
   12564:	cmp	r3, #0
   12568:	blt	125a4 <dcngettext@plt+0x12d8>
   1256c:	sub	r2, r0, #48	; 0x30
   12570:	sub	r2, r6, r2
   12574:	cmp	r3, r2
   12578:	movle	r2, #0
   1257c:	movgt	r2, #1
   12580:	cmp	r2, #0
   12584:	beq	125a4 <dcngettext@plt+0x12d8>
   12588:	ldrb	r1, [r4, #1]
   1258c:	add	r3, r4, #1
   12590:	sub	r2, r1, #48	; 0x30
   12594:	cmp	r2, #9
   12598:	bls	121fc <dcngettext@plt+0xf30>
   1259c:	mov	r4, r3
   125a0:	b	12214 <dcngettext@plt+0xf48>
   125a4:	ldrb	r1, [r4, #1]
   125a8:	add	r3, r0, r3
   125ac:	sub	r7, r3, #48	; 0x30
   125b0:	sub	r3, r1, #48	; 0x30
   125b4:	cmp	r3, #9
   125b8:	add	r4, r4, #1
   125bc:	bls	121e8 <dcngettext@plt+0xf1c>
   125c0:	mov	r0, r1
   125c4:	b	1221c <dcngettext@plt+0xf50>
   125c8:	ldrb	r0, [r4]
   125cc:	cmp	r0, #47	; 0x2f
   125d0:	mvngt	r3, #9
   125d4:	bgt	125a4 <dcngettext@plt+0x12d8>
   125d8:	mvn	r1, #9
   125dc:	mov	r3, r1
   125e0:	rsb	r2, r0, #-2147483600	; 0x80000030
   125e4:	cmp	r2, r1
   125e8:	movle	r2, #0
   125ec:	movgt	r2, #1
   125f0:	b	12580 <dcngettext@plt+0x12b4>
   125f4:	cmp	r8, #69	; 0x45
   125f8:	beq	12440 <dcngettext@plt+0x1174>
   125fc:	cmp	r5, #0
   12600:	beq	1260c <dcngettext@plt+0x1340>
   12604:	str	r5, [sp, #36]	; 0x24
   12608:	mov	r5, #0
   1260c:	cmp	r8, #0
   12610:	mov	r2, #32
   12614:	mov	r3, #37	; 0x25
   12618:	strb	r2, [sp, #72]	; 0x48
   1261c:	strb	r3, [sp, #73]	; 0x49
   12620:	addeq	r9, sp, #72	; 0x48
   12624:	addeq	ip, sp, #74	; 0x4a
   12628:	bne	12724 <dcngettext@plt+0x1458>
   1262c:	mov	r6, #0
   12630:	strb	r1, [ip]
   12634:	mov	r2, r9
   12638:	add	r0, sp, #88	; 0x58
   1263c:	ldr	r3, [sp, #32]
   12640:	mov	r1, #1024	; 0x400
   12644:	strb	r6, [ip, #1]
   12648:	bl	11104 <strftime@plt>
   1264c:	subs	r8, r0, #0
   12650:	beq	12048 <dcngettext@plt+0xd7c>
   12654:	ldr	r3, [sp, #28]
   12658:	sub	r9, r8, #1
   1265c:	subs	r3, r3, #45	; 0x2d
   12660:	movne	r3, #1
   12664:	cmp	r7, r6
   12668:	movlt	r3, #0
   1266c:	cmp	r3, r6
   12670:	moveq	r7, r6
   12674:	cmp	r9, r7
   12678:	movcs	r3, r9
   1267c:	movcc	r3, r7
   12680:	mov	r2, r3
   12684:	str	r3, [sp, #44]	; 0x2c
   12688:	ldr	r3, [sp, #24]
   1268c:	mvn	r3, r3
   12690:	cmp	r2, r3
   12694:	bcs	12070 <dcngettext@plt+0xda4>
   12698:	cmp	sl, #0
   1269c:	beq	1251c <dcngettext@plt+0x1250>
   126a0:	cmp	r9, r7
   126a4:	bcs	126e4 <dcngettext@plt+0x1418>
   126a8:	ldr	r3, [sp, #28]
   126ac:	sub	r7, r7, r9
   126b0:	cmp	r3, #43	; 0x2b
   126b4:	cmpne	r3, #48	; 0x30
   126b8:	moveq	r3, #1
   126bc:	movne	r3, #0
   126c0:	bne	127c0 <dcngettext@plt+0x14f4>
   126c4:	cmp	r7, #0
   126c8:	beq	126e4 <dcngettext@plt+0x1418>
   126cc:	add	r6, r6, #1
   126d0:	mov	r1, sl
   126d4:	mov	r0, #48	; 0x30
   126d8:	bl	11254 <fputc@plt>
   126dc:	cmp	r7, r6
   126e0:	bne	126cc <dcngettext@plt+0x1400>
   126e4:	cmp	r5, #0
   126e8:	bne	138b0 <dcngettext@plt+0x25e4>
   126ec:	ldr	r3, [sp, #36]	; 0x24
   126f0:	cmp	r3, #0
   126f4:	bne	1274c <dcngettext@plt+0x1480>
   126f8:	mov	r1, r9
   126fc:	add	r0, sp, #89	; 0x59
   12700:	mov	r3, sl
   12704:	mov	r2, #1
   12708:	bl	11098 <fwrite@plt>
   1270c:	b	1251c <dcngettext@plt+0x1250>
   12710:	mov	r5, #0
   12714:	mov	r2, #32
   12718:	mov	r3, #37	; 0x25
   1271c:	strb	r2, [sp, #72]	; 0x48
   12720:	strb	r3, [sp, #73]	; 0x49
   12724:	add	r9, sp, #72	; 0x48
   12728:	strb	r8, [sp, #74]	; 0x4a
   1272c:	add	ip, r9, #3
   12730:	b	1262c <dcngettext@plt+0x1360>
   12734:	mov	r1, r5
   12738:	mov	r0, r9
   1273c:	mov	r3, sl
   12740:	mov	r2, #1
   12744:	bl	11098 <fwrite@plt>
   12748:	b	1251c <dcngettext@plt+0x1250>
   1274c:	cmp	r9, #0
   12750:	sub	r8, r8, #2
   12754:	beq	1251c <dcngettext@plt+0x1250>
   12758:	bl	11134 <__ctype_toupper_loc@plt>
   1275c:	add	r5, sp, #89	; 0x59
   12760:	mov	r6, r0
   12764:	ldrb	r2, [r5], #1
   12768:	ldr	r3, [r6]
   1276c:	mov	r1, sl
   12770:	ldr	r0, [r3, r2, lsl #2]
   12774:	bl	11254 <fputc@plt>
   12778:	cmp	r8, #0
   1277c:	sub	r8, r8, #1
   12780:	bne	12764 <dcngettext@plt+0x1498>
   12784:	b	1251c <dcngettext@plt+0x1250>
   12788:	cmp	r7, #0
   1278c:	beq	124dc <dcngettext@plt+0x1210>
   12790:	mov	r8, #0
   12794:	mov	r6, #48	; 0x30
   12798:	add	r8, r8, #1
   1279c:	mov	r1, sl
   127a0:	mov	r0, r6
   127a4:	bl	11254 <fputc@plt>
   127a8:	cmp	r7, r8
   127ac:	bne	12798 <dcngettext@plt+0x14cc>
   127b0:	b	124dc <dcngettext@plt+0x1210>
   127b4:	cmp	r8, #79	; 0x4f
   127b8:	bne	12608 <dcngettext@plt+0x133c>
   127bc:	b	12440 <dcngettext@plt+0x1174>
   127c0:	cmp	r7, #0
   127c4:	movne	r6, r3
   127c8:	beq	126e4 <dcngettext@plt+0x1418>
   127cc:	add	r6, r6, #1
   127d0:	mov	r1, sl
   127d4:	mov	r0, #32
   127d8:	bl	11254 <fputc@plt>
   127dc:	cmp	r7, r6
   127e0:	bne	127cc <dcngettext@plt+0x1500>
   127e4:	b	126e4 <dcngettext@plt+0x1418>
   127e8:	cmp	r8, #0
   127ec:	bne	12440 <dcngettext@plt+0x1174>
   127f0:	ldr	r3, [sp, #36]	; 0x24
   127f4:	cmp	r5, #0
   127f8:	moveq	r5, r3
   127fc:	mov	r2, #32
   12800:	mov	r3, #37	; 0x25
   12804:	add	r9, sp, #72	; 0x48
   12808:	str	r5, [sp, #36]	; 0x24
   1280c:	strb	r2, [sp, #72]	; 0x48
   12810:	strb	r3, [sp, #73]	; 0x49
   12814:	add	ip, r9, #2
   12818:	mov	r5, #0
   1281c:	b	1262c <dcngettext@plt+0x1360>
   12820:	ldr	lr, [sp, #32]
   12824:	add	ip, sp, #88	; 0x58
   12828:	mvn	r5, #0
   1282c:	ldm	lr!, {r0, r1, r2, r3}
   12830:	stmia	ip!, {r0, r1, r2, r3}
   12834:	ldm	lr!, {r0, r1, r2, r3}
   12838:	stmia	ip!, {r0, r1, r2, r3}
   1283c:	ldm	lr, {r0, r1, r2}
   12840:	str	r5, [sp, #116]	; 0x74
   12844:	stm	ip, {r0, r1, r2}
   12848:	add	r1, sp, #88	; 0x58
   1284c:	ldr	r0, [sp, #1164]	; 0x48c
   12850:	bl	187a0 <dcngettext@plt+0x74d4>
   12854:	ldr	r3, [sp, #116]	; 0x74
   12858:	cmp	r3, #0
   1285c:	blt	13dbc <dcngettext@plt+0x2af0>
   12860:	add	r9, sp, #72	; 0x48
   12864:	lsr	r3, r0, #31
   12868:	cmp	r0, #0
   1286c:	add	r5, r9, #14
   12870:	str	r3, [sp, #44]	; 0x2c
   12874:	blt	12a0c <dcngettext@plt+0x1740>
   12878:	smull	r3, r2, fp, r0
   1287c:	asr	r3, r0, #31
   12880:	rsb	r3, r3, r2, asr #2
   12884:	mov	r2, r3
   12888:	add	r3, r3, r3, lsl #2
   1288c:	sub	r3, r0, r3, lsl #1
   12890:	add	r3, r3, #48	; 0x30
   12894:	subs	r0, r2, #0
   12898:	strb	r3, [r5, #-1]!
   1289c:	bne	12878 <dcngettext@plt+0x15ac>
   128a0:	mov	lr, #0
   128a4:	mov	ip, #1
   128a8:	ldr	r3, [sp, #28]
   128ac:	cmp	r3, #0
   128b0:	beq	13888 <dcngettext@plt+0x25bc>
   128b4:	subs	r3, r3, #45	; 0x2d
   128b8:	movne	r3, #1
   128bc:	ldr	r2, [sp, #44]	; 0x2c
   128c0:	cmp	r7, #0
   128c4:	movlt	r7, ip
   128c8:	cmp	r2, #0
   128cc:	bne	13880 <dcngettext@plt+0x25b4>
   128d0:	cmp	lr, #0
   128d4:	beq	13850 <dcngettext@plt+0x2584>
   128d8:	mov	r2, #43	; 0x2b
   128dc:	add	r9, r9, #14
   128e0:	sub	r9, r9, r5
   128e4:	sub	r6, r7, #1
   128e8:	sub	r6, r6, r9
   128ec:	cmp	r6, #0
   128f0:	movle	r1, #0
   128f4:	andgt	r1, r3, #1
   128f8:	cmp	r1, #0
   128fc:	ldr	r1, [sp, #28]
   12900:	moveq	r6, #0
   12904:	cmp	r1, #95	; 0x5f
   12908:	beq	13918 <dcngettext@plt+0x264c>
   1290c:	ldr	r1, [sp, #24]
   12910:	cmn	r1, #3
   12914:	bhi	12070 <dcngettext@plt+0xda4>
   12918:	cmp	sl, #0
   1291c:	beq	12934 <dcngettext@plt+0x1668>
   12920:	mov	r0, r2
   12924:	mov	r1, sl
   12928:	str	r3, [sp, #44]	; 0x2c
   1292c:	bl	11254 <fputc@plt>
   12930:	ldr	r3, [sp, #44]	; 0x2c
   12934:	ldr	r2, [sp, #24]
   12938:	sub	r7, r7, #1
   1293c:	cmp	r7, #0
   12940:	movlt	r3, #0
   12944:	andge	r3, r3, #1
   12948:	add	r2, r2, #1
   1294c:	cmp	r3, #0
   12950:	str	r2, [sp, #24]
   12954:	bne	13878 <dcngettext@plt+0x25ac>
   12958:	cmp	r3, r9
   1295c:	movcs	r2, r3
   12960:	movcc	r2, r9
   12964:	mov	r1, r2
   12968:	str	r2, [sp, #44]	; 0x2c
   1296c:	ldr	r2, [sp, #24]
   12970:	mvn	r2, r2
   12974:	cmp	r1, r2
   12978:	bcs	12070 <dcngettext@plt+0xda4>
   1297c:	cmp	sl, #0
   12980:	beq	1251c <dcngettext@plt+0x1250>
   12984:	cmp	r3, r9
   12988:	bls	129cc <dcngettext@plt+0x1700>
   1298c:	ldr	r2, [sp, #28]
   12990:	sub	r6, r3, r9
   12994:	cmp	r2, #43	; 0x2b
   12998:	cmpne	r2, #48	; 0x30
   1299c:	moveq	r8, #1
   129a0:	movne	r8, #0
   129a4:	beq	138ec <dcngettext@plt+0x2620>
   129a8:	cmp	r6, #0
   129ac:	movne	r7, #32
   129b0:	beq	129cc <dcngettext@plt+0x1700>
   129b4:	add	r8, r8, #1
   129b8:	mov	r1, sl
   129bc:	mov	r0, r7
   129c0:	bl	11254 <fputc@plt>
   129c4:	cmp	r6, r8
   129c8:	bne	129b4 <dcngettext@plt+0x16e8>
   129cc:	ldr	r3, [sp, #36]	; 0x24
   129d0:	cmp	r3, #0
   129d4:	beq	13898 <dcngettext@plt+0x25cc>
   129d8:	cmp	r9, #0
   129dc:	beq	1251c <dcngettext@plt+0x1250>
   129e0:	bl	11134 <__ctype_toupper_loc@plt>
   129e4:	add	r9, r5, r9
   129e8:	mov	r6, r0
   129ec:	ldrb	r2, [r5], #1
   129f0:	ldr	r3, [r6]
   129f4:	mov	r1, sl
   129f8:	ldr	r0, [r3, r2, lsl #2]
   129fc:	bl	11254 <fputc@plt>
   12a00:	cmp	r5, r9
   12a04:	bne	129ec <dcngettext@plt+0x1720>
   12a08:	b	1251c <dcngettext@plt+0x1250>
   12a0c:	smull	r3, r2, fp, r0
   12a10:	asr	r3, r0, #31
   12a14:	rsb	r3, r3, r2, asr #2
   12a18:	mov	r2, r3
   12a1c:	add	r3, r3, r3, lsl #2
   12a20:	sub	r3, r0, r3, lsl #1
   12a24:	rsb	r3, r3, #48	; 0x30
   12a28:	subs	r0, r2, #0
   12a2c:	strb	r3, [r5, #-1]!
   12a30:	bne	12a0c <dcngettext@plt+0x1740>
   12a34:	b	128a0 <dcngettext@plt+0x15d4>
   12a38:	ldr	r2, [sp, #28]
   12a3c:	mvn	r3, r7
   12a40:	cmp	r2, #45	; 0x2d
   12a44:	lsr	r3, r3, #31
   12a48:	moveq	r3, #0
   12a4c:	cmp	r3, #0
   12a50:	beq	13c54 <dcngettext@plt+0x2988>
   12a54:	cmp	r7, #1
   12a58:	movcs	r5, r7
   12a5c:	movcc	r5, #1
   12a60:	ldr	r3, [sp, #24]
   12a64:	mvn	r3, r3
   12a68:	cmp	r3, r5
   12a6c:	bls	12070 <dcngettext@plt+0xda4>
   12a70:	cmp	sl, #0
   12a74:	beq	12ac8 <dcngettext@plt+0x17fc>
   12a78:	cmp	r7, #1
   12a7c:	bls	12abc <dcngettext@plt+0x17f0>
   12a80:	ldr	r3, [sp, #28]
   12a84:	sub	r7, r7, #1
   12a88:	cmp	r3, #43	; 0x2b
   12a8c:	cmpne	r3, #48	; 0x30
   12a90:	moveq	r6, #1
   12a94:	movne	r6, #0
   12a98:	bne	13998 <dcngettext@plt+0x26cc>
   12a9c:	mov	r6, #0
   12aa0:	mov	r8, #48	; 0x30
   12aa4:	add	r6, r6, #1
   12aa8:	mov	r1, sl
   12aac:	mov	r0, r8
   12ab0:	bl	11254 <fputc@plt>
   12ab4:	cmp	r7, r6
   12ab8:	bne	12aa4 <dcngettext@plt+0x17d8>
   12abc:	mov	r1, sl
   12ac0:	mov	r0, #10
   12ac4:	bl	11254 <fputc@plt>
   12ac8:	ldr	r3, [sp, #24]
   12acc:	add	r3, r3, r5
   12ad0:	str	r3, [sp, #24]
   12ad4:	b	12048 <dcngettext@plt+0xd7c>
   12ad8:	ldr	r3, [sp, #32]
   12adc:	ldr	r2, [pc, #964]	; 12ea8 <dcngettext@plt+0x1bdc>
   12ae0:	mov	ip, #1
   12ae4:	ldr	r3, [r3, #24]
   12ae8:	add	r3, r3, #6
   12aec:	smull	r0, r2, r2, r3
   12af0:	add	r0, r2, r3
   12af4:	asr	r2, r3, #31
   12af8:	rsb	r2, r2, r0, asr #2
   12afc:	rsb	r2, r2, r2, lsl #3
   12b00:	sub	r3, r3, r2
   12b04:	add	r2, r3, ip
   12b08:	mov	r3, r2
   12b0c:	mov	r0, #0
   12b10:	lsr	r2, r2, #31
   12b14:	cmp	r3, r0
   12b18:	str	r2, [sp, #44]	; 0x2c
   12b1c:	mov	lr, r0
   12b20:	movlt	r2, #0
   12b24:	movge	r2, #1
   12b28:	cmp	r8, #79	; 0x4f
   12b2c:	movne	r2, #0
   12b30:	andeq	r2, r2, #1
   12b34:	cmp	r2, #0
   12b38:	uxtbne	r1, r1
   12b3c:	bne	12710 <dcngettext@plt+0x1444>
   12b40:	ldr	r2, [sp, #44]	; 0x2c
   12b44:	cmp	r2, #0
   12b48:	rsbne	r3, r3, #0
   12b4c:	add	r9, sp, #72	; 0x48
   12b50:	add	r5, r9, #14
   12b54:	mov	r2, r5
   12b58:	ldr	r8, [pc, #764]	; 12e5c <dcngettext@plt+0x1b90>
   12b5c:	mov	r5, r3
   12b60:	mov	r3, r2
   12b64:	tst	r0, #1
   12b68:	movne	r2, #58	; 0x3a
   12b6c:	mov	r6, r3
   12b70:	strbne	r2, [r3, #-1]
   12b74:	subne	r6, r3, #1
   12b78:	umull	r3, r2, r8, r5
   12b7c:	asrs	r0, r0, #1
   12b80:	lsr	r2, r2, #3
   12b84:	movne	r1, #1
   12b88:	add	r3, r2, r2, lsl #2
   12b8c:	moveq	r1, #0
   12b90:	sub	r3, r5, r3, lsl #1
   12b94:	cmp	r2, #0
   12b98:	orrne	r1, r1, #1
   12b9c:	add	r3, r3, #48	; 0x30
   12ba0:	cmp	r1, #0
   12ba4:	strb	r3, [r6, #-1]
   12ba8:	mov	r5, r2
   12bac:	sub	r3, r6, #1
   12bb0:	bne	12b64 <dcngettext@plt+0x1898>
   12bb4:	mov	r5, r3
   12bb8:	b	128a8 <dcngettext@plt+0x15dc>
   12bbc:	ldr	r3, [sp, #28]
   12bc0:	subs	r3, r3, #45	; 0x2d
   12bc4:	movne	r3, #1
   12bc8:	cmp	r7, #0
   12bcc:	movlt	r3, #0
   12bd0:	cmp	r3, #0
   12bd4:	beq	13dcc <dcngettext@plt+0x2b00>
   12bd8:	cmp	r7, #1
   12bdc:	movcs	r5, r7
   12be0:	movcc	r5, #1
   12be4:	ldr	r3, [sp, #24]
   12be8:	mvn	r3, r3
   12bec:	cmp	r3, r5
   12bf0:	bls	12070 <dcngettext@plt+0xda4>
   12bf4:	cmp	sl, #0
   12bf8:	beq	12ac8 <dcngettext@plt+0x17fc>
   12bfc:	cmp	r7, #1
   12c00:	bls	12c40 <dcngettext@plt+0x1974>
   12c04:	ldr	r3, [sp, #28]
   12c08:	sub	r7, r7, #1
   12c0c:	cmp	r3, #43	; 0x2b
   12c10:	cmpne	r3, #48	; 0x30
   12c14:	moveq	r6, #1
   12c18:	movne	r6, #0
   12c1c:	bne	13978 <dcngettext@plt+0x26ac>
   12c20:	mov	r6, #0
   12c24:	mov	r8, #48	; 0x30
   12c28:	add	r6, r6, #1
   12c2c:	mov	r1, sl
   12c30:	mov	r0, r8
   12c34:	bl	11254 <fputc@plt>
   12c38:	cmp	r7, r6
   12c3c:	bne	12c28 <dcngettext@plt+0x195c>
   12c40:	mov	r1, sl
   12c44:	mov	r0, #9
   12c48:	bl	11254 <fputc@plt>
   12c4c:	b	12ac8 <dcngettext@plt+0x17fc>
   12c50:	cmp	r8, #69	; 0x45
   12c54:	beq	12440 <dcngettext@plt+0x1174>
   12c58:	ldr	r3, [sp, #32]
   12c5c:	mov	r0, #0
   12c60:	mov	lr, r0
   12c64:	ldr	r3, [r3, #16]
   12c68:	mov	ip, #2
   12c6c:	cmn	r3, #1
   12c70:	movlt	r2, #1
   12c74:	movge	r2, r0
   12c78:	str	r2, [sp, #44]	; 0x2c
   12c7c:	add	r3, r3, #1
   12c80:	movge	r2, #1
   12c84:	movlt	r2, r0
   12c88:	b	12b28 <dcngettext@plt+0x185c>
   12c8c:	cmp	r8, #69	; 0x45
   12c90:	beq	12440 <dcngettext@plt+0x1174>
   12c94:	ldr	r3, [sp, #32]
   12c98:	mov	ip, #2
   12c9c:	ldr	r2, [r3, #4]
   12ca0:	b	12b08 <dcngettext@plt+0x183c>
   12ca4:	cmp	r8, #69	; 0x45
   12ca8:	beq	12440 <dcngettext@plt+0x1174>
   12cac:	ldr	r2, [sp, #48]	; 0x30
   12cb0:	mov	ip, #2
   12cb4:	b	12b08 <dcngettext@plt+0x183c>
   12cb8:	cmp	r8, #69	; 0x45
   12cbc:	beq	12440 <dcngettext@plt+0x1174>
   12cc0:	ldr	r3, [sp, #32]
   12cc4:	mov	ip, #2
   12cc8:	ldr	r2, [r3, #8]
   12ccc:	b	12b08 <dcngettext@plt+0x183c>
   12cd0:	cmp	r8, #69	; 0x45
   12cd4:	beq	12440 <dcngettext@plt+0x1174>
   12cd8:	ldr	r3, [sp, #32]
   12cdc:	ldr	r6, [r3, #28]
   12ce0:	ldr	r9, [r3, #24]
   12ce4:	ldr	r5, [r3, #20]
   12ce8:	sub	r2, r6, r9
   12cec:	add	r2, r2, #380	; 0x17c
   12cf0:	ldr	r3, [pc, #432]	; 12ea8 <dcngettext@plt+0x1bdc>
   12cf4:	add	r2, r2, #2
   12cf8:	cmp	r5, #0
   12cfc:	smull	r0, r3, r3, r2
   12d00:	add	r3, r3, r2
   12d04:	asr	r0, r2, #31
   12d08:	rsb	r0, r0, r3, asr #2
   12d0c:	mvnge	r3, #99	; 0x63
   12d10:	rsb	r0, r0, r0, lsl #3
   12d14:	sub	r2, r2, r0
   12d18:	sub	r2, r6, r2
   12d1c:	movlt	r3, #300	; 0x12c
   12d20:	adds	r2, r2, #3
   12d24:	str	r2, [sp, #44]	; 0x2c
   12d28:	add	r3, r3, r5
   12d2c:	bmi	13b20 <dcngettext@plt+0x2854>
   12d30:	tst	r3, #3
   12d34:	ldrne	r3, [pc, #356]	; 12ea0 <dcngettext@plt+0x1bd4>
   12d38:	bne	12d80 <dcngettext@plt+0x1ab4>
   12d3c:	ldr	r2, [pc, #340]	; 12e98 <dcngettext@plt+0x1bcc>
   12d40:	mov	r0, #100	; 0x64
   12d44:	smull	r2, ip, r2, r3
   12d48:	asr	r2, r3, #31
   12d4c:	rsb	lr, r2, ip, asr #5
   12d50:	mul	r0, r0, lr
   12d54:	cmp	r3, r0
   12d58:	ldrne	r3, [pc, #316]	; 12e9c <dcngettext@plt+0x1bd0>
   12d5c:	bne	12d80 <dcngettext@plt+0x1ab4>
   12d60:	rsb	r2, r2, ip, asr #7
   12d64:	mov	ip, #400	; 0x190
   12d68:	ldr	r0, [pc, #304]	; 12ea0 <dcngettext@plt+0x1bd4>
   12d6c:	mul	r2, ip, r2
   12d70:	sub	ip, ip, #34	; 0x22
   12d74:	cmp	r3, r2
   12d78:	movne	r3, r0
   12d7c:	moveq	r3, ip
   12d80:	sub	r3, r6, r3
   12d84:	sub	r2, r3, r9
   12d88:	ldr	r0, [pc, #280]	; 12ea8 <dcngettext@plt+0x1bdc>
   12d8c:	add	r2, r2, #380	; 0x17c
   12d90:	add	r2, r2, #2
   12d94:	smull	r0, ip, r0, r2
   12d98:	add	ip, ip, r2
   12d9c:	asr	r0, r2, #31
   12da0:	rsb	r0, r0, ip, asr #2
   12da4:	rsb	r0, r0, r0, lsl #3
   12da8:	sub	r2, r2, r0
   12dac:	sub	r3, r3, r2
   12db0:	adds	r3, r3, #3
   12db4:	movmi	r0, #0
   12db8:	movpl	r0, #1
   12dbc:	ldrmi	r3, [sp, #44]	; 0x2c
   12dc0:	ldrmi	lr, [pc, #204]	; 12e94 <dcngettext@plt+0x1bc8>
   12dc4:	ldrpl	lr, [pc, #148]	; 12e60 <dcngettext@plt+0x1b94>
   12dc8:	movmi	r6, r0
   12dcc:	movpl	r6, r0
   12dd0:	cmp	r1, #71	; 0x47
   12dd4:	beq	13bd8 <dcngettext@plt+0x290c>
   12dd8:	cmp	r1, #103	; 0x67
   12ddc:	bne	13bb8 <dcngettext@plt+0x28ec>
   12de0:	ldr	r3, [pc, #176]	; 12e98 <dcngettext@plt+0x1bcc>
   12de4:	mov	r0, #100	; 0x64
   12de8:	smull	r2, r3, r3, r5
   12dec:	asr	r2, r5, #31
   12df0:	rsb	r2, r2, r3, asr #5
   12df4:	ldr	r3, [pc, #156]	; 12e98 <dcngettext@plt+0x1bcc>
   12df8:	mul	r2, r0, r2
   12dfc:	sub	r2, r5, r2
   12e00:	add	r2, r2, r6
   12e04:	smull	r3, ip, r3, r2
   12e08:	asr	r3, r2, #31
   12e0c:	rsb	r3, r3, ip, asr #5
   12e10:	mul	r3, r0, r3
   12e14:	subs	r3, r2, r3
   12e18:	ldr	r2, [sp, #28]
   12e1c:	bmi	13a8c <dcngettext@plt+0x27c0>
   12e20:	cmp	r2, #0
   12e24:	beq	13aa0 <dcngettext@plt+0x27d4>
   12e28:	mov	r2, #1
   12e2c:	mov	r0, #0
   12e30:	str	r0, [sp, #44]	; 0x2c
   12e34:	ldr	r0, [sp, #28]
   12e38:	cmp	r0, #43	; 0x2b
   12e3c:	beq	13a60 <dcngettext@plt+0x2794>
   12e40:	mov	lr, #0
   12e44:	mov	ip, #2
   12e48:	mov	r0, #0
   12e4c:	b	12b28 <dcngettext@plt+0x185c>
   12e50:	andeq	sl, r1, ip, lsl #10
   12e54:	strbtvs	r6, [r6], -r7, ror #12
   12e58:	stcleq	12, cr12, [ip], {204}	; 0xcc
   12e5c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   12e60:			; <UNDEFINED> instruction: 0xfffff893
   12e64:	andeq	sl, r1, ip, lsr #14
   12e68:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   12e6c:	ldmvs	fp, {r0, r2, r3, r5, r7, r8, r9, fp, pc}^
   12e70:	ldrbtne	fp, [r8], #1417	; 0x589
   12e74:	tstmi	fp, #2096	; 0x830
   12e78:	blvs	180582c <opterr@@GLIBC_2.4+0x17da69c>
   12e7c:	strbpl	r3, [r6, #2953]!	; 0xb89
   12e80:	stmhi	r8, {r0, r3, r7, fp, pc}
   12e84:			; <UNDEFINED> instruction: 0x91a2b3c5
   12e88:	andeq	sl, r1, r8, lsr r7
   12e8c:	andeq	sl, r1, r4, lsr #14
   12e90:	andeq	r0, r0, fp, ror #14
   12e94:			; <UNDEFINED> instruction: 0xfffff894
   12e98:	mvnpl	r8, pc, lsl r5
   12e9c:	andeq	r0, r0, lr, ror #2
   12ea0:	andeq	r0, r0, sp, ror #2
   12ea4:			; <UNDEFINED> instruction: 0xfffff895
   12ea8:	subls	r2, r9, #-1828716544	; 0x93000000
   12eac:	andeq	r2, r0, pc, lsl #14
   12eb0:	andeq	sl, r1, r4, asr #14
   12eb4:	andeq	r2, r0, r0, lsl r7
   12eb8:	cmp	r8, #0
   12ebc:	bne	12440 <dcngettext@plt+0x1174>
   12ec0:	ldr	r2, [sp, #28]
   12ec4:	lsr	r3, r7, #31
   12ec8:	cmp	r2, #0
   12ecc:	movne	r3, #0
   12ed0:	andeq	r3, r3, #1
   12ed4:	cmp	r3, #0
   12ed8:	bne	13d14 <dcngettext@plt+0x2a48>
   12edc:	sub	r9, r7, #6
   12ee0:	ldr	r8, [pc, #-56]	; 12eb0 <dcngettext@plt+0x1be4>
   12ee4:	bic	r9, r9, r9, asr #31
   12ee8:	mov	r5, r2
   12eec:	ldr	r3, [sp, #1168]	; 0x490
   12ef0:	str	r5, [sp]
   12ef4:	str	r3, [sp, #16]
   12ef8:	ldr	r3, [sp, #1164]	; 0x48c
   12efc:	str	r9, [sp, #4]
   12f00:	str	r3, [sp, #12]
   12f04:	ldr	r3, [sp, #1160]	; 0x488
   12f08:	ldr	r2, [sp, #32]
   12f0c:	str	r3, [sp, #8]
   12f10:	mov	r1, r8
   12f14:	ldr	r3, [sp, #36]	; 0x24
   12f18:	mov	r0, #0
   12f1c:	bl	11f40 <dcngettext@plt+0xc74>
   12f20:	cmp	r5, #45	; 0x2d
   12f24:	mov	r3, r5
   12f28:	bicne	r5, r7, r7, asr #31
   12f2c:	moveq	r5, #0
   12f30:	cmp	r5, r0
   12f34:	movcs	r3, r5
   12f38:	movcc	r3, r0
   12f3c:	mov	r2, r3
   12f40:	str	r3, [sp, #44]	; 0x2c
   12f44:	ldr	r3, [sp, #24]
   12f48:	mvn	r3, r3
   12f4c:	cmp	r2, r3
   12f50:	bcs	12070 <dcngettext@plt+0xda4>
   12f54:	cmp	sl, #0
   12f58:	beq	12fe0 <dcngettext@plt+0x1d14>
   12f5c:	cmp	r5, r0
   12f60:	bls	12fa4 <dcngettext@plt+0x1cd8>
   12f64:	ldr	r3, [sp, #28]
   12f68:	sub	r5, r5, r0
   12f6c:	cmp	r3, #43	; 0x2b
   12f70:	cmpne	r3, #48	; 0x30
   12f74:	moveq	r6, #1
   12f78:	movne	r6, #0
   12f7c:	beq	13a34 <dcngettext@plt+0x2768>
   12f80:	cmp	r5, #0
   12f84:	movne	r7, #32
   12f88:	beq	12fa4 <dcngettext@plt+0x1cd8>
   12f8c:	add	r6, r6, #1
   12f90:	mov	r1, sl
   12f94:	mov	r0, r7
   12f98:	bl	11254 <fputc@plt>
   12f9c:	cmp	r5, r6
   12fa0:	bne	12f8c <dcngettext@plt+0x1cc0>
   12fa4:	ldr	r3, [sp, #1168]	; 0x490
   12fa8:	ldr	r2, [sp, #32]
   12fac:	str	r3, [sp, #16]
   12fb0:	ldr	r3, [sp, #1164]	; 0x48c
   12fb4:	str	r9, [sp, #4]
   12fb8:	str	r3, [sp, #12]
   12fbc:	ldr	r3, [sp, #1160]	; 0x488
   12fc0:	mov	r1, r8
   12fc4:	str	r3, [sp, #8]
   12fc8:	ldr	r3, [sp, #28]
   12fcc:	mov	r0, sl
   12fd0:	str	r3, [sp]
   12fd4:	ldr	r3, [sp, #36]	; 0x24
   12fd8:	bl	11f40 <dcngettext@plt+0xc74>
   12fdc:	ldr	r2, [sp, #44]	; 0x2c
   12fe0:	ldr	r3, [sp, #24]
   12fe4:	add	r3, r3, r2
   12fe8:	str	r3, [sp, #24]
   12fec:	b	12048 <dcngettext@plt+0xd7c>
   12ff0:	cmp	r8, #0
   12ff4:	bne	12440 <dcngettext@plt+0x1174>
   12ff8:	mvn	r9, #0
   12ffc:	ldr	r8, [pc, #-416]	; 12e64 <dcngettext@plt+0x1b98>
   13000:	ldr	r5, [sp, #28]
   13004:	b	12eec <dcngettext@plt+0x1c20>
   13008:	cmp	r8, #69	; 0x45
   1300c:	beq	12440 <dcngettext@plt+0x1174>
   13010:	ldr	r3, [sp, #32]
   13014:	mov	ip, #1
   13018:	ldr	r2, [r3, #24]
   1301c:	b	12b08 <dcngettext@plt+0x183c>
   13020:	cmp	r8, #69	; 0x45
   13024:	beq	12440 <dcngettext@plt+0x1174>
   13028:	cmp	r7, #0
   1302c:	movle	r7, #9
   13030:	ldr	r3, [sp, #1168]	; 0x490
   13034:	mov	r5, #9
   13038:	b	1304c <dcngettext@plt+0x1d80>
   1303c:	asr	r2, r3, #31
   13040:	smull	r1, r3, fp, r3
   13044:	sub	r5, r5, #1
   13048:	rsb	r3, r2, r3, asr #2
   1304c:	cmp	r5, r7
   13050:	bgt	1303c <dcngettext@plt+0x1d70>
   13054:	smull	r2, r1, fp, r3
   13058:	asr	r2, r3, #31
   1305c:	rsb	r1, r2, r1, asr #2
   13060:	cmp	r5, #1
   13064:	add	r0, r1, r1, lsl #2
   13068:	mov	lr, r1
   1306c:	ble	13c90 <dcngettext@plt+0x29c4>
   13070:	subs	r1, r3, r0, lsl #1
   13074:	beq	13040 <dcngettext@plt+0x1d74>
   13078:	add	ip, sp, #1104	; 0x450
   1307c:	sub	r0, r5, #1
   13080:	add	ip, ip, #8
   13084:	add	ip, ip, r0
   13088:	add	r1, r1, #48	; 0x30
   1308c:	cmp	r0, #0
   13090:	strb	r1, [ip, #-1040]	; 0xfffffbf0
   13094:	beq	13c70 <dcngettext@plt+0x29a4>
   13098:	smull	r1, ip, fp, lr
   1309c:	ldr	r1, [pc, #-524]	; 12e98 <dcngettext@plt+0x1bcc>
   130a0:	smull	r1, r0, r1, r3
   130a4:	asr	r1, lr, #31
   130a8:	rsb	r1, r1, ip, asr #2
   130ac:	sub	ip, r5, #2
   130b0:	add	r1, r1, r1, lsl #2
   130b4:	cmp	ip, #0
   130b8:	sub	r1, lr, r1, lsl #1
   130bc:	add	lr, sp, #1104	; 0x450
   130c0:	add	lr, lr, #8
   130c4:	add	lr, lr, ip
   130c8:	add	r1, r1, #48	; 0x30
   130cc:	rsb	r0, r2, r0, asr #5
   130d0:	strb	r1, [lr, #-1040]	; 0xfffffbf0
   130d4:	beq	1327c <dcngettext@plt+0x1fb0>
   130d8:	smull	r1, ip, fp, r0
   130dc:	ldr	r1, [pc, #-636]	; 12e68 <dcngettext@plt+0x1b9c>
   130e0:	smull	r1, lr, r1, r3
   130e4:	asr	r1, r0, #31
   130e8:	rsb	r1, r1, ip, asr #2
   130ec:	sub	ip, r5, #3
   130f0:	add	r1, r1, r1, lsl #2
   130f4:	cmp	ip, #0
   130f8:	sub	r1, r0, r1, lsl #1
   130fc:	add	r0, sp, #1104	; 0x450
   13100:	add	r0, r0, #8
   13104:	add	r0, r0, ip
   13108:	add	r1, r1, #48	; 0x30
   1310c:	rsb	lr, r2, lr, asr #6
   13110:	strb	r1, [r0, #-1040]	; 0xfffffbf0
   13114:	ble	1327c <dcngettext@plt+0x1fb0>
   13118:	smull	r1, ip, fp, lr
   1311c:	ldr	r0, [pc, #-696]	; 12e6c <dcngettext@plt+0x1ba0>
   13120:	asr	r1, lr, #31
   13124:	rsb	r1, r1, ip, asr #2
   13128:	smull	ip, r0, r0, r3
   1312c:	add	r1, r1, r1, lsl #2
   13130:	sub	ip, r5, #4
   13134:	sub	r1, lr, r1, lsl #1
   13138:	add	lr, sp, #1104	; 0x450
   1313c:	add	lr, lr, #8
   13140:	add	lr, lr, ip
   13144:	add	r1, r1, #48	; 0x30
   13148:	cmp	ip, #0
   1314c:	strb	r1, [lr, #-1040]	; 0xfffffbf0
   13150:	rsb	ip, r2, r0, asr #12
   13154:	ble	1327c <dcngettext@plt+0x1fb0>
   13158:	smull	r1, lr, fp, ip
   1315c:	ldr	r1, [pc, #-756]	; 12e70 <dcngettext@plt+0x1ba4>
   13160:	asr	r0, ip, #31
   13164:	rsb	r0, r0, lr, asr #2
   13168:	smull	lr, r1, r1, r3
   1316c:	add	r0, r0, r0, lsl #2
   13170:	sub	lr, r5, #5
   13174:	sub	r0, ip, r0, lsl #1
   13178:	add	ip, sp, #1104	; 0x450
   1317c:	add	ip, ip, #8
   13180:	add	ip, ip, lr
   13184:	add	r0, r0, #48	; 0x30
   13188:	cmp	lr, #0
   1318c:	strb	r0, [ip, #-1040]	; 0xfffffbf0
   13190:	rsb	lr, r2, r1, asr #13
   13194:	ble	1327c <dcngettext@plt+0x1fb0>
   13198:	smull	r1, ip, fp, lr
   1319c:	ldr	r0, [pc, #-816]	; 12e74 <dcngettext@plt+0x1ba8>
   131a0:	asr	r1, lr, #31
   131a4:	rsb	r1, r1, ip, asr #2
   131a8:	smull	ip, r0, r0, r3
   131ac:	add	r1, r1, r1, lsl #2
   131b0:	sub	ip, r5, #6
   131b4:	sub	r1, lr, r1, lsl #1
   131b8:	add	lr, sp, #1104	; 0x450
   131bc:	add	lr, lr, #8
   131c0:	add	lr, lr, ip
   131c4:	add	r1, r1, #48	; 0x30
   131c8:	cmp	ip, #0
   131cc:	strb	r1, [lr, #-1040]	; 0xfffffbf0
   131d0:	rsb	ip, r2, r0, asr #18
   131d4:	ble	1327c <dcngettext@plt+0x1fb0>
   131d8:	smull	r1, lr, fp, ip
   131dc:	ldr	r1, [pc, #-876]	; 12e78 <dcngettext@plt+0x1bac>
   131e0:	asr	r0, ip, #31
   131e4:	rsb	r0, r0, lr, asr #2
   131e8:	smull	lr, r1, r1, r3
   131ec:	add	r0, r0, r0, lsl #2
   131f0:	sub	lr, r5, #7
   131f4:	sub	r0, ip, r0, lsl #1
   131f8:	add	ip, sp, #1104	; 0x450
   131fc:	add	ip, ip, #8
   13200:	add	ip, ip, lr
   13204:	add	r0, r0, #48	; 0x30
   13208:	cmp	lr, #0
   1320c:	strb	r0, [ip, #-1040]	; 0xfffffbf0
   13210:	rsb	r1, r2, r1, asr #22
   13214:	ble	1327c <dcngettext@plt+0x1fb0>
   13218:	smull	r0, lr, fp, r1
   1321c:	ldr	ip, [pc, #-936]	; 12e7c <dcngettext@plt+0x1bb0>
   13220:	asr	r0, r1, #31
   13224:	rsb	r0, r0, lr, asr #2
   13228:	smull	ip, r3, ip, r3
   1322c:	add	r0, r0, r0, lsl #2
   13230:	sub	ip, r5, #8
   13234:	sub	r1, r1, r0, lsl #1
   13238:	mov	r0, ip
   1323c:	add	ip, sp, #1104	; 0x450
   13240:	add	ip, ip, #8
   13244:	add	ip, ip, r0
   13248:	add	r1, r1, #48	; 0x30
   1324c:	cmp	r0, #1
   13250:	strb	r1, [ip, #-1040]	; 0xfffffbf0
   13254:	rsb	r2, r2, r3, asr #25
   13258:	bne	1327c <dcngettext@plt+0x1fb0>
   1325c:	smull	r3, r1, fp, r2
   13260:	asr	r3, r2, #31
   13264:	rsb	r3, r3, r1, asr #2
   13268:	mov	r5, #9
   1326c:	add	r3, r3, r3, lsl #2
   13270:	sub	r2, r2, r3, lsl #1
   13274:	add	r3, r2, #48	; 0x30
   13278:	strb	r3, [sp, #72]	; 0x48
   1327c:	ldr	r2, [sp, #28]
   13280:	subs	r3, r2, #0
   13284:	moveq	r3, #48	; 0x30
   13288:	str	r3, [sp, #28]
   1328c:	ldr	r3, [sp, #24]
   13290:	cmp	r5, #0
   13294:	movcs	r6, r5
   13298:	movcc	r6, #0
   1329c:	mvn	r3, r3
   132a0:	cmp	r6, r3
   132a4:	bcs	12070 <dcngettext@plt+0xda4>
   132a8:	cmp	sl, #0
   132ac:	beq	132cc <dcngettext@plt+0x2000>
   132b0:	ldr	r3, [sp, #36]	; 0x24
   132b4:	cmp	r3, #0
   132b8:	beq	13c78 <dcngettext@plt+0x29ac>
   132bc:	mov	r2, r5
   132c0:	add	r1, sp, #72	; 0x48
   132c4:	mov	r0, sl
   132c8:	bl	11f00 <dcngettext@plt+0xc34>
   132cc:	ldr	r3, [sp, #28]
   132d0:	cmp	r3, #45	; 0x2d
   132d4:	ldr	r3, [sp, #24]
   132d8:	add	r6, r3, r6
   132dc:	beq	13cc0 <dcngettext@plt+0x29f4>
   132e0:	subs	r5, r7, r5
   132e4:	bmi	13cc0 <dcngettext@plt+0x29f4>
   132e8:	mvn	r3, r6
   132ec:	cmp	r5, r3
   132f0:	mov	r8, r5
   132f4:	bcs	12070 <dcngettext@plt+0xda4>
   132f8:	cmp	r5, #0
   132fc:	cmpne	sl, #0
   13300:	beq	1333c <dcngettext@plt+0x2070>
   13304:	ldr	r3, [sp, #28]
   13308:	cmp	r3, #43	; 0x2b
   1330c:	cmpne	r3, #48	; 0x30
   13310:	moveq	r7, #1
   13314:	movne	r7, #0
   13318:	bne	13ca0 <dcngettext@plt+0x29d4>
   1331c:	mov	r7, #0
   13320:	mov	r9, #48	; 0x30
   13324:	add	r7, r7, #1
   13328:	mov	r1, sl
   1332c:	mov	r0, r9
   13330:	bl	11254 <fputc@plt>
   13334:	cmp	r5, r7
   13338:	bhi	13324 <dcngettext@plt+0x2058>
   1333c:	add	r3, r8, r6
   13340:	str	r3, [sp, #24]
   13344:	b	12048 <dcngettext@plt+0xd7c>
   13348:	cmp	r8, #69	; 0x45
   1334c:	beq	12440 <dcngettext@plt+0x1174>
   13350:	ldr	r3, [sp, #32]
   13354:	ldr	r2, [r3, #12]
   13358:	ldr	r3, [sp, #28]
   1335c:	mov	ip, #2
   13360:	cmp	r3, #0
   13364:	moveq	r3, #95	; 0x5f
   13368:	streq	r3, [sp, #28]
   1336c:	b	12b08 <dcngettext@plt+0x183c>
   13370:	cmp	r8, #69	; 0x45
   13374:	beq	12440 <dcngettext@plt+0x1174>
   13378:	ldr	r3, [sp, #32]
   1337c:	mov	ip, #2
   13380:	ldr	r2, [r3, #12]
   13384:	b	12b08 <dcngettext@plt+0x183c>
   13388:	mov	r6, #0
   1338c:	ldr	r2, [sp, #32]
   13390:	ldr	r3, [r2, #32]
   13394:	cmp	r3, #0
   13398:	blt	12048 <dcngettext@plt+0xd7c>
   1339c:	ldr	lr, [r2, #36]	; 0x24
   133a0:	cmp	lr, #0
   133a4:	blt	13e3c <dcngettext@plt+0x2b70>
   133a8:	bne	13ac4 <dcngettext@plt+0x27f8>
   133ac:	ldr	r3, [sp, #56]	; 0x38
   133b0:	ldrb	r3, [r3]
   133b4:	cmp	r3, #45	; 0x2d
   133b8:	moveq	r2, lr
   133bc:	movne	r2, #1
   133c0:	movne	r3, lr
   133c4:	moveq	r3, #1
   133c8:	str	r3, [sp, #44]	; 0x2c
   133cc:	ldr	r3, [pc, #-1364]	; 12e80 <dcngettext@plt+0x1bb4>
   133d0:	ldr	r5, [pc, #-1368]	; 12e80 <dcngettext@plt+0x1bb4>
   133d4:	smull	r3, ip, r3, lr
   133d8:	ldr	r3, [pc, #-1372]	; 12e84 <dcngettext@plt+0x1bb8>
   133dc:	add	ip, ip, lr
   133e0:	smull	r0, r3, r3, lr
   133e4:	asr	r0, lr, #31
   133e8:	rsb	ip, r0, ip, asr #5
   133ec:	str	r0, [sp, #64]	; 0x40
   133f0:	smull	r5, r0, r5, ip
   133f4:	add	r0, r0, ip
   133f8:	asr	r5, ip, #31
   133fc:	rsb	r0, r5, r0, asr #5
   13400:	add	r3, r3, lr
   13404:	rsb	r0, r0, r0, lsl #4
   13408:	str	r0, [sp, #68]	; 0x44
   1340c:	ldr	r0, [sp, #64]	; 0x40
   13410:	rsb	r5, ip, ip, lsl #4
   13414:	rsb	r3, r0, r3, asr #11
   13418:	ldr	r0, [sp, #68]	; 0x44
   1341c:	sub	r5, lr, r5, lsl #2
   13420:	sub	r0, ip, r0, lsl #2
   13424:	cmp	r6, #3
   13428:	ldrls	pc, [pc, r6, lsl #2]
   1342c:	b	12440 <dcngettext@plt+0x1174>
   13430:	andeq	r3, r1, r8, lsr #28
   13434:	andeq	r3, r1, r8, ror sp
   13438:	andeq	r3, r1, r4, lsl #28
   1343c:	andeq	r3, r1, r0, ror #26
   13440:	ldr	r3, [sp, #36]	; 0x24
   13444:	cmp	r5, #0
   13448:	movne	r3, r5
   1344c:	cmp	r8, #69	; 0x45
   13450:	str	r3, [sp, #36]	; 0x24
   13454:	beq	12440 <dcngettext@plt+0x1174>
   13458:	uxtb	r1, r1
   1345c:	mov	r5, #0
   13460:	b	1260c <dcngettext@plt+0x1340>
   13464:	cmp	r8, #69	; 0x45
   13468:	beq	12710 <dcngettext@plt+0x1444>
   1346c:	ldr	r3, [sp, #32]
   13470:	mov	r0, #100	; 0x64
   13474:	ldr	r2, [r3, #20]
   13478:	ldr	r3, [pc, #-1512]	; 12e98 <dcngettext@plt+0x1bcc>
   1347c:	smull	r3, ip, r3, r2
   13480:	asr	r3, r2, #31
   13484:	rsb	r3, r3, ip, asr #5
   13488:	mul	r3, r0, r3
   1348c:	subs	r3, r2, r3
   13490:	bmi	13dd8 <dcngettext@plt+0x2b0c>
   13494:	ldr	r2, [sp, #28]
   13498:	b	12e20 <dcngettext@plt+0x1b54>
   1349c:	ldr	r3, [sp, #32]
   134a0:	cmp	r8, #79	; 0x4f
   134a4:	ldr	r3, [r3, #16]
   134a8:	beq	12710 <dcngettext@plt+0x1444>
   134ac:	add	r2, r3, r3, lsl #2
   134b0:	mov	lr, #0
   134b4:	add	r3, r3, r2, lsl #1
   134b8:	str	lr, [sp, #44]	; 0x2c
   134bc:	asr	r3, r3, #5
   134c0:	add	r3, r3, #1
   134c4:	mov	r0, lr
   134c8:	mov	ip, #1
   134cc:	b	12b4c <dcngettext@plt+0x1880>
   134d0:	mov	r3, #0
   134d4:	cmp	r5, #0
   134d8:	moveq	r5, r3
   134dc:	moveq	r1, #112	; 0x70
   134e0:	movne	r3, #0
   134e4:	movne	r1, #112	; 0x70
   134e8:	strne	r3, [sp, #36]	; 0x24
   134ec:	b	1260c <dcngettext@plt+0x1340>
   134f0:	sub	r3, r4, #1
   134f4:	cmp	r3, r9
   134f8:	movne	r4, r3
   134fc:	bne	12440 <dcngettext@plt+0x1174>
   13500:	ldr	r3, [sp, #28]
   13504:	subs	r3, r3, #45	; 0x2d
   13508:	movne	r3, #1
   1350c:	cmp	r7, #0
   13510:	movlt	r3, #0
   13514:	cmp	r3, #0
   13518:	beq	13db0 <dcngettext@plt+0x2ae4>
   1351c:	cmp	r7, #1
   13520:	movcs	r5, r7
   13524:	movcc	r5, #1
   13528:	ldr	r3, [sp, #24]
   1352c:	mvn	r3, r3
   13530:	cmp	r3, r5
   13534:	bls	12070 <dcngettext@plt+0xda4>
   13538:	cmp	sl, #0
   1353c:	beq	12ac8 <dcngettext@plt+0x17fc>
   13540:	cmp	r7, #1
   13544:	bls	13588 <dcngettext@plt+0x22bc>
   13548:	ldr	r3, [sp, #28]
   1354c:	sub	r7, r7, #1
   13550:	cmp	r3, #43	; 0x2b
   13554:	cmpne	r3, #48	; 0x30
   13558:	moveq	r6, #1
   1355c:	movne	r6, #0
   13560:	bne	13d90 <dcngettext@plt+0x2ac4>
   13564:	mov	r6, #0
   13568:	mov	r8, #48	; 0x30
   1356c:	add	r6, r6, #1
   13570:	mov	r1, sl
   13574:	mov	r0, r8
   13578:	bl	11254 <fputc@plt>
   1357c:	cmp	r7, r6
   13580:	bne	1356c <dcngettext@plt+0x22a0>
   13584:	ldrb	r0, [r4]
   13588:	mov	r1, sl
   1358c:	bl	11254 <fputc@plt>
   13590:	b	12ac8 <dcngettext@plt+0x17fc>
   13594:	cmp	r8, #69	; 0x45
   13598:	beq	12440 <dcngettext@plt+0x1174>
   1359c:	ldr	r2, [sp, #32]
   135a0:	mov	ip, #2
   135a4:	ldr	r3, [r2, #28]
   135a8:	ldr	r2, [r2, #24]
   135ac:	sub	r3, r3, r2
   135b0:	ldr	r2, [pc, #-1808]	; 12ea8 <dcngettext@plt+0x1bdc>
   135b4:	add	r3, r3, #7
   135b8:	smull	r0, r2, r2, r3
   135bc:	add	r2, r2, r3
   135c0:	asr	r3, r3, #31
   135c4:	rsb	r2, r3, r2, asr ip
   135c8:	b	12b08 <dcngettext@plt+0x183c>
   135cc:	ldr	r8, [pc, #-1868]	; 12e88 <dcngettext@plt+0x1bbc>
   135d0:	mvn	r9, #0
   135d4:	ldr	r5, [sp, #28]
   135d8:	b	12eec <dcngettext@plt+0x1c20>
   135dc:	cmp	r8, #69	; 0x45
   135e0:	beq	12440 <dcngettext@plt+0x1174>
   135e4:	ldr	r3, [sp, #32]
   135e8:	mov	r0, #0
   135ec:	mov	lr, r0
   135f0:	ldr	r3, [r3, #28]
   135f4:	mov	ip, #3
   135f8:	cmn	r3, #1
   135fc:	movlt	r2, #1
   13600:	movge	r2, r0
   13604:	str	r2, [sp, #44]	; 0x2c
   13608:	add	r3, r3, #1
   1360c:	movge	r2, #1
   13610:	movlt	r2, r0
   13614:	b	12b28 <dcngettext@plt+0x185c>
   13618:	ldrb	r3, [r4, #1]
   1361c:	add	r0, r4, #1
   13620:	cmp	r3, #58	; 0x3a
   13624:	movne	r6, #1
   13628:	beq	13b00 <dcngettext@plt+0x2834>
   1362c:	cmp	r3, #122	; 0x7a
   13630:	moveq	r4, r0
   13634:	bne	12440 <dcngettext@plt+0x1174>
   13638:	b	1338c <dcngettext@plt+0x20c0>
   1363c:	cmp	r8, #69	; 0x45
   13640:	beq	12440 <dcngettext@plt+0x1174>
   13644:	ldr	r3, [sp, #32]
   13648:	ldr	r0, [pc, #-1960]	; 12ea8 <dcngettext@plt+0x1bdc>
   1364c:	ldr	r2, [r3, #24]
   13650:	ldr	r3, [r3, #28]
   13654:	add	r2, r2, #6
   13658:	smull	ip, r0, r0, r2
   1365c:	add	ip, r0, r2
   13660:	asr	r0, r2, #31
   13664:	rsb	r0, r0, ip, asr #2
   13668:	mov	ip, #2
   1366c:	rsb	r0, r0, r0, lsl #3
   13670:	sub	r2, r2, r0
   13674:	b	135ac <dcngettext@plt+0x22e0>
   13678:	cmp	r8, #69	; 0x45
   1367c:	beq	12440 <dcngettext@plt+0x1174>
   13680:	ldr	r3, [sp, #32]
   13684:	mov	ip, #2
   13688:	ldr	r2, [r3]
   1368c:	b	12b08 <dcngettext@plt+0x183c>
   13690:	mvn	r9, #0
   13694:	ldr	r8, [pc, #-2064]	; 12e8c <dcngettext@plt+0x1bc0>
   13698:	ldr	r5, [sp, #28]
   1369c:	b	12eec <dcngettext@plt+0x1c20>
   136a0:	cmp	r8, #69	; 0x45
   136a4:	beq	12440 <dcngettext@plt+0x1174>
   136a8:	ldr	r2, [sp, #48]	; 0x30
   136ac:	b	13358 <dcngettext@plt+0x208c>
   136b0:	cmp	r8, #69	; 0x45
   136b4:	beq	12440 <dcngettext@plt+0x1174>
   136b8:	ldr	r3, [sp, #32]
   136bc:	ldr	r2, [r3, #8]
   136c0:	b	13358 <dcngettext@plt+0x208c>
   136c4:	cmp	r8, #69	; 0x45
   136c8:	beq	12710 <dcngettext@plt+0x1444>
   136cc:	cmp	r8, #79	; 0x4f
   136d0:	beq	12440 <dcngettext@plt+0x1174>
   136d4:	ldr	r3, [sp, #32]
   136d8:	ldr	r0, [pc, #-2124]	; 12e94 <dcngettext@plt+0x1bc8>
   136dc:	ldr	r2, [r3, #20]
   136e0:	cmp	r2, r0
   136e4:	movge	ip, #0
   136e8:	movlt	ip, #1
   136ec:	str	ip, [sp, #44]	; 0x2c
   136f0:	ldr	ip, [sp, #28]
   136f4:	add	r3, r2, #1888	; 0x760
   136f8:	cmp	ip, #0
   136fc:	add	r3, r3, #12
   13700:	movne	r2, ip
   13704:	beq	139b8 <dcngettext@plt+0x26ec>
   13708:	cmp	r2, #43	; 0x2b
   1370c:	ldr	r2, [sp, #44]	; 0x2c
   13710:	eor	r2, r2, #1
   13714:	beq	13c60 <dcngettext@plt+0x2994>
   13718:	mov	lr, #0
   1371c:	uxtb	r2, r2
   13720:	mov	ip, #4
   13724:	b	12e48 <dcngettext@plt+0x1b7c>
   13728:	cmp	r8, #69	; 0x45
   1372c:	beq	12710 <dcngettext@plt+0x1444>
   13730:	ldr	r3, [sp, #32]
   13734:	ldr	r0, [pc, #-2220]	; 12e90 <dcngettext@plt+0x1bc4>
   13738:	mvn	ip, #98	; 0x62
   1373c:	ldr	r2, [r3, #20]
   13740:	add	r3, r2, #1888	; 0x760
   13744:	add	r3, r3, #12
   13748:	cmp	r3, r0
   1374c:	ldr	r0, [pc, #-2240]	; 12e94 <dcngettext@plt+0x1bc8>
   13750:	movhi	r3, #0
   13754:	movls	r3, #1
   13758:	cmp	r2, r0
   1375c:	mla	r3, ip, r3, r2
   13760:	movge	ip, #0
   13764:	movlt	ip, #1
   13768:	str	ip, [sp, #44]	; 0x2c
   1376c:	ldr	ip, [sp, #28]
   13770:	cmp	ip, #0
   13774:	ldr	ip, [pc, #-2276]	; 12e98 <dcngettext@plt+0x1bcc>
   13778:	smull	lr, ip, ip, r3
   1377c:	asr	r3, r3, #31
   13780:	rsb	r3, r3, ip, asr #5
   13784:	add	r3, r3, #19
   13788:	bne	13a24 <dcngettext@plt+0x2758>
   1378c:	ldr	ip, [sp, #1152]	; 0x480
   13790:	cmp	r2, r0
   13794:	movlt	r2, #0
   13798:	movge	r2, #1
   1379c:	cmp	ip, #43	; 0x2b
   137a0:	beq	13a60 <dcngettext@plt+0x2794>
   137a4:	str	ip, [sp, #28]
   137a8:	mov	lr, #0
   137ac:	mov	ip, #2
   137b0:	b	12e48 <dcngettext@plt+0x1b7c>
   137b4:	ldr	r0, [sp, #56]	; 0x38
   137b8:	bl	1117c <strlen@plt>
   137bc:	ldr	r2, [sp, #28]
   137c0:	mvn	r3, r7
   137c4:	cmp	r2, #45	; 0x2d
   137c8:	lsr	r3, r3, #31
   137cc:	moveq	r3, #0
   137d0:	cmp	r3, #0
   137d4:	moveq	r7, #0
   137d8:	ldr	r3, [sp, #36]	; 0x24
   137dc:	cmp	r5, #0
   137e0:	movne	r3, #0
   137e4:	str	r3, [sp, #36]	; 0x24
   137e8:	cmp	r0, r7
   137ec:	movcs	r3, r0
   137f0:	movcc	r3, r7
   137f4:	mov	r2, r3
   137f8:	str	r3, [sp, #44]	; 0x2c
   137fc:	ldr	r3, [sp, #24]
   13800:	mov	r9, r0
   13804:	mvn	r3, r3
   13808:	cmp	r2, r3
   1380c:	bcs	12070 <dcngettext@plt+0xda4>
   13810:	cmp	sl, #0
   13814:	beq	1251c <dcngettext@plt+0x1250>
   13818:	cmp	r0, r7
   1381c:	bcc	139e0 <dcngettext@plt+0x2714>
   13820:	cmp	r5, #0
   13824:	bne	13cdc <dcngettext@plt+0x2a10>
   13828:	ldr	r3, [sp, #36]	; 0x24
   1382c:	cmp	r3, #0
   13830:	beq	13dec <dcngettext@plt+0x2b20>
   13834:	mov	r2, r9
   13838:	ldr	r1, [sp, #56]	; 0x38
   1383c:	mov	r0, sl
   13840:	bl	11f00 <dcngettext@plt+0xc34>
   13844:	b	1251c <dcngettext@plt+0x1250>
   13848:	mov	r3, #1
   1384c:	b	134d4 <dcngettext@plt+0x2208>
   13850:	add	r9, r9, #14
   13854:	sub	r9, r9, r5
   13858:	sub	r2, r7, r9
   1385c:	cmp	r2, #0
   13860:	movle	r2, #0
   13864:	andgt	r2, r3, #1
   13868:	cmp	r2, #0
   1386c:	bne	13878 <dcngettext@plt+0x25ac>
   13870:	cmp	r3, #0
   13874:	beq	12958 <dcngettext@plt+0x168c>
   13878:	mov	r3, r7
   1387c:	b	12958 <dcngettext@plt+0x168c>
   13880:	mov	r2, #45	; 0x2d
   13884:	b	128dc <dcngettext@plt+0x1610>
   13888:	mov	r2, #48	; 0x30
   1388c:	mov	r3, #1
   13890:	str	r2, [sp, #28]
   13894:	b	128bc <dcngettext@plt+0x15f0>
   13898:	mov	r1, r9
   1389c:	mov	r0, r5
   138a0:	mov	r3, sl
   138a4:	mov	r2, #1
   138a8:	bl	11098 <fwrite@plt>
   138ac:	b	1251c <dcngettext@plt+0x1250>
   138b0:	cmp	r9, #0
   138b4:	sub	r8, r8, #2
   138b8:	beq	1251c <dcngettext@plt+0x1250>
   138bc:	bl	11128 <__ctype_tolower_loc@plt>
   138c0:	add	r5, sp, #89	; 0x59
   138c4:	mov	r6, r0
   138c8:	ldrb	r2, [r5], #1
   138cc:	ldr	r3, [r6]
   138d0:	mov	r1, sl
   138d4:	ldr	r0, [r3, r2, lsl #2]
   138d8:	bl	11254 <fputc@plt>
   138dc:	cmp	r8, #0
   138e0:	sub	r8, r8, #1
   138e4:	bne	138c8 <dcngettext@plt+0x25fc>
   138e8:	b	1251c <dcngettext@plt+0x1250>
   138ec:	cmp	r6, #0
   138f0:	beq	129cc <dcngettext@plt+0x1700>
   138f4:	mov	r8, #0
   138f8:	mov	r7, #48	; 0x30
   138fc:	add	r8, r8, #1
   13900:	mov	r1, sl
   13904:	mov	r0, r7
   13908:	bl	11254 <fputc@plt>
   1390c:	cmp	r6, r8
   13910:	bne	138fc <dcngettext@plt+0x2630>
   13914:	b	129cc <dcngettext@plt+0x1700>
   13918:	cmp	sl, #0
   1391c:	beq	1395c <dcngettext@plt+0x2690>
   13920:	cmp	r6, #0
   13924:	beq	1395c <dcngettext@plt+0x2690>
   13928:	str	r7, [sp, #1156]	; 0x484
   1392c:	mov	r8, #0
   13930:	mov	r7, r3
   13934:	add	r8, r8, #1
   13938:	mov	r1, sl
   1393c:	mov	r0, #32
   13940:	str	r2, [sp, #44]	; 0x2c
   13944:	bl	11254 <fputc@plt>
   13948:	cmp	r8, r6
   1394c:	ldr	r2, [sp, #44]	; 0x2c
   13950:	bne	13934 <dcngettext@plt+0x2668>
   13954:	mov	r3, r7
   13958:	ldr	r7, [sp, #1156]	; 0x484
   1395c:	ldr	r1, [sp, #24]
   13960:	sub	r7, r7, r6
   13964:	add	r1, r1, r6
   13968:	str	r1, [sp, #24]
   1396c:	b	1290c <dcngettext@plt+0x1640>
   13970:	str	r0, [sp, #24]
   13974:	b	1205c <dcngettext@plt+0xd90>
   13978:	mov	r8, #32
   1397c:	add	r6, r6, #1
   13980:	mov	r1, sl
   13984:	mov	r0, r8
   13988:	bl	11254 <fputc@plt>
   1398c:	cmp	r7, r6
   13990:	bne	1397c <dcngettext@plt+0x26b0>
   13994:	b	12c40 <dcngettext@plt+0x1974>
   13998:	mov	r8, #32
   1399c:	add	r6, r6, #1
   139a0:	mov	r1, sl
   139a4:	mov	r0, r8
   139a8:	bl	11254 <fputc@plt>
   139ac:	cmp	r7, r6
   139b0:	bne	1399c <dcngettext@plt+0x26d0>
   139b4:	b	12abc <dcngettext@plt+0x17f0>
   139b8:	ldr	ip, [sp, #1152]	; 0x480
   139bc:	cmp	r2, r0
   139c0:	movlt	r2, #0
   139c4:	movge	r2, #1
   139c8:	cmp	ip, #43	; 0x2b
   139cc:	beq	13cd0 <dcngettext@plt+0x2a04>
   139d0:	str	ip, [sp, #28]
   139d4:	mov	lr, #0
   139d8:	mov	ip, #4
   139dc:	b	12e48 <dcngettext@plt+0x1b7c>
   139e0:	ldr	r3, [sp, #28]
   139e4:	sub	r7, r7, r0
   139e8:	cmp	r3, #43	; 0x2b
   139ec:	cmpne	r3, #48	; 0x30
   139f0:	moveq	r6, #1
   139f4:	movne	r6, #0
   139f8:	beq	13ad4 <dcngettext@plt+0x2808>
   139fc:	cmp	r7, #0
   13a00:	movne	r8, #32
   13a04:	beq	13820 <dcngettext@plt+0x2554>
   13a08:	add	r6, r6, #1
   13a0c:	mov	r1, sl
   13a10:	mov	r0, r8
   13a14:	bl	11254 <fputc@plt>
   13a18:	cmp	r7, r6
   13a1c:	bne	13a08 <dcngettext@plt+0x273c>
   13a20:	b	13820 <dcngettext@plt+0x2554>
   13a24:	cmp	r2, r0
   13a28:	movlt	r2, #0
   13a2c:	movge	r2, #1
   13a30:	b	12e34 <dcngettext@plt+0x1b68>
   13a34:	cmp	r5, #0
   13a38:	beq	12fa4 <dcngettext@plt+0x1cd8>
   13a3c:	mov	r6, #0
   13a40:	mov	r7, #48	; 0x30
   13a44:	add	r6, r6, #1
   13a48:	mov	r1, sl
   13a4c:	mov	r0, r7
   13a50:	bl	11254 <fputc@plt>
   13a54:	cmp	r5, r6
   13a58:	bne	13a44 <dcngettext@plt+0x2778>
   13a5c:	b	12fa4 <dcngettext@plt+0x1cd8>
   13a60:	mov	ip, #2
   13a64:	mov	r0, #99	; 0x63
   13a68:	cmp	r0, r3
   13a6c:	movcs	r0, #0
   13a70:	movcc	r0, #1
   13a74:	cmp	r7, ip
   13a78:	movle	lr, r0
   13a7c:	orrgt	lr, r0, #1
   13a80:	mov	r0, #43	; 0x2b
   13a84:	str	r0, [sp, #28]
   13a88:	b	12e48 <dcngettext@plt+0x1b7c>
   13a8c:	cmp	r5, lr
   13a90:	bge	13c2c <dcngettext@plt+0x2960>
   13a94:	cmp	r2, #0
   13a98:	rsb	r3, r3, #0
   13a9c:	bne	12e28 <dcngettext@plt+0x1b5c>
   13aa0:	ldr	r2, [sp, #1152]	; 0x480
   13aa4:	cmp	r2, #43	; 0x2b
   13aa8:	beq	13e4c <dcngettext@plt+0x2b80>
   13aac:	mov	lr, #0
   13ab0:	str	r2, [sp, #28]
   13ab4:	str	lr, [sp, #44]	; 0x2c
   13ab8:	mov	r2, #1
   13abc:	mov	ip, #2
   13ac0:	b	12e48 <dcngettext@plt+0x1b7c>
   13ac4:	mov	r3, #0
   13ac8:	mov	r2, #1
   13acc:	str	r3, [sp, #44]	; 0x2c
   13ad0:	b	133cc <dcngettext@plt+0x2100>
   13ad4:	cmp	r7, #0
   13ad8:	beq	13820 <dcngettext@plt+0x2554>
   13adc:	mov	r6, #0
   13ae0:	mov	r8, #48	; 0x30
   13ae4:	add	r6, r6, #1
   13ae8:	mov	r1, sl
   13aec:	mov	r0, r8
   13af0:	bl	11254 <fputc@plt>
   13af4:	cmp	r7, r6
   13af8:	bne	13ae4 <dcngettext@plt+0x2818>
   13afc:	b	13820 <dcngettext@plt+0x2554>
   13b00:	add	r2, r4, #2
   13b04:	mov	r6, #1
   13b08:	mov	r0, r2
   13b0c:	ldrb	r3, [r2], #1
   13b10:	add	r6, r6, #1
   13b14:	cmp	r3, #58	; 0x3a
   13b18:	bne	1362c <dcngettext@plt+0x2360>
   13b1c:	b	13b08 <dcngettext@plt+0x283c>
   13b20:	sub	r3, r3, #1
   13b24:	tst	r3, #3
   13b28:	ldrne	r3, [pc, #-3216]	; 12ea0 <dcngettext@plt+0x1bd4>
   13b2c:	bne	13b74 <dcngettext@plt+0x28a8>
   13b30:	ldr	r2, [pc, #-3232]	; 12e98 <dcngettext@plt+0x1bcc>
   13b34:	mov	r0, #100	; 0x64
   13b38:	smull	r2, ip, r2, r3
   13b3c:	asr	r2, r3, #31
   13b40:	rsb	lr, r2, ip, asr #5
   13b44:	mul	r0, r0, lr
   13b48:	cmp	r3, r0
   13b4c:	ldrne	r3, [pc, #-3256]	; 12e9c <dcngettext@plt+0x1bd0>
   13b50:	bne	13b74 <dcngettext@plt+0x28a8>
   13b54:	rsb	r2, r2, ip, asr #7
   13b58:	mov	ip, #400	; 0x190
   13b5c:	ldr	r0, [pc, #-3268]	; 12ea0 <dcngettext@plt+0x1bd4>
   13b60:	mul	r2, ip, r2
   13b64:	sub	ip, ip, #34	; 0x22
   13b68:	cmp	r3, r2
   13b6c:	movne	r3, r0
   13b70:	moveq	r3, ip
   13b74:	add	r3, r6, r3
   13b78:	sub	r2, r3, r9
   13b7c:	ldr	ip, [pc, #-3292]	; 12ea8 <dcngettext@plt+0x1bdc>
   13b80:	add	r2, r2, #380	; 0x17c
   13b84:	add	r2, r2, #2
   13b88:	mvn	r0, #0
   13b8c:	smull	ip, lr, ip, r2
   13b90:	add	lr, lr, r2
   13b94:	asr	ip, r2, #31
   13b98:	rsb	ip, ip, lr, asr #2
   13b9c:	mov	r6, r0
   13ba0:	rsb	ip, ip, ip, lsl #3
   13ba4:	sub	ip, r2, ip
   13ba8:	sub	r3, r3, ip
   13bac:	add	r3, r3, #3
   13bb0:	ldr	lr, [pc, #-3348]	; 12ea4 <dcngettext@plt+0x1bd8>
   13bb4:	b	12dd0 <dcngettext@plt+0x1b04>
   13bb8:	ldr	r2, [pc, #-3352]	; 12ea8 <dcngettext@plt+0x1bdc>
   13bbc:	mov	ip, #2
   13bc0:	smull	r0, r2, r2, r3
   13bc4:	add	r0, r2, r3
   13bc8:	asr	r2, r3, #31
   13bcc:	rsb	r2, r2, r0, asr #2
   13bd0:	add	r2, r2, #1
   13bd4:	b	12b08 <dcngettext@plt+0x183c>
   13bd8:	cmp	r5, lr
   13bdc:	movge	r2, #0
   13be0:	movlt	r2, #1
   13be4:	str	r2, [sp, #44]	; 0x2c
   13be8:	ldr	r2, [sp, #28]
   13bec:	add	r3, r5, #1888	; 0x760
   13bf0:	add	r3, r3, #12
   13bf4:	cmp	r2, #0
   13bf8:	add	r3, r3, r0
   13bfc:	bne	13708 <dcngettext@plt+0x243c>
   13c00:	ldr	r2, [sp, #1152]	; 0x480
   13c04:	cmp	r2, #43	; 0x2b
   13c08:	beq	13c3c <dcngettext@plt+0x2970>
   13c0c:	mov	r0, r2
   13c10:	cmp	r5, lr
   13c14:	movlt	r2, #0
   13c18:	movge	r2, #1
   13c1c:	str	r0, [sp, #28]
   13c20:	mov	lr, #0
   13c24:	mov	ip, #4
   13c28:	b	12e48 <dcngettext@plt+0x1b7c>
   13c2c:	cmp	r2, #0
   13c30:	add	r3, r3, #100	; 0x64
   13c34:	beq	13aa0 <dcngettext@plt+0x27d4>
   13c38:	b	12e28 <dcngettext@plt+0x1b5c>
   13c3c:	cmp	r5, lr
   13c40:	movlt	r2, #0
   13c44:	movge	r2, #1
   13c48:	mov	ip, #4
   13c4c:	ldr	r0, [pc, #-3496]	; 12eac <dcngettext@plt+0x1be0>
   13c50:	b	13a68 <dcngettext@plt+0x279c>
   13c54:	mov	r7, r3
   13c58:	mov	r5, #1
   13c5c:	b	12a60 <dcngettext@plt+0x1794>
   13c60:	mov	ip, #4
   13c64:	uxtb	r2, r2
   13c68:	ldr	r0, [pc, #-3524]	; 12eac <dcngettext@plt+0x1be0>
   13c6c:	b	13a68 <dcngettext@plt+0x279c>
   13c70:	mov	r5, #1
   13c74:	b	1327c <dcngettext@plt+0x1fb0>
   13c78:	mov	r3, sl
   13c7c:	mov	r2, #1
   13c80:	mov	r1, r5
   13c84:	add	r0, sp, #72	; 0x48
   13c88:	bl	11098 <fwrite@plt>
   13c8c:	b	132cc <dcngettext@plt+0x2000>
   13c90:	subeq	r3, r3, r0, lsl #1
   13c94:	addeq	r3, r3, #48	; 0x30
   13c98:	strbeq	r3, [sp, #72]	; 0x48
   13c9c:	b	1327c <dcngettext@plt+0x1fb0>
   13ca0:	mov	r9, #32
   13ca4:	add	r7, r7, #1
   13ca8:	mov	r1, sl
   13cac:	mov	r0, r9
   13cb0:	bl	11254 <fputc@plt>
   13cb4:	cmp	r5, r7
   13cb8:	bhi	13ca4 <dcngettext@plt+0x29d8>
   13cbc:	b	1333c <dcngettext@plt+0x2070>
   13cc0:	cmn	r6, #1
   13cc4:	beq	12070 <dcngettext@plt+0xda4>
   13cc8:	mov	r8, #0
   13ccc:	b	1333c <dcngettext@plt+0x2070>
   13cd0:	mov	ip, #4
   13cd4:	ldr	r0, [pc, #-3632]	; 12eac <dcngettext@plt+0x1be0>
   13cd8:	b	13a68 <dcngettext@plt+0x279c>
   13cdc:	cmp	r9, #0
   13ce0:	beq	1251c <dcngettext@plt+0x1250>
   13ce4:	bl	11128 <__ctype_tolower_loc@plt>
   13ce8:	ldr	r5, [sp, #56]	; 0x38
   13cec:	add	r9, r5, r9
   13cf0:	mov	r6, r0
   13cf4:	ldrb	r2, [r5], #1
   13cf8:	ldr	r3, [r6]
   13cfc:	mov	r1, sl
   13d00:	ldr	r0, [r3, r2, lsl #2]
   13d04:	bl	11254 <fputc@plt>
   13d08:	cmp	r9, r5
   13d0c:	bne	13cf4 <dcngettext@plt+0x2a28>
   13d10:	b	1251c <dcngettext@plt+0x1250>
   13d14:	ldr	r3, [sp, #1168]	; 0x490
   13d18:	mov	ip, #43	; 0x2b
   13d1c:	str	r3, [sp, #16]
   13d20:	ldr	r3, [sp, #1164]	; 0x48c
   13d24:	mov	r9, #4
   13d28:	str	r3, [sp, #12]
   13d2c:	ldr	r3, [sp, #1160]	; 0x488
   13d30:	mov	r0, r8
   13d34:	str	r3, [sp, #8]
   13d38:	str	r9, [sp, #4]
   13d3c:	str	ip, [sp]
   13d40:	ldr	r3, [sp, #36]	; 0x24
   13d44:	ldr	r2, [sp, #32]
   13d48:	ldr	r1, [pc, #-3744]	; 12eb0 <dcngettext@plt+0x1be4>
   13d4c:	str	ip, [sp, #28]
   13d50:	mov	r5, r8
   13d54:	bl	11f40 <dcngettext@plt+0xc74>
   13d58:	ldr	r8, [pc, #-3760]	; 12eb0 <dcngettext@plt+0x1be4>
   13d5c:	b	12f30 <dcngettext@plt+0x1c64>
   13d60:	cmp	r5, #0
   13d64:	bne	13e04 <dcngettext@plt+0x2b38>
   13d68:	cmp	r0, #0
   13d6c:	moveq	lr, #1
   13d70:	moveq	ip, #3
   13d74:	beq	12b28 <dcngettext@plt+0x185c>
   13d78:	mov	ip, #100	; 0x64
   13d7c:	mov	lr, #1
   13d80:	mla	r3, ip, r3, r0
   13d84:	mov	ip, #6
   13d88:	mov	r0, #4
   13d8c:	b	12b28 <dcngettext@plt+0x185c>
   13d90:	mov	r8, #32
   13d94:	add	r6, r6, #1
   13d98:	mov	r1, sl
   13d9c:	mov	r0, r8
   13da0:	bl	11254 <fputc@plt>
   13da4:	cmp	r7, r6
   13da8:	bne	13d94 <dcngettext@plt+0x2ac8>
   13dac:	b	13584 <dcngettext@plt+0x22b8>
   13db0:	mov	r7, r3
   13db4:	mov	r5, #1
   13db8:	b	13528 <dcngettext@plt+0x225c>
   13dbc:	ldr	r2, [sp, #40]	; 0x28
   13dc0:	mov	r3, #75	; 0x4b
   13dc4:	str	r3, [r2]
   13dc8:	b	1207c <dcngettext@plt+0xdb0>
   13dcc:	mov	r7, r3
   13dd0:	mov	r5, #1
   13dd4:	b	12be4 <dcngettext@plt+0x1918>
   13dd8:	sub	r0, r0, #2000	; 0x7d0
   13ddc:	cmp	r2, r0
   13de0:	rsblt	r3, r3, #0
   13de4:	addge	r3, r3, #100	; 0x64
   13de8:	b	13494 <dcngettext@plt+0x21c8>
   13dec:	mov	r1, r9
   13df0:	mov	r3, sl
   13df4:	mov	r2, #1
   13df8:	ldr	r0, [sp, #56]	; 0x38
   13dfc:	bl	11098 <fwrite@plt>
   13e00:	b	1251c <dcngettext@plt+0x1250>
   13e04:	mov	lr, #100	; 0x64
   13e08:	ldr	ip, [pc, #-3932]	; 12eb4 <dcngettext@plt+0x1be8>
   13e0c:	mul	r0, lr, r0
   13e10:	mov	lr, #1
   13e14:	mla	r3, ip, r3, r0
   13e18:	mov	r0, #20
   13e1c:	add	r3, r3, r5
   13e20:	mov	ip, #9
   13e24:	b	12b28 <dcngettext@plt+0x185c>
   13e28:	mov	ip, #100	; 0x64
   13e2c:	mov	lr, #1
   13e30:	mla	r3, ip, r3, r0
   13e34:	mov	ip, #5
   13e38:	b	12e48 <dcngettext@plt+0x1b7c>
   13e3c:	mov	r3, #1
   13e40:	mov	r2, #0
   13e44:	str	r3, [sp, #44]	; 0x2c
   13e48:	b	133cc <dcngettext@plt+0x2100>
   13e4c:	ldr	r2, [sp, #28]
   13e50:	mov	ip, #2
   13e54:	str	r2, [sp, #44]	; 0x2c
   13e58:	mov	r0, #99	; 0x63
   13e5c:	mov	r2, #1
   13e60:	b	13a68 <dcngettext@plt+0x279c>
   13e64:	push	{r4, r5, lr}
   13e68:	sub	sp, sp, #36	; 0x24
   13e6c:	add	lr, sp, #32
   13e70:	ldr	r5, [sp, #48]	; 0x30
   13e74:	mov	ip, #0
   13e78:	mvn	r4, #0
   13e7c:	str	r3, [sp, #12]
   13e80:	strb	ip, [lr, #-1]!
   13e84:	mov	r3, ip
   13e88:	str	ip, [sp]
   13e8c:	str	lr, [sp, #8]
   13e90:	str	r5, [sp, #16]
   13e94:	str	r4, [sp, #4]
   13e98:	bl	11f40 <dcngettext@plt+0xc74>
   13e9c:	add	sp, sp, #36	; 0x24
   13ea0:	pop	{r4, r5, pc}
   13ea4:	push	{r4, r5, r6, r7, r8, lr}
   13ea8:	sub	sp, sp, #8
   13eac:	ldmib	r0, {ip, lr}
   13eb0:	mov	r4, r0
   13eb4:	ldr	r5, [sp, #32]
   13eb8:	cmp	lr, ip
   13ebc:	beq	13ed4 <dcngettext@plt+0x2c08>
   13ec0:	str	r5, [sp, #32]
   13ec4:	mov	r0, r4
   13ec8:	add	sp, sp, #8
   13ecc:	pop	{r4, r5, r6, r7, r8, lr}
   13ed0:	b	111f4 <fseeko64@plt>
   13ed4:	ldr	lr, [r0, #20]
   13ed8:	ldr	ip, [r0, #16]
   13edc:	cmp	lr, ip
   13ee0:	bne	13ec0 <dcngettext@plt+0x2bf4>
   13ee4:	ldr	r8, [r0, #36]	; 0x24
   13ee8:	cmp	r8, #0
   13eec:	bne	13ec0 <dcngettext@plt+0x2bf4>
   13ef0:	mov	r6, r2
   13ef4:	mov	r7, r3
   13ef8:	bl	111d0 <fileno@plt>
   13efc:	mov	r2, r6
   13f00:	mov	r3, r7
   13f04:	str	r5, [sp]
   13f08:	bl	110a4 <lseek64@plt>
   13f0c:	mvn	r3, #0
   13f10:	mvn	r2, #0
   13f14:	cmp	r1, r3
   13f18:	cmpeq	r0, r2
   13f1c:	beq	13f3c <dcngettext@plt+0x2c70>
   13f20:	ldr	r3, [r4]
   13f24:	strd	r0, [r4, #80]	; 0x50
   13f28:	mov	r0, r8
   13f2c:	bic	r3, r3, #16
   13f30:	str	r3, [r4]
   13f34:	add	sp, sp, #8
   13f38:	pop	{r4, r5, r6, r7, r8, pc}
   13f3c:	mvn	r0, #0
   13f40:	b	13f34 <dcngettext@plt+0x2c68>
   13f44:	push	{r4, r5, r6, r7, r8, lr}
   13f48:	cmp	r0, #2
   13f4c:	ldr	r4, [pc, #148]	; 13fe8 <dcngettext@plt+0x2d1c>
   13f50:	mov	r5, #0
   13f54:	sub	sp, sp, #16
   13f58:	ldr	r6, [r4]
   13f5c:	str	r5, [r4]
   13f60:	beq	13f7c <dcngettext@plt+0x2cb0>
   13f64:	ldr	r3, [pc, #128]	; 13fec <dcngettext@plt+0x2d20>
   13f68:	mov	r2, #0
   13f6c:	str	r6, [r4]
   13f70:	str	r2, [r3]
   13f74:	add	sp, sp, #16
   13f78:	pop	{r4, r5, r6, r7, r8, pc}
   13f7c:	mov	r8, r3
   13f80:	mov	r7, r2
   13f84:	str	r5, [sp]
   13f88:	ldr	r3, [pc, #96]	; 13ff0 <dcngettext@plt+0x2d24>
   13f8c:	ldr	r2, [pc, #96]	; 13ff4 <dcngettext@plt+0x2d28>
   13f90:	bl	1114c <getopt_long@plt>
   13f94:	cmn	r0, #1
   13f98:	beq	13f64 <dcngettext@plt+0x2c98>
   13f9c:	cmp	r0, #104	; 0x68
   13fa0:	beq	13fd8 <dcngettext@plt+0x2d0c>
   13fa4:	cmp	r0, #118	; 0x76
   13fa8:	bne	13f64 <dcngettext@plt+0x2c98>
   13fac:	ldr	r3, [pc, #68]	; 13ff8 <dcngettext@plt+0x2d2c>
   13fb0:	add	ip, sp, #48	; 0x30
   13fb4:	mov	r2, r8
   13fb8:	ldr	r0, [r3]
   13fbc:	mov	r1, r7
   13fc0:	str	ip, [sp]
   13fc4:	ldr	r3, [sp, #40]	; 0x28
   13fc8:	str	ip, [sp, #12]
   13fcc:	bl	18cdc <dcngettext@plt+0x7a10>
   13fd0:	mov	r0, r5
   13fd4:	bl	11170 <exit@plt>
   13fd8:	mov	r0, r5
   13fdc:	ldr	r3, [sp, #44]	; 0x2c
   13fe0:	blx	r3
   13fe4:	b	13f64 <dcngettext@plt+0x2c98>
   13fe8:	muleq	r2, r0, r1
   13fec:	andeq	fp, r2, r0, lsl #3
   13ff0:	andeq	sl, r1, r0, asr r7
   13ff4:	andeq	sl, r1, r0, lsl #15
   13ff8:	andeq	fp, r2, ip, lsl #3
   13ffc:	push	{r4, r5, r6, r7, r8, lr}
   14000:	sub	sp, sp, #16
   14004:	ldr	r5, [pc, #176]	; 140bc <dcngettext@plt+0x2df0>
   14008:	ldrb	r8, [sp, #44]	; 0x2c
   1400c:	ldr	r4, [pc, #172]	; 140c0 <dcngettext@plt+0x2df4>
   14010:	ldr	lr, [pc, #172]	; 140c4 <dcngettext@plt+0x2df8>
   14014:	cmp	r8, #0
   14018:	mov	r6, r2
   1401c:	movne	r2, r5
   14020:	mov	r5, #0
   14024:	mov	ip, #1
   14028:	moveq	r2, lr
   1402c:	mov	r7, r3
   14030:	str	r5, [sp]
   14034:	ldr	r3, [pc, #140]	; 140c8 <dcngettext@plt+0x2dfc>
   14038:	ldr	r8, [r4]
   1403c:	str	ip, [r4]
   14040:	bl	1114c <getopt_long@plt>
   14044:	cmn	r0, #1
   14048:	beq	14098 <dcngettext@plt+0x2dcc>
   1404c:	cmp	r0, #104	; 0x68
   14050:	beq	140a4 <dcngettext@plt+0x2dd8>
   14054:	cmp	r0, #118	; 0x76
   14058:	bne	14088 <dcngettext@plt+0x2dbc>
   1405c:	ldr	r3, [pc, #104]	; 140cc <dcngettext@plt+0x2e00>
   14060:	add	ip, sp, #52	; 0x34
   14064:	mov	r2, r7
   14068:	ldr	r0, [r3]
   1406c:	mov	r1, r6
   14070:	str	ip, [sp]
   14074:	ldr	r3, [sp, #40]	; 0x28
   14078:	str	ip, [sp, #12]
   1407c:	bl	18cdc <dcngettext@plt+0x7a10>
   14080:	mov	r0, r5
   14084:	bl	11170 <exit@plt>
   14088:	ldr	r3, [pc, #64]	; 140d0 <dcngettext@plt+0x2e04>
   1408c:	ldr	r0, [r3]
   14090:	ldr	r3, [sp, #48]	; 0x30
   14094:	blx	r3
   14098:	str	r8, [r4]
   1409c:	add	sp, sp, #16
   140a0:	pop	{r4, r5, r6, r7, r8, pc}
   140a4:	mov	r0, r5
   140a8:	ldr	r3, [sp, #48]	; 0x30
   140ac:	blx	r3
   140b0:	str	r8, [r4]
   140b4:	add	sp, sp, #16
   140b8:	pop	{r4, r5, r6, r7, r8, pc}
   140bc:	andeq	sl, r1, ip, lsl #10
   140c0:	muleq	r2, r0, r1
   140c4:	andeq	sl, r1, r0, lsl #15
   140c8:	andeq	sl, r1, r0, asr r7
   140cc:	andeq	fp, r2, ip, lsl #3
   140d0:	andeq	fp, r2, r4, lsr r1
   140d4:	push	{r4, r5, r6, lr}
   140d8:	subs	r4, r0, #0
   140dc:	beq	14150 <dcngettext@plt+0x2e84>
   140e0:	mov	r1, #47	; 0x2f
   140e4:	bl	1123c <strrchr@plt>
   140e8:	subs	r5, r0, #0
   140ec:	beq	1413c <dcngettext@plt+0x2e70>
   140f0:	add	r6, r5, #1
   140f4:	sub	r3, r6, r4
   140f8:	cmp	r3, #6
   140fc:	ble	1413c <dcngettext@plt+0x2e70>
   14100:	mov	r2, #7
   14104:	ldr	r1, [pc, #96]	; 1416c <dcngettext@plt+0x2ea0>
   14108:	sub	r0, r5, #6
   1410c:	bl	112a8 <strncmp@plt>
   14110:	cmp	r0, #0
   14114:	bne	1413c <dcngettext@plt+0x2e70>
   14118:	mov	r2, #3
   1411c:	ldr	r1, [pc, #76]	; 14170 <dcngettext@plt+0x2ea4>
   14120:	mov	r0, r6
   14124:	bl	112a8 <strncmp@plt>
   14128:	cmp	r0, #0
   1412c:	movne	r4, r6
   14130:	ldreq	r3, [pc, #60]	; 14174 <dcngettext@plt+0x2ea8>
   14134:	addeq	r4, r5, #4
   14138:	streq	r4, [r3]
   1413c:	ldr	r2, [pc, #52]	; 14178 <dcngettext@plt+0x2eac>
   14140:	ldr	r3, [pc, #52]	; 1417c <dcngettext@plt+0x2eb0>
   14144:	str	r4, [r2]
   14148:	str	r4, [r3]
   1414c:	pop	{r4, r5, r6, pc}
   14150:	ldr	r3, [pc, #40]	; 14180 <dcngettext@plt+0x2eb4>
   14154:	mov	r2, #55	; 0x37
   14158:	mov	r1, #1
   1415c:	ldr	r3, [r3]
   14160:	ldr	r0, [pc, #28]	; 14184 <dcngettext@plt+0x2eb8>
   14164:	bl	11098 <fwrite@plt>
   14168:	bl	112b4 <abort@plt>
   1416c:	andeq	sl, r1, ip, asr #15
   14170:	ldrdeq	sl, [r1], -r4
   14174:	andeq	fp, r2, r8, ror r1
   14178:	andeq	fp, r2, r4, lsr #3
   1417c:	andeq	fp, r2, ip, ror r1
   14180:	andeq	fp, r2, r8, lsl #3
   14184:	muleq	r1, r4, r7
   14188:	push	{r4, r5, r6, lr}
   1418c:	mov	r4, r0
   14190:	mov	r5, r1
   14194:	bl	19b6c <dcngettext@plt+0x88a0>
   14198:	ldrb	r3, [r0]
   1419c:	bic	r3, r3, #32
   141a0:	cmp	r3, #85	; 0x55
   141a4:	bne	14204 <dcngettext@plt+0x2f38>
   141a8:	ldrb	r3, [r0, #1]
   141ac:	bic	r3, r3, #32
   141b0:	cmp	r3, #84	; 0x54
   141b4:	bne	14240 <dcngettext@plt+0x2f74>
   141b8:	ldrb	r3, [r0, #2]
   141bc:	bic	r3, r3, #32
   141c0:	cmp	r3, #70	; 0x46
   141c4:	bne	14240 <dcngettext@plt+0x2f74>
   141c8:	ldrb	r3, [r0, #3]
   141cc:	cmp	r3, #45	; 0x2d
   141d0:	bne	14240 <dcngettext@plt+0x2f74>
   141d4:	ldrb	r3, [r0, #4]
   141d8:	cmp	r3, #56	; 0x38
   141dc:	bne	14240 <dcngettext@plt+0x2f74>
   141e0:	ldrb	r3, [r0, #5]
   141e4:	cmp	r3, #0
   141e8:	bne	14240 <dcngettext@plt+0x2f74>
   141ec:	ldrb	r2, [r4]
   141f0:	ldr	r3, [pc, #152]	; 14290 <dcngettext@plt+0x2fc4>
   141f4:	ldr	r0, [pc, #152]	; 14294 <dcngettext@plt+0x2fc8>
   141f8:	cmp	r2, #96	; 0x60
   141fc:	movne	r0, r3
   14200:	pop	{r4, r5, r6, pc}
   14204:	cmp	r3, #71	; 0x47
   14208:	bne	14240 <dcngettext@plt+0x2f74>
   1420c:	ldrb	r3, [r0, #1]
   14210:	bic	r3, r3, #32
   14214:	cmp	r3, #66	; 0x42
   14218:	bne	14240 <dcngettext@plt+0x2f74>
   1421c:	ldrb	r3, [r0, #2]
   14220:	cmp	r3, #49	; 0x31
   14224:	bne	14240 <dcngettext@plt+0x2f74>
   14228:	ldrb	r3, [r0, #3]
   1422c:	cmp	r3, #56	; 0x38
   14230:	bne	14240 <dcngettext@plt+0x2f74>
   14234:	ldrb	r3, [r0, #4]
   14238:	cmp	r3, #48	; 0x30
   1423c:	beq	14254 <dcngettext@plt+0x2f88>
   14240:	ldr	r3, [pc, #80]	; 14298 <dcngettext@plt+0x2fcc>
   14244:	cmp	r5, #9
   14248:	ldr	r0, [pc, #76]	; 1429c <dcngettext@plt+0x2fd0>
   1424c:	movne	r0, r3
   14250:	pop	{r4, r5, r6, pc}
   14254:	ldrb	r3, [r0, #5]
   14258:	cmp	r3, #51	; 0x33
   1425c:	bne	14240 <dcngettext@plt+0x2f74>
   14260:	ldrb	r3, [r0, #6]
   14264:	cmp	r3, #48	; 0x30
   14268:	bne	14240 <dcngettext@plt+0x2f74>
   1426c:	ldrb	r3, [r0, #7]
   14270:	cmp	r3, #0
   14274:	bne	14240 <dcngettext@plt+0x2f74>
   14278:	ldrb	r2, [r4]
   1427c:	ldr	r3, [pc, #28]	; 142a0 <dcngettext@plt+0x2fd4>
   14280:	ldr	r0, [pc, #28]	; 142a4 <dcngettext@plt+0x2fd8>
   14284:	cmp	r2, #96	; 0x60
   14288:	movne	r0, r3
   1428c:	pop	{r4, r5, r6, pc}
   14290:	andeq	sl, r1, r0, lsr r8
   14294:	andeq	sl, r1, ip, lsr #16
   14298:	andeq	sl, r1, r0, asr #16
   1429c:	andeq	sl, r1, ip, lsr r8
   142a0:	andeq	sl, r1, r8, lsr r8
   142a4:	andeq	sl, r1, r4, lsr r8
   142a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142ac:	sub	sp, sp, #140	; 0x8c
   142b0:	mov	r9, r1
   142b4:	str	r3, [sp, #24]
   142b8:	mov	r3, #1
   142bc:	mov	sl, r0
   142c0:	str	r2, [sp, #44]	; 0x2c
   142c4:	str	r3, [sp, #28]
   142c8:	bl	110b0 <__ctype_get_mb_cur_max@plt>
   142cc:	ldr	r3, [sp, #180]	; 0xb4
   142d0:	mov	fp, r9
   142d4:	mov	r9, sl
   142d8:	lsr	r3, r3, #1
   142dc:	and	r3, r3, #1
   142e0:	str	r3, [sp, #40]	; 0x28
   142e4:	ldr	r3, [sp, #180]	; 0xb4
   142e8:	mov	r2, #0
   142ec:	and	r3, r3, #4
   142f0:	str	r3, [sp, #100]	; 0x64
   142f4:	ldr	r3, [sp, #180]	; 0xb4
   142f8:	str	r2, [sp, #76]	; 0x4c
   142fc:	and	r3, r3, #1
   14300:	str	r3, [sp, #96]	; 0x60
   14304:	str	r2, [sp, #36]	; 0x24
   14308:	str	r2, [sp, #56]	; 0x38
   1430c:	str	r2, [sp, #68]	; 0x44
   14310:	str	r2, [sp, #72]	; 0x48
   14314:	str	r2, [sp, #84]	; 0x54
   14318:	str	r0, [sp, #80]	; 0x50
   1431c:	ldr	r3, [sp, #176]	; 0xb0
   14320:	cmp	r3, #10
   14324:	ldrls	pc, [pc, r3, lsl #2]
   14328:	b	15500 <dcngettext@plt+0x4234>
   1432c:	andeq	r4, r1, r8, asr r3
   14330:	andeq	r4, r1, r8, ror r6
   14334:	ldrdeq	r4, [r1], -r0
   14338:	andeq	r4, r1, ip, lsr #13
   1433c:	andeq	r4, r1, r4, lsr #16
   14340:	andeq	r4, r1, r4, lsl #16
   14344:	andeq	r4, r1, ip, asr #13
   14348:	strdeq	r4, [r1], -r0
   1434c:	andeq	r4, r1, r8, lsl r7
   14350:	andeq	r4, r1, r8, lsl r7
   14354:	andeq	r4, r1, r8, lsl r7
   14358:	mov	r3, #0
   1435c:	ldr	r1, [sp, #56]	; 0x38
   14360:	ldr	r2, [sp, #176]	; 0xb0
   14364:	ldr	lr, [sp, #176]	; 0xb0
   14368:	mov	r8, r3
   1436c:	mov	ip, r3
   14370:	str	r3, [sp, #40]	; 0x28
   14374:	mov	r3, r1
   14378:	cmp	r2, #2
   1437c:	moveq	r3, #0
   14380:	andne	r3, r3, #1
   14384:	mov	r0, r3
   14388:	str	r3, [sp, #92]	; 0x5c
   1438c:	ldr	r3, [sp, #68]	; 0x44
   14390:	sub	lr, lr, #2
   14394:	adds	r2, r3, #0
   14398:	movne	r2, #1
   1439c:	and	r3, r1, ip
   143a0:	and	r3, r2, r3
   143a4:	clz	lr, lr
   143a8:	str	r3, [sp, #88]	; 0x58
   143ac:	lsr	lr, lr, #5
   143b0:	mov	r3, ip
   143b4:	and	r3, r3, lr
   143b8:	mov	sl, #0
   143bc:	and	r0, r2, r0
   143c0:	str	r3, [sp, #64]	; 0x40
   143c4:	eor	r3, r1, #1
   143c8:	str	lr, [sp, #52]	; 0x34
   143cc:	str	r0, [sp, #48]	; 0x30
   143d0:	str	r3, [sp, #60]	; 0x3c
   143d4:	ldr	r3, [sp, #24]
   143d8:	cmn	r3, #1
   143dc:	beq	1490c <dcngettext@plt+0x3640>
   143e0:	subs	r7, r3, sl
   143e4:	movne	r7, #1
   143e8:	cmp	r7, #0
   143ec:	beq	14924 <dcngettext@plt+0x3658>
   143f0:	ldr	r3, [sp, #48]	; 0x30
   143f4:	cmp	r3, #0
   143f8:	beq	14c90 <dcngettext@plt+0x39c4>
   143fc:	ldr	r2, [sp, #68]	; 0x44
   14400:	ldr	r1, [sp, #24]
   14404:	cmp	r2, #1
   14408:	mov	r3, r2
   1440c:	movls	r3, #0
   14410:	movhi	r3, #1
   14414:	cmn	r1, #1
   14418:	movne	r3, #0
   1441c:	cmp	r3, #0
   14420:	add	r4, sl, r2
   14424:	beq	14434 <dcngettext@plt+0x3168>
   14428:	ldr	r0, [sp, #44]	; 0x2c
   1442c:	bl	1117c <strlen@plt>
   14430:	str	r0, [sp, #24]
   14434:	ldr	r3, [sp, #24]
   14438:	cmp	r3, r4
   1443c:	ldr	r3, [sp, #44]	; 0x2c
   14440:	add	r5, r3, sl
   14444:	bcc	14c98 <dcngettext@plt+0x39cc>
   14448:	mov	r0, r5
   1444c:	ldr	r2, [sp, #68]	; 0x44
   14450:	ldr	r1, [sp, #72]	; 0x48
   14454:	bl	1102c <memcmp@plt>
   14458:	cmp	r0, #0
   1445c:	bne	14c98 <dcngettext@plt+0x39cc>
   14460:	ldr	r3, [sp, #40]	; 0x28
   14464:	cmp	r3, #0
   14468:	bne	15654 <dcngettext@plt+0x4388>
   1446c:	ldrb	r4, [r5]
   14470:	cmp	r4, #126	; 0x7e
   14474:	ldrls	pc, [pc, r4, lsl #2]
   14478:	b	15590 <dcngettext@plt+0x42c4>
   1447c:	andeq	r4, r1, r0, asr fp
   14480:	muleq	r1, r0, r5
   14484:	muleq	r1, r0, r5
   14488:	muleq	r1, r0, r5
   1448c:	muleq	r1, r0, r5
   14490:	muleq	r1, r0, r5
   14494:	muleq	r1, r0, r5
   14498:	andeq	r4, r1, ip, lsr fp
   1449c:	andeq	r4, r1, r8, lsr #22
   144a0:	andeq	r4, r1, r4, lsl #22
   144a4:	andeq	r4, r1, r4, ror #21
   144a8:	andeq	r4, r1, r4, lsl fp
   144ac:	andeq	r4, r1, ip, asr #20
   144b0:	andeq	r4, r1, r0, lsl #25
   144b4:	muleq	r1, r0, r5
   144b8:	muleq	r1, r0, r5
   144bc:	muleq	r1, r0, r5
   144c0:	muleq	r1, r0, r5
   144c4:	muleq	r1, r0, r5
   144c8:	muleq	r1, r0, r5
   144cc:	muleq	r1, r0, r5
   144d0:	muleq	r1, r0, r5
   144d4:	muleq	r1, r0, r5
   144d8:	muleq	r1, r0, r5
   144dc:	muleq	r1, r0, r5
   144e0:	muleq	r1, r0, r5
   144e4:	muleq	r1, r0, r5
   144e8:	muleq	r1, r0, r5
   144ec:	muleq	r1, r0, r5
   144f0:	muleq	r1, r0, r5
   144f4:	muleq	r1, r0, r5
   144f8:	muleq	r1, r0, r5
   144fc:	andeq	r4, r1, r0, ror ip
   14500:	andeq	r4, r1, r0, asr ip
   14504:	andeq	r4, r1, r0, asr ip
   14508:	andeq	r4, r1, r0, lsr ip
   1450c:	andeq	r4, r1, r0, asr ip
   14510:	andeq	r4, r1, ip, lsr sl
   14514:	andeq	r4, r1, r0, asr ip
   14518:	andeq	r4, r1, r8, lsl sl
   1451c:	andeq	r4, r1, r0, asr ip
   14520:	andeq	r4, r1, r0, asr ip
   14524:	andeq	r4, r1, r0, asr ip
   14528:	andeq	r4, r1, ip, lsr sl
   1452c:	andeq	r4, r1, ip, lsr sl
   14530:	andeq	r4, r1, ip, lsr sl
   14534:	andeq	r4, r1, ip, lsr sl
   14538:	andeq	r4, r1, ip, lsr sl
   1453c:	andeq	r4, r1, ip, lsr sl
   14540:	andeq	r4, r1, ip, lsr sl
   14544:	andeq	r4, r1, ip, lsr sl
   14548:	andeq	r4, r1, ip, lsr sl
   1454c:	andeq	r4, r1, ip, lsr sl
   14550:	andeq	r4, r1, ip, lsr sl
   14554:	andeq	r4, r1, ip, lsr sl
   14558:	andeq	r4, r1, ip, lsr sl
   1455c:	andeq	r4, r1, ip, lsr sl
   14560:	andeq	r4, r1, ip, lsr sl
   14564:	andeq	r4, r1, ip, lsr sl
   14568:	andeq	r4, r1, r0, asr ip
   1456c:	andeq	r4, r1, r0, asr ip
   14570:	andeq	r4, r1, r0, asr ip
   14574:	andeq	r4, r1, r0, asr ip
   14578:	andeq	r4, r1, r8, asr #19
   1457c:	muleq	r1, r0, r5
   14580:	andeq	r4, r1, ip, lsr sl
   14584:	andeq	r4, r1, ip, lsr sl
   14588:	andeq	r4, r1, ip, lsr sl
   1458c:	andeq	r4, r1, ip, lsr sl
   14590:	andeq	r4, r1, ip, lsr sl
   14594:	andeq	r4, r1, ip, lsr sl
   14598:	andeq	r4, r1, ip, lsr sl
   1459c:	andeq	r4, r1, ip, lsr sl
   145a0:	andeq	r4, r1, ip, lsr sl
   145a4:	andeq	r4, r1, ip, lsr sl
   145a8:	andeq	r4, r1, ip, lsr sl
   145ac:	andeq	r4, r1, ip, lsr sl
   145b0:	andeq	r4, r1, ip, lsr sl
   145b4:	andeq	r4, r1, ip, lsr sl
   145b8:	andeq	r4, r1, ip, lsr sl
   145bc:	andeq	r4, r1, ip, lsr sl
   145c0:	andeq	r4, r1, ip, lsr sl
   145c4:	andeq	r4, r1, ip, lsr sl
   145c8:	andeq	r4, r1, ip, lsr sl
   145cc:	andeq	r4, r1, ip, lsr sl
   145d0:	andeq	r4, r1, ip, lsr sl
   145d4:	andeq	r4, r1, ip, lsr sl
   145d8:	andeq	r4, r1, ip, lsr sl
   145dc:	andeq	r4, r1, ip, lsr sl
   145e0:	andeq	r4, r1, ip, lsr sl
   145e4:	andeq	r4, r1, ip, lsr sl
   145e8:	andeq	r4, r1, r0, asr ip
   145ec:	muleq	r1, r4, r9
   145f0:	andeq	r4, r1, ip, lsr sl
   145f4:	andeq	r4, r1, r0, asr ip
   145f8:	andeq	r4, r1, ip, lsr sl
   145fc:	andeq	r4, r1, r0, asr ip
   14600:	andeq	r4, r1, ip, lsr sl
   14604:	andeq	r4, r1, ip, lsr sl
   14608:	andeq	r4, r1, ip, lsr sl
   1460c:	andeq	r4, r1, ip, lsr sl
   14610:	andeq	r4, r1, ip, lsr sl
   14614:	andeq	r4, r1, ip, lsr sl
   14618:	andeq	r4, r1, ip, lsr sl
   1461c:	andeq	r4, r1, ip, lsr sl
   14620:	andeq	r4, r1, ip, lsr sl
   14624:	andeq	r4, r1, ip, lsr sl
   14628:	andeq	r4, r1, ip, lsr sl
   1462c:	andeq	r4, r1, ip, lsr sl
   14630:	andeq	r4, r1, ip, lsr sl
   14634:	andeq	r4, r1, ip, lsr sl
   14638:	andeq	r4, r1, ip, lsr sl
   1463c:	andeq	r4, r1, ip, lsr sl
   14640:	andeq	r4, r1, ip, lsr sl
   14644:	andeq	r4, r1, ip, lsr sl
   14648:	andeq	r4, r1, ip, lsr sl
   1464c:	andeq	r4, r1, ip, lsr sl
   14650:	andeq	r4, r1, ip, lsr sl
   14654:	andeq	r4, r1, ip, lsr sl
   14658:	andeq	r4, r1, ip, lsr sl
   1465c:	andeq	r4, r1, ip, lsr sl
   14660:	andeq	r4, r1, ip, lsr sl
   14664:	andeq	r4, r1, ip, lsr sl
   14668:	andeq	r4, r1, ip, asr #16
   1466c:	andeq	r4, r1, r0, asr ip
   14670:	andeq	r4, r1, ip, asr #16
   14674:	andeq	r4, r1, r0, lsr ip
   14678:	mov	r3, #1
   1467c:	str	r3, [sp, #40]	; 0x28
   14680:	str	r3, [sp, #68]	; 0x44
   14684:	mov	r8, #0
   14688:	ldr	r3, [pc, #4056]	; 15668 <dcngettext@plt+0x439c>
   1468c:	str	r3, [sp, #72]	; 0x48
   14690:	mov	r3, #2
   14694:	str	r3, [sp, #176]	; 0xb0
   14698:	ldr	r1, [sp, #56]	; 0x38
   1469c:	mov	r2, r3
   146a0:	ldr	ip, [sp, #40]	; 0x28
   146a4:	mov	lr, r3
   146a8:	b	14374 <dcngettext@plt+0x30a8>
   146ac:	mov	r3, #1
   146b0:	str	r3, [sp, #56]	; 0x38
   146b4:	str	r3, [sp, #68]	; 0x44
   146b8:	str	r3, [sp, #40]	; 0x28
   146bc:	ldr	r3, [pc, #4004]	; 15668 <dcngettext@plt+0x439c>
   146c0:	mov	r8, #0
   146c4:	str	r3, [sp, #72]	; 0x48
   146c8:	b	14690 <dcngettext@plt+0x33c4>
   146cc:	mov	r3, #1
   146d0:	str	r3, [sp, #56]	; 0x38
   146d4:	str	r3, [sp, #68]	; 0x44
   146d8:	str	r3, [sp, #40]	; 0x28
   146dc:	ldr	r3, [pc, #3976]	; 1566c <dcngettext@plt+0x43a0>
   146e0:	mov	r8, #0
   146e4:	str	r3, [sp, #72]	; 0x48
   146e8:	mov	r3, #5
   146ec:	b	14694 <dcngettext@plt+0x33c8>
   146f0:	mov	r3, #0
   146f4:	str	r3, [sp, #40]	; 0x28
   146f8:	mov	r3, #1
   146fc:	str	r3, [sp, #56]	; 0x38
   14700:	mov	r8, #0
   14704:	mov	r1, r3
   14708:	ldr	r2, [sp, #176]	; 0xb0
   1470c:	ldr	ip, [sp, #40]	; 0x28
   14710:	ldr	lr, [sp, #176]	; 0xb0
   14714:	b	14374 <dcngettext@plt+0x30a8>
   14718:	ldr	r3, [sp, #176]	; 0xb0
   1471c:	cmp	r3, #10
   14720:	beq	14764 <dcngettext@plt+0x3498>
   14724:	mov	r2, #5
   14728:	ldr	r1, [pc, #3904]	; 15670 <dcngettext@plt+0x43a4>
   1472c:	mov	r0, #0
   14730:	bl	11044 <dcgettext@plt>
   14734:	ldr	r2, [pc, #3892]	; 15670 <dcngettext@plt+0x43a4>
   14738:	cmp	r0, r2
   1473c:	str	r0, [sp, #188]	; 0xbc
   14740:	beq	157fc <dcngettext@plt+0x4530>
   14744:	mov	r2, #5
   14748:	ldr	r1, [pc, #3864]	; 15668 <dcngettext@plt+0x439c>
   1474c:	mov	r0, #0
   14750:	bl	11044 <dcgettext@plt>
   14754:	ldr	r2, [pc, #3852]	; 15668 <dcngettext@plt+0x439c>
   14758:	cmp	r0, r2
   1475c:	str	r0, [sp, #192]	; 0xc0
   14760:	beq	157ec <dcngettext@plt+0x4520>
   14764:	ldr	r8, [sp, #40]	; 0x28
   14768:	cmp	r8, #0
   1476c:	movne	r8, #0
   14770:	bne	147a0 <dcngettext@plt+0x34d4>
   14774:	ldr	r3, [sp, #188]	; 0xbc
   14778:	ldrb	r3, [r3]
   1477c:	cmp	r3, #0
   14780:	beq	147a0 <dcngettext@plt+0x34d4>
   14784:	ldr	r2, [sp, #188]	; 0xbc
   14788:	cmp	fp, r8
   1478c:	strbhi	r3, [r9, r8]
   14790:	ldrb	r3, [r2, #1]!
   14794:	add	r8, r8, #1
   14798:	cmp	r3, #0
   1479c:	bne	14788 <dcngettext@plt+0x34bc>
   147a0:	ldr	r0, [sp, #192]	; 0xc0
   147a4:	bl	1117c <strlen@plt>
   147a8:	ldr	r3, [sp, #192]	; 0xc0
   147ac:	ldr	r2, [sp, #176]	; 0xb0
   147b0:	str	r3, [sp, #72]	; 0x48
   147b4:	mov	r3, #1
   147b8:	str	r3, [sp, #56]	; 0x38
   147bc:	mov	r1, r3
   147c0:	ldr	ip, [sp, #40]	; 0x28
   147c4:	ldr	lr, [sp, #176]	; 0xb0
   147c8:	str	r0, [sp, #68]	; 0x44
   147cc:	b	14374 <dcngettext@plt+0x30a8>
   147d0:	ldr	r3, [sp, #40]	; 0x28
   147d4:	cmp	r3, #0
   147d8:	beq	15480 <dcngettext@plt+0x41b4>
   147dc:	mov	r3, #1
   147e0:	str	r3, [sp, #68]	; 0x44
   147e4:	ldr	r3, [pc, #3708]	; 15668 <dcngettext@plt+0x439c>
   147e8:	str	r3, [sp, #72]	; 0x48
   147ec:	mov	r8, #0
   147f0:	ldr	r1, [sp, #56]	; 0x38
   147f4:	ldr	r2, [sp, #176]	; 0xb0
   147f8:	ldr	ip, [sp, #40]	; 0x28
   147fc:	ldr	lr, [sp, #176]	; 0xb0
   14800:	b	14374 <dcngettext@plt+0x30a8>
   14804:	ldr	r3, [sp, #40]	; 0x28
   14808:	cmp	r3, #0
   1480c:	beq	15504 <dcngettext@plt+0x4238>
   14810:	str	r3, [sp, #56]	; 0x38
   14814:	mov	r3, #1
   14818:	str	r3, [sp, #68]	; 0x44
   1481c:	ldr	r3, [pc, #3656]	; 1566c <dcngettext@plt+0x43a0>
   14820:	b	147e8 <dcngettext@plt+0x351c>
   14824:	ldr	r3, [sp, #40]	; 0x28
   14828:	cmp	r3, #0
   1482c:	mov	r3, #1
   14830:	streq	r3, [sp, #56]	; 0x38
   14834:	beq	15480 <dcngettext@plt+0x41b4>
   14838:	str	r3, [sp, #68]	; 0x44
   1483c:	ldr	r3, [pc, #3620]	; 15668 <dcngettext@plt+0x439c>
   14840:	mov	r8, #0
   14844:	str	r3, [sp, #72]	; 0x48
   14848:	b	14690 <dcngettext@plt+0x33c4>
   1484c:	ldr	r3, [sp, #24]
   14850:	ldr	r6, [sp, #48]	; 0x30
   14854:	cmn	r3, #1
   14858:	beq	14eb4 <dcngettext@plt+0x3be8>
   1485c:	subs	r3, r3, #1
   14860:	movne	r3, #1
   14864:	cmp	r3, #0
   14868:	beq	14c34 <dcngettext@plt+0x3968>
   1486c:	ldr	r1, [sp, #52]	; 0x34
   14870:	mov	r7, r3
   14874:	mov	r3, #0
   14878:	str	r3, [sp, #32]
   1487c:	ldr	r3, [sp, #60]	; 0x3c
   14880:	orr	r2, r1, r3
   14884:	ldr	r3, [sp, #40]	; 0x28
   14888:	eor	r2, r2, #1
   1488c:	orr	r2, r3, r2
   14890:	tst	r2, #255	; 0xff
   14894:	bne	151b8 <dcngettext@plt+0x3eec>
   14898:	cmp	r6, #0
   1489c:	bne	14a78 <dcngettext@plt+0x37ac>
   148a0:	ldr	r3, [sp, #36]	; 0x24
   148a4:	add	sl, sl, #1
   148a8:	and	r3, r3, r7
   148ac:	uxtb	r6, r3
   148b0:	cmp	r6, #0
   148b4:	beq	148e0 <dcngettext@plt+0x3614>
   148b8:	cmp	fp, r8
   148bc:	movhi	r3, #39	; 0x27
   148c0:	strbhi	r3, [r9, r8]
   148c4:	add	r3, r8, #1
   148c8:	cmp	fp, r3
   148cc:	movhi	r2, #39	; 0x27
   148d0:	add	r8, r8, #2
   148d4:	strbhi	r2, [r9, r3]
   148d8:	mov	r3, #0
   148dc:	str	r3, [sp, #36]	; 0x24
   148e0:	ldr	r2, [sp, #32]
   148e4:	cmp	r8, fp
   148e8:	ldr	r3, [sp, #28]
   148ec:	strbcc	r4, [r9, r8]
   148f0:	cmp	r2, #0
   148f4:	moveq	r3, #0
   148f8:	str	r3, [sp, #28]
   148fc:	ldr	r3, [sp, #24]
   14900:	add	r8, r8, #1
   14904:	cmn	r3, #1
   14908:	bne	143e0 <dcngettext@plt+0x3114>
   1490c:	ldr	r3, [sp, #44]	; 0x2c
   14910:	ldrb	r3, [r3, sl]
   14914:	adds	r7, r3, #0
   14918:	movne	r7, #1
   1491c:	cmp	r7, #0
   14920:	bne	143f0 <dcngettext@plt+0x3124>
   14924:	ldr	r3, [sp, #64]	; 0x40
   14928:	cmp	r8, #0
   1492c:	movne	r3, #0
   14930:	andeq	r3, r3, #1
   14934:	cmp	r3, #0
   14938:	str	r3, [sp, #64]	; 0x40
   1493c:	bne	153e0 <dcngettext@plt+0x4114>
   14940:	ldr	r3, [sp, #40]	; 0x28
   14944:	ldr	r2, [sp, #52]	; 0x34
   14948:	eor	r3, r3, #1
   1494c:	ands	r2, r2, r3
   14950:	beq	1580c <dcngettext@plt+0x4540>
   14954:	ldr	r3, [sp, #76]	; 0x4c
   14958:	cmp	r3, #0
   1495c:	beq	157dc <dcngettext@plt+0x4510>
   14960:	ldr	r3, [sp, #28]
   14964:	cmp	r3, #0
   14968:	bne	15798 <dcngettext@plt+0x44cc>
   1496c:	ldr	r2, [sp, #84]	; 0x54
   14970:	clz	r3, fp
   14974:	cmp	r2, #0
   14978:	lsr	r3, r3, #5
   1497c:	moveq	r3, #0
   14980:	cmp	r3, #0
   14984:	beq	15738 <dcngettext@plt+0x446c>
   14988:	mov	fp, r2
   1498c:	str	r3, [sp, #76]	; 0x4c
   14990:	b	1431c <dcngettext@plt+0x3050>
   14994:	ldr	r3, [sp, #176]	; 0xb0
   14998:	ldr	r6, [sp, #48]	; 0x30
   1499c:	cmp	r3, #2
   149a0:	beq	14ed8 <dcngettext@plt+0x3c0c>
   149a4:	ldr	r3, [sp, #88]	; 0x58
   149a8:	cmp	r3, #0
   149ac:	beq	1545c <dcngettext@plt+0x4190>
   149b0:	mov	r3, #0
   149b4:	add	sl, sl, #1
   149b8:	ldr	r6, [sp, #36]	; 0x24
   149bc:	str	r3, [sp, #32]
   149c0:	mov	r4, #92	; 0x5c
   149c4:	b	148b0 <dcngettext@plt+0x35e4>
   149c8:	ldr	r3, [sp, #176]	; 0xb0
   149cc:	ldr	r6, [sp, #48]	; 0x30
   149d0:	cmp	r3, #2
   149d4:	beq	14f08 <dcngettext@plt+0x3c3c>
   149d8:	cmp	r3, #5
   149dc:	bne	1546c <dcngettext@plt+0x41a0>
   149e0:	ldr	r3, [sp, #100]	; 0x64
   149e4:	cmp	r3, #0
   149e8:	beq	154d0 <dcngettext@plt+0x4204>
   149ec:	ldr	r2, [sp, #24]
   149f0:	add	r3, sl, #2
   149f4:	cmp	r2, r3
   149f8:	bls	14a08 <dcngettext@plt+0x373c>
   149fc:	ldrb	r4, [r5, #1]
   14a00:	cmp	r4, #63	; 0x3f
   14a04:	beq	15678 <dcngettext@plt+0x43ac>
   14a08:	mov	r1, #0
   14a0c:	str	r1, [sp, #32]
   14a10:	mov	r4, #63	; 0x3f
   14a14:	b	1487c <dcngettext@plt+0x35b0>
   14a18:	ldr	r3, [sp, #176]	; 0xb0
   14a1c:	ldr	r6, [sp, #48]	; 0x30
   14a20:	cmp	r3, #2
   14a24:	beq	14f34 <dcngettext@plt+0x3c68>
   14a28:	str	r7, [sp, #32]
   14a2c:	str	r7, [sp, #76]	; 0x4c
   14a30:	mov	r1, #0
   14a34:	mov	r4, #39	; 0x27
   14a38:	b	1487c <dcngettext@plt+0x35b0>
   14a3c:	ldr	r6, [sp, #48]	; 0x30
   14a40:	ldr	r1, [sp, #52]	; 0x34
   14a44:	str	r7, [sp, #32]
   14a48:	b	1487c <dcngettext@plt+0x35b0>
   14a4c:	ldr	r6, [sp, #48]	; 0x30
   14a50:	ldr	r1, [sp, #52]	; 0x34
   14a54:	mov	r4, #12
   14a58:	mov	r3, #102	; 0x66
   14a5c:	ldr	r2, [sp, #56]	; 0x38
   14a60:	cmp	r2, #0
   14a64:	streq	r2, [sp, #32]
   14a68:	beq	1487c <dcngettext@plt+0x35b0>
   14a6c:	mov	r4, r3
   14a70:	mov	r3, #0
   14a74:	str	r3, [sp, #32]
   14a78:	ldr	r3, [sp, #40]	; 0x28
   14a7c:	cmp	r3, #0
   14a80:	bne	151f0 <dcngettext@plt+0x3f24>
   14a84:	ldr	r3, [sp, #36]	; 0x24
   14a88:	eor	r3, r3, #1
   14a8c:	and	r3, r3, r1
   14a90:	ands	r3, r3, #255	; 0xff
   14a94:	beq	14acc <dcngettext@plt+0x3800>
   14a98:	cmp	fp, r8
   14a9c:	movhi	r2, #39	; 0x27
   14aa0:	strbhi	r2, [r9, r8]
   14aa4:	add	r2, r8, #1
   14aa8:	cmp	fp, r2
   14aac:	movhi	r1, #36	; 0x24
   14ab0:	strbhi	r1, [r9, r2]
   14ab4:	add	r2, r8, #2
   14ab8:	cmp	fp, r2
   14abc:	add	r8, r8, #3
   14ac0:	movhi	r1, #39	; 0x27
   14ac4:	strbhi	r1, [r9, r2]
   14ac8:	str	r3, [sp, #36]	; 0x24
   14acc:	cmp	fp, r8
   14ad0:	movhi	r3, #92	; 0x5c
   14ad4:	strbhi	r3, [r9, r8]
   14ad8:	add	sl, sl, #1
   14adc:	add	r8, r8, #1
   14ae0:	b	148e0 <dcngettext@plt+0x3614>
   14ae4:	ldr	r6, [sp, #48]	; 0x30
   14ae8:	mov	r4, #10
   14aec:	mov	r3, #110	; 0x6e
   14af0:	ldr	r2, [sp, #64]	; 0x40
   14af4:	cmp	r2, #0
   14af8:	bne	15578 <dcngettext@plt+0x42ac>
   14afc:	ldr	r1, [sp, #52]	; 0x34
   14b00:	b	14a5c <dcngettext@plt+0x3790>
   14b04:	ldr	r6, [sp, #48]	; 0x30
   14b08:	ldr	r1, [sp, #52]	; 0x34
   14b0c:	mov	r3, #116	; 0x74
   14b10:	b	14a5c <dcngettext@plt+0x3790>
   14b14:	ldr	r6, [sp, #48]	; 0x30
   14b18:	ldr	r1, [sp, #52]	; 0x34
   14b1c:	mov	r4, #11
   14b20:	mov	r3, #118	; 0x76
   14b24:	b	14a5c <dcngettext@plt+0x3790>
   14b28:	ldr	r6, [sp, #48]	; 0x30
   14b2c:	ldr	r1, [sp, #52]	; 0x34
   14b30:	mov	r4, #8
   14b34:	mov	r3, #98	; 0x62
   14b38:	b	14a5c <dcngettext@plt+0x3790>
   14b3c:	ldr	r6, [sp, #48]	; 0x30
   14b40:	ldr	r1, [sp, #52]	; 0x34
   14b44:	mov	r4, #7
   14b48:	mov	r3, #97	; 0x61
   14b4c:	b	14a5c <dcngettext@plt+0x3790>
   14b50:	ldr	r3, [sp, #56]	; 0x38
   14b54:	ldr	r6, [sp, #48]	; 0x30
   14b58:	cmp	r3, #0
   14b5c:	beq	15020 <dcngettext@plt+0x3d54>
   14b60:	ldr	r3, [sp, #40]	; 0x28
   14b64:	cmp	r3, #0
   14b68:	bne	15654 <dcngettext@plt+0x4388>
   14b6c:	ldr	r3, [sp, #36]	; 0x24
   14b70:	ldr	r2, [sp, #52]	; 0x34
   14b74:	eor	r3, r3, #1
   14b78:	ands	r3, r2, r3
   14b7c:	moveq	r2, r8
   14b80:	beq	14bb8 <dcngettext@plt+0x38ec>
   14b84:	cmp	fp, r8
   14b88:	movhi	r2, #39	; 0x27
   14b8c:	strbhi	r2, [r9, r8]
   14b90:	add	r2, r8, #1
   14b94:	cmp	fp, r2
   14b98:	movhi	r1, #36	; 0x24
   14b9c:	strbhi	r1, [r9, r2]
   14ba0:	add	r2, r8, #2
   14ba4:	cmp	fp, r2
   14ba8:	movhi	r1, #39	; 0x27
   14bac:	strbhi	r1, [r9, r2]
   14bb0:	add	r2, r8, #3
   14bb4:	str	r3, [sp, #36]	; 0x24
   14bb8:	cmp	fp, r2
   14bbc:	movhi	r3, #92	; 0x5c
   14bc0:	strbhi	r3, [r9, r2]
   14bc4:	ldr	r3, [sp, #92]	; 0x5c
   14bc8:	add	r8, r2, #1
   14bcc:	cmp	r3, #0
   14bd0:	beq	15554 <dcngettext@plt+0x4288>
   14bd4:	ldr	r1, [sp, #24]
   14bd8:	add	r3, sl, #1
   14bdc:	cmp	r1, r3
   14be0:	bls	14c18 <dcngettext@plt+0x394c>
   14be4:	ldr	r1, [sp, #44]	; 0x2c
   14be8:	ldrb	r3, [r1, r3]
   14bec:	sub	r3, r3, #48	; 0x30
   14bf0:	cmp	r3, #9
   14bf4:	bhi	14c18 <dcngettext@plt+0x394c>
   14bf8:	cmp	fp, r8
   14bfc:	movhi	r3, #48	; 0x30
   14c00:	strbhi	r3, [r9, r8]
   14c04:	add	r3, r2, #2
   14c08:	cmp	fp, r3
   14c0c:	add	r8, r2, #3
   14c10:	movhi	r1, #48	; 0x30
   14c14:	strbhi	r1, [r9, r3]
   14c18:	ldr	r3, [sp, #40]	; 0x28
   14c1c:	ldr	r1, [sp, #52]	; 0x34
   14c20:	mov	r7, r3
   14c24:	str	r3, [sp, #32]
   14c28:	mov	r4, #48	; 0x30
   14c2c:	b	1487c <dcngettext@plt+0x35b0>
   14c30:	ldr	r6, [sp, #48]	; 0x30
   14c34:	cmp	sl, #0
   14c38:	streq	r7, [sp, #32]
   14c3c:	beq	14c5c <dcngettext@plt+0x3990>
   14c40:	mov	r3, #0
   14c44:	ldr	r1, [sp, #52]	; 0x34
   14c48:	str	r3, [sp, #32]
   14c4c:	b	1487c <dcngettext@plt+0x35b0>
   14c50:	ldr	r6, [sp, #48]	; 0x30
   14c54:	mov	r3, #0
   14c58:	str	r3, [sp, #32]
   14c5c:	ldr	r3, [sp, #64]	; 0x40
   14c60:	cmp	r3, #0
   14c64:	bne	153e0 <dcngettext@plt+0x4114>
   14c68:	ldr	r1, [sp, #52]	; 0x34
   14c6c:	b	1487c <dcngettext@plt+0x35b0>
   14c70:	ldr	r3, [sp, #48]	; 0x30
   14c74:	mov	r6, r3
   14c78:	str	r3, [sp, #32]
   14c7c:	b	14c5c <dcngettext@plt+0x3990>
   14c80:	ldr	r6, [sp, #48]	; 0x30
   14c84:	mov	r4, #13
   14c88:	mov	r3, #114	; 0x72
   14c8c:	b	14af0 <dcngettext@plt+0x3824>
   14c90:	ldr	r3, [sp, #44]	; 0x2c
   14c94:	add	r5, r3, sl
   14c98:	ldrb	r4, [r5]
   14c9c:	cmp	r4, #126	; 0x7e
   14ca0:	ldrls	pc, [pc, r4, lsl #2]
   14ca4:	b	15040 <dcngettext@plt+0x3d74>
   14ca8:	andeq	r5, r1, r0, lsl r0
   14cac:	andeq	r5, r1, r0, asr #32
   14cb0:	andeq	r5, r1, r0, asr #32
   14cb4:	andeq	r5, r1, r0, asr #32
   14cb8:	andeq	r5, r1, r0, asr #32
   14cbc:	andeq	r5, r1, r0, asr #32
   14cc0:	andeq	r5, r1, r0, asr #32
   14cc4:	andeq	r5, r1, r8
   14cc8:	andeq	r5, r1, r0
   14ccc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14cd0:	andeq	r4, r1, ip, ror #31
   14cd4:	andeq	r4, r1, r4, ror #31
   14cd8:	ldrdeq	r4, [r1], -ip
   14cdc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ce0:	andeq	r5, r1, r0, asr #32
   14ce4:	andeq	r5, r1, r0, asr #32
   14ce8:	andeq	r5, r1, r0, asr #32
   14cec:	andeq	r5, r1, r0, asr #32
   14cf0:	andeq	r5, r1, r0, asr #32
   14cf4:	andeq	r5, r1, r0, asr #32
   14cf8:	andeq	r5, r1, r0, asr #32
   14cfc:	andeq	r5, r1, r0, asr #32
   14d00:	andeq	r5, r1, r0, asr #32
   14d04:	andeq	r5, r1, r0, asr #32
   14d08:	andeq	r5, r1, r0, asr #32
   14d0c:	andeq	r5, r1, r0, asr #32
   14d10:	andeq	r5, r1, r0, asr #32
   14d14:	andeq	r5, r1, r0, asr #32
   14d18:	andeq	r5, r1, r0, asr #32
   14d1c:	andeq	r5, r1, r0, asr #32
   14d20:	andeq	r5, r1, r0, asr #32
   14d24:	andeq	r5, r1, r0, asr #32
   14d28:	andeq	r4, r1, r8, asr #31
   14d2c:	andeq	r4, r1, r0, asr #31
   14d30:	andeq	r4, r1, r0, asr #31
   14d34:			; <UNDEFINED> instruction: 0x00014fb8
   14d38:	andeq	r4, r1, r0, asr #31
   14d3c:			; <UNDEFINED> instruction: 0x00014fb0
   14d40:	andeq	r4, r1, r0, asr #31
   14d44:	andeq	r4, r1, r4, lsr #30
   14d48:	andeq	r4, r1, r0, asr #31
   14d4c:	andeq	r4, r1, r0, asr #31
   14d50:	andeq	r4, r1, r0, asr #31
   14d54:			; <UNDEFINED> instruction: 0x00014fb0
   14d58:			; <UNDEFINED> instruction: 0x00014fb0
   14d5c:			; <UNDEFINED> instruction: 0x00014fb0
   14d60:			; <UNDEFINED> instruction: 0x00014fb0
   14d64:			; <UNDEFINED> instruction: 0x00014fb0
   14d68:			; <UNDEFINED> instruction: 0x00014fb0
   14d6c:			; <UNDEFINED> instruction: 0x00014fb0
   14d70:			; <UNDEFINED> instruction: 0x00014fb0
   14d74:			; <UNDEFINED> instruction: 0x00014fb0
   14d78:			; <UNDEFINED> instruction: 0x00014fb0
   14d7c:			; <UNDEFINED> instruction: 0x00014fb0
   14d80:			; <UNDEFINED> instruction: 0x00014fb0
   14d84:			; <UNDEFINED> instruction: 0x00014fb0
   14d88:			; <UNDEFINED> instruction: 0x00014fb0
   14d8c:			; <UNDEFINED> instruction: 0x00014fb0
   14d90:			; <UNDEFINED> instruction: 0x00014fb0
   14d94:	andeq	r4, r1, r0, asr #31
   14d98:	andeq	r4, r1, r0, asr #31
   14d9c:	andeq	r4, r1, r0, asr #31
   14da0:	andeq	r4, r1, r0, asr #31
   14da4:	strdeq	r4, [r1], -r8
   14da8:	andeq	r5, r1, r0, asr #32
   14dac:			; <UNDEFINED> instruction: 0x00014fb0
   14db0:			; <UNDEFINED> instruction: 0x00014fb0
   14db4:			; <UNDEFINED> instruction: 0x00014fb0
   14db8:			; <UNDEFINED> instruction: 0x00014fb0
   14dbc:			; <UNDEFINED> instruction: 0x00014fb0
   14dc0:			; <UNDEFINED> instruction: 0x00014fb0
   14dc4:			; <UNDEFINED> instruction: 0x00014fb0
   14dc8:			; <UNDEFINED> instruction: 0x00014fb0
   14dcc:			; <UNDEFINED> instruction: 0x00014fb0
   14dd0:			; <UNDEFINED> instruction: 0x00014fb0
   14dd4:			; <UNDEFINED> instruction: 0x00014fb0
   14dd8:			; <UNDEFINED> instruction: 0x00014fb0
   14ddc:			; <UNDEFINED> instruction: 0x00014fb0
   14de0:			; <UNDEFINED> instruction: 0x00014fb0
   14de4:			; <UNDEFINED> instruction: 0x00014fb0
   14de8:			; <UNDEFINED> instruction: 0x00014fb0
   14dec:			; <UNDEFINED> instruction: 0x00014fb0
   14df0:			; <UNDEFINED> instruction: 0x00014fb0
   14df4:			; <UNDEFINED> instruction: 0x00014fb0
   14df8:			; <UNDEFINED> instruction: 0x00014fb0
   14dfc:			; <UNDEFINED> instruction: 0x00014fb0
   14e00:			; <UNDEFINED> instruction: 0x00014fb0
   14e04:			; <UNDEFINED> instruction: 0x00014fb0
   14e08:			; <UNDEFINED> instruction: 0x00014fb0
   14e0c:			; <UNDEFINED> instruction: 0x00014fb0
   14e10:			; <UNDEFINED> instruction: 0x00014fb0
   14e14:	andeq	r4, r1, r0, asr #31
   14e18:	andeq	r4, r1, r8, asr #29
   14e1c:			; <UNDEFINED> instruction: 0x00014fb0
   14e20:	andeq	r4, r1, r0, asr #31
   14e24:			; <UNDEFINED> instruction: 0x00014fb0
   14e28:	andeq	r4, r1, r0, asr #31
   14e2c:			; <UNDEFINED> instruction: 0x00014fb0
   14e30:			; <UNDEFINED> instruction: 0x00014fb0
   14e34:			; <UNDEFINED> instruction: 0x00014fb0
   14e38:			; <UNDEFINED> instruction: 0x00014fb0
   14e3c:			; <UNDEFINED> instruction: 0x00014fb0
   14e40:			; <UNDEFINED> instruction: 0x00014fb0
   14e44:			; <UNDEFINED> instruction: 0x00014fb0
   14e48:			; <UNDEFINED> instruction: 0x00014fb0
   14e4c:			; <UNDEFINED> instruction: 0x00014fb0
   14e50:			; <UNDEFINED> instruction: 0x00014fb0
   14e54:			; <UNDEFINED> instruction: 0x00014fb0
   14e58:			; <UNDEFINED> instruction: 0x00014fb0
   14e5c:			; <UNDEFINED> instruction: 0x00014fb0
   14e60:			; <UNDEFINED> instruction: 0x00014fb0
   14e64:			; <UNDEFINED> instruction: 0x00014fb0
   14e68:			; <UNDEFINED> instruction: 0x00014fb0
   14e6c:			; <UNDEFINED> instruction: 0x00014fb0
   14e70:			; <UNDEFINED> instruction: 0x00014fb0
   14e74:			; <UNDEFINED> instruction: 0x00014fb0
   14e78:			; <UNDEFINED> instruction: 0x00014fb0
   14e7c:			; <UNDEFINED> instruction: 0x00014fb0
   14e80:			; <UNDEFINED> instruction: 0x00014fb0
   14e84:			; <UNDEFINED> instruction: 0x00014fb0
   14e88:			; <UNDEFINED> instruction: 0x00014fb0
   14e8c:			; <UNDEFINED> instruction: 0x00014fb0
   14e90:			; <UNDEFINED> instruction: 0x00014fb0
   14e94:	andeq	r4, r1, r4, lsr #29
   14e98:	andeq	r4, r1, r0, asr #31
   14e9c:	andeq	r4, r1, r4, lsr #29
   14ea0:			; <UNDEFINED> instruction: 0x00014fb8
   14ea4:	ldr	r3, [sp, #24]
   14ea8:	mov	r6, #0
   14eac:	cmn	r3, #1
   14eb0:	bne	1485c <dcngettext@plt+0x3590>
   14eb4:	ldr	r3, [sp, #44]	; 0x2c
   14eb8:	ldrb	r3, [r3, #1]
   14ebc:	adds	r3, r3, #0
   14ec0:	movne	r3, #1
   14ec4:	b	14864 <dcngettext@plt+0x3598>
   14ec8:	ldr	r3, [sp, #176]	; 0xb0
   14ecc:	mov	r6, #0
   14ed0:	cmp	r3, #2
   14ed4:	bne	149a4 <dcngettext@plt+0x36d8>
   14ed8:	ldr	r3, [sp, #64]	; 0x40
   14edc:	cmp	r3, #0
   14ee0:	bne	15718 <dcngettext@plt+0x444c>
   14ee4:	add	sl, sl, #1
   14ee8:	ldr	r6, [sp, #36]	; 0x24
   14eec:	str	r3, [sp, #32]
   14ef0:	mov	r4, #92	; 0x5c
   14ef4:	b	148b0 <dcngettext@plt+0x35e4>
   14ef8:	ldr	r3, [sp, #176]	; 0xb0
   14efc:	mov	r6, #0
   14f00:	cmp	r3, #2
   14f04:	bne	149d8 <dcngettext@plt+0x370c>
   14f08:	ldr	r3, [sp, #40]	; 0x28
   14f0c:	cmp	r3, #0
   14f10:	bne	151f4 <dcngettext@plt+0x3f28>
   14f14:	mov	r1, r7
   14f18:	str	r3, [sp, #32]
   14f1c:	mov	r4, #63	; 0x3f
   14f20:	b	1487c <dcngettext@plt+0x35b0>
   14f24:	ldr	r3, [sp, #176]	; 0xb0
   14f28:	mov	r6, #0
   14f2c:	cmp	r3, #2
   14f30:	bne	14a28 <dcngettext@plt+0x375c>
   14f34:	ldr	r3, [sp, #64]	; 0x40
   14f38:	cmp	r3, #0
   14f3c:	bne	15718 <dcngettext@plt+0x444c>
   14f40:	ldr	r2, [sp, #84]	; 0x54
   14f44:	adds	r3, fp, #0
   14f48:	movne	r3, #1
   14f4c:	cmp	r2, #0
   14f50:	movne	r3, #0
   14f54:	cmp	r3, #0
   14f58:	strne	fp, [sp, #84]	; 0x54
   14f5c:	movne	fp, #0
   14f60:	bne	14f90 <dcngettext@plt+0x3cc4>
   14f64:	cmp	fp, r8
   14f68:	movhi	r3, #39	; 0x27
   14f6c:	strbhi	r3, [r9, r8]
   14f70:	add	r3, r8, #1
   14f74:	cmp	fp, r3
   14f78:	movhi	r2, #92	; 0x5c
   14f7c:	strbhi	r2, [r9, r3]
   14f80:	add	r3, r8, #2
   14f84:	cmp	fp, r3
   14f88:	movhi	r2, #39	; 0x27
   14f8c:	strbhi	r2, [r9, r3]
   14f90:	ldr	r3, [sp, #64]	; 0x40
   14f94:	add	r8, r8, #3
   14f98:	mov	r1, r7
   14f9c:	str	r7, [sp, #32]
   14fa0:	str	r7, [sp, #76]	; 0x4c
   14fa4:	str	r3, [sp, #36]	; 0x24
   14fa8:	mov	r4, #39	; 0x27
   14fac:	b	1487c <dcngettext@plt+0x35b0>
   14fb0:	mov	r6, #0
   14fb4:	b	14a40 <dcngettext@plt+0x3774>
   14fb8:	mov	r6, #0
   14fbc:	b	14c34 <dcngettext@plt+0x3968>
   14fc0:	mov	r6, #0
   14fc4:	b	14c54 <dcngettext@plt+0x3988>
   14fc8:	str	r7, [sp, #32]
   14fcc:	mov	r6, #0
   14fd0:	b	14c5c <dcngettext@plt+0x3990>
   14fd4:	mov	r6, #0
   14fd8:	b	14c84 <dcngettext@plt+0x39b8>
   14fdc:	mov	r6, #0
   14fe0:	b	14a50 <dcngettext@plt+0x3784>
   14fe4:	mov	r6, #0
   14fe8:	b	14b18 <dcngettext@plt+0x384c>
   14fec:	mov	r6, #0
   14ff0:	b	14ae8 <dcngettext@plt+0x381c>
   14ff4:	mov	r6, #0
   14ff8:	mov	r3, #116	; 0x74
   14ffc:	b	14af0 <dcngettext@plt+0x3824>
   15000:	mov	r6, #0
   15004:	b	14b2c <dcngettext@plt+0x3860>
   15008:	mov	r6, #0
   1500c:	b	14b40 <dcngettext@plt+0x3874>
   15010:	ldr	r3, [sp, #56]	; 0x38
   15014:	mov	r6, #0
   15018:	cmp	r3, #0
   1501c:	bne	14b60 <dcngettext@plt+0x3894>
   15020:	ldr	r3, [sp, #96]	; 0x60
   15024:	cmp	r3, #0
   15028:	addne	sl, sl, #1
   1502c:	bne	143d4 <dcngettext@plt+0x3108>
   15030:	ldr	r1, [sp, #52]	; 0x34
   15034:	str	r3, [sp, #32]
   15038:	mov	r4, r3
   1503c:	b	1487c <dcngettext@plt+0x35b0>
   15040:	mov	r6, #0
   15044:	ldr	r3, [sp, #80]	; 0x50
   15048:	cmp	r3, #1
   1504c:	bne	1523c <dcngettext@plt+0x3f70>
   15050:	bl	11164 <__ctype_b_loc@plt>
   15054:	ldr	r2, [sp, #80]	; 0x50
   15058:	sxth	r3, r4
   1505c:	mov	r1, r2
   15060:	lsl	r3, r3, #1
   15064:	ldr	r2, [r0]
   15068:	ldrh	r3, [r2, r3]
   1506c:	and	r3, r3, #16384	; 0x4000
   15070:	cmp	r3, #0
   15074:	movne	r3, #1
   15078:	moveq	r3, #0
   1507c:	str	r3, [sp, #32]
   15080:	moveq	r3, #1
   15084:	movne	r3, #0
   15088:	ldr	r2, [sp, #56]	; 0x38
   1508c:	and	r3, r3, r2
   15090:	ands	r3, r3, #255	; 0xff
   15094:	beq	14c68 <dcngettext@plt+0x399c>
   15098:	add	r1, sl, r1
   1509c:	mov	r0, #0
   150a0:	ldr	r7, [sp, #40]	; 0x28
   150a4:	ldr	r2, [sp, #36]	; 0x24
   150a8:	ldr	lr, [sp, #52]	; 0x34
   150ac:	b	1515c <dcngettext@plt+0x3e90>
   150b0:	cmp	r7, #0
   150b4:	bne	154b0 <dcngettext@plt+0x41e4>
   150b8:	eor	r0, r2, #1
   150bc:	ands	r0, lr, r0
   150c0:	beq	150f8 <dcngettext@plt+0x3e2c>
   150c4:	cmp	fp, r8
   150c8:	movhi	r2, #39	; 0x27
   150cc:	strbhi	r2, [r9, r8]
   150d0:	add	r2, r8, #1
   150d4:	cmp	fp, r2
   150d8:	movhi	ip, #36	; 0x24
   150dc:	strbhi	ip, [r9, r2]
   150e0:	add	r2, r8, #2
   150e4:	cmp	fp, r2
   150e8:	movhi	ip, #39	; 0x27
   150ec:	strbhi	ip, [r9, r2]
   150f0:	add	r8, r8, #3
   150f4:	mov	r2, r0
   150f8:	cmp	fp, r8
   150fc:	movhi	r0, #92	; 0x5c
   15100:	strbhi	r0, [r9, r8]
   15104:	add	r0, r8, #1
   15108:	cmp	fp, r0
   1510c:	lsrhi	ip, r4, #6
   15110:	addhi	ip, ip, #48	; 0x30
   15114:	strbhi	ip, [r9, r0]
   15118:	add	ip, r8, #2
   1511c:	cmp	fp, ip
   15120:	lsrhi	r0, r4, #3
   15124:	andhi	r0, r0, #7
   15128:	addhi	r0, r0, #48	; 0x30
   1512c:	add	sl, sl, #1
   15130:	strbhi	r0, [r9, ip]
   15134:	and	r4, r4, #7
   15138:	cmp	sl, r1
   1513c:	add	r4, r4, #48	; 0x30
   15140:	add	r8, r8, #3
   15144:	bcs	154c8 <dcngettext@plt+0x41fc>
   15148:	mov	r0, r3
   1514c:	cmp	fp, r8
   15150:	strbhi	r4, [r9, r8]
   15154:	ldrb	r4, [r5, #1]!
   15158:	add	r8, r8, #1
   1515c:	cmp	r3, #0
   15160:	bne	150b0 <dcngettext@plt+0x3de4>
   15164:	cmp	r6, #0
   15168:	bne	1520c <dcngettext@plt+0x3f40>
   1516c:	eor	r6, r0, #1
   15170:	and	r6, r6, r2
   15174:	add	sl, sl, #1
   15178:	cmp	r1, sl
   1517c:	uxtb	r6, r6
   15180:	bls	15234 <dcngettext@plt+0x3f68>
   15184:	cmp	r6, #0
   15188:	beq	1514c <dcngettext@plt+0x3e80>
   1518c:	cmp	fp, r8
   15190:	movhi	r2, #39	; 0x27
   15194:	strbhi	r2, [r9, r8]
   15198:	add	r2, r8, #1
   1519c:	cmp	fp, r2
   151a0:	movhi	ip, #39	; 0x27
   151a4:	strbhi	ip, [r9, r2]
   151a8:	add	r8, r8, #2
   151ac:	mov	r6, r3
   151b0:	mov	r2, r3
   151b4:	b	1514c <dcngettext@plt+0x3e80>
   151b8:	ldr	r3, [sp, #184]	; 0xb8
   151bc:	cmp	r3, #0
   151c0:	beq	14898 <dcngettext@plt+0x35cc>
   151c4:	lsr	r2, r4, #5
   151c8:	mov	r0, r3
   151cc:	uxtb	r2, r2
   151d0:	and	r3, r4, #31
   151d4:	ldr	r2, [r0, r2, lsl #2]
   151d8:	lsr	r3, r2, r3
   151dc:	tst	r3, #1
   151e0:	beq	14898 <dcngettext@plt+0x35cc>
   151e4:	ldr	r3, [sp, #40]	; 0x28
   151e8:	cmp	r3, #0
   151ec:	beq	14a84 <dcngettext@plt+0x37b8>
   151f0:	mov	r3, r1
   151f4:	str	r3, [sp, #64]	; 0x40
   151f8:	mov	sl, r9
   151fc:	ldr	r3, [sp, #56]	; 0x38
   15200:	mov	r9, fp
   15204:	ldr	r2, [sp, #64]	; 0x40
   15208:	b	153f8 <dcngettext@plt+0x412c>
   1520c:	cmp	fp, r8
   15210:	eor	r6, r0, #1
   15214:	movhi	ip, #92	; 0x5c
   15218:	and	r6, r6, r2
   1521c:	add	sl, sl, #1
   15220:	strbhi	ip, [r9, r8]
   15224:	cmp	r1, sl
   15228:	add	r8, r8, #1
   1522c:	uxtb	r6, r6
   15230:	bhi	15184 <dcngettext@plt+0x3eb8>
   15234:	str	r2, [sp, #36]	; 0x24
   15238:	b	148b0 <dcngettext@plt+0x35e4>
   1523c:	ldr	r3, [sp, #24]
   15240:	cmn	r3, #1
   15244:	mov	r3, #0
   15248:	str	r3, [sp, #128]	; 0x80
   1524c:	str	r3, [sp, #132]	; 0x84
   15250:	beq	15544 <dcngettext@plt+0x4278>
   15254:	mov	r2, r7
   15258:	mov	r3, #0
   1525c:	str	r7, [sp, #104]	; 0x68
   15260:	str	r5, [sp, #116]	; 0x74
   15264:	mov	r7, r3
   15268:	mov	r5, r2
   1526c:	str	r4, [sp, #32]
   15270:	str	r6, [sp, #108]	; 0x6c
   15274:	str	r8, [sp, #112]	; 0x70
   15278:	ldr	r3, [sp, #44]	; 0x2c
   1527c:	add	r6, sl, r7
   15280:	add	r4, r3, r6
   15284:	ldr	r3, [sp, #24]
   15288:	mov	r1, r4
   1528c:	sub	r2, r3, r6
   15290:	add	r0, sp, #124	; 0x7c
   15294:	add	r3, sp, #128	; 0x80
   15298:	bl	19ba0 <dcngettext@plt+0x88d4>
   1529c:	subs	r8, r0, #0
   152a0:	beq	15628 <dcngettext@plt+0x435c>
   152a4:	cmn	r8, #1
   152a8:	beq	15600 <dcngettext@plt+0x4334>
   152ac:	cmn	r8, #2
   152b0:	beq	15598 <dcngettext@plt+0x42cc>
   152b4:	ldr	r3, [sp, #64]	; 0x40
   152b8:	cmp	r3, #0
   152bc:	beq	1537c <dcngettext@plt+0x40b0>
   152c0:	cmp	r8, #1
   152c4:	beq	1537c <dcngettext@plt+0x40b0>
   152c8:	sub	r3, r8, #1
   152cc:	add	r6, r3, r6
   152d0:	ldr	r3, [sp, #44]	; 0x2c
   152d4:	add	r6, r3, r6
   152d8:	ldrb	r3, [r4, #1]!
   152dc:	sub	r3, r3, #91	; 0x5b
   152e0:	cmp	r3, #33	; 0x21
   152e4:	ldrls	pc, [pc, r3, lsl #2]
   152e8:	b	15374 <dcngettext@plt+0x40a8>
   152ec:	andeq	r5, r1, r0, ror #7
   152f0:	andeq	r5, r1, r0, ror #7
   152f4:	andeq	r5, r1, r4, ror r3
   152f8:	andeq	r5, r1, r0, ror #7
   152fc:	andeq	r5, r1, r4, ror r3
   15300:	andeq	r5, r1, r0, ror #7
   15304:	andeq	r5, r1, r4, ror r3
   15308:	andeq	r5, r1, r4, ror r3
   1530c:	andeq	r5, r1, r4, ror r3
   15310:	andeq	r5, r1, r4, ror r3
   15314:	andeq	r5, r1, r4, ror r3
   15318:	andeq	r5, r1, r4, ror r3
   1531c:	andeq	r5, r1, r4, ror r3
   15320:	andeq	r5, r1, r4, ror r3
   15324:	andeq	r5, r1, r4, ror r3
   15328:	andeq	r5, r1, r4, ror r3
   1532c:	andeq	r5, r1, r4, ror r3
   15330:	andeq	r5, r1, r4, ror r3
   15334:	andeq	r5, r1, r4, ror r3
   15338:	andeq	r5, r1, r4, ror r3
   1533c:	andeq	r5, r1, r4, ror r3
   15340:	andeq	r5, r1, r4, ror r3
   15344:	andeq	r5, r1, r4, ror r3
   15348:	andeq	r5, r1, r4, ror r3
   1534c:	andeq	r5, r1, r4, ror r3
   15350:	andeq	r5, r1, r4, ror r3
   15354:	andeq	r5, r1, r4, ror r3
   15358:	andeq	r5, r1, r4, ror r3
   1535c:	andeq	r5, r1, r4, ror r3
   15360:	andeq	r5, r1, r4, ror r3
   15364:	andeq	r5, r1, r4, ror r3
   15368:	andeq	r5, r1, r4, ror r3
   1536c:	andeq	r5, r1, r4, ror r3
   15370:	andeq	r5, r1, r0, ror #7
   15374:	cmp	r6, r4
   15378:	bne	152d8 <dcngettext@plt+0x400c>
   1537c:	ldr	r0, [sp, #124]	; 0x7c
   15380:	bl	11080 <iswprint@plt>
   15384:	add	r7, r7, r8
   15388:	cmp	r0, #0
   1538c:	add	r0, sp, #128	; 0x80
   15390:	moveq	r5, #0
   15394:	bl	11014 <mbsinit@plt>
   15398:	cmp	r0, #0
   1539c:	beq	15278 <dcngettext@plt+0x3fac>
   153a0:	ldr	r4, [sp, #32]
   153a4:	str	r5, [sp, #32]
   153a8:	ldr	r3, [sp, #32]
   153ac:	mov	r1, r7
   153b0:	eor	r3, r3, #1
   153b4:	ldr	r7, [sp, #104]	; 0x68
   153b8:	ldr	r6, [sp, #108]	; 0x6c
   153bc:	ldr	r8, [sp, #112]	; 0x70
   153c0:	ldr	r5, [sp, #116]	; 0x74
   153c4:	uxtb	r3, r3
   153c8:	cmp	r1, #1
   153cc:	bls	15088 <dcngettext@plt+0x3dbc>
   153d0:	ldr	r2, [sp, #56]	; 0x38
   153d4:	and	r3, r3, r2
   153d8:	uxtb	r3, r3
   153dc:	b	15098 <dcngettext@plt+0x3dcc>
   153e0:	mov	r3, #2
   153e4:	str	r3, [sp, #176]	; 0xb0
   153e8:	ldr	r2, [sp, #64]	; 0x40
   153ec:	ldr	r3, [sp, #56]	; 0x38
   153f0:	mov	sl, r9
   153f4:	mov	r9, fp
   153f8:	and	r3, r3, r2
   153fc:	tst	r3, #255	; 0xff
   15400:	ldr	r3, [sp, #176]	; 0xb0
   15404:	movne	r3, #4
   15408:	str	r3, [sp, #176]	; 0xb0
   1540c:	ldr	r3, [sp, #180]	; 0xb4
   15410:	mov	ip, #0
   15414:	bic	r3, r3, #2
   15418:	str	r3, [sp, #4]
   1541c:	ldr	r3, [sp, #192]	; 0xc0
   15420:	ldr	r2, [sp, #44]	; 0x2c
   15424:	str	r3, [sp, #16]
   15428:	ldr	r3, [sp, #188]	; 0xbc
   1542c:	mov	r1, r9
   15430:	str	r3, [sp, #12]
   15434:	ldr	r3, [sp, #176]	; 0xb0
   15438:	mov	r0, sl
   1543c:	str	r3, [sp]
   15440:	str	ip, [sp, #8]
   15444:	ldr	r3, [sp, #24]
   15448:	bl	142a8 <dcngettext@plt+0x2fdc>
   1544c:	mov	fp, r0
   15450:	mov	r0, fp
   15454:	add	sp, sp, #140	; 0x8c
   15458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1545c:	mov	r4, #92	; 0x5c
   15460:	mov	r1, #0
   15464:	mov	r3, r4
   15468:	b	14a5c <dcngettext@plt+0x3790>
   1546c:	mov	r3, #0
   15470:	ldr	r1, [sp, #52]	; 0x34
   15474:	str	r3, [sp, #32]
   15478:	mov	r4, #63	; 0x3f
   1547c:	b	1487c <dcngettext@plt+0x35b0>
   15480:	cmp	fp, #0
   15484:	beq	154e0 <dcngettext@plt+0x4214>
   15488:	mov	r3, #39	; 0x27
   1548c:	strb	r3, [r9]
   15490:	mov	r3, #0
   15494:	str	r3, [sp, #40]	; 0x28
   15498:	mov	r3, #1
   1549c:	str	r3, [sp, #68]	; 0x44
   154a0:	ldr	r3, [pc, #448]	; 15668 <dcngettext@plt+0x439c>
   154a4:	mov	r8, #1
   154a8:	str	r3, [sp, #72]	; 0x48
   154ac:	b	14690 <dcngettext@plt+0x33c4>
   154b0:	ldr	r3, [sp, #40]	; 0x28
   154b4:	mov	sl, r9
   154b8:	str	r3, [sp, #56]	; 0x38
   154bc:	mov	r9, fp
   154c0:	ldr	r2, [sp, #64]	; 0x40
   154c4:	b	153f8 <dcngettext@plt+0x412c>
   154c8:	str	r2, [sp, #36]	; 0x24
   154cc:	b	148e0 <dcngettext@plt+0x3614>
   154d0:	mov	r1, #0
   154d4:	str	r3, [sp, #32]
   154d8:	mov	r4, #63	; 0x3f
   154dc:	b	1487c <dcngettext@plt+0x35b0>
   154e0:	ldr	r3, [pc, #384]	; 15668 <dcngettext@plt+0x439c>
   154e4:	str	r3, [sp, #72]	; 0x48
   154e8:	mov	r3, #0
   154ec:	str	r3, [sp, #40]	; 0x28
   154f0:	mov	r3, #1
   154f4:	str	r3, [sp, #68]	; 0x44
   154f8:	mov	r8, r3
   154fc:	b	14690 <dcngettext@plt+0x33c4>
   15500:	bl	112b4 <abort@plt>
   15504:	cmp	fp, #0
   15508:	beq	15568 <dcngettext@plt+0x429c>
   1550c:	mov	r2, #1
   15510:	mov	r3, #34	; 0x22
   15514:	strb	r3, [r9]
   15518:	mov	r8, r2
   1551c:	mov	r3, r2
   15520:	str	r2, [sp, #68]	; 0x44
   15524:	str	r3, [sp, #56]	; 0x38
   15528:	ldr	r3, [pc, #316]	; 1566c <dcngettext@plt+0x43a0>
   1552c:	ldr	r1, [sp, #56]	; 0x38
   15530:	str	r3, [sp, #72]	; 0x48
   15534:	ldr	r2, [sp, #176]	; 0xb0
   15538:	ldr	ip, [sp, #40]	; 0x28
   1553c:	ldr	lr, [sp, #176]	; 0xb0
   15540:	b	14374 <dcngettext@plt+0x30a8>
   15544:	ldr	r0, [sp, #44]	; 0x2c
   15548:	bl	1117c <strlen@plt>
   1554c:	str	r0, [sp, #24]
   15550:	b	15254 <dcngettext@plt+0x3f88>
   15554:	mov	r7, #0
   15558:	ldr	r1, [sp, #52]	; 0x34
   1555c:	str	r3, [sp, #32]
   15560:	mov	r4, #48	; 0x30
   15564:	b	1487c <dcngettext@plt+0x35b0>
   15568:	mov	r3, #1
   1556c:	str	r3, [sp, #68]	; 0x44
   15570:	mov	r8, r3
   15574:	b	15524 <dcngettext@plt+0x4258>
   15578:	mov	r3, #2
   1557c:	mov	sl, r9
   15580:	str	r3, [sp, #176]	; 0xb0
   15584:	mov	r9, fp
   15588:	ldr	r3, [sp, #56]	; 0x38
   1558c:	b	153f8 <dcngettext@plt+0x412c>
   15590:	ldr	r6, [sp, #48]	; 0x30
   15594:	b	15044 <dcngettext@plt+0x3d78>
   15598:	ldr	r0, [sp, #24]
   1559c:	mov	ip, r6
   155a0:	cmp	r0, ip
   155a4:	mov	r1, r7
   155a8:	mov	r2, r4
   155ac:	ldr	r7, [sp, #104]	; 0x68
   155b0:	ldr	r4, [sp, #32]
   155b4:	ldr	r6, [sp, #108]	; 0x6c
   155b8:	ldr	r8, [sp, #112]	; 0x70
   155bc:	ldr	r5, [sp, #116]	; 0x74
   155c0:	bls	155f0 <dcngettext@plt+0x4324>
   155c4:	ldrb	r3, [r2]
   155c8:	cmp	r3, #0
   155cc:	bne	155e0 <dcngettext@plt+0x4314>
   155d0:	b	15700 <dcngettext@plt+0x4434>
   155d4:	ldrb	r3, [r2, #1]!
   155d8:	cmp	r3, #0
   155dc:	beq	15700 <dcngettext@plt+0x4434>
   155e0:	add	r1, r1, #1
   155e4:	add	r3, sl, r1
   155e8:	cmp	r0, r3
   155ec:	bhi	155d4 <dcngettext@plt+0x4308>
   155f0:	mov	r2, #0
   155f4:	mov	r3, r7
   155f8:	str	r2, [sp, #32]
   155fc:	b	153c8 <dcngettext@plt+0x40fc>
   15600:	mov	r1, r7
   15604:	ldr	r7, [sp, #104]	; 0x68
   15608:	mov	r2, #0
   1560c:	ldr	r4, [sp, #32]
   15610:	ldr	r6, [sp, #108]	; 0x6c
   15614:	ldr	r8, [sp, #112]	; 0x70
   15618:	ldr	r5, [sp, #116]	; 0x74
   1561c:	mov	r3, r7
   15620:	str	r2, [sp, #32]
   15624:	b	153c8 <dcngettext@plt+0x40fc>
   15628:	mov	r3, r5
   1562c:	eor	r3, r3, #1
   15630:	ldr	r4, [sp, #32]
   15634:	mov	r1, r7
   15638:	str	r5, [sp, #32]
   1563c:	ldr	r7, [sp, #104]	; 0x68
   15640:	ldr	r6, [sp, #108]	; 0x6c
   15644:	ldr	r8, [sp, #112]	; 0x70
   15648:	ldr	r5, [sp, #116]	; 0x74
   1564c:	uxtb	r3, r3
   15650:	b	153c8 <dcngettext@plt+0x40fc>
   15654:	mov	sl, r9
   15658:	str	r3, [sp, #56]	; 0x38
   1565c:	mov	r9, fp
   15660:	ldr	r2, [sp, #64]	; 0x40
   15664:	b	153f8 <dcngettext@plt+0x412c>
   15668:	andeq	sl, r1, r0, asr #16
   1566c:	andeq	sl, r1, ip, lsr r8
   15670:	andeq	sl, r1, r4, asr #16
   15674:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   15678:	ldr	r2, [sp, #44]	; 0x2c
   1567c:	ldrb	r1, [r2, r3]
   15680:	sub	r2, r1, #33	; 0x21
   15684:	uxtb	r2, r2
   15688:	cmp	r2, #29
   1568c:	bhi	1570c <dcngettext@plt+0x4440>
   15690:	ldr	r0, [pc, #-36]	; 15674 <dcngettext@plt+0x43a8>
   15694:	mov	ip, #1
   15698:	ands	r2, r0, ip, lsl r2
   1569c:	beq	1572c <dcngettext@plt+0x4460>
   156a0:	ldr	r2, [sp, #40]	; 0x28
   156a4:	cmp	r2, #0
   156a8:	bne	15820 <dcngettext@plt+0x4554>
   156ac:	add	r2, r8, #1
   156b0:	cmp	fp, r8
   156b4:	strbhi	r4, [r9, r8]
   156b8:	cmp	fp, r2
   156bc:	movhi	r0, #34	; 0x22
   156c0:	strbhi	r0, [r9, r2]
   156c4:	add	r2, r8, #2
   156c8:	cmp	fp, r2
   156cc:	movhi	r0, #34	; 0x22
   156d0:	strbhi	r0, [r9, r2]
   156d4:	add	r2, r8, #3
   156d8:	cmp	fp, r2
   156dc:	mov	sl, r3
   156e0:	ldr	r3, [sp, #40]	; 0x28
   156e4:	movhi	r0, #63	; 0x3f
   156e8:	mov	r4, r1
   156ec:	strbhi	r0, [r9, r2]
   156f0:	add	r8, r8, #4
   156f4:	mov	r1, r3
   156f8:	str	r3, [sp, #32]
   156fc:	b	1487c <dcngettext@plt+0x35b0>
   15700:	str	r3, [sp, #32]
   15704:	mov	r3, r7
   15708:	b	153c8 <dcngettext@plt+0x40fc>
   1570c:	mov	r1, #0
   15710:	str	r1, [sp, #32]
   15714:	b	1487c <dcngettext@plt+0x35b0>
   15718:	mov	sl, r9
   1571c:	ldr	r3, [sp, #56]	; 0x38
   15720:	mov	r9, fp
   15724:	ldr	r2, [sp, #64]	; 0x40
   15728:	b	153f8 <dcngettext@plt+0x412c>
   1572c:	str	r2, [sp, #32]
   15730:	mov	r1, #0
   15734:	b	1487c <dcngettext@plt+0x35b0>
   15738:	ldr	r2, [sp, #76]	; 0x4c
   1573c:	mov	sl, r9
   15740:	mov	r9, fp
   15744:	mov	fp, r8
   15748:	ldr	r1, [sp, #72]	; 0x48
   1574c:	cmp	r1, #0
   15750:	moveq	r3, #0
   15754:	andne	r3, r2, #1
   15758:	cmp	r3, #0
   1575c:	beq	15788 <dcngettext@plt+0x44bc>
   15760:	ldrb	r3, [r1]
   15764:	cmp	r3, #0
   15768:	beq	15788 <dcngettext@plt+0x44bc>
   1576c:	mov	r2, r1
   15770:	cmp	r9, fp
   15774:	strbhi	r3, [sl, fp]
   15778:	ldrb	r3, [r2, #1]!
   1577c:	add	fp, fp, #1
   15780:	cmp	r3, #0
   15784:	bne	15770 <dcngettext@plt+0x44a4>
   15788:	cmp	r9, fp
   1578c:	movhi	r3, #0
   15790:	strbhi	r3, [sl, fp]
   15794:	b	15450 <dcngettext@plt+0x4184>
   15798:	ldr	r3, [sp, #192]	; 0xc0
   1579c:	mov	ip, #5
   157a0:	str	r3, [sp, #16]
   157a4:	ldr	r3, [sp, #188]	; 0xbc
   157a8:	ldr	r2, [sp, #44]	; 0x2c
   157ac:	str	r3, [sp, #12]
   157b0:	ldr	r3, [sp, #184]	; 0xb8
   157b4:	ldr	r1, [sp, #84]	; 0x54
   157b8:	str	r3, [sp, #8]
   157bc:	ldr	r3, [sp, #180]	; 0xb4
   157c0:	mov	r0, r9
   157c4:	str	r3, [sp, #4]
   157c8:	str	ip, [sp]
   157cc:	ldr	r3, [sp, #24]
   157d0:	bl	142a8 <dcngettext@plt+0x2fdc>
   157d4:	mov	fp, r0
   157d8:	b	15450 <dcngettext@plt+0x4184>
   157dc:	mov	sl, r9
   157e0:	mov	r9, fp
   157e4:	mov	fp, r8
   157e8:	b	15748 <dcngettext@plt+0x447c>
   157ec:	ldr	r1, [sp, #176]	; 0xb0
   157f0:	bl	14188 <dcngettext@plt+0x2ebc>
   157f4:	str	r0, [sp, #192]	; 0xc0
   157f8:	b	14764 <dcngettext@plt+0x3498>
   157fc:	ldr	r1, [sp, #176]	; 0xb0
   15800:	bl	14188 <dcngettext@plt+0x2ebc>
   15804:	str	r0, [sp, #188]	; 0xbc
   15808:	b	14744 <dcngettext@plt+0x3478>
   1580c:	mov	sl, r9
   15810:	mov	r2, r3
   15814:	mov	r9, fp
   15818:	mov	fp, r8
   1581c:	b	15748 <dcngettext@plt+0x447c>
   15820:	mov	sl, r9
   15824:	mov	r9, fp
   15828:	b	1540c <dcngettext@plt+0x4140>
   1582c:	push	{r4, r5, r6, lr}
   15830:	mov	r5, r0
   15834:	bl	11194 <__errno_location@plt>
   15838:	cmp	r5, #0
   1583c:	mov	r1, #48	; 0x30
   15840:	mov	r4, r0
   15844:	ldr	r0, [pc, #16]	; 1585c <dcngettext@plt+0x4590>
   15848:	ldr	r6, [r4]
   1584c:	movne	r0, r5
   15850:	bl	198ac <dcngettext@plt+0x85e0>
   15854:	str	r6, [r4]
   15858:	pop	{r4, r5, r6, pc}
   1585c:	andeq	fp, r2, r8, lsr #3
   15860:	ldr	r3, [pc, #12]	; 15874 <dcngettext@plt+0x45a8>
   15864:	cmp	r0, #0
   15868:	moveq	r0, r3
   1586c:	ldr	r0, [r0]
   15870:	bx	lr
   15874:	andeq	fp, r2, r8, lsr #3
   15878:	ldr	r3, [pc, #12]	; 1588c <dcngettext@plt+0x45c0>
   1587c:	cmp	r0, #0
   15880:	moveq	r0, r3
   15884:	str	r1, [r0]
   15888:	bx	lr
   1588c:	andeq	fp, r2, r8, lsr #3
   15890:	ldr	r3, [pc, #52]	; 158cc <dcngettext@plt+0x4600>
   15894:	cmp	r0, #0
   15898:	moveq	r0, r3
   1589c:	add	r3, r0, #8
   158a0:	push	{lr}		; (str lr, [sp, #-4]!)
   158a4:	lsr	lr, r1, #5
   158a8:	and	r1, r1, #31
   158ac:	ldr	ip, [r3, lr, lsl #2]
   158b0:	lsr	r0, ip, r1
   158b4:	eor	r2, r2, r0
   158b8:	and	r2, r2, #1
   158bc:	and	r0, r0, #1
   158c0:	eor	r1, ip, r2, lsl r1
   158c4:	str	r1, [r3, lr, lsl #2]
   158c8:	pop	{pc}		; (ldr pc, [sp], #4)
   158cc:	andeq	fp, r2, r8, lsr #3
   158d0:	ldr	r3, [pc, #16]	; 158e8 <dcngettext@plt+0x461c>
   158d4:	cmp	r0, #0
   158d8:	movne	r3, r0
   158dc:	ldr	r0, [r3, #4]
   158e0:	str	r1, [r3, #4]
   158e4:	bx	lr
   158e8:	andeq	fp, r2, r8, lsr #3
   158ec:	ldr	r3, [pc, #44]	; 15920 <dcngettext@plt+0x4654>
   158f0:	cmp	r0, #0
   158f4:	moveq	r0, r3
   158f8:	mov	ip, #10
   158fc:	cmp	r2, #0
   15900:	cmpne	r1, #0
   15904:	str	ip, [r0]
   15908:	beq	15918 <dcngettext@plt+0x464c>
   1590c:	str	r1, [r0, #40]	; 0x28
   15910:	str	r2, [r0, #44]	; 0x2c
   15914:	bx	lr
   15918:	push	{r4, lr}
   1591c:	bl	112b4 <abort@plt>
   15920:	andeq	fp, r2, r8, lsr #3
   15924:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15928:	sub	sp, sp, #24
   1592c:	ldr	ip, [pc, #108]	; 159a0 <dcngettext@plt+0x46d4>
   15930:	ldr	r4, [sp, #56]	; 0x38
   15934:	mov	r9, r2
   15938:	cmp	r4, #0
   1593c:	moveq	r4, ip
   15940:	mov	sl, r3
   15944:	mov	r7, r0
   15948:	mov	r8, r1
   1594c:	bl	11194 <__errno_location@plt>
   15950:	ldr	r3, [r4, #44]	; 0x2c
   15954:	mov	r1, r8
   15958:	ldr	r6, [r0]
   1595c:	str	r3, [sp, #16]
   15960:	ldr	r2, [r4, #40]	; 0x28
   15964:	add	r3, r4, #8
   15968:	str	r3, [sp, #8]
   1596c:	str	r2, [sp, #12]
   15970:	ldr	r2, [r4, #4]
   15974:	mov	r5, r0
   15978:	str	r2, [sp, #4]
   1597c:	ldr	ip, [r4]
   15980:	mov	r3, sl
   15984:	mov	r2, r9
   15988:	mov	r0, r7
   1598c:	str	ip, [sp]
   15990:	bl	142a8 <dcngettext@plt+0x2fdc>
   15994:	str	r6, [r5]
   15998:	add	sp, sp, #24
   1599c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   159a0:	andeq	fp, r2, r8, lsr #3
   159a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159a8:	cmp	r2, #0
   159ac:	sub	sp, sp, #36	; 0x24
   159b0:	ldr	r4, [pc, #164]	; 15a5c <dcngettext@plt+0x4790>
   159b4:	mov	r8, r1
   159b8:	movne	r4, r2
   159bc:	mov	r7, r0
   159c0:	bl	11194 <__errno_location@plt>
   159c4:	ldr	r3, [r4, #44]	; 0x2c
   159c8:	ldr	r5, [r4, #4]
   159cc:	add	r9, r4, #8
   159d0:	orr	r5, r5, #1
   159d4:	mov	r1, #0
   159d8:	mov	r2, r7
   159dc:	ldr	fp, [r0]
   159e0:	str	r3, [sp, #16]
   159e4:	ldr	r3, [r4, #40]	; 0x28
   159e8:	stmib	sp, {r5, r9}
   159ec:	str	r3, [sp, #12]
   159f0:	ldr	r3, [r4]
   159f4:	mov	r6, r0
   159f8:	str	r3, [sp]
   159fc:	mov	r0, r1
   15a00:	mov	r3, r8
   15a04:	bl	142a8 <dcngettext@plt+0x2fdc>
   15a08:	add	r1, r0, #1
   15a0c:	mov	r0, r1
   15a10:	str	r1, [sp, #28]
   15a14:	bl	19368 <dcngettext@plt+0x809c>
   15a18:	ldr	r3, [r4, #44]	; 0x2c
   15a1c:	ldr	r1, [sp, #28]
   15a20:	str	r3, [sp, #16]
   15a24:	ldr	r3, [r4, #40]	; 0x28
   15a28:	str	r5, [sp, #4]
   15a2c:	str	r3, [sp, #12]
   15a30:	str	r9, [sp, #8]
   15a34:	ldr	ip, [r4]
   15a38:	mov	r3, r8
   15a3c:	mov	r2, r7
   15a40:	str	ip, [sp]
   15a44:	mov	sl, r0
   15a48:	bl	142a8 <dcngettext@plt+0x2fdc>
   15a4c:	mov	r0, sl
   15a50:	str	fp, [r6]
   15a54:	add	sp, sp, #36	; 0x24
   15a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a5c:	andeq	fp, r2, r8, lsr #3
   15a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a64:	cmp	r3, #0
   15a68:	sub	sp, sp, #44	; 0x2c
   15a6c:	ldr	r4, [pc, #192]	; 15b34 <dcngettext@plt+0x4868>
   15a70:	mov	r6, r2
   15a74:	movne	r4, r3
   15a78:	mov	r9, r1
   15a7c:	mov	r8, r0
   15a80:	bl	11194 <__errno_location@plt>
   15a84:	ldr	r3, [r4, #44]	; 0x2c
   15a88:	ldr	r5, [r4, #4]
   15a8c:	add	sl, r4, #8
   15a90:	cmp	r6, #0
   15a94:	orreq	r5, r5, #1
   15a98:	mov	r1, #0
   15a9c:	ldr	r2, [r0]
   15aa0:	str	r3, [sp, #16]
   15aa4:	ldr	r3, [r4, #40]	; 0x28
   15aa8:	stmib	sp, {r5, sl}
   15aac:	str	r3, [sp, #12]
   15ab0:	ldr	r3, [r4]
   15ab4:	mov	r7, r0
   15ab8:	str	r2, [sp, #28]
   15abc:	str	r3, [sp]
   15ac0:	mov	r2, r8
   15ac4:	mov	r3, r9
   15ac8:	mov	r0, r1
   15acc:	bl	142a8 <dcngettext@plt+0x2fdc>
   15ad0:	add	r1, r0, #1
   15ad4:	mov	fp, r0
   15ad8:	mov	r0, r1
   15adc:	str	r1, [sp, #36]	; 0x24
   15ae0:	bl	19368 <dcngettext@plt+0x809c>
   15ae4:	ldr	r3, [r4, #44]	; 0x2c
   15ae8:	mov	r2, r8
   15aec:	str	r3, [sp, #16]
   15af0:	ldr	r3, [r4, #40]	; 0x28
   15af4:	str	r5, [sp, #4]
   15af8:	str	r3, [sp, #12]
   15afc:	str	sl, [sp, #8]
   15b00:	ldr	ip, [r4]
   15b04:	ldr	r1, [sp, #36]	; 0x24
   15b08:	mov	r3, r9
   15b0c:	str	ip, [sp]
   15b10:	str	r0, [sp, #32]
   15b14:	bl	142a8 <dcngettext@plt+0x2fdc>
   15b18:	ldr	r2, [sp, #28]
   15b1c:	cmp	r6, #0
   15b20:	str	r2, [r7]
   15b24:	ldr	r0, [sp, #32]
   15b28:	strne	fp, [r6]
   15b2c:	add	sp, sp, #44	; 0x2c
   15b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b34:	andeq	fp, r2, r8, lsr #3
   15b38:	push	{r4, r5, r6, r7, r8, lr}
   15b3c:	ldr	r6, [pc, #116]	; 15bb8 <dcngettext@plt+0x48ec>
   15b40:	ldr	r3, [r6, #4]
   15b44:	ldr	r7, [r6]
   15b48:	cmp	r3, #1
   15b4c:	movgt	r5, r7
   15b50:	movgt	r4, #1
   15b54:	ble	15b74 <dcngettext@plt+0x48a8>
   15b58:	ldr	r0, [r5, #12]
   15b5c:	bl	19b14 <dcngettext@plt+0x8848>
   15b60:	ldr	r3, [r6, #4]
   15b64:	add	r4, r4, #1
   15b68:	cmp	r3, r4
   15b6c:	add	r5, r5, #8
   15b70:	bgt	15b58 <dcngettext@plt+0x488c>
   15b74:	ldr	r0, [r7, #4]
   15b78:	ldr	r4, [pc, #60]	; 15bbc <dcngettext@plt+0x48f0>
   15b7c:	cmp	r0, r4
   15b80:	beq	15b94 <dcngettext@plt+0x48c8>
   15b84:	bl	19b14 <dcngettext@plt+0x8848>
   15b88:	mov	r3, #256	; 0x100
   15b8c:	str	r4, [r6, #12]
   15b90:	str	r3, [r6, #8]
   15b94:	ldr	r4, [pc, #36]	; 15bc0 <dcngettext@plt+0x48f4>
   15b98:	cmp	r7, r4
   15b9c:	beq	15bac <dcngettext@plt+0x48e0>
   15ba0:	mov	r0, r7
   15ba4:	bl	19b14 <dcngettext@plt+0x8848>
   15ba8:	str	r4, [r6]
   15bac:	mov	r3, #1
   15bb0:	str	r3, [r6, #4]
   15bb4:	pop	{r4, r5, r6, r7, r8, pc}
   15bb8:	andeq	fp, r2, r8, lsr r1
   15bbc:	ldrdeq	fp, [r2], -r8
   15bc0:	andeq	fp, r2, r0, asr #2
   15bc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bc8:	sub	sp, sp, #44	; 0x2c
   15bcc:	mov	r5, r0
   15bd0:	mov	sl, r1
   15bd4:	bl	11194 <__errno_location@plt>
   15bd8:	ldr	r4, [pc, #400]	; 15d70 <dcngettext@plt+0x4aa4>
   15bdc:	cmn	r5, #-2147483647	; 0x80000001
   15be0:	ldr	r6, [r4]
   15be4:	mov	r8, r0
   15be8:	movne	r0, #0
   15bec:	moveq	r0, #1
   15bf0:	ldr	r3, [r8]
   15bf4:	orrs	r0, r0, r5, lsr #31
   15bf8:	str	r3, [sp, #24]
   15bfc:	bne	15d6c <dcngettext@plt+0x4aa0>
   15c00:	ldr	r2, [r4, #4]
   15c04:	cmp	r5, r2
   15c08:	blt	15c68 <dcngettext@plt+0x499c>
   15c0c:	add	r7, r4, #8
   15c10:	cmp	r6, r7
   15c14:	str	r2, [sp, #36]	; 0x24
   15c18:	beq	15d3c <dcngettext@plt+0x4a70>
   15c1c:	mov	r3, #8
   15c20:	sub	r2, r5, r2
   15c24:	mov	r0, r6
   15c28:	str	r3, [sp]
   15c2c:	add	r2, r2, #1
   15c30:	mvn	r3, #-2147483648	; 0x80000000
   15c34:	add	r1, sp, #36	; 0x24
   15c38:	bl	19584 <dcngettext@plt+0x82b8>
   15c3c:	mov	r6, r0
   15c40:	str	r0, [r4]
   15c44:	ldr	r0, [r4, #4]
   15c48:	ldr	r2, [sp, #36]	; 0x24
   15c4c:	mov	r1, #0
   15c50:	sub	r2, r2, r0
   15c54:	add	r0, r6, r0, lsl #3
   15c58:	lsl	r2, r2, #3
   15c5c:	bl	111ac <memset@plt>
   15c60:	ldr	r3, [sp, #36]	; 0x24
   15c64:	str	r3, [r4, #4]
   15c68:	ldr	r4, [pc, #260]	; 15d74 <dcngettext@plt+0x4aa8>
   15c6c:	add	fp, r6, r5, lsl #3
   15c70:	ldr	r9, [r6, r5, lsl #3]
   15c74:	ldr	r0, [r4, #4]
   15c78:	ldr	r3, [r4]
   15c7c:	ldr	r7, [fp, #4]
   15c80:	ldr	r1, [r4, #44]	; 0x2c
   15c84:	ldr	r2, [r4, #40]	; 0x28
   15c88:	orr	r0, r0, #1
   15c8c:	str	r3, [sp]
   15c90:	add	r3, r4, #8
   15c94:	str	r0, [sp, #28]
   15c98:	str	r0, [sp, #4]
   15c9c:	str	r1, [sp, #16]
   15ca0:	str	r2, [sp, #12]
   15ca4:	str	r3, [sp, #8]
   15ca8:	mov	r0, r7
   15cac:	mov	r1, r9
   15cb0:	mvn	r3, #0
   15cb4:	mov	r2, sl
   15cb8:	bl	142a8 <dcngettext@plt+0x2fdc>
   15cbc:	cmp	r9, r0
   15cc0:	bhi	15d28 <dcngettext@plt+0x4a5c>
   15cc4:	add	r3, r4, #48	; 0x30
   15cc8:	add	r9, r0, #1
   15ccc:	cmp	r7, r3
   15cd0:	str	r9, [r6, r5, lsl #3]
   15cd4:	beq	15ce0 <dcngettext@plt+0x4a14>
   15cd8:	mov	r0, r7
   15cdc:	bl	19b14 <dcngettext@plt+0x8848>
   15ce0:	mov	r0, r9
   15ce4:	bl	19368 <dcngettext@plt+0x809c>
   15ce8:	ldr	ip, [r4, #44]	; 0x2c
   15cec:	ldr	r3, [r4]
   15cf0:	ldr	lr, [r4, #40]	; 0x28
   15cf4:	ldr	r4, [pc, #124]	; 15d78 <dcngettext@plt+0x4aac>
   15cf8:	mov	r2, sl
   15cfc:	mov	r1, r9
   15d00:	str	r0, [fp, #4]
   15d04:	str	r4, [sp, #8]
   15d08:	ldr	r4, [sp, #28]
   15d0c:	str	r3, [sp]
   15d10:	str	r4, [sp, #4]
   15d14:	str	ip, [sp, #16]
   15d18:	str	lr, [sp, #12]
   15d1c:	mvn	r3, #0
   15d20:	mov	r7, r0
   15d24:	bl	142a8 <dcngettext@plt+0x2fdc>
   15d28:	ldr	r3, [sp, #24]
   15d2c:	mov	r0, r7
   15d30:	str	r3, [r8]
   15d34:	add	sp, sp, #44	; 0x2c
   15d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d3c:	mov	r3, #8
   15d40:	sub	r2, r5, r2
   15d44:	str	r3, [sp]
   15d48:	add	r1, sp, #36	; 0x24
   15d4c:	add	r2, r2, #1
   15d50:	mvn	r3, #-2147483648	; 0x80000000
   15d54:	bl	19584 <dcngettext@plt+0x82b8>
   15d58:	mov	r6, r0
   15d5c:	ldm	r7, {r0, r1}
   15d60:	str	r6, [r4]
   15d64:	stm	r6, {r0, r1}
   15d68:	b	15c44 <dcngettext@plt+0x4978>
   15d6c:	bl	112b4 <abort@plt>
   15d70:	andeq	fp, r2, r8, lsr r1
   15d74:	andeq	fp, r2, r8, lsr #3
   15d78:			; <UNDEFINED> instruction: 0x0002b1b0
   15d7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d80:	sub	sp, sp, #52	; 0x34
   15d84:	mov	r5, r0
   15d88:	mov	sl, r1
   15d8c:	mov	fp, r2
   15d90:	bl	11194 <__errno_location@plt>
   15d94:	ldr	r4, [pc, #408]	; 15f34 <dcngettext@plt+0x4c68>
   15d98:	cmn	r5, #-2147483647	; 0x80000001
   15d9c:	ldr	r6, [r4]
   15da0:	mov	r8, r0
   15da4:	movne	r0, #0
   15da8:	moveq	r0, #1
   15dac:	ldr	r3, [r8]
   15db0:	orrs	r0, r0, r5, lsr #31
   15db4:	str	r3, [sp, #28]
   15db8:	bne	15f30 <dcngettext@plt+0x4c64>
   15dbc:	ldr	r2, [r4, #4]
   15dc0:	cmp	r5, r2
   15dc4:	blt	15e24 <dcngettext@plt+0x4b58>
   15dc8:	add	r7, r4, #8
   15dcc:	cmp	r6, r7
   15dd0:	str	r2, [sp, #44]	; 0x2c
   15dd4:	beq	15f00 <dcngettext@plt+0x4c34>
   15dd8:	mov	r3, #8
   15ddc:	sub	r2, r5, r2
   15de0:	mov	r0, r6
   15de4:	str	r3, [sp]
   15de8:	add	r2, r2, #1
   15dec:	mvn	r3, #-2147483648	; 0x80000000
   15df0:	add	r1, sp, #44	; 0x2c
   15df4:	bl	19584 <dcngettext@plt+0x82b8>
   15df8:	mov	r6, r0
   15dfc:	str	r0, [r4]
   15e00:	ldr	r0, [r4, #4]
   15e04:	ldr	r2, [sp, #44]	; 0x2c
   15e08:	mov	r1, #0
   15e0c:	sub	r2, r2, r0
   15e10:	add	r0, r6, r0, lsl #3
   15e14:	lsl	r2, r2, #3
   15e18:	bl	111ac <memset@plt>
   15e1c:	ldr	r3, [sp, #44]	; 0x2c
   15e20:	str	r3, [r4, #4]
   15e24:	ldr	r4, [pc, #268]	; 15f38 <dcngettext@plt+0x4c6c>
   15e28:	add	r3, r6, r5, lsl #3
   15e2c:	str	r3, [sp, #32]
   15e30:	ldr	r7, [r3, #4]
   15e34:	ldr	r0, [r4, #4]
   15e38:	ldr	r3, [r4]
   15e3c:	ldr	r9, [r6, r5, lsl #3]
   15e40:	ldr	r1, [r4, #44]	; 0x2c
   15e44:	ldr	r2, [r4, #40]	; 0x28
   15e48:	orr	r0, r0, #1
   15e4c:	str	r3, [sp]
   15e50:	add	r3, r4, #8
   15e54:	str	r0, [sp, #36]	; 0x24
   15e58:	str	r0, [sp, #4]
   15e5c:	str	r1, [sp, #16]
   15e60:	str	r2, [sp, #12]
   15e64:	str	r3, [sp, #8]
   15e68:	mov	r0, r7
   15e6c:	mov	r1, r9
   15e70:	mov	r3, fp
   15e74:	mov	r2, sl
   15e78:	bl	142a8 <dcngettext@plt+0x2fdc>
   15e7c:	cmp	r9, r0
   15e80:	bhi	15eec <dcngettext@plt+0x4c20>
   15e84:	add	r3, r4, #48	; 0x30
   15e88:	add	r9, r0, #1
   15e8c:	cmp	r7, r3
   15e90:	str	r9, [r6, r5, lsl #3]
   15e94:	beq	15ea0 <dcngettext@plt+0x4bd4>
   15e98:	mov	r0, r7
   15e9c:	bl	19b14 <dcngettext@plt+0x8848>
   15ea0:	mov	r0, r9
   15ea4:	bl	19368 <dcngettext@plt+0x809c>
   15ea8:	ldr	ip, [sp, #32]
   15eac:	ldr	lr, [r4, #44]	; 0x2c
   15eb0:	ldr	r5, [r4, #40]	; 0x28
   15eb4:	mov	r3, fp
   15eb8:	mov	r2, sl
   15ebc:	mov	r1, r9
   15ec0:	str	r0, [ip, #4]
   15ec4:	ldr	ip, [r4]
   15ec8:	ldr	r4, [pc, #108]	; 15f3c <dcngettext@plt+0x4c70>
   15ecc:	str	lr, [sp, #16]
   15ed0:	str	r4, [sp, #8]
   15ed4:	ldr	r4, [sp, #36]	; 0x24
   15ed8:	str	r5, [sp, #12]
   15edc:	str	r4, [sp, #4]
   15ee0:	str	ip, [sp]
   15ee4:	mov	r7, r0
   15ee8:	bl	142a8 <dcngettext@plt+0x2fdc>
   15eec:	ldr	r3, [sp, #28]
   15ef0:	mov	r0, r7
   15ef4:	str	r3, [r8]
   15ef8:	add	sp, sp, #52	; 0x34
   15efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f00:	mov	r3, #8
   15f04:	sub	r2, r5, r2
   15f08:	str	r3, [sp]
   15f0c:	add	r1, sp, #44	; 0x2c
   15f10:	add	r2, r2, #1
   15f14:	mvn	r3, #-2147483648	; 0x80000000
   15f18:	bl	19584 <dcngettext@plt+0x82b8>
   15f1c:	mov	r6, r0
   15f20:	ldm	r7, {r0, r1}
   15f24:	str	r6, [r4]
   15f28:	stm	r6, {r0, r1}
   15f2c:	b	15e00 <dcngettext@plt+0x4b34>
   15f30:	bl	112b4 <abort@plt>
   15f34:	andeq	fp, r2, r8, lsr r1
   15f38:	andeq	fp, r2, r8, lsr #3
   15f3c:			; <UNDEFINED> instruction: 0x0002b1b0
   15f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f44:	sub	sp, sp, #44	; 0x2c
   15f48:	mov	sl, r0
   15f4c:	bl	11194 <__errno_location@plt>
   15f50:	ldr	r4, [pc, #352]	; 160b8 <dcngettext@plt+0x4dec>
   15f54:	ldr	r2, [r4, #4]
   15f58:	ldr	r5, [r4]
   15f5c:	cmp	r2, #0
   15f60:	ldr	r3, [r0]
   15f64:	mov	r8, r0
   15f68:	str	r3, [sp, #28]
   15f6c:	bgt	15fc8 <dcngettext@plt+0x4cfc>
   15f70:	add	r6, r4, #8
   15f74:	cmp	r5, r6
   15f78:	str	r2, [sp, #36]	; 0x24
   15f7c:	beq	16088 <dcngettext@plt+0x4dbc>
   15f80:	mov	r3, #8
   15f84:	mov	r0, r5
   15f88:	str	r3, [sp]
   15f8c:	rsb	r2, r2, #1
   15f90:	mvn	r3, #-2147483648	; 0x80000000
   15f94:	add	r1, sp, #36	; 0x24
   15f98:	bl	19584 <dcngettext@plt+0x82b8>
   15f9c:	mov	r5, r0
   15fa0:	str	r0, [r4]
   15fa4:	ldr	r0, [r4, #4]
   15fa8:	ldr	r2, [sp, #36]	; 0x24
   15fac:	mov	r1, #0
   15fb0:	sub	r2, r2, r0
   15fb4:	add	r0, r5, r0, lsl #3
   15fb8:	lsl	r2, r2, #3
   15fbc:	bl	111ac <memset@plt>
   15fc0:	ldr	r3, [sp, #36]	; 0x24
   15fc4:	str	r3, [r4, #4]
   15fc8:	ldr	r4, [pc, #236]	; 160bc <dcngettext@plt+0x4df0>
   15fcc:	ldr	r9, [r5]
   15fd0:	ldr	r6, [r5, #4]
   15fd4:	ldr	r7, [r4, #4]
   15fd8:	ldr	r1, [r4, #44]	; 0x2c
   15fdc:	ldr	r2, [r4, #40]	; 0x28
   15fe0:	ldr	r3, [r4]
   15fe4:	orr	r7, r7, #1
   15fe8:	add	fp, r4, #8
   15fec:	str	r1, [sp, #16]
   15ff0:	str	r2, [sp, #12]
   15ff4:	str	r3, [sp]
   15ff8:	str	r7, [sp, #4]
   15ffc:	str	fp, [sp, #8]
   16000:	mov	r1, r9
   16004:	mov	r0, r6
   16008:	mvn	r3, #0
   1600c:	mov	r2, sl
   16010:	bl	142a8 <dcngettext@plt+0x2fdc>
   16014:	cmp	r9, r0
   16018:	bhi	16074 <dcngettext@plt+0x4da8>
   1601c:	add	r3, r4, #48	; 0x30
   16020:	add	r9, r0, #1
   16024:	cmp	r6, r3
   16028:	str	r9, [r5]
   1602c:	beq	16038 <dcngettext@plt+0x4d6c>
   16030:	mov	r0, r6
   16034:	bl	19b14 <dcngettext@plt+0x8848>
   16038:	mov	r0, r9
   1603c:	bl	19368 <dcngettext@plt+0x809c>
   16040:	ldr	ip, [r4, #44]	; 0x2c
   16044:	ldr	r3, [r4]
   16048:	ldr	lr, [r4, #40]	; 0x28
   1604c:	mov	r2, sl
   16050:	mov	r1, r9
   16054:	str	r0, [r5, #4]
   16058:	str	r3, [sp]
   1605c:	stmib	sp, {r7, fp}
   16060:	str	ip, [sp, #16]
   16064:	str	lr, [sp, #12]
   16068:	mvn	r3, #0
   1606c:	mov	r6, r0
   16070:	bl	142a8 <dcngettext@plt+0x2fdc>
   16074:	ldr	r3, [sp, #28]
   16078:	mov	r0, r6
   1607c:	str	r3, [r8]
   16080:	add	sp, sp, #44	; 0x2c
   16084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16088:	mov	r3, #8
   1608c:	str	r3, [sp]
   16090:	add	r1, sp, #36	; 0x24
   16094:	rsb	r2, r2, #1
   16098:	mvn	r3, #-2147483648	; 0x80000000
   1609c:	mov	r0, #0
   160a0:	bl	19584 <dcngettext@plt+0x82b8>
   160a4:	mov	r5, r0
   160a8:	ldm	r6, {r0, r1}
   160ac:	str	r5, [r4]
   160b0:	stm	r5, {r0, r1}
   160b4:	b	15fa4 <dcngettext@plt+0x4cd8>
   160b8:	andeq	fp, r2, r8, lsr r1
   160bc:	andeq	fp, r2, r8, lsr #3
   160c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160c4:	sub	sp, sp, #44	; 0x2c
   160c8:	mov	r9, r0
   160cc:	mov	sl, r1
   160d0:	bl	11194 <__errno_location@plt>
   160d4:	ldr	r4, [pc, #364]	; 16248 <dcngettext@plt+0x4f7c>
   160d8:	ldr	r2, [r4, #4]
   160dc:	ldr	r5, [r4]
   160e0:	cmp	r2, #0
   160e4:	ldr	r3, [r0]
   160e8:	mov	r7, r0
   160ec:	str	r3, [sp, #24]
   160f0:	bgt	1614c <dcngettext@plt+0x4e80>
   160f4:	add	r6, r4, #8
   160f8:	cmp	r5, r6
   160fc:	str	r2, [sp, #36]	; 0x24
   16100:	beq	16218 <dcngettext@plt+0x4f4c>
   16104:	mov	r3, #8
   16108:	mov	r0, r5
   1610c:	str	r3, [sp]
   16110:	rsb	r2, r2, #1
   16114:	mvn	r3, #-2147483648	; 0x80000000
   16118:	add	r1, sp, #36	; 0x24
   1611c:	bl	19584 <dcngettext@plt+0x82b8>
   16120:	mov	r5, r0
   16124:	str	r0, [r4]
   16128:	ldr	r0, [r4, #4]
   1612c:	ldr	r2, [sp, #36]	; 0x24
   16130:	mov	r1, #0
   16134:	sub	r2, r2, r0
   16138:	add	r0, r5, r0, lsl #3
   1613c:	lsl	r2, r2, #3
   16140:	bl	111ac <memset@plt>
   16144:	ldr	r3, [sp, #36]	; 0x24
   16148:	str	r3, [r4, #4]
   1614c:	ldr	r4, [pc, #248]	; 1624c <dcngettext@plt+0x4f80>
   16150:	ldr	r8, [r5]
   16154:	ldr	r6, [r5, #4]
   16158:	ldr	r0, [r4, #4]
   1615c:	ldr	r1, [r4, #44]	; 0x2c
   16160:	ldr	r2, [r4, #40]	; 0x28
   16164:	ldr	r3, [r4]
   16168:	orr	r0, r0, #1
   1616c:	add	fp, r4, #8
   16170:	str	r0, [sp, #28]
   16174:	str	r0, [sp, #4]
   16178:	str	r1, [sp, #16]
   1617c:	str	r2, [sp, #12]
   16180:	str	r3, [sp]
   16184:	str	fp, [sp, #8]
   16188:	mov	r1, r8
   1618c:	mov	r0, r6
   16190:	mov	r3, sl
   16194:	mov	r2, r9
   16198:	bl	142a8 <dcngettext@plt+0x2fdc>
   1619c:	cmp	r8, r0
   161a0:	bhi	16204 <dcngettext@plt+0x4f38>
   161a4:	add	r3, r4, #48	; 0x30
   161a8:	add	r8, r0, #1
   161ac:	cmp	r6, r3
   161b0:	str	r8, [r5]
   161b4:	beq	161c0 <dcngettext@plt+0x4ef4>
   161b8:	mov	r0, r6
   161bc:	bl	19b14 <dcngettext@plt+0x8848>
   161c0:	mov	r0, r8
   161c4:	bl	19368 <dcngettext@plt+0x809c>
   161c8:	ldr	lr, [r4, #44]	; 0x2c
   161cc:	ldr	ip, [r4]
   161d0:	mov	r3, sl
   161d4:	mov	r2, r9
   161d8:	mov	r1, r8
   161dc:	str	r0, [r5, #4]
   161e0:	ldr	r5, [r4, #40]	; 0x28
   161e4:	ldr	r4, [sp, #28]
   161e8:	str	fp, [sp, #8]
   161ec:	str	r4, [sp, #4]
   161f0:	str	lr, [sp, #16]
   161f4:	str	r5, [sp, #12]
   161f8:	str	ip, [sp]
   161fc:	mov	r6, r0
   16200:	bl	142a8 <dcngettext@plt+0x2fdc>
   16204:	ldr	r3, [sp, #24]
   16208:	mov	r0, r6
   1620c:	str	r3, [r7]
   16210:	add	sp, sp, #44	; 0x2c
   16214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16218:	mov	r3, #8
   1621c:	str	r3, [sp]
   16220:	add	r1, sp, #36	; 0x24
   16224:	rsb	r2, r2, #1
   16228:	mvn	r3, #-2147483648	; 0x80000000
   1622c:	mov	r0, #0
   16230:	bl	19584 <dcngettext@plt+0x82b8>
   16234:	mov	r5, r0
   16238:	ldm	r6, {r0, r1}
   1623c:	str	r5, [r4]
   16240:	stm	r5, {r0, r1}
   16244:	b	16128 <dcngettext@plt+0x4e5c>
   16248:	andeq	fp, r2, r8, lsr r1
   1624c:	andeq	fp, r2, r8, lsr #3
   16250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16254:	sub	sp, sp, #132	; 0x84
   16258:	mov	r5, r1
   1625c:	mov	r4, r0
   16260:	mov	r9, r2
   16264:	add	r0, sp, #80	; 0x50
   16268:	mov	r2, #48	; 0x30
   1626c:	mov	r1, #0
   16270:	bl	111ac <memset@plt>
   16274:	cmp	r5, #10
   16278:	beq	16430 <dcngettext@plt+0x5164>
   1627c:	add	lr, sp, #80	; 0x50
   16280:	str	r5, [sp, #80]	; 0x50
   16284:	ldm	lr!, {r0, r1, r2, r3}
   16288:	add	ip, sp, #32
   1628c:	ldr	r6, [pc, #416]	; 16434 <dcngettext@plt+0x5168>
   16290:	stmia	ip!, {r0, r1, r2, r3}
   16294:	ldm	lr!, {r0, r1, r2, r3}
   16298:	stmia	ip!, {r0, r1, r2, r3}
   1629c:	ldm	lr, {r0, r1, r2, r3}
   162a0:	stm	ip, {r0, r1, r2, r3}
   162a4:	bl	11194 <__errno_location@plt>
   162a8:	cmn	r4, #-2147483647	; 0x80000001
   162ac:	ldr	r5, [r6]
   162b0:	mov	r7, r0
   162b4:	movne	r0, #0
   162b8:	moveq	r0, #1
   162bc:	ldr	r3, [r7]
   162c0:	orrs	r0, r0, r4, lsr #31
   162c4:	str	r3, [sp, #24]
   162c8:	bne	16430 <dcngettext@plt+0x5164>
   162cc:	ldr	r2, [r6, #4]
   162d0:	cmp	r4, r2
   162d4:	blt	16334 <dcngettext@plt+0x5068>
   162d8:	add	r8, r6, #8
   162dc:	cmp	r5, r8
   162e0:	str	r2, [sp, #80]	; 0x50
   162e4:	beq	16400 <dcngettext@plt+0x5134>
   162e8:	mov	r3, #8
   162ec:	sub	r2, r4, r2
   162f0:	mov	r0, r5
   162f4:	str	r3, [sp]
   162f8:	add	r2, r2, #1
   162fc:	add	r1, sp, #80	; 0x50
   16300:	mvn	r3, #-2147483648	; 0x80000000
   16304:	bl	19584 <dcngettext@plt+0x82b8>
   16308:	mov	r5, r0
   1630c:	str	r0, [r6]
   16310:	ldr	r0, [r6, #4]
   16314:	ldr	r2, [sp, #80]	; 0x50
   16318:	mov	r1, #0
   1631c:	sub	r2, r2, r0
   16320:	add	r0, r5, r0, lsl #3
   16324:	lsl	r2, r2, #3
   16328:	bl	111ac <memset@plt>
   1632c:	ldr	r3, [sp, #80]	; 0x50
   16330:	str	r3, [r6, #4]
   16334:	add	fp, r5, r4, lsl #3
   16338:	ldr	r1, [sp, #36]	; 0x24
   1633c:	ldr	r8, [r5, r4, lsl #3]
   16340:	ldr	r6, [fp, #4]
   16344:	ldr	r2, [sp, #72]	; 0x48
   16348:	ldr	r3, [sp, #32]
   1634c:	ldr	ip, [sp, #76]	; 0x4c
   16350:	orr	r1, r1, #1
   16354:	add	sl, sp, #40	; 0x28
   16358:	str	r1, [sp, #28]
   1635c:	str	r1, [sp, #4]
   16360:	str	r2, [sp, #12]
   16364:	str	r3, [sp]
   16368:	mov	r0, r6
   1636c:	mov	r1, r8
   16370:	str	ip, [sp, #16]
   16374:	str	sl, [sp, #8]
   16378:	mvn	r3, #0
   1637c:	mov	r2, r9
   16380:	bl	142a8 <dcngettext@plt+0x2fdc>
   16384:	cmp	r8, r0
   16388:	bhi	163ec <dcngettext@plt+0x5120>
   1638c:	ldr	r3, [pc, #164]	; 16438 <dcngettext@plt+0x516c>
   16390:	add	r8, r0, #1
   16394:	cmp	r6, r3
   16398:	str	r8, [r5, r4, lsl #3]
   1639c:	beq	163a8 <dcngettext@plt+0x50dc>
   163a0:	mov	r0, r6
   163a4:	bl	19b14 <dcngettext@plt+0x8848>
   163a8:	mov	r0, r8
   163ac:	bl	19368 <dcngettext@plt+0x809c>
   163b0:	ldr	lr, [sp, #76]	; 0x4c
   163b4:	ldr	r3, [sp, #32]
   163b8:	ldr	ip, [sp, #72]	; 0x48
   163bc:	ldr	r4, [sp, #28]
   163c0:	mov	r2, r9
   163c4:	mov	r1, r8
   163c8:	str	r0, [fp, #4]
   163cc:	str	r3, [sp]
   163d0:	str	sl, [sp, #8]
   163d4:	str	r4, [sp, #4]
   163d8:	str	lr, [sp, #16]
   163dc:	str	ip, [sp, #12]
   163e0:	mvn	r3, #0
   163e4:	mov	r6, r0
   163e8:	bl	142a8 <dcngettext@plt+0x2fdc>
   163ec:	ldr	r3, [sp, #24]
   163f0:	mov	r0, r6
   163f4:	str	r3, [r7]
   163f8:	add	sp, sp, #132	; 0x84
   163fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16400:	mov	r3, #8
   16404:	sub	r2, r4, r2
   16408:	add	r1, sp, #80	; 0x50
   1640c:	str	r3, [sp]
   16410:	add	r2, r2, #1
   16414:	mvn	r3, #-2147483648	; 0x80000000
   16418:	bl	19584 <dcngettext@plt+0x82b8>
   1641c:	mov	r5, r0
   16420:	ldm	r8, {r0, r1}
   16424:	str	r5, [r6]
   16428:	stm	r5, {r0, r1}
   1642c:	b	16310 <dcngettext@plt+0x5044>
   16430:	bl	112b4 <abort@plt>
   16434:	andeq	fp, r2, r8, lsr r1
   16438:	ldrdeq	fp, [r2], -r8
   1643c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16440:	sub	sp, sp, #132	; 0x84
   16444:	mov	r5, r1
   16448:	mov	r4, r0
   1644c:	mov	r9, r2
   16450:	add	r0, sp, #80	; 0x50
   16454:	mov	r2, #48	; 0x30
   16458:	mov	r1, #0
   1645c:	mov	sl, r3
   16460:	bl	111ac <memset@plt>
   16464:	cmp	r5, #10
   16468:	beq	16624 <dcngettext@plt+0x5358>
   1646c:	add	lr, sp, #80	; 0x50
   16470:	str	r5, [sp, #80]	; 0x50
   16474:	ldm	lr!, {r0, r1, r2, r3}
   16478:	add	ip, sp, #32
   1647c:	ldr	r6, [pc, #420]	; 16628 <dcngettext@plt+0x535c>
   16480:	stmia	ip!, {r0, r1, r2, r3}
   16484:	ldm	lr!, {r0, r1, r2, r3}
   16488:	stmia	ip!, {r0, r1, r2, r3}
   1648c:	ldm	lr, {r0, r1, r2, r3}
   16490:	stm	ip, {r0, r1, r2, r3}
   16494:	bl	11194 <__errno_location@plt>
   16498:	cmn	r4, #-2147483647	; 0x80000001
   1649c:	ldr	r5, [r6]
   164a0:	mov	r7, r0
   164a4:	movne	r0, #0
   164a8:	moveq	r0, #1
   164ac:	ldr	r3, [r7]
   164b0:	orrs	r0, r0, r4, lsr #31
   164b4:	str	r3, [sp, #24]
   164b8:	bne	16624 <dcngettext@plt+0x5358>
   164bc:	ldr	r2, [r6, #4]
   164c0:	cmp	r4, r2
   164c4:	blt	16524 <dcngettext@plt+0x5258>
   164c8:	add	r8, r6, #8
   164cc:	cmp	r5, r8
   164d0:	str	r2, [sp, #80]	; 0x50
   164d4:	beq	165f4 <dcngettext@plt+0x5328>
   164d8:	mov	r3, #8
   164dc:	sub	r2, r4, r2
   164e0:	mov	r0, r5
   164e4:	str	r3, [sp]
   164e8:	add	r2, r2, #1
   164ec:	add	r1, sp, #80	; 0x50
   164f0:	mvn	r3, #-2147483648	; 0x80000000
   164f4:	bl	19584 <dcngettext@plt+0x82b8>
   164f8:	mov	r5, r0
   164fc:	str	r0, [r6]
   16500:	ldr	r0, [r6, #4]
   16504:	ldr	r2, [sp, #80]	; 0x50
   16508:	mov	r1, #0
   1650c:	sub	r2, r2, r0
   16510:	add	r0, r5, r0, lsl #3
   16514:	lsl	r2, r2, #3
   16518:	bl	111ac <memset@plt>
   1651c:	ldr	r3, [sp, #80]	; 0x50
   16520:	str	r3, [r6, #4]
   16524:	add	fp, r5, r4, lsl #3
   16528:	ldr	r3, [sp, #32]
   1652c:	ldr	r1, [sp, #36]	; 0x24
   16530:	ldr	r8, [r5, r4, lsl #3]
   16534:	ldr	r6, [fp, #4]
   16538:	ldr	r2, [sp, #72]	; 0x48
   1653c:	ldr	ip, [sp, #76]	; 0x4c
   16540:	orr	r1, r1, #1
   16544:	str	r3, [sp]
   16548:	add	r3, sp, #40	; 0x28
   1654c:	str	r1, [sp, #28]
   16550:	str	r1, [sp, #4]
   16554:	str	r2, [sp, #12]
   16558:	str	r3, [sp, #8]
   1655c:	mov	r0, r6
   16560:	mov	r1, r8
   16564:	str	ip, [sp, #16]
   16568:	mov	r3, sl
   1656c:	mov	r2, r9
   16570:	bl	142a8 <dcngettext@plt+0x2fdc>
   16574:	cmp	r8, r0
   16578:	bhi	165e0 <dcngettext@plt+0x5314>
   1657c:	ldr	r3, [pc, #168]	; 1662c <dcngettext@plt+0x5360>
   16580:	add	r8, r0, #1
   16584:	cmp	r6, r3
   16588:	str	r8, [r5, r4, lsl #3]
   1658c:	beq	16598 <dcngettext@plt+0x52cc>
   16590:	mov	r0, r6
   16594:	bl	19b14 <dcngettext@plt+0x8848>
   16598:	mov	r0, r8
   1659c:	bl	19368 <dcngettext@plt+0x809c>
   165a0:	add	lr, sp, #40	; 0x28
   165a4:	ldr	ip, [sp, #76]	; 0x4c
   165a8:	ldr	r4, [sp, #72]	; 0x48
   165ac:	ldr	r5, [sp, #28]
   165b0:	mov	r3, sl
   165b4:	mov	r2, r9
   165b8:	mov	r1, r8
   165bc:	str	r0, [fp, #4]
   165c0:	str	lr, [sp, #8]
   165c4:	ldr	lr, [sp, #32]
   165c8:	str	r5, [sp, #4]
   165cc:	str	ip, [sp, #16]
   165d0:	str	r4, [sp, #12]
   165d4:	str	lr, [sp]
   165d8:	mov	r6, r0
   165dc:	bl	142a8 <dcngettext@plt+0x2fdc>
   165e0:	ldr	r3, [sp, #24]
   165e4:	mov	r0, r6
   165e8:	str	r3, [r7]
   165ec:	add	sp, sp, #132	; 0x84
   165f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165f4:	mov	r3, #8
   165f8:	sub	r2, r4, r2
   165fc:	add	r1, sp, #80	; 0x50
   16600:	str	r3, [sp]
   16604:	add	r2, r2, #1
   16608:	mvn	r3, #-2147483648	; 0x80000000
   1660c:	bl	19584 <dcngettext@plt+0x82b8>
   16610:	mov	r5, r0
   16614:	ldm	r8, {r0, r1}
   16618:	str	r5, [r6]
   1661c:	stm	r5, {r0, r1}
   16620:	b	16500 <dcngettext@plt+0x5234>
   16624:	bl	112b4 <abort@plt>
   16628:	andeq	fp, r2, r8, lsr r1
   1662c:	ldrdeq	fp, [r2], -r8
   16630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16634:	sub	sp, sp, #124	; 0x7c
   16638:	mov	r4, r0
   1663c:	mov	r9, r1
   16640:	add	r0, sp, #72	; 0x48
   16644:	mov	r2, #48	; 0x30
   16648:	mov	r1, #0
   1664c:	bl	111ac <memset@plt>
   16650:	cmp	r4, #10
   16654:	beq	167e0 <dcngettext@plt+0x5514>
   16658:	add	lr, sp, #72	; 0x48
   1665c:	str	r4, [sp, #72]	; 0x48
   16660:	ldm	lr!, {r0, r1, r2, r3}
   16664:	add	ip, sp, #24
   16668:	ldr	r5, [pc, #372]	; 167e4 <dcngettext@plt+0x5518>
   1666c:	stmia	ip!, {r0, r1, r2, r3}
   16670:	ldm	lr!, {r0, r1, r2, r3}
   16674:	stmia	ip!, {r0, r1, r2, r3}
   16678:	ldm	lr, {r0, r1, r2, r3}
   1667c:	stm	ip, {r0, r1, r2, r3}
   16680:	bl	11194 <__errno_location@plt>
   16684:	ldr	r2, [r5, #4]
   16688:	ldr	r4, [r5]
   1668c:	cmp	r2, #0
   16690:	mov	r7, r0
   16694:	ldr	fp, [r0]
   16698:	bgt	166f4 <dcngettext@plt+0x5428>
   1669c:	add	r6, r5, #8
   166a0:	cmp	r4, r6
   166a4:	str	r2, [sp, #72]	; 0x48
   166a8:	beq	167b0 <dcngettext@plt+0x54e4>
   166ac:	mov	r3, #8
   166b0:	mov	r0, r4
   166b4:	str	r3, [sp]
   166b8:	rsb	r2, r2, #1
   166bc:	add	r1, sp, #72	; 0x48
   166c0:	mvn	r3, #-2147483648	; 0x80000000
   166c4:	bl	19584 <dcngettext@plt+0x82b8>
   166c8:	mov	r4, r0
   166cc:	str	r0, [r5]
   166d0:	ldr	r0, [r5, #4]
   166d4:	ldr	r2, [sp, #72]	; 0x48
   166d8:	mov	r1, #0
   166dc:	sub	r2, r2, r0
   166e0:	add	r0, r4, r0, lsl #3
   166e4:	lsl	r2, r2, #3
   166e8:	bl	111ac <memset@plt>
   166ec:	ldr	r3, [sp, #72]	; 0x48
   166f0:	str	r3, [r5, #4]
   166f4:	ldr	r6, [sp, #28]
   166f8:	ldr	r8, [r4]
   166fc:	ldr	r5, [r4, #4]
   16700:	ldr	r2, [sp, #64]	; 0x40
   16704:	ldr	r3, [sp, #24]
   16708:	ldr	ip, [sp, #68]	; 0x44
   1670c:	orr	r6, r6, #1
   16710:	add	sl, sp, #32
   16714:	str	r2, [sp, #12]
   16718:	str	r3, [sp]
   1671c:	str	r6, [sp, #4]
   16720:	mov	r1, r8
   16724:	mov	r0, r5
   16728:	str	ip, [sp, #16]
   1672c:	str	sl, [sp, #8]
   16730:	mvn	r3, #0
   16734:	mov	r2, r9
   16738:	bl	142a8 <dcngettext@plt+0x2fdc>
   1673c:	cmp	r8, r0
   16740:	bhi	167a0 <dcngettext@plt+0x54d4>
   16744:	ldr	r3, [pc, #156]	; 167e8 <dcngettext@plt+0x551c>
   16748:	add	r8, r0, #1
   1674c:	cmp	r5, r3
   16750:	str	r8, [r4]
   16754:	beq	16760 <dcngettext@plt+0x5494>
   16758:	mov	r0, r5
   1675c:	bl	19b14 <dcngettext@plt+0x8848>
   16760:	mov	r0, r8
   16764:	bl	19368 <dcngettext@plt+0x809c>
   16768:	ldr	lr, [sp, #68]	; 0x44
   1676c:	ldr	r3, [sp, #24]
   16770:	ldr	ip, [sp, #64]	; 0x40
   16774:	mov	r2, r9
   16778:	mov	r1, r8
   1677c:	str	r0, [r4, #4]
   16780:	str	r3, [sp]
   16784:	str	sl, [sp, #8]
   16788:	str	r6, [sp, #4]
   1678c:	str	lr, [sp, #16]
   16790:	str	ip, [sp, #12]
   16794:	mvn	r3, #0
   16798:	mov	r5, r0
   1679c:	bl	142a8 <dcngettext@plt+0x2fdc>
   167a0:	mov	r0, r5
   167a4:	str	fp, [r7]
   167a8:	add	sp, sp, #124	; 0x7c
   167ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167b0:	mov	r3, #8
   167b4:	add	r1, sp, #72	; 0x48
   167b8:	str	r3, [sp]
   167bc:	rsb	r2, r2, #1
   167c0:	mvn	r3, #-2147483648	; 0x80000000
   167c4:	mov	r0, #0
   167c8:	bl	19584 <dcngettext@plt+0x82b8>
   167cc:	mov	r4, r0
   167d0:	ldm	r6, {r0, r1}
   167d4:	str	r4, [r5]
   167d8:	stm	r4, {r0, r1}
   167dc:	b	166d0 <dcngettext@plt+0x5404>
   167e0:	bl	112b4 <abort@plt>
   167e4:	andeq	fp, r2, r8, lsr r1
   167e8:	ldrdeq	fp, [r2], -r8
   167ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167f0:	sub	sp, sp, #132	; 0x84
   167f4:	mov	r4, r0
   167f8:	mov	r9, r1
   167fc:	mov	sl, r2
   16800:	add	r0, sp, #80	; 0x50
   16804:	mov	r2, #48	; 0x30
   16808:	mov	r1, #0
   1680c:	bl	111ac <memset@plt>
   16810:	cmp	r4, #10
   16814:	beq	169a8 <dcngettext@plt+0x56dc>
   16818:	add	lr, sp, #80	; 0x50
   1681c:	str	r4, [sp, #80]	; 0x50
   16820:	ldm	lr!, {r0, r1, r2, r3}
   16824:	add	ip, sp, #32
   16828:	ldr	r5, [pc, #380]	; 169ac <dcngettext@plt+0x56e0>
   1682c:	stmia	ip!, {r0, r1, r2, r3}
   16830:	ldm	lr!, {r0, r1, r2, r3}
   16834:	stmia	ip!, {r0, r1, r2, r3}
   16838:	ldm	lr, {r0, r1, r2, r3}
   1683c:	stm	ip, {r0, r1, r2, r3}
   16840:	bl	11194 <__errno_location@plt>
   16844:	ldr	r2, [r5, #4]
   16848:	ldr	r4, [r5]
   1684c:	cmp	r2, #0
   16850:	ldr	r3, [r0]
   16854:	mov	r7, r0
   16858:	str	r3, [sp, #28]
   1685c:	bgt	168b8 <dcngettext@plt+0x55ec>
   16860:	add	r6, r5, #8
   16864:	cmp	r4, r6
   16868:	str	r2, [sp, #80]	; 0x50
   1686c:	beq	16978 <dcngettext@plt+0x56ac>
   16870:	mov	r3, #8
   16874:	mov	r0, r4
   16878:	str	r3, [sp]
   1687c:	rsb	r2, r2, #1
   16880:	add	r1, sp, #80	; 0x50
   16884:	mvn	r3, #-2147483648	; 0x80000000
   16888:	bl	19584 <dcngettext@plt+0x82b8>
   1688c:	mov	r4, r0
   16890:	str	r0, [r5]
   16894:	ldr	r0, [r5, #4]
   16898:	ldr	r2, [sp, #80]	; 0x50
   1689c:	mov	r1, #0
   168a0:	sub	r2, r2, r0
   168a4:	add	r0, r4, r0, lsl #3
   168a8:	lsl	r2, r2, #3
   168ac:	bl	111ac <memset@plt>
   168b0:	ldr	r3, [sp, #80]	; 0x50
   168b4:	str	r3, [r5, #4]
   168b8:	ldr	r6, [sp, #36]	; 0x24
   168bc:	ldr	r8, [r4]
   168c0:	ldr	r5, [r4, #4]
   168c4:	ldr	r2, [sp, #72]	; 0x48
   168c8:	ldr	r3, [sp, #32]
   168cc:	ldr	ip, [sp, #76]	; 0x4c
   168d0:	orr	r6, r6, #1
   168d4:	add	fp, sp, #40	; 0x28
   168d8:	str	r2, [sp, #12]
   168dc:	str	r3, [sp]
   168e0:	str	r6, [sp, #4]
   168e4:	mov	r1, r8
   168e8:	mov	r0, r5
   168ec:	str	ip, [sp, #16]
   168f0:	str	fp, [sp, #8]
   168f4:	mov	r3, sl
   168f8:	mov	r2, r9
   168fc:	bl	142a8 <dcngettext@plt+0x2fdc>
   16900:	cmp	r8, r0
   16904:	bhi	16964 <dcngettext@plt+0x5698>
   16908:	ldr	r3, [pc, #160]	; 169b0 <dcngettext@plt+0x56e4>
   1690c:	add	r8, r0, #1
   16910:	cmp	r5, r3
   16914:	str	r8, [r4]
   16918:	beq	16924 <dcngettext@plt+0x5658>
   1691c:	mov	r0, r5
   16920:	bl	19b14 <dcngettext@plt+0x8848>
   16924:	mov	r0, r8
   16928:	bl	19368 <dcngettext@plt+0x809c>
   1692c:	ldr	ip, [sp, #76]	; 0x4c
   16930:	ldr	lr, [sp, #32]
   16934:	mov	r3, sl
   16938:	mov	r2, r9
   1693c:	mov	r1, r8
   16940:	str	r0, [r4, #4]
   16944:	ldr	r4, [sp, #72]	; 0x48
   16948:	str	fp, [sp, #8]
   1694c:	str	r6, [sp, #4]
   16950:	str	ip, [sp, #16]
   16954:	str	r4, [sp, #12]
   16958:	str	lr, [sp]
   1695c:	mov	r5, r0
   16960:	bl	142a8 <dcngettext@plt+0x2fdc>
   16964:	ldr	r3, [sp, #28]
   16968:	mov	r0, r5
   1696c:	str	r3, [r7]
   16970:	add	sp, sp, #132	; 0x84
   16974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16978:	mov	r3, #8
   1697c:	add	r1, sp, #80	; 0x50
   16980:	str	r3, [sp]
   16984:	rsb	r2, r2, #1
   16988:	mvn	r3, #-2147483648	; 0x80000000
   1698c:	mov	r0, #0
   16990:	bl	19584 <dcngettext@plt+0x82b8>
   16994:	mov	r4, r0
   16998:	ldm	r6, {r0, r1}
   1699c:	str	r4, [r5]
   169a0:	stm	r4, {r0, r1}
   169a4:	b	16894 <dcngettext@plt+0x55c8>
   169a8:	bl	112b4 <abort@plt>
   169ac:	andeq	fp, r2, r8, lsr r1
   169b0:	ldrdeq	fp, [r2], -r8
   169b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169b8:	mov	r4, r2
   169bc:	ldr	lr, [pc, #432]	; 16b74 <dcngettext@plt+0x58a8>
   169c0:	mov	sl, r0
   169c4:	mov	fp, r1
   169c8:	ldm	lr!, {r0, r1, r2, r3}
   169cc:	sub	sp, sp, #92	; 0x5c
   169d0:	add	ip, sp, #40	; 0x28
   169d4:	lsr	r7, r4, #5
   169d8:	stmia	ip!, {r0, r1, r2, r3}
   169dc:	add	r6, sp, #48	; 0x30
   169e0:	ldm	lr!, {r0, r1, r2, r3}
   169e4:	and	r4, r4, #31
   169e8:	ldr	r5, [pc, #392]	; 16b78 <dcngettext@plt+0x58ac>
   169ec:	stmia	ip!, {r0, r1, r2, r3}
   169f0:	ldm	lr, {r0, r1, r2, r3}
   169f4:	stm	ip, {r0, r1, r2, r3}
   169f8:	ldr	r2, [r6, r7, lsl #2]
   169fc:	lsr	r3, r2, r4
   16a00:	eor	r3, r3, #1
   16a04:	and	r3, r3, #1
   16a08:	eor	r4, r2, r3, lsl r4
   16a0c:	str	r4, [r6, r7, lsl #2]
   16a10:	bl	11194 <__errno_location@plt>
   16a14:	ldr	r2, [r5, #4]
   16a18:	ldr	r4, [r5]
   16a1c:	cmp	r2, #0
   16a20:	ldr	r3, [r0]
   16a24:	mov	r8, r0
   16a28:	str	r3, [sp, #28]
   16a2c:	bgt	16a88 <dcngettext@plt+0x57bc>
   16a30:	add	r7, r5, #8
   16a34:	cmp	r4, r7
   16a38:	str	r2, [sp, #36]	; 0x24
   16a3c:	beq	16b44 <dcngettext@plt+0x5878>
   16a40:	mov	r3, #8
   16a44:	mov	r0, r4
   16a48:	str	r3, [sp]
   16a4c:	rsb	r2, r2, #1
   16a50:	mvn	r3, #-2147483648	; 0x80000000
   16a54:	add	r1, sp, #36	; 0x24
   16a58:	bl	19584 <dcngettext@plt+0x82b8>
   16a5c:	mov	r4, r0
   16a60:	str	r0, [r5]
   16a64:	ldr	r0, [r5, #4]
   16a68:	ldr	r2, [sp, #36]	; 0x24
   16a6c:	mov	r1, #0
   16a70:	sub	r2, r2, r0
   16a74:	add	r0, r4, r0, lsl #3
   16a78:	lsl	r2, r2, #3
   16a7c:	bl	111ac <memset@plt>
   16a80:	ldr	r3, [sp, #36]	; 0x24
   16a84:	str	r3, [r5, #4]
   16a88:	ldr	r7, [sp, #44]	; 0x2c
   16a8c:	ldr	r9, [r4]
   16a90:	ldr	r5, [r4, #4]
   16a94:	ldr	r2, [sp, #80]	; 0x50
   16a98:	ldr	r3, [sp, #40]	; 0x28
   16a9c:	ldr	ip, [sp, #84]	; 0x54
   16aa0:	orr	r7, r7, #1
   16aa4:	str	r2, [sp, #12]
   16aa8:	str	r3, [sp]
   16aac:	str	r7, [sp, #4]
   16ab0:	str	r6, [sp, #8]
   16ab4:	mov	r1, r9
   16ab8:	mov	r0, r5
   16abc:	str	ip, [sp, #16]
   16ac0:	mov	r3, fp
   16ac4:	mov	r2, sl
   16ac8:	bl	142a8 <dcngettext@plt+0x2fdc>
   16acc:	cmp	r9, r0
   16ad0:	bhi	16b30 <dcngettext@plt+0x5864>
   16ad4:	ldr	r3, [pc, #160]	; 16b7c <dcngettext@plt+0x58b0>
   16ad8:	add	r9, r0, #1
   16adc:	cmp	r5, r3
   16ae0:	str	r9, [r4]
   16ae4:	beq	16af0 <dcngettext@plt+0x5824>
   16ae8:	mov	r0, r5
   16aec:	bl	19b14 <dcngettext@plt+0x8848>
   16af0:	mov	r0, r9
   16af4:	bl	19368 <dcngettext@plt+0x809c>
   16af8:	ldr	ip, [sp, #84]	; 0x54
   16afc:	ldr	lr, [sp, #40]	; 0x28
   16b00:	mov	r3, fp
   16b04:	mov	r2, sl
   16b08:	mov	r1, r9
   16b0c:	str	r0, [r4, #4]
   16b10:	ldr	r4, [sp, #80]	; 0x50
   16b14:	str	r6, [sp, #8]
   16b18:	str	r7, [sp, #4]
   16b1c:	str	ip, [sp, #16]
   16b20:	str	r4, [sp, #12]
   16b24:	str	lr, [sp]
   16b28:	mov	r5, r0
   16b2c:	bl	142a8 <dcngettext@plt+0x2fdc>
   16b30:	ldr	r3, [sp, #28]
   16b34:	mov	r0, r5
   16b38:	str	r3, [r8]
   16b3c:	add	sp, sp, #92	; 0x5c
   16b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b44:	mov	r3, #8
   16b48:	str	r3, [sp]
   16b4c:	add	r1, sp, #36	; 0x24
   16b50:	rsb	r2, r2, #1
   16b54:	mvn	r3, #-2147483648	; 0x80000000
   16b58:	mov	r0, #0
   16b5c:	bl	19584 <dcngettext@plt+0x82b8>
   16b60:	mov	r4, r0
   16b64:	ldm	r7, {r0, r1}
   16b68:	str	r4, [r5]
   16b6c:	stm	r4, {r0, r1}
   16b70:	b	16a64 <dcngettext@plt+0x5798>
   16b74:	andeq	fp, r2, r8, lsr #3
   16b78:	andeq	fp, r2, r8, lsr r1
   16b7c:	ldrdeq	fp, [r2], -r8
   16b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b84:	mov	r4, r1
   16b88:	ldr	lr, [pc, #420]	; 16d34 <dcngettext@plt+0x5a68>
   16b8c:	mov	r6, r0
   16b90:	sub	sp, sp, #84	; 0x54
   16b94:	ldm	lr!, {r0, r1, r2, r3}
   16b98:	add	ip, sp, #32
   16b9c:	lsr	r8, r4, #5
   16ba0:	add	r5, sp, #40	; 0x28
   16ba4:	stmia	ip!, {r0, r1, r2, r3}
   16ba8:	and	r4, r4, #31
   16bac:	ldm	lr!, {r0, r1, r2, r3}
   16bb0:	ldr	r7, [pc, #384]	; 16d38 <dcngettext@plt+0x5a6c>
   16bb4:	stmia	ip!, {r0, r1, r2, r3}
   16bb8:	ldm	lr, {r0, r1, r2, r3}
   16bbc:	stm	ip, {r0, r1, r2, r3}
   16bc0:	ldr	r2, [r5, r8, lsl #2]
   16bc4:	lsr	r3, r2, r4
   16bc8:	eor	r3, r3, #1
   16bcc:	and	r3, r3, #1
   16bd0:	eor	r4, r2, r3, lsl r4
   16bd4:	str	r4, [r5, r8, lsl #2]
   16bd8:	bl	11194 <__errno_location@plt>
   16bdc:	ldr	r2, [r7, #4]
   16be0:	ldr	r4, [r7]
   16be4:	cmp	r2, #0
   16be8:	mov	r9, r0
   16bec:	ldr	sl, [r0]
   16bf0:	bgt	16c4c <dcngettext@plt+0x5980>
   16bf4:	add	r8, r7, #8
   16bf8:	cmp	r4, r8
   16bfc:	str	r2, [sp, #28]
   16c00:	beq	16d04 <dcngettext@plt+0x5a38>
   16c04:	mov	r3, #8
   16c08:	mov	r0, r4
   16c0c:	str	r3, [sp]
   16c10:	rsb	r2, r2, #1
   16c14:	mvn	r3, #-2147483648	; 0x80000000
   16c18:	add	r1, sp, #28
   16c1c:	bl	19584 <dcngettext@plt+0x82b8>
   16c20:	mov	r4, r0
   16c24:	str	r0, [r7]
   16c28:	ldr	r0, [r7, #4]
   16c2c:	ldr	r2, [sp, #28]
   16c30:	mov	r1, #0
   16c34:	sub	r2, r2, r0
   16c38:	add	r0, r4, r0, lsl #3
   16c3c:	lsl	r2, r2, #3
   16c40:	bl	111ac <memset@plt>
   16c44:	ldr	r3, [sp, #28]
   16c48:	str	r3, [r7, #4]
   16c4c:	ldr	r8, [sp, #36]	; 0x24
   16c50:	ldr	fp, [r4]
   16c54:	ldr	r7, [r4, #4]
   16c58:	ldr	r2, [sp, #72]	; 0x48
   16c5c:	ldr	r3, [sp, #32]
   16c60:	ldr	ip, [sp, #76]	; 0x4c
   16c64:	orr	r8, r8, #1
   16c68:	str	r2, [sp, #12]
   16c6c:	str	r3, [sp]
   16c70:	str	r8, [sp, #4]
   16c74:	str	r5, [sp, #8]
   16c78:	mov	r1, fp
   16c7c:	mov	r0, r7
   16c80:	str	ip, [sp, #16]
   16c84:	mvn	r3, #0
   16c88:	mov	r2, r6
   16c8c:	bl	142a8 <dcngettext@plt+0x2fdc>
   16c90:	cmp	fp, r0
   16c94:	bhi	16cf4 <dcngettext@plt+0x5a28>
   16c98:	ldr	r3, [pc, #156]	; 16d3c <dcngettext@plt+0x5a70>
   16c9c:	add	fp, r0, #1
   16ca0:	cmp	r7, r3
   16ca4:	str	fp, [r4]
   16ca8:	beq	16cb4 <dcngettext@plt+0x59e8>
   16cac:	mov	r0, r7
   16cb0:	bl	19b14 <dcngettext@plt+0x8848>
   16cb4:	mov	r0, fp
   16cb8:	bl	19368 <dcngettext@plt+0x809c>
   16cbc:	ldr	lr, [sp, #76]	; 0x4c
   16cc0:	ldr	r3, [sp, #32]
   16cc4:	ldr	ip, [sp, #72]	; 0x48
   16cc8:	mov	r2, r6
   16ccc:	mov	r1, fp
   16cd0:	str	r0, [r4, #4]
   16cd4:	str	r3, [sp]
   16cd8:	str	r5, [sp, #8]
   16cdc:	str	r8, [sp, #4]
   16ce0:	str	lr, [sp, #16]
   16ce4:	str	ip, [sp, #12]
   16ce8:	mvn	r3, #0
   16cec:	mov	r7, r0
   16cf0:	bl	142a8 <dcngettext@plt+0x2fdc>
   16cf4:	mov	r0, r7
   16cf8:	str	sl, [r9]
   16cfc:	add	sp, sp, #84	; 0x54
   16d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d04:	mov	r3, #8
   16d08:	str	r3, [sp]
   16d0c:	add	r1, sp, #28
   16d10:	rsb	r2, r2, #1
   16d14:	mvn	r3, #-2147483648	; 0x80000000
   16d18:	mov	r0, #0
   16d1c:	bl	19584 <dcngettext@plt+0x82b8>
   16d20:	mov	r4, r0
   16d24:	ldm	r8, {r0, r1}
   16d28:	str	r4, [r7]
   16d2c:	stm	r4, {r0, r1}
   16d30:	b	16c28 <dcngettext@plt+0x595c>
   16d34:	andeq	fp, r2, r8, lsr #3
   16d38:	andeq	fp, r2, r8, lsr r1
   16d3c:	ldrdeq	fp, [r2], -r8
   16d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d44:	mov	r6, r0
   16d48:	ldr	lr, [pc, #404]	; 16ee4 <dcngettext@plt+0x5c18>
   16d4c:	sub	sp, sp, #84	; 0x54
   16d50:	add	ip, sp, #32
   16d54:	ldm	lr!, {r0, r1, r2, r3}
   16d58:	ldr	r5, [pc, #392]	; 16ee8 <dcngettext@plt+0x5c1c>
   16d5c:	stmia	ip!, {r0, r1, r2, r3}
   16d60:	ldm	lr!, {r0, r1, r2, r3}
   16d64:	ldr	r4, [sp, #44]	; 0x2c
   16d68:	stmia	ip!, {r0, r1, r2, r3}
   16d6c:	ldm	lr, {r0, r1, r2, r3}
   16d70:	mvn	lr, r4
   16d74:	and	lr, lr, #67108864	; 0x4000000
   16d78:	eor	lr, lr, r4
   16d7c:	stm	ip, {r0, r1, r2, r3}
   16d80:	str	lr, [sp, #44]	; 0x2c
   16d84:	bl	11194 <__errno_location@plt>
   16d88:	ldr	r2, [r5, #4]
   16d8c:	ldr	r4, [r5]
   16d90:	cmp	r2, #0
   16d94:	mov	r8, r0
   16d98:	ldr	sl, [r0]
   16d9c:	bgt	16df8 <dcngettext@plt+0x5b2c>
   16da0:	add	r7, r5, #8
   16da4:	cmp	r4, r7
   16da8:	str	r2, [sp, #28]
   16dac:	beq	16eb4 <dcngettext@plt+0x5be8>
   16db0:	mov	r3, #8
   16db4:	mov	r0, r4
   16db8:	str	r3, [sp]
   16dbc:	rsb	r2, r2, #1
   16dc0:	mvn	r3, #-2147483648	; 0x80000000
   16dc4:	add	r1, sp, #28
   16dc8:	bl	19584 <dcngettext@plt+0x82b8>
   16dcc:	mov	r4, r0
   16dd0:	str	r0, [r5]
   16dd4:	ldr	r0, [r5, #4]
   16dd8:	ldr	r2, [sp, #28]
   16ddc:	mov	r1, #0
   16de0:	sub	r2, r2, r0
   16de4:	add	r0, r4, r0, lsl #3
   16de8:	lsl	r2, r2, #3
   16dec:	bl	111ac <memset@plt>
   16df0:	ldr	r3, [sp, #28]
   16df4:	str	r3, [r5, #4]
   16df8:	ldr	r7, [sp, #36]	; 0x24
   16dfc:	ldr	r9, [r4]
   16e00:	ldr	r5, [r4, #4]
   16e04:	ldr	r2, [sp, #72]	; 0x48
   16e08:	ldr	r3, [sp, #32]
   16e0c:	ldr	ip, [sp, #76]	; 0x4c
   16e10:	orr	r7, r7, #1
   16e14:	add	fp, sp, #40	; 0x28
   16e18:	str	r2, [sp, #12]
   16e1c:	str	r3, [sp]
   16e20:	str	r7, [sp, #4]
   16e24:	mov	r1, r9
   16e28:	mov	r0, r5
   16e2c:	str	ip, [sp, #16]
   16e30:	str	fp, [sp, #8]
   16e34:	mvn	r3, #0
   16e38:	mov	r2, r6
   16e3c:	bl	142a8 <dcngettext@plt+0x2fdc>
   16e40:	cmp	r9, r0
   16e44:	bhi	16ea4 <dcngettext@plt+0x5bd8>
   16e48:	ldr	r3, [pc, #156]	; 16eec <dcngettext@plt+0x5c20>
   16e4c:	add	r9, r0, #1
   16e50:	cmp	r5, r3
   16e54:	str	r9, [r4]
   16e58:	beq	16e64 <dcngettext@plt+0x5b98>
   16e5c:	mov	r0, r5
   16e60:	bl	19b14 <dcngettext@plt+0x8848>
   16e64:	mov	r0, r9
   16e68:	bl	19368 <dcngettext@plt+0x809c>
   16e6c:	ldr	lr, [sp, #76]	; 0x4c
   16e70:	ldr	r3, [sp, #32]
   16e74:	ldr	ip, [sp, #72]	; 0x48
   16e78:	mov	r2, r6
   16e7c:	mov	r1, r9
   16e80:	str	r0, [r4, #4]
   16e84:	str	r3, [sp]
   16e88:	str	fp, [sp, #8]
   16e8c:	str	r7, [sp, #4]
   16e90:	str	lr, [sp, #16]
   16e94:	str	ip, [sp, #12]
   16e98:	mvn	r3, #0
   16e9c:	mov	r5, r0
   16ea0:	bl	142a8 <dcngettext@plt+0x2fdc>
   16ea4:	mov	r0, r5
   16ea8:	str	sl, [r8]
   16eac:	add	sp, sp, #84	; 0x54
   16eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16eb4:	mov	r3, #8
   16eb8:	str	r3, [sp]
   16ebc:	add	r1, sp, #28
   16ec0:	rsb	r2, r2, #1
   16ec4:	mvn	r3, #-2147483648	; 0x80000000
   16ec8:	mov	r0, #0
   16ecc:	bl	19584 <dcngettext@plt+0x82b8>
   16ed0:	mov	r4, r0
   16ed4:	ldm	r7, {r0, r1}
   16ed8:	str	r4, [r5]
   16edc:	stm	r4, {r0, r1}
   16ee0:	b	16dd4 <dcngettext@plt+0x5b08>
   16ee4:	andeq	fp, r2, r8, lsr #3
   16ee8:	andeq	fp, r2, r8, lsr r1
   16eec:	ldrdeq	fp, [r2], -r8
   16ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ef4:	mov	r9, r0
   16ef8:	ldr	lr, [pc, #416]	; 170a0 <dcngettext@plt+0x5dd4>
   16efc:	mov	sl, r1
   16f00:	sub	sp, sp, #92	; 0x5c
   16f04:	ldm	lr!, {r0, r1, r2, r3}
   16f08:	add	ip, sp, #40	; 0x28
   16f0c:	ldr	r5, [pc, #400]	; 170a4 <dcngettext@plt+0x5dd8>
   16f10:	stmia	ip!, {r0, r1, r2, r3}
   16f14:	ldm	lr!, {r0, r1, r2, r3}
   16f18:	ldr	r4, [sp, #52]	; 0x34
   16f1c:	stmia	ip!, {r0, r1, r2, r3}
   16f20:	ldm	lr, {r0, r1, r2, r3}
   16f24:	mvn	lr, r4
   16f28:	and	lr, lr, #67108864	; 0x4000000
   16f2c:	eor	lr, lr, r4
   16f30:	stm	ip, {r0, r1, r2, r3}
   16f34:	str	lr, [sp, #52]	; 0x34
   16f38:	bl	11194 <__errno_location@plt>
   16f3c:	ldr	r2, [r5, #4]
   16f40:	ldr	r4, [r5]
   16f44:	cmp	r2, #0
   16f48:	ldr	r3, [r0]
   16f4c:	mov	r7, r0
   16f50:	str	r3, [sp, #28]
   16f54:	bgt	16fb0 <dcngettext@plt+0x5ce4>
   16f58:	add	r6, r5, #8
   16f5c:	cmp	r4, r6
   16f60:	str	r2, [sp, #36]	; 0x24
   16f64:	beq	17070 <dcngettext@plt+0x5da4>
   16f68:	mov	r3, #8
   16f6c:	mov	r0, r4
   16f70:	str	r3, [sp]
   16f74:	rsb	r2, r2, #1
   16f78:	mvn	r3, #-2147483648	; 0x80000000
   16f7c:	add	r1, sp, #36	; 0x24
   16f80:	bl	19584 <dcngettext@plt+0x82b8>
   16f84:	mov	r4, r0
   16f88:	str	r0, [r5]
   16f8c:	ldr	r0, [r5, #4]
   16f90:	ldr	r2, [sp, #36]	; 0x24
   16f94:	mov	r1, #0
   16f98:	sub	r2, r2, r0
   16f9c:	add	r0, r4, r0, lsl #3
   16fa0:	lsl	r2, r2, #3
   16fa4:	bl	111ac <memset@plt>
   16fa8:	ldr	r3, [sp, #36]	; 0x24
   16fac:	str	r3, [r5, #4]
   16fb0:	ldr	r6, [sp, #44]	; 0x2c
   16fb4:	ldr	r8, [r4]
   16fb8:	ldr	r5, [r4, #4]
   16fbc:	ldr	r2, [sp, #80]	; 0x50
   16fc0:	ldr	r3, [sp, #40]	; 0x28
   16fc4:	ldr	ip, [sp, #84]	; 0x54
   16fc8:	orr	r6, r6, #1
   16fcc:	add	fp, sp, #48	; 0x30
   16fd0:	str	r2, [sp, #12]
   16fd4:	str	r3, [sp]
   16fd8:	str	r6, [sp, #4]
   16fdc:	mov	r1, r8
   16fe0:	mov	r0, r5
   16fe4:	str	ip, [sp, #16]
   16fe8:	str	fp, [sp, #8]
   16fec:	mov	r3, sl
   16ff0:	mov	r2, r9
   16ff4:	bl	142a8 <dcngettext@plt+0x2fdc>
   16ff8:	cmp	r8, r0
   16ffc:	bhi	1705c <dcngettext@plt+0x5d90>
   17000:	ldr	r3, [pc, #160]	; 170a8 <dcngettext@plt+0x5ddc>
   17004:	add	r8, r0, #1
   17008:	cmp	r5, r3
   1700c:	str	r8, [r4]
   17010:	beq	1701c <dcngettext@plt+0x5d50>
   17014:	mov	r0, r5
   17018:	bl	19b14 <dcngettext@plt+0x8848>
   1701c:	mov	r0, r8
   17020:	bl	19368 <dcngettext@plt+0x809c>
   17024:	ldr	ip, [sp, #84]	; 0x54
   17028:	ldr	lr, [sp, #40]	; 0x28
   1702c:	mov	r3, sl
   17030:	mov	r2, r9
   17034:	mov	r1, r8
   17038:	str	r0, [r4, #4]
   1703c:	ldr	r4, [sp, #80]	; 0x50
   17040:	str	fp, [sp, #8]
   17044:	str	r6, [sp, #4]
   17048:	str	ip, [sp, #16]
   1704c:	str	r4, [sp, #12]
   17050:	str	lr, [sp]
   17054:	mov	r5, r0
   17058:	bl	142a8 <dcngettext@plt+0x2fdc>
   1705c:	ldr	r3, [sp, #28]
   17060:	mov	r0, r5
   17064:	str	r3, [r7]
   17068:	add	sp, sp, #92	; 0x5c
   1706c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17070:	mov	r3, #8
   17074:	str	r3, [sp]
   17078:	add	r1, sp, #36	; 0x24
   1707c:	rsb	r2, r2, #1
   17080:	mvn	r3, #-2147483648	; 0x80000000
   17084:	mov	r0, #0
   17088:	bl	19584 <dcngettext@plt+0x82b8>
   1708c:	mov	r4, r0
   17090:	ldm	r6, {r0, r1}
   17094:	str	r4, [r5]
   17098:	stm	r4, {r0, r1}
   1709c:	b	16f8c <dcngettext@plt+0x5cc0>
   170a0:	andeq	fp, r2, r8, lsr #3
   170a4:	andeq	fp, r2, r8, lsr r1
   170a8:	ldrdeq	fp, [r2], -r8
   170ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170b0:	sub	sp, sp, #180	; 0xb4
   170b4:	mov	r6, r1
   170b8:	mov	r4, r0
   170bc:	mov	r9, r2
   170c0:	add	r0, sp, #80	; 0x50
   170c4:	mov	r2, #48	; 0x30
   170c8:	mov	r1, #0
   170cc:	bl	111ac <memset@plt>
   170d0:	cmp	r6, #10
   170d4:	beq	172b4 <dcngettext@plt+0x5fe8>
   170d8:	add	r5, sp, #80	; 0x50
   170dc:	str	r6, [sp, #80]	; 0x50
   170e0:	ldm	r5!, {r0, r1, r2, r3}
   170e4:	add	ip, sp, #128	; 0x80
   170e8:	mov	r7, ip
   170ec:	add	lr, sp, #32
   170f0:	stmia	ip!, {r0, r1, r2, r3}
   170f4:	mov	r8, #67108864	; 0x4000000
   170f8:	ldm	r5!, {r0, r1, r2, r3}
   170fc:	ldr	r6, [pc, #436]	; 172b8 <dcngettext@plt+0x5fec>
   17100:	stmia	ip!, {r0, r1, r2, r3}
   17104:	ldm	r5, {r0, r1, r2, r3}
   17108:	stm	ip, {r0, r1, r2, r3}
   1710c:	ldm	r7!, {r0, r1, r2, r3}
   17110:	stmia	lr!, {r0, r1, r2, r3}
   17114:	ldm	r7!, {r0, r1, r2, r3}
   17118:	str	r8, [sp, #44]	; 0x2c
   1711c:	stmia	lr!, {r0, r1, r2, r3}
   17120:	ldm	ip, {r0, r1, r2, r3}
   17124:	stm	lr, {r0, r1, r2, r3}
   17128:	bl	11194 <__errno_location@plt>
   1712c:	cmn	r4, #-2147483647	; 0x80000001
   17130:	ldr	r5, [r6]
   17134:	mov	r7, r0
   17138:	movne	r0, #0
   1713c:	moveq	r0, #1
   17140:	ldr	r3, [r7]
   17144:	orrs	r0, r0, r4, lsr #31
   17148:	str	r3, [sp, #24]
   1714c:	bne	172b4 <dcngettext@plt+0x5fe8>
   17150:	ldr	r2, [r6, #4]
   17154:	cmp	r4, r2
   17158:	blt	171b8 <dcngettext@plt+0x5eec>
   1715c:	add	r8, r6, #8
   17160:	cmp	r5, r8
   17164:	str	r2, [sp, #80]	; 0x50
   17168:	beq	17284 <dcngettext@plt+0x5fb8>
   1716c:	mov	r3, #8
   17170:	sub	r2, r4, r2
   17174:	mov	r0, r5
   17178:	str	r3, [sp]
   1717c:	add	r2, r2, #1
   17180:	add	r1, sp, #80	; 0x50
   17184:	mvn	r3, #-2147483648	; 0x80000000
   17188:	bl	19584 <dcngettext@plt+0x82b8>
   1718c:	mov	r5, r0
   17190:	str	r0, [r6]
   17194:	ldr	r0, [r6, #4]
   17198:	ldr	r2, [sp, #80]	; 0x50
   1719c:	mov	r1, #0
   171a0:	sub	r2, r2, r0
   171a4:	add	r0, r5, r0, lsl #3
   171a8:	lsl	r2, r2, #3
   171ac:	bl	111ac <memset@plt>
   171b0:	ldr	r3, [sp, #80]	; 0x50
   171b4:	str	r3, [r6, #4]
   171b8:	add	fp, r5, r4, lsl #3
   171bc:	ldr	r1, [sp, #36]	; 0x24
   171c0:	ldr	r8, [r5, r4, lsl #3]
   171c4:	ldr	r6, [fp, #4]
   171c8:	ldr	r2, [sp, #72]	; 0x48
   171cc:	ldr	r3, [sp, #32]
   171d0:	ldr	ip, [sp, #76]	; 0x4c
   171d4:	orr	r1, r1, #1
   171d8:	add	sl, sp, #40	; 0x28
   171dc:	str	r1, [sp, #28]
   171e0:	str	r1, [sp, #4]
   171e4:	str	r2, [sp, #12]
   171e8:	str	r3, [sp]
   171ec:	mov	r0, r6
   171f0:	mov	r1, r8
   171f4:	str	ip, [sp, #16]
   171f8:	str	sl, [sp, #8]
   171fc:	mvn	r3, #0
   17200:	mov	r2, r9
   17204:	bl	142a8 <dcngettext@plt+0x2fdc>
   17208:	cmp	r8, r0
   1720c:	bhi	17270 <dcngettext@plt+0x5fa4>
   17210:	ldr	r3, [pc, #164]	; 172bc <dcngettext@plt+0x5ff0>
   17214:	add	r8, r0, #1
   17218:	cmp	r6, r3
   1721c:	str	r8, [r5, r4, lsl #3]
   17220:	beq	1722c <dcngettext@plt+0x5f60>
   17224:	mov	r0, r6
   17228:	bl	19b14 <dcngettext@plt+0x8848>
   1722c:	mov	r0, r8
   17230:	bl	19368 <dcngettext@plt+0x809c>
   17234:	ldr	lr, [sp, #76]	; 0x4c
   17238:	ldr	r3, [sp, #32]
   1723c:	ldr	ip, [sp, #72]	; 0x48
   17240:	ldr	r4, [sp, #28]
   17244:	mov	r2, r9
   17248:	mov	r1, r8
   1724c:	str	r0, [fp, #4]
   17250:	str	r3, [sp]
   17254:	str	sl, [sp, #8]
   17258:	str	r4, [sp, #4]
   1725c:	str	lr, [sp, #16]
   17260:	str	ip, [sp, #12]
   17264:	mvn	r3, #0
   17268:	mov	r6, r0
   1726c:	bl	142a8 <dcngettext@plt+0x2fdc>
   17270:	ldr	r3, [sp, #24]
   17274:	mov	r0, r6
   17278:	str	r3, [r7]
   1727c:	add	sp, sp, #180	; 0xb4
   17280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17284:	mov	r3, #8
   17288:	sub	r2, r4, r2
   1728c:	add	r1, sp, #80	; 0x50
   17290:	str	r3, [sp]
   17294:	add	r2, r2, #1
   17298:	mvn	r3, #-2147483648	; 0x80000000
   1729c:	bl	19584 <dcngettext@plt+0x82b8>
   172a0:	mov	r5, r0
   172a4:	ldm	r8, {r0, r1}
   172a8:	str	r5, [r6]
   172ac:	stm	r5, {r0, r1}
   172b0:	b	17194 <dcngettext@plt+0x5ec8>
   172b4:	bl	112b4 <abort@plt>
   172b8:	andeq	fp, r2, r8, lsr r1
   172bc:	ldrdeq	fp, [r2], -r8
   172c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172c4:	mov	r7, r1
   172c8:	ldr	lr, [pc, #492]	; 174bc <dcngettext@plt+0x61f0>
   172cc:	mov	r8, r2
   172d0:	mov	r4, r0
   172d4:	mov	fp, r3
   172d8:	ldm	lr!, {r0, r1, r2, r3}
   172dc:	sub	sp, sp, #100	; 0x64
   172e0:	add	ip, sp, #48	; 0x30
   172e4:	mov	sl, #10
   172e8:	stmia	ip!, {r0, r1, r2, r3}
   172ec:	cmp	r8, #0
   172f0:	cmpne	r7, #0
   172f4:	ldm	lr!, {r0, r1, r2, r3}
   172f8:	str	sl, [sp, #48]	; 0x30
   172fc:	stmia	ip!, {r0, r1, r2, r3}
   17300:	ldm	lr, {r0, r1, r2, r3}
   17304:	stm	ip, {r0, r1, r2, r3}
   17308:	beq	174b8 <dcngettext@plt+0x61ec>
   1730c:	str	r7, [sp, #88]	; 0x58
   17310:	str	r8, [sp, #92]	; 0x5c
   17314:	bl	11194 <__errno_location@plt>
   17318:	ldr	r6, [pc, #416]	; 174c0 <dcngettext@plt+0x61f4>
   1731c:	cmn	r4, #-2147483647	; 0x80000001
   17320:	ldr	r5, [r6]
   17324:	mov	r9, r0
   17328:	movne	r0, #0
   1732c:	moveq	r0, #1
   17330:	ldr	r3, [r9]
   17334:	orrs	r0, r0, r4, lsr #31
   17338:	str	r3, [sp, #28]
   1733c:	bne	174b8 <dcngettext@plt+0x61ec>
   17340:	ldr	r2, [r6, #4]
   17344:	cmp	r4, r2
   17348:	movlt	r3, sl
   1734c:	blt	173b8 <dcngettext@plt+0x60ec>
   17350:	add	r7, r6, #8
   17354:	cmp	r5, r7
   17358:	str	r2, [sp, #44]	; 0x2c
   1735c:	beq	17488 <dcngettext@plt+0x61bc>
   17360:	mov	r3, #8
   17364:	sub	r2, r4, r2
   17368:	mov	r0, r5
   1736c:	str	r3, [sp]
   17370:	add	r2, r2, #1
   17374:	mvn	r3, #-2147483648	; 0x80000000
   17378:	add	r1, sp, #44	; 0x2c
   1737c:	bl	19584 <dcngettext@plt+0x82b8>
   17380:	mov	r5, r0
   17384:	str	r0, [r6]
   17388:	ldr	r0, [r6, #4]
   1738c:	ldr	r2, [sp, #44]	; 0x2c
   17390:	mov	r1, #0
   17394:	sub	r2, r2, r0
   17398:	add	r0, r5, r0, lsl #3
   1739c:	lsl	r2, r2, #3
   173a0:	bl	111ac <memset@plt>
   173a4:	ldr	r3, [sp, #48]	; 0x30
   173a8:	ldr	r7, [sp, #88]	; 0x58
   173ac:	ldr	r8, [sp, #92]	; 0x5c
   173b0:	ldr	r2, [sp, #44]	; 0x2c
   173b4:	str	r2, [r6, #4]
   173b8:	add	r2, r5, r4, lsl #3
   173bc:	mov	r1, r2
   173c0:	str	r2, [sp, #32]
   173c4:	ldr	r2, [sp, #52]	; 0x34
   173c8:	ldr	r6, [r1, #4]
   173cc:	ldr	sl, [r5, r4, lsl #3]
   173d0:	orr	r2, r2, #1
   173d4:	str	r3, [sp]
   173d8:	add	r3, sp, #56	; 0x38
   173dc:	str	r2, [sp, #36]	; 0x24
   173e0:	str	r2, [sp, #4]
   173e4:	str	r3, [sp, #8]
   173e8:	mov	r0, r6
   173ec:	str	r8, [sp, #16]
   173f0:	str	r7, [sp, #12]
   173f4:	mov	r1, sl
   173f8:	mvn	r3, #0
   173fc:	mov	r2, fp
   17400:	bl	142a8 <dcngettext@plt+0x2fdc>
   17404:	cmp	sl, r0
   17408:	bhi	17474 <dcngettext@plt+0x61a8>
   1740c:	ldr	r3, [pc, #176]	; 174c4 <dcngettext@plt+0x61f8>
   17410:	add	r7, r0, #1
   17414:	cmp	r6, r3
   17418:	str	r7, [r5, r4, lsl #3]
   1741c:	beq	17428 <dcngettext@plt+0x615c>
   17420:	mov	r0, r6
   17424:	bl	19b14 <dcngettext@plt+0x8848>
   17428:	mov	r0, r7
   1742c:	bl	19368 <dcngettext@plt+0x809c>
   17430:	ldr	r3, [sp, #32]
   17434:	ldr	lr, [sp, #92]	; 0x5c
   17438:	ldr	ip, [sp, #88]	; 0x58
   1743c:	ldr	r4, [sp, #36]	; 0x24
   17440:	mov	r2, fp
   17444:	mov	r1, r7
   17448:	str	r0, [r3, #4]
   1744c:	add	r3, sp, #56	; 0x38
   17450:	str	r3, [sp, #8]
   17454:	ldr	r3, [sp, #48]	; 0x30
   17458:	str	r4, [sp, #4]
   1745c:	str	r3, [sp]
   17460:	str	lr, [sp, #16]
   17464:	str	ip, [sp, #12]
   17468:	mvn	r3, #0
   1746c:	mov	r6, r0
   17470:	bl	142a8 <dcngettext@plt+0x2fdc>
   17474:	ldr	r3, [sp, #28]
   17478:	mov	r0, r6
   1747c:	str	r3, [r9]
   17480:	add	sp, sp, #100	; 0x64
   17484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17488:	mov	r3, #8
   1748c:	sub	r2, r4, r2
   17490:	str	r3, [sp]
   17494:	add	r1, sp, #44	; 0x2c
   17498:	add	r2, r2, #1
   1749c:	mvn	r3, #-2147483648	; 0x80000000
   174a0:	bl	19584 <dcngettext@plt+0x82b8>
   174a4:	mov	r5, r0
   174a8:	ldm	r7, {r0, r1}
   174ac:	str	r5, [r6]
   174b0:	stm	r5, {r0, r1}
   174b4:	b	17388 <dcngettext@plt+0x60bc>
   174b8:	bl	112b4 <abort@plt>
   174bc:	andeq	fp, r2, r8, lsr #3
   174c0:	andeq	fp, r2, r8, lsr r1
   174c4:	ldrdeq	fp, [r2], -r8
   174c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174cc:	mov	r7, r1
   174d0:	ldr	lr, [pc, #492]	; 176c4 <dcngettext@plt+0x63f8>
   174d4:	mov	r8, r2
   174d8:	mov	r4, r0
   174dc:	mov	fp, r3
   174e0:	ldm	lr!, {r0, r1, r2, r3}
   174e4:	sub	sp, sp, #100	; 0x64
   174e8:	add	ip, sp, #48	; 0x30
   174ec:	mov	sl, #10
   174f0:	stmia	ip!, {r0, r1, r2, r3}
   174f4:	cmp	r8, #0
   174f8:	cmpne	r7, #0
   174fc:	ldm	lr!, {r0, r1, r2, r3}
   17500:	str	sl, [sp, #48]	; 0x30
   17504:	stmia	ip!, {r0, r1, r2, r3}
   17508:	ldm	lr, {r0, r1, r2, r3}
   1750c:	stm	ip, {r0, r1, r2, r3}
   17510:	beq	176c0 <dcngettext@plt+0x63f4>
   17514:	str	r7, [sp, #88]	; 0x58
   17518:	str	r8, [sp, #92]	; 0x5c
   1751c:	bl	11194 <__errno_location@plt>
   17520:	ldr	r6, [pc, #416]	; 176c8 <dcngettext@plt+0x63fc>
   17524:	cmn	r4, #-2147483647	; 0x80000001
   17528:	ldr	r5, [r6]
   1752c:	mov	r9, r0
   17530:	movne	r0, #0
   17534:	moveq	r0, #1
   17538:	ldr	r3, [r9]
   1753c:	orrs	r0, r0, r4, lsr #31
   17540:	str	r3, [sp, #28]
   17544:	bne	176c0 <dcngettext@plt+0x63f4>
   17548:	ldr	r2, [r6, #4]
   1754c:	cmp	r4, r2
   17550:	movlt	r3, sl
   17554:	blt	175c0 <dcngettext@plt+0x62f4>
   17558:	add	r7, r6, #8
   1755c:	cmp	r5, r7
   17560:	str	r2, [sp, #44]	; 0x2c
   17564:	beq	17690 <dcngettext@plt+0x63c4>
   17568:	mov	r3, #8
   1756c:	sub	r2, r4, r2
   17570:	mov	r0, r5
   17574:	str	r3, [sp]
   17578:	add	r2, r2, #1
   1757c:	mvn	r3, #-2147483648	; 0x80000000
   17580:	add	r1, sp, #44	; 0x2c
   17584:	bl	19584 <dcngettext@plt+0x82b8>
   17588:	mov	r5, r0
   1758c:	str	r0, [r6]
   17590:	ldr	r0, [r6, #4]
   17594:	ldr	r2, [sp, #44]	; 0x2c
   17598:	mov	r1, #0
   1759c:	sub	r2, r2, r0
   175a0:	add	r0, r5, r0, lsl #3
   175a4:	lsl	r2, r2, #3
   175a8:	bl	111ac <memset@plt>
   175ac:	ldr	r3, [sp, #48]	; 0x30
   175b0:	ldr	r7, [sp, #88]	; 0x58
   175b4:	ldr	r8, [sp, #92]	; 0x5c
   175b8:	ldr	r2, [sp, #44]	; 0x2c
   175bc:	str	r2, [r6, #4]
   175c0:	add	r2, r5, r4, lsl #3
   175c4:	mov	r1, r2
   175c8:	str	r2, [sp, #32]
   175cc:	ldr	r2, [sp, #52]	; 0x34
   175d0:	ldr	r6, [r1, #4]
   175d4:	ldr	sl, [r5, r4, lsl #3]
   175d8:	orr	r2, r2, #1
   175dc:	str	r3, [sp]
   175e0:	add	r3, sp, #56	; 0x38
   175e4:	str	r2, [sp, #36]	; 0x24
   175e8:	str	r2, [sp, #4]
   175ec:	str	r3, [sp, #8]
   175f0:	mov	r0, r6
   175f4:	str	r8, [sp, #16]
   175f8:	str	r7, [sp, #12]
   175fc:	mov	r1, sl
   17600:	ldr	r3, [sp, #136]	; 0x88
   17604:	mov	r2, fp
   17608:	bl	142a8 <dcngettext@plt+0x2fdc>
   1760c:	cmp	sl, r0
   17610:	bhi	1767c <dcngettext@plt+0x63b0>
   17614:	ldr	r3, [pc, #176]	; 176cc <dcngettext@plt+0x6400>
   17618:	add	r7, r0, #1
   1761c:	cmp	r6, r3
   17620:	str	r7, [r5, r4, lsl #3]
   17624:	beq	17630 <dcngettext@plt+0x6364>
   17628:	mov	r0, r6
   1762c:	bl	19b14 <dcngettext@plt+0x8848>
   17630:	mov	r0, r7
   17634:	bl	19368 <dcngettext@plt+0x809c>
   17638:	ldr	r3, [sp, #32]
   1763c:	ldr	lr, [sp, #92]	; 0x5c
   17640:	ldr	ip, [sp, #88]	; 0x58
   17644:	ldr	r4, [sp, #36]	; 0x24
   17648:	mov	r2, fp
   1764c:	mov	r1, r7
   17650:	str	r0, [r3, #4]
   17654:	add	r3, sp, #56	; 0x38
   17658:	str	r3, [sp, #8]
   1765c:	ldr	r3, [sp, #48]	; 0x30
   17660:	str	r4, [sp, #4]
   17664:	str	r3, [sp]
   17668:	str	lr, [sp, #16]
   1766c:	str	ip, [sp, #12]
   17670:	ldr	r3, [sp, #136]	; 0x88
   17674:	mov	r6, r0
   17678:	bl	142a8 <dcngettext@plt+0x2fdc>
   1767c:	ldr	r3, [sp, #28]
   17680:	mov	r0, r6
   17684:	str	r3, [r9]
   17688:	add	sp, sp, #100	; 0x64
   1768c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17690:	mov	r3, #8
   17694:	sub	r2, r4, r2
   17698:	str	r3, [sp]
   1769c:	add	r1, sp, #44	; 0x2c
   176a0:	add	r2, r2, #1
   176a4:	mvn	r3, #-2147483648	; 0x80000000
   176a8:	bl	19584 <dcngettext@plt+0x82b8>
   176ac:	mov	r5, r0
   176b0:	ldm	r7, {r0, r1}
   176b4:	str	r5, [r6]
   176b8:	stm	r5, {r0, r1}
   176bc:	b	17590 <dcngettext@plt+0x62c4>
   176c0:	bl	112b4 <abort@plt>
   176c4:	andeq	fp, r2, r8, lsr #3
   176c8:	andeq	fp, r2, r8, lsr r1
   176cc:	ldrdeq	fp, [r2], -r8
   176d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176d4:	mov	r5, r0
   176d8:	ldr	lr, [pc, #452]	; 178a4 <dcngettext@plt+0x65d8>
   176dc:	mov	r6, r1
   176e0:	mov	sl, r2
   176e4:	ldm	lr!, {r0, r1, r2, r3}
   176e8:	sub	sp, sp, #92	; 0x5c
   176ec:	add	ip, sp, #40	; 0x28
   176f0:	cmp	r6, #0
   176f4:	cmpne	r5, #0
   176f8:	stmia	ip!, {r0, r1, r2, r3}
   176fc:	mov	r9, #10
   17700:	ldm	lr!, {r0, r1, r2, r3}
   17704:	moveq	fp, #1
   17708:	movne	fp, #0
   1770c:	str	r9, [sp, #40]	; 0x28
   17710:	stmia	ip!, {r0, r1, r2, r3}
   17714:	ldm	lr, {r0, r1, r2, r3}
   17718:	stm	ip, {r0, r1, r2, r3}
   1771c:	beq	178a0 <dcngettext@plt+0x65d4>
   17720:	str	r5, [sp, #80]	; 0x50
   17724:	str	r6, [sp, #84]	; 0x54
   17728:	bl	11194 <__errno_location@plt>
   1772c:	ldr	r7, [pc, #372]	; 178a8 <dcngettext@plt+0x65dc>
   17730:	ldr	r2, [r7, #4]
   17734:	ldr	r4, [r7]
   17738:	cmp	r2, #0
   1773c:	ldr	r3, [r0]
   17740:	mov	r8, r0
   17744:	str	r3, [sp, #24]
   17748:	movgt	r3, r9
   1774c:	bgt	177b4 <dcngettext@plt+0x64e8>
   17750:	add	r5, r7, #8
   17754:	cmp	r4, r5
   17758:	str	r2, [sp, #36]	; 0x24
   1775c:	beq	17870 <dcngettext@plt+0x65a4>
   17760:	mov	r3, #8
   17764:	mov	r0, r4
   17768:	str	r3, [sp]
   1776c:	rsb	r2, r2, #1
   17770:	mvn	r3, #-2147483648	; 0x80000000
   17774:	add	r1, sp, #36	; 0x24
   17778:	bl	19584 <dcngettext@plt+0x82b8>
   1777c:	mov	r4, r0
   17780:	str	r0, [r7]
   17784:	ldr	r0, [r7, #4]
   17788:	ldr	r2, [sp, #36]	; 0x24
   1778c:	mov	r1, #0
   17790:	sub	r2, r2, r0
   17794:	add	r0, r4, r0, lsl #3
   17798:	lsl	r2, r2, #3
   1779c:	bl	111ac <memset@plt>
   177a0:	ldr	r3, [sp, #40]	; 0x28
   177a4:	ldr	r5, [sp, #80]	; 0x50
   177a8:	ldr	r6, [sp, #84]	; 0x54
   177ac:	ldr	r2, [sp, #36]	; 0x24
   177b0:	str	r2, [r7, #4]
   177b4:	ldr	r2, [sp, #44]	; 0x2c
   177b8:	ldr	r9, [r4]
   177bc:	ldr	r7, [r4, #4]
   177c0:	orr	r2, r2, #1
   177c4:	add	fp, sp, #48	; 0x30
   177c8:	str	r2, [sp, #28]
   177cc:	str	r2, [sp, #4]
   177d0:	str	r3, [sp]
   177d4:	str	r6, [sp, #16]
   177d8:	str	r5, [sp, #12]
   177dc:	mov	r1, r9
   177e0:	mov	r0, r7
   177e4:	str	fp, [sp, #8]
   177e8:	mvn	r3, #0
   177ec:	mov	r2, sl
   177f0:	bl	142a8 <dcngettext@plt+0x2fdc>
   177f4:	cmp	r9, r0
   177f8:	bhi	1785c <dcngettext@plt+0x6590>
   177fc:	ldr	r3, [pc, #168]	; 178ac <dcngettext@plt+0x65e0>
   17800:	add	r5, r0, #1
   17804:	cmp	r7, r3
   17808:	str	r5, [r4]
   1780c:	beq	17818 <dcngettext@plt+0x654c>
   17810:	mov	r0, r7
   17814:	bl	19b14 <dcngettext@plt+0x8848>
   17818:	mov	r0, r5
   1781c:	bl	19368 <dcngettext@plt+0x809c>
   17820:	ldr	lr, [sp, #84]	; 0x54
   17824:	ldr	r3, [sp, #40]	; 0x28
   17828:	ldr	ip, [sp, #80]	; 0x50
   1782c:	mov	r2, sl
   17830:	mov	r1, r5
   17834:	str	r0, [r4, #4]
   17838:	ldr	r4, [sp, #28]
   1783c:	str	r3, [sp]
   17840:	str	fp, [sp, #8]
   17844:	str	r4, [sp, #4]
   17848:	str	lr, [sp, #16]
   1784c:	str	ip, [sp, #12]
   17850:	mvn	r3, #0
   17854:	mov	r7, r0
   17858:	bl	142a8 <dcngettext@plt+0x2fdc>
   1785c:	ldr	r3, [sp, #24]
   17860:	mov	r0, r7
   17864:	str	r3, [r8]
   17868:	add	sp, sp, #92	; 0x5c
   1786c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17870:	mov	r3, #8
   17874:	str	r3, [sp]
   17878:	add	r1, sp, #36	; 0x24
   1787c:	rsb	r2, r2, #1
   17880:	mov	r0, fp
   17884:	mvn	r3, #-2147483648	; 0x80000000
   17888:	bl	19584 <dcngettext@plt+0x82b8>
   1788c:	mov	r4, r0
   17890:	ldm	r5, {r0, r1}
   17894:	str	r4, [r7]
   17898:	stm	r4, {r0, r1}
   1789c:	b	17784 <dcngettext@plt+0x64b8>
   178a0:	bl	112b4 <abort@plt>
   178a4:	andeq	fp, r2, r8, lsr #3
   178a8:	andeq	fp, r2, r8, lsr r1
   178ac:	ldrdeq	fp, [r2], -r8
   178b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178b4:	mov	r5, r0
   178b8:	ldr	lr, [pc, #464]	; 17a90 <dcngettext@plt+0x67c4>
   178bc:	mov	r6, r1
   178c0:	mov	sl, r2
   178c4:	mov	fp, r3
   178c8:	ldm	lr!, {r0, r1, r2, r3}
   178cc:	sub	sp, sp, #92	; 0x5c
   178d0:	add	ip, sp, #40	; 0x28
   178d4:	cmp	r6, #0
   178d8:	cmpne	r5, #0
   178dc:	stmia	ip!, {r0, r1, r2, r3}
   178e0:	moveq	r4, #1
   178e4:	ldm	lr!, {r0, r1, r2, r3}
   178e8:	movne	r4, #0
   178ec:	mov	r9, #10
   178f0:	str	r4, [sp, #28]
   178f4:	stmia	ip!, {r0, r1, r2, r3}
   178f8:	ldm	lr, {r0, r1, r2, r3}
   178fc:	str	r9, [sp, #40]	; 0x28
   17900:	stm	ip, {r0, r1, r2, r3}
   17904:	beq	17a8c <dcngettext@plt+0x67c0>
   17908:	str	r5, [sp, #80]	; 0x50
   1790c:	str	r6, [sp, #84]	; 0x54
   17910:	bl	11194 <__errno_location@plt>
   17914:	ldr	r7, [pc, #376]	; 17a94 <dcngettext@plt+0x67c8>
   17918:	ldr	r2, [r7, #4]
   1791c:	ldr	r4, [r7]
   17920:	cmp	r2, #0
   17924:	ldr	r3, [r0]
   17928:	mov	r8, r0
   1792c:	str	r3, [sp, #24]
   17930:	movgt	r3, r9
   17934:	bgt	1799c <dcngettext@plt+0x66d0>
   17938:	add	r5, r7, #8
   1793c:	cmp	r4, r5
   17940:	str	r2, [sp, #36]	; 0x24
   17944:	beq	17a5c <dcngettext@plt+0x6790>
   17948:	mov	r3, #8
   1794c:	mov	r0, r4
   17950:	str	r3, [sp]
   17954:	rsb	r2, r2, #1
   17958:	mvn	r3, #-2147483648	; 0x80000000
   1795c:	add	r1, sp, #36	; 0x24
   17960:	bl	19584 <dcngettext@plt+0x82b8>
   17964:	mov	r4, r0
   17968:	str	r0, [r7]
   1796c:	ldr	r0, [r7, #4]
   17970:	ldr	r2, [sp, #36]	; 0x24
   17974:	mov	r1, #0
   17978:	sub	r2, r2, r0
   1797c:	add	r0, r4, r0, lsl #3
   17980:	lsl	r2, r2, #3
   17984:	bl	111ac <memset@plt>
   17988:	ldr	r3, [sp, #40]	; 0x28
   1798c:	ldr	r5, [sp, #80]	; 0x50
   17990:	ldr	r6, [sp, #84]	; 0x54
   17994:	ldr	r2, [sp, #36]	; 0x24
   17998:	str	r2, [r7, #4]
   1799c:	ldr	r2, [sp, #44]	; 0x2c
   179a0:	ldr	r9, [r4]
   179a4:	ldr	r7, [r4, #4]
   179a8:	orr	r2, r2, #1
   179ac:	str	r3, [sp]
   179b0:	add	r3, sp, #48	; 0x30
   179b4:	str	r2, [sp, #28]
   179b8:	str	r2, [sp, #4]
   179bc:	str	r3, [sp, #8]
   179c0:	str	r6, [sp, #16]
   179c4:	str	r5, [sp, #12]
   179c8:	mov	r1, r9
   179cc:	mov	r0, r7
   179d0:	mov	r3, fp
   179d4:	mov	r2, sl
   179d8:	bl	142a8 <dcngettext@plt+0x2fdc>
   179dc:	cmp	r9, r0
   179e0:	bhi	17a48 <dcngettext@plt+0x677c>
   179e4:	ldr	r3, [pc, #172]	; 17a98 <dcngettext@plt+0x67cc>
   179e8:	add	r5, r0, #1
   179ec:	cmp	r7, r3
   179f0:	str	r5, [r4]
   179f4:	beq	17a00 <dcngettext@plt+0x6734>
   179f8:	mov	r0, r7
   179fc:	bl	19b14 <dcngettext@plt+0x8848>
   17a00:	mov	r0, r5
   17a04:	bl	19368 <dcngettext@plt+0x809c>
   17a08:	add	lr, sp, #48	; 0x30
   17a0c:	ldr	ip, [sp, #84]	; 0x54
   17a10:	mov	r1, r5
   17a14:	ldr	r5, [sp, #28]
   17a18:	mov	r3, fp
   17a1c:	mov	r2, sl
   17a20:	str	r0, [r4, #4]
   17a24:	ldr	r4, [sp, #80]	; 0x50
   17a28:	str	lr, [sp, #8]
   17a2c:	ldr	lr, [sp, #40]	; 0x28
   17a30:	str	r5, [sp, #4]
   17a34:	str	ip, [sp, #16]
   17a38:	str	r4, [sp, #12]
   17a3c:	str	lr, [sp]
   17a40:	mov	r7, r0
   17a44:	bl	142a8 <dcngettext@plt+0x2fdc>
   17a48:	ldr	r3, [sp, #24]
   17a4c:	mov	r0, r7
   17a50:	str	r3, [r8]
   17a54:	add	sp, sp, #92	; 0x5c
   17a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a5c:	mov	r3, #8
   17a60:	str	r3, [sp]
   17a64:	add	r1, sp, #36	; 0x24
   17a68:	rsb	r2, r2, #1
   17a6c:	ldr	r0, [sp, #28]
   17a70:	mvn	r3, #-2147483648	; 0x80000000
   17a74:	bl	19584 <dcngettext@plt+0x82b8>
   17a78:	mov	r4, r0
   17a7c:	ldm	r5, {r0, r1}
   17a80:	str	r4, [r7]
   17a84:	stm	r4, {r0, r1}
   17a88:	b	1796c <dcngettext@plt+0x66a0>
   17a8c:	bl	112b4 <abort@plt>
   17a90:	andeq	fp, r2, r8, lsr #3
   17a94:	andeq	fp, r2, r8, lsr r1
   17a98:	ldrdeq	fp, [r2], -r8
   17a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17aa0:	sub	sp, sp, #52	; 0x34
   17aa4:	mov	r5, r0
   17aa8:	mov	sl, r1
   17aac:	mov	fp, r2
   17ab0:	bl	11194 <__errno_location@plt>
   17ab4:	ldr	r4, [pc, #404]	; 17c50 <dcngettext@plt+0x6984>
   17ab8:	cmn	r5, #-2147483647	; 0x80000001
   17abc:	ldr	r6, [r4]
   17ac0:	mov	r8, r0
   17ac4:	movne	r0, #0
   17ac8:	moveq	r0, #1
   17acc:	ldr	r3, [r8]
   17ad0:	orrs	r0, r0, r5, lsr #31
   17ad4:	str	r3, [sp, #28]
   17ad8:	bne	17c4c <dcngettext@plt+0x6980>
   17adc:	ldr	r2, [r4, #4]
   17ae0:	cmp	r5, r2
   17ae4:	blt	17b44 <dcngettext@plt+0x6878>
   17ae8:	add	r7, r4, #8
   17aec:	cmp	r6, r7
   17af0:	str	r2, [sp, #44]	; 0x2c
   17af4:	beq	17c1c <dcngettext@plt+0x6950>
   17af8:	mov	r3, #8
   17afc:	sub	r2, r5, r2
   17b00:	mov	r0, r6
   17b04:	str	r3, [sp]
   17b08:	add	r2, r2, #1
   17b0c:	mvn	r3, #-2147483648	; 0x80000000
   17b10:	add	r1, sp, #44	; 0x2c
   17b14:	bl	19584 <dcngettext@plt+0x82b8>
   17b18:	mov	r6, r0
   17b1c:	str	r0, [r4]
   17b20:	ldr	r0, [r4, #4]
   17b24:	ldr	r2, [sp, #44]	; 0x2c
   17b28:	mov	r1, #0
   17b2c:	sub	r2, r2, r0
   17b30:	add	r0, r6, r0, lsl #3
   17b34:	lsl	r2, r2, #3
   17b38:	bl	111ac <memset@plt>
   17b3c:	ldr	r3, [sp, #44]	; 0x2c
   17b40:	str	r3, [r4, #4]
   17b44:	ldr	r2, [r4, #56]	; 0x38
   17b48:	add	r3, r6, r5, lsl #3
   17b4c:	ldr	r1, [r4, #20]
   17b50:	ldr	r7, [r3, #4]
   17b54:	ldr	r9, [r6, r5, lsl #3]
   17b58:	ldr	ip, [r4, #60]	; 0x3c
   17b5c:	str	r3, [sp, #32]
   17b60:	ldr	r3, [r4, #16]
   17b64:	str	r2, [sp, #12]
   17b68:	ldr	r2, [pc, #228]	; 17c54 <dcngettext@plt+0x6988>
   17b6c:	orr	r1, r1, #1
   17b70:	str	r1, [sp, #36]	; 0x24
   17b74:	str	r1, [sp, #4]
   17b78:	str	r2, [sp, #8]
   17b7c:	str	r3, [sp]
   17b80:	mov	r0, r7
   17b84:	mov	r1, r9
   17b88:	str	ip, [sp, #16]
   17b8c:	mov	r3, fp
   17b90:	mov	r2, sl
   17b94:	bl	142a8 <dcngettext@plt+0x2fdc>
   17b98:	cmp	r9, r0
   17b9c:	bhi	17c08 <dcngettext@plt+0x693c>
   17ba0:	ldr	r3, [pc, #176]	; 17c58 <dcngettext@plt+0x698c>
   17ba4:	add	r9, r0, #1
   17ba8:	cmp	r7, r3
   17bac:	str	r9, [r6, r5, lsl #3]
   17bb0:	beq	17bbc <dcngettext@plt+0x68f0>
   17bb4:	mov	r0, r7
   17bb8:	bl	19b14 <dcngettext@plt+0x8848>
   17bbc:	mov	r0, r9
   17bc0:	bl	19368 <dcngettext@plt+0x809c>
   17bc4:	ldr	ip, [sp, #32]
   17bc8:	ldr	lr, [r4, #60]	; 0x3c
   17bcc:	ldr	r5, [r4, #56]	; 0x38
   17bd0:	mov	r3, fp
   17bd4:	mov	r2, sl
   17bd8:	mov	r1, r9
   17bdc:	str	r0, [ip, #4]
   17be0:	ldr	ip, [r4, #16]
   17be4:	ldr	r4, [pc, #104]	; 17c54 <dcngettext@plt+0x6988>
   17be8:	str	lr, [sp, #16]
   17bec:	str	r4, [sp, #8]
   17bf0:	ldr	r4, [sp, #36]	; 0x24
   17bf4:	str	r5, [sp, #12]
   17bf8:	str	r4, [sp, #4]
   17bfc:	str	ip, [sp]
   17c00:	mov	r7, r0
   17c04:	bl	142a8 <dcngettext@plt+0x2fdc>
   17c08:	ldr	r3, [sp, #28]
   17c0c:	mov	r0, r7
   17c10:	str	r3, [r8]
   17c14:	add	sp, sp, #52	; 0x34
   17c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c1c:	mov	r3, #8
   17c20:	sub	r2, r5, r2
   17c24:	str	r3, [sp]
   17c28:	add	r1, sp, #44	; 0x2c
   17c2c:	add	r2, r2, #1
   17c30:	mvn	r3, #-2147483648	; 0x80000000
   17c34:	bl	19584 <dcngettext@plt+0x82b8>
   17c38:	mov	r6, r0
   17c3c:	ldm	r7, {r0, r1}
   17c40:	str	r6, [r4]
   17c44:	stm	r6, {r0, r1}
   17c48:	b	17b20 <dcngettext@plt+0x6854>
   17c4c:	bl	112b4 <abort@plt>
   17c50:	andeq	fp, r2, r8, lsr r1
   17c54:	andeq	fp, r2, r0, asr r1
   17c58:	ldrdeq	fp, [r2], -r8
   17c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c60:	sub	sp, sp, #44	; 0x2c
   17c64:	mov	r9, r0
   17c68:	mov	sl, r1
   17c6c:	bl	11194 <__errno_location@plt>
   17c70:	ldr	r4, [pc, #360]	; 17de0 <dcngettext@plt+0x6b14>
   17c74:	ldr	r2, [r4, #4]
   17c78:	ldr	r5, [r4]
   17c7c:	cmp	r2, #0
   17c80:	ldr	r3, [r0]
   17c84:	mov	r7, r0
   17c88:	str	r3, [sp, #24]
   17c8c:	bgt	17ce8 <dcngettext@plt+0x6a1c>
   17c90:	add	r6, r4, #8
   17c94:	cmp	r5, r6
   17c98:	str	r2, [sp, #36]	; 0x24
   17c9c:	beq	17db0 <dcngettext@plt+0x6ae4>
   17ca0:	mov	r3, #8
   17ca4:	mov	r0, r5
   17ca8:	str	r3, [sp]
   17cac:	rsb	r2, r2, #1
   17cb0:	mvn	r3, #-2147483648	; 0x80000000
   17cb4:	add	r1, sp, #36	; 0x24
   17cb8:	bl	19584 <dcngettext@plt+0x82b8>
   17cbc:	mov	r5, r0
   17cc0:	str	r0, [r4]
   17cc4:	ldr	r0, [r4, #4]
   17cc8:	ldr	r2, [sp, #36]	; 0x24
   17ccc:	mov	r1, #0
   17cd0:	sub	r2, r2, r0
   17cd4:	add	r0, r5, r0, lsl #3
   17cd8:	lsl	r2, r2, #3
   17cdc:	bl	111ac <memset@plt>
   17ce0:	ldr	r3, [sp, #36]	; 0x24
   17ce4:	str	r3, [r4, #4]
   17ce8:	ldr	r1, [r4, #20]
   17cec:	ldr	r8, [r5]
   17cf0:	ldr	r6, [r5, #4]
   17cf4:	ldr	r2, [r4, #56]	; 0x38
   17cf8:	ldr	r3, [r4, #16]
   17cfc:	ldr	ip, [r4, #60]	; 0x3c
   17d00:	ldr	fp, [pc, #220]	; 17de4 <dcngettext@plt+0x6b18>
   17d04:	orr	r1, r1, #1
   17d08:	str	r1, [sp, #28]
   17d0c:	str	r1, [sp, #4]
   17d10:	str	r2, [sp, #12]
   17d14:	str	r3, [sp]
   17d18:	mov	r1, r8
   17d1c:	mov	r0, r6
   17d20:	str	ip, [sp, #16]
   17d24:	str	fp, [sp, #8]
   17d28:	mov	r3, sl
   17d2c:	mov	r2, r9
   17d30:	bl	142a8 <dcngettext@plt+0x2fdc>
   17d34:	cmp	r8, r0
   17d38:	bhi	17d9c <dcngettext@plt+0x6ad0>
   17d3c:	ldr	r3, [pc, #164]	; 17de8 <dcngettext@plt+0x6b1c>
   17d40:	add	r8, r0, #1
   17d44:	cmp	r6, r3
   17d48:	str	r8, [r5]
   17d4c:	beq	17d58 <dcngettext@plt+0x6a8c>
   17d50:	mov	r0, r6
   17d54:	bl	19b14 <dcngettext@plt+0x8848>
   17d58:	mov	r0, r8
   17d5c:	bl	19368 <dcngettext@plt+0x809c>
   17d60:	ldr	lr, [r4, #60]	; 0x3c
   17d64:	ldr	ip, [r4, #16]
   17d68:	mov	r3, sl
   17d6c:	mov	r2, r9
   17d70:	mov	r1, r8
   17d74:	str	r0, [r5, #4]
   17d78:	ldr	r5, [r4, #56]	; 0x38
   17d7c:	ldr	r4, [sp, #28]
   17d80:	str	fp, [sp, #8]
   17d84:	str	r4, [sp, #4]
   17d88:	str	lr, [sp, #16]
   17d8c:	str	r5, [sp, #12]
   17d90:	str	ip, [sp]
   17d94:	mov	r6, r0
   17d98:	bl	142a8 <dcngettext@plt+0x2fdc>
   17d9c:	ldr	r3, [sp, #24]
   17da0:	mov	r0, r6
   17da4:	str	r3, [r7]
   17da8:	add	sp, sp, #44	; 0x2c
   17dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17db0:	mov	r3, #8
   17db4:	str	r3, [sp]
   17db8:	add	r1, sp, #36	; 0x24
   17dbc:	rsb	r2, r2, #1
   17dc0:	mvn	r3, #-2147483648	; 0x80000000
   17dc4:	mov	r0, #0
   17dc8:	bl	19584 <dcngettext@plt+0x82b8>
   17dcc:	mov	r5, r0
   17dd0:	ldm	r6, {r0, r1}
   17dd4:	str	r5, [r4]
   17dd8:	stm	r5, {r0, r1}
   17ddc:	b	17cc4 <dcngettext@plt+0x69f8>
   17de0:	andeq	fp, r2, r8, lsr r1
   17de4:	andeq	fp, r2, r0, asr r1
   17de8:	ldrdeq	fp, [r2], -r8
   17dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17df0:	sub	sp, sp, #44	; 0x2c
   17df4:	mov	r5, r0
   17df8:	mov	sl, r1
   17dfc:	bl	11194 <__errno_location@plt>
   17e00:	ldr	r4, [pc, #396]	; 17f94 <dcngettext@plt+0x6cc8>
   17e04:	cmn	r5, #-2147483647	; 0x80000001
   17e08:	ldr	r6, [r4]
   17e0c:	mov	r8, r0
   17e10:	movne	r0, #0
   17e14:	moveq	r0, #1
   17e18:	ldr	r3, [r8]
   17e1c:	orrs	r0, r0, r5, lsr #31
   17e20:	str	r3, [sp, #24]
   17e24:	bne	17f90 <dcngettext@plt+0x6cc4>
   17e28:	ldr	r2, [r4, #4]
   17e2c:	cmp	r5, r2
   17e30:	blt	17e90 <dcngettext@plt+0x6bc4>
   17e34:	add	r7, r4, #8
   17e38:	cmp	r6, r7
   17e3c:	str	r2, [sp, #36]	; 0x24
   17e40:	beq	17f60 <dcngettext@plt+0x6c94>
   17e44:	mov	r3, #8
   17e48:	sub	r2, r5, r2
   17e4c:	mov	r0, r6
   17e50:	str	r3, [sp]
   17e54:	add	r2, r2, #1
   17e58:	mvn	r3, #-2147483648	; 0x80000000
   17e5c:	add	r1, sp, #36	; 0x24
   17e60:	bl	19584 <dcngettext@plt+0x82b8>
   17e64:	mov	r6, r0
   17e68:	str	r0, [r4]
   17e6c:	ldr	r0, [r4, #4]
   17e70:	ldr	r2, [sp, #36]	; 0x24
   17e74:	mov	r1, #0
   17e78:	sub	r2, r2, r0
   17e7c:	add	r0, r6, r0, lsl #3
   17e80:	lsl	r2, r2, #3
   17e84:	bl	111ac <memset@plt>
   17e88:	ldr	r3, [sp, #36]	; 0x24
   17e8c:	str	r3, [r4, #4]
   17e90:	ldr	r2, [r4, #56]	; 0x38
   17e94:	add	fp, r6, r5, lsl #3
   17e98:	ldr	r1, [r4, #20]
   17e9c:	ldr	r9, [r6, r5, lsl #3]
   17ea0:	ldr	r7, [fp, #4]
   17ea4:	ldr	r3, [r4, #16]
   17ea8:	ldr	ip, [r4, #60]	; 0x3c
   17eac:	str	r2, [sp, #12]
   17eb0:	ldr	r2, [pc, #224]	; 17f98 <dcngettext@plt+0x6ccc>
   17eb4:	orr	r1, r1, #1
   17eb8:	str	r1, [sp, #28]
   17ebc:	str	r1, [sp, #4]
   17ec0:	str	r2, [sp, #8]
   17ec4:	str	r3, [sp]
   17ec8:	mov	r0, r7
   17ecc:	mov	r1, r9
   17ed0:	str	ip, [sp, #16]
   17ed4:	mvn	r3, #0
   17ed8:	mov	r2, sl
   17edc:	bl	142a8 <dcngettext@plt+0x2fdc>
   17ee0:	cmp	r9, r0
   17ee4:	bhi	17f4c <dcngettext@plt+0x6c80>
   17ee8:	ldr	r3, [pc, #172]	; 17f9c <dcngettext@plt+0x6cd0>
   17eec:	add	r9, r0, #1
   17ef0:	cmp	r7, r3
   17ef4:	str	r9, [r6, r5, lsl #3]
   17ef8:	beq	17f04 <dcngettext@plt+0x6c38>
   17efc:	mov	r0, r7
   17f00:	bl	19b14 <dcngettext@plt+0x8848>
   17f04:	mov	r0, r9
   17f08:	bl	19368 <dcngettext@plt+0x809c>
   17f0c:	ldr	ip, [r4, #60]	; 0x3c
   17f10:	ldr	r3, [r4, #16]
   17f14:	ldr	lr, [r4, #56]	; 0x38
   17f18:	ldr	r4, [pc, #120]	; 17f98 <dcngettext@plt+0x6ccc>
   17f1c:	mov	r2, sl
   17f20:	mov	r1, r9
   17f24:	str	r0, [fp, #4]
   17f28:	str	r4, [sp, #8]
   17f2c:	ldr	r4, [sp, #28]
   17f30:	str	r3, [sp]
   17f34:	str	r4, [sp, #4]
   17f38:	str	ip, [sp, #16]
   17f3c:	str	lr, [sp, #12]
   17f40:	mvn	r3, #0
   17f44:	mov	r7, r0
   17f48:	bl	142a8 <dcngettext@plt+0x2fdc>
   17f4c:	ldr	r3, [sp, #24]
   17f50:	mov	r0, r7
   17f54:	str	r3, [r8]
   17f58:	add	sp, sp, #44	; 0x2c
   17f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f60:	mov	r3, #8
   17f64:	sub	r2, r5, r2
   17f68:	str	r3, [sp]
   17f6c:	add	r1, sp, #36	; 0x24
   17f70:	add	r2, r2, #1
   17f74:	mvn	r3, #-2147483648	; 0x80000000
   17f78:	bl	19584 <dcngettext@plt+0x82b8>
   17f7c:	mov	r6, r0
   17f80:	ldm	r7, {r0, r1}
   17f84:	str	r6, [r4]
   17f88:	stm	r6, {r0, r1}
   17f8c:	b	17e6c <dcngettext@plt+0x6ba0>
   17f90:	bl	112b4 <abort@plt>
   17f94:	andeq	fp, r2, r8, lsr r1
   17f98:	andeq	fp, r2, r0, asr r1
   17f9c:	ldrdeq	fp, [r2], -r8
   17fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17fa4:	sub	sp, sp, #44	; 0x2c
   17fa8:	mov	sl, r0
   17fac:	bl	11194 <__errno_location@plt>
   17fb0:	ldr	r4, [pc, #348]	; 18114 <dcngettext@plt+0x6e48>
   17fb4:	ldr	r2, [r4, #4]
   17fb8:	ldr	r5, [r4]
   17fbc:	cmp	r2, #0
   17fc0:	ldr	r3, [r0]
   17fc4:	mov	r8, r0
   17fc8:	str	r3, [sp, #28]
   17fcc:	bgt	18028 <dcngettext@plt+0x6d5c>
   17fd0:	add	r6, r4, #8
   17fd4:	cmp	r5, r6
   17fd8:	str	r2, [sp, #36]	; 0x24
   17fdc:	beq	180e4 <dcngettext@plt+0x6e18>
   17fe0:	mov	r3, #8
   17fe4:	mov	r0, r5
   17fe8:	str	r3, [sp]
   17fec:	rsb	r2, r2, #1
   17ff0:	mvn	r3, #-2147483648	; 0x80000000
   17ff4:	add	r1, sp, #36	; 0x24
   17ff8:	bl	19584 <dcngettext@plt+0x82b8>
   17ffc:	mov	r5, r0
   18000:	str	r0, [r4]
   18004:	ldr	r0, [r4, #4]
   18008:	ldr	r2, [sp, #36]	; 0x24
   1800c:	mov	r1, #0
   18010:	sub	r2, r2, r0
   18014:	add	r0, r5, r0, lsl #3
   18018:	lsl	r2, r2, #3
   1801c:	bl	111ac <memset@plt>
   18020:	ldr	r3, [sp, #36]	; 0x24
   18024:	str	r3, [r4, #4]
   18028:	ldr	r7, [r4, #20]
   1802c:	ldr	r9, [r5]
   18030:	ldr	r6, [r5, #4]
   18034:	ldr	r2, [r4, #56]	; 0x38
   18038:	ldr	r3, [r4, #16]
   1803c:	ldr	ip, [r4, #60]	; 0x3c
   18040:	ldr	fp, [pc, #208]	; 18118 <dcngettext@plt+0x6e4c>
   18044:	orr	r7, r7, #1
   18048:	str	r2, [sp, #12]
   1804c:	str	r3, [sp]
   18050:	str	r7, [sp, #4]
   18054:	mov	r1, r9
   18058:	mov	r0, r6
   1805c:	str	ip, [sp, #16]
   18060:	str	fp, [sp, #8]
   18064:	mvn	r3, #0
   18068:	mov	r2, sl
   1806c:	bl	142a8 <dcngettext@plt+0x2fdc>
   18070:	cmp	r9, r0
   18074:	bhi	180d0 <dcngettext@plt+0x6e04>
   18078:	ldr	r3, [pc, #156]	; 1811c <dcngettext@plt+0x6e50>
   1807c:	add	r9, r0, #1
   18080:	cmp	r6, r3
   18084:	str	r9, [r5]
   18088:	beq	18094 <dcngettext@plt+0x6dc8>
   1808c:	mov	r0, r6
   18090:	bl	19b14 <dcngettext@plt+0x8848>
   18094:	mov	r0, r9
   18098:	bl	19368 <dcngettext@plt+0x809c>
   1809c:	ldr	ip, [r4, #60]	; 0x3c
   180a0:	ldr	r3, [r4, #16]
   180a4:	ldr	lr, [r4, #56]	; 0x38
   180a8:	mov	r2, sl
   180ac:	mov	r1, r9
   180b0:	str	r0, [r5, #4]
   180b4:	str	r3, [sp]
   180b8:	stmib	sp, {r7, fp}
   180bc:	str	ip, [sp, #16]
   180c0:	str	lr, [sp, #12]
   180c4:	mvn	r3, #0
   180c8:	mov	r6, r0
   180cc:	bl	142a8 <dcngettext@plt+0x2fdc>
   180d0:	ldr	r3, [sp, #28]
   180d4:	mov	r0, r6
   180d8:	str	r3, [r8]
   180dc:	add	sp, sp, #44	; 0x2c
   180e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180e4:	mov	r3, #8
   180e8:	str	r3, [sp]
   180ec:	add	r1, sp, #36	; 0x24
   180f0:	rsb	r2, r2, #1
   180f4:	mvn	r3, #-2147483648	; 0x80000000
   180f8:	mov	r0, #0
   180fc:	bl	19584 <dcngettext@plt+0x82b8>
   18100:	mov	r5, r0
   18104:	ldm	r6, {r0, r1}
   18108:	str	r5, [r4]
   1810c:	stm	r5, {r0, r1}
   18110:	b	18004 <dcngettext@plt+0x6d38>
   18114:	andeq	fp, r2, r8, lsr r1
   18118:	andeq	fp, r2, r0, asr r1
   1811c:	ldrdeq	fp, [r2], -r8
   18120:	push	{r4, r5, r6, lr}
   18124:	mov	r5, r0
   18128:	mov	r0, #33	; 0x21
   1812c:	bl	19340 <dcngettext@plt+0x8074>
   18130:	add	r1, r5, #44	; 0x2c
   18134:	mov	r2, #32
   18138:	mov	r5, #0
   1813c:	mov	r4, r0
   18140:	bl	111b8 <strncpy@plt>
   18144:	mov	r0, r4
   18148:	strb	r5, [r4, #32]
   1814c:	bl	1117c <strlen@plt>
   18150:	add	r0, r4, r0
   18154:	cmp	r4, r0
   18158:	bcs	18168 <dcngettext@plt+0x6e9c>
   1815c:	ldrb	r3, [r0, #-1]
   18160:	cmp	r3, #32
   18164:	beq	18170 <dcngettext@plt+0x6ea4>
   18168:	mov	r0, r4
   1816c:	pop	{r4, r5, r6, pc}
   18170:	sub	r0, r0, #1
   18174:	cmp	r0, r4
   18178:	strb	r5, [r0]
   1817c:	beq	18168 <dcngettext@plt+0x6e9c>
   18180:	ldrb	r3, [r0, #-1]!
   18184:	cmp	r3, #32
   18188:	beq	18174 <dcngettext@plt+0x6ea8>
   1818c:	mov	r0, r4
   18190:	pop	{r4, r5, r6, pc}
   18194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18198:	sub	sp, sp, #28
   1819c:	mov	r8, r3
   181a0:	add	sl, sp, #24
   181a4:	mov	ip, #0
   181a8:	and	fp, r8, #2
   181ac:	mov	r7, ip
   181b0:	str	r1, [sp, #8]
   181b4:	str	r2, [sp, #12]
   181b8:	str	ip, [sl, #-4]!
   181bc:	mov	r9, ip
   181c0:	bl	10fe4 <utmpxname@plt>
   181c4:	bl	11050 <setutxent@plt>
   181c8:	cmp	fp, #0
   181cc:	mov	r5, r7
   181d0:	mov	r6, r7
   181d4:	and	r8, r8, #1
   181d8:	beq	1825c <dcngettext@plt+0x6f90>
   181dc:	cmp	r8, #0
   181e0:	beq	1832c <dcngettext@plt+0x7060>
   181e4:	bl	112c0 <getutxent@plt>
   181e8:	subs	r4, r0, #0
   181ec:	beq	182f8 <dcngettext@plt+0x702c>
   181f0:	ldrb	r2, [r4, #44]	; 0x2c
   181f4:	ldrsh	r3, [r4]
   181f8:	cmp	r2, #0
   181fc:	sub	r3, r3, #7
   18200:	clz	r3, r3
   18204:	lsr	r3, r3, #5
   18208:	moveq	r3, #0
   1820c:	cmp	r3, #0
   18210:	beq	181e4 <dcngettext@plt+0x6f18>
   18214:	ldr	r3, [r4, #4]
   18218:	mov	r1, r6
   1821c:	subs	r0, r3, #0
   18220:	ble	18230 <dcngettext@plt+0x6f64>
   18224:	bl	11158 <kill@plt>
   18228:	cmp	r0, #0
   1822c:	blt	18318 <dcngettext@plt+0x704c>
   18230:	ldr	r3, [sp, #20]
   18234:	cmp	r5, r3
   18238:	beq	182c8 <dcngettext@plt+0x6ffc>
   1823c:	add	r0, r9, r7
   18240:	mov	r1, r4
   18244:	mov	r2, #384	; 0x180
   18248:	bl	11008 <memcpy@plt>
   1824c:	cmp	fp, #0
   18250:	add	r5, r5, #1
   18254:	add	r7, r7, #384	; 0x180
   18258:	bne	181dc <dcngettext@plt+0x6f10>
   1825c:	cmp	r8, #0
   18260:	beq	182ec <dcngettext@plt+0x7020>
   18264:	bl	112c0 <getutxent@plt>
   18268:	subs	r4, r0, #0
   1826c:	beq	182f8 <dcngettext@plt+0x702c>
   18270:	ldrb	r3, [r4, #44]	; 0x2c
   18274:	ldrsh	r2, [r4]
   18278:	adds	r3, r3, #0
   1827c:	movne	r3, #1
   18280:	cmp	r2, #7
   18284:	movne	r3, #0
   18288:	cmp	r3, #0
   1828c:	beq	18230 <dcngettext@plt+0x6f64>
   18290:	ldr	r3, [r4, #4]
   18294:	mov	r1, r6
   18298:	subs	r0, r3, #0
   1829c:	ble	18230 <dcngettext@plt+0x6f64>
   182a0:	bl	11158 <kill@plt>
   182a4:	cmp	r0, #0
   182a8:	bge	18230 <dcngettext@plt+0x6f64>
   182ac:	bl	11194 <__errno_location@plt>
   182b0:	ldr	r3, [r0]
   182b4:	cmp	r3, #3
   182b8:	beq	18264 <dcngettext@plt+0x6f98>
   182bc:	ldr	r3, [sp, #20]
   182c0:	cmp	r5, r3
   182c4:	bne	1823c <dcngettext@plt+0x6f70>
   182c8:	mov	r3, #384	; 0x180
   182cc:	str	r3, [sp]
   182d0:	mov	r0, r9
   182d4:	mvn	r3, #0
   182d8:	mov	r2, #1
   182dc:	mov	r1, sl
   182e0:	bl	19584 <dcngettext@plt+0x82b8>
   182e4:	mov	r9, r0
   182e8:	b	1823c <dcngettext@plt+0x6f70>
   182ec:	bl	112c0 <getutxent@plt>
   182f0:	subs	r4, r0, #0
   182f4:	bne	18230 <dcngettext@plt+0x6f64>
   182f8:	bl	11218 <endutxent@plt>
   182fc:	ldr	r3, [sp, #8]
   18300:	mov	r0, #0
   18304:	str	r5, [r3]
   18308:	ldr	r3, [sp, #12]
   1830c:	str	r9, [r3]
   18310:	add	sp, sp, #28
   18314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18318:	bl	11194 <__errno_location@plt>
   1831c:	ldr	r3, [r0]
   18320:	cmp	r3, #3
   18324:	bne	18230 <dcngettext@plt+0x6f64>
   18328:	b	181e4 <dcngettext@plt+0x6f18>
   1832c:	bl	112c0 <getutxent@plt>
   18330:	cmp	r0, #0
   18334:	beq	182f8 <dcngettext@plt+0x702c>
   18338:	ldrb	r2, [r0, #44]	; 0x2c
   1833c:	ldrsh	r3, [r0]
   18340:	cmp	r2, #0
   18344:	sub	r3, r3, #7
   18348:	clz	r3, r3
   1834c:	lsr	r3, r3, #5
   18350:	moveq	r3, #0
   18354:	cmp	r3, #0
   18358:	beq	1832c <dcngettext@plt+0x7060>
   1835c:	mov	r4, r0
   18360:	b	18230 <dcngettext@plt+0x6f64>
   18364:	push	{r4, r5, r6, r7, r8, lr}
   18368:	mov	r5, r0
   1836c:	ldr	r0, [pc, #296]	; 1849c <dcngettext@plt+0x71d0>
   18370:	bl	110e0 <getenv@plt>
   18374:	ldrb	r3, [r5, #4]
   18378:	subs	r6, r0, #0
   1837c:	beq	18470 <dcngettext@plt+0x71a4>
   18380:	cmp	r3, #0
   18384:	beq	183a8 <dcngettext@plt+0x70dc>
   18388:	mov	r1, r6
   1838c:	add	r0, r5, #5
   18390:	bl	10fc0 <strcmp@plt>
   18394:	cmp	r0, #0
   18398:	bne	183a8 <dcngettext@plt+0x70dc>
   1839c:	mov	r4, #1
   183a0:	mov	r0, r4
   183a4:	pop	{r4, r5, r6, r7, r8, pc}
   183a8:	mov	r0, r6
   183ac:	bl	1117c <strlen@plt>
   183b0:	add	r7, r0, #1
   183b4:	cmp	r7, #58	; 0x3a
   183b8:	movls	r0, #64	; 0x40
   183bc:	addhi	r0, r0, #10
   183c0:	bichi	r0, r0, #3
   183c4:	bl	19a10 <dcngettext@plt+0x8744>
   183c8:	subs	r4, r0, #0
   183cc:	beq	18494 <dcngettext@plt+0x71c8>
   183d0:	mov	r3, r4
   183d4:	mov	r8, #0
   183d8:	mov	r2, #1
   183dc:	strb	r2, [r4, #4]
   183e0:	str	r8, [r4]
   183e4:	mov	r1, r6
   183e8:	strb	r8, [r3, #5]!
   183ec:	mov	r2, r7
   183f0:	mov	r0, r3
   183f4:	bl	11008 <memcpy@plt>
   183f8:	strb	r8, [r0, r7]
   183fc:	ldrb	r3, [r5, #4]
   18400:	cmp	r3, #0
   18404:	beq	18454 <dcngettext@plt+0x7188>
   18408:	add	r1, r5, #5
   1840c:	mov	r2, #1
   18410:	ldr	r0, [pc, #132]	; 1849c <dcngettext@plt+0x71d0>
   18414:	bl	11188 <setenv@plt>
   18418:	cmp	r0, #0
   1841c:	beq	18464 <dcngettext@plt+0x7198>
   18420:	bl	11194 <__errno_location@plt>
   18424:	cmp	r4, #1
   18428:	mov	r6, r0
   1842c:	ldr	r7, [r0]
   18430:	beq	18448 <dcngettext@plt+0x717c>
   18434:	ldr	r5, [r4]
   18438:	mov	r0, r4
   1843c:	bl	19b14 <dcngettext@plt+0x8848>
   18440:	subs	r4, r5, #0
   18444:	bne	18434 <dcngettext@plt+0x7168>
   18448:	str	r7, [r6]
   1844c:	mov	r4, #0
   18450:	b	183a0 <dcngettext@plt+0x70d4>
   18454:	ldr	r0, [pc, #64]	; 1849c <dcngettext@plt+0x71d0>
   18458:	bl	1129c <unsetenv@plt>
   1845c:	cmp	r0, #0
   18460:	bne	18420 <dcngettext@plt+0x7154>
   18464:	bl	1108c <tzset@plt>
   18468:	mov	r0, r4
   1846c:	pop	{r4, r5, r6, r7, r8, pc}
   18470:	cmp	r3, #0
   18474:	beq	1839c <dcngettext@plt+0x70d0>
   18478:	mov	r0, #64	; 0x40
   1847c:	bl	19a10 <dcngettext@plt+0x8744>
   18480:	subs	r4, r0, #0
   18484:	strne	r6, [r4]
   18488:	strbne	r6, [r4, #4]
   1848c:	strbne	r6, [r4, #5]
   18490:	bne	183fc <dcngettext@plt+0x7130>
   18494:	mov	r4, #0
   18498:	b	183a0 <dcngettext@plt+0x70d4>
   1849c:			; <UNDEFINED> instruction: 0x0001a8b0
   184a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   184a4:	ldr	r6, [r1, #40]	; 0x28
   184a8:	cmp	r6, #0
   184ac:	beq	185a8 <dcngettext@plt+0x72dc>
   184b0:	cmp	r1, r6
   184b4:	mov	r7, r1
   184b8:	mov	r5, r0
   184bc:	bhi	184cc <dcngettext@plt+0x7200>
   184c0:	add	r3, r1, #44	; 0x2c
   184c4:	cmp	r6, r3
   184c8:	bcc	185a8 <dcngettext@plt+0x72dc>
   184cc:	ldrb	r3, [r6]
   184d0:	cmp	r3, #0
   184d4:	addne	r4, r5, #5
   184d8:	beq	185a0 <dcngettext@plt+0x72d4>
   184dc:	mov	r1, r6
   184e0:	mov	r0, r4
   184e4:	bl	10fc0 <strcmp@plt>
   184e8:	add	r2, r5, #5
   184ec:	cmp	r0, #0
   184f0:	mov	r0, r4
   184f4:	beq	18594 <dcngettext@plt+0x72c8>
   184f8:	ldrb	r3, [r4]
   184fc:	cmp	r3, #0
   18500:	bne	18518 <dcngettext@plt+0x724c>
   18504:	cmp	r4, r2
   18508:	bne	185b0 <dcngettext@plt+0x72e4>
   1850c:	ldrb	r3, [r5, #4]
   18510:	cmp	r3, #0
   18514:	beq	185b0 <dcngettext@plt+0x72e4>
   18518:	bl	1117c <strlen@plt>
   1851c:	add	r0, r0, #1
   18520:	ldrb	r3, [r4, r0]!
   18524:	cmp	r3, #0
   18528:	bne	184dc <dcngettext@plt+0x7210>
   1852c:	ldr	r3, [r5]
   18530:	cmp	r3, #0
   18534:	addne	r4, r3, #5
   18538:	movne	r5, r3
   1853c:	b	184dc <dcngettext@plt+0x7210>
   18540:	cmp	r8, #58	; 0x3a
   18544:	addhi	r0, r0, #10
   18548:	bichi	r0, r0, #3
   1854c:	movls	r0, #64	; 0x40
   18550:	bl	19a10 <dcngettext@plt+0x8744>
   18554:	subs	r9, r0, #0
   18558:	beq	185e8 <dcngettext@plt+0x731c>
   1855c:	mov	r3, r9
   18560:	mov	sl, #0
   18564:	mov	r2, #1
   18568:	strb	r2, [r9, #4]
   1856c:	str	sl, [r9]
   18570:	mov	r1, r6
   18574:	strb	sl, [r3, #5]!
   18578:	mov	r2, r8
   1857c:	mov	r0, r3
   18580:	bl	11008 <memcpy@plt>
   18584:	mov	r4, r0
   18588:	strb	sl, [r0, r8]
   1858c:	str	r9, [r5]
   18590:	strb	sl, [r9, #4]
   18594:	str	r4, [r7, #40]	; 0x28
   18598:	mov	r0, #1
   1859c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   185a0:	ldr	r4, [pc, #76]	; 185f4 <dcngettext@plt+0x7328>
   185a4:	b	18594 <dcngettext@plt+0x72c8>
   185a8:	mov	r0, #1
   185ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   185b0:	mov	r0, r6
   185b4:	bl	1117c <strlen@plt>
   185b8:	add	r3, r5, #64	; 0x40
   185bc:	sub	r3, r3, r4
   185c0:	add	r8, r0, #1
   185c4:	cmp	r8, r3
   185c8:	bge	18540 <dcngettext@plt+0x7274>
   185cc:	mov	r1, r6
   185d0:	mov	r2, r8
   185d4:	mov	r0, r4
   185d8:	bl	11008 <memcpy@plt>
   185dc:	mov	r3, #0
   185e0:	strb	r3, [r4, r8]
   185e4:	b	18594 <dcngettext@plt+0x72c8>
   185e8:	mov	r0, r9
   185ec:	str	r9, [r5]
   185f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   185f4:	andeq	sl, r1, ip, lsl #10
   185f8:	push	{r4, r5, r6, r7, r8, lr}
   185fc:	subs	r7, r0, #0
   18600:	beq	1865c <dcngettext@plt+0x7390>
   18604:	bl	1117c <strlen@plt>
   18608:	add	r5, r0, #1
   1860c:	cmp	r5, #58	; 0x3a
   18610:	addhi	r0, r0, #10
   18614:	bichi	r0, r0, #3
   18618:	movls	r0, #64	; 0x40
   1861c:	bl	19a10 <dcngettext@plt+0x8744>
   18620:	subs	r4, r0, #0
   18624:	beq	18654 <dcngettext@plt+0x7388>
   18628:	mov	r3, r4
   1862c:	mov	r6, #0
   18630:	mov	r2, #1
   18634:	strb	r2, [r4, #4]
   18638:	str	r6, [r4]
   1863c:	mov	r1, r7
   18640:	strb	r6, [r3, #5]!
   18644:	mov	r2, r5
   18648:	mov	r0, r3
   1864c:	bl	11008 <memcpy@plt>
   18650:	strb	r6, [r0, r5]
   18654:	mov	r0, r4
   18658:	pop	{r4, r5, r6, r7, r8, pc}
   1865c:	mov	r0, #64	; 0x40
   18660:	bl	19a10 <dcngettext@plt+0x8744>
   18664:	subs	r4, r0, #0
   18668:	beq	18654 <dcngettext@plt+0x7388>
   1866c:	str	r7, [r4]
   18670:	strb	r7, [r4, #4]
   18674:	strb	r7, [r4, #5]
   18678:	mov	r0, r4
   1867c:	pop	{r4, r5, r6, r7, r8, pc}
   18680:	cmp	r0, #1
   18684:	bxeq	lr
   18688:	cmp	r0, #0
   1868c:	beq	186a8 <dcngettext@plt+0x73dc>
   18690:	push	{r4, lr}
   18694:	ldr	r4, [r0]
   18698:	bl	19b14 <dcngettext@plt+0x8848>
   1869c:	subs	r0, r4, #0
   186a0:	bne	18694 <dcngettext@plt+0x73c8>
   186a4:	pop	{r4, pc}
   186a8:	bx	lr
   186ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   186b0:	subs	r8, r0, #0
   186b4:	mov	r5, r1
   186b8:	mov	r6, r2
   186bc:	beq	1878c <dcngettext@plt+0x74c0>
   186c0:	bl	18364 <dcngettext@plt+0x7098>
   186c4:	subs	r4, r0, #0
   186c8:	beq	18774 <dcngettext@plt+0x74a8>
   186cc:	mov	r0, r5
   186d0:	mov	r1, r6
   186d4:	bl	11068 <localtime_r@plt>
   186d8:	subs	r7, r0, #0
   186dc:	beq	1876c <dcngettext@plt+0x74a0>
   186e0:	mov	r0, r8
   186e4:	mov	r1, r6
   186e8:	bl	184a0 <dcngettext@plt+0x71d4>
   186ec:	cmp	r4, #1
   186f0:	mov	r7, r0
   186f4:	beq	18750 <dcngettext@plt+0x7484>
   186f8:	bl	11194 <__errno_location@plt>
   186fc:	ldrb	r3, [r4, #4]
   18700:	cmp	r3, #0
   18704:	mov	r8, r0
   18708:	ldr	r9, [r0]
   1870c:	beq	18780 <dcngettext@plt+0x74b4>
   18710:	mov	r2, #1
   18714:	add	r1, r4, #5
   18718:	ldr	r0, [pc, #124]	; 1879c <dcngettext@plt+0x74d0>
   1871c:	bl	11188 <setenv@plt>
   18720:	cmp	r0, #0
   18724:	beq	18760 <dcngettext@plt+0x7494>
   18728:	ldr	r9, [r8]
   1872c:	mov	sl, #0
   18730:	ldr	r5, [r4]
   18734:	mov	r0, r4
   18738:	bl	19b14 <dcngettext@plt+0x8848>
   1873c:	subs	r4, r5, #0
   18740:	bne	18730 <dcngettext@plt+0x7464>
   18744:	cmp	sl, #0
   18748:	str	r9, [r8]
   1874c:	beq	18774 <dcngettext@plt+0x74a8>
   18750:	cmp	r7, #0
   18754:	beq	18774 <dcngettext@plt+0x74a8>
   18758:	mov	r0, r6
   1875c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18760:	bl	1108c <tzset@plt>
   18764:	mov	sl, #1
   18768:	b	18730 <dcngettext@plt+0x7464>
   1876c:	cmp	r4, #1
   18770:	bne	186f8 <dcngettext@plt+0x742c>
   18774:	mov	r6, #0
   18778:	mov	r0, r6
   1877c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18780:	ldr	r0, [pc, #20]	; 1879c <dcngettext@plt+0x74d0>
   18784:	bl	1129c <unsetenv@plt>
   18788:	b	18720 <dcngettext@plt+0x7454>
   1878c:	mov	r0, r5
   18790:	mov	r1, r2
   18794:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   18798:	b	10fb4 <gmtime_r@plt>
   1879c:			; <UNDEFINED> instruction: 0x0001a8b0
   187a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187a4:	subs	r5, r0, #0
   187a8:	sub	sp, sp, #52	; 0x34
   187ac:	mov	r6, r1
   187b0:	beq	188e0 <dcngettext@plt+0x7614>
   187b4:	bl	18364 <dcngettext@plt+0x7098>
   187b8:	subs	r4, r0, #0
   187bc:	beq	188f8 <dcngettext@plt+0x762c>
   187c0:	ldm	r6, {r1, r2, ip}
   187c4:	ldr	r0, [r6, #12]
   187c8:	ldr	r3, [r6, #16]
   187cc:	str	r1, [sp, #4]
   187d0:	str	r2, [sp, #8]
   187d4:	ldr	r1, [r6, #20]
   187d8:	ldr	r2, [r6, #32]
   187dc:	str	r0, [sp, #16]
   187e0:	str	r3, [sp, #20]
   187e4:	add	r0, sp, #4
   187e8:	mvn	r3, #0
   187ec:	str	r3, [sp, #32]
   187f0:	str	ip, [sp, #12]
   187f4:	str	r1, [sp, #24]
   187f8:	str	r2, [sp, #36]	; 0x24
   187fc:	bl	10fcc <mktime@plt>
   18800:	ldr	r3, [sp, #32]
   18804:	cmp	r3, #0
   18808:	mov	r8, r0
   1880c:	blt	188ac <dcngettext@plt+0x75e0>
   18810:	mov	r0, r5
   18814:	add	r1, sp, #4
   18818:	bl	184a0 <dcngettext@plt+0x71d4>
   1881c:	cmp	r4, #1
   18820:	mov	sl, r0
   18824:	beq	18878 <dcngettext@plt+0x75ac>
   18828:	bl	11194 <__errno_location@plt>
   1882c:	ldrb	r3, [r4, #4]
   18830:	cmp	r3, #0
   18834:	mov	r7, r0
   18838:	ldr	r9, [r0]
   1883c:	bne	188bc <dcngettext@plt+0x75f0>
   18840:	ldr	r0, [pc, #184]	; 18900 <dcngettext@plt+0x7634>
   18844:	bl	1129c <unsetenv@plt>
   18848:	cmp	r0, #0
   1884c:	beq	188d4 <dcngettext@plt+0x7608>
   18850:	ldr	r9, [r7]
   18854:	mov	fp, #0
   18858:	ldr	r5, [r4]
   1885c:	mov	r0, r4
   18860:	bl	19b14 <dcngettext@plt+0x8848>
   18864:	subs	r4, r5, #0
   18868:	bne	18858 <dcngettext@plt+0x758c>
   1886c:	cmp	fp, #0
   18870:	str	r9, [r7]
   18874:	beq	188f8 <dcngettext@plt+0x762c>
   18878:	cmp	sl, #0
   1887c:	beq	188f8 <dcngettext@plt+0x762c>
   18880:	add	lr, sp, #4
   18884:	mov	ip, r6
   18888:	ldm	lr!, {r0, r1, r2, r3}
   1888c:	stmia	ip!, {r0, r1, r2, r3}
   18890:	ldm	lr!, {r0, r1, r2, r3}
   18894:	stmia	ip!, {r0, r1, r2, r3}
   18898:	ldm	lr, {r0, r1, r2}
   1889c:	stm	ip, {r0, r1, r2}
   188a0:	mov	r0, r8
   188a4:	add	sp, sp, #52	; 0x34
   188a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   188ac:	cmp	r4, #1
   188b0:	beq	188f8 <dcngettext@plt+0x762c>
   188b4:	mov	sl, #0
   188b8:	b	18828 <dcngettext@plt+0x755c>
   188bc:	mov	r2, #1
   188c0:	add	r1, r4, #5
   188c4:	ldr	r0, [pc, #52]	; 18900 <dcngettext@plt+0x7634>
   188c8:	bl	11188 <setenv@plt>
   188cc:	cmp	r0, #0
   188d0:	bne	18850 <dcngettext@plt+0x7584>
   188d4:	bl	1108c <tzset@plt>
   188d8:	mov	fp, #1
   188dc:	b	18858 <dcngettext@plt+0x758c>
   188e0:	mov	r0, r1
   188e4:	bl	1126c <timegm@plt>
   188e8:	mov	r8, r0
   188ec:	mov	r0, r8
   188f0:	add	sp, sp, #52	; 0x34
   188f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   188f8:	mvn	r8, #0
   188fc:	b	188a0 <dcngettext@plt+0x75d4>
   18900:			; <UNDEFINED> instruction: 0x0001a8b0
   18904:	push	{r4, r5, r6, lr}
   18908:	sub	sp, sp, #32
   1890c:	cmp	r1, #0
   18910:	mov	r4, r0
   18914:	ldr	r5, [sp, #48]	; 0x30
   18918:	ldr	r6, [sp, #52]	; 0x34
   1891c:	beq	18c34 <dcngettext@plt+0x7968>
   18920:	stm	sp, {r2, r3}
   18924:	mov	r3, r1
   18928:	ldr	r2, [pc, #808]	; 18c58 <dcngettext@plt+0x798c>
   1892c:	mov	r1, #1
   18930:	bl	111dc <__fprintf_chk@plt>
   18934:	mov	r2, #5
   18938:	ldr	r1, [pc, #796]	; 18c5c <dcngettext@plt+0x7990>
   1893c:	mov	r0, #0
   18940:	bl	11044 <dcgettext@plt>
   18944:	ldr	r3, [pc, #788]	; 18c60 <dcngettext@plt+0x7994>
   18948:	ldr	r2, [pc, #788]	; 18c64 <dcngettext@plt+0x7998>
   1894c:	str	r3, [sp]
   18950:	mov	r1, #1
   18954:	mov	r3, r0
   18958:	mov	r0, r4
   1895c:	bl	111dc <__fprintf_chk@plt>
   18960:	mov	r1, r4
   18964:	mov	r0, #10
   18968:	bl	11038 <fputc_unlocked@plt>
   1896c:	mov	r2, #5
   18970:	ldr	r1, [pc, #752]	; 18c68 <dcngettext@plt+0x799c>
   18974:	mov	r0, #0
   18978:	bl	11044 <dcgettext@plt>
   1897c:	mov	r1, #1
   18980:	ldr	r3, [pc, #740]	; 18c6c <dcngettext@plt+0x79a0>
   18984:	mov	r2, r0
   18988:	mov	r0, r4
   1898c:	bl	111dc <__fprintf_chk@plt>
   18990:	mov	r1, r4
   18994:	mov	r0, #10
   18998:	bl	11038 <fputc_unlocked@plt>
   1899c:	cmp	r6, #9
   189a0:	ldrls	pc, [pc, r6, lsl #2]
   189a4:	b	18c4c <dcngettext@plt+0x7980>
   189a8:	andeq	r8, r1, ip, lsr #20
   189ac:	andeq	r8, r1, r4, lsr sl
   189b0:	andeq	r8, r1, r0, ror #20
   189b4:	muleq	r1, r4, sl
   189b8:	ldrdeq	r8, [r1], -r0
   189bc:	andeq	r8, r1, ip, lsl #22
   189c0:	andeq	r8, r1, r8, asr #22
   189c4:	andeq	r8, r1, ip, lsl #23
   189c8:	ldrdeq	r8, [r1], -ip
   189cc:	ldrdeq	r8, [r1], -r0
   189d0:	ldr	r1, [pc, #664]	; 18c70 <dcngettext@plt+0x79a4>
   189d4:	mov	r2, #5
   189d8:	mov	r0, #0
   189dc:	bl	11044 <dcgettext@plt>
   189e0:	ldr	ip, [r5, #32]
   189e4:	ldr	r1, [r5, #28]
   189e8:	ldr	r2, [r5, #24]
   189ec:	ldr	r3, [r5]
   189f0:	ldr	r6, [r5, #20]
   189f4:	str	ip, [sp, #28]
   189f8:	ldr	lr, [r5, #16]
   189fc:	str	r1, [sp, #24]
   18a00:	ldr	ip, [r5, #12]
   18a04:	str	r2, [sp, #20]
   18a08:	ldr	r1, [r5, #8]
   18a0c:	ldr	r2, [r5, #4]
   18a10:	str	r6, [sp, #16]
   18a14:	stmib	sp, {r1, ip, lr}
   18a18:	mov	r1, #1
   18a1c:	str	r2, [sp]
   18a20:	mov	r2, r0
   18a24:	mov	r0, r4
   18a28:	bl	111dc <__fprintf_chk@plt>
   18a2c:	add	sp, sp, #32
   18a30:	pop	{r4, r5, r6, pc}
   18a34:	mov	r2, #5
   18a38:	ldr	r1, [pc, #564]	; 18c74 <dcngettext@plt+0x79a8>
   18a3c:	mov	r0, #0
   18a40:	bl	11044 <dcgettext@plt>
   18a44:	ldr	r3, [r5]
   18a48:	mov	r1, #1
   18a4c:	mov	r2, r0
   18a50:	mov	r0, r4
   18a54:	add	sp, sp, #32
   18a58:	pop	{r4, r5, r6, lr}
   18a5c:	b	111dc <__fprintf_chk@plt>
   18a60:	mov	r2, #5
   18a64:	ldr	r1, [pc, #524]	; 18c78 <dcngettext@plt+0x79ac>
   18a68:	mov	r0, #0
   18a6c:	bl	11044 <dcgettext@plt>
   18a70:	ldr	r2, [r5, #4]
   18a74:	ldr	r3, [r5]
   18a78:	mov	r1, #1
   18a7c:	str	r2, [sp, #48]	; 0x30
   18a80:	mov	r2, r0
   18a84:	mov	r0, r4
   18a88:	add	sp, sp, #32
   18a8c:	pop	{r4, r5, r6, lr}
   18a90:	b	111dc <__fprintf_chk@plt>
   18a94:	mov	r2, #5
   18a98:	ldr	r1, [pc, #476]	; 18c7c <dcngettext@plt+0x79b0>
   18a9c:	mov	r0, #0
   18aa0:	bl	11044 <dcgettext@plt>
   18aa4:	ldr	r1, [r5, #8]
   18aa8:	ldr	r2, [r5, #4]
   18aac:	ldr	r3, [r5]
   18ab0:	str	r1, [sp, #52]	; 0x34
   18ab4:	str	r2, [sp, #48]	; 0x30
   18ab8:	mov	r1, #1
   18abc:	mov	r2, r0
   18ac0:	mov	r0, r4
   18ac4:	add	sp, sp, #32
   18ac8:	pop	{r4, r5, r6, lr}
   18acc:	b	111dc <__fprintf_chk@plt>
   18ad0:	mov	r2, #5
   18ad4:	ldr	r1, [pc, #420]	; 18c80 <dcngettext@plt+0x79b4>
   18ad8:	mov	r0, #0
   18adc:	bl	11044 <dcgettext@plt>
   18ae0:	ldr	r1, [r5, #8]
   18ae4:	ldr	ip, [r5, #12]
   18ae8:	ldr	r2, [r5, #4]
   18aec:	ldr	r3, [r5]
   18af0:	stmib	sp, {r1, ip}
   18af4:	str	r2, [sp]
   18af8:	mov	r1, #1
   18afc:	mov	r2, r0
   18b00:	mov	r0, r4
   18b04:	bl	111dc <__fprintf_chk@plt>
   18b08:	b	18a2c <dcngettext@plt+0x7760>
   18b0c:	mov	r2, #5
   18b10:	ldr	r1, [pc, #364]	; 18c84 <dcngettext@plt+0x79b8>
   18b14:	mov	r0, #0
   18b18:	bl	11044 <dcgettext@plt>
   18b1c:	add	r1, r5, #8
   18b20:	ldr	r2, [r5, #4]
   18b24:	ldm	r1, {r1, ip, lr}
   18b28:	ldr	r3, [r5]
   18b2c:	str	r2, [sp]
   18b30:	stmib	sp, {r1, ip, lr}
   18b34:	mov	r1, #1
   18b38:	mov	r2, r0
   18b3c:	mov	r0, r4
   18b40:	bl	111dc <__fprintf_chk@plt>
   18b44:	b	18a2c <dcngettext@plt+0x7760>
   18b48:	mov	r2, #5
   18b4c:	ldr	r1, [pc, #308]	; 18c88 <dcngettext@plt+0x79bc>
   18b50:	mov	r0, #0
   18b54:	bl	11044 <dcgettext@plt>
   18b58:	add	r1, r5, #8
   18b5c:	ldr	r2, [r5, #4]
   18b60:	ldm	r1, {r1, ip, lr}
   18b64:	ldr	r6, [r5, #20]
   18b68:	ldr	r3, [r5]
   18b6c:	stmib	sp, {r1, ip, lr}
   18b70:	mov	r1, #1
   18b74:	str	r2, [sp]
   18b78:	str	r6, [sp, #16]
   18b7c:	mov	r2, r0
   18b80:	mov	r0, r4
   18b84:	bl	111dc <__fprintf_chk@plt>
   18b88:	b	18a2c <dcngettext@plt+0x7760>
   18b8c:	mov	r2, #5
   18b90:	ldr	r1, [pc, #244]	; 18c8c <dcngettext@plt+0x79c0>
   18b94:	mov	r0, #0
   18b98:	bl	11044 <dcgettext@plt>
   18b9c:	ldr	r2, [r5, #24]
   18ba0:	ldr	r3, [r5]
   18ba4:	ldr	r6, [r5, #20]
   18ba8:	ldr	lr, [r5, #16]
   18bac:	ldr	ip, [r5, #12]
   18bb0:	str	r2, [sp, #20]
   18bb4:	ldr	r1, [r5, #8]
   18bb8:	ldr	r2, [r5, #4]
   18bbc:	str	r6, [sp, #16]
   18bc0:	stmib	sp, {r1, ip, lr}
   18bc4:	mov	r1, #1
   18bc8:	str	r2, [sp]
   18bcc:	mov	r2, r0
   18bd0:	mov	r0, r4
   18bd4:	bl	111dc <__fprintf_chk@plt>
   18bd8:	b	18a2c <dcngettext@plt+0x7760>
   18bdc:	mov	r2, #5
   18be0:	ldr	r1, [pc, #168]	; 18c90 <dcngettext@plt+0x79c4>
   18be4:	mov	r0, #0
   18be8:	bl	11044 <dcgettext@plt>
   18bec:	ldr	r1, [r5, #28]
   18bf0:	ldr	r2, [r5, #24]
   18bf4:	ldr	r3, [r5]
   18bf8:	ldr	r6, [r5, #20]
   18bfc:	ldr	lr, [r5, #16]
   18c00:	str	r1, [sp, #24]
   18c04:	ldr	ip, [r5, #12]
   18c08:	str	r2, [sp, #20]
   18c0c:	ldr	r1, [r5, #8]
   18c10:	ldr	r2, [r5, #4]
   18c14:	str	r6, [sp, #16]
   18c18:	stmib	sp, {r1, ip, lr}
   18c1c:	mov	r1, #1
   18c20:	str	r2, [sp]
   18c24:	mov	r2, r0
   18c28:	mov	r0, r4
   18c2c:	bl	111dc <__fprintf_chk@plt>
   18c30:	b	18a2c <dcngettext@plt+0x7760>
   18c34:	str	r3, [sp]
   18c38:	mov	r1, #1
   18c3c:	mov	r3, r2
   18c40:	ldr	r2, [pc, #76]	; 18c94 <dcngettext@plt+0x79c8>
   18c44:	bl	111dc <__fprintf_chk@plt>
   18c48:	b	18934 <dcngettext@plt+0x7668>
   18c4c:	mov	r2, #5
   18c50:	ldr	r1, [pc, #64]	; 18c98 <dcngettext@plt+0x79cc>
   18c54:	b	189d8 <dcngettext@plt+0x770c>
   18c58:			; <UNDEFINED> instruction: 0x0001a8b4
   18c5c:	andeq	sl, r1, r8, asr #17
   18c60:	andeq	r0, r0, r6, ror #15
   18c64:	andeq	sl, r1, r0, lsr #23
   18c68:	andeq	sl, r1, ip, asr #17
   18c6c:	andeq	sl, r1, r8, ror r9
   18c70:	andeq	sl, r1, r8, lsr #21
   18c74:	muleq	r1, ip, r9
   18c78:	andeq	sl, r1, ip, lsr #19
   18c7c:	andeq	sl, r1, r4, asr #19
   18c80:	andeq	sl, r1, r0, ror #19
   18c84:	andeq	sl, r1, r0, lsl #20
   18c88:	andeq	sl, r1, r4, lsr #20
   18c8c:	andeq	sl, r1, ip, asr #20
   18c90:	andeq	sl, r1, r8, ror sl
   18c94:	andeq	sl, r1, r0, asr #17
   18c98:	ldrdeq	sl, [r1], -ip
   18c9c:	push	{r4, r5, lr}
   18ca0:	sub	sp, sp, #12
   18ca4:	ldr	r5, [sp, #24]
   18ca8:	ldr	ip, [r5]
   18cac:	cmp	ip, #0
   18cb0:	beq	18ccc <dcngettext@plt+0x7a00>
   18cb4:	mov	lr, r5
   18cb8:	mov	ip, #0
   18cbc:	ldr	r4, [lr, #4]!
   18cc0:	add	ip, ip, #1
   18cc4:	cmp	r4, #0
   18cc8:	bne	18cbc <dcngettext@plt+0x79f0>
   18ccc:	stm	sp, {r5, ip}
   18cd0:	bl	18904 <dcngettext@plt+0x7638>
   18cd4:	add	sp, sp, #12
   18cd8:	pop	{r4, r5, pc}
   18cdc:	push	{r4, r5, lr}
   18ce0:	sub	sp, sp, #76	; 0x4c
   18ce4:	mov	r5, r0
   18ce8:	ldr	ip, [sp, #88]	; 0x58
   18cec:	ldr	r0, [ip]
   18cf0:	cmp	r0, #0
   18cf4:	str	r0, [sp, #32]
   18cf8:	beq	190cc <dcngettext@plt+0x7e00>
   18cfc:	ldr	r0, [ip, #4]
   18d00:	cmp	r0, #0
   18d04:	str	r0, [sp, #36]	; 0x24
   18d08:	beq	190d4 <dcngettext@plt+0x7e08>
   18d0c:	ldr	r0, [ip, #8]
   18d10:	cmp	r0, #0
   18d14:	str	r0, [sp, #40]	; 0x28
   18d18:	beq	190dc <dcngettext@plt+0x7e10>
   18d1c:	ldr	r0, [ip, #12]
   18d20:	cmp	r0, #0
   18d24:	str	r0, [sp, #44]	; 0x2c
   18d28:	beq	190e4 <dcngettext@plt+0x7e18>
   18d2c:	ldr	r0, [ip, #16]
   18d30:	cmp	r0, #0
   18d34:	str	r0, [sp, #48]	; 0x30
   18d38:	beq	190ec <dcngettext@plt+0x7e20>
   18d3c:	ldr	r0, [ip, #20]
   18d40:	cmp	r0, #0
   18d44:	str	r0, [sp, #52]	; 0x34
   18d48:	beq	190f4 <dcngettext@plt+0x7e28>
   18d4c:	ldr	r0, [ip, #24]
   18d50:	cmp	r0, #0
   18d54:	str	r0, [sp, #56]	; 0x38
   18d58:	beq	190fc <dcngettext@plt+0x7e30>
   18d5c:	ldr	r0, [ip, #28]
   18d60:	cmp	r0, #0
   18d64:	str	r0, [sp, #60]	; 0x3c
   18d68:	beq	19104 <dcngettext@plt+0x7e38>
   18d6c:	ldr	r0, [ip, #32]
   18d70:	cmp	r0, #0
   18d74:	str	r0, [sp, #64]	; 0x40
   18d78:	beq	1910c <dcngettext@plt+0x7e40>
   18d7c:	ldr	r0, [ip, #36]	; 0x24
   18d80:	cmp	r0, #0
   18d84:	movne	r4, #10
   18d88:	moveq	r4, #9
   18d8c:	cmp	r1, #0
   18d90:	beq	190a4 <dcngettext@plt+0x7dd8>
   18d94:	stm	sp, {r2, r3}
   18d98:	mov	r0, r5
   18d9c:	mov	r3, r1
   18da0:	ldr	r2, [pc, #876]	; 19114 <dcngettext@plt+0x7e48>
   18da4:	mov	r1, #1
   18da8:	bl	111dc <__fprintf_chk@plt>
   18dac:	mov	r2, #5
   18db0:	ldr	r1, [pc, #864]	; 19118 <dcngettext@plt+0x7e4c>
   18db4:	mov	r0, #0
   18db8:	bl	11044 <dcgettext@plt>
   18dbc:	ldr	r3, [pc, #856]	; 1911c <dcngettext@plt+0x7e50>
   18dc0:	ldr	r2, [pc, #856]	; 19120 <dcngettext@plt+0x7e54>
   18dc4:	str	r3, [sp]
   18dc8:	mov	r1, #1
   18dcc:	mov	r3, r0
   18dd0:	mov	r0, r5
   18dd4:	bl	111dc <__fprintf_chk@plt>
   18dd8:	mov	r1, r5
   18ddc:	mov	r0, #10
   18de0:	bl	11038 <fputc_unlocked@plt>
   18de4:	mov	r2, #5
   18de8:	ldr	r1, [pc, #820]	; 19124 <dcngettext@plt+0x7e58>
   18dec:	mov	r0, #0
   18df0:	bl	11044 <dcgettext@plt>
   18df4:	mov	r1, #1
   18df8:	ldr	r3, [pc, #808]	; 19128 <dcngettext@plt+0x7e5c>
   18dfc:	mov	r2, r0
   18e00:	mov	r0, r5
   18e04:	bl	111dc <__fprintf_chk@plt>
   18e08:	mov	r1, r5
   18e0c:	mov	r0, #10
   18e10:	bl	11038 <fputc_unlocked@plt>
   18e14:	cmp	r4, #9
   18e18:	ldrls	pc, [pc, r4, lsl #2]
   18e1c:	b	190c0 <dcngettext@plt+0x7df4>
   18e20:	andeq	r8, r1, r4, lsr #29
   18e24:	andeq	r8, r1, ip, lsr #29
   18e28:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e2c:	andeq	r8, r1, ip, lsl #30
   18e30:	andeq	r8, r1, r4, asr #30
   18e34:	andeq	r8, r1, r0, lsl #31
   18e38:			; <UNDEFINED> instruction: 0x00018fbc
   18e3c:	andeq	r9, r1, r0
   18e40:	andeq	r9, r1, ip, asr #32
   18e44:	andeq	r8, r1, r8, asr #28
   18e48:	ldr	r1, [pc, #732]	; 1912c <dcngettext@plt+0x7e60>
   18e4c:	mov	r2, #5
   18e50:	mov	r0, #0
   18e54:	bl	11044 <dcgettext@plt>
   18e58:	ldr	ip, [sp, #64]	; 0x40
   18e5c:	ldr	r1, [sp, #60]	; 0x3c
   18e60:	ldr	r2, [sp, #56]	; 0x38
   18e64:	ldr	lr, [sp, #48]	; 0x30
   18e68:	str	ip, [sp, #28]
   18e6c:	str	r1, [sp, #24]
   18e70:	ldr	ip, [sp, #44]	; 0x2c
   18e74:	ldr	r1, [sp, #40]	; 0x28
   18e78:	ldr	r4, [sp, #52]	; 0x34
   18e7c:	str	r2, [sp, #20]
   18e80:	ldr	r2, [sp, #36]	; 0x24
   18e84:	stmib	sp, {r1, ip, lr}
   18e88:	mov	r1, #1
   18e8c:	str	r2, [sp]
   18e90:	ldr	r3, [sp, #32]
   18e94:	str	r4, [sp, #16]
   18e98:	mov	r2, r0
   18e9c:	mov	r0, r5
   18ea0:	bl	111dc <__fprintf_chk@plt>
   18ea4:	add	sp, sp, #76	; 0x4c
   18ea8:	pop	{r4, r5, pc}
   18eac:	mov	r2, #5
   18eb0:	ldr	r1, [pc, #632]	; 19130 <dcngettext@plt+0x7e64>
   18eb4:	mov	r0, #0
   18eb8:	bl	11044 <dcgettext@plt>
   18ebc:	ldr	r3, [sp, #32]
   18ec0:	mov	r1, #1
   18ec4:	mov	r2, r0
   18ec8:	mov	r0, r5
   18ecc:	add	sp, sp, #76	; 0x4c
   18ed0:	pop	{r4, r5, lr}
   18ed4:	b	111dc <__fprintf_chk@plt>
   18ed8:	mov	r2, #5
   18edc:	ldr	r1, [pc, #592]	; 19134 <dcngettext@plt+0x7e68>
   18ee0:	mov	r0, #0
   18ee4:	bl	11044 <dcgettext@plt>
   18ee8:	ldr	r2, [sp, #36]	; 0x24
   18eec:	ldr	r3, [sp, #32]
   18ef0:	str	r2, [sp, #88]	; 0x58
   18ef4:	mov	r1, #1
   18ef8:	mov	r2, r0
   18efc:	mov	r0, r5
   18f00:	add	sp, sp, #76	; 0x4c
   18f04:	pop	{r4, r5, lr}
   18f08:	b	111dc <__fprintf_chk@plt>
   18f0c:	mov	r2, #5
   18f10:	ldr	r1, [pc, #544]	; 19138 <dcngettext@plt+0x7e6c>
   18f14:	mov	r0, #0
   18f18:	bl	11044 <dcgettext@plt>
   18f1c:	ldr	r1, [sp, #40]	; 0x28
   18f20:	ldr	r2, [sp, #36]	; 0x24
   18f24:	str	r1, [sp, #4]
   18f28:	str	r2, [sp]
   18f2c:	ldr	r3, [sp, #32]
   18f30:	mov	r1, #1
   18f34:	mov	r2, r0
   18f38:	mov	r0, r5
   18f3c:	bl	111dc <__fprintf_chk@plt>
   18f40:	b	18ea4 <dcngettext@plt+0x7bd8>
   18f44:	mov	r2, #5
   18f48:	ldr	r1, [pc, #492]	; 1913c <dcngettext@plt+0x7e70>
   18f4c:	mov	r0, #0
   18f50:	bl	11044 <dcgettext@plt>
   18f54:	ldr	r1, [sp, #40]	; 0x28
   18f58:	ldr	ip, [sp, #44]	; 0x2c
   18f5c:	ldr	r2, [sp, #36]	; 0x24
   18f60:	ldr	r3, [sp, #32]
   18f64:	stmib	sp, {r1, ip}
   18f68:	str	r2, [sp]
   18f6c:	mov	r1, #1
   18f70:	mov	r2, r0
   18f74:	mov	r0, r5
   18f78:	bl	111dc <__fprintf_chk@plt>
   18f7c:	b	18ea4 <dcngettext@plt+0x7bd8>
   18f80:	mov	r2, #5
   18f84:	ldr	r1, [pc, #436]	; 19140 <dcngettext@plt+0x7e74>
   18f88:	mov	r0, #0
   18f8c:	bl	11044 <dcgettext@plt>
   18f90:	add	r1, sp, #40	; 0x28
   18f94:	ldr	r2, [sp, #36]	; 0x24
   18f98:	ldm	r1, {r1, ip, lr}
   18f9c:	ldr	r3, [sp, #32]
   18fa0:	str	r2, [sp]
   18fa4:	stmib	sp, {r1, ip, lr}
   18fa8:	mov	r1, #1
   18fac:	mov	r2, r0
   18fb0:	mov	r0, r5
   18fb4:	bl	111dc <__fprintf_chk@plt>
   18fb8:	b	18ea4 <dcngettext@plt+0x7bd8>
   18fbc:	mov	r2, #5
   18fc0:	ldr	r1, [pc, #380]	; 19144 <dcngettext@plt+0x7e78>
   18fc4:	mov	r0, #0
   18fc8:	bl	11044 <dcgettext@plt>
   18fcc:	add	r1, sp, #40	; 0x28
   18fd0:	ldr	r2, [sp, #36]	; 0x24
   18fd4:	ldm	r1, {r1, ip, lr}
   18fd8:	ldr	r4, [sp, #52]	; 0x34
   18fdc:	str	r2, [sp]
   18fe0:	stmib	sp, {r1, ip, lr}
   18fe4:	mov	r1, #1
   18fe8:	ldr	r3, [sp, #32]
   18fec:	str	r4, [sp, #16]
   18ff0:	mov	r2, r0
   18ff4:	mov	r0, r5
   18ff8:	bl	111dc <__fprintf_chk@plt>
   18ffc:	b	18ea4 <dcngettext@plt+0x7bd8>
   19000:	mov	r2, #5
   19004:	ldr	r1, [pc, #316]	; 19148 <dcngettext@plt+0x7e7c>
   19008:	mov	r0, #0
   1900c:	bl	11044 <dcgettext@plt>
   19010:	add	r1, sp, #40	; 0x28
   19014:	ldr	r2, [sp, #56]	; 0x38
   19018:	ldm	r1, {r1, ip, lr}
   1901c:	ldr	r4, [sp, #52]	; 0x34
   19020:	str	r2, [sp, #20]
   19024:	ldr	r2, [sp, #36]	; 0x24
   19028:	stmib	sp, {r1, ip, lr}
   1902c:	mov	r1, #1
   19030:	str	r2, [sp]
   19034:	ldr	r3, [sp, #32]
   19038:	str	r4, [sp, #16]
   1903c:	mov	r2, r0
   19040:	mov	r0, r5
   19044:	bl	111dc <__fprintf_chk@plt>
   19048:	b	18ea4 <dcngettext@plt+0x7bd8>
   1904c:	mov	r2, #5
   19050:	ldr	r1, [pc, #244]	; 1914c <dcngettext@plt+0x7e80>
   19054:	mov	r0, #0
   19058:	bl	11044 <dcgettext@plt>
   1905c:	ldr	r1, [sp, #60]	; 0x3c
   19060:	ldr	r2, [sp, #56]	; 0x38
   19064:	ldr	lr, [sp, #48]	; 0x30
   19068:	ldr	ip, [sp, #44]	; 0x2c
   1906c:	str	r1, [sp, #24]
   19070:	ldr	r1, [sp, #40]	; 0x28
   19074:	ldr	r4, [sp, #52]	; 0x34
   19078:	str	r2, [sp, #20]
   1907c:	ldr	r2, [sp, #36]	; 0x24
   19080:	stmib	sp, {r1, ip, lr}
   19084:	mov	r1, #1
   19088:	str	r2, [sp]
   1908c:	ldr	r3, [sp, #32]
   19090:	str	r4, [sp, #16]
   19094:	mov	r2, r0
   19098:	mov	r0, r5
   1909c:	bl	111dc <__fprintf_chk@plt>
   190a0:	b	18ea4 <dcngettext@plt+0x7bd8>
   190a4:	str	r3, [sp]
   190a8:	mov	r1, #1
   190ac:	mov	r3, r2
   190b0:	mov	r0, r5
   190b4:	ldr	r2, [pc, #148]	; 19150 <dcngettext@plt+0x7e84>
   190b8:	bl	111dc <__fprintf_chk@plt>
   190bc:	b	18dac <dcngettext@plt+0x7ae0>
   190c0:	mov	r2, #5
   190c4:	ldr	r1, [pc, #136]	; 19154 <dcngettext@plt+0x7e88>
   190c8:	b	18e50 <dcngettext@plt+0x7b84>
   190cc:	mov	r4, r0
   190d0:	b	18d8c <dcngettext@plt+0x7ac0>
   190d4:	mov	r4, #1
   190d8:	b	18d8c <dcngettext@plt+0x7ac0>
   190dc:	mov	r4, #2
   190e0:	b	18d8c <dcngettext@plt+0x7ac0>
   190e4:	mov	r4, #3
   190e8:	b	18d8c <dcngettext@plt+0x7ac0>
   190ec:	mov	r4, #4
   190f0:	b	18d8c <dcngettext@plt+0x7ac0>
   190f4:	mov	r4, #5
   190f8:	b	18d8c <dcngettext@plt+0x7ac0>
   190fc:	mov	r4, #6
   19100:	b	18d8c <dcngettext@plt+0x7ac0>
   19104:	mov	r4, #7
   19108:	b	18d8c <dcngettext@plt+0x7ac0>
   1910c:	mov	r4, #8
   19110:	b	18d8c <dcngettext@plt+0x7ac0>
   19114:			; <UNDEFINED> instruction: 0x0001a8b4
   19118:	andeq	sl, r1, r8, asr #17
   1911c:	andeq	r0, r0, r6, ror #15
   19120:	andeq	sl, r1, r0, lsr #23
   19124:	andeq	sl, r1, ip, asr #17
   19128:	andeq	sl, r1, r8, ror r9
   1912c:	andeq	sl, r1, r8, lsr #21
   19130:	muleq	r1, ip, r9
   19134:	andeq	sl, r1, ip, lsr #19
   19138:	andeq	sl, r1, r4, asr #19
   1913c:	andeq	sl, r1, r0, ror #19
   19140:	andeq	sl, r1, r0, lsl #20
   19144:	andeq	sl, r1, r4, lsr #20
   19148:	andeq	sl, r1, ip, asr #20
   1914c:	andeq	sl, r1, r8, ror sl
   19150:	andeq	sl, r1, r0, asr #17
   19154:	ldrdeq	sl, [r1], -ip
   19158:	push	{r3}		; (str r3, [sp, #-4]!)
   1915c:	push	{lr}		; (str lr, [sp, #-4]!)
   19160:	sub	sp, sp, #56	; 0x38
   19164:	add	r3, sp, #64	; 0x40
   19168:	ldr	ip, [sp, #64]	; 0x40
   1916c:	str	r3, [sp, #12]
   19170:	cmp	ip, #0
   19174:	str	ip, [sp, #16]
   19178:	beq	19210 <dcngettext@plt+0x7f44>
   1917c:	ldr	ip, [sp, #68]	; 0x44
   19180:	cmp	ip, #0
   19184:	str	ip, [sp, #20]
   19188:	beq	19230 <dcngettext@plt+0x7f64>
   1918c:	ldr	ip, [sp, #72]	; 0x48
   19190:	cmp	ip, #0
   19194:	str	ip, [sp, #24]
   19198:	beq	19238 <dcngettext@plt+0x7f6c>
   1919c:	ldr	ip, [sp, #76]	; 0x4c
   191a0:	cmp	ip, #0
   191a4:	str	ip, [sp, #28]
   191a8:	beq	19240 <dcngettext@plt+0x7f74>
   191ac:	ldr	ip, [sp, #80]	; 0x50
   191b0:	cmp	ip, #0
   191b4:	str	ip, [sp, #32]
   191b8:	beq	19248 <dcngettext@plt+0x7f7c>
   191bc:	ldr	ip, [sp, #84]	; 0x54
   191c0:	cmp	ip, #0
   191c4:	str	ip, [sp, #36]	; 0x24
   191c8:	beq	19250 <dcngettext@plt+0x7f84>
   191cc:	ldr	ip, [sp, #88]	; 0x58
   191d0:	cmp	ip, #0
   191d4:	str	ip, [sp, #40]	; 0x28
   191d8:	beq	19258 <dcngettext@plt+0x7f8c>
   191dc:	ldr	ip, [sp, #92]	; 0x5c
   191e0:	cmp	ip, #0
   191e4:	str	ip, [sp, #44]	; 0x2c
   191e8:	beq	19260 <dcngettext@plt+0x7f94>
   191ec:	ldr	ip, [sp, #96]	; 0x60
   191f0:	cmp	ip, #0
   191f4:	str	ip, [sp, #48]	; 0x30
   191f8:	beq	19268 <dcngettext@plt+0x7f9c>
   191fc:	ldr	ip, [sp, #100]	; 0x64
   19200:	cmp	ip, #0
   19204:	str	ip, [sp, #52]	; 0x34
   19208:	movne	ip, #10
   1920c:	moveq	ip, #9
   19210:	add	r3, sp, #16
   19214:	stm	sp, {r3, ip}
   19218:	ldr	r3, [sp, #60]	; 0x3c
   1921c:	bl	18904 <dcngettext@plt+0x7638>
   19220:	add	sp, sp, #56	; 0x38
   19224:	pop	{lr}		; (ldr lr, [sp], #4)
   19228:	add	sp, sp, #4
   1922c:	bx	lr
   19230:	mov	ip, #1
   19234:	b	19210 <dcngettext@plt+0x7f44>
   19238:	mov	ip, #2
   1923c:	b	19210 <dcngettext@plt+0x7f44>
   19240:	mov	ip, #3
   19244:	b	19210 <dcngettext@plt+0x7f44>
   19248:	mov	ip, #4
   1924c:	b	19210 <dcngettext@plt+0x7f44>
   19250:	mov	ip, #5
   19254:	b	19210 <dcngettext@plt+0x7f44>
   19258:	mov	ip, #6
   1925c:	b	19210 <dcngettext@plt+0x7f44>
   19260:	mov	ip, #7
   19264:	b	19210 <dcngettext@plt+0x7f44>
   19268:	mov	ip, #8
   1926c:	b	19210 <dcngettext@plt+0x7f44>
   19270:	ldr	r3, [pc, #116]	; 192ec <dcngettext@plt+0x8020>
   19274:	push	{r4, lr}
   19278:	mov	r0, #10
   1927c:	ldr	r1, [r3]
   19280:	bl	11038 <fputc_unlocked@plt>
   19284:	mov	r2, #5
   19288:	ldr	r1, [pc, #96]	; 192f0 <dcngettext@plt+0x8024>
   1928c:	mov	r0, #0
   19290:	bl	11044 <dcgettext@plt>
   19294:	ldr	r2, [pc, #88]	; 192f4 <dcngettext@plt+0x8028>
   19298:	mov	r1, r0
   1929c:	mov	r0, #1
   192a0:	bl	111c4 <__printf_chk@plt>
   192a4:	mov	r2, #5
   192a8:	ldr	r1, [pc, #72]	; 192f8 <dcngettext@plt+0x802c>
   192ac:	mov	r0, #0
   192b0:	bl	11044 <dcgettext@plt>
   192b4:	ldr	r3, [pc, #64]	; 192fc <dcngettext@plt+0x8030>
   192b8:	ldr	r2, [pc, #64]	; 19300 <dcngettext@plt+0x8034>
   192bc:	mov	r1, r0
   192c0:	mov	r0, #1
   192c4:	bl	111c4 <__printf_chk@plt>
   192c8:	mov	r2, #5
   192cc:	ldr	r1, [pc, #48]	; 19304 <dcngettext@plt+0x8038>
   192d0:	mov	r0, #0
   192d4:	bl	11044 <dcgettext@plt>
   192d8:	ldr	r2, [pc, #40]	; 19308 <dcngettext@plt+0x803c>
   192dc:	pop	{r4, lr}
   192e0:	mov	r1, r0
   192e4:	mov	r0, #1
   192e8:	b	111c4 <__printf_chk@plt>
   192ec:	andeq	fp, r2, ip, lsl #3
   192f0:	andeq	sl, r1, r8, lsl fp
   192f4:	andeq	sl, r1, ip, lsr #22
   192f8:	andeq	sl, r1, r4, asr #22
   192fc:	andeq	sl, r1, r0, ror #10
   19300:	andeq	sl, r1, r8, lsl #11
   19304:	andeq	sl, r1, r8, asr fp
   19308:	andeq	sl, r1, r0, lsl #23
   1930c:	push	{r4, r5, r6, lr}
   19310:	mov	r6, r0
   19314:	mov	r5, r1
   19318:	mov	r4, r2
   1931c:	bl	19bf4 <dcngettext@plt+0x8928>
   19320:	cmp	r0, #0
   19324:	popne	{r4, r5, r6, pc}
   19328:	cmp	r6, #0
   1932c:	beq	1933c <dcngettext@plt+0x8070>
   19330:	cmp	r5, #0
   19334:	cmpne	r4, #0
   19338:	popeq	{r4, r5, r6, pc}
   1933c:	bl	19988 <dcngettext@plt+0x86bc>
   19340:	push	{r4, lr}
   19344:	bl	19a10 <dcngettext@plt+0x8744>
   19348:	cmp	r0, #0
   1934c:	popne	{r4, pc}
   19350:	bl	19988 <dcngettext@plt+0x86bc>
   19354:	push	{r4, lr}
   19358:	bl	19a10 <dcngettext@plt+0x8744>
   1935c:	cmp	r0, #0
   19360:	popne	{r4, pc}
   19364:	bl	19988 <dcngettext@plt+0x86bc>
   19368:	push	{r4, lr}
   1936c:	bl	19a10 <dcngettext@plt+0x8744>
   19370:	cmp	r0, #0
   19374:	popne	{r4, pc}
   19378:	bl	19988 <dcngettext@plt+0x86bc>
   1937c:	push	{r4, r5, r6, lr}
   19380:	mov	r5, r0
   19384:	mov	r4, r1
   19388:	bl	19a3c <dcngettext@plt+0x8770>
   1938c:	cmp	r0, #0
   19390:	popne	{r4, r5, r6, pc}
   19394:	adds	r4, r4, #0
   19398:	movne	r4, #1
   1939c:	cmp	r5, #0
   193a0:	orreq	r4, r4, #1
   193a4:	cmp	r4, #0
   193a8:	popeq	{r4, r5, r6, pc}
   193ac:	bl	19988 <dcngettext@plt+0x86bc>
   193b0:	push	{r4, lr}
   193b4:	cmp	r1, #0
   193b8:	orreq	r1, r1, #1
   193bc:	bl	19a3c <dcngettext@plt+0x8770>
   193c0:	cmp	r0, #0
   193c4:	popne	{r4, pc}
   193c8:	bl	19988 <dcngettext@plt+0x86bc>
   193cc:	push	{r4, r5, r6, lr}
   193d0:	mov	r6, r0
   193d4:	mov	r5, r1
   193d8:	mov	r4, r2
   193dc:	bl	19bf4 <dcngettext@plt+0x8928>
   193e0:	cmp	r0, #0
   193e4:	popne	{r4, r5, r6, pc}
   193e8:	cmp	r6, #0
   193ec:	beq	193fc <dcngettext@plt+0x8130>
   193f0:	cmp	r5, #0
   193f4:	cmpne	r4, #0
   193f8:	popeq	{r4, r5, r6, pc}
   193fc:	bl	19988 <dcngettext@plt+0x86bc>
   19400:	cmp	r2, #0
   19404:	cmpne	r1, #0
   19408:	moveq	r2, #1
   1940c:	moveq	r1, r2
   19410:	push	{r4, lr}
   19414:	bl	19bf4 <dcngettext@plt+0x8928>
   19418:	cmp	r0, #0
   1941c:	popne	{r4, pc}
   19420:	bl	19988 <dcngettext@plt+0x86bc>
   19424:	push	{r4, lr}
   19428:	mov	r2, r1
   1942c:	mov	r1, r0
   19430:	mov	r0, #0
   19434:	bl	19bf4 <dcngettext@plt+0x8928>
   19438:	cmp	r0, #0
   1943c:	popne	{r4, pc}
   19440:	bl	19988 <dcngettext@plt+0x86bc>
   19444:	cmp	r1, #0
   19448:	cmpne	r0, #0
   1944c:	moveq	r2, #1
   19450:	movne	r2, r1
   19454:	moveq	r1, r2
   19458:	movne	r1, r0
   1945c:	push	{r4, lr}
   19460:	mov	r0, #0
   19464:	bl	19bf4 <dcngettext@plt+0x8928>
   19468:	cmp	r0, #0
   1946c:	popne	{r4, pc}
   19470:	bl	19988 <dcngettext@plt+0x86bc>
   19474:	cmp	r0, #0
   19478:	push	{r4, r5, r6, lr}
   1947c:	mov	r5, r1
   19480:	ldr	r4, [r1]
   19484:	beq	194c0 <dcngettext@plt+0x81f4>
   19488:	lsr	r2, r4, #1
   1948c:	add	r3, r2, #1
   19490:	mvn	r3, r3
   19494:	cmp	r4, r3
   19498:	bhi	194dc <dcngettext@plt+0x8210>
   1949c:	add	r4, r4, #1
   194a0:	add	r4, r4, r2
   194a4:	mov	r1, r4
   194a8:	mov	r2, #1
   194ac:	bl	19bf4 <dcngettext@plt+0x8928>
   194b0:	cmp	r0, #0
   194b4:	beq	194e0 <dcngettext@plt+0x8214>
   194b8:	str	r4, [r5]
   194bc:	pop	{r4, r5, r6, pc}
   194c0:	cmp	r4, #0
   194c4:	moveq	r4, #64	; 0x40
   194c8:	mov	r1, r4
   194cc:	mov	r2, #1
   194d0:	bl	19bf4 <dcngettext@plt+0x8928>
   194d4:	cmp	r0, #0
   194d8:	bne	194b8 <dcngettext@plt+0x81ec>
   194dc:	bl	19988 <dcngettext@plt+0x86bc>
   194e0:	cmp	r4, #0
   194e4:	bne	194dc <dcngettext@plt+0x8210>
   194e8:	str	r4, [r5]
   194ec:	pop	{r4, r5, r6, pc}
   194f0:	cmp	r0, #0
   194f4:	push	{r4, r5, r6, lr}
   194f8:	mov	r5, r1
   194fc:	ldr	r4, [r1]
   19500:	mov	r6, r2
   19504:	beq	19548 <dcngettext@plt+0x827c>
   19508:	lsr	r1, r4, #1
   1950c:	add	r3, r1, #1
   19510:	mvn	r3, r3
   19514:	cmp	r4, r3
   19518:	bhi	19580 <dcngettext@plt+0x82b4>
   1951c:	add	r4, r4, #1
   19520:	add	r4, r4, r1
   19524:	mov	r1, r4
   19528:	bl	19bf4 <dcngettext@plt+0x8928>
   1952c:	cmp	r0, #0
   19530:	bne	19540 <dcngettext@plt+0x8274>
   19534:	cmp	r4, #0
   19538:	cmpne	r6, #0
   1953c:	bne	19580 <dcngettext@plt+0x82b4>
   19540:	str	r4, [r5]
   19544:	pop	{r4, r5, r6, pc}
   19548:	cmp	r4, #0
   1954c:	bne	19568 <dcngettext@plt+0x829c>
   19550:	mov	r1, r2
   19554:	mov	r0, #64	; 0x40
   19558:	bl	19d34 <dcngettext@plt+0x8a68>
   1955c:	cmp	r0, #0
   19560:	movne	r4, r0
   19564:	addeq	r4, r0, #1
   19568:	mov	r2, r6
   1956c:	mov	r1, r4
   19570:	mov	r0, #0
   19574:	bl	19bf4 <dcngettext@plt+0x8928>
   19578:	cmp	r0, #0
   1957c:	bne	19540 <dcngettext@plt+0x8274>
   19580:	bl	19988 <dcngettext@plt+0x86bc>
   19584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19588:	sub	sp, sp, #12
   1958c:	ldr	r6, [r1]
   19590:	mov	r8, r1
   19594:	mov	r9, r0
   19598:	asrs	r4, r6, #1
   1959c:	mov	sl, r2
   195a0:	mov	fp, r3
   195a4:	ldr	r7, [sp, #48]	; 0x30
   195a8:	bmi	19724 <dcngettext@plt+0x8458>
   195ac:	mvn	r1, #-2147483648	; 0x80000000
   195b0:	sub	r1, r1, r4
   195b4:	cmp	r6, r1
   195b8:	movle	r1, #0
   195bc:	movgt	r1, #1
   195c0:	mvn	r3, fp
   195c4:	cmp	r1, #0
   195c8:	addeq	r4, r4, r6
   195cc:	mvnne	r4, #-2147483648	; 0x80000000
   195d0:	lsr	r3, r3, #31
   195d4:	cmp	fp, r4
   195d8:	movge	r2, #0
   195dc:	andlt	r2, r3, #1
   195e0:	cmp	r2, #0
   195e4:	beq	196d4 <dcngettext@plt+0x8408>
   195e8:	cmp	r7, #0
   195ec:	blt	197bc <dcngettext@plt+0x84f0>
   195f0:	bne	197b4 <dcngettext@plt+0x84e8>
   195f4:	mov	r5, #64	; 0x40
   195f8:	mov	r1, r7
   195fc:	mov	r0, r5
   19600:	str	r3, [sp, #4]
   19604:	bl	19f40 <dcngettext@plt+0x8c74>
   19608:	mov	r1, r7
   1960c:	mov	r4, r0
   19610:	mov	r0, r5
   19614:	bl	1a160 <dcngettext@plt+0x8e94>
   19618:	ldr	r3, [sp, #4]
   1961c:	sub	r5, r5, r1
   19620:	cmp	r9, #0
   19624:	sub	r2, r4, r6
   19628:	streq	r9, [r8]
   1962c:	cmp	r2, sl
   19630:	bge	196b4 <dcngettext@plt+0x83e8>
   19634:	cmp	sl, #0
   19638:	blt	19754 <dcngettext@plt+0x8488>
   1963c:	cmp	r6, #0
   19640:	blt	19660 <dcngettext@plt+0x8394>
   19644:	mvn	r2, #-2147483648	; 0x80000000
   19648:	sub	r2, r2, sl
   1964c:	cmp	r6, r2
   19650:	movle	r2, #0
   19654:	movgt	r2, #1
   19658:	cmp	r2, #0
   1965c:	bne	19750 <dcngettext@plt+0x8484>
   19660:	add	r6, r6, sl
   19664:	cmp	fp, r6
   19668:	movge	r3, #0
   1966c:	andlt	r3, r3, #1
   19670:	cmp	r3, #0
   19674:	mov	r4, r6
   19678:	bne	19750 <dcngettext@plt+0x8484>
   1967c:	cmp	r7, #0
   19680:	blt	19768 <dcngettext@plt+0x849c>
   19684:	beq	196b0 <dcngettext@plt+0x83e4>
   19688:	cmp	r6, #0
   1968c:	blt	1980c <dcngettext@plt+0x8540>
   19690:	mov	r1, r7
   19694:	mvn	r0, #-2147483648	; 0x80000000
   19698:	bl	19f40 <dcngettext@plt+0x8c74>
   1969c:	cmp	r6, r0
   196a0:	movle	r0, #0
   196a4:	movgt	r0, #1
   196a8:	cmp	r0, #0
   196ac:	bne	19750 <dcngettext@plt+0x8484>
   196b0:	mul	r5, r6, r7
   196b4:	mov	r1, r5
   196b8:	mov	r0, r9
   196bc:	bl	19a3c <dcngettext@plt+0x8770>
   196c0:	cmp	r0, #0
   196c4:	beq	19738 <dcngettext@plt+0x846c>
   196c8:	str	r4, [r8]
   196cc:	add	sp, sp, #12
   196d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196d4:	cmp	r7, #0
   196d8:	blt	19794 <dcngettext@plt+0x84c8>
   196dc:	beq	195f4 <dcngettext@plt+0x8328>
   196e0:	cmp	r4, #0
   196e4:	blt	197c4 <dcngettext@plt+0x84f8>
   196e8:	mov	r1, r7
   196ec:	mvn	r0, #-2147483648	; 0x80000000
   196f0:	str	r3, [sp, #4]
   196f4:	bl	19f40 <dcngettext@plt+0x8c74>
   196f8:	ldr	r3, [sp, #4]
   196fc:	cmp	r0, r4
   19700:	movge	r0, #0
   19704:	movlt	r0, #1
   19708:	cmp	r0, #0
   1970c:	mvnne	r5, #-2147483648	; 0x80000000
   19710:	bne	195f8 <dcngettext@plt+0x832c>
   19714:	mul	r5, r7, r4
   19718:	cmp	r5, #63	; 0x3f
   1971c:	bgt	19620 <dcngettext@plt+0x8354>
   19720:	b	195f4 <dcngettext@plt+0x8328>
   19724:	rsb	r1, r4, #-2147483648	; 0x80000000
   19728:	cmp	r6, r1
   1972c:	movge	r1, #0
   19730:	movlt	r1, #1
   19734:	b	195c0 <dcngettext@plt+0x82f4>
   19738:	adds	r5, r5, #0
   1973c:	movne	r5, #1
   19740:	cmp	r9, #0
   19744:	orreq	r5, r5, #1
   19748:	cmp	r5, #0
   1974c:	beq	196c8 <dcngettext@plt+0x83fc>
   19750:	bl	19988 <dcngettext@plt+0x86bc>
   19754:	rsb	r2, sl, #-2147483648	; 0x80000000
   19758:	cmp	r6, r2
   1975c:	movge	r2, #0
   19760:	movlt	r2, #1
   19764:	b	19658 <dcngettext@plt+0x838c>
   19768:	cmp	r6, #0
   1976c:	blt	197f0 <dcngettext@plt+0x8524>
   19770:	cmn	r7, #1
   19774:	beq	196b0 <dcngettext@plt+0x83e4>
   19778:	mov	r1, r7
   1977c:	mov	r0, #-2147483648	; 0x80000000
   19780:	bl	19f40 <dcngettext@plt+0x8c74>
   19784:	cmp	r6, r0
   19788:	movle	r0, #0
   1978c:	movgt	r0, #1
   19790:	b	196a8 <dcngettext@plt+0x83dc>
   19794:	cmp	r4, #0
   19798:	blt	19830 <dcngettext@plt+0x8564>
   1979c:	cmn	r7, #1
   197a0:	beq	19714 <dcngettext@plt+0x8448>
   197a4:	str	r3, [sp, #4]
   197a8:	mov	r1, r7
   197ac:	mov	r0, #-2147483648	; 0x80000000
   197b0:	b	196f4 <dcngettext@plt+0x8428>
   197b4:	mov	r4, fp
   197b8:	b	196e8 <dcngettext@plt+0x841c>
   197bc:	mov	r4, fp
   197c0:	b	1979c <dcngettext@plt+0x84d0>
   197c4:	cmn	r4, #1
   197c8:	beq	19714 <dcngettext@plt+0x8448>
   197cc:	mov	r1, r4
   197d0:	mov	r0, #-2147483648	; 0x80000000
   197d4:	str	r3, [sp, #4]
   197d8:	bl	19f40 <dcngettext@plt+0x8c74>
   197dc:	ldr	r3, [sp, #4]
   197e0:	cmp	r7, r0
   197e4:	movle	r0, #0
   197e8:	movgt	r0, #1
   197ec:	b	19708 <dcngettext@plt+0x843c>
   197f0:	mov	r1, r7
   197f4:	mvn	r0, #-2147483648	; 0x80000000
   197f8:	bl	19f40 <dcngettext@plt+0x8c74>
   197fc:	cmp	r6, r0
   19800:	movge	r0, #0
   19804:	movlt	r0, #1
   19808:	b	196a8 <dcngettext@plt+0x83dc>
   1980c:	cmn	r6, #1
   19810:	beq	196b0 <dcngettext@plt+0x83e4>
   19814:	mov	r1, r6
   19818:	mov	r0, #-2147483648	; 0x80000000
   1981c:	bl	19f40 <dcngettext@plt+0x8c74>
   19820:	cmp	r7, r0
   19824:	movle	r0, #0
   19828:	movgt	r0, #1
   1982c:	b	196a8 <dcngettext@plt+0x83dc>
   19830:	mov	r1, r7
   19834:	mvn	r0, #-2147483648	; 0x80000000
   19838:	str	r3, [sp, #4]
   1983c:	bl	19f40 <dcngettext@plt+0x8c74>
   19840:	ldr	r3, [sp, #4]
   19844:	cmp	r0, r4
   19848:	movle	r0, #0
   1984c:	movgt	r0, #1
   19850:	b	19708 <dcngettext@plt+0x843c>
   19854:	push	{r4, lr}
   19858:	mov	r1, #1
   1985c:	bl	199c8 <dcngettext@plt+0x86fc>
   19860:	cmp	r0, #0
   19864:	popne	{r4, pc}
   19868:	bl	19988 <dcngettext@plt+0x86bc>
   1986c:	push	{r4, lr}
   19870:	mov	r1, #1
   19874:	bl	199c8 <dcngettext@plt+0x86fc>
   19878:	cmp	r0, #0
   1987c:	popne	{r4, pc}
   19880:	bl	19988 <dcngettext@plt+0x86bc>
   19884:	push	{r4, lr}
   19888:	bl	199c8 <dcngettext@plt+0x86fc>
   1988c:	cmp	r0, #0
   19890:	popne	{r4, pc}
   19894:	bl	19988 <dcngettext@plt+0x86bc>
   19898:	push	{r4, lr}
   1989c:	bl	199c8 <dcngettext@plt+0x86fc>
   198a0:	cmp	r0, #0
   198a4:	popne	{r4, pc}
   198a8:	bl	19988 <dcngettext@plt+0x86bc>
   198ac:	push	{r4, r5, r6, lr}
   198b0:	mov	r6, r0
   198b4:	mov	r0, r1
   198b8:	mov	r4, r1
   198bc:	bl	19a10 <dcngettext@plt+0x8744>
   198c0:	subs	r5, r0, #0
   198c4:	beq	198dc <dcngettext@plt+0x8610>
   198c8:	mov	r2, r4
   198cc:	mov	r1, r6
   198d0:	bl	11008 <memcpy@plt>
   198d4:	mov	r0, r5
   198d8:	pop	{r4, r5, r6, pc}
   198dc:	bl	19988 <dcngettext@plt+0x86bc>
   198e0:	push	{r4, r5, r6, lr}
   198e4:	mov	r6, r0
   198e8:	mov	r0, r1
   198ec:	mov	r4, r1
   198f0:	bl	19a10 <dcngettext@plt+0x8744>
   198f4:	subs	r5, r0, #0
   198f8:	beq	19910 <dcngettext@plt+0x8644>
   198fc:	mov	r2, r4
   19900:	mov	r1, r6
   19904:	bl	11008 <memcpy@plt>
   19908:	mov	r0, r5
   1990c:	pop	{r4, r5, r6, pc}
   19910:	bl	19988 <dcngettext@plt+0x86bc>
   19914:	push	{r4, r5, r6, lr}
   19918:	mov	r6, r0
   1991c:	add	r0, r1, #1
   19920:	mov	r4, r1
   19924:	bl	19a10 <dcngettext@plt+0x8744>
   19928:	subs	r5, r0, #0
   1992c:	beq	1994c <dcngettext@plt+0x8680>
   19930:	mov	r3, #0
   19934:	mov	r1, r6
   19938:	strb	r3, [r5, r4]
   1993c:	mov	r2, r4
   19940:	bl	11008 <memcpy@plt>
   19944:	mov	r0, r5
   19948:	pop	{r4, r5, r6, pc}
   1994c:	bl	19988 <dcngettext@plt+0x86bc>
   19950:	push	{r4, r5, r6, lr}
   19954:	mov	r6, r0
   19958:	bl	1117c <strlen@plt>
   1995c:	add	r4, r0, #1
   19960:	mov	r0, r4
   19964:	bl	19a10 <dcngettext@plt+0x8744>
   19968:	subs	r5, r0, #0
   1996c:	beq	19984 <dcngettext@plt+0x86b8>
   19970:	mov	r2, r4
   19974:	mov	r1, r6
   19978:	bl	11008 <memcpy@plt>
   1997c:	mov	r0, r5
   19980:	pop	{r4, r5, r6, pc}
   19984:	bl	19988 <dcngettext@plt+0x86bc>
   19988:	ldr	r3, [pc, #44]	; 199bc <dcngettext@plt+0x86f0>
   1998c:	push	{r4, lr}
   19990:	mov	r2, #5
   19994:	ldr	r1, [pc, #36]	; 199c0 <dcngettext@plt+0x86f4>
   19998:	mov	r0, #0
   1999c:	ldr	r4, [r3]
   199a0:	bl	11044 <dcgettext@plt>
   199a4:	ldr	r2, [pc, #24]	; 199c4 <dcngettext@plt+0x86f8>
   199a8:	mov	r1, #0
   199ac:	mov	r3, r0
   199b0:	mov	r0, r4
   199b4:	bl	110d4 <error@plt>
   199b8:	bl	112b4 <abort@plt>
   199bc:	andeq	fp, r2, r4, lsr r1
   199c0:	ldrdeq	sl, [r1], -r0
   199c4:	andeq	sl, r1, r0, lsr #14
   199c8:	cmp	r1, #0
   199cc:	cmpne	r0, #0
   199d0:	moveq	r1, #1
   199d4:	moveq	r0, r1
   199d8:	umull	r2, r3, r0, r1
   199dc:	adds	r3, r3, #0
   199e0:	movne	r3, #1
   199e4:	cmp	r2, #0
   199e8:	blt	199f8 <dcngettext@plt+0x872c>
   199ec:	cmp	r3, #0
   199f0:	bne	199f8 <dcngettext@plt+0x872c>
   199f4:	b	10f90 <calloc@plt>
   199f8:	push	{r4, lr}
   199fc:	bl	11194 <__errno_location@plt>
   19a00:	mov	r3, #12
   19a04:	str	r3, [r0]
   19a08:	mov	r0, #0
   19a0c:	pop	{r4, pc}
   19a10:	cmp	r0, #0
   19a14:	moveq	r0, #1
   19a18:	cmp	r0, #0
   19a1c:	blt	19a24 <dcngettext@plt+0x8758>
   19a20:	b	110ec <malloc@plt>
   19a24:	push	{r4, lr}
   19a28:	bl	11194 <__errno_location@plt>
   19a2c:	mov	r3, #12
   19a30:	str	r3, [r0]
   19a34:	mov	r0, #0
   19a38:	pop	{r4, pc}
   19a3c:	cmp	r0, #0
   19a40:	beq	19a64 <dcngettext@plt+0x8798>
   19a44:	cmp	r1, #0
   19a48:	push	{lr}		; (str lr, [sp, #-4]!)
   19a4c:	sub	sp, sp, #12
   19a50:	beq	19a6c <dcngettext@plt+0x87a0>
   19a54:	blt	19a84 <dcngettext@plt+0x87b8>
   19a58:	add	sp, sp, #12
   19a5c:	pop	{lr}		; (ldr lr, [sp], #4)
   19a60:	b	1105c <realloc@plt>
   19a64:	mov	r0, r1
   19a68:	b	19a10 <dcngettext@plt+0x8744>
   19a6c:	str	r1, [sp, #4]
   19a70:	bl	19b14 <dcngettext@plt+0x8848>
   19a74:	ldr	r3, [sp, #4]
   19a78:	mov	r0, r3
   19a7c:	add	sp, sp, #12
   19a80:	pop	{pc}		; (ldr pc, [sp], #4)
   19a84:	bl	11194 <__errno_location@plt>
   19a88:	mov	r2, #12
   19a8c:	mov	r3, #0
   19a90:	str	r2, [r0]
   19a94:	b	19a78 <dcngettext@plt+0x87ac>
   19a98:	push	{r4, r5, r6, lr}
   19a9c:	mov	r4, r0
   19aa0:	bl	110bc <__fpending@plt>
   19aa4:	ldr	r5, [r4]
   19aa8:	and	r5, r5, #32
   19aac:	mov	r6, r0
   19ab0:	mov	r0, r4
   19ab4:	bl	11e00 <dcngettext@plt+0xb34>
   19ab8:	cmp	r5, #0
   19abc:	mov	r4, r0
   19ac0:	bne	19ae0 <dcngettext@plt+0x8814>
   19ac4:	cmp	r0, #0
   19ac8:	beq	19ad8 <dcngettext@plt+0x880c>
   19acc:	cmp	r6, #0
   19ad0:	beq	19afc <dcngettext@plt+0x8830>
   19ad4:	mvn	r4, #0
   19ad8:	mov	r0, r4
   19adc:	pop	{r4, r5, r6, pc}
   19ae0:	cmp	r0, #0
   19ae4:	bne	19ad4 <dcngettext@plt+0x8808>
   19ae8:	bl	11194 <__errno_location@plt>
   19aec:	str	r4, [r0]
   19af0:	mvn	r4, #0
   19af4:	mov	r0, r4
   19af8:	pop	{r4, r5, r6, pc}
   19afc:	bl	11194 <__errno_location@plt>
   19b00:	ldr	r4, [r0]
   19b04:	subs	r4, r4, #9
   19b08:	mvnne	r4, #0
   19b0c:	mov	r0, r4
   19b10:	pop	{r4, r5, r6, pc}
   19b14:	push	{r4, r5, lr}
   19b18:	sub	sp, sp, #12
   19b1c:	mov	r5, r0
   19b20:	bl	11194 <__errno_location@plt>
   19b24:	mov	r2, #0
   19b28:	mov	r4, r0
   19b2c:	ldr	r3, [r0]
   19b30:	str	r2, [r4]
   19b34:	mov	r0, r5
   19b38:	str	r3, [sp]
   19b3c:	str	r3, [sp, #4]
   19b40:	bl	10ff0 <free@plt>
   19b44:	ldr	r3, [r4]
   19b48:	add	r2, sp, #8
   19b4c:	cmp	r3, #0
   19b50:	moveq	r3, #4
   19b54:	movne	r3, #0
   19b58:	add	r3, r2, r3
   19b5c:	ldr	r3, [r3, #-8]
   19b60:	str	r3, [r4]
   19b64:	add	sp, sp, #12
   19b68:	pop	{r4, r5, pc}
   19b6c:	push	{r4, lr}
   19b70:	mov	r0, #14
   19b74:	bl	11248 <nl_langinfo@plt>
   19b78:	cmp	r0, #0
   19b7c:	beq	19b94 <dcngettext@plt+0x88c8>
   19b80:	ldrb	r2, [r0]
   19b84:	ldr	r3, [pc, #16]	; 19b9c <dcngettext@plt+0x88d0>
   19b88:	cmp	r2, #0
   19b8c:	moveq	r0, r3
   19b90:	pop	{r4, pc}
   19b94:	ldr	r0, [pc]	; 19b9c <dcngettext@plt+0x88d0>
   19b98:	pop	{r4, pc}
   19b9c:	andeq	sl, r1, r4, ror #23
   19ba0:	push	{r4, r5, r6, r7, lr}
   19ba4:	subs	r6, r0, #0
   19ba8:	sub	sp, sp, #12
   19bac:	addeq	r6, sp, #4
   19bb0:	mov	r0, r6
   19bb4:	mov	r5, r2
   19bb8:	mov	r7, r1
   19bbc:	bl	110c8 <mbrtowc@plt>
   19bc0:	cmp	r5, #0
   19bc4:	cmnne	r0, #3
   19bc8:	mov	r4, r0
   19bcc:	bls	19be8 <dcngettext@plt+0x891c>
   19bd0:	mov	r0, #0
   19bd4:	bl	19c40 <dcngettext@plt+0x8974>
   19bd8:	cmp	r0, #0
   19bdc:	moveq	r4, #1
   19be0:	ldrbeq	r3, [r7]
   19be4:	streq	r3, [r6]
   19be8:	mov	r0, r4
   19bec:	add	sp, sp, #12
   19bf0:	pop	{r4, r5, r6, r7, pc}
   19bf4:	push	{r4, r5, r6, lr}
   19bf8:	subs	r4, r2, #0
   19bfc:	mov	r6, r0
   19c00:	mov	r5, r1
   19c04:	beq	19c30 <dcngettext@plt+0x8964>
   19c08:	mov	r1, r4
   19c0c:	mvn	r0, #0
   19c10:	bl	19d34 <dcngettext@plt+0x8a68>
   19c14:	cmp	r0, r5
   19c18:	bcs	19c30 <dcngettext@plt+0x8964>
   19c1c:	bl	11194 <__errno_location@plt>
   19c20:	mov	r3, #12
   19c24:	str	r3, [r0]
   19c28:	mov	r0, #0
   19c2c:	pop	{r4, r5, r6, pc}
   19c30:	mul	r1, r5, r4
   19c34:	mov	r0, r6
   19c38:	pop	{r4, r5, r6, lr}
   19c3c:	b	19a3c <dcngettext@plt+0x8770>
   19c40:	push	{lr}		; (str lr, [sp, #-4]!)
   19c44:	sub	sp, sp, #268	; 0x10c
   19c48:	add	r1, sp, #4
   19c4c:	ldr	r2, [pc, #60]	; 19c90 <dcngettext@plt+0x89c4>
   19c50:	bl	19c9c <dcngettext@plt+0x89d0>
   19c54:	cmp	r0, #0
   19c58:	movne	r0, #0
   19c5c:	bne	19c88 <dcngettext@plt+0x89bc>
   19c60:	ldr	r1, [pc, #44]	; 19c94 <dcngettext@plt+0x89c8>
   19c64:	add	r0, sp, #4
   19c68:	bl	10fc0 <strcmp@plt>
   19c6c:	cmp	r0, #0
   19c70:	beq	19c88 <dcngettext@plt+0x89bc>
   19c74:	add	r0, sp, #4
   19c78:	ldr	r1, [pc, #24]	; 19c98 <dcngettext@plt+0x89cc>
   19c7c:	bl	10fc0 <strcmp@plt>
   19c80:	adds	r0, r0, #0
   19c84:	movne	r0, #1
   19c88:	add	sp, sp, #268	; 0x10c
   19c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   19c90:	andeq	r0, r0, r1, lsl #2
   19c94:	andeq	sl, r1, ip, lsl #14
   19c98:	andeq	sl, r1, ip, ror #23
   19c9c:	push	{r4, r5, r6, lr}
   19ca0:	mov	r5, r1
   19ca4:	mov	r1, #0
   19ca8:	mov	r4, r2
   19cac:	bl	11230 <setlocale@plt>
   19cb0:	subs	r6, r0, #0
   19cb4:	beq	19d10 <dcngettext@plt+0x8a44>
   19cb8:	bl	1117c <strlen@plt>
   19cbc:	cmp	r4, r0
   19cc0:	bhi	19cf8 <dcngettext@plt+0x8a2c>
   19cc4:	cmp	r4, #0
   19cc8:	bne	19cd4 <dcngettext@plt+0x8a08>
   19ccc:	mov	r0, #34	; 0x22
   19cd0:	pop	{r4, r5, r6, pc}
   19cd4:	sub	r4, r4, #1
   19cd8:	mov	r1, r6
   19cdc:	mov	r2, r4
   19ce0:	mov	r0, r5
   19ce4:	bl	11008 <memcpy@plt>
   19ce8:	mov	r3, #0
   19cec:	strb	r3, [r5, r4]
   19cf0:	mov	r0, #34	; 0x22
   19cf4:	pop	{r4, r5, r6, pc}
   19cf8:	add	r2, r0, #1
   19cfc:	mov	r1, r6
   19d00:	mov	r0, r5
   19d04:	bl	11008 <memcpy@plt>
   19d08:	mov	r0, #0
   19d0c:	pop	{r4, r5, r6, pc}
   19d10:	cmp	r4, #0
   19d14:	beq	19d24 <dcngettext@plt+0x8a58>
   19d18:	strb	r6, [r5]
   19d1c:	mov	r0, #22
   19d20:	pop	{r4, r5, r6, pc}
   19d24:	mov	r0, #22
   19d28:	pop	{r4, r5, r6, pc}
   19d2c:	mov	r1, #0
   19d30:	b	11230 <setlocale@plt>
   19d34:	subs	r2, r1, #1
   19d38:	bxeq	lr
   19d3c:	bcc	19f14 <dcngettext@plt+0x8c48>
   19d40:	cmp	r0, r1
   19d44:	bls	19ef8 <dcngettext@plt+0x8c2c>
   19d48:	tst	r1, r2
   19d4c:	beq	19f04 <dcngettext@plt+0x8c38>
   19d50:	clz	r3, r0
   19d54:	clz	r2, r1
   19d58:	sub	r3, r2, r3
   19d5c:	rsbs	r3, r3, #31
   19d60:	addne	r3, r3, r3, lsl #1
   19d64:	mov	r2, #0
   19d68:	addne	pc, pc, r3, lsl #2
   19d6c:	nop			; (mov r0, r0)
   19d70:	cmp	r0, r1, lsl #31
   19d74:	adc	r2, r2, r2
   19d78:	subcs	r0, r0, r1, lsl #31
   19d7c:	cmp	r0, r1, lsl #30
   19d80:	adc	r2, r2, r2
   19d84:	subcs	r0, r0, r1, lsl #30
   19d88:	cmp	r0, r1, lsl #29
   19d8c:	adc	r2, r2, r2
   19d90:	subcs	r0, r0, r1, lsl #29
   19d94:	cmp	r0, r1, lsl #28
   19d98:	adc	r2, r2, r2
   19d9c:	subcs	r0, r0, r1, lsl #28
   19da0:	cmp	r0, r1, lsl #27
   19da4:	adc	r2, r2, r2
   19da8:	subcs	r0, r0, r1, lsl #27
   19dac:	cmp	r0, r1, lsl #26
   19db0:	adc	r2, r2, r2
   19db4:	subcs	r0, r0, r1, lsl #26
   19db8:	cmp	r0, r1, lsl #25
   19dbc:	adc	r2, r2, r2
   19dc0:	subcs	r0, r0, r1, lsl #25
   19dc4:	cmp	r0, r1, lsl #24
   19dc8:	adc	r2, r2, r2
   19dcc:	subcs	r0, r0, r1, lsl #24
   19dd0:	cmp	r0, r1, lsl #23
   19dd4:	adc	r2, r2, r2
   19dd8:	subcs	r0, r0, r1, lsl #23
   19ddc:	cmp	r0, r1, lsl #22
   19de0:	adc	r2, r2, r2
   19de4:	subcs	r0, r0, r1, lsl #22
   19de8:	cmp	r0, r1, lsl #21
   19dec:	adc	r2, r2, r2
   19df0:	subcs	r0, r0, r1, lsl #21
   19df4:	cmp	r0, r1, lsl #20
   19df8:	adc	r2, r2, r2
   19dfc:	subcs	r0, r0, r1, lsl #20
   19e00:	cmp	r0, r1, lsl #19
   19e04:	adc	r2, r2, r2
   19e08:	subcs	r0, r0, r1, lsl #19
   19e0c:	cmp	r0, r1, lsl #18
   19e10:	adc	r2, r2, r2
   19e14:	subcs	r0, r0, r1, lsl #18
   19e18:	cmp	r0, r1, lsl #17
   19e1c:	adc	r2, r2, r2
   19e20:	subcs	r0, r0, r1, lsl #17
   19e24:	cmp	r0, r1, lsl #16
   19e28:	adc	r2, r2, r2
   19e2c:	subcs	r0, r0, r1, lsl #16
   19e30:	cmp	r0, r1, lsl #15
   19e34:	adc	r2, r2, r2
   19e38:	subcs	r0, r0, r1, lsl #15
   19e3c:	cmp	r0, r1, lsl #14
   19e40:	adc	r2, r2, r2
   19e44:	subcs	r0, r0, r1, lsl #14
   19e48:	cmp	r0, r1, lsl #13
   19e4c:	adc	r2, r2, r2
   19e50:	subcs	r0, r0, r1, lsl #13
   19e54:	cmp	r0, r1, lsl #12
   19e58:	adc	r2, r2, r2
   19e5c:	subcs	r0, r0, r1, lsl #12
   19e60:	cmp	r0, r1, lsl #11
   19e64:	adc	r2, r2, r2
   19e68:	subcs	r0, r0, r1, lsl #11
   19e6c:	cmp	r0, r1, lsl #10
   19e70:	adc	r2, r2, r2
   19e74:	subcs	r0, r0, r1, lsl #10
   19e78:	cmp	r0, r1, lsl #9
   19e7c:	adc	r2, r2, r2
   19e80:	subcs	r0, r0, r1, lsl #9
   19e84:	cmp	r0, r1, lsl #8
   19e88:	adc	r2, r2, r2
   19e8c:	subcs	r0, r0, r1, lsl #8
   19e90:	cmp	r0, r1, lsl #7
   19e94:	adc	r2, r2, r2
   19e98:	subcs	r0, r0, r1, lsl #7
   19e9c:	cmp	r0, r1, lsl #6
   19ea0:	adc	r2, r2, r2
   19ea4:	subcs	r0, r0, r1, lsl #6
   19ea8:	cmp	r0, r1, lsl #5
   19eac:	adc	r2, r2, r2
   19eb0:	subcs	r0, r0, r1, lsl #5
   19eb4:	cmp	r0, r1, lsl #4
   19eb8:	adc	r2, r2, r2
   19ebc:	subcs	r0, r0, r1, lsl #4
   19ec0:	cmp	r0, r1, lsl #3
   19ec4:	adc	r2, r2, r2
   19ec8:	subcs	r0, r0, r1, lsl #3
   19ecc:	cmp	r0, r1, lsl #2
   19ed0:	adc	r2, r2, r2
   19ed4:	subcs	r0, r0, r1, lsl #2
   19ed8:	cmp	r0, r1, lsl #1
   19edc:	adc	r2, r2, r2
   19ee0:	subcs	r0, r0, r1, lsl #1
   19ee4:	cmp	r0, r1
   19ee8:	adc	r2, r2, r2
   19eec:	subcs	r0, r0, r1
   19ef0:	mov	r0, r2
   19ef4:	bx	lr
   19ef8:	moveq	r0, #1
   19efc:	movne	r0, #0
   19f00:	bx	lr
   19f04:	clz	r2, r1
   19f08:	rsb	r2, r2, #31
   19f0c:	lsr	r0, r0, r2
   19f10:	bx	lr
   19f14:	cmp	r0, #0
   19f18:	mvnne	r0, #0
   19f1c:	b	1a180 <dcngettext@plt+0x8eb4>
   19f20:	cmp	r1, #0
   19f24:	beq	19f14 <dcngettext@plt+0x8c48>
   19f28:	push	{r0, r1, lr}
   19f2c:	bl	19d34 <dcngettext@plt+0x8a68>
   19f30:	pop	{r1, r2, lr}
   19f34:	mul	r3, r2, r0
   19f38:	sub	r1, r1, r3
   19f3c:	bx	lr
   19f40:	cmp	r1, #0
   19f44:	beq	1a150 <dcngettext@plt+0x8e84>
   19f48:	eor	ip, r0, r1
   19f4c:	rsbmi	r1, r1, #0
   19f50:	subs	r2, r1, #1
   19f54:	beq	1a11c <dcngettext@plt+0x8e50>
   19f58:	movs	r3, r0
   19f5c:	rsbmi	r3, r0, #0
   19f60:	cmp	r3, r1
   19f64:	bls	1a128 <dcngettext@plt+0x8e5c>
   19f68:	tst	r1, r2
   19f6c:	beq	1a138 <dcngettext@plt+0x8e6c>
   19f70:	clz	r2, r3
   19f74:	clz	r0, r1
   19f78:	sub	r2, r0, r2
   19f7c:	rsbs	r2, r2, #31
   19f80:	addne	r2, r2, r2, lsl #1
   19f84:	mov	r0, #0
   19f88:	addne	pc, pc, r2, lsl #2
   19f8c:	nop			; (mov r0, r0)
   19f90:	cmp	r3, r1, lsl #31
   19f94:	adc	r0, r0, r0
   19f98:	subcs	r3, r3, r1, lsl #31
   19f9c:	cmp	r3, r1, lsl #30
   19fa0:	adc	r0, r0, r0
   19fa4:	subcs	r3, r3, r1, lsl #30
   19fa8:	cmp	r3, r1, lsl #29
   19fac:	adc	r0, r0, r0
   19fb0:	subcs	r3, r3, r1, lsl #29
   19fb4:	cmp	r3, r1, lsl #28
   19fb8:	adc	r0, r0, r0
   19fbc:	subcs	r3, r3, r1, lsl #28
   19fc0:	cmp	r3, r1, lsl #27
   19fc4:	adc	r0, r0, r0
   19fc8:	subcs	r3, r3, r1, lsl #27
   19fcc:	cmp	r3, r1, lsl #26
   19fd0:	adc	r0, r0, r0
   19fd4:	subcs	r3, r3, r1, lsl #26
   19fd8:	cmp	r3, r1, lsl #25
   19fdc:	adc	r0, r0, r0
   19fe0:	subcs	r3, r3, r1, lsl #25
   19fe4:	cmp	r3, r1, lsl #24
   19fe8:	adc	r0, r0, r0
   19fec:	subcs	r3, r3, r1, lsl #24
   19ff0:	cmp	r3, r1, lsl #23
   19ff4:	adc	r0, r0, r0
   19ff8:	subcs	r3, r3, r1, lsl #23
   19ffc:	cmp	r3, r1, lsl #22
   1a000:	adc	r0, r0, r0
   1a004:	subcs	r3, r3, r1, lsl #22
   1a008:	cmp	r3, r1, lsl #21
   1a00c:	adc	r0, r0, r0
   1a010:	subcs	r3, r3, r1, lsl #21
   1a014:	cmp	r3, r1, lsl #20
   1a018:	adc	r0, r0, r0
   1a01c:	subcs	r3, r3, r1, lsl #20
   1a020:	cmp	r3, r1, lsl #19
   1a024:	adc	r0, r0, r0
   1a028:	subcs	r3, r3, r1, lsl #19
   1a02c:	cmp	r3, r1, lsl #18
   1a030:	adc	r0, r0, r0
   1a034:	subcs	r3, r3, r1, lsl #18
   1a038:	cmp	r3, r1, lsl #17
   1a03c:	adc	r0, r0, r0
   1a040:	subcs	r3, r3, r1, lsl #17
   1a044:	cmp	r3, r1, lsl #16
   1a048:	adc	r0, r0, r0
   1a04c:	subcs	r3, r3, r1, lsl #16
   1a050:	cmp	r3, r1, lsl #15
   1a054:	adc	r0, r0, r0
   1a058:	subcs	r3, r3, r1, lsl #15
   1a05c:	cmp	r3, r1, lsl #14
   1a060:	adc	r0, r0, r0
   1a064:	subcs	r3, r3, r1, lsl #14
   1a068:	cmp	r3, r1, lsl #13
   1a06c:	adc	r0, r0, r0
   1a070:	subcs	r3, r3, r1, lsl #13
   1a074:	cmp	r3, r1, lsl #12
   1a078:	adc	r0, r0, r0
   1a07c:	subcs	r3, r3, r1, lsl #12
   1a080:	cmp	r3, r1, lsl #11
   1a084:	adc	r0, r0, r0
   1a088:	subcs	r3, r3, r1, lsl #11
   1a08c:	cmp	r3, r1, lsl #10
   1a090:	adc	r0, r0, r0
   1a094:	subcs	r3, r3, r1, lsl #10
   1a098:	cmp	r3, r1, lsl #9
   1a09c:	adc	r0, r0, r0
   1a0a0:	subcs	r3, r3, r1, lsl #9
   1a0a4:	cmp	r3, r1, lsl #8
   1a0a8:	adc	r0, r0, r0
   1a0ac:	subcs	r3, r3, r1, lsl #8
   1a0b0:	cmp	r3, r1, lsl #7
   1a0b4:	adc	r0, r0, r0
   1a0b8:	subcs	r3, r3, r1, lsl #7
   1a0bc:	cmp	r3, r1, lsl #6
   1a0c0:	adc	r0, r0, r0
   1a0c4:	subcs	r3, r3, r1, lsl #6
   1a0c8:	cmp	r3, r1, lsl #5
   1a0cc:	adc	r0, r0, r0
   1a0d0:	subcs	r3, r3, r1, lsl #5
   1a0d4:	cmp	r3, r1, lsl #4
   1a0d8:	adc	r0, r0, r0
   1a0dc:	subcs	r3, r3, r1, lsl #4
   1a0e0:	cmp	r3, r1, lsl #3
   1a0e4:	adc	r0, r0, r0
   1a0e8:	subcs	r3, r3, r1, lsl #3
   1a0ec:	cmp	r3, r1, lsl #2
   1a0f0:	adc	r0, r0, r0
   1a0f4:	subcs	r3, r3, r1, lsl #2
   1a0f8:	cmp	r3, r1, lsl #1
   1a0fc:	adc	r0, r0, r0
   1a100:	subcs	r3, r3, r1, lsl #1
   1a104:	cmp	r3, r1
   1a108:	adc	r0, r0, r0
   1a10c:	subcs	r3, r3, r1
   1a110:	cmp	ip, #0
   1a114:	rsbmi	r0, r0, #0
   1a118:	bx	lr
   1a11c:	teq	ip, r0
   1a120:	rsbmi	r0, r0, #0
   1a124:	bx	lr
   1a128:	movcc	r0, #0
   1a12c:	asreq	r0, ip, #31
   1a130:	orreq	r0, r0, #1
   1a134:	bx	lr
   1a138:	clz	r2, r1
   1a13c:	rsb	r2, r2, #31
   1a140:	cmp	ip, #0
   1a144:	lsr	r0, r3, r2
   1a148:	rsbmi	r0, r0, #0
   1a14c:	bx	lr
   1a150:	cmp	r0, #0
   1a154:	mvngt	r0, #-2147483648	; 0x80000000
   1a158:	movlt	r0, #-2147483648	; 0x80000000
   1a15c:	b	1a180 <dcngettext@plt+0x8eb4>
   1a160:	cmp	r1, #0
   1a164:	beq	1a150 <dcngettext@plt+0x8e84>
   1a168:	push	{r0, r1, lr}
   1a16c:	bl	19f48 <dcngettext@plt+0x8c7c>
   1a170:	pop	{r1, r2, lr}
   1a174:	mul	r3, r2, r0
   1a178:	sub	r1, r1, r3
   1a17c:	bx	lr
   1a180:	push	{r1, lr}
   1a184:	mov	r0, #8
   1a188:	bl	10fa8 <raise@plt>
   1a18c:	pop	{r1, pc}
   1a190:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a194:	mov	r7, r0
   1a198:	ldr	r6, [pc, #72]	; 1a1e8 <dcngettext@plt+0x8f1c>
   1a19c:	ldr	r5, [pc, #72]	; 1a1ec <dcngettext@plt+0x8f20>
   1a1a0:	add	r6, pc, r6
   1a1a4:	add	r5, pc, r5
   1a1a8:	sub	r6, r6, r5
   1a1ac:	mov	r8, r1
   1a1b0:	mov	r9, r2
   1a1b4:	bl	10f70 <calloc@plt-0x20>
   1a1b8:	asrs	r6, r6, #2
   1a1bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a1c0:	mov	r4, #0
   1a1c4:	add	r4, r4, #1
   1a1c8:	ldr	r3, [r5], #4
   1a1cc:	mov	r2, r9
   1a1d0:	mov	r1, r8
   1a1d4:	mov	r0, r7
   1a1d8:	blx	r3
   1a1dc:	cmp	r6, r4
   1a1e0:	bne	1a1c4 <dcngettext@plt+0x8ef8>
   1a1e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a1e8:	andeq	r0, r1, r8, ror #26
   1a1ec:	andeq	r0, r1, r0, ror #26
   1a1f0:	bx	lr
   1a1f4:	ldr	r3, [pc, #12]	; 1a208 <dcngettext@plt+0x8f3c>
   1a1f8:	mov	r1, #0
   1a1fc:	add	r3, pc, r3
   1a200:	ldr	r2, [r3]
   1a204:	b	111a0 <__cxa_atexit@plt>
   1a208:	andeq	r0, r1, r8, lsr #30

Disassembly of section .fini:

0001a20c <.fini>:
   1a20c:	push	{r3, lr}
   1a210:	pop	{r3, pc}
