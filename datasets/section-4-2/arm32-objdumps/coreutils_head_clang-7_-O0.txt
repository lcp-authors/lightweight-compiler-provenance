
../repos/coreutils/src/head:     file format elf32-littlearm


Disassembly of section .init:

00010e30 <.init>:
   10e30:	push	{r3, lr}
   10e34:	bl	11120 <__assert_fail@plt+0x48>
   10e38:	pop	{r3, pc}

Disassembly of section .plt:

00010e3c <calloc@plt-0x14>:
   10e3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e40:	ldr	lr, [pc, #4]	; 10e4c <calloc@plt-0x4>
   10e44:	add	lr, pc, lr
   10e48:	ldr	pc, [lr, #8]!
   10e4c:			; <UNDEFINED> instruction: 0x0001f1b4

00010e50 <calloc@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #126976	; 0x1f000
   10e58:	ldr	pc, [ip, #436]!	; 0x1b4

00010e5c <fputs_unlocked@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #126976	; 0x1f000
   10e64:	ldr	pc, [ip, #428]!	; 0x1ac

00010e68 <raise@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #126976	; 0x1f000
   10e70:	ldr	pc, [ip, #420]!	; 0x1a4

00010e74 <strcmp@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #126976	; 0x1f000
   10e7c:	ldr	pc, [ip, #412]!	; 0x19c

00010e80 <printf@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #126976	; 0x1f000
   10e88:	ldr	pc, [ip, #404]!	; 0x194

00010e8c <read@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #126976	; 0x1f000
   10e94:	ldr	pc, [ip, #396]!	; 0x18c

00010e98 <fflush@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #126976	; 0x1f000
   10ea0:	ldr	pc, [ip, #388]!	; 0x184

00010ea4 <free@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #126976	; 0x1f000
   10eac:	ldr	pc, [ip, #380]!	; 0x17c

00010eb0 <_exit@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #126976	; 0x1f000
   10eb8:	ldr	pc, [ip, #372]!	; 0x174

00010ebc <memcpy@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #126976	; 0x1f000
   10ec4:	ldr	pc, [ip, #364]!	; 0x16c

00010ec8 <mbsinit@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #126976	; 0x1f000
   10ed0:	ldr	pc, [ip, #356]!	; 0x164

00010ed4 <fwrite_unlocked@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #126976	; 0x1f000
   10edc:	ldr	pc, [ip, #348]!	; 0x15c

00010ee0 <memcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #126976	; 0x1f000
   10ee8:	ldr	pc, [ip, #340]!	; 0x154

00010eec <realloc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #126976	; 0x1f000
   10ef4:	ldr	pc, [ip, #332]!	; 0x14c

00010ef8 <textdomain@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #126976	; 0x1f000
   10f00:	ldr	pc, [ip, #324]!	; 0x144

00010f04 <rawmemchr@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #126976	; 0x1f000
   10f0c:	ldr	pc, [ip, #316]!	; 0x13c

00010f10 <iswprint@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #126976	; 0x1f000
   10f18:	ldr	pc, [ip, #308]!	; 0x134

00010f1c <__fxstat64@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #126976	; 0x1f000
   10f24:	ldr	pc, [ip, #300]!	; 0x12c

00010f28 <lseek64@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #126976	; 0x1f000
   10f30:	ldr	pc, [ip, #292]!	; 0x124

00010f34 <__ctype_get_mb_cur_max@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #126976	; 0x1f000
   10f3c:	ldr	pc, [ip, #284]!	; 0x11c

00010f40 <__fpending@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #126976	; 0x1f000
   10f48:	ldr	pc, [ip, #276]!	; 0x114

00010f4c <ferror_unlocked@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #126976	; 0x1f000
   10f54:	ldr	pc, [ip, #268]!	; 0x10c

00010f58 <mbrtowc@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #126976	; 0x1f000
   10f60:	ldr	pc, [ip, #260]!	; 0x104

00010f64 <error@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #126976	; 0x1f000
   10f6c:	ldr	pc, [ip, #252]!	; 0xfc

00010f70 <open64@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #126976	; 0x1f000
   10f78:	ldr	pc, [ip, #244]!	; 0xf4

00010f7c <malloc@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #126976	; 0x1f000
   10f84:	ldr	pc, [ip, #236]!	; 0xec

00010f88 <__libc_start_main@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #126976	; 0x1f000
   10f90:	ldr	pc, [ip, #228]!	; 0xe4

00010f94 <__freading@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #126976	; 0x1f000
   10f9c:	ldr	pc, [ip, #220]!	; 0xdc

00010fa0 <__gmon_start__@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #126976	; 0x1f000
   10fa8:	ldr	pc, [ip, #212]!	; 0xd4

00010fac <getopt_long@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #126976	; 0x1f000
   10fb4:	ldr	pc, [ip, #204]!	; 0xcc

00010fb8 <__ctype_b_loc@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #126976	; 0x1f000
   10fc0:	ldr	pc, [ip, #196]!	; 0xc4

00010fc4 <exit@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #126976	; 0x1f000
   10fcc:	ldr	pc, [ip, #188]!	; 0xbc

00010fd0 <gettext@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #126976	; 0x1f000
   10fd8:	ldr	pc, [ip, #180]!	; 0xb4

00010fdc <strlen@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #126976	; 0x1f000
   10fe4:	ldr	pc, [ip, #172]!	; 0xac

00010fe8 <strchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #126976	; 0x1f000
   10ff0:	ldr	pc, [ip, #164]!	; 0xa4

00010ff4 <memrchr@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #126976	; 0x1f000
   10ffc:	ldr	pc, [ip, #156]!	; 0x9c

00011000 <fprintf@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #126976	; 0x1f000
   11008:	ldr	pc, [ip, #148]!	; 0x94

0001100c <__errno_location@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #126976	; 0x1f000
   11014:	ldr	pc, [ip, #140]!	; 0x8c

00011018 <__cxa_atexit@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #126976	; 0x1f000
   11020:	ldr	pc, [ip, #132]!	; 0x84

00011024 <memset@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #126976	; 0x1f000
   1102c:	ldr	pc, [ip, #124]!	; 0x7c

00011030 <fileno@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #126976	; 0x1f000
   11038:	ldr	pc, [ip, #116]!	; 0x74

0001103c <strtoumax@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #126976	; 0x1f000
   11044:	ldr	pc, [ip, #108]!	; 0x6c

00011048 <memchr@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #126976	; 0x1f000
   11050:	ldr	pc, [ip, #100]!	; 0x64

00011054 <fclose@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #126976	; 0x1f000
   1105c:	ldr	pc, [ip, #92]!	; 0x5c

00011060 <fseeko64@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #126976	; 0x1f000
   11068:	ldr	pc, [ip, #84]!	; 0x54

0001106c <setlocale@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #126976	; 0x1f000
   11074:	ldr	pc, [ip, #76]!	; 0x4c

00011078 <strrchr@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #126976	; 0x1f000
   11080:	ldr	pc, [ip, #68]!	; 0x44

00011084 <nl_langinfo@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #126976	; 0x1f000
   1108c:	ldr	pc, [ip, #60]!	; 0x3c

00011090 <clearerr_unlocked@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #126976	; 0x1f000
   11098:	ldr	pc, [ip, #52]!	; 0x34

0001109c <bindtextdomain@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #126976	; 0x1f000
   110a4:	ldr	pc, [ip, #44]!	; 0x2c

000110a8 <fputs@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #126976	; 0x1f000
   110b0:	ldr	pc, [ip, #36]!	; 0x24

000110b4 <strncmp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #126976	; 0x1f000
   110bc:	ldr	pc, [ip, #28]!

000110c0 <abort@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #126976	; 0x1f000
   110c8:	ldr	pc, [ip, #20]!

000110cc <close@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #126976	; 0x1f000
   110d4:	ldr	pc, [ip, #12]!

000110d8 <__assert_fail@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #126976	; 0x1f000
   110e0:	ldr	pc, [ip, #4]!

Disassembly of section .text:

000110e4 <.text>:
   110e4:	mov	fp, #0
   110e8:	mov	lr, #0
   110ec:	pop	{r1}		; (ldr r1, [sp], #4)
   110f0:	mov	r2, sp
   110f4:	push	{r2}		; (str r2, [sp, #-4]!)
   110f8:	push	{r0}		; (str r0, [sp, #-4]!)
   110fc:	ldr	ip, [pc, #16]	; 11114 <__assert_fail@plt+0x3c>
   11100:	push	{ip}		; (str ip, [sp, #-4]!)
   11104:	ldr	r0, [pc, #12]	; 11118 <__assert_fail@plt+0x40>
   11108:	ldr	r3, [pc, #12]	; 1111c <__assert_fail@plt+0x44>
   1110c:	bl	10f88 <__libc_start_main@plt>
   11110:	bl	110c0 <abort@plt>
   11114:	andeq	pc, r1, r8, ror r0	; <UNPREDICTABLE>
   11118:	andeq	r1, r1, r0, lsl #11
   1111c:	andeq	pc, r1, r8, lsl r0	; <UNPREDICTABLE>
   11120:	ldr	r3, [pc, #20]	; 1113c <__assert_fail@plt+0x64>
   11124:	ldr	r2, [pc, #20]	; 11140 <__assert_fail@plt+0x68>
   11128:	add	r3, pc, r3
   1112c:	ldr	r2, [r3, r2]
   11130:	cmp	r2, #0
   11134:	bxeq	lr
   11138:	b	10fa0 <__gmon_start__@plt>
   1113c:	ldrdeq	lr, [r1], -r0
   11140:	andeq	r0, r0, r8, ror #1
   11144:	ldr	r0, [pc, #24]	; 11164 <__assert_fail@plt+0x8c>
   11148:	ldr	r3, [pc, #24]	; 11168 <__assert_fail@plt+0x90>
   1114c:	cmp	r3, r0
   11150:	bxeq	lr
   11154:	ldr	r3, [pc, #16]	; 1116c <__assert_fail@plt+0x94>
   11158:	cmp	r3, #0
   1115c:	bxeq	lr
   11160:	bx	r3
   11164:	andeq	r0, r3, r0, asr #2
   11168:	andeq	r0, r3, r0, asr #2
   1116c:	andeq	r0, r0, r0
   11170:	ldr	r0, [pc, #36]	; 1119c <__assert_fail@plt+0xc4>
   11174:	ldr	r1, [pc, #36]	; 111a0 <__assert_fail@plt+0xc8>
   11178:	sub	r1, r1, r0
   1117c:	asr	r1, r1, #2
   11180:	add	r1, r1, r1, lsr #31
   11184:	asrs	r1, r1, #1
   11188:	bxeq	lr
   1118c:	ldr	r3, [pc, #16]	; 111a4 <__assert_fail@plt+0xcc>
   11190:	cmp	r3, #0
   11194:	bxeq	lr
   11198:	bx	r3
   1119c:	andeq	r0, r3, r0, asr #2
   111a0:	andeq	r0, r3, r0, asr #2
   111a4:	andeq	r0, r0, r0
   111a8:	push	{r4, lr}
   111ac:	ldr	r4, [pc, #24]	; 111cc <__assert_fail@plt+0xf4>
   111b0:	ldrb	r3, [r4]
   111b4:	cmp	r3, #0
   111b8:	popne	{r4, pc}
   111bc:	bl	11144 <__assert_fail@plt+0x6c>
   111c0:	mov	r3, #1
   111c4:	strb	r3, [r4]
   111c8:	pop	{r4, pc}
   111cc:	andeq	r0, r3, ip, asr r1
   111d0:	b	11170 <__assert_fail@plt+0x98>
   111d4:	push	{fp, lr}
   111d8:	mov	fp, sp
   111dc:	sub	sp, sp, #48	; 0x30
   111e0:	str	r0, [fp, #-4]
   111e4:	ldr	r0, [fp, #-4]
   111e8:	cmp	r0, #0
   111ec:	beq	1123c <__assert_fail@plt+0x164>
   111f0:	b	111f4 <__assert_fail@plt+0x11c>
   111f4:	movw	r0, #336	; 0x150
   111f8:	movt	r0, #3
   111fc:	ldr	r0, [r0]
   11200:	movw	r1, #61616	; 0xf0b0
   11204:	movt	r1, #1
   11208:	str	r0, [fp, #-8]
   1120c:	mov	r0, r1
   11210:	bl	10fd0 <gettext@plt>
   11214:	movw	r1, #364	; 0x16c
   11218:	movt	r1, #3
   1121c:	ldr	r2, [r1]
   11220:	ldr	r1, [fp, #-8]
   11224:	str	r0, [fp, #-12]
   11228:	mov	r0, r1
   1122c:	ldr	r1, [fp, #-12]
   11230:	bl	11000 <fprintf@plt>
   11234:	str	r0, [fp, #-16]
   11238:	b	1135c <__assert_fail@plt+0x284>
   1123c:	movw	r0, #61655	; 0xf0d7
   11240:	movt	r0, #1
   11244:	bl	10fd0 <gettext@plt>
   11248:	movw	lr, #364	; 0x16c
   1124c:	movt	lr, #3
   11250:	ldr	r1, [lr]
   11254:	bl	10e80 <printf@plt>
   11258:	movw	r1, #61688	; 0xf0f8
   1125c:	movt	r1, #1
   11260:	str	r0, [fp, #-20]	; 0xffffffec
   11264:	mov	r0, r1
   11268:	bl	10fd0 <gettext@plt>
   1126c:	movw	r1, #10
   11270:	bl	10e80 <printf@plt>
   11274:	str	r0, [sp, #24]
   11278:	bl	11364 <__assert_fail@plt+0x28c>
   1127c:	bl	11398 <__assert_fail@plt+0x2c0>
   11280:	movw	r0, #61821	; 0xf17d
   11284:	movt	r0, #1
   11288:	bl	10fd0 <gettext@plt>
   1128c:	movw	r1, #10
   11290:	bl	10e80 <printf@plt>
   11294:	movw	r1, #62219	; 0xf30b
   11298:	movt	r1, #1
   1129c:	str	r0, [sp, #20]
   112a0:	mov	r0, r1
   112a4:	bl	10fd0 <gettext@plt>
   112a8:	movw	r1, #340	; 0x154
   112ac:	movt	r1, #3
   112b0:	ldr	r1, [r1]
   112b4:	bl	10e5c <fputs_unlocked@plt>
   112b8:	movw	r1, #62351	; 0xf38f
   112bc:	movt	r1, #1
   112c0:	str	r0, [sp, #16]
   112c4:	mov	r0, r1
   112c8:	bl	10fd0 <gettext@plt>
   112cc:	movw	r1, #340	; 0x154
   112d0:	movt	r1, #3
   112d4:	ldr	r1, [r1]
   112d8:	bl	10e5c <fputs_unlocked@plt>
   112dc:	movw	r1, #62414	; 0xf3ce
   112e0:	movt	r1, #1
   112e4:	str	r0, [sp, #12]
   112e8:	mov	r0, r1
   112ec:	bl	10fd0 <gettext@plt>
   112f0:	movw	r1, #340	; 0x154
   112f4:	movt	r1, #3
   112f8:	ldr	r1, [r1]
   112fc:	bl	10e5c <fputs_unlocked@plt>
   11300:	movw	r1, #62459	; 0xf3fb
   11304:	movt	r1, #1
   11308:	str	r0, [sp, #8]
   1130c:	mov	r0, r1
   11310:	bl	10fd0 <gettext@plt>
   11314:	movw	r1, #340	; 0x154
   11318:	movt	r1, #3
   1131c:	ldr	r1, [r1]
   11320:	bl	10e5c <fputs_unlocked@plt>
   11324:	movw	r1, #62513	; 0xf431
   11328:	movt	r1, #1
   1132c:	str	r0, [sp, #4]
   11330:	mov	r0, r1
   11334:	bl	10fd0 <gettext@plt>
   11338:	movw	r1, #340	; 0x154
   1133c:	movt	r1, #3
   11340:	ldr	r1, [r1]
   11344:	bl	10e5c <fputs_unlocked@plt>
   11348:	movw	r1, #62725	; 0xf505
   1134c:	movt	r1, #1
   11350:	str	r0, [sp]
   11354:	mov	r0, r1
   11358:	bl	113cc <__assert_fail@plt+0x2f4>
   1135c:	ldr	r0, [fp, #-4]
   11360:	bl	10fc4 <exit@plt>
   11364:	push	{fp, lr}
   11368:	mov	fp, sp
   1136c:	sub	sp, sp, #8
   11370:	movw	r0, #62876	; 0xf59c
   11374:	movt	r0, #1
   11378:	bl	10fd0 <gettext@plt>
   1137c:	movw	lr, #340	; 0x154
   11380:	movt	lr, #3
   11384:	ldr	r1, [lr]
   11388:	bl	10e5c <fputs_unlocked@plt>
   1138c:	str	r0, [sp, #4]
   11390:	mov	sp, fp
   11394:	pop	{fp, pc}
   11398:	push	{fp, lr}
   1139c:	mov	fp, sp
   113a0:	sub	sp, sp, #8
   113a4:	movw	r0, #62932	; 0xf5d4
   113a8:	movt	r0, #1
   113ac:	bl	10fd0 <gettext@plt>
   113b0:	movw	lr, #340	; 0x154
   113b4:	movt	lr, #3
   113b8:	ldr	r1, [lr]
   113bc:	bl	10e5c <fputs_unlocked@plt>
   113c0:	str	r0, [sp, #4]
   113c4:	mov	sp, fp
   113c8:	pop	{fp, pc}
   113cc:	push	{fp, lr}
   113d0:	mov	fp, sp
   113d4:	sub	sp, sp, #96	; 0x60
   113d8:	add	r1, sp, #36	; 0x24
   113dc:	movw	r2, #63864	; 0xf978
   113e0:	movt	r2, #1
   113e4:	str	r0, [fp, #-4]
   113e8:	mov	r0, r1
   113ec:	str	r1, [sp, #20]
   113f0:	mov	r1, r2
   113f4:	movw	r2, #56	; 0x38
   113f8:	bl	10ebc <memcpy@plt>
   113fc:	ldr	r0, [fp, #-4]
   11400:	str	r0, [sp, #32]
   11404:	ldr	r0, [sp, #20]
   11408:	str	r0, [sp, #28]
   1140c:	ldr	r0, [sp, #28]
   11410:	ldr	r0, [r0]
   11414:	movw	r1, #0
   11418:	cmp	r0, r1
   1141c:	movw	r0, #0
   11420:	str	r0, [sp, #16]
   11424:	beq	11450 <__assert_fail@plt+0x378>
   11428:	ldr	r0, [fp, #-4]
   1142c:	ldr	r1, [sp, #28]
   11430:	ldr	r1, [r1]
   11434:	bl	10e74 <strcmp@plt>
   11438:	cmp	r0, #0
   1143c:	movw	r0, #0
   11440:	moveq	r0, #1
   11444:	mvn	r1, #0
   11448:	eor	r0, r0, r1
   1144c:	str	r0, [sp, #16]
   11450:	ldr	r0, [sp, #16]
   11454:	tst	r0, #1
   11458:	beq	1146c <__assert_fail@plt+0x394>
   1145c:	ldr	r0, [sp, #28]
   11460:	add	r0, r0, #8
   11464:	str	r0, [sp, #28]
   11468:	b	1140c <__assert_fail@plt+0x334>
   1146c:	ldr	r0, [sp, #28]
   11470:	ldr	r0, [r0, #4]
   11474:	movw	r1, #0
   11478:	cmp	r0, r1
   1147c:	beq	1148c <__assert_fail@plt+0x3b4>
   11480:	ldr	r0, [sp, #28]
   11484:	ldr	r0, [r0, #4]
   11488:	str	r0, [sp, #32]
   1148c:	movw	r0, #63102	; 0xf67e
   11490:	movt	r0, #1
   11494:	bl	10fd0 <gettext@plt>
   11498:	movw	r1, #62802	; 0xf552
   1149c:	movt	r1, #1
   114a0:	movw	r2, #63125	; 0xf695
   114a4:	movt	r2, #1
   114a8:	bl	10e80 <printf@plt>
   114ac:	movw	r1, #5
   114b0:	str	r0, [sp, #12]
   114b4:	mov	r0, r1
   114b8:	movw	r1, #0
   114bc:	bl	1106c <setlocale@plt>
   114c0:	str	r0, [sp, #24]
   114c4:	ldr	r0, [sp, #24]
   114c8:	movw	r1, #0
   114cc:	cmp	r0, r1
   114d0:	beq	11510 <__assert_fail@plt+0x438>
   114d4:	ldr	r0, [sp, #24]
   114d8:	movw	r1, #63165	; 0xf6bd
   114dc:	movt	r1, #1
   114e0:	movw	r2, #3
   114e4:	bl	110b4 <strncmp@plt>
   114e8:	cmp	r0, #0
   114ec:	beq	11510 <__assert_fail@plt+0x438>
   114f0:	movw	r0, #63169	; 0xf6c1
   114f4:	movt	r0, #1
   114f8:	bl	10fd0 <gettext@plt>
   114fc:	movw	lr, #340	; 0x154
   11500:	movt	lr, #3
   11504:	ldr	r1, [lr]
   11508:	bl	10e5c <fputs_unlocked@plt>
   1150c:	str	r0, [sp, #8]
   11510:	movw	r0, #63240	; 0xf708
   11514:	movt	r0, #1
   11518:	bl	10fd0 <gettext@plt>
   1151c:	ldr	r2, [fp, #-4]
   11520:	movw	r1, #63125	; 0xf695
   11524:	movt	r1, #1
   11528:	bl	10e80 <printf@plt>
   1152c:	movw	r1, #63267	; 0xf723
   11530:	movt	r1, #1
   11534:	str	r0, [sp, #4]
   11538:	mov	r0, r1
   1153c:	bl	10fd0 <gettext@plt>
   11540:	ldr	r1, [sp, #32]
   11544:	ldr	r2, [sp, #32]
   11548:	ldr	lr, [fp, #-4]
   1154c:	cmp	r2, lr
   11550:	movw	r2, #0
   11554:	moveq	r2, #1
   11558:	tst	r2, #1
   1155c:	movw	r2, #63317	; 0xf755
   11560:	movt	r2, #1
   11564:	movw	lr, #63035	; 0xf63b
   11568:	movt	lr, #1
   1156c:	movne	r2, lr
   11570:	bl	10e80 <printf@plt>
   11574:	str	r0, [sp]
   11578:	mov	sp, fp
   1157c:	pop	{fp, pc}
   11580:	push	{fp, lr}
   11584:	mov	fp, sp
   11588:	sub	sp, sp, #144	; 0x90
   1158c:	mov	r2, #0
   11590:	str	r2, [fp, #-4]
   11594:	str	r0, [fp, #-8]
   11598:	str	r1, [fp, #-12]
   1159c:	str	r2, [fp, #-16]
   115a0:	mov	r0, #1
   115a4:	strb	r0, [fp, #-17]	; 0xffffffef
   115a8:	str	r2, [fp, #-36]	; 0xffffffdc
   115ac:	mov	r0, #10
   115b0:	str	r0, [fp, #-40]	; 0xffffffd8
   115b4:	movw	r0, #1
   115b8:	strb	r0, [fp, #-41]	; 0xffffffd7
   115bc:	movw	r0, #0
   115c0:	strb	r0, [fp, #-42]	; 0xffffffd6
   115c4:	ldr	r0, [fp, #-12]
   115c8:	ldr	r0, [r0]
   115cc:	bl	144bc <__assert_fail@plt+0x33e4>
   115d0:	movw	r0, #6
   115d4:	movw	r1, #63317	; 0xf755
   115d8:	movt	r1, #1
   115dc:	bl	1106c <setlocale@plt>
   115e0:	movw	r1, #62806	; 0xf556
   115e4:	movt	r1, #1
   115e8:	str	r0, [sp, #56]	; 0x38
   115ec:	mov	r0, r1
   115f0:	movw	r1, #62730	; 0xf50a
   115f4:	movt	r1, #1
   115f8:	bl	1109c <bindtextdomain@plt>
   115fc:	movw	r1, #62806	; 0xf556
   11600:	movt	r1, #1
   11604:	str	r0, [sp, #52]	; 0x34
   11608:	mov	r0, r1
   1160c:	bl	10ef8 <textdomain@plt>
   11610:	movw	r1, #16424	; 0x4028
   11614:	movt	r1, #1
   11618:	str	r0, [sp, #48]	; 0x30
   1161c:	mov	r0, r1
   11620:	bl	1f07c <__assert_fail@plt+0xdfa4>
   11624:	movw	r1, #349	; 0x15d
   11628:	movt	r1, #3
   1162c:	movw	r2, #0
   11630:	strb	r2, [r1]
   11634:	movw	r1, #350	; 0x15e
   11638:	movt	r1, #3
   1163c:	strb	r2, [r1]
   11640:	movw	r1, #351	; 0x15f
   11644:	movt	r1, #3
   11648:	movw	r2, #10
   1164c:	strb	r2, [r1]
   11650:	ldr	r1, [fp, #-8]
   11654:	movw	r2, #1
   11658:	cmp	r2, r1
   1165c:	str	r0, [sp, #44]	; 0x2c
   11660:	bge	11890 <__assert_fail@plt+0x7b8>
   11664:	ldr	r0, [fp, #-12]
   11668:	ldr	r0, [r0, #4]
   1166c:	ldrb	r0, [r0]
   11670:	cmp	r0, #45	; 0x2d
   11674:	bne	11890 <__assert_fail@plt+0x7b8>
   11678:	ldr	r0, [fp, #-12]
   1167c:	ldr	r0, [r0, #4]
   11680:	ldrb	r0, [r0, #1]
   11684:	sub	r0, r0, #48	; 0x30
   11688:	cmp	r0, #9
   1168c:	bhi	11890 <__assert_fail@plt+0x7b8>
   11690:	ldr	r0, [fp, #-12]
   11694:	ldr	r0, [r0, #4]
   11698:	str	r0, [fp, #-52]	; 0xffffffcc
   1169c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116a0:	add	r0, r0, #1
   116a4:	str	r0, [fp, #-52]	; 0xffffffcc
   116a8:	str	r0, [fp, #-56]	; 0xffffffc8
   116ac:	movw	r0, #0
   116b0:	strb	r0, [fp, #-61]	; 0xffffffc3
   116b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116b8:	add	r0, r0, #1
   116bc:	str	r0, [fp, #-52]	; 0xffffffcc
   116c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116c4:	ldrb	r0, [r0]
   116c8:	sub	r0, r0, #48	; 0x30
   116cc:	cmp	r0, #9
   116d0:	bls	116b4 <__assert_fail@plt+0x5dc>
   116d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116d8:	str	r0, [fp, #-60]	; 0xffffffc4
   116dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116e0:	ldrsb	r0, [r0]
   116e4:	cmp	r0, #0
   116e8:	beq	11820 <__assert_fail@plt+0x748>
   116ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116f0:	ldrb	r0, [r0]
   116f4:	sub	r0, r0, #98	; 0x62
   116f8:	cmp	r0, #24
   116fc:	str	r0, [sp, #40]	; 0x28
   11700:	bhi	117d8 <__assert_fail@plt+0x700>
   11704:	add	r0, pc, #8
   11708:	ldr	r1, [sp, #40]	; 0x28
   1170c:	ldr	r0, [r0, r1, lsl #2]
   11710:	mov	pc, r0
   11714:	andeq	r1, r1, r8, lsl #15
   11718:	andeq	r1, r1, r8, ror r7
   1171c:	ldrdeq	r1, [r1], -r8
   11720:	ldrdeq	r1, [r1], -r8
   11724:	ldrdeq	r1, [r1], -r8
   11728:	ldrdeq	r1, [r1], -r8
   1172c:	ldrdeq	r1, [r1], -r8
   11730:	ldrdeq	r1, [r1], -r8
   11734:	ldrdeq	r1, [r1], -r8
   11738:	andeq	r1, r1, r8, lsl #15
   1173c:	andeq	r1, r1, r0, lsr #15
   11740:	andeq	r1, r1, r8, lsl #15
   11744:	ldrdeq	r1, [r1], -r8
   11748:	ldrdeq	r1, [r1], -r8
   1174c:	ldrdeq	r1, [r1], -r8
   11750:	andeq	r1, r1, ip, lsr #15
   11754:	ldrdeq	r1, [r1], -r8
   11758:	ldrdeq	r1, [r1], -r8
   1175c:	ldrdeq	r1, [r1], -r8
   11760:	ldrdeq	r1, [r1], -r8
   11764:			; <UNDEFINED> instruction: 0x000117b8
   11768:	ldrdeq	r1, [r1], -r8
   1176c:	ldrdeq	r1, [r1], -r8
   11770:	ldrdeq	r1, [r1], -r8
   11774:	andeq	r1, r1, r4, asr #15
   11778:	movw	r0, #0
   1177c:	strb	r0, [fp, #-41]	; 0xffffffd7
   11780:	strb	r0, [fp, #-61]	; 0xffffffc3
   11784:	b	1180c <__assert_fail@plt+0x734>
   11788:	movw	r0, #0
   1178c:	strb	r0, [fp, #-41]	; 0xffffffd7
   11790:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11794:	ldrb	r0, [r0]
   11798:	strb	r0, [fp, #-61]	; 0xffffffc3
   1179c:	b	1180c <__assert_fail@plt+0x734>
   117a0:	movw	r0, #1
   117a4:	strb	r0, [fp, #-41]	; 0xffffffd7
   117a8:	b	1180c <__assert_fail@plt+0x734>
   117ac:	movw	r0, #2
   117b0:	str	r0, [fp, #-16]
   117b4:	b	1180c <__assert_fail@plt+0x734>
   117b8:	movw	r0, #1
   117bc:	str	r0, [fp, #-16]
   117c0:	b	1180c <__assert_fail@plt+0x734>
   117c4:	movw	r0, #351	; 0x15f
   117c8:	movt	r0, #3
   117cc:	movw	r1, #0
   117d0:	strb	r1, [r0]
   117d4:	b	1180c <__assert_fail@plt+0x734>
   117d8:	movw	r0, #62754	; 0xf522
   117dc:	movt	r0, #1
   117e0:	bl	10fd0 <gettext@plt>
   117e4:	ldr	lr, [fp, #-52]	; 0xffffffcc
   117e8:	ldrb	r3, [lr]
   117ec:	movw	lr, #0
   117f0:	str	r0, [sp, #36]	; 0x24
   117f4:	mov	r0, lr
   117f8:	mov	r1, lr
   117fc:	ldr	r2, [sp, #36]	; 0x24
   11800:	bl	10f64 <error@plt>
   11804:	movw	r0, #1
   11808:	bl	111d4 <__assert_fail@plt+0xfc>
   1180c:	b	11810 <__assert_fail@plt+0x738>
   11810:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11814:	add	r0, r0, #1
   11818:	str	r0, [fp, #-52]	; 0xffffffcc
   1181c:	b	116dc <__assert_fail@plt+0x604>
   11820:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   11824:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11828:	strb	r0, [r1]
   1182c:	ldrsb	r0, [fp, #-61]	; 0xffffffc3
   11830:	cmp	r0, #0
   11834:	beq	1184c <__assert_fail@plt+0x774>
   11838:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1183c:	add	r1, r0, #1
   11840:	str	r1, [fp, #-60]	; 0xffffffc4
   11844:	movw	r1, #0
   11848:	strb	r1, [r0, #1]
   1184c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11850:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   11854:	and	r0, r0, #1
   11858:	bl	11d04 <__assert_fail@plt+0xc2c>
   1185c:	str	r1, [fp, #-36]	; 0xffffffdc
   11860:	str	r0, [fp, #-40]	; 0xffffffd8
   11864:	ldr	r0, [fp, #-12]
   11868:	ldr	r0, [r0]
   1186c:	ldr	r1, [fp, #-12]
   11870:	str	r0, [r1, #4]
   11874:	ldr	r0, [fp, #-12]
   11878:	add	r0, r0, #4
   1187c:	str	r0, [fp, #-12]
   11880:	ldr	r0, [fp, #-8]
   11884:	mvn	r1, #0
   11888:	add	r0, r0, r1
   1188c:	str	r0, [fp, #-8]
   11890:	b	11894 <__assert_fail@plt+0x7bc>
   11894:	ldr	r0, [fp, #-8]
   11898:	ldr	r1, [fp, #-12]
   1189c:	movw	r2, #62784	; 0xf540
   118a0:	movt	r2, #1
   118a4:	movw	r3, #63704	; 0xf8d8
   118a8:	movt	r3, #1
   118ac:	movw	ip, #0
   118b0:	str	ip, [sp]
   118b4:	bl	10fac <getopt_long@plt>
   118b8:	str	r0, [fp, #-24]	; 0xffffffe8
   118bc:	cmn	r0, #1
   118c0:	beq	11b08 <__assert_fail@plt+0xa30>
   118c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118c8:	cmn	r0, #3
   118cc:	str	r0, [sp, #32]
   118d0:	beq	11a70 <__assert_fail@plt+0x998>
   118d4:	b	118d8 <__assert_fail@plt+0x800>
   118d8:	ldr	r0, [sp, #32]
   118dc:	cmn	r0, #2
   118e0:	beq	11a68 <__assert_fail@plt+0x990>
   118e4:	b	118e8 <__assert_fail@plt+0x810>
   118e8:	ldr	r0, [sp, #32]
   118ec:	cmp	r0, #99	; 0x63
   118f0:	beq	1195c <__assert_fail@plt+0x884>
   118f4:	b	118f8 <__assert_fail@plt+0x820>
   118f8:	ldr	r0, [sp, #32]
   118fc:	cmp	r0, #110	; 0x6e
   11900:	beq	119cc <__assert_fail@plt+0x8f4>
   11904:	b	11908 <__assert_fail@plt+0x830>
   11908:	ldr	r0, [sp, #32]
   1190c:	cmp	r0, #113	; 0x71
   11910:	beq	11a3c <__assert_fail@plt+0x964>
   11914:	b	11918 <__assert_fail@plt+0x840>
   11918:	ldr	r0, [sp, #32]
   1191c:	cmp	r0, #118	; 0x76
   11920:	beq	11a48 <__assert_fail@plt+0x970>
   11924:	b	11928 <__assert_fail@plt+0x850>
   11928:	ldr	r0, [sp, #32]
   1192c:	cmp	r0, #122	; 0x7a
   11930:	beq	11a54 <__assert_fail@plt+0x97c>
   11934:	b	11938 <__assert_fail@plt+0x860>
   11938:	ldr	r0, [sp, #32]
   1193c:	cmp	r0, #256	; 0x100
   11940:	bne	11ac4 <__assert_fail@plt+0x9ec>
   11944:	b	11948 <__assert_fail@plt+0x870>
   11948:	movw	r0, #352	; 0x160
   1194c:	movt	r0, #3
   11950:	movw	r1, #1
   11954:	strb	r1, [r0]
   11958:	b	11b04 <__assert_fail@plt+0xa2c>
   1195c:	movw	r0, #0
   11960:	strb	r0, [fp, #-41]	; 0xffffffd7
   11964:	movw	r0, #344	; 0x158
   11968:	movt	r0, #3
   1196c:	ldr	r0, [r0]
   11970:	ldrb	r0, [r0]
   11974:	cmp	r0, #45	; 0x2d
   11978:	movw	r0, #0
   1197c:	moveq	r0, #1
   11980:	and	r0, r0, #1
   11984:	strb	r0, [fp, #-42]	; 0xffffffd6
   11988:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   1198c:	tst	r0, #1
   11990:	beq	119a8 <__assert_fail@plt+0x8d0>
   11994:	movw	r0, #344	; 0x158
   11998:	movt	r0, #3
   1199c:	ldr	r1, [r0]
   119a0:	add	r1, r1, #1
   119a4:	str	r1, [r0]
   119a8:	movw	r0, #344	; 0x158
   119ac:	movt	r0, #3
   119b0:	ldr	r1, [r0]
   119b4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   119b8:	and	r0, r0, #1
   119bc:	bl	11d04 <__assert_fail@plt+0xc2c>
   119c0:	str	r1, [fp, #-36]	; 0xffffffdc
   119c4:	str	r0, [fp, #-40]	; 0xffffffd8
   119c8:	b	11b04 <__assert_fail@plt+0xa2c>
   119cc:	movw	r0, #1
   119d0:	strb	r0, [fp, #-41]	; 0xffffffd7
   119d4:	movw	r0, #344	; 0x158
   119d8:	movt	r0, #3
   119dc:	ldr	r0, [r0]
   119e0:	ldrb	r0, [r0]
   119e4:	cmp	r0, #45	; 0x2d
   119e8:	movw	r0, #0
   119ec:	moveq	r0, #1
   119f0:	and	r0, r0, #1
   119f4:	strb	r0, [fp, #-42]	; 0xffffffd6
   119f8:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   119fc:	tst	r0, #1
   11a00:	beq	11a18 <__assert_fail@plt+0x940>
   11a04:	movw	r0, #344	; 0x158
   11a08:	movt	r0, #3
   11a0c:	ldr	r1, [r0]
   11a10:	add	r1, r1, #1
   11a14:	str	r1, [r0]
   11a18:	movw	r0, #344	; 0x158
   11a1c:	movt	r0, #3
   11a20:	ldr	r1, [r0]
   11a24:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   11a28:	and	r0, r0, #1
   11a2c:	bl	11d04 <__assert_fail@plt+0xc2c>
   11a30:	str	r1, [fp, #-36]	; 0xffffffdc
   11a34:	str	r0, [fp, #-40]	; 0xffffffd8
   11a38:	b	11b04 <__assert_fail@plt+0xa2c>
   11a3c:	movw	r0, #2
   11a40:	str	r0, [fp, #-16]
   11a44:	b	11b04 <__assert_fail@plt+0xa2c>
   11a48:	movw	r0, #1
   11a4c:	str	r0, [fp, #-16]
   11a50:	b	11b04 <__assert_fail@plt+0xa2c>
   11a54:	movw	r0, #351	; 0x15f
   11a58:	movt	r0, #3
   11a5c:	movw	r1, #0
   11a60:	strb	r1, [r0]
   11a64:	b	11b04 <__assert_fail@plt+0xa2c>
   11a68:	movw	r0, #0
   11a6c:	bl	111d4 <__assert_fail@plt+0xfc>
   11a70:	movw	r0, #340	; 0x154
   11a74:	movt	r0, #3
   11a78:	ldr	r0, [r0]
   11a7c:	movw	r1, #248	; 0xf8
   11a80:	movt	r1, #3
   11a84:	ldr	r3, [r1]
   11a88:	movw	r1, #62725	; 0xf505
   11a8c:	movt	r1, #1
   11a90:	movw	r2, #62802	; 0xf552
   11a94:	movt	r2, #1
   11a98:	movw	ip, #62816	; 0xf560
   11a9c:	movt	ip, #1
   11aa0:	str	ip, [sp]
   11aa4:	movw	ip, #62832	; 0xf570
   11aa8:	movt	ip, #1
   11aac:	str	ip, [sp, #4]
   11ab0:	movw	ip, #0
   11ab4:	str	ip, [sp, #8]
   11ab8:	bl	17484 <__assert_fail@plt+0x63ac>
   11abc:	movw	r0, #0
   11ac0:	bl	10fc4 <exit@plt>
   11ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ac8:	sub	r0, r0, #48	; 0x30
   11acc:	cmp	r0, #9
   11ad0:	bhi	11afc <__assert_fail@plt+0xa24>
   11ad4:	movw	r0, #62754	; 0xf522
   11ad8:	movt	r0, #1
   11adc:	bl	10fd0 <gettext@plt>
   11ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ae4:	movw	lr, #0
   11ae8:	str	r0, [sp, #28]
   11aec:	mov	r0, lr
   11af0:	mov	r1, lr
   11af4:	ldr	r2, [sp, #28]
   11af8:	bl	10f64 <error@plt>
   11afc:	movw	r0, #1
   11b00:	bl	111d4 <__assert_fail@plt+0xfc>
   11b04:	b	11894 <__assert_fail@plt+0x7bc>
   11b08:	ldr	r0, [fp, #-16]
   11b0c:	cmp	r0, #1
   11b10:	beq	11b3c <__assert_fail@plt+0xa64>
   11b14:	ldr	r0, [fp, #-16]
   11b18:	cmp	r0, #0
   11b1c:	bne	11b4c <__assert_fail@plt+0xa74>
   11b20:	movw	r0, #328	; 0x148
   11b24:	movt	r0, #3
   11b28:	ldr	r0, [r0]
   11b2c:	ldr	r1, [fp, #-8]
   11b30:	sub	r1, r1, #1
   11b34:	cmp	r0, r1
   11b38:	bge	11b4c <__assert_fail@plt+0xa74>
   11b3c:	movw	r0, #350	; 0x15e
   11b40:	movt	r0, #3
   11b44:	movw	r1, #1
   11b48:	strb	r1, [r0]
   11b4c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   11b50:	tst	r0, #1
   11b54:	bne	11bcc <__assert_fail@plt+0xaf4>
   11b58:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   11b5c:	tst	r0, #1
   11b60:	beq	11bcc <__assert_fail@plt+0xaf4>
   11b64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b68:	cmn	r0, #1
   11b6c:	bgt	11bcc <__assert_fail@plt+0xaf4>
   11b70:	b	11b74 <__assert_fail@plt+0xa9c>
   11b74:	add	r2, sp, #62	; 0x3e
   11b78:	movw	r0, #62852	; 0xf584
   11b7c:	movt	r0, #1
   11b80:	str	r2, [sp, #24]
   11b84:	bl	10fd0 <gettext@plt>
   11b88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11b8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b90:	str	r0, [sp, #20]
   11b94:	mov	r0, r2
   11b98:	ldr	r2, [sp, #24]
   11b9c:	bl	1437c <__assert_fail@plt+0x32a4>
   11ba0:	bl	16b18 <__assert_fail@plt+0x5a40>
   11ba4:	movw	r1, #1
   11ba8:	str	r0, [sp, #16]
   11bac:	mov	r0, r1
   11bb0:	movw	r1, #75	; 0x4b
   11bb4:	movw	r2, #62845	; 0xf57d
   11bb8:	movt	r2, #1
   11bbc:	ldr	r3, [sp, #20]
   11bc0:	ldr	lr, [sp, #16]
   11bc4:	str	lr, [sp]
   11bc8:	bl	10f64 <error@plt>
   11bcc:	movw	r0, #328	; 0x148
   11bd0:	movt	r0, #3
   11bd4:	ldr	r0, [r0]
   11bd8:	ldr	r1, [fp, #-8]
   11bdc:	cmp	r0, r1
   11be0:	bge	11c00 <__assert_fail@plt+0xb28>
   11be4:	ldr	r0, [fp, #-12]
   11be8:	movw	r1, #328	; 0x148
   11bec:	movt	r1, #3
   11bf0:	ldr	r1, [r1]
   11bf4:	add	r0, r0, r1, lsl #2
   11bf8:	str	r0, [sp, #12]
   11bfc:	b	11c10 <__assert_fail@plt+0xb38>
   11c00:	movw	r0, #63696	; 0xf8d0
   11c04:	movt	r0, #1
   11c08:	str	r0, [sp, #12]
   11c0c:	b	11c10 <__assert_fail@plt+0xb38>
   11c10:	ldr	r0, [sp, #12]
   11c14:	str	r0, [fp, #-48]	; 0xffffffd0
   11c18:	movw	r0, #1
   11c1c:	movw	r1, #0
   11c20:	bl	1a444 <__assert_fail@plt+0x936c>
   11c24:	movw	r0, #0
   11c28:	str	r0, [fp, #-28]	; 0xffffffe4
   11c2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11c30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11c34:	add	r0, r0, r1, lsl #2
   11c38:	ldr	r0, [r0]
   11c3c:	movw	r1, #0
   11c40:	cmp	r0, r1
   11c44:	beq	11cb0 <__assert_fail@plt+0xbd8>
   11c48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11c4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11c50:	ldr	r0, [r0, r1, lsl #2]
   11c54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11c58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c5c:	ldrb	r1, [fp, #-41]	; 0xffffffd7
   11c60:	ldrb	ip, [fp, #-42]	; 0xffffffd6
   11c64:	and	ip, ip, #1
   11c68:	mov	lr, sp
   11c6c:	str	ip, [lr, #4]
   11c70:	and	r1, r1, #1
   11c74:	str	r1, [lr]
   11c78:	bl	11d98 <__assert_fail@plt+0xcc0>
   11c7c:	and	r0, r0, #1
   11c80:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11c84:	and	r1, r1, #1
   11c88:	and	r0, r1, r0
   11c8c:	cmp	r0, #0
   11c90:	movw	r0, #0
   11c94:	movne	r0, #1
   11c98:	and	r0, r0, #1
   11c9c:	strb	r0, [fp, #-17]	; 0xffffffef
   11ca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ca4:	add	r0, r0, #1
   11ca8:	str	r0, [fp, #-28]	; 0xffffffe4
   11cac:	b	11c2c <__assert_fail@plt+0xb54>
   11cb0:	movw	r0, #349	; 0x15d
   11cb4:	movt	r0, #3
   11cb8:	ldrb	r0, [r0]
   11cbc:	tst	r0, #1
   11cc0:	beq	11cec <__assert_fail@plt+0xc14>
   11cc4:	movw	r0, #0
   11cc8:	bl	110cc <close@plt>
   11ccc:	cmp	r0, #0
   11cd0:	bge	11cec <__assert_fail@plt+0xc14>
   11cd4:	bl	1100c <__errno_location@plt>
   11cd8:	ldr	r1, [r0]
   11cdc:	movw	r0, #1
   11ce0:	movw	r2, #64013	; 0xfa0d
   11ce4:	movt	r2, #1
   11ce8:	bl	10f64 <error@plt>
   11cec:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11cf0:	tst	r0, #1
   11cf4:	movw	r0, #0
   11cf8:	moveq	r0, #1
   11cfc:	mov	sp, fp
   11d00:	pop	{fp, pc}
   11d04:	push	{fp, lr}
   11d08:	mov	fp, sp
   11d0c:	sub	sp, sp, #40	; 0x28
   11d10:	and	r0, r0, #1
   11d14:	strb	r0, [fp, #-1]
   11d18:	str	r1, [fp, #-8]
   11d1c:	ldr	r0, [fp, #-8]
   11d20:	ldrb	r1, [fp, #-1]
   11d24:	tst	r1, #1
   11d28:	str	r0, [fp, #-12]
   11d2c:	beq	11d44 <__assert_fail@plt+0xc6c>
   11d30:	movw	r0, #63331	; 0xf763
   11d34:	movt	r0, #1
   11d38:	bl	10fd0 <gettext@plt>
   11d3c:	str	r0, [fp, #-16]
   11d40:	b	11d54 <__assert_fail@plt+0xc7c>
   11d44:	movw	r0, #62852	; 0xf584
   11d48:	movt	r0, #1
   11d4c:	bl	10fd0 <gettext@plt>
   11d50:	str	r0, [fp, #-16]
   11d54:	ldr	r0, [fp, #-16]
   11d58:	mov	r1, sp
   11d5c:	mov	r2, #0
   11d60:	str	r2, [r1, #16]
   11d64:	str	r0, [r1, #12]
   11d68:	movw	r0, #63318	; 0xf756
   11d6c:	movt	r0, #1
   11d70:	str	r0, [r1, #8]
   11d74:	mvn	r0, #0
   11d78:	str	r0, [r1, #4]
   11d7c:	str	r0, [r1]
   11d80:	ldr	r0, [fp, #-12]
   11d84:	str	r2, [sp, #20]
   11d88:	ldr	r3, [sp, #20]
   11d8c:	bl	1a680 <__assert_fail@plt+0x95a8>
   11d90:	mov	sp, fp
   11d94:	pop	{fp, pc}
   11d98:	push	{r4, sl, fp, lr}
   11d9c:	add	fp, sp, #8
   11da0:	sub	sp, sp, #64	; 0x40
   11da4:	ldr	r1, [fp, #12]
   11da8:	ldr	ip, [fp, #8]
   11dac:	str	r0, [fp, #-16]
   11db0:	str	r3, [fp, #-20]	; 0xffffffec
   11db4:	str	r2, [fp, #-24]	; 0xffffffe8
   11db8:	and	r0, ip, #1
   11dbc:	strb	r0, [fp, #-25]	; 0xffffffe7
   11dc0:	and	r0, r1, #1
   11dc4:	strb	r0, [fp, #-26]	; 0xffffffe6
   11dc8:	ldr	r0, [fp, #-16]
   11dcc:	movw	r1, #64013	; 0xfa0d
   11dd0:	movt	r1, #1
   11dd4:	bl	10e74 <strcmp@plt>
   11dd8:	cmp	r0, #0
   11ddc:	movw	r0, #0
   11de0:	moveq	r0, #1
   11de4:	and	r0, r0, #1
   11de8:	strb	r0, [fp, #-34]	; 0xffffffde
   11dec:	ldrb	r0, [fp, #-34]	; 0xffffffde
   11df0:	tst	r0, #1
   11df4:	beq	11e34 <__assert_fail@plt+0xd5c>
   11df8:	movw	r0, #349	; 0x15d
   11dfc:	movt	r0, #3
   11e00:	movw	r1, #1
   11e04:	strb	r1, [r0]
   11e08:	movw	r0, #0
   11e0c:	str	r0, [fp, #-32]	; 0xffffffe0
   11e10:	movw	r0, #63425	; 0xf7c1
   11e14:	movt	r0, #1
   11e18:	bl	10fd0 <gettext@plt>
   11e1c:	str	r0, [fp, #-16]
   11e20:	movw	r0, #0
   11e24:	str	r0, [sp, #32]
   11e28:	ldr	r1, [sp, #32]
   11e2c:	bl	1a444 <__assert_fail@plt+0x936c>
   11e30:	b	11eac <__assert_fail@plt+0xdd4>
   11e34:	ldr	r0, [fp, #-16]
   11e38:	movw	r1, #0
   11e3c:	bl	10f70 <open64@plt>
   11e40:	str	r0, [fp, #-32]	; 0xffffffe0
   11e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e48:	cmp	r0, #0
   11e4c:	bge	11ea8 <__assert_fail@plt+0xdd0>
   11e50:	bl	1100c <__errno_location@plt>
   11e54:	ldr	r1, [r0]
   11e58:	movw	r0, #63440	; 0xf7d0
   11e5c:	movt	r0, #1
   11e60:	str	r1, [sp, #28]
   11e64:	bl	10fd0 <gettext@plt>
   11e68:	ldr	r1, [fp, #-16]
   11e6c:	movw	lr, #4
   11e70:	str	r0, [sp, #24]
   11e74:	mov	r0, lr
   11e78:	bl	16780 <__assert_fail@plt+0x56a8>
   11e7c:	movw	r1, #0
   11e80:	str	r0, [sp, #20]
   11e84:	mov	r0, r1
   11e88:	ldr	r1, [sp, #28]
   11e8c:	ldr	r2, [sp, #24]
   11e90:	ldr	r3, [sp, #20]
   11e94:	bl	10f64 <error@plt>
   11e98:	movw	r0, #0
   11e9c:	and	r0, r0, #1
   11ea0:	strb	r0, [fp, #-9]
   11ea4:	b	11f64 <__assert_fail@plt+0xe8c>
   11ea8:	b	11eac <__assert_fail@plt+0xdd4>
   11eac:	ldr	r0, [fp, #-16]
   11eb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11eb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11eb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ebc:	ldrb	ip, [fp, #-25]	; 0xffffffe7
   11ec0:	ldrb	lr, [fp, #-26]	; 0xffffffe6
   11ec4:	and	lr, lr, #1
   11ec8:	mov	r4, sp
   11ecc:	str	lr, [r4, #4]
   11ed0:	and	ip, ip, #1
   11ed4:	str	ip, [r4]
   11ed8:	bl	11f74 <__assert_fail@plt+0xe9c>
   11edc:	and	r0, r0, #1
   11ee0:	strb	r0, [fp, #-33]	; 0xffffffdf
   11ee4:	ldrb	r0, [fp, #-34]	; 0xffffffde
   11ee8:	tst	r0, #1
   11eec:	bne	11f58 <__assert_fail@plt+0xe80>
   11ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ef4:	bl	110cc <close@plt>
   11ef8:	cmp	r0, #0
   11efc:	beq	11f58 <__assert_fail@plt+0xe80>
   11f00:	bl	1100c <__errno_location@plt>
   11f04:	ldr	r1, [r0]
   11f08:	movw	r0, #63467	; 0xf7eb
   11f0c:	movt	r0, #1
   11f10:	str	r1, [sp, #16]
   11f14:	bl	10fd0 <gettext@plt>
   11f18:	ldr	r1, [fp, #-16]
   11f1c:	movw	lr, #4
   11f20:	str	r0, [sp, #12]
   11f24:	mov	r0, lr
   11f28:	bl	16780 <__assert_fail@plt+0x56a8>
   11f2c:	movw	r1, #0
   11f30:	str	r0, [sp, #8]
   11f34:	mov	r0, r1
   11f38:	ldr	r1, [sp, #16]
   11f3c:	ldr	r2, [sp, #12]
   11f40:	ldr	r3, [sp, #8]
   11f44:	bl	10f64 <error@plt>
   11f48:	movw	r0, #0
   11f4c:	and	r0, r0, #1
   11f50:	strb	r0, [fp, #-9]
   11f54:	b	11f64 <__assert_fail@plt+0xe8c>
   11f58:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11f5c:	and	r0, r0, #1
   11f60:	strb	r0, [fp, #-9]
   11f64:	ldrb	r0, [fp, #-9]
   11f68:	and	r0, r0, #1
   11f6c:	sub	sp, fp, #8
   11f70:	pop	{r4, sl, fp, pc}
   11f74:	push	{r4, sl, fp, lr}
   11f78:	add	fp, sp, #8
   11f7c:	sub	sp, sp, #176	; 0xb0
   11f80:	ldr	ip, [fp, #12]
   11f84:	ldr	lr, [fp, #8]
   11f88:	str	r0, [fp, #-16]
   11f8c:	str	r1, [fp, #-20]	; 0xffffffec
   11f90:	str	r3, [fp, #-28]	; 0xffffffe4
   11f94:	str	r2, [fp, #-32]	; 0xffffffe0
   11f98:	and	r0, lr, #1
   11f9c:	strb	r0, [fp, #-33]	; 0xffffffdf
   11fa0:	and	r0, ip, #1
   11fa4:	strb	r0, [fp, #-34]	; 0xffffffde
   11fa8:	movw	r0, #350	; 0x15e
   11fac:	movt	r0, #3
   11fb0:	ldrb	r0, [r0]
   11fb4:	tst	r0, #1
   11fb8:	beq	11fc4 <__assert_fail@plt+0xeec>
   11fbc:	ldr	r0, [fp, #-16]
   11fc0:	bl	1219c <__assert_fail@plt+0x10c4>
   11fc4:	ldrb	r0, [fp, #-34]	; 0xffffffde
   11fc8:	tst	r0, #1
   11fcc:	beq	12144 <__assert_fail@plt+0x106c>
   11fd0:	mvn	r0, #0
   11fd4:	str	r0, [fp, #-44]	; 0xffffffd4
   11fd8:	str	r0, [fp, #-48]	; 0xffffffd0
   11fdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11fe0:	add	r1, sp, #32
   11fe4:	bl	1f094 <__assert_fail@plt+0xdfbc>
   11fe8:	cmp	r0, #0
   11fec:	beq	12048 <__assert_fail@plt+0xf70>
   11ff0:	bl	1100c <__errno_location@plt>
   11ff4:	ldr	r1, [r0]
   11ff8:	movw	r0, #63486	; 0xf7fe
   11ffc:	movt	r0, #1
   12000:	str	r1, [sp, #28]
   12004:	bl	10fd0 <gettext@plt>
   12008:	ldr	r1, [fp, #-16]
   1200c:	movw	lr, #4
   12010:	str	r0, [sp, #24]
   12014:	mov	r0, lr
   12018:	bl	16780 <__assert_fail@plt+0x56a8>
   1201c:	movw	r1, #0
   12020:	str	r0, [sp, #20]
   12024:	mov	r0, r1
   12028:	ldr	r1, [sp, #28]
   1202c:	ldr	r2, [sp, #24]
   12030:	ldr	r3, [sp, #20]
   12034:	bl	10f64 <error@plt>
   12038:	movw	r0, #0
   1203c:	and	r0, r0, #1
   12040:	strb	r0, [fp, #-9]
   12044:	b	1218c <__assert_fail@plt+0x10b4>
   12048:	movw	r0, #352	; 0x160
   1204c:	movt	r0, #3
   12050:	ldrb	r0, [r0]
   12054:	tst	r0, #1
   12058:	bne	120c0 <__assert_fail@plt+0xfe8>
   1205c:	add	r0, sp, #32
   12060:	bl	12208 <__assert_fail@plt+0x1130>
   12064:	tst	r0, #1
   12068:	beq	120c0 <__assert_fail@plt+0xfe8>
   1206c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12070:	ldr	r1, [fp, #-16]
   12074:	mov	r2, sp
   12078:	str	r1, [r2, #4]
   1207c:	mov	r1, #1
   12080:	str	r1, [r2]
   12084:	mov	r1, #0
   12088:	mov	r2, r1
   1208c:	mov	r3, r1
   12090:	bl	12288 <__assert_fail@plt+0x11b0>
   12094:	str	r1, [fp, #-44]	; 0xffffffd4
   12098:	str	r0, [fp, #-48]	; 0xffffffd0
   1209c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   120a0:	cmn	r0, #1
   120a4:	bgt	120bc <__assert_fail@plt+0xfe4>
   120a8:	b	120ac <__assert_fail@plt+0xfd4>
   120ac:	movw	r0, #0
   120b0:	and	r0, r0, #1
   120b4:	strb	r0, [fp, #-9]
   120b8:	b	1218c <__assert_fail@plt+0x10b4>
   120bc:	b	120c0 <__assert_fail@plt+0xfe8>
   120c0:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   120c4:	tst	r0, #1
   120c8:	beq	12108 <__assert_fail@plt+0x1030>
   120cc:	ldr	r0, [fp, #-16]
   120d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   120d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   120d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   120dc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   120e0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   120e4:	mov	r4, sp
   120e8:	str	lr, [r4, #12]
   120ec:	str	ip, [r4, #8]
   120f0:	add	ip, sp, #32
   120f4:	str	ip, [r4]
   120f8:	bl	12388 <__assert_fail@plt+0x12b0>
   120fc:	and	r0, r0, #1
   12100:	strb	r0, [fp, #-9]
   12104:	b	1218c <__assert_fail@plt+0x10b4>
   12108:	ldr	r0, [fp, #-16]
   1210c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12110:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12118:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1211c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   12120:	mov	r4, sp
   12124:	str	lr, [r4, #12]
   12128:	str	ip, [r4, #8]
   1212c:	add	ip, sp, #32
   12130:	str	ip, [r4]
   12134:	bl	12524 <__assert_fail@plt+0x144c>
   12138:	and	r0, r0, #1
   1213c:	strb	r0, [fp, #-9]
   12140:	b	1218c <__assert_fail@plt+0x10b4>
   12144:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   12148:	tst	r0, #1
   1214c:	beq	12170 <__assert_fail@plt+0x1098>
   12150:	ldr	r0, [fp, #-16]
   12154:	ldr	r1, [fp, #-20]	; 0xffffffec
   12158:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1215c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12160:	bl	12744 <__assert_fail@plt+0x166c>
   12164:	and	r0, r0, #1
   12168:	strb	r0, [fp, #-9]
   1216c:	b	1218c <__assert_fail@plt+0x10b4>
   12170:	ldr	r0, [fp, #-16]
   12174:	ldr	r1, [fp, #-20]	; 0xffffffec
   12178:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1217c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12180:	bl	12958 <__assert_fail@plt+0x1880>
   12184:	and	r0, r0, #1
   12188:	strb	r0, [fp, #-9]
   1218c:	ldrb	r0, [fp, #-9]
   12190:	and	r0, r0, #1
   12194:	sub	sp, fp, #8
   12198:	pop	{r4, sl, fp, pc}
   1219c:	push	{fp, lr}
   121a0:	mov	fp, sp
   121a4:	sub	sp, sp, #16
   121a8:	str	r0, [fp, #-4]
   121ac:	movw	r0, #244	; 0xf4
   121b0:	movt	r0, #3
   121b4:	ldrb	r0, [r0]
   121b8:	tst	r0, #1
   121bc:	movw	r0, #63316	; 0xf754
   121c0:	movt	r0, #1
   121c4:	movw	r1, #63317	; 0xf755
   121c8:	movt	r1, #1
   121cc:	movne	r0, r1
   121d0:	ldr	r2, [fp, #-4]
   121d4:	movw	r1, #63502	; 0xf80e
   121d8:	movt	r1, #1
   121dc:	str	r0, [sp, #8]
   121e0:	mov	r0, r1
   121e4:	ldr	r1, [sp, #8]
   121e8:	bl	10e80 <printf@plt>
   121ec:	movw	r1, #244	; 0xf4
   121f0:	movt	r1, #3
   121f4:	movw	r2, #0
   121f8:	strb	r2, [r1]
   121fc:	str	r0, [sp, #4]
   12200:	mov	sp, fp
   12204:	pop	{fp, pc}
   12208:	sub	sp, sp, #8
   1220c:	str	r0, [sp, #4]
   12210:	ldr	r0, [sp, #4]
   12214:	ldr	r0, [r0, #16]
   12218:	and	r0, r0, #61440	; 0xf000
   1221c:	cmp	r0, #32768	; 0x8000
   12220:	movw	r0, #1
   12224:	str	r0, [sp]
   12228:	beq	12278 <__assert_fail@plt+0x11a0>
   1222c:	ldr	r0, [sp, #4]
   12230:	ldr	r0, [r0, #16]
   12234:	and	r0, r0, #61440	; 0xf000
   12238:	cmp	r0, #40960	; 0xa000
   1223c:	movw	r0, #1
   12240:	str	r0, [sp]
   12244:	beq	12278 <__assert_fail@plt+0x11a0>
   12248:	ldr	r0, [sp, #4]
   1224c:	ldr	r0, [r0, #16]
   12250:	ldr	r1, [sp, #4]
   12254:	ldr	r1, [r1, #16]
   12258:	sub	r0, r0, r1
   1225c:	cmp	r0, #0
   12260:	movw	r0, #1
   12264:	str	r0, [sp]
   12268:	bne	12278 <__assert_fail@plt+0x11a0>
   1226c:	movw	r0, #0
   12270:	str	r0, [sp]
   12274:	b	12278 <__assert_fail@plt+0x11a0>
   12278:	ldr	r0, [sp]
   1227c:	and	r0, r0, #1
   12280:	add	sp, sp, #8
   12284:	bx	lr
   12288:	push	{r4, sl, fp, lr}
   1228c:	add	fp, sp, #8
   12290:	sub	sp, sp, #80	; 0x50
   12294:	ldr	r1, [fp, #12]
   12298:	ldr	ip, [fp, #8]
   1229c:	str	r0, [fp, #-12]
   122a0:	str	r3, [fp, #-20]	; 0xffffffec
   122a4:	str	r2, [fp, #-24]	; 0xffffffe8
   122a8:	ldr	r0, [fp, #-12]
   122ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   122b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   122b4:	ldr	lr, [fp, #8]
   122b8:	mov	r4, sp
   122bc:	str	lr, [r4]
   122c0:	str	ip, [sp, #28]
   122c4:	str	r1, [sp, #24]
   122c8:	bl	10f28 <lseek64@plt>
   122cc:	str	r1, [fp, #-28]	; 0xffffffe4
   122d0:	str	r0, [fp, #-32]	; 0xffffffe0
   122d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   122d8:	cmn	r0, #1
   122dc:	bgt	12378 <__assert_fail@plt+0x12a0>
   122e0:	b	122e4 <__assert_fail@plt+0x120c>
   122e4:	add	r2, sp, #35	; 0x23
   122e8:	str	r2, [sp, #20]
   122ec:	bl	1100c <__errno_location@plt>
   122f0:	ldr	r1, [r0]
   122f4:	ldr	r0, [fp, #8]
   122f8:	movw	r2, #63516	; 0xf81c
   122fc:	movt	r2, #1
   12300:	movw	lr, #63545	; 0xf839
   12304:	movt	lr, #1
   12308:	cmp	r0, #0
   1230c:	moveq	lr, r2
   12310:	mov	r0, lr
   12314:	str	r1, [sp, #16]
   12318:	bl	10fd0 <gettext@plt>
   1231c:	ldr	r2, [fp, #12]
   12320:	mov	r1, #0
   12324:	mov	lr, #3
   12328:	str	r0, [sp, #12]
   1232c:	mov	r0, r1
   12330:	mov	r1, lr
   12334:	bl	168d4 <__assert_fail@plt+0x57fc>
   12338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1233c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12340:	str	r0, [sp, #8]
   12344:	mov	r0, r1
   12348:	mov	r1, r2
   1234c:	ldr	r2, [sp, #20]
   12350:	bl	1423c <__assert_fail@plt+0x3164>
   12354:	movw	r1, #0
   12358:	str	r0, [sp, #4]
   1235c:	mov	r0, r1
   12360:	ldr	r1, [sp, #16]
   12364:	ldr	r2, [sp, #12]
   12368:	ldr	r3, [sp, #8]
   1236c:	ldr	lr, [sp, #4]
   12370:	str	lr, [sp]
   12374:	bl	10f64 <error@plt>
   12378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1237c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12380:	sub	sp, fp, #8
   12384:	pop	{r4, sl, fp, pc}
   12388:	push	{r4, r5, r6, sl, fp, lr}
   1238c:	add	fp, sp, #16
   12390:	sub	sp, sp, #96	; 0x60
   12394:	ldr	ip, [fp, #20]
   12398:	ldr	lr, [fp, #16]
   1239c:	ldr	r4, [fp, #8]
   123a0:	str	r0, [fp, #-24]	; 0xffffffe8
   123a4:	str	r1, [fp, #-28]	; 0xffffffe4
   123a8:	str	r3, [fp, #-36]	; 0xffffffdc
   123ac:	str	r2, [fp, #-40]	; 0xffffffd8
   123b0:	str	ip, [fp, #-44]	; 0xffffffd4
   123b4:	str	lr, [fp, #-48]	; 0xffffffd0
   123b8:	ldr	r0, [fp, #8]
   123bc:	ldr	r1, [r0, #48]	; 0x30
   123c0:	ldr	r0, [r0, #52]	; 0x34
   123c4:	str	r0, [sp, #60]	; 0x3c
   123c8:	str	r1, [sp, #56]	; 0x38
   123cc:	movw	r0, #352	; 0x160
   123d0:	movt	r0, #3
   123d4:	ldrb	r0, [r0]
   123d8:	tst	r0, #1
   123dc:	str	r4, [sp, #52]	; 0x34
   123e0:	bne	12468 <__assert_fail@plt+0x1390>
   123e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123e8:	cmp	r0, #0
   123ec:	blt	12468 <__assert_fail@plt+0x1390>
   123f0:	b	123f4 <__assert_fail@plt+0x131c>
   123f4:	ldr	r0, [sp, #56]	; 0x38
   123f8:	ldr	r1, [sp, #60]	; 0x3c
   123fc:	ldr	r2, [fp, #8]
   12400:	ldr	r2, [r2, #56]	; 0x38
   12404:	movw	r3, #0
   12408:	cmp	r3, r2
   1240c:	str	r0, [sp, #48]	; 0x30
   12410:	str	r1, [sp, #44]	; 0x2c
   12414:	bge	12438 <__assert_fail@plt+0x1360>
   12418:	ldr	r0, [fp, #8]
   1241c:	ldr	r0, [r0, #56]	; 0x38
   12420:	cmp	r0, #536870912	; 0x20000000
   12424:	bhi	12438 <__assert_fail@plt+0x1360>
   12428:	ldr	r0, [fp, #8]
   1242c:	ldr	r0, [r0, #56]	; 0x38
   12430:	str	r0, [sp, #40]	; 0x28
   12434:	b	12444 <__assert_fail@plt+0x136c>
   12438:	movw	r0, #512	; 0x200
   1243c:	str	r0, [sp, #40]	; 0x28
   12440:	b	12444 <__assert_fail@plt+0x136c>
   12444:	ldr	r0, [sp, #40]	; 0x28
   12448:	ldr	r1, [sp, #48]	; 0x30
   1244c:	subs	r2, r0, r1
   12450:	ldr	r3, [sp, #44]	; 0x2c
   12454:	rscs	r0, r3, r0, asr #31
   12458:	str	r2, [sp, #36]	; 0x24
   1245c:	str	r0, [sp, #32]
   12460:	blt	1249c <__assert_fail@plt+0x13c4>
   12464:	b	12468 <__assert_fail@plt+0x1390>
   12468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1246c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12470:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12474:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12478:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1247c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   12480:	mov	r4, sp
   12484:	str	lr, [r4, #4]
   12488:	str	ip, [r4]
   1248c:	bl	12a94 <__assert_fail@plt+0x19bc>
   12490:	and	r0, r0, #1
   12494:	strb	r0, [fp, #-17]	; 0xffffffef
   12498:	b	12514 <__assert_fail@plt+0x143c>
   1249c:	ldr	r0, [sp, #56]	; 0x38
   124a0:	ldr	r1, [sp, #60]	; 0x3c
   124a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   124a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   124ac:	mov	ip, #1
   124b0:	subs	r0, r2, r0
   124b4:	sbcs	r1, r3, r1
   124b8:	str	r0, [sp, #28]
   124bc:	str	r1, [sp, #24]
   124c0:	str	ip, [sp, #20]
   124c4:	bge	12508 <__assert_fail@plt+0x1430>
   124c8:	b	124cc <__assert_fail@plt+0x13f4>
   124cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   124d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   124d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   124dc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   124e0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   124e4:	ldr	r4, [sp, #56]	; 0x38
   124e8:	ldr	r5, [sp, #60]	; 0x3c
   124ec:	mov	r6, sp
   124f0:	str	r5, [r6, #12]
   124f4:	str	r4, [r6, #8]
   124f8:	str	lr, [r6, #4]
   124fc:	str	ip, [r6]
   12500:	bl	13140 <__assert_fail@plt+0x2068>
   12504:	str	r0, [sp, #20]
   12508:	ldr	r0, [sp, #20]
   1250c:	and	r0, r0, #1
   12510:	strb	r0, [fp, #-17]	; 0xffffffef
   12514:	ldrb	r0, [fp, #-17]	; 0xffffffef
   12518:	and	r0, r0, #1
   1251c:	sub	sp, fp, #16
   12520:	pop	{r4, r5, r6, sl, fp, pc}
   12524:	push	{r4, sl, fp, lr}
   12528:	add	fp, sp, #8
   1252c:	sub	sp, sp, #112	; 0x70
   12530:	ldr	ip, [fp, #20]
   12534:	ldr	lr, [fp, #16]
   12538:	ldr	r4, [fp, #8]
   1253c:	str	r0, [fp, #-16]
   12540:	str	r1, [fp, #-20]	; 0xffffffec
   12544:	str	r3, [fp, #-28]	; 0xffffffe4
   12548:	str	r2, [fp, #-32]	; 0xffffffe0
   1254c:	str	ip, [fp, #-36]	; 0xffffffdc
   12550:	str	lr, [fp, #-40]	; 0xffffffd8
   12554:	ldr	r0, [fp, #8]
   12558:	ldr	r1, [r0, #48]	; 0x30
   1255c:	ldr	r0, [r0, #52]	; 0x34
   12560:	str	r0, [fp, #-44]	; 0xffffffd4
   12564:	str	r1, [fp, #-48]	; 0xffffffd0
   12568:	movw	r0, #352	; 0x160
   1256c:	movt	r0, #3
   12570:	ldrb	r0, [r0]
   12574:	tst	r0, #1
   12578:	str	r4, [sp, #48]	; 0x30
   1257c:	bne	12604 <__assert_fail@plt+0x152c>
   12580:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12584:	cmp	r0, #0
   12588:	blt	12604 <__assert_fail@plt+0x152c>
   1258c:	b	12590 <__assert_fail@plt+0x14b8>
   12590:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12594:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12598:	ldr	r2, [fp, #8]
   1259c:	ldr	r2, [r2, #56]	; 0x38
   125a0:	movw	r3, #0
   125a4:	cmp	r3, r2
   125a8:	str	r0, [sp, #44]	; 0x2c
   125ac:	str	r1, [sp, #40]	; 0x28
   125b0:	bge	125d4 <__assert_fail@plt+0x14fc>
   125b4:	ldr	r0, [fp, #8]
   125b8:	ldr	r0, [r0, #56]	; 0x38
   125bc:	cmp	r0, #536870912	; 0x20000000
   125c0:	bhi	125d4 <__assert_fail@plt+0x14fc>
   125c4:	ldr	r0, [fp, #8]
   125c8:	ldr	r0, [r0, #56]	; 0x38
   125cc:	str	r0, [sp, #36]	; 0x24
   125d0:	b	125e0 <__assert_fail@plt+0x1508>
   125d4:	movw	r0, #512	; 0x200
   125d8:	str	r0, [sp, #36]	; 0x24
   125dc:	b	125e0 <__assert_fail@plt+0x1508>
   125e0:	ldr	r0, [sp, #36]	; 0x24
   125e4:	ldr	r1, [sp, #44]	; 0x2c
   125e8:	subs	r2, r0, r1
   125ec:	ldr	r3, [sp, #40]	; 0x28
   125f0:	rscs	r0, r3, r0, asr #31
   125f4:	str	r2, [sp, #32]
   125f8:	str	r0, [sp, #28]
   125fc:	blt	12638 <__assert_fail@plt+0x1560>
   12600:	b	12604 <__assert_fail@plt+0x152c>
   12604:	ldr	r0, [fp, #-16]
   12608:	ldr	r1, [fp, #-20]	; 0xffffffec
   1260c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12610:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12614:	ldr	ip, [fp, #-40]	; 0xffffffd8
   12618:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1261c:	mov	r4, sp
   12620:	str	lr, [r4, #4]
   12624:	str	ip, [r4]
   12628:	bl	138f8 <__assert_fail@plt+0x2820>
   1262c:	and	r0, r0, #1
   12630:	strb	r0, [fp, #-9]
   12634:	b	12734 <__assert_fail@plt+0x165c>
   12638:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1263c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12640:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12644:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12648:	subs	r0, r0, r2
   1264c:	sbc	r1, r1, r3
   12650:	str	r0, [fp, #-56]	; 0xffffffc8
   12654:	str	r1, [fp, #-52]	; 0xffffffcc
   12658:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1265c:	cmn	r0, #1
   12660:	bgt	1267c <__assert_fail@plt+0x15a4>
   12664:	b	12668 <__assert_fail@plt+0x1590>
   12668:	mov	r0, #0
   1266c:	mov	r1, r0
   12670:	str	r1, [sp, #24]
   12674:	str	r0, [sp, #20]
   12678:	b	12690 <__assert_fail@plt+0x15b8>
   1267c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12680:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12684:	str	r0, [sp, #24]
   12688:	str	r1, [sp, #20]
   1268c:	b	12690 <__assert_fail@plt+0x15b8>
   12690:	ldr	r0, [sp, #20]
   12694:	ldr	r1, [sp, #24]
   12698:	str	r1, [sp, #56]	; 0x38
   1269c:	str	r0, [sp, #60]	; 0x3c
   126a0:	ldr	r0, [sp, #56]	; 0x38
   126a4:	ldr	r1, [sp, #60]	; 0x3c
   126a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   126ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126b0:	subs	r0, r2, r0
   126b4:	sbcs	r1, r3, r1
   126b8:	str	r0, [sp, #16]
   126bc:	str	r1, [sp, #12]
   126c0:	bcc	126d8 <__assert_fail@plt+0x1600>
   126c4:	b	126c8 <__assert_fail@plt+0x15f0>
   126c8:	movw	r0, #1
   126cc:	and	r0, r0, #1
   126d0:	strb	r0, [fp, #-9]
   126d4:	b	12734 <__assert_fail@plt+0x165c>
   126d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   126dc:	ldr	r1, [sp, #56]	; 0x38
   126e0:	ldr	r2, [sp, #60]	; 0x3c
   126e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   126e8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   126ec:	subs	r1, r1, r3
   126f0:	sbc	r3, r2, ip
   126f4:	mov	r2, r1
   126f8:	bl	136d8 <__assert_fail@plt+0x2600>
   126fc:	str	r0, [sp, #52]	; 0x34
   12700:	ldr	r0, [sp, #52]	; 0x34
   12704:	cmp	r0, #0
   12708:	bne	1271c <__assert_fail@plt+0x1644>
   1270c:	movw	r0, #1
   12710:	and	r0, r0, #1
   12714:	strb	r0, [fp, #-9]
   12718:	b	12734 <__assert_fail@plt+0x165c>
   1271c:	ldr	r0, [sp, #52]	; 0x34
   12720:	ldr	r1, [fp, #-16]
   12724:	bl	13818 <__assert_fail@plt+0x2740>
   12728:	movw	r0, #0
   1272c:	and	r0, r0, #1
   12730:	strb	r0, [fp, #-9]
   12734:	ldrb	r0, [fp, #-9]
   12738:	and	r0, r0, #1
   1273c:	sub	sp, fp, #8
   12740:	pop	{r4, sl, fp, pc}
   12744:	push	{r4, r5, fp, lr}
   12748:	add	fp, sp, #8
   1274c:	sub	sp, sp, #176	; 0xb0
   12750:	sub	sp, sp, #8192	; 0x2000
   12754:	str	r0, [fp, #-16]
   12758:	str	r1, [fp, #-20]	; 0xffffffec
   1275c:	str	r3, [fp, #-28]	; 0xffffffe4
   12760:	str	r2, [fp, #-32]	; 0xffffffe0
   12764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12768:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1276c:	orr	r0, r0, r1
   12770:	cmp	r0, #0
   12774:	beq	1293c <__assert_fail@plt+0x1864>
   12778:	b	1277c <__assert_fail@plt+0x16a4>
   1277c:	add	r1, sp, #152	; 0x98
   12780:	ldr	r0, [fp, #-20]	; 0xffffffec
   12784:	movw	r2, #8192	; 0x2000
   12788:	bl	16c50 <__assert_fail@plt+0x5b78>
   1278c:	str	r0, [sp, #148]	; 0x94
   12790:	movw	r0, #0
   12794:	str	r0, [sp, #144]	; 0x90
   12798:	ldr	r0, [sp, #148]	; 0x94
   1279c:	cmn	r0, #1
   127a0:	bne	127fc <__assert_fail@plt+0x1724>
   127a4:	bl	1100c <__errno_location@plt>
   127a8:	ldr	r1, [r0]
   127ac:	movw	r0, #63583	; 0xf85f
   127b0:	movt	r0, #1
   127b4:	str	r1, [sp, #28]
   127b8:	bl	10fd0 <gettext@plt>
   127bc:	ldr	r1, [fp, #-16]
   127c0:	movw	lr, #4
   127c4:	str	r0, [sp, #24]
   127c8:	mov	r0, lr
   127cc:	bl	16780 <__assert_fail@plt+0x56a8>
   127d0:	movw	r1, #0
   127d4:	str	r0, [sp, #20]
   127d8:	mov	r0, r1
   127dc:	ldr	r1, [sp, #28]
   127e0:	ldr	r2, [sp, #24]
   127e4:	ldr	r3, [sp, #20]
   127e8:	bl	10f64 <error@plt>
   127ec:	movw	r0, #0
   127f0:	and	r0, r0, #1
   127f4:	strb	r0, [fp, #-9]
   127f8:	b	12948 <__assert_fail@plt+0x1870>
   127fc:	ldr	r0, [sp, #148]	; 0x94
   12800:	cmp	r0, #0
   12804:	bne	1280c <__assert_fail@plt+0x1734>
   12808:	b	1293c <__assert_fail@plt+0x1864>
   1280c:	b	12810 <__assert_fail@plt+0x1738>
   12810:	ldr	r0, [sp, #144]	; 0x90
   12814:	ldr	r1, [sp, #148]	; 0x94
   12818:	cmp	r0, r1
   1281c:	bcs	1292c <__assert_fail@plt+0x1854>
   12820:	ldr	r0, [sp, #144]	; 0x90
   12824:	add	r1, r0, #1
   12828:	str	r1, [sp, #144]	; 0x90
   1282c:	add	r1, sp, #152	; 0x98
   12830:	add	r0, r1, r0
   12834:	ldrb	r0, [r0]
   12838:	movw	r1, #351	; 0x15f
   1283c:	movt	r1, #3
   12840:	ldrb	r1, [r1]
   12844:	cmp	r0, r1
   12848:	bne	12928 <__assert_fail@plt+0x1850>
   1284c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12850:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12854:	subs	r0, r0, #1
   12858:	sbc	r1, r1, #0
   1285c:	str	r0, [fp, #-32]	; 0xffffffe0
   12860:	str	r1, [fp, #-28]	; 0xffffffe4
   12864:	orr	r0, r0, r1
   12868:	cmp	r0, #0
   1286c:	bne	12928 <__assert_fail@plt+0x1850>
   12870:	b	12874 <__assert_fail@plt+0x179c>
   12874:	ldr	r0, [sp, #148]	; 0x94
   12878:	ldr	r1, [sp, #144]	; 0x90
   1287c:	sub	r0, r0, r1
   12880:	mov	r1, #0
   12884:	str	r1, [sp, #140]	; 0x8c
   12888:	str	r0, [sp, #136]	; 0x88
   1288c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12890:	ldr	r1, [sp, #136]	; 0x88
   12894:	ldr	r2, [sp, #140]	; 0x8c
   12898:	rsbs	r1, r1, #0
   1289c:	rsc	r3, r2, #0
   128a0:	mov	r2, sp
   128a4:	mov	ip, #1
   128a8:	str	ip, [r2]
   128ac:	mov	r2, r1
   128b0:	bl	10f28 <lseek64@plt>
   128b4:	cmn	r1, #1
   128b8:	str	r0, [sp, #16]
   128bc:	bgt	12924 <__assert_fail@plt+0x184c>
   128c0:	b	128c4 <__assert_fail@plt+0x17ec>
   128c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   128c8:	add	r1, sp, #32
   128cc:	bl	1f094 <__assert_fail@plt+0xdfbc>
   128d0:	cmp	r0, #0
   128d4:	bne	128e8 <__assert_fail@plt+0x1810>
   128d8:	ldr	r0, [sp, #48]	; 0x30
   128dc:	and	r0, r0, #61440	; 0xf000
   128e0:	cmp	r0, #32768	; 0x8000
   128e4:	bne	12920 <__assert_fail@plt+0x1848>
   128e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   128ec:	ldr	r1, [sp, #136]	; 0x88
   128f0:	ldr	r2, [sp, #140]	; 0x8c
   128f4:	rsbs	r1, r1, #0
   128f8:	rsc	r3, r2, #0
   128fc:	ldr	r2, [fp, #-16]
   12900:	mov	ip, sp
   12904:	str	r2, [ip, #4]
   12908:	mov	r2, #1
   1290c:	str	r2, [ip]
   12910:	mov	r2, r1
   12914:	bl	12288 <__assert_fail@plt+0x11b0>
   12918:	str	r0, [sp, #12]
   1291c:	str	r1, [sp, #8]
   12920:	b	12924 <__assert_fail@plt+0x184c>
   12924:	b	1292c <__assert_fail@plt+0x1854>
   12928:	b	12810 <__assert_fail@plt+0x1738>
   1292c:	add	r0, sp, #152	; 0x98
   12930:	ldr	r1, [sp, #144]	; 0x90
   12934:	bl	1362c <__assert_fail@plt+0x2554>
   12938:	b	12764 <__assert_fail@plt+0x168c>
   1293c:	movw	r0, #1
   12940:	and	r0, r0, #1
   12944:	strb	r0, [fp, #-9]
   12948:	ldrb	r0, [fp, #-9]
   1294c:	and	r0, r0, #1
   12950:	sub	sp, fp, #8
   12954:	pop	{r4, r5, fp, pc}
   12958:	push	{r4, r5, fp, lr}
   1295c:	add	fp, sp, #8
   12960:	sub	sp, sp, #56	; 0x38
   12964:	sub	sp, sp, #8192	; 0x2000
   12968:	str	r0, [fp, #-16]
   1296c:	str	r1, [fp, #-20]	; 0xffffffec
   12970:	str	r3, [fp, #-28]	; 0xffffffe4
   12974:	str	r2, [fp, #-32]	; 0xffffffe0
   12978:	movw	r0, #8192	; 0x2000
   1297c:	str	r0, [sp, #28]
   12980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12984:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12988:	orr	r0, r0, r1
   1298c:	cmp	r0, #0
   12990:	beq	12a78 <__assert_fail@plt+0x19a0>
   12994:	b	12998 <__assert_fail@plt+0x18c0>
   12998:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1299c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129a0:	ldr	r2, [sp, #28]
   129a4:	subs	r0, r0, r2
   129a8:	sbcs	r1, r1, #0
   129ac:	str	r0, [sp, #20]
   129b0:	str	r1, [sp, #16]
   129b4:	bcs	129c4 <__assert_fail@plt+0x18ec>
   129b8:	b	129bc <__assert_fail@plt+0x18e4>
   129bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129c0:	str	r0, [sp, #28]
   129c4:	add	r1, sp, #32
   129c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   129cc:	ldr	r2, [sp, #28]
   129d0:	bl	16c50 <__assert_fail@plt+0x5b78>
   129d4:	str	r0, [sp, #24]
   129d8:	ldr	r0, [sp, #24]
   129dc:	cmn	r0, #1
   129e0:	bne	12a3c <__assert_fail@plt+0x1964>
   129e4:	bl	1100c <__errno_location@plt>
   129e8:	ldr	r1, [r0]
   129ec:	movw	r0, #63583	; 0xf85f
   129f0:	movt	r0, #1
   129f4:	str	r1, [sp, #12]
   129f8:	bl	10fd0 <gettext@plt>
   129fc:	ldr	r1, [fp, #-16]
   12a00:	movw	lr, #4
   12a04:	str	r0, [sp, #8]
   12a08:	mov	r0, lr
   12a0c:	bl	16780 <__assert_fail@plt+0x56a8>
   12a10:	movw	r1, #0
   12a14:	str	r0, [sp, #4]
   12a18:	mov	r0, r1
   12a1c:	ldr	r1, [sp, #12]
   12a20:	ldr	r2, [sp, #8]
   12a24:	ldr	r3, [sp, #4]
   12a28:	bl	10f64 <error@plt>
   12a2c:	movw	r0, #0
   12a30:	and	r0, r0, #1
   12a34:	strb	r0, [fp, #-9]
   12a38:	b	12a84 <__assert_fail@plt+0x19ac>
   12a3c:	ldr	r0, [sp, #24]
   12a40:	cmp	r0, #0
   12a44:	bne	12a4c <__assert_fail@plt+0x1974>
   12a48:	b	12a78 <__assert_fail@plt+0x19a0>
   12a4c:	ldr	r1, [sp, #24]
   12a50:	add	r0, sp, #32
   12a54:	bl	1362c <__assert_fail@plt+0x2554>
   12a58:	ldr	r0, [sp, #24]
   12a5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12a60:	ldr	lr, [fp, #-28]	; 0xffffffe4
   12a64:	subs	r0, r1, r0
   12a68:	sbc	r1, lr, #0
   12a6c:	str	r0, [fp, #-32]	; 0xffffffe0
   12a70:	str	r1, [fp, #-28]	; 0xffffffe4
   12a74:	b	12980 <__assert_fail@plt+0x18a8>
   12a78:	movw	r0, #1
   12a7c:	and	r0, r0, #1
   12a80:	strb	r0, [fp, #-9]
   12a84:	ldrb	r0, [fp, #-9]
   12a88:	and	r0, r0, #1
   12a8c:	sub	sp, fp, #8
   12a90:	pop	{r4, r5, fp, pc}
   12a94:	push	{fp, lr}
   12a98:	mov	fp, sp
   12a9c:	sub	sp, sp, #136	; 0x88
   12aa0:	ldr	ip, [fp, #12]
   12aa4:	ldr	lr, [fp, #8]
   12aa8:	str	r0, [fp, #-4]
   12aac:	str	r1, [fp, #-8]
   12ab0:	str	r3, [fp, #-12]
   12ab4:	str	r2, [fp, #-16]
   12ab8:	str	ip, [fp, #-20]	; 0xffffffec
   12abc:	str	lr, [fp, #-24]	; 0xffffffe8
   12ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ac4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ac8:	str	r1, [fp, #-28]	; 0xffffffe4
   12acc:	str	r0, [fp, #-32]	; 0xffffffe0
   12ad0:	movw	r0, #0
   12ad4:	str	r0, [fp, #-48]	; 0xffffffd0
   12ad8:	movw	r0, #1
   12adc:	strb	r0, [fp, #-49]	; 0xffffffcf
   12ae0:	movw	r0, #8208	; 0x2010
   12ae4:	bl	17614 <__assert_fail@plt+0x653c>
   12ae8:	str	r0, [fp, #-40]	; 0xffffffd8
   12aec:	str	r0, [fp, #-36]	; 0xffffffdc
   12af0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12af4:	movw	r1, #8200	; 0x2008
   12af8:	add	r0, r0, r1
   12afc:	movw	r1, #0
   12b00:	str	r1, [r0]
   12b04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b08:	movw	r2, #8196	; 0x2004
   12b0c:	add	r0, r0, r2
   12b10:	str	r1, [r0]
   12b14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b18:	movw	r2, #8204	; 0x200c
   12b1c:	add	r0, r0, r2
   12b20:	str	r1, [r0]
   12b24:	movw	r0, #8208	; 0x2010
   12b28:	bl	17614 <__assert_fail@plt+0x653c>
   12b2c:	str	r0, [fp, #-44]	; 0xffffffd4
   12b30:	ldr	r0, [fp, #-8]
   12b34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12b38:	movw	r2, #8192	; 0x2000
   12b3c:	bl	16c50 <__assert_fail@plt+0x5b78>
   12b40:	str	r0, [fp, #-56]	; 0xffffffc8
   12b44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b48:	cmp	r0, #0
   12b4c:	beq	12b5c <__assert_fail@plt+0x1a84>
   12b50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b54:	cmn	r0, #1
   12b58:	bne	12b60 <__assert_fail@plt+0x1a88>
   12b5c:	b	12df8 <__assert_fail@plt+0x1d20>
   12b60:	ldr	r0, [fp, #-16]
   12b64:	ldr	r1, [fp, #-12]
   12b68:	orr	r0, r0, r1
   12b6c:	cmp	r0, #0
   12b70:	bne	12ba4 <__assert_fail@plt+0x1acc>
   12b74:	b	12b78 <__assert_fail@plt+0x1aa0>
   12b78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12b80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b84:	adds	r0, r1, r0
   12b88:	adc	r1, r2, #0
   12b8c:	str	r0, [fp, #-32]	; 0xffffffe0
   12b90:	str	r1, [fp, #-28]	; 0xffffffe4
   12b94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b98:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12b9c:	bl	1362c <__assert_fail@plt+0x2554>
   12ba0:	b	12b30 <__assert_fail@plt+0x1a58>
   12ba4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ba8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12bac:	movw	r2, #8196	; 0x2004
   12bb0:	add	r1, r1, r2
   12bb4:	str	r0, [r1]
   12bb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bbc:	movw	r1, #8200	; 0x2008
   12bc0:	add	r0, r0, r1
   12bc4:	movw	r1, #0
   12bc8:	str	r1, [r0]
   12bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bd0:	movw	r2, #8204	; 0x200c
   12bd4:	add	r0, r0, r2
   12bd8:	str	r1, [r0]
   12bdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12be0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12be4:	add	r0, r0, r1
   12be8:	str	r0, [fp, #-60]	; 0xffffffc4
   12bec:	movw	r0, #351	; 0x15f
   12bf0:	movt	r0, #3
   12bf4:	ldrb	r0, [r0]
   12bf8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12bfc:	strb	r0, [r1]
   12c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c04:	str	r0, [fp, #-64]	; 0xffffffc0
   12c08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c0c:	movw	r1, #351	; 0x15f
   12c10:	movt	r1, #3
   12c14:	ldrb	r1, [r1]
   12c18:	bl	10f04 <rawmemchr@plt>
   12c1c:	str	r0, [fp, #-64]	; 0xffffffc0
   12c20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12c24:	cmp	r0, r1
   12c28:	bcs	12c58 <__assert_fail@plt+0x1b80>
   12c2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12c30:	add	r0, r0, #1
   12c34:	str	r0, [fp, #-64]	; 0xffffffc0
   12c38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c3c:	movw	r1, #8200	; 0x2008
   12c40:	add	r2, r0, r1
   12c44:	ldr	r2, [r2]
   12c48:	add	r2, r2, #1
   12c4c:	add	r0, r0, r1
   12c50:	str	r2, [r0]
   12c54:	b	12c08 <__assert_fail@plt+0x1b30>
   12c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c5c:	movw	r1, #8200	; 0x2008
   12c60:	add	r0, r0, r1
   12c64:	ldr	r0, [r0]
   12c68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12c6c:	add	r0, r1, r0
   12c70:	str	r0, [fp, #-48]	; 0xffffffd0
   12c74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c78:	movw	r1, #8196	; 0x2004
   12c7c:	add	r0, r0, r1
   12c80:	ldr	r0, [r0]
   12c84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c88:	add	r1, r2, r1
   12c8c:	ldr	r1, [r1]
   12c90:	add	r0, r0, r1
   12c94:	cmp	r0, #8192	; 0x2000
   12c98:	bcs	12d24 <__assert_fail@plt+0x1c4c>
   12c9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ca0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ca4:	movw	r2, #8196	; 0x2004
   12ca8:	add	r1, r1, r2
   12cac:	ldr	r1, [r1]
   12cb0:	add	r0, r0, r1
   12cb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12cb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12cbc:	add	r3, r3, r2
   12cc0:	ldr	r3, [r3]
   12cc4:	str	r2, [sp, #56]	; 0x38
   12cc8:	mov	r2, r3
   12ccc:	bl	10ebc <memcpy@plt>
   12cd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12cd4:	ldr	r1, [sp, #56]	; 0x38
   12cd8:	add	r0, r0, r1
   12cdc:	ldr	r0, [r0]
   12ce0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12ce4:	add	r3, r2, r1
   12ce8:	ldr	r3, [r3]
   12cec:	add	r0, r3, r0
   12cf0:	add	r2, r2, r1
   12cf4:	str	r0, [r2]
   12cf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12cfc:	movw	r2, #8200	; 0x2008
   12d00:	add	r0, r0, r2
   12d04:	ldr	r0, [r0]
   12d08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d0c:	add	lr, r3, r2
   12d10:	ldr	lr, [lr]
   12d14:	add	r0, lr, r0
   12d18:	add	r2, r3, r2
   12d1c:	str	r0, [r2]
   12d20:	b	12df4 <__assert_fail@plt+0x1d1c>
   12d24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d2c:	movw	r2, #8204	; 0x200c
   12d30:	str	r0, [r1, r2]
   12d34:	str	r0, [fp, #-40]	; 0xffffffd8
   12d38:	ldr	r0, [fp, #-16]
   12d3c:	ldr	r1, [fp, #-12]
   12d40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12d44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12d48:	movw	ip, #8200	; 0x2008
   12d4c:	ldr	r3, [r3, ip]
   12d50:	sub	r2, r2, r3
   12d54:	subs	r0, r0, r2
   12d58:	sbcs	r1, r1, #0
   12d5c:	str	r0, [sp, #52]	; 0x34
   12d60:	str	r1, [sp, #48]	; 0x30
   12d64:	bcs	12de4 <__assert_fail@plt+0x1d0c>
   12d68:	b	12d6c <__assert_fail@plt+0x1c94>
   12d6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d70:	movw	r1, #8196	; 0x2004
   12d74:	ldr	r0, [r0, r1]
   12d78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12d7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12d80:	adds	r0, r1, r0
   12d84:	adc	r1, r2, #0
   12d88:	str	r0, [fp, #-32]	; 0xffffffe0
   12d8c:	str	r1, [fp, #-28]	; 0xffffffe4
   12d90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12d98:	movw	r2, #8196	; 0x2004
   12d9c:	add	r1, r1, r2
   12da0:	ldr	r1, [r1]
   12da4:	bl	1362c <__assert_fail@plt+0x2554>
   12da8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12dac:	str	r0, [fp, #-44]	; 0xffffffd4
   12db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12db4:	movw	r1, #8200	; 0x2008
   12db8:	add	r0, r0, r1
   12dbc:	ldr	r0, [r0]
   12dc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12dc4:	sub	r0, r1, r0
   12dc8:	str	r0, [fp, #-48]	; 0xffffffd0
   12dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12dd0:	movw	r1, #8204	; 0x200c
   12dd4:	add	r0, r0, r1
   12dd8:	ldr	r0, [r0]
   12ddc:	str	r0, [fp, #-36]	; 0xffffffdc
   12de0:	b	12df0 <__assert_fail@plt+0x1d18>
   12de4:	movw	r0, #8208	; 0x2010
   12de8:	bl	17614 <__assert_fail@plt+0x653c>
   12dec:	str	r0, [fp, #-44]	; 0xffffffd4
   12df0:	b	12df4 <__assert_fail@plt+0x1d1c>
   12df4:	b	12b30 <__assert_fail@plt+0x1a58>
   12df8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12dfc:	bl	14148 <__assert_fail@plt+0x3070>
   12e00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12e04:	cmn	r0, #1
   12e08:	bne	12e60 <__assert_fail@plt+0x1d88>
   12e0c:	bl	1100c <__errno_location@plt>
   12e10:	ldr	r1, [r0]
   12e14:	movw	r0, #63583	; 0xf85f
   12e18:	movt	r0, #1
   12e1c:	str	r1, [sp, #44]	; 0x2c
   12e20:	bl	10fd0 <gettext@plt>
   12e24:	ldr	r1, [fp, #-4]
   12e28:	movw	lr, #4
   12e2c:	str	r0, [sp, #40]	; 0x28
   12e30:	mov	r0, lr
   12e34:	bl	16780 <__assert_fail@plt+0x56a8>
   12e38:	movw	r1, #0
   12e3c:	str	r0, [sp, #36]	; 0x24
   12e40:	mov	r0, r1
   12e44:	ldr	r1, [sp, #44]	; 0x2c
   12e48:	ldr	r2, [sp, #40]	; 0x28
   12e4c:	ldr	r3, [sp, #36]	; 0x24
   12e50:	bl	10f64 <error@plt>
   12e54:	movw	r0, #0
   12e58:	strb	r0, [fp, #-49]	; 0xffffffcf
   12e5c:	b	130a8 <__assert_fail@plt+0x1fd0>
   12e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e64:	movw	r1, #8196	; 0x2004
   12e68:	add	r0, r0, r1
   12e6c:	ldr	r0, [r0]
   12e70:	cmp	r0, #0
   12e74:	beq	12ed4 <__assert_fail@plt+0x1dfc>
   12e78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e80:	movw	r2, #8196	; 0x2004
   12e84:	add	r1, r1, r2
   12e88:	ldr	r1, [r1]
   12e8c:	sub	r1, r1, #1
   12e90:	add	r0, r0, r1
   12e94:	ldrb	r0, [r0]
   12e98:	movw	r1, #351	; 0x15f
   12e9c:	movt	r1, #3
   12ea0:	ldrb	r1, [r1]
   12ea4:	cmp	r0, r1
   12ea8:	beq	12ed4 <__assert_fail@plt+0x1dfc>
   12eac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12eb0:	movw	r1, #8200	; 0x2008
   12eb4:	add	r2, r0, r1
   12eb8:	ldr	r2, [r2]
   12ebc:	add	r2, r2, #1
   12ec0:	add	r0, r0, r1
   12ec4:	str	r2, [r0]
   12ec8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12ecc:	add	r0, r0, #1
   12ed0:	str	r0, [fp, #-48]	; 0xffffffd0
   12ed4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12ed8:	str	r0, [fp, #-44]	; 0xffffffd4
   12edc:	ldr	r0, [fp, #-16]
   12ee0:	ldr	r1, [fp, #-12]
   12ee4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12ee8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12eec:	movw	ip, #8200	; 0x2008
   12ef0:	ldr	r3, [r3, ip]
   12ef4:	sub	r2, r2, r3
   12ef8:	subs	r0, r0, r2
   12efc:	sbcs	r1, r1, #0
   12f00:	str	r0, [sp, #32]
   12f04:	str	r1, [sp, #28]
   12f08:	bcs	12f80 <__assert_fail@plt+0x1ea8>
   12f0c:	b	12f10 <__assert_fail@plt+0x1e38>
   12f10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f14:	movw	r1, #8196	; 0x2004
   12f18:	ldr	r0, [r0, r1]
   12f1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12f20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12f24:	adds	r0, r1, r0
   12f28:	adc	r1, r2, #0
   12f2c:	str	r0, [fp, #-32]	; 0xffffffe0
   12f30:	str	r1, [fp, #-28]	; 0xffffffe4
   12f34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12f3c:	movw	r2, #8196	; 0x2004
   12f40:	add	r1, r1, r2
   12f44:	ldr	r1, [r1]
   12f48:	bl	1362c <__assert_fail@plt+0x2554>
   12f4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f50:	movw	r1, #8200	; 0x2008
   12f54:	add	r0, r0, r1
   12f58:	ldr	r0, [r0]
   12f5c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12f60:	sub	r0, r1, r0
   12f64:	str	r0, [fp, #-48]	; 0xffffffd0
   12f68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f6c:	movw	r1, #8204	; 0x200c
   12f70:	add	r0, r0, r1
   12f74:	ldr	r0, [r0]
   12f78:	str	r0, [fp, #-44]	; 0xffffffd4
   12f7c:	b	12edc <__assert_fail@plt+0x1e04>
   12f80:	ldr	r0, [fp, #-16]
   12f84:	ldr	r1, [fp, #-12]
   12f88:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12f8c:	subs	r0, r0, r2
   12f90:	sbcs	r1, r1, #0
   12f94:	str	r0, [sp, #24]
   12f98:	str	r1, [sp, #20]
   12f9c:	bcs	130a4 <__assert_fail@plt+0x1fcc>
   12fa0:	b	12fa4 <__assert_fail@plt+0x1ecc>
   12fa4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12fa8:	ldr	r1, [fp, #-16]
   12fac:	sub	r0, r0, r1
   12fb0:	str	r0, [sp, #68]	; 0x44
   12fb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12fbc:	movw	r2, #8196	; 0x2004
   12fc0:	add	r1, r1, r2
   12fc4:	ldr	r1, [r1]
   12fc8:	add	r0, r0, r1
   12fcc:	str	r0, [sp, #64]	; 0x40
   12fd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fd4:	str	r0, [sp, #60]	; 0x3c
   12fd8:	ldr	r0, [sp, #68]	; 0x44
   12fdc:	cmp	r0, #0
   12fe0:	movw	r0, #0
   12fe4:	str	r0, [sp, #16]
   12fe8:	beq	13024 <__assert_fail@plt+0x1f4c>
   12fec:	ldr	r0, [sp, #60]	; 0x3c
   12ff0:	movw	r1, #351	; 0x15f
   12ff4:	movt	r1, #3
   12ff8:	ldrb	r1, [r1]
   12ffc:	ldr	r2, [sp, #64]	; 0x40
   13000:	ldr	r3, [sp, #60]	; 0x3c
   13004:	sub	r2, r2, r3
   13008:	bl	11048 <memchr@plt>
   1300c:	str	r0, [sp, #60]	; 0x3c
   13010:	movw	r1, #0
   13014:	cmp	r0, r1
   13018:	movw	r0, #0
   1301c:	movne	r0, #1
   13020:	str	r0, [sp, #16]
   13024:	ldr	r0, [sp, #16]
   13028:	tst	r0, #1
   1302c:	beq	1306c <__assert_fail@plt+0x1f94>
   13030:	ldr	r0, [sp, #60]	; 0x3c
   13034:	add	r0, r0, #1
   13038:	str	r0, [sp, #60]	; 0x3c
   1303c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13040:	movw	r1, #8200	; 0x2008
   13044:	add	r2, r0, r1
   13048:	ldr	r2, [r2]
   1304c:	add	r2, r2, #1
   13050:	add	r0, r0, r1
   13054:	str	r2, [r0]
   13058:	ldr	r0, [sp, #68]	; 0x44
   1305c:	mvn	r1, #0
   13060:	add	r0, r0, r1
   13064:	str	r0, [sp, #68]	; 0x44
   13068:	b	12fd8 <__assert_fail@plt+0x1f00>
   1306c:	ldr	r0, [sp, #60]	; 0x3c
   13070:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13074:	sub	r0, r0, r1
   13078:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1307c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13080:	adds	r1, r1, r0
   13084:	adc	r0, r2, r0, asr #31
   13088:	str	r1, [fp, #-32]	; 0xffffffe0
   1308c:	str	r0, [fp, #-28]	; 0xffffffe4
   13090:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13094:	ldr	r1, [sp, #60]	; 0x3c
   13098:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1309c:	sub	r1, r1, r2
   130a0:	bl	1362c <__assert_fail@plt+0x2554>
   130a4:	b	130a8 <__assert_fail@plt+0x1fd0>
   130a8:	b	130ac <__assert_fail@plt+0x1fd4>
   130ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   130b0:	movw	r1, #0
   130b4:	cmp	r0, r1
   130b8:	beq	130e4 <__assert_fail@plt+0x200c>
   130bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   130c0:	movw	r1, #8204	; 0x200c
   130c4:	add	r0, r0, r1
   130c8:	ldr	r0, [r0]
   130cc:	str	r0, [fp, #-44]	; 0xffffffd4
   130d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   130d4:	bl	14148 <__assert_fail@plt+0x3070>
   130d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130dc:	str	r0, [fp, #-36]	; 0xffffffdc
   130e0:	b	130ac <__assert_fail@plt+0x1fd4>
   130e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   130e8:	cmp	r0, #0
   130ec:	blt	13130 <__assert_fail@plt+0x2058>
   130f0:	b	130f4 <__assert_fail@plt+0x201c>
   130f4:	ldr	r0, [fp, #-8]
   130f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   130fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13100:	ldr	r1, [fp, #-4]
   13104:	mov	ip, sp
   13108:	str	r1, [ip, #4]
   1310c:	mov	r1, #0
   13110:	str	r1, [ip]
   13114:	bl	12288 <__assert_fail@plt+0x11b0>
   13118:	cmn	r1, #1
   1311c:	str	r0, [sp, #12]
   13120:	bgt	13130 <__assert_fail@plt+0x2058>
   13124:	b	13128 <__assert_fail@plt+0x2050>
   13128:	movw	r0, #0
   1312c:	strb	r0, [fp, #-49]	; 0xffffffcf
   13130:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   13134:	and	r0, r0, #1
   13138:	mov	sp, fp
   1313c:	pop	{fp, pc}
   13140:	push	{r4, r5, r6, r7, fp, lr}
   13144:	add	fp, sp, #16
   13148:	sub	sp, sp, #136	; 0x88
   1314c:	sub	sp, sp, #8192	; 0x2000
   13150:	ldr	ip, [fp, #20]
   13154:	ldr	lr, [fp, #16]
   13158:	ldr	r4, [fp, #12]
   1315c:	ldr	r5, [fp, #8]
   13160:	str	r0, [fp, #-24]	; 0xffffffe8
   13164:	str	r1, [fp, #-28]	; 0xffffffe4
   13168:	str	r3, [fp, #-36]	; 0xffffffdc
   1316c:	str	r2, [fp, #-40]	; 0xffffffd8
   13170:	str	r4, [fp, #-44]	; 0xffffffd4
   13174:	str	r5, [fp, #-48]	; 0xffffffd0
   13178:	str	ip, [fp, #-52]	; 0xffffffcc
   1317c:	str	lr, [fp, #-56]	; 0xffffffc8
   13180:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13184:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13188:	str	r1, [sp, #84]	; 0x54
   1318c:	str	r0, [sp, #80]	; 0x50
   13190:	ldr	r0, [sp, #80]	; 0x50
   13194:	ldr	r1, [sp, #84]	; 0x54
   13198:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1319c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   131a0:	subs	r0, r0, r2
   131a4:	sbc	r1, r1, r3
   131a8:	asr	r1, r1, #31
   131ac:	add	r1, r0, r1, lsr #19
   131b0:	bfc	r1, #0, #13
   131b4:	sub	r0, r0, r1
   131b8:	str	r0, [sp, #92]	; 0x5c
   131bc:	ldr	r0, [sp, #92]	; 0x5c
   131c0:	cmp	r0, #0
   131c4:	bne	131d0 <__assert_fail@plt+0x20f8>
   131c8:	movw	r0, #8192	; 0x2000
   131cc:	str	r0, [sp, #92]	; 0x5c
   131d0:	ldr	r0, [sp, #92]	; 0x5c
   131d4:	ldr	r1, [sp, #80]	; 0x50
   131d8:	ldr	r2, [sp, #84]	; 0x54
   131dc:	subs	r0, r1, r0
   131e0:	sbc	r1, r2, #0
   131e4:	str	r0, [sp, #80]	; 0x50
   131e8:	str	r1, [sp, #84]	; 0x54
   131ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   131f0:	ldr	r2, [sp, #80]	; 0x50
   131f4:	ldr	r3, [sp, #84]	; 0x54
   131f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   131fc:	mov	ip, sp
   13200:	str	r1, [ip, #4]
   13204:	mov	r1, #0
   13208:	str	r1, [ip]
   1320c:	bl	12288 <__assert_fail@plt+0x11b0>
   13210:	cmn	r1, #1
   13214:	str	r0, [sp, #60]	; 0x3c
   13218:	bgt	13230 <__assert_fail@plt+0x2158>
   1321c:	b	13220 <__assert_fail@plt+0x2148>
   13220:	movw	r0, #0
   13224:	and	r0, r0, #1
   13228:	strb	r0, [fp, #-17]	; 0xffffffef
   1322c:	b	1361c <__assert_fail@plt+0x2544>
   13230:	add	r1, sp, #96	; 0x60
   13234:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13238:	ldr	r2, [sp, #92]	; 0x5c
   1323c:	bl	16c50 <__assert_fail@plt+0x5b78>
   13240:	str	r0, [sp, #92]	; 0x5c
   13244:	ldr	r0, [sp, #92]	; 0x5c
   13248:	cmn	r0, #1
   1324c:	bne	132a8 <__assert_fail@plt+0x21d0>
   13250:	bl	1100c <__errno_location@plt>
   13254:	ldr	r1, [r0]
   13258:	movw	r0, #63583	; 0xf85f
   1325c:	movt	r0, #1
   13260:	str	r1, [sp, #56]	; 0x38
   13264:	bl	10fd0 <gettext@plt>
   13268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1326c:	movw	lr, #4
   13270:	str	r0, [sp, #52]	; 0x34
   13274:	mov	r0, lr
   13278:	bl	16780 <__assert_fail@plt+0x56a8>
   1327c:	movw	r1, #0
   13280:	str	r0, [sp, #48]	; 0x30
   13284:	mov	r0, r1
   13288:	ldr	r1, [sp, #56]	; 0x38
   1328c:	ldr	r2, [sp, #52]	; 0x34
   13290:	ldr	r3, [sp, #48]	; 0x30
   13294:	bl	10f64 <error@plt>
   13298:	movw	r0, #0
   1329c:	and	r0, r0, #1
   132a0:	strb	r0, [fp, #-17]	; 0xffffffef
   132a4:	b	1361c <__assert_fail@plt+0x2544>
   132a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   132ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   132b0:	orr	r0, r0, r1
   132b4:	clz	r0, r0
   132b8:	lsr	r0, r0, #5
   132bc:	strb	r0, [sp, #79]	; 0x4f
   132c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   132c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   132c8:	orr	r0, r0, r1
   132cc:	cmp	r0, #0
   132d0:	beq	13324 <__assert_fail@plt+0x224c>
   132d4:	b	132d8 <__assert_fail@plt+0x2200>
   132d8:	ldr	r0, [sp, #92]	; 0x5c
   132dc:	cmp	r0, #0
   132e0:	beq	13324 <__assert_fail@plt+0x224c>
   132e4:	ldr	r0, [sp, #92]	; 0x5c
   132e8:	sub	r0, r0, #1
   132ec:	add	r1, sp, #96	; 0x60
   132f0:	add	r0, r1, r0
   132f4:	ldrb	r0, [r0]
   132f8:	movw	r1, #351	; 0x15f
   132fc:	movt	r1, #3
   13300:	ldrb	r1, [r1]
   13304:	cmp	r0, r1
   13308:	beq	13324 <__assert_fail@plt+0x224c>
   1330c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13310:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13314:	subs	r0, r0, #1
   13318:	sbc	r1, r1, #0
   1331c:	str	r0, [fp, #-40]	; 0xffffffd8
   13320:	str	r1, [fp, #-36]	; 0xffffffdc
   13324:	b	13328 <__assert_fail@plt+0x2250>
   13328:	ldr	r0, [sp, #92]	; 0x5c
   1332c:	str	r0, [sp, #72]	; 0x48
   13330:	ldr	r0, [sp, #72]	; 0x48
   13334:	cmp	r0, #0
   13338:	beq	134f0 <__assert_fail@plt+0x2418>
   1333c:	ldrb	r0, [sp, #79]	; 0x4f
   13340:	tst	r0, #1
   13344:	beq	13358 <__assert_fail@plt+0x2280>
   13348:	ldr	r0, [sp, #72]	; 0x48
   1334c:	sub	r0, r0, #1
   13350:	str	r0, [sp, #72]	; 0x48
   13354:	b	13398 <__assert_fail@plt+0x22c0>
   13358:	add	r0, sp, #96	; 0x60
   1335c:	movw	r1, #351	; 0x15f
   13360:	movt	r1, #3
   13364:	ldrb	r1, [r1]
   13368:	ldr	r2, [sp, #72]	; 0x48
   1336c:	bl	10ff4 <memrchr@plt>
   13370:	str	r0, [sp, #68]	; 0x44
   13374:	ldr	r0, [sp, #68]	; 0x44
   13378:	movw	r1, #0
   1337c:	cmp	r0, r1
   13380:	bne	13388 <__assert_fail@plt+0x22b0>
   13384:	b	134f0 <__assert_fail@plt+0x2418>
   13388:	add	r0, sp, #96	; 0x60
   1338c:	ldr	r1, [sp, #68]	; 0x44
   13390:	sub	r0, r1, r0
   13394:	str	r0, [sp, #72]	; 0x48
   13398:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1339c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   133a0:	subs	r2, r0, #1
   133a4:	sbc	r3, r1, #0
   133a8:	str	r2, [fp, #-40]	; 0xffffffd8
   133ac:	str	r3, [fp, #-36]	; 0xffffffdc
   133b0:	orr	r0, r0, r1
   133b4:	cmp	r0, #0
   133b8:	bne	134ec <__assert_fail@plt+0x2414>
   133bc:	b	133c0 <__assert_fail@plt+0x22e8>
   133c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   133c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133c8:	ldr	r2, [sp, #80]	; 0x50
   133cc:	ldr	r3, [sp, #84]	; 0x54
   133d0:	subs	r0, r0, r2
   133d4:	sbcs	r1, r1, r3
   133d8:	str	r0, [sp, #44]	; 0x2c
   133dc:	str	r1, [sp, #40]	; 0x28
   133e0:	bge	13480 <__assert_fail@plt+0x23a8>
   133e4:	b	133e8 <__assert_fail@plt+0x2310>
   133e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   133ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   133f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   133f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   133f8:	mov	ip, sp
   133fc:	str	r1, [ip, #4]
   13400:	mov	r1, #0
   13404:	str	r1, [ip]
   13408:	bl	12288 <__assert_fail@plt+0x11b0>
   1340c:	cmn	r1, #1
   13410:	str	r0, [sp, #36]	; 0x24
   13414:	bgt	1342c <__assert_fail@plt+0x2354>
   13418:	b	1341c <__assert_fail@plt+0x2344>
   1341c:	movw	r0, #0
   13420:	and	r0, r0, #1
   13424:	strb	r0, [fp, #-17]	; 0xffffffef
   13428:	b	1361c <__assert_fail@plt+0x2544>
   1342c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13430:	ldr	r1, [sp, #80]	; 0x50
   13434:	ldr	r2, [sp, #84]	; 0x54
   13438:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1343c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   13440:	subs	r1, r1, r3
   13444:	sbc	r3, r2, ip
   13448:	mov	r2, r1
   1344c:	bl	136d8 <__assert_fail@plt+0x2600>
   13450:	str	r0, [sp, #64]	; 0x40
   13454:	ldr	r0, [sp, #64]	; 0x40
   13458:	cmp	r0, #0
   1345c:	beq	1347c <__assert_fail@plt+0x23a4>
   13460:	ldr	r0, [sp, #64]	; 0x40
   13464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13468:	bl	13818 <__assert_fail@plt+0x2740>
   1346c:	movw	r0, #0
   13470:	and	r0, r0, #1
   13474:	strb	r0, [fp, #-17]	; 0xffffffef
   13478:	b	1361c <__assert_fail@plt+0x2544>
   1347c:	b	13480 <__assert_fail@plt+0x23a8>
   13480:	ldr	r0, [sp, #72]	; 0x48
   13484:	add	r1, r0, #1
   13488:	add	r0, sp, #96	; 0x60
   1348c:	bl	1362c <__assert_fail@plt+0x2554>
   13490:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13494:	ldr	r1, [sp, #80]	; 0x50
   13498:	ldr	lr, [sp, #84]	; 0x54
   1349c:	ldr	r2, [sp, #72]	; 0x48
   134a0:	adds	r1, r1, r2
   134a4:	adc	r2, lr, #0
   134a8:	adds	r1, r1, #1
   134ac:	adc	r3, r2, #0
   134b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   134b4:	mov	lr, sp
   134b8:	str	r2, [lr, #4]
   134bc:	mov	r2, #0
   134c0:	str	r2, [lr]
   134c4:	str	r2, [sp, #32]
   134c8:	mov	r2, r1
   134cc:	bl	12288 <__assert_fail@plt+0x11b0>
   134d0:	cmn	r1, #1
   134d4:	ldr	r1, [sp, #32]
   134d8:	movwgt	r1, #1
   134dc:	and	r1, r1, #1
   134e0:	strb	r1, [fp, #-17]	; 0xffffffef
   134e4:	str	r0, [sp, #28]
   134e8:	b	1361c <__assert_fail@plt+0x2544>
   134ec:	b	13330 <__assert_fail@plt+0x2258>
   134f0:	ldr	r0, [sp, #80]	; 0x50
   134f4:	ldr	r1, [sp, #84]	; 0x54
   134f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   134fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13500:	eor	r1, r1, r3
   13504:	eor	r0, r0, r2
   13508:	orr	r0, r0, r1
   1350c:	cmp	r0, #0
   13510:	bne	13528 <__assert_fail@plt+0x2450>
   13514:	b	13518 <__assert_fail@plt+0x2440>
   13518:	movw	r0, #1
   1351c:	and	r0, r0, #1
   13520:	strb	r0, [fp, #-17]	; 0xffffffef
   13524:	b	1361c <__assert_fail@plt+0x2544>
   13528:	ldr	r0, [sp, #80]	; 0x50
   1352c:	ldr	r1, [sp, #84]	; 0x54
   13530:	subs	r0, r0, #8192	; 0x2000
   13534:	sbc	r1, r1, #0
   13538:	str	r0, [sp, #80]	; 0x50
   1353c:	str	r1, [sp, #84]	; 0x54
   13540:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13544:	ldr	r2, [sp, #80]	; 0x50
   13548:	ldr	r3, [sp, #84]	; 0x54
   1354c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13550:	mov	ip, sp
   13554:	str	r1, [ip, #4]
   13558:	mov	r1, #0
   1355c:	str	r1, [ip]
   13560:	bl	12288 <__assert_fail@plt+0x11b0>
   13564:	cmn	r1, #1
   13568:	str	r0, [sp, #24]
   1356c:	bgt	13584 <__assert_fail@plt+0x24ac>
   13570:	b	13574 <__assert_fail@plt+0x249c>
   13574:	movw	r0, #0
   13578:	and	r0, r0, #1
   1357c:	strb	r0, [fp, #-17]	; 0xffffffef
   13580:	b	1361c <__assert_fail@plt+0x2544>
   13584:	add	r1, sp, #96	; 0x60
   13588:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1358c:	movw	r2, #8192	; 0x2000
   13590:	bl	16c50 <__assert_fail@plt+0x5b78>
   13594:	str	r0, [sp, #92]	; 0x5c
   13598:	ldr	r0, [sp, #92]	; 0x5c
   1359c:	cmn	r0, #1
   135a0:	bne	135fc <__assert_fail@plt+0x2524>
   135a4:	bl	1100c <__errno_location@plt>
   135a8:	ldr	r1, [r0]
   135ac:	movw	r0, #63583	; 0xf85f
   135b0:	movt	r0, #1
   135b4:	str	r1, [sp, #20]
   135b8:	bl	10fd0 <gettext@plt>
   135bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   135c0:	movw	lr, #4
   135c4:	str	r0, [sp, #16]
   135c8:	mov	r0, lr
   135cc:	bl	16780 <__assert_fail@plt+0x56a8>
   135d0:	movw	r1, #0
   135d4:	str	r0, [sp, #12]
   135d8:	mov	r0, r1
   135dc:	ldr	r1, [sp, #20]
   135e0:	ldr	r2, [sp, #16]
   135e4:	ldr	r3, [sp, #12]
   135e8:	bl	10f64 <error@plt>
   135ec:	movw	r0, #0
   135f0:	and	r0, r0, #1
   135f4:	strb	r0, [fp, #-17]	; 0xffffffef
   135f8:	b	1361c <__assert_fail@plt+0x2544>
   135fc:	ldr	r0, [sp, #92]	; 0x5c
   13600:	cmp	r0, #0
   13604:	bne	13618 <__assert_fail@plt+0x2540>
   13608:	movw	r0, #1
   1360c:	and	r0, r0, #1
   13610:	strb	r0, [fp, #-17]	; 0xffffffef
   13614:	b	1361c <__assert_fail@plt+0x2544>
   13618:	b	13328 <__assert_fail@plt+0x2250>
   1361c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   13620:	and	r0, r0, #1
   13624:	sub	sp, fp, #16
   13628:	pop	{r4, r5, r6, r7, fp, pc}
   1362c:	push	{fp, lr}
   13630:	mov	fp, sp
   13634:	sub	sp, sp, #24
   13638:	str	r0, [fp, #-4]
   1363c:	str	r1, [fp, #-8]
   13640:	ldr	r0, [fp, #-8]
   13644:	cmp	r0, #0
   13648:	bls	136d0 <__assert_fail@plt+0x25f8>
   1364c:	ldr	r0, [fp, #-4]
   13650:	ldr	r2, [fp, #-8]
   13654:	movw	r1, #340	; 0x154
   13658:	movt	r1, #3
   1365c:	ldr	r3, [r1]
   13660:	movw	r1, #1
   13664:	bl	10ed4 <fwrite_unlocked@plt>
   13668:	ldr	r1, [fp, #-8]
   1366c:	cmp	r0, r1
   13670:	bcs	136d0 <__assert_fail@plt+0x25f8>
   13674:	movw	r0, #340	; 0x154
   13678:	movt	r0, #3
   1367c:	ldr	r0, [r0]
   13680:	bl	11090 <clearerr_unlocked@plt>
   13684:	bl	1100c <__errno_location@plt>
   13688:	ldr	r1, [r0]
   1368c:	movw	r0, #63600	; 0xf870
   13690:	movt	r0, #1
   13694:	str	r1, [sp, #12]
   13698:	bl	10fd0 <gettext@plt>
   1369c:	movw	r1, #4
   136a0:	str	r0, [sp, #8]
   136a4:	mov	r0, r1
   136a8:	movw	r1, #63617	; 0xf881
   136ac:	movt	r1, #1
   136b0:	bl	16780 <__assert_fail@plt+0x56a8>
   136b4:	movw	r1, #1
   136b8:	str	r0, [sp, #4]
   136bc:	mov	r0, r1
   136c0:	ldr	r1, [sp, #12]
   136c4:	ldr	r2, [sp, #8]
   136c8:	ldr	r3, [sp, #4]
   136cc:	bl	10f64 <error@plt>
   136d0:	mov	sp, fp
   136d4:	pop	{fp, pc}
   136d8:	push	{r4, r5, fp, lr}
   136dc:	add	fp, sp, #8
   136e0:	sub	sp, sp, #48	; 0x30
   136e4:	sub	sp, sp, #8192	; 0x2000
   136e8:	str	r0, [fp, #-16]
   136ec:	str	r3, [fp, #-20]	; 0xffffffec
   136f0:	str	r2, [fp, #-24]	; 0xffffffe8
   136f4:	movw	r0, #8192	; 0x2000
   136f8:	str	r0, [sp, #28]
   136fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13700:	ldr	r1, [fp, #-20]	; 0xffffffec
   13704:	orr	r0, r0, r1
   13708:	cmp	r0, #0
   1370c:	beq	13804 <__assert_fail@plt+0x272c>
   13710:	b	13714 <__assert_fail@plt+0x263c>
   13714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13718:	ldr	r1, [fp, #-20]	; 0xffffffec
   1371c:	movw	r2, #8193	; 0x2001
   13720:	subs	r0, r0, r2
   13724:	sbcs	r1, r1, #0
   13728:	str	r0, [sp, #16]
   1372c:	str	r1, [sp, #12]
   13730:	bcc	1374c <__assert_fail@plt+0x2674>
   13734:	b	13738 <__assert_fail@plt+0x2660>
   13738:	mov	r0, #0
   1373c:	mov	r1, #8192	; 0x2000
   13740:	str	r1, [sp, #8]
   13744:	str	r0, [sp, #4]
   13748:	b	13760 <__assert_fail@plt+0x2688>
   1374c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13750:	ldr	r1, [fp, #-20]	; 0xffffffec
   13754:	str	r0, [sp, #8]
   13758:	str	r1, [sp, #4]
   1375c:	b	13760 <__assert_fail@plt+0x2688>
   13760:	ldr	r0, [sp, #4]
   13764:	ldr	r1, [sp, #8]
   13768:	add	r2, sp, #32
   1376c:	str	r1, [sp, #24]
   13770:	ldr	r1, [fp, #-16]
   13774:	ldr	r3, [sp, #24]
   13778:	str	r0, [sp]
   1377c:	mov	r0, r1
   13780:	mov	r1, r2
   13784:	mov	r2, r3
   13788:	bl	16c50 <__assert_fail@plt+0x5b78>
   1378c:	str	r0, [sp, #20]
   13790:	ldr	r0, [sp, #20]
   13794:	cmn	r0, #1
   13798:	bne	137a8 <__assert_fail@plt+0x26d0>
   1379c:	movw	r0, #1
   137a0:	str	r0, [fp, #-12]
   137a4:	b	1380c <__assert_fail@plt+0x2734>
   137a8:	ldr	r0, [sp, #20]
   137ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   137b4:	subs	r0, r1, r0
   137b8:	sbc	r1, r2, #0
   137bc:	str	r0, [fp, #-24]	; 0xffffffe8
   137c0:	str	r1, [fp, #-20]	; 0xffffffec
   137c4:	ldr	r0, [sp, #20]
   137c8:	cmp	r0, #0
   137cc:	bne	137f4 <__assert_fail@plt+0x271c>
   137d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   137d8:	orr	r0, r0, r1
   137dc:	cmp	r0, #0
   137e0:	beq	137f4 <__assert_fail@plt+0x271c>
   137e4:	b	137e8 <__assert_fail@plt+0x2710>
   137e8:	movw	r0, #2
   137ec:	str	r0, [fp, #-12]
   137f0:	b	1380c <__assert_fail@plt+0x2734>
   137f4:	add	r0, sp, #32
   137f8:	ldr	r1, [sp, #20]
   137fc:	bl	1362c <__assert_fail@plt+0x2554>
   13800:	b	136fc <__assert_fail@plt+0x2624>
   13804:	movw	r0, #0
   13808:	str	r0, [fp, #-12]
   1380c:	ldr	r0, [fp, #-12]
   13810:	sub	sp, fp, #8
   13814:	pop	{r4, r5, fp, pc}
   13818:	push	{fp, lr}
   1381c:	mov	fp, sp
   13820:	sub	sp, sp, #40	; 0x28
   13824:	str	r0, [fp, #-4]
   13828:	str	r1, [fp, #-8]
   1382c:	ldr	r0, [fp, #-4]
   13830:	cmp	r0, #1
   13834:	str	r0, [fp, #-12]
   13838:	beq	13850 <__assert_fail@plt+0x2778>
   1383c:	b	13840 <__assert_fail@plt+0x2768>
   13840:	ldr	r0, [fp, #-12]
   13844:	cmp	r0, #2
   13848:	beq	1389c <__assert_fail@plt+0x27c4>
   1384c:	b	138ec <__assert_fail@plt+0x2814>
   13850:	bl	1100c <__errno_location@plt>
   13854:	ldr	r1, [r0]
   13858:	movw	r0, #63583	; 0xf85f
   1385c:	movt	r0, #1
   13860:	str	r1, [fp, #-16]
   13864:	bl	10fd0 <gettext@plt>
   13868:	ldr	r1, [fp, #-8]
   1386c:	movw	lr, #4
   13870:	str	r0, [sp, #20]
   13874:	mov	r0, lr
   13878:	bl	16780 <__assert_fail@plt+0x56a8>
   1387c:	movw	r1, #0
   13880:	str	r0, [sp, #16]
   13884:	mov	r0, r1
   13888:	ldr	r1, [fp, #-16]
   1388c:	ldr	r2, [sp, #20]
   13890:	ldr	r3, [sp, #16]
   13894:	bl	10f64 <error@plt>
   13898:	b	138f0 <__assert_fail@plt+0x2818>
   1389c:	bl	1100c <__errno_location@plt>
   138a0:	ldr	r1, [r0]
   138a4:	movw	r0, #63633	; 0xf891
   138a8:	movt	r0, #1
   138ac:	str	r1, [sp, #12]
   138b0:	bl	10fd0 <gettext@plt>
   138b4:	ldr	r2, [fp, #-8]
   138b8:	movw	r1, #0
   138bc:	str	r0, [sp, #8]
   138c0:	mov	r0, r1
   138c4:	movw	r1, #3
   138c8:	bl	168d4 <__assert_fail@plt+0x57fc>
   138cc:	movw	r1, #0
   138d0:	str	r0, [sp, #4]
   138d4:	mov	r0, r1
   138d8:	ldr	r1, [sp, #12]
   138dc:	ldr	r2, [sp, #8]
   138e0:	ldr	r3, [sp, #4]
   138e4:	bl	10f64 <error@plt>
   138e8:	b	138f0 <__assert_fail@plt+0x2818>
   138ec:	bl	110c0 <abort@plt>
   138f0:	mov	sp, fp
   138f4:	pop	{fp, pc}
   138f8:	push	{fp, lr}
   138fc:	mov	fp, sp
   13900:	sub	sp, sp, #200	; 0xc8
   13904:	ldr	ip, [fp, #12]
   13908:	ldr	lr, [fp, #8]
   1390c:	str	r0, [fp, #-4]
   13910:	str	r1, [fp, #-8]
   13914:	str	r3, [fp, #-12]
   13918:	str	r2, [fp, #-16]
   1391c:	str	ip, [fp, #-20]	; 0xffffffec
   13920:	str	lr, [fp, #-24]	; 0xffffffe8
   13924:	ldr	r0, [fp, #-16]
   13928:	str	r0, [fp, #-28]	; 0xffffffe4
   1392c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13930:	ldr	r1, [fp, #-20]	; 0xffffffec
   13934:	str	r1, [fp, #-36]	; 0xffffffdc
   13938:	str	r0, [fp, #-40]	; 0xffffffd8
   1393c:	mov	r0, #1
   13940:	strb	r0, [fp, #-41]	; 0xffffffd7
   13944:	ldr	r0, [fp, #-16]
   13948:	ldr	r1, [fp, #-12]
   1394c:	adds	r0, r0, #8192	; 0x2000
   13950:	adc	r1, r1, #0
   13954:	cmp	r1, #0
   13958:	str	r0, [sp, #52]	; 0x34
   1395c:	beq	139ac <__assert_fail@plt+0x28d4>
   13960:	b	13964 <__assert_fail@plt+0x288c>
   13964:	sub	r2, fp, #62	; 0x3e
   13968:	movw	r0, #63662	; 0xf8ae
   1396c:	movt	r0, #1
   13970:	str	r2, [sp, #48]	; 0x30
   13974:	bl	10fd0 <gettext@plt>
   13978:	ldr	r2, [fp, #-16]
   1397c:	ldr	r1, [fp, #-12]
   13980:	str	r0, [sp, #44]	; 0x2c
   13984:	mov	r0, r2
   13988:	ldr	r2, [sp, #48]	; 0x30
   1398c:	bl	1437c <__assert_fail@plt+0x32a4>
   13990:	movw	r1, #1
   13994:	str	r0, [sp, #40]	; 0x28
   13998:	mov	r0, r1
   1399c:	movw	r1, #0
   139a0:	ldr	r2, [sp, #44]	; 0x2c
   139a4:	ldr	r3, [sp, #40]	; 0x28
   139a8:	bl	10f64 <error@plt>
   139ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   139b0:	cmp	r0, #1048576	; 0x100000
   139b4:	bhi	13bd0 <__assert_fail@plt+0x2af8>
   139b8:	movw	r0, #1
   139bc:	strb	r0, [fp, #-63]	; 0xffffffc1
   139c0:	movw	r0, #0
   139c4:	strb	r0, [fp, #-64]	; 0xffffffc0
   139c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   139cc:	add	r0, r0, #8192	; 0x2000
   139d0:	str	r0, [fp, #-68]	; 0xffffffbc
   139d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   139d8:	movw	r0, #2
   139dc:	bl	1776c <__assert_fail@plt+0x6694>
   139e0:	str	r0, [fp, #-80]	; 0xffffffb0
   139e4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   139e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   139ec:	add	r0, r0, r1
   139f0:	str	r0, [fp, #-76]	; 0xffffffb4
   139f4:	movw	r0, #0
   139f8:	strb	r0, [fp, #-69]	; 0xffffffbb
   139fc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13a00:	mvn	r1, #0
   13a04:	eor	r0, r0, r1
   13a08:	tst	r0, #1
   13a0c:	beq	13bc4 <__assert_fail@plt+0x2aec>
   13a10:	ldr	r0, [fp, #-8]
   13a14:	ldrb	r1, [fp, #-69]	; 0xffffffbb
   13a18:	and	r1, r1, #1
   13a1c:	sub	r2, fp, #80	; 0x50
   13a20:	add	r1, r2, r1, lsl #2
   13a24:	ldr	r1, [r1]
   13a28:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13a2c:	bl	14188 <__assert_fail@plt+0x30b0>
   13a30:	str	r0, [fp, #-84]	; 0xffffffac
   13a34:	movw	r0, #0
   13a38:	str	r0, [fp, #-88]	; 0xffffffa8
   13a3c:	ldr	r0, [fp, #-84]	; 0xffffffac
   13a40:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13a44:	cmp	r0, r1
   13a48:	bcs	13aec <__assert_fail@plt+0x2a14>
   13a4c:	bl	1100c <__errno_location@plt>
   13a50:	ldr	r0, [r0]
   13a54:	cmp	r0, #0
   13a58:	beq	13ab0 <__assert_fail@plt+0x29d8>
   13a5c:	bl	1100c <__errno_location@plt>
   13a60:	ldr	r1, [r0]
   13a64:	movw	r0, #63583	; 0xf85f
   13a68:	movt	r0, #1
   13a6c:	str	r1, [sp, #36]	; 0x24
   13a70:	bl	10fd0 <gettext@plt>
   13a74:	ldr	r1, [fp, #-4]
   13a78:	movw	lr, #4
   13a7c:	str	r0, [sp, #32]
   13a80:	mov	r0, lr
   13a84:	bl	16780 <__assert_fail@plt+0x56a8>
   13a88:	movw	r1, #0
   13a8c:	str	r0, [sp, #28]
   13a90:	mov	r0, r1
   13a94:	ldr	r1, [sp, #36]	; 0x24
   13a98:	ldr	r2, [sp, #32]
   13a9c:	ldr	r3, [sp, #28]
   13aa0:	bl	10f64 <error@plt>
   13aa4:	movw	r0, #0
   13aa8:	strb	r0, [fp, #-41]	; 0xffffffd7
   13aac:	b	13bc4 <__assert_fail@plt+0x2aec>
   13ab0:	ldr	r0, [fp, #-84]	; 0xffffffac
   13ab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ab8:	cmp	r0, r1
   13abc:	bhi	13ae4 <__assert_fail@plt+0x2a0c>
   13ac0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13ac4:	tst	r0, #1
   13ac8:	beq	13ad0 <__assert_fail@plt+0x29f8>
   13acc:	b	13ae0 <__assert_fail@plt+0x2a08>
   13ad0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ad4:	ldr	r1, [fp, #-84]	; 0xffffffac
   13ad8:	sub	r0, r0, r1
   13adc:	str	r0, [fp, #-88]	; 0xffffffa8
   13ae0:	b	13ae4 <__assert_fail@plt+0x2a0c>
   13ae4:	movw	r0, #1
   13ae8:	strb	r0, [fp, #-64]	; 0xffffffc0
   13aec:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13af0:	tst	r0, #1
   13af4:	bne	13b48 <__assert_fail@plt+0x2a70>
   13af8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13afc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13b00:	sub	r0, r0, r1
   13b04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13b0c:	adds	r0, r1, r0
   13b10:	adc	r1, r2, #0
   13b14:	str	r0, [fp, #-40]	; 0xffffffd8
   13b18:	str	r1, [fp, #-36]	; 0xffffffdc
   13b1c:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   13b20:	mov	r1, #1
   13b24:	bic	r0, r1, r0
   13b28:	sub	r1, fp, #80	; 0x50
   13b2c:	add	r0, r1, r0, lsl #2
   13b30:	ldr	r0, [r0]
   13b34:	add	r0, r0, #8192	; 0x2000
   13b38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13b40:	sub	r1, r1, r2
   13b44:	bl	1362c <__assert_fail@plt+0x2554>
   13b48:	movw	r0, #0
   13b4c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13b50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b54:	ldr	r1, [fp, #-84]	; 0xffffffac
   13b58:	cmp	r0, r1
   13b5c:	bcs	13ba8 <__assert_fail@plt+0x2ad0>
   13b60:	ldr	r0, [fp, #-84]	; 0xffffffac
   13b64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b68:	sub	r0, r0, r1
   13b6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13b74:	adds	r0, r1, r0
   13b78:	adc	r1, r2, #0
   13b7c:	str	r0, [fp, #-40]	; 0xffffffd8
   13b80:	str	r1, [fp, #-36]	; 0xffffffdc
   13b84:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   13b88:	and	r0, r0, #1
   13b8c:	sub	r1, fp, #80	; 0x50
   13b90:	add	r0, r1, r0, lsl #2
   13b94:	ldr	r0, [r0]
   13b98:	ldr	r1, [fp, #-84]	; 0xffffffac
   13b9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13ba0:	sub	r1, r1, r2
   13ba4:	bl	1362c <__assert_fail@plt+0x2554>
   13ba8:	b	13bac <__assert_fail@plt+0x2ad4>
   13bac:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   13bb0:	mvn	r1, #0
   13bb4:	eor	r0, r0, r1
   13bb8:	and	r0, r0, #1
   13bbc:	strb	r0, [fp, #-69]	; 0xffffffbb
   13bc0:	b	139fc <__assert_fail@plt+0x2924>
   13bc4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13bc8:	bl	14148 <__assert_fail@plt+0x3070>
   13bcc:	b	13f84 <__assert_fail@plt+0x2eac>
   13bd0:	mov	r0, #0
   13bd4:	strb	r0, [fp, #-89]	; 0xffffffa7
   13bd8:	str	r0, [sp, #88]	; 0x58
   13bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13be0:	bfc	r0, #13, #19
   13be4:	rsb	r0, r0, #8192	; 0x2000
   13be8:	str	r0, [sp, #84]	; 0x54
   13bec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13bf0:	ldr	r1, [sp, #84]	; 0x54
   13bf4:	add	r0, r0, r1
   13bf8:	str	r0, [sp, #80]	; 0x50
   13bfc:	ldr	r0, [sp, #80]	; 0x50
   13c00:	lsr	r0, r0, #13
   13c04:	add	r0, r0, #1
   13c08:	str	r0, [sp, #76]	; 0x4c
   13c0c:	movw	r0, #0
   13c10:	str	r0, [sp, #72]	; 0x48
   13c14:	str	r0, [sp, #68]	; 0x44
   13c18:	movw	r1, #0
   13c1c:	strb	r1, [fp, #-97]	; 0xffffff9f
   13c20:	str	r0, [sp, #96]	; 0x60
   13c24:	movw	r0, #1
   13c28:	str	r0, [sp, #92]	; 0x5c
   13c2c:	ldrb	r0, [fp, #-89]	; 0xffffffa7
   13c30:	mvn	r1, #0
   13c34:	eor	r0, r0, r1
   13c38:	tst	r0, #1
   13c3c:	beq	13e1c <__assert_fail@plt+0x2d44>
   13c40:	ldr	r0, [sp, #68]	; 0x44
   13c44:	ldr	r1, [sp, #96]	; 0x60
   13c48:	cmp	r0, r1
   13c4c:	bne	13cd0 <__assert_fail@plt+0x2bf8>
   13c50:	ldr	r0, [sp, #68]	; 0x44
   13c54:	cmp	r0, #0
   13c58:	bne	13c8c <__assert_fail@plt+0x2bb4>
   13c5c:	ldr	r0, [sp, #76]	; 0x4c
   13c60:	cmp	r0, #16
   13c64:	bcs	13c74 <__assert_fail@plt+0x2b9c>
   13c68:	ldr	r0, [sp, #76]	; 0x4c
   13c6c:	str	r0, [sp, #24]
   13c70:	b	13c80 <__assert_fail@plt+0x2ba8>
   13c74:	movw	r0, #16
   13c78:	str	r0, [sp, #24]
   13c7c:	b	13c80 <__assert_fail@plt+0x2ba8>
   13c80:	ldr	r0, [sp, #24]
   13c84:	str	r0, [sp, #68]	; 0x44
   13c88:	b	13cbc <__assert_fail@plt+0x2be4>
   13c8c:	ldr	r0, [sp, #68]	; 0x44
   13c90:	ldr	r1, [sp, #76]	; 0x4c
   13c94:	lsr	r1, r1, #1
   13c98:	cmp	r0, r1
   13c9c:	bhi	13cb0 <__assert_fail@plt+0x2bd8>
   13ca0:	ldr	r0, [sp, #68]	; 0x44
   13ca4:	lsl	r0, r0, #1
   13ca8:	str	r0, [sp, #68]	; 0x44
   13cac:	b	13cb8 <__assert_fail@plt+0x2be0>
   13cb0:	ldr	r0, [sp, #76]	; 0x4c
   13cb4:	str	r0, [sp, #68]	; 0x44
   13cb8:	b	13cbc <__assert_fail@plt+0x2be4>
   13cbc:	ldr	r0, [sp, #88]	; 0x58
   13cc0:	ldr	r1, [sp, #68]	; 0x44
   13cc4:	movw	r2, #4
   13cc8:	bl	17570 <__assert_fail@plt+0x6498>
   13ccc:	str	r0, [sp, #88]	; 0x58
   13cd0:	ldrb	r0, [fp, #-97]	; 0xffffff9f
   13cd4:	tst	r0, #1
   13cd8:	bne	13d00 <__assert_fail@plt+0x2c28>
   13cdc:	mov	r0, #8192	; 0x2000
   13ce0:	bl	17614 <__assert_fail@plt+0x653c>
   13ce4:	ldr	lr, [sp, #88]	; 0x58
   13ce8:	ldr	r1, [sp, #96]	; 0x60
   13cec:	add	r1, lr, r1, lsl #2
   13cf0:	str	r0, [r1]
   13cf4:	ldr	r0, [sp, #96]	; 0x60
   13cf8:	add	r0, r0, #1
   13cfc:	str	r0, [sp, #72]	; 0x48
   13d00:	ldr	r0, [fp, #-8]
   13d04:	ldr	r1, [sp, #88]	; 0x58
   13d08:	ldr	r2, [sp, #96]	; 0x60
   13d0c:	add	r1, r1, r2, lsl #2
   13d10:	ldr	r1, [r1]
   13d14:	movw	r2, #8192	; 0x2000
   13d18:	bl	14188 <__assert_fail@plt+0x30b0>
   13d1c:	str	r0, [fp, #-96]	; 0xffffffa0
   13d20:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13d24:	cmp	r0, #8192	; 0x2000
   13d28:	bcs	13d98 <__assert_fail@plt+0x2cc0>
   13d2c:	bl	1100c <__errno_location@plt>
   13d30:	ldr	r0, [r0]
   13d34:	cmp	r0, #0
   13d38:	beq	13d90 <__assert_fail@plt+0x2cb8>
   13d3c:	bl	1100c <__errno_location@plt>
   13d40:	ldr	r1, [r0]
   13d44:	movw	r0, #63583	; 0xf85f
   13d48:	movt	r0, #1
   13d4c:	str	r1, [sp, #20]
   13d50:	bl	10fd0 <gettext@plt>
   13d54:	ldr	r1, [fp, #-4]
   13d58:	movw	lr, #4
   13d5c:	str	r0, [sp, #16]
   13d60:	mov	r0, lr
   13d64:	bl	16780 <__assert_fail@plt+0x56a8>
   13d68:	movw	r1, #0
   13d6c:	str	r0, [sp, #12]
   13d70:	mov	r0, r1
   13d74:	ldr	r1, [sp, #20]
   13d78:	ldr	r2, [sp, #16]
   13d7c:	ldr	r3, [sp, #12]
   13d80:	bl	10f64 <error@plt>
   13d84:	movw	r0, #0
   13d88:	strb	r0, [fp, #-41]	; 0xffffffd7
   13d8c:	b	13f40 <__assert_fail@plt+0x2e68>
   13d90:	movw	r0, #1
   13d94:	strb	r0, [fp, #-89]	; 0xffffffa7
   13d98:	ldr	r0, [sp, #96]	; 0x60
   13d9c:	add	r0, r0, #1
   13da0:	ldr	r1, [sp, #76]	; 0x4c
   13da4:	cmp	r0, r1
   13da8:	bne	13db4 <__assert_fail@plt+0x2cdc>
   13dac:	movw	r0, #1
   13db0:	strb	r0, [fp, #-97]	; 0xffffff9f
   13db4:	ldrb	r0, [fp, #-97]	; 0xffffff9f
   13db8:	tst	r0, #1
   13dbc:	beq	13df4 <__assert_fail@plt+0x2d1c>
   13dc0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13dc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13dc8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13dcc:	adds	r0, r1, r0
   13dd0:	adc	r1, r2, #0
   13dd4:	str	r0, [fp, #-40]	; 0xffffffd8
   13dd8:	str	r1, [fp, #-36]	; 0xffffffdc
   13ddc:	ldr	r0, [sp, #88]	; 0x58
   13de0:	ldr	r1, [sp, #92]	; 0x5c
   13de4:	add	r0, r0, r1, lsl #2
   13de8:	ldr	r0, [r0]
   13dec:	ldr	r1, [fp, #-96]	; 0xffffffa0
   13df0:	bl	1362c <__assert_fail@plt+0x2554>
   13df4:	b	13df8 <__assert_fail@plt+0x2d20>
   13df8:	ldr	r0, [sp, #92]	; 0x5c
   13dfc:	str	r0, [sp, #96]	; 0x60
   13e00:	ldr	r0, [sp, #92]	; 0x5c
   13e04:	add	r0, r0, #1
   13e08:	ldr	r1, [sp, #76]	; 0x4c
   13e0c:	udiv	r2, r0, r1
   13e10:	mls	r0, r2, r1, r0
   13e14:	str	r0, [sp, #92]	; 0x5c
   13e18:	b	13c2c <__assert_fail@plt+0x2b54>
   13e1c:	ldr	r0, [sp, #84]	; 0x54
   13e20:	cmp	r0, #0
   13e24:	beq	13f3c <__assert_fail@plt+0x2e64>
   13e28:	ldrb	r0, [fp, #-97]	; 0xffffff9f
   13e2c:	tst	r0, #1
   13e30:	beq	13ed0 <__assert_fail@plt+0x2df8>
   13e34:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13e38:	rsb	r0, r0, #8192	; 0x2000
   13e3c:	str	r0, [sp, #64]	; 0x40
   13e40:	ldr	r0, [sp, #84]	; 0x54
   13e44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13e4c:	adds	r0, r1, r0
   13e50:	adc	r1, r2, #0
   13e54:	str	r0, [fp, #-40]	; 0xffffffd8
   13e58:	str	r1, [fp, #-36]	; 0xffffffdc
   13e5c:	ldr	r0, [sp, #84]	; 0x54
   13e60:	ldr	r1, [sp, #64]	; 0x40
   13e64:	cmp	r0, r1
   13e68:	bcs	13e90 <__assert_fail@plt+0x2db8>
   13e6c:	ldr	r0, [sp, #88]	; 0x58
   13e70:	ldr	r1, [sp, #96]	; 0x60
   13e74:	add	r0, r0, r1, lsl #2
   13e78:	ldr	r0, [r0]
   13e7c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   13e80:	add	r0, r0, r1
   13e84:	ldr	r1, [sp, #84]	; 0x54
   13e88:	bl	1362c <__assert_fail@plt+0x2554>
   13e8c:	b	13ecc <__assert_fail@plt+0x2df4>
   13e90:	ldr	r0, [sp, #88]	; 0x58
   13e94:	ldr	r1, [sp, #96]	; 0x60
   13e98:	ldr	r0, [r0, r1, lsl #2]
   13e9c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   13ea0:	add	r0, r0, r1
   13ea4:	ldr	r1, [sp, #64]	; 0x40
   13ea8:	bl	1362c <__assert_fail@plt+0x2554>
   13eac:	ldr	r0, [sp, #88]	; 0x58
   13eb0:	ldr	r1, [sp, #92]	; 0x5c
   13eb4:	add	r0, r0, r1, lsl #2
   13eb8:	ldr	r0, [r0]
   13ebc:	ldr	r1, [sp, #84]	; 0x54
   13ec0:	ldr	lr, [sp, #64]	; 0x40
   13ec4:	sub	r1, r1, lr
   13ec8:	bl	1362c <__assert_fail@plt+0x2554>
   13ecc:	b	13f38 <__assert_fail@plt+0x2e60>
   13ed0:	ldr	r0, [sp, #96]	; 0x60
   13ed4:	add	r0, r0, #1
   13ed8:	ldr	r1, [sp, #76]	; 0x4c
   13edc:	cmp	r0, r1
   13ee0:	bne	13f34 <__assert_fail@plt+0x2e5c>
   13ee4:	ldr	r0, [sp, #84]	; 0x54
   13ee8:	rsb	r0, r0, #8192	; 0x2000
   13eec:	str	r0, [sp, #60]	; 0x3c
   13ef0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13ef4:	ldr	r1, [sp, #60]	; 0x3c
   13ef8:	sub	r0, r0, r1
   13efc:	str	r0, [sp, #56]	; 0x38
   13f00:	ldr	r0, [sp, #56]	; 0x38
   13f04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13f0c:	adds	r0, r1, r0
   13f10:	adc	r1, r2, #0
   13f14:	str	r0, [fp, #-40]	; 0xffffffd8
   13f18:	str	r1, [fp, #-36]	; 0xffffffdc
   13f1c:	ldr	r0, [sp, #88]	; 0x58
   13f20:	ldr	r1, [sp, #92]	; 0x5c
   13f24:	add	r0, r0, r1, lsl #2
   13f28:	ldr	r0, [r0]
   13f2c:	ldr	r1, [sp, #56]	; 0x38
   13f30:	bl	1362c <__assert_fail@plt+0x2554>
   13f34:	b	13f38 <__assert_fail@plt+0x2e60>
   13f38:	b	13f3c <__assert_fail@plt+0x2e64>
   13f3c:	b	13f40 <__assert_fail@plt+0x2e68>
   13f40:	movw	r0, #0
   13f44:	str	r0, [sp, #96]	; 0x60
   13f48:	ldr	r0, [sp, #96]	; 0x60
   13f4c:	ldr	r1, [sp, #72]	; 0x48
   13f50:	cmp	r0, r1
   13f54:	bcs	13f7c <__assert_fail@plt+0x2ea4>
   13f58:	ldr	r0, [sp, #88]	; 0x58
   13f5c:	ldr	r1, [sp, #96]	; 0x60
   13f60:	add	r0, r0, r1, lsl #2
   13f64:	ldr	r0, [r0]
   13f68:	bl	14148 <__assert_fail@plt+0x3070>
   13f6c:	ldr	r0, [sp, #96]	; 0x60
   13f70:	add	r0, r0, #1
   13f74:	str	r0, [sp, #96]	; 0x60
   13f78:	b	13f48 <__assert_fail@plt+0x2e70>
   13f7c:	ldr	r0, [sp, #88]	; 0x58
   13f80:	bl	14148 <__assert_fail@plt+0x3070>
   13f84:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f88:	cmp	r0, #0
   13f8c:	blt	13fd0 <__assert_fail@plt+0x2ef8>
   13f90:	b	13f94 <__assert_fail@plt+0x2ebc>
   13f94:	ldr	r0, [fp, #-8]
   13f98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13f9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fa0:	ldr	r1, [fp, #-4]
   13fa4:	mov	ip, sp
   13fa8:	str	r1, [ip, #4]
   13fac:	mov	r1, #0
   13fb0:	str	r1, [ip]
   13fb4:	bl	12288 <__assert_fail@plt+0x11b0>
   13fb8:	cmn	r1, #1
   13fbc:	str	r0, [sp, #8]
   13fc0:	bgt	13fd0 <__assert_fail@plt+0x2ef8>
   13fc4:	b	13fc8 <__assert_fail@plt+0x2ef0>
   13fc8:	movw	r0, #0
   13fcc:	strb	r0, [fp, #-41]	; 0xffffffd7
   13fd0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   13fd4:	and	r0, r0, #1
   13fd8:	mov	sp, fp
   13fdc:	pop	{fp, pc}
   13fe0:	sub	sp, sp, #4
   13fe4:	str	r0, [sp]
   13fe8:	ldr	r0, [sp]
   13fec:	movw	r1, #356	; 0x164
   13ff0:	movt	r1, #3
   13ff4:	str	r0, [r1]
   13ff8:	add	sp, sp, #4
   13ffc:	bx	lr
   14000:	sub	sp, sp, #4
   14004:	and	r0, r0, #1
   14008:	strb	r0, [sp, #3]
   1400c:	ldrb	r0, [sp, #3]
   14010:	and	r0, r0, #1
   14014:	movw	r1, #360	; 0x168
   14018:	movt	r1, #3
   1401c:	strb	r0, [r1]
   14020:	add	sp, sp, #4
   14024:	bx	lr
   14028:	push	{fp, lr}
   1402c:	mov	fp, sp
   14030:	sub	sp, sp, #24
   14034:	movw	r0, #340	; 0x154
   14038:	movt	r0, #3
   1403c:	ldr	r0, [r0]
   14040:	bl	1cbb0 <__assert_fail@plt+0xbad8>
   14044:	cmp	r0, #0
   14048:	beq	14118 <__assert_fail@plt+0x3040>
   1404c:	movw	r0, #360	; 0x168
   14050:	movt	r0, #3
   14054:	ldrb	r0, [r0]
   14058:	tst	r0, #1
   1405c:	beq	14070 <__assert_fail@plt+0x2f98>
   14060:	bl	1100c <__errno_location@plt>
   14064:	ldr	r0, [r0]
   14068:	cmp	r0, #32
   1406c:	beq	14118 <__assert_fail@plt+0x3040>
   14070:	movw	r0, #63935	; 0xf9bf
   14074:	movt	r0, #1
   14078:	bl	10fd0 <gettext@plt>
   1407c:	str	r0, [fp, #-4]
   14080:	movw	r0, #356	; 0x164
   14084:	movt	r0, #3
   14088:	ldr	r0, [r0]
   1408c:	movw	lr, #0
   14090:	cmp	r0, lr
   14094:	beq	140ec <__assert_fail@plt+0x3014>
   14098:	bl	1100c <__errno_location@plt>
   1409c:	ldr	r1, [r0]
   140a0:	movw	r0, #356	; 0x164
   140a4:	movt	r0, #3
   140a8:	ldr	r0, [r0]
   140ac:	str	r1, [fp, #-8]
   140b0:	bl	1687c <__assert_fail@plt+0x57a4>
   140b4:	ldr	r1, [fp, #-4]
   140b8:	movw	lr, #0
   140bc:	str	r0, [sp, #12]
   140c0:	mov	r0, lr
   140c4:	ldr	lr, [fp, #-8]
   140c8:	str	r1, [sp, #8]
   140cc:	mov	r1, lr
   140d0:	movw	r2, #62845	; 0xf57d
   140d4:	movt	r2, #1
   140d8:	ldr	r3, [sp, #12]
   140dc:	ldr	ip, [sp, #8]
   140e0:	str	ip, [sp]
   140e4:	bl	10f64 <error@plt>
   140e8:	b	14108 <__assert_fail@plt+0x3030>
   140ec:	bl	1100c <__errno_location@plt>
   140f0:	ldr	r1, [r0]
   140f4:	ldr	r3, [fp, #-4]
   140f8:	movw	r0, #0
   140fc:	movw	r2, #62849	; 0xf581
   14100:	movt	r2, #1
   14104:	bl	10f64 <error@plt>
   14108:	movw	r0, #252	; 0xfc
   1410c:	movt	r0, #3
   14110:	ldr	r0, [r0]
   14114:	bl	10eb0 <_exit@plt>
   14118:	movw	r0, #336	; 0x150
   1411c:	movt	r0, #3
   14120:	ldr	r0, [r0]
   14124:	bl	1cbb0 <__assert_fail@plt+0xbad8>
   14128:	cmp	r0, #0
   1412c:	beq	14140 <__assert_fail@plt+0x3068>
   14130:	movw	r0, #252	; 0xfc
   14134:	movt	r0, #3
   14138:	ldr	r0, [r0]
   1413c:	bl	10eb0 <_exit@plt>
   14140:	mov	sp, fp
   14144:	pop	{fp, pc}
   14148:	push	{fp, lr}
   1414c:	mov	fp, sp
   14150:	sub	sp, sp, #16
   14154:	str	r0, [fp, #-4]
   14158:	bl	1100c <__errno_location@plt>
   1415c:	ldr	r0, [r0]
   14160:	str	r0, [sp, #8]
   14164:	ldr	r0, [fp, #-4]
   14168:	bl	10ea4 <free@plt>
   1416c:	ldr	r0, [sp, #8]
   14170:	str	r0, [sp, #4]
   14174:	bl	1100c <__errno_location@plt>
   14178:	ldr	lr, [sp, #4]
   1417c:	str	lr, [r0]
   14180:	mov	sp, fp
   14184:	pop	{fp, pc}
   14188:	push	{fp, lr}
   1418c:	mov	fp, sp
   14190:	sub	sp, sp, #24
   14194:	str	r0, [fp, #-4]
   14198:	str	r1, [fp, #-8]
   1419c:	str	r2, [sp, #12]
   141a0:	movw	r0, #0
   141a4:	str	r0, [sp, #8]
   141a8:	ldr	r0, [fp, #-8]
   141ac:	str	r0, [sp, #4]
   141b0:	ldr	r0, [sp, #12]
   141b4:	cmp	r0, #0
   141b8:	bls	14230 <__assert_fail@plt+0x3158>
   141bc:	ldr	r0, [fp, #-4]
   141c0:	ldr	r1, [sp, #4]
   141c4:	ldr	r2, [sp, #12]
   141c8:	bl	16c50 <__assert_fail@plt+0x5b78>
   141cc:	str	r0, [sp]
   141d0:	ldr	r0, [sp]
   141d4:	cmn	r0, #1
   141d8:	bne	141e0 <__assert_fail@plt+0x3108>
   141dc:	b	14230 <__assert_fail@plt+0x3158>
   141e0:	ldr	r0, [sp]
   141e4:	cmp	r0, #0
   141e8:	bne	141fc <__assert_fail@plt+0x3124>
   141ec:	bl	1100c <__errno_location@plt>
   141f0:	movw	lr, #0
   141f4:	str	lr, [r0]
   141f8:	b	14230 <__assert_fail@plt+0x3158>
   141fc:	ldr	r0, [sp]
   14200:	ldr	r1, [sp, #8]
   14204:	add	r0, r1, r0
   14208:	str	r0, [sp, #8]
   1420c:	ldr	r0, [sp]
   14210:	ldr	r1, [sp, #4]
   14214:	add	r0, r1, r0
   14218:	str	r0, [sp, #4]
   1421c:	ldr	r0, [sp]
   14220:	ldr	r1, [sp, #12]
   14224:	sub	r0, r1, r0
   14228:	str	r0, [sp, #12]
   1422c:	b	141b0 <__assert_fail@plt+0x30d8>
   14230:	ldr	r0, [sp, #8]
   14234:	mov	sp, fp
   14238:	pop	{fp, pc}
   1423c:	push	{fp, lr}
   14240:	mov	fp, sp
   14244:	sub	sp, sp, #32
   14248:	str	r0, [fp, #-8]
   1424c:	str	r1, [fp, #-4]
   14250:	str	r2, [fp, #-12]
   14254:	ldr	r0, [fp, #-12]
   14258:	add	r0, r0, #20
   1425c:	str	r0, [sp, #16]
   14260:	ldr	r0, [sp, #16]
   14264:	mov	r1, #0
   14268:	strb	r1, [r0]
   1426c:	ldr	r0, [fp, #-4]
   14270:	cmn	r0, #1
   14274:	bgt	14304 <__assert_fail@plt+0x322c>
   14278:	b	1427c <__assert_fail@plt+0x31a4>
   1427c:	b	14280 <__assert_fail@plt+0x31a8>
   14280:	ldr	r0, [fp, #-8]
   14284:	ldr	r1, [fp, #-4]
   14288:	mov	r2, #10
   1428c:	mov	r3, #0
   14290:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   14294:	rsb	r2, r2, #48	; 0x30
   14298:	ldr	r3, [sp, #16]
   1429c:	mvn	lr, #0
   142a0:	add	ip, r3, lr
   142a4:	str	ip, [sp, #16]
   142a8:	add	r3, r3, lr
   142ac:	strb	r2, [r3]
   142b0:	str	r0, [sp, #12]
   142b4:	str	r1, [sp, #8]
   142b8:	ldr	r0, [fp, #-8]
   142bc:	ldr	r1, [fp, #-4]
   142c0:	mov	r2, #10
   142c4:	mov	r3, #0
   142c8:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   142cc:	str	r1, [fp, #-4]
   142d0:	str	r0, [fp, #-8]
   142d4:	orr	r0, r0, r1
   142d8:	cmp	r0, #0
   142dc:	bne	14280 <__assert_fail@plt+0x31a8>
   142e0:	b	142e4 <__assert_fail@plt+0x320c>
   142e4:	ldr	r0, [sp, #16]
   142e8:	mvn	r1, #0
   142ec:	add	r2, r0, r1
   142f0:	str	r2, [sp, #16]
   142f4:	add	r0, r0, r1
   142f8:	movw	r1, #45	; 0x2d
   142fc:	strb	r1, [r0]
   14300:	b	14370 <__assert_fail@plt+0x3298>
   14304:	b	14308 <__assert_fail@plt+0x3230>
   14308:	ldr	r0, [fp, #-8]
   1430c:	ldr	r1, [fp, #-4]
   14310:	mov	r2, #10
   14314:	mov	r3, #0
   14318:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   1431c:	add	r2, r2, #48	; 0x30
   14320:	ldr	r3, [sp, #16]
   14324:	mvn	lr, #0
   14328:	add	ip, r3, lr
   1432c:	str	ip, [sp, #16]
   14330:	add	r3, r3, lr
   14334:	strb	r2, [r3]
   14338:	str	r0, [sp, #4]
   1433c:	str	r1, [sp]
   14340:	ldr	r0, [fp, #-8]
   14344:	ldr	r1, [fp, #-4]
   14348:	mov	r2, #10
   1434c:	mov	r3, #0
   14350:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   14354:	str	r1, [fp, #-4]
   14358:	str	r0, [fp, #-8]
   1435c:	orr	r0, r0, r1
   14360:	cmp	r0, #0
   14364:	bne	14308 <__assert_fail@plt+0x3230>
   14368:	b	1436c <__assert_fail@plt+0x3294>
   1436c:	b	14370 <__assert_fail@plt+0x3298>
   14370:	ldr	r0, [sp, #16]
   14374:	mov	sp, fp
   14378:	pop	{fp, pc}
   1437c:	push	{fp, lr}
   14380:	mov	fp, sp
   14384:	sub	sp, sp, #32
   14388:	str	r0, [fp, #-8]
   1438c:	str	r1, [fp, #-4]
   14390:	str	r2, [fp, #-12]
   14394:	ldr	r0, [fp, #-12]
   14398:	add	r0, r0, #20
   1439c:	str	r0, [sp, #16]
   143a0:	ldr	r0, [sp, #16]
   143a4:	mov	r1, #0
   143a8:	strb	r1, [r0]
   143ac:	mov	r0, #1
   143b0:	cmp	r0, #0
   143b4:	bne	14444 <__assert_fail@plt+0x336c>
   143b8:	b	143bc <__assert_fail@plt+0x32e4>
   143bc:	b	143c0 <__assert_fail@plt+0x32e8>
   143c0:	ldr	r0, [fp, #-8]
   143c4:	ldr	r1, [fp, #-4]
   143c8:	mov	r2, #10
   143cc:	mov	r3, #0
   143d0:	bl	1eea4 <__assert_fail@plt+0xddcc>
   143d4:	rsb	r2, r2, #48	; 0x30
   143d8:	ldr	r3, [sp, #16]
   143dc:	mvn	lr, #0
   143e0:	add	ip, r3, lr
   143e4:	str	ip, [sp, #16]
   143e8:	add	r3, r3, lr
   143ec:	strb	r2, [r3]
   143f0:	str	r0, [sp, #12]
   143f4:	str	r1, [sp, #8]
   143f8:	ldr	r0, [fp, #-8]
   143fc:	ldr	r1, [fp, #-4]
   14400:	mov	r2, #10
   14404:	mov	r3, #0
   14408:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1440c:	str	r1, [fp, #-4]
   14410:	str	r0, [fp, #-8]
   14414:	orr	r0, r0, r1
   14418:	cmp	r0, #0
   1441c:	bne	143c0 <__assert_fail@plt+0x32e8>
   14420:	b	14424 <__assert_fail@plt+0x334c>
   14424:	ldr	r0, [sp, #16]
   14428:	mvn	r1, #0
   1442c:	add	r2, r0, r1
   14430:	str	r2, [sp, #16]
   14434:	add	r0, r0, r1
   14438:	movw	r1, #45	; 0x2d
   1443c:	strb	r1, [r0]
   14440:	b	144b0 <__assert_fail@plt+0x33d8>
   14444:	b	14448 <__assert_fail@plt+0x3370>
   14448:	ldr	r0, [fp, #-8]
   1444c:	ldr	r1, [fp, #-4]
   14450:	mov	r2, #10
   14454:	mov	r3, #0
   14458:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1445c:	orr	r2, r2, #48	; 0x30
   14460:	ldr	r3, [sp, #16]
   14464:	mvn	lr, #0
   14468:	add	ip, r3, lr
   1446c:	str	ip, [sp, #16]
   14470:	add	r3, r3, lr
   14474:	strb	r2, [r3]
   14478:	str	r0, [sp, #4]
   1447c:	str	r1, [sp]
   14480:	ldr	r0, [fp, #-8]
   14484:	ldr	r1, [fp, #-4]
   14488:	mov	r2, #10
   1448c:	mov	r3, #0
   14490:	bl	1eea4 <__assert_fail@plt+0xddcc>
   14494:	str	r1, [fp, #-4]
   14498:	str	r0, [fp, #-8]
   1449c:	orr	r0, r0, r1
   144a0:	cmp	r0, #0
   144a4:	bne	14448 <__assert_fail@plt+0x3370>
   144a8:	b	144ac <__assert_fail@plt+0x33d4>
   144ac:	b	144b0 <__assert_fail@plt+0x33d8>
   144b0:	ldr	r0, [sp, #16]
   144b4:	mov	sp, fp
   144b8:	pop	{fp, pc}
   144bc:	push	{fp, lr}
   144c0:	mov	fp, sp
   144c4:	sub	sp, sp, #24
   144c8:	str	r0, [fp, #-4]
   144cc:	ldr	r0, [fp, #-4]
   144d0:	movw	r1, #0
   144d4:	cmp	r0, r1
   144d8:	bne	144fc <__assert_fail@plt+0x3424>
   144dc:	movw	r0, #336	; 0x150
   144e0:	movt	r0, #3
   144e4:	ldr	r1, [r0]
   144e8:	movw	r0, #63947	; 0xf9cb
   144ec:	movt	r0, #1
   144f0:	bl	110a8 <fputs@plt>
   144f4:	str	r0, [sp, #8]
   144f8:	bl	110c0 <abort@plt>
   144fc:	ldr	r0, [fp, #-4]
   14500:	movw	r1, #47	; 0x2f
   14504:	bl	11078 <strrchr@plt>
   14508:	str	r0, [fp, #-8]
   1450c:	ldr	r0, [fp, #-8]
   14510:	movw	r1, #0
   14514:	cmp	r0, r1
   14518:	beq	1452c <__assert_fail@plt+0x3454>
   1451c:	ldr	r0, [fp, #-8]
   14520:	add	r0, r0, #1
   14524:	str	r0, [sp, #4]
   14528:	b	14534 <__assert_fail@plt+0x345c>
   1452c:	ldr	r0, [fp, #-4]
   14530:	str	r0, [sp, #4]
   14534:	ldr	r0, [sp, #4]
   14538:	str	r0, [sp, #12]
   1453c:	ldr	r0, [sp, #12]
   14540:	ldr	r1, [fp, #-4]
   14544:	sub	r0, r0, r1
   14548:	cmp	r0, #7
   1454c:	blt	145b8 <__assert_fail@plt+0x34e0>
   14550:	ldr	r0, [sp, #12]
   14554:	mvn	r1, #6
   14558:	add	r0, r0, r1
   1455c:	movw	r1, #64003	; 0xfa03
   14560:	movt	r1, #1
   14564:	movw	r2, #7
   14568:	bl	110b4 <strncmp@plt>
   1456c:	cmp	r0, #0
   14570:	bne	145b8 <__assert_fail@plt+0x34e0>
   14574:	ldr	r0, [sp, #12]
   14578:	str	r0, [fp, #-4]
   1457c:	ldr	r0, [sp, #12]
   14580:	movw	r1, #64011	; 0xfa0b
   14584:	movt	r1, #1
   14588:	movw	r2, #3
   1458c:	bl	110b4 <strncmp@plt>
   14590:	cmp	r0, #0
   14594:	bne	145b4 <__assert_fail@plt+0x34dc>
   14598:	ldr	r0, [sp, #12]
   1459c:	add	r0, r0, #3
   145a0:	str	r0, [fp, #-4]
   145a4:	ldr	r0, [fp, #-4]
   145a8:	movw	r1, #320	; 0x140
   145ac:	movt	r1, #3
   145b0:	str	r0, [r1]
   145b4:	b	145b8 <__assert_fail@plt+0x34e0>
   145b8:	ldr	r0, [fp, #-4]
   145bc:	movw	r1, #364	; 0x16c
   145c0:	movt	r1, #3
   145c4:	str	r0, [r1]
   145c8:	ldr	r0, [fp, #-4]
   145cc:	movw	r1, #324	; 0x144
   145d0:	movt	r1, #3
   145d4:	str	r0, [r1]
   145d8:	mov	sp, fp
   145dc:	pop	{fp, pc}
   145e0:	push	{fp, lr}
   145e4:	mov	fp, sp
   145e8:	sub	sp, sp, #24
   145ec:	str	r0, [fp, #-4]
   145f0:	bl	1100c <__errno_location@plt>
   145f4:	ldr	r0, [r0]
   145f8:	str	r0, [fp, #-8]
   145fc:	ldr	r0, [fp, #-4]
   14600:	movw	lr, #0
   14604:	cmp	r0, lr
   14608:	beq	14618 <__assert_fail@plt+0x3540>
   1460c:	ldr	r0, [fp, #-4]
   14610:	str	r0, [sp, #8]
   14614:	b	14628 <__assert_fail@plt+0x3550>
   14618:	movw	r0, #368	; 0x170
   1461c:	movt	r0, #3
   14620:	str	r0, [sp, #8]
   14624:	b	14628 <__assert_fail@plt+0x3550>
   14628:	ldr	r0, [sp, #8]
   1462c:	movw	r1, #48	; 0x30
   14630:	bl	1a2f0 <__assert_fail@plt+0x9218>
   14634:	str	r0, [sp, #12]
   14638:	ldr	r0, [fp, #-8]
   1463c:	str	r0, [sp, #4]
   14640:	bl	1100c <__errno_location@plt>
   14644:	ldr	r1, [sp, #4]
   14648:	str	r1, [r0]
   1464c:	ldr	r0, [sp, #12]
   14650:	mov	sp, fp
   14654:	pop	{fp, pc}
   14658:	sub	sp, sp, #8
   1465c:	str	r0, [sp, #4]
   14660:	ldr	r0, [sp, #4]
   14664:	movw	r1, #0
   14668:	cmp	r0, r1
   1466c:	beq	1467c <__assert_fail@plt+0x35a4>
   14670:	ldr	r0, [sp, #4]
   14674:	str	r0, [sp]
   14678:	b	1468c <__assert_fail@plt+0x35b4>
   1467c:	movw	r0, #368	; 0x170
   14680:	movt	r0, #3
   14684:	str	r0, [sp]
   14688:	b	1468c <__assert_fail@plt+0x35b4>
   1468c:	ldr	r0, [sp]
   14690:	ldr	r0, [r0]
   14694:	add	sp, sp, #8
   14698:	bx	lr
   1469c:	sub	sp, sp, #16
   146a0:	str	r0, [sp, #12]
   146a4:	str	r1, [sp, #8]
   146a8:	ldr	r0, [sp, #8]
   146ac:	ldr	r1, [sp, #12]
   146b0:	movw	r2, #0
   146b4:	cmp	r1, r2
   146b8:	str	r0, [sp, #4]
   146bc:	beq	146cc <__assert_fail@plt+0x35f4>
   146c0:	ldr	r0, [sp, #12]
   146c4:	str	r0, [sp]
   146c8:	b	146dc <__assert_fail@plt+0x3604>
   146cc:	movw	r0, #368	; 0x170
   146d0:	movt	r0, #3
   146d4:	str	r0, [sp]
   146d8:	b	146dc <__assert_fail@plt+0x3604>
   146dc:	ldr	r0, [sp]
   146e0:	ldr	r1, [sp, #4]
   146e4:	str	r1, [r0]
   146e8:	add	sp, sp, #16
   146ec:	bx	lr
   146f0:	sub	sp, sp, #32
   146f4:	str	r0, [sp, #28]
   146f8:	strb	r1, [sp, #27]
   146fc:	str	r2, [sp, #20]
   14700:	ldrb	r0, [sp, #27]
   14704:	strb	r0, [sp, #19]
   14708:	ldr	r0, [sp, #28]
   1470c:	movw	r1, #0
   14710:	cmp	r0, r1
   14714:	beq	14724 <__assert_fail@plt+0x364c>
   14718:	ldr	r0, [sp, #28]
   1471c:	str	r0, [sp]
   14720:	b	14734 <__assert_fail@plt+0x365c>
   14724:	movw	r0, #368	; 0x170
   14728:	movt	r0, #3
   1472c:	str	r0, [sp]
   14730:	b	14734 <__assert_fail@plt+0x365c>
   14734:	ldr	r0, [sp]
   14738:	add	r0, r0, #8
   1473c:	ldrb	r1, [sp, #19]
   14740:	lsr	r1, r1, #5
   14744:	add	r0, r0, r1, lsl #2
   14748:	str	r0, [sp, #12]
   1474c:	ldrb	r0, [sp, #19]
   14750:	and	r0, r0, #31
   14754:	str	r0, [sp, #8]
   14758:	ldr	r0, [sp, #12]
   1475c:	ldr	r0, [r0]
   14760:	ldr	r1, [sp, #8]
   14764:	lsr	r0, r0, r1
   14768:	and	r0, r0, #1
   1476c:	str	r0, [sp, #4]
   14770:	ldr	r0, [sp, #20]
   14774:	and	r0, r0, #1
   14778:	ldr	r1, [sp, #4]
   1477c:	eor	r0, r0, r1
   14780:	ldr	r1, [sp, #8]
   14784:	lsl	r0, r0, r1
   14788:	ldr	r1, [sp, #12]
   1478c:	ldr	r2, [r1]
   14790:	eor	r0, r2, r0
   14794:	str	r0, [r1]
   14798:	ldr	r0, [sp, #4]
   1479c:	add	sp, sp, #32
   147a0:	bx	lr
   147a4:	sub	sp, sp, #12
   147a8:	str	r0, [sp, #8]
   147ac:	str	r1, [sp, #4]
   147b0:	ldr	r0, [sp, #8]
   147b4:	movw	r1, #0
   147b8:	cmp	r0, r1
   147bc:	bne	147cc <__assert_fail@plt+0x36f4>
   147c0:	movw	r0, #368	; 0x170
   147c4:	movt	r0, #3
   147c8:	str	r0, [sp, #8]
   147cc:	ldr	r0, [sp, #8]
   147d0:	ldr	r0, [r0, #4]
   147d4:	str	r0, [sp]
   147d8:	ldr	r0, [sp, #4]
   147dc:	ldr	r1, [sp, #8]
   147e0:	str	r0, [r1, #4]
   147e4:	ldr	r0, [sp]
   147e8:	add	sp, sp, #12
   147ec:	bx	lr
   147f0:	push	{fp, lr}
   147f4:	mov	fp, sp
   147f8:	sub	sp, sp, #16
   147fc:	str	r0, [fp, #-4]
   14800:	str	r1, [sp, #8]
   14804:	str	r2, [sp, #4]
   14808:	ldr	r0, [fp, #-4]
   1480c:	movw	r1, #0
   14810:	cmp	r0, r1
   14814:	bne	14824 <__assert_fail@plt+0x374c>
   14818:	movw	r0, #368	; 0x170
   1481c:	movt	r0, #3
   14820:	str	r0, [fp, #-4]
   14824:	ldr	r0, [fp, #-4]
   14828:	movw	r1, #10
   1482c:	str	r1, [r0]
   14830:	ldr	r0, [sp, #8]
   14834:	movw	r1, #0
   14838:	cmp	r0, r1
   1483c:	beq	14850 <__assert_fail@plt+0x3778>
   14840:	ldr	r0, [sp, #4]
   14844:	movw	r1, #0
   14848:	cmp	r0, r1
   1484c:	bne	14854 <__assert_fail@plt+0x377c>
   14850:	bl	110c0 <abort@plt>
   14854:	ldr	r0, [sp, #8]
   14858:	ldr	r1, [fp, #-4]
   1485c:	str	r0, [r1, #40]	; 0x28
   14860:	ldr	r0, [sp, #4]
   14864:	ldr	r1, [fp, #-4]
   14868:	str	r0, [r1, #44]	; 0x2c
   1486c:	mov	sp, fp
   14870:	pop	{fp, pc}
   14874:	push	{r4, r5, r6, sl, fp, lr}
   14878:	add	fp, sp, #16
   1487c:	sub	sp, sp, #64	; 0x40
   14880:	ldr	ip, [fp, #8]
   14884:	str	r0, [fp, #-20]	; 0xffffffec
   14888:	str	r1, [fp, #-24]	; 0xffffffe8
   1488c:	str	r2, [fp, #-28]	; 0xffffffe4
   14890:	str	r3, [fp, #-32]	; 0xffffffe0
   14894:	ldr	r0, [fp, #8]
   14898:	movw	r1, #0
   1489c:	cmp	r0, r1
   148a0:	str	ip, [sp, #32]
   148a4:	beq	148b4 <__assert_fail@plt+0x37dc>
   148a8:	ldr	r0, [fp, #8]
   148ac:	str	r0, [sp, #28]
   148b0:	b	148c4 <__assert_fail@plt+0x37ec>
   148b4:	movw	r0, #368	; 0x170
   148b8:	movt	r0, #3
   148bc:	str	r0, [sp, #28]
   148c0:	b	148c4 <__assert_fail@plt+0x37ec>
   148c4:	ldr	r0, [sp, #28]
   148c8:	str	r0, [fp, #-36]	; 0xffffffdc
   148cc:	bl	1100c <__errno_location@plt>
   148d0:	ldr	r0, [r0]
   148d4:	str	r0, [sp, #40]	; 0x28
   148d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   148dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   148e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   148e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148e8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   148ec:	ldr	lr, [lr]
   148f0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   148f4:	ldr	ip, [ip, #4]
   148f8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   148fc:	add	r4, r4, #8
   14900:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14904:	ldr	r5, [r5, #40]	; 0x28
   14908:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1490c:	ldr	r6, [r6, #44]	; 0x2c
   14910:	str	lr, [sp]
   14914:	str	ip, [sp, #4]
   14918:	str	r4, [sp, #8]
   1491c:	str	r5, [sp, #12]
   14920:	str	r6, [sp, #16]
   14924:	bl	1494c <__assert_fail@plt+0x3874>
   14928:	str	r0, [sp, #36]	; 0x24
   1492c:	ldr	r0, [sp, #40]	; 0x28
   14930:	str	r0, [sp, #24]
   14934:	bl	1100c <__errno_location@plt>
   14938:	ldr	r1, [sp, #24]
   1493c:	str	r1, [r0]
   14940:	ldr	r0, [sp, #36]	; 0x24
   14944:	sub	sp, fp, #16
   14948:	pop	{r4, r5, r6, sl, fp, pc}
   1494c:	push	{r4, r5, r6, sl, fp, lr}
   14950:	add	fp, sp, #16
   14954:	sub	sp, sp, #168	; 0xa8
   14958:	ldr	ip, [fp, #24]
   1495c:	ldr	lr, [fp, #20]
   14960:	ldr	r4, [fp, #16]
   14964:	ldr	r5, [fp, #12]
   14968:	ldr	r6, [fp, #8]
   1496c:	str	r0, [fp, #-24]	; 0xffffffe8
   14970:	str	r1, [fp, #-28]	; 0xffffffe4
   14974:	str	r2, [fp, #-32]	; 0xffffffe0
   14978:	str	r3, [fp, #-36]	; 0xffffffdc
   1497c:	movw	r0, #0
   14980:	str	r0, [fp, #-44]	; 0xffffffd4
   14984:	str	r0, [fp, #-48]	; 0xffffffd0
   14988:	str	r0, [fp, #-52]	; 0xffffffcc
   1498c:	str	r0, [fp, #-56]	; 0xffffffc8
   14990:	movw	r0, #0
   14994:	strb	r0, [fp, #-57]	; 0xffffffc7
   14998:	str	r6, [sp, #80]	; 0x50
   1499c:	str	lr, [sp, #76]	; 0x4c
   149a0:	str	r4, [sp, #72]	; 0x48
   149a4:	str	r5, [sp, #68]	; 0x44
   149a8:	str	ip, [sp, #64]	; 0x40
   149ac:	bl	10f34 <__ctype_get_mb_cur_max@plt>
   149b0:	cmp	r0, #1
   149b4:	movw	r0, #0
   149b8:	moveq	r0, #1
   149bc:	and	r0, r0, #1
   149c0:	strb	r0, [fp, #-58]	; 0xffffffc6
   149c4:	ldr	r0, [fp, #12]
   149c8:	and	r0, r0, #2
   149cc:	cmp	r0, #0
   149d0:	movw	r0, #0
   149d4:	movne	r0, #1
   149d8:	and	r0, r0, #1
   149dc:	strb	r0, [fp, #-59]	; 0xffffffc5
   149e0:	movw	r0, #0
   149e4:	strb	r0, [fp, #-60]	; 0xffffffc4
   149e8:	strb	r0, [fp, #-61]	; 0xffffffc3
   149ec:	movw	r0, #1
   149f0:	strb	r0, [fp, #-62]	; 0xffffffc2
   149f4:	ldr	r0, [fp, #8]
   149f8:	cmp	r0, #10
   149fc:	str	r0, [sp, #60]	; 0x3c
   14a00:	bhi	14c28 <__assert_fail@plt+0x3b50>
   14a04:	add	r0, pc, #8
   14a08:	ldr	r1, [sp, #60]	; 0x3c
   14a0c:	ldr	r0, [r0, r1, lsl #2]
   14a10:	mov	pc, r0
   14a14:	andeq	r4, r1, ip, lsl ip
   14a18:	muleq	r1, r8, fp
   14a1c:			; <UNDEFINED> instruction: 0x00014bb8
   14a20:	muleq	r1, r0, fp
   14a24:	andeq	r4, r1, r0, lsr #23
   14a28:	andeq	r4, r1, r0, asr sl
   14a2c:	andeq	r4, r1, r0, asr #20
   14a30:			; <UNDEFINED> instruction: 0x00014ab4
   14a34:	andeq	r4, r1, r8, asr #21
   14a38:	andeq	r4, r1, r8, asr #21
   14a3c:	andeq	r4, r1, r8, asr #21
   14a40:	movw	r0, #5
   14a44:	str	r0, [fp, #8]
   14a48:	movw	r0, #1
   14a4c:	strb	r0, [fp, #-59]	; 0xffffffc5
   14a50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a54:	tst	r0, #1
   14a58:	bne	14a94 <__assert_fail@plt+0x39bc>
   14a5c:	b	14a60 <__assert_fail@plt+0x3988>
   14a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a68:	cmp	r0, r1
   14a6c:	bcs	14a84 <__assert_fail@plt+0x39ac>
   14a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a78:	add	r0, r0, r1
   14a7c:	movw	r1, #34	; 0x22
   14a80:	strb	r1, [r0]
   14a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a88:	add	r0, r0, #1
   14a8c:	str	r0, [fp, #-44]	; 0xffffffd4
   14a90:	b	14a94 <__assert_fail@plt+0x39bc>
   14a94:	movw	r0, #1
   14a98:	strb	r0, [fp, #-57]	; 0xffffffc7
   14a9c:	movw	r0, #64091	; 0xfa5b
   14aa0:	movt	r0, #1
   14aa4:	str	r0, [fp, #-52]	; 0xffffffcc
   14aa8:	movw	r0, #1
   14aac:	str	r0, [fp, #-56]	; 0xffffffc8
   14ab0:	b	14c2c <__assert_fail@plt+0x3b54>
   14ab4:	movw	r0, #1
   14ab8:	strb	r0, [fp, #-57]	; 0xffffffc7
   14abc:	movw	r0, #0
   14ac0:	strb	r0, [fp, #-59]	; 0xffffffc5
   14ac4:	b	14c2c <__assert_fail@plt+0x3b54>
   14ac8:	ldr	r0, [fp, #8]
   14acc:	cmp	r0, #10
   14ad0:	beq	14afc <__assert_fail@plt+0x3a24>
   14ad4:	ldr	r1, [fp, #8]
   14ad8:	movw	r0, #64093	; 0xfa5d
   14adc:	movt	r0, #1
   14ae0:	bl	16b3c <__assert_fail@plt+0x5a64>
   14ae4:	str	r0, [fp, #20]
   14ae8:	ldr	r1, [fp, #8]
   14aec:	movw	r0, #64095	; 0xfa5f
   14af0:	movt	r0, #1
   14af4:	bl	16b3c <__assert_fail@plt+0x5a64>
   14af8:	str	r0, [fp, #24]
   14afc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b00:	tst	r0, #1
   14b04:	bne	14b70 <__assert_fail@plt+0x3a98>
   14b08:	ldr	r0, [fp, #20]
   14b0c:	str	r0, [fp, #-52]	; 0xffffffcc
   14b10:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b14:	ldrsb	r0, [r0]
   14b18:	cmp	r0, #0
   14b1c:	beq	14b6c <__assert_fail@plt+0x3a94>
   14b20:	b	14b24 <__assert_fail@plt+0x3a4c>
   14b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b2c:	cmp	r0, r1
   14b30:	bcs	14b4c <__assert_fail@plt+0x3a74>
   14b34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b38:	ldrb	r0, [r0]
   14b3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14b40:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14b44:	add	r1, r1, r2
   14b48:	strb	r0, [r1]
   14b4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b50:	add	r0, r0, #1
   14b54:	str	r0, [fp, #-44]	; 0xffffffd4
   14b58:	b	14b5c <__assert_fail@plt+0x3a84>
   14b5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b60:	add	r0, r0, #1
   14b64:	str	r0, [fp, #-52]	; 0xffffffcc
   14b68:	b	14b10 <__assert_fail@plt+0x3a38>
   14b6c:	b	14b70 <__assert_fail@plt+0x3a98>
   14b70:	movw	r0, #1
   14b74:	strb	r0, [fp, #-57]	; 0xffffffc7
   14b78:	ldr	r0, [fp, #24]
   14b7c:	str	r0, [fp, #-52]	; 0xffffffcc
   14b80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b84:	bl	10fdc <strlen@plt>
   14b88:	str	r0, [fp, #-56]	; 0xffffffc8
   14b8c:	b	14c2c <__assert_fail@plt+0x3b54>
   14b90:	movw	r0, #1
   14b94:	strb	r0, [fp, #-57]	; 0xffffffc7
   14b98:	movw	r0, #1
   14b9c:	strb	r0, [fp, #-59]	; 0xffffffc5
   14ba0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ba4:	tst	r0, #1
   14ba8:	bne	14bb4 <__assert_fail@plt+0x3adc>
   14bac:	movw	r0, #1
   14bb0:	strb	r0, [fp, #-57]	; 0xffffffc7
   14bb4:	b	14bb8 <__assert_fail@plt+0x3ae0>
   14bb8:	movw	r0, #2
   14bbc:	str	r0, [fp, #8]
   14bc0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14bc4:	tst	r0, #1
   14bc8:	bne	14c04 <__assert_fail@plt+0x3b2c>
   14bcc:	b	14bd0 <__assert_fail@plt+0x3af8>
   14bd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14bd8:	cmp	r0, r1
   14bdc:	bcs	14bf4 <__assert_fail@plt+0x3b1c>
   14be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14be4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14be8:	add	r0, r0, r1
   14bec:	movw	r1, #39	; 0x27
   14bf0:	strb	r1, [r0]
   14bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bf8:	add	r0, r0, #1
   14bfc:	str	r0, [fp, #-44]	; 0xffffffd4
   14c00:	b	14c04 <__assert_fail@plt+0x3b2c>
   14c04:	movw	r0, #64095	; 0xfa5f
   14c08:	movt	r0, #1
   14c0c:	str	r0, [fp, #-52]	; 0xffffffcc
   14c10:	movw	r0, #1
   14c14:	str	r0, [fp, #-56]	; 0xffffffc8
   14c18:	b	14c2c <__assert_fail@plt+0x3b54>
   14c1c:	movw	r0, #0
   14c20:	strb	r0, [fp, #-59]	; 0xffffffc5
   14c24:	b	14c2c <__assert_fail@plt+0x3b54>
   14c28:	bl	110c0 <abort@plt>
   14c2c:	movw	r0, #0
   14c30:	str	r0, [fp, #-40]	; 0xffffffd8
   14c34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c38:	cmn	r0, #1
   14c3c:	bne	14c68 <__assert_fail@plt+0x3b90>
   14c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c48:	add	r0, r0, r1
   14c4c:	ldrb	r0, [r0]
   14c50:	cmp	r0, #0
   14c54:	movw	r0, #0
   14c58:	moveq	r0, #1
   14c5c:	and	r0, r0, #1
   14c60:	str	r0, [sp, #56]	; 0x38
   14c64:	b	14c84 <__assert_fail@plt+0x3bac>
   14c68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c70:	cmp	r0, r1
   14c74:	movw	r0, #0
   14c78:	moveq	r0, #1
   14c7c:	and	r0, r0, #1
   14c80:	str	r0, [sp, #56]	; 0x38
   14c84:	ldr	r0, [sp, #56]	; 0x38
   14c88:	cmp	r0, #0
   14c8c:	movw	r0, #0
   14c90:	movne	r0, #1
   14c94:	mvn	r1, #0
   14c98:	eor	r0, r0, r1
   14c9c:	tst	r0, #1
   14ca0:	beq	15e90 <__assert_fail@plt+0x4db8>
   14ca4:	movw	r0, #0
   14ca8:	strb	r0, [fp, #-65]	; 0xffffffbf
   14cac:	strb	r0, [fp, #-66]	; 0xffffffbe
   14cb0:	strb	r0, [fp, #-67]	; 0xffffffbd
   14cb4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14cb8:	tst	r0, #1
   14cbc:	beq	14d68 <__assert_fail@plt+0x3c90>
   14cc0:	ldr	r0, [fp, #8]
   14cc4:	cmp	r0, #2
   14cc8:	beq	14d68 <__assert_fail@plt+0x3c90>
   14ccc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14cd0:	cmp	r0, #0
   14cd4:	beq	14d68 <__assert_fail@plt+0x3c90>
   14cd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14cdc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14ce0:	add	r0, r0, r1
   14ce4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ce8:	cmn	r1, #1
   14cec:	str	r0, [sp, #52]	; 0x34
   14cf0:	bne	14d18 <__assert_fail@plt+0x3c40>
   14cf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14cf8:	movw	r1, #1
   14cfc:	cmp	r1, r0
   14d00:	bcs	14d18 <__assert_fail@plt+0x3c40>
   14d04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d08:	bl	10fdc <strlen@plt>
   14d0c:	str	r0, [fp, #-36]	; 0xffffffdc
   14d10:	str	r0, [sp, #48]	; 0x30
   14d14:	b	14d20 <__assert_fail@plt+0x3c48>
   14d18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d1c:	str	r0, [sp, #48]	; 0x30
   14d20:	ldr	r0, [sp, #48]	; 0x30
   14d24:	ldr	r1, [sp, #52]	; 0x34
   14d28:	cmp	r1, r0
   14d2c:	bhi	14d68 <__assert_fail@plt+0x3c90>
   14d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d38:	add	r0, r0, r1
   14d3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14d40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14d44:	bl	10ee0 <memcmp@plt>
   14d48:	cmp	r0, #0
   14d4c:	bne	14d68 <__assert_fail@plt+0x3c90>
   14d50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d54:	tst	r0, #1
   14d58:	beq	14d60 <__assert_fail@plt+0x3c88>
   14d5c:	b	16010 <__assert_fail@plt+0x4f38>
   14d60:	movw	r0, #1
   14d64:	strb	r0, [fp, #-65]	; 0xffffffbf
   14d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d70:	ldrb	r0, [r0, r1]
   14d74:	strb	r0, [fp, #-63]	; 0xffffffc1
   14d78:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14d7c:	mov	r1, r0
   14d80:	cmp	r0, #126	; 0x7e
   14d84:	str	r1, [sp, #44]	; 0x2c
   14d88:	bhi	155f8 <__assert_fail@plt+0x4520>
   14d8c:	add	r0, pc, #8
   14d90:	ldr	r1, [sp, #44]	; 0x2c
   14d94:	ldr	r0, [r0, r1, lsl #2]
   14d98:	mov	pc, r0
   14d9c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14da0:	strdeq	r5, [r1], -r8
   14da4:	strdeq	r5, [r1], -r8
   14da8:	strdeq	r5, [r1], -r8
   14dac:	strdeq	r5, [r1], -r8
   14db0:	strdeq	r5, [r1], -r8
   14db4:	strdeq	r5, [r1], -r8
   14db8:	andeq	r5, r1, r0, lsr #7
   14dbc:	andeq	r5, r1, ip, lsr #7
   14dc0:	ldrdeq	r5, [r1], -ip
   14dc4:	andeq	r5, r1, r4, asr #7
   14dc8:	andeq	r5, r1, r8, ror #7
   14dcc:			; <UNDEFINED> instruction: 0x000153b8
   14dd0:	ldrdeq	r5, [r1], -r0
   14dd4:	strdeq	r5, [r1], -r8
   14dd8:	strdeq	r5, [r1], -r8
   14ddc:	strdeq	r5, [r1], -r8
   14de0:	strdeq	r5, [r1], -r8
   14de4:	strdeq	r5, [r1], -r8
   14de8:	strdeq	r5, [r1], -r8
   14dec:	strdeq	r5, [r1], -r8
   14df0:	strdeq	r5, [r1], -r8
   14df4:	strdeq	r5, [r1], -r8
   14df8:	strdeq	r5, [r1], -r8
   14dfc:	strdeq	r5, [r1], -r8
   14e00:	strdeq	r5, [r1], -r8
   14e04:	strdeq	r5, [r1], -r8
   14e08:	strdeq	r5, [r1], -r8
   14e0c:	strdeq	r5, [r1], -r8
   14e10:	strdeq	r5, [r1], -r8
   14e14:	strdeq	r5, [r1], -r8
   14e18:	strdeq	r5, [r1], -r8
   14e1c:	andeq	r5, r1, ip, asr #9
   14e20:	ldrdeq	r5, [r1], -r4
   14e24:	ldrdeq	r5, [r1], -r4
   14e28:			; <UNDEFINED> instruction: 0x000154b8
   14e2c:	ldrdeq	r5, [r1], -r4
   14e30:	andeq	r5, r1, ip, ror #11
   14e34:	ldrdeq	r5, [r1], -r4
   14e38:	strdeq	r5, [r1], -r4
   14e3c:	ldrdeq	r5, [r1], -r4
   14e40:	ldrdeq	r5, [r1], -r4
   14e44:	ldrdeq	r5, [r1], -r4
   14e48:	andeq	r5, r1, ip, ror #11
   14e4c:	andeq	r5, r1, ip, ror #11
   14e50:	andeq	r5, r1, ip, ror #11
   14e54:	andeq	r5, r1, ip, ror #11
   14e58:	andeq	r5, r1, ip, ror #11
   14e5c:	andeq	r5, r1, ip, ror #11
   14e60:	andeq	r5, r1, ip, ror #11
   14e64:	andeq	r5, r1, ip, ror #11
   14e68:	andeq	r5, r1, ip, ror #11
   14e6c:	andeq	r5, r1, ip, ror #11
   14e70:	andeq	r5, r1, ip, ror #11
   14e74:	andeq	r5, r1, ip, ror #11
   14e78:	andeq	r5, r1, ip, ror #11
   14e7c:	andeq	r5, r1, ip, ror #11
   14e80:	andeq	r5, r1, ip, ror #11
   14e84:	andeq	r5, r1, ip, ror #11
   14e88:	ldrdeq	r5, [r1], -r4
   14e8c:	ldrdeq	r5, [r1], -r4
   14e90:	ldrdeq	r5, [r1], -r4
   14e94:	ldrdeq	r5, [r1], -r4
   14e98:	andeq	r5, r1, r4, lsr #3
   14e9c:	strdeq	r5, [r1], -r8
   14ea0:	andeq	r5, r1, ip, ror #11
   14ea4:	andeq	r5, r1, ip, ror #11
   14ea8:	andeq	r5, r1, ip, ror #11
   14eac:	andeq	r5, r1, ip, ror #11
   14eb0:	andeq	r5, r1, ip, ror #11
   14eb4:	andeq	r5, r1, ip, ror #11
   14eb8:	andeq	r5, r1, ip, ror #11
   14ebc:	andeq	r5, r1, ip, ror #11
   14ec0:	andeq	r5, r1, ip, ror #11
   14ec4:	andeq	r5, r1, ip, ror #11
   14ec8:	andeq	r5, r1, ip, ror #11
   14ecc:	andeq	r5, r1, ip, ror #11
   14ed0:	andeq	r5, r1, ip, ror #11
   14ed4:	andeq	r5, r1, ip, ror #11
   14ed8:	andeq	r5, r1, ip, ror #11
   14edc:	andeq	r5, r1, ip, ror #11
   14ee0:	andeq	r5, r1, ip, ror #11
   14ee4:	andeq	r5, r1, ip, ror #11
   14ee8:	andeq	r5, r1, ip, ror #11
   14eec:	andeq	r5, r1, ip, ror #11
   14ef0:	andeq	r5, r1, ip, ror #11
   14ef4:	andeq	r5, r1, ip, ror #11
   14ef8:	andeq	r5, r1, ip, ror #11
   14efc:	andeq	r5, r1, ip, ror #11
   14f00:	andeq	r5, r1, ip, ror #11
   14f04:	andeq	r5, r1, ip, ror #11
   14f08:	ldrdeq	r5, [r1], -r4
   14f0c:	strdeq	r5, [r1], -r4
   14f10:	andeq	r5, r1, ip, ror #11
   14f14:	ldrdeq	r5, [r1], -r4
   14f18:	andeq	r5, r1, ip, ror #11
   14f1c:	ldrdeq	r5, [r1], -r4
   14f20:	andeq	r5, r1, ip, ror #11
   14f24:	andeq	r5, r1, ip, ror #11
   14f28:	andeq	r5, r1, ip, ror #11
   14f2c:	andeq	r5, r1, ip, ror #11
   14f30:	andeq	r5, r1, ip, ror #11
   14f34:	andeq	r5, r1, ip, ror #11
   14f38:	andeq	r5, r1, ip, ror #11
   14f3c:	andeq	r5, r1, ip, ror #11
   14f40:	andeq	r5, r1, ip, ror #11
   14f44:	andeq	r5, r1, ip, ror #11
   14f48:	andeq	r5, r1, ip, ror #11
   14f4c:	andeq	r5, r1, ip, ror #11
   14f50:	andeq	r5, r1, ip, ror #11
   14f54:	andeq	r5, r1, ip, ror #11
   14f58:	andeq	r5, r1, ip, ror #11
   14f5c:	andeq	r5, r1, ip, ror #11
   14f60:	andeq	r5, r1, ip, ror #11
   14f64:	andeq	r5, r1, ip, ror #11
   14f68:	andeq	r5, r1, ip, ror #11
   14f6c:	andeq	r5, r1, ip, ror #11
   14f70:	andeq	r5, r1, ip, ror #11
   14f74:	andeq	r5, r1, ip, ror #11
   14f78:	andeq	r5, r1, ip, ror #11
   14f7c:	andeq	r5, r1, ip, ror #11
   14f80:	andeq	r5, r1, ip, ror #11
   14f84:	andeq	r5, r1, ip, ror #11
   14f88:	andeq	r5, r1, r4, lsl #9
   14f8c:	ldrdeq	r5, [r1], -r4
   14f90:	andeq	r5, r1, r4, lsl #9
   14f94:			; <UNDEFINED> instruction: 0x000154b8
   14f98:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14f9c:	tst	r0, #1
   14fa0:	beq	15188 <__assert_fail@plt+0x40b0>
   14fa4:	b	14fa8 <__assert_fail@plt+0x3ed0>
   14fa8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14fac:	tst	r0, #1
   14fb0:	beq	14fb8 <__assert_fail@plt+0x3ee0>
   14fb4:	b	16010 <__assert_fail@plt+0x4f38>
   14fb8:	movw	r0, #1
   14fbc:	strb	r0, [fp, #-66]	; 0xffffffbe
   14fc0:	ldr	r0, [fp, #8]
   14fc4:	cmp	r0, #2
   14fc8:	bne	1507c <__assert_fail@plt+0x3fa4>
   14fcc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14fd0:	tst	r0, #1
   14fd4:	bne	1507c <__assert_fail@plt+0x3fa4>
   14fd8:	b	14fdc <__assert_fail@plt+0x3f04>
   14fdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fe0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14fe4:	cmp	r0, r1
   14fe8:	bcs	15000 <__assert_fail@plt+0x3f28>
   14fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ff0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ff4:	add	r0, r0, r1
   14ff8:	movw	r1, #39	; 0x27
   14ffc:	strb	r1, [r0]
   15000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15004:	add	r0, r0, #1
   15008:	str	r0, [fp, #-44]	; 0xffffffd4
   1500c:	b	15010 <__assert_fail@plt+0x3f38>
   15010:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15014:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15018:	cmp	r0, r1
   1501c:	bcs	15034 <__assert_fail@plt+0x3f5c>
   15020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15024:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15028:	add	r0, r0, r1
   1502c:	movw	r1, #36	; 0x24
   15030:	strb	r1, [r0]
   15034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15038:	add	r0, r0, #1
   1503c:	str	r0, [fp, #-44]	; 0xffffffd4
   15040:	b	15044 <__assert_fail@plt+0x3f6c>
   15044:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15048:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1504c:	cmp	r0, r1
   15050:	bcs	15068 <__assert_fail@plt+0x3f90>
   15054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15058:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1505c:	add	r0, r0, r1
   15060:	movw	r1, #39	; 0x27
   15064:	strb	r1, [r0]
   15068:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1506c:	add	r0, r0, #1
   15070:	str	r0, [fp, #-44]	; 0xffffffd4
   15074:	movw	r0, #1
   15078:	strb	r0, [fp, #-60]	; 0xffffffc4
   1507c:	b	15080 <__assert_fail@plt+0x3fa8>
   15080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15084:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15088:	cmp	r0, r1
   1508c:	bcs	150a4 <__assert_fail@plt+0x3fcc>
   15090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15094:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15098:	add	r0, r0, r1
   1509c:	movw	r1, #92	; 0x5c
   150a0:	strb	r1, [r0]
   150a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150a8:	add	r0, r0, #1
   150ac:	str	r0, [fp, #-44]	; 0xffffffd4
   150b0:	b	150b4 <__assert_fail@plt+0x3fdc>
   150b4:	ldr	r0, [fp, #8]
   150b8:	cmp	r0, #2
   150bc:	beq	1517c <__assert_fail@plt+0x40a4>
   150c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150c4:	add	r0, r0, #1
   150c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   150cc:	cmp	r0, r1
   150d0:	bcs	1517c <__assert_fail@plt+0x40a4>
   150d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   150dc:	add	r1, r1, #1
   150e0:	add	r0, r0, r1
   150e4:	ldrb	r0, [r0]
   150e8:	movw	r1, #48	; 0x30
   150ec:	cmp	r1, r0
   150f0:	bgt	1517c <__assert_fail@plt+0x40a4>
   150f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   150fc:	add	r1, r1, #1
   15100:	add	r0, r0, r1
   15104:	ldrb	r0, [r0]
   15108:	cmp	r0, #57	; 0x39
   1510c:	bgt	1517c <__assert_fail@plt+0x40a4>
   15110:	b	15114 <__assert_fail@plt+0x403c>
   15114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1511c:	cmp	r0, r1
   15120:	bcs	15138 <__assert_fail@plt+0x4060>
   15124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1512c:	add	r0, r0, r1
   15130:	movw	r1, #48	; 0x30
   15134:	strb	r1, [r0]
   15138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1513c:	add	r0, r0, #1
   15140:	str	r0, [fp, #-44]	; 0xffffffd4
   15144:	b	15148 <__assert_fail@plt+0x4070>
   15148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1514c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15150:	cmp	r0, r1
   15154:	bcs	1516c <__assert_fail@plt+0x4094>
   15158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1515c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15160:	add	r0, r0, r1
   15164:	movw	r1, #48	; 0x30
   15168:	strb	r1, [r0]
   1516c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15170:	add	r0, r0, #1
   15174:	str	r0, [fp, #-44]	; 0xffffffd4
   15178:	b	1517c <__assert_fail@plt+0x40a4>
   1517c:	movw	r0, #48	; 0x30
   15180:	strb	r0, [fp, #-63]	; 0xffffffc1
   15184:	b	151a0 <__assert_fail@plt+0x40c8>
   15188:	ldr	r0, [fp, #12]
   1518c:	and	r0, r0, #1
   15190:	cmp	r0, #0
   15194:	beq	1519c <__assert_fail@plt+0x40c4>
   15198:	b	15e80 <__assert_fail@plt+0x4da8>
   1519c:	b	151a0 <__assert_fail@plt+0x40c8>
   151a0:	b	15c1c <__assert_fail@plt+0x4b44>
   151a4:	ldr	r0, [fp, #8]
   151a8:	cmp	r0, #2
   151ac:	str	r0, [sp, #40]	; 0x28
   151b0:	beq	151c8 <__assert_fail@plt+0x40f0>
   151b4:	b	151b8 <__assert_fail@plt+0x40e0>
   151b8:	ldr	r0, [sp, #40]	; 0x28
   151bc:	cmp	r0, #5
   151c0:	beq	151dc <__assert_fail@plt+0x4104>
   151c4:	b	15398 <__assert_fail@plt+0x42c0>
   151c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   151cc:	tst	r0, #1
   151d0:	beq	151d8 <__assert_fail@plt+0x4100>
   151d4:	b	16010 <__assert_fail@plt+0x4f38>
   151d8:	b	1539c <__assert_fail@plt+0x42c4>
   151dc:	ldr	r0, [fp, #12]
   151e0:	and	r0, r0, #4
   151e4:	cmp	r0, #0
   151e8:	beq	15394 <__assert_fail@plt+0x42bc>
   151ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151f0:	add	r0, r0, #2
   151f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   151f8:	cmp	r0, r1
   151fc:	bcs	15394 <__assert_fail@plt+0x42bc>
   15200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15204:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15208:	add	r1, r1, #1
   1520c:	add	r0, r0, r1
   15210:	ldrb	r0, [r0]
   15214:	cmp	r0, #63	; 0x3f
   15218:	bne	15394 <__assert_fail@plt+0x42bc>
   1521c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15220:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15224:	add	r0, r0, r1
   15228:	ldrb	r0, [r0, #2]
   1522c:	mov	r1, r0
   15230:	cmp	r0, #33	; 0x21
   15234:	str	r1, [sp, #36]	; 0x24
   15238:	beq	15288 <__assert_fail@plt+0x41b0>
   1523c:	b	15240 <__assert_fail@plt+0x4168>
   15240:	ldr	r0, [sp, #36]	; 0x24
   15244:	sub	r1, r0, #39	; 0x27
   15248:	cmp	r1, #3
   1524c:	bcc	15288 <__assert_fail@plt+0x41b0>
   15250:	b	15254 <__assert_fail@plt+0x417c>
   15254:	ldr	r0, [sp, #36]	; 0x24
   15258:	cmp	r0, #45	; 0x2d
   1525c:	beq	15288 <__assert_fail@plt+0x41b0>
   15260:	b	15264 <__assert_fail@plt+0x418c>
   15264:	ldr	r0, [sp, #36]	; 0x24
   15268:	cmp	r0, #47	; 0x2f
   1526c:	beq	15288 <__assert_fail@plt+0x41b0>
   15270:	b	15274 <__assert_fail@plt+0x419c>
   15274:	ldr	r0, [sp, #36]	; 0x24
   15278:	sub	r1, r0, #60	; 0x3c
   1527c:	cmp	r1, #2
   15280:	bhi	1538c <__assert_fail@plt+0x42b4>
   15284:	b	15288 <__assert_fail@plt+0x41b0>
   15288:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1528c:	tst	r0, #1
   15290:	beq	15298 <__assert_fail@plt+0x41c0>
   15294:	b	16010 <__assert_fail@plt+0x4f38>
   15298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1529c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152a0:	add	r1, r1, #2
   152a4:	add	r0, r0, r1
   152a8:	ldrb	r0, [r0]
   152ac:	strb	r0, [fp, #-63]	; 0xffffffc1
   152b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   152b4:	add	r0, r0, #2
   152b8:	str	r0, [fp, #-40]	; 0xffffffd8
   152bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152c4:	cmp	r0, r1
   152c8:	bcs	152e0 <__assert_fail@plt+0x4208>
   152cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152d4:	add	r0, r0, r1
   152d8:	movw	r1, #63	; 0x3f
   152dc:	strb	r1, [r0]
   152e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152e4:	add	r0, r0, #1
   152e8:	str	r0, [fp, #-44]	; 0xffffffd4
   152ec:	b	152f0 <__assert_fail@plt+0x4218>
   152f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152f8:	cmp	r0, r1
   152fc:	bcs	15314 <__assert_fail@plt+0x423c>
   15300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15304:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15308:	add	r0, r0, r1
   1530c:	movw	r1, #34	; 0x22
   15310:	strb	r1, [r0]
   15314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15318:	add	r0, r0, #1
   1531c:	str	r0, [fp, #-44]	; 0xffffffd4
   15320:	b	15324 <__assert_fail@plt+0x424c>
   15324:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15328:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1532c:	cmp	r0, r1
   15330:	bcs	15348 <__assert_fail@plt+0x4270>
   15334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15338:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1533c:	add	r0, r0, r1
   15340:	movw	r1, #34	; 0x22
   15344:	strb	r1, [r0]
   15348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1534c:	add	r0, r0, #1
   15350:	str	r0, [fp, #-44]	; 0xffffffd4
   15354:	b	15358 <__assert_fail@plt+0x4280>
   15358:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1535c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15360:	cmp	r0, r1
   15364:	bcs	1537c <__assert_fail@plt+0x42a4>
   15368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1536c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15370:	add	r0, r0, r1
   15374:	movw	r1, #63	; 0x3f
   15378:	strb	r1, [r0]
   1537c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15380:	add	r0, r0, #1
   15384:	str	r0, [fp, #-44]	; 0xffffffd4
   15388:	b	15390 <__assert_fail@plt+0x42b8>
   1538c:	b	15390 <__assert_fail@plt+0x42b8>
   15390:	b	15394 <__assert_fail@plt+0x42bc>
   15394:	b	1539c <__assert_fail@plt+0x42c4>
   15398:	b	1539c <__assert_fail@plt+0x42c4>
   1539c:	b	15c1c <__assert_fail@plt+0x4b44>
   153a0:	movw	r0, #97	; 0x61
   153a4:	strb	r0, [fp, #-64]	; 0xffffffc0
   153a8:	b	15468 <__assert_fail@plt+0x4390>
   153ac:	movw	r0, #98	; 0x62
   153b0:	strb	r0, [fp, #-64]	; 0xffffffc0
   153b4:	b	15468 <__assert_fail@plt+0x4390>
   153b8:	movw	r0, #102	; 0x66
   153bc:	strb	r0, [fp, #-64]	; 0xffffffc0
   153c0:	b	15468 <__assert_fail@plt+0x4390>
   153c4:	movw	r0, #110	; 0x6e
   153c8:	strb	r0, [fp, #-64]	; 0xffffffc0
   153cc:	b	15448 <__assert_fail@plt+0x4370>
   153d0:	movw	r0, #114	; 0x72
   153d4:	strb	r0, [fp, #-64]	; 0xffffffc0
   153d8:	b	15448 <__assert_fail@plt+0x4370>
   153dc:	movw	r0, #116	; 0x74
   153e0:	strb	r0, [fp, #-64]	; 0xffffffc0
   153e4:	b	15448 <__assert_fail@plt+0x4370>
   153e8:	movw	r0, #118	; 0x76
   153ec:	strb	r0, [fp, #-64]	; 0xffffffc0
   153f0:	b	15468 <__assert_fail@plt+0x4390>
   153f4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   153f8:	strb	r0, [fp, #-64]	; 0xffffffc0
   153fc:	ldr	r0, [fp, #8]
   15400:	cmp	r0, #2
   15404:	bne	1541c <__assert_fail@plt+0x4344>
   15408:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1540c:	tst	r0, #1
   15410:	beq	15418 <__assert_fail@plt+0x4340>
   15414:	b	16010 <__assert_fail@plt+0x4f38>
   15418:	b	15da4 <__assert_fail@plt+0x4ccc>
   1541c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15420:	tst	r0, #1
   15424:	beq	15444 <__assert_fail@plt+0x436c>
   15428:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1542c:	tst	r0, #1
   15430:	beq	15444 <__assert_fail@plt+0x436c>
   15434:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15438:	cmp	r0, #0
   1543c:	beq	15444 <__assert_fail@plt+0x436c>
   15440:	b	15da4 <__assert_fail@plt+0x4ccc>
   15444:	b	15448 <__assert_fail@plt+0x4370>
   15448:	ldr	r0, [fp, #8]
   1544c:	cmp	r0, #2
   15450:	bne	15464 <__assert_fail@plt+0x438c>
   15454:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15458:	tst	r0, #1
   1545c:	beq	15464 <__assert_fail@plt+0x438c>
   15460:	b	16010 <__assert_fail@plt+0x4f38>
   15464:	b	15468 <__assert_fail@plt+0x4390>
   15468:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1546c:	tst	r0, #1
   15470:	beq	15480 <__assert_fail@plt+0x43a8>
   15474:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15478:	strb	r0, [fp, #-63]	; 0xffffffc1
   1547c:	b	15c90 <__assert_fail@plt+0x4bb8>
   15480:	b	15c1c <__assert_fail@plt+0x4b44>
   15484:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15488:	cmn	r0, #1
   1548c:	bne	154a4 <__assert_fail@plt+0x43cc>
   15490:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15494:	ldrb	r0, [r0, #1]
   15498:	cmp	r0, #0
   1549c:	beq	154b4 <__assert_fail@plt+0x43dc>
   154a0:	b	154b0 <__assert_fail@plt+0x43d8>
   154a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   154a8:	cmp	r0, #1
   154ac:	beq	154b4 <__assert_fail@plt+0x43dc>
   154b0:	b	15c1c <__assert_fail@plt+0x4b44>
   154b4:	b	154b8 <__assert_fail@plt+0x43e0>
   154b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154bc:	cmp	r0, #0
   154c0:	beq	154c8 <__assert_fail@plt+0x43f0>
   154c4:	b	15c1c <__assert_fail@plt+0x4b44>
   154c8:	b	154cc <__assert_fail@plt+0x43f4>
   154cc:	movw	r0, #1
   154d0:	strb	r0, [fp, #-67]	; 0xffffffbd
   154d4:	ldr	r0, [fp, #8]
   154d8:	cmp	r0, #2
   154dc:	bne	154f0 <__assert_fail@plt+0x4418>
   154e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   154e4:	tst	r0, #1
   154e8:	beq	154f0 <__assert_fail@plt+0x4418>
   154ec:	b	16010 <__assert_fail@plt+0x4f38>
   154f0:	b	15c1c <__assert_fail@plt+0x4b44>
   154f4:	movw	r0, #1
   154f8:	strb	r0, [fp, #-61]	; 0xffffffc3
   154fc:	strb	r0, [fp, #-67]	; 0xffffffbd
   15500:	ldr	r0, [fp, #8]
   15504:	cmp	r0, #2
   15508:	bne	155e8 <__assert_fail@plt+0x4510>
   1550c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15510:	tst	r0, #1
   15514:	beq	1551c <__assert_fail@plt+0x4444>
   15518:	b	16010 <__assert_fail@plt+0x4f38>
   1551c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15520:	cmp	r0, #0
   15524:	beq	15544 <__assert_fail@plt+0x446c>
   15528:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1552c:	cmp	r0, #0
   15530:	bne	15544 <__assert_fail@plt+0x446c>
   15534:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15538:	str	r0, [fp, #-48]	; 0xffffffd0
   1553c:	movw	r0, #0
   15540:	str	r0, [fp, #-28]	; 0xffffffe4
   15544:	b	15548 <__assert_fail@plt+0x4470>
   15548:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1554c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15550:	cmp	r0, r1
   15554:	bcs	1556c <__assert_fail@plt+0x4494>
   15558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1555c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15560:	add	r0, r0, r1
   15564:	movw	r1, #39	; 0x27
   15568:	strb	r1, [r0]
   1556c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15570:	add	r0, r0, #1
   15574:	str	r0, [fp, #-44]	; 0xffffffd4
   15578:	b	1557c <__assert_fail@plt+0x44a4>
   1557c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15580:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15584:	cmp	r0, r1
   15588:	bcs	155a0 <__assert_fail@plt+0x44c8>
   1558c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15590:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15594:	add	r0, r0, r1
   15598:	movw	r1, #92	; 0x5c
   1559c:	strb	r1, [r0]
   155a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155a4:	add	r0, r0, #1
   155a8:	str	r0, [fp, #-44]	; 0xffffffd4
   155ac:	b	155b0 <__assert_fail@plt+0x44d8>
   155b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155b8:	cmp	r0, r1
   155bc:	bcs	155d4 <__assert_fail@plt+0x44fc>
   155c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155c8:	add	r0, r0, r1
   155cc:	movw	r1, #39	; 0x27
   155d0:	strb	r1, [r0]
   155d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155d8:	add	r0, r0, #1
   155dc:	str	r0, [fp, #-44]	; 0xffffffd4
   155e0:	movw	r0, #0
   155e4:	strb	r0, [fp, #-60]	; 0xffffffc4
   155e8:	b	15c1c <__assert_fail@plt+0x4b44>
   155ec:	movw	r0, #1
   155f0:	strb	r0, [fp, #-67]	; 0xffffffbd
   155f4:	b	15c1c <__assert_fail@plt+0x4b44>
   155f8:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   155fc:	tst	r0, #1
   15600:	beq	15644 <__assert_fail@plt+0x456c>
   15604:	mov	r0, #1
   15608:	str	r0, [fp, #-72]	; 0xffffffb8
   1560c:	bl	10fb8 <__ctype_b_loc@plt>
   15610:	ldr	r0, [r0]
   15614:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   15618:	mov	r1, lr
   1561c:	add	r0, r0, lr, lsl #1
   15620:	ldrh	r0, [r0]
   15624:	and	r0, r0, #16384	; 0x4000
   15628:	cmp	r0, #0
   1562c:	movw	r0, #0
   15630:	movne	r0, #1
   15634:	and	r0, r0, #1
   15638:	strb	r0, [fp, #-73]	; 0xffffffb7
   1563c:	str	r1, [sp, #32]
   15640:	b	158d0 <__assert_fail@plt+0x47f8>
   15644:	sub	r0, fp, #84	; 0x54
   15648:	movw	r1, #0
   1564c:	and	r1, r1, #255	; 0xff
   15650:	movw	r2, #8
   15654:	bl	11024 <memset@plt>
   15658:	movw	r0, #0
   1565c:	str	r0, [fp, #-72]	; 0xffffffb8
   15660:	movw	r0, #1
   15664:	strb	r0, [fp, #-73]	; 0xffffffb7
   15668:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1566c:	cmn	r0, #1
   15670:	bne	15680 <__assert_fail@plt+0x45a8>
   15674:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15678:	bl	10fdc <strlen@plt>
   1567c:	str	r0, [fp, #-36]	; 0xffffffdc
   15680:	b	15684 <__assert_fail@plt+0x45ac>
   15684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15688:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1568c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15690:	add	r1, r1, r2
   15694:	add	r1, r0, r1
   15698:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1569c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   156a4:	add	r2, r2, r3
   156a8:	sub	r2, r0, r2
   156ac:	sub	r0, fp, #88	; 0x58
   156b0:	sub	r3, fp, #84	; 0x54
   156b4:	bl	1d158 <__assert_fail@plt+0xc080>
   156b8:	str	r0, [sp, #92]	; 0x5c
   156bc:	ldr	r0, [sp, #92]	; 0x5c
   156c0:	cmp	r0, #0
   156c4:	bne	156cc <__assert_fail@plt+0x45f4>
   156c8:	b	158cc <__assert_fail@plt+0x47f4>
   156cc:	ldr	r0, [sp, #92]	; 0x5c
   156d0:	cmn	r0, #1
   156d4:	bne	156e4 <__assert_fail@plt+0x460c>
   156d8:	movw	r0, #0
   156dc:	strb	r0, [fp, #-73]	; 0xffffffb7
   156e0:	b	158cc <__assert_fail@plt+0x47f4>
   156e4:	ldr	r0, [sp, #92]	; 0x5c
   156e8:	cmn	r0, #2
   156ec:	bne	15760 <__assert_fail@plt+0x4688>
   156f0:	movw	r0, #0
   156f4:	strb	r0, [fp, #-73]	; 0xffffffb7
   156f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   156fc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15700:	add	r0, r0, r1
   15704:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15708:	cmp	r0, r1
   1570c:	movw	r0, #0
   15710:	str	r0, [sp, #28]
   15714:	bcs	15740 <__assert_fail@plt+0x4668>
   15718:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1571c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15720:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15724:	add	r1, r1, r2
   15728:	add	r0, r0, r1
   1572c:	ldrb	r0, [r0]
   15730:	cmp	r0, #0
   15734:	movw	r0, #0
   15738:	movne	r0, #1
   1573c:	str	r0, [sp, #28]
   15740:	ldr	r0, [sp, #28]
   15744:	tst	r0, #1
   15748:	beq	1575c <__assert_fail@plt+0x4684>
   1574c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15750:	add	r0, r0, #1
   15754:	str	r0, [fp, #-72]	; 0xffffffb8
   15758:	b	156f8 <__assert_fail@plt+0x4620>
   1575c:	b	158cc <__assert_fail@plt+0x47f4>
   15760:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15764:	tst	r0, #1
   15768:	beq	15874 <__assert_fail@plt+0x479c>
   1576c:	ldr	r0, [fp, #8]
   15770:	cmp	r0, #2
   15774:	bne	15874 <__assert_fail@plt+0x479c>
   15778:	movw	r0, #1
   1577c:	str	r0, [sp, #88]	; 0x58
   15780:	ldr	r0, [sp, #88]	; 0x58
   15784:	ldr	r1, [sp, #92]	; 0x5c
   15788:	cmp	r0, r1
   1578c:	bcs	15870 <__assert_fail@plt+0x4798>
   15790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15794:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15798:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1579c:	add	r1, r1, r2
   157a0:	ldr	r2, [sp, #88]	; 0x58
   157a4:	add	r1, r1, r2
   157a8:	ldrb	r0, [r0, r1]
   157ac:	sub	r0, r0, #91	; 0x5b
   157b0:	cmp	r0, #33	; 0x21
   157b4:	str	r0, [sp, #24]
   157b8:	bhi	15858 <__assert_fail@plt+0x4780>
   157bc:	add	r0, pc, #8
   157c0:	ldr	r1, [sp, #24]
   157c4:	ldr	r0, [r0, r1, lsl #2]
   157c8:	mov	pc, r0
   157cc:	andeq	r5, r1, r4, asr r8
   157d0:	andeq	r5, r1, r4, asr r8
   157d4:	andeq	r5, r1, r8, asr r8
   157d8:	andeq	r5, r1, r4, asr r8
   157dc:	andeq	r5, r1, r8, asr r8
   157e0:	andeq	r5, r1, r4, asr r8
   157e4:	andeq	r5, r1, r8, asr r8
   157e8:	andeq	r5, r1, r8, asr r8
   157ec:	andeq	r5, r1, r8, asr r8
   157f0:	andeq	r5, r1, r8, asr r8
   157f4:	andeq	r5, r1, r8, asr r8
   157f8:	andeq	r5, r1, r8, asr r8
   157fc:	andeq	r5, r1, r8, asr r8
   15800:	andeq	r5, r1, r8, asr r8
   15804:	andeq	r5, r1, r8, asr r8
   15808:	andeq	r5, r1, r8, asr r8
   1580c:	andeq	r5, r1, r8, asr r8
   15810:	andeq	r5, r1, r8, asr r8
   15814:	andeq	r5, r1, r8, asr r8
   15818:	andeq	r5, r1, r8, asr r8
   1581c:	andeq	r5, r1, r8, asr r8
   15820:	andeq	r5, r1, r8, asr r8
   15824:	andeq	r5, r1, r8, asr r8
   15828:	andeq	r5, r1, r8, asr r8
   1582c:	andeq	r5, r1, r8, asr r8
   15830:	andeq	r5, r1, r8, asr r8
   15834:	andeq	r5, r1, r8, asr r8
   15838:	andeq	r5, r1, r8, asr r8
   1583c:	andeq	r5, r1, r8, asr r8
   15840:	andeq	r5, r1, r8, asr r8
   15844:	andeq	r5, r1, r8, asr r8
   15848:	andeq	r5, r1, r8, asr r8
   1584c:	andeq	r5, r1, r8, asr r8
   15850:	andeq	r5, r1, r4, asr r8
   15854:	b	16010 <__assert_fail@plt+0x4f38>
   15858:	b	1585c <__assert_fail@plt+0x4784>
   1585c:	b	15860 <__assert_fail@plt+0x4788>
   15860:	ldr	r0, [sp, #88]	; 0x58
   15864:	add	r0, r0, #1
   15868:	str	r0, [sp, #88]	; 0x58
   1586c:	b	15780 <__assert_fail@plt+0x46a8>
   15870:	b	15874 <__assert_fail@plt+0x479c>
   15874:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15878:	bl	10f10 <iswprint@plt>
   1587c:	cmp	r0, #0
   15880:	bne	1588c <__assert_fail@plt+0x47b4>
   15884:	movw	r0, #0
   15888:	strb	r0, [fp, #-73]	; 0xffffffb7
   1588c:	ldr	r0, [sp, #92]	; 0x5c
   15890:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15894:	add	r0, r1, r0
   15898:	str	r0, [fp, #-72]	; 0xffffffb8
   1589c:	b	158a0 <__assert_fail@plt+0x47c8>
   158a0:	b	158a4 <__assert_fail@plt+0x47cc>
   158a4:	b	158a8 <__assert_fail@plt+0x47d0>
   158a8:	sub	r0, fp, #84	; 0x54
   158ac:	bl	10ec8 <mbsinit@plt>
   158b0:	cmp	r0, #0
   158b4:	movw	r0, #0
   158b8:	movne	r0, #1
   158bc:	mvn	lr, #0
   158c0:	eor	r0, r0, lr
   158c4:	tst	r0, #1
   158c8:	bne	15684 <__assert_fail@plt+0x45ac>
   158cc:	b	158d0 <__assert_fail@plt+0x47f8>
   158d0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   158d4:	and	r0, r0, #1
   158d8:	strb	r0, [fp, #-67]	; 0xffffffbd
   158dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   158e0:	movw	r1, #1
   158e4:	cmp	r1, r0
   158e8:	bcc	15904 <__assert_fail@plt+0x482c>
   158ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   158f0:	tst	r0, #1
   158f4:	beq	15c18 <__assert_fail@plt+0x4b40>
   158f8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   158fc:	tst	r0, #1
   15900:	bne	15c18 <__assert_fail@plt+0x4b40>
   15904:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15908:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1590c:	add	r0, r0, r1
   15910:	str	r0, [sp, #84]	; 0x54
   15914:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15918:	tst	r0, #1
   1591c:	beq	15acc <__assert_fail@plt+0x49f4>
   15920:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15924:	tst	r0, #1
   15928:	bne	15acc <__assert_fail@plt+0x49f4>
   1592c:	b	15930 <__assert_fail@plt+0x4858>
   15930:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15934:	tst	r0, #1
   15938:	beq	15940 <__assert_fail@plt+0x4868>
   1593c:	b	16010 <__assert_fail@plt+0x4f38>
   15940:	movw	r0, #1
   15944:	strb	r0, [fp, #-66]	; 0xffffffbe
   15948:	ldr	r0, [fp, #8]
   1594c:	cmp	r0, #2
   15950:	bne	15a04 <__assert_fail@plt+0x492c>
   15954:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15958:	tst	r0, #1
   1595c:	bne	15a04 <__assert_fail@plt+0x492c>
   15960:	b	15964 <__assert_fail@plt+0x488c>
   15964:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15968:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1596c:	cmp	r0, r1
   15970:	bcs	15988 <__assert_fail@plt+0x48b0>
   15974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15978:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1597c:	add	r0, r0, r1
   15980:	movw	r1, #39	; 0x27
   15984:	strb	r1, [r0]
   15988:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1598c:	add	r0, r0, #1
   15990:	str	r0, [fp, #-44]	; 0xffffffd4
   15994:	b	15998 <__assert_fail@plt+0x48c0>
   15998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1599c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159a0:	cmp	r0, r1
   159a4:	bcs	159bc <__assert_fail@plt+0x48e4>
   159a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159b0:	add	r0, r0, r1
   159b4:	movw	r1, #36	; 0x24
   159b8:	strb	r1, [r0]
   159bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159c0:	add	r0, r0, #1
   159c4:	str	r0, [fp, #-44]	; 0xffffffd4
   159c8:	b	159cc <__assert_fail@plt+0x48f4>
   159cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159d4:	cmp	r0, r1
   159d8:	bcs	159f0 <__assert_fail@plt+0x4918>
   159dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159e4:	add	r0, r0, r1
   159e8:	movw	r1, #39	; 0x27
   159ec:	strb	r1, [r0]
   159f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159f4:	add	r0, r0, #1
   159f8:	str	r0, [fp, #-44]	; 0xffffffd4
   159fc:	movw	r0, #1
   15a00:	strb	r0, [fp, #-60]	; 0xffffffc4
   15a04:	b	15a08 <__assert_fail@plt+0x4930>
   15a08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a10:	cmp	r0, r1
   15a14:	bcs	15a2c <__assert_fail@plt+0x4954>
   15a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a20:	add	r0, r0, r1
   15a24:	movw	r1, #92	; 0x5c
   15a28:	strb	r1, [r0]
   15a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a30:	add	r0, r0, #1
   15a34:	str	r0, [fp, #-44]	; 0xffffffd4
   15a38:	b	15a3c <__assert_fail@plt+0x4964>
   15a3c:	b	15a40 <__assert_fail@plt+0x4968>
   15a40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a48:	cmp	r0, r1
   15a4c:	bcs	15a6c <__assert_fail@plt+0x4994>
   15a50:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15a54:	asr	r0, r0, #6
   15a58:	add	r0, r0, #48	; 0x30
   15a5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15a64:	add	r1, r1, r2
   15a68:	strb	r0, [r1]
   15a6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a70:	add	r0, r0, #1
   15a74:	str	r0, [fp, #-44]	; 0xffffffd4
   15a78:	b	15a7c <__assert_fail@plt+0x49a4>
   15a7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a84:	cmp	r0, r1
   15a88:	bcs	15aac <__assert_fail@plt+0x49d4>
   15a8c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15a90:	asr	r0, r0, #3
   15a94:	and	r0, r0, #7
   15a98:	add	r0, r0, #48	; 0x30
   15a9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15aa0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15aa4:	add	r1, r1, r2
   15aa8:	strb	r0, [r1]
   15aac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ab0:	add	r0, r0, #1
   15ab4:	str	r0, [fp, #-44]	; 0xffffffd4
   15ab8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15abc:	and	r0, r0, #7
   15ac0:	add	r0, r0, #48	; 0x30
   15ac4:	strb	r0, [fp, #-63]	; 0xffffffc1
   15ac8:	b	15b18 <__assert_fail@plt+0x4a40>
   15acc:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15ad0:	tst	r0, #1
   15ad4:	beq	15b14 <__assert_fail@plt+0x4a3c>
   15ad8:	b	15adc <__assert_fail@plt+0x4a04>
   15adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ae0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ae4:	cmp	r0, r1
   15ae8:	bcs	15b00 <__assert_fail@plt+0x4a28>
   15aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15af4:	add	r0, r0, r1
   15af8:	movw	r1, #92	; 0x5c
   15afc:	strb	r1, [r0]
   15b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b04:	add	r0, r0, #1
   15b08:	str	r0, [fp, #-44]	; 0xffffffd4
   15b0c:	movw	r0, #0
   15b10:	strb	r0, [fp, #-65]	; 0xffffffbf
   15b14:	b	15b18 <__assert_fail@plt+0x4a40>
   15b18:	ldr	r0, [sp, #84]	; 0x54
   15b1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15b20:	add	r1, r1, #1
   15b24:	cmp	r0, r1
   15b28:	bhi	15b30 <__assert_fail@plt+0x4a58>
   15b2c:	b	15c14 <__assert_fail@plt+0x4b3c>
   15b30:	b	15b34 <__assert_fail@plt+0x4a5c>
   15b34:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15b38:	tst	r0, #1
   15b3c:	beq	15bbc <__assert_fail@plt+0x4ae4>
   15b40:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15b44:	tst	r0, #1
   15b48:	bne	15bbc <__assert_fail@plt+0x4ae4>
   15b4c:	b	15b50 <__assert_fail@plt+0x4a78>
   15b50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b58:	cmp	r0, r1
   15b5c:	bcs	15b74 <__assert_fail@plt+0x4a9c>
   15b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b68:	add	r0, r0, r1
   15b6c:	movw	r1, #39	; 0x27
   15b70:	strb	r1, [r0]
   15b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b78:	add	r0, r0, #1
   15b7c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b80:	b	15b84 <__assert_fail@plt+0x4aac>
   15b84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b8c:	cmp	r0, r1
   15b90:	bcs	15ba8 <__assert_fail@plt+0x4ad0>
   15b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b9c:	add	r0, r0, r1
   15ba0:	movw	r1, #39	; 0x27
   15ba4:	strb	r1, [r0]
   15ba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bac:	add	r0, r0, #1
   15bb0:	str	r0, [fp, #-44]	; 0xffffffd4
   15bb4:	movw	r0, #0
   15bb8:	strb	r0, [fp, #-60]	; 0xffffffc4
   15bbc:	b	15bc0 <__assert_fail@plt+0x4ae8>
   15bc0:	b	15bc4 <__assert_fail@plt+0x4aec>
   15bc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bcc:	cmp	r0, r1
   15bd0:	bcs	15be8 <__assert_fail@plt+0x4b10>
   15bd4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bdc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15be0:	add	r1, r1, r2
   15be4:	strb	r0, [r1]
   15be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bec:	add	r0, r0, #1
   15bf0:	str	r0, [fp, #-44]	; 0xffffffd4
   15bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bf8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15bfc:	add	r1, r1, #1
   15c00:	str	r1, [fp, #-40]	; 0xffffffd8
   15c04:	add	r0, r0, r1
   15c08:	ldrb	r0, [r0]
   15c0c:	strb	r0, [fp, #-63]	; 0xffffffc1
   15c10:	b	15914 <__assert_fail@plt+0x483c>
   15c14:	b	15da4 <__assert_fail@plt+0x4ccc>
   15c18:	b	15c1c <__assert_fail@plt+0x4b44>
   15c1c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15c20:	tst	r0, #1
   15c24:	beq	15c34 <__assert_fail@plt+0x4b5c>
   15c28:	ldr	r0, [fp, #8]
   15c2c:	cmp	r0, #2
   15c30:	bne	15c40 <__assert_fail@plt+0x4b68>
   15c34:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c38:	tst	r0, #1
   15c3c:	beq	15c7c <__assert_fail@plt+0x4ba4>
   15c40:	ldr	r0, [fp, #16]
   15c44:	movw	r1, #0
   15c48:	cmp	r0, r1
   15c4c:	beq	15c7c <__assert_fail@plt+0x4ba4>
   15c50:	ldr	r0, [fp, #16]
   15c54:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15c58:	lsr	r1, r1, #5
   15c5c:	add	r0, r0, r1, lsl #2
   15c60:	ldr	r0, [r0]
   15c64:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15c68:	and	r1, r1, #31
   15c6c:	lsr	r0, r0, r1
   15c70:	and	r0, r0, #1
   15c74:	cmp	r0, #0
   15c78:	bne	15c8c <__assert_fail@plt+0x4bb4>
   15c7c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15c80:	tst	r0, #1
   15c84:	bne	15c8c <__assert_fail@plt+0x4bb4>
   15c88:	b	15da4 <__assert_fail@plt+0x4ccc>
   15c8c:	b	15c90 <__assert_fail@plt+0x4bb8>
   15c90:	b	15c94 <__assert_fail@plt+0x4bbc>
   15c94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c98:	tst	r0, #1
   15c9c:	beq	15ca4 <__assert_fail@plt+0x4bcc>
   15ca0:	b	16010 <__assert_fail@plt+0x4f38>
   15ca4:	movw	r0, #1
   15ca8:	strb	r0, [fp, #-66]	; 0xffffffbe
   15cac:	ldr	r0, [fp, #8]
   15cb0:	cmp	r0, #2
   15cb4:	bne	15d68 <__assert_fail@plt+0x4c90>
   15cb8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15cbc:	tst	r0, #1
   15cc0:	bne	15d68 <__assert_fail@plt+0x4c90>
   15cc4:	b	15cc8 <__assert_fail@plt+0x4bf0>
   15cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ccc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cd0:	cmp	r0, r1
   15cd4:	bcs	15cec <__assert_fail@plt+0x4c14>
   15cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ce0:	add	r0, r0, r1
   15ce4:	movw	r1, #39	; 0x27
   15ce8:	strb	r1, [r0]
   15cec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cf0:	add	r0, r0, #1
   15cf4:	str	r0, [fp, #-44]	; 0xffffffd4
   15cf8:	b	15cfc <__assert_fail@plt+0x4c24>
   15cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d04:	cmp	r0, r1
   15d08:	bcs	15d20 <__assert_fail@plt+0x4c48>
   15d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d14:	add	r0, r0, r1
   15d18:	movw	r1, #36	; 0x24
   15d1c:	strb	r1, [r0]
   15d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d24:	add	r0, r0, #1
   15d28:	str	r0, [fp, #-44]	; 0xffffffd4
   15d2c:	b	15d30 <__assert_fail@plt+0x4c58>
   15d30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d38:	cmp	r0, r1
   15d3c:	bcs	15d54 <__assert_fail@plt+0x4c7c>
   15d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d48:	add	r0, r0, r1
   15d4c:	movw	r1, #39	; 0x27
   15d50:	strb	r1, [r0]
   15d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d58:	add	r0, r0, #1
   15d5c:	str	r0, [fp, #-44]	; 0xffffffd4
   15d60:	movw	r0, #1
   15d64:	strb	r0, [fp, #-60]	; 0xffffffc4
   15d68:	b	15d6c <__assert_fail@plt+0x4c94>
   15d6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d74:	cmp	r0, r1
   15d78:	bcs	15d90 <__assert_fail@plt+0x4cb8>
   15d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d84:	add	r0, r0, r1
   15d88:	movw	r1, #92	; 0x5c
   15d8c:	strb	r1, [r0]
   15d90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d94:	add	r0, r0, #1
   15d98:	str	r0, [fp, #-44]	; 0xffffffd4
   15d9c:	b	15da0 <__assert_fail@plt+0x4cc8>
   15da0:	b	15da4 <__assert_fail@plt+0x4ccc>
   15da4:	b	15da8 <__assert_fail@plt+0x4cd0>
   15da8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15dac:	tst	r0, #1
   15db0:	beq	15e30 <__assert_fail@plt+0x4d58>
   15db4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15db8:	tst	r0, #1
   15dbc:	bne	15e30 <__assert_fail@plt+0x4d58>
   15dc0:	b	15dc4 <__assert_fail@plt+0x4cec>
   15dc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15dcc:	cmp	r0, r1
   15dd0:	bcs	15de8 <__assert_fail@plt+0x4d10>
   15dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ddc:	add	r0, r0, r1
   15de0:	movw	r1, #39	; 0x27
   15de4:	strb	r1, [r0]
   15de8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dec:	add	r0, r0, #1
   15df0:	str	r0, [fp, #-44]	; 0xffffffd4
   15df4:	b	15df8 <__assert_fail@plt+0x4d20>
   15df8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e00:	cmp	r0, r1
   15e04:	bcs	15e1c <__assert_fail@plt+0x4d44>
   15e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e10:	add	r0, r0, r1
   15e14:	movw	r1, #39	; 0x27
   15e18:	strb	r1, [r0]
   15e1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e20:	add	r0, r0, #1
   15e24:	str	r0, [fp, #-44]	; 0xffffffd4
   15e28:	movw	r0, #0
   15e2c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15e30:	b	15e34 <__assert_fail@plt+0x4d5c>
   15e34:	b	15e38 <__assert_fail@plt+0x4d60>
   15e38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e40:	cmp	r0, r1
   15e44:	bcs	15e5c <__assert_fail@plt+0x4d84>
   15e48:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15e4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e50:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15e54:	add	r1, r1, r2
   15e58:	strb	r0, [r1]
   15e5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e60:	add	r0, r0, #1
   15e64:	str	r0, [fp, #-44]	; 0xffffffd4
   15e68:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15e6c:	tst	r0, #1
   15e70:	bne	15e7c <__assert_fail@plt+0x4da4>
   15e74:	movw	r0, #0
   15e78:	strb	r0, [fp, #-62]	; 0xffffffc2
   15e7c:	b	15e80 <__assert_fail@plt+0x4da8>
   15e80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e84:	add	r0, r0, #1
   15e88:	str	r0, [fp, #-40]	; 0xffffffd8
   15e8c:	b	14c34 <__assert_fail@plt+0x3b5c>
   15e90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e94:	cmp	r0, #0
   15e98:	bne	15eb8 <__assert_fail@plt+0x4de0>
   15e9c:	ldr	r0, [fp, #8]
   15ea0:	cmp	r0, #2
   15ea4:	bne	15eb8 <__assert_fail@plt+0x4de0>
   15ea8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15eac:	tst	r0, #1
   15eb0:	beq	15eb8 <__assert_fail@plt+0x4de0>
   15eb4:	b	16010 <__assert_fail@plt+0x4f38>
   15eb8:	ldr	r0, [fp, #8]
   15ebc:	cmp	r0, #2
   15ec0:	bne	15f60 <__assert_fail@plt+0x4e88>
   15ec4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15ec8:	tst	r0, #1
   15ecc:	bne	15f60 <__assert_fail@plt+0x4e88>
   15ed0:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15ed4:	tst	r0, #1
   15ed8:	beq	15f60 <__assert_fail@plt+0x4e88>
   15edc:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15ee0:	tst	r0, #1
   15ee4:	beq	15f2c <__assert_fail@plt+0x4e54>
   15ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15eec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15ef0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15ef4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ef8:	ldr	ip, [fp, #12]
   15efc:	ldr	lr, [fp, #16]
   15f00:	ldr	r4, [fp, #20]
   15f04:	ldr	r5, [fp, #24]
   15f08:	movw	r6, #5
   15f0c:	str	r6, [sp]
   15f10:	str	ip, [sp, #4]
   15f14:	str	lr, [sp, #8]
   15f18:	str	r4, [sp, #12]
   15f1c:	str	r5, [sp, #16]
   15f20:	bl	1494c <__assert_fail@plt+0x3874>
   15f24:	str	r0, [fp, #-20]	; 0xffffffec
   15f28:	b	16078 <__assert_fail@plt+0x4fa0>
   15f2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15f30:	cmp	r0, #0
   15f34:	bne	15f58 <__assert_fail@plt+0x4e80>
   15f38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f3c:	cmp	r0, #0
   15f40:	beq	15f58 <__assert_fail@plt+0x4e80>
   15f44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f48:	str	r0, [fp, #-28]	; 0xffffffe4
   15f4c:	movw	r0, #0
   15f50:	str	r0, [fp, #-44]	; 0xffffffd4
   15f54:	b	149f4 <__assert_fail@plt+0x391c>
   15f58:	b	15f5c <__assert_fail@plt+0x4e84>
   15f5c:	b	15f60 <__assert_fail@plt+0x4e88>
   15f60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15f64:	movw	r1, #0
   15f68:	cmp	r0, r1
   15f6c:	beq	15fe0 <__assert_fail@plt+0x4f08>
   15f70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15f74:	tst	r0, #1
   15f78:	bne	15fe0 <__assert_fail@plt+0x4f08>
   15f7c:	b	15f80 <__assert_fail@plt+0x4ea8>
   15f80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15f84:	ldrsb	r0, [r0]
   15f88:	cmp	r0, #0
   15f8c:	beq	15fdc <__assert_fail@plt+0x4f04>
   15f90:	b	15f94 <__assert_fail@plt+0x4ebc>
   15f94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f9c:	cmp	r0, r1
   15fa0:	bcs	15fbc <__assert_fail@plt+0x4ee4>
   15fa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15fa8:	ldrb	r0, [r0]
   15fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fb0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15fb4:	add	r1, r1, r2
   15fb8:	strb	r0, [r1]
   15fbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15fc0:	add	r0, r0, #1
   15fc4:	str	r0, [fp, #-44]	; 0xffffffd4
   15fc8:	b	15fcc <__assert_fail@plt+0x4ef4>
   15fcc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15fd0:	add	r0, r0, #1
   15fd4:	str	r0, [fp, #-52]	; 0xffffffcc
   15fd8:	b	15f80 <__assert_fail@plt+0x4ea8>
   15fdc:	b	15fe0 <__assert_fail@plt+0x4f08>
   15fe0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15fe4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15fe8:	cmp	r0, r1
   15fec:	bcs	16004 <__assert_fail@plt+0x4f2c>
   15ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ff4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ff8:	add	r0, r0, r1
   15ffc:	movw	r1, #0
   16000:	strb	r1, [r0]
   16004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16008:	str	r0, [fp, #-20]	; 0xffffffec
   1600c:	b	16078 <__assert_fail@plt+0x4fa0>
   16010:	ldr	r0, [fp, #8]
   16014:	cmp	r0, #2
   16018:	bne	16030 <__assert_fail@plt+0x4f58>
   1601c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16020:	tst	r0, #1
   16024:	beq	16030 <__assert_fail@plt+0x4f58>
   16028:	movw	r0, #4
   1602c:	str	r0, [fp, #8]
   16030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16034:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16038:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1603c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16040:	ldr	ip, [fp, #8]
   16044:	ldr	lr, [fp, #12]
   16048:	mvn	r4, #2
   1604c:	and	lr, lr, r4
   16050:	ldr	r4, [fp, #20]
   16054:	ldr	r5, [fp, #24]
   16058:	str	ip, [sp]
   1605c:	str	lr, [sp, #4]
   16060:	movw	ip, #0
   16064:	str	ip, [sp, #8]
   16068:	str	r4, [sp, #12]
   1606c:	str	r5, [sp, #16]
   16070:	bl	1494c <__assert_fail@plt+0x3874>
   16074:	str	r0, [fp, #-20]	; 0xffffffec
   16078:	ldr	r0, [fp, #-20]	; 0xffffffec
   1607c:	sub	sp, fp, #16
   16080:	pop	{r4, r5, r6, sl, fp, pc}
   16084:	push	{fp, lr}
   16088:	mov	fp, sp
   1608c:	sub	sp, sp, #16
   16090:	str	r0, [fp, #-4]
   16094:	str	r1, [sp, #8]
   16098:	str	r2, [sp, #4]
   1609c:	ldr	r0, [fp, #-4]
   160a0:	ldr	r1, [sp, #8]
   160a4:	ldr	r3, [sp, #4]
   160a8:	movw	r2, #0
   160ac:	bl	160b8 <__assert_fail@plt+0x4fe0>
   160b0:	mov	sp, fp
   160b4:	pop	{fp, pc}
   160b8:	push	{r4, r5, r6, sl, fp, lr}
   160bc:	add	fp, sp, #16
   160c0:	sub	sp, sp, #72	; 0x48
   160c4:	str	r0, [fp, #-20]	; 0xffffffec
   160c8:	str	r1, [fp, #-24]	; 0xffffffe8
   160cc:	str	r2, [fp, #-28]	; 0xffffffe4
   160d0:	str	r3, [fp, #-32]	; 0xffffffe0
   160d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160d8:	movw	r1, #0
   160dc:	cmp	r0, r1
   160e0:	beq	160f0 <__assert_fail@plt+0x5018>
   160e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160e8:	str	r0, [sp, #32]
   160ec:	b	16100 <__assert_fail@plt+0x5028>
   160f0:	movw	r0, #368	; 0x170
   160f4:	movt	r0, #3
   160f8:	str	r0, [sp, #32]
   160fc:	b	16100 <__assert_fail@plt+0x5028>
   16100:	ldr	r0, [sp, #32]
   16104:	str	r0, [fp, #-36]	; 0xffffffdc
   16108:	bl	1100c <__errno_location@plt>
   1610c:	ldr	r0, [r0]
   16110:	str	r0, [fp, #-40]	; 0xffffffd8
   16114:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16118:	ldr	r0, [r0, #4]
   1611c:	ldr	lr, [fp, #-28]	; 0xffffffe4
   16120:	movw	r1, #0
   16124:	cmp	lr, r1
   16128:	movw	lr, #0
   1612c:	movne	lr, #1
   16130:	tst	lr, #1
   16134:	mov	lr, r1
   16138:	moveq	lr, #1
   1613c:	orr	r0, r0, lr
   16140:	str	r0, [sp, #44]	; 0x2c
   16144:	ldr	r2, [fp, #-20]	; 0xffffffec
   16148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1614c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16150:	ldr	r0, [r0]
   16154:	ldr	lr, [sp, #44]	; 0x2c
   16158:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1615c:	add	ip, ip, #8
   16160:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16164:	ldr	r4, [r4, #40]	; 0x28
   16168:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1616c:	ldr	r5, [r5, #44]	; 0x2c
   16170:	str	r0, [sp, #28]
   16174:	mov	r0, r1
   16178:	ldr	r6, [sp, #28]
   1617c:	str	r6, [sp]
   16180:	str	lr, [sp, #4]
   16184:	str	ip, [sp, #8]
   16188:	str	r4, [sp, #12]
   1618c:	str	r5, [sp, #16]
   16190:	bl	1494c <__assert_fail@plt+0x3874>
   16194:	add	r0, r0, #1
   16198:	str	r0, [sp, #40]	; 0x28
   1619c:	ldr	r0, [sp, #40]	; 0x28
   161a0:	bl	1768c <__assert_fail@plt+0x65b4>
   161a4:	str	r0, [sp, #36]	; 0x24
   161a8:	ldr	r0, [sp, #36]	; 0x24
   161ac:	ldr	r1, [sp, #40]	; 0x28
   161b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   161b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   161b8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   161bc:	ldr	ip, [ip]
   161c0:	ldr	lr, [sp, #44]	; 0x2c
   161c4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   161c8:	add	r4, r4, #8
   161cc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   161d0:	ldr	r5, [r5, #40]	; 0x28
   161d4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   161d8:	ldr	r6, [r6, #44]	; 0x2c
   161dc:	str	ip, [sp]
   161e0:	str	lr, [sp, #4]
   161e4:	str	r4, [sp, #8]
   161e8:	str	r5, [sp, #12]
   161ec:	str	r6, [sp, #16]
   161f0:	bl	1494c <__assert_fail@plt+0x3874>
   161f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   161f8:	str	r0, [sp, #24]
   161fc:	str	r1, [sp, #20]
   16200:	bl	1100c <__errno_location@plt>
   16204:	ldr	r1, [sp, #20]
   16208:	str	r1, [r0]
   1620c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16210:	movw	r2, #0
   16214:	cmp	r0, r2
   16218:	beq	1622c <__assert_fail@plt+0x5154>
   1621c:	ldr	r0, [sp, #40]	; 0x28
   16220:	sub	r0, r0, #1
   16224:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16228:	str	r0, [r1]
   1622c:	ldr	r0, [sp, #36]	; 0x24
   16230:	sub	sp, fp, #16
   16234:	pop	{r4, r5, r6, sl, fp, pc}
   16238:	push	{fp, lr}
   1623c:	mov	fp, sp
   16240:	sub	sp, sp, #8
   16244:	movw	r0, #256	; 0x100
   16248:	movt	r0, #3
   1624c:	ldr	r0, [r0]
   16250:	str	r0, [sp, #4]
   16254:	movw	r0, #1
   16258:	str	r0, [sp]
   1625c:	ldr	r0, [sp]
   16260:	movw	r1, #260	; 0x104
   16264:	movt	r1, #3
   16268:	ldr	r1, [r1]
   1626c:	cmp	r0, r1
   16270:	bge	16298 <__assert_fail@plt+0x51c0>
   16274:	ldr	r0, [sp, #4]
   16278:	ldr	r1, [sp]
   1627c:	add	r0, r0, r1, lsl #3
   16280:	ldr	r0, [r0, #4]
   16284:	bl	14148 <__assert_fail@plt+0x3070>
   16288:	ldr	r0, [sp]
   1628c:	add	r0, r0, #1
   16290:	str	r0, [sp]
   16294:	b	1625c <__assert_fail@plt+0x5184>
   16298:	ldr	r0, [sp, #4]
   1629c:	ldr	r0, [r0, #4]
   162a0:	movw	r1, #416	; 0x1a0
   162a4:	movt	r1, #3
   162a8:	cmp	r0, r1
   162ac:	beq	162d8 <__assert_fail@plt+0x5200>
   162b0:	ldr	r0, [sp, #4]
   162b4:	ldr	r0, [r0, #4]
   162b8:	bl	14148 <__assert_fail@plt+0x3070>
   162bc:	movw	r0, #256	; 0x100
   162c0:	movw	lr, #264	; 0x108
   162c4:	movt	lr, #3
   162c8:	str	r0, [lr]
   162cc:	movw	r0, #416	; 0x1a0
   162d0:	movt	r0, #3
   162d4:	str	r0, [lr, #4]
   162d8:	ldr	r0, [sp, #4]
   162dc:	movw	r1, #264	; 0x108
   162e0:	movt	r1, #3
   162e4:	cmp	r0, r1
   162e8:	beq	16308 <__assert_fail@plt+0x5230>
   162ec:	ldr	r0, [sp, #4]
   162f0:	bl	14148 <__assert_fail@plt+0x3070>
   162f4:	movw	r0, #256	; 0x100
   162f8:	movt	r0, #3
   162fc:	movw	lr, #264	; 0x108
   16300:	movt	lr, #3
   16304:	str	lr, [r0]
   16308:	movw	r0, #260	; 0x104
   1630c:	movt	r0, #3
   16310:	movw	r1, #1
   16314:	str	r1, [r0]
   16318:	mov	sp, fp
   1631c:	pop	{fp, pc}
   16320:	push	{fp, lr}
   16324:	mov	fp, sp
   16328:	sub	sp, sp, #8
   1632c:	str	r0, [sp, #4]
   16330:	str	r1, [sp]
   16334:	ldr	r0, [sp, #4]
   16338:	ldr	r1, [sp]
   1633c:	mvn	r2, #0
   16340:	movw	r3, #368	; 0x170
   16344:	movt	r3, #3
   16348:	bl	16354 <__assert_fail@plt+0x527c>
   1634c:	mov	sp, fp
   16350:	pop	{fp, pc}
   16354:	push	{r4, r5, r6, sl, fp, lr}
   16358:	add	fp, sp, #16
   1635c:	sub	sp, sp, #88	; 0x58
   16360:	str	r0, [fp, #-20]	; 0xffffffec
   16364:	str	r1, [fp, #-24]	; 0xffffffe8
   16368:	str	r2, [fp, #-28]	; 0xffffffe4
   1636c:	str	r3, [fp, #-32]	; 0xffffffe0
   16370:	bl	1100c <__errno_location@plt>
   16374:	ldr	r1, [pc, #676]	; 16620 <__assert_fail@plt+0x5548>
   16378:	ldr	r0, [r0]
   1637c:	str	r0, [fp, #-36]	; 0xffffffdc
   16380:	movw	r0, #256	; 0x100
   16384:	movt	r0, #3
   16388:	ldr	r0, [r0]
   1638c:	str	r0, [fp, #-40]	; 0xffffffd8
   16390:	str	r1, [fp, #-44]	; 0xffffffd4
   16394:	ldr	r0, [fp, #-20]	; 0xffffffec
   16398:	movw	r1, #0
   1639c:	cmp	r1, r0
   163a0:	bgt	163b4 <__assert_fail@plt+0x52dc>
   163a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   163a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163ac:	cmp	r0, r1
   163b0:	blt	163b8 <__assert_fail@plt+0x52e0>
   163b4:	bl	110c0 <abort@plt>
   163b8:	movw	r0, #260	; 0x104
   163bc:	movt	r0, #3
   163c0:	ldr	r0, [r0]
   163c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   163c8:	cmp	r0, r1
   163cc:	bgt	164c4 <__assert_fail@plt+0x53ec>
   163d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   163d4:	movw	r1, #264	; 0x108
   163d8:	movt	r1, #3
   163dc:	cmp	r0, r1
   163e0:	movw	r0, #0
   163e4:	moveq	r0, #1
   163e8:	and	r0, r0, #1
   163ec:	strb	r0, [fp, #-45]	; 0xffffffd3
   163f0:	movw	r0, #260	; 0x104
   163f4:	movt	r0, #3
   163f8:	ldr	r0, [r0]
   163fc:	str	r0, [sp, #52]	; 0x34
   16400:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16404:	tst	r0, #1
   16408:	beq	16418 <__assert_fail@plt+0x5340>
   1640c:	movw	r0, #0
   16410:	str	r0, [sp, #32]
   16414:	b	16420 <__assert_fail@plt+0x5348>
   16418:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1641c:	str	r0, [sp, #32]
   16420:	ldr	r0, [sp, #32]
   16424:	ldr	r1, [fp, #-20]	; 0xffffffec
   16428:	movw	r2, #260	; 0x104
   1642c:	movt	r2, #3
   16430:	ldr	r2, [r2]
   16434:	sub	r1, r1, r2
   16438:	add	r2, r1, #1
   1643c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16440:	add	r1, sp, #52	; 0x34
   16444:	movw	ip, #8
   16448:	str	ip, [sp]
   1644c:	bl	178c8 <__assert_fail@plt+0x67f0>
   16450:	str	r0, [fp, #-40]	; 0xffffffd8
   16454:	movw	r1, #256	; 0x100
   16458:	movt	r1, #3
   1645c:	str	r0, [r1]
   16460:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16464:	tst	r0, #1
   16468:	beq	16488 <__assert_fail@plt+0x53b0>
   1646c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16470:	movw	r1, #264	; 0x108
   16474:	movt	r1, #3
   16478:	ldr	r2, [r1]
   1647c:	str	r2, [r0]
   16480:	ldr	r1, [r1, #4]
   16484:	str	r1, [r0, #4]
   16488:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1648c:	movw	r1, #260	; 0x104
   16490:	movt	r1, #3
   16494:	ldr	r1, [r1]
   16498:	add	r0, r0, r1, lsl #3
   1649c:	ldr	r2, [sp, #52]	; 0x34
   164a0:	sub	r1, r2, r1
   164a4:	lsl	r2, r1, #3
   164a8:	movw	r1, #0
   164ac:	and	r1, r1, #255	; 0xff
   164b0:	bl	11024 <memset@plt>
   164b4:	ldr	r0, [sp, #52]	; 0x34
   164b8:	movw	r1, #260	; 0x104
   164bc:	movt	r1, #3
   164c0:	str	r0, [r1]
   164c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   164c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   164cc:	ldr	r0, [r0, r1, lsl #3]
   164d0:	str	r0, [sp, #48]	; 0x30
   164d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   164d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   164dc:	add	r0, r0, r1, lsl #3
   164e0:	ldr	r0, [r0, #4]
   164e4:	str	r0, [sp, #44]	; 0x2c
   164e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   164ec:	ldr	r0, [r0, #4]
   164f0:	orr	r0, r0, #1
   164f4:	str	r0, [sp, #40]	; 0x28
   164f8:	ldr	r0, [sp, #44]	; 0x2c
   164fc:	ldr	r1, [sp, #48]	; 0x30
   16500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16508:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1650c:	ldr	ip, [ip]
   16510:	ldr	lr, [sp, #40]	; 0x28
   16514:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16518:	add	r4, r4, #8
   1651c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16520:	ldr	r5, [r5, #40]	; 0x28
   16524:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16528:	ldr	r6, [r6, #44]	; 0x2c
   1652c:	str	ip, [sp]
   16530:	str	lr, [sp, #4]
   16534:	str	r4, [sp, #8]
   16538:	str	r5, [sp, #12]
   1653c:	str	r6, [sp, #16]
   16540:	bl	1494c <__assert_fail@plt+0x3874>
   16544:	str	r0, [sp, #36]	; 0x24
   16548:	ldr	r0, [sp, #48]	; 0x30
   1654c:	ldr	r1, [sp, #36]	; 0x24
   16550:	cmp	r0, r1
   16554:	bhi	16600 <__assert_fail@plt+0x5528>
   16558:	ldr	r0, [sp, #36]	; 0x24
   1655c:	add	r0, r0, #1
   16560:	str	r0, [sp, #48]	; 0x30
   16564:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16568:	ldr	r2, [fp, #-20]	; 0xffffffec
   1656c:	add	r1, r1, r2, lsl #3
   16570:	str	r0, [r1]
   16574:	ldr	r0, [sp, #44]	; 0x2c
   16578:	movw	r1, #416	; 0x1a0
   1657c:	movt	r1, #3
   16580:	cmp	r0, r1
   16584:	beq	16590 <__assert_fail@plt+0x54b8>
   16588:	ldr	r0, [sp, #44]	; 0x2c
   1658c:	bl	14148 <__assert_fail@plt+0x3070>
   16590:	ldr	r0, [sp, #48]	; 0x30
   16594:	bl	1768c <__assert_fail@plt+0x65b4>
   16598:	mov	lr, r0
   1659c:	str	r0, [sp, #44]	; 0x2c
   165a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   165a8:	add	r0, r0, r1, lsl #3
   165ac:	str	lr, [r0, #4]
   165b0:	ldr	r0, [sp, #44]	; 0x2c
   165b4:	ldr	r1, [sp, #48]	; 0x30
   165b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   165bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   165c0:	ldr	lr, [fp, #-32]	; 0xffffffe0
   165c4:	ldr	lr, [lr]
   165c8:	ldr	ip, [sp, #40]	; 0x28
   165cc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   165d0:	add	r4, r4, #8
   165d4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   165d8:	ldr	r5, [r5, #40]	; 0x28
   165dc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   165e0:	ldr	r6, [r6, #44]	; 0x2c
   165e4:	str	lr, [sp]
   165e8:	str	ip, [sp, #4]
   165ec:	str	r4, [sp, #8]
   165f0:	str	r5, [sp, #12]
   165f4:	str	r6, [sp, #16]
   165f8:	bl	1494c <__assert_fail@plt+0x3874>
   165fc:	str	r0, [sp, #28]
   16600:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16604:	str	r0, [sp, #24]
   16608:	bl	1100c <__errno_location@plt>
   1660c:	ldr	lr, [sp, #24]
   16610:	str	lr, [r0]
   16614:	ldr	r0, [sp, #44]	; 0x2c
   16618:	sub	sp, fp, #16
   1661c:	pop	{r4, r5, r6, sl, fp, pc}
   16620:	svcvc	0x00ffffff
   16624:	push	{fp, lr}
   16628:	mov	fp, sp
   1662c:	sub	sp, sp, #16
   16630:	str	r0, [fp, #-4]
   16634:	str	r1, [sp, #8]
   16638:	str	r2, [sp, #4]
   1663c:	ldr	r0, [fp, #-4]
   16640:	ldr	r1, [sp, #8]
   16644:	ldr	r2, [sp, #4]
   16648:	movw	r3, #368	; 0x170
   1664c:	movt	r3, #3
   16650:	bl	16354 <__assert_fail@plt+0x527c>
   16654:	mov	sp, fp
   16658:	pop	{fp, pc}
   1665c:	push	{fp, lr}
   16660:	mov	fp, sp
   16664:	sub	sp, sp, #8
   16668:	str	r0, [sp, #4]
   1666c:	ldr	r1, [sp, #4]
   16670:	movw	r0, #0
   16674:	bl	16320 <__assert_fail@plt+0x5248>
   16678:	mov	sp, fp
   1667c:	pop	{fp, pc}
   16680:	push	{fp, lr}
   16684:	mov	fp, sp
   16688:	sub	sp, sp, #8
   1668c:	str	r0, [sp, #4]
   16690:	str	r1, [sp]
   16694:	ldr	r1, [sp, #4]
   16698:	ldr	r2, [sp]
   1669c:	movw	r0, #0
   166a0:	bl	16624 <__assert_fail@plt+0x554c>
   166a4:	mov	sp, fp
   166a8:	pop	{fp, pc}
   166ac:	push	{fp, lr}
   166b0:	mov	fp, sp
   166b4:	sub	sp, sp, #64	; 0x40
   166b8:	str	r0, [fp, #-4]
   166bc:	str	r1, [fp, #-8]
   166c0:	str	r2, [fp, #-12]
   166c4:	ldr	r1, [fp, #-8]
   166c8:	add	r0, sp, #4
   166cc:	bl	166ec <__assert_fail@plt+0x5614>
   166d0:	ldr	r0, [fp, #-4]
   166d4:	ldr	r1, [fp, #-12]
   166d8:	mvn	r2, #0
   166dc:	add	r3, sp, #4
   166e0:	bl	16354 <__assert_fail@plt+0x527c>
   166e4:	mov	sp, fp
   166e8:	pop	{fp, pc}
   166ec:	push	{fp, lr}
   166f0:	mov	fp, sp
   166f4:	sub	sp, sp, #8
   166f8:	str	r1, [sp, #4]
   166fc:	mov	r1, r0
   16700:	str	r0, [sp]
   16704:	mov	r0, r1
   16708:	movw	r1, #0
   1670c:	and	r1, r1, #255	; 0xff
   16710:	movw	r2, #48	; 0x30
   16714:	bl	11024 <memset@plt>
   16718:	ldr	r0, [sp, #4]
   1671c:	cmp	r0, #10
   16720:	bne	16728 <__assert_fail@plt+0x5650>
   16724:	bl	110c0 <abort@plt>
   16728:	ldr	r0, [sp, #4]
   1672c:	ldr	r1, [sp]
   16730:	str	r0, [r1]
   16734:	mov	sp, fp
   16738:	pop	{fp, pc}
   1673c:	push	{fp, lr}
   16740:	mov	fp, sp
   16744:	sub	sp, sp, #64	; 0x40
   16748:	str	r0, [fp, #-4]
   1674c:	str	r1, [fp, #-8]
   16750:	str	r2, [fp, #-12]
   16754:	str	r3, [fp, #-16]
   16758:	ldr	r1, [fp, #-8]
   1675c:	mov	r0, sp
   16760:	bl	166ec <__assert_fail@plt+0x5614>
   16764:	ldr	r0, [fp, #-4]
   16768:	ldr	r1, [fp, #-12]
   1676c:	ldr	r2, [fp, #-16]
   16770:	mov	r3, sp
   16774:	bl	16354 <__assert_fail@plt+0x527c>
   16778:	mov	sp, fp
   1677c:	pop	{fp, pc}
   16780:	push	{fp, lr}
   16784:	mov	fp, sp
   16788:	sub	sp, sp, #8
   1678c:	str	r0, [sp, #4]
   16790:	str	r1, [sp]
   16794:	ldr	r1, [sp, #4]
   16798:	ldr	r2, [sp]
   1679c:	movw	r0, #0
   167a0:	bl	166ac <__assert_fail@plt+0x55d4>
   167a4:	mov	sp, fp
   167a8:	pop	{fp, pc}
   167ac:	push	{fp, lr}
   167b0:	mov	fp, sp
   167b4:	sub	sp, sp, #16
   167b8:	str	r0, [fp, #-4]
   167bc:	str	r1, [sp, #8]
   167c0:	str	r2, [sp, #4]
   167c4:	ldr	r1, [fp, #-4]
   167c8:	ldr	r2, [sp, #8]
   167cc:	ldr	r3, [sp, #4]
   167d0:	movw	r0, #0
   167d4:	bl	1673c <__assert_fail@plt+0x5664>
   167d8:	mov	sp, fp
   167dc:	pop	{fp, pc}
   167e0:	push	{fp, lr}
   167e4:	mov	fp, sp
   167e8:	sub	sp, sp, #72	; 0x48
   167ec:	movw	r3, #368	; 0x170
   167f0:	movt	r3, #3
   167f4:	str	r0, [fp, #-4]
   167f8:	str	r1, [fp, #-8]
   167fc:	strb	r2, [fp, #-9]
   16800:	add	r0, sp, #12
   16804:	mov	r1, r0
   16808:	str	r0, [sp, #8]
   1680c:	mov	r0, r1
   16810:	mov	r1, r3
   16814:	movw	r2, #48	; 0x30
   16818:	bl	10ebc <memcpy@plt>
   1681c:	ldr	r0, [sp, #8]
   16820:	ldrb	r1, [fp, #-9]
   16824:	movw	r2, #1
   16828:	bl	146f0 <__assert_fail@plt+0x3618>
   1682c:	ldr	r1, [fp, #-4]
   16830:	ldr	r2, [fp, #-8]
   16834:	movw	r3, #0
   16838:	str	r0, [sp, #4]
   1683c:	mov	r0, r3
   16840:	add	r3, sp, #12
   16844:	bl	16354 <__assert_fail@plt+0x527c>
   16848:	mov	sp, fp
   1684c:	pop	{fp, pc}
   16850:	push	{fp, lr}
   16854:	mov	fp, sp
   16858:	sub	sp, sp, #8
   1685c:	str	r0, [sp, #4]
   16860:	strb	r1, [sp, #3]
   16864:	ldr	r0, [sp, #4]
   16868:	mvn	r1, #0
   1686c:	ldrb	r2, [sp, #3]
   16870:	bl	167e0 <__assert_fail@plt+0x5708>
   16874:	mov	sp, fp
   16878:	pop	{fp, pc}
   1687c:	push	{fp, lr}
   16880:	mov	fp, sp
   16884:	sub	sp, sp, #8
   16888:	str	r0, [sp, #4]
   1688c:	ldr	r0, [sp, #4]
   16890:	movw	r1, #58	; 0x3a
   16894:	and	r1, r1, #255	; 0xff
   16898:	bl	16850 <__assert_fail@plt+0x5778>
   1689c:	mov	sp, fp
   168a0:	pop	{fp, pc}
   168a4:	push	{fp, lr}
   168a8:	mov	fp, sp
   168ac:	sub	sp, sp, #8
   168b0:	str	r0, [sp, #4]
   168b4:	str	r1, [sp]
   168b8:	ldr	r0, [sp, #4]
   168bc:	ldr	r1, [sp]
   168c0:	movw	r2, #58	; 0x3a
   168c4:	and	r2, r2, #255	; 0xff
   168c8:	bl	167e0 <__assert_fail@plt+0x5708>
   168cc:	mov	sp, fp
   168d0:	pop	{fp, pc}
   168d4:	push	{fp, lr}
   168d8:	mov	fp, sp
   168dc:	sub	sp, sp, #120	; 0x78
   168e0:	str	r0, [fp, #-4]
   168e4:	str	r1, [fp, #-8]
   168e8:	str	r2, [fp, #-12]
   168ec:	ldr	r1, [fp, #-8]
   168f0:	add	r0, sp, #12
   168f4:	bl	166ec <__assert_fail@plt+0x5614>
   168f8:	add	r0, sp, #60	; 0x3c
   168fc:	mov	r1, r0
   16900:	add	r2, sp, #12
   16904:	str	r0, [sp, #8]
   16908:	mov	r0, r1
   1690c:	mov	r1, r2
   16910:	movw	r2, #48	; 0x30
   16914:	bl	10ebc <memcpy@plt>
   16918:	ldr	r0, [sp, #8]
   1691c:	movw	r1, #58	; 0x3a
   16920:	and	r1, r1, #255	; 0xff
   16924:	movw	r2, #1
   16928:	bl	146f0 <__assert_fail@plt+0x3618>
   1692c:	ldr	r1, [fp, #-4]
   16930:	ldr	r2, [fp, #-12]
   16934:	str	r0, [sp, #4]
   16938:	mov	r0, r1
   1693c:	mov	r1, r2
   16940:	mvn	r2, #0
   16944:	add	r3, sp, #60	; 0x3c
   16948:	bl	16354 <__assert_fail@plt+0x527c>
   1694c:	mov	sp, fp
   16950:	pop	{fp, pc}
   16954:	push	{fp, lr}
   16958:	mov	fp, sp
   1695c:	sub	sp, sp, #24
   16960:	str	r0, [fp, #-4]
   16964:	str	r1, [fp, #-8]
   16968:	str	r2, [sp, #12]
   1696c:	str	r3, [sp, #8]
   16970:	ldr	r0, [fp, #-4]
   16974:	ldr	r1, [fp, #-8]
   16978:	ldr	r2, [sp, #12]
   1697c:	ldr	r3, [sp, #8]
   16980:	mvn	ip, #0
   16984:	str	ip, [sp]
   16988:	bl	16994 <__assert_fail@plt+0x58bc>
   1698c:	mov	sp, fp
   16990:	pop	{fp, pc}
   16994:	push	{fp, lr}
   16998:	mov	fp, sp
   1699c:	sub	sp, sp, #72	; 0x48
   169a0:	ldr	ip, [fp, #8]
   169a4:	movw	lr, #368	; 0x170
   169a8:	movt	lr, #3
   169ac:	str	r0, [fp, #-4]
   169b0:	str	r1, [fp, #-8]
   169b4:	str	r2, [fp, #-12]
   169b8:	str	r3, [fp, #-16]
   169bc:	add	r0, sp, #8
   169c0:	mov	r1, r0
   169c4:	str	r0, [sp, #4]
   169c8:	mov	r0, r1
   169cc:	mov	r1, lr
   169d0:	movw	r2, #48	; 0x30
   169d4:	str	ip, [sp]
   169d8:	bl	10ebc <memcpy@plt>
   169dc:	ldr	r1, [fp, #-8]
   169e0:	ldr	r2, [fp, #-12]
   169e4:	ldr	r0, [sp, #4]
   169e8:	bl	147f0 <__assert_fail@plt+0x3718>
   169ec:	ldr	r0, [fp, #-4]
   169f0:	ldr	r1, [fp, #-16]
   169f4:	ldr	r2, [fp, #8]
   169f8:	add	r3, sp, #8
   169fc:	bl	16354 <__assert_fail@plt+0x527c>
   16a00:	mov	sp, fp
   16a04:	pop	{fp, pc}
   16a08:	push	{fp, lr}
   16a0c:	mov	fp, sp
   16a10:	sub	sp, sp, #16
   16a14:	str	r0, [fp, #-4]
   16a18:	str	r1, [sp, #8]
   16a1c:	str	r2, [sp, #4]
   16a20:	ldr	r1, [fp, #-4]
   16a24:	ldr	r2, [sp, #8]
   16a28:	ldr	r3, [sp, #4]
   16a2c:	movw	r0, #0
   16a30:	bl	16954 <__assert_fail@plt+0x587c>
   16a34:	mov	sp, fp
   16a38:	pop	{fp, pc}
   16a3c:	push	{fp, lr}
   16a40:	mov	fp, sp
   16a44:	sub	sp, sp, #24
   16a48:	str	r0, [fp, #-4]
   16a4c:	str	r1, [fp, #-8]
   16a50:	str	r2, [sp, #12]
   16a54:	str	r3, [sp, #8]
   16a58:	ldr	r1, [fp, #-4]
   16a5c:	ldr	r2, [fp, #-8]
   16a60:	ldr	r3, [sp, #12]
   16a64:	ldr	r0, [sp, #8]
   16a68:	movw	ip, #0
   16a6c:	str	r0, [sp, #4]
   16a70:	mov	r0, ip
   16a74:	ldr	ip, [sp, #4]
   16a78:	str	ip, [sp]
   16a7c:	bl	16994 <__assert_fail@plt+0x58bc>
   16a80:	mov	sp, fp
   16a84:	pop	{fp, pc}
   16a88:	push	{fp, lr}
   16a8c:	mov	fp, sp
   16a90:	sub	sp, sp, #16
   16a94:	str	r0, [fp, #-4]
   16a98:	str	r1, [sp, #8]
   16a9c:	str	r2, [sp, #4]
   16aa0:	ldr	r0, [fp, #-4]
   16aa4:	ldr	r1, [sp, #8]
   16aa8:	ldr	r2, [sp, #4]
   16aac:	movw	r3, #272	; 0x110
   16ab0:	movt	r3, #3
   16ab4:	bl	16354 <__assert_fail@plt+0x527c>
   16ab8:	mov	sp, fp
   16abc:	pop	{fp, pc}
   16ac0:	push	{fp, lr}
   16ac4:	mov	fp, sp
   16ac8:	sub	sp, sp, #8
   16acc:	str	r0, [sp, #4]
   16ad0:	str	r1, [sp]
   16ad4:	ldr	r1, [sp, #4]
   16ad8:	ldr	r2, [sp]
   16adc:	movw	r0, #0
   16ae0:	bl	16a88 <__assert_fail@plt+0x59b0>
   16ae4:	mov	sp, fp
   16ae8:	pop	{fp, pc}
   16aec:	push	{fp, lr}
   16af0:	mov	fp, sp
   16af4:	sub	sp, sp, #8
   16af8:	str	r0, [sp, #4]
   16afc:	str	r1, [sp]
   16b00:	ldr	r0, [sp, #4]
   16b04:	ldr	r1, [sp]
   16b08:	mvn	r2, #0
   16b0c:	bl	16a88 <__assert_fail@plt+0x59b0>
   16b10:	mov	sp, fp
   16b14:	pop	{fp, pc}
   16b18:	push	{fp, lr}
   16b1c:	mov	fp, sp
   16b20:	sub	sp, sp, #8
   16b24:	str	r0, [sp, #4]
   16b28:	ldr	r1, [sp, #4]
   16b2c:	movw	r0, #0
   16b30:	bl	16aec <__assert_fail@plt+0x5a14>
   16b34:	mov	sp, fp
   16b38:	pop	{fp, pc}
   16b3c:	push	{fp, lr}
   16b40:	mov	fp, sp
   16b44:	sub	sp, sp, #24
   16b48:	str	r0, [fp, #-8]
   16b4c:	str	r1, [sp, #12]
   16b50:	ldr	r0, [fp, #-8]
   16b54:	bl	10fd0 <gettext@plt>
   16b58:	str	r0, [sp, #8]
   16b5c:	ldr	r0, [sp, #8]
   16b60:	ldr	r1, [fp, #-8]
   16b64:	cmp	r0, r1
   16b68:	beq	16b78 <__assert_fail@plt+0x5aa0>
   16b6c:	ldr	r0, [sp, #8]
   16b70:	str	r0, [fp, #-4]
   16b74:	b	16c44 <__assert_fail@plt+0x5b6c>
   16b78:	bl	1d0fc <__assert_fail@plt+0xc024>
   16b7c:	str	r0, [sp, #4]
   16b80:	ldr	r0, [sp, #4]
   16b84:	movw	r1, #64097	; 0xfa61
   16b88:	movt	r1, #1
   16b8c:	bl	1caf8 <__assert_fail@plt+0xba20>
   16b90:	cmp	r0, #0
   16b94:	bne	16bcc <__assert_fail@plt+0x5af4>
   16b98:	ldr	r0, [fp, #-8]
   16b9c:	ldrb	r0, [r0]
   16ba0:	cmp	r0, #96	; 0x60
   16ba4:	movw	r0, #0
   16ba8:	moveq	r0, #1
   16bac:	tst	r0, #1
   16bb0:	movw	r0, #64107	; 0xfa6b
   16bb4:	movt	r0, #1
   16bb8:	movw	r1, #64103	; 0xfa67
   16bbc:	movt	r1, #1
   16bc0:	movne	r0, r1
   16bc4:	str	r0, [fp, #-4]
   16bc8:	b	16c44 <__assert_fail@plt+0x5b6c>
   16bcc:	ldr	r0, [sp, #4]
   16bd0:	movw	r1, #64111	; 0xfa6f
   16bd4:	movt	r1, #1
   16bd8:	bl	1caf8 <__assert_fail@plt+0xba20>
   16bdc:	cmp	r0, #0
   16be0:	bne	16c18 <__assert_fail@plt+0x5b40>
   16be4:	ldr	r0, [fp, #-8]
   16be8:	ldrb	r0, [r0]
   16bec:	cmp	r0, #96	; 0x60
   16bf0:	movw	r0, #0
   16bf4:	moveq	r0, #1
   16bf8:	tst	r0, #1
   16bfc:	movw	r0, #64123	; 0xfa7b
   16c00:	movt	r0, #1
   16c04:	movw	r1, #64119	; 0xfa77
   16c08:	movt	r1, #1
   16c0c:	movne	r0, r1
   16c10:	str	r0, [fp, #-4]
   16c14:	b	16c44 <__assert_fail@plt+0x5b6c>
   16c18:	ldr	r0, [sp, #12]
   16c1c:	cmp	r0, #9
   16c20:	movw	r0, #0
   16c24:	moveq	r0, #1
   16c28:	tst	r0, #1
   16c2c:	movw	r0, #64095	; 0xfa5f
   16c30:	movt	r0, #1
   16c34:	movw	r1, #64091	; 0xfa5b
   16c38:	movt	r1, #1
   16c3c:	movne	r0, r1
   16c40:	str	r0, [fp, #-4]
   16c44:	ldr	r0, [fp, #-4]
   16c48:	mov	sp, fp
   16c4c:	pop	{fp, pc}
   16c50:	push	{fp, lr}
   16c54:	mov	fp, sp
   16c58:	sub	sp, sp, #24
   16c5c:	str	r0, [fp, #-8]
   16c60:	str	r1, [sp, #12]
   16c64:	str	r2, [sp, #8]
   16c68:	ldr	r0, [fp, #-8]
   16c6c:	ldr	r1, [sp, #12]
   16c70:	ldr	r2, [sp, #8]
   16c74:	bl	10e8c <read@plt>
   16c78:	str	r0, [sp, #4]
   16c7c:	ldr	r0, [sp, #4]
   16c80:	movw	r1, #0
   16c84:	cmp	r1, r0
   16c88:	bgt	16c98 <__assert_fail@plt+0x5bc0>
   16c8c:	ldr	r0, [sp, #4]
   16c90:	str	r0, [fp, #-4]
   16c94:	b	16cf0 <__assert_fail@plt+0x5c18>
   16c98:	bl	1100c <__errno_location@plt>
   16c9c:	ldr	r0, [r0]
   16ca0:	cmp	r0, #4
   16ca4:	bne	16cac <__assert_fail@plt+0x5bd4>
   16ca8:	b	16c68 <__assert_fail@plt+0x5b90>
   16cac:	bl	1100c <__errno_location@plt>
   16cb0:	ldr	r0, [r0]
   16cb4:	cmp	r0, #22
   16cb8:	bne	16cd8 <__assert_fail@plt+0x5c00>
   16cbc:	ldr	r0, [pc, #56]	; 16cfc <__assert_fail@plt+0x5c24>
   16cc0:	ldr	r1, [sp, #8]
   16cc4:	cmp	r0, r1
   16cc8:	bcs	16cd8 <__assert_fail@plt+0x5c00>
   16ccc:	ldr	r0, [pc, #40]	; 16cfc <__assert_fail@plt+0x5c24>
   16cd0:	str	r0, [sp, #8]
   16cd4:	b	16ce4 <__assert_fail@plt+0x5c0c>
   16cd8:	ldr	r0, [sp, #4]
   16cdc:	str	r0, [fp, #-4]
   16ce0:	b	16cf0 <__assert_fail@plt+0x5c18>
   16ce4:	b	16ce8 <__assert_fail@plt+0x5c10>
   16ce8:	b	16cec <__assert_fail@plt+0x5c14>
   16cec:	b	16c68 <__assert_fail@plt+0x5b90>
   16cf0:	ldr	r0, [fp, #-4]
   16cf4:	mov	sp, fp
   16cf8:	pop	{fp, pc}
   16cfc:	svcvc	0x00f00000	; IMB
   16d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d04:	add	fp, sp, #28
   16d08:	sub	sp, sp, #260	; 0x104
   16d0c:	ldr	ip, [fp, #12]
   16d10:	ldr	lr, [fp, #8]
   16d14:	str	r0, [fp, #-32]	; 0xffffffe0
   16d18:	str	r1, [fp, #-36]	; 0xffffffdc
   16d1c:	str	r2, [fp, #-40]	; 0xffffffd8
   16d20:	str	r3, [fp, #-44]	; 0xffffffd4
   16d24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16d28:	movw	r1, #0
   16d2c:	cmp	r0, r1
   16d30:	str	lr, [fp, #-48]	; 0xffffffd0
   16d34:	str	ip, [fp, #-52]	; 0xffffffcc
   16d38:	beq	16d70 <__assert_fail@plt+0x5c98>
   16d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16d44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16d48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16d4c:	movw	ip, #64212	; 0xfad4
   16d50:	movt	ip, #1
   16d54:	str	r1, [fp, #-56]	; 0xffffffc8
   16d58:	mov	r1, ip
   16d5c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16d60:	str	ip, [sp]
   16d64:	bl	11000 <fprintf@plt>
   16d68:	str	r0, [fp, #-60]	; 0xffffffc4
   16d6c:	b	16d8c <__assert_fail@plt+0x5cb4>
   16d70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16d7c:	movw	r1, #64224	; 0xfae0
   16d80:	movt	r1, #1
   16d84:	bl	11000 <fprintf@plt>
   16d88:	str	r0, [fp, #-64]	; 0xffffffc0
   16d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d90:	movw	r1, #64231	; 0xfae7
   16d94:	movt	r1, #1
   16d98:	str	r0, [fp, #-68]	; 0xffffffbc
   16d9c:	mov	r0, r1
   16da0:	bl	10fd0 <gettext@plt>
   16da4:	movw	r1, #64949	; 0xfdb5
   16da8:	movt	r1, #1
   16dac:	movw	r3, #2022	; 0x7e6
   16db0:	ldr	lr, [fp, #-68]	; 0xffffffbc
   16db4:	str	r0, [fp, #-72]	; 0xffffffb8
   16db8:	mov	r0, lr
   16dbc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16dc0:	bl	11000 <fprintf@plt>
   16dc4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16dc8:	movw	r2, #63316	; 0xf754
   16dcc:	movt	r2, #1
   16dd0:	str	r0, [fp, #-76]	; 0xffffffb4
   16dd4:	mov	r0, r2
   16dd8:	str	r2, [fp, #-80]	; 0xffffffb0
   16ddc:	bl	10e5c <fputs_unlocked@plt>
   16de0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16de4:	movw	r2, #64235	; 0xfaeb
   16de8:	movt	r2, #1
   16dec:	str	r0, [fp, #-84]	; 0xffffffac
   16df0:	mov	r0, r2
   16df4:	str	r1, [fp, #-88]	; 0xffffffa8
   16df8:	bl	10fd0 <gettext@plt>
   16dfc:	movw	r2, #64406	; 0xfb96
   16e00:	movt	r2, #1
   16e04:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16e08:	str	r0, [fp, #-92]	; 0xffffffa4
   16e0c:	mov	r0, r1
   16e10:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16e14:	bl	11000 <fprintf@plt>
   16e18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16e1c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16e20:	str	r0, [fp, #-96]	; 0xffffffa0
   16e24:	mov	r0, r2
   16e28:	bl	10e5c <fputs_unlocked@plt>
   16e2c:	ldr	r1, [fp, #12]
   16e30:	cmp	r1, #9
   16e34:	str	r0, [fp, #-100]	; 0xffffff9c
   16e38:	str	r1, [fp, #-104]	; 0xffffff98
   16e3c:	bhi	1727c <__assert_fail@plt+0x61a4>
   16e40:	add	r0, pc, #8
   16e44:	ldr	r1, [fp, #-104]	; 0xffffff98
   16e48:	ldr	r0, [r0, r1, lsl #2]
   16e4c:	mov	pc, r0
   16e50:	andeq	r6, r1, r8, ror lr
   16e54:	andeq	r6, r1, ip, ror lr
   16e58:			; <UNDEFINED> instruction: 0x00016eb8
   16e5c:	strdeq	r6, [r1], -ip
   16e60:	andeq	r6, r1, r8, asr pc
   16e64:	andeq	r6, r1, r0, asr #31
   16e68:	andeq	r7, r1, r4, lsr r0
   16e6c:	strheq	r7, [r1], -r4
   16e70:	andeq	r7, r1, r0, asr #2
   16e74:	ldrdeq	r7, [r1], -r8
   16e78:	b	1731c <__assert_fail@plt+0x6244>
   16e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e80:	movw	r1, #64440	; 0xfbb8
   16e84:	movt	r1, #1
   16e88:	str	r0, [fp, #-108]	; 0xffffff94
   16e8c:	mov	r0, r1
   16e90:	bl	10fd0 <gettext@plt>
   16e94:	ldr	r1, [fp, #8]
   16e98:	ldr	r2, [r1]
   16e9c:	ldr	r1, [fp, #-108]	; 0xffffff94
   16ea0:	str	r0, [fp, #-112]	; 0xffffff90
   16ea4:	mov	r0, r1
   16ea8:	ldr	r1, [fp, #-112]	; 0xffffff90
   16eac:	bl	11000 <fprintf@plt>
   16eb0:	str	r0, [fp, #-116]	; 0xffffff8c
   16eb4:	b	1731c <__assert_fail@plt+0x6244>
   16eb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ebc:	movw	r1, #64456	; 0xfbc8
   16ec0:	movt	r1, #1
   16ec4:	str	r0, [fp, #-120]	; 0xffffff88
   16ec8:	mov	r0, r1
   16ecc:	bl	10fd0 <gettext@plt>
   16ed0:	ldr	r1, [fp, #8]
   16ed4:	ldr	r2, [r1]
   16ed8:	ldr	r1, [fp, #8]
   16edc:	ldr	r3, [r1, #4]
   16ee0:	ldr	r1, [fp, #-120]	; 0xffffff88
   16ee4:	str	r0, [fp, #-124]	; 0xffffff84
   16ee8:	mov	r0, r1
   16eec:	ldr	r1, [fp, #-124]	; 0xffffff84
   16ef0:	bl	11000 <fprintf@plt>
   16ef4:	str	r0, [fp, #-128]	; 0xffffff80
   16ef8:	b	1731c <__assert_fail@plt+0x6244>
   16efc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f00:	movw	r1, #64479	; 0xfbdf
   16f04:	movt	r1, #1
   16f08:	str	r0, [fp, #-132]	; 0xffffff7c
   16f0c:	mov	r0, r1
   16f10:	bl	10fd0 <gettext@plt>
   16f14:	ldr	r1, [fp, #8]
   16f18:	ldr	r2, [r1]
   16f1c:	ldr	r1, [fp, #8]
   16f20:	ldr	r3, [r1, #4]
   16f24:	ldr	r1, [fp, #8]
   16f28:	ldr	r1, [r1, #8]
   16f2c:	ldr	lr, [fp, #-132]	; 0xffffff7c
   16f30:	str	r0, [fp, #-136]	; 0xffffff78
   16f34:	mov	r0, lr
   16f38:	ldr	ip, [fp, #-136]	; 0xffffff78
   16f3c:	str	r1, [fp, #-140]	; 0xffffff74
   16f40:	mov	r1, ip
   16f44:	ldr	r4, [fp, #-140]	; 0xffffff74
   16f48:	str	r4, [sp]
   16f4c:	bl	11000 <fprintf@plt>
   16f50:	str	r0, [sp, #144]	; 0x90
   16f54:	b	1731c <__assert_fail@plt+0x6244>
   16f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f5c:	movw	r1, #64507	; 0xfbfb
   16f60:	movt	r1, #1
   16f64:	str	r0, [sp, #140]	; 0x8c
   16f68:	mov	r0, r1
   16f6c:	bl	10fd0 <gettext@plt>
   16f70:	ldr	r1, [fp, #8]
   16f74:	ldr	r2, [r1]
   16f78:	ldr	r1, [fp, #8]
   16f7c:	ldr	r3, [r1, #4]
   16f80:	ldr	r1, [fp, #8]
   16f84:	ldr	r1, [r1, #8]
   16f88:	ldr	lr, [fp, #8]
   16f8c:	ldr	lr, [lr, #12]
   16f90:	ldr	ip, [sp, #140]	; 0x8c
   16f94:	str	r0, [sp, #136]	; 0x88
   16f98:	mov	r0, ip
   16f9c:	ldr	r4, [sp, #136]	; 0x88
   16fa0:	str	r1, [sp, #132]	; 0x84
   16fa4:	mov	r1, r4
   16fa8:	ldr	r5, [sp, #132]	; 0x84
   16fac:	str	r5, [sp]
   16fb0:	str	lr, [sp, #4]
   16fb4:	bl	11000 <fprintf@plt>
   16fb8:	str	r0, [sp, #128]	; 0x80
   16fbc:	b	1731c <__assert_fail@plt+0x6244>
   16fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16fc4:	movw	r1, #64539	; 0xfc1b
   16fc8:	movt	r1, #1
   16fcc:	str	r0, [sp, #124]	; 0x7c
   16fd0:	mov	r0, r1
   16fd4:	bl	10fd0 <gettext@plt>
   16fd8:	ldr	r1, [fp, #8]
   16fdc:	ldr	r2, [r1]
   16fe0:	ldr	r1, [fp, #8]
   16fe4:	ldr	r3, [r1, #4]
   16fe8:	ldr	r1, [fp, #8]
   16fec:	ldr	r1, [r1, #8]
   16ff0:	ldr	lr, [fp, #8]
   16ff4:	ldr	lr, [lr, #12]
   16ff8:	ldr	ip, [fp, #8]
   16ffc:	ldr	ip, [ip, #16]
   17000:	ldr	r4, [sp, #124]	; 0x7c
   17004:	str	r0, [sp, #120]	; 0x78
   17008:	mov	r0, r4
   1700c:	ldr	r5, [sp, #120]	; 0x78
   17010:	str	r1, [sp, #116]	; 0x74
   17014:	mov	r1, r5
   17018:	ldr	r6, [sp, #116]	; 0x74
   1701c:	str	r6, [sp]
   17020:	str	lr, [sp, #4]
   17024:	str	ip, [sp, #8]
   17028:	bl	11000 <fprintf@plt>
   1702c:	str	r0, [sp, #112]	; 0x70
   17030:	b	1731c <__assert_fail@plt+0x6244>
   17034:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17038:	movw	r1, #64575	; 0xfc3f
   1703c:	movt	r1, #1
   17040:	str	r0, [sp, #108]	; 0x6c
   17044:	mov	r0, r1
   17048:	bl	10fd0 <gettext@plt>
   1704c:	ldr	r1, [fp, #8]
   17050:	ldr	r2, [r1]
   17054:	ldr	r1, [fp, #8]
   17058:	ldr	r3, [r1, #4]
   1705c:	ldr	r1, [fp, #8]
   17060:	ldr	r1, [r1, #8]
   17064:	ldr	lr, [fp, #8]
   17068:	ldr	lr, [lr, #12]
   1706c:	ldr	ip, [fp, #8]
   17070:	ldr	ip, [ip, #16]
   17074:	ldr	r4, [fp, #8]
   17078:	ldr	r4, [r4, #20]
   1707c:	ldr	r5, [sp, #108]	; 0x6c
   17080:	str	r0, [sp, #104]	; 0x68
   17084:	mov	r0, r5
   17088:	ldr	r6, [sp, #104]	; 0x68
   1708c:	str	r1, [sp, #100]	; 0x64
   17090:	mov	r1, r6
   17094:	ldr	r7, [sp, #100]	; 0x64
   17098:	str	r7, [sp]
   1709c:	str	lr, [sp, #4]
   170a0:	str	ip, [sp, #8]
   170a4:	str	r4, [sp, #12]
   170a8:	bl	11000 <fprintf@plt>
   170ac:	str	r0, [sp, #96]	; 0x60
   170b0:	b	1731c <__assert_fail@plt+0x6244>
   170b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   170b8:	movw	r1, #64615	; 0xfc67
   170bc:	movt	r1, #1
   170c0:	str	r0, [sp, #92]	; 0x5c
   170c4:	mov	r0, r1
   170c8:	bl	10fd0 <gettext@plt>
   170cc:	ldr	r1, [fp, #8]
   170d0:	ldr	r2, [r1]
   170d4:	ldr	r1, [fp, #8]
   170d8:	ldr	r3, [r1, #4]
   170dc:	ldr	r1, [fp, #8]
   170e0:	ldr	r1, [r1, #8]
   170e4:	ldr	lr, [fp, #8]
   170e8:	ldr	lr, [lr, #12]
   170ec:	ldr	ip, [fp, #8]
   170f0:	ldr	ip, [ip, #16]
   170f4:	ldr	r4, [fp, #8]
   170f8:	ldr	r4, [r4, #20]
   170fc:	ldr	r5, [fp, #8]
   17100:	ldr	r5, [r5, #24]
   17104:	ldr	r6, [sp, #92]	; 0x5c
   17108:	str	r0, [sp, #88]	; 0x58
   1710c:	mov	r0, r6
   17110:	ldr	r7, [sp, #88]	; 0x58
   17114:	str	r1, [sp, #84]	; 0x54
   17118:	mov	r1, r7
   1711c:	ldr	r8, [sp, #84]	; 0x54
   17120:	str	r8, [sp]
   17124:	str	lr, [sp, #4]
   17128:	str	ip, [sp, #8]
   1712c:	str	r4, [sp, #12]
   17130:	str	r5, [sp, #16]
   17134:	bl	11000 <fprintf@plt>
   17138:	str	r0, [sp, #80]	; 0x50
   1713c:	b	1731c <__assert_fail@plt+0x6244>
   17140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17144:	movw	r1, #64659	; 0xfc93
   17148:	movt	r1, #1
   1714c:	str	r0, [sp, #76]	; 0x4c
   17150:	mov	r0, r1
   17154:	bl	10fd0 <gettext@plt>
   17158:	ldr	r1, [fp, #8]
   1715c:	ldr	r2, [r1]
   17160:	ldr	r1, [fp, #8]
   17164:	ldr	r3, [r1, #4]
   17168:	ldr	r1, [fp, #8]
   1716c:	ldr	r1, [r1, #8]
   17170:	ldr	lr, [fp, #8]
   17174:	ldr	lr, [lr, #12]
   17178:	ldr	ip, [fp, #8]
   1717c:	ldr	ip, [ip, #16]
   17180:	ldr	r4, [fp, #8]
   17184:	ldr	r4, [r4, #20]
   17188:	ldr	r5, [fp, #8]
   1718c:	ldr	r5, [r5, #24]
   17190:	ldr	r6, [fp, #8]
   17194:	ldr	r6, [r6, #28]
   17198:	ldr	r7, [sp, #76]	; 0x4c
   1719c:	str	r0, [sp, #72]	; 0x48
   171a0:	mov	r0, r7
   171a4:	ldr	r8, [sp, #72]	; 0x48
   171a8:	str	r1, [sp, #68]	; 0x44
   171ac:	mov	r1, r8
   171b0:	ldr	r9, [sp, #68]	; 0x44
   171b4:	str	r9, [sp]
   171b8:	str	lr, [sp, #4]
   171bc:	str	ip, [sp, #8]
   171c0:	str	r4, [sp, #12]
   171c4:	str	r5, [sp, #16]
   171c8:	str	r6, [sp, #20]
   171cc:	bl	11000 <fprintf@plt>
   171d0:	str	r0, [sp, #64]	; 0x40
   171d4:	b	1731c <__assert_fail@plt+0x6244>
   171d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   171dc:	movw	r1, #64707	; 0xfcc3
   171e0:	movt	r1, #1
   171e4:	str	r0, [sp, #60]	; 0x3c
   171e8:	mov	r0, r1
   171ec:	bl	10fd0 <gettext@plt>
   171f0:	ldr	r1, [fp, #8]
   171f4:	ldr	r2, [r1]
   171f8:	ldr	r1, [fp, #8]
   171fc:	ldr	r3, [r1, #4]
   17200:	ldr	r1, [fp, #8]
   17204:	ldr	r1, [r1, #8]
   17208:	ldr	lr, [fp, #8]
   1720c:	ldr	lr, [lr, #12]
   17210:	ldr	ip, [fp, #8]
   17214:	ldr	ip, [ip, #16]
   17218:	ldr	r4, [fp, #8]
   1721c:	ldr	r4, [r4, #20]
   17220:	ldr	r5, [fp, #8]
   17224:	ldr	r5, [r5, #24]
   17228:	ldr	r6, [fp, #8]
   1722c:	ldr	r6, [r6, #28]
   17230:	ldr	r7, [fp, #8]
   17234:	ldr	r7, [r7, #32]
   17238:	ldr	r8, [sp, #60]	; 0x3c
   1723c:	str	r0, [sp, #56]	; 0x38
   17240:	mov	r0, r8
   17244:	ldr	r9, [sp, #56]	; 0x38
   17248:	str	r1, [sp, #52]	; 0x34
   1724c:	mov	r1, r9
   17250:	ldr	sl, [sp, #52]	; 0x34
   17254:	str	sl, [sp]
   17258:	str	lr, [sp, #4]
   1725c:	str	ip, [sp, #8]
   17260:	str	r4, [sp, #12]
   17264:	str	r5, [sp, #16]
   17268:	str	r6, [sp, #20]
   1726c:	str	r7, [sp, #24]
   17270:	bl	11000 <fprintf@plt>
   17274:	str	r0, [sp, #48]	; 0x30
   17278:	b	1731c <__assert_fail@plt+0x6244>
   1727c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17280:	movw	r1, #64759	; 0xfcf7
   17284:	movt	r1, #1
   17288:	str	r0, [sp, #44]	; 0x2c
   1728c:	mov	r0, r1
   17290:	bl	10fd0 <gettext@plt>
   17294:	ldr	r1, [fp, #8]
   17298:	ldr	r2, [r1]
   1729c:	ldr	r1, [fp, #8]
   172a0:	ldr	r3, [r1, #4]
   172a4:	ldr	r1, [fp, #8]
   172a8:	ldr	r1, [r1, #8]
   172ac:	ldr	lr, [fp, #8]
   172b0:	ldr	lr, [lr, #12]
   172b4:	ldr	ip, [fp, #8]
   172b8:	ldr	ip, [ip, #16]
   172bc:	ldr	r4, [fp, #8]
   172c0:	ldr	r4, [r4, #20]
   172c4:	ldr	r5, [fp, #8]
   172c8:	ldr	r5, [r5, #24]
   172cc:	ldr	r6, [fp, #8]
   172d0:	ldr	r6, [r6, #28]
   172d4:	ldr	r7, [fp, #8]
   172d8:	ldr	r7, [r7, #32]
   172dc:	ldr	r8, [sp, #44]	; 0x2c
   172e0:	str	r0, [sp, #40]	; 0x28
   172e4:	mov	r0, r8
   172e8:	ldr	r9, [sp, #40]	; 0x28
   172ec:	str	r1, [sp, #36]	; 0x24
   172f0:	mov	r1, r9
   172f4:	ldr	sl, [sp, #36]	; 0x24
   172f8:	str	sl, [sp]
   172fc:	str	lr, [sp, #4]
   17300:	str	ip, [sp, #8]
   17304:	str	r4, [sp, #12]
   17308:	str	r5, [sp, #16]
   1730c:	str	r6, [sp, #20]
   17310:	str	r7, [sp, #24]
   17314:	bl	11000 <fprintf@plt>
   17318:	str	r0, [sp, #32]
   1731c:	sub	sp, fp, #28
   17320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17324:	push	{fp, lr}
   17328:	mov	fp, sp
   1732c:	sub	sp, sp, #32
   17330:	ldr	ip, [fp, #8]
   17334:	str	r0, [fp, #-4]
   17338:	str	r1, [fp, #-8]
   1733c:	str	r2, [fp, #-12]
   17340:	str	r3, [sp, #16]
   17344:	movw	r0, #0
   17348:	str	r0, [sp, #12]
   1734c:	str	ip, [sp, #8]
   17350:	ldr	r0, [fp, #8]
   17354:	ldr	r1, [sp, #12]
   17358:	add	r0, r0, r1, lsl #2
   1735c:	ldr	r0, [r0]
   17360:	movw	r1, #0
   17364:	cmp	r0, r1
   17368:	beq	17380 <__assert_fail@plt+0x62a8>
   1736c:	b	17370 <__assert_fail@plt+0x6298>
   17370:	ldr	r0, [sp, #12]
   17374:	add	r0, r0, #1
   17378:	str	r0, [sp, #12]
   1737c:	b	17350 <__assert_fail@plt+0x6278>
   17380:	ldr	r0, [fp, #-4]
   17384:	ldr	r1, [fp, #-8]
   17388:	ldr	r2, [fp, #-12]
   1738c:	ldr	r3, [sp, #16]
   17390:	ldr	ip, [fp, #8]
   17394:	ldr	lr, [sp, #12]
   17398:	str	ip, [sp]
   1739c:	str	lr, [sp, #4]
   173a0:	bl	16d00 <__assert_fail@plt+0x5c28>
   173a4:	mov	sp, fp
   173a8:	pop	{fp, pc}
   173ac:	push	{fp, lr}
   173b0:	mov	fp, sp
   173b4:	sub	sp, sp, #80	; 0x50
   173b8:	ldr	ip, [fp, #8]
   173bc:	str	ip, [fp, #-4]
   173c0:	str	r0, [fp, #-8]
   173c4:	str	r1, [fp, #-12]
   173c8:	str	r2, [fp, #-16]
   173cc:	str	r3, [fp, #-20]	; 0xffffffec
   173d0:	movw	r0, #0
   173d4:	str	r0, [fp, #-24]	; 0xffffffe8
   173d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173dc:	cmp	r0, #10
   173e0:	movw	r0, #0
   173e4:	str	r0, [sp, #12]
   173e8:	bcs	17420 <__assert_fail@plt+0x6348>
   173ec:	ldr	r0, [fp, #-4]
   173f0:	add	r1, r0, #4
   173f4:	str	r1, [fp, #-4]
   173f8:	ldr	r0, [r0]
   173fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17400:	add	r2, sp, #16
   17404:	add	r1, r2, r1, lsl #2
   17408:	str	r0, [r1]
   1740c:	movw	r1, #0
   17410:	cmp	r0, r1
   17414:	movw	r0, #0
   17418:	movne	r0, #1
   1741c:	str	r0, [sp, #12]
   17420:	ldr	r0, [sp, #12]
   17424:	tst	r0, #1
   17428:	beq	17440 <__assert_fail@plt+0x6368>
   1742c:	b	17430 <__assert_fail@plt+0x6358>
   17430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17434:	add	r0, r0, #1
   17438:	str	r0, [fp, #-24]	; 0xffffffe8
   1743c:	b	173d8 <__assert_fail@plt+0x6300>
   17440:	add	r0, sp, #16
   17444:	ldr	r1, [fp, #-8]
   17448:	ldr	r2, [fp, #-12]
   1744c:	ldr	r3, [fp, #-16]
   17450:	ldr	ip, [fp, #-20]	; 0xffffffec
   17454:	ldr	lr, [fp, #-24]	; 0xffffffe8
   17458:	str	r0, [sp, #8]
   1745c:	mov	r0, r1
   17460:	mov	r1, r2
   17464:	mov	r2, r3
   17468:	mov	r3, ip
   1746c:	ldr	ip, [sp, #8]
   17470:	str	ip, [sp]
   17474:	str	lr, [sp, #4]
   17478:	bl	16d00 <__assert_fail@plt+0x5c28>
   1747c:	mov	sp, fp
   17480:	pop	{fp, pc}
   17484:	push	{fp, lr}
   17488:	mov	fp, sp
   1748c:	sub	sp, sp, #32
   17490:	str	r0, [fp, #-4]
   17494:	str	r1, [fp, #-8]
   17498:	str	r2, [fp, #-12]
   1749c:	str	r3, [sp, #16]
   174a0:	add	r0, fp, #8
   174a4:	str	r0, [sp, #12]
   174a8:	ldr	r0, [fp, #-4]
   174ac:	ldr	r1, [fp, #-8]
   174b0:	ldr	r2, [fp, #-12]
   174b4:	ldr	r3, [sp, #16]
   174b8:	ldr	ip, [sp, #12]
   174bc:	mov	lr, sp
   174c0:	str	ip, [lr]
   174c4:	bl	173ac <__assert_fail@plt+0x62d4>
   174c8:	add	r0, sp, #12
   174cc:	str	r0, [sp, #8]
   174d0:	mov	sp, fp
   174d4:	pop	{fp, pc}
   174d8:	push	{fp, lr}
   174dc:	mov	fp, sp
   174e0:	sub	sp, sp, #16
   174e4:	movw	r0, #340	; 0x154
   174e8:	movt	r0, #3
   174ec:	ldr	r1, [r0]
   174f0:	movw	r0, #63316	; 0xf754
   174f4:	movt	r0, #1
   174f8:	bl	10e5c <fputs_unlocked@plt>
   174fc:	movw	r1, #64819	; 0xfd33
   17500:	movt	r1, #1
   17504:	str	r0, [fp, #-4]
   17508:	mov	r0, r1
   1750c:	bl	10fd0 <gettext@plt>
   17510:	movw	r1, #64839	; 0xfd47
   17514:	movt	r1, #1
   17518:	bl	10e80 <printf@plt>
   1751c:	movw	r1, #64861	; 0xfd5d
   17520:	movt	r1, #1
   17524:	str	r0, [sp, #8]
   17528:	mov	r0, r1
   1752c:	bl	10fd0 <gettext@plt>
   17530:	movw	r1, #62802	; 0xf552
   17534:	movt	r1, #1
   17538:	movw	r2, #63125	; 0xf695
   1753c:	movt	r2, #1
   17540:	bl	10e80 <printf@plt>
   17544:	movw	r1, #64881	; 0xfd71
   17548:	movt	r1, #1
   1754c:	str	r0, [sp, #4]
   17550:	mov	r0, r1
   17554:	bl	10fd0 <gettext@plt>
   17558:	movw	r1, #64920	; 0xfd98
   1755c:	movt	r1, #1
   17560:	bl	10e80 <printf@plt>
   17564:	str	r0, [sp]
   17568:	mov	sp, fp
   1756c:	pop	{fp, pc}
   17570:	push	{fp, lr}
   17574:	mov	fp, sp
   17578:	sub	sp, sp, #16
   1757c:	str	r0, [fp, #-4]
   17580:	str	r1, [sp, #8]
   17584:	str	r2, [sp, #4]
   17588:	ldr	r0, [fp, #-4]
   1758c:	ldr	r1, [sp, #8]
   17590:	ldr	r2, [sp, #4]
   17594:	bl	175a0 <__assert_fail@plt+0x64c8>
   17598:	mov	sp, fp
   1759c:	pop	{fp, pc}
   175a0:	push	{fp, lr}
   175a4:	mov	fp, sp
   175a8:	sub	sp, sp, #16
   175ac:	str	r0, [fp, #-4]
   175b0:	str	r1, [sp, #8]
   175b4:	str	r2, [sp, #4]
   175b8:	ldr	r0, [fp, #-4]
   175bc:	ldr	r1, [sp, #8]
   175c0:	ldr	r2, [sp, #4]
   175c4:	bl	1d208 <__assert_fail@plt+0xc130>
   175c8:	str	r0, [sp]
   175cc:	ldr	r0, [sp]
   175d0:	movw	r1, #0
   175d4:	cmp	r0, r1
   175d8:	bne	17608 <__assert_fail@plt+0x6530>
   175dc:	ldr	r0, [fp, #-4]
   175e0:	movw	r1, #0
   175e4:	cmp	r0, r1
   175e8:	beq	17604 <__assert_fail@plt+0x652c>
   175ec:	ldr	r0, [sp, #8]
   175f0:	cmp	r0, #0
   175f4:	beq	17608 <__assert_fail@plt+0x6530>
   175f8:	ldr	r0, [sp, #4]
   175fc:	cmp	r0, #0
   17600:	beq	17608 <__assert_fail@plt+0x6530>
   17604:	bl	1a3f0 <__assert_fail@plt+0x9318>
   17608:	ldr	r0, [sp]
   1760c:	mov	sp, fp
   17610:	pop	{fp, pc}
   17614:	push	{fp, lr}
   17618:	mov	fp, sp
   1761c:	sub	sp, sp, #8
   17620:	str	r0, [sp, #4]
   17624:	ldr	r0, [sp, #4]
   17628:	bl	1c9a4 <__assert_fail@plt+0xb8cc>
   1762c:	bl	17638 <__assert_fail@plt+0x6560>
   17630:	mov	sp, fp
   17634:	pop	{fp, pc}
   17638:	push	{fp, lr}
   1763c:	mov	fp, sp
   17640:	sub	sp, sp, #8
   17644:	str	r0, [sp, #4]
   17648:	ldr	r0, [sp, #4]
   1764c:	movw	r1, #0
   17650:	cmp	r0, r1
   17654:	bne	1765c <__assert_fail@plt+0x6584>
   17658:	bl	1a3f0 <__assert_fail@plt+0x9318>
   1765c:	ldr	r0, [sp, #4]
   17660:	mov	sp, fp
   17664:	pop	{fp, pc}
   17668:	push	{fp, lr}
   1766c:	mov	fp, sp
   17670:	sub	sp, sp, #8
   17674:	str	r0, [sp, #4]
   17678:	ldr	r0, [sp, #4]
   1767c:	bl	1cf44 <__assert_fail@plt+0xbe6c>
   17680:	bl	17638 <__assert_fail@plt+0x6560>
   17684:	mov	sp, fp
   17688:	pop	{fp, pc}
   1768c:	push	{fp, lr}
   17690:	mov	fp, sp
   17694:	sub	sp, sp, #8
   17698:	str	r0, [sp, #4]
   1769c:	ldr	r0, [sp, #4]
   176a0:	bl	17614 <__assert_fail@plt+0x653c>
   176a4:	mov	sp, fp
   176a8:	pop	{fp, pc}
   176ac:	push	{fp, lr}
   176b0:	mov	fp, sp
   176b4:	sub	sp, sp, #16
   176b8:	str	r0, [fp, #-4]
   176bc:	str	r1, [sp, #8]
   176c0:	ldr	r0, [fp, #-4]
   176c4:	ldr	r1, [sp, #8]
   176c8:	bl	1ca14 <__assert_fail@plt+0xb93c>
   176cc:	str	r0, [sp, #4]
   176d0:	ldr	r0, [sp, #4]
   176d4:	movw	r1, #0
   176d8:	cmp	r0, r1
   176dc:	bne	17700 <__assert_fail@plt+0x6628>
   176e0:	ldr	r0, [fp, #-4]
   176e4:	movw	r1, #0
   176e8:	cmp	r0, r1
   176ec:	beq	176fc <__assert_fail@plt+0x6624>
   176f0:	ldr	r0, [sp, #8]
   176f4:	cmp	r0, #0
   176f8:	beq	17700 <__assert_fail@plt+0x6628>
   176fc:	bl	1a3f0 <__assert_fail@plt+0x9318>
   17700:	ldr	r0, [sp, #4]
   17704:	mov	sp, fp
   17708:	pop	{fp, pc}
   1770c:	push	{fp, lr}
   17710:	mov	fp, sp
   17714:	sub	sp, sp, #8
   17718:	str	r0, [sp, #4]
   1771c:	str	r1, [sp]
   17720:	ldr	r0, [sp, #4]
   17724:	ldr	r1, [sp]
   17728:	bl	1cf84 <__assert_fail@plt+0xbeac>
   1772c:	bl	17638 <__assert_fail@plt+0x6560>
   17730:	mov	sp, fp
   17734:	pop	{fp, pc}
   17738:	push	{fp, lr}
   1773c:	mov	fp, sp
   17740:	sub	sp, sp, #16
   17744:	str	r0, [fp, #-4]
   17748:	str	r1, [sp, #8]
   1774c:	str	r2, [sp, #4]
   17750:	ldr	r0, [fp, #-4]
   17754:	ldr	r1, [sp, #8]
   17758:	ldr	r2, [sp, #4]
   1775c:	bl	1d07c <__assert_fail@plt+0xbfa4>
   17760:	bl	17638 <__assert_fail@plt+0x6560>
   17764:	mov	sp, fp
   17768:	pop	{fp, pc}
   1776c:	push	{fp, lr}
   17770:	mov	fp, sp
   17774:	sub	sp, sp, #8
   17778:	str	r0, [sp, #4]
   1777c:	str	r1, [sp]
   17780:	ldr	r1, [sp, #4]
   17784:	ldr	r2, [sp]
   17788:	movw	r0, #0
   1778c:	bl	175a0 <__assert_fail@plt+0x64c8>
   17790:	mov	sp, fp
   17794:	pop	{fp, pc}
   17798:	push	{fp, lr}
   1779c:	mov	fp, sp
   177a0:	sub	sp, sp, #8
   177a4:	str	r0, [sp, #4]
   177a8:	str	r1, [sp]
   177ac:	ldr	r1, [sp, #4]
   177b0:	ldr	r2, [sp]
   177b4:	movw	r0, #0
   177b8:	bl	17738 <__assert_fail@plt+0x6660>
   177bc:	mov	sp, fp
   177c0:	pop	{fp, pc}
   177c4:	push	{fp, lr}
   177c8:	mov	fp, sp
   177cc:	sub	sp, sp, #8
   177d0:	str	r0, [sp, #4]
   177d4:	str	r1, [sp]
   177d8:	ldr	r0, [sp, #4]
   177dc:	ldr	r1, [sp]
   177e0:	movw	r2, #1
   177e4:	bl	177f0 <__assert_fail@plt+0x6718>
   177e8:	mov	sp, fp
   177ec:	pop	{fp, pc}
   177f0:	push	{fp, lr}
   177f4:	mov	fp, sp
   177f8:	sub	sp, sp, #16
   177fc:	str	r0, [fp, #-4]
   17800:	str	r1, [sp, #8]
   17804:	str	r2, [sp, #4]
   17808:	ldr	r0, [sp, #8]
   1780c:	ldr	r0, [r0]
   17810:	str	r0, [sp]
   17814:	ldr	r0, [fp, #-4]
   17818:	movw	r1, #0
   1781c:	cmp	r0, r1
   17820:	bne	1786c <__assert_fail@plt+0x6794>
   17824:	ldr	r0, [sp]
   17828:	cmp	r0, #0
   1782c:	bne	17868 <__assert_fail@plt+0x6790>
   17830:	ldr	r0, [sp, #4]
   17834:	movw	r1, #64	; 0x40
   17838:	udiv	r0, r1, r0
   1783c:	str	r0, [sp]
   17840:	ldr	r0, [sp]
   17844:	cmp	r0, #0
   17848:	movw	r0, #0
   1784c:	movne	r0, #1
   17850:	mvn	r1, #0
   17854:	eor	r0, r0, r1
   17858:	and	r0, r0, #1
   1785c:	ldr	r1, [sp]
   17860:	add	r0, r1, r0
   17864:	str	r0, [sp]
   17868:	b	1789c <__assert_fail@plt+0x67c4>
   1786c:	ldr	r0, [sp]
   17870:	ldr	r1, [sp]
   17874:	lsr	r1, r1, #1
   17878:	add	r1, r1, #1
   1787c:	adds	r0, r0, r1
   17880:	mov	r1, #0
   17884:	adc	r1, r1, #0
   17888:	str	r0, [sp]
   1788c:	tst	r1, #1
   17890:	beq	17898 <__assert_fail@plt+0x67c0>
   17894:	bl	1a3f0 <__assert_fail@plt+0x9318>
   17898:	b	1789c <__assert_fail@plt+0x67c4>
   1789c:	ldr	r0, [fp, #-4]
   178a0:	ldr	r1, [sp]
   178a4:	ldr	r2, [sp, #4]
   178a8:	bl	175a0 <__assert_fail@plt+0x64c8>
   178ac:	str	r0, [fp, #-4]
   178b0:	ldr	r0, [sp]
   178b4:	ldr	r1, [sp, #8]
   178b8:	str	r0, [r1]
   178bc:	ldr	r0, [fp, #-4]
   178c0:	mov	sp, fp
   178c4:	pop	{fp, pc}
   178c8:	push	{fp, lr}
   178cc:	mov	fp, sp
   178d0:	sub	sp, sp, #376	; 0x178
   178d4:	ldr	ip, [fp, #8]
   178d8:	str	r0, [fp, #-4]
   178dc:	str	r1, [fp, #-8]
   178e0:	str	r2, [fp, #-12]
   178e4:	str	r3, [fp, #-16]
   178e8:	ldr	r0, [fp, #-8]
   178ec:	ldr	r0, [r0]
   178f0:	str	r0, [fp, #-20]	; 0xffffffec
   178f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   178f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   178fc:	asr	r1, r1, #1
   17900:	add	r1, r0, r1
   17904:	mov	r2, #1
   17908:	cmp	r1, r0
   1790c:	movwvc	r2, #0
   17910:	str	r1, [fp, #-24]	; 0xffffffe8
   17914:	tst	r2, #1
   17918:	str	ip, [fp, #-36]	; 0xffffffdc
   1791c:	beq	17928 <__assert_fail@plt+0x6850>
   17920:	ldr	r0, [pc, #4044]	; 188f4 <__assert_fail@plt+0x781c>
   17924:	str	r0, [fp, #-24]	; 0xffffffe8
   17928:	ldr	r0, [fp, #-16]
   1792c:	movw	r1, #0
   17930:	cmp	r1, r0
   17934:	bgt	17950 <__assert_fail@plt+0x6878>
   17938:	ldr	r0, [fp, #-16]
   1793c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17940:	cmp	r0, r1
   17944:	bge	17950 <__assert_fail@plt+0x6878>
   17948:	ldr	r0, [fp, #-16]
   1794c:	str	r0, [fp, #-24]	; 0xffffffe8
   17950:	b	17d28 <__assert_fail@plt+0x6c50>
   17954:	b	17958 <__assert_fail@plt+0x6880>
   17958:	ldr	r0, [fp, #8]
   1795c:	cmp	r0, #0
   17960:	bge	17a74 <__assert_fail@plt+0x699c>
   17964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17968:	cmp	r0, #0
   1796c:	bge	179f8 <__assert_fail@plt+0x6920>
   17970:	b	17974 <__assert_fail@plt+0x689c>
   17974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17978:	ldr	r1, [fp, #8]
   1797c:	movw	r2, #127	; 0x7f
   17980:	sdiv	r1, r2, r1
   17984:	cmp	r0, r1
   17988:	blt	17b14 <__assert_fail@plt+0x6a3c>
   1798c:	b	17b2c <__assert_fail@plt+0x6a54>
   17990:	b	17994 <__assert_fail@plt+0x68bc>
   17994:	ldr	r0, [pc, #4076]	; 18988 <__assert_fail@plt+0x78b0>
   17998:	ldr	r1, [fp, #8]
   1799c:	cmp	r1, r0
   179a0:	blt	179b8 <__assert_fail@plt+0x68e0>
   179a4:	b	179c4 <__assert_fail@plt+0x68ec>
   179a8:	ldr	r0, [fp, #8]
   179ac:	movw	r1, #0
   179b0:	cmp	r1, r0
   179b4:	bge	179c4 <__assert_fail@plt+0x68ec>
   179b8:	movw	r0, #0
   179bc:	str	r0, [fp, #-40]	; 0xffffffd8
   179c0:	b	179dc <__assert_fail@plt+0x6904>
   179c4:	ldr	r0, [fp, #8]
   179c8:	movw	r1, #0
   179cc:	sub	r0, r1, r0
   179d0:	movw	r1, #127	; 0x7f
   179d4:	sdiv	r0, r1, r0
   179d8:	str	r0, [fp, #-40]	; 0xffffffd8
   179dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   179e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179e4:	mvn	r2, #0
   179e8:	sub	r1, r2, r1
   179ec:	cmp	r0, r1
   179f0:	ble	17b14 <__assert_fail@plt+0x6a3c>
   179f4:	b	17b2c <__assert_fail@plt+0x6a54>
   179f8:	b	179fc <__assert_fail@plt+0x6924>
   179fc:	b	17a58 <__assert_fail@plt+0x6980>
   17a00:	b	17a58 <__assert_fail@plt+0x6980>
   17a04:	ldr	r0, [fp, #8]
   17a08:	cmn	r0, #1
   17a0c:	bne	17a58 <__assert_fail@plt+0x6980>
   17a10:	b	17a14 <__assert_fail@plt+0x693c>
   17a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a18:	mvn	r1, #127	; 0x7f
   17a1c:	add	r0, r0, r1
   17a20:	movw	r1, #0
   17a24:	cmp	r1, r0
   17a28:	blt	17b14 <__assert_fail@plt+0x6a3c>
   17a2c:	b	17b2c <__assert_fail@plt+0x6a54>
   17a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a34:	movw	r1, #0
   17a38:	cmp	r1, r0
   17a3c:	bge	17b2c <__assert_fail@plt+0x6a54>
   17a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a44:	sub	r0, r0, #1
   17a48:	movw	r1, #127	; 0x7f
   17a4c:	cmp	r1, r0
   17a50:	blt	17b14 <__assert_fail@plt+0x6a3c>
   17a54:	b	17b2c <__assert_fail@plt+0x6a54>
   17a58:	ldr	r0, [fp, #8]
   17a5c:	mvn	r1, #127	; 0x7f
   17a60:	sdiv	r0, r1, r0
   17a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a68:	cmp	r0, r1
   17a6c:	blt	17b14 <__assert_fail@plt+0x6a3c>
   17a70:	b	17b2c <__assert_fail@plt+0x6a54>
   17a74:	ldr	r0, [fp, #8]
   17a78:	cmp	r0, #0
   17a7c:	bne	17a84 <__assert_fail@plt+0x69ac>
   17a80:	b	17b2c <__assert_fail@plt+0x6a54>
   17a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a88:	cmp	r0, #0
   17a8c:	bge	17afc <__assert_fail@plt+0x6a24>
   17a90:	b	17a94 <__assert_fail@plt+0x69bc>
   17a94:	b	17ae0 <__assert_fail@plt+0x6a08>
   17a98:	b	17ae0 <__assert_fail@plt+0x6a08>
   17a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aa0:	cmn	r0, #1
   17aa4:	bne	17ae0 <__assert_fail@plt+0x6a08>
   17aa8:	b	17aac <__assert_fail@plt+0x69d4>
   17aac:	ldr	r0, [fp, #8]
   17ab0:	mvn	r1, #127	; 0x7f
   17ab4:	add	r0, r0, r1
   17ab8:	movw	r1, #0
   17abc:	cmp	r1, r0
   17ac0:	blt	17b14 <__assert_fail@plt+0x6a3c>
   17ac4:	b	17b2c <__assert_fail@plt+0x6a54>
   17ac8:	ldr	r0, [fp, #8]
   17acc:	sub	r0, r0, #1
   17ad0:	movw	r1, #127	; 0x7f
   17ad4:	cmp	r1, r0
   17ad8:	blt	17b14 <__assert_fail@plt+0x6a3c>
   17adc:	b	17b2c <__assert_fail@plt+0x6a54>
   17ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ae4:	mvn	r1, #127	; 0x7f
   17ae8:	sdiv	r0, r1, r0
   17aec:	ldr	r1, [fp, #8]
   17af0:	cmp	r0, r1
   17af4:	blt	17b14 <__assert_fail@plt+0x6a3c>
   17af8:	b	17b2c <__assert_fail@plt+0x6a54>
   17afc:	ldr	r0, [fp, #8]
   17b00:	movw	r1, #127	; 0x7f
   17b04:	sdiv	r0, r1, r0
   17b08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b0c:	cmp	r0, r1
   17b10:	bge	17b2c <__assert_fail@plt+0x6a54>
   17b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b18:	ldr	r1, [fp, #8]
   17b1c:	mul	r0, r0, r1
   17b20:	sxtb	r0, r0
   17b24:	str	r0, [fp, #-28]	; 0xffffffe4
   17b28:	b	18d40 <__assert_fail@plt+0x7c68>
   17b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b30:	ldr	r1, [fp, #8]
   17b34:	mul	r0, r0, r1
   17b38:	sxtb	r0, r0
   17b3c:	str	r0, [fp, #-28]	; 0xffffffe4
   17b40:	b	18d50 <__assert_fail@plt+0x7c78>
   17b44:	ldr	r0, [fp, #8]
   17b48:	cmp	r0, #0
   17b4c:	bge	17c5c <__assert_fail@plt+0x6b84>
   17b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b54:	cmp	r0, #0
   17b58:	bge	17be4 <__assert_fail@plt+0x6b0c>
   17b5c:	b	17b60 <__assert_fail@plt+0x6a88>
   17b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b64:	ldr	r1, [fp, #8]
   17b68:	movw	r2, #255	; 0xff
   17b6c:	sdiv	r1, r2, r1
   17b70:	cmp	r0, r1
   17b74:	blt	17cf8 <__assert_fail@plt+0x6c20>
   17b78:	b	17d10 <__assert_fail@plt+0x6c38>
   17b7c:	b	17b80 <__assert_fail@plt+0x6aa8>
   17b80:	ldr	r0, [pc, #3584]	; 18988 <__assert_fail@plt+0x78b0>
   17b84:	ldr	r1, [fp, #8]
   17b88:	cmp	r1, r0
   17b8c:	blt	17ba4 <__assert_fail@plt+0x6acc>
   17b90:	b	17bb0 <__assert_fail@plt+0x6ad8>
   17b94:	ldr	r0, [fp, #8]
   17b98:	movw	r1, #0
   17b9c:	cmp	r1, r0
   17ba0:	bge	17bb0 <__assert_fail@plt+0x6ad8>
   17ba4:	movw	r0, #0
   17ba8:	str	r0, [fp, #-44]	; 0xffffffd4
   17bac:	b	17bc8 <__assert_fail@plt+0x6af0>
   17bb0:	ldr	r0, [fp, #8]
   17bb4:	movw	r1, #0
   17bb8:	sub	r0, r1, r0
   17bbc:	movw	r1, #255	; 0xff
   17bc0:	sdiv	r0, r1, r0
   17bc4:	str	r0, [fp, #-44]	; 0xffffffd4
   17bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bd0:	mvn	r2, #0
   17bd4:	sub	r1, r2, r1
   17bd8:	cmp	r0, r1
   17bdc:	ble	17cf8 <__assert_fail@plt+0x6c20>
   17be0:	b	17d10 <__assert_fail@plt+0x6c38>
   17be4:	b	17be8 <__assert_fail@plt+0x6b10>
   17be8:	b	17c40 <__assert_fail@plt+0x6b68>
   17bec:	b	17c40 <__assert_fail@plt+0x6b68>
   17bf0:	ldr	r0, [fp, #8]
   17bf4:	cmn	r0, #1
   17bf8:	bne	17c40 <__assert_fail@plt+0x6b68>
   17bfc:	b	17c00 <__assert_fail@plt+0x6b28>
   17c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c04:	add	r0, r0, #0
   17c08:	movw	r1, #0
   17c0c:	cmp	r1, r0
   17c10:	blt	17cf8 <__assert_fail@plt+0x6c20>
   17c14:	b	17d10 <__assert_fail@plt+0x6c38>
   17c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c1c:	movw	r1, #0
   17c20:	cmp	r1, r0
   17c24:	bge	17d10 <__assert_fail@plt+0x6c38>
   17c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c2c:	sub	r0, r0, #1
   17c30:	mvn	r1, #0
   17c34:	cmp	r1, r0
   17c38:	blt	17cf8 <__assert_fail@plt+0x6c20>
   17c3c:	b	17d10 <__assert_fail@plt+0x6c38>
   17c40:	ldr	r0, [fp, #8]
   17c44:	movw	r1, #0
   17c48:	sdiv	r0, r1, r0
   17c4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c50:	cmp	r0, r1
   17c54:	blt	17cf8 <__assert_fail@plt+0x6c20>
   17c58:	b	17d10 <__assert_fail@plt+0x6c38>
   17c5c:	ldr	r0, [fp, #8]
   17c60:	cmp	r0, #0
   17c64:	bne	17c6c <__assert_fail@plt+0x6b94>
   17c68:	b	17d10 <__assert_fail@plt+0x6c38>
   17c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c70:	cmp	r0, #0
   17c74:	bge	17ce0 <__assert_fail@plt+0x6c08>
   17c78:	b	17c7c <__assert_fail@plt+0x6ba4>
   17c7c:	b	17cc4 <__assert_fail@plt+0x6bec>
   17c80:	b	17cc4 <__assert_fail@plt+0x6bec>
   17c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c88:	cmn	r0, #1
   17c8c:	bne	17cc4 <__assert_fail@plt+0x6bec>
   17c90:	b	17c94 <__assert_fail@plt+0x6bbc>
   17c94:	ldr	r0, [fp, #8]
   17c98:	add	r0, r0, #0
   17c9c:	movw	r1, #0
   17ca0:	cmp	r1, r0
   17ca4:	blt	17cf8 <__assert_fail@plt+0x6c20>
   17ca8:	b	17d10 <__assert_fail@plt+0x6c38>
   17cac:	ldr	r0, [fp, #8]
   17cb0:	sub	r0, r0, #1
   17cb4:	mvn	r1, #0
   17cb8:	cmp	r1, r0
   17cbc:	blt	17cf8 <__assert_fail@plt+0x6c20>
   17cc0:	b	17d10 <__assert_fail@plt+0x6c38>
   17cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cc8:	movw	r1, #0
   17ccc:	sdiv	r0, r1, r0
   17cd0:	ldr	r1, [fp, #8]
   17cd4:	cmp	r0, r1
   17cd8:	blt	17cf8 <__assert_fail@plt+0x6c20>
   17cdc:	b	17d10 <__assert_fail@plt+0x6c38>
   17ce0:	ldr	r0, [fp, #8]
   17ce4:	movw	r1, #255	; 0xff
   17ce8:	sdiv	r0, r1, r0
   17cec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cf0:	cmp	r0, r1
   17cf4:	bge	17d10 <__assert_fail@plt+0x6c38>
   17cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cfc:	ldr	r1, [fp, #8]
   17d00:	mul	r0, r0, r1
   17d04:	and	r0, r0, #255	; 0xff
   17d08:	str	r0, [fp, #-28]	; 0xffffffe4
   17d0c:	b	18d40 <__assert_fail@plt+0x7c68>
   17d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d14:	ldr	r1, [fp, #8]
   17d18:	mul	r0, r0, r1
   17d1c:	and	r0, r0, #255	; 0xff
   17d20:	str	r0, [fp, #-28]	; 0xffffffe4
   17d24:	b	18d50 <__assert_fail@plt+0x7c78>
   17d28:	b	18100 <__assert_fail@plt+0x7028>
   17d2c:	b	17d30 <__assert_fail@plt+0x6c58>
   17d30:	ldr	r0, [fp, #8]
   17d34:	cmp	r0, #0
   17d38:	bge	17e4c <__assert_fail@plt+0x6d74>
   17d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d40:	cmp	r0, #0
   17d44:	bge	17dd0 <__assert_fail@plt+0x6cf8>
   17d48:	b	17d4c <__assert_fail@plt+0x6c74>
   17d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d50:	ldr	r1, [fp, #8]
   17d54:	movw	r2, #32767	; 0x7fff
   17d58:	sdiv	r1, r2, r1
   17d5c:	cmp	r0, r1
   17d60:	blt	17eec <__assert_fail@plt+0x6e14>
   17d64:	b	17f04 <__assert_fail@plt+0x6e2c>
   17d68:	b	17d6c <__assert_fail@plt+0x6c94>
   17d6c:	ldr	r0, [pc, #3092]	; 18988 <__assert_fail@plt+0x78b0>
   17d70:	ldr	r1, [fp, #8]
   17d74:	cmp	r1, r0
   17d78:	blt	17d90 <__assert_fail@plt+0x6cb8>
   17d7c:	b	17d9c <__assert_fail@plt+0x6cc4>
   17d80:	ldr	r0, [fp, #8]
   17d84:	movw	r1, #0
   17d88:	cmp	r1, r0
   17d8c:	bge	17d9c <__assert_fail@plt+0x6cc4>
   17d90:	movw	r0, #0
   17d94:	str	r0, [fp, #-48]	; 0xffffffd0
   17d98:	b	17db4 <__assert_fail@plt+0x6cdc>
   17d9c:	ldr	r0, [fp, #8]
   17da0:	movw	r1, #0
   17da4:	sub	r0, r1, r0
   17da8:	movw	r1, #32767	; 0x7fff
   17dac:	sdiv	r0, r1, r0
   17db0:	str	r0, [fp, #-48]	; 0xffffffd0
   17db4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17db8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dbc:	mvn	r2, #0
   17dc0:	sub	r1, r2, r1
   17dc4:	cmp	r0, r1
   17dc8:	ble	17eec <__assert_fail@plt+0x6e14>
   17dcc:	b	17f04 <__assert_fail@plt+0x6e2c>
   17dd0:	b	17dd4 <__assert_fail@plt+0x6cfc>
   17dd4:	b	17e30 <__assert_fail@plt+0x6d58>
   17dd8:	b	17e30 <__assert_fail@plt+0x6d58>
   17ddc:	ldr	r0, [fp, #8]
   17de0:	cmn	r0, #1
   17de4:	bne	17e30 <__assert_fail@plt+0x6d58>
   17de8:	b	17dec <__assert_fail@plt+0x6d14>
   17dec:	ldr	r0, [pc, #3928]	; 18d4c <__assert_fail@plt+0x7c74>
   17df0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17df4:	add	r0, r1, r0
   17df8:	movw	r1, #0
   17dfc:	cmp	r1, r0
   17e00:	blt	17eec <__assert_fail@plt+0x6e14>
   17e04:	b	17f04 <__assert_fail@plt+0x6e2c>
   17e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e0c:	movw	r1, #0
   17e10:	cmp	r1, r0
   17e14:	bge	17f04 <__assert_fail@plt+0x6e2c>
   17e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e1c:	sub	r0, r0, #1
   17e20:	movw	r1, #32767	; 0x7fff
   17e24:	cmp	r1, r0
   17e28:	blt	17eec <__assert_fail@plt+0x6e14>
   17e2c:	b	17f04 <__assert_fail@plt+0x6e2c>
   17e30:	ldr	r0, [pc, #3860]	; 18d4c <__assert_fail@plt+0x7c74>
   17e34:	ldr	r1, [fp, #8]
   17e38:	sdiv	r0, r0, r1
   17e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e40:	cmp	r0, r1
   17e44:	blt	17eec <__assert_fail@plt+0x6e14>
   17e48:	b	17f04 <__assert_fail@plt+0x6e2c>
   17e4c:	ldr	r0, [fp, #8]
   17e50:	cmp	r0, #0
   17e54:	bne	17e5c <__assert_fail@plt+0x6d84>
   17e58:	b	17f04 <__assert_fail@plt+0x6e2c>
   17e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e60:	cmp	r0, #0
   17e64:	bge	17ed4 <__assert_fail@plt+0x6dfc>
   17e68:	b	17e6c <__assert_fail@plt+0x6d94>
   17e6c:	b	17eb8 <__assert_fail@plt+0x6de0>
   17e70:	b	17eb8 <__assert_fail@plt+0x6de0>
   17e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e78:	cmn	r0, #1
   17e7c:	bne	17eb8 <__assert_fail@plt+0x6de0>
   17e80:	b	17e84 <__assert_fail@plt+0x6dac>
   17e84:	ldr	r0, [pc, #3776]	; 18d4c <__assert_fail@plt+0x7c74>
   17e88:	ldr	r1, [fp, #8]
   17e8c:	add	r0, r1, r0
   17e90:	movw	r1, #0
   17e94:	cmp	r1, r0
   17e98:	blt	17eec <__assert_fail@plt+0x6e14>
   17e9c:	b	17f04 <__assert_fail@plt+0x6e2c>
   17ea0:	ldr	r0, [fp, #8]
   17ea4:	sub	r0, r0, #1
   17ea8:	movw	r1, #32767	; 0x7fff
   17eac:	cmp	r1, r0
   17eb0:	blt	17eec <__assert_fail@plt+0x6e14>
   17eb4:	b	17f04 <__assert_fail@plt+0x6e2c>
   17eb8:	ldr	r0, [pc, #3724]	; 18d4c <__assert_fail@plt+0x7c74>
   17ebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ec0:	sdiv	r0, r0, r1
   17ec4:	ldr	r1, [fp, #8]
   17ec8:	cmp	r0, r1
   17ecc:	blt	17eec <__assert_fail@plt+0x6e14>
   17ed0:	b	17f04 <__assert_fail@plt+0x6e2c>
   17ed4:	ldr	r0, [fp, #8]
   17ed8:	movw	r1, #32767	; 0x7fff
   17edc:	sdiv	r0, r1, r0
   17ee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ee4:	cmp	r0, r1
   17ee8:	bge	17f04 <__assert_fail@plt+0x6e2c>
   17eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef0:	ldr	r1, [fp, #8]
   17ef4:	mul	r0, r0, r1
   17ef8:	sxth	r0, r0
   17efc:	str	r0, [fp, #-28]	; 0xffffffe4
   17f00:	b	18d40 <__assert_fail@plt+0x7c68>
   17f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f08:	ldr	r1, [fp, #8]
   17f0c:	mul	r0, r0, r1
   17f10:	sxth	r0, r0
   17f14:	str	r0, [fp, #-28]	; 0xffffffe4
   17f18:	b	18d50 <__assert_fail@plt+0x7c78>
   17f1c:	ldr	r0, [fp, #8]
   17f20:	cmp	r0, #0
   17f24:	bge	18034 <__assert_fail@plt+0x6f5c>
   17f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f2c:	cmp	r0, #0
   17f30:	bge	17fbc <__assert_fail@plt+0x6ee4>
   17f34:	b	17f38 <__assert_fail@plt+0x6e60>
   17f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f3c:	ldr	r1, [fp, #8]
   17f40:	movw	r2, #65535	; 0xffff
   17f44:	sdiv	r1, r2, r1
   17f48:	cmp	r0, r1
   17f4c:	blt	180d0 <__assert_fail@plt+0x6ff8>
   17f50:	b	180e8 <__assert_fail@plt+0x7010>
   17f54:	b	17f58 <__assert_fail@plt+0x6e80>
   17f58:	ldr	r0, [pc, #2600]	; 18988 <__assert_fail@plt+0x78b0>
   17f5c:	ldr	r1, [fp, #8]
   17f60:	cmp	r1, r0
   17f64:	blt	17f7c <__assert_fail@plt+0x6ea4>
   17f68:	b	17f88 <__assert_fail@plt+0x6eb0>
   17f6c:	ldr	r0, [fp, #8]
   17f70:	movw	r1, #0
   17f74:	cmp	r1, r0
   17f78:	bge	17f88 <__assert_fail@plt+0x6eb0>
   17f7c:	movw	r0, #0
   17f80:	str	r0, [fp, #-52]	; 0xffffffcc
   17f84:	b	17fa0 <__assert_fail@plt+0x6ec8>
   17f88:	ldr	r0, [fp, #8]
   17f8c:	movw	r1, #0
   17f90:	sub	r0, r1, r0
   17f94:	movw	r1, #65535	; 0xffff
   17f98:	sdiv	r0, r1, r0
   17f9c:	str	r0, [fp, #-52]	; 0xffffffcc
   17fa0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fa8:	mvn	r2, #0
   17fac:	sub	r1, r2, r1
   17fb0:	cmp	r0, r1
   17fb4:	ble	180d0 <__assert_fail@plt+0x6ff8>
   17fb8:	b	180e8 <__assert_fail@plt+0x7010>
   17fbc:	b	17fc0 <__assert_fail@plt+0x6ee8>
   17fc0:	b	18018 <__assert_fail@plt+0x6f40>
   17fc4:	b	18018 <__assert_fail@plt+0x6f40>
   17fc8:	ldr	r0, [fp, #8]
   17fcc:	cmn	r0, #1
   17fd0:	bne	18018 <__assert_fail@plt+0x6f40>
   17fd4:	b	17fd8 <__assert_fail@plt+0x6f00>
   17fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fdc:	add	r0, r0, #0
   17fe0:	movw	r1, #0
   17fe4:	cmp	r1, r0
   17fe8:	blt	180d0 <__assert_fail@plt+0x6ff8>
   17fec:	b	180e8 <__assert_fail@plt+0x7010>
   17ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff4:	movw	r1, #0
   17ff8:	cmp	r1, r0
   17ffc:	bge	180e8 <__assert_fail@plt+0x7010>
   18000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18004:	sub	r0, r0, #1
   18008:	mvn	r1, #0
   1800c:	cmp	r1, r0
   18010:	blt	180d0 <__assert_fail@plt+0x6ff8>
   18014:	b	180e8 <__assert_fail@plt+0x7010>
   18018:	ldr	r0, [fp, #8]
   1801c:	movw	r1, #0
   18020:	sdiv	r0, r1, r0
   18024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18028:	cmp	r0, r1
   1802c:	blt	180d0 <__assert_fail@plt+0x6ff8>
   18030:	b	180e8 <__assert_fail@plt+0x7010>
   18034:	ldr	r0, [fp, #8]
   18038:	cmp	r0, #0
   1803c:	bne	18044 <__assert_fail@plt+0x6f6c>
   18040:	b	180e8 <__assert_fail@plt+0x7010>
   18044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18048:	cmp	r0, #0
   1804c:	bge	180b8 <__assert_fail@plt+0x6fe0>
   18050:	b	18054 <__assert_fail@plt+0x6f7c>
   18054:	b	1809c <__assert_fail@plt+0x6fc4>
   18058:	b	1809c <__assert_fail@plt+0x6fc4>
   1805c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18060:	cmn	r0, #1
   18064:	bne	1809c <__assert_fail@plt+0x6fc4>
   18068:	b	1806c <__assert_fail@plt+0x6f94>
   1806c:	ldr	r0, [fp, #8]
   18070:	add	r0, r0, #0
   18074:	movw	r1, #0
   18078:	cmp	r1, r0
   1807c:	blt	180d0 <__assert_fail@plt+0x6ff8>
   18080:	b	180e8 <__assert_fail@plt+0x7010>
   18084:	ldr	r0, [fp, #8]
   18088:	sub	r0, r0, #1
   1808c:	mvn	r1, #0
   18090:	cmp	r1, r0
   18094:	blt	180d0 <__assert_fail@plt+0x6ff8>
   18098:	b	180e8 <__assert_fail@plt+0x7010>
   1809c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180a0:	movw	r1, #0
   180a4:	sdiv	r0, r1, r0
   180a8:	ldr	r1, [fp, #8]
   180ac:	cmp	r0, r1
   180b0:	blt	180d0 <__assert_fail@plt+0x6ff8>
   180b4:	b	180e8 <__assert_fail@plt+0x7010>
   180b8:	ldr	r0, [fp, #8]
   180bc:	movw	r1, #65535	; 0xffff
   180c0:	sdiv	r0, r1, r0
   180c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180c8:	cmp	r0, r1
   180cc:	bge	180e8 <__assert_fail@plt+0x7010>
   180d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180d4:	ldr	r1, [fp, #8]
   180d8:	mul	r0, r0, r1
   180dc:	uxth	r0, r0
   180e0:	str	r0, [fp, #-28]	; 0xffffffe4
   180e4:	b	18d40 <__assert_fail@plt+0x7c68>
   180e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180ec:	ldr	r1, [fp, #8]
   180f0:	mul	r0, r0, r1
   180f4:	uxth	r0, r0
   180f8:	str	r0, [fp, #-28]	; 0xffffffe4
   180fc:	b	18d50 <__assert_fail@plt+0x7c78>
   18100:	b	18104 <__assert_fail@plt+0x702c>
   18104:	b	18108 <__assert_fail@plt+0x7030>
   18108:	ldr	r0, [fp, #8]
   1810c:	cmp	r0, #0
   18110:	bge	18214 <__assert_fail@plt+0x713c>
   18114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18118:	cmp	r0, #0
   1811c:	bge	181a8 <__assert_fail@plt+0x70d0>
   18120:	b	18124 <__assert_fail@plt+0x704c>
   18124:	ldr	r0, [pc, #1992]	; 188f4 <__assert_fail@plt+0x781c>
   18128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1812c:	ldr	r2, [fp, #8]
   18130:	sdiv	r0, r0, r2
   18134:	cmp	r1, r0
   18138:	blt	182a4 <__assert_fail@plt+0x71cc>
   1813c:	b	182b8 <__assert_fail@plt+0x71e0>
   18140:	b	18144 <__assert_fail@plt+0x706c>
   18144:	ldr	r0, [pc, #2108]	; 18988 <__assert_fail@plt+0x78b0>
   18148:	ldr	r1, [fp, #8]
   1814c:	cmp	r1, r0
   18150:	blt	18168 <__assert_fail@plt+0x7090>
   18154:	b	18174 <__assert_fail@plt+0x709c>
   18158:	ldr	r0, [fp, #8]
   1815c:	movw	r1, #0
   18160:	cmp	r1, r0
   18164:	bge	18174 <__assert_fail@plt+0x709c>
   18168:	movw	r0, #0
   1816c:	str	r0, [fp, #-56]	; 0xffffffc8
   18170:	b	1818c <__assert_fail@plt+0x70b4>
   18174:	ldr	r0, [pc, #1912]	; 188f4 <__assert_fail@plt+0x781c>
   18178:	ldr	r1, [fp, #8]
   1817c:	movw	r2, #0
   18180:	sub	r1, r2, r1
   18184:	sdiv	r0, r0, r1
   18188:	str	r0, [fp, #-56]	; 0xffffffc8
   1818c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18194:	mvn	r2, #0
   18198:	sub	r1, r2, r1
   1819c:	cmp	r0, r1
   181a0:	ble	182a4 <__assert_fail@plt+0x71cc>
   181a4:	b	182b8 <__assert_fail@plt+0x71e0>
   181a8:	ldr	r0, [fp, #8]
   181ac:	cmn	r0, #1
   181b0:	bne	181f8 <__assert_fail@plt+0x7120>
   181b4:	b	181b8 <__assert_fail@plt+0x70e0>
   181b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181bc:	add	r0, r0, #-2147483648	; 0x80000000
   181c0:	movw	r1, #0
   181c4:	cmp	r1, r0
   181c8:	blt	182a4 <__assert_fail@plt+0x71cc>
   181cc:	b	182b8 <__assert_fail@plt+0x71e0>
   181d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d4:	movw	r1, #0
   181d8:	cmp	r1, r0
   181dc:	bge	182b8 <__assert_fail@plt+0x71e0>
   181e0:	ldr	r0, [pc, #1804]	; 188f4 <__assert_fail@plt+0x781c>
   181e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181e8:	sub	r1, r1, #1
   181ec:	cmp	r0, r1
   181f0:	blt	182a4 <__assert_fail@plt+0x71cc>
   181f4:	b	182b8 <__assert_fail@plt+0x71e0>
   181f8:	ldr	r0, [pc, #4072]	; 191e8 <__assert_fail@plt+0x8110>
   181fc:	ldr	r1, [fp, #8]
   18200:	sdiv	r0, r0, r1
   18204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18208:	cmp	r0, r1
   1820c:	blt	182a4 <__assert_fail@plt+0x71cc>
   18210:	b	182b8 <__assert_fail@plt+0x71e0>
   18214:	ldr	r0, [fp, #8]
   18218:	cmp	r0, #0
   1821c:	bne	18224 <__assert_fail@plt+0x714c>
   18220:	b	182b8 <__assert_fail@plt+0x71e0>
   18224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18228:	cmp	r0, #0
   1822c:	bge	1828c <__assert_fail@plt+0x71b4>
   18230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18234:	cmn	r0, #1
   18238:	bne	18270 <__assert_fail@plt+0x7198>
   1823c:	b	18240 <__assert_fail@plt+0x7168>
   18240:	ldr	r0, [fp, #8]
   18244:	add	r0, r0, #-2147483648	; 0x80000000
   18248:	movw	r1, #0
   1824c:	cmp	r1, r0
   18250:	blt	182a4 <__assert_fail@plt+0x71cc>
   18254:	b	182b8 <__assert_fail@plt+0x71e0>
   18258:	ldr	r0, [pc, #1684]	; 188f4 <__assert_fail@plt+0x781c>
   1825c:	ldr	r1, [fp, #8]
   18260:	sub	r1, r1, #1
   18264:	cmp	r0, r1
   18268:	blt	182a4 <__assert_fail@plt+0x71cc>
   1826c:	b	182b8 <__assert_fail@plt+0x71e0>
   18270:	ldr	r0, [pc, #3952]	; 191e8 <__assert_fail@plt+0x8110>
   18274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18278:	sdiv	r0, r0, r1
   1827c:	ldr	r1, [fp, #8]
   18280:	cmp	r0, r1
   18284:	blt	182a4 <__assert_fail@plt+0x71cc>
   18288:	b	182b8 <__assert_fail@plt+0x71e0>
   1828c:	ldr	r0, [pc, #1632]	; 188f4 <__assert_fail@plt+0x781c>
   18290:	ldr	r1, [fp, #8]
   18294:	sdiv	r0, r0, r1
   18298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1829c:	cmp	r0, r1
   182a0:	bge	182b8 <__assert_fail@plt+0x71e0>
   182a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a8:	ldr	r1, [fp, #8]
   182ac:	mul	r0, r0, r1
   182b0:	str	r0, [fp, #-28]	; 0xffffffe4
   182b4:	b	18d40 <__assert_fail@plt+0x7c68>
   182b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182bc:	ldr	r1, [fp, #8]
   182c0:	mul	r0, r0, r1
   182c4:	str	r0, [fp, #-28]	; 0xffffffe4
   182c8:	b	18d50 <__assert_fail@plt+0x7c78>
   182cc:	ldr	r0, [fp, #8]
   182d0:	cmp	r0, #0
   182d4:	bge	183e4 <__assert_fail@plt+0x730c>
   182d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182dc:	cmp	r0, #0
   182e0:	bge	1836c <__assert_fail@plt+0x7294>
   182e4:	b	18304 <__assert_fail@plt+0x722c>
   182e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182ec:	ldr	r1, [fp, #8]
   182f0:	mvn	r2, #0
   182f4:	udiv	r1, r2, r1
   182f8:	cmp	r0, r1
   182fc:	bcc	18480 <__assert_fail@plt+0x73a8>
   18300:	b	18494 <__assert_fail@plt+0x73bc>
   18304:	b	18308 <__assert_fail@plt+0x7230>
   18308:	ldr	r0, [pc, #1656]	; 18988 <__assert_fail@plt+0x78b0>
   1830c:	ldr	r1, [fp, #8]
   18310:	cmp	r1, r0
   18314:	blt	1832c <__assert_fail@plt+0x7254>
   18318:	b	18338 <__assert_fail@plt+0x7260>
   1831c:	ldr	r0, [fp, #8]
   18320:	movw	r1, #0
   18324:	cmp	r1, r0
   18328:	bge	18338 <__assert_fail@plt+0x7260>
   1832c:	movw	r0, #1
   18330:	str	r0, [fp, #-60]	; 0xffffffc4
   18334:	b	18350 <__assert_fail@plt+0x7278>
   18338:	ldr	r0, [fp, #8]
   1833c:	movw	r1, #0
   18340:	sub	r0, r1, r0
   18344:	mvn	r1, #0
   18348:	udiv	r0, r1, r0
   1834c:	str	r0, [fp, #-60]	; 0xffffffc4
   18350:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18358:	mvn	r2, #0
   1835c:	sub	r1, r2, r1
   18360:	cmp	r0, r1
   18364:	bls	18480 <__assert_fail@plt+0x73a8>
   18368:	b	18494 <__assert_fail@plt+0x73bc>
   1836c:	b	18370 <__assert_fail@plt+0x7298>
   18370:	b	183c8 <__assert_fail@plt+0x72f0>
   18374:	b	183c8 <__assert_fail@plt+0x72f0>
   18378:	ldr	r0, [fp, #8]
   1837c:	cmn	r0, #1
   18380:	bne	183c8 <__assert_fail@plt+0x72f0>
   18384:	b	18388 <__assert_fail@plt+0x72b0>
   18388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1838c:	add	r0, r0, #0
   18390:	movw	r1, #0
   18394:	cmp	r1, r0
   18398:	blt	18480 <__assert_fail@plt+0x73a8>
   1839c:	b	18494 <__assert_fail@plt+0x73bc>
   183a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183a4:	movw	r1, #0
   183a8:	cmp	r1, r0
   183ac:	bge	18494 <__assert_fail@plt+0x73bc>
   183b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183b4:	sub	r0, r0, #1
   183b8:	mvn	r1, #0
   183bc:	cmp	r1, r0
   183c0:	blt	18480 <__assert_fail@plt+0x73a8>
   183c4:	b	18494 <__assert_fail@plt+0x73bc>
   183c8:	ldr	r0, [fp, #8]
   183cc:	movw	r1, #0
   183d0:	sdiv	r0, r1, r0
   183d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183d8:	cmp	r0, r1
   183dc:	blt	18480 <__assert_fail@plt+0x73a8>
   183e0:	b	18494 <__assert_fail@plt+0x73bc>
   183e4:	ldr	r0, [fp, #8]
   183e8:	cmp	r0, #0
   183ec:	bne	183f4 <__assert_fail@plt+0x731c>
   183f0:	b	18494 <__assert_fail@plt+0x73bc>
   183f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183f8:	cmp	r0, #0
   183fc:	bge	18468 <__assert_fail@plt+0x7390>
   18400:	b	18404 <__assert_fail@plt+0x732c>
   18404:	b	1844c <__assert_fail@plt+0x7374>
   18408:	b	1844c <__assert_fail@plt+0x7374>
   1840c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18410:	cmn	r0, #1
   18414:	bne	1844c <__assert_fail@plt+0x7374>
   18418:	b	1841c <__assert_fail@plt+0x7344>
   1841c:	ldr	r0, [fp, #8]
   18420:	add	r0, r0, #0
   18424:	movw	r1, #0
   18428:	cmp	r1, r0
   1842c:	blt	18480 <__assert_fail@plt+0x73a8>
   18430:	b	18494 <__assert_fail@plt+0x73bc>
   18434:	ldr	r0, [fp, #8]
   18438:	sub	r0, r0, #1
   1843c:	mvn	r1, #0
   18440:	cmp	r1, r0
   18444:	blt	18480 <__assert_fail@plt+0x73a8>
   18448:	b	18494 <__assert_fail@plt+0x73bc>
   1844c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18450:	movw	r1, #0
   18454:	sdiv	r0, r1, r0
   18458:	ldr	r1, [fp, #8]
   1845c:	cmp	r0, r1
   18460:	blt	18480 <__assert_fail@plt+0x73a8>
   18464:	b	18494 <__assert_fail@plt+0x73bc>
   18468:	ldr	r0, [fp, #8]
   1846c:	mvn	r1, #0
   18470:	udiv	r0, r1, r0
   18474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18478:	cmp	r0, r1
   1847c:	bcs	18494 <__assert_fail@plt+0x73bc>
   18480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18484:	ldr	r1, [fp, #8]
   18488:	mul	r0, r0, r1
   1848c:	str	r0, [fp, #-28]	; 0xffffffe4
   18490:	b	18d40 <__assert_fail@plt+0x7c68>
   18494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18498:	ldr	r1, [fp, #8]
   1849c:	mul	r0, r0, r1
   184a0:	str	r0, [fp, #-28]	; 0xffffffe4
   184a4:	b	18d50 <__assert_fail@plt+0x7c78>
   184a8:	b	184ac <__assert_fail@plt+0x73d4>
   184ac:	b	184b0 <__assert_fail@plt+0x73d8>
   184b0:	ldr	r0, [fp, #8]
   184b4:	cmp	r0, #0
   184b8:	bge	185bc <__assert_fail@plt+0x74e4>
   184bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c0:	cmp	r0, #0
   184c4:	bge	18550 <__assert_fail@plt+0x7478>
   184c8:	b	184cc <__assert_fail@plt+0x73f4>
   184cc:	ldr	r0, [pc, #1056]	; 188f4 <__assert_fail@plt+0x781c>
   184d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184d4:	ldr	r2, [fp, #8]
   184d8:	sdiv	r0, r0, r2
   184dc:	cmp	r1, r0
   184e0:	blt	1864c <__assert_fail@plt+0x7574>
   184e4:	b	18660 <__assert_fail@plt+0x7588>
   184e8:	b	184ec <__assert_fail@plt+0x7414>
   184ec:	ldr	r0, [pc, #1172]	; 18988 <__assert_fail@plt+0x78b0>
   184f0:	ldr	r1, [fp, #8]
   184f4:	cmp	r1, r0
   184f8:	blt	18510 <__assert_fail@plt+0x7438>
   184fc:	b	1851c <__assert_fail@plt+0x7444>
   18500:	ldr	r0, [fp, #8]
   18504:	movw	r1, #0
   18508:	cmp	r1, r0
   1850c:	bge	1851c <__assert_fail@plt+0x7444>
   18510:	movw	r0, #0
   18514:	str	r0, [fp, #-64]	; 0xffffffc0
   18518:	b	18534 <__assert_fail@plt+0x745c>
   1851c:	ldr	r0, [pc, #976]	; 188f4 <__assert_fail@plt+0x781c>
   18520:	ldr	r1, [fp, #8]
   18524:	movw	r2, #0
   18528:	sub	r1, r2, r1
   1852c:	sdiv	r0, r0, r1
   18530:	str	r0, [fp, #-64]	; 0xffffffc0
   18534:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1853c:	mvn	r2, #0
   18540:	sub	r1, r2, r1
   18544:	cmp	r0, r1
   18548:	ble	1864c <__assert_fail@plt+0x7574>
   1854c:	b	18660 <__assert_fail@plt+0x7588>
   18550:	ldr	r0, [fp, #8]
   18554:	cmn	r0, #1
   18558:	bne	185a0 <__assert_fail@plt+0x74c8>
   1855c:	b	18560 <__assert_fail@plt+0x7488>
   18560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18564:	add	r0, r0, #-2147483648	; 0x80000000
   18568:	movw	r1, #0
   1856c:	cmp	r1, r0
   18570:	blt	1864c <__assert_fail@plt+0x7574>
   18574:	b	18660 <__assert_fail@plt+0x7588>
   18578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1857c:	movw	r1, #0
   18580:	cmp	r1, r0
   18584:	bge	18660 <__assert_fail@plt+0x7588>
   18588:	ldr	r0, [pc, #868]	; 188f4 <__assert_fail@plt+0x781c>
   1858c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18590:	sub	r1, r1, #1
   18594:	cmp	r0, r1
   18598:	blt	1864c <__assert_fail@plt+0x7574>
   1859c:	b	18660 <__assert_fail@plt+0x7588>
   185a0:	ldr	r0, [pc, #3136]	; 191e8 <__assert_fail@plt+0x8110>
   185a4:	ldr	r1, [fp, #8]
   185a8:	sdiv	r0, r0, r1
   185ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185b0:	cmp	r0, r1
   185b4:	blt	1864c <__assert_fail@plt+0x7574>
   185b8:	b	18660 <__assert_fail@plt+0x7588>
   185bc:	ldr	r0, [fp, #8]
   185c0:	cmp	r0, #0
   185c4:	bne	185cc <__assert_fail@plt+0x74f4>
   185c8:	b	18660 <__assert_fail@plt+0x7588>
   185cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185d0:	cmp	r0, #0
   185d4:	bge	18634 <__assert_fail@plt+0x755c>
   185d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185dc:	cmn	r0, #1
   185e0:	bne	18618 <__assert_fail@plt+0x7540>
   185e4:	b	185e8 <__assert_fail@plt+0x7510>
   185e8:	ldr	r0, [fp, #8]
   185ec:	add	r0, r0, #-2147483648	; 0x80000000
   185f0:	movw	r1, #0
   185f4:	cmp	r1, r0
   185f8:	blt	1864c <__assert_fail@plt+0x7574>
   185fc:	b	18660 <__assert_fail@plt+0x7588>
   18600:	ldr	r0, [pc, #748]	; 188f4 <__assert_fail@plt+0x781c>
   18604:	ldr	r1, [fp, #8]
   18608:	sub	r1, r1, #1
   1860c:	cmp	r0, r1
   18610:	blt	1864c <__assert_fail@plt+0x7574>
   18614:	b	18660 <__assert_fail@plt+0x7588>
   18618:	ldr	r0, [pc, #3016]	; 191e8 <__assert_fail@plt+0x8110>
   1861c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18620:	sdiv	r0, r0, r1
   18624:	ldr	r1, [fp, #8]
   18628:	cmp	r0, r1
   1862c:	blt	1864c <__assert_fail@plt+0x7574>
   18630:	b	18660 <__assert_fail@plt+0x7588>
   18634:	ldr	r0, [pc, #696]	; 188f4 <__assert_fail@plt+0x781c>
   18638:	ldr	r1, [fp, #8]
   1863c:	sdiv	r0, r0, r1
   18640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18644:	cmp	r0, r1
   18648:	bge	18660 <__assert_fail@plt+0x7588>
   1864c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18650:	ldr	r1, [fp, #8]
   18654:	mul	r0, r0, r1
   18658:	str	r0, [fp, #-28]	; 0xffffffe4
   1865c:	b	18d40 <__assert_fail@plt+0x7c68>
   18660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18664:	ldr	r1, [fp, #8]
   18668:	mul	r0, r0, r1
   1866c:	str	r0, [fp, #-28]	; 0xffffffe4
   18670:	b	18d50 <__assert_fail@plt+0x7c78>
   18674:	ldr	r0, [fp, #8]
   18678:	cmp	r0, #0
   1867c:	bge	1878c <__assert_fail@plt+0x76b4>
   18680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18684:	cmp	r0, #0
   18688:	bge	18714 <__assert_fail@plt+0x763c>
   1868c:	b	186ac <__assert_fail@plt+0x75d4>
   18690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18694:	ldr	r1, [fp, #8]
   18698:	mvn	r2, #0
   1869c:	udiv	r1, r2, r1
   186a0:	cmp	r0, r1
   186a4:	bcc	18828 <__assert_fail@plt+0x7750>
   186a8:	b	1883c <__assert_fail@plt+0x7764>
   186ac:	b	186b0 <__assert_fail@plt+0x75d8>
   186b0:	ldr	r0, [pc, #720]	; 18988 <__assert_fail@plt+0x78b0>
   186b4:	ldr	r1, [fp, #8]
   186b8:	cmp	r1, r0
   186bc:	blt	186d4 <__assert_fail@plt+0x75fc>
   186c0:	b	186e0 <__assert_fail@plt+0x7608>
   186c4:	ldr	r0, [fp, #8]
   186c8:	movw	r1, #0
   186cc:	cmp	r1, r0
   186d0:	bge	186e0 <__assert_fail@plt+0x7608>
   186d4:	movw	r0, #1
   186d8:	str	r0, [fp, #-68]	; 0xffffffbc
   186dc:	b	186f8 <__assert_fail@plt+0x7620>
   186e0:	ldr	r0, [fp, #8]
   186e4:	movw	r1, #0
   186e8:	sub	r0, r1, r0
   186ec:	mvn	r1, #0
   186f0:	udiv	r0, r1, r0
   186f4:	str	r0, [fp, #-68]	; 0xffffffbc
   186f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   186fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18700:	mvn	r2, #0
   18704:	sub	r1, r2, r1
   18708:	cmp	r0, r1
   1870c:	bls	18828 <__assert_fail@plt+0x7750>
   18710:	b	1883c <__assert_fail@plt+0x7764>
   18714:	b	18718 <__assert_fail@plt+0x7640>
   18718:	b	18770 <__assert_fail@plt+0x7698>
   1871c:	b	18770 <__assert_fail@plt+0x7698>
   18720:	ldr	r0, [fp, #8]
   18724:	cmn	r0, #1
   18728:	bne	18770 <__assert_fail@plt+0x7698>
   1872c:	b	18730 <__assert_fail@plt+0x7658>
   18730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18734:	add	r0, r0, #0
   18738:	movw	r1, #0
   1873c:	cmp	r1, r0
   18740:	blt	18828 <__assert_fail@plt+0x7750>
   18744:	b	1883c <__assert_fail@plt+0x7764>
   18748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1874c:	movw	r1, #0
   18750:	cmp	r1, r0
   18754:	bge	1883c <__assert_fail@plt+0x7764>
   18758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1875c:	sub	r0, r0, #1
   18760:	mvn	r1, #0
   18764:	cmp	r1, r0
   18768:	blt	18828 <__assert_fail@plt+0x7750>
   1876c:	b	1883c <__assert_fail@plt+0x7764>
   18770:	ldr	r0, [fp, #8]
   18774:	movw	r1, #0
   18778:	sdiv	r0, r1, r0
   1877c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18780:	cmp	r0, r1
   18784:	blt	18828 <__assert_fail@plt+0x7750>
   18788:	b	1883c <__assert_fail@plt+0x7764>
   1878c:	ldr	r0, [fp, #8]
   18790:	cmp	r0, #0
   18794:	bne	1879c <__assert_fail@plt+0x76c4>
   18798:	b	1883c <__assert_fail@plt+0x7764>
   1879c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187a0:	cmp	r0, #0
   187a4:	bge	18810 <__assert_fail@plt+0x7738>
   187a8:	b	187ac <__assert_fail@plt+0x76d4>
   187ac:	b	187f4 <__assert_fail@plt+0x771c>
   187b0:	b	187f4 <__assert_fail@plt+0x771c>
   187b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187b8:	cmn	r0, #1
   187bc:	bne	187f4 <__assert_fail@plt+0x771c>
   187c0:	b	187c4 <__assert_fail@plt+0x76ec>
   187c4:	ldr	r0, [fp, #8]
   187c8:	add	r0, r0, #0
   187cc:	movw	r1, #0
   187d0:	cmp	r1, r0
   187d4:	blt	18828 <__assert_fail@plt+0x7750>
   187d8:	b	1883c <__assert_fail@plt+0x7764>
   187dc:	ldr	r0, [fp, #8]
   187e0:	sub	r0, r0, #1
   187e4:	mvn	r1, #0
   187e8:	cmp	r1, r0
   187ec:	blt	18828 <__assert_fail@plt+0x7750>
   187f0:	b	1883c <__assert_fail@plt+0x7764>
   187f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187f8:	movw	r1, #0
   187fc:	sdiv	r0, r1, r0
   18800:	ldr	r1, [fp, #8]
   18804:	cmp	r0, r1
   18808:	blt	18828 <__assert_fail@plt+0x7750>
   1880c:	b	1883c <__assert_fail@plt+0x7764>
   18810:	ldr	r0, [fp, #8]
   18814:	mvn	r1, #0
   18818:	udiv	r0, r1, r0
   1881c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18820:	cmp	r0, r1
   18824:	bcs	1883c <__assert_fail@plt+0x7764>
   18828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1882c:	ldr	r1, [fp, #8]
   18830:	mul	r0, r0, r1
   18834:	str	r0, [fp, #-28]	; 0xffffffe4
   18838:	b	18d40 <__assert_fail@plt+0x7c68>
   1883c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18840:	ldr	r1, [fp, #8]
   18844:	mul	r0, r0, r1
   18848:	str	r0, [fp, #-28]	; 0xffffffe4
   1884c:	b	18d50 <__assert_fail@plt+0x7c78>
   18850:	b	18854 <__assert_fail@plt+0x777c>
   18854:	ldr	r0, [fp, #8]
   18858:	cmp	r0, #0
   1885c:	bge	189ec <__assert_fail@plt+0x7914>
   18860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18864:	cmp	r0, #0
   18868:	bge	18954 <__assert_fail@plt+0x787c>
   1886c:	b	18870 <__assert_fail@plt+0x7798>
   18870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18874:	ldr	r1, [fp, #8]
   18878:	asr	r3, r1, #31
   1887c:	mvn	r2, #0
   18880:	mvn	ip, #-2147483648	; 0x80000000
   18884:	str	r0, [fp, #-72]	; 0xffffffb8
   18888:	mov	r0, r2
   1888c:	str	r1, [fp, #-76]	; 0xffffffb4
   18890:	mov	r1, ip
   18894:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18898:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   1889c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   188a0:	subs	r0, r2, r0
   188a4:	rscs	r1, r1, r2, asr #31
   188a8:	str	r0, [fp, #-80]	; 0xffffffb0
   188ac:	str	r1, [fp, #-84]	; 0xffffffac
   188b0:	blt	18acc <__assert_fail@plt+0x79f4>
   188b4:	b	18ae0 <__assert_fail@plt+0x7a08>
   188b8:	b	188bc <__assert_fail@plt+0x77e4>
   188bc:	ldr	r0, [pc, #196]	; 18988 <__assert_fail@plt+0x78b0>
   188c0:	ldr	r1, [fp, #8]
   188c4:	cmp	r1, r0
   188c8:	blt	188e0 <__assert_fail@plt+0x7808>
   188cc:	b	188f8 <__assert_fail@plt+0x7820>
   188d0:	ldr	r0, [fp, #8]
   188d4:	movw	r1, #0
   188d8:	cmp	r1, r0
   188dc:	bge	188f8 <__assert_fail@plt+0x7820>
   188e0:	mov	r0, #0
   188e4:	mvn	r1, #0
   188e8:	str	r1, [fp, #-88]	; 0xffffffa8
   188ec:	str	r0, [fp, #-92]	; 0xffffffa4
   188f0:	b	1892c <__assert_fail@plt+0x7854>
   188f4:	svcvc	0x00ffffff
   188f8:	ldr	r0, [fp, #8]
   188fc:	rsb	r0, r0, #0
   18900:	asr	r3, r0, #31
   18904:	mvn	r1, #0
   18908:	mvn	r2, #-2147483648	; 0x80000000
   1890c:	str	r0, [fp, #-96]	; 0xffffffa0
   18910:	mov	r0, r1
   18914:	mov	r1, r2
   18918:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1891c:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   18920:	str	r0, [fp, #-88]	; 0xffffffa8
   18924:	str	r1, [fp, #-92]	; 0xffffffa4
   18928:	b	1892c <__assert_fail@plt+0x7854>
   1892c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18930:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18934:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18938:	mvn	r2, r2
   1893c:	subs	r1, r2, r1
   18940:	rscs	r0, r0, r2, asr #31
   18944:	str	r1, [fp, #-100]	; 0xffffff9c
   18948:	str	r0, [fp, #-104]	; 0xffffff98
   1894c:	bge	18acc <__assert_fail@plt+0x79f4>
   18950:	b	18ae0 <__assert_fail@plt+0x7a08>
   18954:	ldr	r0, [fp, #8]
   18958:	cmn	r0, #1
   1895c:	bne	189ac <__assert_fail@plt+0x78d4>
   18960:	b	18964 <__assert_fail@plt+0x788c>
   18964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18968:	mov	r1, #-2147483648	; 0x80000000
   1896c:	add	r1, r1, r0, asr #31
   18970:	rsbs	r0, r0, #0
   18974:	rscs	r1, r1, #0
   18978:	str	r0, [fp, #-108]	; 0xffffff94
   1897c:	str	r1, [fp, #-112]	; 0xffffff90
   18980:	blt	18acc <__assert_fail@plt+0x79f4>
   18984:	b	18ae0 <__assert_fail@plt+0x7a08>
   18988:	andhi	r0, r0, r1
   1898c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18990:	movw	r1, #0
   18994:	cmp	r1, r0
   18998:	bge	18ae0 <__assert_fail@plt+0x7a08>
   1899c:	mov	r0, #0
   189a0:	cmp	r0, #0
   189a4:	bne	18acc <__assert_fail@plt+0x79f4>
   189a8:	b	18ae0 <__assert_fail@plt+0x7a08>
   189ac:	ldr	r0, [fp, #8]
   189b0:	asr	r3, r0, #31
   189b4:	mov	r1, #0
   189b8:	mov	r2, #-2147483648	; 0x80000000
   189bc:	str	r0, [fp, #-116]	; 0xffffff8c
   189c0:	mov	r0, r1
   189c4:	mov	r1, r2
   189c8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   189cc:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   189d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189d4:	subs	r0, r0, r2
   189d8:	sbcs	r1, r1, r2, asr #31
   189dc:	str	r0, [fp, #-120]	; 0xffffff88
   189e0:	str	r1, [fp, #-124]	; 0xffffff84
   189e4:	blt	18acc <__assert_fail@plt+0x79f4>
   189e8:	b	18ae0 <__assert_fail@plt+0x7a08>
   189ec:	ldr	r0, [fp, #8]
   189f0:	cmp	r0, #0
   189f4:	bne	189fc <__assert_fail@plt+0x7924>
   189f8:	b	18ae0 <__assert_fail@plt+0x7a08>
   189fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a00:	cmp	r0, #0
   18a04:	bge	18a8c <__assert_fail@plt+0x79b4>
   18a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a0c:	cmn	r0, #1
   18a10:	bne	18a4c <__assert_fail@plt+0x7974>
   18a14:	b	18a18 <__assert_fail@plt+0x7940>
   18a18:	ldr	r0, [fp, #8]
   18a1c:	mov	r1, #-2147483648	; 0x80000000
   18a20:	add	r1, r1, r0, asr #31
   18a24:	rsbs	r0, r0, #0
   18a28:	rscs	r1, r1, #0
   18a2c:	str	r0, [fp, #-128]	; 0xffffff80
   18a30:	str	r1, [fp, #-132]	; 0xffffff7c
   18a34:	blt	18acc <__assert_fail@plt+0x79f4>
   18a38:	b	18ae0 <__assert_fail@plt+0x7a08>
   18a3c:	mov	r0, #0
   18a40:	cmp	r0, #0
   18a44:	bne	18acc <__assert_fail@plt+0x79f4>
   18a48:	b	18ae0 <__assert_fail@plt+0x7a08>
   18a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a50:	asr	r3, r0, #31
   18a54:	mov	r1, #0
   18a58:	mov	r2, #-2147483648	; 0x80000000
   18a5c:	str	r0, [fp, #-136]	; 0xffffff78
   18a60:	mov	r0, r1
   18a64:	mov	r1, r2
   18a68:	ldr	r2, [fp, #-136]	; 0xffffff78
   18a6c:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   18a70:	ldr	r2, [fp, #8]
   18a74:	subs	r0, r0, r2
   18a78:	sbcs	r1, r1, r2, asr #31
   18a7c:	str	r0, [fp, #-140]	; 0xffffff74
   18a80:	str	r1, [fp, #-144]	; 0xffffff70
   18a84:	blt	18acc <__assert_fail@plt+0x79f4>
   18a88:	b	18ae0 <__assert_fail@plt+0x7a08>
   18a8c:	ldr	r0, [fp, #8]
   18a90:	asr	r3, r0, #31
   18a94:	mvn	r1, #0
   18a98:	mvn	r2, #-2147483648	; 0x80000000
   18a9c:	str	r0, [fp, #-148]	; 0xffffff6c
   18aa0:	mov	r0, r1
   18aa4:	mov	r1, r2
   18aa8:	ldr	r2, [fp, #-148]	; 0xffffff6c
   18aac:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   18ab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ab4:	subs	r0, r0, r2
   18ab8:	sbcs	r1, r1, r2, asr #31
   18abc:	str	r0, [fp, #-152]	; 0xffffff68
   18ac0:	str	r1, [fp, #-156]	; 0xffffff64
   18ac4:	bge	18ae0 <__assert_fail@plt+0x7a08>
   18ac8:	b	18acc <__assert_fail@plt+0x79f4>
   18acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad0:	ldr	r1, [fp, #8]
   18ad4:	mul	r0, r0, r1
   18ad8:	str	r0, [fp, #-28]	; 0xffffffe4
   18adc:	b	18d40 <__assert_fail@plt+0x7c68>
   18ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ae4:	ldr	r1, [fp, #8]
   18ae8:	mul	r0, r0, r1
   18aec:	str	r0, [fp, #-28]	; 0xffffffe4
   18af0:	b	18d50 <__assert_fail@plt+0x7c78>
   18af4:	ldr	r0, [fp, #8]
   18af8:	cmp	r0, #0
   18afc:	bge	18c5c <__assert_fail@plt+0x7b84>
   18b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b04:	cmp	r0, #0
   18b08:	bge	18be4 <__assert_fail@plt+0x7b0c>
   18b0c:	b	18b54 <__assert_fail@plt+0x7a7c>
   18b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b14:	ldr	r1, [fp, #8]
   18b18:	asr	r3, r1, #31
   18b1c:	mvn	r2, #0
   18b20:	str	r0, [fp, #-160]	; 0xffffff60
   18b24:	mov	r0, r2
   18b28:	str	r1, [fp, #-164]	; 0xffffff5c
   18b2c:	mov	r1, r2
   18b30:	ldr	r2, [fp, #-164]	; 0xffffff5c
   18b34:	bl	1eea4 <__assert_fail@plt+0xddcc>
   18b38:	ldr	r2, [fp, #-160]	; 0xffffff60
   18b3c:	subs	r0, r2, r0
   18b40:	rscs	r1, r1, r2, asr #31
   18b44:	str	r0, [fp, #-168]	; 0xffffff58
   18b48:	str	r1, [fp, #-172]	; 0xffffff54
   18b4c:	bcc	18d18 <__assert_fail@plt+0x7c40>
   18b50:	b	18d2c <__assert_fail@plt+0x7c54>
   18b54:	b	18b58 <__assert_fail@plt+0x7a80>
   18b58:	ldr	r0, [pc, #-472]	; 18988 <__assert_fail@plt+0x78b0>
   18b5c:	ldr	r1, [fp, #8]
   18b60:	cmp	r1, r0
   18b64:	blt	18b7c <__assert_fail@plt+0x7aa4>
   18b68:	b	18b90 <__assert_fail@plt+0x7ab8>
   18b6c:	ldr	r0, [fp, #8]
   18b70:	movw	r1, #0
   18b74:	cmp	r1, r0
   18b78:	bge	18b90 <__assert_fail@plt+0x7ab8>
   18b7c:	mov	r0, #1
   18b80:	mvn	r1, #0
   18b84:	str	r1, [fp, #-176]	; 0xffffff50
   18b88:	str	r0, [fp, #-180]	; 0xffffff4c
   18b8c:	b	18bbc <__assert_fail@plt+0x7ae4>
   18b90:	ldr	r0, [fp, #8]
   18b94:	rsb	r0, r0, #0
   18b98:	asr	r3, r0, #31
   18b9c:	mvn	r1, #0
   18ba0:	str	r0, [fp, #-184]	; 0xffffff48
   18ba4:	mov	r0, r1
   18ba8:	ldr	r2, [fp, #-184]	; 0xffffff48
   18bac:	bl	1eea4 <__assert_fail@plt+0xddcc>
   18bb0:	str	r0, [fp, #-176]	; 0xffffff50
   18bb4:	str	r1, [fp, #-180]	; 0xffffff4c
   18bb8:	b	18bbc <__assert_fail@plt+0x7ae4>
   18bbc:	ldr	r0, [fp, #-180]	; 0xffffff4c
   18bc0:	ldr	r1, [fp, #-176]	; 0xffffff50
   18bc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18bc8:	mvn	r2, r2
   18bcc:	subs	r1, r2, r1
   18bd0:	rscs	r0, r0, r2, asr #31
   18bd4:	str	r1, [sp, #188]	; 0xbc
   18bd8:	str	r0, [sp, #184]	; 0xb8
   18bdc:	bcs	18d18 <__assert_fail@plt+0x7c40>
   18be0:	b	18d2c <__assert_fail@plt+0x7c54>
   18be4:	b	18be8 <__assert_fail@plt+0x7b10>
   18be8:	b	18c40 <__assert_fail@plt+0x7b68>
   18bec:	b	18c40 <__assert_fail@plt+0x7b68>
   18bf0:	ldr	r0, [fp, #8]
   18bf4:	cmn	r0, #1
   18bf8:	bne	18c40 <__assert_fail@plt+0x7b68>
   18bfc:	b	18c00 <__assert_fail@plt+0x7b28>
   18c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c04:	add	r0, r0, #0
   18c08:	movw	r1, #0
   18c0c:	cmp	r1, r0
   18c10:	blt	18d18 <__assert_fail@plt+0x7c40>
   18c14:	b	18d2c <__assert_fail@plt+0x7c54>
   18c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c1c:	movw	r1, #0
   18c20:	cmp	r1, r0
   18c24:	bge	18d2c <__assert_fail@plt+0x7c54>
   18c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c2c:	sub	r0, r0, #1
   18c30:	mvn	r1, #0
   18c34:	cmp	r1, r0
   18c38:	blt	18d18 <__assert_fail@plt+0x7c40>
   18c3c:	b	18d2c <__assert_fail@plt+0x7c54>
   18c40:	ldr	r0, [fp, #8]
   18c44:	movw	r1, #0
   18c48:	sdiv	r0, r1, r0
   18c4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c50:	cmp	r0, r1
   18c54:	blt	18d18 <__assert_fail@plt+0x7c40>
   18c58:	b	18d2c <__assert_fail@plt+0x7c54>
   18c5c:	ldr	r0, [fp, #8]
   18c60:	cmp	r0, #0
   18c64:	bne	18c6c <__assert_fail@plt+0x7b94>
   18c68:	b	18d2c <__assert_fail@plt+0x7c54>
   18c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c70:	cmp	r0, #0
   18c74:	bge	18ce0 <__assert_fail@plt+0x7c08>
   18c78:	b	18c7c <__assert_fail@plt+0x7ba4>
   18c7c:	b	18cc4 <__assert_fail@plt+0x7bec>
   18c80:	b	18cc4 <__assert_fail@plt+0x7bec>
   18c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c88:	cmn	r0, #1
   18c8c:	bne	18cc4 <__assert_fail@plt+0x7bec>
   18c90:	b	18c94 <__assert_fail@plt+0x7bbc>
   18c94:	ldr	r0, [fp, #8]
   18c98:	add	r0, r0, #0
   18c9c:	movw	r1, #0
   18ca0:	cmp	r1, r0
   18ca4:	blt	18d18 <__assert_fail@plt+0x7c40>
   18ca8:	b	18d2c <__assert_fail@plt+0x7c54>
   18cac:	ldr	r0, [fp, #8]
   18cb0:	sub	r0, r0, #1
   18cb4:	mvn	r1, #0
   18cb8:	cmp	r1, r0
   18cbc:	blt	18d18 <__assert_fail@plt+0x7c40>
   18cc0:	b	18d2c <__assert_fail@plt+0x7c54>
   18cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc8:	movw	r1, #0
   18ccc:	sdiv	r0, r1, r0
   18cd0:	ldr	r1, [fp, #8]
   18cd4:	cmp	r0, r1
   18cd8:	blt	18d18 <__assert_fail@plt+0x7c40>
   18cdc:	b	18d2c <__assert_fail@plt+0x7c54>
   18ce0:	ldr	r0, [fp, #8]
   18ce4:	asr	r3, r0, #31
   18ce8:	mvn	r1, #0
   18cec:	str	r0, [sp, #180]	; 0xb4
   18cf0:	mov	r0, r1
   18cf4:	ldr	r2, [sp, #180]	; 0xb4
   18cf8:	bl	1eea4 <__assert_fail@plt+0xddcc>
   18cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d00:	subs	r0, r0, r2
   18d04:	sbcs	r1, r1, r2, asr #31
   18d08:	str	r0, [sp, #176]	; 0xb0
   18d0c:	str	r1, [sp, #172]	; 0xac
   18d10:	bcs	18d2c <__assert_fail@plt+0x7c54>
   18d14:	b	18d18 <__assert_fail@plt+0x7c40>
   18d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d1c:	ldr	r1, [fp, #8]
   18d20:	mul	r0, r0, r1
   18d24:	str	r0, [fp, #-28]	; 0xffffffe4
   18d28:	b	18d40 <__assert_fail@plt+0x7c68>
   18d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d30:	ldr	r1, [fp, #8]
   18d34:	mul	r0, r0, r1
   18d38:	str	r0, [fp, #-28]	; 0xffffffe4
   18d3c:	b	18d50 <__assert_fail@plt+0x7c78>
   18d40:	ldr	r0, [pc, #-1108]	; 188f4 <__assert_fail@plt+0x781c>
   18d44:	str	r0, [sp, #168]	; 0xa8
   18d48:	b	18d70 <__assert_fail@plt+0x7c98>
   18d4c:			; <UNDEFINED> instruction: 0xffff8000
   18d50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d54:	cmp	r0, #64	; 0x40
   18d58:	movw	r0, #0
   18d5c:	movlt	r0, #1
   18d60:	tst	r0, #1
   18d64:	movw	r0, #64	; 0x40
   18d68:	moveq	r0, #0
   18d6c:	str	r0, [sp, #168]	; 0xa8
   18d70:	ldr	r0, [sp, #168]	; 0xa8
   18d74:	str	r0, [fp, #-32]	; 0xffffffe0
   18d78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d7c:	cmp	r0, #0
   18d80:	beq	18db0 <__assert_fail@plt+0x7cd8>
   18d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d88:	ldr	r1, [fp, #8]
   18d8c:	sdiv	r0, r0, r1
   18d90:	str	r0, [fp, #-24]	; 0xffffffe8
   18d94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d98:	mov	r1, r0
   18d9c:	ldr	r2, [fp, #8]
   18da0:	sdiv	r3, r0, r2
   18da4:	mls	r0, r3, r2, r0
   18da8:	sub	r0, r1, r0
   18dac:	str	r0, [fp, #-28]	; 0xffffffe4
   18db0:	ldr	r0, [fp, #-4]
   18db4:	movw	r1, #0
   18db8:	cmp	r0, r1
   18dbc:	bne	18dcc <__assert_fail@plt+0x7cf4>
   18dc0:	ldr	r0, [fp, #-8]
   18dc4:	movw	r1, #0
   18dc8:	str	r1, [r0]
   18dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18dd4:	sub	r0, r0, r1
   18dd8:	ldr	r1, [fp, #-12]
   18ddc:	cmp	r0, r1
   18de0:	bge	1a218 <__assert_fail@plt+0x9140>
   18de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18de8:	ldr	r1, [fp, #-12]
   18dec:	add	r1, r0, r1
   18df0:	mov	r2, #1
   18df4:	cmp	r1, r0
   18df8:	movwvc	r2, #0
   18dfc:	str	r1, [fp, #-24]	; 0xffffffe8
   18e00:	tst	r2, #1
   18e04:	bne	1a214 <__assert_fail@plt+0x913c>
   18e08:	ldr	r0, [fp, #-16]
   18e0c:	movw	r1, #0
   18e10:	cmp	r1, r0
   18e14:	bgt	18e28 <__assert_fail@plt+0x7d50>
   18e18:	ldr	r0, [fp, #-16]
   18e1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e20:	cmp	r0, r1
   18e24:	blt	1a214 <__assert_fail@plt+0x913c>
   18e28:	b	19204 <__assert_fail@plt+0x812c>
   18e2c:	b	18e30 <__assert_fail@plt+0x7d58>
   18e30:	ldr	r0, [fp, #8]
   18e34:	cmp	r0, #0
   18e38:	bge	18f4c <__assert_fail@plt+0x7e74>
   18e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e40:	cmp	r0, #0
   18e44:	bge	18ed0 <__assert_fail@plt+0x7df8>
   18e48:	b	18e4c <__assert_fail@plt+0x7d74>
   18e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e50:	ldr	r1, [fp, #8]
   18e54:	movw	r2, #127	; 0x7f
   18e58:	sdiv	r1, r2, r1
   18e5c:	cmp	r0, r1
   18e60:	blt	18fec <__assert_fail@plt+0x7f14>
   18e64:	b	19004 <__assert_fail@plt+0x7f2c>
   18e68:	b	18e6c <__assert_fail@plt+0x7d94>
   18e6c:	ldr	r0, [pc, #-1260]	; 18988 <__assert_fail@plt+0x78b0>
   18e70:	ldr	r1, [fp, #8]
   18e74:	cmp	r1, r0
   18e78:	blt	18e90 <__assert_fail@plt+0x7db8>
   18e7c:	b	18e9c <__assert_fail@plt+0x7dc4>
   18e80:	ldr	r0, [fp, #8]
   18e84:	movw	r1, #0
   18e88:	cmp	r1, r0
   18e8c:	bge	18e9c <__assert_fail@plt+0x7dc4>
   18e90:	movw	r0, #0
   18e94:	str	r0, [sp, #164]	; 0xa4
   18e98:	b	18eb4 <__assert_fail@plt+0x7ddc>
   18e9c:	ldr	r0, [fp, #8]
   18ea0:	movw	r1, #0
   18ea4:	sub	r0, r1, r0
   18ea8:	movw	r1, #127	; 0x7f
   18eac:	sdiv	r0, r1, r0
   18eb0:	str	r0, [sp, #164]	; 0xa4
   18eb4:	ldr	r0, [sp, #164]	; 0xa4
   18eb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ebc:	mvn	r2, #0
   18ec0:	sub	r1, r2, r1
   18ec4:	cmp	r0, r1
   18ec8:	ble	18fec <__assert_fail@plt+0x7f14>
   18ecc:	b	19004 <__assert_fail@plt+0x7f2c>
   18ed0:	b	18ed4 <__assert_fail@plt+0x7dfc>
   18ed4:	b	18f30 <__assert_fail@plt+0x7e58>
   18ed8:	b	18f30 <__assert_fail@plt+0x7e58>
   18edc:	ldr	r0, [fp, #8]
   18ee0:	cmn	r0, #1
   18ee4:	bne	18f30 <__assert_fail@plt+0x7e58>
   18ee8:	b	18eec <__assert_fail@plt+0x7e14>
   18eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef0:	mvn	r1, #127	; 0x7f
   18ef4:	add	r0, r0, r1
   18ef8:	movw	r1, #0
   18efc:	cmp	r1, r0
   18f00:	blt	18fec <__assert_fail@plt+0x7f14>
   18f04:	b	19004 <__assert_fail@plt+0x7f2c>
   18f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f0c:	movw	r1, #0
   18f10:	cmp	r1, r0
   18f14:	bge	19004 <__assert_fail@plt+0x7f2c>
   18f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f1c:	sub	r0, r0, #1
   18f20:	movw	r1, #127	; 0x7f
   18f24:	cmp	r1, r0
   18f28:	blt	18fec <__assert_fail@plt+0x7f14>
   18f2c:	b	19004 <__assert_fail@plt+0x7f2c>
   18f30:	ldr	r0, [fp, #8]
   18f34:	mvn	r1, #127	; 0x7f
   18f38:	sdiv	r0, r1, r0
   18f3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f40:	cmp	r0, r1
   18f44:	blt	18fec <__assert_fail@plt+0x7f14>
   18f48:	b	19004 <__assert_fail@plt+0x7f2c>
   18f4c:	ldr	r0, [fp, #8]
   18f50:	cmp	r0, #0
   18f54:	bne	18f5c <__assert_fail@plt+0x7e84>
   18f58:	b	19004 <__assert_fail@plt+0x7f2c>
   18f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f60:	cmp	r0, #0
   18f64:	bge	18fd4 <__assert_fail@plt+0x7efc>
   18f68:	b	18f6c <__assert_fail@plt+0x7e94>
   18f6c:	b	18fb8 <__assert_fail@plt+0x7ee0>
   18f70:	b	18fb8 <__assert_fail@plt+0x7ee0>
   18f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f78:	cmn	r0, #1
   18f7c:	bne	18fb8 <__assert_fail@plt+0x7ee0>
   18f80:	b	18f84 <__assert_fail@plt+0x7eac>
   18f84:	ldr	r0, [fp, #8]
   18f88:	mvn	r1, #127	; 0x7f
   18f8c:	add	r0, r0, r1
   18f90:	movw	r1, #0
   18f94:	cmp	r1, r0
   18f98:	blt	18fec <__assert_fail@plt+0x7f14>
   18f9c:	b	19004 <__assert_fail@plt+0x7f2c>
   18fa0:	ldr	r0, [fp, #8]
   18fa4:	sub	r0, r0, #1
   18fa8:	movw	r1, #127	; 0x7f
   18fac:	cmp	r1, r0
   18fb0:	blt	18fec <__assert_fail@plt+0x7f14>
   18fb4:	b	19004 <__assert_fail@plt+0x7f2c>
   18fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fbc:	mvn	r1, #127	; 0x7f
   18fc0:	sdiv	r0, r1, r0
   18fc4:	ldr	r1, [fp, #8]
   18fc8:	cmp	r0, r1
   18fcc:	blt	18fec <__assert_fail@plt+0x7f14>
   18fd0:	b	19004 <__assert_fail@plt+0x7f2c>
   18fd4:	ldr	r0, [fp, #8]
   18fd8:	movw	r1, #127	; 0x7f
   18fdc:	sdiv	r0, r1, r0
   18fe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fe4:	cmp	r0, r1
   18fe8:	bge	19004 <__assert_fail@plt+0x7f2c>
   18fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff0:	ldr	r1, [fp, #8]
   18ff4:	mul	r0, r0, r1
   18ff8:	sxtb	r0, r0
   18ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   19000:	b	1a214 <__assert_fail@plt+0x913c>
   19004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19008:	ldr	r1, [fp, #8]
   1900c:	mul	r0, r0, r1
   19010:	sxtb	r0, r0
   19014:	str	r0, [fp, #-28]	; 0xffffffe4
   19018:	b	1a218 <__assert_fail@plt+0x9140>
   1901c:	ldr	r0, [fp, #8]
   19020:	cmp	r0, #0
   19024:	bge	19134 <__assert_fail@plt+0x805c>
   19028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1902c:	cmp	r0, #0
   19030:	bge	190bc <__assert_fail@plt+0x7fe4>
   19034:	b	19038 <__assert_fail@plt+0x7f60>
   19038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1903c:	ldr	r1, [fp, #8]
   19040:	movw	r2, #255	; 0xff
   19044:	sdiv	r1, r2, r1
   19048:	cmp	r0, r1
   1904c:	blt	191d0 <__assert_fail@plt+0x80f8>
   19050:	b	191ec <__assert_fail@plt+0x8114>
   19054:	b	19058 <__assert_fail@plt+0x7f80>
   19058:	ldr	r0, [pc, #-1752]	; 18988 <__assert_fail@plt+0x78b0>
   1905c:	ldr	r1, [fp, #8]
   19060:	cmp	r1, r0
   19064:	blt	1907c <__assert_fail@plt+0x7fa4>
   19068:	b	19088 <__assert_fail@plt+0x7fb0>
   1906c:	ldr	r0, [fp, #8]
   19070:	movw	r1, #0
   19074:	cmp	r1, r0
   19078:	bge	19088 <__assert_fail@plt+0x7fb0>
   1907c:	movw	r0, #0
   19080:	str	r0, [sp, #160]	; 0xa0
   19084:	b	190a0 <__assert_fail@plt+0x7fc8>
   19088:	ldr	r0, [fp, #8]
   1908c:	movw	r1, #0
   19090:	sub	r0, r1, r0
   19094:	movw	r1, #255	; 0xff
   19098:	sdiv	r0, r1, r0
   1909c:	str	r0, [sp, #160]	; 0xa0
   190a0:	ldr	r0, [sp, #160]	; 0xa0
   190a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190a8:	mvn	r2, #0
   190ac:	sub	r1, r2, r1
   190b0:	cmp	r0, r1
   190b4:	ble	191d0 <__assert_fail@plt+0x80f8>
   190b8:	b	191ec <__assert_fail@plt+0x8114>
   190bc:	b	190c0 <__assert_fail@plt+0x7fe8>
   190c0:	b	19118 <__assert_fail@plt+0x8040>
   190c4:	b	19118 <__assert_fail@plt+0x8040>
   190c8:	ldr	r0, [fp, #8]
   190cc:	cmn	r0, #1
   190d0:	bne	19118 <__assert_fail@plt+0x8040>
   190d4:	b	190d8 <__assert_fail@plt+0x8000>
   190d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190dc:	add	r0, r0, #0
   190e0:	movw	r1, #0
   190e4:	cmp	r1, r0
   190e8:	blt	191d0 <__assert_fail@plt+0x80f8>
   190ec:	b	191ec <__assert_fail@plt+0x8114>
   190f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190f4:	movw	r1, #0
   190f8:	cmp	r1, r0
   190fc:	bge	191ec <__assert_fail@plt+0x8114>
   19100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19104:	sub	r0, r0, #1
   19108:	mvn	r1, #0
   1910c:	cmp	r1, r0
   19110:	blt	191d0 <__assert_fail@plt+0x80f8>
   19114:	b	191ec <__assert_fail@plt+0x8114>
   19118:	ldr	r0, [fp, #8]
   1911c:	movw	r1, #0
   19120:	sdiv	r0, r1, r0
   19124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19128:	cmp	r0, r1
   1912c:	blt	191d0 <__assert_fail@plt+0x80f8>
   19130:	b	191ec <__assert_fail@plt+0x8114>
   19134:	ldr	r0, [fp, #8]
   19138:	cmp	r0, #0
   1913c:	bne	19144 <__assert_fail@plt+0x806c>
   19140:	b	191ec <__assert_fail@plt+0x8114>
   19144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19148:	cmp	r0, #0
   1914c:	bge	191b8 <__assert_fail@plt+0x80e0>
   19150:	b	19154 <__assert_fail@plt+0x807c>
   19154:	b	1919c <__assert_fail@plt+0x80c4>
   19158:	b	1919c <__assert_fail@plt+0x80c4>
   1915c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19160:	cmn	r0, #1
   19164:	bne	1919c <__assert_fail@plt+0x80c4>
   19168:	b	1916c <__assert_fail@plt+0x8094>
   1916c:	ldr	r0, [fp, #8]
   19170:	add	r0, r0, #0
   19174:	movw	r1, #0
   19178:	cmp	r1, r0
   1917c:	blt	191d0 <__assert_fail@plt+0x80f8>
   19180:	b	191ec <__assert_fail@plt+0x8114>
   19184:	ldr	r0, [fp, #8]
   19188:	sub	r0, r0, #1
   1918c:	mvn	r1, #0
   19190:	cmp	r1, r0
   19194:	blt	191d0 <__assert_fail@plt+0x80f8>
   19198:	b	191ec <__assert_fail@plt+0x8114>
   1919c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a0:	movw	r1, #0
   191a4:	sdiv	r0, r1, r0
   191a8:	ldr	r1, [fp, #8]
   191ac:	cmp	r0, r1
   191b0:	blt	191d0 <__assert_fail@plt+0x80f8>
   191b4:	b	191ec <__assert_fail@plt+0x8114>
   191b8:	ldr	r0, [fp, #8]
   191bc:	movw	r1, #255	; 0xff
   191c0:	sdiv	r0, r1, r0
   191c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191c8:	cmp	r0, r1
   191cc:	bge	191ec <__assert_fail@plt+0x8114>
   191d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d4:	ldr	r1, [fp, #8]
   191d8:	mul	r0, r0, r1
   191dc:	and	r0, r0, #255	; 0xff
   191e0:	str	r0, [fp, #-28]	; 0xffffffe4
   191e4:	b	1a214 <__assert_fail@plt+0x913c>
   191e8:	andhi	r0, r0, r0
   191ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191f0:	ldr	r1, [fp, #8]
   191f4:	mul	r0, r0, r1
   191f8:	and	r0, r0, #255	; 0xff
   191fc:	str	r0, [fp, #-28]	; 0xffffffe4
   19200:	b	1a218 <__assert_fail@plt+0x9140>
   19204:	b	195dc <__assert_fail@plt+0x8504>
   19208:	b	1920c <__assert_fail@plt+0x8134>
   1920c:	ldr	r0, [fp, #8]
   19210:	cmp	r0, #0
   19214:	bge	19328 <__assert_fail@plt+0x8250>
   19218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1921c:	cmp	r0, #0
   19220:	bge	192ac <__assert_fail@plt+0x81d4>
   19224:	b	19228 <__assert_fail@plt+0x8150>
   19228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1922c:	ldr	r1, [fp, #8]
   19230:	movw	r2, #32767	; 0x7fff
   19234:	sdiv	r1, r2, r1
   19238:	cmp	r0, r1
   1923c:	blt	193c8 <__assert_fail@plt+0x82f0>
   19240:	b	193e0 <__assert_fail@plt+0x8308>
   19244:	b	19248 <__assert_fail@plt+0x8170>
   19248:	ldr	r0, [pc, #4084]	; 1a244 <__assert_fail@plt+0x916c>
   1924c:	ldr	r1, [fp, #8]
   19250:	cmp	r1, r0
   19254:	blt	1926c <__assert_fail@plt+0x8194>
   19258:	b	19278 <__assert_fail@plt+0x81a0>
   1925c:	ldr	r0, [fp, #8]
   19260:	movw	r1, #0
   19264:	cmp	r1, r0
   19268:	bge	19278 <__assert_fail@plt+0x81a0>
   1926c:	movw	r0, #0
   19270:	str	r0, [sp, #156]	; 0x9c
   19274:	b	19290 <__assert_fail@plt+0x81b8>
   19278:	ldr	r0, [fp, #8]
   1927c:	movw	r1, #0
   19280:	sub	r0, r1, r0
   19284:	movw	r1, #32767	; 0x7fff
   19288:	sdiv	r0, r1, r0
   1928c:	str	r0, [sp, #156]	; 0x9c
   19290:	ldr	r0, [sp, #156]	; 0x9c
   19294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19298:	mvn	r2, #0
   1929c:	sub	r1, r2, r1
   192a0:	cmp	r0, r1
   192a4:	ble	193c8 <__assert_fail@plt+0x82f0>
   192a8:	b	193e0 <__assert_fail@plt+0x8308>
   192ac:	b	192b0 <__assert_fail@plt+0x81d8>
   192b0:	b	1930c <__assert_fail@plt+0x8234>
   192b4:	b	1930c <__assert_fail@plt+0x8234>
   192b8:	ldr	r0, [fp, #8]
   192bc:	cmn	r0, #1
   192c0:	bne	1930c <__assert_fail@plt+0x8234>
   192c4:	b	192c8 <__assert_fail@plt+0x81f0>
   192c8:	ldr	r0, [pc, #3964]	; 1a24c <__assert_fail@plt+0x9174>
   192cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192d0:	add	r0, r1, r0
   192d4:	movw	r1, #0
   192d8:	cmp	r1, r0
   192dc:	blt	193c8 <__assert_fail@plt+0x82f0>
   192e0:	b	193e0 <__assert_fail@plt+0x8308>
   192e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192e8:	movw	r1, #0
   192ec:	cmp	r1, r0
   192f0:	bge	193e0 <__assert_fail@plt+0x8308>
   192f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192f8:	sub	r0, r0, #1
   192fc:	movw	r1, #32767	; 0x7fff
   19300:	cmp	r1, r0
   19304:	blt	193c8 <__assert_fail@plt+0x82f0>
   19308:	b	193e0 <__assert_fail@plt+0x8308>
   1930c:	ldr	r0, [pc, #3896]	; 1a24c <__assert_fail@plt+0x9174>
   19310:	ldr	r1, [fp, #8]
   19314:	sdiv	r0, r0, r1
   19318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1931c:	cmp	r0, r1
   19320:	blt	193c8 <__assert_fail@plt+0x82f0>
   19324:	b	193e0 <__assert_fail@plt+0x8308>
   19328:	ldr	r0, [fp, #8]
   1932c:	cmp	r0, #0
   19330:	bne	19338 <__assert_fail@plt+0x8260>
   19334:	b	193e0 <__assert_fail@plt+0x8308>
   19338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1933c:	cmp	r0, #0
   19340:	bge	193b0 <__assert_fail@plt+0x82d8>
   19344:	b	19348 <__assert_fail@plt+0x8270>
   19348:	b	19394 <__assert_fail@plt+0x82bc>
   1934c:	b	19394 <__assert_fail@plt+0x82bc>
   19350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19354:	cmn	r0, #1
   19358:	bne	19394 <__assert_fail@plt+0x82bc>
   1935c:	b	19360 <__assert_fail@plt+0x8288>
   19360:	ldr	r0, [pc, #3812]	; 1a24c <__assert_fail@plt+0x9174>
   19364:	ldr	r1, [fp, #8]
   19368:	add	r0, r1, r0
   1936c:	movw	r1, #0
   19370:	cmp	r1, r0
   19374:	blt	193c8 <__assert_fail@plt+0x82f0>
   19378:	b	193e0 <__assert_fail@plt+0x8308>
   1937c:	ldr	r0, [fp, #8]
   19380:	sub	r0, r0, #1
   19384:	movw	r1, #32767	; 0x7fff
   19388:	cmp	r1, r0
   1938c:	blt	193c8 <__assert_fail@plt+0x82f0>
   19390:	b	193e0 <__assert_fail@plt+0x8308>
   19394:	ldr	r0, [pc, #3760]	; 1a24c <__assert_fail@plt+0x9174>
   19398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1939c:	sdiv	r0, r0, r1
   193a0:	ldr	r1, [fp, #8]
   193a4:	cmp	r0, r1
   193a8:	blt	193c8 <__assert_fail@plt+0x82f0>
   193ac:	b	193e0 <__assert_fail@plt+0x8308>
   193b0:	ldr	r0, [fp, #8]
   193b4:	movw	r1, #32767	; 0x7fff
   193b8:	sdiv	r0, r1, r0
   193bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193c0:	cmp	r0, r1
   193c4:	bge	193e0 <__assert_fail@plt+0x8308>
   193c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193cc:	ldr	r1, [fp, #8]
   193d0:	mul	r0, r0, r1
   193d4:	sxth	r0, r0
   193d8:	str	r0, [fp, #-28]	; 0xffffffe4
   193dc:	b	1a214 <__assert_fail@plt+0x913c>
   193e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193e4:	ldr	r1, [fp, #8]
   193e8:	mul	r0, r0, r1
   193ec:	sxth	r0, r0
   193f0:	str	r0, [fp, #-28]	; 0xffffffe4
   193f4:	b	1a218 <__assert_fail@plt+0x9140>
   193f8:	ldr	r0, [fp, #8]
   193fc:	cmp	r0, #0
   19400:	bge	19510 <__assert_fail@plt+0x8438>
   19404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19408:	cmp	r0, #0
   1940c:	bge	19498 <__assert_fail@plt+0x83c0>
   19410:	b	19414 <__assert_fail@plt+0x833c>
   19414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19418:	ldr	r1, [fp, #8]
   1941c:	movw	r2, #65535	; 0xffff
   19420:	sdiv	r1, r2, r1
   19424:	cmp	r0, r1
   19428:	blt	195ac <__assert_fail@plt+0x84d4>
   1942c:	b	195c4 <__assert_fail@plt+0x84ec>
   19430:	b	19434 <__assert_fail@plt+0x835c>
   19434:	ldr	r0, [pc, #3592]	; 1a244 <__assert_fail@plt+0x916c>
   19438:	ldr	r1, [fp, #8]
   1943c:	cmp	r1, r0
   19440:	blt	19458 <__assert_fail@plt+0x8380>
   19444:	b	19464 <__assert_fail@plt+0x838c>
   19448:	ldr	r0, [fp, #8]
   1944c:	movw	r1, #0
   19450:	cmp	r1, r0
   19454:	bge	19464 <__assert_fail@plt+0x838c>
   19458:	movw	r0, #0
   1945c:	str	r0, [sp, #152]	; 0x98
   19460:	b	1947c <__assert_fail@plt+0x83a4>
   19464:	ldr	r0, [fp, #8]
   19468:	movw	r1, #0
   1946c:	sub	r0, r1, r0
   19470:	movw	r1, #65535	; 0xffff
   19474:	sdiv	r0, r1, r0
   19478:	str	r0, [sp, #152]	; 0x98
   1947c:	ldr	r0, [sp, #152]	; 0x98
   19480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19484:	mvn	r2, #0
   19488:	sub	r1, r2, r1
   1948c:	cmp	r0, r1
   19490:	ble	195ac <__assert_fail@plt+0x84d4>
   19494:	b	195c4 <__assert_fail@plt+0x84ec>
   19498:	b	1949c <__assert_fail@plt+0x83c4>
   1949c:	b	194f4 <__assert_fail@plt+0x841c>
   194a0:	b	194f4 <__assert_fail@plt+0x841c>
   194a4:	ldr	r0, [fp, #8]
   194a8:	cmn	r0, #1
   194ac:	bne	194f4 <__assert_fail@plt+0x841c>
   194b0:	b	194b4 <__assert_fail@plt+0x83dc>
   194b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194b8:	add	r0, r0, #0
   194bc:	movw	r1, #0
   194c0:	cmp	r1, r0
   194c4:	blt	195ac <__assert_fail@plt+0x84d4>
   194c8:	b	195c4 <__assert_fail@plt+0x84ec>
   194cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194d0:	movw	r1, #0
   194d4:	cmp	r1, r0
   194d8:	bge	195c4 <__assert_fail@plt+0x84ec>
   194dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194e0:	sub	r0, r0, #1
   194e4:	mvn	r1, #0
   194e8:	cmp	r1, r0
   194ec:	blt	195ac <__assert_fail@plt+0x84d4>
   194f0:	b	195c4 <__assert_fail@plt+0x84ec>
   194f4:	ldr	r0, [fp, #8]
   194f8:	movw	r1, #0
   194fc:	sdiv	r0, r1, r0
   19500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19504:	cmp	r0, r1
   19508:	blt	195ac <__assert_fail@plt+0x84d4>
   1950c:	b	195c4 <__assert_fail@plt+0x84ec>
   19510:	ldr	r0, [fp, #8]
   19514:	cmp	r0, #0
   19518:	bne	19520 <__assert_fail@plt+0x8448>
   1951c:	b	195c4 <__assert_fail@plt+0x84ec>
   19520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19524:	cmp	r0, #0
   19528:	bge	19594 <__assert_fail@plt+0x84bc>
   1952c:	b	19530 <__assert_fail@plt+0x8458>
   19530:	b	19578 <__assert_fail@plt+0x84a0>
   19534:	b	19578 <__assert_fail@plt+0x84a0>
   19538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1953c:	cmn	r0, #1
   19540:	bne	19578 <__assert_fail@plt+0x84a0>
   19544:	b	19548 <__assert_fail@plt+0x8470>
   19548:	ldr	r0, [fp, #8]
   1954c:	add	r0, r0, #0
   19550:	movw	r1, #0
   19554:	cmp	r1, r0
   19558:	blt	195ac <__assert_fail@plt+0x84d4>
   1955c:	b	195c4 <__assert_fail@plt+0x84ec>
   19560:	ldr	r0, [fp, #8]
   19564:	sub	r0, r0, #1
   19568:	mvn	r1, #0
   1956c:	cmp	r1, r0
   19570:	blt	195ac <__assert_fail@plt+0x84d4>
   19574:	b	195c4 <__assert_fail@plt+0x84ec>
   19578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1957c:	movw	r1, #0
   19580:	sdiv	r0, r1, r0
   19584:	ldr	r1, [fp, #8]
   19588:	cmp	r0, r1
   1958c:	blt	195ac <__assert_fail@plt+0x84d4>
   19590:	b	195c4 <__assert_fail@plt+0x84ec>
   19594:	ldr	r0, [fp, #8]
   19598:	movw	r1, #65535	; 0xffff
   1959c:	sdiv	r0, r1, r0
   195a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195a4:	cmp	r0, r1
   195a8:	bge	195c4 <__assert_fail@plt+0x84ec>
   195ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195b0:	ldr	r1, [fp, #8]
   195b4:	mul	r0, r0, r1
   195b8:	uxth	r0, r0
   195bc:	str	r0, [fp, #-28]	; 0xffffffe4
   195c0:	b	1a214 <__assert_fail@plt+0x913c>
   195c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195c8:	ldr	r1, [fp, #8]
   195cc:	mul	r0, r0, r1
   195d0:	uxth	r0, r0
   195d4:	str	r0, [fp, #-28]	; 0xffffffe4
   195d8:	b	1a218 <__assert_fail@plt+0x9140>
   195dc:	b	195e0 <__assert_fail@plt+0x8508>
   195e0:	b	195e4 <__assert_fail@plt+0x850c>
   195e4:	ldr	r0, [fp, #8]
   195e8:	cmp	r0, #0
   195ec:	bge	196f0 <__assert_fail@plt+0x8618>
   195f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195f4:	cmp	r0, #0
   195f8:	bge	19684 <__assert_fail@plt+0x85ac>
   195fc:	b	19600 <__assert_fail@plt+0x8528>
   19600:	ldr	r0, [pc, #3128]	; 1a240 <__assert_fail@plt+0x9168>
   19604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19608:	ldr	r2, [fp, #8]
   1960c:	sdiv	r0, r0, r2
   19610:	cmp	r1, r0
   19614:	blt	19780 <__assert_fail@plt+0x86a8>
   19618:	b	19794 <__assert_fail@plt+0x86bc>
   1961c:	b	19620 <__assert_fail@plt+0x8548>
   19620:	ldr	r0, [pc, #3100]	; 1a244 <__assert_fail@plt+0x916c>
   19624:	ldr	r1, [fp, #8]
   19628:	cmp	r1, r0
   1962c:	blt	19644 <__assert_fail@plt+0x856c>
   19630:	b	19650 <__assert_fail@plt+0x8578>
   19634:	ldr	r0, [fp, #8]
   19638:	movw	r1, #0
   1963c:	cmp	r1, r0
   19640:	bge	19650 <__assert_fail@plt+0x8578>
   19644:	movw	r0, #0
   19648:	str	r0, [sp, #148]	; 0x94
   1964c:	b	19668 <__assert_fail@plt+0x8590>
   19650:	ldr	r0, [pc, #3048]	; 1a240 <__assert_fail@plt+0x9168>
   19654:	ldr	r1, [fp, #8]
   19658:	movw	r2, #0
   1965c:	sub	r1, r2, r1
   19660:	sdiv	r0, r0, r1
   19664:	str	r0, [sp, #148]	; 0x94
   19668:	ldr	r0, [sp, #148]	; 0x94
   1966c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19670:	mvn	r2, #0
   19674:	sub	r1, r2, r1
   19678:	cmp	r0, r1
   1967c:	ble	19780 <__assert_fail@plt+0x86a8>
   19680:	b	19794 <__assert_fail@plt+0x86bc>
   19684:	ldr	r0, [fp, #8]
   19688:	cmn	r0, #1
   1968c:	bne	196d4 <__assert_fail@plt+0x85fc>
   19690:	b	19694 <__assert_fail@plt+0x85bc>
   19694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19698:	add	r0, r0, #-2147483648	; 0x80000000
   1969c:	movw	r1, #0
   196a0:	cmp	r1, r0
   196a4:	blt	19780 <__assert_fail@plt+0x86a8>
   196a8:	b	19794 <__assert_fail@plt+0x86bc>
   196ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196b0:	movw	r1, #0
   196b4:	cmp	r1, r0
   196b8:	bge	19794 <__assert_fail@plt+0x86bc>
   196bc:	ldr	r0, [pc, #2940]	; 1a240 <__assert_fail@plt+0x9168>
   196c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c4:	sub	r1, r1, #1
   196c8:	cmp	r0, r1
   196cc:	blt	19780 <__assert_fail@plt+0x86a8>
   196d0:	b	19794 <__assert_fail@plt+0x86bc>
   196d4:	ldr	r0, [pc, #2924]	; 1a248 <__assert_fail@plt+0x9170>
   196d8:	ldr	r1, [fp, #8]
   196dc:	sdiv	r0, r0, r1
   196e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196e4:	cmp	r0, r1
   196e8:	blt	19780 <__assert_fail@plt+0x86a8>
   196ec:	b	19794 <__assert_fail@plt+0x86bc>
   196f0:	ldr	r0, [fp, #8]
   196f4:	cmp	r0, #0
   196f8:	bne	19700 <__assert_fail@plt+0x8628>
   196fc:	b	19794 <__assert_fail@plt+0x86bc>
   19700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19704:	cmp	r0, #0
   19708:	bge	19768 <__assert_fail@plt+0x8690>
   1970c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19710:	cmn	r0, #1
   19714:	bne	1974c <__assert_fail@plt+0x8674>
   19718:	b	1971c <__assert_fail@plt+0x8644>
   1971c:	ldr	r0, [fp, #8]
   19720:	add	r0, r0, #-2147483648	; 0x80000000
   19724:	movw	r1, #0
   19728:	cmp	r1, r0
   1972c:	blt	19780 <__assert_fail@plt+0x86a8>
   19730:	b	19794 <__assert_fail@plt+0x86bc>
   19734:	ldr	r0, [pc, #2820]	; 1a240 <__assert_fail@plt+0x9168>
   19738:	ldr	r1, [fp, #8]
   1973c:	sub	r1, r1, #1
   19740:	cmp	r0, r1
   19744:	blt	19780 <__assert_fail@plt+0x86a8>
   19748:	b	19794 <__assert_fail@plt+0x86bc>
   1974c:	ldr	r0, [pc, #2804]	; 1a248 <__assert_fail@plt+0x9170>
   19750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19754:	sdiv	r0, r0, r1
   19758:	ldr	r1, [fp, #8]
   1975c:	cmp	r0, r1
   19760:	blt	19780 <__assert_fail@plt+0x86a8>
   19764:	b	19794 <__assert_fail@plt+0x86bc>
   19768:	ldr	r0, [pc, #2768]	; 1a240 <__assert_fail@plt+0x9168>
   1976c:	ldr	r1, [fp, #8]
   19770:	sdiv	r0, r0, r1
   19774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19778:	cmp	r0, r1
   1977c:	bge	19794 <__assert_fail@plt+0x86bc>
   19780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19784:	ldr	r1, [fp, #8]
   19788:	mul	r0, r0, r1
   1978c:	str	r0, [fp, #-28]	; 0xffffffe4
   19790:	b	1a214 <__assert_fail@plt+0x913c>
   19794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19798:	ldr	r1, [fp, #8]
   1979c:	mul	r0, r0, r1
   197a0:	str	r0, [fp, #-28]	; 0xffffffe4
   197a4:	b	1a218 <__assert_fail@plt+0x9140>
   197a8:	ldr	r0, [fp, #8]
   197ac:	cmp	r0, #0
   197b0:	bge	198c0 <__assert_fail@plt+0x87e8>
   197b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197b8:	cmp	r0, #0
   197bc:	bge	19848 <__assert_fail@plt+0x8770>
   197c0:	b	197e0 <__assert_fail@plt+0x8708>
   197c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c8:	ldr	r1, [fp, #8]
   197cc:	mvn	r2, #0
   197d0:	udiv	r1, r2, r1
   197d4:	cmp	r0, r1
   197d8:	bcc	1995c <__assert_fail@plt+0x8884>
   197dc:	b	19970 <__assert_fail@plt+0x8898>
   197e0:	b	197e4 <__assert_fail@plt+0x870c>
   197e4:	ldr	r0, [pc, #2648]	; 1a244 <__assert_fail@plt+0x916c>
   197e8:	ldr	r1, [fp, #8]
   197ec:	cmp	r1, r0
   197f0:	blt	19808 <__assert_fail@plt+0x8730>
   197f4:	b	19814 <__assert_fail@plt+0x873c>
   197f8:	ldr	r0, [fp, #8]
   197fc:	movw	r1, #0
   19800:	cmp	r1, r0
   19804:	bge	19814 <__assert_fail@plt+0x873c>
   19808:	movw	r0, #1
   1980c:	str	r0, [sp, #144]	; 0x90
   19810:	b	1982c <__assert_fail@plt+0x8754>
   19814:	ldr	r0, [fp, #8]
   19818:	movw	r1, #0
   1981c:	sub	r0, r1, r0
   19820:	mvn	r1, #0
   19824:	udiv	r0, r1, r0
   19828:	str	r0, [sp, #144]	; 0x90
   1982c:	ldr	r0, [sp, #144]	; 0x90
   19830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19834:	mvn	r2, #0
   19838:	sub	r1, r2, r1
   1983c:	cmp	r0, r1
   19840:	bls	1995c <__assert_fail@plt+0x8884>
   19844:	b	19970 <__assert_fail@plt+0x8898>
   19848:	b	1984c <__assert_fail@plt+0x8774>
   1984c:	b	198a4 <__assert_fail@plt+0x87cc>
   19850:	b	198a4 <__assert_fail@plt+0x87cc>
   19854:	ldr	r0, [fp, #8]
   19858:	cmn	r0, #1
   1985c:	bne	198a4 <__assert_fail@plt+0x87cc>
   19860:	b	19864 <__assert_fail@plt+0x878c>
   19864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19868:	add	r0, r0, #0
   1986c:	movw	r1, #0
   19870:	cmp	r1, r0
   19874:	blt	1995c <__assert_fail@plt+0x8884>
   19878:	b	19970 <__assert_fail@plt+0x8898>
   1987c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19880:	movw	r1, #0
   19884:	cmp	r1, r0
   19888:	bge	19970 <__assert_fail@plt+0x8898>
   1988c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19890:	sub	r0, r0, #1
   19894:	mvn	r1, #0
   19898:	cmp	r1, r0
   1989c:	blt	1995c <__assert_fail@plt+0x8884>
   198a0:	b	19970 <__assert_fail@plt+0x8898>
   198a4:	ldr	r0, [fp, #8]
   198a8:	movw	r1, #0
   198ac:	sdiv	r0, r1, r0
   198b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198b4:	cmp	r0, r1
   198b8:	blt	1995c <__assert_fail@plt+0x8884>
   198bc:	b	19970 <__assert_fail@plt+0x8898>
   198c0:	ldr	r0, [fp, #8]
   198c4:	cmp	r0, #0
   198c8:	bne	198d0 <__assert_fail@plt+0x87f8>
   198cc:	b	19970 <__assert_fail@plt+0x8898>
   198d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198d4:	cmp	r0, #0
   198d8:	bge	19944 <__assert_fail@plt+0x886c>
   198dc:	b	198e0 <__assert_fail@plt+0x8808>
   198e0:	b	19928 <__assert_fail@plt+0x8850>
   198e4:	b	19928 <__assert_fail@plt+0x8850>
   198e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198ec:	cmn	r0, #1
   198f0:	bne	19928 <__assert_fail@plt+0x8850>
   198f4:	b	198f8 <__assert_fail@plt+0x8820>
   198f8:	ldr	r0, [fp, #8]
   198fc:	add	r0, r0, #0
   19900:	movw	r1, #0
   19904:	cmp	r1, r0
   19908:	blt	1995c <__assert_fail@plt+0x8884>
   1990c:	b	19970 <__assert_fail@plt+0x8898>
   19910:	ldr	r0, [fp, #8]
   19914:	sub	r0, r0, #1
   19918:	mvn	r1, #0
   1991c:	cmp	r1, r0
   19920:	blt	1995c <__assert_fail@plt+0x8884>
   19924:	b	19970 <__assert_fail@plt+0x8898>
   19928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1992c:	movw	r1, #0
   19930:	sdiv	r0, r1, r0
   19934:	ldr	r1, [fp, #8]
   19938:	cmp	r0, r1
   1993c:	blt	1995c <__assert_fail@plt+0x8884>
   19940:	b	19970 <__assert_fail@plt+0x8898>
   19944:	ldr	r0, [fp, #8]
   19948:	mvn	r1, #0
   1994c:	udiv	r0, r1, r0
   19950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19954:	cmp	r0, r1
   19958:	bcs	19970 <__assert_fail@plt+0x8898>
   1995c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19960:	ldr	r1, [fp, #8]
   19964:	mul	r0, r0, r1
   19968:	str	r0, [fp, #-28]	; 0xffffffe4
   1996c:	b	1a214 <__assert_fail@plt+0x913c>
   19970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19974:	ldr	r1, [fp, #8]
   19978:	mul	r0, r0, r1
   1997c:	str	r0, [fp, #-28]	; 0xffffffe4
   19980:	b	1a218 <__assert_fail@plt+0x9140>
   19984:	b	19988 <__assert_fail@plt+0x88b0>
   19988:	b	1998c <__assert_fail@plt+0x88b4>
   1998c:	ldr	r0, [fp, #8]
   19990:	cmp	r0, #0
   19994:	bge	19a98 <__assert_fail@plt+0x89c0>
   19998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1999c:	cmp	r0, #0
   199a0:	bge	19a2c <__assert_fail@plt+0x8954>
   199a4:	b	199a8 <__assert_fail@plt+0x88d0>
   199a8:	ldr	r0, [pc, #2192]	; 1a240 <__assert_fail@plt+0x9168>
   199ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199b0:	ldr	r2, [fp, #8]
   199b4:	sdiv	r0, r0, r2
   199b8:	cmp	r1, r0
   199bc:	blt	19b28 <__assert_fail@plt+0x8a50>
   199c0:	b	19b3c <__assert_fail@plt+0x8a64>
   199c4:	b	199c8 <__assert_fail@plt+0x88f0>
   199c8:	ldr	r0, [pc, #2164]	; 1a244 <__assert_fail@plt+0x916c>
   199cc:	ldr	r1, [fp, #8]
   199d0:	cmp	r1, r0
   199d4:	blt	199ec <__assert_fail@plt+0x8914>
   199d8:	b	199f8 <__assert_fail@plt+0x8920>
   199dc:	ldr	r0, [fp, #8]
   199e0:	movw	r1, #0
   199e4:	cmp	r1, r0
   199e8:	bge	199f8 <__assert_fail@plt+0x8920>
   199ec:	movw	r0, #0
   199f0:	str	r0, [sp, #140]	; 0x8c
   199f4:	b	19a10 <__assert_fail@plt+0x8938>
   199f8:	ldr	r0, [pc, #2112]	; 1a240 <__assert_fail@plt+0x9168>
   199fc:	ldr	r1, [fp, #8]
   19a00:	movw	r2, #0
   19a04:	sub	r1, r2, r1
   19a08:	sdiv	r0, r0, r1
   19a0c:	str	r0, [sp, #140]	; 0x8c
   19a10:	ldr	r0, [sp, #140]	; 0x8c
   19a14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a18:	mvn	r2, #0
   19a1c:	sub	r1, r2, r1
   19a20:	cmp	r0, r1
   19a24:	ble	19b28 <__assert_fail@plt+0x8a50>
   19a28:	b	19b3c <__assert_fail@plt+0x8a64>
   19a2c:	ldr	r0, [fp, #8]
   19a30:	cmn	r0, #1
   19a34:	bne	19a7c <__assert_fail@plt+0x89a4>
   19a38:	b	19a3c <__assert_fail@plt+0x8964>
   19a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a40:	add	r0, r0, #-2147483648	; 0x80000000
   19a44:	movw	r1, #0
   19a48:	cmp	r1, r0
   19a4c:	blt	19b28 <__assert_fail@plt+0x8a50>
   19a50:	b	19b3c <__assert_fail@plt+0x8a64>
   19a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a58:	movw	r1, #0
   19a5c:	cmp	r1, r0
   19a60:	bge	19b3c <__assert_fail@plt+0x8a64>
   19a64:	ldr	r0, [pc, #2004]	; 1a240 <__assert_fail@plt+0x9168>
   19a68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a6c:	sub	r1, r1, #1
   19a70:	cmp	r0, r1
   19a74:	blt	19b28 <__assert_fail@plt+0x8a50>
   19a78:	b	19b3c <__assert_fail@plt+0x8a64>
   19a7c:	ldr	r0, [pc, #1988]	; 1a248 <__assert_fail@plt+0x9170>
   19a80:	ldr	r1, [fp, #8]
   19a84:	sdiv	r0, r0, r1
   19a88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a8c:	cmp	r0, r1
   19a90:	blt	19b28 <__assert_fail@plt+0x8a50>
   19a94:	b	19b3c <__assert_fail@plt+0x8a64>
   19a98:	ldr	r0, [fp, #8]
   19a9c:	cmp	r0, #0
   19aa0:	bne	19aa8 <__assert_fail@plt+0x89d0>
   19aa4:	b	19b3c <__assert_fail@plt+0x8a64>
   19aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aac:	cmp	r0, #0
   19ab0:	bge	19b10 <__assert_fail@plt+0x8a38>
   19ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ab8:	cmn	r0, #1
   19abc:	bne	19af4 <__assert_fail@plt+0x8a1c>
   19ac0:	b	19ac4 <__assert_fail@plt+0x89ec>
   19ac4:	ldr	r0, [fp, #8]
   19ac8:	add	r0, r0, #-2147483648	; 0x80000000
   19acc:	movw	r1, #0
   19ad0:	cmp	r1, r0
   19ad4:	blt	19b28 <__assert_fail@plt+0x8a50>
   19ad8:	b	19b3c <__assert_fail@plt+0x8a64>
   19adc:	ldr	r0, [pc, #1884]	; 1a240 <__assert_fail@plt+0x9168>
   19ae0:	ldr	r1, [fp, #8]
   19ae4:	sub	r1, r1, #1
   19ae8:	cmp	r0, r1
   19aec:	blt	19b28 <__assert_fail@plt+0x8a50>
   19af0:	b	19b3c <__assert_fail@plt+0x8a64>
   19af4:	ldr	r0, [pc, #1868]	; 1a248 <__assert_fail@plt+0x9170>
   19af8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19afc:	sdiv	r0, r0, r1
   19b00:	ldr	r1, [fp, #8]
   19b04:	cmp	r0, r1
   19b08:	blt	19b28 <__assert_fail@plt+0x8a50>
   19b0c:	b	19b3c <__assert_fail@plt+0x8a64>
   19b10:	ldr	r0, [pc, #1832]	; 1a240 <__assert_fail@plt+0x9168>
   19b14:	ldr	r1, [fp, #8]
   19b18:	sdiv	r0, r0, r1
   19b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b20:	cmp	r0, r1
   19b24:	bge	19b3c <__assert_fail@plt+0x8a64>
   19b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b2c:	ldr	r1, [fp, #8]
   19b30:	mul	r0, r0, r1
   19b34:	str	r0, [fp, #-28]	; 0xffffffe4
   19b38:	b	1a214 <__assert_fail@plt+0x913c>
   19b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b40:	ldr	r1, [fp, #8]
   19b44:	mul	r0, r0, r1
   19b48:	str	r0, [fp, #-28]	; 0xffffffe4
   19b4c:	b	1a218 <__assert_fail@plt+0x9140>
   19b50:	ldr	r0, [fp, #8]
   19b54:	cmp	r0, #0
   19b58:	bge	19c68 <__assert_fail@plt+0x8b90>
   19b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b60:	cmp	r0, #0
   19b64:	bge	19bf0 <__assert_fail@plt+0x8b18>
   19b68:	b	19b88 <__assert_fail@plt+0x8ab0>
   19b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b70:	ldr	r1, [fp, #8]
   19b74:	mvn	r2, #0
   19b78:	udiv	r1, r2, r1
   19b7c:	cmp	r0, r1
   19b80:	bcc	19d04 <__assert_fail@plt+0x8c2c>
   19b84:	b	19d18 <__assert_fail@plt+0x8c40>
   19b88:	b	19b8c <__assert_fail@plt+0x8ab4>
   19b8c:	ldr	r0, [pc, #1712]	; 1a244 <__assert_fail@plt+0x916c>
   19b90:	ldr	r1, [fp, #8]
   19b94:	cmp	r1, r0
   19b98:	blt	19bb0 <__assert_fail@plt+0x8ad8>
   19b9c:	b	19bbc <__assert_fail@plt+0x8ae4>
   19ba0:	ldr	r0, [fp, #8]
   19ba4:	movw	r1, #0
   19ba8:	cmp	r1, r0
   19bac:	bge	19bbc <__assert_fail@plt+0x8ae4>
   19bb0:	movw	r0, #1
   19bb4:	str	r0, [sp, #136]	; 0x88
   19bb8:	b	19bd4 <__assert_fail@plt+0x8afc>
   19bbc:	ldr	r0, [fp, #8]
   19bc0:	movw	r1, #0
   19bc4:	sub	r0, r1, r0
   19bc8:	mvn	r1, #0
   19bcc:	udiv	r0, r1, r0
   19bd0:	str	r0, [sp, #136]	; 0x88
   19bd4:	ldr	r0, [sp, #136]	; 0x88
   19bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19bdc:	mvn	r2, #0
   19be0:	sub	r1, r2, r1
   19be4:	cmp	r0, r1
   19be8:	bls	19d04 <__assert_fail@plt+0x8c2c>
   19bec:	b	19d18 <__assert_fail@plt+0x8c40>
   19bf0:	b	19bf4 <__assert_fail@plt+0x8b1c>
   19bf4:	b	19c4c <__assert_fail@plt+0x8b74>
   19bf8:	b	19c4c <__assert_fail@plt+0x8b74>
   19bfc:	ldr	r0, [fp, #8]
   19c00:	cmn	r0, #1
   19c04:	bne	19c4c <__assert_fail@plt+0x8b74>
   19c08:	b	19c0c <__assert_fail@plt+0x8b34>
   19c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c10:	add	r0, r0, #0
   19c14:	movw	r1, #0
   19c18:	cmp	r1, r0
   19c1c:	blt	19d04 <__assert_fail@plt+0x8c2c>
   19c20:	b	19d18 <__assert_fail@plt+0x8c40>
   19c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c28:	movw	r1, #0
   19c2c:	cmp	r1, r0
   19c30:	bge	19d18 <__assert_fail@plt+0x8c40>
   19c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c38:	sub	r0, r0, #1
   19c3c:	mvn	r1, #0
   19c40:	cmp	r1, r0
   19c44:	blt	19d04 <__assert_fail@plt+0x8c2c>
   19c48:	b	19d18 <__assert_fail@plt+0x8c40>
   19c4c:	ldr	r0, [fp, #8]
   19c50:	movw	r1, #0
   19c54:	sdiv	r0, r1, r0
   19c58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c5c:	cmp	r0, r1
   19c60:	blt	19d04 <__assert_fail@plt+0x8c2c>
   19c64:	b	19d18 <__assert_fail@plt+0x8c40>
   19c68:	ldr	r0, [fp, #8]
   19c6c:	cmp	r0, #0
   19c70:	bne	19c78 <__assert_fail@plt+0x8ba0>
   19c74:	b	19d18 <__assert_fail@plt+0x8c40>
   19c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c7c:	cmp	r0, #0
   19c80:	bge	19cec <__assert_fail@plt+0x8c14>
   19c84:	b	19c88 <__assert_fail@plt+0x8bb0>
   19c88:	b	19cd0 <__assert_fail@plt+0x8bf8>
   19c8c:	b	19cd0 <__assert_fail@plt+0x8bf8>
   19c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c94:	cmn	r0, #1
   19c98:	bne	19cd0 <__assert_fail@plt+0x8bf8>
   19c9c:	b	19ca0 <__assert_fail@plt+0x8bc8>
   19ca0:	ldr	r0, [fp, #8]
   19ca4:	add	r0, r0, #0
   19ca8:	movw	r1, #0
   19cac:	cmp	r1, r0
   19cb0:	blt	19d04 <__assert_fail@plt+0x8c2c>
   19cb4:	b	19d18 <__assert_fail@plt+0x8c40>
   19cb8:	ldr	r0, [fp, #8]
   19cbc:	sub	r0, r0, #1
   19cc0:	mvn	r1, #0
   19cc4:	cmp	r1, r0
   19cc8:	blt	19d04 <__assert_fail@plt+0x8c2c>
   19ccc:	b	19d18 <__assert_fail@plt+0x8c40>
   19cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cd4:	movw	r1, #0
   19cd8:	sdiv	r0, r1, r0
   19cdc:	ldr	r1, [fp, #8]
   19ce0:	cmp	r0, r1
   19ce4:	blt	19d04 <__assert_fail@plt+0x8c2c>
   19ce8:	b	19d18 <__assert_fail@plt+0x8c40>
   19cec:	ldr	r0, [fp, #8]
   19cf0:	mvn	r1, #0
   19cf4:	udiv	r0, r1, r0
   19cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19cfc:	cmp	r0, r1
   19d00:	bcs	19d18 <__assert_fail@plt+0x8c40>
   19d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d08:	ldr	r1, [fp, #8]
   19d0c:	mul	r0, r0, r1
   19d10:	str	r0, [fp, #-28]	; 0xffffffe4
   19d14:	b	1a214 <__assert_fail@plt+0x913c>
   19d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d1c:	ldr	r1, [fp, #8]
   19d20:	mul	r0, r0, r1
   19d24:	str	r0, [fp, #-28]	; 0xffffffe4
   19d28:	b	1a218 <__assert_fail@plt+0x9140>
   19d2c:	b	19d30 <__assert_fail@plt+0x8c58>
   19d30:	ldr	r0, [fp, #8]
   19d34:	cmp	r0, #0
   19d38:	bge	19ec0 <__assert_fail@plt+0x8de8>
   19d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d40:	cmp	r0, #0
   19d44:	bge	19e2c <__assert_fail@plt+0x8d54>
   19d48:	b	19d4c <__assert_fail@plt+0x8c74>
   19d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d50:	ldr	r1, [fp, #8]
   19d54:	asr	r3, r1, #31
   19d58:	mvn	r2, #0
   19d5c:	mvn	ip, #-2147483648	; 0x80000000
   19d60:	str	r0, [sp, #132]	; 0x84
   19d64:	mov	r0, r2
   19d68:	str	r1, [sp, #128]	; 0x80
   19d6c:	mov	r1, ip
   19d70:	ldr	r2, [sp, #128]	; 0x80
   19d74:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   19d78:	ldr	r2, [sp, #132]	; 0x84
   19d7c:	subs	r0, r2, r0
   19d80:	rscs	r1, r1, r2, asr #31
   19d84:	str	r0, [sp, #124]	; 0x7c
   19d88:	str	r1, [sp, #120]	; 0x78
   19d8c:	blt	19fa0 <__assert_fail@plt+0x8ec8>
   19d90:	b	19fb4 <__assert_fail@plt+0x8edc>
   19d94:	b	19d98 <__assert_fail@plt+0x8cc0>
   19d98:	ldr	r0, [pc, #1188]	; 1a244 <__assert_fail@plt+0x916c>
   19d9c:	ldr	r1, [fp, #8]
   19da0:	cmp	r1, r0
   19da4:	blt	19dbc <__assert_fail@plt+0x8ce4>
   19da8:	b	19dd0 <__assert_fail@plt+0x8cf8>
   19dac:	ldr	r0, [fp, #8]
   19db0:	movw	r1, #0
   19db4:	cmp	r1, r0
   19db8:	bge	19dd0 <__assert_fail@plt+0x8cf8>
   19dbc:	mov	r0, #0
   19dc0:	mvn	r1, #0
   19dc4:	str	r1, [sp, #116]	; 0x74
   19dc8:	str	r0, [sp, #112]	; 0x70
   19dcc:	b	19e04 <__assert_fail@plt+0x8d2c>
   19dd0:	ldr	r0, [fp, #8]
   19dd4:	rsb	r0, r0, #0
   19dd8:	asr	r3, r0, #31
   19ddc:	mvn	r1, #0
   19de0:	mvn	r2, #-2147483648	; 0x80000000
   19de4:	str	r0, [sp, #108]	; 0x6c
   19de8:	mov	r0, r1
   19dec:	mov	r1, r2
   19df0:	ldr	r2, [sp, #108]	; 0x6c
   19df4:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   19df8:	str	r0, [sp, #116]	; 0x74
   19dfc:	str	r1, [sp, #112]	; 0x70
   19e00:	b	19e04 <__assert_fail@plt+0x8d2c>
   19e04:	ldr	r0, [sp, #112]	; 0x70
   19e08:	ldr	r1, [sp, #116]	; 0x74
   19e0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e10:	mvn	r2, r2
   19e14:	subs	r1, r2, r1
   19e18:	rscs	r0, r0, r2, asr #31
   19e1c:	str	r1, [sp, #104]	; 0x68
   19e20:	str	r0, [sp, #100]	; 0x64
   19e24:	bge	19fa0 <__assert_fail@plt+0x8ec8>
   19e28:	b	19fb4 <__assert_fail@plt+0x8edc>
   19e2c:	ldr	r0, [fp, #8]
   19e30:	cmn	r0, #1
   19e34:	bne	19e80 <__assert_fail@plt+0x8da8>
   19e38:	b	19e3c <__assert_fail@plt+0x8d64>
   19e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e40:	mov	r1, #-2147483648	; 0x80000000
   19e44:	add	r1, r1, r0, asr #31
   19e48:	rsbs	r0, r0, #0
   19e4c:	rscs	r1, r1, #0
   19e50:	str	r0, [sp, #96]	; 0x60
   19e54:	str	r1, [sp, #92]	; 0x5c
   19e58:	blt	19fa0 <__assert_fail@plt+0x8ec8>
   19e5c:	b	19fb4 <__assert_fail@plt+0x8edc>
   19e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e64:	movw	r1, #0
   19e68:	cmp	r1, r0
   19e6c:	bge	19fb4 <__assert_fail@plt+0x8edc>
   19e70:	mov	r0, #0
   19e74:	cmp	r0, #0
   19e78:	bne	19fa0 <__assert_fail@plt+0x8ec8>
   19e7c:	b	19fb4 <__assert_fail@plt+0x8edc>
   19e80:	ldr	r0, [fp, #8]
   19e84:	asr	r3, r0, #31
   19e88:	mov	r1, #0
   19e8c:	mov	r2, #-2147483648	; 0x80000000
   19e90:	str	r0, [sp, #88]	; 0x58
   19e94:	mov	r0, r1
   19e98:	mov	r1, r2
   19e9c:	ldr	r2, [sp, #88]	; 0x58
   19ea0:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   19ea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ea8:	subs	r0, r0, r2
   19eac:	sbcs	r1, r1, r2, asr #31
   19eb0:	str	r0, [sp, #84]	; 0x54
   19eb4:	str	r1, [sp, #80]	; 0x50
   19eb8:	blt	19fa0 <__assert_fail@plt+0x8ec8>
   19ebc:	b	19fb4 <__assert_fail@plt+0x8edc>
   19ec0:	ldr	r0, [fp, #8]
   19ec4:	cmp	r0, #0
   19ec8:	bne	19ed0 <__assert_fail@plt+0x8df8>
   19ecc:	b	19fb4 <__assert_fail@plt+0x8edc>
   19ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ed4:	cmp	r0, #0
   19ed8:	bge	19f60 <__assert_fail@plt+0x8e88>
   19edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ee0:	cmn	r0, #1
   19ee4:	bne	19f20 <__assert_fail@plt+0x8e48>
   19ee8:	b	19eec <__assert_fail@plt+0x8e14>
   19eec:	ldr	r0, [fp, #8]
   19ef0:	mov	r1, #-2147483648	; 0x80000000
   19ef4:	add	r1, r1, r0, asr #31
   19ef8:	rsbs	r0, r0, #0
   19efc:	rscs	r1, r1, #0
   19f00:	str	r0, [sp, #76]	; 0x4c
   19f04:	str	r1, [sp, #72]	; 0x48
   19f08:	blt	19fa0 <__assert_fail@plt+0x8ec8>
   19f0c:	b	19fb4 <__assert_fail@plt+0x8edc>
   19f10:	mov	r0, #0
   19f14:	cmp	r0, #0
   19f18:	bne	19fa0 <__assert_fail@plt+0x8ec8>
   19f1c:	b	19fb4 <__assert_fail@plt+0x8edc>
   19f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f24:	asr	r3, r0, #31
   19f28:	mov	r1, #0
   19f2c:	mov	r2, #-2147483648	; 0x80000000
   19f30:	str	r0, [sp, #68]	; 0x44
   19f34:	mov	r0, r1
   19f38:	mov	r1, r2
   19f3c:	ldr	r2, [sp, #68]	; 0x44
   19f40:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   19f44:	ldr	r2, [fp, #8]
   19f48:	subs	r0, r0, r2
   19f4c:	sbcs	r1, r1, r2, asr #31
   19f50:	str	r0, [sp, #64]	; 0x40
   19f54:	str	r1, [sp, #60]	; 0x3c
   19f58:	blt	19fa0 <__assert_fail@plt+0x8ec8>
   19f5c:	b	19fb4 <__assert_fail@plt+0x8edc>
   19f60:	ldr	r0, [fp, #8]
   19f64:	asr	r3, r0, #31
   19f68:	mvn	r1, #0
   19f6c:	mvn	r2, #-2147483648	; 0x80000000
   19f70:	str	r0, [sp, #56]	; 0x38
   19f74:	mov	r0, r1
   19f78:	mov	r1, r2
   19f7c:	ldr	r2, [sp, #56]	; 0x38
   19f80:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   19f84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19f88:	subs	r0, r0, r2
   19f8c:	sbcs	r1, r1, r2, asr #31
   19f90:	str	r0, [sp, #52]	; 0x34
   19f94:	str	r1, [sp, #48]	; 0x30
   19f98:	bge	19fb4 <__assert_fail@plt+0x8edc>
   19f9c:	b	19fa0 <__assert_fail@plt+0x8ec8>
   19fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fa4:	ldr	r1, [fp, #8]
   19fa8:	mul	r0, r0, r1
   19fac:	str	r0, [fp, #-28]	; 0xffffffe4
   19fb0:	b	1a214 <__assert_fail@plt+0x913c>
   19fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fb8:	ldr	r1, [fp, #8]
   19fbc:	mul	r0, r0, r1
   19fc0:	str	r0, [fp, #-28]	; 0xffffffe4
   19fc4:	b	1a218 <__assert_fail@plt+0x9140>
   19fc8:	ldr	r0, [fp, #8]
   19fcc:	cmp	r0, #0
   19fd0:	bge	1a130 <__assert_fail@plt+0x9058>
   19fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fd8:	cmp	r0, #0
   19fdc:	bge	1a0b8 <__assert_fail@plt+0x8fe0>
   19fe0:	b	1a028 <__assert_fail@plt+0x8f50>
   19fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fe8:	ldr	r1, [fp, #8]
   19fec:	asr	r3, r1, #31
   19ff0:	mvn	r2, #0
   19ff4:	str	r0, [sp, #44]	; 0x2c
   19ff8:	mov	r0, r2
   19ffc:	str	r1, [sp, #40]	; 0x28
   1a000:	mov	r1, r2
   1a004:	ldr	r2, [sp, #40]	; 0x28
   1a008:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1a00c:	ldr	r2, [sp, #44]	; 0x2c
   1a010:	subs	r0, r2, r0
   1a014:	rscs	r1, r1, r2, asr #31
   1a018:	str	r0, [sp, #36]	; 0x24
   1a01c:	str	r1, [sp, #32]
   1a020:	bcc	1a1ec <__assert_fail@plt+0x9114>
   1a024:	b	1a200 <__assert_fail@plt+0x9128>
   1a028:	b	1a02c <__assert_fail@plt+0x8f54>
   1a02c:	ldr	r0, [pc, #528]	; 1a244 <__assert_fail@plt+0x916c>
   1a030:	ldr	r1, [fp, #8]
   1a034:	cmp	r1, r0
   1a038:	blt	1a050 <__assert_fail@plt+0x8f78>
   1a03c:	b	1a064 <__assert_fail@plt+0x8f8c>
   1a040:	ldr	r0, [fp, #8]
   1a044:	movw	r1, #0
   1a048:	cmp	r1, r0
   1a04c:	bge	1a064 <__assert_fail@plt+0x8f8c>
   1a050:	mov	r0, #1
   1a054:	mvn	r1, #0
   1a058:	str	r1, [sp, #28]
   1a05c:	str	r0, [sp, #24]
   1a060:	b	1a090 <__assert_fail@plt+0x8fb8>
   1a064:	ldr	r0, [fp, #8]
   1a068:	rsb	r0, r0, #0
   1a06c:	asr	r3, r0, #31
   1a070:	mvn	r1, #0
   1a074:	str	r0, [sp, #20]
   1a078:	mov	r0, r1
   1a07c:	ldr	r2, [sp, #20]
   1a080:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1a084:	str	r0, [sp, #28]
   1a088:	str	r1, [sp, #24]
   1a08c:	b	1a090 <__assert_fail@plt+0x8fb8>
   1a090:	ldr	r0, [sp, #24]
   1a094:	ldr	r1, [sp, #28]
   1a098:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a09c:	mvn	r2, r2
   1a0a0:	subs	r1, r2, r1
   1a0a4:	rscs	r0, r0, r2, asr #31
   1a0a8:	str	r1, [sp, #16]
   1a0ac:	str	r0, [sp, #12]
   1a0b0:	bcs	1a1ec <__assert_fail@plt+0x9114>
   1a0b4:	b	1a200 <__assert_fail@plt+0x9128>
   1a0b8:	b	1a0bc <__assert_fail@plt+0x8fe4>
   1a0bc:	b	1a114 <__assert_fail@plt+0x903c>
   1a0c0:	b	1a114 <__assert_fail@plt+0x903c>
   1a0c4:	ldr	r0, [fp, #8]
   1a0c8:	cmn	r0, #1
   1a0cc:	bne	1a114 <__assert_fail@plt+0x903c>
   1a0d0:	b	1a0d4 <__assert_fail@plt+0x8ffc>
   1a0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0d8:	add	r0, r0, #0
   1a0dc:	movw	r1, #0
   1a0e0:	cmp	r1, r0
   1a0e4:	blt	1a1ec <__assert_fail@plt+0x9114>
   1a0e8:	b	1a200 <__assert_fail@plt+0x9128>
   1a0ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0f0:	movw	r1, #0
   1a0f4:	cmp	r1, r0
   1a0f8:	bge	1a200 <__assert_fail@plt+0x9128>
   1a0fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a100:	sub	r0, r0, #1
   1a104:	mvn	r1, #0
   1a108:	cmp	r1, r0
   1a10c:	blt	1a1ec <__assert_fail@plt+0x9114>
   1a110:	b	1a200 <__assert_fail@plt+0x9128>
   1a114:	ldr	r0, [fp, #8]
   1a118:	movw	r1, #0
   1a11c:	sdiv	r0, r1, r0
   1a120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a124:	cmp	r0, r1
   1a128:	blt	1a1ec <__assert_fail@plt+0x9114>
   1a12c:	b	1a200 <__assert_fail@plt+0x9128>
   1a130:	ldr	r0, [fp, #8]
   1a134:	cmp	r0, #0
   1a138:	bne	1a140 <__assert_fail@plt+0x9068>
   1a13c:	b	1a200 <__assert_fail@plt+0x9128>
   1a140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a144:	cmp	r0, #0
   1a148:	bge	1a1b4 <__assert_fail@plt+0x90dc>
   1a14c:	b	1a150 <__assert_fail@plt+0x9078>
   1a150:	b	1a198 <__assert_fail@plt+0x90c0>
   1a154:	b	1a198 <__assert_fail@plt+0x90c0>
   1a158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a15c:	cmn	r0, #1
   1a160:	bne	1a198 <__assert_fail@plt+0x90c0>
   1a164:	b	1a168 <__assert_fail@plt+0x9090>
   1a168:	ldr	r0, [fp, #8]
   1a16c:	add	r0, r0, #0
   1a170:	movw	r1, #0
   1a174:	cmp	r1, r0
   1a178:	blt	1a1ec <__assert_fail@plt+0x9114>
   1a17c:	b	1a200 <__assert_fail@plt+0x9128>
   1a180:	ldr	r0, [fp, #8]
   1a184:	sub	r0, r0, #1
   1a188:	mvn	r1, #0
   1a18c:	cmp	r1, r0
   1a190:	blt	1a1ec <__assert_fail@plt+0x9114>
   1a194:	b	1a200 <__assert_fail@plt+0x9128>
   1a198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a19c:	movw	r1, #0
   1a1a0:	sdiv	r0, r1, r0
   1a1a4:	ldr	r1, [fp, #8]
   1a1a8:	cmp	r0, r1
   1a1ac:	blt	1a1ec <__assert_fail@plt+0x9114>
   1a1b0:	b	1a200 <__assert_fail@plt+0x9128>
   1a1b4:	ldr	r0, [fp, #8]
   1a1b8:	asr	r3, r0, #31
   1a1bc:	mvn	r1, #0
   1a1c0:	str	r0, [sp, #8]
   1a1c4:	mov	r0, r1
   1a1c8:	ldr	r2, [sp, #8]
   1a1cc:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1a1d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a1d4:	subs	r0, r0, r2
   1a1d8:	sbcs	r1, r1, r2, asr #31
   1a1dc:	str	r0, [sp, #4]
   1a1e0:	str	r1, [sp]
   1a1e4:	bcs	1a200 <__assert_fail@plt+0x9128>
   1a1e8:	b	1a1ec <__assert_fail@plt+0x9114>
   1a1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1f0:	ldr	r1, [fp, #8]
   1a1f4:	mul	r0, r0, r1
   1a1f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a1fc:	b	1a214 <__assert_fail@plt+0x913c>
   1a200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a204:	ldr	r1, [fp, #8]
   1a208:	mul	r0, r0, r1
   1a20c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a210:	b	1a218 <__assert_fail@plt+0x9140>
   1a214:	bl	1a3f0 <__assert_fail@plt+0x9318>
   1a218:	ldr	r0, [fp, #-4]
   1a21c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a220:	bl	176ac <__assert_fail@plt+0x65d4>
   1a224:	str	r0, [fp, #-4]
   1a228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a22c:	ldr	r1, [fp, #-8]
   1a230:	str	r0, [r1]
   1a234:	ldr	r0, [fp, #-4]
   1a238:	mov	sp, fp
   1a23c:	pop	{fp, pc}
   1a240:	svcvc	0x00ffffff
   1a244:	andhi	r0, r0, r1
   1a248:	andhi	r0, r0, r0
   1a24c:			; <UNDEFINED> instruction: 0xffff8000
   1a250:	push	{fp, lr}
   1a254:	mov	fp, sp
   1a258:	sub	sp, sp, #8
   1a25c:	str	r0, [sp, #4]
   1a260:	ldr	r0, [sp, #4]
   1a264:	movw	r1, #1
   1a268:	bl	1a274 <__assert_fail@plt+0x919c>
   1a26c:	mov	sp, fp
   1a270:	pop	{fp, pc}
   1a274:	push	{fp, lr}
   1a278:	mov	fp, sp
   1a27c:	sub	sp, sp, #8
   1a280:	str	r0, [sp, #4]
   1a284:	str	r1, [sp]
   1a288:	ldr	r0, [sp, #4]
   1a28c:	ldr	r1, [sp]
   1a290:	bl	1c908 <__assert_fail@plt+0xb830>
   1a294:	bl	17638 <__assert_fail@plt+0x6560>
   1a298:	mov	sp, fp
   1a29c:	pop	{fp, pc}
   1a2a0:	push	{fp, lr}
   1a2a4:	mov	fp, sp
   1a2a8:	sub	sp, sp, #8
   1a2ac:	str	r0, [sp, #4]
   1a2b0:	ldr	r0, [sp, #4]
   1a2b4:	movw	r1, #1
   1a2b8:	bl	1a2c4 <__assert_fail@plt+0x91ec>
   1a2bc:	mov	sp, fp
   1a2c0:	pop	{fp, pc}
   1a2c4:	push	{fp, lr}
   1a2c8:	mov	fp, sp
   1a2cc:	sub	sp, sp, #8
   1a2d0:	str	r0, [sp, #4]
   1a2d4:	str	r1, [sp]
   1a2d8:	ldr	r0, [sp, #4]
   1a2dc:	ldr	r1, [sp]
   1a2e0:	bl	1cfec <__assert_fail@plt+0xbf14>
   1a2e4:	bl	17638 <__assert_fail@plt+0x6560>
   1a2e8:	mov	sp, fp
   1a2ec:	pop	{fp, pc}
   1a2f0:	push	{fp, lr}
   1a2f4:	mov	fp, sp
   1a2f8:	sub	sp, sp, #16
   1a2fc:	str	r0, [fp, #-4]
   1a300:	str	r1, [sp, #8]
   1a304:	ldr	r0, [sp, #8]
   1a308:	bl	17614 <__assert_fail@plt+0x653c>
   1a30c:	ldr	r1, [fp, #-4]
   1a310:	ldr	r2, [sp, #8]
   1a314:	str	r0, [sp, #4]
   1a318:	bl	10ebc <memcpy@plt>
   1a31c:	ldr	r0, [sp, #4]
   1a320:	mov	sp, fp
   1a324:	pop	{fp, pc}
   1a328:	push	{fp, lr}
   1a32c:	mov	fp, sp
   1a330:	sub	sp, sp, #16
   1a334:	str	r0, [fp, #-4]
   1a338:	str	r1, [sp, #8]
   1a33c:	ldr	r0, [sp, #8]
   1a340:	bl	17668 <__assert_fail@plt+0x6590>
   1a344:	ldr	r1, [fp, #-4]
   1a348:	ldr	r2, [sp, #8]
   1a34c:	str	r0, [sp, #4]
   1a350:	bl	10ebc <memcpy@plt>
   1a354:	ldr	r0, [sp, #4]
   1a358:	mov	sp, fp
   1a35c:	pop	{fp, pc}
   1a360:	push	{fp, lr}
   1a364:	mov	fp, sp
   1a368:	sub	sp, sp, #16
   1a36c:	str	r0, [fp, #-4]
   1a370:	str	r1, [sp, #8]
   1a374:	ldr	r0, [sp, #8]
   1a378:	add	r0, r0, #1
   1a37c:	bl	17668 <__assert_fail@plt+0x6590>
   1a380:	str	r0, [sp, #4]
   1a384:	ldr	r0, [sp, #4]
   1a388:	ldr	r1, [sp, #8]
   1a38c:	add	r0, r0, r1
   1a390:	movw	r1, #0
   1a394:	strb	r1, [r0]
   1a398:	ldr	r0, [sp, #4]
   1a39c:	ldr	r1, [fp, #-4]
   1a3a0:	ldr	r2, [sp, #8]
   1a3a4:	str	r0, [sp]
   1a3a8:	bl	10ebc <memcpy@plt>
   1a3ac:	ldr	r0, [sp]
   1a3b0:	mov	sp, fp
   1a3b4:	pop	{fp, pc}
   1a3b8:	push	{fp, lr}
   1a3bc:	mov	fp, sp
   1a3c0:	sub	sp, sp, #8
   1a3c4:	str	r0, [sp, #4]
   1a3c8:	ldr	r0, [sp, #4]
   1a3cc:	ldr	r1, [sp, #4]
   1a3d0:	str	r0, [sp]
   1a3d4:	mov	r0, r1
   1a3d8:	bl	10fdc <strlen@plt>
   1a3dc:	add	r1, r0, #1
   1a3e0:	ldr	r0, [sp]
   1a3e4:	bl	1a2f0 <__assert_fail@plt+0x9218>
   1a3e8:	mov	sp, fp
   1a3ec:	pop	{fp, pc}
   1a3f0:	push	{fp, lr}
   1a3f4:	mov	fp, sp
   1a3f8:	sub	sp, sp, #8
   1a3fc:	movw	r0, #252	; 0xfc
   1a400:	movt	r0, #3
   1a404:	ldr	r0, [r0]
   1a408:	movw	r1, #64996	; 0xfde4
   1a40c:	movt	r1, #1
   1a410:	str	r0, [sp, #4]
   1a414:	mov	r0, r1
   1a418:	bl	10fd0 <gettext@plt>
   1a41c:	ldr	r1, [sp, #4]
   1a420:	str	r0, [sp]
   1a424:	mov	r0, r1
   1a428:	movw	r1, #0
   1a42c:	movw	r2, #62849	; 0xf581
   1a430:	movt	r2, #1
   1a434:	ldr	r3, [sp]
   1a438:	bl	10f64 <error@plt>
   1a43c:	bl	110c0 <abort@plt>
   1a440:	bx	lr
   1a444:	push	{fp, lr}
   1a448:	mov	fp, sp
   1a44c:	sub	sp, sp, #8
   1a450:	str	r0, [sp, #4]
   1a454:	str	r1, [sp]
   1a458:	ldr	r0, [sp, #4]
   1a45c:	ldr	r1, [sp]
   1a460:	bl	1cad0 <__assert_fail@plt+0xb9f8>
   1a464:	cmp	r0, #0
   1a468:	bge	1a470 <__assert_fail@plt+0x9398>
   1a46c:	bl	1a440 <__assert_fail@plt+0x9368>
   1a470:	mov	sp, fp
   1a474:	pop	{fp, pc}
   1a478:	push	{r4, r5, r6, sl, fp, lr}
   1a47c:	add	fp, sp, #16
   1a480:	sub	sp, sp, #112	; 0x70
   1a484:	ldr	ip, [fp, #12]
   1a488:	ldr	lr, [fp, #8]
   1a48c:	ldr	r4, [fp, #24]
   1a490:	ldr	r5, [fp, #20]
   1a494:	ldr	r6, [fp, #16]
   1a498:	str	r0, [fp, #-20]	; 0xffffffec
   1a49c:	str	r1, [fp, #-24]	; 0xffffffe8
   1a4a0:	str	r3, [fp, #-28]	; 0xffffffe4
   1a4a4:	str	r2, [fp, #-32]	; 0xffffffe0
   1a4a8:	str	ip, [fp, #-36]	; 0xffffffdc
   1a4ac:	str	lr, [fp, #-40]	; 0xffffffd8
   1a4b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a4b8:	ldr	r1, [fp, #16]
   1a4bc:	movw	r3, #0
   1a4c0:	str	r1, [fp, #-60]	; 0xffffffc4
   1a4c4:	mov	r1, r3
   1a4c8:	sub	r3, fp, #56	; 0x38
   1a4cc:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1a4d0:	str	ip, [sp]
   1a4d4:	str	r5, [sp, #64]	; 0x40
   1a4d8:	str	r4, [sp, #60]	; 0x3c
   1a4dc:	str	r6, [sp, #56]	; 0x38
   1a4e0:	bl	1a708 <__assert_fail@plt+0x9630>
   1a4e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4ec:	cmp	r0, #0
   1a4f0:	bne	1a590 <__assert_fail@plt+0x94b8>
   1a4f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a4f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a4fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a500:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a504:	subs	r0, r0, r2
   1a508:	sbcs	r1, r1, r3
   1a50c:	str	r0, [sp, #52]	; 0x34
   1a510:	str	r1, [sp, #48]	; 0x30
   1a514:	bcc	1a544 <__assert_fail@plt+0x946c>
   1a518:	b	1a51c <__assert_fail@plt+0x9444>
   1a51c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a520:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a524:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a528:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a52c:	subs	r0, r0, r2
   1a530:	sbcs	r1, r1, r3
   1a534:	str	r0, [sp, #44]	; 0x2c
   1a538:	str	r1, [sp, #40]	; 0x28
   1a53c:	bcs	1a58c <__assert_fail@plt+0x94b4>
   1a540:	b	1a544 <__assert_fail@plt+0x946c>
   1a544:	mov	r0, #1
   1a548:	str	r0, [fp, #-44]	; 0xffffffd4
   1a54c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a550:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a554:	subs	r0, r0, #1073741824	; 0x40000000
   1a558:	sbcs	r1, r1, #0
   1a55c:	str	r0, [sp, #36]	; 0x24
   1a560:	str	r1, [sp, #32]
   1a564:	bcc	1a57c <__assert_fail@plt+0x94a4>
   1a568:	b	1a56c <__assert_fail@plt+0x9494>
   1a56c:	bl	1100c <__errno_location@plt>
   1a570:	movw	lr, #75	; 0x4b
   1a574:	str	lr, [r0]
   1a578:	b	1a588 <__assert_fail@plt+0x94b0>
   1a57c:	bl	1100c <__errno_location@plt>
   1a580:	movw	lr, #34	; 0x22
   1a584:	str	lr, [r0]
   1a588:	b	1a58c <__assert_fail@plt+0x94b4>
   1a58c:	b	1a5cc <__assert_fail@plt+0x94f4>
   1a590:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a594:	cmp	r0, #1
   1a598:	bne	1a5ac <__assert_fail@plt+0x94d4>
   1a59c:	bl	1100c <__errno_location@plt>
   1a5a0:	movw	lr, #75	; 0x4b
   1a5a4:	str	lr, [r0]
   1a5a8:	b	1a5c8 <__assert_fail@plt+0x94f0>
   1a5ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5b0:	cmp	r0, #3
   1a5b4:	bne	1a5c4 <__assert_fail@plt+0x94ec>
   1a5b8:	bl	1100c <__errno_location@plt>
   1a5bc:	movw	lr, #0
   1a5c0:	str	lr, [r0]
   1a5c4:	b	1a5c8 <__assert_fail@plt+0x94f0>
   1a5c8:	b	1a5cc <__assert_fail@plt+0x94f4>
   1a5cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5d0:	cmp	r0, #0
   1a5d4:	beq	1a670 <__assert_fail@plt+0x9598>
   1a5d8:	ldr	r0, [fp, #24]
   1a5dc:	cmp	r0, #0
   1a5e0:	beq	1a5f0 <__assert_fail@plt+0x9518>
   1a5e4:	ldr	r0, [fp, #24]
   1a5e8:	str	r0, [sp, #28]
   1a5ec:	b	1a5fc <__assert_fail@plt+0x9524>
   1a5f0:	movw	r0, #1
   1a5f4:	str	r0, [sp, #28]
   1a5f8:	b	1a5fc <__assert_fail@plt+0x9524>
   1a5fc:	ldr	r0, [sp, #28]
   1a600:	str	r0, [sp, #24]
   1a604:	bl	1100c <__errno_location@plt>
   1a608:	ldr	r0, [r0]
   1a60c:	cmp	r0, #22
   1a610:	bne	1a620 <__assert_fail@plt+0x9548>
   1a614:	movw	r0, #0
   1a618:	str	r0, [sp, #20]
   1a61c:	b	1a62c <__assert_fail@plt+0x9554>
   1a620:	bl	1100c <__errno_location@plt>
   1a624:	ldr	r0, [r0]
   1a628:	str	r0, [sp, #20]
   1a62c:	ldr	r0, [sp, #20]
   1a630:	ldr	r3, [fp, #20]
   1a634:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a638:	str	r0, [sp, #16]
   1a63c:	mov	r0, r1
   1a640:	str	r3, [sp, #12]
   1a644:	bl	16b18 <__assert_fail@plt+0x5a40>
   1a648:	ldr	r1, [sp, #24]
   1a64c:	str	r0, [sp, #8]
   1a650:	mov	r0, r1
   1a654:	ldr	r1, [sp, #16]
   1a658:	movw	r2, #62845	; 0xf57d
   1a65c:	movt	r2, #1
   1a660:	ldr	r3, [sp, #12]
   1a664:	ldr	lr, [sp, #8]
   1a668:	str	lr, [sp]
   1a66c:	bl	10f64 <error@plt>
   1a670:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a674:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a678:	sub	sp, fp, #16
   1a67c:	pop	{r4, r5, r6, sl, fp, pc}
   1a680:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a684:	add	fp, sp, #24
   1a688:	sub	sp, sp, #56	; 0x38
   1a68c:	ldr	r1, [fp, #12]
   1a690:	ldr	ip, [fp, #8]
   1a694:	ldr	lr, [fp, #24]
   1a698:	ldr	r4, [fp, #20]
   1a69c:	ldr	r5, [fp, #16]
   1a6a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a6a4:	str	r3, [sp, #44]	; 0x2c
   1a6a8:	str	r2, [sp, #40]	; 0x28
   1a6ac:	str	r1, [sp, #36]	; 0x24
   1a6b0:	str	ip, [sp, #32]
   1a6b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a6b8:	ldr	r2, [sp, #40]	; 0x28
   1a6bc:	ldr	r3, [sp, #44]	; 0x2c
   1a6c0:	ldr	r1, [sp, #32]
   1a6c4:	ldr	ip, [sp, #36]	; 0x24
   1a6c8:	ldr	r6, [fp, #16]
   1a6cc:	ldr	r7, [fp, #20]
   1a6d0:	ldr	r8, [fp, #24]
   1a6d4:	mov	r9, sp
   1a6d8:	str	r8, [r9, #16]
   1a6dc:	str	r7, [r9, #12]
   1a6e0:	str	r6, [r9, #8]
   1a6e4:	str	ip, [r9, #4]
   1a6e8:	str	r1, [r9]
   1a6ec:	mov	r1, #10
   1a6f0:	str	lr, [sp, #28]
   1a6f4:	str	r4, [sp, #24]
   1a6f8:	str	r5, [sp, #20]
   1a6fc:	bl	1a478 <__assert_fail@plt+0x93a0>
   1a700:	sub	sp, fp, #24
   1a704:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a708:	push	{fp, lr}
   1a70c:	mov	fp, sp
   1a710:	sub	sp, sp, #88	; 0x58
   1a714:	ldr	ip, [fp, #8]
   1a718:	str	r0, [fp, #-8]
   1a71c:	str	r1, [fp, #-12]
   1a720:	str	r2, [fp, #-16]
   1a724:	str	r3, [fp, #-20]	; 0xffffffec
   1a728:	movw	r0, #0
   1a72c:	str	r0, [sp, #44]	; 0x2c
   1a730:	ldr	r1, [fp, #-16]
   1a734:	cmp	r0, r1
   1a738:	str	ip, [sp, #20]
   1a73c:	bgt	1a750 <__assert_fail@plt+0x9678>
   1a740:	ldr	r0, [fp, #-16]
   1a744:	cmp	r0, #36	; 0x24
   1a748:	bgt	1a750 <__assert_fail@plt+0x9678>
   1a74c:	b	1a770 <__assert_fail@plt+0x9698>
   1a750:	movw	r0, #65013	; 0xfdf5
   1a754:	movt	r0, #1
   1a758:	movw	r1, #65051	; 0xfe1b
   1a75c:	movt	r1, #1
   1a760:	movw	r2, #85	; 0x55
   1a764:	movw	r3, #65067	; 0xfe2b
   1a768:	movt	r3, #1
   1a76c:	bl	110d8 <__assert_fail@plt>
   1a770:	ldr	r0, [fp, #-12]
   1a774:	movw	r1, #0
   1a778:	cmp	r0, r1
   1a77c:	beq	1a78c <__assert_fail@plt+0x96b4>
   1a780:	ldr	r0, [fp, #-12]
   1a784:	str	r0, [sp, #16]
   1a788:	b	1a798 <__assert_fail@plt+0x96c0>
   1a78c:	sub	r0, fp, #24
   1a790:	str	r0, [sp, #16]
   1a794:	b	1a798 <__assert_fail@plt+0x96c0>
   1a798:	ldr	r0, [sp, #16]
   1a79c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a7a0:	bl	1100c <__errno_location@plt>
   1a7a4:	movw	lr, #0
   1a7a8:	str	lr, [r0]
   1a7ac:	ldr	r0, [fp, #-8]
   1a7b0:	str	r0, [sp, #40]	; 0x28
   1a7b4:	ldr	r0, [sp, #40]	; 0x28
   1a7b8:	ldrb	r0, [r0]
   1a7bc:	strb	r0, [sp, #39]	; 0x27
   1a7c0:	bl	10fb8 <__ctype_b_loc@plt>
   1a7c4:	ldr	r0, [r0]
   1a7c8:	ldrb	lr, [sp, #39]	; 0x27
   1a7cc:	mov	r1, lr
   1a7d0:	add	r0, r0, lr, lsl #1
   1a7d4:	ldrh	r0, [r0]
   1a7d8:	and	r0, r0, #8192	; 0x2000
   1a7dc:	cmp	r0, #0
   1a7e0:	str	r1, [sp, #12]
   1a7e4:	beq	1a800 <__assert_fail@plt+0x9728>
   1a7e8:	ldr	r0, [sp, #40]	; 0x28
   1a7ec:	add	r1, r0, #1
   1a7f0:	str	r1, [sp, #40]	; 0x28
   1a7f4:	ldrb	r0, [r0, #1]
   1a7f8:	strb	r0, [sp, #39]	; 0x27
   1a7fc:	b	1a7c0 <__assert_fail@plt+0x96e8>
   1a800:	ldrb	r0, [sp, #39]	; 0x27
   1a804:	cmp	r0, #45	; 0x2d
   1a808:	bne	1a818 <__assert_fail@plt+0x9740>
   1a80c:	movw	r0, #4
   1a810:	str	r0, [fp, #-4]
   1a814:	b	1ad94 <__assert_fail@plt+0x9cbc>
   1a818:	ldr	r0, [fp, #-8]
   1a81c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a820:	ldr	r2, [fp, #-16]
   1a824:	bl	1103c <strtoumax@plt>
   1a828:	str	r1, [fp, #-36]	; 0xffffffdc
   1a82c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a834:	ldr	r0, [r0]
   1a838:	ldr	r1, [fp, #-8]
   1a83c:	cmp	r0, r1
   1a840:	bne	1a8ac <__assert_fail@plt+0x97d4>
   1a844:	ldr	r0, [fp, #8]
   1a848:	movw	r1, #0
   1a84c:	cmp	r0, r1
   1a850:	beq	1a89c <__assert_fail@plt+0x97c4>
   1a854:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a858:	ldr	r0, [r0]
   1a85c:	ldrb	r0, [r0]
   1a860:	cmp	r0, #0
   1a864:	beq	1a89c <__assert_fail@plt+0x97c4>
   1a868:	ldr	r0, [fp, #8]
   1a86c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a870:	ldr	r1, [r1]
   1a874:	ldrb	r1, [r1]
   1a878:	bl	10fe8 <strchr@plt>
   1a87c:	movw	r1, #0
   1a880:	cmp	r0, r1
   1a884:	beq	1a89c <__assert_fail@plt+0x97c4>
   1a888:	mov	r0, #0
   1a88c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a890:	mov	r0, #1
   1a894:	str	r0, [fp, #-40]	; 0xffffffd8
   1a898:	b	1a8a8 <__assert_fail@plt+0x97d0>
   1a89c:	movw	r0, #4
   1a8a0:	str	r0, [fp, #-4]
   1a8a4:	b	1ad94 <__assert_fail@plt+0x9cbc>
   1a8a8:	b	1a8e4 <__assert_fail@plt+0x980c>
   1a8ac:	bl	1100c <__errno_location@plt>
   1a8b0:	ldr	r0, [r0]
   1a8b4:	cmp	r0, #0
   1a8b8:	beq	1a8e0 <__assert_fail@plt+0x9808>
   1a8bc:	bl	1100c <__errno_location@plt>
   1a8c0:	ldr	r0, [r0]
   1a8c4:	cmp	r0, #34	; 0x22
   1a8c8:	beq	1a8d8 <__assert_fail@plt+0x9800>
   1a8cc:	movw	r0, #4
   1a8d0:	str	r0, [fp, #-4]
   1a8d4:	b	1ad94 <__assert_fail@plt+0x9cbc>
   1a8d8:	movw	r0, #1
   1a8dc:	str	r0, [sp, #44]	; 0x2c
   1a8e0:	b	1a8e4 <__assert_fail@plt+0x980c>
   1a8e4:	ldr	r0, [fp, #8]
   1a8e8:	movw	r1, #0
   1a8ec:	cmp	r0, r1
   1a8f0:	bne	1a914 <__assert_fail@plt+0x983c>
   1a8f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a8f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a8fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a900:	str	r1, [r2, #4]
   1a904:	str	r0, [r2]
   1a908:	ldr	r0, [sp, #44]	; 0x2c
   1a90c:	str	r0, [fp, #-4]
   1a910:	b	1ad94 <__assert_fail@plt+0x9cbc>
   1a914:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a918:	ldr	r0, [r0]
   1a91c:	ldrb	r0, [r0]
   1a920:	cmp	r0, #0
   1a924:	beq	1ad78 <__assert_fail@plt+0x9ca0>
   1a928:	movw	r0, #1024	; 0x400
   1a92c:	str	r0, [sp, #32]
   1a930:	movw	r0, #1
   1a934:	str	r0, [sp, #28]
   1a938:	ldr	r0, [fp, #8]
   1a93c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a940:	ldr	r1, [r1]
   1a944:	ldrb	r1, [r1]
   1a948:	bl	10fe8 <strchr@plt>
   1a94c:	movw	r1, #0
   1a950:	cmp	r0, r1
   1a954:	bne	1a97c <__assert_fail@plt+0x98a4>
   1a958:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a95c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a960:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a964:	str	r1, [r2, #4]
   1a968:	str	r0, [r2]
   1a96c:	ldr	r0, [sp, #44]	; 0x2c
   1a970:	orr	r0, r0, #2
   1a974:	str	r0, [fp, #-4]
   1a978:	b	1ad94 <__assert_fail@plt+0x9cbc>
   1a97c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a980:	ldr	r0, [r0]
   1a984:	ldrb	r0, [r0]
   1a988:	sub	r0, r0, #69	; 0x45
   1a98c:	cmp	r0, #47	; 0x2f
   1a990:	str	r0, [sp, #8]
   1a994:	bhi	1ab00 <__assert_fail@plt+0x9a28>
   1a998:	add	r0, pc, #8
   1a99c:	ldr	r1, [sp, #8]
   1a9a0:	ldr	r0, [r0, r1, lsl #2]
   1a9a4:	mov	pc, r0
   1a9a8:	andeq	sl, r1, r8, ror #20
   1a9ac:	andeq	sl, r1, r0, lsl #22
   1a9b0:	andeq	sl, r1, r8, ror #20
   1a9b4:	andeq	sl, r1, r0, lsl #22
   1a9b8:	andeq	sl, r1, r0, lsl #22
   1a9bc:	andeq	sl, r1, r0, lsl #22
   1a9c0:	andeq	sl, r1, r8, ror #20
   1a9c4:	andeq	sl, r1, r0, lsl #22
   1a9c8:	andeq	sl, r1, r8, ror #20
   1a9cc:	andeq	sl, r1, r0, lsl #22
   1a9d0:	andeq	sl, r1, r0, lsl #22
   1a9d4:	andeq	sl, r1, r8, ror #20
   1a9d8:	andeq	sl, r1, r0, lsl #22
   1a9dc:	andeq	sl, r1, r0, lsl #22
   1a9e0:	andeq	sl, r1, r0, lsl #22
   1a9e4:	andeq	sl, r1, r8, ror #20
   1a9e8:	andeq	sl, r1, r0, lsl #22
   1a9ec:	andeq	sl, r1, r0, lsl #22
   1a9f0:	andeq	sl, r1, r0, lsl #22
   1a9f4:	andeq	sl, r1, r0, lsl #22
   1a9f8:	andeq	sl, r1, r8, ror #20
   1a9fc:	andeq	sl, r1, r8, ror #20
   1aa00:	andeq	sl, r1, r0, lsl #22
   1aa04:	andeq	sl, r1, r0, lsl #22
   1aa08:	andeq	sl, r1, r0, lsl #22
   1aa0c:	andeq	sl, r1, r0, lsl #22
   1aa10:	andeq	sl, r1, r0, lsl #22
   1aa14:	andeq	sl, r1, r0, lsl #22
   1aa18:	andeq	sl, r1, r0, lsl #22
   1aa1c:	andeq	sl, r1, r0, lsl #22
   1aa20:	andeq	sl, r1, r0, lsl #22
   1aa24:	andeq	sl, r1, r0, lsl #22
   1aa28:	andeq	sl, r1, r0, lsl #22
   1aa2c:	andeq	sl, r1, r0, lsl #22
   1aa30:	andeq	sl, r1, r8, ror #20
   1aa34:	andeq	sl, r1, r0, lsl #22
   1aa38:	andeq	sl, r1, r0, lsl #22
   1aa3c:	andeq	sl, r1, r0, lsl #22
   1aa40:	andeq	sl, r1, r8, ror #20
   1aa44:	andeq	sl, r1, r0, lsl #22
   1aa48:	andeq	sl, r1, r8, ror #20
   1aa4c:	andeq	sl, r1, r0, lsl #22
   1aa50:	andeq	sl, r1, r0, lsl #22
   1aa54:	andeq	sl, r1, r0, lsl #22
   1aa58:	andeq	sl, r1, r0, lsl #22
   1aa5c:	andeq	sl, r1, r0, lsl #22
   1aa60:	andeq	sl, r1, r0, lsl #22
   1aa64:	andeq	sl, r1, r8, ror #20
   1aa68:	ldr	r0, [fp, #8]
   1aa6c:	movw	r1, #48	; 0x30
   1aa70:	bl	10fe8 <strchr@plt>
   1aa74:	movw	r1, #0
   1aa78:	cmp	r0, r1
   1aa7c:	beq	1aafc <__assert_fail@plt+0x9a24>
   1aa80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aa84:	ldr	r0, [r0]
   1aa88:	ldrb	r0, [r0, #1]
   1aa8c:	mov	r1, r0
   1aa90:	cmp	r0, #66	; 0x42
   1aa94:	str	r1, [sp, #4]
   1aa98:	beq	1aae4 <__assert_fail@plt+0x9a0c>
   1aa9c:	b	1aaa0 <__assert_fail@plt+0x99c8>
   1aaa0:	ldr	r0, [sp, #4]
   1aaa4:	cmp	r0, #68	; 0x44
   1aaa8:	beq	1aae4 <__assert_fail@plt+0x9a0c>
   1aaac:	b	1aab0 <__assert_fail@plt+0x99d8>
   1aab0:	ldr	r0, [sp, #4]
   1aab4:	cmp	r0, #105	; 0x69
   1aab8:	bne	1aaf8 <__assert_fail@plt+0x9a20>
   1aabc:	b	1aac0 <__assert_fail@plt+0x99e8>
   1aac0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aac4:	ldr	r0, [r0]
   1aac8:	ldrb	r0, [r0, #2]
   1aacc:	cmp	r0, #66	; 0x42
   1aad0:	bne	1aae0 <__assert_fail@plt+0x9a08>
   1aad4:	ldr	r0, [sp, #28]
   1aad8:	add	r0, r0, #2
   1aadc:	str	r0, [sp, #28]
   1aae0:	b	1aaf8 <__assert_fail@plt+0x9a20>
   1aae4:	movw	r0, #1000	; 0x3e8
   1aae8:	str	r0, [sp, #32]
   1aaec:	ldr	r0, [sp, #28]
   1aaf0:	add	r0, r0, #1
   1aaf4:	str	r0, [sp, #28]
   1aaf8:	b	1aafc <__assert_fail@plt+0x9a24>
   1aafc:	b	1ab00 <__assert_fail@plt+0x9a28>
   1ab00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab04:	ldr	r0, [r0]
   1ab08:	ldrb	r0, [r0]
   1ab0c:	sub	r0, r0, #66	; 0x42
   1ab10:	cmp	r0, #53	; 0x35
   1ab14:	str	r0, [sp]
   1ab18:	bhi	1ad0c <__assert_fail@plt+0x9c34>
   1ab1c:	add	r0, pc, #8
   1ab20:	ldr	r1, [sp]
   1ab24:	ldr	r0, [r0, r1, lsl #2]
   1ab28:	mov	pc, r0
   1ab2c:	andeq	sl, r1, r8, lsl ip
   1ab30:	andeq	sl, r1, ip, lsl #26
   1ab34:	andeq	sl, r1, ip, lsl #26
   1ab38:	andeq	sl, r1, r8, lsr ip
   1ab3c:	andeq	sl, r1, ip, lsl #26
   1ab40:	andeq	sl, r1, r0, asr ip
   1ab44:	andeq	sl, r1, ip, lsl #26
   1ab48:	andeq	sl, r1, ip, lsl #26
   1ab4c:	andeq	sl, r1, ip, lsl #26
   1ab50:	andeq	sl, r1, r8, ror #24
   1ab54:	andeq	sl, r1, ip, lsl #26
   1ab58:	andeq	sl, r1, r0, lsl #25
   1ab5c:	andeq	sl, r1, ip, lsl #26
   1ab60:	andeq	sl, r1, ip, lsl #26
   1ab64:	muleq	r1, r8, ip
   1ab68:	andeq	sl, r1, ip, lsl #26
   1ab6c:	andeq	sl, r1, ip, lsl #26
   1ab70:	andeq	sl, r1, ip, lsl #26
   1ab74:			; <UNDEFINED> instruction: 0x0001acb0
   1ab78:	andeq	sl, r1, ip, lsl #26
   1ab7c:	andeq	sl, r1, ip, lsl #26
   1ab80:	andeq	sl, r1, ip, lsl #26
   1ab84:	andeq	sl, r1, ip, lsl #26
   1ab88:	ldrdeq	sl, [r1], -ip
   1ab8c:	strdeq	sl, [r1], -r4
   1ab90:	andeq	sl, r1, ip, lsl #26
   1ab94:	andeq	sl, r1, ip, lsl #26
   1ab98:	andeq	sl, r1, ip, lsl #26
   1ab9c:	andeq	sl, r1, ip, lsl #26
   1aba0:	andeq	sl, r1, ip, lsl #26
   1aba4:	andeq	sl, r1, ip, lsl #26
   1aba8:	andeq	sl, r1, ip, lsl #26
   1abac:	andeq	sl, r1, r4, lsl #24
   1abb0:	andeq	sl, r1, ip, lsr #24
   1abb4:	andeq	sl, r1, ip, lsl #26
   1abb8:	andeq	sl, r1, ip, lsl #26
   1abbc:	andeq	sl, r1, ip, lsl #26
   1abc0:	andeq	sl, r1, r0, asr ip
   1abc4:	andeq	sl, r1, ip, lsl #26
   1abc8:	andeq	sl, r1, ip, lsl #26
   1abcc:	andeq	sl, r1, ip, lsl #26
   1abd0:	andeq	sl, r1, r8, ror #24
   1abd4:	andeq	sl, r1, ip, lsl #26
   1abd8:	andeq	sl, r1, r0, lsl #25
   1abdc:	andeq	sl, r1, ip, lsl #26
   1abe0:	andeq	sl, r1, ip, lsl #26
   1abe4:	andeq	sl, r1, ip, lsl #26
   1abe8:	andeq	sl, r1, ip, lsl #26
   1abec:	andeq	sl, r1, ip, lsl #26
   1abf0:	andeq	sl, r1, ip, lsl #26
   1abf4:			; <UNDEFINED> instruction: 0x0001acb0
   1abf8:	andeq	sl, r1, ip, lsl #26
   1abfc:	andeq	sl, r1, ip, lsl #26
   1ac00:	andeq	sl, r1, r8, asr #25
   1ac04:	sub	r0, fp, #40	; 0x28
   1ac08:	movw	r1, #512	; 0x200
   1ac0c:	bl	1ada0 <__assert_fail@plt+0x9cc8>
   1ac10:	str	r0, [sp, #24]
   1ac14:	b	1ad30 <__assert_fail@plt+0x9c58>
   1ac18:	sub	r0, fp, #40	; 0x28
   1ac1c:	movw	r1, #1024	; 0x400
   1ac20:	bl	1ada0 <__assert_fail@plt+0x9cc8>
   1ac24:	str	r0, [sp, #24]
   1ac28:	b	1ad30 <__assert_fail@plt+0x9c58>
   1ac2c:	movw	r0, #0
   1ac30:	str	r0, [sp, #24]
   1ac34:	b	1ad30 <__assert_fail@plt+0x9c58>
   1ac38:	ldr	r1, [sp, #32]
   1ac3c:	sub	r0, fp, #40	; 0x28
   1ac40:	movw	r2, #6
   1ac44:	bl	1c8a8 <__assert_fail@plt+0xb7d0>
   1ac48:	str	r0, [sp, #24]
   1ac4c:	b	1ad30 <__assert_fail@plt+0x9c58>
   1ac50:	ldr	r1, [sp, #32]
   1ac54:	sub	r0, fp, #40	; 0x28
   1ac58:	movw	r2, #3
   1ac5c:	bl	1c8a8 <__assert_fail@plt+0xb7d0>
   1ac60:	str	r0, [sp, #24]
   1ac64:	b	1ad30 <__assert_fail@plt+0x9c58>
   1ac68:	ldr	r1, [sp, #32]
   1ac6c:	sub	r0, fp, #40	; 0x28
   1ac70:	movw	r2, #1
   1ac74:	bl	1c8a8 <__assert_fail@plt+0xb7d0>
   1ac78:	str	r0, [sp, #24]
   1ac7c:	b	1ad30 <__assert_fail@plt+0x9c58>
   1ac80:	ldr	r1, [sp, #32]
   1ac84:	sub	r0, fp, #40	; 0x28
   1ac88:	movw	r2, #2
   1ac8c:	bl	1c8a8 <__assert_fail@plt+0xb7d0>
   1ac90:	str	r0, [sp, #24]
   1ac94:	b	1ad30 <__assert_fail@plt+0x9c58>
   1ac98:	ldr	r1, [sp, #32]
   1ac9c:	sub	r0, fp, #40	; 0x28
   1aca0:	movw	r2, #5
   1aca4:	bl	1c8a8 <__assert_fail@plt+0xb7d0>
   1aca8:	str	r0, [sp, #24]
   1acac:	b	1ad30 <__assert_fail@plt+0x9c58>
   1acb0:	ldr	r1, [sp, #32]
   1acb4:	sub	r0, fp, #40	; 0x28
   1acb8:	movw	r2, #4
   1acbc:	bl	1c8a8 <__assert_fail@plt+0xb7d0>
   1acc0:	str	r0, [sp, #24]
   1acc4:	b	1ad30 <__assert_fail@plt+0x9c58>
   1acc8:	sub	r0, fp, #40	; 0x28
   1accc:	movw	r1, #2
   1acd0:	bl	1ada0 <__assert_fail@plt+0x9cc8>
   1acd4:	str	r0, [sp, #24]
   1acd8:	b	1ad30 <__assert_fail@plt+0x9c58>
   1acdc:	ldr	r1, [sp, #32]
   1ace0:	sub	r0, fp, #40	; 0x28
   1ace4:	movw	r2, #8
   1ace8:	bl	1c8a8 <__assert_fail@plt+0xb7d0>
   1acec:	str	r0, [sp, #24]
   1acf0:	b	1ad30 <__assert_fail@plt+0x9c58>
   1acf4:	ldr	r1, [sp, #32]
   1acf8:	sub	r0, fp, #40	; 0x28
   1acfc:	movw	r2, #7
   1ad00:	bl	1c8a8 <__assert_fail@plt+0xb7d0>
   1ad04:	str	r0, [sp, #24]
   1ad08:	b	1ad30 <__assert_fail@plt+0x9c58>
   1ad0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ad14:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ad18:	str	r1, [r2, #4]
   1ad1c:	str	r0, [r2]
   1ad20:	ldr	r0, [sp, #44]	; 0x2c
   1ad24:	orr	r0, r0, #2
   1ad28:	str	r0, [fp, #-4]
   1ad2c:	b	1ad94 <__assert_fail@plt+0x9cbc>
   1ad30:	ldr	r0, [sp, #24]
   1ad34:	ldr	r1, [sp, #44]	; 0x2c
   1ad38:	orr	r0, r1, r0
   1ad3c:	str	r0, [sp, #44]	; 0x2c
   1ad40:	ldr	r0, [sp, #28]
   1ad44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad48:	ldr	r2, [r1]
   1ad4c:	add	r0, r2, r0
   1ad50:	str	r0, [r1]
   1ad54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ad58:	ldr	r0, [r0]
   1ad5c:	ldrsb	r0, [r0]
   1ad60:	cmp	r0, #0
   1ad64:	beq	1ad74 <__assert_fail@plt+0x9c9c>
   1ad68:	ldr	r0, [sp, #44]	; 0x2c
   1ad6c:	orr	r0, r0, #2
   1ad70:	str	r0, [sp, #44]	; 0x2c
   1ad74:	b	1ad78 <__assert_fail@plt+0x9ca0>
   1ad78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ad80:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ad84:	str	r1, [r2, #4]
   1ad88:	str	r0, [r2]
   1ad8c:	ldr	r0, [sp, #44]	; 0x2c
   1ad90:	str	r0, [fp, #-4]
   1ad94:	ldr	r0, [fp, #-4]
   1ad98:	mov	sp, fp
   1ad9c:	pop	{fp, pc}
   1ada0:	push	{fp, lr}
   1ada4:	mov	fp, sp
   1ada8:	sub	sp, sp, #568	; 0x238
   1adac:	str	r0, [fp, #-8]
   1adb0:	str	r1, [fp, #-12]
   1adb4:	b	1b2e8 <__assert_fail@plt+0xa210>
   1adb8:	b	1b05c <__assert_fail@plt+0x9f84>
   1adbc:	ldr	r0, [fp, #-12]
   1adc0:	cmp	r0, #0
   1adc4:	bge	1af3c <__assert_fail@plt+0x9e64>
   1adc8:	mov	r0, #1
   1adcc:	cmp	r0, #0
   1add0:	bne	1ae88 <__assert_fail@plt+0x9db0>
   1add4:	b	1add8 <__assert_fail@plt+0x9d00>
   1add8:	b	1addc <__assert_fail@plt+0x9d04>
   1addc:	ldr	r0, [fp, #-8]
   1ade0:	ldr	r1, [r0]
   1ade4:	ldr	r0, [r0, #4]
   1ade8:	ldr	r2, [fp, #-12]
   1adec:	mov	r3, #127	; 0x7f
   1adf0:	sdiv	r2, r3, r2
   1adf4:	subs	r1, r1, r2
   1adf8:	sbcs	r0, r0, r2, asr #31
   1adfc:	str	r1, [fp, #-28]	; 0xffffffe4
   1ae00:	str	r0, [fp, #-32]	; 0xffffffe0
   1ae04:	bcc	1b014 <__assert_fail@plt+0x9f3c>
   1ae08:	b	1b038 <__assert_fail@plt+0x9f60>
   1ae0c:	b	1ae10 <__assert_fail@plt+0x9d38>
   1ae10:	ldr	r0, [pc, #4088]	; 1be10 <__assert_fail@plt+0xad38>
   1ae14:	ldr	r1, [fp, #-12]
   1ae18:	cmp	r1, r0
   1ae1c:	blt	1ae34 <__assert_fail@plt+0x9d5c>
   1ae20:	b	1ae40 <__assert_fail@plt+0x9d68>
   1ae24:	ldr	r0, [fp, #-12]
   1ae28:	movw	r1, #0
   1ae2c:	cmp	r1, r0
   1ae30:	bge	1ae40 <__assert_fail@plt+0x9d68>
   1ae34:	movw	r0, #0
   1ae38:	str	r0, [fp, #-36]	; 0xffffffdc
   1ae3c:	b	1ae58 <__assert_fail@plt+0x9d80>
   1ae40:	ldr	r0, [fp, #-12]
   1ae44:	movw	r1, #0
   1ae48:	sub	r0, r1, r0
   1ae4c:	movw	r1, #127	; 0x7f
   1ae50:	sdiv	r0, r1, r0
   1ae54:	str	r0, [fp, #-36]	; 0xffffffdc
   1ae58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ae5c:	ldr	r1, [fp, #-8]
   1ae60:	ldr	r2, [r1]
   1ae64:	ldr	r1, [r1, #4]
   1ae68:	mvn	r1, r1
   1ae6c:	mvn	r2, r2
   1ae70:	subs	r2, r2, r0
   1ae74:	sbcs	r0, r1, r0, asr #31
   1ae78:	str	r2, [fp, #-40]	; 0xffffffd8
   1ae7c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ae80:	bcs	1b014 <__assert_fail@plt+0x9f3c>
   1ae84:	b	1b038 <__assert_fail@plt+0x9f60>
   1ae88:	b	1ae8c <__assert_fail@plt+0x9db4>
   1ae8c:	b	1af0c <__assert_fail@plt+0x9e34>
   1ae90:	b	1af0c <__assert_fail@plt+0x9e34>
   1ae94:	ldr	r0, [fp, #-12]
   1ae98:	cmn	r0, #1
   1ae9c:	bne	1af0c <__assert_fail@plt+0x9e34>
   1aea0:	b	1aec4 <__assert_fail@plt+0x9dec>
   1aea4:	ldr	r0, [fp, #-8]
   1aea8:	ldr	r1, [r0]
   1aeac:	ldr	r0, [r0, #4]
   1aeb0:	eor	r1, r1, #128	; 0x80
   1aeb4:	orr	r0, r1, r0
   1aeb8:	cmp	r0, #0
   1aebc:	bne	1b014 <__assert_fail@plt+0x9f3c>
   1aec0:	b	1b038 <__assert_fail@plt+0x9f60>
   1aec4:	ldr	r0, [fp, #-8]
   1aec8:	ldr	r1, [r0]
   1aecc:	ldr	r0, [r0, #4]
   1aed0:	orr	r0, r1, r0
   1aed4:	cmp	r0, #0
   1aed8:	beq	1b038 <__assert_fail@plt+0x9f60>
   1aedc:	b	1aee0 <__assert_fail@plt+0x9e08>
   1aee0:	ldr	r0, [fp, #-8]
   1aee4:	ldr	r1, [r0]
   1aee8:	ldr	r0, [r0, #4]
   1aeec:	subs	r1, r1, #1
   1aef0:	sbc	r0, r0, #0
   1aef4:	rsbs	r1, r1, #127	; 0x7f
   1aef8:	rscs	r0, r0, #0
   1aefc:	str	r1, [fp, #-48]	; 0xffffffd0
   1af00:	str	r0, [fp, #-52]	; 0xffffffcc
   1af04:	bcc	1b014 <__assert_fail@plt+0x9f3c>
   1af08:	b	1b038 <__assert_fail@plt+0x9f60>
   1af0c:	ldr	r0, [fp, #-12]
   1af10:	mvn	r1, #127	; 0x7f
   1af14:	sdiv	r0, r1, r0
   1af18:	ldr	r1, [fp, #-8]
   1af1c:	ldr	r2, [r1]
   1af20:	ldr	r1, [r1, #4]
   1af24:	subs	r2, r0, r2
   1af28:	rscs	r0, r1, r0, asr #31
   1af2c:	str	r2, [fp, #-56]	; 0xffffffc8
   1af30:	str	r0, [fp, #-60]	; 0xffffffc4
   1af34:	bcc	1b014 <__assert_fail@plt+0x9f3c>
   1af38:	b	1b038 <__assert_fail@plt+0x9f60>
   1af3c:	ldr	r0, [fp, #-12]
   1af40:	cmp	r0, #0
   1af44:	bne	1af4c <__assert_fail@plt+0x9e74>
   1af48:	b	1b038 <__assert_fail@plt+0x9f60>
   1af4c:	mov	r0, #1
   1af50:	cmp	r0, #0
   1af54:	bne	1afe4 <__assert_fail@plt+0x9f0c>
   1af58:	b	1af5c <__assert_fail@plt+0x9e84>
   1af5c:	ldr	r0, [fp, #-8]
   1af60:	ldr	r1, [r0]
   1af64:	ldr	r0, [r0, #4]
   1af68:	and	r0, r1, r0
   1af6c:	cmn	r0, #1
   1af70:	bne	1afb0 <__assert_fail@plt+0x9ed8>
   1af74:	b	1af78 <__assert_fail@plt+0x9ea0>
   1af78:	b	1af7c <__assert_fail@plt+0x9ea4>
   1af7c:	ldr	r0, [fp, #-12]
   1af80:	mvn	r1, #127	; 0x7f
   1af84:	add	r0, r0, r1
   1af88:	movw	r1, #0
   1af8c:	cmp	r1, r0
   1af90:	blt	1b014 <__assert_fail@plt+0x9f3c>
   1af94:	b	1b038 <__assert_fail@plt+0x9f60>
   1af98:	ldr	r0, [fp, #-12]
   1af9c:	sub	r0, r0, #1
   1afa0:	movw	r1, #127	; 0x7f
   1afa4:	cmp	r1, r0
   1afa8:	blt	1b014 <__assert_fail@plt+0x9f3c>
   1afac:	b	1b038 <__assert_fail@plt+0x9f60>
   1afb0:	ldr	r0, [fp, #-8]
   1afb4:	ldr	r2, [r0]
   1afb8:	ldr	r3, [r0, #4]
   1afbc:	mvn	r0, #127	; 0x7f
   1afc0:	mvn	r1, #0
   1afc4:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1afc8:	ldr	r2, [fp, #-12]
   1afcc:	subs	r0, r0, r2
   1afd0:	sbcs	r1, r1, r2, asr #31
   1afd4:	str	r0, [fp, #-64]	; 0xffffffc0
   1afd8:	str	r1, [fp, #-68]	; 0xffffffbc
   1afdc:	bcc	1b014 <__assert_fail@plt+0x9f3c>
   1afe0:	b	1b038 <__assert_fail@plt+0x9f60>
   1afe4:	ldr	r0, [fp, #-12]
   1afe8:	mov	r1, #127	; 0x7f
   1afec:	sdiv	r0, r1, r0
   1aff0:	ldr	r1, [fp, #-8]
   1aff4:	ldr	r2, [r1]
   1aff8:	ldr	r1, [r1, #4]
   1affc:	subs	r2, r0, r2
   1b000:	rscs	r0, r1, r0, asr #31
   1b004:	str	r2, [fp, #-72]	; 0xffffffb8
   1b008:	str	r0, [fp, #-76]	; 0xffffffb4
   1b00c:	bcs	1b038 <__assert_fail@plt+0x9f60>
   1b010:	b	1b014 <__assert_fail@plt+0x9f3c>
   1b014:	ldr	r0, [fp, #-8]
   1b018:	ldr	r0, [r0]
   1b01c:	ldr	r1, [fp, #-12]
   1b020:	mul	r0, r0, r1
   1b024:	sxtb	r0, r0
   1b028:	asr	r1, r0, #31
   1b02c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b030:	str	r1, [fp, #-20]	; 0xffffffec
   1b034:	b	1c85c <__assert_fail@plt+0xb784>
   1b038:	ldr	r0, [fp, #-8]
   1b03c:	ldr	r0, [r0]
   1b040:	ldr	r1, [fp, #-12]
   1b044:	mul	r0, r0, r1
   1b048:	sxtb	r0, r0
   1b04c:	asr	r1, r0, #31
   1b050:	str	r0, [fp, #-24]	; 0xffffffe8
   1b054:	str	r1, [fp, #-20]	; 0xffffffec
   1b058:	b	1c878 <__assert_fail@plt+0xb7a0>
   1b05c:	ldr	r0, [fp, #-12]
   1b060:	cmp	r0, #0
   1b064:	bge	1b1bc <__assert_fail@plt+0xa0e4>
   1b068:	mov	r0, #1
   1b06c:	cmp	r0, #0
   1b070:	bne	1b128 <__assert_fail@plt+0xa050>
   1b074:	b	1b078 <__assert_fail@plt+0x9fa0>
   1b078:	b	1b07c <__assert_fail@plt+0x9fa4>
   1b07c:	ldr	r0, [fp, #-8]
   1b080:	ldr	r1, [r0]
   1b084:	ldr	r0, [r0, #4]
   1b088:	ldr	r2, [fp, #-12]
   1b08c:	mov	r3, #255	; 0xff
   1b090:	sdiv	r2, r3, r2
   1b094:	subs	r1, r1, r2
   1b098:	sbcs	r0, r0, r2, asr #31
   1b09c:	str	r1, [fp, #-80]	; 0xffffffb0
   1b0a0:	str	r0, [fp, #-84]	; 0xffffffac
   1b0a4:	bcc	1b2a0 <__assert_fail@plt+0xa1c8>
   1b0a8:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b0ac:	b	1b0b0 <__assert_fail@plt+0x9fd8>
   1b0b0:	ldr	r0, [pc, #3416]	; 1be10 <__assert_fail@plt+0xad38>
   1b0b4:	ldr	r1, [fp, #-12]
   1b0b8:	cmp	r1, r0
   1b0bc:	blt	1b0d4 <__assert_fail@plt+0x9ffc>
   1b0c0:	b	1b0e0 <__assert_fail@plt+0xa008>
   1b0c4:	ldr	r0, [fp, #-12]
   1b0c8:	movw	r1, #0
   1b0cc:	cmp	r1, r0
   1b0d0:	bge	1b0e0 <__assert_fail@plt+0xa008>
   1b0d4:	movw	r0, #0
   1b0d8:	str	r0, [fp, #-88]	; 0xffffffa8
   1b0dc:	b	1b0f8 <__assert_fail@plt+0xa020>
   1b0e0:	ldr	r0, [fp, #-12]
   1b0e4:	movw	r1, #0
   1b0e8:	sub	r0, r1, r0
   1b0ec:	movw	r1, #255	; 0xff
   1b0f0:	sdiv	r0, r1, r0
   1b0f4:	str	r0, [fp, #-88]	; 0xffffffa8
   1b0f8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1b0fc:	ldr	r1, [fp, #-8]
   1b100:	ldr	r2, [r1]
   1b104:	ldr	r1, [r1, #4]
   1b108:	mvn	r1, r1
   1b10c:	mvn	r2, r2
   1b110:	subs	r2, r2, r0
   1b114:	sbcs	r0, r1, r0, asr #31
   1b118:	str	r2, [fp, #-92]	; 0xffffffa4
   1b11c:	str	r0, [fp, #-96]	; 0xffffffa0
   1b120:	bcs	1b2a0 <__assert_fail@plt+0xa1c8>
   1b124:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b128:	b	1b12c <__assert_fail@plt+0xa054>
   1b12c:	b	1b18c <__assert_fail@plt+0xa0b4>
   1b130:	b	1b18c <__assert_fail@plt+0xa0b4>
   1b134:	ldr	r0, [fp, #-12]
   1b138:	cmn	r0, #1
   1b13c:	bne	1b18c <__assert_fail@plt+0xa0b4>
   1b140:	b	1b160 <__assert_fail@plt+0xa088>
   1b144:	ldr	r0, [fp, #-8]
   1b148:	ldr	r1, [r0]
   1b14c:	ldr	r0, [r0, #4]
   1b150:	orr	r0, r1, r0
   1b154:	cmp	r0, #0
   1b158:	bne	1b2a0 <__assert_fail@plt+0xa1c8>
   1b15c:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b160:	ldr	r0, [fp, #-8]
   1b164:	ldr	r1, [r0]
   1b168:	ldr	r0, [r0, #4]
   1b16c:	orr	r0, r1, r0
   1b170:	cmp	r0, #0
   1b174:	beq	1b2c4 <__assert_fail@plt+0xa1ec>
   1b178:	b	1b17c <__assert_fail@plt+0xa0a4>
   1b17c:	mov	r0, #0
   1b180:	cmp	r0, #0
   1b184:	bne	1b2a0 <__assert_fail@plt+0xa1c8>
   1b188:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b18c:	ldr	r0, [fp, #-12]
   1b190:	mov	r1, #0
   1b194:	sdiv	r0, r1, r0
   1b198:	ldr	r1, [fp, #-8]
   1b19c:	ldr	r2, [r1]
   1b1a0:	ldr	r1, [r1, #4]
   1b1a4:	subs	r2, r0, r2
   1b1a8:	rscs	r0, r1, r0, asr #31
   1b1ac:	str	r2, [fp, #-100]	; 0xffffff9c
   1b1b0:	str	r0, [fp, #-104]	; 0xffffff98
   1b1b4:	bcc	1b2a0 <__assert_fail@plt+0xa1c8>
   1b1b8:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b1bc:	ldr	r0, [fp, #-12]
   1b1c0:	cmp	r0, #0
   1b1c4:	bne	1b1cc <__assert_fail@plt+0xa0f4>
   1b1c8:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b1cc:	mov	r0, #1
   1b1d0:	cmp	r0, #0
   1b1d4:	bne	1b270 <__assert_fail@plt+0xa198>
   1b1d8:	b	1b1dc <__assert_fail@plt+0xa104>
   1b1dc:	b	1b1e4 <__assert_fail@plt+0xa10c>
   1b1e0:	b	1b1e8 <__assert_fail@plt+0xa110>
   1b1e4:	b	1b238 <__assert_fail@plt+0xa160>
   1b1e8:	ldr	r0, [fp, #-8]
   1b1ec:	ldr	r1, [r0]
   1b1f0:	ldr	r0, [r0, #4]
   1b1f4:	and	r0, r1, r0
   1b1f8:	cmn	r0, #1
   1b1fc:	bne	1b238 <__assert_fail@plt+0xa160>
   1b200:	b	1b204 <__assert_fail@plt+0xa12c>
   1b204:	b	1b208 <__assert_fail@plt+0xa130>
   1b208:	ldr	r0, [fp, #-12]
   1b20c:	add	r0, r0, #0
   1b210:	movw	r1, #0
   1b214:	cmp	r1, r0
   1b218:	blt	1b2a0 <__assert_fail@plt+0xa1c8>
   1b21c:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b220:	ldr	r0, [fp, #-12]
   1b224:	sub	r0, r0, #1
   1b228:	mvn	r1, #0
   1b22c:	cmp	r1, r0
   1b230:	blt	1b2a0 <__assert_fail@plt+0xa1c8>
   1b234:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b238:	ldr	r0, [fp, #-8]
   1b23c:	ldr	r2, [r0]
   1b240:	ldr	r3, [r0, #4]
   1b244:	mov	r0, #0
   1b248:	str	r0, [fp, #-108]	; 0xffffff94
   1b24c:	ldr	r1, [fp, #-108]	; 0xffffff94
   1b250:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1b254:	ldr	r2, [fp, #-12]
   1b258:	subs	r0, r0, r2
   1b25c:	sbcs	r1, r1, r2, asr #31
   1b260:	str	r0, [fp, #-112]	; 0xffffff90
   1b264:	str	r1, [fp, #-116]	; 0xffffff8c
   1b268:	bcc	1b2a0 <__assert_fail@plt+0xa1c8>
   1b26c:	b	1b2c4 <__assert_fail@plt+0xa1ec>
   1b270:	ldr	r0, [fp, #-12]
   1b274:	mov	r1, #255	; 0xff
   1b278:	sdiv	r0, r1, r0
   1b27c:	ldr	r1, [fp, #-8]
   1b280:	ldr	r2, [r1]
   1b284:	ldr	r1, [r1, #4]
   1b288:	subs	r2, r0, r2
   1b28c:	rscs	r0, r1, r0, asr #31
   1b290:	str	r2, [fp, #-120]	; 0xffffff88
   1b294:	str	r0, [fp, #-124]	; 0xffffff84
   1b298:	bcs	1b2c4 <__assert_fail@plt+0xa1ec>
   1b29c:	b	1b2a0 <__assert_fail@plt+0xa1c8>
   1b2a0:	ldr	r0, [fp, #-8]
   1b2a4:	ldr	r0, [r0]
   1b2a8:	ldr	r1, [fp, #-12]
   1b2ac:	mul	r0, r0, r1
   1b2b0:	uxtb	r0, r0
   1b2b4:	mov	r1, #0
   1b2b8:	str	r1, [fp, #-20]	; 0xffffffec
   1b2bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b2c0:	b	1c85c <__assert_fail@plt+0xb784>
   1b2c4:	ldr	r0, [fp, #-8]
   1b2c8:	ldr	r0, [r0]
   1b2cc:	ldr	r1, [fp, #-12]
   1b2d0:	mul	r0, r0, r1
   1b2d4:	uxtb	r0, r0
   1b2d8:	mov	r1, #0
   1b2dc:	str	r1, [fp, #-20]	; 0xffffffec
   1b2e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b2e4:	b	1c878 <__assert_fail@plt+0xb7a0>
   1b2e8:	b	1b824 <__assert_fail@plt+0xa74c>
   1b2ec:	b	1b598 <__assert_fail@plt+0xa4c0>
   1b2f0:	ldr	r0, [fp, #-12]
   1b2f4:	cmp	r0, #0
   1b2f8:	bge	1b474 <__assert_fail@plt+0xa39c>
   1b2fc:	mov	r0, #1
   1b300:	cmp	r0, #0
   1b304:	bne	1b3bc <__assert_fail@plt+0xa2e4>
   1b308:	b	1b30c <__assert_fail@plt+0xa234>
   1b30c:	b	1b310 <__assert_fail@plt+0xa238>
   1b310:	ldr	r0, [fp, #-8]
   1b314:	ldr	r1, [r0]
   1b318:	ldr	r0, [r0, #4]
   1b31c:	ldr	r2, [fp, #-12]
   1b320:	movw	r3, #32767	; 0x7fff
   1b324:	sdiv	r2, r3, r2
   1b328:	subs	r1, r1, r2
   1b32c:	sbcs	r0, r0, r2, asr #31
   1b330:	str	r1, [fp, #-128]	; 0xffffff80
   1b334:	str	r0, [fp, #-132]	; 0xffffff7c
   1b338:	bcc	1b550 <__assert_fail@plt+0xa478>
   1b33c:	b	1b574 <__assert_fail@plt+0xa49c>
   1b340:	b	1b344 <__assert_fail@plt+0xa26c>
   1b344:	ldr	r0, [pc, #2756]	; 1be10 <__assert_fail@plt+0xad38>
   1b348:	ldr	r1, [fp, #-12]
   1b34c:	cmp	r1, r0
   1b350:	blt	1b368 <__assert_fail@plt+0xa290>
   1b354:	b	1b374 <__assert_fail@plt+0xa29c>
   1b358:	ldr	r0, [fp, #-12]
   1b35c:	movw	r1, #0
   1b360:	cmp	r1, r0
   1b364:	bge	1b374 <__assert_fail@plt+0xa29c>
   1b368:	movw	r0, #0
   1b36c:	str	r0, [fp, #-136]	; 0xffffff78
   1b370:	b	1b38c <__assert_fail@plt+0xa2b4>
   1b374:	ldr	r0, [fp, #-12]
   1b378:	movw	r1, #0
   1b37c:	sub	r0, r1, r0
   1b380:	movw	r1, #32767	; 0x7fff
   1b384:	sdiv	r0, r1, r0
   1b388:	str	r0, [fp, #-136]	; 0xffffff78
   1b38c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1b390:	ldr	r1, [fp, #-8]
   1b394:	ldr	r2, [r1]
   1b398:	ldr	r1, [r1, #4]
   1b39c:	mvn	r1, r1
   1b3a0:	mvn	r2, r2
   1b3a4:	subs	r2, r2, r0
   1b3a8:	sbcs	r0, r1, r0, asr #31
   1b3ac:	str	r2, [fp, #-140]	; 0xffffff74
   1b3b0:	str	r0, [fp, #-144]	; 0xffffff70
   1b3b4:	bcs	1b550 <__assert_fail@plt+0xa478>
   1b3b8:	b	1b574 <__assert_fail@plt+0xa49c>
   1b3bc:	b	1b3c0 <__assert_fail@plt+0xa2e8>
   1b3c0:	b	1b440 <__assert_fail@plt+0xa368>
   1b3c4:	b	1b440 <__assert_fail@plt+0xa368>
   1b3c8:	ldr	r0, [fp, #-12]
   1b3cc:	cmn	r0, #1
   1b3d0:	bne	1b440 <__assert_fail@plt+0xa368>
   1b3d4:	b	1b3f8 <__assert_fail@plt+0xa320>
   1b3d8:	ldr	r0, [fp, #-8]
   1b3dc:	ldr	r1, [r0]
   1b3e0:	ldr	r0, [r0, #4]
   1b3e4:	eor	r1, r1, #32768	; 0x8000
   1b3e8:	orr	r0, r1, r0
   1b3ec:	cmp	r0, #0
   1b3f0:	bne	1b550 <__assert_fail@plt+0xa478>
   1b3f4:	b	1b574 <__assert_fail@plt+0xa49c>
   1b3f8:	ldr	r0, [fp, #-8]
   1b3fc:	ldr	r1, [r0]
   1b400:	ldr	r0, [r0, #4]
   1b404:	orr	r0, r1, r0
   1b408:	cmp	r0, #0
   1b40c:	beq	1b574 <__assert_fail@plt+0xa49c>
   1b410:	b	1b414 <__assert_fail@plt+0xa33c>
   1b414:	ldr	r0, [fp, #-8]
   1b418:	ldr	r1, [r0]
   1b41c:	ldr	r0, [r0, #4]
   1b420:	subs	r1, r1, #1
   1b424:	sbc	r0, r0, #0
   1b428:	lsr	r1, r1, #15
   1b42c:	orr	r1, r1, r0, lsl #17
   1b430:	orr	r0, r1, r0, lsr #15
   1b434:	cmp	r0, #0
   1b438:	bne	1b550 <__assert_fail@plt+0xa478>
   1b43c:	b	1b574 <__assert_fail@plt+0xa49c>
   1b440:	ldr	r0, [fp, #-12]
   1b444:	movw	r1, #32768	; 0x8000
   1b448:	movt	r1, #65535	; 0xffff
   1b44c:	sdiv	r0, r1, r0
   1b450:	ldr	r1, [fp, #-8]
   1b454:	ldr	r2, [r1]
   1b458:	ldr	r1, [r1, #4]
   1b45c:	subs	r2, r0, r2
   1b460:	rscs	r0, r1, r0, asr #31
   1b464:	str	r2, [fp, #-148]	; 0xffffff6c
   1b468:	str	r0, [fp, #-152]	; 0xffffff68
   1b46c:	bcc	1b550 <__assert_fail@plt+0xa478>
   1b470:	b	1b574 <__assert_fail@plt+0xa49c>
   1b474:	ldr	r0, [fp, #-12]
   1b478:	cmp	r0, #0
   1b47c:	bne	1b484 <__assert_fail@plt+0xa3ac>
   1b480:	b	1b574 <__assert_fail@plt+0xa49c>
   1b484:	mov	r0, #1
   1b488:	cmp	r0, #0
   1b48c:	bne	1b520 <__assert_fail@plt+0xa448>
   1b490:	b	1b494 <__assert_fail@plt+0xa3bc>
   1b494:	ldr	r0, [fp, #-8]
   1b498:	ldr	r1, [r0]
   1b49c:	ldr	r0, [r0, #4]
   1b4a0:	and	r0, r1, r0
   1b4a4:	cmn	r0, #1
   1b4a8:	bne	1b4e8 <__assert_fail@plt+0xa410>
   1b4ac:	b	1b4b0 <__assert_fail@plt+0xa3d8>
   1b4b0:	b	1b4b4 <__assert_fail@plt+0xa3dc>
   1b4b4:	ldr	r0, [pc, #4064]	; 1c49c <__assert_fail@plt+0xb3c4>
   1b4b8:	ldr	r1, [fp, #-12]
   1b4bc:	add	r0, r1, r0
   1b4c0:	movw	r1, #0
   1b4c4:	cmp	r1, r0
   1b4c8:	blt	1b550 <__assert_fail@plt+0xa478>
   1b4cc:	b	1b574 <__assert_fail@plt+0xa49c>
   1b4d0:	ldr	r0, [fp, #-12]
   1b4d4:	sub	r0, r0, #1
   1b4d8:	movw	r1, #32767	; 0x7fff
   1b4dc:	cmp	r1, r0
   1b4e0:	blt	1b550 <__assert_fail@plt+0xa478>
   1b4e4:	b	1b574 <__assert_fail@plt+0xa49c>
   1b4e8:	ldr	r0, [fp, #-8]
   1b4ec:	ldr	r2, [r0]
   1b4f0:	ldr	r3, [r0, #4]
   1b4f4:	movw	r0, #32768	; 0x8000
   1b4f8:	movt	r0, #65535	; 0xffff
   1b4fc:	mvn	r1, #0
   1b500:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1b504:	ldr	r2, [fp, #-12]
   1b508:	subs	r0, r0, r2
   1b50c:	sbcs	r1, r1, r2, asr #31
   1b510:	str	r0, [fp, #-156]	; 0xffffff64
   1b514:	str	r1, [fp, #-160]	; 0xffffff60
   1b518:	bcc	1b550 <__assert_fail@plt+0xa478>
   1b51c:	b	1b574 <__assert_fail@plt+0xa49c>
   1b520:	ldr	r0, [fp, #-12]
   1b524:	movw	r1, #32767	; 0x7fff
   1b528:	sdiv	r0, r1, r0
   1b52c:	ldr	r1, [fp, #-8]
   1b530:	ldr	r2, [r1]
   1b534:	ldr	r1, [r1, #4]
   1b538:	subs	r2, r0, r2
   1b53c:	rscs	r0, r1, r0, asr #31
   1b540:	str	r2, [fp, #-164]	; 0xffffff5c
   1b544:	str	r0, [fp, #-168]	; 0xffffff58
   1b548:	bcs	1b574 <__assert_fail@plt+0xa49c>
   1b54c:	b	1b550 <__assert_fail@plt+0xa478>
   1b550:	ldr	r0, [fp, #-8]
   1b554:	ldr	r0, [r0]
   1b558:	ldr	r1, [fp, #-12]
   1b55c:	mul	r0, r0, r1
   1b560:	sxth	r0, r0
   1b564:	asr	r1, r0, #31
   1b568:	str	r0, [fp, #-24]	; 0xffffffe8
   1b56c:	str	r1, [fp, #-20]	; 0xffffffec
   1b570:	b	1c85c <__assert_fail@plt+0xb784>
   1b574:	ldr	r0, [fp, #-8]
   1b578:	ldr	r0, [r0]
   1b57c:	ldr	r1, [fp, #-12]
   1b580:	mul	r0, r0, r1
   1b584:	sxth	r0, r0
   1b588:	asr	r1, r0, #31
   1b58c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b590:	str	r1, [fp, #-20]	; 0xffffffec
   1b594:	b	1c878 <__assert_fail@plt+0xb7a0>
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	cmp	r0, #0
   1b5a0:	bge	1b6f8 <__assert_fail@plt+0xa620>
   1b5a4:	mov	r0, #1
   1b5a8:	cmp	r0, #0
   1b5ac:	bne	1b664 <__assert_fail@plt+0xa58c>
   1b5b0:	b	1b5b4 <__assert_fail@plt+0xa4dc>
   1b5b4:	b	1b5b8 <__assert_fail@plt+0xa4e0>
   1b5b8:	ldr	r0, [fp, #-8]
   1b5bc:	ldr	r1, [r0]
   1b5c0:	ldr	r0, [r0, #4]
   1b5c4:	ldr	r2, [fp, #-12]
   1b5c8:	movw	r3, #65535	; 0xffff
   1b5cc:	sdiv	r2, r3, r2
   1b5d0:	subs	r1, r1, r2
   1b5d4:	sbcs	r0, r0, r2, asr #31
   1b5d8:	str	r1, [fp, #-172]	; 0xffffff54
   1b5dc:	str	r0, [fp, #-176]	; 0xffffff50
   1b5e0:	bcc	1b7dc <__assert_fail@plt+0xa704>
   1b5e4:	b	1b800 <__assert_fail@plt+0xa728>
   1b5e8:	b	1b5ec <__assert_fail@plt+0xa514>
   1b5ec:	ldr	r0, [pc, #2076]	; 1be10 <__assert_fail@plt+0xad38>
   1b5f0:	ldr	r1, [fp, #-12]
   1b5f4:	cmp	r1, r0
   1b5f8:	blt	1b610 <__assert_fail@plt+0xa538>
   1b5fc:	b	1b61c <__assert_fail@plt+0xa544>
   1b600:	ldr	r0, [fp, #-12]
   1b604:	movw	r1, #0
   1b608:	cmp	r1, r0
   1b60c:	bge	1b61c <__assert_fail@plt+0xa544>
   1b610:	movw	r0, #0
   1b614:	str	r0, [fp, #-180]	; 0xffffff4c
   1b618:	b	1b634 <__assert_fail@plt+0xa55c>
   1b61c:	ldr	r0, [fp, #-12]
   1b620:	movw	r1, #0
   1b624:	sub	r0, r1, r0
   1b628:	movw	r1, #65535	; 0xffff
   1b62c:	sdiv	r0, r1, r0
   1b630:	str	r0, [fp, #-180]	; 0xffffff4c
   1b634:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1b638:	ldr	r1, [fp, #-8]
   1b63c:	ldr	r2, [r1]
   1b640:	ldr	r1, [r1, #4]
   1b644:	mvn	r1, r1
   1b648:	mvn	r2, r2
   1b64c:	subs	r2, r2, r0
   1b650:	sbcs	r0, r1, r0, asr #31
   1b654:	str	r2, [fp, #-184]	; 0xffffff48
   1b658:	str	r0, [fp, #-188]	; 0xffffff44
   1b65c:	bcs	1b7dc <__assert_fail@plt+0xa704>
   1b660:	b	1b800 <__assert_fail@plt+0xa728>
   1b664:	b	1b668 <__assert_fail@plt+0xa590>
   1b668:	b	1b6c8 <__assert_fail@plt+0xa5f0>
   1b66c:	b	1b6c8 <__assert_fail@plt+0xa5f0>
   1b670:	ldr	r0, [fp, #-12]
   1b674:	cmn	r0, #1
   1b678:	bne	1b6c8 <__assert_fail@plt+0xa5f0>
   1b67c:	b	1b69c <__assert_fail@plt+0xa5c4>
   1b680:	ldr	r0, [fp, #-8]
   1b684:	ldr	r1, [r0]
   1b688:	ldr	r0, [r0, #4]
   1b68c:	orr	r0, r1, r0
   1b690:	cmp	r0, #0
   1b694:	bne	1b7dc <__assert_fail@plt+0xa704>
   1b698:	b	1b800 <__assert_fail@plt+0xa728>
   1b69c:	ldr	r0, [fp, #-8]
   1b6a0:	ldr	r1, [r0]
   1b6a4:	ldr	r0, [r0, #4]
   1b6a8:	orr	r0, r1, r0
   1b6ac:	cmp	r0, #0
   1b6b0:	beq	1b800 <__assert_fail@plt+0xa728>
   1b6b4:	b	1b6b8 <__assert_fail@plt+0xa5e0>
   1b6b8:	mov	r0, #0
   1b6bc:	cmp	r0, #0
   1b6c0:	bne	1b7dc <__assert_fail@plt+0xa704>
   1b6c4:	b	1b800 <__assert_fail@plt+0xa728>
   1b6c8:	ldr	r0, [fp, #-12]
   1b6cc:	mov	r1, #0
   1b6d0:	sdiv	r0, r1, r0
   1b6d4:	ldr	r1, [fp, #-8]
   1b6d8:	ldr	r2, [r1]
   1b6dc:	ldr	r1, [r1, #4]
   1b6e0:	subs	r2, r0, r2
   1b6e4:	rscs	r0, r1, r0, asr #31
   1b6e8:	str	r2, [fp, #-192]	; 0xffffff40
   1b6ec:	str	r0, [fp, #-196]	; 0xffffff3c
   1b6f0:	bcc	1b7dc <__assert_fail@plt+0xa704>
   1b6f4:	b	1b800 <__assert_fail@plt+0xa728>
   1b6f8:	ldr	r0, [fp, #-12]
   1b6fc:	cmp	r0, #0
   1b700:	bne	1b708 <__assert_fail@plt+0xa630>
   1b704:	b	1b800 <__assert_fail@plt+0xa728>
   1b708:	mov	r0, #1
   1b70c:	cmp	r0, #0
   1b710:	bne	1b7ac <__assert_fail@plt+0xa6d4>
   1b714:	b	1b718 <__assert_fail@plt+0xa640>
   1b718:	b	1b720 <__assert_fail@plt+0xa648>
   1b71c:	b	1b724 <__assert_fail@plt+0xa64c>
   1b720:	b	1b774 <__assert_fail@plt+0xa69c>
   1b724:	ldr	r0, [fp, #-8]
   1b728:	ldr	r1, [r0]
   1b72c:	ldr	r0, [r0, #4]
   1b730:	and	r0, r1, r0
   1b734:	cmn	r0, #1
   1b738:	bne	1b774 <__assert_fail@plt+0xa69c>
   1b73c:	b	1b740 <__assert_fail@plt+0xa668>
   1b740:	b	1b744 <__assert_fail@plt+0xa66c>
   1b744:	ldr	r0, [fp, #-12]
   1b748:	add	r0, r0, #0
   1b74c:	movw	r1, #0
   1b750:	cmp	r1, r0
   1b754:	blt	1b7dc <__assert_fail@plt+0xa704>
   1b758:	b	1b800 <__assert_fail@plt+0xa728>
   1b75c:	ldr	r0, [fp, #-12]
   1b760:	sub	r0, r0, #1
   1b764:	mvn	r1, #0
   1b768:	cmp	r1, r0
   1b76c:	blt	1b7dc <__assert_fail@plt+0xa704>
   1b770:	b	1b800 <__assert_fail@plt+0xa728>
   1b774:	ldr	r0, [fp, #-8]
   1b778:	ldr	r2, [r0]
   1b77c:	ldr	r3, [r0, #4]
   1b780:	mov	r0, #0
   1b784:	str	r0, [fp, #-200]	; 0xffffff38
   1b788:	ldr	r1, [fp, #-200]	; 0xffffff38
   1b78c:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1b790:	ldr	r2, [fp, #-12]
   1b794:	subs	r0, r0, r2
   1b798:	sbcs	r1, r1, r2, asr #31
   1b79c:	str	r0, [fp, #-204]	; 0xffffff34
   1b7a0:	str	r1, [fp, #-208]	; 0xffffff30
   1b7a4:	bcc	1b7dc <__assert_fail@plt+0xa704>
   1b7a8:	b	1b800 <__assert_fail@plt+0xa728>
   1b7ac:	ldr	r0, [fp, #-12]
   1b7b0:	movw	r1, #65535	; 0xffff
   1b7b4:	sdiv	r0, r1, r0
   1b7b8:	ldr	r1, [fp, #-8]
   1b7bc:	ldr	r2, [r1]
   1b7c0:	ldr	r1, [r1, #4]
   1b7c4:	subs	r2, r0, r2
   1b7c8:	rscs	r0, r1, r0, asr #31
   1b7cc:	str	r2, [fp, #-212]	; 0xffffff2c
   1b7d0:	str	r0, [fp, #-216]	; 0xffffff28
   1b7d4:	bcs	1b800 <__assert_fail@plt+0xa728>
   1b7d8:	b	1b7dc <__assert_fail@plt+0xa704>
   1b7dc:	ldr	r0, [fp, #-8]
   1b7e0:	ldr	r0, [r0]
   1b7e4:	ldr	r1, [fp, #-12]
   1b7e8:	mul	r0, r0, r1
   1b7ec:	uxth	r0, r0
   1b7f0:	mov	r1, #0
   1b7f4:	str	r1, [fp, #-20]	; 0xffffffec
   1b7f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7fc:	b	1c85c <__assert_fail@plt+0xb784>
   1b800:	ldr	r0, [fp, #-8]
   1b804:	ldr	r0, [r0]
   1b808:	ldr	r1, [fp, #-12]
   1b80c:	mul	r0, r0, r1
   1b810:	uxth	r0, r0
   1b814:	mov	r1, #0
   1b818:	str	r1, [fp, #-20]	; 0xffffffec
   1b81c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b820:	b	1c878 <__assert_fail@plt+0xb7a0>
   1b824:	b	1bd3c <__assert_fail@plt+0xac64>
   1b828:	b	1bab8 <__assert_fail@plt+0xa9e0>
   1b82c:	ldr	r0, [fp, #-12]
   1b830:	cmp	r0, #0
   1b834:	bge	1b9a4 <__assert_fail@plt+0xa8cc>
   1b838:	mov	r0, #1
   1b83c:	cmp	r0, #0
   1b840:	bne	1b8f8 <__assert_fail@plt+0xa820>
   1b844:	b	1b848 <__assert_fail@plt+0xa770>
   1b848:	b	1b84c <__assert_fail@plt+0xa774>
   1b84c:	ldr	r0, [fp, #-8]
   1b850:	ldr	r1, [r0]
   1b854:	ldr	r0, [r0, #4]
   1b858:	ldr	r2, [fp, #-12]
   1b85c:	mvn	r3, #-2147483648	; 0x80000000
   1b860:	sdiv	r2, r3, r2
   1b864:	subs	r1, r1, r2
   1b868:	sbcs	r0, r0, r2, asr #31
   1b86c:	str	r1, [fp, #-220]	; 0xffffff24
   1b870:	str	r0, [fp, #-224]	; 0xffffff20
   1b874:	bcc	1ba78 <__assert_fail@plt+0xa9a0>
   1b878:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1b87c:	b	1b880 <__assert_fail@plt+0xa7a8>
   1b880:	ldr	r0, [pc, #1416]	; 1be10 <__assert_fail@plt+0xad38>
   1b884:	ldr	r1, [fp, #-12]
   1b888:	cmp	r1, r0
   1b88c:	blt	1b8a4 <__assert_fail@plt+0xa7cc>
   1b890:	b	1b8b0 <__assert_fail@plt+0xa7d8>
   1b894:	ldr	r0, [fp, #-12]
   1b898:	movw	r1, #0
   1b89c:	cmp	r1, r0
   1b8a0:	bge	1b8b0 <__assert_fail@plt+0xa7d8>
   1b8a4:	movw	r0, #0
   1b8a8:	str	r0, [fp, #-228]	; 0xffffff1c
   1b8ac:	b	1b8c8 <__assert_fail@plt+0xa7f0>
   1b8b0:	ldr	r0, [pc, #4076]	; 1c8a4 <__assert_fail@plt+0xb7cc>
   1b8b4:	ldr	r1, [fp, #-12]
   1b8b8:	movw	r2, #0
   1b8bc:	sub	r1, r2, r1
   1b8c0:	sdiv	r0, r0, r1
   1b8c4:	str	r0, [fp, #-228]	; 0xffffff1c
   1b8c8:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1b8cc:	ldr	r1, [fp, #-8]
   1b8d0:	ldr	r2, [r1]
   1b8d4:	ldr	r1, [r1, #4]
   1b8d8:	mvn	r1, r1
   1b8dc:	mvn	r2, r2
   1b8e0:	subs	r2, r2, r0
   1b8e4:	sbcs	r0, r1, r0, asr #31
   1b8e8:	str	r2, [fp, #-232]	; 0xffffff18
   1b8ec:	str	r0, [fp, #-236]	; 0xffffff14
   1b8f0:	bcs	1ba78 <__assert_fail@plt+0xa9a0>
   1b8f4:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1b8f8:	ldr	r0, [fp, #-12]
   1b8fc:	cmn	r0, #1
   1b900:	bne	1b974 <__assert_fail@plt+0xa89c>
   1b904:	b	1b928 <__assert_fail@plt+0xa850>
   1b908:	ldr	r0, [fp, #-8]
   1b90c:	ldr	r1, [r0]
   1b910:	ldr	r0, [r0, #4]
   1b914:	eor	r1, r1, #-2147483648	; 0x80000000
   1b918:	orr	r0, r1, r0
   1b91c:	cmp	r0, #0
   1b920:	bne	1ba78 <__assert_fail@plt+0xa9a0>
   1b924:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1b928:	ldr	r0, [fp, #-8]
   1b92c:	ldr	r1, [r0]
   1b930:	ldr	r0, [r0, #4]
   1b934:	orr	r0, r1, r0
   1b938:	cmp	r0, #0
   1b93c:	beq	1ba98 <__assert_fail@plt+0xa9c0>
   1b940:	b	1b944 <__assert_fail@plt+0xa86c>
   1b944:	ldr	r0, [fp, #-8]
   1b948:	ldr	r1, [r0]
   1b94c:	ldr	r0, [r0, #4]
   1b950:	subs	r1, r1, #1
   1b954:	sbc	r0, r0, #0
   1b958:	mvn	r2, #-2147483648	; 0x80000000
   1b95c:	subs	r1, r2, r1
   1b960:	rscs	r0, r0, #0
   1b964:	str	r1, [fp, #-240]	; 0xffffff10
   1b968:	str	r0, [fp, #-244]	; 0xffffff0c
   1b96c:	bcc	1ba78 <__assert_fail@plt+0xa9a0>
   1b970:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1b974:	ldr	r0, [fp, #-12]
   1b978:	mov	r1, #-2147483648	; 0x80000000
   1b97c:	sdiv	r0, r1, r0
   1b980:	ldr	r1, [fp, #-8]
   1b984:	ldr	r2, [r1]
   1b988:	ldr	r1, [r1, #4]
   1b98c:	subs	r2, r0, r2
   1b990:	rscs	r0, r1, r0, asr #31
   1b994:	str	r2, [fp, #-248]	; 0xffffff08
   1b998:	str	r0, [fp, #-252]	; 0xffffff04
   1b99c:	bcc	1ba78 <__assert_fail@plt+0xa9a0>
   1b9a0:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1b9a4:	ldr	r0, [fp, #-12]
   1b9a8:	cmp	r0, #0
   1b9ac:	bne	1b9b4 <__assert_fail@plt+0xa8dc>
   1b9b0:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1b9b4:	mov	r0, #1
   1b9b8:	cmp	r0, #0
   1b9bc:	bne	1ba48 <__assert_fail@plt+0xa970>
   1b9c0:	b	1b9c4 <__assert_fail@plt+0xa8ec>
   1b9c4:	ldr	r0, [fp, #-8]
   1b9c8:	ldr	r1, [r0]
   1b9cc:	ldr	r0, [r0, #4]
   1b9d0:	and	r0, r1, r0
   1b9d4:	cmn	r0, #1
   1b9d8:	bne	1ba14 <__assert_fail@plt+0xa93c>
   1b9dc:	b	1b9e0 <__assert_fail@plt+0xa908>
   1b9e0:	b	1b9e4 <__assert_fail@plt+0xa90c>
   1b9e4:	ldr	r0, [fp, #-12]
   1b9e8:	add	r0, r0, #-2147483648	; 0x80000000
   1b9ec:	movw	r1, #0
   1b9f0:	cmp	r1, r0
   1b9f4:	blt	1ba78 <__assert_fail@plt+0xa9a0>
   1b9f8:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1b9fc:	ldr	r0, [pc, #3744]	; 1c8a4 <__assert_fail@plt+0xb7cc>
   1ba00:	ldr	r1, [fp, #-12]
   1ba04:	sub	r1, r1, #1
   1ba08:	cmp	r0, r1
   1ba0c:	blt	1ba78 <__assert_fail@plt+0xa9a0>
   1ba10:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1ba14:	ldr	r0, [fp, #-8]
   1ba18:	ldr	r2, [r0]
   1ba1c:	ldr	r3, [r0, #4]
   1ba20:	mov	r0, #-2147483648	; 0x80000000
   1ba24:	mvn	r1, #0
   1ba28:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1ba2c:	ldr	r2, [fp, #-12]
   1ba30:	subs	r0, r0, r2
   1ba34:	sbcs	r1, r1, r2, asr #31
   1ba38:	str	r0, [fp, #-256]	; 0xffffff00
   1ba3c:	str	r1, [fp, #-260]	; 0xfffffefc
   1ba40:	bcc	1ba78 <__assert_fail@plt+0xa9a0>
   1ba44:	b	1ba98 <__assert_fail@plt+0xa9c0>
   1ba48:	ldr	r0, [fp, #-12]
   1ba4c:	mvn	r1, #-2147483648	; 0x80000000
   1ba50:	sdiv	r0, r1, r0
   1ba54:	ldr	r1, [fp, #-8]
   1ba58:	ldr	r2, [r1]
   1ba5c:	ldr	r1, [r1, #4]
   1ba60:	subs	r2, r0, r2
   1ba64:	rscs	r0, r1, r0, asr #31
   1ba68:	str	r2, [fp, #-264]	; 0xfffffef8
   1ba6c:	str	r0, [fp, #-268]	; 0xfffffef4
   1ba70:	bcs	1ba98 <__assert_fail@plt+0xa9c0>
   1ba74:	b	1ba78 <__assert_fail@plt+0xa9a0>
   1ba78:	ldr	r0, [fp, #-8]
   1ba7c:	ldr	r0, [r0]
   1ba80:	ldr	r1, [fp, #-12]
   1ba84:	mul	r0, r0, r1
   1ba88:	asr	r1, r0, #31
   1ba8c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ba90:	str	r1, [fp, #-20]	; 0xffffffec
   1ba94:	b	1c85c <__assert_fail@plt+0xb784>
   1ba98:	ldr	r0, [fp, #-8]
   1ba9c:	ldr	r0, [r0]
   1baa0:	ldr	r1, [fp, #-12]
   1baa4:	mul	r0, r0, r1
   1baa8:	asr	r1, r0, #31
   1baac:	str	r0, [fp, #-24]	; 0xffffffe8
   1bab0:	str	r1, [fp, #-20]	; 0xffffffec
   1bab4:	b	1c878 <__assert_fail@plt+0xb7a0>
   1bab8:	ldr	r0, [fp, #-12]
   1babc:	cmp	r0, #0
   1bac0:	bge	1bc18 <__assert_fail@plt+0xab40>
   1bac4:	mov	r0, #1
   1bac8:	cmp	r0, #0
   1bacc:	bne	1bb84 <__assert_fail@plt+0xaaac>
   1bad0:	b	1bad4 <__assert_fail@plt+0xa9fc>
   1bad4:	b	1bb08 <__assert_fail@plt+0xaa30>
   1bad8:	ldr	r0, [fp, #-8]
   1badc:	ldr	r1, [r0]
   1bae0:	ldr	r0, [r0, #4]
   1bae4:	ldr	r2, [fp, #-12]
   1bae8:	mvn	r3, #0
   1baec:	udiv	r2, r3, r2
   1baf0:	subs	r1, r1, r2
   1baf4:	sbcs	r0, r0, #0
   1baf8:	str	r1, [fp, #-272]	; 0xfffffef0
   1bafc:	str	r0, [fp, #-276]	; 0xfffffeec
   1bb00:	bcc	1bcfc <__assert_fail@plt+0xac24>
   1bb04:	b	1bd1c <__assert_fail@plt+0xac44>
   1bb08:	b	1bb0c <__assert_fail@plt+0xaa34>
   1bb0c:	ldr	r0, [pc, #3468]	; 1c8a0 <__assert_fail@plt+0xb7c8>
   1bb10:	ldr	r1, [fp, #-12]
   1bb14:	cmp	r1, r0
   1bb18:	blt	1bb30 <__assert_fail@plt+0xaa58>
   1bb1c:	b	1bb3c <__assert_fail@plt+0xaa64>
   1bb20:	ldr	r0, [fp, #-12]
   1bb24:	movw	r1, #0
   1bb28:	cmp	r1, r0
   1bb2c:	bge	1bb3c <__assert_fail@plt+0xaa64>
   1bb30:	movw	r0, #1
   1bb34:	str	r0, [fp, #-280]	; 0xfffffee8
   1bb38:	b	1bb54 <__assert_fail@plt+0xaa7c>
   1bb3c:	ldr	r0, [fp, #-12]
   1bb40:	movw	r1, #0
   1bb44:	sub	r0, r1, r0
   1bb48:	mvn	r1, #0
   1bb4c:	udiv	r0, r1, r0
   1bb50:	str	r0, [fp, #-280]	; 0xfffffee8
   1bb54:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1bb58:	ldr	r1, [fp, #-8]
   1bb5c:	ldr	r2, [r1]
   1bb60:	ldr	r1, [r1, #4]
   1bb64:	mvn	r1, r1
   1bb68:	mvn	r2, r2
   1bb6c:	subs	r0, r2, r0
   1bb70:	sbcs	r1, r1, #0
   1bb74:	str	r0, [sp, #284]	; 0x11c
   1bb78:	str	r1, [sp, #280]	; 0x118
   1bb7c:	bcs	1bcfc <__assert_fail@plt+0xac24>
   1bb80:	b	1bd1c <__assert_fail@plt+0xac44>
   1bb84:	b	1bb88 <__assert_fail@plt+0xaab0>
   1bb88:	b	1bbe8 <__assert_fail@plt+0xab10>
   1bb8c:	b	1bbe8 <__assert_fail@plt+0xab10>
   1bb90:	ldr	r0, [fp, #-12]
   1bb94:	cmn	r0, #1
   1bb98:	bne	1bbe8 <__assert_fail@plt+0xab10>
   1bb9c:	b	1bbbc <__assert_fail@plt+0xaae4>
   1bba0:	ldr	r0, [fp, #-8]
   1bba4:	ldr	r1, [r0]
   1bba8:	ldr	r0, [r0, #4]
   1bbac:	orr	r0, r1, r0
   1bbb0:	cmp	r0, #0
   1bbb4:	bne	1bcfc <__assert_fail@plt+0xac24>
   1bbb8:	b	1bd1c <__assert_fail@plt+0xac44>
   1bbbc:	ldr	r0, [fp, #-8]
   1bbc0:	ldr	r1, [r0]
   1bbc4:	ldr	r0, [r0, #4]
   1bbc8:	orr	r0, r1, r0
   1bbcc:	cmp	r0, #0
   1bbd0:	beq	1bd1c <__assert_fail@plt+0xac44>
   1bbd4:	b	1bbd8 <__assert_fail@plt+0xab00>
   1bbd8:	mov	r0, #0
   1bbdc:	cmp	r0, #0
   1bbe0:	bne	1bcfc <__assert_fail@plt+0xac24>
   1bbe4:	b	1bd1c <__assert_fail@plt+0xac44>
   1bbe8:	ldr	r0, [fp, #-12]
   1bbec:	mov	r1, #0
   1bbf0:	sdiv	r0, r1, r0
   1bbf4:	ldr	r1, [fp, #-8]
   1bbf8:	ldr	r2, [r1]
   1bbfc:	ldr	r1, [r1, #4]
   1bc00:	subs	r2, r0, r2
   1bc04:	rscs	r0, r1, r0, asr #31
   1bc08:	str	r2, [sp, #276]	; 0x114
   1bc0c:	str	r0, [sp, #272]	; 0x110
   1bc10:	bcc	1bcfc <__assert_fail@plt+0xac24>
   1bc14:	b	1bd1c <__assert_fail@plt+0xac44>
   1bc18:	ldr	r0, [fp, #-12]
   1bc1c:	cmp	r0, #0
   1bc20:	bne	1bc28 <__assert_fail@plt+0xab50>
   1bc24:	b	1bd1c <__assert_fail@plt+0xac44>
   1bc28:	mov	r0, #1
   1bc2c:	cmp	r0, #0
   1bc30:	bne	1bccc <__assert_fail@plt+0xabf4>
   1bc34:	b	1bc38 <__assert_fail@plt+0xab60>
   1bc38:	b	1bc40 <__assert_fail@plt+0xab68>
   1bc3c:	b	1bc44 <__assert_fail@plt+0xab6c>
   1bc40:	b	1bc94 <__assert_fail@plt+0xabbc>
   1bc44:	ldr	r0, [fp, #-8]
   1bc48:	ldr	r1, [r0]
   1bc4c:	ldr	r0, [r0, #4]
   1bc50:	and	r0, r1, r0
   1bc54:	cmn	r0, #1
   1bc58:	bne	1bc94 <__assert_fail@plt+0xabbc>
   1bc5c:	b	1bc60 <__assert_fail@plt+0xab88>
   1bc60:	b	1bc64 <__assert_fail@plt+0xab8c>
   1bc64:	ldr	r0, [fp, #-12]
   1bc68:	add	r0, r0, #0
   1bc6c:	movw	r1, #0
   1bc70:	cmp	r1, r0
   1bc74:	blt	1bcfc <__assert_fail@plt+0xac24>
   1bc78:	b	1bd1c <__assert_fail@plt+0xac44>
   1bc7c:	ldr	r0, [fp, #-12]
   1bc80:	sub	r0, r0, #1
   1bc84:	mvn	r1, #0
   1bc88:	cmp	r1, r0
   1bc8c:	blt	1bcfc <__assert_fail@plt+0xac24>
   1bc90:	b	1bd1c <__assert_fail@plt+0xac44>
   1bc94:	ldr	r0, [fp, #-8]
   1bc98:	ldr	r2, [r0]
   1bc9c:	ldr	r3, [r0, #4]
   1bca0:	mov	r0, #0
   1bca4:	str	r0, [sp, #268]	; 0x10c
   1bca8:	ldr	r1, [sp, #268]	; 0x10c
   1bcac:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1bcb0:	ldr	r2, [fp, #-12]
   1bcb4:	subs	r0, r0, r2
   1bcb8:	sbcs	r1, r1, r2, asr #31
   1bcbc:	str	r0, [sp, #264]	; 0x108
   1bcc0:	str	r1, [sp, #260]	; 0x104
   1bcc4:	bcc	1bcfc <__assert_fail@plt+0xac24>
   1bcc8:	b	1bd1c <__assert_fail@plt+0xac44>
   1bccc:	ldr	r0, [fp, #-12]
   1bcd0:	mvn	r1, #0
   1bcd4:	udiv	r0, r1, r0
   1bcd8:	ldr	r1, [fp, #-8]
   1bcdc:	ldr	r2, [r1]
   1bce0:	ldr	r1, [r1, #4]
   1bce4:	subs	r0, r0, r2
   1bce8:	rscs	r1, r1, #0
   1bcec:	str	r0, [sp, #256]	; 0x100
   1bcf0:	str	r1, [sp, #252]	; 0xfc
   1bcf4:	bcs	1bd1c <__assert_fail@plt+0xac44>
   1bcf8:	b	1bcfc <__assert_fail@plt+0xac24>
   1bcfc:	ldr	r0, [fp, #-8]
   1bd00:	ldr	r0, [r0]
   1bd04:	ldr	r1, [fp, #-12]
   1bd08:	mul	r0, r0, r1
   1bd0c:	mov	r1, #0
   1bd10:	str	r1, [fp, #-20]	; 0xffffffec
   1bd14:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd18:	b	1c85c <__assert_fail@plt+0xb784>
   1bd1c:	ldr	r0, [fp, #-8]
   1bd20:	ldr	r0, [r0]
   1bd24:	ldr	r1, [fp, #-12]
   1bd28:	mul	r0, r0, r1
   1bd2c:	mov	r1, #0
   1bd30:	str	r1, [fp, #-20]	; 0xffffffec
   1bd34:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd38:	b	1c878 <__assert_fail@plt+0xb7a0>
   1bd3c:	b	1c258 <__assert_fail@plt+0xb180>
   1bd40:	b	1bfd4 <__assert_fail@plt+0xaefc>
   1bd44:	ldr	r0, [fp, #-12]
   1bd48:	cmp	r0, #0
   1bd4c:	bge	1bec0 <__assert_fail@plt+0xade8>
   1bd50:	mov	r0, #1
   1bd54:	cmp	r0, #0
   1bd58:	bne	1be14 <__assert_fail@plt+0xad3c>
   1bd5c:	b	1bd60 <__assert_fail@plt+0xac88>
   1bd60:	b	1bd64 <__assert_fail@plt+0xac8c>
   1bd64:	ldr	r0, [fp, #-8]
   1bd68:	ldr	r1, [r0]
   1bd6c:	ldr	r0, [r0, #4]
   1bd70:	ldr	r2, [fp, #-12]
   1bd74:	mvn	r3, #-2147483648	; 0x80000000
   1bd78:	sdiv	r2, r3, r2
   1bd7c:	subs	r1, r1, r2
   1bd80:	sbcs	r0, r0, r2, asr #31
   1bd84:	str	r1, [sp, #248]	; 0xf8
   1bd88:	str	r0, [sp, #244]	; 0xf4
   1bd8c:	bcc	1bf94 <__assert_fail@plt+0xaebc>
   1bd90:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1bd94:	b	1bd98 <__assert_fail@plt+0xacc0>
   1bd98:	ldr	r0, [pc, #2816]	; 1c8a0 <__assert_fail@plt+0xb7c8>
   1bd9c:	ldr	r1, [fp, #-12]
   1bda0:	cmp	r1, r0
   1bda4:	blt	1bdbc <__assert_fail@plt+0xace4>
   1bda8:	b	1bdc8 <__assert_fail@plt+0xacf0>
   1bdac:	ldr	r0, [fp, #-12]
   1bdb0:	movw	r1, #0
   1bdb4:	cmp	r1, r0
   1bdb8:	bge	1bdc8 <__assert_fail@plt+0xacf0>
   1bdbc:	movw	r0, #0
   1bdc0:	str	r0, [sp, #240]	; 0xf0
   1bdc4:	b	1bde0 <__assert_fail@plt+0xad08>
   1bdc8:	ldr	r0, [pc, #2772]	; 1c8a4 <__assert_fail@plt+0xb7cc>
   1bdcc:	ldr	r1, [fp, #-12]
   1bdd0:	movw	r2, #0
   1bdd4:	sub	r1, r2, r1
   1bdd8:	sdiv	r0, r0, r1
   1bddc:	str	r0, [sp, #240]	; 0xf0
   1bde0:	ldr	r0, [sp, #240]	; 0xf0
   1bde4:	ldr	r1, [fp, #-8]
   1bde8:	ldr	r2, [r1]
   1bdec:	ldr	r1, [r1, #4]
   1bdf0:	mvn	r1, r1
   1bdf4:	mvn	r2, r2
   1bdf8:	subs	r2, r2, r0
   1bdfc:	sbcs	r0, r1, r0, asr #31
   1be00:	str	r2, [sp, #236]	; 0xec
   1be04:	str	r0, [sp, #232]	; 0xe8
   1be08:	bcs	1bf94 <__assert_fail@plt+0xaebc>
   1be0c:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1be10:	andhi	r0, r0, r1
   1be14:	ldr	r0, [fp, #-12]
   1be18:	cmn	r0, #1
   1be1c:	bne	1be90 <__assert_fail@plt+0xadb8>
   1be20:	b	1be44 <__assert_fail@plt+0xad6c>
   1be24:	ldr	r0, [fp, #-8]
   1be28:	ldr	r1, [r0]
   1be2c:	ldr	r0, [r0, #4]
   1be30:	eor	r1, r1, #-2147483648	; 0x80000000
   1be34:	orr	r0, r1, r0
   1be38:	cmp	r0, #0
   1be3c:	bne	1bf94 <__assert_fail@plt+0xaebc>
   1be40:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1be44:	ldr	r0, [fp, #-8]
   1be48:	ldr	r1, [r0]
   1be4c:	ldr	r0, [r0, #4]
   1be50:	orr	r0, r1, r0
   1be54:	cmp	r0, #0
   1be58:	beq	1bfb4 <__assert_fail@plt+0xaedc>
   1be5c:	b	1be60 <__assert_fail@plt+0xad88>
   1be60:	ldr	r0, [fp, #-8]
   1be64:	ldr	r1, [r0]
   1be68:	ldr	r0, [r0, #4]
   1be6c:	subs	r1, r1, #1
   1be70:	sbc	r0, r0, #0
   1be74:	mvn	r2, #-2147483648	; 0x80000000
   1be78:	subs	r1, r2, r1
   1be7c:	rscs	r0, r0, #0
   1be80:	str	r1, [sp, #228]	; 0xe4
   1be84:	str	r0, [sp, #224]	; 0xe0
   1be88:	bcc	1bf94 <__assert_fail@plt+0xaebc>
   1be8c:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1be90:	ldr	r0, [fp, #-12]
   1be94:	mov	r1, #-2147483648	; 0x80000000
   1be98:	sdiv	r0, r1, r0
   1be9c:	ldr	r1, [fp, #-8]
   1bea0:	ldr	r2, [r1]
   1bea4:	ldr	r1, [r1, #4]
   1bea8:	subs	r2, r0, r2
   1beac:	rscs	r0, r1, r0, asr #31
   1beb0:	str	r2, [sp, #220]	; 0xdc
   1beb4:	str	r0, [sp, #216]	; 0xd8
   1beb8:	bcc	1bf94 <__assert_fail@plt+0xaebc>
   1bebc:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1bec0:	ldr	r0, [fp, #-12]
   1bec4:	cmp	r0, #0
   1bec8:	bne	1bed0 <__assert_fail@plt+0xadf8>
   1becc:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1bed0:	mov	r0, #1
   1bed4:	cmp	r0, #0
   1bed8:	bne	1bf64 <__assert_fail@plt+0xae8c>
   1bedc:	b	1bee0 <__assert_fail@plt+0xae08>
   1bee0:	ldr	r0, [fp, #-8]
   1bee4:	ldr	r1, [r0]
   1bee8:	ldr	r0, [r0, #4]
   1beec:	and	r0, r1, r0
   1bef0:	cmn	r0, #1
   1bef4:	bne	1bf30 <__assert_fail@plt+0xae58>
   1bef8:	b	1befc <__assert_fail@plt+0xae24>
   1befc:	b	1bf00 <__assert_fail@plt+0xae28>
   1bf00:	ldr	r0, [fp, #-12]
   1bf04:	add	r0, r0, #-2147483648	; 0x80000000
   1bf08:	movw	r1, #0
   1bf0c:	cmp	r1, r0
   1bf10:	blt	1bf94 <__assert_fail@plt+0xaebc>
   1bf14:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1bf18:	ldr	r0, [pc, #2436]	; 1c8a4 <__assert_fail@plt+0xb7cc>
   1bf1c:	ldr	r1, [fp, #-12]
   1bf20:	sub	r1, r1, #1
   1bf24:	cmp	r0, r1
   1bf28:	blt	1bf94 <__assert_fail@plt+0xaebc>
   1bf2c:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1bf30:	ldr	r0, [fp, #-8]
   1bf34:	ldr	r2, [r0]
   1bf38:	ldr	r3, [r0, #4]
   1bf3c:	mov	r0, #-2147483648	; 0x80000000
   1bf40:	mvn	r1, #0
   1bf44:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1bf48:	ldr	r2, [fp, #-12]
   1bf4c:	subs	r0, r0, r2
   1bf50:	sbcs	r1, r1, r2, asr #31
   1bf54:	str	r0, [sp, #212]	; 0xd4
   1bf58:	str	r1, [sp, #208]	; 0xd0
   1bf5c:	bcc	1bf94 <__assert_fail@plt+0xaebc>
   1bf60:	b	1bfb4 <__assert_fail@plt+0xaedc>
   1bf64:	ldr	r0, [fp, #-12]
   1bf68:	mvn	r1, #-2147483648	; 0x80000000
   1bf6c:	sdiv	r0, r1, r0
   1bf70:	ldr	r1, [fp, #-8]
   1bf74:	ldr	r2, [r1]
   1bf78:	ldr	r1, [r1, #4]
   1bf7c:	subs	r2, r0, r2
   1bf80:	rscs	r0, r1, r0, asr #31
   1bf84:	str	r2, [sp, #204]	; 0xcc
   1bf88:	str	r0, [sp, #200]	; 0xc8
   1bf8c:	bcs	1bfb4 <__assert_fail@plt+0xaedc>
   1bf90:	b	1bf94 <__assert_fail@plt+0xaebc>
   1bf94:	ldr	r0, [fp, #-8]
   1bf98:	ldr	r0, [r0]
   1bf9c:	ldr	r1, [fp, #-12]
   1bfa0:	mul	r0, r0, r1
   1bfa4:	asr	r1, r0, #31
   1bfa8:	str	r0, [fp, #-24]	; 0xffffffe8
   1bfac:	str	r1, [fp, #-20]	; 0xffffffec
   1bfb0:	b	1c85c <__assert_fail@plt+0xb784>
   1bfb4:	ldr	r0, [fp, #-8]
   1bfb8:	ldr	r0, [r0]
   1bfbc:	ldr	r1, [fp, #-12]
   1bfc0:	mul	r0, r0, r1
   1bfc4:	asr	r1, r0, #31
   1bfc8:	str	r0, [fp, #-24]	; 0xffffffe8
   1bfcc:	str	r1, [fp, #-20]	; 0xffffffec
   1bfd0:	b	1c878 <__assert_fail@plt+0xb7a0>
   1bfd4:	ldr	r0, [fp, #-12]
   1bfd8:	cmp	r0, #0
   1bfdc:	bge	1c134 <__assert_fail@plt+0xb05c>
   1bfe0:	mov	r0, #1
   1bfe4:	cmp	r0, #0
   1bfe8:	bne	1c0a0 <__assert_fail@plt+0xafc8>
   1bfec:	b	1bff0 <__assert_fail@plt+0xaf18>
   1bff0:	b	1c024 <__assert_fail@plt+0xaf4c>
   1bff4:	ldr	r0, [fp, #-8]
   1bff8:	ldr	r1, [r0]
   1bffc:	ldr	r0, [r0, #4]
   1c000:	ldr	r2, [fp, #-12]
   1c004:	mvn	r3, #0
   1c008:	udiv	r2, r3, r2
   1c00c:	subs	r1, r1, r2
   1c010:	sbcs	r0, r0, #0
   1c014:	str	r1, [sp, #196]	; 0xc4
   1c018:	str	r0, [sp, #192]	; 0xc0
   1c01c:	bcc	1c218 <__assert_fail@plt+0xb140>
   1c020:	b	1c238 <__assert_fail@plt+0xb160>
   1c024:	b	1c028 <__assert_fail@plt+0xaf50>
   1c028:	ldr	r0, [pc, #2160]	; 1c8a0 <__assert_fail@plt+0xb7c8>
   1c02c:	ldr	r1, [fp, #-12]
   1c030:	cmp	r1, r0
   1c034:	blt	1c04c <__assert_fail@plt+0xaf74>
   1c038:	b	1c058 <__assert_fail@plt+0xaf80>
   1c03c:	ldr	r0, [fp, #-12]
   1c040:	movw	r1, #0
   1c044:	cmp	r1, r0
   1c048:	bge	1c058 <__assert_fail@plt+0xaf80>
   1c04c:	movw	r0, #1
   1c050:	str	r0, [sp, #188]	; 0xbc
   1c054:	b	1c070 <__assert_fail@plt+0xaf98>
   1c058:	ldr	r0, [fp, #-12]
   1c05c:	movw	r1, #0
   1c060:	sub	r0, r1, r0
   1c064:	mvn	r1, #0
   1c068:	udiv	r0, r1, r0
   1c06c:	str	r0, [sp, #188]	; 0xbc
   1c070:	ldr	r0, [sp, #188]	; 0xbc
   1c074:	ldr	r1, [fp, #-8]
   1c078:	ldr	r2, [r1]
   1c07c:	ldr	r1, [r1, #4]
   1c080:	mvn	r1, r1
   1c084:	mvn	r2, r2
   1c088:	subs	r0, r2, r0
   1c08c:	sbcs	r1, r1, #0
   1c090:	str	r0, [sp, #184]	; 0xb8
   1c094:	str	r1, [sp, #180]	; 0xb4
   1c098:	bcs	1c218 <__assert_fail@plt+0xb140>
   1c09c:	b	1c238 <__assert_fail@plt+0xb160>
   1c0a0:	b	1c0a4 <__assert_fail@plt+0xafcc>
   1c0a4:	b	1c104 <__assert_fail@plt+0xb02c>
   1c0a8:	b	1c104 <__assert_fail@plt+0xb02c>
   1c0ac:	ldr	r0, [fp, #-12]
   1c0b0:	cmn	r0, #1
   1c0b4:	bne	1c104 <__assert_fail@plt+0xb02c>
   1c0b8:	b	1c0d8 <__assert_fail@plt+0xb000>
   1c0bc:	ldr	r0, [fp, #-8]
   1c0c0:	ldr	r1, [r0]
   1c0c4:	ldr	r0, [r0, #4]
   1c0c8:	orr	r0, r1, r0
   1c0cc:	cmp	r0, #0
   1c0d0:	bne	1c218 <__assert_fail@plt+0xb140>
   1c0d4:	b	1c238 <__assert_fail@plt+0xb160>
   1c0d8:	ldr	r0, [fp, #-8]
   1c0dc:	ldr	r1, [r0]
   1c0e0:	ldr	r0, [r0, #4]
   1c0e4:	orr	r0, r1, r0
   1c0e8:	cmp	r0, #0
   1c0ec:	beq	1c238 <__assert_fail@plt+0xb160>
   1c0f0:	b	1c0f4 <__assert_fail@plt+0xb01c>
   1c0f4:	mov	r0, #0
   1c0f8:	cmp	r0, #0
   1c0fc:	bne	1c218 <__assert_fail@plt+0xb140>
   1c100:	b	1c238 <__assert_fail@plt+0xb160>
   1c104:	ldr	r0, [fp, #-12]
   1c108:	mov	r1, #0
   1c10c:	sdiv	r0, r1, r0
   1c110:	ldr	r1, [fp, #-8]
   1c114:	ldr	r2, [r1]
   1c118:	ldr	r1, [r1, #4]
   1c11c:	subs	r2, r0, r2
   1c120:	rscs	r0, r1, r0, asr #31
   1c124:	str	r2, [sp, #176]	; 0xb0
   1c128:	str	r0, [sp, #172]	; 0xac
   1c12c:	bcc	1c218 <__assert_fail@plt+0xb140>
   1c130:	b	1c238 <__assert_fail@plt+0xb160>
   1c134:	ldr	r0, [fp, #-12]
   1c138:	cmp	r0, #0
   1c13c:	bne	1c144 <__assert_fail@plt+0xb06c>
   1c140:	b	1c238 <__assert_fail@plt+0xb160>
   1c144:	mov	r0, #1
   1c148:	cmp	r0, #0
   1c14c:	bne	1c1e8 <__assert_fail@plt+0xb110>
   1c150:	b	1c154 <__assert_fail@plt+0xb07c>
   1c154:	b	1c15c <__assert_fail@plt+0xb084>
   1c158:	b	1c160 <__assert_fail@plt+0xb088>
   1c15c:	b	1c1b0 <__assert_fail@plt+0xb0d8>
   1c160:	ldr	r0, [fp, #-8]
   1c164:	ldr	r1, [r0]
   1c168:	ldr	r0, [r0, #4]
   1c16c:	and	r0, r1, r0
   1c170:	cmn	r0, #1
   1c174:	bne	1c1b0 <__assert_fail@plt+0xb0d8>
   1c178:	b	1c17c <__assert_fail@plt+0xb0a4>
   1c17c:	b	1c180 <__assert_fail@plt+0xb0a8>
   1c180:	ldr	r0, [fp, #-12]
   1c184:	add	r0, r0, #0
   1c188:	movw	r1, #0
   1c18c:	cmp	r1, r0
   1c190:	blt	1c218 <__assert_fail@plt+0xb140>
   1c194:	b	1c238 <__assert_fail@plt+0xb160>
   1c198:	ldr	r0, [fp, #-12]
   1c19c:	sub	r0, r0, #1
   1c1a0:	mvn	r1, #0
   1c1a4:	cmp	r1, r0
   1c1a8:	blt	1c218 <__assert_fail@plt+0xb140>
   1c1ac:	b	1c238 <__assert_fail@plt+0xb160>
   1c1b0:	ldr	r0, [fp, #-8]
   1c1b4:	ldr	r2, [r0]
   1c1b8:	ldr	r3, [r0, #4]
   1c1bc:	mov	r0, #0
   1c1c0:	str	r0, [sp, #168]	; 0xa8
   1c1c4:	ldr	r1, [sp, #168]	; 0xa8
   1c1c8:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1c1cc:	ldr	r2, [fp, #-12]
   1c1d0:	subs	r0, r0, r2
   1c1d4:	sbcs	r1, r1, r2, asr #31
   1c1d8:	str	r0, [sp, #164]	; 0xa4
   1c1dc:	str	r1, [sp, #160]	; 0xa0
   1c1e0:	bcc	1c218 <__assert_fail@plt+0xb140>
   1c1e4:	b	1c238 <__assert_fail@plt+0xb160>
   1c1e8:	ldr	r0, [fp, #-12]
   1c1ec:	mvn	r1, #0
   1c1f0:	udiv	r0, r1, r0
   1c1f4:	ldr	r1, [fp, #-8]
   1c1f8:	ldr	r2, [r1]
   1c1fc:	ldr	r1, [r1, #4]
   1c200:	subs	r0, r0, r2
   1c204:	rscs	r1, r1, #0
   1c208:	str	r0, [sp, #156]	; 0x9c
   1c20c:	str	r1, [sp, #152]	; 0x98
   1c210:	bcs	1c238 <__assert_fail@plt+0xb160>
   1c214:	b	1c218 <__assert_fail@plt+0xb140>
   1c218:	ldr	r0, [fp, #-8]
   1c21c:	ldr	r0, [r0]
   1c220:	ldr	r1, [fp, #-12]
   1c224:	mul	r0, r0, r1
   1c228:	mov	r1, #0
   1c22c:	str	r1, [fp, #-20]	; 0xffffffec
   1c230:	str	r0, [fp, #-24]	; 0xffffffe8
   1c234:	b	1c85c <__assert_fail@plt+0xb784>
   1c238:	ldr	r0, [fp, #-8]
   1c23c:	ldr	r0, [r0]
   1c240:	ldr	r1, [fp, #-12]
   1c244:	mul	r0, r0, r1
   1c248:	mov	r1, #0
   1c24c:	str	r1, [fp, #-20]	; 0xffffffec
   1c250:	str	r0, [fp, #-24]	; 0xffffffe8
   1c254:	b	1c878 <__assert_fail@plt+0xb7a0>
   1c258:	b	1c574 <__assert_fail@plt+0xb49c>
   1c25c:	ldr	r0, [fp, #-12]
   1c260:	cmp	r0, #0
   1c264:	bge	1c428 <__assert_fail@plt+0xb350>
   1c268:	mov	r0, #1
   1c26c:	cmp	r0, #0
   1c270:	bne	1c370 <__assert_fail@plt+0xb298>
   1c274:	b	1c278 <__assert_fail@plt+0xb1a0>
   1c278:	b	1c27c <__assert_fail@plt+0xb1a4>
   1c27c:	ldr	r0, [fp, #-8]
   1c280:	ldr	r1, [r0]
   1c284:	ldr	r0, [r0, #4]
   1c288:	ldr	r2, [fp, #-12]
   1c28c:	asr	r3, r2, #31
   1c290:	mvn	ip, #0
   1c294:	mvn	lr, #-2147483648	; 0x80000000
   1c298:	str	r0, [sp, #148]	; 0x94
   1c29c:	mov	r0, ip
   1c2a0:	str	r1, [sp, #144]	; 0x90
   1c2a4:	mov	r1, lr
   1c2a8:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   1c2ac:	ldr	r2, [sp, #144]	; 0x90
   1c2b0:	subs	r0, r2, r0
   1c2b4:	ldr	r2, [sp, #148]	; 0x94
   1c2b8:	sbcs	r1, r2, r1
   1c2bc:	str	r0, [sp, #140]	; 0x8c
   1c2c0:	str	r1, [sp, #136]	; 0x88
   1c2c4:	bcc	1c51c <__assert_fail@plt+0xb444>
   1c2c8:	b	1c548 <__assert_fail@plt+0xb470>
   1c2cc:	b	1c2d0 <__assert_fail@plt+0xb1f8>
   1c2d0:	ldr	r0, [pc, #1480]	; 1c8a0 <__assert_fail@plt+0xb7c8>
   1c2d4:	ldr	r1, [fp, #-12]
   1c2d8:	cmp	r1, r0
   1c2dc:	blt	1c2f4 <__assert_fail@plt+0xb21c>
   1c2e0:	b	1c308 <__assert_fail@plt+0xb230>
   1c2e4:	ldr	r0, [fp, #-12]
   1c2e8:	movw	r1, #0
   1c2ec:	cmp	r1, r0
   1c2f0:	bge	1c308 <__assert_fail@plt+0xb230>
   1c2f4:	mov	r0, #0
   1c2f8:	mvn	r1, #0
   1c2fc:	str	r1, [sp, #132]	; 0x84
   1c300:	str	r0, [sp, #128]	; 0x80
   1c304:	b	1c33c <__assert_fail@plt+0xb264>
   1c308:	ldr	r0, [fp, #-12]
   1c30c:	rsb	r0, r0, #0
   1c310:	asr	r3, r0, #31
   1c314:	mvn	r1, #0
   1c318:	mvn	r2, #-2147483648	; 0x80000000
   1c31c:	str	r0, [sp, #124]	; 0x7c
   1c320:	mov	r0, r1
   1c324:	mov	r1, r2
   1c328:	ldr	r2, [sp, #124]	; 0x7c
   1c32c:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   1c330:	str	r0, [sp, #132]	; 0x84
   1c334:	str	r1, [sp, #128]	; 0x80
   1c338:	b	1c33c <__assert_fail@plt+0xb264>
   1c33c:	ldr	r0, [sp, #128]	; 0x80
   1c340:	ldr	r1, [sp, #132]	; 0x84
   1c344:	ldr	r2, [fp, #-8]
   1c348:	ldr	r3, [r2]
   1c34c:	ldr	r2, [r2, #4]
   1c350:	mvn	r2, r2
   1c354:	mvn	r3, r3
   1c358:	subs	r1, r3, r1
   1c35c:	sbcs	r0, r2, r0
   1c360:	str	r1, [sp, #120]	; 0x78
   1c364:	str	r0, [sp, #116]	; 0x74
   1c368:	bcs	1c51c <__assert_fail@plt+0xb444>
   1c36c:	b	1c548 <__assert_fail@plt+0xb470>
   1c370:	ldr	r0, [fp, #-12]
   1c374:	cmn	r0, #1
   1c378:	bne	1c3e0 <__assert_fail@plt+0xb308>
   1c37c:	b	1c3a0 <__assert_fail@plt+0xb2c8>
   1c380:	ldr	r0, [fp, #-8]
   1c384:	ldr	r1, [r0]
   1c388:	ldr	r0, [r0, #4]
   1c38c:	eor	r0, r0, #-2147483648	; 0x80000000
   1c390:	orr	r0, r1, r0
   1c394:	cmp	r0, #0
   1c398:	bne	1c51c <__assert_fail@plt+0xb444>
   1c39c:	b	1c548 <__assert_fail@plt+0xb470>
   1c3a0:	ldr	r0, [fp, #-8]
   1c3a4:	ldr	r1, [r0]
   1c3a8:	ldr	r0, [r0, #4]
   1c3ac:	orr	r0, r1, r0
   1c3b0:	cmp	r0, #0
   1c3b4:	beq	1c548 <__assert_fail@plt+0xb470>
   1c3b8:	b	1c3bc <__assert_fail@plt+0xb2e4>
   1c3bc:	ldr	r0, [fp, #-8]
   1c3c0:	ldr	r1, [r0]
   1c3c4:	ldr	r0, [r0, #4]
   1c3c8:	subs	r1, r1, #1
   1c3cc:	sbc	r0, r0, #0
   1c3d0:	cmp	r0, #0
   1c3d4:	str	r1, [sp, #112]	; 0x70
   1c3d8:	blt	1c51c <__assert_fail@plt+0xb444>
   1c3dc:	b	1c548 <__assert_fail@plt+0xb470>
   1c3e0:	ldr	r0, [fp, #-12]
   1c3e4:	asr	r3, r0, #31
   1c3e8:	mov	r1, #0
   1c3ec:	mov	r2, #-2147483648	; 0x80000000
   1c3f0:	str	r0, [sp, #108]	; 0x6c
   1c3f4:	mov	r0, r1
   1c3f8:	mov	r1, r2
   1c3fc:	ldr	r2, [sp, #108]	; 0x6c
   1c400:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   1c404:	ldr	r2, [fp, #-8]
   1c408:	ldr	r3, [r2]
   1c40c:	ldr	r2, [r2, #4]
   1c410:	subs	r0, r0, r3
   1c414:	sbcs	r1, r1, r2
   1c418:	str	r0, [sp, #104]	; 0x68
   1c41c:	str	r1, [sp, #100]	; 0x64
   1c420:	bcc	1c51c <__assert_fail@plt+0xb444>
   1c424:	b	1c548 <__assert_fail@plt+0xb470>
   1c428:	ldr	r0, [fp, #-12]
   1c42c:	cmp	r0, #0
   1c430:	bne	1c438 <__assert_fail@plt+0xb360>
   1c434:	b	1c548 <__assert_fail@plt+0xb470>
   1c438:	mov	r0, #1
   1c43c:	cmp	r0, #0
   1c440:	bne	1c4d4 <__assert_fail@plt+0xb3fc>
   1c444:	b	1c448 <__assert_fail@plt+0xb370>
   1c448:	ldr	r0, [fp, #-8]
   1c44c:	ldr	r1, [r0]
   1c450:	ldr	r0, [r0, #4]
   1c454:	and	r0, r1, r0
   1c458:	cmn	r0, #1
   1c45c:	bne	1c4a0 <__assert_fail@plt+0xb3c8>
   1c460:	b	1c464 <__assert_fail@plt+0xb38c>
   1c464:	b	1c468 <__assert_fail@plt+0xb390>
   1c468:	ldr	r0, [fp, #-12]
   1c46c:	mov	r1, #-2147483648	; 0x80000000
   1c470:	add	r1, r1, r0, asr #31
   1c474:	rsbs	r0, r0, #0
   1c478:	rscs	r1, r1, #0
   1c47c:	str	r0, [sp, #96]	; 0x60
   1c480:	str	r1, [sp, #92]	; 0x5c
   1c484:	blt	1c51c <__assert_fail@plt+0xb444>
   1c488:	b	1c548 <__assert_fail@plt+0xb470>
   1c48c:	mov	r0, #0
   1c490:	cmp	r0, #0
   1c494:	bne	1c51c <__assert_fail@plt+0xb444>
   1c498:	b	1c548 <__assert_fail@plt+0xb470>
   1c49c:			; <UNDEFINED> instruction: 0xffff8000
   1c4a0:	ldr	r0, [fp, #-8]
   1c4a4:	ldr	r2, [r0]
   1c4a8:	ldr	r3, [r0, #4]
   1c4ac:	mov	r0, #0
   1c4b0:	mov	r1, #-2147483648	; 0x80000000
   1c4b4:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1c4b8:	ldr	r2, [fp, #-12]
   1c4bc:	subs	r0, r0, r2
   1c4c0:	sbcs	r1, r1, r2, asr #31
   1c4c4:	str	r0, [sp, #88]	; 0x58
   1c4c8:	str	r1, [sp, #84]	; 0x54
   1c4cc:	bcc	1c51c <__assert_fail@plt+0xb444>
   1c4d0:	b	1c548 <__assert_fail@plt+0xb470>
   1c4d4:	ldr	r0, [fp, #-12]
   1c4d8:	asr	r3, r0, #31
   1c4dc:	mvn	r1, #0
   1c4e0:	mvn	r2, #-2147483648	; 0x80000000
   1c4e4:	str	r0, [sp, #80]	; 0x50
   1c4e8:	mov	r0, r1
   1c4ec:	mov	r1, r2
   1c4f0:	ldr	r2, [sp, #80]	; 0x50
   1c4f4:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   1c4f8:	ldr	r2, [fp, #-8]
   1c4fc:	ldr	r3, [r2]
   1c500:	ldr	r2, [r2, #4]
   1c504:	subs	r0, r0, r3
   1c508:	sbcs	r1, r1, r2
   1c50c:	str	r0, [sp, #76]	; 0x4c
   1c510:	str	r1, [sp, #72]	; 0x48
   1c514:	bcs	1c548 <__assert_fail@plt+0xb470>
   1c518:	b	1c51c <__assert_fail@plt+0xb444>
   1c51c:	ldr	r0, [fp, #-8]
   1c520:	ldr	r1, [r0]
   1c524:	ldr	r0, [r0, #4]
   1c528:	ldr	r2, [fp, #-12]
   1c52c:	asr	r3, r2, #31
   1c530:	umull	ip, lr, r1, r2
   1c534:	mla	r1, r1, r3, lr
   1c538:	mla	r0, r0, r2, r1
   1c53c:	str	ip, [fp, #-24]	; 0xffffffe8
   1c540:	str	r0, [fp, #-20]	; 0xffffffec
   1c544:	b	1c85c <__assert_fail@plt+0xb784>
   1c548:	ldr	r0, [fp, #-8]
   1c54c:	ldr	r1, [r0]
   1c550:	ldr	r0, [r0, #4]
   1c554:	ldr	r2, [fp, #-12]
   1c558:	asr	r3, r2, #31
   1c55c:	umull	ip, lr, r1, r2
   1c560:	mla	r1, r1, r3, lr
   1c564:	mla	r0, r0, r2, r1
   1c568:	str	ip, [fp, #-24]	; 0xffffffe8
   1c56c:	str	r0, [fp, #-20]	; 0xffffffec
   1c570:	b	1c878 <__assert_fail@plt+0xb7a0>
   1c574:	ldr	r0, [fp, #-12]
   1c578:	cmp	r0, #0
   1c57c:	bge	1c710 <__assert_fail@plt+0xb638>
   1c580:	mov	r0, #1
   1c584:	cmp	r0, #0
   1c588:	bne	1c67c <__assert_fail@plt+0xb5a4>
   1c58c:	b	1c590 <__assert_fail@plt+0xb4b8>
   1c590:	b	1c5e0 <__assert_fail@plt+0xb508>
   1c594:	ldr	r0, [fp, #-8]
   1c598:	ldr	r1, [r0]
   1c59c:	ldr	r0, [r0, #4]
   1c5a0:	ldr	r2, [fp, #-12]
   1c5a4:	asr	r3, r2, #31
   1c5a8:	mvn	ip, #0
   1c5ac:	str	r0, [sp, #68]	; 0x44
   1c5b0:	mov	r0, ip
   1c5b4:	str	r1, [sp, #64]	; 0x40
   1c5b8:	mov	r1, ip
   1c5bc:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1c5c0:	ldr	r2, [sp, #64]	; 0x40
   1c5c4:	subs	r0, r2, r0
   1c5c8:	ldr	r2, [sp, #68]	; 0x44
   1c5cc:	sbcs	r1, r2, r1
   1c5d0:	str	r0, [sp, #60]	; 0x3c
   1c5d4:	str	r1, [sp, #56]	; 0x38
   1c5d8:	bcc	1c804 <__assert_fail@plt+0xb72c>
   1c5dc:	b	1c830 <__assert_fail@plt+0xb758>
   1c5e0:	b	1c5e4 <__assert_fail@plt+0xb50c>
   1c5e4:	ldr	r0, [pc, #692]	; 1c8a0 <__assert_fail@plt+0xb7c8>
   1c5e8:	ldr	r1, [fp, #-12]
   1c5ec:	cmp	r1, r0
   1c5f0:	blt	1c608 <__assert_fail@plt+0xb530>
   1c5f4:	b	1c61c <__assert_fail@plt+0xb544>
   1c5f8:	ldr	r0, [fp, #-12]
   1c5fc:	movw	r1, #0
   1c600:	cmp	r1, r0
   1c604:	bge	1c61c <__assert_fail@plt+0xb544>
   1c608:	mov	r0, #1
   1c60c:	mvn	r1, #0
   1c610:	str	r1, [sp, #52]	; 0x34
   1c614:	str	r0, [sp, #48]	; 0x30
   1c618:	b	1c648 <__assert_fail@plt+0xb570>
   1c61c:	ldr	r0, [fp, #-12]
   1c620:	rsb	r0, r0, #0
   1c624:	asr	r3, r0, #31
   1c628:	mvn	r1, #0
   1c62c:	str	r0, [sp, #44]	; 0x2c
   1c630:	mov	r0, r1
   1c634:	ldr	r2, [sp, #44]	; 0x2c
   1c638:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1c63c:	str	r0, [sp, #52]	; 0x34
   1c640:	str	r1, [sp, #48]	; 0x30
   1c644:	b	1c648 <__assert_fail@plt+0xb570>
   1c648:	ldr	r0, [sp, #48]	; 0x30
   1c64c:	ldr	r1, [sp, #52]	; 0x34
   1c650:	ldr	r2, [fp, #-8]
   1c654:	ldr	r3, [r2]
   1c658:	ldr	r2, [r2, #4]
   1c65c:	mvn	r2, r2
   1c660:	mvn	r3, r3
   1c664:	subs	r1, r3, r1
   1c668:	sbcs	r0, r2, r0
   1c66c:	str	r1, [sp, #40]	; 0x28
   1c670:	str	r0, [sp, #36]	; 0x24
   1c674:	bcs	1c804 <__assert_fail@plt+0xb72c>
   1c678:	b	1c830 <__assert_fail@plt+0xb758>
   1c67c:	b	1c680 <__assert_fail@plt+0xb5a8>
   1c680:	b	1c6e0 <__assert_fail@plt+0xb608>
   1c684:	b	1c6e0 <__assert_fail@plt+0xb608>
   1c688:	ldr	r0, [fp, #-12]
   1c68c:	cmn	r0, #1
   1c690:	bne	1c6e0 <__assert_fail@plt+0xb608>
   1c694:	b	1c6b4 <__assert_fail@plt+0xb5dc>
   1c698:	ldr	r0, [fp, #-8]
   1c69c:	ldr	r1, [r0]
   1c6a0:	ldr	r0, [r0, #4]
   1c6a4:	orr	r0, r1, r0
   1c6a8:	cmp	r0, #0
   1c6ac:	bne	1c804 <__assert_fail@plt+0xb72c>
   1c6b0:	b	1c830 <__assert_fail@plt+0xb758>
   1c6b4:	ldr	r0, [fp, #-8]
   1c6b8:	ldr	r1, [r0]
   1c6bc:	ldr	r0, [r0, #4]
   1c6c0:	orr	r0, r1, r0
   1c6c4:	cmp	r0, #0
   1c6c8:	beq	1c830 <__assert_fail@plt+0xb758>
   1c6cc:	b	1c6d0 <__assert_fail@plt+0xb5f8>
   1c6d0:	mov	r0, #0
   1c6d4:	cmp	r0, #0
   1c6d8:	bne	1c804 <__assert_fail@plt+0xb72c>
   1c6dc:	b	1c830 <__assert_fail@plt+0xb758>
   1c6e0:	ldr	r0, [fp, #-12]
   1c6e4:	mov	r1, #0
   1c6e8:	sdiv	r0, r1, r0
   1c6ec:	ldr	r1, [fp, #-8]
   1c6f0:	ldr	r2, [r1]
   1c6f4:	ldr	r1, [r1, #4]
   1c6f8:	subs	r2, r0, r2
   1c6fc:	rscs	r0, r1, r0, asr #31
   1c700:	str	r2, [sp, #32]
   1c704:	str	r0, [sp, #28]
   1c708:	bcc	1c804 <__assert_fail@plt+0xb72c>
   1c70c:	b	1c830 <__assert_fail@plt+0xb758>
   1c710:	ldr	r0, [fp, #-12]
   1c714:	cmp	r0, #0
   1c718:	bne	1c720 <__assert_fail@plt+0xb648>
   1c71c:	b	1c830 <__assert_fail@plt+0xb758>
   1c720:	mov	r0, #1
   1c724:	cmp	r0, #0
   1c728:	bne	1c7c4 <__assert_fail@plt+0xb6ec>
   1c72c:	b	1c730 <__assert_fail@plt+0xb658>
   1c730:	b	1c738 <__assert_fail@plt+0xb660>
   1c734:	b	1c73c <__assert_fail@plt+0xb664>
   1c738:	b	1c78c <__assert_fail@plt+0xb6b4>
   1c73c:	ldr	r0, [fp, #-8]
   1c740:	ldr	r1, [r0]
   1c744:	ldr	r0, [r0, #4]
   1c748:	and	r0, r1, r0
   1c74c:	cmn	r0, #1
   1c750:	bne	1c78c <__assert_fail@plt+0xb6b4>
   1c754:	b	1c758 <__assert_fail@plt+0xb680>
   1c758:	b	1c75c <__assert_fail@plt+0xb684>
   1c75c:	ldr	r0, [fp, #-12]
   1c760:	add	r0, r0, #0
   1c764:	movw	r1, #0
   1c768:	cmp	r1, r0
   1c76c:	blt	1c804 <__assert_fail@plt+0xb72c>
   1c770:	b	1c830 <__assert_fail@plt+0xb758>
   1c774:	ldr	r0, [fp, #-12]
   1c778:	sub	r0, r0, #1
   1c77c:	mvn	r1, #0
   1c780:	cmp	r1, r0
   1c784:	blt	1c804 <__assert_fail@plt+0xb72c>
   1c788:	b	1c830 <__assert_fail@plt+0xb758>
   1c78c:	ldr	r0, [fp, #-8]
   1c790:	ldr	r2, [r0]
   1c794:	ldr	r3, [r0, #4]
   1c798:	mov	r0, #0
   1c79c:	str	r0, [sp, #24]
   1c7a0:	ldr	r1, [sp, #24]
   1c7a4:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1c7a8:	ldr	r2, [fp, #-12]
   1c7ac:	subs	r0, r0, r2
   1c7b0:	sbcs	r1, r1, r2, asr #31
   1c7b4:	str	r0, [sp, #20]
   1c7b8:	str	r1, [sp, #16]
   1c7bc:	bcc	1c804 <__assert_fail@plt+0xb72c>
   1c7c0:	b	1c830 <__assert_fail@plt+0xb758>
   1c7c4:	ldr	r0, [fp, #-12]
   1c7c8:	asr	r3, r0, #31
   1c7cc:	mvn	r1, #0
   1c7d0:	str	r0, [sp, #12]
   1c7d4:	mov	r0, r1
   1c7d8:	ldr	r2, [sp, #12]
   1c7dc:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1c7e0:	ldr	r2, [fp, #-8]
   1c7e4:	ldr	r3, [r2]
   1c7e8:	ldr	r2, [r2, #4]
   1c7ec:	subs	r0, r0, r3
   1c7f0:	sbcs	r1, r1, r2
   1c7f4:	str	r0, [sp, #8]
   1c7f8:	str	r1, [sp, #4]
   1c7fc:	bcs	1c830 <__assert_fail@plt+0xb758>
   1c800:	b	1c804 <__assert_fail@plt+0xb72c>
   1c804:	ldr	r0, [fp, #-8]
   1c808:	ldr	r1, [r0]
   1c80c:	ldr	r0, [r0, #4]
   1c810:	ldr	r2, [fp, #-12]
   1c814:	asr	r3, r2, #31
   1c818:	umull	ip, lr, r1, r2
   1c81c:	mla	r1, r1, r3, lr
   1c820:	mla	r0, r0, r2, r1
   1c824:	str	ip, [fp, #-24]	; 0xffffffe8
   1c828:	str	r0, [fp, #-20]	; 0xffffffec
   1c82c:	b	1c85c <__assert_fail@plt+0xb784>
   1c830:	ldr	r0, [fp, #-8]
   1c834:	ldr	r1, [r0]
   1c838:	ldr	r0, [r0, #4]
   1c83c:	ldr	r2, [fp, #-12]
   1c840:	asr	r3, r2, #31
   1c844:	umull	ip, lr, r1, r2
   1c848:	mla	r1, r1, r3, lr
   1c84c:	mla	r0, r0, r2, r1
   1c850:	str	ip, [fp, #-24]	; 0xffffffe8
   1c854:	str	r0, [fp, #-20]	; 0xffffffec
   1c858:	b	1c878 <__assert_fail@plt+0xb7a0>
   1c85c:	ldr	r0, [fp, #-8]
   1c860:	mvn	r1, #0
   1c864:	str	r1, [r0, #4]
   1c868:	str	r1, [r0]
   1c86c:	movw	r0, #1
   1c870:	str	r0, [fp, #-4]
   1c874:	b	1c894 <__assert_fail@plt+0xb7bc>
   1c878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c87c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c880:	ldr	r2, [fp, #-8]
   1c884:	str	r1, [r2, #4]
   1c888:	str	r0, [r2]
   1c88c:	movw	r0, #0
   1c890:	str	r0, [fp, #-4]
   1c894:	ldr	r0, [fp, #-4]
   1c898:	mov	sp, fp
   1c89c:	pop	{fp, pc}
   1c8a0:	andhi	r0, r0, r1
   1c8a4:	svcvc	0x00ffffff
   1c8a8:	push	{fp, lr}
   1c8ac:	mov	fp, sp
   1c8b0:	sub	sp, sp, #16
   1c8b4:	str	r0, [fp, #-4]
   1c8b8:	str	r1, [sp, #8]
   1c8bc:	str	r2, [sp, #4]
   1c8c0:	movw	r0, #0
   1c8c4:	str	r0, [sp]
   1c8c8:	ldr	r0, [sp, #4]
   1c8cc:	mvn	r1, #0
   1c8d0:	add	r1, r0, r1
   1c8d4:	str	r1, [sp, #4]
   1c8d8:	cmp	r0, #0
   1c8dc:	beq	1c8fc <__assert_fail@plt+0xb824>
   1c8e0:	ldr	r0, [fp, #-4]
   1c8e4:	ldr	r1, [sp, #8]
   1c8e8:	bl	1ada0 <__assert_fail@plt+0x9cc8>
   1c8ec:	ldr	r1, [sp]
   1c8f0:	orr	r0, r1, r0
   1c8f4:	str	r0, [sp]
   1c8f8:	b	1c8c8 <__assert_fail@plt+0xb7f0>
   1c8fc:	ldr	r0, [sp]
   1c900:	mov	sp, fp
   1c904:	pop	{fp, pc}
   1c908:	push	{fp, lr}
   1c90c:	mov	fp, sp
   1c910:	sub	sp, sp, #16
   1c914:	str	r0, [sp, #8]
   1c918:	str	r1, [sp, #4]
   1c91c:	ldr	r0, [sp, #8]
   1c920:	cmp	r0, #0
   1c924:	beq	1c934 <__assert_fail@plt+0xb85c>
   1c928:	ldr	r0, [sp, #4]
   1c92c:	cmp	r0, #0
   1c930:	bne	1c940 <__assert_fail@plt+0xb868>
   1c934:	movw	r0, #1
   1c938:	str	r0, [sp, #4]
   1c93c:	str	r0, [sp, #8]
   1c940:	ldr	r0, [sp, #4]
   1c944:	cmp	r0, #0
   1c948:	beq	1c97c <__assert_fail@plt+0xb8a4>
   1c94c:	ldr	r0, [pc, #76]	; 1c9a0 <__assert_fail@plt+0xb8c8>
   1c950:	ldr	r1, [sp, #4]
   1c954:	udiv	r0, r0, r1
   1c958:	ldr	r1, [sp, #8]
   1c95c:	cmp	r0, r1
   1c960:	bcs	1c97c <__assert_fail@plt+0xb8a4>
   1c964:	bl	1100c <__errno_location@plt>
   1c968:	movw	lr, #12
   1c96c:	str	lr, [r0]
   1c970:	movw	r0, #0
   1c974:	str	r0, [fp, #-4]
   1c978:	b	1c994 <__assert_fail@plt+0xb8bc>
   1c97c:	ldr	r0, [sp, #8]
   1c980:	ldr	r1, [sp, #4]
   1c984:	bl	10e50 <calloc@plt>
   1c988:	str	r0, [sp]
   1c98c:	ldr	r0, [sp]
   1c990:	str	r0, [fp, #-4]
   1c994:	ldr	r0, [fp, #-4]
   1c998:	mov	sp, fp
   1c99c:	pop	{fp, pc}
   1c9a0:	svcvc	0x00ffffff
   1c9a4:	push	{fp, lr}
   1c9a8:	mov	fp, sp
   1c9ac:	sub	sp, sp, #16
   1c9b0:	str	r0, [sp, #8]
   1c9b4:	ldr	r0, [sp, #8]
   1c9b8:	cmp	r0, #0
   1c9bc:	bne	1c9c8 <__assert_fail@plt+0xb8f0>
   1c9c0:	movw	r0, #1
   1c9c4:	str	r0, [sp, #8]
   1c9c8:	ldr	r0, [pc, #64]	; 1ca10 <__assert_fail@plt+0xb938>
   1c9cc:	ldr	r1, [sp, #8]
   1c9d0:	cmp	r0, r1
   1c9d4:	bcs	1c9f0 <__assert_fail@plt+0xb918>
   1c9d8:	bl	1100c <__errno_location@plt>
   1c9dc:	movw	lr, #12
   1c9e0:	str	lr, [r0]
   1c9e4:	movw	r0, #0
   1c9e8:	str	r0, [fp, #-4]
   1c9ec:	b	1ca04 <__assert_fail@plt+0xb92c>
   1c9f0:	ldr	r0, [sp, #8]
   1c9f4:	bl	10f7c <malloc@plt>
   1c9f8:	str	r0, [sp, #4]
   1c9fc:	ldr	r0, [sp, #4]
   1ca00:	str	r0, [fp, #-4]
   1ca04:	ldr	r0, [fp, #-4]
   1ca08:	mov	sp, fp
   1ca0c:	pop	{fp, pc}
   1ca10:	svcvc	0x00ffffff
   1ca14:	push	{fp, lr}
   1ca18:	mov	fp, sp
   1ca1c:	sub	sp, sp, #16
   1ca20:	str	r0, [sp, #8]
   1ca24:	str	r1, [sp, #4]
   1ca28:	ldr	r0, [sp, #8]
   1ca2c:	movw	r1, #0
   1ca30:	cmp	r0, r1
   1ca34:	bne	1ca48 <__assert_fail@plt+0xb970>
   1ca38:	ldr	r0, [sp, #4]
   1ca3c:	bl	1c9a4 <__assert_fail@plt+0xb8cc>
   1ca40:	str	r0, [fp, #-4]
   1ca44:	b	1caa8 <__assert_fail@plt+0xb9d0>
   1ca48:	ldr	r0, [sp, #4]
   1ca4c:	cmp	r0, #0
   1ca50:	bne	1ca68 <__assert_fail@plt+0xb990>
   1ca54:	ldr	r0, [sp, #8]
   1ca58:	bl	14148 <__assert_fail@plt+0x3070>
   1ca5c:	movw	r0, #0
   1ca60:	str	r0, [fp, #-4]
   1ca64:	b	1caa8 <__assert_fail@plt+0xb9d0>
   1ca68:	ldr	r0, [pc, #68]	; 1cab4 <__assert_fail@plt+0xb9dc>
   1ca6c:	ldr	r1, [sp, #4]
   1ca70:	cmp	r0, r1
   1ca74:	bcs	1ca90 <__assert_fail@plt+0xb9b8>
   1ca78:	bl	1100c <__errno_location@plt>
   1ca7c:	movw	lr, #12
   1ca80:	str	lr, [r0]
   1ca84:	movw	r0, #0
   1ca88:	str	r0, [fp, #-4]
   1ca8c:	b	1caa8 <__assert_fail@plt+0xb9d0>
   1ca90:	ldr	r0, [sp, #8]
   1ca94:	ldr	r1, [sp, #4]
   1ca98:	bl	10eec <realloc@plt>
   1ca9c:	str	r0, [sp]
   1caa0:	ldr	r0, [sp]
   1caa4:	str	r0, [fp, #-4]
   1caa8:	ldr	r0, [fp, #-4]
   1caac:	mov	sp, fp
   1cab0:	pop	{fp, pc}
   1cab4:	svcvc	0x00ffffff
   1cab8:	sub	sp, sp, #8
   1cabc:	str	r0, [sp, #4]
   1cac0:	str	r1, [sp]
   1cac4:	movw	r0, #0
   1cac8:	add	sp, sp, #8
   1cacc:	bx	lr
   1cad0:	push	{fp, lr}
   1cad4:	mov	fp, sp
   1cad8:	sub	sp, sp, #8
   1cadc:	str	r0, [sp, #4]
   1cae0:	str	r1, [sp]
   1cae4:	ldr	r0, [sp, #4]
   1cae8:	ldr	r1, [sp]
   1caec:	bl	1cab8 <__assert_fail@plt+0xb9e0>
   1caf0:	mov	sp, fp
   1caf4:	pop	{fp, pc}
   1caf8:	push	{fp, lr}
   1cafc:	mov	fp, sp
   1cb00:	sub	sp, sp, #24
   1cb04:	str	r0, [fp, #-8]
   1cb08:	str	r1, [sp, #12]
   1cb0c:	ldr	r0, [fp, #-8]
   1cb10:	str	r0, [sp, #8]
   1cb14:	ldr	r0, [sp, #12]
   1cb18:	str	r0, [sp, #4]
   1cb1c:	ldr	r0, [sp, #8]
   1cb20:	ldr	r1, [sp, #4]
   1cb24:	cmp	r0, r1
   1cb28:	bne	1cb38 <__assert_fail@plt+0xba60>
   1cb2c:	movw	r0, #0
   1cb30:	str	r0, [fp, #-4]
   1cb34:	b	1cba4 <__assert_fail@plt+0xbacc>
   1cb38:	b	1cb3c <__assert_fail@plt+0xba64>
   1cb3c:	ldr	r0, [sp, #8]
   1cb40:	ldrb	r0, [r0]
   1cb44:	bl	1eb50 <__assert_fail@plt+0xda78>
   1cb48:	strb	r0, [sp, #3]
   1cb4c:	ldr	r0, [sp, #4]
   1cb50:	ldrb	r0, [r0]
   1cb54:	bl	1eb50 <__assert_fail@plt+0xda78>
   1cb58:	strb	r0, [sp, #2]
   1cb5c:	ldrb	r0, [sp, #3]
   1cb60:	cmp	r0, #0
   1cb64:	bne	1cb6c <__assert_fail@plt+0xba94>
   1cb68:	b	1cb94 <__assert_fail@plt+0xbabc>
   1cb6c:	ldr	r0, [sp, #8]
   1cb70:	add	r0, r0, #1
   1cb74:	str	r0, [sp, #8]
   1cb78:	ldr	r0, [sp, #4]
   1cb7c:	add	r0, r0, #1
   1cb80:	str	r0, [sp, #4]
   1cb84:	ldrb	r0, [sp, #3]
   1cb88:	ldrb	r1, [sp, #2]
   1cb8c:	cmp	r0, r1
   1cb90:	beq	1cb3c <__assert_fail@plt+0xba64>
   1cb94:	ldrb	r0, [sp, #3]
   1cb98:	ldrb	r1, [sp, #2]
   1cb9c:	sub	r0, r0, r1
   1cba0:	str	r0, [fp, #-4]
   1cba4:	ldr	r0, [fp, #-4]
   1cba8:	mov	sp, fp
   1cbac:	pop	{fp, pc}
   1cbb0:	push	{fp, lr}
   1cbb4:	mov	fp, sp
   1cbb8:	sub	sp, sp, #16
   1cbbc:	str	r0, [sp, #8]
   1cbc0:	ldr	r0, [sp, #8]
   1cbc4:	bl	10f40 <__fpending@plt>
   1cbc8:	cmp	r0, #0
   1cbcc:	movw	r0, #0
   1cbd0:	movne	r0, #1
   1cbd4:	and	r0, r0, #1
   1cbd8:	strb	r0, [sp, #7]
   1cbdc:	ldr	r0, [sp, #8]
   1cbe0:	bl	10f4c <ferror_unlocked@plt>
   1cbe4:	cmp	r0, #0
   1cbe8:	movw	r0, #0
   1cbec:	movne	r0, #1
   1cbf0:	and	r0, r0, #1
   1cbf4:	strb	r0, [sp, #6]
   1cbf8:	ldr	r0, [sp, #8]
   1cbfc:	bl	1cc80 <__assert_fail@plt+0xbba8>
   1cc00:	cmp	r0, #0
   1cc04:	movw	r0, #0
   1cc08:	movne	r0, #1
   1cc0c:	and	r0, r0, #1
   1cc10:	strb	r0, [sp, #5]
   1cc14:	ldrb	r0, [sp, #6]
   1cc18:	tst	r0, #1
   1cc1c:	bne	1cc48 <__assert_fail@plt+0xbb70>
   1cc20:	ldrb	r0, [sp, #5]
   1cc24:	tst	r0, #1
   1cc28:	beq	1cc6c <__assert_fail@plt+0xbb94>
   1cc2c:	ldrb	r0, [sp, #7]
   1cc30:	tst	r0, #1
   1cc34:	bne	1cc48 <__assert_fail@plt+0xbb70>
   1cc38:	bl	1100c <__errno_location@plt>
   1cc3c:	ldr	r0, [r0]
   1cc40:	cmp	r0, #9
   1cc44:	beq	1cc6c <__assert_fail@plt+0xbb94>
   1cc48:	ldrb	r0, [sp, #5]
   1cc4c:	tst	r0, #1
   1cc50:	bne	1cc60 <__assert_fail@plt+0xbb88>
   1cc54:	bl	1100c <__errno_location@plt>
   1cc58:	movw	lr, #0
   1cc5c:	str	lr, [r0]
   1cc60:	mvn	r0, #0
   1cc64:	str	r0, [fp, #-4]
   1cc68:	b	1cc74 <__assert_fail@plt+0xbb9c>
   1cc6c:	movw	r0, #0
   1cc70:	str	r0, [fp, #-4]
   1cc74:	ldr	r0, [fp, #-4]
   1cc78:	mov	sp, fp
   1cc7c:	pop	{fp, pc}
   1cc80:	push	{fp, lr}
   1cc84:	mov	fp, sp
   1cc88:	sub	sp, sp, #32
   1cc8c:	str	r0, [fp, #-8]
   1cc90:	movw	r0, #0
   1cc94:	str	r0, [fp, #-12]
   1cc98:	str	r0, [sp, #12]
   1cc9c:	ldr	r0, [fp, #-8]
   1cca0:	bl	11030 <fileno@plt>
   1cca4:	str	r0, [sp, #16]
   1cca8:	ldr	r0, [sp, #16]
   1ccac:	cmp	r0, #0
   1ccb0:	bge	1ccc4 <__assert_fail@plt+0xbbec>
   1ccb4:	ldr	r0, [fp, #-8]
   1ccb8:	bl	11054 <fclose@plt>
   1ccbc:	str	r0, [fp, #-4]
   1ccc0:	b	1cd60 <__assert_fail@plt+0xbc88>
   1ccc4:	ldr	r0, [fp, #-8]
   1ccc8:	bl	10f94 <__freading@plt>
   1cccc:	cmp	r0, #0
   1ccd0:	beq	1cd08 <__assert_fail@plt+0xbc30>
   1ccd4:	ldr	r0, [fp, #-8]
   1ccd8:	bl	11030 <fileno@plt>
   1ccdc:	mov	lr, sp
   1cce0:	mov	r1, #1
   1cce4:	str	r1, [lr]
   1cce8:	mov	r1, #0
   1ccec:	mov	r2, r1
   1ccf0:	mov	r3, r1
   1ccf4:	bl	10f28 <lseek64@plt>
   1ccf8:	and	r0, r0, r1
   1ccfc:	cmn	r0, #1
   1cd00:	beq	1cd24 <__assert_fail@plt+0xbc4c>
   1cd04:	b	1cd08 <__assert_fail@plt+0xbc30>
   1cd08:	ldr	r0, [fp, #-8]
   1cd0c:	bl	1cd6c <__assert_fail@plt+0xbc94>
   1cd10:	cmp	r0, #0
   1cd14:	beq	1cd24 <__assert_fail@plt+0xbc4c>
   1cd18:	bl	1100c <__errno_location@plt>
   1cd1c:	ldr	r0, [r0]
   1cd20:	str	r0, [fp, #-12]
   1cd24:	ldr	r0, [fp, #-8]
   1cd28:	bl	11054 <fclose@plt>
   1cd2c:	str	r0, [sp, #12]
   1cd30:	ldr	r0, [fp, #-12]
   1cd34:	cmp	r0, #0
   1cd38:	beq	1cd58 <__assert_fail@plt+0xbc80>
   1cd3c:	ldr	r0, [fp, #-12]
   1cd40:	str	r0, [sp, #8]
   1cd44:	bl	1100c <__errno_location@plt>
   1cd48:	ldr	lr, [sp, #8]
   1cd4c:	str	lr, [r0]
   1cd50:	mvn	r0, #0
   1cd54:	str	r0, [sp, #12]
   1cd58:	ldr	r0, [sp, #12]
   1cd5c:	str	r0, [fp, #-4]
   1cd60:	ldr	r0, [fp, #-4]
   1cd64:	mov	sp, fp
   1cd68:	pop	{fp, pc}
   1cd6c:	push	{fp, lr}
   1cd70:	mov	fp, sp
   1cd74:	sub	sp, sp, #8
   1cd78:	str	r0, [sp]
   1cd7c:	ldr	r0, [sp]
   1cd80:	movw	r1, #0
   1cd84:	cmp	r0, r1
   1cd88:	beq	1cd9c <__assert_fail@plt+0xbcc4>
   1cd8c:	ldr	r0, [sp]
   1cd90:	bl	10f94 <__freading@plt>
   1cd94:	cmp	r0, #0
   1cd98:	bne	1cdac <__assert_fail@plt+0xbcd4>
   1cd9c:	ldr	r0, [sp]
   1cda0:	bl	10e98 <fflush@plt>
   1cda4:	str	r0, [sp, #4]
   1cda8:	b	1cdc0 <__assert_fail@plt+0xbce8>
   1cdac:	ldr	r0, [sp]
   1cdb0:	bl	1cdcc <__assert_fail@plt+0xbcf4>
   1cdb4:	ldr	r0, [sp]
   1cdb8:	bl	10e98 <fflush@plt>
   1cdbc:	str	r0, [sp, #4]
   1cdc0:	ldr	r0, [sp, #4]
   1cdc4:	mov	sp, fp
   1cdc8:	pop	{fp, pc}
   1cdcc:	push	{fp, lr}
   1cdd0:	mov	fp, sp
   1cdd4:	sub	sp, sp, #16
   1cdd8:	str	r0, [fp, #-4]
   1cddc:	ldr	r0, [fp, #-4]
   1cde0:	ldr	r0, [r0]
   1cde4:	and	r0, r0, #256	; 0x100
   1cde8:	cmp	r0, #0
   1cdec:	beq	1ce14 <__assert_fail@plt+0xbd3c>
   1cdf0:	ldr	r0, [fp, #-4]
   1cdf4:	mov	r1, sp
   1cdf8:	mov	r2, #1
   1cdfc:	str	r2, [r1]
   1ce00:	mov	r1, #0
   1ce04:	mov	r2, r1
   1ce08:	mov	r3, r1
   1ce0c:	bl	1ce1c <__assert_fail@plt+0xbd44>
   1ce10:	str	r0, [sp, #8]
   1ce14:	mov	sp, fp
   1ce18:	pop	{fp, pc}
   1ce1c:	push	{fp, lr}
   1ce20:	mov	fp, sp
   1ce24:	sub	sp, sp, #32
   1ce28:	ldr	r1, [fp, #8]
   1ce2c:	str	r0, [fp, #-8]
   1ce30:	str	r3, [sp, #20]
   1ce34:	str	r2, [sp, #16]
   1ce38:	ldr	r0, [fp, #-8]
   1ce3c:	ldr	r0, [r0, #8]
   1ce40:	ldr	r2, [fp, #-8]
   1ce44:	ldr	r2, [r2, #4]
   1ce48:	cmp	r0, r2
   1ce4c:	str	r1, [sp, #4]
   1ce50:	bne	1cefc <__assert_fail@plt+0xbe24>
   1ce54:	ldr	r0, [fp, #-8]
   1ce58:	ldr	r0, [r0, #20]
   1ce5c:	ldr	r1, [fp, #-8]
   1ce60:	ldr	r1, [r1, #16]
   1ce64:	cmp	r0, r1
   1ce68:	bne	1cefc <__assert_fail@plt+0xbe24>
   1ce6c:	ldr	r0, [fp, #-8]
   1ce70:	ldr	r0, [r0, #36]	; 0x24
   1ce74:	movw	r1, #0
   1ce78:	cmp	r0, r1
   1ce7c:	bne	1cefc <__assert_fail@plt+0xbe24>
   1ce80:	ldr	r0, [fp, #-8]
   1ce84:	bl	11030 <fileno@plt>
   1ce88:	ldr	r2, [sp, #16]
   1ce8c:	ldr	r3, [sp, #20]
   1ce90:	ldr	lr, [fp, #8]
   1ce94:	mov	r1, sp
   1ce98:	str	lr, [r1]
   1ce9c:	bl	10f28 <lseek64@plt>
   1cea0:	str	r1, [sp, #12]
   1cea4:	str	r0, [sp, #8]
   1cea8:	ldr	r0, [sp, #8]
   1ceac:	ldr	r1, [sp, #12]
   1ceb0:	and	r0, r0, r1
   1ceb4:	cmn	r0, #1
   1ceb8:	bne	1cecc <__assert_fail@plt+0xbdf4>
   1cebc:	b	1cec0 <__assert_fail@plt+0xbde8>
   1cec0:	mvn	r0, #0
   1cec4:	str	r0, [fp, #-4]
   1cec8:	b	1cf1c <__assert_fail@plt+0xbe44>
   1cecc:	ldr	r0, [fp, #-8]
   1ced0:	ldr	r1, [r0]
   1ced4:	bic	r1, r1, #16
   1ced8:	str	r1, [r0]
   1cedc:	ldr	r0, [sp, #8]
   1cee0:	ldr	r1, [sp, #12]
   1cee4:	ldr	r2, [fp, #-8]
   1cee8:	str	r1, [r2, #84]	; 0x54
   1ceec:	str	r0, [r2, #80]	; 0x50
   1cef0:	movw	r0, #0
   1cef4:	str	r0, [fp, #-4]
   1cef8:	b	1cf1c <__assert_fail@plt+0xbe44>
   1cefc:	ldr	r0, [fp, #-8]
   1cf00:	ldr	r2, [sp, #16]
   1cf04:	ldr	r3, [sp, #20]
   1cf08:	ldr	r1, [fp, #8]
   1cf0c:	mov	ip, sp
   1cf10:	str	r1, [ip]
   1cf14:	bl	11060 <fseeko64@plt>
   1cf18:	str	r0, [fp, #-4]
   1cf1c:	ldr	r0, [fp, #-4]
   1cf20:	mov	sp, fp
   1cf24:	pop	{fp, pc}
   1cf28:	push	{fp, lr}
   1cf2c:	mov	fp, sp
   1cf30:	bl	1100c <__errno_location@plt>
   1cf34:	movw	lr, #12
   1cf38:	str	lr, [r0]
   1cf3c:	movw	r0, #0
   1cf40:	pop	{fp, pc}
   1cf44:	push	{fp, lr}
   1cf48:	mov	fp, sp
   1cf4c:	sub	sp, sp, #8
   1cf50:	str	r0, [sp, #4]
   1cf54:	ldr	r0, [sp, #4]
   1cf58:	cmn	r0, #1
   1cf5c:	bhi	1cf70 <__assert_fail@plt+0xbe98>
   1cf60:	ldr	r0, [sp, #4]
   1cf64:	bl	1c9a4 <__assert_fail@plt+0xb8cc>
   1cf68:	str	r0, [sp]
   1cf6c:	b	1cf78 <__assert_fail@plt+0xbea0>
   1cf70:	bl	1cf28 <__assert_fail@plt+0xbe50>
   1cf74:	str	r0, [sp]
   1cf78:	ldr	r0, [sp]
   1cf7c:	mov	sp, fp
   1cf80:	pop	{fp, pc}
   1cf84:	push	{fp, lr}
   1cf88:	mov	fp, sp
   1cf8c:	sub	sp, sp, #16
   1cf90:	str	r0, [fp, #-4]
   1cf94:	str	r1, [sp, #8]
   1cf98:	ldr	r0, [sp, #8]
   1cf9c:	cmn	r0, #1
   1cfa0:	bhi	1cfd8 <__assert_fail@plt+0xbf00>
   1cfa4:	ldr	r0, [fp, #-4]
   1cfa8:	ldr	r1, [sp, #8]
   1cfac:	ldr	r2, [sp, #8]
   1cfb0:	cmp	r2, #0
   1cfb4:	movw	r2, #0
   1cfb8:	movne	r2, #1
   1cfbc:	mvn	r3, #0
   1cfc0:	eor	r2, r2, r3
   1cfc4:	and	r2, r2, #1
   1cfc8:	orr	r1, r1, r2
   1cfcc:	bl	1ca14 <__assert_fail@plt+0xb93c>
   1cfd0:	str	r0, [sp, #4]
   1cfd4:	b	1cfe0 <__assert_fail@plt+0xbf08>
   1cfd8:	bl	1cf28 <__assert_fail@plt+0xbe50>
   1cfdc:	str	r0, [sp, #4]
   1cfe0:	ldr	r0, [sp, #4]
   1cfe4:	mov	sp, fp
   1cfe8:	pop	{fp, pc}
   1cfec:	push	{fp, lr}
   1cff0:	mov	fp, sp
   1cff4:	sub	sp, sp, #16
   1cff8:	str	r0, [sp, #8]
   1cffc:	str	r1, [sp, #4]
   1d000:	ldr	r0, [sp, #8]
   1d004:	mvn	r1, #0
   1d008:	cmp	r1, r0
   1d00c:	bcs	1d030 <__assert_fail@plt+0xbf58>
   1d010:	ldr	r0, [sp, #4]
   1d014:	cmp	r0, #0
   1d018:	beq	1d028 <__assert_fail@plt+0xbf50>
   1d01c:	bl	1cf28 <__assert_fail@plt+0xbe50>
   1d020:	str	r0, [fp, #-4]
   1d024:	b	1d070 <__assert_fail@plt+0xbf98>
   1d028:	movw	r0, #0
   1d02c:	str	r0, [sp, #8]
   1d030:	ldr	r0, [sp, #4]
   1d034:	mvn	r1, #0
   1d038:	cmp	r1, r0
   1d03c:	bcs	1d060 <__assert_fail@plt+0xbf88>
   1d040:	ldr	r0, [sp, #8]
   1d044:	cmp	r0, #0
   1d048:	beq	1d058 <__assert_fail@plt+0xbf80>
   1d04c:	bl	1cf28 <__assert_fail@plt+0xbe50>
   1d050:	str	r0, [fp, #-4]
   1d054:	b	1d070 <__assert_fail@plt+0xbf98>
   1d058:	movw	r0, #0
   1d05c:	str	r0, [sp, #4]
   1d060:	ldr	r0, [sp, #8]
   1d064:	ldr	r1, [sp, #4]
   1d068:	bl	1c908 <__assert_fail@plt+0xb830>
   1d06c:	str	r0, [fp, #-4]
   1d070:	ldr	r0, [fp, #-4]
   1d074:	mov	sp, fp
   1d078:	pop	{fp, pc}
   1d07c:	push	{fp, lr}
   1d080:	mov	fp, sp
   1d084:	sub	sp, sp, #16
   1d088:	str	r0, [fp, #-4]
   1d08c:	str	r1, [sp, #8]
   1d090:	str	r2, [sp, #4]
   1d094:	ldr	r0, [sp, #8]
   1d098:	cmp	r0, #0
   1d09c:	beq	1d0ac <__assert_fail@plt+0xbfd4>
   1d0a0:	ldr	r0, [sp, #4]
   1d0a4:	cmp	r0, #0
   1d0a8:	bne	1d0b8 <__assert_fail@plt+0xbfe0>
   1d0ac:	movw	r0, #1
   1d0b0:	str	r0, [sp, #4]
   1d0b4:	str	r0, [sp, #8]
   1d0b8:	ldr	r0, [sp, #8]
   1d0bc:	cmn	r0, #1
   1d0c0:	bhi	1d0e8 <__assert_fail@plt+0xc010>
   1d0c4:	ldr	r0, [sp, #4]
   1d0c8:	cmn	r0, #1
   1d0cc:	bhi	1d0e8 <__assert_fail@plt+0xc010>
   1d0d0:	ldr	r0, [fp, #-4]
   1d0d4:	ldr	r1, [sp, #8]
   1d0d8:	ldr	r2, [sp, #4]
   1d0dc:	bl	1d208 <__assert_fail@plt+0xc130>
   1d0e0:	str	r0, [sp]
   1d0e4:	b	1d0f0 <__assert_fail@plt+0xc018>
   1d0e8:	bl	1cf28 <__assert_fail@plt+0xbe50>
   1d0ec:	str	r0, [sp]
   1d0f0:	ldr	r0, [sp]
   1d0f4:	mov	sp, fp
   1d0f8:	pop	{fp, pc}
   1d0fc:	push	{fp, lr}
   1d100:	mov	fp, sp
   1d104:	sub	sp, sp, #8
   1d108:	movw	r0, #14
   1d10c:	bl	11084 <nl_langinfo@plt>
   1d110:	str	r0, [sp, #4]
   1d114:	ldr	r0, [sp, #4]
   1d118:	movw	lr, #0
   1d11c:	cmp	r0, lr
   1d120:	bne	1d130 <__assert_fail@plt+0xc058>
   1d124:	movw	r0, #63317	; 0xf755
   1d128:	movt	r0, #1
   1d12c:	str	r0, [sp, #4]
   1d130:	ldr	r0, [sp, #4]
   1d134:	ldrb	r0, [r0]
   1d138:	cmp	r0, #0
   1d13c:	bne	1d14c <__assert_fail@plt+0xc074>
   1d140:	movw	r0, #65146	; 0xfe7a
   1d144:	movt	r0, #1
   1d148:	str	r0, [sp, #4]
   1d14c:	ldr	r0, [sp, #4]
   1d150:	mov	sp, fp
   1d154:	pop	{fp, pc}
   1d158:	push	{fp, lr}
   1d15c:	mov	fp, sp
   1d160:	sub	sp, sp, #32
   1d164:	str	r0, [fp, #-8]
   1d168:	str	r1, [fp, #-12]
   1d16c:	str	r2, [sp, #16]
   1d170:	str	r3, [sp, #12]
   1d174:	ldr	r0, [fp, #-8]
   1d178:	movw	r1, #0
   1d17c:	cmp	r0, r1
   1d180:	bne	1d18c <__assert_fail@plt+0xc0b4>
   1d184:	add	r0, sp, #4
   1d188:	str	r0, [fp, #-8]
   1d18c:	ldr	r0, [fp, #-8]
   1d190:	ldr	r1, [fp, #-12]
   1d194:	ldr	r2, [sp, #16]
   1d198:	ldr	r3, [sp, #12]
   1d19c:	bl	10f58 <mbrtowc@plt>
   1d1a0:	str	r0, [sp, #8]
   1d1a4:	ldr	r0, [sp, #8]
   1d1a8:	mvn	r1, #1
   1d1ac:	cmp	r1, r0
   1d1b0:	bhi	1d1f4 <__assert_fail@plt+0xc11c>
   1d1b4:	ldr	r0, [sp, #16]
   1d1b8:	cmp	r0, #0
   1d1bc:	beq	1d1f4 <__assert_fail@plt+0xc11c>
   1d1c0:	movw	r0, #0
   1d1c4:	bl	1ebd8 <__assert_fail@plt+0xdb00>
   1d1c8:	tst	r0, #1
   1d1cc:	bne	1d1f4 <__assert_fail@plt+0xc11c>
   1d1d0:	ldr	r0, [fp, #-12]
   1d1d4:	ldrb	r0, [r0]
   1d1d8:	strb	r0, [sp, #3]
   1d1dc:	ldrb	r0, [sp, #3]
   1d1e0:	ldr	r1, [fp, #-8]
   1d1e4:	str	r0, [r1]
   1d1e8:	movw	r0, #1
   1d1ec:	str	r0, [fp, #-4]
   1d1f0:	b	1d1fc <__assert_fail@plt+0xc124>
   1d1f4:	ldr	r0, [sp, #8]
   1d1f8:	str	r0, [fp, #-4]
   1d1fc:	ldr	r0, [fp, #-4]
   1d200:	mov	sp, fp
   1d204:	pop	{fp, pc}
   1d208:	push	{fp, lr}
   1d20c:	mov	fp, sp
   1d210:	sub	sp, sp, #176	; 0xb0
   1d214:	str	r0, [fp, #-8]
   1d218:	str	r1, [fp, #-12]
   1d21c:	str	r2, [fp, #-16]
   1d220:	b	1d5d8 <__assert_fail@plt+0xc500>
   1d224:	b	1d3f8 <__assert_fail@plt+0xc320>
   1d228:	ldr	r0, [fp, #-16]
   1d22c:	cmp	r0, #0
   1d230:	bcs	1d334 <__assert_fail@plt+0xc25c>
   1d234:	ldr	r0, [fp, #-12]
   1d238:	cmp	r0, #0
   1d23c:	bcs	1d2c4 <__assert_fail@plt+0xc1ec>
   1d240:	b	1d260 <__assert_fail@plt+0xc188>
   1d244:	ldr	r0, [fp, #-12]
   1d248:	ldr	r1, [fp, #-16]
   1d24c:	movw	r2, #127	; 0x7f
   1d250:	udiv	r1, r2, r1
   1d254:	cmp	r0, r1
   1d258:	bcc	1d3c8 <__assert_fail@plt+0xc2f0>
   1d25c:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d260:	b	1d274 <__assert_fail@plt+0xc19c>
   1d264:	ldr	r0, [fp, #-16]
   1d268:	cmp	r0, #1
   1d26c:	bcc	1d284 <__assert_fail@plt+0xc1ac>
   1d270:	b	1d290 <__assert_fail@plt+0xc1b8>
   1d274:	ldr	r0, [fp, #-16]
   1d278:	movw	r1, #0
   1d27c:	cmp	r1, r0
   1d280:	bcs	1d290 <__assert_fail@plt+0xc1b8>
   1d284:	movw	r0, #0
   1d288:	str	r0, [fp, #-24]	; 0xffffffe8
   1d28c:	b	1d2a8 <__assert_fail@plt+0xc1d0>
   1d290:	ldr	r0, [fp, #-16]
   1d294:	movw	r1, #0
   1d298:	sub	r0, r1, r0
   1d29c:	movw	r1, #127	; 0x7f
   1d2a0:	udiv	r0, r1, r0
   1d2a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1d2a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2ac:	ldr	r1, [fp, #-12]
   1d2b0:	mvn	r2, #0
   1d2b4:	sub	r1, r2, r1
   1d2b8:	cmp	r0, r1
   1d2bc:	bls	1d3c8 <__assert_fail@plt+0xc2f0>
   1d2c0:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d2c4:	ldr	r0, [fp, #-16]
   1d2c8:	cmn	r0, #1
   1d2cc:	bne	1d318 <__assert_fail@plt+0xc240>
   1d2d0:	b	1d2f0 <__assert_fail@plt+0xc218>
   1d2d4:	ldr	r0, [fp, #-12]
   1d2d8:	mvn	r1, #127	; 0x7f
   1d2dc:	add	r0, r0, r1
   1d2e0:	movw	r1, #0
   1d2e4:	cmp	r1, r0
   1d2e8:	bcc	1d3c8 <__assert_fail@plt+0xc2f0>
   1d2ec:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d2f0:	ldr	r0, [fp, #-12]
   1d2f4:	movw	r1, #0
   1d2f8:	cmp	r1, r0
   1d2fc:	bcs	1d3e0 <__assert_fail@plt+0xc308>
   1d300:	ldr	r0, [fp, #-12]
   1d304:	sub	r0, r0, #1
   1d308:	movw	r1, #127	; 0x7f
   1d30c:	cmp	r1, r0
   1d310:	bcc	1d3c8 <__assert_fail@plt+0xc2f0>
   1d314:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d318:	ldr	r0, [fp, #-16]
   1d31c:	mvn	r1, #127	; 0x7f
   1d320:	udiv	r0, r1, r0
   1d324:	ldr	r1, [fp, #-12]
   1d328:	cmp	r0, r1
   1d32c:	bcc	1d3c8 <__assert_fail@plt+0xc2f0>
   1d330:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d334:	ldr	r0, [fp, #-16]
   1d338:	cmp	r0, #0
   1d33c:	bne	1d344 <__assert_fail@plt+0xc26c>
   1d340:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d344:	ldr	r0, [fp, #-12]
   1d348:	cmp	r0, #0
   1d34c:	bcs	1d3b0 <__assert_fail@plt+0xc2d8>
   1d350:	ldr	r0, [fp, #-12]
   1d354:	cmn	r0, #1
   1d358:	bne	1d394 <__assert_fail@plt+0xc2bc>
   1d35c:	b	1d37c <__assert_fail@plt+0xc2a4>
   1d360:	ldr	r0, [fp, #-16]
   1d364:	mvn	r1, #127	; 0x7f
   1d368:	add	r0, r0, r1
   1d36c:	movw	r1, #0
   1d370:	cmp	r1, r0
   1d374:	bcc	1d3c8 <__assert_fail@plt+0xc2f0>
   1d378:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d37c:	ldr	r0, [fp, #-16]
   1d380:	sub	r0, r0, #1
   1d384:	movw	r1, #127	; 0x7f
   1d388:	cmp	r1, r0
   1d38c:	bcc	1d3c8 <__assert_fail@plt+0xc2f0>
   1d390:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d394:	ldr	r0, [fp, #-12]
   1d398:	mvn	r1, #127	; 0x7f
   1d39c:	udiv	r0, r1, r0
   1d3a0:	ldr	r1, [fp, #-16]
   1d3a4:	cmp	r0, r1
   1d3a8:	bcc	1d3c8 <__assert_fail@plt+0xc2f0>
   1d3ac:	b	1d3e0 <__assert_fail@plt+0xc308>
   1d3b0:	ldr	r0, [fp, #-16]
   1d3b4:	movw	r1, #127	; 0x7f
   1d3b8:	udiv	r0, r1, r0
   1d3bc:	ldr	r1, [fp, #-12]
   1d3c0:	cmp	r0, r1
   1d3c4:	bcs	1d3e0 <__assert_fail@plt+0xc308>
   1d3c8:	ldr	r0, [fp, #-12]
   1d3cc:	ldr	r1, [fp, #-16]
   1d3d0:	mul	r0, r0, r1
   1d3d4:	sxtb	r0, r0
   1d3d8:	str	r0, [fp, #-20]	; 0xffffffec
   1d3dc:	b	1e558 <__assert_fail@plt+0xd480>
   1d3e0:	ldr	r0, [fp, #-12]
   1d3e4:	ldr	r1, [fp, #-16]
   1d3e8:	mul	r0, r0, r1
   1d3ec:	sxtb	r0, r0
   1d3f0:	str	r0, [fp, #-20]	; 0xffffffec
   1d3f4:	b	1e570 <__assert_fail@plt+0xd498>
   1d3f8:	ldr	r0, [fp, #-16]
   1d3fc:	cmp	r0, #0
   1d400:	bcs	1d50c <__assert_fail@plt+0xc434>
   1d404:	ldr	r0, [fp, #-12]
   1d408:	cmp	r0, #0
   1d40c:	bcs	1d494 <__assert_fail@plt+0xc3bc>
   1d410:	b	1d430 <__assert_fail@plt+0xc358>
   1d414:	ldr	r0, [fp, #-12]
   1d418:	ldr	r1, [fp, #-16]
   1d41c:	movw	r2, #255	; 0xff
   1d420:	udiv	r1, r2, r1
   1d424:	cmp	r0, r1
   1d428:	bcc	1d5a8 <__assert_fail@plt+0xc4d0>
   1d42c:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d430:	b	1d444 <__assert_fail@plt+0xc36c>
   1d434:	ldr	r0, [fp, #-16]
   1d438:	cmp	r0, #1
   1d43c:	bcc	1d454 <__assert_fail@plt+0xc37c>
   1d440:	b	1d460 <__assert_fail@plt+0xc388>
   1d444:	ldr	r0, [fp, #-16]
   1d448:	movw	r1, #0
   1d44c:	cmp	r1, r0
   1d450:	bcs	1d460 <__assert_fail@plt+0xc388>
   1d454:	movw	r0, #0
   1d458:	str	r0, [fp, #-28]	; 0xffffffe4
   1d45c:	b	1d478 <__assert_fail@plt+0xc3a0>
   1d460:	ldr	r0, [fp, #-16]
   1d464:	movw	r1, #0
   1d468:	sub	r0, r1, r0
   1d46c:	movw	r1, #255	; 0xff
   1d470:	udiv	r0, r1, r0
   1d474:	str	r0, [fp, #-28]	; 0xffffffe4
   1d478:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d47c:	ldr	r1, [fp, #-12]
   1d480:	mvn	r2, #0
   1d484:	sub	r1, r2, r1
   1d488:	cmp	r0, r1
   1d48c:	bls	1d5a8 <__assert_fail@plt+0xc4d0>
   1d490:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d494:	b	1d49c <__assert_fail@plt+0xc3c4>
   1d498:	b	1d4a0 <__assert_fail@plt+0xc3c8>
   1d49c:	b	1d4f0 <__assert_fail@plt+0xc418>
   1d4a0:	ldr	r0, [fp, #-16]
   1d4a4:	cmn	r0, #1
   1d4a8:	bne	1d4f0 <__assert_fail@plt+0xc418>
   1d4ac:	b	1d4c8 <__assert_fail@plt+0xc3f0>
   1d4b0:	ldr	r0, [fp, #-12]
   1d4b4:	add	r0, r0, #0
   1d4b8:	movw	r1, #0
   1d4bc:	cmp	r1, r0
   1d4c0:	bcc	1d5a8 <__assert_fail@plt+0xc4d0>
   1d4c4:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d4c8:	ldr	r0, [fp, #-12]
   1d4cc:	movw	r1, #0
   1d4d0:	cmp	r1, r0
   1d4d4:	bcs	1d5c0 <__assert_fail@plt+0xc4e8>
   1d4d8:	ldr	r0, [fp, #-12]
   1d4dc:	sub	r0, r0, #1
   1d4e0:	mvn	r1, #0
   1d4e4:	cmp	r1, r0
   1d4e8:	bcc	1d5a8 <__assert_fail@plt+0xc4d0>
   1d4ec:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d4f0:	ldr	r0, [fp, #-16]
   1d4f4:	movw	r1, #0
   1d4f8:	udiv	r0, r1, r0
   1d4fc:	ldr	r1, [fp, #-12]
   1d500:	cmp	r0, r1
   1d504:	bcc	1d5a8 <__assert_fail@plt+0xc4d0>
   1d508:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d50c:	ldr	r0, [fp, #-16]
   1d510:	cmp	r0, #0
   1d514:	bne	1d51c <__assert_fail@plt+0xc444>
   1d518:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d51c:	ldr	r0, [fp, #-12]
   1d520:	cmp	r0, #0
   1d524:	bcs	1d590 <__assert_fail@plt+0xc4b8>
   1d528:	b	1d530 <__assert_fail@plt+0xc458>
   1d52c:	b	1d534 <__assert_fail@plt+0xc45c>
   1d530:	b	1d574 <__assert_fail@plt+0xc49c>
   1d534:	ldr	r0, [fp, #-12]
   1d538:	cmn	r0, #1
   1d53c:	bne	1d574 <__assert_fail@plt+0xc49c>
   1d540:	b	1d55c <__assert_fail@plt+0xc484>
   1d544:	ldr	r0, [fp, #-16]
   1d548:	add	r0, r0, #0
   1d54c:	movw	r1, #0
   1d550:	cmp	r1, r0
   1d554:	bcc	1d5a8 <__assert_fail@plt+0xc4d0>
   1d558:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d55c:	ldr	r0, [fp, #-16]
   1d560:	sub	r0, r0, #1
   1d564:	mvn	r1, #0
   1d568:	cmp	r1, r0
   1d56c:	bcc	1d5a8 <__assert_fail@plt+0xc4d0>
   1d570:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d574:	ldr	r0, [fp, #-12]
   1d578:	movw	r1, #0
   1d57c:	udiv	r0, r1, r0
   1d580:	ldr	r1, [fp, #-16]
   1d584:	cmp	r0, r1
   1d588:	bcc	1d5a8 <__assert_fail@plt+0xc4d0>
   1d58c:	b	1d5c0 <__assert_fail@plt+0xc4e8>
   1d590:	ldr	r0, [fp, #-16]
   1d594:	movw	r1, #255	; 0xff
   1d598:	udiv	r0, r1, r0
   1d59c:	ldr	r1, [fp, #-12]
   1d5a0:	cmp	r0, r1
   1d5a4:	bcs	1d5c0 <__assert_fail@plt+0xc4e8>
   1d5a8:	ldr	r0, [fp, #-12]
   1d5ac:	ldr	r1, [fp, #-16]
   1d5b0:	mul	r0, r0, r1
   1d5b4:	and	r0, r0, #255	; 0xff
   1d5b8:	str	r0, [fp, #-20]	; 0xffffffec
   1d5bc:	b	1e558 <__assert_fail@plt+0xd480>
   1d5c0:	ldr	r0, [fp, #-12]
   1d5c4:	ldr	r1, [fp, #-16]
   1d5c8:	mul	r0, r0, r1
   1d5cc:	and	r0, r0, #255	; 0xff
   1d5d0:	str	r0, [fp, #-20]	; 0xffffffec
   1d5d4:	b	1e570 <__assert_fail@plt+0xd498>
   1d5d8:	b	1d990 <__assert_fail@plt+0xc8b8>
   1d5dc:	b	1d7b0 <__assert_fail@plt+0xc6d8>
   1d5e0:	ldr	r0, [fp, #-16]
   1d5e4:	cmp	r0, #0
   1d5e8:	bcs	1d6ec <__assert_fail@plt+0xc614>
   1d5ec:	ldr	r0, [fp, #-12]
   1d5f0:	cmp	r0, #0
   1d5f4:	bcs	1d67c <__assert_fail@plt+0xc5a4>
   1d5f8:	b	1d618 <__assert_fail@plt+0xc540>
   1d5fc:	ldr	r0, [fp, #-12]
   1d600:	ldr	r1, [fp, #-16]
   1d604:	movw	r2, #32767	; 0x7fff
   1d608:	udiv	r1, r2, r1
   1d60c:	cmp	r0, r1
   1d610:	bcc	1d780 <__assert_fail@plt+0xc6a8>
   1d614:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d618:	b	1d62c <__assert_fail@plt+0xc554>
   1d61c:	ldr	r0, [fp, #-16]
   1d620:	cmp	r0, #1
   1d624:	bcc	1d63c <__assert_fail@plt+0xc564>
   1d628:	b	1d648 <__assert_fail@plt+0xc570>
   1d62c:	ldr	r0, [fp, #-16]
   1d630:	movw	r1, #0
   1d634:	cmp	r1, r0
   1d638:	bcs	1d648 <__assert_fail@plt+0xc570>
   1d63c:	movw	r0, #0
   1d640:	str	r0, [fp, #-32]	; 0xffffffe0
   1d644:	b	1d660 <__assert_fail@plt+0xc588>
   1d648:	ldr	r0, [fp, #-16]
   1d64c:	movw	r1, #0
   1d650:	sub	r0, r1, r0
   1d654:	movw	r1, #32767	; 0x7fff
   1d658:	udiv	r0, r1, r0
   1d65c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d660:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d664:	ldr	r1, [fp, #-12]
   1d668:	mvn	r2, #0
   1d66c:	sub	r1, r2, r1
   1d670:	cmp	r0, r1
   1d674:	bls	1d780 <__assert_fail@plt+0xc6a8>
   1d678:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d67c:	ldr	r0, [fp, #-16]
   1d680:	cmn	r0, #1
   1d684:	bne	1d6d0 <__assert_fail@plt+0xc5f8>
   1d688:	b	1d6a8 <__assert_fail@plt+0xc5d0>
   1d68c:	ldr	r0, [pc, #3840]	; 1e594 <__assert_fail@plt+0xd4bc>
   1d690:	ldr	r1, [fp, #-12]
   1d694:	add	r0, r1, r0
   1d698:	movw	r1, #0
   1d69c:	cmp	r1, r0
   1d6a0:	bcc	1d780 <__assert_fail@plt+0xc6a8>
   1d6a4:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d6a8:	ldr	r0, [fp, #-12]
   1d6ac:	movw	r1, #0
   1d6b0:	cmp	r1, r0
   1d6b4:	bcs	1d798 <__assert_fail@plt+0xc6c0>
   1d6b8:	ldr	r0, [fp, #-12]
   1d6bc:	sub	r0, r0, #1
   1d6c0:	movw	r1, #32767	; 0x7fff
   1d6c4:	cmp	r1, r0
   1d6c8:	bcc	1d780 <__assert_fail@plt+0xc6a8>
   1d6cc:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d6d0:	ldr	r0, [pc, #3772]	; 1e594 <__assert_fail@plt+0xd4bc>
   1d6d4:	ldr	r1, [fp, #-16]
   1d6d8:	udiv	r0, r0, r1
   1d6dc:	ldr	r1, [fp, #-12]
   1d6e0:	cmp	r0, r1
   1d6e4:	bcc	1d780 <__assert_fail@plt+0xc6a8>
   1d6e8:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d6ec:	ldr	r0, [fp, #-16]
   1d6f0:	cmp	r0, #0
   1d6f4:	bne	1d6fc <__assert_fail@plt+0xc624>
   1d6f8:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d6fc:	ldr	r0, [fp, #-12]
   1d700:	cmp	r0, #0
   1d704:	bcs	1d768 <__assert_fail@plt+0xc690>
   1d708:	ldr	r0, [fp, #-12]
   1d70c:	cmn	r0, #1
   1d710:	bne	1d74c <__assert_fail@plt+0xc674>
   1d714:	b	1d734 <__assert_fail@plt+0xc65c>
   1d718:	ldr	r0, [pc, #3700]	; 1e594 <__assert_fail@plt+0xd4bc>
   1d71c:	ldr	r1, [fp, #-16]
   1d720:	add	r0, r1, r0
   1d724:	movw	r1, #0
   1d728:	cmp	r1, r0
   1d72c:	bcc	1d780 <__assert_fail@plt+0xc6a8>
   1d730:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d734:	ldr	r0, [fp, #-16]
   1d738:	sub	r0, r0, #1
   1d73c:	movw	r1, #32767	; 0x7fff
   1d740:	cmp	r1, r0
   1d744:	bcc	1d780 <__assert_fail@plt+0xc6a8>
   1d748:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d74c:	ldr	r0, [pc, #3648]	; 1e594 <__assert_fail@plt+0xd4bc>
   1d750:	ldr	r1, [fp, #-12]
   1d754:	udiv	r0, r0, r1
   1d758:	ldr	r1, [fp, #-16]
   1d75c:	cmp	r0, r1
   1d760:	bcc	1d780 <__assert_fail@plt+0xc6a8>
   1d764:	b	1d798 <__assert_fail@plt+0xc6c0>
   1d768:	ldr	r0, [fp, #-16]
   1d76c:	movw	r1, #32767	; 0x7fff
   1d770:	udiv	r0, r1, r0
   1d774:	ldr	r1, [fp, #-12]
   1d778:	cmp	r0, r1
   1d77c:	bcs	1d798 <__assert_fail@plt+0xc6c0>
   1d780:	ldr	r0, [fp, #-12]
   1d784:	ldr	r1, [fp, #-16]
   1d788:	mul	r0, r0, r1
   1d78c:	sxth	r0, r0
   1d790:	str	r0, [fp, #-20]	; 0xffffffec
   1d794:	b	1e558 <__assert_fail@plt+0xd480>
   1d798:	ldr	r0, [fp, #-12]
   1d79c:	ldr	r1, [fp, #-16]
   1d7a0:	mul	r0, r0, r1
   1d7a4:	sxth	r0, r0
   1d7a8:	str	r0, [fp, #-20]	; 0xffffffec
   1d7ac:	b	1e570 <__assert_fail@plt+0xd498>
   1d7b0:	ldr	r0, [fp, #-16]
   1d7b4:	cmp	r0, #0
   1d7b8:	bcs	1d8c4 <__assert_fail@plt+0xc7ec>
   1d7bc:	ldr	r0, [fp, #-12]
   1d7c0:	cmp	r0, #0
   1d7c4:	bcs	1d84c <__assert_fail@plt+0xc774>
   1d7c8:	b	1d7e8 <__assert_fail@plt+0xc710>
   1d7cc:	ldr	r0, [fp, #-12]
   1d7d0:	ldr	r1, [fp, #-16]
   1d7d4:	movw	r2, #65535	; 0xffff
   1d7d8:	udiv	r1, r2, r1
   1d7dc:	cmp	r0, r1
   1d7e0:	bcc	1d960 <__assert_fail@plt+0xc888>
   1d7e4:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d7e8:	b	1d7fc <__assert_fail@plt+0xc724>
   1d7ec:	ldr	r0, [fp, #-16]
   1d7f0:	cmp	r0, #1
   1d7f4:	bcc	1d80c <__assert_fail@plt+0xc734>
   1d7f8:	b	1d818 <__assert_fail@plt+0xc740>
   1d7fc:	ldr	r0, [fp, #-16]
   1d800:	movw	r1, #0
   1d804:	cmp	r1, r0
   1d808:	bcs	1d818 <__assert_fail@plt+0xc740>
   1d80c:	movw	r0, #0
   1d810:	str	r0, [fp, #-36]	; 0xffffffdc
   1d814:	b	1d830 <__assert_fail@plt+0xc758>
   1d818:	ldr	r0, [fp, #-16]
   1d81c:	movw	r1, #0
   1d820:	sub	r0, r1, r0
   1d824:	movw	r1, #65535	; 0xffff
   1d828:	udiv	r0, r1, r0
   1d82c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d834:	ldr	r1, [fp, #-12]
   1d838:	mvn	r2, #0
   1d83c:	sub	r1, r2, r1
   1d840:	cmp	r0, r1
   1d844:	bls	1d960 <__assert_fail@plt+0xc888>
   1d848:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d84c:	b	1d854 <__assert_fail@plt+0xc77c>
   1d850:	b	1d858 <__assert_fail@plt+0xc780>
   1d854:	b	1d8a8 <__assert_fail@plt+0xc7d0>
   1d858:	ldr	r0, [fp, #-16]
   1d85c:	cmn	r0, #1
   1d860:	bne	1d8a8 <__assert_fail@plt+0xc7d0>
   1d864:	b	1d880 <__assert_fail@plt+0xc7a8>
   1d868:	ldr	r0, [fp, #-12]
   1d86c:	add	r0, r0, #0
   1d870:	movw	r1, #0
   1d874:	cmp	r1, r0
   1d878:	bcc	1d960 <__assert_fail@plt+0xc888>
   1d87c:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d880:	ldr	r0, [fp, #-12]
   1d884:	movw	r1, #0
   1d888:	cmp	r1, r0
   1d88c:	bcs	1d978 <__assert_fail@plt+0xc8a0>
   1d890:	ldr	r0, [fp, #-12]
   1d894:	sub	r0, r0, #1
   1d898:	mvn	r1, #0
   1d89c:	cmp	r1, r0
   1d8a0:	bcc	1d960 <__assert_fail@plt+0xc888>
   1d8a4:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d8a8:	ldr	r0, [fp, #-16]
   1d8ac:	movw	r1, #0
   1d8b0:	udiv	r0, r1, r0
   1d8b4:	ldr	r1, [fp, #-12]
   1d8b8:	cmp	r0, r1
   1d8bc:	bcc	1d960 <__assert_fail@plt+0xc888>
   1d8c0:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d8c4:	ldr	r0, [fp, #-16]
   1d8c8:	cmp	r0, #0
   1d8cc:	bne	1d8d4 <__assert_fail@plt+0xc7fc>
   1d8d0:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d8d4:	ldr	r0, [fp, #-12]
   1d8d8:	cmp	r0, #0
   1d8dc:	bcs	1d948 <__assert_fail@plt+0xc870>
   1d8e0:	b	1d8e8 <__assert_fail@plt+0xc810>
   1d8e4:	b	1d8ec <__assert_fail@plt+0xc814>
   1d8e8:	b	1d92c <__assert_fail@plt+0xc854>
   1d8ec:	ldr	r0, [fp, #-12]
   1d8f0:	cmn	r0, #1
   1d8f4:	bne	1d92c <__assert_fail@plt+0xc854>
   1d8f8:	b	1d914 <__assert_fail@plt+0xc83c>
   1d8fc:	ldr	r0, [fp, #-16]
   1d900:	add	r0, r0, #0
   1d904:	movw	r1, #0
   1d908:	cmp	r1, r0
   1d90c:	bcc	1d960 <__assert_fail@plt+0xc888>
   1d910:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d914:	ldr	r0, [fp, #-16]
   1d918:	sub	r0, r0, #1
   1d91c:	mvn	r1, #0
   1d920:	cmp	r1, r0
   1d924:	bcc	1d960 <__assert_fail@plt+0xc888>
   1d928:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d92c:	ldr	r0, [fp, #-12]
   1d930:	movw	r1, #0
   1d934:	udiv	r0, r1, r0
   1d938:	ldr	r1, [fp, #-16]
   1d93c:	cmp	r0, r1
   1d940:	bcc	1d960 <__assert_fail@plt+0xc888>
   1d944:	b	1d978 <__assert_fail@plt+0xc8a0>
   1d948:	ldr	r0, [fp, #-16]
   1d94c:	movw	r1, #65535	; 0xffff
   1d950:	udiv	r0, r1, r0
   1d954:	ldr	r1, [fp, #-12]
   1d958:	cmp	r0, r1
   1d95c:	bcs	1d978 <__assert_fail@plt+0xc8a0>
   1d960:	ldr	r0, [fp, #-12]
   1d964:	ldr	r1, [fp, #-16]
   1d968:	mul	r0, r0, r1
   1d96c:	uxth	r0, r0
   1d970:	str	r0, [fp, #-20]	; 0xffffffec
   1d974:	b	1e558 <__assert_fail@plt+0xd480>
   1d978:	ldr	r0, [fp, #-12]
   1d97c:	ldr	r1, [fp, #-16]
   1d980:	mul	r0, r0, r1
   1d984:	uxth	r0, r0
   1d988:	str	r0, [fp, #-20]	; 0xffffffec
   1d98c:	b	1e570 <__assert_fail@plt+0xd498>
   1d990:	b	1d994 <__assert_fail@plt+0xc8bc>
   1d994:	b	1db58 <__assert_fail@plt+0xca80>
   1d998:	ldr	r0, [fp, #-16]
   1d99c:	cmp	r0, #0
   1d9a0:	bcs	1daa0 <__assert_fail@plt+0xc9c8>
   1d9a4:	ldr	r0, [fp, #-12]
   1d9a8:	cmp	r0, #0
   1d9ac:	bcs	1da34 <__assert_fail@plt+0xc95c>
   1d9b0:	b	1d9d0 <__assert_fail@plt+0xc8f8>
   1d9b4:	ldr	r0, [pc, #3024]	; 1e58c <__assert_fail@plt+0xd4b4>
   1d9b8:	ldr	r1, [fp, #-12]
   1d9bc:	ldr	r2, [fp, #-16]
   1d9c0:	udiv	r0, r0, r2
   1d9c4:	cmp	r1, r0
   1d9c8:	bcc	1db30 <__assert_fail@plt+0xca58>
   1d9cc:	b	1db44 <__assert_fail@plt+0xca6c>
   1d9d0:	b	1d9e4 <__assert_fail@plt+0xc90c>
   1d9d4:	ldr	r0, [fp, #-16]
   1d9d8:	cmp	r0, #1
   1d9dc:	bcc	1d9f4 <__assert_fail@plt+0xc91c>
   1d9e0:	b	1da00 <__assert_fail@plt+0xc928>
   1d9e4:	ldr	r0, [fp, #-16]
   1d9e8:	movw	r1, #0
   1d9ec:	cmp	r1, r0
   1d9f0:	bcs	1da00 <__assert_fail@plt+0xc928>
   1d9f4:	movw	r0, #0
   1d9f8:	str	r0, [fp, #-40]	; 0xffffffd8
   1d9fc:	b	1da18 <__assert_fail@plt+0xc940>
   1da00:	ldr	r0, [pc, #2948]	; 1e58c <__assert_fail@plt+0xd4b4>
   1da04:	ldr	r1, [fp, #-16]
   1da08:	movw	r2, #0
   1da0c:	sub	r1, r2, r1
   1da10:	udiv	r0, r0, r1
   1da14:	str	r0, [fp, #-40]	; 0xffffffd8
   1da18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1da1c:	ldr	r1, [fp, #-12]
   1da20:	mvn	r2, #0
   1da24:	sub	r1, r2, r1
   1da28:	cmp	r0, r1
   1da2c:	bls	1db30 <__assert_fail@plt+0xca58>
   1da30:	b	1db44 <__assert_fail@plt+0xca6c>
   1da34:	ldr	r0, [fp, #-16]
   1da38:	cmn	r0, #1
   1da3c:	bne	1da84 <__assert_fail@plt+0xc9ac>
   1da40:	b	1da5c <__assert_fail@plt+0xc984>
   1da44:	ldr	r0, [fp, #-12]
   1da48:	add	r0, r0, #-2147483648	; 0x80000000
   1da4c:	movw	r1, #0
   1da50:	cmp	r1, r0
   1da54:	bcc	1db30 <__assert_fail@plt+0xca58>
   1da58:	b	1db44 <__assert_fail@plt+0xca6c>
   1da5c:	ldr	r0, [fp, #-12]
   1da60:	movw	r1, #0
   1da64:	cmp	r1, r0
   1da68:	bcs	1db44 <__assert_fail@plt+0xca6c>
   1da6c:	ldr	r0, [pc, #2840]	; 1e58c <__assert_fail@plt+0xd4b4>
   1da70:	ldr	r1, [fp, #-12]
   1da74:	sub	r1, r1, #1
   1da78:	cmp	r0, r1
   1da7c:	bcc	1db30 <__assert_fail@plt+0xca58>
   1da80:	b	1db44 <__assert_fail@plt+0xca6c>
   1da84:	ldr	r0, [pc, #2820]	; 1e590 <__assert_fail@plt+0xd4b8>
   1da88:	ldr	r1, [fp, #-16]
   1da8c:	udiv	r0, r0, r1
   1da90:	ldr	r1, [fp, #-12]
   1da94:	cmp	r0, r1
   1da98:	bcc	1db30 <__assert_fail@plt+0xca58>
   1da9c:	b	1db44 <__assert_fail@plt+0xca6c>
   1daa0:	ldr	r0, [fp, #-16]
   1daa4:	cmp	r0, #0
   1daa8:	bne	1dab0 <__assert_fail@plt+0xc9d8>
   1daac:	b	1db44 <__assert_fail@plt+0xca6c>
   1dab0:	ldr	r0, [fp, #-12]
   1dab4:	cmp	r0, #0
   1dab8:	bcs	1db18 <__assert_fail@plt+0xca40>
   1dabc:	ldr	r0, [fp, #-12]
   1dac0:	cmn	r0, #1
   1dac4:	bne	1dafc <__assert_fail@plt+0xca24>
   1dac8:	b	1dae4 <__assert_fail@plt+0xca0c>
   1dacc:	ldr	r0, [fp, #-16]
   1dad0:	add	r0, r0, #-2147483648	; 0x80000000
   1dad4:	movw	r1, #0
   1dad8:	cmp	r1, r0
   1dadc:	bcc	1db30 <__assert_fail@plt+0xca58>
   1dae0:	b	1db44 <__assert_fail@plt+0xca6c>
   1dae4:	ldr	r0, [pc, #2720]	; 1e58c <__assert_fail@plt+0xd4b4>
   1dae8:	ldr	r1, [fp, #-16]
   1daec:	sub	r1, r1, #1
   1daf0:	cmp	r0, r1
   1daf4:	bcc	1db30 <__assert_fail@plt+0xca58>
   1daf8:	b	1db44 <__assert_fail@plt+0xca6c>
   1dafc:	ldr	r0, [pc, #2700]	; 1e590 <__assert_fail@plt+0xd4b8>
   1db00:	ldr	r1, [fp, #-12]
   1db04:	udiv	r0, r0, r1
   1db08:	ldr	r1, [fp, #-16]
   1db0c:	cmp	r0, r1
   1db10:	bcc	1db30 <__assert_fail@plt+0xca58>
   1db14:	b	1db44 <__assert_fail@plt+0xca6c>
   1db18:	ldr	r0, [pc, #2668]	; 1e58c <__assert_fail@plt+0xd4b4>
   1db1c:	ldr	r1, [fp, #-16]
   1db20:	udiv	r0, r0, r1
   1db24:	ldr	r1, [fp, #-12]
   1db28:	cmp	r0, r1
   1db2c:	bcs	1db44 <__assert_fail@plt+0xca6c>
   1db30:	ldr	r0, [fp, #-12]
   1db34:	ldr	r1, [fp, #-16]
   1db38:	mul	r0, r0, r1
   1db3c:	str	r0, [fp, #-20]	; 0xffffffec
   1db40:	b	1e558 <__assert_fail@plt+0xd480>
   1db44:	ldr	r0, [fp, #-12]
   1db48:	ldr	r1, [fp, #-16]
   1db4c:	mul	r0, r0, r1
   1db50:	str	r0, [fp, #-20]	; 0xffffffec
   1db54:	b	1e570 <__assert_fail@plt+0xd498>
   1db58:	ldr	r0, [fp, #-16]
   1db5c:	cmp	r0, #0
   1db60:	bcs	1dc6c <__assert_fail@plt+0xcb94>
   1db64:	ldr	r0, [fp, #-12]
   1db68:	cmp	r0, #0
   1db6c:	bcs	1dbf4 <__assert_fail@plt+0xcb1c>
   1db70:	b	1db90 <__assert_fail@plt+0xcab8>
   1db74:	ldr	r0, [fp, #-12]
   1db78:	ldr	r1, [fp, #-16]
   1db7c:	mvn	r2, #0
   1db80:	udiv	r1, r2, r1
   1db84:	cmp	r0, r1
   1db88:	bcc	1dd08 <__assert_fail@plt+0xcc30>
   1db8c:	b	1dd1c <__assert_fail@plt+0xcc44>
   1db90:	b	1dba4 <__assert_fail@plt+0xcacc>
   1db94:	ldr	r0, [fp, #-16]
   1db98:	cmp	r0, #1
   1db9c:	bcc	1dbb4 <__assert_fail@plt+0xcadc>
   1dba0:	b	1dbc0 <__assert_fail@plt+0xcae8>
   1dba4:	ldr	r0, [fp, #-16]
   1dba8:	movw	r1, #0
   1dbac:	cmp	r1, r0
   1dbb0:	bcs	1dbc0 <__assert_fail@plt+0xcae8>
   1dbb4:	movw	r0, #1
   1dbb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1dbbc:	b	1dbd8 <__assert_fail@plt+0xcb00>
   1dbc0:	ldr	r0, [fp, #-16]
   1dbc4:	movw	r1, #0
   1dbc8:	sub	r0, r1, r0
   1dbcc:	mvn	r1, #0
   1dbd0:	udiv	r0, r1, r0
   1dbd4:	str	r0, [fp, #-44]	; 0xffffffd4
   1dbd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dbdc:	ldr	r1, [fp, #-12]
   1dbe0:	mvn	r2, #0
   1dbe4:	sub	r1, r2, r1
   1dbe8:	cmp	r0, r1
   1dbec:	bls	1dd08 <__assert_fail@plt+0xcc30>
   1dbf0:	b	1dd1c <__assert_fail@plt+0xcc44>
   1dbf4:	b	1dbfc <__assert_fail@plt+0xcb24>
   1dbf8:	b	1dc00 <__assert_fail@plt+0xcb28>
   1dbfc:	b	1dc50 <__assert_fail@plt+0xcb78>
   1dc00:	ldr	r0, [fp, #-16]
   1dc04:	cmn	r0, #1
   1dc08:	bne	1dc50 <__assert_fail@plt+0xcb78>
   1dc0c:	b	1dc28 <__assert_fail@plt+0xcb50>
   1dc10:	ldr	r0, [fp, #-12]
   1dc14:	add	r0, r0, #0
   1dc18:	movw	r1, #0
   1dc1c:	cmp	r1, r0
   1dc20:	bcc	1dd08 <__assert_fail@plt+0xcc30>
   1dc24:	b	1dd1c <__assert_fail@plt+0xcc44>
   1dc28:	ldr	r0, [fp, #-12]
   1dc2c:	movw	r1, #0
   1dc30:	cmp	r1, r0
   1dc34:	bcs	1dd1c <__assert_fail@plt+0xcc44>
   1dc38:	ldr	r0, [fp, #-12]
   1dc3c:	sub	r0, r0, #1
   1dc40:	mvn	r1, #0
   1dc44:	cmp	r1, r0
   1dc48:	bcc	1dd08 <__assert_fail@plt+0xcc30>
   1dc4c:	b	1dd1c <__assert_fail@plt+0xcc44>
   1dc50:	ldr	r0, [fp, #-16]
   1dc54:	movw	r1, #0
   1dc58:	udiv	r0, r1, r0
   1dc5c:	ldr	r1, [fp, #-12]
   1dc60:	cmp	r0, r1
   1dc64:	bcc	1dd08 <__assert_fail@plt+0xcc30>
   1dc68:	b	1dd1c <__assert_fail@plt+0xcc44>
   1dc6c:	ldr	r0, [fp, #-16]
   1dc70:	cmp	r0, #0
   1dc74:	bne	1dc7c <__assert_fail@plt+0xcba4>
   1dc78:	b	1dd1c <__assert_fail@plt+0xcc44>
   1dc7c:	ldr	r0, [fp, #-12]
   1dc80:	cmp	r0, #0
   1dc84:	bcs	1dcf0 <__assert_fail@plt+0xcc18>
   1dc88:	b	1dc90 <__assert_fail@plt+0xcbb8>
   1dc8c:	b	1dc94 <__assert_fail@plt+0xcbbc>
   1dc90:	b	1dcd4 <__assert_fail@plt+0xcbfc>
   1dc94:	ldr	r0, [fp, #-12]
   1dc98:	cmn	r0, #1
   1dc9c:	bne	1dcd4 <__assert_fail@plt+0xcbfc>
   1dca0:	b	1dcbc <__assert_fail@plt+0xcbe4>
   1dca4:	ldr	r0, [fp, #-16]
   1dca8:	add	r0, r0, #0
   1dcac:	movw	r1, #0
   1dcb0:	cmp	r1, r0
   1dcb4:	bcc	1dd08 <__assert_fail@plt+0xcc30>
   1dcb8:	b	1dd1c <__assert_fail@plt+0xcc44>
   1dcbc:	ldr	r0, [fp, #-16]
   1dcc0:	sub	r0, r0, #1
   1dcc4:	mvn	r1, #0
   1dcc8:	cmp	r1, r0
   1dccc:	bcc	1dd08 <__assert_fail@plt+0xcc30>
   1dcd0:	b	1dd1c <__assert_fail@plt+0xcc44>
   1dcd4:	ldr	r0, [fp, #-12]
   1dcd8:	movw	r1, #0
   1dcdc:	udiv	r0, r1, r0
   1dce0:	ldr	r1, [fp, #-16]
   1dce4:	cmp	r0, r1
   1dce8:	bcc	1dd08 <__assert_fail@plt+0xcc30>
   1dcec:	b	1dd1c <__assert_fail@plt+0xcc44>
   1dcf0:	ldr	r0, [fp, #-16]
   1dcf4:	mvn	r1, #0
   1dcf8:	udiv	r0, r1, r0
   1dcfc:	ldr	r1, [fp, #-12]
   1dd00:	cmp	r0, r1
   1dd04:	bcs	1dd1c <__assert_fail@plt+0xcc44>
   1dd08:	ldr	r0, [fp, #-12]
   1dd0c:	ldr	r1, [fp, #-16]
   1dd10:	mul	r0, r0, r1
   1dd14:	str	r0, [fp, #-20]	; 0xffffffec
   1dd18:	b	1e558 <__assert_fail@plt+0xd480>
   1dd1c:	ldr	r0, [fp, #-12]
   1dd20:	ldr	r1, [fp, #-16]
   1dd24:	mul	r0, r0, r1
   1dd28:	str	r0, [fp, #-20]	; 0xffffffec
   1dd2c:	b	1e570 <__assert_fail@plt+0xd498>
   1dd30:	b	1dd34 <__assert_fail@plt+0xcc5c>
   1dd34:	b	1def8 <__assert_fail@plt+0xce20>
   1dd38:	ldr	r0, [fp, #-16]
   1dd3c:	cmp	r0, #0
   1dd40:	bcs	1de40 <__assert_fail@plt+0xcd68>
   1dd44:	ldr	r0, [fp, #-12]
   1dd48:	cmp	r0, #0
   1dd4c:	bcs	1ddd4 <__assert_fail@plt+0xccfc>
   1dd50:	b	1dd70 <__assert_fail@plt+0xcc98>
   1dd54:	ldr	r0, [pc, #2096]	; 1e58c <__assert_fail@plt+0xd4b4>
   1dd58:	ldr	r1, [fp, #-12]
   1dd5c:	ldr	r2, [fp, #-16]
   1dd60:	udiv	r0, r0, r2
   1dd64:	cmp	r1, r0
   1dd68:	bcc	1ded0 <__assert_fail@plt+0xcdf8>
   1dd6c:	b	1dee4 <__assert_fail@plt+0xce0c>
   1dd70:	b	1dd84 <__assert_fail@plt+0xccac>
   1dd74:	ldr	r0, [fp, #-16]
   1dd78:	cmp	r0, #1
   1dd7c:	bcc	1dd94 <__assert_fail@plt+0xccbc>
   1dd80:	b	1dda0 <__assert_fail@plt+0xccc8>
   1dd84:	ldr	r0, [fp, #-16]
   1dd88:	movw	r1, #0
   1dd8c:	cmp	r1, r0
   1dd90:	bcs	1dda0 <__assert_fail@plt+0xccc8>
   1dd94:	movw	r0, #0
   1dd98:	str	r0, [fp, #-48]	; 0xffffffd0
   1dd9c:	b	1ddb8 <__assert_fail@plt+0xcce0>
   1dda0:	ldr	r0, [pc, #2020]	; 1e58c <__assert_fail@plt+0xd4b4>
   1dda4:	ldr	r1, [fp, #-16]
   1dda8:	movw	r2, #0
   1ddac:	sub	r1, r2, r1
   1ddb0:	udiv	r0, r0, r1
   1ddb4:	str	r0, [fp, #-48]	; 0xffffffd0
   1ddb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ddbc:	ldr	r1, [fp, #-12]
   1ddc0:	mvn	r2, #0
   1ddc4:	sub	r1, r2, r1
   1ddc8:	cmp	r0, r1
   1ddcc:	bls	1ded0 <__assert_fail@plt+0xcdf8>
   1ddd0:	b	1dee4 <__assert_fail@plt+0xce0c>
   1ddd4:	ldr	r0, [fp, #-16]
   1ddd8:	cmn	r0, #1
   1dddc:	bne	1de24 <__assert_fail@plt+0xcd4c>
   1dde0:	b	1ddfc <__assert_fail@plt+0xcd24>
   1dde4:	ldr	r0, [fp, #-12]
   1dde8:	add	r0, r0, #-2147483648	; 0x80000000
   1ddec:	movw	r1, #0
   1ddf0:	cmp	r1, r0
   1ddf4:	bcc	1ded0 <__assert_fail@plt+0xcdf8>
   1ddf8:	b	1dee4 <__assert_fail@plt+0xce0c>
   1ddfc:	ldr	r0, [fp, #-12]
   1de00:	movw	r1, #0
   1de04:	cmp	r1, r0
   1de08:	bcs	1dee4 <__assert_fail@plt+0xce0c>
   1de0c:	ldr	r0, [pc, #1912]	; 1e58c <__assert_fail@plt+0xd4b4>
   1de10:	ldr	r1, [fp, #-12]
   1de14:	sub	r1, r1, #1
   1de18:	cmp	r0, r1
   1de1c:	bcc	1ded0 <__assert_fail@plt+0xcdf8>
   1de20:	b	1dee4 <__assert_fail@plt+0xce0c>
   1de24:	ldr	r0, [pc, #1892]	; 1e590 <__assert_fail@plt+0xd4b8>
   1de28:	ldr	r1, [fp, #-16]
   1de2c:	udiv	r0, r0, r1
   1de30:	ldr	r1, [fp, #-12]
   1de34:	cmp	r0, r1
   1de38:	bcc	1ded0 <__assert_fail@plt+0xcdf8>
   1de3c:	b	1dee4 <__assert_fail@plt+0xce0c>
   1de40:	ldr	r0, [fp, #-16]
   1de44:	cmp	r0, #0
   1de48:	bne	1de50 <__assert_fail@plt+0xcd78>
   1de4c:	b	1dee4 <__assert_fail@plt+0xce0c>
   1de50:	ldr	r0, [fp, #-12]
   1de54:	cmp	r0, #0
   1de58:	bcs	1deb8 <__assert_fail@plt+0xcde0>
   1de5c:	ldr	r0, [fp, #-12]
   1de60:	cmn	r0, #1
   1de64:	bne	1de9c <__assert_fail@plt+0xcdc4>
   1de68:	b	1de84 <__assert_fail@plt+0xcdac>
   1de6c:	ldr	r0, [fp, #-16]
   1de70:	add	r0, r0, #-2147483648	; 0x80000000
   1de74:	movw	r1, #0
   1de78:	cmp	r1, r0
   1de7c:	bcc	1ded0 <__assert_fail@plt+0xcdf8>
   1de80:	b	1dee4 <__assert_fail@plt+0xce0c>
   1de84:	ldr	r0, [pc, #1792]	; 1e58c <__assert_fail@plt+0xd4b4>
   1de88:	ldr	r1, [fp, #-16]
   1de8c:	sub	r1, r1, #1
   1de90:	cmp	r0, r1
   1de94:	bcc	1ded0 <__assert_fail@plt+0xcdf8>
   1de98:	b	1dee4 <__assert_fail@plt+0xce0c>
   1de9c:	ldr	r0, [pc, #1772]	; 1e590 <__assert_fail@plt+0xd4b8>
   1dea0:	ldr	r1, [fp, #-12]
   1dea4:	udiv	r0, r0, r1
   1dea8:	ldr	r1, [fp, #-16]
   1deac:	cmp	r0, r1
   1deb0:	bcc	1ded0 <__assert_fail@plt+0xcdf8>
   1deb4:	b	1dee4 <__assert_fail@plt+0xce0c>
   1deb8:	ldr	r0, [pc, #1740]	; 1e58c <__assert_fail@plt+0xd4b4>
   1debc:	ldr	r1, [fp, #-16]
   1dec0:	udiv	r0, r0, r1
   1dec4:	ldr	r1, [fp, #-12]
   1dec8:	cmp	r0, r1
   1decc:	bcs	1dee4 <__assert_fail@plt+0xce0c>
   1ded0:	ldr	r0, [fp, #-12]
   1ded4:	ldr	r1, [fp, #-16]
   1ded8:	mul	r0, r0, r1
   1dedc:	str	r0, [fp, #-20]	; 0xffffffec
   1dee0:	b	1e558 <__assert_fail@plt+0xd480>
   1dee4:	ldr	r0, [fp, #-12]
   1dee8:	ldr	r1, [fp, #-16]
   1deec:	mul	r0, r0, r1
   1def0:	str	r0, [fp, #-20]	; 0xffffffec
   1def4:	b	1e570 <__assert_fail@plt+0xd498>
   1def8:	ldr	r0, [fp, #-16]
   1defc:	cmp	r0, #0
   1df00:	bcs	1e00c <__assert_fail@plt+0xcf34>
   1df04:	ldr	r0, [fp, #-12]
   1df08:	cmp	r0, #0
   1df0c:	bcs	1df94 <__assert_fail@plt+0xcebc>
   1df10:	b	1df30 <__assert_fail@plt+0xce58>
   1df14:	ldr	r0, [fp, #-12]
   1df18:	ldr	r1, [fp, #-16]
   1df1c:	mvn	r2, #0
   1df20:	udiv	r1, r2, r1
   1df24:	cmp	r0, r1
   1df28:	bcc	1e0a8 <__assert_fail@plt+0xcfd0>
   1df2c:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1df30:	b	1df44 <__assert_fail@plt+0xce6c>
   1df34:	ldr	r0, [fp, #-16]
   1df38:	cmp	r0, #1
   1df3c:	bcc	1df54 <__assert_fail@plt+0xce7c>
   1df40:	b	1df60 <__assert_fail@plt+0xce88>
   1df44:	ldr	r0, [fp, #-16]
   1df48:	movw	r1, #0
   1df4c:	cmp	r1, r0
   1df50:	bcs	1df60 <__assert_fail@plt+0xce88>
   1df54:	movw	r0, #1
   1df58:	str	r0, [fp, #-52]	; 0xffffffcc
   1df5c:	b	1df78 <__assert_fail@plt+0xcea0>
   1df60:	ldr	r0, [fp, #-16]
   1df64:	movw	r1, #0
   1df68:	sub	r0, r1, r0
   1df6c:	mvn	r1, #0
   1df70:	udiv	r0, r1, r0
   1df74:	str	r0, [fp, #-52]	; 0xffffffcc
   1df78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1df7c:	ldr	r1, [fp, #-12]
   1df80:	mvn	r2, #0
   1df84:	sub	r1, r2, r1
   1df88:	cmp	r0, r1
   1df8c:	bls	1e0a8 <__assert_fail@plt+0xcfd0>
   1df90:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1df94:	b	1df9c <__assert_fail@plt+0xcec4>
   1df98:	b	1dfa0 <__assert_fail@plt+0xcec8>
   1df9c:	b	1dff0 <__assert_fail@plt+0xcf18>
   1dfa0:	ldr	r0, [fp, #-16]
   1dfa4:	cmn	r0, #1
   1dfa8:	bne	1dff0 <__assert_fail@plt+0xcf18>
   1dfac:	b	1dfc8 <__assert_fail@plt+0xcef0>
   1dfb0:	ldr	r0, [fp, #-12]
   1dfb4:	add	r0, r0, #0
   1dfb8:	movw	r1, #0
   1dfbc:	cmp	r1, r0
   1dfc0:	bcc	1e0a8 <__assert_fail@plt+0xcfd0>
   1dfc4:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1dfc8:	ldr	r0, [fp, #-12]
   1dfcc:	movw	r1, #0
   1dfd0:	cmp	r1, r0
   1dfd4:	bcs	1e0bc <__assert_fail@plt+0xcfe4>
   1dfd8:	ldr	r0, [fp, #-12]
   1dfdc:	sub	r0, r0, #1
   1dfe0:	mvn	r1, #0
   1dfe4:	cmp	r1, r0
   1dfe8:	bcc	1e0a8 <__assert_fail@plt+0xcfd0>
   1dfec:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1dff0:	ldr	r0, [fp, #-16]
   1dff4:	movw	r1, #0
   1dff8:	udiv	r0, r1, r0
   1dffc:	ldr	r1, [fp, #-12]
   1e000:	cmp	r0, r1
   1e004:	bcc	1e0a8 <__assert_fail@plt+0xcfd0>
   1e008:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1e00c:	ldr	r0, [fp, #-16]
   1e010:	cmp	r0, #0
   1e014:	bne	1e01c <__assert_fail@plt+0xcf44>
   1e018:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1e01c:	ldr	r0, [fp, #-12]
   1e020:	cmp	r0, #0
   1e024:	bcs	1e090 <__assert_fail@plt+0xcfb8>
   1e028:	b	1e030 <__assert_fail@plt+0xcf58>
   1e02c:	b	1e034 <__assert_fail@plt+0xcf5c>
   1e030:	b	1e074 <__assert_fail@plt+0xcf9c>
   1e034:	ldr	r0, [fp, #-12]
   1e038:	cmn	r0, #1
   1e03c:	bne	1e074 <__assert_fail@plt+0xcf9c>
   1e040:	b	1e05c <__assert_fail@plt+0xcf84>
   1e044:	ldr	r0, [fp, #-16]
   1e048:	add	r0, r0, #0
   1e04c:	movw	r1, #0
   1e050:	cmp	r1, r0
   1e054:	bcc	1e0a8 <__assert_fail@plt+0xcfd0>
   1e058:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1e05c:	ldr	r0, [fp, #-16]
   1e060:	sub	r0, r0, #1
   1e064:	mvn	r1, #0
   1e068:	cmp	r1, r0
   1e06c:	bcc	1e0a8 <__assert_fail@plt+0xcfd0>
   1e070:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1e074:	ldr	r0, [fp, #-12]
   1e078:	movw	r1, #0
   1e07c:	udiv	r0, r1, r0
   1e080:	ldr	r1, [fp, #-16]
   1e084:	cmp	r0, r1
   1e088:	bcc	1e0a8 <__assert_fail@plt+0xcfd0>
   1e08c:	b	1e0bc <__assert_fail@plt+0xcfe4>
   1e090:	ldr	r0, [fp, #-16]
   1e094:	mvn	r1, #0
   1e098:	udiv	r0, r1, r0
   1e09c:	ldr	r1, [fp, #-12]
   1e0a0:	cmp	r0, r1
   1e0a4:	bcs	1e0bc <__assert_fail@plt+0xcfe4>
   1e0a8:	ldr	r0, [fp, #-12]
   1e0ac:	ldr	r1, [fp, #-16]
   1e0b0:	mul	r0, r0, r1
   1e0b4:	str	r0, [fp, #-20]	; 0xffffffec
   1e0b8:	b	1e558 <__assert_fail@plt+0xd480>
   1e0bc:	ldr	r0, [fp, #-12]
   1e0c0:	ldr	r1, [fp, #-16]
   1e0c4:	mul	r0, r0, r1
   1e0c8:	str	r0, [fp, #-20]	; 0xffffffec
   1e0cc:	b	1e570 <__assert_fail@plt+0xd498>
   1e0d0:	b	1e324 <__assert_fail@plt+0xd24c>
   1e0d4:	ldr	r0, [fp, #-16]
   1e0d8:	cmp	r0, #0
   1e0dc:	bcs	1e23c <__assert_fail@plt+0xd164>
   1e0e0:	ldr	r0, [fp, #-12]
   1e0e4:	cmp	r0, #0
   1e0e8:	bcs	1e1b8 <__assert_fail@plt+0xd0e0>
   1e0ec:	b	1e0f0 <__assert_fail@plt+0xd018>
   1e0f0:	ldr	r0, [fp, #-12]
   1e0f4:	ldr	r2, [fp, #-16]
   1e0f8:	mvn	r1, #0
   1e0fc:	mvn	r3, #-2147483648	; 0x80000000
   1e100:	mov	ip, #0
   1e104:	str	r0, [fp, #-56]	; 0xffffffc8
   1e108:	mov	r0, r1
   1e10c:	mov	r1, r3
   1e110:	mov	r3, ip
   1e114:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1e118:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e11c:	subs	r0, r2, r0
   1e120:	rscs	r1, r1, #0
   1e124:	str	r0, [fp, #-60]	; 0xffffffc4
   1e128:	str	r1, [fp, #-64]	; 0xffffffc0
   1e12c:	blt	1e2fc <__assert_fail@plt+0xd224>
   1e130:	b	1e310 <__assert_fail@plt+0xd238>
   1e134:	b	1e148 <__assert_fail@plt+0xd070>
   1e138:	ldr	r0, [fp, #-16]
   1e13c:	cmp	r0, #1
   1e140:	bcc	1e158 <__assert_fail@plt+0xd080>
   1e144:	b	1e16c <__assert_fail@plt+0xd094>
   1e148:	ldr	r0, [fp, #-16]
   1e14c:	movw	r1, #0
   1e150:	cmp	r1, r0
   1e154:	bcs	1e16c <__assert_fail@plt+0xd094>
   1e158:	mov	r0, #0
   1e15c:	mvn	r1, #0
   1e160:	str	r1, [fp, #-68]	; 0xffffffbc
   1e164:	str	r0, [fp, #-72]	; 0xffffffb8
   1e168:	b	1e190 <__assert_fail@plt+0xd0b8>
   1e16c:	ldr	r0, [fp, #-16]
   1e170:	rsb	r2, r0, #0
   1e174:	mvn	r0, #0
   1e178:	mvn	r1, #-2147483648	; 0x80000000
   1e17c:	mov	r3, #0
   1e180:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1e184:	str	r0, [fp, #-68]	; 0xffffffbc
   1e188:	str	r1, [fp, #-72]	; 0xffffffb8
   1e18c:	b	1e190 <__assert_fail@plt+0xd0b8>
   1e190:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1e194:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1e198:	ldr	r2, [fp, #-12]
   1e19c:	mvn	r2, r2
   1e1a0:	subs	r1, r2, r1
   1e1a4:	rscs	r0, r0, #0
   1e1a8:	str	r1, [fp, #-76]	; 0xffffffb4
   1e1ac:	str	r0, [fp, #-80]	; 0xffffffb0
   1e1b0:	bge	1e2fc <__assert_fail@plt+0xd224>
   1e1b4:	b	1e310 <__assert_fail@plt+0xd238>
   1e1b8:	ldr	r0, [fp, #-16]
   1e1bc:	cmn	r0, #1
   1e1c0:	bne	1e208 <__assert_fail@plt+0xd130>
   1e1c4:	b	1e1e8 <__assert_fail@plt+0xd110>
   1e1c8:	ldr	r0, [fp, #-12]
   1e1cc:	rsbs	r0, r0, #0
   1e1d0:	mov	r1, #0
   1e1d4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1e1d8:	str	r0, [fp, #-84]	; 0xffffffac
   1e1dc:	str	r1, [sp, #88]	; 0x58
   1e1e0:	blt	1e2fc <__assert_fail@plt+0xd224>
   1e1e4:	b	1e310 <__assert_fail@plt+0xd238>
   1e1e8:	ldr	r0, [fp, #-12]
   1e1ec:	movw	r1, #0
   1e1f0:	cmp	r1, r0
   1e1f4:	bcs	1e310 <__assert_fail@plt+0xd238>
   1e1f8:	mov	r0, #0
   1e1fc:	cmp	r0, #0
   1e200:	bne	1e2fc <__assert_fail@plt+0xd224>
   1e204:	b	1e310 <__assert_fail@plt+0xd238>
   1e208:	ldr	r2, [fp, #-16]
   1e20c:	mov	r1, #-2147483648	; 0x80000000
   1e210:	mov	r0, #0
   1e214:	str	r0, [sp, #84]	; 0x54
   1e218:	ldr	r3, [sp, #84]	; 0x54
   1e21c:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   1e220:	ldr	r2, [fp, #-12]
   1e224:	subs	r0, r0, r2
   1e228:	sbcs	r1, r1, #0
   1e22c:	str	r0, [sp, #80]	; 0x50
   1e230:	str	r1, [sp, #76]	; 0x4c
   1e234:	blt	1e2fc <__assert_fail@plt+0xd224>
   1e238:	b	1e310 <__assert_fail@plt+0xd238>
   1e23c:	ldr	r0, [fp, #-16]
   1e240:	cmp	r0, #0
   1e244:	bne	1e24c <__assert_fail@plt+0xd174>
   1e248:	b	1e310 <__assert_fail@plt+0xd238>
   1e24c:	ldr	r0, [fp, #-12]
   1e250:	cmp	r0, #0
   1e254:	bcs	1e2cc <__assert_fail@plt+0xd1f4>
   1e258:	ldr	r0, [fp, #-12]
   1e25c:	cmn	r0, #1
   1e260:	bne	1e298 <__assert_fail@plt+0xd1c0>
   1e264:	b	1e288 <__assert_fail@plt+0xd1b0>
   1e268:	ldr	r0, [fp, #-16]
   1e26c:	rsbs	r0, r0, #0
   1e270:	mov	r1, #0
   1e274:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1e278:	str	r0, [sp, #72]	; 0x48
   1e27c:	str	r1, [sp, #68]	; 0x44
   1e280:	blt	1e2fc <__assert_fail@plt+0xd224>
   1e284:	b	1e310 <__assert_fail@plt+0xd238>
   1e288:	mov	r0, #0
   1e28c:	cmp	r0, #0
   1e290:	bne	1e2fc <__assert_fail@plt+0xd224>
   1e294:	b	1e310 <__assert_fail@plt+0xd238>
   1e298:	ldr	r2, [fp, #-12]
   1e29c:	mov	r1, #-2147483648	; 0x80000000
   1e2a0:	mov	r0, #0
   1e2a4:	str	r0, [sp, #64]	; 0x40
   1e2a8:	ldr	r3, [sp, #64]	; 0x40
   1e2ac:	bl	1edd0 <__assert_fail@plt+0xdcf8>
   1e2b0:	ldr	r2, [fp, #-16]
   1e2b4:	subs	r0, r0, r2
   1e2b8:	sbcs	r1, r1, #0
   1e2bc:	str	r0, [sp, #60]	; 0x3c
   1e2c0:	str	r1, [sp, #56]	; 0x38
   1e2c4:	blt	1e2fc <__assert_fail@plt+0xd224>
   1e2c8:	b	1e310 <__assert_fail@plt+0xd238>
   1e2cc:	ldr	r2, [fp, #-16]
   1e2d0:	mvn	r0, #0
   1e2d4:	mvn	r1, #-2147483648	; 0x80000000
   1e2d8:	mov	r3, #0
   1e2dc:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1e2e0:	ldr	r2, [fp, #-12]
   1e2e4:	subs	r0, r0, r2
   1e2e8:	sbcs	r1, r1, #0
   1e2ec:	str	r0, [sp, #52]	; 0x34
   1e2f0:	str	r1, [sp, #48]	; 0x30
   1e2f4:	bge	1e310 <__assert_fail@plt+0xd238>
   1e2f8:	b	1e2fc <__assert_fail@plt+0xd224>
   1e2fc:	ldr	r0, [fp, #-12]
   1e300:	ldr	r1, [fp, #-16]
   1e304:	mul	r0, r0, r1
   1e308:	str	r0, [fp, #-20]	; 0xffffffec
   1e30c:	b	1e558 <__assert_fail@plt+0xd480>
   1e310:	ldr	r0, [fp, #-12]
   1e314:	ldr	r1, [fp, #-16]
   1e318:	mul	r0, r0, r1
   1e31c:	str	r0, [fp, #-20]	; 0xffffffec
   1e320:	b	1e570 <__assert_fail@plt+0xd498>
   1e324:	ldr	r0, [fp, #-16]
   1e328:	cmp	r0, #0
   1e32c:	bcs	1e478 <__assert_fail@plt+0xd3a0>
   1e330:	ldr	r0, [fp, #-12]
   1e334:	cmp	r0, #0
   1e338:	bcs	1e400 <__assert_fail@plt+0xd328>
   1e33c:	b	1e378 <__assert_fail@plt+0xd2a0>
   1e340:	ldr	r0, [fp, #-12]
   1e344:	ldr	r2, [fp, #-16]
   1e348:	mvn	r1, #0
   1e34c:	mov	r3, #0
   1e350:	str	r0, [sp, #44]	; 0x2c
   1e354:	mov	r0, r1
   1e358:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1e35c:	ldr	r2, [sp, #44]	; 0x2c
   1e360:	subs	r0, r2, r0
   1e364:	rscs	r1, r1, #0
   1e368:	str	r0, [sp, #40]	; 0x28
   1e36c:	str	r1, [sp, #36]	; 0x24
   1e370:	bcc	1e530 <__assert_fail@plt+0xd458>
   1e374:	b	1e544 <__assert_fail@plt+0xd46c>
   1e378:	b	1e38c <__assert_fail@plt+0xd2b4>
   1e37c:	ldr	r0, [fp, #-16]
   1e380:	cmp	r0, #1
   1e384:	bcc	1e39c <__assert_fail@plt+0xd2c4>
   1e388:	b	1e3b0 <__assert_fail@plt+0xd2d8>
   1e38c:	ldr	r0, [fp, #-16]
   1e390:	movw	r1, #0
   1e394:	cmp	r1, r0
   1e398:	bcs	1e3b0 <__assert_fail@plt+0xd2d8>
   1e39c:	mov	r0, #1
   1e3a0:	mvn	r1, #0
   1e3a4:	str	r1, [sp, #32]
   1e3a8:	str	r0, [sp, #28]
   1e3ac:	b	1e3d8 <__assert_fail@plt+0xd300>
   1e3b0:	ldr	r0, [fp, #-16]
   1e3b4:	rsb	r2, r0, #0
   1e3b8:	mvn	r0, #0
   1e3bc:	mov	r3, #0
   1e3c0:	str	r0, [sp, #24]
   1e3c4:	ldr	r1, [sp, #24]
   1e3c8:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1e3cc:	str	r0, [sp, #32]
   1e3d0:	str	r1, [sp, #28]
   1e3d4:	b	1e3d8 <__assert_fail@plt+0xd300>
   1e3d8:	ldr	r0, [sp, #28]
   1e3dc:	ldr	r1, [sp, #32]
   1e3e0:	ldr	r2, [fp, #-12]
   1e3e4:	mvn	r2, r2
   1e3e8:	subs	r1, r2, r1
   1e3ec:	rscs	r0, r0, #0
   1e3f0:	str	r1, [sp, #20]
   1e3f4:	str	r0, [sp, #16]
   1e3f8:	bcs	1e530 <__assert_fail@plt+0xd458>
   1e3fc:	b	1e544 <__assert_fail@plt+0xd46c>
   1e400:	b	1e408 <__assert_fail@plt+0xd330>
   1e404:	b	1e40c <__assert_fail@plt+0xd334>
   1e408:	b	1e45c <__assert_fail@plt+0xd384>
   1e40c:	ldr	r0, [fp, #-16]
   1e410:	cmn	r0, #1
   1e414:	bne	1e45c <__assert_fail@plt+0xd384>
   1e418:	b	1e434 <__assert_fail@plt+0xd35c>
   1e41c:	ldr	r0, [fp, #-12]
   1e420:	add	r0, r0, #0
   1e424:	movw	r1, #0
   1e428:	cmp	r1, r0
   1e42c:	bcc	1e530 <__assert_fail@plt+0xd458>
   1e430:	b	1e544 <__assert_fail@plt+0xd46c>
   1e434:	ldr	r0, [fp, #-12]
   1e438:	movw	r1, #0
   1e43c:	cmp	r1, r0
   1e440:	bcs	1e544 <__assert_fail@plt+0xd46c>
   1e444:	ldr	r0, [fp, #-12]
   1e448:	sub	r0, r0, #1
   1e44c:	mvn	r1, #0
   1e450:	cmp	r1, r0
   1e454:	bcc	1e530 <__assert_fail@plt+0xd458>
   1e458:	b	1e544 <__assert_fail@plt+0xd46c>
   1e45c:	ldr	r0, [fp, #-16]
   1e460:	movw	r1, #0
   1e464:	udiv	r0, r1, r0
   1e468:	ldr	r1, [fp, #-12]
   1e46c:	cmp	r0, r1
   1e470:	bcc	1e530 <__assert_fail@plt+0xd458>
   1e474:	b	1e544 <__assert_fail@plt+0xd46c>
   1e478:	ldr	r0, [fp, #-16]
   1e47c:	cmp	r0, #0
   1e480:	bne	1e488 <__assert_fail@plt+0xd3b0>
   1e484:	b	1e544 <__assert_fail@plt+0xd46c>
   1e488:	ldr	r0, [fp, #-12]
   1e48c:	cmp	r0, #0
   1e490:	bcs	1e4fc <__assert_fail@plt+0xd424>
   1e494:	b	1e49c <__assert_fail@plt+0xd3c4>
   1e498:	b	1e4a0 <__assert_fail@plt+0xd3c8>
   1e49c:	b	1e4e0 <__assert_fail@plt+0xd408>
   1e4a0:	ldr	r0, [fp, #-12]
   1e4a4:	cmn	r0, #1
   1e4a8:	bne	1e4e0 <__assert_fail@plt+0xd408>
   1e4ac:	b	1e4c8 <__assert_fail@plt+0xd3f0>
   1e4b0:	ldr	r0, [fp, #-16]
   1e4b4:	add	r0, r0, #0
   1e4b8:	movw	r1, #0
   1e4bc:	cmp	r1, r0
   1e4c0:	bcc	1e530 <__assert_fail@plt+0xd458>
   1e4c4:	b	1e544 <__assert_fail@plt+0xd46c>
   1e4c8:	ldr	r0, [fp, #-16]
   1e4cc:	sub	r0, r0, #1
   1e4d0:	mvn	r1, #0
   1e4d4:	cmp	r1, r0
   1e4d8:	bcc	1e530 <__assert_fail@plt+0xd458>
   1e4dc:	b	1e544 <__assert_fail@plt+0xd46c>
   1e4e0:	ldr	r0, [fp, #-12]
   1e4e4:	movw	r1, #0
   1e4e8:	udiv	r0, r1, r0
   1e4ec:	ldr	r1, [fp, #-16]
   1e4f0:	cmp	r0, r1
   1e4f4:	bcc	1e530 <__assert_fail@plt+0xd458>
   1e4f8:	b	1e544 <__assert_fail@plt+0xd46c>
   1e4fc:	ldr	r2, [fp, #-16]
   1e500:	mvn	r0, #0
   1e504:	mov	r3, #0
   1e508:	str	r0, [sp, #12]
   1e50c:	ldr	r1, [sp, #12]
   1e510:	bl	1eea4 <__assert_fail@plt+0xddcc>
   1e514:	ldr	r2, [fp, #-12]
   1e518:	subs	r0, r0, r2
   1e51c:	sbcs	r1, r1, #0
   1e520:	str	r0, [sp, #8]
   1e524:	str	r1, [sp, #4]
   1e528:	bcs	1e544 <__assert_fail@plt+0xd46c>
   1e52c:	b	1e530 <__assert_fail@plt+0xd458>
   1e530:	ldr	r0, [fp, #-12]
   1e534:	ldr	r1, [fp, #-16]
   1e538:	mul	r0, r0, r1
   1e53c:	str	r0, [fp, #-20]	; 0xffffffec
   1e540:	b	1e558 <__assert_fail@plt+0xd480>
   1e544:	ldr	r0, [fp, #-12]
   1e548:	ldr	r1, [fp, #-16]
   1e54c:	mul	r0, r0, r1
   1e550:	str	r0, [fp, #-20]	; 0xffffffec
   1e554:	b	1e570 <__assert_fail@plt+0xd498>
   1e558:	bl	1100c <__errno_location@plt>
   1e55c:	movw	lr, #12
   1e560:	str	lr, [r0]
   1e564:	movw	r0, #0
   1e568:	str	r0, [fp, #-4]
   1e56c:	b	1e580 <__assert_fail@plt+0xd4a8>
   1e570:	ldr	r0, [fp, #-8]
   1e574:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e578:	bl	1ca14 <__assert_fail@plt+0xb93c>
   1e57c:	str	r0, [fp, #-4]
   1e580:	ldr	r0, [fp, #-4]
   1e584:	mov	sp, fp
   1e588:	pop	{fp, pc}
   1e58c:	svcvc	0x00ffffff
   1e590:	andhi	r0, r0, r0
   1e594:			; <UNDEFINED> instruction: 0xffff8000
   1e598:	sub	sp, sp, #12
   1e59c:	str	r0, [sp, #4]
   1e5a0:	ldr	r0, [sp, #4]
   1e5a4:	sub	r1, r0, #48	; 0x30
   1e5a8:	cmp	r1, #10
   1e5ac:	str	r0, [sp]
   1e5b0:	bcc	1e5e0 <__assert_fail@plt+0xd508>
   1e5b4:	b	1e5b8 <__assert_fail@plt+0xd4e0>
   1e5b8:	ldr	r0, [sp]
   1e5bc:	sub	r1, r0, #65	; 0x41
   1e5c0:	cmp	r1, #26
   1e5c4:	bcc	1e5e0 <__assert_fail@plt+0xd508>
   1e5c8:	b	1e5cc <__assert_fail@plt+0xd4f4>
   1e5cc:	ldr	r0, [sp]
   1e5d0:	sub	r1, r0, #97	; 0x61
   1e5d4:	cmp	r1, #25
   1e5d8:	bhi	1e5f0 <__assert_fail@plt+0xd518>
   1e5dc:	b	1e5e0 <__assert_fail@plt+0xd508>
   1e5e0:	movw	r0, #1
   1e5e4:	and	r0, r0, #1
   1e5e8:	strb	r0, [sp, #11]
   1e5ec:	b	1e5fc <__assert_fail@plt+0xd524>
   1e5f0:	movw	r0, #0
   1e5f4:	and	r0, r0, #1
   1e5f8:	strb	r0, [sp, #11]
   1e5fc:	ldrb	r0, [sp, #11]
   1e600:	and	r0, r0, #1
   1e604:	add	sp, sp, #12
   1e608:	bx	lr
   1e60c:	sub	sp, sp, #12
   1e610:	str	r0, [sp, #4]
   1e614:	ldr	r0, [sp, #4]
   1e618:	sub	r1, r0, #65	; 0x41
   1e61c:	cmp	r1, #26
   1e620:	str	r0, [sp]
   1e624:	bcc	1e640 <__assert_fail@plt+0xd568>
   1e628:	b	1e62c <__assert_fail@plt+0xd554>
   1e62c:	ldr	r0, [sp]
   1e630:	sub	r1, r0, #97	; 0x61
   1e634:	cmp	r1, #25
   1e638:	bhi	1e650 <__assert_fail@plt+0xd578>
   1e63c:	b	1e640 <__assert_fail@plt+0xd568>
   1e640:	movw	r0, #1
   1e644:	and	r0, r0, #1
   1e648:	strb	r0, [sp, #11]
   1e64c:	b	1e65c <__assert_fail@plt+0xd584>
   1e650:	movw	r0, #0
   1e654:	and	r0, r0, #1
   1e658:	strb	r0, [sp, #11]
   1e65c:	ldrb	r0, [sp, #11]
   1e660:	and	r0, r0, #1
   1e664:	add	sp, sp, #12
   1e668:	bx	lr
   1e66c:	sub	sp, sp, #8
   1e670:	str	r0, [sp]
   1e674:	ldr	r0, [sp]
   1e678:	cmp	r0, #127	; 0x7f
   1e67c:	bhi	1e694 <__assert_fail@plt+0xd5bc>
   1e680:	b	1e684 <__assert_fail@plt+0xd5ac>
   1e684:	movw	r0, #1
   1e688:	and	r0, r0, #1
   1e68c:	strb	r0, [sp, #7]
   1e690:	b	1e6a0 <__assert_fail@plt+0xd5c8>
   1e694:	movw	r0, #0
   1e698:	and	r0, r0, #1
   1e69c:	strb	r0, [sp, #7]
   1e6a0:	ldrb	r0, [sp, #7]
   1e6a4:	and	r0, r0, #1
   1e6a8:	add	sp, sp, #8
   1e6ac:	bx	lr
   1e6b0:	sub	sp, sp, #8
   1e6b4:	str	r0, [sp, #4]
   1e6b8:	ldr	r0, [sp, #4]
   1e6bc:	cmp	r0, #32
   1e6c0:	movw	r0, #1
   1e6c4:	str	r0, [sp]
   1e6c8:	beq	1e6e0 <__assert_fail@plt+0xd608>
   1e6cc:	ldr	r0, [sp, #4]
   1e6d0:	cmp	r0, #9
   1e6d4:	movw	r0, #0
   1e6d8:	moveq	r0, #1
   1e6dc:	str	r0, [sp]
   1e6e0:	ldr	r0, [sp]
   1e6e4:	and	r0, r0, #1
   1e6e8:	add	sp, sp, #8
   1e6ec:	bx	lr
   1e6f0:	sub	sp, sp, #12
   1e6f4:	str	r0, [sp, #4]
   1e6f8:	ldr	r0, [sp, #4]
   1e6fc:	cmp	r0, #32
   1e700:	str	r0, [sp]
   1e704:	bcc	1e71c <__assert_fail@plt+0xd644>
   1e708:	b	1e70c <__assert_fail@plt+0xd634>
   1e70c:	ldr	r0, [sp]
   1e710:	cmp	r0, #127	; 0x7f
   1e714:	bne	1e72c <__assert_fail@plt+0xd654>
   1e718:	b	1e71c <__assert_fail@plt+0xd644>
   1e71c:	movw	r0, #1
   1e720:	and	r0, r0, #1
   1e724:	strb	r0, [sp, #11]
   1e728:	b	1e738 <__assert_fail@plt+0xd660>
   1e72c:	movw	r0, #0
   1e730:	and	r0, r0, #1
   1e734:	strb	r0, [sp, #11]
   1e738:	ldrb	r0, [sp, #11]
   1e73c:	and	r0, r0, #1
   1e740:	add	sp, sp, #12
   1e744:	bx	lr
   1e748:	sub	sp, sp, #8
   1e74c:	str	r0, [sp]
   1e750:	ldr	r0, [sp]
   1e754:	sub	r0, r0, #48	; 0x30
   1e758:	cmp	r0, #9
   1e75c:	bhi	1e774 <__assert_fail@plt+0xd69c>
   1e760:	b	1e764 <__assert_fail@plt+0xd68c>
   1e764:	movw	r0, #1
   1e768:	and	r0, r0, #1
   1e76c:	strb	r0, [sp, #7]
   1e770:	b	1e780 <__assert_fail@plt+0xd6a8>
   1e774:	movw	r0, #0
   1e778:	and	r0, r0, #1
   1e77c:	strb	r0, [sp, #7]
   1e780:	ldrb	r0, [sp, #7]
   1e784:	and	r0, r0, #1
   1e788:	add	sp, sp, #8
   1e78c:	bx	lr
   1e790:	sub	sp, sp, #8
   1e794:	str	r0, [sp]
   1e798:	ldr	r0, [sp]
   1e79c:	sub	r0, r0, #33	; 0x21
   1e7a0:	cmp	r0, #93	; 0x5d
   1e7a4:	bhi	1e7bc <__assert_fail@plt+0xd6e4>
   1e7a8:	b	1e7ac <__assert_fail@plt+0xd6d4>
   1e7ac:	movw	r0, #1
   1e7b0:	and	r0, r0, #1
   1e7b4:	strb	r0, [sp, #7]
   1e7b8:	b	1e7c8 <__assert_fail@plt+0xd6f0>
   1e7bc:	movw	r0, #0
   1e7c0:	and	r0, r0, #1
   1e7c4:	strb	r0, [sp, #7]
   1e7c8:	ldrb	r0, [sp, #7]
   1e7cc:	and	r0, r0, #1
   1e7d0:	add	sp, sp, #8
   1e7d4:	bx	lr
   1e7d8:	sub	sp, sp, #8
   1e7dc:	str	r0, [sp]
   1e7e0:	ldr	r0, [sp]
   1e7e4:	sub	r0, r0, #97	; 0x61
   1e7e8:	cmp	r0, #25
   1e7ec:	bhi	1e804 <__assert_fail@plt+0xd72c>
   1e7f0:	b	1e7f4 <__assert_fail@plt+0xd71c>
   1e7f4:	movw	r0, #1
   1e7f8:	and	r0, r0, #1
   1e7fc:	strb	r0, [sp, #7]
   1e800:	b	1e810 <__assert_fail@plt+0xd738>
   1e804:	movw	r0, #0
   1e808:	and	r0, r0, #1
   1e80c:	strb	r0, [sp, #7]
   1e810:	ldrb	r0, [sp, #7]
   1e814:	and	r0, r0, #1
   1e818:	add	sp, sp, #8
   1e81c:	bx	lr
   1e820:	sub	sp, sp, #8
   1e824:	str	r0, [sp]
   1e828:	ldr	r0, [sp]
   1e82c:	sub	r0, r0, #32
   1e830:	cmp	r0, #94	; 0x5e
   1e834:	bhi	1e84c <__assert_fail@plt+0xd774>
   1e838:	b	1e83c <__assert_fail@plt+0xd764>
   1e83c:	movw	r0, #1
   1e840:	and	r0, r0, #1
   1e844:	strb	r0, [sp, #7]
   1e848:	b	1e858 <__assert_fail@plt+0xd780>
   1e84c:	movw	r0, #0
   1e850:	and	r0, r0, #1
   1e854:	strb	r0, [sp, #7]
   1e858:	ldrb	r0, [sp, #7]
   1e85c:	and	r0, r0, #1
   1e860:	add	sp, sp, #8
   1e864:	bx	lr
   1e868:	sub	sp, sp, #12
   1e86c:	str	r0, [sp, #4]
   1e870:	ldr	r0, [sp, #4]
   1e874:	sub	r0, r0, #33	; 0x21
   1e878:	cmp	r0, #93	; 0x5d
   1e87c:	str	r0, [sp]
   1e880:	bhi	1ea1c <__assert_fail@plt+0xd944>
   1e884:	add	r0, pc, #8
   1e888:	ldr	r1, [sp]
   1e88c:	ldr	r0, [r0, r1, lsl #2]
   1e890:	mov	pc, r0
   1e894:	andeq	lr, r1, ip, lsl #20
   1e898:	andeq	lr, r1, ip, lsl #20
   1e89c:	andeq	lr, r1, ip, lsl #20
   1e8a0:	andeq	lr, r1, ip, lsl #20
   1e8a4:	andeq	lr, r1, ip, lsl #20
   1e8a8:	andeq	lr, r1, ip, lsl #20
   1e8ac:	andeq	lr, r1, ip, lsl #20
   1e8b0:	andeq	lr, r1, ip, lsl #20
   1e8b4:	andeq	lr, r1, ip, lsl #20
   1e8b8:	andeq	lr, r1, ip, lsl #20
   1e8bc:	andeq	lr, r1, ip, lsl #20
   1e8c0:	andeq	lr, r1, ip, lsl #20
   1e8c4:	andeq	lr, r1, ip, lsl #20
   1e8c8:	andeq	lr, r1, ip, lsl #20
   1e8cc:	andeq	lr, r1, ip, lsl #20
   1e8d0:	andeq	lr, r1, ip, lsl sl
   1e8d4:	andeq	lr, r1, ip, lsl sl
   1e8d8:	andeq	lr, r1, ip, lsl sl
   1e8dc:	andeq	lr, r1, ip, lsl sl
   1e8e0:	andeq	lr, r1, ip, lsl sl
   1e8e4:	andeq	lr, r1, ip, lsl sl
   1e8e8:	andeq	lr, r1, ip, lsl sl
   1e8ec:	andeq	lr, r1, ip, lsl sl
   1e8f0:	andeq	lr, r1, ip, lsl sl
   1e8f4:	andeq	lr, r1, ip, lsl sl
   1e8f8:	andeq	lr, r1, ip, lsl #20
   1e8fc:	andeq	lr, r1, ip, lsl #20
   1e900:	andeq	lr, r1, ip, lsl #20
   1e904:	andeq	lr, r1, ip, lsl #20
   1e908:	andeq	lr, r1, ip, lsl #20
   1e90c:	andeq	lr, r1, ip, lsl #20
   1e910:	andeq	lr, r1, ip, lsl #20
   1e914:	andeq	lr, r1, ip, lsl sl
   1e918:	andeq	lr, r1, ip, lsl sl
   1e91c:	andeq	lr, r1, ip, lsl sl
   1e920:	andeq	lr, r1, ip, lsl sl
   1e924:	andeq	lr, r1, ip, lsl sl
   1e928:	andeq	lr, r1, ip, lsl sl
   1e92c:	andeq	lr, r1, ip, lsl sl
   1e930:	andeq	lr, r1, ip, lsl sl
   1e934:	andeq	lr, r1, ip, lsl sl
   1e938:	andeq	lr, r1, ip, lsl sl
   1e93c:	andeq	lr, r1, ip, lsl sl
   1e940:	andeq	lr, r1, ip, lsl sl
   1e944:	andeq	lr, r1, ip, lsl sl
   1e948:	andeq	lr, r1, ip, lsl sl
   1e94c:	andeq	lr, r1, ip, lsl sl
   1e950:	andeq	lr, r1, ip, lsl sl
   1e954:	andeq	lr, r1, ip, lsl sl
   1e958:	andeq	lr, r1, ip, lsl sl
   1e95c:	andeq	lr, r1, ip, lsl sl
   1e960:	andeq	lr, r1, ip, lsl sl
   1e964:	andeq	lr, r1, ip, lsl sl
   1e968:	andeq	lr, r1, ip, lsl sl
   1e96c:	andeq	lr, r1, ip, lsl sl
   1e970:	andeq	lr, r1, ip, lsl sl
   1e974:	andeq	lr, r1, ip, lsl sl
   1e978:	andeq	lr, r1, ip, lsl sl
   1e97c:	andeq	lr, r1, ip, lsl #20
   1e980:	andeq	lr, r1, ip, lsl #20
   1e984:	andeq	lr, r1, ip, lsl #20
   1e988:	andeq	lr, r1, ip, lsl #20
   1e98c:	andeq	lr, r1, ip, lsl #20
   1e990:	andeq	lr, r1, ip, lsl #20
   1e994:	andeq	lr, r1, ip, lsl sl
   1e998:	andeq	lr, r1, ip, lsl sl
   1e99c:	andeq	lr, r1, ip, lsl sl
   1e9a0:	andeq	lr, r1, ip, lsl sl
   1e9a4:	andeq	lr, r1, ip, lsl sl
   1e9a8:	andeq	lr, r1, ip, lsl sl
   1e9ac:	andeq	lr, r1, ip, lsl sl
   1e9b0:	andeq	lr, r1, ip, lsl sl
   1e9b4:	andeq	lr, r1, ip, lsl sl
   1e9b8:	andeq	lr, r1, ip, lsl sl
   1e9bc:	andeq	lr, r1, ip, lsl sl
   1e9c0:	andeq	lr, r1, ip, lsl sl
   1e9c4:	andeq	lr, r1, ip, lsl sl
   1e9c8:	andeq	lr, r1, ip, lsl sl
   1e9cc:	andeq	lr, r1, ip, lsl sl
   1e9d0:	andeq	lr, r1, ip, lsl sl
   1e9d4:	andeq	lr, r1, ip, lsl sl
   1e9d8:	andeq	lr, r1, ip, lsl sl
   1e9dc:	andeq	lr, r1, ip, lsl sl
   1e9e0:	andeq	lr, r1, ip, lsl sl
   1e9e4:	andeq	lr, r1, ip, lsl sl
   1e9e8:	andeq	lr, r1, ip, lsl sl
   1e9ec:	andeq	lr, r1, ip, lsl sl
   1e9f0:	andeq	lr, r1, ip, lsl sl
   1e9f4:	andeq	lr, r1, ip, lsl sl
   1e9f8:	andeq	lr, r1, ip, lsl sl
   1e9fc:	andeq	lr, r1, ip, lsl #20
   1ea00:	andeq	lr, r1, ip, lsl #20
   1ea04:	andeq	lr, r1, ip, lsl #20
   1ea08:	andeq	lr, r1, ip, lsl #20
   1ea0c:	movw	r0, #1
   1ea10:	and	r0, r0, #1
   1ea14:	strb	r0, [sp, #11]
   1ea18:	b	1ea28 <__assert_fail@plt+0xd950>
   1ea1c:	movw	r0, #0
   1ea20:	and	r0, r0, #1
   1ea24:	strb	r0, [sp, #11]
   1ea28:	ldrb	r0, [sp, #11]
   1ea2c:	and	r0, r0, #1
   1ea30:	add	sp, sp, #12
   1ea34:	bx	lr
   1ea38:	sub	sp, sp, #12
   1ea3c:	str	r0, [sp, #4]
   1ea40:	ldr	r0, [sp, #4]
   1ea44:	sub	r1, r0, #9
   1ea48:	cmp	r1, #5
   1ea4c:	str	r0, [sp]
   1ea50:	bcc	1ea68 <__assert_fail@plt+0xd990>
   1ea54:	b	1ea58 <__assert_fail@plt+0xd980>
   1ea58:	ldr	r0, [sp]
   1ea5c:	cmp	r0, #32
   1ea60:	bne	1ea78 <__assert_fail@plt+0xd9a0>
   1ea64:	b	1ea68 <__assert_fail@plt+0xd990>
   1ea68:	movw	r0, #1
   1ea6c:	and	r0, r0, #1
   1ea70:	strb	r0, [sp, #11]
   1ea74:	b	1ea84 <__assert_fail@plt+0xd9ac>
   1ea78:	movw	r0, #0
   1ea7c:	and	r0, r0, #1
   1ea80:	strb	r0, [sp, #11]
   1ea84:	ldrb	r0, [sp, #11]
   1ea88:	and	r0, r0, #1
   1ea8c:	add	sp, sp, #12
   1ea90:	bx	lr
   1ea94:	sub	sp, sp, #8
   1ea98:	str	r0, [sp]
   1ea9c:	ldr	r0, [sp]
   1eaa0:	sub	r0, r0, #65	; 0x41
   1eaa4:	cmp	r0, #25
   1eaa8:	bhi	1eac0 <__assert_fail@plt+0xd9e8>
   1eaac:	b	1eab0 <__assert_fail@plt+0xd9d8>
   1eab0:	movw	r0, #1
   1eab4:	and	r0, r0, #1
   1eab8:	strb	r0, [sp, #7]
   1eabc:	b	1eacc <__assert_fail@plt+0xd9f4>
   1eac0:	movw	r0, #0
   1eac4:	and	r0, r0, #1
   1eac8:	strb	r0, [sp, #7]
   1eacc:	ldrb	r0, [sp, #7]
   1ead0:	and	r0, r0, #1
   1ead4:	add	sp, sp, #8
   1ead8:	bx	lr
   1eadc:	sub	sp, sp, #12
   1eae0:	str	r0, [sp, #4]
   1eae4:	ldr	r0, [sp, #4]
   1eae8:	sub	r1, r0, #48	; 0x30
   1eaec:	cmp	r1, #10
   1eaf0:	str	r0, [sp]
   1eaf4:	bcc	1eb24 <__assert_fail@plt+0xda4c>
   1eaf8:	b	1eafc <__assert_fail@plt+0xda24>
   1eafc:	ldr	r0, [sp]
   1eb00:	sub	r1, r0, #65	; 0x41
   1eb04:	cmp	r1, #6
   1eb08:	bcc	1eb24 <__assert_fail@plt+0xda4c>
   1eb0c:	b	1eb10 <__assert_fail@plt+0xda38>
   1eb10:	ldr	r0, [sp]
   1eb14:	sub	r1, r0, #97	; 0x61
   1eb18:	cmp	r1, #5
   1eb1c:	bhi	1eb34 <__assert_fail@plt+0xda5c>
   1eb20:	b	1eb24 <__assert_fail@plt+0xda4c>
   1eb24:	movw	r0, #1
   1eb28:	and	r0, r0, #1
   1eb2c:	strb	r0, [sp, #11]
   1eb30:	b	1eb40 <__assert_fail@plt+0xda68>
   1eb34:	movw	r0, #0
   1eb38:	and	r0, r0, #1
   1eb3c:	strb	r0, [sp, #11]
   1eb40:	ldrb	r0, [sp, #11]
   1eb44:	and	r0, r0, #1
   1eb48:	add	sp, sp, #12
   1eb4c:	bx	lr
   1eb50:	sub	sp, sp, #8
   1eb54:	str	r0, [sp]
   1eb58:	ldr	r0, [sp]
   1eb5c:	sub	r0, r0, #65	; 0x41
   1eb60:	cmp	r0, #25
   1eb64:	bhi	1eb80 <__assert_fail@plt+0xdaa8>
   1eb68:	b	1eb6c <__assert_fail@plt+0xda94>
   1eb6c:	ldr	r0, [sp]
   1eb70:	sub	r0, r0, #65	; 0x41
   1eb74:	add	r0, r0, #97	; 0x61
   1eb78:	str	r0, [sp, #4]
   1eb7c:	b	1eb88 <__assert_fail@plt+0xdab0>
   1eb80:	ldr	r0, [sp]
   1eb84:	str	r0, [sp, #4]
   1eb88:	ldr	r0, [sp, #4]
   1eb8c:	add	sp, sp, #8
   1eb90:	bx	lr
   1eb94:	sub	sp, sp, #8
   1eb98:	str	r0, [sp]
   1eb9c:	ldr	r0, [sp]
   1eba0:	sub	r0, r0, #97	; 0x61
   1eba4:	cmp	r0, #25
   1eba8:	bhi	1ebc4 <__assert_fail@plt+0xdaec>
   1ebac:	b	1ebb0 <__assert_fail@plt+0xdad8>
   1ebb0:	ldr	r0, [sp]
   1ebb4:	sub	r0, r0, #97	; 0x61
   1ebb8:	add	r0, r0, #65	; 0x41
   1ebbc:	str	r0, [sp, #4]
   1ebc0:	b	1ebcc <__assert_fail@plt+0xdaf4>
   1ebc4:	ldr	r0, [sp]
   1ebc8:	str	r0, [sp, #4]
   1ebcc:	ldr	r0, [sp, #4]
   1ebd0:	add	sp, sp, #8
   1ebd4:	bx	lr
   1ebd8:	push	{r4, r5, fp, lr}
   1ebdc:	add	fp, sp, #8
   1ebe0:	sub	sp, sp, #272	; 0x110
   1ebe4:	add	r1, sp, #7
   1ebe8:	str	r0, [fp, #-16]
   1ebec:	ldr	r0, [fp, #-16]
   1ebf0:	movw	r2, #257	; 0x101
   1ebf4:	bl	1ec74 <__assert_fail@plt+0xdb9c>
   1ebf8:	cmp	r0, #0
   1ebfc:	beq	1ec10 <__assert_fail@plt+0xdb38>
   1ec00:	movw	r0, #0
   1ec04:	and	r0, r0, #1
   1ec08:	strb	r0, [fp, #-9]
   1ec0c:	b	1ec64 <__assert_fail@plt+0xdb8c>
   1ec10:	add	r0, sp, #7
   1ec14:	movw	r1, #65152	; 0xfe80
   1ec18:	movt	r1, #1
   1ec1c:	bl	10e74 <strcmp@plt>
   1ec20:	cmp	r0, #0
   1ec24:	movw	r0, #1
   1ec28:	str	r0, [sp]
   1ec2c:	beq	1ec50 <__assert_fail@plt+0xdb78>
   1ec30:	add	r0, sp, #7
   1ec34:	movw	r1, #65154	; 0xfe82
   1ec38:	movt	r1, #1
   1ec3c:	bl	10e74 <strcmp@plt>
   1ec40:	cmp	r0, #0
   1ec44:	movw	r0, #0
   1ec48:	moveq	r0, #1
   1ec4c:	str	r0, [sp]
   1ec50:	ldr	r0, [sp]
   1ec54:	mvn	r1, #0
   1ec58:	eor	r0, r0, r1
   1ec5c:	and	r0, r0, #1
   1ec60:	strb	r0, [fp, #-9]
   1ec64:	ldrb	r0, [fp, #-9]
   1ec68:	and	r0, r0, #1
   1ec6c:	sub	sp, fp, #8
   1ec70:	pop	{r4, r5, fp, pc}
   1ec74:	push	{fp, lr}
   1ec78:	mov	fp, sp
   1ec7c:	sub	sp, sp, #16
   1ec80:	str	r0, [fp, #-4]
   1ec84:	str	r1, [sp, #8]
   1ec88:	str	r2, [sp, #4]
   1ec8c:	ldr	r0, [fp, #-4]
   1ec90:	ldr	r1, [sp, #8]
   1ec94:	ldr	r2, [sp, #4]
   1ec98:	bl	1eca4 <__assert_fail@plt+0xdbcc>
   1ec9c:	mov	sp, fp
   1eca0:	pop	{fp, pc}
   1eca4:	push	{fp, lr}
   1eca8:	mov	fp, sp
   1ecac:	sub	sp, sp, #24
   1ecb0:	str	r0, [fp, #-8]
   1ecb4:	str	r1, [sp, #12]
   1ecb8:	str	r2, [sp, #8]
   1ecbc:	ldr	r0, [fp, #-8]
   1ecc0:	bl	1eda4 <__assert_fail@plt+0xdccc>
   1ecc4:	str	r0, [sp, #4]
   1ecc8:	ldr	r0, [sp, #4]
   1eccc:	movw	r1, #0
   1ecd0:	cmp	r0, r1
   1ecd4:	bne	1ecfc <__assert_fail@plt+0xdc24>
   1ecd8:	ldr	r0, [sp, #8]
   1ecdc:	cmp	r0, #0
   1ece0:	bls	1ecf0 <__assert_fail@plt+0xdc18>
   1ece4:	ldr	r0, [sp, #12]
   1ece8:	movw	r1, #0
   1ecec:	strb	r1, [r0]
   1ecf0:	movw	r0, #22
   1ecf4:	str	r0, [fp, #-4]
   1ecf8:	b	1ed78 <__assert_fail@plt+0xdca0>
   1ecfc:	ldr	r0, [sp, #4]
   1ed00:	bl	10fdc <strlen@plt>
   1ed04:	str	r0, [sp]
   1ed08:	ldr	r0, [sp]
   1ed0c:	ldr	lr, [sp, #8]
   1ed10:	cmp	r0, lr
   1ed14:	bcs	1ed38 <__assert_fail@plt+0xdc60>
   1ed18:	ldr	r0, [sp, #12]
   1ed1c:	ldr	r1, [sp, #4]
   1ed20:	ldr	r2, [sp]
   1ed24:	add	r2, r2, #1
   1ed28:	bl	10ebc <memcpy@plt>
   1ed2c:	movw	r0, #0
   1ed30:	str	r0, [fp, #-4]
   1ed34:	b	1ed78 <__assert_fail@plt+0xdca0>
   1ed38:	ldr	r0, [sp, #8]
   1ed3c:	cmp	r0, #0
   1ed40:	bls	1ed70 <__assert_fail@plt+0xdc98>
   1ed44:	ldr	r0, [sp, #12]
   1ed48:	ldr	r1, [sp, #4]
   1ed4c:	ldr	r2, [sp, #8]
   1ed50:	sub	r2, r2, #1
   1ed54:	bl	10ebc <memcpy@plt>
   1ed58:	ldr	r0, [sp, #12]
   1ed5c:	ldr	r1, [sp, #8]
   1ed60:	sub	r1, r1, #1
   1ed64:	add	r0, r0, r1
   1ed68:	movw	r1, #0
   1ed6c:	strb	r1, [r0]
   1ed70:	movw	r0, #34	; 0x22
   1ed74:	str	r0, [fp, #-4]
   1ed78:	ldr	r0, [fp, #-4]
   1ed7c:	mov	sp, fp
   1ed80:	pop	{fp, pc}
   1ed84:	push	{fp, lr}
   1ed88:	mov	fp, sp
   1ed8c:	sub	sp, sp, #8
   1ed90:	str	r0, [sp, #4]
   1ed94:	ldr	r0, [sp, #4]
   1ed98:	bl	1eda4 <__assert_fail@plt+0xdccc>
   1ed9c:	mov	sp, fp
   1eda0:	pop	{fp, pc}
   1eda4:	push	{fp, lr}
   1eda8:	mov	fp, sp
   1edac:	sub	sp, sp, #8
   1edb0:	str	r0, [sp, #4]
   1edb4:	ldr	r0, [sp, #4]
   1edb8:	movw	r1, #0
   1edbc:	bl	1106c <setlocale@plt>
   1edc0:	str	r0, [sp]
   1edc4:	ldr	r0, [sp]
   1edc8:	mov	sp, fp
   1edcc:	pop	{fp, pc}
   1edd0:	cmp	r3, #0
   1edd4:	cmpeq	r2, #0
   1edd8:	bne	1edfc <__assert_fail@plt+0xdd24>
   1eddc:	cmp	r1, #0
   1ede0:	movlt	r1, #-2147483648	; 0x80000000
   1ede4:	movlt	r0, #0
   1ede8:	blt	1edf8 <__assert_fail@plt+0xdd20>
   1edec:	cmpeq	r0, #0
   1edf0:	mvnne	r1, #-2147483648	; 0x80000000
   1edf4:	mvnne	r0, #0
   1edf8:	b	1eee0 <__assert_fail@plt+0xde08>
   1edfc:	sub	sp, sp, #8
   1ee00:	push	{sp, lr}
   1ee04:	cmp	r1, #0
   1ee08:	blt	1ee28 <__assert_fail@plt+0xdd50>
   1ee0c:	cmp	r3, #0
   1ee10:	blt	1ee5c <__assert_fail@plt+0xdd84>
   1ee14:	bl	1eef0 <__assert_fail@plt+0xde18>
   1ee18:	ldr	lr, [sp, #4]
   1ee1c:	add	sp, sp, #8
   1ee20:	pop	{r2, r3}
   1ee24:	bx	lr
   1ee28:	rsbs	r0, r0, #0
   1ee2c:	sbc	r1, r1, r1, lsl #1
   1ee30:	cmp	r3, #0
   1ee34:	blt	1ee80 <__assert_fail@plt+0xdda8>
   1ee38:	bl	1eef0 <__assert_fail@plt+0xde18>
   1ee3c:	ldr	lr, [sp, #4]
   1ee40:	add	sp, sp, #8
   1ee44:	pop	{r2, r3}
   1ee48:	rsbs	r0, r0, #0
   1ee4c:	sbc	r1, r1, r1, lsl #1
   1ee50:	rsbs	r2, r2, #0
   1ee54:	sbc	r3, r3, r3, lsl #1
   1ee58:	bx	lr
   1ee5c:	rsbs	r2, r2, #0
   1ee60:	sbc	r3, r3, r3, lsl #1
   1ee64:	bl	1eef0 <__assert_fail@plt+0xde18>
   1ee68:	ldr	lr, [sp, #4]
   1ee6c:	add	sp, sp, #8
   1ee70:	pop	{r2, r3}
   1ee74:	rsbs	r0, r0, #0
   1ee78:	sbc	r1, r1, r1, lsl #1
   1ee7c:	bx	lr
   1ee80:	rsbs	r2, r2, #0
   1ee84:	sbc	r3, r3, r3, lsl #1
   1ee88:	bl	1eef0 <__assert_fail@plt+0xde18>
   1ee8c:	ldr	lr, [sp, #4]
   1ee90:	add	sp, sp, #8
   1ee94:	pop	{r2, r3}
   1ee98:	rsbs	r2, r2, #0
   1ee9c:	sbc	r3, r3, r3, lsl #1
   1eea0:	bx	lr
   1eea4:	cmp	r3, #0
   1eea8:	cmpeq	r2, #0
   1eeac:	bne	1eec4 <__assert_fail@plt+0xddec>
   1eeb0:	cmp	r1, #0
   1eeb4:	cmpeq	r0, #0
   1eeb8:	mvnne	r1, #0
   1eebc:	mvnne	r0, #0
   1eec0:	b	1eee0 <__assert_fail@plt+0xde08>
   1eec4:	sub	sp, sp, #8
   1eec8:	push	{sp, lr}
   1eecc:	bl	1eef0 <__assert_fail@plt+0xde18>
   1eed0:	ldr	lr, [sp, #4]
   1eed4:	add	sp, sp, #8
   1eed8:	pop	{r2, r3}
   1eedc:	bx	lr
   1eee0:	push	{r1, lr}
   1eee4:	mov	r0, #8
   1eee8:	bl	10e68 <raise@plt>
   1eeec:	pop	{r1, pc}
   1eef0:	cmp	r1, r3
   1eef4:	cmpeq	r0, r2
   1eef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eefc:	mov	r4, r0
   1ef00:	movcc	r0, #0
   1ef04:	mov	r5, r1
   1ef08:	ldr	lr, [sp, #36]	; 0x24
   1ef0c:	movcc	r1, r0
   1ef10:	bcc	1f00c <__assert_fail@plt+0xdf34>
   1ef14:	cmp	r3, #0
   1ef18:	clzeq	ip, r2
   1ef1c:	clzne	ip, r3
   1ef20:	addeq	ip, ip, #32
   1ef24:	cmp	r5, #0
   1ef28:	clzeq	r1, r4
   1ef2c:	addeq	r1, r1, #32
   1ef30:	clzne	r1, r5
   1ef34:	sub	ip, ip, r1
   1ef38:	sub	sl, ip, #32
   1ef3c:	lsl	r9, r3, ip
   1ef40:	rsb	fp, ip, #32
   1ef44:	orr	r9, r9, r2, lsl sl
   1ef48:	orr	r9, r9, r2, lsr fp
   1ef4c:	lsl	r8, r2, ip
   1ef50:	cmp	r5, r9
   1ef54:	cmpeq	r4, r8
   1ef58:	movcc	r0, #0
   1ef5c:	movcc	r1, r0
   1ef60:	bcc	1ef7c <__assert_fail@plt+0xdea4>
   1ef64:	mov	r0, #1
   1ef68:	subs	r4, r4, r8
   1ef6c:	lsl	r1, r0, sl
   1ef70:	orr	r1, r1, r0, lsr fp
   1ef74:	lsl	r0, r0, ip
   1ef78:	sbc	r5, r5, r9
   1ef7c:	cmp	ip, #0
   1ef80:	beq	1f00c <__assert_fail@plt+0xdf34>
   1ef84:	lsr	r6, r8, #1
   1ef88:	orr	r6, r6, r9, lsl #31
   1ef8c:	lsr	r7, r9, #1
   1ef90:	mov	r2, ip
   1ef94:	b	1efb8 <__assert_fail@plt+0xdee0>
   1ef98:	subs	r3, r4, r6
   1ef9c:	sbc	r8, r5, r7
   1efa0:	adds	r3, r3, r3
   1efa4:	adc	r8, r8, r8
   1efa8:	adds	r4, r3, #1
   1efac:	adc	r5, r8, #0
   1efb0:	subs	r2, r2, #1
   1efb4:	beq	1efd4 <__assert_fail@plt+0xdefc>
   1efb8:	cmp	r5, r7
   1efbc:	cmpeq	r4, r6
   1efc0:	bcs	1ef98 <__assert_fail@plt+0xdec0>
   1efc4:	adds	r4, r4, r4
   1efc8:	adc	r5, r5, r5
   1efcc:	subs	r2, r2, #1
   1efd0:	bne	1efb8 <__assert_fail@plt+0xdee0>
   1efd4:	lsr	r3, r4, ip
   1efd8:	orr	r3, r3, r5, lsl fp
   1efdc:	lsr	r2, r5, ip
   1efe0:	orr	r3, r3, r5, lsr sl
   1efe4:	adds	r0, r0, r4
   1efe8:	mov	r4, r3
   1efec:	lsl	r3, r2, ip
   1eff0:	orr	r3, r3, r4, lsl sl
   1eff4:	lsl	ip, r4, ip
   1eff8:	orr	r3, r3, r4, lsr fp
   1effc:	adc	r1, r1, r5
   1f000:	subs	r0, r0, ip
   1f004:	mov	r5, r2
   1f008:	sbc	r1, r1, r3
   1f00c:	cmp	lr, #0
   1f010:	strdne	r4, [lr]
   1f014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f018:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f01c:	mov	r7, r0
   1f020:	ldr	r6, [pc, #72]	; 1f070 <__assert_fail@plt+0xdf98>
   1f024:	ldr	r5, [pc, #72]	; 1f074 <__assert_fail@plt+0xdf9c>
   1f028:	add	r6, pc, r6
   1f02c:	add	r5, pc, r5
   1f030:	sub	r6, r6, r5
   1f034:	mov	r8, r1
   1f038:	mov	r9, r2
   1f03c:	bl	10e30 <calloc@plt-0x20>
   1f040:	asrs	r6, r6, #2
   1f044:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f048:	mov	r4, #0
   1f04c:	add	r4, r4, #1
   1f050:	ldr	r3, [r5], #4
   1f054:	mov	r2, r9
   1f058:	mov	r1, r8
   1f05c:	mov	r0, r7
   1f060:	blx	r3
   1f064:	cmp	r6, r4
   1f068:	bne	1f04c <__assert_fail@plt+0xdf74>
   1f06c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f070:	ldrdeq	r0, [r1], -ip
   1f074:	ldrdeq	r0, [r1], -r4
   1f078:	bx	lr
   1f07c:	ldr	r3, [pc, #12]	; 1f090 <__assert_fail@plt+0xdfb8>
   1f080:	mov	r1, #0
   1f084:	add	r3, pc, r3
   1f088:	ldr	r2, [r3]
   1f08c:	b	11018 <__cxa_atexit@plt>
   1f090:	andeq	r1, r1, r4, rrx
   1f094:	mov	r2, r1
   1f098:	mov	r1, r0
   1f09c:	mov	r0, #3
   1f0a0:	b	10f1c <__fxstat64@plt>

Disassembly of section .fini:

0001f0a4 <.fini>:
   1f0a4:	push	{r3, lr}
   1f0a8:	pop	{r3, pc}
