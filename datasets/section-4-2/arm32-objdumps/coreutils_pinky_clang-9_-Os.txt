
../repos/coreutils/src/pinky:     file format elf32-littlearm


Disassembly of section .init:

00011100 <.init>:
   11100:	push	{r3, lr}
   11104:	bl	11474 <putchar_unlocked@plt+0x48>
   11108:	pop	{r3, pc}

Disassembly of section .plt:

0001110c <calloc@plt-0x14>:
   1110c:	push	{lr}		; (str lr, [sp, #-4]!)
   11110:	ldr	lr, [pc, #4]	; 1111c <calloc@plt-0x4>
   11114:	add	lr, pc, lr
   11118:	ldr	pc, [lr, #8]!
   1111c:	andeq	r5, r1, r4, ror #29

00011120 <calloc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #3812]!	; 0xee4

0001112c <fputs_unlocked@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3804]!	; 0xedc

00011138 <raise@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3796]!	; 0xed4

00011144 <getpwnam@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3788]!	; 0xecc

00011150 <strcmp@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3780]!	; 0xec4

0001115c <fflush@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3772]!	; 0xebc

00011168 <utmpxname@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3764]!	; 0xeb4

00011174 <free@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3756]!	; 0xeac

00011180 <gai_strerror@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3748]!	; 0xea4

0001118c <_exit@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3740]!	; 0xe9c

00011198 <memcpy@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3732]!	; 0xe94

000111a4 <mbsinit@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000111b0 <time@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #86016	; 0x15000
   111b8:	ldr	pc, [ip, #3716]!	; 0xe84

000111bc <fwrite_unlocked@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #86016	; 0x15000
   111c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000111c8 <stpcpy@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #86016	; 0x15000
   111d0:	ldr	pc, [ip, #3700]!	; 0xe74

000111d4 <dcgettext@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #86016	; 0x15000
   111dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000111e0 <strdup@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #86016	; 0x15000
   111e8:	ldr	pc, [ip, #3684]!	; 0xe64

000111ec <setutxent@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #86016	; 0x15000
   111f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000111f8 <realloc@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #86016	; 0x15000
   11200:	ldr	pc, [ip, #3668]!	; 0xe54

00011204 <textdomain@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #86016	; 0x15000
   1120c:	ldr	pc, [ip, #3660]!	; 0xe4c

00011210 <iswprint@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #86016	; 0x15000
   11218:	ldr	pc, [ip, #3652]!	; 0xe44

0001121c <lseek64@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #86016	; 0x15000
   11224:	ldr	pc, [ip, #3644]!	; 0xe3c

00011228 <__ctype_get_mb_cur_max@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #86016	; 0x15000
   11230:	ldr	pc, [ip, #3636]!	; 0xe34

00011234 <__fpending@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #86016	; 0x15000
   1123c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011240 <ferror_unlocked@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #86016	; 0x15000
   11248:	ldr	pc, [ip, #3620]!	; 0xe24

0001124c <mbrtowc@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #86016	; 0x15000
   11254:	ldr	pc, [ip, #3612]!	; 0xe1c

00011258 <error@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #86016	; 0x15000
   11260:	ldr	pc, [ip, #3604]!	; 0xe14

00011264 <malloc@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #86016	; 0x15000
   1126c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011270 <__libc_start_main@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #86016	; 0x15000
   11278:	ldr	pc, [ip, #3588]!	; 0xe04

0001127c <strftime@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #86016	; 0x15000
   11284:	ldr	pc, [ip, #3580]!	; 0xdfc

00011288 <__freading@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #86016	; 0x15000
   11290:	ldr	pc, [ip, #3572]!	; 0xdf4

00011294 <localtime@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3564]!	; 0xdec

000112a0 <__ctype_toupper_loc@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3556]!	; 0xde4

000112ac <__gmon_start__@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3548]!	; 0xddc

000112b8 <getopt_long@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000112c4 <kill@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000112d0 <__ctype_b_loc@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000112dc <exit@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000112e8 <bcmp@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000112f4 <strlen@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3500]!	; 0xdac

00011300 <strchr@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3492]!	; 0xda4

0001130c <__errno_location@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3484]!	; 0xd9c

00011318 <__sprintf_chk@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3476]!	; 0xd94

00011324 <__cxa_atexit@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011330 <memset@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3460]!	; 0xd84

0001133c <strncpy@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3452]!	; 0xd7c

00011348 <__printf_chk@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #86016	; 0x15000
   11350:	ldr	pc, [ip, #3444]!	; 0xd74

00011354 <fileno@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #86016	; 0x15000
   1135c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011360 <__fprintf_chk@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #86016	; 0x15000
   11368:	ldr	pc, [ip, #3428]!	; 0xd64

0001136c <fclose@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #86016	; 0x15000
   11374:	ldr	pc, [ip, #3420]!	; 0xd5c

00011378 <fseeko64@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #86016	; 0x15000
   11380:	ldr	pc, [ip, #3412]!	; 0xd54

00011384 <endutxent@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #86016	; 0x15000
   1138c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011390 <setlocale@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #86016	; 0x15000
   11398:	ldr	pc, [ip, #3396]!	; 0xd44

0001139c <strrchr@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #86016	; 0x15000
   113a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000113a8 <nl_langinfo@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #86016	; 0x15000
   113b0:	ldr	pc, [ip, #3380]!	; 0xd34

000113b4 <fopen64@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #86016	; 0x15000
   113bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000113c0 <freeaddrinfo@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #86016	; 0x15000
   113c8:	ldr	pc, [ip, #3364]!	; 0xd24

000113cc <getaddrinfo@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #86016	; 0x15000
   113d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000113d8 <bindtextdomain@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #86016	; 0x15000
   113e0:	ldr	pc, [ip, #3348]!	; 0xd14

000113e4 <fread_unlocked@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #86016	; 0x15000
   113ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000113f0 <__xstat64@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #86016	; 0x15000
   113f8:	ldr	pc, [ip, #3332]!	; 0xd04

000113fc <fputs@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #86016	; 0x15000
   11404:	ldr	pc, [ip, #3324]!	; 0xcfc

00011408 <strncmp@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #86016	; 0x15000
   11410:	ldr	pc, [ip, #3316]!	; 0xcf4

00011414 <abort@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #86016	; 0x15000
   1141c:	ldr	pc, [ip, #3308]!	; 0xcec

00011420 <getutxent@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #86016	; 0x15000
   11428:	ldr	pc, [ip, #3300]!	; 0xce4

0001142c <putchar_unlocked@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #86016	; 0x15000
   11434:	ldr	pc, [ip, #3292]!	; 0xcdc

Disassembly of section .text:

00011438 <.text>:
   11438:	mov	fp, #0
   1143c:	mov	lr, #0
   11440:	pop	{r1}		; (ldr r1, [sp], #4)
   11444:	mov	r2, sp
   11448:	push	{r2}		; (str r2, [sp, #-4]!)
   1144c:	push	{r0}		; (str r0, [sp, #-4]!)
   11450:	ldr	ip, [pc, #16]	; 11468 <putchar_unlocked@plt+0x3c>
   11454:	push	{ip}		; (str ip, [sp, #-4]!)
   11458:	ldr	r0, [pc, #12]	; 1146c <putchar_unlocked@plt+0x40>
   1145c:	ldr	r3, [pc, #12]	; 11470 <putchar_unlocked@plt+0x44>
   11460:	bl	11270 <__libc_start_main@plt>
   11464:	bl	11414 <abort@plt>
   11468:	andeq	r5, r1, ip, asr r5
   1146c:	muleq	r1, r0, r7
   11470:	strdeq	r5, [r1], -ip
   11474:	ldr	r3, [pc, #20]	; 11490 <putchar_unlocked@plt+0x64>
   11478:	ldr	r2, [pc, #20]	; 11494 <putchar_unlocked@plt+0x68>
   1147c:	add	r3, pc, r3
   11480:	ldr	r2, [r3, r2]
   11484:	cmp	r2, #0
   11488:	bxeq	lr
   1148c:	b	112ac <__gmon_start__@plt>
   11490:	andeq	r5, r1, ip, ror fp
   11494:	andeq	r0, r0, r4, lsl r1
   11498:	ldr	r0, [pc, #24]	; 114b8 <putchar_unlocked@plt+0x8c>
   1149c:	ldr	r3, [pc, #24]	; 114bc <putchar_unlocked@plt+0x90>
   114a0:	cmp	r3, r0
   114a4:	bxeq	lr
   114a8:	ldr	r3, [pc, #16]	; 114c0 <putchar_unlocked@plt+0x94>
   114ac:	cmp	r3, #0
   114b0:	bxeq	lr
   114b4:	bx	r3
   114b8:	andeq	r7, r2, r8, ror #2
   114bc:	andeq	r7, r2, r8, ror #2
   114c0:	andeq	r0, r0, r0
   114c4:	ldr	r0, [pc, #36]	; 114f0 <putchar_unlocked@plt+0xc4>
   114c8:	ldr	r1, [pc, #36]	; 114f4 <putchar_unlocked@plt+0xc8>
   114cc:	sub	r1, r1, r0
   114d0:	asr	r1, r1, #2
   114d4:	add	r1, r1, r1, lsr #31
   114d8:	asrs	r1, r1, #1
   114dc:	bxeq	lr
   114e0:	ldr	r3, [pc, #16]	; 114f8 <putchar_unlocked@plt+0xcc>
   114e4:	cmp	r3, #0
   114e8:	bxeq	lr
   114ec:	bx	r3
   114f0:	andeq	r7, r2, r8, ror #2
   114f4:	andeq	r7, r2, r8, ror #2
   114f8:	andeq	r0, r0, r0
   114fc:	push	{r4, lr}
   11500:	ldr	r4, [pc, #24]	; 11520 <putchar_unlocked@plt+0xf4>
   11504:	ldrb	r3, [r4]
   11508:	cmp	r3, #0
   1150c:	popne	{r4, pc}
   11510:	bl	11498 <putchar_unlocked@plt+0x6c>
   11514:	mov	r3, #1
   11518:	strb	r3, [r4]
   1151c:	pop	{r4, pc}
   11520:	andeq	r7, r2, r0, lsl #3
   11524:	b	114c4 <putchar_unlocked@plt+0x98>
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	sub	sp, sp, #56	; 0x38
   11534:	mov	r8, r0
   11538:	cmp	r0, #0
   1153c:	bne	11750 <putchar_unlocked@plt+0x324>
   11540:	movw	r1, #21947	; 0x55bb
   11544:	mov	r0, #0
   11548:	mov	r2, #5
   1154c:	movt	r1, #1
   11550:	bl	111d4 <dcgettext@plt>
   11554:	mov	r1, r0
   11558:	movw	r0, #29172	; 0x71f4
   1155c:	movt	r0, #2
   11560:	ldr	r2, [r0]
   11564:	mov	r0, #1
   11568:	bl	11348 <__printf_chk@plt>
   1156c:	movw	r1, #21980	; 0x55dc
   11570:	mov	r0, #0
   11574:	mov	r2, #5
   11578:	movt	r1, #1
   1157c:	bl	111d4 <dcgettext@plt>
   11580:	movw	r9, #29052	; 0x717c
   11584:	movt	r9, #2
   11588:	ldr	r1, [r9]
   1158c:	bl	1112c <fputs_unlocked@plt>
   11590:	movw	r1, #22308	; 0x5724
   11594:	mov	r0, #0
   11598:	mov	r2, #5
   1159c:	movt	r1, #1
   115a0:	bl	111d4 <dcgettext@plt>
   115a4:	ldr	r1, [r9]
   115a8:	bl	1112c <fputs_unlocked@plt>
   115ac:	movw	r1, #22617	; 0x5859
   115b0:	mov	r0, #0
   115b4:	mov	r2, #5
   115b8:	movt	r1, #1
   115bc:	bl	111d4 <dcgettext@plt>
   115c0:	ldr	r1, [r9]
   115c4:	bl	1112c <fputs_unlocked@plt>
   115c8:	movw	r1, #22662	; 0x5886
   115cc:	mov	r0, #0
   115d0:	mov	r2, #5
   115d4:	movt	r1, #1
   115d8:	bl	111d4 <dcgettext@plt>
   115dc:	ldr	r1, [r9]
   115e0:	bl	1112c <fputs_unlocked@plt>
   115e4:	movw	r1, #22716	; 0x58bc
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	movt	r1, #1
   115f4:	bl	111d4 <dcgettext@plt>
   115f8:	movw	r2, #22801	; 0x5911
   115fc:	mov	r1, r0
   11600:	mov	r0, #1
   11604:	movt	r2, #1
   11608:	bl	11348 <__printf_chk@plt>
   1160c:	movw	r0, #23616	; 0x5c40
   11610:	mov	r6, sp
   11614:	movt	r0, #1
   11618:	mov	r1, r6
   1161c:	ldm	r0!, {r2, r3, r4, r5}
   11620:	stmia	r1!, {r2, r3, r4, r5}
   11624:	ldm	r0!, {r2, r3, r4, r5, r7}
   11628:	stmia	r1!, {r2, r3, r4, r5, r7}
   1162c:	ldm	r0, {r2, r3, r4, r5, r7}
   11630:	stm	r1, {r2, r3, r4, r5, r7}
   11634:	movw	r1, #22982	; 0x59c6
   11638:	movw	r5, #22815	; 0x591f
   1163c:	movt	r1, #1
   11640:	movt	r5, #1
   11644:	mov	r0, r5
   11648:	bl	11150 <strcmp@plt>
   1164c:	cmp	r0, #0
   11650:	ldrne	r1, [r6, #8]!
   11654:	cmpne	r1, #0
   11658:	bne	11644 <putchar_unlocked@plt+0x218>
   1165c:	movw	r1, #23077	; 0x5a25
   11660:	ldr	r6, [r6, #4]
   11664:	mov	r0, #0
   11668:	mov	r2, #5
   1166c:	movt	r1, #1
   11670:	bl	111d4 <dcgettext@plt>
   11674:	movw	r2, #22855	; 0x5947
   11678:	movw	r3, #23100	; 0x5a3c
   1167c:	mov	r1, r0
   11680:	mov	r0, #1
   11684:	movt	r2, #1
   11688:	movt	r3, #1
   1168c:	bl	11348 <__printf_chk@plt>
   11690:	cmp	r6, #0
   11694:	mov	r0, #5
   11698:	mov	r1, #0
   1169c:	moveq	r6, r5
   116a0:	bl	11390 <setlocale@plt>
   116a4:	cmp	r0, #0
   116a8:	beq	116e0 <putchar_unlocked@plt+0x2b4>
   116ac:	movw	r1, #23140	; 0x5a64
   116b0:	mov	r2, #3
   116b4:	movt	r1, #1
   116b8:	bl	11408 <strncmp@plt>
   116bc:	cmp	r0, #0
   116c0:	beq	116e0 <putchar_unlocked@plt+0x2b4>
   116c4:	movw	r1, #23144	; 0x5a68
   116c8:	mov	r0, #0
   116cc:	mov	r2, #5
   116d0:	movt	r1, #1
   116d4:	bl	111d4 <dcgettext@plt>
   116d8:	ldr	r1, [r9]
   116dc:	bl	1112c <fputs_unlocked@plt>
   116e0:	movw	r1, #23215	; 0x5aaf
   116e4:	mov	r0, #0
   116e8:	mov	r2, #5
   116ec:	movt	r1, #1
   116f0:	bl	111d4 <dcgettext@plt>
   116f4:	movw	r2, #23100	; 0x5a3c
   116f8:	mov	r1, r0
   116fc:	mov	r0, #1
   11700:	mov	r3, r5
   11704:	movt	r2, #1
   11708:	bl	11348 <__printf_chk@plt>
   1170c:	movw	r1, #23242	; 0x5aca
   11710:	mov	r0, #0
   11714:	mov	r2, #5
   11718:	movt	r1, #1
   1171c:	bl	111d4 <dcgettext@plt>
   11720:	mov	r1, r0
   11724:	movw	r0, #23010	; 0x59e2
   11728:	movw	r3, #23292	; 0x5afc
   1172c:	cmp	r6, r5
   11730:	mov	r2, r6
   11734:	movt	r0, #1
   11738:	movt	r3, #1
   1173c:	moveq	r3, r0
   11740:	mov	r0, #1
   11744:	bl	11348 <__printf_chk@plt>
   11748:	mov	r0, r8
   1174c:	bl	112dc <exit@plt>
   11750:	movw	r0, #29048	; 0x7178
   11754:	movw	r1, #21908	; 0x5594
   11758:	mov	r2, #5
   1175c:	movt	r0, #2
   11760:	movt	r1, #1
   11764:	ldr	r5, [r0]
   11768:	mov	r0, #0
   1176c:	bl	111d4 <dcgettext@plt>
   11770:	mov	r2, r0
   11774:	movw	r0, #29172	; 0x71f4
   11778:	mov	r1, #1
   1177c:	movt	r0, #2
   11780:	ldr	r3, [r0]
   11784:	mov	r0, r5
   11788:	bl	11360 <__fprintf_chk@plt>
   1178c:	b	11748 <putchar_unlocked@plt+0x31c>
   11790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11794:	add	fp, sp, #28
   11798:	sub	sp, sp, #28
   1179c:	sub	sp, sp, #1024	; 0x400
   117a0:	mov	r4, r0
   117a4:	ldr	r0, [r1]
   117a8:	mov	r5, r1
   117ac:	bl	12a30 <putchar_unlocked@plt+0x1604>
   117b0:	movw	r1, #23292	; 0x5afc
   117b4:	mov	r0, #6
   117b8:	movt	r1, #1
   117bc:	bl	11390 <setlocale@plt>
   117c0:	movw	r6, #22859	; 0x594b
   117c4:	movw	r1, #22821	; 0x5925
   117c8:	movt	r6, #1
   117cc:	movt	r1, #1
   117d0:	mov	r0, r6
   117d4:	bl	113d8 <bindtextdomain@plt>
   117d8:	mov	r0, r6
   117dc:	bl	11204 <textdomain@plt>
   117e0:	movw	r0, #9820	; 0x265c
   117e4:	movt	r0, #1
   117e8:	bl	15560 <putchar_unlocked@plt+0x4134>
   117ec:	movw	r8, #22845	; 0x593d
   117f0:	movw	sl, #23568	; 0x5c10
   117f4:	movw	r9, #29062	; 0x7186
   117f8:	mov	r6, #0
   117fc:	mov	r7, #1
   11800:	movt	r8, #1
   11804:	movt	sl, #1
   11808:	movt	r9, #2
   1180c:	mov	r0, r4
   11810:	mov	r1, r5
   11814:	mov	r2, r8
   11818:	mov	r3, sl
   1181c:	str	r6, [sp]
   11820:	bl	112b8 <getopt_long@plt>
   11824:	cmp	r0, #97	; 0x61
   11828:	ble	1192c <putchar_unlocked@plt+0x500>
   1182c:	sub	r0, r0, #98	; 0x62
   11830:	cmp	r0, #21
   11834:	bhi	11d8c <putchar_unlocked@plt+0x960>
   11838:	add	r1, pc, #0
   1183c:	ldr	pc, [r1, r0, lsl #2]
   11840:	muleq	r1, r8, r8
   11844:	andeq	r1, r1, ip, lsl #27
   11848:	andeq	r1, r1, ip, lsl #27
   1184c:	andeq	r1, r1, ip, lsl #27
   11850:	ldrdeq	r1, [r1], -r8
   11854:	andeq	r1, r1, ip, lsl #27
   11858:	andeq	r1, r1, r8, lsr #17
   1185c:	andeq	r1, r1, r8, lsl #18
   11860:	andeq	r1, r1, ip, lsl #27
   11864:	andeq	r1, r1, ip, lsl #27
   11868:	andeq	r1, r1, r8, ror #17
   1186c:	andeq	r1, r1, ip, lsl #27
   11870:	andeq	r1, r1, ip, lsl #27
   11874:	andeq	r1, r1, ip, lsl #27
   11878:	strdeq	r1, [r1], -r8
   1187c:			; <UNDEFINED> instruction: 0x000118b8
   11880:	andeq	r1, r1, ip, lsl #27
   11884:	andeq	r1, r1, ip, lsl r9
   11888:	andeq	r1, r1, ip, lsl #27
   1188c:	andeq	r1, r1, ip, lsl #27
   11890:	andeq	r1, r1, ip, lsl #27
   11894:	andeq	r1, r1, r4, lsl r9
   11898:	movw	r0, #29067	; 0x718b
   1189c:	movt	r0, #2
   118a0:	strb	r7, [r0]
   118a4:	b	1180c <putchar_unlocked@plt+0x3e0>
   118a8:	movw	r0, #29065	; 0x7189
   118ac:	movt	r0, #2
   118b0:	strb	r7, [r0]
   118b4:	b	1180c <putchar_unlocked@plt+0x3e0>
   118b8:	movw	r0, #29063	; 0x7187
   118bc:	strb	r7, [r9]
   118c0:	movt	r0, #2
   118c4:	strb	r7, [r0]
   118c8:	movw	r0, #29064	; 0x7188
   118cc:	movt	r0, #2
   118d0:	strb	r7, [r0]
   118d4:	b	1180c <putchar_unlocked@plt+0x3e0>
   118d8:	movw	r0, #29061	; 0x7185
   118dc:	movt	r0, #2
   118e0:	strb	r7, [r0]
   118e4:	b	1180c <putchar_unlocked@plt+0x3e0>
   118e8:	movw	r0, #29060	; 0x7184
   118ec:	movt	r0, #2
   118f0:	strb	r7, [r0]
   118f4:	b	1180c <putchar_unlocked@plt+0x3e0>
   118f8:	movw	r0, #29066	; 0x718a
   118fc:	movt	r0, #2
   11900:	strb	r7, [r0]
   11904:	b	1180c <putchar_unlocked@plt+0x3e0>
   11908:	movw	r0, #29063	; 0x7187
   1190c:	movt	r0, #2
   11910:	strb	r7, [r0]
   11914:	strb	r7, [r9]
   11918:	b	1180c <putchar_unlocked@plt+0x3e0>
   1191c:	movw	r0, #29060	; 0x7184
   11920:	movt	r0, #2
   11924:	strb	r6, [r0]
   11928:	b	1180c <putchar_unlocked@plt+0x3e0>
   1192c:	cmn	r0, #1
   11930:	bne	11cf4 <putchar_unlocked@plt+0x8c8>
   11934:	movw	r0, #29040	; 0x7170
   11938:	movw	r1, #29060	; 0x7184
   1193c:	movt	r0, #2
   11940:	movt	r1, #2
   11944:	ldr	r0, [r0]
   11948:	ldrb	r1, [r1]
   1194c:	sub	sl, r4, r0
   11950:	cmp	r1, #1
   11954:	cmpeq	sl, #0
   11958:	beq	11d68 <putchar_unlocked@plt+0x93c>
   1195c:	add	r0, r5, r0, lsl #2
   11960:	cmp	r1, #0
   11964:	str	r0, [sp, #20]
   11968:	beq	11d94 <putchar_unlocked@plt+0x968>
   1196c:	cmp	sl, #1
   11970:	blt	11ce8 <putchar_unlocked@plt+0x8bc>
   11974:	movw	r7, #23718	; 0x5ca6
   11978:	movw	r5, #29052	; 0x717c
   1197c:	add	r9, sp, #24
   11980:	mov	r4, #0
   11984:	str	sl, [sp, #16]
   11988:	movt	r7, #1
   1198c:	movt	r5, #2
   11990:	ldr	r0, [sp, #20]
   11994:	ldr	r6, [r0, r4, lsl #2]
   11998:	mov	r0, r6
   1199c:	bl	11144 <getpwnam@plt>
   119a0:	movw	r1, #23473	; 0x5bb1
   119a4:	mov	r8, r0
   119a8:	mov	r0, #0
   119ac:	mov	r2, #5
   119b0:	movt	r1, #1
   119b4:	bl	111d4 <dcgettext@plt>
   119b8:	mov	r1, r0
   119bc:	mov	r0, #1
   119c0:	bl	11348 <__printf_chk@plt>
   119c4:	movw	r1, #23486	; 0x5bbe
   119c8:	mov	r0, #1
   119cc:	mov	r2, r6
   119d0:	movt	r1, #1
   119d4:	bl	11348 <__printf_chk@plt>
   119d8:	movw	r1, #23492	; 0x5bc4
   119dc:	mov	r0, #0
   119e0:	mov	r2, #5
   119e4:	movt	r1, #1
   119e8:	bl	111d4 <dcgettext@plt>
   119ec:	mov	r1, r0
   119f0:	mov	r0, #1
   119f4:	bl	11348 <__printf_chk@plt>
   119f8:	cmp	r8, #0
   119fc:	beq	11cb8 <putchar_unlocked@plt+0x88c>
   11a00:	ldr	r6, [r8, #16]
   11a04:	mov	r1, #44	; 0x2c
   11a08:	mov	r0, r6
   11a0c:	bl	11300 <strchr@plt>
   11a10:	cmp	r0, #0
   11a14:	movne	r1, #0
   11a18:	strbne	r1, [r0]
   11a1c:	ldrne	r6, [r8, #16]
   11a20:	ldr	r1, [r8]
   11a24:	mov	r0, r6
   11a28:	bl	12480 <putchar_unlocked@plt+0x1054>
   11a2c:	mov	r6, r0
   11a30:	mov	r0, #1
   11a34:	mov	r1, r7
   11a38:	mov	r2, r6
   11a3c:	bl	11348 <__printf_chk@plt>
   11a40:	mov	r0, r6
   11a44:	bl	1283c <putchar_unlocked@plt+0x1410>
   11a48:	mov	r0, #10
   11a4c:	bl	1142c <putchar_unlocked@plt>
   11a50:	movw	r0, #29067	; 0x718b
   11a54:	movt	r0, #2
   11a58:	ldrb	r0, [r0]
   11a5c:	cmp	r0, #0
   11a60:	bne	11ad0 <putchar_unlocked@plt+0x6a4>
   11a64:	movw	r1, #23512	; 0x5bd8
   11a68:	mov	r0, #0
   11a6c:	mov	r2, #5
   11a70:	movt	r1, #1
   11a74:	bl	111d4 <dcgettext@plt>
   11a78:	mov	r1, r0
   11a7c:	mov	r0, #1
   11a80:	bl	11348 <__printf_chk@plt>
   11a84:	ldr	r2, [r8, #20]
   11a88:	movw	r1, #23524	; 0x5be4
   11a8c:	mov	r0, #1
   11a90:	movt	r1, #1
   11a94:	bl	11348 <__printf_chk@plt>
   11a98:	movw	r1, #23530	; 0x5bea
   11a9c:	mov	r0, #0
   11aa0:	mov	r2, #5
   11aa4:	movt	r1, #1
   11aa8:	bl	111d4 <dcgettext@plt>
   11aac:	mov	r1, r0
   11ab0:	mov	r0, #1
   11ab4:	bl	11348 <__printf_chk@plt>
   11ab8:	ldr	r2, [r8, #24]
   11abc:	mov	r0, #1
   11ac0:	mov	r1, r7
   11ac4:	bl	11348 <__printf_chk@plt>
   11ac8:	mov	r0, #10
   11acc:	bl	1142c <putchar_unlocked@plt>
   11ad0:	movw	r0, #29065	; 0x7189
   11ad4:	movt	r0, #2
   11ad8:	ldrb	r0, [r0]
   11adc:	cmp	r0, #0
   11ae0:	bne	11bc0 <putchar_unlocked@plt+0x794>
   11ae4:	ldr	r0, [r8, #20]
   11ae8:	bl	112f4 <strlen@plt>
   11aec:	add	r0, r0, #10
   11af0:	bl	14c54 <putchar_unlocked@plt+0x3828>
   11af4:	ldr	r1, [r8, #20]
   11af8:	mov	sl, r0
   11afc:	bl	111c8 <stpcpy@plt>
   11b00:	movw	r1, #23672	; 0x5c78
   11b04:	movt	r1, #1
   11b08:	vldr	d16, [r1]
   11b0c:	mov	r1, #116	; 0x74
   11b10:	strh	r1, [r0, #8]
   11b14:	movw	r1, #23713	; 0x5ca1
   11b18:	movt	r1, #1
   11b1c:	vst1.8	{d16}, [r0]
   11b20:	mov	r0, sl
   11b24:	bl	113b4 <fopen64@plt>
   11b28:	cmp	r0, #0
   11b2c:	beq	11bac <putchar_unlocked@plt+0x780>
   11b30:	movw	r1, #23538	; 0x5bf2
   11b34:	mov	r6, r0
   11b38:	mov	r0, #0
   11b3c:	mov	r2, #5
   11b40:	movt	r1, #1
   11b44:	bl	111d4 <dcgettext@plt>
   11b48:	mov	r1, r0
   11b4c:	mov	r0, #1
   11b50:	bl	11348 <__printf_chk@plt>
   11b54:	mov	r0, r9
   11b58:	mov	r1, #1
   11b5c:	mov	r2, #1024	; 0x400
   11b60:	mov	r3, r6
   11b64:	bl	113e4 <fread_unlocked@plt>
   11b68:	cmp	r0, #0
   11b6c:	beq	11ba4 <putchar_unlocked@plt+0x778>
   11b70:	mov	r2, r0
   11b74:	ldr	r3, [r5]
   11b78:	mov	r0, r9
   11b7c:	mov	r1, #1
   11b80:	bl	111bc <fwrite_unlocked@plt>
   11b84:	mov	r0, r9
   11b88:	mov	r1, #1
   11b8c:	mov	r2, #1024	; 0x400
   11b90:	mov	r3, r6
   11b94:	bl	113e4 <fread_unlocked@plt>
   11b98:	mov	r2, r0
   11b9c:	cmp	r0, #0
   11ba0:	bne	11b74 <putchar_unlocked@plt+0x748>
   11ba4:	mov	r0, r6
   11ba8:	bl	12744 <putchar_unlocked@plt+0x1318>
   11bac:	mov	r0, sl
   11bb0:	bl	1283c <putchar_unlocked@plt+0x1410>
   11bb4:	ldr	sl, [sp, #16]
   11bb8:	movw	r7, #23718	; 0x5ca6
   11bbc:	movt	r7, #1
   11bc0:	movw	r0, #29066	; 0x718a
   11bc4:	movt	r0, #2
   11bc8:	ldrb	r0, [r0]
   11bcc:	cmp	r0, #0
   11bd0:	bne	11cac <putchar_unlocked@plt+0x880>
   11bd4:	ldr	r0, [r8, #20]
   11bd8:	bl	112f4 <strlen@plt>
   11bdc:	add	r0, r0, #7
   11be0:	bl	14c54 <putchar_unlocked@plt+0x3828>
   11be4:	ldr	r1, [r8, #20]
   11be8:	mov	r6, r0
   11bec:	bl	111c8 <stpcpy@plt>
   11bf0:	movw	r1, #11823	; 0x2e2f
   11bf4:	movt	r1, #27760	; 0x6c70
   11bf8:	str	r1, [r0]
   11bfc:	movw	r1, #24940	; 0x616c
   11c00:	movt	r1, #110	; 0x6e
   11c04:	str	r1, [r0, #3]
   11c08:	movw	r1, #23713	; 0x5ca1
   11c0c:	mov	r0, r6
   11c10:	movt	r1, #1
   11c14:	bl	113b4 <fopen64@plt>
   11c18:	cmp	r0, #0
   11c1c:	beq	11c9c <putchar_unlocked@plt+0x870>
   11c20:	movw	r1, #23555	; 0x5c03
   11c24:	mov	r7, r0
   11c28:	mov	r0, #0
   11c2c:	mov	r2, #5
   11c30:	movt	r1, #1
   11c34:	bl	111d4 <dcgettext@plt>
   11c38:	mov	r1, r0
   11c3c:	mov	r0, #1
   11c40:	bl	11348 <__printf_chk@plt>
   11c44:	mov	r0, r9
   11c48:	mov	r1, #1
   11c4c:	mov	r2, #1024	; 0x400
   11c50:	mov	r3, r7
   11c54:	bl	113e4 <fread_unlocked@plt>
   11c58:	cmp	r0, #0
   11c5c:	beq	11c94 <putchar_unlocked@plt+0x868>
   11c60:	mov	r2, r0
   11c64:	ldr	r3, [r5]
   11c68:	mov	r0, r9
   11c6c:	mov	r1, #1
   11c70:	bl	111bc <fwrite_unlocked@plt>
   11c74:	mov	r0, r9
   11c78:	mov	r1, #1
   11c7c:	mov	r2, #1024	; 0x400
   11c80:	mov	r3, r7
   11c84:	bl	113e4 <fread_unlocked@plt>
   11c88:	mov	r2, r0
   11c8c:	cmp	r0, #0
   11c90:	bne	11c64 <putchar_unlocked@plt+0x838>
   11c94:	mov	r0, r7
   11c98:	bl	12744 <putchar_unlocked@plt+0x1318>
   11c9c:	mov	r0, r6
   11ca0:	bl	1283c <putchar_unlocked@plt+0x1410>
   11ca4:	movw	r7, #23718	; 0x5ca6
   11ca8:	movt	r7, #1
   11cac:	mov	r0, #10
   11cb0:	bl	1142c <putchar_unlocked@plt>
   11cb4:	b	11cdc <putchar_unlocked@plt+0x8b0>
   11cb8:	movw	r1, #23507	; 0x5bd3
   11cbc:	mov	r0, #0
   11cc0:	mov	r2, #5
   11cc4:	movt	r1, #1
   11cc8:	bl	111d4 <dcgettext@plt>
   11ccc:	mov	r2, r0
   11cd0:	mov	r0, #1
   11cd4:	mov	r1, r7
   11cd8:	bl	11348 <__printf_chk@plt>
   11cdc:	add	r4, r4, #1
   11ce0:	cmp	r4, sl
   11ce4:	bne	11990 <putchar_unlocked@plt+0x564>
   11ce8:	mov	r0, #0
   11cec:	sub	sp, fp, #28
   11cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cf4:	cmn	r0, #3
   11cf8:	bne	11d58 <putchar_unlocked@plt+0x92c>
   11cfc:	movw	r0, #28960	; 0x7120
   11d00:	movw	r2, #22902	; 0x5976
   11d04:	movw	r6, #22869	; 0x5955
   11d08:	movw	r7, #22886	; 0x5966
   11d0c:	mov	r1, #0
   11d10:	movt	r0, #2
   11d14:	movt	r2, #1
   11d18:	movt	r6, #1
   11d1c:	movt	r7, #1
   11d20:	ldr	r3, [r0]
   11d24:	movw	r0, #29052	; 0x717c
   11d28:	stm	sp, {r6, r7}
   11d2c:	str	r2, [sp, #8]
   11d30:	movw	r2, #22855	; 0x5947
   11d34:	str	r1, [sp, #12]
   11d38:	movw	r1, #22815	; 0x591f
   11d3c:	movt	r0, #2
   11d40:	movt	r1, #1
   11d44:	movt	r2, #1
   11d48:	ldr	r0, [r0]
   11d4c:	bl	14b4c <putchar_unlocked@plt+0x3720>
   11d50:	mov	r0, #0
   11d54:	bl	112dc <exit@plt>
   11d58:	cmn	r0, #2
   11d5c:	bne	11d8c <putchar_unlocked@plt+0x960>
   11d60:	mov	r0, #0
   11d64:	bl	11528 <putchar_unlocked@plt+0xfc>
   11d68:	movw	r1, #22914	; 0x5982
   11d6c:	mov	r0, #0
   11d70:	mov	r2, #5
   11d74:	movt	r1, #1
   11d78:	bl	111d4 <dcgettext@plt>
   11d7c:	mov	r2, r0
   11d80:	mov	r0, #0
   11d84:	mov	r1, #0
   11d88:	bl	11258 <error@plt>
   11d8c:	mov	r0, #1
   11d90:	bl	11528 <putchar_unlocked@plt+0xfc>
   11d94:	ldr	r1, [sp, #20]
   11d98:	mov	r0, sl
   11d9c:	bl	11da0 <putchar_unlocked@plt+0x974>
   11da0:	push	{fp, lr}
   11da4:	mov	fp, sp
   11da8:	sub	sp, sp, #8
   11dac:	mov	r5, r0
   11db0:	mov	r0, #0
   11db4:	mov	r4, r1
   11db8:	add	r1, sp, #4
   11dbc:	mov	r2, sp
   11dc0:	mov	r3, #0
   11dc4:	str	r0, [sp]
   11dc8:	movw	r0, #22801	; 0x5911
   11dcc:	movt	r0, #1
   11dd0:	bl	145cc <putchar_unlocked@plt+0x31a0>
   11dd4:	cmp	r0, #0
   11dd8:	bne	11df8 <putchar_unlocked@plt+0x9cc>
   11ddc:	ldr	r1, [sp]
   11de0:	ldr	r0, [sp, #4]
   11de4:	mov	r2, r5
   11de8:	mov	r3, r4
   11dec:	bl	11e2c <putchar_unlocked@plt+0xa00>
   11df0:	mov	r0, #0
   11df4:	bl	112dc <exit@plt>
   11df8:	bl	1130c <__errno_location@plt>
   11dfc:	movw	r2, #22801	; 0x5911
   11e00:	ldr	r4, [r0]
   11e04:	mov	r0, #0
   11e08:	mov	r1, #3
   11e0c:	movt	r2, #1
   11e10:	bl	14288 <putchar_unlocked@plt+0x2e5c>
   11e14:	movw	r2, #23719	; 0x5ca7
   11e18:	mov	r3, r0
   11e1c:	mov	r0, #1
   11e20:	mov	r1, r4
   11e24:	movt	r2, #1
   11e28:	bl	11258 <error@plt>
   11e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e30:	add	fp, sp, #28
   11e34:	sub	sp, sp, #4
   11e38:	mov	sl, r0
   11e3c:	mov	r0, #2
   11e40:	mov	r8, r3
   11e44:	mov	r9, r2
   11e48:	mov	r4, r1
   11e4c:	bl	12908 <putchar_unlocked@plt+0x14dc>
   11e50:	movw	r1, #23306	; 0x5b0a
   11e54:	cmp	r0, #0
   11e58:	movw	r0, #29068	; 0x718c
   11e5c:	movw	r2, #23321	; 0x5b19
   11e60:	movw	r6, #29072	; 0x7190
   11e64:	movt	r1, #1
   11e68:	movt	r0, #2
   11e6c:	movt	r2, #1
   11e70:	movt	r6, #2
   11e74:	movne	r2, r1
   11e78:	str	r2, [r0]
   11e7c:	mov	r0, #12
   11e80:	movwne	r0, #16
   11e84:	str	r0, [r6]
   11e88:	movw	r0, #29061	; 0x7185
   11e8c:	movt	r0, #2
   11e90:	ldrb	r0, [r0]
   11e94:	cmp	r0, #0
   11e98:	bne	12048 <putchar_unlocked@plt+0xc1c>
   11e9c:	movw	r1, #23338	; 0x5b2a
   11ea0:	mov	r0, #0
   11ea4:	mov	r2, #5
   11ea8:	movt	r1, #1
   11eac:	bl	111d4 <dcgettext@plt>
   11eb0:	movw	r1, #23333	; 0x5b25
   11eb4:	mov	r2, r0
   11eb8:	mov	r0, #1
   11ebc:	movt	r1, #1
   11ec0:	bl	11348 <__printf_chk@plt>
   11ec4:	movw	r0, #29062	; 0x7186
   11ec8:	movt	r0, #2
   11ecc:	ldrb	r0, [r0]
   11ed0:	cmp	r0, #0
   11ed4:	bne	11f00 <putchar_unlocked@plt+0xad4>
   11ed8:	movw	r1, #23351	; 0x5b37
   11edc:	mov	r0, #0
   11ee0:	mov	r2, #5
   11ee4:	movt	r1, #1
   11ee8:	bl	111d4 <dcgettext@plt>
   11eec:	movw	r1, #23344	; 0x5b30
   11ef0:	mov	r2, r0
   11ef4:	mov	r0, #1
   11ef8:	movt	r1, #1
   11efc:	bl	11348 <__printf_chk@plt>
   11f00:	movw	r1, #23362	; 0x5b42
   11f04:	mov	r0, #0
   11f08:	mov	r2, #5
   11f0c:	movt	r1, #1
   11f10:	bl	111d4 <dcgettext@plt>
   11f14:	movw	r1, #23356	; 0x5b3c
   11f18:	mov	r2, r0
   11f1c:	mov	r0, #1
   11f20:	movt	r1, #1
   11f24:	bl	11348 <__printf_chk@plt>
   11f28:	movw	r0, #29064	; 0x7188
   11f2c:	movt	r0, #2
   11f30:	ldrb	r0, [r0]
   11f34:	cmp	r0, #0
   11f38:	bne	11f64 <putchar_unlocked@plt+0xb38>
   11f3c:	movw	r1, #23373	; 0x5b4d
   11f40:	mov	r0, #0
   11f44:	mov	r2, #5
   11f48:	movt	r1, #1
   11f4c:	bl	111d4 <dcgettext@plt>
   11f50:	movw	r1, #23367	; 0x5b47
   11f54:	mov	r2, r0
   11f58:	mov	r0, #1
   11f5c:	movt	r1, #1
   11f60:	bl	11348 <__printf_chk@plt>
   11f64:	movw	r1, #23384	; 0x5b58
   11f68:	ldr	r6, [r6]
   11f6c:	mov	r0, #0
   11f70:	mov	r2, #5
   11f74:	movt	r1, #1
   11f78:	bl	111d4 <dcgettext@plt>
   11f7c:	movw	r1, #23378	; 0x5b52
   11f80:	mov	r3, r0
   11f84:	mov	r0, #1
   11f88:	mov	r2, r6
   11f8c:	movt	r1, #1
   11f90:	bl	11348 <__printf_chk@plt>
   11f94:	movw	r0, #29063	; 0x7187
   11f98:	movt	r0, #2
   11f9c:	ldrb	r0, [r0]
   11fa0:	cmp	r0, #0
   11fa4:	bne	11fd0 <putchar_unlocked@plt+0xba4>
   11fa8:	movw	r1, #23389	; 0x5b5d
   11fac:	mov	r0, #0
   11fb0:	mov	r2, #5
   11fb4:	movt	r1, #1
   11fb8:	bl	111d4 <dcgettext@plt>
   11fbc:	movw	r1, #23718	; 0x5ca6
   11fc0:	mov	r2, r0
   11fc4:	mov	r0, #1
   11fc8:	movt	r1, #1
   11fcc:	bl	11348 <__printf_chk@plt>
   11fd0:	mov	r0, #10
   11fd4:	bl	1142c <putchar_unlocked@plt>
   11fd8:	b	12048 <putchar_unlocked@plt+0xc1c>
   11fdc:	mov	r6, r4
   11fe0:	sub	sl, sl, #1
   11fe4:	ldrb	r0, [r6, #44]!	; 0x2c
   11fe8:	cmp	r0, #0
   11fec:	beq	12044 <putchar_unlocked@plt+0xc18>
   11ff0:	ldrh	r0, [r4]
   11ff4:	cmp	r0, #7
   11ff8:	bne	12044 <putchar_unlocked@plt+0xc18>
   11ffc:	cmp	r9, #0
   12000:	beq	1203c <putchar_unlocked@plt+0xc10>
   12004:	cmp	r9, #1
   12008:	mov	r5, r8
   1200c:	mov	r7, r9
   12010:	blt	12044 <putchar_unlocked@plt+0xc18>
   12014:	ldr	r1, [r5]
   12018:	mov	r0, r6
   1201c:	mov	r2, #32
   12020:	bl	11408 <strncmp@plt>
   12024:	cmp	r0, #0
   12028:	beq	1203c <putchar_unlocked@plt+0xc10>
   1202c:	add	r5, r5, #4
   12030:	subs	r7, r7, #1
   12034:	bne	12014 <putchar_unlocked@plt+0xbe8>
   12038:	b	12044 <putchar_unlocked@plt+0xc18>
   1203c:	mov	r0, r4
   12040:	bl	12058 <putchar_unlocked@plt+0xc2c>
   12044:	add	r4, r4, #384	; 0x180
   12048:	cmp	sl, #0
   1204c:	bne	11fdc <putchar_unlocked@plt+0xbb0>
   12050:	sub	sp, fp, #28
   12054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12058:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1205c:	add	fp, sp, #24
   12060:	sub	sp, sp, #424	; 0x1a8
   12064:	mov	r4, r0
   12068:	mov	r8, r0
   1206c:	ldrb	r0, [r4, #8]!
   12070:	cmp	r0, #47	; 0x2f
   12074:	bne	12080 <putchar_unlocked@plt+0xc54>
   12078:	sub	r7, fp, #176	; 0xb0
   1207c:	b	1209c <putchar_unlocked@plt+0xc70>
   12080:	mov	r1, #47	; 0x2f
   12084:	strh	r1, [fp, #-172]	; 0xffffff54
   12088:	movw	r1, #25647	; 0x642f
   1208c:	movt	r1, #30309	; 0x7665
   12090:	str	r1, [fp, #-176]	; 0xffffff50
   12094:	sub	r1, fp, #176	; 0xb0
   12098:	orr	r7, r1, #5
   1209c:	cmp	r0, #0
   120a0:	beq	120d0 <putchar_unlocked@plt+0xca4>
   120a4:	add	r2, r8, #40	; 0x28
   120a8:	add	r1, r7, #1
   120ac:	add	r3, r8, #9
   120b0:	mov	r7, r1
   120b4:	cmp	r3, r2
   120b8:	strb	r0, [r1, #-1]
   120bc:	bcs	120d0 <putchar_unlocked@plt+0xca4>
   120c0:	ldrb	r0, [r3], #1
   120c4:	add	r1, r7, #1
   120c8:	cmp	r0, #0
   120cc:	bne	120b0 <putchar_unlocked@plt+0xc84>
   120d0:	mov	r9, #0
   120d4:	sub	r0, fp, #176	; 0xb0
   120d8:	sub	r1, fp, #136	; 0x88
   120dc:	strb	r9, [r7]
   120e0:	bl	15578 <putchar_unlocked@plt+0x414c>
   120e4:	mov	r5, #63	; 0x3f
   120e8:	cmp	r0, #0
   120ec:	bne	12104 <putchar_unlocked@plt+0xcd8>
   120f0:	ldrb	r0, [fp, #-120]	; 0xffffff88
   120f4:	ldr	r9, [fp, #-64]	; 0xffffffc0
   120f8:	mov	r5, #32
   120fc:	tst	r0, #16
   12100:	movweq	r5, #42	; 0x2a
   12104:	movw	r1, #23432	; 0x5b88
   12108:	add	r6, r8, #44	; 0x2c
   1210c:	mov	r0, #1
   12110:	mov	r2, #32
   12114:	movt	r1, #1
   12118:	mov	r3, r6
   1211c:	bl	11348 <__printf_chk@plt>
   12120:	movw	r0, #29062	; 0x7186
   12124:	movt	r0, #2
   12128:	ldrb	r0, [r0]
   1212c:	cmp	r0, #0
   12130:	bne	121ec <putchar_unlocked@plt+0xdc0>
   12134:	add	r1, r8, #76	; 0x4c
   12138:	add	r0, sp, #12
   1213c:	ldrb	r2, [r6]
   12140:	cmp	r2, #0
   12144:	beq	12158 <putchar_unlocked@plt+0xd2c>
   12148:	add	r6, r6, #1
   1214c:	strb	r2, [r0], #1
   12150:	cmp	r6, r1
   12154:	bcc	1213c <putchar_unlocked@plt+0xd10>
   12158:	mov	r1, #0
   1215c:	strb	r1, [r0]
   12160:	add	r0, sp, #12
   12164:	bl	11144 <getpwnam@plt>
   12168:	cmp	r0, #0
   1216c:	beq	121c4 <putchar_unlocked@plt+0xd98>
   12170:	ldr	r7, [r0, #16]
   12174:	mov	r6, r0
   12178:	mov	r1, #44	; 0x2c
   1217c:	mov	r0, r7
   12180:	bl	11300 <strchr@plt>
   12184:	cmp	r0, #0
   12188:	movne	r1, #0
   1218c:	strbne	r1, [r0]
   12190:	ldrne	r7, [r6, #16]
   12194:	ldr	r1, [r6]
   12198:	mov	r0, r7
   1219c:	bl	12480 <putchar_unlocked@plt+0x1054>
   121a0:	movw	r1, #23419	; 0x5b7b
   121a4:	mov	r6, r0
   121a8:	mov	r0, #1
   121ac:	movt	r1, #1
   121b0:	mov	r2, r6
   121b4:	bl	11348 <__printf_chk@plt>
   121b8:	mov	r0, r6
   121bc:	bl	1283c <putchar_unlocked@plt+0x1410>
   121c0:	b	121ec <putchar_unlocked@plt+0xdc0>
   121c4:	movw	r1, #23407	; 0x5b6f
   121c8:	mov	r0, #0
   121cc:	mov	r2, #5
   121d0:	movt	r1, #1
   121d4:	bl	111d4 <dcgettext@plt>
   121d8:	movw	r1, #23401	; 0x5b69
   121dc:	mov	r2, r0
   121e0:	mov	r0, #1
   121e4:	movt	r1, #1
   121e8:	bl	11348 <__printf_chk@plt>
   121ec:	movw	r1, #23429	; 0x5b85
   121f0:	mov	r0, #1
   121f4:	mov	r2, r5
   121f8:	mov	r3, #32
   121fc:	str	r4, [sp]
   12200:	movt	r1, #1
   12204:	bl	11348 <__printf_chk@plt>
   12208:	movw	r0, #29064	; 0x7188
   1220c:	movt	r0, #2
   12210:	ldrb	r0, [r0]
   12214:	cmp	r0, #0
   12218:	bne	12320 <putchar_unlocked@plt+0xef4>
   1221c:	cmp	r9, #0
   12220:	beq	1225c <putchar_unlocked@plt+0xe30>
   12224:	movw	r5, #29076	; 0x7194
   12228:	movt	r5, #2
   1222c:	ldr	r0, [r5]
   12230:	cmp	r0, #0
   12234:	bne	12244 <putchar_unlocked@plt+0xe18>
   12238:	mov	r0, r5
   1223c:	bl	111b0 <time@plt>
   12240:	ldr	r0, [r5]
   12244:	sub	r0, r0, r9
   12248:	cmp	r0, #60	; 0x3c
   1224c:	bge	12280 <putchar_unlocked@plt+0xe54>
   12250:	movw	r5, #23452	; 0x5b9c
   12254:	movt	r5, #1
   12258:	b	1230c <putchar_unlocked@plt+0xee0>
   1225c:	movw	r1, #23439	; 0x5b8f
   12260:	mov	r0, #0
   12264:	mov	r2, #5
   12268:	movt	r1, #1
   1226c:	bl	111d4 <dcgettext@plt>
   12270:	movw	r1, #23367	; 0x5b47
   12274:	mov	r2, r0
   12278:	mov	r0, #1
   1227c:	b	12318 <putchar_unlocked@plt+0xeec>
   12280:	movw	r1, #20863	; 0x517f
   12284:	movt	r1, #1
   12288:	cmp	r0, r1
   1228c:	bgt	122d8 <putchar_unlocked@plt+0xeac>
   12290:	movw	r1, #46021	; 0xb3c5
   12294:	movw	r5, #29080	; 0x7198
   12298:	movw	r3, #23458	; 0x5ba2
   1229c:	movt	r1, #37282	; 0x91a2
   122a0:	movt	r5, #2
   122a4:	movt	r3, #1
   122a8:	umull	r1, r2, r0, r1
   122ac:	lsr	r1, r2, #11
   122b0:	mov	r2, #3600	; 0xe10
   122b4:	mls	r0, r1, r2, r0
   122b8:	movw	r2, #34953	; 0x8889
   122bc:	str	r1, [sp]
   122c0:	movt	r2, #34952	; 0x8888
   122c4:	uxth	r0, r0
   122c8:	umull	r0, r2, r0, r2
   122cc:	lsr	r0, r2, #5
   122d0:	str	r0, [sp, #4]
   122d4:	b	122fc <putchar_unlocked@plt+0xed0>
   122d8:	movw	r1, #17671	; 0x4507
   122dc:	movw	r5, #29080	; 0x7198
   122e0:	movw	r3, #23468	; 0x5bac
   122e4:	movt	r1, #49710	; 0xc22e
   122e8:	movt	r5, #2
   122ec:	movt	r3, #1
   122f0:	umull	r0, r1, r0, r1
   122f4:	lsr	r0, r1, #16
   122f8:	str	r0, [sp]
   122fc:	mov	r0, r5
   12300:	mov	r1, #1
   12304:	mov	r2, #13
   12308:	bl	11318 <__sprintf_chk@plt>
   1230c:	movw	r1, #23367	; 0x5b47
   12310:	mov	r0, #1
   12314:	mov	r2, r5
   12318:	movt	r1, #1
   1231c:	bl	11348 <__printf_chk@plt>
   12320:	ldr	r0, [r8, #340]	; 0x154
   12324:	add	r5, sp, #12
   12328:	str	r0, [sp, #12]
   1232c:	mov	r0, r5
   12330:	bl	11294 <localtime@plt>
   12334:	cmp	r0, #0
   12338:	beq	12364 <putchar_unlocked@plt+0xf38>
   1233c:	mov	r3, r0
   12340:	movw	r0, #29068	; 0x718c
   12344:	movw	r6, #29093	; 0x71a5
   12348:	mov	r1, #33	; 0x21
   1234c:	movt	r0, #2
   12350:	movt	r6, #2
   12354:	ldr	r2, [r0]
   12358:	mov	r0, r6
   1235c:	bl	1127c <strftime@plt>
   12360:	b	1237c <putchar_unlocked@plt+0xf50>
   12364:	ldr	r0, [sp, #12]
   12368:	movw	r2, #29093	; 0x71a5
   1236c:	movt	r2, #2
   12370:	asr	r1, r0, #31
   12374:	bl	12974 <putchar_unlocked@plt+0x1548>
   12378:	mov	r6, r0
   1237c:	movw	r1, #23718	; 0x5ca6
   12380:	mov	r0, #1
   12384:	mov	r2, r6
   12388:	movt	r1, #1
   1238c:	bl	11348 <__printf_chk@plt>
   12390:	movw	r0, #29063	; 0x7187
   12394:	movt	r0, #2
   12398:	ldrb	r0, [r0]
   1239c:	cmp	r0, #0
   123a0:	bne	12470 <putchar_unlocked@plt+0x1044>
   123a4:	ldrb	r1, [r8, #76]	; 0x4c
   123a8:	cmp	r1, #0
   123ac:	beq	12470 <putchar_unlocked@plt+0x1044>
   123b0:	add	r7, r5, #1
   123b4:	add	r0, r8, #77	; 0x4d
   123b8:	add	r2, r8, #332	; 0x14c
   123bc:	mov	r3, r7
   123c0:	cmp	r0, r2
   123c4:	strb	r1, [r7, #-1]
   123c8:	bcs	123dc <putchar_unlocked@plt+0xfb0>
   123cc:	ldrb	r1, [r0], #1
   123d0:	add	r7, r3, #1
   123d4:	cmp	r1, #0
   123d8:	bne	123bc <putchar_unlocked@plt+0xf90>
   123dc:	add	r4, sp, #12
   123e0:	mov	r5, #0
   123e4:	mov	r1, #58	; 0x3a
   123e8:	mov	r0, r4
   123ec:	strb	r5, [r3]
   123f0:	bl	11300 <strchr@plt>
   123f4:	cmp	r0, #0
   123f8:	mov	r6, #0
   123fc:	movne	r1, #0
   12400:	strbne	r1, [r0], #1
   12404:	movne	r6, r0
   12408:	ldrb	r0, [sp, #12]
   1240c:	cmp	r0, #0
   12410:	beq	12420 <putchar_unlocked@plt+0xff4>
   12414:	add	r0, sp, #12
   12418:	bl	1258c <putchar_unlocked@plt+0x1160>
   1241c:	mov	r5, r0
   12420:	cmp	r5, #0
   12424:	movne	r4, r5
   12428:	cmp	r6, #0
   1242c:	beq	1244c <putchar_unlocked@plt+0x1020>
   12430:	movw	r1, #23445	; 0x5b95
   12434:	mov	r0, #1
   12438:	mov	r2, r4
   1243c:	mov	r3, r6
   12440:	movt	r1, #1
   12444:	bl	11348 <__printf_chk@plt>
   12448:	b	12460 <putchar_unlocked@plt+0x1034>
   1244c:	movw	r1, #23718	; 0x5ca6
   12450:	mov	r0, #1
   12454:	mov	r2, r4
   12458:	movt	r1, #1
   1245c:	bl	11348 <__printf_chk@plt>
   12460:	cmp	r5, #0
   12464:	beq	12470 <putchar_unlocked@plt+0x1044>
   12468:	mov	r0, r4
   1246c:	bl	1283c <putchar_unlocked@plt+0x1410>
   12470:	mov	r0, #10
   12474:	bl	1142c <putchar_unlocked@plt>
   12478:	sub	sp, fp, #24
   1247c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12480:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12484:	add	fp, sp, #24
   12488:	mov	r4, r1
   1248c:	mov	r5, r0
   12490:	bl	112f4 <strlen@plt>
   12494:	mov	r7, #0
   12498:	mov	r1, r5
   1249c:	ldrb	r2, [r1], #1
   124a0:	cmp	r2, #38	; 0x26
   124a4:	addeq	r7, r7, #1
   124a8:	cmp	r2, #0
   124ac:	bne	1249c <putchar_unlocked@plt+0x1070>
   124b0:	add	r6, r0, #1
   124b4:	cmp	r7, #0
   124b8:	beq	124e8 <putchar_unlocked@plt+0x10bc>
   124bc:	mov	r0, r4
   124c0:	bl	112f4 <strlen@plt>
   124c4:	subs	r1, r7, #1
   124c8:	beq	124dc <putchar_unlocked@plt+0x10b0>
   124cc:	mvn	r2, #0
   124d0:	udiv	r2, r2, r1
   124d4:	cmp	r2, r0
   124d8:	bcc	12588 <putchar_unlocked@plt+0x115c>
   124dc:	mul	r0, r0, r1
   124e0:	adds	r6, r6, r0
   124e4:	bcs	12588 <putchar_unlocked@plt+0x115c>
   124e8:	mov	r0, r6
   124ec:	bl	14c54 <putchar_unlocked@plt+0x3828>
   124f0:	mov	r8, r0
   124f4:	add	r9, r4, #1
   124f8:	mov	r7, r0
   124fc:	ldrb	r0, [r5]
   12500:	cmp	r0, #38	; 0x26
   12504:	beq	12518 <putchar_unlocked@plt+0x10ec>
   12508:	cmp	r0, #0
   1250c:	beq	12578 <putchar_unlocked@plt+0x114c>
   12510:	strb	r0, [r7], #1
   12514:	b	12570 <putchar_unlocked@plt+0x1144>
   12518:	bl	112d0 <__ctype_b_loc@plt>
   1251c:	ldrb	r6, [r4]
   12520:	ldr	r0, [r0]
   12524:	add	r0, r0, r6, lsl #1
   12528:	ldrb	r0, [r0, #1]
   1252c:	tst	r0, #2
   12530:	bne	1253c <putchar_unlocked@plt+0x1110>
   12534:	mov	r0, r4
   12538:	b	12554 <putchar_unlocked@plt+0x1128>
   1253c:	bl	112a0 <__ctype_toupper_loc@plt>
   12540:	ldr	r0, [r0]
   12544:	ldr	r0, [r0, r6, lsl #2]
   12548:	strb	r0, [r7], #1
   1254c:	mov	r0, r9
   12550:	ldrb	r6, [r9]
   12554:	cmp	r6, #0
   12558:	beq	12570 <putchar_unlocked@plt+0x1144>
   1255c:	add	r0, r0, #1
   12560:	strb	r6, [r7], #1
   12564:	ldrb	r6, [r0], #1
   12568:	cmp	r6, #0
   1256c:	bne	12560 <putchar_unlocked@plt+0x1134>
   12570:	add	r5, r5, #1
   12574:	b	124fc <putchar_unlocked@plt+0x10d0>
   12578:	mov	r0, #0
   1257c:	strb	r0, [r7]
   12580:	mov	r0, r8
   12584:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12588:	bl	15080 <putchar_unlocked@plt+0x3c54>
   1258c:	movw	r1, #29128	; 0x71c8
   12590:	movt	r1, #2
   12594:	b	12598 <putchar_unlocked@plt+0x116c>
   12598:	push	{r4, r5, r6, sl, fp, lr}
   1259c:	add	fp, sp, #16
   125a0:	sub	sp, sp, #8
   125a4:	movw	r2, #29132	; 0x71cc
   125a8:	mov	r6, r0
   125ac:	mov	r0, #2
   125b0:	mov	r5, r1
   125b4:	mov	r4, #0
   125b8:	add	r3, sp, #4
   125bc:	mov	r1, #0
   125c0:	movt	r2, #2
   125c4:	str	r4, [sp, #4]
   125c8:	str	r0, [r2]
   125cc:	mov	r0, r6
   125d0:	bl	113cc <getaddrinfo@plt>
   125d4:	cmp	r0, #0
   125d8:	beq	125e8 <putchar_unlocked@plt+0x11bc>
   125dc:	cmp	r5, #0
   125e0:	strne	r0, [r5]
   125e4:	b	12620 <putchar_unlocked@plt+0x11f4>
   125e8:	ldr	r0, [sp, #4]
   125ec:	ldr	r0, [r0, #24]
   125f0:	cmp	r0, #0
   125f4:	movne	r6, r0
   125f8:	mov	r0, r6
   125fc:	bl	111e0 <strdup@plt>
   12600:	mov	r4, r0
   12604:	cmp	r5, #0
   12608:	beq	12618 <putchar_unlocked@plt+0x11ec>
   1260c:	cmp	r4, #0
   12610:	mvneq	r0, #9
   12614:	streq	r0, [r5]
   12618:	ldr	r0, [sp, #4]
   1261c:	bl	113c0 <freeaddrinfo@plt>
   12620:	mov	r0, r4
   12624:	sub	sp, fp, #16
   12628:	pop	{r4, r5, r6, sl, fp, pc}
   1262c:	movw	r0, #29128	; 0x71c8
   12630:	movt	r0, #2
   12634:	ldr	r0, [r0]
   12638:	b	11180 <gai_strerror@plt>
   1263c:	movw	r1, #29164	; 0x71ec
   12640:	movt	r1, #2
   12644:	str	r0, [r1]
   12648:	bx	lr
   1264c:	movw	r1, #29168	; 0x71f0
   12650:	movt	r1, #2
   12654:	strb	r0, [r1]
   12658:	bx	lr
   1265c:	push	{r4, r5, r6, sl, fp, lr}
   12660:	add	fp, sp, #16
   12664:	sub	sp, sp, #8
   12668:	movw	r0, #29052	; 0x717c
   1266c:	movt	r0, #2
   12670:	ldr	r0, [r0]
   12674:	bl	15198 <putchar_unlocked@plt+0x3d6c>
   12678:	cmp	r0, #0
   1267c:	beq	126a4 <putchar_unlocked@plt+0x1278>
   12680:	movw	r0, #29168	; 0x71f0
   12684:	movt	r0, #2
   12688:	ldrb	r0, [r0]
   1268c:	cmp	r0, #0
   12690:	beq	126c4 <putchar_unlocked@plt+0x1298>
   12694:	bl	1130c <__errno_location@plt>
   12698:	ldr	r0, [r0]
   1269c:	cmp	r0, #32
   126a0:	bne	126c4 <putchar_unlocked@plt+0x1298>
   126a4:	movw	r0, #29048	; 0x7178
   126a8:	movt	r0, #2
   126ac:	ldr	r0, [r0]
   126b0:	bl	15198 <putchar_unlocked@plt+0x3d6c>
   126b4:	cmp	r0, #0
   126b8:	subeq	sp, fp, #16
   126bc:	popeq	{r4, r5, r6, sl, fp, pc}
   126c0:	b	12734 <putchar_unlocked@plt+0x1308>
   126c4:	movw	r1, #23703	; 0x5c97
   126c8:	mov	r0, #0
   126cc:	mov	r2, #5
   126d0:	movt	r1, #1
   126d4:	bl	111d4 <dcgettext@plt>
   126d8:	mov	r4, r0
   126dc:	movw	r0, #29164	; 0x71ec
   126e0:	movt	r0, #2
   126e4:	ldr	r6, [r0]
   126e8:	bl	1130c <__errno_location@plt>
   126ec:	ldr	r5, [r0]
   126f0:	cmp	r6, #0
   126f4:	bne	12710 <putchar_unlocked@plt+0x12e4>
   126f8:	movw	r2, #23719	; 0x5ca7
   126fc:	mov	r0, #0
   12700:	mov	r1, r5
   12704:	mov	r3, r4
   12708:	movt	r2, #1
   1270c:	b	12730 <putchar_unlocked@plt+0x1304>
   12710:	mov	r0, r6
   12714:	bl	141dc <putchar_unlocked@plt+0x2db0>
   12718:	movw	r2, #23715	; 0x5ca3
   1271c:	mov	r3, r0
   12720:	str	r4, [sp]
   12724:	mov	r0, #0
   12728:	mov	r1, r5
   1272c:	movt	r2, #1
   12730:	bl	11258 <error@plt>
   12734:	movw	r0, #28964	; 0x7124
   12738:	movt	r0, #2
   1273c:	ldr	r0, [r0]
   12740:	bl	1118c <_exit@plt>
   12744:	push	{r4, r5, r6, sl, fp, lr}
   12748:	add	fp, sp, #16
   1274c:	sub	sp, sp, #8
   12750:	mov	r4, r0
   12754:	bl	11354 <fileno@plt>
   12758:	cmn	r0, #1
   1275c:	ble	127d0 <putchar_unlocked@plt+0x13a4>
   12760:	mov	r0, r4
   12764:	bl	11288 <__freading@plt>
   12768:	cmp	r0, #0
   1276c:	beq	12798 <putchar_unlocked@plt+0x136c>
   12770:	mov	r0, r4
   12774:	bl	11354 <fileno@plt>
   12778:	mov	r1, #1
   1277c:	mov	r2, #0
   12780:	mov	r3, #0
   12784:	str	r1, [sp]
   12788:	bl	1121c <lseek64@plt>
   1278c:	and	r0, r0, r1
   12790:	cmn	r0, #1
   12794:	beq	127d0 <putchar_unlocked@plt+0x13a4>
   12798:	mov	r0, r4
   1279c:	bl	127e0 <putchar_unlocked@plt+0x13b4>
   127a0:	cmp	r0, #0
   127a4:	beq	127d0 <putchar_unlocked@plt+0x13a4>
   127a8:	bl	1130c <__errno_location@plt>
   127ac:	ldr	r6, [r0]
   127b0:	mov	r5, r0
   127b4:	mov	r0, r4
   127b8:	bl	1136c <fclose@plt>
   127bc:	cmp	r6, #0
   127c0:	strne	r6, [r5]
   127c4:	mvnne	r0, #0
   127c8:	sub	sp, fp, #16
   127cc:	pop	{r4, r5, r6, sl, fp, pc}
   127d0:	mov	r0, r4
   127d4:	sub	sp, fp, #16
   127d8:	pop	{r4, r5, r6, sl, fp, lr}
   127dc:	b	1136c <fclose@plt>
   127e0:	push	{r4, sl, fp, lr}
   127e4:	add	fp, sp, #8
   127e8:	sub	sp, sp, #8
   127ec:	mov	r4, r0
   127f0:	cmp	r0, #0
   127f4:	beq	1282c <putchar_unlocked@plt+0x1400>
   127f8:	mov	r0, r4
   127fc:	bl	11288 <__freading@plt>
   12800:	cmp	r0, #0
   12804:	beq	1282c <putchar_unlocked@plt+0x1400>
   12808:	ldrb	r0, [r4, #1]
   1280c:	tst	r0, #1
   12810:	beq	1282c <putchar_unlocked@plt+0x1400>
   12814:	mov	r0, #1
   12818:	mov	r2, #0
   1281c:	mov	r3, #0
   12820:	str	r0, [sp]
   12824:	mov	r0, r4
   12828:	bl	12864 <putchar_unlocked@plt+0x1438>
   1282c:	mov	r0, r4
   12830:	sub	sp, fp, #8
   12834:	pop	{r4, sl, fp, lr}
   12838:	b	1115c <fflush@plt>
   1283c:	push	{r4, r5, r6, sl, fp, lr}
   12840:	add	fp, sp, #16
   12844:	mov	r4, r0
   12848:	bl	1130c <__errno_location@plt>
   1284c:	ldr	r6, [r0]
   12850:	mov	r5, r0
   12854:	mov	r0, r4
   12858:	bl	11174 <free@plt>
   1285c:	str	r6, [r5]
   12860:	pop	{r4, r5, r6, sl, fp, pc}
   12864:	push	{r4, r5, r6, r7, fp, lr}
   12868:	add	fp, sp, #16
   1286c:	sub	sp, sp, #8
   12870:	mov	r4, r0
   12874:	ldr	r0, [r0, #4]
   12878:	mov	r5, r3
   1287c:	mov	r6, r2
   12880:	ldr	r1, [r4, #8]
   12884:	cmp	r1, r0
   12888:	bne	128a4 <putchar_unlocked@plt+0x1478>
   1288c:	ldrd	r0, [r4, #16]
   12890:	cmp	r1, r0
   12894:	bne	128a4 <putchar_unlocked@plt+0x1478>
   12898:	ldr	r0, [r4, #36]	; 0x24
   1289c:	cmp	r0, #0
   128a0:	beq	128bc <putchar_unlocked@plt+0x1490>
   128a4:	mov	r0, r4
   128a8:	mov	r2, r6
   128ac:	mov	r3, r5
   128b0:	sub	sp, fp, #16
   128b4:	pop	{r4, r5, r6, r7, fp, lr}
   128b8:	b	11378 <fseeko64@plt>
   128bc:	ldr	r7, [fp, #8]
   128c0:	mov	r0, r4
   128c4:	bl	11354 <fileno@plt>
   128c8:	mov	r2, r6
   128cc:	mov	r3, r5
   128d0:	str	r7, [sp]
   128d4:	bl	1121c <lseek64@plt>
   128d8:	and	r2, r0, r1
   128dc:	cmn	r2, #1
   128e0:	beq	128fc <putchar_unlocked@plt+0x14d0>
   128e4:	strd	r0, [r4, #80]	; 0x50
   128e8:	ldr	r0, [r4]
   128ec:	bic	r0, r0, #16
   128f0:	str	r0, [r4]
   128f4:	mov	r0, #0
   128f8:	b	12900 <putchar_unlocked@plt+0x14d4>
   128fc:	mvn	r0, #0
   12900:	sub	sp, fp, #16
   12904:	pop	{r4, r5, r6, r7, fp, pc}
   12908:	push	{r4, sl, fp, lr}
   1290c:	add	fp, sp, #8
   12910:	sub	sp, sp, #264	; 0x108
   12914:	add	r1, sp, #7
   12918:	movw	r2, #257	; 0x101
   1291c:	bl	14700 <putchar_unlocked@plt+0x32d4>
   12920:	mov	r4, #0
   12924:	cmp	r0, #0
   12928:	bne	12968 <putchar_unlocked@plt+0x153c>
   1292c:	movw	r1, #23722	; 0x5caa
   12930:	add	r0, sp, #7
   12934:	mov	r2, #2
   12938:	movt	r1, #1
   1293c:	bl	112e8 <bcmp@plt>
   12940:	cmp	r0, #0
   12944:	beq	12968 <putchar_unlocked@plt+0x153c>
   12948:	movw	r1, #23724	; 0x5cac
   1294c:	add	r0, sp, #7
   12950:	mov	r2, #6
   12954:	movt	r1, #1
   12958:	bl	112e8 <bcmp@plt>
   1295c:	cmp	r0, #0
   12960:	mov	r4, r0
   12964:	movwne	r4, #1
   12968:	mov	r0, r4
   1296c:	sub	sp, fp, #8
   12970:	pop	{r4, sl, fp, pc}
   12974:	push	{r4, r5, r6, sl, fp, lr}
   12978:	add	fp, sp, #16
   1297c:	mov	r5, r0
   12980:	mov	r0, #0
   12984:	mov	r4, r1
   12988:	add	r6, r2, #19
   1298c:	cmp	r1, #0
   12990:	strb	r0, [r2, #20]
   12994:	bmi	129e0 <putchar_unlocked@plt+0x15b4>
   12998:	mov	r0, r5
   1299c:	mov	r1, r4
   129a0:	mov	r2, #10
   129a4:	mov	r3, #0
   129a8:	bl	152f0 <putchar_unlocked@plt+0x3ec4>
   129ac:	add	r2, r0, r0, lsl #2
   129b0:	sub	r2, r5, r2, lsl #1
   129b4:	add	r2, r2, #48	; 0x30
   129b8:	strb	r2, [r6], #-1
   129bc:	adds	r2, r5, #9
   129c0:	mov	r5, r0
   129c4:	adc	r3, r4, #0
   129c8:	rsbs	r2, r2, #18
   129cc:	mov	r4, r1
   129d0:	rscs	r2, r3, #0
   129d4:	bcc	12998 <putchar_unlocked@plt+0x156c>
   129d8:	add	r6, r6, #1
   129dc:	b	12a28 <putchar_unlocked@plt+0x15fc>
   129e0:	mov	r0, r5
   129e4:	mov	r1, r4
   129e8:	mov	r2, #10
   129ec:	mov	r3, #0
   129f0:	bl	152f0 <putchar_unlocked@plt+0x3ec4>
   129f4:	add	r2, r0, r0, lsl #2
   129f8:	rsb	r2, r5, r2, lsl #1
   129fc:	add	r2, r2, #48	; 0x30
   12a00:	strb	r2, [r6], #-1
   12a04:	adds	r2, r5, #9
   12a08:	mov	r5, r0
   12a0c:	adc	r3, r4, #0
   12a10:	rsbs	r2, r2, #18
   12a14:	mov	r4, r1
   12a18:	rscs	r2, r3, #0
   12a1c:	bcc	129e0 <putchar_unlocked@plt+0x15b4>
   12a20:	mov	r0, #45	; 0x2d
   12a24:	strb	r0, [r6]
   12a28:	mov	r0, r6
   12a2c:	pop	{r4, r5, r6, sl, fp, pc}
   12a30:	push	{r4, r5, fp, lr}
   12a34:	add	fp, sp, #8
   12a38:	cmp	r0, #0
   12a3c:	beq	12ad0 <putchar_unlocked@plt+0x16a4>
   12a40:	mov	r1, #47	; 0x2f
   12a44:	mov	r4, r0
   12a48:	bl	1139c <strrchr@plt>
   12a4c:	cmp	r0, #0
   12a50:	mov	r5, r4
   12a54:	addne	r5, r0, #1
   12a58:	sub	r0, r5, r4
   12a5c:	cmp	r0, #7
   12a60:	blt	12ab4 <putchar_unlocked@plt+0x1688>
   12a64:	movw	r1, #23786	; 0x5cea
   12a68:	sub	r0, r5, #7
   12a6c:	mov	r2, #7
   12a70:	movt	r1, #1
   12a74:	bl	11408 <strncmp@plt>
   12a78:	cmp	r0, #0
   12a7c:	bne	12ab4 <putchar_unlocked@plt+0x1688>
   12a80:	movw	r1, #23794	; 0x5cf2
   12a84:	mov	r0, r5
   12a88:	mov	r2, #3
   12a8c:	movt	r1, #1
   12a90:	bl	11408 <strncmp@plt>
   12a94:	cmp	r0, #0
   12a98:	beq	12aa4 <putchar_unlocked@plt+0x1678>
   12a9c:	mov	r4, r5
   12aa0:	b	12ab4 <putchar_unlocked@plt+0x1688>
   12aa4:	movw	r0, #29032	; 0x7168
   12aa8:	add	r4, r5, #3
   12aac:	movt	r0, #2
   12ab0:	str	r4, [r0]
   12ab4:	movw	r0, #29036	; 0x716c
   12ab8:	movt	r0, #2
   12abc:	str	r4, [r0]
   12ac0:	movw	r0, #29172	; 0x71f4
   12ac4:	movt	r0, #2
   12ac8:	str	r4, [r0]
   12acc:	pop	{r4, r5, fp, pc}
   12ad0:	movw	r0, #29048	; 0x7178
   12ad4:	movt	r0, #2
   12ad8:	ldr	r1, [r0]
   12adc:	movw	r0, #23730	; 0x5cb2
   12ae0:	movt	r0, #1
   12ae4:	bl	113fc <fputs@plt>
   12ae8:	bl	11414 <abort@plt>
   12aec:	push	{r4, r5, r6, sl, fp, lr}
   12af0:	add	fp, sp, #16
   12af4:	mov	r4, r0
   12af8:	movw	r0, #29176	; 0x71f8
   12afc:	movt	r0, #2
   12b00:	cmp	r4, #0
   12b04:	moveq	r4, r0
   12b08:	bl	1130c <__errno_location@plt>
   12b0c:	ldr	r6, [r0]
   12b10:	mov	r5, r0
   12b14:	mov	r0, r4
   12b18:	mov	r1, #48	; 0x30
   12b1c:	bl	14fa4 <putchar_unlocked@plt+0x3b78>
   12b20:	str	r6, [r5]
   12b24:	pop	{r4, r5, r6, sl, fp, pc}
   12b28:	movw	r1, #29176	; 0x71f8
   12b2c:	cmp	r0, #0
   12b30:	movt	r1, #2
   12b34:	movne	r1, r0
   12b38:	ldr	r0, [r1]
   12b3c:	bx	lr
   12b40:	movw	r2, #29176	; 0x71f8
   12b44:	cmp	r0, #0
   12b48:	movt	r2, #2
   12b4c:	movne	r2, r0
   12b50:	str	r1, [r2]
   12b54:	bx	lr
   12b58:	movw	r3, #29176	; 0x71f8
   12b5c:	cmp	r0, #0
   12b60:	and	r2, r2, #1
   12b64:	movt	r3, #2
   12b68:	movne	r3, r0
   12b6c:	ubfx	r0, r1, #5, #3
   12b70:	and	r1, r1, #31
   12b74:	add	ip, r3, r0, lsl #2
   12b78:	mov	r0, #1
   12b7c:	ldr	r3, [ip, #8]
   12b80:	and	r0, r0, r3, lsr r1
   12b84:	eor	r2, r0, r2
   12b88:	eor	r1, r3, r2, lsl r1
   12b8c:	str	r1, [ip, #8]
   12b90:	bx	lr
   12b94:	movw	r2, #29176	; 0x71f8
   12b98:	cmp	r0, #0
   12b9c:	movt	r2, #2
   12ba0:	movne	r2, r0
   12ba4:	ldr	r0, [r2, #4]
   12ba8:	str	r1, [r2, #4]
   12bac:	bx	lr
   12bb0:	push	{fp, lr}
   12bb4:	mov	fp, sp
   12bb8:	movw	r3, #29176	; 0x71f8
   12bbc:	cmp	r0, #0
   12bc0:	movt	r3, #2
   12bc4:	movne	r3, r0
   12bc8:	cmp	r1, #0
   12bcc:	mov	r0, #10
   12bd0:	cmpne	r2, #0
   12bd4:	str	r0, [r3]
   12bd8:	bne	12be0 <putchar_unlocked@plt+0x17b4>
   12bdc:	bl	11414 <abort@plt>
   12be0:	str	r1, [r3, #40]	; 0x28
   12be4:	str	r2, [r3, #44]	; 0x2c
   12be8:	pop	{fp, pc}
   12bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bf0:	add	fp, sp, #28
   12bf4:	sub	sp, sp, #20
   12bf8:	mov	r7, r0
   12bfc:	ldr	r0, [fp, #8]
   12c00:	movw	r5, #29176	; 0x71f8
   12c04:	mov	r8, r3
   12c08:	mov	r9, r2
   12c0c:	mov	sl, r1
   12c10:	movt	r5, #2
   12c14:	cmp	r0, #0
   12c18:	movne	r5, r0
   12c1c:	bl	1130c <__errno_location@plt>
   12c20:	ldr	r2, [r5, #40]	; 0x28
   12c24:	ldr	r3, [r5, #44]	; 0x2c
   12c28:	mov	r4, r0
   12c2c:	ldm	r5, {r0, r1}
   12c30:	add	r5, r5, #8
   12c34:	ldr	r6, [r4]
   12c38:	stm	sp, {r0, r1, r5}
   12c3c:	mov	r0, r7
   12c40:	mov	r1, sl
   12c44:	str	r2, [sp, #12]
   12c48:	str	r3, [sp, #16]
   12c4c:	mov	r2, r9
   12c50:	mov	r3, r8
   12c54:	bl	12c64 <putchar_unlocked@plt+0x1838>
   12c58:	str	r6, [r4]
   12c5c:	sub	sp, fp, #28
   12c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c68:	add	fp, sp, #28
   12c6c:	sub	sp, sp, #156	; 0x9c
   12c70:	mov	r5, r0
   12c74:	add	r0, r2, #1
   12c78:	mov	r6, r1
   12c7c:	mov	sl, r3
   12c80:	str	r2, [fp, #-80]	; 0xffffffb0
   12c84:	str	r0, [sp, #72]	; 0x48
   12c88:	ldr	r0, [fp, #12]
   12c8c:	and	r1, r0, #1
   12c90:	str	r1, [sp, #32]
   12c94:	and	r1, r0, #4
   12c98:	str	r1, [sp, #28]
   12c9c:	ubfx	r9, r0, #1, #1
   12ca0:	bl	11228 <__ctype_get_mb_cur_max@plt>
   12ca4:	str	r0, [sp, #40]	; 0x28
   12ca8:	ldr	r0, [fp, #24]
   12cac:	ldr	r7, [fp, #8]
   12cb0:	mov	r1, #0
   12cb4:	mov	lr, #0
   12cb8:	str	r5, [fp, #-84]	; 0xffffffac
   12cbc:	str	r1, [sp, #60]	; 0x3c
   12cc0:	mov	r1, #1
   12cc4:	str	r1, [fp, #-48]	; 0xffffffd0
   12cc8:	str	r0, [sp, #80]	; 0x50
   12ccc:	ldr	r0, [fp, #20]
   12cd0:	str	r0, [sp, #76]	; 0x4c
   12cd4:	mov	r0, #0
   12cd8:	str	r0, [sp, #56]	; 0x38
   12cdc:	mov	r0, #0
   12ce0:	str	r0, [fp, #-88]	; 0xffffffa8
   12ce4:	mov	r0, #0
   12ce8:	str	r0, [fp, #-72]	; 0xffffffb8
   12cec:	mov	r0, #0
   12cf0:	cmp	r7, #10
   12cf4:	bhi	13cd0 <putchar_unlocked@plt+0x28a4>
   12cf8:	add	r1, pc, #24
   12cfc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12d00:	mov	ip, r6
   12d04:	mov	r8, #0
   12d08:	mov	r2, #1
   12d0c:	mov	r6, #0
   12d10:	mov	r3, sl
   12d14:	ldr	pc, [r1, r7, lsl #2]
   12d18:	andeq	r2, r1, r4, lsl #28
   12d1c:	andeq	r2, r1, r8, asr lr
   12d20:	andeq	r2, r1, r8, lsl lr
   12d24:	strdeq	r2, [r1], -ip
   12d28:	andeq	r2, r1, ip, asr #28
   12d2c:	andeq	r2, r1, r0, lsl #29
   12d30:	andeq	r2, r1, r8, lsr #28
   12d34:	andeq	r2, r1, r4, lsl #30
   12d38:	andeq	r2, r1, r4, asr #26
   12d3c:	andeq	r2, r1, r4, asr #26
   12d40:	andeq	r2, r1, r4, lsl #27
   12d44:	movw	r0, #23878	; 0x5d46
   12d48:	mov	r1, r7
   12d4c:	mov	r6, r5
   12d50:	mov	r4, ip
   12d54:	mov	r5, lr
   12d58:	movt	r0, #1
   12d5c:	bl	14434 <putchar_unlocked@plt+0x3008>
   12d60:	str	r0, [sp, #76]	; 0x4c
   12d64:	movw	r0, #23880	; 0x5d48
   12d68:	mov	r1, r7
   12d6c:	movt	r0, #1
   12d70:	bl	14434 <putchar_unlocked@plt+0x3008>
   12d74:	mov	lr, r5
   12d78:	mov	r5, r6
   12d7c:	mov	ip, r4
   12d80:	str	r0, [sp, #80]	; 0x50
   12d84:	mov	r8, #0
   12d88:	tst	r9, #1
   12d8c:	str	lr, [sp, #44]	; 0x2c
   12d90:	bne	12dc8 <putchar_unlocked@plt+0x199c>
   12d94:	ldr	r0, [sp, #76]	; 0x4c
   12d98:	ldrb	r0, [r0]
   12d9c:	cmp	r0, #0
   12da0:	beq	12dc8 <putchar_unlocked@plt+0x199c>
   12da4:	ldr	r1, [sp, #76]	; 0x4c
   12da8:	mov	r8, #0
   12dac:	add	r1, r1, #1
   12db0:	cmp	r8, ip
   12db4:	strbcc	r0, [r5, r8]
   12db8:	ldrb	r0, [r1, r8]
   12dbc:	add	r8, r8, #1
   12dc0:	cmp	r0, #0
   12dc4:	bne	12db0 <putchar_unlocked@plt+0x1984>
   12dc8:	ldr	r6, [sp, #80]	; 0x50
   12dcc:	mov	r4, ip
   12dd0:	mov	r0, r6
   12dd4:	bl	112f4 <strlen@plt>
   12dd8:	mov	ip, r4
   12ddc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12de0:	ldr	lr, [sp, #44]	; 0x2c
   12de4:	str	r6, [fp, #-88]	; 0xffffffa8
   12de8:	str	r0, [fp, #-72]	; 0xffffffb8
   12dec:	mov	r2, #1
   12df0:	mov	r6, r9
   12df4:	mov	r3, sl
   12df8:	b	12f04 <putchar_unlocked@plt+0x1ad8>
   12dfc:	mov	r0, #1
   12e00:	b	12e58 <putchar_unlocked@plt+0x1a2c>
   12e04:	mov	r7, #0
   12e08:	mov	r8, #0
   12e0c:	mov	r2, r0
   12e10:	mov	r6, #0
   12e14:	b	12f04 <putchar_unlocked@plt+0x1ad8>
   12e18:	tst	r9, #1
   12e1c:	bne	12e58 <putchar_unlocked@plt+0x1a2c>
   12e20:	mov	r2, r0
   12e24:	b	12eb0 <putchar_unlocked@plt+0x1a84>
   12e28:	mov	r0, #1
   12e2c:	mov	r8, #0
   12e30:	mov	r7, #5
   12e34:	mov	r2, #1
   12e38:	str	r0, [fp, #-72]	; 0xffffffb8
   12e3c:	movw	r0, #23876	; 0x5d44
   12e40:	movt	r0, #1
   12e44:	str	r0, [fp, #-88]	; 0xffffffa8
   12e48:	b	12e78 <putchar_unlocked@plt+0x1a4c>
   12e4c:	mov	r2, #1
   12e50:	tst	r9, #1
   12e54:	beq	12eb0 <putchar_unlocked@plt+0x1a84>
   12e58:	mov	r1, #1
   12e5c:	mov	r8, #0
   12e60:	mov	r7, #2
   12e64:	mov	r2, r0
   12e68:	str	r1, [fp, #-72]	; 0xffffffb8
   12e6c:	movw	r1, #23880	; 0x5d48
   12e70:	movt	r1, #1
   12e74:	str	r1, [fp, #-88]	; 0xffffffa8
   12e78:	mov	r6, #1
   12e7c:	b	12f04 <putchar_unlocked@plt+0x1ad8>
   12e80:	tst	r9, #1
   12e84:	beq	12ed4 <putchar_unlocked@plt+0x1aa8>
   12e88:	mov	r0, #1
   12e8c:	mov	r8, #0
   12e90:	mov	r2, #1
   12e94:	mov	r6, #1
   12e98:	mov	r7, #5
   12e9c:	str	r0, [fp, #-72]	; 0xffffffb8
   12ea0:	movw	r0, #23876	; 0x5d44
   12ea4:	movt	r0, #1
   12ea8:	str	r0, [fp, #-88]	; 0xffffffa8
   12eac:	b	12f04 <putchar_unlocked@plt+0x1ad8>
   12eb0:	cmp	ip, #0
   12eb4:	mov	r8, #1
   12eb8:	mov	r6, #0
   12ebc:	mov	r7, #2
   12ec0:	movne	r0, #39	; 0x27
   12ec4:	strbne	r0, [r5]
   12ec8:	movw	r0, #23880	; 0x5d48
   12ecc:	movt	r0, #1
   12ed0:	b	12ef8 <putchar_unlocked@plt+0x1acc>
   12ed4:	cmp	ip, #0
   12ed8:	mov	r8, #1
   12edc:	mov	r2, #1
   12ee0:	mov	r7, #5
   12ee4:	mov	r6, #0
   12ee8:	movne	r0, #34	; 0x22
   12eec:	strbne	r0, [r5]
   12ef0:	movw	r0, #23876	; 0x5d44
   12ef4:	movt	r0, #1
   12ef8:	str	r0, [fp, #-88]	; 0xffffffa8
   12efc:	mov	r0, #1
   12f00:	str	r0, [fp, #-72]	; 0xffffffb8
   12f04:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12f08:	str	r7, [fp, #-68]	; 0xffffffbc
   12f0c:	str	r6, [fp, #-76]	; 0xffffffb4
   12f10:	str	r2, [sp, #84]	; 0x54
   12f14:	cmp	r0, #0
   12f18:	movwne	r0, #1
   12f1c:	and	r1, r0, r6
   12f20:	and	r1, r2, r1
   12f24:	str	r1, [sp, #48]	; 0x30
   12f28:	sub	r1, r7, #2
   12f2c:	clz	r1, r1
   12f30:	lsr	r1, r1, #5
   12f34:	and	r1, r1, r6
   12f38:	str	r1, [sp, #64]	; 0x40
   12f3c:	subs	r1, r7, #2
   12f40:	eor	r7, r6, #1
   12f44:	movwne	r1, #1
   12f48:	str	r7, [sp, #92]	; 0x5c
   12f4c:	orr	r7, r1, r7
   12f50:	and	r1, r1, r2
   12f54:	and	r0, r0, r1
   12f58:	str	r7, [sp, #68]	; 0x44
   12f5c:	mov	r7, #0
   12f60:	str	r0, [fp, #-60]	; 0xffffffc4
   12f64:	orr	r0, r1, r6
   12f68:	ldr	r1, [fp, #16]
   12f6c:	eor	r0, r0, #1
   12f70:	clz	r1, r1
   12f74:	lsr	r1, r1, #5
   12f78:	orr	r0, r1, r0
   12f7c:	str	r0, [fp, #-64]	; 0xffffffc0
   12f80:	eor	r0, r2, #1
   12f84:	str	r0, [sp, #52]	; 0x34
   12f88:	cmn	r3, #1
   12f8c:	beq	12f9c <putchar_unlocked@plt+0x1b70>
   12f90:	cmp	r7, r3
   12f94:	bne	12fa8 <putchar_unlocked@plt+0x1b7c>
   12f98:	b	13b04 <putchar_unlocked@plt+0x26d8>
   12f9c:	ldrb	r0, [r4, r7]
   12fa0:	cmp	r0, #0
   12fa4:	beq	13b0c <putchar_unlocked@plt+0x26e0>
   12fa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12fac:	cmp	r0, #0
   12fb0:	beq	12ff8 <putchar_unlocked@plt+0x1bcc>
   12fb4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12fb8:	add	r5, r7, r0
   12fbc:	cmp	r0, #2
   12fc0:	bcc	1300c <putchar_unlocked@plt+0x1be0>
   12fc4:	mov	r0, #0
   12fc8:	cmn	r3, #1
   12fcc:	str	r0, [fp, #-56]	; 0xffffffc8
   12fd0:	bne	13014 <putchar_unlocked@plt+0x1be8>
   12fd4:	mov	r0, r4
   12fd8:	mov	r4, ip
   12fdc:	mov	r6, lr
   12fe0:	bl	112f4 <strlen@plt>
   12fe4:	mov	ip, r4
   12fe8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12fec:	mov	lr, r6
   12ff0:	mov	r3, r0
   12ff4:	b	13014 <putchar_unlocked@plt+0x1be8>
   12ff8:	mov	r0, #0
   12ffc:	mov	sl, r3
   13000:	str	r0, [fp, #-56]	; 0xffffffc8
   13004:	mov	r0, #0
   13008:	b	13080 <putchar_unlocked@plt+0x1c54>
   1300c:	mov	r0, #0
   13010:	str	r0, [fp, #-56]	; 0xffffffc8
   13014:	cmp	r5, r3
   13018:	bls	1302c <putchar_unlocked@plt+0x1c00>
   1301c:	ldr	r5, [fp, #-84]	; 0xffffffac
   13020:	mov	r0, #0
   13024:	mov	sl, r3
   13028:	b	13080 <putchar_unlocked@plt+0x1c54>
   1302c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13030:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13034:	add	r0, r4, r7
   13038:	mov	r5, lr
   1303c:	mov	r6, ip
   13040:	mov	sl, r3
   13044:	bl	112e8 <bcmp@plt>
   13048:	ldr	r2, [sp, #92]	; 0x5c
   1304c:	cmp	r0, #0
   13050:	ldr	r3, [fp, #-84]	; 0xffffffac
   13054:	mov	r1, r0
   13058:	movwne	r1, #1
   1305c:	orr	r1, r1, r2
   13060:	tst	r1, #1
   13064:	beq	13b90 <putchar_unlocked@plt+0x2764>
   13068:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1306c:	clz	r0, r0
   13070:	mov	lr, r5
   13074:	mov	ip, r6
   13078:	mov	r5, r3
   1307c:	lsr	r0, r0, #5
   13080:	str	r0, [fp, #-52]	; 0xffffffcc
   13084:	ldrb	r6, [r4, r7]
   13088:	cmp	r6, #126	; 0x7e
   1308c:	bhi	135b4 <putchar_unlocked@plt+0x2188>
   13090:	add	r3, pc, #16
   13094:	mov	r9, #1
   13098:	mov	r2, #110	; 0x6e
   1309c:	mov	r0, #97	; 0x61
   130a0:	mov	r1, #0
   130a4:	ldr	pc, [r3, r6, lsl #2]
   130a8:	andeq	r3, r1, r8, lsl r4
   130ac:			; <UNDEFINED> instruction: 0x000135b4
   130b0:			; <UNDEFINED> instruction: 0x000135b4
   130b4:			; <UNDEFINED> instruction: 0x000135b4
   130b8:			; <UNDEFINED> instruction: 0x000135b4
   130bc:			; <UNDEFINED> instruction: 0x000135b4
   130c0:			; <UNDEFINED> instruction: 0x000135b4
   130c4:	andeq	r3, r1, r4, lsr r6
   130c8:	strdeq	r3, [r1], -r8
   130cc:	strdeq	r3, [r1], -r0
   130d0:	andeq	r3, r1, r4, lsl #8
   130d4:	andeq	r3, r1, ip, lsl r5
   130d8:	andeq	r3, r1, r8, ror #7
   130dc:	andeq	r3, r1, r0, lsl #8
   130e0:			; <UNDEFINED> instruction: 0x000135b4
   130e4:			; <UNDEFINED> instruction: 0x000135b4
   130e8:			; <UNDEFINED> instruction: 0x000135b4
   130ec:			; <UNDEFINED> instruction: 0x000135b4
   130f0:			; <UNDEFINED> instruction: 0x000135b4
   130f4:			; <UNDEFINED> instruction: 0x000135b4
   130f8:			; <UNDEFINED> instruction: 0x000135b4
   130fc:			; <UNDEFINED> instruction: 0x000135b4
   13100:			; <UNDEFINED> instruction: 0x000135b4
   13104:			; <UNDEFINED> instruction: 0x000135b4
   13108:			; <UNDEFINED> instruction: 0x000135b4
   1310c:			; <UNDEFINED> instruction: 0x000135b4
   13110:			; <UNDEFINED> instruction: 0x000135b4
   13114:			; <UNDEFINED> instruction: 0x000135b4
   13118:			; <UNDEFINED> instruction: 0x000135b4
   1311c:			; <UNDEFINED> instruction: 0x000135b4
   13120:			; <UNDEFINED> instruction: 0x000135b4
   13124:			; <UNDEFINED> instruction: 0x000135b4
   13128:	muleq	r1, r8, r3
   1312c:	muleq	r1, ip, r3
   13130:	muleq	r1, ip, r3
   13134:	andeq	r3, r1, r0, lsl #7
   13138:	muleq	r1, ip, r3
   1313c:	andeq	r3, r1, r4, lsr #5
   13140:	muleq	r1, ip, r3
   13144:	andeq	r3, r1, r4, lsr #10
   13148:	muleq	r1, ip, r3
   1314c:	muleq	r1, ip, r3
   13150:	muleq	r1, ip, r3
   13154:	andeq	r3, r1, r4, lsr #5
   13158:	andeq	r3, r1, r4, lsr #5
   1315c:	andeq	r3, r1, r4, lsr #5
   13160:	andeq	r3, r1, r4, lsr #5
   13164:	andeq	r3, r1, r4, lsr #5
   13168:	andeq	r3, r1, r4, lsr #5
   1316c:	andeq	r3, r1, r4, lsr #5
   13170:	andeq	r3, r1, r4, lsr #5
   13174:	andeq	r3, r1, r4, lsr #5
   13178:	andeq	r3, r1, r4, lsr #5
   1317c:	andeq	r3, r1, r4, lsr #5
   13180:	andeq	r3, r1, r4, lsr #5
   13184:	andeq	r3, r1, r4, lsr #5
   13188:	andeq	r3, r1, r4, lsr #5
   1318c:	andeq	r3, r1, r4, lsr #5
   13190:	andeq	r3, r1, r4, lsr #5
   13194:	muleq	r1, ip, r3
   13198:	muleq	r1, ip, r3
   1319c:	muleq	r1, ip, r3
   131a0:	muleq	r1, ip, r3
   131a4:	strdeq	r3, [r1], -r0
   131a8:			; <UNDEFINED> instruction: 0x000135b4
   131ac:	andeq	r3, r1, r4, lsr #5
   131b0:	andeq	r3, r1, r4, lsr #5
   131b4:	andeq	r3, r1, r4, lsr #5
   131b8:	andeq	r3, r1, r4, lsr #5
   131bc:	andeq	r3, r1, r4, lsr #5
   131c0:	andeq	r3, r1, r4, lsr #5
   131c4:	andeq	r3, r1, r4, lsr #5
   131c8:	andeq	r3, r1, r4, lsr #5
   131cc:	andeq	r3, r1, r4, lsr #5
   131d0:	andeq	r3, r1, r4, lsr #5
   131d4:	andeq	r3, r1, r4, lsr #5
   131d8:	andeq	r3, r1, r4, lsr #5
   131dc:	andeq	r3, r1, r4, lsr #5
   131e0:	andeq	r3, r1, r4, lsr #5
   131e4:	andeq	r3, r1, r4, lsr #5
   131e8:	andeq	r3, r1, r4, lsr #5
   131ec:	andeq	r3, r1, r4, lsr #5
   131f0:	andeq	r3, r1, r4, lsr #5
   131f4:	andeq	r3, r1, r4, lsr #5
   131f8:	andeq	r3, r1, r4, lsr #5
   131fc:	andeq	r3, r1, r4, lsr #5
   13200:	andeq	r3, r1, r4, lsr #5
   13204:	andeq	r3, r1, r4, lsr #5
   13208:	andeq	r3, r1, r4, lsr #5
   1320c:	andeq	r3, r1, r4, lsr #5
   13210:	andeq	r3, r1, r4, lsr #5
   13214:	muleq	r1, ip, r3
   13218:	andeq	r3, r1, r4, asr #7
   1321c:	andeq	r3, r1, r4, lsr #5
   13220:	muleq	r1, ip, r3
   13224:	andeq	r3, r1, r4, lsr #5
   13228:	muleq	r1, ip, r3
   1322c:	andeq	r3, r1, r4, lsr #5
   13230:	andeq	r3, r1, r4, lsr #5
   13234:	andeq	r3, r1, r4, lsr #5
   13238:	andeq	r3, r1, r4, lsr #5
   1323c:	andeq	r3, r1, r4, lsr #5
   13240:	andeq	r3, r1, r4, lsr #5
   13244:	andeq	r3, r1, r4, lsr #5
   13248:	andeq	r3, r1, r4, lsr #5
   1324c:	andeq	r3, r1, r4, lsr #5
   13250:	andeq	r3, r1, r4, lsr #5
   13254:	andeq	r3, r1, r4, lsr #5
   13258:	andeq	r3, r1, r4, lsr #5
   1325c:	andeq	r3, r1, r4, lsr #5
   13260:	andeq	r3, r1, r4, lsr #5
   13264:	andeq	r3, r1, r4, lsr #5
   13268:	andeq	r3, r1, r4, lsr #5
   1326c:	andeq	r3, r1, r4, lsr #5
   13270:	andeq	r3, r1, r4, lsr #5
   13274:	andeq	r3, r1, r4, lsr #5
   13278:	andeq	r3, r1, r4, lsr #5
   1327c:	andeq	r3, r1, r4, lsr #5
   13280:	andeq	r3, r1, r4, lsr #5
   13284:	andeq	r3, r1, r4, lsr #5
   13288:	andeq	r3, r1, r4, lsr #5
   1328c:	andeq	r3, r1, r4, lsr #5
   13290:	andeq	r3, r1, r4, lsr #5
   13294:	andeq	r3, r1, r8, asr r3
   13298:	muleq	r1, ip, r3
   1329c:	andeq	r3, r1, r8, asr r3
   132a0:	andeq	r3, r1, r0, lsl #7
   132a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132a8:	tst	r0, #1
   132ac:	bne	132d8 <putchar_unlocked@plt+0x1eac>
   132b0:	ldr	r1, [fp, #16]
   132b4:	ubfx	r0, r6, #5, #3
   132b8:	mov	r2, #1
   132bc:	ldr	r0, [r1, r0, lsl #2]
   132c0:	and	r1, r6, #31
   132c4:	tst	r0, r2, lsl r1
   132c8:	beq	132d8 <putchar_unlocked@plt+0x1eac>
   132cc:	mov	r0, r6
   132d0:	mov	r1, r9
   132d4:	b	132ec <putchar_unlocked@plt+0x1ec0>
   132d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   132dc:	mov	r1, r9
   132e0:	cmp	r0, #0
   132e4:	mov	r0, r6
   132e8:	beq	13a38 <putchar_unlocked@plt+0x260c>
   132ec:	ldr	r2, [fp, #-76]	; 0xffffffb4
   132f0:	tst	r2, #1
   132f4:	bne	13bd4 <putchar_unlocked@plt+0x27a8>
   132f8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   132fc:	subs	r2, r2, #2
   13300:	movwne	r2, #1
   13304:	orr	r2, r2, lr
   13308:	tst	r2, #1
   1330c:	bne	13344 <putchar_unlocked@plt+0x1f18>
   13310:	cmp	r8, ip
   13314:	mov	lr, #1
   13318:	movcc	r2, #39	; 0x27
   1331c:	strbcc	r2, [r5, r8]
   13320:	add	r2, r8, #1
   13324:	cmp	r2, ip
   13328:	movcc	r3, #36	; 0x24
   1332c:	strbcc	r3, [r5, r2]
   13330:	add	r2, r8, #2
   13334:	add	r8, r8, #3
   13338:	cmp	r2, ip
   1333c:	movcc	r3, #39	; 0x27
   13340:	strbcc	r3, [r5, r2]
   13344:	cmp	r8, ip
   13348:	movcc	r2, #92	; 0x5c
   1334c:	strbcc	r2, [r5, r8]
   13350:	add	r8, r8, #1
   13354:	b	13a78 <putchar_unlocked@plt+0x264c>
   13358:	cmp	sl, #1
   1335c:	beq	13380 <putchar_unlocked@plt+0x1f54>
   13360:	mov	r9, #0
   13364:	cmn	sl, #1
   13368:	bne	1338c <putchar_unlocked@plt+0x1f60>
   1336c:	ldrb	r0, [r4, #1]
   13370:	cmp	r0, #0
   13374:	beq	13380 <putchar_unlocked@plt+0x1f54>
   13378:	mvn	sl, #0
   1337c:	b	1338c <putchar_unlocked@plt+0x1f60>
   13380:	mov	r9, #0
   13384:	cmp	r7, #0
   13388:	beq	13398 <putchar_unlocked@plt+0x1f6c>
   1338c:	mov	r0, #0
   13390:	str	r0, [fp, #-56]	; 0xffffffc8
   13394:	b	132a4 <putchar_unlocked@plt+0x1e78>
   13398:	mov	r1, #1
   1339c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   133a0:	cmp	r0, #2
   133a4:	bne	133bc <putchar_unlocked@plt+0x1f90>
   133a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   133ac:	mov	r9, r1
   133b0:	tst	r0, #1
   133b4:	beq	132a4 <putchar_unlocked@plt+0x1e78>
   133b8:	b	13bd4 <putchar_unlocked@plt+0x27a8>
   133bc:	mov	r9, r1
   133c0:	b	132a4 <putchar_unlocked@plt+0x1e78>
   133c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   133c8:	cmp	r0, #2
   133cc:	bne	13610 <putchar_unlocked@plt+0x21e4>
   133d0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   133d4:	tst	r0, #1
   133d8:	bne	13bd4 <putchar_unlocked@plt+0x27a8>
   133dc:	mov	r0, #0
   133e0:	str	r0, [fp, #-56]	; 0xffffffc8
   133e4:	b	13628 <putchar_unlocked@plt+0x21fc>
   133e8:	mov	r0, #102	; 0x66
   133ec:	b	13634 <putchar_unlocked@plt+0x2208>
   133f0:	mov	r2, #116	; 0x74
   133f4:	b	13404 <putchar_unlocked@plt+0x1fd8>
   133f8:	mov	r0, #98	; 0x62
   133fc:	b	13634 <putchar_unlocked@plt+0x2208>
   13400:	mov	r2, #114	; 0x72
   13404:	ldr	r0, [sp, #68]	; 0x44
   13408:	tst	r0, #1
   1340c:	mov	r0, r2
   13410:	bne	13634 <putchar_unlocked@plt+0x2208>
   13414:	b	13bd4 <putchar_unlocked@plt+0x27a8>
   13418:	ldr	r0, [sp, #84]	; 0x54
   1341c:	tst	r0, #1
   13420:	beq	13654 <putchar_unlocked@plt+0x2228>
   13424:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13428:	tst	r0, #1
   1342c:	bne	13cc0 <putchar_unlocked@plt+0x2894>
   13430:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13434:	mov	r2, sl
   13438:	subs	r0, r0, #2
   1343c:	movwne	r0, #1
   13440:	orr	r0, r0, lr
   13444:	tst	r0, #1
   13448:	bne	13480 <putchar_unlocked@plt+0x2054>
   1344c:	cmp	r8, ip
   13450:	mov	lr, #1
   13454:	movcc	r0, #39	; 0x27
   13458:	strbcc	r0, [r5, r8]
   1345c:	add	r0, r8, #1
   13460:	cmp	r0, ip
   13464:	movcc	r1, #36	; 0x24
   13468:	strbcc	r1, [r5, r0]
   1346c:	add	r0, r8, #2
   13470:	add	r8, r8, #3
   13474:	cmp	r0, ip
   13478:	movcc	r1, #39	; 0x27
   1347c:	strbcc	r1, [r5, r0]
   13480:	mov	r1, #1
   13484:	cmp	r8, ip
   13488:	mov	r9, #0
   1348c:	mov	r6, #48	; 0x30
   13490:	str	r1, [fp, #-56]	; 0xffffffc8
   13494:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13498:	movcc	r0, #92	; 0x5c
   1349c:	strbcc	r0, [r5, r8]
   134a0:	add	r0, r8, #1
   134a4:	cmp	r1, #2
   134a8:	beq	137b0 <putchar_unlocked@plt+0x2384>
   134ac:	add	r1, r7, #1
   134b0:	cmp	r1, r2
   134b4:	bcs	137b0 <putchar_unlocked@plt+0x2384>
   134b8:	ldrb	r1, [r4, r1]
   134bc:	sub	r1, r1, #48	; 0x30
   134c0:	uxtb	r1, r1
   134c4:	cmp	r1, #9
   134c8:	bhi	137b0 <putchar_unlocked@plt+0x2384>
   134cc:	cmp	r0, ip
   134d0:	movcc	r1, #48	; 0x30
   134d4:	strbcc	r1, [r5, r0]
   134d8:	add	r0, r8, #2
   134dc:	add	r8, r8, #3
   134e0:	cmp	r0, ip
   134e4:	movcc	r1, #48	; 0x30
   134e8:	strbcc	r1, [r5, r0]
   134ec:	b	132a4 <putchar_unlocked@plt+0x1e78>
   134f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   134f4:	mov	r6, #63	; 0x3f
   134f8:	cmp	r0, #5
   134fc:	beq	137b8 <putchar_unlocked@plt+0x238c>
   13500:	mov	r1, #0
   13504:	cmp	r0, #2
   13508:	str	r1, [fp, #-56]	; 0xffffffc8
   1350c:	bne	1386c <putchar_unlocked@plt+0x2440>
   13510:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13514:	mov	r9, #0
   13518:	b	133b0 <putchar_unlocked@plt+0x1f84>
   1351c:	mov	r0, #118	; 0x76
   13520:	b	13634 <putchar_unlocked@plt+0x2208>
   13524:	mov	r0, #1
   13528:	mov	r6, #39	; 0x27
   1352c:	str	r0, [sp, #60]	; 0x3c
   13530:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13534:	cmp	r0, #2
   13538:	bne	135ac <putchar_unlocked@plt+0x2180>
   1353c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13540:	tst	r0, #1
   13544:	bne	13bd4 <putchar_unlocked@plt+0x27a8>
   13548:	ldr	r2, [sp, #56]	; 0x38
   1354c:	clz	r1, ip
   13550:	mov	lr, #0
   13554:	lsr	r1, r1, #5
   13558:	cmp	r2, #0
   1355c:	mov	r0, r2
   13560:	movwne	r0, #1
   13564:	orrs	r0, r0, r1
   13568:	moveq	r2, ip
   1356c:	moveq	ip, r0
   13570:	cmp	r8, ip
   13574:	str	r2, [sp, #56]	; 0x38
   13578:	movcc	r0, #39	; 0x27
   1357c:	strbcc	r0, [r5, r8]
   13580:	add	r0, r8, #1
   13584:	cmp	r0, ip
   13588:	movcc	r1, #92	; 0x5c
   1358c:	strbcc	r1, [r5, r0]
   13590:	add	r0, r8, #2
   13594:	add	r8, r8, #3
   13598:	cmp	r0, ip
   1359c:	movcc	r1, #39	; 0x27
   135a0:	strbcc	r1, [r5, r0]
   135a4:	mov	r0, #0
   135a8:	str	r0, [fp, #-56]	; 0xffffffc8
   135ac:	mov	r9, #1
   135b0:	b	132a4 <putchar_unlocked@plt+0x1e78>
   135b4:	ldr	r0, [sp, #40]	; 0x28
   135b8:	str	lr, [sp, #44]	; 0x2c
   135bc:	str	ip, [sp, #88]	; 0x58
   135c0:	cmp	r0, #1
   135c4:	bne	13674 <putchar_unlocked@plt+0x2248>
   135c8:	str	sl, [sp, #36]	; 0x24
   135cc:	bl	112d0 <__ctype_b_loc@plt>
   135d0:	ldr	r0, [r0]
   135d4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   135d8:	mov	r1, #1
   135dc:	add	r0, r0, r6, lsl #1
   135e0:	ldrb	r0, [r0, #1]
   135e4:	ubfx	r9, r0, #6, #1
   135e8:	ldr	r0, [sp, #52]	; 0x34
   135ec:	ldr	lr, [sp, #44]	; 0x2c
   135f0:	cmp	r1, #1
   135f4:	orr	r3, r9, r0
   135f8:	bhi	13874 <putchar_unlocked@plt+0x2448>
   135fc:	tst	r3, #1
   13600:	beq	13874 <putchar_unlocked@plt+0x2448>
   13604:	ldr	sl, [sp, #36]	; 0x24
   13608:	ldr	ip, [sp, #88]	; 0x58
   1360c:	b	132a4 <putchar_unlocked@plt+0x1e78>
   13610:	ldr	r1, [sp, #48]	; 0x30
   13614:	mov	r0, #0
   13618:	str	r0, [fp, #-56]	; 0xffffffc8
   1361c:	mov	r0, #92	; 0x5c
   13620:	cmp	r1, #0
   13624:	beq	13634 <putchar_unlocked@plt+0x2208>
   13628:	mov	r6, #92	; 0x5c
   1362c:	mov	r9, #0
   13630:	b	13a38 <putchar_unlocked@plt+0x260c>
   13634:	mov	r1, #0
   13638:	mov	r9, #0
   1363c:	str	r1, [fp, #-56]	; 0xffffffc8
   13640:	ldr	r1, [sp, #84]	; 0x54
   13644:	tst	r1, #1
   13648:	mov	r1, #0
   1364c:	beq	132a4 <putchar_unlocked@plt+0x1e78>
   13650:	b	132ec <putchar_unlocked@plt+0x1ec0>
   13654:	ldr	r0, [sp, #32]
   13658:	mov	r6, #0
   1365c:	mov	r9, #0
   13660:	cmp	r0, #0
   13664:	mov	r0, #0
   13668:	str	r0, [fp, #-56]	; 0xffffffc8
   1366c:	beq	132a4 <putchar_unlocked@plt+0x1e78>
   13670:	b	13a90 <putchar_unlocked@plt+0x2664>
   13674:	mov	r0, #0
   13678:	cmn	sl, #1
   1367c:	sub	r3, fp, #40	; 0x28
   13680:	str	r0, [fp, #-36]	; 0xffffffdc
   13684:	str	r0, [fp, #-40]	; 0xffffffd8
   13688:	bne	136a0 <putchar_unlocked@plt+0x2274>
   1368c:	mov	r0, r4
   13690:	bl	112f4 <strlen@plt>
   13694:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13698:	sub	r3, fp, #40	; 0x28
   1369c:	mov	sl, r0
   136a0:	ldr	r0, [sp, #72]	; 0x48
   136a4:	mov	r9, #1
   136a8:	mov	r1, #0
   136ac:	str	sl, [sp, #36]	; 0x24
   136b0:	add	r0, r0, r7
   136b4:	str	r0, [sp, #20]
   136b8:	add	r0, r1, r7
   136bc:	str	r1, [sp, #24]
   136c0:	add	r1, r4, r0
   136c4:	mov	r4, r0
   136c8:	sub	r2, sl, r0
   136cc:	sub	r0, fp, #44	; 0x2c
   136d0:	bl	15250 <putchar_unlocked@plt+0x3e24>
   136d4:	cmp	r0, #0
   136d8:	beq	13ae4 <putchar_unlocked@plt+0x26b8>
   136dc:	cmn	r0, #1
   136e0:	beq	13a9c <putchar_unlocked@plt+0x2670>
   136e4:	ldr	r2, [sp, #36]	; 0x24
   136e8:	cmn	r0, #2
   136ec:	beq	13aa4 <putchar_unlocked@plt+0x2678>
   136f0:	ldr	r2, [sp, #64]	; 0x40
   136f4:	ldr	ip, [sp, #88]	; 0x58
   136f8:	ldr	r4, [sp, #84]	; 0x54
   136fc:	ldr	lr, [fp, #-48]	; 0xffffffd0
   13700:	cmp	r0, #2
   13704:	mov	r1, #0
   13708:	movwcc	r1, #1
   1370c:	eor	r2, r2, #1
   13710:	orrs	r1, r2, r1
   13714:	bne	13764 <putchar_unlocked@plt+0x2338>
   13718:	ldr	r1, [sp, #24]
   1371c:	ldr	r2, [sp, #20]
   13720:	add	r1, r2, r1
   13724:	sub	r2, r0, #1
   13728:	ldrb	r3, [r1]
   1372c:	sub	r5, r3, #94	; 0x5e
   13730:	cmp	r5, #30
   13734:	bhi	1374c <putchar_unlocked@plt+0x2320>
   13738:	mov	r4, #1
   1373c:	mov	sl, #1073741829	; 0x40000005
   13740:	tst	sl, r4, lsl r5
   13744:	ldr	r4, [sp, #84]	; 0x54
   13748:	bne	13bac <putchar_unlocked@plt+0x2780>
   1374c:	sub	r3, r3, #91	; 0x5b
   13750:	cmp	r3, #2
   13754:	bcc	13bac <putchar_unlocked@plt+0x2780>
   13758:	add	r1, r1, #1
   1375c:	subs	r2, r2, #1
   13760:	bne	13728 <putchar_unlocked@plt+0x22fc>
   13764:	ldr	r5, [sp, #24]
   13768:	str	lr, [fp, #-48]	; 0xffffffd0
   1376c:	add	r5, r0, r5
   13770:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13774:	bl	11210 <iswprint@plt>
   13778:	cmp	r0, #0
   1377c:	sub	r4, fp, #40	; 0x28
   13780:	movwne	r0, #1
   13784:	and	r9, r9, r0
   13788:	mov	r0, r4
   1378c:	bl	111a4 <mbsinit@plt>
   13790:	mov	r1, r5
   13794:	mov	r3, r4
   13798:	ldr	sl, [sp, #36]	; 0x24
   1379c:	ldr	r5, [fp, #-84]	; 0xffffffac
   137a0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   137a4:	cmp	r0, #0
   137a8:	beq	136b8 <putchar_unlocked@plt+0x228c>
   137ac:	b	135e8 <putchar_unlocked@plt+0x21bc>
   137b0:	mov	r8, r0
   137b4:	b	132a4 <putchar_unlocked@plt+0x1e78>
   137b8:	mov	r0, #0
   137bc:	str	r0, [fp, #-56]	; 0xffffffc8
   137c0:	ldr	r0, [sp, #28]
   137c4:	cmp	r0, #0
   137c8:	beq	1386c <putchar_unlocked@plt+0x2440>
   137cc:	add	r0, r7, #2
   137d0:	mov	r1, sl
   137d4:	cmp	r0, sl
   137d8:	bcs	1386c <putchar_unlocked@plt+0x2440>
   137dc:	add	r1, r7, r4
   137e0:	ldrb	r1, [r1, #1]
   137e4:	cmp	r1, #63	; 0x3f
   137e8:	bne	1386c <putchar_unlocked@plt+0x2440>
   137ec:	ldrb	r9, [r4, r0]
   137f0:	sub	r2, r9, #33	; 0x21
   137f4:	cmp	r2, #29
   137f8:	bhi	1386c <putchar_unlocked@plt+0x2440>
   137fc:	mov	r1, r4
   13800:	movw	r4, #20929	; 0x51c1
   13804:	mov	r3, #1
   13808:	movt	r4, #14336	; 0x3800
   1380c:	tst	r4, r3, lsl r2
   13810:	beq	13af8 <putchar_unlocked@plt+0x26cc>
   13814:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13818:	tst	r2, #1
   1381c:	bne	13cc8 <putchar_unlocked@plt+0x289c>
   13820:	cmp	r8, ip
   13824:	mov	r4, r1
   13828:	mov	r7, r0
   1382c:	mov	r6, r9
   13830:	movcc	r2, #63	; 0x3f
   13834:	strbcc	r2, [r5, r8]
   13838:	add	r2, r8, #1
   1383c:	cmp	r2, ip
   13840:	movcc	r3, #34	; 0x22
   13844:	strbcc	r3, [r5, r2]
   13848:	add	r2, r8, #2
   1384c:	cmp	r2, ip
   13850:	movcc	r3, #34	; 0x22
   13854:	strbcc	r3, [r5, r2]
   13858:	add	r2, r8, #3
   1385c:	add	r8, r8, #4
   13860:	cmp	r2, ip
   13864:	movcc	r3, #63	; 0x3f
   13868:	strbcc	r3, [r5, r2]
   1386c:	mov	r9, #0
   13870:	b	132a4 <putchar_unlocked@plt+0x1e78>
   13874:	ldr	sl, [sp, #36]	; 0x24
   13878:	add	r0, r1, r7
   1387c:	mov	r2, #0
   13880:	str	r3, [sp, #24]
   13884:	str	r0, [fp, #-56]	; 0xffffffc8
   13888:	tst	r3, #1
   1388c:	beq	138b8 <putchar_unlocked@plt+0x248c>
   13890:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13894:	tst	r0, #1
   13898:	beq	13980 <putchar_unlocked@plt+0x2554>
   1389c:	ldr	r1, [sp, #88]	; 0x58
   138a0:	mov	r0, r3
   138a4:	cmp	r8, r1
   138a8:	movcc	r1, #92	; 0x5c
   138ac:	strbcc	r1, [r5, r8]
   138b0:	add	r8, r8, #1
   138b4:	b	13984 <putchar_unlocked@plt+0x2558>
   138b8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   138bc:	tst	r1, #1
   138c0:	bne	13bd0 <putchar_unlocked@plt+0x27a4>
   138c4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   138c8:	subs	r2, r1, #2
   138cc:	movwne	r2, #1
   138d0:	orr	r2, r2, lr
   138d4:	tst	r2, #1
   138d8:	bne	1391c <putchar_unlocked@plt+0x24f0>
   138dc:	ldr	r1, [sp, #88]	; 0x58
   138e0:	add	r2, r8, #1
   138e4:	mov	lr, #1
   138e8:	cmp	r8, r1
   138ec:	movcc	r1, #39	; 0x27
   138f0:	strbcc	r1, [r5, r8]
   138f4:	ldr	r1, [sp, #88]	; 0x58
   138f8:	cmp	r2, r1
   138fc:	movcc	r1, #36	; 0x24
   13900:	strbcc	r1, [r5, r2]
   13904:	ldr	r1, [sp, #88]	; 0x58
   13908:	add	r2, r8, #2
   1390c:	add	r8, r8, #3
   13910:	cmp	r2, r1
   13914:	movcc	r1, #39	; 0x27
   13918:	strbcc	r1, [r5, r2]
   1391c:	ldr	r1, [sp, #88]	; 0x58
   13920:	add	r2, r8, #1
   13924:	mov	r0, r3
   13928:	cmp	r8, r1
   1392c:	movcc	r1, #92	; 0x5c
   13930:	strbcc	r1, [r5, r8]
   13934:	ldr	r1, [sp, #88]	; 0x58
   13938:	cmp	r2, r1
   1393c:	bcs	13950 <putchar_unlocked@plt+0x2524>
   13940:	uxtb	r3, r6
   13944:	mov	r1, #48	; 0x30
   13948:	orr	r3, r1, r3, lsr #6
   1394c:	strb	r3, [r5, r2]
   13950:	ldr	r1, [sp, #88]	; 0x58
   13954:	add	r2, r8, #2
   13958:	add	r8, r8, #3
   1395c:	cmp	r2, r1
   13960:	lsrcc	r3, r6, #3
   13964:	movcc	r1, #6
   13968:	bficc	r3, r1, #3, #29
   1396c:	mov	r1, #6
   13970:	bfi	r6, r1, #3, #29
   13974:	strbcc	r3, [r5, r2]
   13978:	mov	r2, #1
   1397c:	b	1398c <putchar_unlocked@plt+0x2560>
   13980:	mov	r0, r3
   13984:	mov	r1, #0
   13988:	str	r1, [fp, #-52]	; 0xffffffcc
   1398c:	mov	ip, r2
   13990:	and	r1, r2, #1
   13994:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13998:	add	r3, r7, #1
   1399c:	cmp	r2, r3
   139a0:	bls	13a28 <putchar_unlocked@plt+0x25fc>
   139a4:	cmp	r1, #0
   139a8:	mvn	r5, lr
   139ac:	movwne	r1, #1
   139b0:	orr	r5, r5, r1
   139b4:	tst	r5, #1
   139b8:	bne	139fc <putchar_unlocked@plt+0x25d0>
   139bc:	ldr	r1, [sp, #88]	; 0x58
   139c0:	ldr	r5, [fp, #-84]	; 0xffffffac
   139c4:	mov	r2, r4
   139c8:	ldr	r4, [sp, #88]	; 0x58
   139cc:	ldr	r0, [sp, #24]
   139d0:	mov	lr, #0
   139d4:	cmp	r8, r1
   139d8:	movcc	r1, #39	; 0x27
   139dc:	strbcc	r1, [r5, r8]
   139e0:	add	r1, r8, #1
   139e4:	add	r8, r8, #2
   139e8:	cmp	r1, r4
   139ec:	movcc	r4, #39	; 0x27
   139f0:	strbcc	r4, [r5, r1]
   139f4:	mov	r4, r2
   139f8:	b	13a00 <putchar_unlocked@plt+0x25d4>
   139fc:	ldr	r5, [fp, #-84]	; 0xffffffac
   13a00:	ldr	r1, [sp, #88]	; 0x58
   13a04:	mov	r2, ip
   13a08:	cmp	r8, r1
   13a0c:	ldr	r1, [sp, #72]	; 0x48
   13a10:	strbcc	r6, [r5, r8]
   13a14:	add	r8, r8, #1
   13a18:	ldrb	r6, [r1, r7]
   13a1c:	mov	r7, r3
   13a20:	mov	r3, r0
   13a24:	b	13888 <putchar_unlocked@plt+0x245c>
   13a28:	ldr	ip, [sp, #88]	; 0x58
   13a2c:	cmp	r1, #0
   13a30:	movwne	r1, #1
   13a34:	str	r1, [fp, #-56]	; 0xffffffc8
   13a38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13a3c:	cmp	r0, #0
   13a40:	bne	13a70 <putchar_unlocked@plt+0x2644>
   13a44:	tst	lr, #1
   13a48:	beq	13a70 <putchar_unlocked@plt+0x2644>
   13a4c:	cmp	r8, ip
   13a50:	mov	lr, #0
   13a54:	movcc	r0, #39	; 0x27
   13a58:	strbcc	r0, [r5, r8]
   13a5c:	add	r0, r8, #1
   13a60:	add	r8, r8, #2
   13a64:	cmp	r0, ip
   13a68:	movcc	r1, #39	; 0x27
   13a6c:	strbcc	r1, [r5, r0]
   13a70:	mov	r1, r9
   13a74:	mov	r0, r6
   13a78:	cmp	r8, ip
   13a7c:	strbcc	r0, [r5, r8]
   13a80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13a84:	add	r8, r8, #1
   13a88:	and	r0, r0, r1
   13a8c:	str	r0, [fp, #-48]	; 0xffffffd0
   13a90:	mov	r3, sl
   13a94:	add	r7, r7, #1
   13a98:	b	12f88 <putchar_unlocked@plt+0x1b5c>
   13a9c:	mov	r9, #0
   13aa0:	b	13ae4 <putchar_unlocked@plt+0x26b8>
   13aa4:	mov	r9, #0
   13aa8:	cmp	r2, r4
   13aac:	bls	13ae4 <putchar_unlocked@plt+0x26b8>
   13ab0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13ab4:	ldr	r1, [sp, #24]
   13ab8:	add	r0, r4, r7
   13abc:	mov	r3, r1
   13ac0:	ldrb	r1, [r0, r1]
   13ac4:	cmp	r1, #0
   13ac8:	beq	13af0 <putchar_unlocked@plt+0x26c4>
   13acc:	add	r3, r3, #1
   13ad0:	add	r1, r7, r3
   13ad4:	cmp	r1, r2
   13ad8:	mov	r1, r3
   13adc:	bcc	13abc <putchar_unlocked@plt+0x2690>
   13ae0:	b	135e8 <putchar_unlocked@plt+0x21bc>
   13ae4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13ae8:	ldr	r1, [sp, #24]
   13aec:	b	135e8 <putchar_unlocked@plt+0x21bc>
   13af0:	mov	r1, r3
   13af4:	b	135e8 <putchar_unlocked@plt+0x21bc>
   13af8:	mov	r9, #0
   13afc:	mov	r4, r1
   13b00:	b	132a4 <putchar_unlocked@plt+0x1e78>
   13b04:	mov	sl, r7
   13b08:	b	13b10 <putchar_unlocked@plt+0x26e4>
   13b0c:	mvn	sl, #0
   13b10:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13b14:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13b18:	eor	r0, r1, #2
   13b1c:	orr	r0, r0, r8
   13b20:	clz	r0, r0
   13b24:	lsr	r0, r0, #5
   13b28:	tst	r2, r0
   13b2c:	bne	13bd4 <putchar_unlocked@plt+0x27a8>
   13b30:	subs	r0, r1, #2
   13b34:	movwne	r0, #1
   13b38:	orr	r0, r2, r0
   13b3c:	tst	r0, #1
   13b40:	ldreq	r0, [sp, #60]	; 0x3c
   13b44:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   13b48:	eoreq	r0, r0, #1
   13b4c:	tsteq	r0, #1
   13b50:	bne	13c68 <putchar_unlocked@plt+0x283c>
   13b54:	tst	r1, #1
   13b58:	bne	13c34 <putchar_unlocked@plt+0x2808>
   13b5c:	ldr	r6, [sp, #56]	; 0x38
   13b60:	mov	r9, #0
   13b64:	cmp	r6, #0
   13b68:	beq	13c60 <putchar_unlocked@plt+0x2834>
   13b6c:	ldr	r0, [sp, #84]	; 0x54
   13b70:	mov	r1, #0
   13b74:	mov	r7, #2
   13b78:	cmp	ip, #0
   13b7c:	str	r1, [fp, #-48]	; 0xffffffd0
   13b80:	mov	r1, #0
   13b84:	str	r1, [fp, #-76]	; 0xffffffb4
   13b88:	beq	12cf0 <putchar_unlocked@plt+0x18c4>
   13b8c:	b	13c68 <putchar_unlocked@plt+0x283c>
   13b90:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13b94:	ldr	r1, [fp, #12]
   13b98:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13b9c:	mov	r5, r3
   13ba0:	mov	ip, r6
   13ba4:	mov	r3, sl
   13ba8:	b	13bf8 <putchar_unlocked@plt+0x27cc>
   13bac:	tst	r4, #1
   13bb0:	ldr	r5, [fp, #-84]	; 0xffffffac
   13bb4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13bb8:	ldr	r1, [fp, #12]
   13bbc:	ldr	r3, [sp, #36]	; 0x24
   13bc0:	mov	r0, #2
   13bc4:	movwne	r0, #4
   13bc8:	mov	r2, r0
   13bcc:	b	13bf8 <putchar_unlocked@plt+0x27cc>
   13bd0:	ldr	ip, [sp, #88]	; 0x58
   13bd4:	ldr	r1, [sp, #84]	; 0x54
   13bd8:	mov	r0, #2
   13bdc:	tst	r1, #1
   13be0:	movwne	r0, #4
   13be4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13be8:	ldr	r1, [fp, #12]
   13bec:	mov	r3, sl
   13bf0:	cmp	r2, #2
   13bf4:	moveq	r2, r0
   13bf8:	mov	r0, #0
   13bfc:	bic	r1, r1, #2
   13c00:	str	r2, [sp]
   13c04:	mov	r2, r4
   13c08:	str	r0, [sp, #8]
   13c0c:	ldr	r0, [sp, #76]	; 0x4c
   13c10:	str	r1, [sp, #4]
   13c14:	mov	r1, ip
   13c18:	str	r0, [sp, #12]
   13c1c:	ldr	r0, [sp, #80]	; 0x50
   13c20:	str	r0, [sp, #16]
   13c24:	mov	r0, r5
   13c28:	bl	12c64 <putchar_unlocked@plt+0x1838>
   13c2c:	mov	r8, r0
   13c30:	b	13cb4 <putchar_unlocked@plt+0x2888>
   13c34:	mov	r0, #5
   13c38:	ldr	r1, [sp, #56]	; 0x38
   13c3c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13c40:	mov	r3, sl
   13c44:	str	r0, [sp]
   13c48:	ldr	r0, [fp, #12]
   13c4c:	str	r0, [sp, #4]
   13c50:	ldr	r0, [fp, #16]
   13c54:	str	r0, [sp, #8]
   13c58:	ldr	r0, [sp, #76]	; 0x4c
   13c5c:	b	13c18 <putchar_unlocked@plt+0x27ec>
   13c60:	mov	r0, #0
   13c64:	str	r0, [fp, #-76]	; 0xffffffb4
   13c68:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13c6c:	cmp	r1, #0
   13c70:	beq	13ca8 <putchar_unlocked@plt+0x287c>
   13c74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13c78:	tst	r0, #1
   13c7c:	bne	13ca8 <putchar_unlocked@plt+0x287c>
   13c80:	ldrb	r0, [r1]
   13c84:	cmp	r0, #0
   13c88:	beq	13ca8 <putchar_unlocked@plt+0x287c>
   13c8c:	add	r1, r1, #1
   13c90:	cmp	r8, ip
   13c94:	strbcc	r0, [r5, r8]
   13c98:	add	r8, r8, #1
   13c9c:	ldrb	r0, [r1], #1
   13ca0:	cmp	r0, #0
   13ca4:	bne	13c90 <putchar_unlocked@plt+0x2864>
   13ca8:	cmp	r8, ip
   13cac:	movcc	r0, #0
   13cb0:	strbcc	r0, [r5, r8]
   13cb4:	mov	r0, r8
   13cb8:	sub	sp, fp, #28
   13cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cc0:	mov	r0, #4
   13cc4:	b	13be4 <putchar_unlocked@plt+0x27b8>
   13cc8:	mov	r4, r1
   13ccc:	b	13bd4 <putchar_unlocked@plt+0x27a8>
   13cd0:	bl	11414 <abort@plt>
   13cd4:	mov	r3, r2
   13cd8:	mov	r2, #0
   13cdc:	b	13ce0 <putchar_unlocked@plt+0x28b4>
   13ce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce4:	add	fp, sp, #28
   13ce8:	sub	sp, sp, #36	; 0x24
   13cec:	movw	r8, #29176	; 0x71f8
   13cf0:	cmp	r3, #0
   13cf4:	mov	r4, r2
   13cf8:	str	r2, [sp, #24]
   13cfc:	mov	r5, r1
   13d00:	mov	r6, r0
   13d04:	str	r0, [sp, #20]
   13d08:	movt	r8, #2
   13d0c:	movne	r8, r3
   13d10:	bl	1130c <__errno_location@plt>
   13d14:	str	r0, [sp, #28]
   13d18:	ldr	r1, [r8, #40]	; 0x28
   13d1c:	ldr	r2, [r8, #44]	; 0x2c
   13d20:	ldr	r7, [r0]
   13d24:	cmp	r4, #0
   13d28:	add	sl, r8, #8
   13d2c:	mov	r0, #0
   13d30:	ldm	r8, {r3, r9}
   13d34:	orreq	r9, r9, #1
   13d38:	stm	sp, {r3, r9, sl}
   13d3c:	str	r1, [sp, #12]
   13d40:	str	r2, [sp, #16]
   13d44:	mov	r1, #0
   13d48:	mov	r2, r6
   13d4c:	mov	r3, r5
   13d50:	str	r7, [sp, #32]
   13d54:	mov	r7, r5
   13d58:	bl	12c64 <putchar_unlocked@plt+0x1838>
   13d5c:	add	r4, r0, #1
   13d60:	mov	r5, r0
   13d64:	mov	r0, r4
   13d68:	bl	14c84 <putchar_unlocked@plt+0x3858>
   13d6c:	mov	r6, r0
   13d70:	ldr	r0, [r8]
   13d74:	ldr	r2, [r8, #44]	; 0x2c
   13d78:	ldr	r1, [r8, #40]	; 0x28
   13d7c:	mov	r3, r7
   13d80:	stm	sp, {r0, r9, sl}
   13d84:	str	r2, [sp, #16]
   13d88:	ldr	r2, [sp, #20]
   13d8c:	str	r1, [sp, #12]
   13d90:	mov	r0, r6
   13d94:	mov	r1, r4
   13d98:	bl	12c64 <putchar_unlocked@plt+0x1838>
   13d9c:	ldr	r0, [sp, #24]
   13da0:	ldr	r1, [sp, #32]
   13da4:	ldr	r2, [sp, #28]
   13da8:	cmp	r0, #0
   13dac:	str	r1, [r2]
   13db0:	strne	r5, [r0]
   13db4:	mov	r0, r6
   13db8:	sub	sp, fp, #28
   13dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13dc4:	add	fp, sp, #24
   13dc8:	movw	r5, #28972	; 0x712c
   13dcc:	movw	r8, #28968	; 0x7128
   13dd0:	movt	r5, #2
   13dd4:	movt	r8, #2
   13dd8:	ldr	r0, [r5]
   13ddc:	ldr	r4, [r8]
   13de0:	cmp	r0, #2
   13de4:	blt	13e10 <putchar_unlocked@plt+0x29e4>
   13de8:	add	r7, r4, #12
   13dec:	mov	r6, #0
   13df0:	ldr	r0, [r7, r6, lsl #3]
   13df4:	bl	1283c <putchar_unlocked@plt+0x1410>
   13df8:	ldr	r1, [r5]
   13dfc:	add	r2, r6, #2
   13e00:	add	r0, r6, #1
   13e04:	mov	r6, r0
   13e08:	cmp	r2, r1
   13e0c:	blt	13df0 <putchar_unlocked@plt+0x29c4>
   13e10:	ldr	r0, [r4, #4]
   13e14:	movw	r9, #29224	; 0x7228
   13e18:	movw	r7, #28976	; 0x7130
   13e1c:	movt	r9, #2
   13e20:	movt	r7, #2
   13e24:	cmp	r0, r9
   13e28:	beq	13e38 <putchar_unlocked@plt+0x2a0c>
   13e2c:	bl	1283c <putchar_unlocked@plt+0x1410>
   13e30:	mov	r0, #256	; 0x100
   13e34:	stm	r7, {r0, r9}
   13e38:	cmp	r4, r7
   13e3c:	beq	13e4c <putchar_unlocked@plt+0x2a20>
   13e40:	mov	r0, r4
   13e44:	bl	1283c <putchar_unlocked@plt+0x1410>
   13e48:	str	r7, [r8]
   13e4c:	mov	r0, #1
   13e50:	str	r0, [r5]
   13e54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e58:	movw	r3, #29176	; 0x71f8
   13e5c:	mvn	r2, #0
   13e60:	movt	r3, #2
   13e64:	b	13e68 <putchar_unlocked@plt+0x2a3c>
   13e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e6c:	add	fp, sp, #28
   13e70:	sub	sp, sp, #44	; 0x2c
   13e74:	mov	r7, r3
   13e78:	str	r2, [sp, #36]	; 0x24
   13e7c:	str	r1, [sp, #32]
   13e80:	mov	r5, r0
   13e84:	bl	1130c <__errno_location@plt>
   13e88:	cmp	r5, #0
   13e8c:	bmi	13ffc <putchar_unlocked@plt+0x2bd0>
   13e90:	cmn	r5, #-2147483647	; 0x80000001
   13e94:	beq	13ffc <putchar_unlocked@plt+0x2bd0>
   13e98:	movw	r8, #28972	; 0x712c
   13e9c:	movw	r4, #28968	; 0x7128
   13ea0:	str	r0, [sp, #28]
   13ea4:	ldr	r0, [r0]
   13ea8:	movt	r8, #2
   13eac:	movt	r4, #2
   13eb0:	ldr	r1, [r8]
   13eb4:	ldr	r6, [r4]
   13eb8:	str	r0, [sp, #24]
   13ebc:	cmp	r1, r5
   13ec0:	ble	13ecc <putchar_unlocked@plt+0x2aa0>
   13ec4:	mov	sl, r6
   13ec8:	b	13f38 <putchar_unlocked@plt+0x2b0c>
   13ecc:	movw	r9, #28976	; 0x7130
   13ed0:	mov	r0, #8
   13ed4:	str	r1, [fp, #-32]	; 0xffffffe0
   13ed8:	sub	r1, r5, r1
   13edc:	mvn	r3, #-2147483648	; 0x80000000
   13ee0:	movt	r9, #2
   13ee4:	str	r0, [sp]
   13ee8:	add	r2, r1, #1
   13eec:	sub	r1, fp, #32
   13ef0:	subs	r0, r6, r9
   13ef4:	movne	r0, r6
   13ef8:	bl	14db4 <putchar_unlocked@plt+0x3988>
   13efc:	mov	sl, r0
   13f00:	cmp	r6, r9
   13f04:	str	r0, [r4]
   13f08:	bne	13f14 <putchar_unlocked@plt+0x2ae8>
   13f0c:	ldrd	r0, [r9]
   13f10:	stm	sl, {r0, r1}
   13f14:	ldr	r1, [r8]
   13f18:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f1c:	add	r0, sl, r1, lsl #3
   13f20:	sub	r1, r2, r1
   13f24:	lsl	r2, r1, #3
   13f28:	mov	r1, #0
   13f2c:	bl	11330 <memset@plt>
   13f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f34:	str	r0, [r8]
   13f38:	mov	r9, sl
   13f3c:	ldm	r7, {r0, r1}
   13f40:	orr	r8, r1, #1
   13f44:	add	r1, r7, #8
   13f48:	ldr	r2, [r7, #40]	; 0x28
   13f4c:	ldr	r3, [r7, #44]	; 0x2c
   13f50:	ldr	r6, [r9, r5, lsl #3]!
   13f54:	str	r1, [sp, #20]
   13f58:	ldr	r4, [r9, #4]!
   13f5c:	stm	sp, {r0, r8}
   13f60:	add	r0, sp, #8
   13f64:	stm	r0, {r1, r2, r3}
   13f68:	ldr	r2, [sp, #32]
   13f6c:	ldr	r3, [sp, #36]	; 0x24
   13f70:	mov	r1, r6
   13f74:	mov	r0, r4
   13f78:	bl	12c64 <putchar_unlocked@plt+0x1838>
   13f7c:	cmp	r6, r0
   13f80:	bhi	13fe4 <putchar_unlocked@plt+0x2bb8>
   13f84:	add	r6, r0, #1
   13f88:	movw	r0, #29224	; 0x7228
   13f8c:	movt	r0, #2
   13f90:	str	r6, [sl, r5, lsl #3]
   13f94:	cmp	r4, r0
   13f98:	beq	13fa4 <putchar_unlocked@plt+0x2b78>
   13f9c:	mov	r0, r4
   13fa0:	bl	1283c <putchar_unlocked@plt+0x1410>
   13fa4:	mov	r0, r6
   13fa8:	bl	14c84 <putchar_unlocked@plt+0x3858>
   13fac:	str	r0, [r9]
   13fb0:	mov	r4, r0
   13fb4:	add	r3, sp, #8
   13fb8:	ldr	r0, [r7]
   13fbc:	ldr	r1, [r7, #40]	; 0x28
   13fc0:	ldr	r2, [r7, #44]	; 0x2c
   13fc4:	stm	sp, {r0, r8}
   13fc8:	ldr	r0, [sp, #20]
   13fcc:	stm	r3, {r0, r1, r2}
   13fd0:	ldr	r2, [sp, #32]
   13fd4:	ldr	r3, [sp, #36]	; 0x24
   13fd8:	mov	r0, r4
   13fdc:	mov	r1, r6
   13fe0:	bl	12c64 <putchar_unlocked@plt+0x1838>
   13fe4:	ldr	r0, [sp, #28]
   13fe8:	ldr	r1, [sp, #24]
   13fec:	str	r1, [r0]
   13ff0:	mov	r0, r4
   13ff4:	sub	sp, fp, #28
   13ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ffc:	bl	11414 <abort@plt>
   14000:	movw	r3, #29176	; 0x71f8
   14004:	movt	r3, #2
   14008:	b	13e68 <putchar_unlocked@plt+0x2a3c>
   1400c:	movw	r3, #29176	; 0x71f8
   14010:	mov	r1, r0
   14014:	mov	r0, #0
   14018:	mvn	r2, #0
   1401c:	movt	r3, #2
   14020:	b	13e68 <putchar_unlocked@plt+0x2a3c>
   14024:	movw	r3, #29176	; 0x71f8
   14028:	mov	r2, r1
   1402c:	mov	r1, r0
   14030:	mov	r0, #0
   14034:	movt	r3, #2
   14038:	b	13e68 <putchar_unlocked@plt+0x2a3c>
   1403c:	push	{fp, lr}
   14040:	mov	fp, sp
   14044:	sub	sp, sp, #48	; 0x30
   14048:	vmov.i32	q8, #0	; 0x00000000
   1404c:	mov	ip, #32
   14050:	mov	r3, sp
   14054:	mov	lr, r2
   14058:	cmp	r1, #10
   1405c:	add	r2, r3, #16
   14060:	vst1.64	{d16-d17}, [r3], ip
   14064:	vst1.64	{d16-d17}, [r2]
   14068:	vst1.64	{d16-d17}, [r3]
   1406c:	beq	1408c <putchar_unlocked@plt+0x2c60>
   14070:	str	r1, [sp]
   14074:	mov	r3, sp
   14078:	mov	r1, lr
   1407c:	mvn	r2, #0
   14080:	bl	13e68 <putchar_unlocked@plt+0x2a3c>
   14084:	mov	sp, fp
   14088:	pop	{fp, pc}
   1408c:	bl	11414 <abort@plt>
   14090:	push	{r4, sl, fp, lr}
   14094:	add	fp, sp, #8
   14098:	sub	sp, sp, #48	; 0x30
   1409c:	vmov.i32	q8, #0	; 0x00000000
   140a0:	mov	ip, r3
   140a4:	mov	r3, sp
   140a8:	mov	lr, #32
   140ac:	cmp	r1, #10
   140b0:	add	r4, r3, #16
   140b4:	vst1.64	{d16-d17}, [r3], lr
   140b8:	vst1.64	{d16-d17}, [r4]
   140bc:	vst1.64	{d16-d17}, [r3]
   140c0:	beq	140e0 <putchar_unlocked@plt+0x2cb4>
   140c4:	str	r1, [sp]
   140c8:	mov	r1, r2
   140cc:	mov	r3, sp
   140d0:	mov	r2, ip
   140d4:	bl	13e68 <putchar_unlocked@plt+0x2a3c>
   140d8:	sub	sp, fp, #8
   140dc:	pop	{r4, sl, fp, pc}
   140e0:	bl	11414 <abort@plt>
   140e4:	mov	r2, r1
   140e8:	mov	r1, r0
   140ec:	mov	r0, #0
   140f0:	b	1403c <putchar_unlocked@plt+0x2c10>
   140f4:	mov	r3, r2
   140f8:	mov	r2, r1
   140fc:	mov	r1, r0
   14100:	mov	r0, #0
   14104:	b	14090 <putchar_unlocked@plt+0x2c64>
   14108:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1410c:	add	fp, sp, #24
   14110:	sub	sp, sp, #48	; 0x30
   14114:	movw	r8, #29176	; 0x71f8
   14118:	mov	lr, r0
   1411c:	mov	r3, sp
   14120:	mov	ip, r1
   14124:	movt	r8, #2
   14128:	mov	r1, r3
   1412c:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14130:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   14134:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   14138:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1413c:	ubfx	r0, r2, #5, #3
   14140:	and	r2, r2, #31
   14144:	mov	r4, #1
   14148:	add	r0, r3, r0, lsl #2
   1414c:	ldr	r1, [r0, #8]
   14150:	bic	r4, r4, r1, lsr r2
   14154:	eor	r1, r1, r4, lsl r2
   14158:	mov	r2, ip
   1415c:	str	r1, [r0, #8]
   14160:	mov	r0, #0
   14164:	mov	r1, lr
   14168:	bl	13e68 <putchar_unlocked@plt+0x2a3c>
   1416c:	sub	sp, fp, #24
   14170:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14174:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14178:	add	fp, sp, #24
   1417c:	sub	sp, sp, #48	; 0x30
   14180:	movw	lr, #29176	; 0x71f8
   14184:	mov	ip, r0
   14188:	mov	r3, sp
   1418c:	movt	lr, #2
   14190:	mov	r2, r3
   14194:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   14198:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   1419c:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   141a0:	stm	r2, {r0, r4, r5, r6, r7, r8}
   141a4:	ubfx	r0, r1, #5, #3
   141a8:	and	r1, r1, #31
   141ac:	mov	r7, #1
   141b0:	add	r0, r3, r0, lsl #2
   141b4:	ldr	r2, [r0, #8]
   141b8:	bic	r7, r7, r2, lsr r1
   141bc:	eor	r1, r2, r7, lsl r1
   141c0:	mvn	r2, #0
   141c4:	str	r1, [r0, #8]
   141c8:	mov	r0, #0
   141cc:	mov	r1, ip
   141d0:	bl	13e68 <putchar_unlocked@plt+0x2a3c>
   141d4:	sub	sp, fp, #24
   141d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141dc:	push	{r4, r5, r6, r7, fp, lr}
   141e0:	add	fp, sp, #16
   141e4:	sub	sp, sp, #48	; 0x30
   141e8:	movw	lr, #29176	; 0x71f8
   141ec:	mov	ip, r0
   141f0:	mov	r3, sp
   141f4:	movt	lr, #2
   141f8:	mov	r2, r3
   141fc:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   14200:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14204:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   14208:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1420c:	mov	r1, ip
   14210:	mvn	r2, #0
   14214:	ldr	r0, [sp, #12]
   14218:	orr	r0, r0, #67108864	; 0x4000000
   1421c:	str	r0, [sp, #12]
   14220:	mov	r0, #0
   14224:	bl	13e68 <putchar_unlocked@plt+0x2a3c>
   14228:	sub	sp, fp, #16
   1422c:	pop	{r4, r5, r6, r7, fp, pc}
   14230:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14234:	add	fp, sp, #24
   14238:	sub	sp, sp, #48	; 0x30
   1423c:	movw	r8, #29176	; 0x71f8
   14240:	mov	ip, r1
   14244:	mov	lr, r0
   14248:	mov	r3, sp
   1424c:	movt	r8, #2
   14250:	mov	r2, r3
   14254:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   14258:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1425c:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   14260:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14264:	mov	r1, lr
   14268:	mov	r2, ip
   1426c:	ldr	r0, [sp, #12]
   14270:	orr	r0, r0, #67108864	; 0x4000000
   14274:	str	r0, [sp, #12]
   14278:	mov	r0, #0
   1427c:	bl	13e68 <putchar_unlocked@plt+0x2a3c>
   14280:	sub	sp, fp, #24
   14284:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14288:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1428c:	add	fp, sp, #24
   14290:	sub	sp, sp, #96	; 0x60
   14294:	vmov.i32	q8, #0	; 0x00000000
   14298:	mov	lr, sp
   1429c:	mov	ip, r2
   142a0:	cmp	r1, #10
   142a4:	add	r3, lr, #16
   142a8:	mov	r2, lr
   142ac:	vst1.64	{d16-d17}, [r3]
   142b0:	mov	r3, #28
   142b4:	vst1.64	{d16-d17}, [r2], r3
   142b8:	vst1.32	{d16-d17}, [r2]
   142bc:	beq	142fc <putchar_unlocked@plt+0x2ed0>
   142c0:	str	r1, [sp, #48]	; 0x30
   142c4:	add	r3, sp, #48	; 0x30
   142c8:	ldm	lr!, {r2, r4, r5, r6, r7}
   142cc:	add	r1, r3, #4
   142d0:	stmia	r1!, {r2, r4, r5, r6, r7}
   142d4:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   142d8:	stm	r1, {r2, r4, r5, r6, r7, r8}
   142dc:	mvn	r2, #0
   142e0:	ldr	r1, [sp, #60]	; 0x3c
   142e4:	orr	r1, r1, #67108864	; 0x4000000
   142e8:	str	r1, [sp, #60]	; 0x3c
   142ec:	mov	r1, ip
   142f0:	bl	13e68 <putchar_unlocked@plt+0x2a3c>
   142f4:	sub	sp, fp, #24
   142f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142fc:	bl	11414 <abort@plt>
   14300:	push	{fp, lr}
   14304:	mov	fp, sp
   14308:	sub	sp, sp, #8
   1430c:	mvn	ip, #0
   14310:	str	ip, [sp]
   14314:	bl	14320 <putchar_unlocked@plt+0x2ef4>
   14318:	mov	sp, fp
   1431c:	pop	{fp, pc}
   14320:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14324:	add	fp, sp, #24
   14328:	sub	sp, sp, #48	; 0x30
   1432c:	movw	ip, #29176	; 0x71f8
   14330:	mov	lr, r3
   14334:	mov	r3, sp
   14338:	cmp	r1, #0
   1433c:	movt	ip, #2
   14340:	cmpne	r2, #0
   14344:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   14348:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   1434c:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   14350:	stm	r3, {r4, r5, r6, r7, r8, r9}
   14354:	mov	r3, #10
   14358:	str	r3, [sp]
   1435c:	bne	14364 <putchar_unlocked@plt+0x2f38>
   14360:	bl	11414 <abort@plt>
   14364:	ldr	ip, [fp, #8]
   14368:	str	r2, [sp, #44]	; 0x2c
   1436c:	str	r1, [sp, #40]	; 0x28
   14370:	mov	r3, sp
   14374:	mov	r1, lr
   14378:	mov	r2, ip
   1437c:	bl	13e68 <putchar_unlocked@plt+0x2a3c>
   14380:	sub	sp, fp, #24
   14384:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14388:	push	{fp, lr}
   1438c:	mov	fp, sp
   14390:	sub	sp, sp, #8
   14394:	mov	r3, r2
   14398:	mov	r2, r1
   1439c:	mov	r1, r0
   143a0:	mvn	r0, #0
   143a4:	str	r0, [sp]
   143a8:	mov	r0, #0
   143ac:	bl	14320 <putchar_unlocked@plt+0x2ef4>
   143b0:	mov	sp, fp
   143b4:	pop	{fp, pc}
   143b8:	push	{fp, lr}
   143bc:	mov	fp, sp
   143c0:	sub	sp, sp, #8
   143c4:	mov	ip, r2
   143c8:	mov	r2, r1
   143cc:	mov	r1, r0
   143d0:	str	r3, [sp]
   143d4:	mov	r0, #0
   143d8:	mov	r3, ip
   143dc:	bl	14320 <putchar_unlocked@plt+0x2ef4>
   143e0:	mov	sp, fp
   143e4:	pop	{fp, pc}
   143e8:	movw	r3, #28984	; 0x7138
   143ec:	movt	r3, #2
   143f0:	b	13e68 <putchar_unlocked@plt+0x2a3c>
   143f4:	movw	r3, #28984	; 0x7138
   143f8:	mov	r2, r1
   143fc:	mov	r1, r0
   14400:	mov	r0, #0
   14404:	movt	r3, #2
   14408:	b	13e68 <putchar_unlocked@plt+0x2a3c>
   1440c:	movw	r3, #28984	; 0x7138
   14410:	mvn	r2, #0
   14414:	movt	r3, #2
   14418:	b	13e68 <putchar_unlocked@plt+0x2a3c>
   1441c:	movw	r3, #28984	; 0x7138
   14420:	mov	r1, r0
   14424:	mov	r0, #0
   14428:	mvn	r2, #0
   1442c:	movt	r3, #2
   14430:	b	13e68 <putchar_unlocked@plt+0x2a3c>
   14434:	push	{r4, r5, fp, lr}
   14438:	add	fp, sp, #8
   1443c:	mov	r5, r0
   14440:	mov	r4, r1
   14444:	mov	r0, #0
   14448:	mov	r2, #5
   1444c:	mov	r1, r5
   14450:	bl	111d4 <dcgettext@plt>
   14454:	cmp	r0, r5
   14458:	popne	{r4, r5, fp, pc}
   1445c:	bl	15218 <putchar_unlocked@plt+0x3dec>
   14460:	ldrb	r1, [r0]
   14464:	and	r1, r1, #223	; 0xdf
   14468:	cmp	r1, #71	; 0x47
   1446c:	beq	144d4 <putchar_unlocked@plt+0x30a8>
   14470:	cmp	r1, #85	; 0x55
   14474:	bne	1452c <putchar_unlocked@plt+0x3100>
   14478:	ldrb	r1, [r0, #1]
   1447c:	and	r1, r1, #223	; 0xdf
   14480:	cmp	r1, #84	; 0x54
   14484:	bne	1452c <putchar_unlocked@plt+0x3100>
   14488:	ldrb	r1, [r0, #2]
   1448c:	and	r1, r1, #223	; 0xdf
   14490:	cmp	r1, #70	; 0x46
   14494:	bne	1452c <putchar_unlocked@plt+0x3100>
   14498:	ldrb	r1, [r0, #3]
   1449c:	cmp	r1, #45	; 0x2d
   144a0:	bne	1452c <putchar_unlocked@plt+0x3100>
   144a4:	ldrb	r1, [r0, #4]
   144a8:	cmp	r1, #56	; 0x38
   144ac:	bne	1452c <putchar_unlocked@plt+0x3100>
   144b0:	ldrb	r0, [r0, #5]
   144b4:	cmp	r0, #0
   144b8:	bne	1452c <putchar_unlocked@plt+0x3100>
   144bc:	ldrb	r1, [r5]
   144c0:	movw	r2, #23882	; 0x5d4a
   144c4:	movw	r0, #23886	; 0x5d4e
   144c8:	movt	r2, #1
   144cc:	movt	r0, #1
   144d0:	b	1455c <putchar_unlocked@plt+0x3130>
   144d4:	ldrb	r1, [r0, #1]
   144d8:	and	r1, r1, #223	; 0xdf
   144dc:	cmp	r1, #66	; 0x42
   144e0:	bne	1452c <putchar_unlocked@plt+0x3100>
   144e4:	ldrb	r1, [r0, #2]
   144e8:	cmp	r1, #49	; 0x31
   144ec:	bne	1452c <putchar_unlocked@plt+0x3100>
   144f0:	ldrb	r1, [r0, #3]
   144f4:	cmp	r1, #56	; 0x38
   144f8:	bne	1452c <putchar_unlocked@plt+0x3100>
   144fc:	ldrb	r1, [r0, #4]
   14500:	cmp	r1, #48	; 0x30
   14504:	bne	1452c <putchar_unlocked@plt+0x3100>
   14508:	ldrb	r1, [r0, #5]
   1450c:	cmp	r1, #51	; 0x33
   14510:	bne	1452c <putchar_unlocked@plt+0x3100>
   14514:	ldrb	r1, [r0, #6]
   14518:	cmp	r1, #48	; 0x30
   1451c:	bne	1452c <putchar_unlocked@plt+0x3100>
   14520:	ldrb	r0, [r0, #7]
   14524:	cmp	r0, #0
   14528:	beq	14548 <putchar_unlocked@plt+0x311c>
   1452c:	movw	r1, #23876	; 0x5d44
   14530:	movw	r0, #23880	; 0x5d48
   14534:	cmp	r4, #9
   14538:	movt	r1, #1
   1453c:	movt	r0, #1
   14540:	moveq	r0, r1
   14544:	pop	{r4, r5, fp, pc}
   14548:	ldrb	r1, [r5]
   1454c:	movw	r2, #23890	; 0x5d52
   14550:	movw	r0, #23894	; 0x5d56
   14554:	movt	r2, #1
   14558:	movt	r0, #1
   1455c:	cmp	r1, #96	; 0x60
   14560:	moveq	r0, r2
   14564:	pop	{r4, r5, fp, pc}
   14568:	push	{r4, r5, fp, lr}
   1456c:	add	fp, sp, #8
   14570:	mov	r5, r0
   14574:	mov	r0, #33	; 0x21
   14578:	bl	14c54 <putchar_unlocked@plt+0x3828>
   1457c:	add	r1, r5, #44	; 0x2c
   14580:	mov	r2, #32
   14584:	mov	r4, r0
   14588:	bl	1133c <strncpy@plt>
   1458c:	mov	r5, #0
   14590:	strb	r5, [r0, #32]
   14594:	bl	112f4 <strlen@plt>
   14598:	cmp	r0, #1
   1459c:	blt	145c4 <putchar_unlocked@plt+0x3198>
   145a0:	add	r1, r4, r0
   145a4:	mov	r0, r1
   145a8:	ldrb	r2, [r0, #-1]!
   145ac:	cmp	r2, #32
   145b0:	bne	145c4 <putchar_unlocked@plt+0x3198>
   145b4:	strb	r5, [r1, #-1]
   145b8:	cmp	r4, r0
   145bc:	mov	r1, r0
   145c0:	bcc	145a8 <putchar_unlocked@plt+0x317c>
   145c4:	mov	r0, r4
   145c8:	pop	{r4, r5, fp, pc}
   145cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145d0:	add	fp, sp, #28
   145d4:	sub	sp, sp, #20
   145d8:	mov	r6, #0
   145dc:	mov	r5, r3
   145e0:	str	r2, [sp, #12]
   145e4:	str	r1, [sp, #8]
   145e8:	str	r6, [sp, #16]
   145ec:	bl	11168 <utmpxname@plt>
   145f0:	bl	111ec <setutxent@plt>
   145f4:	bl	11420 <getutxent@plt>
   145f8:	cmp	r0, #0
   145fc:	beq	146dc <putchar_unlocked@plt+0x32b0>
   14600:	mov	r4, r0
   14604:	and	r7, r5, #1
   14608:	and	r8, r5, #2
   1460c:	mov	r5, #0
   14610:	mov	r9, #384	; 0x180
   14614:	add	sl, sp, #16
   14618:	mov	r6, #0
   1461c:	ldrb	r0, [r4, #44]	; 0x2c
   14620:	cmp	r0, #0
   14624:	mov	r0, #0
   14628:	beq	1463c <putchar_unlocked@plt+0x3210>
   1462c:	ldrh	r0, [r4]
   14630:	sub	r0, r0, #7
   14634:	clz	r0, r0
   14638:	lsr	r0, r0, #5
   1463c:	cmp	r8, #0
   14640:	beq	1464c <putchar_unlocked@plt+0x3220>
   14644:	cmp	r0, #0
   14648:	beq	146c8 <putchar_unlocked@plt+0x329c>
   1464c:	cmp	r7, #0
   14650:	beq	14688 <putchar_unlocked@plt+0x325c>
   14654:	eors	r0, r0, #1
   14658:	bne	14688 <putchar_unlocked@plt+0x325c>
   1465c:	ldr	r0, [r4, #4]
   14660:	cmp	r0, #1
   14664:	blt	14688 <putchar_unlocked@plt+0x325c>
   14668:	mov	r1, #0
   1466c:	bl	112c4 <kill@plt>
   14670:	cmn	r0, #1
   14674:	bgt	14688 <putchar_unlocked@plt+0x325c>
   14678:	bl	1130c <__errno_location@plt>
   1467c:	ldr	r0, [r0]
   14680:	cmp	r0, #3
   14684:	beq	146c8 <putchar_unlocked@plt+0x329c>
   14688:	ldr	r0, [sp, #16]
   1468c:	cmp	r5, r0
   14690:	bne	146b0 <putchar_unlocked@plt+0x3284>
   14694:	mov	r0, r6
   14698:	mov	r1, sl
   1469c:	mov	r2, #1
   146a0:	mvn	r3, #0
   146a4:	str	r9, [sp]
   146a8:	bl	14db4 <putchar_unlocked@plt+0x3988>
   146ac:	mov	r6, r0
   146b0:	add	r0, r5, r5, lsl #1
   146b4:	mov	r1, r4
   146b8:	mov	r2, #384	; 0x180
   146bc:	add	r0, r6, r0, lsl #7
   146c0:	bl	11198 <memcpy@plt>
   146c4:	add	r5, r5, #1
   146c8:	bl	11420 <getutxent@plt>
   146cc:	mov	r4, r0
   146d0:	cmp	r0, #0
   146d4:	bne	1461c <putchar_unlocked@plt+0x31f0>
   146d8:	b	146e0 <putchar_unlocked@plt+0x32b4>
   146dc:	mov	r5, #0
   146e0:	bl	11384 <endutxent@plt>
   146e4:	ldr	r0, [sp, #8]
   146e8:	str	r5, [r0]
   146ec:	ldr	r0, [sp, #12]
   146f0:	str	r6, [r0]
   146f4:	mov	r0, #0
   146f8:	sub	sp, fp, #28
   146fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14700:	push	{r4, r5, r6, r7, fp, lr}
   14704:	add	fp, sp, #16
   14708:	mov	r4, r1
   1470c:	mov	r1, #0
   14710:	mov	r6, r2
   14714:	bl	11390 <setlocale@plt>
   14718:	cmp	r0, #0
   1471c:	beq	14748 <putchar_unlocked@plt+0x331c>
   14720:	mov	r7, r0
   14724:	bl	112f4 <strlen@plt>
   14728:	cmp	r0, r6
   1472c:	bcs	1475c <putchar_unlocked@plt+0x3330>
   14730:	add	r2, r0, #1
   14734:	mov	r0, r4
   14738:	mov	r1, r7
   1473c:	bl	11198 <memcpy@plt>
   14740:	mov	r5, #0
   14744:	b	14784 <putchar_unlocked@plt+0x3358>
   14748:	cmp	r6, #0
   1474c:	mov	r5, #22
   14750:	movne	r0, #0
   14754:	strbne	r0, [r4]
   14758:	b	14784 <putchar_unlocked@plt+0x3358>
   1475c:	mov	r5, #34	; 0x22
   14760:	cmp	r6, #0
   14764:	beq	14784 <putchar_unlocked@plt+0x3358>
   14768:	sub	r6, r6, #1
   1476c:	mov	r0, r4
   14770:	mov	r1, r7
   14774:	mov	r2, r6
   14778:	bl	11198 <memcpy@plt>
   1477c:	mov	r0, #0
   14780:	strb	r0, [r4, r6]
   14784:	mov	r0, r5
   14788:	pop	{r4, r5, r6, r7, fp, pc}
   1478c:	mov	r1, #0
   14790:	b	11390 <setlocale@plt>
   14794:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14798:	add	fp, sp, #24
   1479c:	sub	sp, sp, #32
   147a0:	ldr	r6, [fp, #12]
   147a4:	ldr	r7, [fp, #8]
   147a8:	mov	r4, r2
   147ac:	mov	r8, r0
   147b0:	cmp	r1, #0
   147b4:	beq	147dc <putchar_unlocked@plt+0x33b0>
   147b8:	movw	r2, #23984	; 0x5db0
   147bc:	mov	r5, r1
   147c0:	str	r3, [sp, #4]
   147c4:	str	r4, [sp]
   147c8:	mov	r0, r8
   147cc:	mov	r1, #1
   147d0:	movt	r2, #1
   147d4:	mov	r3, r5
   147d8:	b	147f4 <putchar_unlocked@plt+0x33c8>
   147dc:	movw	r2, #23996	; 0x5dbc
   147e0:	str	r3, [sp]
   147e4:	mov	r0, r8
   147e8:	mov	r1, #1
   147ec:	mov	r3, r4
   147f0:	movt	r2, #1
   147f4:	bl	11360 <__fprintf_chk@plt>
   147f8:	movw	r1, #24003	; 0x5dc3
   147fc:	mov	r0, #0
   14800:	mov	r2, #5
   14804:	movt	r1, #1
   14808:	bl	111d4 <dcgettext@plt>
   1480c:	movw	r2, #24721	; 0x6091
   14810:	mov	r3, r0
   14814:	movw	r0, #2022	; 0x7e6
   14818:	mov	r1, #1
   1481c:	movt	r2, #1
   14820:	str	r0, [sp]
   14824:	mov	r0, r8
   14828:	bl	11360 <__fprintf_chk@plt>
   1482c:	movw	r4, #23291	; 0x5afb
   14830:	mov	r1, r8
   14834:	movt	r4, #1
   14838:	mov	r0, r4
   1483c:	bl	1112c <fputs_unlocked@plt>
   14840:	movw	r1, #24007	; 0x5dc7
   14844:	mov	r0, #0
   14848:	mov	r2, #5
   1484c:	movt	r1, #1
   14850:	bl	111d4 <dcgettext@plt>
   14854:	movw	r3, #24178	; 0x5e72
   14858:	mov	r2, r0
   1485c:	mov	r0, r8
   14860:	mov	r1, #1
   14864:	movt	r3, #1
   14868:	bl	11360 <__fprintf_chk@plt>
   1486c:	mov	r0, r4
   14870:	mov	r1, r8
   14874:	bl	1112c <fputs_unlocked@plt>
   14878:	cmp	r6, #9
   1487c:	bhi	148e0 <putchar_unlocked@plt+0x34b4>
   14880:	add	r0, pc, #0
   14884:	ldr	pc, [r0, r6, lsl #2]
   14888:			; <UNDEFINED> instruction: 0x00014ab8
   1488c:			; <UNDEFINED> instruction: 0x000148b0
   14890:	andeq	r4, r1, ip, ror #17
   14894:	andeq	r4, r1, r4, lsl r9
   14898:	andeq	r4, r1, ip, lsr r9
   1489c:	andeq	r4, r1, r4, ror #18
   148a0:	andeq	r4, r1, ip, lsl #19
   148a4:	andeq	r4, r1, r4, asr #19
   148a8:	andeq	r4, r1, r4, ror #20
   148ac:	andeq	r4, r1, ip, lsl #20
   148b0:	movw	r1, #24212	; 0x5e94
   148b4:	mov	r0, #0
   148b8:	mov	r2, #5
   148bc:	movt	r1, #1
   148c0:	bl	111d4 <dcgettext@plt>
   148c4:	ldr	r3, [r7]
   148c8:	mov	r2, r0
   148cc:	mov	r0, r8
   148d0:	mov	r1, #1
   148d4:	sub	sp, fp, #24
   148d8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   148dc:	b	11360 <__fprintf_chk@plt>
   148e0:	movw	r1, #24531	; 0x5fd3
   148e4:	movt	r1, #1
   148e8:	b	14a14 <putchar_unlocked@plt+0x35e8>
   148ec:	movw	r1, #24228	; 0x5ea4
   148f0:	mov	r0, #0
   148f4:	mov	r2, #5
   148f8:	movt	r1, #1
   148fc:	bl	111d4 <dcgettext@plt>
   14900:	mov	r2, r0
   14904:	ldr	r3, [r7]
   14908:	ldr	r0, [r7, #4]
   1490c:	str	r0, [sp]
   14910:	b	14a00 <putchar_unlocked@plt+0x35d4>
   14914:	movw	r1, #24251	; 0x5ebb
   14918:	mov	r0, #0
   1491c:	mov	r2, #5
   14920:	movt	r1, #1
   14924:	bl	111d4 <dcgettext@plt>
   14928:	mov	r2, r0
   1492c:	ldr	r3, [r7]
   14930:	ldmib	r7, {r0, r1}
   14934:	stm	sp, {r0, r1}
   14938:	b	14a00 <putchar_unlocked@plt+0x35d4>
   1493c:	movw	r1, #24279	; 0x5ed7
   14940:	mov	r0, #0
   14944:	mov	r2, #5
   14948:	movt	r1, #1
   1494c:	bl	111d4 <dcgettext@plt>
   14950:	ldr	r3, [r7]
   14954:	mov	r2, r0
   14958:	ldmib	r7, {r0, r1, r7}
   1495c:	stm	sp, {r0, r1, r7}
   14960:	b	14a00 <putchar_unlocked@plt+0x35d4>
   14964:	movw	r1, #24311	; 0x5ef7
   14968:	mov	r0, #0
   1496c:	mov	r2, #5
   14970:	movt	r1, #1
   14974:	bl	111d4 <dcgettext@plt>
   14978:	ldr	r3, [r7]
   1497c:	mov	r2, r0
   14980:	ldmib	r7, {r0, r1, r6, r7}
   14984:	stm	sp, {r0, r1, r6, r7}
   14988:	b	14a00 <putchar_unlocked@plt+0x35d4>
   1498c:	movw	r1, #24347	; 0x5f1b
   14990:	mov	r0, #0
   14994:	mov	r2, #5
   14998:	movt	r1, #1
   1499c:	bl	111d4 <dcgettext@plt>
   149a0:	mov	r2, r0
   149a4:	ldr	r3, [r7]
   149a8:	ldmib	r7, {r0, r1, r6}
   149ac:	ldr	r5, [r7, #16]
   149b0:	ldr	r7, [r7, #20]
   149b4:	stm	sp, {r0, r1, r6}
   149b8:	str	r5, [sp, #12]
   149bc:	str	r7, [sp, #16]
   149c0:	b	14a00 <putchar_unlocked@plt+0x35d4>
   149c4:	movw	r1, #24387	; 0x5f43
   149c8:	mov	r0, #0
   149cc:	mov	r2, #5
   149d0:	movt	r1, #1
   149d4:	bl	111d4 <dcgettext@plt>
   149d8:	mov	r2, r0
   149dc:	ldr	r3, [r7]
   149e0:	ldmib	r7, {r0, r1, r6}
   149e4:	ldr	r5, [r7, #16]
   149e8:	ldr	r4, [r7, #20]
   149ec:	ldr	r7, [r7, #24]
   149f0:	stm	sp, {r0, r1, r6}
   149f4:	str	r5, [sp, #12]
   149f8:	str	r4, [sp, #16]
   149fc:	str	r7, [sp, #20]
   14a00:	mov	r0, r8
   14a04:	mov	r1, #1
   14a08:	b	14ab4 <putchar_unlocked@plt+0x3688>
   14a0c:	movw	r1, #24479	; 0x5f9f
   14a10:	movt	r1, #1
   14a14:	mov	r0, #0
   14a18:	mov	r2, #5
   14a1c:	bl	111d4 <dcgettext@plt>
   14a20:	mov	ip, r0
   14a24:	ldr	r3, [r7]
   14a28:	ldr	r0, [r7, #4]
   14a2c:	ldr	r1, [r7, #8]
   14a30:	ldr	r6, [r7, #12]
   14a34:	ldr	r5, [r7, #16]
   14a38:	ldr	r4, [r7, #20]
   14a3c:	ldr	r2, [r7, #24]
   14a40:	ldr	lr, [r7, #28]
   14a44:	ldr	r7, [r7, #32]
   14a48:	stm	sp, {r0, r1, r6}
   14a4c:	str	r5, [sp, #12]
   14a50:	str	r4, [sp, #16]
   14a54:	str	r2, [sp, #20]
   14a58:	str	lr, [sp, #24]
   14a5c:	str	r7, [sp, #28]
   14a60:	b	14aa8 <putchar_unlocked@plt+0x367c>
   14a64:	movw	r1, #24431	; 0x5f6f
   14a68:	mov	r0, #0
   14a6c:	mov	r2, #5
   14a70:	movt	r1, #1
   14a74:	bl	111d4 <dcgettext@plt>
   14a78:	mov	ip, r0
   14a7c:	ldr	r3, [r7]
   14a80:	ldmib	r7, {r0, r1, r6}
   14a84:	ldr	r5, [r7, #16]
   14a88:	ldr	r4, [r7, #20]
   14a8c:	ldr	r2, [r7, #24]
   14a90:	ldr	r7, [r7, #28]
   14a94:	stm	sp, {r0, r1, r6}
   14a98:	str	r5, [sp, #12]
   14a9c:	str	r4, [sp, #16]
   14aa0:	str	r2, [sp, #20]
   14aa4:	str	r7, [sp, #24]
   14aa8:	mov	r0, r8
   14aac:	mov	r1, #1
   14ab0:	mov	r2, ip
   14ab4:	bl	11360 <__fprintf_chk@plt>
   14ab8:	sub	sp, fp, #24
   14abc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ac0:	push	{r4, sl, fp, lr}
   14ac4:	add	fp, sp, #8
   14ac8:	sub	sp, sp, #8
   14acc:	ldr	ip, [fp, #8]
   14ad0:	mov	lr, #0
   14ad4:	ldr	r4, [ip, lr, lsl #2]
   14ad8:	add	lr, lr, #1
   14adc:	cmp	r4, #0
   14ae0:	bne	14ad4 <putchar_unlocked@plt+0x36a8>
   14ae4:	sub	r4, lr, #1
   14ae8:	str	ip, [sp]
   14aec:	str	r4, [sp, #4]
   14af0:	bl	14794 <putchar_unlocked@plt+0x3368>
   14af4:	sub	sp, fp, #8
   14af8:	pop	{r4, sl, fp, pc}
   14afc:	push	{r4, r5, fp, lr}
   14b00:	add	fp, sp, #8
   14b04:	sub	sp, sp, #48	; 0x30
   14b08:	ldr	r4, [fp, #8]
   14b0c:	mov	ip, #0
   14b10:	add	lr, sp, #8
   14b14:	ldr	r5, [r4]
   14b18:	cmp	r5, #0
   14b1c:	str	r5, [lr, ip, lsl #2]
   14b20:	beq	14b38 <putchar_unlocked@plt+0x370c>
   14b24:	add	ip, ip, #1
   14b28:	add	r4, r4, #4
   14b2c:	cmp	ip, #10
   14b30:	bne	14b14 <putchar_unlocked@plt+0x36e8>
   14b34:	mov	ip, #10
   14b38:	str	lr, [sp]
   14b3c:	str	ip, [sp, #4]
   14b40:	bl	14794 <putchar_unlocked@plt+0x3368>
   14b44:	sub	sp, fp, #8
   14b48:	pop	{r4, r5, fp, pc}
   14b4c:	push	{fp, lr}
   14b50:	mov	fp, sp
   14b54:	sub	sp, sp, #8
   14b58:	add	ip, fp, #8
   14b5c:	str	ip, [sp, #4]
   14b60:	str	ip, [sp]
   14b64:	bl	14afc <putchar_unlocked@plt+0x36d0>
   14b68:	mov	sp, fp
   14b6c:	pop	{fp, pc}
   14b70:	push	{fp, lr}
   14b74:	mov	fp, sp
   14b78:	movw	r0, #29052	; 0x717c
   14b7c:	movt	r0, #2
   14b80:	ldr	r1, [r0]
   14b84:	movw	r0, #23291	; 0x5afb
   14b88:	movt	r0, #1
   14b8c:	bl	1112c <fputs_unlocked@plt>
   14b90:	movw	r1, #24591	; 0x600f
   14b94:	mov	r0, #0
   14b98:	mov	r2, #5
   14b9c:	movt	r1, #1
   14ba0:	bl	111d4 <dcgettext@plt>
   14ba4:	movw	r2, #24611	; 0x6023
   14ba8:	mov	r1, r0
   14bac:	mov	r0, #1
   14bb0:	movt	r2, #1
   14bb4:	bl	11348 <__printf_chk@plt>
   14bb8:	movw	r1, #24633	; 0x6039
   14bbc:	mov	r0, #0
   14bc0:	mov	r2, #5
   14bc4:	movt	r1, #1
   14bc8:	bl	111d4 <dcgettext@plt>
   14bcc:	movw	r2, #22855	; 0x5947
   14bd0:	movw	r3, #23100	; 0x5a3c
   14bd4:	mov	r1, r0
   14bd8:	mov	r0, #1
   14bdc:	movt	r2, #1
   14be0:	movt	r3, #1
   14be4:	bl	11348 <__printf_chk@plt>
   14be8:	movw	r1, #24653	; 0x604d
   14bec:	mov	r0, #0
   14bf0:	mov	r2, #5
   14bf4:	movt	r1, #1
   14bf8:	bl	111d4 <dcgettext@plt>
   14bfc:	movw	r2, #24692	; 0x6074
   14c00:	mov	r1, r0
   14c04:	mov	r0, #1
   14c08:	movt	r2, #1
   14c0c:	pop	{fp, lr}
   14c10:	b	11348 <__printf_chk@plt>
   14c14:	b	14c18 <putchar_unlocked@plt+0x37ec>
   14c18:	push	{r4, r5, r6, sl, fp, lr}
   14c1c:	add	fp, sp, #16
   14c20:	mov	r4, r2
   14c24:	mov	r5, r1
   14c28:	mov	r6, r0
   14c2c:	bl	152b4 <putchar_unlocked@plt+0x3e88>
   14c30:	cmp	r0, #0
   14c34:	popne	{r4, r5, r6, sl, fp, pc}
   14c38:	cmp	r6, #0
   14c3c:	beq	14c50 <putchar_unlocked@plt+0x3824>
   14c40:	cmp	r5, #0
   14c44:	cmpne	r4, #0
   14c48:	bne	14c50 <putchar_unlocked@plt+0x3824>
   14c4c:	pop	{r4, r5, r6, sl, fp, pc}
   14c50:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14c54:	push	{fp, lr}
   14c58:	mov	fp, sp
   14c5c:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14c60:	cmp	r0, #0
   14c64:	popne	{fp, pc}
   14c68:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14c6c:	push	{fp, lr}
   14c70:	mov	fp, sp
   14c74:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14c78:	cmp	r0, #0
   14c7c:	popne	{fp, pc}
   14c80:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14c84:	push	{fp, lr}
   14c88:	mov	fp, sp
   14c8c:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14c90:	cmp	r0, #0
   14c94:	popne	{fp, pc}
   14c98:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14c9c:	push	{r4, r5, fp, lr}
   14ca0:	add	fp, sp, #8
   14ca4:	mov	r4, r1
   14ca8:	mov	r5, r0
   14cac:	bl	15148 <putchar_unlocked@plt+0x3d1c>
   14cb0:	cmp	r0, #0
   14cb4:	popne	{r4, r5, fp, pc}
   14cb8:	cmp	r5, #0
   14cbc:	beq	14ccc <putchar_unlocked@plt+0x38a0>
   14cc0:	cmp	r4, #0
   14cc4:	bne	14ccc <putchar_unlocked@plt+0x38a0>
   14cc8:	pop	{r4, r5, fp, pc}
   14ccc:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14cd0:	push	{fp, lr}
   14cd4:	mov	fp, sp
   14cd8:	cmp	r1, #0
   14cdc:	orreq	r1, r1, #1
   14ce0:	bl	15148 <putchar_unlocked@plt+0x3d1c>
   14ce4:	cmp	r0, #0
   14ce8:	popne	{fp, pc}
   14cec:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14cf0:	push	{fp, lr}
   14cf4:	mov	fp, sp
   14cf8:	clz	r3, r2
   14cfc:	lsr	ip, r3, #5
   14d00:	clz	r3, r1
   14d04:	lsr	r3, r3, #5
   14d08:	orrs	r3, r3, ip
   14d0c:	movwne	r1, #1
   14d10:	movwne	r2, #1
   14d14:	bl	152b4 <putchar_unlocked@plt+0x3e88>
   14d18:	cmp	r0, #0
   14d1c:	popne	{fp, pc}
   14d20:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14d24:	push	{fp, lr}
   14d28:	mov	fp, sp
   14d2c:	mov	r2, r1
   14d30:	mov	r1, r0
   14d34:	mov	r0, #0
   14d38:	bl	152b4 <putchar_unlocked@plt+0x3e88>
   14d3c:	cmp	r0, #0
   14d40:	popne	{fp, pc}
   14d44:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14d48:	mov	r2, r1
   14d4c:	mov	r1, r0
   14d50:	mov	r0, #0
   14d54:	b	14cf0 <putchar_unlocked@plt+0x38c4>
   14d58:	mov	r2, #1
   14d5c:	b	14d60 <putchar_unlocked@plt+0x3934>
   14d60:	push	{r4, r5, fp, lr}
   14d64:	add	fp, sp, #8
   14d68:	ldr	r5, [r1]
   14d6c:	mov	r4, r1
   14d70:	cmp	r0, #0
   14d74:	beq	14d8c <putchar_unlocked@plt+0x3960>
   14d78:	mov	r1, #1
   14d7c:	add	r1, r1, r5, lsr #1
   14d80:	adds	r5, r5, r1
   14d84:	bcc	14da4 <putchar_unlocked@plt+0x3978>
   14d88:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14d8c:	cmp	r5, #0
   14d90:	bne	14da4 <putchar_unlocked@plt+0x3978>
   14d94:	mov	r1, #64	; 0x40
   14d98:	cmp	r2, #64	; 0x40
   14d9c:	udiv	r5, r1, r2
   14da0:	addhi	r5, r5, #1
   14da4:	mov	r1, r5
   14da8:	bl	14c18 <putchar_unlocked@plt+0x37ec>
   14dac:	str	r5, [r4]
   14db0:	pop	{r4, r5, fp, pc}
   14db4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14db8:	add	fp, sp, #24
   14dbc:	ldr	r6, [r1]
   14dc0:	mov	r8, r1
   14dc4:	ldr	r4, [fp, #8]
   14dc8:	add	r1, r6, r6, asr #1
   14dcc:	cmp	r1, r6
   14dd0:	mvnvs	r1, #-2147483648	; 0x80000000
   14dd4:	cmp	r1, r3
   14dd8:	mov	r5, r1
   14ddc:	movgt	r5, r3
   14de0:	cmn	r3, #1
   14de4:	movle	r5, r1
   14de8:	cmn	r4, #1
   14dec:	ble	14e0c <putchar_unlocked@plt+0x39e0>
   14df0:	cmp	r4, #0
   14df4:	beq	14e60 <putchar_unlocked@plt+0x3a34>
   14df8:	cmn	r5, #1
   14dfc:	ble	14e34 <putchar_unlocked@plt+0x3a08>
   14e00:	mvn	r7, #-2147483648	; 0x80000000
   14e04:	udiv	r1, r7, r4
   14e08:	b	14e28 <putchar_unlocked@plt+0x39fc>
   14e0c:	cmn	r5, #1
   14e10:	ble	14e50 <putchar_unlocked@plt+0x3a24>
   14e14:	cmn	r4, #1
   14e18:	beq	14e60 <putchar_unlocked@plt+0x3a34>
   14e1c:	mov	r1, #-2147483648	; 0x80000000
   14e20:	mvn	r7, #-2147483648	; 0x80000000
   14e24:	sdiv	r1, r1, r4
   14e28:	cmp	r1, r5
   14e2c:	bge	14e60 <putchar_unlocked@plt+0x3a34>
   14e30:	b	14e70 <putchar_unlocked@plt+0x3a44>
   14e34:	beq	14e60 <putchar_unlocked@plt+0x3a34>
   14e38:	mov	r1, #-2147483648	; 0x80000000
   14e3c:	mvn	r7, #-2147483648	; 0x80000000
   14e40:	sdiv	r1, r1, r5
   14e44:	cmp	r1, r4
   14e48:	bge	14e60 <putchar_unlocked@plt+0x3a34>
   14e4c:	b	14e70 <putchar_unlocked@plt+0x3a44>
   14e50:	mvn	r7, #-2147483648	; 0x80000000
   14e54:	sdiv	r1, r7, r4
   14e58:	cmp	r5, r1
   14e5c:	blt	14e70 <putchar_unlocked@plt+0x3a44>
   14e60:	mul	r1, r5, r4
   14e64:	mov	r7, #64	; 0x40
   14e68:	cmp	r1, #63	; 0x3f
   14e6c:	bgt	14e78 <putchar_unlocked@plt+0x3a4c>
   14e70:	sdiv	r5, r7, r4
   14e74:	mul	r1, r5, r4
   14e78:	cmp	r0, #0
   14e7c:	moveq	r7, #0
   14e80:	streq	r7, [r8]
   14e84:	sub	r7, r5, r6
   14e88:	cmp	r7, r2
   14e8c:	bge	14f30 <putchar_unlocked@plt+0x3b04>
   14e90:	add	r5, r6, r2
   14e94:	mov	r2, #0
   14e98:	mov	r1, #0
   14e9c:	cmp	r5, r3
   14ea0:	movwgt	r2, #1
   14ea4:	cmn	r3, #1
   14ea8:	movwgt	r1, #1
   14eac:	cmp	r5, r6
   14eb0:	bvs	14f18 <putchar_unlocked@plt+0x3aec>
   14eb4:	ands	r1, r1, r2
   14eb8:	bne	14f18 <putchar_unlocked@plt+0x3aec>
   14ebc:	cmn	r4, #1
   14ec0:	ble	14ee0 <putchar_unlocked@plt+0x3ab4>
   14ec4:	cmp	r4, #0
   14ec8:	beq	14f2c <putchar_unlocked@plt+0x3b00>
   14ecc:	cmn	r5, #1
   14ed0:	ble	14f04 <putchar_unlocked@plt+0x3ad8>
   14ed4:	mvn	r1, #-2147483648	; 0x80000000
   14ed8:	udiv	r1, r1, r4
   14edc:	b	14ef8 <putchar_unlocked@plt+0x3acc>
   14ee0:	cmn	r5, #1
   14ee4:	ble	14f1c <putchar_unlocked@plt+0x3af0>
   14ee8:	cmn	r4, #1
   14eec:	beq	14f2c <putchar_unlocked@plt+0x3b00>
   14ef0:	mov	r1, #-2147483648	; 0x80000000
   14ef4:	sdiv	r1, r1, r4
   14ef8:	cmp	r1, r5
   14efc:	bge	14f2c <putchar_unlocked@plt+0x3b00>
   14f00:	b	14f18 <putchar_unlocked@plt+0x3aec>
   14f04:	beq	14f2c <putchar_unlocked@plt+0x3b00>
   14f08:	mov	r1, #-2147483648	; 0x80000000
   14f0c:	sdiv	r1, r1, r5
   14f10:	cmp	r1, r4
   14f14:	bge	14f2c <putchar_unlocked@plt+0x3b00>
   14f18:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14f1c:	mvn	r1, #-2147483648	; 0x80000000
   14f20:	sdiv	r1, r1, r4
   14f24:	cmp	r5, r1
   14f28:	blt	14f18 <putchar_unlocked@plt+0x3aec>
   14f2c:	mul	r1, r5, r4
   14f30:	bl	14c9c <putchar_unlocked@plt+0x3870>
   14f34:	str	r5, [r8]
   14f38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f3c:	push	{fp, lr}
   14f40:	mov	fp, sp
   14f44:	mov	r1, #1
   14f48:	bl	150c4 <putchar_unlocked@plt+0x3c98>
   14f4c:	cmp	r0, #0
   14f50:	popne	{fp, pc}
   14f54:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14f58:	push	{fp, lr}
   14f5c:	mov	fp, sp
   14f60:	bl	150c4 <putchar_unlocked@plt+0x3c98>
   14f64:	cmp	r0, #0
   14f68:	popne	{fp, pc}
   14f6c:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14f70:	push	{fp, lr}
   14f74:	mov	fp, sp
   14f78:	mov	r1, #1
   14f7c:	bl	150c4 <putchar_unlocked@plt+0x3c98>
   14f80:	cmp	r0, #0
   14f84:	popne	{fp, pc}
   14f88:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14f8c:	push	{fp, lr}
   14f90:	mov	fp, sp
   14f94:	bl	150c4 <putchar_unlocked@plt+0x3c98>
   14f98:	cmp	r0, #0
   14f9c:	popne	{fp, pc}
   14fa0:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14fa4:	push	{r4, r5, fp, lr}
   14fa8:	add	fp, sp, #8
   14fac:	mov	r5, r0
   14fb0:	mov	r0, r1
   14fb4:	mov	r4, r1
   14fb8:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14fbc:	cmp	r0, #0
   14fc0:	beq	14fd4 <putchar_unlocked@plt+0x3ba8>
   14fc4:	mov	r1, r5
   14fc8:	mov	r2, r4
   14fcc:	pop	{r4, r5, fp, lr}
   14fd0:	b	11198 <memcpy@plt>
   14fd4:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14fd8:	push	{r4, r5, fp, lr}
   14fdc:	add	fp, sp, #8
   14fe0:	mov	r5, r0
   14fe4:	mov	r0, r1
   14fe8:	mov	r4, r1
   14fec:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14ff0:	cmp	r0, #0
   14ff4:	beq	15008 <putchar_unlocked@plt+0x3bdc>
   14ff8:	mov	r1, r5
   14ffc:	mov	r2, r4
   15000:	pop	{r4, r5, fp, lr}
   15004:	b	11198 <memcpy@plt>
   15008:	bl	15080 <putchar_unlocked@plt+0x3c54>
   1500c:	push	{r4, r5, fp, lr}
   15010:	add	fp, sp, #8
   15014:	mov	r5, r0
   15018:	add	r0, r1, #1
   1501c:	mov	r4, r1
   15020:	bl	15118 <putchar_unlocked@plt+0x3cec>
   15024:	cmp	r0, #0
   15028:	beq	15044 <putchar_unlocked@plt+0x3c18>
   1502c:	mov	r1, #0
   15030:	mov	r2, r4
   15034:	strb	r1, [r0, r4]
   15038:	mov	r1, r5
   1503c:	pop	{r4, r5, fp, lr}
   15040:	b	11198 <memcpy@plt>
   15044:	bl	15080 <putchar_unlocked@plt+0x3c54>
   15048:	push	{r4, r5, fp, lr}
   1504c:	add	fp, sp, #8
   15050:	mov	r4, r0
   15054:	bl	112f4 <strlen@plt>
   15058:	add	r5, r0, #1
   1505c:	mov	r0, r5
   15060:	bl	15118 <putchar_unlocked@plt+0x3cec>
   15064:	cmp	r0, #0
   15068:	beq	1507c <putchar_unlocked@plt+0x3c50>
   1506c:	mov	r1, r4
   15070:	mov	r2, r5
   15074:	pop	{r4, r5, fp, lr}
   15078:	b	11198 <memcpy@plt>
   1507c:	bl	15080 <putchar_unlocked@plt+0x3c54>
   15080:	push	{fp, lr}
   15084:	mov	fp, sp
   15088:	movw	r0, #28964	; 0x7124
   1508c:	movw	r1, #24768	; 0x60c0
   15090:	mov	r2, #5
   15094:	movt	r0, #2
   15098:	movt	r1, #1
   1509c:	ldr	r4, [r0]
   150a0:	mov	r0, #0
   150a4:	bl	111d4 <dcgettext@plt>
   150a8:	movw	r2, #23719	; 0x5ca7
   150ac:	mov	r3, r0
   150b0:	mov	r0, r4
   150b4:	mov	r1, #0
   150b8:	movt	r2, #1
   150bc:	bl	11258 <error@plt>
   150c0:	bl	11414 <abort@plt>
   150c4:	clz	r2, r1
   150c8:	clz	r3, r0
   150cc:	lsr	r2, r2, #5
   150d0:	lsr	r3, r3, #5
   150d4:	orrs	r2, r3, r2
   150d8:	movwne	r1, #1
   150dc:	movwne	r0, #1
   150e0:	cmp	r1, #0
   150e4:	beq	15114 <putchar_unlocked@plt+0x3ce8>
   150e8:	mvn	r2, #-2147483648	; 0x80000000
   150ec:	udiv	r2, r2, r1
   150f0:	cmp	r2, r0
   150f4:	bcs	15114 <putchar_unlocked@plt+0x3ce8>
   150f8:	push	{fp, lr}
   150fc:	mov	fp, sp
   15100:	bl	1130c <__errno_location@plt>
   15104:	mov	r1, #12
   15108:	str	r1, [r0]
   1510c:	mov	r0, #0
   15110:	pop	{fp, pc}
   15114:	b	11120 <calloc@plt>
   15118:	cmp	r0, #0
   1511c:	movweq	r0, #1
   15120:	cmn	r0, #1
   15124:	ble	1512c <putchar_unlocked@plt+0x3d00>
   15128:	b	11264 <malloc@plt>
   1512c:	push	{fp, lr}
   15130:	mov	fp, sp
   15134:	bl	1130c <__errno_location@plt>
   15138:	mov	r1, #12
   1513c:	str	r1, [r0]
   15140:	mov	r0, #0
   15144:	pop	{fp, pc}
   15148:	push	{fp, lr}
   1514c:	mov	fp, sp
   15150:	cmp	r0, #0
   15154:	beq	15170 <putchar_unlocked@plt+0x3d44>
   15158:	cmp	r1, #0
   1515c:	beq	1517c <putchar_unlocked@plt+0x3d50>
   15160:	cmn	r1, #1
   15164:	ble	15184 <putchar_unlocked@plt+0x3d58>
   15168:	pop	{fp, lr}
   1516c:	b	111f8 <realloc@plt>
   15170:	mov	r0, r1
   15174:	pop	{fp, lr}
   15178:	b	15118 <putchar_unlocked@plt+0x3cec>
   1517c:	bl	1283c <putchar_unlocked@plt+0x1410>
   15180:	b	15190 <putchar_unlocked@plt+0x3d64>
   15184:	bl	1130c <__errno_location@plt>
   15188:	mov	r1, #12
   1518c:	str	r1, [r0]
   15190:	mov	r0, #0
   15194:	pop	{fp, pc}
   15198:	push	{r4, r5, r6, sl, fp, lr}
   1519c:	add	fp, sp, #16
   151a0:	mov	r4, r0
   151a4:	bl	11234 <__fpending@plt>
   151a8:	mov	r5, r0
   151ac:	mov	r0, r4
   151b0:	bl	11240 <ferror_unlocked@plt>
   151b4:	mov	r6, r0
   151b8:	mov	r0, r4
   151bc:	bl	12744 <putchar_unlocked@plt+0x1318>
   151c0:	cmp	r6, #0
   151c4:	beq	151e4 <putchar_unlocked@plt+0x3db8>
   151c8:	mvn	r4, #0
   151cc:	cmp	r0, #0
   151d0:	bne	15210 <putchar_unlocked@plt+0x3de4>
   151d4:	bl	1130c <__errno_location@plt>
   151d8:	mov	r1, #0
   151dc:	str	r1, [r0]
   151e0:	b	15210 <putchar_unlocked@plt+0x3de4>
   151e4:	cmp	r0, #0
   151e8:	mov	r4, r0
   151ec:	mvnne	r4, #0
   151f0:	cmp	r5, #0
   151f4:	bne	15210 <putchar_unlocked@plt+0x3de4>
   151f8:	cmp	r0, #0
   151fc:	beq	15210 <putchar_unlocked@plt+0x3de4>
   15200:	bl	1130c <__errno_location@plt>
   15204:	ldr	r0, [r0]
   15208:	subs	r4, r0, #9
   1520c:	mvnne	r4, #0
   15210:	mov	r0, r4
   15214:	pop	{r4, r5, r6, sl, fp, pc}
   15218:	push	{fp, lr}
   1521c:	mov	fp, sp
   15220:	mov	r0, #14
   15224:	bl	113a8 <nl_langinfo@plt>
   15228:	movw	r1, #23292	; 0x5afc
   1522c:	cmp	r0, #0
   15230:	movt	r1, #1
   15234:	movne	r1, r0
   15238:	movw	r0, #24785	; 0x60d1
   1523c:	ldrb	r2, [r1]
   15240:	movt	r0, #1
   15244:	cmp	r2, #0
   15248:	movne	r0, r1
   1524c:	pop	{fp, pc}
   15250:	push	{r4, r5, r6, r7, fp, lr}
   15254:	add	fp, sp, #16
   15258:	sub	sp, sp, #8
   1525c:	cmp	r0, #0
   15260:	add	r5, sp, #4
   15264:	mov	r7, r2
   15268:	mov	r4, r1
   1526c:	movne	r5, r0
   15270:	mov	r0, r5
   15274:	bl	1124c <mbrtowc@plt>
   15278:	mov	r6, r0
   1527c:	cmp	r7, #0
   15280:	beq	152a8 <putchar_unlocked@plt+0x3e7c>
   15284:	cmn	r6, #2
   15288:	bcc	152a8 <putchar_unlocked@plt+0x3e7c>
   1528c:	mov	r0, #0
   15290:	bl	12908 <putchar_unlocked@plt+0x14dc>
   15294:	cmp	r0, #0
   15298:	bne	152a8 <putchar_unlocked@plt+0x3e7c>
   1529c:	ldrb	r0, [r4]
   152a0:	mov	r6, #1
   152a4:	str	r0, [r5]
   152a8:	mov	r0, r6
   152ac:	sub	sp, fp, #16
   152b0:	pop	{r4, r5, r6, r7, fp, pc}
   152b4:	cmp	r2, #0
   152b8:	beq	152e8 <putchar_unlocked@plt+0x3ebc>
   152bc:	mvn	r3, #0
   152c0:	udiv	r3, r3, r2
   152c4:	cmp	r3, r1
   152c8:	bcs	152e8 <putchar_unlocked@plt+0x3ebc>
   152cc:	push	{fp, lr}
   152d0:	mov	fp, sp
   152d4:	bl	1130c <__errno_location@plt>
   152d8:	mov	r1, #12
   152dc:	str	r1, [r0]
   152e0:	mov	r0, #0
   152e4:	pop	{fp, pc}
   152e8:	mul	r1, r2, r1
   152ec:	b	15148 <putchar_unlocked@plt+0x3d1c>
   152f0:	cmp	r3, #0
   152f4:	cmpeq	r2, #0
   152f8:	bne	1531c <putchar_unlocked@plt+0x3ef0>
   152fc:	cmp	r1, #0
   15300:	movlt	r1, #-2147483648	; 0x80000000
   15304:	movlt	r0, #0
   15308:	blt	15318 <putchar_unlocked@plt+0x3eec>
   1530c:	cmpeq	r0, #0
   15310:	mvnne	r1, #-2147483648	; 0x80000000
   15314:	mvnne	r0, #0
   15318:	b	153c4 <putchar_unlocked@plt+0x3f98>
   1531c:	sub	sp, sp, #8
   15320:	push	{sp, lr}
   15324:	cmp	r1, #0
   15328:	blt	15348 <putchar_unlocked@plt+0x3f1c>
   1532c:	cmp	r3, #0
   15330:	blt	1537c <putchar_unlocked@plt+0x3f50>
   15334:	bl	153d4 <putchar_unlocked@plt+0x3fa8>
   15338:	ldr	lr, [sp, #4]
   1533c:	add	sp, sp, #8
   15340:	pop	{r2, r3}
   15344:	bx	lr
   15348:	rsbs	r0, r0, #0
   1534c:	sbc	r1, r1, r1, lsl #1
   15350:	cmp	r3, #0
   15354:	blt	153a0 <putchar_unlocked@plt+0x3f74>
   15358:	bl	153d4 <putchar_unlocked@plt+0x3fa8>
   1535c:	ldr	lr, [sp, #4]
   15360:	add	sp, sp, #8
   15364:	pop	{r2, r3}
   15368:	rsbs	r0, r0, #0
   1536c:	sbc	r1, r1, r1, lsl #1
   15370:	rsbs	r2, r2, #0
   15374:	sbc	r3, r3, r3, lsl #1
   15378:	bx	lr
   1537c:	rsbs	r2, r2, #0
   15380:	sbc	r3, r3, r3, lsl #1
   15384:	bl	153d4 <putchar_unlocked@plt+0x3fa8>
   15388:	ldr	lr, [sp, #4]
   1538c:	add	sp, sp, #8
   15390:	pop	{r2, r3}
   15394:	rsbs	r0, r0, #0
   15398:	sbc	r1, r1, r1, lsl #1
   1539c:	bx	lr
   153a0:	rsbs	r2, r2, #0
   153a4:	sbc	r3, r3, r3, lsl #1
   153a8:	bl	153d4 <putchar_unlocked@plt+0x3fa8>
   153ac:	ldr	lr, [sp, #4]
   153b0:	add	sp, sp, #8
   153b4:	pop	{r2, r3}
   153b8:	rsbs	r2, r2, #0
   153bc:	sbc	r3, r3, r3, lsl #1
   153c0:	bx	lr
   153c4:	push	{r1, lr}
   153c8:	mov	r0, #8
   153cc:	bl	11138 <raise@plt>
   153d0:	pop	{r1, pc}
   153d4:	cmp	r1, r3
   153d8:	cmpeq	r0, r2
   153dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153e0:	mov	r4, r0
   153e4:	movcc	r0, #0
   153e8:	mov	r5, r1
   153ec:	ldr	lr, [sp, #36]	; 0x24
   153f0:	movcc	r1, r0
   153f4:	bcc	154f0 <putchar_unlocked@plt+0x40c4>
   153f8:	cmp	r3, #0
   153fc:	clzeq	ip, r2
   15400:	clzne	ip, r3
   15404:	addeq	ip, ip, #32
   15408:	cmp	r5, #0
   1540c:	clzeq	r1, r4
   15410:	addeq	r1, r1, #32
   15414:	clzne	r1, r5
   15418:	sub	ip, ip, r1
   1541c:	sub	sl, ip, #32
   15420:	lsl	r9, r3, ip
   15424:	rsb	fp, ip, #32
   15428:	orr	r9, r9, r2, lsl sl
   1542c:	orr	r9, r9, r2, lsr fp
   15430:	lsl	r8, r2, ip
   15434:	cmp	r5, r9
   15438:	cmpeq	r4, r8
   1543c:	movcc	r0, #0
   15440:	movcc	r1, r0
   15444:	bcc	15460 <putchar_unlocked@plt+0x4034>
   15448:	mov	r0, #1
   1544c:	subs	r4, r4, r8
   15450:	lsl	r1, r0, sl
   15454:	orr	r1, r1, r0, lsr fp
   15458:	lsl	r0, r0, ip
   1545c:	sbc	r5, r5, r9
   15460:	cmp	ip, #0
   15464:	beq	154f0 <putchar_unlocked@plt+0x40c4>
   15468:	lsr	r6, r8, #1
   1546c:	orr	r6, r6, r9, lsl #31
   15470:	lsr	r7, r9, #1
   15474:	mov	r2, ip
   15478:	b	1549c <putchar_unlocked@plt+0x4070>
   1547c:	subs	r3, r4, r6
   15480:	sbc	r8, r5, r7
   15484:	adds	r3, r3, r3
   15488:	adc	r8, r8, r8
   1548c:	adds	r4, r3, #1
   15490:	adc	r5, r8, #0
   15494:	subs	r2, r2, #1
   15498:	beq	154b8 <putchar_unlocked@plt+0x408c>
   1549c:	cmp	r5, r7
   154a0:	cmpeq	r4, r6
   154a4:	bcs	1547c <putchar_unlocked@plt+0x4050>
   154a8:	adds	r4, r4, r4
   154ac:	adc	r5, r5, r5
   154b0:	subs	r2, r2, #1
   154b4:	bne	1549c <putchar_unlocked@plt+0x4070>
   154b8:	lsr	r3, r4, ip
   154bc:	orr	r3, r3, r5, lsl fp
   154c0:	lsr	r2, r5, ip
   154c4:	orr	r3, r3, r5, lsr sl
   154c8:	adds	r0, r0, r4
   154cc:	mov	r4, r3
   154d0:	lsl	r3, r2, ip
   154d4:	orr	r3, r3, r4, lsl sl
   154d8:	lsl	ip, r4, ip
   154dc:	orr	r3, r3, r4, lsr fp
   154e0:	adc	r1, r1, r5
   154e4:	subs	r0, r0, ip
   154e8:	mov	r5, r2
   154ec:	sbc	r1, r1, r3
   154f0:	cmp	lr, #0
   154f4:	strdne	r4, [lr]
   154f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15500:	mov	r7, r0
   15504:	ldr	r6, [pc, #72]	; 15554 <putchar_unlocked@plt+0x4128>
   15508:	ldr	r5, [pc, #72]	; 15558 <putchar_unlocked@plt+0x412c>
   1550c:	add	r6, pc, r6
   15510:	add	r5, pc, r5
   15514:	sub	r6, r6, r5
   15518:	mov	r8, r1
   1551c:	mov	r9, r2
   15520:	bl	11100 <calloc@plt-0x20>
   15524:	asrs	r6, r6, #2
   15528:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1552c:	mov	r4, #0
   15530:	add	r4, r4, #1
   15534:	ldr	r3, [r5], #4
   15538:	mov	r2, r9
   1553c:	mov	r1, r8
   15540:	mov	r0, r7
   15544:	blx	r3
   15548:	cmp	r6, r4
   1554c:	bne	15530 <putchar_unlocked@plt+0x4104>
   15550:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15554:	strdeq	r1, [r1], -r8
   15558:	strdeq	r1, [r1], -r0
   1555c:	bx	lr
   15560:	ldr	r3, [pc, #12]	; 15574 <putchar_unlocked@plt+0x4148>
   15564:	mov	r1, #0
   15568:	add	r3, pc, r3
   1556c:	ldr	r2, [r3]
   15570:	b	11324 <__cxa_atexit@plt>
   15574:	andeq	r1, r1, ip, lsr #23
   15578:	mov	r2, r1
   1557c:	mov	r1, r0
   15580:	mov	r0, #3
   15584:	b	113f0 <__xstat64@plt>

Disassembly of section .fini:

00015588 <.fini>:
   15588:	push	{r3, lr}
   1558c:	pop	{r3, pc}
