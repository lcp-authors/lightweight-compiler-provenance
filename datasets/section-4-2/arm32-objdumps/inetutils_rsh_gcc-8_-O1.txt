
../repos/inetutils/src/rsh:     file format elf32-littlearm


Disassembly of section .init:

00010fc8 <.init>:
   10fc8:	push	{r3, lr}
   10fcc:	bl	11324 <__assert_fail@plt+0x48>
   10fd0:	pop	{r3, pc}

Disassembly of section .plt:

00010fd4 <fputs_unlocked@plt-0x14>:
   10fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd8:	ldr	lr, [pc, #4]	; 10fe4 <fputs_unlocked@plt-0x4>
   10fdc:	add	lr, pc, lr
   10fe0:	ldr	pc, [lr, #8]!
   10fe4:	andeq	r9, r1, ip, lsl r0

00010fe8 <fputs_unlocked@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #102400	; 0x19000
   10ff0:	ldr	pc, [ip, #28]!

00010ff4 <strcmp@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #102400	; 0x19000
   10ffc:	ldr	pc, [ip, #20]!

00011000 <strtol@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #102400	; 0x19000
   11008:	ldr	pc, [ip, #12]!

0001100c <getpwuid@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #102400	; 0x19000
   11014:	ldr	pc, [ip, #4]!

00011018 <setsockopt@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #24, 20	; 0x18000
   11020:	ldr	pc, [ip, #4092]!	; 0xffc

00011024 <printf@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #24, 20	; 0x18000
   1102c:	ldr	pc, [ip, #4084]!	; 0xff4

00011030 <read@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #24, 20	; 0x18000
   11038:	ldr	pc, [ip, #4076]!	; 0xfec

0001103c <getuid@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #24, 20	; 0x18000
   11044:	ldr	pc, [ip, #4068]!	; 0xfe4

00011048 <sigprocmask@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #24, 20	; 0x18000
   11050:	ldr	pc, [ip, #4060]!	; 0xfdc

00011054 <memmove@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #24, 20	; 0x18000
   1105c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011060 <strchrnul@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #24, 20	; 0x18000
   11068:	ldr	pc, [ip, #4044]!	; 0xfcc

0001106c <free@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #24, 20	; 0x18000
   11074:	ldr	pc, [ip, #4036]!	; 0xfc4

00011078 <strndup@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #24, 20	; 0x18000
   11080:	ldr	pc, [ip, #4028]!	; 0xfbc

00011084 <memcpy@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #24, 20	; 0x18000
   1108c:	ldr	pc, [ip, #4020]!	; 0xfb4

00011090 <signal@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #24, 20	; 0x18000
   11098:	ldr	pc, [ip, #4012]!	; 0xfac

0001109c <fwrite_unlocked@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #24, 20	; 0x18000
   110a4:	ldr	pc, [ip, #4004]!	; 0xfa4

000110a8 <select@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #24, 20	; 0x18000
   110b0:	ldr	pc, [ip, #3996]!	; 0xf9c

000110b4 <sleep@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #24, 20	; 0x18000
   110bc:	ldr	pc, [ip, #3988]!	; 0xf94

000110c0 <realloc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #24, 20	; 0x18000
   110c8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110cc <strcasecmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #24, 20	; 0x18000
   110d4:	ldr	pc, [ip, #3972]!	; 0xf84

000110d8 <funlockfile@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #24, 20	; 0x18000
   110e0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110e4 <seteuid@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #24, 20	; 0x18000
   110ec:	ldr	pc, [ip, #3956]!	; 0xf74

000110f0 <sigaction@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #24, 20	; 0x18000
   110f8:	ldr	pc, [ip, #3948]!	; 0xf6c

000110fc <fwrite@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #24, 20	; 0x18000
   11104:	ldr	pc, [ip, #3940]!	; 0xf64

00011108 <ioctl@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #24, 20	; 0x18000
   11110:	ldr	pc, [ip, #3932]!	; 0xf5c

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #24, 20	; 0x18000
   1111c:	ldr	pc, [ip, #3924]!	; 0xf54

00011120 <error@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #24, 20	; 0x18000
   11128:	ldr	pc, [ip, #3916]!	; 0xf4c

0001112c <getenv@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #24, 20	; 0x18000
   11134:	ldr	pc, [ip, #3908]!	; 0xf44

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #24, 20	; 0x18000
   11140:	ldr	pc, [ip, #3900]!	; 0xf3c

00011144 <sigaddset@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #24, 20	; 0x18000
   1114c:	ldr	pc, [ip, #3892]!	; 0xf34

00011150 <__libc_start_main@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #24, 20	; 0x18000
   11158:	ldr	pc, [ip, #3884]!	; 0xf2c

0001115c <strerror@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #24, 20	; 0x18000
   11164:	ldr	pc, [ip, #3876]!	; 0xf24

00011168 <__ctype_tolower_loc@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #24, 20	; 0x18000
   11170:	ldr	pc, [ip, #3868]!	; 0xf1c

00011174 <__gmon_start__@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #24, 20	; 0x18000
   1117c:	ldr	pc, [ip, #3860]!	; 0xf14

00011180 <rcmd_af@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #24, 20	; 0x18000
   11188:	ldr	pc, [ip, #3852]!	; 0xf0c

0001118c <mempcpy@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #24, 20	; 0x18000
   11194:	ldr	pc, [ip, #3844]!	; 0xf04

00011198 <kill@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #24, 20	; 0x18000
   111a0:	ldr	pc, [ip, #3836]!	; 0xefc

000111a4 <__ctype_b_loc@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #24, 20	; 0x18000
   111ac:	ldr	pc, [ip, #3828]!	; 0xef4

000111b0 <exit@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #24, 20	; 0x18000
   111b8:	ldr	pc, [ip, #3820]!	; 0xeec

000111bc <strlen@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #24, 20	; 0x18000
   111c4:	ldr	pc, [ip, #3812]!	; 0xee4

000111c8 <strchr@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #24, 20	; 0x18000
   111d0:	ldr	pc, [ip, #3804]!	; 0xedc

000111d4 <fprintf@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #24, 20	; 0x18000
   111dc:	ldr	pc, [ip, #3796]!	; 0xed4

000111e0 <execv@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #24, 20	; 0x18000
   111e8:	ldr	pc, [ip, #3788]!	; 0xecc

000111ec <__errno_location@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #24, 20	; 0x18000
   111f4:	ldr	pc, [ip, #3780]!	; 0xec4

000111f8 <getservbyname@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #24, 20	; 0x18000
   11200:	ldr	pc, [ip, #3772]!	; 0xebc

00011204 <strerror_r@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #24, 20	; 0x18000
   1120c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011210 <memset@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #24, 20	; 0x18000
   11218:	ldr	pc, [ip, #3756]!	; 0xeac

0001121c <write@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #24, 20	; 0x18000
   11224:	ldr	pc, [ip, #3748]!	; 0xea4

00011228 <memchr@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #24, 20	; 0x18000
   11230:	ldr	pc, [ip, #3740]!	; 0xe9c

00011234 <shutdown@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #24, 20	; 0x18000
   1123c:	ldr	pc, [ip, #3732]!	; 0xe94

00011240 <__overflow@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #24, 20	; 0x18000
   11248:	ldr	pc, [ip, #3724]!	; 0xe8c

0001124c <sigemptyset@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #24, 20	; 0x18000
   11254:	ldr	pc, [ip, #3716]!	; 0xe84

00011258 <fork@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #24, 20	; 0x18000
   11260:	ldr	pc, [ip, #3708]!	; 0xe7c

00011264 <strrchr@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #24, 20	; 0x18000
   1126c:	ldr	pc, [ip, #3700]!	; 0xe74

00011270 <vfprintf@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #24, 20	; 0x18000
   11278:	ldr	pc, [ip, #3692]!	; 0xe6c

0001127c <fputc@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #24, 20	; 0x18000
   11284:	ldr	pc, [ip, #3684]!	; 0xe64

00011288 <setuid@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #24, 20	; 0x18000
   11290:	ldr	pc, [ip, #3676]!	; 0xe5c

00011294 <flockfile@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #24, 20	; 0x18000
   1129c:	ldr	pc, [ip, #3668]!	; 0xe54

000112a0 <vsnprintf@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #24, 20	; 0x18000
   112a8:	ldr	pc, [ip, #3660]!	; 0xe4c

000112ac <qsort@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #24, 20	; 0x18000
   112b4:	ldr	pc, [ip, #3652]!	; 0xe44

000112b8 <strncmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #24, 20	; 0x18000
   112c0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112c4 <abort@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #24, 20	; 0x18000
   112cc:	ldr	pc, [ip, #3636]!	; 0xe34

000112d0 <close@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #24, 20	; 0x18000
   112d8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112dc <__assert_fail@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #24, 20	; 0x18000
   112e4:	ldr	pc, [ip, #3620]!	; 0xe24

Disassembly of section .text:

000112e8 <argp_parse@@Base-0x13cc>:
   112e8:	mov	fp, #0
   112ec:	mov	lr, #0
   112f0:	pop	{r1}		; (ldr r1, [sp], #4)
   112f4:	mov	r2, sp
   112f8:	push	{r2}		; (str r2, [sp, #-4]!)
   112fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11300:	ldr	ip, [pc, #16]	; 11318 <__assert_fail@plt+0x3c>
   11304:	push	{ip}		; (str ip, [sp, #-4]!)
   11308:	ldr	r0, [pc, #12]	; 1131c <__assert_fail@plt+0x40>
   1130c:	ldr	r3, [pc, #12]	; 11320 <__assert_fail@plt+0x44>
   11310:	bl	11150 <__libc_start_main@plt>
   11314:	bl	112c4 <abort@plt>
   11318:	andeq	r8, r1, ip, ror r3
   1131c:	andeq	r1, r1, ip, lsr fp
   11320:	andeq	r8, r1, ip, lsl r3
   11324:	ldr	r3, [pc, #20]	; 11340 <__assert_fail@plt+0x64>
   11328:	ldr	r2, [pc, #20]	; 11344 <__assert_fail@plt+0x68>
   1132c:	add	r3, pc, r3
   11330:	ldr	r2, [r3, r2]
   11334:	cmp	r2, #0
   11338:	bxeq	lr
   1133c:	b	11174 <__gmon_start__@plt>
   11340:	andeq	r8, r1, ip, asr #25
   11344:	andeq	r0, r0, ip, lsl #2
   11348:	ldr	r0, [pc, #24]	; 11368 <__assert_fail@plt+0x8c>
   1134c:	ldr	r3, [pc, #24]	; 1136c <__assert_fail@plt+0x90>
   11350:	cmp	r3, r0
   11354:	bxeq	lr
   11358:	ldr	r3, [pc, #16]	; 11370 <__assert_fail@plt+0x94>
   1135c:	cmp	r3, #0
   11360:	bxeq	lr
   11364:	bx	r3
   11368:	andeq	sl, r2, r4, lsr r2
   1136c:	andeq	sl, r2, r4, lsr r2
   11370:	andeq	r0, r0, r0
   11374:	ldr	r0, [pc, #36]	; 113a0 <__assert_fail@plt+0xc4>
   11378:	ldr	r1, [pc, #36]	; 113a4 <__assert_fail@plt+0xc8>
   1137c:	sub	r1, r1, r0
   11380:	asr	r1, r1, #2
   11384:	add	r1, r1, r1, lsr #31
   11388:	asrs	r1, r1, #1
   1138c:	bxeq	lr
   11390:	ldr	r3, [pc, #16]	; 113a8 <__assert_fail@plt+0xcc>
   11394:	cmp	r3, #0
   11398:	bxeq	lr
   1139c:	bx	r3
   113a0:	andeq	sl, r2, r4, lsr r2
   113a4:	andeq	sl, r2, r4, lsr r2
   113a8:	andeq	r0, r0, r0
   113ac:	push	{r4, lr}
   113b0:	ldr	r4, [pc, #24]	; 113d0 <__assert_fail@plt+0xf4>
   113b4:	ldrb	r3, [r4]
   113b8:	cmp	r3, #0
   113bc:	popne	{r4, pc}
   113c0:	bl	11348 <__assert_fail@plt+0x6c>
   113c4:	mov	r3, #1
   113c8:	strb	r3, [r4]
   113cc:	pop	{r4, pc}
   113d0:	andeq	sl, r2, r8, asr #4
   113d4:	b	11374 <__assert_fail@plt+0x98>
   113d8:	sub	r0, r0, #52	; 0x34
   113dc:	cmp	r0, #67	; 0x43
   113e0:	ldrls	pc, [pc, r0, lsl #2]
   113e4:	b	11574 <__assert_fail@plt+0x298>
   113e8:	andeq	r1, r1, r0, lsl #10
   113ec:	andeq	r1, r1, r4, ror r5
   113f0:	andeq	r1, r1, r8, lsl r5
   113f4:	andeq	r1, r1, r4, ror r5
   113f8:	strdeq	r1, [r1], -r8
   113fc:	andeq	r1, r1, r4, ror r5
   11400:	andeq	r1, r1, r4, ror r5
   11404:	andeq	r1, r1, r4, ror r5
   11408:	andeq	r1, r1, r4, ror r5
   1140c:	andeq	r1, r1, r4, ror r5
   11410:	andeq	r1, r1, r4, ror r5
   11414:	andeq	r1, r1, r4, ror r5
   11418:	andeq	r1, r1, r4, ror r5
   1141c:	andeq	r1, r1, r4, ror r5
   11420:	andeq	r1, r1, r4, ror r5
   11424:	andeq	r1, r1, r4, ror r5
   11428:	andeq	r1, r1, r4, ror r5
   1142c:	andeq	r1, r1, r4, ror r5
   11430:	andeq	r1, r1, r4, ror r5
   11434:	andeq	r1, r1, r4, ror r5
   11438:	andeq	r1, r1, r4, ror r5
   1143c:	andeq	r1, r1, r4, ror r5
   11440:	andeq	r1, r1, r4, ror r5
   11444:	andeq	r1, r1, r4, ror r5
   11448:	strdeq	r1, [r1], -r8
   1144c:	andeq	r1, r1, r4, ror r5
   11450:	andeq	r1, r1, r4, ror r5
   11454:	andeq	r1, r1, r4, ror r5
   11458:	andeq	r1, r1, r4, ror r5
   1145c:	andeq	r1, r1, r4, ror r5
   11460:	andeq	r1, r1, r4, ror r5
   11464:	andeq	r1, r1, r4, ror r5
   11468:	andeq	r1, r1, r4, ror r5
   1146c:	andeq	r1, r1, r4, ror r5
   11470:	andeq	r1, r1, r4, ror r5
   11474:	andeq	r1, r1, r4, ror r5
   11478:	andeq	r1, r1, r4, ror r5
   1147c:	andeq	r1, r1, r4, ror r5
   11480:	andeq	r1, r1, r4, ror r5
   11484:	andeq	r1, r1, r4, ror r5
   11488:	andeq	r1, r1, r4, ror r5
   1148c:	andeq	r1, r1, r4, ror r5
   11490:	andeq	r1, r1, r4, ror r5
   11494:	andeq	r1, r1, r4, ror r5
   11498:	andeq	r1, r1, r4, ror r5
   1149c:	andeq	r1, r1, r4, ror r5
   114a0:	andeq	r1, r1, r4, ror r5
   114a4:	andeq	r1, r1, r4, ror r5
   114a8:	andeq	r1, r1, r0, lsr r5
   114ac:	strdeq	r1, [r1], -r8
   114b0:	andeq	r1, r1, r4, ror r5
   114b4:	andeq	r1, r1, r4, ror r5
   114b8:	andeq	r1, r1, r4, ror r5
   114bc:	andeq	r1, r1, r4, ror r5
   114c0:	andeq	r1, r1, r4, ror r5
   114c4:	andeq	r1, r1, r4, ror r5
   114c8:	andeq	r1, r1, r8, asr #10
   114cc:	andeq	r1, r1, r4, ror r5
   114d0:	andeq	r1, r1, ip, asr r5
   114d4:	andeq	r1, r1, r4, ror r5
   114d8:	andeq	r1, r1, r4, ror r5
   114dc:	andeq	r1, r1, r4, ror r5
   114e0:	andeq	r1, r1, r4, ror r5
   114e4:	andeq	r1, r1, r4, ror r5
   114e8:	andeq	r1, r1, r4, ror r5
   114ec:	andeq	r1, r1, r4, ror r5
   114f0:	andeq	r1, r1, r4, ror r5
   114f4:	strdeq	r1, [r1], -r8
   114f8:	mov	r0, #0
   114fc:	bx	lr
   11500:	movw	r3, #41548	; 0xa24c
   11504:	movt	r3, #2
   11508:	mov	r2, #2
   1150c:	strh	r2, [r3]
   11510:	mov	r0, #0
   11514:	bx	lr
   11518:	movw	r3, #41548	; 0xa24c
   1151c:	movt	r3, #2
   11520:	mov	r2, #10
   11524:	strh	r2, [r3]
   11528:	mov	r0, #0
   1152c:	bx	lr
   11530:	movw	r3, #41548	; 0xa24c
   11534:	movt	r3, #2
   11538:	mov	r2, #1
   1153c:	str	r2, [r3, #4]
   11540:	mov	r0, #0
   11544:	bx	lr
   11548:	movw	r3, #41548	; 0xa24c
   1154c:	movt	r3, #2
   11550:	str	r1, [r3, #8]
   11554:	mov	r0, #0
   11558:	bx	lr
   1155c:	movw	r3, #41548	; 0xa24c
   11560:	movt	r3, #2
   11564:	mov	r2, #1
   11568:	str	r2, [r3, #12]
   1156c:	mov	r0, #0
   11570:	bx	lr
   11574:	mov	r0, #7
   11578:	bx	lr
   1157c:	movw	r3, #41548	; 0xa24c
   11580:	movt	r3, #2
   11584:	ldr	r2, [r3, #16]
   11588:	add	r2, r2, #1
   1158c:	str	r2, [r3, #16]
   11590:	bx	lr
   11594:	push	{lr}		; (str lr, [sp, #-4]!)
   11598:	sub	sp, sp, #12
   1159c:	strb	r0, [sp, #7]
   115a0:	movw	r3, #41624	; 0xa298
   115a4:	movt	r3, #2
   115a8:	mov	r2, #1
   115ac:	add	r1, sp, #7
   115b0:	ldr	r0, [r3]
   115b4:	bl	1121c <write@plt>
   115b8:	add	sp, sp, #12
   115bc:	pop	{pc}		; (ldr pc, [sp], #4)
   115c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   115c4:	strd	r6, [sp, #8]
   115c8:	strd	r8, [sp, #16]
   115cc:	strd	sl, [sp, #24]
   115d0:	str	lr, [sp, #32]
   115d4:	sub	sp, sp, #8704	; 0x2200
   115d8:	sub	sp, sp, #36	; 0x24
   115dc:	mov	r6, r3
   115e0:	orrs	r3, r0, r2
   115e4:	bne	11728 <__assert_fail@plt+0x44c>
   115e8:	movw	r3, #41624	; 0xa298
   115ec:	movt	r3, #2
   115f0:	ldr	r0, [r3]
   115f4:	bl	112d0 <close@plt>
   115f8:	bl	111ec <__errno_location@plt>
   115fc:	mov	sl, r0
   11600:	add	r3, r6, #31
   11604:	cmp	r6, #0
   11608:	movge	r3, r6
   1160c:	asr	r3, r3, #5
   11610:	str	r3, [sp, #12]
   11614:	rsbs	r2, r6, #0
   11618:	and	r3, r6, #31
   1161c:	and	r2, r2, #31
   11620:	rsbpl	r3, r2, #0
   11624:	mov	r7, #1
   11628:	lsl	r7, r7, r3
   1162c:	mov	r4, #0
   11630:	movw	fp, #33724	; 0x83bc
   11634:	movt	fp, #1
   11638:	b	116e0 <__assert_fail@plt+0x404>
   1163c:	ldr	r1, [sl]
   11640:	cmp	r1, #4
   11644:	beq	11664 <__assert_fail@plt+0x388>
   11648:	mov	r2, fp
   1164c:	mov	r0, #1
   11650:	bl	11120 <error@plt>
   11654:	b	11664 <__assert_fail@plt+0x388>
   11658:	ldr	r3, [sl]
   1165c:	cmp	r3, #11
   11660:	bne	11714 <__assert_fail@plt+0x438>
   11664:	add	r3, sp, #8320	; 0x2080
   11668:	add	r3, r3, #28
   1166c:	add	r2, sp, #8448	; 0x2100
   11670:	add	r2, r2, #28
   11674:	str	r4, [r3, #4]!
   11678:	cmp	r3, r2
   1167c:	bne	11674 <__assert_fail@plt+0x398>
   11680:	ldr	r3, [r5, #-384]	; 0xfffffe80
   11684:	orr	r3, r3, r7
   11688:	str	r3, [r5, #-384]	; 0xfffffe80
   1168c:	str	r4, [sp]
   11690:	mov	r3, r4
   11694:	add	r2, sp, #8320	; 0x2080
   11698:	add	r2, r2, #32
   1169c:	mov	r1, r4
   116a0:	add	r0, r6, #1
   116a4:	bl	110a8 <select@plt>
   116a8:	cmp	r0, #0
   116ac:	blt	1163c <__assert_fail@plt+0x360>
   116b0:	ldr	r3, [r5, #-384]	; 0xfffffe80
   116b4:	tst	r7, r3
   116b8:	beq	11664 <__assert_fail@plt+0x388>
   116bc:	mov	r2, r8
   116c0:	mov	r1, r9
   116c4:	mov	r0, r6
   116c8:	bl	1121c <write@plt>
   116cc:	cmp	r0, #0
   116d0:	blt	11658 <__assert_fail@plt+0x37c>
   116d4:	add	r9, r9, r0
   116d8:	subs	r8, r8, r0
   116dc:	bne	11664 <__assert_fail@plt+0x388>
   116e0:	str	r4, [sl]
   116e4:	mov	r2, #8192	; 0x2000
   116e8:	add	r1, sp, #160	; 0xa0
   116ec:	mov	r0, r4
   116f0:	bl	11030 <read@plt>
   116f4:	subs	r8, r0, #0
   116f8:	ble	11714 <__assert_fail@plt+0x438>
   116fc:	add	r9, sp, #160	; 0xa0
   11700:	add	r3, sp, #8704	; 0x2200
   11704:	add	r3, r3, #32
   11708:	ldr	r2, [sp, #12]
   1170c:	add	r5, r3, r2, lsl #2
   11710:	b	11664 <__assert_fail@plt+0x388>
   11714:	mov	r1, #1
   11718:	mov	r0, r6
   1171c:	bl	11234 <shutdown@plt>
   11720:	mov	r0, #0
   11724:	bl	111b0 <exit@plt>
   11728:	mov	r2, #0
   1172c:	mov	r0, #2
   11730:	bl	11048 <sigprocmask@plt>
   11734:	add	r0, sp, #24
   11738:	bl	1124c <sigemptyset@plt>
   1173c:	mov	r3, #268435456	; 0x10000000
   11740:	str	r3, [sp, #152]	; 0x98
   11744:	movw	r3, #5500	; 0x157c
   11748:	movt	r3, #1
   1174c:	str	r3, [sp, #20]
   11750:	mov	r2, #0
   11754:	add	r1, sp, #20
   11758:	mov	r0, #13
   1175c:	bl	110f0 <sigaction@plt>
   11760:	add	r3, sp, #8576	; 0x2180
   11764:	add	r3, r3, #28
   11768:	add	r1, sp, #8704	; 0x2200
   1176c:	add	r1, r1, #28
   11770:	mov	r2, #0
   11774:	str	r2, [r3, #4]!
   11778:	cmp	r3, r1
   1177c:	bne	11774 <__assert_fail@plt+0x498>
   11780:	movw	r3, #41624	; 0xa298
   11784:	movt	r3, #2
   11788:	ldr	r3, [r3]
   1178c:	add	r2, r3, #31
   11790:	cmp	r3, #0
   11794:	movge	r2, r3
   11798:	asr	r2, r2, #5
   1179c:	add	r1, sp, #8704	; 0x2200
   117a0:	add	r1, r1, #32
   117a4:	add	r2, r1, r2, lsl #2
   117a8:	rsbs	r1, r3, #0
   117ac:	and	r3, r3, #31
   117b0:	and	r1, r1, #31
   117b4:	rsbpl	r3, r1, #0
   117b8:	mov	r8, #1
   117bc:	ldr	r1, [r2, #-128]	; 0xffffff80
   117c0:	orr	r3, r1, r8, lsl r3
   117c4:	str	r3, [r2, #-128]	; 0xffffff80
   117c8:	add	r5, r6, #31
   117cc:	cmp	r6, #0
   117d0:	movge	r5, r6
   117d4:	asr	r5, r5, #5
   117d8:	rsbs	r2, r6, #0
   117dc:	and	r3, r6, #31
   117e0:	and	r2, r2, #31
   117e4:	rsbpl	r3, r2, #0
   117e8:	lsl	r8, r8, r3
   117ec:	add	r3, sp, #8704	; 0x2200
   117f0:	add	r3, r3, #32
   117f4:	add	r2, r3, r5, lsl #2
   117f8:	ldr	r3, [r2, #-128]	; 0xffffff80
   117fc:	orr	r3, r3, r8
   11800:	str	r3, [r2, #-128]	; 0xffffff80
   11804:	movw	r4, #41624	; 0xa298
   11808:	movt	r4, #2
   1180c:	mov	r7, #1
   11810:	movw	r9, #33724	; 0x83bc
   11814:	movt	r9, #1
   11818:	b	11934 <__assert_fail@plt+0x658>
   1181c:	bl	111ec <__errno_location@plt>
   11820:	ldr	r1, [r0]
   11824:	cmp	r1, #4
   11828:	beq	119d4 <__assert_fail@plt+0x6f8>
   1182c:	mov	r2, r9
   11830:	mov	r0, r7
   11834:	bl	11120 <error@plt>
   11838:	b	119d4 <__assert_fail@plt+0x6f8>
   1183c:	bl	111ec <__errno_location@plt>
   11840:	mov	sl, r0
   11844:	mov	r3, #0
   11848:	str	r3, [r0]
   1184c:	mov	r2, #8192	; 0x2000
   11850:	add	r1, sp, #160	; 0xa0
   11854:	ldr	r0, [r4]
   11858:	bl	11030 <read@plt>
   1185c:	subs	r2, r0, #0
   11860:	bgt	118b0 <__assert_fail@plt+0x5d4>
   11864:	ldr	r3, [sl]
   11868:	cmp	r3, #11
   1186c:	beq	119bc <__assert_fail@plt+0x6e0>
   11870:	ldr	r3, [r4]
   11874:	add	r2, r3, #31
   11878:	cmp	r3, #0
   1187c:	movge	r2, r3
   11880:	asr	r2, r2, #5
   11884:	add	r1, sp, #8704	; 0x2200
   11888:	add	r1, r1, #32
   1188c:	add	r2, r1, r2, lsl #2
   11890:	rsbs	r1, r3, #0
   11894:	and	r3, r3, #31
   11898:	and	r1, r1, #31
   1189c:	rsbpl	r3, r1, #0
   118a0:	ldr	r1, [r2, #-128]	; 0xffffff80
   118a4:	bic	r3, r1, r7, lsl r3
   118a8:	str	r3, [r2, #-128]	; 0xffffff80
   118ac:	b	119bc <__assert_fail@plt+0x6e0>
   118b0:	add	r1, sp, #160	; 0xa0
   118b4:	mov	r0, #2
   118b8:	bl	1121c <write@plt>
   118bc:	b	119bc <__assert_fail@plt+0x6e0>
   118c0:	bl	111ec <__errno_location@plt>
   118c4:	mov	sl, r0
   118c8:	mov	r3, #0
   118cc:	str	r3, [r0]
   118d0:	mov	r2, #8192	; 0x2000
   118d4:	add	r1, sp, #160	; 0xa0
   118d8:	mov	r0, r6
   118dc:	bl	11030 <read@plt>
   118e0:	subs	r2, r0, #0
   118e4:	bgt	11910 <__assert_fail@plt+0x634>
   118e8:	ldr	r3, [sl]
   118ec:	cmp	r3, #11
   118f0:	beq	119d4 <__assert_fail@plt+0x6f8>
   118f4:	add	r3, sp, #8704	; 0x2200
   118f8:	add	r3, r3, #32
   118fc:	add	r2, r3, r5, lsl #2
   11900:	ldr	r3, [r2, #-128]	; 0xffffff80
   11904:	bic	r3, r3, r8
   11908:	str	r3, [r2, #-128]	; 0xffffff80
   1190c:	b	119d4 <__assert_fail@plt+0x6f8>
   11910:	add	r1, sp, #160	; 0xa0
   11914:	mov	r0, r7
   11918:	bl	1121c <write@plt>
   1191c:	b	119d4 <__assert_fail@plt+0x6f8>
   11920:	movw	r3, #41548	; 0xa24c
   11924:	movt	r3, #2
   11928:	ldr	r3, [r3, #16]
   1192c:	cmp	r3, #0
   11930:	bne	11a28 <__assert_fail@plt+0x74c>
   11934:	ldr	r3, [r4]
   11938:	cmp	r6, r3
   1193c:	movge	sl, r6
   11940:	movlt	sl, r3
   11944:	mov	r2, #128	; 0x80
   11948:	add	r1, sp, #8576	; 0x2180
   1194c:	add	r1, r1, #32
   11950:	add	r0, sp, #8448	; 0x2100
   11954:	add	r0, r0, #32
   11958:	bl	11084 <memcpy@plt>
   1195c:	mov	r2, #0
   11960:	str	r2, [sp]
   11964:	mov	r3, r2
   11968:	add	r1, sp, #8448	; 0x2100
   1196c:	add	r1, r1, #32
   11970:	add	r0, sl, #1
   11974:	bl	110a8 <select@plt>
   11978:	cmp	r0, #0
   1197c:	blt	1181c <__assert_fail@plt+0x540>
   11980:	ldr	r3, [r4]
   11984:	add	r2, r3, #31
   11988:	cmp	r3, #0
   1198c:	movge	r2, r3
   11990:	asr	r2, r2, #5
   11994:	add	r1, sp, #8704	; 0x2200
   11998:	add	r1, r1, #32
   1199c:	add	r2, r1, r2, lsl #2
   119a0:	rsbs	r1, r3, #0
   119a4:	and	r3, r3, #31
   119a8:	and	r1, r1, #31
   119ac:	rsbpl	r3, r1, #0
   119b0:	ldr	r2, [r2, #-256]	; 0xffffff00
   119b4:	ands	r3, r2, r7, lsl r3
   119b8:	bne	1183c <__assert_fail@plt+0x560>
   119bc:	add	r3, sp, #8704	; 0x2200
   119c0:	add	r3, r3, #32
   119c4:	add	r3, r3, r5, lsl #2
   119c8:	ldr	r3, [r3, #-256]	; 0xffffff00
   119cc:	tst	r8, r3
   119d0:	bne	118c0 <__assert_fail@plt+0x5e4>
   119d4:	ldr	r3, [r4]
   119d8:	add	r2, r3, #31
   119dc:	cmp	r3, #0
   119e0:	movge	r2, r3
   119e4:	asr	r2, r2, #5
   119e8:	add	r1, sp, #8704	; 0x2200
   119ec:	add	r1, r1, #32
   119f0:	add	r2, r1, r2, lsl #2
   119f4:	rsbs	r1, r3, #0
   119f8:	and	r3, r3, #31
   119fc:	and	r1, r1, #31
   11a00:	rsbpl	r3, r1, #0
   11a04:	ldr	r2, [r2, #-128]	; 0xffffff80
   11a08:	ands	r3, r2, r7, lsl r3
   11a0c:	bne	11920 <__assert_fail@plt+0x644>
   11a10:	add	r3, sp, #8704	; 0x2200
   11a14:	add	r3, r3, #32
   11a18:	add	r3, r3, r5, lsl #2
   11a1c:	ldr	r3, [r3, #-128]	; 0xffffff80
   11a20:	tst	r8, r3
   11a24:	bne	11920 <__assert_fail@plt+0x644>
   11a28:	add	sp, sp, #8704	; 0x2200
   11a2c:	add	sp, sp, #36	; 0x24
   11a30:	ldrd	r4, [sp]
   11a34:	ldrd	r6, [sp, #8]
   11a38:	ldrd	r8, [sp, #16]
   11a3c:	ldrd	sl, [sp, #24]
   11a40:	add	sp, sp, #32
   11a44:	pop	{pc}		; (ldr pc, [sp], #4)
   11a48:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a4c:	strd	r6, [sp, #8]
   11a50:	str	r8, [sp, #16]
   11a54:	str	lr, [sp, #20]
   11a58:	mov	r6, r0
   11a5c:	ldr	r0, [r0]
   11a60:	cmp	r0, #0
   11a64:	beq	11ab0 <__assert_fail@plt+0x7d4>
   11a68:	mov	r5, r6
   11a6c:	mov	r4, #0
   11a70:	bl	111bc <strlen@plt>
   11a74:	add	r4, r4, #1
   11a78:	add	r4, r4, r0
   11a7c:	ldr	r0, [r5, #4]!
   11a80:	cmp	r0, #0
   11a84:	bne	11a70 <__assert_fail@plt+0x794>
   11a88:	mov	r0, r4
   11a8c:	bl	139f4 <argp_parse@@Base+0x1340>
   11a90:	subs	r8, r0, #0
   11a94:	beq	11ab8 <__assert_fail@plt+0x7dc>
   11a98:	ldr	r5, [r6]
   11a9c:	cmp	r5, #0
   11aa0:	beq	11b24 <__assert_fail@plt+0x848>
   11aa4:	mov	r4, r8
   11aa8:	mov	r7, #32
   11aac:	b	11af0 <__assert_fail@plt+0x814>
   11ab0:	mov	r4, #0
   11ab4:	b	11a88 <__assert_fail@plt+0x7ac>
   11ab8:	bl	111ec <__errno_location@plt>
   11abc:	movw	r2, #33732	; 0x83c4
   11ac0:	movt	r2, #1
   11ac4:	ldr	r1, [r0]
   11ac8:	mov	r0, #1
   11acc:	bl	11120 <error@plt>
   11ad0:	b	11a98 <__assert_fail@plt+0x7bc>
   11ad4:	ldr	r3, [r6, #4]
   11ad8:	cmp	r3, #0
   11adc:	mov	r4, r0
   11ae0:	strbne	r7, [r4], #1
   11ae4:	ldr	r5, [r6, #4]!
   11ae8:	cmp	r5, #0
   11aec:	beq	11b24 <__assert_fail@plt+0x848>
   11af0:	mov	r1, r5
   11af4:	mov	r0, r4
   11af8:	bl	11114 <strcpy@plt>
   11afc:	mov	r1, r5
   11b00:	mov	r0, r4
   11b04:	bl	11114 <strcpy@plt>
   11b08:	ldrb	r3, [r0]
   11b0c:	cmp	r3, #0
   11b10:	beq	11ad4 <__assert_fail@plt+0x7f8>
   11b14:	ldrb	r3, [r0, #1]!
   11b18:	cmp	r3, #0
   11b1c:	bne	11b14 <__assert_fail@plt+0x838>
   11b20:	b	11ad4 <__assert_fail@plt+0x7f8>
   11b24:	mov	r0, r8
   11b28:	ldrd	r4, [sp]
   11b2c:	ldrd	r6, [sp, #8]
   11b30:	ldr	r8, [sp, #16]
   11b34:	add	sp, sp, #20
   11b38:	pop	{pc}		; (ldr pc, [sp], #4)
   11b3c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11b40:	strd	r6, [sp, #8]
   11b44:	str	lr, [sp, #16]
   11b48:	sub	sp, sp, #292	; 0x124
   11b4c:	mov	r6, r0
   11b50:	mov	r4, r1
   11b54:	ldr	r0, [r1]
   11b58:	bl	134d4 <argp_parse@@Base+0xe20>
   11b5c:	movw	r3, #41548	; 0xa24c
   11b60:	movt	r3, #2
   11b64:	mov	r2, #0
   11b68:	str	r2, [r3, #8]
   11b6c:	str	r2, [sp, #24]
   11b70:	ldr	r5, [r4]
   11b74:	mov	r1, #47	; 0x2f
   11b78:	mov	r0, r5
   11b7c:	bl	11264 <strrchr@plt>
   11b80:	cmp	r0, #0
   11b84:	addne	r5, r0, #1
   11b88:	movw	r1, #33744	; 0x83d0
   11b8c:	movt	r1, #1
   11b90:	mov	r0, r5
   11b94:	bl	10ff4 <strcmp@plt>
   11b98:	cmp	r0, #0
   11b9c:	strne	r5, [sp, #24]
   11ba0:	movne	r5, #0
   11ba4:	moveq	r5, #1
   11ba8:	movw	r3, #41628	; 0xa29c
   11bac:	movt	r3, #2
   11bb0:	movw	r2, #33748	; 0x83d4
   11bb4:	movt	r2, #1
   11bb8:	str	r2, [r3]
   11bbc:	movw	r1, #41460	; 0xa1f4
   11bc0:	movt	r1, #2
   11bc4:	movw	r0, #33744	; 0x83d0
   11bc8:	movt	r0, #1
   11bcc:	bl	132a0 <argp_parse@@Base+0xbec>
   11bd0:	mov	r3, #0
   11bd4:	str	r3, [sp, #4]
   11bd8:	add	r3, sp, #284	; 0x11c
   11bdc:	str	r3, [sp]
   11be0:	mov	r3, #8
   11be4:	mov	r2, r4
   11be8:	mov	r1, r6
   11bec:	movw	r0, #41240	; 0xa118
   11bf0:	movt	r0, #2
   11bf4:	bl	126b4 <argp_parse@@Base>
   11bf8:	ldr	r3, [sp, #284]	; 0x11c
   11bfc:	cmp	r3, r6
   11c00:	bge	11c14 <__assert_fail@plt+0x938>
   11c04:	add	r2, r3, #1
   11c08:	str	r2, [sp, #284]	; 0x11c
   11c0c:	ldr	r3, [r4, r3, lsl #2]
   11c10:	str	r3, [sp, #24]
   11c14:	ldr	r3, [sp, #24]
   11c18:	cmp	r3, #0
   11c1c:	beq	11e7c <__assert_fail@plt+0xba0>
   11c20:	ldr	r3, [sp, #284]	; 0x11c
   11c24:	ldr	r3, [r4, r3, lsl #2]
   11c28:	cmp	r3, #0
   11c2c:	beq	11e94 <__assert_fail@plt+0xbb8>
   11c30:	ldr	r3, [sp, #284]	; 0x11c
   11c34:	add	r4, r4, r3, lsl #2
   11c38:	bl	1103c <getuid@plt>
   11c3c:	mov	r5, r0
   11c40:	bl	1100c <getpwuid@plt>
   11c44:	subs	r6, r0, #0
   11c48:	beq	11eec <__assert_fail@plt+0xc10>
   11c4c:	mov	r1, #64	; 0x40
   11c50:	ldr	r0, [sp, #24]
   11c54:	bl	111c8 <strchr@plt>
   11c58:	cmp	r0, #0
   11c5c:	beq	11c90 <__assert_fail@plt+0x9b4>
   11c60:	mov	r3, #0
   11c64:	strb	r3, [r0]
   11c68:	movw	r3, #41548	; 0xa24c
   11c6c:	movt	r3, #2
   11c70:	ldr	r3, [r3, #8]
   11c74:	cmp	r3, #0
   11c78:	beq	11f04 <__assert_fail@plt+0xc28>
   11c7c:	add	r3, r0, #1
   11c80:	str	r3, [sp, #24]
   11c84:	ldrb	r3, [r0, #1]
   11c88:	cmp	r3, #0
   11c8c:	beq	11f20 <__assert_fail@plt+0xc44>
   11c90:	mov	r0, r4
   11c94:	bl	11a48 <__assert_fail@plt+0x76c>
   11c98:	mov	r4, r0
   11c9c:	movw	r1, #33876	; 0x8454
   11ca0:	movt	r1, #1
   11ca4:	movw	r0, #33880	; 0x8458
   11ca8:	movt	r0, #1
   11cac:	bl	111f8 <getservbyname@plt>
   11cb0:	subs	r7, r0, #0
   11cb4:	beq	11f38 <__assert_fail@plt+0xc5c>
   11cb8:	movw	r3, #41548	; 0xa24c
   11cbc:	movt	r3, #2
   11cc0:	ldr	r3, [r3, #8]
   11cc4:	cmp	r3, #0
   11cc8:	beq	11f50 <__assert_fail@plt+0xc74>
   11ccc:	movw	r3, #41548	; 0xa24c
   11cd0:	movt	r3, #2
   11cd4:	ldr	r2, [r6]
   11cd8:	ldrh	r1, [r7, #8]
   11cdc:	ldrh	r0, [r3]
   11ce0:	str	r0, [sp, #8]
   11ce4:	movw	r0, #41624	; 0xa298
   11ce8:	movt	r0, #2
   11cec:	str	r0, [sp, #4]
   11cf0:	str	r4, [sp]
   11cf4:	ldr	r3, [r3, #8]
   11cf8:	add	r0, sp, #24
   11cfc:	bl	11180 <rcmd_af@plt>
   11d00:	subs	r6, r0, #0
   11d04:	blt	11f64 <__assert_fail@plt+0xc88>
   11d08:	movw	r3, #41624	; 0xa298
   11d0c:	movt	r3, #2
   11d10:	ldr	r3, [r3]
   11d14:	cmp	r3, #0
   11d18:	blt	11f94 <__assert_fail@plt+0xcb8>
   11d1c:	movw	r3, #41548	; 0xa24c
   11d20:	movt	r3, #2
   11d24:	ldr	r3, [r3, #4]
   11d28:	cmp	r3, #0
   11d2c:	bne	11fac <__assert_fail@plt+0xcd0>
   11d30:	mov	r0, r5
   11d34:	bl	110e4 <seteuid@plt>
   11d38:	mov	r0, r5
   11d3c:	bl	11288 <setuid@plt>
   11d40:	add	r0, sp, #156	; 0x9c
   11d44:	bl	1124c <sigemptyset@plt>
   11d48:	mov	r1, #2
   11d4c:	add	r0, sp, #156	; 0x9c
   11d50:	bl	11144 <sigaddset@plt>
   11d54:	mov	r1, #3
   11d58:	add	r0, sp, #156	; 0x9c
   11d5c:	bl	11144 <sigaddset@plt>
   11d60:	mov	r1, #15
   11d64:	add	r0, sp, #156	; 0x9c
   11d68:	bl	11144 <sigaddset@plt>
   11d6c:	add	r2, sp, #28
   11d70:	add	r1, sp, #156	; 0x9c
   11d74:	mov	r0, #0
   11d78:	bl	11048 <sigprocmask@plt>
   11d7c:	mov	r1, #1
   11d80:	mov	r0, #2
   11d84:	bl	11090 <signal@plt>
   11d88:	cmp	r0, #1
   11d8c:	beq	11da0 <__assert_fail@plt+0xac4>
   11d90:	movw	r1, #5524	; 0x1594
   11d94:	movt	r1, #1
   11d98:	mov	r0, #2
   11d9c:	bl	11090 <signal@plt>
   11da0:	mov	r1, #1
   11da4:	mov	r0, #3
   11da8:	bl	11090 <signal@plt>
   11dac:	cmp	r0, #1
   11db0:	beq	11dc4 <__assert_fail@plt+0xae8>
   11db4:	movw	r1, #5524	; 0x1594
   11db8:	movt	r1, #1
   11dbc:	mov	r0, #3
   11dc0:	bl	11090 <signal@plt>
   11dc4:	mov	r1, #1
   11dc8:	mov	r0, #15
   11dcc:	bl	11090 <signal@plt>
   11dd0:	cmp	r0, #1
   11dd4:	beq	11de8 <__assert_fail@plt+0xb0c>
   11dd8:	movw	r1, #5524	; 0x1594
   11ddc:	movt	r1, #1
   11de0:	mov	r0, #15
   11de4:	bl	11090 <signal@plt>
   11de8:	movw	r3, #41548	; 0xa24c
   11dec:	movt	r3, #2
   11df0:	ldr	r3, [r3, #12]
   11df4:	cmp	r3, #0
   11df8:	beq	12038 <__assert_fail@plt+0xd5c>
   11dfc:	mov	r1, #1
   11e00:	mov	r0, r6
   11e04:	bl	11234 <shutdown@plt>
   11e08:	mov	r5, #0
   11e0c:	mov	r3, #1
   11e10:	str	r3, [sp, #20]
   11e14:	movw	r3, #41624	; 0xa298
   11e18:	movt	r3, #2
   11e1c:	add	r2, sp, #20
   11e20:	movw	r1, #21537	; 0x5421
   11e24:	ldr	r0, [r3]
   11e28:	bl	134a4 <argp_parse@@Base+0xdf0>
   11e2c:	add	r2, sp, #20
   11e30:	movw	r1, #21537	; 0x5421
   11e34:	mov	r0, r6
   11e38:	bl	134a4 <argp_parse@@Base+0xdf0>
   11e3c:	movw	r4, #41548	; 0xa24c
   11e40:	movt	r4, #2
   11e44:	mov	r3, r6
   11e48:	mov	r2, r5
   11e4c:	add	r1, sp, #28
   11e50:	ldr	r0, [r4, #12]
   11e54:	bl	115c0 <__assert_fail@plt+0x2e4>
   11e58:	ldr	r3, [r4, #12]
   11e5c:	cmp	r3, #0
   11e60:	beq	12060 <__assert_fail@plt+0xd84>
   11e64:	mov	r0, #0
   11e68:	add	sp, sp, #292	; 0x124
   11e6c:	ldrd	r4, [sp]
   11e70:	ldrd	r6, [sp, #8]
   11e74:	add	sp, sp, #16
   11e78:	pop	{pc}		; (ldr pc, [sp], #4)
   11e7c:	movw	r2, #33772	; 0x83ec
   11e80:	movt	r2, #1
   11e84:	mov	r1, #0
   11e88:	mov	r0, #1
   11e8c:	bl	11120 <error@plt>
   11e90:	b	11c20 <__assert_fail@plt+0x944>
   11e94:	cmp	r5, #0
   11e98:	beq	11ea8 <__assert_fail@plt+0xbcc>
   11e9c:	movw	r3, #33792	; 0x8400
   11ea0:	movt	r3, #1
   11ea4:	str	r3, [r4]
   11ea8:	bl	1103c <getuid@plt>
   11eac:	bl	110e4 <seteuid@plt>
   11eb0:	bl	1103c <getuid@plt>
   11eb4:	bl	11288 <setuid@plt>
   11eb8:	movw	r5, #33800	; 0x8408
   11ebc:	movt	r5, #1
   11ec0:	mov	r1, r4
   11ec4:	mov	r0, r5
   11ec8:	bl	111e0 <execv@plt>
   11ecc:	bl	111ec <__errno_location@plt>
   11ed0:	mov	r3, r5
   11ed4:	movw	r2, #33824	; 0x8420
   11ed8:	movt	r2, #1
   11edc:	ldr	r1, [r0]
   11ee0:	mov	r0, #1
   11ee4:	bl	11120 <error@plt>
   11ee8:	b	11c30 <__assert_fail@plt+0x954>
   11eec:	movw	r2, #33844	; 0x8434
   11ef0:	movt	r2, #1
   11ef4:	mov	r1, #0
   11ef8:	mov	r0, #1
   11efc:	bl	11120 <error@plt>
   11f00:	b	11c4c <__assert_fail@plt+0x970>
   11f04:	ldr	r3, [sp, #24]
   11f08:	cmp	r3, r0
   11f0c:	bcs	11c7c <__assert_fail@plt+0x9a0>
   11f10:	movw	r2, #41548	; 0xa24c
   11f14:	movt	r2, #2
   11f18:	str	r3, [r2, #8]
   11f1c:	b	11c7c <__assert_fail@plt+0x9a0>
   11f20:	movw	r2, #33860	; 0x8444
   11f24:	movt	r2, #1
   11f28:	mov	r1, #0
   11f2c:	mov	r0, #1
   11f30:	bl	11120 <error@plt>
   11f34:	b	11c90 <__assert_fail@plt+0x9b4>
   11f38:	movw	r2, #33888	; 0x8460
   11f3c:	movt	r2, #1
   11f40:	mov	r1, #0
   11f44:	mov	r0, #1
   11f48:	bl	11120 <error@plt>
   11f4c:	b	11cb8 <__assert_fail@plt+0x9dc>
   11f50:	ldr	r2, [r6]
   11f54:	movw	r3, #41548	; 0xa24c
   11f58:	movt	r3, #2
   11f5c:	str	r2, [r3, #8]
   11f60:	b	11ccc <__assert_fail@plt+0x9f0>
   11f64:	bl	111ec <__errno_location@plt>
   11f68:	ldr	r3, [r0]
   11f6c:	cmp	r3, #13
   11f70:	beq	11f7c <__assert_fail@plt+0xca0>
   11f74:	mov	r0, #1
   11f78:	bl	111b0 <exit@plt>
   11f7c:	movw	r2, #33916	; 0x847c
   11f80:	movt	r2, #1
   11f84:	mov	r1, #0
   11f88:	mov	r0, #1
   11f8c:	bl	11120 <error@plt>
   11f90:	b	11f74 <__assert_fail@plt+0xc98>
   11f94:	movw	r2, #33948	; 0x849c
   11f98:	movt	r2, #1
   11f9c:	mov	r1, #0
   11fa0:	mov	r0, #1
   11fa4:	bl	11120 <error@plt>
   11fa8:	b	11d1c <__assert_fail@plt+0xa40>
   11fac:	mov	r1, #1
   11fb0:	str	r1, [sp, #20]
   11fb4:	mov	r3, #4
   11fb8:	str	r3, [sp]
   11fbc:	add	r3, sp, #20
   11fc0:	mov	r2, r1
   11fc4:	mov	r0, r6
   11fc8:	bl	11018 <setsockopt@plt>
   11fcc:	cmp	r0, #0
   11fd0:	blt	1201c <__assert_fail@plt+0xd40>
   11fd4:	movw	r0, #41624	; 0xa298
   11fd8:	movt	r0, #2
   11fdc:	mov	r3, #4
   11fe0:	str	r3, [sp]
   11fe4:	add	r3, sp, #20
   11fe8:	mov	r2, #1
   11fec:	mov	r1, r2
   11ff0:	ldr	r0, [r0]
   11ff4:	bl	11018 <setsockopt@plt>
   11ff8:	cmp	r0, #0
   11ffc:	bge	11d30 <__assert_fail@plt+0xa54>
   12000:	bl	111ec <__errno_location@plt>
   12004:	movw	r2, #33972	; 0x84b4
   12008:	movt	r2, #1
   1200c:	ldr	r1, [r0]
   12010:	mov	r0, #0
   12014:	bl	11120 <error@plt>
   12018:	b	11d30 <__assert_fail@plt+0xa54>
   1201c:	bl	111ec <__errno_location@plt>
   12020:	movw	r2, #33972	; 0x84b4
   12024:	movt	r2, #1
   12028:	ldr	r1, [r0]
   1202c:	mov	r0, #0
   12030:	bl	11120 <error@plt>
   12034:	b	11fd4 <__assert_fail@plt+0xcf8>
   12038:	bl	11258 <fork@plt>
   1203c:	subs	r5, r0, #0
   12040:	bge	11e0c <__assert_fail@plt+0xb30>
   12044:	bl	111ec <__errno_location@plt>
   12048:	movw	r2, #34000	; 0x84d0
   1204c:	movt	r2, #1
   12050:	ldr	r1, [r0]
   12054:	mov	r0, #1
   12058:	bl	11120 <error@plt>
   1205c:	b	11e0c <__assert_fail@plt+0xb30>
   12060:	mov	r1, #9
   12064:	mov	r0, r5
   12068:	bl	11198 <kill@plt>
   1206c:	b	11e64 <__assert_fail@plt+0xb88>
   12070:	ldr	ip, [r0]
   12074:	cmp	ip, #0
   12078:	beq	120e0 <__assert_fail@plt+0xe04>
   1207c:	strd	r4, [sp, #-16]!
   12080:	str	r6, [sp, #8]
   12084:	str	lr, [sp, #12]
   12088:	mov	ip, r2
   1208c:	mov	r5, r1
   12090:	mov	r4, r0
   12094:	ldr	r2, [r0, #32]
   12098:	str	r2, [r1, #36]	; 0x24
   1209c:	ldr	r2, [r0, #24]
   120a0:	str	r2, [r1, #28]
   120a4:	ldr	r2, [r0, #28]
   120a8:	str	r2, [r1, #32]
   120ac:	ldr	r2, [r0, #12]
   120b0:	str	r2, [r1, #20]
   120b4:	ldr	r6, [r0]
   120b8:	mov	r2, r1
   120bc:	mov	r1, r3
   120c0:	mov	r0, ip
   120c4:	blx	r6
   120c8:	ldr	r3, [r5, #36]	; 0x24
   120cc:	str	r3, [r4, #32]
   120d0:	ldrd	r4, [sp]
   120d4:	ldr	r6, [sp, #8]
   120d8:	add	sp, sp, #12
   120dc:	pop	{pc}		; (ldr pc, [sp], #4)
   120e0:	mov	r0, #7
   120e4:	bx	lr
   120e8:	strd	r4, [sp, #-16]!
   120ec:	str	r6, [sp, #8]
   120f0:	str	lr, [sp, #12]
   120f4:	ldr	r5, [r0, #16]
   120f8:	ldr	r3, [r0]
   120fc:	cmp	r3, #0
   12100:	beq	12118 <__assert_fail@plt+0xe3c>
   12104:	ldr	r2, [r1, #8]
   12108:	add	r2, r2, #1
   1210c:	str	r2, [r1, #8]
   12110:	mov	r2, #0
   12114:	b	12138 <__assert_fail@plt+0xe5c>
   12118:	ldr	r3, [r0, #4]
   1211c:	cmp	r3, #0
   12120:	beq	12188 <__assert_fail@plt+0xeac>
   12124:	ldr	r3, [r1, #8]
   12128:	add	r3, r3, #1
   1212c:	str	r3, [r1, #8]
   12130:	b	12188 <__assert_fail@plt+0xeac>
   12134:	add	r2, r2, #1
   12138:	add	r3, r3, #24
   1213c:	ldr	r0, [r3, #-20]	; 0xffffffec
   12140:	cmp	r0, #0
   12144:	bne	12134 <__assert_fail@plt+0xe58>
   12148:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1214c:	cmp	r0, #0
   12150:	bne	12134 <__assert_fail@plt+0xe58>
   12154:	ldr	r0, [r3, #-8]
   12158:	cmp	r0, #0
   1215c:	bne	12134 <__assert_fail@plt+0xe58>
   12160:	ldr	r0, [r3, #-4]
   12164:	cmp	r0, #0
   12168:	bne	12134 <__assert_fail@plt+0xe58>
   1216c:	add	r0, r2, r2, lsl #1
   12170:	ldr	r3, [r1]
   12174:	add	r3, r3, r0
   12178:	str	r3, [r1]
   1217c:	ldr	r3, [r1, #4]
   12180:	add	r2, r3, r2
   12184:	str	r2, [r1, #4]
   12188:	cmp	r5, #0
   1218c:	beq	121c0 <__assert_fail@plt+0xee4>
   12190:	ldr	r0, [r5]
   12194:	cmp	r0, #0
   12198:	beq	121c0 <__assert_fail@plt+0xee4>
   1219c:	mov	r4, r1
   121a0:	mov	r1, r4
   121a4:	bl	120e8 <__assert_fail@plt+0xe0c>
   121a8:	ldr	r3, [r4, #12]
   121ac:	add	r3, r3, #1
   121b0:	str	r3, [r4, #12]
   121b4:	ldr	r0, [r5, #16]!
   121b8:	cmp	r0, #0
   121bc:	bne	121a0 <__assert_fail@plt+0xec4>
   121c0:	ldrd	r4, [sp]
   121c4:	ldr	r6, [sp, #8]
   121c8:	add	sp, sp, #12
   121cc:	pop	{pc}		; (ldr pc, [sp], #4)
   121d0:	cmp	r0, #86	; 0x56
   121d4:	beq	121e0 <__assert_fail@plt+0xf04>
   121d8:	mov	r0, #7
   121dc:	bx	lr
   121e0:	str	r4, [sp, #-8]!
   121e4:	str	lr, [sp, #4]
   121e8:	mov	r4, r2
   121ec:	movw	r3, #41572	; 0xa264
   121f0:	movt	r3, #2
   121f4:	ldr	r3, [r3]
   121f8:	cmp	r3, #0
   121fc:	beq	12228 <__assert_fail@plt+0xf4c>
   12200:	mov	r1, r2
   12204:	ldr	r0, [r2, #48]	; 0x30
   12208:	blx	r3
   1220c:	ldr	r3, [r4, #16]
   12210:	tst	r3, #32
   12214:	beq	1226c <__assert_fail@plt+0xf90>
   12218:	mov	r0, #0
   1221c:	ldr	r4, [sp]
   12220:	add	sp, sp, #4
   12224:	pop	{pc}		; (ldr pc, [sp], #4)
   12228:	movw	r3, #41632	; 0xa2a0
   1222c:	movt	r3, #2
   12230:	ldr	r2, [r3]
   12234:	cmp	r2, #0
   12238:	beq	12250 <__assert_fail@plt+0xf74>
   1223c:	movw	r1, #35060	; 0x88f4
   12240:	movt	r1, #1
   12244:	ldr	r0, [r4, #48]	; 0x30
   12248:	bl	111d4 <fprintf@plt>
   1224c:	b	1220c <__assert_fail@plt+0xf30>
   12250:	movw	r2, #34644	; 0x8754
   12254:	movt	r2, #1
   12258:	movw	r1, #34680	; 0x8778
   1225c:	movt	r1, #1
   12260:	mov	r0, r4
   12264:	bl	16d1c <argp_error@@Base>
   12268:	b	1220c <__assert_fail@plt+0xf30>
   1226c:	mov	r0, #0
   12270:	bl	111b0 <exit@plt>
   12274:	strd	r4, [sp, #-16]!
   12278:	str	r6, [sp, #8]
   1227c:	str	lr, [sp, #12]
   12280:	mov	r4, r2
   12284:	cmn	r0, #3
   12288:	beq	12340 <__assert_fail@plt+0x1064>
   1228c:	mov	r5, r1
   12290:	ble	122cc <__assert_fail@plt+0xff0>
   12294:	cmn	r0, #2
   12298:	beq	12358 <__assert_fail@plt+0x107c>
   1229c:	cmp	r0, #63	; 0x3f
   122a0:	movne	r0, #7
   122a4:	bne	122bc <__assert_fail@plt+0xfe0>
   122a8:	movw	r2, #634	; 0x27a
   122ac:	ldr	r1, [r4, #48]	; 0x30
   122b0:	mov	r0, r4
   122b4:	bl	16c54 <argp_state_help@@Base>
   122b8:	mov	r0, #0
   122bc:	ldrd	r4, [sp]
   122c0:	ldr	r6, [sp, #8]
   122c4:	add	sp, sp, #12
   122c8:	pop	{pc}		; (ldr pc, [sp], #4)
   122cc:	cmn	r0, #4
   122d0:	movne	r0, #7
   122d4:	bne	122bc <__assert_fail@plt+0xfe0>
   122d8:	movw	r0, #34684	; 0x877c
   122dc:	movt	r0, #1
   122e0:	mov	r2, #10
   122e4:	mov	r1, #0
   122e8:	cmp	r5, r1
   122ec:	movne	r0, r5
   122f0:	bl	11000 <strtol@plt>
   122f4:	movw	r3, #41568	; 0xa260
   122f8:	movt	r3, #2
   122fc:	str	r0, [r3]
   12300:	ldr	r2, [r3]
   12304:	sub	r1, r2, #1
   12308:	str	r1, [r3]
   1230c:	cmp	r2, #0
   12310:	ble	123a0 <__assert_fail@plt+0x10c4>
   12314:	mov	r5, #1
   12318:	mov	r4, r3
   1231c:	mov	r0, r5
   12320:	bl	110b4 <sleep@plt>
   12324:	ldr	r3, [r4]
   12328:	sub	r2, r3, #1
   1232c:	str	r2, [r4]
   12330:	cmp	r3, #0
   12334:	bgt	1231c <__assert_fail@plt+0x1040>
   12338:	mov	r0, #0
   1233c:	b	122bc <__assert_fail@plt+0xfe0>
   12340:	movw	r2, #513	; 0x201
   12344:	ldr	r1, [r4, #48]	; 0x30
   12348:	mov	r0, r4
   1234c:	bl	16c54 <argp_state_help@@Base>
   12350:	mov	r0, #0
   12354:	b	122bc <__assert_fail@plt+0xfe0>
   12358:	movw	r3, #41532	; 0xa23c
   1235c:	movt	r3, #2
   12360:	str	r1, [r3]
   12364:	mov	r0, r1
   12368:	bl	132c8 <argp_parse@@Base+0xc14>
   1236c:	str	r0, [r4, #40]	; 0x28
   12370:	movw	r3, #41528	; 0xa238
   12374:	movt	r3, #2
   12378:	str	r0, [r3]
   1237c:	ldr	r3, [r4, #16]
   12380:	and	r3, r3, #3
   12384:	cmp	r3, #1
   12388:	movne	r0, #0
   1238c:	bne	122bc <__assert_fail@plt+0xfe0>
   12390:	ldr	r3, [r4, #8]
   12394:	str	r5, [r3]
   12398:	mov	r0, #0
   1239c:	b	122bc <__assert_fail@plt+0xfe0>
   123a0:	mov	r0, #0
   123a4:	b	122bc <__assert_fail@plt+0xfe0>
   123a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   123ac:	strd	r6, [sp, #8]
   123b0:	strd	r8, [sp, #16]
   123b4:	strd	sl, [sp, #24]
   123b8:	str	lr, [sp, #32]
   123bc:	sub	sp, sp, #36	; 0x24
   123c0:	str	r0, [sp, #16]
   123c4:	str	r1, [sp, #20]
   123c8:	str	r2, [sp, #24]
   123cc:	str	r3, [sp, #8]
   123d0:	ldr	r8, [sp, #72]	; 0x48
   123d4:	ldr	r6, [r0]
   123d8:	ldr	sl, [r0, #16]
   123dc:	cmp	r6, #0
   123e0:	beq	123fc <__assert_fail@plt+0x1120>
   123e4:	mov	r4, r6
   123e8:	movw	r3, #36409	; 0x8e39
   123ec:	movt	r3, #14563	; 0x38e3
   123f0:	str	r3, [sp, #12]
   123f4:	str	sl, [sp, #28]
   123f8:	b	12440 <__assert_fail@plt+0x1164>
   123fc:	ldr	r3, [r0, #4]
   12400:	cmp	r3, #0
   12404:	bne	125cc <__assert_fail@plt+0x12f0>
   12408:	ldr	r0, [sp, #8]
   1240c:	str	r6, [sp, #8]
   12410:	b	12650 <__assert_fail@plt+0x1374>
   12414:	ldr	r0, [r7, #16]!
   12418:	cmp	r0, #0
   1241c:	beq	12520 <__assert_fail@plt+0x1244>
   12420:	mov	r1, r9
   12424:	bl	10ff4 <strcmp@plt>
   12428:	cmp	r0, #0
   1242c:	bne	12414 <__assert_fail@plt+0x1138>
   12430:	sub	sl, r7, fp
   12434:	cmp	sl, #0
   12438:	blt	12520 <__assert_fail@plt+0x1244>
   1243c:	add	r4, r4, #24
   12440:	ldr	r7, [r4, #4]
   12444:	cmp	r7, #0
   12448:	bne	12458 <__assert_fail@plt+0x117c>
   1244c:	ldr	r3, [r4]
   12450:	cmp	r3, #0
   12454:	beq	125b0 <__assert_fail@plt+0x12d4>
   12458:	ldr	r3, [r4, #12]
   1245c:	and	r2, r3, #4
   12460:	cmp	r2, #0
   12464:	moveq	r6, r4
   12468:	ldr	r5, [r6, #12]
   1246c:	ands	r5, r5, #8
   12470:	bne	1243c <__assert_fail@plt+0x1160>
   12474:	tst	r3, #8
   12478:	bne	124f8 <__assert_fail@plt+0x121c>
   1247c:	sub	r3, r7, #1
   12480:	cmp	r3, #254	; 0xfe
   12484:	bhi	124f8 <__assert_fail@plt+0x121c>
   12488:	bl	111a4 <__ctype_b_loc@plt>
   1248c:	ldr	r2, [r0]
   12490:	lsl	r3, r7, #1
   12494:	ldrh	r3, [r2, r3]
   12498:	tst	r3, #16384	; 0x4000
   1249c:	beq	124f8 <__assert_fail@plt+0x121c>
   124a0:	ldr	r3, [r8, #4]
   124a4:	add	r2, r3, #1
   124a8:	str	r2, [r8, #4]
   124ac:	strb	r7, [r3]
   124b0:	ldr	r3, [r6, #8]
   124b4:	cmp	r3, #0
   124b8:	beq	124ec <__assert_fail@plt+0x1210>
   124bc:	ldr	r3, [r8, #4]
   124c0:	add	r2, r3, #1
   124c4:	str	r2, [r8, #4]
   124c8:	mov	r1, #58	; 0x3a
   124cc:	strb	r1, [r3]
   124d0:	ldr	r3, [r6, #12]
   124d4:	tst	r3, #1
   124d8:	beq	124ec <__assert_fail@plt+0x1210>
   124dc:	ldr	r3, [r8, #4]
   124e0:	add	r2, r3, #1
   124e4:	str	r2, [r8, #4]
   124e8:	strb	r1, [r3]
   124ec:	ldr	r3, [r8, #4]
   124f0:	mov	r2, #0
   124f4:	strb	r2, [r3]
   124f8:	ldr	r9, [r4]
   124fc:	cmp	r9, #0
   12500:	beq	1243c <__assert_fail@plt+0x1160>
   12504:	ldr	r3, [r8]
   12508:	ldr	fp, [r3, #8]
   1250c:	ldr	r0, [fp]
   12510:	cmp	r0, #0
   12514:	beq	12520 <__assert_fail@plt+0x1244>
   12518:	mov	r7, fp
   1251c:	b	12420 <__assert_fail@plt+0x1144>
   12520:	ldr	r3, [r8, #8]
   12524:	str	r9, [r3]
   12528:	ldr	r3, [r6, #8]
   1252c:	cmp	r3, #0
   12530:	beq	12548 <__assert_fail@plt+0x126c>
   12534:	ldr	r3, [r6, #12]
   12538:	and	r3, r3, #1
   1253c:	cmp	r3, #0
   12540:	movne	r5, #2
   12544:	moveq	r5, #1
   12548:	ldr	r3, [r8, #8]
   1254c:	str	r5, [r3, #4]
   12550:	ldr	r3, [r8, #8]
   12554:	mov	r2, #0
   12558:	str	r2, [r3, #8]
   1255c:	ldr	r3, [r4, #4]
   12560:	cmp	r3, r2
   12564:	ldreq	r3, [r6, #4]
   12568:	bic	r2, r3, #-16777216	; 0xff000000
   1256c:	ldr	r1, [r8, #8]
   12570:	ldr	r3, [r8]
   12574:	ldr	r3, [r3, #48]	; 0x30
   12578:	ldr	r0, [sp, #8]
   1257c:	sub	r3, r0, r3
   12580:	asr	r3, r3, #2
   12584:	ldr	r0, [sp, #12]
   12588:	mul	r3, r0, r3
   1258c:	add	r3, r3, #1
   12590:	add	r3, r2, r3, lsl #24
   12594:	str	r3, [r1, #12]
   12598:	ldr	r3, [r8, #8]
   1259c:	add	r2, r3, #16
   125a0:	str	r2, [r8, #8]
   125a4:	mov	r2, #0
   125a8:	str	r2, [r3, #16]
   125ac:	b	1243c <__assert_fail@plt+0x1160>
   125b0:	ldr	r3, [r4, #16]
   125b4:	cmp	r3, #0
   125b8:	bne	12458 <__assert_fail@plt+0x117c>
   125bc:	ldr	r3, [r4, #20]
   125c0:	cmp	r3, #0
   125c4:	bne	12458 <__assert_fail@plt+0x117c>
   125c8:	ldr	sl, [sp, #28]
   125cc:	ldr	r1, [sp, #16]
   125d0:	ldr	r3, [r1, #4]
   125d4:	ldr	r2, [sp, #8]
   125d8:	str	r3, [r2]
   125dc:	str	r1, [r2, #4]
   125e0:	ldr	r3, [r8, #4]
   125e4:	str	r3, [r2, #8]
   125e8:	mov	r3, #0
   125ec:	str	r3, [r2, #12]
   125f0:	ldr	r1, [sp, #20]
   125f4:	str	r1, [r2, #16]
   125f8:	ldr	r1, [sp, #24]
   125fc:	str	r1, [r2, #20]
   12600:	str	r3, [r2, #24]
   12604:	str	r3, [r2, #32]
   12608:	str	r3, [r2, #28]
   1260c:	cmp	sl, r3
   12610:	beq	12648 <__assert_fail@plt+0x136c>
   12614:	ldr	r3, [sl]
   12618:	cmp	r3, #0
   1261c:	beq	126ac <__assert_fail@plt+0x13d0>
   12620:	mov	r3, #0
   12624:	add	r3, r3, #1
   12628:	ldr	r2, [sl, r3, lsl #4]
   1262c:	cmp	r2, #0
   12630:	bne	12624 <__assert_fail@plt+0x1348>
   12634:	ldr	r2, [r8, #12]
   12638:	ldr	r1, [sp, #8]
   1263c:	str	r2, [r1, #28]
   12640:	add	r3, r2, r3, lsl #2
   12644:	str	r3, [r8, #12]
   12648:	ldr	r3, [sp, #8]
   1264c:	add	r0, r3, #36	; 0x24
   12650:	cmp	sl, #0
   12654:	beq	12690 <__assert_fail@plt+0x13b4>
   12658:	ldr	ip, [sl]
   1265c:	cmp	ip, #0
   12660:	beq	12690 <__assert_fail@plt+0x13b4>
   12664:	mov	r2, #0
   12668:	add	r4, r2, #1
   1266c:	str	r8, [sp]
   12670:	mov	r3, r0
   12674:	ldr	r1, [sp, #8]
   12678:	mov	r0, ip
   1267c:	bl	123a8 <__assert_fail@plt+0x10cc>
   12680:	ldr	ip, [sl, r4, lsl #4]
   12684:	mov	r2, r4
   12688:	cmp	ip, #0
   1268c:	bne	12668 <__assert_fail@plt+0x138c>
   12690:	add	sp, sp, #36	; 0x24
   12694:	ldrd	r4, [sp]
   12698:	ldrd	r6, [sp, #8]
   1269c:	ldrd	r8, [sp, #16]
   126a0:	ldrd	sl, [sp, #24]
   126a4:	add	sp, sp, #32
   126a8:	pop	{pc}		; (ldr pc, [sp], #4)
   126ac:	mov	r3, #0
   126b0:	b	12634 <__assert_fail@plt+0x1358>

000126b4 <argp_parse@@Base>:
   126b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   126b8:	strd	r6, [sp, #8]
   126bc:	strd	r8, [sp, #16]
   126c0:	strd	sl, [sp, #24]
   126c4:	str	lr, [sp, #32]
   126c8:	add	fp, sp, #32
   126cc:	sub	sp, sp, #228	; 0xe4
   126d0:	mov	r8, r0
   126d4:	str	r1, [fp, #-240]	; 0xffffff10
   126d8:	str	r2, [fp, #-232]	; 0xffffff18
   126dc:	mov	r7, r3
   126e0:	tst	r3, #1
   126e4:	bne	12710 <argp_parse@@Base+0x5c>
   126e8:	movw	r3, #41532	; 0xa23c
   126ec:	movt	r3, #2
   126f0:	ldr	r3, [r3]
   126f4:	cmp	r3, #0
   126f8:	beq	12768 <argp_parse@@Base+0xb4>
   126fc:	movw	r3, #41528	; 0xa238
   12700:	movt	r3, #2
   12704:	ldr	r3, [r3]
   12708:	cmp	r3, #0
   1270c:	beq	1277c <argp_parse@@Base+0xc8>
   12710:	tst	r7, #16
   12714:	beq	12798 <argp_parse@@Base+0xe4>
   12718:	str	r7, [fp, #-244]	; 0xffffff0c
   1271c:	mov	r3, #0
   12720:	str	r3, [fp, #-188]	; 0xffffff44
   12724:	str	r3, [fp, #-184]	; 0xffffff48
   12728:	str	r3, [fp, #-180]	; 0xffffff4c
   1272c:	str	r3, [fp, #-176]	; 0xffffff50
   12730:	str	r3, [fp, #-172]	; 0xffffff54
   12734:	str	r3, [fp, #-168]	; 0xffffff58
   12738:	str	r3, [fp, #-164]	; 0xffffff5c
   1273c:	ands	r2, r7, #4
   12740:	str	r2, [fp, #-248]	; 0xffffff08
   12744:	moveq	r2, #1
   12748:	movne	r2, r3
   1274c:	str	r2, [fp, #-228]	; 0xffffff1c
   12750:	str	r3, [fp, #-224]	; 0xffffff20
   12754:	str	r3, [fp, #-220]	; 0xffffff24
   12758:	str	r3, [fp, #-216]	; 0xffffff28
   1275c:	cmp	r8, r3
   12760:	beq	12864 <argp_parse@@Base+0x1b0>
   12764:	b	12858 <argp_parse@@Base+0x1a4>
   12768:	ldr	r2, [r2]
   1276c:	movw	r3, #41532	; 0xa23c
   12770:	movt	r3, #2
   12774:	str	r2, [r3]
   12778:	b	126fc <argp_parse@@Base+0x48>
   1277c:	ldr	r3, [fp, #-232]	; 0xffffff18
   12780:	ldr	r0, [r3]
   12784:	bl	132c8 <argp_parse@@Base+0xc14>
   12788:	movw	r3, #41528	; 0xa238
   1278c:	movt	r3, #2
   12790:	str	r0, [r3]
   12794:	b	12710 <argp_parse@@Base+0x5c>
   12798:	sub	sp, sp, #64	; 0x40
   1279c:	add	r5, sp, #8
   127a0:	sub	sp, sp, #32
   127a4:	add	r4, sp, #8
   127a8:	mov	r1, #0
   127ac:	str	r1, [r4]
   127b0:	str	r1, [r4, #4]
   127b4:	str	r1, [r4, #8]
   127b8:	str	r1, [r4, #12]
   127bc:	str	r1, [r4, #20]
   127c0:	str	r1, [r4, #24]
   127c4:	str	r5, [r4, #16]
   127c8:	mov	r2, #64	; 0x40
   127cc:	mov	r0, r5
   127d0:	bl	11210 <memset@plt>
   127d4:	cmp	r8, #0
   127d8:	mov	r0, r5
   127dc:	strne	r8, [r0], #16
   127e0:	movw	r3, #34364	; 0x863c
   127e4:	movt	r3, #1
   127e8:	str	r3, [r0]
   127ec:	movw	r3, #41632	; 0xa2a0
   127f0:	movt	r3, #2
   127f4:	ldr	r3, [r3]
   127f8:	cmp	r3, #0
   127fc:	beq	12a24 <argp_parse@@Base+0x370>
   12800:	add	r2, r0, #32
   12804:	ldr	r3, [pc, #2548]	; 13200 <argp_parse@@Base+0xb4c>
   12808:	str	r3, [r0, #16]
   1280c:	mov	r3, #0
   12810:	str	r3, [r2]
   12814:	str	r7, [fp, #-244]	; 0xffffff0c
   12818:	str	r3, [fp, #-188]	; 0xffffff44
   1281c:	str	r3, [fp, #-184]	; 0xffffff48
   12820:	str	r3, [fp, #-180]	; 0xffffff4c
   12824:	str	r3, [fp, #-176]	; 0xffffff50
   12828:	str	r3, [fp, #-172]	; 0xffffff54
   1282c:	str	r3, [fp, #-168]	; 0xffffff58
   12830:	str	r3, [fp, #-164]	; 0xffffff5c
   12834:	ands	r2, r7, #4
   12838:	str	r2, [fp, #-248]	; 0xffffff08
   1283c:	moveq	r2, #1
   12840:	movne	r2, r3
   12844:	str	r2, [fp, #-228]	; 0xffffff1c
   12848:	str	r3, [fp, #-224]	; 0xffffff20
   1284c:	str	r3, [fp, #-220]	; 0xffffff24
   12850:	str	r3, [fp, #-216]	; 0xffffff28
   12854:	mov	r8, r4
   12858:	sub	r1, fp, #228	; 0xe4
   1285c:	mov	r0, r8
   12860:	bl	120e8 <__assert_fail@plt+0xe0c>
   12864:	ldr	r4, [fp, #-220]	; 0xffffff24
   12868:	add	r4, r4, #1
   1286c:	add	r4, r4, r4, lsl #3
   12870:	lsl	r4, r4, #2
   12874:	ldr	r3, [fp, #-216]	; 0xffffff28
   12878:	lsl	r3, r3, #2
   1287c:	str	r3, [fp, #-236]	; 0xffffff14
   12880:	add	r9, r3, r4
   12884:	ldr	r5, [fp, #-224]	; 0xffffff20
   12888:	add	r5, r5, #1
   1288c:	add	r5, r9, r5, lsl #4
   12890:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12894:	add	r0, r0, #1
   12898:	add	r0, r0, r5
   1289c:	bl	139f4 <argp_parse@@Base+0x1340>
   128a0:	mov	r6, r0
   128a4:	str	r0, [fp, #-40]	; 0xffffffd8
   128a8:	cmp	r0, #0
   128ac:	moveq	r4, #12
   128b0:	beq	13020 <argp_parse@@Base+0x96c>
   128b4:	str	r0, [fp, #-112]	; 0xffffff90
   128b8:	add	r4, r0, r4
   128bc:	str	r4, [fp, #-104]	; 0xffffff98
   128c0:	add	r9, r0, r9
   128c4:	str	r9, [fp, #-152]	; 0xffffff68
   128c8:	add	sl, r0, r5
   128cc:	str	sl, [fp, #-156]	; 0xffffff64
   128d0:	mov	r3, #1
   128d4:	str	r3, [fp, #-196]	; 0xffffff3c
   128d8:	str	r3, [fp, #-192]	; 0xffffff40
   128dc:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   128e0:	strd	r2, [fp, #-148]	; 0xffffff6c
   128e4:	ldrd	r2, [fp, #-188]	; 0xffffff44
   128e8:	strd	r2, [fp, #-140]	; 0xffffff74
   128ec:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   128f0:	strd	r2, [fp, #-132]	; 0xffffff7c
   128f4:	ldrd	r2, [fp, #-172]	; 0xffffff54
   128f8:	strd	r2, [fp, #-124]	; 0xffffff84
   128fc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12900:	str	r3, [fp, #-116]	; 0xffffff8c
   12904:	ldr	r2, [fp, #-236]	; 0xffffff14
   12908:	mov	r1, #0
   1290c:	mov	r0, r4
   12910:	bl	11210 <memset@plt>
   12914:	sub	r3, fp, #160	; 0xa0
   12918:	str	r3, [fp, #-212]	; 0xffffff2c
   1291c:	str	sl, [fp, #-208]	; 0xffffff30
   12920:	str	r9, [fp, #-204]	; 0xffffff34
   12924:	str	r4, [fp, #-200]	; 0xffffff38
   12928:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1292c:	tst	r3, #8
   12930:	beq	12a40 <argp_parse@@Base+0x38c>
   12934:	add	sl, sl, #1
   12938:	str	sl, [fp, #-208]	; 0xffffff30
   1293c:	mov	r3, #45	; 0x2d
   12940:	strb	r3, [r6, r5]
   12944:	mov	r3, #0
   12948:	ldr	r2, [fp, #-208]	; 0xffffff30
   1294c:	strb	r3, [r2]
   12950:	ldr	r2, [fp, #-204]	; 0xffffff34
   12954:	str	r3, [r2]
   12958:	str	r8, [fp, #-160]	; 0xffffff60
   1295c:	cmp	r8, r3
   12960:	beq	12a60 <argp_parse@@Base+0x3ac>
   12964:	sub	r3, fp, #212	; 0xd4
   12968:	str	r3, [sp]
   1296c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12970:	mov	r2, #0
   12974:	mov	r1, r2
   12978:	mov	r0, r8
   1297c:	bl	123a8 <__assert_fail@plt+0x10cc>
   12980:	str	r0, [fp, #-108]	; 0xffffff94
   12984:	mov	r2, #0
   12988:	mov	r3, #0
   1298c:	strd	r2, [fp, #-76]	; 0xffffffb4
   12990:	strd	r2, [fp, #-68]	; 0xffffffbc
   12994:	strd	r2, [fp, #-60]	; 0xffffffc4
   12998:	ldr	r3, [fp, #-160]	; 0xffffff60
   1299c:	str	r3, [fp, #-96]	; 0xffffffa0
   129a0:	ldr	r3, [fp, #-240]	; 0xffffff10
   129a4:	str	r3, [fp, #-92]	; 0xffffffa4
   129a8:	ldr	r3, [fp, #-232]	; 0xffffff18
   129ac:	str	r3, [fp, #-88]	; 0xffffffa8
   129b0:	str	r7, [fp, #-80]	; 0xffffffb0
   129b4:	movw	r3, #41536	; 0xa240
   129b8:	movt	r3, #2
   129bc:	ldr	r3, [r3]
   129c0:	str	r3, [fp, #-52]	; 0xffffffcc
   129c4:	movw	r3, #41540	; 0xa244
   129c8:	movt	r3, #2
   129cc:	ldr	r3, [r3]
   129d0:	str	r3, [fp, #-48]	; 0xffffffd0
   129d4:	mov	r3, #0
   129d8:	str	r3, [fp, #-84]	; 0xffffffac
   129dc:	sub	r3, fp, #160	; 0xa0
   129e0:	str	r3, [fp, #-44]	; 0xffffffd4
   129e4:	mov	r3, #1
   129e8:	str	r3, [fp, #-100]	; 0xffffff9c
   129ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   129f0:	ldr	r2, [fp, #-108]	; 0xffffff94
   129f4:	cmp	r3, r2
   129f8:	bcs	12b0c <argp_parse@@Base+0x458>
   129fc:	ldr	r2, [fp, #8]
   12a00:	str	r2, [r3, #24]
   12a04:	ldr	r5, [fp, #-112]	; 0xffffff90
   12a08:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a0c:	cmp	r5, r3
   12a10:	bcs	12b0c <argp_parse@@Base+0x458>
   12a14:	mov	r6, #3
   12a18:	movt	r6, #256	; 0x100
   12a1c:	mov	r7, #0
   12a20:	b	12aa8 <argp_parse@@Base+0x3f4>
   12a24:	movw	r3, #41572	; 0xa264
   12a28:	movt	r3, #2
   12a2c:	ldr	r3, [r3]
   12a30:	cmp	r3, #0
   12a34:	addeq	r2, r0, #16
   12a38:	bne	12800 <argp_parse@@Base+0x14c>
   12a3c:	b	1280c <argp_parse@@Base+0x158>
   12a40:	ldr	r3, [fp, #-248]	; 0xffffff08
   12a44:	cmp	r3, #0
   12a48:	beq	12944 <argp_parse@@Base+0x290>
   12a4c:	add	sl, sl, #1
   12a50:	str	sl, [fp, #-208]	; 0xffffff30
   12a54:	mov	r3, #43	; 0x2b
   12a58:	strb	r3, [r6, r5]
   12a5c:	b	12944 <argp_parse@@Base+0x290>
   12a60:	ldr	r3, [fp, #-112]	; 0xffffff90
   12a64:	str	r3, [fp, #-108]	; 0xffffff94
   12a68:	b	12984 <argp_parse@@Base+0x2d0>
   12a6c:	ldr	r3, [r5]
   12a70:	cmp	r3, #0
   12a74:	beq	12ac8 <argp_parse@@Base+0x414>
   12a78:	mov	r3, r7
   12a7c:	mov	r2, r6
   12a80:	sub	r1, fp, #96	; 0x60
   12a84:	mov	r0, r5
   12a88:	bl	12070 <__assert_fail@plt+0xd94>
   12a8c:	add	r5, r5, #36	; 0x24
   12a90:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a94:	cmp	r5, r3
   12a98:	bcs	12afc <argp_parse@@Base+0x448>
   12a9c:	cmp	r0, #7
   12aa0:	cmpne	r0, #0
   12aa4:	bne	12af4 <argp_parse@@Base+0x440>
   12aa8:	ldr	r3, [r5, #16]
   12aac:	cmp	r3, #0
   12ab0:	beq	12a6c <argp_parse@@Base+0x3b8>
   12ab4:	ldr	r2, [r5, #20]
   12ab8:	ldr	r3, [r3, #28]
   12abc:	ldr	r3, [r3, r2, lsl #2]
   12ac0:	str	r3, [r5, #24]
   12ac4:	b	12a6c <argp_parse@@Base+0x3b8>
   12ac8:	ldr	r3, [r5, #4]
   12acc:	ldr	r3, [r3, #16]
   12ad0:	cmp	r3, #0
   12ad4:	beq	12a78 <argp_parse@@Base+0x3c4>
   12ad8:	ldr	r3, [r3]
   12adc:	cmp	r3, #0
   12ae0:	beq	12a78 <argp_parse@@Base+0x3c4>
   12ae4:	ldr	r3, [r5, #28]
   12ae8:	ldr	r2, [r5, #24]
   12aec:	str	r2, [r3]
   12af0:	b	12a78 <argp_parse@@Base+0x3c4>
   12af4:	mov	r4, r0
   12af8:	b	13020 <argp_parse@@Base+0x96c>
   12afc:	mov	r4, r0
   12b00:	cmp	r0, #7
   12b04:	cmpne	r0, #0
   12b08:	bne	13020 <argp_parse@@Base+0x96c>
   12b0c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12b10:	tst	r3, #2
   12b14:	moveq	r3, #1
   12b18:	streq	r3, [fp, #-144]	; 0xffffff70
   12b1c:	beq	12b48 <argp_parse@@Base+0x494>
   12b20:	mov	r2, #0
   12b24:	str	r2, [fp, #-144]	; 0xffffff70
   12b28:	tst	r3, #1
   12b2c:	beq	12b48 <argp_parse@@Base+0x494>
   12b30:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12b34:	sub	r3, r3, #4
   12b38:	str	r3, [fp, #-88]	; 0xffffffa8
   12b3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12b40:	add	r3, r3, #1
   12b44:	str	r3, [fp, #-92]	; 0xffffffa4
   12b48:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12b4c:	ldr	r2, [fp, #-232]	; 0xffffff18
   12b50:	cmp	r2, r3
   12b54:	beq	12b7c <argp_parse@@Base+0x4c8>
   12b58:	movw	r3, #41528	; 0xa238
   12b5c:	movt	r3, #2
   12b60:	ldr	r3, [r3]
   12b64:	str	r3, [fp, #-56]	; 0xffffffc8
   12b68:	movw	sl, #34696	; 0x8788
   12b6c:	movt	sl, #1
   12b70:	mov	r9, #6
   12b74:	movt	r9, #256	; 0x100
   12b78:	b	12c44 <argp_parse@@Base+0x590>
   12b7c:	ldr	r0, [r2]
   12b80:	cmp	r0, #0
   12b84:	beq	12b58 <argp_parse@@Base+0x4a4>
   12b88:	bl	132c8 <argp_parse@@Base+0xc14>
   12b8c:	str	r0, [fp, #-56]	; 0xffffffc8
   12b90:	b	12b68 <argp_parse@@Base+0x4b4>
   12b94:	ldr	r3, [fp, #-84]	; 0xffffffac
   12b98:	str	r3, [fp, #-148]	; 0xffffff6c
   12b9c:	mvn	r3, #0
   12ba0:	str	r3, [fp, #-140]	; 0xffffff74
   12ba4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12ba8:	tst	r3, #64	; 0x40
   12bac:	beq	12cc8 <argp_parse@@Base+0x614>
   12bb0:	sub	r3, fp, #148	; 0x94
   12bb4:	str	r3, [sp, #4]
   12bb8:	mov	r3, #0
   12bbc:	str	r3, [sp]
   12bc0:	ldr	r3, [fp, #-152]	; 0xffffff68
   12bc4:	ldr	r2, [fp, #-156]	; 0xffffff64
   12bc8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12bcc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12bd0:	bl	13470 <argp_parse@@Base+0xdbc>
   12bd4:	mov	r5, r0
   12bd8:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12bdc:	str	r4, [fp, #-84]	; 0xffffffac
   12be0:	cmn	r5, #1
   12be4:	beq	12cf4 <argp_parse@@Base+0x640>
   12be8:	cmp	r5, #63	; 0x3f
   12bec:	beq	12d24 <argp_parse@@Base+0x670>
   12bf0:	cmp	r5, #1
   12bf4:	beq	12ca0 <argp_parse@@Base+0x5ec>
   12bf8:	ldr	r4, [fp, #-136]	; 0xffffff78
   12bfc:	asrs	r3, r5, #24
   12c00:	beq	12d34 <argp_parse@@Base+0x680>
   12c04:	ands	r1, r5, #8388608	; 0x800000
   12c08:	movne	r1, #-16777216	; 0xff000000
   12c0c:	bic	r2, r5, #-16777216	; 0xff000000
   12c10:	add	r0, r3, r3, lsl #3
   12c14:	lsl	r0, r0, #2
   12c18:	sub	r0, r0, #36	; 0x24
   12c1c:	mov	r3, r4
   12c20:	orr	r2, r2, r1
   12c24:	sub	r1, fp, #96	; 0x60
   12c28:	ldr	ip, [fp, #-112]	; 0xffffff90
   12c2c:	add	r0, ip, r0
   12c30:	bl	12070 <__assert_fail@plt+0xd94>
   12c34:	cmp	r0, #7
   12c38:	beq	12efc <argp_parse@@Base+0x848>
   12c3c:	cmp	r0, #0
   12c40:	bne	12f80 <argp_parse@@Base+0x8cc>
   12c44:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12c48:	cmp	r3, #0
   12c4c:	beq	12c64 <argp_parse@@Base+0x5b0>
   12c50:	ldr	r2, [fp, #-84]	; 0xffffffac
   12c54:	cmp	r3, r2
   12c58:	movgt	r3, #0
   12c5c:	strgt	r3, [fp, #-72]	; 0xffffffb8
   12c60:	ble	12c70 <argp_parse@@Base+0x5bc>
   12c64:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12c68:	cmp	r3, #0
   12c6c:	bne	12b94 <argp_parse@@Base+0x4e0>
   12c70:	ldr	r3, [fp, #-84]	; 0xffffffac
   12c74:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12c78:	cmp	r3, r2
   12c7c:	bge	131f0 <argp_parse@@Base+0xb3c>
   12c80:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12c84:	tst	r2, #4
   12c88:	bne	131f8 <argp_parse@@Base+0xb44>
   12c8c:	add	r2, r3, #1
   12c90:	str	r2, [fp, #-84]	; 0xffffffac
   12c94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12c98:	ldr	r3, [r2, r3, lsl #2]
   12c9c:	str	r3, [fp, #-136]	; 0xffffff78
   12ca0:	ldr	r7, [fp, #-136]	; 0xffffff78
   12ca4:	ldr	r4, [fp, #-84]	; 0xffffffac
   12ca8:	sub	r4, r4, #1
   12cac:	str	r4, [fp, #-84]	; 0xffffffac
   12cb0:	ldr	r5, [fp, #-112]	; 0xffffff90
   12cb4:	ldr	r3, [fp, #-108]	; 0xffffff94
   12cb8:	cmp	r3, r5
   12cbc:	bls	12f78 <argp_parse@@Base+0x8c4>
   12cc0:	mov	r6, #0
   12cc4:	b	12df4 <argp_parse@@Base+0x740>
   12cc8:	sub	r3, fp, #148	; 0x94
   12ccc:	str	r3, [sp, #4]
   12cd0:	mov	r3, #0
   12cd4:	str	r3, [sp]
   12cd8:	ldr	r3, [fp, #-152]	; 0xffffff68
   12cdc:	ldr	r2, [fp, #-156]	; 0xffffff64
   12ce0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12ce4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12ce8:	bl	13414 <argp_parse@@Base+0xd60>
   12cec:	mov	r5, r0
   12cf0:	b	12bd8 <argp_parse@@Base+0x524>
   12cf4:	mov	r3, #0
   12cf8:	str	r3, [fp, #-100]	; 0xffffff9c
   12cfc:	cmp	r4, #1
   12d00:	ble	12c70 <argp_parse@@Base+0x5bc>
   12d04:	sub	r3, r4, #-1073741823	; 0xc0000001
   12d08:	mov	r1, sl
   12d0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12d10:	ldr	r0, [r2, r3, lsl #2]
   12d14:	bl	10ff4 <strcmp@plt>
   12d18:	cmp	r0, #0
   12d1c:	streq	r4, [fp, #-72]	; 0xffffffb8
   12d20:	b	12c70 <argp_parse@@Base+0x5bc>
   12d24:	ldr	r3, [fp, #-140]	; 0xffffff74
   12d28:	cmn	r3, #1
   12d2c:	bne	131e8 <argp_parse@@Base+0xb34>
   12d30:	ldr	r4, [fp, #-136]	; 0xffffff78
   12d34:	mov	r1, r5
   12d38:	ldr	r0, [fp, #-156]	; 0xffffff64
   12d3c:	bl	111c8 <strchr@plt>
   12d40:	subs	r1, r0, #0
   12d44:	beq	12d94 <argp_parse@@Base+0x6e0>
   12d48:	ldr	r0, [fp, #-112]	; 0xffffff90
   12d4c:	ldr	r2, [fp, #-108]	; 0xffffff94
   12d50:	cmp	r2, r0
   12d54:	bls	12d94 <argp_parse@@Base+0x6e0>
   12d58:	ldr	r3, [r0, #8]
   12d5c:	cmp	r1, r3
   12d60:	bcc	12d7c <argp_parse@@Base+0x6c8>
   12d64:	add	r0, r0, #36	; 0x24
   12d68:	cmp	r2, r0
   12d6c:	bls	12d94 <argp_parse@@Base+0x6e0>
   12d70:	ldr	r3, [r0, #8]
   12d74:	cmp	r1, r3
   12d78:	bcs	12d64 <argp_parse@@Base+0x6b0>
   12d7c:	mov	r3, r4
   12d80:	mov	r2, r5
   12d84:	sub	r1, fp, #96	; 0x60
   12d88:	bl	12070 <__assert_fail@plt+0xd94>
   12d8c:	cmp	r0, #7
   12d90:	bne	12c3c <argp_parse@@Base+0x588>
   12d94:	ldr	r3, [pc, #1128]	; 13204 <argp_parse@@Base+0xb50>
   12d98:	mov	r2, r5
   12d9c:	movw	r1, #34700	; 0x878c
   12da0:	movt	r1, #1
   12da4:	sub	r0, fp, #96	; 0x60
   12da8:	bl	16d1c <argp_error@@Base>
   12dac:	b	12e34 <argp_parse@@Base+0x780>
   12db0:	ldr	r3, [fp, #-84]	; 0xffffffac
   12db4:	sub	r3, r3, #1
   12db8:	str	r3, [fp, #-84]	; 0xffffffac
   12dbc:	mov	r3, r6
   12dc0:	mov	r2, r9
   12dc4:	sub	r1, fp, #96	; 0x60
   12dc8:	mov	r0, r5
   12dcc:	bl	12070 <__assert_fail@plt+0xd94>
   12dd0:	add	r5, r5, #36	; 0x24
   12dd4:	ldr	r2, [fp, #-108]	; 0xffffff94
   12dd8:	cmp	r5, r2
   12ddc:	movcs	r3, #0
   12de0:	movcc	r3, #1
   12de4:	cmp	r0, #7
   12de8:	movne	r3, #0
   12dec:	cmp	r3, #0
   12df0:	beq	12ec4 <argp_parse@@Base+0x810>
   12df4:	ldr	r3, [fp, #-84]	; 0xffffffac
   12df8:	add	r3, r3, #1
   12dfc:	str	r3, [fp, #-84]	; 0xffffffac
   12e00:	mov	r3, r7
   12e04:	mov	r2, r6
   12e08:	sub	r1, fp, #96	; 0x60
   12e0c:	mov	r0, r5
   12e10:	bl	12070 <__assert_fail@plt+0xd94>
   12e14:	cmp	r0, #7
   12e18:	beq	12db0 <argp_parse@@Base+0x6fc>
   12e1c:	add	r5, r5, #36	; 0x24
   12e20:	cmp	r0, #0
   12e24:	beq	12ed4 <argp_parse@@Base+0x820>
   12e28:	cmp	r0, #7
   12e2c:	bne	12c3c <argp_parse@@Base+0x588>
   12e30:	mov	r5, #1
   12e34:	add	r5, r5, #1
   12e38:	bics	r3, r5, #2
   12e3c:	moveq	r3, #1
   12e40:	movne	r3, #0
   12e44:	cmp	r3, #0
   12e48:	beq	1318c <argp_parse@@Base+0xad8>
   12e4c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12e50:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12e54:	cmp	r3, r2
   12e58:	beq	13040 <argp_parse@@Base+0x98c>
   12e5c:	ldr	r2, [fp, #4]
   12e60:	cmp	r2, #0
   12e64:	strne	r3, [r2]
   12e68:	beq	13164 <argp_parse@@Base+0xab0>
   12e6c:	ldr	r5, [fp, #-108]	; 0xffffff94
   12e70:	sub	r5, r5, #36	; 0x24
   12e74:	ldr	r3, [fp, #-112]	; 0xffffff90
   12e78:	cmp	r5, r3
   12e7c:	bcc	131cc <argp_parse@@Base+0xb18>
   12e80:	mov	r6, #4
   12e84:	movt	r6, #256	; 0x100
   12e88:	mov	r7, #0
   12e8c:	mov	r3, r7
   12e90:	mov	r2, r6
   12e94:	sub	r1, fp, #96	; 0x60
   12e98:	mov	r0, r5
   12e9c:	bl	12070 <__assert_fail@plt+0xd94>
   12ea0:	sub	r5, r5, #36	; 0x24
   12ea4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12ea8:	cmp	r5, r3
   12eac:	bcc	131a4 <argp_parse@@Base+0xaf0>
   12eb0:	cmp	r0, #7
   12eb4:	cmpne	r0, #0
   12eb8:	beq	12e8c <argp_parse@@Base+0x7d8>
   12ebc:	mov	r4, r0
   12ec0:	b	131b4 <argp_parse@@Base+0xb00>
   12ec4:	cmp	r0, #0
   12ec8:	bne	12e28 <argp_parse@@Base+0x774>
   12ecc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12ed0:	str	r3, [fp, #-84]	; 0xffffffac
   12ed4:	ldr	r3, [fp, #-84]	; 0xffffffac
   12ed8:	cmp	r4, r3
   12edc:	movge	r3, #1
   12ee0:	strge	r3, [fp, #-100]	; 0xffffff9c
   12ee4:	bge	12c44 <argp_parse@@Base+0x590>
   12ee8:	sub	r4, r3, r4
   12eec:	ldr	r3, [r5, #-24]	; 0xffffffe8
   12ef0:	add	r4, r3, r4
   12ef4:	str	r4, [r5, #-24]	; 0xffffffe8
   12ef8:	b	12c44 <argp_parse@@Base+0x590>
   12efc:	ldr	r3, [fp, #-152]	; 0xffffff68
   12f00:	ldr	r2, [r3, #12]
   12f04:	cmp	r2, r5
   12f08:	beq	12f40 <argp_parse@@Base+0x88c>
   12f0c:	ldr	r2, [r3]
   12f10:	cmp	r2, #0
   12f14:	beq	12f6c <argp_parse@@Base+0x8b8>
   12f18:	add	r3, r3, #16
   12f1c:	ldr	r2, [r3, #12]
   12f20:	cmp	r5, r2
   12f24:	beq	12f40 <argp_parse@@Base+0x88c>
   12f28:	ldr	r2, [r3]
   12f2c:	cmp	r2, #0
   12f30:	bne	12f18 <argp_parse@@Base+0x864>
   12f34:	movw	r2, #34692	; 0x8784
   12f38:	movt	r2, #1
   12f3c:	b	12f54 <argp_parse@@Base+0x8a0>
   12f40:	ldr	r2, [r3]
   12f44:	movw	r3, #34692	; 0x8784
   12f48:	movt	r3, #1
   12f4c:	cmp	r2, #0
   12f50:	moveq	r2, r3
   12f54:	ldr	r3, [pc, #680]	; 13204 <argp_parse@@Base+0xb50>
   12f58:	movw	r1, #34708	; 0x8794
   12f5c:	movt	r1, #1
   12f60:	sub	r0, fp, #96	; 0x60
   12f64:	bl	16d1c <argp_error@@Base>
   12f68:	b	12e34 <argp_parse@@Base+0x780>
   12f6c:	movw	r2, #34692	; 0x8784
   12f70:	movt	r2, #1
   12f74:	b	12f54 <argp_parse@@Base+0x8a0>
   12f78:	mov	r5, #1
   12f7c:	b	12e34 <argp_parse@@Base+0x780>
   12f80:	mov	r4, r0
   12f84:	cmp	r4, #7
   12f88:	beq	1318c <argp_parse@@Base+0xad8>
   12f8c:	ldr	r5, [fp, #-112]	; 0xffffff90
   12f90:	ldr	r3, [fp, #-108]	; 0xffffff94
   12f94:	cmp	r5, r3
   12f98:	bcs	12fcc <argp_parse@@Base+0x918>
   12f9c:	mov	r6, #5
   12fa0:	movt	r6, #256	; 0x100
   12fa4:	mov	r7, #0
   12fa8:	mov	r3, r7
   12fac:	mov	r2, r6
   12fb0:	sub	r1, fp, #96	; 0x60
   12fb4:	mov	r0, r5
   12fb8:	bl	12070 <__assert_fail@plt+0xd94>
   12fbc:	add	r5, r5, #36	; 0x24
   12fc0:	ldr	r3, [fp, #-108]	; 0xffffff94
   12fc4:	cmp	r5, r3
   12fc8:	bcc	12fa8 <argp_parse@@Base+0x8f4>
   12fcc:	ldr	r5, [fp, #-108]	; 0xffffff94
   12fd0:	sub	r5, r5, #36	; 0x24
   12fd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12fd8:	cmp	r3, r5
   12fdc:	bhi	13010 <argp_parse@@Base+0x95c>
   12fe0:	mov	r6, #7
   12fe4:	movt	r6, #256	; 0x100
   12fe8:	mov	r7, #0
   12fec:	mov	r3, r7
   12ff0:	mov	r2, r6
   12ff4:	sub	r1, fp, #96	; 0x60
   12ff8:	mov	r0, r5
   12ffc:	bl	12070 <__assert_fail@plt+0xd94>
   13000:	sub	r5, r5, #36	; 0x24
   13004:	ldr	r3, [fp, #-112]	; 0xffffff90
   13008:	cmp	r5, r3
   1300c:	bcs	12fec <argp_parse@@Base+0x938>
   13010:	cmp	r4, #7
   13014:	moveq	r4, #22
   13018:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1301c:	bl	1338c <argp_parse@@Base+0xcd8>
   13020:	mov	r0, r4
   13024:	sub	sp, fp, #32
   13028:	ldrd	r4, [sp]
   1302c:	ldrd	r6, [sp, #8]
   13030:	ldrd	r8, [sp, #16]
   13034:	ldrd	sl, [sp, #24]
   13038:	add	sp, sp, #32
   1303c:	pop	{pc}		; (ldr pc, [sp], #4)
   13040:	ldr	r6, [fp, #-112]	; 0xffffff90
   13044:	ldr	r5, [fp, #-108]	; 0xffffff94
   13048:	cmp	r5, r6
   1304c:	bls	131d4 <argp_parse@@Base+0xb20>
   13050:	mov	r4, #0
   13054:	mov	r7, #2
   13058:	movt	r7, #256	; 0x100
   1305c:	mov	r8, r4
   13060:	mov	r0, r4
   13064:	b	13084 <argp_parse@@Base+0x9d0>
   13068:	add	r6, r6, #36	; 0x24
   1306c:	ldr	r5, [fp, #-108]	; 0xffffff94
   13070:	cmp	r6, r5
   13074:	bcs	130c0 <argp_parse@@Base+0xa0c>
   13078:	cmp	r0, #7
   1307c:	cmpne	r0, #0
   13080:	bne	130a8 <argp_parse@@Base+0x9f4>
   13084:	ldr	r3, [r6, #12]
   13088:	cmp	r3, #0
   1308c:	bne	13068 <argp_parse@@Base+0x9b4>
   13090:	mov	r3, r8
   13094:	mov	r2, r7
   13098:	sub	r1, fp, #96	; 0x60
   1309c:	mov	r0, r6
   130a0:	bl	12070 <__assert_fail@plt+0xd94>
   130a4:	b	13068 <argp_parse@@Base+0x9b4>
   130a8:	mov	r4, r0
   130ac:	sub	r5, r5, #36	; 0x24
   130b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   130b4:	cmp	r3, r5
   130b8:	bls	130d4 <argp_parse@@Base+0xa20>
   130bc:	b	13120 <argp_parse@@Base+0xa6c>
   130c0:	mov	r4, r0
   130c4:	sub	r5, r5, #36	; 0x24
   130c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   130cc:	cmp	r3, r5
   130d0:	bhi	13148 <argp_parse@@Base+0xa94>
   130d4:	cmp	r4, #7
   130d8:	cmpne	r4, #0
   130dc:	bne	13120 <argp_parse@@Base+0xa6c>
   130e0:	mov	r6, #1
   130e4:	movt	r6, #256	; 0x100
   130e8:	mov	r7, #0
   130ec:	mov	r3, r7
   130f0:	mov	r2, r6
   130f4:	sub	r1, fp, #96	; 0x60
   130f8:	mov	r0, r5
   130fc:	bl	12070 <__assert_fail@plt+0xd94>
   13100:	sub	r5, r5, #36	; 0x24
   13104:	ldr	r3, [fp, #-112]	; 0xffffff90
   13108:	cmp	r5, r3
   1310c:	bcc	13144 <argp_parse@@Base+0xa90>
   13110:	cmp	r0, #7
   13114:	cmpne	r0, #0
   13118:	beq	130ec <argp_parse@@Base+0xa38>
   1311c:	mov	r4, r0
   13120:	ldr	r3, [fp, #4]
   13124:	cmp	r3, #0
   13128:	beq	13138 <argp_parse@@Base+0xa84>
   1312c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13130:	ldr	r2, [fp, #4]
   13134:	str	r3, [r2]
   13138:	cmp	r4, #0
   1313c:	beq	12e6c <argp_parse@@Base+0x7b8>
   13140:	b	12f84 <argp_parse@@Base+0x8d0>
   13144:	mov	r4, r0
   13148:	cmp	r4, #7
   1314c:	bne	13120 <argp_parse@@Base+0xa6c>
   13150:	ldr	r3, [fp, #4]
   13154:	cmp	r3, #0
   13158:	movne	r4, #0
   1315c:	bne	1312c <argp_parse@@Base+0xa78>
   13160:	b	12e6c <argp_parse@@Base+0x7b8>
   13164:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13168:	tst	r3, #2
   1316c:	bne	1318c <argp_parse@@Base+0xad8>
   13170:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13174:	cmp	r0, #0
   13178:	beq	1318c <argp_parse@@Base+0xad8>
   1317c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13180:	movw	r1, #34720	; 0x87a0
   13184:	movt	r1, #1
   13188:	bl	111d4 <fprintf@plt>
   1318c:	mov	r2, #260	; 0x104
   13190:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13194:	sub	r0, fp, #96	; 0x60
   13198:	bl	16c54 <argp_state_help@@Base>
   1319c:	mov	r4, #7
   131a0:	b	12f8c <argp_parse@@Base+0x8d8>
   131a4:	mov	r4, r0
   131a8:	cmp	r0, #7
   131ac:	movne	r4, r0
   131b0:	moveq	r4, #0
   131b4:	ldr	r5, [fp, #-108]	; 0xffffff94
   131b8:	sub	r5, r5, #36	; 0x24
   131bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   131c0:	cmp	r3, r5
   131c4:	bls	12fe0 <argp_parse@@Base+0x92c>
   131c8:	b	13018 <argp_parse@@Base+0x964>
   131cc:	mov	r4, #0
   131d0:	b	13018 <argp_parse@@Base+0x964>
   131d4:	sub	r5, r5, #36	; 0x24
   131d8:	cmp	r5, r6
   131dc:	movcc	r4, #0
   131e0:	bcs	130e0 <argp_parse@@Base+0xa2c>
   131e4:	b	13120 <argp_parse@@Base+0xa6c>
   131e8:	mov	r3, #0
   131ec:	b	12e44 <argp_parse@@Base+0x790>
   131f0:	mov	r3, #1
   131f4:	b	12e44 <argp_parse@@Base+0x790>
   131f8:	mov	r3, #1
   131fc:	b	12e44 <argp_parse@@Base+0x790>
   13200:	andeq	r8, r1, r8, asr r6
   13204:	andeq	r8, r1, r4, ror r6
   13208:	cmp	r1, #0
   1320c:	beq	13258 <argp_parse@@Base+0xba4>
   13210:	ldr	r2, [r1, #52]	; 0x34
   13214:	ldr	r3, [r2, #48]	; 0x30
   13218:	ldr	r1, [r2, #52]	; 0x34
   1321c:	cmp	r3, r1
   13220:	bcs	13260 <argp_parse@@Base+0xbac>
   13224:	ldr	r2, [r3, #4]
   13228:	cmp	r0, r2
   1322c:	beq	13248 <argp_parse@@Base+0xb94>
   13230:	add	r3, r3, #36	; 0x24
   13234:	cmp	r3, r1
   13238:	bcs	13250 <argp_parse@@Base+0xb9c>
   1323c:	ldr	r2, [r3, #4]
   13240:	cmp	r2, r0
   13244:	bne	13230 <argp_parse@@Base+0xb7c>
   13248:	ldr	r0, [r3, #24]
   1324c:	bx	lr
   13250:	mov	r0, #0
   13254:	bx	lr
   13258:	mov	r0, r1
   1325c:	bx	lr
   13260:	mov	r0, #0
   13264:	bx	lr
   13268:	push	{lr}		; (str lr, [sp, #-4]!)
   1326c:	sub	sp, sp, #12
   13270:	movw	r1, #41576	; 0xa268
   13274:	movt	r1, #2
   13278:	ldr	r3, [r1, #4]
   1327c:	str	r3, [sp]
   13280:	movw	r3, #34952	; 0x8888
   13284:	movt	r3, #1
   13288:	movw	r2, #34968	; 0x8898
   1328c:	movt	r2, #1
   13290:	ldr	r1, [r1]
   13294:	bl	138ac <argp_parse@@Base+0x11f8>
   13298:	add	sp, sp, #12
   1329c:	pop	{pc}		; (ldr pc, [sp], #4)
   132a0:	movw	r3, #41572	; 0xa264
   132a4:	movt	r3, #2
   132a8:	movw	r2, #12904	; 0x3268
   132ac:	movt	r2, #1
   132b0:	str	r2, [r3]
   132b4:	movw	r3, #41576	; 0xa268
   132b8:	movt	r3, #2
   132bc:	str	r0, [r3]
   132c0:	str	r1, [r3, #4]
   132c4:	bx	lr
   132c8:	ldrb	r3, [r0]
   132cc:	cmp	r3, #47	; 0x2f
   132d0:	bne	132e0 <argp_parse@@Base+0xc2c>
   132d4:	ldrb	r3, [r0, #1]!
   132d8:	cmp	r3, #47	; 0x2f
   132dc:	beq	132d4 <argp_parse@@Base+0xc20>
   132e0:	ldrb	r2, [r0]
   132e4:	cmp	r2, #0
   132e8:	bxeq	lr
   132ec:	push	{lr}		; (str lr, [sp, #-4]!)
   132f0:	mov	r1, r0
   132f4:	mov	r3, #0
   132f8:	mov	lr, #1
   132fc:	mov	ip, r3
   13300:	b	1331c <argp_parse@@Base+0xc68>
   13304:	cmp	r3, #0
   13308:	movne	r0, r1
   1330c:	movne	r3, ip
   13310:	ldrb	r2, [r1, #1]!
   13314:	cmp	r2, #0
   13318:	beq	1332c <argp_parse@@Base+0xc78>
   1331c:	cmp	r2, #47	; 0x2f
   13320:	moveq	r3, lr
   13324:	bne	13304 <argp_parse@@Base+0xc50>
   13328:	b	13310 <argp_parse@@Base+0xc5c>
   1332c:	pop	{pc}		; (ldr pc, [sp], #4)
   13330:	str	r4, [sp, #-8]!
   13334:	str	lr, [sp, #4]
   13338:	mov	r4, r0
   1333c:	bl	111bc <strlen@plt>
   13340:	cmp	r0, #1
   13344:	bls	13364 <argp_parse@@Base+0xcb0>
   13348:	add	r3, r4, r0
   1334c:	ldrb	r3, [r3, #-1]
   13350:	cmp	r3, #47	; 0x2f
   13354:	subeq	r0, r0, #2
   13358:	addeq	r3, r4, r0
   1335c:	rsbeq	r1, r4, #1
   13360:	beq	13370 <argp_parse@@Base+0xcbc>
   13364:	ldr	r4, [sp]
   13368:	add	sp, sp, #4
   1336c:	pop	{pc}		; (ldr pc, [sp], #4)
   13370:	add	r0, r1, r3
   13374:	cmp	r3, r4
   13378:	beq	13364 <argp_parse@@Base+0xcb0>
   1337c:	ldrb	r2, [r3], #-1
   13380:	cmp	r2, #47	; 0x2f
   13384:	bne	13364 <argp_parse@@Base+0xcb0>
   13388:	b	13370 <argp_parse@@Base+0xcbc>
   1338c:	strd	r4, [sp, #-12]!
   13390:	str	lr, [sp, #8]
   13394:	sub	sp, sp, #12
   13398:	mov	r5, r0
   1339c:	bl	111ec <__errno_location@plt>
   133a0:	mov	r4, r0
   133a4:	ldr	r3, [r0]
   133a8:	str	r3, [sp]
   133ac:	str	r3, [sp, #4]
   133b0:	mov	r3, #0
   133b4:	str	r3, [r0]
   133b8:	mov	r0, r5
   133bc:	bl	1106c <free@plt>
   133c0:	ldr	r3, [r4]
   133c4:	clz	r3, r3
   133c8:	lsr	r3, r3, #5
   133cc:	add	r2, sp, #8
   133d0:	add	r3, r2, r3, lsl #2
   133d4:	ldr	r3, [r3, #-8]
   133d8:	str	r3, [r4]
   133dc:	add	sp, sp, #12
   133e0:	ldrd	r4, [sp]
   133e4:	add	sp, sp, #8
   133e8:	pop	{pc}		; (ldr pc, [sp], #4)
   133ec:	push	{lr}		; (str lr, [sp, #-4]!)
   133f0:	sub	sp, sp, #20
   133f4:	mov	ip, #0
   133f8:	str	ip, [sp, #8]
   133fc:	str	ip, [sp, #4]
   13400:	ldr	ip, [sp, #24]
   13404:	str	ip, [sp]
   13408:	bl	17a7c <argp_error@@Base+0xd60>
   1340c:	add	sp, sp, #20
   13410:	pop	{pc}		; (ldr pc, [sp], #4)
   13414:	push	{lr}		; (str lr, [sp, #-4]!)
   13418:	sub	sp, sp, #20
   1341c:	mov	ip, #0
   13420:	str	ip, [sp, #12]
   13424:	ldr	lr, [sp, #28]
   13428:	str	lr, [sp, #8]
   1342c:	str	ip, [sp, #4]
   13430:	ldr	ip, [sp, #24]
   13434:	str	ip, [sp]
   13438:	bl	174c0 <argp_error@@Base+0x7a4>
   1343c:	add	sp, sp, #20
   13440:	pop	{pc}		; (ldr pc, [sp], #4)
   13444:	push	{lr}		; (str lr, [sp, #-4]!)
   13448:	sub	sp, sp, #20
   1344c:	mov	ip, #0
   13450:	str	ip, [sp, #8]
   13454:	mov	ip, #1
   13458:	str	ip, [sp, #4]
   1345c:	ldr	ip, [sp, #24]
   13460:	str	ip, [sp]
   13464:	bl	17a7c <argp_error@@Base+0xd60>
   13468:	add	sp, sp, #20
   1346c:	pop	{pc}		; (ldr pc, [sp], #4)
   13470:	push	{lr}		; (str lr, [sp, #-4]!)
   13474:	sub	sp, sp, #20
   13478:	mov	ip, #0
   1347c:	str	ip, [sp, #12]
   13480:	ldr	ip, [sp, #28]
   13484:	str	ip, [sp, #8]
   13488:	mov	ip, #1
   1348c:	str	ip, [sp, #4]
   13490:	ldr	ip, [sp, #24]
   13494:	str	ip, [sp]
   13498:	bl	174c0 <argp_error@@Base+0x7a4>
   1349c:	add	sp, sp, #20
   134a0:	pop	{pc}		; (ldr pc, [sp], #4)
   134a4:	push	{r1, r2, r3}
   134a8:	push	{lr}		; (str lr, [sp, #-4]!)
   134ac:	sub	sp, sp, #8
   134b0:	add	r3, sp, #20
   134b4:	str	r3, [sp, #4]
   134b8:	ldr	r2, [sp, #16]
   134bc:	ldr	r1, [sp, #12]
   134c0:	bl	11108 <ioctl@plt>
   134c4:	add	sp, sp, #8
   134c8:	pop	{lr}		; (ldr lr, [sp], #4)
   134cc:	add	sp, sp, #12
   134d0:	bx	lr
   134d4:	strd	r4, [sp, #-16]!
   134d8:	str	r6, [sp, #8]
   134dc:	str	lr, [sp, #12]
   134e0:	subs	r4, r0, #0
   134e4:	beq	13580 <argp_parse@@Base+0xecc>
   134e8:	mov	r1, #47	; 0x2f
   134ec:	mov	r0, r4
   134f0:	bl	11264 <strrchr@plt>
   134f4:	subs	r5, r0, #0
   134f8:	beq	13558 <argp_parse@@Base+0xea4>
   134fc:	add	r6, r5, #1
   13500:	sub	r3, r6, r4
   13504:	cmp	r3, #6
   13508:	ble	13558 <argp_parse@@Base+0xea4>
   1350c:	mov	r2, #7
   13510:	movw	r1, #35040	; 0x88e0
   13514:	movt	r1, #1
   13518:	sub	r0, r5, #6
   1351c:	bl	112b8 <strncmp@plt>
   13520:	cmp	r0, #0
   13524:	bne	13558 <argp_parse@@Base+0xea4>
   13528:	mov	r2, #3
   1352c:	movw	r1, #35048	; 0x88e8
   13530:	movt	r1, #1
   13534:	mov	r0, r6
   13538:	bl	112b8 <strncmp@plt>
   1353c:	cmp	r0, #0
   13540:	movne	r4, r6
   13544:	bne	13558 <argp_parse@@Base+0xea4>
   13548:	add	r4, r5, #4
   1354c:	movw	r3, #41528	; 0xa238
   13550:	movt	r3, #2
   13554:	str	r4, [r3]
   13558:	movw	r3, #41584	; 0xa270
   1355c:	movt	r3, #2
   13560:	str	r4, [r3]
   13564:	movw	r3, #41532	; 0xa23c
   13568:	movt	r3, #2
   1356c:	str	r4, [r3]
   13570:	ldrd	r4, [sp]
   13574:	ldr	r6, [sp, #8]
   13578:	add	sp, sp, #12
   1357c:	pop	{pc}		; (ldr pc, [sp], #4)
   13580:	movw	r3, #41536	; 0xa240
   13584:	movt	r3, #2
   13588:	ldr	r3, [r3]
   1358c:	mov	r2, #55	; 0x37
   13590:	mov	r1, #1
   13594:	movw	r0, #34984	; 0x88a8
   13598:	movt	r0, #1
   1359c:	bl	110fc <fwrite@plt>
   135a0:	bl	112c4 <abort@plt>
   135a4:	strd	r4, [sp, #-16]!
   135a8:	str	r6, [sp, #8]
   135ac:	str	lr, [sp, #12]
   135b0:	sub	sp, sp, #32
   135b4:	mov	r4, r0
   135b8:	ldr	r5, [sp, #48]	; 0x30
   135bc:	ldr	r6, [sp, #52]	; 0x34
   135c0:	cmp	r1, #0
   135c4:	beq	13660 <argp_parse@@Base+0xfac>
   135c8:	str	r3, [sp]
   135cc:	mov	r3, r2
   135d0:	mov	r2, r1
   135d4:	movw	r1, #35052	; 0x88ec
   135d8:	movt	r1, #1
   135dc:	bl	111d4 <fprintf@plt>
   135e0:	movw	r3, #2022	; 0x7e6
   135e4:	movw	r2, #35072	; 0x8900
   135e8:	movt	r2, #1
   135ec:	movw	r1, #35840	; 0x8c00
   135f0:	movt	r1, #1
   135f4:	mov	r0, r4
   135f8:	bl	111d4 <fprintf@plt>
   135fc:	mov	r1, r4
   13600:	mov	r0, #10
   13604:	bl	1127c <fputc@plt>
   13608:	movw	r2, #35076	; 0x8904
   1360c:	movt	r2, #1
   13610:	movw	r1, #35112	; 0x8928
   13614:	movt	r1, #1
   13618:	mov	r0, r4
   1361c:	bl	111d4 <fprintf@plt>
   13620:	mov	r1, r4
   13624:	mov	r0, #10
   13628:	bl	1127c <fputc@plt>
   1362c:	cmp	r6, #9
   13630:	ldrls	pc, [pc, r6, lsl #2]
   13634:	b	13858 <argp_parse@@Base+0x11a4>
   13638:	andeq	r3, r1, r4, lsl #13
   1363c:	andeq	r3, r1, r0, ror r6
   13640:	muleq	r1, r8, r6
   13644:			; <UNDEFINED> instruction: 0x000136b4
   13648:	ldrdeq	r3, [r1], -r8
   1364c:	andeq	r3, r1, r4, lsl #14
   13650:	andeq	r3, r1, r8, lsr r7
   13654:	andeq	r3, r1, r4, ror r7
   13658:			; <UNDEFINED> instruction: 0x000137b8
   1365c:	andeq	r3, r1, r4, lsl #16
   13660:	movw	r1, #35064	; 0x88f8
   13664:	movt	r1, #1
   13668:	bl	111d4 <fprintf@plt>
   1366c:	b	135e0 <argp_parse@@Base+0xf2c>
   13670:	ldr	r2, [r5]
   13674:	movw	r1, #35284	; 0x89d4
   13678:	movt	r1, #1
   1367c:	mov	r0, r4
   13680:	bl	111d4 <fprintf@plt>
   13684:	add	sp, sp, #32
   13688:	ldrd	r4, [sp]
   1368c:	ldr	r6, [sp, #8]
   13690:	add	sp, sp, #12
   13694:	pop	{pc}		; (ldr pc, [sp], #4)
   13698:	ldr	r3, [r5, #4]
   1369c:	ldr	r2, [r5]
   136a0:	movw	r1, #35300	; 0x89e4
   136a4:	movt	r1, #1
   136a8:	mov	r0, r4
   136ac:	bl	111d4 <fprintf@plt>
   136b0:	b	13684 <argp_parse@@Base+0xfd0>
   136b4:	ldr	r3, [r5, #8]
   136b8:	str	r3, [sp]
   136bc:	ldr	r3, [r5, #4]
   136c0:	ldr	r2, [r5]
   136c4:	movw	r1, #35324	; 0x89fc
   136c8:	movt	r1, #1
   136cc:	mov	r0, r4
   136d0:	bl	111d4 <fprintf@plt>
   136d4:	b	13684 <argp_parse@@Base+0xfd0>
   136d8:	ldr	r3, [r5, #12]
   136dc:	str	r3, [sp, #4]
   136e0:	ldr	r3, [r5, #8]
   136e4:	str	r3, [sp]
   136e8:	ldr	r3, [r5, #4]
   136ec:	ldr	r2, [r5]
   136f0:	movw	r1, #35352	; 0x8a18
   136f4:	movt	r1, #1
   136f8:	mov	r0, r4
   136fc:	bl	111d4 <fprintf@plt>
   13700:	b	13684 <argp_parse@@Base+0xfd0>
   13704:	ldr	r3, [r5, #16]
   13708:	str	r3, [sp, #8]
   1370c:	ldr	r3, [r5, #12]
   13710:	str	r3, [sp, #4]
   13714:	ldr	r3, [r5, #8]
   13718:	str	r3, [sp]
   1371c:	ldr	r3, [r5, #4]
   13720:	ldr	r2, [r5]
   13724:	movw	r1, #35384	; 0x8a38
   13728:	movt	r1, #1
   1372c:	mov	r0, r4
   13730:	bl	111d4 <fprintf@plt>
   13734:	b	13684 <argp_parse@@Base+0xfd0>
   13738:	ldr	r3, [r5, #20]
   1373c:	str	r3, [sp, #12]
   13740:	ldr	r3, [r5, #16]
   13744:	str	r3, [sp, #8]
   13748:	ldr	r3, [r5, #12]
   1374c:	str	r3, [sp, #4]
   13750:	ldr	r3, [r5, #8]
   13754:	str	r3, [sp]
   13758:	ldr	r3, [r5, #4]
   1375c:	ldr	r2, [r5]
   13760:	movw	r1, #35420	; 0x8a5c
   13764:	movt	r1, #1
   13768:	mov	r0, r4
   1376c:	bl	111d4 <fprintf@plt>
   13770:	b	13684 <argp_parse@@Base+0xfd0>
   13774:	ldr	r3, [r5, #24]
   13778:	str	r3, [sp, #16]
   1377c:	ldr	r3, [r5, #20]
   13780:	str	r3, [sp, #12]
   13784:	ldr	r3, [r5, #16]
   13788:	str	r3, [sp, #8]
   1378c:	ldr	r3, [r5, #12]
   13790:	str	r3, [sp, #4]
   13794:	ldr	r3, [r5, #8]
   13798:	str	r3, [sp]
   1379c:	ldr	r3, [r5, #4]
   137a0:	ldr	r2, [r5]
   137a4:	movw	r1, #35460	; 0x8a84
   137a8:	movt	r1, #1
   137ac:	mov	r0, r4
   137b0:	bl	111d4 <fprintf@plt>
   137b4:	b	13684 <argp_parse@@Base+0xfd0>
   137b8:	ldr	r3, [r5, #28]
   137bc:	str	r3, [sp, #20]
   137c0:	ldr	r3, [r5, #24]
   137c4:	str	r3, [sp, #16]
   137c8:	ldr	r3, [r5, #20]
   137cc:	str	r3, [sp, #12]
   137d0:	ldr	r3, [r5, #16]
   137d4:	str	r3, [sp, #8]
   137d8:	ldr	r3, [r5, #12]
   137dc:	str	r3, [sp, #4]
   137e0:	ldr	r3, [r5, #8]
   137e4:	str	r3, [sp]
   137e8:	ldr	r3, [r5, #4]
   137ec:	ldr	r2, [r5]
   137f0:	movw	r1, #35504	; 0x8ab0
   137f4:	movt	r1, #1
   137f8:	mov	r0, r4
   137fc:	bl	111d4 <fprintf@plt>
   13800:	b	13684 <argp_parse@@Base+0xfd0>
   13804:	ldr	r3, [r5, #32]
   13808:	str	r3, [sp, #24]
   1380c:	ldr	r3, [r5, #28]
   13810:	str	r3, [sp, #20]
   13814:	ldr	r3, [r5, #24]
   13818:	str	r3, [sp, #16]
   1381c:	ldr	r3, [r5, #20]
   13820:	str	r3, [sp, #12]
   13824:	ldr	r3, [r5, #16]
   13828:	str	r3, [sp, #8]
   1382c:	ldr	r3, [r5, #12]
   13830:	str	r3, [sp, #4]
   13834:	ldr	r3, [r5, #8]
   13838:	str	r3, [sp]
   1383c:	ldr	r3, [r5, #4]
   13840:	ldr	r2, [r5]
   13844:	movw	r1, #35552	; 0x8ae0
   13848:	movt	r1, #1
   1384c:	mov	r0, r4
   13850:	bl	111d4 <fprintf@plt>
   13854:	b	13684 <argp_parse@@Base+0xfd0>
   13858:	ldr	r3, [r5, #32]
   1385c:	str	r3, [sp, #24]
   13860:	ldr	r3, [r5, #28]
   13864:	str	r3, [sp, #20]
   13868:	ldr	r3, [r5, #24]
   1386c:	str	r3, [sp, #16]
   13870:	ldr	r3, [r5, #20]
   13874:	str	r3, [sp, #12]
   13878:	ldr	r3, [r5, #16]
   1387c:	str	r3, [sp, #8]
   13880:	ldr	r3, [r5, #12]
   13884:	str	r3, [sp, #4]
   13888:	ldr	r3, [r5, #8]
   1388c:	str	r3, [sp]
   13890:	ldr	r3, [r5, #4]
   13894:	ldr	r2, [r5]
   13898:	movw	r1, #35604	; 0x8b14
   1389c:	movt	r1, #1
   138a0:	mov	r0, r4
   138a4:	bl	111d4 <fprintf@plt>
   138a8:	b	13684 <argp_parse@@Base+0xfd0>
   138ac:	strd	r4, [sp, #-12]!
   138b0:	str	lr, [sp, #8]
   138b4:	sub	sp, sp, #12
   138b8:	ldr	r5, [sp, #24]
   138bc:	ldr	ip, [r5]
   138c0:	cmp	ip, #0
   138c4:	beq	138fc <argp_parse@@Base+0x1248>
   138c8:	mov	lr, r5
   138cc:	mov	ip, #0
   138d0:	add	ip, ip, #1
   138d4:	ldr	r4, [lr, #4]!
   138d8:	cmp	r4, #0
   138dc:	bne	138d0 <argp_parse@@Base+0x121c>
   138e0:	str	ip, [sp, #4]
   138e4:	str	r5, [sp]
   138e8:	bl	135a4 <argp_parse@@Base+0xef0>
   138ec:	add	sp, sp, #12
   138f0:	ldrd	r4, [sp]
   138f4:	add	sp, sp, #8
   138f8:	pop	{pc}		; (ldr pc, [sp], #4)
   138fc:	mov	ip, #0
   13900:	b	138e0 <argp_parse@@Base+0x122c>
   13904:	strd	r4, [sp, #-12]!
   13908:	str	lr, [sp, #8]
   1390c:	sub	sp, sp, #52	; 0x34
   13910:	ldr	r5, [sp, #64]	; 0x40
   13914:	add	r4, sp, #8
   13918:	mov	ip, #0
   1391c:	ldr	lr, [r5], #4
   13920:	str	lr, [r4], #4
   13924:	cmp	lr, #0
   13928:	beq	13938 <argp_parse@@Base+0x1284>
   1392c:	add	ip, ip, #1
   13930:	cmp	ip, #10
   13934:	bne	1391c <argp_parse@@Base+0x1268>
   13938:	str	ip, [sp, #4]
   1393c:	add	ip, sp, #8
   13940:	str	ip, [sp]
   13944:	bl	135a4 <argp_parse@@Base+0xef0>
   13948:	add	sp, sp, #52	; 0x34
   1394c:	ldrd	r4, [sp]
   13950:	add	sp, sp, #8
   13954:	pop	{pc}		; (ldr pc, [sp], #4)
   13958:	push	{r3}		; (str r3, [sp, #-4]!)
   1395c:	push	{lr}		; (str lr, [sp, #-4]!)
   13960:	sub	sp, sp, #16
   13964:	add	r3, sp, #24
   13968:	str	r3, [sp, #12]
   1396c:	str	r3, [sp]
   13970:	ldr	r3, [sp, #20]
   13974:	bl	13904 <argp_parse@@Base+0x1250>
   13978:	add	sp, sp, #16
   1397c:	pop	{lr}		; (ldr lr, [sp], #4)
   13980:	add	sp, sp, #4
   13984:	bx	lr
   13988:	str	r4, [sp, #-8]!
   1398c:	str	lr, [sp, #4]
   13990:	movw	r3, #41540	; 0xa244
   13994:	movt	r3, #2
   13998:	ldr	r1, [r3]
   1399c:	mov	r0, #10
   139a0:	bl	1127c <fputc@plt>
   139a4:	movw	r1, #35664	; 0x8b50
   139a8:	movt	r1, #1
   139ac:	movw	r0, #35688	; 0x8b68
   139b0:	movt	r0, #1
   139b4:	bl	11024 <printf@plt>
   139b8:	movw	r2, #35708	; 0x8b7c
   139bc:	movt	r2, #1
   139c0:	movw	r1, #34968	; 0x8898
   139c4:	movt	r1, #1
   139c8:	movw	r0, #35748	; 0x8ba4
   139cc:	movt	r0, #1
   139d0:	bl	11024 <printf@plt>
   139d4:	movw	r1, #35768	; 0x8bb8
   139d8:	movt	r1, #1
   139dc:	movw	r0, #35800	; 0x8bd8
   139e0:	movt	r0, #1
   139e4:	bl	11024 <printf@plt>
   139e8:	ldr	r4, [sp]
   139ec:	add	sp, sp, #4
   139f0:	pop	{pc}		; (ldr pc, [sp], #4)
   139f4:	str	r4, [sp, #-8]!
   139f8:	str	lr, [sp, #4]
   139fc:	cmp	r0, #0
   13a00:	beq	13a1c <argp_parse@@Base+0x1368>
   13a04:	bge	13a20 <argp_parse@@Base+0x136c>
   13a08:	bl	111ec <__errno_location@plt>
   13a0c:	mov	r3, #12
   13a10:	str	r3, [r0]
   13a14:	mov	r0, #0
   13a18:	b	13a24 <argp_parse@@Base+0x1370>
   13a1c:	mov	r0, #1
   13a20:	bl	11138 <malloc@plt>
   13a24:	ldr	r4, [sp]
   13a28:	add	sp, sp, #4
   13a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a30:	ldr	r3, [r0]
   13a34:	ldr	r2, [r0, #4]
   13a38:	cmp	r2, #0
   13a3c:	beq	13a78 <argp_parse@@Base+0x13c4>
   13a40:	add	r3, r3, #24
   13a44:	b	13a54 <argp_parse@@Base+0x13a0>
   13a48:	add	r3, r3, #24
   13a4c:	subs	r2, r2, #1
   13a50:	beq	13a70 <argp_parse@@Base+0x13bc>
   13a54:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13a58:	cmp	r0, #0
   13a5c:	beq	13a48 <argp_parse@@Base+0x1394>
   13a60:	ldr	r1, [r3, #-12]
   13a64:	tst	r1, #2
   13a68:	bne	13a48 <argp_parse@@Base+0x1394>
   13a6c:	bx	lr
   13a70:	mov	r0, #0
   13a74:	bx	lr
   13a78:	mov	r0, #0
   13a7c:	b	13a6c <argp_parse@@Base+0x13b8>
   13a80:	ldr	r2, [r0, #8]
   13a84:	cmp	r2, #0
   13a88:	beq	13a94 <argp_parse@@Base+0x13e0>
   13a8c:	mov	r0, #0
   13a90:	bx	lr
   13a94:	ldr	r2, [r1, #8]
   13a98:	cmp	r2, #0
   13a9c:	bne	13a8c <argp_parse@@Base+0x13d8>
   13aa0:	ldr	r2, [r0, #12]
   13aa4:	ldr	r1, [r1, #12]
   13aa8:	orr	r2, r2, r1
   13aac:	tst	r2, #16
   13ab0:	bne	13a8c <argp_parse@@Base+0x13d8>
   13ab4:	ldr	r1, [r0, #4]
   13ab8:	ldr	r2, [r3]
   13abc:	add	r0, r2, #1
   13ac0:	str	r0, [r3]
   13ac4:	strb	r1, [r2]
   13ac8:	b	13a8c <argp_parse@@Base+0x13d8>
   13acc:	str	r4, [sp, #-8]!
   13ad0:	str	lr, [sp, #4]
   13ad4:	mov	r4, r0
   13ad8:	bl	111a4 <__ctype_b_loc@plt>
   13adc:	ldr	r3, [r4]
   13ae0:	ldrb	r2, [r3]
   13ae4:	ldr	ip, [r0]
   13ae8:	lsl	r1, r2, #1
   13aec:	ldrh	r1, [ip, r1]
   13af0:	tst	r1, #8192	; 0x2000
   13af4:	beq	13b04 <argp_parse@@Base+0x1450>
   13af8:	add	r3, r3, #1
   13afc:	str	r3, [r4]
   13b00:	b	13adc <argp_parse@@Base+0x1428>
   13b04:	subs	ip, r2, #45	; 0x2d
   13b08:	movne	ip, #1
   13b0c:	cmp	r2, #0
   13b10:	beq	13b44 <argp_parse@@Base+0x1490>
   13b14:	tst	r1, #8
   13b18:	bne	13b44 <argp_parse@@Base+0x1490>
   13b1c:	add	r3, r3, #1
   13b20:	str	r3, [r4]
   13b24:	ldrb	r2, [r3]
   13b28:	cmp	r2, #0
   13b2c:	beq	13b44 <argp_parse@@Base+0x1490>
   13b30:	ldr	r1, [r0]
   13b34:	lsl	r2, r2, #1
   13b38:	ldrh	r2, [r1, r2]
   13b3c:	tst	r2, #8
   13b40:	beq	13b1c <argp_parse@@Base+0x1468>
   13b44:	mov	r0, ip
   13b48:	ldr	r4, [sp]
   13b4c:	add	sp, sp, #4
   13b50:	pop	{pc}		; (ldr pc, [sp], #4)
   13b54:	strd	r4, [sp, #-16]!
   13b58:	str	r6, [sp, #8]
   13b5c:	str	lr, [sp, #12]
   13b60:	mov	r5, r0
   13b64:	ldr	r0, [r0, #12]
   13b68:	cmp	r0, #0
   13b6c:	beq	13b84 <argp_parse@@Base+0x14d0>
   13b70:	ldr	r4, [r0, #24]
   13b74:	bl	1338c <argp_parse@@Base+0xcd8>
   13b78:	mov	r0, r4
   13b7c:	cmp	r4, #0
   13b80:	bne	13b70 <argp_parse@@Base+0x14bc>
   13b84:	ldr	r3, [r5, #4]
   13b88:	cmp	r3, #0
   13b8c:	bne	13ba8 <argp_parse@@Base+0x14f4>
   13b90:	mov	r0, r5
   13b94:	bl	1338c <argp_parse@@Base+0xcd8>
   13b98:	ldrd	r4, [sp]
   13b9c:	ldr	r6, [sp, #8]
   13ba0:	add	sp, sp, #12
   13ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ba8:	ldr	r0, [r5]
   13bac:	bl	1338c <argp_parse@@Base+0xcd8>
   13bb0:	ldr	r0, [r5, #8]
   13bb4:	bl	1338c <argp_parse@@Base+0xcd8>
   13bb8:	b	13b90 <argp_parse@@Base+0x14dc>
   13bbc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13bc0:	strd	r6, [sp, #8]
   13bc4:	str	r8, [sp, #16]
   13bc8:	str	lr, [sp, #20]
   13bcc:	mov	r6, r1
   13bd0:	ldr	r7, [r0]
   13bd4:	ldr	r3, [r0, #4]
   13bd8:	sub	r8, r3, #1
   13bdc:	cmp	r3, #0
   13be0:	bne	13c4c <argp_parse@@Base+0x1598>
   13be4:	mov	r7, #0
   13be8:	b	13c24 <argp_parse@@Base+0x1570>
   13bec:	sub	r5, r5, #1
   13bf0:	add	r4, r4, #24
   13bf4:	cmn	r5, #1
   13bf8:	beq	13c3c <argp_parse@@Base+0x1588>
   13bfc:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13c00:	cmp	r0, #0
   13c04:	beq	13bec <argp_parse@@Base+0x1538>
   13c08:	ldr	r3, [r4, #-12]
   13c0c:	tst	r3, #2
   13c10:	bne	13bec <argp_parse@@Base+0x1538>
   13c14:	mov	r1, r6
   13c18:	bl	10ff4 <strcmp@plt>
   13c1c:	cmp	r0, #0
   13c20:	bne	13bec <argp_parse@@Base+0x1538>
   13c24:	mov	r0, r7
   13c28:	ldrd	r4, [sp]
   13c2c:	ldrd	r6, [sp, #8]
   13c30:	ldr	r8, [sp, #16]
   13c34:	add	sp, sp, #20
   13c38:	pop	{pc}		; (ldr pc, [sp], #4)
   13c3c:	add	r7, r7, #28
   13c40:	sub	r8, r8, #1
   13c44:	cmn	r8, #1
   13c48:	beq	13c68 <argp_parse@@Base+0x15b4>
   13c4c:	ldr	r4, [r7]
   13c50:	ldr	r3, [r7, #4]
   13c54:	sub	r5, r3, #1
   13c58:	cmp	r3, #0
   13c5c:	beq	13c3c <argp_parse@@Base+0x1588>
   13c60:	add	r4, r4, #24
   13c64:	b	13bfc <argp_parse@@Base+0x1548>
   13c68:	mov	r7, #0
   13c6c:	b	13c24 <argp_parse@@Base+0x1570>
   13c70:	strd	r4, [sp, #-16]!
   13c74:	str	r6, [sp, #8]
   13c78:	str	lr, [sp, #12]
   13c7c:	ldr	r4, [r0, #16]
   13c80:	ldr	r0, [r0, #8]
   13c84:	cmp	r0, #0
   13c88:	moveq	r5, #0
   13c8c:	beq	13ca0 <argp_parse@@Base+0x15ec>
   13c90:	mov	r1, #10
   13c94:	bl	111c8 <strchr@plt>
   13c98:	adds	r5, r0, #0
   13c9c:	movne	r5, #1
   13ca0:	cmp	r4, #0
   13ca4:	beq	13cc8 <argp_parse@@Base+0x1614>
   13ca8:	ldr	r0, [r4]
   13cac:	cmp	r0, #0
   13cb0:	beq	13cc8 <argp_parse@@Base+0x1614>
   13cb4:	bl	13c70 <argp_parse@@Base+0x15bc>
   13cb8:	add	r5, r5, r0
   13cbc:	ldr	r0, [r4, #16]!
   13cc0:	cmp	r0, #0
   13cc4:	bne	13cb4 <argp_parse@@Base+0x1600>
   13cc8:	mov	r0, r5
   13ccc:	ldrd	r4, [sp]
   13cd0:	ldr	r6, [sp, #8]
   13cd4:	add	sp, sp, #12
   13cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   13cdc:	strd	r4, [sp, #-16]!
   13ce0:	str	r6, [sp, #8]
   13ce4:	str	lr, [sp, #12]
   13ce8:	mov	r4, r0
   13cec:	subs	r5, r2, #0
   13cf0:	beq	13d28 <argp_parse@@Base+0x1674>
   13cf4:	mov	r6, r1
   13cf8:	ldr	r2, [r5, #20]
   13cfc:	cmp	r2, #0
   13d00:	beq	13d28 <argp_parse@@Base+0x1674>
   13d04:	mov	r1, r3
   13d08:	mov	r0, r5
   13d0c:	bl	13208 <argp_parse@@Base+0xb54>
   13d10:	ldr	r3, [r5, #20]
   13d14:	mov	r2, r0
   13d18:	mov	r1, r4
   13d1c:	mov	r0, r6
   13d20:	blx	r3
   13d24:	mov	r4, r0
   13d28:	mov	r0, r4
   13d2c:	ldrd	r4, [sp]
   13d30:	ldr	r6, [sp, #8]
   13d34:	add	sp, sp, #12
   13d38:	pop	{pc}		; (ldr pc, [sp], #4)
   13d3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13d40:	strd	r6, [sp, #8]
   13d44:	strd	r8, [sp, #16]
   13d48:	strd	sl, [sp, #24]
   13d4c:	str	lr, [sp, #32]
   13d50:	sub	sp, sp, #20
   13d54:	ldr	r4, [r0]
   13d58:	ldr	r9, [r0, #8]
   13d5c:	ldr	r6, [r0, #4]
   13d60:	cmp	r6, #0
   13d64:	beq	13db8 <argp_parse@@Base+0x1704>
   13d68:	str	r3, [sp, #12]
   13d6c:	str	r2, [sp, #8]
   13d70:	str	r1, [sp, #4]
   13d74:	mov	fp, r4
   13d78:	mov	sl, #0
   13d7c:	b	13e08 <argp_parse@@Base+0x1754>
   13d80:	and	r3, r5, #4
   13d84:	cmp	r3, #0
   13d88:	moveq	fp, r4
   13d8c:	tst	r5, #2
   13d90:	bne	13db0 <argp_parse@@Base+0x16fc>
   13d94:	ldr	r3, [sp, #12]
   13d98:	ldr	r2, [sp, #8]
   13d9c:	mov	r1, fp
   13da0:	mov	r0, r4
   13da4:	ldr	ip, [sp, #4]
   13da8:	blx	ip
   13dac:	mov	r7, r0
   13db0:	add	r9, r9, #1
   13db4:	b	13de8 <argp_parse@@Base+0x1734>
   13db8:	mov	r7, #0
   13dbc:	mov	r0, r7
   13dc0:	add	sp, sp, #20
   13dc4:	ldrd	r4, [sp]
   13dc8:	ldrd	r6, [sp, #8]
   13dcc:	ldrd	r8, [sp, #16]
   13dd0:	ldrd	sl, [sp, #24]
   13dd4:	add	sp, sp, #32
   13dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   13ddc:	ldrb	r3, [r9]
   13de0:	cmp	r3, r8
   13de4:	beq	13d80 <argp_parse@@Base+0x16cc>
   13de8:	add	r4, r4, #24
   13dec:	subs	r6, r6, #1
   13df0:	movne	r3, #1
   13df4:	moveq	r3, #0
   13df8:	cmp	r7, #0
   13dfc:	movne	r3, #0
   13e00:	cmp	r3, #0
   13e04:	beq	13dbc <argp_parse@@Base+0x1708>
   13e08:	ldr	r5, [r4, #12]
   13e0c:	ands	r7, r5, #8
   13e10:	movne	r7, sl
   13e14:	bne	13de8 <argp_parse@@Base+0x1734>
   13e18:	ldr	r8, [r4, #4]
   13e1c:	sub	r3, r8, #1
   13e20:	cmp	r3, #254	; 0xfe
   13e24:	bhi	13de8 <argp_parse@@Base+0x1734>
   13e28:	bl	111a4 <__ctype_b_loc@plt>
   13e2c:	ldr	r2, [r0]
   13e30:	lsl	r3, r8, #1
   13e34:	ldrh	r3, [r2, r3]
   13e38:	tst	r3, #16384	; 0x4000
   13e3c:	bne	13ddc <argp_parse@@Base+0x1728>
   13e40:	b	13de8 <argp_parse@@Base+0x1734>
   13e44:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13e48:	strd	r6, [sp, #8]
   13e4c:	strd	r8, [sp, #16]
   13e50:	strd	sl, [sp, #24]
   13e54:	str	lr, [sp, #32]
   13e58:	add	fp, sp, #32
   13e5c:	sub	sp, sp, #20
   13e60:	ldr	r5, [r0, #4]
   13e64:	cmp	r5, #0
   13e68:	beq	14010 <argp_parse@@Base+0x195c>
   13e6c:	str	r1, [fp, #-48]	; 0xffffffd0
   13e70:	mov	r6, r0
   13e74:	ldr	r0, [r0, #8]
   13e78:	bl	111bc <strlen@plt>
   13e7c:	add	r3, r0, #8
   13e80:	bic	r3, r3, #7
   13e84:	sub	sp, sp, r3
   13e88:	mov	r8, sp
   13e8c:	str	r8, [fp, #-40]	; 0xffffffd8
   13e90:	ldr	r4, [r6]
   13e94:	movw	r7, #14976	; 0x3a80
   13e98:	movt	r7, #1
   13e9c:	ldr	r2, [r4, #20]
   13ea0:	sub	r3, fp, #40	; 0x28
   13ea4:	ldr	r2, [r2, #24]
   13ea8:	mov	r1, r7
   13eac:	mov	r0, r4
   13eb0:	bl	13d3c <argp_parse@@Base+0x1688>
   13eb4:	add	r4, r4, #28
   13eb8:	subs	r5, r5, #1
   13ebc:	bne	13e9c <argp_parse@@Base+0x17e8>
   13ec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13ec4:	cmp	r3, r8
   13ec8:	bhi	13f3c <argp_parse@@Base+0x1888>
   13ecc:	ldr	r4, [r6]
   13ed0:	ldr	r5, [r6, #4]
   13ed4:	cmp	r5, #0
   13ed8:	beq	14010 <argp_parse@@Base+0x195c>
   13edc:	movw	r7, #16904	; 0x4208
   13ee0:	movt	r7, #1
   13ee4:	ldr	r2, [r4, #20]
   13ee8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13eec:	ldr	r2, [r2, #24]
   13ef0:	mov	r1, r7
   13ef4:	mov	r0, r4
   13ef8:	bl	13d3c <argp_parse@@Base+0x1688>
   13efc:	add	r4, r4, #28
   13f00:	subs	r5, r5, #1
   13f04:	bne	13ee4 <argp_parse@@Base+0x1830>
   13f08:	ldr	r7, [r6]
   13f0c:	ldr	r8, [r6, #4]
   13f10:	cmp	r8, #0
   13f14:	beq	14010 <argp_parse@@Base+0x195c>
   13f18:	add	r7, r7, #28
   13f1c:	movw	sl, #36080	; 0x8cf0
   13f20:	movt	sl, #1
   13f24:	movw	r9, #36064	; 0x8ce0
   13f28:	movt	r9, #1
   13f2c:	movw	r3, #36092	; 0x8cfc
   13f30:	movt	r3, #1
   13f34:	str	r3, [fp, #-52]	; 0xffffffcc
   13f38:	b	13ff8 <argp_parse@@Base+0x1944>
   13f3c:	add	r2, r3, #1
   13f40:	str	r2, [fp, #-40]	; 0xffffffd8
   13f44:	mov	r2, #0
   13f48:	strb	r2, [r3]
   13f4c:	mov	r2, r8
   13f50:	movw	r1, #36056	; 0x8cd8
   13f54:	movt	r1, #1
   13f58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f5c:	bl	18230 <argp_error@@Base+0x1514>
   13f60:	b	13ecc <argp_parse@@Base+0x1818>
   13f64:	tst	r1, #16
   13f68:	bne	13f9c <argp_parse@@Base+0x18e8>
   13f6c:	ldr	r3, [r6, #8]
   13f70:	cmp	r3, #0
   13f74:	bne	13f88 <argp_parse@@Base+0x18d4>
   13f78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13f7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f80:	bl	18230 <argp_error@@Base+0x1514>
   13f84:	b	13f9c <argp_parse@@Base+0x18e8>
   13f88:	tst	r1, #1
   13f8c:	movne	r1, r9
   13f90:	moveq	r1, sl
   13f94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f98:	bl	18230 <argp_error@@Base+0x1514>
   13f9c:	add	r4, r4, #24
   13fa0:	subs	r5, r5, #1
   13fa4:	beq	13fec <argp_parse@@Base+0x1938>
   13fa8:	ldr	r2, [r4]
   13fac:	cmp	r2, #0
   13fb0:	beq	13f9c <argp_parse@@Base+0x18e8>
   13fb4:	ldr	r1, [r4, #12]
   13fb8:	and	r3, r1, #4
   13fbc:	cmp	r3, #0
   13fc0:	moveq	r6, r4
   13fc4:	tst	r1, #2
   13fc8:	bne	13f9c <argp_parse@@Base+0x18e8>
   13fcc:	ldr	r3, [r4, #8]
   13fd0:	ldr	r0, [r6, #12]
   13fd4:	orr	r1, r1, r0
   13fd8:	cmp	r3, #0
   13fdc:	beq	13f64 <argp_parse@@Base+0x18b0>
   13fe0:	tst	r1, #16
   13fe4:	beq	13f88 <argp_parse@@Base+0x18d4>
   13fe8:	b	13f9c <argp_parse@@Base+0x18e8>
   13fec:	add	r7, r7, #28
   13ff0:	subs	r8, r8, #1
   13ff4:	beq	14010 <argp_parse@@Base+0x195c>
   13ff8:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13ffc:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14000:	cmp	r5, #0
   14004:	beq	13fec <argp_parse@@Base+0x1938>
   14008:	mov	r6, r4
   1400c:	b	13fa8 <argp_parse@@Base+0x18f4>
   14010:	sub	sp, fp, #32
   14014:	ldrd	r4, [sp]
   14018:	ldrd	r6, [sp, #8]
   1401c:	ldrd	r8, [sp, #16]
   14020:	ldrd	sl, [sp, #24]
   14024:	add	sp, sp, #32
   14028:	pop	{pc}		; (ldr pc, [sp], #4)
   1402c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14030:	strd	r6, [sp, #8]
   14034:	str	r8, [sp, #16]
   14038:	str	lr, [sp, #20]
   1403c:	mov	r4, r0
   14040:	mov	r5, r1
   14044:	ldr	r3, [r0, #28]
   14048:	ldr	r2, [r0, #24]
   1404c:	sub	r3, r3, r2
   14050:	ldr	r2, [r0, #16]
   14054:	cmp	r3, r2
   14058:	bhi	14074 <argp_parse@@Base+0x19c0>
   1405c:	ldr	r3, [r4, #20]
   14060:	cmp	r3, #0
   14064:	subge	r5, r5, r3
   14068:	mov	r6, #32
   1406c:	mov	r7, #1
   14070:	b	14090 <argp_parse@@Base+0x19dc>
   14074:	bl	17bb8 <argp_error@@Base+0xe9c>
   14078:	b	1405c <argp_parse@@Base+0x19a8>
   1407c:	ldr	r3, [r4, #28]
   14080:	add	r2, r3, #1
   14084:	str	r2, [r4, #28]
   14088:	strb	r6, [r3]
   1408c:	sub	r5, r5, #1
   14090:	cmp	r5, #0
   14094:	ble	140c0 <argp_parse@@Base+0x1a0c>
   14098:	ldr	r2, [r4, #28]
   1409c:	ldr	r3, [r4, #32]
   140a0:	cmp	r2, r3
   140a4:	bcc	1407c <argp_parse@@Base+0x19c8>
   140a8:	mov	r1, r7
   140ac:	mov	r0, r4
   140b0:	bl	18130 <argp_error@@Base+0x1414>
   140b4:	cmp	r0, #0
   140b8:	bne	1407c <argp_parse@@Base+0x19c8>
   140bc:	b	1408c <argp_parse@@Base+0x19d8>
   140c0:	ldrd	r4, [sp]
   140c4:	ldrd	r6, [sp, #8]
   140c8:	ldr	r8, [sp, #16]
   140cc:	add	sp, sp, #20
   140d0:	pop	{pc}		; (ldr pc, [sp], #4)
   140d4:	strd	r4, [sp, #-16]!
   140d8:	str	r6, [sp, #8]
   140dc:	str	lr, [sp, #12]
   140e0:	ldr	r4, [r0, #12]
   140e4:	ands	r4, r4, #8
   140e8:	movne	r4, #0
   140ec:	bne	1411c <argp_parse@@Base+0x1a68>
   140f0:	ldr	r5, [r0, #4]
   140f4:	sub	r3, r5, #1
   140f8:	cmp	r3, #254	; 0xfe
   140fc:	bhi	1411c <argp_parse@@Base+0x1a68>
   14100:	bl	111a4 <__ctype_b_loc@plt>
   14104:	ldr	r2, [r0]
   14108:	lsl	r3, r5, #1
   1410c:	ldrh	r3, [r2, r3]
   14110:	and	r3, r3, #16384	; 0x4000
   14114:	cmp	r3, #0
   14118:	movne	r4, r5
   1411c:	mov	r0, r4
   14120:	ldrd	r4, [sp]
   14124:	ldr	r6, [sp, #8]
   14128:	add	sp, sp, #12
   1412c:	pop	{pc}		; (ldr pc, [sp], #4)
   14130:	strd	r4, [sp, #-16]!
   14134:	str	r6, [sp, #8]
   14138:	str	lr, [sp, #12]
   1413c:	mov	r4, r0
   14140:	mov	r5, r1
   14144:	ldr	r3, [r0, #28]
   14148:	ldr	r2, [r0, #24]
   1414c:	sub	r3, r3, r2
   14150:	ldr	r2, [r0, #16]
   14154:	cmp	r3, r2
   14158:	bhi	141a8 <argp_parse@@Base+0x1af4>
   1415c:	ldr	r3, [r4, #20]
   14160:	cmp	r3, #0
   14164:	addge	r5, r5, r3
   14168:	ldr	r3, [r4, #8]
   1416c:	cmp	r5, r3
   14170:	bcc	141c8 <argp_parse@@Base+0x1b14>
   14174:	ldr	r2, [r4, #28]
   14178:	ldr	r3, [r4, #32]
   1417c:	cmp	r2, r3
   14180:	bcs	141b0 <argp_parse@@Base+0x1afc>
   14184:	ldr	r3, [r4, #28]
   14188:	add	r2, r3, #1
   1418c:	str	r2, [r4, #28]
   14190:	mov	r2, #10
   14194:	strb	r2, [r3]
   14198:	ldrd	r4, [sp]
   1419c:	ldr	r6, [sp, #8]
   141a0:	add	sp, sp, #12
   141a4:	pop	{pc}		; (ldr pc, [sp], #4)
   141a8:	bl	17bb8 <argp_error@@Base+0xe9c>
   141ac:	b	1415c <argp_parse@@Base+0x1aa8>
   141b0:	mov	r1, #1
   141b4:	mov	r0, r4
   141b8:	bl	18130 <argp_error@@Base+0x1414>
   141bc:	cmp	r0, #0
   141c0:	bne	14184 <argp_parse@@Base+0x1ad0>
   141c4:	b	14198 <argp_parse@@Base+0x1ae4>
   141c8:	ldr	r2, [r4, #28]
   141cc:	ldr	r3, [r4, #32]
   141d0:	cmp	r2, r3
   141d4:	bcs	141f0 <argp_parse@@Base+0x1b3c>
   141d8:	ldr	r3, [r4, #28]
   141dc:	add	r2, r3, #1
   141e0:	str	r2, [r4, #28]
   141e4:	mov	r2, #32
   141e8:	strb	r2, [r3]
   141ec:	b	14198 <argp_parse@@Base+0x1ae4>
   141f0:	mov	r1, #1
   141f4:	mov	r0, r4
   141f8:	bl	18130 <argp_error@@Base+0x1414>
   141fc:	cmp	r0, #0
   14200:	bne	141d8 <argp_parse@@Base+0x1b24>
   14204:	b	14198 <argp_parse@@Base+0x1ae4>
   14208:	strd	r4, [sp, #-16]!
   1420c:	str	r6, [sp, #8]
   14210:	str	lr, [sp, #12]
   14214:	ldr	r5, [r0, #8]
   14218:	cmp	r5, #0
   1421c:	beq	14260 <argp_parse@@Base+0x1bac>
   14220:	ldr	r2, [r0, #12]
   14224:	ldr	r1, [r1, #12]
   14228:	orr	r2, r2, r1
   1422c:	tst	r2, #16
   14230:	bne	1426c <argp_parse@@Base+0x1bb8>
   14234:	mov	r6, r3
   14238:	mov	r4, r0
   1423c:	tst	r2, #1
   14240:	beq	14280 <argp_parse@@Base+0x1bcc>
   14244:	mov	r3, r5
   14248:	ldr	r2, [r0, #4]
   1424c:	movw	r1, #36100	; 0x8d04
   14250:	movt	r1, #1
   14254:	mov	r0, r6
   14258:	bl	18230 <argp_error@@Base+0x1514>
   1425c:	b	1426c <argp_parse@@Base+0x1bb8>
   14260:	ldr	r5, [r1, #8]
   14264:	cmp	r5, #0
   14268:	bne	14220 <argp_parse@@Base+0x1b6c>
   1426c:	mov	r0, #0
   14270:	ldrd	r4, [sp]
   14274:	ldr	r6, [sp, #8]
   14278:	add	sp, sp, #12
   1427c:	pop	{pc}		; (ldr pc, [sp], #4)
   14280:	mov	r0, r5
   14284:	bl	111bc <strlen@plt>
   14288:	add	r1, r0, #6
   1428c:	mov	r0, r6
   14290:	bl	14130 <argp_parse@@Base+0x1a7c>
   14294:	mov	r3, r5
   14298:	ldr	r2, [r4, #4]
   1429c:	movw	r1, #36112	; 0x8d10
   142a0:	movt	r1, #1
   142a4:	mov	r0, r6
   142a8:	bl	18230 <argp_error@@Base+0x1514>
   142ac:	b	1426c <argp_parse@@Base+0x1bb8>
   142b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   142b4:	strd	r6, [sp, #8]
   142b8:	strd	r8, [sp, #16]
   142bc:	strd	sl, [sp, #24]
   142c0:	str	lr, [sp, #32]
   142c4:	sub	sp, sp, #28
   142c8:	str	r1, [sp, #8]
   142cc:	mov	sl, r2
   142d0:	mov	r4, r3
   142d4:	ldr	r9, [sp, #64]	; 0x40
   142d8:	ldr	r6, [r2]
   142dc:	str	r6, [sp, #20]
   142e0:	ldr	r7, [r0, #16]
   142e4:	ldr	r2, [r0, #8]
   142e8:	mov	ip, r2
   142ec:	str	r2, [sp, #16]
   142f0:	mov	r3, r1
   142f4:	mov	r2, r0
   142f8:	mov	r1, #6
   142fc:	movt	r1, #512	; 0x200
   14300:	mov	r0, ip
   14304:	bl	13cdc <argp_parse@@Base+0x1628>
   14308:	cmp	r0, #0
   1430c:	str	r0, [sp, #12]
   14310:	beq	144a0 <argp_parse@@Base+0x1dec>
   14314:	mov	r1, #10
   14318:	bl	11060 <strchrnul@plt>
   1431c:	mov	r5, r0
   14320:	ldrb	r3, [r0]
   14324:	cmp	r3, #0
   14328:	beq	14470 <argp_parse@@Base+0x1dbc>
   1432c:	ldrb	fp, [r6]
   14330:	cmp	fp, #0
   14334:	ble	14468 <argp_parse@@Base+0x1db4>
   14338:	mov	r6, #0
   1433c:	add	r8, r0, #1
   14340:	mov	r1, #10
   14344:	mov	r0, r8
   14348:	bl	11060 <strchrnul@plt>
   1434c:	add	r6, r6, #1
   14350:	cmp	r6, fp
   14354:	bne	1433c <argp_parse@@Base+0x1c88>
   14358:	mov	r5, r0
   1435c:	ldr	r3, [sl]
   14360:	add	r3, r3, #1
   14364:	str	r3, [sl]
   14368:	mov	fp, #1
   1436c:	add	r1, r5, #1
   14370:	sub	r1, r1, r8
   14374:	mov	r0, r9
   14378:	bl	14130 <argp_parse@@Base+0x1a7c>
   1437c:	sub	r6, r5, r8
   14380:	ldr	r3, [r9, #28]
   14384:	add	r3, r3, r6
   14388:	ldr	r2, [r9, #32]
   1438c:	cmp	r2, r3
   14390:	bcs	143a8 <argp_parse@@Base+0x1cf4>
   14394:	mov	r1, r6
   14398:	mov	r0, r9
   1439c:	bl	18130 <argp_error@@Base+0x1414>
   143a0:	cmp	r0, #0
   143a4:	beq	143c4 <argp_parse@@Base+0x1d10>
   143a8:	mov	r2, r6
   143ac:	mov	r1, r8
   143b0:	ldr	r0, [r9, #28]
   143b4:	bl	11084 <memcpy@plt>
   143b8:	ldr	r3, [r9, #28]
   143bc:	add	r6, r3, r6
   143c0:	str	r6, [r9, #28]
   143c4:	ldr	r2, [sp, #16]
   143c8:	ldr	r3, [sp, #12]
   143cc:	cmp	r2, r3
   143d0:	bne	1447c <argp_parse@@Base+0x1dc8>
   143d4:	cmp	r7, #0
   143d8:	beq	14414 <argp_parse@@Base+0x1d60>
   143dc:	ldr	r0, [r7]
   143e0:	cmp	r0, #0
   143e4:	beq	14414 <argp_parse@@Base+0x1d60>
   143e8:	mov	r3, r4
   143ec:	str	r9, [sp]
   143f0:	mov	r2, sl
   143f4:	ldr	r1, [sp, #8]
   143f8:	bl	142b0 <argp_parse@@Base+0x1bfc>
   143fc:	clz	r3, r0
   14400:	lsr	r3, r3, #5
   14404:	ldr	r0, [r7, #16]!
   14408:	cmp	r0, #0
   1440c:	bne	143ec <argp_parse@@Base+0x1d38>
   14410:	mov	r4, r3
   14414:	cmp	r4, #0
   14418:	moveq	fp, #0
   1441c:	cmp	fp, #0
   14420:	beq	14444 <argp_parse@@Base+0x1d90>
   14424:	ldrb	r3, [r5]
   14428:	cmp	r3, #0
   1442c:	beq	14488 <argp_parse@@Base+0x1dd4>
   14430:	ldr	r2, [sp, #20]
   14434:	ldrb	r3, [r2]
   14438:	add	r3, r3, #1
   1443c:	strb	r3, [r2]
   14440:	mov	r4, #0
   14444:	clz	r0, r4
   14448:	lsr	r0, r0, #5
   1444c:	add	sp, sp, #28
   14450:	ldrd	r4, [sp]
   14454:	ldrd	r6, [sp, #8]
   14458:	ldrd	r8, [sp, #16]
   1445c:	ldrd	sl, [sp, #24]
   14460:	add	sp, sp, #32
   14464:	pop	{pc}		; (ldr pc, [sp], #4)
   14468:	ldr	r8, [sp, #12]
   1446c:	b	1435c <argp_parse@@Base+0x1ca8>
   14470:	ldr	r8, [sp, #12]
   14474:	mov	fp, #0
   14478:	b	1436c <argp_parse@@Base+0x1cb8>
   1447c:	mov	r0, r3
   14480:	bl	1338c <argp_parse@@Base+0xcd8>
   14484:	b	143d4 <argp_parse@@Base+0x1d20>
   14488:	ldr	r2, [sp, #20]
   1448c:	ldrb	r3, [r2]
   14490:	cmp	r3, #0
   14494:	movne	r3, #0
   14498:	strbne	r3, [r2]
   1449c:	b	14444 <argp_parse@@Base+0x1d90>
   144a0:	cmp	r7, #0
   144a4:	beq	14444 <argp_parse@@Base+0x1d90>
   144a8:	ldr	r5, [sp, #12]
   144ac:	mov	fp, #0
   144b0:	b	143dc <argp_parse@@Base+0x1d28>
   144b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   144b8:	strd	r6, [sp, #8]
   144bc:	str	r8, [sp, #16]
   144c0:	str	lr, [sp, #20]
   144c4:	mov	r6, r0
   144c8:	mov	r4, r2
   144cc:	ldr	r3, [r2, #16]
   144d0:	mov	r2, r1
   144d4:	mov	r1, #3
   144d8:	movt	r1, #512	; 0x200
   144dc:	bl	13cdc <argp_parse@@Base+0x1628>
   144e0:	subs	r5, r0, #0
   144e4:	beq	145f8 <argp_parse@@Base+0x1f44>
   144e8:	ldrb	r3, [r5]
   144ec:	cmp	r3, #0
   144f0:	beq	145ec <argp_parse@@Base+0x1f38>
   144f4:	ldr	r3, [r4, #8]
   144f8:	ldr	r3, [r3]
   144fc:	cmp	r3, #0
   14500:	beq	1452c <argp_parse@@Base+0x1e78>
   14504:	ldr	r7, [r4, #4]
   14508:	ldr	r2, [r7, #28]
   1450c:	ldr	r3, [r7, #32]
   14510:	cmp	r2, r3
   14514:	bcs	1461c <argp_parse@@Base+0x1f68>
   14518:	ldr	r3, [r7, #28]
   1451c:	add	r2, r3, #1
   14520:	str	r2, [r7, #28]
   14524:	mov	r2, #10
   14528:	strb	r2, [r3]
   1452c:	movw	r8, #41468	; 0xa1fc
   14530:	movt	r8, #2
   14534:	ldr	r1, [r8, #24]
   14538:	ldr	r0, [r4, #4]
   1453c:	bl	1402c <argp_parse@@Base+0x1978>
   14540:	ldr	r7, [r4, #4]
   14544:	ldr	r8, [r8, #24]
   14548:	ldr	r3, [r7, #28]
   1454c:	ldr	r2, [r7, #24]
   14550:	sub	r3, r3, r2
   14554:	ldr	r2, [r7, #16]
   14558:	cmp	r3, r2
   1455c:	bhi	14634 <argp_parse@@Base+0x1f80>
   14560:	str	r8, [r7, #4]
   14564:	ldr	r7, [r4, #4]
   14568:	movw	r3, #41468	; 0xa1fc
   1456c:	movt	r3, #2
   14570:	ldr	r8, [r3, #24]
   14574:	ldr	r3, [r7, #28]
   14578:	ldr	r2, [r7, #24]
   1457c:	sub	r3, r3, r2
   14580:	ldr	r2, [r7, #16]
   14584:	cmp	r3, r2
   14588:	bhi	14640 <argp_parse@@Base+0x1f8c>
   1458c:	str	r8, [r7, #12]
   14590:	mov	r0, r5
   14594:	bl	111bc <strlen@plt>
   14598:	subs	r7, r0, #0
   1459c:	bne	1464c <argp_parse@@Base+0x1f98>
   145a0:	ldr	r7, [r4, #4]
   145a4:	ldr	r3, [r7, #28]
   145a8:	ldr	r2, [r7, #24]
   145ac:	sub	r3, r3, r2
   145b0:	ldr	r2, [r7, #16]
   145b4:	cmp	r3, r2
   145b8:	bhi	14698 <argp_parse@@Base+0x1fe4>
   145bc:	mov	r3, #0
   145c0:	str	r3, [r7, #4]
   145c4:	ldr	r7, [r4, #4]
   145c8:	ldr	r2, [r7, #28]
   145cc:	ldr	r3, [r7, #32]
   145d0:	cmp	r2, r3
   145d4:	bcs	146a4 <argp_parse@@Base+0x1ff0>
   145d8:	ldr	r3, [r7, #28]
   145dc:	add	r2, r3, #1
   145e0:	str	r2, [r7, #28]
   145e4:	mov	r2, #10
   145e8:	strb	r2, [r3]
   145ec:	ldr	r3, [r4, #8]
   145f0:	mov	r2, #1
   145f4:	str	r2, [r3, #4]
   145f8:	cmp	r6, r5
   145fc:	beq	14608 <argp_parse@@Base+0x1f54>
   14600:	mov	r0, r5
   14604:	bl	1338c <argp_parse@@Base+0xcd8>
   14608:	ldrd	r4, [sp]
   1460c:	ldrd	r6, [sp, #8]
   14610:	ldr	r8, [sp, #16]
   14614:	add	sp, sp, #20
   14618:	pop	{pc}		; (ldr pc, [sp], #4)
   1461c:	mov	r1, #1
   14620:	mov	r0, r7
   14624:	bl	18130 <argp_error@@Base+0x1414>
   14628:	cmp	r0, #0
   1462c:	bne	14518 <argp_parse@@Base+0x1e64>
   14630:	b	1452c <argp_parse@@Base+0x1e78>
   14634:	mov	r0, r7
   14638:	bl	17bb8 <argp_error@@Base+0xe9c>
   1463c:	b	14560 <argp_parse@@Base+0x1eac>
   14640:	mov	r0, r7
   14644:	bl	17bb8 <argp_error@@Base+0xe9c>
   14648:	b	1458c <argp_parse@@Base+0x1ed8>
   1464c:	ldr	r8, [r4, #4]
   14650:	ldr	r3, [r8, #28]
   14654:	add	r3, r3, r7
   14658:	ldr	r2, [r8, #32]
   1465c:	cmp	r2, r3
   14660:	bcs	14678 <argp_parse@@Base+0x1fc4>
   14664:	mov	r1, r7
   14668:	mov	r0, r8
   1466c:	bl	18130 <argp_error@@Base+0x1414>
   14670:	cmp	r0, #0
   14674:	beq	145a0 <argp_parse@@Base+0x1eec>
   14678:	mov	r2, r7
   1467c:	mov	r1, r5
   14680:	ldr	r0, [r8, #28]
   14684:	bl	11084 <memcpy@plt>
   14688:	ldr	r3, [r8, #28]
   1468c:	add	r7, r3, r7
   14690:	str	r7, [r8, #28]
   14694:	b	145a0 <argp_parse@@Base+0x1eec>
   14698:	mov	r0, r7
   1469c:	bl	17bb8 <argp_error@@Base+0xe9c>
   146a0:	b	145bc <argp_parse@@Base+0x1f08>
   146a4:	mov	r1, #1
   146a8:	mov	r0, r7
   146ac:	bl	18130 <argp_error@@Base+0x1414>
   146b0:	cmp	r0, #0
   146b4:	bne	145d8 <argp_parse@@Base+0x1f24>
   146b8:	b	145ec <argp_parse@@Base+0x1f38>
   146bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   146c0:	strd	r6, [sp, #8]
   146c4:	str	r8, [sp, #16]
   146c8:	str	lr, [sp, #20]
   146cc:	mov	r6, r0
   146d0:	mov	r4, r1
   146d4:	ldr	r3, [r1, #12]
   146d8:	cmp	r3, #0
   146dc:	beq	14810 <argp_parse@@Base+0x215c>
   146e0:	ldr	r3, [r1, #8]
   146e4:	ldr	r7, [r3]
   146e8:	ldr	r2, [r1]
   146ec:	ldr	r5, [r2, #16]
   146f0:	ldr	r3, [r3, #4]
   146f4:	cmp	r3, #0
   146f8:	cmpne	r7, #0
   146fc:	bne	147b0 <argp_parse@@Base+0x20fc>
   14700:	cmp	r5, #0
   14704:	beq	14788 <argp_parse@@Base+0x20d4>
   14708:	ldr	r0, [r5]
   1470c:	cmp	r0, #0
   14710:	beq	14788 <argp_parse@@Base+0x20d4>
   14714:	ldrb	r3, [r0]
   14718:	cmp	r3, #0
   1471c:	beq	14788 <argp_parse@@Base+0x20d4>
   14720:	cmp	r7, #0
   14724:	beq	14754 <argp_parse@@Base+0x20a0>
   14728:	ldr	r3, [r7, #16]
   1472c:	cmp	r3, r5
   14730:	beq	14788 <argp_parse@@Base+0x20d4>
   14734:	cmp	r3, #0
   14738:	beq	14754 <argp_parse@@Base+0x20a0>
   1473c:	ldr	r3, [r3, #12]
   14740:	cmp	r3, #0
   14744:	cmpne	r5, r3
   14748:	bne	1473c <argp_parse@@Base+0x2088>
   1474c:	cmp	r5, r3
   14750:	beq	14788 <argp_parse@@Base+0x20d4>
   14754:	ldr	r3, [r4, #4]
   14758:	ldr	r7, [r3, #12]
   1475c:	mov	r2, r4
   14760:	ldr	r1, [r5, #16]
   14764:	bl	144b4 <argp_parse@@Base+0x1e00>
   14768:	ldr	r5, [r4, #4]
   1476c:	ldr	r3, [r5, #28]
   14770:	ldr	r2, [r5, #24]
   14774:	sub	r3, r3, r2
   14778:	ldr	r2, [r5, #16]
   1477c:	cmp	r3, r2
   14780:	bhi	14804 <argp_parse@@Base+0x2150>
   14784:	str	r7, [r5, #12]
   14788:	mov	r3, #0
   1478c:	str	r3, [r4, #12]
   14790:	mov	r1, r6
   14794:	ldr	r0, [r4, #4]
   14798:	bl	1402c <argp_parse@@Base+0x1978>
   1479c:	ldrd	r4, [sp]
   147a0:	ldrd	r6, [sp, #8]
   147a4:	ldr	r8, [sp, #16]
   147a8:	add	sp, sp, #20
   147ac:	pop	{pc}		; (ldr pc, [sp], #4)
   147b0:	ldr	r2, [r2, #12]
   147b4:	ldr	r3, [r7, #12]
   147b8:	cmp	r2, r3
   147bc:	beq	14700 <argp_parse@@Base+0x204c>
   147c0:	ldr	r8, [r1, #4]
   147c4:	ldr	r2, [r8, #28]
   147c8:	ldr	r3, [r8, #32]
   147cc:	cmp	r2, r3
   147d0:	bcs	147ec <argp_parse@@Base+0x2138>
   147d4:	ldr	r3, [r8, #28]
   147d8:	add	r2, r3, #1
   147dc:	str	r2, [r8, #28]
   147e0:	mov	r2, #10
   147e4:	strb	r2, [r3]
   147e8:	b	14700 <argp_parse@@Base+0x204c>
   147ec:	mov	r1, #1
   147f0:	mov	r0, r8
   147f4:	bl	18130 <argp_error@@Base+0x1414>
   147f8:	cmp	r0, #0
   147fc:	bne	147d4 <argp_parse@@Base+0x2120>
   14800:	b	14700 <argp_parse@@Base+0x204c>
   14804:	mov	r0, r5
   14808:	bl	17bb8 <argp_error@@Base+0xe9c>
   1480c:	b	14784 <argp_parse@@Base+0x20d0>
   14810:	ldr	r5, [r1, #4]
   14814:	ldr	r3, [r5, #28]
   14818:	add	r3, r3, #2
   1481c:	ldr	r2, [r5, #32]
   14820:	cmp	r2, r3
   14824:	bcs	1483c <argp_parse@@Base+0x2188>
   14828:	mov	r1, #2
   1482c:	mov	r0, r5
   14830:	bl	18130 <argp_error@@Base+0x1414>
   14834:	cmp	r0, #0
   14838:	beq	14790 <argp_parse@@Base+0x20dc>
   1483c:	ldr	r2, [r5, #28]
   14840:	movw	r3, #36124	; 0x8d1c
   14844:	movt	r3, #1
   14848:	ldrh	r3, [r3]
   1484c:	strh	r3, [r2]
   14850:	ldr	r3, [r5, #28]
   14854:	add	r3, r3, #2
   14858:	str	r3, [r5, #28]
   1485c:	b	14790 <argp_parse@@Base+0x20dc>
   14860:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14864:	strd	r6, [sp, #8]
   14868:	strd	r8, [sp, #16]
   1486c:	strd	sl, [sp, #24]
   14870:	str	lr, [sp, #32]
   14874:	sub	sp, sp, #28
   14878:	mov	r8, r0
   1487c:	str	r1, [sp, #12]
   14880:	str	r2, [sp, #8]
   14884:	mov	fp, r3
   14888:	ldr	sl, [sp, #64]	; 0x40
   1488c:	ldr	r4, [sp, #68]	; 0x44
   14890:	ldr	r6, [r0, #12]
   14894:	ldr	r9, [r0, #16]
   14898:	cmp	r6, #0
   1489c:	beq	14d18 <argp_parse@@Base+0x2664>
   148a0:	mov	r5, r2
   148a4:	mov	r1, #11
   148a8:	mov	r0, r6
   148ac:	bl	111c8 <strchr@plt>
   148b0:	cmp	r5, #0
   148b4:	beq	148f4 <argp_parse@@Base+0x2240>
   148b8:	cmp	r0, #0
   148bc:	addne	r6, r0, #1
   148c0:	beq	14d60 <argp_parse@@Base+0x26ac>
   148c4:	ldr	r3, [r8, #20]
   148c8:	cmp	r3, #0
   148cc:	beq	14d68 <argp_parse@@Base+0x26b4>
   148d0:	ldr	r1, [sp, #12]
   148d4:	mov	r0, r8
   148d8:	bl	13208 <argp_parse@@Base+0xb54>
   148dc:	str	r0, [sp, #16]
   148e0:	ldr	r3, [r8, #20]
   148e4:	mov	r7, #0
   148e8:	mov	r0, #2
   148ec:	movt	r0, #512	; 0x200
   148f0:	b	14940 <argp_parse@@Base+0x228c>
   148f4:	cmp	r0, #0
   148f8:	beq	14d84 <argp_parse@@Base+0x26d0>
   148fc:	sub	r7, r0, r6
   14900:	ldr	r3, [r8, #20]
   14904:	cmp	r3, #0
   14908:	beq	14b28 <argp_parse@@Base+0x2474>
   1490c:	cmp	r7, #0
   14910:	beq	14924 <argp_parse@@Base+0x2270>
   14914:	mov	r1, r7
   14918:	mov	r0, r6
   1491c:	bl	11078 <strndup@plt>
   14920:	mov	r6, r0
   14924:	ldr	r1, [sp, #12]
   14928:	mov	r0, r8
   1492c:	bl	13208 <argp_parse@@Base+0xb54>
   14930:	str	r0, [sp, #16]
   14934:	ldr	r3, [r8, #20]
   14938:	mov	r0, #1
   1493c:	movt	r0, #512	; 0x200
   14940:	ldr	r2, [sp, #16]
   14944:	mov	r1, r6
   14948:	blx	r3
   1494c:	subs	r5, r0, #0
   14950:	beq	14c34 <argp_parse@@Base+0x2580>
   14954:	cmp	fp, #0
   14958:	bne	14b38 <argp_parse@@Base+0x2484>
   1495c:	cmp	r5, r6
   14960:	movne	r3, #0
   14964:	moveq	r3, #1
   14968:	cmp	r7, #0
   1496c:	moveq	r3, #0
   14970:	cmp	r3, #0
   14974:	beq	14b78 <argp_parse@@Base+0x24c4>
   14978:	ldr	r3, [r4, #28]
   1497c:	add	r3, r3, r7
   14980:	ldr	r2, [r4, #32]
   14984:	cmp	r2, r3
   14988:	bcs	149a0 <argp_parse@@Base+0x22ec>
   1498c:	mov	r1, r7
   14990:	mov	r0, r4
   14994:	bl	18130 <argp_error@@Base+0x1414>
   14998:	cmp	r0, #0
   1499c:	beq	149bc <argp_parse@@Base+0x2308>
   149a0:	mov	r2, r7
   149a4:	mov	r1, r6
   149a8:	ldr	r0, [r4, #28]
   149ac:	bl	11084 <memcpy@plt>
   149b0:	ldr	r3, [r4, #28]
   149b4:	add	r3, r3, r7
   149b8:	str	r3, [r4, #28]
   149bc:	ldr	r3, [r4, #28]
   149c0:	ldr	r2, [r4, #24]
   149c4:	sub	r3, r3, r2
   149c8:	ldr	r2, [r4, #16]
   149cc:	cmp	r3, r2
   149d0:	bhi	14bd8 <argp_parse@@Base+0x2524>
   149d4:	ldr	r3, [r4, #20]
   149d8:	bic	r3, r3, r3, asr #31
   149dc:	ldr	r2, [r4, #4]
   149e0:	cmp	r2, r3
   149e4:	bcc	14be4 <argp_parse@@Base+0x2530>
   149e8:	cmp	r5, r6
   149ec:	moveq	r5, #1
   149f0:	bne	14c24 <argp_parse@@Base+0x2570>
   149f4:	cmp	r6, #0
   149f8:	cmpne	r7, #0
   149fc:	beq	14a14 <argp_parse@@Base+0x2360>
   14a00:	ldr	r3, [r8, #20]
   14a04:	cmp	r3, #0
   14a08:	beq	14a98 <argp_parse@@Base+0x23e4>
   14a0c:	mov	r0, r6
   14a10:	bl	1338c <argp_parse@@Base+0xcd8>
   14a14:	ldr	r3, [sp, #8]
   14a18:	cmp	r3, #0
   14a1c:	beq	14a98 <argp_parse@@Base+0x23e4>
   14a20:	ldr	r3, [r8, #20]
   14a24:	cmp	r3, #0
   14a28:	beq	14a98 <argp_parse@@Base+0x23e4>
   14a2c:	ldr	r2, [sp, #16]
   14a30:	mov	r1, #0
   14a34:	mov	r0, #4
   14a38:	movt	r0, #512	; 0x200
   14a3c:	blx	r3
   14a40:	subs	r6, r0, #0
   14a44:	beq	14a98 <argp_parse@@Base+0x23e4>
   14a48:	orrs	r3, fp, r5
   14a4c:	bne	14c3c <argp_parse@@Base+0x2588>
   14a50:	mov	r0, r6
   14a54:	bl	111bc <strlen@plt>
   14a58:	subs	r5, r0, #0
   14a5c:	bne	14c7c <argp_parse@@Base+0x25c8>
   14a60:	mov	r0, r6
   14a64:	bl	1338c <argp_parse@@Base+0xcd8>
   14a68:	ldr	r3, [r4, #28]
   14a6c:	ldr	r2, [r4, #24]
   14a70:	sub	r3, r3, r2
   14a74:	ldr	r2, [r4, #16]
   14a78:	cmp	r3, r2
   14a7c:	bhi	14cc4 <argp_parse@@Base+0x2610>
   14a80:	ldr	r3, [r4, #20]
   14a84:	bic	r3, r3, r3, asr #31
   14a88:	ldr	r2, [r4, #4]
   14a8c:	cmp	r2, r3
   14a90:	movcs	r5, #1
   14a94:	bcc	14cd0 <argp_parse@@Base+0x261c>
   14a98:	cmp	r9, #0
   14a9c:	beq	14b08 <argp_parse@@Base+0x2454>
   14aa0:	ldr	r0, [r9]
   14aa4:	cmp	r0, #0
   14aa8:	beq	14b08 <argp_parse@@Base+0x2454>
   14aac:	clz	r6, sl
   14ab0:	lsr	r6, r6, #5
   14ab4:	cmp	sl, #0
   14ab8:	cmpne	r5, #0
   14abc:	bne	14b08 <argp_parse@@Base+0x2454>
   14ac0:	orrs	r3, fp, r5
   14ac4:	str	r4, [sp, #4]
   14ac8:	str	sl, [sp]
   14acc:	movne	r3, #1
   14ad0:	moveq	r3, #0
   14ad4:	ldr	r2, [sp, #8]
   14ad8:	ldr	r1, [sp, #12]
   14adc:	bl	14860 <argp_parse@@Base+0x21ac>
   14ae0:	orr	r5, r5, r0
   14ae4:	ldr	r0, [r9, #16]
   14ae8:	cmp	r0, #0
   14aec:	beq	14b08 <argp_parse@@Base+0x2454>
   14af0:	add	r9, r9, #16
   14af4:	cmp	r5, #0
   14af8:	movne	r3, r6
   14afc:	moveq	r3, #1
   14b00:	cmp	r3, #0
   14b04:	bne	14ac0 <argp_parse@@Base+0x240c>
   14b08:	mov	r0, r5
   14b0c:	add	sp, sp, #28
   14b10:	ldrd	r4, [sp]
   14b14:	ldrd	r6, [sp, #8]
   14b18:	ldrd	r8, [sp, #16]
   14b1c:	ldrd	sl, [sp, #24]
   14b20:	add	sp, sp, #32
   14b24:	pop	{pc}		; (ldr pc, [sp], #4)
   14b28:	mov	r5, r6
   14b2c:	mov	r3, #0
   14b30:	str	r3, [sp, #16]
   14b34:	b	14954 <argp_parse@@Base+0x22a0>
   14b38:	ldr	r2, [r4, #28]
   14b3c:	ldr	r3, [r4, #32]
   14b40:	cmp	r2, r3
   14b44:	bcs	14b60 <argp_parse@@Base+0x24ac>
   14b48:	ldr	r3, [r4, #28]
   14b4c:	add	r2, r3, #1
   14b50:	str	r2, [r4, #28]
   14b54:	mov	r2, #10
   14b58:	strb	r2, [r3]
   14b5c:	b	1495c <argp_parse@@Base+0x22a8>
   14b60:	mov	r1, #1
   14b64:	mov	r0, r4
   14b68:	bl	18130 <argp_error@@Base+0x1414>
   14b6c:	cmp	r0, #0
   14b70:	bne	14b48 <argp_parse@@Base+0x2494>
   14b74:	b	1495c <argp_parse@@Base+0x22a8>
   14b78:	mov	r0, r5
   14b7c:	bl	111bc <strlen@plt>
   14b80:	subs	r3, r0, #0
   14b84:	str	r3, [sp, #20]
   14b88:	beq	149bc <argp_parse@@Base+0x2308>
   14b8c:	ldr	r3, [r4, #28]
   14b90:	mov	r1, r0
   14b94:	add	r3, r3, r0
   14b98:	ldr	r2, [r4, #32]
   14b9c:	cmp	r2, r3
   14ba0:	bcs	14bb4 <argp_parse@@Base+0x2500>
   14ba4:	mov	r0, r4
   14ba8:	bl	18130 <argp_error@@Base+0x1414>
   14bac:	cmp	r0, #0
   14bb0:	beq	149bc <argp_parse@@Base+0x2308>
   14bb4:	ldr	r2, [sp, #20]
   14bb8:	mov	r1, r5
   14bbc:	ldr	r0, [r4, #28]
   14bc0:	bl	11084 <memcpy@plt>
   14bc4:	ldr	r3, [r4, #28]
   14bc8:	ldr	r2, [sp, #20]
   14bcc:	add	r3, r3, r2
   14bd0:	str	r3, [r4, #28]
   14bd4:	b	149bc <argp_parse@@Base+0x2308>
   14bd8:	mov	r0, r4
   14bdc:	bl	17bb8 <argp_error@@Base+0xe9c>
   14be0:	b	149d4 <argp_parse@@Base+0x2320>
   14be4:	ldr	r2, [r4, #28]
   14be8:	ldr	r3, [r4, #32]
   14bec:	cmp	r2, r3
   14bf0:	bcs	14c0c <argp_parse@@Base+0x2558>
   14bf4:	ldr	r3, [r4, #28]
   14bf8:	add	r2, r3, #1
   14bfc:	str	r2, [r4, #28]
   14c00:	mov	r2, #10
   14c04:	strb	r2, [r3]
   14c08:	b	149e8 <argp_parse@@Base+0x2334>
   14c0c:	mov	r1, #1
   14c10:	mov	r0, r4
   14c14:	bl	18130 <argp_error@@Base+0x1414>
   14c18:	cmp	r0, #0
   14c1c:	bne	14bf4 <argp_parse@@Base+0x2540>
   14c20:	b	149e8 <argp_parse@@Base+0x2334>
   14c24:	mov	r0, r5
   14c28:	bl	1338c <argp_parse@@Base+0xcd8>
   14c2c:	mov	r5, #1
   14c30:	b	149f4 <argp_parse@@Base+0x2340>
   14c34:	mov	r5, #0
   14c38:	b	149f4 <argp_parse@@Base+0x2340>
   14c3c:	ldr	r2, [r4, #28]
   14c40:	ldr	r3, [r4, #32]
   14c44:	cmp	r2, r3
   14c48:	bcs	14c64 <argp_parse@@Base+0x25b0>
   14c4c:	ldr	r3, [r4, #28]
   14c50:	add	r2, r3, #1
   14c54:	str	r2, [r4, #28]
   14c58:	mov	r2, #10
   14c5c:	strb	r2, [r3]
   14c60:	b	14a50 <argp_parse@@Base+0x239c>
   14c64:	mov	r1, #1
   14c68:	mov	r0, r4
   14c6c:	bl	18130 <argp_error@@Base+0x1414>
   14c70:	cmp	r0, #0
   14c74:	bne	14c4c <argp_parse@@Base+0x2598>
   14c78:	b	14a50 <argp_parse@@Base+0x239c>
   14c7c:	ldr	r3, [r4, #28]
   14c80:	add	r3, r3, r5
   14c84:	ldr	r2, [r4, #32]
   14c88:	cmp	r2, r3
   14c8c:	bcs	14ca4 <argp_parse@@Base+0x25f0>
   14c90:	mov	r1, r5
   14c94:	mov	r0, r4
   14c98:	bl	18130 <argp_error@@Base+0x1414>
   14c9c:	cmp	r0, #0
   14ca0:	beq	14a60 <argp_parse@@Base+0x23ac>
   14ca4:	mov	r2, r5
   14ca8:	mov	r1, r6
   14cac:	ldr	r0, [r4, #28]
   14cb0:	bl	11084 <memcpy@plt>
   14cb4:	ldr	r3, [r4, #28]
   14cb8:	add	r5, r3, r5
   14cbc:	str	r5, [r4, #28]
   14cc0:	b	14a60 <argp_parse@@Base+0x23ac>
   14cc4:	mov	r0, r4
   14cc8:	bl	17bb8 <argp_error@@Base+0xe9c>
   14ccc:	b	14a80 <argp_parse@@Base+0x23cc>
   14cd0:	ldr	r2, [r4, #28]
   14cd4:	ldr	r3, [r4, #32]
   14cd8:	cmp	r2, r3
   14cdc:	bcs	14cfc <argp_parse@@Base+0x2648>
   14ce0:	ldr	r3, [r4, #28]
   14ce4:	add	r2, r3, #1
   14ce8:	str	r2, [r4, #28]
   14cec:	mov	r2, #10
   14cf0:	strb	r2, [r3]
   14cf4:	mov	r5, #1
   14cf8:	b	14a98 <argp_parse@@Base+0x23e4>
   14cfc:	mov	r1, #1
   14d00:	mov	r0, r4
   14d04:	bl	18130 <argp_error@@Base+0x1414>
   14d08:	cmp	r0, #0
   14d0c:	bne	14ce0 <argp_parse@@Base+0x262c>
   14d10:	mov	r5, #1
   14d14:	b	14a98 <argp_parse@@Base+0x23e4>
   14d18:	ldr	r3, [r0, #20]
   14d1c:	cmp	r3, #0
   14d20:	moveq	r5, r6
   14d24:	beq	14d6c <argp_parse@@Base+0x26b8>
   14d28:	ldr	r1, [sp, #12]
   14d2c:	mov	r0, r8
   14d30:	bl	13208 <argp_parse@@Base+0xb54>
   14d34:	str	r0, [sp, #16]
   14d38:	ldr	r3, [r8, #20]
   14d3c:	mov	r7, #0
   14d40:	mov	r0, #2
   14d44:	movt	r0, #512	; 0x200
   14d48:	mov	r2, #1
   14d4c:	movt	r2, #512	; 0x200
   14d50:	ldr	r1, [sp, #8]
   14d54:	cmp	r1, r7
   14d58:	moveq	r0, r2
   14d5c:	b	14940 <argp_parse@@Base+0x228c>
   14d60:	mov	r6, r0
   14d64:	b	148c4 <argp_parse@@Base+0x2210>
   14d68:	mov	r5, r6
   14d6c:	cmp	r5, #0
   14d70:	streq	r5, [sp, #16]
   14d74:	beq	14a14 <argp_parse@@Base+0x2360>
   14d78:	mov	r7, #0
   14d7c:	str	r7, [sp, #16]
   14d80:	b	14954 <argp_parse@@Base+0x22a0>
   14d84:	ldr	r3, [r8, #20]
   14d88:	cmp	r3, #0
   14d8c:	moveq	r5, r6
   14d90:	beq	14d6c <argp_parse@@Base+0x26b8>
   14d94:	ldr	r1, [sp, #12]
   14d98:	mov	r0, r8
   14d9c:	bl	13208 <argp_parse@@Base+0xb54>
   14da0:	str	r0, [sp, #16]
   14da4:	ldr	r3, [r8, #20]
   14da8:	mov	r7, #0
   14dac:	mov	r0, #1
   14db0:	movt	r0, #512	; 0x200
   14db4:	b	14940 <argp_parse@@Base+0x228c>
   14db8:	ldr	r3, [r0, #12]
   14dbc:	ldr	r2, [r1, #12]
   14dc0:	cmp	r3, r2
   14dc4:	beq	14e34 <argp_parse@@Base+0x2780>
   14dc8:	strd	r4, [sp, #-16]!
   14dcc:	str	r6, [sp, #8]
   14dd0:	str	lr, [sp, #12]
   14dd4:	mov	r5, r1
   14dd8:	mov	r4, r0
   14ddc:	mov	r1, r2
   14de0:	mov	r0, r3
   14de4:	bl	14db8 <argp_parse@@Base+0x2704>
   14de8:	subs	r3, r0, #0
   14dec:	bne	14e20 <argp_parse@@Base+0x276c>
   14df0:	ldr	r0, [r4, #8]
   14df4:	ldr	r3, [r5, #8]
   14df8:	mvn	r2, r3
   14dfc:	lsr	r2, r2, #31
   14e00:	cmp	r2, r0, lsr #31
   14e04:	subne	r3, r0, r3
   14e08:	subeq	r3, r3, r0
   14e0c:	cmp	r3, #0
   14e10:	bne	14e20 <argp_parse@@Base+0x276c>
   14e14:	ldr	r3, [r5, #4]
   14e18:	ldr	r0, [r4, #4]
   14e1c:	sub	r3, r3, r0
   14e20:	mov	r0, r3
   14e24:	ldrd	r4, [sp]
   14e28:	ldr	r6, [sp, #8]
   14e2c:	add	sp, sp, #12
   14e30:	pop	{pc}		; (ldr pc, [sp], #4)
   14e34:	ldr	r2, [r0, #8]
   14e38:	ldr	r3, [r1, #8]
   14e3c:	mvn	ip, r3
   14e40:	lsr	ip, ip, #31
   14e44:	cmp	ip, r2, lsr #31
   14e48:	subne	r3, r2, r3
   14e4c:	subeq	r3, r3, r2
   14e50:	cmp	r3, #0
   14e54:	bne	14e64 <argp_parse@@Base+0x27b0>
   14e58:	ldr	r3, [r1, #4]
   14e5c:	ldr	r0, [r0, #4]
   14e60:	sub	r3, r3, r0
   14e64:	mov	r0, r3
   14e68:	bx	lr
   14e6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14e70:	strd	r6, [sp, #8]
   14e74:	str	r8, [sp, #16]
   14e78:	str	lr, [sp, #20]
   14e7c:	sub	sp, sp, #8
   14e80:	ldr	lr, [r0, #16]
   14e84:	cmp	lr, #0
   14e88:	movne	r3, lr
   14e8c:	bne	14e9c <argp_parse@@Base+0x27e8>
   14e90:	ldr	ip, [r0, #12]
   14e94:	b	14eac <argp_parse@@Base+0x27f8>
   14e98:	mov	r3, r2
   14e9c:	ldr	r2, [r3, #12]
   14ea0:	cmp	r2, #0
   14ea4:	bne	14e98 <argp_parse@@Base+0x27e4>
   14ea8:	ldr	ip, [r3, #8]
   14eac:	ldr	r5, [r1, #16]
   14eb0:	cmp	r5, #0
   14eb4:	movne	r3, r5
   14eb8:	bne	14ec8 <argp_parse@@Base+0x2814>
   14ebc:	ldr	r4, [r1, #12]
   14ec0:	b	14ed8 <argp_parse@@Base+0x2824>
   14ec4:	mov	r3, r2
   14ec8:	ldr	r2, [r3, #12]
   14ecc:	cmp	r2, #0
   14ed0:	bne	14ec4 <argp_parse@@Base+0x2810>
   14ed4:	ldr	r4, [r3, #8]
   14ed8:	mvn	r3, r4
   14edc:	lsr	r3, r3, #31
   14ee0:	cmp	r3, ip, lsr #31
   14ee4:	subne	r4, ip, r4
   14ee8:	subeq	r4, r4, ip
   14eec:	cmp	r4, #0
   14ef0:	bne	15030 <argp_parse@@Base+0x297c>
   14ef4:	adds	r4, r5, #0
   14ef8:	movne	r4, #1
   14efc:	cmp	lr, #0
   14f00:	rsbeq	r4, r4, #0
   14f04:	rsbne	r4, r4, #1
   14f08:	cmp	r4, #0
   14f0c:	bne	15030 <argp_parse@@Base+0x297c>
   14f10:	mov	r7, r1
   14f14:	mov	r6, r0
   14f18:	cmp	lr, #0
   14f1c:	beq	14f9c <argp_parse@@Base+0x28e8>
   14f20:	ldr	r1, [lr, #20]
   14f24:	ldr	r2, [r5, #20]
   14f28:	cmp	r1, r2
   14f2c:	ble	14f58 <argp_parse@@Base+0x28a4>
   14f30:	ldr	lr, [lr, #12]
   14f34:	ldr	r3, [lr, #20]
   14f38:	cmp	r2, r3
   14f3c:	blt	14f30 <argp_parse@@Base+0x287c>
   14f40:	mov	r1, r5
   14f44:	mov	r0, lr
   14f48:	bl	14db8 <argp_parse@@Base+0x2704>
   14f4c:	subs	r4, r0, #0
   14f50:	moveq	r4, #1
   14f54:	b	15030 <argp_parse@@Base+0x297c>
   14f58:	cmp	r1, r2
   14f5c:	bge	14f88 <argp_parse@@Base+0x28d4>
   14f60:	ldr	r5, [r5, #12]
   14f64:	ldr	r3, [r5, #20]
   14f68:	cmp	r1, r3
   14f6c:	blt	14f60 <argp_parse@@Base+0x28ac>
   14f70:	mov	r1, r5
   14f74:	mov	r0, lr
   14f78:	bl	14db8 <argp_parse@@Base+0x2704>
   14f7c:	subs	r4, r0, #0
   14f80:	mvneq	r4, #0
   14f84:	b	15030 <argp_parse@@Base+0x297c>
   14f88:	mov	r1, r5
   14f8c:	mov	r0, lr
   14f90:	bl	14db8 <argp_parse@@Base+0x2704>
   14f94:	subs	r4, r0, #0
   14f98:	bne	15030 <argp_parse@@Base+0x297c>
   14f9c:	ldr	r3, [r6, #12]
   14fa0:	ldr	r4, [r7, #12]
   14fa4:	mvn	r2, r4
   14fa8:	lsr	r2, r2, #31
   14fac:	cmp	r2, r3, lsr #31
   14fb0:	subne	r4, r3, r4
   14fb4:	subeq	r4, r4, r3
   14fb8:	cmp	r4, #0
   14fbc:	bne	15030 <argp_parse@@Base+0x297c>
   14fc0:	mov	r0, r6
   14fc4:	bl	13a30 <argp_parse@@Base+0x137c>
   14fc8:	mov	r5, r0
   14fcc:	str	r0, [sp]
   14fd0:	mov	r0, r7
   14fd4:	bl	13a30 <argp_parse@@Base+0x137c>
   14fd8:	str	r0, [sp, #4]
   14fdc:	ldr	r3, [r6]
   14fe0:	ldr	r0, [r3, #12]
   14fe4:	ubfx	r0, r0, #3, #1
   14fe8:	cmp	r5, #0
   14fec:	moveq	r0, #0
   14ff0:	cmp	r0, #0
   14ff4:	bne	1504c <argp_parse@@Base+0x2998>
   14ff8:	ldr	r3, [r7]
   14ffc:	ldr	r3, [r3, #12]
   15000:	tst	r3, #8
   15004:	beq	15084 <argp_parse@@Base+0x29d0>
   15008:	ldr	r3, [sp, #4]
   1500c:	cmp	r3, #0
   15010:	beq	15084 <argp_parse@@Base+0x29d0>
   15014:	add	r0, sp, #4
   15018:	bl	13acc <argp_parse@@Base+0x1418>
   1501c:	adds	r3, r0, #0
   15020:	movne	r3, #1
   15024:	mov	r0, r4
   15028:	subs	r4, r0, r3
   1502c:	beq	15084 <argp_parse@@Base+0x29d0>
   15030:	mov	r0, r4
   15034:	add	sp, sp, #8
   15038:	ldrd	r4, [sp]
   1503c:	ldrd	r6, [sp, #8]
   15040:	ldr	r8, [sp, #16]
   15044:	add	sp, sp, #20
   15048:	pop	{pc}		; (ldr pc, [sp], #4)
   1504c:	mov	r0, sp
   15050:	bl	13acc <argp_parse@@Base+0x1418>
   15054:	adds	r0, r0, #0
   15058:	movne	r0, #1
   1505c:	ldr	r3, [r7]
   15060:	ldr	r3, [r3, #12]
   15064:	ands	r3, r3, #8
   15068:	beq	15028 <argp_parse@@Base+0x2974>
   1506c:	ldr	r3, [sp, #4]
   15070:	cmp	r3, #0
   15074:	moveq	r3, r4
   15078:	beq	15028 <argp_parse@@Base+0x2974>
   1507c:	mov	r4, r0
   15080:	b	15014 <argp_parse@@Base+0x2960>
   15084:	ldr	r2, [r6, #20]
   15088:	movw	r4, #16596	; 0x40d4
   1508c:	movt	r4, #1
   15090:	mov	r3, #0
   15094:	ldr	r2, [r2, #24]
   15098:	mov	r1, r4
   1509c:	mov	r0, r6
   150a0:	bl	13d3c <argp_parse@@Base+0x1688>
   150a4:	mov	r5, r0
   150a8:	uxtb	r8, r0
   150ac:	ldr	r2, [r7, #20]
   150b0:	mov	r3, #0
   150b4:	ldr	r2, [r2, #24]
   150b8:	mov	r1, r4
   150bc:	mov	r0, r7
   150c0:	bl	13d3c <argp_parse@@Base+0x1688>
   150c4:	uxtb	r7, r0
   150c8:	cmp	r8, #0
   150cc:	movne	r5, r8
   150d0:	bne	150e4 <argp_parse@@Base+0x2a30>
   150d4:	ldr	r3, [sp]
   150d8:	cmp	r3, #0
   150dc:	ldrbne	r5, [r3]
   150e0:	moveq	r5, #0
   150e4:	cmp	r7, #0
   150e8:	uxtbne	r6, r0
   150ec:	bne	15100 <argp_parse@@Base+0x2a4c>
   150f0:	ldr	r3, [sp, #4]
   150f4:	cmp	r3, #0
   150f8:	ldrbne	r6, [r3]
   150fc:	moveq	r6, #0
   15100:	bl	11168 <__ctype_tolower_loc@plt>
   15104:	ldr	r3, [r0]
   15108:	ldr	r4, [r3, r5, lsl #2]
   1510c:	ldr	r3, [r3, r6, lsl #2]
   15110:	subs	r4, r4, r3
   15114:	bne	15030 <argp_parse@@Base+0x297c>
   15118:	subs	r4, r6, r5
   1511c:	bne	15030 <argp_parse@@Base+0x297c>
   15120:	adds	r4, r7, #0
   15124:	movne	r4, #1
   15128:	cmp	r8, #0
   1512c:	rsbeq	r4, r4, #0
   15130:	rsbne	r4, r4, #1
   15134:	cmp	r4, #0
   15138:	bne	15030 <argp_parse@@Base+0x297c>
   1513c:	cmp	r8, #0
   15140:	bne	15030 <argp_parse@@Base+0x297c>
   15144:	ldr	r0, [sp]
   15148:	ldr	r1, [sp, #4]
   1514c:	adds	r4, r1, #0
   15150:	movne	r4, #1
   15154:	cmp	r0, #0
   15158:	rsbeq	r4, r4, #0
   1515c:	rsbne	r4, r4, #1
   15160:	cmp	r4, #0
   15164:	bne	15030 <argp_parse@@Base+0x297c>
   15168:	cmp	r0, #0
   1516c:	beq	15030 <argp_parse@@Base+0x297c>
   15170:	bl	110cc <strcasecmp@plt>
   15174:	mov	r4, r0
   15178:	b	15030 <argp_parse@@Base+0x297c>
   1517c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15180:	strd	r6, [sp, #8]
   15184:	strd	r8, [sp, #16]
   15188:	strd	sl, [sp, #24]
   1518c:	str	lr, [sp, #32]
   15190:	sub	sp, sp, #52	; 0x34
   15194:	str	r0, [sp, #12]
   15198:	str	r1, [sp, #4]
   1519c:	ldr	fp, [r0, #16]
   151a0:	ldr	r4, [r0]
   151a4:	mov	r0, #16
   151a8:	bl	139f4 <argp_parse@@Base+0x1340>
   151ac:	subs	sl, r0, #0
   151b0:	beq	151e0 <argp_parse@@Base+0x2b2c>
   151b4:	mov	r3, #0
   151b8:	str	r3, [sl, #4]
   151bc:	str	r3, [sl, #12]
   151c0:	cmp	r4, r3
   151c4:	beq	153ec <argp_parse@@Base+0x2d38>
   151c8:	ldr	r3, [r4, #12]
   151cc:	tst	r3, #4
   151d0:	bne	15200 <argp_parse@@Base+0x2b4c>
   151d4:	add	r5, r4, #24
   151d8:	mov	r6, #0
   151dc:	b	15224 <argp_parse@@Base+0x2b70>
   151e0:	movw	r3, #35888	; 0x8c30
   151e4:	movt	r3, #1
   151e8:	movw	r2, #450	; 0x1c2
   151ec:	movw	r1, #36128	; 0x8d20
   151f0:	movt	r1, #1
   151f4:	movw	r0, #36140	; 0x8d2c
   151f8:	movt	r0, #1
   151fc:	bl	112dc <__assert_fail@plt>
   15200:	movw	r3, #35888	; 0x8c30
   15204:	movt	r3, #1
   15208:	mov	r2, #460	; 0x1cc
   1520c:	movw	r1, #36128	; 0x8d20
   15210:	movt	r1, #1
   15214:	movw	r0, #36144	; 0x8d30
   15218:	movt	r0, #1
   1521c:	bl	112dc <__assert_fail@plt>
   15220:	add	r5, r5, #24
   15224:	mov	r3, r5
   15228:	ldr	r2, [r5, #-20]	; 0xffffffec
   1522c:	cmp	r2, #0
   15230:	bne	15240 <argp_parse@@Base+0x2b8c>
   15234:	ldr	r2, [r5, #-24]	; 0xffffffe8
   15238:	cmp	r2, #0
   1523c:	beq	15290 <argp_parse@@Base+0x2bdc>
   15240:	ldr	r2, [r3, #-12]
   15244:	tst	r2, #4
   15248:	bne	15258 <argp_parse@@Base+0x2ba4>
   1524c:	ldr	r2, [sl, #4]
   15250:	add	r2, r2, #1
   15254:	str	r2, [sl, #4]
   15258:	ldr	r2, [r3, #-12]
   1525c:	tst	r2, #8
   15260:	bne	15220 <argp_parse@@Base+0x2b6c>
   15264:	ldr	r7, [r3, #-20]	; 0xffffffec
   15268:	sub	r3, r7, #1
   1526c:	cmp	r3, #254	; 0xfe
   15270:	bhi	15220 <argp_parse@@Base+0x2b6c>
   15274:	bl	111a4 <__ctype_b_loc@plt>
   15278:	ldr	r3, [r0]
   1527c:	lsl	r7, r7, #1
   15280:	ldrh	r3, [r3, r7]
   15284:	tst	r3, #16384	; 0x4000
   15288:	addne	r6, r6, #1
   1528c:	b	15220 <argp_parse@@Base+0x2b6c>
   15290:	ldr	r2, [r5, #-8]
   15294:	cmp	r2, #0
   15298:	bne	15240 <argp_parse@@Base+0x2b8c>
   1529c:	ldr	r9, [r5, #-4]
   152a0:	cmp	r9, #0
   152a4:	bne	15240 <argp_parse@@Base+0x2b8c>
   152a8:	ldr	r0, [sl, #4]
   152ac:	rsb	r0, r0, r0, lsl #3
   152b0:	lsl	r0, r0, #2
   152b4:	bl	139f4 <argp_parse@@Base+0x1340>
   152b8:	str	r0, [sl]
   152bc:	add	r0, r6, #1
   152c0:	bl	139f4 <argp_parse@@Base+0x1340>
   152c4:	mov	r5, r0
   152c8:	str	r0, [sl, #8]
   152cc:	ldr	r7, [sl]
   152d0:	cmp	r0, #0
   152d4:	cmpne	r7, #0
   152d8:	beq	15300 <argp_parse@@Base+0x2c4c>
   152dc:	movw	r3, #37449	; 0x9249
   152e0:	movt	r3, #2340	; 0x924
   152e4:	ldr	r2, [sl, #4]
   152e8:	cmp	r2, r3
   152ec:	bhi	15320 <argp_parse@@Base+0x2c6c>
   152f0:	add	r7, r7, #28
   152f4:	str	fp, [sp, #8]
   152f8:	ldr	fp, [sp, #12]
   152fc:	b	1536c <argp_parse@@Base+0x2cb8>
   15300:	movw	r3, #35888	; 0x8c30
   15304:	movt	r3, #1
   15308:	movw	r2, #474	; 0x1da
   1530c:	movw	r1, #36128	; 0x8d20
   15310:	movt	r1, #1
   15314:	movw	r0, #36160	; 0x8d40
   15318:	movt	r0, #1
   1531c:	bl	112dc <__assert_fail@plt>
   15320:	movw	r3, #35888	; 0x8c30
   15324:	movt	r3, #1
   15328:	mov	r2, #476	; 0x1dc
   1532c:	movw	r1, #36128	; 0x8d20
   15330:	movt	r1, #1
   15334:	movw	r0, #36196	; 0x8d64
   15338:	movt	r0, #1
   1533c:	bl	112dc <__assert_fail@plt>
   15340:	ldr	r3, [r4, #4]
   15344:	cmp	r3, #0
   15348:	addeq	r9, r9, #1
   1534c:	b	153b4 <argp_parse@@Base+0x2d00>
   15350:	ldr	r3, [r4, #16]
   15354:	cmp	r3, #0
   15358:	bne	1578c <argp_parse@@Base+0x30d8>
   1535c:	ldr	r3, [r4, #20]
   15360:	cmp	r3, #0
   15364:	bne	1578c <argp_parse@@Base+0x30d8>
   15368:	add	r7, r7, #28
   1536c:	ldr	r3, [r4, #4]
   15370:	cmp	r3, #0
   15374:	bne	15384 <argp_parse@@Base+0x2cd0>
   15378:	ldr	r3, [r4]
   1537c:	cmp	r3, #0
   15380:	beq	153c8 <argp_parse@@Base+0x2d14>
   15384:	mov	r8, r7
   15388:	str	r4, [r7, #-28]	; 0xffffffe4
   1538c:	mov	r3, #0
   15390:	str	r3, [r7, #-24]	; 0xffffffe8
   15394:	str	r5, [r7, #-20]	; 0xffffffec
   15398:	ldr	r3, [r4, #20]
   1539c:	cmp	r3, #0
   153a0:	movne	r9, r3
   153a4:	bne	153b4 <argp_parse@@Base+0x2d00>
   153a8:	ldr	r3, [r4]
   153ac:	cmp	r3, #0
   153b0:	beq	15340 <argp_parse@@Base+0x2c8c>
   153b4:	str	r9, [r8, #-16]
   153b8:	ldr	r3, [sp, #4]
   153bc:	str	r3, [r8, #-12]
   153c0:	str	fp, [r8, #-8]
   153c4:	b	15798 <argp_parse@@Base+0x30e4>
   153c8:	ldr	r3, [r4, #16]
   153cc:	cmp	r3, #0
   153d0:	bne	15384 <argp_parse@@Base+0x2cd0>
   153d4:	ldr	r3, [r4, #20]
   153d8:	cmp	r3, #0
   153dc:	bne	15384 <argp_parse@@Base+0x2cd0>
   153e0:	ldr	fp, [sp, #8]
   153e4:	mov	r3, #0
   153e8:	strb	r3, [r5]
   153ec:	cmp	fp, #0
   153f0:	beq	15810 <argp_parse@@Base+0x315c>
   153f4:	ldr	r3, [fp]
   153f8:	cmp	r3, #0
   153fc:	beq	15810 <argp_parse@@Base+0x315c>
   15400:	movw	r3, #37449	; 0x9249
   15404:	movt	r3, #2340	; 0x924
   15408:	str	r3, [sp, #32]
   1540c:	b	15480 <argp_parse@@Base+0x2dcc>
   15410:	ldr	r1, [sp, #4]
   15414:	b	154f8 <argp_parse@@Base+0x2e44>
   15418:	mov	r3, r2
   1541c:	ldr	r2, [r3, #24]
   15420:	cmp	r2, #0
   15424:	bne	15418 <argp_parse@@Base+0x2d64>
   15428:	add	r3, r3, #24
   1542c:	ldr	r2, [r5, #12]
   15430:	str	r2, [r3]
   15434:	mov	r1, #0
   15438:	str	r1, [r5, #12]
   1543c:	ldr	r3, [r5, #4]
   15440:	cmp	r3, r1
   15444:	beq	1546c <argp_parse@@Base+0x2db8>
   15448:	ldr	r2, [sl, #4]
   1544c:	cmp	r2, r1
   15450:	bne	15518 <argp_parse@@Base+0x2e64>
   15454:	str	r3, [sl, #4]
   15458:	ldr	r3, [r5]
   1545c:	str	r3, [sl]
   15460:	ldr	r3, [r5, #8]
   15464:	str	r3, [sl, #8]
   15468:	str	r1, [r5, #4]
   1546c:	mov	r0, r5
   15470:	bl	13b54 <argp_parse@@Base+0x14a0>
   15474:	ldr	r3, [fp, #16]!
   15478:	cmp	r3, #0
   1547c:	beq	15810 <argp_parse@@Base+0x315c>
   15480:	mov	r5, fp
   15484:	ldr	r6, [fp, #12]
   15488:	cmp	r6, #0
   1548c:	bne	1549c <argp_parse@@Base+0x2de8>
   15490:	ldr	r3, [fp, #8]
   15494:	cmp	r3, #0
   15498:	beq	15410 <argp_parse@@Base+0x2d5c>
   1549c:	ldr	r7, [r5, #8]
   154a0:	ldr	r8, [sp, #12]
   154a4:	ldr	r4, [r8, #16]
   154a8:	mov	r0, #28
   154ac:	bl	139f4 <argp_parse@@Base+0x1340>
   154b0:	subs	r1, r0, #0
   154b4:	beq	154f8 <argp_parse@@Base+0x2e44>
   154b8:	str	r6, [r1, #8]
   154bc:	str	r7, [r1]
   154c0:	sub	r4, r5, r4
   154c4:	asr	r4, r4, #4
   154c8:	str	r4, [r1, #4]
   154cc:	ldr	r3, [sp, #4]
   154d0:	str	r3, [r1, #12]
   154d4:	str	r8, [r1, #16]
   154d8:	cmp	r3, #0
   154dc:	ldrne	r3, [r3, #20]
   154e0:	addne	r3, r3, #1
   154e4:	moveq	r3, #0
   154e8:	str	r3, [r1, #20]
   154ec:	ldr	r3, [sl, #12]
   154f0:	str	r3, [r1, #24]
   154f4:	str	r1, [sl, #12]
   154f8:	ldr	r0, [r5]
   154fc:	bl	1517c <argp_parse@@Base+0x2ac8>
   15500:	mov	r5, r0
   15504:	ldr	r3, [sl, #12]
   15508:	cmp	r3, #0
   1550c:	bne	1541c <argp_parse@@Base+0x2d68>
   15510:	add	r3, sl, #12
   15514:	b	1542c <argp_parse@@Base+0x2d78>
   15518:	add	r3, r3, r2
   1551c:	str	r3, [sp, #24]
   15520:	rsb	r0, r3, r3, lsl #3
   15524:	lsl	r0, r0, #2
   15528:	bl	139f4 <argp_parse@@Base+0x1340>
   1552c:	mov	r4, r0
   15530:	str	r0, [sp, #20]
   15534:	ldr	r0, [sl, #8]
   15538:	bl	111bc <strlen@plt>
   1553c:	mov	r7, r0
   15540:	ldr	r0, [r5, #8]
   15544:	bl	111bc <strlen@plt>
   15548:	add	r0, r7, r0
   1554c:	add	r0, r0, #1
   15550:	bl	139f4 <argp_parse@@Base+0x1340>
   15554:	mov	r9, r0
   15558:	cmp	r4, #0
   1555c:	cmpne	r0, #0
   15560:	beq	1562c <argp_parse@@Base+0x2f78>
   15564:	ldr	r3, [sp, #24]
   15568:	ldr	r2, [sp, #32]
   1556c:	cmp	r3, r2
   15570:	bhi	15648 <argp_parse@@Base+0x2f94>
   15574:	ldr	r1, [sl]
   15578:	str	r1, [sp, #28]
   1557c:	ldr	r4, [sl, #4]
   15580:	rsb	r8, r4, r4, lsl #3
   15584:	lsl	r8, r8, #2
   15588:	mov	r2, r8
   1558c:	ldr	r0, [sp, #20]
   15590:	bl	1118c <mempcpy@plt>
   15594:	ldr	r3, [r5, #4]
   15598:	str	r3, [sp, #16]
   1559c:	rsb	r2, r3, r3, lsl #3
   155a0:	lsl	r2, r2, #2
   155a4:	ldr	r1, [r5]
   155a8:	bl	11084 <memcpy@plt>
   155ac:	ldr	r6, [sl, #8]
   155b0:	mov	r2, r7
   155b4:	mov	r1, r6
   155b8:	mov	r0, r9
   155bc:	bl	11084 <memcpy@plt>
   155c0:	cmp	r4, #0
   155c4:	beq	15664 <argp_parse@@Base+0x2fb0>
   155c8:	ldr	r2, [sp, #20]
   155cc:	ldr	r3, [r2, #8]
   155d0:	sub	r3, r3, r6
   155d4:	add	r3, r9, r3
   155d8:	str	r3, [r2, #8]
   155dc:	add	r2, r2, #28
   155e0:	subs	r4, r4, #1
   155e4:	bne	155cc <argp_parse@@Base+0x2f18>
   155e8:	ldr	r3, [sp, #20]
   155ec:	add	r4, r3, r8
   155f0:	add	r3, r9, r7
   155f4:	str	r3, [sp, #8]
   155f8:	ldr	r1, [r5, #8]
   155fc:	ldr	r8, [sp, #16]
   15600:	cmp	r8, #0
   15604:	beq	15708 <argp_parse@@Base+0x3054>
   15608:	add	r4, r4, #28
   1560c:	sub	r2, r3, #1
   15610:	str	r2, [sp, #16]
   15614:	str	r5, [sp, #36]	; 0x24
   15618:	str	fp, [sp, #40]	; 0x28
   1561c:	mov	fp, r3
   15620:	str	sl, [sp, #44]	; 0x2c
   15624:	mov	sl, r1
   15628:	b	156b0 <argp_parse@@Base+0x2ffc>
   1562c:	ldr	r3, [pc, #508]	; 15830 <argp_parse@@Base+0x317c>
   15630:	movw	r2, #970	; 0x3ca
   15634:	movw	r1, #36128	; 0x8d20
   15638:	movt	r1, #1
   1563c:	movw	r0, #36256	; 0x8da0
   15640:	movt	r0, #1
   15644:	bl	112dc <__assert_fail@plt>
   15648:	ldr	r3, [pc, #480]	; 15830 <argp_parse@@Base+0x317c>
   1564c:	mov	r2, #972	; 0x3cc
   15650:	movw	r1, #36128	; 0x8d20
   15654:	movt	r1, #1
   15658:	movw	r0, #36284	; 0x8dbc
   1565c:	movt	r0, #1
   15660:	bl	112dc <__assert_fail@plt>
   15664:	ldr	r4, [sp, #20]
   15668:	b	155f0 <argp_parse@@Base+0x2f3c>
   1566c:	ldr	r2, [sp, #8]
   15670:	cmp	r9, r2
   15674:	bcs	15710 <argp_parse@@Base+0x305c>
   15678:	ldrb	r2, [r9]
   1567c:	cmp	r2, r3
   15680:	beq	15714 <argp_parse@@Base+0x3060>
   15684:	mov	r2, r9
   15688:	ldr	r1, [sp, #16]
   1568c:	cmp	r1, r2
   15690:	beq	15710 <argp_parse@@Base+0x305c>
   15694:	ldrb	r1, [r2, #1]!
   15698:	cmp	r1, r3
   1569c:	bne	15688 <argp_parse@@Base+0x2fd4>
   156a0:	b	15714 <argp_parse@@Base+0x3060>
   156a4:	add	r4, r4, #28
   156a8:	subs	r8, r8, #1
   156ac:	beq	156c8 <argp_parse@@Base+0x3014>
   156b0:	str	fp, [r4, #-20]	; 0xffffffec
   156b4:	ldr	r5, [r4, #-24]	; 0xffffffe8
   156b8:	ldr	r6, [r4, #-28]	; 0xffffffe4
   156bc:	cmp	r5, #0
   156c0:	bne	15734 <argp_parse@@Base+0x3080>
   156c4:	b	156a4 <argp_parse@@Base+0x2ff0>
   156c8:	ldr	r5, [sp, #36]	; 0x24
   156cc:	mov	r3, fp
   156d0:	ldr	fp, [sp, #40]	; 0x28
   156d4:	ldr	sl, [sp, #44]	; 0x2c
   156d8:	mov	r2, #0
   156dc:	strb	r2, [r3]
   156e0:	ldr	r0, [sp, #28]
   156e4:	bl	1338c <argp_parse@@Base+0xcd8>
   156e8:	ldr	r0, [sl, #8]
   156ec:	bl	1338c <argp_parse@@Base+0xcd8>
   156f0:	ldr	r3, [sp, #20]
   156f4:	str	r3, [sl]
   156f8:	ldr	r3, [sp, #24]
   156fc:	str	r3, [sl, #4]
   15700:	str	r9, [sl, #8]
   15704:	b	1546c <argp_parse@@Base+0x2db8>
   15708:	ldr	r3, [sp, #8]
   1570c:	b	156d8 <argp_parse@@Base+0x3024>
   15710:	strb	r3, [fp], #1
   15714:	add	sl, sl, #1
   15718:	b	15728 <argp_parse@@Base+0x3074>
   1571c:	ldrb	r3, [sl]
   15720:	cmp	r3, r7
   15724:	beq	1566c <argp_parse@@Base+0x2fb8>
   15728:	add	r6, r6, #24
   1572c:	subs	r5, r5, #1
   15730:	beq	156a4 <argp_parse@@Base+0x2ff0>
   15734:	ldr	r3, [r6, #12]
   15738:	tst	r3, #8
   1573c:	bne	15728 <argp_parse@@Base+0x3074>
   15740:	ldr	r7, [r6, #4]
   15744:	sub	r3, r7, #1
   15748:	cmp	r3, #254	; 0xfe
   1574c:	bhi	15728 <argp_parse@@Base+0x3074>
   15750:	bl	111a4 <__ctype_b_loc@plt>
   15754:	ldr	r2, [r0]
   15758:	lsl	r3, r7, #1
   1575c:	ldrh	r3, [r2, r3]
   15760:	tst	r3, #16384	; 0x4000
   15764:	bne	1571c <argp_parse@@Base+0x3068>
   15768:	b	15728 <argp_parse@@Base+0x3074>
   1576c:	strb	r6, [r5], #1
   15770:	add	r4, r4, #24
   15774:	ldr	r3, [r4, #4]
   15778:	cmp	r3, #0
   1577c:	bne	1578c <argp_parse@@Base+0x30d8>
   15780:	ldr	r3, [r4]
   15784:	cmp	r3, #0
   15788:	beq	15350 <argp_parse@@Base+0x2c9c>
   1578c:	ldr	r3, [r4, #12]
   15790:	tst	r3, #4
   15794:	beq	15368 <argp_parse@@Base+0x2cb4>
   15798:	ldr	r3, [r8, #-24]	; 0xffffffe8
   1579c:	add	r3, r3, #1
   157a0:	str	r3, [r8, #-24]	; 0xffffffe8
   157a4:	ldr	r3, [r4, #12]
   157a8:	tst	r3, #8
   157ac:	bne	15770 <argp_parse@@Base+0x30bc>
   157b0:	ldr	r6, [r4, #4]
   157b4:	sub	r3, r6, #1
   157b8:	cmp	r3, #254	; 0xfe
   157bc:	bhi	15770 <argp_parse@@Base+0x30bc>
   157c0:	bl	111a4 <__ctype_b_loc@plt>
   157c4:	ldr	r2, [r0]
   157c8:	lsl	r3, r6, #1
   157cc:	ldrh	r3, [r2, r3]
   157d0:	tst	r3, #16384	; 0x4000
   157d4:	beq	15770 <argp_parse@@Base+0x30bc>
   157d8:	uxtb	r6, r6
   157dc:	ldr	r3, [sl, #8]
   157e0:	cmp	r3, r5
   157e4:	bcs	1576c <argp_parse@@Base+0x30b8>
   157e8:	ldrb	r2, [r3]
   157ec:	cmp	r2, r6
   157f0:	beq	15770 <argp_parse@@Base+0x30bc>
   157f4:	sub	r2, r5, #1
   157f8:	cmp	r3, r2
   157fc:	beq	1576c <argp_parse@@Base+0x30b8>
   15800:	ldrb	r1, [r3, #1]!
   15804:	cmp	r1, r6
   15808:	bne	157f8 <argp_parse@@Base+0x3144>
   1580c:	b	15770 <argp_parse@@Base+0x30bc>
   15810:	mov	r0, sl
   15814:	add	sp, sp, #52	; 0x34
   15818:	ldrd	r4, [sp]
   1581c:	ldrd	r6, [sp, #8]
   15820:	ldrd	r8, [sp, #16]
   15824:	ldrd	sl, [sp, #24]
   15828:	add	sp, sp, #32
   1582c:	pop	{pc}		; (ldr pc, [sp], #4)
   15830:	andeq	r8, r1, ip, lsr ip

00015834 <argp_failure@@Base>:
   15834:	push	{r3}		; (str r3, [sp, #-4]!)
   15838:	strd	r4, [sp, #-20]!	; 0xffffffec
   1583c:	strd	r6, [sp, #8]
   15840:	str	lr, [sp, #16]
   15844:	sub	sp, sp, #200	; 0xc8
   15848:	mov	r7, r1
   1584c:	mov	r6, r2
   15850:	subs	r5, r0, #0
   15854:	beq	159b0 <argp_failure@@Base+0x17c>
   15858:	ldr	r3, [r5, #16]
   1585c:	tst	r3, #2
   15860:	bne	15994 <argp_failure@@Base+0x160>
   15864:	ldr	r4, [r5, #44]	; 0x2c
   15868:	cmp	r4, #0
   1586c:	beq	15994 <argp_failure@@Base+0x160>
   15870:	mov	r0, r4
   15874:	bl	11294 <flockfile@plt>
   15878:	ldr	r0, [r5, #40]	; 0x28
   1587c:	mov	r1, r4
   15880:	bl	10fe8 <fputs_unlocked@plt>
   15884:	ldr	r3, [sp, #220]	; 0xdc
   15888:	cmp	r3, #0
   1588c:	beq	158e8 <argp_failure@@Base+0xb4>
   15890:	add	r3, sp, #224	; 0xe0
   15894:	str	r3, [sp]
   15898:	ldr	r3, [r4, #20]
   1589c:	ldr	r2, [r4, #24]
   158a0:	cmp	r3, r2
   158a4:	addcc	r2, r3, #1
   158a8:	strcc	r2, [r4, #20]
   158ac:	movcc	r2, #58	; 0x3a
   158b0:	strbcc	r2, [r3]
   158b4:	bcs	159dc <argp_failure@@Base+0x1a8>
   158b8:	ldr	r3, [r4, #20]
   158bc:	ldr	r2, [r4, #24]
   158c0:	cmp	r3, r2
   158c4:	addcc	r2, r3, #1
   158c8:	strcc	r2, [r4, #20]
   158cc:	movcc	r2, #32
   158d0:	strbcc	r2, [r3]
   158d4:	bcs	159ec <argp_failure@@Base+0x1b8>
   158d8:	ldr	r2, [sp]
   158dc:	ldr	r1, [sp, #220]	; 0xdc
   158e0:	mov	r0, r4
   158e4:	bl	11270 <vfprintf@plt>
   158e8:	cmp	r6, #0
   158ec:	beq	15950 <argp_failure@@Base+0x11c>
   158f0:	ldr	r3, [r4, #20]
   158f4:	ldr	r2, [r4, #24]
   158f8:	cmp	r3, r2
   158fc:	addcc	r2, r3, #1
   15900:	strcc	r2, [r4, #20]
   15904:	movcc	r2, #58	; 0x3a
   15908:	strbcc	r2, [r3]
   1590c:	bcs	159fc <argp_failure@@Base+0x1c8>
   15910:	ldr	r3, [r4, #20]
   15914:	ldr	r2, [r4, #24]
   15918:	cmp	r3, r2
   1591c:	addcc	r2, r3, #1
   15920:	strcc	r2, [r4, #20]
   15924:	movcc	r2, #32
   15928:	strbcc	r2, [r3]
   1592c:	bcs	15a0c <argp_failure@@Base+0x1d8>
   15930:	mov	r2, #200	; 0xc8
   15934:	mov	r1, sp
   15938:	mov	r0, r6
   1593c:	bl	11204 <strerror_r@plt>
   15940:	cmp	r0, #0
   15944:	beq	15a1c <argp_failure@@Base+0x1e8>
   15948:	mov	r1, r4
   1594c:	bl	10fe8 <fputs_unlocked@plt>
   15950:	ldr	r3, [r4, #20]
   15954:	ldr	r2, [r4, #24]
   15958:	cmp	r3, r2
   1595c:	addcc	r2, r3, #1
   15960:	strcc	r2, [r4, #20]
   15964:	movcc	r2, #10
   15968:	strbcc	r2, [r3]
   1596c:	bcs	15a38 <argp_failure@@Base+0x204>
   15970:	mov	r0, r4
   15974:	bl	110d8 <funlockfile@plt>
   15978:	cmp	r7, #0
   1597c:	beq	15994 <argp_failure@@Base+0x160>
   15980:	cmp	r5, #0
   15984:	beq	15a48 <argp_failure@@Base+0x214>
   15988:	ldr	r3, [r5, #16]
   1598c:	tst	r3, #32
   15990:	beq	15a48 <argp_failure@@Base+0x214>
   15994:	add	sp, sp, #200	; 0xc8
   15998:	ldrd	r4, [sp]
   1599c:	ldrd	r6, [sp, #8]
   159a0:	ldr	lr, [sp, #16]
   159a4:	add	sp, sp, #20
   159a8:	add	sp, sp, #4
   159ac:	bx	lr
   159b0:	movw	r3, #41536	; 0xa240
   159b4:	movt	r3, #2
   159b8:	ldr	r4, [r3]
   159bc:	cmp	r4, #0
   159c0:	beq	15994 <argp_failure@@Base+0x160>
   159c4:	mov	r0, r4
   159c8:	bl	11294 <flockfile@plt>
   159cc:	movw	r3, #41528	; 0xa238
   159d0:	movt	r3, #2
   159d4:	ldr	r0, [r3]
   159d8:	b	1587c <argp_failure@@Base+0x48>
   159dc:	mov	r1, #58	; 0x3a
   159e0:	mov	r0, r4
   159e4:	bl	11240 <__overflow@plt>
   159e8:	b	158b8 <argp_failure@@Base+0x84>
   159ec:	mov	r1, #32
   159f0:	mov	r0, r4
   159f4:	bl	11240 <__overflow@plt>
   159f8:	b	158d8 <argp_failure@@Base+0xa4>
   159fc:	mov	r1, #58	; 0x3a
   15a00:	mov	r0, r4
   15a04:	bl	11240 <__overflow@plt>
   15a08:	b	15910 <argp_failure@@Base+0xdc>
   15a0c:	mov	r1, #32
   15a10:	mov	r0, r4
   15a14:	bl	11240 <__overflow@plt>
   15a18:	b	15930 <argp_failure@@Base+0xfc>
   15a1c:	mov	r0, r6
   15a20:	bl	1115c <strerror@plt>
   15a24:	movw	r3, #36336	; 0x8df0
   15a28:	movt	r3, #1
   15a2c:	cmp	r0, #0
   15a30:	moveq	r0, r3
   15a34:	b	15948 <argp_failure@@Base+0x114>
   15a38:	mov	r1, #10
   15a3c:	mov	r0, r4
   15a40:	bl	11240 <__overflow@plt>
   15a44:	b	15970 <argp_failure@@Base+0x13c>
   15a48:	mov	r0, r7
   15a4c:	bl	111b0 <exit@plt>
   15a50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15a54:	strd	r6, [sp, #8]
   15a58:	strd	r8, [sp, #16]
   15a5c:	strd	sl, [sp, #24]
   15a60:	str	lr, [sp, #32]
   15a64:	add	fp, sp, #32
   15a68:	sub	sp, sp, #124	; 0x7c
   15a6c:	str	r0, [fp, #-108]	; 0xffffff94
   15a70:	str	r1, [fp, #-104]	; 0xffffff98
   15a74:	str	r3, [fp, #-100]	; 0xffffff9c
   15a78:	subs	r3, r2, #0
   15a7c:	str	r3, [fp, #-132]	; 0xffffff7c
   15a80:	beq	16a68 <argp_failure@@Base+0x1234>
   15a84:	mov	r0, r3
   15a88:	bl	11294 <flockfile@plt>
   15a8c:	movw	r3, #41468	; 0xa1fc
   15a90:	movt	r3, #2
   15a94:	ldr	r9, [r3, #36]	; 0x24
   15a98:	cmp	r9, #0
   15a9c:	beq	15b74 <argp_failure@@Base+0x340>
   15aa0:	movw	r2, #41468	; 0xa1fc
   15aa4:	movt	r2, #2
   15aa8:	mov	r3, #0
   15aac:	ldr	r2, [r2, #32]
   15ab0:	mov	r1, r3
   15ab4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15ab8:	bl	17b20 <argp_error@@Base+0xe04>
   15abc:	subs	sl, r0, #0
   15ac0:	beq	15f50 <argp_failure@@Base+0x71c>
   15ac4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ac8:	tst	r3, #11
   15acc:	moveq	r3, #0
   15ad0:	streq	r3, [fp, #-128]	; 0xffffff80
   15ad4:	bne	15f5c <argp_failure@@Base+0x728>
   15ad8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15adc:	tst	r3, #3
   15ae0:	moveq	r4, #0
   15ae4:	bne	15fec <argp_failure@@Base+0x7b8>
   15ae8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15aec:	tst	r3, #16
   15af0:	bne	16210 <argp_failure@@Base+0x9dc>
   15af4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15af8:	tst	r3, #4
   15afc:	bne	16238 <argp_failure@@Base+0xa04>
   15b00:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b04:	tst	r3, #8
   15b08:	beq	169f4 <argp_failure@@Base+0x11c0>
   15b0c:	ldr	r3, [fp, #-128]	; 0xffffff80
   15b10:	ldr	r3, [r3, #4]
   15b14:	cmp	r3, #0
   15b18:	beq	169f4 <argp_failure@@Base+0x11c0>
   15b1c:	cmp	r4, #0
   15b20:	bne	16258 <argp_failure@@Base+0xa24>
   15b24:	mov	r3, #0
   15b28:	str	r3, [fp, #-88]	; 0xffffffa8
   15b2c:	str	r3, [fp, #-84]	; 0xffffffac
   15b30:	str	r3, [fp, #-80]	; 0xffffffb0
   15b34:	ldr	r3, [fp, #-128]	; 0xffffff80
   15b38:	ldr	r9, [r3]
   15b3c:	ldr	r3, [r3, #4]
   15b40:	str	r3, [fp, #-116]	; 0xffffff8c
   15b44:	cmp	r3, #0
   15b48:	beq	169f0 <argp_failure@@Base+0x11bc>
   15b4c:	movw	r3, #41468	; 0xa1fc
   15b50:	movt	r3, #2
   15b54:	str	r3, [fp, #-96]	; 0xffffffa0
   15b58:	movw	r3, #36652	; 0x8f2c
   15b5c:	movt	r3, #1
   15b60:	str	r3, [fp, #-140]	; 0xffffff74
   15b64:	movw	r3, #34704	; 0x8790
   15b68:	movt	r3, #1
   15b6c:	str	r3, [fp, #-144]	; 0xffffff70
   15b70:	b	16870 <argp_failure@@Base+0x103c>
   15b74:	movw	r0, #36360	; 0x8e08
   15b78:	movt	r0, #1
   15b7c:	bl	1112c <getenv@plt>
   15b80:	movw	r1, #41468	; 0xa1fc
   15b84:	movt	r1, #2
   15b88:	ldrd	r2, [r1]
   15b8c:	strd	r2, [fp, #-76]	; 0xffffffb4
   15b90:	ldrd	r2, [r1, #8]
   15b94:	strd	r2, [fp, #-68]	; 0xffffffbc
   15b98:	ldrd	r2, [r1, #16]
   15b9c:	strd	r2, [fp, #-60]	; 0xffffffc4
   15ba0:	ldrd	r2, [r1, #24]
   15ba4:	strd	r2, [fp, #-52]	; 0xffffffcc
   15ba8:	ldrd	r2, [r1, #32]
   15bac:	strd	r2, [fp, #-44]	; 0xffffffd4
   15bb0:	subs	r6, r0, #0
   15bb4:	beq	15aa0 <argp_failure@@Base+0x26c>
   15bb8:	movw	sl, #35888	; 0x8c30
   15bbc:	movt	sl, #1
   15bc0:	add	r8, sl, #168	; 0xa8
   15bc4:	b	15e20 <argp_failure@@Base+0x5ec>
   15bc8:	cmp	r0, #45	; 0x2d
   15bcc:	cmpne	r0, #95	; 0x5f
   15bd0:	moveq	r3, #1
   15bd4:	movne	r3, #0
   15bd8:	ubfx	r1, r1, #3, #1
   15bdc:	orrs	r3, r3, r1
   15be0:	beq	16bcc <argp_failure@@Base+0x1398>
   15be4:	mov	r4, r6
   15be8:	ldrb	r3, [r4, #1]!
   15bec:	lsl	r1, r3, #1
   15bf0:	ldrh	r1, [r2, r1]
   15bf4:	ubfx	r1, r1, #3, #1
   15bf8:	cmp	r3, #95	; 0x5f
   15bfc:	cmpne	r3, #45	; 0x2d
   15c00:	moveq	r3, #1
   15c04:	movne	r3, #0
   15c08:	orrs	r3, r1, r3
   15c0c:	bne	15be8 <argp_failure@@Base+0x3b4>
   15c10:	sub	r7, r4, r6
   15c14:	ldrb	r3, [r4]
   15c18:	lsl	r1, r3, #1
   15c1c:	ldrh	r1, [r2, r1]
   15c20:	tst	r1, #8192	; 0x2000
   15c24:	beq	15c3c <argp_failure@@Base+0x408>
   15c28:	ldrb	r3, [r4, #1]!
   15c2c:	lsl	r1, r3, #1
   15c30:	ldrh	r1, [r2, r1]
   15c34:	tst	r1, #8192	; 0x2000
   15c38:	bne	15c28 <argp_failure@@Base+0x3f4>
   15c3c:	cmp	r3, #44	; 0x2c
   15c40:	cmpne	r3, #0
   15c44:	beq	15ca8 <argp_failure@@Base+0x474>
   15c48:	cmp	r3, #61	; 0x3d
   15c4c:	beq	15c74 <argp_failure@@Base+0x440>
   15c50:	ldrb	r3, [r4]
   15c54:	lsl	r3, r3, #1
   15c58:	ldrh	r3, [r2, r3]
   15c5c:	tst	r3, #2048	; 0x800
   15c60:	streq	r9, [fp, #-96]	; 0xffffffa0
   15c64:	streq	r9, [fp, #-112]	; 0xffffff90
   15c68:	bne	15d0c <argp_failure@@Base+0x4d8>
   15c6c:	add	r5, sl, #24
   15c70:	b	15db4 <argp_failure@@Base+0x580>
   15c74:	add	r1, r4, #1
   15c78:	ldrb	r3, [r4, #1]
   15c7c:	lsl	r3, r3, #1
   15c80:	ldrh	r3, [r2, r3]
   15c84:	tst	r3, #8192	; 0x2000
   15c88:	beq	15d04 <argp_failure@@Base+0x4d0>
   15c8c:	ldrb	r3, [r1, #1]!
   15c90:	lsl	r3, r3, #1
   15c94:	ldrh	r3, [r2, r3]
   15c98:	tst	r3, #8192	; 0x2000
   15c9c:	bne	15c8c <argp_failure@@Base+0x458>
   15ca0:	mov	r4, r1
   15ca4:	b	15c50 <argp_failure@@Base+0x41c>
   15ca8:	cmp	r0, #110	; 0x6e
   15cac:	movne	r3, #1
   15cb0:	strne	r3, [fp, #-96]	; 0xffffffa0
   15cb4:	strne	r3, [fp, #-112]	; 0xffffff90
   15cb8:	bne	15c6c <argp_failure@@Base+0x438>
   15cbc:	ldrb	r3, [r6, #1]
   15cc0:	cmp	r3, #111	; 0x6f
   15cc4:	movne	r3, #1
   15cc8:	strne	r3, [fp, #-96]	; 0xffffffa0
   15ccc:	strne	r3, [fp, #-112]	; 0xffffff90
   15cd0:	bne	15c6c <argp_failure@@Base+0x438>
   15cd4:	ldrb	r3, [r6, #2]
   15cd8:	cmp	r3, #45	; 0x2d
   15cdc:	movne	r3, #1
   15ce0:	strne	r3, [fp, #-96]	; 0xffffffa0
   15ce4:	strne	r3, [fp, #-112]	; 0xffffff90
   15ce8:	bne	15c6c <argp_failure@@Base+0x438>
   15cec:	add	r6, r6, #3
   15cf0:	sub	r7, r7, #3
   15cf4:	str	r9, [fp, #-112]	; 0xffffff90
   15cf8:	mov	r3, #1
   15cfc:	str	r3, [fp, #-96]	; 0xffffffa0
   15d00:	b	15c6c <argp_failure@@Base+0x438>
   15d04:	mov	r4, r1
   15d08:	b	15c50 <argp_failure@@Base+0x41c>
   15d0c:	mov	r2, #10
   15d10:	mov	r1, #0
   15d14:	mov	r0, r4
   15d18:	bl	11000 <strtol@plt>
   15d1c:	str	r0, [fp, #-112]	; 0xffffff90
   15d20:	ldr	r2, [r5]
   15d24:	ldrb	r3, [r4]
   15d28:	lsl	r3, r3, #1
   15d2c:	ldrh	r3, [r2, r3]
   15d30:	tst	r3, #2048	; 0x800
   15d34:	beq	15d4c <argp_failure@@Base+0x518>
   15d38:	ldrb	r3, [r4, #1]!
   15d3c:	lsl	r3, r3, #1
   15d40:	ldrh	r3, [r2, r3]
   15d44:	tst	r3, #2048	; 0x800
   15d48:	bne	15d38 <argp_failure@@Base+0x504>
   15d4c:	ldrb	r3, [r4]
   15d50:	lsl	r3, r3, #1
   15d54:	ldrh	r3, [r2, r3]
   15d58:	tst	r3, #8192	; 0x2000
   15d5c:	beq	15d7c <argp_failure@@Base+0x548>
   15d60:	ldrb	r3, [r4, #1]!
   15d64:	lsl	r3, r3, #1
   15d68:	ldrh	r3, [r2, r3]
   15d6c:	tst	r3, #8192	; 0x2000
   15d70:	bne	15d60 <argp_failure@@Base+0x52c>
   15d74:	str	r9, [fp, #-96]	; 0xffffffa0
   15d78:	b	15c6c <argp_failure@@Base+0x438>
   15d7c:	str	r9, [fp, #-96]	; 0xffffffa0
   15d80:	b	15c6c <argp_failure@@Base+0x438>
   15d84:	str	r6, [sp, #4]
   15d88:	str	r7, [sp]
   15d8c:	movw	r3, #36376	; 0x8e18
   15d90:	movt	r3, #1
   15d94:	mov	r2, #0
   15d98:	mov	r1, r2
   15d9c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15da0:	bl	15834 <argp_failure@@Base>
   15da4:	b	15e08 <argp_failure@@Base+0x5d4>
   15da8:	add	r5, r5, #16
   15dac:	cmp	r5, r8
   15db0:	beq	15ef0 <argp_failure@@Base+0x6bc>
   15db4:	mov	r0, r5
   15db8:	bl	111bc <strlen@plt>
   15dbc:	cmp	r0, r7
   15dc0:	bne	15da8 <argp_failure@@Base+0x574>
   15dc4:	mov	r2, r7
   15dc8:	mov	r1, r5
   15dcc:	mov	r0, r6
   15dd0:	bl	112b8 <strncmp@plt>
   15dd4:	cmp	r0, #0
   15dd8:	bne	15da8 <argp_failure@@Base+0x574>
   15ddc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15de0:	cmp	r3, #0
   15de4:	beq	15df4 <argp_failure@@Base+0x5c0>
   15de8:	ldrb	r3, [r5, #14]
   15dec:	cmp	r3, #0
   15df0:	beq	15d84 <argp_failure@@Base+0x550>
   15df4:	ldrb	r3, [r5, #15]
   15df8:	sub	r2, fp, #36	; 0x24
   15dfc:	add	r3, r2, r3
   15e00:	ldr	r2, [fp, #-112]	; 0xffffff90
   15e04:	str	r2, [r3, #-40]	; 0xffffffd8
   15e08:	cmp	r5, r8
   15e0c:	beq	15ef0 <argp_failure@@Base+0x6bc>
   15e10:	ldrb	r3, [r4]
   15e14:	cmp	r3, #44	; 0x2c
   15e18:	addeq	r6, r4, #1
   15e1c:	movne	r6, r4
   15e20:	ldrb	r3, [r6]
   15e24:	cmp	r3, #0
   15e28:	beq	15e80 <argp_failure@@Base+0x64c>
   15e2c:	bl	111a4 <__ctype_b_loc@plt>
   15e30:	mov	r5, r0
   15e34:	ldr	r2, [r0]
   15e38:	mov	r3, r6
   15e3c:	mov	r6, r3
   15e40:	ldrb	r0, [r3], #1
   15e44:	lsl	r1, r0, #1
   15e48:	ldrh	r1, [r2, r1]
   15e4c:	tst	r1, #8192	; 0x2000
   15e50:	bne	15e3c <argp_failure@@Base+0x608>
   15e54:	tst	r1, #1024	; 0x400
   15e58:	bne	15bc8 <argp_failure@@Base+0x394>
   15e5c:	cmp	r0, #0
   15e60:	beq	15e20 <argp_failure@@Base+0x5ec>
   15e64:	str	r6, [sp]
   15e68:	movw	r3, #36464	; 0x8e70
   15e6c:	movt	r3, #1
   15e70:	mov	r2, #0
   15e74:	mov	r1, r2
   15e78:	ldr	r0, [fp, #-104]	; 0xffffff98
   15e7c:	bl	15834 <argp_failure@@Base>
   15e80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e84:	ldr	r3, [pc, #3488]	; 16c2c <argp_failure@@Base+0x13f8>
   15e88:	add	r1, r3, #144	; 0x90
   15e8c:	add	r3, r3, #16
   15e90:	cmp	r3, r1
   15e94:	beq	15f14 <argp_failure@@Base+0x6e0>
   15e98:	ldrb	r2, [r3, #14]
   15e9c:	cmp	r2, #0
   15ea0:	bne	15e8c <argp_failure@@Base+0x658>
   15ea4:	ldrb	r2, [r3, #15]
   15ea8:	cmp	r2, #32
   15eac:	beq	15e8c <argp_failure@@Base+0x658>
   15eb0:	sub	ip, fp, #36	; 0x24
   15eb4:	add	r2, ip, r2
   15eb8:	ldr	r2, [r2, #-40]	; 0xffffffd8
   15ebc:	cmp	r2, r0
   15ec0:	blt	15e8c <argp_failure@@Base+0x658>
   15ec4:	str	r3, [sp, #4]
   15ec8:	movw	r3, #36548	; 0x8ec4
   15ecc:	movt	r3, #1
   15ed0:	str	r3, [sp]
   15ed4:	movw	r3, #36496	; 0x8e90
   15ed8:	movt	r3, #1
   15edc:	mov	r2, #0
   15ee0:	mov	r1, r2
   15ee4:	ldr	r0, [fp, #-104]	; 0xffffff98
   15ee8:	bl	15834 <argp_failure@@Base>
   15eec:	b	15aa0 <argp_failure@@Base+0x26c>
   15ef0:	str	r6, [sp, #4]
   15ef4:	str	r7, [sp]
   15ef8:	movw	r3, #36424	; 0x8e48
   15efc:	movt	r3, #1
   15f00:	mov	r2, #0
   15f04:	mov	r1, r2
   15f08:	ldr	r0, [fp, #-104]	; 0xffffff98
   15f0c:	bl	15834 <argp_failure@@Base>
   15f10:	b	15e10 <argp_failure@@Base+0x5dc>
   15f14:	movw	r1, #41468	; 0xa1fc
   15f18:	movt	r1, #2
   15f1c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15f20:	strd	r2, [r1]
   15f24:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15f28:	strd	r2, [r1, #8]
   15f2c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   15f30:	strd	r2, [r1, #16]
   15f34:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15f38:	strd	r2, [r1, #24]
   15f3c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15f40:	strd	r2, [r1, #32]
   15f44:	mov	r3, #1
   15f48:	str	r3, [r1, #36]	; 0x24
   15f4c:	b	15aa0 <argp_failure@@Base+0x26c>
   15f50:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15f54:	bl	110d8 <funlockfile@plt>
   15f58:	b	16a68 <argp_failure@@Base+0x1234>
   15f5c:	mov	r1, #0
   15f60:	ldr	r0, [fp, #-108]	; 0xffffff94
   15f64:	bl	1517c <argp_parse@@Base+0x2ac8>
   15f68:	str	r0, [fp, #-128]	; 0xffffff80
   15f6c:	movw	r1, #34784	; 0x87e0
   15f70:	movt	r1, #1
   15f74:	bl	13bbc <argp_parse@@Base+0x1508>
   15f78:	cmp	r0, #0
   15f7c:	mvnne	r3, #0
   15f80:	strne	r3, [r0, #12]
   15f84:	movw	r1, #34752	; 0x87c0
   15f88:	movt	r1, #1
   15f8c:	ldr	r0, [fp, #-128]	; 0xffffff80
   15f90:	bl	13bbc <argp_parse@@Base+0x1508>
   15f94:	cmp	r0, #0
   15f98:	mvnne	r3, #0
   15f9c:	strne	r3, [r0, #12]
   15fa0:	ldr	r0, [fp, #-128]	; 0xffffff80
   15fa4:	ldr	r3, [r0, #4]
   15fa8:	cmp	r3, #0
   15fac:	beq	15ad8 <argp_failure@@Base+0x2a4>
   15fb0:	ldr	r2, [r0]
   15fb4:	mov	r3, #0
   15fb8:	str	r3, [r2, #24]
   15fbc:	add	r3, r3, #1
   15fc0:	add	r2, r2, #28
   15fc4:	ldr	r1, [r0, #4]
   15fc8:	cmp	r3, r1
   15fcc:	bcc	15fb8 <argp_failure@@Base+0x784>
   15fd0:	movw	r3, #20076	; 0x4e6c
   15fd4:	movt	r3, #1
   15fd8:	mov	r2, #28
   15fdc:	ldr	r0, [fp, #-128]	; 0xffffff80
   15fe0:	ldr	r0, [r0]
   15fe4:	bl	112ac <qsort@plt>
   15fe8:	b	15ad8 <argp_failure@@Base+0x2a4>
   15fec:	ldr	r0, [fp, #-108]	; 0xffffff94
   15ff0:	bl	13c70 <argp_parse@@Base+0x15bc>
   15ff4:	mov	r2, r0
   15ff8:	add	r3, r0, #7
   15ffc:	bic	r3, r3, #7
   16000:	sub	sp, sp, r3
   16004:	add	r9, sp, #8
   16008:	mov	r1, #0
   1600c:	mov	r0, r9
   16010:	bl	11210 <memset@plt>
   16014:	mov	r5, #1
   16018:	movw	r4, #41468	; 0xa1fc
   1601c:	movt	r4, #2
   16020:	movw	r3, #36572	; 0x8edc
   16024:	movt	r3, #1
   16028:	str	r3, [fp, #-116]	; 0xffffff8c
   1602c:	movw	r8, #36564	; 0x8ed4
   16030:	movt	r8, #1
   16034:	str	r9, [fp, #-96]	; 0xffffffa0
   16038:	ldr	r9, [fp, #-128]	; 0xffffff80
   1603c:	str	r8, [fp, #-112]	; 0xffffff90
   16040:	ldr	r8, [fp, #-100]	; 0xffffff9c
   16044:	b	160f4 <argp_failure@@Base+0x8c0>
   16048:	mov	r0, sl
   1604c:	bl	17bb8 <argp_error@@Base+0xe9c>
   16050:	b	16110 <argp_failure@@Base+0x8dc>
   16054:	mov	r0, sl
   16058:	bl	17bb8 <argp_error@@Base+0xe9c>
   1605c:	b	1615c <argp_failure@@Base+0x928>
   16060:	mov	r1, sl
   16064:	mov	r0, r9
   16068:	bl	13e44 <argp_parse@@Base+0x1790>
   1606c:	orr	r8, r8, #2
   16070:	str	sl, [sp]
   16074:	mov	r3, #1
   16078:	sub	r2, fp, #76	; 0x4c
   1607c:	ldr	r1, [fp, #-104]	; 0xffffff98
   16080:	ldr	r0, [fp, #-108]	; 0xffffff94
   16084:	bl	142b0 <argp_parse@@Base+0x1bfc>
   16088:	mov	r6, r0
   1608c:	ldr	r3, [sl, #28]
   16090:	ldr	r2, [sl, #24]
   16094:	sub	r3, r3, r2
   16098:	ldr	r2, [sl, #16]
   1609c:	cmp	r3, r2
   160a0:	bhi	161d4 <argp_failure@@Base+0x9a0>
   160a4:	str	r7, [sl, #12]
   160a8:	ldr	r3, [sl, #28]
   160ac:	ldr	r2, [sl, #24]
   160b0:	sub	r3, r3, r2
   160b4:	ldr	r2, [sl, #16]
   160b8:	cmp	r3, r2
   160bc:	bhi	161e0 <argp_failure@@Base+0x9ac>
   160c0:	str	r5, [sl, #4]
   160c4:	ldr	r2, [sl, #28]
   160c8:	ldr	r3, [sl, #32]
   160cc:	cmp	r2, r3
   160d0:	bcs	161ec <argp_failure@@Base+0x9b8>
   160d4:	ldr	r3, [sl, #28]
   160d8:	add	r2, r3, #1
   160dc:	str	r2, [sl, #28]
   160e0:	mov	r2, #10
   160e4:	strb	r2, [r3]
   160e8:	mov	r5, #0
   160ec:	cmp	r6, r5
   160f0:	beq	16204 <argp_failure@@Base+0x9d0>
   160f4:	ldr	r6, [r4, #28]
   160f8:	ldr	r3, [sl, #28]
   160fc:	ldr	r2, [sl, #24]
   16100:	sub	r3, r3, r2
   16104:	ldr	r2, [sl, #16]
   16108:	cmp	r3, r2
   1610c:	bhi	16048 <argp_failure@@Base+0x814>
   16110:	ldr	r7, [sl, #12]
   16114:	str	r6, [sl, #12]
   16118:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1611c:	str	r3, [fp, #-76]	; 0xffffffb4
   16120:	cmp	r5, #0
   16124:	ldr	r3, [fp, #4]
   16128:	movwne	r2, #36556	; 0x8ecc
   1612c:	movtne	r2, #1
   16130:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   16134:	ldr	r1, [fp, #-112]	; 0xffffff90
   16138:	mov	r0, sl
   1613c:	bl	18230 <argp_error@@Base+0x1514>
   16140:	ldr	r6, [r4, #28]
   16144:	ldr	r3, [sl, #28]
   16148:	ldr	r2, [sl, #24]
   1614c:	sub	r3, r3, r2
   16150:	ldr	r2, [sl, #16]
   16154:	cmp	r3, r2
   16158:	bhi	16054 <argp_failure@@Base+0x820>
   1615c:	ldr	r5, [sl, #4]
   16160:	str	r6, [sl, #4]
   16164:	tst	r8, #2
   16168:	beq	16060 <argp_failure@@Base+0x82c>
   1616c:	ldr	r3, [r9, #4]
   16170:	cmp	r3, #0
   16174:	beq	16070 <argp_failure@@Base+0x83c>
   16178:	ldr	r3, [sl, #28]
   1617c:	add	r3, r3, #12
   16180:	ldr	r2, [sl, #32]
   16184:	cmp	r2, r3
   16188:	bcs	161a0 <argp_failure@@Base+0x96c>
   1618c:	mov	r1, #12
   16190:	mov	r0, sl
   16194:	bl	18130 <argp_error@@Base+0x1414>
   16198:	cmp	r0, #0
   1619c:	beq	16070 <argp_failure@@Base+0x83c>
   161a0:	ldr	r2, [sl, #28]
   161a4:	movw	r3, #36580	; 0x8ee4
   161a8:	movt	r3, #1
   161ac:	ldr	r0, [r3]
   161b0:	ldr	r1, [r3, #4]
   161b4:	str	r0, [r2]
   161b8:	str	r1, [r2, #4]
   161bc:	ldr	r3, [r3, #8]
   161c0:	str	r3, [r2, #8]
   161c4:	ldr	r3, [sl, #28]
   161c8:	add	r3, r3, #12
   161cc:	str	r3, [sl, #28]
   161d0:	b	16070 <argp_failure@@Base+0x83c>
   161d4:	mov	r0, sl
   161d8:	bl	17bb8 <argp_error@@Base+0xe9c>
   161dc:	b	160a4 <argp_failure@@Base+0x870>
   161e0:	mov	r0, sl
   161e4:	bl	17bb8 <argp_error@@Base+0xe9c>
   161e8:	b	160c0 <argp_failure@@Base+0x88c>
   161ec:	mov	r1, #1
   161f0:	mov	r0, sl
   161f4:	bl	18130 <argp_error@@Base+0x1414>
   161f8:	cmp	r0, #0
   161fc:	bne	160d4 <argp_failure@@Base+0x8a0>
   16200:	b	160e8 <argp_failure@@Base+0x8b4>
   16204:	str	r8, [fp, #-100]	; 0xffffff9c
   16208:	mov	r4, #1
   1620c:	b	15ae8 <argp_failure@@Base+0x2b4>
   16210:	str	sl, [sp, #4]
   16214:	mov	r3, #1
   16218:	str	r3, [sp]
   1621c:	mov	r3, #0
   16220:	mov	r2, r3
   16224:	ldr	r1, [fp, #-104]	; 0xffffff98
   16228:	ldr	r0, [fp, #-108]	; 0xffffff94
   1622c:	bl	14860 <argp_parse@@Base+0x21ac>
   16230:	orr	r4, r4, r0
   16234:	b	15af4 <argp_failure@@Base+0x2c0>
   16238:	ldr	r3, [fp, #4]
   1623c:	mov	r2, r3
   16240:	movw	r1, #36596	; 0x8ef4
   16244:	movt	r1, #1
   16248:	mov	r0, sl
   1624c:	bl	18230 <argp_error@@Base+0x1514>
   16250:	mov	r4, #1
   16254:	b	15b00 <argp_failure@@Base+0x2cc>
   16258:	ldr	r2, [sl, #28]
   1625c:	ldr	r3, [sl, #32]
   16260:	cmp	r2, r3
   16264:	bcs	16280 <argp_failure@@Base+0xa4c>
   16268:	ldr	r3, [sl, #28]
   1626c:	add	r2, r3, #1
   16270:	str	r2, [sl, #28]
   16274:	mov	r2, #10
   16278:	strb	r2, [r3]
   1627c:	b	15b24 <argp_failure@@Base+0x2f0>
   16280:	mov	r1, #1
   16284:	mov	r0, sl
   16288:	bl	18130 <argp_error@@Base+0x1414>
   1628c:	cmp	r0, #0
   16290:	bne	16268 <argp_failure@@Base+0xa34>
   16294:	b	15b24 <argp_failure@@Base+0x2f0>
   16298:	mov	r0, sl
   1629c:	bl	17bb8 <argp_error@@Base+0xe9c>
   162a0:	b	16890 <argp_failure@@Base+0x105c>
   162a4:	add	r3, r3, #24
   162a8:	subs	r2, r2, #1
   162ac:	beq	162d0 <argp_failure@@Base+0xa9c>
   162b0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   162b4:	cmp	r1, #0
   162b8:	beq	162a4 <argp_failure@@Base+0xa70>
   162bc:	ldr	r1, [r3, #-12]
   162c0:	tst	r1, #2
   162c4:	bne	162a4 <argp_failure@@Base+0xa70>
   162c8:	mov	r3, #1
   162cc:	str	r3, [fp, #-112]	; 0xffffff90
   162d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   162d4:	ldr	r5, [r3, #8]
   162d8:	ldr	r3, [sl, #28]
   162dc:	ldr	r2, [sl, #24]
   162e0:	sub	r3, r3, r2
   162e4:	ldr	r2, [sl, #16]
   162e8:	cmp	r3, r2
   162ec:	bhi	1630c <argp_failure@@Base+0xad8>
   162f0:	str	r5, [sl, #12]
   162f4:	ldr	r6, [r9, #4]
   162f8:	cmp	r6, #0
   162fc:	beq	1640c <argp_failure@@Base+0xbd8>
   16300:	mov	r5, r4
   16304:	str	r9, [fp, #-136]	; 0xffffff78
   16308:	b	16bf4 <argp_failure@@Base+0x13c0>
   1630c:	mov	r0, sl
   16310:	bl	17bb8 <argp_error@@Base+0xe9c>
   16314:	b	162f0 <argp_failure@@Base+0xabc>
   16318:	tst	r9, #2
   1631c:	beq	16328 <argp_failure@@Base+0xaf4>
   16320:	add	r8, r8, #1
   16324:	b	16be8 <argp_failure@@Base+0x13b4>
   16328:	sub	r1, fp, #76	; 0x4c
   1632c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16330:	ldr	r0, [r3, #8]
   16334:	bl	146bc <argp_parse@@Base+0x2008>
   16338:	ldr	r2, [sl, #28]
   1633c:	ldr	r3, [sl, #32]
   16340:	cmp	r2, r3
   16344:	bcs	163c4 <argp_failure@@Base+0xb90>
   16348:	ldr	r3, [sl, #28]
   1634c:	add	r2, r3, #1
   16350:	str	r2, [sl, #28]
   16354:	mov	r2, #45	; 0x2d
   16358:	strb	r2, [r3]
   1635c:	ldrb	r7, [r8]
   16360:	ldr	r2, [sl, #28]
   16364:	ldr	r3, [sl, #32]
   16368:	cmp	r2, r3
   1636c:	bcs	163dc <argp_failure@@Base+0xba8>
   16370:	ldr	r3, [sl, #28]
   16374:	add	r2, r3, #1
   16378:	str	r2, [sl, #28]
   1637c:	strb	r7, [r3]
   16380:	ldr	r3, [fp, #-112]	; 0xffffff90
   16384:	cmp	r3, #0
   16388:	beq	1639c <argp_failure@@Base+0xb68>
   1638c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16390:	ldr	r3, [r3]
   16394:	cmp	r3, #0
   16398:	beq	163f4 <argp_failure@@Base+0xbc0>
   1639c:	ldr	r2, [r4, #8]
   163a0:	cmp	r2, #0
   163a4:	beq	16320 <argp_failure@@Base+0xaec>
   163a8:	ldr	r3, [r4, #12]
   163ac:	tst	r3, #1
   163b0:	ldrne	r1, [fp, #-140]	; 0xffffff74
   163b4:	ldreq	r1, [fp, #-144]	; 0xffffff70
   163b8:	mov	r0, sl
   163bc:	bl	18230 <argp_error@@Base+0x1514>
   163c0:	b	16320 <argp_failure@@Base+0xaec>
   163c4:	mov	r1, #1
   163c8:	mov	r0, sl
   163cc:	bl	18130 <argp_error@@Base+0x1414>
   163d0:	cmp	r0, #0
   163d4:	bne	16348 <argp_failure@@Base+0xb14>
   163d8:	b	1635c <argp_failure@@Base+0xb28>
   163dc:	mov	r1, #1
   163e0:	mov	r0, sl
   163e4:	bl	18130 <argp_error@@Base+0x1414>
   163e8:	cmp	r0, #0
   163ec:	bne	16370 <argp_failure@@Base+0xb3c>
   163f0:	b	16380 <argp_failure@@Base+0xb4c>
   163f4:	ldr	r3, [r4, #8]
   163f8:	cmp	r3, #0
   163fc:	movne	r3, #1
   16400:	strne	r3, [fp, #-80]	; 0xffffffb0
   16404:	b	16320 <argp_failure@@Base+0xaec>
   16408:	ldr	r9, [fp, #-136]	; 0xffffff78
   1640c:	ldr	r3, [r4, #12]
   16410:	tst	r3, #8
   16414:	beq	164ec <argp_failure@@Base+0xcb8>
   16418:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1641c:	ldr	r5, [r3, #16]
   16420:	ldr	r3, [sl, #28]
   16424:	ldr	r2, [sl, #24]
   16428:	sub	r3, r3, r2
   1642c:	ldr	r2, [sl, #16]
   16430:	cmp	r3, r2
   16434:	bhi	16450 <argp_failure@@Base+0xc1c>
   16438:	str	r5, [sl, #12]
   1643c:	ldr	r6, [r9, #4]
   16440:	cmp	r6, #0
   16444:	beq	165b4 <argp_failure@@Base+0xd80>
   16448:	add	r5, r4, #24
   1644c:	b	16484 <argp_failure@@Base+0xc50>
   16450:	mov	r0, sl
   16454:	bl	17bb8 <argp_error@@Base+0xe9c>
   16458:	b	16438 <argp_failure@@Base+0xc04>
   1645c:	mov	r2, r8
   16460:	mov	r1, r7
   16464:	ldr	r0, [sl, #28]
   16468:	bl	11084 <memcpy@plt>
   1646c:	ldr	r3, [sl, #28]
   16470:	add	r8, r3, r8
   16474:	str	r8, [sl, #28]
   16478:	add	r5, r5, #24
   1647c:	subs	r6, r6, #1
   16480:	beq	165b4 <argp_failure@@Base+0xd80>
   16484:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16488:	cmp	r3, #0
   1648c:	beq	16478 <argp_failure@@Base+0xc44>
   16490:	ldr	r3, [r5, #-12]
   16494:	tst	r3, #2
   16498:	bne	16478 <argp_failure@@Base+0xc44>
   1649c:	sub	r1, fp, #76	; 0x4c
   164a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   164a4:	ldr	r0, [r3, #16]
   164a8:	bl	146bc <argp_parse@@Base+0x2008>
   164ac:	ldr	r7, [r5, #-24]	; 0xffffffe8
   164b0:	mov	r0, r7
   164b4:	bl	111bc <strlen@plt>
   164b8:	subs	r8, r0, #0
   164bc:	beq	16478 <argp_failure@@Base+0xc44>
   164c0:	ldr	r3, [sl, #28]
   164c4:	add	r3, r3, r8
   164c8:	ldr	r2, [sl, #32]
   164cc:	cmp	r2, r3
   164d0:	bcs	1645c <argp_failure@@Base+0xc28>
   164d4:	mov	r1, r8
   164d8:	mov	r0, sl
   164dc:	bl	18130 <argp_error@@Base+0x1414>
   164e0:	cmp	r0, #0
   164e4:	beq	16478 <argp_failure@@Base+0xc44>
   164e8:	b	1645c <argp_failure@@Base+0xc28>
   164ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   164f0:	ldr	r5, [r3, #12]
   164f4:	ldr	r3, [sl, #28]
   164f8:	ldr	r2, [sl, #24]
   164fc:	sub	r3, r3, r2
   16500:	ldr	r2, [sl, #16]
   16504:	cmp	r3, r2
   16508:	bhi	16538 <argp_failure@@Base+0xd04>
   1650c:	str	r5, [sl, #12]
   16510:	ldr	r6, [r9, #4]
   16514:	cmp	r6, #0
   16518:	beq	165b4 <argp_failure@@Base+0xd80>
   1651c:	add	r5, r4, #24
   16520:	movw	r8, #36660	; 0x8f34
   16524:	movt	r8, #1
   16528:	movw	r7, #36676	; 0x8f44
   1652c:	movt	r7, #1
   16530:	str	r7, [fp, #-112]	; 0xffffff90
   16534:	b	16550 <argp_failure@@Base+0xd1c>
   16538:	mov	r0, sl
   1653c:	bl	17bb8 <argp_error@@Base+0xe9c>
   16540:	b	1650c <argp_failure@@Base+0xcd8>
   16544:	add	r5, r5, #24
   16548:	subs	r6, r6, #1
   1654c:	beq	165b4 <argp_failure@@Base+0xd80>
   16550:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16554:	cmp	r3, #0
   16558:	beq	16544 <argp_failure@@Base+0xd10>
   1655c:	ldr	r3, [r5, #-12]
   16560:	tst	r3, #2
   16564:	bne	16544 <argp_failure@@Base+0xd10>
   16568:	sub	r1, fp, #76	; 0x4c
   1656c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16570:	ldr	r0, [r3, #12]
   16574:	bl	146bc <argp_parse@@Base+0x2008>
   16578:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1657c:	mov	r1, r8
   16580:	mov	r0, sl
   16584:	bl	18230 <argp_error@@Base+0x1514>
   16588:	ldr	r2, [r4, #8]
   1658c:	cmp	r2, #0
   16590:	beq	16544 <argp_failure@@Base+0xd10>
   16594:	ldr	r3, [r4, #12]
   16598:	tst	r3, #1
   1659c:	movwne	r1, #36668	; 0x8f3c
   165a0:	movtne	r1, #1
   165a4:	ldreq	r1, [fp, #-112]	; 0xffffff90
   165a8:	mov	r0, sl
   165ac:	bl	18230 <argp_error@@Base+0x1514>
   165b0:	b	16544 <argp_failure@@Base+0xd10>
   165b4:	ldr	r3, [sl, #28]
   165b8:	ldr	r2, [sl, #24]
   165bc:	sub	r3, r3, r2
   165c0:	ldr	r2, [sl, #16]
   165c4:	cmp	r3, r2
   165c8:	bhi	16634 <argp_failure@@Base+0xe00>
   165cc:	mov	r3, #0
   165d0:	str	r3, [sl, #4]
   165d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   165d8:	cmp	r3, #0
   165dc:	beq	16640 <argp_failure@@Base+0xe0c>
   165e0:	ldr	r3, [r4, #12]
   165e4:	tst	r3, #8
   165e8:	bne	16614 <argp_failure@@Base+0xde0>
   165ec:	ldr	r5, [r4, #4]
   165f0:	sub	r3, r5, #1
   165f4:	cmp	r3, #254	; 0xfe
   165f8:	bhi	16614 <argp_failure@@Base+0xde0>
   165fc:	bl	111a4 <__ctype_b_loc@plt>
   16600:	ldr	r3, [r0]
   16604:	lsl	r5, r5, #1
   16608:	ldrh	r3, [r3, r5]
   1660c:	tst	r3, #16384	; 0x4000
   16610:	bne	1681c <argp_failure@@Base+0xfe8>
   16614:	ldr	r3, [r4]
   16618:	cmp	r3, #0
   1661c:	bne	1681c <argp_failure@@Base+0xfe8>
   16620:	sub	r2, fp, #76	; 0x4c
   16624:	ldr	r1, [r9, #20]
   16628:	ldr	r0, [r4, #16]
   1662c:	bl	144b4 <argp_parse@@Base+0x1e00>
   16630:	b	16818 <argp_failure@@Base+0xfe4>
   16634:	mov	r0, sl
   16638:	bl	17bb8 <argp_error@@Base+0xe9c>
   1663c:	b	165cc <argp_failure@@Base+0xd98>
   16640:	ldr	r5, [r4, #16]
   16644:	ldr	r3, [fp, #-104]	; 0xffffff98
   16648:	ldr	r2, [r9, #20]
   1664c:	ldr	r1, [r4, #4]
   16650:	mov	r0, r5
   16654:	bl	13cdc <argp_parse@@Base+0x1628>
   16658:	subs	r4, r0, #0
   1665c:	beq	167d4 <argp_failure@@Base+0xfa0>
   16660:	ldrb	r3, [r4]
   16664:	cmp	r3, #0
   16668:	beq	167cc <argp_failure@@Base+0xf98>
   1666c:	ldr	r3, [sl, #28]
   16670:	ldr	r2, [sl, #24]
   16674:	sub	r3, r3, r2
   16678:	ldr	r2, [sl, #16]
   1667c:	cmp	r3, r2
   16680:	bhi	1672c <argp_failure@@Base+0xef8>
   16684:	ldr	r6, [sl, #20]
   16688:	bic	r6, r6, r6, asr #31
   1668c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16690:	ldr	r7, [r3, #20]
   16694:	str	r7, [sl, #4]
   16698:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1669c:	ldr	r7, [r3, #20]
   166a0:	ldr	r3, [sl, #28]
   166a4:	ldr	r2, [sl, #24]
   166a8:	sub	r3, r3, r2
   166ac:	ldr	r2, [sl, #16]
   166b0:	cmp	r3, r2
   166b4:	bhi	16768 <argp_failure@@Base+0xf34>
   166b8:	str	r7, [sl, #12]
   166bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166c0:	ldr	r1, [r3, #20]
   166c4:	add	r3, r1, #3
   166c8:	cmp	r6, r3
   166cc:	bhi	16774 <argp_failure@@Base+0xf40>
   166d0:	cmp	r6, r1
   166d4:	bcc	167b4 <argp_failure@@Base+0xf80>
   166d8:	ldr	r3, [sl, #28]
   166dc:	add	r3, r3, #3
   166e0:	ldr	r2, [sl, #32]
   166e4:	cmp	r2, r3
   166e8:	bcs	16700 <argp_failure@@Base+0xecc>
   166ec:	mov	r1, #3
   166f0:	mov	r0, sl
   166f4:	bl	18130 <argp_error@@Base+0x1414>
   166f8:	cmp	r0, #0
   166fc:	beq	167bc <argp_failure@@Base+0xf88>
   16700:	ldr	r2, [sl, #28]
   16704:	movw	r3, #36680	; 0x8f48
   16708:	movt	r3, #1
   1670c:	ldrh	r1, [r3]
   16710:	strh	r1, [r2]
   16714:	ldrb	r3, [r3, #2]
   16718:	strb	r3, [r2, #2]
   1671c:	ldr	r3, [sl, #28]
   16720:	add	r3, r3, #3
   16724:	str	r3, [sl, #28]
   16728:	b	167bc <argp_failure@@Base+0xf88>
   1672c:	mov	r0, sl
   16730:	bl	17bb8 <argp_error@@Base+0xe9c>
   16734:	ldr	r6, [sl, #20]
   16738:	bic	r6, r6, r6, asr #31
   1673c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16740:	ldr	r7, [r3, #20]
   16744:	ldr	r3, [sl, #28]
   16748:	ldr	r2, [sl, #24]
   1674c:	sub	r3, r3, r2
   16750:	ldr	r2, [sl, #16]
   16754:	cmp	r3, r2
   16758:	bls	16694 <argp_failure@@Base+0xe60>
   1675c:	mov	r0, sl
   16760:	bl	17bb8 <argp_error@@Base+0xe9c>
   16764:	b	16694 <argp_failure@@Base+0xe60>
   16768:	mov	r0, sl
   1676c:	bl	17bb8 <argp_error@@Base+0xe9c>
   16770:	b	166b8 <argp_failure@@Base+0xe84>
   16774:	ldr	r2, [sl, #28]
   16778:	ldr	r3, [sl, #32]
   1677c:	cmp	r2, r3
   16780:	bcs	1679c <argp_failure@@Base+0xf68>
   16784:	ldr	r3, [sl, #28]
   16788:	add	r2, r3, #1
   1678c:	str	r2, [sl, #28]
   16790:	mov	r2, #10
   16794:	strb	r2, [r3]
   16798:	b	167bc <argp_failure@@Base+0xf88>
   1679c:	mov	r1, #1
   167a0:	mov	r0, sl
   167a4:	bl	18130 <argp_error@@Base+0x1414>
   167a8:	cmp	r0, #0
   167ac:	bne	16784 <argp_failure@@Base+0xf50>
   167b0:	b	167bc <argp_failure@@Base+0xf88>
   167b4:	mov	r0, sl
   167b8:	bl	1402c <argp_parse@@Base+0x1978>
   167bc:	mov	r0, r4
   167c0:	bl	111bc <strlen@plt>
   167c4:	subs	r6, r0, #0
   167c8:	bne	168f4 <argp_failure@@Base+0x10c0>
   167cc:	cmp	r5, r4
   167d0:	bne	1693c <argp_failure@@Base+0x1108>
   167d4:	ldr	r3, [sl, #28]
   167d8:	ldr	r2, [sl, #24]
   167dc:	sub	r3, r3, r2
   167e0:	ldr	r2, [sl, #16]
   167e4:	cmp	r3, r2
   167e8:	bhi	16948 <argp_failure@@Base+0x1114>
   167ec:	mov	r3, #0
   167f0:	str	r3, [sl, #4]
   167f4:	ldr	r2, [sl, #28]
   167f8:	ldr	r3, [sl, #32]
   167fc:	cmp	r2, r3
   16800:	bcs	16954 <argp_failure@@Base+0x1120>
   16804:	ldr	r3, [sl, #28]
   16808:	add	r2, r3, #1
   1680c:	str	r2, [sl, #28]
   16810:	mov	r2, #10
   16814:	strb	r2, [r3]
   16818:	str	r9, [fp, #-88]	; 0xffffffa8
   1681c:	ldr	r3, [sl, #28]
   16820:	ldr	r2, [sl, #24]
   16824:	sub	r3, r3, r2
   16828:	ldr	r2, [sl, #16]
   1682c:	cmp	r3, r2
   16830:	bhi	1696c <argp_failure@@Base+0x1138>
   16834:	ldr	r3, [fp, #-120]	; 0xffffff88
   16838:	str	r3, [sl, #4]
   1683c:	ldr	r3, [sl, #28]
   16840:	ldr	r2, [sl, #24]
   16844:	sub	r3, r3, r2
   16848:	ldr	r2, [sl, #16]
   1684c:	cmp	r3, r2
   16850:	bhi	16978 <argp_failure@@Base+0x1144>
   16854:	ldr	r3, [fp, #-124]	; 0xffffff84
   16858:	str	r3, [sl, #12]
   1685c:	add	r9, r9, #28
   16860:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16864:	subs	r3, r3, #1
   16868:	str	r3, [fp, #-116]	; 0xffffff8c
   1686c:	beq	16984 <argp_failure@@Base+0x1150>
   16870:	ldr	r4, [r9]
   16874:	ldr	r8, [r9, #8]
   16878:	ldr	r3, [sl, #28]
   1687c:	ldr	r2, [sl, #24]
   16880:	sub	r3, r3, r2
   16884:	ldr	r2, [sl, #16]
   16888:	cmp	r3, r2
   1688c:	bhi	16298 <argp_failure@@Base+0xa64>
   16890:	ldr	r3, [sl, #4]
   16894:	str	r3, [fp, #-120]	; 0xffffff88
   16898:	mov	r3, #0
   1689c:	str	r3, [sl, #4]
   168a0:	ldr	r3, [sl, #12]
   168a4:	str	r3, [fp, #-124]	; 0xffffff84
   168a8:	str	r9, [fp, #-76]	; 0xffffffb4
   168ac:	str	sl, [fp, #-72]	; 0xffffffb8
   168b0:	sub	r3, fp, #88	; 0x58
   168b4:	str	r3, [fp, #-68]	; 0xffffffbc
   168b8:	mov	r3, #1
   168bc:	str	r3, [fp, #-64]	; 0xffffffc0
   168c0:	ldr	r3, [fp, #-104]	; 0xffffff98
   168c4:	str	r3, [fp, #-60]	; 0xffffffc4
   168c8:	ldr	r3, [r4, #12]
   168cc:	ands	r3, r3, #8
   168d0:	str	r3, [fp, #-112]	; 0xffffff90
   168d4:	movne	r3, #0
   168d8:	strne	r3, [fp, #-112]	; 0xffffff90
   168dc:	bne	162d0 <argp_failure@@Base+0xa9c>
   168e0:	ldr	r2, [r9, #4]
   168e4:	cmp	r2, #0
   168e8:	beq	162d0 <argp_failure@@Base+0xa9c>
   168ec:	add	r3, r4, #24
   168f0:	b	162b0 <argp_failure@@Base+0xa7c>
   168f4:	ldr	r3, [sl, #28]
   168f8:	add	r3, r3, r6
   168fc:	ldr	r2, [sl, #32]
   16900:	cmp	r2, r3
   16904:	bcs	1691c <argp_failure@@Base+0x10e8>
   16908:	mov	r1, r6
   1690c:	mov	r0, sl
   16910:	bl	18130 <argp_error@@Base+0x1414>
   16914:	cmp	r0, #0
   16918:	beq	167cc <argp_failure@@Base+0xf98>
   1691c:	mov	r2, r6
   16920:	mov	r1, r4
   16924:	ldr	r0, [sl, #28]
   16928:	bl	11084 <memcpy@plt>
   1692c:	ldr	r3, [sl, #28]
   16930:	add	r6, r3, r6
   16934:	str	r6, [sl, #28]
   16938:	b	167cc <argp_failure@@Base+0xf98>
   1693c:	mov	r0, r4
   16940:	bl	1338c <argp_parse@@Base+0xcd8>
   16944:	b	167d4 <argp_failure@@Base+0xfa0>
   16948:	mov	r0, sl
   1694c:	bl	17bb8 <argp_error@@Base+0xe9c>
   16950:	b	167ec <argp_failure@@Base+0xfb8>
   16954:	mov	r1, #1
   16958:	mov	r0, sl
   1695c:	bl	18130 <argp_error@@Base+0x1414>
   16960:	cmp	r0, #0
   16964:	bne	16804 <argp_failure@@Base+0xfd0>
   16968:	b	16818 <argp_failure@@Base+0xfe4>
   1696c:	mov	r0, sl
   16970:	bl	17bb8 <argp_error@@Base+0xe9c>
   16974:	b	16834 <argp_failure@@Base+0x1000>
   16978:	mov	r0, sl
   1697c:	bl	17bb8 <argp_error@@Base+0xe9c>
   16980:	b	16854 <argp_failure@@Base+0x1020>
   16984:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16988:	cmp	r3, #0
   1698c:	beq	169f0 <argp_failure@@Base+0x11bc>
   16990:	movw	r3, #41468	; 0xa1fc
   16994:	movt	r3, #2
   16998:	ldr	r3, [r3, #4]
   1699c:	cmp	r3, #0
   169a0:	beq	169f0 <argp_failure@@Base+0x11bc>
   169a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   169a8:	cmp	r3, #0
   169ac:	ldrne	r2, [r3]
   169b0:	ldreq	r2, [fp, #-104]	; 0xffffff98
   169b4:	ldr	r3, [fp, #-104]	; 0xffffff98
   169b8:	mov	r1, #5
   169bc:	movt	r1, #512	; 0x200
   169c0:	movw	r0, #36684	; 0x8f4c
   169c4:	movt	r0, #1
   169c8:	bl	13cdc <argp_parse@@Base+0x1628>
   169cc:	subs	r4, r0, #0
   169d0:	beq	169f0 <argp_failure@@Base+0x11bc>
   169d4:	ldrb	r3, [r4]
   169d8:	cmp	r3, #0
   169dc:	bne	16a84 <argp_failure@@Base+0x1250>
   169e0:	movw	r3, #36684	; 0x8f4c
   169e4:	movt	r3, #1
   169e8:	cmp	r4, r3
   169ec:	bne	16b58 <argp_failure@@Base+0x1324>
   169f0:	mov	r4, #1
   169f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   169f8:	tst	r3, #32
   169fc:	bne	16b64 <argp_failure@@Base+0x1330>
   16a00:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a04:	tst	r3, #64	; 0x40
   16a08:	beq	16a44 <argp_failure@@Base+0x1210>
   16a0c:	movw	r3, #41628	; 0xa29c
   16a10:	movt	r3, #2
   16a14:	ldr	r3, [r3]
   16a18:	cmp	r3, #0
   16a1c:	beq	16a44 <argp_failure@@Base+0x1210>
   16a20:	cmp	r4, #0
   16a24:	bne	16b8c <argp_failure@@Base+0x1358>
   16a28:	movw	r3, #41628	; 0xa29c
   16a2c:	movt	r3, #2
   16a30:	ldr	r2, [r3]
   16a34:	movw	r1, #36800	; 0x8fc0
   16a38:	movt	r1, #1
   16a3c:	mov	r0, sl
   16a40:	bl	18230 <argp_error@@Base+0x1514>
   16a44:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16a48:	bl	110d8 <funlockfile@plt>
   16a4c:	ldr	r3, [fp, #-128]	; 0xffffff80
   16a50:	cmp	r3, #0
   16a54:	beq	16a60 <argp_failure@@Base+0x122c>
   16a58:	mov	r0, r3
   16a5c:	bl	13b54 <argp_parse@@Base+0x14a0>
   16a60:	mov	r0, sl
   16a64:	bl	180e4 <argp_error@@Base+0x13c8>
   16a68:	sub	sp, fp, #32
   16a6c:	ldrd	r4, [sp]
   16a70:	ldrd	r6, [sp, #8]
   16a74:	ldrd	r8, [sp, #16]
   16a78:	ldrd	sl, [sp, #24]
   16a7c:	add	sp, sp, #32
   16a80:	pop	{pc}		; (ldr pc, [sp], #4)
   16a84:	ldr	r2, [sl, #28]
   16a88:	ldr	r3, [sl, #32]
   16a8c:	cmp	r2, r3
   16a90:	bcs	16ae0 <argp_failure@@Base+0x12ac>
   16a94:	ldr	r3, [sl, #28]
   16a98:	add	r2, r3, #1
   16a9c:	str	r2, [sl, #28]
   16aa0:	mov	r2, #10
   16aa4:	strb	r2, [r3]
   16aa8:	mov	r0, r4
   16aac:	bl	111bc <strlen@plt>
   16ab0:	subs	r5, r0, #0
   16ab4:	bne	16af8 <argp_failure@@Base+0x12c4>
   16ab8:	ldr	r2, [sl, #28]
   16abc:	ldr	r3, [sl, #32]
   16ac0:	cmp	r2, r3
   16ac4:	bcs	16b40 <argp_failure@@Base+0x130c>
   16ac8:	ldr	r3, [sl, #28]
   16acc:	add	r2, r3, #1
   16ad0:	str	r2, [sl, #28]
   16ad4:	mov	r2, #10
   16ad8:	strb	r2, [r3]
   16adc:	b	169e0 <argp_failure@@Base+0x11ac>
   16ae0:	mov	r1, #1
   16ae4:	mov	r0, sl
   16ae8:	bl	18130 <argp_error@@Base+0x1414>
   16aec:	cmp	r0, #0
   16af0:	bne	16a94 <argp_failure@@Base+0x1260>
   16af4:	b	16aa8 <argp_failure@@Base+0x1274>
   16af8:	ldr	r3, [sl, #28]
   16afc:	add	r3, r3, r5
   16b00:	ldr	r2, [sl, #32]
   16b04:	cmp	r2, r3
   16b08:	bcs	16b20 <argp_failure@@Base+0x12ec>
   16b0c:	mov	r1, r5
   16b10:	mov	r0, sl
   16b14:	bl	18130 <argp_error@@Base+0x1414>
   16b18:	cmp	r0, #0
   16b1c:	beq	16ab8 <argp_failure@@Base+0x1284>
   16b20:	mov	r2, r5
   16b24:	mov	r1, r4
   16b28:	ldr	r0, [sl, #28]
   16b2c:	bl	11084 <memcpy@plt>
   16b30:	ldr	r3, [sl, #28]
   16b34:	add	r5, r3, r5
   16b38:	str	r5, [sl, #28]
   16b3c:	b	16ab8 <argp_failure@@Base+0x1284>
   16b40:	mov	r1, #1
   16b44:	mov	r0, sl
   16b48:	bl	18130 <argp_error@@Base+0x1414>
   16b4c:	cmp	r0, #0
   16b50:	bne	16ac8 <argp_failure@@Base+0x1294>
   16b54:	b	169e0 <argp_failure@@Base+0x11ac>
   16b58:	mov	r0, r4
   16b5c:	bl	1338c <argp_parse@@Base+0xcd8>
   16b60:	b	169f0 <argp_failure@@Base+0x11bc>
   16b64:	str	sl, [sp, #4]
   16b68:	mov	r3, #0
   16b6c:	str	r3, [sp]
   16b70:	mov	r3, r4
   16b74:	mov	r2, #1
   16b78:	ldr	r1, [fp, #-104]	; 0xffffff98
   16b7c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16b80:	bl	14860 <argp_parse@@Base+0x21ac>
   16b84:	orr	r4, r4, r0
   16b88:	b	16a00 <argp_failure@@Base+0x11cc>
   16b8c:	ldr	r2, [sl, #28]
   16b90:	ldr	r3, [sl, #32]
   16b94:	cmp	r2, r3
   16b98:	bcs	16bb4 <argp_failure@@Base+0x1380>
   16b9c:	ldr	r3, [sl, #28]
   16ba0:	add	r2, r3, #1
   16ba4:	str	r2, [sl, #28]
   16ba8:	mov	r2, #10
   16bac:	strb	r2, [r3]
   16bb0:	b	16a28 <argp_failure@@Base+0x11f4>
   16bb4:	mov	r1, #1
   16bb8:	mov	r0, sl
   16bbc:	bl	18130 <argp_error@@Base+0x1414>
   16bc0:	cmp	r0, #0
   16bc4:	bne	16b9c <argp_failure@@Base+0x1368>
   16bc8:	b	16a28 <argp_failure@@Base+0x11f4>
   16bcc:	ldrb	r3, [r6]
   16bd0:	mov	r4, r6
   16bd4:	mov	r7, #0
   16bd8:	b	15c3c <argp_failure@@Base+0x408>
   16bdc:	ldrb	r3, [r8]
   16be0:	cmp	r3, r7
   16be4:	beq	16318 <argp_failure@@Base+0xae4>
   16be8:	add	r5, r5, #24
   16bec:	subs	r6, r6, #1
   16bf0:	beq	16408 <argp_failure@@Base+0xbd4>
   16bf4:	ldr	r9, [r5, #12]
   16bf8:	tst	r9, #8
   16bfc:	bne	16be8 <argp_failure@@Base+0x13b4>
   16c00:	ldr	r7, [r5, #4]
   16c04:	sub	r3, r7, #1
   16c08:	cmp	r3, #254	; 0xfe
   16c0c:	bhi	16be8 <argp_failure@@Base+0x13b4>
   16c10:	bl	111a4 <__ctype_b_loc@plt>
   16c14:	ldr	r2, [r0]
   16c18:	lsl	r3, r7, #1
   16c1c:	ldrh	r3, [r2, r3]
   16c20:	tst	r3, #16384	; 0x4000
   16c24:	bne	16bdc <argp_failure@@Base+0x13a8>
   16c28:	b	16be8 <argp_failure@@Base+0x13b4>
   16c2c:	andeq	r8, r1, r8, asr #24

00016c30 <argp_help@@Base>:
   16c30:	push	{lr}		; (str lr, [sp, #-4]!)
   16c34:	sub	sp, sp, #12
   16c38:	str	r3, [sp]
   16c3c:	mov	r3, r2
   16c40:	mov	r2, r1
   16c44:	mov	r1, #0
   16c48:	bl	15a50 <argp_failure@@Base+0x21c>
   16c4c:	add	sp, sp, #12
   16c50:	pop	{pc}		; (ldr pc, [sp], #4)

00016c54 <argp_state_help@@Base>:
   16c54:	strd	r4, [sp, #-12]!
   16c58:	str	lr, [sp, #8]
   16c5c:	sub	sp, sp, #12
   16c60:	mov	r5, r2
   16c64:	subs	r4, r0, #0
   16c68:	beq	16c88 <argp_state_help@@Base+0x34>
   16c6c:	ldr	r3, [r4, #16]
   16c70:	tst	r3, #2
   16c74:	beq	16cc8 <argp_state_help@@Base+0x74>
   16c78:	add	sp, sp, #12
   16c7c:	ldrd	r4, [sp]
   16c80:	add	sp, sp, #8
   16c84:	pop	{pc}		; (ldr pc, [sp], #4)
   16c88:	cmp	r1, #0
   16c8c:	beq	16c78 <argp_state_help@@Base+0x24>
   16c90:	movw	r3, #41528	; 0xa238
   16c94:	movt	r3, #2
   16c98:	ldr	r3, [r3]
   16c9c:	str	r3, [sp]
   16ca0:	mov	r3, r2
   16ca4:	mov	r2, r1
   16ca8:	mov	r1, #0
   16cac:	mov	r0, r1
   16cb0:	bl	15a50 <argp_failure@@Base+0x21c>
   16cb4:	b	16d04 <argp_state_help@@Base+0xb0>
   16cb8:	movw	r3, #41520	; 0xa230
   16cbc:	movt	r3, #2
   16cc0:	ldr	r0, [r3]
   16cc4:	bl	111b0 <exit@plt>
   16cc8:	cmp	r1, #0
   16ccc:	beq	16c78 <argp_state_help@@Base+0x24>
   16cd0:	ldr	r3, [r4, #16]
   16cd4:	tst	r3, #64	; 0x40
   16cd8:	orrne	r5, r5, #128	; 0x80
   16cdc:	ldr	r3, [r4, #40]	; 0x28
   16ce0:	str	r3, [sp]
   16ce4:	mov	r3, r5
   16ce8:	mov	r2, r1
   16cec:	mov	r1, r4
   16cf0:	ldr	r0, [r4]
   16cf4:	bl	15a50 <argp_failure@@Base+0x21c>
   16cf8:	ldr	r3, [r4, #16]
   16cfc:	tst	r3, #32
   16d00:	bne	16c78 <argp_state_help@@Base+0x24>
   16d04:	tst	r5, #256	; 0x100
   16d08:	bne	16cb8 <argp_state_help@@Base+0x64>
   16d0c:	tst	r5, #512	; 0x200
   16d10:	beq	16c78 <argp_state_help@@Base+0x24>
   16d14:	mov	r0, #0
   16d18:	bl	111b0 <exit@plt>

00016d1c <argp_error@@Base>:
   16d1c:	push	{r1, r2, r3}
   16d20:	strd	r4, [sp, #-12]!
   16d24:	str	lr, [sp, #8]
   16d28:	sub	sp, sp, #8
   16d2c:	subs	r5, r0, #0
   16d30:	beq	16e08 <argp_error@@Base+0xec>
   16d34:	ldr	r3, [r5, #16]
   16d38:	tst	r3, #2
   16d3c:	bne	16df0 <argp_error@@Base+0xd4>
   16d40:	ldr	r4, [r5, #44]	; 0x2c
   16d44:	cmp	r4, #0
   16d48:	beq	16df0 <argp_error@@Base+0xd4>
   16d4c:	mov	r0, r4
   16d50:	bl	11294 <flockfile@plt>
   16d54:	add	r3, sp, #24
   16d58:	str	r3, [sp, #4]
   16d5c:	ldr	r0, [r5, #40]	; 0x28
   16d60:	mov	r1, r4
   16d64:	bl	10fe8 <fputs_unlocked@plt>
   16d68:	ldr	r3, [r4, #20]
   16d6c:	ldr	r2, [r4, #24]
   16d70:	cmp	r3, r2
   16d74:	addcc	r2, r3, #1
   16d78:	strcc	r2, [r4, #20]
   16d7c:	movcc	r2, #58	; 0x3a
   16d80:	strbcc	r2, [r3]
   16d84:	bcs	16e3c <argp_error@@Base+0x120>
   16d88:	ldr	r3, [r4, #20]
   16d8c:	ldr	r2, [r4, #24]
   16d90:	cmp	r3, r2
   16d94:	addcc	r2, r3, #1
   16d98:	strcc	r2, [r4, #20]
   16d9c:	movcc	r2, #32
   16da0:	strbcc	r2, [r3]
   16da4:	bcs	16e4c <argp_error@@Base+0x130>
   16da8:	ldr	r2, [sp, #4]
   16dac:	ldr	r1, [sp, #20]
   16db0:	mov	r0, r4
   16db4:	bl	11270 <vfprintf@plt>
   16db8:	ldr	r3, [r4, #20]
   16dbc:	ldr	r2, [r4, #24]
   16dc0:	cmp	r3, r2
   16dc4:	addcc	r2, r3, #1
   16dc8:	strcc	r2, [r4, #20]
   16dcc:	movcc	r2, #10
   16dd0:	strbcc	r2, [r3]
   16dd4:	bcs	16e5c <argp_error@@Base+0x140>
   16dd8:	mov	r2, #260	; 0x104
   16ddc:	mov	r1, r4
   16de0:	mov	r0, r5
   16de4:	bl	16c54 <argp_state_help@@Base>
   16de8:	mov	r0, r4
   16dec:	bl	110d8 <funlockfile@plt>
   16df0:	add	sp, sp, #8
   16df4:	ldrd	r4, [sp]
   16df8:	ldr	lr, [sp, #8]
   16dfc:	add	sp, sp, #12
   16e00:	add	sp, sp, #12
   16e04:	bx	lr
   16e08:	movw	r3, #41536	; 0xa240
   16e0c:	movt	r3, #2
   16e10:	ldr	r4, [r3]
   16e14:	cmp	r4, #0
   16e18:	beq	16df0 <argp_error@@Base+0xd4>
   16e1c:	mov	r0, r4
   16e20:	bl	11294 <flockfile@plt>
   16e24:	add	r3, sp, #24
   16e28:	str	r3, [sp, #4]
   16e2c:	movw	r3, #41528	; 0xa238
   16e30:	movt	r3, #2
   16e34:	ldr	r0, [r3]
   16e38:	b	16d60 <argp_error@@Base+0x44>
   16e3c:	mov	r1, #58	; 0x3a
   16e40:	mov	r0, r4
   16e44:	bl	11240 <__overflow@plt>
   16e48:	b	16d88 <argp_error@@Base+0x6c>
   16e4c:	mov	r1, #32
   16e50:	mov	r0, r4
   16e54:	bl	11240 <__overflow@plt>
   16e58:	b	16da8 <argp_error@@Base+0x8c>
   16e5c:	mov	r1, #10
   16e60:	mov	r0, r4
   16e64:	bl	11240 <__overflow@plt>
   16e68:	b	16dd8 <argp_error@@Base+0xbc>
   16e6c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   16e70:	strd	r6, [sp, #8]
   16e74:	strd	r8, [sp, #16]
   16e78:	str	lr, [sp, #24]
   16e7c:	ldr	r5, [r1, #28]
   16e80:	ldr	r6, [r1, #32]
   16e84:	ldr	r8, [r1]
   16e88:	add	r7, r0, r6, lsl #2
   16e8c:	b	16ebc <argp_error@@Base+0x1a0>
   16e90:	add	r3, r0, r5, lsl #2
   16e94:	add	r4, r9, r5
   16e98:	add	r4, r0, r4, lsl #2
   16e9c:	mov	r2, r7
   16ea0:	ldr	ip, [r3]
   16ea4:	ldr	lr, [r2]
   16ea8:	str	lr, [r3], #4
   16eac:	str	ip, [r2], #4
   16eb0:	cmp	r3, r4
   16eb4:	bne	16ea0 <argp_error@@Base+0x184>
   16eb8:	add	r5, r5, r9
   16ebc:	cmp	r8, r6
   16ec0:	movle	r3, #0
   16ec4:	movgt	r3, #1
   16ec8:	cmp	r5, r6
   16ecc:	movge	r3, #0
   16ed0:	cmp	r3, #0
   16ed4:	beq	16f18 <argp_error@@Base+0x1fc>
   16ed8:	sub	r9, r8, r6
   16edc:	sub	r3, r6, r5
   16ee0:	cmp	r9, r3
   16ee4:	ble	16e90 <argp_error@@Base+0x174>
   16ee8:	add	r2, r0, r5, lsl #2
   16eec:	sub	r9, r8, r3
   16ef0:	add	r3, r0, r9, lsl #2
   16ef4:	add	r4, r0, r8, lsl #2
   16ef8:	ldr	ip, [r2]
   16efc:	ldr	lr, [r3]
   16f00:	str	lr, [r2], #4
   16f04:	str	ip, [r3], #4
   16f08:	cmp	r3, r4
   16f0c:	bne	16ef8 <argp_error@@Base+0x1dc>
   16f10:	mov	r8, r9
   16f14:	b	16ebc <argp_error@@Base+0x1a0>
   16f18:	ldr	r0, [r1]
   16f1c:	ldr	r3, [r1, #32]
   16f20:	sub	r2, r0, r3
   16f24:	ldr	r3, [r1, #28]
   16f28:	add	r3, r3, r2
   16f2c:	str	r3, [r1, #28]
   16f30:	str	r0, [r1, #32]
   16f34:	ldrd	r4, [sp]
   16f38:	ldrd	r6, [sp, #8]
   16f3c:	ldrd	r8, [sp, #16]
   16f40:	add	sp, sp, #24
   16f44:	pop	{pc}		; (ldr pc, [sp], #4)
   16f48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16f4c:	strd	r6, [sp, #8]
   16f50:	strd	r8, [sp, #16]
   16f54:	strd	sl, [sp, #24]
   16f58:	str	lr, [sp, #32]
   16f5c:	sub	sp, sp, #52	; 0x34
   16f60:	str	r0, [sp, #32]
   16f64:	str	r1, [sp, #20]
   16f68:	str	r2, [sp, #28]
   16f6c:	str	r3, [sp, #16]
   16f70:	ldr	fp, [sp, #96]	; 0x60
   16f74:	ldr	r9, [fp, #20]
   16f78:	ldrb	r3, [r9]
   16f7c:	cmp	r3, #0
   16f80:	cmpne	r3, #61	; 0x3d
   16f84:	beq	16fbc <argp_error@@Base+0x2a0>
   16f88:	mov	r8, r9
   16f8c:	ldrb	r3, [r8, #1]!
   16f90:	cmp	r3, #0
   16f94:	cmpne	r3, #61	; 0x3d
   16f98:	bne	16f8c <argp_error@@Base+0x270>
   16f9c:	sub	r7, r8, r9
   16fa0:	ldr	r5, [sp, #16]
   16fa4:	ldr	sl, [r5]
   16fa8:	cmp	sl, #0
   16fac:	beq	17480 <argp_error@@Base+0x764>
   16fb0:	mov	r4, sl
   16fb4:	mov	r6, #0
   16fb8:	b	16fd4 <argp_error@@Base+0x2b8>
   16fbc:	mov	r8, r9
   16fc0:	b	16f9c <argp_error@@Base+0x280>
   16fc4:	add	r6, r6, #1
   16fc8:	ldr	r4, [r5, #16]!
   16fcc:	cmp	r4, #0
   16fd0:	beq	17484 <argp_error@@Base+0x768>
   16fd4:	str	r5, [sp, #12]
   16fd8:	mov	r2, r7
   16fdc:	mov	r1, r9
   16fe0:	mov	r0, r4
   16fe4:	bl	112b8 <strncmp@plt>
   16fe8:	cmp	r0, #0
   16fec:	bne	16fc4 <argp_error@@Base+0x2a8>
   16ff0:	mov	r0, r4
   16ff4:	bl	111bc <strlen@plt>
   16ff8:	cmp	r0, r7
   16ffc:	bne	16fc4 <argp_error@@Base+0x2a8>
   17000:	cmp	r5, #0
   17004:	beq	1748c <argp_error@@Base+0x770>
   17008:	ldr	r3, [fp]
   1700c:	add	r2, r3, #1
   17010:	str	r2, [fp]
   17014:	mov	r1, #0
   17018:	str	r1, [fp, #20]
   1701c:	ldrb	r1, [r8]
   17020:	cmp	r1, #0
   17024:	beq	173d4 <argp_error@@Base+0x6b8>
   17028:	ldr	r3, [sp, #12]
   1702c:	ldr	r3, [r3, #4]
   17030:	cmp	r3, #0
   17034:	beq	17380 <argp_error@@Base+0x664>
   17038:	add	r8, r8, #1
   1703c:	str	r8, [fp, #12]
   17040:	ldr	r3, [sp, #88]	; 0x58
   17044:	cmp	r3, #0
   17048:	strne	r6, [r3]
   1704c:	ldr	r2, [sp, #12]
   17050:	ldr	r3, [r2, #8]
   17054:	cmp	r3, #0
   17058:	beq	1746c <argp_error@@Base+0x750>
   1705c:	ldr	r2, [r2, #12]
   17060:	str	r2, [r3]
   17064:	mov	r0, #0
   17068:	add	sp, sp, #52	; 0x34
   1706c:	ldrd	r4, [sp]
   17070:	ldrd	r6, [sp, #8]
   17074:	ldrd	r8, [sp, #16]
   17078:	ldrd	sl, [sp, #24]
   1707c:	add	sp, sp, #32
   17080:	pop	{pc}		; (ldr pc, [sp], #4)
   17084:	ldr	r2, [sl, #8]
   17088:	ldr	r3, [r9, #8]
   1708c:	cmp	r2, r3
   17090:	bne	17150 <argp_error@@Base+0x434>
   17094:	ldr	r2, [sl, #12]
   17098:	ldr	r3, [r9, #12]
   1709c:	cmp	r2, r3
   170a0:	bne	17150 <argp_error@@Base+0x434>
   170a4:	b	17108 <argp_error@@Base+0x3ec>
   170a8:	mov	r0, r6
   170ac:	bl	139f4 <argp_parse@@Base+0x1340>
   170b0:	subs	r3, r0, #0
   170b4:	str	r3, [sp, #24]
   170b8:	beq	17180 <argp_error@@Base+0x464>
   170bc:	mov	r2, r6
   170c0:	mov	r1, #0
   170c4:	ldr	r7, [sp, #24]
   170c8:	mov	r0, r7
   170cc:	bl	11210 <memset@plt>
   170d0:	ldr	r2, [sp, #36]	; 0x24
   170d4:	mov	r1, #1
   170d8:	strb	r1, [r7, r2]
   170dc:	ldr	r3, [sp, #44]	; 0x2c
   170e0:	str	r3, [sp, #40]	; 0x28
   170e4:	b	17170 <argp_error@@Base+0x454>
   170e8:	ldr	r3, [sp, #24]
   170ec:	cmp	r3, #0
   170f0:	moveq	r5, #1
   170f4:	beq	17108 <argp_error@@Base+0x3ec>
   170f8:	mov	r5, #1
   170fc:	b	17170 <argp_error@@Base+0x454>
   17100:	str	r4, [sp, #36]	; 0x24
   17104:	mov	sl, r9
   17108:	add	r4, r4, #1
   1710c:	ldr	r0, [r9, #16]!
   17110:	cmp	r0, #0
   17114:	beq	17188 <argp_error@@Base+0x46c>
   17118:	ldr	r2, [sp, #12]
   1711c:	ldr	r1, [fp, #20]
   17120:	bl	112b8 <strncmp@plt>
   17124:	cmp	r0, #0
   17128:	bne	17108 <argp_error@@Base+0x3ec>
   1712c:	cmp	sl, #0
   17130:	beq	17100 <argp_error@@Base+0x3e4>
   17134:	ldr	r3, [sp, #92]	; 0x5c
   17138:	cmp	r3, #0
   1713c:	bne	17150 <argp_error@@Base+0x434>
   17140:	ldr	r2, [sl, #4]
   17144:	ldr	r3, [r9, #4]
   17148:	cmp	r2, r3
   1714c:	beq	17084 <argp_error@@Base+0x368>
   17150:	cmp	r5, #0
   17154:	bne	17108 <argp_error@@Base+0x3ec>
   17158:	ldr	r3, [sp, #100]	; 0x64
   1715c:	cmp	r3, #0
   17160:	beq	170e8 <argp_error@@Base+0x3cc>
   17164:	ldr	r3, [sp, #24]
   17168:	cmp	r3, #0
   1716c:	beq	170a8 <argp_error@@Base+0x38c>
   17170:	ldr	r3, [sp, #24]
   17174:	mov	r2, #1
   17178:	strb	r2, [r3, r4]
   1717c:	b	17108 <argp_error@@Base+0x3ec>
   17180:	mov	r5, #1
   17184:	b	17108 <argp_error@@Base+0x3ec>
   17188:	str	sl, [sp, #12]
   1718c:	ldr	r3, [sp, #24]
   17190:	orrs	r3, r3, r5
   17194:	bne	1720c <argp_error@@Base+0x4f0>
   17198:	ldr	r3, [sp, #12]
   1719c:	cmp	r3, #0
   171a0:	bne	17378 <argp_error@@Base+0x65c>
   171a4:	ldr	r3, [sp, #92]	; 0x5c
   171a8:	cmp	r3, #0
   171ac:	beq	171e0 <argp_error@@Base+0x4c4>
   171b0:	ldr	r3, [fp]
   171b4:	ldr	r2, [sp, #20]
   171b8:	ldr	r3, [r2, r3, lsl #2]
   171bc:	ldrb	r3, [r3, #1]
   171c0:	cmp	r3, #45	; 0x2d
   171c4:	beq	171e0 <argp_error@@Base+0x4c4>
   171c8:	ldr	r3, [fp, #20]
   171cc:	ldrb	r1, [r3]
   171d0:	ldr	r0, [sp, #28]
   171d4:	bl	111c8 <strchr@plt>
   171d8:	cmp	r0, #0
   171dc:	bne	17478 <argp_error@@Base+0x75c>
   171e0:	ldr	r3, [sp, #100]	; 0x64
   171e4:	cmp	r3, #0
   171e8:	bne	17348 <argp_error@@Base+0x62c>
   171ec:	mov	r2, #0
   171f0:	str	r2, [fp, #20]
   171f4:	ldr	r3, [fp]
   171f8:	add	r3, r3, #1
   171fc:	str	r3, [fp]
   17200:	str	r2, [fp, #8]
   17204:	mov	r0, #63	; 0x3f
   17208:	b	17068 <argp_error@@Base+0x34c>
   1720c:	ldr	r3, [sp, #100]	; 0x64
   17210:	cmp	r3, #0
   17214:	beq	1724c <argp_error@@Base+0x530>
   17218:	cmp	r5, #0
   1721c:	beq	17288 <argp_error@@Base+0x56c>
   17220:	movw	r0, #41536	; 0xa240
   17224:	movt	r0, #2
   17228:	ldr	r3, [fp, #20]
   1722c:	str	r3, [sp]
   17230:	ldr	r3, [sp, #104]	; 0x68
   17234:	ldr	r2, [sp, #20]
   17238:	ldr	r2, [r2]
   1723c:	movw	r1, #36820	; 0x8fd4
   17240:	movt	r1, #1
   17244:	ldr	r0, [r0]
   17248:	bl	111d4 <fprintf@plt>
   1724c:	ldr	r3, [sp, #40]	; 0x28
   17250:	cmp	r3, #0
   17254:	bne	1733c <argp_error@@Base+0x620>
   17258:	ldr	r4, [fp, #20]
   1725c:	mov	r0, r4
   17260:	bl	111bc <strlen@plt>
   17264:	add	r0, r4, r0
   17268:	str	r0, [fp, #20]
   1726c:	ldr	r3, [fp]
   17270:	add	r3, r3, #1
   17274:	str	r3, [fp]
   17278:	mov	r3, #0
   1727c:	str	r3, [fp, #8]
   17280:	mov	r0, #63	; 0x3f
   17284:	b	17068 <argp_error@@Base+0x34c>
   17288:	movw	r4, #41536	; 0xa240
   1728c:	movt	r4, #2
   17290:	ldr	r0, [r4]
   17294:	bl	11294 <flockfile@plt>
   17298:	ldr	r3, [fp, #20]
   1729c:	str	r3, [sp]
   172a0:	ldr	r3, [sp, #104]	; 0x68
   172a4:	ldr	r2, [sp, #20]
   172a8:	ldr	r2, [r2]
   172ac:	movw	r1, #36852	; 0x8ff4
   172b0:	movt	r1, #1
   172b4:	ldr	r0, [r4]
   172b8:	bl	111d4 <fprintf@plt>
   172bc:	cmp	r6, #0
   172c0:	ble	1731c <argp_error@@Base+0x600>
   172c4:	ldr	r2, [sp, #24]
   172c8:	sub	r4, r2, #1
   172cc:	sub	r3, r6, #1
   172d0:	add	r8, r2, r3
   172d4:	movw	r7, #36900	; 0x9024
   172d8:	movt	r7, #1
   172dc:	movw	r6, #41536	; 0xa240
   172e0:	movt	r6, #2
   172e4:	ldr	r9, [sp, #16]
   172e8:	b	172f8 <argp_error@@Base+0x5dc>
   172ec:	add	r5, r5, #1
   172f0:	cmp	r8, r4
   172f4:	beq	1731c <argp_error@@Base+0x600>
   172f8:	ldrb	r3, [r4, #1]!
   172fc:	cmp	r3, #0
   17300:	beq	172ec <argp_error@@Base+0x5d0>
   17304:	ldr	r3, [r9, r5, lsl #4]
   17308:	ldr	r2, [sp, #104]	; 0x68
   1730c:	mov	r1, r7
   17310:	ldr	r0, [r6]
   17314:	bl	111d4 <fprintf@plt>
   17318:	b	172ec <argp_error@@Base+0x5d0>
   1731c:	movw	r4, #41536	; 0xa240
   17320:	movt	r4, #2
   17324:	ldr	r1, [r4]
   17328:	mov	r0, #10
   1732c:	bl	1127c <fputc@plt>
   17330:	ldr	r0, [r4]
   17334:	bl	110d8 <funlockfile@plt>
   17338:	b	1724c <argp_error@@Base+0x530>
   1733c:	ldr	r0, [sp, #24]
   17340:	bl	1338c <argp_parse@@Base+0xcd8>
   17344:	b	17258 <argp_error@@Base+0x53c>
   17348:	movw	r0, #41536	; 0xa240
   1734c:	movt	r0, #2
   17350:	ldr	r3, [fp, #20]
   17354:	str	r3, [sp]
   17358:	ldr	r3, [sp, #104]	; 0x68
   1735c:	ldr	r2, [sp, #20]
   17360:	ldr	r2, [r2]
   17364:	movw	r1, #36908	; 0x902c
   17368:	movt	r1, #1
   1736c:	ldr	r0, [r0]
   17370:	bl	111d4 <fprintf@plt>
   17374:	b	171ec <argp_error@@Base+0x4d0>
   17378:	ldr	r6, [sp, #36]	; 0x24
   1737c:	b	17008 <argp_error@@Base+0x2ec>
   17380:	ldr	r3, [sp, #100]	; 0x64
   17384:	cmp	r3, #0
   17388:	bne	173a0 <argp_error@@Base+0x684>
   1738c:	ldr	r3, [sp, #12]
   17390:	ldr	r3, [r3, #12]
   17394:	str	r3, [fp, #8]
   17398:	mov	r0, #63	; 0x3f
   1739c:	b	17068 <argp_error@@Base+0x34c>
   173a0:	movw	r0, #41536	; 0xa240
   173a4:	movt	r0, #2
   173a8:	ldr	r3, [sp, #12]
   173ac:	ldr	r3, [r3]
   173b0:	str	r3, [sp]
   173b4:	ldr	r3, [sp, #104]	; 0x68
   173b8:	ldr	r2, [sp, #20]
   173bc:	ldr	r2, [r2]
   173c0:	movw	r1, #36940	; 0x904c
   173c4:	movt	r1, #1
   173c8:	ldr	r0, [r0]
   173cc:	bl	111d4 <fprintf@plt>
   173d0:	b	1738c <argp_error@@Base+0x670>
   173d4:	ldr	r1, [sp, #12]
   173d8:	ldr	r1, [r1, #4]
   173dc:	cmp	r1, #1
   173e0:	bne	17040 <argp_error@@Base+0x324>
   173e4:	ldr	r1, [sp, #32]
   173e8:	cmp	r2, r1
   173ec:	bge	17408 <argp_error@@Base+0x6ec>
   173f0:	add	r3, r3, #2
   173f4:	str	r3, [fp]
   173f8:	ldr	r3, [sp, #20]
   173fc:	ldr	r3, [r3, r2, lsl #2]
   17400:	str	r3, [fp, #12]
   17404:	b	17040 <argp_error@@Base+0x324>
   17408:	ldr	r3, [sp, #100]	; 0x64
   1740c:	cmp	r3, #0
   17410:	bne	17438 <argp_error@@Base+0x71c>
   17414:	ldr	r3, [sp, #12]
   17418:	ldr	r3, [r3, #12]
   1741c:	str	r3, [fp, #8]
   17420:	ldr	r3, [sp, #28]
   17424:	ldrb	r3, [r3]
   17428:	cmp	r3, #58	; 0x3a
   1742c:	moveq	r0, #58	; 0x3a
   17430:	movne	r0, #63	; 0x3f
   17434:	b	17068 <argp_error@@Base+0x34c>
   17438:	movw	r0, #41536	; 0xa240
   1743c:	movt	r0, #2
   17440:	ldr	r3, [sp, #12]
   17444:	ldr	r3, [r3]
   17448:	str	r3, [sp]
   1744c:	ldr	r3, [sp, #104]	; 0x68
   17450:	ldr	r2, [sp, #20]
   17454:	ldr	r2, [r2]
   17458:	movw	r1, #36988	; 0x907c
   1745c:	movt	r1, #1
   17460:	ldr	r0, [r0]
   17464:	bl	111d4 <fprintf@plt>
   17468:	b	17414 <argp_error@@Base+0x6f8>
   1746c:	ldr	r3, [sp, #12]
   17470:	ldr	r0, [r3, #12]
   17474:	b	17068 <argp_error@@Base+0x34c>
   17478:	mvn	r0, #0
   1747c:	b	17068 <argp_error@@Base+0x34c>
   17480:	mov	r6, #0
   17484:	cmp	sl, #0
   17488:	beq	171a4 <argp_error@@Base+0x488>
   1748c:	ldr	r9, [sp, #16]
   17490:	mvn	r3, #0
   17494:	str	r3, [sp, #36]	; 0x24
   17498:	mov	r5, #0
   1749c:	str	r5, [sp, #40]	; 0x28
   174a0:	str	r5, [sp, #24]
   174a4:	mov	r4, r5
   174a8:	mov	r3, #1
   174ac:	str	r3, [sp, #44]	; 0x2c
   174b0:	mov	r0, sl
   174b4:	mov	sl, r5
   174b8:	str	r7, [sp, #12]
   174bc:	b	17118 <argp_error@@Base+0x3fc>
   174c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   174c4:	strd	r6, [sp, #8]
   174c8:	strd	r8, [sp, #16]
   174cc:	strd	sl, [sp, #24]
   174d0:	str	lr, [sp, #32]
   174d4:	sub	sp, sp, #36	; 0x24
   174d8:	str	r3, [sp, #24]
   174dc:	ldr	r4, [sp, #80]	; 0x50
   174e0:	ldr	r8, [r4, #4]
   174e4:	subs	r5, r0, #0
   174e8:	ble	17a24 <argp_error@@Base+0xd08>
   174ec:	mov	r9, r1
   174f0:	mov	r6, r2
   174f4:	mov	r3, #0
   174f8:	str	r3, [r4, #12]
   174fc:	ldr	r3, [r4]
   17500:	cmp	r3, #0
   17504:	beq	17528 <argp_error@@Base+0x80c>
   17508:	ldr	r3, [r4, #16]
   1750c:	cmp	r3, #0
   17510:	beq	17530 <argp_error@@Base+0x814>
   17514:	ldrb	r3, [r2]
   17518:	sub	r3, r3, #43	; 0x2b
   1751c:	tst	r3, #253	; 0xfd
   17520:	addeq	r6, r2, #1
   17524:	b	1758c <argp_error@@Base+0x870>
   17528:	mov	r3, #1
   1752c:	str	r3, [r4]
   17530:	ldr	r3, [r4]
   17534:	str	r3, [r4, #32]
   17538:	str	r3, [r4, #28]
   1753c:	mov	r3, #0
   17540:	str	r3, [r4, #20]
   17544:	ldrb	r3, [r6]
   17548:	cmp	r3, #45	; 0x2d
   1754c:	moveq	r3, #2
   17550:	streq	r3, [r4, #24]
   17554:	addeq	r6, r6, #1
   17558:	beq	17584 <argp_error@@Base+0x868>
   1755c:	cmp	r3, #43	; 0x2b
   17560:	moveq	r3, #0
   17564:	streq	r3, [r4, #24]
   17568:	addeq	r6, r6, #1
   1756c:	beq	17584 <argp_error@@Base+0x868>
   17570:	ldr	r3, [sp, #84]	; 0x54
   17574:	cmp	r3, #0
   17578:	beq	1764c <argp_error@@Base+0x930>
   1757c:	mov	r3, #0
   17580:	str	r3, [r4, #24]
   17584:	mov	r3, #1
   17588:	str	r3, [r4, #16]
   1758c:	ldrb	r3, [r6]
   17590:	cmp	r3, #58	; 0x3a
   17594:	moveq	r8, #0
   17598:	ldr	r3, [r4, #20]
   1759c:	cmp	r3, #0
   175a0:	beq	175b0 <argp_error@@Base+0x894>
   175a4:	ldrb	r3, [r3]
   175a8:	cmp	r3, #0
   175ac:	bne	17750 <argp_error@@Base+0xa34>
   175b0:	ldr	r3, [r4]
   175b4:	ldr	r2, [r4, #32]
   175b8:	cmp	r2, r3
   175bc:	strgt	r3, [r4, #32]
   175c0:	ldr	r2, [r4, #28]
   175c4:	cmp	r3, r2
   175c8:	strlt	r3, [r4, #28]
   175cc:	ldr	r2, [r4, #24]
   175d0:	cmp	r2, #1
   175d4:	beq	1766c <argp_error@@Base+0x950>
   175d8:	ldr	r7, [r4]
   175dc:	cmp	r7, r5
   175e0:	beq	1762c <argp_error@@Base+0x910>
   175e4:	ldr	sl, [r9, r7, lsl #2]
   175e8:	movw	r1, #34696	; 0x8788
   175ec:	movt	r1, #1
   175f0:	mov	r0, sl
   175f4:	bl	10ff4 <strcmp@plt>
   175f8:	cmp	r0, #0
   175fc:	bne	17a34 <argp_error@@Base+0xd18>
   17600:	add	r7, r7, #1
   17604:	str	r7, [r4]
   17608:	ldr	r2, [r4, #28]
   1760c:	ldr	r3, [r4, #32]
   17610:	cmp	r2, r3
   17614:	cmpne	r7, r3
   17618:	bne	176e8 <argp_error@@Base+0x9cc>
   1761c:	cmp	r2, r3
   17620:	streq	r7, [r4, #28]
   17624:	str	r5, [r4, #32]
   17628:	str	r5, [r4]
   1762c:	ldr	r3, [r4, #28]
   17630:	ldr	r2, [r4, #32]
   17634:	cmp	r3, r2
   17638:	mvneq	r0, #0
   1763c:	beq	17a60 <argp_error@@Base+0xd44>
   17640:	str	r3, [r4]
   17644:	mvn	r0, #0
   17648:	b	17a60 <argp_error@@Base+0xd44>
   1764c:	movw	r0, #37028	; 0x90a4
   17650:	movt	r0, #1
   17654:	bl	1112c <getenv@plt>
   17658:	cmp	r0, #0
   1765c:	bne	1757c <argp_error@@Base+0x860>
   17660:	mov	r3, #1
   17664:	str	r3, [r4, #24]
   17668:	b	17584 <argp_error@@Base+0x868>
   1766c:	ldr	r2, [r4, #32]
   17670:	ldr	r1, [r4, #28]
   17674:	cmp	r1, r2
   17678:	cmpne	r3, r2
   1767c:	bne	1769c <argp_error@@Base+0x980>
   17680:	cmp	r3, r2
   17684:	strne	r3, [r4, #28]
   17688:	ldr	r3, [r4]
   1768c:	cmp	r5, r3
   17690:	ble	176e0 <argp_error@@Base+0x9c4>
   17694:	add	r1, r9, r3, lsl #2
   17698:	b	176bc <argp_error@@Base+0x9a0>
   1769c:	mov	r1, r4
   176a0:	mov	r0, r9
   176a4:	bl	16e6c <argp_error@@Base+0x150>
   176a8:	b	17688 <argp_error@@Base+0x96c>
   176ac:	add	r3, r3, #1
   176b0:	str	r3, [r4]
   176b4:	cmp	r3, r5
   176b8:	beq	176dc <argp_error@@Base+0x9c0>
   176bc:	ldr	r2, [r1], #4
   176c0:	ldrb	r0, [r2]
   176c4:	cmp	r0, #45	; 0x2d
   176c8:	bne	176ac <argp_error@@Base+0x990>
   176cc:	ldrb	r2, [r2, #1]
   176d0:	cmp	r2, #0
   176d4:	beq	176ac <argp_error@@Base+0x990>
   176d8:	b	176e0 <argp_error@@Base+0x9c4>
   176dc:	mov	r3, r5
   176e0:	str	r3, [r4, #32]
   176e4:	b	175d8 <argp_error@@Base+0x8bc>
   176e8:	mov	r1, r4
   176ec:	mov	r0, r9
   176f0:	bl	16e6c <argp_error@@Base+0x150>
   176f4:	b	17624 <argp_error@@Base+0x908>
   176f8:	ldrb	r1, [sl, #1]
   176fc:	cmp	r1, #0
   17700:	beq	17a40 <argp_error@@Base+0xd24>
   17704:	ldr	r3, [sp, #24]
   17708:	cmp	r3, #0
   1770c:	beq	17740 <argp_error@@Base+0xa24>
   17710:	cmp	r1, #45	; 0x2d
   17714:	beq	177bc <argp_error@@Base+0xaa0>
   17718:	ldr	r3, [sp, #76]	; 0x4c
   1771c:	cmp	r3, #0
   17720:	beq	17740 <argp_error@@Base+0xa24>
   17724:	ldrb	r3, [sl, #2]
   17728:	cmp	r3, #0
   1772c:	bne	17800 <argp_error@@Base+0xae4>
   17730:	mov	r0, r6
   17734:	bl	111c8 <strchr@plt>
   17738:	cmp	r0, #0
   1773c:	beq	17800 <argp_error@@Base+0xae4>
   17740:	ldr	r3, [r4]
   17744:	ldr	r3, [r9, r3, lsl #2]
   17748:	add	r3, r3, #1
   1774c:	str	r3, [r4, #20]
   17750:	ldr	sl, [r4, #20]
   17754:	add	fp, sl, #1
   17758:	str	fp, [r4, #20]
   1775c:	ldrb	r7, [sl]
   17760:	str	r7, [sp, #28]
   17764:	mov	r1, r7
   17768:	mov	r0, r6
   1776c:	bl	111c8 <strchr@plt>
   17770:	ldrb	r3, [sl, #1]
   17774:	cmp	r3, #0
   17778:	bne	17788 <argp_error@@Base+0xa6c>
   1777c:	ldr	r3, [r4]
   17780:	add	r3, r3, #1
   17784:	str	r3, [r4]
   17788:	sub	r3, r7, #58	; 0x3a
   1778c:	uxtb	r3, r3
   17790:	cmp	r0, #0
   17794:	cmpne	r3, #1
   17798:	bls	1784c <argp_error@@Base+0xb30>
   1779c:	ldrb	r3, [r0]
   177a0:	cmp	r3, #87	; 0x57
   177a4:	beq	17888 <argp_error@@Base+0xb6c>
   177a8:	ldrb	r3, [r0, #1]
   177ac:	cmp	r3, #58	; 0x3a
   177b0:	beq	1795c <argp_error@@Base+0xc40>
   177b4:	mov	r0, r7
   177b8:	b	17a60 <argp_error@@Base+0xd44>
   177bc:	add	sl, sl, #2
   177c0:	str	sl, [r4, #20]
   177c4:	movw	r3, #34696	; 0x8788
   177c8:	movt	r3, #1
   177cc:	str	r3, [sp, #16]
   177d0:	str	r8, [sp, #12]
   177d4:	str	r4, [sp, #8]
   177d8:	ldr	r3, [sp, #76]	; 0x4c
   177dc:	str	r3, [sp, #4]
   177e0:	ldr	r3, [sp, #72]	; 0x48
   177e4:	str	r3, [sp]
   177e8:	ldr	r3, [sp, #24]
   177ec:	mov	r2, r6
   177f0:	mov	r1, r9
   177f4:	mov	r0, r5
   177f8:	bl	16f48 <argp_error@@Base+0x22c>
   177fc:	b	17a60 <argp_error@@Base+0xd44>
   17800:	add	sl, sl, #1
   17804:	str	sl, [r4, #20]
   17808:	movw	r3, #37044	; 0x90b4
   1780c:	movt	r3, #1
   17810:	str	r3, [sp, #16]
   17814:	str	r8, [sp, #12]
   17818:	str	r4, [sp, #8]
   1781c:	ldr	r3, [sp, #76]	; 0x4c
   17820:	str	r3, [sp, #4]
   17824:	ldr	r3, [sp, #72]	; 0x48
   17828:	str	r3, [sp]
   1782c:	ldr	r3, [sp, #24]
   17830:	mov	r2, r6
   17834:	mov	r1, r9
   17838:	mov	r0, r5
   1783c:	bl	16f48 <argp_error@@Base+0x22c>
   17840:	cmn	r0, #1
   17844:	bne	17a60 <argp_error@@Base+0xd44>
   17848:	b	17740 <argp_error@@Base+0xa24>
   1784c:	cmp	r8, #0
   17850:	bne	17864 <argp_error@@Base+0xb48>
   17854:	ldr	r3, [sp, #28]
   17858:	str	r3, [r4, #8]
   1785c:	mov	r0, #63	; 0x3f
   17860:	b	17a60 <argp_error@@Base+0xd44>
   17864:	movw	r0, #41536	; 0xa240
   17868:	movt	r0, #2
   1786c:	ldr	r3, [sp, #28]
   17870:	ldr	r2, [r9]
   17874:	movw	r1, #37048	; 0x90b8
   17878:	movt	r1, #1
   1787c:	ldr	r0, [r0]
   17880:	bl	111d4 <fprintf@plt>
   17884:	b	17854 <argp_error@@Base+0xb38>
   17888:	ldrb	r1, [r0, #1]
   1788c:	ldr	r2, [sp, #24]
   17890:	cmp	r1, #59	; 0x3b
   17894:	movne	r3, #0
   17898:	moveq	r3, #1
   1789c:	cmp	r2, #0
   178a0:	moveq	r3, #0
   178a4:	cmp	r3, #0
   178a8:	beq	177a8 <argp_error@@Base+0xa8c>
   178ac:	ldrb	r3, [sl, #1]
   178b0:	cmp	r3, #0
   178b4:	strne	fp, [r4, #12]
   178b8:	bne	178d0 <argp_error@@Base+0xbb4>
   178bc:	ldr	r3, [r4]
   178c0:	cmp	r3, r5
   178c4:	beq	17918 <argp_error@@Base+0xbfc>
   178c8:	ldr	r3, [r9, r3, lsl #2]
   178cc:	str	r3, [r4, #12]
   178d0:	ldr	r3, [r4, #12]
   178d4:	str	r3, [r4, #20]
   178d8:	mov	r2, #0
   178dc:	str	r2, [r4, #12]
   178e0:	movw	r3, #37120	; 0x9100
   178e4:	movt	r3, #1
   178e8:	str	r3, [sp, #16]
   178ec:	str	r8, [sp, #12]
   178f0:	str	r4, [sp, #8]
   178f4:	str	r2, [sp, #4]
   178f8:	ldr	r3, [sp, #72]	; 0x48
   178fc:	str	r3, [sp]
   17900:	ldr	r3, [sp, #24]
   17904:	mov	r2, r6
   17908:	mov	r1, r9
   1790c:	mov	r0, r5
   17910:	bl	16f48 <argp_error@@Base+0x22c>
   17914:	b	17a60 <argp_error@@Base+0xd44>
   17918:	cmp	r8, #0
   1791c:	bne	17938 <argp_error@@Base+0xc1c>
   17920:	ldr	r3, [sp, #28]
   17924:	str	r3, [r4, #8]
   17928:	ldrb	r0, [r6]
   1792c:	cmp	r0, #58	; 0x3a
   17930:	movne	r0, #63	; 0x3f
   17934:	b	17a60 <argp_error@@Base+0xd44>
   17938:	movw	r0, #41536	; 0xa240
   1793c:	movt	r0, #2
   17940:	ldr	r3, [sp, #28]
   17944:	ldr	r2, [r9]
   17948:	movw	r1, #37076	; 0x90d4
   1794c:	movt	r1, #1
   17950:	ldr	r0, [r0]
   17954:	bl	111d4 <fprintf@plt>
   17958:	b	17920 <argp_error@@Base+0xc04>
   1795c:	ldrb	r3, [r0, #2]
   17960:	cmp	r3, #58	; 0x3a
   17964:	beq	17990 <argp_error@@Base+0xc74>
   17968:	ldrb	r3, [sl, #1]
   1796c:	cmp	r3, #0
   17970:	beq	179c0 <argp_error@@Base+0xca4>
   17974:	str	fp, [r4, #12]
   17978:	ldr	r3, [r4]
   1797c:	add	r3, r3, #1
   17980:	str	r3, [r4]
   17984:	mov	r3, #0
   17988:	str	r3, [r4, #20]
   1798c:	b	177b4 <argp_error@@Base+0xa98>
   17990:	ldrb	r3, [sl, #1]
   17994:	cmp	r3, #0
   17998:	moveq	r3, #0
   1799c:	streq	r3, [r4, #12]
   179a0:	beq	179b4 <argp_error@@Base+0xc98>
   179a4:	str	fp, [r4, #12]
   179a8:	ldr	r3, [r4]
   179ac:	add	r3, r3, #1
   179b0:	str	r3, [r4]
   179b4:	mov	r3, #0
   179b8:	str	r3, [r4, #20]
   179bc:	b	177b4 <argp_error@@Base+0xa98>
   179c0:	ldr	r3, [r4]
   179c4:	cmp	r3, r5
   179c8:	beq	179e0 <argp_error@@Base+0xcc4>
   179cc:	add	r2, r3, #1
   179d0:	str	r2, [r4]
   179d4:	ldr	r3, [r9, r3, lsl #2]
   179d8:	str	r3, [r4, #12]
   179dc:	b	17984 <argp_error@@Base+0xc68>
   179e0:	cmp	r8, #0
   179e4:	bne	17a00 <argp_error@@Base+0xce4>
   179e8:	ldr	r3, [sp, #28]
   179ec:	str	r3, [r4, #8]
   179f0:	ldrb	r7, [r6]
   179f4:	cmp	r7, #58	; 0x3a
   179f8:	movne	r7, #63	; 0x3f
   179fc:	b	17984 <argp_error@@Base+0xc68>
   17a00:	movw	r0, #41536	; 0xa240
   17a04:	movt	r0, #2
   17a08:	ldr	r3, [sp, #28]
   17a0c:	ldr	r2, [r9]
   17a10:	movw	r1, #37076	; 0x90d4
   17a14:	movt	r1, #1
   17a18:	ldr	r0, [r0]
   17a1c:	bl	111d4 <fprintf@plt>
   17a20:	b	179e8 <argp_error@@Base+0xccc>
   17a24:	mvn	r0, #0
   17a28:	b	17a60 <argp_error@@Base+0xd44>
   17a2c:	mvn	r0, #0
   17a30:	b	17a60 <argp_error@@Base+0xd44>
   17a34:	ldrb	r3, [sl]
   17a38:	cmp	r3, #45	; 0x2d
   17a3c:	beq	176f8 <argp_error@@Base+0x9dc>
   17a40:	ldr	r3, [r4, #24]
   17a44:	cmp	r3, #0
   17a48:	beq	17a2c <argp_error@@Base+0xd10>
   17a4c:	add	r3, r7, #1
   17a50:	str	r3, [r4]
   17a54:	ldr	r3, [r9, r7, lsl #2]
   17a58:	str	r3, [r4, #12]
   17a5c:	mov	r0, #1
   17a60:	add	sp, sp, #36	; 0x24
   17a64:	ldrd	r4, [sp]
   17a68:	ldrd	r6, [sp, #8]
   17a6c:	ldrd	r8, [sp, #16]
   17a70:	ldrd	sl, [sp, #24]
   17a74:	add	sp, sp, #32
   17a78:	pop	{pc}		; (ldr pc, [sp], #4)
   17a7c:	strd	r4, [sp, #-12]!
   17a80:	str	lr, [sp, #8]
   17a84:	sub	sp, sp, #20
   17a88:	movw	r4, #41588	; 0xa274
   17a8c:	movt	r4, #2
   17a90:	movw	r5, #41508	; 0xa224
   17a94:	movt	r5, #2
   17a98:	ldr	ip, [r5]
   17a9c:	str	ip, [r4]
   17aa0:	ldr	ip, [r5, #4]
   17aa4:	str	ip, [r4, #4]
   17aa8:	ldr	ip, [sp, #40]	; 0x28
   17aac:	str	ip, [sp, #12]
   17ab0:	str	r4, [sp, #8]
   17ab4:	ldr	ip, [sp, #36]	; 0x24
   17ab8:	str	ip, [sp, #4]
   17abc:	ldr	ip, [sp, #32]
   17ac0:	str	ip, [sp]
   17ac4:	bl	174c0 <argp_error@@Base+0x7a4>
   17ac8:	ldr	r3, [r4]
   17acc:	str	r3, [r5]
   17ad0:	movw	r3, #41636	; 0xa2a4
   17ad4:	movt	r3, #2
   17ad8:	ldr	r2, [r4, #12]
   17adc:	str	r2, [r3]
   17ae0:	ldr	r3, [r4, #8]
   17ae4:	str	r3, [r5, #8]
   17ae8:	add	sp, sp, #20
   17aec:	ldrd	r4, [sp]
   17af0:	add	sp, sp, #8
   17af4:	pop	{pc}		; (ldr pc, [sp], #4)
   17af8:	push	{lr}		; (str lr, [sp, #-4]!)
   17afc:	sub	sp, sp, #20
   17b00:	mov	r3, #1
   17b04:	str	r3, [sp, #8]
   17b08:	mov	r3, #0
   17b0c:	str	r3, [sp, #4]
   17b10:	str	r3, [sp]
   17b14:	bl	17a7c <argp_error@@Base+0xd60>
   17b18:	add	sp, sp, #20
   17b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17b24:	strd	r6, [sp, #8]
   17b28:	str	r8, [sp, #16]
   17b2c:	str	lr, [sp, #20]
   17b30:	mov	r8, r0
   17b34:	mov	r7, r1
   17b38:	mov	r6, r2
   17b3c:	mov	r5, r3
   17b40:	mov	r0, #36	; 0x24
   17b44:	bl	139f4 <argp_parse@@Base+0x1340>
   17b48:	subs	r4, r0, #0
   17b4c:	beq	17b90 <argp_error@@Base+0xe74>
   17b50:	str	r8, [r4]
   17b54:	str	r7, [r4, #4]
   17b58:	str	r6, [r4, #8]
   17b5c:	str	r5, [r4, #12]
   17b60:	mov	r3, #0
   17b64:	str	r3, [r4, #20]
   17b68:	str	r3, [r4, #16]
   17b6c:	mov	r0, #200	; 0xc8
   17b70:	bl	139f4 <argp_parse@@Base+0x1340>
   17b74:	mov	r5, r0
   17b78:	str	r0, [r4, #24]
   17b7c:	cmp	r0, #0
   17b80:	strne	r0, [r4, #28]
   17b84:	addne	r5, r0, #200	; 0xc8
   17b88:	strne	r5, [r4, #32]
   17b8c:	beq	17ba8 <argp_error@@Base+0xe8c>
   17b90:	mov	r0, r4
   17b94:	ldrd	r4, [sp]
   17b98:	ldrd	r6, [sp, #8]
   17b9c:	ldr	r8, [sp, #16]
   17ba0:	add	sp, sp, #20
   17ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ba8:	mov	r0, r4
   17bac:	bl	1338c <argp_parse@@Base+0xcd8>
   17bb0:	mov	r4, r5
   17bb4:	b	17b90 <argp_error@@Base+0xe74>
   17bb8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17bbc:	strd	r6, [sp, #8]
   17bc0:	strd	r8, [sp, #16]
   17bc4:	strd	sl, [sp, #24]
   17bc8:	str	lr, [sp, #32]
   17bcc:	sub	sp, sp, #20
   17bd0:	mov	r4, r0
   17bd4:	ldr	r5, [r0, #24]
   17bd8:	ldr	r3, [r0, #16]
   17bdc:	add	r5, r5, r3
   17be0:	mov	sl, #32
   17be4:	str	sl, [sp, #8]
   17be8:	b	17cd0 <argp_error@@Base+0xfb4>
   17bec:	mov	r7, #0
   17bf0:	ldr	r0, [r4]
   17bf4:	ldr	r3, [r0, #20]
   17bf8:	ldr	r2, [r0, #24]
   17bfc:	cmp	r3, r2
   17c00:	addcc	r2, r3, #1
   17c04:	strcc	r2, [r0, #20]
   17c08:	strbcc	sl, [r3]
   17c0c:	bcs	17d3c <argp_error@@Base+0x1020>
   17c10:	add	r7, r7, #1
   17c14:	cmp	r6, r7
   17c18:	bne	17bf0 <argp_error@@Base+0xed4>
   17c1c:	str	r6, [r4, #20]
   17c20:	ldr	r8, [r4, #28]
   17c24:	sub	fp, r8, r5
   17c28:	mov	r2, fp
   17c2c:	mov	r1, #10
   17c30:	mov	r0, r5
   17c34:	bl	11228 <memchr@plt>
   17c38:	mov	r6, r0
   17c3c:	ldr	r3, [r4, #20]
   17c40:	cmp	r3, #0
   17c44:	movlt	r3, #0
   17c48:	strlt	r3, [r4, #20]
   17c4c:	cmp	r6, #0
   17c50:	beq	17d48 <argp_error@@Base+0x102c>
   17c54:	ldr	r0, [r4, #20]
   17c58:	ldr	r9, [r4, #8]
   17c5c:	sub	r3, r6, r5
   17c60:	add	r3, r3, r0
   17c64:	cmp	r3, r9
   17c68:	movlt	r3, #0
   17c6c:	strlt	r3, [r4, #20]
   17c70:	addlt	r5, r6, #1
   17c74:	blt	17cd0 <argp_error@@Base+0xfb4>
   17c78:	sub	r7, r9, #1
   17c7c:	ldr	r3, [r4, #12]
   17c80:	str	r3, [sp, #4]
   17c84:	cmp	r3, #0
   17c88:	bge	17d74 <argp_error@@Base+0x1058>
   17c8c:	cmp	r8, r6
   17c90:	bls	17e04 <argp_error@@Base+0x10e8>
   17c94:	sub	r0, r7, r0
   17c98:	sub	r2, r8, r6
   17c9c:	mov	r1, r6
   17ca0:	add	r0, r5, r0
   17ca4:	bl	11054 <memmove@plt>
   17ca8:	ldr	r3, [r4, #20]
   17cac:	sub	r7, r7, r3
   17cb0:	add	r7, r5, r7
   17cb4:	sub	r6, r7, r6
   17cb8:	ldr	r3, [r4, #28]
   17cbc:	sub	r6, r3, r6
   17cc0:	str	r6, [r4, #28]
   17cc4:	mov	r3, #0
   17cc8:	str	r3, [r4, #20]
   17ccc:	add	r5, r5, r9
   17cd0:	ldr	r8, [r4, #28]
   17cd4:	cmp	r8, r5
   17cd8:	bls	17e1c <argp_error@@Base+0x1100>
   17cdc:	ldr	r3, [r4, #20]
   17ce0:	cmp	r3, #0
   17ce4:	bne	17c20 <argp_error@@Base+0xf04>
   17ce8:	ldr	r6, [r4, #4]
   17cec:	cmp	r6, #0
   17cf0:	beq	180c8 <argp_error@@Base+0x13ac>
   17cf4:	add	r3, r8, r6
   17cf8:	ldr	r2, [r4, #32]
   17cfc:	cmp	r2, r3
   17d00:	bls	17bec <argp_error@@Base+0xed0>
   17d04:	add	r7, r5, r6
   17d08:	sub	r2, r8, r5
   17d0c:	mov	r1, r5
   17d10:	mov	r0, r7
   17d14:	bl	11054 <memmove@plt>
   17d18:	ldr	r3, [r4, #28]
   17d1c:	add	r3, r3, r6
   17d20:	str	r3, [r4, #28]
   17d24:	mov	r2, r6
   17d28:	mov	r1, sl
   17d2c:	mov	r0, r5
   17d30:	bl	11210 <memset@plt>
   17d34:	mov	r5, r7
   17d38:	b	17c1c <argp_error@@Base+0xf00>
   17d3c:	ldr	r1, [sp, #8]
   17d40:	bl	11240 <__overflow@plt>
   17d44:	b	17c10 <argp_error@@Base+0xef4>
   17d48:	ldr	r3, [r4, #20]
   17d4c:	add	r3, fp, r3
   17d50:	ldr	r7, [r4, #8]
   17d54:	cmp	r3, r7
   17d58:	bcc	17dfc <argp_error@@Base+0x10e0>
   17d5c:	sub	r7, r7, #1
   17d60:	ldr	r3, [r4, #12]
   17d64:	str	r3, [sp, #4]
   17d68:	cmp	r3, #0
   17d6c:	blt	17e04 <argp_error@@Base+0x10e8>
   17d70:	mov	r6, r8
   17d74:	ldr	r3, [r4, #20]
   17d78:	rsb	r3, r3, #1
   17d7c:	add	r7, r3, r7
   17d80:	adds	r7, r5, r7
   17d84:	bcs	180c0 <argp_error@@Base+0x13a4>
   17d88:	bl	111a4 <__ctype_b_loc@plt>
   17d8c:	ldr	r0, [r0]
   17d90:	mov	r3, r7
   17d94:	mov	r1, r3
   17d98:	sub	r3, r3, #1
   17d9c:	ldrb	r2, [r1]
   17da0:	lsl	r2, r2, #1
   17da4:	ldrh	r2, [r0, r2]
   17da8:	tst	r2, #1
   17dac:	bne	17e48 <argp_error@@Base+0x112c>
   17db0:	mov	r1, r3
   17db4:	cmp	r3, r5
   17db8:	bcs	17d94 <argp_error@@Base+0x1078>
   17dbc:	add	r9, r1, #1
   17dc0:	cmp	r9, r5
   17dc4:	bhi	17e84 <argp_error@@Base+0x1168>
   17dc8:	cmp	r6, r7
   17dcc:	bhi	17f20 <argp_error@@Base+0x1204>
   17dd0:	cmp	r7, r6
   17dd4:	beq	17f60 <argp_error@@Base+0x1244>
   17dd8:	bl	111a4 <__ctype_b_loc@plt>
   17ddc:	ldr	r2, [r0]
   17de0:	mov	r9, r7
   17de4:	ldrb	r3, [r9, #1]!
   17de8:	lsl	r3, r3, #1
   17dec:	ldrh	r3, [r2, r3]
   17df0:	tst	r3, #1
   17df4:	bne	17de4 <argp_error@@Base+0x10c8>
   17df8:	b	17e88 <argp_error@@Base+0x116c>
   17dfc:	str	r3, [r4, #20]
   17e00:	b	17e1c <argp_error@@Base+0x1100>
   17e04:	ldr	r3, [r4, #20]
   17e08:	add	r3, fp, r3
   17e0c:	str	r3, [r4, #20]
   17e10:	sub	r3, r7, r3
   17e14:	add	r8, r8, r3
   17e18:	str	r8, [r4, #28]
   17e1c:	ldr	r3, [r4, #28]
   17e20:	ldr	r2, [r4, #24]
   17e24:	sub	r3, r3, r2
   17e28:	str	r3, [r4, #16]
   17e2c:	add	sp, sp, #20
   17e30:	ldrd	r4, [sp]
   17e34:	ldrd	r6, [sp, #8]
   17e38:	ldrd	r8, [sp, #16]
   17e3c:	ldrd	sl, [sp, #24]
   17e40:	add	sp, sp, #32
   17e44:	pop	{pc}		; (ldr pc, [sp], #4)
   17e48:	add	r9, r1, #1
   17e4c:	cmp	r9, r5
   17e50:	bls	17dc8 <argp_error@@Base+0x10ac>
   17e54:	cmp	r5, r1
   17e58:	bhi	17e84 <argp_error@@Base+0x1168>
   17e5c:	sub	ip, r5, #1
   17e60:	mov	r1, r3
   17e64:	cmp	r3, ip
   17e68:	beq	17e84 <argp_error@@Base+0x1168>
   17e6c:	sub	r3, r3, #1
   17e70:	ldrb	r2, [r1]
   17e74:	lsl	r2, r2, #1
   17e78:	ldrh	r2, [r0, r2]
   17e7c:	tst	r2, #1
   17e80:	bne	17e60 <argp_error@@Base+0x1144>
   17e84:	add	r7, r1, #1
   17e88:	add	r3, fp, #1
   17e8c:	add	r3, r5, r3
   17e90:	cmp	r9, r3
   17e94:	beq	17f70 <argp_error@@Base+0x1254>
   17e98:	add	r3, r7, #1
   17e9c:	sub	r3, r9, r3
   17ea0:	ldr	r2, [sp, #4]
   17ea4:	cmp	r3, r2
   17ea8:	bge	17f84 <argp_error@@Base+0x1268>
   17eac:	cmp	r9, r8
   17eb0:	bcs	17f84 <argp_error@@Base+0x1268>
   17eb4:	ldr	r3, [r4, #32]
   17eb8:	sub	r3, r3, r8
   17ebc:	ldr	r2, [sp, #4]
   17ec0:	add	r2, r2, #1
   17ec4:	cmp	r3, r2
   17ec8:	bgt	1802c <argp_error@@Base+0x1310>
   17ecc:	ldr	r0, [r4, #24]
   17ed0:	cmp	r0, r7
   17ed4:	bcs	17ee8 <argp_error@@Base+0x11cc>
   17ed8:	ldr	r3, [r4]
   17edc:	sub	r2, r7, r0
   17ee0:	mov	r1, #1
   17ee4:	bl	1109c <fwrite_unlocked@plt>
   17ee8:	ldr	r0, [r4]
   17eec:	ldr	r3, [r0, #20]
   17ef0:	ldr	r2, [r0, #24]
   17ef4:	cmp	r3, r2
   17ef8:	addcc	r2, r3, #1
   17efc:	strcc	r2, [r0, #20]
   17f00:	movcc	r2, #10
   17f04:	strbcc	r2, [r3]
   17f08:	bcs	1806c <argp_error@@Base+0x1350>
   17f0c:	ldr	r8, [r4, #24]
   17f10:	sub	r5, r5, r8
   17f14:	add	fp, fp, r5
   17f18:	mov	r5, r8
   17f1c:	b	17f94 <argp_error@@Base+0x1278>
   17f20:	add	r9, r7, #1
   17f24:	str	r6, [sp, #12]
   17f28:	mov	r7, r9
   17f2c:	cmp	r9, r6
   17f30:	beq	17f58 <argp_error@@Base+0x123c>
   17f34:	bl	111a4 <__ctype_b_loc@plt>
   17f38:	add	r9, r9, #1
   17f3c:	ldrb	r3, [r7]
   17f40:	ldr	r2, [r0]
   17f44:	lsl	r3, r3, #1
   17f48:	ldrh	r3, [r2, r3]
   17f4c:	tst	r3, #1
   17f50:	beq	17f28 <argp_error@@Base+0x120c>
   17f54:	b	17dd8 <argp_error@@Base+0x10bc>
   17f58:	ldr	r6, [sp, #12]
   17f5c:	b	17dd0 <argp_error@@Base+0x10b4>
   17f60:	mov	r3, #0
   17f64:	str	r3, [r4, #20]
   17f68:	add	r5, r6, #1
   17f6c:	b	17cd0 <argp_error@@Base+0xfb4>
   17f70:	ldr	r3, [r4, #32]
   17f74:	sub	r3, r3, r7
   17f78:	ldr	r2, [sp, #4]
   17f7c:	cmp	r3, r2
   17f80:	ble	17eac <argp_error@@Base+0x1190>
   17f84:	mov	r3, #10
   17f88:	strb	r3, [r7], #1
   17f8c:	mov	r8, r5
   17f90:	mov	r5, r7
   17f94:	ldr	r3, [r4, #12]
   17f98:	sub	r2, r9, r5
   17f9c:	cmp	r2, r3
   17fa0:	bge	18078 <argp_error@@Base+0x135c>
   17fa4:	add	r2, fp, #1
   17fa8:	add	r2, r8, r2
   17fac:	cmp	r9, r2
   17fb0:	bne	17fc4 <argp_error@@Base+0x12a8>
   17fb4:	ldr	r2, [r4, #32]
   17fb8:	sub	r2, r2, r9
   17fbc:	cmp	r3, r2
   17fc0:	ble	18078 <argp_error@@Base+0x135c>
   17fc4:	cmp	r3, #0
   17fc8:	movgt	r6, #0
   17fcc:	ble	18000 <argp_error@@Base+0x12e4>
   17fd0:	ldr	r0, [r4]
   17fd4:	ldr	r3, [r0, #20]
   17fd8:	ldr	r2, [r0, #24]
   17fdc:	cmp	r3, r2
   17fe0:	addcc	r2, r3, #1
   17fe4:	strcc	r2, [r0, #20]
   17fe8:	strbcc	sl, [r3]
   17fec:	bcs	1809c <argp_error@@Base+0x1380>
   17ff0:	add	r6, r6, #1
   17ff4:	ldr	r3, [r4, #12]
   17ff8:	cmp	r3, r6
   17ffc:	bgt	17fd0 <argp_error@@Base+0x12b4>
   18000:	cmp	r5, r9
   18004:	bcc	180a8 <argp_error@@Base+0x138c>
   18008:	sub	r9, r9, r8
   1800c:	sub	fp, fp, r9
   18010:	add	fp, r5, fp
   18014:	str	fp, [r4, #28]
   18018:	ldr	r3, [r4, #12]
   1801c:	cmp	r3, #0
   18020:	mvneq	r3, #0
   18024:	str	r3, [r4, #20]
   18028:	b	17cd0 <argp_error@@Base+0xfb4>
   1802c:	sub	r8, r8, r9
   18030:	mov	r0, r2
   18034:	mov	r2, r8
   18038:	mov	r1, r9
   1803c:	add	r0, r7, r0
   18040:	bl	11054 <memmove@plt>
   18044:	ldr	r9, [r4, #12]
   18048:	add	r9, r9, #1
   1804c:	add	r9, r7, r9
   18050:	add	r8, r9, r8
   18054:	sub	fp, r8, r5
   18058:	mov	r3, #10
   1805c:	strb	r3, [r7], #1
   18060:	mov	r8, r5
   18064:	mov	r5, r7
   18068:	b	17f94 <argp_error@@Base+0x1278>
   1806c:	mov	r1, #10
   18070:	bl	11240 <__overflow@plt>
   18074:	b	17f0c <argp_error@@Base+0x11f0>
   18078:	cmp	r3, #0
   1807c:	movgt	r3, #0
   18080:	ble	18000 <argp_error@@Base+0x12e4>
   18084:	strb	sl, [r5], #1
   18088:	add	r3, r3, #1
   1808c:	ldr	r2, [r4, #12]
   18090:	cmp	r2, r3
   18094:	bgt	18084 <argp_error@@Base+0x1368>
   18098:	b	18000 <argp_error@@Base+0x12e4>
   1809c:	ldr	r1, [sp, #8]
   180a0:	bl	11240 <__overflow@plt>
   180a4:	b	17ff0 <argp_error@@Base+0x12d4>
   180a8:	add	r2, r8, fp
   180ac:	sub	r2, r2, r9
   180b0:	mov	r1, r9
   180b4:	mov	r0, r5
   180b8:	bl	11054 <memmove@plt>
   180bc:	b	18008 <argp_error@@Base+0x12ec>
   180c0:	mov	r1, r7
   180c4:	b	17dbc <argp_error@@Base+0x10a0>
   180c8:	sub	fp, r8, r5
   180cc:	mov	r2, fp
   180d0:	mov	r1, #10
   180d4:	mov	r0, r5
   180d8:	bl	11228 <memchr@plt>
   180dc:	mov	r6, r0
   180e0:	b	17c4c <argp_error@@Base+0xf30>
   180e4:	str	r4, [sp, #-8]!
   180e8:	str	lr, [sp, #4]
   180ec:	mov	r4, r0
   180f0:	bl	17bb8 <argp_error@@Base+0xe9c>
   180f4:	ldr	r2, [r4, #28]
   180f8:	ldr	r0, [r4, #24]
   180fc:	cmp	r2, r0
   18100:	bls	18114 <argp_error@@Base+0x13f8>
   18104:	ldr	r3, [r4]
   18108:	sub	r2, r2, r0
   1810c:	mov	r1, #1
   18110:	bl	1109c <fwrite_unlocked@plt>
   18114:	ldr	r0, [r4, #24]
   18118:	bl	1338c <argp_parse@@Base+0xcd8>
   1811c:	mov	r0, r4
   18120:	bl	1338c <argp_parse@@Base+0xcd8>
   18124:	ldr	r4, [sp]
   18128:	add	sp, sp, #4
   1812c:	pop	{pc}		; (ldr pc, [sp], #4)
   18130:	ldr	r3, [r0, #32]
   18134:	ldr	r2, [r0, #28]
   18138:	sub	r3, r3, r2
   1813c:	cmp	r3, r1
   18140:	bcc	1814c <argp_error@@Base+0x1430>
   18144:	mov	r0, #1
   18148:	bx	lr
   1814c:	strd	r4, [sp, #-16]!
   18150:	str	r6, [sp, #8]
   18154:	str	lr, [sp, #12]
   18158:	mov	r5, r1
   1815c:	mov	r4, r0
   18160:	bl	17bb8 <argp_error@@Base+0xe9c>
   18164:	ldr	r0, [r4, #24]
   18168:	ldr	r2, [r4, #28]
   1816c:	ldr	r3, [r4]
   18170:	sub	r2, r2, r0
   18174:	mov	r1, #1
   18178:	bl	1109c <fwrite_unlocked@plt>
   1817c:	ldr	r2, [r4, #28]
   18180:	ldr	r3, [r4, #24]
   18184:	sub	r1, r2, r3
   18188:	cmp	r1, r0
   1818c:	bne	181cc <argp_error@@Base+0x14b0>
   18190:	str	r3, [r4, #28]
   18194:	mov	r2, #0
   18198:	str	r2, [r4, #16]
   1819c:	ldr	r1, [r4, #32]
   181a0:	sub	r1, r1, r3
   181a4:	cmp	r1, r5
   181a8:	movcs	r0, #1
   181ac:	bcs	181f4 <argp_error@@Base+0x14d8>
   181b0:	adds	r5, r1, r5
   181b4:	bcc	18204 <argp_error@@Base+0x14e8>
   181b8:	bl	111ec <__errno_location@plt>
   181bc:	mov	r3, #12
   181c0:	str	r3, [r0]
   181c4:	mov	r0, #0
   181c8:	b	181f4 <argp_error@@Base+0x14d8>
   181cc:	sub	r2, r2, r0
   181d0:	str	r2, [r4, #28]
   181d4:	ldr	r1, [r4, #16]
   181d8:	sub	r1, r1, r0
   181dc:	str	r1, [r4, #16]
   181e0:	sub	r2, r2, r3
   181e4:	add	r1, r3, r0
   181e8:	mov	r0, r3
   181ec:	bl	11054 <memmove@plt>
   181f0:	mov	r0, #0
   181f4:	ldrd	r4, [sp]
   181f8:	ldr	r6, [sp, #8]
   181fc:	add	sp, sp, #12
   18200:	pop	{pc}		; (ldr pc, [sp], #4)
   18204:	mov	r1, r5
   18208:	mov	r0, r3
   1820c:	bl	182c0 <argp_error@@Base+0x15a4>
   18210:	cmp	r0, #0
   18214:	beq	181b8 <argp_error@@Base+0x149c>
   18218:	str	r0, [r4, #24]
   1821c:	add	r5, r0, r5
   18220:	str	r5, [r4, #32]
   18224:	str	r0, [r4, #28]
   18228:	mov	r0, #1
   1822c:	b	181f4 <argp_error@@Base+0x14d8>
   18230:	push	{r1, r2, r3}
   18234:	strd	r4, [sp, #-16]!
   18238:	str	r6, [sp, #8]
   1823c:	str	lr, [sp, #12]
   18240:	sub	sp, sp, #12
   18244:	mov	r5, r0
   18248:	mov	r1, #150	; 0x96
   1824c:	add	r6, sp, #32
   18250:	mov	r0, r5
   18254:	bl	18130 <argp_error@@Base+0x1414>
   18258:	cmp	r0, #0
   1825c:	beq	18290 <argp_error@@Base+0x1574>
   18260:	str	r6, [sp, #4]
   18264:	ldr	r0, [r5, #28]
   18268:	ldr	r4, [r5, #32]
   1826c:	sub	r4, r4, r0
   18270:	mov	r3, r6
   18274:	ldr	r2, [sp, #28]
   18278:	mov	r1, r4
   1827c:	bl	112a0 <vsnprintf@plt>
   18280:	cmp	r0, r4
   18284:	bcc	182b0 <argp_error@@Base+0x1594>
   18288:	add	r1, r0, #1
   1828c:	b	18250 <argp_error@@Base+0x1534>
   18290:	mvn	r0, #0
   18294:	add	sp, sp, #12
   18298:	ldrd	r4, [sp]
   1829c:	ldr	r6, [sp, #8]
   182a0:	ldr	lr, [sp, #12]
   182a4:	add	sp, sp, #16
   182a8:	add	sp, sp, #12
   182ac:	bx	lr
   182b0:	ldr	r2, [r5, #28]
   182b4:	add	r3, r2, r0
   182b8:	str	r3, [r5, #28]
   182bc:	b	18294 <argp_error@@Base+0x1578>
   182c0:	str	r4, [sp, #-8]!
   182c4:	str	lr, [sp, #4]
   182c8:	cmp	r0, #0
   182cc:	beq	182f0 <argp_error@@Base+0x15d4>
   182d0:	cmp	r1, #0
   182d4:	beq	182fc <argp_error@@Base+0x15e0>
   182d8:	cmp	r1, #0
   182dc:	blt	18308 <argp_error@@Base+0x15ec>
   182e0:	bl	110c0 <realloc@plt>
   182e4:	ldr	r4, [sp]
   182e8:	add	sp, sp, #4
   182ec:	pop	{pc}		; (ldr pc, [sp], #4)
   182f0:	mov	r0, r1
   182f4:	bl	139f4 <argp_parse@@Base+0x1340>
   182f8:	b	182e4 <argp_error@@Base+0x15c8>
   182fc:	bl	1338c <argp_parse@@Base+0xcd8>
   18300:	mov	r0, #0
   18304:	b	182e4 <argp_error@@Base+0x15c8>
   18308:	bl	111ec <__errno_location@plt>
   1830c:	mov	r3, #12
   18310:	str	r3, [r0]
   18314:	mov	r0, #0
   18318:	b	182e4 <argp_error@@Base+0x15c8>
   1831c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18320:	mov	r7, r0
   18324:	ldr	r6, [pc, #72]	; 18374 <argp_error@@Base+0x1658>
   18328:	ldr	r5, [pc, #72]	; 18378 <argp_error@@Base+0x165c>
   1832c:	add	r6, pc, r6
   18330:	add	r5, pc, r5
   18334:	sub	r6, r6, r5
   18338:	mov	r8, r1
   1833c:	mov	r9, r2
   18340:	bl	10fc8 <fputs_unlocked@plt-0x20>
   18344:	asrs	r6, r6, #2
   18348:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1834c:	mov	r4, #0
   18350:	add	r4, r4, #1
   18354:	ldr	r3, [r5], #4
   18358:	mov	r2, r9
   1835c:	mov	r1, r8
   18360:	mov	r0, r7
   18364:	blx	r3
   18368:	cmp	r6, r4
   1836c:	bne	18350 <argp_error@@Base+0x1634>
   18370:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18374:	ldrdeq	r1, [r1], -r8
   18378:	ldrdeq	r1, [r1], -r0
   1837c:	bx	lr

Disassembly of section .fini:

00018380 <.fini>:
   18380:	push	{r3, lr}
   18384:	pop	{r3, pc}
