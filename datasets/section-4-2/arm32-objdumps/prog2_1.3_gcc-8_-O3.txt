
../repos/prog2/1.3:     file format elf32-littlearm


Disassembly of section .init:

0001061c <.init>:
   1061c:	push	{r3, lr}
   10620:	bl	108a0 <_start@@Base+0x3c>
   10624:	pop	{r3, pc}

Disassembly of section .plt:

00010628 <printf@plt-0x14>:
   10628:	push	{lr}		; (str lr, [sp, #-4]!)
   1062c:	ldr	lr, [pc, #4]	; 10638 <printf@plt-0x4>
   10630:	add	lr, pc, lr
   10634:	ldr	pc, [lr, #8]!
   10638:	andeq	r0, r1, r8, asr #19

0001063c <printf@plt>:
   1063c:	add	ip, pc, #0, 12
   10640:	add	ip, ip, #16, 20	; 0x10000
   10644:	ldr	pc, [ip, #2504]!	; 0x9c8

00010648 <fopen@plt>:
   10648:	add	ip, pc, #0, 12
   1064c:	add	ip, ip, #16, 20	; 0x10000
   10650:	ldr	pc, [ip, #2496]!	; 0x9c0

00010654 <strcpy@plt>:
   10654:	add	ip, pc, #0, 12
   10658:	add	ip, ip, #16, 20	; 0x10000
   1065c:	ldr	pc, [ip, #2488]!	; 0x9b8

00010660 <__libc_start_main@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #16, 20	; 0x10000
   10668:	ldr	pc, [ip, #2480]!	; 0x9b0

0001066c <__gmon_start__@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #16, 20	; 0x10000
   10674:	ldr	pc, [ip, #2472]!	; 0x9a8

00010678 <memset@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #16, 20	; 0x10000
   10680:	ldr	pc, [ip, #2464]!	; 0x9a0

00010684 <fclose@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2456]!	; 0x998

00010690 <fseek@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2448]!	; 0x990

0001069c <abort@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2440]!	; 0x988

000106a8 <getc@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2432]!	; 0x980

Disassembly of section .text:

000106b4 <main@@Base>:
   106b4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   106b8:	movw	r1, #2520	; 0x9d8
   106bc:	movt	r1, #1
   106c0:	strd	r6, [sp, #8]
   106c4:	movw	r0, #2524	; 0x9dc
   106c8:	movt	r0, #1
   106cc:	strd	r8, [sp, #16]
   106d0:	movw	r6, #2548	; 0x9f4
   106d4:	movt	r6, #1
   106d8:	str	lr, [sp, #24]
   106dc:	sub	sp, sp, #2256	; 0x8d0
   106e0:	sub	sp, sp, #4
   106e4:	bl	10648 <fopen@plt>
   106e8:	mov	r4, r0
   106ec:	add	r7, sp, #204	; 0xcc
   106f0:	b	106fc <main@@Base+0x48>
   106f4:	cmp	r0, #60	; 0x3c
   106f8:	beq	10734 <main@@Base+0x80>
   106fc:	mov	r0, r4
   10700:	bl	106a8 <getc@plt>
   10704:	cmn	r0, #1
   10708:	bne	106f4 <main@@Base+0x40>
   1070c:	mov	r0, r4
   10710:	bl	10684 <fclose@plt>
   10714:	mov	r0, #0
   10718:	add	sp, sp, #2256	; 0x8d0
   1071c:	add	sp, sp, #4
   10720:	ldrd	r4, [sp]
   10724:	ldrd	r6, [sp, #8]
   10728:	ldrd	r8, [sp, #16]
   1072c:	add	sp, sp, #24
   10730:	pop	{pc}		; (ldr pc, [sp], #4)
   10734:	mov	r0, r4
   10738:	bl	106a8 <getc@plt>
   1073c:	cmp	r0, #97	; 0x61
   10740:	bne	106fc <main@@Base+0x48>
   10744:	add	r0, sp, #4
   10748:	mov	r2, #200	; 0xc8
   1074c:	mov	r1, #0
   10750:	mov	r8, r0
   10754:	bl	10678 <memset@plt>
   10758:	mov	r2, #1
   1075c:	mov	r1, #7
   10760:	mov	r0, r4
   10764:	mov	r5, #0
   10768:	bl	10690 <fseek@plt>
   1076c:	b	10778 <main@@Base+0xc4>
   10770:	add	r5, r5, #1
   10774:	strb	r0, [r8], #1
   10778:	mov	r0, r4
   1077c:	bl	106a8 <getc@plt>
   10780:	cmp	r0, #34	; 0x22
   10784:	bne	10770 <main@@Base+0xbc>
   10788:	add	r3, sp, #2256	; 0x8d0
   1078c:	mov	r8, #0
   10790:	add	r5, r3, r5
   10794:	add	r1, sp, #4
   10798:	mov	r0, r7
   1079c:	mvn	r9, #60	; 0x3c
   107a0:	strb	r8, [r5, #-2252]	; 0xfffff734
   107a4:	mov	r5, r8
   107a8:	bl	10654 <strcpy@plt>
   107ac:	mov	r1, r8
   107b0:	mov	r2, #200	; 0xc8
   107b4:	add	r0, sp, #4
   107b8:	mvn	r8, #94	; 0x5e
   107bc:	bl	10678 <memset@plt>
   107c0:	mov	r2, #1
   107c4:	mov	r0, r4
   107c8:	mov	r1, r2
   107cc:	bl	10690 <fseek@plt>
   107d0:	mov	r0, r4
   107d4:	bl	106a8 <getc@plt>
   107d8:	cmp	r0, #60	; 0x3c
   107dc:	add	r3, sp, #2256	; 0x8d0
   107e0:	add	r2, r3, r5
   107e4:	add	r3, r5, #1
   107e8:	beq	10818 <main@@Base+0x164>
   107ec:	cmp	r0, #225	; 0xe1
   107f0:	movne	r5, r3
   107f4:	strbne	r0, [r2, #-2252]	; 0xfffff734
   107f8:	bne	107d0 <main@@Base+0x11c>
   107fc:	add	r2, sp, #2256	; 0x8d0
   10800:	add	r3, r2, r3
   10804:	add	r2, r2, r5
   10808:	add	r5, r5, #2
   1080c:	strb	r9, [r2, #-2252]	; 0xfffff734
   10810:	strb	r8, [r3, #-2252]	; 0xfffff734
   10814:	b	107d0 <main@@Base+0x11c>
   10818:	add	r3, sp, #2256	; 0x8d0
   1081c:	add	r8, r7, #205	; 0xcd
   10820:	add	r5, r3, r5
   10824:	mov	r9, #0
   10828:	add	r1, sp, #4
   1082c:	mov	r0, r8
   10830:	strb	r9, [r5, #-2252]	; 0xfffff734
   10834:	bl	10654 <strcpy@plt>
   10838:	mov	r1, r9
   1083c:	mov	r2, #80	; 0x50
   10840:	add	r0, sp, #4
   10844:	bl	10678 <memset@plt>
   10848:	mov	r2, r7
   1084c:	mov	r1, r8
   10850:	mov	r0, r6
   10854:	add	r7, r7, #408	; 0x198
   10858:	add	r7, r7, #2
   1085c:	bl	1063c <printf@plt>
   10860:	b	106fc <main@@Base+0x48>

00010864 <_start@@Base>:
   10864:	mov	fp, #0
   10868:	mov	lr, #0
   1086c:	pop	{r1}		; (ldr r1, [sp], #4)
   10870:	mov	r2, sp
   10874:	push	{r2}		; (str r2, [sp, #-4]!)
   10878:	push	{r0}		; (str r0, [sp, #-4]!)
   1087c:	ldr	ip, [pc, #16]	; 10894 <_start@@Base+0x30>
   10880:	push	{ip}		; (str ip, [sp, #-4]!)
   10884:	ldr	r0, [pc, #12]	; 10898 <_start@@Base+0x34>
   10888:	ldr	r3, [pc, #12]	; 1089c <_start@@Base+0x38>
   1088c:	bl	10660 <__libc_start_main@plt>
   10890:	bl	1069c <abort@plt>
   10894:	andeq	r0, r1, r8, asr #19
   10898:			; <UNDEFINED> instruction: 0x000106b4
   1089c:	andeq	r0, r1, r8, ror #18
   108a0:	ldr	r3, [pc, #20]	; 108bc <_start@@Base+0x58>
   108a4:	ldr	r2, [pc, #20]	; 108c0 <_start@@Base+0x5c>
   108a8:	add	r3, pc, r3
   108ac:	ldr	r2, [r3, r2]
   108b0:	cmp	r2, #0
   108b4:	bxeq	lr
   108b8:	b	1066c <__gmon_start__@plt>
   108bc:	andeq	r0, r1, r0, asr r7
   108c0:	andeq	r0, r0, r4, lsr r0
   108c4:	ldr	r0, [pc, #24]	; 108e4 <_start@@Base+0x80>
   108c8:	ldr	r3, [pc, #24]	; 108e8 <_start@@Base+0x84>
   108cc:	cmp	r3, r0
   108d0:	bxeq	lr
   108d4:	ldr	r3, [pc, #16]	; 108ec <_start@@Base+0x88>
   108d8:	cmp	r3, #0
   108dc:	bxeq	lr
   108e0:	bx	r3
   108e4:	andeq	r1, r2, r0, asr #32
   108e8:	andeq	r1, r2, r0, asr #32
   108ec:	andeq	r0, r0, r0
   108f0:	ldr	r0, [pc, #36]	; 1091c <_start@@Base+0xb8>
   108f4:	ldr	r1, [pc, #36]	; 10920 <_start@@Base+0xbc>
   108f8:	sub	r1, r1, r0
   108fc:	asr	r1, r1, #2
   10900:	add	r1, r1, r1, lsr #31
   10904:	asrs	r1, r1, #1
   10908:	bxeq	lr
   1090c:	ldr	r3, [pc, #16]	; 10924 <_start@@Base+0xc0>
   10910:	cmp	r3, #0
   10914:	bxeq	lr
   10918:	bx	r3
   1091c:	andeq	r1, r2, r0, asr #32
   10920:	andeq	r1, r2, r0, asr #32
   10924:	andeq	r0, r0, r0
   10928:	push	{r4, lr}
   1092c:	ldr	r4, [pc, #24]	; 1094c <_start@@Base+0xe8>
   10930:	ldrb	r3, [r4]
   10934:	cmp	r3, #0
   10938:	popne	{r4, pc}
   1093c:	bl	108c4 <_start@@Base+0x60>
   10940:	mov	r3, #1
   10944:	strb	r3, [r4]
   10948:	pop	{r4, pc}
   1094c:	andeq	r1, r2, r0, asr #32
   10950:	b	108f0 <_start@@Base+0x8c>

00010954 <esvaziastring@@Base>:
   10954:	subs	r2, r1, #0
   10958:	ble	10964 <esvaziastring@@Base+0x10>
   1095c:	mov	r1, #0
   10960:	b	10678 <memset@plt>
   10964:	bx	lr

00010968 <__libc_csu_init@@Base>:
   10968:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1096c:	mov	r7, r0
   10970:	ldr	r6, [pc, #72]	; 109c0 <__libc_csu_init@@Base+0x58>
   10974:	ldr	r5, [pc, #72]	; 109c4 <__libc_csu_init@@Base+0x5c>
   10978:	add	r6, pc, r6
   1097c:	add	r5, pc, r5
   10980:	sub	r6, r6, r5
   10984:	mov	r8, r1
   10988:	mov	r9, r2
   1098c:	bl	1061c <printf@plt-0x20>
   10990:	asrs	r6, r6, #2
   10994:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10998:	mov	r4, #0
   1099c:	add	r4, r4, #1
   109a0:	ldr	r3, [r5], #4
   109a4:	mov	r2, r9
   109a8:	mov	r1, r8
   109ac:	mov	r0, r7
   109b0:	blx	r3
   109b4:	cmp	r6, r4
   109b8:	bne	1099c <__libc_csu_init@@Base+0x34>
   109bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109c0:	muleq	r1, r4, r5
   109c4:	andeq	r0, r1, ip, lsl #11

000109c8 <__libc_csu_fini@@Base>:
   109c8:	bx	lr

Disassembly of section .fini:

000109cc <.fini>:
   109cc:	push	{r3, lr}
   109d0:	pop	{r3, pc}
