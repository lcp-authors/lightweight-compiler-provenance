
../repos/eddieantonio-ocreval-3ab279a/accdist/accdist:     file format elf32-littlearm


Disassembly of section .init:

00010898 <.init>:
   10898:	push	{r3, lr}
   1089c:	bl	10ac4 <getc@plt+0xa4>
   108a0:	pop	{r3, pc}

Disassembly of section .plt:

000108a4 <calloc@plt-0x14>:
   108a4:	push	{lr}		; (str lr, [sp, #-4]!)
   108a8:	ldr	lr, [pc, #4]	; 108b4 <calloc@plt-0x4>
   108ac:	add	lr, pc, lr
   108b0:	ldr	pc, [lr, #8]!
   108b4:	andeq	r3, r1, ip, asr #14

000108b8 <calloc@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #77824	; 0x13000
   108c0:	ldr	pc, [ip, #1868]!	; 0x74c

000108c4 <raise@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #77824	; 0x13000
   108cc:	ldr	pc, [ip, #1860]!	; 0x744

000108d0 <strcmp@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #77824	; 0x13000
   108d8:	ldr	pc, [ip, #1852]!	; 0x73c

000108dc <fopen@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #77824	; 0x13000
   108e4:	ldr	pc, [ip, #1844]!	; 0x734

000108e8 <free@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #77824	; 0x13000
   108f0:	ldr	pc, [ip, #1836]!	; 0x72c

000108f4 <utf8proc_get_property@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #77824	; 0x13000
   108fc:	ldr	pc, [ip, #1828]!	; 0x724

00010900 <fgets@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #77824	; 0x13000
   10908:	ldr	pc, [ip, #1820]!	; 0x71c

0001090c <utf8proc_encode_char@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #77824	; 0x13000
   10914:	ldr	pc, [ip, #1812]!	; 0x714

00010918 <strdup@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #77824	; 0x13000
   10920:	ldr	pc, [ip, #1804]!	; 0x70c

00010924 <rewind@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #77824	; 0x13000
   1092c:	ldr	pc, [ip, #1796]!	; 0x704

00010930 <unlink@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #77824	; 0x13000
   10938:	ldr	pc, [ip, #1788]!	; 0x6fc

0001093c <utf8proc_tolower@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #77824	; 0x13000
   10944:	ldr	pc, [ip, #1780]!	; 0x6f4

00010948 <__xstat@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #77824	; 0x13000
   10950:	ldr	pc, [ip, #1772]!	; 0x6ec

00010954 <fread@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #77824	; 0x13000
   1095c:	ldr	pc, [ip, #1764]!	; 0x6e4

00010960 <utf8proc_iterate@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #77824	; 0x13000
   10968:	ldr	pc, [ip, #1756]!	; 0x6dc

0001096c <__libc_start_main@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #77824	; 0x13000
   10974:	ldr	pc, [ip, #1748]!	; 0x6d4

00010978 <__sysv_signal@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #77824	; 0x13000
   10980:	ldr	pc, [ip, #1740]!	; 0x6cc

00010984 <__gmon_start__@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #77824	; 0x13000
   1098c:	ldr	pc, [ip, #1732]!	; 0x6c4

00010990 <getpid@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #77824	; 0x13000
   10998:	ldr	pc, [ip, #1724]!	; 0x6bc

0001099c <exit@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #77824	; 0x13000
   109a4:	ldr	pc, [ip, #1716]!	; 0x6b4

000109a8 <utf8proc_category@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #77824	; 0x13000
   109b0:	ldr	pc, [ip, #1708]!	; 0x6ac

000109b4 <strlen@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #77824	; 0x13000
   109bc:	ldr	pc, [ip, #1700]!	; 0x6a4

000109c0 <fprintf@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #77824	; 0x13000
   109c8:	ldr	pc, [ip, #1692]!	; 0x69c

000109cc <__isoc99_sscanf@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #77824	; 0x13000
   109d4:	ldr	pc, [ip, #1684]!	; 0x694

000109d8 <fclose@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #77824	; 0x13000
   109e0:	ldr	pc, [ip, #1676]!	; 0x68c

000109e4 <sprintf@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #77824	; 0x13000
   109ec:	ldr	pc, [ip, #1668]!	; 0x684

000109f0 <utf8proc_errmsg@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #77824	; 0x13000
   109f8:	ldr	pc, [ip, #1660]!	; 0x67c

000109fc <fputs@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #77824	; 0x13000
   10a04:	ldr	pc, [ip, #1652]!	; 0x674

00010a08 <strncmp@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #77824	; 0x13000
   10a10:	ldr	pc, [ip, #1644]!	; 0x66c

00010a14 <abort@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #77824	; 0x13000
   10a1c:	ldr	pc, [ip, #1636]!	; 0x664

00010a20 <getc@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #77824	; 0x13000
   10a28:	ldr	pc, [ip, #1628]!	; 0x65c

Disassembly of section .text:

00010a30 <error@@Base-0x1234>:
   10a30:	push	{r0, r1, r2, r4, r5, lr}
   10a34:	add	ip, sp, #8
   10a38:	mov	r3, #0
   10a3c:	str	r0, [ip, #-4]!
   10a40:	ldr	r2, [pc, #56]	; 10a80 <getc@plt+0x60>
   10a44:	mov	r0, ip
   10a48:	mov	r5, r1
   10a4c:	bl	11d88 <error@@Base+0x124>
   10a50:	mov	r4, #0
   10a54:	ldr	r3, [sp, #4]
   10a58:	cmp	r4, r3
   10a5c:	blt	10a70 <getc@plt+0x50>
   10a60:	mov	r1, #0
   10a64:	ldr	r0, [pc, #24]	; 10a84 <getc@plt+0x64>
   10a68:	bl	11688 <getc@plt+0xc68>
   10a6c:	bl	11c0c <getc@plt+0x11ec>
   10a70:	ldr	r0, [r5, r4, lsl #2]
   10a74:	bl	10bb0 <getc@plt+0x190>
   10a78:	add	r4, r4, #1
   10a7c:	b	10a54 <getc@plt+0x34>
   10a80:	andeq	r2, r1, ip, ror r9
   10a84:	addseq	r6, fp, r4, ror #25
   10a88:	mov	fp, #0
   10a8c:	mov	lr, #0
   10a90:	pop	{r1}		; (ldr r1, [sp], #4)
   10a94:	mov	r2, sp
   10a98:	push	{r2}		; (str r2, [sp, #-4]!)
   10a9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10aa0:	ldr	ip, [pc, #16]	; 10ab8 <getc@plt+0x98>
   10aa4:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa8:	ldr	r0, [pc, #12]	; 10abc <getc@plt+0x9c>
   10aac:	ldr	r3, [pc, #12]	; 10ac0 <getc@plt+0xa0>
   10ab0:	bl	1096c <__libc_start_main@plt>
   10ab4:	bl	10a14 <abort@plt>
   10ab8:	andeq	r2, r1, ip, asr r9
   10abc:	andeq	r0, r1, r0, lsr sl
   10ac0:	strdeq	r2, [r1], -ip
   10ac4:	ldr	r3, [pc, #20]	; 10ae0 <getc@plt+0xc0>
   10ac8:	ldr	r2, [pc, #20]	; 10ae4 <getc@plt+0xc4>
   10acc:	add	r3, pc, r3
   10ad0:	ldr	r2, [r3, r2]
   10ad4:	cmp	r2, #0
   10ad8:	bxeq	lr
   10adc:	b	10984 <__gmon_start__@plt>
   10ae0:	andeq	r3, r1, ip, lsr #10
   10ae4:	andeq	r0, r0, r8, lsl #1
   10ae8:	ldr	r3, [pc, #28]	; 10b0c <getc@plt+0xec>
   10aec:	ldr	r0, [pc, #28]	; 10b10 <getc@plt+0xf0>
   10af0:	sub	r3, r3, r0
   10af4:	cmp	r3, #6
   10af8:	bxls	lr
   10afc:	ldr	r3, [pc, #16]	; 10b14 <getc@plt+0xf4>
   10b00:	cmp	r3, #0
   10b04:	bxeq	lr
   10b08:	bx	r3
   10b0c:	muleq	r2, pc, r0	; <UNPREDICTABLE>
   10b10:	muleq	r2, ip, r0
   10b14:	andeq	r0, r0, r0
   10b18:	ldr	r1, [pc, #36]	; 10b44 <getc@plt+0x124>
   10b1c:	ldr	r0, [pc, #36]	; 10b48 <getc@plt+0x128>
   10b20:	sub	r1, r1, r0
   10b24:	asr	r1, r1, #2
   10b28:	add	r1, r1, r1, lsr #31
   10b2c:	asrs	r1, r1, #1
   10b30:	bxeq	lr
   10b34:	ldr	r3, [pc, #16]	; 10b4c <getc@plt+0x12c>
   10b38:	cmp	r3, #0
   10b3c:	bxeq	lr
   10b40:	bx	r3
   10b44:	muleq	r2, ip, r0
   10b48:	muleq	r2, ip, r0
   10b4c:	andeq	r0, r0, r0
   10b50:	push	{r4, lr}
   10b54:	ldr	r4, [pc, #24]	; 10b74 <getc@plt+0x154>
   10b58:	ldrb	r3, [r4]
   10b5c:	cmp	r3, #0
   10b60:	popne	{r4, pc}
   10b64:	bl	10ae8 <getc@plt+0xc8>
   10b68:	mov	r3, #1
   10b6c:	strb	r3, [r4]
   10b70:	pop	{r4, pc}
   10b74:	strheq	r4, [r2], -r0
   10b78:	ldr	r0, [pc, #40]	; 10ba8 <getc@plt+0x188>
   10b7c:	ldr	r3, [r0]
   10b80:	cmp	r3, #0
   10b84:	bne	10b8c <getc@plt+0x16c>
   10b88:	b	10b18 <getc@plt+0xf8>
   10b8c:	ldr	r3, [pc, #24]	; 10bac <getc@plt+0x18c>
   10b90:	cmp	r3, #0
   10b94:	beq	10b88 <getc@plt+0x168>
   10b98:	push	{r4, lr}
   10b9c:	blx	r3
   10ba0:	pop	{r4, lr}
   10ba4:	b	10b18 <getc@plt+0xf8>
   10ba8:	andeq	r3, r2, r4, lsl #28
   10bac:	andeq	r0, r0, r0
   10bb0:	push	{r4, r5, r6, lr}
   10bb4:	mov	r1, r0
   10bb8:	ldr	r4, [pc, #32]	; 10be0 <getc@plt+0x1c0>
   10bbc:	mov	r0, r4
   10bc0:	ldm	r4, {r5, r6}
   10bc4:	bl	10f1c <getc@plt+0x4fc>
   10bc8:	ldm	r4, {r1, r2}
   10bcc:	ldr	r0, [pc, #16]	; 10be4 <getc@plt+0x1c4>
   10bd0:	sub	r2, r2, r6
   10bd4:	sub	r1, r1, r5
   10bd8:	pop	{r4, r5, r6, lr}
   10bdc:	b	11618 <getc@plt+0xbf8>
   10be0:	andseq	r4, r3, r8, lsr #10
   10be4:	addseq	r6, fp, r4, ror #25
   10be8:	mov	r2, r0
   10bec:	push	{r4, lr}
   10bf0:	mov	r1, #99	; 0x63
   10bf4:	ldr	r0, [pc, #12]	; 10c08 <getc@plt+0x1e8>
   10bf8:	bl	10900 <fgets@plt>
   10bfc:	adds	r0, r0, #0
   10c00:	movne	r0, #1
   10c04:	pop	{r4, pc}
   10c08:	strheq	r4, [r2], -r1
   10c0c:	push	{r0, r1, r2, r3, r4, lr}
   10c10:	str	r2, [sp, #8]
   10c14:	ldr	r3, [r1, #12]
   10c18:	str	r3, [sp, #4]
   10c1c:	ldr	r3, [r1, #8]
   10c20:	str	r3, [sp]
   10c24:	ldm	r1, {r2, r3}
   10c28:	ldr	r1, [pc, #8]	; 10c38 <getc@plt+0x218>
   10c2c:	bl	109c0 <fprintf@plt>
   10c30:	add	sp, sp, #20
   10c34:	pop	{pc}		; (ldr pc, [sp], #4)
   10c38:	andeq	r2, r1, sl, lsr #19
   10c3c:	push	{r4, r5, r6, lr}
   10c40:	mov	r5, r1
   10c44:	mov	r4, r2
   10c48:	bl	10be8 <getc@plt+0x1c8>
   10c4c:	cmp	r0, #0
   10c50:	bne	10c5c <getc@plt+0x23c>
   10c54:	mov	r0, #0
   10c58:	pop	{r4, r5, r6, pc}
   10c5c:	mov	r2, r5
   10c60:	ldr	r1, [pc, #32]	; 10c88 <getc@plt+0x268>
   10c64:	ldr	r0, [pc, #32]	; 10c8c <getc@plt+0x26c>
   10c68:	bl	109cc <__isoc99_sscanf@plt>
   10c6c:	cmp	r0, #1
   10c70:	bne	10c54 <getc@plt+0x234>
   10c74:	ldr	r3, [r4]
   10c78:	ldr	r2, [r5]
   10c7c:	add	r3, r3, r2
   10c80:	str	r3, [r4]
   10c84:	pop	{r4, r5, r6, pc}
   10c88:	ldrdeq	r2, [r1], -r0
   10c8c:	strheq	r4, [r2], -r1
   10c90:	push	{r4, lr}
   10c94:	sub	sp, sp, #24
   10c98:	mov	r4, r1
   10c9c:	bl	10be8 <getc@plt+0x1c8>
   10ca0:	cmp	r0, #0
   10ca4:	beq	10d1c <getc@plt+0x2fc>
   10ca8:	add	r3, sp, #20
   10cac:	str	r3, [sp, #4]
   10cb0:	add	r3, sp, #16
   10cb4:	str	r3, [sp]
   10cb8:	add	r2, sp, #8
   10cbc:	add	r3, sp, #12
   10cc0:	ldr	r1, [pc, #92]	; 10d24 <getc@plt+0x304>
   10cc4:	ldr	r0, [pc, #92]	; 10d28 <getc@plt+0x308>
   10cc8:	bl	109cc <__isoc99_sscanf@plt>
   10ccc:	cmp	r0, #4
   10cd0:	movne	r0, #0
   10cd4:	bne	10d1c <getc@plt+0x2fc>
   10cd8:	ldr	r3, [r4]
   10cdc:	ldr	r2, [sp, #8]
   10ce0:	mov	r0, #1
   10ce4:	add	r3, r3, r2
   10ce8:	str	r3, [r4]
   10cec:	ldr	r2, [sp, #12]
   10cf0:	ldr	r3, [r4, #4]
   10cf4:	add	r3, r3, r2
   10cf8:	str	r3, [r4, #4]
   10cfc:	ldr	r2, [sp, #16]
   10d00:	ldr	r3, [r4, #8]
   10d04:	add	r3, r3, r2
   10d08:	str	r3, [r4, #8]
   10d0c:	ldr	r2, [sp, #20]
   10d10:	ldr	r3, [r4, #12]
   10d14:	add	r3, r3, r2
   10d18:	str	r3, [r4, #12]
   10d1c:	add	sp, sp, #24
   10d20:	pop	{r4, pc}
   10d24:	andeq	r2, r1, r4, asr #19
   10d28:	strheq	r4, [r2], -r1
   10d2c:	cmp	r2, #0
   10d30:	vmov	s14, r1
   10d34:	bne	10d44 <getc@plt+0x324>
   10d38:	mov	r1, r0
   10d3c:	ldr	r0, [pc, #44]	; 10d70 <getc@plt+0x350>
   10d40:	b	109fc <fputs@plt>
   10d44:	vcvt.f64.s32	d7, s14
   10d48:	vldr	d6, [pc, #24]	; 10d68 <getc@plt+0x348>
   10d4c:	ldr	r1, [pc, #32]	; 10d74 <getc@plt+0x354>
   10d50:	vmul.f64	d7, d7, d6
   10d54:	vmov	s13, r2
   10d58:	vcvt.f64.s32	d6, s13
   10d5c:	vdiv.f64	d5, d7, d6
   10d60:	vmov	r2, r3, d5
   10d64:	b	109c0 <fprintf@plt>
   10d68:	andeq	r0, r0, r0
   10d6c:	subsmi	r0, r9, r0
   10d70:	ldrdeq	r2, [r1], -r4
   10d74:	ldrdeq	r2, [r1], -sp
   10d78:	ldr	r2, [r0, #12]
   10d7c:	ldr	r3, [r1, #12]
   10d80:	cmp	r2, r3
   10d84:	beq	10d90 <getc@plt+0x370>
   10d88:	sub	r0, r3, r2
   10d8c:	bx	lr
   10d90:	ldr	r2, [r0, #16]
   10d94:	ldr	r3, [r1, #16]
   10d98:	cmp	r2, r3
   10d9c:	bne	10d88 <getc@plt+0x368>
   10da0:	ldr	r1, [r1, #8]
   10da4:	ldr	r0, [r0, #8]
   10da8:	b	11b14 <getc@plt+0x10f4>
   10dac:	push	{r4, r5, r6, r7, lr}
   10db0:	mov	r4, r1
   10db4:	mov	r6, r2
   10db8:	sub	sp, sp, #20
   10dbc:	mov	r7, r3
   10dc0:	ldm	r1, {r2, r3}
   10dc4:	ldr	r1, [pc, #84]	; 10e20 <getc@plt+0x400>
   10dc8:	mov	r5, r0
   10dcc:	bl	109c0 <fprintf@plt>
   10dd0:	ldr	r2, [r4]
   10dd4:	ldr	r1, [r4, #4]
   10dd8:	mov	r0, r5
   10ddc:	sub	r1, r2, r1
   10de0:	bl	10d2c <getc@plt+0x30c>
   10de4:	cmp	r6, #0
   10de8:	movne	r2, r6
   10dec:	ldrne	r1, [pc, #48]	; 10e24 <getc@plt+0x404>
   10df0:	bne	10e10 <getc@plt+0x3f0>
   10df4:	add	r2, sp, #4
   10df8:	mov	r1, r7
   10dfc:	mov	r3, #1
   10e00:	mov	r0, r6
   10e04:	bl	1231c <error@@Base+0x6b8>
   10e08:	ldr	r1, [pc, #24]	; 10e28 <getc@plt+0x408>
   10e0c:	add	r2, sp, #4
   10e10:	mov	r0, r5
   10e14:	bl	109c0 <fprintf@plt>
   10e18:	add	sp, sp, #20
   10e1c:	pop	{r4, r5, r6, r7, pc}
   10e20:	andeq	r2, r1, r3, ror #19
   10e24:			; <UNDEFINED> instruction: 0x000129bd
   10e28:	andeq	r2, r1, lr, ror #19
   10e2c:	push	{r4, r5, r6, r7, r8, lr}
   10e30:	mov	r4, r0
   10e34:	mov	r0, r1
   10e38:	mov	r5, r3
   10e3c:	mov	r6, r2
   10e40:	mov	r7, r1
   10e44:	bl	119e8 <getc@plt+0xfc8>
   10e48:	sxth	r0, r0
   10e4c:	add	r0, r4, r0, lsl #3
   10e50:	ldr	r3, [r0, #68]	; 0x44
   10e54:	add	r3, r3, r6
   10e58:	str	r3, [r0, #68]	; 0x44
   10e5c:	ldr	r3, [r0, #72]	; 0x48
   10e60:	add	r3, r3, r5
   10e64:	str	r3, [r0, #72]	; 0x48
   10e68:	ldr	r3, [r4, #2116]	; 0x844
   10e6c:	add	r3, r3, r6
   10e70:	str	r3, [r4, #2116]	; 0x844
   10e74:	ldr	r3, [r4, #2120]	; 0x848
   10e78:	add	r3, r3, r5
   10e7c:	str	r3, [r4, #2120]	; 0x848
   10e80:	add	r4, r4, r7, lsl #3
   10e84:	add	r4, r4, #8192	; 0x2000
   10e88:	ldr	r3, [r4, #1988]	; 0x7c4
   10e8c:	add	r2, r3, r6
   10e90:	str	r2, [r4, #1988]	; 0x7c4
   10e94:	ldr	r2, [r4, #1992]	; 0x7c8
   10e98:	add	r3, r2, r5
   10e9c:	str	r3, [r4, #1992]	; 0x7c8
   10ea0:	pop	{r4, r5, r6, r7, r8, pc}
   10ea4:	add	r0, r0, #2112	; 0x840
   10ea8:	push	{r4, r5, r6, r7, r8, lr}
   10eac:	add	r4, r0, #12
   10eb0:	mov	r0, r4
   10eb4:	mov	r8, r1
   10eb8:	mov	r7, r2
   10ebc:	mov	r6, r3
   10ec0:	bl	11790 <getc@plt+0xd70>
   10ec4:	cmp	r0, #0
   10ec8:	beq	10ee8 <getc@plt+0x4c8>
   10ecc:	ldr	r2, [r0, #12]
   10ed0:	ldr	r3, [r0, #16]
   10ed4:	add	r2, r2, r7
   10ed8:	add	r3, r3, r6
   10edc:	str	r2, [r0, #12]
   10ee0:	str	r3, [r0, #16]
   10ee4:	pop	{r4, r5, r6, r7, r8, pc}
   10ee8:	mov	r1, #20
   10eec:	mov	r0, #1
   10ef0:	bl	11ca0 <error@@Base+0x3c>
   10ef4:	mov	r5, r0
   10ef8:	mov	r0, r8
   10efc:	bl	10918 <strdup@plt>
   10f00:	str	r7, [r5, #12]
   10f04:	str	r6, [r5, #16]
   10f08:	mov	r1, r5
   10f0c:	str	r0, [r5, #8]
   10f10:	mov	r0, r4
   10f14:	pop	{r4, r5, r6, r7, r8, lr}
   10f18:	b	117d4 <getc@plt+0xdb4>
   10f1c:	push	{r4, r5, r6, r7, r8, lr}
   10f20:	mov	r7, r1
   10f24:	sub	sp, sp, #24
   10f28:	ldr	r1, [pc, #704]	; 111f0 <getc@plt+0x7d0>
   10f2c:	mov	r5, r0
   10f30:	mov	r0, r7
   10f34:	bl	11d2c <error@@Base+0xc8>
   10f38:	mov	r4, r0
   10f3c:	bl	10be8 <getc@plt+0x1c8>
   10f40:	cmp	r0, #0
   10f44:	beq	111dc <getc@plt+0x7bc>
   10f48:	mov	r2, #40	; 0x28
   10f4c:	ldr	r1, [pc, #672]	; 111f4 <getc@plt+0x7d4>
   10f50:	ldr	r0, [pc, #672]	; 111f8 <getc@plt+0x7d8>
   10f54:	bl	10a08 <strncmp@plt>
   10f58:	ldr	r6, [pc, #664]	; 111f8 <getc@plt+0x7d8>
   10f5c:	cmp	r0, #0
   10f60:	bne	111dc <getc@plt+0x7bc>
   10f64:	mov	r0, r4
   10f68:	bl	10be8 <getc@plt+0x1c8>
   10f6c:	cmp	r0, #0
   10f70:	beq	111dc <getc@plt+0x7bc>
   10f74:	ldr	r1, [pc, #640]	; 111fc <getc@plt+0x7dc>
   10f78:	mov	r0, r6
   10f7c:	bl	108d0 <strcmp@plt>
   10f80:	cmp	r0, #0
   10f84:	bne	111dc <getc@plt+0x7bc>
   10f88:	mov	r2, r5
   10f8c:	add	r1, sp, #4
   10f90:	mov	r0, r4
   10f94:	bl	10c3c <getc@plt+0x21c>
   10f98:	cmp	r0, #0
   10f9c:	beq	111dc <getc@plt+0x7bc>
   10fa0:	add	r2, r5, #4
   10fa4:	add	r1, sp, #8
   10fa8:	mov	r0, r4
   10fac:	bl	10c3c <getc@plt+0x21c>
   10fb0:	cmp	r0, #0
   10fb4:	beq	111dc <getc@plt+0x7bc>
   10fb8:	mov	r0, r4
   10fbc:	bl	10be8 <getc@plt+0x1c8>
   10fc0:	cmp	r0, #0
   10fc4:	beq	111dc <getc@plt+0x7bc>
   10fc8:	mov	r0, r4
   10fcc:	bl	10be8 <getc@plt+0x1c8>
   10fd0:	cmp	r0, #0
   10fd4:	beq	111dc <getc@plt+0x7bc>
   10fd8:	add	r2, r5, #8
   10fdc:	add	r1, sp, #12
   10fe0:	mov	r0, r4
   10fe4:	bl	10c3c <getc@plt+0x21c>
   10fe8:	cmp	r0, #0
   10fec:	beq	111dc <getc@plt+0x7bc>
   10ff0:	add	r2, r5, #12
   10ff4:	add	r1, sp, #12
   10ff8:	mov	r0, r4
   10ffc:	bl	10c3c <getc@plt+0x21c>
   11000:	cmp	r0, #0
   11004:	beq	111dc <getc@plt+0x7bc>
   11008:	add	r2, r5, #16
   1100c:	add	r1, sp, #12
   11010:	mov	r0, r4
   11014:	bl	10c3c <getc@plt+0x21c>
   11018:	cmp	r0, #0
   1101c:	beq	111dc <getc@plt+0x7bc>
   11020:	mov	r0, r4
   11024:	bl	10be8 <getc@plt+0x1c8>
   11028:	cmp	r0, #0
   1102c:	beq	111dc <getc@plt+0x7bc>
   11030:	mov	r0, r4
   11034:	bl	10be8 <getc@plt+0x1c8>
   11038:	cmp	r0, #0
   1103c:	beq	111dc <getc@plt+0x7bc>
   11040:	mov	r0, r4
   11044:	bl	10be8 <getc@plt+0x1c8>
   11048:	cmp	r0, #0
   1104c:	beq	111dc <getc@plt+0x7bc>
   11050:	mov	r0, r4
   11054:	bl	10be8 <getc@plt+0x1c8>
   11058:	cmp	r0, #0
   1105c:	beq	111dc <getc@plt+0x7bc>
   11060:	add	r1, r5, #20
   11064:	mov	r0, r4
   11068:	bl	10c90 <getc@plt+0x270>
   1106c:	cmp	r0, #0
   11070:	beq	111dc <getc@plt+0x7bc>
   11074:	add	r1, r5, #36	; 0x24
   11078:	mov	r0, r4
   1107c:	bl	10c90 <getc@plt+0x270>
   11080:	cmp	r0, #0
   11084:	beq	111dc <getc@plt+0x7bc>
   11088:	add	r1, r5, #52	; 0x34
   1108c:	mov	r0, r4
   11090:	bl	10c90 <getc@plt+0x270>
   11094:	cmp	r0, #0
   11098:	beq	111dc <getc@plt+0x7bc>
   1109c:	mov	r0, r4
   110a0:	bl	10be8 <getc@plt+0x1c8>
   110a4:	cmp	r0, #0
   110a8:	beq	111dc <getc@plt+0x7bc>
   110ac:	mov	r0, r4
   110b0:	bl	10be8 <getc@plt+0x1c8>
   110b4:	cmp	r0, #0
   110b8:	beq	110c8 <getc@plt+0x6a8>
   110bc:	ldrb	r3, [r6]
   110c0:	cmp	r3, #10
   110c4:	bne	110ac <getc@plt+0x68c>
   110c8:	ldr	r3, [sp, #8]
   110cc:	cmp	r3, #0
   110d0:	bgt	110f0 <getc@plt+0x6d0>
   110d4:	ldr	r3, [sp, #4]
   110d8:	cmp	r3, #0
   110dc:	bgt	11150 <getc@plt+0x730>
   110e0:	mov	r0, r4
   110e4:	bl	11b5c <getc@plt+0x113c>
   110e8:	add	sp, sp, #24
   110ec:	pop	{r4, r5, r6, r7, r8, pc}
   110f0:	mov	r0, r4
   110f4:	bl	10be8 <getc@plt+0x1c8>
   110f8:	cmp	r0, #0
   110fc:	beq	110d4 <getc@plt+0x6b4>
   11100:	ldr	r8, [pc, #248]	; 11200 <getc@plt+0x7e0>
   11104:	ldr	r7, [pc, #236]	; 111f8 <getc@plt+0x7d8>
   11108:	b	11120 <getc@plt+0x700>
   1110c:	ldr	r3, [sp, #16]
   11110:	ldr	r2, [sp, #12]
   11114:	ldr	r1, [pc, #232]	; 11204 <getc@plt+0x7e4>
   11118:	mov	r0, r5
   1111c:	bl	10ea4 <getc@plt+0x484>
   11120:	mov	r0, r4
   11124:	bl	10be8 <getc@plt+0x1c8>
   11128:	cmp	r0, #0
   1112c:	beq	110d4 <getc@plt+0x6b4>
   11130:	add	r3, sp, #16
   11134:	add	r2, sp, #12
   11138:	mov	r1, r8
   1113c:	mov	r0, r7
   11140:	bl	109cc <__isoc99_sscanf@plt>
   11144:	cmp	r0, #2
   11148:	beq	1110c <getc@plt+0x6ec>
   1114c:	b	110d4 <getc@plt+0x6b4>
   11150:	mov	r0, r4
   11154:	bl	10be8 <getc@plt+0x1c8>
   11158:	cmp	r0, #0
   1115c:	ldrne	r7, [pc, #156]	; 11200 <getc@plt+0x7e0>
   11160:	beq	110e0 <getc@plt+0x6c0>
   11164:	mov	r0, r4
   11168:	bl	10be8 <getc@plt+0x1c8>
   1116c:	cmp	r0, #0
   11170:	beq	110e0 <getc@plt+0x6c0>
   11174:	add	r3, sp, #16
   11178:	add	r2, sp, #12
   1117c:	mov	r1, r7
   11180:	ldr	r0, [pc, #112]	; 111f8 <getc@plt+0x7d8>
   11184:	bl	109cc <__isoc99_sscanf@plt>
   11188:	cmp	r0, #2
   1118c:	bne	110e0 <getc@plt+0x6c0>
   11190:	ldrb	r3, [r6, #31]
   11194:	cmp	r3, #125	; 0x7d
   11198:	ldrbeq	r3, [r6, #30]
   1119c:	beq	111ac <getc@plt+0x78c>
   111a0:	cmp	r3, #92	; 0x5c
   111a4:	bne	111c8 <getc@plt+0x7a8>
   111a8:	mov	r3, #10
   111ac:	str	r3, [sp, #20]
   111b0:	ldr	r3, [sp, #16]
   111b4:	ldr	r2, [sp, #12]
   111b8:	ldr	r1, [sp, #20]
   111bc:	mov	r0, r5
   111c0:	bl	10e2c <getc@plt+0x40c>
   111c4:	b	11164 <getc@plt+0x744>
   111c8:	add	r2, sp, #20
   111cc:	ldr	r1, [pc, #52]	; 11208 <getc@plt+0x7e8>
   111d0:	ldr	r0, [pc, #52]	; 1120c <getc@plt+0x7ec>
   111d4:	bl	109cc <__isoc99_sscanf@plt>
   111d8:	b	111b0 <getc@plt+0x790>
   111dc:	cmp	r7, #0
   111e0:	ldr	r1, [pc, #40]	; 11210 <getc@plt+0x7f0>
   111e4:	ldr	r0, [pc, #40]	; 11214 <getc@plt+0x7f4>
   111e8:	movne	r1, r7
   111ec:	bl	11cec <error@@Base+0x88>
   111f0:	ldrdeq	r3, [r1], -r1
   111f4:	strdeq	r2, [r1], -sp
   111f8:	strheq	r4, [r2], -r1
   111fc:	muleq	r1, r0, r6
   11200:	andeq	r2, r1, ip, asr #19
   11204:	andeq	r4, r2, r5, asr #1
   11208:	andeq	r2, r1, r8, lsr #20
   1120c:	ldrdeq	r4, [r2], -r0
   11210:	strdeq	r2, [r1], -r7
   11214:	andeq	r2, r1, ip, lsr #20
   11218:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1121c:	mov	r4, r0
   11220:	mov	r0, r1
   11224:	ldr	r1, [pc, #612]	; 11490 <getc@plt+0xa70>
   11228:	bl	11d2c <error@@Base+0xc8>
   1122c:	ldr	r3, [pc, #608]	; 11494 <getc@plt+0xa74>
   11230:	ldr	r2, [pc, #608]	; 11498 <getc@plt+0xa78>
   11234:	ldr	r1, [pc, #608]	; 1149c <getc@plt+0xa7c>
   11238:	mov	r6, #0
   1123c:	add	r7, r4, #68	; 0x44
   11240:	mov	r8, r6
   11244:	mov	r5, r0
   11248:	bl	109c0 <fprintf@plt>
   1124c:	ldr	r3, [pc, #588]	; 114a0 <getc@plt+0xa80>
   11250:	ldr	r2, [r4]
   11254:	ldr	r1, [pc, #584]	; 114a4 <getc@plt+0xa84>
   11258:	mov	r0, r5
   1125c:	bl	109c0 <fprintf@plt>
   11260:	ldr	r3, [pc, #576]	; 114a8 <getc@plt+0xa88>
   11264:	ldr	r2, [r4, #4]
   11268:	ldr	r1, [pc, #564]	; 114a4 <getc@plt+0xa84>
   1126c:	mov	r0, r5
   11270:	bl	109c0 <fprintf@plt>
   11274:	ldr	r2, [r4]
   11278:	ldr	r1, [r4, #4]
   1127c:	mov	r0, r5
   11280:	sub	r1, r2, r1
   11284:	bl	10d2c <getc@plt+0x30c>
   11288:	ldr	r1, [pc, #540]	; 114ac <getc@plt+0xa8c>
   1128c:	mov	r0, r5
   11290:	bl	109c0 <fprintf@plt>
   11294:	ldr	r3, [pc, #532]	; 114b0 <getc@plt+0xa90>
   11298:	ldr	r2, [r4, #8]
   1129c:	ldr	r1, [pc, #512]	; 114a4 <getc@plt+0xa84>
   112a0:	mov	r0, r5
   112a4:	bl	109c0 <fprintf@plt>
   112a8:	ldr	r3, [pc, #516]	; 114b4 <getc@plt+0xa94>
   112ac:	ldr	r2, [r4, #12]
   112b0:	ldr	r1, [pc, #492]	; 114a4 <getc@plt+0xa84>
   112b4:	mov	r0, r5
   112b8:	bl	109c0 <fprintf@plt>
   112bc:	ldr	r3, [pc, #500]	; 114b8 <getc@plt+0xa98>
   112c0:	ldr	r2, [r4, #16]
   112c4:	ldr	r1, [pc, #472]	; 114a4 <getc@plt+0xa84>
   112c8:	mov	r0, r5
   112cc:	bl	109c0 <fprintf@plt>
   112d0:	ldr	r3, [r4, #12]
   112d4:	ldr	r1, [r4, #8]
   112d8:	ldr	r2, [r4]
   112dc:	add	r1, r1, r3
   112e0:	mov	r0, r5
   112e4:	bl	10d2c <getc@plt+0x30c>
   112e8:	ldr	r1, [pc, #460]	; 114bc <getc@plt+0xa9c>
   112ec:	mov	r0, r5
   112f0:	bl	109c0 <fprintf@plt>
   112f4:	ldr	r2, [r4]
   112f8:	ldr	r1, [r4, #48]	; 0x30
   112fc:	mov	r0, r5
   11300:	sub	r1, r2, r1
   11304:	bl	10d2c <getc@plt+0x30c>
   11308:	ldr	r1, [pc, #432]	; 114c0 <getc@plt+0xaa0>
   1130c:	mov	r0, r5
   11310:	bl	109c0 <fprintf@plt>
   11314:	mov	r1, r5
   11318:	ldr	r0, [pc, #420]	; 114c4 <getc@plt+0xaa4>
   1131c:	bl	109fc <fputs@plt>
   11320:	ldr	r2, [pc, #416]	; 114c8 <getc@plt+0xaa8>
   11324:	add	r1, r4, #20
   11328:	mov	r0, r5
   1132c:	bl	10c0c <getc@plt+0x1ec>
   11330:	ldr	r2, [pc, #404]	; 114cc <getc@plt+0xaac>
   11334:	add	r1, r4, #36	; 0x24
   11338:	mov	r0, r5
   1133c:	bl	10c0c <getc@plt+0x1ec>
   11340:	ldr	r2, [pc, #392]	; 114d0 <getc@plt+0xab0>
   11344:	add	r1, r4, #52	; 0x34
   11348:	mov	r0, r5
   1134c:	bl	10c0c <getc@plt+0x1ec>
   11350:	ldr	r1, [pc, #380]	; 114d4 <getc@plt+0xab4>
   11354:	mov	r0, r5
   11358:	bl	109c0 <fprintf@plt>
   1135c:	ldr	r3, [r7]
   11360:	cmp	r3, #0
   11364:	ble	11384 <getc@plt+0x964>
   11368:	mov	r0, r6
   1136c:	bl	11a1c <getc@plt+0xffc>
   11370:	mov	r3, r8
   11374:	mov	r1, r7
   11378:	mov	r2, r0
   1137c:	mov	r0, r5
   11380:	bl	10dac <getc@plt+0x38c>
   11384:	add	r6, r6, #1
   11388:	cmp	r6, #256	; 0x100
   1138c:	add	r7, r7, #8
   11390:	bne	1135c <getc@plt+0x93c>
   11394:	add	r6, r4, #2112	; 0x840
   11398:	mov	r3, #0
   1139c:	ldr	r2, [pc, #300]	; 114d0 <getc@plt+0xab0>
   113a0:	add	r1, r6, #4
   113a4:	mov	r0, r5
   113a8:	bl	10dac <getc@plt+0x38c>
   113ac:	ldr	r3, [r4, #4]
   113b0:	cmp	r3, #0
   113b4:	bgt	113d4 <getc@plt+0x9b4>
   113b8:	ldr	r3, [r4]
   113bc:	cmp	r3, #0
   113c0:	bgt	1143c <getc@plt+0xa1c>
   113c4:	mov	r0, r5
   113c8:	add	sp, sp, #8
   113cc:	pop	{r4, r5, r6, r7, r8, lr}
   113d0:	b	11b5c <getc@plt+0x113c>
   113d4:	add	r7, r4, #8192	; 0x2000
   113d8:	add	r0, r6, #12
   113dc:	bl	1186c <getc@plt+0xe4c>
   113e0:	ldr	r2, [pc, #240]	; 114d8 <getc@plt+0xab8>
   113e4:	ldr	r1, [r7, #1980]	; 0x7bc
   113e8:	ldr	r0, [r7, #1984]	; 0x7c0
   113ec:	bl	115f4 <getc@plt+0xbd4>
   113f0:	mov	r1, r5
   113f4:	ldr	r0, [pc, #224]	; 114dc <getc@plt+0xabc>
   113f8:	bl	109fc <fputs@plt>
   113fc:	ldr	r8, [pc, #220]	; 114e0 <getc@plt+0xac0>
   11400:	mov	r6, #0
   11404:	ldr	r3, [r7, #1984]	; 0x7c0
   11408:	cmp	r6, r3
   1140c:	bge	113b8 <getc@plt+0x998>
   11410:	ldr	r3, [r7, #1980]	; 0x7bc
   11414:	mov	r1, r8
   11418:	mov	r0, r5
   1141c:	ldr	r2, [r3, r6, lsl #2]
   11420:	add	r6, r6, #1
   11424:	ldr	r3, [r2, #8]
   11428:	str	r3, [sp]
   1142c:	ldr	r3, [r2, #16]
   11430:	ldr	r2, [r2, #12]
   11434:	bl	109c0 <fprintf@plt>
   11438:	b	11404 <getc@plt+0x9e4>
   1143c:	ldr	r1, [pc, #144]	; 114d4 <getc@plt+0xab4>
   11440:	mov	r0, r5
   11444:	bl	109c0 <fprintf@plt>
   11448:	add	r4, r4, #10176	; 0x27c0
   1144c:	mov	r6, #0
   11450:	ldr	r7, [pc, #140]	; 114e4 <getc@plt+0xac4>
   11454:	add	r4, r4, #4
   11458:	mov	r8, r6
   1145c:	ldr	r3, [r4]
   11460:	cmp	r3, #0
   11464:	ble	1147c <getc@plt+0xa5c>
   11468:	mov	r3, r6
   1146c:	mov	r2, r8
   11470:	mov	r1, r4
   11474:	mov	r0, r5
   11478:	bl	10dac <getc@plt+0x38c>
   1147c:	add	r6, r6, #1
   11480:	cmp	r6, r7
   11484:	add	r4, r4, #8
   11488:	bne	1145c <getc@plt+0xa3c>
   1148c:	b	113c4 <getc@plt+0x9a4>
   11490:	muleq	r1, r0, r1
   11494:	muleq	r1, r0, r6
   11498:	strdeq	r2, [r1], -sp
   1149c:	andeq	r2, r1, lr, lsr sl
   114a0:	andeq	r3, r1, r2, lsl #1
   114a4:			; <UNDEFINED> instruction: 0x000129b9
   114a8:	andeq	r2, r1, r3, asr #20
   114ac:	andeq	r2, r1, sl, asr #20
   114b0:	andeq	r2, r1, r9, asr sl
   114b4:	andeq	r2, r1, fp, ror #20
   114b8:	andeq	r2, r1, fp, ror sl
   114bc:	andeq	r2, r1, r7, lsl #21
   114c0:	muleq	r1, lr, sl
   114c4:			; <UNDEFINED> instruction: 0x00012abd
   114c8:	andeq	r2, r1, r3, ror #21
   114cc:	andeq	r2, r1, sl, ror #21
   114d0:	strdeq	r2, [r1], -r3
   114d4:	strdeq	r2, [r1], -r9
   114d8:	andeq	r0, r1, r8, ror sp
   114dc:	andeq	r2, r1, r7, lsl fp
   114e0:	andeq	r2, r1, pc, lsr fp
   114e4:			; <UNDEFINED> instruction: 0x0010ffff
   114e8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114ec:	mov	r7, r0
   114f0:	ldr	sl, [pc, #248]	; 115f0 <getc@plt+0xbd0>
   114f4:	mov	r9, r1
   114f8:	mov	r6, sl
   114fc:	ldr	r3, [sl]
   11500:	mov	r4, r9
   11504:	mov	r5, r7
   11508:	ldr	fp, [r3, r7, lsl #2]
   1150c:	cmp	r5, r4
   11510:	blt	1155c <getc@plt+0xb3c>
   11514:	ldr	r3, [r6]
   11518:	sub	r1, r4, #1
   1151c:	cmp	r7, r1
   11520:	str	fp, [r3, r4, lsl #2]
   11524:	bge	11530 <getc@plt+0xb10>
   11528:	mov	r0, r7
   1152c:	bl	114e8 <getc@plt+0xac8>
   11530:	add	r7, r5, #1
   11534:	cmp	r7, r9
   11538:	blt	114fc <getc@plt+0xadc>
   1153c:	add	sp, sp, #12
   11540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11544:	sub	r4, r4, #1
   11548:	cmp	r5, r4
   1154c:	sub	r8, r8, #4
   11550:	bne	11560 <getc@plt+0xb40>
   11554:	mov	r2, r4
   11558:	b	115d4 <getc@plt+0xbb4>
   1155c:	lsl	r8, r4, #2
   11560:	ldm	r6, {r2, r3}
   11564:	mov	r0, fp
   11568:	ldr	r1, [r2, r8]
   1156c:	blx	r3
   11570:	cmp	r0, #0
   11574:	blt	11544 <getc@plt+0xb24>
   11578:	ldr	r2, [r6]
   1157c:	lsl	r1, r5, #2
   11580:	add	r8, r5, #1
   11584:	ldr	r0, [r2, r4, lsl #2]
   11588:	lsl	r3, r4, #2
   1158c:	str	r0, [r2, r5, lsl #2]
   11590:	add	r5, r1, #4
   11594:	cmp	r8, r4
   11598:	bge	115e8 <getc@plt+0xbc8>
   1159c:	ldm	r6, {r1, r2}
   115a0:	mov	r0, fp
   115a4:	str	r3, [sp, #4]
   115a8:	ldr	r1, [r1, r5]
   115ac:	blx	r2
   115b0:	add	r5, r5, #4
   115b4:	ldr	r3, [sp, #4]
   115b8:	cmp	r0, #0
   115bc:	bgt	115e0 <getc@plt+0xbc0>
   115c0:	ldr	r1, [r6]
   115c4:	sub	r2, r4, #1
   115c8:	mov	r4, r8
   115cc:	ldr	r0, [r1, r8, lsl #2]
   115d0:	str	r0, [r1, r3]
   115d4:	mov	r5, r4
   115d8:	mov	r4, r2
   115dc:	b	1150c <getc@plt+0xaec>
   115e0:	add	r8, r8, #1
   115e4:	b	11594 <getc@plt+0xb74>
   115e8:	bne	115c0 <getc@plt+0xba0>
   115ec:	b	11554 <getc@plt+0xb34>
   115f0:	andeq	r4, r2, r8, lsl r1
   115f4:	cmp	r0, #1
   115f8:	bxle	lr
   115fc:	ldr	r3, [pc, #12]	; 11610 <getc@plt+0xbf0>
   11600:	stm	r3, {r1, r2}
   11604:	sub	r1, r0, #1
   11608:	mov	r0, #0
   1160c:	b	114e8 <getc@plt+0xac8>
   11610:	andeq	r4, r2, r8, lsl r1
   11614:	andeq	r0, r0, r0
   11618:	cmp	r1, #0
   1161c:	bxeq	lr
   11620:	sub	r3, r1, r2
   11624:	vldr	d6, [pc, #84]	; 11680 <getc@plt+0xc60>
   11628:	vmov	s14, r3
   1162c:	mov	r3, #0
   11630:	vcvt.f64.s32	d7, s14
   11634:	vmul.f64	d7, d7, d6
   11638:	vmov	s13, r1
   1163c:	vcvt.f64.s32	d5, s13
   11640:	vdiv.f64	d6, d7, d5
   11644:	vmov	s15, r3
   11648:	vcvt.f64.s32	d7, s15
   1164c:	vcmpe.f64	d6, d7
   11650:	vmrs	APSR_nzcv, fpscr
   11654:	bge	11668 <getc@plt+0xc48>
   11658:	ldr	r3, [r0, #404]	; 0x194
   1165c:	add	r1, r3, r1
   11660:	str	r1, [r0, #404]	; 0x194
   11664:	bx	lr
   11668:	ldr	r2, [r0, r3, lsl #2]
   1166c:	add	r2, r2, r1
   11670:	str	r2, [r0, r3, lsl #2]
   11674:	add	r3, r3, #1
   11678:	sxth	r3, r3
   1167c:	b	11644 <getc@plt+0xc24>
   11680:	andeq	r0, r0, r0
   11684:	subsmi	r0, r9, r0
   11688:	ldr	r3, [r0, #404]	; 0x194
   1168c:	cmp	r3, #0
   11690:	bxeq	lr
   11694:	push	{r4, r5, r6, r7, lr}
   11698:	vpush	{d8}
   1169c:	mov	r5, r0
   116a0:	mov	r0, r1
   116a4:	ldr	r1, [pc, #108]	; 11718 <getc@plt+0xcf8>
   116a8:	sub	sp, sp, #12
   116ac:	bl	11d2c <error@@Base+0xc8>
   116b0:	vldr	d8, [pc, #88]	; 11710 <getc@plt+0xcf0>
   116b4:	ldr	r7, [pc, #96]	; 1171c <getc@plt+0xcfc>
   116b8:	mov	r4, #0
   116bc:	mov	r6, r0
   116c0:	ldr	r3, [r5, r4, lsl #2]
   116c4:	vldr	s13, [r5, #404]	; 0x194
   116c8:	mov	r2, r4
   116cc:	vmov	s15, r3
   116d0:	mov	r1, r7
   116d4:	vcvt.f64.s32	d6, s13
   116d8:	mov	r0, r6
   116dc:	vcvt.f64.s32	d7, s15
   116e0:	add	r4, r4, #1
   116e4:	vmul.f64	d7, d7, d8
   116e8:	vdiv.f64	d5, d7, d6
   116ec:	vstr	d5, [sp]
   116f0:	bl	109c0 <fprintf@plt>
   116f4:	cmp	r4, #101	; 0x65
   116f8:	bne	116c0 <getc@plt+0xca0>
   116fc:	mov	r0, r6
   11700:	add	sp, sp, #12
   11704:	vpop	{d8}
   11708:	pop	{r4, r5, r6, r7, lr}
   1170c:	b	11b5c <getc@plt+0x113c>
   11710:	andeq	r0, r0, r0
   11714:	subsmi	r0, r9, r0
   11718:	muleq	r1, r0, r1
   1171c:	andeq	r2, r1, lr, asr #22
   11720:	sub	r2, r0, #1
   11724:	mov	r0, #0
   11728:	push	{r4, lr}
   1172c:	ldrb	r3, [r2, #1]!
   11730:	cmp	r3, #0
   11734:	bne	11748 <getc@plt+0xd28>
   11738:	ldr	r1, [pc, #16]	; 11750 <getc@plt+0xd30>
   1173c:	bl	128cc <error@@Base+0xc68>
   11740:	sxth	r0, r1
   11744:	pop	{r4, pc}
   11748:	add	r0, r0, r3
   1174c:	b	1172c <getc@plt+0xd0c>
   11750:	strdeq	r0, [r0], -r7
   11754:	push	{r4, r5, r6, lr}
   11758:	add	r6, r0, #8000	; 0x1f40
   1175c:	mov	r4, r0
   11760:	mov	r5, r0
   11764:	add	r6, r6, #48	; 0x30
   11768:	mov	r0, r5
   1176c:	add	r5, r5, #16
   11770:	bl	1257c <error@@Base+0x918>
   11774:	cmp	r5, r6
   11778:	bne	11768 <getc@plt+0xd48>
   1177c:	add	r4, r4, #4096	; 0x1000
   11780:	mov	r3, #0
   11784:	str	r3, [r4, #3952]	; 0xf70
   11788:	str	r3, [r4, #3956]	; 0xf74
   1178c:	pop	{r4, r5, r6, pc}
   11790:	push	{r4, r5, r6, lr}
   11794:	mov	r4, r0
   11798:	mov	r0, r1
   1179c:	mov	r5, r1
   117a0:	bl	11720 <getc@plt+0xd00>
   117a4:	ldr	r4, [r4, r0, lsl #4]
   117a8:	cmp	r4, #0
   117ac:	beq	117c4 <getc@plt+0xda4>
   117b0:	ldr	r1, [r4, #8]
   117b4:	mov	r0, r5
   117b8:	bl	108d0 <strcmp@plt>
   117bc:	cmp	r0, #0
   117c0:	bne	117cc <getc@plt+0xdac>
   117c4:	mov	r0, r4
   117c8:	pop	{r4, r5, r6, pc}
   117cc:	ldr	r4, [r4, #4]
   117d0:	b	117a8 <getc@plt+0xd88>
   117d4:	push	{r4, r5, r6, lr}
   117d8:	mov	r4, r0
   117dc:	ldr	r0, [r1, #8]
   117e0:	mov	r5, r1
   117e4:	bl	11720 <getc@plt+0xd00>
   117e8:	mov	r1, r5
   117ec:	add	r0, r4, r0, lsl #4
   117f0:	add	r4, r4, #4096	; 0x1000
   117f4:	bl	12594 <error@@Base+0x930>
   117f8:	ldr	r0, [r4, #3952]	; 0xf70
   117fc:	cmp	r0, #0
   11800:	beq	11810 <getc@plt+0xdf0>
   11804:	bl	108e8 <free@plt>
   11808:	mov	r3, #0
   1180c:	str	r3, [r4, #3952]	; 0xf70
   11810:	ldr	r3, [r4, #3956]	; 0xf74
   11814:	add	r3, r3, #1
   11818:	str	r3, [r4, #3956]	; 0xf74
   1181c:	pop	{r4, r5, r6, pc}
   11820:	push	{r4, r5, r6, lr}
   11824:	mov	r4, r0
   11828:	ldr	r0, [r1, #8]
   1182c:	mov	r5, r1
   11830:	bl	11720 <getc@plt+0xd00>
   11834:	mov	r1, r5
   11838:	add	r0, r4, r0, lsl #4
   1183c:	add	r4, r4, #4096	; 0x1000
   11840:	bl	125cc <error@@Base+0x968>
   11844:	ldr	r0, [r4, #3952]	; 0xf70
   11848:	cmp	r0, #0
   1184c:	beq	1185c <getc@plt+0xe3c>
   11850:	bl	108e8 <free@plt>
   11854:	mov	r3, #0
   11858:	str	r3, [r4, #3952]	; 0xf70
   1185c:	ldr	r3, [r4, #3956]	; 0xf74
   11860:	sub	r3, r3, #1
   11864:	str	r3, [r4, #3956]	; 0xf74
   11868:	pop	{r4, r5, r6, pc}
   1186c:	push	{r4, r5, r6, lr}
   11870:	add	r6, r0, #4096	; 0x1000
   11874:	ldr	r4, [r6, #3952]	; 0xf70
   11878:	cmp	r4, #0
   1187c:	popne	{r4, r5, r6, pc}
   11880:	ldr	r3, [r6, #3956]	; 0xf74
   11884:	cmp	r3, #0
   11888:	popeq	{r4, r5, r6, pc}
   1188c:	mov	r5, r0
   11890:	mov	r1, #4
   11894:	mov	r0, r3
   11898:	bl	11ca0 <error@@Base+0x3c>
   1189c:	ldr	lr, [pc, #60]	; 118e0 <getc@plt+0xec0>
   118a0:	mov	r3, r4
   118a4:	mov	r2, r4
   118a8:	str	r0, [r6, #3952]	; 0xf70
   118ac:	ldr	r1, [r5, r2, lsl #4]
   118b0:	mov	ip, r3
   118b4:	cmp	r1, #0
   118b8:	mov	r3, ip
   118bc:	bne	118d0 <getc@plt+0xeb0>
   118c0:	add	r2, r2, #1
   118c4:	cmp	r2, lr
   118c8:	bne	118ac <getc@plt+0xe8c>
   118cc:	pop	{r4, r5, r6, pc}
   118d0:	str	r1, [r0, ip, lsl #2]
   118d4:	add	ip, ip, #1
   118d8:	ldr	r1, [r1, #4]
   118dc:	b	118b4 <getc@plt+0xe94>
   118e0:	strdeq	r0, [r0], -r7
   118e4:	push	{r4, r5, r6, r7, r8, lr}
   118e8:	add	r6, r0, #8000	; 0x1f40
   118ec:	mov	r4, r0
   118f0:	mov	r7, r1
   118f4:	mov	r5, r0
   118f8:	add	r6, r6, #48	; 0x30
   118fc:	mov	r0, r5
   11900:	mov	r1, r7
   11904:	add	r5, r5, #16
   11908:	bl	12678 <error@@Base+0xa14>
   1190c:	cmp	r5, r6
   11910:	bne	118fc <getc@plt+0xedc>
   11914:	add	r4, r4, #4096	; 0x1000
   11918:	ldr	r0, [r4, #3952]	; 0xf70
   1191c:	cmp	r0, #0
   11920:	beq	11930 <getc@plt+0xf10>
   11924:	bl	108e8 <free@plt>
   11928:	mov	r3, #0
   1192c:	str	r3, [r4, #3952]	; 0xf70
   11930:	mov	r3, #0
   11934:	str	r3, [r4, #3956]	; 0xf74
   11938:	pop	{r4, r5, r6, r7, r8, pc}
   1193c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11940:	mov	r7, #0
   11944:	ldr	r6, [pc, #144]	; 119dc <getc@plt+0xfbc>
   11948:	ldr	r5, [pc, #144]	; 119e0 <getc@plt+0xfc0>
   1194c:	mov	sl, r6
   11950:	sub	r8, r6, #1024	; 0x400
   11954:	add	fp, r6, #2
   11958:	ldrsh	r9, [r6]
   1195c:	mov	r4, #0
   11960:	b	11968 <getc@plt+0xf48>
   11964:	add	r4, r4, #1
   11968:	cmp	r4, r9
   1196c:	bge	119a8 <getc@plt+0xf88>
   11970:	ldr	r1, [r8, r4, lsl #2]
   11974:	ldr	r0, [r5, #8]
   11978:	bl	108d0 <strcmp@plt>
   1197c:	cmp	r0, #0
   11980:	bne	11964 <getc@plt+0xf44>
   11984:	ldr	r3, [r5]
   11988:	ldr	r2, [r5, #4]
   1198c:	cmp	r2, r3
   11990:	bcs	119d0 <getc@plt+0xfb0>
   11994:	add	r7, r7, #1
   11998:	cmp	r7, #91	; 0x5b
   1199c:	add	r5, r5, #12
   119a0:	bne	11958 <getc@plt+0xf38>
   119a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119a8:	bne	11984 <getc@plt+0xf64>
   119ac:	cmp	r4, #256	; 0x100
   119b0:	bne	119bc <getc@plt+0xf9c>
   119b4:	ldr	r0, [pc, #40]	; 119e4 <getc@plt+0xfc4>
   119b8:	bl	11c64 <error@@Base>
   119bc:	add	r3, r4, #1
   119c0:	strh	r3, [sl]
   119c4:	ldr	r3, [r5, #8]
   119c8:	str	r3, [r8, r4, lsl #2]
   119cc:	b	11984 <getc@plt+0xf64>
   119d0:	strb	r4, [r3, fp]
   119d4:	add	r3, r3, #1
   119d8:	b	1198c <getc@plt+0xf6c>
   119dc:	andeq	r4, r2, r0, lsr #10
   119e0:	andeq	r2, r1, ip, asr fp
   119e4:	andeq	r2, r1, r0, lsr #31
   119e8:	ldr	r3, [pc, #36]	; 11a14 <getc@plt+0xff4>
   119ec:	push	{r4, lr}
   119f0:	mov	r4, r0
   119f4:	ldrsh	r3, [r3]
   119f8:	cmp	r3, #0
   119fc:	bne	11a04 <getc@plt+0xfe4>
   11a00:	bl	1193c <getc@plt+0xf1c>
   11a04:	ldr	r3, [pc, #12]	; 11a18 <getc@plt+0xff8>
   11a08:	add	r0, r3, r4
   11a0c:	ldrb	r0, [r0, #1026]	; 0x402
   11a10:	pop	{r4, pc}
   11a14:	andeq	r4, r2, r0, lsr #10
   11a18:	andeq	r4, r2, r0, lsr #2
   11a1c:	ldr	r3, [pc, #56]	; 11a5c <getc@plt+0x103c>
   11a20:	push	{r4, r5, r6, lr}
   11a24:	uxtb	r5, r0
   11a28:	ldrsh	r2, [r3]
   11a2c:	mov	r4, r3
   11a30:	cmp	r2, #0
   11a34:	bne	11a3c <getc@plt+0x101c>
   11a38:	bl	1193c <getc@plt+0xf1c>
   11a3c:	ldrsh	r3, [r4]
   11a40:	cmp	r5, r3
   11a44:	blt	11a50 <getc@plt+0x1030>
   11a48:	ldr	r0, [pc, #16]	; 11a60 <getc@plt+0x1040>
   11a4c:	bl	11c64 <error@@Base>
   11a50:	ldr	r3, [pc, #12]	; 11a64 <getc@plt+0x1044>
   11a54:	ldr	r0, [r3, r5, lsl #2]
   11a58:	pop	{r4, r5, r6, pc}
   11a5c:	andeq	r4, r2, r0, lsr #10
   11a60:			; <UNDEFINED> instruction: 0x00012fbb
   11a64:	andeq	r4, r2, r0, lsr #2
   11a68:	ldr	r3, [pc, #56]	; 11aa8 <getc@plt+0x1088>
   11a6c:	push	{r4, r5, lr}
   11a70:	sub	sp, sp, #116	; 0x74
   11a74:	ldr	r4, [r3]
   11a78:	mov	r5, r0
   11a7c:	bl	10990 <getpid@plt>
   11a80:	mov	r2, r4
   11a84:	ldr	r1, [pc, #32]	; 11aac <getc@plt+0x108c>
   11a88:	str	r5, [sp]
   11a8c:	mov	r3, r0
   11a90:	add	r0, sp, #12
   11a94:	bl	109e4 <sprintf@plt>
   11a98:	add	r0, sp, #12
   11a9c:	bl	10918 <strdup@plt>
   11aa0:	add	sp, sp, #116	; 0x74
   11aa4:	pop	{r4, r5, pc}
   11aa8:	addseq	r6, fp, r0, lsl #29
   11aac:	andeq	r3, r1, r6, lsl #11
   11ab0:	ldr	r3, [pc, #84]	; 11b0c <getc@plt+0x10ec>
   11ab4:	push	{r7, lr}
   11ab8:	mov	r5, r0
   11abc:	ldr	r3, [r3]
   11ac0:	cmp	r3, #0
   11ac4:	beq	11acc <getc@plt+0x10ac>
   11ac8:	blx	r3
   11acc:	ldr	r6, [pc, #60]	; 11b10 <getc@plt+0x10f0>
   11ad0:	mov	r4, #1
   11ad4:	ldrsh	r3, [r6]
   11ad8:	cmp	r3, r4
   11adc:	bge	11ae8 <getc@plt+0x10c8>
   11ae0:	mov	r0, r5
   11ae4:	bl	1099c <exit@plt>
   11ae8:	mov	r0, r4
   11aec:	bl	11a68 <getc@plt+0x1048>
   11af0:	add	r4, r4, #1
   11af4:	sxth	r4, r4
   11af8:	mov	r7, r0
   11afc:	bl	10930 <unlink@plt>
   11b00:	mov	r0, r7
   11b04:	bl	108e8 <free@plt>
   11b08:	b	11ad4 <getc@plt+0x10b4>
   11b0c:	addseq	r6, fp, r4, lsl #29
   11b10:	andseq	r4, r3, r2, lsr #10
   11b14:	mov	r3, #0
   11b18:	ldrb	r2, [r0, r3]
   11b1c:	cmp	r2, #0
   11b20:	beq	11b4c <getc@plt+0x112c>
   11b24:	ldrb	ip, [r1, r3]
   11b28:	cmp	ip, r2
   11b2c:	beq	11b44 <getc@plt+0x1124>
   11b30:	ldrb	r3, [r1, r3]
   11b34:	cmp	r3, r2
   11b38:	mvnhi	r0, #0
   11b3c:	movls	r0, #1
   11b40:	bx	lr
   11b44:	add	r3, r3, #1
   11b48:	b	11b18 <getc@plt+0x10f8>
   11b4c:	ldrb	r0, [r1, r3]
   11b50:	cmp	r0, #0
   11b54:	bne	11b30 <getc@plt+0x1110>
   11b58:	bx	lr
   11b5c:	ldr	r2, [pc, #28]	; 11b80 <getc@plt+0x1160>
   11b60:	ldr	r2, [r2]
   11b64:	cmp	r2, r0
   11b68:	bxeq	lr
   11b6c:	ldr	r2, [pc, #16]	; 11b84 <getc@plt+0x1164>
   11b70:	ldr	r2, [r2]
   11b74:	cmp	r0, r2
   11b78:	bxeq	lr
   11b7c:	b	109d8 <fclose@plt>
   11b80:	andeq	r4, r2, r8, lsr #1
   11b84:	andeq	r4, r2, ip, lsr #1
   11b88:	push	{lr}		; (str lr, [sp, #-4]!)
   11b8c:	sub	sp, sp, #92	; 0x5c
   11b90:	mov	r1, sp
   11b94:	bl	12960 <error@@Base+0xcfc>
   11b98:	clz	r0, r0
   11b9c:	lsr	r0, r0, #5
   11ba0:	add	sp, sp, #92	; 0x5c
   11ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ba8:	ldr	r3, [pc, #36]	; 11bd4 <getc@plt+0x11b4>
   11bac:	push	{r4, lr}
   11bb0:	ldrh	r0, [r3]
   11bb4:	add	r0, r0, #1
   11bb8:	sxth	r0, r0
   11bbc:	strh	r0, [r3]
   11bc0:	bl	11a68 <getc@plt+0x1048>
   11bc4:	mov	r4, r0
   11bc8:	bl	10930 <unlink@plt>
   11bcc:	mov	r0, r4
   11bd0:	pop	{r4, pc}
   11bd4:	andseq	r4, r3, r2, lsr #10
   11bd8:	push	{r4, lr}
   11bdc:	mov	r4, r0
   11be0:	bl	109b4 <strlen@plt>
   11be4:	sub	r0, r0, #1
   11be8:	sxth	r0, r0
   11bec:	cmp	r0, #0
   11bf0:	blt	11c00 <getc@plt+0x11e0>
   11bf4:	ldrb	r3, [r4, r0]
   11bf8:	cmp	r3, #47	; 0x2f
   11bfc:	bne	11be4 <getc@plt+0x11c4>
   11c00:	add	r0, r0, #1
   11c04:	add	r0, r4, r0
   11c08:	pop	{r4, pc}
   11c0c:	push	{r4, lr}
   11c10:	mov	r0, #0
   11c14:	bl	11ab0 <getc@plt+0x1090>
   11c18:	ldr	r2, [pc, #52]	; 11c54 <getc@plt+0x1234>
   11c1c:	push	{r4, lr}
   11c20:	ldr	r2, [r2]
   11c24:	cmp	r2, #0
   11c28:	beq	11c34 <getc@plt+0x1214>
   11c2c:	blx	r2
   11c30:	bl	11c0c <getc@plt+0x11ec>
   11c34:	mov	r3, r0
   11c38:	ldr	r2, [pc, #24]	; 11c58 <getc@plt+0x1238>
   11c3c:	ldr	r0, [pc, #24]	; 11c5c <getc@plt+0x123c>
   11c40:	ldr	r1, [pc, #24]	; 11c60 <getc@plt+0x1240>
   11c44:	ldr	r2, [r2]
   11c48:	ldr	r0, [r0]
   11c4c:	bl	109c0 <fprintf@plt>
   11c50:	b	11c30 <getc@plt+0x1210>
   11c54:	addseq	r6, fp, ip, ror lr
   11c58:	addseq	r6, fp, r0, lsl #29
   11c5c:	andeq	r4, r2, r0, lsr #1
   11c60:	muleq	r1, r4, r5

00011c64 <error@@Base>:
   11c64:	mov	r3, r0
   11c68:	ldr	r2, [pc, #32]	; 11c90 <error@@Base+0x2c>
   11c6c:	ldr	r0, [pc, #32]	; 11c94 <error@@Base+0x30>
   11c70:	push	{r4, lr}
   11c74:	ldr	r2, [r2]
   11c78:	ldr	r1, [pc, #24]	; 11c98 <error@@Base+0x34>
   11c7c:	ldr	r0, [r0]
   11c80:	bl	109c0 <fprintf@plt>
   11c84:	ldr	r3, [pc, #16]	; 11c9c <error@@Base+0x38>
   11c88:	ldr	r0, [r3]
   11c8c:	bl	11ab0 <getc@plt+0x1090>
   11c90:	addseq	r6, fp, r0, lsl #29
   11c94:	andeq	r4, r2, r0, lsr #1
   11c98:	andeq	r3, r1, r3, lsr #11
   11c9c:	muleq	r2, r4, r0
   11ca0:	push	{r4, lr}
   11ca4:	bl	108b8 <calloc@plt>
   11ca8:	cmp	r0, #0
   11cac:	popne	{r4, pc}
   11cb0:	ldr	r0, [pc]	; 11cb8 <error@@Base+0x54>
   11cb4:	bl	11c64 <error@@Base>
   11cb8:	andeq	r3, r1, fp, lsr #11
   11cbc:	ldr	r3, [pc, #32]	; 11ce4 <error@@Base+0x80>
   11cc0:	ldrb	r2, [r3, #2]
   11cc4:	cmp	r2, #0
   11cc8:	bne	11ce0 <error@@Base+0x7c>
   11ccc:	push	{r4, lr}
   11cd0:	mov	r2, #1
   11cd4:	ldr	r0, [pc, #12]	; 11ce8 <error@@Base+0x84>
   11cd8:	strb	r2, [r3, #2]
   11cdc:	bl	11c64 <error@@Base>
   11ce0:	bx	lr
   11ce4:	andseq	r4, r3, r2, lsr #10
   11ce8:	andeq	r3, r1, r5, asr #11
   11cec:	push	{r0, r1, r2, lr}
   11cf0:	mov	r3, r0
   11cf4:	ldr	r2, [pc, #32]	; 11d1c <error@@Base+0xb8>
   11cf8:	ldr	r0, [pc, #32]	; 11d20 <error@@Base+0xbc>
   11cfc:	str	r1, [sp]
   11d00:	ldr	r1, [pc, #28]	; 11d24 <error@@Base+0xc0>
   11d04:	ldr	r2, [r2]
   11d08:	ldr	r0, [r0]
   11d0c:	bl	109c0 <fprintf@plt>
   11d10:	ldr	r3, [pc, #16]	; 11d28 <error@@Base+0xc4>
   11d14:	ldr	r0, [r3]
   11d18:	bl	11ab0 <getc@plt+0x1090>
   11d1c:	addseq	r6, fp, r0, lsl #29
   11d20:	andeq	r4, r2, r0, lsr #1
   11d24:	ldrdeq	r3, [r1], -r4
   11d28:	muleq	r2, r4, r0
   11d2c:	push	{r4, r5, r6, lr}
   11d30:	subs	r4, r0, #0
   11d34:	mov	r5, r1
   11d38:	bne	11d54 <error@@Base+0xf0>
   11d3c:	ldrb	r3, [r1]
   11d40:	cmp	r3, #114	; 0x72
   11d44:	ldreq	r3, [pc, #44]	; 11d78 <error@@Base+0x114>
   11d48:	ldrne	r3, [pc, #44]	; 11d7c <error@@Base+0x118>
   11d4c:	ldr	r0, [r3]
   11d50:	pop	{r4, r5, r6, pc}
   11d54:	bl	108dc <fopen@plt>
   11d58:	cmp	r0, #0
   11d5c:	popne	{r4, r5, r6, pc}
   11d60:	ldrb	r3, [r5]
   11d64:	mov	r1, r4
   11d68:	cmp	r3, #119	; 0x77
   11d6c:	ldreq	r0, [pc, #12]	; 11d80 <error@@Base+0x11c>
   11d70:	ldrne	r0, [pc, #12]	; 11d84 <error@@Base+0x120>
   11d74:	bl	11cec <error@@Base+0x88>
   11d78:	andeq	r4, r2, r8, lsr #1
   11d7c:	andeq	r4, r2, ip, lsr #1
   11d80:	andeq	r3, r1, r1, ror #11
   11d84:	strdeq	r3, [r1], -r7
   11d88:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d8c:	mov	r8, r0
   11d90:	ldr	r0, [r1]
   11d94:	str	r2, [sp]
   11d98:	mov	r7, r1
   11d9c:	mov	r9, r3
   11da0:	bl	11bd8 <getc@plt+0x11b8>
   11da4:	ldr	r3, [pc, #396]	; 11f38 <error@@Base+0x2d4>
   11da8:	ldr	r1, [pc, #396]	; 11f3c <error@@Base+0x2d8>
   11dac:	str	r0, [r3]
   11db0:	mov	r0, #2
   11db4:	bl	10978 <__sysv_signal@plt>
   11db8:	ldr	r1, [pc, #380]	; 11f3c <error@@Base+0x2d8>
   11dbc:	mov	r0, #15
   11dc0:	bl	10978 <__sysv_signal@plt>
   11dc4:	ldr	r3, [r8]
   11dc8:	cmp	r3, #1
   11dcc:	movne	r6, #0
   11dd0:	movne	r5, #1
   11dd4:	bne	11ef8 <error@@Base+0x294>
   11dd8:	ldr	r3, [pc, #352]	; 11f40 <error@@Base+0x2dc>
   11ddc:	ldrb	r6, [r3, #4]
   11de0:	cmp	r6, #0
   11de4:	beq	11f04 <error@@Base+0x2a0>
   11de8:	ldr	r0, [sp]
   11dec:	bl	11c18 <getc@plt+0x11f8>
   11df0:	ldr	r4, [r7, r5, lsl #2]
   11df4:	lsl	sl, r5, #2
   11df8:	ldrb	r3, [r4]
   11dfc:	cmp	r3, #45	; 0x2d
   11e00:	bne	11f28 <error@@Base+0x2c4>
   11e04:	ldrb	r3, [r4, #1]
   11e08:	cmp	r3, #0
   11e0c:	str	r3, [sp, #4]
   11e10:	beq	11f28 <error@@Base+0x2c4>
   11e14:	mov	r0, r4
   11e18:	bl	109b4 <strlen@plt>
   11e1c:	mov	r1, r4
   11e20:	mov	r2, r0
   11e24:	ldr	r0, [pc, #280]	; 11f44 <error@@Base+0x2e0>
   11e28:	bl	10a08 <strncmp@plt>
   11e2c:	cmp	r0, #0
   11e30:	beq	11de8 <error@@Base+0x184>
   11e34:	add	r0, r5, #1
   11e38:	cmp	r0, fp
   11e3c:	addlt	sl, r7, sl
   11e40:	movge	r1, #0
   11e44:	ldrlt	r1, [sl, #4]
   11e48:	cmp	r9, #0
   11e4c:	ldr	r3, [sp, #4]
   11e50:	beq	11f10 <error@@Base+0x2ac>
   11e54:	mov	r2, #0
   11e58:	add	lr, r2, r2, lsl #1
   11e5c:	add	ip, r9, lr, lsl #2
   11e60:	ldrb	lr, [r9, lr, lsl #2]
   11e64:	cmp	lr, #0
   11e68:	beq	11f10 <error@@Base+0x2ac>
   11e6c:	cmp	r3, lr
   11e70:	bne	11eb0 <error@@Base+0x24c>
   11e74:	ldr	r3, [ip, #4]
   11e78:	cmp	r3, #0
   11e7c:	bne	11ebc <error@@Base+0x258>
   11e80:	ldr	r3, [ip, #8]
   11e84:	cmp	r3, #0
   11e88:	beq	11f10 <error@@Base+0x2ac>
   11e8c:	ldrb	r2, [r4, #2]
   11e90:	cmp	r2, #0
   11e94:	bne	11f10 <error@@Base+0x2ac>
   11e98:	ldrb	r2, [r3]
   11e9c:	cmp	r2, #0
   11ea0:	bne	11f1c <error@@Base+0x2b8>
   11ea4:	mov	r2, #1
   11ea8:	strb	r2, [r3]
   11eac:	b	11ef0 <error@@Base+0x28c>
   11eb0:	add	r2, r2, #1
   11eb4:	sxth	r2, r2
   11eb8:	b	11e58 <error@@Base+0x1f4>
   11ebc:	ldrb	r2, [r4, #2]
   11ec0:	cmp	r2, #0
   11ec4:	cmpeq	r1, #0
   11ec8:	beq	11e80 <error@@Base+0x21c>
   11ecc:	ldr	ip, [r3]
   11ed0:	cmp	ip, #0
   11ed4:	bne	11f1c <error@@Base+0x2b8>
   11ed8:	cmp	r2, #0
   11edc:	addne	r1, r4, #2
   11ee0:	str	r1, [r3]
   11ee4:	ldrb	r3, [r4, #2]
   11ee8:	cmp	r3, #0
   11eec:	sxtheq	r5, r0
   11ef0:	add	r5, r5, #1
   11ef4:	sxth	r5, r5
   11ef8:	ldr	fp, [r8]
   11efc:	cmp	r5, fp
   11f00:	blt	11df0 <error@@Base+0x18c>
   11f04:	str	r6, [r8]
   11f08:	add	sp, sp, #12
   11f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f10:	ldr	r0, [pc, #48]	; 11f48 <error@@Base+0x2e4>
   11f14:	mov	r1, r4
   11f18:	bl	11cec <error@@Base+0x88>
   11f1c:	mov	r1, r4
   11f20:	ldr	r0, [pc, #36]	; 11f4c <error@@Base+0x2e8>
   11f24:	b	11f18 <error@@Base+0x2b4>
   11f28:	add	r3, r6, #1
   11f2c:	str	r4, [r7, r6, lsl #2]
   11f30:	sxth	r6, r3
   11f34:	b	11ef0 <error@@Base+0x28c>
   11f38:	addseq	r6, fp, r0, lsl #29
   11f3c:			; <UNDEFINED> instruction: 0x00011cbc
   11f40:	muleq	r2, r4, r0
   11f44:	andeq	r3, r1, fp, lsl #12
   11f48:	andeq	r3, r1, r1, lsl r6
   11f4c:	andeq	r3, r1, r0, lsr #12
   11f50:	push	{r0, r1, r2, lr}
   11f54:	mov	r3, r0
   11f58:	ldr	r2, [pc, #28]	; 11f7c <error@@Base+0x318>
   11f5c:	ldr	r0, [pc, #28]	; 11f80 <error@@Base+0x31c>
   11f60:	str	r1, [sp]
   11f64:	ldr	r1, [pc, #24]	; 11f84 <error@@Base+0x320>
   11f68:	ldr	r2, [r2]
   11f6c:	ldr	r0, [r0]
   11f70:	bl	109c0 <fprintf@plt>
   11f74:	add	sp, sp, #12
   11f78:	pop	{pc}		; (ldr pc, [sp], #4)
   11f7c:	addseq	r6, fp, r0, lsl #29
   11f80:	andeq	r4, r2, r0, lsr #1
   11f84:	ldrdeq	r3, [r1], -r4
   11f88:	push	{r4, r5, r6, lr}
   11f8c:	mov	r4, r0
   11f90:	uxtb	r6, r1
   11f94:	mov	r0, #1
   11f98:	mov	r1, #16
   11f9c:	mov	r5, r2
   11fa0:	bl	11ca0 <error@@Base+0x3c>
   11fa4:	strb	r6, [r0, #8]
   11fa8:	str	r5, [r0, #12]
   11fac:	mov	r1, r0
   11fb0:	mov	r0, r4
   11fb4:	pop	{r4, r5, r6, lr}
   11fb8:	b	125a4 <error@@Base+0x940>
   11fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fc0:	sub	sp, sp, #116	; 0x74
   11fc4:	ldrb	r3, [r2]
   11fc8:	adds	r3, r3, #0
   11fcc:	movne	r3, #1
   11fd0:	cmp	r1, #0
   11fd4:	movne	r3, #0
   11fd8:	cmp	r3, #0
   11fdc:	beq	11fec <error@@Base+0x388>
   11fe0:	ldr	r1, [pc, #752]	; 122d8 <error@@Base+0x674>
   11fe4:	ldr	r0, [pc, #752]	; 122dc <error@@Base+0x678>
   11fe8:	bl	11cec <error@@Base+0x88>
   11fec:	mov	r6, r0
   11ff0:	mov	r0, r1
   11ff4:	ldr	r1, [pc, #740]	; 122e0 <error@@Base+0x67c>
   11ff8:	mov	r4, r2
   11ffc:	ldr	r7, [r6, #4]
   12000:	bl	11d2c <error@@Base+0xc8>
   12004:	ldrb	r3, [r4]
   12008:	cmp	r3, #0
   1200c:	mov	r5, r0
   12010:	beq	1205c <error@@Base+0x3f8>
   12014:	mov	r2, r0
   12018:	mov	r1, #99	; 0x63
   1201c:	add	r0, sp, #12
   12020:	bl	10900 <fgets@plt>
   12024:	cmp	r0, #0
   12028:	beq	1204c <error@@Base+0x3e8>
   1202c:	mov	r2, #51	; 0x33
   12030:	ldr	r1, [pc, #684]	; 122e4 <error@@Base+0x680>
   12034:	add	r0, sp, #12
   12038:	bl	10a08 <strncmp@plt>
   1203c:	subs	r8, r0, #0
   12040:	moveq	r9, #99	; 0x63
   12044:	ldreq	sl, [pc, #668]	; 122e8 <error@@Base+0x684>
   12048:	beq	120d8 <error@@Base+0x474>
   1204c:	mov	r0, r5
   12050:	bl	10924 <rewind@plt>
   12054:	mov	r3, #0
   12058:	strb	r3, [r4, #11]
   1205c:	ldrb	r3, [r4, #1]
   12060:	ldr	r8, [r4, #4]
   12064:	mov	r0, r5
   12068:	cmp	r8, #0
   1206c:	mov	fp, #0
   12070:	str	r3, [sp]
   12074:	moveq	r8, #94	; 0x5e
   12078:	bl	10a20 <getc@plt>
   1207c:	add	r3, sp, #9
   12080:	str	r3, [sp, #4]
   12084:	cmn	r0, #1
   12088:	bne	120f8 <error@@Base+0x494>
   1208c:	mov	r0, r5
   12090:	bl	11b5c <getc@plt+0x113c>
   12094:	ldrb	r3, [r4, #9]
   12098:	cmp	r3, #0
   1209c:	bne	1219c <error@@Base+0x538>
   120a0:	ldrb	r3, [r4, #10]
   120a4:	cmp	r3, #0
   120a8:	bne	122b0 <error@@Base+0x64c>
   120ac:	add	sp, sp, #116	; 0x74
   120b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120b4:	mov	r1, sl
   120b8:	add	r0, sp, #12
   120bc:	bl	108d0 <strcmp@plt>
   120c0:	cmp	r0, #0
   120c4:	bne	120d8 <error@@Base+0x474>
   120c8:	add	r8, r8, #1
   120cc:	sxth	r8, r8
   120d0:	cmp	r8, #1
   120d4:	bgt	120f0 <error@@Base+0x48c>
   120d8:	mov	r2, r5
   120dc:	mov	r1, r9
   120e0:	add	r0, sp, #12
   120e4:	bl	10900 <fgets@plt>
   120e8:	cmp	r0, #0
   120ec:	bne	120b4 <error@@Base+0x450>
   120f0:	mov	r3, #1
   120f4:	b	12058 <error@@Base+0x3f4>
   120f8:	ldr	r3, [pc, #492]	; 122ec <error@@Base+0x688>
   120fc:	ldrsb	r9, [r3, r0]
   12100:	cmp	r9, #0
   12104:	bgt	12110 <error@@Base+0x4ac>
   12108:	ldr	r0, [pc, #480]	; 122f0 <error@@Base+0x68c>
   1210c:	bl	11c64 <error@@Base>
   12110:	cmp	r9, #1
   12114:	strb	r0, [sp, #8]
   12118:	beq	12140 <error@@Base+0x4dc>
   1211c:	sub	sl, r9, #1
   12120:	mov	r3, r5
   12124:	mov	r2, sl
   12128:	mov	r1, #1
   1212c:	ldr	r0, [sp, #4]
   12130:	bl	10954 <fread@plt>
   12134:	cmp	sl, r0
   12138:	ldrne	r0, [pc, #436]	; 122f4 <error@@Base+0x690>
   1213c:	bne	1210c <error@@Base+0x4a8>
   12140:	add	r2, sp, #12
   12144:	mov	r1, #4
   12148:	add	r0, sp, #8
   1214c:	bl	10960 <utf8proc_iterate@plt>
   12150:	cmp	r9, r0
   12154:	beq	12160 <error@@Base+0x4fc>
   12158:	bl	109f0 <utf8proc_errmsg@plt>
   1215c:	b	1210c <error@@Base+0x4a8>
   12160:	ldr	r3, [sp]
   12164:	cmp	r3, #0
   12168:	beq	1217c <error@@Base+0x518>
   1216c:	ldr	r3, [sp, #12]
   12170:	cmp	r8, r3
   12174:	moveq	fp, #1
   12178:	beq	12190 <error@@Base+0x52c>
   1217c:	mov	r1, fp
   12180:	ldr	r2, [sp, #12]
   12184:	mov	r0, r6
   12188:	bl	11f88 <error@@Base+0x324>
   1218c:	mov	fp, #0
   12190:	mov	r0, r5
   12194:	bl	10a20 <getc@plt>
   12198:	b	12084 <error@@Base+0x420>
   1219c:	cmp	r7, #0
   121a0:	mov	sl, #32
   121a4:	ldrne	r8, [r7, #4]
   121a8:	ldreq	r8, [r6]
   121ac:	mov	r5, r8
   121b0:	cmp	r5, #0
   121b4:	bne	1223c <error@@Base+0x5d8>
   121b8:	cmp	r8, #0
   121bc:	beq	120a0 <error@@Base+0x43c>
   121c0:	ldr	r2, [r8, #12]
   121c4:	ldr	r9, [r8, #4]
   121c8:	cmp	r2, #32
   121cc:	eor	r3, r5, #1
   121d0:	bne	12290 <error@@Base+0x62c>
   121d4:	cmp	r9, #0
   121d8:	orreq	r3, r3, #1
   121dc:	cmp	r3, #0
   121e0:	bne	121f4 <error@@Base+0x590>
   121e4:	ldr	r3, [r9, #12]
   121e8:	cmp	r3, #10
   121ec:	cmpne	r3, #32
   121f0:	bne	122a4 <error@@Base+0x640>
   121f4:	cmp	r9, #0
   121f8:	moveq	r3, #0
   121fc:	andne	r3, r5, #1
   12200:	cmp	r3, #0
   12204:	beq	12220 <error@@Base+0x5bc>
   12208:	ldr	r3, [r9, #12]
   1220c:	cmp	r3, #32
   12210:	ldrbeq	r3, [r9, #8]
   12214:	ldrbeq	r2, [r8, #8]
   12218:	orreq	r3, r3, r2
   1221c:	strbeq	r3, [r9, #8]
   12220:	mov	r0, r6
   12224:	mov	r1, r8
   12228:	bl	125cc <error@@Base+0x968>
   1222c:	mov	r0, r8
   12230:	bl	108e8 <free@plt>
   12234:	mov	r8, r9
   12238:	b	121b8 <error@@Base+0x554>
   1223c:	ldr	r9, [r5, #12]
   12240:	mov	r0, r9
   12244:	bl	108f4 <utf8proc_get_property@plt>
   12248:	cmp	r9, #13
   1224c:	bhi	12280 <error@@Base+0x61c>
   12250:	cmp	r9, #11
   12254:	bcs	12288 <error@@Base+0x624>
   12258:	cmp	r9, #9
   1225c:	beq	12288 <error@@Base+0x624>
   12260:	cmp	r9, #10
   12264:	beq	12278 <error@@Base+0x614>
   12268:	ldrsh	r3, [r0]
   1226c:	sub	r3, r3, #23
   12270:	cmp	r3, #2
   12274:	bls	12288 <error@@Base+0x624>
   12278:	ldr	r5, [r5, #4]
   1227c:	b	121b0 <error@@Base+0x54c>
   12280:	cmp	r9, #160	; 0xa0
   12284:	bne	12268 <error@@Base+0x604>
   12288:	str	sl, [r5, #12]
   1228c:	b	12278 <error@@Base+0x614>
   12290:	cmp	r2, #10
   12294:	movne	r3, #0
   12298:	andeq	r3, r3, #1
   1229c:	cmp	r3, #0
   122a0:	bne	121f4 <error@@Base+0x590>
   122a4:	subs	r5, r2, #10
   122a8:	movne	r5, #1
   122ac:	b	12234 <error@@Base+0x5d0>
   122b0:	cmp	r7, #0
   122b4:	ldrne	r4, [r7, #4]
   122b8:	ldreq	r4, [r6]
   122bc:	cmp	r4, #0
   122c0:	beq	120ac <error@@Base+0x448>
   122c4:	ldr	r0, [r4, #12]
   122c8:	bl	1093c <utf8proc_tolower@plt>
   122cc:	str	r0, [r4, #12]
   122d0:	ldr	r4, [r4, #4]
   122d4:	b	122bc <error@@Base+0x658>
   122d8:	andeq	r3, r1, r1, lsr r6
   122dc:	andeq	r3, r1, fp, lsr r6
   122e0:	ldrdeq	r3, [r1], -r1
   122e4:	andeq	r3, r1, fp, asr #12
   122e8:	andeq	r3, r1, r3, lsl #13
   122ec:	andeq	r3, r2, r8, lsl #28
   122f0:			; <UNDEFINED> instruction: 0x000136bb
   122f4:	ldrdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   122f8:	push	{r4, lr}
   122fc:	bl	1090c <utf8proc_encode_char@plt>
   12300:	cmp	r0, #0
   12304:	bgt	12310 <error@@Base+0x6ac>
   12308:	ldr	r0, [pc, #8]	; 12318 <error@@Base+0x6b4>
   1230c:	bl	11c64 <error@@Base>
   12310:	sxtb	r0, r0
   12314:	pop	{r4, pc}
   12318:	andeq	r3, r1, fp, ror #13
   1231c:	push	{r4, r5, r6, r7, r8, lr}
   12320:	uxtb	r4, r0
   12324:	cmp	r4, #0
   12328:	mov	r7, r1
   1232c:	mov	r6, r2
   12330:	uxtb	r8, r3
   12334:	beq	12348 <error@@Base+0x6e4>
   12338:	mov	r1, r2
   1233c:	mov	r0, #94	; 0x5e
   12340:	bl	122f8 <error@@Base+0x694>
   12344:	sxth	r4, r0
   12348:	cmp	r7, #10
   1234c:	add	r5, r6, r4
   12350:	bne	12370 <error@@Base+0x70c>
   12354:	ldr	r2, [pc, #168]	; 12404 <error@@Base+0x7a0>
   12358:	cmp	r8, #0
   1235c:	ldr	r1, [pc, #164]	; 12408 <error@@Base+0x7a4>
   12360:	mov	r0, r5
   12364:	moveq	r1, r2
   12368:	pop	{r4, r5, r6, r7, r8, lr}
   1236c:	b	109e4 <sprintf@plt>
   12370:	mov	r0, r7
   12374:	bl	108f4 <utf8proc_get_property@plt>
   12378:	cmp	r7, #32
   1237c:	beq	1239c <error@@Base+0x738>
   12380:	ldrh	r3, [r0]
   12384:	cmp	r3, #29
   12388:	bhi	123e4 <error@@Base+0x780>
   1238c:	ldr	r2, [pc, #120]	; 1240c <error@@Base+0x7a8>
   12390:	mov	r1, #1
   12394:	ands	r3, r2, r1, lsl r3
   12398:	beq	123e4 <error@@Base+0x780>
   1239c:	mov	r0, r7
   123a0:	bl	109a8 <utf8proc_category@plt>
   123a4:	sub	r0, r0, #6
   123a8:	cmp	r0, #2
   123ac:	bhi	123c4 <error@@Base+0x760>
   123b0:	mov	r1, r5
   123b4:	ldr	r0, [pc, #84]	; 12410 <error@@Base+0x7ac>
   123b8:	bl	122f8 <error@@Base+0x694>
   123bc:	add	r4, r0, r4
   123c0:	sxth	r4, r4
   123c4:	add	r1, r6, r4
   123c8:	mov	r0, r7
   123cc:	bl	122f8 <error@@Base+0x694>
   123d0:	mov	r3, #0
   123d4:	add	r0, r0, r4
   123d8:	sxth	r0, r0
   123dc:	strb	r3, [r6, r0]
   123e0:	pop	{r4, r5, r6, r7, r8, pc}
   123e4:	cmp	r7, #255	; 0xff
   123e8:	movhi	r2, r7
   123ec:	ldrhi	r1, [pc, #32]	; 12414 <error@@Base+0x7b0>
   123f0:	ldrls	r1, [pc, #32]	; 12418 <error@@Base+0x7b4>
   123f4:	movls	r2, r7
   123f8:	mov	r0, r5
   123fc:	pop	{r4, r5, r6, r7, r8, lr}
   12400:	b	109e4 <sprintf@plt>
   12404:	andeq	r2, r1, r7, asr sl
   12408:	andeq	r3, r1, r2, lsl #14
   1240c:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   12410:	andeq	r2, r0, ip, asr #11
   12414:	andeq	r3, r1, lr, lsl #14
   12418:	andeq	r3, r1, r7, lsl #14
   1241c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   12420:	mov	r6, r0
   12424:	mov	r0, r1
   12428:	ldr	r1, [pc, #132]	; 124b4 <error@@Base+0x850>
   1242c:	mov	r5, r2
   12430:	bl	11d2c <error@@Base+0xc8>
   12434:	cmp	r5, #0
   12438:	mov	r4, r0
   1243c:	beq	1246c <error@@Base+0x808>
   12440:	mov	r1, r0
   12444:	ldr	r0, [pc, #108]	; 124b8 <error@@Base+0x854>
   12448:	bl	109fc <fputs@plt>
   1244c:	mov	r1, r4
   12450:	ldr	r0, [pc, #100]	; 124bc <error@@Base+0x858>
   12454:	bl	109fc <fputs@plt>
   12458:	mov	r0, r4
   1245c:	blx	r5
   12460:	mov	r1, r4
   12464:	ldr	r0, [pc, #80]	; 124bc <error@@Base+0x858>
   12468:	bl	109fc <fputs@plt>
   1246c:	ldr	r5, [r6]
   12470:	mov	r6, #0
   12474:	cmp	r5, #0
   12478:	bne	1248c <error@@Base+0x828>
   1247c:	mov	r0, r4
   12480:	bl	11b5c <getc@plt+0x113c>
   12484:	add	sp, sp, #16
   12488:	pop	{r4, r5, r6, pc}
   1248c:	ldr	r1, [r5, #12]
   12490:	ldrb	r0, [r5, #8]
   12494:	mov	r3, r6
   12498:	add	r2, sp, #4
   1249c:	bl	1231c <error@@Base+0x6b8>
   124a0:	mov	r1, r4
   124a4:	add	r0, sp, #4
   124a8:	bl	109fc <fputs@plt>
   124ac:	ldr	r5, [r5, #4]
   124b0:	b	12474 <error@@Base+0x810>
   124b4:	muleq	r1, r0, r1
   124b8:	andeq	r3, r1, fp, asr #12
   124bc:	andeq	r3, r1, r3, lsl #13
   124c0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   124c4:	mov	r4, r1
   124c8:	mov	r1, #0
   124cc:	add	r6, sp, #8
   124d0:	mov	r7, r0
   124d4:	mvn	r8, #0
   124d8:	mov	r5, r1
   124dc:	str	r1, [r6, #-4]!
   124e0:	ldrb	r3, [r4]
   124e4:	cmp	r3, #0
   124e8:	bne	124f8 <error@@Base+0x894>
   124ec:	mov	r0, #1
   124f0:	add	sp, sp, #12
   124f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   124f8:	mov	r2, r6
   124fc:	mov	r1, r8
   12500:	mov	r0, r4
   12504:	bl	10960 <utf8proc_iterate@plt>
   12508:	subs	r9, r0, #0
   1250c:	ble	12528 <error@@Base+0x8c4>
   12510:	ldr	r2, [sp, #4]
   12514:	mov	r1, r5
   12518:	mov	r0, r7
   1251c:	bl	11f88 <error@@Base+0x324>
   12520:	add	r4, r4, r9
   12524:	b	124e0 <error@@Base+0x87c>
   12528:	mov	r0, #0
   1252c:	b	124f0 <error@@Base+0x88c>
   12530:	cmp	r1, #0
   12534:	push	{r4, lr}
   12538:	mov	r4, r0
   1253c:	stm	r2, {r1, r3}
   12540:	strne	r2, [r1, #4]
   12544:	streq	r2, [r0]
   12548:	cmp	r3, #0
   1254c:	streq	r2, [r0, #4]
   12550:	ldr	r0, [r0, #8]
   12554:	strne	r2, [r3]
   12558:	cmp	r0, #0
   1255c:	beq	1256c <error@@Base+0x908>
   12560:	bl	108e8 <free@plt>
   12564:	mov	r3, #0
   12568:	str	r3, [r4, #8]
   1256c:	ldr	r3, [r4, #12]
   12570:	add	r3, r3, #1
   12574:	str	r3, [r4, #12]
   12578:	pop	{r4, pc}
   1257c:	mov	r3, #0
   12580:	str	r3, [r0, #4]
   12584:	str	r3, [r0]
   12588:	str	r3, [r0, #8]
   1258c:	str	r3, [r0, #12]
   12590:	bx	lr
   12594:	mov	r2, r1
   12598:	ldr	r3, [r0]
   1259c:	mov	r1, #0
   125a0:	b	12530 <error@@Base+0x8cc>
   125a4:	mov	r2, r1
   125a8:	mov	r3, #0
   125ac:	ldr	r1, [r0, #4]
   125b0:	b	12530 <error@@Base+0x8cc>
   125b4:	mov	r3, r2
   125b8:	mov	r2, r1
   125bc:	ldr	r1, [r3]
   125c0:	b	12530 <error@@Base+0x8cc>
   125c4:	ldr	r3, [r1, #4]
   125c8:	b	12530 <error@@Base+0x8cc>
   125cc:	ldr	r3, [r1]
   125d0:	ldr	r2, [r1, #4]
   125d4:	cmp	r3, #0
   125d8:	push	{r4, r5, r6, lr}
   125dc:	mov	r4, r0
   125e0:	strne	r2, [r3, #4]
   125e4:	streq	r2, [r0]
   125e8:	ldr	r2, [r1, #4]
   125ec:	mov	r5, #0
   125f0:	cmp	r2, #0
   125f4:	streq	r3, [r0, #4]
   125f8:	ldr	r0, [r0, #8]
   125fc:	strne	r3, [r2]
   12600:	cmp	r0, r5
   12604:	str	r5, [r1, #4]
   12608:	str	r5, [r1]
   1260c:	beq	12618 <error@@Base+0x9b4>
   12610:	bl	108e8 <free@plt>
   12614:	str	r5, [r4, #8]
   12618:	ldr	r3, [r4, #12]
   1261c:	sub	r3, r3, #1
   12620:	str	r3, [r4, #12]
   12624:	pop	{r4, r5, r6, pc}
   12628:	ldr	r3, [r0, #8]
   1262c:	cmp	r3, #0
   12630:	bxne	lr
   12634:	ldr	r3, [r0, #12]
   12638:	cmp	r3, #0
   1263c:	bxeq	lr
   12640:	push	{r4, lr}
   12644:	mov	r1, #4
   12648:	mov	r4, r0
   1264c:	mov	r0, r3
   12650:	bl	11ca0 <error@@Base+0x3c>
   12654:	ldr	r3, [r4]
   12658:	str	r0, [r4, #8]
   1265c:	sub	r0, r0, #4
   12660:	cmp	r3, #0
   12664:	bne	1266c <error@@Base+0xa08>
   12668:	pop	{r4, pc}
   1266c:	str	r3, [r0, #4]!
   12670:	ldr	r3, [r3, #4]
   12674:	b	12660 <error@@Base+0x9fc>
   12678:	push	{r4, r5, r6, lr}
   1267c:	mov	r5, r0
   12680:	mov	r6, r1
   12684:	ldr	r4, [r5]
   12688:	cmp	r4, #0
   1268c:	bne	12694 <error@@Base+0xa30>
   12690:	pop	{r4, r5, r6, pc}
   12694:	mov	r0, r5
   12698:	mov	r1, r4
   1269c:	bl	125cc <error@@Base+0x968>
   126a0:	mov	r0, r4
   126a4:	blx	r6
   126a8:	b	12684 <error@@Base+0xa20>
   126ac:	cmp	r1, #0
   126b0:	beq	128bc <error@@Base+0xc58>
   126b4:	eor	ip, r0, r1
   126b8:	rsbmi	r1, r1, #0
   126bc:	subs	r2, r1, #1
   126c0:	beq	12888 <error@@Base+0xc24>
   126c4:	movs	r3, r0
   126c8:	rsbmi	r3, r0, #0
   126cc:	cmp	r3, r1
   126d0:	bls	12894 <error@@Base+0xc30>
   126d4:	tst	r1, r2
   126d8:	beq	128a4 <error@@Base+0xc40>
   126dc:	clz	r2, r3
   126e0:	clz	r0, r1
   126e4:	sub	r2, r0, r2
   126e8:	rsbs	r2, r2, #31
   126ec:	addne	r2, r2, r2, lsl #1
   126f0:	mov	r0, #0
   126f4:	addne	pc, pc, r2, lsl #2
   126f8:	nop			; (mov r0, r0)
   126fc:	cmp	r3, r1, lsl #31
   12700:	adc	r0, r0, r0
   12704:	subcs	r3, r3, r1, lsl #31
   12708:	cmp	r3, r1, lsl #30
   1270c:	adc	r0, r0, r0
   12710:	subcs	r3, r3, r1, lsl #30
   12714:	cmp	r3, r1, lsl #29
   12718:	adc	r0, r0, r0
   1271c:	subcs	r3, r3, r1, lsl #29
   12720:	cmp	r3, r1, lsl #28
   12724:	adc	r0, r0, r0
   12728:	subcs	r3, r3, r1, lsl #28
   1272c:	cmp	r3, r1, lsl #27
   12730:	adc	r0, r0, r0
   12734:	subcs	r3, r3, r1, lsl #27
   12738:	cmp	r3, r1, lsl #26
   1273c:	adc	r0, r0, r0
   12740:	subcs	r3, r3, r1, lsl #26
   12744:	cmp	r3, r1, lsl #25
   12748:	adc	r0, r0, r0
   1274c:	subcs	r3, r3, r1, lsl #25
   12750:	cmp	r3, r1, lsl #24
   12754:	adc	r0, r0, r0
   12758:	subcs	r3, r3, r1, lsl #24
   1275c:	cmp	r3, r1, lsl #23
   12760:	adc	r0, r0, r0
   12764:	subcs	r3, r3, r1, lsl #23
   12768:	cmp	r3, r1, lsl #22
   1276c:	adc	r0, r0, r0
   12770:	subcs	r3, r3, r1, lsl #22
   12774:	cmp	r3, r1, lsl #21
   12778:	adc	r0, r0, r0
   1277c:	subcs	r3, r3, r1, lsl #21
   12780:	cmp	r3, r1, lsl #20
   12784:	adc	r0, r0, r0
   12788:	subcs	r3, r3, r1, lsl #20
   1278c:	cmp	r3, r1, lsl #19
   12790:	adc	r0, r0, r0
   12794:	subcs	r3, r3, r1, lsl #19
   12798:	cmp	r3, r1, lsl #18
   1279c:	adc	r0, r0, r0
   127a0:	subcs	r3, r3, r1, lsl #18
   127a4:	cmp	r3, r1, lsl #17
   127a8:	adc	r0, r0, r0
   127ac:	subcs	r3, r3, r1, lsl #17
   127b0:	cmp	r3, r1, lsl #16
   127b4:	adc	r0, r0, r0
   127b8:	subcs	r3, r3, r1, lsl #16
   127bc:	cmp	r3, r1, lsl #15
   127c0:	adc	r0, r0, r0
   127c4:	subcs	r3, r3, r1, lsl #15
   127c8:	cmp	r3, r1, lsl #14
   127cc:	adc	r0, r0, r0
   127d0:	subcs	r3, r3, r1, lsl #14
   127d4:	cmp	r3, r1, lsl #13
   127d8:	adc	r0, r0, r0
   127dc:	subcs	r3, r3, r1, lsl #13
   127e0:	cmp	r3, r1, lsl #12
   127e4:	adc	r0, r0, r0
   127e8:	subcs	r3, r3, r1, lsl #12
   127ec:	cmp	r3, r1, lsl #11
   127f0:	adc	r0, r0, r0
   127f4:	subcs	r3, r3, r1, lsl #11
   127f8:	cmp	r3, r1, lsl #10
   127fc:	adc	r0, r0, r0
   12800:	subcs	r3, r3, r1, lsl #10
   12804:	cmp	r3, r1, lsl #9
   12808:	adc	r0, r0, r0
   1280c:	subcs	r3, r3, r1, lsl #9
   12810:	cmp	r3, r1, lsl #8
   12814:	adc	r0, r0, r0
   12818:	subcs	r3, r3, r1, lsl #8
   1281c:	cmp	r3, r1, lsl #7
   12820:	adc	r0, r0, r0
   12824:	subcs	r3, r3, r1, lsl #7
   12828:	cmp	r3, r1, lsl #6
   1282c:	adc	r0, r0, r0
   12830:	subcs	r3, r3, r1, lsl #6
   12834:	cmp	r3, r1, lsl #5
   12838:	adc	r0, r0, r0
   1283c:	subcs	r3, r3, r1, lsl #5
   12840:	cmp	r3, r1, lsl #4
   12844:	adc	r0, r0, r0
   12848:	subcs	r3, r3, r1, lsl #4
   1284c:	cmp	r3, r1, lsl #3
   12850:	adc	r0, r0, r0
   12854:	subcs	r3, r3, r1, lsl #3
   12858:	cmp	r3, r1, lsl #2
   1285c:	adc	r0, r0, r0
   12860:	subcs	r3, r3, r1, lsl #2
   12864:	cmp	r3, r1, lsl #1
   12868:	adc	r0, r0, r0
   1286c:	subcs	r3, r3, r1, lsl #1
   12870:	cmp	r3, r1
   12874:	adc	r0, r0, r0
   12878:	subcs	r3, r3, r1
   1287c:	cmp	ip, #0
   12880:	rsbmi	r0, r0, #0
   12884:	bx	lr
   12888:	teq	ip, r0
   1288c:	rsbmi	r0, r0, #0
   12890:	bx	lr
   12894:	movcc	r0, #0
   12898:	asreq	r0, ip, #31
   1289c:	orreq	r0, r0, #1
   128a0:	bx	lr
   128a4:	clz	r2, r1
   128a8:	rsb	r2, r2, #31
   128ac:	cmp	ip, #0
   128b0:	lsr	r0, r3, r2
   128b4:	rsbmi	r0, r0, #0
   128b8:	bx	lr
   128bc:	cmp	r0, #0
   128c0:	mvngt	r0, #-2147483648	; 0x80000000
   128c4:	movlt	r0, #-2147483648	; 0x80000000
   128c8:	b	128ec <error@@Base+0xc88>
   128cc:	cmp	r1, #0
   128d0:	beq	128bc <error@@Base+0xc58>
   128d4:	push	{r0, r1, lr}
   128d8:	bl	126b4 <error@@Base+0xa50>
   128dc:	pop	{r1, r2, lr}
   128e0:	mul	r3, r2, r0
   128e4:	sub	r1, r1, r3
   128e8:	bx	lr
   128ec:	push	{r1, lr}
   128f0:	mov	r0, #8
   128f4:	bl	108c4 <raise@plt>
   128f8:	pop	{r1, pc}
   128fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12900:	mov	r7, r0
   12904:	ldr	r6, [pc, #72]	; 12954 <error@@Base+0xcf0>
   12908:	ldr	r5, [pc, #72]	; 12958 <error@@Base+0xcf4>
   1290c:	add	r6, pc, r6
   12910:	add	r5, pc, r5
   12914:	sub	r6, r6, r5
   12918:	mov	r8, r1
   1291c:	mov	r9, r2
   12920:	bl	10898 <calloc@plt-0x20>
   12924:	asrs	r6, r6, #2
   12928:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1292c:	mov	r4, #0
   12930:	add	r4, r4, #1
   12934:	ldr	r3, [r5], #4
   12938:	mov	r2, r9
   1293c:	mov	r1, r8
   12940:	mov	r0, r7
   12944:	blx	r3
   12948:	cmp	r6, r4
   1294c:	bne	12930 <error@@Base+0xccc>
   12950:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12954:	andeq	r1, r1, ip, ror #9
   12958:	andeq	r1, r1, r4, ror #9
   1295c:	bx	lr
   12960:	mov	r2, r1
   12964:	mov	r1, r0
   12968:	mov	r0, #3
   1296c:	b	10948 <__xstat@plt>

Disassembly of section .fini:

00012970 <.fini>:
   12970:	push	{r3, lr}
   12974:	pop	{r3, pc}
