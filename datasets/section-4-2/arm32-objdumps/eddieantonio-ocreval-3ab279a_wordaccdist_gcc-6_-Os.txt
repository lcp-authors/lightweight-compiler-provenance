
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

00010720 <.init>:
   10720:	push	{r3, lr}
   10724:	bl	108f4 <abort@plt+0xa0>
   10728:	pop	{r3, pc}

Disassembly of section .plt:

0001072c <calloc@plt-0x14>:
   1072c:	push	{lr}		; (str lr, [sp, #-4]!)
   10730:	ldr	lr, [pc, #4]	; 1073c <calloc@plt-0x4>
   10734:	add	lr, pc, lr
   10738:	ldr	pc, [lr, #8]!
   1073c:	andeq	r2, r1, r4, asr #17

00010740 <calloc@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #73728	; 0x12000
   10748:	ldr	pc, [ip, #2244]!	; 0x8c4

0001074c <raise@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #73728	; 0x12000
   10754:	ldr	pc, [ip, #2236]!	; 0x8bc

00010758 <strcmp@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #73728	; 0x12000
   10760:	ldr	pc, [ip, #2228]!	; 0x8b4

00010764 <fopen@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #73728	; 0x12000
   1076c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010770 <free@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #73728	; 0x12000
   10778:	ldr	pc, [ip, #2212]!	; 0x8a4

0001077c <fgets@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #73728	; 0x12000
   10784:	ldr	pc, [ip, #2204]!	; 0x89c

00010788 <strdup@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #73728	; 0x12000
   10790:	ldr	pc, [ip, #2196]!	; 0x894

00010794 <unlink@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #73728	; 0x12000
   1079c:	ldr	pc, [ip, #2188]!	; 0x88c

000107a0 <__xstat@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #73728	; 0x12000
   107a8:	ldr	pc, [ip, #2180]!	; 0x884

000107ac <__libc_start_main@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #73728	; 0x12000
   107b4:	ldr	pc, [ip, #2172]!	; 0x87c

000107b8 <__sysv_signal@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #73728	; 0x12000
   107c0:	ldr	pc, [ip, #2164]!	; 0x874

000107c4 <__gmon_start__@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #73728	; 0x12000
   107cc:	ldr	pc, [ip, #2156]!	; 0x86c

000107d0 <getpid@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #73728	; 0x12000
   107d8:	ldr	pc, [ip, #2148]!	; 0x864

000107dc <exit@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #73728	; 0x12000
   107e4:	ldr	pc, [ip, #2140]!	; 0x85c

000107e8 <strlen@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #73728	; 0x12000
   107f0:	ldr	pc, [ip, #2132]!	; 0x854

000107f4 <fprintf@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #73728	; 0x12000
   107fc:	ldr	pc, [ip, #2124]!	; 0x84c

00010800 <__isoc99_sscanf@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2116]!	; 0x844

0001080c <fclose@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2108]!	; 0x83c

00010818 <fputc@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #73728	; 0x12000
   10820:	ldr	pc, [ip, #2100]!	; 0x834

00010824 <sprintf@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #73728	; 0x12000
   1082c:	ldr	pc, [ip, #2092]!	; 0x82c

00010830 <atoi@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #73728	; 0x12000
   10838:	ldr	pc, [ip, #2084]!	; 0x824

0001083c <fputs@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #73728	; 0x12000
   10844:	ldr	pc, [ip, #2076]!	; 0x81c

00010848 <strncmp@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #73728	; 0x12000
   10850:	ldr	pc, [ip, #2068]!	; 0x814

00010854 <abort@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #73728	; 0x12000
   1085c:	ldr	pc, [ip, #2060]!	; 0x80c

Disassembly of section .text:

00010860 <error@@Base-0xe4c>:
   10860:	push	{r0, r1, r2, r4, r5, lr}
   10864:	add	ip, sp, #8
   10868:	mov	r3, #0
   1086c:	str	r0, [ip, #-4]!
   10870:	ldr	r2, [pc, #56]	; 108b0 <abort@plt+0x5c>
   10874:	mov	r0, ip
   10878:	mov	r5, r1
   1087c:	bl	117d0 <error@@Base+0x124>
   10880:	mov	r4, #0
   10884:	ldr	r3, [sp, #4]
   10888:	cmp	r4, r3
   1088c:	blt	108a0 <abort@plt+0x4c>
   10890:	mov	r1, #0
   10894:	ldr	r0, [pc, #24]	; 108b4 <abort@plt+0x60>
   10898:	bl	10a88 <abort@plt+0x234>
   1089c:	bl	11654 <abort@plt+0xe00>
   108a0:	ldr	r0, [r5, r4, lsl #2]
   108a4:	bl	109e0 <abort@plt+0x18c>
   108a8:	add	r4, r4, #1
   108ac:	b	10884 <abort@plt+0x30>
   108b0:	andeq	r1, r1, r8, asr #30
   108b4:	ldrdeq	r7, [r2], -r4
   108b8:	mov	fp, #0
   108bc:	mov	lr, #0
   108c0:	pop	{r1}		; (ldr r1, [sp], #4)
   108c4:	mov	r2, sp
   108c8:	push	{r2}		; (str r2, [sp, #-4]!)
   108cc:	push	{r0}		; (str r0, [sp, #-4]!)
   108d0:	ldr	ip, [pc, #16]	; 108e8 <abort@plt+0x94>
   108d4:	push	{ip}		; (str ip, [sp, #-4]!)
   108d8:	ldr	r0, [pc, #12]	; 108ec <abort@plt+0x98>
   108dc:	ldr	r3, [pc, #12]	; 108f0 <abort@plt+0x9c>
   108e0:	bl	107ac <__libc_start_main@plt>
   108e4:	bl	10854 <abort@plt>
   108e8:	andeq	r1, r1, r8, lsr #30
   108ec:	andeq	r0, r1, r0, ror #16
   108f0:	andeq	r1, r1, r8, asr #29
   108f4:	ldr	r3, [pc, #20]	; 10910 <abort@plt+0xbc>
   108f8:	ldr	r2, [pc, #20]	; 10914 <abort@plt+0xc0>
   108fc:	add	r3, pc, r3
   10900:	ldr	r2, [r3, r2]
   10904:	cmp	r2, #0
   10908:	bxeq	lr
   1090c:	b	107c4 <__gmon_start__@plt>
   10910:	strdeq	r2, [r1], -ip
   10914:	andeq	r0, r0, ip, rrx
   10918:	ldr	r3, [pc, #28]	; 1093c <abort@plt+0xe8>
   1091c:	ldr	r0, [pc, #28]	; 10940 <abort@plt+0xec>
   10920:	sub	r3, r3, r0
   10924:	cmp	r3, #6
   10928:	bxls	lr
   1092c:	ldr	r3, [pc, #16]	; 10944 <abort@plt+0xf0>
   10930:	cmp	r3, #0
   10934:	bxeq	lr
   10938:	bx	r3
   1093c:	andeq	r3, r2, r3, lsl #1
   10940:	andeq	r3, r2, r0, lsl #1
   10944:	andeq	r0, r0, r0
   10948:	ldr	r1, [pc, #36]	; 10974 <abort@plt+0x120>
   1094c:	ldr	r0, [pc, #36]	; 10978 <abort@plt+0x124>
   10950:	sub	r1, r1, r0
   10954:	asr	r1, r1, #2
   10958:	add	r1, r1, r1, lsr #31
   1095c:	asrs	r1, r1, #1
   10960:	bxeq	lr
   10964:	ldr	r3, [pc, #16]	; 1097c <abort@plt+0x128>
   10968:	cmp	r3, #0
   1096c:	bxeq	lr
   10970:	bx	r3
   10974:	andeq	r3, r2, r0, lsl #1
   10978:	andeq	r3, r2, r0, lsl #1
   1097c:	andeq	r0, r0, r0
   10980:	push	{r4, lr}
   10984:	ldr	r4, [pc, #24]	; 109a4 <abort@plt+0x150>
   10988:	ldrb	r3, [r4]
   1098c:	cmp	r3, #0
   10990:	popne	{r4, pc}
   10994:	bl	10918 <abort@plt+0xc4>
   10998:	mov	r3, #1
   1099c:	strb	r3, [r4]
   109a0:	pop	{r4, pc}
   109a4:	muleq	r2, r0, r0
   109a8:	ldr	r0, [pc, #40]	; 109d8 <abort@plt+0x184>
   109ac:	ldr	r3, [r0]
   109b0:	cmp	r3, #0
   109b4:	bne	109bc <abort@plt+0x168>
   109b8:	b	10948 <abort@plt+0xf4>
   109bc:	ldr	r3, [pc, #24]	; 109dc <abort@plt+0x188>
   109c0:	cmp	r3, #0
   109c4:	beq	109b8 <abort@plt+0x164>
   109c8:	push	{r4, lr}
   109cc:	blx	r3
   109d0:	pop	{r4, lr}
   109d4:	b	10948 <abort@plt+0xf4>
   109d8:	andeq	r2, r2, r4, lsl #30
   109dc:	andeq	r0, r0, r0
   109e0:	push	{r4, r5, r6, lr}
   109e4:	mov	r1, r0
   109e8:	ldr	r4, [pc, #32]	; 10a10 <abort@plt+0x1bc>
   109ec:	mov	r0, r4
   109f0:	ldm	r4, {r5, r6}
   109f4:	bl	10fc8 <abort@plt+0x774>
   109f8:	ldm	r4, {r1, r2}
   109fc:	ldr	r0, [pc, #16]	; 10a14 <abort@plt+0x1c0>
   10a00:	sub	r2, r2, r6
   10a04:	sub	r1, r1, r5
   10a08:	pop	{r4, r5, r6, lr}
   10a0c:	b	10a18 <abort@plt+0x1c4>
   10a10:	andeq	r3, r2, r4, lsl #2
   10a14:	ldrdeq	r7, [r2], -r4
   10a18:	cmp	r1, #0
   10a1c:	bxeq	lr
   10a20:	sub	r3, r1, r2
   10a24:	vldr	d6, [pc, #84]	; 10a80 <abort@plt+0x22c>
   10a28:	vmov	s14, r3
   10a2c:	mov	r3, #0
   10a30:	vcvt.f64.s32	d7, s14
   10a34:	vmul.f64	d7, d7, d6
   10a38:	vmov	s13, r1
   10a3c:	vcvt.f64.s32	d5, s13
   10a40:	vdiv.f64	d6, d7, d5
   10a44:	vmov	s15, r3
   10a48:	vcvt.f64.s32	d7, s15
   10a4c:	vcmpe.f64	d6, d7
   10a50:	vmrs	APSR_nzcv, fpscr
   10a54:	bge	10a68 <abort@plt+0x214>
   10a58:	ldr	r3, [r0, #404]	; 0x194
   10a5c:	add	r1, r3, r1
   10a60:	str	r1, [r0, #404]	; 0x194
   10a64:	bx	lr
   10a68:	ldr	r2, [r0, r3, lsl #2]
   10a6c:	add	r2, r2, r1
   10a70:	str	r2, [r0, r3, lsl #2]
   10a74:	add	r3, r3, #1
   10a78:	sxth	r3, r3
   10a7c:	b	10a44 <abort@plt+0x1f0>
   10a80:	andeq	r0, r0, r0
   10a84:	subsmi	r0, r9, r0
   10a88:	ldr	r3, [r0, #404]	; 0x194
   10a8c:	cmp	r3, #0
   10a90:	bxeq	lr
   10a94:	push	{r4, r5, r6, r7, lr}
   10a98:	vpush	{d8}
   10a9c:	mov	r5, r0
   10aa0:	mov	r0, r1
   10aa4:	ldr	r1, [pc, #108]	; 10b18 <abort@plt+0x2c4>
   10aa8:	sub	sp, sp, #12
   10aac:	bl	11774 <error@@Base+0xc8>
   10ab0:	vldr	d8, [pc, #88]	; 10b10 <abort@plt+0x2bc>
   10ab4:	ldr	r7, [pc, #96]	; 10b1c <abort@plt+0x2c8>
   10ab8:	mov	r4, #0
   10abc:	mov	r6, r0
   10ac0:	ldr	r3, [r5, r4, lsl #2]
   10ac4:	vldr	s13, [r5, #404]	; 0x194
   10ac8:	mov	r2, r4
   10acc:	vmov	s15, r3
   10ad0:	mov	r1, r7
   10ad4:	vcvt.f64.s32	d6, s13
   10ad8:	mov	r0, r6
   10adc:	vcvt.f64.s32	d7, s15
   10ae0:	add	r4, r4, #1
   10ae4:	vmul.f64	d7, d7, d8
   10ae8:	vdiv.f64	d5, d7, d6
   10aec:	vstr	d5, [sp]
   10af0:	bl	107f4 <fprintf@plt>
   10af4:	cmp	r4, #101	; 0x65
   10af8:	bne	10ac0 <abort@plt+0x26c>
   10afc:	mov	r0, r6
   10b00:	add	sp, sp, #12
   10b04:	vpop	{d8}
   10b08:	pop	{r4, r5, r6, r7, lr}
   10b0c:	b	115a4 <abort@plt+0xd50>
   10b10:	andeq	r0, r0, r0
   10b14:	subsmi	r0, r9, r0
   10b18:	andeq	r1, r1, r4, ror pc
   10b1c:	andeq	r1, r1, r6, ror pc
   10b20:	mov	r2, r0
   10b24:	push	{r4, lr}
   10b28:	mov	r1, #99	; 0x63
   10b2c:	ldr	r0, [pc, #12]	; 10b40 <abort@plt+0x2ec>
   10b30:	bl	1077c <fgets@plt>
   10b34:	adds	r0, r0, #0
   10b38:	movne	r0, #1
   10b3c:	pop	{r4, pc}
   10b40:	muleq	r2, r1, r0
   10b44:	push	{r4, lr}
   10b48:	mov	r4, r1
   10b4c:	bl	10b20 <abort@plt+0x2cc>
   10b50:	cmp	r0, #0
   10b54:	popeq	{r4, pc}
   10b58:	mov	r2, r4
   10b5c:	ldr	r1, [pc, #20]	; 10b78 <abort@plt+0x324>
   10b60:	ldr	r0, [pc, #20]	; 10b7c <abort@plt+0x328>
   10b64:	bl	10800 <__isoc99_sscanf@plt>
   10b68:	sub	r0, r0, #1
   10b6c:	clz	r0, r0
   10b70:	lsr	r0, r0, #5
   10b74:	pop	{r4, pc}
   10b78:	andeq	r1, r1, fp, ror #31
   10b7c:	muleq	r2, r1, r0
   10b80:	ldr	r2, [r1]
   10b84:	cmp	r2, #0
   10b88:	bne	10b98 <abort@plt+0x344>
   10b8c:	mov	r1, r0
   10b90:	ldr	r0, [pc, #56]	; 10bd0 <abort@plt+0x37c>
   10b94:	b	1083c <fputs@plt>
   10b98:	ldr	r3, [r1, #4]
   10b9c:	vldr	d6, [pc, #36]	; 10bc8 <abort@plt+0x374>
   10ba0:	sub	r3, r2, r3
   10ba4:	ldr	r1, [pc, #40]	; 10bd4 <abort@plt+0x380>
   10ba8:	vmov	s14, r3
   10bac:	vcvt.f64.s32	d7, s14
   10bb0:	vmul.f64	d7, d7, d6
   10bb4:	vmov	s13, r2
   10bb8:	vcvt.f64.s32	d6, s13
   10bbc:	vdiv.f64	d5, d7, d6
   10bc0:	vmov	r2, r3, d5
   10bc4:	b	107f4 <fprintf@plt>
   10bc8:	andeq	r0, r0, r0
   10bcc:	subsmi	r0, r9, r0
   10bd0:	andeq	r1, r1, r1, lsl #31
   10bd4:	andeq	r1, r1, sl, lsl #31
   10bd8:	push	{r4, r5, r6, lr}
   10bdc:	subs	r5, r1, #0
   10be0:	mov	r4, r0
   10be4:	beq	10c10 <abort@plt+0x3bc>
   10be8:	ldr	r1, [pc, #48]	; 10c20 <abort@plt+0x3cc>
   10bec:	ldm	r5, {r2, r3}
   10bf0:	bl	107f4 <fprintf@plt>
   10bf4:	mov	r1, r5
   10bf8:	mov	r0, r4
   10bfc:	bl	10b80 <abort@plt+0x32c>
   10c00:	mov	r1, r4
   10c04:	ldr	r0, [pc, #24]	; 10c24 <abort@plt+0x3d0>
   10c08:	pop	{r4, r5, r6, lr}
   10c0c:	b	1083c <fputs@plt>
   10c10:	mov	r1, r0
   10c14:	ldr	r0, [pc, #12]	; 10c28 <abort@plt+0x3d4>
   10c18:	bl	1083c <fputs@plt>
   10c1c:	b	10c00 <abort@plt+0x3ac>
   10c20:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   10c24:			; <UNDEFINED> instruction: 0x00011fb6
   10c28:	muleq	r1, fp, pc	; <UNPREDICTABLE>
   10c2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c30:	mov	r4, r0
   10c34:	ldrb	r8, [sp, #32]
   10c38:	mov	r6, r1
   10c3c:	mov	r7, r2
   10c40:	ldr	r1, [pc, #204]	; 10d14 <abort@plt+0x4c0>
   10c44:	mov	r2, r3
   10c48:	ldrb	r9, [sp, #36]	; 0x24
   10c4c:	bl	107f4 <fprintf@plt>
   10c50:	mov	r1, #0
   10c54:	mov	r0, r4
   10c58:	bl	10bd8 <abort@plt+0x384>
   10c5c:	ldr	r3, [pc, #180]	; 10d18 <abort@plt+0x4c4>
   10c60:	cmp	r8, #0
   10c64:	ldr	r2, [pc, #176]	; 10d1c <abort@plt+0x4c8>
   10c68:	ldr	r1, [pc, #176]	; 10d20 <abort@plt+0x4cc>
   10c6c:	moveq	r2, r3
   10c70:	mov	r0, r4
   10c74:	bl	107f4 <fprintf@plt>
   10c78:	ldr	sl, [pc, #164]	; 10d24 <abort@plt+0x4d0>
   10c7c:	mov	r5, #1
   10c80:	cmp	r5, r7
   10c84:	ble	10ce0 <abort@plt+0x48c>
   10c88:	cmp	r8, #0
   10c8c:	beq	10cbc <abort@plt+0x468>
   10c90:	add	r3, r7, #1
   10c94:	add	r1, r6, r3, lsl #3
   10c98:	ldr	r3, [r6, r3, lsl #3]
   10c9c:	cmp	r3, #0
   10ca0:	ble	10cbc <abort@plt+0x468>
   10ca4:	mov	r0, r4
   10ca8:	bl	10bd8 <abort@plt+0x384>
   10cac:	mov	r2, r7
   10cb0:	ldr	r1, [pc, #112]	; 10d28 <abort@plt+0x4d4>
   10cb4:	mov	r0, r4
   10cb8:	bl	107f4 <fprintf@plt>
   10cbc:	cmp	r9, #0
   10cc0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cc4:	mov	r1, r6
   10cc8:	mov	r0, r4
   10ccc:	bl	10bd8 <abort@plt+0x384>
   10cd0:	mov	r1, r4
   10cd4:	ldr	r0, [pc, #80]	; 10d2c <abort@plt+0x4d8>
   10cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10cdc:	b	1083c <fputs@plt>
   10ce0:	ldr	r3, [r6, r5, lsl #3]
   10ce4:	add	r1, r6, r5, lsl #3
   10ce8:	cmp	r3, #0
   10cec:	ble	10d08 <abort@plt+0x4b4>
   10cf0:	mov	r0, r4
   10cf4:	bl	10bd8 <abort@plt+0x384>
   10cf8:	mov	r2, r5
   10cfc:	mov	r1, sl
   10d00:	mov	r0, r4
   10d04:	bl	107f4 <fprintf@plt>
   10d08:	add	r5, r5, #1
   10d0c:	sxth	r5, r5
   10d10:	b	10c80 <abort@plt+0x42c>
   10d14:	andeq	r1, r1, r8, asr #31
   10d18:	andeq	r1, r1, r1, asr #31
   10d1c:			; <UNDEFINED> instruction: 0x00011fba
   10d20:	andeq	r1, r1, r9, asr #31
   10d24:	andeq	r1, r1, sp, asr #31
   10d28:	ldrdeq	r1, [r1], -r6
   10d2c:	ldrdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10d30:	push	{r4, r5, r6, r7, r8, lr}
   10d34:	mov	r4, r1
   10d38:	add	r4, r4, #4096	; 0x1000
   10d3c:	mov	r6, r0
   10d40:	mov	r0, r1
   10d44:	mov	r5, r2
   10d48:	bl	113e0 <abort@plt+0xb8c>
   10d4c:	ldr	r2, [pc, #124]	; 10dd0 <abort@plt+0x57c>
   10d50:	ldr	r1, [r4, #3952]	; 0xf70
   10d54:	ldr	r0, [r4, #3956]	; 0xf74
   10d58:	bl	11c58 <error@@Base+0x5ac>
   10d5c:	mov	r2, r5
   10d60:	ldr	r1, [pc, #108]	; 10dd4 <abort@plt+0x580>
   10d64:	mov	r0, r6
   10d68:	bl	107f4 <fprintf@plt>
   10d6c:	mov	r1, #0
   10d70:	mov	r0, r6
   10d74:	bl	10bd8 <abort@plt+0x384>
   10d78:	mov	r1, r6
   10d7c:	mov	r0, #10
   10d80:	bl	10818 <fputc@plt>
   10d84:	ldr	r7, [pc, #76]	; 10dd8 <abort@plt+0x584>
   10d88:	mov	r5, #0
   10d8c:	ldr	r3, [r4, #3956]	; 0xf74
   10d90:	cmp	r5, r3
   10d94:	blt	10d9c <abort@plt+0x548>
   10d98:	pop	{r4, r5, r6, r7, r8, pc}
   10d9c:	ldr	r3, [r4, #3952]	; 0xf70
   10da0:	mov	r0, r6
   10da4:	ldr	r1, [r3, r5, lsl #2]
   10da8:	add	r1, r1, #12
   10dac:	bl	10bd8 <abort@plt+0x384>
   10db0:	ldr	r3, [r4, #3952]	; 0xf70
   10db4:	mov	r1, r7
   10db8:	mov	r0, r6
   10dbc:	ldr	r3, [r3, r5, lsl #2]
   10dc0:	add	r5, r5, #1
   10dc4:	ldr	r2, [r3, #8]
   10dc8:	bl	107f4 <fprintf@plt>
   10dcc:	b	10d8c <abort@plt+0x538>
   10dd0:	ldrdeq	r0, [r1], -ip
   10dd4:	andeq	r1, r1, r8, asr #31
   10dd8:	andeq	r1, r1, r9, asr #31
   10ddc:	ldr	r1, [r1, #8]
   10de0:	ldr	r0, [r0, #8]
   10de4:	b	1155c <abort@plt+0xd08>
   10de8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   10dec:	mov	r6, r0
   10df0:	mov	r5, r1
   10df4:	bl	10b20 <abort@plt+0x2cc>
   10df8:	mov	r4, #0
   10dfc:	cmp	r0, #0
   10e00:	bne	10e10 <abort@plt+0x5bc>
   10e04:	mov	r0, r4
   10e08:	add	sp, sp, #8
   10e0c:	pop	{r4, r5, r6, r7, r8, pc}
   10e10:	mov	r0, r6
   10e14:	bl	10b20 <abort@plt+0x2cc>
   10e18:	cmp	r0, #0
   10e1c:	ldrne	r7, [pc, #128]	; 10ea4 <abort@plt+0x650>
   10e20:	beq	10e04 <abort@plt+0x5b0>
   10e24:	mov	r0, r6
   10e28:	bl	10b20 <abort@plt+0x2cc>
   10e2c:	cmp	r0, #0
   10e30:	beq	10e04 <abort@plt+0x5b0>
   10e34:	add	r3, sp, #4
   10e38:	mov	r2, sp
   10e3c:	mov	r1, r7
   10e40:	ldr	r0, [pc, #96]	; 10ea8 <abort@plt+0x654>
   10e44:	bl	10800 <__isoc99_sscanf@plt>
   10e48:	cmp	r0, #2
   10e4c:	bne	10e04 <abort@plt+0x5b0>
   10e50:	ldr	r0, [pc, #84]	; 10eac <abort@plt+0x658>
   10e54:	bl	10830 <atoi@plt>
   10e58:	ldr	r8, [sp]
   10e5c:	cmp	r0, #0
   10e60:	bne	10e80 <abort@plt+0x62c>
   10e64:	ldr	r1, [pc, #68]	; 10eb0 <abort@plt+0x65c>
   10e68:	ldr	r0, [pc, #60]	; 10eac <abort@plt+0x658>
   10e6c:	bl	10758 <strcmp@plt>
   10e70:	cmp	r0, #0
   10e74:	moveq	r4, r8
   10e78:	moveq	r0, #0
   10e7c:	movne	r0, #11
   10e80:	ldr	r3, [r5, r0, lsl #3]
   10e84:	add	r2, r5, r0, lsl #3
   10e88:	add	r3, r3, r8
   10e8c:	str	r3, [r5, r0, lsl #3]
   10e90:	ldr	r1, [sp, #4]
   10e94:	ldr	r3, [r2, #4]
   10e98:	add	r3, r3, r1
   10e9c:	str	r3, [r2, #4]
   10ea0:	b	10e24 <abort@plt+0x5d0>
   10ea4:	andeq	r1, r1, r7, ror #31
   10ea8:	muleq	r2, r1, r0
   10eac:	andeq	r3, r2, lr, lsr #1
   10eb0:	ldrdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10eb4:	ldr	r3, [r0]
   10eb8:	add	r1, r3, r1
   10ebc:	ldr	r3, [r0, #4]
   10ec0:	str	r1, [r0]
   10ec4:	add	r2, r3, r2
   10ec8:	str	r2, [r0, #4]
   10ecc:	bx	lr
   10ed0:	push	{r4, r5, r6, r7, r8, lr}
   10ed4:	mov	r7, r0
   10ed8:	mov	r8, r1
   10edc:	mov	r6, r2
   10ee0:	mov	r5, r3
   10ee4:	bl	11304 <abort@plt+0xab0>
   10ee8:	subs	r4, r0, #0
   10eec:	bne	10f18 <abort@plt+0x6c4>
   10ef0:	mov	r1, #20
   10ef4:	mov	r0, #1
   10ef8:	bl	116e8 <error@@Base+0x3c>
   10efc:	mov	r4, r0
   10f00:	mov	r0, r8
   10f04:	bl	10788 <strdup@plt>
   10f08:	mov	r1, r4
   10f0c:	str	r0, [r4, #8]
   10f10:	mov	r0, r7
   10f14:	bl	11348 <abort@plt+0xaf4>
   10f18:	ldr	r2, [r4, #12]
   10f1c:	ldr	r3, [r4, #16]
   10f20:	add	r2, r2, r6
   10f24:	add	r3, r3, r5
   10f28:	str	r2, [r4, #12]
   10f2c:	str	r3, [r4, #16]
   10f30:	pop	{r4, r5, r6, r7, r8, pc}
   10f34:	push	{r0, r1, r4, r5, r6, lr}
   10f38:	mov	r4, r0
   10f3c:	mov	r6, r1
   10f40:	bl	10b20 <abort@plt+0x2cc>
   10f44:	cmp	r0, #0
   10f48:	beq	10f60 <abort@plt+0x70c>
   10f4c:	mov	r0, r4
   10f50:	bl	10b20 <abort@plt+0x2cc>
   10f54:	cmp	r0, #0
   10f58:	ldrne	r5, [pc, #92]	; 10fbc <abort@plt+0x768>
   10f5c:	bne	10f8c <abort@plt+0x738>
   10f60:	add	sp, sp, #8
   10f64:	pop	{r4, r5, r6, pc}
   10f68:	mov	r0, r5
   10f6c:	bl	107e8 <strlen@plt>
   10f70:	mov	r3, #0
   10f74:	ldr	r1, [pc, #68]	; 10fc0 <abort@plt+0x76c>
   10f78:	add	r0, r5, r0
   10f7c:	strb	r3, [r0, #-1]
   10f80:	ldm	sp, {r2, r3}
   10f84:	mov	r0, r6
   10f88:	bl	10ed0 <abort@plt+0x67c>
   10f8c:	mov	r0, r4
   10f90:	bl	10b20 <abort@plt+0x2cc>
   10f94:	cmp	r0, #0
   10f98:	beq	10f60 <abort@plt+0x70c>
   10f9c:	add	r3, sp, #4
   10fa0:	mov	r2, sp
   10fa4:	ldr	r1, [pc, #24]	; 10fc4 <abort@plt+0x770>
   10fa8:	ldr	r0, [pc, #12]	; 10fbc <abort@plt+0x768>
   10fac:	bl	10800 <__isoc99_sscanf@plt>
   10fb0:	cmp	r0, #2
   10fb4:	beq	10f68 <abort@plt+0x714>
   10fb8:	b	10f60 <abort@plt+0x70c>
   10fbc:	muleq	r2, r1, r0
   10fc0:	andeq	r3, r2, lr, lsr #1
   10fc4:	andeq	r1, r1, r7, ror #31
   10fc8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10fcc:	mov	r6, r1
   10fd0:	mov	r5, r0
   10fd4:	ldr	r1, [pc, #332]	; 11128 <abort@plt+0x8d4>
   10fd8:	mov	r0, r6
   10fdc:	bl	11774 <error@@Base+0xc8>
   10fe0:	mov	r4, r0
   10fe4:	bl	10b20 <abort@plt+0x2cc>
   10fe8:	cmp	r0, #0
   10fec:	beq	11114 <abort@plt+0x8c0>
   10ff0:	mov	r2, #45	; 0x2d
   10ff4:	ldr	r1, [pc, #304]	; 1112c <abort@plt+0x8d8>
   10ff8:	ldr	r0, [pc, #304]	; 11130 <abort@plt+0x8dc>
   10ffc:	bl	10848 <strncmp@plt>
   11000:	cmp	r0, #0
   11004:	bne	11114 <abort@plt+0x8c0>
   11008:	mov	r0, r4
   1100c:	bl	10b20 <abort@plt+0x2cc>
   11010:	cmp	r0, #0
   11014:	beq	11114 <abort@plt+0x8c0>
   11018:	ldr	r1, [pc, #276]	; 11134 <abort@plt+0x8e0>
   1101c:	ldr	r0, [pc, #268]	; 11130 <abort@plt+0x8dc>
   11020:	bl	10758 <strcmp@plt>
   11024:	cmp	r0, #0
   11028:	bne	11114 <abort@plt+0x8c0>
   1102c:	mov	r1, sp
   11030:	mov	r0, r4
   11034:	bl	10b44 <abort@plt+0x2f0>
   11038:	cmp	r0, #0
   1103c:	beq	11114 <abort@plt+0x8c0>
   11040:	add	r1, sp, #4
   11044:	mov	r0, r4
   11048:	bl	10b44 <abort@plt+0x2f0>
   1104c:	cmp	r0, #0
   11050:	beq	11114 <abort@plt+0x8c0>
   11054:	mov	r0, r4
   11058:	bl	10b20 <abort@plt+0x2cc>
   1105c:	cmp	r0, #0
   11060:	beq	11114 <abort@plt+0x8c0>
   11064:	mov	r0, r4
   11068:	bl	10b20 <abort@plt+0x2cc>
   1106c:	cmp	r0, #0
   11070:	beq	11114 <abort@plt+0x8c0>
   11074:	ldr	r3, [r5]
   11078:	ldr	r2, [sp]
   1107c:	add	r1, r5, #8
   11080:	add	r3, r3, r2
   11084:	str	r3, [r5]
   11088:	ldr	r2, [sp, #4]
   1108c:	ldr	r3, [r5, #4]
   11090:	mov	r0, r4
   11094:	add	r3, r3, r2
   11098:	str	r3, [r5, #4]
   1109c:	bl	10de8 <abort@plt+0x594>
   110a0:	add	r1, r5, #416	; 0x1a0
   110a4:	mov	r7, r0
   110a8:	mov	r0, r4
   110ac:	bl	10de8 <abort@plt+0x594>
   110b0:	add	r1, r5, #824	; 0x338
   110b4:	mov	r6, r0
   110b8:	mov	r0, r4
   110bc:	bl	10de8 <abort@plt+0x594>
   110c0:	ldr	r3, [sp]
   110c4:	cmp	r3, #0
   110c8:	ble	11104 <abort@plt+0x8b0>
   110cc:	add	r1, r5, #920	; 0x398
   110d0:	mov	r0, r4
   110d4:	bl	10de8 <abort@plt+0x594>
   110d8:	cmp	r7, #0
   110dc:	ble	110ec <abort@plt+0x898>
   110e0:	add	r1, r5, #992	; 0x3e0
   110e4:	mov	r0, r4
   110e8:	bl	10f34 <abort@plt+0x6e0>
   110ec:	cmp	r6, #0
   110f0:	ble	11104 <abort@plt+0x8b0>
   110f4:	add	r1, r5, #9024	; 0x2340
   110f8:	add	r1, r1, #24
   110fc:	mov	r0, r4
   11100:	bl	10f34 <abort@plt+0x6e0>
   11104:	mov	r0, r4
   11108:	bl	115a4 <abort@plt+0xd50>
   1110c:	add	sp, sp, #12
   11110:	pop	{r4, r5, r6, r7, pc}
   11114:	cmp	r6, #0
   11118:	ldr	r1, [pc, #24]	; 11138 <abort@plt+0x8e4>
   1111c:	ldr	r0, [pc, #24]	; 1113c <abort@plt+0x8e8>
   11120:	movne	r1, r6
   11124:	bl	11734 <error@@Base+0x88>
   11128:	strdeq	r1, [r1], -r5
   1112c:	strdeq	r1, [r1], -r7
   11130:	muleq	r2, r1, r0
   11134:	andeq	r2, r1, r7, lsr #32
   11138:	andeq	r1, r1, pc, ror #31
   1113c:	andeq	r2, r1, r7, asr r0
   11140:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11144:	mov	r4, r0
   11148:	mov	r0, r1
   1114c:	ldr	r1, [pc, #276]	; 11268 <abort@plt+0xa14>
   11150:	bl	11774 <error@@Base+0xc8>
   11154:	ldr	r3, [pc, #272]	; 1126c <abort@plt+0xa18>
   11158:	ldr	r2, [pc, #272]	; 11270 <abort@plt+0xa1c>
   1115c:	ldr	r1, [pc, #272]	; 11274 <abort@plt+0xa20>
   11160:	mov	r7, #1
   11164:	mov	r6, #0
   11168:	mov	r5, r0
   1116c:	bl	107f4 <fprintf@plt>
   11170:	ldr	r2, [r4]
   11174:	ldr	r1, [pc, #252]	; 11278 <abort@plt+0xa24>
   11178:	mov	r0, r5
   1117c:	bl	107f4 <fprintf@plt>
   11180:	ldr	r2, [r4, #4]
   11184:	ldr	r1, [pc, #240]	; 1127c <abort@plt+0xa28>
   11188:	mov	r0, r5
   1118c:	bl	107f4 <fprintf@plt>
   11190:	mov	r1, r4
   11194:	mov	r0, r5
   11198:	bl	10b80 <abort@plt+0x32c>
   1119c:	mov	r1, r5
   111a0:	ldr	r0, [pc, #216]	; 11280 <abort@plt+0xa2c>
   111a4:	bl	1083c <fputs@plt>
   111a8:	ldr	r3, [pc, #212]	; 11284 <abort@plt+0xa30>
   111ac:	mov	r2, #50	; 0x32
   111b0:	add	r1, r4, #8
   111b4:	mov	r0, r5
   111b8:	stm	sp, {r6, r7}
   111bc:	bl	10c2c <abort@plt+0x3d8>
   111c0:	ldr	r3, [pc, #192]	; 11288 <abort@plt+0xa34>
   111c4:	mov	r2, #50	; 0x32
   111c8:	add	r1, r4, #416	; 0x1a0
   111cc:	mov	r0, r5
   111d0:	stm	sp, {r6, r7}
   111d4:	bl	10c2c <abort@plt+0x3d8>
   111d8:	ldr	r3, [pc, #172]	; 1128c <abort@plt+0xa38>
   111dc:	str	r7, [sp, #4]
   111e0:	str	r7, [sp]
   111e4:	mov	r2, #10
   111e8:	add	r1, r4, #824	; 0x338
   111ec:	mov	r0, r5
   111f0:	bl	10c2c <abort@plt+0x3d8>
   111f4:	ldr	r3, [r4]
   111f8:	cmp	r3, r6
   111fc:	ble	11258 <abort@plt+0xa04>
   11200:	ldr	r3, [pc, #136]	; 11290 <abort@plt+0xa3c>
   11204:	str	r6, [sp, #4]
   11208:	str	r6, [sp]
   1120c:	mov	r2, #8
   11210:	add	r1, r4, #920	; 0x398
   11214:	mov	r0, r5
   11218:	bl	10c2c <abort@plt+0x3d8>
   1121c:	ldr	r3, [r4, #8]
   11220:	cmp	r3, r6
   11224:	ble	11238 <abort@plt+0x9e4>
   11228:	ldr	r2, [pc, #84]	; 11284 <abort@plt+0xa30>
   1122c:	add	r1, r4, #992	; 0x3e0
   11230:	mov	r0, r5
   11234:	bl	10d30 <abort@plt+0x4dc>
   11238:	ldr	r3, [r4, #416]	; 0x1a0
   1123c:	cmp	r3, #0
   11240:	ble	11258 <abort@plt+0xa04>
   11244:	add	r1, r4, #9024	; 0x2340
   11248:	ldr	r2, [pc, #56]	; 11288 <abort@plt+0xa34>
   1124c:	add	r1, r1, #24
   11250:	mov	r0, r5
   11254:	bl	10d30 <abort@plt+0x4dc>
   11258:	mov	r0, r5
   1125c:	add	sp, sp, #12
   11260:	pop	{r4, r5, r6, r7, lr}
   11264:	b	115a4 <abort@plt+0xd50>
   11268:	andeq	r1, r1, r4, ror pc
   1126c:	andeq	r2, r1, r7, lsr #32
   11270:	strdeq	r1, [r1], -r7
   11274:	andeq	r2, r1, r9, rrx
   11278:	andeq	r2, r1, lr, rrx
   1127c:	andeq	r2, r1, ip, ror r0
   11280:	muleq	r1, r2, r0
   11284:	muleq	r1, pc, r0	; <UNPREDICTABLE>
   11288:	strheq	r2, [r1], -r2	; <UNPREDICTABLE>
   1128c:	andeq	r2, r1, r9, lsr #1
   11290:	andeq	r2, r1, r0, asr #1
   11294:	sub	r2, r0, #1
   11298:	mov	r0, #0
   1129c:	push	{r4, lr}
   112a0:	ldrb	r3, [r2, #1]!
   112a4:	cmp	r3, #0
   112a8:	bne	112bc <abort@plt+0xa68>
   112ac:	ldr	r1, [pc, #16]	; 112c4 <abort@plt+0xa70>
   112b0:	bl	11e98 <error@@Base+0x7ec>
   112b4:	sxth	r0, r1
   112b8:	pop	{r4, pc}
   112bc:	add	r0, r0, r3
   112c0:	b	112a0 <abort@plt+0xa4c>
   112c4:	strdeq	r0, [r0], -r7
   112c8:	push	{r4, r5, r6, lr}
   112cc:	add	r6, r0, #8000	; 0x1f40
   112d0:	mov	r4, r0
   112d4:	mov	r5, r0
   112d8:	add	r6, r6, #48	; 0x30
   112dc:	mov	r0, r5
   112e0:	add	r5, r5, #16
   112e4:	bl	11a1c <error@@Base+0x370>
   112e8:	cmp	r5, r6
   112ec:	bne	112dc <abort@plt+0xa88>
   112f0:	add	r4, r4, #4096	; 0x1000
   112f4:	mov	r3, #0
   112f8:	str	r3, [r4, #3952]	; 0xf70
   112fc:	str	r3, [r4, #3956]	; 0xf74
   11300:	pop	{r4, r5, r6, pc}
   11304:	push	{r4, r5, r6, lr}
   11308:	mov	r4, r0
   1130c:	mov	r0, r1
   11310:	mov	r5, r1
   11314:	bl	11294 <abort@plt+0xa40>
   11318:	ldr	r4, [r4, r0, lsl #4]
   1131c:	cmp	r4, #0
   11320:	beq	11338 <abort@plt+0xae4>
   11324:	ldr	r1, [r4, #8]
   11328:	mov	r0, r5
   1132c:	bl	10758 <strcmp@plt>
   11330:	cmp	r0, #0
   11334:	bne	11340 <abort@plt+0xaec>
   11338:	mov	r0, r4
   1133c:	pop	{r4, r5, r6, pc}
   11340:	ldr	r4, [r4, #4]
   11344:	b	1131c <abort@plt+0xac8>
   11348:	push	{r4, r5, r6, lr}
   1134c:	mov	r4, r0
   11350:	ldr	r0, [r1, #8]
   11354:	mov	r5, r1
   11358:	bl	11294 <abort@plt+0xa40>
   1135c:	mov	r1, r5
   11360:	add	r0, r4, r0, lsl #4
   11364:	add	r4, r4, #4096	; 0x1000
   11368:	bl	11a34 <error@@Base+0x388>
   1136c:	ldr	r0, [r4, #3952]	; 0xf70
   11370:	cmp	r0, #0
   11374:	beq	11384 <abort@plt+0xb30>
   11378:	bl	10770 <free@plt>
   1137c:	mov	r3, #0
   11380:	str	r3, [r4, #3952]	; 0xf70
   11384:	ldr	r3, [r4, #3956]	; 0xf74
   11388:	add	r3, r3, #1
   1138c:	str	r3, [r4, #3956]	; 0xf74
   11390:	pop	{r4, r5, r6, pc}
   11394:	push	{r4, r5, r6, lr}
   11398:	mov	r4, r0
   1139c:	ldr	r0, [r1, #8]
   113a0:	mov	r5, r1
   113a4:	bl	11294 <abort@plt+0xa40>
   113a8:	mov	r1, r5
   113ac:	add	r0, r4, r0, lsl #4
   113b0:	add	r4, r4, #4096	; 0x1000
   113b4:	bl	11a6c <error@@Base+0x3c0>
   113b8:	ldr	r0, [r4, #3952]	; 0xf70
   113bc:	cmp	r0, #0
   113c0:	beq	113d0 <abort@plt+0xb7c>
   113c4:	bl	10770 <free@plt>
   113c8:	mov	r3, #0
   113cc:	str	r3, [r4, #3952]	; 0xf70
   113d0:	ldr	r3, [r4, #3956]	; 0xf74
   113d4:	sub	r3, r3, #1
   113d8:	str	r3, [r4, #3956]	; 0xf74
   113dc:	pop	{r4, r5, r6, pc}
   113e0:	push	{r4, r5, r6, lr}
   113e4:	add	r6, r0, #4096	; 0x1000
   113e8:	ldr	r4, [r6, #3952]	; 0xf70
   113ec:	cmp	r4, #0
   113f0:	popne	{r4, r5, r6, pc}
   113f4:	ldr	r3, [r6, #3956]	; 0xf74
   113f8:	cmp	r3, #0
   113fc:	popeq	{r4, r5, r6, pc}
   11400:	mov	r5, r0
   11404:	mov	r1, #4
   11408:	mov	r0, r3
   1140c:	bl	116e8 <error@@Base+0x3c>
   11410:	ldr	lr, [pc, #60]	; 11454 <abort@plt+0xc00>
   11414:	mov	r3, r4
   11418:	mov	r2, r4
   1141c:	str	r0, [r6, #3952]	; 0xf70
   11420:	ldr	r1, [r5, r2, lsl #4]
   11424:	mov	ip, r3
   11428:	cmp	r1, #0
   1142c:	mov	r3, ip
   11430:	bne	11444 <abort@plt+0xbf0>
   11434:	add	r2, r2, #1
   11438:	cmp	r2, lr
   1143c:	bne	11420 <abort@plt+0xbcc>
   11440:	pop	{r4, r5, r6, pc}
   11444:	str	r1, [r0, ip, lsl #2]
   11448:	add	ip, ip, #1
   1144c:	ldr	r1, [r1, #4]
   11450:	b	11428 <abort@plt+0xbd4>
   11454:	strdeq	r0, [r0], -r7
   11458:	push	{r4, r5, r6, r7, r8, lr}
   1145c:	add	r6, r0, #8000	; 0x1f40
   11460:	mov	r4, r0
   11464:	mov	r7, r1
   11468:	mov	r5, r0
   1146c:	add	r6, r6, #48	; 0x30
   11470:	mov	r0, r5
   11474:	mov	r1, r7
   11478:	add	r5, r5, #16
   1147c:	bl	11b18 <error@@Base+0x46c>
   11480:	cmp	r5, r6
   11484:	bne	11470 <abort@plt+0xc1c>
   11488:	add	r4, r4, #4096	; 0x1000
   1148c:	ldr	r0, [r4, #3952]	; 0xf70
   11490:	cmp	r0, #0
   11494:	beq	114a4 <abort@plt+0xc50>
   11498:	bl	10770 <free@plt>
   1149c:	mov	r3, #0
   114a0:	str	r3, [r4, #3952]	; 0xf70
   114a4:	mov	r3, #0
   114a8:	str	r3, [r4, #3956]	; 0xf74
   114ac:	pop	{r4, r5, r6, r7, r8, pc}
   114b0:	ldr	r3, [pc, #56]	; 114f0 <abort@plt+0xc9c>
   114b4:	push	{r4, r5, lr}
   114b8:	sub	sp, sp, #116	; 0x74
   114bc:	ldr	r4, [r3]
   114c0:	mov	r5, r0
   114c4:	bl	107d0 <getpid@plt>
   114c8:	mov	r2, r4
   114cc:	ldr	r1, [pc, #32]	; 114f4 <abort@plt+0xca0>
   114d0:	str	r5, [sp]
   114d4:	mov	r3, r0
   114d8:	add	r0, sp, #12
   114dc:	bl	10824 <sprintf@plt>
   114e0:	add	r0, sp, #12
   114e4:	bl	10788 <strdup@plt>
   114e8:	add	sp, sp, #116	; 0x74
   114ec:	pop	{r4, r5, pc}
   114f0:	andeq	r7, r2, r0, ror r5
   114f4:	andeq	r2, r1, r8, asr #1
   114f8:	ldr	r3, [pc, #84]	; 11554 <abort@plt+0xd00>
   114fc:	push	{r7, lr}
   11500:	mov	r5, r0
   11504:	ldr	r3, [r3]
   11508:	cmp	r3, #0
   1150c:	beq	11514 <abort@plt+0xcc0>
   11510:	blx	r3
   11514:	ldr	r6, [pc, #60]	; 11558 <abort@plt+0xd04>
   11518:	mov	r4, #1
   1151c:	ldrsh	r3, [r6]
   11520:	cmp	r3, r4
   11524:	bge	11530 <abort@plt+0xcdc>
   11528:	mov	r0, r5
   1152c:	bl	107dc <exit@plt>
   11530:	mov	r0, r4
   11534:	bl	114b0 <abort@plt+0xc5c>
   11538:	add	r4, r4, #1
   1153c:	sxth	r4, r4
   11540:	mov	r7, r0
   11544:	bl	10794 <unlink@plt>
   11548:	mov	r0, r7
   1154c:	bl	10770 <free@plt>
   11550:	b	1151c <abort@plt+0xcc8>
   11554:	andeq	r7, r2, r4, ror r5
   11558:	strdeq	r3, [r2], -r6
   1155c:	mov	r3, #0
   11560:	ldrb	r2, [r0, r3]
   11564:	cmp	r2, #0
   11568:	beq	11594 <abort@plt+0xd40>
   1156c:	ldrb	ip, [r1, r3]
   11570:	cmp	ip, r2
   11574:	beq	1158c <abort@plt+0xd38>
   11578:	ldrb	r3, [r1, r3]
   1157c:	cmp	r3, r2
   11580:	mvnhi	r0, #0
   11584:	movls	r0, #1
   11588:	bx	lr
   1158c:	add	r3, r3, #1
   11590:	b	11560 <abort@plt+0xd0c>
   11594:	ldrb	r0, [r1, r3]
   11598:	cmp	r0, #0
   1159c:	bne	11578 <abort@plt+0xd24>
   115a0:	bx	lr
   115a4:	ldr	r2, [pc, #28]	; 115c8 <abort@plt+0xd74>
   115a8:	ldr	r2, [r2]
   115ac:	cmp	r2, r0
   115b0:	bxeq	lr
   115b4:	ldr	r2, [pc, #16]	; 115cc <abort@plt+0xd78>
   115b8:	ldr	r2, [r2]
   115bc:	cmp	r0, r2
   115c0:	bxeq	lr
   115c4:	b	1080c <fclose@plt>
   115c8:	andeq	r3, r2, r8, lsl #1
   115cc:	andeq	r3, r2, ip, lsl #1
   115d0:	push	{lr}		; (str lr, [sp, #-4]!)
   115d4:	sub	sp, sp, #92	; 0x5c
   115d8:	mov	r1, sp
   115dc:	bl	11f2c <error@@Base+0x880>
   115e0:	clz	r0, r0
   115e4:	lsr	r0, r0, #5
   115e8:	add	sp, sp, #92	; 0x5c
   115ec:	pop	{pc}		; (ldr pc, [sp], #4)
   115f0:	ldr	r3, [pc, #36]	; 1161c <abort@plt+0xdc8>
   115f4:	push	{r4, lr}
   115f8:	ldrh	r0, [r3]
   115fc:	add	r0, r0, #1
   11600:	sxth	r0, r0
   11604:	strh	r0, [r3]
   11608:	bl	114b0 <abort@plt+0xc5c>
   1160c:	mov	r4, r0
   11610:	bl	10794 <unlink@plt>
   11614:	mov	r0, r4
   11618:	pop	{r4, pc}
   1161c:	strdeq	r3, [r2], -r6
   11620:	push	{r4, lr}
   11624:	mov	r4, r0
   11628:	bl	107e8 <strlen@plt>
   1162c:	sub	r0, r0, #1
   11630:	sxth	r0, r0
   11634:	cmp	r0, #0
   11638:	blt	11648 <abort@plt+0xdf4>
   1163c:	ldrb	r3, [r4, r0]
   11640:	cmp	r3, #47	; 0x2f
   11644:	bne	1162c <abort@plt+0xdd8>
   11648:	add	r0, r0, #1
   1164c:	add	r0, r4, r0
   11650:	pop	{r4, pc}
   11654:	push	{r4, lr}
   11658:	mov	r0, #0
   1165c:	bl	114f8 <abort@plt+0xca4>
   11660:	ldr	r2, [pc, #52]	; 1169c <abort@plt+0xe48>
   11664:	push	{r4, lr}
   11668:	ldr	r2, [r2]
   1166c:	cmp	r2, #0
   11670:	beq	1167c <abort@plt+0xe28>
   11674:	blx	r2
   11678:	bl	11654 <abort@plt+0xe00>
   1167c:	mov	r3, r0
   11680:	ldr	r2, [pc, #24]	; 116a0 <abort@plt+0xe4c>
   11684:	ldr	r0, [pc, #24]	; 116a4 <abort@plt+0xe50>
   11688:	ldr	r1, [pc, #24]	; 116a8 <abort@plt+0xe54>
   1168c:	ldr	r2, [r2]
   11690:	ldr	r0, [r0]
   11694:	bl	107f4 <fprintf@plt>
   11698:	b	11678 <abort@plt+0xe24>
   1169c:	andeq	r7, r2, ip, ror #10
   116a0:	andeq	r7, r2, r0, ror r5
   116a4:	andeq	r3, r2, r0, lsl #1
   116a8:	ldrdeq	r2, [r1], -r6

000116ac <error@@Base>:
   116ac:	mov	r3, r0
   116b0:	ldr	r2, [pc, #32]	; 116d8 <error@@Base+0x2c>
   116b4:	ldr	r0, [pc, #32]	; 116dc <error@@Base+0x30>
   116b8:	push	{r4, lr}
   116bc:	ldr	r2, [r2]
   116c0:	ldr	r1, [pc, #24]	; 116e0 <error@@Base+0x34>
   116c4:	ldr	r0, [r0]
   116c8:	bl	107f4 <fprintf@plt>
   116cc:	ldr	r3, [pc, #16]	; 116e4 <error@@Base+0x38>
   116d0:	ldr	r0, [r3]
   116d4:	bl	114f8 <abort@plt+0xca4>
   116d8:	andeq	r7, r2, r0, ror r5
   116dc:	andeq	r3, r2, r0, lsl #1
   116e0:	andeq	r2, r1, r5, ror #1
   116e4:	andeq	r3, r2, r8, ror r0
   116e8:	push	{r4, lr}
   116ec:	bl	10740 <calloc@plt>
   116f0:	cmp	r0, #0
   116f4:	popne	{r4, pc}
   116f8:	ldr	r0, [pc]	; 11700 <error@@Base+0x54>
   116fc:	bl	116ac <error@@Base>
   11700:	andeq	r2, r1, sp, ror #1
   11704:	ldr	r3, [pc, #32]	; 1172c <error@@Base+0x80>
   11708:	ldrb	r2, [r3, #2]
   1170c:	cmp	r2, #0
   11710:	bne	11728 <error@@Base+0x7c>
   11714:	push	{r4, lr}
   11718:	mov	r2, #1
   1171c:	ldr	r0, [pc, #12]	; 11730 <error@@Base+0x84>
   11720:	strb	r2, [r3, #2]
   11724:	bl	116ac <error@@Base>
   11728:	bx	lr
   1172c:	strdeq	r3, [r2], -r6
   11730:	andeq	r2, r1, r7, lsl #2
   11734:	push	{r0, r1, r2, lr}
   11738:	mov	r3, r0
   1173c:	ldr	r2, [pc, #32]	; 11764 <error@@Base+0xb8>
   11740:	ldr	r0, [pc, #32]	; 11768 <error@@Base+0xbc>
   11744:	str	r1, [sp]
   11748:	ldr	r1, [pc, #28]	; 1176c <error@@Base+0xc0>
   1174c:	ldr	r2, [r2]
   11750:	ldr	r0, [r0]
   11754:	bl	107f4 <fprintf@plt>
   11758:	ldr	r3, [pc, #16]	; 11770 <error@@Base+0xc4>
   1175c:	ldr	r0, [r3]
   11760:	bl	114f8 <abort@plt+0xca4>
   11764:	andeq	r7, r2, r0, ror r5
   11768:	andeq	r3, r2, r0, lsl #1
   1176c:	andeq	r2, r1, r6, lsl r1
   11770:	andeq	r3, r2, r8, ror r0
   11774:	push	{r4, r5, r6, lr}
   11778:	subs	r4, r0, #0
   1177c:	mov	r5, r1
   11780:	bne	1179c <error@@Base+0xf0>
   11784:	ldrb	r3, [r1]
   11788:	cmp	r3, #114	; 0x72
   1178c:	ldreq	r3, [pc, #44]	; 117c0 <error@@Base+0x114>
   11790:	ldrne	r3, [pc, #44]	; 117c4 <error@@Base+0x118>
   11794:	ldr	r0, [r3]
   11798:	pop	{r4, r5, r6, pc}
   1179c:	bl	10764 <fopen@plt>
   117a0:	cmp	r0, #0
   117a4:	popne	{r4, r5, r6, pc}
   117a8:	ldrb	r3, [r5]
   117ac:	mov	r1, r4
   117b0:	cmp	r3, #119	; 0x77
   117b4:	ldreq	r0, [pc, #12]	; 117c8 <error@@Base+0x11c>
   117b8:	ldrne	r0, [pc, #12]	; 117cc <error@@Base+0x120>
   117bc:	bl	11734 <error@@Base+0x88>
   117c0:	andeq	r3, r2, r8, lsl #1
   117c4:	andeq	r3, r2, ip, lsl #1
   117c8:	andeq	r2, r1, r3, lsr #2
   117cc:	andeq	r2, r1, r9, lsr r1
   117d0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117d4:	mov	r8, r0
   117d8:	ldr	r0, [r1]
   117dc:	str	r2, [sp]
   117e0:	mov	r7, r1
   117e4:	mov	r9, r3
   117e8:	bl	11620 <abort@plt+0xdcc>
   117ec:	ldr	r3, [pc, #396]	; 11980 <error@@Base+0x2d4>
   117f0:	ldr	r1, [pc, #396]	; 11984 <error@@Base+0x2d8>
   117f4:	str	r0, [r3]
   117f8:	mov	r0, #2
   117fc:	bl	107b8 <__sysv_signal@plt>
   11800:	ldr	r1, [pc, #380]	; 11984 <error@@Base+0x2d8>
   11804:	mov	r0, #15
   11808:	bl	107b8 <__sysv_signal@plt>
   1180c:	ldr	r3, [r8]
   11810:	cmp	r3, #1
   11814:	movne	r6, #0
   11818:	movne	r5, #1
   1181c:	bne	11940 <error@@Base+0x294>
   11820:	ldr	r3, [pc, #352]	; 11988 <error@@Base+0x2dc>
   11824:	ldrb	r6, [r3, #4]
   11828:	cmp	r6, #0
   1182c:	beq	1194c <error@@Base+0x2a0>
   11830:	ldr	r0, [sp]
   11834:	bl	11660 <abort@plt+0xe0c>
   11838:	ldr	r4, [r7, r5, lsl #2]
   1183c:	lsl	sl, r5, #2
   11840:	ldrb	r3, [r4]
   11844:	cmp	r3, #45	; 0x2d
   11848:	bne	11970 <error@@Base+0x2c4>
   1184c:	ldrb	r3, [r4, #1]
   11850:	cmp	r3, #0
   11854:	str	r3, [sp, #4]
   11858:	beq	11970 <error@@Base+0x2c4>
   1185c:	mov	r0, r4
   11860:	bl	107e8 <strlen@plt>
   11864:	mov	r1, r4
   11868:	mov	r2, r0
   1186c:	ldr	r0, [pc, #280]	; 1198c <error@@Base+0x2e0>
   11870:	bl	10848 <strncmp@plt>
   11874:	cmp	r0, #0
   11878:	beq	11830 <error@@Base+0x184>
   1187c:	add	r0, r5, #1
   11880:	cmp	r0, fp
   11884:	addlt	sl, r7, sl
   11888:	movge	r1, #0
   1188c:	ldrlt	r1, [sl, #4]
   11890:	cmp	r9, #0
   11894:	ldr	r3, [sp, #4]
   11898:	beq	11958 <error@@Base+0x2ac>
   1189c:	mov	r2, #0
   118a0:	add	lr, r2, r2, lsl #1
   118a4:	add	ip, r9, lr, lsl #2
   118a8:	ldrb	lr, [r9, lr, lsl #2]
   118ac:	cmp	lr, #0
   118b0:	beq	11958 <error@@Base+0x2ac>
   118b4:	cmp	r3, lr
   118b8:	bne	118f8 <error@@Base+0x24c>
   118bc:	ldr	r3, [ip, #4]
   118c0:	cmp	r3, #0
   118c4:	bne	11904 <error@@Base+0x258>
   118c8:	ldr	r3, [ip, #8]
   118cc:	cmp	r3, #0
   118d0:	beq	11958 <error@@Base+0x2ac>
   118d4:	ldrb	r2, [r4, #2]
   118d8:	cmp	r2, #0
   118dc:	bne	11958 <error@@Base+0x2ac>
   118e0:	ldrb	r2, [r3]
   118e4:	cmp	r2, #0
   118e8:	bne	11964 <error@@Base+0x2b8>
   118ec:	mov	r2, #1
   118f0:	strb	r2, [r3]
   118f4:	b	11938 <error@@Base+0x28c>
   118f8:	add	r2, r2, #1
   118fc:	sxth	r2, r2
   11900:	b	118a0 <error@@Base+0x1f4>
   11904:	ldrb	r2, [r4, #2]
   11908:	cmp	r2, #0
   1190c:	cmpeq	r1, #0
   11910:	beq	118c8 <error@@Base+0x21c>
   11914:	ldr	ip, [r3]
   11918:	cmp	ip, #0
   1191c:	bne	11964 <error@@Base+0x2b8>
   11920:	cmp	r2, #0
   11924:	addne	r1, r4, #2
   11928:	str	r1, [r3]
   1192c:	ldrb	r3, [r4, #2]
   11930:	cmp	r3, #0
   11934:	sxtheq	r5, r0
   11938:	add	r5, r5, #1
   1193c:	sxth	r5, r5
   11940:	ldr	fp, [r8]
   11944:	cmp	r5, fp
   11948:	blt	11838 <error@@Base+0x18c>
   1194c:	str	r6, [r8]
   11950:	add	sp, sp, #12
   11954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11958:	ldr	r0, [pc, #48]	; 11990 <error@@Base+0x2e4>
   1195c:	mov	r1, r4
   11960:	bl	11734 <error@@Base+0x88>
   11964:	mov	r1, r4
   11968:	ldr	r0, [pc, #36]	; 11994 <error@@Base+0x2e8>
   1196c:	b	11960 <error@@Base+0x2b4>
   11970:	add	r3, r6, #1
   11974:	str	r4, [r7, r6, lsl #2]
   11978:	sxth	r6, r3
   1197c:	b	11938 <error@@Base+0x28c>
   11980:	andeq	r7, r2, r0, ror r5
   11984:	andeq	r1, r1, r4, lsl #14
   11988:	andeq	r3, r2, r8, ror r0
   1198c:	andeq	r2, r1, sp, asr #2
   11990:	andeq	r2, r1, r3, asr r1
   11994:	andeq	r2, r1, r2, ror #2
   11998:	push	{r0, r1, r2, lr}
   1199c:	mov	r3, r0
   119a0:	ldr	r2, [pc, #28]	; 119c4 <error@@Base+0x318>
   119a4:	ldr	r0, [pc, #28]	; 119c8 <error@@Base+0x31c>
   119a8:	str	r1, [sp]
   119ac:	ldr	r1, [pc, #24]	; 119cc <error@@Base+0x320>
   119b0:	ldr	r2, [r2]
   119b4:	ldr	r0, [r0]
   119b8:	bl	107f4 <fprintf@plt>
   119bc:	add	sp, sp, #12
   119c0:	pop	{pc}		; (ldr pc, [sp], #4)
   119c4:	andeq	r7, r2, r0, ror r5
   119c8:	andeq	r3, r2, r0, lsl #1
   119cc:	andeq	r2, r1, r6, lsl r1
   119d0:	cmp	r1, #0
   119d4:	push	{r4, lr}
   119d8:	mov	r4, r0
   119dc:	stm	r2, {r1, r3}
   119e0:	strne	r2, [r1, #4]
   119e4:	streq	r2, [r0]
   119e8:	cmp	r3, #0
   119ec:	streq	r2, [r0, #4]
   119f0:	ldr	r0, [r0, #8]
   119f4:	strne	r2, [r3]
   119f8:	cmp	r0, #0
   119fc:	beq	11a0c <error@@Base+0x360>
   11a00:	bl	10770 <free@plt>
   11a04:	mov	r3, #0
   11a08:	str	r3, [r4, #8]
   11a0c:	ldr	r3, [r4, #12]
   11a10:	add	r3, r3, #1
   11a14:	str	r3, [r4, #12]
   11a18:	pop	{r4, pc}
   11a1c:	mov	r3, #0
   11a20:	str	r3, [r0, #4]
   11a24:	str	r3, [r0]
   11a28:	str	r3, [r0, #8]
   11a2c:	str	r3, [r0, #12]
   11a30:	bx	lr
   11a34:	mov	r2, r1
   11a38:	ldr	r3, [r0]
   11a3c:	mov	r1, #0
   11a40:	b	119d0 <error@@Base+0x324>
   11a44:	mov	r2, r1
   11a48:	mov	r3, #0
   11a4c:	ldr	r1, [r0, #4]
   11a50:	b	119d0 <error@@Base+0x324>
   11a54:	mov	r3, r2
   11a58:	mov	r2, r1
   11a5c:	ldr	r1, [r3]
   11a60:	b	119d0 <error@@Base+0x324>
   11a64:	ldr	r3, [r1, #4]
   11a68:	b	119d0 <error@@Base+0x324>
   11a6c:	ldr	r3, [r1]
   11a70:	ldr	r2, [r1, #4]
   11a74:	cmp	r3, #0
   11a78:	push	{r4, r5, r6, lr}
   11a7c:	mov	r4, r0
   11a80:	strne	r2, [r3, #4]
   11a84:	streq	r2, [r0]
   11a88:	ldr	r2, [r1, #4]
   11a8c:	mov	r5, #0
   11a90:	cmp	r2, #0
   11a94:	streq	r3, [r0, #4]
   11a98:	ldr	r0, [r0, #8]
   11a9c:	strne	r3, [r2]
   11aa0:	cmp	r0, r5
   11aa4:	str	r5, [r1, #4]
   11aa8:	str	r5, [r1]
   11aac:	beq	11ab8 <error@@Base+0x40c>
   11ab0:	bl	10770 <free@plt>
   11ab4:	str	r5, [r4, #8]
   11ab8:	ldr	r3, [r4, #12]
   11abc:	sub	r3, r3, #1
   11ac0:	str	r3, [r4, #12]
   11ac4:	pop	{r4, r5, r6, pc}
   11ac8:	ldr	r3, [r0, #8]
   11acc:	cmp	r3, #0
   11ad0:	bxne	lr
   11ad4:	ldr	r3, [r0, #12]
   11ad8:	cmp	r3, #0
   11adc:	bxeq	lr
   11ae0:	push	{r4, lr}
   11ae4:	mov	r1, #4
   11ae8:	mov	r4, r0
   11aec:	mov	r0, r3
   11af0:	bl	116e8 <error@@Base+0x3c>
   11af4:	ldr	r3, [r4]
   11af8:	str	r0, [r4, #8]
   11afc:	sub	r0, r0, #4
   11b00:	cmp	r3, #0
   11b04:	bne	11b0c <error@@Base+0x460>
   11b08:	pop	{r4, pc}
   11b0c:	str	r3, [r0, #4]!
   11b10:	ldr	r3, [r3, #4]
   11b14:	b	11b00 <error@@Base+0x454>
   11b18:	push	{r4, r5, r6, lr}
   11b1c:	mov	r5, r0
   11b20:	mov	r6, r1
   11b24:	ldr	r4, [r5]
   11b28:	cmp	r4, #0
   11b2c:	bne	11b34 <error@@Base+0x488>
   11b30:	pop	{r4, r5, r6, pc}
   11b34:	mov	r0, r5
   11b38:	mov	r1, r4
   11b3c:	bl	11a6c <error@@Base+0x3c0>
   11b40:	mov	r0, r4
   11b44:	blx	r6
   11b48:	b	11b24 <error@@Base+0x478>
   11b4c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b50:	mov	r7, r0
   11b54:	ldr	sl, [pc, #248]	; 11c54 <error@@Base+0x5a8>
   11b58:	mov	r9, r1
   11b5c:	mov	r6, sl
   11b60:	ldr	r3, [sl]
   11b64:	mov	r4, r9
   11b68:	mov	r5, r7
   11b6c:	ldr	fp, [r3, r7, lsl #2]
   11b70:	cmp	r5, r4
   11b74:	blt	11bc0 <error@@Base+0x514>
   11b78:	ldr	r3, [r6]
   11b7c:	sub	r1, r4, #1
   11b80:	cmp	r7, r1
   11b84:	str	fp, [r3, r4, lsl #2]
   11b88:	bge	11b94 <error@@Base+0x4e8>
   11b8c:	mov	r0, r7
   11b90:	bl	11b4c <error@@Base+0x4a0>
   11b94:	add	r7, r5, #1
   11b98:	cmp	r7, r9
   11b9c:	blt	11b60 <error@@Base+0x4b4>
   11ba0:	add	sp, sp, #12
   11ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ba8:	sub	r4, r4, #1
   11bac:	cmp	r5, r4
   11bb0:	sub	r8, r8, #4
   11bb4:	bne	11bc4 <error@@Base+0x518>
   11bb8:	mov	r2, r4
   11bbc:	b	11c38 <error@@Base+0x58c>
   11bc0:	lsl	r8, r4, #2
   11bc4:	ldm	r6, {r2, r3}
   11bc8:	mov	r0, fp
   11bcc:	ldr	r1, [r2, r8]
   11bd0:	blx	r3
   11bd4:	cmp	r0, #0
   11bd8:	blt	11ba8 <error@@Base+0x4fc>
   11bdc:	ldr	r2, [r6]
   11be0:	lsl	r1, r5, #2
   11be4:	add	r8, r5, #1
   11be8:	ldr	r0, [r2, r4, lsl #2]
   11bec:	lsl	r3, r4, #2
   11bf0:	str	r0, [r2, r5, lsl #2]
   11bf4:	add	r5, r1, #4
   11bf8:	cmp	r8, r4
   11bfc:	bge	11c4c <error@@Base+0x5a0>
   11c00:	ldm	r6, {r1, r2}
   11c04:	mov	r0, fp
   11c08:	str	r3, [sp, #4]
   11c0c:	ldr	r1, [r1, r5]
   11c10:	blx	r2
   11c14:	add	r5, r5, #4
   11c18:	ldr	r3, [sp, #4]
   11c1c:	cmp	r0, #0
   11c20:	bgt	11c44 <error@@Base+0x598>
   11c24:	ldr	r1, [r6]
   11c28:	sub	r2, r4, #1
   11c2c:	mov	r4, r8
   11c30:	ldr	r0, [r1, r8, lsl #2]
   11c34:	str	r0, [r1, r3]
   11c38:	mov	r5, r4
   11c3c:	mov	r4, r2
   11c40:	b	11b70 <error@@Base+0x4c4>
   11c44:	add	r8, r8, #1
   11c48:	b	11bf8 <error@@Base+0x54c>
   11c4c:	bne	11c24 <error@@Base+0x578>
   11c50:	b	11bb8 <error@@Base+0x50c>
   11c54:	strdeq	r3, [r2], -ip
   11c58:	cmp	r0, #1
   11c5c:	bxle	lr
   11c60:	ldr	r3, [pc, #12]	; 11c74 <error@@Base+0x5c8>
   11c64:	stm	r3, {r1, r2}
   11c68:	sub	r1, r0, #1
   11c6c:	mov	r0, #0
   11c70:	b	11b4c <error@@Base+0x4a0>
   11c74:	strdeq	r3, [r2], -ip
   11c78:	cmp	r1, #0
   11c7c:	beq	11e88 <error@@Base+0x7dc>
   11c80:	eor	ip, r0, r1
   11c84:	rsbmi	r1, r1, #0
   11c88:	subs	r2, r1, #1
   11c8c:	beq	11e54 <error@@Base+0x7a8>
   11c90:	movs	r3, r0
   11c94:	rsbmi	r3, r0, #0
   11c98:	cmp	r3, r1
   11c9c:	bls	11e60 <error@@Base+0x7b4>
   11ca0:	tst	r1, r2
   11ca4:	beq	11e70 <error@@Base+0x7c4>
   11ca8:	clz	r2, r3
   11cac:	clz	r0, r1
   11cb0:	sub	r2, r0, r2
   11cb4:	rsbs	r2, r2, #31
   11cb8:	addne	r2, r2, r2, lsl #1
   11cbc:	mov	r0, #0
   11cc0:	addne	pc, pc, r2, lsl #2
   11cc4:	nop			; (mov r0, r0)
   11cc8:	cmp	r3, r1, lsl #31
   11ccc:	adc	r0, r0, r0
   11cd0:	subcs	r3, r3, r1, lsl #31
   11cd4:	cmp	r3, r1, lsl #30
   11cd8:	adc	r0, r0, r0
   11cdc:	subcs	r3, r3, r1, lsl #30
   11ce0:	cmp	r3, r1, lsl #29
   11ce4:	adc	r0, r0, r0
   11ce8:	subcs	r3, r3, r1, lsl #29
   11cec:	cmp	r3, r1, lsl #28
   11cf0:	adc	r0, r0, r0
   11cf4:	subcs	r3, r3, r1, lsl #28
   11cf8:	cmp	r3, r1, lsl #27
   11cfc:	adc	r0, r0, r0
   11d00:	subcs	r3, r3, r1, lsl #27
   11d04:	cmp	r3, r1, lsl #26
   11d08:	adc	r0, r0, r0
   11d0c:	subcs	r3, r3, r1, lsl #26
   11d10:	cmp	r3, r1, lsl #25
   11d14:	adc	r0, r0, r0
   11d18:	subcs	r3, r3, r1, lsl #25
   11d1c:	cmp	r3, r1, lsl #24
   11d20:	adc	r0, r0, r0
   11d24:	subcs	r3, r3, r1, lsl #24
   11d28:	cmp	r3, r1, lsl #23
   11d2c:	adc	r0, r0, r0
   11d30:	subcs	r3, r3, r1, lsl #23
   11d34:	cmp	r3, r1, lsl #22
   11d38:	adc	r0, r0, r0
   11d3c:	subcs	r3, r3, r1, lsl #22
   11d40:	cmp	r3, r1, lsl #21
   11d44:	adc	r0, r0, r0
   11d48:	subcs	r3, r3, r1, lsl #21
   11d4c:	cmp	r3, r1, lsl #20
   11d50:	adc	r0, r0, r0
   11d54:	subcs	r3, r3, r1, lsl #20
   11d58:	cmp	r3, r1, lsl #19
   11d5c:	adc	r0, r0, r0
   11d60:	subcs	r3, r3, r1, lsl #19
   11d64:	cmp	r3, r1, lsl #18
   11d68:	adc	r0, r0, r0
   11d6c:	subcs	r3, r3, r1, lsl #18
   11d70:	cmp	r3, r1, lsl #17
   11d74:	adc	r0, r0, r0
   11d78:	subcs	r3, r3, r1, lsl #17
   11d7c:	cmp	r3, r1, lsl #16
   11d80:	adc	r0, r0, r0
   11d84:	subcs	r3, r3, r1, lsl #16
   11d88:	cmp	r3, r1, lsl #15
   11d8c:	adc	r0, r0, r0
   11d90:	subcs	r3, r3, r1, lsl #15
   11d94:	cmp	r3, r1, lsl #14
   11d98:	adc	r0, r0, r0
   11d9c:	subcs	r3, r3, r1, lsl #14
   11da0:	cmp	r3, r1, lsl #13
   11da4:	adc	r0, r0, r0
   11da8:	subcs	r3, r3, r1, lsl #13
   11dac:	cmp	r3, r1, lsl #12
   11db0:	adc	r0, r0, r0
   11db4:	subcs	r3, r3, r1, lsl #12
   11db8:	cmp	r3, r1, lsl #11
   11dbc:	adc	r0, r0, r0
   11dc0:	subcs	r3, r3, r1, lsl #11
   11dc4:	cmp	r3, r1, lsl #10
   11dc8:	adc	r0, r0, r0
   11dcc:	subcs	r3, r3, r1, lsl #10
   11dd0:	cmp	r3, r1, lsl #9
   11dd4:	adc	r0, r0, r0
   11dd8:	subcs	r3, r3, r1, lsl #9
   11ddc:	cmp	r3, r1, lsl #8
   11de0:	adc	r0, r0, r0
   11de4:	subcs	r3, r3, r1, lsl #8
   11de8:	cmp	r3, r1, lsl #7
   11dec:	adc	r0, r0, r0
   11df0:	subcs	r3, r3, r1, lsl #7
   11df4:	cmp	r3, r1, lsl #6
   11df8:	adc	r0, r0, r0
   11dfc:	subcs	r3, r3, r1, lsl #6
   11e00:	cmp	r3, r1, lsl #5
   11e04:	adc	r0, r0, r0
   11e08:	subcs	r3, r3, r1, lsl #5
   11e0c:	cmp	r3, r1, lsl #4
   11e10:	adc	r0, r0, r0
   11e14:	subcs	r3, r3, r1, lsl #4
   11e18:	cmp	r3, r1, lsl #3
   11e1c:	adc	r0, r0, r0
   11e20:	subcs	r3, r3, r1, lsl #3
   11e24:	cmp	r3, r1, lsl #2
   11e28:	adc	r0, r0, r0
   11e2c:	subcs	r3, r3, r1, lsl #2
   11e30:	cmp	r3, r1, lsl #1
   11e34:	adc	r0, r0, r0
   11e38:	subcs	r3, r3, r1, lsl #1
   11e3c:	cmp	r3, r1
   11e40:	adc	r0, r0, r0
   11e44:	subcs	r3, r3, r1
   11e48:	cmp	ip, #0
   11e4c:	rsbmi	r0, r0, #0
   11e50:	bx	lr
   11e54:	teq	ip, r0
   11e58:	rsbmi	r0, r0, #0
   11e5c:	bx	lr
   11e60:	movcc	r0, #0
   11e64:	asreq	r0, ip, #31
   11e68:	orreq	r0, r0, #1
   11e6c:	bx	lr
   11e70:	clz	r2, r1
   11e74:	rsb	r2, r2, #31
   11e78:	cmp	ip, #0
   11e7c:	lsr	r0, r3, r2
   11e80:	rsbmi	r0, r0, #0
   11e84:	bx	lr
   11e88:	cmp	r0, #0
   11e8c:	mvngt	r0, #-2147483648	; 0x80000000
   11e90:	movlt	r0, #-2147483648	; 0x80000000
   11e94:	b	11eb8 <error@@Base+0x80c>
   11e98:	cmp	r1, #0
   11e9c:	beq	11e88 <error@@Base+0x7dc>
   11ea0:	push	{r0, r1, lr}
   11ea4:	bl	11c80 <error@@Base+0x5d4>
   11ea8:	pop	{r1, r2, lr}
   11eac:	mul	r3, r2, r0
   11eb0:	sub	r1, r1, r3
   11eb4:	bx	lr
   11eb8:	push	{r1, lr}
   11ebc:	mov	r0, #8
   11ec0:	bl	1074c <raise@plt>
   11ec4:	pop	{r1, pc}
   11ec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ecc:	mov	r7, r0
   11ed0:	ldr	r6, [pc, #72]	; 11f20 <error@@Base+0x874>
   11ed4:	ldr	r5, [pc, #72]	; 11f24 <error@@Base+0x878>
   11ed8:	add	r6, pc, r6
   11edc:	add	r5, pc, r5
   11ee0:	sub	r6, r6, r5
   11ee4:	mov	r8, r1
   11ee8:	mov	r9, r2
   11eec:	bl	10720 <calloc@plt-0x20>
   11ef0:	asrs	r6, r6, #2
   11ef4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ef8:	mov	r4, #0
   11efc:	add	r4, r4, #1
   11f00:	ldr	r3, [r5], #4
   11f04:	mov	r2, r9
   11f08:	mov	r1, r8
   11f0c:	mov	r0, r7
   11f10:	blx	r3
   11f14:	cmp	r6, r4
   11f18:	bne	11efc <error@@Base+0x850>
   11f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f20:	andeq	r1, r1, r0, lsr #32
   11f24:	andeq	r1, r1, r8, lsl r0
   11f28:	bx	lr
   11f2c:	mov	r2, r1
   11f30:	mov	r1, r0
   11f34:	mov	r0, #3
   11f38:	b	107a0 <__xstat@plt>

Disassembly of section .fini:

00011f3c <.fini>:
   11f3c:	push	{r3, lr}
   11f40:	pop	{r3, pc}
