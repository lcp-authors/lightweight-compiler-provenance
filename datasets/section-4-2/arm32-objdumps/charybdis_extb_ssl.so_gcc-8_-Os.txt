
../repos/charybdis/extensions/.libs/extb_ssl.so:     file format elf32-littlearm


Disassembly of section .init:

00000368 <_init>:
 368:	push	{r3, lr}
 36c:	bl	3ac <call_weak_fn>
 370:	pop	{r3, pc}

Disassembly of section .plt:

00000374 <.plt>:
 374:	push	{lr}		; (str lr, [sp, #-4]!)
 378:	ldr	lr, [pc, #4]	; 384 <.plt+0x10>
 37c:	add	lr, pc, lr
 380:	ldr	pc, [lr, #8]!
 384:	.word	0x00010c7c

00000388 <__cxa_finalize@plt>:
 388:	add	ip, pc, #0, 12
 38c:	add	ip, ip, #16, 20	; 0x10000
 390:	ldr	pc, [ip, #3196]!	; 0xc7c

00000394 <__gmon_start__@plt>:
 394:	add	ip, pc, #0, 12
 398:	add	ip, ip, #16, 20	; 0x10000
 39c:	ldr	pc, [ip, #3188]!	; 0xc74

000003a0 <irccmp@plt>:
 3a0:	add	ip, pc, #0, 12
 3a4:	add	ip, ip, #16, 20	; 0x10000
 3a8:	ldr	pc, [ip, #3180]!	; 0xc6c

Disassembly of section .text:

000003ac <call_weak_fn>:
 3ac:	ldr	r3, [pc, #20]	; 3c8 <call_weak_fn+0x1c>
 3b0:	ldr	r2, [pc, #20]	; 3cc <call_weak_fn+0x20>
 3b4:	add	r3, pc, r3
 3b8:	ldr	r2, [r3, r2]
 3bc:	cmp	r2, #0
 3c0:	bxeq	lr
 3c4:	b	394 <__gmon_start__@plt>
 3c8:	.word	0x00010c44
 3cc:	.word	0x00000020

000003d0 <deregister_tm_clones>:
 3d0:	ldr	r0, [pc, #44]	; 404 <deregister_tm_clones+0x34>
 3d4:	ldr	r3, [pc, #44]	; 408 <deregister_tm_clones+0x38>
 3d8:	add	r0, pc, r0
 3dc:	add	r3, pc, r3
 3e0:	cmp	r3, r0
 3e4:	ldr	r3, [pc, #32]	; 40c <deregister_tm_clones+0x3c>
 3e8:	add	r3, pc, r3
 3ec:	bxeq	lr
 3f0:	ldr	r2, [pc, #24]	; 410 <deregister_tm_clones+0x40>
 3f4:	ldr	r3, [r3, r2]
 3f8:	cmp	r3, #0
 3fc:	bxeq	lr
 400:	bx	r3
 404:	.word	0x00010c78
 408:	.word	0x00010c74
 40c:	.word	0x00010c10
 410:	.word	0x0000001c

00000414 <register_tm_clones>:
 414:	ldr	r0, [pc, #56]	; 454 <register_tm_clones+0x40>
 418:	ldr	r3, [pc, #56]	; 458 <register_tm_clones+0x44>
 41c:	add	r0, pc, r0
 420:	add	r3, pc, r3
 424:	sub	r1, r3, r0
 428:	ldr	r3, [pc, #44]	; 45c <register_tm_clones+0x48>
 42c:	asr	r1, r1, #2
 430:	add	r3, pc, r3
 434:	add	r1, r1, r1, lsr #31
 438:	asrs	r1, r1, #1
 43c:	bxeq	lr
 440:	ldr	r2, [pc, #24]	; 460 <register_tm_clones+0x4c>
 444:	ldr	r3, [r3, r2]
 448:	cmp	r3, #0
 44c:	bxeq	lr
 450:	bx	r3
 454:	.word	0x00010c34
 458:	.word	0x00010c30
 45c:	.word	0x00010bc8
 460:	.word	0x00000028

00000464 <__do_global_dtors_aux>:
 464:	ldr	r3, [pc, #76]	; 4b8 <__do_global_dtors_aux+0x54>
 468:	ldr	r2, [pc, #76]	; 4bc <__do_global_dtors_aux+0x58>
 46c:	add	r3, pc, r3
 470:	add	r2, pc, r2
 474:	ldrb	r3, [r3]
 478:	cmp	r3, #0
 47c:	bxne	lr
 480:	ldr	r3, [pc, #56]	; 4c0 <__do_global_dtors_aux+0x5c>
 484:	push	{r4, lr}
 488:	ldr	r3, [r2, r3]
 48c:	cmp	r3, #0
 490:	beq	4a0 <__do_global_dtors_aux+0x3c>
 494:	ldr	r3, [pc, #40]	; 4c4 <__do_global_dtors_aux+0x60>
 498:	ldr	r0, [pc, r3]
 49c:	bl	388 <__cxa_finalize@plt>
 4a0:	bl	3d0 <deregister_tm_clones>
 4a4:	ldr	r3, [pc, #28]	; 4c8 <__do_global_dtors_aux+0x64>
 4a8:	mov	r2, #1
 4ac:	add	r3, pc, r3
 4b0:	strb	r2, [r3]
 4b4:	pop	{r4, pc}
 4b8:	.word	0x00010be4
 4bc:	.word	0x00010b88
 4c0:	.word	0x00000018
 4c4:	.word	0x00010b8c
 4c8:	.word	0x00010ba4

000004cc <frame_dummy>:
 4cc:	b	414 <register_tm_clones>

000004d0 <_modinit>:
 4d0:	ldr	r3, [pc, #28]	; 4f4 <_modinit+0x24>
 4d4:	mov	r0, #0
 4d8:	ldr	r2, [pc, #24]	; 4f8 <_modinit+0x28>
 4dc:	add	r3, pc, r3
 4e0:	ldr	r3, [r3, r2]
 4e4:	ldr	r2, [pc, #16]	; 4fc <_modinit+0x2c>
 4e8:	add	r2, pc, r2
 4ec:	str	r2, [r3, #488]	; 0x1e8
 4f0:	bx	lr
 4f4:	.word	0x00010b1c
 4f8:	.word	0x00000024
 4fc:	.word	0x00000034

00000500 <_moddeinit>:
 500:	ldr	r3, [pc, #20]	; 51c <_moddeinit+0x1c>
 504:	ldr	r2, [pc, #20]	; 520 <_moddeinit+0x20>
 508:	add	r3, pc, r3
 50c:	ldr	r3, [r3, r2]
 510:	mov	r2, #0
 514:	str	r2, [r3, #488]	; 0x1e8
 518:	bx	lr
 51c:	.word	0x00010af0
 520:	.word	0x00000024

00000524 <eb_ssl>:
 524:	ldr	r3, [r1, #56]	; 0x38
 528:	ands	r3, r3, #16384	; 0x4000
 52c:	beq	574 <eb_ssl+0x50>
 530:	cmp	r0, #0
 534:	beq	564 <eb_ssl+0x40>
 538:	ldr	r1, [r1, #444]	; 0x1bc
 53c:	cmp	r1, #0
 540:	beq	56c <eb_ssl+0x48>
 544:	ldrb	r3, [r1]
 548:	cmp	r3, #0
 54c:	beq	574 <eb_ssl+0x50>
 550:	push	{r4, lr}
 554:	bl	3a0 <irccmp@plt>
 558:	clz	r0, r0
 55c:	lsr	r0, r0, #5
 560:	pop	{r4, pc}
 564:	mov	r0, #1
 568:	bx	lr
 56c:	mov	r0, r1
 570:	bx	lr
 574:	mov	r0, r3
 578:	bx	lr

Disassembly of section .fini:

0000057c <_fini>:
 57c:	push	{r3, lr}
 580:	pop	{r3, pc}
