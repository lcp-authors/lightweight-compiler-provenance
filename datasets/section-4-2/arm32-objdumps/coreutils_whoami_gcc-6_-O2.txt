
../repos/coreutils/src/whoami:     file format elf32-littlearm


Disassembly of section .init:

00010b44 <.init>:
   10b44:	push	{r3, lr}
   10b48:	bl	10f38 <abort@plt+0x1b8>
   10b4c:	pop	{r3, pc}

Disassembly of section .plt:

00010b50 <calloc@plt-0x14>:
   10b50:	push	{lr}		; (str lr, [sp, #-4]!)
   10b54:	ldr	lr, [pc, #4]	; 10b60 <calloc@plt-0x4>
   10b58:	add	lr, pc, lr
   10b5c:	ldr	pc, [lr, #8]!
   10b60:	andeq	r5, r1, r0, lsr #9

00010b64 <calloc@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #86016	; 0x15000
   10b6c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b70 <fputs_unlocked@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #86016	; 0x15000
   10b78:	ldr	pc, [ip, #1176]!	; 0x498

00010b7c <raise@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #86016	; 0x15000
   10b84:	ldr	pc, [ip, #1168]!	; 0x490

00010b88 <strcmp@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #86016	; 0x15000
   10b90:	ldr	pc, [ip, #1160]!	; 0x488

00010b94 <getpwuid@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #86016	; 0x15000
   10b9c:	ldr	pc, [ip, #1152]!	; 0x480

00010ba0 <fflush@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #86016	; 0x15000
   10ba8:	ldr	pc, [ip, #1144]!	; 0x478

00010bac <free@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #86016	; 0x15000
   10bb4:	ldr	pc, [ip, #1136]!	; 0x470

00010bb8 <_exit@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #86016	; 0x15000
   10bc0:	ldr	pc, [ip, #1128]!	; 0x468

00010bc4 <memcpy@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #86016	; 0x15000
   10bcc:	ldr	pc, [ip, #1120]!	; 0x460

00010bd0 <mbsinit@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #86016	; 0x15000
   10bd8:	ldr	pc, [ip, #1112]!	; 0x458

00010bdc <memcmp@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #86016	; 0x15000
   10be4:	ldr	pc, [ip, #1104]!	; 0x450

00010be8 <fputc_unlocked@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #86016	; 0x15000
   10bf0:	ldr	pc, [ip, #1096]!	; 0x448

00010bf4 <dcgettext@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #86016	; 0x15000
   10bfc:	ldr	pc, [ip, #1088]!	; 0x440

00010c00 <realloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #86016	; 0x15000
   10c08:	ldr	pc, [ip, #1080]!	; 0x438

00010c0c <textdomain@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #86016	; 0x15000
   10c14:	ldr	pc, [ip, #1072]!	; 0x430

00010c18 <geteuid@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #86016	; 0x15000
   10c20:	ldr	pc, [ip, #1064]!	; 0x428

00010c24 <iswprint@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #86016	; 0x15000
   10c2c:	ldr	pc, [ip, #1056]!	; 0x420

00010c30 <fwrite@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #86016	; 0x15000
   10c38:	ldr	pc, [ip, #1048]!	; 0x418

00010c3c <lseek64@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #86016	; 0x15000
   10c44:	ldr	pc, [ip, #1040]!	; 0x410

00010c48 <__ctype_get_mb_cur_max@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #86016	; 0x15000
   10c50:	ldr	pc, [ip, #1032]!	; 0x408

00010c54 <__fpending@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #1024]!	; 0x400

00010c60 <mbrtowc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c6c <error@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c78 <puts@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c84 <malloc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c90 <__libc_start_main@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #984]!	; 0x3d8

00010c9c <__freading@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #976]!	; 0x3d0

00010ca8 <__gmon_start__@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #968]!	; 0x3c8

00010cb4 <getopt_long@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #960]!	; 0x3c0

00010cc0 <__ctype_b_loc@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #952]!	; 0x3b8

00010ccc <exit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #944]!	; 0x3b0

00010cd8 <strlen@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #936]!	; 0x3a8

00010ce4 <__errno_location@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #928]!	; 0x3a0

00010cf0 <__cxa_atexit@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #920]!	; 0x398

00010cfc <memset@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #912]!	; 0x390

00010d08 <__printf_chk@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #904]!	; 0x388

00010d14 <fileno@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #896]!	; 0x380

00010d20 <__fprintf_chk@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #888]!	; 0x378

00010d2c <fclose@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #880]!	; 0x370

00010d38 <fseeko64@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #872]!	; 0x368

00010d44 <setlocale@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #864]!	; 0x360

00010d50 <strrchr@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #856]!	; 0x358

00010d5c <nl_langinfo@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #848]!	; 0x350

00010d68 <bindtextdomain@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #840]!	; 0x348

00010d74 <strncmp@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #832]!	; 0x340

00010d80 <abort@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #824]!	; 0x338

Disassembly of section .text:

00010d8c <.text>:
   10d8c:	push	{r4, r5, r6, r7, r8, lr}
   10d90:	mov	r6, r0
   10d94:	sub	sp, sp, #24
   10d98:	ldr	r0, [r1]
   10d9c:	mov	r5, r1
   10da0:	bl	11580 <abort@plt+0x800>
   10da4:	ldr	r1, [pc, #288]	; 10ecc <abort@plt+0x14c>
   10da8:	mov	r0, #6
   10dac:	bl	10d44 <setlocale@plt>
   10db0:	ldr	r1, [pc, #280]	; 10ed0 <abort@plt+0x150>
   10db4:	ldr	r0, [pc, #280]	; 10ed4 <abort@plt+0x154>
   10db8:	bl	10d68 <bindtextdomain@plt>
   10dbc:	ldr	r0, [pc, #272]	; 10ed4 <abort@plt+0x154>
   10dc0:	bl	10c0c <textdomain@plt>
   10dc4:	ldr	r0, [pc, #268]	; 10ed8 <abort@plt+0x158>
   10dc8:	bl	148cc <abort@plt+0x3b4c>
   10dcc:	ldr	r1, [pc, #264]	; 10edc <abort@plt+0x15c>
   10dd0:	ldr	r2, [pc, #264]	; 10ee0 <abort@plt+0x160>
   10dd4:	ldr	r3, [pc, #264]	; 10ee4 <abort@plt+0x164>
   10dd8:	ldr	r1, [r1]
   10ddc:	ldr	r8, [pc, #260]	; 10ee8 <abort@plt+0x168>
   10de0:	mov	r4, #0
   10de4:	mov	r7, #1
   10de8:	str	r1, [sp]
   10dec:	str	r2, [sp, #12]
   10df0:	str	r3, [sp, #8]
   10df4:	mov	r1, r5
   10df8:	ldr	r3, [pc, #236]	; 10eec <abort@plt+0x16c>
   10dfc:	mov	r0, r6
   10e00:	str	r4, [sp, #16]
   10e04:	str	r7, [sp, #4]
   10e08:	ldr	r2, [pc, #224]	; 10ef0 <abort@plt+0x170>
   10e0c:	bl	114a8 <abort@plt+0x728>
   10e10:	ldr	r3, [r8]
   10e14:	cmp	r6, r3
   10e18:	bne	10e90 <abort@plt+0x110>
   10e1c:	bl	10ce4 <__errno_location@plt>
   10e20:	str	r4, [r0]
   10e24:	mov	r5, r0
   10e28:	bl	10c18 <geteuid@plt>
   10e2c:	cmn	r0, #1
   10e30:	mov	r4, r0
   10e34:	beq	10e60 <abort@plt+0xe0>
   10e38:	mov	r0, r4
   10e3c:	bl	10b94 <getpwuid@plt>
   10e40:	cmp	r0, #0
   10e44:	ldreq	r6, [r5]
   10e48:	beq	10e6c <abort@plt+0xec>
   10e4c:	ldr	r0, [r0]
   10e50:	bl	10c78 <puts@plt>
   10e54:	mov	r0, #0
   10e58:	add	sp, sp, #24
   10e5c:	pop	{r4, r5, r6, r7, r8, pc}
   10e60:	ldr	r6, [r5]
   10e64:	cmp	r6, #0
   10e68:	beq	10e38 <abort@plt+0xb8>
   10e6c:	mov	r2, #5
   10e70:	ldr	r1, [pc, #124]	; 10ef4 <abort@plt+0x174>
   10e74:	mov	r0, #0
   10e78:	bl	10bf4 <dcgettext@plt>
   10e7c:	mov	r3, r4
   10e80:	mov	r1, r6
   10e84:	mov	r2, r0
   10e88:	mov	r0, #1
   10e8c:	bl	10c6c <error@plt>
   10e90:	mov	r2, #5
   10e94:	ldr	r1, [pc, #92]	; 10ef8 <abort@plt+0x178>
   10e98:	mov	r0, r4
   10e9c:	bl	10bf4 <dcgettext@plt>
   10ea0:	ldr	r3, [r8]
   10ea4:	mov	r6, r0
   10ea8:	ldr	r0, [r5, r3, lsl #2]
   10eac:	bl	13440 <abort@plt+0x26c0>
   10eb0:	mov	r2, r6
   10eb4:	mov	r1, r4
   10eb8:	mov	r3, r0
   10ebc:	mov	r0, r4
   10ec0:	bl	10c6c <error@plt>
   10ec4:	mov	r0, r7
   10ec8:	bl	11024 <abort@plt+0x2a4>
   10ecc:	andeq	r4, r1, r4, asr #19
   10ed0:	andeq	r4, r1, ip, lsl fp
   10ed4:	andeq	r4, r1, r4, ror sl
   10ed8:	andeq	r1, r1, ip, lsl #6
   10edc:	ldrdeq	r6, [r2], -r0
   10ee0:	andeq	r4, r1, r4, lsr fp
   10ee4:	andeq	r1, r1, r4, lsr #32
   10ee8:	andeq	r6, r2, r0, lsr #2
   10eec:	andeq	r4, r1, r0, ror sl
   10ef0:	andeq	r4, r1, r8, lsr #18
   10ef4:	andeq	r4, r1, ip, asr fp
   10ef8:	andeq	r4, r1, r8, asr #22
   10efc:	mov	fp, #0
   10f00:	mov	lr, #0
   10f04:	pop	{r1}		; (ldr r1, [sp], #4)
   10f08:	mov	r2, sp
   10f0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f10:	push	{r0}		; (str r0, [sp, #-4]!)
   10f14:	ldr	ip, [pc, #16]	; 10f2c <abort@plt+0x1ac>
   10f18:	push	{ip}		; (str ip, [sp, #-4]!)
   10f1c:	ldr	r0, [pc, #12]	; 10f30 <abort@plt+0x1b0>
   10f20:	ldr	r3, [pc, #12]	; 10f34 <abort@plt+0x1b4>
   10f24:	bl	10c90 <__libc_start_main@plt>
   10f28:	bl	10d80 <abort@plt>
   10f2c:	andeq	r4, r1, r8, asr #17
   10f30:	andeq	r0, r1, ip, lsl #27
   10f34:	andeq	r4, r1, r8, ror #16
   10f38:	ldr	r3, [pc, #20]	; 10f54 <abort@plt+0x1d4>
   10f3c:	ldr	r2, [pc, #20]	; 10f58 <abort@plt+0x1d8>
   10f40:	add	r3, pc, r3
   10f44:	ldr	r2, [r3, r2]
   10f48:	cmp	r2, #0
   10f4c:	bxeq	lr
   10f50:	b	10ca8 <__gmon_start__@plt>
   10f54:	strheq	r5, [r1], -r8
   10f58:	andeq	r0, r0, r4, asr #1
   10f5c:	ldr	r3, [pc, #28]	; 10f80 <abort@plt+0x200>
   10f60:	ldr	r0, [pc, #28]	; 10f84 <abort@plt+0x204>
   10f64:	sub	r3, r3, r0
   10f68:	cmp	r3, #6
   10f6c:	bxls	lr
   10f70:	ldr	r3, [pc, #16]	; 10f88 <abort@plt+0x208>
   10f74:	cmp	r3, #0
   10f78:	bxeq	lr
   10f7c:	bx	r3
   10f80:	andeq	r6, r2, fp, lsl r1
   10f84:	andeq	r6, r2, r8, lsl r1
   10f88:	andeq	r0, r0, r0
   10f8c:	ldr	r1, [pc, #36]	; 10fb8 <abort@plt+0x238>
   10f90:	ldr	r0, [pc, #36]	; 10fbc <abort@plt+0x23c>
   10f94:	sub	r1, r1, r0
   10f98:	asr	r1, r1, #2
   10f9c:	add	r1, r1, r1, lsr #31
   10fa0:	asrs	r1, r1, #1
   10fa4:	bxeq	lr
   10fa8:	ldr	r3, [pc, #16]	; 10fc0 <abort@plt+0x240>
   10fac:	cmp	r3, #0
   10fb0:	bxeq	lr
   10fb4:	bx	r3
   10fb8:	andeq	r6, r2, r8, lsl r1
   10fbc:	andeq	r6, r2, r8, lsl r1
   10fc0:	andeq	r0, r0, r0
   10fc4:	push	{r4, lr}
   10fc8:	ldr	r4, [pc, #24]	; 10fe8 <abort@plt+0x268>
   10fcc:	ldrb	r3, [r4]
   10fd0:	cmp	r3, #0
   10fd4:	popne	{r4, pc}
   10fd8:	bl	10f5c <abort@plt+0x1dc>
   10fdc:	mov	r3, #1
   10fe0:	strb	r3, [r4]
   10fe4:	pop	{r4, pc}
   10fe8:	andeq	r6, r2, r4, lsr r1
   10fec:	ldr	r0, [pc, #40]	; 1101c <abort@plt+0x29c>
   10ff0:	ldr	r3, [r0]
   10ff4:	cmp	r3, #0
   10ff8:	bne	11000 <abort@plt+0x280>
   10ffc:	b	10f8c <abort@plt+0x20c>
   11000:	ldr	r3, [pc, #24]	; 11020 <abort@plt+0x2a0>
   11004:	cmp	r3, #0
   11008:	beq	10ffc <abort@plt+0x27c>
   1100c:	push	{r4, lr}
   11010:	blx	r3
   11014:	pop	{r4, lr}
   11018:	b	10f8c <abort@plt+0x20c>
   1101c:	andeq	r5, r2, r4, lsl pc
   11020:	andeq	r0, r0, r0
   11024:	subs	r6, r0, #0
   11028:	push	{r7, lr}
   1102c:	sub	sp, sp, #56	; 0x38
   11030:	beq	1106c <abort@plt+0x2ec>
   11034:	ldr	r3, [pc, #612]	; 112a0 <abort@plt+0x520>
   11038:	mov	r2, #5
   1103c:	ldr	r1, [pc, #608]	; 112a4 <abort@plt+0x524>
   11040:	mov	r0, #0
   11044:	ldr	r4, [r3]
   11048:	bl	10bf4 <dcgettext@plt>
   1104c:	ldr	r3, [pc, #596]	; 112a8 <abort@plt+0x528>
   11050:	mov	r1, #1
   11054:	ldr	r3, [r3]
   11058:	mov	r2, r0
   1105c:	mov	r0, r4
   11060:	bl	10d20 <__fprintf_chk@plt>
   11064:	mov	r0, r6
   11068:	bl	10ccc <exit@plt>
   1106c:	mov	r2, #5
   11070:	ldr	r1, [pc, #564]	; 112ac <abort@plt+0x52c>
   11074:	bl	10bf4 <dcgettext@plt>
   11078:	ldr	r3, [pc, #552]	; 112a8 <abort@plt+0x528>
   1107c:	ldr	r7, [pc, #556]	; 112b0 <abort@plt+0x530>
   11080:	ldr	r4, [pc, #556]	; 112b4 <abort@plt+0x534>
   11084:	ldr	r2, [r3]
   11088:	mov	r1, r0
   1108c:	mov	r0, #1
   11090:	bl	10d08 <__printf_chk@plt>
   11094:	mov	r2, #5
   11098:	ldr	r1, [pc, #536]	; 112b8 <abort@plt+0x538>
   1109c:	mov	r0, r6
   110a0:	bl	10bf4 <dcgettext@plt>
   110a4:	ldr	r1, [r7]
   110a8:	bl	10b70 <fputs_unlocked@plt>
   110ac:	mov	r2, #5
   110b0:	ldr	r1, [pc, #516]	; 112bc <abort@plt+0x53c>
   110b4:	mov	r0, r6
   110b8:	bl	10bf4 <dcgettext@plt>
   110bc:	ldr	r1, [r7]
   110c0:	bl	10b70 <fputs_unlocked@plt>
   110c4:	mov	r2, #5
   110c8:	ldr	r1, [pc, #496]	; 112c0 <abort@plt+0x540>
   110cc:	mov	r0, r6
   110d0:	bl	10bf4 <dcgettext@plt>
   110d4:	ldr	r1, [r7]
   110d8:	bl	10b70 <fputs_unlocked@plt>
   110dc:	ldm	r4!, {r0, r1, r2, r3}
   110e0:	mov	lr, sp
   110e4:	stmia	lr!, {r0, r1, r2, r3}
   110e8:	ldm	r4!, {r0, r1, r2, r3}
   110ec:	ldr	ip, [sp]
   110f0:	stmia	lr!, {r0, r1, r2, r3}
   110f4:	cmp	ip, #0
   110f8:	ldm	r4!, {r0, r1, r2, r3}
   110fc:	stmia	lr!, {r0, r1, r2, r3}
   11100:	ldm	r4, {r0, r1}
   11104:	moveq	r4, sp
   11108:	stm	lr, {r0, r1}
   1110c:	beq	1113c <abort@plt+0x3bc>
   11110:	ldr	r5, [pc, #428]	; 112c4 <abort@plt+0x544>
   11114:	mov	r4, sp
   11118:	b	11128 <abort@plt+0x3a8>
   1111c:	ldr	ip, [r4, #8]!
   11120:	cmp	ip, #0
   11124:	beq	1113c <abort@plt+0x3bc>
   11128:	mov	r1, ip
   1112c:	mov	r0, r5
   11130:	bl	10b88 <strcmp@plt>
   11134:	cmp	r0, #0
   11138:	bne	1111c <abort@plt+0x39c>
   1113c:	ldr	r4, [r4, #4]
   11140:	mov	r2, #5
   11144:	cmp	r4, #0
   11148:	ldr	r1, [pc, #376]	; 112c8 <abort@plt+0x548>
   1114c:	beq	111f4 <abort@plt+0x474>
   11150:	mov	r0, #0
   11154:	bl	10bf4 <dcgettext@plt>
   11158:	ldr	r3, [pc, #364]	; 112cc <abort@plt+0x54c>
   1115c:	ldr	r2, [pc, #364]	; 112d0 <abort@plt+0x550>
   11160:	mov	r1, r0
   11164:	mov	r0, #1
   11168:	bl	10d08 <__printf_chk@plt>
   1116c:	mov	r1, #0
   11170:	mov	r0, #5
   11174:	bl	10d44 <setlocale@plt>
   11178:	cmp	r0, #0
   1117c:	ldreq	r5, [pc, #320]	; 112c4 <abort@plt+0x544>
   11180:	beq	1119c <abort@plt+0x41c>
   11184:	mov	r2, #3
   11188:	ldr	r1, [pc, #324]	; 112d4 <abort@plt+0x554>
   1118c:	bl	10d74 <strncmp@plt>
   11190:	ldr	r5, [pc, #300]	; 112c4 <abort@plt+0x544>
   11194:	cmp	r0, #0
   11198:	bne	11284 <abort@plt+0x504>
   1119c:	mov	r2, #5
   111a0:	ldr	r1, [pc, #304]	; 112d8 <abort@plt+0x558>
   111a4:	mov	r0, #0
   111a8:	bl	10bf4 <dcgettext@plt>
   111ac:	ldr	r3, [pc, #272]	; 112c4 <abort@plt+0x544>
   111b0:	ldr	r2, [pc, #276]	; 112cc <abort@plt+0x54c>
   111b4:	mov	r1, r0
   111b8:	mov	r0, #1
   111bc:	bl	10d08 <__printf_chk@plt>
   111c0:	mov	r2, #5
   111c4:	ldr	r1, [pc, #272]	; 112dc <abort@plt+0x55c>
   111c8:	mov	r0, #0
   111cc:	bl	10bf4 <dcgettext@plt>
   111d0:	ldr	r2, [pc, #264]	; 112e0 <abort@plt+0x560>
   111d4:	cmp	r4, r5
   111d8:	ldr	r3, [pc, #260]	; 112e4 <abort@plt+0x564>
   111dc:	movne	r3, r2
   111e0:	mov	r1, r0
   111e4:	mov	r2, r4
   111e8:	mov	r0, #1
   111ec:	bl	10d08 <__printf_chk@plt>
   111f0:	b	11064 <abort@plt+0x2e4>
   111f4:	mov	r0, r4
   111f8:	bl	10bf4 <dcgettext@plt>
   111fc:	ldr	r3, [pc, #200]	; 112cc <abort@plt+0x54c>
   11200:	ldr	r2, [pc, #200]	; 112d0 <abort@plt+0x550>
   11204:	mov	r1, r0
   11208:	mov	r0, #1
   1120c:	bl	10d08 <__printf_chk@plt>
   11210:	mov	r1, r4
   11214:	mov	r0, #5
   11218:	bl	10d44 <setlocale@plt>
   1121c:	cmp	r0, #0
   11220:	beq	11238 <abort@plt+0x4b8>
   11224:	mov	r2, #3
   11228:	ldr	r1, [pc, #164]	; 112d4 <abort@plt+0x554>
   1122c:	bl	10d74 <strncmp@plt>
   11230:	cmp	r0, #0
   11234:	bne	1127c <abort@plt+0x4fc>
   11238:	mov	r2, #5
   1123c:	ldr	r1, [pc, #148]	; 112d8 <abort@plt+0x558>
   11240:	mov	r0, #0
   11244:	bl	10bf4 <dcgettext@plt>
   11248:	ldr	r3, [pc, #116]	; 112c4 <abort@plt+0x544>
   1124c:	ldr	r2, [pc, #120]	; 112cc <abort@plt+0x54c>
   11250:	mov	r4, r3
   11254:	mov	r1, r0
   11258:	mov	r0, #1
   1125c:	bl	10d08 <__printf_chk@plt>
   11260:	ldr	r1, [pc, #116]	; 112dc <abort@plt+0x55c>
   11264:	mov	r2, #5
   11268:	mov	r0, #0
   1126c:	bl	10bf4 <dcgettext@plt>
   11270:	ldr	r3, [pc, #108]	; 112e4 <abort@plt+0x564>
   11274:	mov	r1, r0
   11278:	b	111e4 <abort@plt+0x464>
   1127c:	ldr	r5, [pc, #64]	; 112c4 <abort@plt+0x544>
   11280:	mov	r4, r5
   11284:	mov	r2, #5
   11288:	ldr	r1, [pc, #88]	; 112e8 <abort@plt+0x568>
   1128c:	mov	r0, #0
   11290:	bl	10bf4 <dcgettext@plt>
   11294:	ldr	r1, [r7]
   11298:	bl	10b70 <fputs_unlocked@plt>
   1129c:	b	1119c <abort@plt+0x41c>
   112a0:	andeq	r6, r2, r8, lsr #2
   112a4:	andeq	r4, r1, r0, lsr r9
   112a8:	andeq	r6, r2, r0, asr #2
   112ac:	andeq	r4, r1, r8, asr r9
   112b0:	andeq	r6, r2, ip, lsr #2
   112b4:	strdeq	r4, [r1], -r0
   112b8:	andeq	r4, r1, r0, ror r9
   112bc:	andeq	r4, r1, r8, asr #19
   112c0:	strdeq	r4, [r1], -r8
   112c4:	andeq	r4, r1, r8, lsr #18
   112c8:	andeq	r4, r1, r0, lsr sl
   112cc:	andeq	r4, r1, r8, asr #20
   112d0:	andeq	r4, r1, r0, ror sl
   112d4:	andeq	r4, r1, r0, lsl #21
   112d8:	andeq	r4, r1, ip, asr #21
   112dc:	andeq	r4, r1, r8, ror #21
   112e0:	andeq	r4, r1, r4, asr #19
   112e4:	andeq	r4, r1, r8, lsl #23
   112e8:	andeq	r4, r1, r4, lsl #21
   112ec:	ldr	r3, [pc, #4]	; 112f8 <abort@plt+0x578>
   112f0:	str	r0, [r3]
   112f4:	bx	lr
   112f8:	andeq	r6, r2, r8, lsr r1
   112fc:	ldr	r3, [pc, #4]	; 11308 <abort@plt+0x588>
   11300:	strb	r0, [r3, #4]
   11304:	bx	lr
   11308:	andeq	r6, r2, r8, lsr r1
   1130c:	ldr	r3, [pc, #192]	; 113d4 <abort@plt+0x654>
   11310:	push	{r4, r5, r6, lr}
   11314:	sub	sp, sp, #8
   11318:	ldr	r0, [r3]
   1131c:	bl	13fd0 <abort@plt+0x3250>
   11320:	cmp	r0, #0
   11324:	beq	11348 <abort@plt+0x5c8>
   11328:	ldr	r4, [pc, #168]	; 113d8 <abort@plt+0x658>
   1132c:	ldrb	r3, [r4, #4]
   11330:	cmp	r3, #0
   11334:	beq	11364 <abort@plt+0x5e4>
   11338:	bl	10ce4 <__errno_location@plt>
   1133c:	ldr	r3, [r0]
   11340:	cmp	r3, #32
   11344:	bne	11364 <abort@plt+0x5e4>
   11348:	ldr	r3, [pc, #140]	; 113dc <abort@plt+0x65c>
   1134c:	ldr	r0, [r3]
   11350:	bl	13fd0 <abort@plt+0x3250>
   11354:	cmp	r0, #0
   11358:	bne	113ac <abort@plt+0x62c>
   1135c:	add	sp, sp, #8
   11360:	pop	{r4, r5, r6, pc}
   11364:	mov	r2, #5
   11368:	ldr	r1, [pc, #112]	; 113e0 <abort@plt+0x660>
   1136c:	mov	r0, #0
   11370:	bl	10bf4 <dcgettext@plt>
   11374:	ldr	r4, [r4]
   11378:	cmp	r4, #0
   1137c:	mov	r5, r0
   11380:	beq	113b8 <abort@plt+0x638>
   11384:	bl	10ce4 <__errno_location@plt>
   11388:	ldr	r6, [r0]
   1138c:	mov	r0, r4
   11390:	bl	132a8 <abort@plt+0x2528>
   11394:	mov	r1, r6
   11398:	str	r5, [sp]
   1139c:	ldr	r2, [pc, #64]	; 113e4 <abort@plt+0x664>
   113a0:	mov	r3, r0
   113a4:	mov	r0, #0
   113a8:	bl	10c6c <error@plt>
   113ac:	ldr	r3, [pc, #52]	; 113e8 <abort@plt+0x668>
   113b0:	ldr	r0, [r3]
   113b4:	bl	10bb8 <_exit@plt>
   113b8:	bl	10ce4 <__errno_location@plt>
   113bc:	mov	r3, r5
   113c0:	ldr	r2, [pc, #36]	; 113ec <abort@plt+0x66c>
   113c4:	ldr	r1, [r0]
   113c8:	mov	r0, r4
   113cc:	bl	10c6c <error@plt>
   113d0:	b	113ac <abort@plt+0x62c>
   113d4:	andeq	r6, r2, ip, lsr #2
   113d8:	andeq	r6, r2, r8, lsr r1
   113dc:	andeq	r6, r2, r8, lsr #2
   113e0:	strdeq	r4, [r1], -ip
   113e4:	andeq	r4, r1, r8, lsl #24
   113e8:	ldrdeq	r6, [r2], -r4
   113ec:	andeq	r4, r1, ip, lsl #24
   113f0:	push	{r4, r5, r6, r7, r8, lr}
   113f4:	cmp	r0, #2
   113f8:	ldr	r4, [pc, #148]	; 11494 <abort@plt+0x714>
   113fc:	mov	r5, #0
   11400:	sub	sp, sp, #16
   11404:	ldr	r6, [r4]
   11408:	str	r5, [r4]
   1140c:	beq	11428 <abort@plt+0x6a8>
   11410:	ldr	r3, [pc, #128]	; 11498 <abort@plt+0x718>
   11414:	mov	r2, #0
   11418:	str	r6, [r4]
   1141c:	str	r2, [r3]
   11420:	add	sp, sp, #16
   11424:	pop	{r4, r5, r6, r7, r8, pc}
   11428:	mov	r8, r3
   1142c:	mov	r7, r2
   11430:	str	r5, [sp]
   11434:	ldr	r3, [pc, #96]	; 1149c <abort@plt+0x71c>
   11438:	ldr	r2, [pc, #96]	; 114a0 <abort@plt+0x720>
   1143c:	bl	10cb4 <getopt_long@plt>
   11440:	cmn	r0, #1
   11444:	beq	11410 <abort@plt+0x690>
   11448:	cmp	r0, #104	; 0x68
   1144c:	beq	11484 <abort@plt+0x704>
   11450:	cmp	r0, #118	; 0x76
   11454:	bne	11410 <abort@plt+0x690>
   11458:	ldr	r3, [pc, #68]	; 114a4 <abort@plt+0x724>
   1145c:	add	ip, sp, #48	; 0x30
   11460:	mov	r2, r8
   11464:	ldr	r0, [r3]
   11468:	mov	r1, r7
   1146c:	str	ip, [sp]
   11470:	ldr	r3, [sp, #40]	; 0x28
   11474:	str	ip, [sp, #12]
   11478:	bl	13830 <abort@plt+0x2ab0>
   1147c:	mov	r0, r5
   11480:	bl	10ccc <exit@plt>
   11484:	mov	r0, r5
   11488:	ldr	r3, [sp, #44]	; 0x2c
   1148c:	blx	r3
   11490:	b	11410 <abort@plt+0x690>
   11494:	andeq	r6, r2, r0, lsr r1
   11498:	andeq	r6, r2, r0, lsr #2
   1149c:	andeq	r4, r1, r0, lsl ip
   114a0:	andeq	r4, r1, r0, asr #24
   114a4:	andeq	r6, r2, ip, lsr #2
   114a8:	push	{r4, r5, r6, r7, r8, lr}
   114ac:	sub	sp, sp, #16
   114b0:	ldr	r5, [pc, #176]	; 11568 <abort@plt+0x7e8>
   114b4:	ldrb	r8, [sp, #44]	; 0x2c
   114b8:	ldr	r4, [pc, #172]	; 1156c <abort@plt+0x7ec>
   114bc:	ldr	lr, [pc, #172]	; 11570 <abort@plt+0x7f0>
   114c0:	cmp	r8, #0
   114c4:	mov	r6, r2
   114c8:	movne	r2, r5
   114cc:	mov	r5, #0
   114d0:	mov	ip, #1
   114d4:	moveq	r2, lr
   114d8:	mov	r7, r3
   114dc:	str	r5, [sp]
   114e0:	ldr	r3, [pc, #140]	; 11574 <abort@plt+0x7f4>
   114e4:	ldr	r8, [r4]
   114e8:	str	ip, [r4]
   114ec:	bl	10cb4 <getopt_long@plt>
   114f0:	cmn	r0, #1
   114f4:	beq	11544 <abort@plt+0x7c4>
   114f8:	cmp	r0, #104	; 0x68
   114fc:	beq	11550 <abort@plt+0x7d0>
   11500:	cmp	r0, #118	; 0x76
   11504:	bne	11534 <abort@plt+0x7b4>
   11508:	ldr	r3, [pc, #104]	; 11578 <abort@plt+0x7f8>
   1150c:	add	ip, sp, #52	; 0x34
   11510:	mov	r2, r7
   11514:	ldr	r0, [r3]
   11518:	mov	r1, r6
   1151c:	str	ip, [sp]
   11520:	ldr	r3, [sp, #40]	; 0x28
   11524:	str	ip, [sp, #12]
   11528:	bl	13830 <abort@plt+0x2ab0>
   1152c:	mov	r0, r5
   11530:	bl	10ccc <exit@plt>
   11534:	ldr	r3, [pc, #64]	; 1157c <abort@plt+0x7fc>
   11538:	ldr	r0, [r3]
   1153c:	ldr	r3, [sp, #48]	; 0x30
   11540:	blx	r3
   11544:	str	r8, [r4]
   11548:	add	sp, sp, #16
   1154c:	pop	{r4, r5, r6, r7, r8, pc}
   11550:	mov	r0, r5
   11554:	ldr	r3, [sp, #48]	; 0x30
   11558:	blx	r3
   1155c:	str	r8, [r4]
   11560:	add	sp, sp, #16
   11564:	pop	{r4, r5, r6, r7, r8, pc}
   11568:	andeq	r4, r1, r4, asr #19
   1156c:	andeq	r6, r2, r0, lsr r1
   11570:	andeq	r4, r1, r0, asr #24
   11574:	andeq	r4, r1, r0, lsl ip
   11578:	andeq	r6, r2, ip, lsr #2
   1157c:	ldrdeq	r6, [r2], -r4
   11580:	push	{r4, r5, r6, lr}
   11584:	subs	r4, r0, #0
   11588:	beq	115fc <abort@plt+0x87c>
   1158c:	mov	r1, #47	; 0x2f
   11590:	bl	10d50 <strrchr@plt>
   11594:	subs	r5, r0, #0
   11598:	beq	115e8 <abort@plt+0x868>
   1159c:	add	r6, r5, #1
   115a0:	sub	r3, r6, r4
   115a4:	cmp	r3, #6
   115a8:	ble	115e8 <abort@plt+0x868>
   115ac:	mov	r2, #7
   115b0:	ldr	r1, [pc, #96]	; 11618 <abort@plt+0x898>
   115b4:	sub	r0, r5, #6
   115b8:	bl	10d74 <strncmp@plt>
   115bc:	cmp	r0, #0
   115c0:	bne	115e8 <abort@plt+0x868>
   115c4:	mov	r2, #3
   115c8:	ldr	r1, [pc, #76]	; 1161c <abort@plt+0x89c>
   115cc:	mov	r0, r6
   115d0:	bl	10d74 <strncmp@plt>
   115d4:	cmp	r0, #0
   115d8:	movne	r4, r6
   115dc:	ldreq	r3, [pc, #60]	; 11620 <abort@plt+0x8a0>
   115e0:	addeq	r4, r5, #4
   115e4:	streq	r4, [r3]
   115e8:	ldr	r2, [pc, #52]	; 11624 <abort@plt+0x8a4>
   115ec:	ldr	r3, [pc, #52]	; 11628 <abort@plt+0x8a8>
   115f0:	str	r4, [r2]
   115f4:	str	r4, [r3]
   115f8:	pop	{r4, r5, r6, pc}
   115fc:	ldr	r3, [pc, #40]	; 1162c <abort@plt+0x8ac>
   11600:	mov	r2, #55	; 0x37
   11604:	mov	r1, #1
   11608:	ldr	r3, [r3]
   1160c:	ldr	r0, [pc, #28]	; 11630 <abort@plt+0x8b0>
   11610:	bl	10c30 <fwrite@plt>
   11614:	bl	10d80 <abort@plt>
   11618:	andeq	r4, r1, ip, lsl #25
   1161c:	muleq	r1, r4, ip
   11620:	andeq	r6, r2, r8, lsl r1
   11624:	andeq	r6, r2, r0, asr #2
   11628:	andeq	r6, r2, ip, lsl r1
   1162c:	andeq	r6, r2, r8, lsr #2
   11630:	andeq	r4, r1, r4, asr ip
   11634:	push	{r4, r5, r6, lr}
   11638:	mov	r2, #48	; 0x30
   1163c:	mov	r4, r1
   11640:	mov	r1, #0
   11644:	mov	r5, r0
   11648:	bl	10cfc <memset@plt>
   1164c:	cmp	r4, #10
   11650:	beq	11660 <abort@plt+0x8e0>
   11654:	str	r4, [r5]
   11658:	mov	r0, r5
   1165c:	pop	{r4, r5, r6, pc}
   11660:	bl	10d80 <abort@plt>
   11664:	push	{r4, r5, r6, lr}
   11668:	mov	r4, r0
   1166c:	mov	r5, r1
   11670:	bl	14244 <abort@plt+0x34c4>
   11674:	ldrb	r3, [r0]
   11678:	bic	r3, r3, #32
   1167c:	cmp	r3, #85	; 0x55
   11680:	bne	116e0 <abort@plt+0x960>
   11684:	ldrb	r3, [r0, #1]
   11688:	bic	r3, r3, #32
   1168c:	cmp	r3, #84	; 0x54
   11690:	bne	1171c <abort@plt+0x99c>
   11694:	ldrb	r3, [r0, #2]
   11698:	bic	r3, r3, #32
   1169c:	cmp	r3, #70	; 0x46
   116a0:	bne	1171c <abort@plt+0x99c>
   116a4:	ldrb	r3, [r0, #3]
   116a8:	cmp	r3, #45	; 0x2d
   116ac:	bne	1171c <abort@plt+0x99c>
   116b0:	ldrb	r3, [r0, #4]
   116b4:	cmp	r3, #56	; 0x38
   116b8:	bne	1171c <abort@plt+0x99c>
   116bc:	ldrb	r3, [r0, #5]
   116c0:	cmp	r3, #0
   116c4:	bne	1171c <abort@plt+0x99c>
   116c8:	ldrb	r2, [r4]
   116cc:	ldr	r3, [pc, #152]	; 1176c <abort@plt+0x9ec>
   116d0:	ldr	r0, [pc, #152]	; 11770 <abort@plt+0x9f0>
   116d4:	cmp	r2, #96	; 0x60
   116d8:	movne	r0, r3
   116dc:	pop	{r4, r5, r6, pc}
   116e0:	cmp	r3, #71	; 0x47
   116e4:	bne	1171c <abort@plt+0x99c>
   116e8:	ldrb	r3, [r0, #1]
   116ec:	bic	r3, r3, #32
   116f0:	cmp	r3, #66	; 0x42
   116f4:	bne	1171c <abort@plt+0x99c>
   116f8:	ldrb	r3, [r0, #2]
   116fc:	cmp	r3, #49	; 0x31
   11700:	bne	1171c <abort@plt+0x99c>
   11704:	ldrb	r3, [r0, #3]
   11708:	cmp	r3, #56	; 0x38
   1170c:	bne	1171c <abort@plt+0x99c>
   11710:	ldrb	r3, [r0, #4]
   11714:	cmp	r3, #48	; 0x30
   11718:	beq	11730 <abort@plt+0x9b0>
   1171c:	ldr	r3, [pc, #80]	; 11774 <abort@plt+0x9f4>
   11720:	cmp	r5, #9
   11724:	ldr	r0, [pc, #76]	; 11778 <abort@plt+0x9f8>
   11728:	movne	r0, r3
   1172c:	pop	{r4, r5, r6, pc}
   11730:	ldrb	r3, [r0, #5]
   11734:	cmp	r3, #51	; 0x33
   11738:	bne	1171c <abort@plt+0x99c>
   1173c:	ldrb	r3, [r0, #6]
   11740:	cmp	r3, #48	; 0x30
   11744:	bne	1171c <abort@plt+0x99c>
   11748:	ldrb	r3, [r0, #7]
   1174c:	cmp	r3, #0
   11750:	bne	1171c <abort@plt+0x99c>
   11754:	ldrb	r2, [r4]
   11758:	ldr	r3, [pc, #28]	; 1177c <abort@plt+0x9fc>
   1175c:	ldr	r0, [pc, #28]	; 11780 <abort@plt+0xa00>
   11760:	cmp	r2, #96	; 0x60
   11764:	movne	r0, r3
   11768:	pop	{r4, r5, r6, pc}
   1176c:	strdeq	r4, [r1], -r0
   11770:	andeq	r4, r1, ip, ror #25
   11774:	andeq	r4, r1, r0, lsl #26
   11778:	strdeq	r4, [r1], -ip
   1177c:	strdeq	r4, [r1], -r8
   11780:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11788:	sub	sp, sp, #116	; 0x74
   1178c:	mov	sl, r0
   11790:	str	r3, [sp, #24]
   11794:	mov	r3, #1
   11798:	mov	r8, r1
   1179c:	str	r2, [sp, #56]	; 0x38
   117a0:	str	r3, [sp, #36]	; 0x24
   117a4:	bl	10c48 <__ctype_get_mb_cur_max@plt>
   117a8:	ldr	r3, [sp, #156]	; 0x9c
   117ac:	mov	fp, r8
   117b0:	mov	r2, #0
   117b4:	lsr	r3, r3, #1
   117b8:	and	r3, r3, #1
   117bc:	str	r2, [sp, #68]	; 0x44
   117c0:	str	r3, [sp, #28]
   117c4:	str	r2, [sp, #40]	; 0x28
   117c8:	str	r2, [sp, #44]	; 0x2c
   117cc:	str	r2, [sp, #52]	; 0x34
   117d0:	str	r2, [sp, #64]	; 0x40
   117d4:	str	r2, [sp, #72]	; 0x48
   117d8:	str	sl, [sp, #32]
   117dc:	str	r0, [sp, #76]	; 0x4c
   117e0:	ldr	r3, [sp, #152]	; 0x98
   117e4:	cmp	r3, #10
   117e8:	ldrls	pc, [pc, r3, lsl #2]
   117ec:	b	129ac <abort@plt+0x1c2c>
   117f0:	andeq	r1, r1, ip, lsl r8
   117f4:	andeq	r1, r1, r4, lsl #22
   117f8:	andeq	r1, r1, r8, lsr #22
   117fc:	andeq	r1, r1, ip, asr #22
   11800:	andeq	r1, r1, r8, ror ip
   11804:	andeq	r1, r1, ip, asr #24
   11808:	andeq	r1, r1, r4, lsr #24
   1180c:	andeq	r1, r1, r0, ror #22
   11810:	andeq	r1, r1, r8, ror fp
   11814:	andeq	r1, r1, r8, ror fp
   11818:	andeq	r1, r1, r8, ror fp
   1181c:	mov	r3, #0
   11820:	mov	r7, r3
   11824:	str	r3, [sp, #28]
   11828:	ldr	r3, [sp, #44]	; 0x2c
   1182c:	mov	sl, #0
   11830:	eor	r3, r3, #1
   11834:	str	r3, [sp, #60]	; 0x3c
   11838:	ldr	r3, [sp, #24]
   1183c:	cmn	r3, #1
   11840:	beq	11da4 <abort@plt+0x1024>
   11844:	ldr	r3, [sp, #24]
   11848:	subs	r5, r3, sl
   1184c:	movne	r5, #1
   11850:	cmp	r5, #0
   11854:	beq	11dbc <abort@plt+0x103c>
   11858:	ldr	r3, [sp, #152]	; 0x98
   1185c:	ldr	r8, [sp, #44]	; 0x2c
   11860:	cmp	r3, #2
   11864:	moveq	r8, #0
   11868:	andne	r8, r8, #1
   1186c:	ldr	r3, [sp, #52]	; 0x34
   11870:	adds	r9, r3, #0
   11874:	movne	r9, #1
   11878:	ands	r6, r9, r8
   1187c:	beq	12224 <abort@plt+0x14a4>
   11880:	ldr	r2, [sp, #52]	; 0x34
   11884:	ldr	r1, [sp, #24]
   11888:	cmp	r2, #1
   1188c:	mov	r3, r2
   11890:	movls	r3, #0
   11894:	movhi	r3, #1
   11898:	cmn	r1, #1
   1189c:	movne	r3, #0
   118a0:	cmp	r3, #0
   118a4:	add	r4, sl, r2
   118a8:	beq	118b8 <abort@plt+0xb38>
   118ac:	ldr	r0, [sp, #56]	; 0x38
   118b0:	bl	10cd8 <strlen@plt>
   118b4:	str	r0, [sp, #24]
   118b8:	ldr	r3, [sp, #24]
   118bc:	cmp	r3, r4
   118c0:	ldr	r3, [sp, #56]	; 0x38
   118c4:	add	r3, r3, sl
   118c8:	str	r3, [sp, #48]	; 0x30
   118cc:	bcc	12230 <abort@plt+0x14b0>
   118d0:	mov	r0, r3
   118d4:	ldr	r2, [sp, #52]	; 0x34
   118d8:	ldr	r1, [sp, #64]	; 0x40
   118dc:	bl	10bdc <memcmp@plt>
   118e0:	cmp	r0, #0
   118e4:	bne	12230 <abort@plt+0x14b0>
   118e8:	ldr	r3, [sp, #28]
   118ec:	cmp	r3, #0
   118f0:	bne	12aac <abort@plt+0x1d2c>
   118f4:	ldr	r3, [sp, #48]	; 0x30
   118f8:	ldrb	r4, [r3]
   118fc:	cmp	r4, #126	; 0x7e
   11900:	ldrls	pc, [pc, r4, lsl #2]
   11904:	b	121c4 <abort@plt+0x1444>
   11908:	andeq	r1, r1, r8, ror #31
   1190c:	andeq	r2, r1, r4, asr #3
   11910:	andeq	r2, r1, r4, asr #3
   11914:	andeq	r2, r1, r4, asr #3
   11918:	andeq	r2, r1, r4, asr #3
   1191c:	andeq	r2, r1, r4, asr #3
   11920:	andeq	r2, r1, r4, asr #3
   11924:	andeq	r1, r1, ip, asr #31
   11928:			; <UNDEFINED> instruction: 0x00011fb0
   1192c:	andeq	r2, r1, ip, lsr #3
   11930:	andeq	r1, r1, r0, lsl pc
   11934:	strdeq	r1, [r1], -r4
   11938:	andeq	r2, r1, r8, lsl #3
   1193c:	andeq	r2, r1, r4, ror #2
   11940:	andeq	r2, r1, r4, asr #3
   11944:	andeq	r2, r1, r4, asr #3
   11948:	andeq	r2, r1, r4, asr #3
   1194c:	andeq	r2, r1, r4, asr #3
   11950:	andeq	r2, r1, r4, asr #3
   11954:	andeq	r2, r1, r4, asr #3
   11958:	andeq	r2, r1, r4, asr #3
   1195c:	andeq	r2, r1, r4, asr #3
   11960:	andeq	r2, r1, r4, asr #3
   11964:	andeq	r2, r1, r4, asr #3
   11968:	andeq	r2, r1, r4, asr #3
   1196c:	andeq	r2, r1, r4, asr #3
   11970:	andeq	r2, r1, r4, asr #3
   11974:	andeq	r2, r1, r4, asr #3
   11978:	andeq	r2, r1, r4, asr #3
   1197c:	andeq	r2, r1, r4, asr #3
   11980:	andeq	r2, r1, r4, asr #3
   11984:	andeq	r2, r1, r4, asr #3
   11988:	andeq	r2, r1, r4, lsr #3
   1198c:	ldrdeq	r2, [r1], -r8
   11990:	ldrdeq	r2, [r1], -r8
   11994:	andeq	r1, r1, r8, ror #25
   11998:	ldrdeq	r2, [r1], -r8
   1199c:	andeq	r2, r1, r0, ror r1
   119a0:	ldrdeq	r2, [r1], -r8
   119a4:	andeq	r2, r1, r4, asr #2
   119a8:	ldrdeq	r2, [r1], -r8
   119ac:	ldrdeq	r2, [r1], -r8
   119b0:	ldrdeq	r2, [r1], -r8
   119b4:	andeq	r2, r1, r0, ror r1
   119b8:	andeq	r2, r1, r0, ror r1
   119bc:	andeq	r2, r1, r0, ror r1
   119c0:	andeq	r2, r1, r0, ror r1
   119c4:	andeq	r2, r1, r0, ror r1
   119c8:	andeq	r2, r1, r0, ror r1
   119cc:	andeq	r2, r1, r0, ror r1
   119d0:	andeq	r2, r1, r0, ror r1
   119d4:	andeq	r2, r1, r0, ror r1
   119d8:	andeq	r2, r1, r0, ror r1
   119dc:	andeq	r2, r1, r0, ror r1
   119e0:	andeq	r2, r1, r0, ror r1
   119e4:	andeq	r2, r1, r0, ror r1
   119e8:	andeq	r2, r1, r0, ror r1
   119ec:	andeq	r2, r1, r0, ror r1
   119f0:	andeq	r2, r1, r0, ror r1
   119f4:	ldrdeq	r2, [r1], -r8
   119f8:	ldrdeq	r2, [r1], -r8
   119fc:	ldrdeq	r2, [r1], -r8
   11a00:	ldrdeq	r2, [r1], -r8
   11a04:	andeq	r2, r1, r4, lsl r1
   11a08:	andeq	r2, r1, r4, asr #3
   11a0c:	andeq	r2, r1, r0, ror r1
   11a10:	andeq	r2, r1, r0, ror r1
   11a14:	andeq	r2, r1, r0, ror r1
   11a18:	andeq	r2, r1, r0, ror r1
   11a1c:	andeq	r2, r1, r0, ror r1
   11a20:	andeq	r2, r1, r0, ror r1
   11a24:	andeq	r2, r1, r0, ror r1
   11a28:	andeq	r2, r1, r0, ror r1
   11a2c:	andeq	r2, r1, r0, ror r1
   11a30:	andeq	r2, r1, r0, ror r1
   11a34:	andeq	r2, r1, r0, ror r1
   11a38:	andeq	r2, r1, r0, ror r1
   11a3c:	andeq	r2, r1, r0, ror r1
   11a40:	andeq	r2, r1, r0, ror r1
   11a44:	andeq	r2, r1, r0, ror r1
   11a48:	andeq	r2, r1, r0, ror r1
   11a4c:	andeq	r2, r1, r0, ror r1
   11a50:	andeq	r2, r1, r0, ror r1
   11a54:	andeq	r2, r1, r0, ror r1
   11a58:	andeq	r2, r1, r0, ror r1
   11a5c:	andeq	r2, r1, r0, ror r1
   11a60:	andeq	r2, r1, r0, ror r1
   11a64:	andeq	r2, r1, r0, ror r1
   11a68:	andeq	r2, r1, r0, ror r1
   11a6c:	andeq	r2, r1, r0, ror r1
   11a70:	andeq	r2, r1, r0, ror r1
   11a74:	ldrdeq	r2, [r1], -r8
   11a78:	andeq	r1, r1, r4, lsr lr
   11a7c:	andeq	r2, r1, r0, ror r1
   11a80:	ldrdeq	r2, [r1], -r8
   11a84:	andeq	r2, r1, r0, ror r1
   11a88:	ldrdeq	r2, [r1], -r8
   11a8c:	andeq	r2, r1, r0, ror r1
   11a90:	andeq	r2, r1, r0, ror r1
   11a94:	andeq	r2, r1, r0, ror r1
   11a98:	andeq	r2, r1, r0, ror r1
   11a9c:	andeq	r2, r1, r0, ror r1
   11aa0:	andeq	r2, r1, r0, ror r1
   11aa4:	andeq	r2, r1, r0, ror r1
   11aa8:	andeq	r2, r1, r0, ror r1
   11aac:	andeq	r2, r1, r0, ror r1
   11ab0:	andeq	r2, r1, r0, ror r1
   11ab4:	andeq	r2, r1, r0, ror r1
   11ab8:	andeq	r2, r1, r0, ror r1
   11abc:	andeq	r2, r1, r0, ror r1
   11ac0:	andeq	r2, r1, r0, ror r1
   11ac4:	andeq	r2, r1, r0, ror r1
   11ac8:	andeq	r2, r1, r0, ror r1
   11acc:	andeq	r2, r1, r0, ror r1
   11ad0:	andeq	r2, r1, r0, ror r1
   11ad4:	andeq	r2, r1, r0, ror r1
   11ad8:	andeq	r2, r1, r0, ror r1
   11adc:	andeq	r2, r1, r0, ror r1
   11ae0:	andeq	r2, r1, r0, ror r1
   11ae4:	andeq	r2, r1, r0, ror r1
   11ae8:	andeq	r2, r1, r0, ror r1
   11aec:	andeq	r2, r1, r0, ror r1
   11af0:	andeq	r2, r1, r0, ror r1
   11af4:	andeq	r1, r1, r8, asr #25
   11af8:	ldrdeq	r2, [r1], -r8
   11afc:	andeq	r1, r1, r8, asr #25
   11b00:	andeq	r1, r1, r8, ror #25
   11b04:	mov	r3, #1
   11b08:	str	r3, [sp, #28]
   11b0c:	str	r3, [sp, #52]	; 0x34
   11b10:	ldr	r3, [pc, #4000]	; 12ab8 <abort@plt+0x1d38>
   11b14:	mov	r7, #0
   11b18:	str	r3, [sp, #64]	; 0x40
   11b1c:	mov	r3, #2
   11b20:	str	r3, [sp, #152]	; 0x98
   11b24:	b	11828 <abort@plt+0xaa8>
   11b28:	ldr	r3, [sp, #28]
   11b2c:	cmp	r3, #0
   11b30:	beq	11c8c <abort@plt+0xf0c>
   11b34:	mov	r3, #1
   11b38:	str	r3, [sp, #52]	; 0x34
   11b3c:	ldr	r3, [pc, #3956]	; 12ab8 <abort@plt+0x1d38>
   11b40:	mov	r7, #0
   11b44:	str	r3, [sp, #64]	; 0x40
   11b48:	b	11828 <abort@plt+0xaa8>
   11b4c:	mov	r3, #1
   11b50:	str	r3, [sp, #44]	; 0x2c
   11b54:	str	r3, [sp, #52]	; 0x34
   11b58:	str	r3, [sp, #28]
   11b5c:	b	11b10 <abort@plt+0xd90>
   11b60:	mov	r3, #0
   11b64:	str	r3, [sp, #28]
   11b68:	mov	r3, #1
   11b6c:	str	r3, [sp, #44]	; 0x2c
   11b70:	mov	r7, #0
   11b74:	b	11828 <abort@plt+0xaa8>
   11b78:	ldr	r3, [sp, #152]	; 0x98
   11b7c:	cmp	r3, #10
   11b80:	beq	11bc4 <abort@plt+0xe44>
   11b84:	mov	r2, #5
   11b88:	ldr	r1, [pc, #3884]	; 12abc <abort@plt+0x1d3c>
   11b8c:	mov	r0, #0
   11b90:	bl	10bf4 <dcgettext@plt>
   11b94:	ldr	r2, [pc, #3872]	; 12abc <abort@plt+0x1d3c>
   11b98:	cmp	r0, r2
   11b9c:	str	r0, [sp, #164]	; 0xa4
   11ba0:	beq	12ba8 <abort@plt+0x1e28>
   11ba4:	mov	r2, #5
   11ba8:	ldr	r1, [pc, #3848]	; 12ab8 <abort@plt+0x1d38>
   11bac:	mov	r0, #0
   11bb0:	bl	10bf4 <dcgettext@plt>
   11bb4:	ldr	r2, [pc, #3836]	; 12ab8 <abort@plt+0x1d38>
   11bb8:	cmp	r0, r2
   11bbc:	str	r0, [sp, #168]	; 0xa8
   11bc0:	beq	12b98 <abort@plt+0x1e18>
   11bc4:	ldr	r7, [sp, #28]
   11bc8:	cmp	r7, #0
   11bcc:	movne	r7, #0
   11bd0:	bne	11c04 <abort@plt+0xe84>
   11bd4:	ldr	r3, [sp, #164]	; 0xa4
   11bd8:	ldrb	r3, [r3]
   11bdc:	cmp	r3, #0
   11be0:	beq	12bb8 <abort@plt+0x1e38>
   11be4:	ldr	r2, [sp, #164]	; 0xa4
   11be8:	ldr	r1, [sp, #32]
   11bec:	cmp	fp, r7
   11bf0:	strbhi	r3, [r1, r7]
   11bf4:	ldrb	r3, [r2, #1]!
   11bf8:	add	r7, r7, #1
   11bfc:	cmp	r3, #0
   11c00:	bne	11bec <abort@plt+0xe6c>
   11c04:	ldr	r0, [sp, #168]	; 0xa8
   11c08:	bl	10cd8 <strlen@plt>
   11c0c:	ldr	r3, [sp, #168]	; 0xa8
   11c10:	str	r3, [sp, #64]	; 0x40
   11c14:	mov	r3, #1
   11c18:	str	r3, [sp, #44]	; 0x2c
   11c1c:	str	r0, [sp, #52]	; 0x34
   11c20:	b	11828 <abort@plt+0xaa8>
   11c24:	mov	r3, #1
   11c28:	str	r3, [sp, #44]	; 0x2c
   11c2c:	str	r3, [sp, #52]	; 0x34
   11c30:	str	r3, [sp, #28]
   11c34:	ldr	r3, [pc, #3716]	; 12ac0 <abort@plt+0x1d40>
   11c38:	mov	r7, #0
   11c3c:	str	r3, [sp, #64]	; 0x40
   11c40:	mov	r3, #5
   11c44:	str	r3, [sp, #152]	; 0x98
   11c48:	b	11828 <abort@plt+0xaa8>
   11c4c:	ldr	r3, [sp, #28]
   11c50:	cmp	r3, #0
   11c54:	beq	12954 <abort@plt+0x1bd4>
   11c58:	ldr	r3, [sp, #28]
   11c5c:	mov	r7, #0
   11c60:	str	r3, [sp, #44]	; 0x2c
   11c64:	mov	r3, #1
   11c68:	str	r3, [sp, #52]	; 0x34
   11c6c:	ldr	r3, [pc, #3660]	; 12ac0 <abort@plt+0x1d40>
   11c70:	str	r3, [sp, #64]	; 0x40
   11c74:	b	11828 <abort@plt+0xaa8>
   11c78:	ldr	r3, [sp, #28]
   11c7c:	cmp	r3, #0
   11c80:	mov	r3, #1
   11c84:	streq	r3, [sp, #44]	; 0x2c
   11c88:	bne	11b0c <abort@plt+0xd8c>
   11c8c:	cmp	fp, #0
   11c90:	beq	12984 <abort@plt+0x1c04>
   11c94:	ldr	r3, [sp, #32]
   11c98:	mov	r2, #39	; 0x27
   11c9c:	mov	r7, #1
   11ca0:	strb	r2, [r3]
   11ca4:	mov	r3, #0
   11ca8:	str	r3, [sp, #28]
   11cac:	mov	r3, #1
   11cb0:	str	r3, [sp, #52]	; 0x34
   11cb4:	ldr	r3, [pc, #3580]	; 12ab8 <abort@plt+0x1d38>
   11cb8:	str	r3, [sp, #64]	; 0x40
   11cbc:	mov	r3, #2
   11cc0:	str	r3, [sp, #152]	; 0x98
   11cc4:	b	11828 <abort@plt+0xaa8>
   11cc8:	ldr	r3, [sp, #24]
   11ccc:	cmn	r3, #1
   11cd0:	beq	128e8 <abort@plt+0x1b68>
   11cd4:	ldr	r3, [sp, #24]
   11cd8:	subs	r3, r3, #1
   11cdc:	movne	r3, #1
   11ce0:	cmp	r3, #0
   11ce4:	bne	11cf0 <abort@plt+0xf70>
   11ce8:	cmp	sl, #0
   11cec:	beq	120dc <abort@plt+0x135c>
   11cf0:	ldr	r3, [sp, #152]	; 0x98
   11cf4:	mov	r5, #0
   11cf8:	sub	r2, r3, #2
   11cfc:	mov	r8, r5
   11d00:	clz	r2, r2
   11d04:	lsr	r2, r2, #5
   11d08:	ldr	r3, [sp, #60]	; 0x3c
   11d0c:	ldr	r1, [sp, #28]
   11d10:	orr	r3, r2, r3
   11d14:	eor	r3, r3, #1
   11d18:	orr	r3, r1, r3
   11d1c:	tst	r3, #255	; 0xff
   11d20:	bne	1244c <abort@plt+0x16cc>
   11d24:	cmp	r6, #0
   11d28:	bne	11e78 <abort@plt+0x10f8>
   11d2c:	ldr	r3, [sp, #40]	; 0x28
   11d30:	eor	r8, r8, #1
   11d34:	and	r8, r8, r3
   11d38:	add	sl, sl, #1
   11d3c:	uxtb	r6, r8
   11d40:	cmp	r6, #0
   11d44:	beq	11d78 <abort@plt+0xff8>
   11d48:	cmp	fp, r7
   11d4c:	movhi	r2, #39	; 0x27
   11d50:	ldrhi	r3, [sp, #32]
   11d54:	strbhi	r2, [r3, r7]
   11d58:	add	r3, r7, #1
   11d5c:	cmp	fp, r3
   11d60:	movhi	r1, #39	; 0x27
   11d64:	ldrhi	r2, [sp, #32]
   11d68:	add	r7, r7, #2
   11d6c:	strbhi	r1, [r2, r3]
   11d70:	mov	r3, #0
   11d74:	str	r3, [sp, #40]	; 0x28
   11d78:	cmp	r7, fp
   11d7c:	ldrcc	r3, [sp, #32]
   11d80:	strbcc	r4, [r3, r7]
   11d84:	ldr	r3, [sp, #36]	; 0x24
   11d88:	cmp	r5, #0
   11d8c:	moveq	r3, #0
   11d90:	str	r3, [sp, #36]	; 0x24
   11d94:	ldr	r3, [sp, #24]
   11d98:	add	r7, r7, #1
   11d9c:	cmn	r3, #1
   11da0:	bne	11844 <abort@plt+0xac4>
   11da4:	ldr	r3, [sp, #56]	; 0x38
   11da8:	ldrb	r5, [r3, sl]
   11dac:	adds	r5, r5, #0
   11db0:	movne	r5, #1
   11db4:	cmp	r5, #0
   11db8:	bne	11858 <abort@plt+0xad8>
   11dbc:	ldr	r3, [sp, #152]	; 0x98
   11dc0:	ldr	r1, [sp, #28]
   11dc4:	sub	r3, r3, #2
   11dc8:	clz	r3, r3
   11dcc:	lsr	r3, r3, #5
   11dd0:	and	r9, r1, r3
   11dd4:	cmp	r7, #0
   11dd8:	movne	r2, #0
   11ddc:	andeq	r2, r9, #1
   11de0:	cmp	r2, #0
   11de4:	bne	127c0 <abort@plt+0x1a40>
   11de8:	eor	r2, r1, #1
   11dec:	ands	r3, r3, r2
   11df0:	beq	12c7c <abort@plt+0x1efc>
   11df4:	ldr	r2, [sp, #68]	; 0x44
   11df8:	cmp	r2, #0
   11dfc:	beq	12c68 <abort@plt+0x1ee8>
   11e00:	ldr	r3, [sp, #36]	; 0x24
   11e04:	cmp	r3, #0
   11e08:	bne	12c20 <abort@plt+0x1ea0>
   11e0c:	ldr	r2, [sp, #72]	; 0x48
   11e10:	clz	r3, fp
   11e14:	cmp	r2, #0
   11e18:	lsr	r3, r3, #5
   11e1c:	moveq	r3, #0
   11e20:	cmp	r3, #0
   11e24:	beq	12bc0 <abort@plt+0x1e40>
   11e28:	str	r3, [sp, #68]	; 0x44
   11e2c:	ldr	fp, [sp, #72]	; 0x48
   11e30:	b	117e0 <abort@plt+0xa60>
   11e34:	ldr	r3, [sp, #152]	; 0x98
   11e38:	cmp	r3, #2
   11e3c:	beq	12490 <abort@plt+0x1710>
   11e40:	ldr	r3, [sp, #44]	; 0x2c
   11e44:	ldr	r2, [sp, #28]
   11e48:	and	r2, r3, r2
   11e4c:	ands	r2, r9, r2
   11e50:	bne	1249c <abort@plt+0x171c>
   11e54:	mov	r4, #92	; 0x5c
   11e58:	mov	r3, r4
   11e5c:	ldr	r1, [sp, #44]	; 0x2c
   11e60:	cmp	r1, #0
   11e64:	moveq	r5, #0
   11e68:	moveq	r8, r1
   11e6c:	beq	11d08 <abort@plt+0xf88>
   11e70:	mov	r4, r3
   11e74:	mov	r5, #0
   11e78:	ldr	r3, [sp, #28]
   11e7c:	cmp	r3, #0
   11e80:	bne	12484 <abort@plt+0x1704>
   11e84:	ldr	r3, [sp, #40]	; 0x28
   11e88:	eor	r9, r3, #1
   11e8c:	and	r9, r9, r2
   11e90:	ands	r9, r9, #255	; 0xff
   11e94:	beq	11ed8 <abort@plt+0x1158>
   11e98:	cmp	fp, r7
   11e9c:	movhi	r2, #39	; 0x27
   11ea0:	ldrhi	r3, [sp, #32]
   11ea4:	str	r9, [sp, #40]	; 0x28
   11ea8:	strbhi	r2, [r3, r7]
   11eac:	add	r3, r7, #1
   11eb0:	cmp	fp, r3
   11eb4:	movhi	r1, #36	; 0x24
   11eb8:	ldrhi	r2, [sp, #32]
   11ebc:	strbhi	r1, [r2, r3]
   11ec0:	add	r3, r7, #2
   11ec4:	cmp	fp, r3
   11ec8:	add	r7, r7, #3
   11ecc:	ldrhi	r2, [sp, #32]
   11ed0:	movhi	r1, #39	; 0x27
   11ed4:	strbhi	r1, [r2, r3]
   11ed8:	cmp	fp, r7
   11edc:	movhi	r2, #92	; 0x5c
   11ee0:	ldrhi	r3, [sp, #32]
   11ee4:	add	sl, sl, #1
   11ee8:	strbhi	r2, [r3, r7]
   11eec:	add	r7, r7, #1
   11ef0:	b	11d78 <abort@plt+0xff8>
   11ef4:	ldr	r3, [sp, #152]	; 0x98
   11ef8:	mov	r4, #11
   11efc:	sub	r2, r3, #2
   11f00:	mov	r3, #118	; 0x76
   11f04:	clz	r2, r2
   11f08:	lsr	r2, r2, #5
   11f0c:	b	11e5c <abort@plt+0x10dc>
   11f10:	mov	r4, #10
   11f14:	mov	r3, #110	; 0x6e
   11f18:	ldr	r2, [sp, #152]	; 0x98
   11f1c:	ldr	r1, [sp, #28]
   11f20:	sub	r2, r2, #2
   11f24:	clz	r2, r2
   11f28:	lsr	r2, r2, #5
   11f2c:	ands	r1, r1, r2
   11f30:	beq	11e5c <abort@plt+0x10dc>
   11f34:	ldr	sl, [sp, #32]
   11f38:	mov	r8, fp
   11f3c:	mov	r2, r1
   11f40:	mov	r3, #2
   11f44:	str	r3, [sp, #152]	; 0x98
   11f48:	ldr	r9, [sp, #44]	; 0x2c
   11f4c:	ldr	r3, [sp, #152]	; 0x98
   11f50:	and	r9, r9, r2
   11f54:	tst	r9, #255	; 0xff
   11f58:	movne	r3, #4
   11f5c:	str	r3, [sp, #152]	; 0x98
   11f60:	ldr	r3, [sp, #156]	; 0x9c
   11f64:	mov	ip, #0
   11f68:	bic	r3, r3, #2
   11f6c:	str	r3, [sp, #4]
   11f70:	ldr	r3, [sp, #168]	; 0xa8
   11f74:	ldr	r2, [sp, #56]	; 0x38
   11f78:	str	r3, [sp, #16]
   11f7c:	ldr	r3, [sp, #164]	; 0xa4
   11f80:	mov	r1, r8
   11f84:	str	r3, [sp, #12]
   11f88:	ldr	r3, [sp, #152]	; 0x98
   11f8c:	mov	r0, sl
   11f90:	str	r3, [sp]
   11f94:	str	ip, [sp, #8]
   11f98:	ldr	r3, [sp, #24]
   11f9c:	bl	11784 <abort@plt+0xa04>
   11fa0:	mov	fp, r0
   11fa4:	mov	r0, fp
   11fa8:	add	sp, sp, #116	; 0x74
   11fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fb0:	ldr	r3, [sp, #152]	; 0x98
   11fb4:	mov	r4, #8
   11fb8:	sub	r2, r3, #2
   11fbc:	mov	r3, #98	; 0x62
   11fc0:	clz	r2, r2
   11fc4:	lsr	r2, r2, #5
   11fc8:	b	11e5c <abort@plt+0x10dc>
   11fcc:	ldr	r3, [sp, #152]	; 0x98
   11fd0:	mov	r4, #7
   11fd4:	sub	r2, r3, #2
   11fd8:	mov	r3, #97	; 0x61
   11fdc:	clz	r2, r2
   11fe0:	lsr	r2, r2, #5
   11fe4:	b	11e5c <abort@plt+0x10dc>
   11fe8:	ldr	r3, [sp, #44]	; 0x2c
   11fec:	cmp	r3, #0
   11ff0:	beq	127d4 <abort@plt+0x1a54>
   11ff4:	ldr	r3, [sp, #28]
   11ff8:	cmp	r3, #0
   11ffc:	bne	12aac <abort@plt+0x1d2c>
   12000:	ldr	r3, [sp, #152]	; 0x98
   12004:	sub	r2, r3, #2
   12008:	ldr	r3, [sp, #40]	; 0x28
   1200c:	clz	r2, r2
   12010:	eor	r3, r3, #1
   12014:	lsr	r2, r2, #5
   12018:	ands	r3, r2, r3
   1201c:	moveq	r1, r7
   12020:	beq	12064 <abort@plt+0x12e4>
   12024:	cmp	fp, r7
   12028:	movhi	r0, #39	; 0x27
   1202c:	ldrhi	r1, [sp, #32]
   12030:	str	r3, [sp, #40]	; 0x28
   12034:	strbhi	r0, [r1, r7]
   12038:	add	r1, r7, #1
   1203c:	cmp	fp, r1
   12040:	movhi	ip, #36	; 0x24
   12044:	ldrhi	r0, [sp, #32]
   12048:	strbhi	ip, [r0, r1]
   1204c:	add	r1, r7, #2
   12050:	cmp	fp, r1
   12054:	movhi	ip, #39	; 0x27
   12058:	ldrhi	r0, [sp, #32]
   1205c:	strbhi	ip, [r0, r1]
   12060:	add	r1, r7, #3
   12064:	cmp	fp, r1
   12068:	movhi	r0, #92	; 0x5c
   1206c:	ldrhi	r3, [sp, #32]
   12070:	add	r7, r1, #1
   12074:	strbhi	r0, [r3, r1]
   12078:	cmp	r8, #0
   1207c:	beq	129c0 <abort@plt+0x1c40>
   12080:	ldr	r0, [sp, #24]
   12084:	add	r3, sl, #1
   12088:	cmp	r3, r0
   1208c:	bcs	128fc <abort@plt+0x1b7c>
   12090:	ldr	r0, [sp, #56]	; 0x38
   12094:	ldrb	r3, [r0, r3]
   12098:	sub	r3, r3, #48	; 0x30
   1209c:	cmp	r3, #9
   120a0:	bhi	128fc <abort@plt+0x1b7c>
   120a4:	cmp	fp, r7
   120a8:	movhi	r3, #48	; 0x30
   120ac:	ldrhi	r0, [sp, #32]
   120b0:	ldr	r5, [sp, #28]
   120b4:	mov	r4, #48	; 0x30
   120b8:	strbhi	r3, [r0, r7]
   120bc:	add	r3, r1, #2
   120c0:	cmp	fp, r3
   120c4:	movhi	r0, #48	; 0x30
   120c8:	ldrhi	ip, [sp, #32]
   120cc:	add	r7, r1, #3
   120d0:	strbhi	r0, [ip, r3]
   120d4:	b	11d08 <abort@plt+0xf88>
   120d8:	mov	r5, #0
   120dc:	ldr	r3, [sp, #152]	; 0x98
   120e0:	sub	r2, r3, #2
   120e4:	ldr	r3, [sp, #28]
   120e8:	clz	r2, r2
   120ec:	lsr	r2, r2, #5
   120f0:	ands	r8, r3, r2
   120f4:	beq	11d08 <abort@plt+0xf88>
   120f8:	mov	r3, r8
   120fc:	mov	r2, r3
   12100:	mov	r3, #2
   12104:	ldr	sl, [sp, #32]
   12108:	mov	r8, fp
   1210c:	str	r3, [sp, #152]	; 0x98
   12110:	b	11f48 <abort@plt+0x11c8>
   12114:	ldr	r3, [sp, #152]	; 0x98
   12118:	cmp	r3, #2
   1211c:	beq	12840 <abort@plt+0x1ac0>
   12120:	cmp	r3, #5
   12124:	beq	12800 <abort@plt+0x1a80>
   12128:	mov	r5, #0
   1212c:	sub	r2, r3, #2
   12130:	mov	r8, r5
   12134:	clz	r2, r2
   12138:	mov	r4, #63	; 0x3f
   1213c:	lsr	r2, r2, #5
   12140:	b	11d08 <abort@plt+0xf88>
   12144:	ldr	r3, [sp, #152]	; 0x98
   12148:	cmp	r3, #2
   1214c:	beq	12860 <abort@plt+0x1ae0>
   12150:	mov	r2, #0
   12154:	str	r5, [sp, #68]	; 0x44
   12158:	mov	r8, r2
   1215c:	mov	r4, #39	; 0x27
   12160:	b	11d08 <abort@plt+0xf88>
   12164:	mov	r4, #13
   12168:	mov	r3, #114	; 0x72
   1216c:	b	11f18 <abort@plt+0x1198>
   12170:	ldr	r3, [sp, #152]	; 0x98
   12174:	mov	r8, #0
   12178:	sub	r2, r3, #2
   1217c:	clz	r2, r2
   12180:	lsr	r2, r2, #5
   12184:	b	11d08 <abort@plt+0xf88>
   12188:	ldr	r3, [sp, #152]	; 0x98
   1218c:	mov	r4, #12
   12190:	sub	r2, r3, #2
   12194:	mov	r3, #102	; 0x66
   12198:	clz	r2, r2
   1219c:	lsr	r2, r2, #5
   121a0:	b	11e5c <abort@plt+0x10dc>
   121a4:	mov	r5, r6
   121a8:	b	120dc <abort@plt+0x135c>
   121ac:	ldr	r3, [sp, #152]	; 0x98
   121b0:	sub	r2, r3, #2
   121b4:	mov	r3, #116	; 0x74
   121b8:	clz	r2, r2
   121bc:	lsr	r2, r2, #5
   121c0:	b	11e5c <abort@plt+0x10dc>
   121c4:	ldr	r8, [sp, #76]	; 0x4c
   121c8:	cmp	r8, #1
   121cc:	bne	1267c <abort@plt+0x18fc>
   121d0:	bl	10cc0 <__ctype_b_loc@plt>
   121d4:	sxth	r3, r4
   121d8:	mov	ip, r8
   121dc:	lsl	r3, r3, #1
   121e0:	ldr	r2, [r0]
   121e4:	ldrh	r3, [r2, r3]
   121e8:	and	r3, r3, #16384	; 0x4000
   121ec:	cmp	r3, #0
   121f0:	movne	r5, #1
   121f4:	moveq	r5, #0
   121f8:	moveq	r3, #1
   121fc:	movne	r3, #0
   12200:	ldr	r2, [sp, #44]	; 0x2c
   12204:	and	r3, r3, r2
   12208:	ands	r8, r3, #255	; 0xff
   1220c:	bne	12510 <abort@plt+0x1790>
   12210:	ldr	r3, [sp, #152]	; 0x98
   12214:	sub	r2, r3, #2
   12218:	clz	r2, r2
   1221c:	lsr	r2, r2, #5
   12220:	b	11d08 <abort@plt+0xf88>
   12224:	ldr	r3, [sp, #56]	; 0x38
   12228:	add	r3, r3, sl
   1222c:	str	r3, [sp, #48]	; 0x30
   12230:	ldr	r3, [sp, #48]	; 0x30
   12234:	mov	r6, #0
   12238:	ldrb	r4, [r3]
   1223c:	cmp	r4, #126	; 0x7e
   12240:	ldrls	pc, [pc, r4, lsl #2]
   12244:	b	121c4 <abort@plt+0x1444>
   12248:	andeq	r1, r1, r8, ror #31
   1224c:	andeq	r2, r1, r4, asr #3
   12250:	andeq	r2, r1, r4, asr #3
   12254:	andeq	r2, r1, r4, asr #3
   12258:	andeq	r2, r1, r4, asr #3
   1225c:	andeq	r2, r1, r4, asr #3
   12260:	andeq	r2, r1, r4, asr #3
   12264:	andeq	r1, r1, ip, asr #31
   12268:			; <UNDEFINED> instruction: 0x00011fb0
   1226c:	andeq	r2, r1, r4, asr #8
   12270:	andeq	r1, r1, r0, lsl pc
   12274:	strdeq	r1, [r1], -r4
   12278:	andeq	r2, r1, r8, lsl #3
   1227c:	andeq	r2, r1, r4, ror #2
   12280:	andeq	r2, r1, r4, asr #3
   12284:	andeq	r2, r1, r4, asr #3
   12288:	andeq	r2, r1, r4, asr #3
   1228c:	andeq	r2, r1, r4, asr #3
   12290:	andeq	r2, r1, r4, asr #3
   12294:	andeq	r2, r1, r4, asr #3
   12298:	andeq	r2, r1, r4, asr #3
   1229c:	andeq	r2, r1, r4, asr #3
   122a0:	andeq	r2, r1, r4, asr #3
   122a4:	andeq	r2, r1, r4, asr #3
   122a8:	andeq	r2, r1, r4, asr #3
   122ac:	andeq	r2, r1, r4, asr #3
   122b0:	andeq	r2, r1, r4, asr #3
   122b4:	andeq	r2, r1, r4, asr #3
   122b8:	andeq	r2, r1, r4, asr #3
   122bc:	andeq	r2, r1, r4, asr #3
   122c0:	andeq	r2, r1, r4, asr #3
   122c4:	andeq	r2, r1, r4, asr #3
   122c8:	ldrdeq	r2, [r1], -ip
   122cc:	ldrdeq	r2, [r1], -r8
   122d0:	ldrdeq	r2, [r1], -r8
   122d4:	andeq	r1, r1, r8, ror #25
   122d8:	ldrdeq	r2, [r1], -r8
   122dc:	andeq	r2, r1, r0, ror r1
   122e0:	ldrdeq	r2, [r1], -r8
   122e4:	andeq	r2, r1, r4, asr #2
   122e8:	ldrdeq	r2, [r1], -r8
   122ec:	ldrdeq	r2, [r1], -r8
   122f0:	ldrdeq	r2, [r1], -r8
   122f4:	andeq	r2, r1, r0, ror r1
   122f8:	andeq	r2, r1, r0, ror r1
   122fc:	andeq	r2, r1, r0, ror r1
   12300:	andeq	r2, r1, r0, ror r1
   12304:	andeq	r2, r1, r0, ror r1
   12308:	andeq	r2, r1, r0, ror r1
   1230c:	andeq	r2, r1, r0, ror r1
   12310:	andeq	r2, r1, r0, ror r1
   12314:	andeq	r2, r1, r0, ror r1
   12318:	andeq	r2, r1, r0, ror r1
   1231c:	andeq	r2, r1, r0, ror r1
   12320:	andeq	r2, r1, r0, ror r1
   12324:	andeq	r2, r1, r0, ror r1
   12328:	andeq	r2, r1, r0, ror r1
   1232c:	andeq	r2, r1, r0, ror r1
   12330:	andeq	r2, r1, r0, ror r1
   12334:	ldrdeq	r2, [r1], -r8
   12338:	ldrdeq	r2, [r1], -r8
   1233c:	ldrdeq	r2, [r1], -r8
   12340:	ldrdeq	r2, [r1], -r8
   12344:	andeq	r2, r1, r4, lsl r1
   12348:	andeq	r2, r1, r4, asr #3
   1234c:	andeq	r2, r1, r0, ror r1
   12350:	andeq	r2, r1, r0, ror r1
   12354:	andeq	r2, r1, r0, ror r1
   12358:	andeq	r2, r1, r0, ror r1
   1235c:	andeq	r2, r1, r0, ror r1
   12360:	andeq	r2, r1, r0, ror r1
   12364:	andeq	r2, r1, r0, ror r1
   12368:	andeq	r2, r1, r0, ror r1
   1236c:	andeq	r2, r1, r0, ror r1
   12370:	andeq	r2, r1, r0, ror r1
   12374:	andeq	r2, r1, r0, ror r1
   12378:	andeq	r2, r1, r0, ror r1
   1237c:	andeq	r2, r1, r0, ror r1
   12380:	andeq	r2, r1, r0, ror r1
   12384:	andeq	r2, r1, r0, ror r1
   12388:	andeq	r2, r1, r0, ror r1
   1238c:	andeq	r2, r1, r0, ror r1
   12390:	andeq	r2, r1, r0, ror r1
   12394:	andeq	r2, r1, r0, ror r1
   12398:	andeq	r2, r1, r0, ror r1
   1239c:	andeq	r2, r1, r0, ror r1
   123a0:	andeq	r2, r1, r0, ror r1
   123a4:	andeq	r2, r1, r0, ror r1
   123a8:	andeq	r2, r1, r0, ror r1
   123ac:	andeq	r2, r1, r0, ror r1
   123b0:	andeq	r2, r1, r0, ror r1
   123b4:	ldrdeq	r2, [r1], -r8
   123b8:	andeq	r1, r1, r4, lsr lr
   123bc:	andeq	r2, r1, r0, ror r1
   123c0:	ldrdeq	r2, [r1], -r8
   123c4:	andeq	r2, r1, r0, ror r1
   123c8:	ldrdeq	r2, [r1], -r8
   123cc:	andeq	r2, r1, r0, ror r1
   123d0:	andeq	r2, r1, r0, ror r1
   123d4:	andeq	r2, r1, r0, ror r1
   123d8:	andeq	r2, r1, r0, ror r1
   123dc:	andeq	r2, r1, r0, ror r1
   123e0:	andeq	r2, r1, r0, ror r1
   123e4:	andeq	r2, r1, r0, ror r1
   123e8:	andeq	r2, r1, r0, ror r1
   123ec:	andeq	r2, r1, r0, ror r1
   123f0:	andeq	r2, r1, r0, ror r1
   123f4:	andeq	r2, r1, r0, ror r1
   123f8:	andeq	r2, r1, r0, ror r1
   123fc:	andeq	r2, r1, r0, ror r1
   12400:	andeq	r2, r1, r0, ror r1
   12404:	andeq	r2, r1, r0, ror r1
   12408:	andeq	r2, r1, r0, ror r1
   1240c:	andeq	r2, r1, r0, ror r1
   12410:	andeq	r2, r1, r0, ror r1
   12414:	andeq	r2, r1, r0, ror r1
   12418:	andeq	r2, r1, r0, ror r1
   1241c:	andeq	r2, r1, r0, ror r1
   12420:	andeq	r2, r1, r0, ror r1
   12424:	andeq	r2, r1, r0, ror r1
   12428:	andeq	r2, r1, r0, ror r1
   1242c:	andeq	r2, r1, r0, ror r1
   12430:	andeq	r2, r1, r0, ror r1
   12434:	andeq	r1, r1, r8, asr #25
   12438:	ldrdeq	r2, [r1], -r8
   1243c:	andeq	r1, r1, r8, asr #25
   12440:	andeq	r1, r1, r8, ror #25
   12444:	mov	r3, #116	; 0x74
   12448:	b	11f18 <abort@plt+0x1198>
   1244c:	ldr	r3, [sp, #160]	; 0xa0
   12450:	cmp	r3, #0
   12454:	beq	11d24 <abort@plt+0xfa4>
   12458:	lsr	r3, r4, #5
   1245c:	ldr	r0, [sp, #160]	; 0xa0
   12460:	uxtb	r3, r3
   12464:	and	r1, r4, #31
   12468:	ldr	r0, [r0, r3, lsl #2]
   1246c:	lsr	r3, r0, r1
   12470:	tst	r3, #1
   12474:	beq	11d24 <abort@plt+0xfa4>
   12478:	ldr	r3, [sp, #28]
   1247c:	cmp	r3, #0
   12480:	beq	11e84 <abort@plt+0x1104>
   12484:	ldr	sl, [sp, #32]
   12488:	mov	r8, fp
   1248c:	b	11f48 <abort@plt+0x11c8>
   12490:	ldr	r3, [sp, #28]
   12494:	cmp	r3, #0
   12498:	bne	129ec <abort@plt+0x1c6c>
   1249c:	add	sl, sl, #1
   124a0:	ldr	r6, [sp, #40]	; 0x28
   124a4:	mov	r5, #0
   124a8:	mov	r4, #92	; 0x5c
   124ac:	b	11d40 <abort@plt+0xfc0>
   124b0:	cmp	r9, r8
   124b4:	bne	12724 <abort@plt+0x19a4>
   124b8:	ldr	r0, [sp, #100]	; 0x64
   124bc:	bl	10c24 <iswprint@plt>
   124c0:	add	r5, r5, r4
   124c4:	cmp	r0, #0
   124c8:	add	r0, sp, #104	; 0x68
   124cc:	moveq	r6, #0
   124d0:	bl	10bd0 <mbsinit@plt>
   124d4:	cmp	r0, #0
   124d8:	beq	126b8 <abort@plt+0x1938>
   124dc:	mov	r2, r6
   124e0:	mov	ip, r5
   124e4:	eor	r5, r2, #1
   124e8:	ldr	r4, [sp, #80]	; 0x50
   124ec:	ldr	r6, [sp, #84]	; 0x54
   124f0:	ldr	r7, [sp, #88]	; 0x58
   124f4:	uxtb	r5, r5
   124f8:	cmp	ip, #1
   124fc:	bls	129fc <abort@plt+0x1c7c>
   12500:	ldr	r3, [sp, #44]	; 0x2c
   12504:	and	r8, r3, r5
   12508:	mov	r5, r2
   1250c:	uxtb	r8, r8
   12510:	add	r2, sl, ip
   12514:	ldr	r0, [sp, #48]	; 0x30
   12518:	mov	r1, #0
   1251c:	str	r5, [sp, #48]	; 0x30
   12520:	ldr	r9, [sp, #28]
   12524:	ldr	ip, [sp, #40]	; 0x28
   12528:	ldr	r3, [sp, #32]
   1252c:	ldr	r5, [sp, #152]	; 0x98
   12530:	b	125ec <abort@plt+0x186c>
   12534:	cmp	r9, #0
   12538:	bne	12910 <abort@plt+0x1b90>
   1253c:	eor	r1, ip, #1
   12540:	cmp	r5, #2
   12544:	movne	r1, #0
   12548:	andeq	r1, r1, #1
   1254c:	cmp	r1, #0
   12550:	beq	12588 <abort@plt+0x1808>
   12554:	cmp	fp, r7
   12558:	movhi	ip, #39	; 0x27
   1255c:	strbhi	ip, [r3, r7]
   12560:	add	ip, r7, #1
   12564:	cmp	fp, ip
   12568:	movhi	lr, #36	; 0x24
   1256c:	strbhi	lr, [r3, ip]
   12570:	add	ip, r7, #2
   12574:	cmp	fp, ip
   12578:	movhi	lr, #39	; 0x27
   1257c:	strbhi	lr, [r3, ip]
   12580:	add	r7, r7, #3
   12584:	mov	ip, r1
   12588:	cmp	fp, r7
   1258c:	movhi	r1, #92	; 0x5c
   12590:	strbhi	r1, [r3, r7]
   12594:	add	r1, r7, #1
   12598:	cmp	fp, r1
   1259c:	lsrhi	lr, r4, #6
   125a0:	addhi	lr, lr, #48	; 0x30
   125a4:	strbhi	lr, [r3, r1]
   125a8:	add	lr, r7, #2
   125ac:	cmp	fp, lr
   125b0:	lsrhi	r1, r4, #3
   125b4:	andhi	r1, r1, #7
   125b8:	addhi	r1, r1, #48	; 0x30
   125bc:	add	sl, sl, #1
   125c0:	strbhi	r1, [r3, lr]
   125c4:	and	r4, r4, #7
   125c8:	cmp	r2, sl
   125cc:	add	r4, r4, #48	; 0x30
   125d0:	add	r7, r7, #3
   125d4:	bls	12934 <abort@plt+0x1bb4>
   125d8:	mov	r1, r8
   125dc:	cmp	fp, r7
   125e0:	strbhi	r4, [r3, r7]
   125e4:	ldrb	r4, [r0, #1]!
   125e8:	add	r7, r7, #1
   125ec:	cmp	r8, #0
   125f0:	bne	12534 <abort@plt+0x17b4>
   125f4:	cmp	r6, #0
   125f8:	bne	12648 <abort@plt+0x18c8>
   125fc:	eor	r6, r1, #1
   12600:	and	r6, r6, ip
   12604:	add	sl, sl, #1
   12608:	cmp	r2, sl
   1260c:	uxtb	r6, r6
   12610:	bls	12670 <abort@plt+0x18f0>
   12614:	cmp	r6, #0
   12618:	beq	125dc <abort@plt+0x185c>
   1261c:	cmp	fp, r7
   12620:	movhi	ip, #39	; 0x27
   12624:	strbhi	ip, [r3, r7]
   12628:	add	ip, r7, #1
   1262c:	cmp	fp, ip
   12630:	movhi	lr, #39	; 0x27
   12634:	strbhi	lr, [r3, ip]
   12638:	add	r7, r7, #2
   1263c:	mov	r6, r8
   12640:	mov	ip, r8
   12644:	b	125dc <abort@plt+0x185c>
   12648:	cmp	fp, r7
   1264c:	eor	r6, r1, #1
   12650:	movhi	lr, #92	; 0x5c
   12654:	and	r6, r6, ip
   12658:	add	sl, sl, #1
   1265c:	strbhi	lr, [r3, r7]
   12660:	cmp	r2, sl
   12664:	add	r7, r7, #1
   12668:	uxtb	r6, r6
   1266c:	bhi	12614 <abort@plt+0x1894>
   12670:	str	ip, [sp, #40]	; 0x28
   12674:	ldr	r5, [sp, #48]	; 0x30
   12678:	b	11d40 <abort@plt+0xfc0>
   1267c:	ldr	r3, [sp, #24]
   12680:	cmn	r3, #1
   12684:	mov	r3, #0
   12688:	str	r3, [sp, #104]	; 0x68
   1268c:	str	r3, [sp, #108]	; 0x6c
   12690:	beq	129b0 <abort@plt+0x1c30>
   12694:	mov	r2, r5
   12698:	mov	r3, #0
   1269c:	str	r7, [sp, #88]	; 0x58
   126a0:	ldr	r7, [sp, #152]	; 0x98
   126a4:	str	r5, [sp, #92]	; 0x5c
   126a8:	str	r6, [sp, #84]	; 0x54
   126ac:	mov	r5, r3
   126b0:	mov	r6, r2
   126b4:	str	r4, [sp, #80]	; 0x50
   126b8:	ldr	r3, [sp, #56]	; 0x38
   126bc:	add	r9, sl, r5
   126c0:	add	r8, r3, r9
   126c4:	ldr	r3, [sp, #24]
   126c8:	mov	r1, r8
   126cc:	sub	r2, r3, r9
   126d0:	add	r0, sp, #100	; 0x64
   126d4:	add	r3, sp, #104	; 0x68
   126d8:	bl	14278 <abort@plt+0x34f8>
   126dc:	subs	r4, r0, #0
   126e0:	beq	12a88 <abort@plt+0x1d08>
   126e4:	cmn	r4, #1
   126e8:	beq	12a68 <abort@plt+0x1ce8>
   126ec:	cmn	r4, #2
   126f0:	beq	12a08 <abort@plt+0x1c88>
   126f4:	ldr	r2, [sp, #28]
   126f8:	cmp	r7, #2
   126fc:	movne	r2, #0
   12700:	andeq	r2, r2, #1
   12704:	cmp	r2, #0
   12708:	beq	124b8 <abort@plt+0x1738>
   1270c:	cmp	r4, #1
   12710:	beq	124b8 <abort@plt+0x1738>
   12714:	sub	r3, r4, #1
   12718:	add	r9, r3, r9
   1271c:	ldr	r3, [sp, #56]	; 0x38
   12720:	add	r9, r3, r9
   12724:	ldrb	r3, [r8, #1]!
   12728:	sub	r3, r3, #91	; 0x5b
   1272c:	cmp	r3, #33	; 0x21
   12730:	ldrls	pc, [pc, r3, lsl #2]
   12734:	b	124b0 <abort@plt+0x1730>
   12738:	andeq	r2, r1, r0, asr #15
   1273c:	andeq	r2, r1, r0, asr #15
   12740:			; <UNDEFINED> instruction: 0x000124b0
   12744:	andeq	r2, r1, r0, asr #15
   12748:			; <UNDEFINED> instruction: 0x000124b0
   1274c:	andeq	r2, r1, r0, asr #15
   12750:			; <UNDEFINED> instruction: 0x000124b0
   12754:			; <UNDEFINED> instruction: 0x000124b0
   12758:			; <UNDEFINED> instruction: 0x000124b0
   1275c:			; <UNDEFINED> instruction: 0x000124b0
   12760:			; <UNDEFINED> instruction: 0x000124b0
   12764:			; <UNDEFINED> instruction: 0x000124b0
   12768:			; <UNDEFINED> instruction: 0x000124b0
   1276c:			; <UNDEFINED> instruction: 0x000124b0
   12770:			; <UNDEFINED> instruction: 0x000124b0
   12774:			; <UNDEFINED> instruction: 0x000124b0
   12778:			; <UNDEFINED> instruction: 0x000124b0
   1277c:			; <UNDEFINED> instruction: 0x000124b0
   12780:			; <UNDEFINED> instruction: 0x000124b0
   12784:			; <UNDEFINED> instruction: 0x000124b0
   12788:			; <UNDEFINED> instruction: 0x000124b0
   1278c:			; <UNDEFINED> instruction: 0x000124b0
   12790:			; <UNDEFINED> instruction: 0x000124b0
   12794:			; <UNDEFINED> instruction: 0x000124b0
   12798:			; <UNDEFINED> instruction: 0x000124b0
   1279c:			; <UNDEFINED> instruction: 0x000124b0
   127a0:			; <UNDEFINED> instruction: 0x000124b0
   127a4:			; <UNDEFINED> instruction: 0x000124b0
   127a8:			; <UNDEFINED> instruction: 0x000124b0
   127ac:			; <UNDEFINED> instruction: 0x000124b0
   127b0:			; <UNDEFINED> instruction: 0x000124b0
   127b4:			; <UNDEFINED> instruction: 0x000124b0
   127b8:			; <UNDEFINED> instruction: 0x000124b0
   127bc:	andeq	r2, r1, r0, asr #15
   127c0:	mov	r3, #2
   127c4:	ldr	sl, [sp, #32]
   127c8:	mov	r8, fp
   127cc:	str	r3, [sp, #152]	; 0x98
   127d0:	b	11f48 <abort@plt+0x11c8>
   127d4:	ldr	r3, [sp, #156]	; 0x9c
   127d8:	tst	r3, #1
   127dc:	bne	12908 <abort@plt+0x1b88>
   127e0:	ldr	r3, [sp, #152]	; 0x98
   127e4:	ldr	r4, [sp, #44]	; 0x2c
   127e8:	sub	r2, r3, #2
   127ec:	mov	r5, #0
   127f0:	clz	r2, r2
   127f4:	mov	r8, r4
   127f8:	lsr	r2, r2, #5
   127fc:	b	11d08 <abort@plt+0xf88>
   12800:	ldr	r3, [sp, #156]	; 0x9c
   12804:	ands	r9, r3, #4
   12808:	beq	12940 <abort@plt+0x1bc0>
   1280c:	ldr	r2, [sp, #24]
   12810:	add	r3, sl, #2
   12814:	cmp	r3, r2
   12818:	bcs	1282c <abort@plt+0x1aac>
   1281c:	ldr	r2, [sp, #48]	; 0x30
   12820:	ldrb	r4, [r2, #1]
   12824:	cmp	r4, #63	; 0x3f
   12828:	beq	12ac8 <abort@plt+0x1d48>
   1282c:	mov	r2, #0
   12830:	mov	r8, r2
   12834:	mov	r5, r2
   12838:	mov	r4, #63	; 0x3f
   1283c:	b	11d08 <abort@plt+0xf88>
   12840:	ldr	r3, [sp, #28]
   12844:	cmp	r3, #0
   12848:	bne	12b6c <abort@plt+0x1dec>
   1284c:	mov	r2, r5
   12850:	mov	r8, r3
   12854:	mov	r5, #0
   12858:	mov	r4, #63	; 0x3f
   1285c:	b	11d08 <abort@plt+0xf88>
   12860:	ldr	r3, [sp, #28]
   12864:	cmp	r3, #0
   12868:	bne	12b6c <abort@plt+0x1dec>
   1286c:	ldr	r2, [sp, #72]	; 0x48
   12870:	adds	r3, fp, #0
   12874:	movne	r3, #1
   12878:	cmp	r2, #0
   1287c:	movne	r3, #0
   12880:	cmp	r3, #0
   12884:	strne	fp, [sp, #72]	; 0x48
   12888:	movne	fp, #0
   1288c:	bne	128c8 <abort@plt+0x1b48>
   12890:	cmp	fp, r7
   12894:	movhi	r2, #39	; 0x27
   12898:	ldrhi	r3, [sp, #32]
   1289c:	strbhi	r2, [r3, r7]
   128a0:	add	r3, r7, #1
   128a4:	cmp	fp, r3
   128a8:	movhi	r1, #92	; 0x5c
   128ac:	ldrhi	r2, [sp, #32]
   128b0:	strbhi	r1, [r2, r3]
   128b4:	add	r3, r7, #2
   128b8:	cmp	fp, r3
   128bc:	movhi	r1, #39	; 0x27
   128c0:	ldrhi	r2, [sp, #32]
   128c4:	strbhi	r1, [r2, r3]
   128c8:	ldr	r3, [sp, #28]
   128cc:	add	r7, r7, #3
   128d0:	mov	r2, r5
   128d4:	mov	r8, r3
   128d8:	str	r5, [sp, #68]	; 0x44
   128dc:	str	r3, [sp, #40]	; 0x28
   128e0:	mov	r4, #39	; 0x27
   128e4:	b	11d08 <abort@plt+0xf88>
   128e8:	ldr	r3, [sp, #56]	; 0x38
   128ec:	ldrb	r3, [r3, #1]
   128f0:	adds	r3, r3, #0
   128f4:	movne	r3, #1
   128f8:	b	11ce0 <abort@plt+0xf60>
   128fc:	ldr	r5, [sp, #28]
   12900:	mov	r4, #48	; 0x30
   12904:	b	11d08 <abort@plt+0xf88>
   12908:	add	sl, sl, #1
   1290c:	b	11838 <abort@plt+0xab8>
   12910:	mov	sl, r3
   12914:	ldr	r3, [sp, #28]
   12918:	mov	r8, fp
   1291c:	str	r3, [sp, #44]	; 0x2c
   12920:	ldr	r3, [sp, #152]	; 0x98
   12924:	sub	r2, r3, #2
   12928:	clz	r2, r2
   1292c:	lsr	r2, r2, #5
   12930:	b	11f48 <abort@plt+0x11c8>
   12934:	str	ip, [sp, #40]	; 0x28
   12938:	ldr	r5, [sp, #48]	; 0x30
   1293c:	b	11d78 <abort@plt+0xff8>
   12940:	mov	r2, r9
   12944:	mov	r8, r9
   12948:	mov	r5, #0
   1294c:	mov	r4, #63	; 0x3f
   12950:	b	11d08 <abort@plt+0xf88>
   12954:	cmp	fp, #0
   12958:	beq	129d0 <abort@plt+0x1c50>
   1295c:	ldr	r1, [sp, #32]
   12960:	mov	r3, #34	; 0x22
   12964:	mov	r2, #1
   12968:	strb	r3, [r1]
   1296c:	ldr	r3, [pc, #332]	; 12ac0 <abort@plt+0x1d40>
   12970:	str	r2, [sp, #52]	; 0x34
   12974:	mov	r7, r2
   12978:	str	r2, [sp, #44]	; 0x2c
   1297c:	str	r3, [sp, #64]	; 0x40
   12980:	b	11828 <abort@plt+0xaa8>
   12984:	ldr	r3, [pc, #300]	; 12ab8 <abort@plt+0x1d38>
   12988:	str	r3, [sp, #64]	; 0x40
   1298c:	mov	r3, #0
   12990:	str	r3, [sp, #28]
   12994:	mov	r3, #1
   12998:	str	r3, [sp, #52]	; 0x34
   1299c:	mov	r7, r3
   129a0:	mov	r3, #2
   129a4:	str	r3, [sp, #152]	; 0x98
   129a8:	b	11828 <abort@plt+0xaa8>
   129ac:	bl	10d80 <abort@plt>
   129b0:	ldr	r0, [sp, #56]	; 0x38
   129b4:	bl	10cd8 <strlen@plt>
   129b8:	str	r0, [sp, #24]
   129bc:	b	12694 <abort@plt+0x1914>
   129c0:	mov	r5, r8
   129c4:	mov	r4, #48	; 0x30
   129c8:	ldr	r8, [sp, #44]	; 0x2c
   129cc:	b	11d08 <abort@plt+0xf88>
   129d0:	mov	r3, #1
   129d4:	str	r3, [sp, #52]	; 0x34
   129d8:	mov	r7, r3
   129dc:	str	r3, [sp, #44]	; 0x2c
   129e0:	ldr	r3, [pc, #216]	; 12ac0 <abort@plt+0x1d40>
   129e4:	str	r3, [sp, #64]	; 0x40
   129e8:	b	11828 <abort@plt+0xaa8>
   129ec:	ldr	sl, [sp, #32]
   129f0:	mov	r8, fp
   129f4:	mov	r2, r3
   129f8:	b	11f48 <abort@plt+0x11c8>
   129fc:	mov	r3, r5
   12a00:	mov	r5, r2
   12a04:	b	12200 <abort@plt+0x1480>
   12a08:	ldr	r1, [sp, #24]
   12a0c:	mov	r2, r5
   12a10:	cmp	r1, r9
   12a14:	mov	ip, r5
   12a18:	ldr	r4, [sp, #80]	; 0x50
   12a1c:	ldr	r5, [sp, #92]	; 0x5c
   12a20:	ldr	r6, [sp, #84]	; 0x54
   12a24:	ldr	r7, [sp, #88]	; 0x58
   12a28:	bls	12a5c <abort@plt+0x1cdc>
   12a2c:	ldrb	r3, [r8]
   12a30:	cmp	r3, #0
   12a34:	bne	12a48 <abort@plt+0x1cc8>
   12a38:	b	12a60 <abort@plt+0x1ce0>
   12a3c:	ldrb	r3, [r8, #1]!
   12a40:	cmp	r3, #0
   12a44:	beq	12b60 <abort@plt+0x1de0>
   12a48:	add	r2, r2, #1
   12a4c:	add	r3, sl, r2
   12a50:	cmp	r1, r3
   12a54:	bhi	12a3c <abort@plt+0x1cbc>
   12a58:	mov	ip, r2
   12a5c:	mov	r3, #0
   12a60:	mov	r2, r3
   12a64:	b	124f8 <abort@plt+0x1778>
   12a68:	mov	r3, #0
   12a6c:	mov	ip, r5
   12a70:	ldr	r4, [sp, #80]	; 0x50
   12a74:	ldr	r5, [sp, #92]	; 0x5c
   12a78:	ldr	r6, [sp, #84]	; 0x54
   12a7c:	ldr	r7, [sp, #88]	; 0x58
   12a80:	mov	r2, r3
   12a84:	b	124f8 <abort@plt+0x1778>
   12a88:	mov	r3, r6
   12a8c:	mov	ip, r5
   12a90:	eor	r5, r3, #1
   12a94:	mov	r2, r6
   12a98:	ldr	r4, [sp, #80]	; 0x50
   12a9c:	ldr	r6, [sp, #84]	; 0x54
   12aa0:	ldr	r7, [sp, #88]	; 0x58
   12aa4:	uxtb	r5, r5
   12aa8:	b	124f8 <abort@plt+0x1778>
   12aac:	ldr	sl, [sp, #32]
   12ab0:	mov	r8, fp
   12ab4:	b	1291c <abort@plt+0x1b9c>
   12ab8:	andeq	r4, r1, r0, lsl #26
   12abc:	andeq	r4, r1, r4, lsl #26
   12ac0:	strdeq	r4, [r1], -ip
   12ac4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12ac8:	ldr	r2, [sp, #56]	; 0x38
   12acc:	ldrb	r1, [r2, r3]
   12ad0:	sub	r2, r1, #33	; 0x21
   12ad4:	uxtb	r2, r2
   12ad8:	cmp	r2, #29
   12adc:	bhi	12b7c <abort@plt+0x1dfc>
   12ae0:	ldr	r0, [pc, #-36]	; 12ac4 <abort@plt+0x1d44>
   12ae4:	mov	ip, #1
   12ae8:	ands	r2, r0, ip, lsl r2
   12aec:	beq	12b8c <abort@plt+0x1e0c>
   12af0:	ldr	r2, [sp, #28]
   12af4:	cmp	r2, #0
   12af8:	bne	12c8c <abort@plt+0x1f0c>
   12afc:	cmp	fp, r7
   12b00:	ldr	r8, [sp, #28]
   12b04:	ldrhi	r2, [sp, #32]
   12b08:	mov	sl, r3
   12b0c:	mov	r5, r8
   12b10:	strbhi	r4, [r2, r7]
   12b14:	add	r2, r7, #1
   12b18:	cmp	fp, r2
   12b1c:	movhi	r0, #34	; 0x22
   12b20:	ldrhi	ip, [sp, #32]
   12b24:	mov	r4, r1
   12b28:	strbhi	r0, [ip, r2]
   12b2c:	add	r2, r7, #2
   12b30:	cmp	fp, r2
   12b34:	movhi	r0, #34	; 0x22
   12b38:	ldrhi	ip, [sp, #32]
   12b3c:	strbhi	r0, [ip, r2]
   12b40:	add	r2, r7, #3
   12b44:	cmp	fp, r2
   12b48:	movhi	r0, #63	; 0x3f
   12b4c:	ldrhi	ip, [sp, #32]
   12b50:	add	r7, r7, #4
   12b54:	strbhi	r0, [ip, r2]
   12b58:	mov	r2, r8
   12b5c:	b	11d08 <abort@plt+0xf88>
   12b60:	mov	ip, r2
   12b64:	mov	r2, r3
   12b68:	b	124f8 <abort@plt+0x1778>
   12b6c:	ldr	sl, [sp, #32]
   12b70:	mov	r8, fp
   12b74:	ldr	r2, [sp, #28]
   12b78:	b	11f48 <abort@plt+0x11c8>
   12b7c:	mov	r2, #0
   12b80:	mov	r8, r2
   12b84:	mov	r5, r2
   12b88:	b	11d08 <abort@plt+0xf88>
   12b8c:	mov	r8, r2
   12b90:	mov	r5, #0
   12b94:	b	11d08 <abort@plt+0xf88>
   12b98:	ldr	r1, [sp, #152]	; 0x98
   12b9c:	bl	11664 <abort@plt+0x8e4>
   12ba0:	str	r0, [sp, #168]	; 0xa8
   12ba4:	b	11bc4 <abort@plt+0xe44>
   12ba8:	ldr	r1, [sp, #152]	; 0x98
   12bac:	bl	11664 <abort@plt+0x8e4>
   12bb0:	str	r0, [sp, #164]	; 0xa4
   12bb4:	b	11ba4 <abort@plt+0xe24>
   12bb8:	ldr	r7, [sp, #28]
   12bbc:	b	11c04 <abort@plt+0xe84>
   12bc0:	ldr	sl, [sp, #32]
   12bc4:	ldr	r2, [sp, #68]	; 0x44
   12bc8:	mov	r8, fp
   12bcc:	mov	fp, r7
   12bd0:	ldr	r3, [sp, #64]	; 0x40
   12bd4:	cmp	r3, #0
   12bd8:	moveq	r2, #0
   12bdc:	andne	r2, r2, #1
   12be0:	cmp	r2, #0
   12be4:	beq	12c10 <abort@plt+0x1e90>
   12be8:	mov	r2, r3
   12bec:	ldrb	r3, [r3]
   12bf0:	cmp	r3, #0
   12bf4:	beq	12c10 <abort@plt+0x1e90>
   12bf8:	cmp	r8, fp
   12bfc:	strbhi	r3, [sl, fp]
   12c00:	ldrb	r3, [r2, #1]!
   12c04:	add	fp, fp, #1
   12c08:	cmp	r3, #0
   12c0c:	bne	12bf8 <abort@plt+0x1e78>
   12c10:	cmp	r8, fp
   12c14:	movhi	r3, #0
   12c18:	strbhi	r3, [sl, fp]
   12c1c:	b	11fa4 <abort@plt+0x1224>
   12c20:	ldr	r3, [sp, #168]	; 0xa8
   12c24:	ldr	sl, [sp, #32]
   12c28:	str	r3, [sp, #16]
   12c2c:	ldr	r3, [sp, #164]	; 0xa4
   12c30:	mov	ip, #5
   12c34:	str	r3, [sp, #12]
   12c38:	ldr	r3, [sp, #160]	; 0xa0
   12c3c:	ldr	r2, [sp, #56]	; 0x38
   12c40:	str	r3, [sp, #8]
   12c44:	ldr	r3, [sp, #156]	; 0x9c
   12c48:	ldr	r1, [sp, #72]	; 0x48
   12c4c:	str	r3, [sp, #4]
   12c50:	mov	r0, sl
   12c54:	ldr	r3, [sp, #24]
   12c58:	str	ip, [sp]
   12c5c:	bl	11784 <abort@plt+0xa04>
   12c60:	mov	fp, r0
   12c64:	b	11fa4 <abort@plt+0x1224>
   12c68:	mov	r8, fp
   12c6c:	ldr	sl, [sp, #32]
   12c70:	mov	fp, r7
   12c74:	mov	r2, r3
   12c78:	b	12bd0 <abort@plt+0x1e50>
   12c7c:	mov	r8, fp
   12c80:	ldr	sl, [sp, #32]
   12c84:	mov	fp, r7
   12c88:	b	12bd0 <abort@plt+0x1e50>
   12c8c:	ldr	sl, [sp, #32]
   12c90:	mov	r8, fp
   12c94:	b	11f60 <abort@plt+0x11e0>
   12c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c9c:	sub	sp, sp, #52	; 0x34
   12ca0:	mov	r4, r0
   12ca4:	mov	r5, r3
   12ca8:	mov	sl, r1
   12cac:	mov	fp, r2
   12cb0:	bl	10ce4 <__errno_location@plt>
   12cb4:	ldr	r7, [pc, #412]	; 12e58 <abort@plt+0x20d8>
   12cb8:	cmn	r4, #-2147483647	; 0x80000001
   12cbc:	ldr	r6, [r7]
   12cc0:	mov	r8, r0
   12cc4:	movne	r0, #0
   12cc8:	moveq	r0, #1
   12ccc:	ldr	r3, [r8]
   12cd0:	orrs	r0, r0, r4, lsr #31
   12cd4:	str	r3, [sp, #24]
   12cd8:	bne	12e54 <abort@plt+0x20d4>
   12cdc:	ldr	r2, [r7, #4]
   12ce0:	cmp	r4, r2
   12ce4:	blt	12d44 <abort@plt+0x1fc4>
   12ce8:	add	r9, r7, #8
   12cec:	cmp	r6, r9
   12cf0:	str	r2, [sp, #44]	; 0x2c
   12cf4:	beq	12e24 <abort@plt+0x20a4>
   12cf8:	mov	r3, #8
   12cfc:	sub	r2, r4, r2
   12d00:	mov	r0, r6
   12d04:	str	r3, [sp]
   12d08:	add	r2, r2, #1
   12d0c:	mvn	r3, #-2147483648	; 0x80000000
   12d10:	add	r1, sp, #44	; 0x2c
   12d14:	bl	13b04 <abort@plt+0x2d84>
   12d18:	mov	r6, r0
   12d1c:	str	r0, [r7]
   12d20:	ldr	r0, [r7, #4]
   12d24:	ldr	r2, [sp, #44]	; 0x2c
   12d28:	mov	r1, #0
   12d2c:	sub	r2, r2, r0
   12d30:	add	r0, r6, r0, lsl #3
   12d34:	lsl	r2, r2, #3
   12d38:	bl	10cfc <memset@plt>
   12d3c:	ldr	r3, [sp, #44]	; 0x2c
   12d40:	str	r3, [r7, #4]
   12d44:	add	r3, r6, r4, lsl #3
   12d48:	ldr	r1, [r5, #4]
   12d4c:	ldr	r7, [r3, #4]
   12d50:	ldr	r9, [r6, r4, lsl #3]
   12d54:	ldr	r2, [r5, #40]	; 0x28
   12d58:	ldr	ip, [r5, #44]	; 0x2c
   12d5c:	add	r0, r5, #8
   12d60:	str	r3, [sp, #28]
   12d64:	ldr	r3, [r5]
   12d68:	orr	r1, r1, #1
   12d6c:	mov	lr, r0
   12d70:	str	r1, [sp, #32]
   12d74:	str	r0, [sp, #36]	; 0x24
   12d78:	str	r1, [sp, #4]
   12d7c:	str	r2, [sp, #12]
   12d80:	str	r3, [sp]
   12d84:	mov	r0, r7
   12d88:	mov	r1, r9
   12d8c:	str	ip, [sp, #16]
   12d90:	str	lr, [sp, #8]
   12d94:	mov	r3, fp
   12d98:	mov	r2, sl
   12d9c:	bl	11784 <abort@plt+0xa04>
   12da0:	cmp	r9, r0
   12da4:	bhi	12e10 <abort@plt+0x2090>
   12da8:	ldr	r3, [pc, #172]	; 12e5c <abort@plt+0x20dc>
   12dac:	add	r9, r0, #1
   12db0:	cmp	r7, r3
   12db4:	str	r9, [r6, r4, lsl #3]
   12db8:	beq	12dc4 <abort@plt+0x2044>
   12dbc:	mov	r0, r7
   12dc0:	bl	1414c <abort@plt+0x33cc>
   12dc4:	mov	r0, r9
   12dc8:	bl	139a0 <abort@plt+0x2c20>
   12dcc:	ldr	lr, [sp, #28]
   12dd0:	ldr	ip, [r5, #44]	; 0x2c
   12dd4:	ldr	r4, [r5, #40]	; 0x28
   12dd8:	mov	r3, fp
   12ddc:	mov	r2, sl
   12de0:	mov	r1, r9
   12de4:	str	r0, [lr, #4]
   12de8:	ldr	lr, [r5]
   12dec:	ldr	r5, [sp, #36]	; 0x24
   12df0:	str	ip, [sp, #16]
   12df4:	str	r5, [sp, #8]
   12df8:	ldr	r5, [sp, #32]
   12dfc:	str	r4, [sp, #12]
   12e00:	str	r5, [sp, #4]
   12e04:	str	lr, [sp]
   12e08:	mov	r7, r0
   12e0c:	bl	11784 <abort@plt+0xa04>
   12e10:	ldr	r3, [sp, #24]
   12e14:	mov	r0, r7
   12e18:	str	r3, [r8]
   12e1c:	add	sp, sp, #52	; 0x34
   12e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e24:	mov	r3, #8
   12e28:	sub	r2, r4, r2
   12e2c:	str	r3, [sp]
   12e30:	add	r1, sp, #44	; 0x2c
   12e34:	add	r2, r2, #1
   12e38:	mvn	r3, #-2147483648	; 0x80000000
   12e3c:	bl	13b04 <abort@plt+0x2d84>
   12e40:	mov	r6, r0
   12e44:	ldm	r9, {r0, r1}
   12e48:	str	r6, [r7]
   12e4c:	stm	r6, {r0, r1}
   12e50:	b	12d20 <abort@plt+0x1fa0>
   12e54:	bl	10d80 <abort@plt>
   12e58:	ldrdeq	r6, [r2], -r8
   12e5c:	andeq	r6, r2, r4, asr #2
   12e60:	push	{r4, r5, r6, lr}
   12e64:	mov	r5, r0
   12e68:	bl	10ce4 <__errno_location@plt>
   12e6c:	cmp	r5, #0
   12e70:	mov	r1, #48	; 0x30
   12e74:	mov	r4, r0
   12e78:	ldr	r0, [pc, #16]	; 12e90 <abort@plt+0x2110>
   12e7c:	ldr	r6, [r4]
   12e80:	movne	r0, r5
   12e84:	bl	13e00 <abort@plt+0x3080>
   12e88:	str	r6, [r4]
   12e8c:	pop	{r4, r5, r6, pc}
   12e90:	andeq	r6, r2, r4, asr #4
   12e94:	ldr	r3, [pc, #12]	; 12ea8 <abort@plt+0x2128>
   12e98:	cmp	r0, #0
   12e9c:	moveq	r0, r3
   12ea0:	ldr	r0, [r0]
   12ea4:	bx	lr
   12ea8:	andeq	r6, r2, r4, asr #4
   12eac:	ldr	r3, [pc, #12]	; 12ec0 <abort@plt+0x2140>
   12eb0:	cmp	r0, #0
   12eb4:	moveq	r0, r3
   12eb8:	str	r1, [r0]
   12ebc:	bx	lr
   12ec0:	andeq	r6, r2, r4, asr #4
   12ec4:	ldr	r3, [pc, #52]	; 12f00 <abort@plt+0x2180>
   12ec8:	cmp	r0, #0
   12ecc:	moveq	r0, r3
   12ed0:	add	r3, r0, #8
   12ed4:	push	{lr}		; (str lr, [sp, #-4]!)
   12ed8:	lsr	lr, r1, #5
   12edc:	and	r1, r1, #31
   12ee0:	ldr	ip, [r3, lr, lsl #2]
   12ee4:	lsr	r0, ip, r1
   12ee8:	eor	r2, r2, r0
   12eec:	and	r2, r2, #1
   12ef0:	and	r0, r0, #1
   12ef4:	eor	r1, ip, r2, lsl r1
   12ef8:	str	r1, [r3, lr, lsl #2]
   12efc:	pop	{pc}		; (ldr pc, [sp], #4)
   12f00:	andeq	r6, r2, r4, asr #4
   12f04:	ldr	r3, [pc, #16]	; 12f1c <abort@plt+0x219c>
   12f08:	cmp	r0, #0
   12f0c:	movne	r3, r0
   12f10:	ldr	r0, [r3, #4]
   12f14:	str	r1, [r3, #4]
   12f18:	bx	lr
   12f1c:	andeq	r6, r2, r4, asr #4
   12f20:	ldr	r3, [pc, #44]	; 12f54 <abort@plt+0x21d4>
   12f24:	cmp	r0, #0
   12f28:	moveq	r0, r3
   12f2c:	mov	ip, #10
   12f30:	cmp	r2, #0
   12f34:	cmpne	r1, #0
   12f38:	str	ip, [r0]
   12f3c:	beq	12f4c <abort@plt+0x21cc>
   12f40:	str	r1, [r0, #40]	; 0x28
   12f44:	str	r2, [r0, #44]	; 0x2c
   12f48:	bx	lr
   12f4c:	push	{r4, lr}
   12f50:	bl	10d80 <abort@plt>
   12f54:	andeq	r6, r2, r4, asr #4
   12f58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f5c:	sub	sp, sp, #24
   12f60:	ldr	ip, [pc, #108]	; 12fd4 <abort@plt+0x2254>
   12f64:	ldr	r4, [sp, #56]	; 0x38
   12f68:	mov	r9, r2
   12f6c:	cmp	r4, #0
   12f70:	moveq	r4, ip
   12f74:	mov	sl, r3
   12f78:	mov	r7, r0
   12f7c:	mov	r8, r1
   12f80:	bl	10ce4 <__errno_location@plt>
   12f84:	ldr	r3, [r4, #44]	; 0x2c
   12f88:	mov	r1, r8
   12f8c:	ldr	r6, [r0]
   12f90:	str	r3, [sp, #16]
   12f94:	ldr	r2, [r4, #40]	; 0x28
   12f98:	add	r3, r4, #8
   12f9c:	str	r3, [sp, #8]
   12fa0:	str	r2, [sp, #12]
   12fa4:	ldr	r2, [r4, #4]
   12fa8:	mov	r5, r0
   12fac:	str	r2, [sp, #4]
   12fb0:	ldr	ip, [r4]
   12fb4:	mov	r3, sl
   12fb8:	mov	r2, r9
   12fbc:	mov	r0, r7
   12fc0:	str	ip, [sp]
   12fc4:	bl	11784 <abort@plt+0xa04>
   12fc8:	str	r6, [r5]
   12fcc:	add	sp, sp, #24
   12fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fd4:	andeq	r6, r2, r4, asr #4
   12fd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fdc:	cmp	r3, #0
   12fe0:	sub	sp, sp, #44	; 0x2c
   12fe4:	ldr	r4, [pc, #192]	; 130ac <abort@plt+0x232c>
   12fe8:	mov	r6, r2
   12fec:	movne	r4, r3
   12ff0:	mov	r9, r1
   12ff4:	mov	r8, r0
   12ff8:	bl	10ce4 <__errno_location@plt>
   12ffc:	ldr	r3, [r4, #44]	; 0x2c
   13000:	ldr	r5, [r4, #4]
   13004:	add	sl, r4, #8
   13008:	cmp	r6, #0
   1300c:	orreq	r5, r5, #1
   13010:	mov	r1, #0
   13014:	ldr	r2, [r0]
   13018:	str	r3, [sp, #16]
   1301c:	ldr	r3, [r4, #40]	; 0x28
   13020:	stmib	sp, {r5, sl}
   13024:	str	r3, [sp, #12]
   13028:	ldr	r3, [r4]
   1302c:	mov	r7, r0
   13030:	str	r2, [sp, #28]
   13034:	str	r3, [sp]
   13038:	mov	r2, r8
   1303c:	mov	r3, r9
   13040:	mov	r0, r1
   13044:	bl	11784 <abort@plt+0xa04>
   13048:	add	r1, r0, #1
   1304c:	mov	fp, r0
   13050:	mov	r0, r1
   13054:	str	r1, [sp, #36]	; 0x24
   13058:	bl	139a0 <abort@plt+0x2c20>
   1305c:	ldr	r3, [r4, #44]	; 0x2c
   13060:	mov	r2, r8
   13064:	str	r3, [sp, #16]
   13068:	ldr	r3, [r4, #40]	; 0x28
   1306c:	str	r5, [sp, #4]
   13070:	str	r3, [sp, #12]
   13074:	str	sl, [sp, #8]
   13078:	ldr	ip, [r4]
   1307c:	ldr	r1, [sp, #36]	; 0x24
   13080:	mov	r3, r9
   13084:	str	ip, [sp]
   13088:	str	r0, [sp, #32]
   1308c:	bl	11784 <abort@plt+0xa04>
   13090:	ldr	r2, [sp, #28]
   13094:	cmp	r6, #0
   13098:	str	r2, [r7]
   1309c:	ldr	r0, [sp, #32]
   130a0:	strne	fp, [r6]
   130a4:	add	sp, sp, #44	; 0x2c
   130a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130ac:	andeq	r6, r2, r4, asr #4
   130b0:	mov	r3, r2
   130b4:	mov	r2, #0
   130b8:	b	12fd8 <abort@plt+0x2258>
   130bc:	push	{r4, r5, r6, r7, r8, lr}
   130c0:	ldr	r6, [pc, #116]	; 1313c <abort@plt+0x23bc>
   130c4:	ldr	r3, [r6, #4]
   130c8:	ldr	r7, [r6]
   130cc:	cmp	r3, #1
   130d0:	movgt	r5, r7
   130d4:	movgt	r4, #1
   130d8:	ble	130f8 <abort@plt+0x2378>
   130dc:	ldr	r0, [r5, #12]
   130e0:	bl	1414c <abort@plt+0x33cc>
   130e4:	ldr	r3, [r6, #4]
   130e8:	add	r4, r4, #1
   130ec:	cmp	r3, r4
   130f0:	add	r5, r5, #8
   130f4:	bgt	130dc <abort@plt+0x235c>
   130f8:	ldr	r0, [r7, #4]
   130fc:	ldr	r4, [pc, #60]	; 13140 <abort@plt+0x23c0>
   13100:	cmp	r0, r4
   13104:	beq	13118 <abort@plt+0x2398>
   13108:	bl	1414c <abort@plt+0x33cc>
   1310c:	mov	r3, #256	; 0x100
   13110:	str	r4, [r6, #12]
   13114:	str	r3, [r6, #8]
   13118:	ldr	r4, [pc, #36]	; 13144 <abort@plt+0x23c4>
   1311c:	cmp	r7, r4
   13120:	beq	13130 <abort@plt+0x23b0>
   13124:	mov	r0, r7
   13128:	bl	1414c <abort@plt+0x33cc>
   1312c:	str	r4, [r6]
   13130:	mov	r3, #1
   13134:	str	r3, [r6, #4]
   13138:	pop	{r4, r5, r6, r7, r8, pc}
   1313c:	ldrdeq	r6, [r2], -r8
   13140:	andeq	r6, r2, r4, asr #2
   13144:	andeq	r6, r2, r0, ror #1
   13148:	ldr	r3, [pc, #4]	; 13154 <abort@plt+0x23d4>
   1314c:	mvn	r2, #0
   13150:	b	12c98 <abort@plt+0x1f18>
   13154:	andeq	r6, r2, r4, asr #4
   13158:	ldr	r3, [pc]	; 13160 <abort@plt+0x23e0>
   1315c:	b	12c98 <abort@plt+0x1f18>
   13160:	andeq	r6, r2, r4, asr #4
   13164:	mov	r1, r0
   13168:	ldr	r3, [pc, #8]	; 13178 <abort@plt+0x23f8>
   1316c:	mvn	r2, #0
   13170:	mov	r0, #0
   13174:	b	12c98 <abort@plt+0x1f18>
   13178:	andeq	r6, r2, r4, asr #4
   1317c:	mov	r2, r1
   13180:	ldr	r3, [pc, #8]	; 13190 <abort@plt+0x2410>
   13184:	mov	r1, r0
   13188:	mov	r0, #0
   1318c:	b	12c98 <abort@plt+0x1f18>
   13190:	andeq	r6, r2, r4, asr #4
   13194:	push	{r4, r5, lr}
   13198:	sub	sp, sp, #52	; 0x34
   1319c:	mov	r5, r2
   131a0:	mov	r4, r0
   131a4:	mov	r0, sp
   131a8:	bl	11634 <abort@plt+0x8b4>
   131ac:	mov	r3, sp
   131b0:	mov	r1, r5
   131b4:	mov	r0, r4
   131b8:	mvn	r2, #0
   131bc:	bl	12c98 <abort@plt+0x1f18>
   131c0:	add	sp, sp, #52	; 0x34
   131c4:	pop	{r4, r5, pc}
   131c8:	push	{r4, r5, r6, lr}
   131cc:	sub	sp, sp, #48	; 0x30
   131d0:	mov	r5, r2
   131d4:	mov	r6, r3
   131d8:	mov	r4, r0
   131dc:	mov	r0, sp
   131e0:	bl	11634 <abort@plt+0x8b4>
   131e4:	mov	r3, sp
   131e8:	mov	r2, r6
   131ec:	mov	r1, r5
   131f0:	mov	r0, r4
   131f4:	bl	12c98 <abort@plt+0x1f18>
   131f8:	add	sp, sp, #48	; 0x30
   131fc:	pop	{r4, r5, r6, pc}
   13200:	mov	r2, r1
   13204:	mov	r1, r0
   13208:	mov	r0, #0
   1320c:	b	13194 <abort@plt+0x2414>
   13210:	mov	r3, r2
   13214:	mov	r2, r1
   13218:	mov	r1, r0
   1321c:	mov	r0, #0
   13220:	b	131c8 <abort@plt+0x2448>
   13224:	push	{r4, r5, r6, r7, r8, lr}
   13228:	mov	r7, r0
   1322c:	ldr	lr, [pc, #100]	; 13298 <abort@plt+0x2518>
   13230:	mov	r8, r1
   13234:	mov	r4, r2
   13238:	ldm	lr!, {r0, r1, r2, r3}
   1323c:	sub	sp, sp, #48	; 0x30
   13240:	mov	ip, sp
   13244:	lsr	r5, r4, #5
   13248:	stmia	ip!, {r0, r1, r2, r3}
   1324c:	add	r6, sp, #8
   13250:	ldm	lr!, {r0, r1, r2, r3}
   13254:	and	r4, r4, #31
   13258:	stmia	ip!, {r0, r1, r2, r3}
   1325c:	ldm	lr, {r0, r1, r2, r3}
   13260:	stm	ip, {r0, r1, r2, r3}
   13264:	mov	r2, r8
   13268:	ldr	lr, [r6, r5, lsl #2]
   1326c:	mov	r1, r7
   13270:	mov	r3, sp
   13274:	lsr	ip, lr, r4
   13278:	eor	ip, ip, #1
   1327c:	and	ip, ip, #1
   13280:	mov	r0, #0
   13284:	eor	r4, lr, ip, lsl r4
   13288:	str	r4, [r6, r5, lsl #2]
   1328c:	bl	12c98 <abort@plt+0x1f18>
   13290:	add	sp, sp, #48	; 0x30
   13294:	pop	{r4, r5, r6, r7, r8, pc}
   13298:	andeq	r6, r2, r4, asr #4
   1329c:	mov	r2, r1
   132a0:	mvn	r1, #0
   132a4:	b	13224 <abort@plt+0x24a4>
   132a8:	mov	r2, #58	; 0x3a
   132ac:	mvn	r1, #0
   132b0:	b	13224 <abort@plt+0x24a4>
   132b4:	mov	r2, #58	; 0x3a
   132b8:	b	13224 <abort@plt+0x24a4>
   132bc:	push	{r4, r5, r6, r7, lr}
   132c0:	sub	sp, sp, #100	; 0x64
   132c4:	mov	r6, r0
   132c8:	mov	r0, sp
   132cc:	mov	r7, r2
   132d0:	bl	11634 <abort@plt+0x8b4>
   132d4:	mov	ip, sp
   132d8:	add	lr, sp, #48	; 0x30
   132dc:	ldm	ip!, {r0, r1, r2, r3}
   132e0:	stmia	lr!, {r0, r1, r2, r3}
   132e4:	ldm	ip!, {r0, r1, r2, r3}
   132e8:	ldr	r5, [sp, #60]	; 0x3c
   132ec:	stmia	lr!, {r0, r1, r2, r3}
   132f0:	mvn	r4, r5
   132f4:	ldm	ip, {r0, r1, r2, r3}
   132f8:	and	ip, r4, #67108864	; 0x4000000
   132fc:	eor	ip, ip, r5
   13300:	str	ip, [sp, #60]	; 0x3c
   13304:	stm	lr, {r0, r1, r2, r3}
   13308:	mov	r1, r7
   1330c:	mov	r0, r6
   13310:	add	r3, sp, #48	; 0x30
   13314:	mvn	r2, #0
   13318:	bl	12c98 <abort@plt+0x1f18>
   1331c:	add	sp, sp, #100	; 0x64
   13320:	pop	{r4, r5, r6, r7, pc}
   13324:	push	{r4, r5, r6, r7, r8, lr}
   13328:	mov	r5, r1
   1332c:	ldr	lr, [pc, #100]	; 13398 <abort@plt+0x2618>
   13330:	mov	r4, r2
   13334:	mov	r7, r0
   13338:	mov	r8, r3
   1333c:	ldm	lr!, {r0, r1, r2, r3}
   13340:	sub	sp, sp, #48	; 0x30
   13344:	mov	ip, sp
   13348:	mov	r6, #10
   1334c:	stmia	ip!, {r0, r1, r2, r3}
   13350:	cmp	r4, #0
   13354:	cmpne	r5, #0
   13358:	ldm	lr!, {r0, r1, r2, r3}
   1335c:	str	r6, [sp]
   13360:	stmia	ip!, {r0, r1, r2, r3}
   13364:	ldm	lr, {r0, r1, r2, r3}
   13368:	stm	ip, {r0, r1, r2, r3}
   1336c:	beq	13394 <abort@plt+0x2614>
   13370:	mov	r3, sp
   13374:	mov	r1, r8
   13378:	mov	r0, r7
   1337c:	ldr	r2, [sp, #72]	; 0x48
   13380:	str	r5, [sp, #40]	; 0x28
   13384:	str	r4, [sp, #44]	; 0x2c
   13388:	bl	12c98 <abort@plt+0x1f18>
   1338c:	add	sp, sp, #48	; 0x30
   13390:	pop	{r4, r5, r6, r7, r8, pc}
   13394:	bl	10d80 <abort@plt>
   13398:	andeq	r6, r2, r4, asr #4
   1339c:	push	{lr}		; (str lr, [sp, #-4]!)
   133a0:	sub	sp, sp, #12
   133a4:	mvn	ip, #0
   133a8:	str	ip, [sp]
   133ac:	bl	13324 <abort@plt+0x25a4>
   133b0:	add	sp, sp, #12
   133b4:	pop	{pc}		; (ldr pc, [sp], #4)
   133b8:	push	{lr}		; (str lr, [sp, #-4]!)
   133bc:	sub	sp, sp, #12
   133c0:	mvn	ip, #0
   133c4:	mov	r3, r2
   133c8:	str	ip, [sp]
   133cc:	mov	r2, r1
   133d0:	mov	r1, r0
   133d4:	mov	r0, #0
   133d8:	bl	13324 <abort@plt+0x25a4>
   133dc:	add	sp, sp, #12
   133e0:	pop	{pc}		; (ldr pc, [sp], #4)
   133e4:	push	{lr}		; (str lr, [sp, #-4]!)
   133e8:	sub	sp, sp, #12
   133ec:	str	r3, [sp]
   133f0:	mov	r3, r2
   133f4:	mov	r2, r1
   133f8:	mov	r1, r0
   133fc:	mov	r0, #0
   13400:	bl	13324 <abort@plt+0x25a4>
   13404:	add	sp, sp, #12
   13408:	pop	{pc}		; (ldr pc, [sp], #4)
   1340c:	ldr	r3, [pc]	; 13414 <abort@plt+0x2694>
   13410:	b	12c98 <abort@plt+0x1f18>
   13414:	andeq	r6, r2, r8, ror #1
   13418:	mov	r2, r1
   1341c:	ldr	r3, [pc, #8]	; 1342c <abort@plt+0x26ac>
   13420:	mov	r1, r0
   13424:	mov	r0, #0
   13428:	b	12c98 <abort@plt+0x1f18>
   1342c:	andeq	r6, r2, r8, ror #1
   13430:	ldr	r3, [pc, #4]	; 1343c <abort@plt+0x26bc>
   13434:	mvn	r2, #0
   13438:	b	12c98 <abort@plt+0x1f18>
   1343c:	andeq	r6, r2, r8, ror #1
   13440:	mov	r1, r0
   13444:	ldr	r3, [pc, #8]	; 13454 <abort@plt+0x26d4>
   13448:	mvn	r2, #0
   1344c:	mov	r0, #0
   13450:	b	12c98 <abort@plt+0x1f18>
   13454:	andeq	r6, r2, r8, ror #1
   13458:	push	{r4, r5, r6, lr}
   1345c:	sub	sp, sp, #32
   13460:	cmp	r1, #0
   13464:	mov	r4, r0
   13468:	ldr	r5, [sp, #48]	; 0x30
   1346c:	ldr	r6, [sp, #52]	; 0x34
   13470:	beq	13788 <abort@plt+0x2a08>
   13474:	stm	sp, {r2, r3}
   13478:	mov	r3, r1
   1347c:	ldr	r2, [pc, #808]	; 137ac <abort@plt+0x2a2c>
   13480:	mov	r1, #1
   13484:	bl	10d20 <__fprintf_chk@plt>
   13488:	mov	r2, #5
   1348c:	ldr	r1, [pc, #796]	; 137b0 <abort@plt+0x2a30>
   13490:	mov	r0, #0
   13494:	bl	10bf4 <dcgettext@plt>
   13498:	ldr	r3, [pc, #788]	; 137b4 <abort@plt+0x2a34>
   1349c:	ldr	r2, [pc, #788]	; 137b8 <abort@plt+0x2a38>
   134a0:	str	r3, [sp]
   134a4:	mov	r1, #1
   134a8:	mov	r3, r0
   134ac:	mov	r0, r4
   134b0:	bl	10d20 <__fprintf_chk@plt>
   134b4:	mov	r1, r4
   134b8:	mov	r0, #10
   134bc:	bl	10be8 <fputc_unlocked@plt>
   134c0:	mov	r2, #5
   134c4:	ldr	r1, [pc, #752]	; 137bc <abort@plt+0x2a3c>
   134c8:	mov	r0, #0
   134cc:	bl	10bf4 <dcgettext@plt>
   134d0:	mov	r1, #1
   134d4:	ldr	r3, [pc, #740]	; 137c0 <abort@plt+0x2a40>
   134d8:	mov	r2, r0
   134dc:	mov	r0, r4
   134e0:	bl	10d20 <__fprintf_chk@plt>
   134e4:	mov	r1, r4
   134e8:	mov	r0, #10
   134ec:	bl	10be8 <fputc_unlocked@plt>
   134f0:	cmp	r6, #9
   134f4:	ldrls	pc, [pc, r6, lsl #2]
   134f8:	b	137a0 <abort@plt+0x2a20>
   134fc:	andeq	r3, r1, r0, lsl #11
   13500:	andeq	r3, r1, r8, lsl #11
   13504:			; <UNDEFINED> instruction: 0x000135b4
   13508:	andeq	r3, r1, r8, ror #11
   1350c:	andeq	r3, r1, r4, lsr #12
   13510:	andeq	r3, r1, r0, ror #12
   13514:	muleq	r1, ip, r6
   13518:	andeq	r3, r1, r0, ror #13
   1351c:	andeq	r3, r1, r0, lsr r7
   13520:	andeq	r3, r1, r4, lsr #10
   13524:	ldr	r1, [pc, #664]	; 137c4 <abort@plt+0x2a44>
   13528:	mov	r2, #5
   1352c:	mov	r0, #0
   13530:	bl	10bf4 <dcgettext@plt>
   13534:	ldr	ip, [r5, #32]
   13538:	ldr	r1, [r5, #28]
   1353c:	ldr	r2, [r5, #24]
   13540:	ldr	r3, [r5]
   13544:	ldr	r6, [r5, #20]
   13548:	str	ip, [sp, #28]
   1354c:	ldr	lr, [r5, #16]
   13550:	str	r1, [sp, #24]
   13554:	ldr	ip, [r5, #12]
   13558:	str	r2, [sp, #20]
   1355c:	ldr	r1, [r5, #8]
   13560:	ldr	r2, [r5, #4]
   13564:	str	r6, [sp, #16]
   13568:	stmib	sp, {r1, ip, lr}
   1356c:	mov	r1, #1
   13570:	str	r2, [sp]
   13574:	mov	r2, r0
   13578:	mov	r0, r4
   1357c:	bl	10d20 <__fprintf_chk@plt>
   13580:	add	sp, sp, #32
   13584:	pop	{r4, r5, r6, pc}
   13588:	mov	r2, #5
   1358c:	ldr	r1, [pc, #564]	; 137c8 <abort@plt+0x2a48>
   13590:	mov	r0, #0
   13594:	bl	10bf4 <dcgettext@plt>
   13598:	ldr	r3, [r5]
   1359c:	mov	r1, #1
   135a0:	mov	r2, r0
   135a4:	mov	r0, r4
   135a8:	add	sp, sp, #32
   135ac:	pop	{r4, r5, r6, lr}
   135b0:	b	10d20 <__fprintf_chk@plt>
   135b4:	mov	r2, #5
   135b8:	ldr	r1, [pc, #524]	; 137cc <abort@plt+0x2a4c>
   135bc:	mov	r0, #0
   135c0:	bl	10bf4 <dcgettext@plt>
   135c4:	ldr	r2, [r5, #4]
   135c8:	ldr	r3, [r5]
   135cc:	mov	r1, #1
   135d0:	str	r2, [sp, #48]	; 0x30
   135d4:	mov	r2, r0
   135d8:	mov	r0, r4
   135dc:	add	sp, sp, #32
   135e0:	pop	{r4, r5, r6, lr}
   135e4:	b	10d20 <__fprintf_chk@plt>
   135e8:	mov	r2, #5
   135ec:	ldr	r1, [pc, #476]	; 137d0 <abort@plt+0x2a50>
   135f0:	mov	r0, #0
   135f4:	bl	10bf4 <dcgettext@plt>
   135f8:	ldr	r1, [r5, #8]
   135fc:	ldr	r2, [r5, #4]
   13600:	ldr	r3, [r5]
   13604:	str	r1, [sp, #52]	; 0x34
   13608:	str	r2, [sp, #48]	; 0x30
   1360c:	mov	r1, #1
   13610:	mov	r2, r0
   13614:	mov	r0, r4
   13618:	add	sp, sp, #32
   1361c:	pop	{r4, r5, r6, lr}
   13620:	b	10d20 <__fprintf_chk@plt>
   13624:	mov	r2, #5
   13628:	ldr	r1, [pc, #420]	; 137d4 <abort@plt+0x2a54>
   1362c:	mov	r0, #0
   13630:	bl	10bf4 <dcgettext@plt>
   13634:	ldr	r1, [r5, #8]
   13638:	ldr	ip, [r5, #12]
   1363c:	ldr	r2, [r5, #4]
   13640:	ldr	r3, [r5]
   13644:	stmib	sp, {r1, ip}
   13648:	str	r2, [sp]
   1364c:	mov	r1, #1
   13650:	mov	r2, r0
   13654:	mov	r0, r4
   13658:	bl	10d20 <__fprintf_chk@plt>
   1365c:	b	13580 <abort@plt+0x2800>
   13660:	mov	r2, #5
   13664:	ldr	r1, [pc, #364]	; 137d8 <abort@plt+0x2a58>
   13668:	mov	r0, #0
   1366c:	bl	10bf4 <dcgettext@plt>
   13670:	add	r1, r5, #8
   13674:	ldr	r2, [r5, #4]
   13678:	ldm	r1, {r1, ip, lr}
   1367c:	ldr	r3, [r5]
   13680:	str	r2, [sp]
   13684:	stmib	sp, {r1, ip, lr}
   13688:	mov	r1, #1
   1368c:	mov	r2, r0
   13690:	mov	r0, r4
   13694:	bl	10d20 <__fprintf_chk@plt>
   13698:	b	13580 <abort@plt+0x2800>
   1369c:	mov	r2, #5
   136a0:	ldr	r1, [pc, #308]	; 137dc <abort@plt+0x2a5c>
   136a4:	mov	r0, #0
   136a8:	bl	10bf4 <dcgettext@plt>
   136ac:	add	r1, r5, #8
   136b0:	ldr	r2, [r5, #4]
   136b4:	ldm	r1, {r1, ip, lr}
   136b8:	ldr	r6, [r5, #20]
   136bc:	ldr	r3, [r5]
   136c0:	stmib	sp, {r1, ip, lr}
   136c4:	mov	r1, #1
   136c8:	str	r2, [sp]
   136cc:	str	r6, [sp, #16]
   136d0:	mov	r2, r0
   136d4:	mov	r0, r4
   136d8:	bl	10d20 <__fprintf_chk@plt>
   136dc:	b	13580 <abort@plt+0x2800>
   136e0:	mov	r2, #5
   136e4:	ldr	r1, [pc, #244]	; 137e0 <abort@plt+0x2a60>
   136e8:	mov	r0, #0
   136ec:	bl	10bf4 <dcgettext@plt>
   136f0:	ldr	r2, [r5, #24]
   136f4:	ldr	r3, [r5]
   136f8:	ldr	r6, [r5, #20]
   136fc:	ldr	lr, [r5, #16]
   13700:	ldr	ip, [r5, #12]
   13704:	str	r2, [sp, #20]
   13708:	ldr	r1, [r5, #8]
   1370c:	ldr	r2, [r5, #4]
   13710:	str	r6, [sp, #16]
   13714:	stmib	sp, {r1, ip, lr}
   13718:	mov	r1, #1
   1371c:	str	r2, [sp]
   13720:	mov	r2, r0
   13724:	mov	r0, r4
   13728:	bl	10d20 <__fprintf_chk@plt>
   1372c:	b	13580 <abort@plt+0x2800>
   13730:	mov	r2, #5
   13734:	ldr	r1, [pc, #168]	; 137e4 <abort@plt+0x2a64>
   13738:	mov	r0, #0
   1373c:	bl	10bf4 <dcgettext@plt>
   13740:	ldr	r1, [r5, #28]
   13744:	ldr	r2, [r5, #24]
   13748:	ldr	r3, [r5]
   1374c:	ldr	r6, [r5, #20]
   13750:	ldr	lr, [r5, #16]
   13754:	str	r1, [sp, #24]
   13758:	ldr	ip, [r5, #12]
   1375c:	str	r2, [sp, #20]
   13760:	ldr	r1, [r5, #8]
   13764:	ldr	r2, [r5, #4]
   13768:	str	r6, [sp, #16]
   1376c:	stmib	sp, {r1, ip, lr}
   13770:	mov	r1, #1
   13774:	str	r2, [sp]
   13778:	mov	r2, r0
   1377c:	mov	r0, r4
   13780:	bl	10d20 <__fprintf_chk@plt>
   13784:	b	13580 <abort@plt+0x2800>
   13788:	str	r3, [sp]
   1378c:	mov	r1, #1
   13790:	mov	r3, r2
   13794:	ldr	r2, [pc, #76]	; 137e8 <abort@plt+0x2a68>
   13798:	bl	10d20 <__fprintf_chk@plt>
   1379c:	b	13488 <abort@plt+0x2708>
   137a0:	mov	r2, #5
   137a4:	ldr	r1, [pc, #64]	; 137ec <abort@plt+0x2a6c>
   137a8:	b	1352c <abort@plt+0x27ac>
   137ac:	andeq	r4, r1, r0, ror sp
   137b0:	andeq	r4, r1, r4, lsl #27
   137b4:	andeq	r0, r0, r6, ror #15
   137b8:	andeq	r5, r1, ip, asr r0
   137bc:	andeq	r4, r1, r8, lsl #27
   137c0:	andeq	r4, r1, r4, lsr lr
   137c4:	andeq	r4, r1, r4, ror #30
   137c8:	andeq	r4, r1, r8, asr lr
   137cc:	andeq	r4, r1, r8, ror #28
   137d0:	andeq	r4, r1, r0, lsl #29
   137d4:	muleq	r1, ip, lr
   137d8:			; <UNDEFINED> instruction: 0x00014ebc
   137dc:	andeq	r4, r1, r0, ror #29
   137e0:	andeq	r4, r1, r8, lsl #30
   137e4:	andeq	r4, r1, r4, lsr pc
   137e8:	andeq	r4, r1, ip, ror sp
   137ec:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   137f0:	push	{r4, r5, lr}
   137f4:	sub	sp, sp, #12
   137f8:	ldr	r5, [sp, #24]
   137fc:	ldr	ip, [r5]
   13800:	cmp	ip, #0
   13804:	beq	13820 <abort@plt+0x2aa0>
   13808:	mov	lr, r5
   1380c:	mov	ip, #0
   13810:	ldr	r4, [lr, #4]!
   13814:	add	ip, ip, #1
   13818:	cmp	r4, #0
   1381c:	bne	13810 <abort@plt+0x2a90>
   13820:	stm	sp, {r5, ip}
   13824:	bl	13458 <abort@plt+0x26d8>
   13828:	add	sp, sp, #12
   1382c:	pop	{r4, r5, pc}
   13830:	push	{r4, r5, lr}
   13834:	sub	sp, sp, #52	; 0x34
   13838:	add	r5, sp, #4
   1383c:	ldr	r4, [sp, #64]	; 0x40
   13840:	mov	ip, #0
   13844:	sub	r4, r4, #4
   13848:	ldr	lr, [r4, #4]!
   1384c:	cmp	lr, #0
   13850:	str	lr, [r5, #4]!
   13854:	beq	13864 <abort@plt+0x2ae4>
   13858:	add	ip, ip, #1
   1385c:	cmp	ip, #10
   13860:	bne	13848 <abort@plt+0x2ac8>
   13864:	add	lr, sp, #8
   13868:	str	ip, [sp, #4]
   1386c:	str	lr, [sp]
   13870:	bl	13458 <abort@plt+0x26d8>
   13874:	add	sp, sp, #52	; 0x34
   13878:	pop	{r4, r5, pc}
   1387c:	push	{r3}		; (str r3, [sp, #-4]!)
   13880:	push	{r4, lr}
   13884:	sub	sp, sp, #60	; 0x3c
   13888:	add	lr, sp, #56	; 0x38
   1388c:	add	r3, sp, #72	; 0x48
   13890:	str	r3, [lr, #-44]!	; 0xffffffd4
   13894:	add	r4, sp, #68	; 0x44
   13898:	mov	r3, #0
   1389c:	ldr	ip, [r4, #4]!
   138a0:	cmp	ip, #0
   138a4:	str	ip, [lr, #4]!
   138a8:	beq	138b8 <abort@plt+0x2b38>
   138ac:	add	r3, r3, #1
   138b0:	cmp	r3, #10
   138b4:	bne	1389c <abort@plt+0x2b1c>
   138b8:	add	ip, sp, #16
   138bc:	str	r3, [sp, #4]
   138c0:	str	ip, [sp]
   138c4:	ldr	r3, [sp, #68]	; 0x44
   138c8:	bl	13458 <abort@plt+0x26d8>
   138cc:	add	sp, sp, #60	; 0x3c
   138d0:	pop	{r4, lr}
   138d4:	add	sp, sp, #4
   138d8:	bx	lr
   138dc:	ldr	r3, [pc, #116]	; 13958 <abort@plt+0x2bd8>
   138e0:	push	{r4, lr}
   138e4:	mov	r0, #10
   138e8:	ldr	r1, [r3]
   138ec:	bl	10be8 <fputc_unlocked@plt>
   138f0:	mov	r2, #5
   138f4:	ldr	r1, [pc, #96]	; 1395c <abort@plt+0x2bdc>
   138f8:	mov	r0, #0
   138fc:	bl	10bf4 <dcgettext@plt>
   13900:	ldr	r2, [pc, #88]	; 13960 <abort@plt+0x2be0>
   13904:	mov	r1, r0
   13908:	mov	r0, #1
   1390c:	bl	10d08 <__printf_chk@plt>
   13910:	mov	r2, #5
   13914:	ldr	r1, [pc, #72]	; 13964 <abort@plt+0x2be4>
   13918:	mov	r0, #0
   1391c:	bl	10bf4 <dcgettext@plt>
   13920:	ldr	r3, [pc, #64]	; 13968 <abort@plt+0x2be8>
   13924:	ldr	r2, [pc, #64]	; 1396c <abort@plt+0x2bec>
   13928:	mov	r1, r0
   1392c:	mov	r0, #1
   13930:	bl	10d08 <__printf_chk@plt>
   13934:	mov	r2, #5
   13938:	ldr	r1, [pc, #48]	; 13970 <abort@plt+0x2bf0>
   1393c:	mov	r0, #0
   13940:	bl	10bf4 <dcgettext@plt>
   13944:	ldr	r2, [pc, #40]	; 13974 <abort@plt+0x2bf4>
   13948:	pop	{r4, lr}
   1394c:	mov	r1, r0
   13950:	mov	r0, #1
   13954:	b	10d08 <__printf_chk@plt>
   13958:	andeq	r6, r2, ip, lsr #2
   1395c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13960:	andeq	r4, r1, r8, ror #31
   13964:	andeq	r5, r1, r0
   13968:	andeq	r4, r1, r8, asr #20
   1396c:	andeq	r4, r1, r0, ror sl
   13970:	andeq	r5, r1, r4, lsl r0
   13974:	andeq	r5, r1, ip, lsr r0
   13978:	push	{r4, lr}
   1397c:	bl	13f48 <abort@plt+0x31c8>
   13980:	cmp	r0, #0
   13984:	popne	{r4, pc}
   13988:	bl	13ec0 <abort@plt+0x3140>
   1398c:	push	{r4, lr}
   13990:	bl	13f48 <abort@plt+0x31c8>
   13994:	cmp	r0, #0
   13998:	popne	{r4, pc}
   1399c:	bl	13ec0 <abort@plt+0x3140>
   139a0:	push	{r4, lr}
   139a4:	bl	13f48 <abort@plt+0x31c8>
   139a8:	cmp	r0, #0
   139ac:	popne	{r4, pc}
   139b0:	bl	13ec0 <abort@plt+0x3140>
   139b4:	push	{r4, r5, r6, lr}
   139b8:	mov	r5, r0
   139bc:	mov	r4, r1
   139c0:	bl	13f74 <abort@plt+0x31f4>
   139c4:	cmp	r0, #0
   139c8:	popne	{r4, r5, r6, pc}
   139cc:	adds	r4, r4, #0
   139d0:	movne	r4, #1
   139d4:	cmp	r5, #0
   139d8:	orreq	r4, r4, #1
   139dc:	cmp	r4, #0
   139e0:	popeq	{r4, r5, r6, pc}
   139e4:	bl	13ec0 <abort@plt+0x3140>
   139e8:	push	{r4, lr}
   139ec:	cmp	r1, #0
   139f0:	orreq	r1, r1, #1
   139f4:	bl	13f74 <abort@plt+0x31f4>
   139f8:	cmp	r0, #0
   139fc:	popne	{r4, pc}
   13a00:	bl	13ec0 <abort@plt+0x3140>
   13a04:	push	{r4, r5, r6, lr}
   13a08:	mov	r6, r0
   13a0c:	mov	r5, r1
   13a10:	mov	r4, r2
   13a14:	bl	142cc <abort@plt+0x354c>
   13a18:	cmp	r0, #0
   13a1c:	popne	{r4, r5, r6, pc}
   13a20:	cmp	r6, #0
   13a24:	beq	13a34 <abort@plt+0x2cb4>
   13a28:	cmp	r5, #0
   13a2c:	cmpne	r4, #0
   13a30:	popeq	{r4, r5, r6, pc}
   13a34:	bl	13ec0 <abort@plt+0x3140>
   13a38:	b	13a04 <abort@plt+0x2c84>
   13a3c:	cmp	r2, #0
   13a40:	cmpne	r1, #0
   13a44:	moveq	r2, #1
   13a48:	moveq	r1, r2
   13a4c:	push	{r4, lr}
   13a50:	bl	142cc <abort@plt+0x354c>
   13a54:	cmp	r0, #0
   13a58:	popne	{r4, pc}
   13a5c:	bl	13ec0 <abort@plt+0x3140>
   13a60:	mov	r2, r1
   13a64:	mov	r1, r0
   13a68:	mov	r0, #0
   13a6c:	b	13a04 <abort@plt+0x2c84>
   13a70:	mov	r2, r1
   13a74:	mov	r1, r0
   13a78:	mov	r0, #0
   13a7c:	b	13a3c <abort@plt+0x2cbc>
   13a80:	push	{r4, r5, r6, lr}
   13a84:	subs	r6, r0, #0
   13a88:	sub	sp, sp, #8
   13a8c:	mov	r5, r1
   13a90:	ldr	r4, [r1]
   13a94:	beq	13ad0 <abort@plt+0x2d50>
   13a98:	lsr	r1, r4, #1
   13a9c:	add	r3, r1, #1
   13aa0:	mvn	r3, r3
   13aa4:	cmp	r4, r3
   13aa8:	bhi	13acc <abort@plt+0x2d4c>
   13aac:	add	r4, r4, #1
   13ab0:	add	r4, r4, r1
   13ab4:	mov	r0, r6
   13ab8:	mov	r1, r4
   13abc:	bl	13a04 <abort@plt+0x2c84>
   13ac0:	str	r4, [r5]
   13ac4:	add	sp, sp, #8
   13ac8:	pop	{r4, r5, r6, pc}
   13acc:	bl	13ec0 <abort@plt+0x3140>
   13ad0:	cmp	r4, #0
   13ad4:	bne	13ab4 <abort@plt+0x2d34>
   13ad8:	mov	r1, r2
   13adc:	mov	r0, #64	; 0x40
   13ae0:	str	r2, [sp, #4]
   13ae4:	bl	1440c <abort@plt+0x368c>
   13ae8:	ldr	r2, [sp, #4]
   13aec:	cmp	r0, #0
   13af0:	movne	r4, r0
   13af4:	addeq	r4, r0, #1
   13af8:	b	13ab4 <abort@plt+0x2d34>
   13afc:	mov	r2, #1
   13b00:	b	13a80 <abort@plt+0x2d00>
   13b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b08:	sub	sp, sp, #12
   13b0c:	ldr	r6, [r1]
   13b10:	mov	sl, r1
   13b14:	mov	r9, r0
   13b18:	asrs	r4, r6, #1
   13b1c:	mov	r5, r2
   13b20:	mov	fp, r3
   13b24:	ldr	r7, [sp, #48]	; 0x30
   13b28:	bmi	13c94 <abort@plt+0x2f14>
   13b2c:	mvn	r3, #-2147483648	; 0x80000000
   13b30:	sub	r3, r3, r4
   13b34:	cmp	r6, r3
   13b38:	movle	r3, #0
   13b3c:	movgt	r3, #1
   13b40:	mvn	r8, fp
   13b44:	cmp	r3, #0
   13b48:	addeq	r4, r4, r6
   13b4c:	mvnne	r4, #-2147483648	; 0x80000000
   13b50:	lsr	r8, r8, #31
   13b54:	cmp	fp, r4
   13b58:	movge	r3, #0
   13b5c:	andlt	r3, r8, #1
   13b60:	cmp	r3, #0
   13b64:	beq	13c4c <abort@plt+0x2ecc>
   13b68:	cmp	r7, #0
   13b6c:	blt	13d1c <abort@plt+0x2f9c>
   13b70:	bne	13d14 <abort@plt+0x2f94>
   13b74:	mov	r2, #64	; 0x40
   13b78:	mov	r1, r7
   13b7c:	mov	r0, r2
   13b80:	str	r2, [sp, #4]
   13b84:	bl	14618 <abort@plt+0x3898>
   13b88:	ldr	r2, [sp, #4]
   13b8c:	mov	r1, r7
   13b90:	mov	r4, r0
   13b94:	mov	r0, r2
   13b98:	bl	14838 <abort@plt+0x3ab8>
   13b9c:	ldr	r2, [sp, #4]
   13ba0:	sub	r1, r2, r1
   13ba4:	cmp	r9, #0
   13ba8:	sub	r3, r4, r6
   13bac:	streq	r9, [sl]
   13bb0:	cmp	r3, r5
   13bb4:	bge	13c38 <abort@plt+0x2eb8>
   13bb8:	cmp	r5, #0
   13bbc:	blt	13ca8 <abort@plt+0x2f28>
   13bc0:	cmp	r6, #0
   13bc4:	blt	13be4 <abort@plt+0x2e64>
   13bc8:	mvn	r3, #-2147483648	; 0x80000000
   13bcc:	sub	r3, r3, r5
   13bd0:	cmp	r6, r3
   13bd4:	movle	r3, #0
   13bd8:	movgt	r3, #1
   13bdc:	cmp	r3, #0
   13be0:	bne	13da4 <abort@plt+0x3024>
   13be4:	add	r5, r6, r5
   13be8:	cmp	fp, r5
   13bec:	movge	r8, #0
   13bf0:	andlt	r8, r8, #1
   13bf4:	cmp	r8, #0
   13bf8:	mov	r4, r5
   13bfc:	bne	13da4 <abort@plt+0x3024>
   13c00:	cmp	r7, #0
   13c04:	blt	13cbc <abort@plt+0x2f3c>
   13c08:	beq	13c34 <abort@plt+0x2eb4>
   13c0c:	cmp	r5, #0
   13c10:	blt	13d64 <abort@plt+0x2fe4>
   13c14:	mov	r1, r7
   13c18:	mvn	r0, #-2147483648	; 0x80000000
   13c1c:	bl	14618 <abort@plt+0x3898>
   13c20:	cmp	r5, r0
   13c24:	movle	r0, #0
   13c28:	movgt	r0, #1
   13c2c:	cmp	r0, #0
   13c30:	bne	13da4 <abort@plt+0x3024>
   13c34:	mul	r1, r5, r7
   13c38:	mov	r0, r9
   13c3c:	bl	139b4 <abort@plt+0x2c34>
   13c40:	str	r4, [sl]
   13c44:	add	sp, sp, #12
   13c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c4c:	cmp	r7, #0
   13c50:	blt	13ce8 <abort@plt+0x2f68>
   13c54:	beq	13b74 <abort@plt+0x2df4>
   13c58:	cmp	r4, #0
   13c5c:	blt	13d24 <abort@plt+0x2fa4>
   13c60:	mov	r1, r7
   13c64:	mvn	r0, #-2147483648	; 0x80000000
   13c68:	bl	14618 <abort@plt+0x3898>
   13c6c:	cmp	r0, r4
   13c70:	movge	r0, #0
   13c74:	movlt	r0, #1
   13c78:	cmp	r0, #0
   13c7c:	mvnne	r2, #-2147483648	; 0x80000000
   13c80:	bne	13b78 <abort@plt+0x2df8>
   13c84:	mul	r1, r7, r4
   13c88:	cmp	r1, #63	; 0x3f
   13c8c:	bgt	13ba4 <abort@plt+0x2e24>
   13c90:	b	13b74 <abort@plt+0x2df4>
   13c94:	rsb	r3, r4, #-2147483648	; 0x80000000
   13c98:	cmp	r6, r3
   13c9c:	movge	r3, #0
   13ca0:	movlt	r3, #1
   13ca4:	b	13b40 <abort@plt+0x2dc0>
   13ca8:	rsb	r3, r5, #-2147483648	; 0x80000000
   13cac:	cmp	r6, r3
   13cb0:	movge	r3, #0
   13cb4:	movlt	r3, #1
   13cb8:	b	13bdc <abort@plt+0x2e5c>
   13cbc:	cmp	r5, #0
   13cc0:	blt	13d48 <abort@plt+0x2fc8>
   13cc4:	cmn	r7, #1
   13cc8:	beq	13c34 <abort@plt+0x2eb4>
   13ccc:	mov	r1, r7
   13cd0:	mov	r0, #-2147483648	; 0x80000000
   13cd4:	bl	14618 <abort@plt+0x3898>
   13cd8:	cmp	r5, r0
   13cdc:	movle	r0, #0
   13ce0:	movgt	r0, #1
   13ce4:	b	13c2c <abort@plt+0x2eac>
   13ce8:	cmp	r4, #0
   13cec:	blt	13d88 <abort@plt+0x3008>
   13cf0:	cmn	r7, #1
   13cf4:	beq	13c84 <abort@plt+0x2f04>
   13cf8:	mov	r1, r7
   13cfc:	mov	r0, #-2147483648	; 0x80000000
   13d00:	bl	14618 <abort@plt+0x3898>
   13d04:	cmp	r0, r4
   13d08:	movge	r0, #0
   13d0c:	movlt	r0, #1
   13d10:	b	13c78 <abort@plt+0x2ef8>
   13d14:	mov	r4, fp
   13d18:	b	13c60 <abort@plt+0x2ee0>
   13d1c:	mov	r4, fp
   13d20:	b	13cf0 <abort@plt+0x2f70>
   13d24:	cmn	r4, #1
   13d28:	beq	13c84 <abort@plt+0x2f04>
   13d2c:	mov	r1, r4
   13d30:	mov	r0, #-2147483648	; 0x80000000
   13d34:	bl	14618 <abort@plt+0x3898>
   13d38:	cmp	r7, r0
   13d3c:	movle	r0, #0
   13d40:	movgt	r0, #1
   13d44:	b	13c78 <abort@plt+0x2ef8>
   13d48:	mov	r1, r7
   13d4c:	mvn	r0, #-2147483648	; 0x80000000
   13d50:	bl	14618 <abort@plt+0x3898>
   13d54:	cmp	r5, r0
   13d58:	movge	r0, #0
   13d5c:	movlt	r0, #1
   13d60:	b	13c2c <abort@plt+0x2eac>
   13d64:	cmn	r5, #1
   13d68:	beq	13c34 <abort@plt+0x2eb4>
   13d6c:	mov	r1, r5
   13d70:	mov	r0, #-2147483648	; 0x80000000
   13d74:	bl	14618 <abort@plt+0x3898>
   13d78:	cmp	r7, r0
   13d7c:	movle	r0, #0
   13d80:	movgt	r0, #1
   13d84:	b	13c2c <abort@plt+0x2eac>
   13d88:	mov	r1, r7
   13d8c:	mvn	r0, #-2147483648	; 0x80000000
   13d90:	bl	14618 <abort@plt+0x3898>
   13d94:	cmp	r0, r4
   13d98:	movle	r0, #0
   13d9c:	movgt	r0, #1
   13da0:	b	13c78 <abort@plt+0x2ef8>
   13da4:	bl	13ec0 <abort@plt+0x3140>
   13da8:	push	{r4, lr}
   13dac:	mov	r1, #1
   13db0:	bl	13f00 <abort@plt+0x3180>
   13db4:	cmp	r0, #0
   13db8:	popne	{r4, pc}
   13dbc:	bl	13ec0 <abort@plt+0x3140>
   13dc0:	push	{r4, lr}
   13dc4:	mov	r1, #1
   13dc8:	bl	13f00 <abort@plt+0x3180>
   13dcc:	cmp	r0, #0
   13dd0:	popne	{r4, pc}
   13dd4:	bl	13ec0 <abort@plt+0x3140>
   13dd8:	push	{r4, lr}
   13ddc:	bl	13f00 <abort@plt+0x3180>
   13de0:	cmp	r0, #0
   13de4:	popne	{r4, pc}
   13de8:	bl	13ec0 <abort@plt+0x3140>
   13dec:	push	{r4, lr}
   13df0:	bl	13f00 <abort@plt+0x3180>
   13df4:	cmp	r0, #0
   13df8:	popne	{r4, pc}
   13dfc:	bl	13ec0 <abort@plt+0x3140>
   13e00:	push	{r4, r5, r6, lr}
   13e04:	mov	r6, r0
   13e08:	mov	r0, r1
   13e0c:	mov	r4, r1
   13e10:	bl	13f48 <abort@plt+0x31c8>
   13e14:	subs	r5, r0, #0
   13e18:	beq	13e30 <abort@plt+0x30b0>
   13e1c:	mov	r2, r4
   13e20:	mov	r1, r6
   13e24:	bl	10bc4 <memcpy@plt>
   13e28:	mov	r0, r5
   13e2c:	pop	{r4, r5, r6, pc}
   13e30:	bl	13ec0 <abort@plt+0x3140>
   13e34:	push	{r4, r5, r6, lr}
   13e38:	mov	r6, r0
   13e3c:	mov	r0, r1
   13e40:	mov	r4, r1
   13e44:	bl	13f48 <abort@plt+0x31c8>
   13e48:	subs	r5, r0, #0
   13e4c:	beq	13e64 <abort@plt+0x30e4>
   13e50:	mov	r2, r4
   13e54:	mov	r1, r6
   13e58:	bl	10bc4 <memcpy@plt>
   13e5c:	mov	r0, r5
   13e60:	pop	{r4, r5, r6, pc}
   13e64:	bl	13ec0 <abort@plt+0x3140>
   13e68:	push	{r4, r5, r6, lr}
   13e6c:	mov	r6, r0
   13e70:	add	r0, r1, #1
   13e74:	mov	r4, r1
   13e78:	bl	13f48 <abort@plt+0x31c8>
   13e7c:	subs	r5, r0, #0
   13e80:	beq	13ea0 <abort@plt+0x3120>
   13e84:	mov	r3, #0
   13e88:	mov	r1, r6
   13e8c:	strb	r3, [r5, r4]
   13e90:	mov	r2, r4
   13e94:	bl	10bc4 <memcpy@plt>
   13e98:	mov	r0, r5
   13e9c:	pop	{r4, r5, r6, pc}
   13ea0:	bl	13ec0 <abort@plt+0x3140>
   13ea4:	push	{r4, lr}
   13ea8:	mov	r4, r0
   13eac:	bl	10cd8 <strlen@plt>
   13eb0:	add	r1, r0, #1
   13eb4:	mov	r0, r4
   13eb8:	pop	{r4, lr}
   13ebc:	b	13e00 <abort@plt+0x3080>
   13ec0:	ldr	r3, [pc, #44]	; 13ef4 <abort@plt+0x3174>
   13ec4:	push	{r4, lr}
   13ec8:	mov	r2, #5
   13ecc:	ldr	r1, [pc, #36]	; 13ef8 <abort@plt+0x3178>
   13ed0:	mov	r0, #0
   13ed4:	ldr	r4, [r3]
   13ed8:	bl	10bf4 <dcgettext@plt>
   13edc:	ldr	r2, [pc, #24]	; 13efc <abort@plt+0x317c>
   13ee0:	mov	r1, #0
   13ee4:	mov	r3, r0
   13ee8:	mov	r0, r4
   13eec:	bl	10c6c <error@plt>
   13ef0:	bl	10d80 <abort@plt>
   13ef4:	ldrdeq	r6, [r2], -r4
   13ef8:	andeq	r5, r1, ip, lsl #1
   13efc:	andeq	r4, r1, ip, lsl #24
   13f00:	cmp	r1, #0
   13f04:	cmpne	r0, #0
   13f08:	moveq	r1, #1
   13f0c:	moveq	r0, r1
   13f10:	umull	r2, r3, r0, r1
   13f14:	adds	r3, r3, #0
   13f18:	movne	r3, #1
   13f1c:	cmp	r2, #0
   13f20:	blt	13f30 <abort@plt+0x31b0>
   13f24:	cmp	r3, #0
   13f28:	bne	13f30 <abort@plt+0x31b0>
   13f2c:	b	10b64 <calloc@plt>
   13f30:	push	{r4, lr}
   13f34:	bl	10ce4 <__errno_location@plt>
   13f38:	mov	r3, #12
   13f3c:	str	r3, [r0]
   13f40:	mov	r0, #0
   13f44:	pop	{r4, pc}
   13f48:	cmp	r0, #0
   13f4c:	moveq	r0, #1
   13f50:	cmp	r0, #0
   13f54:	blt	13f5c <abort@plt+0x31dc>
   13f58:	b	10c84 <malloc@plt>
   13f5c:	push	{r4, lr}
   13f60:	bl	10ce4 <__errno_location@plt>
   13f64:	mov	r3, #12
   13f68:	str	r3, [r0]
   13f6c:	mov	r0, #0
   13f70:	pop	{r4, pc}
   13f74:	cmp	r0, #0
   13f78:	beq	13f9c <abort@plt+0x321c>
   13f7c:	cmp	r1, #0
   13f80:	push	{lr}		; (str lr, [sp, #-4]!)
   13f84:	sub	sp, sp, #12
   13f88:	beq	13fa4 <abort@plt+0x3224>
   13f8c:	blt	13fbc <abort@plt+0x323c>
   13f90:	add	sp, sp, #12
   13f94:	pop	{lr}		; (ldr lr, [sp], #4)
   13f98:	b	10c00 <realloc@plt>
   13f9c:	mov	r0, r1
   13fa0:	b	13f48 <abort@plt+0x31c8>
   13fa4:	str	r1, [sp, #4]
   13fa8:	bl	1414c <abort@plt+0x33cc>
   13fac:	ldr	r3, [sp, #4]
   13fb0:	mov	r0, r3
   13fb4:	add	sp, sp, #12
   13fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   13fbc:	bl	10ce4 <__errno_location@plt>
   13fc0:	mov	r2, #12
   13fc4:	mov	r3, #0
   13fc8:	str	r2, [r0]
   13fcc:	b	13fb0 <abort@plt+0x3230>
   13fd0:	push	{r4, r5, r6, lr}
   13fd4:	mov	r4, r0
   13fd8:	bl	10c54 <__fpending@plt>
   13fdc:	ldr	r5, [r4]
   13fe0:	and	r5, r5, #32
   13fe4:	mov	r6, r0
   13fe8:	mov	r0, r4
   13fec:	bl	1404c <abort@plt+0x32cc>
   13ff0:	cmp	r5, #0
   13ff4:	mov	r4, r0
   13ff8:	bne	14018 <abort@plt+0x3298>
   13ffc:	cmp	r0, #0
   14000:	beq	14010 <abort@plt+0x3290>
   14004:	cmp	r6, #0
   14008:	beq	14034 <abort@plt+0x32b4>
   1400c:	mvn	r4, #0
   14010:	mov	r0, r4
   14014:	pop	{r4, r5, r6, pc}
   14018:	cmp	r0, #0
   1401c:	bne	1400c <abort@plt+0x328c>
   14020:	bl	10ce4 <__errno_location@plt>
   14024:	str	r4, [r0]
   14028:	mvn	r4, #0
   1402c:	mov	r0, r4
   14030:	pop	{r4, r5, r6, pc}
   14034:	bl	10ce4 <__errno_location@plt>
   14038:	ldr	r4, [r0]
   1403c:	subs	r4, r4, #9
   14040:	mvnne	r4, #0
   14044:	mov	r0, r4
   14048:	pop	{r4, r5, r6, pc}
   1404c:	push	{r4, r5, lr}
   14050:	sub	sp, sp, #12
   14054:	mov	r4, r0
   14058:	bl	10d14 <fileno@plt>
   1405c:	cmp	r0, #0
   14060:	mov	r0, r4
   14064:	blt	140e0 <abort@plt+0x3360>
   14068:	bl	10c9c <__freading@plt>
   1406c:	cmp	r0, #0
   14070:	bne	140ac <abort@plt+0x332c>
   14074:	mov	r0, r4
   14078:	bl	140ec <abort@plt+0x336c>
   1407c:	cmp	r0, #0
   14080:	beq	140dc <abort@plt+0x335c>
   14084:	bl	10ce4 <__errno_location@plt>
   14088:	mov	r5, r0
   1408c:	mov	r0, r4
   14090:	ldr	r4, [r5]
   14094:	bl	10d2c <fclose@plt>
   14098:	cmp	r4, #0
   1409c:	mvnne	r0, #0
   140a0:	strne	r4, [r5]
   140a4:	add	sp, sp, #12
   140a8:	pop	{r4, r5, pc}
   140ac:	mov	r0, r4
   140b0:	bl	10d14 <fileno@plt>
   140b4:	mov	r3, #1
   140b8:	str	r3, [sp]
   140bc:	mov	r2, #0
   140c0:	mov	r3, #0
   140c4:	bl	10c3c <lseek64@plt>
   140c8:	mvn	r3, #0
   140cc:	mvn	r2, #0
   140d0:	cmp	r1, r3
   140d4:	cmpeq	r0, r2
   140d8:	bne	14074 <abort@plt+0x32f4>
   140dc:	mov	r0, r4
   140e0:	add	sp, sp, #12
   140e4:	pop	{r4, r5, lr}
   140e8:	b	10d2c <fclose@plt>
   140ec:	push	{r4, lr}
   140f0:	subs	r4, r0, #0
   140f4:	sub	sp, sp, #8
   140f8:	beq	14114 <abort@plt+0x3394>
   140fc:	bl	10c9c <__freading@plt>
   14100:	cmp	r0, #0
   14104:	beq	14114 <abort@plt+0x3394>
   14108:	ldr	r3, [r4]
   1410c:	tst	r3, #256	; 0x100
   14110:	bne	14124 <abort@plt+0x33a4>
   14114:	mov	r0, r4
   14118:	add	sp, sp, #8
   1411c:	pop	{r4, lr}
   14120:	b	10ba0 <fflush@plt>
   14124:	mov	r3, #1
   14128:	str	r3, [sp]
   1412c:	mov	r2, #0
   14130:	mov	r3, #0
   14134:	mov	r0, r4
   14138:	bl	141a4 <abort@plt+0x3424>
   1413c:	mov	r0, r4
   14140:	add	sp, sp, #8
   14144:	pop	{r4, lr}
   14148:	b	10ba0 <fflush@plt>
   1414c:	push	{r4, r5, lr}
   14150:	sub	sp, sp, #12
   14154:	mov	r5, r0
   14158:	bl	10ce4 <__errno_location@plt>
   1415c:	mov	r2, #0
   14160:	mov	r4, r0
   14164:	ldr	r3, [r0]
   14168:	str	r2, [r4]
   1416c:	mov	r0, r5
   14170:	str	r3, [sp]
   14174:	str	r3, [sp, #4]
   14178:	bl	10bac <free@plt>
   1417c:	ldr	r3, [r4]
   14180:	add	r2, sp, #8
   14184:	cmp	r3, #0
   14188:	moveq	r3, #4
   1418c:	movne	r3, #0
   14190:	add	r3, r2, r3
   14194:	ldr	r3, [r3, #-8]
   14198:	str	r3, [r4]
   1419c:	add	sp, sp, #12
   141a0:	pop	{r4, r5, pc}
   141a4:	push	{r4, r5, r6, r7, r8, lr}
   141a8:	sub	sp, sp, #8
   141ac:	ldmib	r0, {ip, lr}
   141b0:	mov	r4, r0
   141b4:	ldr	r5, [sp, #32]
   141b8:	cmp	lr, ip
   141bc:	beq	141d4 <abort@plt+0x3454>
   141c0:	str	r5, [sp, #32]
   141c4:	mov	r0, r4
   141c8:	add	sp, sp, #8
   141cc:	pop	{r4, r5, r6, r7, r8, lr}
   141d0:	b	10d38 <fseeko64@plt>
   141d4:	ldr	lr, [r0, #20]
   141d8:	ldr	ip, [r0, #16]
   141dc:	cmp	lr, ip
   141e0:	bne	141c0 <abort@plt+0x3440>
   141e4:	ldr	r8, [r0, #36]	; 0x24
   141e8:	cmp	r8, #0
   141ec:	bne	141c0 <abort@plt+0x3440>
   141f0:	mov	r6, r2
   141f4:	mov	r7, r3
   141f8:	bl	10d14 <fileno@plt>
   141fc:	mov	r2, r6
   14200:	mov	r3, r7
   14204:	str	r5, [sp]
   14208:	bl	10c3c <lseek64@plt>
   1420c:	mvn	r3, #0
   14210:	mvn	r2, #0
   14214:	cmp	r1, r3
   14218:	cmpeq	r0, r2
   1421c:	beq	1423c <abort@plt+0x34bc>
   14220:	ldr	r3, [r4]
   14224:	strd	r0, [r4, #80]	; 0x50
   14228:	mov	r0, r8
   1422c:	bic	r3, r3, #16
   14230:	str	r3, [r4]
   14234:	add	sp, sp, #8
   14238:	pop	{r4, r5, r6, r7, r8, pc}
   1423c:	mvn	r0, #0
   14240:	b	14234 <abort@plt+0x34b4>
   14244:	push	{r4, lr}
   14248:	mov	r0, #14
   1424c:	bl	10d5c <nl_langinfo@plt>
   14250:	cmp	r0, #0
   14254:	beq	1426c <abort@plt+0x34ec>
   14258:	ldrb	r2, [r0]
   1425c:	ldr	r3, [pc, #16]	; 14274 <abort@plt+0x34f4>
   14260:	cmp	r2, #0
   14264:	moveq	r0, r3
   14268:	pop	{r4, pc}
   1426c:	ldr	r0, [pc]	; 14274 <abort@plt+0x34f4>
   14270:	pop	{r4, pc}
   14274:	andeq	r5, r1, r0, lsr #1
   14278:	push	{r4, r5, r6, r7, lr}
   1427c:	subs	r6, r0, #0
   14280:	sub	sp, sp, #12
   14284:	addeq	r6, sp, #4
   14288:	mov	r0, r6
   1428c:	mov	r5, r2
   14290:	mov	r7, r1
   14294:	bl	10c60 <mbrtowc@plt>
   14298:	cmp	r5, #0
   1429c:	cmnne	r0, #3
   142a0:	mov	r4, r0
   142a4:	bls	142c0 <abort@plt+0x3540>
   142a8:	mov	r0, #0
   142ac:	bl	14318 <abort@plt+0x3598>
   142b0:	cmp	r0, #0
   142b4:	moveq	r4, #1
   142b8:	ldrbeq	r3, [r7]
   142bc:	streq	r3, [r6]
   142c0:	mov	r0, r4
   142c4:	add	sp, sp, #12
   142c8:	pop	{r4, r5, r6, r7, pc}
   142cc:	push	{r4, r5, r6, lr}
   142d0:	subs	r4, r2, #0
   142d4:	mov	r6, r0
   142d8:	mov	r5, r1
   142dc:	beq	14308 <abort@plt+0x3588>
   142e0:	mov	r1, r4
   142e4:	mvn	r0, #0
   142e8:	bl	1440c <abort@plt+0x368c>
   142ec:	cmp	r0, r5
   142f0:	bcs	14308 <abort@plt+0x3588>
   142f4:	bl	10ce4 <__errno_location@plt>
   142f8:	mov	r3, #12
   142fc:	str	r3, [r0]
   14300:	mov	r0, #0
   14304:	pop	{r4, r5, r6, pc}
   14308:	mul	r1, r5, r4
   1430c:	mov	r0, r6
   14310:	pop	{r4, r5, r6, lr}
   14314:	b	13f74 <abort@plt+0x31f4>
   14318:	push	{lr}		; (str lr, [sp, #-4]!)
   1431c:	sub	sp, sp, #268	; 0x10c
   14320:	add	r1, sp, #4
   14324:	ldr	r2, [pc, #60]	; 14368 <abort@plt+0x35e8>
   14328:	bl	14374 <abort@plt+0x35f4>
   1432c:	cmp	r0, #0
   14330:	movne	r0, #0
   14334:	bne	14360 <abort@plt+0x35e0>
   14338:	ldr	r1, [pc, #44]	; 1436c <abort@plt+0x35ec>
   1433c:	add	r0, sp, #4
   14340:	bl	10b88 <strcmp@plt>
   14344:	cmp	r0, #0
   14348:	beq	14360 <abort@plt+0x35e0>
   1434c:	add	r0, sp, #4
   14350:	ldr	r1, [pc, #24]	; 14370 <abort@plt+0x35f0>
   14354:	bl	10b88 <strcmp@plt>
   14358:	adds	r0, r0, #0
   1435c:	movne	r0, #1
   14360:	add	sp, sp, #268	; 0x10c
   14364:	pop	{pc}		; (ldr pc, [sp], #4)
   14368:	andeq	r0, r0, r1, lsl #2
   1436c:	andeq	r5, r1, r8, lsr #1
   14370:	andeq	r5, r1, ip, lsr #1
   14374:	push	{r4, r5, r6, lr}
   14378:	mov	r5, r1
   1437c:	mov	r1, #0
   14380:	mov	r4, r2
   14384:	bl	10d44 <setlocale@plt>
   14388:	subs	r6, r0, #0
   1438c:	beq	143e8 <abort@plt+0x3668>
   14390:	bl	10cd8 <strlen@plt>
   14394:	cmp	r4, r0
   14398:	bhi	143d0 <abort@plt+0x3650>
   1439c:	cmp	r4, #0
   143a0:	bne	143ac <abort@plt+0x362c>
   143a4:	mov	r0, #34	; 0x22
   143a8:	pop	{r4, r5, r6, pc}
   143ac:	sub	r4, r4, #1
   143b0:	mov	r1, r6
   143b4:	mov	r2, r4
   143b8:	mov	r0, r5
   143bc:	bl	10bc4 <memcpy@plt>
   143c0:	mov	r3, #0
   143c4:	strb	r3, [r5, r4]
   143c8:	mov	r0, #34	; 0x22
   143cc:	pop	{r4, r5, r6, pc}
   143d0:	add	r2, r0, #1
   143d4:	mov	r1, r6
   143d8:	mov	r0, r5
   143dc:	bl	10bc4 <memcpy@plt>
   143e0:	mov	r0, #0
   143e4:	pop	{r4, r5, r6, pc}
   143e8:	cmp	r4, #0
   143ec:	beq	143fc <abort@plt+0x367c>
   143f0:	strb	r6, [r5]
   143f4:	mov	r0, #22
   143f8:	pop	{r4, r5, r6, pc}
   143fc:	mov	r0, #22
   14400:	pop	{r4, r5, r6, pc}
   14404:	mov	r1, #0
   14408:	b	10d44 <setlocale@plt>
   1440c:	subs	r2, r1, #1
   14410:	bxeq	lr
   14414:	bcc	145ec <abort@plt+0x386c>
   14418:	cmp	r0, r1
   1441c:	bls	145d0 <abort@plt+0x3850>
   14420:	tst	r1, r2
   14424:	beq	145dc <abort@plt+0x385c>
   14428:	clz	r3, r0
   1442c:	clz	r2, r1
   14430:	sub	r3, r2, r3
   14434:	rsbs	r3, r3, #31
   14438:	addne	r3, r3, r3, lsl #1
   1443c:	mov	r2, #0
   14440:	addne	pc, pc, r3, lsl #2
   14444:	nop			; (mov r0, r0)
   14448:	cmp	r0, r1, lsl #31
   1444c:	adc	r2, r2, r2
   14450:	subcs	r0, r0, r1, lsl #31
   14454:	cmp	r0, r1, lsl #30
   14458:	adc	r2, r2, r2
   1445c:	subcs	r0, r0, r1, lsl #30
   14460:	cmp	r0, r1, lsl #29
   14464:	adc	r2, r2, r2
   14468:	subcs	r0, r0, r1, lsl #29
   1446c:	cmp	r0, r1, lsl #28
   14470:	adc	r2, r2, r2
   14474:	subcs	r0, r0, r1, lsl #28
   14478:	cmp	r0, r1, lsl #27
   1447c:	adc	r2, r2, r2
   14480:	subcs	r0, r0, r1, lsl #27
   14484:	cmp	r0, r1, lsl #26
   14488:	adc	r2, r2, r2
   1448c:	subcs	r0, r0, r1, lsl #26
   14490:	cmp	r0, r1, lsl #25
   14494:	adc	r2, r2, r2
   14498:	subcs	r0, r0, r1, lsl #25
   1449c:	cmp	r0, r1, lsl #24
   144a0:	adc	r2, r2, r2
   144a4:	subcs	r0, r0, r1, lsl #24
   144a8:	cmp	r0, r1, lsl #23
   144ac:	adc	r2, r2, r2
   144b0:	subcs	r0, r0, r1, lsl #23
   144b4:	cmp	r0, r1, lsl #22
   144b8:	adc	r2, r2, r2
   144bc:	subcs	r0, r0, r1, lsl #22
   144c0:	cmp	r0, r1, lsl #21
   144c4:	adc	r2, r2, r2
   144c8:	subcs	r0, r0, r1, lsl #21
   144cc:	cmp	r0, r1, lsl #20
   144d0:	adc	r2, r2, r2
   144d4:	subcs	r0, r0, r1, lsl #20
   144d8:	cmp	r0, r1, lsl #19
   144dc:	adc	r2, r2, r2
   144e0:	subcs	r0, r0, r1, lsl #19
   144e4:	cmp	r0, r1, lsl #18
   144e8:	adc	r2, r2, r2
   144ec:	subcs	r0, r0, r1, lsl #18
   144f0:	cmp	r0, r1, lsl #17
   144f4:	adc	r2, r2, r2
   144f8:	subcs	r0, r0, r1, lsl #17
   144fc:	cmp	r0, r1, lsl #16
   14500:	adc	r2, r2, r2
   14504:	subcs	r0, r0, r1, lsl #16
   14508:	cmp	r0, r1, lsl #15
   1450c:	adc	r2, r2, r2
   14510:	subcs	r0, r0, r1, lsl #15
   14514:	cmp	r0, r1, lsl #14
   14518:	adc	r2, r2, r2
   1451c:	subcs	r0, r0, r1, lsl #14
   14520:	cmp	r0, r1, lsl #13
   14524:	adc	r2, r2, r2
   14528:	subcs	r0, r0, r1, lsl #13
   1452c:	cmp	r0, r1, lsl #12
   14530:	adc	r2, r2, r2
   14534:	subcs	r0, r0, r1, lsl #12
   14538:	cmp	r0, r1, lsl #11
   1453c:	adc	r2, r2, r2
   14540:	subcs	r0, r0, r1, lsl #11
   14544:	cmp	r0, r1, lsl #10
   14548:	adc	r2, r2, r2
   1454c:	subcs	r0, r0, r1, lsl #10
   14550:	cmp	r0, r1, lsl #9
   14554:	adc	r2, r2, r2
   14558:	subcs	r0, r0, r1, lsl #9
   1455c:	cmp	r0, r1, lsl #8
   14560:	adc	r2, r2, r2
   14564:	subcs	r0, r0, r1, lsl #8
   14568:	cmp	r0, r1, lsl #7
   1456c:	adc	r2, r2, r2
   14570:	subcs	r0, r0, r1, lsl #7
   14574:	cmp	r0, r1, lsl #6
   14578:	adc	r2, r2, r2
   1457c:	subcs	r0, r0, r1, lsl #6
   14580:	cmp	r0, r1, lsl #5
   14584:	adc	r2, r2, r2
   14588:	subcs	r0, r0, r1, lsl #5
   1458c:	cmp	r0, r1, lsl #4
   14590:	adc	r2, r2, r2
   14594:	subcs	r0, r0, r1, lsl #4
   14598:	cmp	r0, r1, lsl #3
   1459c:	adc	r2, r2, r2
   145a0:	subcs	r0, r0, r1, lsl #3
   145a4:	cmp	r0, r1, lsl #2
   145a8:	adc	r2, r2, r2
   145ac:	subcs	r0, r0, r1, lsl #2
   145b0:	cmp	r0, r1, lsl #1
   145b4:	adc	r2, r2, r2
   145b8:	subcs	r0, r0, r1, lsl #1
   145bc:	cmp	r0, r1
   145c0:	adc	r2, r2, r2
   145c4:	subcs	r0, r0, r1
   145c8:	mov	r0, r2
   145cc:	bx	lr
   145d0:	moveq	r0, #1
   145d4:	movne	r0, #0
   145d8:	bx	lr
   145dc:	clz	r2, r1
   145e0:	rsb	r2, r2, #31
   145e4:	lsr	r0, r0, r2
   145e8:	bx	lr
   145ec:	cmp	r0, #0
   145f0:	mvnne	r0, #0
   145f4:	b	14858 <abort@plt+0x3ad8>
   145f8:	cmp	r1, #0
   145fc:	beq	145ec <abort@plt+0x386c>
   14600:	push	{r0, r1, lr}
   14604:	bl	1440c <abort@plt+0x368c>
   14608:	pop	{r1, r2, lr}
   1460c:	mul	r3, r2, r0
   14610:	sub	r1, r1, r3
   14614:	bx	lr
   14618:	cmp	r1, #0
   1461c:	beq	14828 <abort@plt+0x3aa8>
   14620:	eor	ip, r0, r1
   14624:	rsbmi	r1, r1, #0
   14628:	subs	r2, r1, #1
   1462c:	beq	147f4 <abort@plt+0x3a74>
   14630:	movs	r3, r0
   14634:	rsbmi	r3, r0, #0
   14638:	cmp	r3, r1
   1463c:	bls	14800 <abort@plt+0x3a80>
   14640:	tst	r1, r2
   14644:	beq	14810 <abort@plt+0x3a90>
   14648:	clz	r2, r3
   1464c:	clz	r0, r1
   14650:	sub	r2, r0, r2
   14654:	rsbs	r2, r2, #31
   14658:	addne	r2, r2, r2, lsl #1
   1465c:	mov	r0, #0
   14660:	addne	pc, pc, r2, lsl #2
   14664:	nop			; (mov r0, r0)
   14668:	cmp	r3, r1, lsl #31
   1466c:	adc	r0, r0, r0
   14670:	subcs	r3, r3, r1, lsl #31
   14674:	cmp	r3, r1, lsl #30
   14678:	adc	r0, r0, r0
   1467c:	subcs	r3, r3, r1, lsl #30
   14680:	cmp	r3, r1, lsl #29
   14684:	adc	r0, r0, r0
   14688:	subcs	r3, r3, r1, lsl #29
   1468c:	cmp	r3, r1, lsl #28
   14690:	adc	r0, r0, r0
   14694:	subcs	r3, r3, r1, lsl #28
   14698:	cmp	r3, r1, lsl #27
   1469c:	adc	r0, r0, r0
   146a0:	subcs	r3, r3, r1, lsl #27
   146a4:	cmp	r3, r1, lsl #26
   146a8:	adc	r0, r0, r0
   146ac:	subcs	r3, r3, r1, lsl #26
   146b0:	cmp	r3, r1, lsl #25
   146b4:	adc	r0, r0, r0
   146b8:	subcs	r3, r3, r1, lsl #25
   146bc:	cmp	r3, r1, lsl #24
   146c0:	adc	r0, r0, r0
   146c4:	subcs	r3, r3, r1, lsl #24
   146c8:	cmp	r3, r1, lsl #23
   146cc:	adc	r0, r0, r0
   146d0:	subcs	r3, r3, r1, lsl #23
   146d4:	cmp	r3, r1, lsl #22
   146d8:	adc	r0, r0, r0
   146dc:	subcs	r3, r3, r1, lsl #22
   146e0:	cmp	r3, r1, lsl #21
   146e4:	adc	r0, r0, r0
   146e8:	subcs	r3, r3, r1, lsl #21
   146ec:	cmp	r3, r1, lsl #20
   146f0:	adc	r0, r0, r0
   146f4:	subcs	r3, r3, r1, lsl #20
   146f8:	cmp	r3, r1, lsl #19
   146fc:	adc	r0, r0, r0
   14700:	subcs	r3, r3, r1, lsl #19
   14704:	cmp	r3, r1, lsl #18
   14708:	adc	r0, r0, r0
   1470c:	subcs	r3, r3, r1, lsl #18
   14710:	cmp	r3, r1, lsl #17
   14714:	adc	r0, r0, r0
   14718:	subcs	r3, r3, r1, lsl #17
   1471c:	cmp	r3, r1, lsl #16
   14720:	adc	r0, r0, r0
   14724:	subcs	r3, r3, r1, lsl #16
   14728:	cmp	r3, r1, lsl #15
   1472c:	adc	r0, r0, r0
   14730:	subcs	r3, r3, r1, lsl #15
   14734:	cmp	r3, r1, lsl #14
   14738:	adc	r0, r0, r0
   1473c:	subcs	r3, r3, r1, lsl #14
   14740:	cmp	r3, r1, lsl #13
   14744:	adc	r0, r0, r0
   14748:	subcs	r3, r3, r1, lsl #13
   1474c:	cmp	r3, r1, lsl #12
   14750:	adc	r0, r0, r0
   14754:	subcs	r3, r3, r1, lsl #12
   14758:	cmp	r3, r1, lsl #11
   1475c:	adc	r0, r0, r0
   14760:	subcs	r3, r3, r1, lsl #11
   14764:	cmp	r3, r1, lsl #10
   14768:	adc	r0, r0, r0
   1476c:	subcs	r3, r3, r1, lsl #10
   14770:	cmp	r3, r1, lsl #9
   14774:	adc	r0, r0, r0
   14778:	subcs	r3, r3, r1, lsl #9
   1477c:	cmp	r3, r1, lsl #8
   14780:	adc	r0, r0, r0
   14784:	subcs	r3, r3, r1, lsl #8
   14788:	cmp	r3, r1, lsl #7
   1478c:	adc	r0, r0, r0
   14790:	subcs	r3, r3, r1, lsl #7
   14794:	cmp	r3, r1, lsl #6
   14798:	adc	r0, r0, r0
   1479c:	subcs	r3, r3, r1, lsl #6
   147a0:	cmp	r3, r1, lsl #5
   147a4:	adc	r0, r0, r0
   147a8:	subcs	r3, r3, r1, lsl #5
   147ac:	cmp	r3, r1, lsl #4
   147b0:	adc	r0, r0, r0
   147b4:	subcs	r3, r3, r1, lsl #4
   147b8:	cmp	r3, r1, lsl #3
   147bc:	adc	r0, r0, r0
   147c0:	subcs	r3, r3, r1, lsl #3
   147c4:	cmp	r3, r1, lsl #2
   147c8:	adc	r0, r0, r0
   147cc:	subcs	r3, r3, r1, lsl #2
   147d0:	cmp	r3, r1, lsl #1
   147d4:	adc	r0, r0, r0
   147d8:	subcs	r3, r3, r1, lsl #1
   147dc:	cmp	r3, r1
   147e0:	adc	r0, r0, r0
   147e4:	subcs	r3, r3, r1
   147e8:	cmp	ip, #0
   147ec:	rsbmi	r0, r0, #0
   147f0:	bx	lr
   147f4:	teq	ip, r0
   147f8:	rsbmi	r0, r0, #0
   147fc:	bx	lr
   14800:	movcc	r0, #0
   14804:	asreq	r0, ip, #31
   14808:	orreq	r0, r0, #1
   1480c:	bx	lr
   14810:	clz	r2, r1
   14814:	rsb	r2, r2, #31
   14818:	cmp	ip, #0
   1481c:	lsr	r0, r3, r2
   14820:	rsbmi	r0, r0, #0
   14824:	bx	lr
   14828:	cmp	r0, #0
   1482c:	mvngt	r0, #-2147483648	; 0x80000000
   14830:	movlt	r0, #-2147483648	; 0x80000000
   14834:	b	14858 <abort@plt+0x3ad8>
   14838:	cmp	r1, #0
   1483c:	beq	14828 <abort@plt+0x3aa8>
   14840:	push	{r0, r1, lr}
   14844:	bl	14620 <abort@plt+0x38a0>
   14848:	pop	{r1, r2, lr}
   1484c:	mul	r3, r2, r0
   14850:	sub	r1, r1, r3
   14854:	bx	lr
   14858:	push	{r1, lr}
   1485c:	mov	r0, #8
   14860:	bl	10b7c <raise@plt>
   14864:	pop	{r1, pc}
   14868:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1486c:	mov	r7, r0
   14870:	ldr	r6, [pc, #72]	; 148c0 <abort@plt+0x3b40>
   14874:	ldr	r5, [pc, #72]	; 148c4 <abort@plt+0x3b44>
   14878:	add	r6, pc, r6
   1487c:	add	r5, pc, r5
   14880:	sub	r6, r6, r5
   14884:	mov	r8, r1
   14888:	mov	r9, r2
   1488c:	bl	10b44 <calloc@plt-0x20>
   14890:	asrs	r6, r6, #2
   14894:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14898:	mov	r4, #0
   1489c:	add	r4, r4, #1
   148a0:	ldr	r3, [r5], #4
   148a4:	mov	r2, r9
   148a8:	mov	r1, r8
   148ac:	mov	r0, r7
   148b0:	blx	r3
   148b4:	cmp	r6, r4
   148b8:	bne	1489c <abort@plt+0x3b1c>
   148bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148c0:	muleq	r1, r0, r6
   148c4:	andeq	r1, r1, r8, lsl #13
   148c8:	bx	lr
   148cc:	ldr	r3, [pc, #12]	; 148e0 <abort@plt+0x3b60>
   148d0:	mov	r1, #0
   148d4:	add	r3, pc, r3
   148d8:	ldr	r2, [r3]
   148dc:	b	10cf0 <__cxa_atexit@plt>
   148e0:	strdeq	r1, [r1], -r0

Disassembly of section .fini:

000148e4 <.fini>:
   148e4:	push	{r3, lr}
   148e8:	pop	{r3, pc}
