
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010d2c <.init>:
   10d2c:	push	{r3, lr}
   10d30:	bl	11ae0 <strspn@plt+0xaf4>
   10d34:	pop	{r3, pc}

Disassembly of section .plt:

00010d38 <calloc@plt-0x14>:
   10d38:	push	{lr}		; (str lr, [sp, #-4]!)
   10d3c:	ldr	lr, [pc, #4]	; 10d48 <calloc@plt-0x4>
   10d40:	add	lr, pc, lr
   10d44:	ldr	pc, [lr, #8]!
   10d48:			; <UNDEFINED> instruction: 0x000152b8

00010d4c <calloc@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #696]!	; 0x2b8

00010d58 <fputs_unlocked@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #688]!	; 0x2b0

00010d64 <uselocale@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #680]!	; 0x2a8

00010d70 <strcmp@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #672]!	; 0x2a0

00010d7c <strtol@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #664]!	; 0x298

00010d88 <strcspn@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #656]!	; 0x290

00010d94 <fflush@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #648]!	; 0x288

00010da0 <memmove@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #640]!	; 0x280

00010dac <free@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #632]!	; 0x278

00010db8 <_exit@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #624]!	; 0x270

00010dc4 <memcpy@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #616]!	; 0x268

00010dd0 <mbsinit@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #608]!	; 0x260

00010ddc <strtold@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #600]!	; 0x258

00010de8 <fwrite_unlocked@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #592]!	; 0x250

00010df4 <memcmp@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #584]!	; 0x248

00010e00 <fputc_unlocked@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #576]!	; 0x240

00010e0c <dcgettext@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #568]!	; 0x238

00010e18 <realloc@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #560]!	; 0x230

00010e24 <textdomain@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #552]!	; 0x228

00010e30 <iswprint@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #544]!	; 0x220

00010e3c <lseek64@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #536]!	; 0x218

00010e48 <__ctype_get_mb_cur_max@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #528]!	; 0x210

00010e54 <strcpy@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #520]!	; 0x208

00010e60 <__fpending@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #512]!	; 0x200

00010e6c <ferror_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #504]!	; 0x1f8

00010e78 <mbrtowc@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #496]!	; 0x1f0

00010e84 <error@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e90 <__asprintf_chk@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #480]!	; 0x1e0

00010e9c <malloc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #472]!	; 0x1d8

00010ea8 <__libc_start_main@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #464]!	; 0x1d0

00010eb4 <__freading@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #456]!	; 0x1c8

00010ec0 <__gmon_start__@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #448]!	; 0x1c0

00010ecc <mempcpy@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #440]!	; 0x1b8

00010ed8 <getopt_long@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ee4 <__ctype_b_loc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #424]!	; 0x1a8

00010ef0 <exit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #416]!	; 0x1a0

00010efc <strlen@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #408]!	; 0x198

00010f08 <strchr@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #400]!	; 0x190

00010f14 <__errno_location@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #392]!	; 0x188

00010f20 <__sprintf_chk@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #384]!	; 0x180

00010f2c <__cxa_atexit@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #376]!	; 0x178

00010f38 <memset@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #368]!	; 0x170

00010f44 <__printf_chk@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #360]!	; 0x168

00010f50 <fileno@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #352]!	; 0x160

00010f5c <__fprintf_chk@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #344]!	; 0x158

00010f68 <fclose@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #336]!	; 0x150

00010f74 <fseeko64@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #328]!	; 0x148

00010f80 <setlocale@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #320]!	; 0x140

00010f8c <strrchr@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #312]!	; 0x138

00010f98 <nl_langinfo@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #304]!	; 0x130

00010fa4 <newlocale@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #296]!	; 0x128

00010fb0 <clearerr_unlocked@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #288]!	; 0x120

00010fbc <bindtextdomain@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #280]!	; 0x118

00010fc8 <fputs@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #272]!	; 0x110

00010fd4 <strncmp@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #264]!	; 0x108

00010fe0 <abort@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #256]!	; 0x100

00010fec <strspn@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #248]!	; 0xf8

Disassembly of section .text:

00010ff8 <.text>:
   10ff8:	push	{r4, lr}
   10ffc:	bl	10f14 <__errno_location@plt>
   11000:	mov	r3, #12
   11004:	str	r3, [r0]
   11008:	mov	r0, #0
   1100c:	pop	{r4, pc}
   11010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11014:	mov	r7, r1
   11018:	mov	sl, r0
   1101c:	mov	r4, #0
   11020:	ldr	r5, [pc, #2160]	; 11898 <strspn@plt+0x8ac>
   11024:	vpush	{d8-d13}
   11028:	sub	sp, sp, #92	; 0x5c
   1102c:	add	ip, sp, #56	; 0x38
   11030:	ldr	r6, [pc, #2148]	; 1189c <strspn@plt+0x8b0>
   11034:	ldr	fp, [pc, #2148]	; 118a0 <strspn@plt+0x8b4>
   11038:	ldm	r5, {r0, r1, r2, r3}
   1103c:	add	r5, r5, #16
   11040:	mov	r8, fp
   11044:	stm	ip, {r0, r1, r2, r3}
   11048:	ldr	r0, [r7]
   1104c:	bl	126c4 <strspn@plt+0x16d8>
   11050:	ldr	r1, [pc, #2124]	; 118a4 <strspn@plt+0x8b8>
   11054:	mov	r0, #6
   11058:	bl	10f80 <setlocale@plt>
   1105c:	adds	r0, r0, #0
   11060:	ldr	r1, [pc, #2112]	; 118a8 <strspn@plt+0x8bc>
   11064:	movne	r0, #1
   11068:	strb	r0, [r6, #32]
   1106c:	ldr	r0, [pc, #2104]	; 118ac <strspn@plt+0x8c0>
   11070:	bl	10fbc <bindtextdomain@plt>
   11074:	ldr	r0, [pc, #2096]	; 118ac <strspn@plt+0x8c0>
   11078:	bl	10e24 <textdomain@plt>
   1107c:	ldr	r0, [pc, #2092]	; 118b0 <strspn@plt+0x8c4>
   11080:	bl	14b3c <strspn@plt+0x3b50>
   11084:	ldr	r3, [pc, #2088]	; 118b4 <strspn@plt+0x8c8>
   11088:	str	r3, [r6]
   1108c:	strb	r4, [r6, #33]	; 0x21
   11090:	ldr	r3, [fp]
   11094:	cmp	r3, sl
   11098:	bge	110b8 <strspn@plt+0xcc>
   1109c:	ldr	r3, [r7, r3, lsl #2]
   110a0:	ldrb	r2, [r3]
   110a4:	cmp	r2, #45	; 0x2d
   110a8:	bne	110f4 <strspn@plt+0x108>
   110ac:	ldrb	r3, [r3, #1]
   110b0:	cmp	r3, #46	; 0x2e
   110b4:	bne	110e8 <strspn@plt+0xfc>
   110b8:	ldr	r9, [r8]
   110bc:	subs	r9, sl, r9
   110c0:	bne	111a4 <strspn@plt+0x1b8>
   110c4:	mov	r2, #5
   110c8:	ldr	r1, [pc, #2024]	; 118b8 <strspn@plt+0x8cc>
   110cc:	mov	r0, r9
   110d0:	bl	10e0c <dcgettext@plt>
   110d4:	mov	r2, r0
   110d8:	mov	r1, r9
   110dc:	mov	r0, r1
   110e0:	bl	10e84 <error@plt>
   110e4:	b	11138 <strspn@plt+0x14c>
   110e8:	sub	r3, r3, #48	; 0x30
   110ec:	cmp	r3, #9
   110f0:	bls	110b8 <strspn@plt+0xcc>
   110f4:	mov	r9, #0
   110f8:	mov	r3, r5
   110fc:	ldr	r2, [pc, #1976]	; 118bc <strspn@plt+0x8d0>
   11100:	mov	r1, r7
   11104:	mov	r0, sl
   11108:	str	r9, [sp]
   1110c:	bl	10ed8 <getopt_long@plt>
   11110:	cmn	r0, #1
   11114:	beq	110b8 <strspn@plt+0xcc>
   11118:	cmp	r0, #102	; 0x66
   1111c:	beq	1115c <strspn@plt+0x170>
   11120:	bgt	11140 <strspn@plt+0x154>
   11124:	cmn	r0, #3
   11128:	beq	11178 <strspn@plt+0x18c>
   1112c:	cmn	r0, #2
   11130:	moveq	r0, r9
   11134:	beq	1113c <strspn@plt+0x150>
   11138:	mov	r0, #1
   1113c:	bl	11f60 <strspn@plt+0xf74>
   11140:	cmp	r0, #115	; 0x73
   11144:	beq	11168 <strspn@plt+0x17c>
   11148:	cmp	r0, #119	; 0x77
   1114c:	bne	11138 <strspn@plt+0x14c>
   11150:	mov	r3, #1
   11154:	strb	r3, [r6, #33]	; 0x21
   11158:	b	11090 <strspn@plt+0xa4>
   1115c:	ldr	r3, [pc, #1884]	; 118c0 <strspn@plt+0x8d4>
   11160:	ldr	r4, [r3]
   11164:	b	11090 <strspn@plt+0xa4>
   11168:	ldr	r3, [pc, #1872]	; 118c0 <strspn@plt+0x8d4>
   1116c:	ldr	r3, [r3]
   11170:	str	r3, [r6]
   11174:	b	11090 <strspn@plt+0xa4>
   11178:	ldr	r3, [pc, #1860]	; 118c4 <strspn@plt+0x8d8>
   1117c:	ldr	r0, [pc, #1860]	; 118c8 <strspn@plt+0x8dc>
   11180:	ldr	r2, [pc, #1860]	; 118cc <strspn@plt+0x8e0>
   11184:	stm	sp, {r3, r9}
   11188:	ldr	r3, [pc, #1856]	; 118d0 <strspn@plt+0x8e4>
   1118c:	ldr	r1, [pc, #1856]	; 118d4 <strspn@plt+0x8e8>
   11190:	ldr	r0, [r0]
   11194:	ldr	r3, [r3]
   11198:	bl	14110 <strspn@plt+0x3124>
   1119c:	mov	r0, #0
   111a0:	bl	10ef0 <exit@plt>
   111a4:	cmp	r9, #3
   111a8:	bls	111e8 <strspn@plt+0x1fc>
   111ac:	mov	r2, #5
   111b0:	ldr	r1, [pc, #1824]	; 118d8 <strspn@plt+0x8ec>
   111b4:	mov	r0, #0
   111b8:	bl	10e0c <dcgettext@plt>
   111bc:	ldr	r3, [r8]
   111c0:	mov	r4, r0
   111c4:	add	r3, r3, #3
   111c8:	ldr	r0, [r7, r3, lsl #2]
   111cc:	bl	13cc4 <strspn@plt+0x2cd8>
   111d0:	mov	r1, #0
   111d4:	mov	r3, r0
   111d8:	mov	r2, r4
   111dc:	mov	r0, r1
   111e0:	bl	10e84 <error@plt>
   111e4:	b	11138 <strspn@plt+0x14c>
   111e8:	cmp	r4, #0
   111ec:	streq	r4, [sp, #12]
   111f0:	streq	r4, [sp, #24]
   111f4:	beq	113f0 <strspn@plt+0x404>
   111f8:	mov	r3, #0
   111fc:	str	r3, [sp, #24]
   11200:	b	11258 <strspn@plt+0x26c>
   11204:	cmp	fp, #0
   11208:	bne	1123c <strspn@plt+0x250>
   1120c:	ldr	r1, [pc, #1736]	; 118dc <strspn@plt+0x8f0>
   11210:	mov	r2, #5
   11214:	mov	r0, #0
   11218:	bl	10e0c <dcgettext@plt>
   1121c:	mov	r5, r0
   11220:	mov	r0, r4
   11224:	bl	13cc4 <strspn@plt+0x2cd8>
   11228:	mov	r3, r0
   1122c:	mov	r2, r5
   11230:	mov	r1, #0
   11234:	mov	r0, #1
   11238:	bl	10e84 <error@plt>
   1123c:	ldr	r2, [sp, #24]
   11240:	cmp	fp, #37	; 0x25
   11244:	add	r2, r2, #1
   11248:	str	r2, [sp, #24]
   1124c:	moveq	r2, #2
   11250:	movne	r2, #1
   11254:	add	r3, r3, r2
   11258:	ldrb	fp, [r4, r3]
   1125c:	cmp	fp, #37	; 0x25
   11260:	bne	11204 <strspn@plt+0x218>
   11264:	add	r5, r3, #1
   11268:	ldrb	r2, [r4, r5]
   1126c:	add	r0, r4, r5
   11270:	cmp	r2, #37	; 0x25
   11274:	beq	1123c <strspn@plt+0x250>
   11278:	ldr	r1, [pc, #1632]	; 118e0 <strspn@plt+0x8f4>
   1127c:	bl	10fec <strspn@plt>
   11280:	add	r5, r5, r0
   11284:	ldr	r1, [pc, #1624]	; 118e4 <strspn@plt+0x8f8>
   11288:	add	r0, r4, r5
   1128c:	bl	10fec <strspn@plt>
   11290:	add	r5, r5, r0
   11294:	ldrb	r3, [r4, r5]
   11298:	cmp	r3, #46	; 0x2e
   1129c:	bne	112b4 <strspn@plt+0x2c8>
   112a0:	add	r5, r5, #1
   112a4:	ldr	r1, [pc, #1592]	; 118e4 <strspn@plt+0x8f8>
   112a8:	add	r0, r4, r5
   112ac:	bl	10fec <strspn@plt>
   112b0:	add	r5, r5, r0
   112b4:	ldrb	r0, [r4, r5]
   112b8:	cmp	r0, #76	; 0x4c
   112bc:	movne	r3, r5
   112c0:	addeq	r3, r5, #1
   112c4:	ldrb	fp, [r4, r3]
   112c8:	add	r2, r4, r3
   112cc:	str	r2, [sp, #16]
   112d0:	cmp	fp, #0
   112d4:	moveq	r2, #5
   112d8:	ldreq	r1, [pc, #1544]	; 118e8 <strspn@plt+0x8fc>
   112dc:	beq	11214 <strspn@plt+0x228>
   112e0:	mov	r1, fp
   112e4:	str	r3, [sp, #12]
   112e8:	ldr	r0, [pc, #1532]	; 118ec <strspn@plt+0x900>
   112ec:	bl	10f08 <strchr@plt>
   112f0:	ldr	r3, [sp, #12]
   112f4:	subs	fp, r0, #0
   112f8:	addne	r0, r3, #1
   112fc:	movne	r3, #0
   11300:	strne	r3, [sp, #12]
   11304:	bne	11364 <strspn@plt+0x378>
   11308:	mov	r2, #5
   1130c:	ldr	r1, [pc, #1500]	; 118f0 <strspn@plt+0x904>
   11310:	bl	10e0c <dcgettext@plt>
   11314:	mov	r5, r0
   11318:	mov	r0, r4
   1131c:	bl	13cc4 <strspn@plt+0x2cd8>
   11320:	ldr	r3, [sp, #16]
   11324:	mov	r2, r5
   11328:	mov	r1, fp
   1132c:	ldrb	r3, [r3]
   11330:	str	r3, [sp]
   11334:	mov	r3, r0
   11338:	mov	r0, #1
   1133c:	bl	10e84 <error@plt>
   11340:	cmp	fp, #0
   11344:	beq	1138c <strspn@plt+0x3a0>
   11348:	ldr	r3, [sp, #12]
   1134c:	cmp	fp, #37	; 0x25
   11350:	add	r3, r3, #1
   11354:	str	r3, [sp, #12]
   11358:	moveq	r3, #2
   1135c:	movne	r3, #1
   11360:	add	r0, r0, r3
   11364:	ldrb	fp, [r4, r0]
   11368:	cmp	fp, #37	; 0x25
   1136c:	bne	11340 <strspn@plt+0x354>
   11370:	add	r3, r4, r0
   11374:	ldrb	r3, [r3, #1]
   11378:	cmp	r3, #37	; 0x25
   1137c:	beq	11348 <strspn@plt+0x35c>
   11380:	mov	r2, #5
   11384:	ldr	r1, [pc, #1384]	; 118f4 <strspn@plt+0x908>
   11388:	b	11214 <strspn@plt+0x228>
   1138c:	add	r0, r0, #2
   11390:	bl	141d8 <strspn@plt+0x31ec>
   11394:	mov	r1, r4
   11398:	mov	r2, r5
   1139c:	bl	10dc4 <memcpy@plt>
   113a0:	mov	r2, #76	; 0x4c
   113a4:	mov	r3, r0
   113a8:	ldr	r1, [sp, #16]
   113ac:	strb	r2, [r0, r5]
   113b0:	add	r0, r5, #1
   113b4:	add	r0, r3, r0
   113b8:	str	r3, [sp, #16]
   113bc:	bl	10e54 <strcpy@plt>
   113c0:	ldrb	r2, [r6, #33]	; 0x21
   113c4:	cmp	r2, #0
   113c8:	ldreq	r3, [sp, #16]
   113cc:	moveq	r4, r3
   113d0:	beq	113f0 <strspn@plt+0x404>
   113d4:	mov	r2, #5
   113d8:	ldr	r1, [pc, #1304]	; 118f8 <strspn@plt+0x90c>
   113dc:	mov	r0, fp
   113e0:	bl	10e0c <dcgettext@plt>
   113e4:	mov	r2, r0
   113e8:	mov	r1, fp
   113ec:	b	110dc <strspn@plt+0xf0>
   113f0:	cmp	r9, #3
   113f4:	movne	r2, #1
   113f8:	bne	1141c <strspn@plt+0x430>
   113fc:	ldr	r3, [r8]
   11400:	add	r3, r3, #1
   11404:	ldr	r5, [r7, r3, lsl #2]
   11408:	mov	r0, r5
   1140c:	bl	11b98 <strspn@plt+0xbac>
   11410:	cmp	r0, #0
   11414:	bne	1157c <strspn@plt+0x590>
   11418:	mov	r2, #0
   1141c:	ldr	r5, [r8]
   11420:	str	r2, [sp, #28]
   11424:	ldr	fp, [r7, r5, lsl #2]
   11428:	lsl	r3, r5, #2
   1142c:	str	r3, [sp, #16]
   11430:	mov	r0, fp
   11434:	bl	11b98 <strspn@plt+0xbac>
   11438:	cmp	r0, #0
   1143c:	beq	114e8 <strspn@plt+0x4fc>
   11440:	cmp	r9, #1
   11444:	beq	1148c <strspn@plt+0x4a0>
   11448:	ldr	r3, [sp, #16]
   1144c:	add	r3, r7, r3
   11450:	ldr	r0, [r3, #4]
   11454:	str	r3, [sp, #16]
   11458:	bl	11b98 <strspn@plt+0xbac>
   1145c:	cmp	r0, #0
   11460:	beq	114e8 <strspn@plt+0x4fc>
   11464:	cmp	r9, #3
   11468:	bne	1148c <strspn@plt+0x4a0>
   1146c:	ldr	r2, [sp, #28]
   11470:	cmp	r2, #0
   11474:	beq	114e8 <strspn@plt+0x4fc>
   11478:	ldr	r3, [sp, #16]
   1147c:	ldr	r0, [r3, #8]
   11480:	bl	11b98 <strspn@plt+0xbac>
   11484:	cmp	r0, #0
   11488:	beq	114e8 <strspn@plt+0x4fc>
   1148c:	ldrb	r3, [r6, #33]	; 0x21
   11490:	eor	r3, r3, #1
   11494:	cmp	r4, #0
   11498:	movne	r3, #0
   1149c:	andeq	r3, r3, #1
   114a0:	cmp	r3, #0
   114a4:	beq	114e8 <strspn@plt+0x4fc>
   114a8:	ldr	r0, [r6]
   114ac:	bl	10efc <strlen@plt>
   114b0:	cmp	r0, #1
   114b4:	bne	114e8 <strspn@plt+0x4fc>
   114b8:	ldr	r3, [pc, #1084]	; 118fc <strspn@plt+0x910>
   114bc:	cmp	r9, #1
   114c0:	add	r9, r5, r9
   114c4:	sub	r9, r9, #-1073741823	; 0xc0000001
   114c8:	ldrd	r0, [sp, #56]	; 0x38
   114cc:	moveq	fp, r3
   114d0:	bl	14a98 <strspn@plt+0x3aac>
   114d4:	mov	r2, r0
   114d8:	mov	r3, r1
   114dc:	ldr	r1, [r7, r9, lsl #2]
   114e0:	mov	r0, fp
   114e4:	bl	11c20 <strspn@plt+0xc34>
   114e8:	ldr	r3, [r8]
   114ec:	add	r0, sp, #72	; 0x48
   114f0:	add	r2, r3, #1
   114f4:	ldr	r1, [r7, r3, lsl #2]
   114f8:	str	r2, [r8]
   114fc:	bl	121f8 <strspn@plt+0x120c>
   11500:	ldr	r3, [r8]
   11504:	vldr	d9, [sp, #72]	; 0x48
   11508:	ldr	fp, [sp, #80]	; 0x50
   1150c:	cmp	r3, sl
   11510:	ldr	r5, [sp, #84]	; 0x54
   11514:	bge	1168c <strspn@plt+0x6a0>
   11518:	add	r2, r3, #1
   1151c:	add	r0, sp, #72	; 0x48
   11520:	ldr	r1, [r7, r3, lsl #2]
   11524:	str	r2, [r8]
   11528:	bl	121f8 <strspn@plt+0x120c>
   1152c:	ldr	r2, [r8]
   11530:	vldr	d8, [sp, #72]	; 0x48
   11534:	ldr	r9, [sp, #80]	; 0x50
   11538:	cmp	r2, sl
   1153c:	ldr	r3, [sp, #84]	; 0x54
   11540:	bge	115e0 <strspn@plt+0x5f4>
   11544:	vcmp.f64	d8, #0.0
   11548:	vstr	d8, [sp, #56]	; 0x38
   1154c:	str	r9, [sp, #64]	; 0x40
   11550:	str	r3, [sp, #68]	; 0x44
   11554:	vmrs	APSR_nzcv, fpscr
   11558:	bne	115c0 <strspn@plt+0x5d4>
   1155c:	mov	r2, #5
   11560:	ldr	r1, [pc, #920]	; 11900 <strspn@plt+0x914>
   11564:	mov	r0, #0
   11568:	bl	10e0c <dcgettext@plt>
   1156c:	ldr	r3, [r8]
   11570:	mov	r4, r0
   11574:	sub	r3, r3, #-1073741823	; 0xc0000001
   11578:	b	111c8 <strspn@plt+0x1dc>
   1157c:	ldr	r3, [pc, #896]	; 11904 <strspn@plt+0x918>
   11580:	add	r2, sp, #56	; 0x38
   11584:	mov	r1, #0
   11588:	mov	r0, r5
   1158c:	bl	144d0 <strspn@plt+0x34e4>
   11590:	cmp	r0, #0
   11594:	beq	11418 <strspn@plt+0x42c>
   11598:	vldr	d7, [sp, #56]	; 0x38
   1159c:	vcmpe.f64	d7, #0.0
   115a0:	vmrs	APSR_nzcv, fpscr
   115a4:	ble	11418 <strspn@plt+0x42c>
   115a8:	vldr	d6, [pc, #720]	; 11880 <strspn@plt+0x894>
   115ac:	vcmpe.f64	d7, d6
   115b0:	vmrs	APSR_nzcv, fpscr
   115b4:	movls	r2, #1
   115b8:	movhi	r2, #0
   115bc:	b	1141c <strspn@plt+0x430>
   115c0:	add	r3, r2, #1
   115c4:	add	r0, sp, #72	; 0x48
   115c8:	ldr	r1, [r7, r2, lsl #2]
   115cc:	str	r3, [r8]
   115d0:	bl	121f8 <strspn@plt+0x120c>
   115d4:	vldr	d8, [sp, #72]	; 0x48
   115d8:	ldr	r9, [sp, #80]	; 0x50
   115dc:	ldr	r3, [sp, #84]	; 0x54
   115e0:	cmp	r5, #0
   115e4:	bne	117e4 <strspn@plt+0x7f8>
   115e8:	ldr	r5, [sp, #68]	; 0x44
   115ec:	orrs	r5, r3, r5
   115f0:	movne	r5, #0
   115f4:	bne	117e4 <strspn@plt+0x7f8>
   115f8:	vldr	d10, [pc, #648]	; 11888 <strspn@plt+0x89c>
   115fc:	vmul.f64	d6, d9, d10
   11600:	vcmp.f64	d6, d10
   11604:	vmrs	APSR_nzcv, fpscr
   11608:	bne	117e0 <strspn@plt+0x7f4>
   1160c:	vcmpe.f64	d9, d10
   11610:	vmrs	APSR_nzcv, fpscr
   11614:	blt	117e0 <strspn@plt+0x7f4>
   11618:	vcmpe.f64	d8, d10
   1161c:	vmrs	APSR_nzcv, fpscr
   11620:	blt	117e0 <strspn@plt+0x7f4>
   11624:	vldr	d7, [sp, #56]	; 0x38
   11628:	vcmpe.f64	d7, d10
   1162c:	vmrs	APSR_nzcv, fpscr
   11630:	ble	117e0 <strspn@plt+0x7f4>
   11634:	vldr	d6, [pc, #580]	; 11880 <strspn@plt+0x894>
   11638:	vcmpe.f64	d7, d6
   1163c:	vmrs	APSR_nzcv, fpscr
   11640:	bhi	117e0 <strspn@plt+0x7f4>
   11644:	ldrb	r3, [r6, #33]	; 0x21
   11648:	cmp	r3, #0
   1164c:	bne	117e0 <strspn@plt+0x7f4>
   11650:	cmp	r4, #0
   11654:	bne	117ec <strspn@plt+0x800>
   11658:	ldr	r0, [r6]
   1165c:	bl	10efc <strlen@plt>
   11660:	cmp	r0, #1
   11664:	mov	r1, r0
   11668:	movne	r3, r5
   1166c:	bne	11710 <strspn@plt+0x724>
   11670:	ldr	r2, [pc, #656]	; 11908 <strspn@plt+0x91c>
   11674:	add	r0, sp, #32
   11678:	vstr	d9, [sp]
   1167c:	bl	10e90 <__asprintf_chk@plt>
   11680:	cmp	r0, #0
   11684:	bge	116a4 <strspn@plt+0x6b8>
   11688:	bl	14490 <strspn@plt+0x34a4>
   1168c:	mov	r9, fp
   11690:	vmov.f64	d8, d9
   11694:	mov	r3, r5
   11698:	mov	fp, #1
   1169c:	vldr	d9, [pc, #492]	; 11890 <strspn@plt+0x8a4>
   116a0:	b	115e8 <strspn@plt+0x5fc>
   116a4:	vmul.f64	d10, d8, d10
   116a8:	vcmp.f64	d10, #0.0
   116ac:	vmrs	APSR_nzcv, fpscr
   116b0:	beq	117c0 <strspn@plt+0x7d4>
   116b4:	ldr	r0, [pc, #592]	; 1190c <strspn@plt+0x920>
   116b8:	bl	14474 <strspn@plt+0x3488>
   116bc:	str	r0, [sp, #36]	; 0x24
   116c0:	ldr	r4, [sp, #32]
   116c4:	ldrb	r3, [r4]
   116c8:	cmp	r3, #45	; 0x2d
   116cc:	beq	116fc <strspn@plt+0x710>
   116d0:	ldr	r7, [sp, #36]	; 0x24
   116d4:	ldrb	r3, [r7]
   116d8:	cmp	r3, #45	; 0x2d
   116dc:	beq	116fc <strspn@plt+0x710>
   116e0:	ldrd	r0, [sp, #56]	; 0x38
   116e4:	bl	14a98 <strspn@plt+0x3aac>
   116e8:	mov	r2, r0
   116ec:	mov	r3, r1
   116f0:	mov	r0, r4
   116f4:	mov	r1, r7
   116f8:	bl	11c20 <strspn@plt+0xc34>
   116fc:	ldr	r0, [sp, #32]
   11700:	bl	12674 <strspn@plt+0x1688>
   11704:	ldr	r0, [sp, #36]	; 0x24
   11708:	bl	12674 <strspn@plt+0x1688>
   1170c:	mov	r3, #0
   11710:	ldr	r2, [sp, #68]	; 0x44
   11714:	cmp	r5, r2
   11718:	movge	r2, r5
   1171c:	cmn	r2, #-2147483647	; 0x80000001
   11720:	cmnne	r3, #-2147483647	; 0x80000001
   11724:	beq	11864 <strspn@plt+0x878>
   11728:	ldrb	r1, [r6, #33]	; 0x21
   1172c:	cmp	r1, #0
   11730:	beq	11848 <strspn@plt+0x85c>
   11734:	sub	r1, r2, r5
   11738:	add	fp, r1, fp
   1173c:	sub	r1, r2, r3
   11740:	add	r9, r1, r9
   11744:	adds	r1, r3, #0
   11748:	movne	r1, #1
   1174c:	cmp	r2, #0
   11750:	movne	r1, #0
   11754:	cmp	r1, #0
   11758:	subne	r9, r9, #1
   1175c:	adds	r1, r2, #0
   11760:	movne	r1, #1
   11764:	cmp	r3, #0
   11768:	moveq	r3, r1
   1176c:	movne	r3, #0
   11770:	cmp	r3, #0
   11774:	addne	r9, r9, #1
   11778:	cmp	r5, #0
   1177c:	moveq	r5, r1
   11780:	movne	r5, #0
   11784:	cmp	r5, #0
   11788:	addne	fp, fp, #1
   1178c:	cmp	fp, r9
   11790:	movcc	fp, r9
   11794:	cmp	fp, #0
   11798:	blt	11864 <strspn@plt+0x878>
   1179c:	ldr	r3, [pc, #364]	; 11910 <strspn@plt+0x924>
   117a0:	mov	r1, #1
   117a4:	str	fp, [sp]
   117a8:	ldr	r0, [pc, #356]	; 11914 <strspn@plt+0x928>
   117ac:	str	r2, [sp, #4]
   117b0:	mov	r2, #28
   117b4:	bl	10f20 <__sprintf_chk@plt>
   117b8:	ldr	r4, [pc, #340]	; 11914 <strspn@plt+0x928>
   117bc:	b	117ec <strspn@plt+0x800>
   117c0:	ldr	r2, [pc, #320]	; 11908 <strspn@plt+0x91c>
   117c4:	mov	r1, #1
   117c8:	add	r0, sp, #36	; 0x24
   117cc:	vstr	d8, [sp]
   117d0:	bl	10e90 <__asprintf_chk@plt>
   117d4:	cmp	r0, #0
   117d8:	bge	116c0 <strspn@plt+0x6d4>
   117dc:	b	11688 <strspn@plt+0x69c>
   117e0:	mov	r3, r5
   117e4:	cmp	r4, #0
   117e8:	beq	11710 <strspn@plt+0x724>
   117ec:	vldr	d12, [sp, #56]	; 0x38
   117f0:	vcmpe.f64	d12, #0.0
   117f4:	vmrs	APSR_nzcv, fpscr
   117f8:	vcmpe.f64	d9, d8
   117fc:	bpl	1186c <strspn@plt+0x880>
   11800:	vmrs	APSR_nzcv, fpscr
   11804:	movmi	r5, #1
   11808:	movpl	r5, #0
   1180c:	cmp	r5, #0
   11810:	bne	1119c <strspn@plt+0x1b0>
   11814:	vldr	d11, [pc, #116]	; 11890 <strspn@plt+0x8a4>
   11818:	vstr	d9, [sp, #16]
   1181c:	ldr	r8, [pc, #164]	; 118c8 <strspn@plt+0x8dc>
   11820:	ldr	sl, [pc, #220]	; 11904 <strspn@plt+0x918>
   11824:	ldr	r9, [pc, #120]	; 118a4 <strspn@plt+0x8b8>
   11828:	vmov.f64	d13, d11
   1182c:	mov	r1, r4
   11830:	mov	r0, #1
   11834:	ldrd	r2, [sp, #16]
   11838:	bl	10f44 <__printf_chk@plt>
   1183c:	cmp	r0, #0
   11840:	bge	11928 <strspn@plt+0x93c>
   11844:	bl	11be0 <strspn@plt+0xbf4>
   11848:	ldr	r3, [pc, #200]	; 11918 <strspn@plt+0x92c>
   1184c:	mov	r1, #1
   11850:	str	r2, [sp]
   11854:	mov	r2, #28
   11858:	ldr	r0, [pc, #180]	; 11914 <strspn@plt+0x928>
   1185c:	bl	10f20 <__sprintf_chk@plt>
   11860:	b	117b8 <strspn@plt+0x7cc>
   11864:	ldr	r4, [pc, #176]	; 1191c <strspn@plt+0x930>
   11868:	b	117ec <strspn@plt+0x800>
   1186c:	vmrs	APSR_nzcv, fpscr
   11870:	movgt	r5, #1
   11874:	movle	r5, #0
   11878:	b	1180c <strspn@plt+0x820>
   1187c:	nop	{0}
   11880:	andeq	r0, r0, r0
   11884:	rsbmi	r0, r9, r0
	...
   11894:	svccc	0x00f00000	; IMB
   11898:	andeq	r4, r1, r0, lsr #23
   1189c:	andeq	r6, r2, r8, ror #2
   118a0:	andeq	r6, r2, r0, asr r1
   118a4:	andeq	r5, r1, r2, lsr r2
   118a8:	andeq	r5, r1, r8, lsl #5
   118ac:	muleq	r1, r0, r1
   118b0:	andeq	r2, r1, r0, lsr #11
   118b4:	andeq	r5, r1, r1, lsr r2
   118b8:			; <UNDEFINED> instruction: 0x000152b6
   118bc:	andeq	r5, r1, r0, lsr #5
   118c0:	andeq	r6, r2, r0, ror #2
   118c4:	andeq	r5, r1, r7, lsr #5
   118c8:	andeq	r6, r2, ip, asr r1
   118cc:	andeq	r5, r1, ip, lsl #3
   118d0:	strdeq	r6, [r2], -ip
   118d4:	andeq	r4, r1, sp, lsr #24
   118d8:	andeq	r5, r1, r6, asr #5
   118dc:	ldrdeq	r5, [r1], -r7
   118e0:	strdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   118e4:	andeq	r4, r1, r2, lsl ip
   118e8:	strdeq	r5, [r1], -ip
   118ec:	andeq	r5, r1, r1, lsl r3
   118f0:	andeq	r5, r1, sl, lsl r3
   118f4:	andeq	r5, r1, pc, lsr r3
   118f8:	andeq	r5, r1, r4, ror #6
   118fc:	andeq	r5, r1, r2, lsl #5
   11900:	andeq	r5, r1, r9, lsr #7
   11904:	andeq	r2, r1, r8, lsl #10
   11908:	andeq	r5, r1, sl, asr #7
   1190c:	andeq	r4, r1, r9, lsr #24
   11910:	ldrdeq	r5, [r1], -r0
   11914:	andeq	r6, r2, ip, ror #2
   11918:	ldrdeq	r5, [r1], -fp
   1191c:	andeq	r5, r1, r4, lsl #5
   11920:	andeq	r5, r1, r3, ror #7
   11924:	andeq	r4, r1, r0, lsl ip
   11928:	cmp	r5, #0
   1192c:	bne	11a8c <strspn@plt+0xaa0>
   11930:	vmov.f64	d10, d9
   11934:	vcmpe.f64	d12, #0.0
   11938:	vmla.f64	d10, d12, d11
   1193c:	vmrs	APSR_nzcv, fpscr
   11940:	vcmpe.f64	d10, d8
   11944:	bpl	11a74 <strspn@plt+0xa88>
   11948:	vmrs	APSR_nzcv, fpscr
   1194c:	movmi	r5, #1
   11950:	movpl	r5, #0
   11954:	cmp	r5, #0
   11958:	beq	11a54 <strspn@plt+0xa68>
   1195c:	ldrb	r7, [r6, #32]
   11960:	cmp	r7, #0
   11964:	beq	11974 <strspn@plt+0x988>
   11968:	ldr	r1, [pc, #-80]	; 11920 <strspn@plt+0x934>
   1196c:	mov	r0, #1
   11970:	bl	10f80 <setlocale@plt>
   11974:	mov	r2, r4
   11978:	mov	r1, #1
   1197c:	vstr	d10, [sp]
   11980:	add	r0, sp, #40	; 0x28
   11984:	bl	10e90 <__asprintf_chk@plt>
   11988:	cmp	r7, #0
   1198c:	mov	fp, r0
   11990:	beq	119a0 <strspn@plt+0x9b4>
   11994:	mov	r1, r9
   11998:	mov	r0, #1
   1199c:	bl	10f80 <setlocale@plt>
   119a0:	cmp	fp, #0
   119a4:	blt	11688 <strspn@plt+0x69c>
   119a8:	ldr	r3, [sp, #12]
   119ac:	mov	r7, #0
   119b0:	add	r2, sp, #48	; 0x30
   119b4:	mov	r1, r7
   119b8:	ldr	ip, [sp, #24]
   119bc:	sub	fp, fp, r3
   119c0:	ldr	r3, [sp, #40]	; 0x28
   119c4:	strb	r7, [r3, fp]
   119c8:	mov	r3, sl
   119cc:	ldr	r0, [sp, #40]	; 0x28
   119d0:	add	r0, r0, ip
   119d4:	bl	144d0 <strspn@plt+0x34e4>
   119d8:	subs	fp, r0, #0
   119dc:	beq	11a44 <strspn@plt+0xa58>
   119e0:	vldr	d7, [sp, #48]	; 0x30
   119e4:	vcmp.f64	d7, d8
   119e8:	vmrs	APSR_nzcv, fpscr
   119ec:	bne	11a84 <strspn@plt+0xa98>
   119f0:	vldr	d7, [sp, #16]
   119f4:	mov	r2, r4
   119f8:	mov	r1, #1
   119fc:	add	r0, sp, #44	; 0x2c
   11a00:	vstr	d7, [sp]
   11a04:	str	r7, [sp, #44]	; 0x2c
   11a08:	bl	10e90 <__asprintf_chk@plt>
   11a0c:	cmp	r0, #0
   11a10:	blt	11688 <strspn@plt+0x69c>
   11a14:	ldr	r3, [sp, #12]
   11a18:	sub	r0, r0, r3
   11a1c:	ldr	r3, [sp, #44]	; 0x2c
   11a20:	strb	r7, [r3, r0]
   11a24:	ldr	r1, [sp, #40]	; 0x28
   11a28:	ldr	r7, [sp, #44]	; 0x2c
   11a2c:	mov	r0, r7
   11a30:	bl	10d70 <strcmp@plt>
   11a34:	adds	fp, r0, #0
   11a38:	mov	r0, r7
   11a3c:	movne	fp, #1
   11a40:	bl	12674 <strspn@plt+0x1688>
   11a44:	ldr	r0, [sp, #40]	; 0x28
   11a48:	bl	12674 <strspn@plt+0x1688>
   11a4c:	cmp	fp, #0
   11a50:	beq	11a8c <strspn@plt+0xaa0>
   11a54:	ldr	r0, [r6]
   11a58:	ldr	r1, [r8]
   11a5c:	bl	10d58 <fputs_unlocked@plt>
   11a60:	cmn	r0, #1
   11a64:	beq	11844 <strspn@plt+0x858>
   11a68:	vadd.f64	d11, d11, d13
   11a6c:	vstr	d10, [sp, #16]
   11a70:	b	1182c <strspn@plt+0x840>
   11a74:	vmrs	APSR_nzcv, fpscr
   11a78:	movgt	r5, #1
   11a7c:	movle	r5, #0
   11a80:	b	11954 <strspn@plt+0x968>
   11a84:	mov	fp, r7
   11a88:	b	11a44 <strspn@plt+0xa58>
   11a8c:	ldr	r0, [pc, #-368]	; 11924 <strspn@plt+0x938>
   11a90:	ldr	r1, [r8]
   11a94:	bl	10d58 <fputs_unlocked@plt>
   11a98:	cmn	r0, #1
   11a9c:	bne	1119c <strspn@plt+0x1b0>
   11aa0:	b	11844 <strspn@plt+0x858>
   11aa4:	mov	fp, #0
   11aa8:	mov	lr, #0
   11aac:	pop	{r1}		; (ldr r1, [sp], #4)
   11ab0:	mov	r2, sp
   11ab4:	push	{r2}		; (str r2, [sp, #-4]!)
   11ab8:	push	{r0}		; (str r0, [sp, #-4]!)
   11abc:	ldr	ip, [pc, #16]	; 11ad4 <strspn@plt+0xae8>
   11ac0:	push	{ip}		; (str ip, [sp, #-4]!)
   11ac4:	ldr	r0, [pc, #12]	; 11ad8 <strspn@plt+0xaec>
   11ac8:	ldr	r3, [pc, #12]	; 11adc <strspn@plt+0xaf0>
   11acc:	bl	10ea8 <__libc_start_main@plt>
   11ad0:	bl	10fe0 <abort@plt>
   11ad4:	andeq	r4, r1, r8, lsr fp
   11ad8:	andeq	r1, r1, r0, lsl r0
   11adc:	ldrdeq	r4, [r1], -r8
   11ae0:	ldr	r3, [pc, #20]	; 11afc <strspn@plt+0xb10>
   11ae4:	ldr	r2, [pc, #20]	; 11b00 <strspn@plt+0xb14>
   11ae8:	add	r3, pc, r3
   11aec:	ldr	r2, [r3, r2]
   11af0:	cmp	r2, #0
   11af4:	bxeq	lr
   11af8:	b	10ec0 <__gmon_start__@plt>
   11afc:	andeq	r4, r1, r0, lsl r5
   11b00:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11b04:	ldr	r0, [pc, #24]	; 11b24 <strspn@plt+0xb38>
   11b08:	ldr	r3, [pc, #24]	; 11b28 <strspn@plt+0xb3c>
   11b0c:	cmp	r3, r0
   11b10:	bxeq	lr
   11b14:	ldr	r3, [pc, #16]	; 11b2c <strspn@plt+0xb40>
   11b18:	cmp	r3, #0
   11b1c:	bxeq	lr
   11b20:	bx	r3
   11b24:	andeq	r6, r2, r4, asr #2
   11b28:	andeq	r6, r2, r4, asr #2
   11b2c:	andeq	r0, r0, r0
   11b30:	ldr	r0, [pc, #36]	; 11b5c <strspn@plt+0xb70>
   11b34:	ldr	r1, [pc, #36]	; 11b60 <strspn@plt+0xb74>
   11b38:	sub	r1, r1, r0
   11b3c:	asr	r1, r1, #2
   11b40:	add	r1, r1, r1, lsr #31
   11b44:	asrs	r1, r1, #1
   11b48:	bxeq	lr
   11b4c:	ldr	r3, [pc, #16]	; 11b64 <strspn@plt+0xb78>
   11b50:	cmp	r3, #0
   11b54:	bxeq	lr
   11b58:	bx	r3
   11b5c:	andeq	r6, r2, r4, asr #2
   11b60:	andeq	r6, r2, r4, asr #2
   11b64:	andeq	r0, r0, r0
   11b68:	push	{r4, lr}
   11b6c:	ldr	r4, [pc, #24]	; 11b8c <strspn@plt+0xba0>
   11b70:	ldrb	r3, [r4]
   11b74:	cmp	r3, #0
   11b78:	popne	{r4, pc}
   11b7c:	bl	11b04 <strspn@plt+0xb18>
   11b80:	mov	r3, #1
   11b84:	strb	r3, [r4]
   11b88:	pop	{r4, pc}
   11b8c:	andeq	r6, r2, r4, ror #2
   11b90:	b	11b30 <strspn@plt+0xb44>
   11b94:	andeq	r0, r0, r0
   11b98:	ldrb	r2, [r0]
   11b9c:	sub	r2, r2, #48	; 0x30
   11ba0:	cmp	r2, #9
   11ba4:	bhi	11bd4 <strspn@plt+0xbe8>
   11ba8:	push	{r4, r5, r6, lr}
   11bac:	mov	r5, r0
   11bb0:	bl	10efc <strlen@plt>
   11bb4:	mov	r4, r0
   11bb8:	ldr	r1, [pc, #28]	; 11bdc <strspn@plt+0xbf0>
   11bbc:	mov	r0, r5
   11bc0:	bl	10fec <strspn@plt>
   11bc4:	sub	r0, r0, r4
   11bc8:	clz	r0, r0
   11bcc:	lsr	r0, r0, #5
   11bd0:	pop	{r4, r5, r6, pc}
   11bd4:	mov	r0, #0
   11bd8:	bx	lr
   11bdc:	andeq	r4, r1, r2, lsl ip
   11be0:	ldr	r3, [pc, #48]	; 11c18 <strspn@plt+0xc2c>
   11be4:	push	{r4, lr}
   11be8:	ldr	r0, [r3]
   11bec:	bl	10fb0 <clearerr_unlocked@plt>
   11bf0:	bl	10f14 <__errno_location@plt>
   11bf4:	ldr	r4, [r0]
   11bf8:	mov	r2, #5
   11bfc:	mov	r0, #0
   11c00:	ldr	r1, [pc, #20]	; 11c1c <strspn@plt+0xc30>
   11c04:	bl	10e0c <dcgettext@plt>
   11c08:	mov	r2, r0
   11c0c:	mov	r0, #1
   11c10:	mov	r1, r4
   11c14:	bl	10e84 <error@plt>
   11c18:	andeq	r6, r2, ip, asr r1
   11c1c:	andeq	r4, r1, sp, lsl ip
   11c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c24:	mov	r8, r1
   11c28:	sub	sp, sp, #28
   11c2c:	mov	r5, r0
   11c30:	mov	r0, r8
   11c34:	ldr	r1, [pc, #792]	; 11f54 <strspn@plt+0xf68>
   11c38:	strd	r2, [sp, #12]
   11c3c:	bl	10d70 <strcmp@plt>
   11c40:	mov	r2, r5
   11c44:	str	r0, [sp]
   11c48:	ldrb	r3, [r2]
   11c4c:	mov	r4, r2
   11c50:	add	r2, r2, #1
   11c54:	cmp	r3, #48	; 0x30
   11c58:	beq	11c48 <strspn@plt+0xc5c>
   11c5c:	subs	r6, r5, r4
   11c60:	mov	r2, r8
   11c64:	movne	r6, #1
   11c68:	cmp	r3, #0
   11c6c:	movne	r6, #0
   11c70:	cmp	r6, #0
   11c74:	subne	r4, r4, #1
   11c78:	ldrb	r3, [r2]
   11c7c:	mov	r7, r2
   11c80:	add	r2, r2, #1
   11c84:	cmp	r3, #48	; 0x30
   11c88:	beq	11c78 <strspn@plt+0xc8c>
   11c8c:	subs	r5, r8, r7
   11c90:	mov	r0, r4
   11c94:	movne	r5, #1
   11c98:	cmp	r3, #0
   11c9c:	movne	r5, #0
   11ca0:	cmp	r5, #0
   11ca4:	subne	r7, r7, #1
   11ca8:	bl	10efc <strlen@plt>
   11cac:	ldr	r3, [sp]
   11cb0:	mov	r5, r0
   11cb4:	cmp	r3, #0
   11cb8:	ldreq	sl, [sp]
   11cbc:	beq	11ccc <strspn@plt+0xce0>
   11cc0:	mov	r0, r7
   11cc4:	bl	10efc <strlen@plt>
   11cc8:	mov	sl, r0
   11ccc:	add	r8, r5, #1
   11cd0:	cmp	r8, #31
   11cd4:	movcs	r9, r8
   11cd8:	movcc	r9, #31
   11cdc:	cmp	r9, sl
   11ce0:	movcc	r9, sl
   11ce4:	add	r6, r9, #1
   11ce8:	mov	r0, r6
   11cec:	bl	141d8 <strspn@plt+0x31ec>
   11cf0:	mov	fp, r0
   11cf4:	sub	r0, r9, r5
   11cf8:	mov	r2, r8
   11cfc:	mov	r1, r4
   11d00:	add	r0, fp, r0
   11d04:	bl	10dc4 <memcpy@plt>
   11d08:	ldr	r3, [sp]
   11d0c:	mov	r8, r0
   11d10:	cmp	r3, #0
   11d14:	ldreq	r3, [sp]
   11d18:	streq	r3, [sp, #4]
   11d1c:	beq	11f20 <strspn@plt+0xf34>
   11d20:	mov	r0, r6
   11d24:	bl	141d8 <strspn@plt+0x31ec>
   11d28:	mov	r4, r0
   11d2c:	sub	r0, r9, sl
   11d30:	add	r2, sl, #1
   11d34:	mov	r1, r7
   11d38:	add	r0, r4, r0
   11d3c:	bl	10dc4 <memcpy@plt>
   11d40:	cmp	r5, sl
   11d44:	str	r0, [sp, #4]
   11d48:	bcc	11f20 <strspn@plt+0xf34>
   11d4c:	bhi	11d68 <strspn@plt+0xd7c>
   11d50:	mov	r1, r0
   11d54:	mov	r2, r5
   11d58:	mov	r0, r8
   11d5c:	bl	10df4 <memcmp@plt>
   11d60:	cmp	r0, #0
   11d64:	ble	11f20 <strspn@plt+0xf34>
   11d68:	mov	r0, fp
   11d6c:	bl	12674 <strspn@plt+0x1688>
   11d70:	mov	r0, r4
   11d74:	add	sp, sp, #28
   11d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d7c:	b	12674 <strspn@plt+0x1688>
   11d80:	mov	r4, r7
   11d84:	ldrd	r2, [sp, #12]
   11d88:	mov	ip, #49	; 0x31
   11d8c:	orrs	r1, r2, r3
   11d90:	bne	11ea4 <strspn@plt+0xeb8>
   11d94:	ldr	r2, [sp]
   11d98:	cmp	sl, r5
   11d9c:	movls	r3, #0
   11da0:	movhi	r3, #1
   11da4:	cmp	r2, #0
   11da8:	moveq	r3, #1
   11dac:	cmp	r3, #0
   11db0:	bne	11dd4 <strspn@plt+0xde8>
   11db4:	cmp	sl, r5
   11db8:	bcc	11ef0 <strspn@plt+0xf04>
   11dbc:	mov	r2, r5
   11dc0:	mov	r0, r8
   11dc4:	ldr	r1, [sp, #4]
   11dc8:	bl	10df4 <memcmp@plt>
   11dcc:	cmp	r0, #0
   11dd0:	bgt	11ef0 <strspn@plt+0xf04>
   11dd4:	ldr	r3, [pc, #380]	; 11f58 <strspn@plt+0xf6c>
   11dd8:	cmp	r9, r5
   11ddc:	ldr	r3, [r3]
   11de0:	ldrb	r3, [r3]
   11de4:	strb	r3, [r4], #1
   11de8:	bne	11e58 <strspn@plt+0xe6c>
   11dec:	lsl	r9, r9, #1
   11df0:	mov	r0, fp
   11df4:	add	r3, r9, #1
   11df8:	mov	r1, r3
   11dfc:	str	r3, [sp, #20]
   11e00:	bl	14204 <strspn@plt+0x3218>
   11e04:	mov	r1, r0
   11e08:	mov	fp, r0
   11e0c:	add	r2, r5, #1
   11e10:	add	r0, r0, r5
   11e14:	bl	10da0 <memmove@plt>
   11e18:	ldr	r3, [sp, #20]
   11e1c:	mov	r8, r0
   11e20:	lsl	r3, r3, #1
   11e24:	cmp	r3, r6
   11e28:	bls	11e58 <strspn@plt+0xe6c>
   11e2c:	mov	r1, r3
   11e30:	mov	r0, r7
   11e34:	str	r3, [sp, #8]
   11e38:	bl	14204 <strspn@plt+0x3218>
   11e3c:	ldr	r3, [sp, #8]
   11e40:	sub	r4, r4, r7
   11e44:	mov	r7, r0
   11e48:	add	r4, r0, r4
   11e4c:	add	r2, r0, r3
   11e50:	mov	r6, r3
   11e54:	str	r2, [sp, #8]
   11e58:	mov	r2, r5
   11e5c:	mov	r0, r4
   11e60:	mov	r1, r8
   11e64:	bl	10ecc <mempcpy@plt>
   11e68:	ldr	r2, [sp, #8]
   11e6c:	mvn	r3, r5
   11e70:	mov	r4, r0
   11e74:	add	r3, r2, r3
   11e78:	cmp	r0, r3
   11e7c:	bls	11d84 <strspn@plt+0xd98>
   11e80:	ldr	r3, [pc, #212]	; 11f5c <strspn@plt+0xf70>
   11e84:	sub	r1, r0, r7
   11e88:	mov	r2, #1
   11e8c:	mov	r0, r7
   11e90:	ldr	r3, [r3]
   11e94:	bl	10de8 <fwrite_unlocked@plt>
   11e98:	cmp	r0, #1
   11e9c:	beq	11d80 <strspn@plt+0xd94>
   11ea0:	bl	11be0 <strspn@plt+0xbf4>
   11ea4:	sub	r1, r5, #1
   11ea8:	add	r1, r8, r1
   11eac:	mov	lr, r1
   11eb0:	ldrb	r0, [r1], #-1
   11eb4:	cmp	r0, #56	; 0x38
   11eb8:	bhi	11ed0 <strspn@plt+0xee4>
   11ebc:	add	r0, r0, #1
   11ec0:	strb	r0, [lr]
   11ec4:	subs	r2, r2, #1
   11ec8:	sbc	r3, r3, #0
   11ecc:	b	11d8c <strspn@plt+0xda0>
   11ed0:	mov	r0, #48	; 0x30
   11ed4:	cmp	r1, r8
   11ed8:	strb	r0, [r1, #1]
   11edc:	bcs	11eac <strspn@plt+0xec0>
   11ee0:	add	r5, r5, #1
   11ee4:	sub	r8, r8, #1
   11ee8:	strb	ip, [r8]
   11eec:	b	11ec4 <strspn@plt+0xed8>
   11ef0:	mov	r3, #10
   11ef4:	mov	r2, #1
   11ef8:	mov	r0, r7
   11efc:	strb	r3, [r4], #1
   11f00:	sub	r1, r4, r7
   11f04:	ldr	r3, [pc, #80]	; 11f5c <strspn@plt+0xf70>
   11f08:	ldr	r3, [r3]
   11f0c:	bl	10de8 <fwrite_unlocked@plt>
   11f10:	cmp	r0, #1
   11f14:	bne	11ea0 <strspn@plt+0xeb4>
   11f18:	mov	r0, #0
   11f1c:	bl	10ef0 <exit@plt>
   11f20:	lsl	r6, r6, #1
   11f24:	cmp	r6, #8192	; 0x2000
   11f28:	movcc	r6, #8192	; 0x2000
   11f2c:	mov	r0, r6
   11f30:	bl	141d8 <strspn@plt+0x31ec>
   11f34:	add	r3, r0, r6
   11f38:	mov	r2, r5
   11f3c:	mov	r1, r8
   11f40:	mov	r7, r0
   11f44:	str	r3, [sp, #8]
   11f48:	bl	10ecc <mempcpy@plt>
   11f4c:	mov	r4, r0
   11f50:	b	11d84 <strspn@plt+0xd98>
   11f54:	andeq	r4, r1, r9, lsr #24
   11f58:	andeq	r6, r2, r8, ror #2
   11f5c:	andeq	r6, r2, ip, asr r1
   11f60:	subs	r5, r0, #0
   11f64:	push	{r7, lr}
   11f68:	sub	sp, sp, #64	; 0x40
   11f6c:	ldr	r4, [pc, #552]	; 1219c <strspn@plt+0x11b0>
   11f70:	beq	11fa8 <strspn@plt+0xfbc>
   11f74:	mov	r2, #5
   11f78:	mov	r0, #0
   11f7c:	ldr	r3, [pc, #540]	; 121a0 <strspn@plt+0x11b4>
   11f80:	ldr	r1, [pc, #540]	; 121a4 <strspn@plt+0x11b8>
   11f84:	ldr	r6, [r3]
   11f88:	bl	10e0c <dcgettext@plt>
   11f8c:	mov	r2, r0
   11f90:	mov	r1, #1
   11f94:	ldr	r3, [r4]
   11f98:	mov	r0, r6
   11f9c:	bl	10f5c <__fprintf_chk@plt>
   11fa0:	mov	r0, r5
   11fa4:	bl	10ef0 <exit@plt>
   11fa8:	mov	r2, #5
   11fac:	ldr	r1, [pc, #500]	; 121a8 <strspn@plt+0x11bc>
   11fb0:	add	r6, sp, #8
   11fb4:	bl	10e0c <dcgettext@plt>
   11fb8:	ldr	r3, [r4]
   11fbc:	mov	r1, r0
   11fc0:	mov	r0, #1
   11fc4:	ldr	r4, [pc, #480]	; 121ac <strspn@plt+0x11c0>
   11fc8:	ldr	r7, [pc, #480]	; 121b0 <strspn@plt+0x11c4>
   11fcc:	mov	r2, r3
   11fd0:	str	r3, [sp]
   11fd4:	bl	10f44 <__printf_chk@plt>
   11fd8:	mov	r2, #5
   11fdc:	ldr	r1, [pc, #464]	; 121b4 <strspn@plt+0x11c8>
   11fe0:	mov	r0, r5
   11fe4:	bl	10e0c <dcgettext@plt>
   11fe8:	ldr	r1, [r4]
   11fec:	bl	10d58 <fputs_unlocked@plt>
   11ff0:	mov	r2, #5
   11ff4:	ldr	r1, [pc, #444]	; 121b8 <strspn@plt+0x11cc>
   11ff8:	mov	r0, r5
   11ffc:	bl	10e0c <dcgettext@plt>
   12000:	ldr	r1, [r4]
   12004:	bl	10d58 <fputs_unlocked@plt>
   12008:	mov	r2, #5
   1200c:	ldr	r1, [pc, #424]	; 121bc <strspn@plt+0x11d0>
   12010:	mov	r0, r5
   12014:	bl	10e0c <dcgettext@plt>
   12018:	ldr	r1, [r4]
   1201c:	bl	10d58 <fputs_unlocked@plt>
   12020:	mov	r2, #5
   12024:	ldr	r1, [pc, #404]	; 121c0 <strspn@plt+0x11d4>
   12028:	mov	r0, r5
   1202c:	bl	10e0c <dcgettext@plt>
   12030:	ldr	r1, [r4]
   12034:	bl	10d58 <fputs_unlocked@plt>
   12038:	mov	r2, #5
   1203c:	ldr	r1, [pc, #384]	; 121c4 <strspn@plt+0x11d8>
   12040:	mov	r0, r5
   12044:	bl	10e0c <dcgettext@plt>
   12048:	ldr	r1, [r4]
   1204c:	bl	10d58 <fputs_unlocked@plt>
   12050:	mov	r2, #5
   12054:	ldr	r1, [pc, #364]	; 121c8 <strspn@plt+0x11dc>
   12058:	mov	r0, r5
   1205c:	bl	10e0c <dcgettext@plt>
   12060:	ldr	r1, [r4]
   12064:	bl	10d58 <fputs_unlocked@plt>
   12068:	mov	r2, #5
   1206c:	ldr	r1, [pc, #344]	; 121cc <strspn@plt+0x11e0>
   12070:	mov	r0, r5
   12074:	bl	10e0c <dcgettext@plt>
   12078:	ldr	r1, [r4]
   1207c:	bl	10d58 <fputs_unlocked@plt>
   12080:	ldr	lr, [pc, #328]	; 121d0 <strspn@plt+0x11e4>
   12084:	add	ip, sp, #8
   12088:	ldm	lr!, {r0, r1, r2, r3}
   1208c:	stmia	ip!, {r0, r1, r2, r3}
   12090:	ldm	lr!, {r0, r1, r2, r3}
   12094:	stmia	ip!, {r0, r1, r2, r3}
   12098:	ldm	lr!, {r0, r1, r2, r3}
   1209c:	stmia	ip!, {r0, r1, r2, r3}
   120a0:	ldm	lr, {r0, r1}
   120a4:	stm	ip, {r0, r1}
   120a8:	ldr	r1, [r6]
   120ac:	cmp	r1, #0
   120b0:	bne	12154 <strspn@plt+0x1168>
   120b4:	ldr	r6, [r6, #4]
   120b8:	mov	r2, #5
   120bc:	mov	r0, #0
   120c0:	ldr	r7, [pc, #232]	; 121b0 <strspn@plt+0x11c4>
   120c4:	ldr	r1, [pc, #264]	; 121d4 <strspn@plt+0x11e8>
   120c8:	cmp	r6, #0
   120cc:	moveq	r6, r7
   120d0:	bl	10e0c <dcgettext@plt>
   120d4:	mov	r1, r0
   120d8:	ldr	r3, [pc, #248]	; 121d8 <strspn@plt+0x11ec>
   120dc:	mov	r0, #1
   120e0:	ldr	r2, [pc, #244]	; 121dc <strspn@plt+0x11f0>
   120e4:	bl	10f44 <__printf_chk@plt>
   120e8:	mov	r1, #0
   120ec:	mov	r0, #5
   120f0:	bl	10f80 <setlocale@plt>
   120f4:	cmp	r0, #0
   120f8:	bne	1216c <strspn@plt+0x1180>
   120fc:	mov	r2, #5
   12100:	ldr	r1, [pc, #216]	; 121e0 <strspn@plt+0x11f4>
   12104:	mov	r0, #0
   12108:	bl	10e0c <dcgettext@plt>
   1210c:	mov	r1, r0
   12110:	ldr	r3, [pc, #152]	; 121b0 <strspn@plt+0x11c4>
   12114:	mov	r0, #1
   12118:	ldr	r2, [pc, #184]	; 121d8 <strspn@plt+0x11ec>
   1211c:	bl	10f44 <__printf_chk@plt>
   12120:	mov	r2, #5
   12124:	ldr	r1, [pc, #184]	; 121e4 <strspn@plt+0x11f8>
   12128:	mov	r0, #0
   1212c:	bl	10e0c <dcgettext@plt>
   12130:	ldr	r2, [pc, #176]	; 121e8 <strspn@plt+0x11fc>
   12134:	cmp	r6, r7
   12138:	mov	r1, r0
   1213c:	mov	r0, #1
   12140:	ldr	r3, [pc, #164]	; 121ec <strspn@plt+0x1200>
   12144:	moveq	r3, r2
   12148:	mov	r2, r6
   1214c:	bl	10f44 <__printf_chk@plt>
   12150:	b	11fa0 <strspn@plt+0xfb4>
   12154:	mov	r0, r7
   12158:	bl	10d70 <strcmp@plt>
   1215c:	cmp	r0, #0
   12160:	beq	120b4 <strspn@plt+0x10c8>
   12164:	add	r6, r6, #8
   12168:	b	120a8 <strspn@plt+0x10bc>
   1216c:	mov	r2, #3
   12170:	ldr	r1, [pc, #120]	; 121f0 <strspn@plt+0x1204>
   12174:	bl	10fd4 <strncmp@plt>
   12178:	cmp	r0, #0
   1217c:	beq	120fc <strspn@plt+0x1110>
   12180:	mov	r2, #5
   12184:	ldr	r1, [pc, #104]	; 121f4 <strspn@plt+0x1208>
   12188:	mov	r0, #0
   1218c:	bl	10e0c <dcgettext@plt>
   12190:	ldr	r1, [r4]
   12194:	bl	10d58 <fputs_unlocked@plt>
   12198:	b	120fc <strspn@plt+0x1110>
   1219c:	muleq	r2, r4, r1
   121a0:	andeq	r6, r2, r8, asr r1
   121a4:	andeq	r4, r1, r1, lsr ip
   121a8:	andeq	r4, r1, r8, asr ip
   121ac:	andeq	r6, r2, ip, asr r1
   121b0:	andeq	r4, r1, sp, lsr #24
   121b4:	andeq	r4, r1, r0, asr #25
   121b8:	strdeq	r4, [r1], -sl
   121bc:	andeq	r4, r1, r5, asr #26
   121c0:	andeq	r4, r1, r9, lsl lr
   121c4:	andeq	r4, r1, r6, asr #28
   121c8:	andeq	r4, r1, ip, ror lr
   121cc:	andeq	r5, r1, sp, ror r0
   121d0:	andeq	r4, r1, r8, ror #22
   121d4:	andeq	r5, r1, sp, asr #2
   121d8:	andeq	r5, r1, r4, ror #2
   121dc:	andeq	r5, r1, ip, lsl #3
   121e0:	andeq	r5, r1, r5, ror #3
   121e4:	andeq	r5, r1, r0, lsl #4
   121e8:	andeq	r5, r1, r1, lsl #8
   121ec:	andeq	r5, r1, r2, lsr r2
   121f0:	muleq	r1, sl, r1
   121f4:	muleq	r1, lr, r1
   121f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121fc:	mov	r4, r1
   12200:	mov	r6, r0
   12204:	mov	r1, #0
   12208:	mov	r0, r4
   1220c:	vpush	{d8}
   12210:	sub	sp, sp, #28
   12214:	add	r7, sp, #8
   12218:	ldr	r3, [pc, #720]	; 124f0 <strspn@plt+0x1504>
   1221c:	mov	r2, r7
   12220:	bl	144d0 <strspn@plt+0x34e4>
   12224:	subs	r5, r0, #0
   12228:	bne	12260 <strspn@plt+0x1274>
   1222c:	mov	r2, #5
   12230:	ldr	r1, [pc, #700]	; 124f4 <strspn@plt+0x1508>
   12234:	bl	10e0c <dcgettext@plt>
   12238:	mov	r6, r0
   1223c:	mov	r0, r4
   12240:	bl	13cc4 <strspn@plt+0x2cd8>
   12244:	mov	r3, r0
   12248:	mov	r2, r6
   1224c:	mov	r1, r5
   12250:	mov	r0, r5
   12254:	bl	10e84 <error@plt>
   12258:	mov	r0, #1
   1225c:	bl	11f60 <strspn@plt+0xf74>
   12260:	vldr	d8, [sp, #8]
   12264:	vcmp.f64	d8, d8
   12268:	vmrs	APSR_nzcv, fpscr
   1226c:	bne	12340 <strspn@plt+0x1354>
   12270:	bl	10ee4 <__ctype_b_loc@plt>
   12274:	ldr	r0, [r0]
   12278:	mov	r3, r4
   1227c:	mov	r4, r3
   12280:	add	r3, r3, #1
   12284:	ldrb	r1, [r3, #-1]
   12288:	lsl	r2, r1, #1
   1228c:	ldrh	r2, [r0, r2]
   12290:	ubfx	r2, r2, #13, #1
   12294:	cmp	r1, #43	; 0x2b
   12298:	orreq	r2, r2, #1
   1229c:	cmp	r2, #0
   122a0:	bne	1227c <strspn@plt+0x1290>
   122a4:	mvn	r3, #-2147483648	; 0x80000000
   122a8:	mov	r1, #46	; 0x2e
   122ac:	mov	r0, r4
   122b0:	strd	r2, [sp, #16]
   122b4:	bl	10f08 <strchr@plt>
   122b8:	subs	r5, r0, #0
   122bc:	bne	122d4 <strspn@plt+0x12e8>
   122c0:	mov	r1, #112	; 0x70
   122c4:	mov	r0, r4
   122c8:	bl	10f08 <strchr@plt>
   122cc:	cmp	r0, #0
   122d0:	streq	r5, [sp, #20]
   122d4:	ldr	r1, [pc, #540]	; 124f8 <strspn@plt+0x150c>
   122d8:	mov	r0, r4
   122dc:	bl	10d88 <strcspn@plt>
   122e0:	ldrb	r3, [r4, r0]
   122e4:	cmp	r3, #0
   122e8:	bne	12464 <strspn@plt+0x1478>
   122ec:	vldr	d7, [pc, #500]	; 124e8 <strspn@plt+0x14fc>
   122f0:	vmul.f64	d8, d8, d7
   122f4:	vcmp.f64	d8, d7
   122f8:	vmrs	APSR_nzcv, fpscr
   122fc:	bne	12464 <strspn@plt+0x1478>
   12300:	mov	r0, r4
   12304:	bl	10efc <strlen@plt>
   12308:	cmp	r5, #0
   1230c:	mov	r9, r0
   12310:	str	r0, [sp, #16]
   12314:	moveq	r8, r5
   12318:	beq	123a0 <strspn@plt+0x13b4>
   1231c:	ldr	r1, [pc, #472]	; 124fc <strspn@plt+0x1510>
   12320:	add	r0, r5, #1
   12324:	bl	10d88 <strcspn@plt>
   12328:	subs	r8, r0, #0
   1232c:	bge	1238c <strspn@plt+0x13a0>
   12330:	cmp	r4, r5
   12334:	bne	1247c <strspn@plt+0x1490>
   12338:	mov	r0, #1
   1233c:	b	12398 <strspn@plt+0x13ac>
   12340:	mov	r2, #5
   12344:	ldr	r1, [pc, #436]	; 12500 <strspn@plt+0x1514>
   12348:	mov	r0, #0
   1234c:	bl	10e0c <dcgettext@plt>
   12350:	mov	r5, r0
   12354:	ldr	r1, [pc, #424]	; 12504 <strspn@plt+0x1518>
   12358:	mov	r0, #0
   1235c:	bl	13cbc <strspn@plt+0x2cd0>
   12360:	mov	r6, r0
   12364:	mov	r1, r4
   12368:	mov	r0, #1
   1236c:	bl	13cbc <strspn@plt+0x2cd0>
   12370:	mov	r1, #0
   12374:	mov	r3, r6
   12378:	str	r0, [sp]
   1237c:	mov	r2, r5
   12380:	mov	r0, r1
   12384:	bl	10e84 <error@plt>
   12388:	b	12258 <strspn@plt+0x126c>
   1238c:	mvneq	r0, #0
   12390:	str	r8, [sp, #20]
   12394:	bne	12330 <strspn@plt+0x1344>
   12398:	add	r0, r9, r0
   1239c:	str	r0, [sp, #16]
   123a0:	mov	r1, #101	; 0x65
   123a4:	mov	r0, r4
   123a8:	bl	10f08 <strchr@plt>
   123ac:	subs	r9, r0, #0
   123b0:	bne	123c8 <strspn@plt+0x13dc>
   123b4:	mov	r1, #69	; 0x45
   123b8:	mov	r0, r4
   123bc:	bl	10f08 <strchr@plt>
   123c0:	subs	r9, r0, #0
   123c4:	beq	12464 <strspn@plt+0x1478>
   123c8:	add	sl, r9, #1
   123cc:	mov	r2, #10
   123d0:	mov	r0, sl
   123d4:	mov	r1, #0
   123d8:	bl	10d7c <strtol@plt>
   123dc:	cmp	r0, #-2147483646	; 0x80000002
   123e0:	movlt	sl, #-2147483647	; 0x80000001
   123e4:	ldrlt	r3, [sp, #20]
   123e8:	blt	12408 <strspn@plt+0x141c>
   123ec:	mov	r0, sl
   123f0:	mov	r2, #10
   123f4:	mov	r1, #0
   123f8:	bl	10d7c <strtol@plt>
   123fc:	subs	sl, r0, #0
   12400:	ldr	r3, [sp, #20]
   12404:	bge	12494 <strspn@plt+0x14a8>
   12408:	rsb	fp, sl, #0
   1240c:	add	fp, fp, r3
   12410:	mov	r0, r4
   12414:	sub	r4, r9, r4
   12418:	str	fp, [sp, #20]
   1241c:	bl	10efc <strlen@plt>
   12420:	ldr	r3, [sp, #16]
   12424:	cmp	sl, #0
   12428:	add	r4, r4, r3
   1242c:	sub	r0, r4, r0
   12430:	str	r0, [sp, #16]
   12434:	bge	124a8 <strspn@plt+0x14bc>
   12438:	cmp	r5, #0
   1243c:	beq	1244c <strspn@plt+0x1460>
   12440:	add	r5, r5, #1
   12444:	cmp	r9, r5
   12448:	bne	12454 <strspn@plt+0x1468>
   1244c:	add	r0, r0, #1
   12450:	str	r0, [sp, #16]
   12454:	rsb	sl, sl, #0
   12458:	ldr	r8, [sp, #16]
   1245c:	add	sl, r8, sl
   12460:	str	sl, [sp, #16]
   12464:	ldm	r7, {r0, r1, r2, r3}
   12468:	stm	r6, {r0, r1, r2, r3}
   1246c:	mov	r0, r6
   12470:	add	sp, sp, #28
   12474:	vpop	{d8}
   12478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1247c:	ldrb	r0, [r5, #-1]
   12480:	sub	r0, r0, #48	; 0x30
   12484:	cmp	r0, #9
   12488:	movls	r0, #0
   1248c:	movhi	r0, #1
   12490:	b	12398 <strspn@plt+0x13ac>
   12494:	cmp	r3, sl
   12498:	movlt	fp, r3
   1249c:	movge	fp, sl
   124a0:	rsb	fp, fp, #0
   124a4:	b	1240c <strspn@plt+0x1420>
   124a8:	adds	r3, r8, #0
   124ac:	movne	r3, #1
   124b0:	cmp	r5, #0
   124b4:	moveq	r5, #0
   124b8:	movne	r5, r3
   124bc:	cmp	fp, #0
   124c0:	moveq	fp, r5
   124c4:	movne	fp, #0
   124c8:	cmp	fp, #0
   124cc:	subne	r0, r0, #1
   124d0:	strne	r0, [sp, #16]
   124d4:	cmp	sl, r8
   124d8:	subls	sl, sl, sl
   124dc:	subhi	sl, sl, r8
   124e0:	b	12458 <strspn@plt+0x146c>
   124e4:	nop	{0}
	...
   124f0:	andeq	r2, r1, r8, lsl #10
   124f4:	andeq	r5, r1, r3, lsr r2
   124f8:	andeq	r5, r1, ip, ror r2
   124fc:	andeq	r5, r1, pc, ror r2
   12500:	andeq	r5, r1, r7, asr r2
   12504:	andeq	r5, r1, pc, ror #4
   12508:	push	{r4, r5, r6, r7, lr}
   1250c:	mov	r4, r1
   12510:	mov	r7, r0
   12514:	vpush	{d8}
   12518:	sub	sp, sp, #12
   1251c:	mov	r1, sp
   12520:	bl	10ddc <strtold@plt>
   12524:	ldr	r3, [sp]
   12528:	vmov.f64	d8, d0
   1252c:	ldrb	r3, [r3]
   12530:	cmp	r3, #0
   12534:	beq	12564 <strspn@plt+0x1578>
   12538:	bl	10f14 <__errno_location@plt>
   1253c:	mov	r5, r0
   12540:	add	r1, sp, #4
   12544:	mov	r0, r7
   12548:	ldr	r6, [r5]
   1254c:	bl	14638 <strspn@plt+0x364c>
   12550:	ldrd	r2, [sp]
   12554:	cmp	r2, r3
   12558:	vmovcc.f64	d8, d0
   1255c:	strcc	r3, [sp]
   12560:	strcs	r6, [r5]
   12564:	cmp	r4, #0
   12568:	vmov.f64	d0, d8
   1256c:	ldrne	r3, [sp]
   12570:	strne	r3, [r4]
   12574:	add	sp, sp, #12
   12578:	vpop	{d8}
   1257c:	pop	{r4, r5, r6, r7, pc}
   12580:	ldr	r3, [pc, #4]	; 1258c <strspn@plt+0x15a0>
   12584:	str	r0, [r3]
   12588:	bx	lr
   1258c:	andeq	r6, r2, ip, lsl #3
   12590:	ldr	r3, [pc, #4]	; 1259c <strspn@plt+0x15b0>
   12594:	strb	r0, [r3, #4]
   12598:	bx	lr
   1259c:	andeq	r6, r2, ip, lsl #3
   125a0:	ldr	r3, [pc, #176]	; 12658 <strspn@plt+0x166c>
   125a4:	push	{r0, r1, r4, r5, r6, lr}
   125a8:	ldr	r0, [r3]
   125ac:	bl	146e0 <strspn@plt+0x36f4>
   125b0:	cmp	r0, #0
   125b4:	beq	1263c <strspn@plt+0x1650>
   125b8:	ldr	r4, [pc, #156]	; 1265c <strspn@plt+0x1670>
   125bc:	bl	10f14 <__errno_location@plt>
   125c0:	mov	r5, r0
   125c4:	ldrb	r6, [r4, #4]
   125c8:	cmp	r6, #0
   125cc:	beq	125dc <strspn@plt+0x15f0>
   125d0:	ldr	r3, [r0]
   125d4:	cmp	r3, #32
   125d8:	beq	1263c <strspn@plt+0x1650>
   125dc:	mov	r2, #5
   125e0:	ldr	r1, [pc, #120]	; 12660 <strspn@plt+0x1674>
   125e4:	mov	r0, #0
   125e8:	bl	10e0c <dcgettext@plt>
   125ec:	mov	r6, r0
   125f0:	ldr	r0, [r4]
   125f4:	cmp	r0, #0
   125f8:	beq	12628 <strspn@plt+0x163c>
   125fc:	ldr	r4, [r5]
   12600:	bl	13b74 <strspn@plt+0x2b88>
   12604:	mov	r3, r0
   12608:	ldr	r2, [pc, #84]	; 12664 <strspn@plt+0x1678>
   1260c:	mov	r0, #0
   12610:	str	r6, [sp]
   12614:	mov	r1, r4
   12618:	bl	10e84 <error@plt>
   1261c:	ldr	r3, [pc, #68]	; 12668 <strspn@plt+0x167c>
   12620:	ldr	r0, [r3]
   12624:	bl	10db8 <_exit@plt>
   12628:	mov	r3, r6
   1262c:	ldr	r2, [pc, #56]	; 1266c <strspn@plt+0x1680>
   12630:	ldr	r1, [r5]
   12634:	bl	10e84 <error@plt>
   12638:	b	1261c <strspn@plt+0x1630>
   1263c:	ldr	r3, [pc, #44]	; 12670 <strspn@plt+0x1684>
   12640:	ldr	r0, [r3]
   12644:	bl	146e0 <strspn@plt+0x36f4>
   12648:	cmp	r0, #0
   1264c:	bne	1261c <strspn@plt+0x1630>
   12650:	add	sp, sp, #8
   12654:	pop	{r4, r5, r6, pc}
   12658:	andeq	r6, r2, ip, asr r1
   1265c:	andeq	r6, r2, ip, lsl #3
   12660:	andeq	r4, r1, sp, lsl ip
   12664:	andeq	r5, r1, sp, ror r4
   12668:	andeq	r6, r2, r0, lsl #2
   1266c:	andeq	r5, r1, r7, asr #7
   12670:	andeq	r6, r2, r8, asr r1
   12674:	push	{r0, r1, r2, r4, r5, lr}
   12678:	mov	r5, r0
   1267c:	bl	10f14 <__errno_location@plt>
   12680:	mov	r4, r0
   12684:	mov	r0, r5
   12688:	ldr	r3, [r4]
   1268c:	str	r3, [sp]
   12690:	str	r3, [sp, #4]
   12694:	mov	r3, #0
   12698:	str	r3, [r4]
   1269c:	bl	10dac <free@plt>
   126a0:	ldr	r3, [r4]
   126a4:	add	r2, sp, #8
   126a8:	clz	r3, r3
   126ac:	lsr	r3, r3, #5
   126b0:	add	r3, r2, r3, lsl #2
   126b4:	ldr	r3, [r3, #-8]
   126b8:	str	r3, [r4]
   126bc:	add	sp, sp, #12
   126c0:	pop	{r4, r5, pc}
   126c4:	push	{r4, r5, r6, lr}
   126c8:	subs	r4, r0, #0
   126cc:	bne	126e4 <strspn@plt+0x16f8>
   126d0:	ldr	r3, [pc, #124]	; 12754 <strspn@plt+0x1768>
   126d4:	ldr	r0, [pc, #124]	; 12758 <strspn@plt+0x176c>
   126d8:	ldr	r1, [r3]
   126dc:	bl	10fc8 <fputs@plt>
   126e0:	bl	10fe0 <abort@plt>
   126e4:	mov	r1, #47	; 0x2f
   126e8:	bl	10f8c <strrchr@plt>
   126ec:	subs	r6, r0, #0
   126f0:	beq	12740 <strspn@plt+0x1754>
   126f4:	add	r5, r6, #1
   126f8:	sub	r3, r5, r4
   126fc:	cmp	r3, #6
   12700:	ble	12740 <strspn@plt+0x1754>
   12704:	mov	r2, #7
   12708:	ldr	r1, [pc, #76]	; 1275c <strspn@plt+0x1770>
   1270c:	sub	r0, r6, #6
   12710:	bl	10fd4 <strncmp@plt>
   12714:	cmp	r0, #0
   12718:	bne	12740 <strspn@plt+0x1754>
   1271c:	mov	r2, #3
   12720:	ldr	r1, [pc, #56]	; 12760 <strspn@plt+0x1774>
   12724:	mov	r0, r5
   12728:	bl	10fd4 <strncmp@plt>
   1272c:	cmp	r0, #0
   12730:	ldreq	r3, [pc, #44]	; 12764 <strspn@plt+0x1778>
   12734:	addeq	r4, r6, #4
   12738:	movne	r4, r5
   1273c:	streq	r4, [r3]
   12740:	ldr	r3, [pc, #32]	; 12768 <strspn@plt+0x177c>
   12744:	str	r4, [r3]
   12748:	ldr	r3, [pc, #28]	; 1276c <strspn@plt+0x1780>
   1274c:	str	r4, [r3]
   12750:	pop	{r4, r5, r6, pc}
   12754:	andeq	r6, r2, r8, asr r1
   12758:	andeq	r5, r1, r4, lsl #9
   1275c:			; <UNDEFINED> instruction: 0x000154bc
   12760:	andeq	r5, r1, r4, asr #9
   12764:	andeq	r6, r2, r8, asr #2
   12768:	muleq	r2, r4, r1
   1276c:	andeq	r6, r2, ip, asr #2
   12770:	push	{r4, lr}
   12774:	mov	r2, #48	; 0x30
   12778:	mov	r4, r1
   1277c:	mov	r1, #0
   12780:	bl	10f38 <memset@plt>
   12784:	cmp	r4, #10
   12788:	bne	12790 <strspn@plt+0x17a4>
   1278c:	bl	10fe0 <abort@plt>
   12790:	str	r4, [r0]
   12794:	pop	{r4, pc}
   12798:	push	{r4, r5, r6, lr}
   1279c:	mov	r2, #5
   127a0:	mov	r6, r0
   127a4:	mov	r5, r1
   127a8:	mov	r1, r0
   127ac:	mov	r0, #0
   127b0:	bl	10e0c <dcgettext@plt>
   127b4:	cmp	r6, r0
   127b8:	mov	r4, r0
   127bc:	bne	1282c <strspn@plt+0x1840>
   127c0:	bl	14908 <strspn@plt+0x391c>
   127c4:	ldrb	r3, [r0]
   127c8:	bic	r3, r3, #32
   127cc:	cmp	r3, #85	; 0x55
   127d0:	bne	12834 <strspn@plt+0x1848>
   127d4:	ldrb	r3, [r0, #1]
   127d8:	bic	r3, r3, #32
   127dc:	cmp	r3, #84	; 0x54
   127e0:	bne	128a4 <strspn@plt+0x18b8>
   127e4:	ldrb	r3, [r0, #2]
   127e8:	bic	r3, r3, #32
   127ec:	cmp	r3, #70	; 0x46
   127f0:	bne	128a4 <strspn@plt+0x18b8>
   127f4:	ldrb	r3, [r0, #3]
   127f8:	cmp	r3, #45	; 0x2d
   127fc:	bne	128a4 <strspn@plt+0x18b8>
   12800:	ldrb	r3, [r0, #4]
   12804:	cmp	r3, #56	; 0x38
   12808:	bne	128a4 <strspn@plt+0x18b8>
   1280c:	ldrb	r3, [r0, #5]
   12810:	cmp	r3, #0
   12814:	bne	128a4 <strspn@plt+0x18b8>
   12818:	ldrb	r2, [r4]
   1281c:	ldr	r3, [pc, #144]	; 128b4 <strspn@plt+0x18c8>
   12820:	ldr	r4, [pc, #144]	; 128b8 <strspn@plt+0x18cc>
   12824:	cmp	r2, #96	; 0x60
   12828:	movne	r4, r3
   1282c:	mov	r0, r4
   12830:	pop	{r4, r5, r6, pc}
   12834:	cmp	r3, #71	; 0x47
   12838:	bne	128a4 <strspn@plt+0x18b8>
   1283c:	ldrb	r3, [r0, #1]
   12840:	bic	r3, r3, #32
   12844:	cmp	r3, #66	; 0x42
   12848:	bne	128a4 <strspn@plt+0x18b8>
   1284c:	ldrb	r3, [r0, #2]
   12850:	cmp	r3, #49	; 0x31
   12854:	bne	128a4 <strspn@plt+0x18b8>
   12858:	ldrb	r3, [r0, #3]
   1285c:	cmp	r3, #56	; 0x38
   12860:	bne	128a4 <strspn@plt+0x18b8>
   12864:	ldrb	r3, [r0, #4]
   12868:	cmp	r3, #48	; 0x30
   1286c:	bne	128a4 <strspn@plt+0x18b8>
   12870:	ldrb	r3, [r0, #5]
   12874:	cmp	r3, #51	; 0x33
   12878:	bne	128a4 <strspn@plt+0x18b8>
   1287c:	ldrb	r3, [r0, #6]
   12880:	cmp	r3, #48	; 0x30
   12884:	bne	128a4 <strspn@plt+0x18b8>
   12888:	ldrb	r3, [r0, #7]
   1288c:	cmp	r3, #0
   12890:	bne	128a4 <strspn@plt+0x18b8>
   12894:	ldrb	r2, [r4]
   12898:	ldr	r3, [pc, #28]	; 128bc <strspn@plt+0x18d0>
   1289c:	ldr	r4, [pc, #28]	; 128c0 <strspn@plt+0x18d4>
   128a0:	b	12824 <strspn@plt+0x1838>
   128a4:	ldr	r4, [pc, #24]	; 128c4 <strspn@plt+0x18d8>
   128a8:	cmp	r5, #9
   128ac:	ldr	r3, [pc, #20]	; 128c8 <strspn@plt+0x18dc>
   128b0:	b	12828 <strspn@plt+0x183c>
   128b4:	andeq	r5, r1, lr, lsl r5
   128b8:	andeq	r5, r1, r9, lsr #10
   128bc:	andeq	r5, r1, r2, lsr #10
   128c0:	andeq	r5, r1, r5, lsr #10
   128c4:	andeq	r5, r1, ip, lsl r5
   128c8:	strdeq	r5, [r1], -sl
   128cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128d0:	sub	sp, sp, #108	; 0x6c
   128d4:	mov	r8, r0
   128d8:	mov	r5, r1
   128dc:	mov	r6, #0
   128e0:	str	r3, [sp, #40]	; 0x28
   128e4:	str	r2, [sp, #48]	; 0x30
   128e8:	ldr	sl, [sp, #144]	; 0x90
   128ec:	bl	10e48 <__ctype_get_mb_cur_max@plt>
   128f0:	ldr	r3, [sp, #148]	; 0x94
   128f4:	str	r6, [sp, #24]
   128f8:	str	r6, [sp, #32]
   128fc:	str	r6, [sp, #44]	; 0x2c
   12900:	str	r6, [sp, #52]	; 0x34
   12904:	ubfx	r7, r3, #1, #1
   12908:	mov	r3, #1
   1290c:	str	r6, [sp, #60]	; 0x3c
   12910:	str	r3, [sp, #72]	; 0x48
   12914:	str	r0, [sp, #76]	; 0x4c
   12918:	cmp	sl, #10
   1291c:	ldrls	pc, [pc, sl, lsl #2]
   12920:	b	12b64 <strspn@plt+0x1b78>
   12924:	andeq	r2, r1, r0, asr r9
   12928:	andeq	r2, r1, ip, ror fp
   1292c:	andeq	r2, r1, r0, lsl #22
   12930:	andeq	r2, r1, r8, lsl fp
   12934:	andeq	r2, r1, r8, ror #21
   12938:	andeq	r2, r1, r0, asr #20
   1293c:	andeq	r2, r1, r0, lsr #20
   12940:	andeq	r2, r1, r8, ror #22
   12944:	andeq	r2, r1, r0, ror sl
   12948:	andeq	r2, r1, r0, ror sl
   1294c:	andeq	r2, r1, r0, ror sl
   12950:	mov	r4, sl
   12954:	mov	r7, #0
   12958:	mov	r9, r5
   1295c:	mov	r3, #0
   12960:	str	r6, [sp, #68]	; 0x44
   12964:	str	r3, [sp, #28]
   12968:	ldr	r3, [sp, #40]	; 0x28
   1296c:	cmn	r3, #1
   12970:	bne	13510 <strspn@plt+0x2524>
   12974:	ldr	r2, [sp, #28]
   12978:	ldr	r3, [sp, #48]	; 0x30
   1297c:	ldrb	r3, [r3, r2]
   12980:	adds	r3, r3, #0
   12984:	movne	r3, #1
   12988:	str	r3, [sp, #36]	; 0x24
   1298c:	ldr	r3, [sp, #36]	; 0x24
   12990:	cmp	r3, #0
   12994:	bne	12ba0 <strspn@plt+0x1bb4>
   12998:	sub	r3, sl, #2
   1299c:	cmp	r4, #0
   129a0:	clz	r3, r3
   129a4:	movne	r2, #0
   129a8:	lsr	r3, r3, #5
   129ac:	andeq	r2, r3, r7
   129b0:	cmp	r2, #0
   129b4:	bne	12d64 <strspn@plt+0x1d78>
   129b8:	eor	r7, r7, #1
   129bc:	ands	r3, r3, r7
   129c0:	beq	13588 <strspn@plt+0x259c>
   129c4:	ldr	r2, [sp, #68]	; 0x44
   129c8:	cmp	r2, #0
   129cc:	beq	13550 <strspn@plt+0x2564>
   129d0:	ldr	r3, [sp, #72]	; 0x48
   129d4:	cmp	r3, #0
   129d8:	beq	13524 <strspn@plt+0x2538>
   129dc:	ldr	r2, [sp, #48]	; 0x30
   129e0:	ldr	r3, [sp, #160]	; 0xa0
   129e4:	ldr	r1, [sp, #60]	; 0x3c
   129e8:	str	r3, [sp, #16]
   129ec:	ldr	r3, [sp, #156]	; 0x9c
   129f0:	str	r3, [sp, #12]
   129f4:	ldr	r3, [sp, #152]	; 0x98
   129f8:	str	r3, [sp, #8]
   129fc:	ldr	r3, [sp, #148]	; 0x94
   12a00:	str	r3, [sp, #4]
   12a04:	mov	r3, #5
   12a08:	str	r3, [sp]
   12a0c:	ldr	r3, [sp, #40]	; 0x28
   12a10:	mov	r0, r8
   12a14:	bl	128cc <strspn@plt+0x18e0>
   12a18:	mov	r4, r0
   12a1c:	b	1357c <strspn@plt+0x2590>
   12a20:	ldr	r3, [pc, #2948]	; 135ac <strspn@plt+0x25c0>
   12a24:	mov	r7, #1
   12a28:	mov	r4, #0
   12a2c:	mov	sl, #5
   12a30:	str	r7, [sp, #24]
   12a34:	str	r7, [sp, #32]
   12a38:	str	r3, [sp, #44]	; 0x2c
   12a3c:	b	12958 <strspn@plt+0x196c>
   12a40:	cmp	r7, #0
   12a44:	bne	12b88 <strspn@plt+0x1b9c>
   12a48:	cmp	r5, #0
   12a4c:	mov	r4, #1
   12a50:	movne	r3, #34	; 0x22
   12a54:	strbne	r3, [r8]
   12a58:	mov	r3, #1
   12a5c:	str	r3, [sp, #24]
   12a60:	str	r3, [sp, #32]
   12a64:	ldr	r3, [pc, #2880]	; 135ac <strspn@plt+0x25c0>
   12a68:	str	r3, [sp, #44]	; 0x2c
   12a6c:	b	12958 <strspn@plt+0x196c>
   12a70:	cmp	sl, #10
   12a74:	beq	12a98 <strspn@plt+0x1aac>
   12a78:	mov	r1, sl
   12a7c:	ldr	r0, [pc, #2860]	; 135b0 <strspn@plt+0x25c4>
   12a80:	bl	12798 <strspn@plt+0x17ac>
   12a84:	mov	r1, sl
   12a88:	str	r0, [sp, #156]	; 0x9c
   12a8c:	ldr	r0, [pc, #2848]	; 135b4 <strspn@plt+0x25c8>
   12a90:	bl	12798 <strspn@plt+0x17ac>
   12a94:	str	r0, [sp, #160]	; 0xa0
   12a98:	cmp	r7, #0
   12a9c:	moveq	r4, r7
   12aa0:	beq	12ab8 <strspn@plt+0x1acc>
   12aa4:	mov	r4, #0
   12aa8:	b	12ac8 <strspn@plt+0x1adc>
   12aac:	cmp	r5, r4
   12ab0:	strbhi	r3, [r8, r4]
   12ab4:	add	r4, r4, #1
   12ab8:	ldr	r3, [sp, #156]	; 0x9c
   12abc:	ldrb	r3, [r3, r4]
   12ac0:	cmp	r3, #0
   12ac4:	bne	12aac <strspn@plt+0x1ac0>
   12ac8:	ldr	r0, [sp, #160]	; 0xa0
   12acc:	bl	10efc <strlen@plt>
   12ad0:	ldr	r3, [sp, #160]	; 0xa0
   12ad4:	str	r0, [sp, #32]
   12ad8:	str	r3, [sp, #44]	; 0x2c
   12adc:	mov	r3, #1
   12ae0:	str	r3, [sp, #24]
   12ae4:	b	12958 <strspn@plt+0x196c>
   12ae8:	mov	r3, #1
   12aec:	cmp	r7, #0
   12af0:	streq	r3, [sp, #24]
   12af4:	beq	12b38 <strspn@plt+0x1b4c>
   12af8:	str	r3, [sp, #32]
   12afc:	b	12b24 <strspn@plt+0x1b38>
   12b00:	cmp	r7, #0
   12b04:	beq	12b38 <strspn@plt+0x1b4c>
   12b08:	mov	r3, #1
   12b0c:	str	r3, [sp, #32]
   12b10:	ldr	r3, [pc, #2716]	; 135b4 <strspn@plt+0x25c8>
   12b14:	b	12b98 <strspn@plt+0x1bac>
   12b18:	mov	r7, #1
   12b1c:	str	r7, [sp, #24]
   12b20:	str	r7, [sp, #32]
   12b24:	ldr	r3, [pc, #2696]	; 135b4 <strspn@plt+0x25c8>
   12b28:	mov	r4, #0
   12b2c:	str	r3, [sp, #44]	; 0x2c
   12b30:	mov	sl, #2
   12b34:	b	12958 <strspn@plt+0x196c>
   12b38:	cmp	r5, #0
   12b3c:	movne	r3, #39	; 0x27
   12b40:	movne	r7, #0
   12b44:	strbne	r3, [r8]
   12b48:	moveq	r7, r5
   12b4c:	mov	r3, #1
   12b50:	mov	r4, #1
   12b54:	str	r3, [sp, #32]
   12b58:	ldr	r3, [pc, #2644]	; 135b4 <strspn@plt+0x25c8>
   12b5c:	str	r3, [sp, #44]	; 0x2c
   12b60:	b	12b30 <strspn@plt+0x1b44>
   12b64:	bl	10fe0 <abort@plt>
   12b68:	mov	r3, #1
   12b6c:	mov	r7, #0
   12b70:	str	r3, [sp, #24]
   12b74:	mov	r4, #0
   12b78:	b	12958 <strspn@plt+0x196c>
   12b7c:	mov	r7, #1
   12b80:	str	sl, [sp, #32]
   12b84:	b	12b24 <strspn@plt+0x1b38>
   12b88:	mov	r3, #1
   12b8c:	str	r7, [sp, #24]
   12b90:	str	r3, [sp, #32]
   12b94:	ldr	r3, [pc, #2576]	; 135ac <strspn@plt+0x25c0>
   12b98:	str	r3, [sp, #44]	; 0x2c
   12b9c:	b	12b74 <strspn@plt+0x1b88>
   12ba0:	ldr	fp, [sp, #24]
   12ba4:	ldr	r3, [sp, #32]
   12ba8:	cmp	sl, #2
   12bac:	moveq	fp, #0
   12bb0:	andne	fp, fp, #1
   12bb4:	adds	r5, r3, #0
   12bb8:	movne	r5, #1
   12bbc:	ands	r3, fp, r5
   12bc0:	str	r3, [sp, #64]	; 0x40
   12bc4:	beq	12c94 <strspn@plt+0x1ca8>
   12bc8:	ldr	r3, [sp, #28]
   12bcc:	ldr	r2, [sp, #32]
   12bd0:	cmp	r2, #1
   12bd4:	add	r6, r3, r2
   12bd8:	mov	r3, r2
   12bdc:	ldr	r2, [sp, #40]	; 0x28
   12be0:	movls	r3, #0
   12be4:	movhi	r3, #1
   12be8:	cmn	r2, #1
   12bec:	movne	r3, #0
   12bf0:	cmp	r3, #0
   12bf4:	beq	12c04 <strspn@plt+0x1c18>
   12bf8:	ldr	r0, [sp, #48]	; 0x30
   12bfc:	bl	10efc <strlen@plt>
   12c00:	str	r0, [sp, #40]	; 0x28
   12c04:	ldr	r3, [sp, #40]	; 0x28
   12c08:	cmp	r6, r3
   12c0c:	bhi	12c8c <strspn@plt+0x1ca0>
   12c10:	ldr	r0, [sp, #28]
   12c14:	ldr	r2, [sp, #32]
   12c18:	ldr	r3, [sp, #48]	; 0x30
   12c1c:	ldr	r1, [sp, #44]	; 0x2c
   12c20:	add	r0, r3, r0
   12c24:	bl	10df4 <memcmp@plt>
   12c28:	cmp	r0, #0
   12c2c:	bne	12c8c <strspn@plt+0x1ca0>
   12c30:	cmp	r7, #0
   12c34:	beq	12c94 <strspn@plt+0x1ca8>
   12c38:	str	r7, [sp, #24]
   12c3c:	ldr	r3, [sp, #24]
   12c40:	mov	r1, r9
   12c44:	ldr	r2, [sp, #48]	; 0x30
   12c48:	cmp	sl, #2
   12c4c:	movne	r3, #0
   12c50:	andeq	r3, r3, #1
   12c54:	cmp	r3, #0
   12c58:	ldr	r3, [sp, #160]	; 0xa0
   12c5c:	movne	sl, #4
   12c60:	str	sl, [sp]
   12c64:	str	r3, [sp, #16]
   12c68:	ldr	r3, [sp, #156]	; 0x9c
   12c6c:	str	r3, [sp, #12]
   12c70:	mov	r3, #0
   12c74:	str	r3, [sp, #8]
   12c78:	ldr	r3, [sp, #148]	; 0x94
   12c7c:	bic	r3, r3, #2
   12c80:	str	r3, [sp, #4]
   12c84:	ldr	r3, [sp, #40]	; 0x28
   12c88:	b	12a10 <strspn@plt+0x1a24>
   12c8c:	mov	r3, #0
   12c90:	str	r3, [sp, #64]	; 0x40
   12c94:	ldr	r2, [sp, #28]
   12c98:	ldr	r3, [sp, #48]	; 0x30
   12c9c:	add	r3, r3, r2
   12ca0:	str	r3, [sp, #80]	; 0x50
   12ca4:	ldr	r3, [sp, #48]	; 0x30
   12ca8:	ldrb	r6, [r3, r2]
   12cac:	cmp	r6, #58	; 0x3a
   12cb0:	bhi	12e14 <strspn@plt+0x1e28>
   12cb4:	cmp	r6, #43	; 0x2b
   12cb8:	bcs	12fd4 <strspn@plt+0x1fe8>
   12cbc:	cmp	r6, #32
   12cc0:	beq	13028 <strspn@plt+0x203c>
   12cc4:	bhi	12d6c <strspn@plt+0x1d80>
   12cc8:	cmp	r6, #9
   12ccc:	beq	131d0 <strspn@plt+0x21e4>
   12cd0:	bhi	12d30 <strspn@plt+0x1d44>
   12cd4:	cmp	r6, #7
   12cd8:	beq	131e0 <strspn@plt+0x21f4>
   12cdc:	bhi	131fc <strspn@plt+0x2210>
   12ce0:	cmp	r6, #0
   12ce4:	beq	13044 <strspn@plt+0x2058>
   12ce8:	ldr	r3, [sp, #76]	; 0x4c
   12cec:	cmp	r3, #1
   12cf0:	bne	13248 <strspn@plt+0x225c>
   12cf4:	bl	10ee4 <__ctype_b_loc@plt>
   12cf8:	ldr	r2, [r0]
   12cfc:	sxth	r3, r6
   12d00:	lsl	r3, r3, #1
   12d04:	ldrh	r5, [r2, r3]
   12d08:	ldr	r3, [sp, #76]	; 0x4c
   12d0c:	ubfx	r5, r5, #14, #1
   12d10:	str	r3, [sp, #56]	; 0x38
   12d14:	ldr	r3, [sp, #24]
   12d18:	eor	fp, r5, #1
   12d1c:	and	fp, fp, r3
   12d20:	ands	fp, fp, #255	; 0xff
   12d24:	beq	12f04 <strspn@plt+0x1f18>
   12d28:	mov	r5, #0
   12d2c:	b	132f4 <strspn@plt+0x2308>
   12d30:	cmp	r6, #11
   12d34:	beq	13204 <strspn@plt+0x2218>
   12d38:	bcc	131d8 <strspn@plt+0x21ec>
   12d3c:	cmp	r6, #12
   12d40:	beq	1320c <strspn@plt+0x2220>
   12d44:	cmp	r6, #13
   12d48:	moveq	r3, #114	; 0x72
   12d4c:	bne	12ce8 <strspn@plt+0x1cfc>
   12d50:	cmp	sl, #2
   12d54:	movne	r2, #0
   12d58:	andeq	r2, r7, #1
   12d5c:	cmp	r2, #0
   12d60:	beq	131e4 <strspn@plt+0x21f8>
   12d64:	mov	sl, #2
   12d68:	b	12c3c <strspn@plt+0x1c50>
   12d6c:	cmp	r6, #37	; 0x25
   12d70:	beq	12fd4 <strspn@plt+0x1fe8>
   12d74:	bhi	12d88 <strspn@plt+0x1d9c>
   12d78:	cmp	r6, #35	; 0x23
   12d7c:	beq	1301c <strspn@plt+0x2030>
   12d80:	mov	r5, #0
   12d84:	b	1302c <strspn@plt+0x2040>
   12d88:	cmp	r6, #39	; 0x27
   12d8c:	bne	12d80 <strspn@plt+0x1d94>
   12d90:	cmp	sl, #2
   12d94:	ldrne	r5, [sp, #36]	; 0x24
   12d98:	movne	r3, r5
   12d9c:	strne	r3, [sp, #68]	; 0x44
   12da0:	bne	13120 <strspn@plt+0x2134>
   12da4:	cmp	r7, #0
   12da8:	bne	12c3c <strspn@plt+0x1c50>
   12dac:	ldr	r3, [sp, #60]	; 0x3c
   12db0:	cmp	r9, #0
   12db4:	clz	r3, r3
   12db8:	lsr	r3, r3, #5
   12dbc:	moveq	r3, #0
   12dc0:	cmp	r3, #0
   12dc4:	strne	r9, [sp, #60]	; 0x3c
   12dc8:	movne	r9, #0
   12dcc:	bne	12ddc <strspn@plt+0x1df0>
   12dd0:	cmp	r9, r4
   12dd4:	movhi	r3, #39	; 0x27
   12dd8:	strbhi	r3, [r8, r4]
   12ddc:	add	r3, r4, #1
   12de0:	ldr	r5, [sp, #36]	; 0x24
   12de4:	mov	fp, #0
   12de8:	cmp	r3, r9
   12dec:	movcc	r2, #92	; 0x5c
   12df0:	str	fp, [sp, #52]	; 0x34
   12df4:	strbcc	r2, [r8, r3]
   12df8:	add	r3, r4, #2
   12dfc:	add	r4, r4, #3
   12e00:	cmp	r3, r9
   12e04:	str	r5, [sp, #68]	; 0x44
   12e08:	movcc	r2, #39	; 0x27
   12e0c:	strbcc	r2, [r8, r3]
   12e10:	b	12f04 <strspn@plt+0x1f18>
   12e14:	cmp	r6, #94	; 0x5e
   12e18:	beq	12d80 <strspn@plt+0x1d94>
   12e1c:	bhi	12fdc <strspn@plt+0x1ff0>
   12e20:	cmp	r6, #90	; 0x5a
   12e24:	bhi	12fc8 <strspn@plt+0x1fdc>
   12e28:	cmp	r6, #65	; 0x41
   12e2c:	bcs	12fd4 <strspn@plt+0x1fe8>
   12e30:	cmp	r6, #62	; 0x3e
   12e34:	bls	12d80 <strspn@plt+0x1d94>
   12e38:	cmp	r6, #63	; 0x3f
   12e3c:	bne	12ce8 <strspn@plt+0x1cfc>
   12e40:	cmp	sl, #2
   12e44:	beq	13128 <strspn@plt+0x213c>
   12e48:	cmp	sl, #5
   12e4c:	movne	fp, #0
   12e50:	bne	134f8 <strspn@plt+0x250c>
   12e54:	ldr	r3, [sp, #148]	; 0x94
   12e58:	tst	r3, #4
   12e5c:	beq	13130 <strspn@plt+0x2144>
   12e60:	ldr	r3, [sp, #28]
   12e64:	add	r2, r3, #2
   12e68:	ldr	r3, [sp, #40]	; 0x28
   12e6c:	cmp	r2, r3
   12e70:	bcs	13130 <strspn@plt+0x2144>
   12e74:	ldr	r1, [sp, #28]
   12e78:	ldr	r3, [sp, #48]	; 0x30
   12e7c:	add	r3, r3, r1
   12e80:	ldrb	r1, [r3, #1]
   12e84:	cmp	r1, #63	; 0x3f
   12e88:	bne	13130 <strspn@plt+0x2144>
   12e8c:	ldr	r3, [sp, #48]	; 0x30
   12e90:	ldrb	r6, [r3, r2]
   12e94:	sub	r3, r6, #33	; 0x21
   12e98:	uxtb	r3, r3
   12e9c:	cmp	r3, #29
   12ea0:	bhi	13500 <strspn@plt+0x2514>
   12ea4:	ldr	r0, [pc, #1804]	; 135b8 <strspn@plt+0x25cc>
   12ea8:	mov	r5, #1
   12eac:	ands	r5, r0, r5, lsl r3
   12eb0:	beq	13508 <strspn@plt+0x251c>
   12eb4:	cmp	r7, #0
   12eb8:	bne	12c3c <strspn@plt+0x1c50>
   12ebc:	cmp	r9, r4
   12ec0:	add	r3, r4, #1
   12ec4:	str	r2, [sp, #28]
   12ec8:	mov	r5, #0
   12ecc:	strbhi	r1, [r8, r4]
   12ed0:	cmp	r9, r3
   12ed4:	mov	fp, r5
   12ed8:	movhi	r1, #34	; 0x22
   12edc:	strbhi	r1, [r8, r3]
   12ee0:	add	r3, r4, #2
   12ee4:	cmp	r9, r3
   12ee8:	movhi	r1, #34	; 0x22
   12eec:	strbhi	r1, [r8, r3]
   12ef0:	add	r3, r4, #3
   12ef4:	add	r4, r4, #4
   12ef8:	cmp	r9, r3
   12efc:	movhi	r1, #63	; 0x3f
   12f00:	strbhi	r1, [r8, r3]
   12f04:	ldr	r3, [sp, #24]
   12f08:	eor	r3, r3, #1
   12f0c:	cmp	sl, #2
   12f10:	orreq	r3, r3, #1
   12f14:	eor	r3, r3, #1
   12f18:	orr	r3, r7, r3
   12f1c:	tst	r3, #255	; 0xff
   12f20:	beq	12f4c <strspn@plt+0x1f60>
   12f24:	ldr	r3, [sp, #152]	; 0x98
   12f28:	cmp	r3, #0
   12f2c:	beq	12f4c <strspn@plt+0x1f60>
   12f30:	ldr	r1, [sp, #152]	; 0x98
   12f34:	ubfx	r2, r6, #5, #8
   12f38:	and	r3, r6, #31
   12f3c:	ldr	r2, [r1, r2, lsl #2]
   12f40:	lsr	r3, r2, r3
   12f44:	tst	r3, #1
   12f48:	bne	12f58 <strspn@plt+0x1f6c>
   12f4c:	ldr	r3, [sp, #64]	; 0x40
   12f50:	cmp	r3, #0
   12f54:	beq	13150 <strspn@plt+0x2164>
   12f58:	sub	r3, sl, #2
   12f5c:	cmp	r7, #0
   12f60:	clz	r3, r3
   12f64:	lsr	r3, r3, #5
   12f68:	bne	12c3c <strspn@plt+0x1c50>
   12f6c:	ldr	r2, [sp, #52]	; 0x34
   12f70:	eor	r2, r2, #1
   12f74:	ands	r3, r3, r2
   12f78:	beq	12fb0 <strspn@plt+0x1fc4>
   12f7c:	cmp	r9, r4
   12f80:	str	r3, [sp, #52]	; 0x34
   12f84:	movhi	r2, #39	; 0x27
   12f88:	strbhi	r2, [r8, r4]
   12f8c:	add	r2, r4, #1
   12f90:	cmp	r9, r2
   12f94:	movhi	r1, #36	; 0x24
   12f98:	strbhi	r1, [r8, r2]
   12f9c:	add	r2, r4, #2
   12fa0:	add	r4, r4, #3
   12fa4:	cmp	r9, r2
   12fa8:	movhi	r1, #39	; 0x27
   12fac:	strbhi	r1, [r8, r2]
   12fb0:	cmp	r9, r4
   12fb4:	ldr	fp, [sp, #36]	; 0x24
   12fb8:	movhi	r3, #92	; 0x5c
   12fbc:	strbhi	r3, [r8, r4]
   12fc0:	add	r4, r4, #1
   12fc4:	b	13150 <strspn@plt+0x2164>
   12fc8:	cmp	r6, #92	; 0x5c
   12fcc:	beq	13138 <strspn@plt+0x214c>
   12fd0:	bls	12d80 <strspn@plt+0x1d94>
   12fd4:	ldr	r5, [sp, #36]	; 0x24
   12fd8:	b	13120 <strspn@plt+0x2134>
   12fdc:	cmp	r6, #122	; 0x7a
   12fe0:	bhi	13000 <strspn@plt+0x2014>
   12fe4:	cmp	r6, #97	; 0x61
   12fe8:	bcs	12fd4 <strspn@plt+0x1fe8>
   12fec:	cmp	r6, #95	; 0x5f
   12ff0:	beq	12fd4 <strspn@plt+0x1fe8>
   12ff4:	cmp	r6, #96	; 0x60
   12ff8:	bne	12ce8 <strspn@plt+0x1cfc>
   12ffc:	b	12d80 <strspn@plt+0x1d94>
   13000:	cmp	r6, #124	; 0x7c
   13004:	beq	12d80 <strspn@plt+0x1d94>
   13008:	bcc	13214 <strspn@plt+0x2228>
   1300c:	cmp	r6, #125	; 0x7d
   13010:	beq	13214 <strspn@plt+0x2228>
   13014:	cmp	r6, #126	; 0x7e
   13018:	bne	12ce8 <strspn@plt+0x1cfc>
   1301c:	ldr	r3, [sp, #28]
   13020:	cmp	r3, #0
   13024:	bne	13130 <strspn@plt+0x2144>
   13028:	ldr	r5, [sp, #36]	; 0x24
   1302c:	cmp	sl, #2
   13030:	movne	fp, #0
   13034:	andeq	fp, r7, #1
   13038:	cmp	fp, #0
   1303c:	beq	12f04 <strspn@plt+0x1f18>
   13040:	b	12d64 <strspn@plt+0x1d78>
   13044:	ldr	r3, [sp, #24]
   13048:	cmp	r3, #0
   1304c:	beq	13114 <strspn@plt+0x2128>
   13050:	sub	r2, sl, #2
   13054:	cmp	r7, #0
   13058:	clz	r2, r2
   1305c:	lsr	r2, r2, #5
   13060:	bne	12c38 <strspn@plt+0x1c4c>
   13064:	ldr	r3, [sp, #52]	; 0x34
   13068:	eor	r3, r3, #1
   1306c:	ands	r2, r2, r3
   13070:	moveq	r3, r4
   13074:	beq	130ac <strspn@plt+0x20c0>
   13078:	cmp	r9, r4
   1307c:	str	r2, [sp, #52]	; 0x34
   13080:	movhi	r3, #39	; 0x27
   13084:	strbhi	r3, [r8, r4]
   13088:	add	r3, r4, #1
   1308c:	cmp	r9, r3
   13090:	movhi	r1, #36	; 0x24
   13094:	strbhi	r1, [r8, r3]
   13098:	add	r3, r4, #2
   1309c:	cmp	r9, r3
   130a0:	movhi	r1, #39	; 0x27
   130a4:	strbhi	r1, [r8, r3]
   130a8:	add	r3, r4, #3
   130ac:	cmp	r9, r3
   130b0:	add	r4, r3, #1
   130b4:	movhi	r2, #92	; 0x5c
   130b8:	strbhi	r2, [r8, r3]
   130bc:	cmp	fp, #0
   130c0:	beq	134e8 <strspn@plt+0x24fc>
   130c4:	ldr	r2, [sp, #28]
   130c8:	ldr	r1, [sp, #40]	; 0x28
   130cc:	add	r2, r2, #1
   130d0:	cmp	r2, r1
   130d4:	bcs	1310c <strspn@plt+0x2120>
   130d8:	ldr	r1, [sp, #48]	; 0x30
   130dc:	mov	r6, #48	; 0x30
   130e0:	ldrb	r2, [r1, r2]
   130e4:	sub	r2, r2, #48	; 0x30
   130e8:	cmp	r2, #9
   130ec:	bhi	134f8 <strspn@plt+0x250c>
   130f0:	cmp	r9, r4
   130f4:	add	r2, r3, #2
   130f8:	strbhi	r6, [r8, r4]
   130fc:	cmp	r9, r2
   13100:	add	r4, r3, #3
   13104:	movhi	r1, #48	; 0x30
   13108:	strbhi	r1, [r8, r2]
   1310c:	mov	r5, #0
   13110:	b	134f0 <strspn@plt+0x2504>
   13114:	ldr	r3, [sp, #148]	; 0x94
   13118:	ands	r5, r3, #1
   1311c:	bne	131a4 <strspn@plt+0x21b8>
   13120:	mov	fp, #0
   13124:	b	12f04 <strspn@plt+0x1f18>
   13128:	cmp	r7, #0
   1312c:	bne	12c3c <strspn@plt+0x1c50>
   13130:	mov	r5, #0
   13134:	b	13120 <strspn@plt+0x2134>
   13138:	cmp	sl, #2
   1313c:	bne	131b0 <strspn@plt+0x21c4>
   13140:	cmp	r7, #0
   13144:	bne	12c3c <strspn@plt+0x1c50>
   13148:	mov	r5, r7
   1314c:	mov	fp, r7
   13150:	ldr	r3, [sp, #52]	; 0x34
   13154:	eor	fp, fp, #1
   13158:	tst	r3, fp
   1315c:	beq	13188 <strspn@plt+0x219c>
   13160:	cmp	r9, r4
   13164:	movhi	r3, #39	; 0x27
   13168:	strbhi	r3, [r8, r4]
   1316c:	add	r3, r4, #1
   13170:	add	r4, r4, #2
   13174:	cmp	r9, r3
   13178:	movhi	r2, #39	; 0x27
   1317c:	strbhi	r2, [r8, r3]
   13180:	mov	r3, #0
   13184:	str	r3, [sp, #52]	; 0x34
   13188:	cmp	r9, r4
   1318c:	ldr	r3, [sp, #72]	; 0x48
   13190:	strbhi	r6, [r8, r4]
   13194:	cmp	r5, #0
   13198:	add	r4, r4, #1
   1319c:	moveq	r3, #0
   131a0:	str	r3, [sp, #72]	; 0x48
   131a4:	ldr	r3, [sp, #28]
   131a8:	add	r3, r3, #1
   131ac:	b	12964 <strspn@plt+0x1978>
   131b0:	ldr	r3, [sp, #24]
   131b4:	and	r3, r3, r7
   131b8:	tst	r5, r3
   131bc:	moveq	r3, r6
   131c0:	beq	12d50 <strspn@plt+0x1d64>
   131c4:	mov	fp, #0
   131c8:	mov	r5, fp
   131cc:	b	13150 <strspn@plt+0x2164>
   131d0:	mov	r3, #116	; 0x74
   131d4:	b	12d50 <strspn@plt+0x1d64>
   131d8:	mov	r3, #110	; 0x6e
   131dc:	b	12d50 <strspn@plt+0x1d64>
   131e0:	mov	r3, #97	; 0x61
   131e4:	ldr	r2, [sp, #24]
   131e8:	cmp	r2, #0
   131ec:	beq	13130 <strspn@plt+0x2144>
   131f0:	mov	r6, r3
   131f4:	mov	r5, #0
   131f8:	b	12f58 <strspn@plt+0x1f6c>
   131fc:	mov	r3, #98	; 0x62
   13200:	b	131e4 <strspn@plt+0x21f8>
   13204:	mov	r3, #118	; 0x76
   13208:	b	131e4 <strspn@plt+0x21f8>
   1320c:	mov	r3, #102	; 0x66
   13210:	b	131e4 <strspn@plt+0x21f8>
   13214:	ldr	r3, [sp, #40]	; 0x28
   13218:	cmn	r3, #1
   1321c:	bne	1323c <strspn@plt+0x2250>
   13220:	ldr	r3, [sp, #48]	; 0x30
   13224:	ldrb	r3, [r3, #1]
   13228:	adds	r3, r3, #0
   1322c:	movne	r3, #1
   13230:	cmp	r3, #0
   13234:	bne	13130 <strspn@plt+0x2144>
   13238:	b	1301c <strspn@plt+0x2030>
   1323c:	ldr	r3, [sp, #40]	; 0x28
   13240:	subs	r3, r3, #1
   13244:	b	1322c <strspn@plt+0x2240>
   13248:	mov	r3, #0
   1324c:	mov	r2, #0
   13250:	strd	r2, [sp, #96]	; 0x60
   13254:	ldr	r3, [sp, #40]	; 0x28
   13258:	cmn	r3, #1
   1325c:	bne	1326c <strspn@plt+0x2280>
   13260:	ldr	r0, [sp, #48]	; 0x30
   13264:	bl	10efc <strlen@plt>
   13268:	str	r0, [sp, #40]	; 0x28
   1326c:	ldr	r5, [sp, #36]	; 0x24
   13270:	mov	r3, #0
   13274:	str	r3, [sp, #56]	; 0x38
   13278:	ldr	r3, [sp, #28]
   1327c:	add	r0, sp, #92	; 0x5c
   13280:	ldr	r1, [sp, #40]	; 0x28
   13284:	ldr	r2, [sp, #56]	; 0x38
   13288:	add	r2, r3, r2
   1328c:	ldr	r3, [sp, #48]	; 0x30
   13290:	add	fp, r3, r2
   13294:	sub	r2, r1, r2
   13298:	add	r3, sp, #96	; 0x60
   1329c:	mov	r1, fp
   132a0:	bl	1493c <strspn@plt+0x3950>
   132a4:	subs	r2, r0, #0
   132a8:	beq	132e8 <strspn@plt+0x22fc>
   132ac:	cmn	r2, #1
   132b0:	beq	134bc <strspn@plt+0x24d0>
   132b4:	cmn	r2, #2
   132b8:	bne	1342c <strspn@plt+0x2440>
   132bc:	ldr	r3, [sp, #28]
   132c0:	ldr	r2, [sp, #56]	; 0x38
   132c4:	add	r3, r3, r2
   132c8:	ldr	r2, [sp, #40]	; 0x28
   132cc:	cmp	r2, r3
   132d0:	bls	134bc <strspn@plt+0x24d0>
   132d4:	ldr	r2, [sp, #56]	; 0x38
   132d8:	ldr	r3, [sp, #80]	; 0x50
   132dc:	ldrb	r5, [r3, r2]
   132e0:	cmp	r5, #0
   132e4:	bne	1341c <strspn@plt+0x2430>
   132e8:	ldr	r3, [sp, #56]	; 0x38
   132ec:	cmp	r3, #1
   132f0:	bls	12d14 <strspn@plt+0x1d28>
   132f4:	ldr	r3, [sp, #28]
   132f8:	mov	fp, #0
   132fc:	mov	ip, #92	; 0x5c
   13300:	ldr	r2, [sp, #56]	; 0x38
   13304:	add	r3, r3, r2
   13308:	ldr	r2, [sp, #24]
   1330c:	str	r3, [sp, #36]	; 0x24
   13310:	eor	r3, r5, #1
   13314:	and	r3, r3, r2
   13318:	mov	r2, #39	; 0x27
   1331c:	uxtb	r3, r3
   13320:	cmp	r3, #0
   13324:	beq	134c4 <strspn@plt+0x24d8>
   13328:	sub	r0, sl, #2
   1332c:	cmp	r7, #0
   13330:	clz	r0, r0
   13334:	lsr	r0, r0, #5
   13338:	bne	12c38 <strspn@plt+0x1c4c>
   1333c:	ldr	r1, [sp, #52]	; 0x34
   13340:	eor	r1, r1, #1
   13344:	ands	r1, r0, r1
   13348:	beq	13378 <strspn@plt+0x238c>
   1334c:	cmp	r9, r4
   13350:	add	r0, r4, #1
   13354:	str	r1, [sp, #52]	; 0x34
   13358:	strbhi	r2, [r8, r4]
   1335c:	cmp	r9, r0
   13360:	movhi	lr, #36	; 0x24
   13364:	strbhi	lr, [r8, r0]
   13368:	add	r0, r4, #2
   1336c:	add	r4, r4, #3
   13370:	cmp	r9, r0
   13374:	strbhi	r2, [r8, r0]
   13378:	cmp	r9, r4
   1337c:	add	r0, r4, #1
   13380:	mov	fp, r3
   13384:	strbhi	ip, [r8, r4]
   13388:	cmp	r9, r0
   1338c:	lsrhi	r1, r6, #6
   13390:	addhi	r1, r1, #48	; 0x30
   13394:	strbhi	r1, [r8, r0]
   13398:	add	r0, r4, #2
   1339c:	add	r4, r4, #3
   133a0:	cmp	r9, r0
   133a4:	ubfxhi	r1, r6, #3, #3
   133a8:	and	r6, r6, #7
   133ac:	add	r6, r6, #48	; 0x30
   133b0:	addhi	r1, r1, #48	; 0x30
   133b4:	strbhi	r1, [r8, r0]
   133b8:	eor	r0, fp, #1
   133bc:	ldr	r1, [sp, #28]
   133c0:	ldr	lr, [sp, #52]	; 0x34
   133c4:	add	r1, r1, #1
   133c8:	and	r0, r0, lr
   133cc:	ldr	lr, [sp, #36]	; 0x24
   133d0:	cmp	r1, lr
   133d4:	bcs	13150 <strspn@plt+0x2164>
   133d8:	cmp	r0, #0
   133dc:	beq	13400 <strspn@plt+0x2414>
   133e0:	cmp	r9, r4
   133e4:	add	r0, r4, #1
   133e8:	strbhi	r2, [r8, r4]
   133ec:	cmp	r9, r0
   133f0:	add	r4, r4, #2
   133f4:	strbhi	r2, [r8, r0]
   133f8:	mov	r0, #0
   133fc:	str	r0, [sp, #52]	; 0x34
   13400:	ldr	r0, [sp, #48]	; 0x30
   13404:	cmp	r9, r4
   13408:	str	r1, [sp, #28]
   1340c:	strbhi	r6, [r8, r4]
   13410:	add	r4, r4, #1
   13414:	ldrb	r6, [r0, r1]
   13418:	b	13320 <strspn@plt+0x2334>
   1341c:	ldr	r3, [sp, #56]	; 0x38
   13420:	add	r3, r3, #1
   13424:	str	r3, [sp, #56]	; 0x38
   13428:	b	132bc <strspn@plt+0x22d0>
   1342c:	cmp	sl, #2
   13430:	movne	r3, #0
   13434:	andeq	r3, r7, #1
   13438:	cmp	r3, #0
   1343c:	movne	r1, #1
   13440:	bne	1349c <strspn@plt+0x24b0>
   13444:	ldr	r0, [sp, #92]	; 0x5c
   13448:	str	r2, [sp, #84]	; 0x54
   1344c:	bl	10e30 <iswprint@plt>
   13450:	ldr	r3, [sp, #56]	; 0x38
   13454:	cmp	r0, #0
   13458:	add	r0, sp, #96	; 0x60
   1345c:	moveq	r5, #0
   13460:	ldr	r2, [sp, #84]	; 0x54
   13464:	add	r3, r3, r2
   13468:	str	r3, [sp, #56]	; 0x38
   1346c:	bl	10dd0 <mbsinit@plt>
   13470:	cmp	r0, #0
   13474:	beq	13278 <strspn@plt+0x228c>
   13478:	b	132e8 <strspn@plt+0x22fc>
   1347c:	ldrb	r3, [fp, #1]!
   13480:	cmp	r3, #94	; 0x5e
   13484:	beq	12d64 <strspn@plt+0x1d78>
   13488:	bhi	134a8 <strspn@plt+0x24bc>
   1348c:	sub	r3, r3, #91	; 0x5b
   13490:	cmp	r3, #1
   13494:	bls	12d64 <strspn@plt+0x1d78>
   13498:	add	r1, r1, #1
   1349c:	cmp	r1, r2
   134a0:	bne	1347c <strspn@plt+0x2490>
   134a4:	b	13444 <strspn@plt+0x2458>
   134a8:	cmp	r3, #96	; 0x60
   134ac:	beq	12d64 <strspn@plt+0x1d78>
   134b0:	cmp	r3, #124	; 0x7c
   134b4:	bne	13498 <strspn@plt+0x24ac>
   134b8:	b	12d64 <strspn@plt+0x1d78>
   134bc:	mov	r5, #0
   134c0:	b	132e8 <strspn@plt+0x22fc>
   134c4:	ldr	r1, [sp, #64]	; 0x40
   134c8:	cmp	r1, #0
   134cc:	beq	133b8 <strspn@plt+0x23cc>
   134d0:	cmp	r9, r4
   134d4:	mov	r1, #0
   134d8:	strbhi	ip, [r8, r4]
   134dc:	add	r4, r4, #1
   134e0:	str	r1, [sp, #64]	; 0x40
   134e4:	b	133b8 <strspn@plt+0x23cc>
   134e8:	mov	r5, fp
   134ec:	ldr	fp, [sp, #24]
   134f0:	mov	r6, #48	; 0x30
   134f4:	b	12f04 <strspn@plt+0x1f18>
   134f8:	mov	r5, #0
   134fc:	b	12f04 <strspn@plt+0x1f18>
   13500:	mov	r6, r1
   13504:	b	13130 <strspn@plt+0x2144>
   13508:	mov	r6, r1
   1350c:	b	13120 <strspn@plt+0x2134>
   13510:	ldr	r2, [sp, #28]
   13514:	ldr	r3, [sp, #40]	; 0x28
   13518:	subs	r3, r3, r2
   1351c:	movne	r3, #1
   13520:	b	12988 <strspn@plt+0x199c>
   13524:	ldr	r3, [sp, #60]	; 0x3c
   13528:	mov	sl, #2
   1352c:	ldr	r7, [sp, #72]	; 0x48
   13530:	adds	r6, r3, #0
   13534:	mov	r5, r3
   13538:	movne	r6, #1
   1353c:	cmp	r9, #0
   13540:	movne	r6, #0
   13544:	cmp	r6, #0
   13548:	bne	12918 <strspn@plt+0x192c>
   1354c:	ldr	r3, [sp, #68]	; 0x44
   13550:	ldr	r2, [sp, #44]	; 0x2c
   13554:	cmp	r2, #0
   13558:	moveq	r3, #0
   1355c:	andne	r3, r3, #1
   13560:	cmp	r3, #0
   13564:	movne	r3, r2
   13568:	subne	r3, r3, #1
   1356c:	bne	1359c <strspn@plt+0x25b0>
   13570:	cmp	r9, r4
   13574:	movhi	r3, #0
   13578:	strbhi	r3, [r8, r4]
   1357c:	mov	r0, r4
   13580:	add	sp, sp, #108	; 0x6c
   13584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13588:	mov	r3, r7
   1358c:	b	13550 <strspn@plt+0x2564>
   13590:	cmp	r9, r4
   13594:	strbhi	r2, [r8, r4]
   13598:	add	r4, r4, #1
   1359c:	ldrb	r2, [r3, #1]!
   135a0:	cmp	r2, #0
   135a4:	bne	13590 <strspn@plt+0x25a4>
   135a8:	b	13570 <strspn@plt+0x2584>
   135ac:	andeq	r5, r1, ip, lsl r5
   135b0:	andeq	r5, r1, sp, lsr #10
   135b4:	strdeq	r5, [r1], -sl
   135b8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   135bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135c0:	sub	sp, sp, #52	; 0x34
   135c4:	mov	r6, r0
   135c8:	mov	r5, r3
   135cc:	mov	r8, r1
   135d0:	mov	r9, r2
   135d4:	bl	10f14 <__errno_location@plt>
   135d8:	ldr	r3, [r0]
   135dc:	cmn	r6, #-2147483647	; 0x80000001
   135e0:	str	r0, [sp, #24]
   135e4:	ldr	r7, [pc, #368]	; 1375c <strspn@plt+0x2770>
   135e8:	str	r3, [sp, #32]
   135ec:	movne	r3, #0
   135f0:	moveq	r3, #1
   135f4:	orrs	r3, r3, r6, lsr #31
   135f8:	ldr	r4, [r7]
   135fc:	beq	13604 <strspn@plt+0x2618>
   13600:	bl	10fe0 <abort@plt>
   13604:	ldr	r2, [r7, #4]
   13608:	cmp	r2, r6
   1360c:	bgt	1367c <strspn@plt+0x2690>
   13610:	add	sl, r7, #8
   13614:	mov	r3, #8
   13618:	cmp	r4, sl
   1361c:	add	r1, sp, #44	; 0x2c
   13620:	str	r2, [sp, #44]	; 0x2c
   13624:	sub	r2, r6, r2
   13628:	movne	r0, r4
   1362c:	moveq	r0, #0
   13630:	add	r2, r2, #1
   13634:	str	r3, [sp]
   13638:	mvn	r3, #-2147483648	; 0x80000000
   1363c:	bl	14310 <strspn@plt+0x3324>
   13640:	cmp	r4, sl
   13644:	mov	fp, r0
   13648:	str	r0, [r7]
   1364c:	ldmeq	r4, {r0, r1}
   13650:	mov	r4, fp
   13654:	ldr	r2, [sp, #44]	; 0x2c
   13658:	stmeq	fp, {r0, r1}
   1365c:	mov	r1, #0
   13660:	ldr	r0, [r7, #4]
   13664:	sub	r2, r2, r0
   13668:	add	r0, fp, r0, lsl #3
   1366c:	lsl	r2, r2, #3
   13670:	bl	10f38 <memset@plt>
   13674:	ldr	r3, [sp, #44]	; 0x2c
   13678:	str	r3, [r7, #4]
   1367c:	ldr	r3, [r5, #4]
   13680:	add	sl, r4, r6, lsl #3
   13684:	mov	r2, r8
   13688:	ldr	fp, [r4, r6, lsl #3]
   1368c:	ldr	r7, [sl, #4]
   13690:	orr	r3, r3, #1
   13694:	str	r3, [sp, #28]
   13698:	add	r3, r5, #8
   1369c:	mov	r1, fp
   136a0:	str	r3, [sp, #36]	; 0x24
   136a4:	mov	r0, r7
   136a8:	ldr	r3, [r5, #44]	; 0x2c
   136ac:	str	r3, [sp, #16]
   136b0:	ldr	r3, [r5, #40]	; 0x28
   136b4:	str	r3, [sp, #12]
   136b8:	add	r3, r5, #8
   136bc:	str	r3, [sp, #8]
   136c0:	ldr	r3, [sp, #28]
   136c4:	str	r3, [sp, #4]
   136c8:	ldr	r3, [r5]
   136cc:	str	r3, [sp]
   136d0:	mov	r3, r9
   136d4:	bl	128cc <strspn@plt+0x18e0>
   136d8:	cmp	fp, r0
   136dc:	bhi	13744 <strspn@plt+0x2758>
   136e0:	ldr	r3, [pc, #120]	; 13760 <strspn@plt+0x2774>
   136e4:	add	fp, r0, #1
   136e8:	str	fp, [r4, r6, lsl #3]
   136ec:	cmp	r7, r3
   136f0:	beq	136fc <strspn@plt+0x2710>
   136f4:	mov	r0, r7
   136f8:	bl	12674 <strspn@plt+0x1688>
   136fc:	mov	r0, fp
   13700:	bl	14200 <strspn@plt+0x3214>
   13704:	ldr	r3, [r5, #44]	; 0x2c
   13708:	mov	r2, r8
   1370c:	mov	r1, fp
   13710:	str	r0, [sl, #4]
   13714:	mov	r7, r0
   13718:	str	r3, [sp, #16]
   1371c:	ldr	r3, [r5, #40]	; 0x28
   13720:	str	r3, [sp, #12]
   13724:	add	r3, r5, #8
   13728:	str	r3, [sp, #8]
   1372c:	ldr	r3, [sp, #28]
   13730:	str	r3, [sp, #4]
   13734:	ldr	r3, [r5]
   13738:	str	r3, [sp]
   1373c:	mov	r3, r9
   13740:	bl	128cc <strspn@plt+0x18e0>
   13744:	ldr	r3, [sp, #24]
   13748:	mov	r0, r7
   1374c:	ldr	r2, [sp, #32]
   13750:	str	r2, [r3]
   13754:	add	sp, sp, #52	; 0x34
   13758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1375c:	andeq	r6, r2, r4, lsl #2
   13760:	muleq	r2, r8, r1
   13764:	push	{r4, r5, r6, lr}
   13768:	mov	r5, r0
   1376c:	bl	10f14 <__errno_location@plt>
   13770:	mov	r4, r0
   13774:	cmp	r5, #0
   13778:	ldr	r0, [pc, #20]	; 13794 <strspn@plt+0x27a8>
   1377c:	mov	r1, #48	; 0x30
   13780:	movne	r0, r5
   13784:	ldr	r6, [r4]
   13788:	bl	14400 <strspn@plt+0x3414>
   1378c:	str	r6, [r4]
   13790:	pop	{r4, r5, r6, pc}
   13794:	muleq	r2, r8, r2
   13798:	ldr	r3, [pc, #12]	; 137ac <strspn@plt+0x27c0>
   1379c:	cmp	r0, #0
   137a0:	moveq	r0, r3
   137a4:	ldr	r0, [r0]
   137a8:	bx	lr
   137ac:	muleq	r2, r8, r2
   137b0:	ldr	r3, [pc, #12]	; 137c4 <strspn@plt+0x27d8>
   137b4:	cmp	r0, #0
   137b8:	moveq	r0, r3
   137bc:	str	r1, [r0]
   137c0:	bx	lr
   137c4:	muleq	r2, r8, r2
   137c8:	ldr	r3, [pc, #52]	; 13804 <strspn@plt+0x2818>
   137cc:	cmp	r0, #0
   137d0:	push	{lr}		; (str lr, [sp, #-4]!)
   137d4:	lsr	lr, r1, #5
   137d8:	and	r1, r1, #31
   137dc:	moveq	r0, r3
   137e0:	add	r3, r0, #8
   137e4:	ldr	ip, [r3, lr, lsl #2]
   137e8:	lsr	r0, ip, r1
   137ec:	eor	r2, r2, r0
   137f0:	and	r0, r0, #1
   137f4:	and	r2, r2, #1
   137f8:	eor	r1, ip, r2, lsl r1
   137fc:	str	r1, [r3, lr, lsl #2]
   13800:	pop	{pc}		; (ldr pc, [sp], #4)
   13804:	muleq	r2, r8, r2
   13808:	ldr	r3, [pc, #16]	; 13820 <strspn@plt+0x2834>
   1380c:	cmp	r0, #0
   13810:	movne	r3, r0
   13814:	ldr	r0, [r3, #4]
   13818:	str	r1, [r3, #4]
   1381c:	bx	lr
   13820:	muleq	r2, r8, r2
   13824:	ldr	r3, [pc, #44]	; 13858 <strspn@plt+0x286c>
   13828:	cmp	r0, #0
   1382c:	moveq	r0, r3
   13830:	mov	r3, #10
   13834:	cmp	r2, #0
   13838:	cmpne	r1, #0
   1383c:	str	r3, [r0]
   13840:	bne	1384c <strspn@plt+0x2860>
   13844:	push	{r4, lr}
   13848:	bl	10fe0 <abort@plt>
   1384c:	str	r1, [r0, #40]	; 0x28
   13850:	str	r2, [r0, #44]	; 0x2c
   13854:	bx	lr
   13858:	muleq	r2, r8, r2
   1385c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13860:	sub	sp, sp, #24
   13864:	mov	sl, r3
   13868:	mov	r7, r0
   1386c:	mov	r8, r1
   13870:	mov	r9, r2
   13874:	ldr	r4, [sp, #56]	; 0x38
   13878:	ldr	r3, [pc, #88]	; 138d8 <strspn@plt+0x28ec>
   1387c:	cmp	r4, #0
   13880:	moveq	r4, r3
   13884:	bl	10f14 <__errno_location@plt>
   13888:	ldr	r3, [r4, #44]	; 0x2c
   1388c:	mov	r5, r0
   13890:	mov	r2, r9
   13894:	mov	r1, r8
   13898:	mov	r0, r7
   1389c:	ldr	r6, [r5]
   138a0:	str	r3, [sp, #16]
   138a4:	ldr	r3, [r4, #40]	; 0x28
   138a8:	str	r3, [sp, #12]
   138ac:	add	r3, r4, #8
   138b0:	str	r3, [sp, #8]
   138b4:	ldr	r3, [r4, #4]
   138b8:	str	r3, [sp, #4]
   138bc:	ldr	r3, [r4]
   138c0:	str	r3, [sp]
   138c4:	mov	r3, sl
   138c8:	bl	128cc <strspn@plt+0x18e0>
   138cc:	str	r6, [r5]
   138d0:	add	sp, sp, #24
   138d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138d8:	muleq	r2, r8, r2
   138dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138e0:	cmp	r3, #0
   138e4:	sub	sp, sp, #44	; 0x2c
   138e8:	mov	r6, r2
   138ec:	mov	sl, r1
   138f0:	mov	r9, r0
   138f4:	ldr	r4, [pc, #176]	; 139ac <strspn@plt+0x29c0>
   138f8:	movne	r4, r3
   138fc:	bl	10f14 <__errno_location@plt>
   13900:	ldr	r3, [r0]
   13904:	mov	r1, #0
   13908:	mov	r2, r9
   1390c:	mov	r8, r0
   13910:	mov	r0, r1
   13914:	ldr	r5, [r4, #4]
   13918:	add	fp, r4, #8
   1391c:	str	r3, [sp, #28]
   13920:	ldr	r3, [r4, #44]	; 0x2c
   13924:	cmp	r6, #0
   13928:	orreq	r5, r5, #1
   1392c:	str	r3, [sp, #16]
   13930:	ldr	r3, [r4, #40]	; 0x28
   13934:	stmib	sp, {r5, fp}
   13938:	str	r3, [sp, #12]
   1393c:	ldr	r3, [r4]
   13940:	str	r3, [sp]
   13944:	mov	r3, sl
   13948:	bl	128cc <strspn@plt+0x18e0>
   1394c:	add	r1, r0, #1
   13950:	mov	r7, r0
   13954:	mov	r0, r1
   13958:	str	r1, [sp, #36]	; 0x24
   1395c:	bl	14200 <strspn@plt+0x3214>
   13960:	ldr	r3, [r4, #44]	; 0x2c
   13964:	mov	r2, r9
   13968:	ldr	r1, [sp, #36]	; 0x24
   1396c:	str	r3, [sp, #16]
   13970:	ldr	r3, [r4, #40]	; 0x28
   13974:	stmib	sp, {r5, fp}
   13978:	str	r0, [sp, #32]
   1397c:	str	r3, [sp, #12]
   13980:	ldr	r3, [r4]
   13984:	str	r3, [sp]
   13988:	mov	r3, sl
   1398c:	bl	128cc <strspn@plt+0x18e0>
   13990:	ldr	r3, [sp, #28]
   13994:	cmp	r6, #0
   13998:	ldr	r0, [sp, #32]
   1399c:	str	r3, [r8]
   139a0:	strne	r7, [r6]
   139a4:	add	sp, sp, #44	; 0x2c
   139a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139ac:	muleq	r2, r8, r2
   139b0:	mov	r3, r2
   139b4:	mov	r2, #0
   139b8:	b	138dc <strspn@plt+0x28f0>
   139bc:	push	{r4, r5, r6, r7, r8, lr}
   139c0:	mov	r6, #1
   139c4:	ldr	r4, [pc, #100]	; 13a30 <strspn@plt+0x2a44>
   139c8:	ldr	r5, [r4]
   139cc:	add	r7, r5, #4
   139d0:	ldr	r3, [r4, #4]
   139d4:	cmp	r3, r6
   139d8:	bgt	13a20 <strspn@plt+0x2a34>
   139dc:	ldr	r6, [pc, #80]	; 13a34 <strspn@plt+0x2a48>
   139e0:	ldr	r0, [r5, #4]
   139e4:	cmp	r0, r6
   139e8:	beq	139fc <strspn@plt+0x2a10>
   139ec:	bl	12674 <strspn@plt+0x1688>
   139f0:	mov	r3, #256	; 0x100
   139f4:	str	r3, [r4, #8]
   139f8:	str	r6, [r4, #12]
   139fc:	ldr	r6, [pc, #52]	; 13a38 <strspn@plt+0x2a4c>
   13a00:	cmp	r5, r6
   13a04:	beq	13a14 <strspn@plt+0x2a28>
   13a08:	mov	r0, r5
   13a0c:	bl	12674 <strspn@plt+0x1688>
   13a10:	str	r6, [r4]
   13a14:	mov	r3, #1
   13a18:	str	r3, [r4, #4]
   13a1c:	pop	{r4, r5, r6, r7, r8, pc}
   13a20:	ldr	r0, [r7, r6, lsl #3]
   13a24:	add	r6, r6, #1
   13a28:	bl	12674 <strspn@plt+0x1688>
   13a2c:	b	139d0 <strspn@plt+0x29e4>
   13a30:	andeq	r6, r2, r4, lsl #2
   13a34:	muleq	r2, r8, r1
   13a38:	andeq	r6, r2, ip, lsl #2
   13a3c:	ldr	r3, [pc, #4]	; 13a48 <strspn@plt+0x2a5c>
   13a40:	mvn	r2, #0
   13a44:	b	135bc <strspn@plt+0x25d0>
   13a48:	muleq	r2, r8, r2
   13a4c:	ldr	r3, [pc]	; 13a54 <strspn@plt+0x2a68>
   13a50:	b	135bc <strspn@plt+0x25d0>
   13a54:	muleq	r2, r8, r2
   13a58:	mov	r1, r0
   13a5c:	mov	r0, #0
   13a60:	b	13a3c <strspn@plt+0x2a50>
   13a64:	mov	r2, r1
   13a68:	mov	r1, r0
   13a6c:	mov	r0, #0
   13a70:	b	13a4c <strspn@plt+0x2a60>
   13a74:	push	{r4, r5, lr}
   13a78:	sub	sp, sp, #52	; 0x34
   13a7c:	mov	r5, r2
   13a80:	mov	r4, r0
   13a84:	mov	r0, sp
   13a88:	bl	12770 <strspn@plt+0x1784>
   13a8c:	mov	r3, sp
   13a90:	mvn	r2, #0
   13a94:	mov	r1, r5
   13a98:	mov	r0, r4
   13a9c:	bl	135bc <strspn@plt+0x25d0>
   13aa0:	add	sp, sp, #52	; 0x34
   13aa4:	pop	{r4, r5, pc}
   13aa8:	push	{r4, r5, r6, lr}
   13aac:	sub	sp, sp, #48	; 0x30
   13ab0:	mov	r5, r2
   13ab4:	mov	r6, r3
   13ab8:	mov	r4, r0
   13abc:	mov	r0, sp
   13ac0:	bl	12770 <strspn@plt+0x1784>
   13ac4:	mov	r3, sp
   13ac8:	mov	r2, r6
   13acc:	mov	r1, r5
   13ad0:	mov	r0, r4
   13ad4:	bl	135bc <strspn@plt+0x25d0>
   13ad8:	add	sp, sp, #48	; 0x30
   13adc:	pop	{r4, r5, r6, pc}
   13ae0:	mov	r2, r1
   13ae4:	mov	r1, r0
   13ae8:	mov	r0, #0
   13aec:	b	13a74 <strspn@plt+0x2a88>
   13af0:	mov	r3, r2
   13af4:	mov	r2, r1
   13af8:	mov	r1, r0
   13afc:	mov	r0, #0
   13b00:	b	13aa8 <strspn@plt+0x2abc>
   13b04:	push	{r4, r5, r6, lr}
   13b08:	mov	r4, r0
   13b0c:	mov	r5, r1
   13b10:	mov	r6, r2
   13b14:	sub	sp, sp, #48	; 0x30
   13b18:	mov	ip, sp
   13b1c:	ldr	lr, [pc, #64]	; 13b64 <strspn@plt+0x2b78>
   13b20:	ldm	lr!, {r0, r1, r2, r3}
   13b24:	stmia	ip!, {r0, r1, r2, r3}
   13b28:	ldm	lr!, {r0, r1, r2, r3}
   13b2c:	stmia	ip!, {r0, r1, r2, r3}
   13b30:	ldm	lr, {r0, r1, r2, r3}
   13b34:	stm	ip, {r0, r1, r2, r3}
   13b38:	mov	r1, r6
   13b3c:	mov	r2, #1
   13b40:	mov	r0, sp
   13b44:	bl	137c8 <strspn@plt+0x27dc>
   13b48:	mov	r3, sp
   13b4c:	mov	r2, r5
   13b50:	mov	r1, r4
   13b54:	mov	r0, #0
   13b58:	bl	135bc <strspn@plt+0x25d0>
   13b5c:	add	sp, sp, #48	; 0x30
   13b60:	pop	{r4, r5, r6, pc}
   13b64:	muleq	r2, r8, r2
   13b68:	mov	r2, r1
   13b6c:	mvn	r1, #0
   13b70:	b	13b04 <strspn@plt+0x2b18>
   13b74:	mov	r1, #58	; 0x3a
   13b78:	b	13b68 <strspn@plt+0x2b7c>
   13b7c:	mov	r2, #58	; 0x3a
   13b80:	b	13b04 <strspn@plt+0x2b18>
   13b84:	push	{r4, r5, lr}
   13b88:	sub	sp, sp, #100	; 0x64
   13b8c:	mov	r4, r0
   13b90:	mov	r0, sp
   13b94:	mov	r5, r2
   13b98:	bl	12770 <strspn@plt+0x1784>
   13b9c:	mov	ip, sp
   13ba0:	add	lr, sp, #48	; 0x30
   13ba4:	ldm	ip!, {r0, r1, r2, r3}
   13ba8:	stmia	lr!, {r0, r1, r2, r3}
   13bac:	ldm	ip!, {r0, r1, r2, r3}
   13bb0:	stmia	lr!, {r0, r1, r2, r3}
   13bb4:	ldm	ip, {r0, r1, r2, r3}
   13bb8:	stm	lr, {r0, r1, r2, r3}
   13bbc:	mov	r2, #1
   13bc0:	mov	r1, #58	; 0x3a
   13bc4:	add	r0, sp, #48	; 0x30
   13bc8:	bl	137c8 <strspn@plt+0x27dc>
   13bcc:	add	r3, sp, #48	; 0x30
   13bd0:	mvn	r2, #0
   13bd4:	mov	r1, r5
   13bd8:	mov	r0, r4
   13bdc:	bl	135bc <strspn@plt+0x25d0>
   13be0:	add	sp, sp, #100	; 0x64
   13be4:	pop	{r4, r5, pc}
   13be8:	push	{r4, r5, r6, r7, lr}
   13bec:	mov	r4, r0
   13bf0:	mov	r6, r1
   13bf4:	mov	r7, r2
   13bf8:	mov	r5, r3
   13bfc:	sub	sp, sp, #52	; 0x34
   13c00:	ldr	lr, [pc, #68]	; 13c4c <strspn@plt+0x2c60>
   13c04:	mov	ip, sp
   13c08:	ldm	lr!, {r0, r1, r2, r3}
   13c0c:	stmia	ip!, {r0, r1, r2, r3}
   13c10:	ldm	lr!, {r0, r1, r2, r3}
   13c14:	stmia	ip!, {r0, r1, r2, r3}
   13c18:	ldm	lr, {r0, r1, r2, r3}
   13c1c:	stm	ip, {r0, r1, r2, r3}
   13c20:	mov	r2, r7
   13c24:	mov	r1, r6
   13c28:	mov	r0, sp
   13c2c:	bl	13824 <strspn@plt+0x2838>
   13c30:	ldr	r2, [sp, #72]	; 0x48
   13c34:	mov	r3, sp
   13c38:	mov	r1, r5
   13c3c:	mov	r0, r4
   13c40:	bl	135bc <strspn@plt+0x25d0>
   13c44:	add	sp, sp, #52	; 0x34
   13c48:	pop	{r4, r5, r6, r7, pc}
   13c4c:	muleq	r2, r8, r2
   13c50:	mvn	ip, #0
   13c54:	push	{r0, r1, r2, lr}
   13c58:	str	ip, [sp]
   13c5c:	bl	13be8 <strspn@plt+0x2bfc>
   13c60:	add	sp, sp, #12
   13c64:	pop	{pc}		; (ldr pc, [sp], #4)
   13c68:	mov	r3, r2
   13c6c:	mov	r2, r1
   13c70:	mov	r1, r0
   13c74:	mov	r0, #0
   13c78:	b	13c50 <strspn@plt+0x2c64>
   13c7c:	push	{r0, r1, r2, lr}
   13c80:	str	r3, [sp]
   13c84:	mov	r3, r2
   13c88:	mov	r2, r1
   13c8c:	mov	r1, r0
   13c90:	mov	r0, #0
   13c94:	bl	13be8 <strspn@plt+0x2bfc>
   13c98:	add	sp, sp, #12
   13c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13ca0:	ldr	r3, [pc]	; 13ca8 <strspn@plt+0x2cbc>
   13ca4:	b	135bc <strspn@plt+0x25d0>
   13ca8:	andeq	r6, r2, r4, lsl r1
   13cac:	mov	r2, r1
   13cb0:	mov	r1, r0
   13cb4:	mov	r0, #0
   13cb8:	b	13ca0 <strspn@plt+0x2cb4>
   13cbc:	mvn	r2, #0
   13cc0:	b	13ca0 <strspn@plt+0x2cb4>
   13cc4:	mov	r1, r0
   13cc8:	mov	r0, #0
   13ccc:	b	13cbc <strspn@plt+0x2cd0>
   13cd0:	push	{r4, r5, r6, lr}
   13cd4:	cmp	r1, #0
   13cd8:	sub	sp, sp, #32
   13cdc:	mov	r5, r0
   13ce0:	ldr	r4, [sp, #48]	; 0x30
   13ce4:	ldr	r6, [sp, #52]	; 0x34
   13ce8:	beq	13d9c <strspn@plt+0x2db0>
   13cec:	strd	r2, [sp]
   13cf0:	mov	r3, r1
   13cf4:	mov	r1, #1
   13cf8:	ldr	r2, [pc, #856]	; 14058 <strspn@plt+0x306c>
   13cfc:	bl	10f5c <__fprintf_chk@plt>
   13d00:	mov	r2, #5
   13d04:	ldr	r1, [pc, #848]	; 1405c <strspn@plt+0x3070>
   13d08:	mov	r0, #0
   13d0c:	bl	10e0c <dcgettext@plt>
   13d10:	movw	r3, #2022	; 0x7e6
   13d14:	ldr	r2, [pc, #836]	; 14060 <strspn@plt+0x3074>
   13d18:	mov	r1, #1
   13d1c:	str	r3, [sp]
   13d20:	mov	r3, r0
   13d24:	mov	r0, r5
   13d28:	bl	10f5c <__fprintf_chk@plt>
   13d2c:	mov	r1, r5
   13d30:	mov	r0, #10
   13d34:	bl	10e00 <fputc_unlocked@plt>
   13d38:	mov	r2, #5
   13d3c:	ldr	r1, [pc, #800]	; 14064 <strspn@plt+0x3078>
   13d40:	mov	r0, #0
   13d44:	bl	10e0c <dcgettext@plt>
   13d48:	mov	r2, r0
   13d4c:	mov	r1, #1
   13d50:	ldr	r3, [pc, #784]	; 14068 <strspn@plt+0x307c>
   13d54:	mov	r0, r5
   13d58:	bl	10f5c <__fprintf_chk@plt>
   13d5c:	mov	r1, r5
   13d60:	mov	r0, #10
   13d64:	bl	10e00 <fputc_unlocked@plt>
   13d68:	cmp	r6, #9
   13d6c:	ldrls	pc, [pc, r6, lsl #2]
   13d70:	b	1404c <strspn@plt+0x3060>
   13d74:	andeq	r3, r1, ip, lsl #29
   13d78:			; <UNDEFINED> instruction: 0x00013db4
   13d7c:	andeq	r3, r1, r0, ror #27
   13d80:	andeq	r3, r1, r4, lsl lr
   13d84:	andeq	r3, r1, r0, asr lr
   13d88:	muleq	r1, r4, lr
   13d8c:	ldrdeq	r3, [r1], -ip
   13d90:	andeq	r3, r1, ip, lsr #30
   13d94:	andeq	r3, r1, r4, lsl #31
   13d98:	andeq	r3, r1, r4, ror #31
   13d9c:	mov	r1, #1
   13da0:	str	r3, [sp]
   13da4:	mov	r3, r2
   13da8:	ldr	r2, [pc, #700]	; 1406c <strspn@plt+0x3080>
   13dac:	bl	10f5c <__fprintf_chk@plt>
   13db0:	b	13d00 <strspn@plt+0x2d14>
   13db4:	mov	r2, #5
   13db8:	ldr	r1, [pc, #688]	; 14070 <strspn@plt+0x3084>
   13dbc:	mov	r0, #0
   13dc0:	bl	10e0c <dcgettext@plt>
   13dc4:	ldr	r3, [r4]
   13dc8:	mov	r2, r0
   13dcc:	mov	r1, #1
   13dd0:	mov	r0, r5
   13dd4:	add	sp, sp, #32
   13dd8:	pop	{r4, r5, r6, lr}
   13ddc:	b	10f5c <__fprintf_chk@plt>
   13de0:	mov	r2, #5
   13de4:	ldr	r1, [pc, #648]	; 14074 <strspn@plt+0x3088>
   13de8:	mov	r0, #0
   13dec:	bl	10e0c <dcgettext@plt>
   13df0:	ldr	r3, [r4, #4]
   13df4:	mov	r2, r0
   13df8:	mov	r1, #1
   13dfc:	mov	r0, r5
   13e00:	str	r3, [sp, #48]	; 0x30
   13e04:	ldr	r3, [r4]
   13e08:	add	sp, sp, #32
   13e0c:	pop	{r4, r5, r6, lr}
   13e10:	b	10f5c <__fprintf_chk@plt>
   13e14:	mov	r2, #5
   13e18:	ldr	r1, [pc, #600]	; 14078 <strspn@plt+0x308c>
   13e1c:	mov	r0, #0
   13e20:	bl	10e0c <dcgettext@plt>
   13e24:	ldr	r3, [r4, #8]
   13e28:	mov	r2, r0
   13e2c:	mov	r1, #1
   13e30:	mov	r0, r5
   13e34:	str	r3, [sp, #52]	; 0x34
   13e38:	ldr	r3, [r4, #4]
   13e3c:	str	r3, [sp, #48]	; 0x30
   13e40:	ldr	r3, [r4]
   13e44:	add	sp, sp, #32
   13e48:	pop	{r4, r5, r6, lr}
   13e4c:	b	10f5c <__fprintf_chk@plt>
   13e50:	mov	r2, #5
   13e54:	ldr	r1, [pc, #544]	; 1407c <strspn@plt+0x3090>
   13e58:	mov	r0, #0
   13e5c:	bl	10e0c <dcgettext@plt>
   13e60:	ldr	r3, [r4, #12]
   13e64:	mov	r2, r0
   13e68:	mov	r1, #1
   13e6c:	mov	r0, r5
   13e70:	str	r3, [sp, #8]
   13e74:	ldr	r3, [r4, #8]
   13e78:	str	r3, [sp, #4]
   13e7c:	ldr	r3, [r4, #4]
   13e80:	str	r3, [sp]
   13e84:	ldr	r3, [r4]
   13e88:	bl	10f5c <__fprintf_chk@plt>
   13e8c:	add	sp, sp, #32
   13e90:	pop	{r4, r5, r6, pc}
   13e94:	mov	r2, #5
   13e98:	ldr	r1, [pc, #480]	; 14080 <strspn@plt+0x3094>
   13e9c:	mov	r0, #0
   13ea0:	bl	10e0c <dcgettext@plt>
   13ea4:	ldr	r3, [r4, #16]
   13ea8:	mov	r2, r0
   13eac:	mov	r1, #1
   13eb0:	mov	r0, r5
   13eb4:	str	r3, [sp, #12]
   13eb8:	ldr	r3, [r4, #12]
   13ebc:	str	r3, [sp, #8]
   13ec0:	ldr	r3, [r4, #8]
   13ec4:	str	r3, [sp, #4]
   13ec8:	ldr	r3, [r4, #4]
   13ecc:	str	r3, [sp]
   13ed0:	ldr	r3, [r4]
   13ed4:	bl	10f5c <__fprintf_chk@plt>
   13ed8:	b	13e8c <strspn@plt+0x2ea0>
   13edc:	mov	r2, #5
   13ee0:	ldr	r1, [pc, #412]	; 14084 <strspn@plt+0x3098>
   13ee4:	mov	r0, #0
   13ee8:	bl	10e0c <dcgettext@plt>
   13eec:	ldr	r3, [r4, #20]
   13ef0:	mov	r2, r0
   13ef4:	mov	r1, #1
   13ef8:	mov	r0, r5
   13efc:	str	r3, [sp, #16]
   13f00:	ldr	r3, [r4, #16]
   13f04:	str	r3, [sp, #12]
   13f08:	ldr	r3, [r4, #12]
   13f0c:	str	r3, [sp, #8]
   13f10:	ldr	r3, [r4, #8]
   13f14:	str	r3, [sp, #4]
   13f18:	ldr	r3, [r4, #4]
   13f1c:	str	r3, [sp]
   13f20:	ldr	r3, [r4]
   13f24:	bl	10f5c <__fprintf_chk@plt>
   13f28:	b	13e8c <strspn@plt+0x2ea0>
   13f2c:	mov	r2, #5
   13f30:	ldr	r1, [pc, #336]	; 14088 <strspn@plt+0x309c>
   13f34:	mov	r0, #0
   13f38:	bl	10e0c <dcgettext@plt>
   13f3c:	ldr	r3, [r4, #24]
   13f40:	mov	r2, r0
   13f44:	mov	r1, #1
   13f48:	mov	r0, r5
   13f4c:	str	r3, [sp, #20]
   13f50:	ldr	r3, [r4, #20]
   13f54:	str	r3, [sp, #16]
   13f58:	ldr	r3, [r4, #16]
   13f5c:	str	r3, [sp, #12]
   13f60:	ldr	r3, [r4, #12]
   13f64:	str	r3, [sp, #8]
   13f68:	ldr	r3, [r4, #8]
   13f6c:	str	r3, [sp, #4]
   13f70:	ldr	r3, [r4, #4]
   13f74:	str	r3, [sp]
   13f78:	ldr	r3, [r4]
   13f7c:	bl	10f5c <__fprintf_chk@plt>
   13f80:	b	13e8c <strspn@plt+0x2ea0>
   13f84:	mov	r2, #5
   13f88:	ldr	r1, [pc, #252]	; 1408c <strspn@plt+0x30a0>
   13f8c:	mov	r0, #0
   13f90:	bl	10e0c <dcgettext@plt>
   13f94:	ldr	r3, [r4, #28]
   13f98:	mov	r2, r0
   13f9c:	mov	r1, #1
   13fa0:	mov	r0, r5
   13fa4:	str	r3, [sp, #24]
   13fa8:	ldr	r3, [r4, #24]
   13fac:	str	r3, [sp, #20]
   13fb0:	ldr	r3, [r4, #20]
   13fb4:	str	r3, [sp, #16]
   13fb8:	ldr	r3, [r4, #16]
   13fbc:	str	r3, [sp, #12]
   13fc0:	ldr	r3, [r4, #12]
   13fc4:	str	r3, [sp, #8]
   13fc8:	ldr	r3, [r4, #8]
   13fcc:	str	r3, [sp, #4]
   13fd0:	ldr	r3, [r4, #4]
   13fd4:	str	r3, [sp]
   13fd8:	ldr	r3, [r4]
   13fdc:	bl	10f5c <__fprintf_chk@plt>
   13fe0:	b	13e8c <strspn@plt+0x2ea0>
   13fe4:	ldr	r1, [pc, #164]	; 14090 <strspn@plt+0x30a4>
   13fe8:	mov	r2, #5
   13fec:	mov	r0, #0
   13ff0:	bl	10e0c <dcgettext@plt>
   13ff4:	ldr	r3, [r4, #32]
   13ff8:	mov	r2, r0
   13ffc:	mov	r1, #1
   14000:	mov	r0, r5
   14004:	str	r3, [sp, #28]
   14008:	ldr	r3, [r4, #28]
   1400c:	str	r3, [sp, #24]
   14010:	ldr	r3, [r4, #24]
   14014:	str	r3, [sp, #20]
   14018:	ldr	r3, [r4, #20]
   1401c:	str	r3, [sp, #16]
   14020:	ldr	r3, [r4, #16]
   14024:	str	r3, [sp, #12]
   14028:	ldr	r3, [r4, #12]
   1402c:	str	r3, [sp, #8]
   14030:	ldr	r3, [r4, #8]
   14034:	str	r3, [sp, #4]
   14038:	ldr	r3, [r4, #4]
   1403c:	str	r3, [sp]
   14040:	ldr	r3, [r4]
   14044:	bl	10f5c <__fprintf_chk@plt>
   14048:	b	13e8c <strspn@plt+0x2ea0>
   1404c:	mov	r2, #5
   14050:	ldr	r1, [pc, #60]	; 14094 <strspn@plt+0x30a8>
   14054:	b	13fec <strspn@plt+0x3000>
   14058:	andeq	r5, r1, sp, ror r5
   1405c:	muleq	r1, r0, r5
   14060:	andeq	r5, r1, lr, asr r8
   14064:	muleq	r1, r4, r5
   14068:	andeq	r5, r1, pc, lsr r6
   1406c:	andeq	r5, r1, r9, lsl #11
   14070:	andeq	r5, r1, r1, ror #12
   14074:	andeq	r5, r1, r1, ror r6
   14078:	andeq	r5, r1, r8, lsl #13
   1407c:	andeq	r5, r1, r4, lsr #13
   14080:	andeq	r5, r1, r4, asr #13
   14084:	andeq	r5, r1, r8, ror #13
   14088:	andeq	r5, r1, r0, lsl r7
   1408c:	andeq	r5, r1, ip, lsr r7
   14090:	andeq	r5, r1, ip, ror #14
   14094:	andeq	r5, r1, r0, lsr #15
   14098:	push	{r0, r1, r4, lr}
   1409c:	mov	ip, #0
   140a0:	ldr	lr, [sp, #16]
   140a4:	ldr	r4, [lr, ip, lsl #2]
   140a8:	cmp	r4, #0
   140ac:	bne	140c4 <strspn@plt+0x30d8>
   140b0:	str	lr, [sp]
   140b4:	str	ip, [sp, #4]
   140b8:	bl	13cd0 <strspn@plt+0x2ce4>
   140bc:	add	sp, sp, #8
   140c0:	pop	{r4, pc}
   140c4:	add	ip, ip, #1
   140c8:	b	140a4 <strspn@plt+0x30b8>
   140cc:	push	{r4, r5, r6, lr}
   140d0:	sub	sp, sp, #48	; 0x30
   140d4:	mov	ip, #0
   140d8:	add	lr, sp, #8
   140dc:	mov	r5, lr
   140e0:	ldr	r6, [sp, #64]	; 0x40
   140e4:	ldr	r4, [r6, ip, lsl #2]
   140e8:	cmp	r4, #0
   140ec:	str	r4, [lr], #4
   140f0:	beq	14100 <strspn@plt+0x3114>
   140f4:	add	ip, ip, #1
   140f8:	cmp	ip, #10
   140fc:	bne	140e4 <strspn@plt+0x30f8>
   14100:	stm	sp, {r5, ip}
   14104:	bl	13cd0 <strspn@plt+0x2ce4>
   14108:	add	sp, sp, #48	; 0x30
   1410c:	pop	{r4, r5, r6, pc}
   14110:	push	{r3}		; (str r3, [sp, #-4]!)
   14114:	push	{r0, r1, r2, r3, lr}
   14118:	add	r3, sp, #24
   1411c:	str	r3, [sp]
   14120:	str	r3, [sp, #12]
   14124:	ldr	r3, [sp, #20]
   14128:	bl	140cc <strspn@plt+0x30e0>
   1412c:	add	sp, sp, #16
   14130:	pop	{lr}		; (ldr lr, [sp], #4)
   14134:	add	sp, sp, #4
   14138:	bx	lr
   1413c:	ldr	r3, [pc, #116]	; 141b8 <strspn@plt+0x31cc>
   14140:	mov	r0, #10
   14144:	push	{r4, lr}
   14148:	ldr	r1, [r3]
   1414c:	bl	10e00 <fputc_unlocked@plt>
   14150:	mov	r2, #5
   14154:	ldr	r1, [pc, #96]	; 141bc <strspn@plt+0x31d0>
   14158:	mov	r0, #0
   1415c:	bl	10e0c <dcgettext@plt>
   14160:	mov	r1, r0
   14164:	ldr	r2, [pc, #84]	; 141c0 <strspn@plt+0x31d4>
   14168:	mov	r0, #1
   1416c:	bl	10f44 <__printf_chk@plt>
   14170:	mov	r2, #5
   14174:	ldr	r1, [pc, #72]	; 141c4 <strspn@plt+0x31d8>
   14178:	mov	r0, #0
   1417c:	bl	10e0c <dcgettext@plt>
   14180:	mov	r1, r0
   14184:	ldr	r3, [pc, #60]	; 141c8 <strspn@plt+0x31dc>
   14188:	mov	r0, #1
   1418c:	ldr	r2, [pc, #56]	; 141cc <strspn@plt+0x31e0>
   14190:	bl	10f44 <__printf_chk@plt>
   14194:	mov	r2, #5
   14198:	ldr	r1, [pc, #48]	; 141d0 <strspn@plt+0x31e4>
   1419c:	mov	r0, #0
   141a0:	bl	10e0c <dcgettext@plt>
   141a4:	mov	r1, r0
   141a8:	ldr	r2, [pc, #36]	; 141d4 <strspn@plt+0x31e8>
   141ac:	mov	r0, #1
   141b0:	pop	{r4, lr}
   141b4:	b	10f44 <__printf_chk@plt>
   141b8:	andeq	r6, r2, ip, asr r1
   141bc:	ldrdeq	r5, [r1], -ip
   141c0:	strdeq	r5, [r1], -r0
   141c4:	andeq	r5, r1, r6, lsl #16
   141c8:	andeq	r5, r1, r4, ror #2
   141cc:	andeq	r5, r1, ip, lsl #3
   141d0:	andeq	r5, r1, sl, lsl r8
   141d4:	andeq	r5, r1, r1, asr #16
   141d8:	push	{r4, lr}
   141dc:	bl	145c8 <strspn@plt+0x35dc>
   141e0:	cmp	r0, #0
   141e4:	popne	{r4, pc}
   141e8:	bl	14490 <strspn@plt+0x34a4>
   141ec:	push	{r4, lr}
   141f0:	bl	145c8 <strspn@plt+0x35dc>
   141f4:	cmp	r0, #0
   141f8:	popne	{r4, pc}
   141fc:	bl	14490 <strspn@plt+0x34a4>
   14200:	b	141d8 <strspn@plt+0x31ec>
   14204:	push	{r4, r5, r6, lr}
   14208:	mov	r5, r0
   1420c:	mov	r4, r1
   14210:	bl	145f4 <strspn@plt+0x3608>
   14214:	cmp	r0, #0
   14218:	popne	{r4, r5, r6, pc}
   1421c:	adds	r4, r4, #0
   14220:	movne	r4, #1
   14224:	cmp	r5, #0
   14228:	moveq	r4, #1
   1422c:	cmp	r4, #0
   14230:	popeq	{r4, r5, r6, pc}
   14234:	bl	14490 <strspn@plt+0x34a4>
   14238:	push	{r4, lr}
   1423c:	bl	148e4 <strspn@plt+0x38f8>
   14240:	cmp	r0, #0
   14244:	popne	{r4, pc}
   14248:	bl	14490 <strspn@plt+0x34a4>
   1424c:	push	{r4, r5, r6, lr}
   14250:	mov	r6, r0
   14254:	mov	r5, r1
   14258:	mov	r4, r2
   1425c:	bl	1498c <strspn@plt+0x39a0>
   14260:	cmp	r0, #0
   14264:	popne	{r4, r5, r6, pc}
   14268:	cmp	r6, #0
   1426c:	beq	1427c <strspn@plt+0x3290>
   14270:	cmp	r5, #0
   14274:	cmpne	r4, #0
   14278:	popeq	{r4, r5, r6, pc}
   1427c:	bl	14490 <strspn@plt+0x34a4>
   14280:	b	1424c <strspn@plt+0x3260>
   14284:	push	{r4, lr}
   14288:	bl	148f4 <strspn@plt+0x3908>
   1428c:	cmp	r0, #0
   14290:	popne	{r4, pc}
   14294:	bl	14490 <strspn@plt+0x34a4>
   14298:	mov	r2, r1
   1429c:	mov	r1, r0
   142a0:	mov	r0, #0
   142a4:	b	1424c <strspn@plt+0x3260>
   142a8:	mov	r2, r1
   142ac:	mov	r1, r0
   142b0:	mov	r0, #0
   142b4:	b	14284 <strspn@plt+0x3298>
   142b8:	cmp	r0, #0
   142bc:	push	{r4, r5, r6, lr}
   142c0:	mov	r5, r1
   142c4:	ldr	r4, [r1]
   142c8:	bne	142f4 <strspn@plt+0x3308>
   142cc:	cmp	r4, #0
   142d0:	bne	142e4 <strspn@plt+0x32f8>
   142d4:	mov	r4, #64	; 0x40
   142d8:	udiv	r4, r4, r2
   142dc:	cmp	r2, #64	; 0x40
   142e0:	addhi	r4, r4, #1
   142e4:	mov	r1, r4
   142e8:	bl	1424c <strspn@plt+0x3260>
   142ec:	str	r4, [r5]
   142f0:	pop	{r4, r5, r6, pc}
   142f4:	lsr	r3, r4, #1
   142f8:	add	r3, r3, #1
   142fc:	adds	r4, r4, r3
   14300:	bcc	142e4 <strspn@plt+0x32f8>
   14304:	bl	14490 <strspn@plt+0x34a4>
   14308:	mov	r2, #1
   1430c:	b	142b8 <strspn@plt+0x32cc>
   14310:	ldr	ip, [r1]
   14314:	push	{r4, r5, r6, r7, r8, lr}
   14318:	mov	r5, r1
   1431c:	mvn	r8, r3
   14320:	lsr	r8, r8, #31
   14324:	ldr	lr, [sp, #24]
   14328:	asr	r1, ip, #1
   1432c:	adds	r4, ip, r1
   14330:	mvnvs	r4, #-2147483648	; 0x80000000
   14334:	cmp	r3, r4
   14338:	movge	r1, #0
   1433c:	andlt	r1, r8, #1
   14340:	cmp	r1, #0
   14344:	movne	r4, r3
   14348:	smull	r6, r7, r4, lr
   1434c:	cmp	r7, r6, asr #31
   14350:	bne	14368 <strspn@plt+0x337c>
   14354:	cmp	r6, #63	; 0x3f
   14358:	mov	r1, r6
   1435c:	bgt	14378 <strspn@plt+0x338c>
   14360:	mov	r1, #64	; 0x40
   14364:	b	1436c <strspn@plt+0x3380>
   14368:	mvn	r1, #-2147483648	; 0x80000000
   1436c:	sdiv	r4, r1, lr
   14370:	mls	r6, lr, r4, r1
   14374:	sub	r1, r1, r6
   14378:	cmp	r0, #0
   1437c:	sub	r6, r4, ip
   14380:	streq	r0, [r5]
   14384:	cmp	r6, r2
   14388:	bge	143bc <strspn@plt+0x33d0>
   1438c:	adds	r4, ip, r2
   14390:	bvs	143b8 <strspn@plt+0x33cc>
   14394:	cmp	r4, r3
   14398:	movle	r3, #0
   1439c:	andgt	r3, r8, #1
   143a0:	cmp	r3, #0
   143a4:	bne	143b8 <strspn@plt+0x33cc>
   143a8:	smull	r2, r3, r4, lr
   143ac:	cmp	r3, r2, asr #31
   143b0:	mov	r1, r2
   143b4:	beq	143bc <strspn@plt+0x33d0>
   143b8:	bl	14490 <strspn@plt+0x34a4>
   143bc:	bl	14204 <strspn@plt+0x3218>
   143c0:	str	r4, [r5]
   143c4:	pop	{r4, r5, r6, r7, r8, pc}
   143c8:	push	{r4, lr}
   143cc:	bl	14574 <strspn@plt+0x3588>
   143d0:	cmp	r0, #0
   143d4:	popne	{r4, pc}
   143d8:	bl	14490 <strspn@plt+0x34a4>
   143dc:	mov	r1, #1
   143e0:	b	143c8 <strspn@plt+0x33dc>
   143e4:	push	{r4, lr}
   143e8:	bl	14574 <strspn@plt+0x3588>
   143ec:	cmp	r0, #0
   143f0:	popne	{r4, pc}
   143f4:	bl	14490 <strspn@plt+0x34a4>
   143f8:	mov	r1, #1
   143fc:	b	143e4 <strspn@plt+0x33f8>
   14400:	push	{r4, r5, r6, lr}
   14404:	mov	r4, r1
   14408:	mov	r5, r0
   1440c:	mov	r0, r1
   14410:	bl	141d8 <strspn@plt+0x31ec>
   14414:	mov	r2, r4
   14418:	mov	r1, r5
   1441c:	pop	{r4, r5, r6, lr}
   14420:	b	10dc4 <memcpy@plt>
   14424:	push	{r4, r5, r6, lr}
   14428:	mov	r4, r1
   1442c:	mov	r5, r0
   14430:	mov	r0, r1
   14434:	bl	141ec <strspn@plt+0x3200>
   14438:	mov	r2, r4
   1443c:	mov	r1, r5
   14440:	pop	{r4, r5, r6, lr}
   14444:	b	10dc4 <memcpy@plt>
   14448:	push	{r4, r5, r6, lr}
   1444c:	mov	r5, r0
   14450:	add	r0, r1, #1
   14454:	mov	r4, r1
   14458:	bl	141ec <strspn@plt+0x3200>
   1445c:	mov	r2, #0
   14460:	mov	r1, r5
   14464:	strb	r2, [r0, r4]
   14468:	mov	r2, r4
   1446c:	pop	{r4, r5, r6, lr}
   14470:	b	10dc4 <memcpy@plt>
   14474:	push	{r4, lr}
   14478:	mov	r4, r0
   1447c:	bl	10efc <strlen@plt>
   14480:	add	r1, r0, #1
   14484:	mov	r0, r4
   14488:	pop	{r4, lr}
   1448c:	b	14400 <strspn@plt+0x3414>
   14490:	ldr	r3, [pc, #44]	; 144c4 <strspn@plt+0x34d8>
   14494:	mov	r2, #5
   14498:	mov	r0, #0
   1449c:	push	{r4, lr}
   144a0:	ldr	r1, [pc, #32]	; 144c8 <strspn@plt+0x34dc>
   144a4:	ldr	r4, [r3]
   144a8:	bl	10e0c <dcgettext@plt>
   144ac:	mov	r3, r0
   144b0:	ldr	r2, [pc, #20]	; 144cc <strspn@plt+0x34e0>
   144b4:	mov	r1, #0
   144b8:	mov	r0, r4
   144bc:	bl	10e84 <error@plt>
   144c0:	bl	10fe0 <abort@plt>
   144c4:	andeq	r6, r2, r0, lsl #2
   144c8:	andeq	r5, r1, sp, lsl #17
   144cc:	andeq	r5, r1, r7, asr #7
   144d0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   144d4:	mov	r4, #0
   144d8:	mov	r7, r0
   144dc:	mov	r9, r3
   144e0:	mov	r5, r1
   144e4:	mov	r8, r2
   144e8:	bl	10f14 <__errno_location@plt>
   144ec:	mov	r6, r0
   144f0:	add	r1, sp, #4
   144f4:	str	r4, [r0]
   144f8:	mov	r0, r7
   144fc:	blx	r9
   14500:	ldr	r3, [sp, #4]
   14504:	cmp	r3, r7
   14508:	beq	14538 <strspn@plt+0x354c>
   1450c:	cmp	r5, r4
   14510:	bne	14540 <strspn@plt+0x3554>
   14514:	ldrb	r2, [r3]
   14518:	cmp	r2, r4
   1451c:	movne	r0, r5
   14520:	bne	14568 <strspn@plt+0x357c>
   14524:	vcmp.f64	d0, #0.0
   14528:	vmrs	APSR_nzcv, fpscr
   1452c:	bne	14550 <strspn@plt+0x3564>
   14530:	mov	r0, #1
   14534:	b	14568 <strspn@plt+0x357c>
   14538:	mov	r0, r4
   1453c:	b	1455c <strspn@plt+0x3570>
   14540:	vcmp.f64	d0, #0.0
   14544:	vmrs	APSR_nzcv, fpscr
   14548:	moveq	r0, #1
   1454c:	beq	14564 <strspn@plt+0x3578>
   14550:	ldr	r0, [r6]
   14554:	subs	r0, r0, #34	; 0x22
   14558:	movne	r0, #1
   1455c:	cmp	r5, #0
   14560:	beq	14568 <strspn@plt+0x357c>
   14564:	str	r3, [r5]
   14568:	vstr	d0, [r8]
   1456c:	add	sp, sp, #12
   14570:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14574:	cmp	r1, #0
   14578:	cmpne	r0, #0
   1457c:	beq	145b4 <strspn@plt+0x35c8>
   14580:	push	{r4, r5, r6, lr}
   14584:	umull	r4, r5, r0, r1
   14588:	adds	r3, r5, #0
   1458c:	movne	r3, #1
   14590:	cmp	r4, #0
   14594:	blt	145a0 <strspn@plt+0x35b4>
   14598:	cmp	r3, #0
   1459c:	beq	145c0 <strspn@plt+0x35d4>
   145a0:	bl	10f14 <__errno_location@plt>
   145a4:	mov	r3, #12
   145a8:	str	r3, [r0]
   145ac:	mov	r0, #0
   145b0:	pop	{r4, r5, r6, pc}
   145b4:	mov	r1, #1
   145b8:	mov	r0, r1
   145bc:	b	10d4c <calloc@plt>
   145c0:	pop	{r4, r5, r6, lr}
   145c4:	b	145bc <strspn@plt+0x35d0>
   145c8:	cmp	r0, #0
   145cc:	beq	145ec <strspn@plt+0x3600>
   145d0:	bge	145f0 <strspn@plt+0x3604>
   145d4:	push	{r4, lr}
   145d8:	bl	10f14 <__errno_location@plt>
   145dc:	mov	r3, #12
   145e0:	str	r3, [r0]
   145e4:	mov	r0, #0
   145e8:	pop	{r4, pc}
   145ec:	mov	r0, #1
   145f0:	b	10e9c <malloc@plt>
   145f4:	cmp	r0, #0
   145f8:	bne	14604 <strspn@plt+0x3618>
   145fc:	mov	r0, r1
   14600:	b	145c8 <strspn@plt+0x35dc>
   14604:	cmp	r1, #0
   14608:	push	{r4, lr}
   1460c:	bne	1461c <strspn@plt+0x3630>
   14610:	bl	12674 <strspn@plt+0x1688>
   14614:	mov	r0, #0
   14618:	pop	{r4, pc}
   1461c:	blt	14628 <strspn@plt+0x363c>
   14620:	pop	{r4, lr}
   14624:	b	10e18 <realloc@plt>
   14628:	bl	10f14 <__errno_location@plt>
   1462c:	mov	r3, #12
   14630:	str	r3, [r0]
   14634:	b	14614 <strspn@plt+0x3628>
   14638:	push	{r4, r5, r6, r7, r8, lr}
   1463c:	mov	r6, r0
   14640:	mov	r5, r1
   14644:	ldr	r4, [pc, #140]	; 146d8 <strspn@plt+0x36ec>
   14648:	vpush	{d8}
   1464c:	ldr	r2, [r4]
   14650:	cmp	r2, #0
   14654:	bne	14668 <strspn@plt+0x367c>
   14658:	ldr	r1, [pc, #124]	; 146dc <strspn@plt+0x36f0>
   1465c:	movw	r0, #8127	; 0x1fbf
   14660:	bl	10fa4 <newlocale@plt>
   14664:	str	r0, [r4]
   14668:	ldr	r0, [r4]
   1466c:	cmp	r0, #0
   14670:	bne	1468c <strspn@plt+0x36a0>
   14674:	vldr	d8, [pc, #84]	; 146d0 <strspn@plt+0x36e4>
   14678:	cmp	r5, #0
   1467c:	strne	r6, [r5]
   14680:	vmov.f64	d0, d8
   14684:	vpop	{d8}
   14688:	pop	{r4, r5, r6, r7, r8, pc}
   1468c:	bl	10d64 <uselocale@plt>
   14690:	subs	r7, r0, #0
   14694:	beq	14674 <strspn@plt+0x3688>
   14698:	mov	r1, r5
   1469c:	mov	r0, r6
   146a0:	bl	10ddc <strtold@plt>
   146a4:	vmov.f64	d8, d0
   146a8:	bl	10f14 <__errno_location@plt>
   146ac:	mov	r4, r0
   146b0:	mov	r0, r7
   146b4:	ldr	r5, [r4]
   146b8:	bl	10d64 <uselocale@plt>
   146bc:	cmp	r0, #0
   146c0:	strne	r5, [r4]
   146c4:	bne	14680 <strspn@plt+0x3694>
   146c8:	bl	10fe0 <abort@plt>
   146cc:	nop	{0}
	...
   146d8:	andeq	r6, r2, r8, asr #5
   146dc:	andeq	r5, r1, r3, ror #7
   146e0:	push	{r4, r5, r6, lr}
   146e4:	mov	r4, r0
   146e8:	bl	10e60 <__fpending@plt>
   146ec:	mov	r5, r0
   146f0:	mov	r0, r4
   146f4:	bl	10e6c <ferror_unlocked@plt>
   146f8:	mov	r6, r0
   146fc:	mov	r0, r4
   14700:	bl	14750 <strspn@plt+0x3764>
   14704:	cmp	r6, #0
   14708:	mov	r4, r0
   1470c:	bne	14738 <strspn@plt+0x374c>
   14710:	cmp	r0, #0
   14714:	beq	14730 <strspn@plt+0x3744>
   14718:	cmp	r5, #0
   1471c:	bne	14748 <strspn@plt+0x375c>
   14720:	bl	10f14 <__errno_location@plt>
   14724:	ldr	r4, [r0]
   14728:	subs	r4, r4, #9
   1472c:	mvnne	r4, #0
   14730:	mov	r0, r4
   14734:	pop	{r4, r5, r6, pc}
   14738:	cmp	r0, #0
   1473c:	bne	14748 <strspn@plt+0x375c>
   14740:	bl	10f14 <__errno_location@plt>
   14744:	str	r4, [r0]
   14748:	mvn	r4, #0
   1474c:	b	14730 <strspn@plt+0x3744>
   14750:	push	{r0, r1, r2, r4, r5, lr}
   14754:	mov	r4, r0
   14758:	bl	10f50 <fileno@plt>
   1475c:	cmp	r0, #0
   14760:	mov	r0, r4
   14764:	bge	14774 <strspn@plt+0x3788>
   14768:	add	sp, sp, #12
   1476c:	pop	{r4, r5, lr}
   14770:	b	10f68 <fclose@plt>
   14774:	bl	10eb4 <__freading@plt>
   14778:	cmp	r0, #0
   1477c:	bne	147b8 <strspn@plt+0x37cc>
   14780:	mov	r0, r4
   14784:	bl	147f8 <strspn@plt+0x380c>
   14788:	cmp	r0, #0
   1478c:	bne	147ec <strspn@plt+0x3800>
   14790:	mov	r5, #0
   14794:	mov	r0, r4
   14798:	bl	10f68 <fclose@plt>
   1479c:	cmp	r5, #0
   147a0:	beq	147b0 <strspn@plt+0x37c4>
   147a4:	bl	10f14 <__errno_location@plt>
   147a8:	str	r5, [r0]
   147ac:	mvn	r0, #0
   147b0:	add	sp, sp, #12
   147b4:	pop	{r4, r5, pc}
   147b8:	mov	r0, r4
   147bc:	bl	10f50 <fileno@plt>
   147c0:	mov	r3, #1
   147c4:	mov	r2, #0
   147c8:	str	r3, [sp]
   147cc:	mov	r3, #0
   147d0:	bl	10e3c <lseek64@plt>
   147d4:	mvn	r3, #0
   147d8:	mvn	r2, #0
   147dc:	cmp	r1, r3
   147e0:	cmpeq	r0, r2
   147e4:	bne	14780 <strspn@plt+0x3794>
   147e8:	b	14790 <strspn@plt+0x37a4>
   147ec:	bl	10f14 <__errno_location@plt>
   147f0:	ldr	r5, [r0]
   147f4:	b	14794 <strspn@plt+0x37a8>
   147f8:	push	{r0, r1, r4, lr}
   147fc:	subs	r4, r0, #0
   14800:	bne	14814 <strspn@plt+0x3828>
   14804:	mov	r0, r4
   14808:	add	sp, sp, #8
   1480c:	pop	{r4, lr}
   14810:	b	10d94 <fflush@plt>
   14814:	bl	10eb4 <__freading@plt>
   14818:	cmp	r0, #0
   1481c:	beq	14804 <strspn@plt+0x3818>
   14820:	ldr	r3, [r4]
   14824:	tst	r3, #256	; 0x100
   14828:	beq	14804 <strspn@plt+0x3818>
   1482c:	mov	r3, #1
   14830:	mov	r2, #0
   14834:	mov	r0, r4
   14838:	str	r3, [sp]
   1483c:	mov	r3, #0
   14840:	bl	14848 <strspn@plt+0x385c>
   14844:	b	14804 <strspn@plt+0x3818>
   14848:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1484c:	mov	r4, r0
   14850:	ldmib	r0, {ip, lr}
   14854:	ldr	r8, [sp, #32]
   14858:	cmp	lr, ip
   1485c:	bne	148cc <strspn@plt+0x38e0>
   14860:	ldr	ip, [r0, #16]
   14864:	ldr	lr, [r0, #20]
   14868:	cmp	lr, ip
   1486c:	bne	148cc <strspn@plt+0x38e0>
   14870:	ldr	r5, [r0, #36]	; 0x24
   14874:	cmp	r5, #0
   14878:	bne	148cc <strspn@plt+0x38e0>
   1487c:	mov	r6, r2
   14880:	mov	r7, r3
   14884:	bl	10f50 <fileno@plt>
   14888:	mov	r2, r6
   1488c:	mov	r3, r7
   14890:	str	r8, [sp]
   14894:	bl	10e3c <lseek64@plt>
   14898:	mvn	r3, #0
   1489c:	mvn	r2, #0
   148a0:	cmp	r1, r3
   148a4:	cmpeq	r0, r2
   148a8:	mvneq	r0, #0
   148ac:	beq	148c4 <strspn@plt+0x38d8>
   148b0:	ldr	r3, [r4]
   148b4:	strd	r0, [r4, #80]	; 0x50
   148b8:	mov	r0, r5
   148bc:	bic	r3, r3, #16
   148c0:	str	r3, [r4]
   148c4:	add	sp, sp, #8
   148c8:	pop	{r4, r5, r6, r7, r8, pc}
   148cc:	mov	r0, r4
   148d0:	str	r8, [sp, #32]
   148d4:	add	sp, sp, #8
   148d8:	pop	{r4, r5, r6, r7, r8, lr}
   148dc:	b	10f74 <fseeko64@plt>
   148e0:	b	145c8 <strspn@plt+0x35dc>
   148e4:	cmp	r1, #0
   148e8:	orreq	r1, r1, #1
   148ec:	b	145f4 <strspn@plt+0x3608>
   148f0:	b	14574 <strspn@plt+0x3588>
   148f4:	cmp	r2, #0
   148f8:	cmpne	r1, #0
   148fc:	moveq	r2, #1
   14900:	moveq	r1, r2
   14904:	b	1498c <strspn@plt+0x39a0>
   14908:	push	{r4, lr}
   1490c:	mov	r0, #14
   14910:	bl	10f98 <nl_langinfo@plt>
   14914:	cmp	r0, #0
   14918:	beq	14930 <strspn@plt+0x3944>
   1491c:	ldrb	r2, [r0]
   14920:	ldr	r3, [pc, #16]	; 14938 <strspn@plt+0x394c>
   14924:	cmp	r2, #0
   14928:	moveq	r0, r3
   1492c:	pop	{r4, pc}
   14930:	ldr	r0, [pc]	; 14938 <strspn@plt+0x394c>
   14934:	pop	{r4, pc}
   14938:	muleq	r1, lr, r8
   1493c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14940:	subs	r5, r0, #0
   14944:	mov	r7, r2
   14948:	addeq	r5, sp, #4
   1494c:	mov	r6, r1
   14950:	mov	r0, r5
   14954:	bl	10e78 <mbrtowc@plt>
   14958:	cmp	r7, #0
   1495c:	cmnne	r0, #3
   14960:	mov	r4, r0
   14964:	bls	14980 <strspn@plt+0x3994>
   14968:	mov	r0, #0
   1496c:	bl	149b8 <strspn@plt+0x39cc>
   14970:	cmp	r0, #0
   14974:	ldrbeq	r3, [r6]
   14978:	moveq	r4, #1
   1497c:	streq	r3, [r5]
   14980:	mov	r0, r4
   14984:	add	sp, sp, #12
   14988:	pop	{r4, r5, r6, r7, pc}
   1498c:	umull	r2, r3, r1, r2
   14990:	cmp	r3, #0
   14994:	bne	149a0 <strspn@plt+0x39b4>
   14998:	mov	r1, r2
   1499c:	b	145f4 <strspn@plt+0x3608>
   149a0:	push	{r4, lr}
   149a4:	bl	10f14 <__errno_location@plt>
   149a8:	mov	r3, #12
   149ac:	str	r3, [r0]
   149b0:	mov	r0, #0
   149b4:	pop	{r4, pc}
   149b8:	push	{lr}		; (str lr, [sp, #-4]!)
   149bc:	sub	sp, sp, #268	; 0x10c
   149c0:	movw	r2, #257	; 0x101
   149c4:	add	r1, sp, #4
   149c8:	bl	14a14 <strspn@plt+0x3a28>
   149cc:	cmp	r0, #0
   149d0:	movne	r0, #0
   149d4:	bne	14a04 <strspn@plt+0x3a18>
   149d8:	ldr	r1, [pc, #44]	; 14a0c <strspn@plt+0x3a20>
   149dc:	add	r0, sp, #4
   149e0:	bl	10d70 <strcmp@plt>
   149e4:	cmp	r0, #0
   149e8:	beq	14a00 <strspn@plt+0x3a14>
   149ec:	ldr	r1, [pc, #28]	; 14a10 <strspn@plt+0x3a24>
   149f0:	add	r0, sp, #4
   149f4:	bl	10d70 <strcmp@plt>
   149f8:	adds	r0, r0, #0
   149fc:	movne	r0, #1
   14a00:	and	r0, r0, #1
   14a04:	add	sp, sp, #268	; 0x10c
   14a08:	pop	{pc}		; (ldr pc, [sp], #4)
   14a0c:	andeq	r5, r1, r3, ror #7
   14a10:	andeq	r5, r1, r4, lsr #17
   14a14:	push	{r4, r5, r6, lr}
   14a18:	mov	r5, r1
   14a1c:	mov	r1, #0
   14a20:	mov	r4, r2
   14a24:	bl	10f80 <setlocale@plt>
   14a28:	subs	r6, r0, #0
   14a2c:	bne	14a40 <strspn@plt+0x3a54>
   14a30:	cmp	r4, #0
   14a34:	mov	r0, #22
   14a38:	strbne	r6, [r5]
   14a3c:	pop	{r4, r5, r6, pc}
   14a40:	bl	10efc <strlen@plt>
   14a44:	cmp	r4, r0
   14a48:	bls	14a64 <strspn@plt+0x3a78>
   14a4c:	add	r2, r0, #1
   14a50:	mov	r1, r6
   14a54:	mov	r0, r5
   14a58:	bl	10dc4 <memcpy@plt>
   14a5c:	mov	r0, #0
   14a60:	pop	{r4, r5, r6, pc}
   14a64:	cmp	r4, #0
   14a68:	beq	14a88 <strspn@plt+0x3a9c>
   14a6c:	sub	r4, r4, #1
   14a70:	mov	r1, r6
   14a74:	mov	r2, r4
   14a78:	mov	r0, r5
   14a7c:	bl	10dc4 <memcpy@plt>
   14a80:	mov	r3, #0
   14a84:	strb	r3, [r5, r4]
   14a88:	mov	r0, #34	; 0x22
   14a8c:	pop	{r4, r5, r6, pc}
   14a90:	mov	r1, #0
   14a94:	b	10f80 <setlocale@plt>
   14a98:	vmov	d6, r0, r1
   14a9c:	vldr	d7, [pc, #36]	; 14ac8 <strspn@plt+0x3adc>
   14aa0:	vldr	d5, [pc, #40]	; 14ad0 <strspn@plt+0x3ae4>
   14aa4:	vmul.f64	d7, d6, d7
   14aa8:	vcvt.u32.f64	s14, d7
   14aac:	vcvt.f64.u32	d4, s14
   14ab0:	vmov	r1, s14
   14ab4:	vmls.f64	d6, d4, d5
   14ab8:	vcvt.u32.f64	s15, d6
   14abc:	vmov	r0, s15
   14ac0:	bx	lr
   14ac4:	nop			; (mov r0, r0)
   14ac8:	andeq	r0, r0, r0
   14acc:	ldclcc	0, cr0, [r0]
   14ad0:	andeq	r0, r0, r0
   14ad4:	mvnsmi	r0, r0
   14ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14adc:	mov	r7, r0
   14ae0:	ldr	r6, [pc, #72]	; 14b30 <strspn@plt+0x3b44>
   14ae4:	ldr	r5, [pc, #72]	; 14b34 <strspn@plt+0x3b48>
   14ae8:	add	r6, pc, r6
   14aec:	add	r5, pc, r5
   14af0:	sub	r6, r6, r5
   14af4:	mov	r8, r1
   14af8:	mov	r9, r2
   14afc:	bl	10d2c <calloc@plt-0x20>
   14b00:	asrs	r6, r6, #2
   14b04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b08:	mov	r4, #0
   14b0c:	add	r4, r4, #1
   14b10:	ldr	r3, [r5], #4
   14b14:	mov	r2, r9
   14b18:	mov	r1, r8
   14b1c:	mov	r0, r7
   14b20:	blx	r3
   14b24:	cmp	r6, r4
   14b28:	bne	14b0c <strspn@plt+0x3b20>
   14b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b30:	andeq	r1, r1, r4, lsr #8
   14b34:	andeq	r1, r1, ip, lsl r4
   14b38:	bx	lr
   14b3c:	ldr	r3, [pc, #12]	; 14b50 <strspn@plt+0x3b64>
   14b40:	mov	r1, #0
   14b44:	add	r3, pc, r3
   14b48:	ldr	r2, [r3]
   14b4c:	b	10f2c <__cxa_atexit@plt>
   14b50:	andeq	r1, r1, ip, lsr #11

Disassembly of section .fini:

00014b54 <.fini>:
   14b54:	push	{r3, lr}
   14b58:	pop	{r3, pc}
