
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000d3c <_init>:
 d3c:	push	{r3, lr}
 d40:	bl	f3c <call_weak_fn>
 d44:	pop	{r3, pc}

Disassembly of section .plt:

00000d48 <.plt>:
 d48:	push	{lr}		; (str lr, [sp, #-4]!)
 d4c:	ldr	lr, [pc, #4]	; d58 <.plt+0x10>
 d50:	add	lr, pc, lr
 d54:	ldr	pc, [lr, #8]!
 d58:	.word	0x000452a8

00000d5c <calloc@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #282624	; 0x45000
 d64:	ldr	pc, [ip, #680]!	; 0x2a8

00000d68 <strcmp@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #282624	; 0x45000
 d70:	ldr	pc, [ip, #672]!	; 0x2a0

00000d74 <__cxa_finalize@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #282624	; 0x45000
 d7c:	ldr	pc, [ip, #664]!	; 0x298

00000d80 <printf@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #282624	; 0x45000
 d88:	ldr	pc, [ip, #656]!	; 0x290

00000d8c <fopen@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #282624	; 0x45000
 d94:	ldr	pc, [ip, #648]!	; 0x288

00000d98 <getprotobyname@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #282624	; 0x45000
 da0:	ldr	pc, [ip, #640]!	; 0x280

00000da4 <longjmp@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #282624	; 0x45000
 dac:	ldr	pc, [ip, #632]!	; 0x278

00000db0 <_setjmp@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #282624	; 0x45000
 db8:	ldr	pc, [ip, #624]!	; 0x270

00000dbc <free@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #282624	; 0x45000
 dc4:	ldr	pc, [ip, #616]!	; 0x268

00000dc8 <getnetbyname@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #282624	; 0x45000
 dd0:	ldr	pc, [ip, #608]!	; 0x260

00000dd4 <ferror@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #282624	; 0x45000
 ddc:	ldr	pc, [ip, #600]!	; 0x258

00000de0 <memcpy@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #282624	; 0x45000
 de8:	ldr	pc, [ip, #592]!	; 0x250

00000dec <strdup@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #282624	; 0x45000
 df4:	ldr	pc, [ip, #584]!	; 0x248

00000df8 <rewind@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #282624	; 0x45000
 e00:	ldr	pc, [ip, #576]!	; 0x240

00000e04 <realloc@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #282624	; 0x45000
 e0c:	ldr	pc, [ip, #568]!	; 0x238

00000e10 <fwrite@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #282624	; 0x45000
 e18:	ldr	pc, [ip, #560]!	; 0x230

00000e1c <fread@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #282624	; 0x45000
 e24:	ldr	pc, [ip, #552]!	; 0x228

00000e28 <puts@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #282624	; 0x45000
 e30:	ldr	pc, [ip, #544]!	; 0x220

00000e34 <malloc@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #282624	; 0x45000
 e3c:	ldr	pc, [ip, #536]!	; 0x218

00000e40 <__gmon_start__@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #282624	; 0x45000
 e48:	ldr	pc, [ip, #528]!	; 0x210

00000e4c <__ctype_b_loc@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #282624	; 0x45000
 e54:	ldr	pc, [ip, #520]!	; 0x208

00000e58 <exit@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #282624	; 0x45000
 e60:	ldr	pc, [ip, #512]!	; 0x200

00000e64 <strlen@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #282624	; 0x45000
 e6c:	ldr	pc, [ip, #504]!	; 0x1f8

00000e70 <strchr@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #282624	; 0x45000
 e78:	ldr	pc, [ip, #496]!	; 0x1f0

00000e7c <fprintf@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #282624	; 0x45000
 e84:	ldr	pc, [ip, #488]!	; 0x1e8

00000e88 <__errno_location@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #282624	; 0x45000
 e90:	ldr	pc, [ip, #480]!	; 0x1e0

00000e94 <getservbyname@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #282624	; 0x45000
 e9c:	ldr	pc, [ip, #472]!	; 0x1d8

00000ea0 <memset@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #282624	; 0x45000
 ea8:	ldr	pc, [ip, #464]!	; 0x1d0

00000eac <putchar@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #282624	; 0x45000
 eb4:	ldr	pc, [ip, #456]!	; 0x1c8

00000eb8 <strncpy@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #282624	; 0x45000
 ec0:	ldr	pc, [ip, #448]!	; 0x1c0

00000ec4 <fileno@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #282624	; 0x45000
 ecc:	ldr	pc, [ip, #440]!	; 0x1b8

00000ed0 <sscanf@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #282624	; 0x45000
 ed8:	ldr	pc, [ip, #432]!	; 0x1b0

00000edc <clearerr@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #282624	; 0x45000
 ee4:	ldr	pc, [ip, #424]!	; 0x1a8

00000ee8 <vsnprintf@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #282624	; 0x45000
 ef0:	ldr	pc, [ip, #416]!	; 0x1a0

00000ef4 <freeaddrinfo@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #282624	; 0x45000
 efc:	ldr	pc, [ip, #408]!	; 0x198

00000f00 <getaddrinfo@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #282624	; 0x45000
 f08:	ldr	pc, [ip, #400]!	; 0x190

00000f0c <gethostbyname@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #282624	; 0x45000
 f14:	ldr	pc, [ip, #392]!	; 0x188

00000f18 <isatty@plt>:
 f18:	add	ip, pc, #0, 12
 f1c:	add	ip, ip, #282624	; 0x45000
 f20:	ldr	pc, [ip, #384]!	; 0x180

00000f24 <abort@plt>:
 f24:	add	ip, pc, #0, 12
 f28:	add	ip, ip, #282624	; 0x45000
 f2c:	ldr	pc, [ip, #376]!	; 0x178

00000f30 <getc@plt>:
 f30:	add	ip, pc, #0, 12
 f34:	add	ip, ip, #282624	; 0x45000
 f38:	ldr	pc, [ip, #368]!	; 0x170

Disassembly of section .text:

00000f3c <call_weak_fn>:
     f3c:	ldr	r3, [pc, #20]	; f58 <call_weak_fn+0x1c>
     f40:	ldr	r2, [pc, #20]	; f5c <call_weak_fn+0x20>
     f44:	add	r3, pc, r3
     f48:	ldr	r2, [r3, r2]
     f4c:	cmp	r2, #0
     f50:	bxeq	lr
     f54:	b	e40 <__gmon_start__@plt>
     f58:	.word	0x000450b4
     f5c:	.word	0x000000bc

00000f60 <deregister_tm_clones>:
     f60:	ldr	r0, [pc, #44]	; f94 <deregister_tm_clones+0x34>
     f64:	ldr	r3, [pc, #44]	; f98 <deregister_tm_clones+0x38>
     f68:	add	r0, pc, r0
     f6c:	add	r3, pc, r3
     f70:	cmp	r3, r0
     f74:	ldr	r3, [pc, #32]	; f9c <deregister_tm_clones+0x3c>
     f78:	add	r3, pc, r3
     f7c:	bxeq	lr
     f80:	ldr	r2, [pc, #24]	; fa0 <deregister_tm_clones+0x40>
     f84:	ldr	r3, [r3, r2]
     f88:	cmp	r3, #0
     f8c:	bxeq	lr
     f90:	bx	r3
     f94:	.word	0x00045220
     f98:	.word	0x0004521c
     f9c:	.word	0x00045080
     fa0:	.word	0x000000b0

00000fa4 <register_tm_clones>:
     fa4:	ldr	r0, [pc, #56]	; fe4 <register_tm_clones+0x40>
     fa8:	ldr	r3, [pc, #56]	; fe8 <register_tm_clones+0x44>
     fac:	add	r0, pc, r0
     fb0:	add	r3, pc, r3
     fb4:	sub	r1, r3, r0
     fb8:	ldr	r3, [pc, #44]	; fec <register_tm_clones+0x48>
     fbc:	asr	r1, r1, #2
     fc0:	add	r3, pc, r3
     fc4:	add	r1, r1, r1, lsr #31
     fc8:	asrs	r1, r1, #1
     fcc:	bxeq	lr
     fd0:	ldr	r2, [pc, #24]	; ff0 <register_tm_clones+0x4c>
     fd4:	ldr	r3, [r3, r2]
     fd8:	cmp	r3, #0
     fdc:	bxeq	lr
     fe0:	bx	r3
     fe4:	.word	0x000451dc
     fe8:	.word	0x000451d8
     fec:	.word	0x00045038
     ff0:	.word	0x000000cc

00000ff4 <__do_global_dtors_aux>:
     ff4:	ldr	r3, [pc, #76]	; 1048 <__do_global_dtors_aux+0x54>
     ff8:	ldr	r2, [pc, #76]	; 104c <__do_global_dtors_aux+0x58>
     ffc:	add	r3, pc, r3
    1000:	add	r2, pc, r2
    1004:	ldrb	r3, [r3]
    1008:	cmp	r3, #0
    100c:	bxne	lr
    1010:	ldr	r3, [pc, #56]	; 1050 <__do_global_dtors_aux+0x5c>
    1014:	push	{r4, lr}
    1018:	ldr	r3, [r2, r3]
    101c:	cmp	r3, #0
    1020:	beq	1030 <__do_global_dtors_aux+0x3c>
    1024:	ldr	r3, [pc, #40]	; 1054 <__do_global_dtors_aux+0x60>
    1028:	ldr	r0, [pc, r3]
    102c:	bl	d74 <__cxa_finalize@plt>
    1030:	bl	f60 <deregister_tm_clones>
    1034:	ldr	r3, [pc, #28]	; 1058 <__do_global_dtors_aux+0x64>
    1038:	mov	r2, #1
    103c:	add	r3, pc, r3
    1040:	strb	r2, [r3]
    1044:	pop	{r4, pc}
    1048:	.word	0x0004518c
    104c:	.word	0x00044ff8
    1050:	.word	0x000000ac
    1054:	.word	0x000450a0
    1058:	.word	0x0004514c

0000105c <frame_dummy>:
    105c:	b	fa4 <register_tm_clones>

00001060 <sfbpf_filter>:
    1060:	push	{r4, r5, r6, r7, fp, lr}
    1064:	add	fp, sp, #16
    1068:	sub	sp, sp, #64	; 0x40
    106c:	cmp	r0, #0
    1070:	beq	1084 <sfbpf_filter+0x24>
    1074:	sub	ip, r0, #8
    1078:	mov	r4, #0
    107c:	mov	lr, #0
    1080:	b	10ac <sfbpf_filter+0x4c>
    1084:	mvn	r0, #0
    1088:	sub	sp, fp, #16
    108c:	pop	{r4, r5, r6, r7, fp, pc}
    1090:	ldr	r4, [r5, #12]
    1094:	mov	r6, #10
    1098:	tst	r4, r0
    109c:	movweq	r6, #11
    10a0:	ldrb	r4, [r5, r6]
    10a4:	add	ip, ip, r4, lsl #3
    10a8:	mov	r4, r0
    10ac:	mov	r0, r4
    10b0:	mov	r5, ip
    10b4:	ldrh	r4, [ip, #8]!
    10b8:	cmp	r4, #177	; 0xb1
    10bc:	bhi	1630 <sfbpf_filter+0x5d0>
    10c0:	add	r6, pc, #8
    10c4:	ldr	r7, [r6, r4, lsl #2]
    10c8:	mov	r4, r2
    10cc:	add	pc, r6, r7
    10d0:	.word	0x000002c8
    10d4:	.word	0x00000350
    10d8:	.word	0x0000035c
    10dc:	.word	0x00000370
    10e0:	.word	0x00000384
    10e4:	.word	0x00000390
    10e8:	.word	0x00000548
    10ec:	.word	0x00000318
    10f0:	.word	0x00000560
    10f4:	.word	0x00000560
    10f8:	.word	0x00000560
    10fc:	.word	0x00000560
    1100:	.word	0x00000398
    1104:	.word	0x00000560
    1108:	.word	0x00000560
    110c:	.word	0x00000560
    1110:	.word	0x00000560
    1114:	.word	0x00000560
    1118:	.word	0x00000560
    111c:	.word	0x00000560
    1120:	.word	0x000003a0
    1124:	.word	0x000003ac
    1128:	.word	0x0000054c
    112c:	.word	0x00000560
    1130:	.word	0x00000560
    1134:	.word	0x00000560
    1138:	.word	0x00000560
    113c:	.word	0x00000560
    1140:	.word	0x00000324
    1144:	.word	0x000003c0
    1148:	.word	0x00000560
    114c:	.word	0x00000560
    1150:	.word	0x000003d4
    1154:	.word	0x00000560
    1158:	.word	0x00000560
    115c:	.word	0x00000560
    1160:	.word	0x000003e8
    1164:	.word	0x000003f4
    1168:	.word	0x00000560
    116c:	.word	0x00000560
    1170:	.word	0x00000408
    1174:	.word	0x00000560
    1178:	.word	0x00000560
    117c:	.word	0x00000560
    1180:	.word	0x0000041c
    1184:	.word	0x00000424
    1188:	.word	0x00000560
    118c:	.word	0x00000560
    1190:	.word	0x00000438
    1194:	.word	0x00000560
    1198:	.word	0x00000560
    119c:	.word	0x00000560
    11a0:	.word	0x0000044c
    11a4:	.word	0x00000458
    11a8:	.word	0x00000560
    11ac:	.word	0x00000560
    11b0:	.word	0x00000560
    11b4:	.word	0x00000560
    11b8:	.word	0x00000560
    11bc:	.word	0x00000560
    11c0:	.word	0x0000046c
    11c4:	.word	0x0000047c
    11c8:	.word	0x00000560
    11cc:	.word	0x00000560
    11d0:	.word	0x00000490
    11d4:	.word	0x00000560
    11d8:	.word	0x00000560
    11dc:	.word	0x00000560
    11e0:	.word	0x00000530
    11e4:	.word	0xffffffc0
    11e8:	.word	0x00000560
    11ec:	.word	0x00000560
    11f0:	.word	0x000004b0
    11f4:	.word	0x00000560
    11f8:	.word	0x00000560
    11fc:	.word	0x00000560
    1200:	.word	0x000004d8
    1204:	.word	0x000004e0
    1208:	.word	0x00000560
    120c:	.word	0x00000560
    1210:	.word	0x000004f4
    1214:	.word	0x00000560
    1218:	.word	0x00000560
    121c:	.word	0x00000560
    1220:	.word	0x0000050c
    1224:	.word	0x00000560
    1228:	.word	0x00000560
    122c:	.word	0x00000560
    1230:	.word	0x00000560
    1234:	.word	0x00000560
    1238:	.word	0x00000560
    123c:	.word	0x00000560
    1240:	.word	0x0000032c
    1244:	.word	0x00000560
    1248:	.word	0x00000560
    124c:	.word	0x00000560
    1250:	.word	0x00000334
    1254:	.word	0x000002d0
    1258:	.word	0x00000560
    125c:	.word	0x00000560
    1260:	.word	0x000002e4
    1264:	.word	0x00000560
    1268:	.word	0x00000560
    126c:	.word	0x00000560
    1270:	.word	0x00000560
    1274:	.word	0x00000560
    1278:	.word	0x00000560
    127c:	.word	0x00000560
    1280:	.word	0x000002f0
    1284:	.word	0x00000560
    1288:	.word	0x00000560
    128c:	.word	0x00000560
    1290:	.word	0x00000560
    1294:	.word	0x00000560
    1298:	.word	0x00000560
    129c:	.word	0x00000560
    12a0:	.word	0x0000053c
    12a4:	.word	0x00000560
    12a8:	.word	0x00000560
    12ac:	.word	0x00000560
    12b0:	.word	0x00000560
    12b4:	.word	0x00000560
    12b8:	.word	0x00000560
    12bc:	.word	0x00000560
    12c0:	.word	0x00000518
    12c4:	.word	0x00000560
    12c8:	.word	0x00000560
    12cc:	.word	0x00000560
    12d0:	.word	0xffffffdc
    12d4:	.word	0x00000344
    12d8:	.word	0x00000560
    12dc:	.word	0x00000560
    12e0:	.word	0x00000520
    12e4:	.word	0x00000560
    12e8:	.word	0x00000560
    12ec:	.word	0x00000528
    12f0:	.word	0x00000560
    12f4:	.word	0x00000560
    12f8:	.word	0x00000560
    12fc:	.word	0x00000560
    1300:	.word	0x00000560
    1304:	.word	0x00000560
    1308:	.word	0x00000560
    130c:	.word	0x00000560
    1310:	.word	0x00000560
    1314:	.word	0x00000560
    1318:	.word	0x00000560
    131c:	.word	0x00000560
    1320:	.word	0x00000560
    1324:	.word	0x00000560
    1328:	.word	0x00000560
    132c:	.word	0x00000560
    1330:	.word	0x00000560
    1334:	.word	0x00000560
    1338:	.word	0x00000560
    133c:	.word	0x00000560
    1340:	.word	0x00000560
    1344:	.word	0x00000560
    1348:	.word	0x00000560
    134c:	.word	0x00000560
    1350:	.word	0x00000560
    1354:	.word	0x00000560
    1358:	.word	0x00000560
    135c:	.word	0x00000560
    1360:	.word	0x00000560
    1364:	.word	0x00000560
    1368:	.word	0x00000560
    136c:	.word	0x00000560
    1370:	.word	0x00000560
    1374:	.word	0x00000560
    1378:	.word	0x00000560
    137c:	.word	0x00000560
    1380:	.word	0x00000560
    1384:	.word	0x00000560
    1388:	.word	0x00000560
    138c:	.word	0x00000560
    1390:	.word	0x00000560
    1394:	.word	0x000002f8
    1398:	ldr	r4, [r5, #12]
    139c:	b	10ac <sfbpf_filter+0x4c>
    13a0:	ldr	r7, [r5, #12]
    13a4:	mov	r6, sp
    13a8:	mov	r4, r0
    13ac:	ldr	lr, [r6, r7, lsl #2]
    13b0:	b	10ac <sfbpf_filter+0x4c>
    13b4:	ldr	r4, [r5, #12]
    13b8:	lsl	r4, r0, r4
    13bc:	b	10ac <sfbpf_filter+0x4c>
    13c0:	lsl	r4, r0, lr
    13c4:	b	10ac <sfbpf_filter+0x4c>
    13c8:	ldr	r5, [r5, #12]
    13cc:	cmp	r5, r3
    13d0:	bcs	1624 <sfbpf_filter+0x5c4>
    13d4:	ldrb	r7, [r1, r5]
    13d8:	mov	r6, #60	; 0x3c
    13dc:	mov	r4, r0
    13e0:	and	lr, r6, r7, lsl #2
    13e4:	b	10ac <sfbpf_filter+0x4c>
    13e8:	mov	r4, r0
    13ec:	mov	lr, r0
    13f0:	b	10ac <sfbpf_filter+0x4c>
    13f4:	sub	r4, r0, lr
    13f8:	b	10ac <sfbpf_filter+0x4c>
    13fc:	and	r4, lr, r0
    1400:	b	10ac <sfbpf_filter+0x4c>
    1404:	ldr	r0, [r5, #12]
    1408:	mov	r4, sp
    140c:	ldr	r4, [r4, r0, lsl #2]
    1410:	b	10ac <sfbpf_filter+0x4c>
    1414:	mov	r4, r0
    1418:	mov	lr, r2
    141c:	b	10ac <sfbpf_filter+0x4c>
    1420:	ldr	lr, [r5, #12]
    1424:	mov	r4, r0
    1428:	b	10ac <sfbpf_filter+0x4c>
    142c:	ldr	r4, [r5, #12]
    1430:	mov	r5, sp
    1434:	str	r0, [r5, r4, lsl #2]
    1438:	mov	r4, r0
    143c:	b	10ac <sfbpf_filter+0x4c>
    1440:	ldr	r4, [r5, #12]
    1444:	mov	r5, sp
    1448:	str	lr, [r5, r4, lsl #2]
    144c:	mov	r4, r0
    1450:	b	10ac <sfbpf_filter+0x4c>
    1454:	ldr	r4, [r5, #12]
    1458:	add	r4, r4, r0
    145c:	b	10ac <sfbpf_filter+0x4c>
    1460:	ldr	r4, [r5, #12]
    1464:	b	10a4 <sfbpf_filter+0x44>
    1468:	add	r4, lr, r0
    146c:	b	10ac <sfbpf_filter+0x4c>
    1470:	ldr	r4, [r5, #12]
    1474:	sub	r4, r0, r4
    1478:	b	10ac <sfbpf_filter+0x4c>
    147c:	ldr	r4, [r5, #12]
    1480:	mov	r6, #11
    1484:	cmp	r0, r4
    1488:	movweq	r6, #10
    148c:	b	10a0 <sfbpf_filter+0x40>
    1490:	cmp	r0, lr
    1494:	mov	r4, #11
    1498:	movweq	r4, #10
    149c:	ldrb	r4, [r5, r4]
    14a0:	b	10a4 <sfbpf_filter+0x44>
    14a4:	ldr	r0, [r5, #12]
    14a8:	add	r4, r0, #4
    14ac:	cmp	r4, r3
    14b0:	bls	1574 <sfbpf_filter+0x514>
    14b4:	b	1624 <sfbpf_filter+0x5c4>
    14b8:	ldr	r4, [r5, #12]
    14bc:	mul	r4, r4, r0
    14c0:	b	10ac <sfbpf_filter+0x4c>
    14c4:	ldr	r4, [r5, #12]
    14c8:	mov	r6, #11
    14cc:	cmp	r0, r4
    14d0:	movwhi	r6, #10
    14d4:	b	10a0 <sfbpf_filter+0x40>
    14d8:	ldr	r0, [r5, #12]
    14dc:	add	r4, r0, #2
    14e0:	cmp	r4, r3
    14e4:	bls	1594 <sfbpf_filter+0x534>
    14e8:	b	1624 <sfbpf_filter+0x5c4>
    14ec:	mul	r4, lr, r0
    14f0:	b	10ac <sfbpf_filter+0x4c>
    14f4:	cmp	r0, lr
    14f8:	mov	r4, #11
    14fc:	movwhi	r4, #10
    1500:	ldrb	r4, [r5, r4]
    1504:	b	10a4 <sfbpf_filter+0x44>
    1508:	ldr	r0, [r5, #12]
    150c:	cmp	r0, r3
    1510:	bcs	1624 <sfbpf_filter+0x5c4>
    1514:	ldrb	r4, [r1, r0]
    1518:	b	10ac <sfbpf_filter+0x4c>
    151c:	ldr	r4, [r5, #12]
    1520:	udiv	r4, r0, r4
    1524:	b	10ac <sfbpf_filter+0x4c>
    1528:	ldr	r4, [r5, #12]
    152c:	mov	r6, #10
    1530:	cmp	r0, r4
    1534:	movwcc	r6, #11
    1538:	b	10a0 <sfbpf_filter+0x40>
    153c:	cmp	lr, #0
    1540:	beq	1624 <sfbpf_filter+0x5c4>
    1544:	udiv	r4, r0, lr
    1548:	b	10ac <sfbpf_filter+0x4c>
    154c:	cmp	r0, lr
    1550:	mov	r4, #10
    1554:	movwcc	r4, #11
    1558:	ldrb	r4, [r5, r4]
    155c:	b	10a4 <sfbpf_filter+0x44>
    1560:	ldr	r0, [r5, #12]
    1564:	add	r0, r0, lr
    1568:	add	r4, r0, #4
    156c:	cmp	r4, r3
    1570:	bhi	1624 <sfbpf_filter+0x5c4>
    1574:	ldr	r0, [r1, r0]
    1578:	rev	r4, r0
    157c:	b	10ac <sfbpf_filter+0x4c>
    1580:	ldr	r0, [r5, #12]
    1584:	add	r0, r0, lr
    1588:	add	r4, r0, #2
    158c:	cmp	r4, r3
    1590:	bhi	1624 <sfbpf_filter+0x5c4>
    1594:	mov	r4, r1
    1598:	ldrb	r0, [r4, r0]!
    159c:	ldrb	r4, [r4, #1]
    15a0:	orr	r4, r4, r0, lsl #8
    15a4:	b	10ac <sfbpf_filter+0x4c>
    15a8:	orr	r4, lr, r0
    15ac:	b	10ac <sfbpf_filter+0x4c>
    15b0:	tst	lr, r0
    15b4:	mov	r4, #10
    15b8:	movweq	r4, #11
    15bc:	ldrb	r4, [r5, r4]
    15c0:	b	10a4 <sfbpf_filter+0x44>
    15c4:	ldr	r0, [r5, #12]
    15c8:	add	r0, r0, lr
    15cc:	cmp	r0, r3
    15d0:	bcs	1624 <sfbpf_filter+0x5c4>
    15d4:	ldrb	r4, [r1, r0]
    15d8:	b	10ac <sfbpf_filter+0x4c>
    15dc:	ldr	r4, [r5, #12]
    15e0:	and	r4, r4, r0
    15e4:	b	10ac <sfbpf_filter+0x4c>
    15e8:	lsr	r4, r0, lr
    15ec:	b	10ac <sfbpf_filter+0x4c>
    15f0:	rsb	r4, r0, #0
    15f4:	b	10ac <sfbpf_filter+0x4c>
    15f8:	mov	r4, lr
    15fc:	b	10ac <sfbpf_filter+0x4c>
    1600:	ldr	r4, [r5, #12]
    1604:	orr	r4, r4, r0
    1608:	b	10ac <sfbpf_filter+0x4c>
    160c:	ldr	r4, [r5, #12]
    1610:	lsr	r4, r0, r4
    1614:	b	10ac <sfbpf_filter+0x4c>
    1618:	ldr	r0, [r5, #12]
    161c:	sub	sp, fp, #16
    1620:	pop	{r4, r5, r6, r7, fp, pc}
    1624:	mov	r0, #0
    1628:	sub	sp, fp, #16
    162c:	pop	{r4, r5, r6, r7, fp, pc}
    1630:	bl	f24 <abort@plt>

00001634 <sfbpf_validate>:
    1634:	push	{r4, r5, fp, lr}
    1638:	add	fp, sp, #8
    163c:	cmp	r1, #1
    1640:	blt	176c <sfbpf_validate+0x138>
    1644:	mov	lr, #0
    1648:	mov	r2, #0
    164c:	b	1670 <sfbpf_validate+0x3c>
    1650:	add	r3, r0, r2, lsl #3
    1654:	ldr	r3, [r3, #4]
    1658:	cmp	r3, #15
    165c:	bhi	176c <sfbpf_validate+0x138>
    1660:	add	r2, r2, #1
    1664:	add	lr, lr, #8
    1668:	cmp	r1, r2
    166c:	beq	1778 <sfbpf_validate+0x144>
    1670:	add	r3, r0, lr
    1674:	ldrh	r5, [r3]
    1678:	add	r3, pc, #8
    167c:	and	r4, r5, #7
    1680:	ldr	r4, [r3, r4, lsl #2]
    1684:	add	pc, r3, r4
    1688:	.word	0x00000020
    168c:	.word	0x00000020
    1690:	.word	0xffffffc8
    1694:	.word	0xffffffc8
    1698:	.word	0x0000004c
    169c:	.word	0x0000007c
    16a0:	.word	0xffffffd8
    16a4:	.word	0xffffffd8
    16a8:	ubfx	r3, r5, #5, #3
    16ac:	mov	ip, #0
    16b0:	cmp	r3, #5
    16b4:	bhi	1790 <sfbpf_validate+0x15c>
    16b8:	cmp	r3, #3
    16bc:	bne	1660 <sfbpf_validate+0x2c>
    16c0:	add	r3, r0, r2, lsl #3
    16c4:	ldr	r3, [r3, #4]
    16c8:	cmp	r3, #15
    16cc:	bls	1660 <sfbpf_validate+0x2c>
    16d0:	b	1790 <sfbpf_validate+0x15c>
    16d4:	ubfx	r4, r5, #4, #4
    16d8:	mov	ip, #0
    16dc:	cmp	r4, #8
    16e0:	bhi	1790 <sfbpf_validate+0x15c>
    16e4:	cmp	r4, #3
    16e8:	tsteq	r5, #24
    16ec:	bne	1660 <sfbpf_validate+0x2c>
    16f0:	add	r3, r0, r2, lsl #3
    16f4:	ldr	r3, [r3, #4]
    16f8:	cmp	r3, #0
    16fc:	bne	1660 <sfbpf_validate+0x2c>
    1700:	b	1790 <sfbpf_validate+0x15c>
    1704:	ubfx	r3, r5, #4, #4
    1708:	mov	ip, #0
    170c:	sub	r4, r3, #1
    1710:	cmp	r4, #4
    1714:	bcs	1748 <sfbpf_validate+0x114>
    1718:	add	r3, r0, r2, lsl #3
    171c:	ldrb	r4, [r3, #2]
    1720:	add	r4, r2, r4
    1724:	add	r4, r4, #1
    1728:	cmp	r4, r1
    172c:	bcs	1790 <sfbpf_validate+0x15c>
    1730:	ldrb	r3, [r3, #3]
    1734:	add	r3, r2, r3
    1738:	add	r3, r3, #1
    173c:	cmp	r3, r1
    1740:	bcc	1660 <sfbpf_validate+0x2c>
    1744:	b	1790 <sfbpf_validate+0x15c>
    1748:	cmp	r3, #0
    174c:	bne	1790 <sfbpf_validate+0x15c>
    1750:	add	r3, r0, r2, lsl #3
    1754:	ldr	r3, [r3, #4]
    1758:	add	r3, r2, r3
    175c:	add	r3, r3, #1
    1760:	cmp	r3, r1
    1764:	bcc	1660 <sfbpf_validate+0x2c>
    1768:	b	1790 <sfbpf_validate+0x15c>
    176c:	mov	ip, #0
    1770:	mov	r0, ip
    1774:	pop	{r4, r5, fp, pc}
    1778:	add	r0, r0, r1, lsl #3
    177c:	ldrh	r0, [r0, #-8]
    1780:	and	r0, r0, #7
    1784:	sub	r0, r0, #6
    1788:	clz	r0, r0
    178c:	lsr	ip, r0, #5
    1790:	mov	r0, ip
    1794:	pop	{r4, r5, fp, pc}

00001798 <sfbpf_print>:
    1798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    179c:	add	fp, sp, #28
    17a0:	sub	sp, sp, #4
    17a4:	mov	r5, r0
    17a8:	ldr	r0, [pc, #2128]	; 2000 <sfbpf_print+0x868>
    17ac:	mov	r4, r1
    17b0:	add	r0, pc, r0
    17b4:	bl	e28 <puts@plt>
    17b8:	ldr	r0, [r5]
    17bc:	cmp	r0, #0
    17c0:	beq	1ff8 <sfbpf_print+0x860>
    17c4:	ldr	r9, [pc, #2104]	; 2004 <sfbpf_print+0x86c>
    17c8:	mov	r6, #0
    17cc:	add	r9, pc, r9
    17d0:	b	1830 <sfbpf_print+0x98>
    17d4:	ldr	r2, [pc, #2208]	; 207c <sfbpf_print+0x8e4>
    17d8:	add	r2, pc, r2
    17dc:	mov	r1, r2
    17e0:	ldr	r2, [pc, #2168]	; 2060 <sfbpf_print+0x8c8>
    17e4:	tst	r0, #8
    17e8:	ldr	r0, [pc, #2164]	; 2064 <sfbpf_print+0x8cc>
    17ec:	add	r0, pc, r0
    17f0:	add	r2, pc, r2
    17f4:	moveq	r2, r0
    17f8:	ldr	r0, [pc, #2152]	; 2068 <sfbpf_print+0x8d0>
    17fc:	add	r0, pc, r0
    1800:	bl	d80 <printf@plt>
    1804:	add	r0, sl, r6, lsl #3
    1808:	ldr	r3, [r0, #4]
    180c:	ldrb	r1, [r0, #2]
    1810:	ldrb	r2, [r0, #3]
    1814:	ldr	r0, [pc, #2176]	; 209c <sfbpf_print+0x904>
    1818:	add	r0, pc, r0
    181c:	bl	d80 <printf@plt>
    1820:	ldr	r0, [r5]
    1824:	add	r6, r6, #1
    1828:	cmp	r6, r0
    182c:	bcs	1ff8 <sfbpf_print+0x860>
    1830:	ldr	sl, [r5, #4]
    1834:	mov	r0, r9
    1838:	mov	r1, r6
    183c:	bl	d80 <printf@plt>
    1840:	lsl	r0, r6, #3
    1844:	mov	r8, sl
    1848:	cmp	r4, #0
    184c:	ldrh	r0, [r8, r0]!	; <UNPREDICTABLE>
    1850:	and	r1, r0, #7
    1854:	beq	18a0 <sfbpf_print+0x108>
    1858:	add	r2, pc, #20
    185c:	ldr	r0, [pc, #1956]	; 2008 <sfbpf_print+0x870>
    1860:	ldr	r3, [r2, r1, lsl #2]
    1864:	ldr	r1, [pc, #1952]	; 200c <sfbpf_print+0x874>
    1868:	add	r0, pc, r0
    186c:	add	r1, pc, r1
    1870:	add	pc, r2, r3
    1874:	.word	0x000000f8
    1878:	.word	0x000000f4
    187c:	.word	0x00000020
    1880:	.word	0x000000bc
    1884:	.word	0x000000c8
    1888:	.word	0x000000e0
    188c:	.word	0x000000ec
    1890:	.word	0x000000d4
    1894:	ldr	r0, [pc, #1908]	; 2010 <sfbpf_print+0x878>
    1898:	add	r0, pc, r0
    189c:	b	1968 <sfbpf_print+0x1d0>
    18a0:	add	r2, pc, #4
    18a4:	ldr	r1, [r2, r1, lsl #2]
    18a8:	add	pc, r2, r1
    18ac:	.word	0x00000020
    18b0:	.word	0x00000290
    18b4:	.word	0x000002e8
    18b8:	.word	0x00000310
    18bc:	.word	0x00000338
    18c0:	.word	0x000003cc
    18c4:	.word	0x00000430
    18c8:	.word	0x00000388
    18cc:	ldr	r0, [pc, #1996]	; 20a0 <sfbpf_print+0x908>
    18d0:	add	r0, pc, r0
    18d4:	bl	d80 <printf@plt>
    18d8:	ldrh	r0, [r8]
    18dc:	ubfx	r1, r0, #5, #3
    18e0:	cmp	r1, #4
    18e4:	bhi	1e74 <sfbpf_print+0x6dc>
    18e8:	add	r2, pc, #4
    18ec:	ldr	r1, [r2, r1, lsl #2]
    18f0:	add	pc, r2, r1
    18f4:	.word	0x00000678
    18f8:	.word	0x00000014
    18fc:	.word	0x0000051c
    1900:	.word	0x00000544
    1904:	.word	0x0000055c
    1908:	add	r1, sl, r6, lsl #3
    190c:	ands	r0, r0, #24
    1910:	ldr	r1, [r1, #4]
    1914:	beq	1fb0 <sfbpf_print+0x818>
    1918:	cmp	r0, #16
    191c:	beq	1fb8 <sfbpf_print+0x820>
    1920:	cmp	r0, #8
    1924:	movne	r2, #0
    1928:	moveq	r2, #2
    192c:	b	1fbc <sfbpf_print+0x824>
    1930:	ldr	r0, [pc, #1756]	; 2014 <sfbpf_print+0x87c>
    1934:	add	r0, pc, r0
    1938:	b	1968 <sfbpf_print+0x1d0>
    193c:	ldr	r0, [pc, #1748]	; 2018 <sfbpf_print+0x880>
    1940:	add	r0, pc, r0
    1944:	b	1968 <sfbpf_print+0x1d0>
    1948:	ldr	r0, [pc, #1748]	; 2024 <sfbpf_print+0x88c>
    194c:	add	r0, pc, r0
    1950:	b	1968 <sfbpf_print+0x1d0>
    1954:	ldr	r0, [pc, #1728]	; 201c <sfbpf_print+0x884>
    1958:	add	r0, pc, r0
    195c:	b	1968 <sfbpf_print+0x1d0>
    1960:	ldr	r0, [pc, #1720]	; 2020 <sfbpf_print+0x888>
    1964:	add	r0, pc, r0
    1968:	mov	r1, r0
    196c:	ldr	r0, [pc, #1716]	; 2028 <sfbpf_print+0x890>
    1970:	add	r0, pc, r0
    1974:	bl	d80 <printf@plt>
    1978:	ldrh	r0, [r8]
    197c:	and	r1, r0, #7
    1980:	cmp	r1, #7
    1984:	bhi	1804 <sfbpf_print+0x6c>
    1988:	add	r2, pc, #4
    198c:	ldr	r1, [r2, r1, lsl #2]
    1990:	add	pc, r2, r1
    1994:	.word	0x00000020
    1998:	.word	0x00000020
    199c:	.word	0xfffffe70
    19a0:	.word	0xfffffe70
    19a4:	.word	0x000000a0
    19a8:	.word	0x000000f0
    19ac:	.word	0x0000013c
    19b0:	.word	0x00000178
    19b4:	ldr	r1, [pc, #1648]	; 202c <sfbpf_print+0x894>
    19b8:	ands	r2, r0, #24
    19bc:	add	r1, pc, r1
    19c0:	beq	19e4 <sfbpf_print+0x24c>
    19c4:	ldr	r1, [pc, #1636]	; 2030 <sfbpf_print+0x898>
    19c8:	cmp	r2, #8
    19cc:	add	r1, pc, r1
    19d0:	beq	19e4 <sfbpf_print+0x24c>
    19d4:	cmp	r2, #16
    19d8:	bne	1d20 <sfbpf_print+0x588>
    19dc:	ldr	r1, [pc, #1616]	; 2034 <sfbpf_print+0x89c>
    19e0:	add	r1, pc, r1
    19e4:	uxtb	r0, r0
    19e8:	lsr	r0, r0, #5
    19ec:	cmp	r0, #5
    19f0:	bhi	1d34 <sfbpf_print+0x59c>
    19f4:	add	r3, pc, #20
    19f8:	ldr	r7, [r3, r0, lsl #2]
    19fc:	ldr	r0, [pc, #1588]	; 2038 <sfbpf_print+0x8a0>
    1a00:	ldr	r2, [pc, #1588]	; 203c <sfbpf_print+0x8a4>
    1a04:	add	r0, pc, r0
    1a08:	add	r2, pc, r2
    1a0c:	add	pc, r3, r7
    1a10:	.word	0x00000350
    1a14:	.word	0x0000034c
    1a18:	.word	0x00000018
    1a1c:	.word	0x0000032c
    1a20:	.word	0x00000338
    1a24:	.word	0x00000344
    1a28:	ldr	r0, [pc, #1552]	; 2040 <sfbpf_print+0x8a8>
    1a2c:	add	r0, pc, r0
    1a30:	b	1d5c <sfbpf_print+0x5c4>
    1a34:	ldr	r1, [pc, #1560]	; 2054 <sfbpf_print+0x8bc>
    1a38:	ands	r2, r0, #240	; 0xf0
    1a3c:	add	r1, pc, r1
    1a40:	beq	17e0 <sfbpf_print+0x48>
    1a44:	mov	r1, #0
    1a48:	mov	r3, #0
    1a4c:	cmp	r3, #8
    1a50:	beq	17e0 <sfbpf_print+0x48>
    1a54:	ldr	r7, [pc, #1532]	; 2058 <sfbpf_print+0x8c0>
    1a58:	add	r7, pc, r7
    1a5c:	add	r7, r7, r3, lsl #3
    1a60:	add	r3, r3, #1
    1a64:	ldr	r7, [r7, #8]
    1a68:	cmp	r7, r2
    1a6c:	bne	1a4c <sfbpf_print+0x2b4>
    1a70:	ldr	r1, [pc, #1508]	; 205c <sfbpf_print+0x8c4>
    1a74:	add	r1, pc, r1
    1a78:	add	r1, r1, r3, lsl #3
    1a7c:	ldr	r1, [r1, #4]
    1a80:	b	17e0 <sfbpf_print+0x48>
    1a84:	and	r1, r0, #240	; 0xf0
    1a88:	ror	r1, r1, #4
    1a8c:	cmp	r1, #4
    1a90:	bhi	1d7c <sfbpf_print+0x5e4>
    1a94:	add	r3, pc, #20
    1a98:	ldr	r2, [pc, #1484]	; 206c <sfbpf_print+0x8d4>
    1a9c:	ldr	r7, [r3, r1, lsl #2]
    1aa0:	ldr	r1, [pc, #1480]	; 2070 <sfbpf_print+0x8d8>
    1aa4:	add	r2, pc, r2
    1aa8:	add	r1, pc, r1
    1aac:	add	pc, r3, r7
    1ab0:	.word	0xfffffd30
    1ab4:	.word	0xfffffd2c
    1ab8:	.word	0x00000014
    1abc:	.word	0x000002d4
    1ac0:	.word	0xfffffd24
    1ac4:	ldr	r2, [pc, #1448]	; 2074 <sfbpf_print+0x8dc>
    1ac8:	add	r2, pc, r2
    1acc:	b	17dc <sfbpf_print+0x44>
    1ad0:	ldr	r1, [pc, #1448]	; 2080 <sfbpf_print+0x8e8>
    1ad4:	ands	r0, r0, #24
    1ad8:	add	r1, pc, r1
    1adc:	beq	1b00 <sfbpf_print+0x368>
    1ae0:	ldr	r1, [pc, #1436]	; 2084 <sfbpf_print+0x8ec>
    1ae4:	cmp	r0, #8
    1ae8:	add	r1, pc, r1
    1aec:	beq	1b00 <sfbpf_print+0x368>
    1af0:	cmp	r0, #16
    1af4:	bne	1d6c <sfbpf_print+0x5d4>
    1af8:	ldr	r1, [pc, #1416]	; 2088 <sfbpf_print+0x8f0>
    1afc:	add	r1, pc, r1
    1b00:	ldr	r0, [pc, #1412]	; 208c <sfbpf_print+0x8f4>
    1b04:	add	r0, pc, r0
    1b08:	b	1b34 <sfbpf_print+0x39c>
    1b0c:	ldr	r1, [pc, #1404]	; 2090 <sfbpf_print+0x8f8>
    1b10:	ands	r0, r0, #248	; 0xf8
    1b14:	add	r1, pc, r1
    1b18:	beq	1b2c <sfbpf_print+0x394>
    1b1c:	ldr	r1, [pc, #1392]	; 2094 <sfbpf_print+0x8fc>
    1b20:	cmp	r0, #128	; 0x80
    1b24:	add	r1, pc, r1
    1b28:	movne	r1, #0
    1b2c:	ldr	r0, [pc, #1380]	; 2098 <sfbpf_print+0x900>
    1b30:	add	r0, pc, r0
    1b34:	bl	d80 <printf@plt>
    1b38:	b	1804 <sfbpf_print+0x6c>
    1b3c:	ldr	r0, [pc, #1396]	; 20b8 <sfbpf_print+0x920>
    1b40:	add	r0, pc, r0
    1b44:	bl	d80 <printf@plt>
    1b48:	ldrh	r0, [r8]
    1b4c:	ubfx	r0, r0, #5, #3
    1b50:	cmp	r0, #5
    1b54:	bhi	1fe0 <sfbpf_print+0x848>
    1b58:	add	r1, pc, #4
    1b5c:	ldr	r0, [r1, r0, lsl #2]
    1b60:	add	pc, r1, r0
    1b64:	.word	0x00000018
    1b68:	.word	0x0000047c
    1b6c:	.word	0x0000047c
    1b70:	.word	0x00000270
    1b74:	.word	0x00000288
    1b78:	.word	0x00000294
    1b7c:	add	r0, sl, r6, lsl #3
    1b80:	ldr	r1, [r0, #4]
    1b84:	ldr	r0, [pc, #1332]	; 20c0 <sfbpf_print+0x928>
    1b88:	add	r0, pc, r0
    1b8c:	bl	d80 <printf@plt>
    1b90:	b	1fe0 <sfbpf_print+0x848>
    1b94:	add	r0, sl, r6, lsl #3
    1b98:	ldr	r1, [r0, #4]
    1b9c:	ldr	r0, [pc, #1320]	; 20cc <sfbpf_print+0x934>
    1ba0:	add	r0, pc, r0
    1ba4:	bl	d80 <printf@plt>
    1ba8:	ldr	r0, [r5]
    1bac:	add	r6, r6, #1
    1bb0:	cmp	r6, r0
    1bb4:	bcc	1830 <sfbpf_print+0x98>
    1bb8:	b	1ff8 <sfbpf_print+0x860>
    1bbc:	add	r0, sl, r6, lsl #3
    1bc0:	ldr	r1, [r0, #4]
    1bc4:	ldr	r0, [pc, #1284]	; 20d0 <sfbpf_print+0x938>
    1bc8:	add	r0, pc, r0
    1bcc:	bl	d80 <printf@plt>
    1bd0:	ldr	r0, [r5]
    1bd4:	add	r6, r6, #1
    1bd8:	cmp	r6, r0
    1bdc:	bcc	1830 <sfbpf_print+0x98>
    1be0:	b	1ff8 <sfbpf_print+0x860>
    1be4:	ubfx	r0, r0, #4, #4
    1be8:	cmp	r0, #8
    1bec:	bhi	1f04 <sfbpf_print+0x76c>
    1bf0:	add	r2, pc, #12
    1bf4:	ldr	r1, [pc, #1240]	; 20d4 <sfbpf_print+0x93c>
    1bf8:	ldr	r0, [r2, r0, lsl #2]
    1bfc:	add	r1, pc, r1
    1c00:	add	pc, r2, r0
    1c04:	.word	0x00000350
    1c08:	.word	0x00000024
    1c0c:	.word	0x0000030c
    1c10:	.word	0x00000318
    1c14:	.word	0x00000324
    1c18:	.word	0x00000330
    1c1c:	.word	0x0000033c
    1c20:	.word	0x00000348
    1c24:	.word	0x0000038c
    1c28:	ldr	r1, [pc, #1192]	; 20d8 <sfbpf_print+0x940>
    1c2c:	add	r1, pc, r1
    1c30:	b	1f54 <sfbpf_print+0x7bc>
    1c34:	ldr	r0, [pc, #1276]	; 2138 <sfbpf_print+0x9a0>
    1c38:	add	r0, pc, r0
    1c3c:	bl	d80 <printf@plt>
    1c40:	ldrb	r0, [r8]
    1c44:	and	r1, r0, #248	; 0xf8
    1c48:	ldr	r0, [pc, #1260]	; 213c <sfbpf_print+0x9a4>
    1c4c:	ldr	r2, [pc, #1260]	; 2140 <sfbpf_print+0x9a8>
    1c50:	cmp	r1, #128	; 0x80
    1c54:	add	r2, pc, r2
    1c58:	add	r0, pc, r0
    1c5c:	moveq	r0, r2
    1c60:	cmp	r1, #0
    1c64:	ldr	r1, [pc, #1240]	; 2144 <sfbpf_print+0x9ac>
    1c68:	add	r1, pc, r1
    1c6c:	moveq	r0, r1
    1c70:	bl	d80 <printf@plt>
    1c74:	b	1fe0 <sfbpf_print+0x848>
    1c78:	ubfx	r0, r0, #4, #4
    1c7c:	cmp	r0, #4
    1c80:	bhi	1e80 <sfbpf_print+0x6e8>
    1c84:	add	r2, pc, #12
    1c88:	ldr	r1, [pc, #1140]	; 2104 <sfbpf_print+0x96c>
    1c8c:	ldr	r0, [r2, r0, lsl #2]
    1c90:	add	r1, pc, r1
    1c94:	add	pc, r2, r0
    1c98:	.word	0x00000014
    1c9c:	.word	0x000001fc
    1ca0:	.word	0x000001c4
    1ca4:	.word	0x000001f4
    1ca8:	.word	0x000001d0
    1cac:	add	r0, sl, r6, lsl #3
    1cb0:	ldr	r0, [r0, #4]
    1cb4:	add	r0, r6, r0
    1cb8:	add	r1, r0, #1
    1cbc:	ldr	r0, [pc, #1092]	; 2108 <sfbpf_print+0x970>
    1cc0:	add	r0, pc, r0
    1cc4:	bl	d80 <printf@plt>
    1cc8:	ldr	r0, [r5]
    1ccc:	add	r6, r6, #1
    1cd0:	cmp	r6, r0
    1cd4:	bcc	1830 <sfbpf_print+0x98>
    1cd8:	b	1ff8 <sfbpf_print+0x860>
    1cdc:	ldr	r0, [pc, #1092]	; 2128 <sfbpf_print+0x990>
    1ce0:	add	r0, pc, r0
    1ce4:	bl	d80 <printf@plt>
    1ce8:	ldrh	r0, [r8]
    1cec:	and	r0, r0, #24
    1cf0:	cmp	r0, #16
    1cf4:	beq	1d90 <sfbpf_print+0x5f8>
    1cf8:	cmp	r0, #8
    1cfc:	beq	1d9c <sfbpf_print+0x604>
    1d00:	cmp	r0, #0
    1d04:	bne	1da8 <sfbpf_print+0x610>
    1d08:	add	r0, sl, r6, lsl #3
    1d0c:	ldr	r1, [r0, #4]
    1d10:	ldr	r0, [pc, #1044]	; 212c <sfbpf_print+0x994>
    1d14:	add	r0, pc, r0
    1d18:	bl	d80 <printf@plt>
    1d1c:	b	1db4 <sfbpf_print+0x61c>
    1d20:	mov	r1, #0
    1d24:	uxtb	r0, r0
    1d28:	lsr	r0, r0, #5
    1d2c:	cmp	r0, #5
    1d30:	bls	19f4 <sfbpf_print+0x25c>
    1d34:	mov	r0, #0
    1d38:	b	1d5c <sfbpf_print+0x5c4>
    1d3c:	ldr	r0, [pc, #768]	; 2044 <sfbpf_print+0x8ac>
    1d40:	add	r0, pc, r0
    1d44:	b	1d5c <sfbpf_print+0x5c4>
    1d48:	ldr	r0, [pc, #760]	; 2048 <sfbpf_print+0x8b0>
    1d4c:	add	r0, pc, r0
    1d50:	b	1d5c <sfbpf_print+0x5c4>
    1d54:	ldr	r0, [pc, #752]	; 204c <sfbpf_print+0x8b4>
    1d58:	add	r0, pc, r0
    1d5c:	mov	r2, r0
    1d60:	ldr	r0, [pc, #744]	; 2050 <sfbpf_print+0x8b8>
    1d64:	add	r0, pc, r0
    1d68:	b	1800 <sfbpf_print+0x68>
    1d6c:	ldr	r0, [pc, #980]	; 2148 <sfbpf_print+0x9b0>
    1d70:	mov	r1, #0
    1d74:	add	r0, pc, r0
    1d78:	b	1b34 <sfbpf_print+0x39c>
    1d7c:	mov	r2, #0
    1d80:	b	17dc <sfbpf_print+0x44>
    1d84:	ldr	r2, [pc, #748]	; 2078 <sfbpf_print+0x8e0>
    1d88:	add	r2, pc, r2
    1d8c:	b	17dc <sfbpf_print+0x44>
    1d90:	mov	r0, #65	; 0x41
    1d94:	bl	eac <putchar@plt>
    1d98:	b	1db4 <sfbpf_print+0x61c>
    1d9c:	mov	r0, #88	; 0x58
    1da0:	bl	eac <putchar@plt>
    1da4:	b	1db4 <sfbpf_print+0x61c>
    1da8:	ldr	r0, [pc, #896]	; 2130 <sfbpf_print+0x998>
    1dac:	add	r0, pc, r0
    1db0:	bl	d80 <printf@plt>
    1db4:	ldr	r0, [pc, #888]	; 2134 <sfbpf_print+0x99c>
    1db8:	add	r0, pc, r0
    1dbc:	bl	e28 <puts@plt>
    1dc0:	ldr	r0, [r5]
    1dc4:	add	r6, r6, #1
    1dc8:	cmp	r6, r0
    1dcc:	bcc	1830 <sfbpf_print+0x98>
    1dd0:	b	1ff8 <sfbpf_print+0x860>
    1dd4:	add	r0, sl, r6, lsl #3
    1dd8:	ldr	r1, [r0, #4]
    1ddc:	ldr	r0, [pc, #736]	; 20c4 <sfbpf_print+0x92c>
    1de0:	add	r0, pc, r0
    1de4:	bl	d80 <printf@plt>
    1de8:	b	1fe0 <sfbpf_print+0x848>
    1dec:	ldr	r0, [pc, #712]	; 20bc <sfbpf_print+0x924>
    1df0:	add	r0, pc, r0
    1df4:	b	1c70 <sfbpf_print+0x4d8>
    1df8:	add	r0, sl, r6, lsl #3
    1dfc:	ldr	r1, [r0, #4]
    1e00:	ldr	r0, [pc, #704]	; 20c8 <sfbpf_print+0x930>
    1e04:	add	r0, pc, r0
    1e08:	bl	d80 <printf@plt>
    1e0c:	b	1fe0 <sfbpf_print+0x848>
    1e10:	add	r1, sl, r6, lsl #3
    1e14:	ands	r0, r0, #24
    1e18:	ldr	r1, [r1, #4]
    1e1c:	beq	1fc8 <sfbpf_print+0x830>
    1e20:	cmp	r0, #16
    1e24:	beq	1fd0 <sfbpf_print+0x838>
    1e28:	cmp	r0, #8
    1e2c:	movne	r2, #0
    1e30:	moveq	r2, #2
    1e34:	b	1fd4 <sfbpf_print+0x83c>
    1e38:	add	r0, sl, r6, lsl #3
    1e3c:	ldr	r1, [r0, #4]
    1e40:	ldr	r0, [pc, #616]	; 20b0 <sfbpf_print+0x918>
    1e44:	add	r0, pc, r0
    1e48:	bl	d80 <printf@plt>
    1e4c:	b	1fe0 <sfbpf_print+0x848>
    1e50:	ldr	r0, [pc, #596]	; 20ac <sfbpf_print+0x914>
    1e54:	add	r0, pc, r0
    1e58:	b	1c70 <sfbpf_print+0x4d8>
    1e5c:	ldr	r1, [pc, #680]	; 210c <sfbpf_print+0x974>
    1e60:	add	r1, pc, r1
    1e64:	b	1e94 <sfbpf_print+0x6fc>
    1e68:	ldr	r1, [pc, #676]	; 2114 <sfbpf_print+0x97c>
    1e6c:	add	r1, pc, r1
    1e70:	b	1e94 <sfbpf_print+0x6fc>
    1e74:	ldr	r0, [pc, #568]	; 20b4 <sfbpf_print+0x91c>
    1e78:	add	r0, pc, r0
    1e7c:	b	1c70 <sfbpf_print+0x4d8>
    1e80:	ldr	r1, [pc, #656]	; 2118 <sfbpf_print+0x980>
    1e84:	add	r1, pc, r1
    1e88:	b	1e94 <sfbpf_print+0x6fc>
    1e8c:	ldr	r1, [pc, #636]	; 2110 <sfbpf_print+0x978>
    1e90:	add	r1, pc, r1
    1e94:	ldr	r0, [pc, #640]	; 211c <sfbpf_print+0x984>
    1e98:	add	r0, pc, r0
    1e9c:	bl	d80 <printf@plt>
    1ea0:	ldrb	r0, [r8]
    1ea4:	tst	r0, #8
    1ea8:	bne	1ec4 <sfbpf_print+0x72c>
    1eac:	add	r0, sl, r6, lsl #3
    1eb0:	ldr	r1, [r0, #4]
    1eb4:	ldr	r0, [pc, #612]	; 2120 <sfbpf_print+0x988>
    1eb8:	add	r0, pc, r0
    1ebc:	bl	d80 <printf@plt>
    1ec0:	b	1ecc <sfbpf_print+0x734>
    1ec4:	mov	r0, #88	; 0x58
    1ec8:	bl	eac <putchar@plt>
    1ecc:	add	r0, sl, r6, lsl #3
    1ed0:	add	r2, r6, #1
    1ed4:	ldrb	r1, [r0, #2]
    1ed8:	ldrb	r0, [r0, #3]
    1edc:	add	r1, r2, r1
    1ee0:	add	r2, r2, r0
    1ee4:	ldr	r0, [pc, #568]	; 2124 <sfbpf_print+0x98c>
    1ee8:	add	r0, pc, r0
    1eec:	bl	d80 <printf@plt>
    1ef0:	ldr	r0, [r5]
    1ef4:	add	r6, r6, #1
    1ef8:	cmp	r6, r0
    1efc:	bcc	1830 <sfbpf_print+0x98>
    1f00:	b	1ff8 <sfbpf_print+0x860>
    1f04:	ldr	r1, [pc, #492]	; 20f8 <sfbpf_print+0x960>
    1f08:	add	r1, pc, r1
    1f0c:	b	1f54 <sfbpf_print+0x7bc>
    1f10:	ldr	r1, [pc, #452]	; 20dc <sfbpf_print+0x944>
    1f14:	add	r1, pc, r1
    1f18:	b	1f54 <sfbpf_print+0x7bc>
    1f1c:	ldr	r1, [pc, #444]	; 20e0 <sfbpf_print+0x948>
    1f20:	add	r1, pc, r1
    1f24:	b	1f54 <sfbpf_print+0x7bc>
    1f28:	ldr	r1, [pc, #436]	; 20e4 <sfbpf_print+0x94c>
    1f2c:	add	r1, pc, r1
    1f30:	b	1f54 <sfbpf_print+0x7bc>
    1f34:	ldr	r1, [pc, #428]	; 20e8 <sfbpf_print+0x950>
    1f38:	add	r1, pc, r1
    1f3c:	b	1f54 <sfbpf_print+0x7bc>
    1f40:	ldr	r1, [pc, #420]	; 20ec <sfbpf_print+0x954>
    1f44:	add	r1, pc, r1
    1f48:	b	1f54 <sfbpf_print+0x7bc>
    1f4c:	ldr	r1, [pc, #412]	; 20f0 <sfbpf_print+0x958>
    1f50:	add	r1, pc, r1
    1f54:	ldr	r0, [pc, #416]	; 20fc <sfbpf_print+0x964>
    1f58:	add	r0, pc, r0
    1f5c:	bl	d80 <printf@plt>
    1f60:	ldrb	r0, [r8]
    1f64:	tst	r0, #8
    1f68:	bne	1f84 <sfbpf_print+0x7ec>
    1f6c:	add	r0, sl, r6, lsl #3
    1f70:	ldr	r1, [r0, #4]
    1f74:	ldr	r0, [pc, #388]	; 2100 <sfbpf_print+0x968>
    1f78:	add	r0, pc, r0
    1f7c:	bl	d80 <printf@plt>
    1f80:	b	1fe0 <sfbpf_print+0x848>
    1f84:	mov	r0, #88	; 0x58
    1f88:	bl	eac <putchar@plt>
    1f8c:	b	1fe0 <sfbpf_print+0x848>
    1f90:	ldr	r0, [pc, #348]	; 20f4 <sfbpf_print+0x95c>
    1f94:	add	r0, pc, r0
    1f98:	bl	e28 <puts@plt>
    1f9c:	ldr	r0, [r5]
    1fa0:	add	r6, r6, #1
    1fa4:	cmp	r6, r0
    1fa8:	bcc	1830 <sfbpf_print+0x98>
    1fac:	b	1ff8 <sfbpf_print+0x860>
    1fb0:	mov	r2, #4
    1fb4:	b	1fbc <sfbpf_print+0x824>
    1fb8:	mov	r2, #1
    1fbc:	ldr	r0, [pc, #224]	; 20a4 <sfbpf_print+0x90c>
    1fc0:	add	r0, pc, r0
    1fc4:	b	1fdc <sfbpf_print+0x844>
    1fc8:	mov	r2, #4
    1fcc:	b	1fd4 <sfbpf_print+0x83c>
    1fd0:	mov	r2, #1
    1fd4:	ldr	r0, [pc, #204]	; 20a8 <sfbpf_print+0x910>
    1fd8:	add	r0, pc, r0
    1fdc:	bl	d80 <printf@plt>
    1fe0:	mov	r0, #10
    1fe4:	bl	eac <putchar@plt>
    1fe8:	ldr	r0, [r5]
    1fec:	add	r6, r6, #1
    1ff0:	cmp	r6, r0
    1ff4:	bcc	1830 <sfbpf_print+0x98>
    1ff8:	sub	sp, fp, #28
    1ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2000:	.word	0x00027755
    2004:	.word	0x0002758c
    2008:	.word	0x00027540
    200c:	.word	0x00027537
    2010:	.word	0x00027515
    2014:	.word	0x0002747e
    2018:	.word	0x00027477
    201c:	.word	0x00027464
    2020:	.word	0x0002745d
    2024:	.word	0x0002747a
    2028:	.word	0x00027561
    202c:	.word	0x0002740f
    2030:	.word	0x00027433
    2034:	.word	0x0002740b
    2038:	.word	0x000273cd
    203c:	.word	0x000273c5
    2040:	.word	0x000273a9
    2044:	.word	0x00027099
    2048:	.word	0x00027091
    204c:	.word	0x00027089
    2050:	.word	0x00026ffa
    2054:	.word	0x000273a9
    2058:	.word	0x00044288
    205c:	.word	0x0004426c
    2060:	.word	0x00027713
    2064:	.word	0x0002761d
    2068:	.word	0x00027573
    206c:	.word	0x0002736c
    2070:	.word	0x00027363
    2074:	.word	0x0002734d
    2078:	.word	0x00027092
    207c:	.word	0x00027647
    2080:	.word	0x00027331
    2084:	.word	0x0002741b
    2088:	.word	0x00027400
    208c:	.word	0x00027279
    2090:	.word	0x00027310
    2094:	.word	0x00027304
    2098:	.word	0x00027256
    209c:	.word	0x00027575
    20a0:	.word	0x0002757e
    20a4:	.word	0x00026e99
    20a8:	.word	0x00026e8a
    20ac:	.word	0x00027019
    20b0:	.word	0x0002702d
    20b4:	.word	0x00026fff
    20b8:	.word	0x0002733b
    20bc:	.word	0x0002707d
    20c0:	.word	0x00027f23
    20c4:	.word	0x00027091
    20c8:	.word	0x00027082
    20cc:	.word	0x0002728c
    20d0:	.word	0x00027275
    20d4:	.word	0x0002729a
    20d8:	.word	0x0002726c
    20dc:	.word	0x00026f86
    20e0:	.word	0x00026f7c
    20e4:	.word	0x00026f72
    20e8:	.word	0x00026f68
    20ec:	.word	0x00026f5e
    20f0:	.word	0x00026f55
    20f4:	.word	0x00026f7f
    20f8:	.word	0x00026f6f
    20fc:	.word	0x00026f50
    2100:	.word	0x00027b33
    2104:	.word	0x00027233
    2108:	.word	0x000271f9
    210c:	.word	0x00027046
    2110:	.word	0x00027036
    2114:	.word	0x00027034
    2118:	.word	0x00026ff3
    211c:	.word	0x00027031
    2120:	.word	0x00027bf3
    2124:	.word	0x00026fed
    2128:	.word	0x00027204
    212c:	.word	0x00027d97
    2130:	.word	0x000270cb
    2134:	.word	0x00027163
    2138:	.word	0x000272b9
    213c:	.word	0x0002721f
    2140:	.word	0x000272aa
    2144:	.word	0x0002728f
    2148:	.word	0x00027009

0000214c <sf_bpf_error>:
    214c:	sub	sp, sp, #12
    2150:	push	{fp, lr}
    2154:	mov	fp, sp
    2158:	sub	sp, sp, #4
    215c:	mov	ip, r0
    2160:	add	r0, fp, #8
    2164:	stm	r0, {r1, r2, r3}
    2168:	add	r3, fp, #8
    216c:	mov	r1, #256	; 0x100
    2170:	mov	r2, ip
    2174:	str	r3, [sp]
    2178:	ldr	r0, [pc, #20]	; 2194 <sf_bpf_error+0x48>
    217c:	add	r0, pc, r0
    2180:	bl	ee8 <vsnprintf@plt>
    2184:	ldr	r0, [pc, #12]	; 2198 <sf_bpf_error+0x4c>
    2188:	mov	r1, #1
    218c:	add	r0, pc, r0
    2190:	bl	da4 <longjmp@plt>
    2194:	.word	0x00044014
    2198:	.word	0x0004410c

0000219c <sf_sdup>:
    219c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    21a0:	add	fp, sp, #24
    21a4:	mov	r8, r0
    21a8:	bl	e64 <strlen@plt>
    21ac:	ldr	r1, [pc, #168]	; 225c <sf_sdup+0xc0>
    21b0:	mov	r9, r0
    21b4:	add	r2, r9, #4
    21b8:	bic	r4, r2, #3
    21bc:	add	r1, pc, r1
    21c0:	ldr	r0, [r1, #92]	; 0x5c
    21c4:	ldr	r5, [pc, #148]	; 2260 <sf_sdup+0xc4>
    21c8:	add	r5, pc, r5
    21cc:	ldr	r6, [r5, r0, lsl #3]!
    21d0:	cmp	r4, r6
    21d4:	bls	2220 <sf_sdup+0x84>
    21d8:	add	r2, r0, #1
    21dc:	cmp	r0, #15
    21e0:	str	r2, [r1, #92]	; 0x5c
    21e4:	bge	2250 <sf_sdup+0xb4>
    21e8:	mov	r0, #1024	; 0x400
    21ec:	lsl	r6, r0, r2
    21f0:	mov	r0, r6
    21f4:	bl	e34 <malloc@plt>
    21f8:	cmp	r0, #0
    21fc:	str	r0, [r5, #12]
    2200:	beq	2250 <sf_sdup+0xb4>
    2204:	mov	r1, #0
    2208:	mov	r2, r6
    220c:	add	r5, r5, #8
    2210:	bl	ea0 <memset@plt>
    2214:	cmp	r4, r6
    2218:	str	r6, [r5]
    221c:	bhi	2250 <sf_sdup+0xb4>
    2220:	sub	r0, r6, r4
    2224:	add	r7, r9, #1
    2228:	str	r0, [r5]
    222c:	mov	r2, r7
    2230:	ldr	r1, [r5, #4]
    2234:	add	r0, r1, r0
    2238:	mov	r1, r8
    223c:	bl	eb8 <strncpy@plt>
    2240:	cmp	r7, #1
    2244:	movge	r1, #0
    2248:	strbge	r1, [r0, r9]
    224c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2250:	ldr	r0, [pc, #12]	; 2264 <sf_sdup+0xc8>
    2254:	add	r0, pc, r0
    2258:	bl	214c <sf_bpf_error>
    225c:	.word	0x00044324
    2260:	.word	0x00044258
    2264:	.word	0x00027810

00002268 <sfbpf_compile>:
    2268:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    226c:	add	fp, sp, #24
    2270:	sub	sp, sp, #8
    2274:	mov	r6, r0
    2278:	ldr	r0, [pc, #2572]	; 2c8c <sfbpf_compile+0xa24>
    227c:	mov	r5, r1
    2280:	mov	r1, #0
    2284:	vmov.i32	q8, #0	; 0x00000000
    2288:	mov	r9, r2
    228c:	add	r0, pc, r0
    2290:	str	r1, [r0]
    2294:	ldr	r7, [pc, #2548]	; 2c90 <sfbpf_compile+0xa28>
    2298:	add	r7, pc, r7
    229c:	str	r1, [r7, #104]	; 0x68
    22a0:	str	r1, [r7, #20]
    22a4:	ldr	r0, [pc, #2536]	; 2c94 <sfbpf_compile+0xa2c>
    22a8:	add	r0, pc, r0
    22ac:	add	r2, r0, #16
    22b0:	vst1.64	{d16-d17}, [r2]
    22b4:	add	r2, r0, #32
    22b8:	vst1.64	{d16-d17}, [r2]
    22bc:	mov	r2, #48	; 0x30
    22c0:	vst1.64	{d16-d17}, [r0], r2
    22c4:	vst1.64	{d16-d17}, [r0]
    22c8:	ldr	r8, [pc, #2504]	; 2c98 <sfbpf_compile+0xa30>
    22cc:	ldr	r8, [pc, r8]
    22d0:	str	r1, [r8]
    22d4:	str	r3, [sp, #4]
    22d8:	ldr	r0, [pc, #2492]	; 2c9c <sfbpf_compile+0xa34>
    22dc:	add	r0, pc, r0
    22e0:	bl	db0 <_setjmp@plt>
    22e4:	cmp	r0, #0
    22e8:	beq	2318 <sfbpf_compile+0xb0>
    22ec:	ldr	r0, [r7, #24]
    22f0:	cmp	r0, #0
    22f4:	beq	2304 <sfbpf_compile+0x9c>
    22f8:	bl	ef4 <freeaddrinfo@plt>
    22fc:	mov	r0, #0
    2300:	str	r0, [r7, #24]
    2304:	bl	28cd4 <sf_lex_cleanup>
    2308:	bl	2cc4 <freechunks>
    230c:	mvn	r0, #0
    2310:	sub	sp, fp, #24
    2314:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2318:	ldr	r0, [fp, #12]
    231c:	cmp	r6, #0
    2320:	str	r0, [r7, #28]
    2324:	str	r6, [r7, #32]
    2328:	beq	2340 <sfbpf_compile+0xd8>
    232c:	ldr	r0, [sp, #4]
    2330:	cmp	r0, #0
    2334:	beq	237c <sfbpf_compile+0x114>
    2338:	ldr	r0, [sp, #4]
    233c:	b	2384 <sfbpf_compile+0x11c>
    2340:	ldr	r0, [pc, #2392]	; 2ca0 <sfbpf_compile+0xa38>
    2344:	ldr	r2, [pc, #2392]	; 2ca4 <sfbpf_compile+0xa3c>
    2348:	mov	r1, #32
    234c:	add	r0, pc, r0
    2350:	add	r2, pc, r2
    2354:	vld1.64	{d16-d17}, [r0]!
    2358:	add	r3, r2, #16
    235c:	vst1.64	{d16-d17}, [r2], r1
    2360:	vld1.64	{d16-d17}, [r0]
    2364:	mov	r1, #0
    2368:	strb	r1, [r2]
    236c:	vst1.64	{d16-d17}, [r3]
    2370:	mvn	r0, #0
    2374:	sub	sp, fp, #24
    2378:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    237c:	ldr	r0, [pc, #2340]	; 2ca8 <sfbpf_compile+0xa40>
    2380:	add	r0, pc, r0
    2384:	bl	28ca4 <sf_lex_init>
    2388:	mov	r0, #0
    238c:	mvn	r1, #0
    2390:	mov	r2, #1
    2394:	cmp	r5, #229	; 0xe5
    2398:	str	r0, [r7, #52]	; 0x34
    239c:	str	r5, [r7, #36]	; 0x24
    23a0:	strb	r0, [r7, #8]
    23a4:	strb	r0, [r7]
    23a8:	strb	r2, [r7, #12]
    23ac:	str	r1, [r7, #60]	; 0x3c
    23b0:	str	r1, [r7, #64]	; 0x40
    23b4:	str	r1, [r7, #68]	; 0x44
    23b8:	str	r1, [r7, #72]	; 0x48
    23bc:	str	r1, [r7, #76]	; 0x4c
    23c0:	str	r1, [r7, #80]	; 0x50
    23c4:	str	r1, [r7, #84]	; 0x54
    23c8:	str	r1, [r7, #88]	; 0x58
    23cc:	strb	r0, [r7, #4]
    23d0:	str	r0, [r7, #44]	; 0x2c
    23d4:	strb	r0, [r7, #16]
    23d8:	ldr	r2, [pc, #2252]	; 2cac <sfbpf_compile+0xa44>
    23dc:	str	r1, [r7, #96]	; 0x60
    23e0:	str	r1, [r7, #100]	; 0x64
    23e4:	add	r2, pc, r2
    23e8:	stm	r2, {r0, r1}
    23ec:	bhi	2c64 <sfbpf_compile+0x9fc>
    23f0:	add	r0, pc, #4
    23f4:	ldr	r1, [r0, r5, lsl #2]
    23f8:	add	pc, r0, r1
    23fc:	.word	0x00000444
    2400:	.word	0x00000584
    2404:	.word	0x00000868
    2408:	.word	0x00000868
    240c:	.word	0x00000868
    2410:	.word	0x00000868
    2414:	.word	0x0000059c
    2418:	.word	0x0000050c
    241c:	.word	0x000005b4
    2420:	.word	0x00000408
    2424:	.word	0x00000518
    2428:	.word	0x00000458
    242c:	.word	0x000003c0
    2430:	.word	0x00000868
    2434:	.word	0x00000868
    2438:	.word	0x00000530
    243c:	.word	0x000005c8
    2440:	.word	0x00000868
    2444:	.word	0x00000868
    2448:	.word	0x00000458
    244c:	.word	0x00000868
    2450:	.word	0x00000868
    2454:	.word	0x00000868
    2458:	.word	0x00000868
    245c:	.word	0x00000868
    2460:	.word	0x00000868
    2464:	.word	0x00000868
    2468:	.word	0x00000868
    246c:	.word	0x00000868
    2470:	.word	0x00000868
    2474:	.word	0x00000868
    2478:	.word	0x00000868
    247c:	.word	0x00000868
    2480:	.word	0x00000868
    2484:	.word	0x00000868
    2488:	.word	0x00000868
    248c:	.word	0x00000868
    2490:	.word	0x00000868
    2494:	.word	0x00000868
    2498:	.word	0x00000868
    249c:	.word	0x00000868
    24a0:	.word	0x00000868
    24a4:	.word	0x00000868
    24a8:	.word	0x00000868
    24ac:	.word	0x00000868
    24b0:	.word	0x00000868
    24b4:	.word	0x00000868
    24b8:	.word	0x00000868
    24bc:	.word	0x00000868
    24c0:	.word	0x00000868
    24c4:	.word	0x00000408
    24c8:	.word	0x00000544
    24cc:	.word	0x00000868
    24d0:	.word	0x00000868
    24d4:	.word	0x00000868
    24d8:	.word	0x00000868
    24dc:	.word	0x00000868
    24e0:	.word	0x00000868
    24e4:	.word	0x00000868
    24e8:	.word	0x00000868
    24ec:	.word	0x00000868
    24f0:	.word	0x00000868
    24f4:	.word	0x00000868
    24f8:	.word	0x00000868
    24fc:	.word	0x00000868
    2500:	.word	0x00000868
    2504:	.word	0x00000868
    2508:	.word	0x00000868
    250c:	.word	0x00000868
    2510:	.word	0x00000868
    2514:	.word	0x00000868
    2518:	.word	0x00000868
    251c:	.word	0x00000868
    2520:	.word	0x00000868
    2524:	.word	0x00000868
    2528:	.word	0x00000868
    252c:	.word	0x00000868
    2530:	.word	0x00000868
    2534:	.word	0x00000868
    2538:	.word	0x00000868
    253c:	.word	0x00000868
    2540:	.word	0x00000868
    2544:	.word	0x00000868
    2548:	.word	0x00000868
    254c:	.word	0x00000868
    2550:	.word	0x00000868
    2554:	.word	0x00000868
    2558:	.word	0x00000868
    255c:	.word	0x00000868
    2560:	.word	0x00000868
    2564:	.word	0x00000868
    2568:	.word	0x00000868
    256c:	.word	0x00000868
    2570:	.word	0x00000868
    2574:	.word	0x00000868
    2578:	.word	0x00000868
    257c:	.word	0x00000868
    2580:	.word	0x00000868
    2584:	.word	0x00000868
    2588:	.word	0x000005dc
    258c:	.word	0x00000868
    2590:	.word	0x00000868
    2594:	.word	0x00000868
    2598:	.word	0x00000868
    259c:	.word	0x00000408
    25a0:	.word	0x000003cc
    25a4:	.word	0x00000868
    25a8:	.word	0x000003c0
    25ac:	.word	0x00000444
    25b0:	.word	0x0000064c
    25b4:	.word	0x00000868
    25b8:	.word	0x00000868
    25bc:	.word	0x00000868
    25c0:	.word	0x00000814
    25c4:	.word	0x000003c0
    25c8:	.word	0x00000868
    25cc:	.word	0x00000868
    25d0:	.word	0x00000868
    25d4:	.word	0x00000868
    25d8:	.word	0x000003cc
    25dc:	.word	0x00000868
    25e0:	.word	0x00000868
    25e4:	.word	0x000005f0
    25e8:	.word	0x00000660
    25ec:	.word	0x00000868
    25f0:	.word	0x00000868
    25f4:	.word	0x00000868
    25f8:	.word	0x000003cc
    25fc:	.word	0x00000868
    2600:	.word	0x000004cc
    2604:	.word	0x000003a8
    2608:	.word	0x000003a8
    260c:	.word	0x000006b8
    2610:	.word	0x00000608
    2614:	.word	0x000003a8
    2618:	.word	0x00000620
    261c:	.word	0x00000638
    2620:	.word	0x00000644
    2624:	.word	0x000004e0
    2628:	.word	0x00000558
    262c:	.word	0x00000488
    2630:	.word	0x00000868
    2634:	.word	0x00000868
    2638:	.word	0x00000398
    263c:	.word	0x00000398
    2640:	.word	0x00000868
    2644:	.word	0x00000868
    2648:	.word	0x00000868
    264c:	.word	0x00000868
    2650:	.word	0x00000868
    2654:	.word	0x00000868
    2658:	.word	0x00000868
    265c:	.word	0x00000868
    2660:	.word	0x00000868
    2664:	.word	0x00000868
    2668:	.word	0x00000868
    266c:	.word	0x00000868
    2670:	.word	0x00000868
    2674:	.word	0x00000868
    2678:	.word	0x00000868
    267c:	.word	0x00000868
    2680:	.word	0x00000868
    2684:	.word	0x00000868
    2688:	.word	0x000003cc
    268c:	.word	0x0000056c
    2690:	.word	0x00000868
    2694:	.word	0x00000408
    2698:	.word	0x00000424
    269c:	.word	0x000004f4
    26a0:	.word	0x00000868
    26a4:	.word	0x00000868
    26a8:	.word	0x00000868
    26ac:	.word	0x00000868
    26b0:	.word	0x00000868
    26b4:	.word	0x00000868
    26b8:	.word	0x00000868
    26bc:	.word	0x00000868
    26c0:	.word	0x00000398
    26c4:	.word	0x00000424
    26c8:	.word	0x000003a8
    26cc:	.word	0x000003a8
    26d0:	.word	0x000003a8
    26d4:	.word	0x0000049c
    26d8:	.word	0x00000470
    26dc:	.word	0x00000868
    26e0:	.word	0x00000868
    26e4:	.word	0x00000398
    26e8:	.word	0x00000398
    26ec:	.word	0x00000868
    26f0:	.word	0x00000398
    26f4:	.word	0x00000398
    26f8:	.word	0x00000398
    26fc:	.word	0x000003cc
    2700:	.word	0x00000398
    2704:	.word	0x0000047c
    2708:	.word	0x00000398
    270c:	.word	0x00000398
    2710:	.word	0x00000840
    2714:	.word	0x00000398
    2718:	.word	0x00000398
    271c:	.word	0x00000470
    2720:	.word	0x00000398
    2724:	.word	0x000007e4
    2728:	.word	0x00000868
    272c:	.word	0x00000868
    2730:	.word	0x00000868
    2734:	.word	0x00000868
    2738:	.word	0x00000868
    273c:	.word	0x00000868
    2740:	.word	0x00000868
    2744:	.word	0x00000868
    2748:	.word	0x00000868
    274c:	.word	0x00000868
    2750:	.word	0x00000868
    2754:	.word	0x00000868
    2758:	.word	0x00000398
    275c:	.word	0x00000868
    2760:	.word	0x00000868
    2764:	.word	0x00000868
    2768:	.word	0x00000398
    276c:	.word	0x00000398
    2770:	.word	0x00000868
    2774:	.word	0x00000868
    2778:	.word	0x00000868
    277c:	.word	0x00000868
    2780:	.word	0x00000868
    2784:	.word	0x00000828
    2788:	.word	0x00000398
    278c:	.word	0x000003c0
    2790:	.word	0x000003c0
    2794:	mvn	r0, #0
    2798:	str	r0, [r7, #56]	; 0x38
    279c:	str	r0, [r7, #40]	; 0x28
    27a0:	b	2ac4 <sfbpf_compile+0x85c>
    27a4:	mvn	r0, #0
    27a8:	mov	r1, #4
    27ac:	str	r0, [r7, #56]	; 0x38
    27b0:	mov	r0, #0
    27b4:	str	r1, [r7, #40]	; 0x28
    27b8:	b	2818 <sfbpf_compile+0x5b0>
    27bc:	mov	r0, #0
    27c0:	mvn	r1, #0
    27c4:	b	2abc <sfbpf_compile+0x854>
    27c8:	mov	r2, #3
    27cc:	mov	r0, #0
    27d0:	mov	r1, #24
    27d4:	str	r2, [r7, #56]	; 0x38
    27d8:	str	r1, [r7, #40]	; 0x28
    27dc:	str	r0, [r7, #44]	; 0x2c
    27e0:	mov	r2, #8
    27e4:	mov	r0, #1
    27e8:	str	r2, [r7, #48]	; 0x30
    27ec:	strb	r0, [r7, #16]
    27f0:	bl	249fc <sfbpf_parse>
    27f4:	ldr	r0, [r8]
    27f8:	cmp	r0, #0
    27fc:	beq	2adc <sfbpf_compile+0x874>
    2800:	b	2c0c <sfbpf_compile+0x9a4>
    2804:	mov	r0, #0
    2808:	mov	r1, #4
    280c:	str	r0, [r7, #56]	; 0x38
    2810:	mov	r2, #2
    2814:	str	r2, [r7, #40]	; 0x28
    2818:	str	r1, [r7, #44]	; 0x2c
    281c:	b	2ac8 <sfbpf_compile+0x860>
    2820:	mov	r0, #21
    2824:	mov	r1, #16
    2828:	mov	r2, #14
    282c:	str	r0, [r7, #56]	; 0x38
    2830:	mov	r0, #18
    2834:	str	r1, [r7, #40]	; 0x28
    2838:	str	r2, [r7, #44]	; 0x2c
    283c:	b	2ac8 <sfbpf_compile+0x860>
    2840:	mov	r0, #0
    2844:	mov	r1, #4
    2848:	str	r0, [r7, #56]	; 0x38
    284c:	str	r0, [r7, #40]	; 0x28
    2850:	b	2818 <sfbpf_compile+0x5b0>
    2854:	mov	r0, #3
    2858:	mov	r1, #0
    285c:	str	r0, [r7, #56]	; 0x38
    2860:	mov	r0, #8
    2864:	str	r1, [r7, #40]	; 0x28
    2868:	b	2818 <sfbpf_compile+0x5b0>
    286c:	mvn	r0, #0
    2870:	mov	r1, #18
    2874:	b	2abc <sfbpf_compile+0x854>
    2878:	mvn	r0, #0
    287c:	mov	r1, #8
    2880:	b	2abc <sfbpf_compile+0x854>
    2884:	mov	r0, #7
    2888:	mov	r1, #4
    288c:	mov	r2, #3
    2890:	mov	r3, #2
    2894:	b	2c4c <sfbpf_compile+0x9e4>
    2898:	mov	r0, #0
    289c:	mov	r1, #4
    28a0:	mvn	r2, #0
    28a4:	str	r0, [r7, #56]	; 0x38
    28a8:	str	r2, [r7, #40]	; 0x28
    28ac:	str	r0, [r7, #44]	; 0x2c
    28b0:	str	r1, [r7, #48]	; 0x30
    28b4:	bl	249fc <sfbpf_parse>
    28b8:	ldr	r0, [r8]
    28bc:	cmp	r0, #0
    28c0:	beq	2adc <sfbpf_compile+0x874>
    28c4:	b	2c0c <sfbpf_compile+0x9a4>
    28c8:	mov	r0, #0
    28cc:	mov	r1, #8
    28d0:	mov	r2, #4
    28d4:	str	r0, [r7, #56]	; 0x38
    28d8:	b	2814 <sfbpf_compile+0x5ac>
    28dc:	mov	r0, #0
    28e0:	mov	r1, #18
    28e4:	mov	r2, #16
    28e8:	str	r0, [r7, #56]	; 0x38
    28ec:	b	2814 <sfbpf_compile+0x5ac>
    28f0:	mvn	r0, #0
    28f4:	mov	r1, #6
    28f8:	mov	r2, #4
    28fc:	str	r0, [r7, #56]	; 0x38
    2900:	mov	r0, #0
    2904:	b	2814 <sfbpf_compile+0x5ac>
    2908:	mov	r0, #0
    290c:	mov	r1, #6
    2910:	b	280c <sfbpf_compile+0x5a4>
    2914:	mov	r0, #3
    2918:	mov	r1, #13
    291c:	str	r0, [r7, #56]	; 0x38
    2920:	mov	r0, #8
    2924:	str	r1, [r7, #40]	; 0x28
    2928:	b	2818 <sfbpf_compile+0x5b0>
    292c:	mov	r0, #0
    2930:	mov	r1, #24
    2934:	mvn	r2, #0
    2938:	str	r0, [r7, #56]	; 0x38
    293c:	b	2814 <sfbpf_compile+0x5ac>
    2940:	mov	r0, #0
    2944:	mov	r1, #8
    2948:	mov	r2, #6
    294c:	str	r0, [r7, #56]	; 0x38
    2950:	b	2814 <sfbpf_compile+0x5ac>
    2954:	mov	r0, #11
    2958:	mov	r1, #8
    295c:	mov	r2, #7
    2960:	mov	r3, #6
    2964:	b	2c4c <sfbpf_compile+0x9e4>
    2968:	mvn	r0, #0
    296c:	mov	r1, #12
    2970:	str	r0, [r7, #56]	; 0x38
    2974:	mov	r0, #0
    2978:	str	r1, [r7, #40]	; 0x28
    297c:	b	2818 <sfbpf_compile+0x5b0>
    2980:	mov	r0, #3
    2984:	mov	r1, #14
    2988:	mov	r2, #12
    298c:	str	r0, [r7, #56]	; 0x38
    2990:	mov	r0, #0
    2994:	b	2814 <sfbpf_compile+0x5ac>
    2998:	mov	r0, #3
    299c:	mov	r1, #14
    29a0:	str	r0, [r7, #56]	; 0x38
    29a4:	mov	r0, #8
    29a8:	str	r1, [r7, #40]	; 0x28
    29ac:	b	2818 <sfbpf_compile+0x5b0>
    29b0:	mov	r0, #0
    29b4:	mov	r1, #16
    29b8:	mvn	r2, #0
    29bc:	str	r0, [r7, #56]	; 0x38
    29c0:	b	2814 <sfbpf_compile+0x5ac>
    29c4:	mov	r0, #0
    29c8:	mov	r1, #24
    29cc:	mov	r2, #5
    29d0:	str	r0, [r7, #56]	; 0x38
    29d4:	b	2814 <sfbpf_compile+0x5ac>
    29d8:	mov	r0, #0
    29dc:	mov	r1, #44	; 0x2c
    29e0:	mov	r2, #6
    29e4:	str	r0, [r7, #56]	; 0x38
    29e8:	b	2814 <sfbpf_compile+0x5ac>
    29ec:	mov	r0, #3
    29f0:	mov	r1, #16
    29f4:	str	r0, [r7, #56]	; 0x38
    29f8:	mov	r0, #8
    29fc:	str	r1, [r7, #40]	; 0x28
    2a00:	b	2818 <sfbpf_compile+0x5b0>
    2a04:	mvn	r0, #0
    2a08:	mov	r1, #12
    2a0c:	mov	r2, #6
    2a10:	str	r0, [r7, #56]	; 0x38
    2a14:	mov	r0, #0
    2a18:	b	2814 <sfbpf_compile+0x5ac>
    2a1c:	mov	r0, #10
    2a20:	mov	r1, #8
    2a24:	str	r0, [r7, #56]	; 0x38
    2a28:	mov	r0, #0
    2a2c:	str	r1, [r7, #40]	; 0x28
    2a30:	b	2818 <sfbpf_compile+0x5b0>
    2a34:	mvn	r0, #0
    2a38:	mov	r1, #12
    2a3c:	b	2abc <sfbpf_compile+0x854>
    2a40:	mov	r0, #10
    2a44:	b	27a8 <sfbpf_compile+0x540>
    2a48:	mov	r0, #0
    2a4c:	mov	r1, #12
    2a50:	str	r0, [r7, #56]	; 0x38
    2a54:	str	r0, [r7, #40]	; 0x28
    2a58:	b	2818 <sfbpf_compile+0x5b0>
    2a5c:	mov	r1, #1
    2a60:	mov	r6, #0
    2a64:	mov	r0, #2
    2a68:	mov	r2, #4
    2a6c:	mvn	r3, #0
    2a70:	mov	r5, #8
    2a74:	strb	r1, [r7, #8]
    2a78:	strb	r6, [r7, #12]
    2a7c:	mov	r6, #3
    2a80:	str	r2, [r7, #40]	; 0x28
    2a84:	str	r2, [r7, #44]	; 0x2c
    2a88:	str	r5, [r7, #48]	; 0x30
    2a8c:	str	r3, [r7, #52]	; 0x34
    2a90:	str	r6, [r7, #56]	; 0x38
    2a94:	str	r1, [r7, #60]	; 0x3c
    2a98:	str	r0, [r7, #64]	; 0x40
    2a9c:	str	r2, [r7, #68]	; 0x44
    2aa0:	bl	249fc <sfbpf_parse>
    2aa4:	ldr	r0, [r8]
    2aa8:	cmp	r0, #0
    2aac:	beq	2adc <sfbpf_compile+0x874>
    2ab0:	b	2c0c <sfbpf_compile+0x9a4>
    2ab4:	mvn	r0, #0
    2ab8:	mov	r1, #6
    2abc:	str	r0, [r7, #56]	; 0x38
    2ac0:	str	r1, [r7, #40]	; 0x28
    2ac4:	str	r0, [r7, #44]	; 0x2c
    2ac8:	str	r0, [r7, #48]	; 0x30
    2acc:	bl	249fc <sfbpf_parse>
    2ad0:	ldr	r0, [r8]
    2ad4:	cmp	r0, #0
    2ad8:	bne	2c0c <sfbpf_compile+0x9a4>
    2adc:	ldr	r0, [r7, #20]
    2ae0:	cmp	r0, #0
    2ae4:	bne	2b70 <sfbpf_compile+0x908>
    2ae8:	ldr	r6, [r7, #32]
    2aec:	ldr	r0, [r7, #92]	; 0x5c
    2af0:	ldr	r4, [pc, #444]	; 2cb4 <sfbpf_compile+0xa4c>
    2af4:	add	r4, pc, r4
    2af8:	ldr	r5, [r4, r0, lsl #3]!
    2afc:	cmp	r5, #207	; 0xcf
    2b00:	bhi	2b4c <sfbpf_compile+0x8e4>
    2b04:	add	r1, r0, #1
    2b08:	cmp	r0, #15
    2b0c:	str	r1, [r7, #92]	; 0x5c
    2b10:	bge	2c80 <sfbpf_compile+0xa18>
    2b14:	mov	r0, #1024	; 0x400
    2b18:	lsl	r5, r0, r1
    2b1c:	mov	r0, r5
    2b20:	bl	e34 <malloc@plt>
    2b24:	cmp	r0, #0
    2b28:	str	r0, [r4, #12]
    2b2c:	beq	2c80 <sfbpf_compile+0xa18>
    2b30:	mov	r1, #0
    2b34:	mov	r2, r5
    2b38:	add	r4, r4, #8
    2b3c:	bl	ea0 <memset@plt>
    2b40:	cmp	r5, #207	; 0xcf
    2b44:	str	r5, [r4]
    2b48:	bls	2c80 <sfbpf_compile+0xa18>
    2b4c:	sub	r0, r5, #208	; 0xd0
    2b50:	str	r0, [r4]
    2b54:	ldr	r1, [r4, #4]
    2b58:	add	r0, r1, r0
    2b5c:	mov	r1, #6
    2b60:	str	r1, [r0, #8]
    2b64:	str	r6, [r0, #20]
    2b68:	str	r0, [r0, #96]	; 0x60
    2b6c:	str	r0, [r7, #20]
    2b70:	ldr	r1, [fp, #8]
    2b74:	cmp	r1, #0
    2b78:	beq	2bb8 <sfbpf_compile+0x950>
    2b7c:	ldr	r1, [pc, #308]	; 2cb8 <sfbpf_compile+0xa50>
    2b80:	ldr	r1, [pc, r1]
    2b84:	cmp	r1, #0
    2b88:	bne	2bb8 <sfbpf_compile+0x950>
    2b8c:	add	r0, r7, #20
    2b90:	bl	1f4c8 <sf_bpf_optimize>
    2b94:	ldr	r0, [r7, #20]
    2b98:	cmp	r0, #0
    2b9c:	beq	2c74 <sfbpf_compile+0xa0c>
    2ba0:	ldr	r1, [r0, #8]
    2ba4:	cmp	r1, #6
    2ba8:	bne	2bb8 <sfbpf_compile+0x950>
    2bac:	ldr	r1, [r0, #20]
    2bb0:	cmp	r1, #0
    2bb4:	beq	2c74 <sfbpf_compile+0xa0c>
    2bb8:	mov	r1, sp
    2bbc:	bl	2380c <sf_icode_to_fcode>
    2bc0:	ldr	r1, [sp]
    2bc4:	str	r1, [r9]
    2bc8:	str	r0, [r9, #4]
    2bcc:	bl	28cd4 <sf_lex_cleanup>
    2bd0:	bl	2cc4 <freechunks>
    2bd4:	mov	r0, #0
    2bd8:	sub	sp, fp, #24
    2bdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2be0:	mvn	r0, #0
    2be4:	mov	r1, #1
    2be8:	str	r0, [r7, #40]	; 0x28
    2bec:	str	r0, [r7, #44]	; 0x2c
    2bf0:	str	r0, [r7, #48]	; 0x30
    2bf4:	str	r1, [r7, #52]	; 0x34
    2bf8:	str	r0, [r7, #56]	; 0x38
    2bfc:	bl	249fc <sfbpf_parse>
    2c00:	ldr	r0, [r8]
    2c04:	cmp	r0, #0
    2c08:	beq	2adc <sfbpf_compile+0x874>
    2c0c:	bl	2e6c <syntax>
    2c10:	mov	r0, #0
    2c14:	mov	r1, #16
    2c18:	mov	r2, #14
    2c1c:	str	r0, [r7, #56]	; 0x38
    2c20:	b	2814 <sfbpf_compile+0x5ac>
    2c24:	mvn	r0, #0
    2c28:	mov	r1, #24
    2c2c:	mov	r2, #1
    2c30:	str	r0, [r7, #56]	; 0x38
    2c34:	mov	r0, #0
    2c38:	b	2814 <sfbpf_compile+0x5ac>
    2c3c:	mov	r0, #27
    2c40:	mov	r1, #24
    2c44:	mov	r2, #23
    2c48:	mov	r3, #22
    2c4c:	str	r3, [r7, #72]	; 0x48
    2c50:	str	r2, [r7, #76]	; 0x4c
    2c54:	str	r1, [r7, #80]	; 0x50
    2c58:	str	r1, [r7, #84]	; 0x54
    2c5c:	str	r0, [r7, #88]	; 0x58
    2c60:	b	2794 <sfbpf_compile+0x52c>
    2c64:	ldr	r0, [pc, #68]	; 2cb0 <sfbpf_compile+0xa48>
    2c68:	mov	r1, r5
    2c6c:	add	r0, pc, r0
    2c70:	bl	214c <sf_bpf_error>
    2c74:	ldr	r0, [pc, #68]	; 2cc0 <sfbpf_compile+0xa58>
    2c78:	add	r0, pc, r0
    2c7c:	bl	214c <sf_bpf_error>
    2c80:	ldr	r0, [pc, #52]	; 2cbc <sfbpf_compile+0xa54>
    2c84:	add	r0, pc, r0
    2c88:	bl	214c <sf_bpf_error>
    2c8c:	.word	0x0004470c
    2c90:	.word	0x00044248
    2c94:	.word	0x000441f8
    2c98:	.word	0x00043de4
    2c9c:	.word	0x00043fbc
    2ca0:	.word	0x00026bdc
    2ca4:	.word	0x00043e40
    2ca8:	.word	0x00026b38
    2cac:	.word	0x00043cf0
    2cb0:	.word	0x00026e28
    2cb4:	.word	0x0004392c
    2cb8:	.word	0x00043e18
    2cbc:	.word	0x00026de0
    2cc0:	.word	0x000262d8

00002cc4 <freechunks>:
    2cc4:	push	{r4, r5, fp, lr}
    2cc8:	add	fp, sp, #8
    2ccc:	ldr	r0, [pc, #400]	; 2e64 <freechunks+0x1a0>
    2cd0:	mov	r5, #0
    2cd4:	add	r0, pc, r0
    2cd8:	str	r5, [r0, #92]	; 0x5c
    2cdc:	ldr	r4, [pc, #388]	; 2e68 <freechunks+0x1a4>
    2ce0:	add	r4, pc, r4
    2ce4:	ldr	r0, [r4, #4]
    2ce8:	cmp	r0, #0
    2cec:	beq	2cf8 <freechunks+0x34>
    2cf0:	bl	dbc <free@plt>
    2cf4:	str	r5, [r4, #4]
    2cf8:	ldr	r0, [r4, #12]
    2cfc:	cmp	r0, #0
    2d00:	beq	2d10 <freechunks+0x4c>
    2d04:	bl	dbc <free@plt>
    2d08:	mov	r0, #0
    2d0c:	str	r0, [r4, #12]
    2d10:	ldr	r0, [r4, #20]
    2d14:	cmp	r0, #0
    2d18:	beq	2d28 <freechunks+0x64>
    2d1c:	bl	dbc <free@plt>
    2d20:	mov	r0, #0
    2d24:	str	r0, [r4, #20]
    2d28:	ldr	r0, [r4, #28]
    2d2c:	cmp	r0, #0
    2d30:	beq	2d40 <freechunks+0x7c>
    2d34:	bl	dbc <free@plt>
    2d38:	mov	r0, #0
    2d3c:	str	r0, [r4, #28]
    2d40:	ldr	r0, [r4, #36]	; 0x24
    2d44:	cmp	r0, #0
    2d48:	beq	2d58 <freechunks+0x94>
    2d4c:	bl	dbc <free@plt>
    2d50:	mov	r0, #0
    2d54:	str	r0, [r4, #36]	; 0x24
    2d58:	ldr	r0, [r4, #44]	; 0x2c
    2d5c:	cmp	r0, #0
    2d60:	beq	2d70 <freechunks+0xac>
    2d64:	bl	dbc <free@plt>
    2d68:	mov	r0, #0
    2d6c:	str	r0, [r4, #44]	; 0x2c
    2d70:	ldr	r0, [r4, #52]	; 0x34
    2d74:	cmp	r0, #0
    2d78:	beq	2d88 <freechunks+0xc4>
    2d7c:	bl	dbc <free@plt>
    2d80:	mov	r0, #0
    2d84:	str	r0, [r4, #52]	; 0x34
    2d88:	ldr	r0, [r4, #60]	; 0x3c
    2d8c:	cmp	r0, #0
    2d90:	beq	2da0 <freechunks+0xdc>
    2d94:	bl	dbc <free@plt>
    2d98:	mov	r0, #0
    2d9c:	str	r0, [r4, #60]	; 0x3c
    2da0:	ldr	r0, [r4, #68]	; 0x44
    2da4:	cmp	r0, #0
    2da8:	beq	2db8 <freechunks+0xf4>
    2dac:	bl	dbc <free@plt>
    2db0:	mov	r0, #0
    2db4:	str	r0, [r4, #68]	; 0x44
    2db8:	ldr	r0, [r4, #76]	; 0x4c
    2dbc:	cmp	r0, #0
    2dc0:	beq	2dd0 <freechunks+0x10c>
    2dc4:	bl	dbc <free@plt>
    2dc8:	mov	r0, #0
    2dcc:	str	r0, [r4, #76]	; 0x4c
    2dd0:	ldr	r0, [r4, #84]	; 0x54
    2dd4:	cmp	r0, #0
    2dd8:	beq	2de8 <freechunks+0x124>
    2ddc:	bl	dbc <free@plt>
    2de0:	mov	r0, #0
    2de4:	str	r0, [r4, #84]	; 0x54
    2de8:	ldr	r0, [r4, #92]	; 0x5c
    2dec:	cmp	r0, #0
    2df0:	beq	2e00 <freechunks+0x13c>
    2df4:	bl	dbc <free@plt>
    2df8:	mov	r0, #0
    2dfc:	str	r0, [r4, #92]	; 0x5c
    2e00:	ldr	r0, [r4, #100]	; 0x64
    2e04:	cmp	r0, #0
    2e08:	beq	2e18 <freechunks+0x154>
    2e0c:	bl	dbc <free@plt>
    2e10:	mov	r0, #0
    2e14:	str	r0, [r4, #100]	; 0x64
    2e18:	ldr	r0, [r4, #108]	; 0x6c
    2e1c:	cmp	r0, #0
    2e20:	beq	2e30 <freechunks+0x16c>
    2e24:	bl	dbc <free@plt>
    2e28:	mov	r0, #0
    2e2c:	str	r0, [r4, #108]	; 0x6c
    2e30:	ldr	r0, [r4, #116]	; 0x74
    2e34:	cmp	r0, #0
    2e38:	beq	2e48 <freechunks+0x184>
    2e3c:	bl	dbc <free@plt>
    2e40:	mov	r0, #0
    2e44:	str	r0, [r4, #116]	; 0x74
    2e48:	ldr	r0, [r4, #124]	; 0x7c
    2e4c:	cmp	r0, #0
    2e50:	popeq	{r4, r5, fp, pc}
    2e54:	bl	dbc <free@plt>
    2e58:	mov	r0, #0
    2e5c:	str	r0, [r4, #124]	; 0x7c
    2e60:	pop	{r4, r5, fp, pc}
    2e64:	.word	0x0004380c
    2e68:	.word	0x00043740

00002e6c <syntax>:
    2e6c:	push	{fp, lr}
    2e70:	mov	fp, sp
    2e74:	ldr	r0, [pc, #4]	; 2e80 <syntax+0x14>
    2e78:	add	r0, pc, r0
    2e7c:	bl	214c <sf_bpf_error>
    2e80:	.word	0x00026bfa

00002e84 <sfbpf_freecode>:
    2e84:	push	{r4, r5, fp, lr}
    2e88:	add	fp, sp, #8
    2e8c:	mov	r5, #0
    2e90:	mov	r4, r0
    2e94:	str	r5, [r0]
    2e98:	ldr	r0, [r0, #4]
    2e9c:	cmp	r0, #0
    2ea0:	popeq	{r4, r5, fp, pc}
    2ea4:	bl	dbc <free@plt>
    2ea8:	str	r5, [r4, #4]
    2eac:	pop	{r4, r5, fp, pc}

00002eb0 <sf_finish_parse>:
    2eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2eb4:	add	fp, sp, #28
    2eb8:	sub	sp, sp, #28
    2ebc:	ldr	r9, [pc, #4064]	; 3ea4 <sf_finish_parse+0xff4>
    2ec0:	ldr	r4, [r0, #96]	; 0x60
    2ec4:	mov	sl, r0
    2ec8:	mov	r8, #0
    2ecc:	add	r9, pc, r9
    2ed0:	ldr	r3, [r9, #36]	; 0x24
    2ed4:	ldr	ip, [pc, #4044]	; 3ea8 <sf_finish_parse+0xff8>
    2ed8:	str	r4, [sp, #12]
    2edc:	cmp	r3, #162	; 0xa2
    2ee0:	add	ip, pc, ip
    2ee4:	str	r3, [sp, #16]
    2ee8:	bgt	2f74 <sf_finish_parse+0xc4>
    2eec:	cmp	r3, #119	; 0x77
    2ef0:	beq	2ffc <sf_finish_parse+0x14c>
    2ef4:	cmp	r3, #127	; 0x7f
    2ef8:	bne	3ee8 <sf_finish_parse+0x1038>
    2efc:	mov	r1, r9
    2f00:	ldr	r9, [r9, #96]	; 0x60
    2f04:	cmn	r9, #1
    2f08:	beq	30fc <sf_finish_parse+0x24c>
    2f0c:	ldr	r0, [r1, #92]	; 0x5c
    2f10:	mov	r6, ip
    2f14:	ldr	r5, [r6, r0, lsl #3]!
    2f18:	cmp	r5, #19
    2f1c:	bhi	3130 <sf_finish_parse+0x280>
    2f20:	add	r7, r0, #1
    2f24:	cmp	r0, #15
    2f28:	str	r7, [r1, #92]	; 0x5c
    2f2c:	bge	50a8 <sf_finish_parse+0x21f8>
    2f30:	mov	r0, #1024	; 0x400
    2f34:	lsl	r5, r0, r7
    2f38:	mov	r0, r5
    2f3c:	bl	e34 <malloc@plt>
    2f40:	cmp	r0, #0
    2f44:	str	r0, [r6, #12]
    2f48:	beq	50a8 <sf_finish_parse+0x21f8>
    2f4c:	mov	r1, #0
    2f50:	mov	r2, r5
    2f54:	add	r6, r6, #8
    2f58:	bl	ea0 <memset@plt>
    2f5c:	str	r5, [r6]
    2f60:	cmp	r5, #19
    2f64:	ldr	ip, [pc, #3904]	; 3eac <sf_finish_parse+0xffc>
    2f68:	add	ip, pc, ip
    2f6c:	bhi	3134 <sf_finish_parse+0x284>
    2f70:	b	50a8 <sf_finish_parse+0x21f8>
    2f74:	cmp	r3, #163	; 0xa3
    2f78:	beq	3084 <sf_finish_parse+0x1d4>
    2f7c:	cmp	r3, #192	; 0xc0
    2f80:	bne	3ee8 <sf_finish_parse+0x1038>
    2f84:	mov	r1, r9
    2f88:	ldr	r9, [r9, #96]	; 0x60
    2f8c:	cmn	r9, #1
    2f90:	beq	30fc <sf_finish_parse+0x24c>
    2f94:	ldr	r0, [r1, #92]	; 0x5c
    2f98:	mov	r6, ip
    2f9c:	ldr	r5, [r6, r0, lsl #3]!
    2fa0:	cmp	r5, #19
    2fa4:	bhi	31bc <sf_finish_parse+0x30c>
    2fa8:	add	r7, r0, #1
    2fac:	cmp	r0, #15
    2fb0:	str	r7, [r1, #92]	; 0x5c
    2fb4:	bge	50a8 <sf_finish_parse+0x21f8>
    2fb8:	mov	r0, #1024	; 0x400
    2fbc:	lsl	r5, r0, r7
    2fc0:	mov	r0, r5
    2fc4:	bl	e34 <malloc@plt>
    2fc8:	cmp	r0, #0
    2fcc:	str	r0, [r6, #12]
    2fd0:	beq	50a8 <sf_finish_parse+0x21f8>
    2fd4:	mov	r1, #0
    2fd8:	mov	r2, r5
    2fdc:	add	r6, r6, #8
    2fe0:	bl	ea0 <memset@plt>
    2fe4:	str	r5, [r6]
    2fe8:	cmp	r5, #19
    2fec:	ldr	ip, [pc, #4032]	; 3fb4 <sf_finish_parse+0x1104>
    2ff0:	add	ip, pc, ip
    2ff4:	bhi	31c0 <sf_finish_parse+0x310>
    2ff8:	b	50a8 <sf_finish_parse+0x21f8>
    2ffc:	ldr	r0, [pc, #4020]	; 3fb8 <sf_finish_parse+0x1108>
    3000:	ldr	r7, [r9, #96]	; 0x60
    3004:	mov	r1, #1
    3008:	add	r0, pc, r0
    300c:	cmn	r7, #1
    3010:	str	r1, [r0]
    3014:	beq	3118 <sf_finish_parse+0x268>
    3018:	ldr	r0, [r9, #92]	; 0x5c
    301c:	mov	r4, ip
    3020:	str	r7, [sp, #20]
    3024:	ldr	r5, [r4, r0, lsl #3]!
    3028:	cmp	r5, #19
    302c:	bhi	3248 <sf_finish_parse+0x398>
    3030:	add	r6, r0, #1
    3034:	cmp	r0, #15
    3038:	str	r6, [r9, #92]	; 0x5c
    303c:	bge	50a8 <sf_finish_parse+0x21f8>
    3040:	mov	r0, #1024	; 0x400
    3044:	lsl	r5, r0, r6
    3048:	mov	r0, r5
    304c:	bl	e34 <malloc@plt>
    3050:	cmp	r0, #0
    3054:	str	r0, [r4, #12]
    3058:	beq	50a8 <sf_finish_parse+0x21f8>
    305c:	mov	r1, #0
    3060:	mov	r2, r5
    3064:	add	r4, r4, #8
    3068:	bl	ea0 <memset@plt>
    306c:	str	r5, [r4]
    3070:	cmp	r5, #19
    3074:	ldr	ip, [pc, #4004]	; 4020 <sf_finish_parse+0x1170>
    3078:	add	ip, pc, ip
    307c:	bhi	324c <sf_finish_parse+0x39c>
    3080:	b	50a8 <sf_finish_parse+0x21f8>
    3084:	mov	r1, r9
    3088:	ldr	r9, [r9, #96]	; 0x60
    308c:	cmn	r9, #1
    3090:	beq	30fc <sf_finish_parse+0x24c>
    3094:	ldr	r0, [r1, #92]	; 0x5c
    3098:	mov	r6, ip
    309c:	ldr	r5, [r6, r0, lsl #3]!
    30a0:	cmp	r5, #19
    30a4:	bhi	32cc <sf_finish_parse+0x41c>
    30a8:	add	r7, r0, #1
    30ac:	cmp	r0, #15
    30b0:	str	r7, [r1, #92]	; 0x5c
    30b4:	bge	50a8 <sf_finish_parse+0x21f8>
    30b8:	mov	r0, #1024	; 0x400
    30bc:	lsl	r5, r0, r7
    30c0:	mov	r0, r5
    30c4:	bl	e34 <malloc@plt>
    30c8:	cmp	r0, #0
    30cc:	str	r0, [r6, #12]
    30d0:	beq	50a8 <sf_finish_parse+0x21f8>
    30d4:	mov	r1, #0
    30d8:	mov	r2, r5
    30dc:	add	r6, r6, #8
    30e0:	bl	ea0 <memset@plt>
    30e4:	str	r5, [r6]
    30e8:	cmp	r5, #19
    30ec:	ldr	ip, [pc, #4084]	; 40e8 <sf_finish_parse+0x1238>
    30f0:	add	ip, pc, ip
    30f4:	bhi	32d0 <sf_finish_parse+0x420>
    30f8:	b	50a8 <sf_finish_parse+0x21f8>
    30fc:	mov	r8, #0
    3100:	mov	r9, r1
    3104:	ldr	r0, [r9, #100]	; 0x64
    3108:	cmn	r0, #1
    310c:	str	r0, [sp, #20]
    3110:	bne	3f28 <sf_finish_parse+0x1078>
    3114:	b	4e28 <sf_finish_parse+0x1f78>
    3118:	mov	r8, #0
    311c:	ldr	r0, [r9, #100]	; 0x64
    3120:	cmn	r0, #1
    3124:	str	r0, [sp, #20]
    3128:	bne	3f28 <sf_finish_parse+0x1078>
    312c:	b	4e28 <sf_finish_parse+0x1f78>
    3130:	mov	r7, r0
    3134:	sub	r0, r5, #20
    3138:	mov	r1, #48	; 0x30
    313c:	mov	r4, ip
    3140:	str	r0, [r6]
    3144:	ldr	r8, [r6, #4]
    3148:	str	r1, [r8, r0]!
    314c:	mov	r0, #3
    3150:	str	r0, [r8, #12]
    3154:	ldr	r5, [r4, r7, lsl #3]!
    3158:	cmp	r5, #19
    315c:	bhi	3358 <sf_finish_parse+0x4a8>
    3160:	ldr	r0, [pc, #3972]	; 40ec <sf_finish_parse+0x123c>
    3164:	add	r6, r7, #1
    3168:	cmp	r7, #15
    316c:	add	r0, pc, r0
    3170:	str	r6, [r0, #92]	; 0x5c
    3174:	bge	50a8 <sf_finish_parse+0x21f8>
    3178:	mov	r0, #1024	; 0x400
    317c:	lsl	r5, r0, r6
    3180:	mov	r0, r5
    3184:	bl	e34 <malloc@plt>
    3188:	cmp	r0, #0
    318c:	str	r0, [r4, #12]
    3190:	beq	50a8 <sf_finish_parse+0x21f8>
    3194:	mov	r1, #0
    3198:	mov	r2, r5
    319c:	add	r4, r4, #8
    31a0:	bl	ea0 <memset@plt>
    31a4:	str	r5, [r4]
    31a8:	cmp	r5, #19
    31ac:	ldr	ip, [pc, #4056]	; 418c <sf_finish_parse+0x12dc>
    31b0:	add	ip, pc, ip
    31b4:	bhi	335c <sf_finish_parse+0x4ac>
    31b8:	b	50a8 <sf_finish_parse+0x21f8>
    31bc:	mov	r7, r0
    31c0:	sub	r0, r5, #20
    31c4:	mov	r1, #48	; 0x30
    31c8:	mov	r4, ip
    31cc:	str	r0, [r6]
    31d0:	ldr	r8, [r6, #4]
    31d4:	str	r1, [r8, r0]!
    31d8:	mov	r0, #3
    31dc:	str	r0, [r8, #12]
    31e0:	ldr	r5, [r4, r7, lsl #3]!
    31e4:	cmp	r5, #19
    31e8:	bhi	33fc <sf_finish_parse+0x54c>
    31ec:	ldr	r0, [pc, #3996]	; 4190 <sf_finish_parse+0x12e0>
    31f0:	add	r6, r7, #1
    31f4:	cmp	r7, #15
    31f8:	add	r0, pc, r0
    31fc:	str	r6, [r0, #92]	; 0x5c
    3200:	bge	50a8 <sf_finish_parse+0x21f8>
    3204:	mov	r0, #1024	; 0x400
    3208:	lsl	r5, r0, r6
    320c:	mov	r0, r5
    3210:	bl	e34 <malloc@plt>
    3214:	cmp	r0, #0
    3218:	str	r0, [r4, #12]
    321c:	beq	50a8 <sf_finish_parse+0x21f8>
    3220:	mov	r1, #0
    3224:	mov	r2, r5
    3228:	add	r4, r4, #8
    322c:	bl	ea0 <memset@plt>
    3230:	str	r5, [r4]
    3234:	cmp	r5, #19
    3238:	ldr	ip, [pc, #4080]	; 4230 <sf_finish_parse+0x1380>
    323c:	add	ip, pc, ip
    3240:	bhi	3400 <sf_finish_parse+0x550>
    3244:	b	50a8 <sf_finish_parse+0x21f8>
    3248:	mov	r6, r0
    324c:	sub	r0, r5, #20
    3250:	mov	r1, #32
    3254:	mov	r7, ip
    3258:	str	r0, [r4]
    325c:	ldr	r8, [r4, #4]
    3260:	str	r1, [r8, r0]!
    3264:	mov	r0, #0
    3268:	str	r0, [r8, #12]
    326c:	ldr	r5, [r7, r6, lsl #3]!
    3270:	cmp	r5, #19
    3274:	bhi	34a0 <sf_finish_parse+0x5f0>
    3278:	add	r4, r6, #1
    327c:	cmp	r6, #15
    3280:	str	r4, [r9, #92]	; 0x5c
    3284:	bge	50a8 <sf_finish_parse+0x21f8>
    3288:	mov	r0, #1024	; 0x400
    328c:	lsl	r5, r0, r4
    3290:	mov	r0, r5
    3294:	bl	e34 <malloc@plt>
    3298:	cmp	r0, #0
    329c:	str	r0, [r7, #12]
    32a0:	beq	50a8 <sf_finish_parse+0x21f8>
    32a4:	mov	r1, #0
    32a8:	mov	r2, r5
    32ac:	add	r7, r7, #8
    32b0:	bl	ea0 <memset@plt>
    32b4:	str	r5, [r7]
    32b8:	cmp	r5, #19
    32bc:	ldr	ip, [pc, #3952]	; 4234 <sf_finish_parse+0x1384>
    32c0:	add	ip, pc, ip
    32c4:	bhi	34a4 <sf_finish_parse+0x5f4>
    32c8:	b	50a8 <sf_finish_parse+0x21f8>
    32cc:	mov	r7, r0
    32d0:	sub	r0, r5, #20
    32d4:	mov	r1, #32
    32d8:	mov	r4, ip
    32dc:	str	r0, [r6]
    32e0:	ldr	r8, [r6, #4]
    32e4:	str	r1, [r8, r0]!
    32e8:	mov	r0, #4
    32ec:	str	r0, [r8, #12]
    32f0:	ldr	r5, [r4, r7, lsl #3]!
    32f4:	cmp	r5, #19
    32f8:	bhi	3540 <sf_finish_parse+0x690>
    32fc:	ldr	r0, [pc, #4048]	; 42d4 <sf_finish_parse+0x1424>
    3300:	add	r6, r7, #1
    3304:	cmp	r7, #15
    3308:	add	r0, pc, r0
    330c:	str	r6, [r0, #92]	; 0x5c
    3310:	bge	50a8 <sf_finish_parse+0x21f8>
    3314:	mov	r0, #1024	; 0x400
    3318:	lsl	r5, r0, r6
    331c:	mov	r0, r5
    3320:	bl	e34 <malloc@plt>
    3324:	cmp	r0, #0
    3328:	str	r0, [r4, #12]
    332c:	beq	50a8 <sf_finish_parse+0x21f8>
    3330:	mov	r1, #0
    3334:	mov	r2, r5
    3338:	add	r4, r4, #8
    333c:	bl	ea0 <memset@plt>
    3340:	str	r5, [r4]
    3344:	cmp	r5, #19
    3348:	ldr	ip, [pc, #3976]	; 42d8 <sf_finish_parse+0x1428>
    334c:	add	ip, pc, ip
    3350:	bhi	3544 <sf_finish_parse+0x694>
    3354:	b	50a8 <sf_finish_parse+0x21f8>
    3358:	mov	r6, r7
    335c:	sub	r1, r5, #20
    3360:	mov	r2, #100	; 0x64
    3364:	str	r1, [r4]
    3368:	ldr	r0, [r4, #4]
    336c:	str	r2, [r0, r1]!
    3370:	mov	r2, r8
    3374:	mov	r1, r2
    3378:	ldr	r2, [r2, #16]
    337c:	cmp	r2, #0
    3380:	bne	3374 <sf_finish_parse+0x4c4>
    3384:	str	r0, [r1, #16]
    3388:	mov	r1, #8
    338c:	mov	r4, ip
    3390:	str	r1, [r0, #12]
    3394:	ldr	r5, [r4, r6, lsl #3]!
    3398:	cmp	r5, #19
    339c:	bhi	3608 <sf_finish_parse+0x758>
    33a0:	ldr	r0, [pc, #4052]	; 437c <sf_finish_parse+0x14cc>
    33a4:	add	r7, r6, #1
    33a8:	cmp	r6, #15
    33ac:	add	r0, pc, r0
    33b0:	str	r7, [r0, #92]	; 0x5c
    33b4:	bge	50a8 <sf_finish_parse+0x21f8>
    33b8:	mov	r0, #1024	; 0x400
    33bc:	lsl	r5, r0, r7
    33c0:	mov	r0, r5
    33c4:	bl	e34 <malloc@plt>
    33c8:	cmp	r0, #0
    33cc:	str	r0, [r4, #12]
    33d0:	beq	50a8 <sf_finish_parse+0x21f8>
    33d4:	mov	r1, #0
    33d8:	mov	r2, r5
    33dc:	add	r4, r4, #8
    33e0:	bl	ea0 <memset@plt>
    33e4:	str	r5, [r4]
    33e8:	cmp	r5, #19
    33ec:	ldr	ip, [pc, #3980]	; 4380 <sf_finish_parse+0x14d0>
    33f0:	add	ip, pc, ip
    33f4:	bhi	360c <sf_finish_parse+0x75c>
    33f8:	b	50a8 <sf_finish_parse+0x21f8>
    33fc:	mov	r6, r7
    3400:	sub	r1, r5, #20
    3404:	mov	r2, #100	; 0x64
    3408:	str	r1, [r4]
    340c:	ldr	r0, [r4, #4]
    3410:	str	r2, [r0, r1]!
    3414:	mov	r2, r8
    3418:	mov	r1, r2
    341c:	ldr	r2, [r2, #16]
    3420:	cmp	r2, #0
    3424:	bne	3418 <sf_finish_parse+0x568>
    3428:	str	r0, [r1, #16]
    342c:	mov	r1, #8
    3430:	mov	r4, ip
    3434:	str	r1, [r0, #12]
    3438:	ldr	r5, [r4, r6, lsl #3]!
    343c:	cmp	r5, #19
    3440:	bhi	36a4 <sf_finish_parse+0x7f4>
    3444:	ldr	r0, [pc, #4072]	; 4434 <sf_finish_parse+0x1584>
    3448:	add	r7, r6, #1
    344c:	cmp	r6, #15
    3450:	add	r0, pc, r0
    3454:	str	r7, [r0, #92]	; 0x5c
    3458:	bge	50a8 <sf_finish_parse+0x21f8>
    345c:	mov	r0, #1024	; 0x400
    3460:	lsl	r5, r0, r7
    3464:	mov	r0, r5
    3468:	bl	e34 <malloc@plt>
    346c:	cmp	r0, #0
    3470:	str	r0, [r4, #12]
    3474:	beq	50a8 <sf_finish_parse+0x21f8>
    3478:	mov	r1, #0
    347c:	mov	r2, r5
    3480:	add	r4, r4, #8
    3484:	bl	ea0 <memset@plt>
    3488:	str	r5, [r4]
    348c:	cmp	r5, #19
    3490:	ldr	ip, [pc, #4000]	; 4438 <sf_finish_parse+0x1588>
    3494:	add	ip, pc, ip
    3498:	bhi	36a8 <sf_finish_parse+0x7f8>
    349c:	b	50a8 <sf_finish_parse+0x21f8>
    34a0:	mov	r4, r6
    34a4:	sub	r1, r5, #20
    34a8:	mov	r2, #84	; 0x54
    34ac:	str	r1, [r7]
    34b0:	ldr	r0, [r7, #4]
    34b4:	str	r2, [r0, r1]!
    34b8:	movw	r1, #61440	; 0xf000
    34bc:	mov	r2, r8
    34c0:	movt	r1, #65535	; 0xffff
    34c4:	str	r1, [r0, #12]
    34c8:	mov	r1, r2
    34cc:	ldr	r2, [r2, #16]
    34d0:	cmp	r2, #0
    34d4:	bne	34c8 <sf_finish_parse+0x618>
    34d8:	str	r0, [r1, #16]
    34dc:	mov	r6, ip
    34e0:	ldr	r5, [r6, r4, lsl #3]!
    34e4:	cmp	r5, #19
    34e8:	bhi	3740 <sf_finish_parse+0x890>
    34ec:	add	r7, r4, #1
    34f0:	cmp	r4, #15
    34f4:	str	r7, [r9, #92]	; 0x5c
    34f8:	bge	50a8 <sf_finish_parse+0x21f8>
    34fc:	mov	r0, #1024	; 0x400
    3500:	lsl	r5, r0, r7
    3504:	mov	r0, r5
    3508:	bl	e34 <malloc@plt>
    350c:	cmp	r0, #0
    3510:	str	r0, [r6, #12]
    3514:	beq	50a8 <sf_finish_parse+0x21f8>
    3518:	mov	r1, #0
    351c:	mov	r2, r5
    3520:	add	r6, r6, #8
    3524:	bl	ea0 <memset@plt>
    3528:	str	r5, [r6]
    352c:	cmp	r5, #19
    3530:	ldr	ip, [pc, #4016]	; 44e8 <sf_finish_parse+0x1638>
    3534:	add	ip, pc, ip
    3538:	bhi	3744 <sf_finish_parse+0x894>
    353c:	b	50a8 <sf_finish_parse+0x21f8>
    3540:	mov	r6, r7
    3544:	sub	r1, r5, #20
    3548:	mov	r2, #2
    354c:	str	r1, [r4]
    3550:	ldr	r0, [r4, #4]
    3554:	str	r2, [r0, r1]!
    3558:	mov	r2, r8
    355c:	str	r9, [r0, #12]
    3560:	mov	r1, r2
    3564:	ldr	r2, [r2, #16]
    3568:	cmp	r2, #0
    356c:	bne	3560 <sf_finish_parse+0x6b0>
    3570:	str	r0, [r1, #16]
    3574:	mov	r4, ip
    3578:	ldr	r5, [r4, r6, lsl #3]!
    357c:	ldr	r9, [pc, #3944]	; 44ec <sf_finish_parse+0x163c>
    3580:	add	r9, pc, r9
    3584:	cmp	r5, #19
    3588:	bhi	35dc <sf_finish_parse+0x72c>
    358c:	add	r0, r6, #1
    3590:	cmp	r6, #15
    3594:	str	r0, [r9, #92]	; 0x5c
    3598:	bge	50a8 <sf_finish_parse+0x21f8>
    359c:	mov	r1, #1024	; 0x400
    35a0:	lsl	r5, r1, r0
    35a4:	mov	r0, r5
    35a8:	bl	e34 <malloc@plt>
    35ac:	cmp	r0, #0
    35b0:	str	r0, [r4, #12]
    35b4:	beq	50a8 <sf_finish_parse+0x21f8>
    35b8:	mov	r1, #0
    35bc:	mov	r2, r5
    35c0:	add	r4, r4, #8
    35c4:	bl	ea0 <memset@plt>
    35c8:	str	r5, [r4]
    35cc:	cmp	r5, #19
    35d0:	ldr	ip, [pc, #4032]	; 4598 <sf_finish_parse+0x16e8>
    35d4:	add	ip, pc, ip
    35d8:	bls	50a8 <sf_finish_parse+0x21f8>
    35dc:	sub	r1, r5, #20
    35e0:	mov	r2, #7
    35e4:	str	r1, [r4]
    35e8:	ldr	r0, [r4, #4]
    35ec:	str	r2, [r0, r1]!
    35f0:	mov	r2, r8
    35f4:	mov	r1, r2
    35f8:	ldr	r2, [r2, #16]
    35fc:	cmp	r2, #0
    3600:	bne	35f4 <sf_finish_parse+0x744>
    3604:	b	3d48 <sf_finish_parse+0xe98>
    3608:	mov	r7, r6
    360c:	sub	r1, r5, #20
    3610:	mov	r2, #7
    3614:	str	r1, [r4]
    3618:	ldr	r0, [r4, #4]
    361c:	str	r2, [r0, r1]!
    3620:	mov	r2, r8
    3624:	mov	r1, r2
    3628:	ldr	r2, [r2, #16]
    362c:	cmp	r2, #0
    3630:	bne	3624 <sf_finish_parse+0x774>
    3634:	str	r0, [r1, #16]
    3638:	mov	r4, ip
    363c:	ldr	r5, [r4, r7, lsl #3]!
    3640:	cmp	r5, #19
    3644:	bhi	37e8 <sf_finish_parse+0x938>
    3648:	ldr	r0, [pc, #4080]	; 4640 <sf_finish_parse+0x1790>
    364c:	add	r6, r7, #1
    3650:	cmp	r7, #15
    3654:	add	r0, pc, r0
    3658:	str	r6, [r0, #92]	; 0x5c
    365c:	bge	50a8 <sf_finish_parse+0x21f8>
    3660:	mov	r0, #1024	; 0x400
    3664:	lsl	r5, r0, r6
    3668:	mov	r0, r5
    366c:	bl	e34 <malloc@plt>
    3670:	cmp	r0, #0
    3674:	str	r0, [r4, #12]
    3678:	beq	50a8 <sf_finish_parse+0x21f8>
    367c:	mov	r1, #0
    3680:	mov	r2, r5
    3684:	add	r4, r4, #8
    3688:	bl	ea0 <memset@plt>
    368c:	str	r5, [r4]
    3690:	cmp	r5, #19
    3694:	ldr	ip, [pc, #4008]	; 4644 <sf_finish_parse+0x1794>
    3698:	add	ip, pc, ip
    369c:	bhi	37ec <sf_finish_parse+0x93c>
    36a0:	b	50a8 <sf_finish_parse+0x21f8>
    36a4:	mov	r7, r6
    36a8:	sub	r1, r5, #20
    36ac:	mov	r2, #7
    36b0:	str	r1, [r4]
    36b4:	ldr	r0, [r4, #4]
    36b8:	str	r2, [r0, r1]!
    36bc:	mov	r2, r8
    36c0:	mov	r1, r2
    36c4:	ldr	r2, [r2, #16]
    36c8:	cmp	r2, #0
    36cc:	bne	36c0 <sf_finish_parse+0x810>
    36d0:	str	r0, [r1, #16]
    36d4:	mov	r4, ip
    36d8:	ldr	r5, [r4, r7, lsl #3]!
    36dc:	cmp	r5, #19
    36e0:	bhi	388c <sf_finish_parse+0x9dc>
    36e4:	ldr	r0, [pc, #3932]	; 4648 <sf_finish_parse+0x1798>
    36e8:	add	r6, r7, #1
    36ec:	cmp	r7, #15
    36f0:	add	r0, pc, r0
    36f4:	str	r6, [r0, #92]	; 0x5c
    36f8:	bge	50a8 <sf_finish_parse+0x21f8>
    36fc:	mov	r0, #1024	; 0x400
    3700:	lsl	r5, r0, r6
    3704:	mov	r0, r5
    3708:	bl	e34 <malloc@plt>
    370c:	cmp	r0, #0
    3710:	str	r0, [r4, #12]
    3714:	beq	50a8 <sf_finish_parse+0x21f8>
    3718:	mov	r1, #0
    371c:	mov	r2, r5
    3720:	add	r4, r4, #8
    3724:	bl	ea0 <memset@plt>
    3728:	str	r5, [r4]
    372c:	cmp	r5, #19
    3730:	ldr	ip, [pc, #4056]	; 4710 <sf_finish_parse+0x1860>
    3734:	add	ip, pc, ip
    3738:	bhi	3890 <sf_finish_parse+0x9e0>
    373c:	b	50a8 <sf_finish_parse+0x21f8>
    3740:	mov	r7, r4
    3744:	sub	r0, r5, #20
    3748:	mov	r1, #21
    374c:	str	r0, [r6]
    3750:	ldr	r3, [r6, #4]
    3754:	str	r1, [r3, r0]!
    3758:	movw	r0, #4096	; 0x1000
    375c:	mov	r1, r8
    3760:	movt	r0, #32801	; 0x8021
    3764:	str	r0, [r3, #12]
    3768:	mov	r0, r1
    376c:	ldr	r1, [r1, #16]
    3770:	cmp	r1, #0
    3774:	bne	3768 <sf_finish_parse+0x8b8>
    3778:	str	r3, [r0, #16]
    377c:	mov	r4, ip
    3780:	str	r3, [sp, #8]
    3784:	ldr	r5, [r4, r7, lsl #3]!
    3788:	cmp	r5, #19
    378c:	bhi	3930 <sf_finish_parse+0xa80>
    3790:	add	r6, r7, #1
    3794:	cmp	r7, #15
    3798:	str	r6, [r9, #92]	; 0x5c
    379c:	bge	50a8 <sf_finish_parse+0x21f8>
    37a0:	mov	r0, #1024	; 0x400
    37a4:	lsl	r5, r0, r6
    37a8:	mov	r0, r5
    37ac:	bl	e34 <malloc@plt>
    37b0:	cmp	r0, #0
    37b4:	str	r0, [r4, #12]
    37b8:	beq	50a8 <sf_finish_parse+0x21f8>
    37bc:	mov	r1, #0
    37c0:	mov	r2, r5
    37c4:	add	r4, r4, #8
    37c8:	bl	ea0 <memset@plt>
    37cc:	str	r5, [r4]
    37d0:	cmp	r5, #19
    37d4:	ldr	ip, [pc, #4064]	; 47bc <sf_finish_parse+0x190c>
    37d8:	ldr	r3, [sp, #8]
    37dc:	add	ip, pc, ip
    37e0:	bhi	3934 <sf_finish_parse+0xa84>
    37e4:	b	50a8 <sf_finish_parse+0x21f8>
    37e8:	mov	r6, r7
    37ec:	sub	r1, r5, #20
    37f0:	mov	r2, #48	; 0x30
    37f4:	str	r1, [r4]
    37f8:	ldr	r0, [r4, #4]
    37fc:	str	r2, [r0, r1]!
    3800:	mov	r2, r8
    3804:	mov	r1, r2
    3808:	ldr	r2, [r2, #16]
    380c:	cmp	r2, #0
    3810:	bne	3804 <sf_finish_parse+0x954>
    3814:	str	r0, [r1, #16]
    3818:	mov	r1, #2
    381c:	mov	r4, ip
    3820:	str	r1, [r0, #12]
    3824:	ldr	r5, [r4, r6, lsl #3]!
    3828:	cmp	r5, #19
    382c:	bhi	39d8 <sf_finish_parse+0xb28>
    3830:	ldr	r0, [pc, #3976]	; 47c0 <sf_finish_parse+0x1910>
    3834:	add	r7, r6, #1
    3838:	cmp	r6, #15
    383c:	add	r0, pc, r0
    3840:	str	r7, [r0, #92]	; 0x5c
    3844:	bge	50a8 <sf_finish_parse+0x21f8>
    3848:	mov	r0, #1024	; 0x400
    384c:	lsl	r5, r0, r7
    3850:	mov	r0, r5
    3854:	bl	e34 <malloc@plt>
    3858:	cmp	r0, #0
    385c:	str	r0, [r4, #12]
    3860:	beq	50a8 <sf_finish_parse+0x21f8>
    3864:	mov	r1, #0
    3868:	mov	r2, r5
    386c:	add	r4, r4, #8
    3870:	bl	ea0 <memset@plt>
    3874:	str	r5, [r4]
    3878:	cmp	r5, #19
    387c:	ldr	ip, [pc, #4084]	; 4878 <sf_finish_parse+0x19c8>
    3880:	add	ip, pc, ip
    3884:	bhi	39dc <sf_finish_parse+0xb2c>
    3888:	b	50a8 <sf_finish_parse+0x21f8>
    388c:	mov	r6, r7
    3890:	sub	r1, r5, #20
    3894:	mov	r2, #48	; 0x30
    3898:	str	r1, [r4]
    389c:	ldr	r0, [r4, #4]
    38a0:	str	r2, [r0, r1]!
    38a4:	mov	r2, r8
    38a8:	mov	r1, r2
    38ac:	ldr	r2, [r2, #16]
    38b0:	cmp	r2, #0
    38b4:	bne	38a8 <sf_finish_parse+0x9f8>
    38b8:	str	r0, [r1, #16]
    38bc:	mov	r1, #2
    38c0:	mov	r4, ip
    38c4:	str	r1, [r0, #12]
    38c8:	ldr	r5, [r4, r6, lsl #3]!
    38cc:	cmp	r5, #19
    38d0:	bhi	3a74 <sf_finish_parse+0xbc4>
    38d4:	ldr	r0, [pc, #4000]	; 487c <sf_finish_parse+0x19cc>
    38d8:	add	r7, r6, #1
    38dc:	cmp	r6, #15
    38e0:	add	r0, pc, r0
    38e4:	str	r7, [r0, #92]	; 0x5c
    38e8:	bge	50a8 <sf_finish_parse+0x21f8>
    38ec:	mov	r0, #1024	; 0x400
    38f0:	lsl	r5, r0, r7
    38f4:	mov	r0, r5
    38f8:	bl	e34 <malloc@plt>
    38fc:	cmp	r0, #0
    3900:	str	r0, [r4, #12]
    3904:	beq	50a8 <sf_finish_parse+0x21f8>
    3908:	mov	r1, #0
    390c:	mov	r2, r5
    3910:	add	r4, r4, #8
    3914:	bl	ea0 <memset@plt>
    3918:	str	r5, [r4]
    391c:	cmp	r5, #19
    3920:	ldr	ip, [pc, #3928]	; 4880 <sf_finish_parse+0x19d0>
    3924:	add	ip, pc, ip
    3928:	bhi	3a78 <sf_finish_parse+0xbc8>
    392c:	b	50a8 <sf_finish_parse+0x21f8>
    3930:	mov	r6, r7
    3934:	sub	r1, r5, #20
    3938:	mov	r2, #32
    393c:	str	r1, [r4]
    3940:	ldr	r0, [r4, #4]
    3944:	str	r2, [r0, r1]!
    3948:	mov	r1, #4
    394c:	mov	r2, r8
    3950:	str	r1, [r0, #12]
    3954:	mov	r1, r2
    3958:	ldr	r2, [r2, #16]
    395c:	cmp	r2, #0
    3960:	bne	3954 <sf_finish_parse+0xaa4>
    3964:	str	r0, [r1, #16]
    3968:	str	r0, [r3, #4]
    396c:	mov	r7, ip
    3970:	str	sl, [sp, #4]
    3974:	ldr	r5, [r7, r6, lsl #3]!
    3978:	cmp	r5, #19
    397c:	bhi	3b10 <sf_finish_parse+0xc60>
    3980:	add	r4, r6, #1
    3984:	cmp	r6, #15
    3988:	str	r4, [r9, #92]	; 0x5c
    398c:	bge	50a8 <sf_finish_parse+0x21f8>
    3990:	mov	r0, #1024	; 0x400
    3994:	lsl	r5, r0, r4
    3998:	mov	r0, r5
    399c:	bl	e34 <malloc@plt>
    39a0:	cmp	r0, #0
    39a4:	str	r0, [r7, #12]
    39a8:	beq	50a8 <sf_finish_parse+0x21f8>
    39ac:	mov	r1, #0
    39b0:	mov	r2, r5
    39b4:	add	r7, r7, #8
    39b8:	bl	ea0 <memset@plt>
    39bc:	str	r5, [r7]
    39c0:	cmp	r5, #19
    39c4:	ldr	ip, [pc, #3936]	; 492c <sf_finish_parse+0x1a7c>
    39c8:	ldr	r3, [sp, #8]
    39cc:	add	ip, pc, ip
    39d0:	bhi	3b14 <sf_finish_parse+0xc64>
    39d4:	b	50a8 <sf_finish_parse+0x21f8>
    39d8:	mov	r7, r6
    39dc:	sub	r1, r5, #20
    39e0:	mov	r2, #76	; 0x4c
    39e4:	str	r1, [r4]
    39e8:	ldr	r0, [r4, #4]
    39ec:	str	r2, [r0, r1]!
    39f0:	mov	r2, r8
    39f4:	mov	r1, r2
    39f8:	ldr	r2, [r2, #16]
    39fc:	cmp	r2, #0
    3a00:	bne	39f4 <sf_finish_parse+0xb44>
    3a04:	str	r0, [r1, #16]
    3a08:	mov	r4, ip
    3a0c:	ldr	r5, [r4, r7, lsl #3]!
    3a10:	cmp	r5, #19
    3a14:	bhi	3bbc <sf_finish_parse+0xd0c>
    3a18:	ldr	r0, [pc, #4016]	; 49d0 <sf_finish_parse+0x1b20>
    3a1c:	add	r6, r7, #1
    3a20:	cmp	r7, #15
    3a24:	add	r0, pc, r0
    3a28:	str	r6, [r0, #92]	; 0x5c
    3a2c:	bge	50a8 <sf_finish_parse+0x21f8>
    3a30:	mov	r0, #1024	; 0x400
    3a34:	lsl	r5, r0, r6
    3a38:	mov	r0, r5
    3a3c:	bl	e34 <malloc@plt>
    3a40:	cmp	r0, #0
    3a44:	str	r0, [r4, #12]
    3a48:	beq	50a8 <sf_finish_parse+0x21f8>
    3a4c:	mov	r1, #0
    3a50:	mov	r2, r5
    3a54:	add	r4, r4, #8
    3a58:	bl	ea0 <memset@plt>
    3a5c:	str	r5, [r4]
    3a60:	cmp	r5, #19
    3a64:	ldr	ip, [pc, #3944]	; 49d4 <sf_finish_parse+0x1b24>
    3a68:	add	ip, pc, ip
    3a6c:	bhi	3bc0 <sf_finish_parse+0xd10>
    3a70:	b	50a8 <sf_finish_parse+0x21f8>
    3a74:	mov	r7, r6
    3a78:	sub	r1, r5, #20
    3a7c:	mov	r2, #76	; 0x4c
    3a80:	str	r1, [r4]
    3a84:	ldr	r0, [r4, #4]
    3a88:	str	r2, [r0, r1]!
    3a8c:	mov	r2, r8
    3a90:	mov	r1, r2
    3a94:	ldr	r2, [r2, #16]
    3a98:	cmp	r2, #0
    3a9c:	bne	3a90 <sf_finish_parse+0xbe0>
    3aa0:	str	r0, [r1, #16]
    3aa4:	mov	r4, ip
    3aa8:	ldr	r5, [r4, r7, lsl #3]!
    3aac:	cmp	r5, #19
    3ab0:	bhi	3c84 <sf_finish_parse+0xdd4>
    3ab4:	ldr	r0, [pc, #4028]	; 4a78 <sf_finish_parse+0x1bc8>
    3ab8:	add	r6, r7, #1
    3abc:	cmp	r7, #15
    3ac0:	add	r0, pc, r0
    3ac4:	str	r6, [r0, #92]	; 0x5c
    3ac8:	bge	50a8 <sf_finish_parse+0x21f8>
    3acc:	mov	r0, #1024	; 0x400
    3ad0:	lsl	r5, r0, r6
    3ad4:	mov	r0, r5
    3ad8:	bl	e34 <malloc@plt>
    3adc:	cmp	r0, #0
    3ae0:	str	r0, [r4, #12]
    3ae4:	beq	50a8 <sf_finish_parse+0x21f8>
    3ae8:	mov	r1, #0
    3aec:	mov	r2, r5
    3af0:	add	r4, r4, #8
    3af4:	bl	ea0 <memset@plt>
    3af8:	str	r5, [r4]
    3afc:	cmp	r5, #19
    3b00:	ldr	ip, [pc, #3956]	; 4a7c <sf_finish_parse+0x1bcc>
    3b04:	add	ip, pc, ip
    3b08:	bhi	3c88 <sf_finish_parse+0xdd8>
    3b0c:	b	50a8 <sf_finish_parse+0x21f8>
    3b10:	mov	r4, r6
    3b14:	sub	r0, r5, #20
    3b18:	mov	r1, #5
    3b1c:	str	r0, [r7]
    3b20:	ldr	sl, [r7, #4]
    3b24:	str	r1, [sl, r0]!
    3b28:	mov	r0, #1
    3b2c:	mov	r1, r8
    3b30:	str	r0, [sl, #12]
    3b34:	mov	r0, r1
    3b38:	ldr	r1, [r1, #16]
    3b3c:	cmp	r1, #0
    3b40:	bne	3b34 <sf_finish_parse+0xc84>
    3b44:	str	sl, [r0, #16]
    3b48:	mov	r9, ip
    3b4c:	ldr	r5, [r9, r4, lsl #3]!
    3b50:	cmp	r5, #19
    3b54:	bhi	3d54 <sf_finish_parse+0xea4>
    3b58:	ldr	r0, [pc, #4032]	; 4b20 <sf_finish_parse+0x1c70>
    3b5c:	add	r7, r4, #1
    3b60:	cmp	r4, #15
    3b64:	add	r0, pc, r0
    3b68:	str	r7, [r0, #92]	; 0x5c
    3b6c:	bge	50a8 <sf_finish_parse+0x21f8>
    3b70:	mov	r0, #1024	; 0x400
    3b74:	mov	r6, r3
    3b78:	lsl	r5, r0, r7
    3b7c:	mov	r0, r5
    3b80:	bl	e34 <malloc@plt>
    3b84:	cmp	r0, #0
    3b88:	str	r0, [r9, #12]
    3b8c:	beq	50a8 <sf_finish_parse+0x21f8>
    3b90:	mov	r1, #0
    3b94:	mov	r2, r5
    3b98:	add	r9, r9, #8
    3b9c:	bl	ea0 <memset@plt>
    3ba0:	str	r5, [r9]
    3ba4:	cmp	r5, #19
    3ba8:	mov	r3, r6
    3bac:	ldr	ip, [pc, #3952]	; 4b24 <sf_finish_parse+0x1c74>
    3bb0:	add	ip, pc, ip
    3bb4:	bhi	3d58 <sf_finish_parse+0xea8>
    3bb8:	b	50a8 <sf_finish_parse+0x21f8>
    3bbc:	mov	r6, r7
    3bc0:	sub	r1, r5, #20
    3bc4:	mov	r2, #2
    3bc8:	str	r1, [r4]
    3bcc:	ldr	r0, [r4, #4]
    3bd0:	str	r2, [r0, r1]!
    3bd4:	mov	r2, r8
    3bd8:	str	r9, [r0, #12]
    3bdc:	mov	r1, r2
    3be0:	ldr	r2, [r2, #16]
    3be4:	cmp	r2, #0
    3be8:	bne	3bdc <sf_finish_parse+0xd2c>
    3bec:	str	r0, [r1, #16]
    3bf0:	mov	r4, ip
    3bf4:	ldr	r5, [r4, r6, lsl #3]!
    3bf8:	ldr	r9, [pc, #4036]	; 4bc4 <sf_finish_parse+0x1d14>
    3bfc:	add	r9, pc, r9
    3c00:	cmp	r5, #19
    3c04:	bhi	3c58 <sf_finish_parse+0xda8>
    3c08:	add	r0, r6, #1
    3c0c:	cmp	r6, #15
    3c10:	str	r0, [r9, #92]	; 0x5c
    3c14:	bge	50a8 <sf_finish_parse+0x21f8>
    3c18:	mov	r1, #1024	; 0x400
    3c1c:	lsl	r5, r1, r0
    3c20:	mov	r0, r5
    3c24:	bl	e34 <malloc@plt>
    3c28:	cmp	r0, #0
    3c2c:	str	r0, [r4, #12]
    3c30:	beq	50a8 <sf_finish_parse+0x21f8>
    3c34:	mov	r1, #0
    3c38:	mov	r2, r5
    3c3c:	add	r4, r4, #8
    3c40:	bl	ea0 <memset@plt>
    3c44:	str	r5, [r4]
    3c48:	cmp	r5, #19
    3c4c:	ldr	ip, [pc, #3956]	; 4bc8 <sf_finish_parse+0x1d18>
    3c50:	add	ip, pc, ip
    3c54:	bls	50a8 <sf_finish_parse+0x21f8>
    3c58:	sub	r1, r5, #20
    3c5c:	mov	r2, #7
    3c60:	str	r1, [r4]
    3c64:	ldr	r0, [r4, #4]
    3c68:	str	r2, [r0, r1]!
    3c6c:	mov	r2, r8
    3c70:	mov	r1, r2
    3c74:	ldr	r2, [r2, #16]
    3c78:	cmp	r2, #0
    3c7c:	bne	3c70 <sf_finish_parse+0xdc0>
    3c80:	b	3d48 <sf_finish_parse+0xe98>
    3c84:	mov	r6, r7
    3c88:	sub	r1, r5, #20
    3c8c:	mov	r2, #2
    3c90:	str	r1, [r4]
    3c94:	ldr	r0, [r4, #4]
    3c98:	str	r2, [r0, r1]!
    3c9c:	mov	r2, r8
    3ca0:	str	r9, [r0, #12]
    3ca4:	mov	r1, r2
    3ca8:	ldr	r2, [r2, #16]
    3cac:	cmp	r2, #0
    3cb0:	bne	3ca4 <sf_finish_parse+0xdf4>
    3cb4:	str	r0, [r1, #16]
    3cb8:	mov	r4, ip
    3cbc:	ldr	r5, [r4, r6, lsl #3]!
    3cc0:	ldr	r9, [pc, #4008]	; 4c70 <sf_finish_parse+0x1dc0>
    3cc4:	add	r9, pc, r9
    3cc8:	cmp	r5, #19
    3ccc:	bhi	3d20 <sf_finish_parse+0xe70>
    3cd0:	add	r0, r6, #1
    3cd4:	cmp	r6, #15
    3cd8:	str	r0, [r9, #92]	; 0x5c
    3cdc:	bge	50a8 <sf_finish_parse+0x21f8>
    3ce0:	mov	r1, #1024	; 0x400
    3ce4:	lsl	r5, r1, r0
    3ce8:	mov	r0, r5
    3cec:	bl	e34 <malloc@plt>
    3cf0:	cmp	r0, #0
    3cf4:	str	r0, [r4, #12]
    3cf8:	beq	50a8 <sf_finish_parse+0x21f8>
    3cfc:	mov	r1, #0
    3d00:	mov	r2, r5
    3d04:	add	r4, r4, #8
    3d08:	bl	ea0 <memset@plt>
    3d0c:	str	r5, [r4]
    3d10:	cmp	r5, #19
    3d14:	ldr	ip, [pc, #4092]	; 4d18 <sf_finish_parse+0x1e68>
    3d18:	add	ip, pc, ip
    3d1c:	bls	50a8 <sf_finish_parse+0x21f8>
    3d20:	sub	r1, r5, #20
    3d24:	mov	r2, #7
    3d28:	str	r1, [r4]
    3d2c:	ldr	r0, [r4, #4]
    3d30:	str	r2, [r0, r1]!
    3d34:	mov	r2, r8
    3d38:	mov	r1, r2
    3d3c:	ldr	r2, [r2, #16]
    3d40:	cmp	r2, #0
    3d44:	bne	3d38 <sf_finish_parse+0xe88>
    3d48:	ldr	r3, [sp, #16]
    3d4c:	ldr	r4, [sp, #12]
    3d50:	b	3ee4 <sf_finish_parse+0x1034>
    3d54:	mov	r7, r4
    3d58:	sub	r1, r5, #20
    3d5c:	mov	r2, #0
    3d60:	str	r1, [r9]
    3d64:	ldr	r0, [r9, #4]
    3d68:	str	r2, [r0, r1]!
    3d6c:	mov	r1, #144	; 0x90
    3d70:	mov	r2, r8
    3d74:	str	r1, [r0, #12]
    3d78:	mov	r1, r2
    3d7c:	ldr	r2, [r2, #16]
    3d80:	cmp	r2, #0
    3d84:	bne	3d78 <sf_finish_parse+0xec8>
    3d88:	str	r0, [r1, #16]
    3d8c:	str	r0, [r3, #8]
    3d90:	mov	r6, ip
    3d94:	ldr	r5, [r6, r7, lsl #3]!
    3d98:	ldr	r9, [pc, #3964]	; 4d1c <sf_finish_parse+0x1e6c>
    3d9c:	add	r9, pc, r9
    3da0:	cmp	r5, #19
    3da4:	bhi	3dfc <sf_finish_parse+0xf4c>
    3da8:	add	r4, r7, #1
    3dac:	cmp	r7, #15
    3db0:	str	r4, [r9, #92]	; 0x5c
    3db4:	bge	50a8 <sf_finish_parse+0x21f8>
    3db8:	mov	r0, #1024	; 0x400
    3dbc:	lsl	r5, r0, r4
    3dc0:	mov	r0, r5
    3dc4:	bl	e34 <malloc@plt>
    3dc8:	cmp	r0, #0
    3dcc:	str	r0, [r6, #12]
    3dd0:	beq	50a8 <sf_finish_parse+0x21f8>
    3dd4:	mov	r1, #0
    3dd8:	mov	r2, r5
    3ddc:	add	r6, r6, #8
    3de0:	bl	ea0 <memset@plt>
    3de4:	str	r5, [r6]
    3de8:	cmp	r5, #19
    3dec:	ldr	ip, [pc, #3884]	; 4d20 <sf_finish_parse+0x1e70>
    3df0:	add	ip, pc, ip
    3df4:	bhi	3e00 <sf_finish_parse+0xf50>
    3df8:	b	50a8 <sf_finish_parse+0x21f8>
    3dfc:	mov	r4, r7
    3e00:	sub	r1, r5, #20
    3e04:	mov	r2, #2
    3e08:	str	r1, [r6]
    3e0c:	ldr	r0, [r6, #4]
    3e10:	str	r2, [r0, r1]!
    3e14:	mov	r2, r8
    3e18:	ldr	r1, [sp, #20]
    3e1c:	str	r1, [r0, #12]
    3e20:	mov	r1, r2
    3e24:	ldr	r2, [r2, #16]
    3e28:	cmp	r2, #0
    3e2c:	bne	3e20 <sf_finish_parse+0xf70>
    3e30:	str	r0, [r1, #16]
    3e34:	str	r0, [sl, #8]
    3e38:	mov	r6, ip
    3e3c:	ldr	r5, [r6, r4, lsl #3]!
    3e40:	cmp	r5, #19
    3e44:	bhi	3eb0 <sf_finish_parse+0x1000>
    3e48:	ldr	sl, [sp, #4]
    3e4c:	add	r0, r4, #1
    3e50:	cmp	r4, #15
    3e54:	str	r0, [r9, #92]	; 0x5c
    3e58:	bge	50a8 <sf_finish_parse+0x21f8>
    3e5c:	mov	r1, #1024	; 0x400
    3e60:	lsl	r5, r1, r0
    3e64:	mov	r0, r5
    3e68:	bl	e34 <malloc@plt>
    3e6c:	ldr	r4, [sp, #12]
    3e70:	cmp	r0, #0
    3e74:	str	r0, [r6, #12]
    3e78:	beq	50a8 <sf_finish_parse+0x21f8>
    3e7c:	mov	r1, #0
    3e80:	mov	r2, r5
    3e84:	add	r6, r6, #8
    3e88:	bl	ea0 <memset@plt>
    3e8c:	str	r5, [r6]
    3e90:	cmp	r5, #19
    3e94:	ldr	ip, [pc, #3720]	; 4d24 <sf_finish_parse+0x1e74>
    3e98:	add	ip, pc, ip
    3e9c:	bhi	3eb8 <sf_finish_parse+0x1008>
    3ea0:	b	50a8 <sf_finish_parse+0x21f8>
    3ea4:	.word	0x00043614
    3ea8:	.word	0x00043540
    3eac:	.word	0x000434b8
    3eb0:	ldr	sl, [sp, #4]
    3eb4:	ldr	r4, [sp, #12]
    3eb8:	sub	r1, r5, #20
    3ebc:	mov	r2, #7
    3ec0:	str	r1, [r6]
    3ec4:	ldr	r0, [r6, #4]
    3ec8:	str	r2, [r0, r1]!
    3ecc:	mov	r2, r8
    3ed0:	mov	r1, r2
    3ed4:	ldr	r2, [r2, #16]
    3ed8:	cmp	r2, #0
    3edc:	bne	3ed0 <sf_finish_parse+0x1020>
    3ee0:	ldr	r3, [sp, #16]
    3ee4:	str	r0, [r1, #16]
    3ee8:	sub	r0, r3, #105	; 0x69
    3eec:	cmp	r0, #22
    3ef0:	bhi	3f08 <sf_finish_parse+0x1058>
    3ef4:	movw	r2, #16385	; 0x4001
    3ef8:	mov	r1, #1
    3efc:	movt	r2, #64	; 0x40
    3f00:	tst	r2, r1, lsl r0
    3f04:	bne	3f18 <sf_finish_parse+0x1068>
    3f08:	cmp	r3, #192	; 0xc0
    3f0c:	beq	3f18 <sf_finish_parse+0x1068>
    3f10:	cmp	r3, #163	; 0xa3
    3f14:	bne	4e28 <sf_finish_parse+0x1f78>
    3f18:	ldr	r0, [r9, #100]	; 0x64
    3f1c:	cmn	r0, #1
    3f20:	str	r0, [sp, #20]
    3f24:	beq	4e28 <sf_finish_parse+0x1f78>
    3f28:	ldr	r0, [r4, #4]
    3f2c:	mov	r1, #1
    3f30:	cmp	r8, #0
    3f34:	str	r0, [sp, #8]
    3f38:	ldr	r0, [pc, #3968]	; 4ec0 <sf_finish_parse+0x2010>
    3f3c:	add	r0, pc, r0
    3f40:	str	r1, [r0]
    3f44:	ldr	r0, [r9, #92]	; 0x5c
    3f48:	beq	3fbc <sf_finish_parse+0x110c>
    3f4c:	mov	r4, r0
    3f50:	mov	r7, ip
    3f54:	ldr	r5, [r7, r4, lsl #3]!
    3f58:	cmp	r5, #19
    3f5c:	bhi	4054 <sf_finish_parse+0x11a4>
    3f60:	add	r6, r4, #1
    3f64:	cmp	r4, #15
    3f68:	str	r6, [r9, #92]	; 0x5c
    3f6c:	bge	50a8 <sf_finish_parse+0x21f8>
    3f70:	mov	r0, #1024	; 0x400
    3f74:	lsl	r5, r0, r6
    3f78:	mov	r0, r5
    3f7c:	bl	e34 <malloc@plt>
    3f80:	cmp	r0, #0
    3f84:	str	r0, [r7, #12]
    3f88:	beq	50a8 <sf_finish_parse+0x21f8>
    3f8c:	mov	r1, #0
    3f90:	mov	r2, r5
    3f94:	add	r7, r7, #8
    3f98:	bl	ea0 <memset@plt>
    3f9c:	str	r5, [r7]
    3fa0:	cmp	r5, #19
    3fa4:	ldr	ip, [pc, #3996]	; 4f48 <sf_finish_parse+0x2098>
    3fa8:	add	ip, pc, ip
    3fac:	bhi	4058 <sf_finish_parse+0x11a8>
    3fb0:	b	50a8 <sf_finish_parse+0x21f8>
    3fb4:	.word	0x00043430
    3fb8:	.word	0x00043990
    3fbc:	mov	r6, ip
    3fc0:	ldr	r5, [r6, r0, lsl #3]!
    3fc4:	cmp	r5, #19
    3fc8:	bhi	4024 <sf_finish_parse+0x1174>
    3fcc:	add	r4, r0, #1
    3fd0:	cmp	r0, #15
    3fd4:	str	r4, [r9, #92]	; 0x5c
    3fd8:	bge	50a8 <sf_finish_parse+0x21f8>
    3fdc:	mov	r0, #1024	; 0x400
    3fe0:	lsl	r5, r0, r4
    3fe4:	mov	r0, r5
    3fe8:	bl	e34 <malloc@plt>
    3fec:	cmp	r0, #0
    3ff0:	str	r0, [r6, #12]
    3ff4:	beq	50a8 <sf_finish_parse+0x21f8>
    3ff8:	mov	r1, #0
    3ffc:	mov	r2, r5
    4000:	add	r6, r6, #8
    4004:	bl	ea0 <memset@plt>
    4008:	str	r5, [r6]
    400c:	cmp	r5, #19
    4010:	ldr	ip, [pc, #3892]	; 4f4c <sf_finish_parse+0x209c>
    4014:	add	ip, pc, ip
    4018:	bhi	4028 <sf_finish_parse+0x1178>
    401c:	b	50a8 <sf_finish_parse+0x21f8>
    4020:	.word	0x000433a8
    4024:	mov	r4, r0
    4028:	sub	r0, r5, #20
    402c:	mov	r1, #1
    4030:	str	r0, [r6]
    4034:	ldr	r8, [r6, #4]
    4038:	str	r1, [r8, r0]!
    403c:	mov	r0, #0
    4040:	str	r0, [r8, #12]
    4044:	mov	r7, ip
    4048:	ldr	r5, [r7, r4, lsl #3]!
    404c:	cmp	r5, #19
    4050:	bls	3f60 <sf_finish_parse+0x10b0>
    4054:	mov	r6, r4
    4058:	sub	r1, r5, #20
    405c:	mov	r2, #135	; 0x87
    4060:	str	r1, [r7]
    4064:	ldr	r0, [r7, #4]
    4068:	str	r2, [r0, r1]!
    406c:	mov	r2, r8
    4070:	mov	r1, r2
    4074:	ldr	r2, [r2, #16]
    4078:	cmp	r2, #0
    407c:	bne	4070 <sf_finish_parse+0x11c0>
    4080:	str	r0, [r1, #16]
    4084:	mov	r7, ip
    4088:	ldr	r5, [r7, r6, lsl #3]!
    408c:	cmp	r5, #19
    4090:	bhi	40f0 <sf_finish_parse+0x1240>
    4094:	add	r4, r6, #1
    4098:	cmp	r6, #15
    409c:	str	r4, [r9, #92]	; 0x5c
    40a0:	bge	50a8 <sf_finish_parse+0x21f8>
    40a4:	mov	r0, #1024	; 0x400
    40a8:	lsl	r5, r0, r4
    40ac:	mov	r0, r5
    40b0:	bl	e34 <malloc@plt>
    40b4:	cmp	r0, #0
    40b8:	str	r0, [r7, #12]
    40bc:	beq	50a8 <sf_finish_parse+0x21f8>
    40c0:	mov	r1, #0
    40c4:	mov	r2, r5
    40c8:	add	r7, r7, #8
    40cc:	bl	ea0 <memset@plt>
    40d0:	str	r5, [r7]
    40d4:	cmp	r5, #19
    40d8:	ldr	ip, [pc, #4052]	; 50b4 <sf_finish_parse+0x2204>
    40dc:	add	ip, pc, ip
    40e0:	bhi	40f4 <sf_finish_parse+0x1244>
    40e4:	b	50a8 <sf_finish_parse+0x21f8>
    40e8:	.word	0x00043330
    40ec:	.word	0x00043374
    40f0:	mov	r4, r6
    40f4:	sub	r1, r5, #20
    40f8:	mov	r2, #4
    40fc:	str	r1, [r7]
    4100:	ldr	r0, [r7, #4]
    4104:	str	r2, [r0, r1]!
    4108:	mov	r1, #24
    410c:	mov	r2, r8
    4110:	str	r1, [r0, #12]
    4114:	mov	r1, r2
    4118:	ldr	r2, [r2, #16]
    411c:	cmp	r2, #0
    4120:	bne	4114 <sf_finish_parse+0x1264>
    4124:	str	r0, [r1, #16]
    4128:	mov	r7, ip
    412c:	ldr	r5, [r7, r4, lsl #3]!
    4130:	cmp	r5, #19
    4134:	bhi	4194 <sf_finish_parse+0x12e4>
    4138:	add	r6, r4, #1
    413c:	cmp	r4, #15
    4140:	str	r6, [r9, #92]	; 0x5c
    4144:	bge	50a8 <sf_finish_parse+0x21f8>
    4148:	mov	r0, #1024	; 0x400
    414c:	lsl	r5, r0, r6
    4150:	mov	r0, r5
    4154:	bl	e34 <malloc@plt>
    4158:	cmp	r0, #0
    415c:	str	r0, [r7, #12]
    4160:	beq	50a8 <sf_finish_parse+0x21f8>
    4164:	mov	r1, #0
    4168:	mov	r2, r5
    416c:	add	r7, r7, #8
    4170:	bl	ea0 <memset@plt>
    4174:	str	r5, [r7]
    4178:	cmp	r5, #19
    417c:	ldr	ip, [pc, #3892]	; 50b8 <sf_finish_parse+0x2208>
    4180:	add	ip, pc, ip
    4184:	bhi	4198 <sf_finish_parse+0x12e8>
    4188:	b	50a8 <sf_finish_parse+0x21f8>
    418c:	.word	0x00043270
    4190:	.word	0x000432e8
    4194:	mov	r6, r4
    4198:	sub	r1, r5, #20
    419c:	mov	r2, #2
    41a0:	str	r1, [r7]
    41a4:	ldr	r0, [r7, #4]
    41a8:	str	r2, [r0, r1]!
    41ac:	mov	r2, r8
    41b0:	ldr	r1, [sp, #20]
    41b4:	str	r1, [r0, #12]
    41b8:	mov	r1, r2
    41bc:	ldr	r2, [r2, #16]
    41c0:	cmp	r2, #0
    41c4:	bne	41b8 <sf_finish_parse+0x1308>
    41c8:	str	r0, [r1, #16]
    41cc:	mov	r7, ip
    41d0:	ldr	r5, [r7, r6, lsl #3]!
    41d4:	cmp	r5, #19
    41d8:	bhi	4238 <sf_finish_parse+0x1388>
    41dc:	add	r4, r6, #1
    41e0:	cmp	r6, #15
    41e4:	str	r4, [r9, #92]	; 0x5c
    41e8:	bge	50a8 <sf_finish_parse+0x21f8>
    41ec:	mov	r0, #1024	; 0x400
    41f0:	lsl	r5, r0, r4
    41f4:	mov	r0, r5
    41f8:	bl	e34 <malloc@plt>
    41fc:	cmp	r0, #0
    4200:	str	r0, [r7, #12]
    4204:	beq	50a8 <sf_finish_parse+0x21f8>
    4208:	mov	r1, #0
    420c:	mov	r2, r5
    4210:	add	r7, r7, #8
    4214:	bl	ea0 <memset@plt>
    4218:	str	r5, [r7]
    421c:	cmp	r5, #19
    4220:	ldr	ip, [pc, #4036]	; 51ec <sf_finish_parse+0x233c>
    4224:	add	ip, pc, ip
    4228:	bhi	423c <sf_finish_parse+0x138c>
    422c:	b	50a8 <sf_finish_parse+0x21f8>
    4230:	.word	0x000431e4
    4234:	.word	0x00043160
    4238:	mov	r4, r6
    423c:	sub	r1, r5, #20
    4240:	mov	r2, #80	; 0x50
    4244:	str	r1, [r7]
    4248:	ldr	r0, [r7, #4]
    424c:	str	r2, [r0, r1]!
    4250:	mov	r1, #0
    4254:	mov	r2, r8
    4258:	str	r1, [r0, #12]
    425c:	mov	r1, r2
    4260:	ldr	r2, [r2, #16]
    4264:	cmp	r2, #0
    4268:	bne	425c <sf_finish_parse+0x13ac>
    426c:	str	r0, [r1, #16]
    4270:	mov	r7, ip
    4274:	ldr	r5, [r7, r4, lsl #3]!
    4278:	cmp	r5, #19
    427c:	bhi	42dc <sf_finish_parse+0x142c>
    4280:	add	r6, r4, #1
    4284:	cmp	r4, #15
    4288:	str	r6, [r9, #92]	; 0x5c
    428c:	bge	50a8 <sf_finish_parse+0x21f8>
    4290:	mov	r0, #1024	; 0x400
    4294:	lsl	r5, r0, r6
    4298:	mov	r0, r5
    429c:	bl	e34 <malloc@plt>
    42a0:	cmp	r0, #0
    42a4:	str	r0, [r7, #12]
    42a8:	beq	50a8 <sf_finish_parse+0x21f8>
    42ac:	mov	r1, #0
    42b0:	mov	r2, r5
    42b4:	add	r7, r7, #8
    42b8:	bl	ea0 <memset@plt>
    42bc:	str	r5, [r7]
    42c0:	cmp	r5, #19
    42c4:	ldr	ip, [pc, #3876]	; 51f0 <sf_finish_parse+0x2340>
    42c8:	add	ip, pc, ip
    42cc:	bhi	42e0 <sf_finish_parse+0x1430>
    42d0:	b	50a8 <sf_finish_parse+0x21f8>
    42d4:	.word	0x000431d8
    42d8:	.word	0x000430d4
    42dc:	mov	r6, r4
    42e0:	sub	r0, r5, #20
    42e4:	mov	r1, #69	; 0x45
    42e8:	str	r0, [r7]
    42ec:	ldr	r4, [r7, #4]
    42f0:	str	r1, [r4, r0]!
    42f4:	mov	r0, #8
    42f8:	mov	r1, r8
    42fc:	str	r0, [r4, #12]
    4300:	mov	r0, r1
    4304:	ldr	r1, [r1, #16]
    4308:	cmp	r1, #0
    430c:	bne	4300 <sf_finish_parse+0x1450>
    4310:	str	r4, [r0, #16]
    4314:	mov	r7, ip
    4318:	str	sl, [sp, #4]
    431c:	ldr	r5, [r7, r6, lsl #3]!
    4320:	cmp	r5, #19
    4324:	bhi	4384 <sf_finish_parse+0x14d4>
    4328:	add	sl, r6, #1
    432c:	cmp	r6, #15
    4330:	str	sl, [r9, #92]	; 0x5c
    4334:	bge	50a8 <sf_finish_parse+0x21f8>
    4338:	mov	r0, #1024	; 0x400
    433c:	lsl	r5, r0, sl
    4340:	mov	r0, r5
    4344:	bl	e34 <malloc@plt>
    4348:	cmp	r0, #0
    434c:	str	r0, [r7, #12]
    4350:	beq	50a8 <sf_finish_parse+0x21f8>
    4354:	mov	r1, #0
    4358:	mov	r2, r5
    435c:	add	r7, r7, #8
    4360:	bl	ea0 <memset@plt>
    4364:	str	r5, [r7]
    4368:	cmp	r5, #19
    436c:	ldr	ip, [pc, #3712]	; 51f4 <sf_finish_parse+0x2344>
    4370:	add	ip, pc, ip
    4374:	bhi	4388 <sf_finish_parse+0x14d8>
    4378:	b	50a8 <sf_finish_parse+0x21f8>
    437c:	.word	0x00043134
    4380:	.word	0x00043030
    4384:	mov	sl, r6
    4388:	sub	r0, r5, #20
    438c:	mov	r1, #69	; 0x45
    4390:	str	r0, [r7]
    4394:	ldr	r7, [r7, #4]
    4398:	str	r1, [r7, r0]!
    439c:	mov	r1, r8
    43a0:	mov	r0, #4
    43a4:	str	r7, [r4, #4]
    43a8:	str	r0, [r7, #12]
    43ac:	mov	r0, r1
    43b0:	ldr	r1, [r1, #16]
    43b4:	cmp	r1, #0
    43b8:	bne	43ac <sf_finish_parse+0x14fc>
    43bc:	str	r7, [r0, #16]
    43c0:	ldr	r0, [sp, #8]
    43c4:	str	r0, [r4, #8]
    43c8:	str	r0, [r7, #4]
    43cc:	mov	r4, ip
    43d0:	ldr	r5, [r4, sl, lsl #3]!
    43d4:	cmp	r5, #19
    43d8:	bhi	443c <sf_finish_parse+0x158c>
    43dc:	add	r6, sl, #1
    43e0:	cmp	sl, #15
    43e4:	str	r6, [r9, #92]	; 0x5c
    43e8:	bge	50a8 <sf_finish_parse+0x21f8>
    43ec:	mov	r0, #1024	; 0x400
    43f0:	lsl	r5, r0, r6
    43f4:	mov	r0, r5
    43f8:	bl	e34 <malloc@plt>
    43fc:	ldr	sl, [sp, #4]
    4400:	cmp	r0, #0
    4404:	str	r0, [r4, #12]
    4408:	beq	50a8 <sf_finish_parse+0x21f8>
    440c:	mov	r1, #0
    4410:	mov	r2, r5
    4414:	add	r4, r4, #8
    4418:	bl	ea0 <memset@plt>
    441c:	str	r5, [r4]
    4420:	cmp	r5, #19
    4424:	ldr	ip, [pc, #3532]	; 51f8 <sf_finish_parse+0x2348>
    4428:	add	ip, pc, ip
    442c:	bhi	4444 <sf_finish_parse+0x1594>
    4430:	b	50a8 <sf_finish_parse+0x21f8>
    4434:	.word	0x00043090
    4438:	.word	0x00042f8c
    443c:	mov	r6, sl
    4440:	ldr	sl, [sp, #4]
    4444:	sub	r0, r5, #20
    4448:	mov	r1, #69	; 0x45
    444c:	str	r0, [r4]
    4450:	ldr	r9, [r4, #4]
    4454:	str	r1, [r9, r0]!
    4458:	mov	r1, r8
    445c:	mov	r0, #128	; 0x80
    4460:	str	r9, [r7, #8]
    4464:	str	r0, [r9, #12]
    4468:	mov	r0, r1
    446c:	ldr	r1, [r1, #16]
    4470:	cmp	r1, #0
    4474:	bne	4468 <sf_finish_parse+0x15b8>
    4478:	str	r9, [r0, #16]
    447c:	mov	r4, ip
    4480:	ldr	r5, [r4, r6, lsl #3]!
    4484:	cmp	r5, #19
    4488:	bhi	44f0 <sf_finish_parse+0x1640>
    448c:	ldr	r0, [pc, #3432]	; 51fc <sf_finish_parse+0x234c>
    4490:	add	r7, r6, #1
    4494:	cmp	r6, #15
    4498:	add	r0, pc, r0
    449c:	str	r7, [r0, #92]	; 0x5c
    44a0:	bge	50a8 <sf_finish_parse+0x21f8>
    44a4:	mov	r0, #1024	; 0x400
    44a8:	lsl	r5, r0, r7
    44ac:	mov	r0, r5
    44b0:	bl	e34 <malloc@plt>
    44b4:	cmp	r0, #0
    44b8:	str	r0, [r4, #12]
    44bc:	beq	50a8 <sf_finish_parse+0x21f8>
    44c0:	mov	r1, #0
    44c4:	mov	r2, r5
    44c8:	add	r4, r4, #8
    44cc:	bl	ea0 <memset@plt>
    44d0:	str	r5, [r4]
    44d4:	cmp	r5, #19
    44d8:	ldr	ip, [pc, #3360]	; 5200 <sf_finish_parse+0x2350>
    44dc:	add	ip, pc, ip
    44e0:	bhi	44f4 <sf_finish_parse+0x1644>
    44e4:	b	50a8 <sf_finish_parse+0x21f8>
    44e8:	.word	0x00042eec
    44ec:	.word	0x00042f60
    44f0:	mov	r7, r6
    44f4:	sub	r1, r5, #20
    44f8:	mov	r2, #96	; 0x60
    44fc:	str	r1, [r4]
    4500:	ldr	r0, [r4, #4]
    4504:	str	r2, [r0, r1]!
    4508:	mov	r2, r8
    450c:	ldr	r1, [sp, #20]
    4510:	str	r0, [r9, #4]
    4514:	str	r1, [r0, #12]
    4518:	mov	r1, r2
    451c:	ldr	r2, [r2, #16]
    4520:	cmp	r2, #0
    4524:	bne	4518 <sf_finish_parse+0x1668>
    4528:	str	r0, [r1, #16]
    452c:	mov	r4, ip
    4530:	ldr	r5, [r4, r7, lsl #3]!
    4534:	cmp	r5, #19
    4538:	bhi	459c <sf_finish_parse+0x16ec>
    453c:	ldr	r0, [pc, #3264]	; 5204 <sf_finish_parse+0x2354>
    4540:	add	r6, r7, #1
    4544:	cmp	r7, #15
    4548:	add	r0, pc, r0
    454c:	str	r6, [r0, #92]	; 0x5c
    4550:	bge	50a8 <sf_finish_parse+0x21f8>
    4554:	mov	r0, #1024	; 0x400
    4558:	lsl	r5, r0, r6
    455c:	mov	r0, r5
    4560:	bl	e34 <malloc@plt>
    4564:	cmp	r0, #0
    4568:	str	r0, [r4, #12]
    456c:	beq	50a8 <sf_finish_parse+0x21f8>
    4570:	mov	r1, #0
    4574:	mov	r2, r5
    4578:	add	r4, r4, #8
    457c:	bl	ea0 <memset@plt>
    4580:	str	r5, [r4]
    4584:	cmp	r5, #19
    4588:	ldr	ip, [pc, #3192]	; 5208 <sf_finish_parse+0x2358>
    458c:	add	ip, pc, ip
    4590:	bhi	45a0 <sf_finish_parse+0x16f0>
    4594:	b	50a8 <sf_finish_parse+0x21f8>
    4598:	.word	0x00042e4c
    459c:	mov	r6, r7
    45a0:	sub	r1, r5, #20
    45a4:	mov	r2, #4
    45a8:	str	r1, [r4]
    45ac:	ldr	r0, [r4, #4]
    45b0:	str	r2, [r0, r1]!
    45b4:	mov	r1, #2
    45b8:	mov	r2, r8
    45bc:	str	r1, [r0, #12]
    45c0:	mov	r1, r2
    45c4:	ldr	r2, [r2, #16]
    45c8:	cmp	r2, #0
    45cc:	bne	45c0 <sf_finish_parse+0x1710>
    45d0:	str	r0, [r1, #16]
    45d4:	mov	r4, ip
    45d8:	ldr	r5, [r4, r6, lsl #3]!
    45dc:	cmp	r5, #19
    45e0:	bhi	464c <sf_finish_parse+0x179c>
    45e4:	ldr	r0, [pc, #3104]	; 520c <sf_finish_parse+0x235c>
    45e8:	add	r7, r6, #1
    45ec:	cmp	r6, #15
    45f0:	add	r0, pc, r0
    45f4:	str	r7, [r0, #92]	; 0x5c
    45f8:	bge	50a8 <sf_finish_parse+0x21f8>
    45fc:	mov	r0, #1024	; 0x400
    4600:	lsl	r5, r0, r7
    4604:	mov	r0, r5
    4608:	bl	e34 <malloc@plt>
    460c:	cmp	r0, #0
    4610:	str	r0, [r4, #12]
    4614:	beq	50a8 <sf_finish_parse+0x21f8>
    4618:	mov	r1, #0
    461c:	mov	r2, r5
    4620:	add	r4, r4, #8
    4624:	bl	ea0 <memset@plt>
    4628:	str	r5, [r4]
    462c:	cmp	r5, #19
    4630:	ldr	ip, [pc, #3032]	; 5210 <sf_finish_parse+0x2360>
    4634:	add	ip, pc, ip
    4638:	bhi	4650 <sf_finish_parse+0x17a0>
    463c:	b	50a8 <sf_finish_parse+0x21f8>
    4640:	.word	0x00042e8c
    4644:	.word	0x00042d88
    4648:	.word	0x00042df0
    464c:	mov	r7, r6
    4650:	sub	r1, r5, #20
    4654:	mov	r2, #2
    4658:	str	r1, [r4]
    465c:	ldr	r0, [r4, #4]
    4660:	str	r2, [r0, r1]!
    4664:	mov	r2, r8
    4668:	ldr	r1, [sp, #20]
    466c:	str	r1, [r0, #12]
    4670:	mov	r1, r2
    4674:	ldr	r2, [r2, #16]
    4678:	cmp	r2, #0
    467c:	bne	4670 <sf_finish_parse+0x17c0>
    4680:	ldr	r3, [sp, #16]
    4684:	str	r0, [r1, #16]
    4688:	cmp	r3, #127	; 0x7f
    468c:	bne	46fc <sf_finish_parse+0x184c>
    4690:	mov	r4, ip
    4694:	ldr	r5, [r4, r7, lsl #3]!
    4698:	cmp	r5, #19
    469c:	bhi	4714 <sf_finish_parse+0x1864>
    46a0:	ldr	r0, [pc, #2924]	; 5214 <sf_finish_parse+0x2364>
    46a4:	add	r6, r7, #1
    46a8:	cmp	r7, #15
    46ac:	add	r0, pc, r0
    46b0:	str	r6, [r0, #92]	; 0x5c
    46b4:	bge	50a8 <sf_finish_parse+0x21f8>
    46b8:	mov	r0, #1024	; 0x400
    46bc:	lsl	r5, r0, r6
    46c0:	mov	r0, r5
    46c4:	bl	e34 <malloc@plt>
    46c8:	cmp	r0, #0
    46cc:	str	r0, [r4, #12]
    46d0:	beq	50a8 <sf_finish_parse+0x21f8>
    46d4:	mov	r1, #0
    46d8:	mov	r2, r5
    46dc:	add	r4, r4, #8
    46e0:	bl	ea0 <memset@plt>
    46e4:	str	r5, [r4]
    46e8:	cmp	r5, #19
    46ec:	ldr	ip, [pc, #2852]	; 5218 <sf_finish_parse+0x2368>
    46f0:	add	ip, pc, ip
    46f4:	bhi	4718 <sf_finish_parse+0x1868>
    46f8:	b	50a8 <sf_finish_parse+0x21f8>
    46fc:	ldr	r0, [sp, #8]
    4700:	str	r0, [r9, #8]
    4704:	ldr	r9, [pc, #2904]	; 5264 <sf_finish_parse+0x23b4>
    4708:	add	r9, pc, r9
    470c:	b	4e24 <sf_finish_parse+0x1f74>
    4710:	.word	0x00042cec
    4714:	mov	r6, r7
    4718:	sub	r1, r5, #20
    471c:	mov	r2, #32
    4720:	str	r1, [r4]
    4724:	ldr	r0, [r4, #4]
    4728:	str	r2, [r0, r1]!
    472c:	mov	r2, r8
    4730:	mov	r1, #4
    4734:	str	r0, [r9, #8]
    4738:	str	r1, [r0, #12]
    473c:	mov	r1, r2
    4740:	ldr	r2, [r2, #16]
    4744:	cmp	r2, #0
    4748:	bne	473c <sf_finish_parse+0x188c>
    474c:	str	r0, [r1, #16]
    4750:	mov	r7, ip
    4754:	ldr	r5, [r7, r6, lsl #3]!
    4758:	cmp	r5, #19
    475c:	bhi	47c4 <sf_finish_parse+0x1914>
    4760:	ldr	r0, [pc, #2740]	; 521c <sf_finish_parse+0x236c>
    4764:	add	r9, r6, #1
    4768:	cmp	r6, #15
    476c:	add	r0, pc, r0
    4770:	str	r9, [r0, #92]	; 0x5c
    4774:	bge	50a8 <sf_finish_parse+0x21f8>
    4778:	mov	r0, #1024	; 0x400
    477c:	lsl	r5, r0, r9
    4780:	mov	r0, r5
    4784:	bl	e34 <malloc@plt>
    4788:	cmp	r0, #0
    478c:	str	r0, [r7, #12]
    4790:	beq	50a8 <sf_finish_parse+0x21f8>
    4794:	mov	r1, #0
    4798:	mov	r2, r5
    479c:	add	r7, r7, #8
    47a0:	bl	ea0 <memset@plt>
    47a4:	str	r5, [r7]
    47a8:	cmp	r5, #19
    47ac:	ldr	ip, [pc, #2668]	; 5220 <sf_finish_parse+0x2370>
    47b0:	add	ip, pc, ip
    47b4:	bhi	47c8 <sf_finish_parse+0x1918>
    47b8:	b	50a8 <sf_finish_parse+0x21f8>
    47bc:	.word	0x00042c44
    47c0:	.word	0x00042ca4
    47c4:	mov	r9, r6
    47c8:	sub	r0, r5, #20
    47cc:	mov	r1, #69	; 0x45
    47d0:	str	r0, [r7]
    47d4:	ldr	r7, [r7, #4]
    47d8:	str	r1, [r7, r0]!
    47dc:	mov	r0, #33554432	; 0x2000000
    47e0:	mov	r1, r8
    47e4:	str	r0, [r7, #12]
    47e8:	mov	r0, r1
    47ec:	ldr	r1, [r1, #16]
    47f0:	cmp	r1, #0
    47f4:	bne	47e8 <sf_finish_parse+0x1938>
    47f8:	str	r7, [r0, #16]
    47fc:	ldr	r0, [sp, #8]
    4800:	mov	r4, ip
    4804:	str	r0, [r7, #8]
    4808:	ldr	r5, [r4, r9, lsl #3]!
    480c:	cmp	r5, #19
    4810:	bhi	4884 <sf_finish_parse+0x19d4>
    4814:	ldr	r0, [pc, #2572]	; 5228 <sf_finish_parse+0x2378>
    4818:	add	r6, r9, #1
    481c:	cmp	r9, #15
    4820:	add	r0, pc, r0
    4824:	str	r6, [r0, #92]	; 0x5c
    4828:	bge	50a8 <sf_finish_parse+0x21f8>
    482c:	mov	r0, #1024	; 0x400
    4830:	lsl	r5, r0, r6
    4834:	mov	r0, r5
    4838:	bl	e34 <malloc@plt>
    483c:	cmp	r0, #0
    4840:	str	r0, [r4, #12]
    4844:	beq	50a8 <sf_finish_parse+0x21f8>
    4848:	mov	r1, #0
    484c:	mov	r2, r5
    4850:	add	r4, r4, #8
    4854:	bl	ea0 <memset@plt>
    4858:	str	r5, [r4]
    485c:	cmp	r5, #19
    4860:	ldr	r9, [pc, #2500]	; 522c <sf_finish_parse+0x237c>
    4864:	ldr	ip, [pc, #2500]	; 5230 <sf_finish_parse+0x2380>
    4868:	add	r9, pc, r9
    486c:	add	ip, pc, ip
    4870:	bhi	4890 <sf_finish_parse+0x19e0>
    4874:	b	50a8 <sf_finish_parse+0x21f8>
    4878:	.word	0x00042ba0
    487c:	.word	0x00042c00
    4880:	.word	0x00042afc
    4884:	mov	r6, r9
    4888:	ldr	r9, [pc, #2452]	; 5224 <sf_finish_parse+0x2374>
    488c:	add	r9, pc, r9
    4890:	sub	r0, r5, #20
    4894:	mov	r1, #69	; 0x45
    4898:	str	r0, [r4]
    489c:	ldr	sl, [r4, #4]
    48a0:	str	r1, [sl, r0]!
    48a4:	mov	r1, r8
    48a8:	mov	r0, #16777216	; 0x1000000
    48ac:	str	sl, [r7, #4]
    48b0:	str	r0, [sl, #12]
    48b4:	mov	r0, r1
    48b8:	ldr	r1, [r1, #16]
    48bc:	cmp	r1, #0
    48c0:	bne	48b4 <sf_finish_parse+0x1a04>
    48c4:	str	sl, [r0, #16]
    48c8:	mov	r7, ip
    48cc:	ldr	r5, [r7, r6, lsl #3]!
    48d0:	cmp	r5, #19
    48d4:	bhi	4930 <sf_finish_parse+0x1a80>
    48d8:	add	r4, r6, #1
    48dc:	cmp	r6, #15
    48e0:	str	r4, [r9, #92]	; 0x5c
    48e4:	bge	50a8 <sf_finish_parse+0x21f8>
    48e8:	mov	r0, #1024	; 0x400
    48ec:	lsl	r5, r0, r4
    48f0:	mov	r0, r5
    48f4:	bl	e34 <malloc@plt>
    48f8:	cmp	r0, #0
    48fc:	str	r0, [r7, #12]
    4900:	beq	50a8 <sf_finish_parse+0x21f8>
    4904:	mov	r1, #0
    4908:	mov	r2, r5
    490c:	add	r7, r7, #8
    4910:	bl	ea0 <memset@plt>
    4914:	str	r5, [r7]
    4918:	cmp	r5, #19
    491c:	ldr	ip, [pc, #2320]	; 5234 <sf_finish_parse+0x2384>
    4920:	add	ip, pc, ip
    4924:	bhi	4934 <sf_finish_parse+0x1a84>
    4928:	b	50a8 <sf_finish_parse+0x21f8>
    492c:	.word	0x00042a54
    4930:	mov	r4, r6
    4934:	sub	r1, r5, #20
    4938:	mov	r2, #48	; 0x30
    493c:	str	r1, [r7]
    4940:	ldr	r0, [r7, #4]
    4944:	str	r2, [r0, r1]!
    4948:	mov	r2, r8
    494c:	mov	r1, #16
    4950:	str	r0, [sl, #4]
    4954:	str	r1, [r0, #12]
    4958:	mov	r1, r2
    495c:	ldr	r2, [r2, #16]
    4960:	cmp	r2, #0
    4964:	bne	4958 <sf_finish_parse+0x1aa8>
    4968:	str	r0, [r1, #16]
    496c:	mov	r6, ip
    4970:	ldr	r5, [r6, r4, lsl #3]!
    4974:	cmp	r5, #19
    4978:	bhi	49d8 <sf_finish_parse+0x1b28>
    497c:	add	r7, r4, #1
    4980:	cmp	r4, #15
    4984:	str	r7, [r9, #92]	; 0x5c
    4988:	bge	50a8 <sf_finish_parse+0x21f8>
    498c:	mov	r0, #1024	; 0x400
    4990:	lsl	r5, r0, r7
    4994:	mov	r0, r5
    4998:	bl	e34 <malloc@plt>
    499c:	cmp	r0, #0
    49a0:	str	r0, [r6, #12]
    49a4:	beq	50a8 <sf_finish_parse+0x21f8>
    49a8:	mov	r1, #0
    49ac:	mov	r2, r5
    49b0:	add	r6, r6, #8
    49b4:	bl	ea0 <memset@plt>
    49b8:	str	r5, [r6]
    49bc:	cmp	r5, #19
    49c0:	ldr	ip, [pc, #2160]	; 5238 <sf_finish_parse+0x2388>
    49c4:	add	ip, pc, ip
    49c8:	bhi	49dc <sf_finish_parse+0x1b2c>
    49cc:	b	50a8 <sf_finish_parse+0x21f8>
    49d0:	.word	0x00042abc
    49d4:	.word	0x000429b8
    49d8:	mov	r7, r4
    49dc:	sub	r0, r5, #20
    49e0:	mov	r1, #69	; 0x45
    49e4:	str	r0, [r6]
    49e8:	ldr	r2, [r6, #4]
    49ec:	str	r1, [r2, r0]!
    49f0:	mov	r0, #32
    49f4:	mov	r1, r8
    49f8:	str	r0, [r2, #12]
    49fc:	mov	r0, r1
    4a00:	ldr	r1, [r1, #16]
    4a04:	cmp	r1, #0
    4a08:	bne	49fc <sf_finish_parse+0x1b4c>
    4a0c:	str	r2, [r0, #16]
    4a10:	mov	r4, ip
    4a14:	str	r2, [sp]
    4a18:	ldr	r5, [r4, r7, lsl #3]!
    4a1c:	cmp	r5, #19
    4a20:	bhi	4a80 <sf_finish_parse+0x1bd0>
    4a24:	add	r6, r7, #1
    4a28:	cmp	r7, #15
    4a2c:	str	r6, [r9, #92]	; 0x5c
    4a30:	bge	50a8 <sf_finish_parse+0x21f8>
    4a34:	mov	r0, #1024	; 0x400
    4a38:	lsl	r5, r0, r6
    4a3c:	mov	r0, r5
    4a40:	bl	e34 <malloc@plt>
    4a44:	cmp	r0, #0
    4a48:	str	r0, [r4, #12]
    4a4c:	beq	50a8 <sf_finish_parse+0x21f8>
    4a50:	mov	r1, #0
    4a54:	mov	r2, r5
    4a58:	add	r4, r4, #8
    4a5c:	bl	ea0 <memset@plt>
    4a60:	str	r5, [r4]
    4a64:	cmp	r5, #19
    4a68:	ldr	ip, [pc, #1996]	; 523c <sf_finish_parse+0x238c>
    4a6c:	add	ip, pc, ip
    4a70:	bhi	4a84 <sf_finish_parse+0x1bd4>
    4a74:	b	50a8 <sf_finish_parse+0x21f8>
    4a78:	.word	0x00042a20
    4a7c:	.word	0x0004291c
    4a80:	mov	r6, r7
    4a84:	sub	r1, r5, #20
    4a88:	mov	r2, #48	; 0x30
    4a8c:	str	r1, [r4]
    4a90:	ldr	r0, [r4, #4]
    4a94:	str	r2, [r0, r1]!
    4a98:	mov	r2, r8
    4a9c:	mov	r1, #8
    4aa0:	str	r0, [sl, #8]
    4aa4:	str	r1, [r0, #12]
    4aa8:	mov	r1, r2
    4aac:	ldr	r2, [r2, #16]
    4ab0:	cmp	r2, #0
    4ab4:	bne	4aa8 <sf_finish_parse+0x1bf8>
    4ab8:	str	r0, [r1, #16]
    4abc:	mov	r7, ip
    4ac0:	ldr	r5, [r7, r6, lsl #3]!
    4ac4:	cmp	r5, #19
    4ac8:	bhi	4b28 <sf_finish_parse+0x1c78>
    4acc:	add	r4, r6, #1
    4ad0:	cmp	r6, #15
    4ad4:	str	r4, [r9, #92]	; 0x5c
    4ad8:	bge	50a8 <sf_finish_parse+0x21f8>
    4adc:	mov	r0, #1024	; 0x400
    4ae0:	lsl	r5, r0, r4
    4ae4:	mov	r0, r5
    4ae8:	bl	e34 <malloc@plt>
    4aec:	cmp	r0, #0
    4af0:	str	r0, [r7, #12]
    4af4:	beq	50a8 <sf_finish_parse+0x21f8>
    4af8:	mov	r1, #0
    4afc:	mov	r2, r5
    4b00:	add	r7, r7, #8
    4b04:	bl	ea0 <memset@plt>
    4b08:	str	r5, [r7]
    4b0c:	cmp	r5, #19
    4b10:	ldr	ip, [pc, #1832]	; 5240 <sf_finish_parse+0x2390>
    4b14:	add	ip, pc, ip
    4b18:	bhi	4b2c <sf_finish_parse+0x1c7c>
    4b1c:	b	50a8 <sf_finish_parse+0x21f8>
    4b20:	.word	0x0004297c
    4b24:	.word	0x00042870
    4b28:	mov	r4, r6
    4b2c:	sub	r0, r5, #20
    4b30:	mov	r1, #69	; 0x45
    4b34:	str	r0, [r7]
    4b38:	ldr	sl, [r7, #4]
    4b3c:	str	r1, [sl, r0]!
    4b40:	mov	r0, #32
    4b44:	mov	r1, r8
    4b48:	str	r0, [sl, #12]
    4b4c:	mov	r0, r1
    4b50:	ldr	r1, [r1, #16]
    4b54:	cmp	r1, #0
    4b58:	bne	4b4c <sf_finish_parse+0x1c9c>
    4b5c:	str	sl, [r0, #16]
    4b60:	mov	r6, ip
    4b64:	ldr	r5, [r6, r4, lsl #3]!
    4b68:	cmp	r5, #19
    4b6c:	bhi	4bcc <sf_finish_parse+0x1d1c>
    4b70:	add	r7, r4, #1
    4b74:	cmp	r4, #15
    4b78:	str	r7, [r9, #92]	; 0x5c
    4b7c:	bge	50a8 <sf_finish_parse+0x21f8>
    4b80:	mov	r0, #1024	; 0x400
    4b84:	lsl	r5, r0, r7
    4b88:	mov	r0, r5
    4b8c:	bl	e34 <malloc@plt>
    4b90:	cmp	r0, #0
    4b94:	str	r0, [r6, #12]
    4b98:	beq	50a8 <sf_finish_parse+0x21f8>
    4b9c:	mov	r1, #0
    4ba0:	mov	r2, r5
    4ba4:	add	r6, r6, #8
    4ba8:	bl	ea0 <memset@plt>
    4bac:	str	r5, [r6]
    4bb0:	cmp	r5, #19
    4bb4:	ldr	ip, [pc, #1672]	; 5244 <sf_finish_parse+0x2394>
    4bb8:	add	ip, pc, ip
    4bbc:	bhi	4bd0 <sf_finish_parse+0x1d20>
    4bc0:	b	50a8 <sf_finish_parse+0x21f8>
    4bc4:	.word	0x000428e4
    4bc8:	.word	0x000427d0
    4bcc:	mov	r7, r4
    4bd0:	sub	r0, r5, #20
    4bd4:	mov	r1, #96	; 0x60
    4bd8:	str	r0, [r6]
    4bdc:	ldr	r9, [r6, #4]
    4be0:	str	r1, [r9, r0]!
    4be4:	mov	r1, r8
    4be8:	ldr	r0, [sp, #20]
    4bec:	str	r0, [r9, #12]
    4bf0:	mov	r0, r1
    4bf4:	ldr	r1, [r1, #16]
    4bf8:	cmp	r1, #0
    4bfc:	bne	4bf0 <sf_finish_parse+0x1d40>
    4c00:	str	r9, [r0, #16]
    4c04:	mov	r4, ip
    4c08:	ldr	r5, [r4, r7, lsl #3]!
    4c0c:	cmp	r5, #19
    4c10:	bhi	4c74 <sf_finish_parse+0x1dc4>
    4c14:	ldr	r0, [pc, #1580]	; 5248 <sf_finish_parse+0x2398>
    4c18:	add	r6, r7, #1
    4c1c:	cmp	r7, #15
    4c20:	add	r0, pc, r0
    4c24:	str	r6, [r0, #92]	; 0x5c
    4c28:	bge	50a8 <sf_finish_parse+0x21f8>
    4c2c:	mov	r0, #1024	; 0x400
    4c30:	lsl	r5, r0, r6
    4c34:	mov	r0, r5
    4c38:	bl	e34 <malloc@plt>
    4c3c:	cmp	r0, #0
    4c40:	str	r0, [r4, #12]
    4c44:	beq	50a8 <sf_finish_parse+0x21f8>
    4c48:	mov	r1, #0
    4c4c:	mov	r2, r5
    4c50:	add	r4, r4, #8
    4c54:	bl	ea0 <memset@plt>
    4c58:	str	r5, [r4]
    4c5c:	cmp	r5, #19
    4c60:	ldr	ip, [pc, #1508]	; 524c <sf_finish_parse+0x239c>
    4c64:	add	ip, pc, ip
    4c68:	bhi	4c78 <sf_finish_parse+0x1dc8>
    4c6c:	b	50a8 <sf_finish_parse+0x21f8>
    4c70:	.word	0x0004281c
    4c74:	mov	r6, r7
    4c78:	sub	r1, r5, #20
    4c7c:	mov	r2, #4
    4c80:	str	r1, [r4]
    4c84:	ldr	r0, [r4, #4]
    4c88:	str	r2, [r0, r1]!
    4c8c:	mov	r1, #3
    4c90:	mov	r2, r8
    4c94:	str	r1, [r0, #12]
    4c98:	mov	r1, r2
    4c9c:	ldr	r2, [r2, #16]
    4ca0:	cmp	r2, #0
    4ca4:	bne	4c98 <sf_finish_parse+0x1de8>
    4ca8:	str	r0, [r1, #16]
    4cac:	mov	r4, ip
    4cb0:	ldr	r5, [r4, r6, lsl #3]!
    4cb4:	cmp	r5, #19
    4cb8:	bhi	4d28 <sf_finish_parse+0x1e78>
    4cbc:	ldr	r0, [pc, #1420]	; 5250 <sf_finish_parse+0x23a0>
    4cc0:	add	r7, r6, #1
    4cc4:	cmp	r6, #15
    4cc8:	add	r0, pc, r0
    4ccc:	str	r7, [r0, #92]	; 0x5c
    4cd0:	bge	50a8 <sf_finish_parse+0x21f8>
    4cd4:	mov	r0, #1024	; 0x400
    4cd8:	lsl	r5, r0, r7
    4cdc:	mov	r0, r5
    4ce0:	bl	e34 <malloc@plt>
    4ce4:	cmp	r0, #0
    4ce8:	str	r0, [r4, #12]
    4cec:	beq	50a8 <sf_finish_parse+0x21f8>
    4cf0:	mov	r1, #0
    4cf4:	mov	r2, r5
    4cf8:	add	r4, r4, #8
    4cfc:	bl	ea0 <memset@plt>
    4d00:	str	r5, [r4]
    4d04:	cmp	r5, #19
    4d08:	ldr	ip, [pc, #1348]	; 5254 <sf_finish_parse+0x23a4>
    4d0c:	add	ip, pc, ip
    4d10:	bhi	4d2c <sf_finish_parse+0x1e7c>
    4d14:	b	50a8 <sf_finish_parse+0x21f8>
    4d18:	.word	0x00042708
    4d1c:	.word	0x00042744
    4d20:	.word	0x00042630
    4d24:	.word	0x00042588
    4d28:	mov	r7, r6
    4d2c:	sub	r1, r5, #20
    4d30:	mov	r2, #84	; 0x54
    4d34:	str	r1, [r4]
    4d38:	ldr	r0, [r4, #4]
    4d3c:	str	r2, [r0, r1]!
    4d40:	mvn	r1, #3
    4d44:	mov	r2, r8
    4d48:	str	r1, [r0, #12]
    4d4c:	mov	r1, r2
    4d50:	ldr	r2, [r2, #16]
    4d54:	cmp	r2, #0
    4d58:	bne	4d4c <sf_finish_parse+0x1e9c>
    4d5c:	str	r0, [r1, #16]
    4d60:	mov	r4, ip
    4d64:	ldr	r5, [r4, r7, lsl #3]!
    4d68:	cmp	r5, #19
    4d6c:	bhi	4dc8 <sf_finish_parse+0x1f18>
    4d70:	ldr	r1, [pc, #1248]	; 5258 <sf_finish_parse+0x23a8>
    4d74:	add	r0, r7, #1
    4d78:	cmp	r7, #15
    4d7c:	add	r1, pc, r1
    4d80:	str	r0, [r1, #92]	; 0x5c
    4d84:	bge	50a8 <sf_finish_parse+0x21f8>
    4d88:	mov	r1, #1024	; 0x400
    4d8c:	lsl	r5, r1, r0
    4d90:	mov	r0, r5
    4d94:	bl	e34 <malloc@plt>
    4d98:	cmp	r0, #0
    4d9c:	str	r0, [r4, #12]
    4da0:	beq	50a8 <sf_finish_parse+0x21f8>
    4da4:	mov	r1, #0
    4da8:	mov	r2, r5
    4dac:	add	r4, r4, #8
    4db0:	bl	ea0 <memset@plt>
    4db4:	str	r5, [r4]
    4db8:	cmp	r5, #19
    4dbc:	ldr	ip, [pc, #1176]	; 525c <sf_finish_parse+0x23ac>
    4dc0:	add	ip, pc, ip
    4dc4:	bls	50a8 <sf_finish_parse+0x21f8>
    4dc8:	sub	r1, r5, #20
    4dcc:	mov	r2, #2
    4dd0:	str	r1, [r4]
    4dd4:	ldr	r0, [r4, #4]
    4dd8:	str	r2, [r0, r1]!
    4ddc:	mov	r2, r8
    4de0:	ldr	r1, [sp, #20]
    4de4:	str	r1, [r0, #12]
    4de8:	mov	r1, r2
    4dec:	ldr	r2, [r2, #16]
    4df0:	cmp	r2, #0
    4df4:	bne	4de8 <sf_finish_parse+0x1f38>
    4df8:	str	r0, [r1, #16]
    4dfc:	ldr	r1, [sp]
    4e00:	ldr	r0, [sp, #8]
    4e04:	str	r9, [r1, #4]
    4e08:	str	r0, [r1, #8]
    4e0c:	str	r9, [sl, #4]
    4e10:	str	r0, [sl, #8]
    4e14:	ldr	sl, [sp, #4]
    4e18:	ldr	r9, [pc, #1088]	; 5260 <sf_finish_parse+0x23b0>
    4e1c:	ldr	r3, [sp, #16]
    4e20:	add	r9, pc, r9
    4e24:	ldr	r4, [sp, #12]
    4e28:	cmp	r8, #0
    4e2c:	beq	4e50 <sf_finish_parse+0x1fa0>
    4e30:	ldr	r0, [r4, #4]
    4e34:	mov	r2, r8
    4e38:	mov	r1, r2
    4e3c:	ldr	r2, [r2, #16]
    4e40:	cmp	r2, #0
    4e44:	bne	4e38 <sf_finish_parse+0x1f88>
    4e48:	str	r0, [r1, #16]
    4e4c:	str	r8, [r4, #4]
    4e50:	ldr	r4, [r9, #92]	; 0x5c
    4e54:	cmp	r3, #192	; 0xc0
    4e58:	bne	5044 <sf_finish_parse+0x2194>
    4e5c:	mov	r6, ip
    4e60:	ldr	r5, [r6, r4, lsl #3]!
    4e64:	cmp	r5, #19
    4e68:	bhi	4ec4 <sf_finish_parse+0x2014>
    4e6c:	add	r8, r4, #1
    4e70:	cmp	r4, #15
    4e74:	str	r8, [r9, #92]	; 0x5c
    4e78:	bge	50a8 <sf_finish_parse+0x21f8>
    4e7c:	mov	r0, #1024	; 0x400
    4e80:	lsl	r5, r0, r8
    4e84:	mov	r0, r5
    4e88:	bl	e34 <malloc@plt>
    4e8c:	cmp	r0, #0
    4e90:	str	r0, [r6, #12]
    4e94:	beq	50a8 <sf_finish_parse+0x21f8>
    4e98:	mov	r1, #0
    4e9c:	mov	r2, r5
    4ea0:	add	r6, r6, #8
    4ea4:	bl	ea0 <memset@plt>
    4ea8:	str	r5, [r6]
    4eac:	cmp	r5, #19
    4eb0:	ldr	ip, [pc, #944]	; 5268 <sf_finish_parse+0x23b8>
    4eb4:	add	ip, pc, ip
    4eb8:	bhi	4ec8 <sf_finish_parse+0x2018>
    4ebc:	b	50a8 <sf_finish_parse+0x21f8>
    4ec0:	.word	0x00042a5c
    4ec4:	mov	r8, r4
    4ec8:	sub	r0, r5, #20
    4ecc:	mov	r1, #32
    4ed0:	mov	r7, ip
    4ed4:	str	r0, [r6]
    4ed8:	ldr	r6, [r6, #4]
    4edc:	str	r1, [r6, r0]!
    4ee0:	mov	r0, #4
    4ee4:	str	r0, [r6, #12]
    4ee8:	ldr	r5, [r7, r8, lsl #3]!
    4eec:	cmp	r5, #207	; 0xcf
    4ef0:	bhi	4f50 <sf_finish_parse+0x20a0>
    4ef4:	add	r4, r8, #1
    4ef8:	cmp	r8, #15
    4efc:	str	r4, [r9, #92]	; 0x5c
    4f00:	bge	50a8 <sf_finish_parse+0x21f8>
    4f04:	mov	r0, #1024	; 0x400
    4f08:	lsl	r5, r0, r4
    4f0c:	mov	r0, r5
    4f10:	bl	e34 <malloc@plt>
    4f14:	cmp	r0, #0
    4f18:	str	r0, [r7, #12]
    4f1c:	beq	50a8 <sf_finish_parse+0x21f8>
    4f20:	mov	r1, #0
    4f24:	mov	r2, r5
    4f28:	add	r7, r7, #8
    4f2c:	bl	ea0 <memset@plt>
    4f30:	str	r5, [r7]
    4f34:	cmp	r5, #207	; 0xcf
    4f38:	ldr	ip, [pc, #812]	; 526c <sf_finish_parse+0x23bc>
    4f3c:	add	ip, pc, ip
    4f40:	bhi	4f54 <sf_finish_parse+0x20a4>
    4f44:	b	50a8 <sf_finish_parse+0x21f8>
    4f48:	.word	0x00042478
    4f4c:	.word	0x0004240c
    4f50:	mov	r4, r8
    4f54:	sub	r0, r5, #208	; 0xd0
    4f58:	mov	r2, #1761607680	; 0x69000000
    4f5c:	str	r0, [r7]
    4f60:	ldr	r1, [r7, #4]
    4f64:	adds	r0, r1, r0
    4f68:	mov	r1, #21
    4f6c:	str	r2, [r0, #20]
    4f70:	str	r6, [r0, #4]
    4f74:	str	r1, [r0, #8]
    4f78:	str	r0, [r0, #96]	; 0x60
    4f7c:	beq	5044 <sf_finish_parse+0x2194>
    4f80:	ldr	r1, [sl, #96]	; 0x60
    4f84:	mov	r2, r0
    4f88:	ldr	r3, [r2, #44]	; 0x2c
    4f8c:	add	r7, r2, #84	; 0x54
    4f90:	cmp	r3, #0
    4f94:	mov	r3, #84	; 0x54
    4f98:	movweq	r3, #60	; 0x3c
    4f9c:	addeq	r7, r2, #60	; 0x3c
    4fa0:	ldr	r2, [r2, r3]
    4fa4:	str	r1, [r7]
    4fa8:	cmp	r2, #0
    4fac:	bne	4f88 <sf_finish_parse+0x20d8>
    4fb0:	ldr	r1, [r0, #44]	; 0x2c
    4fb4:	cmp	sl, #0
    4fb8:	clz	r1, r1
    4fbc:	lsr	r1, r1, #5
    4fc0:	str	r1, [r0, #44]	; 0x2c
    4fc4:	ldr	r2, [sl, #44]	; 0x2c
    4fc8:	clz	r1, r2
    4fcc:	lsr	r1, r1, #5
    4fd0:	str	r1, [sl, #44]	; 0x2c
    4fd4:	str	sl, [sp, #24]
    4fd8:	beq	5024 <sf_finish_parse+0x2174>
    4fdc:	cmp	r2, #0
    4fe0:	mov	r2, #60	; 0x3c
    4fe4:	add	r1, sl, #60	; 0x3c
    4fe8:	movweq	r2, #84	; 0x54
    4fec:	addeq	r1, sl, #84	; 0x54
    4ff0:	ldr	r2, [sl, r2]
    4ff4:	cmp	r2, #0
    4ff8:	beq	5028 <sf_finish_parse+0x2178>
    4ffc:	ldr	r3, [r2, #44]	; 0x2c
    5000:	add	r1, r2, #84	; 0x54
    5004:	cmp	r3, #0
    5008:	mov	r3, #84	; 0x54
    500c:	movweq	r3, #60	; 0x3c
    5010:	addeq	r1, r2, #60	; 0x3c
    5014:	ldr	r2, [r2, r3]
    5018:	cmp	r2, #0
    501c:	bne	4ffc <sf_finish_parse+0x214c>
    5020:	b	5028 <sf_finish_parse+0x2178>
    5024:	add	r1, sp, #24
    5028:	str	r0, [r1]
    502c:	ldr	r1, [sl, #44]	; 0x2c
    5030:	clz	r1, r1
    5034:	lsr	r1, r1, #5
    5038:	str	r1, [sl, #44]	; 0x2c
    503c:	ldr	r0, [r0, #96]	; 0x60
    5040:	str	r0, [sl, #96]	; 0x60
    5044:	mov	r7, ip
    5048:	ldr	r8, [r9, #32]
    504c:	ldr	r5, [r7, r4, lsl #3]!
    5050:	cmp	r5, #207	; 0xcf
    5054:	bhi	50bc <sf_finish_parse+0x220c>
    5058:	add	r6, r4, #1
    505c:	cmp	r4, #15
    5060:	str	r6, [r9, #92]	; 0x5c
    5064:	bge	50a8 <sf_finish_parse+0x21f8>
    5068:	mov	r0, #1024	; 0x400
    506c:	lsl	r5, r0, r6
    5070:	mov	r0, r5
    5074:	bl	e34 <malloc@plt>
    5078:	cmp	r0, #0
    507c:	str	r0, [r7, #12]
    5080:	beq	50a8 <sf_finish_parse+0x21f8>
    5084:	mov	r1, #0
    5088:	mov	r2, r5
    508c:	add	r7, r7, #8
    5090:	bl	ea0 <memset@plt>
    5094:	str	r5, [r7]
    5098:	cmp	r5, #207	; 0xcf
    509c:	ldr	ip, [pc, #460]	; 5270 <sf_finish_parse+0x23c0>
    50a0:	add	ip, pc, ip
    50a4:	bhi	50c0 <sf_finish_parse+0x2210>
    50a8:	ldr	r0, [pc, #452]	; 5274 <sf_finish_parse+0x23c4>
    50ac:	add	r0, pc, r0
    50b0:	bl	214c <sf_bpf_error>
    50b4:	.word	0x00042344
    50b8:	.word	0x000422a0
    50bc:	mov	r6, r4
    50c0:	sub	r0, r5, #208	; 0xd0
    50c4:	cmp	sl, #0
    50c8:	str	r0, [r7]
    50cc:	ldr	r1, [r7, #4]
    50d0:	add	r0, r1, r0
    50d4:	mov	r1, #6
    50d8:	str	r1, [r0, #8]
    50dc:	str	r8, [r0, #20]
    50e0:	str	r0, [r0, #96]	; 0x60
    50e4:	beq	5114 <sf_finish_parse+0x2264>
    50e8:	mov	r1, sl
    50ec:	ldr	r2, [r1, #44]	; 0x2c
    50f0:	add	r3, r1, #84	; 0x54
    50f4:	cmp	r2, #0
    50f8:	mov	r2, #84	; 0x54
    50fc:	movweq	r2, #60	; 0x3c
    5100:	addeq	r3, r1, #60	; 0x3c
    5104:	ldr	r1, [r1, r2]
    5108:	str	r0, [r3]
    510c:	cmp	r1, #0
    5110:	bne	50ec <sf_finish_parse+0x223c>
    5114:	ldr	r0, [sl, #44]	; 0x2c
    5118:	clz	r0, r0
    511c:	lsr	r0, r0, #5
    5120:	str	r0, [sl, #44]	; 0x2c
    5124:	ldr	r5, [ip, r6, lsl #3]!
    5128:	cmp	r5, #207	; 0xcf
    512c:	bhi	5180 <sf_finish_parse+0x22d0>
    5130:	add	r0, r6, #1
    5134:	cmp	r6, #15
    5138:	str	r0, [r9, #92]	; 0x5c
    513c:	bge	51e0 <sf_finish_parse+0x2330>
    5140:	mov	r1, #1024	; 0x400
    5144:	mov	r4, ip
    5148:	lsl	r5, r1, r0
    514c:	mov	r0, r5
    5150:	bl	e34 <malloc@plt>
    5154:	cmp	r0, #0
    5158:	str	r0, [r4, #12]
    515c:	beq	51e0 <sf_finish_parse+0x2330>
    5160:	mov	r1, #0
    5164:	mov	r2, r5
    5168:	add	r4, r4, #8
    516c:	bl	ea0 <memset@plt>
    5170:	mov	ip, r4
    5174:	cmp	r5, #207	; 0xcf
    5178:	str	r5, [r4]
    517c:	bls	51e0 <sf_finish_parse+0x2330>
    5180:	sub	r0, r5, #208	; 0xd0
    5184:	str	r0, [ip]
    5188:	ldr	r1, [ip, #4]
    518c:	add	r0, r1, r0
    5190:	mov	r1, #6
    5194:	str	r1, [r0, #8]
    5198:	mov	r1, #0
    519c:	str	r1, [r0, #20]
    51a0:	mov	r1, sl
    51a4:	str	r0, [r0, #96]	; 0x60
    51a8:	ldr	r2, [r1, #44]	; 0x2c
    51ac:	add	r3, r1, #84	; 0x54
    51b0:	cmp	r2, #0
    51b4:	mov	r2, #84	; 0x54
    51b8:	movweq	r2, #60	; 0x3c
    51bc:	addeq	r3, r1, #60	; 0x3c
    51c0:	ldr	r1, [r1, r2]
    51c4:	str	r0, [r3]
    51c8:	cmp	r1, #0
    51cc:	bne	51a8 <sf_finish_parse+0x22f8>
    51d0:	ldr	r0, [sl, #96]	; 0x60
    51d4:	str	r0, [r9, #20]
    51d8:	sub	sp, fp, #28
    51dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    51e0:	ldr	r0, [pc, #144]	; 5278 <sf_finish_parse+0x23c8>
    51e4:	add	r0, pc, r0
    51e8:	bl	214c <sf_bpf_error>
    51ec:	.word	0x000421fc
    51f0:	.word	0x00042158
    51f4:	.word	0x000420b0
    51f8:	.word	0x00041ff8
    51fc:	.word	0x00042048
    5200:	.word	0x00041f44
    5204:	.word	0x00041f98
    5208:	.word	0x00041e94
    520c:	.word	0x00041ef0
    5210:	.word	0x00041dec
    5214:	.word	0x00041e34
    5218:	.word	0x00041d30
    521c:	.word	0x00041d74
    5220:	.word	0x00041c70
    5224:	.word	0x00041c54
    5228:	.word	0x00041cc0
    522c:	.word	0x00041c78
    5230:	.word	0x00041bb4
    5234:	.word	0x00041b00
    5238:	.word	0x00041a5c
    523c:	.word	0x000419b4
    5240:	.word	0x0004190c
    5244:	.word	0x00041868
    5248:	.word	0x000418c0
    524c:	.word	0x000417bc
    5250:	.word	0x00041818
    5254:	.word	0x00041714
    5258:	.word	0x00041764
    525c:	.word	0x00041660
    5260:	.word	0x000416c0
    5264:	.word	0x00041dd8
    5268:	.word	0x0004156c
    526c:	.word	0x000414e4
    5270:	.word	0x00041380
    5274:	.word	0x000249b8
    5278:	.word	0x00024880

0000527c <sf_gen_and>:
    527c:	push	{r4, sl, fp, lr}
    5280:	add	fp, sp, #8
    5284:	sub	sp, sp, #4
    5288:	cmp	r0, #0
    528c:	beq	52c0 <sf_gen_and+0x44>
    5290:	ldr	ip, [r1, #96]	; 0x60
    5294:	mov	r3, r0
    5298:	ldr	lr, [r3, #44]	; 0x2c
    529c:	mov	r2, #84	; 0x54
    52a0:	add	r4, r3, #84	; 0x54
    52a4:	cmp	lr, #0
    52a8:	movweq	r2, #60	; 0x3c
    52ac:	addeq	r4, r3, #60	; 0x3c
    52b0:	ldr	r3, [r3, r2]
    52b4:	str	ip, [r4]
    52b8:	cmp	r3, #0
    52bc:	bne	5298 <sf_gen_and+0x1c>
    52c0:	ldr	r2, [r0, #44]	; 0x2c
    52c4:	cmp	r1, #0
    52c8:	clz	r2, r2
    52cc:	lsr	r2, r2, #5
    52d0:	str	r2, [r0, #44]	; 0x2c
    52d4:	ldr	r3, [r1, #44]	; 0x2c
    52d8:	clz	r2, r3
    52dc:	lsr	r2, r2, #5
    52e0:	str	r2, [r1, #44]	; 0x2c
    52e4:	str	r1, [sp]
    52e8:	beq	5334 <sf_gen_and+0xb8>
    52ec:	cmp	r3, #0
    52f0:	mov	r3, #60	; 0x3c
    52f4:	add	r2, r1, #60	; 0x3c
    52f8:	movweq	r3, #84	; 0x54
    52fc:	addeq	r2, r1, #84	; 0x54
    5300:	ldr	r3, [r1, r3]
    5304:	cmp	r3, #0
    5308:	beq	5338 <sf_gen_and+0xbc>
    530c:	ldr	r4, [r3, #44]	; 0x2c
    5310:	add	r2, r3, #84	; 0x54
    5314:	cmp	r4, #0
    5318:	mov	r4, #84	; 0x54
    531c:	movweq	r4, #60	; 0x3c
    5320:	addeq	r2, r3, #60	; 0x3c
    5324:	ldr	r3, [r3, r4]
    5328:	cmp	r3, #0
    532c:	bne	530c <sf_gen_and+0x90>
    5330:	b	5338 <sf_gen_and+0xbc>
    5334:	mov	r2, sp
    5338:	str	r0, [r2]
    533c:	ldr	r2, [r1, #44]	; 0x2c
    5340:	clz	r2, r2
    5344:	lsr	r2, r2, #5
    5348:	str	r2, [r1, #44]	; 0x2c
    534c:	ldr	r0, [r0, #96]	; 0x60
    5350:	str	r0, [r1, #96]	; 0x60
    5354:	sub	sp, fp, #8
    5358:	pop	{r4, sl, fp, pc}

0000535c <sf_gen_or>:
    535c:	push	{r4, sl, fp, lr}
    5360:	add	fp, sp, #8
    5364:	sub	sp, sp, #4
    5368:	ldr	r2, [r0, #44]	; 0x2c
    536c:	cmp	r0, #0
    5370:	clz	r2, r2
    5374:	lsr	lr, r2, #5
    5378:	str	lr, [r0, #44]	; 0x2c
    537c:	beq	53b8 <sf_gen_or+0x5c>
    5380:	ldr	ip, [r1, #96]	; 0x60
    5384:	mov	r3, r0
    5388:	cmp	lr, #0
    538c:	mov	r2, #84	; 0x54
    5390:	add	r4, r3, #84	; 0x54
    5394:	movweq	r2, #60	; 0x3c
    5398:	addeq	r4, r3, #60	; 0x3c
    539c:	ldr	r3, [r3, r2]
    53a0:	str	ip, [r4]
    53a4:	cmp	r3, #0
    53a8:	beq	53b4 <sf_gen_or+0x58>
    53ac:	ldr	lr, [r3, #44]	; 0x2c
    53b0:	b	5388 <sf_gen_or+0x2c>
    53b4:	ldr	lr, [r0, #44]	; 0x2c
    53b8:	clz	r2, lr
    53bc:	cmp	r1, #0
    53c0:	lsr	r2, r2, #5
    53c4:	str	r2, [r0, #44]	; 0x2c
    53c8:	str	r1, [sp]
    53cc:	beq	53fc <sf_gen_or+0xa0>
    53d0:	mov	r3, r1
    53d4:	ldr	r4, [r3, #44]	; 0x2c
    53d8:	add	r2, r3, #84	; 0x54
    53dc:	cmp	r4, #0
    53e0:	mov	r4, #84	; 0x54
    53e4:	movweq	r4, #60	; 0x3c
    53e8:	addeq	r2, r3, #60	; 0x3c
    53ec:	ldr	r3, [r3, r4]
    53f0:	cmp	r3, #0
    53f4:	bne	53d4 <sf_gen_or+0x78>
    53f8:	b	5400 <sf_gen_or+0xa4>
    53fc:	mov	r2, sp
    5400:	str	r0, [r2]
    5404:	ldr	r0, [r0, #96]	; 0x60
    5408:	str	r0, [r1, #96]	; 0x60
    540c:	sub	sp, fp, #8
    5410:	pop	{r4, sl, fp, pc}

00005414 <sf_gen_not>:
    5414:	ldr	r1, [r0, #44]	; 0x2c
    5418:	clz	r1, r1
    541c:	lsr	r1, r1, #5
    5420:	str	r1, [r0, #44]	; 0x2c
    5424:	bx	lr

00005428 <sf_gen_proto_abbrev>:
    5428:	push	{r4, r5, fp, lr}
    542c:	add	fp, sp, #8
    5430:	sub	sp, sp, #8
    5434:	sub	r0, r0, #1
    5438:	cmp	r0, #39	; 0x27
    543c:	bhi	664c <sf_gen_proto_abbrev+0x1224>
    5440:	add	r1, pc, #4
    5444:	ldr	r0, [r1, r0, lsl #2]
    5448:	add	pc, r1, r0
    544c:	.word	0x00001204
    5450:	.word	0x000000a0
    5454:	.word	0x000001c8
    5458:	.word	0x000001d8
    545c:	.word	0x000003e4
    5460:	.word	0x000001e8
    5464:	.word	0x00000454
    5468:	.word	0x00000258
    546c:	.word	0x00000260
    5470:	.word	0x000004c4
    5474:	.word	0x000004dc
    5478:	.word	0x00000198
    547c:	.word	0x000004ec
    5480:	.word	0x00000604
    5484:	.word	0x00000268
    5488:	.word	0x000004fc
    548c:	.word	0x000001a8
    5490:	.word	0x00000614
    5494:	.word	0x00000278
    5498:	.word	0x000002e8
    549c:	.word	0x0000062c
    54a0:	.word	0x00000358
    54a4:	.word	0x00000360
    54a8:	.word	0x0000050c
    54ac:	.word	0x0000069c
    54b0:	.word	0x000001b8
    54b4:	.word	0x000001c0
    54b8:	.word	0x000006b4
    54bc:	.word	0x00000748
    54c0:	.word	0x000006c4
    54c4:	.word	0x000006d4
    54c8:	.word	0x0000051c
    54cc:	.word	0x00000370
    54d0:	.word	0x00001200
    54d4:	.word	0x00001200
    54d8:	.word	0x00000590
    54dc:	.word	0x00000124
    54e0:	.word	0x000000b0
    54e4:	.word	0x00000758
    54e8:	.word	0x00001210
    54ec:	mov	r0, #2048	; 0x800
    54f0:	sub	sp, fp, #8
    54f4:	pop	{r4, r5, fp, lr}
    54f8:	b	6fb4 <gen_linktype>
    54fc:	mov	r0, #26
    5500:	mov	r1, #26
    5504:	mov	r2, #0
    5508:	bl	6670 <gen_proto>
    550c:	mov	r5, r0
    5510:	mov	r0, #27
    5514:	mov	r1, #26
    5518:	mov	r2, #0
    551c:	bl	6670 <gen_proto>
    5520:	mov	r4, r0
    5524:	ldr	r0, [r5, #44]	; 0x2c
    5528:	cmp	r5, #0
    552c:	clz	r0, r0
    5530:	lsr	r0, r0, #5
    5534:	str	r0, [r5, #44]	; 0x2c
    5538:	beq	5c1c <sf_gen_proto_abbrev+0x7f4>
    553c:	ldr	r1, [r4, #96]	; 0x60
    5540:	mov	r2, r5
    5544:	cmp	r0, #0
    5548:	mov	r0, #84	; 0x54
    554c:	add	r3, r2, #84	; 0x54
    5550:	movweq	r0, #60	; 0x3c
    5554:	addeq	r3, r2, #60	; 0x3c
    5558:	ldr	r2, [r2, r0]
    555c:	str	r1, [r3]
    5560:	cmp	r2, #0
    5564:	beq	5c18 <sf_gen_proto_abbrev+0x7f0>
    5568:	ldr	r0, [r2, #44]	; 0x2c
    556c:	b	5544 <sf_gen_proto_abbrev+0x11c>
    5570:	mov	r0, #24
    5574:	mov	r1, #26
    5578:	mov	r2, #0
    557c:	bl	6670 <gen_proto>
    5580:	mov	r5, r0
    5584:	mov	r0, #25
    5588:	mov	r1, #26
    558c:	mov	r2, #0
    5590:	bl	6670 <gen_proto>
    5594:	mov	r4, r0
    5598:	ldr	r0, [r5, #44]	; 0x2c
    559c:	cmp	r5, #0
    55a0:	clz	r0, r0
    55a4:	lsr	r0, r0, #5
    55a8:	str	r0, [r5, #44]	; 0x2c
    55ac:	beq	5c64 <sf_gen_proto_abbrev+0x83c>
    55b0:	ldr	r1, [r4, #96]	; 0x60
    55b4:	mov	r2, r5
    55b8:	cmp	r0, #0
    55bc:	mov	r0, #84	; 0x54
    55c0:	add	r3, r2, #84	; 0x54
    55c4:	movweq	r0, #60	; 0x3c
    55c8:	addeq	r3, r2, #60	; 0x3c
    55cc:	ldr	r2, [r2, r0]
    55d0:	str	r1, [r3]
    55d4:	cmp	r2, #0
    55d8:	beq	5c60 <sf_gen_proto_abbrev+0x838>
    55dc:	ldr	r0, [r2, #44]	; 0x2c
    55e0:	b	55b8 <sf_gen_proto_abbrev+0x190>
    55e4:	movw	r0, #24579	; 0x6003
    55e8:	sub	sp, fp, #8
    55ec:	pop	{r4, r5, fp, lr}
    55f0:	b	6fb4 <gen_linktype>
    55f4:	movw	r0, #34525	; 0x86dd
    55f8:	sub	sp, fp, #8
    55fc:	pop	{r4, r5, fp, lr}
    5600:	b	6fb4 <gen_linktype>
    5604:	mov	r0, #131	; 0x83
    5608:	b	5aec <sf_gen_proto_abbrev+0x6c4>
    560c:	mov	r0, #129	; 0x81
    5610:	b	5aec <sf_gen_proto_abbrev+0x6c4>
    5614:	movw	r0, #2054	; 0x806
    5618:	sub	sp, fp, #8
    561c:	pop	{r4, r5, fp, lr}
    5620:	b	6fb4 <gen_linktype>
    5624:	movw	r0, #32821	; 0x8035
    5628:	sub	sp, fp, #8
    562c:	pop	{r4, r5, fp, lr}
    5630:	b	6fb4 <gen_linktype>
    5634:	mov	r0, #6
    5638:	mov	r1, #2
    563c:	mov	r2, #0
    5640:	bl	6670 <gen_proto>
    5644:	mov	r4, r0
    5648:	mov	r0, #6
    564c:	mov	r1, #17
    5650:	mov	r2, #0
    5654:	bl	6670 <gen_proto>
    5658:	ldr	r1, [r0, #44]	; 0x2c
    565c:	cmp	r0, #0
    5660:	clz	r1, r1
    5664:	lsr	r1, r1, #5
    5668:	str	r1, [r0, #44]	; 0x2c
    566c:	beq	5cac <sf_gen_proto_abbrev+0x884>
    5670:	ldr	r2, [r4, #96]	; 0x60
    5674:	mov	r3, r0
    5678:	cmp	r1, #0
    567c:	mov	r1, #84	; 0x54
    5680:	add	r5, r3, #84	; 0x54
    5684:	movweq	r1, #60	; 0x3c
    5688:	addeq	r5, r3, #60	; 0x3c
    568c:	ldr	r3, [r3, r1]
    5690:	str	r2, [r5]
    5694:	cmp	r3, #0
    5698:	beq	5ca8 <sf_gen_proto_abbrev+0x880>
    569c:	ldr	r1, [r3, #44]	; 0x2c
    56a0:	b	5678 <sf_gen_proto_abbrev+0x250>
    56a4:	mov	r0, #1
    56a8:	b	5914 <sf_gen_proto_abbrev+0x4ec>
    56ac:	mov	r0, #2
    56b0:	b	5914 <sf_gen_proto_abbrev+0x4ec>
    56b4:	movw	r0, #24578	; 0x6002
    56b8:	sub	sp, fp, #8
    56bc:	pop	{r4, r5, fp, lr}
    56c0:	b	6fb4 <gen_linktype>
    56c4:	mov	r0, #51	; 0x33
    56c8:	mov	r1, #2
    56cc:	mov	r2, #0
    56d0:	bl	6670 <gen_proto>
    56d4:	mov	r4, r0
    56d8:	mov	r0, #51	; 0x33
    56dc:	mov	r1, #17
    56e0:	mov	r2, #0
    56e4:	bl	6670 <gen_proto>
    56e8:	ldr	r1, [r0, #44]	; 0x2c
    56ec:	cmp	r0, #0
    56f0:	clz	r1, r1
    56f4:	lsr	r1, r1, #5
    56f8:	str	r1, [r0, #44]	; 0x2c
    56fc:	beq	5cf4 <sf_gen_proto_abbrev+0x8cc>
    5700:	ldr	r2, [r4, #96]	; 0x60
    5704:	mov	r3, r0
    5708:	cmp	r1, #0
    570c:	mov	r1, #84	; 0x54
    5710:	add	r5, r3, #84	; 0x54
    5714:	movweq	r1, #60	; 0x3c
    5718:	addeq	r5, r3, #60	; 0x3c
    571c:	ldr	r3, [r3, r1]
    5720:	str	r2, [r5]
    5724:	cmp	r3, #0
    5728:	beq	5cf0 <sf_gen_proto_abbrev+0x8c8>
    572c:	ldr	r1, [r3, #44]	; 0x2c
    5730:	b	5708 <sf_gen_proto_abbrev+0x2e0>
    5734:	mov	r0, #50	; 0x32
    5738:	mov	r1, #2
    573c:	mov	r2, #0
    5740:	bl	6670 <gen_proto>
    5744:	mov	r4, r0
    5748:	mov	r0, #50	; 0x32
    574c:	mov	r1, #17
    5750:	mov	r2, #0
    5754:	bl	6670 <gen_proto>
    5758:	ldr	r1, [r0, #44]	; 0x2c
    575c:	cmp	r0, #0
    5760:	clz	r1, r1
    5764:	lsr	r1, r1, #5
    5768:	str	r1, [r0, #44]	; 0x2c
    576c:	beq	5d3c <sf_gen_proto_abbrev+0x914>
    5770:	ldr	r2, [r4, #96]	; 0x60
    5774:	mov	r3, r0
    5778:	cmp	r1, #0
    577c:	mov	r1, #84	; 0x54
    5780:	add	r5, r3, #84	; 0x54
    5784:	movweq	r1, #60	; 0x3c
    5788:	addeq	r5, r3, #60	; 0x3c
    578c:	ldr	r3, [r3, r1]
    5790:	str	r2, [r5]
    5794:	cmp	r3, #0
    5798:	beq	5d38 <sf_gen_proto_abbrev+0x910>
    579c:	ldr	r1, [r3, #44]	; 0x2c
    57a0:	b	5778 <sf_gen_proto_abbrev+0x350>
    57a4:	mov	r0, #112	; 0x70
    57a8:	b	5914 <sf_gen_proto_abbrev+0x4ec>
    57ac:	movw	r0, #33011	; 0x80f3
    57b0:	sub	sp, fp, #8
    57b4:	pop	{r4, r5, fp, lr}
    57b8:	b	6fb4 <gen_linktype>
    57bc:	mov	r0, #15
    57c0:	mov	r1, #26
    57c4:	mov	r2, #0
    57c8:	bl	6670 <gen_proto>
    57cc:	mov	r5, r0
    57d0:	mov	r0, #16
    57d4:	mov	r1, #26
    57d8:	mov	r2, #0
    57dc:	bl	6670 <gen_proto>
    57e0:	mov	r4, r0
    57e4:	ldr	r0, [r5, #44]	; 0x2c
    57e8:	cmp	r5, #0
    57ec:	clz	r0, r0
    57f0:	lsr	r0, r0, #5
    57f4:	str	r0, [r5, #44]	; 0x2c
    57f8:	beq	5d84 <sf_gen_proto_abbrev+0x95c>
    57fc:	ldr	r1, [r4, #96]	; 0x60
    5800:	mov	r2, r5
    5804:	cmp	r0, #0
    5808:	mov	r0, #84	; 0x54
    580c:	add	r3, r2, #84	; 0x54
    5810:	movweq	r0, #60	; 0x3c
    5814:	addeq	r3, r2, #60	; 0x3c
    5818:	ldr	r2, [r2, r0]
    581c:	str	r1, [r3]
    5820:	cmp	r2, #0
    5824:	beq	5d80 <sf_gen_proto_abbrev+0x958>
    5828:	ldr	r0, [r2, #44]	; 0x2c
    582c:	b	5804 <sf_gen_proto_abbrev+0x3dc>
    5830:	mov	r0, #132	; 0x84
    5834:	mov	r1, #2
    5838:	mov	r2, #0
    583c:	bl	6670 <gen_proto>
    5840:	mov	r4, r0
    5844:	mov	r0, #132	; 0x84
    5848:	mov	r1, #17
    584c:	mov	r2, #0
    5850:	bl	6670 <gen_proto>
    5854:	ldr	r1, [r0, #44]	; 0x2c
    5858:	cmp	r0, #0
    585c:	clz	r1, r1
    5860:	lsr	r1, r1, #5
    5864:	str	r1, [r0, #44]	; 0x2c
    5868:	beq	5dcc <sf_gen_proto_abbrev+0x9a4>
    586c:	ldr	r2, [r4, #96]	; 0x60
    5870:	mov	r3, r0
    5874:	cmp	r1, #0
    5878:	mov	r1, #84	; 0x54
    587c:	add	r5, r3, #84	; 0x54
    5880:	movweq	r1, #60	; 0x3c
    5884:	addeq	r5, r3, #60	; 0x3c
    5888:	ldr	r3, [r3, r1]
    588c:	str	r2, [r5]
    5890:	cmp	r3, #0
    5894:	beq	5dc8 <sf_gen_proto_abbrev+0x9a0>
    5898:	ldr	r1, [r3, #44]	; 0x2c
    589c:	b	5874 <sf_gen_proto_abbrev+0x44c>
    58a0:	mov	r0, #17
    58a4:	mov	r1, #2
    58a8:	mov	r2, #0
    58ac:	bl	6670 <gen_proto>
    58b0:	mov	r4, r0
    58b4:	mov	r0, #17
    58b8:	mov	r1, #17
    58bc:	mov	r2, #0
    58c0:	bl	6670 <gen_proto>
    58c4:	ldr	r1, [r0, #44]	; 0x2c
    58c8:	cmp	r0, #0
    58cc:	clz	r1, r1
    58d0:	lsr	r1, r1, #5
    58d4:	str	r1, [r0, #44]	; 0x2c
    58d8:	beq	5e14 <sf_gen_proto_abbrev+0x9ec>
    58dc:	ldr	r2, [r4, #96]	; 0x60
    58e0:	mov	r3, r0
    58e4:	cmp	r1, #0
    58e8:	mov	r1, #84	; 0x54
    58ec:	add	r5, r3, #84	; 0x54
    58f0:	movweq	r1, #60	; 0x3c
    58f4:	addeq	r5, r3, #60	; 0x3c
    58f8:	ldr	r3, [r3, r1]
    58fc:	str	r2, [r5]
    5900:	cmp	r3, #0
    5904:	beq	5e10 <sf_gen_proto_abbrev+0x9e8>
    5908:	ldr	r1, [r3, #44]	; 0x2c
    590c:	b	58e4 <sf_gen_proto_abbrev+0x4bc>
    5910:	mov	r0, #9
    5914:	mov	r1, #2
    5918:	mov	r2, #0
    591c:	sub	sp, fp, #8
    5920:	pop	{r4, r5, fp, lr}
    5924:	b	6670 <gen_proto>
    5928:	movw	r0, #32923	; 0x809b
    592c:	sub	sp, fp, #8
    5930:	pop	{r4, r5, fp, lr}
    5934:	b	6fb4 <gen_linktype>
    5938:	movw	r0, #24580	; 0x6004
    593c:	sub	sp, fp, #8
    5940:	pop	{r4, r5, fp, lr}
    5944:	b	6fb4 <gen_linktype>
    5948:	movw	r0, #24577	; 0x6001
    594c:	sub	sp, fp, #8
    5950:	pop	{r4, r5, fp, lr}
    5954:	b	6fb4 <gen_linktype>
    5958:	mov	r0, #254	; 0xfe
    595c:	sub	sp, fp, #8
    5960:	pop	{r4, r5, fp, lr}
    5964:	b	6fb4 <gen_linktype>
    5968:	mov	r0, #16
    596c:	mov	r1, #26
    5970:	mov	r2, #0
    5974:	bl	6670 <gen_proto>
    5978:	mov	r5, r0
    597c:	mov	r0, #17
    5980:	mov	r1, #26
    5984:	mov	r2, #0
    5988:	bl	6670 <gen_proto>
    598c:	mov	r4, r0
    5990:	ldr	r0, [r5, #44]	; 0x2c
    5994:	cmp	r5, #0
    5998:	clz	r0, r0
    599c:	lsr	r0, r0, #5
    59a0:	str	r0, [r5, #44]	; 0x2c
    59a4:	beq	5e5c <sf_gen_proto_abbrev+0xa34>
    59a8:	ldr	r1, [r4, #96]	; 0x60
    59ac:	mov	r2, r5
    59b0:	cmp	r0, #0
    59b4:	mov	r0, #84	; 0x54
    59b8:	add	r3, r2, #84	; 0x54
    59bc:	movweq	r0, #60	; 0x3c
    59c0:	addeq	r3, r2, #60	; 0x3c
    59c4:	ldr	r2, [r2, r0]
    59c8:	str	r1, [r3]
    59cc:	cmp	r2, #0
    59d0:	beq	5e58 <sf_gen_proto_abbrev+0xa30>
    59d4:	ldr	r0, [r2, #44]	; 0x2c
    59d8:	b	59b0 <sf_gen_proto_abbrev+0x588>
    59dc:	mov	r0, #24
    59e0:	mov	r1, #26
    59e4:	mov	r2, #0
    59e8:	bl	6670 <gen_proto>
    59ec:	mov	r5, r0
    59f0:	mov	r0, #25
    59f4:	mov	r1, #26
    59f8:	mov	r2, #0
    59fc:	bl	6670 <gen_proto>
    5a00:	mov	r4, r0
    5a04:	ldr	r0, [r5, #44]	; 0x2c
    5a08:	cmp	r5, #0
    5a0c:	clz	r0, r0
    5a10:	lsr	r0, r0, #5
    5a14:	str	r0, [r5, #44]	; 0x2c
    5a18:	beq	5ea4 <sf_gen_proto_abbrev+0xa7c>
    5a1c:	ldr	r1, [r4, #96]	; 0x60
    5a20:	mov	r2, r5
    5a24:	cmp	r0, #0
    5a28:	mov	r0, #84	; 0x54
    5a2c:	add	r3, r2, #84	; 0x54
    5a30:	movweq	r0, #60	; 0x3c
    5a34:	addeq	r3, r2, #60	; 0x3c
    5a38:	ldr	r2, [r2, r0]
    5a3c:	str	r1, [r3]
    5a40:	cmp	r2, #0
    5a44:	beq	5ea0 <sf_gen_proto_abbrev+0xa78>
    5a48:	ldr	r0, [r2, #44]	; 0x2c
    5a4c:	b	5a24 <sf_gen_proto_abbrev+0x5fc>
    5a50:	movw	r0, #24583	; 0x6007
    5a54:	sub	sp, fp, #8
    5a58:	pop	{r4, r5, fp, lr}
    5a5c:	b	6fb4 <gen_linktype>
    5a60:	mov	r0, #58	; 0x3a
    5a64:	mov	r1, #17
    5a68:	mov	r2, #0
    5a6c:	sub	sp, fp, #8
    5a70:	pop	{r4, r5, fp, lr}
    5a74:	b	6670 <gen_proto>
    5a78:	mov	r0, #103	; 0x67
    5a7c:	mov	r1, #2
    5a80:	mov	r2, #0
    5a84:	bl	6670 <gen_proto>
    5a88:	mov	r4, r0
    5a8c:	mov	r0, #103	; 0x67
    5a90:	mov	r1, #17
    5a94:	mov	r2, #0
    5a98:	bl	6670 <gen_proto>
    5a9c:	ldr	r1, [r0, #44]	; 0x2c
    5aa0:	cmp	r0, #0
    5aa4:	clz	r1, r1
    5aa8:	lsr	r1, r1, #5
    5aac:	str	r1, [r0, #44]	; 0x2c
    5ab0:	beq	5eec <sf_gen_proto_abbrev+0xac4>
    5ab4:	ldr	r2, [r4, #96]	; 0x60
    5ab8:	mov	r3, r0
    5abc:	cmp	r1, #0
    5ac0:	mov	r1, #84	; 0x54
    5ac4:	add	r5, r3, #84	; 0x54
    5ac8:	movweq	r1, #60	; 0x3c
    5acc:	addeq	r5, r3, #60	; 0x3c
    5ad0:	ldr	r3, [r3, r1]
    5ad4:	str	r2, [r5]
    5ad8:	cmp	r3, #0
    5adc:	beq	5ee8 <sf_gen_proto_abbrev+0xac0>
    5ae0:	ldr	r1, [r3, #44]	; 0x2c
    5ae4:	b	5abc <sf_gen_proto_abbrev+0x694>
    5ae8:	mov	r0, #130	; 0x82
    5aec:	mov	r1, #24
    5af0:	mov	r2, #0
    5af4:	sub	sp, fp, #8
    5af8:	pop	{r4, r5, fp, lr}
    5afc:	b	6670 <gen_proto>
    5b00:	mov	r0, #66	; 0x42
    5b04:	sub	sp, fp, #8
    5b08:	pop	{r4, r5, fp, lr}
    5b0c:	b	6fb4 <gen_linktype>
    5b10:	mov	r0, #240	; 0xf0
    5b14:	sub	sp, fp, #8
    5b18:	pop	{r4, r5, fp, lr}
    5b1c:	b	6fb4 <gen_linktype>
    5b20:	mov	r0, #15
    5b24:	mov	r1, #26
    5b28:	mov	r2, #0
    5b2c:	bl	6670 <gen_proto>
    5b30:	mov	r5, r0
    5b34:	mov	r0, #17
    5b38:	mov	r1, #26
    5b3c:	mov	r2, #0
    5b40:	bl	6670 <gen_proto>
    5b44:	mov	r4, r0
    5b48:	ldr	r0, [r5, #44]	; 0x2c
    5b4c:	cmp	r5, #0
    5b50:	clz	r0, r0
    5b54:	lsr	r0, r0, #5
    5b58:	str	r0, [r5, #44]	; 0x2c
    5b5c:	beq	5f34 <sf_gen_proto_abbrev+0xb0c>
    5b60:	ldr	r1, [r4, #96]	; 0x60
    5b64:	mov	r2, r5
    5b68:	cmp	r0, #0
    5b6c:	mov	r0, #84	; 0x54
    5b70:	add	r3, r2, #84	; 0x54
    5b74:	movweq	r0, #60	; 0x3c
    5b78:	addeq	r3, r2, #60	; 0x3c
    5b7c:	ldr	r2, [r2, r0]
    5b80:	str	r1, [r3]
    5b84:	cmp	r2, #0
    5b88:	beq	5f30 <sf_gen_proto_abbrev+0xb08>
    5b8c:	ldr	r0, [r2, #44]	; 0x2c
    5b90:	b	5b68 <sf_gen_proto_abbrev+0x740>
    5b94:	mov	r0, #224	; 0xe0
    5b98:	sub	sp, fp, #8
    5b9c:	pop	{r4, r5, fp, lr}
    5ba0:	b	6fb4 <gen_linktype>
    5ba4:	mov	r0, #18
    5ba8:	mov	r1, #26
    5bac:	mov	r2, #0
    5bb0:	bl	6670 <gen_proto>
    5bb4:	mov	r5, r0
    5bb8:	mov	r0, #20
    5bbc:	mov	r1, #26
    5bc0:	mov	r2, #0
    5bc4:	bl	6670 <gen_proto>
    5bc8:	mov	r4, r0
    5bcc:	ldr	r0, [r5, #44]	; 0x2c
    5bd0:	cmp	r5, #0
    5bd4:	clz	r0, r0
    5bd8:	lsr	r0, r0, #5
    5bdc:	str	r0, [r5, #44]	; 0x2c
    5be0:	beq	5f7c <sf_gen_proto_abbrev+0xb54>
    5be4:	ldr	r1, [r4, #96]	; 0x60
    5be8:	mov	r2, r5
    5bec:	cmp	r0, #0
    5bf0:	mov	r0, #84	; 0x54
    5bf4:	add	r3, r2, #84	; 0x54
    5bf8:	movweq	r0, #60	; 0x3c
    5bfc:	addeq	r3, r2, #60	; 0x3c
    5c00:	ldr	r2, [r2, r0]
    5c04:	str	r1, [r3]
    5c08:	cmp	r2, #0
    5c0c:	beq	5f78 <sf_gen_proto_abbrev+0xb50>
    5c10:	ldr	r0, [r2, #44]	; 0x2c
    5c14:	b	5bec <sf_gen_proto_abbrev+0x7c4>
    5c18:	ldr	r0, [r5, #44]	; 0x2c
    5c1c:	clz	r0, r0
    5c20:	cmp	r4, #0
    5c24:	lsr	r0, r0, #5
    5c28:	str	r0, [r5, #44]	; 0x2c
    5c2c:	str	r4, [sp, #4]
    5c30:	beq	5fc0 <sf_gen_proto_abbrev+0xb98>
    5c34:	mov	r1, r4
    5c38:	ldr	r2, [r1, #44]	; 0x2c
    5c3c:	add	r0, r1, #84	; 0x54
    5c40:	cmp	r2, #0
    5c44:	mov	r2, #84	; 0x54
    5c48:	movweq	r2, #60	; 0x3c
    5c4c:	addeq	r0, r1, #60	; 0x3c
    5c50:	ldr	r1, [r1, r2]
    5c54:	cmp	r1, #0
    5c58:	bne	5c38 <sf_gen_proto_abbrev+0x810>
    5c5c:	b	5fc4 <sf_gen_proto_abbrev+0xb9c>
    5c60:	ldr	r0, [r5, #44]	; 0x2c
    5c64:	clz	r0, r0
    5c68:	cmp	r4, #0
    5c6c:	lsr	r0, r0, #5
    5c70:	str	r0, [r5, #44]	; 0x2c
    5c74:	str	r4, [sp, #4]
    5c78:	beq	5fc0 <sf_gen_proto_abbrev+0xb98>
    5c7c:	mov	r1, r4
    5c80:	ldr	r2, [r1, #44]	; 0x2c
    5c84:	add	r0, r1, #84	; 0x54
    5c88:	cmp	r2, #0
    5c8c:	mov	r2, #84	; 0x54
    5c90:	movweq	r2, #60	; 0x3c
    5c94:	addeq	r0, r1, #60	; 0x3c
    5c98:	ldr	r1, [r1, r2]
    5c9c:	cmp	r1, #0
    5ca0:	bne	5c80 <sf_gen_proto_abbrev+0x858>
    5ca4:	b	5fc4 <sf_gen_proto_abbrev+0xb9c>
    5ca8:	ldr	r1, [r0, #44]	; 0x2c
    5cac:	clz	r1, r1
    5cb0:	cmp	r4, #0
    5cb4:	lsr	r1, r1, #5
    5cb8:	str	r1, [r0, #44]	; 0x2c
    5cbc:	str	r4, [sp, #4]
    5cc0:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    5cc4:	mov	r2, r4
    5cc8:	ldr	r3, [r2, #44]	; 0x2c
    5ccc:	add	r1, r2, #84	; 0x54
    5cd0:	cmp	r3, #0
    5cd4:	mov	r3, #84	; 0x54
    5cd8:	movweq	r3, #60	; 0x3c
    5cdc:	addeq	r1, r2, #60	; 0x3c
    5ce0:	ldr	r2, [r2, r3]
    5ce4:	cmp	r2, #0
    5ce8:	bne	5cc8 <sf_gen_proto_abbrev+0x8a0>
    5cec:	b	6634 <sf_gen_proto_abbrev+0x120c>
    5cf0:	ldr	r1, [r0, #44]	; 0x2c
    5cf4:	clz	r1, r1
    5cf8:	cmp	r4, #0
    5cfc:	lsr	r1, r1, #5
    5d00:	str	r1, [r0, #44]	; 0x2c
    5d04:	str	r4, [sp, #4]
    5d08:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    5d0c:	mov	r2, r4
    5d10:	ldr	r3, [r2, #44]	; 0x2c
    5d14:	add	r1, r2, #84	; 0x54
    5d18:	cmp	r3, #0
    5d1c:	mov	r3, #84	; 0x54
    5d20:	movweq	r3, #60	; 0x3c
    5d24:	addeq	r1, r2, #60	; 0x3c
    5d28:	ldr	r2, [r2, r3]
    5d2c:	cmp	r2, #0
    5d30:	bne	5d10 <sf_gen_proto_abbrev+0x8e8>
    5d34:	b	6634 <sf_gen_proto_abbrev+0x120c>
    5d38:	ldr	r1, [r0, #44]	; 0x2c
    5d3c:	clz	r1, r1
    5d40:	cmp	r4, #0
    5d44:	lsr	r1, r1, #5
    5d48:	str	r1, [r0, #44]	; 0x2c
    5d4c:	str	r4, [sp, #4]
    5d50:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    5d54:	mov	r2, r4
    5d58:	ldr	r3, [r2, #44]	; 0x2c
    5d5c:	add	r1, r2, #84	; 0x54
    5d60:	cmp	r3, #0
    5d64:	mov	r3, #84	; 0x54
    5d68:	movweq	r3, #60	; 0x3c
    5d6c:	addeq	r1, r2, #60	; 0x3c
    5d70:	ldr	r2, [r2, r3]
    5d74:	cmp	r2, #0
    5d78:	bne	5d58 <sf_gen_proto_abbrev+0x930>
    5d7c:	b	6634 <sf_gen_proto_abbrev+0x120c>
    5d80:	ldr	r0, [r5, #44]	; 0x2c
    5d84:	clz	r0, r0
    5d88:	cmp	r4, #0
    5d8c:	lsr	r0, r0, #5
    5d90:	str	r0, [r5, #44]	; 0x2c
    5d94:	str	r4, [sp, #4]
    5d98:	beq	5fdc <sf_gen_proto_abbrev+0xbb4>
    5d9c:	mov	r1, r4
    5da0:	ldr	r2, [r1, #44]	; 0x2c
    5da4:	add	r0, r1, #84	; 0x54
    5da8:	cmp	r2, #0
    5dac:	mov	r2, #84	; 0x54
    5db0:	movweq	r2, #60	; 0x3c
    5db4:	addeq	r0, r1, #60	; 0x3c
    5db8:	ldr	r1, [r1, r2]
    5dbc:	cmp	r1, #0
    5dc0:	bne	5da0 <sf_gen_proto_abbrev+0x978>
    5dc4:	b	5fe0 <sf_gen_proto_abbrev+0xbb8>
    5dc8:	ldr	r1, [r0, #44]	; 0x2c
    5dcc:	clz	r1, r1
    5dd0:	cmp	r4, #0
    5dd4:	lsr	r1, r1, #5
    5dd8:	str	r1, [r0, #44]	; 0x2c
    5ddc:	str	r4, [sp, #4]
    5de0:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    5de4:	mov	r2, r4
    5de8:	ldr	r3, [r2, #44]	; 0x2c
    5dec:	add	r1, r2, #84	; 0x54
    5df0:	cmp	r3, #0
    5df4:	mov	r3, #84	; 0x54
    5df8:	movweq	r3, #60	; 0x3c
    5dfc:	addeq	r1, r2, #60	; 0x3c
    5e00:	ldr	r2, [r2, r3]
    5e04:	cmp	r2, #0
    5e08:	bne	5de8 <sf_gen_proto_abbrev+0x9c0>
    5e0c:	b	6634 <sf_gen_proto_abbrev+0x120c>
    5e10:	ldr	r1, [r0, #44]	; 0x2c
    5e14:	clz	r1, r1
    5e18:	cmp	r4, #0
    5e1c:	lsr	r1, r1, #5
    5e20:	str	r1, [r0, #44]	; 0x2c
    5e24:	str	r4, [sp, #4]
    5e28:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    5e2c:	mov	r2, r4
    5e30:	ldr	r3, [r2, #44]	; 0x2c
    5e34:	add	r1, r2, #84	; 0x54
    5e38:	cmp	r3, #0
    5e3c:	mov	r3, #84	; 0x54
    5e40:	movweq	r3, #60	; 0x3c
    5e44:	addeq	r1, r2, #60	; 0x3c
    5e48:	ldr	r2, [r2, r3]
    5e4c:	cmp	r2, #0
    5e50:	bne	5e30 <sf_gen_proto_abbrev+0xa08>
    5e54:	b	6634 <sf_gen_proto_abbrev+0x120c>
    5e58:	ldr	r0, [r5, #44]	; 0x2c
    5e5c:	clz	r0, r0
    5e60:	cmp	r4, #0
    5e64:	lsr	r0, r0, #5
    5e68:	str	r0, [r5, #44]	; 0x2c
    5e6c:	str	r4, [sp, #4]
    5e70:	beq	6090 <sf_gen_proto_abbrev+0xc68>
    5e74:	mov	r1, r4
    5e78:	ldr	r2, [r1, #44]	; 0x2c
    5e7c:	add	r0, r1, #84	; 0x54
    5e80:	cmp	r2, #0
    5e84:	mov	r2, #84	; 0x54
    5e88:	movweq	r2, #60	; 0x3c
    5e8c:	addeq	r0, r1, #60	; 0x3c
    5e90:	ldr	r1, [r1, r2]
    5e94:	cmp	r1, #0
    5e98:	bne	5e78 <sf_gen_proto_abbrev+0xa50>
    5e9c:	b	6094 <sf_gen_proto_abbrev+0xc6c>
    5ea0:	ldr	r0, [r5, #44]	; 0x2c
    5ea4:	clz	r0, r0
    5ea8:	cmp	r4, #0
    5eac:	lsr	r0, r0, #5
    5eb0:	str	r0, [r5, #44]	; 0x2c
    5eb4:	str	r4, [sp, #4]
    5eb8:	beq	6144 <sf_gen_proto_abbrev+0xd1c>
    5ebc:	mov	r1, r4
    5ec0:	ldr	r2, [r1, #44]	; 0x2c
    5ec4:	add	r0, r1, #84	; 0x54
    5ec8:	cmp	r2, #0
    5ecc:	mov	r2, #84	; 0x54
    5ed0:	movweq	r2, #60	; 0x3c
    5ed4:	addeq	r0, r1, #60	; 0x3c
    5ed8:	ldr	r1, [r1, r2]
    5edc:	cmp	r1, #0
    5ee0:	bne	5ec0 <sf_gen_proto_abbrev+0xa98>
    5ee4:	b	6148 <sf_gen_proto_abbrev+0xd20>
    5ee8:	ldr	r1, [r0, #44]	; 0x2c
    5eec:	clz	r1, r1
    5ef0:	cmp	r4, #0
    5ef4:	lsr	r1, r1, #5
    5ef8:	str	r1, [r0, #44]	; 0x2c
    5efc:	str	r4, [sp, #4]
    5f00:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    5f04:	mov	r2, r4
    5f08:	ldr	r3, [r2, #44]	; 0x2c
    5f0c:	add	r1, r2, #84	; 0x54
    5f10:	cmp	r3, #0
    5f14:	mov	r3, #84	; 0x54
    5f18:	movweq	r3, #60	; 0x3c
    5f1c:	addeq	r1, r2, #60	; 0x3c
    5f20:	ldr	r2, [r2, r3]
    5f24:	cmp	r2, #0
    5f28:	bne	5f08 <sf_gen_proto_abbrev+0xae0>
    5f2c:	b	6634 <sf_gen_proto_abbrev+0x120c>
    5f30:	ldr	r0, [r5, #44]	; 0x2c
    5f34:	clz	r0, r0
    5f38:	cmp	r4, #0
    5f3c:	lsr	r0, r0, #5
    5f40:	str	r0, [r5, #44]	; 0x2c
    5f44:	str	r4, [sp, #4]
    5f48:	beq	6414 <sf_gen_proto_abbrev+0xfec>
    5f4c:	mov	r1, r4
    5f50:	ldr	r2, [r1, #44]	; 0x2c
    5f54:	add	r0, r1, #84	; 0x54
    5f58:	cmp	r2, #0
    5f5c:	mov	r2, #84	; 0x54
    5f60:	movweq	r2, #60	; 0x3c
    5f64:	addeq	r0, r1, #60	; 0x3c
    5f68:	ldr	r1, [r1, r2]
    5f6c:	cmp	r1, #0
    5f70:	bne	5f50 <sf_gen_proto_abbrev+0xb28>
    5f74:	b	6418 <sf_gen_proto_abbrev+0xff0>
    5f78:	ldr	r0, [r5, #44]	; 0x2c
    5f7c:	clz	r0, r0
    5f80:	cmp	r4, #0
    5f84:	lsr	r0, r0, #5
    5f88:	str	r0, [r5, #44]	; 0x2c
    5f8c:	str	r4, [sp, #4]
    5f90:	beq	5fc0 <sf_gen_proto_abbrev+0xb98>
    5f94:	mov	r1, r4
    5f98:	ldr	r2, [r1, #44]	; 0x2c
    5f9c:	add	r0, r1, #84	; 0x54
    5fa0:	cmp	r2, #0
    5fa4:	mov	r2, #84	; 0x54
    5fa8:	movweq	r2, #60	; 0x3c
    5fac:	addeq	r0, r1, #60	; 0x3c
    5fb0:	ldr	r1, [r1, r2]
    5fb4:	cmp	r1, #0
    5fb8:	bne	5f98 <sf_gen_proto_abbrev+0xb70>
    5fbc:	b	5fc4 <sf_gen_proto_abbrev+0xb9c>
    5fc0:	add	r0, sp, #4
    5fc4:	str	r5, [r0]
    5fc8:	ldr	r0, [r5, #96]	; 0x60
    5fcc:	str	r0, [r4, #96]	; 0x60
    5fd0:	mov	r0, r4
    5fd4:	sub	sp, fp, #8
    5fd8:	pop	{r4, r5, fp, pc}
    5fdc:	add	r0, sp, #4
    5fe0:	str	r5, [r0]
    5fe4:	mov	r1, #26
    5fe8:	mov	r2, #0
    5fec:	ldr	r0, [r5, #96]	; 0x60
    5ff0:	str	r0, [r4, #96]	; 0x60
    5ff4:	mov	r0, #17
    5ff8:	bl	6670 <gen_proto>
    5ffc:	ldr	r1, [r0, #44]	; 0x2c
    6000:	cmp	r0, #0
    6004:	clz	r1, r1
    6008:	lsr	r1, r1, #5
    600c:	str	r1, [r0, #44]	; 0x2c
    6010:	beq	604c <sf_gen_proto_abbrev+0xc24>
    6014:	ldr	r2, [r4, #96]	; 0x60
    6018:	mov	r3, r0
    601c:	cmp	r1, #0
    6020:	mov	r1, #84	; 0x54
    6024:	add	r5, r3, #84	; 0x54
    6028:	movweq	r1, #60	; 0x3c
    602c:	addeq	r5, r3, #60	; 0x3c
    6030:	ldr	r3, [r3, r1]
    6034:	str	r2, [r5]
    6038:	cmp	r3, #0
    603c:	beq	6048 <sf_gen_proto_abbrev+0xc20>
    6040:	ldr	r1, [r3, #44]	; 0x2c
    6044:	b	601c <sf_gen_proto_abbrev+0xbf4>
    6048:	ldr	r1, [r0, #44]	; 0x2c
    604c:	clz	r1, r1
    6050:	cmp	r4, #0
    6054:	lsr	r1, r1, #5
    6058:	str	r1, [r0, #44]	; 0x2c
    605c:	str	r4, [sp, #4]
    6060:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    6064:	mov	r2, r4
    6068:	ldr	r3, [r2, #44]	; 0x2c
    606c:	add	r1, r2, #84	; 0x54
    6070:	cmp	r3, #0
    6074:	mov	r3, #84	; 0x54
    6078:	movweq	r3, #60	; 0x3c
    607c:	addeq	r1, r2, #60	; 0x3c
    6080:	ldr	r2, [r2, r3]
    6084:	cmp	r2, #0
    6088:	bne	6068 <sf_gen_proto_abbrev+0xc40>
    608c:	b	6634 <sf_gen_proto_abbrev+0x120c>
    6090:	add	r0, sp, #4
    6094:	str	r5, [r0]
    6098:	mov	r1, #26
    609c:	mov	r2, #0
    60a0:	ldr	r0, [r5, #96]	; 0x60
    60a4:	str	r0, [r4, #96]	; 0x60
    60a8:	mov	r0, #20
    60ac:	bl	6670 <gen_proto>
    60b0:	ldr	r1, [r0, #44]	; 0x2c
    60b4:	cmp	r0, #0
    60b8:	clz	r1, r1
    60bc:	lsr	r1, r1, #5
    60c0:	str	r1, [r0, #44]	; 0x2c
    60c4:	beq	6100 <sf_gen_proto_abbrev+0xcd8>
    60c8:	ldr	r2, [r4, #96]	; 0x60
    60cc:	mov	r3, r0
    60d0:	cmp	r1, #0
    60d4:	mov	r1, #84	; 0x54
    60d8:	add	r5, r3, #84	; 0x54
    60dc:	movweq	r1, #60	; 0x3c
    60e0:	addeq	r5, r3, #60	; 0x3c
    60e4:	ldr	r3, [r3, r1]
    60e8:	str	r2, [r5]
    60ec:	cmp	r3, #0
    60f0:	beq	60fc <sf_gen_proto_abbrev+0xcd4>
    60f4:	ldr	r1, [r3, #44]	; 0x2c
    60f8:	b	60d0 <sf_gen_proto_abbrev+0xca8>
    60fc:	ldr	r1, [r0, #44]	; 0x2c
    6100:	clz	r1, r1
    6104:	cmp	r4, #0
    6108:	lsr	r1, r1, #5
    610c:	str	r1, [r0, #44]	; 0x2c
    6110:	str	r4, [sp, #4]
    6114:	beq	61f8 <sf_gen_proto_abbrev+0xdd0>
    6118:	mov	r2, r4
    611c:	ldr	r3, [r2, #44]	; 0x2c
    6120:	add	r1, r2, #84	; 0x54
    6124:	cmp	r3, #0
    6128:	mov	r3, #84	; 0x54
    612c:	movweq	r3, #60	; 0x3c
    6130:	addeq	r1, r2, #60	; 0x3c
    6134:	ldr	r2, [r2, r3]
    6138:	cmp	r2, #0
    613c:	bne	611c <sf_gen_proto_abbrev+0xcf4>
    6140:	b	61fc <sf_gen_proto_abbrev+0xdd4>
    6144:	add	r0, sp, #4
    6148:	str	r5, [r0]
    614c:	mov	r1, #26
    6150:	mov	r2, #0
    6154:	ldr	r0, [r5, #96]	; 0x60
    6158:	str	r0, [r4, #96]	; 0x60
    615c:	mov	r0, #26
    6160:	bl	6670 <gen_proto>
    6164:	ldr	r1, [r0, #44]	; 0x2c
    6168:	cmp	r0, #0
    616c:	clz	r1, r1
    6170:	lsr	r1, r1, #5
    6174:	str	r1, [r0, #44]	; 0x2c
    6178:	beq	61b4 <sf_gen_proto_abbrev+0xd8c>
    617c:	ldr	r2, [r4, #96]	; 0x60
    6180:	mov	r3, r0
    6184:	cmp	r1, #0
    6188:	mov	r1, #84	; 0x54
    618c:	add	r5, r3, #84	; 0x54
    6190:	movweq	r1, #60	; 0x3c
    6194:	addeq	r5, r3, #60	; 0x3c
    6198:	ldr	r3, [r3, r1]
    619c:	str	r2, [r5]
    61a0:	cmp	r3, #0
    61a4:	beq	61b0 <sf_gen_proto_abbrev+0xd88>
    61a8:	ldr	r1, [r3, #44]	; 0x2c
    61ac:	b	6184 <sf_gen_proto_abbrev+0xd5c>
    61b0:	ldr	r1, [r0, #44]	; 0x2c
    61b4:	clz	r1, r1
    61b8:	cmp	r4, #0
    61bc:	lsr	r1, r1, #5
    61c0:	str	r1, [r0, #44]	; 0x2c
    61c4:	str	r4, [sp, #4]
    61c8:	beq	62ac <sf_gen_proto_abbrev+0xe84>
    61cc:	mov	r2, r4
    61d0:	ldr	r3, [r2, #44]	; 0x2c
    61d4:	add	r1, r2, #84	; 0x54
    61d8:	cmp	r3, #0
    61dc:	mov	r3, #84	; 0x54
    61e0:	movweq	r3, #60	; 0x3c
    61e4:	addeq	r1, r2, #60	; 0x3c
    61e8:	ldr	r2, [r2, r3]
    61ec:	cmp	r2, #0
    61f0:	bne	61d0 <sf_gen_proto_abbrev+0xda8>
    61f4:	b	62b0 <sf_gen_proto_abbrev+0xe88>
    61f8:	add	r1, sp, #4
    61fc:	str	r0, [r1]
    6200:	mov	r1, #26
    6204:	mov	r2, #0
    6208:	ldr	r0, [r0, #96]	; 0x60
    620c:	str	r0, [r4, #96]	; 0x60
    6210:	mov	r0, #25
    6214:	bl	6670 <gen_proto>
    6218:	ldr	r1, [r0, #44]	; 0x2c
    621c:	cmp	r0, #0
    6220:	clz	r1, r1
    6224:	lsr	r1, r1, #5
    6228:	str	r1, [r0, #44]	; 0x2c
    622c:	beq	6268 <sf_gen_proto_abbrev+0xe40>
    6230:	ldr	r2, [r4, #96]	; 0x60
    6234:	mov	r3, r0
    6238:	cmp	r1, #0
    623c:	mov	r1, #84	; 0x54
    6240:	add	r5, r3, #84	; 0x54
    6244:	movweq	r1, #60	; 0x3c
    6248:	addeq	r5, r3, #60	; 0x3c
    624c:	ldr	r3, [r3, r1]
    6250:	str	r2, [r5]
    6254:	cmp	r3, #0
    6258:	beq	6264 <sf_gen_proto_abbrev+0xe3c>
    625c:	ldr	r1, [r3, #44]	; 0x2c
    6260:	b	6238 <sf_gen_proto_abbrev+0xe10>
    6264:	ldr	r1, [r0, #44]	; 0x2c
    6268:	clz	r1, r1
    626c:	cmp	r4, #0
    6270:	lsr	r1, r1, #5
    6274:	str	r1, [r0, #44]	; 0x2c
    6278:	str	r4, [sp, #4]
    627c:	beq	6360 <sf_gen_proto_abbrev+0xf38>
    6280:	mov	r2, r4
    6284:	ldr	r3, [r2, #44]	; 0x2c
    6288:	add	r1, r2, #84	; 0x54
    628c:	cmp	r3, #0
    6290:	mov	r3, #84	; 0x54
    6294:	movweq	r3, #60	; 0x3c
    6298:	addeq	r1, r2, #60	; 0x3c
    629c:	ldr	r2, [r2, r3]
    62a0:	cmp	r2, #0
    62a4:	bne	6284 <sf_gen_proto_abbrev+0xe5c>
    62a8:	b	6364 <sf_gen_proto_abbrev+0xf3c>
    62ac:	add	r1, sp, #4
    62b0:	str	r0, [r1]
    62b4:	mov	r1, #26
    62b8:	mov	r2, #0
    62bc:	ldr	r0, [r0, #96]	; 0x60
    62c0:	str	r0, [r4, #96]	; 0x60
    62c4:	mov	r0, #27
    62c8:	bl	6670 <gen_proto>
    62cc:	ldr	r1, [r0, #44]	; 0x2c
    62d0:	cmp	r0, #0
    62d4:	clz	r1, r1
    62d8:	lsr	r1, r1, #5
    62dc:	str	r1, [r0, #44]	; 0x2c
    62e0:	beq	631c <sf_gen_proto_abbrev+0xef4>
    62e4:	ldr	r2, [r4, #96]	; 0x60
    62e8:	mov	r3, r0
    62ec:	cmp	r1, #0
    62f0:	mov	r1, #84	; 0x54
    62f4:	add	r5, r3, #84	; 0x54
    62f8:	movweq	r1, #60	; 0x3c
    62fc:	addeq	r5, r3, #60	; 0x3c
    6300:	ldr	r3, [r3, r1]
    6304:	str	r2, [r5]
    6308:	cmp	r3, #0
    630c:	beq	6318 <sf_gen_proto_abbrev+0xef0>
    6310:	ldr	r1, [r3, #44]	; 0x2c
    6314:	b	62ec <sf_gen_proto_abbrev+0xec4>
    6318:	ldr	r1, [r0, #44]	; 0x2c
    631c:	clz	r1, r1
    6320:	cmp	r4, #0
    6324:	lsr	r1, r1, #5
    6328:	str	r1, [r0, #44]	; 0x2c
    632c:	str	r4, [sp, #4]
    6330:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    6334:	mov	r2, r4
    6338:	ldr	r3, [r2, #44]	; 0x2c
    633c:	add	r1, r2, #84	; 0x54
    6340:	cmp	r3, #0
    6344:	mov	r3, #84	; 0x54
    6348:	movweq	r3, #60	; 0x3c
    634c:	addeq	r1, r2, #60	; 0x3c
    6350:	ldr	r2, [r2, r3]
    6354:	cmp	r2, #0
    6358:	bne	6338 <sf_gen_proto_abbrev+0xf10>
    635c:	b	6634 <sf_gen_proto_abbrev+0x120c>
    6360:	add	r1, sp, #4
    6364:	str	r0, [r1]
    6368:	mov	r1, #26
    636c:	mov	r2, #0
    6370:	ldr	r0, [r0, #96]	; 0x60
    6374:	str	r0, [r4, #96]	; 0x60
    6378:	mov	r0, #27
    637c:	bl	6670 <gen_proto>
    6380:	ldr	r1, [r0, #44]	; 0x2c
    6384:	cmp	r0, #0
    6388:	clz	r1, r1
    638c:	lsr	r1, r1, #5
    6390:	str	r1, [r0, #44]	; 0x2c
    6394:	beq	63d0 <sf_gen_proto_abbrev+0xfa8>
    6398:	ldr	r2, [r4, #96]	; 0x60
    639c:	mov	r3, r0
    63a0:	cmp	r1, #0
    63a4:	mov	r1, #84	; 0x54
    63a8:	add	r5, r3, #84	; 0x54
    63ac:	movweq	r1, #60	; 0x3c
    63b0:	addeq	r5, r3, #60	; 0x3c
    63b4:	ldr	r3, [r3, r1]
    63b8:	str	r2, [r5]
    63bc:	cmp	r3, #0
    63c0:	beq	63cc <sf_gen_proto_abbrev+0xfa4>
    63c4:	ldr	r1, [r3, #44]	; 0x2c
    63c8:	b	63a0 <sf_gen_proto_abbrev+0xf78>
    63cc:	ldr	r1, [r0, #44]	; 0x2c
    63d0:	clz	r1, r1
    63d4:	cmp	r4, #0
    63d8:	lsr	r1, r1, #5
    63dc:	str	r1, [r0, #44]	; 0x2c
    63e0:	str	r4, [sp, #4]
    63e4:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    63e8:	mov	r2, r4
    63ec:	ldr	r3, [r2, #44]	; 0x2c
    63f0:	add	r1, r2, #84	; 0x54
    63f4:	cmp	r3, #0
    63f8:	mov	r3, #84	; 0x54
    63fc:	movweq	r3, #60	; 0x3c
    6400:	addeq	r1, r2, #60	; 0x3c
    6404:	ldr	r2, [r2, r3]
    6408:	cmp	r2, #0
    640c:	bne	63ec <sf_gen_proto_abbrev+0xfc4>
    6410:	b	6634 <sf_gen_proto_abbrev+0x120c>
    6414:	add	r0, sp, #4
    6418:	str	r5, [r0]
    641c:	mov	r1, #26
    6420:	mov	r2, #0
    6424:	ldr	r0, [r5, #96]	; 0x60
    6428:	str	r0, [r4, #96]	; 0x60
    642c:	mov	r0, #18
    6430:	bl	6670 <gen_proto>
    6434:	ldr	r1, [r0, #44]	; 0x2c
    6438:	cmp	r0, #0
    643c:	clz	r1, r1
    6440:	lsr	r1, r1, #5
    6444:	str	r1, [r0, #44]	; 0x2c
    6448:	beq	6484 <sf_gen_proto_abbrev+0x105c>
    644c:	ldr	r2, [r4, #96]	; 0x60
    6450:	mov	r3, r0
    6454:	cmp	r1, #0
    6458:	mov	r1, #84	; 0x54
    645c:	add	r5, r3, #84	; 0x54
    6460:	movweq	r1, #60	; 0x3c
    6464:	addeq	r5, r3, #60	; 0x3c
    6468:	ldr	r3, [r3, r1]
    646c:	str	r2, [r5]
    6470:	cmp	r3, #0
    6474:	beq	6480 <sf_gen_proto_abbrev+0x1058>
    6478:	ldr	r1, [r3, #44]	; 0x2c
    647c:	b	6454 <sf_gen_proto_abbrev+0x102c>
    6480:	ldr	r1, [r0, #44]	; 0x2c
    6484:	clz	r1, r1
    6488:	cmp	r4, #0
    648c:	lsr	r1, r1, #5
    6490:	str	r1, [r0, #44]	; 0x2c
    6494:	str	r4, [sp, #4]
    6498:	beq	64c8 <sf_gen_proto_abbrev+0x10a0>
    649c:	mov	r2, r4
    64a0:	ldr	r3, [r2, #44]	; 0x2c
    64a4:	add	r1, r2, #84	; 0x54
    64a8:	cmp	r3, #0
    64ac:	mov	r3, #84	; 0x54
    64b0:	movweq	r3, #60	; 0x3c
    64b4:	addeq	r1, r2, #60	; 0x3c
    64b8:	ldr	r2, [r2, r3]
    64bc:	cmp	r2, #0
    64c0:	bne	64a0 <sf_gen_proto_abbrev+0x1078>
    64c4:	b	64cc <sf_gen_proto_abbrev+0x10a4>
    64c8:	add	r1, sp, #4
    64cc:	str	r0, [r1]
    64d0:	mov	r1, #26
    64d4:	mov	r2, #0
    64d8:	ldr	r0, [r0, #96]	; 0x60
    64dc:	str	r0, [r4, #96]	; 0x60
    64e0:	mov	r0, #24
    64e4:	bl	6670 <gen_proto>
    64e8:	ldr	r1, [r0, #44]	; 0x2c
    64ec:	cmp	r0, #0
    64f0:	clz	r1, r1
    64f4:	lsr	r1, r1, #5
    64f8:	str	r1, [r0, #44]	; 0x2c
    64fc:	beq	6538 <sf_gen_proto_abbrev+0x1110>
    6500:	ldr	r2, [r4, #96]	; 0x60
    6504:	mov	r3, r0
    6508:	cmp	r1, #0
    650c:	mov	r1, #84	; 0x54
    6510:	add	r5, r3, #84	; 0x54
    6514:	movweq	r1, #60	; 0x3c
    6518:	addeq	r5, r3, #60	; 0x3c
    651c:	ldr	r3, [r3, r1]
    6520:	str	r2, [r5]
    6524:	cmp	r3, #0
    6528:	beq	6534 <sf_gen_proto_abbrev+0x110c>
    652c:	ldr	r1, [r3, #44]	; 0x2c
    6530:	b	6508 <sf_gen_proto_abbrev+0x10e0>
    6534:	ldr	r1, [r0, #44]	; 0x2c
    6538:	clz	r1, r1
    653c:	cmp	r4, #0
    6540:	lsr	r1, r1, #5
    6544:	str	r1, [r0, #44]	; 0x2c
    6548:	str	r4, [sp, #4]
    654c:	beq	657c <sf_gen_proto_abbrev+0x1154>
    6550:	mov	r2, r4
    6554:	ldr	r3, [r2, #44]	; 0x2c
    6558:	add	r1, r2, #84	; 0x54
    655c:	cmp	r3, #0
    6560:	mov	r3, #84	; 0x54
    6564:	movweq	r3, #60	; 0x3c
    6568:	addeq	r1, r2, #60	; 0x3c
    656c:	ldr	r2, [r2, r3]
    6570:	cmp	r2, #0
    6574:	bne	6554 <sf_gen_proto_abbrev+0x112c>
    6578:	b	6580 <sf_gen_proto_abbrev+0x1158>
    657c:	add	r1, sp, #4
    6580:	str	r0, [r1]
    6584:	mov	r1, #26
    6588:	mov	r2, #0
    658c:	ldr	r0, [r0, #96]	; 0x60
    6590:	str	r0, [r4, #96]	; 0x60
    6594:	mov	r0, #26
    6598:	bl	6670 <gen_proto>
    659c:	ldr	r1, [r0, #44]	; 0x2c
    65a0:	cmp	r0, #0
    65a4:	clz	r1, r1
    65a8:	lsr	r1, r1, #5
    65ac:	str	r1, [r0, #44]	; 0x2c
    65b0:	beq	65ec <sf_gen_proto_abbrev+0x11c4>
    65b4:	ldr	r2, [r4, #96]	; 0x60
    65b8:	mov	r3, r0
    65bc:	cmp	r1, #0
    65c0:	mov	r1, #84	; 0x54
    65c4:	add	r5, r3, #84	; 0x54
    65c8:	movweq	r1, #60	; 0x3c
    65cc:	addeq	r5, r3, #60	; 0x3c
    65d0:	ldr	r3, [r3, r1]
    65d4:	str	r2, [r5]
    65d8:	cmp	r3, #0
    65dc:	beq	65e8 <sf_gen_proto_abbrev+0x11c0>
    65e0:	ldr	r1, [r3, #44]	; 0x2c
    65e4:	b	65bc <sf_gen_proto_abbrev+0x1194>
    65e8:	ldr	r1, [r0, #44]	; 0x2c
    65ec:	clz	r1, r1
    65f0:	cmp	r4, #0
    65f4:	lsr	r1, r1, #5
    65f8:	str	r1, [r0, #44]	; 0x2c
    65fc:	str	r4, [sp, #4]
    6600:	beq	6630 <sf_gen_proto_abbrev+0x1208>
    6604:	mov	r2, r4
    6608:	ldr	r3, [r2, #44]	; 0x2c
    660c:	add	r1, r2, #84	; 0x54
    6610:	cmp	r3, #0
    6614:	mov	r3, #84	; 0x54
    6618:	movweq	r3, #60	; 0x3c
    661c:	addeq	r1, r2, #60	; 0x3c
    6620:	ldr	r2, [r2, r3]
    6624:	cmp	r2, #0
    6628:	bne	6608 <sf_gen_proto_abbrev+0x11e0>
    662c:	b	6634 <sf_gen_proto_abbrev+0x120c>
    6630:	add	r1, sp, #4
    6634:	str	r0, [r1]
    6638:	ldr	r0, [r0, #96]	; 0x60
    663c:	str	r0, [r4, #96]	; 0x60
    6640:	mov	r0, r4
    6644:	sub	sp, fp, #8
    6648:	pop	{r4, r5, fp, pc}
    664c:	bl	f24 <abort@plt>
    6650:	ldr	r0, [pc, #16]	; 6668 <sf_gen_proto_abbrev+0x1240>
    6654:	add	r0, pc, r0
    6658:	bl	214c <sf_bpf_error>
    665c:	ldr	r0, [pc, #8]	; 666c <sf_gen_proto_abbrev+0x1244>
    6660:	add	r0, pc, r0
    6664:	bl	214c <sf_bpf_error>
    6668:	.word	0x0002291b
    666c:	.word	0x00022933

00006670 <gen_proto>:
    6670:	push	{r4, r5, r6, sl, fp, lr}
    6674:	add	fp, sp, #16
    6678:	sub	sp, sp, #8
    667c:	cmp	r2, #0
    6680:	bne	6e64 <gen_proto+0x7f4>
    6684:	cmp	r1, #40	; 0x28
    6688:	bhi	6e48 <gen_proto+0x7d8>
    668c:	mov	r5, r0
    6690:	add	r0, pc, #4
    6694:	ldr	r1, [r0, r1, lsl #2]
    6698:	add	pc, r0, r1
    669c:	.word	0x000000a4
    66a0:	.word	0x0000034c
    66a4:	.word	0x000001ac
    66a8:	.word	0x000007d4
    66ac:	.word	0x000007e0
    66b0:	.word	0x000007ec
    66b4:	.word	0x000007f8
    66b8:	.word	0x00000804
    66bc:	.word	0x00000810
    66c0:	.word	0x0000081c
    66c4:	.word	0x00000828
    66c8:	.word	0x00000834
    66cc:	.word	0x00000840
    66d0:	.word	0x0000084c
    66d4:	.word	0x00000858
    66d8:	.word	0x00000864
    66dc:	.word	0x000007bc
    66e0:	.word	0x0000035c
    66e4:	.word	0x000007b0
    66e8:	.word	0x000007a0
    66ec:	.word	0x000007a0
    66f0:	.word	0x000008a0
    66f4:	.word	0x000008ac
    66f8:	.word	0x000007ac
    66fc:	.word	0x00000174
    6700:	.word	0x000007ac
    6704:	.word	0x00000278
    6708:	.word	0x000007ac
    670c:	.word	0x00000870
    6710:	.word	0x0000087c
    6714:	.word	0x00000888
    6718:	.word	0x000007ac
    671c:	.word	0x000007ac
    6720:	.word	0x000007ac
    6724:	.word	0x000007ac
    6728:	.word	0x000007ac
    672c:	.word	0x000007ac
    6730:	.word	0x000007ac
    6734:	.word	0x000007ac
    6738:	.word	0x000007ac
    673c:	.word	0x00000894
    6740:	mov	r0, #2048	; 0x800
    6744:	bl	6fb4 <gen_linktype>
    6748:	mov	r6, r0
    674c:	mov	r0, #3
    6750:	mov	r1, #9
    6754:	mov	r2, #16
    6758:	mov	r3, r5
    675c:	bl	a0a4 <gen_cmp>
    6760:	mov	r4, r0
    6764:	cmp	r6, #0
    6768:	beq	679c <gen_proto+0x12c>
    676c:	ldr	r0, [r4, #96]	; 0x60
    6770:	mov	r1, r6
    6774:	ldr	r2, [r1, #44]	; 0x2c
    6778:	add	r3, r1, #84	; 0x54
    677c:	cmp	r2, #0
    6780:	mov	r2, #84	; 0x54
    6784:	movweq	r2, #60	; 0x3c
    6788:	addeq	r3, r1, #60	; 0x3c
    678c:	ldr	r1, [r1, r2]
    6790:	str	r0, [r3]
    6794:	cmp	r1, #0
    6798:	bne	6774 <gen_proto+0x104>
    679c:	ldr	r0, [r6, #44]	; 0x2c
    67a0:	cmp	r4, #0
    67a4:	clz	r0, r0
    67a8:	lsr	r0, r0, #5
    67ac:	str	r0, [r6, #44]	; 0x2c
    67b0:	ldr	r1, [r4, #44]	; 0x2c
    67b4:	clz	r0, r1
    67b8:	lsr	r0, r0, #5
    67bc:	str	r0, [r4, #44]	; 0x2c
    67c0:	str	r4, [sp, #4]
    67c4:	beq	6ac4 <gen_proto+0x454>
    67c8:	cmp	r1, #0
    67cc:	mov	r1, #60	; 0x3c
    67d0:	add	r0, r4, #60	; 0x3c
    67d4:	movweq	r1, #84	; 0x54
    67d8:	addeq	r0, r4, #84	; 0x54
    67dc:	ldr	r1, [r4, r1]
    67e0:	cmp	r1, #0
    67e4:	beq	6ac8 <gen_proto+0x458>
    67e8:	ldr	r2, [r1, #44]	; 0x2c
    67ec:	add	r0, r1, #84	; 0x54
    67f0:	cmp	r2, #0
    67f4:	mov	r2, #84	; 0x54
    67f8:	movweq	r2, #60	; 0x3c
    67fc:	addeq	r0, r1, #60	; 0x3c
    6800:	ldr	r1, [r1, r2]
    6804:	cmp	r1, #0
    6808:	bne	67e8 <gen_proto+0x178>
    680c:	b	6ac8 <gen_proto+0x458>
    6810:	ldr	r0, [pc, #1852]	; 6f54 <gen_proto+0x8e4>
    6814:	add	r0, pc, r0
    6818:	ldr	r0, [r0, #36]	; 0x24
    681c:	cmp	r0, #104	; 0x68
    6820:	beq	6c7c <gen_proto+0x60c>
    6824:	cmp	r0, #107	; 0x6b
    6828:	bne	6d48 <gen_proto+0x6d8>
    682c:	orr	r3, r5, #768	; 0x300
    6830:	mov	r0, #1
    6834:	mov	r1, #2
    6838:	mov	r2, #8
    683c:	sub	sp, fp, #16
    6840:	pop	{r4, r5, r6, sl, fp, lr}
    6844:	b	a0a4 <gen_cmp>
    6848:	mov	r0, #2048	; 0x800
    684c:	bl	6fb4 <gen_linktype>
    6850:	mov	r4, r0
    6854:	mov	r0, #3
    6858:	mov	r1, #9
    685c:	mov	r2, #16
    6860:	mov	r3, r5
    6864:	bl	a0a4 <gen_cmp>
    6868:	cmp	r4, #0
    686c:	beq	68a0 <gen_proto+0x230>
    6870:	ldr	r1, [r0, #96]	; 0x60
    6874:	mov	r2, r4
    6878:	ldr	r3, [r2, #44]	; 0x2c
    687c:	add	r6, r2, #84	; 0x54
    6880:	cmp	r3, #0
    6884:	mov	r3, #84	; 0x54
    6888:	movweq	r3, #60	; 0x3c
    688c:	addeq	r6, r2, #60	; 0x3c
    6890:	ldr	r2, [r2, r3]
    6894:	str	r1, [r6]
    6898:	cmp	r2, #0
    689c:	bne	6878 <gen_proto+0x208>
    68a0:	ldr	r1, [r4, #44]	; 0x2c
    68a4:	cmp	r0, #0
    68a8:	clz	r1, r1
    68ac:	lsr	r1, r1, #5
    68b0:	str	r1, [r4, #44]	; 0x2c
    68b4:	ldr	r2, [r0, #44]	; 0x2c
    68b8:	clz	r1, r2
    68bc:	lsr	r1, r1, #5
    68c0:	str	r1, [r0, #44]	; 0x2c
    68c4:	str	r0, [sp, #4]
    68c8:	beq	6e14 <gen_proto+0x7a4>
    68cc:	cmp	r2, #0
    68d0:	mov	r2, #60	; 0x3c
    68d4:	add	r1, r0, #60	; 0x3c
    68d8:	movweq	r2, #84	; 0x54
    68dc:	addeq	r1, r0, #84	; 0x54
    68e0:	ldr	r2, [r0, r2]
    68e4:	cmp	r2, #0
    68e8:	beq	6e18 <gen_proto+0x7a8>
    68ec:	ldr	r3, [r2, #44]	; 0x2c
    68f0:	add	r1, r2, #84	; 0x54
    68f4:	cmp	r3, #0
    68f8:	mov	r3, #84	; 0x54
    68fc:	movweq	r3, #60	; 0x3c
    6900:	addeq	r1, r2, #60	; 0x3c
    6904:	ldr	r2, [r2, r3]
    6908:	cmp	r2, #0
    690c:	bne	68ec <gen_proto+0x27c>
    6910:	b	6e18 <gen_proto+0x7a8>
    6914:	mov	r0, #131	; 0x83
    6918:	mov	r1, #24
    691c:	mov	r2, #0
    6920:	bl	6670 <gen_proto>
    6924:	mov	r4, r0
    6928:	mov	r0, #4
    692c:	mov	r1, #4
    6930:	mov	r2, #16
    6934:	mov	r3, r5
    6938:	bl	a0a4 <gen_cmp>
    693c:	cmp	r4, #0
    6940:	beq	6974 <gen_proto+0x304>
    6944:	ldr	r1, [r0, #96]	; 0x60
    6948:	mov	r2, r4
    694c:	ldr	r3, [r2, #44]	; 0x2c
    6950:	add	r6, r2, #84	; 0x54
    6954:	cmp	r3, #0
    6958:	mov	r3, #84	; 0x54
    695c:	movweq	r3, #60	; 0x3c
    6960:	addeq	r6, r2, #60	; 0x3c
    6964:	ldr	r2, [r2, r3]
    6968:	str	r1, [r6]
    696c:	cmp	r2, #0
    6970:	bne	694c <gen_proto+0x2dc>
    6974:	ldr	r1, [r4, #44]	; 0x2c
    6978:	cmp	r0, #0
    697c:	clz	r1, r1
    6980:	lsr	r1, r1, #5
    6984:	str	r1, [r4, #44]	; 0x2c
    6988:	ldr	r2, [r0, #44]	; 0x2c
    698c:	clz	r1, r2
    6990:	lsr	r1, r1, #5
    6994:	str	r1, [r0, #44]	; 0x2c
    6998:	str	r0, [sp, #4]
    699c:	beq	6e14 <gen_proto+0x7a4>
    69a0:	cmp	r2, #0
    69a4:	mov	r2, #60	; 0x3c
    69a8:	add	r1, r0, #60	; 0x3c
    69ac:	movweq	r2, #84	; 0x54
    69b0:	addeq	r1, r0, #84	; 0x54
    69b4:	ldr	r2, [r0, r2]
    69b8:	cmp	r2, #0
    69bc:	beq	6e18 <gen_proto+0x7a8>
    69c0:	ldr	r3, [r2, #44]	; 0x2c
    69c4:	add	r1, r2, #84	; 0x54
    69c8:	cmp	r3, #0
    69cc:	mov	r3, #84	; 0x54
    69d0:	movweq	r3, #60	; 0x3c
    69d4:	addeq	r1, r2, #60	; 0x3c
    69d8:	ldr	r2, [r2, r3]
    69dc:	cmp	r2, #0
    69e0:	bne	69c0 <gen_proto+0x350>
    69e4:	b	6e18 <gen_proto+0x7a8>
    69e8:	mov	r0, r5
    69ec:	sub	sp, fp, #16
    69f0:	pop	{r4, r5, r6, sl, fp, lr}
    69f4:	b	6fb4 <gen_linktype>
    69f8:	movw	r0, #34525	; 0x86dd
    69fc:	bl	6fb4 <gen_linktype>
    6a00:	mov	r4, r0
    6a04:	mov	r0, #3
    6a08:	mov	r1, #6
    6a0c:	mov	r2, #16
    6a10:	mov	r3, r5
    6a14:	bl	a0a4 <gen_cmp>
    6a18:	cmp	r4, #0
    6a1c:	beq	6a50 <gen_proto+0x3e0>
    6a20:	ldr	r1, [r0, #96]	; 0x60
    6a24:	mov	r2, r4
    6a28:	ldr	r3, [r2, #44]	; 0x2c
    6a2c:	add	r6, r2, #84	; 0x54
    6a30:	cmp	r3, #0
    6a34:	mov	r3, #84	; 0x54
    6a38:	movweq	r3, #60	; 0x3c
    6a3c:	addeq	r6, r2, #60	; 0x3c
    6a40:	ldr	r2, [r2, r3]
    6a44:	str	r1, [r6]
    6a48:	cmp	r2, #0
    6a4c:	bne	6a28 <gen_proto+0x3b8>
    6a50:	ldr	r1, [r4, #44]	; 0x2c
    6a54:	cmp	r0, #0
    6a58:	clz	r1, r1
    6a5c:	lsr	r1, r1, #5
    6a60:	str	r1, [r4, #44]	; 0x2c
    6a64:	ldr	r2, [r0, #44]	; 0x2c
    6a68:	clz	r1, r2
    6a6c:	lsr	r1, r1, #5
    6a70:	str	r1, [r0, #44]	; 0x2c
    6a74:	str	r0, [sp, #4]
    6a78:	beq	6e14 <gen_proto+0x7a4>
    6a7c:	cmp	r2, #0
    6a80:	mov	r2, #60	; 0x3c
    6a84:	add	r1, r0, #60	; 0x3c
    6a88:	movweq	r2, #84	; 0x54
    6a8c:	addeq	r1, r0, #84	; 0x54
    6a90:	ldr	r2, [r0, r2]
    6a94:	cmp	r2, #0
    6a98:	beq	6e18 <gen_proto+0x7a8>
    6a9c:	ldr	r3, [r2, #44]	; 0x2c
    6aa0:	add	r1, r2, #84	; 0x54
    6aa4:	cmp	r3, #0
    6aa8:	mov	r3, #84	; 0x54
    6aac:	movweq	r3, #60	; 0x3c
    6ab0:	addeq	r1, r2, #60	; 0x3c
    6ab4:	ldr	r2, [r2, r3]
    6ab8:	cmp	r2, #0
    6abc:	bne	6a9c <gen_proto+0x42c>
    6ac0:	b	6e18 <gen_proto+0x7a8>
    6ac4:	add	r0, sp, #4
    6ac8:	str	r6, [r0]
    6acc:	ldr	r0, [r4, #44]	; 0x2c
    6ad0:	clz	r0, r0
    6ad4:	lsr	r0, r0, #5
    6ad8:	str	r0, [r4, #44]	; 0x2c
    6adc:	ldr	r0, [r6, #96]	; 0x60
    6ae0:	str	r0, [r4, #96]	; 0x60
    6ae4:	movw	r0, #34525	; 0x86dd
    6ae8:	bl	6fb4 <gen_linktype>
    6aec:	mov	r6, r0
    6af0:	mov	r0, #3
    6af4:	mov	r1, #6
    6af8:	mov	r2, #16
    6afc:	mov	r3, r5
    6b00:	bl	a0a4 <gen_cmp>
    6b04:	cmp	r6, #0
    6b08:	beq	6b3c <gen_proto+0x4cc>
    6b0c:	ldr	r1, [r0, #96]	; 0x60
    6b10:	mov	r2, r6
    6b14:	ldr	r3, [r2, #44]	; 0x2c
    6b18:	add	r5, r2, #84	; 0x54
    6b1c:	cmp	r3, #0
    6b20:	mov	r3, #84	; 0x54
    6b24:	movweq	r3, #60	; 0x3c
    6b28:	addeq	r5, r2, #60	; 0x3c
    6b2c:	ldr	r2, [r2, r3]
    6b30:	str	r1, [r5]
    6b34:	cmp	r2, #0
    6b38:	bne	6b14 <gen_proto+0x4a4>
    6b3c:	ldr	r1, [r6, #44]	; 0x2c
    6b40:	cmp	r0, #0
    6b44:	clz	r1, r1
    6b48:	lsr	r1, r1, #5
    6b4c:	str	r1, [r6, #44]	; 0x2c
    6b50:	ldr	r2, [r0, #44]	; 0x2c
    6b54:	clz	r1, r2
    6b58:	lsr	r1, r1, #5
    6b5c:	str	r1, [r0, #44]	; 0x2c
    6b60:	str	r0, [sp, #4]
    6b64:	beq	6bb0 <gen_proto+0x540>
    6b68:	cmp	r2, #0
    6b6c:	mov	r2, #60	; 0x3c
    6b70:	add	r1, r0, #60	; 0x3c
    6b74:	movweq	r2, #84	; 0x54
    6b78:	addeq	r1, r0, #84	; 0x54
    6b7c:	ldr	r2, [r0, r2]
    6b80:	cmp	r2, #0
    6b84:	beq	6bb4 <gen_proto+0x544>
    6b88:	ldr	r3, [r2, #44]	; 0x2c
    6b8c:	add	r1, r2, #84	; 0x54
    6b90:	cmp	r3, #0
    6b94:	mov	r3, #84	; 0x54
    6b98:	movweq	r3, #60	; 0x3c
    6b9c:	addeq	r1, r2, #60	; 0x3c
    6ba0:	ldr	r2, [r2, r3]
    6ba4:	cmp	r2, #0
    6ba8:	bne	6b88 <gen_proto+0x518>
    6bac:	b	6bb4 <gen_proto+0x544>
    6bb0:	add	r1, sp, #4
    6bb4:	str	r6, [r1]
    6bb8:	cmp	r4, #0
    6bbc:	ldr	r1, [r0, #44]	; 0x2c
    6bc0:	clz	r1, r1
    6bc4:	lsr	r1, r1, #5
    6bc8:	str	r1, [r0, #44]	; 0x2c
    6bcc:	ldr	r1, [r6, #96]	; 0x60
    6bd0:	str	r1, [r0, #96]	; 0x60
    6bd4:	ldr	r1, [r4, #44]	; 0x2c
    6bd8:	clz	r1, r1
    6bdc:	lsr	r1, r1, #5
    6be0:	str	r1, [r4, #44]	; 0x2c
    6be4:	beq	6c20 <gen_proto+0x5b0>
    6be8:	ldr	r2, [r0, #96]	; 0x60
    6bec:	mov	r3, r4
    6bf0:	cmp	r1, #0
    6bf4:	mov	r1, #84	; 0x54
    6bf8:	add	r6, r3, #84	; 0x54
    6bfc:	movweq	r1, #60	; 0x3c
    6c00:	addeq	r6, r3, #60	; 0x3c
    6c04:	ldr	r3, [r3, r1]
    6c08:	str	r2, [r6]
    6c0c:	cmp	r3, #0
    6c10:	beq	6c1c <gen_proto+0x5ac>
    6c14:	ldr	r1, [r3, #44]	; 0x2c
    6c18:	b	6bf0 <gen_proto+0x580>
    6c1c:	ldr	r1, [r4, #44]	; 0x2c
    6c20:	clz	r1, r1
    6c24:	cmp	r0, #0
    6c28:	lsr	r1, r1, #5
    6c2c:	str	r1, [r4, #44]	; 0x2c
    6c30:	str	r0, [sp, #4]
    6c34:	beq	6c64 <gen_proto+0x5f4>
    6c38:	mov	r2, r0
    6c3c:	ldr	r3, [r2, #44]	; 0x2c
    6c40:	add	r1, r2, #84	; 0x54
    6c44:	cmp	r3, #0
    6c48:	mov	r3, #84	; 0x54
    6c4c:	movweq	r3, #60	; 0x3c
    6c50:	addeq	r1, r2, #60	; 0x3c
    6c54:	ldr	r2, [r2, r3]
    6c58:	cmp	r2, #0
    6c5c:	bne	6c3c <gen_proto+0x5cc>
    6c60:	b	6c68 <gen_proto+0x5f8>
    6c64:	add	r1, sp, #4
    6c68:	str	r4, [r1]
    6c6c:	ldr	r1, [r4, #96]	; 0x60
    6c70:	str	r1, [r0, #96]	; 0x60
    6c74:	sub	sp, fp, #16
    6c78:	pop	{r4, r5, r6, sl, fp, pc}
    6c7c:	movw	r0, #65278	; 0xfefe
    6c80:	bl	6fb4 <gen_linktype>
    6c84:	mov	r4, r0
    6c88:	mov	r0, #4
    6c8c:	mov	r1, #1
    6c90:	mov	r2, #16
    6c94:	mov	r3, r5
    6c98:	bl	a0a4 <gen_cmp>
    6c9c:	cmp	r4, #0
    6ca0:	beq	6cd4 <gen_proto+0x664>
    6ca4:	ldr	r1, [r0, #96]	; 0x60
    6ca8:	mov	r2, r4
    6cac:	ldr	r3, [r2, #44]	; 0x2c
    6cb0:	add	r6, r2, #84	; 0x54
    6cb4:	cmp	r3, #0
    6cb8:	mov	r3, #84	; 0x54
    6cbc:	movweq	r3, #60	; 0x3c
    6cc0:	addeq	r6, r2, #60	; 0x3c
    6cc4:	ldr	r2, [r2, r3]
    6cc8:	str	r1, [r6]
    6ccc:	cmp	r2, #0
    6cd0:	bne	6cac <gen_proto+0x63c>
    6cd4:	ldr	r1, [r4, #44]	; 0x2c
    6cd8:	cmp	r0, #0
    6cdc:	clz	r1, r1
    6ce0:	lsr	r1, r1, #5
    6ce4:	str	r1, [r4, #44]	; 0x2c
    6ce8:	ldr	r2, [r0, #44]	; 0x2c
    6cec:	clz	r1, r2
    6cf0:	lsr	r1, r1, #5
    6cf4:	str	r1, [r0, #44]	; 0x2c
    6cf8:	str	r0, [sp, #4]
    6cfc:	beq	6e14 <gen_proto+0x7a4>
    6d00:	cmp	r2, #0
    6d04:	mov	r2, #60	; 0x3c
    6d08:	add	r1, r0, #60	; 0x3c
    6d0c:	movweq	r2, #84	; 0x54
    6d10:	addeq	r1, r0, #84	; 0x54
    6d14:	ldr	r2, [r0, r2]
    6d18:	cmp	r2, #0
    6d1c:	beq	6e18 <gen_proto+0x7a8>
    6d20:	ldr	r3, [r2, #44]	; 0x2c
    6d24:	add	r1, r2, #84	; 0x54
    6d28:	cmp	r3, #0
    6d2c:	mov	r3, #84	; 0x54
    6d30:	movweq	r3, #60	; 0x3c
    6d34:	addeq	r1, r2, #60	; 0x3c
    6d38:	ldr	r2, [r2, r3]
    6d3c:	cmp	r2, #0
    6d40:	bne	6d20 <gen_proto+0x6b0>
    6d44:	b	6e18 <gen_proto+0x7a8>
    6d48:	mov	r0, #254	; 0xfe
    6d4c:	bl	6fb4 <gen_linktype>
    6d50:	mov	r4, r0
    6d54:	mov	r0, #4
    6d58:	mov	r1, #0
    6d5c:	mov	r2, #16
    6d60:	mov	r3, r5
    6d64:	bl	a0a4 <gen_cmp>
    6d68:	cmp	r4, #0
    6d6c:	beq	6da0 <gen_proto+0x730>
    6d70:	ldr	r1, [r0, #96]	; 0x60
    6d74:	mov	r2, r4
    6d78:	ldr	r3, [r2, #44]	; 0x2c
    6d7c:	add	r6, r2, #84	; 0x54
    6d80:	cmp	r3, #0
    6d84:	mov	r3, #84	; 0x54
    6d88:	movweq	r3, #60	; 0x3c
    6d8c:	addeq	r6, r2, #60	; 0x3c
    6d90:	ldr	r2, [r2, r3]
    6d94:	str	r1, [r6]
    6d98:	cmp	r2, #0
    6d9c:	bne	6d78 <gen_proto+0x708>
    6da0:	ldr	r1, [r4, #44]	; 0x2c
    6da4:	cmp	r0, #0
    6da8:	clz	r1, r1
    6dac:	lsr	r1, r1, #5
    6db0:	str	r1, [r4, #44]	; 0x2c
    6db4:	ldr	r2, [r0, #44]	; 0x2c
    6db8:	clz	r1, r2
    6dbc:	lsr	r1, r1, #5
    6dc0:	str	r1, [r0, #44]	; 0x2c
    6dc4:	str	r0, [sp, #4]
    6dc8:	beq	6e14 <gen_proto+0x7a4>
    6dcc:	cmp	r2, #0
    6dd0:	mov	r2, #60	; 0x3c
    6dd4:	add	r1, r0, #60	; 0x3c
    6dd8:	movweq	r2, #84	; 0x54
    6ddc:	addeq	r1, r0, #84	; 0x54
    6de0:	ldr	r2, [r0, r2]
    6de4:	cmp	r2, #0
    6de8:	beq	6e18 <gen_proto+0x7a8>
    6dec:	ldr	r3, [r2, #44]	; 0x2c
    6df0:	add	r1, r2, #84	; 0x54
    6df4:	cmp	r3, #0
    6df8:	mov	r3, #84	; 0x54
    6dfc:	movweq	r3, #60	; 0x3c
    6e00:	addeq	r1, r2, #60	; 0x3c
    6e04:	ldr	r2, [r2, r3]
    6e08:	cmp	r2, #0
    6e0c:	bne	6dec <gen_proto+0x77c>
    6e10:	b	6e18 <gen_proto+0x7a8>
    6e14:	add	r1, sp, #4
    6e18:	str	r4, [r1]
    6e1c:	ldr	r1, [r0, #44]	; 0x2c
    6e20:	clz	r1, r1
    6e24:	lsr	r1, r1, #5
    6e28:	str	r1, [r0, #44]	; 0x2c
    6e2c:	ldr	r1, [r4, #96]	; 0x60
    6e30:	str	r1, [r0, #96]	; 0x60
    6e34:	sub	sp, fp, #16
    6e38:	pop	{r4, r5, r6, sl, fp, pc}
    6e3c:	ldr	r0, [pc, #344]	; 6f9c <gen_proto+0x92c>
    6e40:	add	r0, pc, r0
    6e44:	bl	214c <sf_bpf_error>
    6e48:	bl	f24 <abort@plt>
    6e4c:	ldr	r0, [pc, #324]	; 6f98 <gen_proto+0x928>
    6e50:	add	r0, pc, r0
    6e54:	bl	214c <sf_bpf_error>
    6e58:	ldr	r0, [pc, #276]	; 6f74 <gen_proto+0x904>
    6e5c:	add	r0, pc, r0
    6e60:	bl	214c <sf_bpf_error>
    6e64:	ldr	r0, [pc, #324]	; 6fb0 <gen_proto+0x940>
    6e68:	add	r0, pc, r0
    6e6c:	bl	214c <sf_bpf_error>
    6e70:	ldr	r0, [pc, #224]	; 6f58 <gen_proto+0x8e8>
    6e74:	add	r0, pc, r0
    6e78:	bl	214c <sf_bpf_error>
    6e7c:	ldr	r0, [pc, #216]	; 6f5c <gen_proto+0x8ec>
    6e80:	add	r0, pc, r0
    6e84:	bl	214c <sf_bpf_error>
    6e88:	ldr	r0, [pc, #240]	; 6f80 <gen_proto+0x910>
    6e8c:	add	r0, pc, r0
    6e90:	bl	214c <sf_bpf_error>
    6e94:	ldr	r0, [pc, #224]	; 6f7c <gen_proto+0x90c>
    6e98:	add	r0, pc, r0
    6e9c:	bl	214c <sf_bpf_error>
    6ea0:	ldr	r0, [pc, #208]	; 6f78 <gen_proto+0x908>
    6ea4:	add	r0, pc, r0
    6ea8:	bl	214c <sf_bpf_error>
    6eac:	ldr	r0, [pc, #208]	; 6f84 <gen_proto+0x914>
    6eb0:	add	r0, pc, r0
    6eb4:	bl	214c <sf_bpf_error>
    6eb8:	ldr	r0, [pc, #200]	; 6f88 <gen_proto+0x918>
    6ebc:	add	r0, pc, r0
    6ec0:	bl	214c <sf_bpf_error>
    6ec4:	ldr	r0, [pc, #192]	; 6f8c <gen_proto+0x91c>
    6ec8:	add	r0, pc, r0
    6ecc:	bl	214c <sf_bpf_error>
    6ed0:	ldr	r0, [pc, #136]	; 6f60 <gen_proto+0x8f0>
    6ed4:	add	r0, pc, r0
    6ed8:	bl	214c <sf_bpf_error>
    6edc:	ldr	r0, [pc, #128]	; 6f64 <gen_proto+0x8f4>
    6ee0:	add	r0, pc, r0
    6ee4:	bl	214c <sf_bpf_error>
    6ee8:	ldr	r0, [pc, #124]	; 6f6c <gen_proto+0x8fc>
    6eec:	add	r0, pc, r0
    6ef0:	bl	214c <sf_bpf_error>
    6ef4:	ldr	r0, [pc, #108]	; 6f68 <gen_proto+0x8f8>
    6ef8:	add	r0, pc, r0
    6efc:	bl	214c <sf_bpf_error>
    6f00:	ldr	r0, [pc, #104]	; 6f70 <gen_proto+0x900>
    6f04:	add	r0, pc, r0
    6f08:	bl	214c <sf_bpf_error>
    6f0c:	ldr	r0, [pc, #140]	; 6fa0 <gen_proto+0x930>
    6f10:	add	r0, pc, r0
    6f14:	bl	214c <sf_bpf_error>
    6f18:	ldr	r0, [pc, #132]	; 6fa4 <gen_proto+0x934>
    6f1c:	add	r0, pc, r0
    6f20:	bl	214c <sf_bpf_error>
    6f24:	ldr	r0, [pc, #124]	; 6fa8 <gen_proto+0x938>
    6f28:	add	r0, pc, r0
    6f2c:	bl	214c <sf_bpf_error>
    6f30:	ldr	r0, [pc, #116]	; 6fac <gen_proto+0x93c>
    6f34:	add	r0, pc, r0
    6f38:	bl	214c <sf_bpf_error>
    6f3c:	ldr	r0, [pc, #76]	; 6f90 <gen_proto+0x920>
    6f40:	add	r0, pc, r0
    6f44:	bl	214c <sf_bpf_error>
    6f48:	ldr	r0, [pc, #68]	; 6f94 <gen_proto+0x924>
    6f4c:	add	r0, pc, r0
    6f50:	bl	214c <sf_bpf_error>
    6f54:	.word	0x0003fccc
    6f58:	.word	0x00022f60
    6f5c:	.word	0x00022f53
    6f60:	.word	0x00022f2a
    6f64:	.word	0x00022f45
    6f68:	.word	0x00022f55
    6f6c:	.word	0x00022f8b
    6f70:	.word	0x00022f9d
    6f74:	.word	0x00023071
    6f78:	.word	0x00023055
    6f7c:	.word	0x00023076
    6f80:	.word	0x00023097
    6f84:	.word	0x00023089
    6f88:	.word	0x00023093
    6f8c:	.word	0x0002309d
    6f90:	.word	0x0002303b
    6f94:	.word	0x00023044
    6f98:	.word	0x00023156
    6f9c:	.word	0x0002317d
    6fa0:	.word	0x000230c1
    6fa4:	.word	0x000230ca
    6fa8:	.word	0x000230d3
    6fac:	.word	0x000230e0
    6fb0:	.word	0x00022f4e

00006fb4 <gen_linktype>:
    6fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6fb8:	add	fp, sp, #28
    6fbc:	sub	sp, sp, #12
    6fc0:	mov	r5, r0
    6fc4:	ldr	r0, [pc, #4008]	; 7f74 <gen_linktype+0xfc0>
    6fc8:	ldr	r0, [pc, r0]
    6fcc:	cmp	r0, #0
    6fd0:	beq	6ff0 <gen_linktype+0x3c>
    6fd4:	cmp	r5, #2048	; 0x800
    6fd8:	bge	7028 <gen_linktype+0x74>
    6fdc:	cmp	r5, #33	; 0x21
    6fe0:	beq	74fc <gen_linktype+0x548>
    6fe4:	cmp	r5, #87	; 0x57
    6fe8:	beq	7034 <gen_linktype+0x80>
    6fec:	b	9bdc <gen_linktype+0x2c28>
    6ff0:	ldr	r8, [pc, #3968]	; 7f78 <gen_linktype+0xfc4>
    6ff4:	add	r8, pc, r8
    6ff8:	ldrb	r0, [r8, #4]
    6ffc:	cmp	r0, #1
    7000:	bne	70c8 <gen_linktype+0x114>
    7004:	cmp	r5, #2048	; 0x800
    7008:	bge	75bc <gen_linktype+0x608>
    700c:	cmp	r5, #253	; 0xfd
    7010:	bgt	82fc <gen_linktype+0x1348>
    7014:	cmp	r5, #66	; 0x42
    7018:	beq	83f0 <gen_linktype+0x143c>
    701c:	cmp	r5, #224	; 0xe0
    7020:	moveq	r5, #43	; 0x2b
    7024:	b	840c <gen_linktype+0x1458>
    7028:	movw	r0, #34525	; 0x86dd
    702c:	cmp	r5, r0
    7030:	bne	74f4 <gen_linktype+0x540>
    7034:	ldr	r3, [pc, #3904]	; 7f7c <gen_linktype+0xfc8>
    7038:	add	r3, pc, r3
    703c:	ldrb	r0, [r3, #16]
    7040:	ldr	r1, [r3, #48]	; 0x30
    7044:	ldr	r7, [pc, #3892]	; 7f80 <gen_linktype+0xfcc>
    7048:	sub	sl, r1, #2
    704c:	cmp	r0, #0
    7050:	add	r7, pc, r7
    7054:	beq	75ac <gen_linktype+0x5f8>
    7058:	ldr	r4, [r3, #100]	; 0x64
    705c:	cmn	r4, #1
    7060:	beq	7664 <gen_linktype+0x6b0>
    7064:	ldr	r0, [r3, #92]	; 0x5c
    7068:	ldr	r5, [r7, r0, lsl #3]!
    706c:	cmp	r5, #19
    7070:	bhi	7688 <gen_linktype+0x6d4>
    7074:	add	r6, r0, #1
    7078:	cmp	r0, #15
    707c:	str	r6, [r3, #92]	; 0x5c
    7080:	bge	9b94 <gen_linktype+0x2be0>
    7084:	mov	r0, #1024	; 0x400
    7088:	lsl	r5, r0, r6
    708c:	mov	r0, r5
    7090:	bl	e34 <malloc@plt>
    7094:	cmp	r0, #0
    7098:	str	r0, [r7, #12]
    709c:	beq	9b94 <gen_linktype+0x2be0>
    70a0:	mov	r1, #0
    70a4:	mov	r2, r5
    70a8:	add	r7, r7, #8
    70ac:	bl	ea0 <memset@plt>
    70b0:	str	r5, [r7]
    70b4:	cmp	r5, #19
    70b8:	ldr	r3, [pc, #3780]	; 7f84 <gen_linktype+0xfd0>
    70bc:	add	r3, pc, r3
    70c0:	bhi	768c <gen_linktype+0x6d8>
    70c4:	b	9b94 <gen_linktype+0x2be0>
    70c8:	ldr	r0, [r8, #36]	; 0x24
    70cc:	cmp	r0, #229	; 0xe5
    70d0:	bhi	8a94 <gen_linktype+0x1ae0>
    70d4:	add	r1, pc, #4
    70d8:	ldr	r2, [r1, r0, lsl #2]
    70dc:	add	pc, r1, r2
    70e0:	.word	0x00001614
    70e4:	.word	0x00001a90
    70e8:	.word	0x000019b4
    70ec:	.word	0x000019b4
    70f0:	.word	0x000019b4
    70f4:	.word	0x000019b4
    70f8:	.word	0x00001348
    70fc:	.word	0x00001660
    7100:	.word	0x00001580
    7104:	.word	0x00001548
    7108:	.word	0x00001348
    710c:	.word	0x00001348
    7110:	.word	0x00001580
    7114:	.word	0x000019b4
    7118:	.word	0x000019b4
    711c:	.word	0x00001580
    7120:	.word	0x000019d4
    7124:	.word	0x000019b4
    7128:	.word	0x000019b4
    712c:	.word	0x00001348
    7130:	.word	0x000019b4
    7134:	.word	0x000019b4
    7138:	.word	0x000019b4
    713c:	.word	0x000019b4
    7140:	.word	0x000019b4
    7144:	.word	0x000019b4
    7148:	.word	0x000019b4
    714c:	.word	0x000019b4
    7150:	.word	0x000019b4
    7154:	.word	0x000019b4
    7158:	.word	0x000019b4
    715c:	.word	0x000019b4
    7160:	.word	0x000019b4
    7164:	.word	0x000019b4
    7168:	.word	0x000019b4
    716c:	.word	0x000019b4
    7170:	.word	0x000019b4
    7174:	.word	0x000019b4
    7178:	.word	0x000019b4
    717c:	.word	0x000019b4
    7180:	.word	0x000019b4
    7184:	.word	0x000019b4
    7188:	.word	0x000019b4
    718c:	.word	0x000019b4
    7190:	.word	0x000019b4
    7194:	.word	0x000019b4
    7198:	.word	0x000019b4
    719c:	.word	0x000019b4
    71a0:	.word	0x000019b4
    71a4:	.word	0x000019b4
    71a8:	.word	0x00001548
    71ac:	.word	0x00001548
    71b0:	.word	0x000019b4
    71b4:	.word	0x000019b4
    71b8:	.word	0x000019b4
    71bc:	.word	0x000019b4
    71c0:	.word	0x000019b4
    71c4:	.word	0x000019b4
    71c8:	.word	0x000019b4
    71cc:	.word	0x000019b4
    71d0:	.word	0x000019b4
    71d4:	.word	0x000019b4
    71d8:	.word	0x000019b4
    71dc:	.word	0x000019b4
    71e0:	.word	0x000019b4
    71e4:	.word	0x000019b4
    71e8:	.word	0x000019b4
    71ec:	.word	0x000019b4
    71f0:	.word	0x000019b4
    71f4:	.word	0x000019b4
    71f8:	.word	0x000019b4
    71fc:	.word	0x000019b4
    7200:	.word	0x000019b4
    7204:	.word	0x000019b4
    7208:	.word	0x000019b4
    720c:	.word	0x000019b4
    7210:	.word	0x000019b4
    7214:	.word	0x000019b4
    7218:	.word	0x000019b4
    721c:	.word	0x000019b4
    7220:	.word	0x000019b4
    7224:	.word	0x000019b4
    7228:	.word	0x000019b4
    722c:	.word	0x000019b4
    7230:	.word	0x000019b4
    7234:	.word	0x000019b4
    7238:	.word	0x000019b4
    723c:	.word	0x000019b4
    7240:	.word	0x000019b4
    7244:	.word	0x000019b4
    7248:	.word	0x000019b4
    724c:	.word	0x000019b4
    7250:	.word	0x000019b4
    7254:	.word	0x000019b4
    7258:	.word	0x000019b4
    725c:	.word	0x000019b4
    7260:	.word	0x000019b4
    7264:	.word	0x000019b4
    7268:	.word	0x000019b4
    726c:	.word	0x000019b4
    7270:	.word	0x000019b4
    7274:	.word	0x000019b4
    7278:	.word	0x000019b4
    727c:	.word	0x000019b4
    7280:	.word	0x00001bc8
    7284:	.word	0x0000136c
    7288:	.word	0x000019b4
    728c:	.word	0x00001bdc
    7290:	.word	0x00001614
    7294:	.word	0x00001614
    7298:	.word	0x000019b4
    729c:	.word	0x000019b4
    72a0:	.word	0x000019b4
    72a4:	.word	0x00001aac
    72a8:	.word	0x00001ba8
    72ac:	.word	0x000019b4
    72b0:	.word	0x000019b4
    72b4:	.word	0x000019b4
    72b8:	.word	0x000019b4
    72bc:	.word	0x0000136c
    72c0:	.word	0x000019b4
    72c4:	.word	0x000019b4
    72c8:	.word	0x00001348
    72cc:	.word	0x000018c8
    72d0:	.word	0x000019b4
    72d4:	.word	0x000019b4
    72d8:	.word	0x000019b4
    72dc:	.word	0x0000136c
    72e0:	.word	0x000019b4
    72e4:	.word	0x00001660
    72e8:	.word	0x00000398
    72ec:	.word	0x00000398
    72f0:	.word	0x00000398
    72f4:	.word	0x00000398
    72f8:	.word	0x00000398
    72fc:	.word	0x00000398
    7300:	.word	0x00000398
    7304:	.word	0x00000398
    7308:	.word	0x000019b4
    730c:	.word	0x00002ad8
    7310:	.word	0x00002ad8
    7314:	.word	0x000019b4
    7318:	.word	0x000019b4
    731c:	.word	0x00002b08
    7320:	.word	0x00002b14
    7324:	.word	0x000019b4
    7328:	.word	0x000019b4
    732c:	.word	0x000019b4
    7330:	.word	0x000019b4
    7334:	.word	0x000019b4
    7338:	.word	0x000019b4
    733c:	.word	0x000019b4
    7340:	.word	0x000019b4
    7344:	.word	0x000019b4
    7348:	.word	0x000019b4
    734c:	.word	0x000019b4
    7350:	.word	0x000019b4
    7354:	.word	0x000019b4
    7358:	.word	0x000019b4
    735c:	.word	0x000019b4
    7360:	.word	0x000019b4
    7364:	.word	0x000019b4
    7368:	.word	0x000019b4
    736c:	.word	0x0000136c
    7370:	.word	0x00000398
    7374:	.word	0x000019b4
    7378:	.word	0x00001548
    737c:	.word	0x00000398
    7380:	.word	0x00000398
    7384:	.word	0x000019b4
    7388:	.word	0x000019b4
    738c:	.word	0x000019b4
    7390:	.word	0x000019b4
    7394:	.word	0x000019b4
    7398:	.word	0x000019b4
    739c:	.word	0x000019b4
    73a0:	.word	0x000019b4
    73a4:	.word	0x00002b20
    73a8:	.word	0x00000398
    73ac:	.word	0x00000398
    73b0:	.word	0x00000398
    73b4:	.word	0x00000398
    73b8:	.word	0x00002b2c
    73bc:	.word	0x00000398
    73c0:	.word	0x000019b4
    73c4:	.word	0x000019b4
    73c8:	.word	0x00002ac0
    73cc:	.word	0x00002ae4
    73d0:	.word	0x000019b4
    73d4:	.word	0x00002ac0
    73d8:	.word	0x00002af0
    73dc:	.word	0x00002acc
    73e0:	.word	0x0000136c
    73e4:	.word	0x00002b38
    73e8:	.word	0x00000398
    73ec:	.word	0x00002acc
    73f0:	.word	0x00002b44
    73f4:	.word	0x00002b50
    73f8:	.word	0x00002b5c
    73fc:	.word	0x00002b68
    7400:	.word	0x00000398
    7404:	.word	0x00002ae4
    7408:	.word	0x00002b74
    740c:	.word	0x000019b4
    7410:	.word	0x000019b4
    7414:	.word	0x000019b4
    7418:	.word	0x000019b4
    741c:	.word	0x000019b4
    7420:	.word	0x000019b4
    7424:	.word	0x000019b4
    7428:	.word	0x000019b4
    742c:	.word	0x000019b4
    7430:	.word	0x000019b4
    7434:	.word	0x000019b4
    7438:	.word	0x000019b4
    743c:	.word	0x00002acc
    7440:	.word	0x000019b4
    7444:	.word	0x000019b4
    7448:	.word	0x000019b4
    744c:	.word	0x000019b4
    7450:	.word	0x00002ac0
    7454:	.word	0x000019b4
    7458:	.word	0x000019b4
    745c:	.word	0x000019b4
    7460:	.word	0x000019b4
    7464:	.word	0x000019b4
    7468:	.word	0x00001888
    746c:	.word	0x00002af0
    7470:	.word	0x00001c18
    7474:	.word	0x00001bb8
    7478:	mov	r0, #1
    747c:	mov	r1, #0
    7480:	mov	r2, #0
    7484:	bl	165d8 <gen_load_a>
    7488:	mov	r9, r0
    748c:	ldr	r0, [r8, #92]	; 0x5c
    7490:	ldr	r5, [pc, #4000]	; 8438 <gen_linktype+0x1484>
    7494:	add	r5, pc, r5
    7498:	mov	r6, r5
    749c:	ldr	r4, [r6, r0, lsl #3]!
    74a0:	cmp	r4, #19
    74a4:	bhi	832c <gen_linktype+0x1378>
    74a8:	add	r7, r0, #1
    74ac:	cmp	r0, #15
    74b0:	str	r7, [r8, #92]	; 0x5c
    74b4:	bge	9b94 <gen_linktype+0x2be0>
    74b8:	mov	r0, #1024	; 0x400
    74bc:	lsl	r4, r0, r7
    74c0:	mov	r0, r4
    74c4:	bl	e34 <malloc@plt>
    74c8:	cmp	r0, #0
    74cc:	str	r0, [r6, #12]
    74d0:	beq	9b94 <gen_linktype+0x2be0>
    74d4:	mov	r1, #0
    74d8:	mov	r2, r4
    74dc:	add	r6, r6, #8
    74e0:	bl	ea0 <memset@plt>
    74e4:	cmp	r4, #19
    74e8:	str	r4, [r6]
    74ec:	bhi	8330 <gen_linktype+0x137c>
    74f0:	b	9b94 <gen_linktype+0x2be0>
    74f4:	cmp	r5, #2048	; 0x800
    74f8:	bne	9bdc <gen_linktype+0x2c28>
    74fc:	ldr	r3, [pc, #3896]	; 843c <gen_linktype+0x1488>
    7500:	add	r3, pc, r3
    7504:	ldrb	r0, [r3, #16]
    7508:	ldr	r1, [r3, #48]	; 0x30
    750c:	sub	r7, r1, #2
    7510:	cmp	r0, #0
    7514:	beq	75b4 <gen_linktype+0x600>
    7518:	ldr	r4, [r3, #100]	; 0x64
    751c:	str	r7, [sp]
    7520:	cmn	r4, #1
    7524:	bne	753c <gen_linktype+0x588>
    7528:	bl	1305c <alloc_reg>
    752c:	ldr	r3, [pc, #3852]	; 8440 <gen_linktype+0x148c>
    7530:	mov	r4, r0
    7534:	add	r3, pc, r3
    7538:	str	r0, [r3, #100]	; 0x64
    753c:	ldr	r0, [r3, #92]	; 0x5c
    7540:	ldr	sl, [pc, #3836]	; 8444 <gen_linktype+0x1490>
    7544:	add	sl, pc, sl
    7548:	mov	r7, sl
    754c:	ldr	r5, [r7, r0, lsl #3]!
    7550:	cmp	r5, #19
    7554:	bhi	75e0 <gen_linktype+0x62c>
    7558:	add	r6, r0, #1
    755c:	cmp	r0, #15
    7560:	str	r6, [r3, #92]	; 0x5c
    7564:	bge	9b94 <gen_linktype+0x2be0>
    7568:	mov	r0, #1024	; 0x400
    756c:	lsl	r5, r0, r6
    7570:	mov	r0, r5
    7574:	bl	e34 <malloc@plt>
    7578:	cmp	r0, #0
    757c:	str	r0, [r7, #12]
    7580:	beq	9b94 <gen_linktype+0x2be0>
    7584:	mov	r1, #0
    7588:	mov	r2, r5
    758c:	add	r7, r7, #8
    7590:	bl	ea0 <memset@plt>
    7594:	str	r5, [r7]
    7598:	cmp	r5, #19
    759c:	ldr	r3, [pc, #3748]	; 8448 <gen_linktype+0x1494>
    75a0:	add	r3, pc, r3
    75a4:	bhi	75e4 <gen_linktype+0x630>
    75a8:	b	9b94 <gen_linktype+0x2be0>
    75ac:	ldr	r6, [r3, #92]	; 0x5c
    75b0:	b	7714 <gen_linktype+0x760>
    75b4:	ldr	r6, [r3, #92]	; 0x5c
    75b8:	b	7804 <gen_linktype+0x850>
    75bc:	movw	r0, #32922	; 0x809a
    75c0:	cmp	r5, r0
    75c4:	bgt	8310 <gen_linktype+0x135c>
    75c8:	cmp	r5, #2048	; 0x800
    75cc:	beq	83f8 <gen_linktype+0x1444>
    75d0:	movw	r0, #24579	; 0x6003
    75d4:	cmp	r5, r0
    75d8:	moveq	r5, #39	; 0x27
    75dc:	b	840c <gen_linktype+0x1458>
    75e0:	mov	r6, r0
    75e4:	sub	r0, r5, #20
    75e8:	mov	r1, #97	; 0x61
    75ec:	str	r0, [r7]
    75f0:	ldr	r8, [r7, #4]
    75f4:	str	r1, [r8, r0]!
    75f8:	cmp	r8, #0
    75fc:	str	r4, [r8, #12]
    7600:	beq	7800 <gen_linktype+0x84c>
    7604:	ldr	r4, [sl, r6, lsl #3]!
    7608:	cmp	r4, #19
    760c:	bhi	7894 <gen_linktype+0x8e0>
    7610:	add	r9, r6, #1
    7614:	cmp	r6, #15
    7618:	str	r9, [r3, #92]	; 0x5c
    761c:	bge	9b94 <gen_linktype+0x2be0>
    7620:	mov	r0, #1024	; 0x400
    7624:	lsl	r4, r0, r9
    7628:	mov	r0, r4
    762c:	bl	e34 <malloc@plt>
    7630:	cmp	r0, #0
    7634:	str	r0, [sl, #12]
    7638:	beq	9b94 <gen_linktype+0x2be0>
    763c:	mov	r1, #0
    7640:	mov	r2, r4
    7644:	add	sl, sl, #8
    7648:	bl	ea0 <memset@plt>
    764c:	str	r4, [sl]
    7650:	cmp	r4, #19
    7654:	ldr	r3, [pc, #4088]	; 8654 <gen_linktype+0x16a0>
    7658:	add	r3, pc, r3
    765c:	bhi	7898 <gen_linktype+0x8e4>
    7660:	b	9b94 <gen_linktype+0x2be0>
    7664:	bl	1305c <alloc_reg>
    7668:	ldr	r3, [pc, #4072]	; 8658 <gen_linktype+0x16a4>
    766c:	mov	r4, r0
    7670:	add	r3, pc, r3
    7674:	str	r0, [r3, #100]	; 0x64
    7678:	ldr	r0, [r3, #92]	; 0x5c
    767c:	ldr	r5, [r7, r0, lsl #3]!
    7680:	cmp	r5, #19
    7684:	bls	7074 <gen_linktype+0xc0>
    7688:	mov	r6, r0
    768c:	sub	r0, r5, #20
    7690:	mov	r1, #97	; 0x61
    7694:	str	r0, [r7]
    7698:	ldr	r8, [r7, #4]
    769c:	str	r1, [r8, r0]!
    76a0:	str	r4, [r8, #12]
    76a4:	cmp	r8, #0
    76a8:	ldr	r7, [pc, #4012]	; 865c <gen_linktype+0x16a8>
    76ac:	add	r7, pc, r7
    76b0:	beq	7714 <gen_linktype+0x760>
    76b4:	ldr	r4, [r7, r6, lsl #3]!
    76b8:	cmp	r4, #19
    76bc:	bhi	7c34 <gen_linktype+0xc80>
    76c0:	add	r9, r6, #1
    76c4:	cmp	r6, #15
    76c8:	str	r9, [r3, #92]	; 0x5c
    76cc:	bge	9b94 <gen_linktype+0x2be0>
    76d0:	mov	r0, #1024	; 0x400
    76d4:	lsl	r4, r0, r9
    76d8:	mov	r0, r4
    76dc:	bl	e34 <malloc@plt>
    76e0:	cmp	r0, #0
    76e4:	str	r0, [r7, #12]
    76e8:	beq	9b94 <gen_linktype+0x2be0>
    76ec:	mov	r1, #0
    76f0:	mov	r2, r4
    76f4:	add	r7, r7, #8
    76f8:	bl	ea0 <memset@plt>
    76fc:	str	r4, [r7]
    7700:	cmp	r4, #19
    7704:	ldr	r3, [pc, #4068]	; 86f0 <gen_linktype+0x173c>
    7708:	add	r3, pc, r3
    770c:	bhi	7c38 <gen_linktype+0xc84>
    7710:	b	9b94 <gen_linktype+0x2be0>
    7714:	mov	r5, r7
    7718:	ldr	r4, [r5, r6, lsl #3]!
    771c:	cmp	r4, #19
    7720:	bhi	7778 <gen_linktype+0x7c4>
    7724:	add	r9, r6, #1
    7728:	cmp	r6, #15
    772c:	str	r9, [r3, #92]	; 0x5c
    7730:	bge	9b94 <gen_linktype+0x2be0>
    7734:	mov	r0, #1024	; 0x400
    7738:	lsl	r4, r0, r9
    773c:	mov	r0, r4
    7740:	bl	e34 <malloc@plt>
    7744:	cmp	r0, #0
    7748:	str	r0, [r5, #12]
    774c:	beq	9b94 <gen_linktype+0x2be0>
    7750:	mov	r1, #0
    7754:	mov	r2, r4
    7758:	add	r5, r5, #8
    775c:	bl	ea0 <memset@plt>
    7760:	str	r4, [r5]
    7764:	cmp	r4, #19
    7768:	ldr	r3, [pc, #4044]	; 873c <gen_linktype+0x1788>
    776c:	add	r3, pc, r3
    7770:	bhi	777c <gen_linktype+0x7c8>
    7774:	b	9b94 <gen_linktype+0x2be0>
    7778:	mov	r9, r6
    777c:	sub	r0, r4, #20
    7780:	mov	r1, #48	; 0x30
    7784:	str	r0, [r5]
    7788:	ldr	r8, [r5, #4]
    778c:	str	r1, [r8, r0]!
    7790:	ldr	r0, [r3, #44]	; 0x2c
    7794:	add	r0, r0, sl
    7798:	str	r0, [r8, #12]
    779c:	mov	r6, r7
    77a0:	ldr	r4, [r6, r9, lsl #3]!
    77a4:	cmp	r4, #19
    77a8:	bhi	7c80 <gen_linktype+0xccc>
    77ac:	add	r7, r9, #1
    77b0:	cmp	r9, #15
    77b4:	str	r7, [r3, #92]	; 0x5c
    77b8:	bge	9b94 <gen_linktype+0x2be0>
    77bc:	mov	r0, #1024	; 0x400
    77c0:	lsl	r4, r0, r7
    77c4:	mov	r0, r4
    77c8:	bl	e34 <malloc@plt>
    77cc:	cmp	r0, #0
    77d0:	str	r0, [r6, #12]
    77d4:	beq	9b94 <gen_linktype+0x2be0>
    77d8:	mov	r1, #0
    77dc:	mov	r2, r4
    77e0:	add	r6, r6, #8
    77e4:	bl	ea0 <memset@plt>
    77e8:	str	r4, [r6]
    77ec:	cmp	r4, #19
    77f0:	ldr	r3, [pc, #3988]	; 878c <gen_linktype+0x17d8>
    77f4:	add	r3, pc, r3
    77f8:	bhi	7c84 <gen_linktype+0xcd0>
    77fc:	b	9b94 <gen_linktype+0x2be0>
    7800:	ldr	r7, [sp]
    7804:	ldr	r5, [pc, #3972]	; 8790 <gen_linktype+0x17dc>
    7808:	add	r5, pc, r5
    780c:	ldr	r4, [r5, r6, lsl #3]!
    7810:	cmp	r4, #19
    7814:	bhi	786c <gen_linktype+0x8b8>
    7818:	add	r9, r6, #1
    781c:	cmp	r6, #15
    7820:	str	r9, [r3, #92]	; 0x5c
    7824:	bge	9b94 <gen_linktype+0x2be0>
    7828:	mov	r0, #1024	; 0x400
    782c:	lsl	r4, r0, r9
    7830:	mov	r0, r4
    7834:	bl	e34 <malloc@plt>
    7838:	cmp	r0, #0
    783c:	str	r0, [r5, #12]
    7840:	beq	9b94 <gen_linktype+0x2be0>
    7844:	mov	r1, #0
    7848:	mov	r2, r4
    784c:	add	r5, r5, #8
    7850:	bl	ea0 <memset@plt>
    7854:	str	r4, [r5]
    7858:	cmp	r4, #19
    785c:	ldr	r3, [pc, #3888]	; 8794 <gen_linktype+0x17e0>
    7860:	add	r3, pc, r3
    7864:	bhi	7870 <gen_linktype+0x8bc>
    7868:	b	9b94 <gen_linktype+0x2be0>
    786c:	mov	r9, r6
    7870:	sub	r0, r4, #20
    7874:	mov	r1, #48	; 0x30
    7878:	str	r0, [r5]
    787c:	ldr	r8, [r5, #4]
    7880:	str	r1, [r8, r0]!
    7884:	ldr	r0, [r3, #44]	; 0x2c
    7888:	add	r0, r0, r7
    788c:	str	r0, [r8, #12]
    7890:	b	78cc <gen_linktype+0x918>
    7894:	mov	r9, r6
    7898:	sub	r1, r4, #20
    789c:	mov	r2, #80	; 0x50
    78a0:	str	r1, [sl]
    78a4:	ldr	r0, [sl, #4]
    78a8:	str	r2, [r0, r1]!
    78ac:	mov	r2, r8
    78b0:	ldr	r1, [sp]
    78b4:	str	r1, [r0, #12]
    78b8:	mov	r1, r2
    78bc:	ldr	r2, [r2, #16]
    78c0:	cmp	r2, #0
    78c4:	bne	78b8 <gen_linktype+0x904>
    78c8:	str	r0, [r1, #16]
    78cc:	ldr	r7, [pc, #4068]	; 88b8 <gen_linktype+0x1904>
    78d0:	add	r7, pc, r7
    78d4:	ldr	r4, [r7, r9, lsl #3]!
    78d8:	cmp	r4, #19
    78dc:	bhi	7934 <gen_linktype+0x980>
    78e0:	add	r6, r9, #1
    78e4:	cmp	r9, #15
    78e8:	str	r6, [r3, #92]	; 0x5c
    78ec:	bge	9b94 <gen_linktype+0x2be0>
    78f0:	mov	r0, #1024	; 0x400
    78f4:	lsl	r4, r0, r6
    78f8:	mov	r0, r4
    78fc:	bl	e34 <malloc@plt>
    7900:	cmp	r0, #0
    7904:	str	r0, [r7, #12]
    7908:	beq	9b94 <gen_linktype+0x2be0>
    790c:	mov	r1, #0
    7910:	mov	r2, r4
    7914:	add	r7, r7, #8
    7918:	bl	ea0 <memset@plt>
    791c:	str	r4, [r7]
    7920:	cmp	r4, #19
    7924:	ldr	r3, [pc, #3984]	; 88bc <gen_linktype+0x1908>
    7928:	add	r3, pc, r3
    792c:	bhi	7938 <gen_linktype+0x984>
    7930:	b	9b94 <gen_linktype+0x2be0>
    7934:	mov	r6, r9
    7938:	sub	r1, r4, #20
    793c:	mov	r2, #84	; 0x54
    7940:	str	r1, [r7]
    7944:	ldr	r0, [r7, #4]
    7948:	str	r2, [r0, r1]!
    794c:	mov	r1, #1
    7950:	mov	r2, r8
    7954:	str	r1, [r0, #12]
    7958:	mov	r1, r2
    795c:	ldr	r2, [r2, #16]
    7960:	cmp	r2, #0
    7964:	bne	7958 <gen_linktype+0x9a4>
    7968:	str	r0, [r1, #16]
    796c:	ldr	r5, [pc, #4080]	; 8964 <gen_linktype+0x19b0>
    7970:	add	r5, pc, r5
    7974:	ldr	r4, [r5, r6, lsl #3]!
    7978:	cmp	r4, #207	; 0xcf
    797c:	bhi	79d4 <gen_linktype+0xa20>
    7980:	add	r7, r6, #1
    7984:	cmp	r6, #15
    7988:	str	r7, [r3, #92]	; 0x5c
    798c:	bge	9b94 <gen_linktype+0x2be0>
    7990:	mov	r0, #1024	; 0x400
    7994:	lsl	r4, r0, r7
    7998:	mov	r0, r4
    799c:	bl	e34 <malloc@plt>
    79a0:	cmp	r0, #0
    79a4:	str	r0, [r5, #12]
    79a8:	beq	9b94 <gen_linktype+0x2be0>
    79ac:	mov	r1, #0
    79b0:	mov	r2, r4
    79b4:	add	r5, r5, #8
    79b8:	bl	ea0 <memset@plt>
    79bc:	str	r4, [r5]
    79c0:	cmp	r4, #207	; 0xcf
    79c4:	ldr	r3, [pc, #4044]	; 8998 <gen_linktype+0x19e4>
    79c8:	add	r3, pc, r3
    79cc:	bhi	79d8 <gen_linktype+0xa24>
    79d0:	b	9b94 <gen_linktype+0x2be0>
    79d4:	mov	r7, r6
    79d8:	sub	r0, r4, #208	; 0xd0
    79dc:	str	r0, [r5]
    79e0:	ldr	r1, [r5, #4]
    79e4:	add	sl, r1, r0
    79e8:	mov	r1, #1
    79ec:	mov	r0, #21
    79f0:	str	r1, [sl, #20]
    79f4:	str	r8, [sl, #4]
    79f8:	str	r0, [sl, #8]
    79fc:	str	sl, [sl, #96]	; 0x60
    7a00:	ldrb	r0, [r3, #16]
    7a04:	ldr	r6, [r3, #48]	; 0x30
    7a08:	cmp	r0, #1
    7a0c:	bne	7b40 <gen_linktype+0xb8c>
    7a10:	ldr	r9, [r3, #100]	; 0x64
    7a14:	ldr	r4, [pc, #3968]	; 899c <gen_linktype+0x19e8>
    7a18:	cmn	r9, #1
    7a1c:	add	r4, pc, r4
    7a20:	beq	7a84 <gen_linktype+0xad0>
    7a24:	ldr	r5, [r4, r7, lsl #3]!
    7a28:	cmp	r5, #19
    7a2c:	bhi	7aa8 <gen_linktype+0xaf4>
    7a30:	add	r8, r7, #1
    7a34:	cmp	r7, #15
    7a38:	str	r8, [r3, #92]	; 0x5c
    7a3c:	bge	9b94 <gen_linktype+0x2be0>
    7a40:	mov	r0, #1024	; 0x400
    7a44:	lsl	r5, r0, r8
    7a48:	mov	r0, r5
    7a4c:	bl	e34 <malloc@plt>
    7a50:	cmp	r0, #0
    7a54:	str	r0, [r4, #12]
    7a58:	beq	9b94 <gen_linktype+0x2be0>
    7a5c:	mov	r1, #0
    7a60:	mov	r2, r5
    7a64:	add	r4, r4, #8
    7a68:	bl	ea0 <memset@plt>
    7a6c:	str	r5, [r4]
    7a70:	cmp	r5, #19
    7a74:	ldr	r3, [pc, #3876]	; 89a0 <gen_linktype+0x19ec>
    7a78:	add	r3, pc, r3
    7a7c:	bhi	7aac <gen_linktype+0xaf8>
    7a80:	b	9b94 <gen_linktype+0x2be0>
    7a84:	bl	1305c <alloc_reg>
    7a88:	ldr	r3, [pc, #3860]	; 89a4 <gen_linktype+0x19f0>
    7a8c:	mov	r9, r0
    7a90:	add	r3, pc, r3
    7a94:	str	r0, [r3, #100]	; 0x64
    7a98:	ldr	r7, [r3, #92]	; 0x5c
    7a9c:	ldr	r5, [r4, r7, lsl #3]!
    7aa0:	cmp	r5, #19
    7aa4:	bls	7a30 <gen_linktype+0xa7c>
    7aa8:	mov	r8, r7
    7aac:	sub	r0, r5, #20
    7ab0:	mov	r1, #97	; 0x61
    7ab4:	str	r0, [r4]
    7ab8:	ldr	r5, [r4, #4]
    7abc:	str	r1, [r5, r0]!
    7ac0:	cmp	r5, #0
    7ac4:	str	r9, [r5, #12]
    7ac8:	beq	7b3c <gen_linktype+0xb88>
    7acc:	ldr	r7, [pc, #4048]	; 8aa4 <gen_linktype+0x1af0>
    7ad0:	add	r7, pc, r7
    7ad4:	ldr	r4, [r7, r8, lsl #3]!
    7ad8:	cmp	r4, #19
    7adc:	bhi	7f88 <gen_linktype+0xfd4>
    7ae0:	add	r9, r8, #1
    7ae4:	cmp	r8, #15
    7ae8:	str	r9, [r3, #92]	; 0x5c
    7aec:	bge	9b94 <gen_linktype+0x2be0>
    7af0:	mov	r0, #1024	; 0x400
    7af4:	lsl	r4, r0, r9
    7af8:	mov	r0, r4
    7afc:	bl	e34 <malloc@plt>
    7b00:	str	r0, [r7, #12]
    7b04:	cmp	r0, #0
    7b08:	ldr	r8, [pc, #3992]	; 8aa8 <gen_linktype+0x1af4>
    7b0c:	add	r8, pc, r8
    7b10:	beq	9b94 <gen_linktype+0x2be0>
    7b14:	mov	r1, #0
    7b18:	mov	r2, r4
    7b1c:	add	r7, r7, #8
    7b20:	bl	ea0 <memset@plt>
    7b24:	str	r4, [r7]
    7b28:	cmp	r4, #19
    7b2c:	ldr	r3, [pc, #3960]	; 8aac <gen_linktype+0x1af8>
    7b30:	add	r3, pc, r3
    7b34:	bhi	7f94 <gen_linktype+0xfe0>
    7b38:	b	9b94 <gen_linktype+0x2be0>
    7b3c:	mov	r7, r8
    7b40:	ldr	r8, [pc, #3944]	; 8ab0 <gen_linktype+0x1afc>
    7b44:	add	r8, pc, r8
    7b48:	mov	r5, r8
    7b4c:	ldr	r4, [r5, r7, lsl #3]!
    7b50:	cmp	r4, #19
    7b54:	bhi	7bac <gen_linktype+0xbf8>
    7b58:	add	r9, r7, #1
    7b5c:	cmp	r7, #15
    7b60:	str	r9, [r3, #92]	; 0x5c
    7b64:	bge	9b94 <gen_linktype+0x2be0>
    7b68:	mov	r0, #1024	; 0x400
    7b6c:	lsl	r4, r0, r9
    7b70:	mov	r0, r4
    7b74:	bl	e34 <malloc@plt>
    7b78:	cmp	r0, #0
    7b7c:	str	r0, [r5, #12]
    7b80:	beq	9b94 <gen_linktype+0x2be0>
    7b84:	mov	r1, #0
    7b88:	mov	r2, r4
    7b8c:	add	r5, r5, #8
    7b90:	bl	ea0 <memset@plt>
    7b94:	str	r4, [r5]
    7b98:	cmp	r4, #19
    7b9c:	ldr	r3, [pc, #4060]	; 8b80 <gen_linktype+0x1bcc>
    7ba0:	add	r3, pc, r3
    7ba4:	bhi	7bb0 <gen_linktype+0xbfc>
    7ba8:	b	9b94 <gen_linktype+0x2be0>
    7bac:	mov	r9, r7
    7bb0:	sub	r0, r4, #20
    7bb4:	mov	r1, #48	; 0x30
    7bb8:	str	r0, [r5]
    7bbc:	ldr	r5, [r5, #4]
    7bc0:	str	r1, [r5, r0]!
    7bc4:	ldr	r0, [r3, #44]	; 0x2c
    7bc8:	add	r0, r0, r6
    7bcc:	str	r0, [r5, #12]
    7bd0:	mov	r6, r8
    7bd4:	ldr	r4, [r6, r9, lsl #3]!
    7bd8:	cmp	r4, #19
    7bdc:	bhi	7fd4 <gen_linktype+0x1020>
    7be0:	add	r7, r9, #1
    7be4:	cmp	r9, #15
    7be8:	str	r7, [r3, #92]	; 0x5c
    7bec:	bge	9b94 <gen_linktype+0x2be0>
    7bf0:	mov	r0, #1024	; 0x400
    7bf4:	lsl	r4, r0, r7
    7bf8:	mov	r0, r4
    7bfc:	bl	e34 <malloc@plt>
    7c00:	cmp	r0, #0
    7c04:	str	r0, [r6, #12]
    7c08:	beq	9b94 <gen_linktype+0x2be0>
    7c0c:	mov	r1, #0
    7c10:	mov	r2, r4
    7c14:	add	r6, r6, #8
    7c18:	bl	ea0 <memset@plt>
    7c1c:	str	r4, [r6]
    7c20:	cmp	r4, #19
    7c24:	ldr	r3, [pc, #3928]	; 8b84 <gen_linktype+0x1bd0>
    7c28:	add	r3, pc, r3
    7c2c:	bhi	7fd8 <gen_linktype+0x1024>
    7c30:	b	9b94 <gen_linktype+0x2be0>
    7c34:	mov	r9, r6
    7c38:	sub	r1, r4, #20
    7c3c:	mov	r2, #80	; 0x50
    7c40:	str	r1, [r7]
    7c44:	ldr	r0, [r7, #4]
    7c48:	str	r2, [r0, r1]!
    7c4c:	mov	r2, r8
    7c50:	str	sl, [r0, #12]
    7c54:	mov	r1, r2
    7c58:	ldr	r2, [r2, #16]
    7c5c:	cmp	r2, #0
    7c60:	bne	7c54 <gen_linktype+0xca0>
    7c64:	str	r0, [r1, #16]
    7c68:	ldr	r7, [pc, #3864]	; 8b88 <gen_linktype+0x1bd4>
    7c6c:	add	r7, pc, r7
    7c70:	mov	r6, r7
    7c74:	ldr	r4, [r6, r9, lsl #3]!
    7c78:	cmp	r4, #19
    7c7c:	bls	77ac <gen_linktype+0x7f8>
    7c80:	mov	r7, r9
    7c84:	sub	r1, r4, #20
    7c88:	mov	r2, #84	; 0x54
    7c8c:	str	r1, [r6]
    7c90:	ldr	r0, [r6, #4]
    7c94:	str	r2, [r0, r1]!
    7c98:	mov	r1, #1
    7c9c:	mov	r2, r8
    7ca0:	str	r1, [r0, #12]
    7ca4:	mov	r1, r2
    7ca8:	ldr	r2, [r2, #16]
    7cac:	cmp	r2, #0
    7cb0:	bne	7ca4 <gen_linktype+0xcf0>
    7cb4:	str	r0, [r1, #16]
    7cb8:	ldr	r5, [pc, #4088]	; 8cb8 <gen_linktype+0x1d04>
    7cbc:	add	r5, pc, r5
    7cc0:	ldr	r4, [r5, r7, lsl #3]!
    7cc4:	cmp	r4, #207	; 0xcf
    7cc8:	bhi	7d28 <gen_linktype+0xd74>
    7ccc:	add	r6, r7, #1
    7cd0:	cmp	r7, #15
    7cd4:	str	r6, [r3, #92]	; 0x5c
    7cd8:	bge	9b94 <gen_linktype+0x2be0>
    7cdc:	mov	r0, #1024	; 0x400
    7ce0:	lsl	r4, r0, r6
    7ce4:	mov	r0, r4
    7ce8:	bl	e34 <malloc@plt>
    7cec:	str	r0, [r5, #12]
    7cf0:	cmp	r0, #0
    7cf4:	ldr	r7, [pc, #4088]	; 8cf4 <gen_linktype+0x1d40>
    7cf8:	add	r7, pc, r7
    7cfc:	beq	9b94 <gen_linktype+0x2be0>
    7d00:	mov	r1, #0
    7d04:	mov	r2, r4
    7d08:	add	r5, r5, #8
    7d0c:	bl	ea0 <memset@plt>
    7d10:	str	r4, [r5]
    7d14:	cmp	r4, #207	; 0xcf
    7d18:	ldr	r3, [pc, #4080]	; 8d10 <gen_linktype+0x1d5c>
    7d1c:	add	r3, pc, r3
    7d20:	bhi	7d34 <gen_linktype+0xd80>
    7d24:	b	9b94 <gen_linktype+0x2be0>
    7d28:	mov	r6, r7
    7d2c:	ldr	r7, [pc, #4064]	; 8d14 <gen_linktype+0x1d60>
    7d30:	add	r7, pc, r7
    7d34:	sub	r0, r4, #208	; 0xd0
    7d38:	str	r0, [r5]
    7d3c:	ldr	r1, [r5, #4]
    7d40:	add	sl, r1, r0
    7d44:	mov	r1, #1
    7d48:	mov	r0, #21
    7d4c:	str	r1, [sl, #20]
    7d50:	str	r8, [sl, #4]
    7d54:	str	r0, [sl, #8]
    7d58:	str	sl, [sl, #96]	; 0x60
    7d5c:	ldrb	r0, [r3, #16]
    7d60:	ldr	r8, [r3, #48]	; 0x30
    7d64:	cmp	r0, #1
    7d68:	bne	7e8c <gen_linktype+0xed8>
    7d6c:	ldr	r9, [r3, #100]	; 0x64
    7d70:	cmn	r9, #1
    7d74:	bne	7d90 <gen_linktype+0xddc>
    7d78:	bl	1305c <alloc_reg>
    7d7c:	ldr	r3, [pc, #3988]	; 8d18 <gen_linktype+0x1d64>
    7d80:	mov	r9, r0
    7d84:	add	r3, pc, r3
    7d88:	str	r0, [r3, #100]	; 0x64
    7d8c:	ldr	r6, [r3, #92]	; 0x5c
    7d90:	mov	r4, r7
    7d94:	str	r8, [sp]
    7d98:	ldr	r5, [r4, r6, lsl #3]!
    7d9c:	cmp	r5, #19
    7da0:	bhi	7df8 <gen_linktype+0xe44>
    7da4:	add	r8, r6, #1
    7da8:	cmp	r6, #15
    7dac:	str	r8, [r3, #92]	; 0x5c
    7db0:	bge	9b94 <gen_linktype+0x2be0>
    7db4:	mov	r0, #1024	; 0x400
    7db8:	lsl	r5, r0, r8
    7dbc:	mov	r0, r5
    7dc0:	bl	e34 <malloc@plt>
    7dc4:	cmp	r0, #0
    7dc8:	str	r0, [r4, #12]
    7dcc:	beq	9b94 <gen_linktype+0x2be0>
    7dd0:	mov	r1, #0
    7dd4:	mov	r2, r5
    7dd8:	add	r4, r4, #8
    7ddc:	bl	ea0 <memset@plt>
    7de0:	str	r5, [r4]
    7de4:	cmp	r5, #19
    7de8:	ldr	r3, [pc, #4080]	; 8de0 <gen_linktype+0x1e2c>
    7dec:	add	r3, pc, r3
    7df0:	bhi	7dfc <gen_linktype+0xe48>
    7df4:	b	9b94 <gen_linktype+0x2be0>
    7df8:	mov	r8, r6
    7dfc:	sub	r0, r5, #20
    7e00:	mov	r1, #97	; 0x61
    7e04:	str	r0, [r4]
    7e08:	ldr	r5, [r4, #4]
    7e0c:	str	r1, [r5, r0]!
    7e10:	cmp	r5, #0
    7e14:	str	r9, [r5, #12]
    7e18:	beq	7e84 <gen_linktype+0xed0>
    7e1c:	mov	r6, r7
    7e20:	ldr	r4, [r6, r8, lsl #3]!
    7e24:	cmp	r4, #19
    7e28:	bhi	812c <gen_linktype+0x1178>
    7e2c:	add	r9, r8, #1
    7e30:	cmp	r8, #15
    7e34:	str	r9, [r3, #92]	; 0x5c
    7e38:	bge	9b94 <gen_linktype+0x2be0>
    7e3c:	mov	r0, #1024	; 0x400
    7e40:	lsl	r4, r0, r9
    7e44:	mov	r0, r4
    7e48:	bl	e34 <malloc@plt>
    7e4c:	ldr	r8, [sp]
    7e50:	cmp	r0, #0
    7e54:	str	r0, [r6, #12]
    7e58:	beq	9b94 <gen_linktype+0x2be0>
    7e5c:	mov	r1, #0
    7e60:	mov	r2, r4
    7e64:	add	r6, r6, #8
    7e68:	bl	ea0 <memset@plt>
    7e6c:	str	r4, [r6]
    7e70:	cmp	r4, #19
    7e74:	ldr	r3, [pc, #3944]	; 8de4 <gen_linktype+0x1e30>
    7e78:	add	r3, pc, r3
    7e7c:	bhi	8134 <gen_linktype+0x1180>
    7e80:	b	9b94 <gen_linktype+0x2be0>
    7e84:	mov	r6, r8
    7e88:	ldr	r8, [sp]
    7e8c:	mov	r5, r7
    7e90:	ldr	r4, [r5, r6, lsl #3]!
    7e94:	cmp	r4, #19
    7e98:	bhi	7ef0 <gen_linktype+0xf3c>
    7e9c:	add	r9, r6, #1
    7ea0:	cmp	r6, #15
    7ea4:	str	r9, [r3, #92]	; 0x5c
    7ea8:	bge	9b94 <gen_linktype+0x2be0>
    7eac:	mov	r0, #1024	; 0x400
    7eb0:	lsl	r4, r0, r9
    7eb4:	mov	r0, r4
    7eb8:	bl	e34 <malloc@plt>
    7ebc:	cmp	r0, #0
    7ec0:	str	r0, [r5, #12]
    7ec4:	beq	9b94 <gen_linktype+0x2be0>
    7ec8:	mov	r1, #0
    7ecc:	mov	r2, r4
    7ed0:	add	r5, r5, #8
    7ed4:	bl	ea0 <memset@plt>
    7ed8:	str	r4, [r5]
    7edc:	cmp	r4, #19
    7ee0:	ldr	r3, [pc, #4008]	; 8e90 <gen_linktype+0x1edc>
    7ee4:	add	r3, pc, r3
    7ee8:	bhi	7ef4 <gen_linktype+0xf40>
    7eec:	b	9b94 <gen_linktype+0x2be0>
    7ef0:	mov	r9, r6
    7ef4:	sub	r0, r4, #20
    7ef8:	mov	r1, #48	; 0x30
    7efc:	str	r0, [r5]
    7f00:	ldr	r5, [r5, #4]
    7f04:	str	r1, [r5, r0]!
    7f08:	ldr	r0, [r3, #44]	; 0x2c
    7f0c:	add	r0, r0, r8
    7f10:	str	r0, [r5, #12]
    7f14:	ldr	r4, [r7, r9, lsl #3]!
    7f18:	cmp	r4, #19
    7f1c:	bhi	8170 <gen_linktype+0x11bc>
    7f20:	add	r6, r9, #1
    7f24:	cmp	r9, #15
    7f28:	str	r6, [r3, #92]	; 0x5c
    7f2c:	bge	9b94 <gen_linktype+0x2be0>
    7f30:	mov	r0, #1024	; 0x400
    7f34:	lsl	r4, r0, r6
    7f38:	mov	r0, r4
    7f3c:	bl	e34 <malloc@plt>
    7f40:	cmp	r0, #0
    7f44:	str	r0, [r7, #12]
    7f48:	beq	9b94 <gen_linktype+0x2be0>
    7f4c:	mov	r1, #0
    7f50:	mov	r2, r4
    7f54:	add	r7, r7, #8
    7f58:	bl	ea0 <memset@plt>
    7f5c:	str	r4, [r7]
    7f60:	cmp	r4, #19
    7f64:	ldr	r3, [pc, #4048]	; 8f3c <gen_linktype+0x1f88>
    7f68:	add	r3, pc, r3
    7f6c:	bhi	8174 <gen_linktype+0x11c0>
    7f70:	b	9b94 <gen_linktype+0x2be0>
    7f74:	.word	0x0003f10c
    7f78:	.word	0x0003f4ec
    7f7c:	.word	0x0003f4a8
    7f80:	.word	0x0003f3d0
    7f84:	.word	0x0003f424
    7f88:	mov	r9, r8
    7f8c:	ldr	r8, [pc, #4012]	; 8f40 <gen_linktype+0x1f8c>
    7f90:	add	r8, pc, r8
    7f94:	sub	r1, r4, #20
    7f98:	mov	r2, #80	; 0x50
    7f9c:	str	r1, [r7]
    7fa0:	ldr	r0, [r7, #4]
    7fa4:	str	r2, [r0, r1]!
    7fa8:	mov	r2, r5
    7fac:	str	r6, [r0, #12]
    7fb0:	mov	r1, r2
    7fb4:	ldr	r2, [r2, #16]
    7fb8:	cmp	r2, #0
    7fbc:	bne	7fb0 <gen_linktype+0xffc>
    7fc0:	str	r0, [r1, #16]
    7fc4:	mov	r6, r8
    7fc8:	ldr	r4, [r6, r9, lsl #3]!
    7fcc:	cmp	r4, #19
    7fd0:	bls	7be0 <gen_linktype+0xc2c>
    7fd4:	mov	r7, r9
    7fd8:	sub	r1, r4, #20
    7fdc:	mov	r2, #84	; 0x54
    7fe0:	str	r1, [r6]
    7fe4:	ldr	r0, [r6, #4]
    7fe8:	str	r2, [r0, r1]!
    7fec:	mov	r1, #240	; 0xf0
    7ff0:	mov	r2, r5
    7ff4:	str	r1, [r0, #12]
    7ff8:	mov	r1, r2
    7ffc:	ldr	r2, [r2, #16]
    8000:	cmp	r2, #0
    8004:	bne	7ff8 <gen_linktype+0x1044>
    8008:	str	r0, [r1, #16]
    800c:	ldr	r4, [r8, r7, lsl #3]!
    8010:	cmp	r4, #207	; 0xcf
    8014:	bhi	8060 <gen_linktype+0x10ac>
    8018:	add	r0, r7, #1
    801c:	cmp	r7, #15
    8020:	str	r0, [r3, #92]	; 0x5c
    8024:	bge	9b94 <gen_linktype+0x2be0>
    8028:	mov	r1, #1024	; 0x400
    802c:	lsl	r4, r1, r0
    8030:	mov	r0, r4
    8034:	bl	e34 <malloc@plt>
    8038:	cmp	r0, #0
    803c:	str	r0, [r8, #12]
    8040:	beq	9b94 <gen_linktype+0x2be0>
    8044:	mov	r1, #0
    8048:	mov	r2, r4
    804c:	add	r8, r8, #8
    8050:	bl	ea0 <memset@plt>
    8054:	cmp	r4, #207	; 0xcf
    8058:	str	r4, [r8]
    805c:	bls	9b94 <gen_linktype+0x2be0>
    8060:	sub	r0, r4, #208	; 0xd0
    8064:	cmp	sl, #0
    8068:	str	r0, [r8]
    806c:	ldr	r1, [r8, #4]
    8070:	add	r4, r1, r0
    8074:	mov	r1, #64	; 0x40
    8078:	mov	r0, #21
    807c:	str	r1, [r4, #20]
    8080:	str	r5, [r4, #4]
    8084:	str	r0, [r4, #8]
    8088:	str	r4, [r4, #96]	; 0x60
    808c:	beq	80bc <gen_linktype+0x1108>
    8090:	mov	r0, sl
    8094:	ldr	r1, [r0, #44]	; 0x2c
    8098:	add	r2, r0, #84	; 0x54
    809c:	cmp	r1, #0
    80a0:	mov	r1, #84	; 0x54
    80a4:	movweq	r1, #60	; 0x3c
    80a8:	addeq	r2, r0, #60	; 0x3c
    80ac:	ldr	r0, [r0, r1]
    80b0:	str	r4, [r2]
    80b4:	cmp	r0, #0
    80b8:	bne	8094 <gen_linktype+0x10e0>
    80bc:	ldr	r0, [sl, #44]	; 0x2c
    80c0:	cmp	r4, #0
    80c4:	clz	r0, r0
    80c8:	lsr	r0, r0, #5
    80cc:	str	r0, [sl, #44]	; 0x2c
    80d0:	ldr	r0, [r4, #44]	; 0x2c
    80d4:	clz	r1, r0
    80d8:	lsr	r1, r1, #5
    80dc:	str	r1, [r4, #44]	; 0x2c
    80e0:	str	r4, [sp, #4]
    80e4:	beq	82d0 <gen_linktype+0x131c>
    80e8:	cmp	r0, #0
    80ec:	mov	r2, #60	; 0x3c
    80f0:	mov	r1, r4
    80f4:	movweq	r2, #84	; 0x54
    80f8:	ldr	r0, [r1, r2]!
    80fc:	cmp	r0, #0
    8100:	beq	82d4 <gen_linktype+0x1320>
    8104:	ldr	r2, [r0, #44]	; 0x2c
    8108:	add	r1, r0, #84	; 0x54
    810c:	cmp	r2, #0
    8110:	mov	r2, #84	; 0x54
    8114:	movweq	r2, #60	; 0x3c
    8118:	addeq	r1, r0, #60	; 0x3c
    811c:	ldr	r0, [r0, r2]
    8120:	cmp	r0, #0
    8124:	bne	8104 <gen_linktype+0x1150>
    8128:	b	82d4 <gen_linktype+0x1320>
    812c:	mov	r9, r8
    8130:	ldr	r8, [sp]
    8134:	sub	r1, r4, #20
    8138:	mov	r2, #80	; 0x50
    813c:	str	r1, [r6]
    8140:	ldr	r0, [r6, #4]
    8144:	str	r2, [r0, r1]!
    8148:	mov	r2, r5
    814c:	str	r8, [r0, #12]
    8150:	mov	r1, r2
    8154:	ldr	r2, [r2, #16]
    8158:	cmp	r2, #0
    815c:	bne	8150 <gen_linktype+0x119c>
    8160:	str	r0, [r1, #16]
    8164:	ldr	r4, [r7, r9, lsl #3]!
    8168:	cmp	r4, #19
    816c:	bls	7f20 <gen_linktype+0xf6c>
    8170:	mov	r6, r9
    8174:	sub	r1, r4, #20
    8178:	mov	r2, #84	; 0x54
    817c:	str	r1, [r7]
    8180:	ldr	r0, [r7, #4]
    8184:	str	r2, [r0, r1]!
    8188:	mov	r1, #240	; 0xf0
    818c:	mov	r2, r5
    8190:	str	r1, [r0, #12]
    8194:	mov	r1, r2
    8198:	ldr	r2, [r2, #16]
    819c:	cmp	r2, #0
    81a0:	bne	8194 <gen_linktype+0x11e0>
    81a4:	str	r0, [r1, #16]
    81a8:	ldr	r7, [pc, #4084]	; 91a4 <gen_linktype+0x21f0>
    81ac:	add	r7, pc, r7
    81b0:	ldr	r4, [r7, r6, lsl #3]!
    81b4:	cmp	r4, #207	; 0xcf
    81b8:	bhi	8204 <gen_linktype+0x1250>
    81bc:	add	r0, r6, #1
    81c0:	cmp	r6, #15
    81c4:	str	r0, [r3, #92]	; 0x5c
    81c8:	bge	9b94 <gen_linktype+0x2be0>
    81cc:	mov	r1, #1024	; 0x400
    81d0:	lsl	r4, r1, r0
    81d4:	mov	r0, r4
    81d8:	bl	e34 <malloc@plt>
    81dc:	cmp	r0, #0
    81e0:	str	r0, [r7, #12]
    81e4:	beq	9b94 <gen_linktype+0x2be0>
    81e8:	mov	r1, #0
    81ec:	mov	r2, r4
    81f0:	add	r7, r7, #8
    81f4:	bl	ea0 <memset@plt>
    81f8:	cmp	r4, #207	; 0xcf
    81fc:	str	r4, [r7]
    8200:	bls	9b94 <gen_linktype+0x2be0>
    8204:	sub	r0, r4, #208	; 0xd0
    8208:	cmp	sl, #0
    820c:	str	r0, [r7]
    8210:	ldr	r1, [r7, #4]
    8214:	add	r4, r1, r0
    8218:	mov	r1, #96	; 0x60
    821c:	mov	r0, #21
    8220:	str	r1, [r4, #20]
    8224:	str	r5, [r4, #4]
    8228:	str	r0, [r4, #8]
    822c:	str	r4, [r4, #96]	; 0x60
    8230:	beq	8260 <gen_linktype+0x12ac>
    8234:	mov	r0, sl
    8238:	ldr	r1, [r0, #44]	; 0x2c
    823c:	add	r2, r0, #84	; 0x54
    8240:	cmp	r1, #0
    8244:	mov	r1, #84	; 0x54
    8248:	movweq	r1, #60	; 0x3c
    824c:	addeq	r2, r0, #60	; 0x3c
    8250:	ldr	r0, [r0, r1]
    8254:	str	r4, [r2]
    8258:	cmp	r0, #0
    825c:	bne	8238 <gen_linktype+0x1284>
    8260:	ldr	r0, [sl, #44]	; 0x2c
    8264:	cmp	r4, #0
    8268:	clz	r0, r0
    826c:	lsr	r0, r0, #5
    8270:	str	r0, [sl, #44]	; 0x2c
    8274:	ldr	r0, [r4, #44]	; 0x2c
    8278:	clz	r1, r0
    827c:	lsr	r1, r1, #5
    8280:	str	r1, [r4, #44]	; 0x2c
    8284:	str	r4, [sp, #4]
    8288:	beq	82d0 <gen_linktype+0x131c>
    828c:	cmp	r0, #0
    8290:	mov	r2, #60	; 0x3c
    8294:	mov	r1, r4
    8298:	movweq	r2, #84	; 0x54
    829c:	ldr	r0, [r1, r2]!
    82a0:	cmp	r0, #0
    82a4:	beq	82d4 <gen_linktype+0x1320>
    82a8:	ldr	r2, [r0, #44]	; 0x2c
    82ac:	add	r1, r0, #84	; 0x54
    82b0:	cmp	r2, #0
    82b4:	mov	r2, #84	; 0x54
    82b8:	movweq	r2, #60	; 0x3c
    82bc:	addeq	r1, r0, #60	; 0x3c
    82c0:	ldr	r0, [r0, r2]
    82c4:	cmp	r0, #0
    82c8:	bne	82a8 <gen_linktype+0x12f4>
    82cc:	b	82d4 <gen_linktype+0x1320>
    82d0:	add	r1, sp, #4
    82d4:	str	sl, [r1]
    82d8:	ldr	r0, [r4, #44]	; 0x2c
    82dc:	clz	r0, r0
    82e0:	lsr	r0, r0, #5
    82e4:	str	r0, [r4, #44]	; 0x2c
    82e8:	ldr	r0, [sl, #96]	; 0x60
    82ec:	str	r0, [r4, #96]	; 0x60
    82f0:	mov	r0, r4
    82f4:	sub	sp, fp, #28
    82f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    82fc:	cmp	r5, #254	; 0xfe
    8300:	beq	8400 <gen_linktype+0x144c>
    8304:	cmp	r5, #1536	; 0x600
    8308:	moveq	r5, #37	; 0x25
    830c:	b	840c <gen_linktype+0x1458>
    8310:	movw	r0, #32923	; 0x809b
    8314:	cmp	r5, r0
    8318:	beq	8408 <gen_linktype+0x1454>
    831c:	movw	r0, #34525	; 0x86dd
    8320:	cmp	r5, r0
    8324:	moveq	r5, #87	; 0x57
    8328:	b	840c <gen_linktype+0x1458>
    832c:	mov	r7, r0
    8330:	sub	r1, r4, #20
    8334:	mov	r2, #84	; 0x54
    8338:	str	r1, [r6]
    833c:	ldr	r0, [r6, #4]
    8340:	str	r2, [r0, r1]!
    8344:	mvn	r1, #255	; 0xff
    8348:	mov	r2, r9
    834c:	str	r1, [r0, #12]
    8350:	mov	r1, r2
    8354:	ldr	r2, [r2, #16]
    8358:	cmp	r2, #0
    835c:	bne	8350 <gen_linktype+0x139c>
    8360:	str	r0, [r1, #16]
    8364:	ldr	r4, [r5, r7, lsl #3]!
    8368:	cmp	r4, #207	; 0xcf
    836c:	bhi	83b8 <gen_linktype+0x1404>
    8370:	add	r0, r7, #1
    8374:	cmp	r7, #15
    8378:	str	r0, [r8, #92]	; 0x5c
    837c:	bge	9b94 <gen_linktype+0x2be0>
    8380:	mov	r1, #1024	; 0x400
    8384:	lsl	r4, r1, r0
    8388:	mov	r0, r4
    838c:	bl	e34 <malloc@plt>
    8390:	cmp	r0, #0
    8394:	str	r0, [r5, #12]
    8398:	beq	9b94 <gen_linktype+0x2be0>
    839c:	mov	r1, #0
    83a0:	mov	r2, r4
    83a4:	add	r5, r5, #8
    83a8:	bl	ea0 <memset@plt>
    83ac:	cmp	r4, #207	; 0xcf
    83b0:	str	r4, [r5]
    83b4:	bls	9b94 <gen_linktype+0x2be0>
    83b8:	sub	r0, r4, #208	; 0xd0
    83bc:	str	r0, [r5]
    83c0:	ldr	r1, [r5, #4]
    83c4:	add	r4, r1, r0
    83c8:	movw	r1, #17152	; 0x4300
    83cc:	mov	r0, #21
    83d0:	movt	r1, #19783	; 0x4d47
    83d4:	str	r1, [r4, #20]
    83d8:	str	r9, [r4, #4]
    83dc:	str	r0, [r4, #8]
    83e0:	str	r4, [r4, #96]	; 0x60
    83e4:	mov	r0, r4
    83e8:	sub	sp, fp, #28
    83ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    83f0:	mov	r5, #49	; 0x31
    83f4:	b	840c <gen_linktype+0x1458>
    83f8:	mov	r5, #33	; 0x21
    83fc:	b	840c <gen_linktype+0x1458>
    8400:	mov	r5, #35	; 0x23
    8404:	b	840c <gen_linktype+0x1458>
    8408:	mov	r5, #41	; 0x29
    840c:	ldr	r1, [r8, #40]	; 0x28
    8410:	mov	r0, #2
    8414:	mov	r2, #8
    8418:	mov	r3, r5
    841c:	sub	sp, fp, #28
    8420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8424:	b	a0a4 <gen_cmp>
    8428:	mov	r0, r5
    842c:	sub	sp, fp, #28
    8430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8434:	b	1af48 <gen_llc_linktype>
    8438:	.word	0x0003ef8c
    843c:	.word	0x0003efe0
    8440:	.word	0x0003efac
    8444:	.word	0x0003eedc
    8448:	.word	0x0003ef40
    844c:	mov	r0, #1
    8450:	mov	r1, #0
    8454:	mov	r2, #16
    8458:	bl	165d8 <gen_load_a>
    845c:	mov	r9, r0
    8460:	ldr	r0, [r8, #92]	; 0x5c
    8464:	ldr	r4, [pc, #3832]	; 9364 <gen_linktype+0x23b0>
    8468:	add	r4, pc, r4
    846c:	mov	r7, r4
    8470:	ldr	r6, [r7, r0, lsl #3]!
    8474:	cmp	r6, #207	; 0xcf
    8478:	bhi	84c4 <gen_linktype+0x1510>
    847c:	add	r1, r0, #1
    8480:	cmp	r0, #15
    8484:	str	r1, [r8, #92]	; 0x5c
    8488:	bge	9b94 <gen_linktype+0x2be0>
    848c:	mov	r0, #1024	; 0x400
    8490:	lsl	r6, r0, r1
    8494:	mov	r0, r6
    8498:	bl	e34 <malloc@plt>
    849c:	cmp	r0, #0
    84a0:	str	r0, [r7, #12]
    84a4:	beq	9b94 <gen_linktype+0x2be0>
    84a8:	mov	r1, #0
    84ac:	mov	r2, r6
    84b0:	add	r7, r7, #8
    84b4:	bl	ea0 <memset@plt>
    84b8:	cmp	r6, #207	; 0xcf
    84bc:	str	r6, [r7]
    84c0:	bls	9b94 <gen_linktype+0x2be0>
    84c4:	sub	r0, r6, #208	; 0xd0
    84c8:	mov	r2, #16
    84cc:	mov	sl, #69	; 0x45
    84d0:	str	r0, [r7]
    84d4:	ldr	r1, [r7, #4]
    84d8:	add	r7, r1, r0
    84dc:	mov	r0, #8
    84e0:	mov	r1, #0
    84e4:	str	r0, [r7, #20]
    84e8:	mov	r0, #1
    84ec:	stmib	r7, {r9, sl}
    84f0:	str	r7, [r7, #96]	; 0x60
    84f4:	bl	165d8 <gen_load_a>
    84f8:	mov	r9, r0
    84fc:	ldr	r0, [r8, #92]	; 0x5c
    8500:	ldr	r6, [r4, r0, lsl #3]!
    8504:	cmp	r6, #207	; 0xcf
    8508:	bhi	8554 <gen_linktype+0x15a0>
    850c:	add	r1, r0, #1
    8510:	cmp	r0, #15
    8514:	str	r1, [r8, #92]	; 0x5c
    8518:	bge	9b94 <gen_linktype+0x2be0>
    851c:	mov	r0, #1024	; 0x400
    8520:	lsl	r6, r0, r1
    8524:	mov	r0, r6
    8528:	bl	e34 <malloc@plt>
    852c:	cmp	r0, #0
    8530:	str	r0, [r4, #12]
    8534:	beq	9b94 <gen_linktype+0x2be0>
    8538:	mov	r1, #0
    853c:	mov	r2, r6
    8540:	add	r4, r4, #8
    8544:	bl	ea0 <memset@plt>
    8548:	cmp	r6, #207	; 0xcf
    854c:	str	r6, [r4]
    8550:	bls	9b94 <gen_linktype+0x2be0>
    8554:	sub	r0, r6, #208	; 0xd0
    8558:	str	r0, [r4]
    855c:	ldr	r1, [r4, #4]
    8560:	adds	r0, r1, r0
    8564:	mov	r1, #4
    8568:	str	r1, [r0, #20]
    856c:	stmib	r0, {r9, sl}
    8570:	ldr	r1, [r0, #44]	; 0x2c
    8574:	clz	r1, r1
    8578:	lsr	r1, r1, #5
    857c:	str	r1, [r0, #44]	; 0x2c
    8580:	str	r0, [r0, #96]	; 0x60
    8584:	beq	85bc <gen_linktype+0x1608>
    8588:	ldr	r1, [r7, #96]	; 0x60
    858c:	mov	r2, r0
    8590:	ldr	r3, [r2, #44]	; 0x2c
    8594:	add	r6, r2, #84	; 0x54
    8598:	cmp	r3, #0
    859c:	mov	r3, #84	; 0x54
    85a0:	movweq	r3, #60	; 0x3c
    85a4:	addeq	r6, r2, #60	; 0x3c
    85a8:	ldr	r2, [r2, r3]
    85ac:	str	r1, [r6]
    85b0:	cmp	r2, #0
    85b4:	bne	8590 <gen_linktype+0x15dc>
    85b8:	ldr	r1, [r0, #44]	; 0x2c
    85bc:	clz	r1, r1
    85c0:	cmp	r7, #0
    85c4:	lsr	r1, r1, #5
    85c8:	str	r1, [r0, #44]	; 0x2c
    85cc:	ldr	r1, [r7, #44]	; 0x2c
    85d0:	clz	r2, r1
    85d4:	lsr	r2, r2, #5
    85d8:	str	r2, [r7, #44]	; 0x2c
    85dc:	str	r7, [sp, #4]
    85e0:	beq	8798 <gen_linktype+0x17e4>
    85e4:	cmp	r1, #0
    85e8:	mov	r3, #60	; 0x3c
    85ec:	mov	r2, r7
    85f0:	movweq	r3, #84	; 0x54
    85f4:	ldr	r1, [r2, r3]!
    85f8:	cmp	r1, #0
    85fc:	beq	879c <gen_linktype+0x17e8>
    8600:	ldr	r3, [r1, #44]	; 0x2c
    8604:	add	r2, r1, #84	; 0x54
    8608:	cmp	r3, #0
    860c:	mov	r3, #84	; 0x54
    8610:	movweq	r3, #60	; 0x3c
    8614:	addeq	r2, r1, #60	; 0x3c
    8618:	ldr	r1, [r1, r3]
    861c:	cmp	r1, #0
    8620:	bne	8600 <gen_linktype+0x164c>
    8624:	b	879c <gen_linktype+0x17e8>
    8628:	cmp	r5, #2048	; 0x800
    862c:	bge	8710 <gen_linktype+0x175c>
    8630:	cmp	r5, #253	; 0xfd
    8634:	bgt	889c <gen_linktype+0x18e8>
    8638:	cmp	r5, #66	; 0x42
    863c:	beq	8dbc <gen_linktype+0x1e08>
    8640:	cmp	r5, #224	; 0xe0
    8644:	bne	8dc0 <gen_linktype+0x1e0c>
    8648:	ldr	r1, [r8, #40]	; 0x28
    864c:	mov	r5, #43	; 0x2b
    8650:	b	9148 <gen_linktype+0x2194>
    8654:	.word	0x0003ee88
    8658:	.word	0x0003ee70
    865c:	.word	0x0003ed74
    8660:	movw	r0, #34525	; 0x86dd
    8664:	cmp	r5, r0
    8668:	beq	88c0 <gen_linktype+0x190c>
    866c:	cmp	r5, #2048	; 0x800
    8670:	bne	8dac <gen_linktype+0x1df8>
    8674:	mov	r0, #1
    8678:	mov	r1, #0
    867c:	mov	r2, #16
    8680:	bl	165d8 <gen_load_a>
    8684:	mov	r9, r0
    8688:	ldr	r0, [r8, #92]	; 0x5c
    868c:	ldr	r5, [pc, #4052]	; 9668 <gen_linktype+0x26b4>
    8690:	add	r5, pc, r5
    8694:	mov	r6, r5
    8698:	ldr	r4, [r6, r0, lsl #3]!
    869c:	cmp	r4, #19
    86a0:	bhi	8de8 <gen_linktype+0x1e34>
    86a4:	add	r7, r0, #1
    86a8:	cmp	r0, #15
    86ac:	str	r7, [r8, #92]	; 0x5c
    86b0:	bge	9b94 <gen_linktype+0x2be0>
    86b4:	mov	r0, #1024	; 0x400
    86b8:	lsl	r4, r0, r7
    86bc:	mov	r0, r4
    86c0:	bl	e34 <malloc@plt>
    86c4:	cmp	r0, #0
    86c8:	str	r0, [r6, #12]
    86cc:	beq	9b94 <gen_linktype+0x2be0>
    86d0:	mov	r1, #0
    86d4:	mov	r2, r4
    86d8:	add	r6, r6, #8
    86dc:	bl	ea0 <memset@plt>
    86e0:	cmp	r4, #19
    86e4:	str	r4, [r6]
    86e8:	bhi	8dec <gen_linktype+0x1e38>
    86ec:	b	9b94 <gen_linktype+0x2be0>
    86f0:	.word	0x0003edd8
    86f4:	cmp	r5, #2048	; 0x800
    86f8:	beq	893c <gen_linktype+0x1988>
    86fc:	movw	r1, #34525	; 0x86dd
    8700:	cmp	r5, r1
    8704:	bne	8dac <gen_linktype+0x1df8>
    8708:	mov	r3, #10
    870c:	b	8940 <gen_linktype+0x198c>
    8710:	movw	r0, #32922	; 0x809a
    8714:	cmp	r5, r0
    8718:	bgt	8b4c <gen_linktype+0x1b98>
    871c:	cmp	r5, #2048	; 0x800
    8720:	beq	9140 <gen_linktype+0x218c>
    8724:	movw	r0, #24579	; 0x6003
    8728:	cmp	r5, r0
    872c:	bne	8dc0 <gen_linktype+0x1e0c>
    8730:	ldr	r1, [r8, #40]	; 0x28
    8734:	mov	r5, #39	; 0x27
    8738:	b	9148 <gen_linktype+0x2194>
    873c:	.word	0x0003ed74
    8740:	movw	r0, #32820	; 0x8034
    8744:	cmp	r5, r0
    8748:	ble	8d1c <gen_linktype+0x1d68>
    874c:	movw	r0, #32821	; 0x8035
    8750:	cmp	r5, r0
    8754:	beq	916c <gen_linktype+0x21b8>
    8758:	movw	r0, #32923	; 0x809b
    875c:	cmp	r5, r0
    8760:	beq	9188 <gen_linktype+0x21d4>
    8764:	movw	r0, #34525	; 0x86dd
    8768:	cmp	r5, r0
    876c:	bne	8dac <gen_linktype+0x1df8>
    8770:	ldr	r1, [r8, #40]	; 0x28
    8774:	mov	r0, #1
    8778:	mov	r2, #16
    877c:	mov	r3, #196	; 0xc4
    8780:	sub	sp, fp, #28
    8784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8788:	b	a0a4 <gen_cmp>
    878c:	.word	0x0003ecec
    8790:	.word	0x0003ec18
    8794:	.word	0x0003ec80
    8798:	add	r2, sp, #4
    879c:	str	r0, [r2]
    87a0:	ldr	r1, [r7, #44]	; 0x2c
    87a4:	clz	r1, r1
    87a8:	lsr	r1, r1, #5
    87ac:	str	r1, [r7, #44]	; 0x2c
    87b0:	ldr	r0, [r0, #96]	; 0x60
    87b4:	str	r0, [r7, #96]	; 0x60
    87b8:	mov	r0, r5
    87bc:	bl	1af48 <gen_llc_linktype>
    87c0:	mov	r4, r0
    87c4:	cmp	r7, #0
    87c8:	beq	87fc <gen_linktype+0x1848>
    87cc:	ldr	r0, [r4, #96]	; 0x60
    87d0:	mov	r1, r7
    87d4:	ldr	r2, [r1, #44]	; 0x2c
    87d8:	add	r3, r1, #84	; 0x54
    87dc:	cmp	r2, #0
    87e0:	mov	r2, #84	; 0x54
    87e4:	movweq	r2, #60	; 0x3c
    87e8:	addeq	r3, r1, #60	; 0x3c
    87ec:	ldr	r1, [r1, r2]
    87f0:	str	r0, [r3]
    87f4:	cmp	r1, #0
    87f8:	bne	87d4 <gen_linktype+0x1820>
    87fc:	ldr	r0, [r7, #44]	; 0x2c
    8800:	cmp	r4, #0
    8804:	clz	r0, r0
    8808:	lsr	r0, r0, #5
    880c:	str	r0, [r7, #44]	; 0x2c
    8810:	ldr	r1, [r4, #44]	; 0x2c
    8814:	clz	r0, r1
    8818:	lsr	r0, r0, #5
    881c:	str	r0, [r4, #44]	; 0x2c
    8820:	str	r4, [sp, #4]
    8824:	beq	8870 <gen_linktype+0x18bc>
    8828:	cmp	r1, #0
    882c:	mov	r1, #60	; 0x3c
    8830:	add	r0, r4, #60	; 0x3c
    8834:	movweq	r1, #84	; 0x54
    8838:	addeq	r0, r4, #84	; 0x54
    883c:	ldr	r1, [r4, r1]
    8840:	cmp	r1, #0
    8844:	beq	8874 <gen_linktype+0x18c0>
    8848:	ldr	r2, [r1, #44]	; 0x2c
    884c:	add	r0, r1, #84	; 0x54
    8850:	cmp	r2, #0
    8854:	mov	r2, #84	; 0x54
    8858:	movweq	r2, #60	; 0x3c
    885c:	addeq	r0, r1, #60	; 0x3c
    8860:	ldr	r1, [r1, r2]
    8864:	cmp	r1, #0
    8868:	bne	8848 <gen_linktype+0x1894>
    886c:	b	8874 <gen_linktype+0x18c0>
    8870:	add	r0, sp, #4
    8874:	str	r7, [r0]
    8878:	ldr	r0, [r4, #44]	; 0x2c
    887c:	clz	r0, r0
    8880:	lsr	r0, r0, #5
    8884:	str	r0, [r4, #44]	; 0x2c
    8888:	ldr	r0, [r7, #96]	; 0x60
    888c:	str	r0, [r4, #96]	; 0x60
    8890:	mov	r0, r4
    8894:	sub	sp, fp, #28
    8898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    889c:	cmp	r5, #254	; 0xfe
    88a0:	beq	8dc8 <gen_linktype+0x1e14>
    88a4:	cmp	r5, #1536	; 0x600
    88a8:	bne	8dc0 <gen_linktype+0x1e0c>
    88ac:	ldr	r1, [r8, #40]	; 0x28
    88b0:	mov	r5, #37	; 0x25
    88b4:	b	9148 <gen_linktype+0x2194>
    88b8:	.word	0x0003eb50
    88bc:	.word	0x0003ebb8
    88c0:	mov	r0, #1
    88c4:	mov	r1, #0
    88c8:	mov	r2, #16
    88cc:	bl	165d8 <gen_load_a>
    88d0:	mov	r9, r0
    88d4:	ldr	r0, [r8, #92]	; 0x5c
    88d8:	ldr	r5, [pc, #4084]	; 98d4 <gen_linktype+0x2920>
    88dc:	add	r5, pc, r5
    88e0:	mov	r6, r5
    88e4:	ldr	r4, [r6, r0, lsl #3]!
    88e8:	cmp	r4, #19
    88ec:	bhi	8e94 <gen_linktype+0x1ee0>
    88f0:	add	r7, r0, #1
    88f4:	cmp	r0, #15
    88f8:	str	r7, [r8, #92]	; 0x5c
    88fc:	bge	9b94 <gen_linktype+0x2be0>
    8900:	mov	r0, #1024	; 0x400
    8904:	lsl	r4, r0, r7
    8908:	mov	r0, r4
    890c:	bl	e34 <malloc@plt>
    8910:	cmp	r0, #0
    8914:	str	r0, [r6, #12]
    8918:	beq	9b94 <gen_linktype+0x2be0>
    891c:	mov	r1, #0
    8920:	mov	r2, r4
    8924:	add	r6, r6, #8
    8928:	bl	ea0 <memset@plt>
    892c:	cmp	r4, #19
    8930:	str	r4, [r6]
    8934:	bhi	8e98 <gen_linktype+0x1ee4>
    8938:	b	9b94 <gen_linktype+0x2be0>
    893c:	mov	r3, #2
    8940:	cmp	r0, #109	; 0x6d
    8944:	mov	r1, #0
    8948:	mov	r2, #0
    894c:	cmpne	r0, #0
    8950:	mov	r0, #1
    8954:	reveq	r3, r3
    8958:	sub	sp, fp, #28
    895c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8960:	b	a0a4 <gen_cmp>
    8964:	.word	0x0003eab0
    8968:	movw	r0, #34525	; 0x86dd
    896c:	cmp	r5, r0
    8970:	beq	9150 <gen_linktype+0x219c>
    8974:	cmp	r5, #2048	; 0x800
    8978:	bne	8dac <gen_linktype+0x1df8>
    897c:	ldr	r1, [r8, #40]	; 0x28
    8980:	mov	r0, #1
    8984:	mov	r2, #16
    8988:	mov	r3, #2
    898c:	sub	sp, fp, #28
    8990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8994:	b	a0a4 <gen_cmp>
    8998:	.word	0x0003eb18
    899c:	.word	0x0003ea04
    89a0:	.word	0x0003ea68
    89a4:	.word	0x0003ea50
    89a8:	ldrb	r0, [r8]
    89ac:	cmp	r0, #1
    89b0:	bne	8f44 <gen_linktype+0x1f90>
    89b4:	mov	r0, #1
    89b8:	mov	r1, #4
    89bc:	mov	r2, #8
    89c0:	mov	r3, #65280	; 0xff00
    89c4:	bl	a0a4 <gen_cmp>
    89c8:	mov	r6, r0
    89cc:	ldr	r0, [r0, #44]	; 0x2c
    89d0:	clz	r0, r0
    89d4:	lsr	r0, r0, #5
    89d8:	str	r0, [r6, #44]	; 0x2c
    89dc:	mov	r0, r5
    89e0:	bl	1a668 <gen_ether_linktype>
    89e4:	mov	r4, r0
    89e8:	cmp	r6, #0
    89ec:	beq	8a20 <gen_linktype+0x1a6c>
    89f0:	ldr	r0, [r4, #96]	; 0x60
    89f4:	mov	r1, r6
    89f8:	ldr	r2, [r1, #44]	; 0x2c
    89fc:	add	r3, r1, #84	; 0x54
    8a00:	cmp	r2, #0
    8a04:	mov	r2, #84	; 0x54
    8a08:	movweq	r2, #60	; 0x3c
    8a0c:	addeq	r3, r1, #60	; 0x3c
    8a10:	ldr	r1, [r1, r2]
    8a14:	str	r0, [r3]
    8a18:	cmp	r1, #0
    8a1c:	bne	89f8 <gen_linktype+0x1a44>
    8a20:	ldr	r0, [r6, #44]	; 0x2c
    8a24:	cmp	r4, #0
    8a28:	clz	r0, r0
    8a2c:	lsr	r0, r0, #5
    8a30:	str	r0, [r6, #44]	; 0x2c
    8a34:	ldr	r1, [r4, #44]	; 0x2c
    8a38:	clz	r0, r1
    8a3c:	lsr	r0, r0, #5
    8a40:	str	r0, [r4, #44]	; 0x2c
    8a44:	str	r4, [sp, #4]
    8a48:	beq	963c <gen_linktype+0x2688>
    8a4c:	cmp	r1, #0
    8a50:	mov	r1, #60	; 0x3c
    8a54:	add	r0, r4, #60	; 0x3c
    8a58:	movweq	r1, #84	; 0x54
    8a5c:	addeq	r0, r4, #84	; 0x54
    8a60:	ldr	r1, [r4, r1]
    8a64:	cmp	r1, #0
    8a68:	beq	9640 <gen_linktype+0x268c>
    8a6c:	ldr	r2, [r1, #44]	; 0x2c
    8a70:	add	r0, r1, #84	; 0x54
    8a74:	cmp	r2, #0
    8a78:	mov	r2, #84	; 0x54
    8a7c:	movweq	r2, #60	; 0x3c
    8a80:	addeq	r0, r1, #60	; 0x3c
    8a84:	ldr	r1, [r1, r2]
    8a88:	cmp	r1, #0
    8a8c:	bne	8a6c <gen_linktype+0x1ab8>
    8a90:	b	9640 <gen_linktype+0x268c>
    8a94:	ldr	r1, [r8, #40]	; 0x28
    8a98:	cmn	r1, #1
    8a9c:	bne	9148 <gen_linktype+0x2194>
    8aa0:	bl	f24 <abort@plt>
    8aa4:	.word	0x0003e950
    8aa8:	.word	0x0003e914
    8aac:	.word	0x0003e9b0
    8ab0:	.word	0x0003e8dc
    8ab4:	cmp	r5, #2048	; 0x800
    8ab8:	blt	8630 <gen_linktype+0x167c>
    8abc:	movw	r0, #32922	; 0x809a
    8ac0:	cmp	r5, r0
    8ac4:	bgt	8b4c <gen_linktype+0x1b98>
    8ac8:	cmp	r5, #2048	; 0x800
    8acc:	bne	8724 <gen_linktype+0x1770>
    8ad0:	ldr	r1, [r8, #40]	; 0x28
    8ad4:	mov	r0, #1
    8ad8:	mov	r2, #8
    8adc:	mov	r3, #33	; 0x21
    8ae0:	bl	a0a4 <gen_cmp>
    8ae4:	ldr	r1, [r8, #40]	; 0x28
    8ae8:	mov	r4, r0
    8aec:	mov	r0, #1
    8af0:	mov	r2, #8
    8af4:	mov	r3, #45	; 0x2d
    8af8:	bl	a0a4 <gen_cmp>
    8afc:	mov	r5, r0
    8b00:	ldr	r0, [r4, #44]	; 0x2c
    8b04:	cmp	r4, #0
    8b08:	clz	r0, r0
    8b0c:	lsr	r0, r0, #5
    8b10:	str	r0, [r4, #44]	; 0x2c
    8b14:	beq	98dc <gen_linktype+0x2928>
    8b18:	ldr	r1, [r5, #96]	; 0x60
    8b1c:	mov	r2, r4
    8b20:	cmp	r0, #0
    8b24:	mov	r0, #84	; 0x54
    8b28:	add	r3, r2, #84	; 0x54
    8b2c:	movweq	r0, #60	; 0x3c
    8b30:	addeq	r3, r2, #60	; 0x3c
    8b34:	ldr	r2, [r2, r0]
    8b38:	str	r1, [r3]
    8b3c:	cmp	r2, #0
    8b40:	beq	98d8 <gen_linktype+0x2924>
    8b44:	ldr	r0, [r2, #44]	; 0x2c
    8b48:	b	8b20 <gen_linktype+0x1b6c>
    8b4c:	movw	r0, #32923	; 0x809b
    8b50:	cmp	r5, r0
    8b54:	beq	8dd4 <gen_linktype+0x1e20>
    8b58:	movw	r0, #34525	; 0x86dd
    8b5c:	cmp	r5, r0
    8b60:	bne	8dc0 <gen_linktype+0x1e0c>
    8b64:	ldr	r1, [r8, #40]	; 0x28
    8b68:	mov	r5, #87	; 0x57
    8b6c:	b	9148 <gen_linktype+0x2194>
    8b70:	mov	r0, r5
    8b74:	sub	sp, fp, #28
    8b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b7c:	b	1a668 <gen_ether_linktype>
    8b80:	.word	0x0003e940
    8b84:	.word	0x0003e8b8
    8b88:	.word	0x0003e7b4
    8b8c:	cmp	r5, #253	; 0xfd
    8b90:	bgt	9014 <gen_linktype+0x2060>
    8b94:	cmp	r5, #6
    8b98:	beq	8bac <gen_linktype+0x1bf8>
    8b9c:	cmp	r5, #224	; 0xe0
    8ba0:	beq	966c <gen_linktype+0x26b8>
    8ba4:	cmp	r5, #240	; 0xf0
    8ba8:	bne	9554 <gen_linktype+0x25a0>
    8bac:	ldr	r1, [r8, #40]	; 0x28
    8bb0:	mov	r0, #1
    8bb4:	mov	r2, #8
    8bb8:	mov	r3, #4
    8bbc:	bl	a0a4 <gen_cmp>
    8bc0:	orr	r3, r5, r5, lsl #8
    8bc4:	mov	r6, r0
    8bc8:	mov	r0, #2
    8bcc:	mov	r1, #0
    8bd0:	mov	r2, #8
    8bd4:	bl	a0a4 <gen_cmp>
    8bd8:	mov	r4, r0
    8bdc:	cmp	r6, #0
    8be0:	beq	8c14 <gen_linktype+0x1c60>
    8be4:	ldr	r0, [r4, #96]	; 0x60
    8be8:	mov	r1, r6
    8bec:	ldr	r2, [r1, #44]	; 0x2c
    8bf0:	add	r3, r1, #84	; 0x54
    8bf4:	cmp	r2, #0
    8bf8:	mov	r2, #84	; 0x54
    8bfc:	movweq	r2, #60	; 0x3c
    8c00:	addeq	r3, r1, #60	; 0x3c
    8c04:	ldr	r1, [r1, r2]
    8c08:	str	r0, [r3]
    8c0c:	cmp	r1, #0
    8c10:	bne	8bec <gen_linktype+0x1c38>
    8c14:	ldr	r0, [r6, #44]	; 0x2c
    8c18:	cmp	r4, #0
    8c1c:	clz	r0, r0
    8c20:	lsr	r0, r0, #5
    8c24:	str	r0, [r6, #44]	; 0x2c
    8c28:	ldr	r1, [r4, #44]	; 0x2c
    8c2c:	clz	r0, r1
    8c30:	lsr	r0, r0, #5
    8c34:	str	r0, [r4, #44]	; 0x2c
    8c38:	str	r4, [sp, #4]
    8c3c:	beq	963c <gen_linktype+0x2688>
    8c40:	cmp	r1, #0
    8c44:	mov	r1, #60	; 0x3c
    8c48:	add	r0, r4, #60	; 0x3c
    8c4c:	movweq	r1, #84	; 0x54
    8c50:	addeq	r0, r4, #84	; 0x54
    8c54:	ldr	r1, [r4, r1]
    8c58:	cmp	r1, #0
    8c5c:	beq	9640 <gen_linktype+0x268c>
    8c60:	ldr	r2, [r1, #44]	; 0x2c
    8c64:	add	r0, r1, #84	; 0x54
    8c68:	cmp	r2, #0
    8c6c:	mov	r2, #84	; 0x54
    8c70:	movweq	r2, #60	; 0x3c
    8c74:	addeq	r0, r1, #60	; 0x3c
    8c78:	ldr	r1, [r1, r2]
    8c7c:	cmp	r1, #0
    8c80:	bne	8c60 <gen_linktype+0x1cac>
    8c84:	b	9640 <gen_linktype+0x268c>
    8c88:	movw	r0, #32923	; 0x809b
    8c8c:	cmp	r5, r0
    8c90:	beq	8d00 <gen_linktype+0x1d4c>
    8c94:	b	8dac <gen_linktype+0x1df8>
    8c98:	movw	r0, #34525	; 0x86dd
    8c9c:	cmp	r5, r0
    8ca0:	beq	8d00 <gen_linktype+0x1d4c>
    8ca4:	b	8dac <gen_linktype+0x1df8>
    8ca8:	ldr	r1, [r8, #40]	; 0x28
    8cac:	cmp	r5, #254	; 0xfe
    8cb0:	movweq	r5, #65278	; 0xfefe
    8cb4:	b	9148 <gen_linktype+0x2194>
    8cb8:	.word	0x0003e764
    8cbc:	cmp	r5, #254	; 0xfe
    8cc0:	beq	9240 <gen_linktype+0x228c>
    8cc4:	movw	r0, #34525	; 0x86dd
    8cc8:	cmp	r5, r0
    8ccc:	beq	9224 <gen_linktype+0x2270>
    8cd0:	cmp	r5, #2048	; 0x800
    8cd4:	bne	8dac <gen_linktype+0x1df8>
    8cd8:	mov	r0, #1
    8cdc:	mov	r1, #2
    8ce0:	mov	r2, #8
    8ce4:	mov	r3, #972	; 0x3cc
    8ce8:	sub	sp, fp, #28
    8cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8cf0:	b	a0a4 <gen_cmp>
    8cf4:	.word	0x0003e728
    8cf8:	cmp	r5, #2048	; 0x800
    8cfc:	bne	8dac <gen_linktype+0x1df8>
    8d00:	mov	r0, #1
    8d04:	sub	sp, fp, #28
    8d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8d0c:	b	1b348 <gen_uncond>
    8d10:	.word	0x0003e7c4
    8d14:	.word	0x0003e6f0
    8d18:	.word	0x0003e75c
    8d1c:	cmp	r5, #2048	; 0x800
    8d20:	beq	91a8 <gen_linktype+0x21f4>
    8d24:	movw	r0, #2054	; 0x806
    8d28:	cmp	r5, r0
    8d2c:	bne	8dac <gen_linktype+0x1df8>
    8d30:	ldr	r1, [r8, #40]	; 0x28
    8d34:	mov	r0, #1
    8d38:	mov	r2, #16
    8d3c:	mov	r3, #213	; 0xd5
    8d40:	bl	a0a4 <gen_cmp>
    8d44:	ldr	r1, [r8, #40]	; 0x28
    8d48:	mov	r5, r0
    8d4c:	mov	r0, #1
    8d50:	mov	r2, #16
    8d54:	mov	r3, #241	; 0xf1
    8d58:	bl	a0a4 <gen_cmp>
    8d5c:	mov	r4, r0
    8d60:	ldr	r0, [r5, #44]	; 0x2c
    8d64:	cmp	r5, #0
    8d68:	clz	r0, r0
    8d6c:	lsr	r0, r0, #5
    8d70:	str	r0, [r5, #44]	; 0x2c
    8d74:	beq	9320 <gen_linktype+0x236c>
    8d78:	ldr	r1, [r4, #96]	; 0x60
    8d7c:	mov	r2, r5
    8d80:	cmp	r0, #0
    8d84:	mov	r0, #84	; 0x54
    8d88:	add	r3, r2, #84	; 0x54
    8d8c:	movweq	r0, #60	; 0x3c
    8d90:	addeq	r3, r2, #60	; 0x3c
    8d94:	ldr	r2, [r2, r0]
    8d98:	str	r1, [r3]
    8d9c:	cmp	r2, #0
    8da0:	beq	931c <gen_linktype+0x2368>
    8da4:	ldr	r0, [r2, #44]	; 0x2c
    8da8:	b	8d80 <gen_linktype+0x1dcc>
    8dac:	mov	r0, #0
    8db0:	sub	sp, fp, #28
    8db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8db8:	b	1b348 <gen_uncond>
    8dbc:	mov	r5, #49	; 0x31
    8dc0:	ldr	r1, [r8, #40]	; 0x28
    8dc4:	b	9148 <gen_linktype+0x2194>
    8dc8:	ldr	r1, [r8, #40]	; 0x28
    8dcc:	mov	r5, #35	; 0x23
    8dd0:	b	9148 <gen_linktype+0x2194>
    8dd4:	ldr	r1, [r8, #40]	; 0x28
    8dd8:	mov	r5, #41	; 0x29
    8ddc:	b	9148 <gen_linktype+0x2194>
    8de0:	.word	0x0003e6f4
    8de4:	.word	0x0003e668
    8de8:	mov	r7, r0
    8dec:	sub	r1, r4, #20
    8df0:	mov	r2, #84	; 0x54
    8df4:	str	r1, [r6]
    8df8:	ldr	r0, [r6, #4]
    8dfc:	str	r2, [r0, r1]!
    8e00:	mov	r1, #240	; 0xf0
    8e04:	mov	r2, r9
    8e08:	str	r1, [r0, #12]
    8e0c:	mov	r1, r2
    8e10:	ldr	r2, [r2, #16]
    8e14:	cmp	r2, #0
    8e18:	bne	8e0c <gen_linktype+0x1e58>
    8e1c:	str	r0, [r1, #16]
    8e20:	ldr	r4, [r5, r7, lsl #3]!
    8e24:	cmp	r4, #207	; 0xcf
    8e28:	bhi	8e74 <gen_linktype+0x1ec0>
    8e2c:	add	r0, r7, #1
    8e30:	cmp	r7, #15
    8e34:	str	r0, [r8, #92]	; 0x5c
    8e38:	bge	9b94 <gen_linktype+0x2be0>
    8e3c:	mov	r1, #1024	; 0x400
    8e40:	lsl	r4, r1, r0
    8e44:	mov	r0, r4
    8e48:	bl	e34 <malloc@plt>
    8e4c:	cmp	r0, #0
    8e50:	str	r0, [r5, #12]
    8e54:	beq	9b94 <gen_linktype+0x2be0>
    8e58:	mov	r1, #0
    8e5c:	mov	r2, r4
    8e60:	add	r5, r5, #8
    8e64:	bl	ea0 <memset@plt>
    8e68:	cmp	r4, #207	; 0xcf
    8e6c:	str	r4, [r5]
    8e70:	bls	9b94 <gen_linktype+0x2be0>
    8e74:	sub	r0, r4, #208	; 0xd0
    8e78:	str	r0, [r5]
    8e7c:	ldr	r1, [r5, #4]
    8e80:	add	r4, r1, r0
    8e84:	mov	r0, #21
    8e88:	mov	r1, #64	; 0x40
    8e8c:	b	83d4 <gen_linktype+0x1420>
    8e90:	.word	0x0003e5fc
    8e94:	mov	r7, r0
    8e98:	sub	r1, r4, #20
    8e9c:	mov	r2, #84	; 0x54
    8ea0:	str	r1, [r6]
    8ea4:	ldr	r0, [r6, #4]
    8ea8:	str	r2, [r0, r1]!
    8eac:	mov	r1, #240	; 0xf0
    8eb0:	mov	r2, r9
    8eb4:	str	r1, [r0, #12]
    8eb8:	mov	r1, r2
    8ebc:	ldr	r2, [r2, #16]
    8ec0:	cmp	r2, #0
    8ec4:	bne	8eb8 <gen_linktype+0x1f04>
    8ec8:	str	r0, [r1, #16]
    8ecc:	ldr	r4, [r5, r7, lsl #3]!
    8ed0:	cmp	r4, #207	; 0xcf
    8ed4:	bhi	8f20 <gen_linktype+0x1f6c>
    8ed8:	add	r0, r7, #1
    8edc:	cmp	r7, #15
    8ee0:	str	r0, [r8, #92]	; 0x5c
    8ee4:	bge	9b94 <gen_linktype+0x2be0>
    8ee8:	mov	r1, #1024	; 0x400
    8eec:	lsl	r4, r1, r0
    8ef0:	mov	r0, r4
    8ef4:	bl	e34 <malloc@plt>
    8ef8:	cmp	r0, #0
    8efc:	str	r0, [r5, #12]
    8f00:	beq	9b94 <gen_linktype+0x2be0>
    8f04:	mov	r1, #0
    8f08:	mov	r2, r4
    8f0c:	add	r5, r5, #8
    8f10:	bl	ea0 <memset@plt>
    8f14:	cmp	r4, #207	; 0xcf
    8f18:	str	r4, [r5]
    8f1c:	bls	9b94 <gen_linktype+0x2be0>
    8f20:	sub	r0, r4, #208	; 0xd0
    8f24:	str	r0, [r5]
    8f28:	ldr	r1, [r5, #4]
    8f2c:	add	r4, r1, r0
    8f30:	mov	r0, #21
    8f34:	mov	r1, #96	; 0x60
    8f38:	b	83d4 <gen_linktype+0x1420>
    8f3c:	.word	0x0003e578
    8f40:	.word	0x0003e490
    8f44:	mov	r0, #53	; 0x35
    8f48:	mov	r1, #2
    8f4c:	mov	r2, #16
    8f50:	mov	r3, #0
    8f54:	bl	17edc <sf_gen_atmfield_code>
    8f58:	mov	r6, r0
    8f5c:	mov	r0, r5
    8f60:	bl	1af48 <gen_llc_linktype>
    8f64:	mov	r4, r0
    8f68:	cmp	r6, #0
    8f6c:	beq	8fa0 <gen_linktype+0x1fec>
    8f70:	ldr	r0, [r4, #96]	; 0x60
    8f74:	mov	r1, r6
    8f78:	ldr	r2, [r1, #44]	; 0x2c
    8f7c:	add	r3, r1, #84	; 0x54
    8f80:	cmp	r2, #0
    8f84:	mov	r2, #84	; 0x54
    8f88:	movweq	r2, #60	; 0x3c
    8f8c:	addeq	r3, r1, #60	; 0x3c
    8f90:	ldr	r1, [r1, r2]
    8f94:	str	r0, [r3]
    8f98:	cmp	r1, #0
    8f9c:	bne	8f78 <gen_linktype+0x1fc4>
    8fa0:	ldr	r0, [r6, #44]	; 0x2c
    8fa4:	cmp	r4, #0
    8fa8:	clz	r0, r0
    8fac:	lsr	r0, r0, #5
    8fb0:	str	r0, [r6, #44]	; 0x2c
    8fb4:	ldr	r1, [r4, #44]	; 0x2c
    8fb8:	clz	r0, r1
    8fbc:	lsr	r0, r0, #5
    8fc0:	str	r0, [r4, #44]	; 0x2c
    8fc4:	str	r4, [sp, #4]
    8fc8:	beq	963c <gen_linktype+0x2688>
    8fcc:	cmp	r1, #0
    8fd0:	mov	r1, #60	; 0x3c
    8fd4:	add	r0, r4, #60	; 0x3c
    8fd8:	movweq	r1, #84	; 0x54
    8fdc:	addeq	r0, r4, #84	; 0x54
    8fe0:	ldr	r1, [r4, r1]
    8fe4:	cmp	r1, #0
    8fe8:	beq	9640 <gen_linktype+0x268c>
    8fec:	ldr	r2, [r1, #44]	; 0x2c
    8ff0:	add	r0, r1, #84	; 0x54
    8ff4:	cmp	r2, #0
    8ff8:	mov	r2, #84	; 0x54
    8ffc:	movweq	r2, #60	; 0x3c
    9000:	addeq	r0, r1, #60	; 0x3c
    9004:	ldr	r1, [r1, r2]
    9008:	cmp	r1, #0
    900c:	bne	8fec <gen_linktype+0x2038>
    9010:	b	9640 <gen_linktype+0x268c>
    9014:	movw	r0, #33011	; 0x80f3
    9018:	cmp	r5, r0
    901c:	movwne	r0, #32923	; 0x809b
    9020:	cmpne	r5, r0
    9024:	bne	954c <gen_linktype+0x2598>
    9028:	ldr	r1, [r8, #40]	; 0x28
    902c:	mov	r0, #1
    9030:	mov	r2, #8
    9034:	mov	r3, #4
    9038:	bl	a0a4 <gen_cmp>
    903c:	mov	r6, r0
    9040:	mov	r0, #3
    9044:	strb	r0, [sp, #6]
    9048:	movw	r0, #43690	; 0xaaaa
    904c:	strh	r0, [sp, #4]
    9050:	movw	r0, #32923	; 0x809b
    9054:	cmp	r5, r0
    9058:	bne	9368 <gen_linktype+0x23b4>
    905c:	mov	r0, #155	; 0x9b
    9060:	add	r7, sp, #4
    9064:	mov	r1, #0
    9068:	mov	r2, #8
    906c:	strb	r0, [sp, #11]
    9070:	movw	r0, #8
    9074:	mov	r3, r7
    9078:	movt	r0, #32775	; 0x8007
    907c:	str	r0, [sp, #7]
    9080:	mov	r0, #2
    9084:	bl	1b00c <gen_bcmp>
    9088:	mov	r9, r0
    908c:	mov	r4, r0
    9090:	cmp	r6, #0
    9094:	ldr	r0, [r9, #96]!	; 0x60
    9098:	beq	90c8 <gen_linktype+0x2114>
    909c:	mov	r1, r6
    90a0:	ldr	r2, [r1, #44]	; 0x2c
    90a4:	add	r3, r1, #84	; 0x54
    90a8:	cmp	r2, #0
    90ac:	mov	r2, #84	; 0x54
    90b0:	movweq	r2, #60	; 0x3c
    90b4:	addeq	r3, r1, #60	; 0x3c
    90b8:	ldr	r1, [r1, r2]
    90bc:	str	r0, [r3]
    90c0:	cmp	r1, #0
    90c4:	bne	90a0 <gen_linktype+0x20ec>
    90c8:	ldr	r0, [r6, #44]	; 0x2c
    90cc:	movw	r5, #32923	; 0x809b
    90d0:	cmp	r4, #0
    90d4:	clz	r0, r0
    90d8:	lsr	r0, r0, #5
    90dc:	str	r0, [r6, #44]	; 0x2c
    90e0:	ldr	r0, [r4, #44]	; 0x2c
    90e4:	clz	r1, r0
    90e8:	lsr	r1, r1, #5
    90ec:	str	r1, [r4, #44]	; 0x2c
    90f0:	str	r4, [sp, #4]
    90f4:	beq	9440 <gen_linktype+0x248c>
    90f8:	cmp	r0, #0
    90fc:	mov	r0, #60	; 0x3c
    9100:	add	r7, r4, #60	; 0x3c
    9104:	movweq	r0, #84	; 0x54
    9108:	addeq	r7, r4, #84	; 0x54
    910c:	ldr	r0, [r4, r0]
    9110:	cmp	r0, #0
    9114:	beq	9440 <gen_linktype+0x248c>
    9118:	ldr	r1, [r0, #44]	; 0x2c
    911c:	add	r7, r0, #84	; 0x54
    9120:	cmp	r1, #0
    9124:	mov	r1, #84	; 0x54
    9128:	movweq	r1, #60	; 0x3c
    912c:	addeq	r7, r0, #60	; 0x3c
    9130:	ldr	r0, [r0, r1]
    9134:	cmp	r0, #0
    9138:	bne	9118 <gen_linktype+0x2164>
    913c:	b	9440 <gen_linktype+0x248c>
    9140:	ldr	r1, [r8, #40]	; 0x28
    9144:	mov	r5, #33	; 0x21
    9148:	mov	r0, #1
    914c:	b	8414 <gen_linktype+0x1460>
    9150:	ldr	r1, [r8, #40]	; 0x28
    9154:	mov	r0, #1
    9158:	mov	r2, #16
    915c:	mov	r3, #26
    9160:	sub	sp, fp, #28
    9164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9168:	b	a0a4 <gen_cmp>
    916c:	ldr	r1, [r8, #40]	; 0x28
    9170:	mov	r0, #1
    9174:	mov	r2, #16
    9178:	mov	r3, #214	; 0xd6
    917c:	sub	sp, fp, #28
    9180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9184:	b	a0a4 <gen_cmp>
    9188:	ldr	r1, [r8, #40]	; 0x28
    918c:	mov	r0, #1
    9190:	mov	r2, #16
    9194:	mov	r3, #221	; 0xdd
    9198:	sub	sp, fp, #28
    919c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    91a0:	b	a0a4 <gen_cmp>
    91a4:	.word	0x0003e274
    91a8:	ldr	r1, [r8, #40]	; 0x28
    91ac:	mov	r0, #1
    91b0:	mov	r2, #16
    91b4:	mov	r3, #212	; 0xd4
    91b8:	bl	a0a4 <gen_cmp>
    91bc:	ldr	r1, [r8, #40]	; 0x28
    91c0:	mov	r5, r0
    91c4:	mov	r0, #1
    91c8:	mov	r2, #16
    91cc:	mov	r3, #240	; 0xf0
    91d0:	bl	a0a4 <gen_cmp>
    91d4:	mov	r4, r0
    91d8:	ldr	r0, [r5, #44]	; 0x2c
    91dc:	cmp	r5, #0
    91e0:	clz	r0, r0
    91e4:	lsr	r0, r0, #5
    91e8:	str	r0, [r5, #44]	; 0x2c
    91ec:	beq	92d8 <gen_linktype+0x2324>
    91f0:	ldr	r1, [r4, #96]	; 0x60
    91f4:	mov	r2, r5
    91f8:	cmp	r0, #0
    91fc:	mov	r0, #84	; 0x54
    9200:	add	r3, r2, #84	; 0x54
    9204:	movweq	r0, #60	; 0x3c
    9208:	addeq	r3, r2, #60	; 0x3c
    920c:	ldr	r2, [r2, r0]
    9210:	str	r1, [r3]
    9214:	cmp	r2, #0
    9218:	beq	92d4 <gen_linktype+0x2320>
    921c:	ldr	r0, [r2, #44]	; 0x2c
    9220:	b	91f8 <gen_linktype+0x2244>
    9224:	mov	r0, #1
    9228:	mov	r1, #2
    922c:	mov	r2, #8
    9230:	movw	r3, #910	; 0x38e
    9234:	sub	sp, fp, #28
    9238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    923c:	b	a0a4 <gen_cmp>
    9240:	mov	r0, #1
    9244:	mov	r1, #2
    9248:	mov	r2, #8
    924c:	movw	r3, #897	; 0x381
    9250:	bl	a0a4 <gen_cmp>
    9254:	mov	r5, r0
    9258:	mov	r0, #1
    925c:	mov	r1, #2
    9260:	mov	r2, #8
    9264:	movw	r3, #898	; 0x382
    9268:	bl	a0a4 <gen_cmp>
    926c:	mov	r6, r0
    9270:	mov	r0, #1
    9274:	mov	r1, #2
    9278:	mov	r2, #8
    927c:	movw	r3, #899	; 0x383
    9280:	bl	a0a4 <gen_cmp>
    9284:	mov	r4, r0
    9288:	ldr	r0, [r6, #44]	; 0x2c
    928c:	cmp	r6, #0
    9290:	clz	r0, r0
    9294:	lsr	r0, r0, #5
    9298:	str	r0, [r6, #44]	; 0x2c
    929c:	beq	9508 <gen_linktype+0x2554>
    92a0:	ldr	r1, [r4, #96]	; 0x60
    92a4:	mov	r2, r6
    92a8:	cmp	r0, #0
    92ac:	mov	r0, #84	; 0x54
    92b0:	add	r3, r2, #84	; 0x54
    92b4:	movweq	r0, #60	; 0x3c
    92b8:	addeq	r3, r2, #60	; 0x3c
    92bc:	ldr	r2, [r2, r0]
    92c0:	str	r1, [r3]
    92c4:	cmp	r2, #0
    92c8:	beq	9504 <gen_linktype+0x2550>
    92cc:	ldr	r0, [r2, #44]	; 0x2c
    92d0:	b	92a8 <gen_linktype+0x22f4>
    92d4:	ldr	r0, [r5, #44]	; 0x2c
    92d8:	clz	r0, r0
    92dc:	cmp	r4, #0
    92e0:	lsr	r0, r0, #5
    92e4:	str	r0, [r5, #44]	; 0x2c
    92e8:	str	r4, [sp, #4]
    92ec:	beq	9b78 <gen_linktype+0x2bc4>
    92f0:	mov	r1, r4
    92f4:	ldr	r2, [r1, #44]	; 0x2c
    92f8:	add	r0, r1, #84	; 0x54
    92fc:	cmp	r2, #0
    9300:	mov	r2, #84	; 0x54
    9304:	movweq	r2, #60	; 0x3c
    9308:	addeq	r0, r1, #60	; 0x3c
    930c:	ldr	r1, [r1, r2]
    9310:	cmp	r1, #0
    9314:	bne	92f4 <gen_linktype+0x2340>
    9318:	b	9b7c <gen_linktype+0x2bc8>
    931c:	ldr	r0, [r5, #44]	; 0x2c
    9320:	clz	r0, r0
    9324:	cmp	r4, #0
    9328:	lsr	r0, r0, #5
    932c:	str	r0, [r5, #44]	; 0x2c
    9330:	str	r4, [sp, #4]
    9334:	beq	9b78 <gen_linktype+0x2bc4>
    9338:	mov	r1, r4
    933c:	ldr	r2, [r1, #44]	; 0x2c
    9340:	add	r0, r1, #84	; 0x54
    9344:	cmp	r2, #0
    9348:	mov	r2, #84	; 0x54
    934c:	movweq	r2, #60	; 0x3c
    9350:	addeq	r0, r1, #60	; 0x3c
    9354:	ldr	r1, [r1, r2]
    9358:	cmp	r1, #0
    935c:	bne	933c <gen_linktype+0x2388>
    9360:	b	9b7c <gen_linktype+0x2bc8>
    9364:	.word	0x0003dfb8
    9368:	mov	r0, #243	; 0xf3
    936c:	add	r7, sp, #4
    9370:	mov	r1, #0
    9374:	mov	r2, #8
    9378:	strb	r0, [sp, #11]
    937c:	mov	r0, #-2147483648	; 0x80000000
    9380:	mov	r3, r7
    9384:	str	r0, [sp, #7]
    9388:	mov	r0, #2
    938c:	bl	1b00c <gen_bcmp>
    9390:	mov	r9, r0
    9394:	mov	r4, r0
    9398:	cmp	r6, #0
    939c:	ldr	r0, [r9, #96]!	; 0x60
    93a0:	beq	93d0 <gen_linktype+0x241c>
    93a4:	mov	r1, r6
    93a8:	ldr	r2, [r1, #44]	; 0x2c
    93ac:	add	r3, r1, #84	; 0x54
    93b0:	cmp	r2, #0
    93b4:	mov	r2, #84	; 0x54
    93b8:	movweq	r2, #60	; 0x3c
    93bc:	addeq	r3, r1, #60	; 0x3c
    93c0:	ldr	r1, [r1, r2]
    93c4:	str	r0, [r3]
    93c8:	cmp	r1, #0
    93cc:	bne	93a8 <gen_linktype+0x23f4>
    93d0:	ldr	r0, [r6, #44]	; 0x2c
    93d4:	cmp	r4, #0
    93d8:	clz	r0, r0
    93dc:	lsr	r0, r0, #5
    93e0:	str	r0, [r6, #44]	; 0x2c
    93e4:	ldr	r0, [r4, #44]	; 0x2c
    93e8:	clz	r1, r0
    93ec:	lsr	r1, r1, #5
    93f0:	str	r1, [r4, #44]	; 0x2c
    93f4:	str	r4, [sp, #4]
    93f8:	beq	9440 <gen_linktype+0x248c>
    93fc:	cmp	r0, #0
    9400:	mov	r0, #60	; 0x3c
    9404:	add	r7, r4, #60	; 0x3c
    9408:	movweq	r0, #84	; 0x54
    940c:	addeq	r7, r4, #84	; 0x54
    9410:	ldr	r0, [r4, r0]
    9414:	cmp	r0, #0
    9418:	beq	9440 <gen_linktype+0x248c>
    941c:	ldr	r1, [r0, #44]	; 0x2c
    9420:	add	r7, r0, #84	; 0x54
    9424:	cmp	r1, #0
    9428:	mov	r1, #84	; 0x54
    942c:	movweq	r1, #60	; 0x3c
    9430:	addeq	r7, r0, #60	; 0x3c
    9434:	ldr	r0, [r0, r1]
    9438:	cmp	r0, #0
    943c:	bne	941c <gen_linktype+0x2468>
    9440:	str	r6, [r7]
    9444:	mov	r2, #8
    9448:	mov	r3, r5
    944c:	ldr	r0, [r4, #44]	; 0x2c
    9450:	clz	r0, r0
    9454:	lsr	r0, r0, #5
    9458:	str	r0, [r4, #44]	; 0x2c
    945c:	ldr	r0, [r6, #96]	; 0x60
    9460:	str	r0, [r9]
    9464:	mov	r0, #1
    9468:	ldr	r1, [r8, #40]	; 0x28
    946c:	bl	a0a4 <gen_cmp>
    9470:	ldr	r1, [r0, #44]	; 0x2c
    9474:	cmp	r0, #0
    9478:	clz	r1, r1
    947c:	lsr	r1, r1, #5
    9480:	str	r1, [r0, #44]	; 0x2c
    9484:	beq	94c0 <gen_linktype+0x250c>
    9488:	ldr	r2, [r9]
    948c:	mov	r3, r0
    9490:	cmp	r1, #0
    9494:	mov	r1, #84	; 0x54
    9498:	add	r7, r3, #84	; 0x54
    949c:	movweq	r1, #60	; 0x3c
    94a0:	addeq	r7, r3, #60	; 0x3c
    94a4:	ldr	r3, [r3, r1]
    94a8:	str	r2, [r7]
    94ac:	cmp	r3, #0
    94b0:	beq	94bc <gen_linktype+0x2508>
    94b4:	ldr	r1, [r3, #44]	; 0x2c
    94b8:	b	9490 <gen_linktype+0x24dc>
    94bc:	ldr	r1, [r0, #44]	; 0x2c
    94c0:	clz	r1, r1
    94c4:	cmp	r4, #0
    94c8:	lsr	r1, r1, #5
    94cc:	str	r1, [r0, #44]	; 0x2c
    94d0:	str	r4, [sp, #4]
    94d4:	beq	9704 <gen_linktype+0x2750>
    94d8:	mov	r2, r4
    94dc:	ldr	r3, [r2, #44]	; 0x2c
    94e0:	add	r1, r2, #84	; 0x54
    94e4:	cmp	r3, #0
    94e8:	mov	r3, #84	; 0x54
    94ec:	movweq	r3, #60	; 0x3c
    94f0:	addeq	r1, r2, #60	; 0x3c
    94f4:	ldr	r2, [r2, r3]
    94f8:	cmp	r2, #0
    94fc:	bne	94dc <gen_linktype+0x2528>
    9500:	b	9708 <gen_linktype+0x2754>
    9504:	ldr	r0, [r6, #44]	; 0x2c
    9508:	clz	r0, r0
    950c:	cmp	r4, #0
    9510:	lsr	r0, r0, #5
    9514:	str	r0, [r6, #44]	; 0x2c
    9518:	str	r4, [sp, #4]
    951c:	beq	9720 <gen_linktype+0x276c>
    9520:	mov	r1, r4
    9524:	ldr	r2, [r1, #44]	; 0x2c
    9528:	add	r0, r1, #84	; 0x54
    952c:	cmp	r2, #0
    9530:	mov	r2, #84	; 0x54
    9534:	movweq	r2, #60	; 0x3c
    9538:	addeq	r0, r1, #60	; 0x3c
    953c:	ldr	r1, [r1, r2]
    9540:	cmp	r1, #0
    9544:	bne	9524 <gen_linktype+0x2570>
    9548:	b	9724 <gen_linktype+0x2770>
    954c:	cmp	r5, #254	; 0xfe
    9550:	beq	8bac <gen_linktype+0x1bf8>
    9554:	ldr	r1, [r8, #40]	; 0x28
    9558:	movw	r0, #1500	; 0x5dc
    955c:	cmp	r5, r0
    9560:	bgt	9148 <gen_linktype+0x2194>
    9564:	mov	r0, #1
    9568:	mov	r2, #8
    956c:	mov	r3, #4
    9570:	bl	a0a4 <gen_cmp>
    9574:	ldr	r1, [r8, #44]	; 0x2c
    9578:	mov	r6, r0
    957c:	mov	r0, #1
    9580:	mov	r2, #16
    9584:	mov	r3, r5
    9588:	bl	a0a4 <gen_cmp>
    958c:	mov	r4, r0
    9590:	cmp	r6, #0
    9594:	beq	95c8 <gen_linktype+0x2614>
    9598:	ldr	r0, [r4, #96]	; 0x60
    959c:	mov	r1, r6
    95a0:	ldr	r2, [r1, #44]	; 0x2c
    95a4:	add	r3, r1, #84	; 0x54
    95a8:	cmp	r2, #0
    95ac:	mov	r2, #84	; 0x54
    95b0:	movweq	r2, #60	; 0x3c
    95b4:	addeq	r3, r1, #60	; 0x3c
    95b8:	ldr	r1, [r1, r2]
    95bc:	str	r0, [r3]
    95c0:	cmp	r1, #0
    95c4:	bne	95a0 <gen_linktype+0x25ec>
    95c8:	ldr	r0, [r6, #44]	; 0x2c
    95cc:	cmp	r4, #0
    95d0:	clz	r0, r0
    95d4:	lsr	r0, r0, #5
    95d8:	str	r0, [r6, #44]	; 0x2c
    95dc:	ldr	r1, [r4, #44]	; 0x2c
    95e0:	clz	r0, r1
    95e4:	lsr	r0, r0, #5
    95e8:	str	r0, [r4, #44]	; 0x2c
    95ec:	str	r4, [sp, #4]
    95f0:	beq	963c <gen_linktype+0x2688>
    95f4:	cmp	r1, #0
    95f8:	mov	r1, #60	; 0x3c
    95fc:	add	r0, r4, #60	; 0x3c
    9600:	movweq	r1, #84	; 0x54
    9604:	addeq	r0, r4, #84	; 0x54
    9608:	ldr	r1, [r4, r1]
    960c:	cmp	r1, #0
    9610:	beq	9640 <gen_linktype+0x268c>
    9614:	ldr	r2, [r1, #44]	; 0x2c
    9618:	add	r0, r1, #84	; 0x54
    961c:	cmp	r2, #0
    9620:	mov	r2, #84	; 0x54
    9624:	movweq	r2, #60	; 0x3c
    9628:	addeq	r0, r1, #60	; 0x3c
    962c:	ldr	r1, [r1, r2]
    9630:	cmp	r1, #0
    9634:	bne	9614 <gen_linktype+0x2660>
    9638:	b	9640 <gen_linktype+0x268c>
    963c:	add	r0, sp, #4
    9640:	str	r6, [r0]
    9644:	ldr	r0, [r4, #44]	; 0x2c
    9648:	clz	r0, r0
    964c:	lsr	r0, r0, #5
    9650:	str	r0, [r4, #44]	; 0x2c
    9654:	ldr	r0, [r6, #96]	; 0x60
    9658:	str	r0, [r4, #96]	; 0x60
    965c:	mov	r0, r4
    9660:	sub	sp, fp, #28
    9664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9668:	.word	0x0003dd90
    966c:	mov	r0, #2
    9670:	mov	r1, #0
    9674:	mov	r2, #16
    9678:	mov	r3, #224	; 0xe0
    967c:	bl	a0a4 <gen_cmp>
    9680:	mov	r5, r0
    9684:	movw	r0, #0
    9688:	add	r6, sp, #4
    968c:	mov	r1, #0
    9690:	mov	r2, #8
    9694:	movt	r0, #14209	; 0x3781
    9698:	mov	r3, r6
    969c:	str	r0, [sp, #8]
    96a0:	movw	r0, #43690	; 0xaaaa
    96a4:	movt	r0, #3
    96a8:	str	r0, [sp, #4]
    96ac:	mov	r0, #2
    96b0:	bl	1b00c <gen_bcmp>
    96b4:	mov	r4, r0
    96b8:	ldr	r0, [r5, #44]	; 0x2c
    96bc:	cmp	r5, #0
    96c0:	clz	r0, r0
    96c4:	lsr	r0, r0, #5
    96c8:	str	r0, [r5, #44]	; 0x2c
    96cc:	beq	97c8 <gen_linktype+0x2814>
    96d0:	ldr	r1, [r4, #96]	; 0x60
    96d4:	mov	r2, r5
    96d8:	cmp	r0, #0
    96dc:	mov	r0, #84	; 0x54
    96e0:	add	r3, r2, #84	; 0x54
    96e4:	movweq	r0, #60	; 0x3c
    96e8:	addeq	r3, r2, #60	; 0x3c
    96ec:	ldr	r2, [r2, r0]
    96f0:	str	r1, [r3]
    96f4:	cmp	r2, #0
    96f8:	beq	97c4 <gen_linktype+0x2810>
    96fc:	ldr	r0, [r2, #44]	; 0x2c
    9700:	b	96d8 <gen_linktype+0x2724>
    9704:	add	r1, sp, #4
    9708:	str	r0, [r1]
    970c:	ldr	r0, [r0, #96]	; 0x60
    9710:	str	r0, [r9]
    9714:	mov	r0, r4
    9718:	sub	sp, fp, #28
    971c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9720:	add	r0, sp, #4
    9724:	str	r6, [r0]
    9728:	cmp	r5, #0
    972c:	ldr	r0, [r6, #96]	; 0x60
    9730:	str	r0, [r4, #96]	; 0x60
    9734:	ldr	r0, [r5, #44]	; 0x2c
    9738:	clz	r0, r0
    973c:	lsr	r0, r0, #5
    9740:	str	r0, [r5, #44]	; 0x2c
    9744:	beq	9780 <gen_linktype+0x27cc>
    9748:	ldr	r1, [r4, #96]	; 0x60
    974c:	mov	r2, r5
    9750:	cmp	r0, #0
    9754:	mov	r0, #84	; 0x54
    9758:	add	r3, r2, #84	; 0x54
    975c:	movweq	r0, #60	; 0x3c
    9760:	addeq	r3, r2, #60	; 0x3c
    9764:	ldr	r2, [r2, r0]
    9768:	str	r1, [r3]
    976c:	cmp	r2, #0
    9770:	beq	977c <gen_linktype+0x27c8>
    9774:	ldr	r0, [r2, #44]	; 0x2c
    9778:	b	9750 <gen_linktype+0x279c>
    977c:	ldr	r0, [r5, #44]	; 0x2c
    9780:	clz	r0, r0
    9784:	cmp	r4, #0
    9788:	lsr	r0, r0, #5
    978c:	str	r0, [r5, #44]	; 0x2c
    9790:	str	r4, [sp, #4]
    9794:	beq	9b78 <gen_linktype+0x2bc4>
    9798:	mov	r1, r4
    979c:	ldr	r2, [r1, #44]	; 0x2c
    97a0:	add	r0, r1, #84	; 0x54
    97a4:	cmp	r2, #0
    97a8:	mov	r2, #84	; 0x54
    97ac:	movweq	r2, #60	; 0x3c
    97b0:	addeq	r0, r1, #60	; 0x3c
    97b4:	ldr	r1, [r1, r2]
    97b8:	cmp	r1, #0
    97bc:	bne	979c <gen_linktype+0x27e8>
    97c0:	b	9b7c <gen_linktype+0x2bc8>
    97c4:	ldr	r0, [r5, #44]	; 0x2c
    97c8:	clz	r0, r0
    97cc:	cmp	r4, #0
    97d0:	lsr	r0, r0, #5
    97d4:	str	r0, [r5, #44]	; 0x2c
    97d8:	str	r4, [sp, #4]
    97dc:	beq	9808 <gen_linktype+0x2854>
    97e0:	mov	r0, r4
    97e4:	ldr	r1, [r0, #44]	; 0x2c
    97e8:	add	r6, r0, #84	; 0x54
    97ec:	cmp	r1, #0
    97f0:	mov	r1, #84	; 0x54
    97f4:	movweq	r1, #60	; 0x3c
    97f8:	addeq	r6, r0, #60	; 0x3c
    97fc:	ldr	r0, [r0, r1]
    9800:	cmp	r0, #0
    9804:	bne	97e4 <gen_linktype+0x2830>
    9808:	str	r5, [r6]
    980c:	mov	r2, #8
    9810:	mov	r3, #4
    9814:	ldr	r0, [r5, #96]	; 0x60
    9818:	str	r0, [r4, #96]	; 0x60
    981c:	mov	r0, #1
    9820:	ldr	r1, [r8, #40]	; 0x28
    9824:	bl	a0a4 <gen_cmp>
    9828:	cmp	r0, #0
    982c:	beq	9860 <gen_linktype+0x28ac>
    9830:	ldr	r1, [r4, #96]	; 0x60
    9834:	mov	r2, r0
    9838:	ldr	r3, [r2, #44]	; 0x2c
    983c:	add	r7, r2, #84	; 0x54
    9840:	cmp	r3, #0
    9844:	mov	r3, #84	; 0x54
    9848:	movweq	r3, #60	; 0x3c
    984c:	addeq	r7, r2, #60	; 0x3c
    9850:	ldr	r2, [r2, r3]
    9854:	str	r1, [r7]
    9858:	cmp	r2, #0
    985c:	bne	9838 <gen_linktype+0x2884>
    9860:	ldr	r1, [r0, #44]	; 0x2c
    9864:	cmp	r4, #0
    9868:	clz	r1, r1
    986c:	lsr	r1, r1, #5
    9870:	str	r1, [r0, #44]	; 0x2c
    9874:	ldr	r2, [r4, #44]	; 0x2c
    9878:	clz	r1, r2
    987c:	lsr	r1, r1, #5
    9880:	str	r1, [r4, #44]	; 0x2c
    9884:	str	r4, [sp, #4]
    9888:	beq	9920 <gen_linktype+0x296c>
    988c:	cmp	r2, #0
    9890:	mov	r2, #60	; 0x3c
    9894:	add	r1, r4, #60	; 0x3c
    9898:	movweq	r2, #84	; 0x54
    989c:	addeq	r1, r4, #84	; 0x54
    98a0:	ldr	r2, [r4, r2]
    98a4:	cmp	r2, #0
    98a8:	beq	9924 <gen_linktype+0x2970>
    98ac:	ldr	r3, [r2, #44]	; 0x2c
    98b0:	add	r1, r2, #84	; 0x54
    98b4:	cmp	r3, #0
    98b8:	mov	r3, #84	; 0x54
    98bc:	movweq	r3, #60	; 0x3c
    98c0:	addeq	r1, r2, #60	; 0x3c
    98c4:	ldr	r2, [r2, r3]
    98c8:	cmp	r2, #0
    98cc:	bne	98ac <gen_linktype+0x28f8>
    98d0:	b	9924 <gen_linktype+0x2970>
    98d4:	.word	0x0003db44
    98d8:	ldr	r0, [r4, #44]	; 0x2c
    98dc:	clz	r0, r0
    98e0:	cmp	r5, #0
    98e4:	lsr	r0, r0, #5
    98e8:	str	r0, [r4, #44]	; 0x2c
    98ec:	str	r5, [sp, #4]
    98f0:	beq	9abc <gen_linktype+0x2b08>
    98f4:	mov	r1, r5
    98f8:	ldr	r2, [r1, #44]	; 0x2c
    98fc:	add	r0, r1, #84	; 0x54
    9900:	cmp	r2, #0
    9904:	mov	r2, #84	; 0x54
    9908:	movweq	r2, #60	; 0x3c
    990c:	addeq	r0, r1, #60	; 0x3c
    9910:	ldr	r1, [r1, r2]
    9914:	cmp	r1, #0
    9918:	bne	98f8 <gen_linktype+0x2944>
    991c:	b	9ac0 <gen_linktype+0x2b0c>
    9920:	add	r1, sp, #4
    9924:	str	r0, [r1]
    9928:	mov	r2, #8
    992c:	mov	r3, #1
    9930:	ldr	r1, [r4, #44]	; 0x2c
    9934:	clz	r1, r1
    9938:	lsr	r1, r1, #5
    993c:	str	r1, [r4, #44]	; 0x2c
    9940:	ldr	r0, [r0, #96]	; 0x60
    9944:	str	r0, [r4, #96]	; 0x60
    9948:	mov	r0, #1
    994c:	ldr	r1, [r8, #40]	; 0x28
    9950:	bl	a0a4 <gen_cmp>
    9954:	ldr	r1, [r0, #44]	; 0x2c
    9958:	cmp	r0, #0
    995c:	clz	r1, r1
    9960:	lsr	r1, r1, #5
    9964:	str	r1, [r0, #44]	; 0x2c
    9968:	beq	99a4 <gen_linktype+0x29f0>
    996c:	ldr	r2, [r4, #96]	; 0x60
    9970:	mov	r3, r0
    9974:	cmp	r1, #0
    9978:	mov	r1, #84	; 0x54
    997c:	add	r7, r3, #84	; 0x54
    9980:	movweq	r1, #60	; 0x3c
    9984:	addeq	r7, r3, #60	; 0x3c
    9988:	ldr	r3, [r3, r1]
    998c:	str	r2, [r7]
    9990:	cmp	r3, #0
    9994:	beq	99a0 <gen_linktype+0x29ec>
    9998:	ldr	r1, [r3, #44]	; 0x2c
    999c:	b	9974 <gen_linktype+0x29c0>
    99a0:	ldr	r1, [r0, #44]	; 0x2c
    99a4:	clz	r1, r1
    99a8:	cmp	r4, #0
    99ac:	lsr	r1, r1, #5
    99b0:	str	r1, [r0, #44]	; 0x2c
    99b4:	str	r4, [sp, #4]
    99b8:	beq	99e8 <gen_linktype+0x2a34>
    99bc:	mov	r2, r4
    99c0:	ldr	r3, [r2, #44]	; 0x2c
    99c4:	add	r1, r2, #84	; 0x54
    99c8:	cmp	r3, #0
    99cc:	mov	r3, #84	; 0x54
    99d0:	movweq	r3, #60	; 0x3c
    99d4:	addeq	r1, r2, #60	; 0x3c
    99d8:	ldr	r2, [r2, r3]
    99dc:	cmp	r2, #0
    99e0:	bne	99c0 <gen_linktype+0x2a0c>
    99e4:	b	99ec <gen_linktype+0x2a38>
    99e8:	add	r1, sp, #4
    99ec:	str	r0, [r1]
    99f0:	mov	r2, #8
    99f4:	movw	r3, #33079	; 0x8137
    99f8:	ldr	r0, [r0, #96]	; 0x60
    99fc:	str	r0, [r4, #96]	; 0x60
    9a00:	mov	r0, #1
    9a04:	ldr	r1, [r8, #40]	; 0x28
    9a08:	bl	a0a4 <gen_cmp>
    9a0c:	ldr	r1, [r0, #44]	; 0x2c
    9a10:	cmp	r0, #0
    9a14:	clz	r1, r1
    9a18:	lsr	r1, r1, #5
    9a1c:	str	r1, [r0, #44]	; 0x2c
    9a20:	beq	9a5c <gen_linktype+0x2aa8>
    9a24:	ldr	r2, [r4, #96]	; 0x60
    9a28:	mov	r3, r0
    9a2c:	cmp	r1, #0
    9a30:	mov	r1, #84	; 0x54
    9a34:	add	r7, r3, #84	; 0x54
    9a38:	movweq	r1, #60	; 0x3c
    9a3c:	addeq	r7, r3, #60	; 0x3c
    9a40:	ldr	r3, [r3, r1]
    9a44:	str	r2, [r7]
    9a48:	cmp	r3, #0
    9a4c:	beq	9a58 <gen_linktype+0x2aa4>
    9a50:	ldr	r1, [r3, #44]	; 0x2c
    9a54:	b	9a2c <gen_linktype+0x2a78>
    9a58:	ldr	r1, [r0, #44]	; 0x2c
    9a5c:	clz	r1, r1
    9a60:	cmp	r4, #0
    9a64:	lsr	r1, r1, #5
    9a68:	str	r1, [r0, #44]	; 0x2c
    9a6c:	str	r4, [sp, #4]
    9a70:	beq	9aa0 <gen_linktype+0x2aec>
    9a74:	mov	r2, r4
    9a78:	ldr	r3, [r2, #44]	; 0x2c
    9a7c:	add	r1, r2, #84	; 0x54
    9a80:	cmp	r3, #0
    9a84:	mov	r3, #84	; 0x54
    9a88:	movweq	r3, #60	; 0x3c
    9a8c:	addeq	r1, r2, #60	; 0x3c
    9a90:	ldr	r2, [r2, r3]
    9a94:	cmp	r2, #0
    9a98:	bne	9a78 <gen_linktype+0x2ac4>
    9a9c:	b	9aa4 <gen_linktype+0x2af0>
    9aa0:	add	r1, sp, #4
    9aa4:	str	r0, [r1]
    9aa8:	ldr	r0, [r0, #96]	; 0x60
    9aac:	str	r0, [r4, #96]	; 0x60
    9ab0:	mov	r0, r4
    9ab4:	sub	sp, fp, #28
    9ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9abc:	add	r0, sp, #4
    9ac0:	str	r4, [r0]
    9ac4:	mov	r2, #8
    9ac8:	mov	r3, #47	; 0x2f
    9acc:	ldr	r0, [r4, #96]	; 0x60
    9ad0:	str	r0, [r5, #96]	; 0x60
    9ad4:	mov	r0, #1
    9ad8:	ldr	r1, [r8, #40]	; 0x28
    9adc:	bl	a0a4 <gen_cmp>
    9ae0:	mov	r4, r0
    9ae4:	ldr	r0, [r5, #44]	; 0x2c
    9ae8:	cmp	r5, #0
    9aec:	clz	r0, r0
    9af0:	lsr	r0, r0, #5
    9af4:	str	r0, [r5, #44]	; 0x2c
    9af8:	beq	9b34 <gen_linktype+0x2b80>
    9afc:	ldr	r1, [r4, #96]	; 0x60
    9b00:	mov	r2, r5
    9b04:	cmp	r0, #0
    9b08:	mov	r0, #84	; 0x54
    9b0c:	add	r3, r2, #84	; 0x54
    9b10:	movweq	r0, #60	; 0x3c
    9b14:	addeq	r3, r2, #60	; 0x3c
    9b18:	ldr	r2, [r2, r0]
    9b1c:	str	r1, [r3]
    9b20:	cmp	r2, #0
    9b24:	beq	9b30 <gen_linktype+0x2b7c>
    9b28:	ldr	r0, [r2, #44]	; 0x2c
    9b2c:	b	9b04 <gen_linktype+0x2b50>
    9b30:	ldr	r0, [r5, #44]	; 0x2c
    9b34:	clz	r0, r0
    9b38:	cmp	r4, #0
    9b3c:	lsr	r0, r0, #5
    9b40:	str	r0, [r5, #44]	; 0x2c
    9b44:	str	r4, [sp, #4]
    9b48:	beq	9b78 <gen_linktype+0x2bc4>
    9b4c:	mov	r1, r4
    9b50:	ldr	r2, [r1, #44]	; 0x2c
    9b54:	add	r0, r1, #84	; 0x54
    9b58:	cmp	r2, #0
    9b5c:	mov	r2, #84	; 0x54
    9b60:	movweq	r2, #60	; 0x3c
    9b64:	addeq	r0, r1, #60	; 0x3c
    9b68:	ldr	r1, [r1, r2]
    9b6c:	cmp	r1, #0
    9b70:	bne	9b50 <gen_linktype+0x2b9c>
    9b74:	b	9b7c <gen_linktype+0x2bc8>
    9b78:	add	r0, sp, #4
    9b7c:	str	r5, [r0]
    9b80:	ldr	r0, [r5, #96]	; 0x60
    9b84:	str	r0, [r4, #96]	; 0x60
    9b88:	mov	r0, r4
    9b8c:	sub	sp, fp, #28
    9b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9b94:	ldr	r0, [pc, #260]	; 9ca0 <gen_linktype+0x2cec>
    9b98:	add	r0, pc, r0
    9b9c:	bl	214c <sf_bpf_error>
    9ba0:	ldr	r0, [pc, #212]	; 9c7c <gen_linktype+0x2cc8>
    9ba4:	add	r0, pc, r0
    9ba8:	bl	214c <sf_bpf_error>
    9bac:	ldr	r0, [pc, #212]	; 9c88 <gen_linktype+0x2cd4>
    9bb0:	add	r0, pc, r0
    9bb4:	bl	214c <sf_bpf_error>
    9bb8:	ldr	r0, [pc, #176]	; 9c70 <gen_linktype+0x2cbc>
    9bbc:	add	r0, pc, r0
    9bc0:	bl	214c <sf_bpf_error>
    9bc4:	ldr	r0, [pc, #180]	; 9c80 <gen_linktype+0x2ccc>
    9bc8:	add	r0, pc, r0
    9bcc:	bl	214c <sf_bpf_error>
    9bd0:	ldr	r0, [pc, #172]	; 9c84 <gen_linktype+0x2cd0>
    9bd4:	add	r0, pc, r0
    9bd8:	bl	214c <sf_bpf_error>
    9bdc:	ldr	r0, [pc, #124]	; 9c60 <gen_linktype+0x2cac>
    9be0:	add	r0, pc, r0
    9be4:	bl	214c <sf_bpf_error>
    9be8:	ldr	r0, [pc, #124]	; 9c6c <gen_linktype+0x2cb8>
    9bec:	add	r0, pc, r0
    9bf0:	bl	214c <sf_bpf_error>
    9bf4:	ldr	r0, [pc, #108]	; 9c68 <gen_linktype+0x2cb4>
    9bf8:	add	r0, pc, r0
    9bfc:	bl	214c <sf_bpf_error>
    9c00:	ldr	r0, [pc, #112]	; 9c78 <gen_linktype+0x2cc4>
    9c04:	add	r0, pc, r0
    9c08:	bl	214c <sf_bpf_error>
    9c0c:	ldr	r0, [pc, #80]	; 9c64 <gen_linktype+0x2cb0>
    9c10:	add	r0, pc, r0
    9c14:	bl	214c <sf_bpf_error>
    9c18:	ldr	r0, [pc, #108]	; 9c8c <gen_linktype+0x2cd8>
    9c1c:	add	r0, pc, r0
    9c20:	bl	214c <sf_bpf_error>
    9c24:	ldr	r0, [pc, #100]	; 9c90 <gen_linktype+0x2cdc>
    9c28:	add	r0, pc, r0
    9c2c:	bl	214c <sf_bpf_error>
    9c30:	ldr	r0, [pc, #60]	; 9c74 <gen_linktype+0x2cc0>
    9c34:	add	r0, pc, r0
    9c38:	bl	214c <sf_bpf_error>
    9c3c:	ldr	r0, [pc, #80]	; 9c94 <gen_linktype+0x2ce0>
    9c40:	add	r0, pc, r0
    9c44:	bl	214c <sf_bpf_error>
    9c48:	ldr	r0, [pc, #72]	; 9c98 <gen_linktype+0x2ce4>
    9c4c:	add	r0, pc, r0
    9c50:	bl	214c <sf_bpf_error>
    9c54:	ldr	r0, [pc, #64]	; 9c9c <gen_linktype+0x2ce8>
    9c58:	add	r0, pc, r0
    9c5c:	bl	214c <sf_bpf_error>
    9c60:	.word	0x0001fece
    9c64:	.word	0x0001febd
    9c68:	.word	0x0001ff16
    9c6c:	.word	0x0001ff51
    9c70:	.word	0x0001ffb2
    9c74:	.word	0x0001ff69
    9c78:	.word	0x0001ffc7
    9c7c:	.word	0x00020056
    9c80:	.word	0x00020060
    9c84:	.word	0x00020088
    9c88:	.word	0x000200da
    9c8c:	.word	0x000200a6
    9c90:	.word	0x000200d0
    9c94:	.word	0x000200e7
    9c98:	.word	0x0002010b
    9c9c:	.word	0x0002012e
    9ca0:	.word	0x0001fecc

00009ca4 <sf_gen_portop>:
    9ca4:	push	{r4, r5, r6, r7, fp, lr}
    9ca8:	add	fp, sp, #16
    9cac:	sub	sp, sp, #8
    9cb0:	mov	r6, r2
    9cb4:	mov	r3, r1
    9cb8:	mov	r5, r0
    9cbc:	mov	r0, #3
    9cc0:	mov	r1, #9
    9cc4:	mov	r2, #16
    9cc8:	bl	a0a4 <gen_cmp>
    9ccc:	mov	r7, r0
    9cd0:	bl	a160 <gen_ipfrag>
    9cd4:	mov	r4, r0
    9cd8:	cmp	r7, #0
    9cdc:	beq	9d10 <sf_gen_portop+0x6c>
    9ce0:	ldr	r0, [r4, #96]	; 0x60
    9ce4:	mov	r1, r7
    9ce8:	ldr	r2, [r1, #44]	; 0x2c
    9cec:	add	r3, r1, #84	; 0x54
    9cf0:	cmp	r2, #0
    9cf4:	mov	r2, #84	; 0x54
    9cf8:	movweq	r2, #60	; 0x3c
    9cfc:	addeq	r3, r1, #60	; 0x3c
    9d00:	ldr	r1, [r1, r2]
    9d04:	str	r0, [r3]
    9d08:	cmp	r1, #0
    9d0c:	bne	9ce8 <sf_gen_portop+0x44>
    9d10:	ldr	r0, [r7, #44]	; 0x2c
    9d14:	cmp	r4, #0
    9d18:	clz	r0, r0
    9d1c:	lsr	r0, r0, #5
    9d20:	str	r0, [r7, #44]	; 0x2c
    9d24:	ldr	r1, [r4, #44]	; 0x2c
    9d28:	clz	r0, r1
    9d2c:	lsr	r0, r0, #5
    9d30:	str	r0, [r4, #44]	; 0x2c
    9d34:	str	r4, [sp, #4]
    9d38:	beq	9d84 <sf_gen_portop+0xe0>
    9d3c:	cmp	r1, #0
    9d40:	mov	r1, #60	; 0x3c
    9d44:	add	r0, r4, #60	; 0x3c
    9d48:	movweq	r1, #84	; 0x54
    9d4c:	addeq	r0, r4, #84	; 0x54
    9d50:	ldr	r1, [r4, r1]
    9d54:	cmp	r1, #0
    9d58:	beq	9d88 <sf_gen_portop+0xe4>
    9d5c:	ldr	r2, [r1, #44]	; 0x2c
    9d60:	add	r0, r1, #84	; 0x54
    9d64:	cmp	r2, #0
    9d68:	mov	r2, #84	; 0x54
    9d6c:	movweq	r2, #60	; 0x3c
    9d70:	addeq	r0, r1, #60	; 0x3c
    9d74:	ldr	r1, [r1, r2]
    9d78:	cmp	r1, #0
    9d7c:	bne	9d5c <sf_gen_portop+0xb8>
    9d80:	b	9d88 <sf_gen_portop+0xe4>
    9d84:	add	r0, sp, #4
    9d88:	str	r7, [r0]
    9d8c:	cmp	r6, #4
    9d90:	ldr	r0, [r4, #44]	; 0x2c
    9d94:	clz	r0, r0
    9d98:	lsr	r0, r0, #5
    9d9c:	str	r0, [r4, #44]	; 0x2c
    9da0:	ldr	r0, [r7, #96]	; 0x60
    9da4:	str	r0, [r4, #96]	; 0x60
    9da8:	bhi	a0a0 <sf_gen_portop+0x3fc>
    9dac:	add	r0, pc, #4
    9db0:	ldr	r1, [r0, r6, lsl #2]
    9db4:	add	pc, r0, r1
    9db8:	.word	0x00000014
    9dbc:	.word	0x000001ac
    9dc0:	.word	0x000001b8
    9dc4:	.word	0x00000014
    9dc8:	.word	0x000000d4
    9dcc:	mov	r0, #5
    9dd0:	mov	r1, #0
    9dd4:	mov	r2, #8
    9dd8:	mov	r3, r5
    9ddc:	bl	a0a4 <gen_cmp>
    9de0:	mov	r6, r0
    9de4:	mov	r0, #5
    9de8:	mov	r1, #2
    9dec:	mov	r2, #8
    9df0:	mov	r3, r5
    9df4:	bl	a0a4 <gen_cmp>
    9df8:	ldr	r1, [r6, #44]	; 0x2c
    9dfc:	cmp	r6, #0
    9e00:	clz	r1, r1
    9e04:	lsr	r1, r1, #5
    9e08:	str	r1, [r6, #44]	; 0x2c
    9e0c:	beq	9e48 <sf_gen_portop+0x1a4>
    9e10:	ldr	r2, [r0, #96]	; 0x60
    9e14:	mov	r3, r6
    9e18:	cmp	r1, #0
    9e1c:	mov	r1, #84	; 0x54
    9e20:	add	r7, r3, #84	; 0x54
    9e24:	movweq	r1, #60	; 0x3c
    9e28:	addeq	r7, r3, #60	; 0x3c
    9e2c:	ldr	r3, [r3, r1]
    9e30:	str	r2, [r7]
    9e34:	cmp	r3, #0
    9e38:	beq	9e44 <sf_gen_portop+0x1a0>
    9e3c:	ldr	r1, [r3, #44]	; 0x2c
    9e40:	b	9e18 <sf_gen_portop+0x174>
    9e44:	ldr	r1, [r6, #44]	; 0x2c
    9e48:	clz	r1, r1
    9e4c:	cmp	r0, #0
    9e50:	lsr	r1, r1, #5
    9e54:	str	r1, [r6, #44]	; 0x2c
    9e58:	str	r0, [sp, #4]
    9e5c:	beq	9f90 <sf_gen_portop+0x2ec>
    9e60:	mov	r2, r0
    9e64:	ldr	r3, [r2, #44]	; 0x2c
    9e68:	add	r1, r2, #84	; 0x54
    9e6c:	cmp	r3, #0
    9e70:	mov	r3, #84	; 0x54
    9e74:	movweq	r3, #60	; 0x3c
    9e78:	addeq	r1, r2, #60	; 0x3c
    9e7c:	ldr	r2, [r2, r3]
    9e80:	cmp	r2, #0
    9e84:	bne	9e64 <sf_gen_portop+0x1c0>
    9e88:	b	9f94 <sf_gen_portop+0x2f0>
    9e8c:	mov	r0, #5
    9e90:	mov	r1, #0
    9e94:	mov	r2, #8
    9e98:	mov	r3, r5
    9e9c:	bl	a0a4 <gen_cmp>
    9ea0:	mov	r6, r0
    9ea4:	mov	r0, #5
    9ea8:	mov	r1, #2
    9eac:	mov	r2, #8
    9eb0:	mov	r3, r5
    9eb4:	bl	a0a4 <gen_cmp>
    9eb8:	cmp	r6, #0
    9ebc:	beq	9ef0 <sf_gen_portop+0x24c>
    9ec0:	ldr	r1, [r0, #96]	; 0x60
    9ec4:	mov	r2, r6
    9ec8:	ldr	r3, [r2, #44]	; 0x2c
    9ecc:	add	r7, r2, #84	; 0x54
    9ed0:	cmp	r3, #0
    9ed4:	mov	r3, #84	; 0x54
    9ed8:	movweq	r3, #60	; 0x3c
    9edc:	addeq	r7, r2, #60	; 0x3c
    9ee0:	ldr	r2, [r2, r3]
    9ee4:	str	r1, [r7]
    9ee8:	cmp	r2, #0
    9eec:	bne	9ec8 <sf_gen_portop+0x224>
    9ef0:	ldr	r1, [r6, #44]	; 0x2c
    9ef4:	cmp	r0, #0
    9ef8:	clz	r1, r1
    9efc:	lsr	r1, r1, #5
    9f00:	str	r1, [r6, #44]	; 0x2c
    9f04:	ldr	r2, [r0, #44]	; 0x2c
    9f08:	clz	r1, r2
    9f0c:	lsr	r1, r1, #5
    9f10:	str	r1, [r0, #44]	; 0x2c
    9f14:	str	r0, [sp, #4]
    9f18:	beq	9fac <sf_gen_portop+0x308>
    9f1c:	cmp	r2, #0
    9f20:	mov	r2, #60	; 0x3c
    9f24:	add	r1, r0, #60	; 0x3c
    9f28:	movweq	r2, #84	; 0x54
    9f2c:	addeq	r1, r0, #84	; 0x54
    9f30:	ldr	r2, [r0, r2]
    9f34:	cmp	r2, #0
    9f38:	beq	9fb0 <sf_gen_portop+0x30c>
    9f3c:	ldr	r3, [r2, #44]	; 0x2c
    9f40:	add	r1, r2, #84	; 0x54
    9f44:	cmp	r3, #0
    9f48:	mov	r3, #84	; 0x54
    9f4c:	movweq	r3, #60	; 0x3c
    9f50:	addeq	r1, r2, #60	; 0x3c
    9f54:	ldr	r2, [r2, r3]
    9f58:	cmp	r2, #0
    9f5c:	bne	9f3c <sf_gen_portop+0x298>
    9f60:	b	9fb0 <sf_gen_portop+0x30c>
    9f64:	mov	r0, #5
    9f68:	mov	r1, #0
    9f6c:	b	9f78 <sf_gen_portop+0x2d4>
    9f70:	mov	r0, #5
    9f74:	mov	r1, #2
    9f78:	mov	r2, #8
    9f7c:	mov	r3, r5
    9f80:	bl	a0a4 <gen_cmp>
    9f84:	cmp	r4, #0
    9f88:	bne	9fd4 <sf_gen_portop+0x330>
    9f8c:	b	a004 <sf_gen_portop+0x360>
    9f90:	add	r1, sp, #4
    9f94:	str	r6, [r1]
    9f98:	ldr	r1, [r6, #96]	; 0x60
    9f9c:	str	r1, [r0, #96]	; 0x60
    9fa0:	cmp	r4, #0
    9fa4:	bne	9fd4 <sf_gen_portop+0x330>
    9fa8:	b	a004 <sf_gen_portop+0x360>
    9fac:	add	r1, sp, #4
    9fb0:	str	r6, [r1]
    9fb4:	ldr	r1, [r0, #44]	; 0x2c
    9fb8:	clz	r1, r1
    9fbc:	lsr	r1, r1, #5
    9fc0:	str	r1, [r0, #44]	; 0x2c
    9fc4:	ldr	r1, [r6, #96]	; 0x60
    9fc8:	str	r1, [r0, #96]	; 0x60
    9fcc:	cmp	r4, #0
    9fd0:	beq	a004 <sf_gen_portop+0x360>
    9fd4:	ldr	r1, [r0, #96]	; 0x60
    9fd8:	mov	r2, r4
    9fdc:	ldr	r3, [r2, #44]	; 0x2c
    9fe0:	add	r7, r2, #84	; 0x54
    9fe4:	cmp	r3, #0
    9fe8:	mov	r3, #84	; 0x54
    9fec:	movweq	r3, #60	; 0x3c
    9ff0:	addeq	r7, r2, #60	; 0x3c
    9ff4:	ldr	r2, [r2, r3]
    9ff8:	str	r1, [r7]
    9ffc:	cmp	r2, #0
    a000:	bne	9fdc <sf_gen_portop+0x338>
    a004:	ldr	r1, [r4, #44]	; 0x2c
    a008:	cmp	r0, #0
    a00c:	clz	r1, r1
    a010:	lsr	r1, r1, #5
    a014:	str	r1, [r4, #44]	; 0x2c
    a018:	ldr	r2, [r0, #44]	; 0x2c
    a01c:	clz	r1, r2
    a020:	lsr	r1, r1, #5
    a024:	str	r1, [r0, #44]	; 0x2c
    a028:	str	r0, [sp, #4]
    a02c:	beq	a078 <sf_gen_portop+0x3d4>
    a030:	cmp	r2, #0
    a034:	mov	r2, #60	; 0x3c
    a038:	add	r1, r0, #60	; 0x3c
    a03c:	movweq	r2, #84	; 0x54
    a040:	addeq	r1, r0, #84	; 0x54
    a044:	ldr	r2, [r0, r2]
    a048:	cmp	r2, #0
    a04c:	beq	a07c <sf_gen_portop+0x3d8>
    a050:	ldr	r3, [r2, #44]	; 0x2c
    a054:	add	r1, r2, #84	; 0x54
    a058:	cmp	r3, #0
    a05c:	mov	r3, #84	; 0x54
    a060:	movweq	r3, #60	; 0x3c
    a064:	addeq	r1, r2, #60	; 0x3c
    a068:	ldr	r2, [r2, r3]
    a06c:	cmp	r2, #0
    a070:	bne	a050 <sf_gen_portop+0x3ac>
    a074:	b	a07c <sf_gen_portop+0x3d8>
    a078:	add	r1, sp, #4
    a07c:	str	r4, [r1]
    a080:	ldr	r1, [r0, #44]	; 0x2c
    a084:	clz	r1, r1
    a088:	lsr	r1, r1, #5
    a08c:	str	r1, [r0, #44]	; 0x2c
    a090:	ldr	r1, [r4, #96]	; 0x60
    a094:	str	r1, [r0, #96]	; 0x60
    a098:	sub	sp, fp, #16
    a09c:	pop	{r4, r5, r6, r7, fp, pc}
    a0a0:	bl	f24 <abort@plt>

0000a0a4 <gen_cmp>:
    a0a4:	push	{r4, r5, r6, r7, fp, lr}
    a0a8:	add	fp, sp, #16
    a0ac:	mov	r4, r3
    a0b0:	bl	165d8 <gen_load_a>
    a0b4:	ldr	r1, [pc, #152]	; a154 <gen_cmp+0xb0>
    a0b8:	mov	r5, r0
    a0bc:	add	r1, pc, r1
    a0c0:	ldr	r0, [r1, #92]	; 0x5c
    a0c4:	ldr	r7, [pc, #140]	; a158 <gen_cmp+0xb4>
    a0c8:	add	r7, pc, r7
    a0cc:	ldr	r6, [r7, r0, lsl #3]!
    a0d0:	cmp	r6, #207	; 0xcf
    a0d4:	bhi	a120 <gen_cmp+0x7c>
    a0d8:	add	r2, r0, #1
    a0dc:	cmp	r0, #15
    a0e0:	str	r2, [r1, #92]	; 0x5c
    a0e4:	bge	a148 <gen_cmp+0xa4>
    a0e8:	mov	r0, #1024	; 0x400
    a0ec:	lsl	r6, r0, r2
    a0f0:	mov	r0, r6
    a0f4:	bl	e34 <malloc@plt>
    a0f8:	cmp	r0, #0
    a0fc:	str	r0, [r7, #12]
    a100:	beq	a148 <gen_cmp+0xa4>
    a104:	mov	r1, #0
    a108:	mov	r2, r6
    a10c:	add	r7, r7, #8
    a110:	bl	ea0 <memset@plt>
    a114:	cmp	r6, #207	; 0xcf
    a118:	str	r6, [r7]
    a11c:	bls	a148 <gen_cmp+0xa4>
    a120:	sub	r0, r6, #208	; 0xd0
    a124:	str	r0, [r7]
    a128:	ldr	r1, [r7, #4]
    a12c:	add	r0, r1, r0
    a130:	mov	r1, #21
    a134:	str	r4, [r0, #20]
    a138:	str	r5, [r0, #4]
    a13c:	str	r1, [r0, #8]
    a140:	str	r0, [r0, #96]	; 0x60
    a144:	pop	{r4, r5, r6, r7, fp, pc}
    a148:	ldr	r0, [pc, #12]	; a15c <gen_cmp+0xb8>
    a14c:	add	r0, pc, r0
    a150:	bl	214c <sf_bpf_error>
    a154:	.word	0x0003c424
    a158:	.word	0x0003c358
    a15c:	.word	0x0001f918

0000a160 <gen_ipfrag>:
    a160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a164:	add	fp, sp, #28
    a168:	sub	sp, sp, #4
    a16c:	ldr	r9, [pc, #660]	; a408 <gen_ipfrag+0x2a8>
    a170:	add	r9, pc, r9
    a174:	ldrb	r0, [r9, #16]
    a178:	ldr	r1, [r9, #48]	; 0x30
    a17c:	ldr	r8, [pc, #648]	; a40c <gen_ipfrag+0x2ac>
    a180:	add	r6, r1, #6
    a184:	cmp	r0, #0
    a188:	add	r8, pc, r8
    a18c:	beq	a20c <gen_ipfrag+0xac>
    a190:	ldr	r4, [r9, #100]	; 0x64
    a194:	str	r6, [sp]
    a198:	cmn	r4, #1
    a19c:	bne	a1ac <gen_ipfrag+0x4c>
    a1a0:	bl	1305c <alloc_reg>
    a1a4:	mov	r4, r0
    a1a8:	str	r0, [r9, #100]	; 0x64
    a1ac:	ldr	r0, [r9, #92]	; 0x5c
    a1b0:	mov	r6, r8
    a1b4:	ldr	r5, [r6, r0, lsl #3]!
    a1b8:	cmp	r5, #19
    a1bc:	bhi	a26c <gen_ipfrag+0x10c>
    a1c0:	add	r7, r0, #1
    a1c4:	cmp	r0, #15
    a1c8:	str	r7, [r9, #92]	; 0x5c
    a1cc:	bge	a378 <gen_ipfrag+0x218>
    a1d0:	mov	r0, #1024	; 0x400
    a1d4:	lsl	r5, r0, r7
    a1d8:	mov	r0, r5
    a1dc:	bl	e34 <malloc@plt>
    a1e0:	cmp	r0, #0
    a1e4:	str	r0, [r6, #12]
    a1e8:	beq	a378 <gen_ipfrag+0x218>
    a1ec:	mov	r1, #0
    a1f0:	mov	r2, r5
    a1f4:	add	r6, r6, #8
    a1f8:	bl	ea0 <memset@plt>
    a1fc:	cmp	r5, #19
    a200:	str	r5, [r6]
    a204:	bhi	a270 <gen_ipfrag+0x110>
    a208:	b	a378 <gen_ipfrag+0x218>
    a20c:	ldr	r7, [r9, #92]	; 0x5c
    a210:	mov	r5, r8
    a214:	ldr	r4, [r5, r7, lsl #3]!
    a218:	cmp	r4, #19
    a21c:	bhi	a300 <gen_ipfrag+0x1a0>
    a220:	add	sl, r7, #1
    a224:	cmp	r7, #15
    a228:	str	sl, [r9, #92]	; 0x5c
    a22c:	bge	a378 <gen_ipfrag+0x218>
    a230:	mov	r0, #1024	; 0x400
    a234:	lsl	r4, r0, sl
    a238:	mov	r0, r4
    a23c:	bl	e34 <malloc@plt>
    a240:	cmp	r0, #0
    a244:	str	r0, [r5, #12]
    a248:	beq	a378 <gen_ipfrag+0x218>
    a24c:	mov	r1, #0
    a250:	mov	r2, r4
    a254:	add	r5, r5, #8
    a258:	bl	ea0 <memset@plt>
    a25c:	cmp	r4, #19
    a260:	str	r4, [r5]
    a264:	bhi	a304 <gen_ipfrag+0x1a4>
    a268:	b	a378 <gen_ipfrag+0x218>
    a26c:	mov	r7, r0
    a270:	sub	r0, r5, #20
    a274:	mov	r1, #97	; 0x61
    a278:	str	r0, [r6]
    a27c:	ldr	r5, [r6, #4]
    a280:	str	r1, [r5, r0]!
    a284:	cmp	r5, #0
    a288:	str	r4, [r5, #12]
    a28c:	beq	a2ec <gen_ipfrag+0x18c>
    a290:	mov	r6, r8
    a294:	ldr	r4, [r6, r7, lsl #3]!
    a298:	cmp	r4, #19
    a29c:	bhi	a384 <gen_ipfrag+0x224>
    a2a0:	add	sl, r7, #1
    a2a4:	cmp	r7, #15
    a2a8:	str	sl, [r9, #92]	; 0x5c
    a2ac:	bge	a378 <gen_ipfrag+0x218>
    a2b0:	mov	r0, #1024	; 0x400
    a2b4:	lsl	r4, r0, sl
    a2b8:	mov	r0, r4
    a2bc:	bl	e34 <malloc@plt>
    a2c0:	cmp	r0, #0
    a2c4:	str	r0, [r6, #12]
    a2c8:	beq	a378 <gen_ipfrag+0x218>
    a2cc:	mov	r1, #0
    a2d0:	mov	r2, r4
    a2d4:	add	r6, r6, #8
    a2d8:	bl	ea0 <memset@plt>
    a2dc:	cmp	r4, #19
    a2e0:	str	r4, [r6]
    a2e4:	bhi	a388 <gen_ipfrag+0x228>
    a2e8:	b	a378 <gen_ipfrag+0x218>
    a2ec:	ldr	r6, [sp]
    a2f0:	mov	r5, r8
    a2f4:	ldr	r4, [r5, r7, lsl #3]!
    a2f8:	cmp	r4, #19
    a2fc:	bls	a220 <gen_ipfrag+0xc0>
    a300:	mov	sl, r7
    a304:	sub	r0, r4, #20
    a308:	mov	r1, #40	; 0x28
    a30c:	str	r0, [r5]
    a310:	ldr	r5, [r5, #4]
    a314:	str	r1, [r5, r0]!
    a318:	ldr	r0, [r9, #44]	; 0x2c
    a31c:	add	r0, r0, r6
    a320:	str	r0, [r5, #12]
    a324:	ldr	r4, [r8, sl, lsl #3]!
    a328:	cmp	r4, #207	; 0xcf
    a32c:	bhi	a3c8 <gen_ipfrag+0x268>
    a330:	add	r0, sl, #1
    a334:	cmp	sl, #15
    a338:	str	r0, [r9, #92]	; 0x5c
    a33c:	bge	a378 <gen_ipfrag+0x218>
    a340:	mov	r1, #1024	; 0x400
    a344:	lsl	r4, r1, r0
    a348:	mov	r0, r4
    a34c:	bl	e34 <malloc@plt>
    a350:	cmp	r0, #0
    a354:	str	r0, [r8, #12]
    a358:	beq	a378 <gen_ipfrag+0x218>
    a35c:	mov	r1, #0
    a360:	mov	r2, r4
    a364:	add	r8, r8, #8
    a368:	bl	ea0 <memset@plt>
    a36c:	cmp	r4, #207	; 0xcf
    a370:	str	r4, [r8]
    a374:	bhi	a3c8 <gen_ipfrag+0x268>
    a378:	ldr	r0, [pc, #144]	; a410 <gen_ipfrag+0x2b0>
    a37c:	add	r0, pc, r0
    a380:	bl	214c <sf_bpf_error>
    a384:	mov	sl, r7
    a388:	sub	r1, r4, #20
    a38c:	mov	r2, #72	; 0x48
    a390:	str	r1, [r6]
    a394:	ldr	r0, [r6, #4]
    a398:	str	r2, [r0, r1]!
    a39c:	mov	r2, r5
    a3a0:	ldr	r1, [sp]
    a3a4:	str	r1, [r0, #12]
    a3a8:	mov	r1, r2
    a3ac:	ldr	r2, [r2, #16]
    a3b0:	cmp	r2, #0
    a3b4:	bne	a3a8 <gen_ipfrag+0x248>
    a3b8:	str	r0, [r1, #16]
    a3bc:	ldr	r4, [r8, sl, lsl #3]!
    a3c0:	cmp	r4, #207	; 0xcf
    a3c4:	bls	a330 <gen_ipfrag+0x1d0>
    a3c8:	sub	r0, r4, #208	; 0xd0
    a3cc:	movw	r2, #8191	; 0x1fff
    a3d0:	str	r0, [r8]
    a3d4:	ldr	r1, [r8, #4]
    a3d8:	add	r0, r1, r0
    a3dc:	mov	r1, #69	; 0x45
    a3e0:	str	r2, [r0, #20]
    a3e4:	str	r5, [r0, #4]
    a3e8:	str	r1, [r0, #8]
    a3ec:	ldr	r1, [r0, #44]	; 0x2c
    a3f0:	clz	r1, r1
    a3f4:	lsr	r1, r1, #5
    a3f8:	str	r1, [r0, #44]	; 0x2c
    a3fc:	str	r0, [r0, #96]	; 0x60
    a400:	sub	sp, fp, #28
    a404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a408:	.word	0x0003c370
    a40c:	.word	0x0003c298
    a410:	.word	0x0001f6e8

0000a414 <sf_gen_portop6>:
    a414:	push	{r4, r5, r6, sl, fp, lr}
    a418:	add	fp, sp, #16
    a41c:	sub	sp, sp, #16
    a420:	mov	r5, r2
    a424:	mov	r3, r1
    a428:	mov	r6, r0
    a42c:	mov	r0, #3
    a430:	mov	r1, #6
    a434:	mov	r2, #16
    a438:	bl	a0a4 <gen_cmp>
    a43c:	cmp	r5, #4
    a440:	bhi	a73c <sf_gen_portop6+0x328>
    a444:	mov	r4, r0
    a448:	add	r0, pc, #4
    a44c:	ldr	r1, [r0, r5, lsl #2]
    a450:	add	pc, r0, r1
    a454:	.word	0x00000014
    a458:	.word	0x000001ac
    a45c:	.word	0x000001b8
    a460:	.word	0x00000014
    a464:	.word	0x000000d4
    a468:	mov	r0, #6
    a46c:	mov	r1, #0
    a470:	mov	r2, #8
    a474:	mov	r3, r6
    a478:	bl	a0a4 <gen_cmp>
    a47c:	mov	r5, r0
    a480:	mov	r0, #6
    a484:	mov	r1, #2
    a488:	mov	r2, #8
    a48c:	mov	r3, r6
    a490:	bl	a0a4 <gen_cmp>
    a494:	ldr	r1, [r5, #44]	; 0x2c
    a498:	cmp	r5, #0
    a49c:	clz	r1, r1
    a4a0:	lsr	r1, r1, #5
    a4a4:	str	r1, [r5, #44]	; 0x2c
    a4a8:	beq	a4e4 <sf_gen_portop6+0xd0>
    a4ac:	ldr	r2, [r0, #96]	; 0x60
    a4b0:	mov	r3, r5
    a4b4:	cmp	r1, #0
    a4b8:	mov	r1, #84	; 0x54
    a4bc:	add	r6, r3, #84	; 0x54
    a4c0:	movweq	r1, #60	; 0x3c
    a4c4:	addeq	r6, r3, #60	; 0x3c
    a4c8:	ldr	r3, [r3, r1]
    a4cc:	str	r2, [r6]
    a4d0:	cmp	r3, #0
    a4d4:	beq	a4e0 <sf_gen_portop6+0xcc>
    a4d8:	ldr	r1, [r3, #44]	; 0x2c
    a4dc:	b	a4b4 <sf_gen_portop6+0xa0>
    a4e0:	ldr	r1, [r5, #44]	; 0x2c
    a4e4:	clz	r1, r1
    a4e8:	cmp	r0, #0
    a4ec:	lsr	r1, r1, #5
    a4f0:	str	r1, [r5, #44]	; 0x2c
    a4f4:	str	r0, [sp, #4]
    a4f8:	beq	a62c <sf_gen_portop6+0x218>
    a4fc:	mov	r2, r0
    a500:	ldr	r3, [r2, #44]	; 0x2c
    a504:	add	r1, r2, #84	; 0x54
    a508:	cmp	r3, #0
    a50c:	mov	r3, #84	; 0x54
    a510:	movweq	r3, #60	; 0x3c
    a514:	addeq	r1, r2, #60	; 0x3c
    a518:	ldr	r2, [r2, r3]
    a51c:	cmp	r2, #0
    a520:	bne	a500 <sf_gen_portop6+0xec>
    a524:	b	a630 <sf_gen_portop6+0x21c>
    a528:	mov	r0, #6
    a52c:	mov	r1, #0
    a530:	mov	r2, #8
    a534:	mov	r3, r6
    a538:	bl	a0a4 <gen_cmp>
    a53c:	mov	r5, r0
    a540:	mov	r0, #6
    a544:	mov	r1, #2
    a548:	mov	r2, #8
    a54c:	mov	r3, r6
    a550:	bl	a0a4 <gen_cmp>
    a554:	cmp	r5, #0
    a558:	beq	a58c <sf_gen_portop6+0x178>
    a55c:	ldr	r1, [r0, #96]	; 0x60
    a560:	mov	r2, r5
    a564:	ldr	r3, [r2, #44]	; 0x2c
    a568:	add	r6, r2, #84	; 0x54
    a56c:	cmp	r3, #0
    a570:	mov	r3, #84	; 0x54
    a574:	movweq	r3, #60	; 0x3c
    a578:	addeq	r6, r2, #60	; 0x3c
    a57c:	ldr	r2, [r2, r3]
    a580:	str	r1, [r6]
    a584:	cmp	r2, #0
    a588:	bne	a564 <sf_gen_portop6+0x150>
    a58c:	ldr	r1, [r5, #44]	; 0x2c
    a590:	cmp	r0, #0
    a594:	clz	r1, r1
    a598:	lsr	r1, r1, #5
    a59c:	str	r1, [r5, #44]	; 0x2c
    a5a0:	ldr	r2, [r0, #44]	; 0x2c
    a5a4:	clz	r1, r2
    a5a8:	lsr	r1, r1, #5
    a5ac:	str	r1, [r0, #44]	; 0x2c
    a5b0:	str	r0, [sp, #12]
    a5b4:	beq	a648 <sf_gen_portop6+0x234>
    a5b8:	cmp	r2, #0
    a5bc:	mov	r2, #60	; 0x3c
    a5c0:	add	r1, r0, #60	; 0x3c
    a5c4:	movweq	r2, #84	; 0x54
    a5c8:	addeq	r1, r0, #84	; 0x54
    a5cc:	ldr	r2, [r0, r2]
    a5d0:	cmp	r2, #0
    a5d4:	beq	a64c <sf_gen_portop6+0x238>
    a5d8:	ldr	r3, [r2, #44]	; 0x2c
    a5dc:	add	r1, r2, #84	; 0x54
    a5e0:	cmp	r3, #0
    a5e4:	mov	r3, #84	; 0x54
    a5e8:	movweq	r3, #60	; 0x3c
    a5ec:	addeq	r1, r2, #60	; 0x3c
    a5f0:	ldr	r2, [r2, r3]
    a5f4:	cmp	r2, #0
    a5f8:	bne	a5d8 <sf_gen_portop6+0x1c4>
    a5fc:	b	a64c <sf_gen_portop6+0x238>
    a600:	mov	r0, #6
    a604:	mov	r1, #0
    a608:	b	a614 <sf_gen_portop6+0x200>
    a60c:	mov	r0, #6
    a610:	mov	r1, #2
    a614:	mov	r2, #8
    a618:	mov	r3, r6
    a61c:	bl	a0a4 <gen_cmp>
    a620:	cmp	r4, #0
    a624:	bne	a670 <sf_gen_portop6+0x25c>
    a628:	b	a6a0 <sf_gen_portop6+0x28c>
    a62c:	add	r1, sp, #4
    a630:	str	r5, [r1]
    a634:	ldr	r1, [r5, #96]	; 0x60
    a638:	str	r1, [r0, #96]	; 0x60
    a63c:	cmp	r4, #0
    a640:	bne	a670 <sf_gen_portop6+0x25c>
    a644:	b	a6a0 <sf_gen_portop6+0x28c>
    a648:	add	r1, sp, #12
    a64c:	str	r5, [r1]
    a650:	ldr	r1, [r0, #44]	; 0x2c
    a654:	clz	r1, r1
    a658:	lsr	r1, r1, #5
    a65c:	str	r1, [r0, #44]	; 0x2c
    a660:	ldr	r1, [r5, #96]	; 0x60
    a664:	str	r1, [r0, #96]	; 0x60
    a668:	cmp	r4, #0
    a66c:	beq	a6a0 <sf_gen_portop6+0x28c>
    a670:	ldr	r1, [r0, #96]	; 0x60
    a674:	mov	r2, r4
    a678:	ldr	r3, [r2, #44]	; 0x2c
    a67c:	add	r6, r2, #84	; 0x54
    a680:	cmp	r3, #0
    a684:	mov	r3, #84	; 0x54
    a688:	movweq	r3, #60	; 0x3c
    a68c:	addeq	r6, r2, #60	; 0x3c
    a690:	ldr	r2, [r2, r3]
    a694:	str	r1, [r6]
    a698:	cmp	r2, #0
    a69c:	bne	a678 <sf_gen_portop6+0x264>
    a6a0:	ldr	r1, [r4, #44]	; 0x2c
    a6a4:	cmp	r0, #0
    a6a8:	clz	r1, r1
    a6ac:	lsr	r1, r1, #5
    a6b0:	str	r1, [r4, #44]	; 0x2c
    a6b4:	ldr	r2, [r0, #44]	; 0x2c
    a6b8:	clz	r1, r2
    a6bc:	lsr	r1, r1, #5
    a6c0:	str	r1, [r0, #44]	; 0x2c
    a6c4:	str	r0, [sp, #8]
    a6c8:	beq	a714 <sf_gen_portop6+0x300>
    a6cc:	cmp	r2, #0
    a6d0:	mov	r2, #60	; 0x3c
    a6d4:	add	r1, r0, #60	; 0x3c
    a6d8:	movweq	r2, #84	; 0x54
    a6dc:	addeq	r1, r0, #84	; 0x54
    a6e0:	ldr	r2, [r0, r2]
    a6e4:	cmp	r2, #0
    a6e8:	beq	a718 <sf_gen_portop6+0x304>
    a6ec:	ldr	r3, [r2, #44]	; 0x2c
    a6f0:	add	r1, r2, #84	; 0x54
    a6f4:	cmp	r3, #0
    a6f8:	mov	r3, #84	; 0x54
    a6fc:	movweq	r3, #60	; 0x3c
    a700:	addeq	r1, r2, #60	; 0x3c
    a704:	ldr	r2, [r2, r3]
    a708:	cmp	r2, #0
    a70c:	bne	a6ec <sf_gen_portop6+0x2d8>
    a710:	b	a718 <sf_gen_portop6+0x304>
    a714:	add	r1, sp, #8
    a718:	str	r4, [r1]
    a71c:	ldr	r1, [r0, #44]	; 0x2c
    a720:	clz	r1, r1
    a724:	lsr	r1, r1, #5
    a728:	str	r1, [r0, #44]	; 0x2c
    a72c:	ldr	r1, [r4, #96]	; 0x60
    a730:	str	r1, [r0, #96]	; 0x60
    a734:	sub	sp, fp, #16
    a738:	pop	{r4, r5, r6, sl, fp, pc}
    a73c:	bl	f24 <abort@plt>

0000a740 <sf_gen_portrangeop>:
    a740:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    a744:	add	fp, sp, #24
    a748:	sub	sp, sp, #8
    a74c:	mov	r7, r3
    a750:	mov	r3, r2
    a754:	mov	r8, r1
    a758:	mov	r6, r0
    a75c:	mov	r0, #3
    a760:	mov	r1, #9
    a764:	mov	r2, #16
    a768:	bl	a0a4 <gen_cmp>
    a76c:	mov	r5, r0
    a770:	bl	a160 <gen_ipfrag>
    a774:	mov	r4, r0
    a778:	cmp	r5, #0
    a77c:	beq	a7b0 <sf_gen_portrangeop+0x70>
    a780:	ldr	r0, [r4, #96]	; 0x60
    a784:	mov	r1, r5
    a788:	ldr	r2, [r1, #44]	; 0x2c
    a78c:	add	r3, r1, #84	; 0x54
    a790:	cmp	r2, #0
    a794:	mov	r2, #84	; 0x54
    a798:	movweq	r2, #60	; 0x3c
    a79c:	addeq	r3, r1, #60	; 0x3c
    a7a0:	ldr	r1, [r1, r2]
    a7a4:	str	r0, [r3]
    a7a8:	cmp	r1, #0
    a7ac:	bne	a788 <sf_gen_portrangeop+0x48>
    a7b0:	ldr	r0, [r5, #44]	; 0x2c
    a7b4:	cmp	r4, #0
    a7b8:	clz	r0, r0
    a7bc:	lsr	r0, r0, #5
    a7c0:	str	r0, [r5, #44]	; 0x2c
    a7c4:	ldr	r1, [r4, #44]	; 0x2c
    a7c8:	clz	r0, r1
    a7cc:	lsr	r0, r0, #5
    a7d0:	str	r0, [r4, #44]	; 0x2c
    a7d4:	str	r4, [sp, #4]
    a7d8:	beq	a824 <sf_gen_portrangeop+0xe4>
    a7dc:	cmp	r1, #0
    a7e0:	mov	r1, #60	; 0x3c
    a7e4:	add	r0, r4, #60	; 0x3c
    a7e8:	movweq	r1, #84	; 0x54
    a7ec:	addeq	r0, r4, #84	; 0x54
    a7f0:	ldr	r1, [r4, r1]
    a7f4:	cmp	r1, #0
    a7f8:	beq	a828 <sf_gen_portrangeop+0xe8>
    a7fc:	ldr	r2, [r1, #44]	; 0x2c
    a800:	add	r0, r1, #84	; 0x54
    a804:	cmp	r2, #0
    a808:	mov	r2, #84	; 0x54
    a80c:	movweq	r2, #60	; 0x3c
    a810:	addeq	r0, r1, #60	; 0x3c
    a814:	ldr	r1, [r1, r2]
    a818:	cmp	r1, #0
    a81c:	bne	a7fc <sf_gen_portrangeop+0xbc>
    a820:	b	a828 <sf_gen_portrangeop+0xe8>
    a824:	add	r0, sp, #4
    a828:	str	r5, [r0]
    a82c:	cmp	r7, #4
    a830:	ldr	r0, [r4, #44]	; 0x2c
    a834:	clz	r0, r0
    a838:	lsr	r0, r0, #5
    a83c:	str	r0, [r4, #44]	; 0x2c
    a840:	ldr	r0, [r5, #96]	; 0x60
    a844:	str	r0, [r4, #96]	; 0x60
    a848:	bhi	ab28 <sf_gen_portrangeop+0x3e8>
    a84c:	add	r0, pc, #4
    a850:	ldr	r1, [r0, r7, lsl #2]
    a854:	add	pc, r0, r1
    a858:	.word	0x00000014
    a85c:	.word	0x0000019c
    a860:	.word	0x000001a4
    a864:	.word	0x00000014
    a868:	.word	0x000000cc
    a86c:	mov	r0, #0
    a870:	mov	r1, r6
    a874:	mov	r2, r8
    a878:	bl	ab2c <gen_portrangeatom>
    a87c:	mov	r5, r0
    a880:	mov	r0, #2
    a884:	mov	r1, r6
    a888:	mov	r2, r8
    a88c:	bl	ab2c <gen_portrangeatom>
    a890:	ldr	r1, [r5, #44]	; 0x2c
    a894:	cmp	r5, #0
    a898:	clz	r1, r1
    a89c:	lsr	r1, r1, #5
    a8a0:	str	r1, [r5, #44]	; 0x2c
    a8a4:	beq	a8e0 <sf_gen_portrangeop+0x1a0>
    a8a8:	ldr	r2, [r0, #96]	; 0x60
    a8ac:	mov	r3, r5
    a8b0:	cmp	r1, #0
    a8b4:	mov	r1, #84	; 0x54
    a8b8:	add	r7, r3, #84	; 0x54
    a8bc:	movweq	r1, #60	; 0x3c
    a8c0:	addeq	r7, r3, #60	; 0x3c
    a8c4:	ldr	r3, [r3, r1]
    a8c8:	str	r2, [r7]
    a8cc:	cmp	r3, #0
    a8d0:	beq	a8dc <sf_gen_portrangeop+0x19c>
    a8d4:	ldr	r1, [r3, #44]	; 0x2c
    a8d8:	b	a8b0 <sf_gen_portrangeop+0x170>
    a8dc:	ldr	r1, [r5, #44]	; 0x2c
    a8e0:	clz	r1, r1
    a8e4:	cmp	r0, #0
    a8e8:	lsr	r1, r1, #5
    a8ec:	str	r1, [r5, #44]	; 0x2c
    a8f0:	str	r0, [sp, #4]
    a8f4:	beq	aa18 <sf_gen_portrangeop+0x2d8>
    a8f8:	mov	r2, r0
    a8fc:	ldr	r3, [r2, #44]	; 0x2c
    a900:	add	r1, r2, #84	; 0x54
    a904:	cmp	r3, #0
    a908:	mov	r3, #84	; 0x54
    a90c:	movweq	r3, #60	; 0x3c
    a910:	addeq	r1, r2, #60	; 0x3c
    a914:	ldr	r2, [r2, r3]
    a918:	cmp	r2, #0
    a91c:	bne	a8fc <sf_gen_portrangeop+0x1bc>
    a920:	b	aa1c <sf_gen_portrangeop+0x2dc>
    a924:	mov	r0, #0
    a928:	mov	r1, r6
    a92c:	mov	r2, r8
    a930:	bl	ab2c <gen_portrangeatom>
    a934:	mov	r7, r0
    a938:	mov	r0, #2
    a93c:	mov	r1, r6
    a940:	mov	r2, r8
    a944:	bl	ab2c <gen_portrangeatom>
    a948:	cmp	r7, #0
    a94c:	beq	a980 <sf_gen_portrangeop+0x240>
    a950:	ldr	r1, [r0, #96]	; 0x60
    a954:	mov	r2, r7
    a958:	ldr	r3, [r2, #44]	; 0x2c
    a95c:	add	r6, r2, #84	; 0x54
    a960:	cmp	r3, #0
    a964:	mov	r3, #84	; 0x54
    a968:	movweq	r3, #60	; 0x3c
    a96c:	addeq	r6, r2, #60	; 0x3c
    a970:	ldr	r2, [r2, r3]
    a974:	str	r1, [r6]
    a978:	cmp	r2, #0
    a97c:	bne	a958 <sf_gen_portrangeop+0x218>
    a980:	ldr	r1, [r7, #44]	; 0x2c
    a984:	cmp	r0, #0
    a988:	clz	r1, r1
    a98c:	lsr	r1, r1, #5
    a990:	str	r1, [r7, #44]	; 0x2c
    a994:	ldr	r2, [r0, #44]	; 0x2c
    a998:	clz	r1, r2
    a99c:	lsr	r1, r1, #5
    a9a0:	str	r1, [r0, #44]	; 0x2c
    a9a4:	str	r0, [sp, #4]
    a9a8:	beq	aa34 <sf_gen_portrangeop+0x2f4>
    a9ac:	cmp	r2, #0
    a9b0:	mov	r2, #60	; 0x3c
    a9b4:	add	r1, r0, #60	; 0x3c
    a9b8:	movweq	r2, #84	; 0x54
    a9bc:	addeq	r1, r0, #84	; 0x54
    a9c0:	ldr	r2, [r0, r2]
    a9c4:	cmp	r2, #0
    a9c8:	beq	aa38 <sf_gen_portrangeop+0x2f8>
    a9cc:	ldr	r3, [r2, #44]	; 0x2c
    a9d0:	add	r1, r2, #84	; 0x54
    a9d4:	cmp	r3, #0
    a9d8:	mov	r3, #84	; 0x54
    a9dc:	movweq	r3, #60	; 0x3c
    a9e0:	addeq	r1, r2, #60	; 0x3c
    a9e4:	ldr	r2, [r2, r3]
    a9e8:	cmp	r2, #0
    a9ec:	bne	a9cc <sf_gen_portrangeop+0x28c>
    a9f0:	b	aa38 <sf_gen_portrangeop+0x2f8>
    a9f4:	mov	r0, #0
    a9f8:	b	aa00 <sf_gen_portrangeop+0x2c0>
    a9fc:	mov	r0, #2
    aa00:	mov	r1, r6
    aa04:	mov	r2, r8
    aa08:	bl	ab2c <gen_portrangeatom>
    aa0c:	cmp	r4, #0
    aa10:	bne	aa5c <sf_gen_portrangeop+0x31c>
    aa14:	b	aa8c <sf_gen_portrangeop+0x34c>
    aa18:	add	r1, sp, #4
    aa1c:	str	r5, [r1]
    aa20:	ldr	r1, [r5, #96]	; 0x60
    aa24:	str	r1, [r0, #96]	; 0x60
    aa28:	cmp	r4, #0
    aa2c:	bne	aa5c <sf_gen_portrangeop+0x31c>
    aa30:	b	aa8c <sf_gen_portrangeop+0x34c>
    aa34:	add	r1, sp, #4
    aa38:	str	r7, [r1]
    aa3c:	ldr	r1, [r0, #44]	; 0x2c
    aa40:	clz	r1, r1
    aa44:	lsr	r1, r1, #5
    aa48:	str	r1, [r0, #44]	; 0x2c
    aa4c:	ldr	r1, [r7, #96]	; 0x60
    aa50:	str	r1, [r0, #96]	; 0x60
    aa54:	cmp	r4, #0
    aa58:	beq	aa8c <sf_gen_portrangeop+0x34c>
    aa5c:	ldr	r1, [r0, #96]	; 0x60
    aa60:	mov	r2, r4
    aa64:	ldr	r3, [r2, #44]	; 0x2c
    aa68:	add	r7, r2, #84	; 0x54
    aa6c:	cmp	r3, #0
    aa70:	mov	r3, #84	; 0x54
    aa74:	movweq	r3, #60	; 0x3c
    aa78:	addeq	r7, r2, #60	; 0x3c
    aa7c:	ldr	r2, [r2, r3]
    aa80:	str	r1, [r7]
    aa84:	cmp	r2, #0
    aa88:	bne	aa64 <sf_gen_portrangeop+0x324>
    aa8c:	ldr	r1, [r4, #44]	; 0x2c
    aa90:	cmp	r0, #0
    aa94:	clz	r1, r1
    aa98:	lsr	r1, r1, #5
    aa9c:	str	r1, [r4, #44]	; 0x2c
    aaa0:	ldr	r2, [r0, #44]	; 0x2c
    aaa4:	clz	r1, r2
    aaa8:	lsr	r1, r1, #5
    aaac:	str	r1, [r0, #44]	; 0x2c
    aab0:	str	r0, [sp, #4]
    aab4:	beq	ab00 <sf_gen_portrangeop+0x3c0>
    aab8:	cmp	r2, #0
    aabc:	mov	r2, #60	; 0x3c
    aac0:	add	r1, r0, #60	; 0x3c
    aac4:	movweq	r2, #84	; 0x54
    aac8:	addeq	r1, r0, #84	; 0x54
    aacc:	ldr	r2, [r0, r2]
    aad0:	cmp	r2, #0
    aad4:	beq	ab04 <sf_gen_portrangeop+0x3c4>
    aad8:	ldr	r3, [r2, #44]	; 0x2c
    aadc:	add	r1, r2, #84	; 0x54
    aae0:	cmp	r3, #0
    aae4:	mov	r3, #84	; 0x54
    aae8:	movweq	r3, #60	; 0x3c
    aaec:	addeq	r1, r2, #60	; 0x3c
    aaf0:	ldr	r2, [r2, r3]
    aaf4:	cmp	r2, #0
    aaf8:	bne	aad8 <sf_gen_portrangeop+0x398>
    aafc:	b	ab04 <sf_gen_portrangeop+0x3c4>
    ab00:	add	r1, sp, #4
    ab04:	str	r4, [r1]
    ab08:	ldr	r1, [r0, #44]	; 0x2c
    ab0c:	clz	r1, r1
    ab10:	lsr	r1, r1, #5
    ab14:	str	r1, [r0, #44]	; 0x2c
    ab18:	ldr	r1, [r4, #96]	; 0x60
    ab1c:	str	r1, [r0, #96]	; 0x60
    ab20:	sub	sp, fp, #24
    ab24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    ab28:	bl	f24 <abort@plt>

0000ab2c <gen_portrangeatom>:
    ab2c:	push	{r4, r5, r6, r7, fp, lr}
    ab30:	add	fp, sp, #16
    ab34:	sub	sp, sp, #8
    ab38:	mov	r7, r0
    ab3c:	cmp	r1, r2
    ab40:	mov	r3, r1
    ab44:	mov	r6, r1
    ab48:	mov	r5, r2
    ab4c:	mov	r0, #5
    ab50:	movgt	r3, r2
    ab54:	mov	r1, r7
    ab58:	mov	r2, #8
    ab5c:	bl	1698c <gen_cmp_ge>
    ab60:	cmp	r6, r5
    ab64:	mov	r4, r0
    ab68:	mov	r0, #5
    ab6c:	mov	r1, r7
    ab70:	mov	r2, #8
    ab74:	movgt	r5, r6
    ab78:	mov	r3, r5
    ab7c:	bl	1b478 <gen_cmp_le>
    ab80:	cmp	r4, #0
    ab84:	beq	abb8 <gen_portrangeatom+0x8c>
    ab88:	ldr	r1, [r0, #96]	; 0x60
    ab8c:	mov	r2, r4
    ab90:	ldr	r3, [r2, #44]	; 0x2c
    ab94:	add	r7, r2, #84	; 0x54
    ab98:	cmp	r3, #0
    ab9c:	mov	r3, #84	; 0x54
    aba0:	movweq	r3, #60	; 0x3c
    aba4:	addeq	r7, r2, #60	; 0x3c
    aba8:	ldr	r2, [r2, r3]
    abac:	str	r1, [r7]
    abb0:	cmp	r2, #0
    abb4:	bne	ab90 <gen_portrangeatom+0x64>
    abb8:	ldr	r1, [r4, #44]	; 0x2c
    abbc:	cmp	r0, #0
    abc0:	clz	r1, r1
    abc4:	lsr	r1, r1, #5
    abc8:	str	r1, [r4, #44]	; 0x2c
    abcc:	ldr	r2, [r0, #44]	; 0x2c
    abd0:	clz	r1, r2
    abd4:	lsr	r1, r1, #5
    abd8:	str	r1, [r0, #44]	; 0x2c
    abdc:	str	r0, [sp, #4]
    abe0:	beq	ac2c <gen_portrangeatom+0x100>
    abe4:	cmp	r2, #0
    abe8:	mov	r2, #60	; 0x3c
    abec:	add	r1, r0, #60	; 0x3c
    abf0:	movweq	r2, #84	; 0x54
    abf4:	addeq	r1, r0, #84	; 0x54
    abf8:	ldr	r2, [r0, r2]
    abfc:	cmp	r2, #0
    ac00:	beq	ac30 <gen_portrangeatom+0x104>
    ac04:	ldr	r3, [r2, #44]	; 0x2c
    ac08:	add	r1, r2, #84	; 0x54
    ac0c:	cmp	r3, #0
    ac10:	mov	r3, #84	; 0x54
    ac14:	movweq	r3, #60	; 0x3c
    ac18:	addeq	r1, r2, #60	; 0x3c
    ac1c:	ldr	r2, [r2, r3]
    ac20:	cmp	r2, #0
    ac24:	bne	ac04 <gen_portrangeatom+0xd8>
    ac28:	b	ac30 <gen_portrangeatom+0x104>
    ac2c:	add	r1, sp, #4
    ac30:	str	r4, [r1]
    ac34:	ldr	r1, [r0, #44]	; 0x2c
    ac38:	clz	r1, r1
    ac3c:	lsr	r1, r1, #5
    ac40:	str	r1, [r0, #44]	; 0x2c
    ac44:	ldr	r1, [r4, #96]	; 0x60
    ac48:	str	r1, [r0, #96]	; 0x60
    ac4c:	sub	sp, fp, #16
    ac50:	pop	{r4, r5, r6, r7, fp, pc}

0000ac54 <sf_gen_portrangeop6>:
    ac54:	push	{r4, r5, r6, r7, fp, lr}
    ac58:	add	fp, sp, #16
    ac5c:	sub	sp, sp, #16
    ac60:	mov	r5, r3
    ac64:	mov	r3, r2
    ac68:	mov	r6, r1
    ac6c:	mov	r7, r0
    ac70:	mov	r0, #3
    ac74:	mov	r1, #6
    ac78:	mov	r2, #16
    ac7c:	bl	a0a4 <gen_cmp>
    ac80:	cmp	r5, #4
    ac84:	bhi	af68 <sf_gen_portrangeop6+0x314>
    ac88:	mov	r4, r0
    ac8c:	add	r0, pc, #4
    ac90:	ldr	r1, [r0, r5, lsl #2]
    ac94:	add	pc, r0, r1
    ac98:	.word	0x00000014
    ac9c:	.word	0x0000019c
    aca0:	.word	0x000001a4
    aca4:	.word	0x00000014
    aca8:	.word	0x000000cc
    acac:	mov	r0, #0
    acb0:	mov	r1, r7
    acb4:	mov	r2, r6
    acb8:	bl	af6c <gen_portrangeatom6>
    acbc:	mov	r5, r0
    acc0:	mov	r0, #2
    acc4:	mov	r1, r7
    acc8:	mov	r2, r6
    accc:	bl	af6c <gen_portrangeatom6>
    acd0:	ldr	r1, [r5, #44]	; 0x2c
    acd4:	cmp	r5, #0
    acd8:	clz	r1, r1
    acdc:	lsr	r1, r1, #5
    ace0:	str	r1, [r5, #44]	; 0x2c
    ace4:	beq	ad20 <sf_gen_portrangeop6+0xcc>
    ace8:	ldr	r2, [r0, #96]	; 0x60
    acec:	mov	r3, r5
    acf0:	cmp	r1, #0
    acf4:	mov	r1, #84	; 0x54
    acf8:	add	r7, r3, #84	; 0x54
    acfc:	movweq	r1, #60	; 0x3c
    ad00:	addeq	r7, r3, #60	; 0x3c
    ad04:	ldr	r3, [r3, r1]
    ad08:	str	r2, [r7]
    ad0c:	cmp	r3, #0
    ad10:	beq	ad1c <sf_gen_portrangeop6+0xc8>
    ad14:	ldr	r1, [r3, #44]	; 0x2c
    ad18:	b	acf0 <sf_gen_portrangeop6+0x9c>
    ad1c:	ldr	r1, [r5, #44]	; 0x2c
    ad20:	clz	r1, r1
    ad24:	cmp	r0, #0
    ad28:	lsr	r1, r1, #5
    ad2c:	str	r1, [r5, #44]	; 0x2c
    ad30:	str	r0, [sp, #4]
    ad34:	beq	ae58 <sf_gen_portrangeop6+0x204>
    ad38:	mov	r2, r0
    ad3c:	ldr	r3, [r2, #44]	; 0x2c
    ad40:	add	r1, r2, #84	; 0x54
    ad44:	cmp	r3, #0
    ad48:	mov	r3, #84	; 0x54
    ad4c:	movweq	r3, #60	; 0x3c
    ad50:	addeq	r1, r2, #60	; 0x3c
    ad54:	ldr	r2, [r2, r3]
    ad58:	cmp	r2, #0
    ad5c:	bne	ad3c <sf_gen_portrangeop6+0xe8>
    ad60:	b	ae5c <sf_gen_portrangeop6+0x208>
    ad64:	mov	r0, #0
    ad68:	mov	r1, r7
    ad6c:	mov	r2, r6
    ad70:	bl	af6c <gen_portrangeatom6>
    ad74:	mov	r5, r0
    ad78:	mov	r0, #2
    ad7c:	mov	r1, r7
    ad80:	mov	r2, r6
    ad84:	bl	af6c <gen_portrangeatom6>
    ad88:	cmp	r5, #0
    ad8c:	beq	adc0 <sf_gen_portrangeop6+0x16c>
    ad90:	ldr	r1, [r0, #96]	; 0x60
    ad94:	mov	r2, r5
    ad98:	ldr	r3, [r2, #44]	; 0x2c
    ad9c:	add	r7, r2, #84	; 0x54
    ada0:	cmp	r3, #0
    ada4:	mov	r3, #84	; 0x54
    ada8:	movweq	r3, #60	; 0x3c
    adac:	addeq	r7, r2, #60	; 0x3c
    adb0:	ldr	r2, [r2, r3]
    adb4:	str	r1, [r7]
    adb8:	cmp	r2, #0
    adbc:	bne	ad98 <sf_gen_portrangeop6+0x144>
    adc0:	ldr	r1, [r5, #44]	; 0x2c
    adc4:	cmp	r0, #0
    adc8:	clz	r1, r1
    adcc:	lsr	r1, r1, #5
    add0:	str	r1, [r5, #44]	; 0x2c
    add4:	ldr	r2, [r0, #44]	; 0x2c
    add8:	clz	r1, r2
    addc:	lsr	r1, r1, #5
    ade0:	str	r1, [r0, #44]	; 0x2c
    ade4:	str	r0, [sp, #12]
    ade8:	beq	ae74 <sf_gen_portrangeop6+0x220>
    adec:	cmp	r2, #0
    adf0:	mov	r2, #60	; 0x3c
    adf4:	add	r1, r0, #60	; 0x3c
    adf8:	movweq	r2, #84	; 0x54
    adfc:	addeq	r1, r0, #84	; 0x54
    ae00:	ldr	r2, [r0, r2]
    ae04:	cmp	r2, #0
    ae08:	beq	ae78 <sf_gen_portrangeop6+0x224>
    ae0c:	ldr	r3, [r2, #44]	; 0x2c
    ae10:	add	r1, r2, #84	; 0x54
    ae14:	cmp	r3, #0
    ae18:	mov	r3, #84	; 0x54
    ae1c:	movweq	r3, #60	; 0x3c
    ae20:	addeq	r1, r2, #60	; 0x3c
    ae24:	ldr	r2, [r2, r3]
    ae28:	cmp	r2, #0
    ae2c:	bne	ae0c <sf_gen_portrangeop6+0x1b8>
    ae30:	b	ae78 <sf_gen_portrangeop6+0x224>
    ae34:	mov	r0, #0
    ae38:	b	ae40 <sf_gen_portrangeop6+0x1ec>
    ae3c:	mov	r0, #2
    ae40:	mov	r1, r7
    ae44:	mov	r2, r6
    ae48:	bl	af6c <gen_portrangeatom6>
    ae4c:	cmp	r4, #0
    ae50:	bne	ae9c <sf_gen_portrangeop6+0x248>
    ae54:	b	aecc <sf_gen_portrangeop6+0x278>
    ae58:	add	r1, sp, #4
    ae5c:	str	r5, [r1]
    ae60:	ldr	r1, [r5, #96]	; 0x60
    ae64:	str	r1, [r0, #96]	; 0x60
    ae68:	cmp	r4, #0
    ae6c:	bne	ae9c <sf_gen_portrangeop6+0x248>
    ae70:	b	aecc <sf_gen_portrangeop6+0x278>
    ae74:	add	r1, sp, #12
    ae78:	str	r5, [r1]
    ae7c:	ldr	r1, [r0, #44]	; 0x2c
    ae80:	clz	r1, r1
    ae84:	lsr	r1, r1, #5
    ae88:	str	r1, [r0, #44]	; 0x2c
    ae8c:	ldr	r1, [r5, #96]	; 0x60
    ae90:	str	r1, [r0, #96]	; 0x60
    ae94:	cmp	r4, #0
    ae98:	beq	aecc <sf_gen_portrangeop6+0x278>
    ae9c:	ldr	r1, [r0, #96]	; 0x60
    aea0:	mov	r2, r4
    aea4:	ldr	r3, [r2, #44]	; 0x2c
    aea8:	add	r7, r2, #84	; 0x54
    aeac:	cmp	r3, #0
    aeb0:	mov	r3, #84	; 0x54
    aeb4:	movweq	r3, #60	; 0x3c
    aeb8:	addeq	r7, r2, #60	; 0x3c
    aebc:	ldr	r2, [r2, r3]
    aec0:	str	r1, [r7]
    aec4:	cmp	r2, #0
    aec8:	bne	aea4 <sf_gen_portrangeop6+0x250>
    aecc:	ldr	r1, [r4, #44]	; 0x2c
    aed0:	cmp	r0, #0
    aed4:	clz	r1, r1
    aed8:	lsr	r1, r1, #5
    aedc:	str	r1, [r4, #44]	; 0x2c
    aee0:	ldr	r2, [r0, #44]	; 0x2c
    aee4:	clz	r1, r2
    aee8:	lsr	r1, r1, #5
    aeec:	str	r1, [r0, #44]	; 0x2c
    aef0:	str	r0, [sp, #8]
    aef4:	beq	af40 <sf_gen_portrangeop6+0x2ec>
    aef8:	cmp	r2, #0
    aefc:	mov	r2, #60	; 0x3c
    af00:	add	r1, r0, #60	; 0x3c
    af04:	movweq	r2, #84	; 0x54
    af08:	addeq	r1, r0, #84	; 0x54
    af0c:	ldr	r2, [r0, r2]
    af10:	cmp	r2, #0
    af14:	beq	af44 <sf_gen_portrangeop6+0x2f0>
    af18:	ldr	r3, [r2, #44]	; 0x2c
    af1c:	add	r1, r2, #84	; 0x54
    af20:	cmp	r3, #0
    af24:	mov	r3, #84	; 0x54
    af28:	movweq	r3, #60	; 0x3c
    af2c:	addeq	r1, r2, #60	; 0x3c
    af30:	ldr	r2, [r2, r3]
    af34:	cmp	r2, #0
    af38:	bne	af18 <sf_gen_portrangeop6+0x2c4>
    af3c:	b	af44 <sf_gen_portrangeop6+0x2f0>
    af40:	add	r1, sp, #8
    af44:	str	r4, [r1]
    af48:	ldr	r1, [r0, #44]	; 0x2c
    af4c:	clz	r1, r1
    af50:	lsr	r1, r1, #5
    af54:	str	r1, [r0, #44]	; 0x2c
    af58:	ldr	r1, [r4, #96]	; 0x60
    af5c:	str	r1, [r0, #96]	; 0x60
    af60:	sub	sp, fp, #16
    af64:	pop	{r4, r5, r6, r7, fp, pc}
    af68:	bl	f24 <abort@plt>

0000af6c <gen_portrangeatom6>:
    af6c:	push	{r4, r5, r6, r7, fp, lr}
    af70:	add	fp, sp, #16
    af74:	sub	sp, sp, #8
    af78:	mov	r7, r0
    af7c:	cmp	r1, r2
    af80:	mov	r3, r1
    af84:	mov	r6, r1
    af88:	mov	r5, r2
    af8c:	mov	r0, #6
    af90:	movgt	r3, r2
    af94:	mov	r1, r7
    af98:	mov	r2, #8
    af9c:	bl	1698c <gen_cmp_ge>
    afa0:	cmp	r6, r5
    afa4:	mov	r4, r0
    afa8:	mov	r0, #6
    afac:	mov	r1, r7
    afb0:	mov	r2, #8
    afb4:	movgt	r5, r6
    afb8:	mov	r3, r5
    afbc:	bl	1b478 <gen_cmp_le>
    afc0:	cmp	r4, #0
    afc4:	beq	aff8 <gen_portrangeatom6+0x8c>
    afc8:	ldr	r1, [r0, #96]	; 0x60
    afcc:	mov	r2, r4
    afd0:	ldr	r3, [r2, #44]	; 0x2c
    afd4:	add	r7, r2, #84	; 0x54
    afd8:	cmp	r3, #0
    afdc:	mov	r3, #84	; 0x54
    afe0:	movweq	r3, #60	; 0x3c
    afe4:	addeq	r7, r2, #60	; 0x3c
    afe8:	ldr	r2, [r2, r3]
    afec:	str	r1, [r7]
    aff0:	cmp	r2, #0
    aff4:	bne	afd0 <gen_portrangeatom6+0x64>
    aff8:	ldr	r1, [r4, #44]	; 0x2c
    affc:	cmp	r0, #0
    b000:	clz	r1, r1
    b004:	lsr	r1, r1, #5
    b008:	str	r1, [r4, #44]	; 0x2c
    b00c:	ldr	r2, [r0, #44]	; 0x2c
    b010:	clz	r1, r2
    b014:	lsr	r1, r1, #5
    b018:	str	r1, [r0, #44]	; 0x2c
    b01c:	str	r0, [sp, #4]
    b020:	beq	b06c <gen_portrangeatom6+0x100>
    b024:	cmp	r2, #0
    b028:	mov	r2, #60	; 0x3c
    b02c:	add	r1, r0, #60	; 0x3c
    b030:	movweq	r2, #84	; 0x54
    b034:	addeq	r1, r0, #84	; 0x54
    b038:	ldr	r2, [r0, r2]
    b03c:	cmp	r2, #0
    b040:	beq	b070 <gen_portrangeatom6+0x104>
    b044:	ldr	r3, [r2, #44]	; 0x2c
    b048:	add	r1, r2, #84	; 0x54
    b04c:	cmp	r3, #0
    b050:	mov	r3, #84	; 0x54
    b054:	movweq	r3, #60	; 0x3c
    b058:	addeq	r1, r2, #60	; 0x3c
    b05c:	ldr	r2, [r2, r3]
    b060:	cmp	r2, #0
    b064:	bne	b044 <gen_portrangeatom6+0xd8>
    b068:	b	b070 <gen_portrangeatom6+0x104>
    b06c:	add	r1, sp, #4
    b070:	str	r4, [r1]
    b074:	ldr	r1, [r0, #44]	; 0x2c
    b078:	clz	r1, r1
    b07c:	lsr	r1, r1, #5
    b080:	str	r1, [r0, #44]	; 0x2c
    b084:	ldr	r1, [r4, #96]	; 0x60
    b088:	str	r1, [r0, #96]	; 0x60
    b08c:	sub	sp, fp, #16
    b090:	pop	{r4, r5, r6, r7, fp, pc}

0000b094 <sf_gen_scode>:
    b094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b098:	add	fp, sp, #28
    b09c:	sub	sp, sp, #44	; 0x2c
    b0a0:	uxtb	r8, r1
    b0a4:	ubfx	sl, r1, #16, #8
    b0a8:	ubfx	r5, r1, #8, #8
    b0ac:	cmp	r8, #7
    b0b0:	bhi	baa4 <sf_gen_scode+0xa10>
    b0b4:	mov	r4, r0
    b0b8:	lsr	r0, r1, #8
    b0bc:	add	r1, pc, #4
    b0c0:	ldr	r2, [r1, r8, lsl #2]
    b0c4:	add	pc, r1, r2
    b0c8:	.word	0x00000020
    b0cc:	.word	0x00000020
    b0d0:	.word	0x00000180
    b0d4:	.word	0x000001e8
    b0d8:	.word	0x000009e8
    b0dc:	.word	0x000002ec
    b0e0:	.word	0x00000250
    b0e4:	.word	0x00000280
    b0e8:	uxtb	r0, r0
    b0ec:	cmp	r0, #12
    b0f0:	beq	b3e8 <sf_gen_scode+0x354>
    b0f4:	cmp	r0, #1
    b0f8:	bne	b408 <sf_gen_scode+0x374>
    b0fc:	ldr	r1, [pc, #2828]	; bc10 <sf_gen_scode+0xb7c>
    b100:	add	r1, pc, r1
    b104:	ldr	r0, [r1, #36]	; 0x24
    b108:	cmp	r0, #104	; 0x68
    b10c:	ble	b8cc <sf_gen_scode+0x838>
    b110:	sub	r2, r0, #105	; 0x69
    b114:	cmp	r2, #58	; 0x3a
    b118:	bhi	ba1c <sf_gen_scode+0x988>
    b11c:	add	r0, pc, #4
    b120:	ldr	r2, [r0, r2, lsl #2]
    b124:	add	pc, r0, r2
    b128:	.word	0x000000ec
    b12c:	.word	0x00000a8c
    b130:	.word	0x00000a8c
    b134:	.word	0x00000a8c
    b138:	.word	0x00000a8c
    b13c:	.word	0x00000a8c
    b140:	.word	0x00000a8c
    b144:	.word	0x00000a8c
    b148:	.word	0x00000a8c
    b14c:	.word	0x00000a8c
    b150:	.word	0x00000a8c
    b154:	.word	0x00000a8c
    b158:	.word	0x00000a8c
    b15c:	.word	0x00000a8c
    b160:	.word	0x000000ec
    b164:	.word	0x00000a8c
    b168:	.word	0x00000a8c
    b16c:	.word	0x00000900
    b170:	.word	0x000007f4
    b174:	.word	0x00000a8c
    b178:	.word	0x00000a8c
    b17c:	.word	0x00000a8c
    b180:	.word	0x000000ec
    b184:	.word	0x00000a8c
    b188:	.word	0x00000a8c
    b18c:	.word	0x00000a8c
    b190:	.word	0x00000a8c
    b194:	.word	0x00000a8c
    b198:	.word	0x00000a8c
    b19c:	.word	0x00000a8c
    b1a0:	.word	0x00000a8c
    b1a4:	.word	0x00000a8c
    b1a8:	.word	0x00000a8c
    b1ac:	.word	0x00000a8c
    b1b0:	.word	0x00000a8c
    b1b4:	.word	0x00000a8c
    b1b8:	.word	0x00000a8c
    b1bc:	.word	0x00000a8c
    b1c0:	.word	0x00000a8c
    b1c4:	.word	0x00000a8c
    b1c8:	.word	0x00000a8c
    b1cc:	.word	0x00000a8c
    b1d0:	.word	0x00000a8c
    b1d4:	.word	0x00000a8c
    b1d8:	.word	0x00000a8c
    b1dc:	.word	0x00000a8c
    b1e0:	.word	0x00000a8c
    b1e4:	.word	0x00000a8c
    b1e8:	.word	0x00000a8c
    b1ec:	.word	0x00000a8c
    b1f0:	.word	0x00000a8c
    b1f4:	.word	0x00000a8c
    b1f8:	.word	0x00000a8c
    b1fc:	.word	0x00000a8c
    b200:	.word	0x00000a8c
    b204:	.word	0x00000a8c
    b208:	.word	0x00000a8c
    b20c:	.word	0x00000a8c
    b210:	.word	0x000000ec
    b214:	mov	r0, r4
    b218:	bl	1f3cc <pcap_ether_hostton>
    b21c:	cmp	r0, #0
    b220:	beq	bbc0 <sf_gen_scode+0xb2c>
    b224:	mov	r1, sl
    b228:	mov	r5, r0
    b22c:	bl	c850 <gen_wlanhostop>
    b230:	mov	r6, r0
    b234:	mov	r0, r5
    b238:	bl	dbc <free@plt>
    b23c:	mov	r0, r6
    b240:	sub	sp, fp, #28
    b244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b248:	mov	r0, r4
    b24c:	bl	1ee2c <pcap_nametonetaddr>
    b250:	cmp	r0, #0
    b254:	beq	bad0 <sf_gen_scode+0xa3c>
    b258:	movw	r3, #65534	; 0xfffe
    b25c:	sub	r2, r0, #1
    b260:	mvn	r1, #0
    b264:	movt	r3, #255	; 0xff
    b268:	cmp	r2, r3
    b26c:	bhi	b290 <sf_gen_scode+0x1fc>
    b270:	mvn	r2, #0
    b274:	mvn	r3, #-16777216	; 0xff000000
    b278:	mvn	r1, #0
    b27c:	add	r7, r2, r0, lsl #8
    b280:	lsl	r1, r1, #8
    b284:	lsl	r0, r0, #8
    b288:	cmp	r7, r3
    b28c:	bcc	b27c <sf_gen_scode+0x1e8>
    b290:	mov	r2, r5
    b294:	mov	r3, sl
    b298:	str	r8, [sp]
    b29c:	bl	bc78 <gen_host>
    b2a0:	mov	r6, r0
    b2a4:	mov	r0, r6
    b2a8:	sub	sp, fp, #28
    b2ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b2b0:	mvn	r1, #4
    b2b4:	uxtb	r5, r0
    b2b8:	uxtab	r1, r1, r0
    b2bc:	cmp	r1, #3
    b2c0:	bcc	b2cc <sf_gen_scode+0x238>
    b2c4:	cmp	r5, #0
    b2c8:	bne	bae0 <sf_gen_scode+0xa4c>
    b2cc:	sub	r1, fp, #32
    b2d0:	add	r2, sp, #20
    b2d4:	mov	r0, r4
    b2d8:	bl	1ee48 <pcap_nametoport>
    b2dc:	cmp	r0, #0
    b2e0:	beq	baec <sf_gen_scode+0xa58>
    b2e4:	cmp	r5, #5
    b2e8:	beq	b6dc <sf_gen_scode+0x648>
    b2ec:	cmp	r5, #6
    b2f0:	beq	b6c0 <sf_gen_scode+0x62c>
    b2f4:	cmp	r5, #7
    b2f8:	bne	b718 <sf_gen_scode+0x684>
    b2fc:	ldr	r0, [sp, #20]
    b300:	cmp	r0, #132	; 0x84
    b304:	beq	bb54 <sf_gen_scode+0xac0>
    b308:	cmp	r0, #6
    b30c:	beq	bb64 <sf_gen_scode+0xad0>
    b310:	mov	r1, #17
    b314:	b	b6f4 <sf_gen_scode+0x660>
    b318:	mov	r0, r4
    b31c:	mov	r1, r5
    b320:	bl	fa50 <lookup_proto>
    b324:	cmp	r0, #0
    b328:	str	r0, [sp, #20]
    b32c:	bmi	bac0 <sf_gen_scode+0xa2c>
    b330:	mov	r1, r5
    b334:	bl	fbb4 <gen_protochain>
    b338:	mov	r6, r0
    b33c:	mov	r0, r6
    b340:	sub	sp, fp, #28
    b344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b348:	mvn	r1, #4
    b34c:	uxtb	r5, r0
    b350:	uxtab	r1, r1, r0
    b354:	cmp	r1, #3
    b358:	bcc	b364 <sf_gen_scode+0x2d0>
    b35c:	cmp	r5, #0
    b360:	bne	bafc <sf_gen_scode+0xa68>
    b364:	sub	r1, fp, #32
    b368:	add	r2, sp, #16
    b36c:	add	r3, sp, #20
    b370:	mov	r0, r4
    b374:	bl	1eeec <pcap_nametoportrange>
    b378:	cmp	r0, #0
    b37c:	beq	bb08 <sf_gen_scode+0xa74>
    b380:	cmp	r5, #5
    b384:	beq	b7d0 <sf_gen_scode+0x73c>
    b388:	cmp	r5, #6
    b38c:	beq	b6fc <sf_gen_scode+0x668>
    b390:	cmp	r5, #7
    b394:	bne	b7f0 <sf_gen_scode+0x75c>
    b398:	ldr	r0, [sp, #20]
    b39c:	cmp	r0, #132	; 0x84
    b3a0:	beq	bb84 <sf_gen_scode+0xaf0>
    b3a4:	cmp	r0, #6
    b3a8:	beq	bb94 <sf_gen_scode+0xb00>
    b3ac:	mov	r2, #17
    b3b0:	b	b7e8 <sf_gen_scode+0x754>
    b3b4:	mov	r0, r4
    b3b8:	mov	r1, r5
    b3bc:	bl	fa50 <lookup_proto>
    b3c0:	cmp	r0, #0
    b3c4:	str	r0, [sp, #20]
    b3c8:	bmi	bac0 <sf_gen_scode+0xa2c>
    b3cc:	mov	r1, r5
    b3d0:	mov	r2, sl
    b3d4:	bl	6670 <gen_proto>
    b3d8:	mov	r6, r0
    b3dc:	mov	r0, r6
    b3e0:	sub	sp, fp, #28
    b3e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b3e8:	mov	r0, r4
    b3ec:	bl	1f4ac <__pcap_nametodnaddr>
    b3f0:	mov	r1, sl
    b3f4:	bl	1c08c <gen_dnhostop>
    b3f8:	mov	r6, r0
    b3fc:	mov	r0, r6
    b400:	sub	sp, fp, #28
    b404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b408:	mvn	r0, #0
    b40c:	str	r0, [sp, #36]	; 0x24
    b410:	str	r0, [sp, #32]
    b414:	str	r0, [sp, #28]
    b418:	str	r0, [sp, #24]
    b41c:	mov	r0, r4
    b420:	bl	1edcc <pcap_nametoaddrinfo>
    b424:	cmp	r0, #0
    b428:	beq	bb18 <sf_gen_scode+0xa84>
    b42c:	str	r4, [sp, #8]
    b430:	mov	r7, r5
    b434:	mov	r6, #0
    b438:	ldr	r1, [pc, #2008]	; bc18 <sf_gen_scode+0xb84>
    b43c:	str	r5, [sp, #4]
    b440:	str	r0, [sp, #12]
    b444:	add	r1, pc, r1
    b448:	str	r0, [r1, #24]
    b44c:	ldr	r1, [r1, #40]	; 0x28
    b450:	mvn	r1, r1
    b454:	orrs	r1, r5, r1
    b458:	movweq	r5, #17
    b45c:	movweq	r7, #2
    b460:	cmp	r5, #2
    b464:	bne	b568 <sf_gen_scode+0x4d4>
    b468:	mov	r5, r0
    b46c:	sub	r9, fp, #32
    b470:	ldr	r0, [r5, #4]
    b474:	cmp	r0, #2
    b478:	beq	b4a8 <sf_gen_scode+0x414>
    b47c:	b	b490 <sf_gen_scode+0x3fc>
    b480:	str	r6, [r1]
    b484:	ldr	r1, [r6, #96]	; 0x60
    b488:	str	r1, [r0, #96]	; 0x60
    b48c:	mov	r6, r0
    b490:	ldr	r5, [r5, #28]
    b494:	cmp	r5, #0
    b498:	beq	b694 <sf_gen_scode+0x600>
    b49c:	ldr	r0, [r5, #4]
    b4a0:	cmp	r0, #2
    b4a4:	bne	b490 <sf_gen_scode+0x3fc>
    b4a8:	cmp	r7, #17
    b4ac:	beq	b490 <sf_gen_scode+0x3fc>
    b4b0:	ldr	r0, [r5, #20]
    b4b4:	mvn	r1, #0
    b4b8:	mov	r2, r7
    b4bc:	mov	r3, sl
    b4c0:	ldr	r0, [r0, #4]
    b4c4:	str	r8, [sp]
    b4c8:	rev	r0, r0
    b4cc:	bl	bc78 <gen_host>
    b4d0:	cmp	r6, #0
    b4d4:	beq	b48c <sf_gen_scode+0x3f8>
    b4d8:	ldr	r1, [r6, #44]	; 0x2c
    b4dc:	mov	r2, r6
    b4e0:	clz	r1, r1
    b4e4:	lsr	r3, r1, #5
    b4e8:	str	r3, [r6, #44]	; 0x2c
    b4ec:	ldr	r1, [r0, #96]	; 0x60
    b4f0:	cmp	r3, #0
    b4f4:	mov	r3, #84	; 0x54
    b4f8:	add	r4, r2, #84	; 0x54
    b4fc:	movweq	r3, #60	; 0x3c
    b500:	addeq	r4, r2, #60	; 0x3c
    b504:	ldr	r2, [r2, r3]
    b508:	str	r1, [r4]
    b50c:	cmp	r2, #0
    b510:	beq	b51c <sf_gen_scode+0x488>
    b514:	ldr	r3, [r2, #44]	; 0x2c
    b518:	b	b4f0 <sf_gen_scode+0x45c>
    b51c:	ldr	r1, [r6, #44]	; 0x2c
    b520:	cmp	r0, #0
    b524:	clz	r1, r1
    b528:	lsr	r1, r1, #5
    b52c:	str	r1, [r6, #44]	; 0x2c
    b530:	mov	r1, r9
    b534:	str	r0, [fp, #-32]	; 0xffffffe0
    b538:	beq	b480 <sf_gen_scode+0x3ec>
    b53c:	mov	r2, r0
    b540:	ldr	r3, [r2, #44]	; 0x2c
    b544:	add	r1, r2, #84	; 0x54
    b548:	cmp	r3, #0
    b54c:	mov	r3, #84	; 0x54
    b550:	movweq	r3, #60	; 0x3c
    b554:	addeq	r1, r2, #60	; 0x3c
    b558:	ldr	r2, [r2, r3]
    b55c:	cmp	r2, #0
    b560:	bne	b540 <sf_gen_scode+0x4ac>
    b564:	b	b480 <sf_gen_scode+0x3ec>
    b568:	mov	r9, r0
    b56c:	ldr	r0, [r9, #4]
    b570:	cmp	r0, #10
    b574:	bne	b5a4 <sf_gen_scode+0x510>
    b578:	b	b5e0 <sf_gen_scode+0x54c>
    b57c:	str	r6, [r1]
    b580:	ldr	r1, [r6, #96]	; 0x60
    b584:	str	r1, [r0, #96]	; 0x60
    b588:	mov	r6, r0
    b58c:	ldr	r9, [r9, #28]
    b590:	cmp	r9, #0
    b594:	beq	b694 <sf_gen_scode+0x600>
    b598:	ldr	r0, [r9, #4]
    b59c:	cmp	r0, #10
    b5a0:	beq	b5e0 <sf_gen_scode+0x54c>
    b5a4:	cmp	r0, #2
    b5a8:	bne	b58c <sf_gen_scode+0x4f8>
    b5ac:	cmp	r7, #17
    b5b0:	beq	b58c <sf_gen_scode+0x4f8>
    b5b4:	ldr	r0, [r9, #20]
    b5b8:	mvn	r1, #0
    b5bc:	mov	r2, r7
    b5c0:	mov	r3, sl
    b5c4:	ldr	r0, [r0, #4]
    b5c8:	str	r8, [sp]
    b5cc:	rev	r0, r0
    b5d0:	bl	bc78 <gen_host>
    b5d4:	cmp	r6, #0
    b5d8:	bne	b604 <sf_gen_scode+0x570>
    b5dc:	b	b588 <sf_gen_scode+0x4f4>
    b5e0:	ldr	r0, [r9, #20]
    b5e4:	add	r1, sp, #24
    b5e8:	mov	r2, r5
    b5ec:	mov	r3, sl
    b5f0:	str	r8, [sp]
    b5f4:	add	r0, r0, #8
    b5f8:	bl	ec0c <gen_host6>
    b5fc:	cmp	r6, #0
    b600:	beq	b588 <sf_gen_scode+0x4f4>
    b604:	ldr	r1, [r6, #44]	; 0x2c
    b608:	mov	r2, r6
    b60c:	clz	r1, r1
    b610:	lsr	r3, r1, #5
    b614:	str	r3, [r6, #44]	; 0x2c
    b618:	ldr	r1, [r0, #96]	; 0x60
    b61c:	cmp	r3, #0
    b620:	mov	r3, #84	; 0x54
    b624:	add	r4, r2, #84	; 0x54
    b628:	movweq	r3, #60	; 0x3c
    b62c:	addeq	r4, r2, #60	; 0x3c
    b630:	ldr	r2, [r2, r3]
    b634:	str	r1, [r4]
    b638:	cmp	r2, #0
    b63c:	beq	b648 <sf_gen_scode+0x5b4>
    b640:	ldr	r3, [r2, #44]	; 0x2c
    b644:	b	b61c <sf_gen_scode+0x588>
    b648:	ldr	r1, [r6, #44]	; 0x2c
    b64c:	cmp	r0, #0
    b650:	clz	r1, r1
    b654:	lsr	r1, r1, #5
    b658:	str	r1, [r6, #44]	; 0x2c
    b65c:	sub	r1, fp, #32
    b660:	str	r0, [fp, #-32]	; 0xffffffe0
    b664:	beq	b57c <sf_gen_scode+0x4e8>
    b668:	mov	r2, r0
    b66c:	ldr	r3, [r2, #44]	; 0x2c
    b670:	add	r1, r2, #84	; 0x54
    b674:	cmp	r3, #0
    b678:	mov	r3, #84	; 0x54
    b67c:	movweq	r3, #60	; 0x3c
    b680:	addeq	r1, r2, #60	; 0x3c
    b684:	ldr	r2, [r2, r3]
    b688:	cmp	r2, #0
    b68c:	bne	b66c <sf_gen_scode+0x5d8>
    b690:	b	b57c <sf_gen_scode+0x4e8>
    b694:	ldr	r1, [pc, #1408]	; bc1c <sf_gen_scode+0xb88>
    b698:	mov	r0, #0
    b69c:	add	r1, pc, r1
    b6a0:	str	r0, [r1, #24]
    b6a4:	ldr	r0, [sp, #12]
    b6a8:	bl	ef4 <freeaddrinfo@plt>
    b6ac:	cmp	r6, #0
    b6b0:	beq	bb28 <sf_gen_scode+0xa94>
    b6b4:	mov	r0, r6
    b6b8:	sub	sp, fp, #28
    b6bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b6c0:	ldr	r0, [sp, #20]
    b6c4:	cmp	r0, #132	; 0x84
    b6c8:	beq	bb54 <sf_gen_scode+0xac0>
    b6cc:	cmp	r0, #17
    b6d0:	beq	bb74 <sf_gen_scode+0xae0>
    b6d4:	mov	r1, #6
    b6d8:	b	b6f4 <sf_gen_scode+0x660>
    b6dc:	ldr	r0, [sp, #20]
    b6e0:	cmp	r0, #6
    b6e4:	beq	bb64 <sf_gen_scode+0xad0>
    b6e8:	cmp	r0, #17
    b6ec:	beq	bb74 <sf_gen_scode+0xae0>
    b6f0:	mov	r1, #132	; 0x84
    b6f4:	str	r1, [sp, #20]
    b6f8:	b	b71c <sf_gen_scode+0x688>
    b6fc:	ldr	r0, [sp, #20]
    b700:	cmp	r0, #132	; 0x84
    b704:	beq	bb84 <sf_gen_scode+0xaf0>
    b708:	cmp	r0, #17
    b70c:	beq	bba4 <sf_gen_scode+0xb10>
    b710:	mov	r2, #6
    b714:	b	b7e8 <sf_gen_scode+0x754>
    b718:	ldr	r1, [sp, #20]
    b71c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b720:	mov	r2, sl
    b724:	bl	eef8 <gen_port>
    b728:	mov	r6, r0
    b72c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b730:	ldr	r1, [sp, #20]
    b734:	mov	r2, sl
    b738:	bl	f1c4 <gen_port6>
    b73c:	ldr	r1, [r0, #44]	; 0x2c
    b740:	cmp	r0, #0
    b744:	clz	r1, r1
    b748:	lsr	r1, r1, #5
    b74c:	str	r1, [r0, #44]	; 0x2c
    b750:	beq	b78c <sf_gen_scode+0x6f8>
    b754:	ldr	r2, [r6, #96]	; 0x60
    b758:	mov	r3, r0
    b75c:	cmp	r1, #0
    b760:	mov	r1, #84	; 0x54
    b764:	add	r7, r3, #84	; 0x54
    b768:	movweq	r1, #60	; 0x3c
    b76c:	addeq	r7, r3, #60	; 0x3c
    b770:	ldr	r3, [r3, r1]
    b774:	str	r2, [r7]
    b778:	cmp	r3, #0
    b77c:	beq	b788 <sf_gen_scode+0x6f4>
    b780:	ldr	r1, [r3, #44]	; 0x2c
    b784:	b	b75c <sf_gen_scode+0x6c8>
    b788:	ldr	r1, [r0, #44]	; 0x2c
    b78c:	clz	r1, r1
    b790:	cmp	r6, #0
    b794:	lsr	r1, r1, #5
    b798:	str	r1, [r0, #44]	; 0x2c
    b79c:	str	r6, [sp, #24]
    b7a0:	beq	b8b0 <sf_gen_scode+0x81c>
    b7a4:	mov	r2, r6
    b7a8:	ldr	r3, [r2, #44]	; 0x2c
    b7ac:	add	r1, r2, #84	; 0x54
    b7b0:	cmp	r3, #0
    b7b4:	mov	r3, #84	; 0x54
    b7b8:	movweq	r3, #60	; 0x3c
    b7bc:	addeq	r1, r2, #60	; 0x3c
    b7c0:	ldr	r2, [r2, r3]
    b7c4:	cmp	r2, #0
    b7c8:	bne	b7a8 <sf_gen_scode+0x714>
    b7cc:	b	b8b4 <sf_gen_scode+0x820>
    b7d0:	ldr	r0, [sp, #20]
    b7d4:	cmp	r0, #6
    b7d8:	beq	bb94 <sf_gen_scode+0xb00>
    b7dc:	cmp	r0, #17
    b7e0:	beq	bba4 <sf_gen_scode+0xb10>
    b7e4:	mov	r2, #132	; 0x84
    b7e8:	str	r2, [sp, #20]
    b7ec:	b	b7f4 <sf_gen_scode+0x760>
    b7f0:	ldr	r2, [sp, #20]
    b7f4:	ldr	r1, [sp, #16]
    b7f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b7fc:	mov	r3, sl
    b800:	bl	f490 <gen_portrange>
    b804:	mov	r6, r0
    b808:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b80c:	ldr	r1, [sp, #16]
    b810:	ldr	r2, [sp, #20]
    b814:	mov	r3, sl
    b818:	bl	f770 <gen_portrange6>
    b81c:	ldr	r1, [r0, #44]	; 0x2c
    b820:	cmp	r0, #0
    b824:	clz	r1, r1
    b828:	lsr	r1, r1, #5
    b82c:	str	r1, [r0, #44]	; 0x2c
    b830:	beq	b86c <sf_gen_scode+0x7d8>
    b834:	ldr	r2, [r6, #96]	; 0x60
    b838:	mov	r3, r0
    b83c:	cmp	r1, #0
    b840:	mov	r1, #84	; 0x54
    b844:	add	r7, r3, #84	; 0x54
    b848:	movweq	r1, #60	; 0x3c
    b84c:	addeq	r7, r3, #60	; 0x3c
    b850:	ldr	r3, [r3, r1]
    b854:	str	r2, [r7]
    b858:	cmp	r3, #0
    b85c:	beq	b868 <sf_gen_scode+0x7d4>
    b860:	ldr	r1, [r3, #44]	; 0x2c
    b864:	b	b83c <sf_gen_scode+0x7a8>
    b868:	ldr	r1, [r0, #44]	; 0x2c
    b86c:	clz	r1, r1
    b870:	cmp	r6, #0
    b874:	lsr	r1, r1, #5
    b878:	str	r1, [r0, #44]	; 0x2c
    b87c:	str	r6, [sp, #24]
    b880:	beq	b8b0 <sf_gen_scode+0x81c>
    b884:	mov	r2, r6
    b888:	ldr	r3, [r2, #44]	; 0x2c
    b88c:	add	r1, r2, #84	; 0x54
    b890:	cmp	r3, #0
    b894:	mov	r3, #84	; 0x54
    b898:	movweq	r3, #60	; 0x3c
    b89c:	addeq	r1, r2, #60	; 0x3c
    b8a0:	ldr	r2, [r2, r3]
    b8a4:	cmp	r2, #0
    b8a8:	bne	b888 <sf_gen_scode+0x7f4>
    b8ac:	b	b8b4 <sf_gen_scode+0x820>
    b8b0:	add	r1, sp, #24
    b8b4:	str	r0, [r1]
    b8b8:	ldr	r0, [r0, #96]	; 0x60
    b8bc:	str	r0, [r6, #96]	; 0x60
    b8c0:	mov	r0, r6
    b8c4:	sub	sp, fp, #28
    b8c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b8cc:	cmp	r0, #1
    b8d0:	beq	b8fc <sf_gen_scode+0x868>
    b8d4:	cmp	r0, #6
    b8d8:	bne	ba48 <sf_gen_scode+0x9b4>
    b8dc:	mov	r0, r4
    b8e0:	bl	1f3cc <pcap_ether_hostton>
    b8e4:	cmp	r0, #0
    b8e8:	beq	bbe0 <sf_gen_scode+0xb4c>
    b8ec:	mov	r1, sl
    b8f0:	mov	r5, r0
    b8f4:	bl	c614 <gen_thostop>
    b8f8:	b	b230 <sf_gen_scode+0x19c>
    b8fc:	mov	r0, r4
    b900:	bl	1f3cc <pcap_ether_hostton>
    b904:	cmp	r0, #0
    b908:	beq	bbd0 <sf_gen_scode+0xb3c>
    b90c:	mov	r1, sl
    b910:	mov	r5, r0
    b914:	bl	c164 <gen_ehostop>
    b918:	b	b230 <sf_gen_scode+0x19c>
    b91c:	ldrb	r0, [r1]
    b920:	cmp	r0, #1
    b924:	bne	bbb4 <sf_gen_scode+0xb20>
    b928:	mov	r0, #1
    b92c:	mov	r1, #4
    b930:	mov	r2, #8
    b934:	mov	r3, #65280	; 0xff00
    b938:	bl	a0a4 <gen_cmp>
    b93c:	mov	r5, r0
    b940:	ldr	r0, [r0, #44]	; 0x2c
    b944:	clz	r0, r0
    b948:	lsr	r0, r0, #5
    b94c:	str	r0, [r5, #44]	; 0x2c
    b950:	mov	r0, r4
    b954:	bl	1f3cc <pcap_ether_hostton>
    b958:	cmp	r0, #0
    b95c:	beq	bbd0 <sf_gen_scode+0xb3c>
    b960:	mov	r1, sl
    b964:	mov	r7, r0
    b968:	bl	c164 <gen_ehostop>
    b96c:	mov	r6, r0
    b970:	cmp	r5, #0
    b974:	beq	b9a8 <sf_gen_scode+0x914>
    b978:	ldr	r0, [r6, #96]	; 0x60
    b97c:	mov	r1, r5
    b980:	ldr	r2, [r1, #44]	; 0x2c
    b984:	add	r3, r1, #84	; 0x54
    b988:	cmp	r2, #0
    b98c:	mov	r2, #84	; 0x54
    b990:	movweq	r2, #60	; 0x3c
    b994:	addeq	r3, r1, #60	; 0x3c
    b998:	ldr	r1, [r1, r2]
    b99c:	str	r0, [r3]
    b9a0:	cmp	r1, #0
    b9a4:	bne	b980 <sf_gen_scode+0x8ec>
    b9a8:	ldr	r0, [r5, #44]	; 0x2c
    b9ac:	cmp	r6, #0
    b9b0:	clz	r0, r0
    b9b4:	lsr	r0, r0, #5
    b9b8:	str	r0, [r5, #44]	; 0x2c
    b9bc:	ldr	r1, [r6, #44]	; 0x2c
    b9c0:	clz	r0, r1
    b9c4:	lsr	r0, r0, #5
    b9c8:	str	r0, [r6, #44]	; 0x2c
    b9cc:	str	r6, [sp, #24]
    b9d0:	beq	ba70 <sf_gen_scode+0x9dc>
    b9d4:	cmp	r1, #0
    b9d8:	mov	r1, #60	; 0x3c
    b9dc:	add	r0, r6, #60	; 0x3c
    b9e0:	movweq	r1, #84	; 0x54
    b9e4:	addeq	r0, r6, #84	; 0x54
    b9e8:	ldr	r1, [r6, r1]
    b9ec:	cmp	r1, #0
    b9f0:	beq	ba74 <sf_gen_scode+0x9e0>
    b9f4:	ldr	r2, [r1, #44]	; 0x2c
    b9f8:	add	r0, r1, #84	; 0x54
    b9fc:	cmp	r2, #0
    ba00:	mov	r2, #84	; 0x54
    ba04:	movweq	r2, #60	; 0x3c
    ba08:	addeq	r0, r1, #60	; 0x3c
    ba0c:	ldr	r1, [r1, r2]
    ba10:	cmp	r1, #0
    ba14:	bne	b9f4 <sf_gen_scode+0x960>
    ba18:	b	ba74 <sf_gen_scode+0x9e0>
    ba1c:	cmp	r0, #192	; 0xc0
    ba20:	beq	b214 <sf_gen_scode+0x180>
    ba24:	b	bbb4 <sf_gen_scode+0xb20>
    ba28:	mov	r0, r4
    ba2c:	bl	1f3cc <pcap_ether_hostton>
    ba30:	cmp	r0, #0
    ba34:	beq	bbf0 <sf_gen_scode+0xb5c>
    ba38:	mov	r1, sl
    ba3c:	mov	r5, r0
    ba40:	bl	e9d0 <gen_ipfchostop>
    ba44:	b	b230 <sf_gen_scode+0x19c>
    ba48:	cmp	r0, #10
    ba4c:	bne	bbb4 <sf_gen_scode+0xb20>
    ba50:	mov	r0, r4
    ba54:	bl	1f3cc <pcap_ether_hostton>
    ba58:	cmp	r0, #0
    ba5c:	beq	bc00 <sf_gen_scode+0xb6c>
    ba60:	mov	r1, sl
    ba64:	mov	r5, r0
    ba68:	bl	c3d8 <gen_fhostop>
    ba6c:	b	b230 <sf_gen_scode+0x19c>
    ba70:	add	r0, sp, #24
    ba74:	str	r5, [r0]
    ba78:	ldr	r0, [r6, #44]	; 0x2c
    ba7c:	clz	r0, r0
    ba80:	lsr	r0, r0, #5
    ba84:	str	r0, [r6, #44]	; 0x2c
    ba88:	ldr	r0, [r5, #96]	; 0x60
    ba8c:	str	r0, [r6, #96]	; 0x60
    ba90:	mov	r0, r7
    ba94:	bl	dbc <free@plt>
    ba98:	mov	r0, r6
    ba9c:	sub	sp, fp, #28
    baa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    baa4:	cmp	r8, #255	; 0xff
    baa8:	bne	babc <sf_gen_scode+0xa28>
    baac:	bl	2e6c <syntax>
    bab0:	ldr	r0, [pc, #388]	; bc3c <sf_gen_scode+0xba8>
    bab4:	add	r0, pc, r0
    bab8:	bl	214c <sf_bpf_error>
    babc:	bl	f24 <abort@plt>
    bac0:	ldr	r0, [pc, #376]	; bc40 <sf_gen_scode+0xbac>
    bac4:	mov	r1, r4
    bac8:	add	r0, pc, r0
    bacc:	bl	214c <sf_bpf_error>
    bad0:	ldr	r0, [pc, #364]	; bc44 <sf_gen_scode+0xbb0>
    bad4:	mov	r1, r4
    bad8:	add	r0, pc, r0
    badc:	bl	214c <sf_bpf_error>
    bae0:	ldr	r0, [pc, #376]	; bc60 <sf_gen_scode+0xbcc>
    bae4:	add	r0, pc, r0
    bae8:	bl	214c <sf_bpf_error>
    baec:	ldr	r0, [pc, #368]	; bc64 <sf_gen_scode+0xbd0>
    baf0:	mov	r1, r4
    baf4:	add	r0, pc, r0
    baf8:	bl	214c <sf_bpf_error>
    bafc:	ldr	r0, [pc, #356]	; bc68 <sf_gen_scode+0xbd4>
    bb00:	add	r0, pc, r0
    bb04:	bl	214c <sf_bpf_error>
    bb08:	ldr	r0, [pc, #348]	; bc6c <sf_gen_scode+0xbd8>
    bb0c:	mov	r1, r4
    bb10:	add	r0, pc, r0
    bb14:	bl	214c <sf_bpf_error>
    bb18:	ldr	r0, [pc, #316]	; bc5c <sf_gen_scode+0xbc8>
    bb1c:	mov	r1, r4
    bb20:	add	r0, pc, r0
    bb24:	bl	214c <sf_bpf_error>
    bb28:	ldr	r0, [pc, #240]	; bc20 <sf_gen_scode+0xb8c>
    bb2c:	ldr	r2, [pc, #240]	; bc24 <sf_gen_scode+0xb90>
    bb30:	ldr	r1, [sp, #4]
    bb34:	add	r0, pc, r0
    bb38:	cmp	r1, #0
    bb3c:	add	r2, pc, r2
    bb40:	moveq	r2, r0
    bb44:	ldr	r0, [pc, #220]	; bc28 <sf_gen_scode+0xb94>
    bb48:	ldr	r1, [sp, #8]
    bb4c:	add	r0, pc, r0
    bb50:	bl	214c <sf_bpf_error>
    bb54:	ldr	r0, [pc, #212]	; bc30 <sf_gen_scode+0xb9c>
    bb58:	mov	r1, r4
    bb5c:	add	r0, pc, r0
    bb60:	bl	214c <sf_bpf_error>
    bb64:	ldr	r0, [pc, #260]	; bc70 <sf_gen_scode+0xbdc>
    bb68:	mov	r1, r4
    bb6c:	add	r0, pc, r0
    bb70:	bl	214c <sf_bpf_error>
    bb74:	ldr	r0, [pc, #176]	; bc2c <sf_gen_scode+0xb98>
    bb78:	mov	r1, r4
    bb7c:	add	r0, pc, r0
    bb80:	bl	214c <sf_bpf_error>
    bb84:	ldr	r0, [pc, #172]	; bc38 <sf_gen_scode+0xba4>
    bb88:	mov	r1, r4
    bb8c:	add	r0, pc, r0
    bb90:	bl	214c <sf_bpf_error>
    bb94:	ldr	r0, [pc, #216]	; bc74 <sf_gen_scode+0xbe0>
    bb98:	mov	r1, r4
    bb9c:	add	r0, pc, r0
    bba0:	bl	214c <sf_bpf_error>
    bba4:	ldr	r0, [pc, #136]	; bc34 <sf_gen_scode+0xba0>
    bba8:	mov	r1, r4
    bbac:	add	r0, pc, r0
    bbb0:	bl	214c <sf_bpf_error>
    bbb4:	ldr	r0, [pc, #88]	; bc14 <sf_gen_scode+0xb80>
    bbb8:	add	r0, pc, r0
    bbbc:	bl	214c <sf_bpf_error>
    bbc0:	ldr	r0, [pc, #140]	; bc54 <sf_gen_scode+0xbc0>
    bbc4:	mov	r1, r4
    bbc8:	add	r0, pc, r0
    bbcc:	bl	214c <sf_bpf_error>
    bbd0:	ldr	r0, [pc, #112]	; bc48 <sf_gen_scode+0xbb4>
    bbd4:	mov	r1, r4
    bbd8:	add	r0, pc, r0
    bbdc:	bl	214c <sf_bpf_error>
    bbe0:	ldr	r0, [pc, #104]	; bc50 <sf_gen_scode+0xbbc>
    bbe4:	mov	r1, r4
    bbe8:	add	r0, pc, r0
    bbec:	bl	214c <sf_bpf_error>
    bbf0:	ldr	r0, [pc, #96]	; bc58 <sf_gen_scode+0xbc4>
    bbf4:	mov	r1, r4
    bbf8:	add	r0, pc, r0
    bbfc:	bl	214c <sf_bpf_error>
    bc00:	ldr	r0, [pc, #68]	; bc4c <sf_gen_scode+0xbb8>
    bc04:	mov	r1, r4
    bc08:	add	r0, pc, r0
    bc0c:	bl	214c <sf_bpf_error>
    bc10:	.word	0x0003b3e0
    bc14:	.word	0x0001d49a
    bc18:	.word	0x0003b09c
    bc1c:	.word	0x0003ae44
    bc20:	.word	0x0001d384
    bc24:	.word	0x0001d596
    bc28:	.word	0x0001d572
    bc2c:	.word	0x0001d5c5
    bc30:	.word	0x0001d5d3
    bc34:	.word	0x0001d617
    bc38:	.word	0x0001d61c
    bc3c:	.word	0x0001d729
    bc40:	.word	0x0001d743
    bc44:	.word	0x0001d4e0
    bc48:	.word	0x0001d3f5
    bc4c:	.word	0x0001d3dd
    bc50:	.word	0x0001d414
    bc54:	.word	0x0001d451
    bc58:	.word	0x0001d43a
    bc5c:	.word	0x0001d58c
    bc60:	.word	0x0001d60c
    bc64:	.word	0x0001d618
    bc68:	.word	0x0001d652
    bc6c:	.word	0x0001d663
    bc70:	.word	0x0001d5b2
    bc74:	.word	0x0001d5f2

0000bc78 <gen_host>:
    bc78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bc7c:	add	fp, sp, #24
    bc80:	sub	sp, sp, #16
    bc84:	mov	r6, r0
    bc88:	ldr	r0, [fp, #8]
    bc8c:	mov	r5, r3
    bc90:	ldr	r3, [pc, #1112]	; c0f0 <gen_host+0x478>
    bc94:	mov	r7, r1
    bc98:	ldr	r1, [pc, #1108]	; c0f4 <gen_host+0x47c>
    bc9c:	add	r3, pc, r3
    bca0:	cmp	r0, #2
    bca4:	add	r1, pc, r1
    bca8:	moveq	r1, r3
    bcac:	cmp	r2, #40	; 0x28
    bcb0:	bhi	bfb4 <gen_host+0x33c>
    bcb4:	add	r0, pc, #4
    bcb8:	ldr	r2, [r0, r2, lsl #2]
    bcbc:	add	pc, r0, r2
    bcc0:	.word	0x000000a4
    bcc4:	.word	0x000002f4
    bcc8:	.word	0x000000fc
    bccc:	.word	0x00000110
    bcd0:	.word	0x000000e8
    bcd4:	.word	0x000003dc
    bcd8:	.word	0x000003e8
    bcdc:	.word	0x000003f4
    bce0:	.word	0x00000400
    bce4:	.word	0x0000040c
    bce8:	.word	0x00000418
    bcec:	.word	0x00000424
    bcf0:	.word	0x0000013c
    bcf4:	.word	0x000002f8
    bcf8:	.word	0x00000304
    bcfc:	.word	0x00000310
    bd00:	.word	0x0000031c
    bd04:	.word	0x00000328
    bd08:	.word	0x00000334
    bd0c:	.word	0x00000340
    bd10:	.word	0x0000034c
    bd14:	.word	0x00000358
    bd18:	.word	0x00000364
    bd1c:	.word	0x00000370
    bd20:	.word	0x0000037c
    bd24:	.word	0x00000388
    bd28:	.word	0x00000394
    bd2c:	.word	0x000003a0
    bd30:	.word	0x000003ac
    bd34:	.word	0x000003b8
    bd38:	.word	0x000003c4
    bd3c:	.word	0x000002f4
    bd40:	.word	0x000002f4
    bd44:	.word	0x000002f4
    bd48:	.word	0x000002f4
    bd4c:	.word	0x000002f4
    bd50:	.word	0x000002f4
    bd54:	.word	0x000002f4
    bd58:	.word	0x000002f4
    bd5c:	.word	0x000002f4
    bd60:	.word	0x000003d0
    bd64:	mov	r0, #16
    bd68:	mov	r1, #12
    bd6c:	mov	r2, r5
    bd70:	mov	r3, #2048	; 0x800
    bd74:	str	r1, [sp]
    bd78:	str	r0, [sp, #4]
    bd7c:	mov	r0, r6
    bd80:	mov	r1, r7
    bd84:	bl	1b544 <gen_hostop>
    bd88:	mov	r4, r0
    bd8c:	ldr	r0, [pc, #868]	; c0f8 <gen_host+0x480>
    bd90:	ldr	r0, [pc, r0]
    bd94:	cmp	r0, #0
    bd98:	beq	be10 <gen_host+0x198>
    bd9c:	mov	r0, r4
    bda0:	sub	sp, fp, #24
    bda4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bda8:	mov	r0, #24
    bdac:	mov	r1, #14
    bdb0:	mov	r2, r5
    bdb4:	movw	r3, #32821	; 0x8035
    bdb8:	b	bde0 <gen_host+0x168>
    bdbc:	mov	r0, #16
    bdc0:	mov	r1, #12
    bdc4:	mov	r2, r5
    bdc8:	mov	r3, #2048	; 0x800
    bdcc:	b	bde0 <gen_host+0x168>
    bdd0:	mov	r0, #24
    bdd4:	mov	r1, #14
    bdd8:	mov	r2, r5
    bddc:	movw	r3, #2054	; 0x806
    bde0:	str	r1, [sp]
    bde4:	str	r0, [sp, #4]
    bde8:	mov	r0, r6
    bdec:	mov	r1, r7
    bdf0:	bl	1b544 <gen_hostop>
    bdf4:	sub	sp, fp, #24
    bdf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bdfc:	mov	r0, r6
    be00:	mov	r1, r5
    be04:	sub	sp, fp, #24
    be08:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    be0c:	b	1c08c <gen_dnhostop>
    be10:	mov	r0, #24
    be14:	mov	r1, #14
    be18:	mov	r2, r5
    be1c:	movw	r3, #2054	; 0x806
    be20:	str	r1, [sp]
    be24:	str	r0, [sp, #4]
    be28:	mov	r0, r6
    be2c:	mov	r1, r7
    be30:	bl	1b544 <gen_hostop>
    be34:	mov	r8, r0
    be38:	ldr	r0, [r4, #44]	; 0x2c
    be3c:	cmp	r4, #0
    be40:	clz	r0, r0
    be44:	lsr	r0, r0, #5
    be48:	str	r0, [r4, #44]	; 0x2c
    be4c:	beq	be88 <gen_host+0x210>
    be50:	ldr	r1, [r8, #96]	; 0x60
    be54:	mov	r2, r4
    be58:	cmp	r0, #0
    be5c:	mov	r0, #84	; 0x54
    be60:	add	r3, r2, #84	; 0x54
    be64:	movweq	r0, #60	; 0x3c
    be68:	addeq	r3, r2, #60	; 0x3c
    be6c:	ldr	r2, [r2, r0]
    be70:	str	r1, [r3]
    be74:	cmp	r2, #0
    be78:	beq	be84 <gen_host+0x20c>
    be7c:	ldr	r0, [r2, #44]	; 0x2c
    be80:	b	be58 <gen_host+0x1e0>
    be84:	ldr	r0, [r4, #44]	; 0x2c
    be88:	clz	r0, r0
    be8c:	cmp	r8, #0
    be90:	lsr	r0, r0, #5
    be94:	str	r0, [r4, #44]	; 0x2c
    be98:	str	r8, [sp, #8]
    be9c:	beq	becc <gen_host+0x254>
    bea0:	mov	r1, r8
    bea4:	ldr	r2, [r1, #44]	; 0x2c
    bea8:	add	r0, r1, #84	; 0x54
    beac:	cmp	r2, #0
    beb0:	mov	r2, #84	; 0x54
    beb4:	movweq	r2, #60	; 0x3c
    beb8:	addeq	r0, r1, #60	; 0x3c
    bebc:	ldr	r1, [r1, r2]
    bec0:	cmp	r1, #0
    bec4:	bne	bea4 <gen_host+0x22c>
    bec8:	b	bed0 <gen_host+0x258>
    becc:	add	r0, sp, #8
    bed0:	str	r4, [r0]
    bed4:	mov	r1, #14
    bed8:	mov	r2, r5
    bedc:	movw	r3, #32821	; 0x8035
    bee0:	ldr	r0, [r4, #96]	; 0x60
    bee4:	str	r0, [r8, #96]	; 0x60
    bee8:	mov	r0, #24
    beec:	str	r1, [sp]
    bef0:	mov	r1, r7
    bef4:	str	r0, [sp, #4]
    bef8:	mov	r0, r6
    befc:	bl	1b544 <gen_hostop>
    bf00:	mov	r4, r0
    bf04:	ldr	r0, [r8, #44]	; 0x2c
    bf08:	cmp	r8, #0
    bf0c:	clz	r0, r0
    bf10:	lsr	r0, r0, #5
    bf14:	str	r0, [r8, #44]	; 0x2c
    bf18:	beq	bf54 <gen_host+0x2dc>
    bf1c:	ldr	r1, [r4, #96]	; 0x60
    bf20:	mov	r2, r8
    bf24:	cmp	r0, #0
    bf28:	mov	r0, #84	; 0x54
    bf2c:	add	r3, r2, #84	; 0x54
    bf30:	movweq	r0, #60	; 0x3c
    bf34:	addeq	r3, r2, #60	; 0x3c
    bf38:	ldr	r2, [r2, r0]
    bf3c:	str	r1, [r3]
    bf40:	cmp	r2, #0
    bf44:	beq	bf50 <gen_host+0x2d8>
    bf48:	ldr	r0, [r2, #44]	; 0x2c
    bf4c:	b	bf24 <gen_host+0x2ac>
    bf50:	ldr	r0, [r8, #44]	; 0x2c
    bf54:	clz	r0, r0
    bf58:	cmp	r4, #0
    bf5c:	lsr	r0, r0, #5
    bf60:	str	r0, [r8, #44]	; 0x2c
    bf64:	str	r4, [sp, #12]
    bf68:	beq	bf98 <gen_host+0x320>
    bf6c:	mov	r1, r4
    bf70:	ldr	r2, [r1, #44]	; 0x2c
    bf74:	add	r0, r1, #84	; 0x54
    bf78:	cmp	r2, #0
    bf7c:	mov	r2, #84	; 0x54
    bf80:	movweq	r2, #60	; 0x3c
    bf84:	addeq	r0, r1, #60	; 0x3c
    bf88:	ldr	r1, [r1, r2]
    bf8c:	cmp	r1, #0
    bf90:	bne	bf70 <gen_host+0x2f8>
    bf94:	b	bf9c <gen_host+0x324>
    bf98:	add	r0, sp, #12
    bf9c:	str	r8, [r0]
    bfa0:	ldr	r0, [r8, #96]	; 0x60
    bfa4:	str	r0, [r4, #96]	; 0x60
    bfa8:	mov	r0, r4
    bfac:	sub	sp, fp, #24
    bfb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bfb4:	bl	f24 <abort@plt>
    bfb8:	ldr	r0, [pc, #360]	; c128 <gen_host+0x4b0>
    bfbc:	add	r0, pc, r0
    bfc0:	bl	214c <sf_bpf_error>
    bfc4:	ldr	r0, [pc, #344]	; c124 <gen_host+0x4ac>
    bfc8:	add	r0, pc, r0
    bfcc:	bl	214c <sf_bpf_error>
    bfd0:	ldr	r0, [pc, #344]	; c130 <gen_host+0x4b8>
    bfd4:	add	r0, pc, r0
    bfd8:	bl	214c <sf_bpf_error>
    bfdc:	ldr	r0, [pc, #328]	; c12c <gen_host+0x4b4>
    bfe0:	add	r0, pc, r0
    bfe4:	bl	214c <sf_bpf_error>
    bfe8:	ldr	r0, [pc, #324]	; c134 <gen_host+0x4bc>
    bfec:	add	r0, pc, r0
    bff0:	bl	214c <sf_bpf_error>
    bff4:	ldr	r0, [pc, #316]	; c138 <gen_host+0x4c0>
    bff8:	add	r0, pc, r0
    bffc:	bl	214c <sf_bpf_error>
    c000:	ldr	r0, [pc, #308]	; c13c <gen_host+0x4c4>
    c004:	add	r0, pc, r0
    c008:	bl	214c <sf_bpf_error>
    c00c:	ldr	r0, [pc, #300]	; c140 <gen_host+0x4c8>
    c010:	add	r0, pc, r0
    c014:	bl	214c <sf_bpf_error>
    c018:	ldr	r0, [pc, #244]	; c114 <gen_host+0x49c>
    c01c:	add	r0, pc, r0
    c020:	bl	214c <sf_bpf_error>
    c024:	ldr	r0, [pc, #236]	; c118 <gen_host+0x4a0>
    c028:	add	r0, pc, r0
    c02c:	bl	214c <sf_bpf_error>
    c030:	ldr	r0, [pc, #232]	; c120 <gen_host+0x4a8>
    c034:	add	r0, pc, r0
    c038:	bl	214c <sf_bpf_error>
    c03c:	ldr	r0, [pc, #256]	; c144 <gen_host+0x4cc>
    c040:	add	r0, pc, r0
    c044:	bl	214c <sf_bpf_error>
    c048:	ldr	r0, [pc, #248]	; c148 <gen_host+0x4d0>
    c04c:	add	r0, pc, r0
    c050:	bl	214c <sf_bpf_error>
    c054:	ldr	r0, [pc, #240]	; c14c <gen_host+0x4d4>
    c058:	add	r0, pc, r0
    c05c:	bl	214c <sf_bpf_error>
    c060:	ldr	r0, [pc, #232]	; c150 <gen_host+0x4d8>
    c064:	add	r0, pc, r0
    c068:	bl	214c <sf_bpf_error>
    c06c:	ldr	r0, [pc, #224]	; c154 <gen_host+0x4dc>
    c070:	add	r0, pc, r0
    c074:	bl	214c <sf_bpf_error>
    c078:	ldr	r0, [pc, #216]	; c158 <gen_host+0x4e0>
    c07c:	add	r0, pc, r0
    c080:	bl	214c <sf_bpf_error>
    c084:	ldr	r0, [pc, #208]	; c15c <gen_host+0x4e4>
    c088:	add	r0, pc, r0
    c08c:	bl	214c <sf_bpf_error>
    c090:	ldr	r0, [pc, #200]	; c160 <gen_host+0x4e8>
    c094:	add	r0, pc, r0
    c098:	bl	214c <sf_bpf_error>
    c09c:	ldr	r0, [pc, #92]	; c100 <gen_host+0x488>
    c0a0:	add	r0, pc, r0
    c0a4:	bl	214c <sf_bpf_error>
    c0a8:	ldr	r0, [pc, #76]	; c0fc <gen_host+0x484>
    c0ac:	add	r0, pc, r0
    c0b0:	bl	214c <sf_bpf_error>
    c0b4:	ldr	r0, [pc, #72]	; c104 <gen_host+0x48c>
    c0b8:	add	r0, pc, r0
    c0bc:	bl	214c <sf_bpf_error>
    c0c0:	ldr	r0, [pc, #64]	; c108 <gen_host+0x490>
    c0c4:	add	r0, pc, r0
    c0c8:	bl	214c <sf_bpf_error>
    c0cc:	ldr	r0, [pc, #56]	; c10c <gen_host+0x494>
    c0d0:	add	r0, pc, r0
    c0d4:	bl	214c <sf_bpf_error>
    c0d8:	ldr	r0, [pc, #48]	; c110 <gen_host+0x498>
    c0dc:	add	r0, pc, r0
    c0e0:	bl	214c <sf_bpf_error>
    c0e4:	ldr	r0, [pc, #48]	; c11c <gen_host+0x4a4>
    c0e8:	add	r0, pc, r0
    c0ec:	bl	214c <sf_bpf_error>
    c0f0:	.word	0x0001d9fc
    c0f4:	.word	0x0001e56a
    c0f8:	.word	0x0003a344
    c0fc:	.word	0x0001df7f
    c100:	.word	0x0001dfa8
    c104:	.word	0x0001dfae
    c108:	.word	0x0001dfbf
    c10c:	.word	0x0001dfd1
    c110:	.word	0x0001dfe3
    c114:	.word	0x0001e0c1
    c118:	.word	0x0001e0d2
    c11c:	.word	0x0001e030
    c120:	.word	0x0001e109
    c124:	.word	0x0001e199
    c128:	.word	0x0001e1c8
    c12c:	.word	0x0001e1c7
    c130:	.word	0x0001e1f8
    c134:	.word	0x0001e205
    c138:	.word	0x0001e21b
    c13c:	.word	0x0001e22e
    c140:	.word	0x0001e23e
    c144:	.word	0x0001e22b
    c148:	.word	0x0001e242
    c14c:	.word	0x0001e254
    c150:	.word	0x0001e266
    c154:	.word	0x0001e278
    c158:	.word	0x0001e289
    c15c:	.word	0x0001e2a0
    c160:	.word	0x0001e2b5

0000c164 <gen_ehostop>:
    c164:	push	{r4, r5, r6, sl, fp, lr}
    c168:	add	fp, sp, #16
    c16c:	sub	sp, sp, #8
    c170:	cmp	r1, #4
    c174:	bhi	c3c4 <gen_ehostop+0x260>
    c178:	mov	r5, r0
    c17c:	add	r0, pc, #4
    c180:	ldr	r1, [r0, r1, lsl #2]
    c184:	add	pc, r0, r1
    c188:	.word	0x00000014
    c18c:	.word	0x000001c4
    c190:	.word	0x000001d8
    c194:	.word	0x00000014
    c198:	.word	0x000000e0
    c19c:	ldr	r6, [pc, #560]	; c3d4 <gen_ehostop+0x270>
    c1a0:	mov	r2, #6
    c1a4:	mov	r3, r5
    c1a8:	add	r6, pc, r6
    c1ac:	ldr	r0, [r6, #52]	; 0x34
    c1b0:	add	r1, r0, #6
    c1b4:	mov	r0, #1
    c1b8:	bl	1b00c <gen_bcmp>
    c1bc:	ldr	r1, [r6, #52]	; 0x34
    c1c0:	mov	r4, r0
    c1c4:	mov	r0, #1
    c1c8:	mov	r2, #6
    c1cc:	mov	r3, r5
    c1d0:	bl	1b00c <gen_bcmp>
    c1d4:	ldr	r1, [r4, #44]	; 0x2c
    c1d8:	cmp	r4, #0
    c1dc:	clz	r1, r1
    c1e0:	lsr	r1, r1, #5
    c1e4:	str	r1, [r4, #44]	; 0x2c
    c1e8:	beq	c224 <gen_ehostop+0xc0>
    c1ec:	ldr	r2, [r0, #96]	; 0x60
    c1f0:	mov	r3, r4
    c1f4:	cmp	r1, #0
    c1f8:	mov	r1, #84	; 0x54
    c1fc:	add	r6, r3, #84	; 0x54
    c200:	movweq	r1, #60	; 0x3c
    c204:	addeq	r6, r3, #60	; 0x3c
    c208:	ldr	r3, [r3, r1]
    c20c:	str	r2, [r6]
    c210:	cmp	r3, #0
    c214:	beq	c220 <gen_ehostop+0xbc>
    c218:	ldr	r1, [r3, #44]	; 0x2c
    c21c:	b	c1f4 <gen_ehostop+0x90>
    c220:	ldr	r1, [r4, #44]	; 0x2c
    c224:	clz	r1, r1
    c228:	cmp	r0, #0
    c22c:	lsr	r1, r1, #5
    c230:	str	r1, [r4, #44]	; 0x2c
    c234:	str	r0, [sp]
    c238:	beq	c384 <gen_ehostop+0x220>
    c23c:	mov	r2, r0
    c240:	ldr	r3, [r2, #44]	; 0x2c
    c244:	add	r1, r2, #84	; 0x54
    c248:	cmp	r3, #0
    c24c:	mov	r3, #84	; 0x54
    c250:	movweq	r3, #60	; 0x3c
    c254:	addeq	r1, r2, #60	; 0x3c
    c258:	ldr	r2, [r2, r3]
    c25c:	cmp	r2, #0
    c260:	bne	c240 <gen_ehostop+0xdc>
    c264:	b	c388 <gen_ehostop+0x224>
    c268:	ldr	r6, [pc, #352]	; c3d0 <gen_ehostop+0x26c>
    c26c:	mov	r2, #6
    c270:	mov	r3, r5
    c274:	add	r6, pc, r6
    c278:	ldr	r0, [r6, #52]	; 0x34
    c27c:	add	r1, r0, #6
    c280:	mov	r0, #1
    c284:	bl	1b00c <gen_bcmp>
    c288:	ldr	r1, [r6, #52]	; 0x34
    c28c:	mov	r4, r0
    c290:	mov	r0, #1
    c294:	mov	r2, #6
    c298:	mov	r3, r5
    c29c:	bl	1b00c <gen_bcmp>
    c2a0:	cmp	r4, #0
    c2a4:	beq	c2d8 <gen_ehostop+0x174>
    c2a8:	ldr	r1, [r0, #96]	; 0x60
    c2ac:	mov	r2, r4
    c2b0:	ldr	r3, [r2, #44]	; 0x2c
    c2b4:	add	r6, r2, #84	; 0x54
    c2b8:	cmp	r3, #0
    c2bc:	mov	r3, #84	; 0x54
    c2c0:	movweq	r3, #60	; 0x3c
    c2c4:	addeq	r6, r2, #60	; 0x3c
    c2c8:	ldr	r2, [r2, r3]
    c2cc:	str	r1, [r6]
    c2d0:	cmp	r2, #0
    c2d4:	bne	c2b0 <gen_ehostop+0x14c>
    c2d8:	ldr	r1, [r4, #44]	; 0x2c
    c2dc:	cmp	r0, #0
    c2e0:	clz	r1, r1
    c2e4:	lsr	r1, r1, #5
    c2e8:	str	r1, [r4, #44]	; 0x2c
    c2ec:	ldr	r2, [r0, #44]	; 0x2c
    c2f0:	clz	r1, r2
    c2f4:	lsr	r1, r1, #5
    c2f8:	str	r1, [r0, #44]	; 0x2c
    c2fc:	str	r0, [sp, #4]
    c300:	beq	c39c <gen_ehostop+0x238>
    c304:	cmp	r2, #0
    c308:	mov	r2, #60	; 0x3c
    c30c:	add	r1, r0, #60	; 0x3c
    c310:	movweq	r2, #84	; 0x54
    c314:	addeq	r1, r0, #84	; 0x54
    c318:	ldr	r2, [r0, r2]
    c31c:	cmp	r2, #0
    c320:	beq	c3a0 <gen_ehostop+0x23c>
    c324:	ldr	r3, [r2, #44]	; 0x2c
    c328:	add	r1, r2, #84	; 0x54
    c32c:	cmp	r3, #0
    c330:	mov	r3, #84	; 0x54
    c334:	movweq	r3, #60	; 0x3c
    c338:	addeq	r1, r2, #60	; 0x3c
    c33c:	ldr	r2, [r2, r3]
    c340:	cmp	r2, #0
    c344:	bne	c324 <gen_ehostop+0x1c0>
    c348:	b	c3a0 <gen_ehostop+0x23c>
    c34c:	ldr	r0, [pc, #116]	; c3c8 <gen_ehostop+0x264>
    c350:	add	r0, pc, r0
    c354:	ldr	r0, [r0, #52]	; 0x34
    c358:	add	r1, r0, #6
    c35c:	b	c36c <gen_ehostop+0x208>
    c360:	ldr	r0, [pc, #100]	; c3cc <gen_ehostop+0x268>
    c364:	add	r0, pc, r0
    c368:	ldr	r1, [r0, #52]	; 0x34
    c36c:	mov	r0, #1
    c370:	mov	r2, #6
    c374:	mov	r3, r5
    c378:	sub	sp, fp, #16
    c37c:	pop	{r4, r5, r6, sl, fp, lr}
    c380:	b	1b00c <gen_bcmp>
    c384:	mov	r1, sp
    c388:	str	r4, [r1]
    c38c:	ldr	r1, [r4, #96]	; 0x60
    c390:	str	r1, [r0, #96]	; 0x60
    c394:	sub	sp, fp, #16
    c398:	pop	{r4, r5, r6, sl, fp, pc}
    c39c:	add	r1, sp, #4
    c3a0:	str	r4, [r1]
    c3a4:	ldr	r1, [r0, #44]	; 0x2c
    c3a8:	clz	r1, r1
    c3ac:	lsr	r1, r1, #5
    c3b0:	str	r1, [r0, #44]	; 0x2c
    c3b4:	ldr	r1, [r4, #96]	; 0x60
    c3b8:	str	r1, [r0, #96]	; 0x60
    c3bc:	sub	sp, fp, #16
    c3c0:	pop	{r4, r5, r6, sl, fp, pc}
    c3c4:	bl	f24 <abort@plt>
    c3c8:	.word	0x0003a190
    c3cc:	.word	0x0003a17c
    c3d0:	.word	0x0003a26c
    c3d4:	.word	0x0003a338

0000c3d8 <gen_fhostop>:
    c3d8:	push	{r4, r5, fp, lr}
    c3dc:	add	fp, sp, #8
    c3e0:	sub	sp, sp, #8
    c3e4:	cmp	r1, #4
    c3e8:	bhi	c610 <gen_fhostop+0x238>
    c3ec:	mov	r5, r0
    c3f0:	add	r0, pc, #4
    c3f4:	ldr	r1, [r0, r1, lsl #2]
    c3f8:	add	pc, r0, r1
    c3fc:	.word	0x00000014
    c400:	.word	0x000001ac
    c404:	.word	0x000001b8
    c408:	.word	0x00000014
    c40c:	.word	0x000000d4
    c410:	mov	r0, #1
    c414:	mov	r1, #7
    c418:	mov	r2, #6
    c41c:	mov	r3, r5
    c420:	bl	1b00c <gen_bcmp>
    c424:	mov	r4, r0
    c428:	mov	r0, #1
    c42c:	mov	r1, #1
    c430:	mov	r2, #6
    c434:	mov	r3, r5
    c438:	bl	1b00c <gen_bcmp>
    c43c:	ldr	r1, [r4, #44]	; 0x2c
    c440:	cmp	r4, #0
    c444:	clz	r1, r1
    c448:	lsr	r1, r1, #5
    c44c:	str	r1, [r4, #44]	; 0x2c
    c450:	beq	c48c <gen_fhostop+0xb4>
    c454:	ldr	r2, [r0, #96]	; 0x60
    c458:	mov	r3, r4
    c45c:	cmp	r1, #0
    c460:	mov	r1, #84	; 0x54
    c464:	add	r5, r3, #84	; 0x54
    c468:	movweq	r1, #60	; 0x3c
    c46c:	addeq	r5, r3, #60	; 0x3c
    c470:	ldr	r3, [r3, r1]
    c474:	str	r2, [r5]
    c478:	cmp	r3, #0
    c47c:	beq	c488 <gen_fhostop+0xb0>
    c480:	ldr	r1, [r3, #44]	; 0x2c
    c484:	b	c45c <gen_fhostop+0x84>
    c488:	ldr	r1, [r4, #44]	; 0x2c
    c48c:	clz	r1, r1
    c490:	cmp	r0, #0
    c494:	lsr	r1, r1, #5
    c498:	str	r1, [r4, #44]	; 0x2c
    c49c:	str	r0, [sp]
    c4a0:	beq	c5d0 <gen_fhostop+0x1f8>
    c4a4:	mov	r2, r0
    c4a8:	ldr	r3, [r2, #44]	; 0x2c
    c4ac:	add	r1, r2, #84	; 0x54
    c4b0:	cmp	r3, #0
    c4b4:	mov	r3, #84	; 0x54
    c4b8:	movweq	r3, #60	; 0x3c
    c4bc:	addeq	r1, r2, #60	; 0x3c
    c4c0:	ldr	r2, [r2, r3]
    c4c4:	cmp	r2, #0
    c4c8:	bne	c4a8 <gen_fhostop+0xd0>
    c4cc:	b	c5d4 <gen_fhostop+0x1fc>
    c4d0:	mov	r0, #1
    c4d4:	mov	r1, #7
    c4d8:	mov	r2, #6
    c4dc:	mov	r3, r5
    c4e0:	bl	1b00c <gen_bcmp>
    c4e4:	mov	r4, r0
    c4e8:	mov	r0, #1
    c4ec:	mov	r1, #1
    c4f0:	mov	r2, #6
    c4f4:	mov	r3, r5
    c4f8:	bl	1b00c <gen_bcmp>
    c4fc:	cmp	r4, #0
    c500:	beq	c534 <gen_fhostop+0x15c>
    c504:	ldr	r1, [r0, #96]	; 0x60
    c508:	mov	r2, r4
    c50c:	ldr	r3, [r2, #44]	; 0x2c
    c510:	add	r5, r2, #84	; 0x54
    c514:	cmp	r3, #0
    c518:	mov	r3, #84	; 0x54
    c51c:	movweq	r3, #60	; 0x3c
    c520:	addeq	r5, r2, #60	; 0x3c
    c524:	ldr	r2, [r2, r3]
    c528:	str	r1, [r5]
    c52c:	cmp	r2, #0
    c530:	bne	c50c <gen_fhostop+0x134>
    c534:	ldr	r1, [r4, #44]	; 0x2c
    c538:	cmp	r0, #0
    c53c:	clz	r1, r1
    c540:	lsr	r1, r1, #5
    c544:	str	r1, [r4, #44]	; 0x2c
    c548:	ldr	r2, [r0, #44]	; 0x2c
    c54c:	clz	r1, r2
    c550:	lsr	r1, r1, #5
    c554:	str	r1, [r0, #44]	; 0x2c
    c558:	str	r0, [sp, #4]
    c55c:	beq	c5e8 <gen_fhostop+0x210>
    c560:	cmp	r2, #0
    c564:	mov	r2, #60	; 0x3c
    c568:	add	r1, r0, #60	; 0x3c
    c56c:	movweq	r2, #84	; 0x54
    c570:	addeq	r1, r0, #84	; 0x54
    c574:	ldr	r2, [r0, r2]
    c578:	cmp	r2, #0
    c57c:	beq	c5ec <gen_fhostop+0x214>
    c580:	ldr	r3, [r2, #44]	; 0x2c
    c584:	add	r1, r2, #84	; 0x54
    c588:	cmp	r3, #0
    c58c:	mov	r3, #84	; 0x54
    c590:	movweq	r3, #60	; 0x3c
    c594:	addeq	r1, r2, #60	; 0x3c
    c598:	ldr	r2, [r2, r3]
    c59c:	cmp	r2, #0
    c5a0:	bne	c580 <gen_fhostop+0x1a8>
    c5a4:	b	c5ec <gen_fhostop+0x214>
    c5a8:	mov	r0, #1
    c5ac:	mov	r1, #7
    c5b0:	b	c5bc <gen_fhostop+0x1e4>
    c5b4:	mov	r0, #1
    c5b8:	mov	r1, #1
    c5bc:	mov	r2, #6
    c5c0:	mov	r3, r5
    c5c4:	sub	sp, fp, #8
    c5c8:	pop	{r4, r5, fp, lr}
    c5cc:	b	1b00c <gen_bcmp>
    c5d0:	mov	r1, sp
    c5d4:	str	r4, [r1]
    c5d8:	ldr	r1, [r4, #96]	; 0x60
    c5dc:	str	r1, [r0, #96]	; 0x60
    c5e0:	sub	sp, fp, #8
    c5e4:	pop	{r4, r5, fp, pc}
    c5e8:	add	r1, sp, #4
    c5ec:	str	r4, [r1]
    c5f0:	ldr	r1, [r0, #44]	; 0x2c
    c5f4:	clz	r1, r1
    c5f8:	lsr	r1, r1, #5
    c5fc:	str	r1, [r0, #44]	; 0x2c
    c600:	ldr	r1, [r4, #96]	; 0x60
    c604:	str	r1, [r0, #96]	; 0x60
    c608:	sub	sp, fp, #8
    c60c:	pop	{r4, r5, fp, pc}
    c610:	bl	f24 <abort@plt>

0000c614 <gen_thostop>:
    c614:	push	{r4, r5, fp, lr}
    c618:	add	fp, sp, #8
    c61c:	sub	sp, sp, #8
    c620:	cmp	r1, #4
    c624:	bhi	c84c <gen_thostop+0x238>
    c628:	mov	r5, r0
    c62c:	add	r0, pc, #4
    c630:	ldr	r1, [r0, r1, lsl #2]
    c634:	add	pc, r0, r1
    c638:	.word	0x00000014
    c63c:	.word	0x000001ac
    c640:	.word	0x000001b8
    c644:	.word	0x00000014
    c648:	.word	0x000000d4
    c64c:	mov	r0, #1
    c650:	mov	r1, #8
    c654:	mov	r2, #6
    c658:	mov	r3, r5
    c65c:	bl	1b00c <gen_bcmp>
    c660:	mov	r4, r0
    c664:	mov	r0, #1
    c668:	mov	r1, #2
    c66c:	mov	r2, #6
    c670:	mov	r3, r5
    c674:	bl	1b00c <gen_bcmp>
    c678:	ldr	r1, [r4, #44]	; 0x2c
    c67c:	cmp	r4, #0
    c680:	clz	r1, r1
    c684:	lsr	r1, r1, #5
    c688:	str	r1, [r4, #44]	; 0x2c
    c68c:	beq	c6c8 <gen_thostop+0xb4>
    c690:	ldr	r2, [r0, #96]	; 0x60
    c694:	mov	r3, r4
    c698:	cmp	r1, #0
    c69c:	mov	r1, #84	; 0x54
    c6a0:	add	r5, r3, #84	; 0x54
    c6a4:	movweq	r1, #60	; 0x3c
    c6a8:	addeq	r5, r3, #60	; 0x3c
    c6ac:	ldr	r3, [r3, r1]
    c6b0:	str	r2, [r5]
    c6b4:	cmp	r3, #0
    c6b8:	beq	c6c4 <gen_thostop+0xb0>
    c6bc:	ldr	r1, [r3, #44]	; 0x2c
    c6c0:	b	c698 <gen_thostop+0x84>
    c6c4:	ldr	r1, [r4, #44]	; 0x2c
    c6c8:	clz	r1, r1
    c6cc:	cmp	r0, #0
    c6d0:	lsr	r1, r1, #5
    c6d4:	str	r1, [r4, #44]	; 0x2c
    c6d8:	str	r0, [sp]
    c6dc:	beq	c80c <gen_thostop+0x1f8>
    c6e0:	mov	r2, r0
    c6e4:	ldr	r3, [r2, #44]	; 0x2c
    c6e8:	add	r1, r2, #84	; 0x54
    c6ec:	cmp	r3, #0
    c6f0:	mov	r3, #84	; 0x54
    c6f4:	movweq	r3, #60	; 0x3c
    c6f8:	addeq	r1, r2, #60	; 0x3c
    c6fc:	ldr	r2, [r2, r3]
    c700:	cmp	r2, #0
    c704:	bne	c6e4 <gen_thostop+0xd0>
    c708:	b	c810 <gen_thostop+0x1fc>
    c70c:	mov	r0, #1
    c710:	mov	r1, #8
    c714:	mov	r2, #6
    c718:	mov	r3, r5
    c71c:	bl	1b00c <gen_bcmp>
    c720:	mov	r4, r0
    c724:	mov	r0, #1
    c728:	mov	r1, #2
    c72c:	mov	r2, #6
    c730:	mov	r3, r5
    c734:	bl	1b00c <gen_bcmp>
    c738:	cmp	r4, #0
    c73c:	beq	c770 <gen_thostop+0x15c>
    c740:	ldr	r1, [r0, #96]	; 0x60
    c744:	mov	r2, r4
    c748:	ldr	r3, [r2, #44]	; 0x2c
    c74c:	add	r5, r2, #84	; 0x54
    c750:	cmp	r3, #0
    c754:	mov	r3, #84	; 0x54
    c758:	movweq	r3, #60	; 0x3c
    c75c:	addeq	r5, r2, #60	; 0x3c
    c760:	ldr	r2, [r2, r3]
    c764:	str	r1, [r5]
    c768:	cmp	r2, #0
    c76c:	bne	c748 <gen_thostop+0x134>
    c770:	ldr	r1, [r4, #44]	; 0x2c
    c774:	cmp	r0, #0
    c778:	clz	r1, r1
    c77c:	lsr	r1, r1, #5
    c780:	str	r1, [r4, #44]	; 0x2c
    c784:	ldr	r2, [r0, #44]	; 0x2c
    c788:	clz	r1, r2
    c78c:	lsr	r1, r1, #5
    c790:	str	r1, [r0, #44]	; 0x2c
    c794:	str	r0, [sp, #4]
    c798:	beq	c824 <gen_thostop+0x210>
    c79c:	cmp	r2, #0
    c7a0:	mov	r2, #60	; 0x3c
    c7a4:	add	r1, r0, #60	; 0x3c
    c7a8:	movweq	r2, #84	; 0x54
    c7ac:	addeq	r1, r0, #84	; 0x54
    c7b0:	ldr	r2, [r0, r2]
    c7b4:	cmp	r2, #0
    c7b8:	beq	c828 <gen_thostop+0x214>
    c7bc:	ldr	r3, [r2, #44]	; 0x2c
    c7c0:	add	r1, r2, #84	; 0x54
    c7c4:	cmp	r3, #0
    c7c8:	mov	r3, #84	; 0x54
    c7cc:	movweq	r3, #60	; 0x3c
    c7d0:	addeq	r1, r2, #60	; 0x3c
    c7d4:	ldr	r2, [r2, r3]
    c7d8:	cmp	r2, #0
    c7dc:	bne	c7bc <gen_thostop+0x1a8>
    c7e0:	b	c828 <gen_thostop+0x214>
    c7e4:	mov	r0, #1
    c7e8:	mov	r1, #8
    c7ec:	b	c7f8 <gen_thostop+0x1e4>
    c7f0:	mov	r0, #1
    c7f4:	mov	r1, #2
    c7f8:	mov	r2, #6
    c7fc:	mov	r3, r5
    c800:	sub	sp, fp, #8
    c804:	pop	{r4, r5, fp, lr}
    c808:	b	1b00c <gen_bcmp>
    c80c:	mov	r1, sp
    c810:	str	r4, [r1]
    c814:	ldr	r1, [r4, #96]	; 0x60
    c818:	str	r1, [r0, #96]	; 0x60
    c81c:	sub	sp, fp, #8
    c820:	pop	{r4, r5, fp, pc}
    c824:	add	r1, sp, #4
    c828:	str	r4, [r1]
    c82c:	ldr	r1, [r0, #44]	; 0x2c
    c830:	clz	r1, r1
    c834:	lsr	r1, r1, #5
    c838:	str	r1, [r0, #44]	; 0x2c
    c83c:	ldr	r1, [r4, #96]	; 0x60
    c840:	str	r1, [r0, #96]	; 0x60
    c844:	sub	sp, fp, #8
    c848:	pop	{r4, r5, fp, pc}
    c84c:	bl	f24 <abort@plt>

0000c850 <gen_wlanhostop>:
    c850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c854:	add	fp, sp, #28
    c858:	sub	sp, sp, #12
    c85c:	cmp	r1, #8
    c860:	bhi	e9c8 <gen_wlanhostop+0x2178>
    c864:	mov	sl, r0
    c868:	add	r0, pc, #4
    c86c:	ldr	r1, [r0, r1, lsl #2]
    c870:	add	pc, r0, r1
    c874:	.word	0x00000024
    c878:	.word	0x000001a4
    c87c:	.word	0x00000310
    c880:	.word	0x00000024
    c884:	.word	0x000000d8
    c888:	.word	0x00000500
    c88c:	.word	0x0000051c
    c890:	.word	0x0000047c
    c894:	.word	0x000005a4
    c898:	mov	r0, sl
    c89c:	mov	r1, #1
    c8a0:	bl	c850 <gen_wlanhostop>
    c8a4:	mov	r6, r0
    c8a8:	mov	r0, sl
    c8ac:	mov	r1, #2
    c8b0:	bl	c850 <gen_wlanhostop>
    c8b4:	mov	r5, r0
    c8b8:	ldr	r0, [r6, #44]	; 0x2c
    c8bc:	cmp	r6, #0
    c8c0:	clz	r0, r0
    c8c4:	lsr	r0, r0, #5
    c8c8:	str	r0, [r6, #44]	; 0x2c
    c8cc:	beq	c908 <gen_wlanhostop+0xb8>
    c8d0:	ldr	r1, [r5, #96]	; 0x60
    c8d4:	mov	r2, r6
    c8d8:	cmp	r0, #0
    c8dc:	mov	r0, #84	; 0x54
    c8e0:	add	r3, r2, #84	; 0x54
    c8e4:	movweq	r0, #60	; 0x3c
    c8e8:	addeq	r3, r2, #60	; 0x3c
    c8ec:	ldr	r2, [r2, r0]
    c8f0:	str	r1, [r3]
    c8f4:	cmp	r2, #0
    c8f8:	beq	c904 <gen_wlanhostop+0xb4>
    c8fc:	ldr	r0, [r2, #44]	; 0x2c
    c900:	b	c8d8 <gen_wlanhostop+0x88>
    c904:	ldr	r0, [r6, #44]	; 0x2c
    c908:	clz	r0, r0
    c90c:	cmp	r5, #0
    c910:	lsr	r0, r0, #5
    c914:	str	r0, [r6, #44]	; 0x2c
    c918:	str	r5, [sp, #8]
    c91c:	beq	ce9c <gen_wlanhostop+0x64c>
    c920:	mov	r1, r5
    c924:	ldr	r2, [r1, #44]	; 0x2c
    c928:	add	r0, r1, #84	; 0x54
    c92c:	cmp	r2, #0
    c930:	mov	r2, #84	; 0x54
    c934:	movweq	r2, #60	; 0x3c
    c938:	addeq	r0, r1, #60	; 0x3c
    c93c:	ldr	r1, [r1, r2]
    c940:	cmp	r1, #0
    c944:	bne	c924 <gen_wlanhostop+0xd4>
    c948:	b	cea0 <gen_wlanhostop+0x650>
    c94c:	mov	r0, sl
    c950:	mov	r1, #1
    c954:	bl	c850 <gen_wlanhostop>
    c958:	mov	r6, r0
    c95c:	mov	r0, sl
    c960:	mov	r1, #2
    c964:	bl	c850 <gen_wlanhostop>
    c968:	mov	r5, r0
    c96c:	cmp	r6, #0
    c970:	beq	c9a4 <gen_wlanhostop+0x154>
    c974:	ldr	r0, [r5, #96]	; 0x60
    c978:	mov	r1, r6
    c97c:	ldr	r2, [r1, #44]	; 0x2c
    c980:	add	r3, r1, #84	; 0x54
    c984:	cmp	r2, #0
    c988:	mov	r2, #84	; 0x54
    c98c:	movweq	r2, #60	; 0x3c
    c990:	addeq	r3, r1, #60	; 0x3c
    c994:	ldr	r1, [r1, r2]
    c998:	str	r0, [r3]
    c99c:	cmp	r1, #0
    c9a0:	bne	c97c <gen_wlanhostop+0x12c>
    c9a4:	ldr	r0, [r6, #44]	; 0x2c
    c9a8:	cmp	r5, #0
    c9ac:	clz	r0, r0
    c9b0:	lsr	r0, r0, #5
    c9b4:	str	r0, [r6, #44]	; 0x2c
    c9b8:	ldr	r1, [r5, #44]	; 0x2c
    c9bc:	clz	r0, r1
    c9c0:	lsr	r0, r0, #5
    c9c4:	str	r0, [r5, #44]	; 0x2c
    c9c8:	str	r5, [sp, #8]
    c9cc:	beq	d598 <gen_wlanhostop+0xd48>
    c9d0:	cmp	r1, #0
    c9d4:	mov	r1, #60	; 0x3c
    c9d8:	add	r0, r5, #60	; 0x3c
    c9dc:	movweq	r1, #84	; 0x54
    c9e0:	addeq	r0, r5, #84	; 0x54
    c9e4:	ldr	r1, [r5, r1]
    c9e8:	cmp	r1, #0
    c9ec:	beq	d59c <gen_wlanhostop+0xd4c>
    c9f0:	ldr	r2, [r1, #44]	; 0x2c
    c9f4:	add	r0, r1, #84	; 0x54
    c9f8:	cmp	r2, #0
    c9fc:	mov	r2, #84	; 0x54
    ca00:	movweq	r2, #60	; 0x3c
    ca04:	addeq	r0, r1, #60	; 0x3c
    ca08:	ldr	r1, [r1, r2]
    ca0c:	cmp	r1, #0
    ca10:	bne	c9f0 <gen_wlanhostop+0x1a0>
    ca14:	b	d59c <gen_wlanhostop+0xd4c>
    ca18:	mov	r0, #1
    ca1c:	mov	r1, #1
    ca20:	mov	r2, #16
    ca24:	mov	r7, #1
    ca28:	bl	165d8 <gen_load_a>
    ca2c:	ldr	r2, [pc, #4056]	; da0c <gen_wlanhostop+0x11bc>
    ca30:	mov	r5, r0
    ca34:	add	r2, pc, r2
    ca38:	ldr	r0, [r2, #92]	; 0x5c
    ca3c:	ldr	r8, [pc, #4044]	; da10 <gen_wlanhostop+0x11c0>
    ca40:	add	r8, pc, r8
    ca44:	mov	r4, r8
    ca48:	ldr	r6, [r4, r0, lsl #3]!
    ca4c:	cmp	r6, #207	; 0xcf
    ca50:	bhi	ca9c <gen_wlanhostop+0x24c>
    ca54:	add	r1, r0, #1
    ca58:	cmp	r0, #15
    ca5c:	str	r1, [r2, #92]	; 0x5c
    ca60:	bge	e9bc <gen_wlanhostop+0x216c>
    ca64:	mov	r0, #1024	; 0x400
    ca68:	lsl	r6, r0, r1
    ca6c:	mov	r0, r6
    ca70:	bl	e34 <malloc@plt>
    ca74:	cmp	r0, #0
    ca78:	str	r0, [r4, #12]
    ca7c:	beq	e9bc <gen_wlanhostop+0x216c>
    ca80:	mov	r1, #0
    ca84:	mov	r2, r6
    ca88:	add	r4, r4, #8
    ca8c:	bl	ea0 <memset@plt>
    ca90:	cmp	r6, #207	; 0xcf
    ca94:	str	r6, [r4]
    ca98:	bls	e9bc <gen_wlanhostop+0x216c>
    ca9c:	sub	r0, r6, #208	; 0xd0
    caa0:	mov	r2, #6
    caa4:	mov	r3, sl
    caa8:	str	r0, [r4]
    caac:	ldr	r1, [r4, #4]
    cab0:	add	r4, r1, r0
    cab4:	mov	r0, #69	; 0x45
    cab8:	mov	r1, #24
    cabc:	str	r7, [r4, #20]
    cac0:	str	r5, [r4, #4]
    cac4:	str	r0, [r4, #8]
    cac8:	mov	r0, #1
    cacc:	str	r4, [r4, #96]	; 0x60
    cad0:	bl	1b00c <gen_bcmp>
    cad4:	mov	r5, r0
    cad8:	cmp	r4, #0
    cadc:	beq	cb10 <gen_wlanhostop+0x2c0>
    cae0:	ldr	r0, [r5, #96]	; 0x60
    cae4:	mov	r1, r4
    cae8:	ldr	r2, [r1, #44]	; 0x2c
    caec:	add	r3, r1, #84	; 0x54
    caf0:	cmp	r2, #0
    caf4:	mov	r2, #84	; 0x54
    caf8:	movweq	r2, #60	; 0x3c
    cafc:	addeq	r3, r1, #60	; 0x3c
    cb00:	ldr	r1, [r1, r2]
    cb04:	str	r0, [r3]
    cb08:	cmp	r1, #0
    cb0c:	bne	cae8 <gen_wlanhostop+0x298>
    cb10:	ldr	r0, [r4, #44]	; 0x2c
    cb14:	cmp	r5, #0
    cb18:	clz	r0, r0
    cb1c:	lsr	r0, r0, #5
    cb20:	str	r0, [r4, #44]	; 0x2c
    cb24:	ldr	r1, [r5, #44]	; 0x2c
    cb28:	clz	r0, r1
    cb2c:	lsr	r0, r0, #5
    cb30:	str	r0, [r5, #44]	; 0x2c
    cb34:	str	r5, [sp, #8]
    cb38:	beq	d5c4 <gen_wlanhostop+0xd74>
    cb3c:	cmp	r1, #0
    cb40:	mov	r1, #60	; 0x3c
    cb44:	add	r0, r5, #60	; 0x3c
    cb48:	movweq	r1, #84	; 0x54
    cb4c:	addeq	r0, r5, #84	; 0x54
    cb50:	ldr	r1, [r5, r1]
    cb54:	cmp	r1, #0
    cb58:	beq	d5c8 <gen_wlanhostop+0xd78>
    cb5c:	ldr	r2, [r1, #44]	; 0x2c
    cb60:	add	r0, r1, #84	; 0x54
    cb64:	cmp	r2, #0
    cb68:	mov	r2, #84	; 0x54
    cb6c:	movweq	r2, #60	; 0x3c
    cb70:	addeq	r0, r1, #60	; 0x3c
    cb74:	ldr	r1, [r1, r2]
    cb78:	cmp	r1, #0
    cb7c:	bne	cb5c <gen_wlanhostop+0x30c>
    cb80:	b	d5c8 <gen_wlanhostop+0xd78>
    cb84:	mov	r0, #1
    cb88:	mov	r1, #1
    cb8c:	mov	r2, #16
    cb90:	mov	r7, #1
    cb94:	bl	165d8 <gen_load_a>
    cb98:	ldr	r2, [pc, #3772]	; da5c <gen_wlanhostop+0x120c>
    cb9c:	mov	r5, r0
    cba0:	add	r2, pc, r2
    cba4:	ldr	r0, [r2, #92]	; 0x5c
    cba8:	ldr	r8, [pc, #3760]	; da60 <gen_wlanhostop+0x1210>
    cbac:	add	r8, pc, r8
    cbb0:	mov	r4, r8
    cbb4:	ldr	r6, [r4, r0, lsl #3]!
    cbb8:	cmp	r6, #207	; 0xcf
    cbbc:	bhi	cc08 <gen_wlanhostop+0x3b8>
    cbc0:	add	r1, r0, #1
    cbc4:	cmp	r0, #15
    cbc8:	str	r1, [r2, #92]	; 0x5c
    cbcc:	bge	e9bc <gen_wlanhostop+0x216c>
    cbd0:	mov	r0, #1024	; 0x400
    cbd4:	lsl	r6, r0, r1
    cbd8:	mov	r0, r6
    cbdc:	bl	e34 <malloc@plt>
    cbe0:	cmp	r0, #0
    cbe4:	str	r0, [r4, #12]
    cbe8:	beq	e9bc <gen_wlanhostop+0x216c>
    cbec:	mov	r1, #0
    cbf0:	mov	r2, r6
    cbf4:	add	r4, r4, #8
    cbf8:	bl	ea0 <memset@plt>
    cbfc:	cmp	r6, #207	; 0xcf
    cc00:	str	r6, [r4]
    cc04:	bls	e9bc <gen_wlanhostop+0x216c>
    cc08:	sub	r0, r6, #208	; 0xd0
    cc0c:	mov	r2, #6
    cc10:	mov	r3, sl
    cc14:	str	r0, [r4]
    cc18:	ldr	r1, [r4, #4]
    cc1c:	add	r4, r1, r0
    cc20:	mov	r0, #69	; 0x45
    cc24:	mov	r1, #16
    cc28:	str	r7, [r4, #20]
    cc2c:	str	r5, [r4, #4]
    cc30:	str	r0, [r4, #8]
    cc34:	mov	r0, #1
    cc38:	str	r4, [r4, #96]	; 0x60
    cc3c:	bl	1b00c <gen_bcmp>
    cc40:	mov	r5, r0
    cc44:	cmp	r4, #0
    cc48:	beq	cc7c <gen_wlanhostop+0x42c>
    cc4c:	ldr	r0, [r5, #96]	; 0x60
    cc50:	mov	r1, r4
    cc54:	ldr	r2, [r1, #44]	; 0x2c
    cc58:	add	r3, r1, #84	; 0x54
    cc5c:	cmp	r2, #0
    cc60:	mov	r2, #84	; 0x54
    cc64:	movweq	r2, #60	; 0x3c
    cc68:	addeq	r3, r1, #60	; 0x3c
    cc6c:	ldr	r1, [r1, r2]
    cc70:	str	r0, [r3]
    cc74:	cmp	r1, #0
    cc78:	bne	cc54 <gen_wlanhostop+0x404>
    cc7c:	ldr	r0, [r4, #44]	; 0x2c
    cc80:	cmp	r5, #0
    cc84:	clz	r0, r0
    cc88:	lsr	r0, r0, #5
    cc8c:	str	r0, [r4, #44]	; 0x2c
    cc90:	ldr	r1, [r5, #44]	; 0x2c
    cc94:	clz	r0, r1
    cc98:	lsr	r0, r0, #5
    cc9c:	str	r0, [r5, #44]	; 0x2c
    cca0:	str	r5, [sp, #8]
    cca4:	beq	d75c <gen_wlanhostop+0xf0c>
    cca8:	cmp	r1, #0
    ccac:	mov	r1, #60	; 0x3c
    ccb0:	add	r0, r5, #60	; 0x3c
    ccb4:	movweq	r1, #84	; 0x54
    ccb8:	addeq	r0, r5, #84	; 0x54
    ccbc:	ldr	r1, [r5, r1]
    ccc0:	cmp	r1, #0
    ccc4:	beq	d760 <gen_wlanhostop+0xf10>
    ccc8:	ldr	r2, [r1, #44]	; 0x2c
    cccc:	add	r0, r1, #84	; 0x54
    ccd0:	cmp	r2, #0
    ccd4:	mov	r2, #84	; 0x54
    ccd8:	movweq	r2, #60	; 0x3c
    ccdc:	addeq	r0, r1, #60	; 0x3c
    cce0:	ldr	r1, [r1, r2]
    cce4:	cmp	r1, #0
    cce8:	bne	ccc8 <gen_wlanhostop+0x478>
    ccec:	b	d760 <gen_wlanhostop+0xf10>
    ccf0:	mov	r0, #1
    ccf4:	mov	r1, #0
    ccf8:	mov	r2, #16
    ccfc:	bl	165d8 <gen_load_a>
    cd00:	ldr	r8, [pc, #4092]	; dd04 <gen_wlanhostop+0x14b4>
    cd04:	mov	r9, r0
    cd08:	add	r8, pc, r8
    cd0c:	ldr	r0, [r8, #92]	; 0x5c
    cd10:	ldr	r5, [pc, #4080]	; dd08 <gen_wlanhostop+0x14b8>
    cd14:	add	r5, pc, r5
    cd18:	mov	r4, r5
    cd1c:	ldr	r6, [r4, r0, lsl #3]!
    cd20:	cmp	r6, #19
    cd24:	bhi	cea8 <gen_wlanhostop+0x658>
    cd28:	add	r7, r0, #1
    cd2c:	cmp	r0, #15
    cd30:	str	r7, [r8, #92]	; 0x5c
    cd34:	bge	e9bc <gen_wlanhostop+0x216c>
    cd38:	mov	r0, #1024	; 0x400
    cd3c:	lsl	r6, r0, r7
    cd40:	mov	r0, r6
    cd44:	bl	e34 <malloc@plt>
    cd48:	cmp	r0, #0
    cd4c:	str	r0, [r4, #12]
    cd50:	beq	e9bc <gen_wlanhostop+0x216c>
    cd54:	mov	r1, #0
    cd58:	mov	r2, r6
    cd5c:	add	r4, r4, #8
    cd60:	bl	ea0 <memset@plt>
    cd64:	cmp	r6, #19
    cd68:	str	r6, [r4]
    cd6c:	bhi	ceac <gen_wlanhostop+0x65c>
    cd70:	b	e9bc <gen_wlanhostop+0x216c>
    cd74:	mov	r0, #1
    cd78:	mov	r1, #4
    cd7c:	mov	r2, #6
    cd80:	mov	r3, sl
    cd84:	sub	sp, fp, #28
    cd88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cd8c:	b	1b00c <gen_bcmp>
    cd90:	mov	r0, #1
    cd94:	mov	r1, #0
    cd98:	mov	r2, #16
    cd9c:	str	sl, [sp, #4]
    cda0:	bl	165d8 <gen_load_a>
    cda4:	ldr	r8, [pc, #3936]	; dd0c <gen_wlanhostop+0x14bc>
    cda8:	mov	r5, r0
    cdac:	add	r8, pc, r8
    cdb0:	ldr	r0, [r8, #92]	; 0x5c
    cdb4:	ldr	sl, [pc, #3924]	; dd10 <gen_wlanhostop+0x14c0>
    cdb8:	add	sl, pc, sl
    cdbc:	mov	r4, sl
    cdc0:	ldr	r6, [r4, r0, lsl #3]!
    cdc4:	cmp	r6, #19
    cdc8:	bhi	d030 <gen_wlanhostop+0x7e0>
    cdcc:	add	r7, r0, #1
    cdd0:	cmp	r0, #15
    cdd4:	str	r7, [r8, #92]	; 0x5c
    cdd8:	bge	e9bc <gen_wlanhostop+0x216c>
    cddc:	mov	r0, #1024	; 0x400
    cde0:	lsl	r6, r0, r7
    cde4:	mov	r0, r6
    cde8:	bl	e34 <malloc@plt>
    cdec:	cmp	r0, #0
    cdf0:	str	r0, [r4, #12]
    cdf4:	beq	e9bc <gen_wlanhostop+0x216c>
    cdf8:	mov	r1, #0
    cdfc:	mov	r2, r6
    ce00:	add	r4, r4, #8
    ce04:	bl	ea0 <memset@plt>
    ce08:	cmp	r6, #19
    ce0c:	str	r6, [r4]
    ce10:	bhi	d034 <gen_wlanhostop+0x7e4>
    ce14:	b	e9bc <gen_wlanhostop+0x216c>
    ce18:	mov	r0, #1
    ce1c:	mov	r1, #1
    ce20:	mov	r2, #16
    ce24:	bl	165d8 <gen_load_a>
    ce28:	ldr	r8, [pc, #3812]	; dd14 <gen_wlanhostop+0x14c4>
    ce2c:	mov	r9, r0
    ce30:	add	r8, pc, r8
    ce34:	ldr	r0, [r8, #92]	; 0x5c
    ce38:	ldr	r5, [pc, #3800]	; dd18 <gen_wlanhostop+0x14c8>
    ce3c:	add	r5, pc, r5
    ce40:	mov	r4, r5
    ce44:	ldr	r6, [r4, r0, lsl #3]!
    ce48:	cmp	r6, #19
    ce4c:	bhi	d16c <gen_wlanhostop+0x91c>
    ce50:	add	r7, r0, #1
    ce54:	cmp	r0, #15
    ce58:	str	r7, [r8, #92]	; 0x5c
    ce5c:	bge	e9bc <gen_wlanhostop+0x216c>
    ce60:	mov	r0, #1024	; 0x400
    ce64:	lsl	r6, r0, r7
    ce68:	mov	r0, r6
    ce6c:	bl	e34 <malloc@plt>
    ce70:	cmp	r0, #0
    ce74:	str	r0, [r4, #12]
    ce78:	beq	e9bc <gen_wlanhostop+0x216c>
    ce7c:	mov	r1, #0
    ce80:	mov	r2, r6
    ce84:	add	r4, r4, #8
    ce88:	bl	ea0 <memset@plt>
    ce8c:	cmp	r6, #19
    ce90:	str	r6, [r4]
    ce94:	bhi	d170 <gen_wlanhostop+0x920>
    ce98:	b	e9bc <gen_wlanhostop+0x216c>
    ce9c:	add	r0, sp, #8
    cea0:	str	r6, [r0]
    cea4:	b	d5b0 <gen_wlanhostop+0xd60>
    cea8:	mov	r7, r0
    ceac:	sub	r1, r6, #20
    ceb0:	mov	r2, #84	; 0x54
    ceb4:	str	r1, [r4]
    ceb8:	ldr	r0, [r4, #4]
    cebc:	str	r2, [r0, r1]!
    cec0:	mov	r1, #12
    cec4:	mov	r2, r9
    cec8:	str	r1, [r0, #12]
    cecc:	mov	r1, r2
    ced0:	ldr	r2, [r2, #16]
    ced4:	cmp	r2, #0
    ced8:	bne	cecc <gen_wlanhostop+0x67c>
    cedc:	str	r0, [r1, #16]
    cee0:	ldr	r6, [r5, r7, lsl #3]!
    cee4:	cmp	r6, #207	; 0xcf
    cee8:	bhi	cf34 <gen_wlanhostop+0x6e4>
    ceec:	add	r0, r7, #1
    cef0:	cmp	r7, #15
    cef4:	str	r0, [r8, #92]	; 0x5c
    cef8:	bge	e9bc <gen_wlanhostop+0x216c>
    cefc:	mov	r1, #1024	; 0x400
    cf00:	lsl	r6, r1, r0
    cf04:	mov	r0, r6
    cf08:	bl	e34 <malloc@plt>
    cf0c:	cmp	r0, #0
    cf10:	str	r0, [r5, #12]
    cf14:	beq	e9bc <gen_wlanhostop+0x216c>
    cf18:	mov	r1, #0
    cf1c:	mov	r2, r6
    cf20:	add	r5, r5, #8
    cf24:	bl	ea0 <memset@plt>
    cf28:	cmp	r6, #207	; 0xcf
    cf2c:	str	r6, [r5]
    cf30:	bls	e9bc <gen_wlanhostop+0x216c>
    cf34:	sub	r0, r6, #208	; 0xd0
    cf38:	mov	r2, #6
    cf3c:	mov	r3, sl
    cf40:	str	r0, [r5]
    cf44:	ldr	r1, [r5, #4]
    cf48:	add	r4, r1, r0
    cf4c:	mov	r1, #4
    cf50:	mov	r0, #21
    cf54:	str	r1, [r4, #20]
    cf58:	str	r9, [r4, #4]
    cf5c:	str	r0, [r4, #8]
    cf60:	mov	r1, #16
    cf64:	ldr	r0, [r4, #44]	; 0x2c
    cf68:	clz	r0, r0
    cf6c:	lsr	r0, r0, #5
    cf70:	str	r0, [r4, #44]	; 0x2c
    cf74:	mov	r0, #1
    cf78:	str	r4, [r4, #96]	; 0x60
    cf7c:	bl	1b00c <gen_bcmp>
    cf80:	mov	r5, r0
    cf84:	cmp	r4, #0
    cf88:	beq	cfbc <gen_wlanhostop+0x76c>
    cf8c:	ldr	r0, [r5, #96]	; 0x60
    cf90:	mov	r1, r4
    cf94:	ldr	r2, [r1, #44]	; 0x2c
    cf98:	add	r3, r1, #84	; 0x54
    cf9c:	cmp	r2, #0
    cfa0:	mov	r2, #84	; 0x54
    cfa4:	movweq	r2, #60	; 0x3c
    cfa8:	addeq	r3, r1, #60	; 0x3c
    cfac:	ldr	r1, [r1, r2]
    cfb0:	str	r0, [r3]
    cfb4:	cmp	r1, #0
    cfb8:	bne	cf94 <gen_wlanhostop+0x744>
    cfbc:	ldr	r0, [r4, #44]	; 0x2c
    cfc0:	cmp	r5, #0
    cfc4:	clz	r0, r0
    cfc8:	lsr	r0, r0, #5
    cfcc:	str	r0, [r4, #44]	; 0x2c
    cfd0:	ldr	r1, [r5, #44]	; 0x2c
    cfd4:	clz	r0, r1
    cfd8:	lsr	r0, r0, #5
    cfdc:	str	r0, [r5, #44]	; 0x2c
    cfe0:	str	r5, [sp, #8]
    cfe4:	beq	e990 <gen_wlanhostop+0x2140>
    cfe8:	cmp	r1, #0
    cfec:	mov	r1, #60	; 0x3c
    cff0:	add	r0, r5, #60	; 0x3c
    cff4:	movweq	r1, #84	; 0x54
    cff8:	addeq	r0, r5, #84	; 0x54
    cffc:	ldr	r1, [r5, r1]
    d000:	cmp	r1, #0
    d004:	beq	e994 <gen_wlanhostop+0x2144>
    d008:	ldr	r2, [r1, #44]	; 0x2c
    d00c:	add	r0, r1, #84	; 0x54
    d010:	cmp	r2, #0
    d014:	mov	r2, #84	; 0x54
    d018:	movweq	r2, #60	; 0x3c
    d01c:	addeq	r0, r1, #60	; 0x3c
    d020:	ldr	r1, [r1, r2]
    d024:	cmp	r1, #0
    d028:	bne	d008 <gen_wlanhostop+0x7b8>
    d02c:	b	e994 <gen_wlanhostop+0x2144>
    d030:	mov	r7, r0
    d034:	sub	r1, r6, #20
    d038:	mov	r2, #84	; 0x54
    d03c:	str	r1, [r4]
    d040:	ldr	r0, [r4, #4]
    d044:	str	r2, [r0, r1]!
    d048:	mov	r1, #12
    d04c:	mov	r2, r5
    d050:	str	r1, [r0, #12]
    d054:	mov	r1, r2
    d058:	ldr	r2, [r2, #16]
    d05c:	cmp	r2, #0
    d060:	bne	d054 <gen_wlanhostop+0x804>
    d064:	str	r0, [r1, #16]
    d068:	mov	r4, sl
    d06c:	ldr	r6, [r4, r7, lsl #3]!
    d070:	cmp	r6, #207	; 0xcf
    d074:	bhi	d0c0 <gen_wlanhostop+0x870>
    d078:	add	r0, r7, #1
    d07c:	cmp	r7, #15
    d080:	str	r0, [r8, #92]	; 0x5c
    d084:	bge	e9bc <gen_wlanhostop+0x216c>
    d088:	mov	r1, #1024	; 0x400
    d08c:	lsl	r6, r1, r0
    d090:	mov	r0, r6
    d094:	bl	e34 <malloc@plt>
    d098:	cmp	r0, #0
    d09c:	str	r0, [r4, #12]
    d0a0:	beq	e9bc <gen_wlanhostop+0x216c>
    d0a4:	mov	r1, #0
    d0a8:	mov	r2, r6
    d0ac:	add	r4, r4, #8
    d0b0:	bl	ea0 <memset@plt>
    d0b4:	cmp	r6, #207	; 0xcf
    d0b8:	str	r6, [r4]
    d0bc:	bls	e9bc <gen_wlanhostop+0x216c>
    d0c0:	sub	r0, r6, #208	; 0xd0
    d0c4:	mov	r2, #16
    d0c8:	str	r0, [r4]
    d0cc:	ldr	r1, [r4, #4]
    d0d0:	add	r7, r1, r0
    d0d4:	mov	r1, #4
    d0d8:	mov	r0, #21
    d0dc:	str	r1, [r7, #20]
    d0e0:	str	r5, [r7, #4]
    d0e4:	str	r0, [r7, #8]
    d0e8:	mov	r1, #0
    d0ec:	ldr	r0, [r7, #44]	; 0x2c
    d0f0:	clz	r0, r0
    d0f4:	lsr	r0, r0, #5
    d0f8:	str	r0, [r7, #44]	; 0x2c
    d0fc:	mov	r0, #1
    d100:	str	r7, [r7, #96]	; 0x60
    d104:	bl	165d8 <gen_load_a>
    d108:	mov	r9, r0
    d10c:	ldr	r0, [r8, #92]	; 0x5c
    d110:	mov	r4, sl
    d114:	ldr	r6, [r4, r0, lsl #3]!
    d118:	cmp	r6, #19
    d11c:	bhi	d2e4 <gen_wlanhostop+0xa94>
    d120:	add	r5, r0, #1
    d124:	cmp	r0, #15
    d128:	str	r5, [r8, #92]	; 0x5c
    d12c:	bge	e9bc <gen_wlanhostop+0x216c>
    d130:	mov	r0, #1024	; 0x400
    d134:	lsl	r6, r0, r5
    d138:	mov	r0, r6
    d13c:	bl	e34 <malloc@plt>
    d140:	cmp	r0, #0
    d144:	str	r0, [r4, #12]
    d148:	beq	e9bc <gen_wlanhostop+0x216c>
    d14c:	mov	r1, #0
    d150:	mov	r2, r6
    d154:	add	r4, r4, #8
    d158:	bl	ea0 <memset@plt>
    d15c:	cmp	r6, #19
    d160:	str	r6, [r4]
    d164:	bhi	d2e8 <gen_wlanhostop+0xa98>
    d168:	b	e9bc <gen_wlanhostop+0x216c>
    d16c:	mov	r7, r0
    d170:	sub	r1, r6, #20
    d174:	mov	r2, #84	; 0x54
    d178:	str	r1, [r4]
    d17c:	ldr	r0, [r4, #4]
    d180:	str	r2, [r0, r1]!
    d184:	mov	r1, #3
    d188:	mov	r2, r9
    d18c:	str	r1, [r0, #12]
    d190:	mov	r1, r2
    d194:	ldr	r2, [r2, #16]
    d198:	cmp	r2, #0
    d19c:	bne	d190 <gen_wlanhostop+0x940>
    d1a0:	str	r0, [r1, #16]
    d1a4:	ldr	r6, [r5, r7, lsl #3]!
    d1a8:	cmp	r6, #207	; 0xcf
    d1ac:	bhi	d1f8 <gen_wlanhostop+0x9a8>
    d1b0:	add	r0, r7, #1
    d1b4:	cmp	r7, #15
    d1b8:	str	r0, [r8, #92]	; 0x5c
    d1bc:	bge	e9bc <gen_wlanhostop+0x216c>
    d1c0:	mov	r1, #1024	; 0x400
    d1c4:	lsl	r6, r1, r0
    d1c8:	mov	r0, r6
    d1cc:	bl	e34 <malloc@plt>
    d1d0:	cmp	r0, #0
    d1d4:	str	r0, [r5, #12]
    d1d8:	beq	e9bc <gen_wlanhostop+0x216c>
    d1dc:	mov	r1, #0
    d1e0:	mov	r2, r6
    d1e4:	add	r5, r5, #8
    d1e8:	bl	ea0 <memset@plt>
    d1ec:	cmp	r6, #207	; 0xcf
    d1f0:	str	r6, [r5]
    d1f4:	bls	e9bc <gen_wlanhostop+0x216c>
    d1f8:	sub	r0, r6, #208	; 0xd0
    d1fc:	mov	r2, #6
    d200:	mov	r3, sl
    d204:	str	r0, [r5]
    d208:	ldr	r1, [r5, #4]
    d20c:	add	r4, r1, r0
    d210:	mov	r1, #3
    d214:	mov	r0, #21
    d218:	str	r1, [r4, #20]
    d21c:	str	r9, [r4, #4]
    d220:	str	r0, [r4, #8]
    d224:	mov	r0, #1
    d228:	mov	r1, #24
    d22c:	str	r4, [r4, #96]	; 0x60
    d230:	bl	1b00c <gen_bcmp>
    d234:	mov	r5, r0
    d238:	cmp	r4, #0
    d23c:	beq	d270 <gen_wlanhostop+0xa20>
    d240:	ldr	r0, [r5, #96]	; 0x60
    d244:	mov	r1, r4
    d248:	ldr	r2, [r1, #44]	; 0x2c
    d24c:	add	r3, r1, #84	; 0x54
    d250:	cmp	r2, #0
    d254:	mov	r2, #84	; 0x54
    d258:	movweq	r2, #60	; 0x3c
    d25c:	addeq	r3, r1, #60	; 0x3c
    d260:	ldr	r1, [r1, r2]
    d264:	str	r0, [r3]
    d268:	cmp	r1, #0
    d26c:	bne	d248 <gen_wlanhostop+0x9f8>
    d270:	ldr	r0, [r4, #44]	; 0x2c
    d274:	cmp	r5, #0
    d278:	clz	r0, r0
    d27c:	lsr	r0, r0, #5
    d280:	str	r0, [r4, #44]	; 0x2c
    d284:	ldr	r1, [r5, #44]	; 0x2c
    d288:	clz	r0, r1
    d28c:	lsr	r0, r0, #5
    d290:	str	r0, [r5, #44]	; 0x2c
    d294:	str	r5, [sp, #8]
    d298:	beq	e990 <gen_wlanhostop+0x2140>
    d29c:	cmp	r1, #0
    d2a0:	mov	r1, #60	; 0x3c
    d2a4:	add	r0, r5, #60	; 0x3c
    d2a8:	movweq	r1, #84	; 0x54
    d2ac:	addeq	r0, r5, #84	; 0x54
    d2b0:	ldr	r1, [r5, r1]
    d2b4:	cmp	r1, #0
    d2b8:	beq	e994 <gen_wlanhostop+0x2144>
    d2bc:	ldr	r2, [r1, #44]	; 0x2c
    d2c0:	add	r0, r1, #84	; 0x54
    d2c4:	cmp	r2, #0
    d2c8:	mov	r2, #84	; 0x54
    d2cc:	movweq	r2, #60	; 0x3c
    d2d0:	addeq	r0, r1, #60	; 0x3c
    d2d4:	ldr	r1, [r1, r2]
    d2d8:	cmp	r1, #0
    d2dc:	bne	d2bc <gen_wlanhostop+0xa6c>
    d2e0:	b	e994 <gen_wlanhostop+0x2144>
    d2e4:	mov	r5, r0
    d2e8:	sub	r1, r6, #20
    d2ec:	mov	r2, #84	; 0x54
    d2f0:	str	r1, [r4]
    d2f4:	ldr	r0, [r4, #4]
    d2f8:	str	r2, [r0, r1]!
    d2fc:	mov	r1, #240	; 0xf0
    d300:	mov	r2, r9
    d304:	str	r1, [r0, #12]
    d308:	mov	r1, r2
    d30c:	ldr	r2, [r2, #16]
    d310:	cmp	r2, #0
    d314:	bne	d308 <gen_wlanhostop+0xab8>
    d318:	str	r0, [r1, #16]
    d31c:	mov	r4, sl
    d320:	ldr	r6, [r4, r5, lsl #3]!
    d324:	cmp	r6, #207	; 0xcf
    d328:	bhi	d374 <gen_wlanhostop+0xb24>
    d32c:	add	r0, r5, #1
    d330:	cmp	r5, #15
    d334:	str	r0, [r8, #92]	; 0x5c
    d338:	bge	e9bc <gen_wlanhostop+0x216c>
    d33c:	mov	r1, #1024	; 0x400
    d340:	lsl	r6, r1, r0
    d344:	mov	r0, r6
    d348:	bl	e34 <malloc@plt>
    d34c:	cmp	r0, #0
    d350:	str	r0, [r4, #12]
    d354:	beq	e9bc <gen_wlanhostop+0x216c>
    d358:	mov	r1, #0
    d35c:	mov	r2, r6
    d360:	add	r4, r4, #8
    d364:	bl	ea0 <memset@plt>
    d368:	cmp	r6, #207	; 0xcf
    d36c:	str	r6, [r4]
    d370:	bls	e9bc <gen_wlanhostop+0x216c>
    d374:	sub	r0, r6, #208	; 0xd0
    d378:	mov	r2, #16
    d37c:	str	r0, [r4]
    d380:	ldr	r1, [r4, #4]
    d384:	add	r5, r1, r0
    d388:	mov	r1, #192	; 0xc0
    d38c:	mov	r0, #21
    d390:	str	r1, [r5, #20]
    d394:	str	r9, [r5, #4]
    d398:	str	r0, [r5, #8]
    d39c:	mov	r1, #0
    d3a0:	ldr	r0, [r5, #44]	; 0x2c
    d3a4:	clz	r0, r0
    d3a8:	lsr	r0, r0, #5
    d3ac:	str	r0, [r5, #44]	; 0x2c
    d3b0:	mov	r0, #1
    d3b4:	str	r5, [r5, #96]	; 0x60
    d3b8:	bl	165d8 <gen_load_a>
    d3bc:	mov	r9, r0
    d3c0:	ldr	r0, [r8, #92]	; 0x5c
    d3c4:	mov	r4, sl
    d3c8:	ldr	r6, [r4, r0, lsl #3]!
    d3cc:	cmp	r6, #19
    d3d0:	bhi	d424 <gen_wlanhostop+0xbd4>
    d3d4:	mov	r1, r8
    d3d8:	add	r8, r0, #1
    d3dc:	cmp	r0, #15
    d3e0:	str	r8, [r1, #92]	; 0x5c
    d3e4:	bge	e9bc <gen_wlanhostop+0x216c>
    d3e8:	mov	r0, #1024	; 0x400
    d3ec:	lsl	r6, r0, r8
    d3f0:	mov	r0, r6
    d3f4:	bl	e34 <malloc@plt>
    d3f8:	cmp	r0, #0
    d3fc:	str	r0, [r4, #12]
    d400:	beq	e9bc <gen_wlanhostop+0x216c>
    d404:	mov	r1, #0
    d408:	mov	r2, r6
    d40c:	add	r4, r4, #8
    d410:	bl	ea0 <memset@plt>
    d414:	cmp	r6, #19
    d418:	str	r6, [r4]
    d41c:	bhi	d428 <gen_wlanhostop+0xbd8>
    d420:	b	e9bc <gen_wlanhostop+0x216c>
    d424:	mov	r8, r0
    d428:	sub	r1, r6, #20
    d42c:	mov	r2, #84	; 0x54
    d430:	str	r1, [r4]
    d434:	ldr	r0, [r4, #4]
    d438:	str	r2, [r0, r1]!
    d43c:	mov	r1, #240	; 0xf0
    d440:	mov	r2, r9
    d444:	str	r1, [r0, #12]
    d448:	mov	r1, r2
    d44c:	ldr	r2, [r2, #16]
    d450:	cmp	r2, #0
    d454:	bne	d448 <gen_wlanhostop+0xbf8>
    d458:	str	r0, [r1, #16]
    d45c:	ldr	r6, [sl, r8, lsl #3]!
    d460:	cmp	r6, #207	; 0xcf
    d464:	bhi	d4b8 <gen_wlanhostop+0xc68>
    d468:	ldr	r1, [pc, #4040]	; e438 <gen_wlanhostop+0x1be8>
    d46c:	add	r0, r8, #1
    d470:	cmp	r8, #15
    d474:	add	r1, pc, r1
    d478:	str	r0, [r1, #92]	; 0x5c
    d47c:	bge	e9bc <gen_wlanhostop+0x216c>
    d480:	mov	r1, #1024	; 0x400
    d484:	lsl	r6, r1, r0
    d488:	mov	r0, r6
    d48c:	bl	e34 <malloc@plt>
    d490:	cmp	r0, #0
    d494:	str	r0, [sl, #12]
    d498:	beq	e9bc <gen_wlanhostop+0x216c>
    d49c:	mov	r1, #0
    d4a0:	mov	r2, r6
    d4a4:	add	sl, sl, #8
    d4a8:	bl	ea0 <memset@plt>
    d4ac:	cmp	r6, #207	; 0xcf
    d4b0:	str	r6, [sl]
    d4b4:	bls	e9bc <gen_wlanhostop+0x216c>
    d4b8:	sub	r0, r6, #208	; 0xd0
    d4bc:	cmp	r5, #0
    d4c0:	str	r0, [sl]
    d4c4:	ldr	r1, [sl, #4]
    d4c8:	add	r4, r1, r0
    d4cc:	mov	r1, #208	; 0xd0
    d4d0:	mov	r0, #21
    d4d4:	str	r1, [r4, #20]
    d4d8:	str	r9, [r4, #4]
    d4dc:	str	r0, [r4, #8]
    d4e0:	ldr	r0, [r4, #44]	; 0x2c
    d4e4:	clz	r0, r0
    d4e8:	lsr	r0, r0, #5
    d4ec:	str	r0, [r4, #44]	; 0x2c
    d4f0:	str	r4, [r4, #96]	; 0x60
    d4f4:	beq	d524 <gen_wlanhostop+0xcd4>
    d4f8:	mov	r0, r5
    d4fc:	ldr	r1, [r0, #44]	; 0x2c
    d500:	add	r2, r0, #84	; 0x54
    d504:	cmp	r1, #0
    d508:	mov	r1, #84	; 0x54
    d50c:	movweq	r1, #60	; 0x3c
    d510:	addeq	r2, r0, #60	; 0x3c
    d514:	ldr	r0, [r0, r1]
    d518:	str	r4, [r2]
    d51c:	cmp	r0, #0
    d520:	bne	d4fc <gen_wlanhostop+0xcac>
    d524:	ldr	r0, [r5, #44]	; 0x2c
    d528:	ldr	r3, [sp, #4]
    d52c:	cmp	r4, #0
    d530:	clz	r0, r0
    d534:	lsr	r0, r0, #5
    d538:	str	r0, [r5, #44]	; 0x2c
    d53c:	ldr	r0, [r4, #44]	; 0x2c
    d540:	clz	r1, r0
    d544:	lsr	r1, r1, #5
    d548:	str	r1, [r4, #44]	; 0x2c
    d54c:	str	r4, [sp, #8]
    d550:	beq	e808 <gen_wlanhostop+0x1fb8>
    d554:	cmp	r0, #0
    d558:	mov	r2, #60	; 0x3c
    d55c:	mov	r1, r4
    d560:	movweq	r2, #84	; 0x54
    d564:	ldr	r0, [r1, r2]!
    d568:	cmp	r0, #0
    d56c:	beq	e80c <gen_wlanhostop+0x1fbc>
    d570:	ldr	r2, [r0, #44]	; 0x2c
    d574:	add	r1, r0, #84	; 0x54
    d578:	cmp	r2, #0
    d57c:	mov	r2, #84	; 0x54
    d580:	movweq	r2, #60	; 0x3c
    d584:	addeq	r1, r0, #60	; 0x3c
    d588:	ldr	r0, [r0, r2]
    d58c:	cmp	r0, #0
    d590:	bne	d570 <gen_wlanhostop+0xd20>
    d594:	b	e80c <gen_wlanhostop+0x1fbc>
    d598:	add	r0, sp, #8
    d59c:	str	r6, [r0]
    d5a0:	ldr	r0, [r5, #44]	; 0x2c
    d5a4:	clz	r0, r0
    d5a8:	lsr	r0, r0, #5
    d5ac:	str	r0, [r5, #44]	; 0x2c
    d5b0:	ldr	r0, [r6, #96]	; 0x60
    d5b4:	str	r0, [r5, #96]	; 0x60
    d5b8:	mov	r0, r5
    d5bc:	sub	sp, fp, #28
    d5c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d5c4:	add	r0, sp, #8
    d5c8:	str	r4, [r0]
    d5cc:	mov	r1, #1
    d5d0:	mov	r2, #16
    d5d4:	mov	r9, #1
    d5d8:	ldr	r0, [r5, #44]	; 0x2c
    d5dc:	clz	r0, r0
    d5e0:	lsr	r0, r0, #5
    d5e4:	str	r0, [r5, #44]	; 0x2c
    d5e8:	ldr	r0, [r4, #96]	; 0x60
    d5ec:	str	r0, [r5, #96]	; 0x60
    d5f0:	mov	r0, #1
    d5f4:	bl	165d8 <gen_load_a>
    d5f8:	ldr	r2, [pc, #4036]	; e5c4 <gen_wlanhostop+0x1d74>
    d5fc:	mov	r6, r0
    d600:	mov	r4, r8
    d604:	add	r2, pc, r2
    d608:	ldr	r0, [r2, #92]	; 0x5c
    d60c:	ldr	r7, [r4, r0, lsl #3]!
    d610:	cmp	r7, #207	; 0xcf
    d614:	bhi	d660 <gen_wlanhostop+0xe10>
    d618:	add	r1, r0, #1
    d61c:	cmp	r0, #15
    d620:	str	r1, [r2, #92]	; 0x5c
    d624:	bge	e9bc <gen_wlanhostop+0x216c>
    d628:	mov	r0, #1024	; 0x400
    d62c:	lsl	r7, r0, r1
    d630:	mov	r0, r7
    d634:	bl	e34 <malloc@plt>
    d638:	cmp	r0, #0
    d63c:	str	r0, [r4, #12]
    d640:	beq	e9bc <gen_wlanhostop+0x216c>
    d644:	mov	r1, #0
    d648:	mov	r2, r7
    d64c:	add	r4, r4, #8
    d650:	bl	ea0 <memset@plt>
    d654:	cmp	r7, #207	; 0xcf
    d658:	str	r7, [r4]
    d65c:	bls	e9bc <gen_wlanhostop+0x216c>
    d660:	sub	r0, r7, #208	; 0xd0
    d664:	mov	r2, #6
    d668:	mov	r3, sl
    d66c:	str	r0, [r4]
    d670:	ldr	r1, [r4, #4]
    d674:	add	r4, r1, r0
    d678:	mov	r0, #69	; 0x45
    d67c:	mov	r1, #16
    d680:	str	r9, [r4, #20]
    d684:	str	r6, [r4, #4]
    d688:	str	r0, [r4, #8]
    d68c:	ldr	r0, [r4, #44]	; 0x2c
    d690:	clz	r0, r0
    d694:	lsr	r0, r0, #5
    d698:	str	r0, [r4, #44]	; 0x2c
    d69c:	mov	r0, #1
    d6a0:	str	r4, [r4, #96]	; 0x60
    d6a4:	bl	1b00c <gen_bcmp>
    d6a8:	cmp	r4, #0
    d6ac:	beq	d6e0 <gen_wlanhostop+0xe90>
    d6b0:	ldr	r1, [r0, #96]	; 0x60
    d6b4:	mov	r2, r4
    d6b8:	ldr	r3, [r2, #44]	; 0x2c
    d6bc:	add	r7, r2, #84	; 0x54
    d6c0:	cmp	r3, #0
    d6c4:	mov	r3, #84	; 0x54
    d6c8:	movweq	r3, #60	; 0x3c
    d6cc:	addeq	r7, r2, #60	; 0x3c
    d6d0:	ldr	r2, [r2, r3]
    d6d4:	str	r1, [r7]
    d6d8:	cmp	r2, #0
    d6dc:	bne	d6b8 <gen_wlanhostop+0xe68>
    d6e0:	ldr	r1, [r4, #44]	; 0x2c
    d6e4:	cmp	r0, #0
    d6e8:	clz	r1, r1
    d6ec:	lsr	r1, r1, #5
    d6f0:	str	r1, [r4, #44]	; 0x2c
    d6f4:	ldr	r2, [r0, #44]	; 0x2c
    d6f8:	clz	r1, r2
    d6fc:	lsr	r1, r1, #5
    d700:	str	r1, [r0, #44]	; 0x2c
    d704:	str	r0, [sp, #8]
    d708:	ldr	r9, [pc, #3944]	; e678 <gen_wlanhostop+0x1e28>
    d70c:	add	r9, pc, r9
    d710:	beq	d8f4 <gen_wlanhostop+0x10a4>
    d714:	cmp	r2, #0
    d718:	mov	r2, #60	; 0x3c
    d71c:	add	r1, r0, #60	; 0x3c
    d720:	movweq	r2, #84	; 0x54
    d724:	addeq	r1, r0, #84	; 0x54
    d728:	ldr	r2, [r0, r2]
    d72c:	cmp	r2, #0
    d730:	beq	d8f8 <gen_wlanhostop+0x10a8>
    d734:	ldr	r3, [r2, #44]	; 0x2c
    d738:	add	r1, r2, #84	; 0x54
    d73c:	cmp	r3, #0
    d740:	mov	r3, #84	; 0x54
    d744:	movweq	r3, #60	; 0x3c
    d748:	addeq	r1, r2, #60	; 0x3c
    d74c:	ldr	r2, [r2, r3]
    d750:	cmp	r2, #0
    d754:	bne	d734 <gen_wlanhostop+0xee4>
    d758:	b	d8f8 <gen_wlanhostop+0x10a8>
    d75c:	add	r0, sp, #8
    d760:	str	r4, [r0]
    d764:	mov	r1, #1
    d768:	mov	r2, #16
    d76c:	mov	r9, #1
    d770:	ldr	r0, [r5, #44]	; 0x2c
    d774:	clz	r0, r0
    d778:	lsr	r0, r0, #5
    d77c:	str	r0, [r5, #44]	; 0x2c
    d780:	ldr	r0, [r4, #96]	; 0x60
    d784:	str	r0, [r5, #96]	; 0x60
    d788:	mov	r0, #1
    d78c:	bl	165d8 <gen_load_a>
    d790:	ldr	r2, [pc, #3812]	; e67c <gen_wlanhostop+0x1e2c>
    d794:	mov	r6, r0
    d798:	mov	r4, r8
    d79c:	add	r2, pc, r2
    d7a0:	ldr	r0, [r2, #92]	; 0x5c
    d7a4:	ldr	r7, [r4, r0, lsl #3]!
    d7a8:	cmp	r7, #207	; 0xcf
    d7ac:	bhi	d7f8 <gen_wlanhostop+0xfa8>
    d7b0:	add	r1, r0, #1
    d7b4:	cmp	r0, #15
    d7b8:	str	r1, [r2, #92]	; 0x5c
    d7bc:	bge	e9bc <gen_wlanhostop+0x216c>
    d7c0:	mov	r0, #1024	; 0x400
    d7c4:	lsl	r7, r0, r1
    d7c8:	mov	r0, r7
    d7cc:	bl	e34 <malloc@plt>
    d7d0:	cmp	r0, #0
    d7d4:	str	r0, [r4, #12]
    d7d8:	beq	e9bc <gen_wlanhostop+0x216c>
    d7dc:	mov	r1, #0
    d7e0:	mov	r2, r7
    d7e4:	add	r4, r4, #8
    d7e8:	bl	ea0 <memset@plt>
    d7ec:	cmp	r7, #207	; 0xcf
    d7f0:	str	r7, [r4]
    d7f4:	bls	e9bc <gen_wlanhostop+0x216c>
    d7f8:	sub	r0, r7, #208	; 0xd0
    d7fc:	mov	r2, #6
    d800:	mov	r3, sl
    d804:	str	r0, [r4]
    d808:	ldr	r1, [r4, #4]
    d80c:	add	r4, r1, r0
    d810:	mov	r0, #69	; 0x45
    d814:	mov	r1, #4
    d818:	str	r9, [r4, #20]
    d81c:	str	r6, [r4, #4]
    d820:	str	r0, [r4, #8]
    d824:	ldr	r0, [r4, #44]	; 0x2c
    d828:	clz	r0, r0
    d82c:	lsr	r0, r0, #5
    d830:	str	r0, [r4, #44]	; 0x2c
    d834:	mov	r0, #1
    d838:	str	r4, [r4, #96]	; 0x60
    d83c:	bl	1b00c <gen_bcmp>
    d840:	cmp	r4, #0
    d844:	beq	d878 <gen_wlanhostop+0x1028>
    d848:	ldr	r1, [r0, #96]	; 0x60
    d84c:	mov	r2, r4
    d850:	ldr	r3, [r2, #44]	; 0x2c
    d854:	add	r7, r2, #84	; 0x54
    d858:	cmp	r3, #0
    d85c:	mov	r3, #84	; 0x54
    d860:	movweq	r3, #60	; 0x3c
    d864:	addeq	r7, r2, #60	; 0x3c
    d868:	ldr	r2, [r2, r3]
    d86c:	str	r1, [r7]
    d870:	cmp	r2, #0
    d874:	bne	d850 <gen_wlanhostop+0x1000>
    d878:	ldr	r1, [r4, #44]	; 0x2c
    d87c:	cmp	r0, #0
    d880:	clz	r1, r1
    d884:	lsr	r1, r1, #5
    d888:	str	r1, [r4, #44]	; 0x2c
    d88c:	ldr	r2, [r0, #44]	; 0x2c
    d890:	clz	r1, r2
    d894:	lsr	r1, r1, #5
    d898:	str	r1, [r0, #44]	; 0x2c
    d89c:	str	r0, [sp, #8]
    d8a0:	ldr	r9, [pc, #4044]	; e874 <gen_wlanhostop+0x2024>
    d8a4:	add	r9, pc, r9
    d8a8:	beq	d9a4 <gen_wlanhostop+0x1154>
    d8ac:	cmp	r2, #0
    d8b0:	mov	r2, #60	; 0x3c
    d8b4:	add	r1, r0, #60	; 0x3c
    d8b8:	movweq	r2, #84	; 0x54
    d8bc:	addeq	r1, r0, #84	; 0x54
    d8c0:	ldr	r2, [r0, r2]
    d8c4:	cmp	r2, #0
    d8c8:	beq	d9a8 <gen_wlanhostop+0x1158>
    d8cc:	ldr	r3, [r2, #44]	; 0x2c
    d8d0:	add	r1, r2, #84	; 0x54
    d8d4:	cmp	r3, #0
    d8d8:	mov	r3, #84	; 0x54
    d8dc:	movweq	r3, #60	; 0x3c
    d8e0:	addeq	r1, r2, #60	; 0x3c
    d8e4:	ldr	r2, [r2, r3]
    d8e8:	cmp	r2, #0
    d8ec:	bne	d8cc <gen_wlanhostop+0x107c>
    d8f0:	b	d9a8 <gen_wlanhostop+0x1158>
    d8f4:	add	r1, sp, #8
    d8f8:	str	r4, [r1]
    d8fc:	ldr	r1, [r0, #44]	; 0x2c
    d900:	clz	r2, r1
    d904:	cmp	r1, #0
    d908:	lsr	r2, r2, #5
    d90c:	movwne	r1, #1
    d910:	cmp	r0, #0
    d914:	str	r2, [r0, #44]	; 0x2c
    d918:	ldr	r2, [r4, #96]	; 0x60
    d91c:	str	r1, [r0, #44]	; 0x2c
    d920:	str	r2, [r0, #96]	; 0x60
    d924:	beq	d960 <gen_wlanhostop+0x1110>
    d928:	ldr	r2, [r5, #96]	; 0x60
    d92c:	mov	r3, r0
    d930:	cmp	r1, #0
    d934:	mov	r1, #84	; 0x54
    d938:	add	r7, r3, #84	; 0x54
    d93c:	movweq	r1, #60	; 0x3c
    d940:	addeq	r7, r3, #60	; 0x3c
    d944:	ldr	r3, [r3, r1]
    d948:	str	r2, [r7]
    d94c:	cmp	r3, #0
    d950:	beq	d95c <gen_wlanhostop+0x110c>
    d954:	ldr	r1, [r3, #44]	; 0x2c
    d958:	b	d930 <gen_wlanhostop+0x10e0>
    d95c:	ldr	r1, [r0, #44]	; 0x2c
    d960:	clz	r1, r1
    d964:	cmp	r5, #0
    d968:	lsr	r1, r1, #5
    d96c:	str	r1, [r0, #44]	; 0x2c
    d970:	str	r5, [sp, #8]
    d974:	beq	da64 <gen_wlanhostop+0x1214>
    d978:	mov	r2, r5
    d97c:	ldr	r3, [r2, #44]	; 0x2c
    d980:	add	r1, r2, #84	; 0x54
    d984:	cmp	r3, #0
    d988:	mov	r3, #84	; 0x54
    d98c:	movweq	r3, #60	; 0x3c
    d990:	addeq	r1, r2, #60	; 0x3c
    d994:	ldr	r2, [r2, r3]
    d998:	cmp	r2, #0
    d99c:	bne	d97c <gen_wlanhostop+0x112c>
    d9a0:	b	da68 <gen_wlanhostop+0x1218>
    d9a4:	add	r1, sp, #8
    d9a8:	str	r4, [r1]
    d9ac:	ldr	r1, [r0, #44]	; 0x2c
    d9b0:	clz	r2, r1
    d9b4:	cmp	r1, #0
    d9b8:	lsr	r2, r2, #5
    d9bc:	movwne	r1, #1
    d9c0:	cmp	r0, #0
    d9c4:	str	r2, [r0, #44]	; 0x2c
    d9c8:	ldr	r2, [r4, #96]	; 0x60
    d9cc:	str	r1, [r0, #44]	; 0x2c
    d9d0:	str	r2, [r0, #96]	; 0x60
    d9d4:	beq	da18 <gen_wlanhostop+0x11c8>
    d9d8:	ldr	r2, [r5, #96]	; 0x60
    d9dc:	mov	r3, r0
    d9e0:	cmp	r1, #0
    d9e4:	mov	r1, #84	; 0x54
    d9e8:	add	r7, r3, #84	; 0x54
    d9ec:	movweq	r1, #60	; 0x3c
    d9f0:	addeq	r7, r3, #60	; 0x3c
    d9f4:	ldr	r3, [r3, r1]
    d9f8:	str	r2, [r7]
    d9fc:	cmp	r3, #0
    da00:	beq	da14 <gen_wlanhostop+0x11c4>
    da04:	ldr	r1, [r3, #44]	; 0x2c
    da08:	b	d9e0 <gen_wlanhostop+0x1190>
    da0c:	.word	0x00039aac
    da10:	.word	0x000399e0
    da14:	ldr	r1, [r0, #44]	; 0x2c
    da18:	clz	r1, r1
    da1c:	cmp	r5, #0
    da20:	lsr	r1, r1, #5
    da24:	str	r1, [r0, #44]	; 0x2c
    da28:	str	r5, [sp, #8]
    da2c:	beq	dbb4 <gen_wlanhostop+0x1364>
    da30:	mov	r2, r5
    da34:	ldr	r3, [r2, #44]	; 0x2c
    da38:	add	r1, r2, #84	; 0x54
    da3c:	cmp	r3, #0
    da40:	mov	r3, #84	; 0x54
    da44:	movweq	r3, #60	; 0x3c
    da48:	addeq	r1, r2, #60	; 0x3c
    da4c:	ldr	r2, [r2, r3]
    da50:	cmp	r2, #0
    da54:	bne	da34 <gen_wlanhostop+0x11e4>
    da58:	b	dbb8 <gen_wlanhostop+0x1368>
    da5c:	.word	0x00039940
    da60:	.word	0x00039874
    da64:	add	r1, sp, #8
    da68:	str	r0, [r1]
    da6c:	mov	r1, #1
    da70:	mov	r2, #16
    da74:	ldr	r0, [r0, #96]	; 0x60
    da78:	str	r0, [r5, #96]	; 0x60
    da7c:	mov	r0, #1
    da80:	bl	165d8 <gen_load_a>
    da84:	mov	r6, r0
    da88:	ldr	r0, [r9, #92]	; 0x5c
    da8c:	mov	r4, r8
    da90:	ldr	r7, [r4, r0, lsl #3]!
    da94:	cmp	r7, #207	; 0xcf
    da98:	bhi	dae4 <gen_wlanhostop+0x1294>
    da9c:	add	r1, r0, #1
    daa0:	cmp	r0, #15
    daa4:	str	r1, [r9, #92]	; 0x5c
    daa8:	bge	e9bc <gen_wlanhostop+0x216c>
    daac:	mov	r0, #1024	; 0x400
    dab0:	lsl	r7, r0, r1
    dab4:	mov	r0, r7
    dab8:	bl	e34 <malloc@plt>
    dabc:	cmp	r0, #0
    dac0:	str	r0, [r4, #12]
    dac4:	beq	e9bc <gen_wlanhostop+0x216c>
    dac8:	mov	r1, #0
    dacc:	mov	r2, r7
    dad0:	add	r4, r4, #8
    dad4:	bl	ea0 <memset@plt>
    dad8:	cmp	r7, #207	; 0xcf
    dadc:	str	r7, [r4]
    dae0:	bls	e9bc <gen_wlanhostop+0x216c>
    dae4:	sub	r0, r7, #208	; 0xd0
    dae8:	mov	r2, #2
    daec:	str	r0, [r4]
    daf0:	ldr	r1, [r4, #4]
    daf4:	adds	r0, r1, r0
    daf8:	mov	r1, #69	; 0x45
    dafc:	str	r2, [r0, #20]
    db00:	str	r6, [r0, #4]
    db04:	str	r1, [r0, #8]
    db08:	str	r0, [r0, #96]	; 0x60
    db0c:	beq	db40 <gen_wlanhostop+0x12f0>
    db10:	ldr	r1, [r5, #96]	; 0x60
    db14:	mov	r2, r0
    db18:	ldr	r3, [r2, #44]	; 0x2c
    db1c:	add	r7, r2, #84	; 0x54
    db20:	cmp	r3, #0
    db24:	mov	r3, #84	; 0x54
    db28:	movweq	r3, #60	; 0x3c
    db2c:	addeq	r7, r2, #60	; 0x3c
    db30:	ldr	r2, [r2, r3]
    db34:	str	r1, [r7]
    db38:	cmp	r2, #0
    db3c:	bne	db18 <gen_wlanhostop+0x12c8>
    db40:	ldr	r1, [r0, #44]	; 0x2c
    db44:	cmp	r5, #0
    db48:	clz	r1, r1
    db4c:	lsr	r1, r1, #5
    db50:	str	r1, [r0, #44]	; 0x2c
    db54:	ldr	r2, [r5, #44]	; 0x2c
    db58:	clz	r1, r2
    db5c:	lsr	r1, r1, #5
    db60:	str	r1, [r5, #44]	; 0x2c
    db64:	str	r5, [sp, #8]
    db68:	beq	dd1c <gen_wlanhostop+0x14cc>
    db6c:	cmp	r2, #0
    db70:	mov	r2, #60	; 0x3c
    db74:	add	r1, r5, #60	; 0x3c
    db78:	movweq	r2, #84	; 0x54
    db7c:	addeq	r1, r5, #84	; 0x54
    db80:	ldr	r2, [r5, r2]
    db84:	cmp	r2, #0
    db88:	beq	dd20 <gen_wlanhostop+0x14d0>
    db8c:	ldr	r3, [r2, #44]	; 0x2c
    db90:	add	r1, r2, #84	; 0x54
    db94:	cmp	r3, #0
    db98:	mov	r3, #84	; 0x54
    db9c:	movweq	r3, #60	; 0x3c
    dba0:	addeq	r1, r2, #60	; 0x3c
    dba4:	ldr	r2, [r2, r3]
    dba8:	cmp	r2, #0
    dbac:	bne	db8c <gen_wlanhostop+0x133c>
    dbb0:	b	dd20 <gen_wlanhostop+0x14d0>
    dbb4:	add	r1, sp, #8
    dbb8:	str	r0, [r1]
    dbbc:	mov	r1, #0
    dbc0:	mov	r2, #16
    dbc4:	ldr	r0, [r0, #96]	; 0x60
    dbc8:	str	r0, [r5, #96]	; 0x60
    dbcc:	mov	r0, #1
    dbd0:	bl	165d8 <gen_load_a>
    dbd4:	mov	r6, r0
    dbd8:	ldr	r0, [r9, #92]	; 0x5c
    dbdc:	mov	r4, r8
    dbe0:	ldr	r7, [r4, r0, lsl #3]!
    dbe4:	cmp	r7, #207	; 0xcf
    dbe8:	bhi	dc34 <gen_wlanhostop+0x13e4>
    dbec:	add	r1, r0, #1
    dbf0:	cmp	r0, #15
    dbf4:	str	r1, [r9, #92]	; 0x5c
    dbf8:	bge	e9bc <gen_wlanhostop+0x216c>
    dbfc:	mov	r0, #1024	; 0x400
    dc00:	lsl	r7, r0, r1
    dc04:	mov	r0, r7
    dc08:	bl	e34 <malloc@plt>
    dc0c:	cmp	r0, #0
    dc10:	str	r0, [r4, #12]
    dc14:	beq	e9bc <gen_wlanhostop+0x216c>
    dc18:	mov	r1, #0
    dc1c:	mov	r2, r7
    dc20:	add	r4, r4, #8
    dc24:	bl	ea0 <memset@plt>
    dc28:	cmp	r7, #207	; 0xcf
    dc2c:	str	r7, [r4]
    dc30:	bls	e9bc <gen_wlanhostop+0x216c>
    dc34:	sub	r0, r7, #208	; 0xd0
    dc38:	mov	r2, #8
    dc3c:	str	r0, [r4]
    dc40:	ldr	r1, [r4, #4]
    dc44:	adds	r0, r1, r0
    dc48:	mov	r1, #69	; 0x45
    dc4c:	str	r2, [r0, #20]
    dc50:	str	r6, [r0, #4]
    dc54:	str	r1, [r0, #8]
    dc58:	str	r0, [r0, #96]	; 0x60
    dc5c:	beq	dc90 <gen_wlanhostop+0x1440>
    dc60:	ldr	r1, [r5, #96]	; 0x60
    dc64:	mov	r2, r0
    dc68:	ldr	r3, [r2, #44]	; 0x2c
    dc6c:	add	r7, r2, #84	; 0x54
    dc70:	cmp	r3, #0
    dc74:	mov	r3, #84	; 0x54
    dc78:	movweq	r3, #60	; 0x3c
    dc7c:	addeq	r7, r2, #60	; 0x3c
    dc80:	ldr	r2, [r2, r3]
    dc84:	str	r1, [r7]
    dc88:	cmp	r2, #0
    dc8c:	bne	dc68 <gen_wlanhostop+0x1418>
    dc90:	ldr	r1, [r0, #44]	; 0x2c
    dc94:	cmp	r5, #0
    dc98:	clz	r1, r1
    dc9c:	lsr	r1, r1, #5
    dca0:	str	r1, [r0, #44]	; 0x2c
    dca4:	ldr	r2, [r5, #44]	; 0x2c
    dca8:	clz	r1, r2
    dcac:	lsr	r1, r1, #5
    dcb0:	str	r1, [r5, #44]	; 0x2c
    dcb4:	str	r5, [sp, #8]
    dcb8:	beq	dea4 <gen_wlanhostop+0x1654>
    dcbc:	cmp	r2, #0
    dcc0:	mov	r2, #60	; 0x3c
    dcc4:	add	r1, r5, #60	; 0x3c
    dcc8:	movweq	r2, #84	; 0x54
    dccc:	addeq	r1, r5, #84	; 0x54
    dcd0:	ldr	r2, [r5, r2]
    dcd4:	cmp	r2, #0
    dcd8:	beq	dea8 <gen_wlanhostop+0x1658>
    dcdc:	ldr	r3, [r2, #44]	; 0x2c
    dce0:	add	r1, r2, #84	; 0x54
    dce4:	cmp	r3, #0
    dce8:	mov	r3, #84	; 0x54
    dcec:	movweq	r3, #60	; 0x3c
    dcf0:	addeq	r1, r2, #60	; 0x3c
    dcf4:	ldr	r2, [r2, r3]
    dcf8:	cmp	r2, #0
    dcfc:	bne	dcdc <gen_wlanhostop+0x148c>
    dd00:	b	dea8 <gen_wlanhostop+0x1658>
    dd04:	.word	0x000397d8
    dd08:	.word	0x0003970c
    dd0c:	.word	0x00039734
    dd10:	.word	0x00039668
    dd14:	.word	0x000396b0
    dd18:	.word	0x000395e4
    dd1c:	add	r1, sp, #8
    dd20:	str	r0, [r1]
    dd24:	mov	r2, #16
    dd28:	ldr	r1, [r5, #44]	; 0x2c
    dd2c:	clz	r1, r1
    dd30:	lsr	r1, r1, #5
    dd34:	str	r1, [r5, #44]	; 0x2c
    dd38:	mov	r1, #1
    dd3c:	ldr	r0, [r0, #96]	; 0x60
    dd40:	str	r0, [r5, #96]	; 0x60
    dd44:	mov	r0, #1
    dd48:	bl	165d8 <gen_load_a>
    dd4c:	mov	r6, r0
    dd50:	ldr	r0, [r9, #92]	; 0x5c
    dd54:	mov	r4, r8
    dd58:	ldr	r7, [r4, r0, lsl #3]!
    dd5c:	cmp	r7, #207	; 0xcf
    dd60:	bhi	ddac <gen_wlanhostop+0x155c>
    dd64:	add	r1, r0, #1
    dd68:	cmp	r0, #15
    dd6c:	str	r1, [r9, #92]	; 0x5c
    dd70:	bge	e9bc <gen_wlanhostop+0x216c>
    dd74:	mov	r0, #1024	; 0x400
    dd78:	lsl	r7, r0, r1
    dd7c:	mov	r0, r7
    dd80:	bl	e34 <malloc@plt>
    dd84:	cmp	r0, #0
    dd88:	str	r0, [r4, #12]
    dd8c:	beq	e9bc <gen_wlanhostop+0x216c>
    dd90:	mov	r1, #0
    dd94:	mov	r2, r7
    dd98:	add	r4, r4, #8
    dd9c:	bl	ea0 <memset@plt>
    dda0:	cmp	r7, #207	; 0xcf
    dda4:	str	r7, [r4]
    dda8:	bls	e9bc <gen_wlanhostop+0x216c>
    ddac:	sub	r0, r7, #208	; 0xd0
    ddb0:	mov	r2, #6
    ddb4:	mov	r3, sl
    ddb8:	str	r0, [r4]
    ddbc:	ldr	r1, [r4, #4]
    ddc0:	add	r4, r1, r0
    ddc4:	mov	r1, #2
    ddc8:	mov	r0, #69	; 0x45
    ddcc:	str	r1, [r4, #20]
    ddd0:	str	r6, [r4, #4]
    ddd4:	str	r0, [r4, #8]
    ddd8:	mov	r1, #10
    dddc:	ldr	r0, [r4, #44]	; 0x2c
    dde0:	clz	r0, r0
    dde4:	lsr	r0, r0, #5
    dde8:	str	r0, [r4, #44]	; 0x2c
    ddec:	mov	r0, #1
    ddf0:	str	r4, [r4, #96]	; 0x60
    ddf4:	bl	1b00c <gen_bcmp>
    ddf8:	cmp	r4, #0
    ddfc:	beq	de30 <gen_wlanhostop+0x15e0>
    de00:	ldr	r1, [r0, #96]	; 0x60
    de04:	mov	r2, r4
    de08:	ldr	r3, [r2, #44]	; 0x2c
    de0c:	add	r7, r2, #84	; 0x54
    de10:	cmp	r3, #0
    de14:	mov	r3, #84	; 0x54
    de18:	movweq	r3, #60	; 0x3c
    de1c:	addeq	r7, r2, #60	; 0x3c
    de20:	ldr	r2, [r2, r3]
    de24:	str	r1, [r7]
    de28:	cmp	r2, #0
    de2c:	bne	de08 <gen_wlanhostop+0x15b8>
    de30:	ldr	r1, [r4, #44]	; 0x2c
    de34:	cmp	r0, #0
    de38:	clz	r1, r1
    de3c:	lsr	r1, r1, #5
    de40:	str	r1, [r4, #44]	; 0x2c
    de44:	ldr	r2, [r0, #44]	; 0x2c
    de48:	clz	r1, r2
    de4c:	lsr	r1, r1, #5
    de50:	str	r1, [r0, #44]	; 0x2c
    de54:	str	r0, [sp, #8]
    de58:	beq	e02c <gen_wlanhostop+0x17dc>
    de5c:	cmp	r2, #0
    de60:	mov	r2, #60	; 0x3c
    de64:	add	r1, r0, #60	; 0x3c
    de68:	movweq	r2, #84	; 0x54
    de6c:	addeq	r1, r0, #84	; 0x54
    de70:	ldr	r2, [r0, r2]
    de74:	cmp	r2, #0
    de78:	beq	e030 <gen_wlanhostop+0x17e0>
    de7c:	ldr	r3, [r2, #44]	; 0x2c
    de80:	add	r1, r2, #84	; 0x54
    de84:	cmp	r3, #0
    de88:	mov	r3, #84	; 0x54
    de8c:	movweq	r3, #60	; 0x3c
    de90:	addeq	r1, r2, #60	; 0x3c
    de94:	ldr	r2, [r2, r3]
    de98:	cmp	r2, #0
    de9c:	bne	de7c <gen_wlanhostop+0x162c>
    dea0:	b	e030 <gen_wlanhostop+0x17e0>
    dea4:	add	r1, sp, #8
    dea8:	str	r0, [r1]
    deac:	mov	r2, #16
    deb0:	ldr	r1, [r5, #44]	; 0x2c
    deb4:	clz	r1, r1
    deb8:	lsr	r1, r1, #5
    debc:	str	r1, [r5, #44]	; 0x2c
    dec0:	mov	r1, #0
    dec4:	ldr	r0, [r0, #96]	; 0x60
    dec8:	str	r0, [r5, #96]	; 0x60
    decc:	mov	r0, #1
    ded0:	bl	165d8 <gen_load_a>
    ded4:	mov	r6, r0
    ded8:	ldr	r0, [r9, #92]	; 0x5c
    dedc:	mov	r4, r8
    dee0:	ldr	r7, [r4, r0, lsl #3]!
    dee4:	cmp	r7, #207	; 0xcf
    dee8:	bhi	df34 <gen_wlanhostop+0x16e4>
    deec:	add	r1, r0, #1
    def0:	cmp	r0, #15
    def4:	str	r1, [r9, #92]	; 0x5c
    def8:	bge	e9bc <gen_wlanhostop+0x216c>
    defc:	mov	r0, #1024	; 0x400
    df00:	lsl	r7, r0, r1
    df04:	mov	r0, r7
    df08:	bl	e34 <malloc@plt>
    df0c:	cmp	r0, #0
    df10:	str	r0, [r4, #12]
    df14:	beq	e9bc <gen_wlanhostop+0x216c>
    df18:	mov	r1, #0
    df1c:	mov	r2, r7
    df20:	add	r4, r4, #8
    df24:	bl	ea0 <memset@plt>
    df28:	cmp	r7, #207	; 0xcf
    df2c:	str	r7, [r4]
    df30:	bls	e9bc <gen_wlanhostop+0x216c>
    df34:	sub	r0, r7, #208	; 0xd0
    df38:	mov	r2, #6
    df3c:	mov	r3, sl
    df40:	str	r0, [r4]
    df44:	ldr	r1, [r4, #4]
    df48:	add	r4, r1, r0
    df4c:	mov	r1, #8
    df50:	mov	r0, #69	; 0x45
    df54:	str	r1, [r4, #20]
    df58:	str	r6, [r4, #4]
    df5c:	str	r0, [r4, #8]
    df60:	mov	r1, #4
    df64:	ldr	r0, [r4, #44]	; 0x2c
    df68:	clz	r0, r0
    df6c:	lsr	r0, r0, #5
    df70:	str	r0, [r4, #44]	; 0x2c
    df74:	mov	r0, #1
    df78:	str	r4, [r4, #96]	; 0x60
    df7c:	bl	1b00c <gen_bcmp>
    df80:	cmp	r4, #0
    df84:	beq	dfb8 <gen_wlanhostop+0x1768>
    df88:	ldr	r1, [r0, #96]	; 0x60
    df8c:	mov	r2, r4
    df90:	ldr	r3, [r2, #44]	; 0x2c
    df94:	add	r7, r2, #84	; 0x54
    df98:	cmp	r3, #0
    df9c:	mov	r3, #84	; 0x54
    dfa0:	movweq	r3, #60	; 0x3c
    dfa4:	addeq	r7, r2, #60	; 0x3c
    dfa8:	ldr	r2, [r2, r3]
    dfac:	str	r1, [r7]
    dfb0:	cmp	r2, #0
    dfb4:	bne	df90 <gen_wlanhostop+0x1740>
    dfb8:	ldr	r1, [r4, #44]	; 0x2c
    dfbc:	cmp	r0, #0
    dfc0:	clz	r1, r1
    dfc4:	lsr	r1, r1, #5
    dfc8:	str	r1, [r4, #44]	; 0x2c
    dfcc:	ldr	r2, [r0, #44]	; 0x2c
    dfd0:	clz	r1, r2
    dfd4:	lsr	r1, r1, #5
    dfd8:	str	r1, [r0, #44]	; 0x2c
    dfdc:	str	r0, [sp, #8]
    dfe0:	beq	e0dc <gen_wlanhostop+0x188c>
    dfe4:	cmp	r2, #0
    dfe8:	mov	r2, #60	; 0x3c
    dfec:	add	r1, r0, #60	; 0x3c
    dff0:	movweq	r2, #84	; 0x54
    dff4:	addeq	r1, r0, #84	; 0x54
    dff8:	ldr	r2, [r0, r2]
    dffc:	cmp	r2, #0
    e000:	beq	e0e0 <gen_wlanhostop+0x1890>
    e004:	ldr	r3, [r2, #44]	; 0x2c
    e008:	add	r1, r2, #84	; 0x54
    e00c:	cmp	r3, #0
    e010:	mov	r3, #84	; 0x54
    e014:	movweq	r3, #60	; 0x3c
    e018:	addeq	r1, r2, #60	; 0x3c
    e01c:	ldr	r2, [r2, r3]
    e020:	cmp	r2, #0
    e024:	bne	e004 <gen_wlanhostop+0x17b4>
    e028:	b	e0e0 <gen_wlanhostop+0x1890>
    e02c:	add	r1, sp, #8
    e030:	str	r4, [r1]
    e034:	ldr	r1, [r0, #44]	; 0x2c
    e038:	clz	r2, r1
    e03c:	cmp	r1, #0
    e040:	lsr	r2, r2, #5
    e044:	movwne	r1, #1
    e048:	cmp	r0, #0
    e04c:	str	r2, [r0, #44]	; 0x2c
    e050:	ldr	r2, [r4, #96]	; 0x60
    e054:	str	r1, [r0, #44]	; 0x2c
    e058:	str	r2, [r0, #96]	; 0x60
    e05c:	beq	e098 <gen_wlanhostop+0x1848>
    e060:	ldr	r2, [r5, #96]	; 0x60
    e064:	mov	r3, r0
    e068:	cmp	r1, #0
    e06c:	mov	r1, #84	; 0x54
    e070:	add	r7, r3, #84	; 0x54
    e074:	movweq	r1, #60	; 0x3c
    e078:	addeq	r7, r3, #60	; 0x3c
    e07c:	ldr	r3, [r3, r1]
    e080:	str	r2, [r7]
    e084:	cmp	r3, #0
    e088:	beq	e094 <gen_wlanhostop+0x1844>
    e08c:	ldr	r1, [r3, #44]	; 0x2c
    e090:	b	e068 <gen_wlanhostop+0x1818>
    e094:	ldr	r1, [r0, #44]	; 0x2c
    e098:	clz	r1, r1
    e09c:	cmp	r5, #0
    e0a0:	lsr	r1, r1, #5
    e0a4:	str	r1, [r0, #44]	; 0x2c
    e0a8:	str	r5, [sp, #8]
    e0ac:	beq	e18c <gen_wlanhostop+0x193c>
    e0b0:	mov	r2, r5
    e0b4:	ldr	r3, [r2, #44]	; 0x2c
    e0b8:	add	r1, r2, #84	; 0x54
    e0bc:	cmp	r3, #0
    e0c0:	mov	r3, #84	; 0x54
    e0c4:	movweq	r3, #60	; 0x3c
    e0c8:	addeq	r1, r2, #60	; 0x3c
    e0cc:	ldr	r2, [r2, r3]
    e0d0:	cmp	r2, #0
    e0d4:	bne	e0b4 <gen_wlanhostop+0x1864>
    e0d8:	b	e190 <gen_wlanhostop+0x1940>
    e0dc:	add	r1, sp, #8
    e0e0:	str	r4, [r1]
    e0e4:	ldr	r1, [r0, #44]	; 0x2c
    e0e8:	clz	r2, r1
    e0ec:	cmp	r1, #0
    e0f0:	lsr	r2, r2, #5
    e0f4:	movwne	r1, #1
    e0f8:	cmp	r0, #0
    e0fc:	str	r2, [r0, #44]	; 0x2c
    e100:	ldr	r2, [r4, #96]	; 0x60
    e104:	str	r1, [r0, #44]	; 0x2c
    e108:	str	r2, [r0, #96]	; 0x60
    e10c:	beq	e148 <gen_wlanhostop+0x18f8>
    e110:	ldr	r2, [r5, #96]	; 0x60
    e114:	mov	r3, r0
    e118:	cmp	r1, #0
    e11c:	mov	r1, #84	; 0x54
    e120:	add	r7, r3, #84	; 0x54
    e124:	movweq	r1, #60	; 0x3c
    e128:	addeq	r7, r3, #60	; 0x3c
    e12c:	ldr	r3, [r3, r1]
    e130:	str	r2, [r7]
    e134:	cmp	r3, #0
    e138:	beq	e144 <gen_wlanhostop+0x18f4>
    e13c:	ldr	r1, [r3, #44]	; 0x2c
    e140:	b	e118 <gen_wlanhostop+0x18c8>
    e144:	ldr	r1, [r0, #44]	; 0x2c
    e148:	clz	r1, r1
    e14c:	cmp	r5, #0
    e150:	lsr	r1, r1, #5
    e154:	str	r1, [r0, #44]	; 0x2c
    e158:	str	r5, [sp, #8]
    e15c:	beq	e2dc <gen_wlanhostop+0x1a8c>
    e160:	mov	r2, r5
    e164:	ldr	r3, [r2, #44]	; 0x2c
    e168:	add	r1, r2, #84	; 0x54
    e16c:	cmp	r3, #0
    e170:	mov	r3, #84	; 0x54
    e174:	movweq	r3, #60	; 0x3c
    e178:	addeq	r1, r2, #60	; 0x3c
    e17c:	ldr	r2, [r2, r3]
    e180:	cmp	r2, #0
    e184:	bne	e164 <gen_wlanhostop+0x1914>
    e188:	b	e2e0 <gen_wlanhostop+0x1a90>
    e18c:	add	r1, sp, #8
    e190:	str	r0, [r1]
    e194:	mov	r1, #0
    e198:	mov	r2, #16
    e19c:	ldr	r0, [r0, #96]	; 0x60
    e1a0:	str	r0, [r5, #96]	; 0x60
    e1a4:	mov	r0, #1
    e1a8:	bl	165d8 <gen_load_a>
    e1ac:	mov	r6, r0
    e1b0:	ldr	r0, [r9, #92]	; 0x5c
    e1b4:	mov	r4, r8
    e1b8:	ldr	r7, [r4, r0, lsl #3]!
    e1bc:	cmp	r7, #207	; 0xcf
    e1c0:	bhi	e20c <gen_wlanhostop+0x19bc>
    e1c4:	add	r1, r0, #1
    e1c8:	cmp	r0, #15
    e1cc:	str	r1, [r9, #92]	; 0x5c
    e1d0:	bge	e9bc <gen_wlanhostop+0x216c>
    e1d4:	mov	r0, #1024	; 0x400
    e1d8:	lsl	r7, r0, r1
    e1dc:	mov	r0, r7
    e1e0:	bl	e34 <malloc@plt>
    e1e4:	cmp	r0, #0
    e1e8:	str	r0, [r4, #12]
    e1ec:	beq	e9bc <gen_wlanhostop+0x216c>
    e1f0:	mov	r1, #0
    e1f4:	mov	r2, r7
    e1f8:	add	r4, r4, #8
    e1fc:	bl	ea0 <memset@plt>
    e200:	cmp	r7, #207	; 0xcf
    e204:	str	r7, [r4]
    e208:	bls	e9bc <gen_wlanhostop+0x216c>
    e20c:	sub	r0, r7, #208	; 0xd0
    e210:	mov	r2, #8
    e214:	str	r0, [r4]
    e218:	ldr	r1, [r4, #4]
    e21c:	adds	r0, r1, r0
    e220:	mov	r1, #69	; 0x45
    e224:	str	r2, [r0, #20]
    e228:	str	r6, [r0, #4]
    e22c:	str	r1, [r0, #8]
    e230:	str	r0, [r0, #96]	; 0x60
    e234:	beq	e268 <gen_wlanhostop+0x1a18>
    e238:	ldr	r1, [r5, #96]	; 0x60
    e23c:	mov	r2, r0
    e240:	ldr	r3, [r2, #44]	; 0x2c
    e244:	add	r7, r2, #84	; 0x54
    e248:	cmp	r3, #0
    e24c:	mov	r3, #84	; 0x54
    e250:	movweq	r3, #60	; 0x3c
    e254:	addeq	r7, r2, #60	; 0x3c
    e258:	ldr	r2, [r2, r3]
    e25c:	str	r1, [r7]
    e260:	cmp	r2, #0
    e264:	bne	e240 <gen_wlanhostop+0x19f0>
    e268:	ldr	r1, [r0, #44]	; 0x2c
    e26c:	cmp	r5, #0
    e270:	clz	r1, r1
    e274:	lsr	r1, r1, #5
    e278:	str	r1, [r0, #44]	; 0x2c
    e27c:	ldr	r2, [r5, #44]	; 0x2c
    e280:	clz	r1, r2
    e284:	lsr	r1, r1, #5
    e288:	str	r1, [r5, #44]	; 0x2c
    e28c:	str	r5, [sp, #8]
    e290:	beq	e43c <gen_wlanhostop+0x1bec>
    e294:	cmp	r2, #0
    e298:	mov	r2, #60	; 0x3c
    e29c:	add	r1, r5, #60	; 0x3c
    e2a0:	movweq	r2, #84	; 0x54
    e2a4:	addeq	r1, r5, #84	; 0x54
    e2a8:	ldr	r2, [r5, r2]
    e2ac:	cmp	r2, #0
    e2b0:	beq	e440 <gen_wlanhostop+0x1bf0>
    e2b4:	ldr	r3, [r2, #44]	; 0x2c
    e2b8:	add	r1, r2, #84	; 0x54
    e2bc:	cmp	r3, #0
    e2c0:	mov	r3, #84	; 0x54
    e2c4:	movweq	r3, #60	; 0x3c
    e2c8:	addeq	r1, r2, #60	; 0x3c
    e2cc:	ldr	r2, [r2, r3]
    e2d0:	cmp	r2, #0
    e2d4:	bne	e2b4 <gen_wlanhostop+0x1a64>
    e2d8:	b	e440 <gen_wlanhostop+0x1bf0>
    e2dc:	add	r1, sp, #8
    e2e0:	str	r0, [r1]
    e2e4:	mov	r1, #0
    e2e8:	mov	r2, #16
    e2ec:	ldr	r0, [r0, #96]	; 0x60
    e2f0:	str	r0, [r5, #96]	; 0x60
    e2f4:	mov	r0, #1
    e2f8:	bl	165d8 <gen_load_a>
    e2fc:	mov	r4, r0
    e300:	ldr	r0, [r9, #92]	; 0x5c
    e304:	ldr	r6, [r8, r0, lsl #3]!
    e308:	cmp	r6, #207	; 0xcf
    e30c:	bhi	e358 <gen_wlanhostop+0x1b08>
    e310:	add	r1, r0, #1
    e314:	cmp	r0, #15
    e318:	str	r1, [r9, #92]	; 0x5c
    e31c:	bge	e9bc <gen_wlanhostop+0x216c>
    e320:	mov	r0, #1024	; 0x400
    e324:	lsl	r6, r0, r1
    e328:	mov	r0, r6
    e32c:	bl	e34 <malloc@plt>
    e330:	cmp	r0, #0
    e334:	str	r0, [r8, #12]
    e338:	beq	e9bc <gen_wlanhostop+0x216c>
    e33c:	mov	r1, #0
    e340:	mov	r2, r6
    e344:	add	r8, r8, #8
    e348:	bl	ea0 <memset@plt>
    e34c:	cmp	r6, #207	; 0xcf
    e350:	str	r6, [r8]
    e354:	bls	e9bc <gen_wlanhostop+0x216c>
    e358:	sub	r0, r6, #208	; 0xd0
    e35c:	mov	r2, #4
    e360:	str	r0, [r8]
    e364:	ldr	r1, [r8, #4]
    e368:	adds	r0, r1, r0
    e36c:	mov	r1, #69	; 0x45
    e370:	str	r2, [r0, #20]
    e374:	str	r4, [r0, #4]
    e378:	str	r1, [r0, #8]
    e37c:	ldr	r1, [r0, #44]	; 0x2c
    e380:	clz	r1, r1
    e384:	lsr	r1, r1, #5
    e388:	str	r1, [r0, #44]	; 0x2c
    e38c:	str	r0, [r0, #96]	; 0x60
    e390:	beq	e3c8 <gen_wlanhostop+0x1b78>
    e394:	ldr	r1, [r5, #96]	; 0x60
    e398:	mov	r2, r0
    e39c:	ldr	r3, [r2, #44]	; 0x2c
    e3a0:	add	r7, r2, #84	; 0x54
    e3a4:	cmp	r3, #0
    e3a8:	mov	r3, #84	; 0x54
    e3ac:	movweq	r3, #60	; 0x3c
    e3b0:	addeq	r7, r2, #60	; 0x3c
    e3b4:	ldr	r2, [r2, r3]
    e3b8:	str	r1, [r7]
    e3bc:	cmp	r2, #0
    e3c0:	bne	e39c <gen_wlanhostop+0x1b4c>
    e3c4:	ldr	r1, [r0, #44]	; 0x2c
    e3c8:	clz	r1, r1
    e3cc:	cmp	r5, #0
    e3d0:	lsr	r1, r1, #5
    e3d4:	str	r1, [r0, #44]	; 0x2c
    e3d8:	ldr	r2, [r5, #44]	; 0x2c
    e3dc:	clz	r1, r2
    e3e0:	lsr	r1, r1, #5
    e3e4:	str	r1, [r5, #44]	; 0x2c
    e3e8:	str	r5, [sp, #8]
    e3ec:	beq	e7dc <gen_wlanhostop+0x1f8c>
    e3f0:	cmp	r2, #0
    e3f4:	mov	r2, #60	; 0x3c
    e3f8:	add	r1, r5, #60	; 0x3c
    e3fc:	movweq	r2, #84	; 0x54
    e400:	addeq	r1, r5, #84	; 0x54
    e404:	ldr	r2, [r5, r2]
    e408:	cmp	r2, #0
    e40c:	beq	e7e0 <gen_wlanhostop+0x1f90>
    e410:	ldr	r3, [r2, #44]	; 0x2c
    e414:	add	r1, r2, #84	; 0x54
    e418:	cmp	r3, #0
    e41c:	mov	r3, #84	; 0x54
    e420:	movweq	r3, #60	; 0x3c
    e424:	addeq	r1, r2, #60	; 0x3c
    e428:	ldr	r2, [r2, r3]
    e42c:	cmp	r2, #0
    e430:	bne	e410 <gen_wlanhostop+0x1bc0>
    e434:	b	e7e0 <gen_wlanhostop+0x1f90>
    e438:	.word	0x0003906c
    e43c:	add	r1, sp, #8
    e440:	str	r0, [r1]
    e444:	mov	r2, #16
    e448:	ldr	r1, [r5, #44]	; 0x2c
    e44c:	clz	r1, r1
    e450:	lsr	r1, r1, #5
    e454:	str	r1, [r5, #44]	; 0x2c
    e458:	mov	r1, #0
    e45c:	ldr	r0, [r0, #96]	; 0x60
    e460:	str	r0, [r5, #96]	; 0x60
    e464:	mov	r0, #1
    e468:	bl	165d8 <gen_load_a>
    e46c:	mov	r6, r0
    e470:	ldr	r0, [r9, #92]	; 0x5c
    e474:	mov	r4, r8
    e478:	ldr	r7, [r4, r0, lsl #3]!
    e47c:	cmp	r7, #207	; 0xcf
    e480:	bhi	e4cc <gen_wlanhostop+0x1c7c>
    e484:	add	r1, r0, #1
    e488:	cmp	r0, #15
    e48c:	str	r1, [r9, #92]	; 0x5c
    e490:	bge	e9bc <gen_wlanhostop+0x216c>
    e494:	mov	r0, #1024	; 0x400
    e498:	lsl	r7, r0, r1
    e49c:	mov	r0, r7
    e4a0:	bl	e34 <malloc@plt>
    e4a4:	cmp	r0, #0
    e4a8:	str	r0, [r4, #12]
    e4ac:	beq	e9bc <gen_wlanhostop+0x216c>
    e4b0:	mov	r1, #0
    e4b4:	mov	r2, r7
    e4b8:	add	r4, r4, #8
    e4bc:	bl	ea0 <memset@plt>
    e4c0:	cmp	r7, #207	; 0xcf
    e4c4:	str	r7, [r4]
    e4c8:	bls	e9bc <gen_wlanhostop+0x216c>
    e4cc:	sub	r0, r7, #208	; 0xd0
    e4d0:	mov	r2, #6
    e4d4:	mov	r3, sl
    e4d8:	str	r0, [r4]
    e4dc:	ldr	r1, [r4, #4]
    e4e0:	add	r4, r1, r0
    e4e4:	mov	r1, #8
    e4e8:	mov	r0, #69	; 0x45
    e4ec:	str	r1, [r4, #20]
    e4f0:	str	r6, [r4, #4]
    e4f4:	str	r0, [r4, #8]
    e4f8:	mov	r1, #10
    e4fc:	ldr	r0, [r4, #44]	; 0x2c
    e500:	clz	r0, r0
    e504:	lsr	r0, r0, #5
    e508:	str	r0, [r4, #44]	; 0x2c
    e50c:	mov	r0, #1
    e510:	str	r4, [r4, #96]	; 0x60
    e514:	bl	1b00c <gen_bcmp>
    e518:	cmp	r4, #0
    e51c:	beq	e550 <gen_wlanhostop+0x1d00>
    e520:	ldr	r1, [r0, #96]	; 0x60
    e524:	mov	r2, r4
    e528:	ldr	r3, [r2, #44]	; 0x2c
    e52c:	add	r7, r2, #84	; 0x54
    e530:	cmp	r3, #0
    e534:	mov	r3, #84	; 0x54
    e538:	movweq	r3, #60	; 0x3c
    e53c:	addeq	r7, r2, #60	; 0x3c
    e540:	ldr	r2, [r2, r3]
    e544:	str	r1, [r7]
    e548:	cmp	r2, #0
    e54c:	bne	e528 <gen_wlanhostop+0x1cd8>
    e550:	ldr	r1, [r4, #44]	; 0x2c
    e554:	cmp	r0, #0
    e558:	clz	r1, r1
    e55c:	lsr	r1, r1, #5
    e560:	str	r1, [r4, #44]	; 0x2c
    e564:	ldr	r2, [r0, #44]	; 0x2c
    e568:	clz	r1, r2
    e56c:	lsr	r1, r1, #5
    e570:	str	r1, [r0, #44]	; 0x2c
    e574:	str	r0, [sp, #8]
    e578:	beq	e5c8 <gen_wlanhostop+0x1d78>
    e57c:	cmp	r2, #0
    e580:	mov	r2, #60	; 0x3c
    e584:	add	r1, r0, #60	; 0x3c
    e588:	movweq	r2, #84	; 0x54
    e58c:	addeq	r1, r0, #84	; 0x54
    e590:	ldr	r2, [r0, r2]
    e594:	cmp	r2, #0
    e598:	beq	e5cc <gen_wlanhostop+0x1d7c>
    e59c:	ldr	r3, [r2, #44]	; 0x2c
    e5a0:	add	r1, r2, #84	; 0x54
    e5a4:	cmp	r3, #0
    e5a8:	mov	r3, #84	; 0x54
    e5ac:	movweq	r3, #60	; 0x3c
    e5b0:	addeq	r1, r2, #60	; 0x3c
    e5b4:	ldr	r2, [r2, r3]
    e5b8:	cmp	r2, #0
    e5bc:	bne	e59c <gen_wlanhostop+0x1d4c>
    e5c0:	b	e5cc <gen_wlanhostop+0x1d7c>
    e5c4:	.word	0x00038edc
    e5c8:	add	r1, sp, #8
    e5cc:	str	r4, [r1]
    e5d0:	ldr	r1, [r0, #44]	; 0x2c
    e5d4:	clz	r2, r1
    e5d8:	cmp	r1, #0
    e5dc:	lsr	r2, r2, #5
    e5e0:	movwne	r1, #1
    e5e4:	cmp	r0, #0
    e5e8:	str	r2, [r0, #44]	; 0x2c
    e5ec:	ldr	r2, [r4, #96]	; 0x60
    e5f0:	str	r1, [r0, #44]	; 0x2c
    e5f4:	str	r2, [r0, #96]	; 0x60
    e5f8:	beq	e634 <gen_wlanhostop+0x1de4>
    e5fc:	ldr	r2, [r5, #96]	; 0x60
    e600:	mov	r3, r0
    e604:	cmp	r1, #0
    e608:	mov	r1, #84	; 0x54
    e60c:	add	r7, r3, #84	; 0x54
    e610:	movweq	r1, #60	; 0x3c
    e614:	addeq	r7, r3, #60	; 0x3c
    e618:	ldr	r3, [r3, r1]
    e61c:	str	r2, [r7]
    e620:	cmp	r3, #0
    e624:	beq	e630 <gen_wlanhostop+0x1de0>
    e628:	ldr	r1, [r3, #44]	; 0x2c
    e62c:	b	e604 <gen_wlanhostop+0x1db4>
    e630:	ldr	r1, [r0, #44]	; 0x2c
    e634:	clz	r1, r1
    e638:	cmp	r5, #0
    e63c:	lsr	r1, r1, #5
    e640:	str	r1, [r0, #44]	; 0x2c
    e644:	str	r5, [sp, #8]
    e648:	beq	e680 <gen_wlanhostop+0x1e30>
    e64c:	mov	r2, r5
    e650:	ldr	r3, [r2, #44]	; 0x2c
    e654:	add	r1, r2, #84	; 0x54
    e658:	cmp	r3, #0
    e65c:	mov	r3, #84	; 0x54
    e660:	movweq	r3, #60	; 0x3c
    e664:	addeq	r1, r2, #60	; 0x3c
    e668:	ldr	r2, [r2, r3]
    e66c:	cmp	r2, #0
    e670:	bne	e650 <gen_wlanhostop+0x1e00>
    e674:	b	e684 <gen_wlanhostop+0x1e34>
    e678:	.word	0x00038dd4
    e67c:	.word	0x00038d44
    e680:	add	r1, sp, #8
    e684:	str	r0, [r1]
    e688:	mov	r1, #0
    e68c:	mov	r2, #16
    e690:	ldr	r0, [r0, #96]	; 0x60
    e694:	str	r0, [r5, #96]	; 0x60
    e698:	mov	r0, #1
    e69c:	bl	165d8 <gen_load_a>
    e6a0:	mov	r4, r0
    e6a4:	ldr	r0, [r9, #92]	; 0x5c
    e6a8:	ldr	r6, [r8, r0, lsl #3]!
    e6ac:	cmp	r6, #207	; 0xcf
    e6b0:	bhi	e6fc <gen_wlanhostop+0x1eac>
    e6b4:	add	r1, r0, #1
    e6b8:	cmp	r0, #15
    e6bc:	str	r1, [r9, #92]	; 0x5c
    e6c0:	bge	e9bc <gen_wlanhostop+0x216c>
    e6c4:	mov	r0, #1024	; 0x400
    e6c8:	lsl	r6, r0, r1
    e6cc:	mov	r0, r6
    e6d0:	bl	e34 <malloc@plt>
    e6d4:	cmp	r0, #0
    e6d8:	str	r0, [r8, #12]
    e6dc:	beq	e9bc <gen_wlanhostop+0x216c>
    e6e0:	mov	r1, #0
    e6e4:	mov	r2, r6
    e6e8:	add	r8, r8, #8
    e6ec:	bl	ea0 <memset@plt>
    e6f0:	cmp	r6, #207	; 0xcf
    e6f4:	str	r6, [r8]
    e6f8:	bls	e9bc <gen_wlanhostop+0x216c>
    e6fc:	sub	r0, r6, #208	; 0xd0
    e700:	mov	r2, #4
    e704:	str	r0, [r8]
    e708:	ldr	r1, [r8, #4]
    e70c:	adds	r0, r1, r0
    e710:	mov	r1, #69	; 0x45
    e714:	str	r2, [r0, #20]
    e718:	str	r4, [r0, #4]
    e71c:	str	r1, [r0, #8]
    e720:	ldr	r1, [r0, #44]	; 0x2c
    e724:	clz	r1, r1
    e728:	lsr	r1, r1, #5
    e72c:	str	r1, [r0, #44]	; 0x2c
    e730:	str	r0, [r0, #96]	; 0x60
    e734:	beq	e76c <gen_wlanhostop+0x1f1c>
    e738:	ldr	r1, [r5, #96]	; 0x60
    e73c:	mov	r2, r0
    e740:	ldr	r3, [r2, #44]	; 0x2c
    e744:	add	r7, r2, #84	; 0x54
    e748:	cmp	r3, #0
    e74c:	mov	r3, #84	; 0x54
    e750:	movweq	r3, #60	; 0x3c
    e754:	addeq	r7, r2, #60	; 0x3c
    e758:	ldr	r2, [r2, r3]
    e75c:	str	r1, [r7]
    e760:	cmp	r2, #0
    e764:	bne	e740 <gen_wlanhostop+0x1ef0>
    e768:	ldr	r1, [r0, #44]	; 0x2c
    e76c:	clz	r1, r1
    e770:	cmp	r5, #0
    e774:	lsr	r1, r1, #5
    e778:	str	r1, [r0, #44]	; 0x2c
    e77c:	ldr	r2, [r5, #44]	; 0x2c
    e780:	clz	r1, r2
    e784:	lsr	r1, r1, #5
    e788:	str	r1, [r5, #44]	; 0x2c
    e78c:	str	r5, [sp, #8]
    e790:	beq	e7dc <gen_wlanhostop+0x1f8c>
    e794:	cmp	r2, #0
    e798:	mov	r2, #60	; 0x3c
    e79c:	add	r1, r5, #60	; 0x3c
    e7a0:	movweq	r2, #84	; 0x54
    e7a4:	addeq	r1, r5, #84	; 0x54
    e7a8:	ldr	r2, [r5, r2]
    e7ac:	cmp	r2, #0
    e7b0:	beq	e7e0 <gen_wlanhostop+0x1f90>
    e7b4:	ldr	r3, [r2, #44]	; 0x2c
    e7b8:	add	r1, r2, #84	; 0x54
    e7bc:	cmp	r3, #0
    e7c0:	mov	r3, #84	; 0x54
    e7c4:	movweq	r3, #60	; 0x3c
    e7c8:	addeq	r1, r2, #60	; 0x3c
    e7cc:	ldr	r2, [r2, r3]
    e7d0:	cmp	r2, #0
    e7d4:	bne	e7b4 <gen_wlanhostop+0x1f64>
    e7d8:	b	e7e0 <gen_wlanhostop+0x1f90>
    e7dc:	add	r1, sp, #8
    e7e0:	str	r0, [r1]
    e7e4:	ldr	r1, [r5, #44]	; 0x2c
    e7e8:	clz	r1, r1
    e7ec:	lsr	r1, r1, #5
    e7f0:	str	r1, [r5, #44]	; 0x2c
    e7f4:	ldr	r0, [r0, #96]	; 0x60
    e7f8:	str	r0, [r5, #96]	; 0x60
    e7fc:	mov	r0, r5
    e800:	sub	sp, fp, #28
    e804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e808:	add	r1, sp, #8
    e80c:	str	r5, [r1]
    e810:	cmp	r7, #0
    e814:	ldr	r0, [r4, #44]	; 0x2c
    e818:	clz	r0, r0
    e81c:	lsr	r0, r0, #5
    e820:	str	r0, [r4, #44]	; 0x2c
    e824:	ldr	r0, [r5, #96]	; 0x60
    e828:	str	r0, [r4, #96]	; 0x60
    e82c:	ldr	r0, [r7, #44]	; 0x2c
    e830:	clz	r0, r0
    e834:	lsr	r0, r0, #5
    e838:	str	r0, [r7, #44]	; 0x2c
    e83c:	beq	e87c <gen_wlanhostop+0x202c>
    e840:	ldr	r1, [r4, #96]	; 0x60
    e844:	mov	r2, r7
    e848:	cmp	r0, #0
    e84c:	mov	r0, #84	; 0x54
    e850:	add	r6, r2, #84	; 0x54
    e854:	movweq	r0, #60	; 0x3c
    e858:	addeq	r6, r2, #60	; 0x3c
    e85c:	ldr	r2, [r2, r0]
    e860:	str	r1, [r6]
    e864:	cmp	r2, #0
    e868:	beq	e878 <gen_wlanhostop+0x2028>
    e86c:	ldr	r0, [r2, #44]	; 0x2c
    e870:	b	e848 <gen_wlanhostop+0x1ff8>
    e874:	.word	0x00038c3c
    e878:	ldr	r0, [r7, #44]	; 0x2c
    e87c:	clz	r0, r0
    e880:	cmp	r4, #0
    e884:	lsr	r0, r0, #5
    e888:	str	r0, [r7, #44]	; 0x2c
    e88c:	str	r4, [sp, #8]
    e890:	beq	e8c0 <gen_wlanhostop+0x2070>
    e894:	mov	r1, r4
    e898:	ldr	r2, [r1, #44]	; 0x2c
    e89c:	add	r0, r1, #84	; 0x54
    e8a0:	cmp	r2, #0
    e8a4:	mov	r2, #84	; 0x54
    e8a8:	movweq	r2, #60	; 0x3c
    e8ac:	addeq	r0, r1, #60	; 0x3c
    e8b0:	ldr	r1, [r1, r2]
    e8b4:	cmp	r1, #0
    e8b8:	bne	e898 <gen_wlanhostop+0x2048>
    e8bc:	b	e8c4 <gen_wlanhostop+0x2074>
    e8c0:	add	r0, sp, #8
    e8c4:	str	r7, [r0]
    e8c8:	mov	r1, #10
    e8cc:	mov	r2, #6
    e8d0:	ldr	r0, [r7, #96]	; 0x60
    e8d4:	str	r0, [r4, #96]	; 0x60
    e8d8:	mov	r0, #1
    e8dc:	bl	1b00c <gen_bcmp>
    e8e0:	mov	r5, r0
    e8e4:	cmp	r4, #0
    e8e8:	beq	e91c <gen_wlanhostop+0x20cc>
    e8ec:	ldr	r0, [r5, #96]	; 0x60
    e8f0:	mov	r1, r4
    e8f4:	ldr	r2, [r1, #44]	; 0x2c
    e8f8:	add	r3, r1, #84	; 0x54
    e8fc:	cmp	r2, #0
    e900:	mov	r2, #84	; 0x54
    e904:	movweq	r2, #60	; 0x3c
    e908:	addeq	r3, r1, #60	; 0x3c
    e90c:	ldr	r1, [r1, r2]
    e910:	str	r0, [r3]
    e914:	cmp	r1, #0
    e918:	bne	e8f4 <gen_wlanhostop+0x20a4>
    e91c:	ldr	r0, [r4, #44]	; 0x2c
    e920:	cmp	r5, #0
    e924:	clz	r0, r0
    e928:	lsr	r0, r0, #5
    e92c:	str	r0, [r4, #44]	; 0x2c
    e930:	ldr	r1, [r5, #44]	; 0x2c
    e934:	clz	r0, r1
    e938:	lsr	r0, r0, #5
    e93c:	str	r0, [r5, #44]	; 0x2c
    e940:	str	r5, [sp, #8]
    e944:	beq	e990 <gen_wlanhostop+0x2140>
    e948:	cmp	r1, #0
    e94c:	mov	r1, #60	; 0x3c
    e950:	add	r0, r5, #60	; 0x3c
    e954:	movweq	r1, #84	; 0x54
    e958:	addeq	r0, r5, #84	; 0x54
    e95c:	ldr	r1, [r5, r1]
    e960:	cmp	r1, #0
    e964:	beq	e994 <gen_wlanhostop+0x2144>
    e968:	ldr	r2, [r1, #44]	; 0x2c
    e96c:	add	r0, r1, #84	; 0x54
    e970:	cmp	r2, #0
    e974:	mov	r2, #84	; 0x54
    e978:	movweq	r2, #60	; 0x3c
    e97c:	addeq	r0, r1, #60	; 0x3c
    e980:	ldr	r1, [r1, r2]
    e984:	cmp	r1, #0
    e988:	bne	e968 <gen_wlanhostop+0x2118>
    e98c:	b	e994 <gen_wlanhostop+0x2144>
    e990:	add	r0, sp, #8
    e994:	str	r4, [r0]
    e998:	ldr	r0, [r5, #44]	; 0x2c
    e99c:	clz	r0, r0
    e9a0:	lsr	r0, r0, #5
    e9a4:	str	r0, [r5, #44]	; 0x2c
    e9a8:	ldr	r0, [r4, #96]	; 0x60
    e9ac:	str	r0, [r5, #96]	; 0x60
    e9b0:	mov	r0, r5
    e9b4:	sub	sp, fp, #28
    e9b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e9bc:	ldr	r0, [pc, #8]	; e9cc <gen_wlanhostop+0x217c>
    e9c0:	add	r0, pc, r0
    e9c4:	bl	214c <sf_bpf_error>
    e9c8:	bl	f24 <abort@plt>
    e9cc:	.word	0x0001b0a4

0000e9d0 <gen_ipfchostop>:
    e9d0:	push	{r4, r5, fp, lr}
    e9d4:	add	fp, sp, #8
    e9d8:	sub	sp, sp, #8
    e9dc:	cmp	r1, #4
    e9e0:	bhi	ec08 <gen_ipfchostop+0x238>
    e9e4:	mov	r5, r0
    e9e8:	add	r0, pc, #4
    e9ec:	ldr	r1, [r0, r1, lsl #2]
    e9f0:	add	pc, r0, r1
    e9f4:	.word	0x00000014
    e9f8:	.word	0x000001ac
    e9fc:	.word	0x000001b8
    ea00:	.word	0x00000014
    ea04:	.word	0x000000d4
    ea08:	mov	r0, #1
    ea0c:	mov	r1, #10
    ea10:	mov	r2, #6
    ea14:	mov	r3, r5
    ea18:	bl	1b00c <gen_bcmp>
    ea1c:	mov	r4, r0
    ea20:	mov	r0, #1
    ea24:	mov	r1, #2
    ea28:	mov	r2, #6
    ea2c:	mov	r3, r5
    ea30:	bl	1b00c <gen_bcmp>
    ea34:	ldr	r1, [r4, #44]	; 0x2c
    ea38:	cmp	r4, #0
    ea3c:	clz	r1, r1
    ea40:	lsr	r1, r1, #5
    ea44:	str	r1, [r4, #44]	; 0x2c
    ea48:	beq	ea84 <gen_ipfchostop+0xb4>
    ea4c:	ldr	r2, [r0, #96]	; 0x60
    ea50:	mov	r3, r4
    ea54:	cmp	r1, #0
    ea58:	mov	r1, #84	; 0x54
    ea5c:	add	r5, r3, #84	; 0x54
    ea60:	movweq	r1, #60	; 0x3c
    ea64:	addeq	r5, r3, #60	; 0x3c
    ea68:	ldr	r3, [r3, r1]
    ea6c:	str	r2, [r5]
    ea70:	cmp	r3, #0
    ea74:	beq	ea80 <gen_ipfchostop+0xb0>
    ea78:	ldr	r1, [r3, #44]	; 0x2c
    ea7c:	b	ea54 <gen_ipfchostop+0x84>
    ea80:	ldr	r1, [r4, #44]	; 0x2c
    ea84:	clz	r1, r1
    ea88:	cmp	r0, #0
    ea8c:	lsr	r1, r1, #5
    ea90:	str	r1, [r4, #44]	; 0x2c
    ea94:	str	r0, [sp]
    ea98:	beq	ebc8 <gen_ipfchostop+0x1f8>
    ea9c:	mov	r2, r0
    eaa0:	ldr	r3, [r2, #44]	; 0x2c
    eaa4:	add	r1, r2, #84	; 0x54
    eaa8:	cmp	r3, #0
    eaac:	mov	r3, #84	; 0x54
    eab0:	movweq	r3, #60	; 0x3c
    eab4:	addeq	r1, r2, #60	; 0x3c
    eab8:	ldr	r2, [r2, r3]
    eabc:	cmp	r2, #0
    eac0:	bne	eaa0 <gen_ipfchostop+0xd0>
    eac4:	b	ebcc <gen_ipfchostop+0x1fc>
    eac8:	mov	r0, #1
    eacc:	mov	r1, #10
    ead0:	mov	r2, #6
    ead4:	mov	r3, r5
    ead8:	bl	1b00c <gen_bcmp>
    eadc:	mov	r4, r0
    eae0:	mov	r0, #1
    eae4:	mov	r1, #2
    eae8:	mov	r2, #6
    eaec:	mov	r3, r5
    eaf0:	bl	1b00c <gen_bcmp>
    eaf4:	cmp	r4, #0
    eaf8:	beq	eb2c <gen_ipfchostop+0x15c>
    eafc:	ldr	r1, [r0, #96]	; 0x60
    eb00:	mov	r2, r4
    eb04:	ldr	r3, [r2, #44]	; 0x2c
    eb08:	add	r5, r2, #84	; 0x54
    eb0c:	cmp	r3, #0
    eb10:	mov	r3, #84	; 0x54
    eb14:	movweq	r3, #60	; 0x3c
    eb18:	addeq	r5, r2, #60	; 0x3c
    eb1c:	ldr	r2, [r2, r3]
    eb20:	str	r1, [r5]
    eb24:	cmp	r2, #0
    eb28:	bne	eb04 <gen_ipfchostop+0x134>
    eb2c:	ldr	r1, [r4, #44]	; 0x2c
    eb30:	cmp	r0, #0
    eb34:	clz	r1, r1
    eb38:	lsr	r1, r1, #5
    eb3c:	str	r1, [r4, #44]	; 0x2c
    eb40:	ldr	r2, [r0, #44]	; 0x2c
    eb44:	clz	r1, r2
    eb48:	lsr	r1, r1, #5
    eb4c:	str	r1, [r0, #44]	; 0x2c
    eb50:	str	r0, [sp, #4]
    eb54:	beq	ebe0 <gen_ipfchostop+0x210>
    eb58:	cmp	r2, #0
    eb5c:	mov	r2, #60	; 0x3c
    eb60:	add	r1, r0, #60	; 0x3c
    eb64:	movweq	r2, #84	; 0x54
    eb68:	addeq	r1, r0, #84	; 0x54
    eb6c:	ldr	r2, [r0, r2]
    eb70:	cmp	r2, #0
    eb74:	beq	ebe4 <gen_ipfchostop+0x214>
    eb78:	ldr	r3, [r2, #44]	; 0x2c
    eb7c:	add	r1, r2, #84	; 0x54
    eb80:	cmp	r3, #0
    eb84:	mov	r3, #84	; 0x54
    eb88:	movweq	r3, #60	; 0x3c
    eb8c:	addeq	r1, r2, #60	; 0x3c
    eb90:	ldr	r2, [r2, r3]
    eb94:	cmp	r2, #0
    eb98:	bne	eb78 <gen_ipfchostop+0x1a8>
    eb9c:	b	ebe4 <gen_ipfchostop+0x214>
    eba0:	mov	r0, #1
    eba4:	mov	r1, #10
    eba8:	b	ebb4 <gen_ipfchostop+0x1e4>
    ebac:	mov	r0, #1
    ebb0:	mov	r1, #2
    ebb4:	mov	r2, #6
    ebb8:	mov	r3, r5
    ebbc:	sub	sp, fp, #8
    ebc0:	pop	{r4, r5, fp, lr}
    ebc4:	b	1b00c <gen_bcmp>
    ebc8:	mov	r1, sp
    ebcc:	str	r4, [r1]
    ebd0:	ldr	r1, [r4, #96]	; 0x60
    ebd4:	str	r1, [r0, #96]	; 0x60
    ebd8:	sub	sp, fp, #8
    ebdc:	pop	{r4, r5, fp, pc}
    ebe0:	add	r1, sp, #4
    ebe4:	str	r4, [r1]
    ebe8:	ldr	r1, [r0, #44]	; 0x2c
    ebec:	clz	r1, r1
    ebf0:	lsr	r1, r1, #5
    ebf4:	str	r1, [r0, #44]	; 0x2c
    ebf8:	ldr	r1, [r4, #96]	; 0x60
    ebfc:	str	r1, [r0, #96]	; 0x60
    ec00:	sub	sp, fp, #8
    ec04:	pop	{r4, r5, fp, pc}
    ec08:	bl	f24 <abort@plt>

0000ec0c <gen_host6>:
    ec0c:	push	{r4, sl, fp, lr}
    ec10:	add	fp, sp, #8
    ec14:	sub	sp, sp, #8
    ec18:	ldr	r4, [pc, #604]	; ee7c <gen_host6+0x270>
    ec1c:	mov	ip, r3
    ec20:	ldr	r3, [fp, #8]
    ec24:	mov	lr, r1
    ec28:	ldr	r1, [pc, #592]	; ee80 <gen_host6+0x274>
    ec2c:	add	r4, pc, r4
    ec30:	cmp	r3, #2
    ec34:	add	r1, pc, r1
    ec38:	moveq	r1, r4
    ec3c:	cmp	r2, #40	; 0x28
    ec40:	bhi	ed1c <gen_host6+0x110>
    ec44:	add	r3, pc, #4
    ec48:	ldr	r2, [r3, r2, lsl #2]
    ec4c:	add	pc, r3, r2
    ec50:	.word	0x000000a4
    ec54:	.word	0x000000cc
    ec58:	.word	0x000000d0
    ec5c:	.word	0x000000dc
    ec60:	.word	0x000000e8
    ec64:	.word	0x000000f4
    ec68:	.word	0x00000100
    ec6c:	.word	0x0000010c
    ec70:	.word	0x00000118
    ec74:	.word	0x00000124
    ec78:	.word	0x00000130
    ec7c:	.word	0x0000013c
    ec80:	.word	0x00000148
    ec84:	.word	0x00000154
    ec88:	.word	0x00000160
    ec8c:	.word	0x0000016c
    ec90:	.word	0x00000178
    ec94:	.word	0x000000a4
    ec98:	.word	0x00000184
    ec9c:	.word	0x00000190
    eca0:	.word	0x0000019c
    eca4:	.word	0x000001a8
    eca8:	.word	0x000001b4
    ecac:	.word	0x000001c0
    ecb0:	.word	0x000001cc
    ecb4:	.word	0x000001d8
    ecb8:	.word	0x000001e4
    ecbc:	.word	0x000001f0
    ecc0:	.word	0x000001fc
    ecc4:	.word	0x00000208
    ecc8:	.word	0x00000214
    eccc:	.word	0x000000cc
    ecd0:	.word	0x000000cc
    ecd4:	.word	0x000000cc
    ecd8:	.word	0x000000cc
    ecdc:	.word	0x000000cc
    ece0:	.word	0x000000cc
    ece4:	.word	0x000000cc
    ece8:	.word	0x000000cc
    ecec:	.word	0x000000cc
    ecf0:	.word	0x00000220
    ecf4:	mov	r1, #24
    ecf8:	mov	r2, #8
    ecfc:	movw	r3, #34525	; 0x86dd
    ed00:	str	r2, [sp]
    ed04:	str	r1, [sp, #4]
    ed08:	mov	r1, lr
    ed0c:	mov	r2, ip
    ed10:	bl	1d7e0 <gen_hostop6>
    ed14:	sub	sp, fp, #8
    ed18:	pop	{r4, sl, fp, pc}
    ed1c:	bl	f24 <abort@plt>
    ed20:	ldr	r0, [pc, #348]	; ee84 <gen_host6+0x278>
    ed24:	add	r0, pc, r0
    ed28:	bl	214c <sf_bpf_error>
    ed2c:	ldr	r0, [pc, #344]	; ee8c <gen_host6+0x280>
    ed30:	add	r0, pc, r0
    ed34:	bl	214c <sf_bpf_error>
    ed38:	ldr	r0, [pc, #328]	; ee88 <gen_host6+0x27c>
    ed3c:	add	r0, pc, r0
    ed40:	bl	214c <sf_bpf_error>
    ed44:	ldr	r0, [pc, #324]	; ee90 <gen_host6+0x284>
    ed48:	add	r0, pc, r0
    ed4c:	bl	214c <sf_bpf_error>
    ed50:	ldr	r0, [pc, #316]	; ee94 <gen_host6+0x288>
    ed54:	add	r0, pc, r0
    ed58:	bl	214c <sf_bpf_error>
    ed5c:	ldr	r0, [pc, #308]	; ee98 <gen_host6+0x28c>
    ed60:	add	r0, pc, r0
    ed64:	bl	214c <sf_bpf_error>
    ed68:	ldr	r0, [pc, #300]	; ee9c <gen_host6+0x290>
    ed6c:	add	r0, pc, r0
    ed70:	bl	214c <sf_bpf_error>
    ed74:	ldr	r0, [pc, #292]	; eea0 <gen_host6+0x294>
    ed78:	add	r0, pc, r0
    ed7c:	bl	214c <sf_bpf_error>
    ed80:	ldr	r0, [pc, #284]	; eea4 <gen_host6+0x298>
    ed84:	add	r0, pc, r0
    ed88:	bl	214c <sf_bpf_error>
    ed8c:	ldr	r0, [pc, #284]	; eeb0 <gen_host6+0x2a4>
    ed90:	add	r0, pc, r0
    ed94:	bl	214c <sf_bpf_error>
    ed98:	ldr	r0, [pc, #280]	; eeb8 <gen_host6+0x2ac>
    ed9c:	add	r0, pc, r0
    eda0:	bl	214c <sf_bpf_error>
    eda4:	ldr	r0, [pc, #276]	; eec0 <gen_host6+0x2b4>
    eda8:	add	r0, pc, r0
    edac:	bl	214c <sf_bpf_error>
    edb0:	ldr	r0, [pc, #260]	; eebc <gen_host6+0x2b0>
    edb4:	add	r0, pc, r0
    edb8:	bl	214c <sf_bpf_error>
    edbc:	ldr	r0, [pc, #260]	; eec8 <gen_host6+0x2bc>
    edc0:	add	r0, pc, r0
    edc4:	bl	214c <sf_bpf_error>
    edc8:	ldr	r0, [pc, #244]	; eec4 <gen_host6+0x2b8>
    edcc:	add	r0, pc, r0
    edd0:	bl	214c <sf_bpf_error>
    edd4:	ldr	r0, [pc, #240]	; eecc <gen_host6+0x2c0>
    edd8:	add	r0, pc, r0
    eddc:	bl	214c <sf_bpf_error>
    ede0:	ldr	r0, [pc, #232]	; eed0 <gen_host6+0x2c4>
    ede4:	add	r0, pc, r0
    ede8:	bl	214c <sf_bpf_error>
    edec:	ldr	r0, [pc, #224]	; eed4 <gen_host6+0x2c8>
    edf0:	add	r0, pc, r0
    edf4:	bl	214c <sf_bpf_error>
    edf8:	ldr	r0, [pc, #168]	; eea8 <gen_host6+0x29c>
    edfc:	add	r0, pc, r0
    ee00:	bl	214c <sf_bpf_error>
    ee04:	ldr	r0, [pc, #160]	; eeac <gen_host6+0x2a0>
    ee08:	add	r0, pc, r0
    ee0c:	bl	214c <sf_bpf_error>
    ee10:	ldr	r0, [pc, #156]	; eeb4 <gen_host6+0x2a8>
    ee14:	add	r0, pc, r0
    ee18:	bl	214c <sf_bpf_error>
    ee1c:	ldr	r0, [pc, #180]	; eed8 <gen_host6+0x2cc>
    ee20:	add	r0, pc, r0
    ee24:	bl	214c <sf_bpf_error>
    ee28:	ldr	r0, [pc, #172]	; eedc <gen_host6+0x2d0>
    ee2c:	add	r0, pc, r0
    ee30:	bl	214c <sf_bpf_error>
    ee34:	ldr	r0, [pc, #164]	; eee0 <gen_host6+0x2d4>
    ee38:	add	r0, pc, r0
    ee3c:	bl	214c <sf_bpf_error>
    ee40:	ldr	r0, [pc, #156]	; eee4 <gen_host6+0x2d8>
    ee44:	add	r0, pc, r0
    ee48:	bl	214c <sf_bpf_error>
    ee4c:	ldr	r0, [pc, #148]	; eee8 <gen_host6+0x2dc>
    ee50:	add	r0, pc, r0
    ee54:	bl	214c <sf_bpf_error>
    ee58:	ldr	r0, [pc, #140]	; eeec <gen_host6+0x2e0>
    ee5c:	add	r0, pc, r0
    ee60:	bl	214c <sf_bpf_error>
    ee64:	ldr	r0, [pc, #132]	; eef0 <gen_host6+0x2e4>
    ee68:	add	r0, pc, r0
    ee6c:	bl	214c <sf_bpf_error>
    ee70:	ldr	r0, [pc, #124]	; eef4 <gen_host6+0x2e8>
    ee74:	add	r0, pc, r0
    ee78:	bl	214c <sf_bpf_error>
    ee7c:	.word	0x0001aa6c
    ee80:	.word	0x0001b5da
    ee84:	.word	0x0001b644
    ee88:	.word	0x0001b64c
    ee8c:	.word	0x0001b67a
    ee90:	.word	0x0001b300
    ee94:	.word	0x0001b2d7
    ee98:	.word	0x0001b306
    ee9c:	.word	0x0001b317
    eea0:	.word	0x0001b329
    eea4:	.word	0x0001b33b
    eea8:	.word	0x0001b2e1
    eeac:	.word	0x0001b2f2
    eeb0:	.word	0x0001b388
    eeb4:	.word	0x0001b329
    eeb8:	.word	0x0001b62f
    eebc:	.word	0x0001b3ad
    eec0:	.word	0x0001b3dc
    eec4:	.word	0x0001b3db
    eec8:	.word	0x0001b40c
    eecc:	.word	0x0001b43b
    eed0:	.word	0x0001b44e
    eed4:	.word	0x0001b45e
    eed8:	.word	0x0001b44b
    eedc:	.word	0x0001b462
    eee0:	.word	0x0001b474
    eee4:	.word	0x0001b486
    eee8:	.word	0x0001b498
    eeec:	.word	0x0001b4a9
    eef0:	.word	0x0001b4c0
    eef4:	.word	0x0001b4d5

0000eef8 <gen_port>:
    eef8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    eefc:	add	fp, sp, #24
    ef00:	sub	sp, sp, #16
    ef04:	mov	r9, r0
    ef08:	mov	r0, #2048	; 0x800
    ef0c:	mov	r8, r2
    ef10:	mov	r5, r1
    ef14:	bl	6fb4 <gen_linktype>
    ef18:	mov	r4, r0
    ef1c:	cmp	r5, #16
    ef20:	bgt	efa4 <gen_port+0xac>
    ef24:	cmn	r5, #1
    ef28:	bne	efd8 <gen_port+0xe0>
    ef2c:	mov	r0, r9
    ef30:	mov	r1, #6
    ef34:	mov	r2, r8
    ef38:	bl	9ca4 <sf_gen_portop>
    ef3c:	mov	r6, r0
    ef40:	mov	r0, r9
    ef44:	mov	r1, #17
    ef48:	mov	r2, r8
    ef4c:	bl	9ca4 <sf_gen_portop>
    ef50:	mov	r5, r0
    ef54:	ldr	r0, [r6, #44]	; 0x2c
    ef58:	cmp	r6, #0
    ef5c:	mov	r7, r5
    ef60:	clz	r0, r0
    ef64:	lsr	r1, r0, #5
    ef68:	str	r1, [r6, #44]	; 0x2c
    ef6c:	ldr	r0, [r7, #96]!	; 0x60
    ef70:	beq	efe8 <gen_port+0xf0>
    ef74:	mov	r2, r6
    ef78:	cmp	r1, #0
    ef7c:	mov	r1, #84	; 0x54
    ef80:	add	r3, r2, #84	; 0x54
    ef84:	movweq	r1, #60	; 0x3c
    ef88:	addeq	r3, r2, #60	; 0x3c
    ef8c:	ldr	r2, [r2, r1]
    ef90:	str	r0, [r3]
    ef94:	cmp	r2, #0
    ef98:	beq	efe4 <gen_port+0xec>
    ef9c:	ldr	r1, [r2, #44]	; 0x2c
    efa0:	b	ef78 <gen_port+0x80>
    efa4:	cmp	r5, #132	; 0x84
    efa8:	cmpne	r5, #17
    efac:	bne	efe0 <gen_port+0xe8>
    efb0:	mov	r0, r9
    efb4:	mov	r1, r5
    efb8:	mov	r2, r8
    efbc:	bl	9ca4 <sf_gen_portop>
    efc0:	mov	r7, r0
    efc4:	mov	r5, r0
    efc8:	ldr	r0, [r7, #96]!	; 0x60
    efcc:	cmp	r4, #0
    efd0:	bne	f0f8 <gen_port+0x200>
    efd4:	b	f124 <gen_port+0x22c>
    efd8:	cmp	r5, #6
    efdc:	beq	efb0 <gen_port+0xb8>
    efe0:	bl	f24 <abort@plt>
    efe4:	ldr	r1, [r6, #44]	; 0x2c
    efe8:	clz	r0, r1
    efec:	cmp	r5, #0
    eff0:	lsr	r0, r0, #5
    eff4:	str	r0, [r6, #44]	; 0x2c
    eff8:	str	r5, [sp, #4]
    effc:	beq	f02c <gen_port+0x134>
    f000:	mov	r1, r5
    f004:	ldr	r2, [r1, #44]	; 0x2c
    f008:	add	r0, r1, #84	; 0x54
    f00c:	cmp	r2, #0
    f010:	mov	r2, #84	; 0x54
    f014:	movweq	r2, #60	; 0x3c
    f018:	addeq	r0, r1, #60	; 0x3c
    f01c:	ldr	r1, [r1, r2]
    f020:	cmp	r1, #0
    f024:	bne	f004 <gen_port+0x10c>
    f028:	b	f030 <gen_port+0x138>
    f02c:	add	r0, sp, #4
    f030:	str	r6, [r0]
    f034:	mov	r1, #132	; 0x84
    f038:	mov	r2, r8
    f03c:	ldr	r0, [r6, #96]	; 0x60
    f040:	str	r0, [r7]
    f044:	mov	r0, r9
    f048:	bl	9ca4 <sf_gen_portop>
    f04c:	ldr	r1, [r0, #44]	; 0x2c
    f050:	cmp	r0, #0
    f054:	clz	r1, r1
    f058:	lsr	r1, r1, #5
    f05c:	str	r1, [r0, #44]	; 0x2c
    f060:	beq	f09c <gen_port+0x1a4>
    f064:	ldr	r2, [r7]
    f068:	mov	r3, r0
    f06c:	cmp	r1, #0
    f070:	mov	r1, #84	; 0x54
    f074:	add	r6, r3, #84	; 0x54
    f078:	movweq	r1, #60	; 0x3c
    f07c:	addeq	r6, r3, #60	; 0x3c
    f080:	ldr	r3, [r3, r1]
    f084:	str	r2, [r6]
    f088:	cmp	r3, #0
    f08c:	beq	f098 <gen_port+0x1a0>
    f090:	ldr	r1, [r3, #44]	; 0x2c
    f094:	b	f06c <gen_port+0x174>
    f098:	ldr	r1, [r0, #44]	; 0x2c
    f09c:	clz	r1, r1
    f0a0:	cmp	r5, #0
    f0a4:	lsr	r1, r1, #5
    f0a8:	str	r1, [r0, #44]	; 0x2c
    f0ac:	str	r5, [sp, #12]
    f0b0:	beq	f0e0 <gen_port+0x1e8>
    f0b4:	mov	r2, r5
    f0b8:	ldr	r3, [r2, #44]	; 0x2c
    f0bc:	add	r1, r2, #84	; 0x54
    f0c0:	cmp	r3, #0
    f0c4:	mov	r3, #84	; 0x54
    f0c8:	movweq	r3, #60	; 0x3c
    f0cc:	addeq	r1, r2, #60	; 0x3c
    f0d0:	ldr	r2, [r2, r3]
    f0d4:	cmp	r2, #0
    f0d8:	bne	f0b8 <gen_port+0x1c0>
    f0dc:	b	f0e4 <gen_port+0x1ec>
    f0e0:	add	r1, sp, #12
    f0e4:	str	r0, [r1]
    f0e8:	ldr	r0, [r0, #96]	; 0x60
    f0ec:	str	r0, [r7]
    f0f0:	cmp	r4, #0
    f0f4:	beq	f124 <gen_port+0x22c>
    f0f8:	mov	r1, r4
    f0fc:	ldr	r2, [r1, #44]	; 0x2c
    f100:	add	r3, r1, #84	; 0x54
    f104:	cmp	r2, #0
    f108:	mov	r2, #84	; 0x54
    f10c:	movweq	r2, #60	; 0x3c
    f110:	addeq	r3, r1, #60	; 0x3c
    f114:	ldr	r1, [r1, r2]
    f118:	str	r0, [r3]
    f11c:	cmp	r1, #0
    f120:	bne	f0fc <gen_port+0x204>
    f124:	ldr	r0, [r4, #44]	; 0x2c
    f128:	cmp	r5, #0
    f12c:	clz	r0, r0
    f130:	lsr	r0, r0, #5
    f134:	str	r0, [r4, #44]	; 0x2c
    f138:	ldr	r1, [r5, #44]	; 0x2c
    f13c:	clz	r0, r1
    f140:	lsr	r0, r0, #5
    f144:	str	r0, [r5, #44]	; 0x2c
    f148:	str	r5, [sp, #8]
    f14c:	beq	f198 <gen_port+0x2a0>
    f150:	cmp	r1, #0
    f154:	mov	r1, #60	; 0x3c
    f158:	add	r0, r5, #60	; 0x3c
    f15c:	movweq	r1, #84	; 0x54
    f160:	addeq	r0, r5, #84	; 0x54
    f164:	ldr	r1, [r5, r1]
    f168:	cmp	r1, #0
    f16c:	beq	f19c <gen_port+0x2a4>
    f170:	ldr	r2, [r1, #44]	; 0x2c
    f174:	add	r0, r1, #84	; 0x54
    f178:	cmp	r2, #0
    f17c:	mov	r2, #84	; 0x54
    f180:	movweq	r2, #60	; 0x3c
    f184:	addeq	r0, r1, #60	; 0x3c
    f188:	ldr	r1, [r1, r2]
    f18c:	cmp	r1, #0
    f190:	bne	f170 <gen_port+0x278>
    f194:	b	f19c <gen_port+0x2a4>
    f198:	add	r0, sp, #8
    f19c:	str	r4, [r0]
    f1a0:	ldr	r0, [r5, #44]	; 0x2c
    f1a4:	clz	r0, r0
    f1a8:	lsr	r0, r0, #5
    f1ac:	str	r0, [r5, #44]	; 0x2c
    f1b0:	ldr	r0, [r4, #96]	; 0x60
    f1b4:	str	r0, [r7]
    f1b8:	mov	r0, r5
    f1bc:	sub	sp, fp, #24
    f1c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000f1c4 <gen_port6>:
    f1c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    f1c8:	add	fp, sp, #24
    f1cc:	sub	sp, sp, #16
    f1d0:	mov	r9, r0
    f1d4:	movw	r0, #34525	; 0x86dd
    f1d8:	mov	r8, r2
    f1dc:	mov	r5, r1
    f1e0:	bl	6fb4 <gen_linktype>
    f1e4:	mov	r4, r0
    f1e8:	cmp	r5, #16
    f1ec:	bgt	f270 <gen_port6+0xac>
    f1f0:	cmn	r5, #1
    f1f4:	bne	f2a4 <gen_port6+0xe0>
    f1f8:	mov	r0, r9
    f1fc:	mov	r1, #6
    f200:	mov	r2, r8
    f204:	bl	a414 <sf_gen_portop6>
    f208:	mov	r6, r0
    f20c:	mov	r0, r9
    f210:	mov	r1, #17
    f214:	mov	r2, r8
    f218:	bl	a414 <sf_gen_portop6>
    f21c:	mov	r5, r0
    f220:	ldr	r0, [r6, #44]	; 0x2c
    f224:	cmp	r6, #0
    f228:	mov	r7, r5
    f22c:	clz	r0, r0
    f230:	lsr	r1, r0, #5
    f234:	str	r1, [r6, #44]	; 0x2c
    f238:	ldr	r0, [r7, #96]!	; 0x60
    f23c:	beq	f2b4 <gen_port6+0xf0>
    f240:	mov	r2, r6
    f244:	cmp	r1, #0
    f248:	mov	r1, #84	; 0x54
    f24c:	add	r3, r2, #84	; 0x54
    f250:	movweq	r1, #60	; 0x3c
    f254:	addeq	r3, r2, #60	; 0x3c
    f258:	ldr	r2, [r2, r1]
    f25c:	str	r0, [r3]
    f260:	cmp	r2, #0
    f264:	beq	f2b0 <gen_port6+0xec>
    f268:	ldr	r1, [r2, #44]	; 0x2c
    f26c:	b	f244 <gen_port6+0x80>
    f270:	cmp	r5, #132	; 0x84
    f274:	cmpne	r5, #17
    f278:	bne	f2ac <gen_port6+0xe8>
    f27c:	mov	r0, r9
    f280:	mov	r1, r5
    f284:	mov	r2, r8
    f288:	bl	a414 <sf_gen_portop6>
    f28c:	mov	r7, r0
    f290:	mov	r5, r0
    f294:	ldr	r0, [r7, #96]!	; 0x60
    f298:	cmp	r4, #0
    f29c:	bne	f3c4 <gen_port6+0x200>
    f2a0:	b	f3f0 <gen_port6+0x22c>
    f2a4:	cmp	r5, #6
    f2a8:	beq	f27c <gen_port6+0xb8>
    f2ac:	bl	f24 <abort@plt>
    f2b0:	ldr	r1, [r6, #44]	; 0x2c
    f2b4:	clz	r0, r1
    f2b8:	cmp	r5, #0
    f2bc:	lsr	r0, r0, #5
    f2c0:	str	r0, [r6, #44]	; 0x2c
    f2c4:	str	r5, [sp, #4]
    f2c8:	beq	f2f8 <gen_port6+0x134>
    f2cc:	mov	r1, r5
    f2d0:	ldr	r2, [r1, #44]	; 0x2c
    f2d4:	add	r0, r1, #84	; 0x54
    f2d8:	cmp	r2, #0
    f2dc:	mov	r2, #84	; 0x54
    f2e0:	movweq	r2, #60	; 0x3c
    f2e4:	addeq	r0, r1, #60	; 0x3c
    f2e8:	ldr	r1, [r1, r2]
    f2ec:	cmp	r1, #0
    f2f0:	bne	f2d0 <gen_port6+0x10c>
    f2f4:	b	f2fc <gen_port6+0x138>
    f2f8:	add	r0, sp, #4
    f2fc:	str	r6, [r0]
    f300:	mov	r1, #132	; 0x84
    f304:	mov	r2, r8
    f308:	ldr	r0, [r6, #96]	; 0x60
    f30c:	str	r0, [r7]
    f310:	mov	r0, r9
    f314:	bl	a414 <sf_gen_portop6>
    f318:	ldr	r1, [r0, #44]	; 0x2c
    f31c:	cmp	r0, #0
    f320:	clz	r1, r1
    f324:	lsr	r1, r1, #5
    f328:	str	r1, [r0, #44]	; 0x2c
    f32c:	beq	f368 <gen_port6+0x1a4>
    f330:	ldr	r2, [r7]
    f334:	mov	r3, r0
    f338:	cmp	r1, #0
    f33c:	mov	r1, #84	; 0x54
    f340:	add	r6, r3, #84	; 0x54
    f344:	movweq	r1, #60	; 0x3c
    f348:	addeq	r6, r3, #60	; 0x3c
    f34c:	ldr	r3, [r3, r1]
    f350:	str	r2, [r6]
    f354:	cmp	r3, #0
    f358:	beq	f364 <gen_port6+0x1a0>
    f35c:	ldr	r1, [r3, #44]	; 0x2c
    f360:	b	f338 <gen_port6+0x174>
    f364:	ldr	r1, [r0, #44]	; 0x2c
    f368:	clz	r1, r1
    f36c:	cmp	r5, #0
    f370:	lsr	r1, r1, #5
    f374:	str	r1, [r0, #44]	; 0x2c
    f378:	str	r5, [sp, #12]
    f37c:	beq	f3ac <gen_port6+0x1e8>
    f380:	mov	r2, r5
    f384:	ldr	r3, [r2, #44]	; 0x2c
    f388:	add	r1, r2, #84	; 0x54
    f38c:	cmp	r3, #0
    f390:	mov	r3, #84	; 0x54
    f394:	movweq	r3, #60	; 0x3c
    f398:	addeq	r1, r2, #60	; 0x3c
    f39c:	ldr	r2, [r2, r3]
    f3a0:	cmp	r2, #0
    f3a4:	bne	f384 <gen_port6+0x1c0>
    f3a8:	b	f3b0 <gen_port6+0x1ec>
    f3ac:	add	r1, sp, #12
    f3b0:	str	r0, [r1]
    f3b4:	ldr	r0, [r0, #96]	; 0x60
    f3b8:	str	r0, [r7]
    f3bc:	cmp	r4, #0
    f3c0:	beq	f3f0 <gen_port6+0x22c>
    f3c4:	mov	r1, r4
    f3c8:	ldr	r2, [r1, #44]	; 0x2c
    f3cc:	add	r3, r1, #84	; 0x54
    f3d0:	cmp	r2, #0
    f3d4:	mov	r2, #84	; 0x54
    f3d8:	movweq	r2, #60	; 0x3c
    f3dc:	addeq	r3, r1, #60	; 0x3c
    f3e0:	ldr	r1, [r1, r2]
    f3e4:	str	r0, [r3]
    f3e8:	cmp	r1, #0
    f3ec:	bne	f3c8 <gen_port6+0x204>
    f3f0:	ldr	r0, [r4, #44]	; 0x2c
    f3f4:	cmp	r5, #0
    f3f8:	clz	r0, r0
    f3fc:	lsr	r0, r0, #5
    f400:	str	r0, [r4, #44]	; 0x2c
    f404:	ldr	r1, [r5, #44]	; 0x2c
    f408:	clz	r0, r1
    f40c:	lsr	r0, r0, #5
    f410:	str	r0, [r5, #44]	; 0x2c
    f414:	str	r5, [sp, #8]
    f418:	beq	f464 <gen_port6+0x2a0>
    f41c:	cmp	r1, #0
    f420:	mov	r1, #60	; 0x3c
    f424:	add	r0, r5, #60	; 0x3c
    f428:	movweq	r1, #84	; 0x54
    f42c:	addeq	r0, r5, #84	; 0x54
    f430:	ldr	r1, [r5, r1]
    f434:	cmp	r1, #0
    f438:	beq	f468 <gen_port6+0x2a4>
    f43c:	ldr	r2, [r1, #44]	; 0x2c
    f440:	add	r0, r1, #84	; 0x54
    f444:	cmp	r2, #0
    f448:	mov	r2, #84	; 0x54
    f44c:	movweq	r2, #60	; 0x3c
    f450:	addeq	r0, r1, #60	; 0x3c
    f454:	ldr	r1, [r1, r2]
    f458:	cmp	r1, #0
    f45c:	bne	f43c <gen_port6+0x278>
    f460:	b	f468 <gen_port6+0x2a4>
    f464:	add	r0, sp, #8
    f468:	str	r4, [r0]
    f46c:	ldr	r0, [r5, #44]	; 0x2c
    f470:	clz	r0, r0
    f474:	lsr	r0, r0, #5
    f478:	str	r0, [r5, #44]	; 0x2c
    f47c:	ldr	r0, [r4, #96]	; 0x60
    f480:	str	r0, [r7]
    f484:	mov	r0, r5
    f488:	sub	sp, fp, #24
    f48c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000f490 <gen_portrange>:
    f490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f494:	add	fp, sp, #28
    f498:	sub	sp, sp, #12
    f49c:	mov	sl, r0
    f4a0:	mov	r0, #2048	; 0x800
    f4a4:	mov	r8, r3
    f4a8:	mov	r5, r2
    f4ac:	mov	r9, r1
    f4b0:	bl	6fb4 <gen_linktype>
    f4b4:	mov	r4, r0
    f4b8:	cmp	r5, #16
    f4bc:	bgt	f548 <gen_portrange+0xb8>
    f4c0:	cmn	r5, #1
    f4c4:	bne	f580 <gen_portrange+0xf0>
    f4c8:	mov	r0, sl
    f4cc:	mov	r1, r9
    f4d0:	mov	r2, #6
    f4d4:	mov	r3, r8
    f4d8:	bl	a740 <sf_gen_portrangeop>
    f4dc:	mov	r7, r0
    f4e0:	mov	r0, sl
    f4e4:	mov	r1, r9
    f4e8:	mov	r2, #17
    f4ec:	mov	r3, r8
    f4f0:	bl	a740 <sf_gen_portrangeop>
    f4f4:	mov	r5, r0
    f4f8:	ldr	r0, [r7, #44]	; 0x2c
    f4fc:	cmp	r7, #0
    f500:	mov	r6, r5
    f504:	clz	r0, r0
    f508:	lsr	r1, r0, #5
    f50c:	str	r1, [r7, #44]	; 0x2c
    f510:	ldr	r0, [r6, #96]!	; 0x60
    f514:	beq	f590 <gen_portrange+0x100>
    f518:	mov	r2, r7
    f51c:	cmp	r1, #0
    f520:	mov	r1, #84	; 0x54
    f524:	add	r3, r2, #84	; 0x54
    f528:	movweq	r1, #60	; 0x3c
    f52c:	addeq	r3, r2, #60	; 0x3c
    f530:	ldr	r2, [r2, r1]
    f534:	str	r0, [r3]
    f538:	cmp	r2, #0
    f53c:	beq	f58c <gen_portrange+0xfc>
    f540:	ldr	r1, [r2, #44]	; 0x2c
    f544:	b	f51c <gen_portrange+0x8c>
    f548:	cmp	r5, #132	; 0x84
    f54c:	cmpne	r5, #17
    f550:	bne	f588 <gen_portrange+0xf8>
    f554:	mov	r0, sl
    f558:	mov	r1, r9
    f55c:	mov	r2, r5
    f560:	mov	r3, r8
    f564:	bl	a740 <sf_gen_portrangeop>
    f568:	mov	r6, r0
    f56c:	mov	r5, r0
    f570:	ldr	r0, [r6, #96]!	; 0x60
    f574:	cmp	r4, #0
    f578:	bne	f6a4 <gen_portrange+0x214>
    f57c:	b	f6d0 <gen_portrange+0x240>
    f580:	cmp	r5, #6
    f584:	beq	f554 <gen_portrange+0xc4>
    f588:	bl	f24 <abort@plt>
    f58c:	ldr	r1, [r7, #44]	; 0x2c
    f590:	clz	r0, r1
    f594:	cmp	r5, #0
    f598:	lsr	r0, r0, #5
    f59c:	str	r0, [r7, #44]	; 0x2c
    f5a0:	str	r5, [sp]
    f5a4:	beq	f5d4 <gen_portrange+0x144>
    f5a8:	mov	r1, r5
    f5ac:	ldr	r2, [r1, #44]	; 0x2c
    f5b0:	add	r0, r1, #84	; 0x54
    f5b4:	cmp	r2, #0
    f5b8:	mov	r2, #84	; 0x54
    f5bc:	movweq	r2, #60	; 0x3c
    f5c0:	addeq	r0, r1, #60	; 0x3c
    f5c4:	ldr	r1, [r1, r2]
    f5c8:	cmp	r1, #0
    f5cc:	bne	f5ac <gen_portrange+0x11c>
    f5d0:	b	f5d8 <gen_portrange+0x148>
    f5d4:	mov	r0, sp
    f5d8:	str	r7, [r0]
    f5dc:	mov	r1, r9
    f5e0:	mov	r2, #132	; 0x84
    f5e4:	mov	r3, r8
    f5e8:	ldr	r0, [r7, #96]	; 0x60
    f5ec:	str	r0, [r6]
    f5f0:	mov	r0, sl
    f5f4:	bl	a740 <sf_gen_portrangeop>
    f5f8:	ldr	r1, [r0, #44]	; 0x2c
    f5fc:	cmp	r0, #0
    f600:	clz	r1, r1
    f604:	lsr	r1, r1, #5
    f608:	str	r1, [r0, #44]	; 0x2c
    f60c:	beq	f648 <gen_portrange+0x1b8>
    f610:	ldr	r2, [r6]
    f614:	mov	r3, r0
    f618:	cmp	r1, #0
    f61c:	mov	r1, #84	; 0x54
    f620:	add	r7, r3, #84	; 0x54
    f624:	movweq	r1, #60	; 0x3c
    f628:	addeq	r7, r3, #60	; 0x3c
    f62c:	ldr	r3, [r3, r1]
    f630:	str	r2, [r7]
    f634:	cmp	r3, #0
    f638:	beq	f644 <gen_portrange+0x1b4>
    f63c:	ldr	r1, [r3, #44]	; 0x2c
    f640:	b	f618 <gen_portrange+0x188>
    f644:	ldr	r1, [r0, #44]	; 0x2c
    f648:	clz	r1, r1
    f64c:	cmp	r5, #0
    f650:	lsr	r1, r1, #5
    f654:	str	r1, [r0, #44]	; 0x2c
    f658:	str	r5, [sp, #8]
    f65c:	beq	f68c <gen_portrange+0x1fc>
    f660:	mov	r2, r5
    f664:	ldr	r3, [r2, #44]	; 0x2c
    f668:	add	r1, r2, #84	; 0x54
    f66c:	cmp	r3, #0
    f670:	mov	r3, #84	; 0x54
    f674:	movweq	r3, #60	; 0x3c
    f678:	addeq	r1, r2, #60	; 0x3c
    f67c:	ldr	r2, [r2, r3]
    f680:	cmp	r2, #0
    f684:	bne	f664 <gen_portrange+0x1d4>
    f688:	b	f690 <gen_portrange+0x200>
    f68c:	add	r1, sp, #8
    f690:	str	r0, [r1]
    f694:	ldr	r0, [r0, #96]	; 0x60
    f698:	str	r0, [r6]
    f69c:	cmp	r4, #0
    f6a0:	beq	f6d0 <gen_portrange+0x240>
    f6a4:	mov	r1, r4
    f6a8:	ldr	r2, [r1, #44]	; 0x2c
    f6ac:	add	r3, r1, #84	; 0x54
    f6b0:	cmp	r2, #0
    f6b4:	mov	r2, #84	; 0x54
    f6b8:	movweq	r2, #60	; 0x3c
    f6bc:	addeq	r3, r1, #60	; 0x3c
    f6c0:	ldr	r1, [r1, r2]
    f6c4:	str	r0, [r3]
    f6c8:	cmp	r1, #0
    f6cc:	bne	f6a8 <gen_portrange+0x218>
    f6d0:	ldr	r0, [r4, #44]	; 0x2c
    f6d4:	cmp	r5, #0
    f6d8:	clz	r0, r0
    f6dc:	lsr	r0, r0, #5
    f6e0:	str	r0, [r4, #44]	; 0x2c
    f6e4:	ldr	r1, [r5, #44]	; 0x2c
    f6e8:	clz	r0, r1
    f6ec:	lsr	r0, r0, #5
    f6f0:	str	r0, [r5, #44]	; 0x2c
    f6f4:	str	r5, [sp, #4]
    f6f8:	beq	f744 <gen_portrange+0x2b4>
    f6fc:	cmp	r1, #0
    f700:	mov	r1, #60	; 0x3c
    f704:	add	r0, r5, #60	; 0x3c
    f708:	movweq	r1, #84	; 0x54
    f70c:	addeq	r0, r5, #84	; 0x54
    f710:	ldr	r1, [r5, r1]
    f714:	cmp	r1, #0
    f718:	beq	f748 <gen_portrange+0x2b8>
    f71c:	ldr	r2, [r1, #44]	; 0x2c
    f720:	add	r0, r1, #84	; 0x54
    f724:	cmp	r2, #0
    f728:	mov	r2, #84	; 0x54
    f72c:	movweq	r2, #60	; 0x3c
    f730:	addeq	r0, r1, #60	; 0x3c
    f734:	ldr	r1, [r1, r2]
    f738:	cmp	r1, #0
    f73c:	bne	f71c <gen_portrange+0x28c>
    f740:	b	f748 <gen_portrange+0x2b8>
    f744:	add	r0, sp, #4
    f748:	str	r4, [r0]
    f74c:	ldr	r0, [r5, #44]	; 0x2c
    f750:	clz	r0, r0
    f754:	lsr	r0, r0, #5
    f758:	str	r0, [r5, #44]	; 0x2c
    f75c:	ldr	r0, [r4, #96]	; 0x60
    f760:	str	r0, [r6]
    f764:	mov	r0, r5
    f768:	sub	sp, fp, #28
    f76c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f770 <gen_portrange6>:
    f770:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f774:	add	fp, sp, #28
    f778:	sub	sp, sp, #12
    f77c:	mov	sl, r0
    f780:	movw	r0, #34525	; 0x86dd
    f784:	mov	r8, r3
    f788:	mov	r5, r2
    f78c:	mov	r9, r1
    f790:	bl	6fb4 <gen_linktype>
    f794:	mov	r4, r0
    f798:	cmp	r5, #16
    f79c:	bgt	f828 <gen_portrange6+0xb8>
    f7a0:	cmn	r5, #1
    f7a4:	bne	f860 <gen_portrange6+0xf0>
    f7a8:	mov	r0, sl
    f7ac:	mov	r1, r9
    f7b0:	mov	r2, #6
    f7b4:	mov	r3, r8
    f7b8:	bl	ac54 <sf_gen_portrangeop6>
    f7bc:	mov	r7, r0
    f7c0:	mov	r0, sl
    f7c4:	mov	r1, r9
    f7c8:	mov	r2, #17
    f7cc:	mov	r3, r8
    f7d0:	bl	ac54 <sf_gen_portrangeop6>
    f7d4:	mov	r5, r0
    f7d8:	ldr	r0, [r7, #44]	; 0x2c
    f7dc:	cmp	r7, #0
    f7e0:	mov	r6, r5
    f7e4:	clz	r0, r0
    f7e8:	lsr	r1, r0, #5
    f7ec:	str	r1, [r7, #44]	; 0x2c
    f7f0:	ldr	r0, [r6, #96]!	; 0x60
    f7f4:	beq	f870 <gen_portrange6+0x100>
    f7f8:	mov	r2, r7
    f7fc:	cmp	r1, #0
    f800:	mov	r1, #84	; 0x54
    f804:	add	r3, r2, #84	; 0x54
    f808:	movweq	r1, #60	; 0x3c
    f80c:	addeq	r3, r2, #60	; 0x3c
    f810:	ldr	r2, [r2, r1]
    f814:	str	r0, [r3]
    f818:	cmp	r2, #0
    f81c:	beq	f86c <gen_portrange6+0xfc>
    f820:	ldr	r1, [r2, #44]	; 0x2c
    f824:	b	f7fc <gen_portrange6+0x8c>
    f828:	cmp	r5, #132	; 0x84
    f82c:	cmpne	r5, #17
    f830:	bne	f868 <gen_portrange6+0xf8>
    f834:	mov	r0, sl
    f838:	mov	r1, r9
    f83c:	mov	r2, r5
    f840:	mov	r3, r8
    f844:	bl	ac54 <sf_gen_portrangeop6>
    f848:	mov	r6, r0
    f84c:	mov	r5, r0
    f850:	ldr	r0, [r6, #96]!	; 0x60
    f854:	cmp	r4, #0
    f858:	bne	f984 <gen_portrange6+0x214>
    f85c:	b	f9b0 <gen_portrange6+0x240>
    f860:	cmp	r5, #6
    f864:	beq	f834 <gen_portrange6+0xc4>
    f868:	bl	f24 <abort@plt>
    f86c:	ldr	r1, [r7, #44]	; 0x2c
    f870:	clz	r0, r1
    f874:	cmp	r5, #0
    f878:	lsr	r0, r0, #5
    f87c:	str	r0, [r7, #44]	; 0x2c
    f880:	str	r5, [sp]
    f884:	beq	f8b4 <gen_portrange6+0x144>
    f888:	mov	r1, r5
    f88c:	ldr	r2, [r1, #44]	; 0x2c
    f890:	add	r0, r1, #84	; 0x54
    f894:	cmp	r2, #0
    f898:	mov	r2, #84	; 0x54
    f89c:	movweq	r2, #60	; 0x3c
    f8a0:	addeq	r0, r1, #60	; 0x3c
    f8a4:	ldr	r1, [r1, r2]
    f8a8:	cmp	r1, #0
    f8ac:	bne	f88c <gen_portrange6+0x11c>
    f8b0:	b	f8b8 <gen_portrange6+0x148>
    f8b4:	mov	r0, sp
    f8b8:	str	r7, [r0]
    f8bc:	mov	r1, r9
    f8c0:	mov	r2, #132	; 0x84
    f8c4:	mov	r3, r8
    f8c8:	ldr	r0, [r7, #96]	; 0x60
    f8cc:	str	r0, [r6]
    f8d0:	mov	r0, sl
    f8d4:	bl	ac54 <sf_gen_portrangeop6>
    f8d8:	ldr	r1, [r0, #44]	; 0x2c
    f8dc:	cmp	r0, #0
    f8e0:	clz	r1, r1
    f8e4:	lsr	r1, r1, #5
    f8e8:	str	r1, [r0, #44]	; 0x2c
    f8ec:	beq	f928 <gen_portrange6+0x1b8>
    f8f0:	ldr	r2, [r6]
    f8f4:	mov	r3, r0
    f8f8:	cmp	r1, #0
    f8fc:	mov	r1, #84	; 0x54
    f900:	add	r7, r3, #84	; 0x54
    f904:	movweq	r1, #60	; 0x3c
    f908:	addeq	r7, r3, #60	; 0x3c
    f90c:	ldr	r3, [r3, r1]
    f910:	str	r2, [r7]
    f914:	cmp	r3, #0
    f918:	beq	f924 <gen_portrange6+0x1b4>
    f91c:	ldr	r1, [r3, #44]	; 0x2c
    f920:	b	f8f8 <gen_portrange6+0x188>
    f924:	ldr	r1, [r0, #44]	; 0x2c
    f928:	clz	r1, r1
    f92c:	cmp	r5, #0
    f930:	lsr	r1, r1, #5
    f934:	str	r1, [r0, #44]	; 0x2c
    f938:	str	r5, [sp, #8]
    f93c:	beq	f96c <gen_portrange6+0x1fc>
    f940:	mov	r2, r5
    f944:	ldr	r3, [r2, #44]	; 0x2c
    f948:	add	r1, r2, #84	; 0x54
    f94c:	cmp	r3, #0
    f950:	mov	r3, #84	; 0x54
    f954:	movweq	r3, #60	; 0x3c
    f958:	addeq	r1, r2, #60	; 0x3c
    f95c:	ldr	r2, [r2, r3]
    f960:	cmp	r2, #0
    f964:	bne	f944 <gen_portrange6+0x1d4>
    f968:	b	f970 <gen_portrange6+0x200>
    f96c:	add	r1, sp, #8
    f970:	str	r0, [r1]
    f974:	ldr	r0, [r0, #96]	; 0x60
    f978:	str	r0, [r6]
    f97c:	cmp	r4, #0
    f980:	beq	f9b0 <gen_portrange6+0x240>
    f984:	mov	r1, r4
    f988:	ldr	r2, [r1, #44]	; 0x2c
    f98c:	add	r3, r1, #84	; 0x54
    f990:	cmp	r2, #0
    f994:	mov	r2, #84	; 0x54
    f998:	movweq	r2, #60	; 0x3c
    f99c:	addeq	r3, r1, #60	; 0x3c
    f9a0:	ldr	r1, [r1, r2]
    f9a4:	str	r0, [r3]
    f9a8:	cmp	r1, #0
    f9ac:	bne	f988 <gen_portrange6+0x218>
    f9b0:	ldr	r0, [r4, #44]	; 0x2c
    f9b4:	cmp	r5, #0
    f9b8:	clz	r0, r0
    f9bc:	lsr	r0, r0, #5
    f9c0:	str	r0, [r4, #44]	; 0x2c
    f9c4:	ldr	r1, [r5, #44]	; 0x2c
    f9c8:	clz	r0, r1
    f9cc:	lsr	r0, r0, #5
    f9d0:	str	r0, [r5, #44]	; 0x2c
    f9d4:	str	r5, [sp, #4]
    f9d8:	beq	fa24 <gen_portrange6+0x2b4>
    f9dc:	cmp	r1, #0
    f9e0:	mov	r1, #60	; 0x3c
    f9e4:	add	r0, r5, #60	; 0x3c
    f9e8:	movweq	r1, #84	; 0x54
    f9ec:	addeq	r0, r5, #84	; 0x54
    f9f0:	ldr	r1, [r5, r1]
    f9f4:	cmp	r1, #0
    f9f8:	beq	fa28 <gen_portrange6+0x2b8>
    f9fc:	ldr	r2, [r1, #44]	; 0x2c
    fa00:	add	r0, r1, #84	; 0x54
    fa04:	cmp	r2, #0
    fa08:	mov	r2, #84	; 0x54
    fa0c:	movweq	r2, #60	; 0x3c
    fa10:	addeq	r0, r1, #60	; 0x3c
    fa14:	ldr	r1, [r1, r2]
    fa18:	cmp	r1, #0
    fa1c:	bne	f9fc <gen_portrange6+0x28c>
    fa20:	b	fa28 <gen_portrange6+0x2b8>
    fa24:	add	r0, sp, #4
    fa28:	str	r4, [r0]
    fa2c:	ldr	r0, [r5, #44]	; 0x2c
    fa30:	clz	r0, r0
    fa34:	lsr	r0, r0, #5
    fa38:	str	r0, [r5, #44]	; 0x2c
    fa3c:	ldr	r0, [r4, #96]	; 0x60
    fa40:	str	r0, [r6]
    fa44:	mov	r0, r5
    fa48:	sub	sp, fp, #28
    fa4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000fa50 <lookup_proto>:
    fa50:	push	{r4, sl, fp, lr}
    fa54:	add	fp, sp, #8
    fa58:	mov	r4, r0
    fa5c:	mvn	r0, #0
    fa60:	cmp	r1, #24
    fa64:	bhi	fae8 <lookup_proto+0x98>
    fa68:	add	r2, pc, #4
    fa6c:	ldr	r1, [r2, r1, lsl #2]
    fa70:	add	pc, r2, r1
    fa74:	.word	0x00000064
    fa78:	.word	0x00000078
    fa7c:	.word	0x00000064
    fa80:	.word	0x00000074
    fa84:	.word	0x00000074
    fa88:	.word	0x00000074
    fa8c:	.word	0x00000074
    fa90:	.word	0x00000074
    fa94:	.word	0x00000074
    fa98:	.word	0x00000074
    fa9c:	.word	0x00000074
    faa0:	.word	0x00000074
    faa4:	.word	0x00000074
    faa8:	.word	0x00000074
    faac:	.word	0x00000074
    fab0:	.word	0x00000074
    fab4:	.word	0x00000074
    fab8:	.word	0x00000064
    fabc:	.word	0x00000074
    fac0:	.word	0x00000074
    fac4:	.word	0x00000074
    fac8:	.word	0x00000074
    facc:	.word	0x00000074
    fad0:	.word	0x00000074
    fad4:	.word	0x000000a8
    fad8:	mov	r0, r4
    fadc:	bl	1f0c4 <pcap_nametoproto>
    fae0:	cmn	r0, #1
    fae4:	beq	fb8c <lookup_proto+0x13c>
    fae8:	pop	{r4, sl, fp, pc}
    faec:	mov	r0, r4
    faf0:	bl	1f0e0 <pcap_nametoeproto>
    faf4:	cmn	r0, #1
    faf8:	bne	fae8 <lookup_proto+0x98>
    fafc:	mov	r0, r4
    fb00:	bl	1f14c <pcap_nametollc>
    fb04:	cmn	r0, #1
    fb08:	bne	fae8 <lookup_proto+0x98>
    fb0c:	ldr	r0, [pc, #140]	; fba0 <lookup_proto+0x150>
    fb10:	mov	r1, r4
    fb14:	add	r0, pc, r0
    fb18:	bl	214c <sf_bpf_error>
    fb1c:	ldr	r1, [pc, #128]	; fba4 <lookup_proto+0x154>
    fb20:	mov	r0, r4
    fb24:	add	r1, pc, r1
    fb28:	bl	d68 <strcmp@plt>
    fb2c:	cmp	r0, #0
    fb30:	beq	fb7c <lookup_proto+0x12c>
    fb34:	ldr	r1, [pc, #108]	; fba8 <lookup_proto+0x158>
    fb38:	mov	r0, r4
    fb3c:	add	r1, pc, r1
    fb40:	bl	d68 <strcmp@plt>
    fb44:	cmp	r0, #0
    fb48:	beq	fb84 <lookup_proto+0x134>
    fb4c:	ldr	r1, [pc, #88]	; fbac <lookup_proto+0x15c>
    fb50:	mov	r0, r4
    fb54:	add	r1, pc, r1
    fb58:	bl	d68 <strcmp@plt>
    fb5c:	mov	r1, r0
    fb60:	mov	r0, #129	; 0x81
    fb64:	cmp	r1, #0
    fb68:	popeq	{r4, sl, fp, pc}
    fb6c:	ldr	r0, [pc, #60]	; fbb0 <lookup_proto+0x160>
    fb70:	mov	r1, r4
    fb74:	add	r0, pc, r0
    fb78:	bl	214c <sf_bpf_error>
    fb7c:	mov	r0, #130	; 0x82
    fb80:	pop	{r4, sl, fp, pc}
    fb84:	mov	r0, #131	; 0x83
    fb88:	pop	{r4, sl, fp, pc}
    fb8c:	ldr	r0, [pc, #8]	; fb9c <lookup_proto+0x14c>
    fb90:	mov	r1, r4
    fb94:	add	r0, pc, r0
    fb98:	bl	214c <sf_bpf_error>
    fb9c:	.word	0x0001a85b
    fba0:	.word	0x0001a8f1
    fba4:	.word	0x0001a8fa
    fba8:	.word	0x0001a8e7
    fbac:	.word	0x0001a8d4
    fbb0:	.word	0x0001a8b9

0000fbb4 <gen_protochain>:
    fbb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fbb8:	add	fp, sp, #28
    fbbc:	sub	sp, sp, #436	; 0x1b4
    fbc0:	mov	r9, r1
    fbc4:	mov	r8, r0
    fbc8:	bl	1305c <alloc_reg>
    fbcc:	str	r0, [sp, #20]
    fbd0:	add	r0, sp, #24
    fbd4:	mov	r1, #0
    fbd8:	mov	r2, #400	; 0x190
    fbdc:	bl	ea0 <memset@plt>
    fbe0:	cmp	r9, #17
    fbe4:	cmpne	r9, #2
    fbe8:	bne	fd3c <gen_protochain+0x188>
    fbec:	ldr	sl, [pc, #4044]	; 10bc0 <gen_protochain+0x100c>
    fbf0:	add	sl, pc, sl
    fbf4:	ldr	r0, [sl, #36]	; 0x24
    fbf8:	sub	r1, r0, #105	; 0x69
    fbfc:	cmp	r1, #22
    fc00:	bhi	fc18 <gen_protochain+0x64>
    fc04:	movw	r3, #16385	; 0x4001
    fc08:	mov	r2, #1
    fc0c:	movt	r3, #64	; 0x40
    fc10:	tst	r3, r2, lsl r1
    fc14:	bne	fc24 <gen_protochain+0x70>
    fc18:	cmp	r0, #192	; 0xc0
    fc1c:	cmpne	r0, #163	; 0xa3
    fc20:	bne	fc30 <gen_protochain+0x7c>
    fc24:	ldr	r0, [pc, #3992]	; 10bc4 <gen_protochain+0x1010>
    fc28:	add	r0, pc, r0
    fc2c:	bl	214c <sf_bpf_error>
    fc30:	ldr	r0, [pc, #3984]	; 10bc8 <gen_protochain+0x1014>
    fc34:	mov	r1, #1
    fc38:	add	r0, pc, r0
    fc3c:	str	r1, [r0]
    fc40:	ldr	r0, [sl, #92]	; 0x5c
    fc44:	ldr	r5, [pc, #3968]	; 10bcc <gen_protochain+0x1018>
    fc48:	add	r5, pc, r5
    fc4c:	ldr	r4, [r5, r0, lsl #3]!
    fc50:	cmp	r4, #19
    fc54:	bhi	fca0 <gen_protochain+0xec>
    fc58:	add	r1, r0, #1
    fc5c:	cmp	r0, #15
    fc60:	str	r1, [sl, #92]	; 0x5c
    fc64:	bge	114f0 <gen_protochain+0x193c>
    fc68:	mov	r0, #1024	; 0x400
    fc6c:	lsl	r4, r0, r1
    fc70:	mov	r0, r4
    fc74:	bl	e34 <malloc@plt>
    fc78:	cmp	r0, #0
    fc7c:	str	r0, [r5, #12]
    fc80:	beq	114f0 <gen_protochain+0x193c>
    fc84:	mov	r1, #0
    fc88:	mov	r2, r4
    fc8c:	add	r5, r5, #8
    fc90:	bl	ea0 <memset@plt>
    fc94:	cmp	r4, #19
    fc98:	str	r4, [r5]
    fc9c:	bls	114f0 <gen_protochain+0x193c>
    fca0:	sub	r0, r4, #20
    fca4:	mov	r2, #0
    fca8:	cmp	r9, #17
    fcac:	str	r0, [r5]
    fcb0:	ldr	r1, [r5, #4]
    fcb4:	str	r2, [r1, r0]!
    fcb8:	str	r9, [sp, #4]
    fcbc:	str	r1, [sp, #24]
    fcc0:	beq	fdb0 <gen_protochain+0x1fc>
    fcc4:	cmp	r9, #2
    fcc8:	bne	11508 <gen_protochain+0x1954>
    fccc:	mov	r0, #2048	; 0x800
    fcd0:	bl	6fb4 <gen_linktype>
    fcd4:	str	r0, [sp, #8]
    fcd8:	ldr	r0, [sl, #92]	; 0x5c
    fcdc:	ldr	r5, [pc, #3960]	; 10c5c <gen_protochain+0x10a8>
    fce0:	add	r5, pc, r5
    fce4:	ldr	r6, [r5, r0, lsl #3]!
    fce8:	cmp	r6, #19
    fcec:	bhi	fe80 <gen_protochain+0x2cc>
    fcf0:	add	r4, r0, #1
    fcf4:	cmp	r0, #15
    fcf8:	str	r4, [sl, #92]	; 0x5c
    fcfc:	bge	114f0 <gen_protochain+0x193c>
    fd00:	mov	r0, #1024	; 0x400
    fd04:	lsl	r6, r0, r4
    fd08:	mov	r0, r6
    fd0c:	bl	e34 <malloc@plt>
    fd10:	cmp	r0, #0
    fd14:	str	r0, [r5, #12]
    fd18:	beq	114f0 <gen_protochain+0x193c>
    fd1c:	mov	r1, #0
    fd20:	mov	r2, r6
    fd24:	add	r5, r5, #8
    fd28:	bl	ea0 <memset@plt>
    fd2c:	cmp	r6, #19
    fd30:	str	r6, [r5]
    fd34:	bhi	fe84 <gen_protochain+0x2d0>
    fd38:	b	114f0 <gen_protochain+0x193c>
    fd3c:	cmp	r9, #0
    fd40:	bne	114fc <gen_protochain+0x1948>
    fd44:	mov	r0, r8
    fd48:	mov	r1, #2
    fd4c:	bl	fbb4 <gen_protochain>
    fd50:	mov	r4, r0
    fd54:	mov	r0, r8
    fd58:	mov	r1, #17
    fd5c:	bl	fbb4 <gen_protochain>
    fd60:	ldr	r1, [r4, #44]	; 0x2c
    fd64:	cmp	r4, #0
    fd68:	clz	r1, r1
    fd6c:	lsr	r3, r1, #5
    fd70:	mov	r1, r0
    fd74:	str	r3, [r4, #44]	; 0x2c
    fd78:	ldr	r2, [r1, #96]!	; 0x60
    fd7c:	beq	fe24 <gen_protochain+0x270>
    fd80:	mov	r7, r4
    fd84:	cmp	r3, #0
    fd88:	mov	r3, #84	; 0x54
    fd8c:	add	r6, r7, #84	; 0x54
    fd90:	movweq	r3, #60	; 0x3c
    fd94:	addeq	r6, r7, #60	; 0x3c
    fd98:	ldr	r7, [r7, r3]
    fd9c:	str	r2, [r6]
    fda0:	cmp	r7, #0
    fda4:	beq	fe20 <gen_protochain+0x26c>
    fda8:	ldr	r3, [r7, #44]	; 0x2c
    fdac:	b	fd84 <gen_protochain+0x1d0>
    fdb0:	movw	r0, #34525	; 0x86dd
    fdb4:	bl	6fb4 <gen_linktype>
    fdb8:	str	r0, [sp, #8]
    fdbc:	ldr	r0, [sl, #92]	; 0x5c
    fdc0:	ldr	r5, [pc, #4024]	; 10d80 <gen_protochain+0x11cc>
    fdc4:	add	r5, pc, r5
    fdc8:	ldr	r6, [r5, r0, lsl #3]!
    fdcc:	cmp	r6, #19
    fdd0:	bhi	ff2c <gen_protochain+0x378>
    fdd4:	add	r4, r0, #1
    fdd8:	cmp	r0, #15
    fddc:	str	r4, [sl, #92]	; 0x5c
    fde0:	bge	114f0 <gen_protochain+0x193c>
    fde4:	mov	r0, #1024	; 0x400
    fde8:	lsl	r6, r0, r4
    fdec:	mov	r0, r6
    fdf0:	bl	e34 <malloc@plt>
    fdf4:	cmp	r0, #0
    fdf8:	str	r0, [r5, #12]
    fdfc:	beq	114f0 <gen_protochain+0x193c>
    fe00:	mov	r1, #0
    fe04:	mov	r2, r6
    fe08:	add	r5, r5, #8
    fe0c:	bl	ea0 <memset@plt>
    fe10:	cmp	r6, #19
    fe14:	str	r6, [r5]
    fe18:	bhi	ff30 <gen_protochain+0x37c>
    fe1c:	b	114f0 <gen_protochain+0x193c>
    fe20:	ldr	r3, [r4, #44]	; 0x2c
    fe24:	clz	r2, r3
    fe28:	cmp	r0, #0
    fe2c:	lsr	r2, r2, #5
    fe30:	str	r2, [r4, #44]	; 0x2c
    fe34:	str	r0, [fp, #-36]	; 0xffffffdc
    fe38:	beq	fe68 <gen_protochain+0x2b4>
    fe3c:	mov	r3, r0
    fe40:	ldr	r7, [r3, #44]	; 0x2c
    fe44:	add	r2, r3, #84	; 0x54
    fe48:	cmp	r7, #0
    fe4c:	mov	r7, #84	; 0x54
    fe50:	movweq	r7, #60	; 0x3c
    fe54:	addeq	r2, r3, #60	; 0x3c
    fe58:	ldr	r3, [r3, r7]
    fe5c:	cmp	r3, #0
    fe60:	bne	fe40 <gen_protochain+0x28c>
    fe64:	b	fe6c <gen_protochain+0x2b8>
    fe68:	sub	r2, fp, #36	; 0x24
    fe6c:	str	r4, [r2]
    fe70:	ldr	r2, [r4, #96]	; 0x60
    fe74:	str	r2, [r1]
    fe78:	sub	sp, fp, #28
    fe7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fe80:	mov	r4, r0
    fe84:	sub	r0, r6, #20
    fe88:	mov	r2, #48	; 0x30
    fe8c:	str	r0, [r5]
    fe90:	ldr	r1, [r5, #4]
    fe94:	str	r2, [r1, r0]!
    fe98:	ldr	r0, [sl, #44]	; 0x2c
    fe9c:	ldr	r2, [sl, #48]	; 0x30
    fea0:	str	r1, [sp, #28]
    fea4:	add	r9, r2, r0
    fea8:	str	r0, [sp, #16]
    feac:	str	r2, [sp, #12]
    feb0:	add	r0, r9, #9
    feb4:	str	r0, [r1, #12]
    feb8:	ldr	r7, [pc, #4076]	; 10eac <gen_protochain+0x12f8>
    febc:	add	r7, pc, r7
    fec0:	ldr	r6, [r7, r4, lsl #3]!
    fec4:	cmp	r6, #19
    fec8:	bhi	ff1c <gen_protochain+0x368>
    fecc:	mov	r0, sl
    fed0:	add	sl, r4, #1
    fed4:	cmp	r4, #15
    fed8:	str	sl, [r0, #92]	; 0x5c
    fedc:	bge	114f0 <gen_protochain+0x193c>
    fee0:	mov	r0, #1024	; 0x400
    fee4:	lsl	r6, r0, sl
    fee8:	mov	r0, r6
    feec:	bl	e34 <malloc@plt>
    fef0:	cmp	r0, #0
    fef4:	str	r0, [r7, #12]
    fef8:	beq	114f0 <gen_protochain+0x193c>
    fefc:	mov	r1, #0
    ff00:	mov	r2, r6
    ff04:	add	r7, r7, #8
    ff08:	bl	ea0 <memset@plt>
    ff0c:	cmp	r6, #19
    ff10:	str	r6, [r7]
    ff14:	bhi	ff20 <gen_protochain+0x36c>
    ff18:	b	114f0 <gen_protochain+0x193c>
    ff1c:	mov	sl, r4
    ff20:	sub	r0, r6, #20
    ff24:	mov	r1, #177	; 0xb1
    ff28:	b	ffd8 <gen_protochain+0x424>
    ff2c:	mov	r4, r0
    ff30:	sub	r0, r6, #20
    ff34:	mov	r2, #48	; 0x30
    ff38:	str	r0, [r5]
    ff3c:	ldr	r1, [r5, #4]
    ff40:	str	r2, [r1, r0]!
    ff44:	ldr	r0, [sl, #44]	; 0x2c
    ff48:	ldr	r2, [sl, #48]	; 0x30
    ff4c:	str	r1, [sp, #28]
    ff50:	str	r0, [sp, #16]
    ff54:	add	r0, r0, r2
    ff58:	str	r2, [sp, #12]
    ff5c:	add	r0, r0, #6
    ff60:	str	r0, [r1, #12]
    ff64:	ldr	r7, [pc, #4044]	; 10f38 <gen_protochain+0x1384>
    ff68:	add	r7, pc, r7
    ff6c:	ldr	r6, [r7, r4, lsl #3]!
    ff70:	cmp	r6, #19
    ff74:	bhi	ffc8 <gen_protochain+0x414>
    ff78:	mov	r0, sl
    ff7c:	add	sl, r4, #1
    ff80:	cmp	r4, #15
    ff84:	str	sl, [r0, #92]	; 0x5c
    ff88:	bge	114f0 <gen_protochain+0x193c>
    ff8c:	mov	r0, #1024	; 0x400
    ff90:	lsl	r6, r0, sl
    ff94:	mov	r0, r6
    ff98:	bl	e34 <malloc@plt>
    ff9c:	cmp	r0, #0
    ffa0:	str	r0, [r7, #12]
    ffa4:	beq	114f0 <gen_protochain+0x193c>
    ffa8:	mov	r1, #0
    ffac:	mov	r2, r6
    ffb0:	add	r7, r7, #8
    ffb4:	bl	ea0 <memset@plt>
    ffb8:	cmp	r6, #19
    ffbc:	str	r6, [r7]
    ffc0:	bhi	ffcc <gen_protochain+0x418>
    ffc4:	b	114f0 <gen_protochain+0x193c>
    ffc8:	mov	sl, r4
    ffcc:	sub	r0, r6, #20
    ffd0:	mov	r9, #40	; 0x28
    ffd4:	mov	r1, #1
    ffd8:	str	r0, [r7]
    ffdc:	ldr	r2, [r7, #4]
    ffe0:	str	r1, [r2, r0]!
    ffe4:	str	r2, [sp, #32]
    ffe8:	str	r9, [r2, #12]
    ffec:	ldr	r5, [pc, #4052]	; 10fc8 <gen_protochain+0x1414>
    fff0:	add	r5, pc, r5
    fff4:	ldr	r6, [r5, sl, lsl #3]!
    fff8:	cmp	r6, #19
    fffc:	bhi	10054 <gen_protochain+0x4a0>
   10000:	ldr	r0, [pc, #4036]	; 10fcc <gen_protochain+0x1418>
   10004:	add	r4, sl, #1
   10008:	cmp	sl, #15
   1000c:	add	r0, pc, r0
   10010:	str	r4, [r0, #92]	; 0x5c
   10014:	bge	114f0 <gen_protochain+0x193c>
   10018:	mov	r0, #1024	; 0x400
   1001c:	lsl	r6, r0, r4
   10020:	mov	r0, r6
   10024:	bl	e34 <malloc@plt>
   10028:	cmp	r0, #0
   1002c:	str	r0, [r5, #12]
   10030:	beq	114f0 <gen_protochain+0x193c>
   10034:	mov	r1, #0
   10038:	mov	r2, r6
   1003c:	add	r5, r5, #8
   10040:	bl	ea0 <memset@plt>
   10044:	cmp	r6, #19
   10048:	str	r6, [r5]
   1004c:	bhi	10058 <gen_protochain+0x4a4>
   10050:	b	114f0 <gen_protochain+0x193c>
   10054:	mov	r4, sl
   10058:	sub	r0, r6, #20
   1005c:	mov	r9, #21
   10060:	mov	sl, #0
   10064:	str	r0, [r5]
   10068:	ldr	r1, [r5, #4]
   1006c:	str	r9, [r1, r0]!
   10070:	str	r1, [sp, #36]	; 0x24
   10074:	str	r8, [r1, #12]
   10078:	ldr	r0, [sp, #36]	; 0x24
   1007c:	str	sl, [r0, #4]
   10080:	ldr	r0, [sp, #36]	; 0x24
   10084:	str	sl, [r0, #8]
   10088:	ldr	r7, [pc, #4052]	; 11064 <gen_protochain+0x14b0>
   1008c:	add	r7, pc, r7
   10090:	ldr	r6, [r7, r4, lsl #3]!
   10094:	cmp	r6, #19
   10098:	bhi	100f0 <gen_protochain+0x53c>
   1009c:	ldr	r0, [pc, #4036]	; 11068 <gen_protochain+0x14b4>
   100a0:	add	r5, r4, #1
   100a4:	cmp	r4, #15
   100a8:	add	r0, pc, r0
   100ac:	str	r5, [r0, #92]	; 0x5c
   100b0:	bge	114f0 <gen_protochain+0x193c>
   100b4:	mov	r0, #1024	; 0x400
   100b8:	lsl	r6, r0, r5
   100bc:	mov	r0, r6
   100c0:	bl	e34 <malloc@plt>
   100c4:	cmp	r0, #0
   100c8:	str	r0, [r7, #12]
   100cc:	beq	114f0 <gen_protochain+0x193c>
   100d0:	mov	r1, #0
   100d4:	mov	r2, r6
   100d8:	add	r7, r7, #8
   100dc:	bl	ea0 <memset@plt>
   100e0:	cmp	r6, #19
   100e4:	str	r6, [r7]
   100e8:	bhi	100f4 <gen_protochain+0x540>
   100ec:	b	114f0 <gen_protochain+0x193c>
   100f0:	mov	r5, r4
   100f4:	sub	r0, r6, #20
   100f8:	str	r0, [r7]
   100fc:	ldr	r1, [r7, #4]
   10100:	str	r9, [r1, r0]!
   10104:	str	r1, [sp, #40]	; 0x28
   10108:	str	sl, [r1, #4]
   1010c:	mov	r1, #59	; 0x3b
   10110:	ldr	r0, [sp, #40]	; 0x28
   10114:	str	sl, [r0, #8]
   10118:	ldr	r0, [sp, #40]	; 0x28
   1011c:	str	r1, [r0, #12]
   10120:	ldr	r0, [sp, #36]	; 0x24
   10124:	ldr	r1, [sp, #40]	; 0x28
   10128:	str	r1, [r0, #8]
   1012c:	ldr	r7, [pc, #4044]	; 11100 <gen_protochain+0x154c>
   10130:	ldr	r0, [sp, #4]
   10134:	str	r8, [sp, #4]
   10138:	add	r7, pc, r7
   1013c:	cmp	r0, #17
   10140:	ldr	r6, [r7, r5, lsl #3]!
   10144:	bne	101a4 <gen_protochain+0x5f0>
   10148:	ldr	sl, [pc, #4020]	; 11104 <gen_protochain+0x1550>
   1014c:	cmp	r6, #19
   10150:	add	sl, pc, sl
   10154:	bhi	10208 <gen_protochain+0x654>
   10158:	add	r9, r5, #1
   1015c:	cmp	r5, #15
   10160:	str	r9, [sl, #92]	; 0x5c
   10164:	bge	114f0 <gen_protochain+0x193c>
   10168:	mov	r0, #1024	; 0x400
   1016c:	lsl	r6, r0, r9
   10170:	mov	r0, r6
   10174:	bl	e34 <malloc@plt>
   10178:	cmp	r0, #0
   1017c:	str	r0, [r7, #12]
   10180:	beq	114f0 <gen_protochain+0x193c>
   10184:	mov	r1, #0
   10188:	mov	r2, r6
   1018c:	add	r7, r7, #8
   10190:	bl	ea0 <memset@plt>
   10194:	cmp	r6, #19
   10198:	str	r6, [r7]
   1019c:	bhi	1020c <gen_protochain+0x658>
   101a0:	b	114f0 <gen_protochain+0x193c>
   101a4:	ldr	r0, [pc, #4072]	; 11194 <gen_protochain+0x15e0>
   101a8:	cmp	r6, #19
   101ac:	add	r0, pc, r0
   101b0:	bhi	102a8 <gen_protochain+0x6f4>
   101b4:	add	r9, r5, #1
   101b8:	cmp	r5, #15
   101bc:	str	r9, [r0, #92]	; 0x5c
   101c0:	ldr	r8, [pc, #4048]	; 11198 <gen_protochain+0x15e4>
   101c4:	add	r8, pc, r8
   101c8:	bge	114f0 <gen_protochain+0x193c>
   101cc:	mov	r0, #1024	; 0x400
   101d0:	lsl	r6, r0, r9
   101d4:	mov	r0, r6
   101d8:	bl	e34 <malloc@plt>
   101dc:	cmp	r0, #0
   101e0:	str	r0, [r7, #12]
   101e4:	beq	114f0 <gen_protochain+0x193c>
   101e8:	mov	r1, #0
   101ec:	mov	r2, r6
   101f0:	add	r7, r7, #8
   101f4:	bl	ea0 <memset@plt>
   101f8:	cmp	r6, #19
   101fc:	str	r6, [r7]
   10200:	bhi	102b4 <gen_protochain+0x700>
   10204:	b	114f0 <gen_protochain+0x193c>
   10208:	mov	r9, r5
   1020c:	sub	r0, r6, #20
   10210:	mov	r8, #21
   10214:	mov	r4, #0
   10218:	str	r0, [r7]
   1021c:	ldr	r1, [r7, #4]
   10220:	str	r8, [r1, r0]!
   10224:	str	r1, [sp, #44]	; 0x2c
   10228:	str	r4, [r1, #4]
   1022c:	ldr	r0, [sp, #44]	; 0x2c
   10230:	str	r4, [r0, #8]
   10234:	ldr	r0, [sp, #44]	; 0x2c
   10238:	str	r4, [r0, #12]
   1023c:	ldr	r0, [sp, #40]	; 0x28
   10240:	ldr	r1, [sp, #44]	; 0x2c
   10244:	str	r1, [r0, #8]
   10248:	ldr	r6, [pc, #4060]	; 1122c <gen_protochain+0x1678>
   1024c:	add	r6, pc, r6
   10250:	ldr	r5, [r6, r9, lsl #3]!
   10254:	cmp	r5, #19
   10258:	bhi	102ec <gen_protochain+0x738>
   1025c:	add	r7, r9, #1
   10260:	cmp	r9, #15
   10264:	str	r7, [sl, #92]	; 0x5c
   10268:	bge	114f0 <gen_protochain+0x193c>
   1026c:	mov	r0, #1024	; 0x400
   10270:	lsl	r5, r0, r7
   10274:	mov	r0, r5
   10278:	bl	e34 <malloc@plt>
   1027c:	cmp	r0, #0
   10280:	str	r0, [r6, #12]
   10284:	beq	114f0 <gen_protochain+0x193c>
   10288:	mov	r1, #0
   1028c:	mov	r2, r5
   10290:	add	r6, r6, #8
   10294:	bl	ea0 <memset@plt>
   10298:	cmp	r5, #19
   1029c:	str	r5, [r6]
   102a0:	bhi	102f0 <gen_protochain+0x73c>
   102a4:	b	114f0 <gen_protochain+0x193c>
   102a8:	ldr	r8, [pc, #3968]	; 11230 <gen_protochain+0x167c>
   102ac:	mov	r9, r5
   102b0:	add	r8, pc, r8
   102b4:	sub	r0, r6, #20
   102b8:	mov	r2, #4
   102bc:	mov	sl, #6
   102c0:	str	r0, [r7]
   102c4:	ldr	r1, [r7, #4]
   102c8:	mov	r7, #0
   102cc:	str	r2, [r1, r0]!
   102d0:	add	r0, sp, #24
   102d4:	str	r1, [sp, #44]	; 0x2c
   102d8:	str	r7, [r1, #12]
   102dc:	add	r0, r0, #20
   102e0:	ldr	r1, [sp, #40]	; 0x28
   102e4:	add	r1, r1, #8
   102e8:	b	10a9c <gen_protochain+0xee8>
   102ec:	mov	r7, r9
   102f0:	sub	r0, r5, #20
   102f4:	str	r0, [r6]
   102f8:	ldr	r1, [r6, #4]
   102fc:	str	r8, [r1, r0]!
   10300:	str	r1, [sp, #48]	; 0x30
   10304:	ldr	r0, [sp, #44]	; 0x2c
   10308:	str	r1, [r0, #8]
   1030c:	mov	r1, #60	; 0x3c
   10310:	ldr	r0, [sp, #48]	; 0x30
   10314:	str	r4, [r0, #4]
   10318:	ldr	r0, [sp, #48]	; 0x30
   1031c:	str	r4, [r0, #8]
   10320:	ldr	r0, [sp, #48]	; 0x30
   10324:	str	r1, [r0, #12]
   10328:	ldr	r4, [pc, #3996]	; 112cc <gen_protochain+0x1718>
   1032c:	add	r4, pc, r4
   10330:	ldr	r5, [r4, r7, lsl #3]!
   10334:	cmp	r5, #19
   10338:	bhi	10388 <gen_protochain+0x7d4>
   1033c:	add	r6, r7, #1
   10340:	cmp	r7, #15
   10344:	str	r6, [sl, #92]	; 0x5c
   10348:	bge	114f0 <gen_protochain+0x193c>
   1034c:	mov	r0, #1024	; 0x400
   10350:	lsl	r5, r0, r6
   10354:	mov	r0, r5
   10358:	bl	e34 <malloc@plt>
   1035c:	cmp	r0, #0
   10360:	str	r0, [r4, #12]
   10364:	beq	114f0 <gen_protochain+0x193c>
   10368:	mov	r1, #0
   1036c:	mov	r2, r5
   10370:	add	r4, r4, #8
   10374:	bl	ea0 <memset@plt>
   10378:	cmp	r5, #19
   1037c:	str	r5, [r4]
   10380:	bhi	1038c <gen_protochain+0x7d8>
   10384:	b	114f0 <gen_protochain+0x193c>
   10388:	mov	r6, r7
   1038c:	sub	r0, r5, #20
   10390:	mov	r9, #21
   10394:	mov	r8, #0
   10398:	str	r0, [r4]
   1039c:	ldr	r1, [r4, #4]
   103a0:	str	r9, [r1, r0]!
   103a4:	str	r1, [sp, #52]	; 0x34
   103a8:	ldr	r0, [sp, #48]	; 0x30
   103ac:	str	r1, [r0, #8]
   103b0:	mov	r1, #43	; 0x2b
   103b4:	ldr	r0, [sp, #52]	; 0x34
   103b8:	str	r8, [r0, #4]
   103bc:	ldr	r0, [sp, #52]	; 0x34
   103c0:	str	r8, [r0, #8]
   103c4:	ldr	r0, [sp, #52]	; 0x34
   103c8:	str	r1, [r0, #12]
   103cc:	ldr	r7, [pc, #3836]	; 112d0 <gen_protochain+0x171c>
   103d0:	add	r7, pc, r7
   103d4:	ldr	r5, [r7, r6, lsl #3]!
   103d8:	cmp	r5, #19
   103dc:	bhi	1042c <gen_protochain+0x878>
   103e0:	add	r4, r6, #1
   103e4:	cmp	r6, #15
   103e8:	str	r4, [sl, #92]	; 0x5c
   103ec:	bge	114f0 <gen_protochain+0x193c>
   103f0:	mov	r0, #1024	; 0x400
   103f4:	lsl	r5, r0, r4
   103f8:	mov	r0, r5
   103fc:	bl	e34 <malloc@plt>
   10400:	cmp	r0, #0
   10404:	str	r0, [r7, #12]
   10408:	beq	114f0 <gen_protochain+0x193c>
   1040c:	mov	r1, #0
   10410:	mov	r2, r5
   10414:	add	r7, r7, #8
   10418:	bl	ea0 <memset@plt>
   1041c:	cmp	r5, #19
   10420:	str	r5, [r7]
   10424:	bhi	10430 <gen_protochain+0x87c>
   10428:	b	114f0 <gen_protochain+0x193c>
   1042c:	mov	r4, r6
   10430:	sub	r0, r5, #20
   10434:	str	r0, [r7]
   10438:	ldr	r1, [r7, #4]
   1043c:	str	r9, [r1, r0]!
   10440:	str	r1, [sp, #56]	; 0x38
   10444:	ldr	r0, [sp, #52]	; 0x34
   10448:	str	r1, [r0, #8]
   1044c:	mov	r1, #44	; 0x2c
   10450:	ldr	r0, [sp, #56]	; 0x38
   10454:	str	r8, [r0, #4]
   10458:	ldr	r0, [sp, #56]	; 0x38
   1045c:	str	r8, [r0, #8]
   10460:	ldr	r0, [sp, #56]	; 0x38
   10464:	str	r1, [r0, #12]
   10468:	ldr	r8, [pc, #3684]	; 112d4 <gen_protochain+0x1720>
   1046c:	add	r8, pc, r8
   10470:	mov	r7, r8
   10474:	ldr	r5, [r7, r4, lsl #3]!
   10478:	cmp	r5, #19
   1047c:	bhi	104cc <gen_protochain+0x918>
   10480:	add	r6, r4, #1
   10484:	cmp	r4, #15
   10488:	str	r6, [sl, #92]	; 0x5c
   1048c:	bge	114f0 <gen_protochain+0x193c>
   10490:	mov	r0, #1024	; 0x400
   10494:	lsl	r5, r0, r6
   10498:	mov	r0, r5
   1049c:	bl	e34 <malloc@plt>
   104a0:	cmp	r0, #0
   104a4:	str	r0, [r7, #12]
   104a8:	beq	114f0 <gen_protochain+0x193c>
   104ac:	mov	r1, #0
   104b0:	mov	r2, r5
   104b4:	add	r7, r7, #8
   104b8:	bl	ea0 <memset@plt>
   104bc:	cmp	r5, #19
   104c0:	str	r5, [r7]
   104c4:	bhi	104d0 <gen_protochain+0x91c>
   104c8:	b	114f0 <gen_protochain+0x193c>
   104cc:	mov	r6, r4
   104d0:	sub	r0, r5, #20
   104d4:	mov	r2, #135	; 0x87
   104d8:	mov	r4, r8
   104dc:	str	r0, [r7]
   104e0:	ldr	r1, [r7, #4]
   104e4:	str	r2, [r1, r0]!
   104e8:	ldr	r5, [r4, r6, lsl #3]!
   104ec:	str	r1, [sp, #60]	; 0x3c
   104f0:	cmp	r5, #19
   104f4:	bhi	10544 <gen_protochain+0x990>
   104f8:	add	r7, r6, #1
   104fc:	cmp	r6, #15
   10500:	str	r7, [sl, #92]	; 0x5c
   10504:	bge	114f0 <gen_protochain+0x193c>
   10508:	mov	r0, #1024	; 0x400
   1050c:	lsl	r5, r0, r7
   10510:	mov	r0, r5
   10514:	bl	e34 <malloc@plt>
   10518:	cmp	r0, #0
   1051c:	str	r0, [r4, #12]
   10520:	beq	114f0 <gen_protochain+0x193c>
   10524:	mov	r1, #0
   10528:	mov	r2, r5
   1052c:	add	r4, r4, #8
   10530:	bl	ea0 <memset@plt>
   10534:	cmp	r5, #19
   10538:	str	r5, [r4]
   1053c:	bhi	10548 <gen_protochain+0x994>
   10540:	b	114f0 <gen_protochain+0x193c>
   10544:	mov	r7, r6
   10548:	sub	r0, r5, #20
   1054c:	mov	r2, #80	; 0x50
   10550:	mov	r6, r8
   10554:	str	r0, [r4]
   10558:	ldr	r1, [r4, #4]
   1055c:	str	r2, [r1, r0]!
   10560:	ldr	r0, [sp, #16]
   10564:	ldr	r2, [sp, #12]
   10568:	str	r1, [sp, #64]	; 0x40
   1056c:	add	r9, r2, r0
   10570:	str	r9, [r1, #12]
   10574:	ldr	r5, [r6, r7, lsl #3]!
   10578:	cmp	r5, #19
   1057c:	bhi	105cc <gen_protochain+0xa18>
   10580:	add	r4, r7, #1
   10584:	cmp	r7, #15
   10588:	str	r4, [sl, #92]	; 0x5c
   1058c:	bge	114f0 <gen_protochain+0x193c>
   10590:	mov	r0, #1024	; 0x400
   10594:	lsl	r5, r0, r4
   10598:	mov	r0, r5
   1059c:	bl	e34 <malloc@plt>
   105a0:	cmp	r0, #0
   105a4:	str	r0, [r6, #12]
   105a8:	beq	114f0 <gen_protochain+0x193c>
   105ac:	mov	r1, #0
   105b0:	mov	r2, r5
   105b4:	add	r6, r6, #8
   105b8:	bl	ea0 <memset@plt>
   105bc:	cmp	r5, #19
   105c0:	str	r5, [r6]
   105c4:	bhi	105d0 <gen_protochain+0xa1c>
   105c8:	b	114f0 <gen_protochain+0x193c>
   105cc:	mov	r4, r7
   105d0:	sub	r0, r5, #20
   105d4:	mov	r2, #2
   105d8:	str	r0, [r6]
   105dc:	ldr	r1, [r6, #4]
   105e0:	mov	r6, r8
   105e4:	str	r2, [r1, r0]!
   105e8:	ldr	r0, [sp, #20]
   105ec:	str	r1, [sp, #68]	; 0x44
   105f0:	str	r0, [r1, #12]
   105f4:	ldr	r5, [r6, r4, lsl #3]!
   105f8:	cmp	r5, #19
   105fc:	bhi	1064c <gen_protochain+0xa98>
   10600:	add	r7, r4, #1
   10604:	cmp	r4, #15
   10608:	str	r7, [sl, #92]	; 0x5c
   1060c:	bge	114f0 <gen_protochain+0x193c>
   10610:	mov	r0, #1024	; 0x400
   10614:	lsl	r5, r0, r7
   10618:	mov	r0, r5
   1061c:	bl	e34 <malloc@plt>
   10620:	cmp	r0, #0
   10624:	str	r0, [r6, #12]
   10628:	beq	114f0 <gen_protochain+0x193c>
   1062c:	mov	r1, #0
   10630:	mov	r2, r5
   10634:	add	r6, r6, #8
   10638:	bl	ea0 <memset@plt>
   1063c:	cmp	r5, #19
   10640:	str	r5, [r6]
   10644:	bhi	10650 <gen_protochain+0xa9c>
   10648:	b	114f0 <gen_protochain+0x193c>
   1064c:	mov	r7, r4
   10650:	sub	r0, r5, #20
   10654:	mov	r2, #135	; 0x87
   10658:	mov	r4, r8
   1065c:	str	r0, [r6]
   10660:	ldr	r1, [r6, #4]
   10664:	str	r2, [r1, r0]!
   10668:	ldr	r5, [r4, r7, lsl #3]!
   1066c:	str	r1, [sp, #72]	; 0x48
   10670:	cmp	r5, #19
   10674:	bhi	106c4 <gen_protochain+0xb10>
   10678:	add	r6, r7, #1
   1067c:	cmp	r7, #15
   10680:	str	r6, [sl, #92]	; 0x5c
   10684:	bge	114f0 <gen_protochain+0x193c>
   10688:	mov	r0, #1024	; 0x400
   1068c:	lsl	r5, r0, r6
   10690:	mov	r0, r5
   10694:	bl	e34 <malloc@plt>
   10698:	cmp	r0, #0
   1069c:	str	r0, [r4, #12]
   106a0:	beq	114f0 <gen_protochain+0x193c>
   106a4:	mov	r1, #0
   106a8:	mov	r2, r5
   106ac:	add	r4, r4, #8
   106b0:	bl	ea0 <memset@plt>
   106b4:	cmp	r5, #19
   106b8:	str	r5, [r4]
   106bc:	bhi	106c8 <gen_protochain+0xb14>
   106c0:	b	114f0 <gen_protochain+0x193c>
   106c4:	mov	r6, r7
   106c8:	sub	r0, r5, #20
   106cc:	mov	r2, #4
   106d0:	mov	r7, r8
   106d4:	str	r0, [r4]
   106d8:	ldr	r1, [r4, #4]
   106dc:	str	r2, [r1, r0]!
   106e0:	mov	r0, #1
   106e4:	str	r1, [sp, #76]	; 0x4c
   106e8:	str	r0, [r1, #12]
   106ec:	ldr	r5, [r7, r6, lsl #3]!
   106f0:	cmp	r5, #19
   106f4:	bhi	10744 <gen_protochain+0xb90>
   106f8:	add	r4, r6, #1
   106fc:	cmp	r6, #15
   10700:	str	r4, [sl, #92]	; 0x5c
   10704:	bge	114f0 <gen_protochain+0x193c>
   10708:	mov	r0, #1024	; 0x400
   1070c:	lsl	r5, r0, r4
   10710:	mov	r0, r5
   10714:	bl	e34 <malloc@plt>
   10718:	cmp	r0, #0
   1071c:	str	r0, [r7, #12]
   10720:	beq	114f0 <gen_protochain+0x193c>
   10724:	mov	r1, #0
   10728:	mov	r2, r5
   1072c:	add	r7, r7, #8
   10730:	bl	ea0 <memset@plt>
   10734:	cmp	r5, #19
   10738:	str	r5, [r7]
   1073c:	bhi	10748 <gen_protochain+0xb94>
   10740:	b	114f0 <gen_protochain+0x193c>
   10744:	mov	r4, r6
   10748:	sub	r0, r5, #20
   1074c:	mov	r2, #7
   10750:	mov	r6, r8
   10754:	str	r0, [r7]
   10758:	ldr	r1, [r7, #4]
   1075c:	str	r2, [r1, r0]!
   10760:	ldr	r5, [r6, r4, lsl #3]!
   10764:	str	r1, [sp, #80]	; 0x50
   10768:	cmp	r5, #19
   1076c:	bhi	107bc <gen_protochain+0xc08>
   10770:	add	r7, r4, #1
   10774:	cmp	r4, #15
   10778:	str	r7, [sl, #92]	; 0x5c
   1077c:	bge	114f0 <gen_protochain+0x193c>
   10780:	mov	r0, #1024	; 0x400
   10784:	lsl	r5, r0, r7
   10788:	mov	r0, r5
   1078c:	bl	e34 <malloc@plt>
   10790:	cmp	r0, #0
   10794:	str	r0, [r6, #12]
   10798:	beq	114f0 <gen_protochain+0x193c>
   1079c:	mov	r1, #0
   107a0:	mov	r2, r5
   107a4:	add	r6, r6, #8
   107a8:	bl	ea0 <memset@plt>
   107ac:	cmp	r5, #19
   107b0:	str	r5, [r6]
   107b4:	bhi	107c0 <gen_protochain+0xc0c>
   107b8:	b	114f0 <gen_protochain+0x193c>
   107bc:	mov	r7, r4
   107c0:	sub	r0, r5, #20
   107c4:	mov	r2, #80	; 0x50
   107c8:	str	r0, [r6]
   107cc:	ldr	r1, [r6, #4]
   107d0:	mov	r6, r8
   107d4:	str	r2, [r1, r0]!
   107d8:	str	r1, [sp, #84]	; 0x54
   107dc:	str	r9, [r1, #12]
   107e0:	ldr	r5, [r6, r7, lsl #3]!
   107e4:	cmp	r5, #19
   107e8:	bhi	10838 <gen_protochain+0xc84>
   107ec:	add	r4, r7, #1
   107f0:	cmp	r7, #15
   107f4:	str	r4, [sl, #92]	; 0x5c
   107f8:	bge	114f0 <gen_protochain+0x193c>
   107fc:	mov	r0, #1024	; 0x400
   10800:	lsl	r5, r0, r4
   10804:	mov	r0, r5
   10808:	bl	e34 <malloc@plt>
   1080c:	cmp	r0, #0
   10810:	str	r0, [r6, #12]
   10814:	beq	114f0 <gen_protochain+0x193c>
   10818:	mov	r1, #0
   1081c:	mov	r2, r5
   10820:	add	r6, r6, #8
   10824:	bl	ea0 <memset@plt>
   10828:	cmp	r5, #19
   1082c:	str	r5, [r6]
   10830:	bhi	1083c <gen_protochain+0xc88>
   10834:	b	114f0 <gen_protochain+0x193c>
   10838:	mov	r4, r7
   1083c:	sub	r0, r5, #20
   10840:	mov	r2, #4
   10844:	mov	r7, r8
   10848:	str	r0, [r6]
   1084c:	ldr	r1, [r6, #4]
   10850:	str	r2, [r1, r0]!
   10854:	mov	r0, #1
   10858:	str	r1, [sp, #88]	; 0x58
   1085c:	str	r0, [r1, #12]
   10860:	ldr	r5, [r7, r4, lsl #3]!
   10864:	cmp	r5, #19
   10868:	bhi	108b8 <gen_protochain+0xd04>
   1086c:	add	r6, r4, #1
   10870:	cmp	r4, #15
   10874:	str	r6, [sl, #92]	; 0x5c
   10878:	bge	114f0 <gen_protochain+0x193c>
   1087c:	mov	r0, #1024	; 0x400
   10880:	lsl	r5, r0, r6
   10884:	mov	r0, r5
   10888:	bl	e34 <malloc@plt>
   1088c:	cmp	r0, #0
   10890:	str	r0, [r7, #12]
   10894:	beq	114f0 <gen_protochain+0x193c>
   10898:	mov	r1, #0
   1089c:	mov	r2, r5
   108a0:	add	r7, r7, #8
   108a4:	bl	ea0 <memset@plt>
   108a8:	cmp	r5, #19
   108ac:	str	r5, [r7]
   108b0:	bhi	108bc <gen_protochain+0xd08>
   108b4:	b	114f0 <gen_protochain+0x193c>
   108b8:	mov	r6, r4
   108bc:	sub	r0, r5, #20
   108c0:	mov	r2, #36	; 0x24
   108c4:	mov	r4, r8
   108c8:	str	r0, [r7]
   108cc:	ldr	r1, [r7, #4]
   108d0:	str	r2, [r1, r0]!
   108d4:	mov	r0, #8
   108d8:	str	r1, [sp, #92]	; 0x5c
   108dc:	str	r0, [r1, #12]
   108e0:	ldr	r5, [r4, r6, lsl #3]!
   108e4:	cmp	r5, #19
   108e8:	bhi	10938 <gen_protochain+0xd84>
   108ec:	add	r7, r6, #1
   108f0:	cmp	r6, #15
   108f4:	str	r7, [sl, #92]	; 0x5c
   108f8:	bge	114f0 <gen_protochain+0x193c>
   108fc:	mov	r0, #1024	; 0x400
   10900:	lsl	r5, r0, r7
   10904:	mov	r0, r5
   10908:	bl	e34 <malloc@plt>
   1090c:	cmp	r0, #0
   10910:	str	r0, [r4, #12]
   10914:	beq	114f0 <gen_protochain+0x193c>
   10918:	mov	r1, #0
   1091c:	mov	r2, r5
   10920:	add	r4, r4, #8
   10924:	bl	ea0 <memset@plt>
   10928:	cmp	r5, #19
   1092c:	str	r5, [r4]
   10930:	bhi	1093c <gen_protochain+0xd88>
   10934:	b	114f0 <gen_protochain+0x193c>
   10938:	mov	r7, r6
   1093c:	sub	r0, r5, #20
   10940:	mov	r2, #7
   10944:	mov	r6, r8
   10948:	str	r0, [r4]
   1094c:	ldr	r1, [r4, #4]
   10950:	str	r2, [r1, r0]!
   10954:	ldr	r5, [r6, r7, lsl #3]!
   10958:	str	r1, [sp, #96]	; 0x60
   1095c:	cmp	r5, #19
   10960:	bhi	109b0 <gen_protochain+0xdfc>
   10964:	add	r4, r7, #1
   10968:	cmp	r7, #15
   1096c:	str	r4, [sl, #92]	; 0x5c
   10970:	bge	114f0 <gen_protochain+0x193c>
   10974:	mov	r0, #1024	; 0x400
   10978:	lsl	r5, r0, r4
   1097c:	mov	r0, r5
   10980:	bl	e34 <malloc@plt>
   10984:	cmp	r0, #0
   10988:	str	r0, [r6, #12]
   1098c:	beq	114f0 <gen_protochain+0x193c>
   10990:	mov	r1, #0
   10994:	mov	r2, r5
   10998:	add	r6, r6, #8
   1099c:	bl	ea0 <memset@plt>
   109a0:	cmp	r5, #19
   109a4:	str	r5, [r6]
   109a8:	bhi	109b4 <gen_protochain+0xe00>
   109ac:	b	114f0 <gen_protochain+0x193c>
   109b0:	mov	r4, r7
   109b4:	sub	r0, r5, #20
   109b8:	mov	r2, #96	; 0x60
   109bc:	str	r0, [r6]
   109c0:	ldr	r1, [r6, #4]
   109c4:	mov	r6, r8
   109c8:	str	r2, [r1, r0]!
   109cc:	ldr	r0, [sp, #20]
   109d0:	str	r1, [sp, #100]	; 0x64
   109d4:	str	r0, [r1, #12]
   109d8:	ldr	r5, [r6, r4, lsl #3]!
   109dc:	cmp	r5, #19
   109e0:	bhi	10a30 <gen_protochain+0xe7c>
   109e4:	add	r9, r4, #1
   109e8:	cmp	r4, #15
   109ec:	str	r9, [sl, #92]	; 0x5c
   109f0:	bge	114f0 <gen_protochain+0x193c>
   109f4:	mov	r0, #1024	; 0x400
   109f8:	lsl	r5, r0, r9
   109fc:	mov	r0, r5
   10a00:	bl	e34 <malloc@plt>
   10a04:	cmp	r0, #0
   10a08:	str	r0, [r6, #12]
   10a0c:	beq	114f0 <gen_protochain+0x193c>
   10a10:	mov	r1, #0
   10a14:	mov	r2, r5
   10a18:	add	r6, r6, #8
   10a1c:	bl	ea0 <memset@plt>
   10a20:	cmp	r5, #19
   10a24:	str	r5, [r6]
   10a28:	bhi	10a34 <gen_protochain+0xe80>
   10a2c:	b	114f0 <gen_protochain+0x193c>
   10a30:	mov	r9, r4
   10a34:	sub	r1, r5, #20
   10a38:	mov	r3, #5
   10a3c:	add	r0, sp, #24
   10a40:	mov	r7, #8
   10a44:	mov	sl, #21
   10a48:	str	r1, [r6]
   10a4c:	add	r0, r0, #36	; 0x24
   10a50:	ldr	r2, [r6, #4]
   10a54:	str	r3, [r2, r1]!
   10a58:	mvn	r1, #17
   10a5c:	str	r2, [sp, #104]	; 0x68
   10a60:	str	r1, [r2, #12]
   10a64:	ldr	r1, [sp, #100]	; 0x64
   10a68:	ldr	r2, [sp, #104]	; 0x68
   10a6c:	str	r2, [r1, #8]
   10a70:	ldr	r1, [sp, #44]	; 0x2c
   10a74:	ldr	r2, [sp, #60]	; 0x3c
   10a78:	str	r2, [r1, #4]
   10a7c:	ldr	r1, [sp, #48]	; 0x30
   10a80:	ldr	r2, [sp, #60]	; 0x3c
   10a84:	str	r2, [r1, #4]
   10a88:	ldr	r1, [sp, #52]	; 0x34
   10a8c:	ldr	r2, [sp, #60]	; 0x3c
   10a90:	str	r2, [r1, #4]
   10a94:	ldr	r1, [sp, #56]	; 0x38
   10a98:	add	r1, r1, #4
   10a9c:	ldr	r0, [r0]
   10aa0:	mov	r6, r8
   10aa4:	str	r0, [r1]
   10aa8:	ldr	r5, [r6, r9, lsl #3]!
   10aac:	cmp	r5, #19
   10ab0:	bhi	10b0c <gen_protochain+0xf58>
   10ab4:	ldr	r0, [pc, #2652]	; 11518 <gen_protochain+0x1964>
   10ab8:	add	r4, r9, #1
   10abc:	cmp	r9, #15
   10ac0:	add	r0, pc, r0
   10ac4:	str	r4, [r0, #92]	; 0x5c
   10ac8:	bge	114f0 <gen_protochain+0x193c>
   10acc:	mov	r0, #1024	; 0x400
   10ad0:	lsl	r5, r0, r4
   10ad4:	mov	r0, r5
   10ad8:	bl	e34 <malloc@plt>
   10adc:	cmp	r0, #0
   10ae0:	add	r9, sp, #24
   10ae4:	str	r0, [r6, #12]
   10ae8:	beq	114f0 <gen_protochain+0x193c>
   10aec:	mov	r1, #0
   10af0:	mov	r2, r5
   10af4:	add	r6, r6, #8
   10af8:	bl	ea0 <memset@plt>
   10afc:	cmp	r5, #19
   10b00:	str	r5, [r6]
   10b04:	bhi	10b14 <gen_protochain+0xf60>
   10b08:	b	114f0 <gen_protochain+0x193c>
   10b0c:	mov	r4, r9
   10b10:	add	r9, sp, #24
   10b14:	sub	r0, r5, #20
   10b18:	mov	r2, #21
   10b1c:	cmp	r7, #0
   10b20:	str	r0, [r6]
   10b24:	ldr	r1, [r6, #4]
   10b28:	str	r2, [r1, r0]!
   10b2c:	mov	r0, #0
   10b30:	str	r1, [r9, sl, lsl #2]
   10b34:	str	r0, [r1, #4]
   10b38:	ldr	r1, [r9, sl, lsl #2]
   10b3c:	str	r0, [r1, #8]
   10b40:	mov	r1, #51	; 0x33
   10b44:	ldr	r0, [r9, sl, lsl #2]
   10b48:	str	r1, [r0, #12]
   10b4c:	beq	10b5c <gen_protochain+0xfa8>
   10b50:	ldr	r0, [r9, r7, lsl #2]
   10b54:	ldr	r1, [r9, sl, lsl #2]
   10b58:	str	r1, [r0, #8]
   10b5c:	mov	r7, r8
   10b60:	ldr	r5, [r7, r4, lsl #3]!
   10b64:	cmp	r5, #19
   10b68:	bhi	10bd0 <gen_protochain+0x101c>
   10b6c:	ldr	r0, [pc, #2472]	; 1151c <gen_protochain+0x1968>
   10b70:	add	r6, r4, #1
   10b74:	cmp	r4, #15
   10b78:	add	r0, pc, r0
   10b7c:	str	r6, [r0, #92]	; 0x5c
   10b80:	bge	114f0 <gen_protochain+0x193c>
   10b84:	mov	r0, #1024	; 0x400
   10b88:	lsl	r5, r0, r6
   10b8c:	mov	r0, r5
   10b90:	bl	e34 <malloc@plt>
   10b94:	cmp	r0, #0
   10b98:	str	r0, [r7, #12]
   10b9c:	beq	114f0 <gen_protochain+0x193c>
   10ba0:	mov	r1, #0
   10ba4:	mov	r2, r5
   10ba8:	add	r7, r7, #8
   10bac:	bl	ea0 <memset@plt>
   10bb0:	cmp	r5, #19
   10bb4:	str	r5, [r7]
   10bb8:	bhi	10bd4 <gen_protochain+0x1020>
   10bbc:	b	114f0 <gen_protochain+0x193c>
   10bc0:	.word	0x000368f0
   10bc4:	.word	0x0001a842
   10bc8:	.word	0x00036d60
   10bcc:	.word	0x000367d8
   10bd0:	mov	r6, r4
   10bd4:	sub	r1, r5, #20
   10bd8:	mov	r3, #135	; 0x87
   10bdc:	add	r0, sl, #1
   10be0:	str	r1, [r7]
   10be4:	ldr	r2, [r7, #4]
   10be8:	mov	r7, r8
   10bec:	str	r3, [r2, r1]!
   10bf0:	str	r2, [r9, r0, lsl #2]
   10bf4:	ldr	r0, [r9, sl, lsl #2]
   10bf8:	str	r2, [r0, #4]
   10bfc:	ldr	r5, [r7, r6, lsl #3]!
   10c00:	cmp	r5, #19
   10c04:	bhi	10c60 <gen_protochain+0x10ac>
   10c08:	ldr	r0, [pc, #2320]	; 11520 <gen_protochain+0x196c>
   10c0c:	add	r4, r6, #1
   10c10:	cmp	r6, #15
   10c14:	add	r0, pc, r0
   10c18:	str	r4, [r0, #92]	; 0x5c
   10c1c:	bge	114f0 <gen_protochain+0x193c>
   10c20:	mov	r0, #1024	; 0x400
   10c24:	lsl	r5, r0, r4
   10c28:	mov	r0, r5
   10c2c:	bl	e34 <malloc@plt>
   10c30:	cmp	r0, #0
   10c34:	str	r0, [r7, #12]
   10c38:	beq	114f0 <gen_protochain+0x193c>
   10c3c:	mov	r1, #0
   10c40:	mov	r2, r5
   10c44:	add	r7, r7, #8
   10c48:	bl	ea0 <memset@plt>
   10c4c:	cmp	r5, #19
   10c50:	str	r5, [r7]
   10c54:	bhi	10c64 <gen_protochain+0x10b0>
   10c58:	b	114f0 <gen_protochain+0x193c>
   10c5c:	.word	0x00036740
   10c60:	mov	r4, r6
   10c64:	sub	r1, r5, #20
   10c68:	mov	r3, #80	; 0x50
   10c6c:	add	r0, sl, #2
   10c70:	mov	r6, r8
   10c74:	str	r1, [r7]
   10c78:	ldr	r2, [r7, #4]
   10c7c:	str	r3, [r2, r1]!
   10c80:	str	r2, [r9, r0, lsl #2]
   10c84:	ldr	r0, [sp, #16]
   10c88:	ldr	r1, [sp, #12]
   10c8c:	add	r9, r1, r0
   10c90:	str	r9, [r2, #12]
   10c94:	ldr	r5, [r6, r4, lsl #3]!
   10c98:	cmp	r5, #19
   10c9c:	bhi	10cf4 <gen_protochain+0x1140>
   10ca0:	ldr	r0, [pc, #2172]	; 11524 <gen_protochain+0x1970>
   10ca4:	add	r7, r4, #1
   10ca8:	cmp	r4, #15
   10cac:	add	r0, pc, r0
   10cb0:	str	r7, [r0, #92]	; 0x5c
   10cb4:	bge	114f0 <gen_protochain+0x193c>
   10cb8:	mov	r0, #1024	; 0x400
   10cbc:	lsl	r5, r0, r7
   10cc0:	mov	r0, r5
   10cc4:	bl	e34 <malloc@plt>
   10cc8:	cmp	r0, #0
   10ccc:	str	r0, [r6, #12]
   10cd0:	beq	114f0 <gen_protochain+0x193c>
   10cd4:	mov	r1, #0
   10cd8:	mov	r2, r5
   10cdc:	add	r6, r6, #8
   10ce0:	bl	ea0 <memset@plt>
   10ce4:	cmp	r5, #19
   10ce8:	str	r5, [r6]
   10cec:	bhi	10cf8 <gen_protochain+0x1144>
   10cf0:	b	114f0 <gen_protochain+0x193c>
   10cf4:	mov	r7, r4
   10cf8:	sub	r0, r5, #20
   10cfc:	mov	r2, #2
   10d00:	add	r4, sl, #3
   10d04:	str	r0, [r6]
   10d08:	ldr	r1, [r6, #4]
   10d0c:	str	r2, [r1, r0]!
   10d10:	add	r0, sp, #24
   10d14:	str	r1, [r0, r4, lsl #2]
   10d18:	ldr	r0, [sp, #20]
   10d1c:	str	r0, [r1, #12]
   10d20:	ldr	r5, [r8, r7, lsl #3]!
   10d24:	cmp	r5, #19
   10d28:	bhi	10d84 <gen_protochain+0x11d0>
   10d2c:	ldr	r0, [pc, #2036]	; 11528 <gen_protochain+0x1974>
   10d30:	add	r6, r7, #1
   10d34:	cmp	r7, #15
   10d38:	add	r0, pc, r0
   10d3c:	str	r6, [r0, #92]	; 0x5c
   10d40:	bge	114f0 <gen_protochain+0x193c>
   10d44:	mov	r0, #1024	; 0x400
   10d48:	lsl	r5, r0, r6
   10d4c:	mov	r0, r5
   10d50:	bl	e34 <malloc@plt>
   10d54:	cmp	r0, #0
   10d58:	str	r0, [r8, #12]
   10d5c:	beq	114f0 <gen_protochain+0x193c>
   10d60:	mov	r1, #0
   10d64:	mov	r2, r5
   10d68:	add	r8, r8, #8
   10d6c:	bl	ea0 <memset@plt>
   10d70:	cmp	r5, #19
   10d74:	str	r5, [r8]
   10d78:	bhi	10d88 <gen_protochain+0x11d4>
   10d7c:	b	114f0 <gen_protochain+0x193c>
   10d80:	.word	0x0003665c
   10d84:	mov	r6, r7
   10d88:	sub	r1, r5, #20
   10d8c:	mov	r3, #135	; 0x87
   10d90:	add	r0, sl, #4
   10d94:	str	r1, [r8]
   10d98:	ldr	r2, [r8, #4]
   10d9c:	str	r3, [r2, r1]!
   10da0:	add	r1, sp, #24
   10da4:	str	r2, [r1, r0, lsl #2]
   10da8:	ldr	r0, [r1, r4, lsl #2]
   10dac:	str	r2, [r0, #4]
   10db0:	ldr	r8, [pc, #1908]	; 1152c <gen_protochain+0x1978>
   10db4:	add	r8, pc, r8
   10db8:	mov	r4, r8
   10dbc:	ldr	r5, [r4, r6, lsl #3]!
   10dc0:	cmp	r5, #19
   10dc4:	bhi	10e1c <gen_protochain+0x1268>
   10dc8:	ldr	r0, [pc, #1888]	; 11530 <gen_protochain+0x197c>
   10dcc:	add	r7, r6, #1
   10dd0:	cmp	r6, #15
   10dd4:	add	r0, pc, r0
   10dd8:	str	r7, [r0, #92]	; 0x5c
   10ddc:	bge	114f0 <gen_protochain+0x193c>
   10de0:	mov	r0, #1024	; 0x400
   10de4:	lsl	r5, r0, r7
   10de8:	mov	r0, r5
   10dec:	bl	e34 <malloc@plt>
   10df0:	cmp	r0, #0
   10df4:	str	r0, [r4, #12]
   10df8:	beq	114f0 <gen_protochain+0x193c>
   10dfc:	mov	r1, #0
   10e00:	mov	r2, r5
   10e04:	add	r4, r4, #8
   10e08:	bl	ea0 <memset@plt>
   10e0c:	cmp	r5, #19
   10e10:	str	r5, [r4]
   10e14:	bhi	10e20 <gen_protochain+0x126c>
   10e18:	b	114f0 <gen_protochain+0x193c>
   10e1c:	mov	r7, r6
   10e20:	sub	r1, r5, #20
   10e24:	mov	r3, #4
   10e28:	add	r0, sl, #5
   10e2c:	str	r1, [r4]
   10e30:	ldr	r2, [r4, #4]
   10e34:	mov	r4, r8
   10e38:	str	r3, [r2, r1]!
   10e3c:	add	r1, sp, #24
   10e40:	str	r2, [r1, r0, lsl #2]
   10e44:	mov	r0, #1
   10e48:	str	r0, [r2, #12]
   10e4c:	ldr	r5, [r4, r7, lsl #3]!
   10e50:	cmp	r5, #19
   10e54:	bhi	10eb0 <gen_protochain+0x12fc>
   10e58:	ldr	r0, [pc, #1748]	; 11534 <gen_protochain+0x1980>
   10e5c:	add	r6, r7, #1
   10e60:	cmp	r7, #15
   10e64:	add	r0, pc, r0
   10e68:	str	r6, [r0, #92]	; 0x5c
   10e6c:	bge	114f0 <gen_protochain+0x193c>
   10e70:	mov	r0, #1024	; 0x400
   10e74:	lsl	r5, r0, r6
   10e78:	mov	r0, r5
   10e7c:	bl	e34 <malloc@plt>
   10e80:	cmp	r0, #0
   10e84:	str	r0, [r4, #12]
   10e88:	beq	114f0 <gen_protochain+0x193c>
   10e8c:	mov	r1, #0
   10e90:	mov	r2, r5
   10e94:	add	r4, r4, #8
   10e98:	bl	ea0 <memset@plt>
   10e9c:	cmp	r5, #19
   10ea0:	str	r5, [r4]
   10ea4:	bhi	10eb4 <gen_protochain+0x1300>
   10ea8:	b	114f0 <gen_protochain+0x193c>
   10eac:	.word	0x00036564
   10eb0:	mov	r6, r7
   10eb4:	sub	r1, r5, #20
   10eb8:	mov	r3, #7
   10ebc:	mov	r7, r8
   10ec0:	add	r0, sl, #6
   10ec4:	str	r1, [r4]
   10ec8:	ldr	r2, [r4, #4]
   10ecc:	str	r3, [r2, r1]!
   10ed0:	add	r1, sp, #24
   10ed4:	ldr	r5, [r7, r6, lsl #3]!
   10ed8:	str	r2, [r1, r0, lsl #2]
   10edc:	cmp	r5, #19
   10ee0:	bhi	10f3c <gen_protochain+0x1388>
   10ee4:	ldr	r0, [pc, #1612]	; 11538 <gen_protochain+0x1984>
   10ee8:	add	r4, r6, #1
   10eec:	cmp	r6, #15
   10ef0:	add	r0, pc, r0
   10ef4:	str	r4, [r0, #92]	; 0x5c
   10ef8:	bge	114f0 <gen_protochain+0x193c>
   10efc:	mov	r0, #1024	; 0x400
   10f00:	lsl	r5, r0, r4
   10f04:	mov	r0, r5
   10f08:	bl	e34 <malloc@plt>
   10f0c:	cmp	r0, #0
   10f10:	str	r0, [r7, #12]
   10f14:	beq	114f0 <gen_protochain+0x193c>
   10f18:	mov	r1, #0
   10f1c:	mov	r2, r5
   10f20:	add	r7, r7, #8
   10f24:	bl	ea0 <memset@plt>
   10f28:	cmp	r5, #19
   10f2c:	str	r5, [r7]
   10f30:	bhi	10f40 <gen_protochain+0x138c>
   10f34:	b	114f0 <gen_protochain+0x193c>
   10f38:	.word	0x000364b8
   10f3c:	mov	r4, r6
   10f40:	sub	r1, r5, #20
   10f44:	mov	r3, #80	; 0x50
   10f48:	add	r0, sl, #7
   10f4c:	mov	r6, r8
   10f50:	str	r1, [r7]
   10f54:	ldr	r2, [r7, #4]
   10f58:	str	r3, [r2, r1]!
   10f5c:	add	r1, sp, #24
   10f60:	str	r2, [r1, r0, lsl #2]
   10f64:	str	r9, [r2, #12]
   10f68:	ldr	r5, [r6, r4, lsl #3]!
   10f6c:	cmp	r5, #19
   10f70:	bhi	10fd0 <gen_protochain+0x141c>
   10f74:	ldr	r0, [pc, #1472]	; 1153c <gen_protochain+0x1988>
   10f78:	add	r7, r4, #1
   10f7c:	cmp	r4, #15
   10f80:	add	r0, pc, r0
   10f84:	str	r7, [r0, #92]	; 0x5c
   10f88:	bge	114f0 <gen_protochain+0x193c>
   10f8c:	mov	r0, #1024	; 0x400
   10f90:	lsl	r5, r0, r7
   10f94:	mov	r0, r5
   10f98:	bl	e34 <malloc@plt>
   10f9c:	cmp	r0, #0
   10fa0:	str	r0, [r6, #12]
   10fa4:	beq	114f0 <gen_protochain+0x193c>
   10fa8:	mov	r1, #0
   10fac:	mov	r2, r5
   10fb0:	add	r6, r6, #8
   10fb4:	bl	ea0 <memset@plt>
   10fb8:	cmp	r5, #19
   10fbc:	str	r5, [r6]
   10fc0:	bhi	10fd4 <gen_protochain+0x1420>
   10fc4:	b	114f0 <gen_protochain+0x193c>
   10fc8:	.word	0x00036430
   10fcc:	.word	0x000364d4
   10fd0:	mov	r7, r4
   10fd4:	sub	r0, r5, #20
   10fd8:	mov	r9, #4
   10fdc:	orr	r8, sl, #8
   10fe0:	str	r0, [r6]
   10fe4:	ldr	r1, [r6, #4]
   10fe8:	str	r9, [r1, r0]!
   10fec:	add	r0, sp, #24
   10ff0:	str	r1, [r0, r8, lsl #2]
   10ff4:	mov	r0, #2
   10ff8:	str	r0, [r1, #12]
   10ffc:	ldr	r4, [pc, #1340]	; 11540 <gen_protochain+0x198c>
   11000:	add	r4, pc, r4
   11004:	ldr	r5, [r4, r7, lsl #3]!
   11008:	cmp	r5, #19
   1100c:	bhi	1106c <gen_protochain+0x14b8>
   11010:	ldr	r0, [pc, #1324]	; 11544 <gen_protochain+0x1990>
   11014:	add	r6, r7, #1
   11018:	cmp	r7, #15
   1101c:	add	r0, pc, r0
   11020:	str	r6, [r0, #92]	; 0x5c
   11024:	bge	114f0 <gen_protochain+0x193c>
   11028:	mov	r0, #1024	; 0x400
   1102c:	lsl	r5, r0, r6
   11030:	mov	r0, r5
   11034:	bl	e34 <malloc@plt>
   11038:	cmp	r0, #0
   1103c:	str	r0, [r4, #12]
   11040:	beq	114f0 <gen_protochain+0x193c>
   11044:	mov	r1, #0
   11048:	mov	r2, r5
   1104c:	add	r4, r4, #8
   11050:	bl	ea0 <memset@plt>
   11054:	cmp	r5, #19
   11058:	str	r5, [r4]
   1105c:	bhi	11070 <gen_protochain+0x14bc>
   11060:	b	114f0 <gen_protochain+0x193c>
   11064:	.word	0x00036394
   11068:	.word	0x00036438
   1106c:	mov	r6, r7
   11070:	sub	r1, r5, #20
   11074:	mov	r3, #36	; 0x24
   11078:	add	r0, r8, #1
   1107c:	str	r1, [r4]
   11080:	ldr	r2, [r4, #4]
   11084:	str	r3, [r2, r1]!
   11088:	add	r1, sp, #24
   1108c:	str	r2, [r1, r0, lsl #2]
   11090:	str	r9, [r2, #12]
   11094:	ldr	r4, [pc, #1196]	; 11548 <gen_protochain+0x1994>
   11098:	add	r4, pc, r4
   1109c:	ldr	r5, [r4, r6, lsl #3]!
   110a0:	cmp	r5, #19
   110a4:	bhi	11108 <gen_protochain+0x1554>
   110a8:	ldr	r0, [pc, #1180]	; 1154c <gen_protochain+0x1998>
   110ac:	add	r7, r6, #1
   110b0:	cmp	r6, #15
   110b4:	add	r0, pc, r0
   110b8:	str	r7, [r0, #92]	; 0x5c
   110bc:	bge	114f0 <gen_protochain+0x193c>
   110c0:	mov	r0, #1024	; 0x400
   110c4:	lsl	r5, r0, r7
   110c8:	mov	r0, r5
   110cc:	bl	e34 <malloc@plt>
   110d0:	cmp	r0, #0
   110d4:	add	r9, sp, #24
   110d8:	str	r0, [r4, #12]
   110dc:	beq	114f0 <gen_protochain+0x193c>
   110e0:	mov	r1, #0
   110e4:	mov	r2, r5
   110e8:	add	r4, r4, #8
   110ec:	bl	ea0 <memset@plt>
   110f0:	cmp	r5, #19
   110f4:	str	r5, [r4]
   110f8:	bhi	11110 <gen_protochain+0x155c>
   110fc:	b	114f0 <gen_protochain+0x193c>
   11100:	.word	0x000362e8
   11104:	.word	0x00036390
   11108:	mov	r7, r6
   1110c:	add	r9, sp, #24
   11110:	sub	r1, r5, #20
   11114:	mov	r3, #7
   11118:	add	r0, r8, #2
   1111c:	str	r1, [r4]
   11120:	ldr	r2, [r4, #4]
   11124:	str	r3, [r2, r1]!
   11128:	str	r2, [r9, r0, lsl #2]
   1112c:	ldr	r4, [pc, #1052]	; 11550 <gen_protochain+0x199c>
   11130:	add	r4, pc, r4
   11134:	ldr	r5, [r4, r7, lsl #3]!
   11138:	cmp	r5, #19
   1113c:	bhi	1119c <gen_protochain+0x15e8>
   11140:	ldr	r0, [pc, #1036]	; 11554 <gen_protochain+0x19a0>
   11144:	add	r6, r7, #1
   11148:	cmp	r7, #15
   1114c:	add	r0, pc, r0
   11150:	str	r6, [r0, #92]	; 0x5c
   11154:	bge	114f0 <gen_protochain+0x193c>
   11158:	mov	r0, #1024	; 0x400
   1115c:	lsl	r5, r0, r6
   11160:	mov	r0, r5
   11164:	bl	e34 <malloc@plt>
   11168:	cmp	r0, #0
   1116c:	str	r0, [r4, #12]
   11170:	beq	114f0 <gen_protochain+0x193c>
   11174:	mov	r1, #0
   11178:	mov	r2, r5
   1117c:	add	r4, r4, #8
   11180:	bl	ea0 <memset@plt>
   11184:	cmp	r5, #19
   11188:	str	r5, [r4]
   1118c:	bhi	111a0 <gen_protochain+0x15ec>
   11190:	b	114f0 <gen_protochain+0x193c>
   11194:	.word	0x00036334
   11198:	.word	0x0003625c
   1119c:	mov	r6, r7
   111a0:	sub	r1, r5, #20
   111a4:	mov	r3, #96	; 0x60
   111a8:	add	r0, r8, #3
   111ac:	str	r1, [r4]
   111b0:	ldr	r2, [r4, #4]
   111b4:	str	r3, [r2, r1]!
   111b8:	str	r2, [r9, r0, lsl #2]
   111bc:	ldr	r0, [sp, #20]
   111c0:	str	r0, [r2, #12]
   111c4:	ldr	r4, [pc, #908]	; 11558 <gen_protochain+0x19a4>
   111c8:	add	r4, pc, r4
   111cc:	ldr	r5, [r4, r6, lsl #3]!
   111d0:	cmp	r5, #19
   111d4:	bhi	11234 <gen_protochain+0x1680>
   111d8:	ldr	r0, [pc, #892]	; 1155c <gen_protochain+0x19a8>
   111dc:	add	r7, r6, #1
   111e0:	cmp	r6, #15
   111e4:	add	r0, pc, r0
   111e8:	str	r7, [r0, #92]	; 0x5c
   111ec:	bge	114f0 <gen_protochain+0x193c>
   111f0:	mov	r0, #1024	; 0x400
   111f4:	lsl	r5, r0, r7
   111f8:	mov	r0, r5
   111fc:	bl	e34 <malloc@plt>
   11200:	cmp	r0, #0
   11204:	str	r0, [r4, #12]
   11208:	beq	114f0 <gen_protochain+0x193c>
   1120c:	mov	r1, #0
   11210:	mov	r2, r5
   11214:	add	r4, r4, #8
   11218:	bl	ea0 <memset@plt>
   1121c:	cmp	r5, #19
   11220:	str	r5, [r4]
   11224:	bhi	11238 <gen_protochain+0x1684>
   11228:	b	114f0 <gen_protochain+0x193c>
   1122c:	.word	0x000361d4
   11230:	.word	0x00036170
   11234:	mov	r7, r6
   11238:	sub	r1, r5, #20
   1123c:	mov	r3, #5
   11240:	add	r0, r8, #4
   11244:	str	r1, [r4]
   11248:	ldr	r2, [r4, #4]
   1124c:	str	r3, [r2, r1]!
   11250:	str	r2, [r9, r0, lsl #2]
   11254:	mvn	r0, #8
   11258:	eor	r0, sl, r0
   1125c:	sub	r0, r0, #1
   11260:	str	r0, [r2, #12]
   11264:	ldr	r4, [pc, #756]	; 11560 <gen_protochain+0x19ac>
   11268:	add	r4, pc, r4
   1126c:	ldr	r5, [r4, r7, lsl #3]!
   11270:	cmp	r5, #19
   11274:	bhi	112d8 <gen_protochain+0x1724>
   11278:	ldr	r0, [pc, #740]	; 11564 <gen_protochain+0x19b0>
   1127c:	add	r6, r7, #1
   11280:	cmp	r7, #15
   11284:	add	r0, pc, r0
   11288:	str	r6, [r0, #92]	; 0x5c
   1128c:	bge	114f0 <gen_protochain+0x193c>
   11290:	mov	r0, #1024	; 0x400
   11294:	lsl	r5, r0, r6
   11298:	mov	r0, r5
   1129c:	bl	e34 <malloc@plt>
   112a0:	cmp	r0, #0
   112a4:	str	r0, [r4, #12]
   112a8:	beq	114f0 <gen_protochain+0x193c>
   112ac:	mov	r1, #0
   112b0:	mov	r2, r5
   112b4:	add	r4, r4, #8
   112b8:	bl	ea0 <memset@plt>
   112bc:	cmp	r5, #19
   112c0:	str	r5, [r4]
   112c4:	bhi	112dc <gen_protochain+0x1728>
   112c8:	b	114f0 <gen_protochain+0x193c>
   112cc:	.word	0x000360f4
   112d0:	.word	0x00036050
   112d4:	.word	0x00035fb4
   112d8:	mov	r6, r7
   112dc:	sub	r1, r5, #20
   112e0:	mov	r3, #4
   112e4:	add	r0, r8, #5
   112e8:	str	r1, [r4]
   112ec:	ldr	r2, [r4, #4]
   112f0:	str	r3, [r2, r1]!
   112f4:	mov	r1, #0
   112f8:	str	r2, [r9, r0, lsl #2]
   112fc:	str	r1, [r2, #12]
   11300:	ldr	r1, [r9, r0, lsl #2]
   11304:	ldr	r2, [sp, #40]	; 0x28
   11308:	str	r1, [r2, #4]
   1130c:	ldr	r1, [r9, sl, lsl #2]
   11310:	ldr	r2, [r9, r0, lsl #2]
   11314:	str	r2, [r1, #8]
   11318:	ldr	r1, [r9, r0, lsl #2]
   1131c:	ldr	r2, [sp, #36]	; 0x24
   11320:	str	r1, [r2, #4]
   11324:	and	r2, r0, #1
   11328:	sub	r1, r2, r8
   1132c:	sub	r3, r1, #5
   11330:	add	r1, r9, #8
   11334:	ldr	r7, [r1, #-8]
   11338:	ldr	r5, [r1, #-4]
   1133c:	adds	r3, r3, #2
   11340:	str	r5, [r7, #16]
   11344:	ldr	r7, [r1, #-4]
   11348:	ldr	r5, [r1]
   1134c:	add	r1, r1, #8
   11350:	str	r5, [r7, #16]
   11354:	bne	11334 <gen_protochain+0x1780>
   11358:	ldr	r7, [sp, #4]
   1135c:	ldr	r4, [pc, #516]	; 11568 <gen_protochain+0x19b4>
   11360:	ldr	r3, [pc, #516]	; 1156c <gen_protochain+0x19b8>
   11364:	cmp	r2, #0
   11368:	add	r4, pc, r4
   1136c:	add	r3, pc, r3
   11370:	beq	11380 <gen_protochain+0x17cc>
   11374:	ldr	r2, [r1, #-8]
   11378:	ldr	r1, [r1, #-4]
   1137c:	str	r1, [r2, #16]
   11380:	ldr	r0, [r9, r0, lsl #2]
   11384:	mov	r8, #0
   11388:	str	r8, [r0, #16]
   1138c:	ldr	r5, [r4, r6, lsl #3]!
   11390:	cmp	r5, #207	; 0xcf
   11394:	bhi	113e0 <gen_protochain+0x182c>
   11398:	add	r0, r6, #1
   1139c:	cmp	r6, #15
   113a0:	str	r0, [r3, #92]	; 0x5c
   113a4:	bge	114f0 <gen_protochain+0x193c>
   113a8:	mov	r1, #1024	; 0x400
   113ac:	lsl	r5, r1, r0
   113b0:	mov	r0, r5
   113b4:	bl	e34 <malloc@plt>
   113b8:	cmp	r0, #0
   113bc:	str	r0, [r4, #12]
   113c0:	beq	114f0 <gen_protochain+0x193c>
   113c4:	mov	r1, #0
   113c8:	mov	r2, r5
   113cc:	add	r4, r4, #8
   113d0:	bl	ea0 <memset@plt>
   113d4:	cmp	r5, #207	; 0xcf
   113d8:	str	r5, [r4]
   113dc:	bls	114f0 <gen_protochain+0x193c>
   113e0:	sub	r0, r5, #208	; 0xd0
   113e4:	str	r0, [r4]
   113e8:	ldr	r1, [r4, #4]
   113ec:	add	r0, r1, r0
   113f0:	mov	r1, #21
   113f4:	str	r1, [r0, #8]
   113f8:	str	r0, [r0, #96]	; 0x60
   113fc:	ldr	r1, [sp, #28]
   11400:	str	r7, [r0, #20]
   11404:	str	r1, [r0, #4]
   11408:	ldr	r1, [pc, #352]	; 11570 <gen_protochain+0x19bc>
   1140c:	ldr	r4, [sp, #8]
   11410:	ldr	r2, [sp, #20]
   11414:	add	r1, pc, r1
   11418:	cmp	r4, #0
   1141c:	str	r8, [r1, r2, lsl #2]
   11420:	beq	11454 <gen_protochain+0x18a0>
   11424:	ldr	r1, [r0, #96]	; 0x60
   11428:	mov	r2, r4
   1142c:	ldr	r3, [r2, #44]	; 0x2c
   11430:	add	r7, r2, #84	; 0x54
   11434:	cmp	r3, #0
   11438:	mov	r3, #84	; 0x54
   1143c:	movweq	r3, #60	; 0x3c
   11440:	addeq	r7, r2, #60	; 0x3c
   11444:	ldr	r2, [r2, r3]
   11448:	str	r1, [r7]
   1144c:	cmp	r2, #0
   11450:	bne	1142c <gen_protochain+0x1878>
   11454:	ldr	r2, [r4, #44]	; 0x2c
   11458:	add	r1, r0, #96	; 0x60
   1145c:	cmp	r0, #0
   11460:	clz	r2, r2
   11464:	lsr	r2, r2, #5
   11468:	str	r2, [r4, #44]	; 0x2c
   1146c:	ldr	r2, [r0, #44]	; 0x2c
   11470:	clz	r3, r2
   11474:	lsr	r3, r3, #5
   11478:	str	r3, [r0, #44]	; 0x2c
   1147c:	str	r0, [fp, #-36]	; 0xffffffdc
   11480:	beq	114c8 <gen_protochain+0x1914>
   11484:	cmp	r2, #0
   11488:	mov	r7, #60	; 0x3c
   1148c:	mov	r3, r0
   11490:	movweq	r7, #84	; 0x54
   11494:	ldr	r2, [r3, r7]!
   11498:	cmp	r2, #0
   1149c:	beq	114cc <gen_protochain+0x1918>
   114a0:	ldr	r7, [r2, #44]	; 0x2c
   114a4:	add	r3, r2, #84	; 0x54
   114a8:	cmp	r7, #0
   114ac:	mov	r7, #84	; 0x54
   114b0:	movweq	r7, #60	; 0x3c
   114b4:	addeq	r3, r2, #60	; 0x3c
   114b8:	ldr	r2, [r2, r7]
   114bc:	cmp	r2, #0
   114c0:	bne	114a0 <gen_protochain+0x18ec>
   114c4:	b	114cc <gen_protochain+0x1918>
   114c8:	sub	r3, fp, #36	; 0x24
   114cc:	str	r4, [r3]
   114d0:	ldr	r2, [r0, #44]	; 0x2c
   114d4:	clz	r2, r2
   114d8:	lsr	r2, r2, #5
   114dc:	str	r2, [r0, #44]	; 0x2c
   114e0:	ldr	r2, [r4, #96]	; 0x60
   114e4:	str	r2, [r1]
   114e8:	sub	sp, fp, #28
   114ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114f0:	ldr	r0, [pc, #124]	; 11574 <gen_protochain+0x19c0>
   114f4:	add	r0, pc, r0
   114f8:	bl	214c <sf_bpf_error>
   114fc:	ldr	r0, [pc, #16]	; 11514 <gen_protochain+0x1960>
   11500:	add	r0, pc, r0
   11504:	bl	214c <sf_bpf_error>
   11508:	ldr	r0, [pc, #104]	; 11578 <gen_protochain+0x19c4>
   1150c:	add	r0, pc, r0
   11510:	bl	214c <sf_bpf_error>
   11514:	.word	0x00018f44
   11518:	.word	0x00035a20
   1151c:	.word	0x00035968
   11520:	.word	0x000358cc
   11524:	.word	0x00035834
   11528:	.word	0x000357a8
   1152c:	.word	0x0003566c
   11530:	.word	0x0003570c
   11534:	.word	0x0003567c
   11538:	.word	0x000355f0
   1153c:	.word	0x00035560
   11540:	.word	0x00035420
   11544:	.word	0x000354c4
   11548:	.word	0x00035388
   1154c:	.word	0x0003542c
   11550:	.word	0x000352f0
   11554:	.word	0x00035394
   11558:	.word	0x00035258
   1155c:	.word	0x000352fc
   11560:	.word	0x000351b8
   11564:	.word	0x0003525c
   11568:	.word	0x000350b8
   1156c:	.word	0x00035174
   11570:	.word	0x0003508c
   11574:	.word	0x00018570
   11578:	.word	0x00018f85

0001157c <sf_gen_mcode>:
   1157c:	push	{r4, r5, r6, r7, fp, lr}
   11580:	add	fp, sp, #16
   11584:	sub	sp, sp, #16
   11588:	mov	r6, r1
   1158c:	add	r1, sp, #12
   11590:	mov	r4, r3
   11594:	mov	r7, r2
   11598:	mov	r5, r0
   1159c:	bl	1f214 <__pcap_atoin>
   115a0:	ldr	r1, [sp, #12]
   115a4:	rsb	r0, r0, #32
   115a8:	cmp	r6, #0
   115ac:	lsl	r0, r1, r0
   115b0:	str	r0, [sp, #12]
   115b4:	beq	115f8 <sf_gen_mcode+0x7c>
   115b8:	add	r1, sp, #8
   115bc:	mov	r0, r6
   115c0:	bl	1f214 <__pcap_atoin>
   115c4:	ldr	r2, [sp, #8]
   115c8:	rsb	r0, r0, #32
   115cc:	lsl	r1, r2, r0
   115d0:	mvn	r2, r2, lsl r0
   115d4:	ldr	r0, [sp, #12]
   115d8:	str	r1, [sp, #8]
   115dc:	tst	r0, r2
   115e0:	beq	11624 <sf_gen_mcode+0xa8>
   115e4:	ldr	r0, [pc, #148]	; 11680 <sf_gen_mcode+0x104>
   115e8:	mov	r1, r5
   115ec:	mov	r2, r6
   115f0:	add	r0, pc, r0
   115f4:	bl	214c <sf_bpf_error>
   115f8:	cmp	r7, #33	; 0x21
   115fc:	bge	11660 <sf_gen_mcode+0xe4>
   11600:	rsb	r2, r7, #32
   11604:	mvn	r3, #0
   11608:	cmp	r7, #0
   1160c:	mov	r1, r7
   11610:	lslne	r1, r3, r2
   11614:	mvn	r2, r1
   11618:	str	r1, [sp, #8]
   1161c:	tst	r0, r2
   11620:	bne	1166c <sf_gen_mcode+0xf0>
   11624:	uxtb	r2, r4
   11628:	cmp	r2, #2
   1162c:	bne	11654 <sf_gen_mcode+0xd8>
   11630:	lsr	r3, r4, #16
   11634:	lsr	r2, r4, #8
   11638:	mov	r7, #2
   1163c:	uxtb	r2, r2
   11640:	uxtb	r3, r3
   11644:	str	r7, [sp]
   11648:	bl	bc78 <gen_host>
   1164c:	sub	sp, fp, #16
   11650:	pop	{r4, r5, r6, r7, fp, pc}
   11654:	ldr	r0, [pc, #40]	; 11684 <sf_gen_mcode+0x108>
   11658:	add	r0, pc, r0
   1165c:	bl	214c <sf_bpf_error>
   11660:	ldr	r0, [pc, #32]	; 11688 <sf_gen_mcode+0x10c>
   11664:	add	r0, pc, r0
   11668:	bl	214c <sf_bpf_error>
   1166c:	ldr	r0, [pc, #24]	; 1168c <sf_gen_mcode+0x110>
   11670:	mov	r1, r5
   11674:	mov	r2, r7
   11678:	add	r0, pc, r0
   1167c:	bl	214c <sf_bpf_error>
   11680:	.word	0x00017c30
   11684:	.word	0x00017c27
   11688:	.word	0x00017be1
   1168c:	.word	0x00017be7

00011690 <sf_gen_ncode>:
   11690:	push	{r4, r5, r6, r7, fp, lr}
   11694:	add	fp, sp, #16
   11698:	sub	sp, sp, #16
   1169c:	str	r1, [sp, #4]
   116a0:	ubfx	r5, r2, #16, #8
   116a4:	mov	r7, r2
   116a8:	mov	r6, r0
   116ac:	ubfx	r4, r2, #8, #8
   116b0:	cmp	r0, #0
   116b4:	beq	116dc <sf_gen_ncode+0x4c>
   116b8:	add	r1, sp, #4
   116bc:	mov	r0, r6
   116c0:	cmp	r4, #12
   116c4:	bne	11774 <sf_gen_ncode+0xe4>
   116c8:	bl	1f278 <__pcap_atodn>
   116cc:	uxtb	r2, r7
   116d0:	cmp	r2, #7
   116d4:	bls	116ec <sf_gen_ncode+0x5c>
   116d8:	b	11784 <sf_gen_ncode+0xf4>
   116dc:	mov	r0, #32
   116e0:	uxtb	r2, r7
   116e4:	cmp	r2, #7
   116e8:	bhi	11784 <sf_gen_ncode+0xf4>
   116ec:	add	r3, pc, #8
   116f0:	lsr	r1, r7, #8
   116f4:	ldr	r7, [r3, r2, lsl #2]
   116f8:	add	pc, r3, r7
   116fc:	.word	0x00000020
   11700:	.word	0x00000020
   11704:	.word	0x00000020
   11708:	.word	0x000000b0
   1170c:	.word	0x00000320
   11710:	.word	0x0000020c
   11714:	.word	0x0000014c
   11718:	.word	0x00000168
   1171c:	uxtb	r1, r1
   11720:	cmp	r1, #12
   11724:	beq	11790 <sf_gen_ncode+0x100>
   11728:	cmp	r1, #1
   1172c:	beq	11a2c <sf_gen_ncode+0x39c>
   11730:	cmp	r6, #0
   11734:	cmpeq	r2, #2
   11738:	beq	119b8 <sf_gen_ncode+0x328>
   1173c:	rsb	r1, r0, #32
   11740:	ldr	r0, [sp, #4]
   11744:	mvn	r3, #0
   11748:	lsl	r0, r0, r1
   1174c:	lsl	r1, r3, r1
   11750:	str	r0, [sp, #4]
   11754:	str	r2, [sp]
   11758:	mov	r2, r4
   1175c:	mov	r3, r5
   11760:	bl	bc78 <gen_host>
   11764:	mov	r4, r0
   11768:	mov	r0, r4
   1176c:	sub	sp, fp, #16
   11770:	pop	{r4, r5, r6, r7, fp, pc}
   11774:	bl	1f214 <__pcap_atoin>
   11778:	uxtb	r2, r7
   1177c:	cmp	r2, #7
   11780:	bls	116ec <sf_gen_ncode+0x5c>
   11784:	cmp	r2, #255	; 0xff
   11788:	bne	11a28 <sf_gen_ncode+0x398>
   1178c:	bl	2e6c <syntax>
   11790:	ldr	r0, [sp, #4]
   11794:	mov	r1, r5
   11798:	bl	1c08c <gen_dnhostop>
   1179c:	mov	r4, r0
   117a0:	mov	r0, r4
   117a4:	sub	sp, fp, #16
   117a8:	pop	{r4, r5, r6, r7, fp, pc}
   117ac:	uxtb	r0, r1
   117b0:	cmp	r0, #8
   117b4:	bcs	11a38 <sf_gen_ncode+0x3a8>
   117b8:	mov	r2, #225	; 0xe1
   117bc:	mov	r3, #1
   117c0:	tst	r3, r2, lsr r0
   117c4:	beq	11a38 <sf_gen_ncode+0x3a8>
   117c8:	lsl	r0, r1, #24
   117cc:	ldr	r1, [pc, #636]	; 11a50 <sf_gen_ncode+0x3c0>
   117d0:	mov	r2, r5
   117d4:	add	r1, pc, r1
   117d8:	ldr	r6, [r1, r0, asr #22]
   117dc:	ldr	r0, [sp, #4]
   117e0:	mov	r1, r6
   117e4:	bl	eef8 <gen_port>
   117e8:	mov	r4, r0
   117ec:	ldr	r0, [sp, #4]
   117f0:	mov	r1, r6
   117f4:	mov	r2, r5
   117f8:	bl	f1c4 <gen_port6>
   117fc:	ldr	r1, [r0, #44]	; 0x2c
   11800:	cmp	r0, #0
   11804:	clz	r1, r1
   11808:	lsr	r1, r1, #5
   1180c:	str	r1, [r0, #44]	; 0x2c
   11810:	beq	1192c <sf_gen_ncode+0x29c>
   11814:	ldr	r2, [r4, #96]	; 0x60
   11818:	mov	r3, r0
   1181c:	cmp	r1, #0
   11820:	mov	r1, #84	; 0x54
   11824:	add	r7, r3, #84	; 0x54
   11828:	movweq	r1, #60	; 0x3c
   1182c:	addeq	r7, r3, #60	; 0x3c
   11830:	ldr	r3, [r3, r1]
   11834:	str	r2, [r7]
   11838:	cmp	r3, #0
   1183c:	beq	11928 <sf_gen_ncode+0x298>
   11840:	ldr	r1, [r3, #44]	; 0x2c
   11844:	b	1181c <sf_gen_ncode+0x18c>
   11848:	ldr	r0, [sp, #4]
   1184c:	mov	r1, r4
   11850:	bl	fbb4 <gen_protochain>
   11854:	mov	r4, r0
   11858:	mov	r0, r4
   1185c:	sub	sp, fp, #16
   11860:	pop	{r4, r5, r6, r7, fp, pc}
   11864:	uxtb	r0, r1
   11868:	cmp	r0, #8
   1186c:	bcs	11a44 <sf_gen_ncode+0x3b4>
   11870:	mov	r2, #225	; 0xe1
   11874:	mov	r3, #1
   11878:	tst	r3, r2, lsr r0
   1187c:	beq	11a44 <sf_gen_ncode+0x3b4>
   11880:	lsl	r0, r1, #24
   11884:	ldr	r1, [pc, #456]	; 11a54 <sf_gen_ncode+0x3c4>
   11888:	mov	r3, r5
   1188c:	add	r1, pc, r1
   11890:	ldr	r6, [r1, r0, asr #22]
   11894:	ldr	r0, [sp, #4]
   11898:	mov	r1, r0
   1189c:	mov	r2, r6
   118a0:	bl	f490 <gen_portrange>
   118a4:	mov	r4, r0
   118a8:	ldr	r0, [sp, #4]
   118ac:	mov	r2, r6
   118b0:	mov	r3, r5
   118b4:	mov	r1, r0
   118b8:	bl	f770 <gen_portrange6>
   118bc:	ldr	r1, [r0, #44]	; 0x2c
   118c0:	cmp	r0, #0
   118c4:	clz	r1, r1
   118c8:	lsr	r1, r1, #5
   118cc:	str	r1, [r0, #44]	; 0x2c
   118d0:	beq	11974 <sf_gen_ncode+0x2e4>
   118d4:	ldr	r2, [r4, #96]	; 0x60
   118d8:	mov	r3, r0
   118dc:	cmp	r1, #0
   118e0:	mov	r1, #84	; 0x54
   118e4:	add	r7, r3, #84	; 0x54
   118e8:	movweq	r1, #60	; 0x3c
   118ec:	addeq	r7, r3, #60	; 0x3c
   118f0:	ldr	r3, [r3, r1]
   118f4:	str	r2, [r7]
   118f8:	cmp	r3, #0
   118fc:	beq	11970 <sf_gen_ncode+0x2e0>
   11900:	ldr	r1, [r3, #44]	; 0x2c
   11904:	b	118dc <sf_gen_ncode+0x24c>
   11908:	ldr	r0, [sp, #4]
   1190c:	mov	r1, r4
   11910:	mov	r2, r5
   11914:	bl	6670 <gen_proto>
   11918:	mov	r4, r0
   1191c:	mov	r0, r4
   11920:	sub	sp, fp, #16
   11924:	pop	{r4, r5, r6, r7, fp, pc}
   11928:	ldr	r1, [r0, #44]	; 0x2c
   1192c:	clz	r1, r1
   11930:	cmp	r4, #0
   11934:	lsr	r1, r1, #5
   11938:	str	r1, [r0, #44]	; 0x2c
   1193c:	str	r4, [sp, #8]
   11940:	beq	119f8 <sf_gen_ncode+0x368>
   11944:	mov	r2, r4
   11948:	ldr	r3, [r2, #44]	; 0x2c
   1194c:	add	r1, r2, #84	; 0x54
   11950:	cmp	r3, #0
   11954:	mov	r3, #84	; 0x54
   11958:	movweq	r3, #60	; 0x3c
   1195c:	addeq	r1, r2, #60	; 0x3c
   11960:	ldr	r2, [r2, r3]
   11964:	cmp	r2, #0
   11968:	bne	11948 <sf_gen_ncode+0x2b8>
   1196c:	b	11a04 <sf_gen_ncode+0x374>
   11970:	ldr	r1, [r0, #44]	; 0x2c
   11974:	clz	r1, r1
   11978:	cmp	r4, #0
   1197c:	lsr	r1, r1, #5
   11980:	str	r1, [r0, #44]	; 0x2c
   11984:	str	r4, [sp, #12]
   11988:	beq	11a00 <sf_gen_ncode+0x370>
   1198c:	mov	r2, r4
   11990:	ldr	r3, [r2, #44]	; 0x2c
   11994:	add	r1, r2, #84	; 0x54
   11998:	cmp	r3, #0
   1199c:	mov	r3, #84	; 0x54
   119a0:	movweq	r3, #60	; 0x3c
   119a4:	addeq	r1, r2, #60	; 0x3c
   119a8:	ldr	r2, [r2, r3]
   119ac:	cmp	r2, #0
   119b0:	bne	11990 <sf_gen_ncode+0x300>
   119b4:	b	11a04 <sf_gen_ncode+0x374>
   119b8:	ldr	r0, [sp, #4]
   119bc:	movw	r7, #65534	; 0xfffe
   119c0:	mvn	r1, #0
   119c4:	movt	r7, #255	; 0xff
   119c8:	sub	r3, r0, #1
   119cc:	cmp	r3, r7
   119d0:	bhi	11754 <sf_gen_ncode+0xc4>
   119d4:	mvn	r3, #0
   119d8:	mvn	r7, #-16777216	; 0xff000000
   119dc:	mvn	r1, #0
   119e0:	add	r6, r3, r0, lsl #8
   119e4:	lsl	r1, r1, #8
   119e8:	lsl	r0, r0, #8
   119ec:	cmp	r6, r7
   119f0:	bcc	119e0 <sf_gen_ncode+0x350>
   119f4:	b	11750 <sf_gen_ncode+0xc0>
   119f8:	add	r1, sp, #8
   119fc:	b	11a04 <sf_gen_ncode+0x374>
   11a00:	add	r1, sp, #12
   11a04:	str	r0, [r1]
   11a08:	ldr	r0, [r0, #96]	; 0x60
   11a0c:	str	r0, [r4, #96]	; 0x60
   11a10:	mov	r0, r4
   11a14:	sub	sp, fp, #16
   11a18:	pop	{r4, r5, r6, r7, fp, pc}
   11a1c:	ldr	r0, [pc, #52]	; 11a58 <sf_gen_ncode+0x3c8>
   11a20:	add	r0, pc, r0
   11a24:	bl	214c <sf_bpf_error>
   11a28:	bl	f24 <abort@plt>
   11a2c:	ldr	r0, [pc, #40]	; 11a5c <sf_gen_ncode+0x3cc>
   11a30:	add	r0, pc, r0
   11a34:	bl	214c <sf_bpf_error>
   11a38:	ldr	r0, [pc, #32]	; 11a60 <sf_gen_ncode+0x3d0>
   11a3c:	add	r0, pc, r0
   11a40:	bl	214c <sf_bpf_error>
   11a44:	ldr	r0, [pc, #24]	; 11a64 <sf_gen_ncode+0x3d4>
   11a48:	add	r0, pc, r0
   11a4c:	bl	214c <sf_bpf_error>
   11a50:	.word	0x00018d14
   11a54:	.word	0x00018c5c
   11a58:	.word	0x00017898
   11a5c:	.word	0x0001786d
   11a60:	.word	0x000176b4
   11a64:	.word	0x0001770a

00011a68 <sf_gen_mcode6>:
   11a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a6c:	add	fp, sp, #28
   11a70:	sub	sp, sp, #28
   11a74:	cmp	r1, #0
   11a78:	bne	11bc0 <sf_gen_mcode6+0x158>
   11a7c:	mov	sl, r3
   11a80:	mov	r6, r2
   11a84:	mov	r5, r0
   11a88:	bl	1edcc <pcap_nametoaddrinfo>
   11a8c:	cmp	r0, #0
   11a90:	beq	11bcc <sf_gen_mcode6+0x164>
   11a94:	mov	r4, r0
   11a98:	ldr	r0, [pc, #360]	; 11c08 <sf_gen_mcode6+0x1a0>
   11a9c:	add	r0, pc, r0
   11aa0:	str	r4, [r0, #24]
   11aa4:	ldr	r0, [r4, #28]
   11aa8:	cmp	r0, #0
   11aac:	bne	11bdc <sf_gen_mcode6+0x174>
   11ab0:	cmp	r6, #129	; 0x81
   11ab4:	str	r5, [sp, #4]
   11ab8:	bcs	11bec <sf_gen_mcode6+0x184>
   11abc:	vmov.i32	q8, #0	; 0x00000000
   11ac0:	ldr	r8, [r4, #20]
   11ac4:	add	r7, sp, #8
   11ac8:	mov	r1, #255	; 0xff
   11acc:	mov	r0, r7
   11ad0:	vst1.64	{d16-d17}, [r7]
   11ad4:	ubfx	r5, r6, #3, #5
   11ad8:	mov	r2, r5
   11adc:	add	r9, r8, #8
   11ae0:	bl	ea0 <memset@plt>
   11ae4:	ands	r0, r6, #7
   11ae8:	rsbne	r0, r0, #8
   11aec:	movne	r1, #255	; 0xff
   11af0:	lslne	r0, r1, r0
   11af4:	strbne	r0, [r7, r5]
   11af8:	ldr	r1, [sp, #8]
   11afc:	ldr	r0, [r9]
   11b00:	mvn	r1, r1
   11b04:	tst	r0, r1
   11b08:	ldreq	r1, [sp, #12]
   11b0c:	ldreq	r0, [r8, #12]
   11b10:	mvneq	r1, r1
   11b14:	tsteq	r0, r1
   11b18:	bne	11b40 <sf_gen_mcode6+0xd8>
   11b1c:	ldr	r1, [sp, #16]
   11b20:	ldr	r0, [r8, #16]
   11b24:	mvn	r1, r1
   11b28:	tst	r0, r1
   11b2c:	ldreq	r1, [sp, #20]
   11b30:	ldreq	r0, [r8, #20]
   11b34:	mvneq	r1, r1
   11b38:	tsteq	r0, r1
   11b3c:	beq	11b54 <sf_gen_mcode6+0xec>
   11b40:	ldr	r0, [pc, #220]	; 11c24 <sf_gen_mcode6+0x1bc>
   11b44:	ldr	r1, [sp, #4]
   11b48:	mov	r2, r6
   11b4c:	add	r0, pc, r0
   11b50:	bl	214c <sf_bpf_error>
   11b54:	uxtb	r0, sl
   11b58:	cmp	r0, #2
   11b5c:	bcs	11b74 <sf_gen_mcode6+0x10c>
   11b60:	cmp	r6, #128	; 0x80
   11b64:	beq	11b78 <sf_gen_mcode6+0x110>
   11b68:	ldr	r0, [pc, #184]	; 11c28 <sf_gen_mcode6+0x1c0>
   11b6c:	add	r0, pc, r0
   11b70:	bl	214c <sf_bpf_error>
   11b74:	bne	11bfc <sf_gen_mcode6+0x194>
   11b78:	lsr	r2, sl, #8
   11b7c:	lsr	r1, sl, #16
   11b80:	str	r0, [sp]
   11b84:	mov	r0, r9
   11b88:	uxtb	r3, r1
   11b8c:	uxtb	r2, r2
   11b90:	add	r1, sp, #8
   11b94:	bl	ec0c <gen_host6>
   11b98:	ldr	r1, [pc, #112]	; 11c10 <sf_gen_mcode6+0x1a8>
   11b9c:	mov	r5, r0
   11ba0:	mov	r0, #0
   11ba4:	add	r1, pc, r1
   11ba8:	str	r0, [r1, #24]
   11bac:	mov	r0, r4
   11bb0:	bl	ef4 <freeaddrinfo@plt>
   11bb4:	mov	r0, r5
   11bb8:	sub	sp, fp, #28
   11bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bc0:	ldr	r0, [pc, #76]	; 11c14 <sf_gen_mcode6+0x1ac>
   11bc4:	add	r0, pc, r0
   11bc8:	bl	214c <sf_bpf_error>
   11bcc:	ldr	r0, [pc, #68]	; 11c18 <sf_gen_mcode6+0x1b0>
   11bd0:	mov	r1, r5
   11bd4:	add	r0, pc, r0
   11bd8:	bl	214c <sf_bpf_error>
   11bdc:	ldr	r0, [pc, #56]	; 11c1c <sf_gen_mcode6+0x1b4>
   11be0:	mov	r1, r5
   11be4:	add	r0, pc, r0
   11be8:	bl	214c <sf_bpf_error>
   11bec:	ldr	r0, [pc, #44]	; 11c20 <sf_gen_mcode6+0x1b8>
   11bf0:	mov	r1, #128	; 0x80
   11bf4:	add	r0, pc, r0
   11bf8:	bl	214c <sf_bpf_error>
   11bfc:	ldr	r0, [pc, #8]	; 11c0c <sf_gen_mcode6+0x1a4>
   11c00:	add	r0, pc, r0
   11c04:	bl	214c <sf_bpf_error>
   11c08:	.word	0x00034a44
   11c0c:	.word	0x00017738
   11c10:	.word	0x0003493c
   11c14:	.word	0x0001770e
   11c18:	.word	0x00017713
   11c1c:	.word	0x0001771a
   11c20:	.word	0x0001772a
   11c24:	.word	0x00017713
   11c28:	.word	0x00017713

00011c2c <sf_gen_ecode>:
   11c2c:	push	{r4, r5, r6, sl, fp, lr}
   11c30:	add	fp, sp, #16
   11c34:	sub	sp, sp, #8
   11c38:	mov	r5, r0
   11c3c:	movw	r0, #65534	; 0xfffe
   11c40:	and	r0, r1, r0
   11c44:	cmp	r0, #256	; 0x100
   11c48:	bne	11f04 <sf_gen_ecode+0x2d8>
   11c4c:	lsr	r6, r1, #16
   11c50:	ldr	r1, [pc, #708]	; 11f1c <sf_gen_ecode+0x2f0>
   11c54:	add	r1, pc, r1
   11c58:	ldr	r0, [r1, #36]	; 0x24
   11c5c:	cmp	r0, #104	; 0x68
   11c60:	ble	11d7c <sf_gen_ecode+0x150>
   11c64:	sub	r2, r0, #105	; 0x69
   11c68:	cmp	r2, #58	; 0x3a
   11c6c:	bhi	11db4 <sf_gen_ecode+0x188>
   11c70:	add	r0, pc, #4
   11c74:	ldr	r2, [r0, r2, lsl #2]
   11c78:	add	pc, r0, r2
   11c7c:	.word	0x000000ec
   11c80:	.word	0x00000294
   11c84:	.word	0x00000294
   11c88:	.word	0x00000294
   11c8c:	.word	0x00000294
   11c90:	.word	0x00000294
   11c94:	.word	0x00000294
   11c98:	.word	0x00000294
   11c9c:	.word	0x00000294
   11ca0:	.word	0x00000294
   11ca4:	.word	0x00000294
   11ca8:	.word	0x00000294
   11cac:	.word	0x00000294
   11cb0:	.word	0x00000294
   11cb4:	.word	0x000000ec
   11cb8:	.word	0x00000294
   11cbc:	.word	0x00000294
   11cc0:	.word	0x00000144
   11cc4:	.word	0x00000158
   11cc8:	.word	0x00000294
   11ccc:	.word	0x00000294
   11cd0:	.word	0x00000294
   11cd4:	.word	0x000000ec
   11cd8:	.word	0x00000294
   11cdc:	.word	0x00000294
   11ce0:	.word	0x00000294
   11ce4:	.word	0x00000294
   11ce8:	.word	0x00000294
   11cec:	.word	0x00000294
   11cf0:	.word	0x00000294
   11cf4:	.word	0x00000294
   11cf8:	.word	0x00000294
   11cfc:	.word	0x00000294
   11d00:	.word	0x00000294
   11d04:	.word	0x00000294
   11d08:	.word	0x00000294
   11d0c:	.word	0x00000294
   11d10:	.word	0x00000294
   11d14:	.word	0x00000294
   11d18:	.word	0x00000294
   11d1c:	.word	0x00000294
   11d20:	.word	0x00000294
   11d24:	.word	0x00000294
   11d28:	.word	0x00000294
   11d2c:	.word	0x00000294
   11d30:	.word	0x00000294
   11d34:	.word	0x00000294
   11d38:	.word	0x00000294
   11d3c:	.word	0x00000294
   11d40:	.word	0x00000294
   11d44:	.word	0x00000294
   11d48:	.word	0x00000294
   11d4c:	.word	0x00000294
   11d50:	.word	0x00000294
   11d54:	.word	0x00000294
   11d58:	.word	0x00000294
   11d5c:	.word	0x00000294
   11d60:	.word	0x00000294
   11d64:	.word	0x000000ec
   11d68:	uxtb	r1, r6
   11d6c:	mov	r0, r5
   11d70:	sub	sp, fp, #16
   11d74:	pop	{r4, r5, r6, sl, fp, lr}
   11d78:	b	c850 <gen_wlanhostop>
   11d7c:	cmp	r0, #1
   11d80:	beq	11da0 <sf_gen_ecode+0x174>
   11d84:	cmp	r0, #6
   11d88:	bne	11ec0 <sf_gen_ecode+0x294>
   11d8c:	uxtb	r1, r6
   11d90:	mov	r0, r5
   11d94:	sub	sp, fp, #16
   11d98:	pop	{r4, r5, r6, sl, fp, lr}
   11d9c:	b	c614 <gen_thostop>
   11da0:	uxtb	r1, r6
   11da4:	mov	r0, r5
   11da8:	sub	sp, fp, #16
   11dac:	pop	{r4, r5, r6, sl, fp, lr}
   11db0:	b	c164 <gen_ehostop>
   11db4:	cmp	r0, #192	; 0xc0
   11db8:	beq	11d68 <sf_gen_ecode+0x13c>
   11dbc:	b	11f10 <sf_gen_ecode+0x2e4>
   11dc0:	uxtb	r1, r6
   11dc4:	mov	r0, r5
   11dc8:	sub	sp, fp, #16
   11dcc:	pop	{r4, r5, r6, sl, fp, lr}
   11dd0:	b	e9d0 <gen_ipfchostop>
   11dd4:	ldrb	r0, [r1]
   11dd8:	cmp	r0, #1
   11ddc:	bne	11f04 <sf_gen_ecode+0x2d8>
   11de0:	mov	r0, #1
   11de4:	mov	r1, #4
   11de8:	mov	r2, #8
   11dec:	mov	r3, #65280	; 0xff00
   11df0:	bl	a0a4 <gen_cmp>
   11df4:	mov	r4, r0
   11df8:	ldr	r0, [r0, #44]	; 0x2c
   11dfc:	uxtb	r1, r6
   11e00:	clz	r0, r0
   11e04:	lsr	r0, r0, #5
   11e08:	str	r0, [r4, #44]	; 0x2c
   11e0c:	mov	r0, r5
   11e10:	bl	c164 <gen_ehostop>
   11e14:	cmp	r4, #0
   11e18:	beq	11e4c <sf_gen_ecode+0x220>
   11e1c:	ldr	r1, [r0, #96]	; 0x60
   11e20:	mov	r2, r4
   11e24:	ldr	r3, [r2, #44]	; 0x2c
   11e28:	add	r6, r2, #84	; 0x54
   11e2c:	cmp	r3, #0
   11e30:	mov	r3, #84	; 0x54
   11e34:	movweq	r3, #60	; 0x3c
   11e38:	addeq	r6, r2, #60	; 0x3c
   11e3c:	ldr	r2, [r2, r3]
   11e40:	str	r1, [r6]
   11e44:	cmp	r2, #0
   11e48:	bne	11e24 <sf_gen_ecode+0x1f8>
   11e4c:	ldr	r1, [r4, #44]	; 0x2c
   11e50:	cmp	r0, #0
   11e54:	clz	r1, r1
   11e58:	lsr	r1, r1, #5
   11e5c:	str	r1, [r4, #44]	; 0x2c
   11e60:	ldr	r2, [r0, #44]	; 0x2c
   11e64:	clz	r1, r2
   11e68:	lsr	r1, r1, #5
   11e6c:	str	r1, [r0, #44]	; 0x2c
   11e70:	str	r0, [sp, #4]
   11e74:	beq	11edc <sf_gen_ecode+0x2b0>
   11e78:	cmp	r2, #0
   11e7c:	mov	r2, #60	; 0x3c
   11e80:	add	r1, r0, #60	; 0x3c
   11e84:	movweq	r2, #84	; 0x54
   11e88:	addeq	r1, r0, #84	; 0x54
   11e8c:	ldr	r2, [r0, r2]
   11e90:	cmp	r2, #0
   11e94:	beq	11ee0 <sf_gen_ecode+0x2b4>
   11e98:	ldr	r3, [r2, #44]	; 0x2c
   11e9c:	add	r1, r2, #84	; 0x54
   11ea0:	cmp	r3, #0
   11ea4:	mov	r3, #84	; 0x54
   11ea8:	movweq	r3, #60	; 0x3c
   11eac:	addeq	r1, r2, #60	; 0x3c
   11eb0:	ldr	r2, [r2, r3]
   11eb4:	cmp	r2, #0
   11eb8:	bne	11e98 <sf_gen_ecode+0x26c>
   11ebc:	b	11ee0 <sf_gen_ecode+0x2b4>
   11ec0:	cmp	r0, #10
   11ec4:	bne	11f10 <sf_gen_ecode+0x2e4>
   11ec8:	uxtb	r1, r6
   11ecc:	mov	r0, r5
   11ed0:	sub	sp, fp, #16
   11ed4:	pop	{r4, r5, r6, sl, fp, lr}
   11ed8:	b	c3d8 <gen_fhostop>
   11edc:	add	r1, sp, #4
   11ee0:	str	r4, [r1]
   11ee4:	ldr	r1, [r0, #44]	; 0x2c
   11ee8:	clz	r1, r1
   11eec:	lsr	r1, r1, #5
   11ef0:	str	r1, [r0, #44]	; 0x2c
   11ef4:	ldr	r1, [r4, #96]	; 0x60
   11ef8:	str	r1, [r0, #96]	; 0x60
   11efc:	sub	sp, fp, #16
   11f00:	pop	{r4, r5, r6, sl, fp, pc}
   11f04:	ldr	r0, [pc, #24]	; 11f24 <sf_gen_ecode+0x2f8>
   11f08:	add	r0, pc, r0
   11f0c:	bl	214c <sf_bpf_error>
   11f10:	ldr	r0, [pc, #8]	; 11f20 <sf_gen_ecode+0x2f4>
   11f14:	add	r0, pc, r0
   11f18:	bl	214c <sf_bpf_error>
   11f1c:	.word	0x0003488c
   11f20:	.word	0x0001744b
   11f24:	.word	0x000174b3

00011f28 <sf_append>:
   11f28:	mov	r2, r0
   11f2c:	ldr	r0, [r0, #16]
   11f30:	cmp	r0, #0
   11f34:	bne	11f28 <sf_append>
   11f38:	str	r1, [r2, #16]
   11f3c:	bx	lr

00011f40 <sf_gen_load>:
   11f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f44:	add	fp, sp, #28
   11f48:	sub	sp, sp, #20
   11f4c:	mov	r5, r2
   11f50:	mov	sl, r1
   11f54:	mov	r6, r0
   11f58:	bl	1305c <alloc_reg>
   11f5c:	mov	r4, r0
   11f60:	ldr	r0, [sl, #8]
   11f64:	ldr	r1, [pc, #3952]	; 12edc <sf_gen_load+0xf9c>
   11f68:	cmp	r5, #1
   11f6c:	mov	r2, #0
   11f70:	add	r1, pc, r1
   11f74:	str	r2, [r1, r0, lsl #2]
   11f78:	beq	11fb4 <sf_gen_load+0x74>
   11f7c:	cmp	r5, #2
   11f80:	beq	11fa0 <sf_gen_load+0x60>
   11f84:	cmp	r5, #4
   11f88:	bne	12fd4 <sf_gen_load+0x1094>
   11f8c:	mov	r2, #64	; 0x40
   11f90:	sub	r0, r6, #1
   11f94:	cmp	r0, #39	; 0x27
   11f98:	bls	11fc4 <sf_gen_load+0x84>
   11f9c:	b	12fc0 <sf_gen_load+0x1080>
   11fa0:	mov	r2, #72	; 0x48
   11fa4:	sub	r0, r6, #1
   11fa8:	cmp	r0, #39	; 0x27
   11fac:	bls	11fc4 <sf_gen_load+0x84>
   11fb0:	b	12fc0 <sf_gen_load+0x1080>
   11fb4:	mov	r2, #80	; 0x50
   11fb8:	sub	r0, r6, #1
   11fbc:	cmp	r0, #39	; 0x27
   11fc0:	bhi	12fc0 <sf_gen_load+0x1080>
   11fc4:	add	r1, pc, #28
   11fc8:	ldr	r7, [pc, #4092]	; 12fcc <sf_gen_load+0x108c>
   11fcc:	ldr	r9, [pc, #4092]	; 12fd0 <sf_gen_load+0x1090>
   11fd0:	str	r4, [sp, #8]
   11fd4:	str	r2, [sp, #12]
   11fd8:	ldr	r0, [r1, r0, lsl #2]
   11fdc:	add	r7, pc, r7
   11fe0:	add	r9, pc, r9
   11fe4:	add	pc, r1, r0
   11fe8:	.word	0x00000bac
   11fec:	.word	0x000000a0
   11ff0:	.word	0x000000a0
   11ff4:	.word	0x000000a0
   11ff8:	.word	0x0000012c
   11ffc:	.word	0x0000012c
   12000:	.word	0x0000012c
   12004:	.word	0x0000012c
   12008:	.word	0x0000012c
   1200c:	.word	0x0000012c
   12010:	.word	0x000000a0
   12014:	.word	0x000000a0
   12018:	.word	0x000000a0
   1201c:	.word	0x000000a0
   12020:	.word	0x000000a0
   12024:	.word	0x000000a0
   12028:	.word	0x000000a0
   1202c:	.word	0x00000ff8
   12030:	.word	0x00000fd8
   12034:	.word	0x00000fd8
   12038:	.word	0x0000012c
   1203c:	.word	0x0000012c
   12040:	.word	0x00000fd8
   12044:	.word	0x00000fd8
   12048:	.word	0x00000fd8
   1204c:	.word	0x00000fd8
   12050:	.word	0x00000fd8
   12054:	.word	0x00000fd8
   12058:	.word	0x00000fd8
   1205c:	.word	0x00000fd8
   12060:	.word	0x00000fd8
   12064:	.word	0x00000fd8
   12068:	.word	0x00000fd8
   1206c:	.word	0x00000fd8
   12070:	.word	0x00000fd8
   12074:	.word	0x00000fd8
   12078:	.word	0x00000fd8
   1207c:	.word	0x00000fd8
   12080:	.word	0x00000fd8
   12084:	.word	0x00000b38
   12088:	ldrb	r0, [r7, #16]
   1208c:	str	r6, [sp, #4]
   12090:	cmp	r0, #0
   12094:	beq	12180 <sf_gen_load+0x240>
   12098:	ldr	r6, [r7, #100]	; 0x64
   1209c:	cmn	r6, #1
   120a0:	bne	120b0 <sf_gen_load+0x170>
   120a4:	bl	1305c <alloc_reg>
   120a8:	mov	r6, r0
   120ac:	str	r0, [r7, #100]	; 0x64
   120b0:	ldr	r0, [r7, #92]	; 0x5c
   120b4:	mov	r4, r9
   120b8:	ldr	r5, [r4, r0, lsl #3]!
   120bc:	cmp	r5, #19
   120c0:	bhi	12534 <sf_gen_load+0x5f4>
   120c4:	mov	r1, r7
   120c8:	add	r7, r0, #1
   120cc:	cmp	r0, #15
   120d0:	str	r7, [r1, #92]	; 0x5c
   120d4:	bge	12fb4 <sf_gen_load+0x1074>
   120d8:	mov	r0, #1024	; 0x400
   120dc:	lsl	r5, r0, r7
   120e0:	mov	r0, r5
   120e4:	bl	e34 <malloc@plt>
   120e8:	cmp	r0, #0
   120ec:	str	r0, [r4, #12]
   120f0:	beq	12fb4 <sf_gen_load+0x1074>
   120f4:	mov	r1, #0
   120f8:	mov	r2, r5
   120fc:	add	r4, r4, #8
   12100:	bl	ea0 <memset@plt>
   12104:	cmp	r5, #19
   12108:	str	r5, [r4]
   1210c:	bhi	12538 <sf_gen_load+0x5f8>
   12110:	b	12fb4 <sf_gen_load+0x1074>
   12114:	str	r6, [sp, #4]
   12118:	bl	13468 <gen_loadx_iphdrlen>
   1211c:	mov	r8, r0
   12120:	ldr	r0, [r7, #92]	; 0x5c
   12124:	mov	r6, r9
   12128:	ldr	r5, [r6, r0, lsl #3]!
   1212c:	cmp	r5, #19
   12130:	bhi	12188 <sf_gen_load+0x248>
   12134:	add	r4, r0, #1
   12138:	cmp	r0, #15
   1213c:	str	r4, [r7, #92]	; 0x5c
   12140:	bge	12fb4 <sf_gen_load+0x1074>
   12144:	mov	r0, #1024	; 0x400
   12148:	lsl	r5, r0, r4
   1214c:	mov	r0, r5
   12150:	bl	e34 <malloc@plt>
   12154:	cmp	r0, #0
   12158:	str	r0, [r6, #12]
   1215c:	beq	12fb4 <sf_gen_load+0x1074>
   12160:	mov	r1, #0
   12164:	mov	r2, r5
   12168:	add	r6, r6, #8
   1216c:	bl	ea0 <memset@plt>
   12170:	cmp	r5, #19
   12174:	str	r5, [r6]
   12178:	bhi	1218c <sf_gen_load+0x24c>
   1217c:	b	12fb4 <sf_gen_load+0x1074>
   12180:	ldr	r7, [r7, #92]	; 0x5c
   12184:	b	125bc <sf_gen_load+0x67c>
   12188:	mov	r4, r0
   1218c:	sub	r1, r5, #20
   12190:	mov	r2, #96	; 0x60
   12194:	str	r1, [r6]
   12198:	ldr	r0, [r6, #4]
   1219c:	str	r2, [r0, r1]!
   121a0:	mov	r2, r8
   121a4:	ldr	r1, [sl, #8]
   121a8:	str	r1, [r0, #12]
   121ac:	mov	r1, r2
   121b0:	ldr	r2, [r2, #16]
   121b4:	cmp	r2, #0
   121b8:	bne	121ac <sf_gen_load+0x26c>
   121bc:	str	r0, [r1, #16]
   121c0:	mov	r7, r9
   121c4:	ldr	r5, [r7, r4, lsl #3]!
   121c8:	cmp	r5, #19
   121cc:	bhi	12224 <sf_gen_load+0x2e4>
   121d0:	ldr	r0, [pc, #3684]	; 1303c <sf_gen_load+0x10fc>
   121d4:	add	r6, r4, #1
   121d8:	cmp	r4, #15
   121dc:	add	r0, pc, r0
   121e0:	str	r6, [r0, #92]	; 0x5c
   121e4:	bge	12fb4 <sf_gen_load+0x1074>
   121e8:	mov	r0, #1024	; 0x400
   121ec:	lsl	r5, r0, r6
   121f0:	mov	r0, r5
   121f4:	bl	e34 <malloc@plt>
   121f8:	cmp	r0, #0
   121fc:	str	r0, [r7, #12]
   12200:	beq	12fb4 <sf_gen_load+0x1074>
   12204:	mov	r1, #0
   12208:	mov	r2, r5
   1220c:	add	r7, r7, #8
   12210:	bl	ea0 <memset@plt>
   12214:	cmp	r5, #19
   12218:	str	r5, [r7]
   1221c:	bhi	12228 <sf_gen_load+0x2e8>
   12220:	b	12fb4 <sf_gen_load+0x1074>
   12224:	mov	r6, r4
   12228:	sub	r1, r5, #20
   1222c:	mov	r2, #12
   12230:	str	r1, [r7]
   12234:	ldr	r0, [r7, #4]
   12238:	str	r2, [r0, r1]!
   1223c:	mov	r2, r8
   12240:	mov	r1, r2
   12244:	ldr	r2, [r2, #16]
   12248:	cmp	r2, #0
   1224c:	bne	12240 <sf_gen_load+0x300>
   12250:	str	r0, [r1, #16]
   12254:	mov	r7, r9
   12258:	ldr	r5, [r7, r6, lsl #3]!
   1225c:	cmp	r5, #19
   12260:	bhi	122b8 <sf_gen_load+0x378>
   12264:	ldr	r0, [pc, #3540]	; 13040 <sf_gen_load+0x1100>
   12268:	add	r4, r6, #1
   1226c:	cmp	r6, #15
   12270:	add	r0, pc, r0
   12274:	str	r4, [r0, #92]	; 0x5c
   12278:	bge	12fb4 <sf_gen_load+0x1074>
   1227c:	mov	r0, #1024	; 0x400
   12280:	lsl	r5, r0, r4
   12284:	mov	r0, r5
   12288:	bl	e34 <malloc@plt>
   1228c:	cmp	r0, #0
   12290:	str	r0, [r7, #12]
   12294:	beq	12fb4 <sf_gen_load+0x1074>
   12298:	mov	r1, #0
   1229c:	mov	r2, r5
   122a0:	add	r7, r7, #8
   122a4:	bl	ea0 <memset@plt>
   122a8:	cmp	r5, #19
   122ac:	str	r5, [r7]
   122b0:	bhi	122bc <sf_gen_load+0x37c>
   122b4:	b	12fb4 <sf_gen_load+0x1074>
   122b8:	mov	r4, r6
   122bc:	sub	r1, r5, #20
   122c0:	mov	r2, #7
   122c4:	str	r1, [r7]
   122c8:	ldr	r0, [r7, #4]
   122cc:	str	r2, [r0, r1]!
   122d0:	mov	r2, r8
   122d4:	mov	r1, r2
   122d8:	ldr	r2, [r2, #16]
   122dc:	cmp	r2, #0
   122e0:	bne	122d4 <sf_gen_load+0x394>
   122e4:	str	r0, [r1, #16]
   122e8:	mov	r6, r9
   122ec:	ldr	r5, [r6, r4, lsl #3]!
   122f0:	ldr	r7, [pc, #3404]	; 13044 <sf_gen_load+0x1104>
   122f4:	add	r7, pc, r7
   122f8:	cmp	r5, #19
   122fc:	bhi	12350 <sf_gen_load+0x410>
   12300:	add	r0, r4, #1
   12304:	cmp	r4, #15
   12308:	str	r0, [r7, #92]	; 0x5c
   1230c:	bge	12fb4 <sf_gen_load+0x1074>
   12310:	mov	r1, #1024	; 0x400
   12314:	lsl	r5, r1, r0
   12318:	mov	r0, r5
   1231c:	bl	e34 <malloc@plt>
   12320:	ldr	r4, [sp, #8]
   12324:	cmp	r0, #0
   12328:	str	r0, [r6, #12]
   1232c:	beq	12fb4 <sf_gen_load+0x1074>
   12330:	mov	r1, #0
   12334:	mov	r2, r5
   12338:	add	r6, r6, #8
   1233c:	bl	ea0 <memset@plt>
   12340:	cmp	r5, #19
   12344:	str	r5, [r6]
   12348:	bhi	12354 <sf_gen_load+0x414>
   1234c:	b	12fb4 <sf_gen_load+0x1074>
   12350:	ldr	r4, [sp, #8]
   12354:	sub	r1, r5, #20
   12358:	ldr	r2, [sp, #12]
   1235c:	str	r1, [r6]
   12360:	ldr	r0, [r6, #4]
   12364:	str	r2, [r0, r1]!
   12368:	mov	r2, r8
   1236c:	mov	r1, r2
   12370:	ldr	r2, [r2, #16]
   12374:	cmp	r2, #0
   12378:	bne	1236c <sf_gen_load+0x42c>
   1237c:	str	r0, [r1, #16]
   12380:	ldr	r1, [r7, #44]	; 0x2c
   12384:	ldr	r2, [r7, #48]	; 0x30
   12388:	add	r1, r2, r1
   1238c:	str	r1, [r0, #12]
   12390:	ldr	r0, [sp, #4]
   12394:	ldr	r2, [sl, #4]
   12398:	mov	r1, r2
   1239c:	ldr	r2, [r2, #16]
   123a0:	cmp	r2, #0
   123a4:	bne	12398 <sf_gen_load+0x458>
   123a8:	str	r8, [r1, #16]
   123ac:	bl	5428 <sf_gen_proto_abbrev>
   123b0:	mov	r7, r0
   123b4:	bl	a160 <gen_ipfrag>
   123b8:	mov	r6, r0
   123bc:	cmp	r7, #0
   123c0:	beq	123f4 <sf_gen_load+0x4b4>
   123c4:	ldr	r0, [r6, #96]	; 0x60
   123c8:	mov	r1, r7
   123cc:	ldr	r2, [r1, #44]	; 0x2c
   123d0:	add	r3, r1, #84	; 0x54
   123d4:	cmp	r2, #0
   123d8:	mov	r2, #84	; 0x54
   123dc:	movweq	r2, #60	; 0x3c
   123e0:	addeq	r3, r1, #60	; 0x3c
   123e4:	ldr	r1, [r1, r2]
   123e8:	str	r0, [r3]
   123ec:	cmp	r1, #0
   123f0:	bne	123cc <sf_gen_load+0x48c>
   123f4:	ldr	r0, [r7, #44]	; 0x2c
   123f8:	cmp	r6, #0
   123fc:	clz	r0, r0
   12400:	lsr	r0, r0, #5
   12404:	str	r0, [r7, #44]	; 0x2c
   12408:	ldr	r1, [r6, #44]	; 0x2c
   1240c:	clz	r0, r1
   12410:	lsr	r0, r0, #5
   12414:	str	r0, [r6, #44]	; 0x2c
   12418:	str	r6, [sp, #16]
   1241c:	beq	12468 <sf_gen_load+0x528>
   12420:	cmp	r1, #0
   12424:	mov	r1, #60	; 0x3c
   12428:	add	r0, r6, #60	; 0x3c
   1242c:	movweq	r1, #84	; 0x54
   12430:	addeq	r0, r6, #84	; 0x54
   12434:	ldr	r1, [r6, r1]
   12438:	cmp	r1, #0
   1243c:	beq	1246c <sf_gen_load+0x52c>
   12440:	ldr	r2, [r1, #44]	; 0x2c
   12444:	add	r0, r1, #84	; 0x54
   12448:	cmp	r2, #0
   1244c:	mov	r2, #84	; 0x54
   12450:	movweq	r2, #60	; 0x3c
   12454:	addeq	r0, r1, #60	; 0x3c
   12458:	ldr	r1, [r1, r2]
   1245c:	cmp	r1, #0
   12460:	bne	12440 <sf_gen_load+0x500>
   12464:	b	1246c <sf_gen_load+0x52c>
   12468:	add	r0, sp, #16
   1246c:	str	r7, [r0]
   12470:	ldr	r0, [r6, #44]	; 0x2c
   12474:	clz	r0, r0
   12478:	lsr	r0, r0, #5
   1247c:	str	r0, [r6, #44]	; 0x2c
   12480:	ldr	r1, [r7, #96]	; 0x60
   12484:	str	r1, [r6, #96]	; 0x60
   12488:	ldr	r0, [sl]
   1248c:	cmp	r0, #0
   12490:	beq	126d8 <sf_gen_load+0x798>
   12494:	mov	r2, r0
   12498:	ldr	r3, [r2, #44]	; 0x2c
   1249c:	add	r7, r2, #84	; 0x54
   124a0:	cmp	r3, #0
   124a4:	mov	r3, #84	; 0x54
   124a8:	movweq	r3, #60	; 0x3c
   124ac:	addeq	r7, r2, #60	; 0x3c
   124b0:	ldr	r2, [r2, r3]
   124b4:	str	r1, [r7]
   124b8:	cmp	r2, #0
   124bc:	bne	12498 <sf_gen_load+0x558>
   124c0:	ldr	r1, [r0, #44]	; 0x2c
   124c4:	cmp	r6, #0
   124c8:	clz	r1, r1
   124cc:	lsr	r1, r1, #5
   124d0:	str	r1, [r0, #44]	; 0x2c
   124d4:	ldr	r2, [r6, #44]	; 0x2c
   124d8:	clz	r1, r2
   124dc:	lsr	r1, r1, #5
   124e0:	str	r1, [r6, #44]	; 0x2c
   124e4:	str	r6, [sp, #16]
   124e8:	beq	126b8 <sf_gen_load+0x778>
   124ec:	cmp	r2, #0
   124f0:	mov	r2, #60	; 0x3c
   124f4:	add	r1, r6, #60	; 0x3c
   124f8:	movweq	r2, #84	; 0x54
   124fc:	addeq	r1, r6, #84	; 0x54
   12500:	ldr	r2, [r6, r2]
   12504:	cmp	r2, #0
   12508:	beq	126bc <sf_gen_load+0x77c>
   1250c:	ldr	r3, [r2, #44]	; 0x2c
   12510:	add	r1, r2, #84	; 0x54
   12514:	cmp	r3, #0
   12518:	mov	r3, #84	; 0x54
   1251c:	movweq	r3, #60	; 0x3c
   12520:	addeq	r1, r2, #60	; 0x3c
   12524:	ldr	r2, [r2, r3]
   12528:	cmp	r2, #0
   1252c:	bne	1250c <sf_gen_load+0x5cc>
   12530:	b	126bc <sf_gen_load+0x77c>
   12534:	mov	r7, r0
   12538:	sub	r0, r5, #20
   1253c:	mov	r1, #97	; 0x61
   12540:	str	r0, [r4]
   12544:	ldr	r8, [r4, #4]
   12548:	str	r1, [r8, r0]!
   1254c:	cmp	r8, #0
   12550:	str	r6, [r8, #12]
   12554:	beq	125bc <sf_gen_load+0x67c>
   12558:	mov	r4, r9
   1255c:	ldr	r5, [r4, r7, lsl #3]!
   12560:	cmp	r5, #19
   12564:	bhi	127c4 <sf_gen_load+0x884>
   12568:	ldr	r0, [pc, #2732]	; 1301c <sf_gen_load+0x10dc>
   1256c:	add	r6, r7, #1
   12570:	cmp	r7, #15
   12574:	add	r0, pc, r0
   12578:	str	r6, [r0, #92]	; 0x5c
   1257c:	bge	12fb4 <sf_gen_load+0x1074>
   12580:	mov	r0, #1024	; 0x400
   12584:	lsl	r5, r0, r6
   12588:	mov	r0, r5
   1258c:	bl	e34 <malloc@plt>
   12590:	cmp	r0, #0
   12594:	str	r0, [r4, #12]
   12598:	beq	12fb4 <sf_gen_load+0x1074>
   1259c:	mov	r1, #0
   125a0:	mov	r2, r5
   125a4:	add	r4, r4, #8
   125a8:	bl	ea0 <memset@plt>
   125ac:	cmp	r5, #19
   125b0:	str	r5, [r4]
   125b4:	bhi	127c8 <sf_gen_load+0x888>
   125b8:	b	12fb4 <sf_gen_load+0x1074>
   125bc:	mov	r4, r9
   125c0:	mov	r6, sl
   125c4:	ldr	r5, [r4, r7, lsl #3]!
   125c8:	cmp	r5, #19
   125cc:	bhi	1262c <sf_gen_load+0x6ec>
   125d0:	ldr	r0, [pc, #2648]	; 13030 <sf_gen_load+0x10f0>
   125d4:	add	sl, r7, #1
   125d8:	cmp	r7, #15
   125dc:	add	r0, pc, r0
   125e0:	str	sl, [r0, #92]	; 0x5c
   125e4:	bge	12fb4 <sf_gen_load+0x1074>
   125e8:	mov	r0, #1024	; 0x400
   125ec:	lsl	r5, r0, sl
   125f0:	mov	r0, r5
   125f4:	bl	e34 <malloc@plt>
   125f8:	cmp	r0, #0
   125fc:	str	r0, [r4, #12]
   12600:	beq	12fb4 <sf_gen_load+0x1074>
   12604:	mov	r1, #0
   12608:	mov	r2, r5
   1260c:	add	r4, r4, #8
   12610:	bl	ea0 <memset@plt>
   12614:	str	r5, [r4]
   12618:	cmp	r5, #19
   1261c:	ldr	r7, [pc, #2576]	; 13034 <sf_gen_load+0x10f4>
   12620:	add	r7, pc, r7
   12624:	bhi	12638 <sf_gen_load+0x6f8>
   12628:	b	12fb4 <sf_gen_load+0x1074>
   1262c:	mov	sl, r7
   12630:	ldr	r7, [pc, #2528]	; 13018 <sf_gen_load+0x10d8>
   12634:	add	r7, pc, r7
   12638:	sub	r0, r5, #20
   1263c:	mov	r1, #97	; 0x61
   12640:	str	r0, [r4]
   12644:	ldr	r8, [r4, #4]
   12648:	str	r1, [r8, r0]!
   1264c:	ldr	r0, [r6, #8]
   12650:	str	r0, [r8, #12]
   12654:	mov	r4, r9
   12658:	ldr	r5, [r4, sl, lsl #3]!
   1265c:	cmp	r5, #19
   12660:	bhi	12948 <sf_gen_load+0xa08>
   12664:	add	r0, sl, #1
   12668:	cmp	sl, #15
   1266c:	str	r0, [r7, #92]	; 0x5c
   12670:	bge	12fb4 <sf_gen_load+0x1074>
   12674:	mov	r1, #1024	; 0x400
   12678:	lsl	r5, r1, r0
   1267c:	mov	r0, r5
   12680:	bl	e34 <malloc@plt>
   12684:	cmp	r0, #0
   12688:	str	r0, [r4, #12]
   1268c:	beq	12fb4 <sf_gen_load+0x1074>
   12690:	mov	r1, #0
   12694:	mov	r2, r5
   12698:	mov	sl, r6
   1269c:	add	r4, r4, #8
   126a0:	bl	ea0 <memset@plt>
   126a4:	ldr	r0, [sp, #4]
   126a8:	cmp	r5, #19
   126ac:	str	r5, [r4]
   126b0:	bhi	12950 <sf_gen_load+0xa10>
   126b4:	b	12fb4 <sf_gen_load+0x1074>
   126b8:	add	r1, sp, #16
   126bc:	str	r0, [r1]
   126c0:	ldr	r1, [r6, #44]	; 0x2c
   126c4:	clz	r1, r1
   126c8:	lsr	r1, r1, #5
   126cc:	str	r1, [r6, #44]	; 0x2c
   126d0:	ldr	r0, [r0, #96]	; 0x60
   126d4:	str	r0, [r6, #96]	; 0x60
   126d8:	mov	r0, #2048	; 0x800
   126dc:	bl	6fb4 <gen_linktype>
   126e0:	cmp	r0, #0
   126e4:	beq	12718 <sf_gen_load+0x7d8>
   126e8:	ldr	r1, [r6, #96]	; 0x60
   126ec:	mov	r2, r0
   126f0:	ldr	r3, [r2, #44]	; 0x2c
   126f4:	add	r7, r2, #84	; 0x54
   126f8:	cmp	r3, #0
   126fc:	mov	r3, #84	; 0x54
   12700:	movweq	r3, #60	; 0x3c
   12704:	addeq	r7, r2, #60	; 0x3c
   12708:	ldr	r2, [r2, r3]
   1270c:	str	r1, [r7]
   12710:	cmp	r2, #0
   12714:	bne	126f0 <sf_gen_load+0x7b0>
   12718:	ldr	r1, [r0, #44]	; 0x2c
   1271c:	cmp	r6, #0
   12720:	clz	r1, r1
   12724:	lsr	r1, r1, #5
   12728:	str	r1, [r0, #44]	; 0x2c
   1272c:	ldr	r2, [r6, #44]	; 0x2c
   12730:	clz	r1, r2
   12734:	lsr	r1, r1, #5
   12738:	str	r1, [r6, #44]	; 0x2c
   1273c:	str	r6, [sp, #16]
   12740:	beq	12794 <sf_gen_load+0x854>
   12744:	cmp	r2, #0
   12748:	mov	r2, #60	; 0x3c
   1274c:	add	r1, r6, #60	; 0x3c
   12750:	movweq	r2, #84	; 0x54
   12754:	addeq	r1, r6, #84	; 0x54
   12758:	ldr	r2, [r6, r2]
   1275c:	ldr	r7, [pc, #2280]	; 1304c <sf_gen_load+0x110c>
   12760:	cmp	r2, #0
   12764:	add	r7, pc, r7
   12768:	beq	127a0 <sf_gen_load+0x860>
   1276c:	ldr	r3, [r2, #44]	; 0x2c
   12770:	add	r1, r2, #84	; 0x54
   12774:	cmp	r3, #0
   12778:	mov	r3, #84	; 0x54
   1277c:	movweq	r3, #60	; 0x3c
   12780:	addeq	r1, r2, #60	; 0x3c
   12784:	ldr	r2, [r2, r3]
   12788:	cmp	r2, #0
   1278c:	bne	1276c <sf_gen_load+0x82c>
   12790:	b	127a0 <sf_gen_load+0x860>
   12794:	ldr	r7, [pc, #2220]	; 13048 <sf_gen_load+0x1108>
   12798:	add	r1, sp, #16
   1279c:	add	r7, pc, r7
   127a0:	str	r0, [r1]
   127a4:	ldr	r1, [r6, #44]	; 0x2c
   127a8:	clz	r1, r1
   127ac:	lsr	r1, r1, #5
   127b0:	str	r1, [r6, #44]	; 0x2c
   127b4:	ldr	r0, [r0, #96]	; 0x60
   127b8:	str	r0, [r6, #96]	; 0x60
   127bc:	str	r6, [sl]
   127c0:	b	12a88 <sf_gen_load+0xb48>
   127c4:	mov	r6, r7
   127c8:	sub	r1, r5, #20
   127cc:	mov	r2, #96	; 0x60
   127d0:	str	r1, [r4]
   127d4:	ldr	r0, [r4, #4]
   127d8:	str	r2, [r0, r1]!
   127dc:	mov	r2, r8
   127e0:	ldr	r1, [sl, #8]
   127e4:	str	r1, [r0, #12]
   127e8:	mov	r1, r2
   127ec:	ldr	r2, [r2, #16]
   127f0:	cmp	r2, #0
   127f4:	bne	127e8 <sf_gen_load+0x8a8>
   127f8:	str	r0, [r1, #16]
   127fc:	mov	r4, r9
   12800:	ldr	r5, [r4, r6, lsl #3]!
   12804:	cmp	r5, #19
   12808:	bhi	12860 <sf_gen_load+0x920>
   1280c:	ldr	r0, [pc, #2060]	; 13020 <sf_gen_load+0x10e0>
   12810:	add	r7, r6, #1
   12814:	cmp	r6, #15
   12818:	add	r0, pc, r0
   1281c:	str	r7, [r0, #92]	; 0x5c
   12820:	bge	12fb4 <sf_gen_load+0x1074>
   12824:	mov	r0, #1024	; 0x400
   12828:	lsl	r5, r0, r7
   1282c:	mov	r0, r5
   12830:	bl	e34 <malloc@plt>
   12834:	cmp	r0, #0
   12838:	str	r0, [r4, #12]
   1283c:	beq	12fb4 <sf_gen_load+0x1074>
   12840:	mov	r1, #0
   12844:	mov	r2, r5
   12848:	add	r4, r4, #8
   1284c:	bl	ea0 <memset@plt>
   12850:	cmp	r5, #19
   12854:	str	r5, [r4]
   12858:	bhi	12864 <sf_gen_load+0x924>
   1285c:	b	12fb4 <sf_gen_load+0x1074>
   12860:	mov	r7, r6
   12864:	sub	r1, r5, #20
   12868:	mov	r2, #12
   1286c:	str	r1, [r4]
   12870:	ldr	r0, [r4, #4]
   12874:	str	r2, [r0, r1]!
   12878:	mov	r2, r8
   1287c:	mov	r1, r2
   12880:	ldr	r2, [r2, #16]
   12884:	cmp	r2, #0
   12888:	bne	1287c <sf_gen_load+0x93c>
   1288c:	str	r0, [r1, #16]
   12890:	mov	r4, r9
   12894:	mov	r6, sl
   12898:	ldr	r5, [r4, r7, lsl #3]!
   1289c:	cmp	r5, #19
   128a0:	bhi	12900 <sf_gen_load+0x9c0>
   128a4:	ldr	r0, [pc, #1916]	; 13028 <sf_gen_load+0x10e8>
   128a8:	add	sl, r7, #1
   128ac:	cmp	r7, #15
   128b0:	add	r0, pc, r0
   128b4:	str	sl, [r0, #92]	; 0x5c
   128b8:	bge	12fb4 <sf_gen_load+0x1074>
   128bc:	mov	r0, #1024	; 0x400
   128c0:	lsl	r5, r0, sl
   128c4:	mov	r0, r5
   128c8:	bl	e34 <malloc@plt>
   128cc:	cmp	r0, #0
   128d0:	str	r0, [r4, #12]
   128d4:	beq	12fb4 <sf_gen_load+0x1074>
   128d8:	mov	r1, #0
   128dc:	mov	r2, r5
   128e0:	add	r4, r4, #8
   128e4:	bl	ea0 <memset@plt>
   128e8:	str	r5, [r4]
   128ec:	cmp	r5, #19
   128f0:	ldr	r7, [pc, #1844]	; 1302c <sf_gen_load+0x10ec>
   128f4:	add	r7, pc, r7
   128f8:	bhi	1290c <sf_gen_load+0x9cc>
   128fc:	b	12fb4 <sf_gen_load+0x1074>
   12900:	mov	sl, r7
   12904:	ldr	r7, [pc, #1816]	; 13024 <sf_gen_load+0x10e4>
   12908:	add	r7, pc, r7
   1290c:	sub	r1, r5, #20
   12910:	mov	r2, #7
   12914:	str	r1, [r4]
   12918:	ldr	r0, [r4, #4]
   1291c:	str	r2, [r0, r1]!
   12920:	mov	r2, r8
   12924:	mov	r1, r2
   12928:	ldr	r2, [r2, #16]
   1292c:	cmp	r2, #0
   12930:	bne	12924 <sf_gen_load+0x9e4>
   12934:	str	r0, [r1, #16]
   12938:	mov	r4, r9
   1293c:	ldr	r5, [r4, sl, lsl #3]!
   12940:	cmp	r5, #19
   12944:	bls	12664 <sf_gen_load+0x724>
   12948:	ldr	r0, [sp, #4]
   1294c:	mov	sl, r6
   12950:	sub	r1, r5, #20
   12954:	ldr	r2, [sp, #12]
   12958:	str	r1, [r4]
   1295c:	ldr	r3, [r4, #4]
   12960:	str	r2, [r3, r1]!
   12964:	ldr	r1, [r7, #44]	; 0x2c
   12968:	ldr	r2, [r7, #48]	; 0x30
   1296c:	add	r1, r2, r1
   12970:	mov	r2, r8
   12974:	str	r1, [r3, #12]
   12978:	mov	r1, r2
   1297c:	ldr	r2, [r2, #16]
   12980:	cmp	r2, #0
   12984:	bne	12978 <sf_gen_load+0xa38>
   12988:	str	r3, [r1, #16]
   1298c:	ldr	r4, [sp, #8]
   12990:	ldr	r2, [sl, #4]
   12994:	mov	r1, r2
   12998:	ldr	r2, [r2, #16]
   1299c:	cmp	r2, #0
   129a0:	bne	12994 <sf_gen_load+0xa54>
   129a4:	str	r8, [r1, #16]
   129a8:	bl	5428 <sf_gen_proto_abbrev>
   129ac:	ldr	r1, [sl]
   129b0:	cmp	r1, #0
   129b4:	beq	12a84 <sf_gen_load+0xb44>
   129b8:	ldr	r2, [r0, #96]	; 0x60
   129bc:	mov	r3, r1
   129c0:	ldr	r7, [r3, #44]	; 0x2c
   129c4:	add	r6, r3, #84	; 0x54
   129c8:	cmp	r7, #0
   129cc:	mov	r7, #84	; 0x54
   129d0:	movweq	r7, #60	; 0x3c
   129d4:	addeq	r6, r3, #60	; 0x3c
   129d8:	ldr	r3, [r3, r7]
   129dc:	str	r2, [r6]
   129e0:	cmp	r3, #0
   129e4:	bne	129c0 <sf_gen_load+0xa80>
   129e8:	ldr	r2, [r1, #44]	; 0x2c
   129ec:	cmp	r0, #0
   129f0:	clz	r2, r2
   129f4:	lsr	r2, r2, #5
   129f8:	str	r2, [r1, #44]	; 0x2c
   129fc:	ldr	r3, [r0, #44]	; 0x2c
   12a00:	clz	r2, r3
   12a04:	lsr	r2, r2, #5
   12a08:	str	r2, [r0, #44]	; 0x2c
   12a0c:	str	r0, [sp, #16]
   12a10:	beq	12a5c <sf_gen_load+0xb1c>
   12a14:	cmp	r3, #0
   12a18:	mov	r3, #60	; 0x3c
   12a1c:	add	r2, r0, #60	; 0x3c
   12a20:	movweq	r3, #84	; 0x54
   12a24:	addeq	r2, r0, #84	; 0x54
   12a28:	ldr	r3, [r0, r3]
   12a2c:	cmp	r3, #0
   12a30:	beq	12a60 <sf_gen_load+0xb20>
   12a34:	ldr	r7, [r3, #44]	; 0x2c
   12a38:	add	r2, r3, #84	; 0x54
   12a3c:	cmp	r7, #0
   12a40:	mov	r7, #84	; 0x54
   12a44:	movweq	r7, #60	; 0x3c
   12a48:	addeq	r2, r3, #60	; 0x3c
   12a4c:	ldr	r3, [r3, r7]
   12a50:	cmp	r3, #0
   12a54:	bne	12a34 <sf_gen_load+0xaf4>
   12a58:	b	12a60 <sf_gen_load+0xb20>
   12a5c:	add	r2, sp, #16
   12a60:	str	r1, [r2]
   12a64:	ldr	r2, [r0, #44]	; 0x2c
   12a68:	clz	r2, r2
   12a6c:	lsr	r2, r2, #5
   12a70:	str	r2, [r0, #44]	; 0x2c
   12a74:	ldr	r1, [r1, #96]	; 0x60
   12a78:	str	r1, [r0, #96]	; 0x60
   12a7c:	ldr	r7, [pc, #1460]	; 13038 <sf_gen_load+0x10f8>
   12a80:	add	r7, pc, r7
   12a84:	str	r0, [sl]
   12a88:	str	r4, [sl, #8]
   12a8c:	ldr	r0, [r7, #92]	; 0x5c
   12a90:	ldr	r5, [r9, r0, lsl #3]!
   12a94:	cmp	r5, #19
   12a98:	bhi	12ae4 <sf_gen_load+0xba4>
   12a9c:	add	r1, r0, #1
   12aa0:	cmp	r0, #15
   12aa4:	str	r1, [r7, #92]	; 0x5c
   12aa8:	bge	12fb4 <sf_gen_load+0x1074>
   12aac:	mov	r0, #1024	; 0x400
   12ab0:	lsl	r5, r0, r1
   12ab4:	mov	r0, r5
   12ab8:	bl	e34 <malloc@plt>
   12abc:	cmp	r0, #0
   12ac0:	str	r0, [r9, #12]
   12ac4:	beq	12fb4 <sf_gen_load+0x1074>
   12ac8:	mov	r1, #0
   12acc:	mov	r2, r5
   12ad0:	add	r9, r9, #8
   12ad4:	bl	ea0 <memset@plt>
   12ad8:	cmp	r5, #19
   12adc:	str	r5, [r9]
   12ae0:	bls	12fb4 <sf_gen_load+0x1074>
   12ae4:	sub	r1, r5, #20
   12ae8:	mov	r2, #2
   12aec:	str	r1, [r9]
   12af0:	ldr	r0, [r9, #4]
   12af4:	str	r2, [r0, r1]!
   12af8:	str	r4, [r0, #12]
   12afc:	ldr	r1, [sl, #4]
   12b00:	mov	r2, r1
   12b04:	ldr	r1, [r1, #16]
   12b08:	cmp	r1, #0
   12b0c:	bne	12b00 <sf_gen_load+0xbc0>
   12b10:	str	r0, [r2, #16]
   12b14:	mov	r0, sl
   12b18:	sub	sp, fp, #28
   12b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b20:	ldr	r0, [r7, #36]	; 0x24
   12b24:	cmp	r0, #119	; 0x77
   12b28:	cmpne	r0, #127	; 0x7f
   12b2c:	bne	12ec8 <sf_gen_load+0xf88>
   12b30:	ldr	r0, [r7, #92]	; 0x5c
   12b34:	mov	r6, r9
   12b38:	mov	r8, r4
   12b3c:	ldr	r5, [r6, r0, lsl #3]!
   12b40:	cmp	r5, #19
   12b44:	bhi	12c0c <sf_gen_load+0xccc>
   12b48:	add	r4, r0, #1
   12b4c:	cmp	r0, #15
   12b50:	str	r4, [r7, #92]	; 0x5c
   12b54:	bge	12fb4 <sf_gen_load+0x1074>
   12b58:	mov	r0, #1024	; 0x400
   12b5c:	lsl	r5, r0, r4
   12b60:	mov	r0, r5
   12b64:	bl	e34 <malloc@plt>
   12b68:	cmp	r0, #0
   12b6c:	str	r0, [r6, #12]
   12b70:	beq	12fb4 <sf_gen_load+0x1074>
   12b74:	mov	r1, #0
   12b78:	mov	r2, r5
   12b7c:	add	r6, r6, #8
   12b80:	bl	ea0 <memset@plt>
   12b84:	cmp	r5, #19
   12b88:	str	r5, [r6]
   12b8c:	bhi	12c10 <sf_gen_load+0xcd0>
   12b90:	b	12fb4 <sf_gen_load+0x1074>
   12b94:	bl	1337c <gen_llprefixlen>
   12b98:	mov	r8, r0
   12b9c:	ldr	r0, [r7, #92]	; 0x5c
   12ba0:	mov	r5, r9
   12ba4:	cmp	r8, #0
   12ba8:	ldr	r7, [r5, r0, lsl #3]!
   12bac:	beq	12ce8 <sf_gen_load+0xda8>
   12bb0:	cmp	r7, #19
   12bb4:	bhi	12d44 <sf_gen_load+0xe04>
   12bb8:	ldr	r1, [pc, #1084]	; 12ffc <sf_gen_load+0x10bc>
   12bbc:	add	r6, r0, #1
   12bc0:	cmp	r0, #15
   12bc4:	add	r1, pc, r1
   12bc8:	str	r6, [r1, #92]	; 0x5c
   12bcc:	bge	12fb4 <sf_gen_load+0x1074>
   12bd0:	mov	r0, #1024	; 0x400
   12bd4:	lsl	r7, r0, r6
   12bd8:	mov	r0, r7
   12bdc:	bl	e34 <malloc@plt>
   12be0:	cmp	r0, #0
   12be4:	str	r0, [r5, #12]
   12be8:	beq	12fb4 <sf_gen_load+0x1074>
   12bec:	mov	r1, #0
   12bf0:	mov	r2, r7
   12bf4:	add	r5, r5, #8
   12bf8:	bl	ea0 <memset@plt>
   12bfc:	cmp	r7, #19
   12c00:	str	r7, [r5]
   12c04:	bhi	12d48 <sf_gen_load+0xe08>
   12c08:	b	12fb4 <sf_gen_load+0x1074>
   12c0c:	mov	r4, r0
   12c10:	sub	r0, r5, #20
   12c14:	mov	r1, #97	; 0x61
   12c18:	mov	r7, r9
   12c1c:	str	r0, [r6]
   12c20:	ldr	r6, [r6, #4]
   12c24:	str	r1, [r6, r0]!
   12c28:	ldr	r0, [sl, #8]
   12c2c:	str	r0, [r6, #12]
   12c30:	ldr	r5, [r7, r4, lsl #3]!
   12c34:	cmp	r5, #19
   12c38:	bhi	12c94 <sf_gen_load+0xd54>
   12c3c:	ldr	r1, [pc, #944]	; 12ff4 <sf_gen_load+0x10b4>
   12c40:	add	r0, r4, #1
   12c44:	cmp	r4, #15
   12c48:	add	r1, pc, r1
   12c4c:	str	r0, [r1, #92]	; 0x5c
   12c50:	bge	12fb4 <sf_gen_load+0x1074>
   12c54:	mov	r1, #1024	; 0x400
   12c58:	lsl	r5, r1, r0
   12c5c:	mov	r0, r5
   12c60:	bl	e34 <malloc@plt>
   12c64:	cmp	r0, #0
   12c68:	str	r0, [r7, #12]
   12c6c:	beq	12fb4 <sf_gen_load+0x1074>
   12c70:	mov	r1, #0
   12c74:	mov	r2, r5
   12c78:	mov	r4, r8
   12c7c:	add	r7, r7, #8
   12c80:	bl	ea0 <memset@plt>
   12c84:	cmp	r5, #19
   12c88:	str	r5, [r7]
   12c8c:	bhi	12c98 <sf_gen_load+0xd58>
   12c90:	b	12fb4 <sf_gen_load+0x1074>
   12c94:	mov	r4, r8
   12c98:	sub	r1, r5, #20
   12c9c:	ldr	r2, [sp, #12]
   12ca0:	str	r1, [r7]
   12ca4:	ldr	r0, [r7, #4]
   12ca8:	str	r2, [r0, r1]!
   12cac:	mov	r2, r6
   12cb0:	mov	r1, r2
   12cb4:	ldr	r2, [r2, #16]
   12cb8:	cmp	r2, #0
   12cbc:	bne	12cb0 <sf_gen_load+0xd70>
   12cc0:	str	r0, [r1, #16]
   12cc4:	ldr	r0, [sl, #4]
   12cc8:	ldr	r7, [pc, #808]	; 12ff8 <sf_gen_load+0x10b8>
   12ccc:	add	r7, pc, r7
   12cd0:	mov	r1, r0
   12cd4:	ldr	r0, [r0, #16]
   12cd8:	cmp	r0, #0
   12cdc:	bne	12cd0 <sf_gen_load+0xd90>
   12ce0:	str	r6, [r1, #16]
   12ce4:	b	12a88 <sf_gen_load+0xb48>
   12ce8:	cmp	r7, #19
   12cec:	bhi	12ee0 <sf_gen_load+0xfa0>
   12cf0:	ldr	r1, [pc, #792]	; 13010 <sf_gen_load+0x10d0>
   12cf4:	add	r6, r0, #1
   12cf8:	cmp	r0, #15
   12cfc:	add	r1, pc, r1
   12d00:	str	r6, [r1, #92]	; 0x5c
   12d04:	bge	12fb4 <sf_gen_load+0x1074>
   12d08:	mov	r0, #1024	; 0x400
   12d0c:	lsl	r7, r0, r6
   12d10:	mov	r0, r7
   12d14:	bl	e34 <malloc@plt>
   12d18:	cmp	r0, #0
   12d1c:	str	r0, [r5, #12]
   12d20:	beq	12fb4 <sf_gen_load+0x1074>
   12d24:	mov	r1, #0
   12d28:	mov	r2, r7
   12d2c:	add	r5, r5, #8
   12d30:	bl	ea0 <memset@plt>
   12d34:	cmp	r7, #19
   12d38:	str	r7, [r5]
   12d3c:	bhi	12ee4 <sf_gen_load+0xfa4>
   12d40:	b	12fb4 <sf_gen_load+0x1074>
   12d44:	mov	r6, r0
   12d48:	sub	r1, r7, #20
   12d4c:	mov	r2, #96	; 0x60
   12d50:	str	r1, [r5]
   12d54:	ldr	r0, [r5, #4]
   12d58:	str	r2, [r0, r1]!
   12d5c:	mov	r2, r8
   12d60:	ldr	r1, [sl, #8]
   12d64:	str	r1, [r0, #12]
   12d68:	mov	r1, r2
   12d6c:	ldr	r2, [r2, #16]
   12d70:	cmp	r2, #0
   12d74:	bne	12d68 <sf_gen_load+0xe28>
   12d78:	str	r0, [r1, #16]
   12d7c:	mov	r4, r9
   12d80:	ldr	r5, [r4, r6, lsl #3]!
   12d84:	cmp	r5, #19
   12d88:	bhi	12de0 <sf_gen_load+0xea0>
   12d8c:	ldr	r0, [pc, #620]	; 13000 <sf_gen_load+0x10c0>
   12d90:	add	r7, r6, #1
   12d94:	cmp	r6, #15
   12d98:	add	r0, pc, r0
   12d9c:	str	r7, [r0, #92]	; 0x5c
   12da0:	bge	12fb4 <sf_gen_load+0x1074>
   12da4:	mov	r0, #1024	; 0x400
   12da8:	lsl	r5, r0, r7
   12dac:	mov	r0, r5
   12db0:	bl	e34 <malloc@plt>
   12db4:	cmp	r0, #0
   12db8:	str	r0, [r4, #12]
   12dbc:	beq	12fb4 <sf_gen_load+0x1074>
   12dc0:	mov	r1, #0
   12dc4:	mov	r2, r5
   12dc8:	add	r4, r4, #8
   12dcc:	bl	ea0 <memset@plt>
   12dd0:	cmp	r5, #19
   12dd4:	str	r5, [r4]
   12dd8:	bhi	12de4 <sf_gen_load+0xea4>
   12ddc:	b	12fb4 <sf_gen_load+0x1074>
   12de0:	mov	r7, r6
   12de4:	sub	r1, r5, #20
   12de8:	mov	r2, #12
   12dec:	str	r1, [r4]
   12df0:	ldr	r0, [r4, #4]
   12df4:	str	r2, [r0, r1]!
   12df8:	mov	r2, r8
   12dfc:	mov	r1, r2
   12e00:	ldr	r2, [r2, #16]
   12e04:	cmp	r2, #0
   12e08:	bne	12dfc <sf_gen_load+0xebc>
   12e0c:	str	r0, [r1, #16]
   12e10:	mov	r4, r9
   12e14:	ldr	r5, [r4, r7, lsl #3]!
   12e18:	cmp	r5, #19
   12e1c:	bhi	12e7c <sf_gen_load+0xf3c>
   12e20:	ldr	r0, [pc, #480]	; 13008 <sf_gen_load+0x10c8>
   12e24:	add	r6, r7, #1
   12e28:	cmp	r7, #15
   12e2c:	add	r0, pc, r0
   12e30:	str	r6, [r0, #92]	; 0x5c
   12e34:	bge	12fb4 <sf_gen_load+0x1074>
   12e38:	mov	r0, #1024	; 0x400
   12e3c:	lsl	r5, r0, r6
   12e40:	mov	r0, r5
   12e44:	bl	e34 <malloc@plt>
   12e48:	cmp	r0, #0
   12e4c:	str	r0, [r4, #12]
   12e50:	beq	12fb4 <sf_gen_load+0x1074>
   12e54:	mov	r1, #0
   12e58:	mov	r2, r5
   12e5c:	add	r4, r4, #8
   12e60:	bl	ea0 <memset@plt>
   12e64:	str	r5, [r4]
   12e68:	cmp	r5, #19
   12e6c:	ldr	r7, [pc, #408]	; 1300c <sf_gen_load+0x10cc>
   12e70:	add	r7, pc, r7
   12e74:	bhi	12e88 <sf_gen_load+0xf48>
   12e78:	b	12fb4 <sf_gen_load+0x1074>
   12e7c:	mov	r6, r7
   12e80:	ldr	r7, [pc, #380]	; 13004 <sf_gen_load+0x10c4>
   12e84:	add	r7, pc, r7
   12e88:	sub	r1, r5, #20
   12e8c:	mov	r2, #7
   12e90:	str	r1, [r4]
   12e94:	ldr	r0, [r4, #4]
   12e98:	str	r2, [r0, r1]!
   12e9c:	mov	r2, r8
   12ea0:	mov	r1, r2
   12ea4:	ldr	r2, [r2, #16]
   12ea8:	cmp	r2, #0
   12eac:	bne	12ea0 <sf_gen_load+0xf60>
   12eb0:	str	r0, [r1, #16]
   12eb4:	mov	r4, r9
   12eb8:	ldr	r5, [r4, r6, lsl #3]!
   12ebc:	cmp	r5, #19
   12ec0:	bls	12f18 <sf_gen_load+0xfd8>
   12ec4:	b	12f60 <sf_gen_load+0x1020>
   12ec8:	cmp	r0, #163	; 0xa3
   12ecc:	beq	12b30 <sf_gen_load+0xbf0>
   12ed0:	ldr	r0, [pc, #376]	; 13050 <sf_gen_load+0x1110>
   12ed4:	add	r0, pc, r0
   12ed8:	bl	214c <sf_bpf_error>
   12edc:	.word	0x00034530
   12ee0:	mov	r6, r0
   12ee4:	sub	r0, r7, #20
   12ee8:	mov	r1, #97	; 0x61
   12eec:	str	r0, [r5]
   12ef0:	ldr	r8, [r5, #4]
   12ef4:	str	r1, [r8, r0]!
   12ef8:	ldr	r0, [sl, #8]
   12efc:	str	r0, [r8, #12]
   12f00:	ldr	r7, [pc, #268]	; 13014 <sf_gen_load+0x10d4>
   12f04:	add	r7, pc, r7
   12f08:	mov	r4, r9
   12f0c:	ldr	r5, [r4, r6, lsl #3]!
   12f10:	cmp	r5, #19
   12f14:	bhi	12f60 <sf_gen_load+0x1020>
   12f18:	add	r0, r6, #1
   12f1c:	cmp	r6, #15
   12f20:	str	r0, [r7, #92]	; 0x5c
   12f24:	bge	12fb4 <sf_gen_load+0x1074>
   12f28:	mov	r1, #1024	; 0x400
   12f2c:	lsl	r5, r1, r0
   12f30:	mov	r0, r5
   12f34:	bl	e34 <malloc@plt>
   12f38:	cmp	r0, #0
   12f3c:	str	r0, [r4, #12]
   12f40:	beq	12fb4 <sf_gen_load+0x1074>
   12f44:	mov	r1, #0
   12f48:	mov	r2, r5
   12f4c:	add	r4, r4, #8
   12f50:	bl	ea0 <memset@plt>
   12f54:	cmp	r5, #19
   12f58:	str	r5, [r4]
   12f5c:	bls	12fb4 <sf_gen_load+0x1074>
   12f60:	sub	r1, r5, #20
   12f64:	ldr	r2, [sp, #12]
   12f68:	str	r1, [r4]
   12f6c:	ldr	r0, [r4, #4]
   12f70:	str	r2, [r0, r1]!
   12f74:	mov	r1, #0
   12f78:	mov	r2, r8
   12f7c:	str	r1, [r0, #12]
   12f80:	mov	r1, r2
   12f84:	ldr	r2, [r2, #16]
   12f88:	cmp	r2, #0
   12f8c:	bne	12f80 <sf_gen_load+0x1040>
   12f90:	str	r0, [r1, #16]
   12f94:	ldr	r4, [sp, #8]
   12f98:	ldr	r0, [sl, #4]
   12f9c:	mov	r1, r0
   12fa0:	ldr	r0, [r0, #16]
   12fa4:	cmp	r0, #0
   12fa8:	bne	12f9c <sf_gen_load+0x105c>
   12fac:	str	r8, [r1, #16]
   12fb0:	b	12a88 <sf_gen_load+0xb48>
   12fb4:	ldr	r0, [pc, #152]	; 13054 <sf_gen_load+0x1114>
   12fb8:	add	r0, pc, r0
   12fbc:	bl	214c <sf_bpf_error>
   12fc0:	ldr	r0, [pc, #40]	; 12ff0 <sf_gen_load+0x10b0>
   12fc4:	add	r0, pc, r0
   12fc8:	bl	214c <sf_bpf_error>
   12fcc:	.word	0x00034504
   12fd0:	.word	0x00034440
   12fd4:	ldr	r0, [pc, #16]	; 12fec <sf_gen_load+0x10ac>
   12fd8:	add	r0, pc, r0
   12fdc:	bl	214c <sf_bpf_error>
   12fe0:	ldr	r0, [pc, #112]	; 13058 <sf_gen_load+0x1118>
   12fe4:	add	r0, pc, r0
   12fe8:	bl	214c <sf_bpf_error>
   12fec:	.word	0x00016411
   12ff0:	.word	0x00016442
   12ff4:	.word	0x00033898
   12ff8:	.word	0x00033814
   12ffc:	.word	0x0003391c
   13000:	.word	0x00033748
   13004:	.word	0x0003365c
   13008:	.word	0x000336b4
   1300c:	.word	0x00033670
   13010:	.word	0x000337e4
   13014:	.word	0x000335dc
   13018:	.word	0x00033eac
   1301c:	.word	0x00033f6c
   13020:	.word	0x00033cc8
   13024:	.word	0x00033bd8
   13028:	.word	0x00033c30
   1302c:	.word	0x00033bec
   13030:	.word	0x00033f04
   13034:	.word	0x00033ec0
   13038:	.word	0x00033a60
   1303c:	.word	0x00034304
   13040:	.word	0x00034270
   13044:	.word	0x000341ec
   13048:	.word	0x00033d44
   1304c:	.word	0x00033d7c
   13050:	.word	0x0001654e
   13054:	.word	0x00016aac
   13058:	.word	0x00016467

0001305c <alloc_reg>:
   1305c:	push	{fp, lr}
   13060:	mov	fp, sp
   13064:	ldr	r2, [pc, #612]	; 132d0 <alloc_reg+0x274>
   13068:	add	r2, pc, r2
   1306c:	ldr	r0, [r2, #104]	; 0x68
   13070:	ldr	r1, [pc, #604]	; 132d4 <alloc_reg+0x278>
   13074:	add	r1, pc, r1
   13078:	ldr	r3, [r1, r0, lsl #2]
   1307c:	cmp	r3, #0
   13080:	beq	132a0 <alloc_reg+0x244>
   13084:	add	r0, r0, #1
   13088:	asr	r3, r0, #31
   1308c:	add	r3, r0, r3, lsr #28
   13090:	bic	r3, r3, #15
   13094:	sub	r0, r0, r3
   13098:	ldr	r3, [r1, r0, lsl #2]
   1309c:	str	r0, [r2, #104]	; 0x68
   130a0:	cmp	r3, #0
   130a4:	beq	132a0 <alloc_reg+0x244>
   130a8:	add	r0, r0, #1
   130ac:	asr	r3, r0, #31
   130b0:	add	r3, r0, r3, lsr #28
   130b4:	bic	r3, r3, #15
   130b8:	sub	r0, r0, r3
   130bc:	ldr	r3, [r1, r0, lsl #2]
   130c0:	str	r0, [r2, #104]	; 0x68
   130c4:	cmp	r3, #0
   130c8:	beq	132a0 <alloc_reg+0x244>
   130cc:	add	r0, r0, #1
   130d0:	asr	r3, r0, #31
   130d4:	add	r3, r0, r3, lsr #28
   130d8:	bic	r3, r3, #15
   130dc:	sub	r0, r0, r3
   130e0:	ldr	r3, [r1, r0, lsl #2]
   130e4:	str	r0, [r2, #104]	; 0x68
   130e8:	cmp	r3, #0
   130ec:	beq	132a0 <alloc_reg+0x244>
   130f0:	add	r0, r0, #1
   130f4:	asr	r3, r0, #31
   130f8:	add	r3, r0, r3, lsr #28
   130fc:	bic	r3, r3, #15
   13100:	sub	r0, r0, r3
   13104:	ldr	r3, [r1, r0, lsl #2]
   13108:	str	r0, [r2, #104]	; 0x68
   1310c:	cmp	r3, #0
   13110:	beq	132a0 <alloc_reg+0x244>
   13114:	add	r0, r0, #1
   13118:	asr	r3, r0, #31
   1311c:	add	r3, r0, r3, lsr #28
   13120:	bic	r3, r3, #15
   13124:	sub	r0, r0, r3
   13128:	ldr	r3, [r1, r0, lsl #2]
   1312c:	str	r0, [r2, #104]	; 0x68
   13130:	cmp	r3, #0
   13134:	beq	132a0 <alloc_reg+0x244>
   13138:	add	r0, r0, #1
   1313c:	asr	r3, r0, #31
   13140:	add	r3, r0, r3, lsr #28
   13144:	bic	r3, r3, #15
   13148:	sub	r0, r0, r3
   1314c:	ldr	r3, [r1, r0, lsl #2]
   13150:	str	r0, [r2, #104]	; 0x68
   13154:	cmp	r3, #0
   13158:	beq	132a0 <alloc_reg+0x244>
   1315c:	add	r0, r0, #1
   13160:	asr	r3, r0, #31
   13164:	add	r3, r0, r3, lsr #28
   13168:	bic	r3, r3, #15
   1316c:	sub	r0, r0, r3
   13170:	ldr	r3, [r1, r0, lsl #2]
   13174:	str	r0, [r2, #104]	; 0x68
   13178:	cmp	r3, #0
   1317c:	beq	132a0 <alloc_reg+0x244>
   13180:	add	r0, r0, #1
   13184:	asr	r3, r0, #31
   13188:	add	r3, r0, r3, lsr #28
   1318c:	bic	r3, r3, #15
   13190:	sub	r0, r0, r3
   13194:	ldr	r3, [r1, r0, lsl #2]
   13198:	str	r0, [r2, #104]	; 0x68
   1319c:	cmp	r3, #0
   131a0:	beq	132a0 <alloc_reg+0x244>
   131a4:	add	r0, r0, #1
   131a8:	asr	r3, r0, #31
   131ac:	add	r3, r0, r3, lsr #28
   131b0:	bic	r3, r3, #15
   131b4:	sub	r0, r0, r3
   131b8:	ldr	r3, [r1, r0, lsl #2]
   131bc:	str	r0, [r2, #104]	; 0x68
   131c0:	cmp	r3, #0
   131c4:	beq	132a0 <alloc_reg+0x244>
   131c8:	add	r0, r0, #1
   131cc:	asr	r3, r0, #31
   131d0:	add	r3, r0, r3, lsr #28
   131d4:	bic	r3, r3, #15
   131d8:	sub	r0, r0, r3
   131dc:	ldr	r3, [r1, r0, lsl #2]
   131e0:	str	r0, [r2, #104]	; 0x68
   131e4:	cmp	r3, #0
   131e8:	beq	132a0 <alloc_reg+0x244>
   131ec:	add	r0, r0, #1
   131f0:	asr	r3, r0, #31
   131f4:	add	r3, r0, r3, lsr #28
   131f8:	bic	r3, r3, #15
   131fc:	sub	r0, r0, r3
   13200:	ldr	r3, [r1, r0, lsl #2]
   13204:	str	r0, [r2, #104]	; 0x68
   13208:	cmp	r3, #0
   1320c:	beq	132a0 <alloc_reg+0x244>
   13210:	add	r0, r0, #1
   13214:	asr	r3, r0, #31
   13218:	add	r3, r0, r3, lsr #28
   1321c:	bic	r3, r3, #15
   13220:	sub	r0, r0, r3
   13224:	ldr	r3, [r1, r0, lsl #2]
   13228:	str	r0, [r2, #104]	; 0x68
   1322c:	cmp	r3, #0
   13230:	beq	132a0 <alloc_reg+0x244>
   13234:	add	r0, r0, #1
   13238:	asr	r3, r0, #31
   1323c:	add	r3, r0, r3, lsr #28
   13240:	bic	r3, r3, #15
   13244:	sub	r0, r0, r3
   13248:	ldr	r3, [r1, r0, lsl #2]
   1324c:	str	r0, [r2, #104]	; 0x68
   13250:	cmp	r3, #0
   13254:	beq	132a0 <alloc_reg+0x244>
   13258:	add	r0, r0, #1
   1325c:	asr	r3, r0, #31
   13260:	add	r3, r0, r3, lsr #28
   13264:	bic	r3, r3, #15
   13268:	sub	r0, r0, r3
   1326c:	ldr	r3, [r1, r0, lsl #2]
   13270:	str	r0, [r2, #104]	; 0x68
   13274:	cmp	r3, #0
   13278:	beq	132a0 <alloc_reg+0x244>
   1327c:	add	r0, r0, #1
   13280:	asr	r3, r0, #31
   13284:	add	r3, r0, r3, lsr #28
   13288:	bic	r3, r3, #15
   1328c:	sub	r0, r0, r3
   13290:	ldr	r3, [r1, r0, lsl #2]
   13294:	str	r0, [r2, #104]	; 0x68
   13298:	cmp	r3, #0
   1329c:	bne	132ac <alloc_reg+0x250>
   132a0:	mov	r2, #1
   132a4:	str	r2, [r1, r0, lsl #2]
   132a8:	pop	{fp, pc}
   132ac:	add	r0, r0, #1
   132b0:	asr	r1, r0, #31
   132b4:	add	r1, r0, r1, lsr #28
   132b8:	bic	r1, r1, #15
   132bc:	sub	r0, r0, r1
   132c0:	str	r0, [r2, #104]	; 0x68
   132c4:	ldr	r0, [pc, #12]	; 132d8 <alloc_reg+0x27c>
   132c8:	add	r0, pc, r0
   132cc:	bl	214c <sf_bpf_error>
   132d0:	.word	0x00033478
   132d4:	.word	0x0003342c
   132d8:	.word	0x000171ed

000132dc <new_stmt>:
   132dc:	push	{r4, r5, r6, sl, fp, lr}
   132e0:	add	fp, sp, #16
   132e4:	ldr	r1, [pc, #132]	; 13370 <new_stmt+0x94>
   132e8:	mov	r4, r0
   132ec:	add	r1, pc, r1
   132f0:	ldr	r0, [r1, #92]	; 0x5c
   132f4:	ldr	r6, [pc, #120]	; 13374 <new_stmt+0x98>
   132f8:	add	r6, pc, r6
   132fc:	ldr	r5, [r6, r0, lsl #3]!
   13300:	cmp	r5, #19
   13304:	bhi	13350 <new_stmt+0x74>
   13308:	add	r2, r0, #1
   1330c:	cmp	r0, #15
   13310:	str	r2, [r1, #92]	; 0x5c
   13314:	bge	13364 <new_stmt+0x88>
   13318:	mov	r0, #1024	; 0x400
   1331c:	lsl	r5, r0, r2
   13320:	mov	r0, r5
   13324:	bl	e34 <malloc@plt>
   13328:	cmp	r0, #0
   1332c:	str	r0, [r6, #12]
   13330:	beq	13364 <new_stmt+0x88>
   13334:	mov	r1, #0
   13338:	mov	r2, r5
   1333c:	add	r6, r6, #8
   13340:	bl	ea0 <memset@plt>
   13344:	cmp	r5, #19
   13348:	str	r5, [r6]
   1334c:	bls	13364 <new_stmt+0x88>
   13350:	sub	r1, r5, #20
   13354:	str	r1, [r6]
   13358:	ldr	r0, [r6, #4]
   1335c:	str	r4, [r0, r1]!
   13360:	pop	{r4, r5, r6, sl, fp, pc}
   13364:	ldr	r0, [pc, #12]	; 13378 <new_stmt+0x9c>
   13368:	add	r0, pc, r0
   1336c:	bl	214c <sf_bpf_error>
   13370:	.word	0x000331f4
   13374:	.word	0x00033128
   13378:	.word	0x000166fc

0001337c <gen_llprefixlen>:
   1337c:	push	{r4, r5, r6, r7, fp, lr}
   13380:	add	fp, sp, #16
   13384:	ldr	r7, [pc, #208]	; 1345c <gen_llprefixlen+0xe0>
   13388:	mov	r0, #0
   1338c:	add	r7, pc, r7
   13390:	ldr	r1, [r7, #36]	; 0x24
   13394:	cmp	r1, #162	; 0xa2
   13398:	bgt	13440 <gen_llprefixlen+0xc4>
   1339c:	cmp	r1, #119	; 0x77
   133a0:	beq	133ac <gen_llprefixlen+0x30>
   133a4:	cmp	r1, #127	; 0x7f
   133a8:	bne	1343c <gen_llprefixlen+0xc0>
   133ac:	ldr	r4, [r7, #96]	; 0x60
   133b0:	cmn	r4, #1
   133b4:	bne	133c4 <gen_llprefixlen+0x48>
   133b8:	bl	1305c <alloc_reg>
   133bc:	mov	r4, r0
   133c0:	str	r0, [r7, #96]	; 0x60
   133c4:	ldr	r0, [r7, #92]	; 0x5c
   133c8:	ldr	r6, [pc, #144]	; 13460 <gen_llprefixlen+0xe4>
   133cc:	add	r6, pc, r6
   133d0:	ldr	r5, [r6, r0, lsl #3]!
   133d4:	cmp	r5, #19
   133d8:	bhi	13424 <gen_llprefixlen+0xa8>
   133dc:	add	r1, r0, #1
   133e0:	cmp	r0, #15
   133e4:	str	r1, [r7, #92]	; 0x5c
   133e8:	bge	13450 <gen_llprefixlen+0xd4>
   133ec:	mov	r0, #1024	; 0x400
   133f0:	lsl	r5, r0, r1
   133f4:	mov	r0, r5
   133f8:	bl	e34 <malloc@plt>
   133fc:	cmp	r0, #0
   13400:	str	r0, [r6, #12]
   13404:	beq	13450 <gen_llprefixlen+0xd4>
   13408:	mov	r1, #0
   1340c:	mov	r2, r5
   13410:	add	r6, r6, #8
   13414:	bl	ea0 <memset@plt>
   13418:	cmp	r5, #19
   1341c:	str	r5, [r6]
   13420:	bls	13450 <gen_llprefixlen+0xd4>
   13424:	sub	r1, r5, #20
   13428:	mov	r2, #97	; 0x61
   1342c:	str	r1, [r6]
   13430:	ldr	r0, [r6, #4]
   13434:	str	r2, [r0, r1]!
   13438:	str	r4, [r0, #12]
   1343c:	pop	{r4, r5, r6, r7, fp, pc}
   13440:	cmp	r1, #163	; 0xa3
   13444:	cmpne	r1, #192	; 0xc0
   13448:	beq	133ac <gen_llprefixlen+0x30>
   1344c:	b	1343c <gen_llprefixlen+0xc0>
   13450:	ldr	r0, [pc, #12]	; 13464 <gen_llprefixlen+0xe8>
   13454:	add	r0, pc, r0
   13458:	bl	214c <sf_bpf_error>
   1345c:	.word	0x00033154
   13460:	.word	0x00033054
   13464:	.word	0x00016610

00013468 <gen_loadx_iphdrlen>:
   13468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1346c:	add	fp, sp, #28
   13470:	sub	sp, sp, #4
   13474:	ldr	r8, [pc, #1052]	; 13898 <gen_loadx_iphdrlen+0x430>
   13478:	add	r8, pc, r8
   1347c:	ldrb	r0, [r8, #16]
   13480:	ldr	sl, [pc, #1044]	; 1389c <gen_loadx_iphdrlen+0x434>
   13484:	cmp	r0, #0
   13488:	add	sl, pc, sl
   1348c:	beq	13508 <gen_loadx_iphdrlen+0xa0>
   13490:	ldr	r5, [r8, #100]	; 0x64
   13494:	cmn	r5, #1
   13498:	bne	134a8 <gen_loadx_iphdrlen+0x40>
   1349c:	bl	1305c <alloc_reg>
   134a0:	mov	r5, r0
   134a4:	str	r0, [r8, #100]	; 0x64
   134a8:	ldr	r0, [r8, #92]	; 0x5c
   134ac:	mov	r6, sl
   134b0:	ldr	r4, [r6, r0, lsl #3]!
   134b4:	cmp	r4, #19
   134b8:	bhi	13510 <gen_loadx_iphdrlen+0xa8>
   134bc:	add	r7, r0, #1
   134c0:	cmp	r0, #15
   134c4:	str	r7, [r8, #92]	; 0x5c
   134c8:	bge	1388c <gen_loadx_iphdrlen+0x424>
   134cc:	mov	r0, #1024	; 0x400
   134d0:	lsl	r4, r0, r7
   134d4:	mov	r0, r4
   134d8:	bl	e34 <malloc@plt>
   134dc:	cmp	r0, #0
   134e0:	str	r0, [r6, #12]
   134e4:	beq	1388c <gen_loadx_iphdrlen+0x424>
   134e8:	mov	r1, #0
   134ec:	mov	r2, r4
   134f0:	add	r6, r6, #8
   134f4:	bl	ea0 <memset@plt>
   134f8:	cmp	r4, #19
   134fc:	str	r4, [r6]
   13500:	bhi	13514 <gen_loadx_iphdrlen+0xac>
   13504:	b	1388c <gen_loadx_iphdrlen+0x424>
   13508:	ldr	r7, [r8, #92]	; 0x5c
   1350c:	b	13590 <gen_loadx_iphdrlen+0x128>
   13510:	mov	r7, r0
   13514:	sub	r0, r4, #20
   13518:	mov	r1, #97	; 0x61
   1351c:	str	r0, [r6]
   13520:	ldr	r4, [r6, #4]
   13524:	str	r1, [r4, r0]!
   13528:	cmp	r4, #0
   1352c:	str	r5, [r4, #12]
   13530:	beq	13590 <gen_loadx_iphdrlen+0x128>
   13534:	mov	r6, sl
   13538:	ldr	r5, [r6, r7, lsl #3]!
   1353c:	cmp	r5, #19
   13540:	bhi	13614 <gen_loadx_iphdrlen+0x1ac>
   13544:	add	r9, r7, #1
   13548:	cmp	r7, #15
   1354c:	str	r9, [r8, #92]	; 0x5c
   13550:	bge	1388c <gen_loadx_iphdrlen+0x424>
   13554:	mov	r0, #1024	; 0x400
   13558:	lsl	r5, r0, r9
   1355c:	mov	r0, r5
   13560:	bl	e34 <malloc@plt>
   13564:	cmp	r0, #0
   13568:	str	r0, [r6, #12]
   1356c:	beq	1388c <gen_loadx_iphdrlen+0x424>
   13570:	mov	r1, #0
   13574:	mov	r2, r5
   13578:	add	r6, r6, #8
   1357c:	bl	ea0 <memset@plt>
   13580:	cmp	r5, #19
   13584:	str	r5, [r6]
   13588:	bhi	13618 <gen_loadx_iphdrlen+0x1b0>
   1358c:	b	1388c <gen_loadx_iphdrlen+0x424>
   13590:	ldr	r4, [sl, r7, lsl #3]!
   13594:	cmp	r4, #19
   13598:	bhi	135e4 <gen_loadx_iphdrlen+0x17c>
   1359c:	add	r0, r7, #1
   135a0:	cmp	r7, #15
   135a4:	str	r0, [r8, #92]	; 0x5c
   135a8:	bge	1388c <gen_loadx_iphdrlen+0x424>
   135ac:	mov	r1, #1024	; 0x400
   135b0:	lsl	r4, r1, r0
   135b4:	mov	r0, r4
   135b8:	bl	e34 <malloc@plt>
   135bc:	cmp	r0, #0
   135c0:	str	r0, [sl, #12]
   135c4:	beq	1388c <gen_loadx_iphdrlen+0x424>
   135c8:	mov	r1, #0
   135cc:	mov	r2, r4
   135d0:	add	sl, sl, #8
   135d4:	bl	ea0 <memset@plt>
   135d8:	cmp	r4, #19
   135dc:	str	r4, [sl]
   135e0:	bls	1388c <gen_loadx_iphdrlen+0x424>
   135e4:	sub	r0, r4, #20
   135e8:	mov	r1, #177	; 0xb1
   135ec:	str	r0, [sl]
   135f0:	ldr	r4, [sl, #4]
   135f4:	str	r1, [r4, r0]!
   135f8:	ldr	r0, [r8, #44]	; 0x2c
   135fc:	ldr	r1, [r8, #48]	; 0x30
   13600:	add	r0, r1, r0
   13604:	str	r0, [r4, #12]
   13608:	mov	r0, r4
   1360c:	sub	sp, fp, #28
   13610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13614:	mov	r9, r7
   13618:	sub	r1, r5, #20
   1361c:	mov	r2, #80	; 0x50
   13620:	str	r1, [r6]
   13624:	ldr	r0, [r6, #4]
   13628:	str	r2, [r0, r1]!
   1362c:	mov	r2, r4
   13630:	ldr	r1, [r8, #48]	; 0x30
   13634:	str	r1, [r0, #12]
   13638:	mov	r1, r2
   1363c:	ldr	r2, [r2, #16]
   13640:	cmp	r2, #0
   13644:	bne	13638 <gen_loadx_iphdrlen+0x1d0>
   13648:	str	r0, [r1, #16]
   1364c:	mov	r6, sl
   13650:	ldr	r5, [r6, r9, lsl #3]!
   13654:	cmp	r5, #19
   13658:	bhi	136a8 <gen_loadx_iphdrlen+0x240>
   1365c:	add	r7, r9, #1
   13660:	cmp	r9, #15
   13664:	str	r7, [r8, #92]	; 0x5c
   13668:	bge	1388c <gen_loadx_iphdrlen+0x424>
   1366c:	mov	r0, #1024	; 0x400
   13670:	lsl	r5, r0, r7
   13674:	mov	r0, r5
   13678:	bl	e34 <malloc@plt>
   1367c:	cmp	r0, #0
   13680:	str	r0, [r6, #12]
   13684:	beq	1388c <gen_loadx_iphdrlen+0x424>
   13688:	mov	r1, #0
   1368c:	mov	r2, r5
   13690:	add	r6, r6, #8
   13694:	bl	ea0 <memset@plt>
   13698:	cmp	r5, #19
   1369c:	str	r5, [r6]
   136a0:	bhi	136ac <gen_loadx_iphdrlen+0x244>
   136a4:	b	1388c <gen_loadx_iphdrlen+0x424>
   136a8:	mov	r7, r9
   136ac:	sub	r1, r5, #20
   136b0:	mov	r2, #84	; 0x54
   136b4:	str	r1, [r6]
   136b8:	ldr	r0, [r6, #4]
   136bc:	str	r2, [r0, r1]!
   136c0:	mov	r1, #15
   136c4:	mov	r2, r4
   136c8:	str	r1, [r0, #12]
   136cc:	mov	r1, r2
   136d0:	ldr	r2, [r2, #16]
   136d4:	cmp	r2, #0
   136d8:	bne	136cc <gen_loadx_iphdrlen+0x264>
   136dc:	str	r0, [r1, #16]
   136e0:	mov	r6, sl
   136e4:	ldr	r5, [r6, r7, lsl #3]!
   136e8:	cmp	r5, #19
   136ec:	bhi	1373c <gen_loadx_iphdrlen+0x2d4>
   136f0:	add	r9, r7, #1
   136f4:	cmp	r7, #15
   136f8:	str	r9, [r8, #92]	; 0x5c
   136fc:	bge	1388c <gen_loadx_iphdrlen+0x424>
   13700:	mov	r0, #1024	; 0x400
   13704:	lsl	r5, r0, r9
   13708:	mov	r0, r5
   1370c:	bl	e34 <malloc@plt>
   13710:	cmp	r0, #0
   13714:	str	r0, [r6, #12]
   13718:	beq	1388c <gen_loadx_iphdrlen+0x424>
   1371c:	mov	r1, #0
   13720:	mov	r2, r5
   13724:	add	r6, r6, #8
   13728:	bl	ea0 <memset@plt>
   1372c:	cmp	r5, #19
   13730:	str	r5, [r6]
   13734:	bhi	13740 <gen_loadx_iphdrlen+0x2d8>
   13738:	b	1388c <gen_loadx_iphdrlen+0x424>
   1373c:	mov	r9, r7
   13740:	sub	r1, r5, #20
   13744:	mov	r2, #100	; 0x64
   13748:	str	r1, [r6]
   1374c:	ldr	r0, [r6, #4]
   13750:	str	r2, [r0, r1]!
   13754:	mov	r1, #2
   13758:	mov	r2, r4
   1375c:	str	r1, [r0, #12]
   13760:	mov	r1, r2
   13764:	ldr	r2, [r2, #16]
   13768:	cmp	r2, #0
   1376c:	bne	13760 <gen_loadx_iphdrlen+0x2f8>
   13770:	str	r0, [r1, #16]
   13774:	mov	r6, sl
   13778:	ldr	r5, [r6, r9, lsl #3]!
   1377c:	cmp	r5, #19
   13780:	bhi	137d0 <gen_loadx_iphdrlen+0x368>
   13784:	add	r7, r9, #1
   13788:	cmp	r9, #15
   1378c:	str	r7, [r8, #92]	; 0x5c
   13790:	bge	1388c <gen_loadx_iphdrlen+0x424>
   13794:	mov	r0, #1024	; 0x400
   13798:	lsl	r5, r0, r7
   1379c:	mov	r0, r5
   137a0:	bl	e34 <malloc@plt>
   137a4:	cmp	r0, #0
   137a8:	str	r0, [r6, #12]
   137ac:	beq	1388c <gen_loadx_iphdrlen+0x424>
   137b0:	mov	r1, #0
   137b4:	mov	r2, r5
   137b8:	add	r6, r6, #8
   137bc:	bl	ea0 <memset@plt>
   137c0:	cmp	r5, #19
   137c4:	str	r5, [r6]
   137c8:	bhi	137d4 <gen_loadx_iphdrlen+0x36c>
   137cc:	b	1388c <gen_loadx_iphdrlen+0x424>
   137d0:	mov	r7, r9
   137d4:	sub	r1, r5, #20
   137d8:	mov	r2, #12
   137dc:	str	r1, [r6]
   137e0:	ldr	r0, [r6, #4]
   137e4:	str	r2, [r0, r1]!
   137e8:	mov	r2, r4
   137ec:	mov	r1, r2
   137f0:	ldr	r2, [r2, #16]
   137f4:	cmp	r2, #0
   137f8:	bne	137ec <gen_loadx_iphdrlen+0x384>
   137fc:	str	r0, [r1, #16]
   13800:	ldr	r5, [sl, r7, lsl #3]!
   13804:	cmp	r5, #19
   13808:	bhi	13854 <gen_loadx_iphdrlen+0x3ec>
   1380c:	add	r0, r7, #1
   13810:	cmp	r7, #15
   13814:	str	r0, [r8, #92]	; 0x5c
   13818:	bge	1388c <gen_loadx_iphdrlen+0x424>
   1381c:	mov	r1, #1024	; 0x400
   13820:	lsl	r5, r1, r0
   13824:	mov	r0, r5
   13828:	bl	e34 <malloc@plt>
   1382c:	cmp	r0, #0
   13830:	str	r0, [sl, #12]
   13834:	beq	1388c <gen_loadx_iphdrlen+0x424>
   13838:	mov	r1, #0
   1383c:	mov	r2, r5
   13840:	add	sl, sl, #8
   13844:	bl	ea0 <memset@plt>
   13848:	cmp	r5, #19
   1384c:	str	r5, [sl]
   13850:	bls	1388c <gen_loadx_iphdrlen+0x424>
   13854:	sub	r1, r5, #20
   13858:	mov	r2, #7
   1385c:	str	r1, [sl]
   13860:	ldr	r0, [sl, #4]
   13864:	str	r2, [r0, r1]!
   13868:	mov	r2, r4
   1386c:	mov	r1, r2
   13870:	ldr	r2, [r2, #16]
   13874:	cmp	r2, #0
   13878:	bne	1386c <gen_loadx_iphdrlen+0x404>
   1387c:	str	r0, [r1, #16]
   13880:	mov	r0, r4
   13884:	sub	sp, fp, #28
   13888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1388c:	ldr	r0, [pc, #12]	; 138a0 <gen_loadx_iphdrlen+0x438>
   13890:	add	r0, pc, r0
   13894:	bl	214c <sf_bpf_error>
   13898:	.word	0x00033068
   1389c:	.word	0x00032f98
   138a0:	.word	0x000161d4

000138a4 <sf_gen_relation>:
   138a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138a8:	add	fp, sp, #28
   138ac:	sub	sp, sp, #20
   138b0:	str	r3, [sp, #8]
   138b4:	str	r0, [sp, #4]
   138b8:	mov	r4, r2
   138bc:	mov	sl, r1
   138c0:	ldr	r2, [pc, #1276]	; 13dc4 <sf_gen_relation+0x520>
   138c4:	add	r2, pc, r2
   138c8:	ldr	r0, [r2, #92]	; 0x5c
   138cc:	ldr	r8, [pc, #1268]	; 13dc8 <sf_gen_relation+0x524>
   138d0:	add	r8, pc, r8
   138d4:	mov	r7, r8
   138d8:	ldr	r6, [r7, r0, lsl #3]!
   138dc:	cmp	r6, #19
   138e0:	bhi	13938 <sf_gen_relation+0x94>
   138e4:	add	r5, r0, #1
   138e8:	cmp	r0, #15
   138ec:	str	r5, [r2, #92]	; 0x5c
   138f0:	bge	13ca4 <sf_gen_relation+0x400>
   138f4:	mov	r0, #1024	; 0x400
   138f8:	mov	r9, r2
   138fc:	lsl	r6, r0, r5
   13900:	mov	r0, r6
   13904:	bl	e34 <malloc@plt>
   13908:	cmp	r0, #0
   1390c:	str	r0, [r7, #12]
   13910:	beq	13ca4 <sf_gen_relation+0x400>
   13914:	mov	r1, #0
   13918:	mov	r2, r6
   1391c:	add	r7, r7, #8
   13920:	bl	ea0 <memset@plt>
   13924:	cmp	r6, #19
   13928:	mov	r2, r9
   1392c:	str	r6, [r7]
   13930:	bhi	1393c <sf_gen_relation+0x98>
   13934:	b	13ca4 <sf_gen_relation+0x400>
   13938:	mov	r5, r0
   1393c:	sub	r0, r6, #20
   13940:	mov	r1, #97	; 0x61
   13944:	str	r0, [r7]
   13948:	ldr	r7, [r7, #4]
   1394c:	str	r1, [r7, r0]!
   13950:	str	r4, [sp, #12]
   13954:	ldr	r0, [r4, #8]
   13958:	mov	r4, r8
   1395c:	str	r0, [r7, #12]
   13960:	ldr	r6, [r4, r5, lsl #3]!
   13964:	cmp	r6, #19
   13968:	bhi	139c4 <sf_gen_relation+0x120>
   1396c:	add	r9, r5, #1
   13970:	cmp	r5, #15
   13974:	str	r9, [r2, #92]	; 0x5c
   13978:	bge	13ca4 <sf_gen_relation+0x400>
   1397c:	mov	r0, #1024	; 0x400
   13980:	lsl	r6, r0, r9
   13984:	mov	r0, r6
   13988:	bl	e34 <malloc@plt>
   1398c:	ldr	r5, [sp, #4]
   13990:	cmp	r0, #0
   13994:	str	r0, [r4, #12]
   13998:	beq	13ca4 <sf_gen_relation+0x400>
   1399c:	mov	r1, #0
   139a0:	mov	r2, r6
   139a4:	add	r4, r4, #8
   139a8:	bl	ea0 <memset@plt>
   139ac:	str	r6, [r4]
   139b0:	cmp	r6, #19
   139b4:	ldr	r2, [pc, #1040]	; 13dcc <sf_gen_relation+0x528>
   139b8:	add	r2, pc, r2
   139bc:	bhi	139cc <sf_gen_relation+0x128>
   139c0:	b	13ca4 <sf_gen_relation+0x400>
   139c4:	mov	r9, r5
   139c8:	ldr	r5, [sp, #4]
   139cc:	sub	r0, r6, #20
   139d0:	mov	r1, #96	; 0x60
   139d4:	cmp	r5, #16
   139d8:	str	r0, [r4]
   139dc:	ldr	r4, [r4, #4]
   139e0:	str	r1, [r4, r0]!
   139e4:	ldr	r0, [sl, #8]
   139e8:	str	r0, [r4, #12]
   139ec:	bne	13a58 <sf_gen_relation+0x1b4>
   139f0:	mov	r5, r8
   139f4:	str	sl, [sp, #4]
   139f8:	ldr	r6, [r5, r9, lsl #3]!
   139fc:	cmp	r6, #19
   13a00:	bhi	13c34 <sf_gen_relation+0x390>
   13a04:	add	sl, r9, #1
   13a08:	cmp	r9, #15
   13a0c:	str	sl, [r2, #92]	; 0x5c
   13a10:	bge	13ca4 <sf_gen_relation+0x400>
   13a14:	mov	r0, #1024	; 0x400
   13a18:	lsl	r6, r0, sl
   13a1c:	mov	r0, r6
   13a20:	bl	e34 <malloc@plt>
   13a24:	cmp	r0, #0
   13a28:	str	r0, [r5, #12]
   13a2c:	beq	13ca4 <sf_gen_relation+0x400>
   13a30:	mov	r1, #0
   13a34:	mov	r2, r6
   13a38:	add	r5, r5, #8
   13a3c:	bl	ea0 <memset@plt>
   13a40:	str	r6, [r5]
   13a44:	cmp	r6, #19
   13a48:	ldr	r2, [pc, #896]	; 13dd0 <sf_gen_relation+0x52c>
   13a4c:	add	r2, pc, r2
   13a50:	bhi	13c38 <sf_gen_relation+0x394>
   13a54:	b	13ca4 <sf_gen_relation+0x400>
   13a58:	ldr	r6, [r8, r9, lsl #3]!
   13a5c:	cmp	r6, #207	; 0xcf
   13a60:	bhi	13aac <sf_gen_relation+0x208>
   13a64:	add	r0, r9, #1
   13a68:	cmp	r9, #15
   13a6c:	str	r0, [r2, #92]	; 0x5c
   13a70:	bge	13ca4 <sf_gen_relation+0x400>
   13a74:	mov	r1, #1024	; 0x400
   13a78:	lsl	r6, r1, r0
   13a7c:	mov	r0, r6
   13a80:	bl	e34 <malloc@plt>
   13a84:	cmp	r0, #0
   13a88:	str	r0, [r8, #12]
   13a8c:	beq	13ca4 <sf_gen_relation+0x400>
   13a90:	mov	r1, #0
   13a94:	mov	r2, r6
   13a98:	add	r8, r8, #8
   13a9c:	bl	ea0 <memset@plt>
   13aa0:	cmp	r6, #207	; 0xcf
   13aa4:	str	r6, [r8]
   13aa8:	bls	13ca4 <sf_gen_relation+0x400>
   13aac:	sub	r0, r6, #208	; 0xd0
   13ab0:	orr	r1, r5, #13
   13ab4:	str	r0, [r8]
   13ab8:	ldr	r2, [r8, #4]
   13abc:	add	r0, r2, r0
   13ac0:	str	r1, [r0, #8]
   13ac4:	str	r0, [r0, #96]	; 0x60
   13ac8:	ldr	r1, [sp, #8]
   13acc:	cmp	r1, #0
   13ad0:	beq	13ae4 <sf_gen_relation+0x240>
   13ad4:	ldr	r1, [r0, #44]	; 0x2c
   13ad8:	clz	r1, r1
   13adc:	lsr	r1, r1, #5
   13ae0:	str	r1, [r0, #44]	; 0x2c
   13ae4:	mov	r2, r7
   13ae8:	mov	r1, r2
   13aec:	ldr	r2, [r2, #16]
   13af0:	cmp	r2, #0
   13af4:	bne	13ae8 <sf_gen_relation+0x244>
   13af8:	ldr	r6, [sp, #12]
   13afc:	str	r4, [r1, #16]
   13b00:	ldr	r1, [r6, #4]
   13b04:	mov	r2, r1
   13b08:	ldr	r1, [r1, #16]
   13b0c:	cmp	r1, #0
   13b10:	bne	13b04 <sf_gen_relation+0x260>
   13b14:	str	r7, [r2, #16]
   13b18:	ldr	r1, [r6, #4]
   13b1c:	ldr	r2, [sl, #4]
   13b20:	mov	r3, r2
   13b24:	ldr	r2, [r2, #16]
   13b28:	cmp	r2, #0
   13b2c:	bne	13b20 <sf_gen_relation+0x27c>
   13b30:	str	r1, [r3, #16]
   13b34:	mov	r3, #0
   13b38:	ldr	r1, [sl, #4]
   13b3c:	str	r1, [r0, #4]
   13b40:	ldr	r1, [sl, #8]
   13b44:	ldr	r2, [pc, #648]	; 13dd4 <sf_gen_relation+0x530>
   13b48:	add	r2, pc, r2
   13b4c:	str	r3, [r2, r1, lsl #2]
   13b50:	ldr	r1, [r6, #8]
   13b54:	str	r3, [r2, r1, lsl #2]
   13b58:	ldr	r1, [r6]
   13b5c:	ldr	r6, [sl]
   13b60:	cmp	r6, #0
   13b64:	beq	13c24 <sf_gen_relation+0x380>
   13b68:	cmp	r1, #0
   13b6c:	beq	13cf8 <sf_gen_relation+0x454>
   13b70:	ldr	r3, [r1, #96]	; 0x60
   13b74:	mov	r2, r6
   13b78:	ldr	r7, [r2, #44]	; 0x2c
   13b7c:	add	r5, r2, #84	; 0x54
   13b80:	cmp	r7, #0
   13b84:	mov	r7, #84	; 0x54
   13b88:	movweq	r7, #60	; 0x3c
   13b8c:	addeq	r5, r2, #60	; 0x3c
   13b90:	ldr	r2, [r2, r7]
   13b94:	str	r3, [r5]
   13b98:	cmp	r2, #0
   13b9c:	bne	13b78 <sf_gen_relation+0x2d4>
   13ba0:	ldr	r2, [r6, #44]	; 0x2c
   13ba4:	clz	r2, r2
   13ba8:	lsr	r2, r2, #5
   13bac:	str	r2, [r6, #44]	; 0x2c
   13bb0:	ldr	r2, [r1, #44]	; 0x2c
   13bb4:	clz	r3, r2
   13bb8:	cmp	r2, #0
   13bbc:	mov	r2, #60	; 0x3c
   13bc0:	lsr	r3, r3, #5
   13bc4:	movweq	r2, #84	; 0x54
   13bc8:	str	r3, [r1, #44]	; 0x2c
   13bcc:	add	r3, r1, #60	; 0x3c
   13bd0:	addeq	r3, r1, #84	; 0x54
   13bd4:	ldr	r7, [r1, r2]
   13bd8:	cmp	r7, #0
   13bdc:	beq	13c04 <sf_gen_relation+0x360>
   13be0:	ldr	r2, [r7, #44]	; 0x2c
   13be4:	add	r3, r7, #84	; 0x54
   13be8:	cmp	r2, #0
   13bec:	mov	r2, #84	; 0x54
   13bf0:	movweq	r2, #60	; 0x3c
   13bf4:	addeq	r3, r7, #60	; 0x3c
   13bf8:	ldr	r7, [r7, r2]
   13bfc:	cmp	r7, #0
   13c00:	bne	13be0 <sf_gen_relation+0x33c>
   13c04:	str	r6, [r3]
   13c08:	ldr	r2, [r1, #44]	; 0x2c
   13c0c:	clz	r2, r2
   13c10:	lsr	r2, r2, #5
   13c14:	str	r2, [r1, #44]	; 0x2c
   13c18:	ldr	r2, [r6, #96]	; 0x60
   13c1c:	str	r2, [r1, #96]	; 0x60
   13c20:	b	13cfc <sf_gen_relation+0x458>
   13c24:	cmp	r1, #0
   13c28:	bne	13cfc <sf_gen_relation+0x458>
   13c2c:	sub	sp, fp, #28
   13c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c34:	mov	sl, r9
   13c38:	sub	r0, r6, #20
   13c3c:	mov	r1, #28
   13c40:	str	r0, [r5]
   13c44:	ldr	r5, [r5, #4]
   13c48:	str	r1, [r5, r0]!
   13c4c:	ldr	r6, [r8, sl, lsl #3]!
   13c50:	cmp	r6, #207	; 0xcf
   13c54:	bhi	13cb0 <sf_gen_relation+0x40c>
   13c58:	add	r0, sl, #1
   13c5c:	cmp	sl, #15
   13c60:	str	r0, [r2, #92]	; 0x5c
   13c64:	bge	13ca4 <sf_gen_relation+0x400>
   13c68:	mov	r1, #1024	; 0x400
   13c6c:	lsl	r6, r1, r0
   13c70:	mov	r0, r6
   13c74:	bl	e34 <malloc@plt>
   13c78:	ldr	sl, [sp, #4]
   13c7c:	cmp	r0, #0
   13c80:	str	r0, [r8, #12]
   13c84:	beq	13ca4 <sf_gen_relation+0x400>
   13c88:	mov	r1, #0
   13c8c:	mov	r2, r6
   13c90:	add	r8, r8, #8
   13c94:	bl	ea0 <memset@plt>
   13c98:	cmp	r6, #207	; 0xcf
   13c9c:	str	r6, [r8]
   13ca0:	bhi	13cb4 <sf_gen_relation+0x410>
   13ca4:	ldr	r0, [pc, #300]	; 13dd8 <sf_gen_relation+0x534>
   13ca8:	add	r0, pc, r0
   13cac:	bl	214c <sf_bpf_error>
   13cb0:	ldr	sl, [sp, #4]
   13cb4:	sub	r0, r6, #208	; 0xd0
   13cb8:	mov	r2, r4
   13cbc:	str	r0, [r8]
   13cc0:	ldr	r1, [r8, #4]
   13cc4:	add	r0, r1, r0
   13cc8:	mov	r1, #21
   13ccc:	str	r1, [r0, #8]
   13cd0:	str	r0, [r0, #96]	; 0x60
   13cd4:	mov	r1, r2
   13cd8:	ldr	r2, [r2, #16]
   13cdc:	cmp	r2, #0
   13ce0:	bne	13cd4 <sf_gen_relation+0x430>
   13ce4:	str	r5, [r1, #16]
   13ce8:	ldr	r1, [sp, #8]
   13cec:	cmp	r1, #0
   13cf0:	bne	13ad4 <sf_gen_relation+0x230>
   13cf4:	b	13ae4 <sf_gen_relation+0x240>
   13cf8:	mov	r1, r6
   13cfc:	ldr	r2, [r0, #96]	; 0x60
   13d00:	mov	r3, r1
   13d04:	ldr	r7, [r3, #44]	; 0x2c
   13d08:	add	r6, r3, #84	; 0x54
   13d0c:	cmp	r7, #0
   13d10:	mov	r7, #84	; 0x54
   13d14:	movweq	r7, #60	; 0x3c
   13d18:	addeq	r6, r3, #60	; 0x3c
   13d1c:	ldr	r3, [r3, r7]
   13d20:	str	r2, [r6]
   13d24:	cmp	r3, #0
   13d28:	bne	13d04 <sf_gen_relation+0x460>
   13d2c:	ldr	r2, [r1, #44]	; 0x2c
   13d30:	cmp	r0, #0
   13d34:	clz	r2, r2
   13d38:	lsr	r2, r2, #5
   13d3c:	str	r2, [r1, #44]	; 0x2c
   13d40:	ldr	r2, [r0, #44]	; 0x2c
   13d44:	clz	r3, r2
   13d48:	lsr	r3, r3, #5
   13d4c:	str	r3, [r0, #44]	; 0x2c
   13d50:	str	r0, [sp, #16]
   13d54:	beq	13d9c <sf_gen_relation+0x4f8>
   13d58:	cmp	r2, #0
   13d5c:	mov	r7, #60	; 0x3c
   13d60:	mov	r3, r0
   13d64:	movweq	r7, #84	; 0x54
   13d68:	ldr	r2, [r3, r7]!
   13d6c:	cmp	r2, #0
   13d70:	beq	13da0 <sf_gen_relation+0x4fc>
   13d74:	ldr	r7, [r2, #44]	; 0x2c
   13d78:	add	r3, r2, #84	; 0x54
   13d7c:	cmp	r7, #0
   13d80:	mov	r7, #84	; 0x54
   13d84:	movweq	r7, #60	; 0x3c
   13d88:	addeq	r3, r2, #60	; 0x3c
   13d8c:	ldr	r2, [r2, r7]
   13d90:	cmp	r2, #0
   13d94:	bne	13d74 <sf_gen_relation+0x4d0>
   13d98:	b	13da0 <sf_gen_relation+0x4fc>
   13d9c:	add	r3, sp, #16
   13da0:	str	r1, [r3]
   13da4:	ldr	r2, [r0, #44]	; 0x2c
   13da8:	clz	r2, r2
   13dac:	lsr	r2, r2, #5
   13db0:	str	r2, [r0, #44]	; 0x2c
   13db4:	ldr	r1, [r1, #96]	; 0x60
   13db8:	str	r1, [r0, #96]	; 0x60
   13dbc:	sub	sp, fp, #28
   13dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc4:	.word	0x00032c1c
   13dc8:	.word	0x00032b50
   13dcc:	.word	0x00032b28
   13dd0:	.word	0x00032a94
   13dd4:	.word	0x00032958
   13dd8:	.word	0x00015dbc

00013ddc <sf_gen_loadlen>:
   13ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13de0:	add	fp, sp, #28
   13de4:	sub	sp, sp, #12
   13de8:	bl	1305c <alloc_reg>
   13dec:	ldr	r2, [pc, #416]	; 13f94 <sf_gen_loadlen+0x1b8>
   13df0:	mov	r7, r0
   13df4:	add	r2, pc, r2
   13df8:	ldr	r0, [r2, #92]	; 0x5c
   13dfc:	ldr	sl, [pc, #404]	; 13f98 <sf_gen_loadlen+0x1bc>
   13e00:	str	r7, [sp, #8]
   13e04:	add	sl, pc, sl
   13e08:	mov	r6, sl
   13e0c:	ldr	r5, [r6, r0, lsl #3]!
   13e10:	cmp	r5, #11
   13e14:	bhi	13e6c <sf_gen_loadlen+0x90>
   13e18:	add	r4, r0, #1
   13e1c:	cmp	r0, #15
   13e20:	str	r4, [r2, #92]	; 0x5c
   13e24:	bge	13f88 <sf_gen_loadlen+0x1ac>
   13e28:	mov	r0, #1024	; 0x400
   13e2c:	mov	r8, r2
   13e30:	lsl	r5, r0, r4
   13e34:	mov	r0, r5
   13e38:	bl	e34 <malloc@plt>
   13e3c:	cmp	r0, #0
   13e40:	str	r0, [r6, #12]
   13e44:	beq	13f88 <sf_gen_loadlen+0x1ac>
   13e48:	mov	r1, #0
   13e4c:	mov	r2, r5
   13e50:	add	r6, r6, #8
   13e54:	bl	ea0 <memset@plt>
   13e58:	cmp	r5, #11
   13e5c:	mov	r2, r8
   13e60:	str	r5, [r6]
   13e64:	bhi	13e70 <sf_gen_loadlen+0x94>
   13e68:	b	13f88 <sf_gen_loadlen+0x1ac>
   13e6c:	mov	r4, r0
   13e70:	sub	r7, r5, #12
   13e74:	mov	r9, sl
   13e78:	str	r7, [r6]
   13e7c:	ldr	r5, [r9, r4, lsl #3]!
   13e80:	ldr	r6, [r6, #4]
   13e84:	cmp	r5, #19
   13e88:	bhi	13ee8 <sf_gen_loadlen+0x10c>
   13e8c:	add	r8, r4, #1
   13e90:	cmp	r4, #15
   13e94:	str	r6, [sp, #4]
   13e98:	str	r8, [r2, #92]	; 0x5c
   13e9c:	bge	13f88 <sf_gen_loadlen+0x1ac>
   13ea0:	mov	r0, #1024	; 0x400
   13ea4:	mov	r6, r2
   13ea8:	lsl	r5, r0, r8
   13eac:	mov	r0, r5
   13eb0:	bl	e34 <malloc@plt>
   13eb4:	cmp	r0, #0
   13eb8:	str	r0, [r9, #12]
   13ebc:	beq	13f88 <sf_gen_loadlen+0x1ac>
   13ec0:	mov	r1, #0
   13ec4:	mov	r2, r5
   13ec8:	add	r9, r9, #8
   13ecc:	bl	ea0 <memset@plt>
   13ed0:	mov	r2, r6
   13ed4:	ldr	r6, [sp, #4]
   13ed8:	cmp	r5, #19
   13edc:	str	r5, [r9]
   13ee0:	bhi	13eec <sf_gen_loadlen+0x110>
   13ee4:	b	13f88 <sf_gen_loadlen+0x1ac>
   13ee8:	mov	r8, r4
   13eec:	sub	r0, r5, #20
   13ef0:	mov	r1, #128	; 0x80
   13ef4:	str	r0, [r9]
   13ef8:	ldr	r4, [r9, #4]
   13efc:	str	r1, [r4, r0]!
   13f00:	ldr	r5, [sl, r8, lsl #3]!
   13f04:	cmp	r5, #19
   13f08:	bhi	13f54 <sf_gen_loadlen+0x178>
   13f0c:	add	r0, r8, #1
   13f10:	cmp	r8, #15
   13f14:	str	r0, [r2, #92]	; 0x5c
   13f18:	bge	13f88 <sf_gen_loadlen+0x1ac>
   13f1c:	mov	r1, #1024	; 0x400
   13f20:	lsl	r5, r1, r0
   13f24:	mov	r0, r5
   13f28:	bl	e34 <malloc@plt>
   13f2c:	cmp	r0, #0
   13f30:	str	r0, [sl, #12]
   13f34:	beq	13f88 <sf_gen_loadlen+0x1ac>
   13f38:	mov	r1, #0
   13f3c:	mov	r2, r5
   13f40:	add	sl, sl, #8
   13f44:	bl	ea0 <memset@plt>
   13f48:	cmp	r5, #19
   13f4c:	str	r5, [sl]
   13f50:	bls	13f88 <sf_gen_loadlen+0x1ac>
   13f54:	sub	r1, r5, #20
   13f58:	mov	r3, #2
   13f5c:	add	r0, r6, r7
   13f60:	str	r1, [sl]
   13f64:	ldr	r2, [sl, #4]
   13f68:	str	r3, [r2, r1]!
   13f6c:	ldr	r1, [sp, #8]
   13f70:	str	r2, [r4, #16]
   13f74:	str	r1, [r2, #12]
   13f78:	str	r4, [r0, #4]
   13f7c:	str	r1, [r0, #8]
   13f80:	sub	sp, fp, #28
   13f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f88:	ldr	r0, [pc, #12]	; 13f9c <sf_gen_loadlen+0x1c0>
   13f8c:	add	r0, pc, r0
   13f90:	bl	214c <sf_bpf_error>
   13f94:	.word	0x000326ec
   13f98:	.word	0x0003261c
   13f9c:	.word	0x00015ad8

00013fa0 <sf_gen_loadi>:
   13fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fa4:	add	fp, sp, #28
   13fa8:	sub	sp, sp, #4
   13fac:	ldr	r7, [pc, #408]	; 1414c <sf_gen_loadi+0x1ac>
   13fb0:	mov	r5, r0
   13fb4:	add	r7, pc, r7
   13fb8:	ldr	r0, [r7, #92]	; 0x5c
   13fbc:	ldr	r8, [pc, #396]	; 14150 <sf_gen_loadi+0x1b0>
   13fc0:	add	r8, pc, r8
   13fc4:	mov	r6, r8
   13fc8:	ldr	r4, [r6, r0, lsl #3]!
   13fcc:	cmp	r4, #11
   13fd0:	bhi	1401c <sf_gen_loadi+0x7c>
   13fd4:	add	r1, r0, #1
   13fd8:	cmp	r0, #15
   13fdc:	str	r1, [r7, #92]	; 0x5c
   13fe0:	bge	14140 <sf_gen_loadi+0x1a0>
   13fe4:	mov	r0, #1024	; 0x400
   13fe8:	lsl	r4, r0, r1
   13fec:	mov	r0, r4
   13ff0:	bl	e34 <malloc@plt>
   13ff4:	cmp	r0, #0
   13ff8:	str	r0, [r6, #12]
   13ffc:	beq	14140 <sf_gen_loadi+0x1a0>
   14000:	mov	r1, #0
   14004:	mov	r2, r4
   14008:	add	r6, r6, #8
   1400c:	bl	ea0 <memset@plt>
   14010:	cmp	r4, #11
   14014:	str	r4, [r6]
   14018:	bls	14140 <sf_gen_loadi+0x1a0>
   1401c:	sub	r4, r4, #12
   14020:	str	r4, [r6]
   14024:	ldr	r0, [r6, #4]
   14028:	str	r0, [sp]
   1402c:	bl	1305c <alloc_reg>
   14030:	mov	r9, r0
   14034:	ldr	r0, [r7, #92]	; 0x5c
   14038:	mov	r1, r7
   1403c:	mov	r7, r8
   14040:	ldr	r6, [r7, r0, lsl #3]!
   14044:	cmp	r6, #19
   14048:	bhi	14098 <sf_gen_loadi+0xf8>
   1404c:	add	sl, r0, #1
   14050:	cmp	r0, #15
   14054:	str	sl, [r1, #92]	; 0x5c
   14058:	bge	14140 <sf_gen_loadi+0x1a0>
   1405c:	mov	r0, #1024	; 0x400
   14060:	lsl	r6, r0, sl
   14064:	mov	r0, r6
   14068:	bl	e34 <malloc@plt>
   1406c:	cmp	r0, #0
   14070:	str	r0, [r7, #12]
   14074:	beq	14140 <sf_gen_loadi+0x1a0>
   14078:	mov	r1, #0
   1407c:	mov	r2, r6
   14080:	add	r7, r7, #8
   14084:	bl	ea0 <memset@plt>
   14088:	cmp	r6, #19
   1408c:	str	r6, [r7]
   14090:	bhi	1409c <sf_gen_loadi+0xfc>
   14094:	b	14140 <sf_gen_loadi+0x1a0>
   14098:	mov	sl, r0
   1409c:	sub	r0, r6, #20
   140a0:	mov	r1, #0
   140a4:	str	r0, [r7]
   140a8:	ldr	r6, [r7, #4]
   140ac:	str	r1, [r6, r0]!
   140b0:	str	r5, [r6, #12]
   140b4:	ldr	r5, [r8, sl, lsl #3]!
   140b8:	cmp	r5, #19
   140bc:	bhi	14110 <sf_gen_loadi+0x170>
   140c0:	ldr	r1, [pc, #140]	; 14154 <sf_gen_loadi+0x1b4>
   140c4:	add	r0, sl, #1
   140c8:	cmp	sl, #15
   140cc:	add	r1, pc, r1
   140d0:	str	r0, [r1, #92]	; 0x5c
   140d4:	bge	14140 <sf_gen_loadi+0x1a0>
   140d8:	mov	r1, #1024	; 0x400
   140dc:	lsl	r5, r1, r0
   140e0:	mov	r0, r5
   140e4:	bl	e34 <malloc@plt>
   140e8:	cmp	r0, #0
   140ec:	str	r0, [r8, #12]
   140f0:	beq	14140 <sf_gen_loadi+0x1a0>
   140f4:	mov	r1, #0
   140f8:	mov	r2, r5
   140fc:	add	r8, r8, #8
   14100:	bl	ea0 <memset@plt>
   14104:	cmp	r5, #19
   14108:	str	r5, [r8]
   1410c:	bls	14140 <sf_gen_loadi+0x1a0>
   14110:	sub	r1, r5, #20
   14114:	ldr	r0, [sp]
   14118:	mov	r3, #2
   1411c:	str	r1, [r8]
   14120:	ldr	r2, [r8, #4]
   14124:	add	r0, r0, r4
   14128:	str	r3, [r2, r1]!
   1412c:	str	r2, [r6, #16]
   14130:	str	r9, [r2, #12]
   14134:	stmib	r0, {r6, r9}
   14138:	sub	sp, fp, #28
   1413c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14140:	ldr	r0, [pc, #16]	; 14158 <sf_gen_loadi+0x1b8>
   14144:	add	r0, pc, r0
   14148:	bl	214c <sf_bpf_error>
   1414c:	.word	0x0003252c
   14150:	.word	0x00032460
   14154:	.word	0x00032414
   14158:	.word	0x00015920

0001415c <sf_gen_neg>:
   1415c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14160:	add	fp, sp, #28
   14164:	sub	sp, sp, #4
   14168:	ldr	r8, [pc, #472]	; 14348 <sf_gen_neg+0x1ec>
   1416c:	mov	r9, r0
   14170:	add	r8, pc, r8
   14174:	ldr	r0, [r8, #92]	; 0x5c
   14178:	ldr	sl, [pc, #460]	; 1434c <sf_gen_neg+0x1f0>
   1417c:	add	sl, pc, sl
   14180:	mov	r4, sl
   14184:	ldr	r5, [r4, r0, lsl #3]!
   14188:	cmp	r5, #19
   1418c:	bhi	141dc <sf_gen_neg+0x80>
   14190:	add	r7, r0, #1
   14194:	cmp	r0, #15
   14198:	str	r7, [r8, #92]	; 0x5c
   1419c:	bge	1433c <sf_gen_neg+0x1e0>
   141a0:	mov	r0, #1024	; 0x400
   141a4:	lsl	r5, r0, r7
   141a8:	mov	r0, r5
   141ac:	bl	e34 <malloc@plt>
   141b0:	cmp	r0, #0
   141b4:	str	r0, [r4, #12]
   141b8:	beq	1433c <sf_gen_neg+0x1e0>
   141bc:	mov	r1, #0
   141c0:	mov	r2, r5
   141c4:	add	r4, r4, #8
   141c8:	bl	ea0 <memset@plt>
   141cc:	cmp	r5, #19
   141d0:	str	r5, [r4]
   141d4:	bhi	141e0 <sf_gen_neg+0x84>
   141d8:	b	1433c <sf_gen_neg+0x1e0>
   141dc:	mov	r7, r0
   141e0:	sub	r1, r5, #20
   141e4:	mov	r2, #96	; 0x60
   141e8:	str	r1, [r4]
   141ec:	ldr	r0, [r4, #4]
   141f0:	str	r2, [r0, r1]!
   141f4:	ldr	r1, [r9, #8]
   141f8:	str	r1, [r0, #12]
   141fc:	ldr	r1, [r9, #4]
   14200:	mov	r2, r1
   14204:	ldr	r1, [r1, #16]
   14208:	cmp	r1, #0
   1420c:	bne	14200 <sf_gen_neg+0xa4>
   14210:	str	r0, [r2, #16]
   14214:	mov	r6, sl
   14218:	ldr	r5, [r6, r7, lsl #3]!
   1421c:	cmp	r5, #19
   14220:	bhi	14270 <sf_gen_neg+0x114>
   14224:	add	r4, r7, #1
   14228:	cmp	r7, #15
   1422c:	str	r4, [r8, #92]	; 0x5c
   14230:	bge	1433c <sf_gen_neg+0x1e0>
   14234:	mov	r0, #1024	; 0x400
   14238:	lsl	r5, r0, r4
   1423c:	mov	r0, r5
   14240:	bl	e34 <malloc@plt>
   14244:	cmp	r0, #0
   14248:	str	r0, [r6, #12]
   1424c:	beq	1433c <sf_gen_neg+0x1e0>
   14250:	mov	r1, #0
   14254:	mov	r2, r5
   14258:	add	r6, r6, #8
   1425c:	bl	ea0 <memset@plt>
   14260:	cmp	r5, #19
   14264:	str	r5, [r6]
   14268:	bhi	14274 <sf_gen_neg+0x118>
   1426c:	b	1433c <sf_gen_neg+0x1e0>
   14270:	mov	r4, r7
   14274:	sub	r1, r5, #20
   14278:	mov	r2, #132	; 0x84
   1427c:	str	r1, [r6]
   14280:	ldr	r0, [r6, #4]
   14284:	str	r2, [r0, r1]!
   14288:	mov	r1, #0
   1428c:	str	r1, [r0, #12]
   14290:	ldr	r1, [r9, #4]
   14294:	mov	r2, r1
   14298:	ldr	r1, [r1, #16]
   1429c:	cmp	r1, #0
   142a0:	bne	14294 <sf_gen_neg+0x138>
   142a4:	str	r0, [r2, #16]
   142a8:	ldr	r5, [sl, r4, lsl #3]!
   142ac:	cmp	r5, #19
   142b0:	bhi	142fc <sf_gen_neg+0x1a0>
   142b4:	add	r0, r4, #1
   142b8:	cmp	r4, #15
   142bc:	str	r0, [r8, #92]	; 0x5c
   142c0:	bge	1433c <sf_gen_neg+0x1e0>
   142c4:	mov	r1, #1024	; 0x400
   142c8:	lsl	r5, r1, r0
   142cc:	mov	r0, r5
   142d0:	bl	e34 <malloc@plt>
   142d4:	cmp	r0, #0
   142d8:	str	r0, [sl, #12]
   142dc:	beq	1433c <sf_gen_neg+0x1e0>
   142e0:	mov	r1, #0
   142e4:	mov	r2, r5
   142e8:	add	sl, sl, #8
   142ec:	bl	ea0 <memset@plt>
   142f0:	cmp	r5, #19
   142f4:	str	r5, [sl]
   142f8:	bls	1433c <sf_gen_neg+0x1e0>
   142fc:	sub	r1, r5, #20
   14300:	mov	r2, #2
   14304:	str	r1, [sl]
   14308:	ldr	r0, [sl, #4]
   1430c:	str	r2, [r0, r1]!
   14310:	ldr	r1, [r9, #8]
   14314:	str	r1, [r0, #12]
   14318:	ldr	r1, [r9, #4]
   1431c:	mov	r2, r1
   14320:	ldr	r1, [r1, #16]
   14324:	cmp	r1, #0
   14328:	bne	1431c <sf_gen_neg+0x1c0>
   1432c:	str	r0, [r2, #16]
   14330:	mov	r0, r9
   14334:	sub	sp, fp, #28
   14338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1433c:	ldr	r0, [pc, #12]	; 14350 <sf_gen_neg+0x1f4>
   14340:	add	r0, pc, r0
   14344:	bl	214c <sf_bpf_error>
   14348:	.word	0x00032370
   1434c:	.word	0x000322a4
   14350:	.word	0x00015724

00014354 <sf_gen_arth>:
   14354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14358:	add	fp, sp, #28
   1435c:	sub	sp, sp, #12
   14360:	str	r0, [sp]
   14364:	mov	r6, r2
   14368:	mov	r8, r1
   1436c:	ldr	r3, [pc, #720]	; 14644 <sf_gen_arth+0x2f0>
   14370:	add	r3, pc, r3
   14374:	ldr	r0, [r3, #92]	; 0x5c
   14378:	ldr	sl, [pc, #712]	; 14648 <sf_gen_arth+0x2f4>
   1437c:	add	sl, pc, sl
   14380:	mov	r5, sl
   14384:	ldr	r7, [r5, r0, lsl #3]!
   14388:	cmp	r7, #19
   1438c:	bhi	143e4 <sf_gen_arth+0x90>
   14390:	add	r4, r0, #1
   14394:	cmp	r0, #15
   14398:	str	r4, [r3, #92]	; 0x5c
   1439c:	bge	14638 <sf_gen_arth+0x2e4>
   143a0:	mov	r0, #1024	; 0x400
   143a4:	mov	r9, r3
   143a8:	lsl	r7, r0, r4
   143ac:	mov	r0, r7
   143b0:	bl	e34 <malloc@plt>
   143b4:	cmp	r0, #0
   143b8:	str	r0, [r5, #12]
   143bc:	beq	14638 <sf_gen_arth+0x2e4>
   143c0:	mov	r1, #0
   143c4:	mov	r2, r7
   143c8:	add	r5, r5, #8
   143cc:	bl	ea0 <memset@plt>
   143d0:	cmp	r7, #19
   143d4:	mov	r3, r9
   143d8:	str	r7, [r5]
   143dc:	bhi	143e8 <sf_gen_arth+0x94>
   143e0:	b	14638 <sf_gen_arth+0x2e4>
   143e4:	mov	r4, r0
   143e8:	sub	r0, r7, #20
   143ec:	mov	r1, #97	; 0x61
   143f0:	str	r0, [r5]
   143f4:	ldr	r5, [r5, #4]
   143f8:	str	r1, [r5, r0]!
   143fc:	str	r6, [sp, #4]
   14400:	str	r8, [sp, #8]
   14404:	ldr	r0, [r6, #8]
   14408:	mov	r6, sl
   1440c:	str	r0, [r5, #12]
   14410:	ldr	r7, [r6, r4, lsl #3]!
   14414:	cmp	r7, #19
   14418:	bhi	14470 <sf_gen_arth+0x11c>
   1441c:	add	r9, r4, #1
   14420:	cmp	r4, #15
   14424:	str	r9, [r3, #92]	; 0x5c
   14428:	bge	14638 <sf_gen_arth+0x2e4>
   1442c:	mov	r0, #1024	; 0x400
   14430:	lsl	r7, r0, r9
   14434:	mov	r0, r7
   14438:	bl	e34 <malloc@plt>
   1443c:	cmp	r0, #0
   14440:	str	r0, [r6, #12]
   14444:	beq	14638 <sf_gen_arth+0x2e4>
   14448:	mov	r1, #0
   1444c:	mov	r2, r7
   14450:	add	r6, r6, #8
   14454:	bl	ea0 <memset@plt>
   14458:	str	r7, [r6]
   1445c:	cmp	r7, #19
   14460:	ldr	r3, [pc, #484]	; 1464c <sf_gen_arth+0x2f8>
   14464:	add	r3, pc, r3
   14468:	bhi	14474 <sf_gen_arth+0x120>
   1446c:	b	14638 <sf_gen_arth+0x2e4>
   14470:	mov	r9, r4
   14474:	sub	r0, r7, #20
   14478:	mov	r1, #96	; 0x60
   1447c:	str	r0, [r6]
   14480:	ldr	r8, [r6, #4]
   14484:	mov	r6, sl
   14488:	str	r1, [r8, r0]!
   1448c:	ldr	r0, [sp, #8]
   14490:	ldr	r0, [r0, #8]
   14494:	str	r0, [r8, #12]
   14498:	ldr	r7, [r6, r9, lsl #3]!
   1449c:	cmp	r7, #19
   144a0:	bhi	14500 <sf_gen_arth+0x1ac>
   144a4:	add	r1, r9, #1
   144a8:	cmp	r9, #15
   144ac:	str	r1, [r3, #92]	; 0x5c
   144b0:	bge	14638 <sf_gen_arth+0x2e4>
   144b4:	mov	r0, #1024	; 0x400
   144b8:	mov	r9, r1
   144bc:	lsl	r7, r0, r1
   144c0:	mov	r0, r7
   144c4:	bl	e34 <malloc@plt>
   144c8:	ldr	r4, [sp, #4]
   144cc:	cmp	r0, #0
   144d0:	str	r0, [r6, #12]
   144d4:	beq	14638 <sf_gen_arth+0x2e4>
   144d8:	mov	r1, #0
   144dc:	mov	r2, r7
   144e0:	add	r6, r6, #8
   144e4:	bl	ea0 <memset@plt>
   144e8:	str	r7, [r6]
   144ec:	cmp	r7, #19
   144f0:	ldr	r3, [pc, #344]	; 14650 <sf_gen_arth+0x2fc>
   144f4:	add	r3, pc, r3
   144f8:	bhi	14504 <sf_gen_arth+0x1b0>
   144fc:	b	14638 <sf_gen_arth+0x2e4>
   14500:	ldr	r4, [sp, #4]
   14504:	ldr	r0, [sp]
   14508:	sub	r2, r7, #20
   1450c:	str	r2, [r6]
   14510:	orr	r1, r0, #12
   14514:	ldr	r0, [r6, #4]
   14518:	str	r1, [r0, r2]!
   1451c:	mov	r2, r8
   14520:	mov	r1, r2
   14524:	ldr	r2, [r2, #16]
   14528:	cmp	r2, #0
   1452c:	bne	14520 <sf_gen_arth+0x1cc>
   14530:	str	r0, [r1, #16]
   14534:	mov	r1, r5
   14538:	mov	r0, r1
   1453c:	ldr	r1, [r1, #16]
   14540:	cmp	r1, #0
   14544:	bne	14538 <sf_gen_arth+0x1e4>
   14548:	str	r8, [r0, #16]
   1454c:	ldr	r0, [r4, #4]
   14550:	mov	r1, r0
   14554:	ldr	r0, [r0, #16]
   14558:	cmp	r0, #0
   1455c:	bne	14550 <sf_gen_arth+0x1fc>
   14560:	ldr	r6, [sp, #8]
   14564:	str	r5, [r1, #16]
   14568:	ldr	r0, [r4, #4]
   1456c:	ldr	r1, [r6, #4]
   14570:	mov	r2, r1
   14574:	ldr	r1, [r1, #16]
   14578:	cmp	r1, #0
   1457c:	bne	14570 <sf_gen_arth+0x21c>
   14580:	str	r0, [r2, #16]
   14584:	mov	r2, #0
   14588:	ldr	r0, [r6, #8]
   1458c:	ldr	r1, [pc, #192]	; 14654 <sf_gen_arth+0x300>
   14590:	ldr	r5, [sl, r9, lsl #3]!
   14594:	add	r1, pc, r1
   14598:	str	r2, [r1, r0, lsl #2]
   1459c:	cmp	r5, #19
   145a0:	ldr	r0, [r4, #8]
   145a4:	str	r2, [r1, r0, lsl #2]
   145a8:	bhi	145f4 <sf_gen_arth+0x2a0>
   145ac:	add	r0, r9, #1
   145b0:	cmp	r9, #15
   145b4:	str	r0, [r3, #92]	; 0x5c
   145b8:	bge	14638 <sf_gen_arth+0x2e4>
   145bc:	mov	r1, #1024	; 0x400
   145c0:	lsl	r5, r1, r0
   145c4:	mov	r0, r5
   145c8:	bl	e34 <malloc@plt>
   145cc:	cmp	r0, #0
   145d0:	str	r0, [sl, #12]
   145d4:	beq	14638 <sf_gen_arth+0x2e4>
   145d8:	mov	r1, #0
   145dc:	mov	r2, r5
   145e0:	add	sl, sl, #8
   145e4:	bl	ea0 <memset@plt>
   145e8:	cmp	r5, #19
   145ec:	str	r5, [sl]
   145f0:	bls	14638 <sf_gen_arth+0x2e4>
   145f4:	sub	r0, r5, #20
   145f8:	mov	r1, #2
   145fc:	str	r0, [sl]
   14600:	ldr	r4, [sl, #4]
   14604:	str	r1, [r4, r0]!
   14608:	bl	1305c <alloc_reg>
   1460c:	str	r0, [r4, #12]
   14610:	str	r0, [r6, #8]
   14614:	ldr	r0, [r6, #4]
   14618:	mov	r1, r0
   1461c:	ldr	r0, [r0, #16]
   14620:	cmp	r0, #0
   14624:	bne	14618 <sf_gen_arth+0x2c4>
   14628:	str	r4, [r1, #16]
   1462c:	mov	r0, r6
   14630:	sub	sp, fp, #28
   14634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14638:	ldr	r0, [pc, #24]	; 14658 <sf_gen_arth+0x304>
   1463c:	add	r0, pc, r0
   14640:	bl	214c <sf_bpf_error>
   14644:	.word	0x00032170
   14648:	.word	0x000320a4
   1464c:	.word	0x0003207c
   14650:	.word	0x00031fec
   14654:	.word	0x00031f0c
   14658:	.word	0x00015428

0001465c <sf_gen_greater>:
   1465c:	mov	r1, r0
   14660:	mov	r0, #48	; 0x30
   14664:	b	14668 <gen_len>

00014668 <gen_len>:
   14668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1466c:	add	fp, sp, #28
   14670:	sub	sp, sp, #4
   14674:	ldr	sl, [pc, #276]	; 14790 <gen_len+0x128>
   14678:	mov	r9, r0
   1467c:	mov	r8, r1
   14680:	add	sl, pc, sl
   14684:	ldr	r0, [sl, #92]	; 0x5c
   14688:	ldr	r7, [pc, #260]	; 14794 <gen_len+0x12c>
   1468c:	add	r7, pc, r7
   14690:	mov	r5, r7
   14694:	ldr	r6, [r5, r0, lsl #3]!
   14698:	cmp	r6, #19
   1469c:	bhi	146ec <gen_len+0x84>
   146a0:	add	r4, r0, #1
   146a4:	cmp	r0, #15
   146a8:	str	r4, [sl, #92]	; 0x5c
   146ac:	bge	14784 <gen_len+0x11c>
   146b0:	mov	r0, #1024	; 0x400
   146b4:	lsl	r6, r0, r4
   146b8:	mov	r0, r6
   146bc:	bl	e34 <malloc@plt>
   146c0:	cmp	r0, #0
   146c4:	str	r0, [r5, #12]
   146c8:	beq	14784 <gen_len+0x11c>
   146cc:	mov	r1, #0
   146d0:	mov	r2, r6
   146d4:	add	r5, r5, #8
   146d8:	bl	ea0 <memset@plt>
   146dc:	cmp	r6, #19
   146e0:	str	r6, [r5]
   146e4:	bhi	146f0 <gen_len+0x88>
   146e8:	b	14784 <gen_len+0x11c>
   146ec:	mov	r4, r0
   146f0:	sub	r0, r6, #20
   146f4:	mov	r1, #128	; 0x80
   146f8:	str	r0, [r5]
   146fc:	ldr	r5, [r5, #4]
   14700:	str	r1, [r5, r0]!
   14704:	ldr	r6, [r7, r4, lsl #3]!
   14708:	cmp	r6, #207	; 0xcf
   1470c:	bhi	14758 <gen_len+0xf0>
   14710:	add	r0, r4, #1
   14714:	cmp	r4, #15
   14718:	str	r0, [sl, #92]	; 0x5c
   1471c:	bge	14784 <gen_len+0x11c>
   14720:	mov	r1, #1024	; 0x400
   14724:	lsl	r6, r1, r0
   14728:	mov	r0, r6
   1472c:	bl	e34 <malloc@plt>
   14730:	cmp	r0, #0
   14734:	str	r0, [r7, #12]
   14738:	beq	14784 <gen_len+0x11c>
   1473c:	mov	r1, #0
   14740:	mov	r2, r6
   14744:	add	r7, r7, #8
   14748:	bl	ea0 <memset@plt>
   1474c:	cmp	r6, #207	; 0xcf
   14750:	str	r6, [r7]
   14754:	bls	14784 <gen_len+0x11c>
   14758:	sub	r0, r6, #208	; 0xd0
   1475c:	orr	r1, r9, #5
   14760:	str	r0, [r7]
   14764:	ldr	r2, [r7, #4]
   14768:	add	r0, r2, r0
   1476c:	str	r8, [r0, #20]
   14770:	str	r5, [r0, #4]
   14774:	str	r1, [r0, #8]
   14778:	str	r0, [r0, #96]	; 0x60
   1477c:	sub	sp, fp, #28
   14780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14784:	ldr	r0, [pc, #12]	; 14798 <gen_len+0x130>
   14788:	add	r0, pc, r0
   1478c:	bl	214c <sf_bpf_error>
   14790:	.word	0x00031e60
   14794:	.word	0x00031d94
   14798:	.word	0x000152dc

0001479c <sf_gen_less>:
   1479c:	push	{fp, lr}
   147a0:	mov	fp, sp
   147a4:	mov	r1, r0
   147a8:	mov	r0, #32
   147ac:	bl	14668 <gen_len>
   147b0:	ldr	r1, [r0, #44]	; 0x2c
   147b4:	clz	r1, r1
   147b8:	lsr	r1, r1, #5
   147bc:	str	r1, [r0, #44]	; 0x2c
   147c0:	pop	{fp, pc}

000147c4 <sf_gen_byteop>:
   147c4:	push	{r4, r5, r6, r7, fp, lr}
   147c8:	add	fp, sp, #16
   147cc:	mov	r4, r2
   147d0:	sub	r2, r0, #38	; 0x26
   147d4:	cmp	r2, #24
   147d8:	bhi	148b8 <sf_gen_byteop+0xf4>
   147dc:	add	r0, pc, #4
   147e0:	ldr	r2, [r0, r2, lsl #2]
   147e4:	add	pc, r0, r2
   147e8:	.word	0x00000064
   147ec:	.word	0x000002c4
   147f0:	.word	0x000002c4
   147f4:	.word	0x000002c4
   147f8:	.word	0x000002c4
   147fc:	.word	0x000002c4
   14800:	.word	0x000002c4
   14804:	.word	0x000002c4
   14808:	.word	0x000002c4
   1480c:	.word	0x000002c4
   14810:	.word	0x000002c4
   14814:	.word	0x000002c4
   14818:	.word	0x000002c4
   1481c:	.word	0x000002c4
   14820:	.word	0x000002c4
   14824:	.word	0x000002c4
   14828:	.word	0x000002c4
   1482c:	.word	0x000002c4
   14830:	.word	0x000002c4
   14834:	.word	0x000002c4
   14838:	.word	0x000002c4
   1483c:	.word	0x000002c4
   14840:	.word	0x00000158
   14844:	.word	0x000001ec
   14848:	.word	0x00000144
   1484c:	ldr	r1, [pc, #632]	; 14acc <sf_gen_byteop+0x308>
   14850:	add	r1, pc, r1
   14854:	ldr	r0, [r1, #92]	; 0x5c
   14858:	ldr	r6, [pc, #624]	; 14ad0 <sf_gen_byteop+0x30c>
   1485c:	add	r6, pc, r6
   14860:	ldr	r5, [r6, r0, lsl #3]!
   14864:	cmp	r5, #19
   14868:	bhi	149e8 <sf_gen_byteop+0x224>
   1486c:	add	r7, r0, #1
   14870:	cmp	r0, #15
   14874:	str	r7, [r1, #92]	; 0x5c
   14878:	bge	14ab0 <sf_gen_byteop+0x2ec>
   1487c:	mov	r0, #1024	; 0x400
   14880:	lsl	r5, r0, r7
   14884:	mov	r0, r5
   14888:	bl	e34 <malloc@plt>
   1488c:	cmp	r0, #0
   14890:	str	r0, [r6, #12]
   14894:	beq	14ab0 <sf_gen_byteop+0x2ec>
   14898:	mov	r1, #0
   1489c:	mov	r2, r5
   148a0:	add	r6, r6, #8
   148a4:	bl	ea0 <memset@plt>
   148a8:	cmp	r5, #19
   148ac:	str	r5, [r6]
   148b0:	bhi	149ec <sf_gen_byteop+0x228>
   148b4:	b	14ab0 <sf_gen_byteop+0x2ec>
   148b8:	cmp	r0, #124	; 0x7c
   148bc:	bne	14aac <sf_gen_byteop+0x2e8>
   148c0:	ldr	r1, [pc, #508]	; 14ac4 <sf_gen_byteop+0x300>
   148c4:	add	r1, pc, r1
   148c8:	ldr	r0, [r1, #92]	; 0x5c
   148cc:	ldr	r6, [pc, #500]	; 14ac8 <sf_gen_byteop+0x304>
   148d0:	add	r6, pc, r6
   148d4:	ldr	r5, [r6, r0, lsl #3]!
   148d8:	cmp	r5, #19
   148dc:	bhi	149f8 <sf_gen_byteop+0x234>
   148e0:	add	r7, r0, #1
   148e4:	cmp	r0, #15
   148e8:	str	r7, [r1, #92]	; 0x5c
   148ec:	bge	14ab0 <sf_gen_byteop+0x2ec>
   148f0:	mov	r0, #1024	; 0x400
   148f4:	lsl	r5, r0, r7
   148f8:	mov	r0, r5
   148fc:	bl	e34 <malloc@plt>
   14900:	cmp	r0, #0
   14904:	str	r0, [r6, #12]
   14908:	beq	14ab0 <sf_gen_byteop+0x2ec>
   1490c:	mov	r1, #0
   14910:	mov	r2, r5
   14914:	add	r6, r6, #8
   14918:	bl	ea0 <memset@plt>
   1491c:	cmp	r5, #19
   14920:	str	r5, [r6]
   14924:	bhi	149fc <sf_gen_byteop+0x238>
   14928:	b	14ab0 <sf_gen_byteop+0x2ec>
   1492c:	mov	r0, #1
   14930:	mov	r2, #16
   14934:	mov	r3, r4
   14938:	pop	{r4, r5, r6, r7, fp, lr}
   1493c:	b	14ae0 <gen_cmp_gt>
   14940:	mov	r0, #1
   14944:	mov	r2, #16
   14948:	bl	165d8 <gen_load_a>
   1494c:	ldr	r1, [pc, #360]	; 14abc <sf_gen_byteop+0x2f8>
   14950:	mov	r5, r0
   14954:	add	r1, pc, r1
   14958:	ldr	r0, [r1, #92]	; 0x5c
   1495c:	ldr	r7, [pc, #348]	; 14ac0 <sf_gen_byteop+0x2fc>
   14960:	add	r7, pc, r7
   14964:	ldr	r6, [r7, r0, lsl #3]!
   14968:	cmp	r6, #207	; 0xcf
   1496c:	bhi	149b8 <sf_gen_byteop+0x1f4>
   14970:	add	r2, r0, #1
   14974:	cmp	r0, #15
   14978:	str	r2, [r1, #92]	; 0x5c
   1497c:	bge	14ab0 <sf_gen_byteop+0x2ec>
   14980:	mov	r0, #1024	; 0x400
   14984:	lsl	r6, r0, r2
   14988:	mov	r0, r6
   1498c:	bl	e34 <malloc@plt>
   14990:	cmp	r0, #0
   14994:	str	r0, [r7, #12]
   14998:	beq	14ab0 <sf_gen_byteop+0x2ec>
   1499c:	mov	r1, #0
   149a0:	mov	r2, r6
   149a4:	add	r7, r7, #8
   149a8:	bl	ea0 <memset@plt>
   149ac:	cmp	r6, #207	; 0xcf
   149b0:	str	r6, [r7]
   149b4:	bls	14ab0 <sf_gen_byteop+0x2ec>
   149b8:	sub	r0, r6, #208	; 0xd0
   149bc:	str	r0, [r7]
   149c0:	ldr	r1, [r7, #4]
   149c4:	add	r0, r1, r0
   149c8:	mov	r1, #53	; 0x35
   149cc:	str	r4, [r0, #20]
   149d0:	b	14a8c <sf_gen_byteop+0x2c8>
   149d4:	mov	r0, #1
   149d8:	mov	r2, #16
   149dc:	mov	r3, r4
   149e0:	pop	{r4, r5, r6, r7, fp, lr}
   149e4:	b	a0a4 <gen_cmp>
   149e8:	mov	r7, r0
   149ec:	sub	r0, r5, #20
   149f0:	mov	r1, #84	; 0x54
   149f4:	b	14a04 <sf_gen_byteop+0x240>
   149f8:	mov	r7, r0
   149fc:	sub	r0, r5, #20
   14a00:	mov	r1, #68	; 0x44
   14a04:	str	r0, [r6]
   14a08:	ldr	r5, [r6, #4]
   14a0c:	str	r1, [r5, r0]!
   14a10:	str	r4, [r5, #12]
   14a14:	ldr	r6, [pc, #184]	; 14ad4 <sf_gen_byteop+0x310>
   14a18:	add	r6, pc, r6
   14a1c:	ldr	r4, [r6, r7, lsl #3]!
   14a20:	cmp	r4, #207	; 0xcf
   14a24:	bhi	14a78 <sf_gen_byteop+0x2b4>
   14a28:	ldr	r1, [pc, #168]	; 14ad8 <sf_gen_byteop+0x314>
   14a2c:	add	r0, r7, #1
   14a30:	cmp	r7, #15
   14a34:	add	r1, pc, r1
   14a38:	str	r0, [r1, #92]	; 0x5c
   14a3c:	bge	14ab0 <sf_gen_byteop+0x2ec>
   14a40:	mov	r1, #1024	; 0x400
   14a44:	lsl	r4, r1, r0
   14a48:	mov	r0, r4
   14a4c:	bl	e34 <malloc@plt>
   14a50:	cmp	r0, #0
   14a54:	str	r0, [r6, #12]
   14a58:	beq	14ab0 <sf_gen_byteop+0x2ec>
   14a5c:	mov	r1, #0
   14a60:	mov	r2, r4
   14a64:	add	r6, r6, #8
   14a68:	bl	ea0 <memset@plt>
   14a6c:	cmp	r4, #207	; 0xcf
   14a70:	str	r4, [r6]
   14a74:	bls	14ab0 <sf_gen_byteop+0x2ec>
   14a78:	sub	r0, r4, #208	; 0xd0
   14a7c:	str	r0, [r6]
   14a80:	ldr	r1, [r6, #4]
   14a84:	add	r0, r1, r0
   14a88:	mov	r1, #21
   14a8c:	str	r5, [r0, #4]
   14a90:	str	r1, [r0, #8]
   14a94:	ldr	r1, [r0, #44]	; 0x2c
   14a98:	clz	r1, r1
   14a9c:	lsr	r1, r1, #5
   14aa0:	str	r1, [r0, #44]	; 0x2c
   14aa4:	str	r0, [r0, #96]	; 0x60
   14aa8:	pop	{r4, r5, r6, r7, fp, pc}
   14aac:	bl	f24 <abort@plt>
   14ab0:	ldr	r0, [pc, #36]	; 14adc <sf_gen_byteop+0x318>
   14ab4:	add	r0, pc, r0
   14ab8:	bl	214c <sf_bpf_error>
   14abc:	.word	0x00031b8c
   14ac0:	.word	0x00031ac0
   14ac4:	.word	0x00031c1c
   14ac8:	.word	0x00031b50
   14acc:	.word	0x00031c90
   14ad0:	.word	0x00031bc4
   14ad4:	.word	0x00031a08
   14ad8:	.word	0x00031aac
   14adc:	.word	0x00014fb0

00014ae0 <gen_cmp_gt>:
   14ae0:	push	{r4, r5, r6, r7, fp, lr}
   14ae4:	add	fp, sp, #16
   14ae8:	mov	r4, r3
   14aec:	bl	165d8 <gen_load_a>
   14af0:	ldr	r1, [pc, #152]	; 14b90 <gen_cmp_gt+0xb0>
   14af4:	mov	r5, r0
   14af8:	add	r1, pc, r1
   14afc:	ldr	r0, [r1, #92]	; 0x5c
   14b00:	ldr	r7, [pc, #140]	; 14b94 <gen_cmp_gt+0xb4>
   14b04:	add	r7, pc, r7
   14b08:	ldr	r6, [r7, r0, lsl #3]!
   14b0c:	cmp	r6, #207	; 0xcf
   14b10:	bhi	14b5c <gen_cmp_gt+0x7c>
   14b14:	add	r2, r0, #1
   14b18:	cmp	r0, #15
   14b1c:	str	r2, [r1, #92]	; 0x5c
   14b20:	bge	14b84 <gen_cmp_gt+0xa4>
   14b24:	mov	r0, #1024	; 0x400
   14b28:	lsl	r6, r0, r2
   14b2c:	mov	r0, r6
   14b30:	bl	e34 <malloc@plt>
   14b34:	cmp	r0, #0
   14b38:	str	r0, [r7, #12]
   14b3c:	beq	14b84 <gen_cmp_gt+0xa4>
   14b40:	mov	r1, #0
   14b44:	mov	r2, r6
   14b48:	add	r7, r7, #8
   14b4c:	bl	ea0 <memset@plt>
   14b50:	cmp	r6, #207	; 0xcf
   14b54:	str	r6, [r7]
   14b58:	bls	14b84 <gen_cmp_gt+0xa4>
   14b5c:	sub	r0, r6, #208	; 0xd0
   14b60:	str	r0, [r7]
   14b64:	ldr	r1, [r7, #4]
   14b68:	add	r0, r1, r0
   14b6c:	mov	r1, #37	; 0x25
   14b70:	str	r4, [r0, #20]
   14b74:	str	r5, [r0, #4]
   14b78:	str	r1, [r0, #8]
   14b7c:	str	r0, [r0, #96]	; 0x60
   14b80:	pop	{r4, r5, r6, r7, fp, pc}
   14b84:	ldr	r0, [pc, #12]	; 14b98 <gen_cmp_gt+0xb8>
   14b88:	add	r0, pc, r0
   14b8c:	bl	214c <sf_bpf_error>
   14b90:	.word	0x000319e8
   14b94:	.word	0x0003191c
   14b98:	.word	0x00014edc

00014b9c <sf_gen_broadcast>:
   14b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ba0:	add	fp, sp, #28
   14ba4:	sub	sp, sp, #28
   14ba8:	cmp	r0, #2
   14bac:	bcs	14cd8 <sf_gen_broadcast+0x13c>
   14bb0:	ldr	r5, [pc, #2980]	; 1575c <sf_gen_broadcast+0xbc0>
   14bb4:	add	r5, pc, r5
   14bb8:	ldr	r0, [r5, #36]	; 0x24
   14bbc:	sub	r1, r0, #105	; 0x69
   14bc0:	cmp	r1, #58	; 0x3a
   14bc4:	bhi	14dac <sf_gen_broadcast+0x210>
   14bc8:	add	r0, pc, #4
   14bcc:	ldr	r1, [r0, r1, lsl #2]
   14bd0:	add	pc, r0, r1
   14bd4:	.word	0x000000ec
   14bd8:	.word	0x00000454
   14bdc:	.word	0x00000454
   14be0:	.word	0x00000454
   14be4:	.word	0x00000454
   14be8:	.word	0x00000454
   14bec:	.word	0x00000454
   14bf0:	.word	0x00000454
   14bf4:	.word	0x00000454
   14bf8:	.word	0x00000454
   14bfc:	.word	0x00000454
   14c00:	.word	0x00000454
   14c04:	.word	0x00000454
   14c08:	.word	0x00000454
   14c0c:	.word	0x000000ec
   14c10:	.word	0x00000454
   14c14:	.word	0x00000454
   14c18:	.word	0x00000240
   14c1c:	.word	0x00000480
   14c20:	.word	0x00000454
   14c24:	.word	0x00000454
   14c28:	.word	0x00000454
   14c2c:	.word	0x000000ec
   14c30:	.word	0x00000454
   14c34:	.word	0x00000260
   14c38:	.word	0x00000454
   14c3c:	.word	0x00000454
   14c40:	.word	0x00000454
   14c44:	.word	0x00000454
   14c48:	.word	0x00000454
   14c4c:	.word	0x00000454
   14c50:	.word	0x00000454
   14c54:	.word	0x00000454
   14c58:	.word	0x00000454
   14c5c:	.word	0x00000454
   14c60:	.word	0x00000454
   14c64:	.word	0x00000454
   14c68:	.word	0x00000454
   14c6c:	.word	0x00000454
   14c70:	.word	0x00000454
   14c74:	.word	0x00000454
   14c78:	.word	0x00000454
   14c7c:	.word	0x00000454
   14c80:	.word	0x00000454
   14c84:	.word	0x00000454
   14c88:	.word	0x00000454
   14c8c:	.word	0x00000454
   14c90:	.word	0x00000454
   14c94:	.word	0x00000454
   14c98:	.word	0x00000454
   14c9c:	.word	0x00000454
   14ca0:	.word	0x00000454
   14ca4:	.word	0x00000454
   14ca8:	.word	0x00000454
   14cac:	.word	0x00000454
   14cb0:	.word	0x00000454
   14cb4:	.word	0x00000454
   14cb8:	.word	0x00000454
   14cbc:	.word	0x000000ec
   14cc0:	ldr	r0, [pc, #2712]	; 15760 <sf_gen_broadcast+0xbc4>
   14cc4:	mov	r1, #2
   14cc8:	add	r0, pc, r0
   14ccc:	sub	sp, fp, #28
   14cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cd4:	b	c850 <gen_wlanhostop>
   14cd8:	bne	15740 <sf_gen_broadcast+0xba4>
   14cdc:	ldr	r4, [pc, #2708]	; 15778 <sf_gen_broadcast+0xbdc>
   14ce0:	add	r4, pc, r4
   14ce4:	ldr	r0, [r4, #28]
   14ce8:	cmn	r0, #1
   14cec:	beq	1574c <sf_gen_broadcast+0xbb0>
   14cf0:	mov	r0, #2048	; 0x800
   14cf4:	bl	6fb4 <gen_linktype>
   14cf8:	ldr	r2, [r4, #28]
   14cfc:	ldr	r1, [r4, #48]	; 0x30
   14d00:	mov	r3, r4
   14d04:	str	r2, [sp, #12]
   14d08:	add	sl, r1, #16
   14d0c:	ldrb	r1, [r4, #16]
   14d10:	ldr	r9, [pc, #2660]	; 1577c <sf_gen_broadcast+0xbe0>
   14d14:	str	r0, [sp, #4]
   14d18:	cmp	r1, #0
   14d1c:	add	r9, pc, r9
   14d20:	beq	14e0c <sf_gen_broadcast+0x270>
   14d24:	ldr	r5, [r3, #100]	; 0x64
   14d28:	cmn	r5, #1
   14d2c:	bne	14d44 <sf_gen_broadcast+0x1a8>
   14d30:	bl	1305c <alloc_reg>
   14d34:	ldr	r3, [pc, #2628]	; 15780 <sf_gen_broadcast+0xbe4>
   14d38:	mov	r5, r0
   14d3c:	add	r3, pc, r3
   14d40:	str	r0, [r3, #100]	; 0x64
   14d44:	ldr	r0, [r3, #92]	; 0x5c
   14d48:	mov	r7, r9
   14d4c:	ldr	r6, [r7, r0, lsl #3]!
   14d50:	cmp	r6, #19
   14d54:	bhi	14e50 <sf_gen_broadcast+0x2b4>
   14d58:	add	r4, r0, #1
   14d5c:	cmp	r0, #15
   14d60:	str	r4, [r3, #92]	; 0x5c
   14d64:	bge	1550c <sf_gen_broadcast+0x970>
   14d68:	mov	r0, #1024	; 0x400
   14d6c:	lsl	r6, r0, r4
   14d70:	mov	r0, r6
   14d74:	bl	e34 <malloc@plt>
   14d78:	cmp	r0, #0
   14d7c:	str	r0, [r7, #12]
   14d80:	beq	1550c <sf_gen_broadcast+0x970>
   14d84:	mov	r1, #0
   14d88:	mov	r2, r6
   14d8c:	add	r7, r7, #8
   14d90:	bl	ea0 <memset@plt>
   14d94:	str	r6, [r7]
   14d98:	cmp	r6, #19
   14d9c:	ldr	r3, [pc, #2528]	; 15784 <sf_gen_broadcast+0xbe8>
   14da0:	add	r3, pc, r3
   14da4:	bhi	14e54 <sf_gen_broadcast+0x2b8>
   14da8:	b	1550c <sf_gen_broadcast+0x970>
   14dac:	sub	r1, r0, #1
   14db0:	cmp	r1, #9
   14db4:	bhi	15020 <sf_gen_broadcast+0x484>
   14db8:	add	r0, pc, #4
   14dbc:	ldr	r1, [r0, r1, lsl #2]
   14dc0:	add	pc, r0, r1
   14dc4:	.word	0x00000028
   14dc8:	.word	0x00000264
   14dcc:	.word	0x00000264
   14dd0:	.word	0x00000264
   14dd4:	.word	0x00000264
   14dd8:	.word	0x00000050
   14ddc:	.word	0x00000070
   14de0:	.word	0x00000264
   14de4:	.word	0x00000264
   14de8:	.word	0x00000270
   14dec:	ldr	r1, [r5, #52]	; 0x34
   14df0:	ldr	r3, [pc, #2412]	; 15764 <sf_gen_broadcast+0xbc8>
   14df4:	mov	r0, #1
   14df8:	add	r3, pc, r3
   14dfc:	mov	r2, #6
   14e00:	sub	sp, fp, #28
   14e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e08:	b	1b00c <gen_bcmp>
   14e0c:	ldr	r4, [r3, #92]	; 0x5c
   14e10:	b	14ed8 <sf_gen_broadcast+0x33c>
   14e14:	ldr	r3, [pc, #2384]	; 1576c <sf_gen_broadcast+0xbd0>
   14e18:	mov	r0, #1
   14e1c:	mov	r1, #2
   14e20:	add	r3, pc, r3
   14e24:	mov	r2, #6
   14e28:	sub	sp, fp, #28
   14e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e30:	b	1b00c <gen_bcmp>
   14e34:	add	r3, r5, #1
   14e38:	mov	r0, #1
   14e3c:	mov	r1, #1
   14e40:	mov	r2, #1
   14e44:	sub	sp, fp, #28
   14e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e4c:	b	1b00c <gen_bcmp>
   14e50:	mov	r4, r0
   14e54:	sub	r0, r6, #20
   14e58:	mov	r1, #97	; 0x61
   14e5c:	str	r0, [r7]
   14e60:	ldr	r8, [r7, #4]
   14e64:	str	r1, [r8, r0]!
   14e68:	cmp	r8, #0
   14e6c:	str	r5, [r8, #12]
   14e70:	beq	14ed8 <sf_gen_broadcast+0x33c>
   14e74:	mov	r7, r9
   14e78:	ldr	r5, [r7, r4, lsl #3]!
   14e7c:	cmp	r5, #19
   14e80:	bhi	1514c <sf_gen_broadcast+0x5b0>
   14e84:	add	r9, r4, #1
   14e88:	cmp	r4, #15
   14e8c:	str	r9, [r3, #92]	; 0x5c
   14e90:	bge	1550c <sf_gen_broadcast+0x970>
   14e94:	mov	r0, #1024	; 0x400
   14e98:	lsl	r5, r0, r9
   14e9c:	mov	r0, r5
   14ea0:	bl	e34 <malloc@plt>
   14ea4:	cmp	r0, #0
   14ea8:	str	r0, [r7, #12]
   14eac:	beq	1550c <sf_gen_broadcast+0x970>
   14eb0:	mov	r1, #0
   14eb4:	mov	r2, r5
   14eb8:	add	r7, r7, #8
   14ebc:	bl	ea0 <memset@plt>
   14ec0:	str	r5, [r7]
   14ec4:	cmp	r5, #19
   14ec8:	ldr	r3, [pc, #2232]	; 15788 <sf_gen_broadcast+0xbec>
   14ecc:	add	r3, pc, r3
   14ed0:	bhi	15150 <sf_gen_broadcast+0x5b4>
   14ed4:	b	1550c <sf_gen_broadcast+0x970>
   14ed8:	mov	r6, r9
   14edc:	ldr	r5, [r6, r4, lsl #3]!
   14ee0:	cmp	r5, #19
   14ee4:	bhi	14f3c <sf_gen_broadcast+0x3a0>
   14ee8:	add	r9, r4, #1
   14eec:	cmp	r4, #15
   14ef0:	str	r9, [r3, #92]	; 0x5c
   14ef4:	bge	1550c <sf_gen_broadcast+0x970>
   14ef8:	mov	r0, #1024	; 0x400
   14efc:	lsl	r5, r0, r9
   14f00:	mov	r0, r5
   14f04:	bl	e34 <malloc@plt>
   14f08:	cmp	r0, #0
   14f0c:	str	r0, [r6, #12]
   14f10:	beq	1550c <sf_gen_broadcast+0x970>
   14f14:	mov	r1, #0
   14f18:	mov	r2, r5
   14f1c:	add	r6, r6, #8
   14f20:	bl	ea0 <memset@plt>
   14f24:	str	r5, [r6]
   14f28:	cmp	r5, #19
   14f2c:	ldr	r3, [pc, #2136]	; 1578c <sf_gen_broadcast+0xbf0>
   14f30:	add	r3, pc, r3
   14f34:	bhi	14f40 <sf_gen_broadcast+0x3a4>
   14f38:	b	1550c <sf_gen_broadcast+0x970>
   14f3c:	mov	r9, r4
   14f40:	sub	r0, r5, #20
   14f44:	mov	r1, #32
   14f48:	str	r0, [r6]
   14f4c:	ldr	r8, [r6, #4]
   14f50:	str	r1, [r8, r0]!
   14f54:	ldr	r0, [r3, #44]	; 0x2c
   14f58:	add	r0, r0, sl
   14f5c:	str	r0, [r8, #12]
   14f60:	ldr	r0, [sp, #12]
   14f64:	mvn	sl, r0
   14f68:	cmp	r0, #0
   14f6c:	beq	15190 <sf_gen_broadcast+0x5f4>
   14f70:	ldr	r4, [pc, #2076]	; 15794 <sf_gen_broadcast+0xbf8>
   14f74:	add	r4, pc, r4
   14f78:	ldr	r5, [r4, r9, lsl #3]!
   14f7c:	cmp	r5, #19
   14f80:	bhi	14fe0 <sf_gen_broadcast+0x444>
   14f84:	add	r7, r9, #1
   14f88:	cmp	r9, #15
   14f8c:	str	r7, [r3, #92]	; 0x5c
   14f90:	bge	1550c <sf_gen_broadcast+0x970>
   14f94:	mov	r0, #1024	; 0x400
   14f98:	lsl	r5, r0, r7
   14f9c:	mov	r0, r5
   14fa0:	bl	e34 <malloc@plt>
   14fa4:	str	r0, [r4, #12]
   14fa8:	cmp	r0, #0
   14fac:	ldr	r9, [pc, #2024]	; 1579c <sf_gen_broadcast+0xc00>
   14fb0:	add	r9, pc, r9
   14fb4:	beq	1550c <sf_gen_broadcast+0x970>
   14fb8:	mov	r1, #0
   14fbc:	mov	r2, r5
   14fc0:	add	r4, r4, #8
   14fc4:	bl	ea0 <memset@plt>
   14fc8:	str	r5, [r4]
   14fcc:	cmp	r5, #19
   14fd0:	ldr	r3, [pc, #1992]	; 157a0 <sf_gen_broadcast+0xc04>
   14fd4:	add	r3, pc, r3
   14fd8:	bhi	14fec <sf_gen_broadcast+0x450>
   14fdc:	b	1550c <sf_gen_broadcast+0x970>
   14fe0:	mov	r7, r9
   14fe4:	ldr	r9, [pc, #1964]	; 15798 <sf_gen_broadcast+0xbfc>
   14fe8:	add	r9, pc, r9
   14fec:	sub	r1, r5, #20
   14ff0:	mov	r2, #84	; 0x54
   14ff4:	str	r1, [r4]
   14ff8:	ldr	r0, [r4, #4]
   14ffc:	str	r2, [r0, r1]!
   15000:	mov	r2, r8
   15004:	str	sl, [r0, #12]
   15008:	mov	r1, r2
   1500c:	ldr	r2, [r2, #16]
   15010:	cmp	r2, #0
   15014:	bne	15008 <sf_gen_broadcast+0x46c>
   15018:	str	r0, [r1, #16]
   1501c:	b	1519c <sf_gen_broadcast+0x600>
   15020:	cmp	r0, #192	; 0xc0
   15024:	beq	14cc0 <sf_gen_broadcast+0x124>
   15028:	ldr	r0, [pc, #1860]	; 15774 <sf_gen_broadcast+0xbd8>
   1502c:	add	r0, pc, r0
   15030:	bl	214c <sf_bpf_error>
   15034:	ldr	r3, [pc, #1836]	; 15768 <sf_gen_broadcast+0xbcc>
   15038:	mov	r0, #1
   1503c:	mov	r1, #1
   15040:	add	r3, pc, r3
   15044:	mov	r2, #6
   15048:	sub	sp, fp, #28
   1504c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15050:	b	1b00c <gen_bcmp>
   15054:	ldrb	r0, [r5]
   15058:	cmp	r0, #1
   1505c:	bne	15740 <sf_gen_broadcast+0xba4>
   15060:	mov	r0, #1
   15064:	mov	r1, #4
   15068:	mov	r2, #8
   1506c:	mov	r3, #65280	; 0xff00
   15070:	bl	a0a4 <gen_cmp>
   15074:	mov	r4, r0
   15078:	ldr	r0, [r0, #44]	; 0x2c
   1507c:	mov	r2, #6
   15080:	clz	r0, r0
   15084:	lsr	r0, r0, #5
   15088:	str	r0, [r4, #44]	; 0x2c
   1508c:	mov	r0, #1
   15090:	ldr	r1, [r5, #52]	; 0x34
   15094:	ldr	r3, [pc, #1748]	; 15770 <sf_gen_broadcast+0xbd4>
   15098:	add	r3, pc, r3
   1509c:	bl	1b00c <gen_bcmp>
   150a0:	cmp	r4, #0
   150a4:	beq	150d8 <sf_gen_broadcast+0x53c>
   150a8:	ldr	r1, [r0, #96]	; 0x60
   150ac:	mov	r2, r4
   150b0:	ldr	r3, [r2, #44]	; 0x2c
   150b4:	add	r7, r2, #84	; 0x54
   150b8:	cmp	r3, #0
   150bc:	mov	r3, #84	; 0x54
   150c0:	movweq	r3, #60	; 0x3c
   150c4:	addeq	r7, r2, #60	; 0x3c
   150c8:	ldr	r2, [r2, r3]
   150cc:	str	r1, [r7]
   150d0:	cmp	r2, #0
   150d4:	bne	150b0 <sf_gen_broadcast+0x514>
   150d8:	ldr	r1, [r4, #44]	; 0x2c
   150dc:	cmp	r0, #0
   150e0:	clz	r1, r1
   150e4:	lsr	r1, r1, #5
   150e8:	str	r1, [r4, #44]	; 0x2c
   150ec:	ldr	r2, [r0, #44]	; 0x2c
   150f0:	clz	r1, r2
   150f4:	lsr	r1, r1, #5
   150f8:	str	r1, [r0, #44]	; 0x2c
   150fc:	str	r0, [sp, #16]
   15100:	beq	15718 <sf_gen_broadcast+0xb7c>
   15104:	cmp	r2, #0
   15108:	mov	r2, #60	; 0x3c
   1510c:	add	r1, r0, #60	; 0x3c
   15110:	movweq	r2, #84	; 0x54
   15114:	addeq	r1, r0, #84	; 0x54
   15118:	ldr	r2, [r0, r2]
   1511c:	cmp	r2, #0
   15120:	beq	1571c <sf_gen_broadcast+0xb80>
   15124:	ldr	r3, [r2, #44]	; 0x2c
   15128:	add	r1, r2, #84	; 0x54
   1512c:	cmp	r3, #0
   15130:	mov	r3, #84	; 0x54
   15134:	movweq	r3, #60	; 0x3c
   15138:	addeq	r1, r2, #60	; 0x3c
   1513c:	ldr	r2, [r2, r3]
   15140:	cmp	r2, #0
   15144:	bne	15124 <sf_gen_broadcast+0x588>
   15148:	b	1571c <sf_gen_broadcast+0xb80>
   1514c:	mov	r9, r4
   15150:	sub	r1, r5, #20
   15154:	mov	r2, #64	; 0x40
   15158:	str	r1, [r7]
   1515c:	ldr	r0, [r7, #4]
   15160:	str	r2, [r0, r1]!
   15164:	mov	r2, r8
   15168:	str	sl, [r0, #12]
   1516c:	mov	r1, r2
   15170:	ldr	r2, [r2, #16]
   15174:	cmp	r2, #0
   15178:	bne	1516c <sf_gen_broadcast+0x5d0>
   1517c:	str	r0, [r1, #16]
   15180:	ldr	r0, [sp, #12]
   15184:	mvn	sl, r0
   15188:	cmp	r0, #0
   1518c:	bne	14f70 <sf_gen_broadcast+0x3d4>
   15190:	mov	r7, r9
   15194:	ldr	r9, [pc, #1524]	; 15790 <sf_gen_broadcast+0xbf4>
   15198:	add	r9, pc, r9
   1519c:	mov	r6, r9
   151a0:	str	sl, [sp, #8]
   151a4:	ldr	r5, [r6, r7, lsl #3]!
   151a8:	cmp	r5, #207	; 0xcf
   151ac:	bhi	15204 <sf_gen_broadcast+0x668>
   151b0:	add	r4, r7, #1
   151b4:	cmp	r7, #15
   151b8:	str	r4, [r3, #92]	; 0x5c
   151bc:	bge	1550c <sf_gen_broadcast+0x970>
   151c0:	mov	r0, #1024	; 0x400
   151c4:	lsl	r5, r0, r4
   151c8:	mov	r0, r5
   151cc:	bl	e34 <malloc@plt>
   151d0:	cmp	r0, #0
   151d4:	str	r0, [r6, #12]
   151d8:	beq	1550c <sf_gen_broadcast+0x970>
   151dc:	mov	r1, #0
   151e0:	mov	r2, r5
   151e4:	add	r6, r6, #8
   151e8:	bl	ea0 <memset@plt>
   151ec:	str	r5, [r6]
   151f0:	cmp	r5, #207	; 0xcf
   151f4:	ldr	r3, [pc, #1448]	; 157a4 <sf_gen_broadcast+0xc08>
   151f8:	add	r3, pc, r3
   151fc:	bhi	15208 <sf_gen_broadcast+0x66c>
   15200:	b	1550c <sf_gen_broadcast+0x970>
   15204:	mov	r4, r7
   15208:	sub	r0, r5, #208	; 0xd0
   1520c:	str	r0, [r6]
   15210:	ldr	r1, [r6, #4]
   15214:	add	sl, r1, r0
   15218:	mov	r1, #0
   1521c:	mov	r0, #21
   15220:	str	r1, [sl, #20]
   15224:	str	r8, [sl, #4]
   15228:	str	r0, [sl, #8]
   1522c:	str	sl, [sl, #96]	; 0x60
   15230:	ldrb	r0, [r3, #16]
   15234:	ldr	r1, [r3, #48]	; 0x30
   15238:	add	r7, r1, #16
   1523c:	cmp	r0, #1
   15240:	bne	15374 <sf_gen_broadcast+0x7d8>
   15244:	ldr	r9, [r3, #100]	; 0x64
   15248:	cmn	r9, #1
   1524c:	bne	15268 <sf_gen_broadcast+0x6cc>
   15250:	bl	1305c <alloc_reg>
   15254:	ldr	r3, [pc, #1356]	; 157a8 <sf_gen_broadcast+0xc0c>
   15258:	mov	r9, r0
   1525c:	add	r3, pc, r3
   15260:	str	r0, [r3, #100]	; 0x64
   15264:	ldr	r4, [r3, #92]	; 0x5c
   15268:	str	r7, [sp]
   1526c:	ldr	r5, [pc, #1336]	; 157ac <sf_gen_broadcast+0xc10>
   15270:	add	r5, pc, r5
   15274:	ldr	r6, [r5, r4, lsl #3]!
   15278:	cmp	r6, #19
   1527c:	bhi	152d4 <sf_gen_broadcast+0x738>
   15280:	add	r7, r4, #1
   15284:	cmp	r4, #15
   15288:	str	r7, [r3, #92]	; 0x5c
   1528c:	bge	1550c <sf_gen_broadcast+0x970>
   15290:	mov	r0, #1024	; 0x400
   15294:	lsl	r6, r0, r7
   15298:	mov	r0, r6
   1529c:	bl	e34 <malloc@plt>
   152a0:	cmp	r0, #0
   152a4:	str	r0, [r5, #12]
   152a8:	beq	1550c <sf_gen_broadcast+0x970>
   152ac:	mov	r1, #0
   152b0:	mov	r2, r6
   152b4:	add	r5, r5, #8
   152b8:	bl	ea0 <memset@plt>
   152bc:	str	r6, [r5]
   152c0:	cmp	r6, #19
   152c4:	ldr	r3, [pc, #1252]	; 157b0 <sf_gen_broadcast+0xc14>
   152c8:	add	r3, pc, r3
   152cc:	bhi	152d8 <sf_gen_broadcast+0x73c>
   152d0:	b	1550c <sf_gen_broadcast+0x970>
   152d4:	mov	r7, r4
   152d8:	sub	r0, r6, #20
   152dc:	mov	r1, #97	; 0x61
   152e0:	str	r0, [r5]
   152e4:	ldr	r8, [r5, #4]
   152e8:	str	r1, [r8, r0]!
   152ec:	cmp	r8, #0
   152f0:	str	r9, [r8, #12]
   152f4:	beq	15364 <sf_gen_broadcast+0x7c8>
   152f8:	ldr	r4, [pc, #1208]	; 157b8 <sf_gen_broadcast+0xc1c>
   152fc:	add	r4, pc, r4
   15300:	ldr	r5, [r4, r7, lsl #3]!
   15304:	cmp	r5, #19
   15308:	bhi	15518 <sf_gen_broadcast+0x97c>
   1530c:	add	r9, r7, #1
   15310:	cmp	r7, #15
   15314:	str	r9, [r3, #92]	; 0x5c
   15318:	bge	1550c <sf_gen_broadcast+0x970>
   1531c:	mov	r0, #1024	; 0x400
   15320:	lsl	r5, r0, r9
   15324:	mov	r0, r5
   15328:	bl	e34 <malloc@plt>
   1532c:	ldr	r6, [sp]
   15330:	cmp	r0, #0
   15334:	str	r0, [r4, #12]
   15338:	beq	1550c <sf_gen_broadcast+0x970>
   1533c:	mov	r1, #0
   15340:	mov	r2, r5
   15344:	add	r4, r4, #8
   15348:	bl	ea0 <memset@plt>
   1534c:	str	r5, [r4]
   15350:	cmp	r5, #19
   15354:	ldr	r3, [pc, #1120]	; 157bc <sf_gen_broadcast+0xc20>
   15358:	add	r3, pc, r3
   1535c:	bhi	15520 <sf_gen_broadcast+0x984>
   15360:	b	1550c <sf_gen_broadcast+0x970>
   15364:	mov	r4, r7
   15368:	ldr	r7, [sp]
   1536c:	ldr	r9, [pc, #1088]	; 157b4 <sf_gen_broadcast+0xc18>
   15370:	add	r9, pc, r9
   15374:	mov	r6, r9
   15378:	ldr	r5, [r6, r4, lsl #3]!
   1537c:	cmp	r5, #19
   15380:	bhi	153d8 <sf_gen_broadcast+0x83c>
   15384:	add	r9, r4, #1
   15388:	cmp	r4, #15
   1538c:	str	r9, [r3, #92]	; 0x5c
   15390:	bge	1550c <sf_gen_broadcast+0x970>
   15394:	mov	r0, #1024	; 0x400
   15398:	lsl	r5, r0, r9
   1539c:	mov	r0, r5
   153a0:	bl	e34 <malloc@plt>
   153a4:	cmp	r0, #0
   153a8:	str	r0, [r6, #12]
   153ac:	beq	1550c <sf_gen_broadcast+0x970>
   153b0:	mov	r1, #0
   153b4:	mov	r2, r5
   153b8:	add	r6, r6, #8
   153bc:	bl	ea0 <memset@plt>
   153c0:	str	r5, [r6]
   153c4:	cmp	r5, #19
   153c8:	ldr	r3, [pc, #1008]	; 157c0 <sf_gen_broadcast+0xc24>
   153cc:	add	r3, pc, r3
   153d0:	bhi	153dc <sf_gen_broadcast+0x840>
   153d4:	b	1550c <sf_gen_broadcast+0x970>
   153d8:	mov	r9, r4
   153dc:	sub	r0, r5, #20
   153e0:	mov	r1, #32
   153e4:	str	r0, [r6]
   153e8:	ldr	r8, [r6, #4]
   153ec:	str	r1, [r8, r0]!
   153f0:	ldr	r0, [r3, #44]	; 0x2c
   153f4:	add	r0, r0, r7
   153f8:	str	r0, [r8, #12]
   153fc:	ldr	r0, [sp, #12]
   15400:	cmp	r0, #0
   15404:	beq	1555c <sf_gen_broadcast+0x9c0>
   15408:	ldr	r7, [pc, #952]	; 157c8 <sf_gen_broadcast+0xc2c>
   1540c:	add	r7, pc, r7
   15410:	ldr	r5, [r7, r9, lsl #3]!
   15414:	cmp	r5, #19
   15418:	bhi	15478 <sf_gen_broadcast+0x8dc>
   1541c:	add	r4, r9, #1
   15420:	cmp	r9, #15
   15424:	str	r4, [r3, #92]	; 0x5c
   15428:	bge	1550c <sf_gen_broadcast+0x970>
   1542c:	mov	r0, #1024	; 0x400
   15430:	lsl	r5, r0, r4
   15434:	mov	r0, r5
   15438:	bl	e34 <malloc@plt>
   1543c:	str	r0, [r7, #12]
   15440:	cmp	r0, #0
   15444:	ldr	r6, [pc, #900]	; 157d0 <sf_gen_broadcast+0xc34>
   15448:	add	r6, pc, r6
   1544c:	beq	1550c <sf_gen_broadcast+0x970>
   15450:	mov	r1, #0
   15454:	mov	r2, r5
   15458:	add	r7, r7, #8
   1545c:	bl	ea0 <memset@plt>
   15460:	str	r5, [r7]
   15464:	cmp	r5, #19
   15468:	ldr	r3, [pc, #868]	; 157d4 <sf_gen_broadcast+0xc38>
   1546c:	add	r3, pc, r3
   15470:	bhi	15484 <sf_gen_broadcast+0x8e8>
   15474:	b	1550c <sf_gen_broadcast+0x970>
   15478:	ldr	r6, [pc, #844]	; 157cc <sf_gen_broadcast+0xc30>
   1547c:	mov	r4, r9
   15480:	add	r6, pc, r6
   15484:	sub	r1, r5, #20
   15488:	mov	r2, #84	; 0x54
   1548c:	str	r1, [r7]
   15490:	ldr	r0, [r7, #4]
   15494:	str	r2, [r0, r1]!
   15498:	mov	r2, r8
   1549c:	ldr	r1, [sp, #8]
   154a0:	str	r1, [r0, #12]
   154a4:	mov	r1, r2
   154a8:	ldr	r2, [r2, #16]
   154ac:	cmp	r2, #0
   154b0:	bne	154a4 <sf_gen_broadcast+0x908>
   154b4:	str	r0, [r1, #16]
   154b8:	ldr	r5, [r6, r4, lsl #3]!
   154bc:	cmp	r5, #207	; 0xcf
   154c0:	bhi	15574 <sf_gen_broadcast+0x9d8>
   154c4:	add	r0, r4, #1
   154c8:	cmp	r4, #15
   154cc:	str	r0, [r3, #92]	; 0x5c
   154d0:	bge	1550c <sf_gen_broadcast+0x970>
   154d4:	mov	r1, #1024	; 0x400
   154d8:	lsl	r5, r1, r0
   154dc:	mov	r0, r5
   154e0:	bl	e34 <malloc@plt>
   154e4:	cmp	r0, #0
   154e8:	str	r0, [r6, #12]
   154ec:	beq	1550c <sf_gen_broadcast+0x970>
   154f0:	mov	r1, #0
   154f4:	mov	r2, r5
   154f8:	add	r6, r6, #8
   154fc:	bl	ea0 <memset@plt>
   15500:	cmp	r5, #207	; 0xcf
   15504:	str	r5, [r6]
   15508:	bhi	15574 <sf_gen_broadcast+0x9d8>
   1550c:	ldr	r0, [pc, #712]	; 157dc <sf_gen_broadcast+0xc40>
   15510:	add	r0, pc, r0
   15514:	bl	214c <sf_bpf_error>
   15518:	ldr	r6, [sp]
   1551c:	mov	r9, r7
   15520:	sub	r1, r5, #20
   15524:	mov	r2, #64	; 0x40
   15528:	str	r1, [r4]
   1552c:	ldr	r0, [r4, #4]
   15530:	str	r2, [r0, r1]!
   15534:	mov	r2, r8
   15538:	str	r6, [r0, #12]
   1553c:	mov	r1, r2
   15540:	ldr	r2, [r2, #16]
   15544:	cmp	r2, #0
   15548:	bne	1553c <sf_gen_broadcast+0x9a0>
   1554c:	str	r0, [r1, #16]
   15550:	ldr	r0, [sp, #12]
   15554:	cmp	r0, #0
   15558:	bne	15408 <sf_gen_broadcast+0x86c>
   1555c:	ldr	r6, [pc, #608]	; 157c4 <sf_gen_broadcast+0xc28>
   15560:	mov	r4, r9
   15564:	add	r6, pc, r6
   15568:	ldr	r5, [r6, r4, lsl #3]!
   1556c:	cmp	r5, #207	; 0xcf
   15570:	bls	154c4 <sf_gen_broadcast+0x928>
   15574:	sub	r0, r5, #208	; 0xd0
   15578:	ldr	r2, [sp, #8]
   1557c:	cmp	sl, #0
   15580:	str	r0, [r6]
   15584:	ldr	r1, [r6, #4]
   15588:	add	r0, r1, r0
   1558c:	mov	r1, #21
   15590:	str	r2, [r0, #20]
   15594:	str	r8, [r0, #4]
   15598:	str	r1, [r0, #8]
   1559c:	str	r0, [r0, #96]	; 0x60
   155a0:	ldr	r1, [sl, #44]	; 0x2c
   155a4:	clz	r1, r1
   155a8:	lsr	r1, r1, #5
   155ac:	str	r1, [sl, #44]	; 0x2c
   155b0:	beq	155f4 <sf_gen_broadcast+0xa58>
   155b4:	ldr	r2, [r0, #96]	; 0x60
   155b8:	ldr	r6, [sp, #4]
   155bc:	mov	r3, sl
   155c0:	cmp	r1, #0
   155c4:	mov	r1, #84	; 0x54
   155c8:	add	r7, r3, #84	; 0x54
   155cc:	movweq	r1, #60	; 0x3c
   155d0:	addeq	r7, r3, #60	; 0x3c
   155d4:	ldr	r3, [r3, r1]
   155d8:	str	r2, [r7]
   155dc:	cmp	r3, #0
   155e0:	beq	155ec <sf_gen_broadcast+0xa50>
   155e4:	ldr	r1, [r3, #44]	; 0x2c
   155e8:	b	155c0 <sf_gen_broadcast+0xa24>
   155ec:	ldr	r1, [sl, #44]	; 0x2c
   155f0:	b	155f8 <sf_gen_broadcast+0xa5c>
   155f4:	ldr	r6, [sp, #4]
   155f8:	clz	r1, r1
   155fc:	cmp	r0, #0
   15600:	lsr	r1, r1, #5
   15604:	str	r1, [sl, #44]	; 0x2c
   15608:	str	r0, [sp, #24]
   1560c:	beq	1563c <sf_gen_broadcast+0xaa0>
   15610:	mov	r2, r0
   15614:	ldr	r3, [r2, #44]	; 0x2c
   15618:	add	r1, r2, #84	; 0x54
   1561c:	cmp	r3, #0
   15620:	mov	r3, #84	; 0x54
   15624:	movweq	r3, #60	; 0x3c
   15628:	addeq	r1, r2, #60	; 0x3c
   1562c:	ldr	r2, [r2, r3]
   15630:	cmp	r2, #0
   15634:	bne	15614 <sf_gen_broadcast+0xa78>
   15638:	b	15640 <sf_gen_broadcast+0xaa4>
   1563c:	add	r1, sp, #24
   15640:	str	sl, [r1]
   15644:	cmp	r6, #0
   15648:	ldr	r1, [sl, #96]	; 0x60
   1564c:	str	r1, [r0, #96]	; 0x60
   15650:	beq	15680 <sf_gen_broadcast+0xae4>
   15654:	mov	r2, r6
   15658:	ldr	r3, [r2, #44]	; 0x2c
   1565c:	add	r7, r2, #84	; 0x54
   15660:	cmp	r3, #0
   15664:	mov	r3, #84	; 0x54
   15668:	movweq	r3, #60	; 0x3c
   1566c:	addeq	r7, r2, #60	; 0x3c
   15670:	ldr	r2, [r2, r3]
   15674:	str	r1, [r7]
   15678:	cmp	r2, #0
   1567c:	bne	15658 <sf_gen_broadcast+0xabc>
   15680:	ldr	r1, [r6, #44]	; 0x2c
   15684:	cmp	r0, #0
   15688:	clz	r1, r1
   1568c:	lsr	r1, r1, #5
   15690:	str	r1, [r6, #44]	; 0x2c
   15694:	ldr	r1, [r0, #44]	; 0x2c
   15698:	clz	r2, r1
   1569c:	lsr	r2, r2, #5
   156a0:	str	r2, [r0, #44]	; 0x2c
   156a4:	str	r0, [sp, #20]
   156a8:	beq	156f0 <sf_gen_broadcast+0xb54>
   156ac:	cmp	r1, #0
   156b0:	mov	r3, #60	; 0x3c
   156b4:	mov	r2, r0
   156b8:	movweq	r3, #84	; 0x54
   156bc:	ldr	r1, [r2, r3]!
   156c0:	cmp	r1, #0
   156c4:	beq	156f4 <sf_gen_broadcast+0xb58>
   156c8:	ldr	r3, [r1, #44]	; 0x2c
   156cc:	add	r2, r1, #84	; 0x54
   156d0:	cmp	r3, #0
   156d4:	mov	r3, #84	; 0x54
   156d8:	movweq	r3, #60	; 0x3c
   156dc:	addeq	r2, r1, #60	; 0x3c
   156e0:	ldr	r1, [r1, r3]
   156e4:	cmp	r1, #0
   156e8:	bne	156c8 <sf_gen_broadcast+0xb2c>
   156ec:	b	156f4 <sf_gen_broadcast+0xb58>
   156f0:	add	r2, sp, #20
   156f4:	str	r6, [r2]
   156f8:	ldr	r1, [r0, #44]	; 0x2c
   156fc:	clz	r1, r1
   15700:	lsr	r1, r1, #5
   15704:	str	r1, [r0, #44]	; 0x2c
   15708:	ldr	r1, [r6, #96]	; 0x60
   1570c:	str	r1, [r0, #96]	; 0x60
   15710:	sub	sp, fp, #28
   15714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15718:	add	r1, sp, #16
   1571c:	str	r4, [r1]
   15720:	ldr	r1, [r0, #44]	; 0x2c
   15724:	clz	r1, r1
   15728:	lsr	r1, r1, #5
   1572c:	str	r1, [r0, #44]	; 0x2c
   15730:	ldr	r1, [r4, #96]	; 0x60
   15734:	str	r1, [r0, #96]	; 0x60
   15738:	sub	sp, fp, #28
   1573c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15740:	ldr	r0, [pc, #16]	; 15758 <sf_gen_broadcast+0xbbc>
   15744:	add	r0, pc, r0
   15748:	bl	214c <sf_bpf_error>
   1574c:	ldr	r0, [pc, #132]	; 157d8 <sf_gen_broadcast+0xc3c>
   15750:	add	r0, pc, r0
   15754:	bl	214c <sf_bpf_error>
   15758:	.word	0x00013d86
   1575c:	.word	0x0003192c
   15760:	.word	0x00031404
   15764:	.word	0x000312d4
   15768:	.word	0x0003108c
   1576c:	.word	0x000312ac
   15770:	.word	0x00031034
   15774:	.word	0x00014456
   15778:	.word	0x00031800
   1577c:	.word	0x00031704
   15780:	.word	0x000317a4
   15784:	.word	0x00031740
   15788:	.word	0x00031614
   1578c:	.word	0x000315b0
   15790:	.word	0x00031288
   15794:	.word	0x000314ac
   15798:	.word	0x00031438
   1579c:	.word	0x00031470
   157a0:	.word	0x0003150c
   157a4:	.word	0x000312e8
   157a8:	.word	0x00031284
   157ac:	.word	0x000311b0
   157b0:	.word	0x00031218
   157b4:	.word	0x000310b0
   157b8:	.word	0x00031124
   157bc:	.word	0x00031188
   157c0:	.word	0x00031114
   157c4:	.word	0x00030ebc
   157c8:	.word	0x00031014
   157cc:	.word	0x00030fa0
   157d0:	.word	0x00030fd8
   157d4:	.word	0x00031074
   157d8:	.word	0x00013d47
   157dc:	.word	0x00014554

000157e0 <sf_gen_multicast>:
   157e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157e4:	add	fp, sp, #28
   157e8:	sub	sp, sp, #4
   157ec:	cmp	r0, #2
   157f0:	bcc	158d0 <sf_gen_multicast+0xf0>
   157f4:	beq	15b38 <sf_gen_multicast+0x358>
   157f8:	cmp	r0, #17
   157fc:	bne	164e8 <sf_gen_multicast+0xd08>
   15800:	movw	r0, #34525	; 0x86dd
   15804:	bl	6fb4 <gen_linktype>
   15808:	mov	r5, r0
   1580c:	mov	r0, #3
   15810:	mov	r1, #24
   15814:	mov	r2, #16
   15818:	mov	r3, #255	; 0xff
   1581c:	bl	a0a4 <gen_cmp>
   15820:	mov	r4, r0
   15824:	cmp	r5, #0
   15828:	beq	1585c <sf_gen_multicast+0x7c>
   1582c:	ldr	r0, [r4, #96]	; 0x60
   15830:	mov	r1, r5
   15834:	ldr	r2, [r1, #44]	; 0x2c
   15838:	add	r3, r1, #84	; 0x54
   1583c:	cmp	r2, #0
   15840:	mov	r2, #84	; 0x54
   15844:	movweq	r2, #60	; 0x3c
   15848:	addeq	r3, r1, #60	; 0x3c
   1584c:	ldr	r1, [r1, r2]
   15850:	str	r0, [r3]
   15854:	cmp	r1, #0
   15858:	bne	15834 <sf_gen_multicast+0x54>
   1585c:	ldr	r0, [r5, #44]	; 0x2c
   15860:	cmp	r4, #0
   15864:	clz	r0, r0
   15868:	lsr	r0, r0, #5
   1586c:	str	r0, [r5, #44]	; 0x2c
   15870:	ldr	r1, [r4, #44]	; 0x2c
   15874:	clz	r0, r1
   15878:	lsr	r0, r0, #5
   1587c:	str	r0, [r4, #44]	; 0x2c
   15880:	str	r4, [sp]
   15884:	beq	164ac <sf_gen_multicast+0xccc>
   15888:	cmp	r1, #0
   1588c:	mov	r1, #60	; 0x3c
   15890:	add	r0, r4, #60	; 0x3c
   15894:	movweq	r1, #84	; 0x54
   15898:	addeq	r0, r4, #84	; 0x54
   1589c:	ldr	r1, [r4, r1]
   158a0:	cmp	r1, #0
   158a4:	beq	164b0 <sf_gen_multicast+0xcd0>
   158a8:	ldr	r2, [r1, #44]	; 0x2c
   158ac:	add	r0, r1, #84	; 0x54
   158b0:	cmp	r2, #0
   158b4:	mov	r2, #84	; 0x54
   158b8:	movweq	r2, #60	; 0x3c
   158bc:	addeq	r0, r1, #60	; 0x3c
   158c0:	ldr	r1, [r1, r2]
   158c4:	cmp	r1, #0
   158c8:	bne	158a8 <sf_gen_multicast+0xc8>
   158cc:	b	164b0 <sf_gen_multicast+0xcd0>
   158d0:	ldr	r8, [pc, #3112]	; 16500 <sf_gen_multicast+0xd20>
   158d4:	add	r8, pc, r8
   158d8:	ldr	r0, [r8, #36]	; 0x24
   158dc:	sub	r1, r0, #105	; 0x69
   158e0:	cmp	r1, #58	; 0x3a
   158e4:	bhi	15c08 <sf_gen_multicast+0x428>
   158e8:	add	r0, pc, #4
   158ec:	ldr	r1, [r0, r1, lsl #2]
   158f0:	add	pc, r0, r1
   158f4:	.word	0x000000ec
   158f8:	.word	0x00000bf4
   158fc:	.word	0x00000bf4
   15900:	.word	0x00000bf4
   15904:	.word	0x00000bf4
   15908:	.word	0x00000bf4
   1590c:	.word	0x00000bf4
   15910:	.word	0x00000bf4
   15914:	.word	0x00000bf4
   15918:	.word	0x00000bf4
   1591c:	.word	0x00000bf4
   15920:	.word	0x00000bf4
   15924:	.word	0x00000bf4
   15928:	.word	0x00000bf4
   1592c:	.word	0x000000ec
   15930:	.word	0x00000bf4
   15934:	.word	0x00000bf4
   15938:	.word	0x00000364
   1593c:	.word	0x00000acc
   15940:	.word	0x00000bf4
   15944:	.word	0x00000bf4
   15948:	.word	0x00000bf4
   1594c:	.word	0x000000ec
   15950:	.word	0x00000bf4
   15954:	.word	0x00000374
   15958:	.word	0x00000bf4
   1595c:	.word	0x00000bf4
   15960:	.word	0x00000bf4
   15964:	.word	0x00000bf4
   15968:	.word	0x00000bf4
   1596c:	.word	0x00000bf4
   15970:	.word	0x00000bf4
   15974:	.word	0x00000bf4
   15978:	.word	0x00000bf4
   1597c:	.word	0x00000bf4
   15980:	.word	0x00000bf4
   15984:	.word	0x00000bf4
   15988:	.word	0x00000bf4
   1598c:	.word	0x00000bf4
   15990:	.word	0x00000bf4
   15994:	.word	0x00000bf4
   15998:	.word	0x00000bf4
   1599c:	.word	0x00000bf4
   159a0:	.word	0x00000bf4
   159a4:	.word	0x00000bf4
   159a8:	.word	0x00000bf4
   159ac:	.word	0x00000bf4
   159b0:	.word	0x00000bf4
   159b4:	.word	0x00000bf4
   159b8:	.word	0x00000bf4
   159bc:	.word	0x00000bf4
   159c0:	.word	0x00000bf4
   159c4:	.word	0x00000bf4
   159c8:	.word	0x00000bf4
   159cc:	.word	0x00000bf4
   159d0:	.word	0x00000bf4
   159d4:	.word	0x00000bf4
   159d8:	.word	0x00000bf4
   159dc:	.word	0x000000ec
   159e0:	mov	r0, #1
   159e4:	mov	r1, #1
   159e8:	mov	r2, #16
   159ec:	mov	r6, #1
   159f0:	bl	165d8 <gen_load_a>
   159f4:	mov	r4, r0
   159f8:	ldr	r0, [r8, #92]	; 0x5c
   159fc:	ldr	sl, [pc, #2816]	; 16504 <sf_gen_multicast+0xd24>
   15a00:	add	sl, pc, sl
   15a04:	mov	r7, sl
   15a08:	ldr	r5, [r7, r0, lsl #3]!
   15a0c:	cmp	r5, #207	; 0xcf
   15a10:	bhi	15a5c <sf_gen_multicast+0x27c>
   15a14:	add	r1, r0, #1
   15a18:	cmp	r0, #15
   15a1c:	str	r1, [r8, #92]	; 0x5c
   15a20:	bge	164f4 <sf_gen_multicast+0xd14>
   15a24:	mov	r0, #1024	; 0x400
   15a28:	lsl	r5, r0, r1
   15a2c:	mov	r0, r5
   15a30:	bl	e34 <malloc@plt>
   15a34:	cmp	r0, #0
   15a38:	str	r0, [r7, #12]
   15a3c:	beq	164f4 <sf_gen_multicast+0xd14>
   15a40:	mov	r1, #0
   15a44:	mov	r2, r5
   15a48:	add	r7, r7, #8
   15a4c:	bl	ea0 <memset@plt>
   15a50:	cmp	r5, #207	; 0xcf
   15a54:	str	r5, [r7]
   15a58:	bls	164f4 <sf_gen_multicast+0xd14>
   15a5c:	sub	r0, r5, #208	; 0xd0
   15a60:	str	r0, [r7]
   15a64:	ldr	r1, [r7, #4]
   15a68:	add	r5, r1, r0
   15a6c:	mov	r0, #69	; 0x45
   15a70:	str	r6, [r5, #20]
   15a74:	str	r4, [r5, #4]
   15a78:	str	r0, [r5, #8]
   15a7c:	mov	r0, #16
   15a80:	str	r5, [r5, #96]	; 0x60
   15a84:	bl	16510 <gen_mac_multicast>
   15a88:	mov	r4, r0
   15a8c:	cmp	r5, #0
   15a90:	beq	15ac4 <sf_gen_multicast+0x2e4>
   15a94:	ldr	r0, [r4, #96]	; 0x60
   15a98:	mov	r1, r5
   15a9c:	ldr	r2, [r1, #44]	; 0x2c
   15aa0:	add	r3, r1, #84	; 0x54
   15aa4:	cmp	r2, #0
   15aa8:	mov	r2, #84	; 0x54
   15aac:	movweq	r2, #60	; 0x3c
   15ab0:	addeq	r3, r1, #60	; 0x3c
   15ab4:	ldr	r1, [r1, r2]
   15ab8:	str	r0, [r3]
   15abc:	cmp	r1, #0
   15ac0:	bne	15a9c <sf_gen_multicast+0x2bc>
   15ac4:	ldr	r0, [r5, #44]	; 0x2c
   15ac8:	cmp	r4, #0
   15acc:	clz	r0, r0
   15ad0:	lsr	r0, r0, #5
   15ad4:	str	r0, [r5, #44]	; 0x2c
   15ad8:	ldr	r1, [r4, #44]	; 0x2c
   15adc:	clz	r0, r1
   15ae0:	lsr	r0, r0, #5
   15ae4:	str	r0, [r4, #44]	; 0x2c
   15ae8:	str	r4, [sp]
   15aec:	beq	15c84 <sf_gen_multicast+0x4a4>
   15af0:	cmp	r1, #0
   15af4:	mov	r1, #60	; 0x3c
   15af8:	add	r0, r4, #60	; 0x3c
   15afc:	movweq	r1, #84	; 0x54
   15b00:	addeq	r0, r4, #84	; 0x54
   15b04:	ldr	r1, [r4, r1]
   15b08:	cmp	r1, #0
   15b0c:	beq	15c88 <sf_gen_multicast+0x4a8>
   15b10:	ldr	r2, [r1, #44]	; 0x2c
   15b14:	add	r0, r1, #84	; 0x54
   15b18:	cmp	r2, #0
   15b1c:	mov	r2, #84	; 0x54
   15b20:	movweq	r2, #60	; 0x3c
   15b24:	addeq	r0, r1, #60	; 0x3c
   15b28:	ldr	r1, [r1, r2]
   15b2c:	cmp	r1, #0
   15b30:	bne	15b10 <sf_gen_multicast+0x330>
   15b34:	b	15c88 <sf_gen_multicast+0x4a8>
   15b38:	mov	r0, #2048	; 0x800
   15b3c:	bl	6fb4 <gen_linktype>
   15b40:	mov	r5, r0
   15b44:	mov	r0, #3
   15b48:	mov	r1, #16
   15b4c:	mov	r2, #16
   15b50:	mov	r3, #224	; 0xe0
   15b54:	bl	1698c <gen_cmp_ge>
   15b58:	mov	r4, r0
   15b5c:	cmp	r5, #0
   15b60:	beq	15b94 <sf_gen_multicast+0x3b4>
   15b64:	ldr	r0, [r4, #96]	; 0x60
   15b68:	mov	r1, r5
   15b6c:	ldr	r2, [r1, #44]	; 0x2c
   15b70:	add	r3, r1, #84	; 0x54
   15b74:	cmp	r2, #0
   15b78:	mov	r2, #84	; 0x54
   15b7c:	movweq	r2, #60	; 0x3c
   15b80:	addeq	r3, r1, #60	; 0x3c
   15b84:	ldr	r1, [r1, r2]
   15b88:	str	r0, [r3]
   15b8c:	cmp	r1, #0
   15b90:	bne	15b6c <sf_gen_multicast+0x38c>
   15b94:	ldr	r0, [r5, #44]	; 0x2c
   15b98:	cmp	r4, #0
   15b9c:	clz	r0, r0
   15ba0:	lsr	r0, r0, #5
   15ba4:	str	r0, [r5, #44]	; 0x2c
   15ba8:	ldr	r1, [r4, #44]	; 0x2c
   15bac:	clz	r0, r1
   15bb0:	lsr	r0, r0, #5
   15bb4:	str	r0, [r4, #44]	; 0x2c
   15bb8:	str	r4, [sp]
   15bbc:	beq	164ac <sf_gen_multicast+0xccc>
   15bc0:	cmp	r1, #0
   15bc4:	mov	r1, #60	; 0x3c
   15bc8:	add	r0, r4, #60	; 0x3c
   15bcc:	movweq	r1, #84	; 0x54
   15bd0:	addeq	r0, r4, #84	; 0x54
   15bd4:	ldr	r1, [r4, r1]
   15bd8:	cmp	r1, #0
   15bdc:	beq	164b0 <sf_gen_multicast+0xcd0>
   15be0:	ldr	r2, [r1, #44]	; 0x2c
   15be4:	add	r0, r1, #84	; 0x54
   15be8:	cmp	r2, #0
   15bec:	mov	r2, #84	; 0x54
   15bf0:	movweq	r2, #60	; 0x3c
   15bf4:	addeq	r0, r1, #60	; 0x3c
   15bf8:	ldr	r1, [r1, r2]
   15bfc:	cmp	r1, #0
   15c00:	bne	15be0 <sf_gen_multicast+0x400>
   15c04:	b	164b0 <sf_gen_multicast+0xcd0>
   15c08:	sub	r1, r0, #1
   15c0c:	cmp	r1, #9
   15c10:	bhi	163b4 <sf_gen_multicast+0xbd4>
   15c14:	add	r0, pc, #4
   15c18:	ldr	r1, [r0, r1, lsl #2]
   15c1c:	add	pc, r0, r1
   15c20:	.word	0x00000028
   15c24:	.word	0x000008c8
   15c28:	.word	0x000008c8
   15c2c:	.word	0x000008c8
   15c30:	.word	0x000008c8
   15c34:	.word	0x00000038
   15c38:	.word	0x00000048
   15c3c:	.word	0x000008c8
   15c40:	.word	0x000008c8
   15c44:	.word	0x000008b8
   15c48:	mov	r0, #0
   15c4c:	sub	sp, fp, #28
   15c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c54:	b	16510 <gen_mac_multicast>
   15c58:	mov	r0, #2
   15c5c:	sub	sp, fp, #28
   15c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c64:	b	16510 <gen_mac_multicast>
   15c68:	add	r3, r8, #1
   15c6c:	mov	r0, #1
   15c70:	mov	r1, #1
   15c74:	mov	r2, #1
   15c78:	sub	sp, fp, #28
   15c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c80:	b	1b00c <gen_bcmp>
   15c84:	mov	r0, sp
   15c88:	str	r5, [r0]
   15c8c:	mov	r1, #1
   15c90:	mov	r2, #16
   15c94:	mov	r9, #1
   15c98:	ldr	r0, [r4, #44]	; 0x2c
   15c9c:	clz	r0, r0
   15ca0:	lsr	r0, r0, #5
   15ca4:	str	r0, [r4, #44]	; 0x2c
   15ca8:	ldr	r0, [r5, #96]	; 0x60
   15cac:	str	r0, [r4, #96]	; 0x60
   15cb0:	mov	r0, #1
   15cb4:	bl	165d8 <gen_load_a>
   15cb8:	mov	r5, r0
   15cbc:	ldr	r0, [r8, #92]	; 0x5c
   15cc0:	mov	r7, sl
   15cc4:	ldr	r6, [r7, r0, lsl #3]!
   15cc8:	cmp	r6, #207	; 0xcf
   15ccc:	bhi	15d18 <sf_gen_multicast+0x538>
   15cd0:	add	r1, r0, #1
   15cd4:	cmp	r0, #15
   15cd8:	str	r1, [r8, #92]	; 0x5c
   15cdc:	bge	164f4 <sf_gen_multicast+0xd14>
   15ce0:	mov	r0, #1024	; 0x400
   15ce4:	lsl	r6, r0, r1
   15ce8:	mov	r0, r6
   15cec:	bl	e34 <malloc@plt>
   15cf0:	cmp	r0, #0
   15cf4:	str	r0, [r7, #12]
   15cf8:	beq	164f4 <sf_gen_multicast+0xd14>
   15cfc:	mov	r1, #0
   15d00:	mov	r2, r6
   15d04:	add	r7, r7, #8
   15d08:	bl	ea0 <memset@plt>
   15d0c:	cmp	r6, #207	; 0xcf
   15d10:	str	r6, [r7]
   15d14:	bls	164f4 <sf_gen_multicast+0xd14>
   15d18:	sub	r0, r6, #208	; 0xd0
   15d1c:	str	r0, [r7]
   15d20:	ldr	r1, [r7, #4]
   15d24:	add	r6, r1, r0
   15d28:	mov	r0, #69	; 0x45
   15d2c:	str	r9, [r6, #20]
   15d30:	str	r5, [r6, #4]
   15d34:	str	r0, [r6, #8]
   15d38:	ldr	r0, [r6, #44]	; 0x2c
   15d3c:	clz	r0, r0
   15d40:	lsr	r0, r0, #5
   15d44:	str	r0, [r6, #44]	; 0x2c
   15d48:	mov	r0, #4
   15d4c:	str	r6, [r6, #96]	; 0x60
   15d50:	bl	16510 <gen_mac_multicast>
   15d54:	cmp	r6, #0
   15d58:	beq	15d8c <sf_gen_multicast+0x5ac>
   15d5c:	ldr	r1, [r0, #96]	; 0x60
   15d60:	mov	r2, r6
   15d64:	ldr	r3, [r2, #44]	; 0x2c
   15d68:	add	r7, r2, #84	; 0x54
   15d6c:	cmp	r3, #0
   15d70:	mov	r3, #84	; 0x54
   15d74:	movweq	r3, #60	; 0x3c
   15d78:	addeq	r7, r2, #60	; 0x3c
   15d7c:	ldr	r2, [r2, r3]
   15d80:	str	r1, [r7]
   15d84:	cmp	r2, #0
   15d88:	bne	15d64 <sf_gen_multicast+0x584>
   15d8c:	ldr	r1, [r6, #44]	; 0x2c
   15d90:	cmp	r0, #0
   15d94:	clz	r1, r1
   15d98:	lsr	r1, r1, #5
   15d9c:	str	r1, [r6, #44]	; 0x2c
   15da0:	ldr	r2, [r0, #44]	; 0x2c
   15da4:	clz	r1, r2
   15da8:	lsr	r1, r1, #5
   15dac:	str	r1, [r0, #44]	; 0x2c
   15db0:	str	r0, [sp]
   15db4:	beq	15e00 <sf_gen_multicast+0x620>
   15db8:	cmp	r2, #0
   15dbc:	mov	r2, #60	; 0x3c
   15dc0:	add	r1, r0, #60	; 0x3c
   15dc4:	movweq	r2, #84	; 0x54
   15dc8:	addeq	r1, r0, #84	; 0x54
   15dcc:	ldr	r2, [r0, r2]
   15dd0:	cmp	r2, #0
   15dd4:	beq	15e04 <sf_gen_multicast+0x624>
   15dd8:	ldr	r3, [r2, #44]	; 0x2c
   15ddc:	add	r1, r2, #84	; 0x54
   15de0:	cmp	r3, #0
   15de4:	mov	r3, #84	; 0x54
   15de8:	movweq	r3, #60	; 0x3c
   15dec:	addeq	r1, r2, #60	; 0x3c
   15df0:	ldr	r2, [r2, r3]
   15df4:	cmp	r2, #0
   15df8:	bne	15dd8 <sf_gen_multicast+0x5f8>
   15dfc:	b	15e04 <sf_gen_multicast+0x624>
   15e00:	mov	r1, sp
   15e04:	str	r6, [r1]
   15e08:	ldr	r1, [r0, #44]	; 0x2c
   15e0c:	clz	r2, r1
   15e10:	cmp	r1, #0
   15e14:	lsr	r2, r2, #5
   15e18:	movwne	r1, #1
   15e1c:	cmp	r0, #0
   15e20:	str	r2, [r0, #44]	; 0x2c
   15e24:	ldr	r2, [r6, #96]	; 0x60
   15e28:	str	r1, [r0, #44]	; 0x2c
   15e2c:	str	r2, [r0, #96]	; 0x60
   15e30:	beq	15e6c <sf_gen_multicast+0x68c>
   15e34:	ldr	r2, [r4, #96]	; 0x60
   15e38:	mov	r3, r0
   15e3c:	cmp	r1, #0
   15e40:	mov	r1, #84	; 0x54
   15e44:	add	r7, r3, #84	; 0x54
   15e48:	movweq	r1, #60	; 0x3c
   15e4c:	addeq	r7, r3, #60	; 0x3c
   15e50:	ldr	r3, [r3, r1]
   15e54:	str	r2, [r7]
   15e58:	cmp	r3, #0
   15e5c:	beq	15e68 <sf_gen_multicast+0x688>
   15e60:	ldr	r1, [r3, #44]	; 0x2c
   15e64:	b	15e3c <sf_gen_multicast+0x65c>
   15e68:	ldr	r1, [r0, #44]	; 0x2c
   15e6c:	clz	r1, r1
   15e70:	cmp	r4, #0
   15e74:	lsr	r1, r1, #5
   15e78:	str	r1, [r0, #44]	; 0x2c
   15e7c:	str	r4, [sp]
   15e80:	beq	15eb0 <sf_gen_multicast+0x6d0>
   15e84:	mov	r2, r4
   15e88:	ldr	r3, [r2, #44]	; 0x2c
   15e8c:	add	r1, r2, #84	; 0x54
   15e90:	cmp	r3, #0
   15e94:	mov	r3, #84	; 0x54
   15e98:	movweq	r3, #60	; 0x3c
   15e9c:	addeq	r1, r2, #60	; 0x3c
   15ea0:	ldr	r2, [r2, r3]
   15ea4:	cmp	r2, #0
   15ea8:	bne	15e88 <sf_gen_multicast+0x6a8>
   15eac:	b	15eb4 <sf_gen_multicast+0x6d4>
   15eb0:	mov	r1, sp
   15eb4:	str	r0, [r1]
   15eb8:	mov	r1, #0
   15ebc:	mov	r2, #16
   15ec0:	ldr	r0, [r0, #96]	; 0x60
   15ec4:	str	r0, [r4, #96]	; 0x60
   15ec8:	mov	r0, #1
   15ecc:	bl	165d8 <gen_load_a>
   15ed0:	mov	r5, r0
   15ed4:	ldr	r0, [r8, #92]	; 0x5c
   15ed8:	mov	r7, sl
   15edc:	ldr	r6, [r7, r0, lsl #3]!
   15ee0:	cmp	r6, #207	; 0xcf
   15ee4:	bhi	15f30 <sf_gen_multicast+0x750>
   15ee8:	add	r1, r0, #1
   15eec:	cmp	r0, #15
   15ef0:	str	r1, [r8, #92]	; 0x5c
   15ef4:	bge	164f4 <sf_gen_multicast+0xd14>
   15ef8:	mov	r0, #1024	; 0x400
   15efc:	lsl	r6, r0, r1
   15f00:	mov	r0, r6
   15f04:	bl	e34 <malloc@plt>
   15f08:	cmp	r0, #0
   15f0c:	str	r0, [r7, #12]
   15f10:	beq	164f4 <sf_gen_multicast+0xd14>
   15f14:	mov	r1, #0
   15f18:	mov	r2, r6
   15f1c:	add	r7, r7, #8
   15f20:	bl	ea0 <memset@plt>
   15f24:	cmp	r6, #207	; 0xcf
   15f28:	str	r6, [r7]
   15f2c:	bls	164f4 <sf_gen_multicast+0xd14>
   15f30:	sub	r0, r6, #208	; 0xd0
   15f34:	mov	r2, #8
   15f38:	str	r0, [r7]
   15f3c:	ldr	r1, [r7, #4]
   15f40:	adds	r0, r1, r0
   15f44:	mov	r1, #69	; 0x45
   15f48:	str	r2, [r0, #20]
   15f4c:	str	r5, [r0, #4]
   15f50:	str	r1, [r0, #8]
   15f54:	str	r0, [r0, #96]	; 0x60
   15f58:	beq	15f8c <sf_gen_multicast+0x7ac>
   15f5c:	ldr	r1, [r4, #96]	; 0x60
   15f60:	mov	r2, r0
   15f64:	ldr	r3, [r2, #44]	; 0x2c
   15f68:	add	r7, r2, #84	; 0x54
   15f6c:	cmp	r3, #0
   15f70:	mov	r3, #84	; 0x54
   15f74:	movweq	r3, #60	; 0x3c
   15f78:	addeq	r7, r2, #60	; 0x3c
   15f7c:	ldr	r2, [r2, r3]
   15f80:	str	r1, [r7]
   15f84:	cmp	r2, #0
   15f88:	bne	15f64 <sf_gen_multicast+0x784>
   15f8c:	ldr	r1, [r0, #44]	; 0x2c
   15f90:	cmp	r4, #0
   15f94:	clz	r1, r1
   15f98:	lsr	r1, r1, #5
   15f9c:	str	r1, [r0, #44]	; 0x2c
   15fa0:	ldr	r2, [r4, #44]	; 0x2c
   15fa4:	clz	r1, r2
   15fa8:	lsr	r1, r1, #5
   15fac:	str	r1, [r4, #44]	; 0x2c
   15fb0:	str	r4, [sp]
   15fb4:	beq	16000 <sf_gen_multicast+0x820>
   15fb8:	cmp	r2, #0
   15fbc:	mov	r2, #60	; 0x3c
   15fc0:	add	r1, r4, #60	; 0x3c
   15fc4:	movweq	r2, #84	; 0x54
   15fc8:	addeq	r1, r4, #84	; 0x54
   15fcc:	ldr	r2, [r4, r2]
   15fd0:	cmp	r2, #0
   15fd4:	beq	16004 <sf_gen_multicast+0x824>
   15fd8:	ldr	r3, [r2, #44]	; 0x2c
   15fdc:	add	r1, r2, #84	; 0x54
   15fe0:	cmp	r3, #0
   15fe4:	mov	r3, #84	; 0x54
   15fe8:	movweq	r3, #60	; 0x3c
   15fec:	addeq	r1, r2, #60	; 0x3c
   15ff0:	ldr	r2, [r2, r3]
   15ff4:	cmp	r2, #0
   15ff8:	bne	15fd8 <sf_gen_multicast+0x7f8>
   15ffc:	b	16004 <sf_gen_multicast+0x824>
   16000:	mov	r1, sp
   16004:	str	r0, [r1]
   16008:	mov	r2, #16
   1600c:	ldr	r1, [r4, #44]	; 0x2c
   16010:	clz	r1, r1
   16014:	lsr	r1, r1, #5
   16018:	str	r1, [r4, #44]	; 0x2c
   1601c:	mov	r1, #0
   16020:	ldr	r0, [r0, #96]	; 0x60
   16024:	str	r0, [r4, #96]	; 0x60
   16028:	mov	r0, #1
   1602c:	bl	165d8 <gen_load_a>
   16030:	mov	r5, r0
   16034:	ldr	r0, [r8, #92]	; 0x5c
   16038:	mov	r7, sl
   1603c:	ldr	r6, [r7, r0, lsl #3]!
   16040:	cmp	r6, #207	; 0xcf
   16044:	bhi	16090 <sf_gen_multicast+0x8b0>
   16048:	add	r1, r0, #1
   1604c:	cmp	r0, #15
   16050:	str	r1, [r8, #92]	; 0x5c
   16054:	bge	164f4 <sf_gen_multicast+0xd14>
   16058:	mov	r0, #1024	; 0x400
   1605c:	lsl	r6, r0, r1
   16060:	mov	r0, r6
   16064:	bl	e34 <malloc@plt>
   16068:	cmp	r0, #0
   1606c:	str	r0, [r7, #12]
   16070:	beq	164f4 <sf_gen_multicast+0xd14>
   16074:	mov	r1, #0
   16078:	mov	r2, r6
   1607c:	add	r7, r7, #8
   16080:	bl	ea0 <memset@plt>
   16084:	cmp	r6, #207	; 0xcf
   16088:	str	r6, [r7]
   1608c:	bls	164f4 <sf_gen_multicast+0xd14>
   16090:	sub	r0, r6, #208	; 0xd0
   16094:	str	r0, [r7]
   16098:	ldr	r1, [r7, #4]
   1609c:	add	r6, r1, r0
   160a0:	mov	r1, #8
   160a4:	mov	r0, #69	; 0x45
   160a8:	str	r1, [r6, #20]
   160ac:	str	r5, [r6, #4]
   160b0:	str	r0, [r6, #8]
   160b4:	ldr	r0, [r6, #44]	; 0x2c
   160b8:	clz	r0, r0
   160bc:	lsr	r0, r0, #5
   160c0:	str	r0, [r6, #44]	; 0x2c
   160c4:	mov	r0, #4
   160c8:	str	r6, [r6, #96]	; 0x60
   160cc:	bl	16510 <gen_mac_multicast>
   160d0:	cmp	r6, #0
   160d4:	beq	16108 <sf_gen_multicast+0x928>
   160d8:	ldr	r1, [r0, #96]	; 0x60
   160dc:	mov	r2, r6
   160e0:	ldr	r3, [r2, #44]	; 0x2c
   160e4:	add	r7, r2, #84	; 0x54
   160e8:	cmp	r3, #0
   160ec:	mov	r3, #84	; 0x54
   160f0:	movweq	r3, #60	; 0x3c
   160f4:	addeq	r7, r2, #60	; 0x3c
   160f8:	ldr	r2, [r2, r3]
   160fc:	str	r1, [r7]
   16100:	cmp	r2, #0
   16104:	bne	160e0 <sf_gen_multicast+0x900>
   16108:	ldr	r1, [r6, #44]	; 0x2c
   1610c:	cmp	r0, #0
   16110:	clz	r1, r1
   16114:	lsr	r1, r1, #5
   16118:	str	r1, [r6, #44]	; 0x2c
   1611c:	ldr	r2, [r0, #44]	; 0x2c
   16120:	clz	r1, r2
   16124:	lsr	r1, r1, #5
   16128:	str	r1, [r0, #44]	; 0x2c
   1612c:	str	r0, [sp]
   16130:	beq	1617c <sf_gen_multicast+0x99c>
   16134:	cmp	r2, #0
   16138:	mov	r2, #60	; 0x3c
   1613c:	add	r1, r0, #60	; 0x3c
   16140:	movweq	r2, #84	; 0x54
   16144:	addeq	r1, r0, #84	; 0x54
   16148:	ldr	r2, [r0, r2]
   1614c:	cmp	r2, #0
   16150:	beq	16180 <sf_gen_multicast+0x9a0>
   16154:	ldr	r3, [r2, #44]	; 0x2c
   16158:	add	r1, r2, #84	; 0x54
   1615c:	cmp	r3, #0
   16160:	mov	r3, #84	; 0x54
   16164:	movweq	r3, #60	; 0x3c
   16168:	addeq	r1, r2, #60	; 0x3c
   1616c:	ldr	r2, [r2, r3]
   16170:	cmp	r2, #0
   16174:	bne	16154 <sf_gen_multicast+0x974>
   16178:	b	16180 <sf_gen_multicast+0x9a0>
   1617c:	mov	r1, sp
   16180:	str	r6, [r1]
   16184:	ldr	r1, [r0, #44]	; 0x2c
   16188:	clz	r2, r1
   1618c:	cmp	r1, #0
   16190:	lsr	r2, r2, #5
   16194:	movwne	r1, #1
   16198:	cmp	r0, #0
   1619c:	str	r2, [r0, #44]	; 0x2c
   161a0:	ldr	r2, [r6, #96]	; 0x60
   161a4:	str	r1, [r0, #44]	; 0x2c
   161a8:	str	r2, [r0, #96]	; 0x60
   161ac:	beq	161e8 <sf_gen_multicast+0xa08>
   161b0:	ldr	r2, [r4, #96]	; 0x60
   161b4:	mov	r3, r0
   161b8:	cmp	r1, #0
   161bc:	mov	r1, #84	; 0x54
   161c0:	add	r7, r3, #84	; 0x54
   161c4:	movweq	r1, #60	; 0x3c
   161c8:	addeq	r7, r3, #60	; 0x3c
   161cc:	ldr	r3, [r3, r1]
   161d0:	str	r2, [r7]
   161d4:	cmp	r3, #0
   161d8:	beq	161e4 <sf_gen_multicast+0xa04>
   161dc:	ldr	r1, [r3, #44]	; 0x2c
   161e0:	b	161b8 <sf_gen_multicast+0x9d8>
   161e4:	ldr	r1, [r0, #44]	; 0x2c
   161e8:	clz	r1, r1
   161ec:	cmp	r4, #0
   161f0:	lsr	r1, r1, #5
   161f4:	str	r1, [r0, #44]	; 0x2c
   161f8:	str	r4, [sp]
   161fc:	beq	1622c <sf_gen_multicast+0xa4c>
   16200:	mov	r2, r4
   16204:	ldr	r3, [r2, #44]	; 0x2c
   16208:	add	r1, r2, #84	; 0x54
   1620c:	cmp	r3, #0
   16210:	mov	r3, #84	; 0x54
   16214:	movweq	r3, #60	; 0x3c
   16218:	addeq	r1, r2, #60	; 0x3c
   1621c:	ldr	r2, [r2, r3]
   16220:	cmp	r2, #0
   16224:	bne	16204 <sf_gen_multicast+0xa24>
   16228:	b	16230 <sf_gen_multicast+0xa50>
   1622c:	mov	r1, sp
   16230:	str	r0, [r1]
   16234:	mov	r1, #0
   16238:	mov	r2, #16
   1623c:	ldr	r0, [r0, #96]	; 0x60
   16240:	str	r0, [r4, #96]	; 0x60
   16244:	mov	r0, #1
   16248:	bl	165d8 <gen_load_a>
   1624c:	mov	r5, r0
   16250:	ldr	r0, [r8, #92]	; 0x5c
   16254:	ldr	r6, [sl, r0, lsl #3]!
   16258:	cmp	r6, #207	; 0xcf
   1625c:	bhi	162a8 <sf_gen_multicast+0xac8>
   16260:	add	r1, r0, #1
   16264:	cmp	r0, #15
   16268:	str	r1, [r8, #92]	; 0x5c
   1626c:	bge	164f4 <sf_gen_multicast+0xd14>
   16270:	mov	r0, #1024	; 0x400
   16274:	lsl	r6, r0, r1
   16278:	mov	r0, r6
   1627c:	bl	e34 <malloc@plt>
   16280:	cmp	r0, #0
   16284:	str	r0, [sl, #12]
   16288:	beq	164f4 <sf_gen_multicast+0xd14>
   1628c:	mov	r1, #0
   16290:	mov	r2, r6
   16294:	add	sl, sl, #8
   16298:	bl	ea0 <memset@plt>
   1629c:	cmp	r6, #207	; 0xcf
   162a0:	str	r6, [sl]
   162a4:	bls	164f4 <sf_gen_multicast+0xd14>
   162a8:	sub	r0, r6, #208	; 0xd0
   162ac:	mov	r2, #4
   162b0:	str	r0, [sl]
   162b4:	ldr	r1, [sl, #4]
   162b8:	adds	r0, r1, r0
   162bc:	mov	r1, #69	; 0x45
   162c0:	str	r2, [r0, #20]
   162c4:	str	r5, [r0, #4]
   162c8:	str	r1, [r0, #8]
   162cc:	ldr	r1, [r0, #44]	; 0x2c
   162d0:	clz	r1, r1
   162d4:	lsr	r1, r1, #5
   162d8:	str	r1, [r0, #44]	; 0x2c
   162dc:	str	r0, [r0, #96]	; 0x60
   162e0:	beq	16318 <sf_gen_multicast+0xb38>
   162e4:	ldr	r1, [r4, #96]	; 0x60
   162e8:	mov	r2, r0
   162ec:	ldr	r3, [r2, #44]	; 0x2c
   162f0:	add	r7, r2, #84	; 0x54
   162f4:	cmp	r3, #0
   162f8:	mov	r3, #84	; 0x54
   162fc:	movweq	r3, #60	; 0x3c
   16300:	addeq	r7, r2, #60	; 0x3c
   16304:	ldr	r2, [r2, r3]
   16308:	str	r1, [r7]
   1630c:	cmp	r2, #0
   16310:	bne	162ec <sf_gen_multicast+0xb0c>
   16314:	ldr	r1, [r0, #44]	; 0x2c
   16318:	clz	r1, r1
   1631c:	cmp	r4, #0
   16320:	lsr	r1, r1, #5
   16324:	str	r1, [r0, #44]	; 0x2c
   16328:	ldr	r2, [r4, #44]	; 0x2c
   1632c:	clz	r1, r2
   16330:	lsr	r1, r1, #5
   16334:	str	r1, [r4, #44]	; 0x2c
   16338:	str	r4, [sp]
   1633c:	beq	16388 <sf_gen_multicast+0xba8>
   16340:	cmp	r2, #0
   16344:	mov	r2, #60	; 0x3c
   16348:	add	r1, r4, #60	; 0x3c
   1634c:	movweq	r2, #84	; 0x54
   16350:	addeq	r1, r4, #84	; 0x54
   16354:	ldr	r2, [r4, r2]
   16358:	cmp	r2, #0
   1635c:	beq	1638c <sf_gen_multicast+0xbac>
   16360:	ldr	r3, [r2, #44]	; 0x2c
   16364:	add	r1, r2, #84	; 0x54
   16368:	cmp	r3, #0
   1636c:	mov	r3, #84	; 0x54
   16370:	movweq	r3, #60	; 0x3c
   16374:	addeq	r1, r2, #60	; 0x3c
   16378:	ldr	r2, [r2, r3]
   1637c:	cmp	r2, #0
   16380:	bne	16360 <sf_gen_multicast+0xb80>
   16384:	b	1638c <sf_gen_multicast+0xbac>
   16388:	mov	r1, sp
   1638c:	str	r0, [r1]
   16390:	ldr	r1, [r4, #44]	; 0x2c
   16394:	clz	r1, r1
   16398:	lsr	r1, r1, #5
   1639c:	str	r1, [r4, #44]	; 0x2c
   163a0:	ldr	r0, [r0, #96]	; 0x60
   163a4:	str	r0, [r4, #96]	; 0x60
   163a8:	mov	r0, r4
   163ac:	sub	sp, fp, #28
   163b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163b4:	cmp	r0, #192	; 0xc0
   163b8:	beq	159e0 <sf_gen_multicast+0x200>
   163bc:	b	164e8 <sf_gen_multicast+0xd08>
   163c0:	ldrb	r0, [r8]
   163c4:	cmp	r0, #1
   163c8:	bne	164e8 <sf_gen_multicast+0xd08>
   163cc:	mov	r0, #1
   163d0:	mov	r1, #4
   163d4:	mov	r2, #8
   163d8:	mov	r3, #65280	; 0xff00
   163dc:	bl	a0a4 <gen_cmp>
   163e0:	mov	r5, r0
   163e4:	ldr	r0, [r0, #44]	; 0x2c
   163e8:	clz	r0, r0
   163ec:	lsr	r0, r0, #5
   163f0:	str	r0, [r5, #44]	; 0x2c
   163f4:	ldr	r0, [r8, #52]	; 0x34
   163f8:	bl	16510 <gen_mac_multicast>
   163fc:	mov	r4, r0
   16400:	cmp	r5, #0
   16404:	beq	16438 <sf_gen_multicast+0xc58>
   16408:	ldr	r0, [r4, #96]	; 0x60
   1640c:	mov	r1, r5
   16410:	ldr	r2, [r1, #44]	; 0x2c
   16414:	add	r3, r1, #84	; 0x54
   16418:	cmp	r2, #0
   1641c:	mov	r2, #84	; 0x54
   16420:	movweq	r2, #60	; 0x3c
   16424:	addeq	r3, r1, #60	; 0x3c
   16428:	ldr	r1, [r1, r2]
   1642c:	str	r0, [r3]
   16430:	cmp	r1, #0
   16434:	bne	16410 <sf_gen_multicast+0xc30>
   16438:	ldr	r0, [r5, #44]	; 0x2c
   1643c:	cmp	r4, #0
   16440:	clz	r0, r0
   16444:	lsr	r0, r0, #5
   16448:	str	r0, [r5, #44]	; 0x2c
   1644c:	ldr	r1, [r4, #44]	; 0x2c
   16450:	clz	r0, r1
   16454:	lsr	r0, r0, #5
   16458:	str	r0, [r4, #44]	; 0x2c
   1645c:	str	r4, [sp]
   16460:	beq	164ac <sf_gen_multicast+0xccc>
   16464:	cmp	r1, #0
   16468:	mov	r1, #60	; 0x3c
   1646c:	add	r0, r4, #60	; 0x3c
   16470:	movweq	r1, #84	; 0x54
   16474:	addeq	r0, r4, #84	; 0x54
   16478:	ldr	r1, [r4, r1]
   1647c:	cmp	r1, #0
   16480:	beq	164b0 <sf_gen_multicast+0xcd0>
   16484:	ldr	r2, [r1, #44]	; 0x2c
   16488:	add	r0, r1, #84	; 0x54
   1648c:	cmp	r2, #0
   16490:	mov	r2, #84	; 0x54
   16494:	movweq	r2, #60	; 0x3c
   16498:	addeq	r0, r1, #60	; 0x3c
   1649c:	ldr	r1, [r1, r2]
   164a0:	cmp	r1, #0
   164a4:	bne	16484 <sf_gen_multicast+0xca4>
   164a8:	b	164b0 <sf_gen_multicast+0xcd0>
   164ac:	mov	r0, sp
   164b0:	str	r5, [r0]
   164b4:	ldr	r0, [r4, #44]	; 0x2c
   164b8:	clz	r0, r0
   164bc:	lsr	r0, r0, #5
   164c0:	str	r0, [r4, #44]	; 0x2c
   164c4:	ldr	r0, [r5, #96]	; 0x60
   164c8:	str	r0, [r4, #96]	; 0x60
   164cc:	mov	r0, r4
   164d0:	sub	sp, fp, #28
   164d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164d8:	mov	r0, #1
   164dc:	sub	sp, fp, #28
   164e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164e4:	b	16510 <gen_mac_multicast>
   164e8:	ldr	r0, [pc, #28]	; 1650c <sf_gen_multicast+0xd2c>
   164ec:	add	r0, pc, r0
   164f0:	bl	214c <sf_bpf_error>
   164f4:	ldr	r0, [pc, #12]	; 16508 <sf_gen_multicast+0xd28>
   164f8:	add	r0, pc, r0
   164fc:	bl	214c <sf_bpf_error>
   16500:	.word	0x00030c0c
   16504:	.word	0x00030a20
   16508:	.word	0x0001356c
   1650c:	.word	0x0001300d

00016510 <gen_mac_multicast>:
   16510:	push	{r4, r5, r6, r7, fp, lr}
   16514:	add	fp, sp, #16
   16518:	mov	r1, r0
   1651c:	mov	r0, #1
   16520:	mov	r2, #16
   16524:	mov	r6, #1
   16528:	bl	165d8 <gen_load_a>
   1652c:	ldr	r1, [pc, #152]	; 165cc <gen_mac_multicast+0xbc>
   16530:	mov	r4, r0
   16534:	add	r1, pc, r1
   16538:	ldr	r0, [r1, #92]	; 0x5c
   1653c:	ldr	r7, [pc, #140]	; 165d0 <gen_mac_multicast+0xc0>
   16540:	add	r7, pc, r7
   16544:	ldr	r5, [r7, r0, lsl #3]!
   16548:	cmp	r5, #207	; 0xcf
   1654c:	bhi	16598 <gen_mac_multicast+0x88>
   16550:	add	r2, r0, #1
   16554:	cmp	r0, #15
   16558:	str	r2, [r1, #92]	; 0x5c
   1655c:	bge	165c0 <gen_mac_multicast+0xb0>
   16560:	mov	r0, #1024	; 0x400
   16564:	lsl	r5, r0, r2
   16568:	mov	r0, r5
   1656c:	bl	e34 <malloc@plt>
   16570:	cmp	r0, #0
   16574:	str	r0, [r7, #12]
   16578:	beq	165c0 <gen_mac_multicast+0xb0>
   1657c:	mov	r1, #0
   16580:	mov	r2, r5
   16584:	add	r7, r7, #8
   16588:	bl	ea0 <memset@plt>
   1658c:	cmp	r5, #207	; 0xcf
   16590:	str	r5, [r7]
   16594:	bls	165c0 <gen_mac_multicast+0xb0>
   16598:	sub	r0, r5, #208	; 0xd0
   1659c:	str	r0, [r7]
   165a0:	ldr	r1, [r7, #4]
   165a4:	add	r0, r1, r0
   165a8:	mov	r1, #69	; 0x45
   165ac:	str	r6, [r0, #20]
   165b0:	str	r4, [r0, #4]
   165b4:	str	r1, [r0, #8]
   165b8:	str	r0, [r0, #96]	; 0x60
   165bc:	pop	{r4, r5, r6, r7, fp, pc}
   165c0:	ldr	r0, [pc, #12]	; 165d4 <gen_mac_multicast+0xc4>
   165c4:	add	r0, pc, r0
   165c8:	bl	214c <sf_bpf_error>
   165cc:	.word	0x0002ffac
   165d0:	.word	0x0002fee0
   165d4:	.word	0x000134a0

000165d8 <gen_load_a>:
   165d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   165dc:	add	fp, sp, #24
   165e0:	cmp	r0, #6
   165e4:	bhi	16950 <gen_load_a+0x378>
   165e8:	mov	r5, r1
   165ec:	add	r1, pc, #8
   165f0:	mov	r8, r2
   165f4:	ldr	r0, [r1, r0, lsl #2]
   165f8:	add	pc, r1, r0
   165fc:	.word	0x000000c4
   16600:	.word	0x0000001c
   16604:	.word	0x00000168
   16608:	.word	0x000001d0
   1660c:	.word	0x0000014c
   16610:	.word	0x00000240
   16614:	.word	0x0000028c
   16618:	bl	1337c <gen_llprefixlen>
   1661c:	cmp	r0, #0
   16620:	beq	166c0 <gen_load_a+0xe8>
   16624:	ldr	r1, [pc, #828]	; 16968 <gen_load_a+0x390>
   16628:	mov	r6, r0
   1662c:	add	r1, pc, r1
   16630:	ldr	r0, [r1, #92]	; 0x5c
   16634:	ldr	r4, [pc, #816]	; 1696c <gen_load_a+0x394>
   16638:	add	r4, pc, r4
   1663c:	ldr	r7, [r4, r0, lsl #3]!
   16640:	cmp	r7, #19
   16644:	bhi	16690 <gen_load_a+0xb8>
   16648:	add	r2, r0, #1
   1664c:	cmp	r0, #15
   16650:	str	r2, [r1, #92]	; 0x5c
   16654:	bge	16954 <gen_load_a+0x37c>
   16658:	mov	r0, #1024	; 0x400
   1665c:	lsl	r7, r0, r2
   16660:	mov	r0, r7
   16664:	bl	e34 <malloc@plt>
   16668:	cmp	r0, #0
   1666c:	str	r0, [r4, #12]
   16670:	beq	16954 <gen_load_a+0x37c>
   16674:	mov	r1, #0
   16678:	mov	r2, r7
   1667c:	add	r4, r4, #8
   16680:	bl	ea0 <memset@plt>
   16684:	cmp	r7, #19
   16688:	str	r7, [r4]
   1668c:	bls	16954 <gen_load_a+0x37c>
   16690:	sub	r2, r7, #20
   16694:	orr	r1, r8, #64	; 0x40
   16698:	str	r2, [r4]
   1669c:	ldr	r0, [r4, #4]
   166a0:	str	r1, [r0, r2]!
   166a4:	mov	r2, r6
   166a8:	str	r5, [r0, #12]
   166ac:	mov	r1, r2
   166b0:	ldr	r2, [r2, #16]
   166b4:	cmp	r2, #0
   166b8:	bne	166ac <gen_load_a+0xd4>
   166bc:	b	1687c <gen_load_a+0x2a4>
   166c0:	ldr	r1, [pc, #664]	; 16960 <gen_load_a+0x388>
   166c4:	add	r1, pc, r1
   166c8:	ldr	r0, [r1, #92]	; 0x5c
   166cc:	ldr	r4, [pc, #656]	; 16964 <gen_load_a+0x38c>
   166d0:	add	r4, pc, r4
   166d4:	ldr	r6, [r4, r0, lsl #3]!
   166d8:	cmp	r6, #19
   166dc:	bhi	16728 <gen_load_a+0x150>
   166e0:	add	r2, r0, #1
   166e4:	cmp	r0, #15
   166e8:	str	r2, [r1, #92]	; 0x5c
   166ec:	bge	16954 <gen_load_a+0x37c>
   166f0:	mov	r0, #1024	; 0x400
   166f4:	lsl	r6, r0, r2
   166f8:	mov	r0, r6
   166fc:	bl	e34 <malloc@plt>
   16700:	cmp	r0, #0
   16704:	str	r0, [r4, #12]
   16708:	beq	16954 <gen_load_a+0x37c>
   1670c:	mov	r1, #0
   16710:	mov	r2, r6
   16714:	add	r4, r4, #8
   16718:	bl	ea0 <memset@plt>
   1671c:	cmp	r6, #19
   16720:	str	r6, [r4]
   16724:	bls	16954 <gen_load_a+0x37c>
   16728:	sub	r1, r6, #20
   1672c:	orr	r0, r8, #32
   16730:	str	r1, [r4]
   16734:	ldr	r6, [r4, #4]
   16738:	str	r0, [r6, r1]!
   1673c:	mov	r0, r6
   16740:	str	r5, [r6, #12]
   16744:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16748:	ldr	r0, [pc, #560]	; 16980 <gen_load_a+0x3a8>
   1674c:	add	r0, pc, r0
   16750:	ldr	r0, [r0, #56]	; 0x38
   16754:	add	r0, r0, r5
   16758:	mov	r1, r8
   1675c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16760:	b	1ecd0 <gen_load_macplrel>
   16764:	ldr	r7, [pc, #520]	; 16974 <gen_load_a+0x39c>
   16768:	add	r7, pc, r7
   1676c:	ldrb	r0, [r7, #16]
   16770:	cmp	r0, #1
   16774:	bne	168a8 <gen_load_a+0x2d0>
   16778:	ldr	r0, [r7, #100]	; 0x64
   1677c:	cmn	r0, #1
   16780:	bne	1678c <gen_load_a+0x1b4>
   16784:	bl	1305c <alloc_reg>
   16788:	str	r0, [r7, #100]	; 0x64
   1678c:	mov	r0, #97	; 0x61
   16790:	bl	132dc <new_stmt>
   16794:	mov	r6, r0
   16798:	ldr	r0, [r7, #100]	; 0x64
   1679c:	cmp	r6, #0
   167a0:	str	r0, [r6, #12]
   167a4:	beq	168a8 <gen_load_a+0x2d0>
   167a8:	orr	r0, r8, #64	; 0x40
   167ac:	bl	132dc <new_stmt>
   167b0:	mov	r2, r6
   167b4:	str	r5, [r0, #12]
   167b8:	mov	r1, r2
   167bc:	ldr	r2, [r2, #16]
   167c0:	cmp	r2, #0
   167c4:	bne	167b8 <gen_load_a+0x1e0>
   167c8:	b	1687c <gen_load_a+0x2a4>
   167cc:	ldr	r7, [pc, #424]	; 1697c <gen_load_a+0x3a4>
   167d0:	add	r7, pc, r7
   167d4:	ldr	r0, [r7, #48]	; 0x30
   167d8:	add	r4, r0, r5
   167dc:	ldrb	r0, [r7, #16]
   167e0:	cmp	r0, #1
   167e4:	bne	16930 <gen_load_a+0x358>
   167e8:	ldr	r0, [r7, #100]	; 0x64
   167ec:	cmn	r0, #1
   167f0:	bne	167fc <gen_load_a+0x224>
   167f4:	bl	1305c <alloc_reg>
   167f8:	str	r0, [r7, #100]	; 0x64
   167fc:	mov	r0, #97	; 0x61
   16800:	bl	132dc <new_stmt>
   16804:	mov	r6, r0
   16808:	ldr	r0, [r7, #100]	; 0x64
   1680c:	cmp	r6, #0
   16810:	str	r0, [r6, #12]
   16814:	beq	16930 <gen_load_a+0x358>
   16818:	orr	r0, r8, #64	; 0x40
   1681c:	bl	132dc <new_stmt>
   16820:	mov	r2, r6
   16824:	str	r4, [r0, #12]
   16828:	mov	r1, r2
   1682c:	ldr	r2, [r2, #16]
   16830:	cmp	r2, #0
   16834:	bne	16828 <gen_load_a+0x250>
   16838:	b	1687c <gen_load_a+0x2a4>
   1683c:	bl	13468 <gen_loadx_iphdrlen>
   16840:	mov	r6, r0
   16844:	orr	r0, r8, #64	; 0x40
   16848:	bl	132dc <new_stmt>
   1684c:	ldr	r1, [pc, #304]	; 16984 <gen_load_a+0x3ac>
   16850:	add	r1, pc, r1
   16854:	ldr	r2, [r1, #44]	; 0x2c
   16858:	ldr	r1, [r1, #48]	; 0x30
   1685c:	add	r2, r2, r5
   16860:	add	r1, r2, r1
   16864:	mov	r2, r6
   16868:	str	r1, [r0, #12]
   1686c:	mov	r1, r2
   16870:	ldr	r2, [r2, #16]
   16874:	cmp	r2, #0
   16878:	bne	1686c <gen_load_a+0x294>
   1687c:	str	r0, [r1, #16]
   16880:	mov	r0, r6
   16884:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16888:	ldr	r0, [pc, #248]	; 16988 <gen_load_a+0x3b0>
   1688c:	add	r0, pc, r0
   16890:	ldr	r0, [r0, #48]	; 0x30
   16894:	add	r0, r5, r0
   16898:	add	r0, r0, #40	; 0x28
   1689c:	mov	r1, r8
   168a0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   168a4:	b	1ecd0 <gen_load_macplrel>
   168a8:	ldr	r0, [r7, #92]	; 0x5c
   168ac:	ldr	r4, [pc, #196]	; 16978 <gen_load_a+0x3a0>
   168b0:	add	r4, pc, r4
   168b4:	ldr	r6, [r4, r0, lsl #3]!
   168b8:	cmp	r6, #19
   168bc:	bhi	16908 <gen_load_a+0x330>
   168c0:	add	r1, r0, #1
   168c4:	cmp	r0, #15
   168c8:	str	r1, [r7, #92]	; 0x5c
   168cc:	bge	16954 <gen_load_a+0x37c>
   168d0:	mov	r0, #1024	; 0x400
   168d4:	lsl	r6, r0, r1
   168d8:	mov	r0, r6
   168dc:	bl	e34 <malloc@plt>
   168e0:	cmp	r0, #0
   168e4:	str	r0, [r4, #12]
   168e8:	beq	16954 <gen_load_a+0x37c>
   168ec:	mov	r1, #0
   168f0:	mov	r2, r6
   168f4:	add	r4, r4, #8
   168f8:	bl	ea0 <memset@plt>
   168fc:	cmp	r6, #19
   16900:	str	r6, [r4]
   16904:	bls	16954 <gen_load_a+0x37c>
   16908:	sub	r1, r6, #20
   1690c:	orr	r0, r8, #32
   16910:	str	r1, [r4]
   16914:	ldr	r6, [r4, #4]
   16918:	str	r0, [r6, r1]!
   1691c:	ldr	r0, [r7, #44]	; 0x2c
   16920:	add	r0, r0, r5
   16924:	str	r0, [r6, #12]
   16928:	mov	r0, r6
   1692c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16930:	orr	r0, r8, #32
   16934:	bl	132dc <new_stmt>
   16938:	mov	r6, r0
   1693c:	ldr	r0, [r7, #44]	; 0x2c
   16940:	add	r0, r0, r4
   16944:	str	r0, [r6, #12]
   16948:	mov	r0, r6
   1694c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16950:	bl	f24 <abort@plt>
   16954:	ldr	r0, [pc, #20]	; 16970 <gen_load_a+0x398>
   16958:	add	r0, pc, r0
   1695c:	bl	214c <sf_bpf_error>
   16960:	.word	0x0002fe1c
   16964:	.word	0x0002fd50
   16968:	.word	0x0002feb4
   1696c:	.word	0x0002fde8
   16970:	.word	0x0001310c
   16974:	.word	0x0002fd78
   16978:	.word	0x0002fb70
   1697c:	.word	0x0002fd10
   16980:	.word	0x0002fd94
   16984:	.word	0x0002fc90
   16988:	.word	0x0002fc54

0001698c <gen_cmp_ge>:
   1698c:	push	{r4, r5, r6, r7, fp, lr}
   16990:	add	fp, sp, #16
   16994:	mov	r4, r3
   16998:	bl	165d8 <gen_load_a>
   1699c:	ldr	r1, [pc, #152]	; 16a3c <gen_cmp_ge+0xb0>
   169a0:	mov	r5, r0
   169a4:	add	r1, pc, r1
   169a8:	ldr	r0, [r1, #92]	; 0x5c
   169ac:	ldr	r7, [pc, #140]	; 16a40 <gen_cmp_ge+0xb4>
   169b0:	add	r7, pc, r7
   169b4:	ldr	r6, [r7, r0, lsl #3]!
   169b8:	cmp	r6, #207	; 0xcf
   169bc:	bhi	16a08 <gen_cmp_ge+0x7c>
   169c0:	add	r2, r0, #1
   169c4:	cmp	r0, #15
   169c8:	str	r2, [r1, #92]	; 0x5c
   169cc:	bge	16a30 <gen_cmp_ge+0xa4>
   169d0:	mov	r0, #1024	; 0x400
   169d4:	lsl	r6, r0, r2
   169d8:	mov	r0, r6
   169dc:	bl	e34 <malloc@plt>
   169e0:	cmp	r0, #0
   169e4:	str	r0, [r7, #12]
   169e8:	beq	16a30 <gen_cmp_ge+0xa4>
   169ec:	mov	r1, #0
   169f0:	mov	r2, r6
   169f4:	add	r7, r7, #8
   169f8:	bl	ea0 <memset@plt>
   169fc:	cmp	r6, #207	; 0xcf
   16a00:	str	r6, [r7]
   16a04:	bls	16a30 <gen_cmp_ge+0xa4>
   16a08:	sub	r0, r6, #208	; 0xd0
   16a0c:	str	r0, [r7]
   16a10:	ldr	r1, [r7, #4]
   16a14:	add	r0, r1, r0
   16a18:	mov	r1, #53	; 0x35
   16a1c:	str	r4, [r0, #20]
   16a20:	str	r5, [r0, #4]
   16a24:	str	r1, [r0, #8]
   16a28:	str	r0, [r0, #96]	; 0x60
   16a2c:	pop	{r4, r5, r6, r7, fp, pc}
   16a30:	ldr	r0, [pc, #12]	; 16a44 <gen_cmp_ge+0xb8>
   16a34:	add	r0, pc, r0
   16a38:	bl	214c <sf_bpf_error>
   16a3c:	.word	0x0002fb3c
   16a40:	.word	0x0002fa70
   16a44:	.word	0x00013030

00016a48 <sf_gen_inbound>:
   16a48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16a4c:	add	fp, sp, #24
   16a50:	ldr	r9, [pc, #1652]	; 170cc <sf_gen_inbound+0x684>
   16a54:	mov	r6, r0
   16a58:	add	r9, pc, r9
   16a5c:	ldr	r1, [r9, #36]	; 0x24
   16a60:	sub	r0, r1, #8
   16a64:	cmp	r0, #218	; 0xda
   16a68:	bhi	170c0 <sf_gen_inbound+0x678>
   16a6c:	add	r2, pc, #4
   16a70:	ldr	r0, [r2, r0, lsl #2]
   16a74:	add	pc, r2, r0
   16a78:	.word	0x00000594
   16a7c:	.word	0x00000648
   16a80:	.word	0x00000648
   16a84:	.word	0x00000648
   16a88:	.word	0x00000648
   16a8c:	.word	0x00000648
   16a90:	.word	0x00000648
   16a94:	.word	0x00000648
   16a98:	.word	0x00000648
   16a9c:	.word	0x00000648
   16aa0:	.word	0x00000648
   16aa4:	.word	0x00000648
   16aa8:	.word	0x00000648
   16aac:	.word	0x00000648
   16ab0:	.word	0x00000648
   16ab4:	.word	0x00000648
   16ab8:	.word	0x00000648
   16abc:	.word	0x00000648
   16ac0:	.word	0x00000648
   16ac4:	.word	0x00000648
   16ac8:	.word	0x00000648
   16acc:	.word	0x00000648
   16ad0:	.word	0x00000648
   16ad4:	.word	0x00000648
   16ad8:	.word	0x00000648
   16adc:	.word	0x00000648
   16ae0:	.word	0x00000648
   16ae4:	.word	0x00000648
   16ae8:	.word	0x00000648
   16aec:	.word	0x00000648
   16af0:	.word	0x00000648
   16af4:	.word	0x00000648
   16af8:	.word	0x00000648
   16afc:	.word	0x00000648
   16b00:	.word	0x00000648
   16b04:	.word	0x00000648
   16b08:	.word	0x00000648
   16b0c:	.word	0x00000648
   16b10:	.word	0x00000648
   16b14:	.word	0x00000648
   16b18:	.word	0x00000648
   16b1c:	.word	0x00000648
   16b20:	.word	0x00000648
   16b24:	.word	0x00000648
   16b28:	.word	0x00000648
   16b2c:	.word	0x00000648
   16b30:	.word	0x00000648
   16b34:	.word	0x00000648
   16b38:	.word	0x00000648
   16b3c:	.word	0x00000648
   16b40:	.word	0x00000648
   16b44:	.word	0x00000648
   16b48:	.word	0x00000648
   16b4c:	.word	0x00000648
   16b50:	.word	0x00000648
   16b54:	.word	0x00000648
   16b58:	.word	0x00000648
   16b5c:	.word	0x00000648
   16b60:	.word	0x00000648
   16b64:	.word	0x00000648
   16b68:	.word	0x00000648
   16b6c:	.word	0x00000648
   16b70:	.word	0x00000648
   16b74:	.word	0x00000648
   16b78:	.word	0x00000648
   16b7c:	.word	0x00000648
   16b80:	.word	0x00000648
   16b84:	.word	0x00000648
   16b88:	.word	0x00000648
   16b8c:	.word	0x00000648
   16b90:	.word	0x00000648
   16b94:	.word	0x00000648
   16b98:	.word	0x00000648
   16b9c:	.word	0x00000648
   16ba0:	.word	0x00000648
   16ba4:	.word	0x00000648
   16ba8:	.word	0x00000648
   16bac:	.word	0x00000648
   16bb0:	.word	0x00000648
   16bb4:	.word	0x00000648
   16bb8:	.word	0x00000648
   16bbc:	.word	0x00000648
   16bc0:	.word	0x00000648
   16bc4:	.word	0x00000648
   16bc8:	.word	0x00000648
   16bcc:	.word	0x00000648
   16bd0:	.word	0x00000648
   16bd4:	.word	0x00000648
   16bd8:	.word	0x00000648
   16bdc:	.word	0x00000648
   16be0:	.word	0x00000648
   16be4:	.word	0x00000648
   16be8:	.word	0x00000648
   16bec:	.word	0x00000648
   16bf0:	.word	0x00000648
   16bf4:	.word	0x00000648
   16bf8:	.word	0x00000648
   16bfc:	.word	0x00000648
   16c00:	.word	0x00000648
   16c04:	.word	0x00000648
   16c08:	.word	0x00000648
   16c0c:	.word	0x00000648
   16c10:	.word	0x00000648
   16c14:	.word	0x00000648
   16c18:	.word	0x00000648
   16c1c:	.word	0x000005d0
   16c20:	.word	0x00000648
   16c24:	.word	0x00000648
   16c28:	.word	0x00000648
   16c2c:	.word	0x00000648
   16c30:	.word	0x00000648
   16c34:	.word	0x00000648
   16c38:	.word	0x00000648
   16c3c:	.word	0x00000648
   16c40:	.word	0x00000648
   16c44:	.word	0x00000648
   16c48:	.word	0x00000648
   16c4c:	.word	0x00000648
   16c50:	.word	0x00000648
   16c54:	.word	0x00000648
   16c58:	.word	0x00000648
   16c5c:	.word	0x00000648
   16c60:	.word	0x0000036c
   16c64:	.word	0x0000036c
   16c68:	.word	0x0000036c
   16c6c:	.word	0x0000036c
   16c70:	.word	0x0000036c
   16c74:	.word	0x0000036c
   16c78:	.word	0x0000036c
   16c7c:	.word	0x0000036c
   16c80:	.word	0x00000648
   16c84:	.word	0x00000648
   16c88:	.word	0x00000648
   16c8c:	.word	0x00000648
   16c90:	.word	0x00000648
   16c94:	.word	0x00000648
   16c98:	.word	0x00000648
   16c9c:	.word	0x00000648
   16ca0:	.word	0x00000648
   16ca4:	.word	0x00000648
   16ca8:	.word	0x00000648
   16cac:	.word	0x00000648
   16cb0:	.word	0x00000648
   16cb4:	.word	0x00000648
   16cb8:	.word	0x00000648
   16cbc:	.word	0x00000648
   16cc0:	.word	0x00000648
   16cc4:	.word	0x00000648
   16cc8:	.word	0x00000648
   16ccc:	.word	0x00000648
   16cd0:	.word	0x00000648
   16cd4:	.word	0x00000648
   16cd8:	.word	0x00000648
   16cdc:	.word	0x00000648
   16ce0:	.word	0x00000648
   16ce4:	.word	0x00000648
   16ce8:	.word	0x0000036c
   16cec:	.word	0x00000648
   16cf0:	.word	0x000005f0
   16cf4:	.word	0x0000036c
   16cf8:	.word	0x0000036c
   16cfc:	.word	0x00000648
   16d00:	.word	0x00000648
   16d04:	.word	0x00000648
   16d08:	.word	0x00000648
   16d0c:	.word	0x00000648
   16d10:	.word	0x00000648
   16d14:	.word	0x00000648
   16d18:	.word	0x00000648
   16d1c:	.word	0x00000648
   16d20:	.word	0x0000036c
   16d24:	.word	0x0000036c
   16d28:	.word	0x0000036c
   16d2c:	.word	0x0000036c
   16d30:	.word	0x00000648
   16d34:	.word	0x0000036c
   16d38:	.word	0x00000648
   16d3c:	.word	0x00000648
   16d40:	.word	0x00000648
   16d44:	.word	0x00000648
   16d48:	.word	0x00000648
   16d4c:	.word	0x00000648
   16d50:	.word	0x00000648
   16d54:	.word	0x00000648
   16d58:	.word	0x00000648
   16d5c:	.word	0x00000648
   16d60:	.word	0x0000036c
   16d64:	.word	0x00000648
   16d68:	.word	0x00000648
   16d6c:	.word	0x00000648
   16d70:	.word	0x00000648
   16d74:	.word	0x00000648
   16d78:	.word	0x0000036c
   16d7c:	.word	0x00000648
   16d80:	.word	0x00000648
   16d84:	.word	0x00000648
   16d88:	.word	0x00000648
   16d8c:	.word	0x00000648
   16d90:	.word	0x00000648
   16d94:	.word	0x00000648
   16d98:	.word	0x00000648
   16d9c:	.word	0x00000648
   16da0:	.word	0x00000648
   16da4:	.word	0x00000648
   16da8:	.word	0x00000648
   16dac:	.word	0x00000648
   16db0:	.word	0x00000648
   16db4:	.word	0x00000648
   16db8:	.word	0x00000648
   16dbc:	.word	0x00000648
   16dc0:	.word	0x00000648
   16dc4:	.word	0x00000648
   16dc8:	.word	0x00000648
   16dcc:	.word	0x00000648
   16dd0:	.word	0x00000648
   16dd4:	.word	0x00000648
   16dd8:	.word	0x00000648
   16ddc:	.word	0x00000648
   16de0:	.word	0x00000610
   16de4:	mov	r0, #1
   16de8:	mov	r1, #3
   16dec:	mov	r2, #16
   16df0:	bl	165d8 <gen_load_a>
   16df4:	mov	r8, r0
   16df8:	ldr	r0, [r9, #92]	; 0x5c
   16dfc:	ldr	r4, [pc, #716]	; 170d0 <sf_gen_inbound+0x688>
   16e00:	cmp	r6, #0
   16e04:	add	r4, pc, r4
   16e08:	mov	r7, r4
   16e0c:	ldr	r5, [r7, r0, lsl #3]!
   16e10:	beq	16e68 <sf_gen_inbound+0x420>
   16e14:	cmp	r5, #19
   16e18:	bhi	16ebc <sf_gen_inbound+0x474>
   16e1c:	add	r6, r0, #1
   16e20:	cmp	r0, #15
   16e24:	str	r6, [r9, #92]	; 0x5c
   16e28:	bge	170b4 <sf_gen_inbound+0x66c>
   16e2c:	mov	r0, #1024	; 0x400
   16e30:	lsl	r5, r0, r6
   16e34:	mov	r0, r5
   16e38:	bl	e34 <malloc@plt>
   16e3c:	cmp	r0, #0
   16e40:	str	r0, [r7, #12]
   16e44:	beq	170b4 <sf_gen_inbound+0x66c>
   16e48:	mov	r1, #0
   16e4c:	mov	r2, r5
   16e50:	add	r7, r7, #8
   16e54:	bl	ea0 <memset@plt>
   16e58:	cmp	r5, #19
   16e5c:	str	r5, [r7]
   16e60:	bhi	16ec0 <sf_gen_inbound+0x478>
   16e64:	b	170b4 <sf_gen_inbound+0x66c>
   16e68:	cmp	r5, #19
   16e6c:	bhi	16f54 <sf_gen_inbound+0x50c>
   16e70:	add	r6, r0, #1
   16e74:	cmp	r0, #15
   16e78:	str	r6, [r9, #92]	; 0x5c
   16e7c:	bge	170b4 <sf_gen_inbound+0x66c>
   16e80:	mov	r0, #1024	; 0x400
   16e84:	lsl	r5, r0, r6
   16e88:	mov	r0, r5
   16e8c:	bl	e34 <malloc@plt>
   16e90:	cmp	r0, #0
   16e94:	str	r0, [r7, #12]
   16e98:	beq	170b4 <sf_gen_inbound+0x66c>
   16e9c:	mov	r1, #0
   16ea0:	mov	r2, r5
   16ea4:	add	r7, r7, #8
   16ea8:	bl	ea0 <memset@plt>
   16eac:	cmp	r5, #19
   16eb0:	str	r5, [r7]
   16eb4:	bhi	16f58 <sf_gen_inbound+0x510>
   16eb8:	b	170b4 <sf_gen_inbound+0x66c>
   16ebc:	mov	r6, r0
   16ec0:	sub	r1, r5, #20
   16ec4:	mov	r2, #84	; 0x54
   16ec8:	str	r1, [r7]
   16ecc:	ldr	r0, [r7, #4]
   16ed0:	str	r2, [r0, r1]!
   16ed4:	mov	r1, #1
   16ed8:	mov	r2, r8
   16edc:	str	r1, [r0, #12]
   16ee0:	mov	r1, r2
   16ee4:	ldr	r2, [r2, #16]
   16ee8:	cmp	r2, #0
   16eec:	bne	16ee0 <sf_gen_inbound+0x498>
   16ef0:	str	r0, [r1, #16]
   16ef4:	ldr	r5, [r4, r6, lsl #3]!
   16ef8:	cmp	r5, #207	; 0xcf
   16efc:	bhi	16f48 <sf_gen_inbound+0x500>
   16f00:	add	r0, r6, #1
   16f04:	cmp	r6, #15
   16f08:	str	r0, [r9, #92]	; 0x5c
   16f0c:	bge	170b4 <sf_gen_inbound+0x66c>
   16f10:	mov	r1, #1024	; 0x400
   16f14:	lsl	r5, r1, r0
   16f18:	mov	r0, r5
   16f1c:	bl	e34 <malloc@plt>
   16f20:	cmp	r0, #0
   16f24:	str	r0, [r4, #12]
   16f28:	beq	170b4 <sf_gen_inbound+0x66c>
   16f2c:	mov	r1, #0
   16f30:	mov	r2, r5
   16f34:	add	r4, r4, #8
   16f38:	bl	ea0 <memset@plt>
   16f3c:	cmp	r5, #207	; 0xcf
   16f40:	str	r5, [r4]
   16f44:	bls	170b4 <sf_gen_inbound+0x66c>
   16f48:	sub	r0, r5, #208	; 0xd0
   16f4c:	mov	r2, #0
   16f50:	b	16fe8 <sf_gen_inbound+0x5a0>
   16f54:	mov	r6, r0
   16f58:	sub	r1, r5, #20
   16f5c:	mov	r2, #84	; 0x54
   16f60:	str	r1, [r7]
   16f64:	ldr	r0, [r7, #4]
   16f68:	str	r2, [r0, r1]!
   16f6c:	mov	r1, #1
   16f70:	mov	r2, r8
   16f74:	str	r1, [r0, #12]
   16f78:	mov	r1, r2
   16f7c:	ldr	r2, [r2, #16]
   16f80:	cmp	r2, #0
   16f84:	bne	16f78 <sf_gen_inbound+0x530>
   16f88:	str	r0, [r1, #16]
   16f8c:	ldr	r5, [r4, r6, lsl #3]!
   16f90:	cmp	r5, #207	; 0xcf
   16f94:	bhi	16fe0 <sf_gen_inbound+0x598>
   16f98:	add	r0, r6, #1
   16f9c:	cmp	r6, #15
   16fa0:	str	r0, [r9, #92]	; 0x5c
   16fa4:	bge	170b4 <sf_gen_inbound+0x66c>
   16fa8:	mov	r1, #1024	; 0x400
   16fac:	lsl	r5, r1, r0
   16fb0:	mov	r0, r5
   16fb4:	bl	e34 <malloc@plt>
   16fb8:	cmp	r0, #0
   16fbc:	str	r0, [r4, #12]
   16fc0:	beq	170b4 <sf_gen_inbound+0x66c>
   16fc4:	mov	r1, #0
   16fc8:	mov	r2, r5
   16fcc:	add	r4, r4, #8
   16fd0:	bl	ea0 <memset@plt>
   16fd4:	cmp	r5, #207	; 0xcf
   16fd8:	str	r5, [r4]
   16fdc:	bls	170b4 <sf_gen_inbound+0x66c>
   16fe0:	sub	r0, r5, #208	; 0xd0
   16fe4:	mov	r2, #1
   16fe8:	str	r0, [r4]
   16fec:	ldr	r1, [r4, #4]
   16ff0:	add	r0, r1, r0
   16ff4:	mov	r1, #21
   16ff8:	str	r2, [r0, #20]
   16ffc:	str	r8, [r0, #4]
   17000:	str	r1, [r0, #8]
   17004:	str	r0, [r0, #96]	; 0x60
   17008:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1700c:	mov	r0, #0
   17010:	bl	13fa0 <sf_gen_loadi>
   17014:	mov	r1, r0
   17018:	mov	r0, #1
   1701c:	mov	r2, #1
   17020:	bl	11f40 <sf_gen_load>
   17024:	mov	r4, r0
   17028:	mov	r0, #0
   1702c:	bl	13fa0 <sf_gen_loadi>
   17030:	mov	r2, r0
   17034:	mov	r0, #16
   17038:	mov	r1, r4
   1703c:	mov	r3, r6
   17040:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17044:	b	138a4 <sf_gen_relation>
   17048:	mov	r0, #1
   1704c:	mov	r1, #0
   17050:	mov	r2, #8
   17054:	cmp	r6, #0
   17058:	beq	1707c <sf_gen_inbound+0x634>
   1705c:	mov	r3, #4
   17060:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17064:	b	a0a4 <gen_cmp>
   17068:	mov	r0, #1
   1706c:	mov	r1, #0
   17070:	mov	r2, #16
   17074:	cmp	r6, #0
   17078:	bne	1709c <sf_gen_inbound+0x654>
   1707c:	mov	r3, #0
   17080:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17084:	b	a0a4 <gen_cmp>
   17088:	mov	r0, #1
   1708c:	mov	r1, #2
   17090:	mov	r2, #8
   17094:	cmp	r6, #0
   17098:	beq	170a8 <sf_gen_inbound+0x660>
   1709c:	mov	r3, #1
   170a0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   170a4:	b	a0a4 <gen_cmp>
   170a8:	mov	r3, #2
   170ac:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   170b0:	b	a0a4 <gen_cmp>
   170b4:	ldr	r0, [pc, #28]	; 170d8 <sf_gen_inbound+0x690>
   170b8:	add	r0, pc, r0
   170bc:	bl	214c <sf_bpf_error>
   170c0:	ldr	r0, [pc, #12]	; 170d4 <sf_gen_inbound+0x68c>
   170c4:	add	r0, pc, r0
   170c8:	bl	214c <sf_bpf_error>
   170cc:	.word	0x0002fa88
   170d0:	.word	0x0002f61c
   170d4:	.word	0x000124a2
   170d8:	.word	0x000129ac

000170dc <sf_gen_pf_ifname>:
   170dc:	push	{fp, lr}
   170e0:	mov	fp, sp
   170e4:	ldr	r0, [pc, #4]	; 170f0 <sf_gen_pf_ifname+0x14>
   170e8:	add	r0, pc, r0
   170ec:	bl	214c <sf_bpf_error>
   170f0:	.word	0x000124ac

000170f4 <sf_gen_pf_ruleset>:
   170f4:	push	{fp, lr}
   170f8:	mov	fp, sp
   170fc:	ldr	r0, [pc, #4]	; 17108 <sf_gen_pf_ruleset+0x14>
   17100:	add	r0, pc, r0
   17104:	bl	214c <sf_bpf_error>
   17108:	.word	0x000124bc

0001710c <sf_gen_pf_rnr>:
   1710c:	push	{fp, lr}
   17110:	mov	fp, sp
   17114:	ldr	r0, [pc, #4]	; 17120 <sf_gen_pf_rnr+0x14>
   17118:	add	r0, pc, r0
   1711c:	bl	214c <sf_bpf_error>
   17120:	.word	0x000124a4

00017124 <sf_gen_pf_srnr>:
   17124:	push	{fp, lr}
   17128:	mov	fp, sp
   1712c:	ldr	r0, [pc, #4]	; 17138 <sf_gen_pf_srnr+0x14>
   17130:	add	r0, pc, r0
   17134:	bl	214c <sf_bpf_error>
   17138:	.word	0x0001248c

0001713c <sf_gen_pf_reason>:
   1713c:	push	{fp, lr}
   17140:	mov	fp, sp
   17144:	ldr	r0, [pc, #4]	; 17150 <sf_gen_pf_reason+0x14>
   17148:	add	r0, pc, r0
   1714c:	bl	214c <sf_bpf_error>
   17150:	.word	0x00012474

00017154 <sf_gen_pf_action>:
   17154:	push	{fp, lr}
   17158:	mov	fp, sp
   1715c:	ldr	r0, [pc, #4]	; 17168 <sf_gen_pf_action+0x14>
   17160:	add	r0, pc, r0
   17164:	bl	214c <sf_bpf_error>
   17168:	.word	0x0001245c

0001716c <sf_gen_p80211_type>:
   1716c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17170:	add	fp, sp, #28
   17174:	sub	sp, sp, #4
   17178:	ldr	r9, [pc, #416]	; 17320 <sf_gen_p80211_type+0x1b4>
   1717c:	mov	r4, r0
   17180:	mov	r6, r1
   17184:	add	r9, pc, r9
   17188:	ldr	r0, [r9, #36]	; 0x24
   1718c:	sub	r1, r0, #105	; 0x69
   17190:	cmp	r1, #22
   17194:	bhi	171ac <sf_gen_p80211_type+0x40>
   17198:	movw	r3, #16385	; 0x4001
   1719c:	mov	r2, #1
   171a0:	movt	r3, #64	; 0x40
   171a4:	tst	r3, r2, lsl r1
   171a8:	bne	171b4 <sf_gen_p80211_type+0x48>
   171ac:	cmp	r0, #163	; 0xa3
   171b0:	bne	17314 <sf_gen_p80211_type+0x1a8>
   171b4:	mov	r0, #1
   171b8:	mov	r1, #0
   171bc:	mov	r2, #16
   171c0:	bl	165d8 <gen_load_a>
   171c4:	mov	sl, r0
   171c8:	ldr	r0, [r9, #92]	; 0x5c
   171cc:	ldr	r8, [pc, #340]	; 17328 <sf_gen_p80211_type+0x1bc>
   171d0:	cmn	r6, #1
   171d4:	add	r8, pc, r8
   171d8:	beq	1723c <sf_gen_p80211_type+0xd0>
   171dc:	str	r4, [sp]
   171e0:	mov	r4, r8
   171e4:	ldr	r7, [r4, r0, lsl #3]!
   171e8:	cmp	r7, #19
   171ec:	bhi	17250 <sf_gen_p80211_type+0xe4>
   171f0:	add	r5, r0, #1
   171f4:	cmp	r0, #15
   171f8:	str	r5, [r9, #92]	; 0x5c
   171fc:	bge	17308 <sf_gen_p80211_type+0x19c>
   17200:	mov	r0, #1024	; 0x400
   17204:	lsl	r7, r0, r5
   17208:	mov	r0, r7
   1720c:	bl	e34 <malloc@plt>
   17210:	cmp	r0, #0
   17214:	str	r0, [r4, #12]
   17218:	beq	17308 <sf_gen_p80211_type+0x19c>
   1721c:	mov	r1, #0
   17220:	mov	r2, r7
   17224:	add	r4, r4, #8
   17228:	bl	ea0 <memset@plt>
   1722c:	cmp	r7, #19
   17230:	str	r7, [r4]
   17234:	bhi	17254 <sf_gen_p80211_type+0xe8>
   17238:	b	17308 <sf_gen_p80211_type+0x19c>
   1723c:	mov	r5, r0
   17240:	ldr	r6, [r8, r5, lsl #3]!
   17244:	cmp	r6, #207	; 0xcf
   17248:	bls	17294 <sf_gen_p80211_type+0x128>
   1724c:	b	172dc <sf_gen_p80211_type+0x170>
   17250:	mov	r5, r0
   17254:	sub	r1, r7, #20
   17258:	mov	r2, #84	; 0x54
   1725c:	str	r1, [r4]
   17260:	ldr	r0, [r4, #4]
   17264:	str	r2, [r0, r1]!
   17268:	mov	r2, sl
   1726c:	str	r6, [r0, #12]
   17270:	mov	r1, r2
   17274:	ldr	r2, [r2, #16]
   17278:	cmp	r2, #0
   1727c:	bne	17270 <sf_gen_p80211_type+0x104>
   17280:	ldr	r4, [sp]
   17284:	str	r0, [r1, #16]
   17288:	ldr	r6, [r8, r5, lsl #3]!
   1728c:	cmp	r6, #207	; 0xcf
   17290:	bhi	172dc <sf_gen_p80211_type+0x170>
   17294:	add	r0, r5, #1
   17298:	cmp	r5, #15
   1729c:	str	r0, [r9, #92]	; 0x5c
   172a0:	bge	17308 <sf_gen_p80211_type+0x19c>
   172a4:	mov	r1, #1024	; 0x400
   172a8:	lsl	r6, r1, r0
   172ac:	mov	r0, r6
   172b0:	bl	e34 <malloc@plt>
   172b4:	cmp	r0, #0
   172b8:	str	r0, [r8, #12]
   172bc:	beq	17308 <sf_gen_p80211_type+0x19c>
   172c0:	mov	r1, #0
   172c4:	mov	r2, r6
   172c8:	add	r8, r8, #8
   172cc:	bl	ea0 <memset@plt>
   172d0:	cmp	r6, #207	; 0xcf
   172d4:	str	r6, [r8]
   172d8:	bls	17308 <sf_gen_p80211_type+0x19c>
   172dc:	sub	r0, r6, #208	; 0xd0
   172e0:	str	r0, [r8]
   172e4:	ldr	r1, [r8, #4]
   172e8:	add	r0, r1, r0
   172ec:	mov	r1, #21
   172f0:	str	r4, [r0, #20]
   172f4:	str	sl, [r0, #4]
   172f8:	str	r1, [r0, #8]
   172fc:	str	r0, [r0, #96]	; 0x60
   17300:	sub	sp, fp, #28
   17304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17308:	ldr	r0, [pc, #28]	; 1732c <sf_gen_p80211_type+0x1c0>
   1730c:	add	r0, pc, r0
   17310:	bl	214c <sf_bpf_error>
   17314:	ldr	r0, [pc, #8]	; 17324 <sf_gen_p80211_type+0x1b8>
   17318:	add	r0, pc, r0
   1731c:	bl	214c <sf_bpf_error>
   17320:	.word	0x0002f35c
   17324:	.word	0x000122d9
   17328:	.word	0x0002f24c
   1732c:	.word	0x00012758

00017330 <sf_gen_p80211_fcdir>:
   17330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17334:	add	fp, sp, #28
   17338:	sub	sp, sp, #4
   1733c:	ldr	r9, [pc, #380]	; 174c0 <sf_gen_p80211_fcdir+0x190>
   17340:	mov	r8, r0
   17344:	add	r9, pc, r9
   17348:	ldr	r0, [r9, #36]	; 0x24
   1734c:	sub	r1, r0, #105	; 0x69
   17350:	cmp	r1, #22
   17354:	bhi	1736c <sf_gen_p80211_fcdir+0x3c>
   17358:	movw	r3, #16385	; 0x4001
   1735c:	mov	r2, #1
   17360:	movt	r3, #64	; 0x40
   17364:	tst	r3, r2, lsl r1
   17368:	bne	17374 <sf_gen_p80211_fcdir+0x44>
   1736c:	cmp	r0, #163	; 0xa3
   17370:	bne	174b4 <sf_gen_p80211_fcdir+0x184>
   17374:	mov	r0, #1
   17378:	mov	r1, #1
   1737c:	mov	r2, #16
   17380:	bl	165d8 <gen_load_a>
   17384:	mov	sl, r0
   17388:	ldr	r0, [r9, #92]	; 0x5c
   1738c:	ldr	r5, [pc, #308]	; 174c8 <sf_gen_p80211_fcdir+0x198>
   17390:	add	r5, pc, r5
   17394:	mov	r7, r5
   17398:	ldr	r6, [r7, r0, lsl #3]!
   1739c:	cmp	r6, #19
   173a0:	bhi	173f0 <sf_gen_p80211_fcdir+0xc0>
   173a4:	add	r4, r0, #1
   173a8:	cmp	r0, #15
   173ac:	str	r4, [r9, #92]	; 0x5c
   173b0:	bge	174a8 <sf_gen_p80211_fcdir+0x178>
   173b4:	mov	r0, #1024	; 0x400
   173b8:	lsl	r6, r0, r4
   173bc:	mov	r0, r6
   173c0:	bl	e34 <malloc@plt>
   173c4:	cmp	r0, #0
   173c8:	str	r0, [r7, #12]
   173cc:	beq	174a8 <sf_gen_p80211_fcdir+0x178>
   173d0:	mov	r1, #0
   173d4:	mov	r2, r6
   173d8:	add	r7, r7, #8
   173dc:	bl	ea0 <memset@plt>
   173e0:	cmp	r6, #19
   173e4:	str	r6, [r7]
   173e8:	bhi	173f4 <sf_gen_p80211_fcdir+0xc4>
   173ec:	b	174a8 <sf_gen_p80211_fcdir+0x178>
   173f0:	mov	r4, r0
   173f4:	sub	r1, r6, #20
   173f8:	mov	r2, #84	; 0x54
   173fc:	str	r1, [r7]
   17400:	ldr	r0, [r7, #4]
   17404:	str	r2, [r0, r1]!
   17408:	mov	r1, #3
   1740c:	mov	r2, sl
   17410:	str	r1, [r0, #12]
   17414:	mov	r1, r2
   17418:	ldr	r2, [r2, #16]
   1741c:	cmp	r2, #0
   17420:	bne	17414 <sf_gen_p80211_fcdir+0xe4>
   17424:	str	r0, [r1, #16]
   17428:	ldr	r6, [r5, r4, lsl #3]!
   1742c:	cmp	r6, #207	; 0xcf
   17430:	bhi	1747c <sf_gen_p80211_fcdir+0x14c>
   17434:	add	r0, r4, #1
   17438:	cmp	r4, #15
   1743c:	str	r0, [r9, #92]	; 0x5c
   17440:	bge	174a8 <sf_gen_p80211_fcdir+0x178>
   17444:	mov	r1, #1024	; 0x400
   17448:	lsl	r6, r1, r0
   1744c:	mov	r0, r6
   17450:	bl	e34 <malloc@plt>
   17454:	cmp	r0, #0
   17458:	str	r0, [r5, #12]
   1745c:	beq	174a8 <sf_gen_p80211_fcdir+0x178>
   17460:	mov	r1, #0
   17464:	mov	r2, r6
   17468:	add	r5, r5, #8
   1746c:	bl	ea0 <memset@plt>
   17470:	cmp	r6, #207	; 0xcf
   17474:	str	r6, [r5]
   17478:	bls	174a8 <sf_gen_p80211_fcdir+0x178>
   1747c:	sub	r0, r6, #208	; 0xd0
   17480:	str	r0, [r5]
   17484:	ldr	r1, [r5, #4]
   17488:	add	r0, r1, r0
   1748c:	mov	r1, #21
   17490:	str	r8, [r0, #20]
   17494:	str	sl, [r0, #4]
   17498:	str	r1, [r0, #8]
   1749c:	str	r0, [r0, #96]	; 0x60
   174a0:	sub	sp, fp, #28
   174a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174a8:	ldr	r0, [pc, #28]	; 174cc <sf_gen_p80211_fcdir+0x19c>
   174ac:	add	r0, pc, r0
   174b0:	bl	214c <sf_bpf_error>
   174b4:	ldr	r0, [pc, #8]	; 174c4 <sf_gen_p80211_fcdir+0x194>
   174b8:	add	r0, pc, r0
   174bc:	bl	214c <sf_bpf_error>
   174c0:	.word	0x0002f19c
   174c4:	.word	0x0001216a
   174c8:	.word	0x0002f090
   174cc:	.word	0x000125b8

000174d0 <sf_gen_acode>:
   174d0:	push	{r4, r5, fp, lr}
   174d4:	add	fp, sp, #8
   174d8:	sub	sp, sp, #8
   174dc:	mov	r5, r0
   174e0:	ldr	r0, [pc, #620]	; 17754 <sf_gen_acode+0x284>
   174e4:	add	r0, pc, r0
   174e8:	ldr	r0, [r0, #36]	; 0x24
   174ec:	cmp	r0, #129	; 0x81
   174f0:	cmpne	r0, #7
   174f4:	bne	17738 <sf_gen_acode+0x268>
   174f8:	movw	r0, #65534	; 0xfffe
   174fc:	and	r0, r1, r0
   17500:	cmp	r0, #256	; 0x100
   17504:	bne	17744 <sf_gen_acode+0x274>
   17508:	lsr	r0, r1, #16
   1750c:	uxtb	r0, r0
   17510:	cmp	r0, #4
   17514:	bhi	17750 <sf_gen_acode+0x280>
   17518:	add	r1, pc, #4
   1751c:	ldr	r0, [r1, r0, lsl #2]
   17520:	add	pc, r1, r0
   17524:	.word	0x00000014
   17528:	.word	0x000001ac
   1752c:	.word	0x000001b8
   17530:	.word	0x00000014
   17534:	.word	0x000000d4
   17538:	mov	r0, #1
   1753c:	mov	r1, #0
   17540:	mov	r2, #1
   17544:	mov	r3, r5
   17548:	bl	1b00c <gen_bcmp>
   1754c:	mov	r4, r0
   17550:	mov	r0, #1
   17554:	mov	r1, #1
   17558:	mov	r2, #1
   1755c:	mov	r3, r5
   17560:	bl	1b00c <gen_bcmp>
   17564:	ldr	r1, [r4, #44]	; 0x2c
   17568:	cmp	r4, #0
   1756c:	clz	r1, r1
   17570:	lsr	r1, r1, #5
   17574:	str	r1, [r4, #44]	; 0x2c
   17578:	beq	175b4 <sf_gen_acode+0xe4>
   1757c:	ldr	r2, [r0, #96]	; 0x60
   17580:	mov	r3, r4
   17584:	cmp	r1, #0
   17588:	mov	r1, #84	; 0x54
   1758c:	add	r5, r3, #84	; 0x54
   17590:	movweq	r1, #60	; 0x3c
   17594:	addeq	r5, r3, #60	; 0x3c
   17598:	ldr	r3, [r3, r1]
   1759c:	str	r2, [r5]
   175a0:	cmp	r3, #0
   175a4:	beq	175b0 <sf_gen_acode+0xe0>
   175a8:	ldr	r1, [r3, #44]	; 0x2c
   175ac:	b	17584 <sf_gen_acode+0xb4>
   175b0:	ldr	r1, [r4, #44]	; 0x2c
   175b4:	clz	r1, r1
   175b8:	cmp	r0, #0
   175bc:	lsr	r1, r1, #5
   175c0:	str	r1, [r4, #44]	; 0x2c
   175c4:	str	r0, [sp]
   175c8:	beq	176f8 <sf_gen_acode+0x228>
   175cc:	mov	r2, r0
   175d0:	ldr	r3, [r2, #44]	; 0x2c
   175d4:	add	r1, r2, #84	; 0x54
   175d8:	cmp	r3, #0
   175dc:	mov	r3, #84	; 0x54
   175e0:	movweq	r3, #60	; 0x3c
   175e4:	addeq	r1, r2, #60	; 0x3c
   175e8:	ldr	r2, [r2, r3]
   175ec:	cmp	r2, #0
   175f0:	bne	175d0 <sf_gen_acode+0x100>
   175f4:	b	176fc <sf_gen_acode+0x22c>
   175f8:	mov	r0, #1
   175fc:	mov	r1, #0
   17600:	mov	r2, #1
   17604:	mov	r3, r5
   17608:	bl	1b00c <gen_bcmp>
   1760c:	mov	r4, r0
   17610:	mov	r0, #1
   17614:	mov	r1, #1
   17618:	mov	r2, #1
   1761c:	mov	r3, r5
   17620:	bl	1b00c <gen_bcmp>
   17624:	cmp	r4, #0
   17628:	beq	1765c <sf_gen_acode+0x18c>
   1762c:	ldr	r1, [r0, #96]	; 0x60
   17630:	mov	r2, r4
   17634:	ldr	r3, [r2, #44]	; 0x2c
   17638:	add	r5, r2, #84	; 0x54
   1763c:	cmp	r3, #0
   17640:	mov	r3, #84	; 0x54
   17644:	movweq	r3, #60	; 0x3c
   17648:	addeq	r5, r2, #60	; 0x3c
   1764c:	ldr	r2, [r2, r3]
   17650:	str	r1, [r5]
   17654:	cmp	r2, #0
   17658:	bne	17634 <sf_gen_acode+0x164>
   1765c:	ldr	r1, [r4, #44]	; 0x2c
   17660:	cmp	r0, #0
   17664:	clz	r1, r1
   17668:	lsr	r1, r1, #5
   1766c:	str	r1, [r4, #44]	; 0x2c
   17670:	ldr	r2, [r0, #44]	; 0x2c
   17674:	clz	r1, r2
   17678:	lsr	r1, r1, #5
   1767c:	str	r1, [r0, #44]	; 0x2c
   17680:	str	r0, [sp, #4]
   17684:	beq	17710 <sf_gen_acode+0x240>
   17688:	cmp	r2, #0
   1768c:	mov	r2, #60	; 0x3c
   17690:	add	r1, r0, #60	; 0x3c
   17694:	movweq	r2, #84	; 0x54
   17698:	addeq	r1, r0, #84	; 0x54
   1769c:	ldr	r2, [r0, r2]
   176a0:	cmp	r2, #0
   176a4:	beq	17714 <sf_gen_acode+0x244>
   176a8:	ldr	r3, [r2, #44]	; 0x2c
   176ac:	add	r1, r2, #84	; 0x54
   176b0:	cmp	r3, #0
   176b4:	mov	r3, #84	; 0x54
   176b8:	movweq	r3, #60	; 0x3c
   176bc:	addeq	r1, r2, #60	; 0x3c
   176c0:	ldr	r2, [r2, r3]
   176c4:	cmp	r2, #0
   176c8:	bne	176a8 <sf_gen_acode+0x1d8>
   176cc:	b	17714 <sf_gen_acode+0x244>
   176d0:	mov	r0, #1
   176d4:	mov	r1, #0
   176d8:	b	176e4 <sf_gen_acode+0x214>
   176dc:	mov	r0, #1
   176e0:	mov	r1, #1
   176e4:	mov	r2, #1
   176e8:	mov	r3, r5
   176ec:	sub	sp, fp, #8
   176f0:	pop	{r4, r5, fp, lr}
   176f4:	b	1b00c <gen_bcmp>
   176f8:	mov	r1, sp
   176fc:	str	r4, [r1]
   17700:	ldr	r1, [r4, #96]	; 0x60
   17704:	str	r1, [r0, #96]	; 0x60
   17708:	sub	sp, fp, #8
   1770c:	pop	{r4, r5, fp, pc}
   17710:	add	r1, sp, #4
   17714:	str	r4, [r1]
   17718:	ldr	r1, [r0, #44]	; 0x2c
   1771c:	clz	r1, r1
   17720:	lsr	r1, r1, #5
   17724:	str	r1, [r0, #44]	; 0x2c
   17728:	ldr	r1, [r4, #96]	; 0x60
   1772c:	str	r1, [r0, #96]	; 0x60
   17730:	sub	sp, fp, #8
   17734:	pop	{r4, r5, fp, pc}
   17738:	ldr	r0, [pc, #28]	; 1775c <sf_gen_acode+0x28c>
   1773c:	add	r0, pc, r0
   17740:	bl	214c <sf_bpf_error>
   17744:	ldr	r0, [pc, #12]	; 17758 <sf_gen_acode+0x288>
   17748:	add	r0, pc, r0
   1774c:	bl	214c <sf_bpf_error>
   17750:	bl	f24 <abort@plt>
   17754:	.word	0x0002effc
   17758:	.word	0x00011f0d
   1775c:	.word	0x00011f43

00017760 <sf_gen_vlan>:
   17760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17764:	add	fp, sp, #28
   17768:	sub	sp, sp, #12
   1776c:	mov	r9, r0
   17770:	ldr	r0, [pc, #664]	; 17a10 <sf_gen_vlan+0x2b0>
   17774:	ldr	r0, [pc, r0]
   17778:	cmp	r0, #0
   1777c:	bne	179f8 <sf_gen_vlan+0x298>
   17780:	ldr	sl, [pc, #652]	; 17a14 <sf_gen_vlan+0x2b4>
   17784:	add	sl, pc, sl
   17788:	ldr	r1, [sl, #36]	; 0x24
   1778c:	ldr	r0, [sl, #48]	; 0x30
   17790:	ldr	r2, [pc, #640]	; 17a18 <sf_gen_vlan+0x2b8>
   17794:	add	r2, pc, r2
   17798:	cmp	r1, #1
   1779c:	str	r0, [r2, #4]
   177a0:	bne	17a04 <sf_gen_vlan+0x2a4>
   177a4:	ldr	r1, [sl, #40]	; 0x28
   177a8:	mov	r0, #1
   177ac:	mov	r2, #8
   177b0:	mov	r3, #33024	; 0x8100
   177b4:	bl	a0a4 <gen_cmp>
   177b8:	mov	r4, r0
   177bc:	cmp	r9, #0
   177c0:	bmi	17848 <sf_gen_vlan+0xe8>
   177c4:	mov	r0, #2
   177c8:	mov	r1, #0
   177cc:	mov	r2, #8
   177d0:	bl	165d8 <gen_load_a>
   177d4:	mov	r3, r0
   177d8:	ldr	r0, [sl, #92]	; 0x5c
   177dc:	ldr	r8, [pc, #568]	; 17a1c <sf_gen_vlan+0x2bc>
   177e0:	add	r8, pc, r8
   177e4:	mov	r5, r8
   177e8:	ldr	r7, [r5, r0, lsl #3]!
   177ec:	cmp	r7, #19
   177f0:	bhi	17850 <sf_gen_vlan+0xf0>
   177f4:	add	r6, r0, #1
   177f8:	cmp	r0, #15
   177fc:	str	r3, [sp, #4]
   17800:	str	r6, [sl, #92]	; 0x5c
   17804:	bge	179ec <sf_gen_vlan+0x28c>
   17808:	mov	r0, #1024	; 0x400
   1780c:	lsl	r7, r0, r6
   17810:	mov	r0, r7
   17814:	bl	e34 <malloc@plt>
   17818:	cmp	r0, #0
   1781c:	str	r0, [r5, #12]
   17820:	beq	179ec <sf_gen_vlan+0x28c>
   17824:	mov	r1, #0
   17828:	mov	r2, r7
   1782c:	add	r5, r5, #8
   17830:	bl	ea0 <memset@plt>
   17834:	ldr	r3, [sp, #4]
   17838:	cmp	r7, #19
   1783c:	str	r7, [r5]
   17840:	bhi	17854 <sf_gen_vlan+0xf4>
   17844:	b	179ec <sf_gen_vlan+0x28c>
   17848:	mov	r0, r4
   1784c:	b	179cc <sf_gen_vlan+0x26c>
   17850:	mov	r6, r0
   17854:	sub	r1, r7, #20
   17858:	mov	r2, #84	; 0x54
   1785c:	str	r1, [r5]
   17860:	ldr	r0, [r5, #4]
   17864:	str	r2, [r0, r1]!
   17868:	movw	r1, #4095	; 0xfff
   1786c:	mov	r2, r3
   17870:	str	r1, [r0, #12]
   17874:	mov	r1, r2
   17878:	ldr	r2, [r2, #16]
   1787c:	cmp	r2, #0
   17880:	bne	17874 <sf_gen_vlan+0x114>
   17884:	str	r0, [r1, #16]
   17888:	ldr	r7, [r8, r6, lsl #3]!
   1788c:	cmp	r7, #207	; 0xcf
   17890:	bhi	178e4 <sf_gen_vlan+0x184>
   17894:	add	r0, r6, #1
   17898:	cmp	r6, #15
   1789c:	str	r0, [sl, #92]	; 0x5c
   178a0:	bge	179ec <sf_gen_vlan+0x28c>
   178a4:	mov	r1, #1024	; 0x400
   178a8:	mov	r5, r3
   178ac:	lsl	r7, r1, r0
   178b0:	mov	r0, r7
   178b4:	bl	e34 <malloc@plt>
   178b8:	cmp	r0, #0
   178bc:	str	r0, [r8, #12]
   178c0:	beq	179ec <sf_gen_vlan+0x28c>
   178c4:	mov	r1, #0
   178c8:	mov	r2, r7
   178cc:	add	r8, r8, #8
   178d0:	bl	ea0 <memset@plt>
   178d4:	cmp	r7, #207	; 0xcf
   178d8:	mov	r3, r5
   178dc:	str	r7, [r8]
   178e0:	bls	179ec <sf_gen_vlan+0x28c>
   178e4:	sub	r0, r7, #208	; 0xd0
   178e8:	cmp	r4, #0
   178ec:	str	r0, [r8]
   178f0:	ldr	r1, [r8, #4]
   178f4:	add	r0, r1, r0
   178f8:	mov	r1, #21
   178fc:	str	r9, [r0, #20]
   17900:	str	r3, [r0, #4]
   17904:	str	r1, [r0, #8]
   17908:	str	r0, [r0, #96]	; 0x60
   1790c:	beq	1793c <sf_gen_vlan+0x1dc>
   17910:	mov	r1, r4
   17914:	ldr	r2, [r1, #44]	; 0x2c
   17918:	add	r3, r1, #84	; 0x54
   1791c:	cmp	r2, #0
   17920:	mov	r2, #84	; 0x54
   17924:	movweq	r2, #60	; 0x3c
   17928:	addeq	r3, r1, #60	; 0x3c
   1792c:	ldr	r1, [r1, r2]
   17930:	str	r0, [r3]
   17934:	cmp	r1, #0
   17938:	bne	17914 <sf_gen_vlan+0x1b4>
   1793c:	ldr	r1, [r4, #44]	; 0x2c
   17940:	cmp	r0, #0
   17944:	clz	r1, r1
   17948:	lsr	r1, r1, #5
   1794c:	str	r1, [r4, #44]	; 0x2c
   17950:	ldr	r1, [r0, #44]	; 0x2c
   17954:	clz	r2, r1
   17958:	lsr	r2, r2, #5
   1795c:	str	r2, [r0, #44]	; 0x2c
   17960:	str	r0, [sp, #8]
   17964:	beq	179ac <sf_gen_vlan+0x24c>
   17968:	cmp	r1, #0
   1796c:	mov	r3, #60	; 0x3c
   17970:	mov	r2, r0
   17974:	movweq	r3, #84	; 0x54
   17978:	ldr	r1, [r2, r3]!
   1797c:	cmp	r1, #0
   17980:	beq	179b0 <sf_gen_vlan+0x250>
   17984:	ldr	r3, [r1, #44]	; 0x2c
   17988:	add	r2, r1, #84	; 0x54
   1798c:	cmp	r3, #0
   17990:	mov	r3, #84	; 0x54
   17994:	movweq	r3, #60	; 0x3c
   17998:	addeq	r2, r1, #60	; 0x3c
   1799c:	ldr	r1, [r1, r3]
   179a0:	cmp	r1, #0
   179a4:	bne	17984 <sf_gen_vlan+0x224>
   179a8:	b	179b0 <sf_gen_vlan+0x250>
   179ac:	add	r2, sp, #8
   179b0:	str	r4, [r2]
   179b4:	ldr	r1, [r0, #44]	; 0x2c
   179b8:	clz	r1, r1
   179bc:	lsr	r1, r1, #5
   179c0:	str	r1, [r0, #44]	; 0x2c
   179c4:	ldr	r1, [r4, #96]	; 0x60
   179c8:	str	r1, [r0, #96]	; 0x60
   179cc:	ldr	r1, [sl, #40]	; 0x28
   179d0:	ldr	r2, [sl, #44]	; 0x2c
   179d4:	add	r1, r1, #4
   179d8:	add	r2, r2, #4
   179dc:	str	r1, [sl, #40]	; 0x28
   179e0:	str	r2, [sl, #44]	; 0x2c
   179e4:	sub	sp, fp, #28
   179e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179ec:	ldr	r0, [pc, #52]	; 17a28 <sf_gen_vlan+0x2c8>
   179f0:	add	r0, pc, r0
   179f4:	bl	214c <sf_bpf_error>
   179f8:	ldr	r0, [pc, #36]	; 17a24 <sf_gen_vlan+0x2c4>
   179fc:	add	r0, pc, r0
   17a00:	bl	214c <sf_bpf_error>
   17a04:	ldr	r0, [pc, #20]	; 17a20 <sf_gen_vlan+0x2c0>
   17a08:	add	r0, pc, r0
   17a0c:	bl	214c <sf_bpf_error>
   17a10:	.word	0x0002e960
   17a14:	.word	0x0002ed5c
   17a18:	.word	0x0002e940
   17a1c:	.word	0x0002ec40
   17a20:	.word	0x00011cad
   17a24:	.word	0x00011ca0
   17a28:	.word	0x00012074

00017a2c <sf_gen_mpls>:
   17a2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a30:	add	fp, sp, #28
   17a34:	sub	sp, sp, #4
   17a38:	ldr	r8, [pc, #1044]	; 17e54 <sf_gen_mpls+0x428>
   17a3c:	mov	r9, r0
   17a40:	add	r8, pc, r8
   17a44:	ldr	r0, [r8, #48]	; 0x30
   17a48:	ldr	r4, [pc, #1032]	; 17e58 <sf_gen_mpls+0x42c>
   17a4c:	add	r4, pc, r4
   17a50:	str	r0, [r4, #4]
   17a54:	ldr	r1, [pc, #1024]	; 17e5c <sf_gen_mpls+0x430>
   17a58:	ldr	r1, [pc, r1]
   17a5c:	ldr	sl, [pc, #1020]	; 17e60 <sf_gen_mpls+0x434>
   17a60:	cmp	r1, #0
   17a64:	add	sl, pc, sl
   17a68:	beq	17ae0 <sf_gen_mpls+0xb4>
   17a6c:	sub	r1, r0, #2
   17a70:	mov	r0, #2
   17a74:	mov	r2, #16
   17a78:	bl	165d8 <gen_load_a>
   17a7c:	mov	r7, r0
   17a80:	ldr	r0, [r8, #92]	; 0x5c
   17a84:	mov	r6, sl
   17a88:	ldr	r5, [r6, r0, lsl #3]!
   17a8c:	cmp	r5, #19
   17a90:	bhi	17b14 <sf_gen_mpls+0xe8>
   17a94:	add	r4, r0, #1
   17a98:	cmp	r0, #15
   17a9c:	str	r4, [r8, #92]	; 0x5c
   17aa0:	bge	17cf8 <sf_gen_mpls+0x2cc>
   17aa4:	mov	r0, #1024	; 0x400
   17aa8:	lsl	r5, r0, r4
   17aac:	mov	r0, r5
   17ab0:	bl	e34 <malloc@plt>
   17ab4:	cmp	r0, #0
   17ab8:	str	r0, [r6, #12]
   17abc:	beq	17cf8 <sf_gen_mpls+0x2cc>
   17ac0:	mov	r1, #0
   17ac4:	mov	r2, r5
   17ac8:	add	r6, r6, #8
   17acc:	bl	ea0 <memset@plt>
   17ad0:	cmp	r5, #19
   17ad4:	str	r5, [r6]
   17ad8:	bhi	17b18 <sf_gen_mpls+0xec>
   17adc:	b	17cf8 <sf_gen_mpls+0x2cc>
   17ae0:	ldr	r1, [r8, #36]	; 0x24
   17ae4:	cmp	r1, #104	; 0x68
   17ae8:	beq	17afc <sf_gen_mpls+0xd0>
   17aec:	cmp	r1, #9
   17af0:	beq	17e00 <sf_gen_mpls+0x3d4>
   17af4:	cmp	r1, #1
   17af8:	bne	17e48 <sf_gen_mpls+0x41c>
   17afc:	movw	r0, #34887	; 0x8847
   17b00:	bl	6fb4 <gen_linktype>
   17b04:	mov	r5, r0
   17b08:	cmp	r9, #0
   17b0c:	bpl	17bdc <sf_gen_mpls+0x1b0>
   17b10:	b	17e14 <sf_gen_mpls+0x3e8>
   17b14:	mov	r4, r0
   17b18:	sub	r1, r5, #20
   17b1c:	mov	r2, #84	; 0x54
   17b20:	str	r1, [r6]
   17b24:	ldr	r0, [r6, #4]
   17b28:	str	r2, [r0, r1]!
   17b2c:	mov	r1, #1
   17b30:	mov	r2, r7
   17b34:	str	r1, [r0, #12]
   17b38:	mov	r1, r2
   17b3c:	ldr	r2, [r2, #16]
   17b40:	cmp	r2, #0
   17b44:	bne	17b38 <sf_gen_mpls+0x10c>
   17b48:	str	r0, [r1, #16]
   17b4c:	mov	r6, sl
   17b50:	ldr	r5, [r6, r4, lsl #3]!
   17b54:	cmp	r5, #207	; 0xcf
   17b58:	bhi	17ba4 <sf_gen_mpls+0x178>
   17b5c:	add	r0, r4, #1
   17b60:	cmp	r4, #15
   17b64:	str	r0, [r8, #92]	; 0x5c
   17b68:	bge	17cf8 <sf_gen_mpls+0x2cc>
   17b6c:	mov	r1, #1024	; 0x400
   17b70:	lsl	r5, r1, r0
   17b74:	mov	r0, r5
   17b78:	bl	e34 <malloc@plt>
   17b7c:	cmp	r0, #0
   17b80:	str	r0, [r6, #12]
   17b84:	beq	17cf8 <sf_gen_mpls+0x2cc>
   17b88:	mov	r1, #0
   17b8c:	mov	r2, r5
   17b90:	add	r6, r6, #8
   17b94:	bl	ea0 <memset@plt>
   17b98:	cmp	r5, #207	; 0xcf
   17b9c:	str	r5, [r6]
   17ba0:	bls	17cf8 <sf_gen_mpls+0x2cc>
   17ba4:	sub	r0, r5, #208	; 0xd0
   17ba8:	str	r0, [r6]
   17bac:	ldr	r1, [r6, #4]
   17bb0:	add	r5, r1, r0
   17bb4:	mov	r1, #0
   17bb8:	mov	r0, #21
   17bbc:	str	r1, [r5, #20]
   17bc0:	str	r7, [r5, #4]
   17bc4:	str	r0, [r5, #8]
   17bc8:	str	r5, [r5, #96]	; 0x60
   17bcc:	ldr	r4, [pc, #656]	; 17e64 <sf_gen_mpls+0x438>
   17bd0:	add	r4, pc, r4
   17bd4:	cmp	r9, #0
   17bd8:	bmi	17e14 <sf_gen_mpls+0x3e8>
   17bdc:	ldr	r1, [r4, #4]
   17be0:	mov	r0, #2
   17be4:	mov	r2, #0
   17be8:	bl	165d8 <gen_load_a>
   17bec:	mov	r6, r0
   17bf0:	ldr	r0, [r8, #92]	; 0x5c
   17bf4:	mov	r4, sl
   17bf8:	ldr	r7, [r4, r0, lsl #3]!
   17bfc:	cmp	r7, #19
   17c00:	bhi	17c54 <sf_gen_mpls+0x228>
   17c04:	mov	r1, r8
   17c08:	add	r8, r0, #1
   17c0c:	cmp	r0, #15
   17c10:	str	r8, [r1, #92]	; 0x5c
   17c14:	bge	17cf8 <sf_gen_mpls+0x2cc>
   17c18:	mov	r0, #1024	; 0x400
   17c1c:	lsl	r7, r0, r8
   17c20:	mov	r0, r7
   17c24:	bl	e34 <malloc@plt>
   17c28:	cmp	r0, #0
   17c2c:	str	r0, [r4, #12]
   17c30:	beq	17cf8 <sf_gen_mpls+0x2cc>
   17c34:	mov	r1, #0
   17c38:	mov	r2, r7
   17c3c:	add	r4, r4, #8
   17c40:	bl	ea0 <memset@plt>
   17c44:	cmp	r7, #19
   17c48:	str	r7, [r4]
   17c4c:	bhi	17c58 <sf_gen_mpls+0x22c>
   17c50:	b	17cf8 <sf_gen_mpls+0x2cc>
   17c54:	mov	r8, r0
   17c58:	sub	r1, r7, #20
   17c5c:	mov	r2, #84	; 0x54
   17c60:	lsl	r9, r9, #12
   17c64:	str	r1, [r4]
   17c68:	ldr	r0, [r4, #4]
   17c6c:	str	r2, [r0, r1]!
   17c70:	movw	r1, #61440	; 0xf000
   17c74:	mov	r2, r6
   17c78:	movt	r1, #65535	; 0xffff
   17c7c:	str	r1, [r0, #12]
   17c80:	mov	r1, r2
   17c84:	ldr	r2, [r2, #16]
   17c88:	cmp	r2, #0
   17c8c:	bne	17c80 <sf_gen_mpls+0x254>
   17c90:	str	r0, [r1, #16]
   17c94:	ldr	r4, [sl, r8, lsl #3]!
   17c98:	cmp	r4, #207	; 0xcf
   17c9c:	bhi	17d04 <sf_gen_mpls+0x2d8>
   17ca0:	ldr	r1, [pc, #456]	; 17e70 <sf_gen_mpls+0x444>
   17ca4:	add	r0, r8, #1
   17ca8:	cmp	r8, #15
   17cac:	add	r1, pc, r1
   17cb0:	str	r0, [r1, #92]	; 0x5c
   17cb4:	bge	17cf8 <sf_gen_mpls+0x2cc>
   17cb8:	mov	r1, #1024	; 0x400
   17cbc:	lsl	r4, r1, r0
   17cc0:	mov	r0, r4
   17cc4:	bl	e34 <malloc@plt>
   17cc8:	cmp	r0, #0
   17ccc:	str	r0, [sl, #12]
   17cd0:	beq	17cf8 <sf_gen_mpls+0x2cc>
   17cd4:	mov	r1, #0
   17cd8:	mov	r2, r4
   17cdc:	add	sl, sl, #8
   17ce0:	bl	ea0 <memset@plt>
   17ce4:	str	r4, [sl]
   17ce8:	cmp	r4, #207	; 0xcf
   17cec:	ldr	r8, [pc, #384]	; 17e74 <sf_gen_mpls+0x448>
   17cf0:	add	r8, pc, r8
   17cf4:	bhi	17d0c <sf_gen_mpls+0x2e0>
   17cf8:	ldr	r0, [pc, #384]	; 17e80 <sf_gen_mpls+0x454>
   17cfc:	add	r0, pc, r0
   17d00:	bl	214c <sf_bpf_error>
   17d04:	ldr	r8, [pc, #352]	; 17e6c <sf_gen_mpls+0x440>
   17d08:	add	r8, pc, r8
   17d0c:	sub	r0, r4, #208	; 0xd0
   17d10:	cmp	r5, #0
   17d14:	str	r0, [sl]
   17d18:	ldr	r1, [sl, #4]
   17d1c:	add	r0, r1, r0
   17d20:	mov	r1, #21
   17d24:	str	r9, [r0, #20]
   17d28:	str	r6, [r0, #4]
   17d2c:	str	r1, [r0, #8]
   17d30:	str	r0, [r0, #96]	; 0x60
   17d34:	beq	17d64 <sf_gen_mpls+0x338>
   17d38:	mov	r1, r5
   17d3c:	ldr	r2, [r1, #44]	; 0x2c
   17d40:	add	r3, r1, #84	; 0x54
   17d44:	cmp	r2, #0
   17d48:	mov	r2, #84	; 0x54
   17d4c:	movweq	r2, #60	; 0x3c
   17d50:	addeq	r3, r1, #60	; 0x3c
   17d54:	ldr	r1, [r1, r2]
   17d58:	str	r0, [r3]
   17d5c:	cmp	r1, #0
   17d60:	bne	17d3c <sf_gen_mpls+0x310>
   17d64:	ldr	r1, [r5, #44]	; 0x2c
   17d68:	cmp	r0, #0
   17d6c:	clz	r1, r1
   17d70:	lsr	r1, r1, #5
   17d74:	str	r1, [r5, #44]	; 0x2c
   17d78:	ldr	r1, [r0, #44]	; 0x2c
   17d7c:	clz	r2, r1
   17d80:	lsr	r2, r2, #5
   17d84:	str	r2, [r0, #44]	; 0x2c
   17d88:	str	r0, [sp]
   17d8c:	ldr	r4, [pc, #228]	; 17e78 <sf_gen_mpls+0x44c>
   17d90:	add	r4, pc, r4
   17d94:	beq	17ddc <sf_gen_mpls+0x3b0>
   17d98:	cmp	r1, #0
   17d9c:	mov	r3, #60	; 0x3c
   17da0:	mov	r2, r0
   17da4:	movweq	r3, #84	; 0x54
   17da8:	ldr	r1, [r2, r3]!
   17dac:	cmp	r1, #0
   17db0:	beq	17de0 <sf_gen_mpls+0x3b4>
   17db4:	ldr	r3, [r1, #44]	; 0x2c
   17db8:	add	r2, r1, #84	; 0x54
   17dbc:	cmp	r3, #0
   17dc0:	mov	r3, #84	; 0x54
   17dc4:	movweq	r3, #60	; 0x3c
   17dc8:	addeq	r2, r1, #60	; 0x3c
   17dcc:	ldr	r1, [r1, r3]
   17dd0:	cmp	r1, #0
   17dd4:	bne	17db4 <sf_gen_mpls+0x388>
   17dd8:	b	17de0 <sf_gen_mpls+0x3b4>
   17ddc:	mov	r2, sp
   17de0:	str	r5, [r2]
   17de4:	ldr	r1, [r0, #44]	; 0x2c
   17de8:	clz	r1, r1
   17dec:	lsr	r1, r1, #5
   17df0:	str	r1, [r0, #44]	; 0x2c
   17df4:	ldr	r1, [r5, #96]	; 0x60
   17df8:	str	r1, [r0, #96]	; 0x60
   17dfc:	b	17e18 <sf_gen_mpls+0x3ec>
   17e00:	movw	r0, #641	; 0x281
   17e04:	bl	6fb4 <gen_linktype>
   17e08:	mov	r5, r0
   17e0c:	cmp	r9, #0
   17e10:	bpl	17bdc <sf_gen_mpls+0x1b0>
   17e14:	mov	r0, r5
   17e18:	ldr	r1, [pc, #92]	; 17e7c <sf_gen_mpls+0x450>
   17e1c:	ldr	r1, [pc, r1]
   17e20:	ldr	r2, [r8, #56]	; 0x38
   17e24:	add	r1, r1, #1
   17e28:	add	r2, r2, #4
   17e2c:	str	r1, [r4]
   17e30:	ldr	r1, [r8, #48]	; 0x30
   17e34:	str	r2, [r8, #56]	; 0x38
   17e38:	add	r1, r1, #4
   17e3c:	str	r1, [r8, #48]	; 0x30
   17e40:	sub	sp, fp, #28
   17e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e48:	ldr	r0, [pc, #24]	; 17e68 <sf_gen_mpls+0x43c>
   17e4c:	add	r0, pc, r0
   17e50:	bl	214c <sf_bpf_error>
   17e54:	.word	0x0002eaa0
   17e58:	.word	0x0002e688
   17e5c:	.word	0x0002e67c
   17e60:	.word	0x0002e9bc
   17e64:	.word	0x0002e504
   17e68:	.word	0x0001188f
   17e6c:	.word	0x0002e7d8
   17e70:	.word	0x0002e834
   17e74:	.word	0x0002e7f0
   17e78:	.word	0x0002e344
   17e7c:	.word	0x0002e2b8
   17e80:	.word	0x00011d68

00017e84 <sf_gen_pppoed>:
   17e84:	movw	r0, #34915	; 0x8863
   17e88:	b	6fb4 <gen_linktype>

00017e8c <sf_gen_pppoes>:
   17e8c:	push	{fp, lr}
   17e90:	mov	fp, sp
   17e94:	movw	r0, #34916	; 0x8864
   17e98:	bl	6fb4 <gen_linktype>
   17e9c:	ldr	r1, [pc, #48]	; 17ed4 <sf_gen_pppoes+0x48>
   17ea0:	mov	r2, #8
   17ea4:	mov	r3, #1
   17ea8:	add	r1, pc, r1
   17eac:	str	r2, [r1, #56]	; 0x38
   17eb0:	strb	r3, [r1, #4]
   17eb4:	ldr	r3, [r1, #48]	; 0x30
   17eb8:	str	r2, [r1, #48]	; 0x30
   17ebc:	ldr	r2, [pc, #20]	; 17ed8 <sf_gen_pppoes+0x4c>
   17ec0:	add	r2, pc, r2
   17ec4:	str	r3, [r2, #4]
   17ec8:	add	r2, r3, #6
   17ecc:	str	r2, [r1, #40]	; 0x28
   17ed0:	pop	{fp, pc}
   17ed4:	.word	0x0002e638
   17ed8:	.word	0x0002e214

00017edc <sf_gen_atmfield_code>:
   17edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ee0:	add	fp, sp, #28
   17ee4:	sub	sp, sp, #4
   17ee8:	sub	r0, r0, #51	; 0x33
   17eec:	cmp	r0, #4
   17ef0:	bhi	181d8 <sf_gen_atmfield_code+0x2fc>
   17ef4:	mov	sl, r1
   17ef8:	add	r1, pc, #12
   17efc:	mov	r9, r3
   17f00:	mov	r4, r2
   17f04:	ldr	r0, [r1, r0, lsl #2]
   17f08:	add	pc, r1, r0
   17f0c:	.word	0x00000014
   17f10:	.word	0x00000124
   17f14:	.word	0x00000064
   17f18:	.word	0x00000100
   17f1c:	.word	0x00000038
   17f20:	ldr	r7, [pc, #740]	; 1820c <sf_gen_atmfield_code+0x330>
   17f24:	add	r7, pc, r7
   17f28:	ldrb	r0, [r7, #8]
   17f2c:	cmp	r0, #0
   17f30:	beq	181e8 <sf_gen_atmfield_code+0x30c>
   17f34:	ldr	r1, [r7, #60]	; 0x3c
   17f38:	cmn	r1, #1
   17f3c:	bne	18024 <sf_gen_atmfield_code+0x148>
   17f40:	b	181d8 <sf_gen_atmfield_code+0x2fc>
   17f44:	ldr	r7, [pc, #736]	; 1822c <sf_gen_atmfield_code+0x350>
   17f48:	add	r7, pc, r7
   17f4c:	ldrb	r0, [r7, #8]
   17f50:	cmp	r0, #0
   17f54:	beq	181f4 <sf_gen_atmfield_code+0x318>
   17f58:	ldrb	r0, [r7, #12]
   17f5c:	cmp	r0, #1
   17f60:	beq	181d8 <sf_gen_atmfield_code+0x2fc>
   17f64:	mov	r0, #1
   17f68:	mov	r1, #0
   17f6c:	b	18028 <sf_gen_atmfield_code+0x14c>
   17f70:	ldr	r5, [pc, #676]	; 1821c <sf_gen_atmfield_code+0x340>
   17f74:	add	r5, pc, r5
   17f78:	ldrb	r0, [r5, #12]
   17f7c:	cmp	r0, #1
   17f80:	beq	181d8 <sf_gen_atmfield_code+0x2fc>
   17f84:	mov	r0, #1
   17f88:	mov	r1, #0
   17f8c:	mov	r2, #16
   17f90:	bl	165d8 <gen_load_a>
   17f94:	mov	r3, r0
   17f98:	ldr	r0, [r5, #92]	; 0x5c
   17f9c:	ldr	r6, [pc, #636]	; 18220 <sf_gen_atmfield_code+0x344>
   17fa0:	mov	r1, r5
   17fa4:	add	r6, pc, r6
   17fa8:	mov	r5, r6
   17fac:	ldr	r7, [r5, r0, lsl #3]!
   17fb0:	cmp	r7, #19
   17fb4:	bhi	1810c <sf_gen_atmfield_code+0x230>
   17fb8:	add	r8, r0, #1
   17fbc:	cmp	r0, #15
   17fc0:	str	r3, [sp]
   17fc4:	str	r8, [r1, #92]	; 0x5c
   17fc8:	bge	181dc <sf_gen_atmfield_code+0x300>
   17fcc:	mov	r0, #1024	; 0x400
   17fd0:	lsl	r7, r0, r8
   17fd4:	mov	r0, r7
   17fd8:	bl	e34 <malloc@plt>
   17fdc:	cmp	r0, #0
   17fe0:	str	r0, [r5, #12]
   17fe4:	beq	181dc <sf_gen_atmfield_code+0x300>
   17fe8:	mov	r1, #0
   17fec:	mov	r2, r7
   17ff0:	add	r5, r5, #8
   17ff4:	bl	ea0 <memset@plt>
   17ff8:	ldr	r3, [sp]
   17ffc:	cmp	r7, #19
   18000:	str	r7, [r5]
   18004:	bhi	18110 <sf_gen_atmfield_code+0x234>
   18008:	b	181dc <sf_gen_atmfield_code+0x300>
   1800c:	ldr	r7, [pc, #532]	; 18228 <sf_gen_atmfield_code+0x34c>
   18010:	add	r7, pc, r7
   18014:	ldr	r0, [r7, #68]	; 0x44
   18018:	cmn	r0, #1
   1801c:	beq	181d8 <sf_gen_atmfield_code+0x2fc>
   18020:	add	r1, r0, #5
   18024:	mov	r0, #1
   18028:	mov	r2, #16
   1802c:	b	18058 <sf_gen_atmfield_code+0x17c>
   18030:	ldr	r7, [pc, #476]	; 18214 <sf_gen_atmfield_code+0x338>
   18034:	add	r7, pc, r7
   18038:	ldrb	r0, [r7, #8]
   1803c:	cmp	r0, #0
   18040:	beq	18200 <sf_gen_atmfield_code+0x324>
   18044:	ldr	r1, [r7, #64]	; 0x40
   18048:	cmn	r1, #1
   1804c:	beq	181d8 <sf_gen_atmfield_code+0x2fc>
   18050:	mov	r0, #1
   18054:	mov	r2, #8
   18058:	bl	165d8 <gen_load_a>
   1805c:	mov	r8, r0
   18060:	ldr	r0, [r7, #92]	; 0x5c
   18064:	ldr	r6, [pc, #420]	; 18210 <sf_gen_atmfield_code+0x334>
   18068:	add	r6, pc, r6
   1806c:	ldr	r5, [r6, r0, lsl #3]!
   18070:	cmp	r5, #207	; 0xcf
   18074:	bhi	180c0 <sf_gen_atmfield_code+0x1e4>
   18078:	add	r1, r0, #1
   1807c:	cmp	r0, #15
   18080:	str	r1, [r7, #92]	; 0x5c
   18084:	bge	181dc <sf_gen_atmfield_code+0x300>
   18088:	mov	r0, #1024	; 0x400
   1808c:	lsl	r5, r0, r1
   18090:	mov	r0, r5
   18094:	bl	e34 <malloc@plt>
   18098:	cmp	r0, #0
   1809c:	str	r0, [r6, #12]
   180a0:	beq	181dc <sf_gen_atmfield_code+0x300>
   180a4:	mov	r1, #0
   180a8:	mov	r2, r5
   180ac:	add	r6, r6, #8
   180b0:	bl	ea0 <memset@plt>
   180b4:	cmp	r5, #207	; 0xcf
   180b8:	str	r5, [r6]
   180bc:	bls	181dc <sf_gen_atmfield_code+0x300>
   180c0:	sub	r0, r5, #208	; 0xd0
   180c4:	orr	r1, r4, #5
   180c8:	str	r0, [r6]
   180cc:	ldr	r2, [r6, #4]
   180d0:	add	r0, r2, r0
   180d4:	str	sl, [r0, #20]
   180d8:	str	r8, [r0, #4]
   180dc:	cmp	r9, #0
   180e0:	str	r1, [r0, #8]
   180e4:	str	r0, [r0, #96]	; 0x60
   180e8:	beq	18104 <sf_gen_atmfield_code+0x228>
   180ec:	orr	r1, r4, #16
   180f0:	cmp	r1, #48	; 0x30
   180f4:	ldreq	r1, [r0, #44]	; 0x2c
   180f8:	clzeq	r1, r1
   180fc:	lsreq	r1, r1, #5
   18100:	streq	r1, [r0, #44]	; 0x2c
   18104:	sub	sp, fp, #28
   18108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1810c:	mov	r8, r0
   18110:	sub	r1, r7, #20
   18114:	mov	r2, #84	; 0x54
   18118:	str	r1, [r5]
   1811c:	ldr	r0, [r5, #4]
   18120:	str	r2, [r0, r1]!
   18124:	mov	r1, #15
   18128:	mov	r2, r3
   1812c:	str	r1, [r0, #12]
   18130:	mov	r1, r2
   18134:	ldr	r2, [r2, #16]
   18138:	cmp	r2, #0
   1813c:	bne	18130 <sf_gen_atmfield_code+0x254>
   18140:	str	r0, [r1, #16]
   18144:	ldr	r5, [r6, r8, lsl #3]!
   18148:	cmp	r5, #207	; 0xcf
   1814c:	bhi	181a8 <sf_gen_atmfield_code+0x2cc>
   18150:	ldr	r1, [pc, #204]	; 18224 <sf_gen_atmfield_code+0x348>
   18154:	add	r0, r8, #1
   18158:	cmp	r8, #15
   1815c:	add	r1, pc, r1
   18160:	str	r0, [r1, #92]	; 0x5c
   18164:	bge	181dc <sf_gen_atmfield_code+0x300>
   18168:	mov	r1, #1024	; 0x400
   1816c:	mov	r7, r3
   18170:	lsl	r5, r1, r0
   18174:	mov	r0, r5
   18178:	bl	e34 <malloc@plt>
   1817c:	cmp	r0, #0
   18180:	str	r0, [r6, #12]
   18184:	beq	181dc <sf_gen_atmfield_code+0x300>
   18188:	mov	r1, #0
   1818c:	mov	r2, r5
   18190:	add	r6, r6, #8
   18194:	bl	ea0 <memset@plt>
   18198:	cmp	r5, #207	; 0xcf
   1819c:	mov	r3, r7
   181a0:	str	r5, [r6]
   181a4:	bls	181dc <sf_gen_atmfield_code+0x300>
   181a8:	sub	r0, r5, #208	; 0xd0
   181ac:	orr	r1, r4, #5
   181b0:	str	r0, [r6]
   181b4:	ldr	r2, [r6, #4]
   181b8:	add	r0, r2, r0
   181bc:	str	sl, [r0, #20]
   181c0:	str	r3, [r0, #4]
   181c4:	cmp	r9, #0
   181c8:	str	r1, [r0, #8]
   181cc:	str	r0, [r0, #96]	; 0x60
   181d0:	bne	180ec <sf_gen_atmfield_code+0x210>
   181d4:	b	18104 <sf_gen_atmfield_code+0x228>
   181d8:	bl	f24 <abort@plt>
   181dc:	ldr	r0, [pc, #52]	; 18218 <sf_gen_atmfield_code+0x33c>
   181e0:	add	r0, pc, r0
   181e4:	bl	214c <sf_bpf_error>
   181e8:	ldr	r0, [pc, #64]	; 18230 <sf_gen_atmfield_code+0x354>
   181ec:	add	r0, pc, r0
   181f0:	bl	214c <sf_bpf_error>
   181f4:	ldr	r0, [pc, #60]	; 18238 <sf_gen_atmfield_code+0x35c>
   181f8:	add	r0, pc, r0
   181fc:	bl	214c <sf_bpf_error>
   18200:	ldr	r0, [pc, #44]	; 18234 <sf_gen_atmfield_code+0x358>
   18204:	add	r0, pc, r0
   18208:	bl	214c <sf_bpf_error>
   1820c:	.word	0x0002e5bc
   18210:	.word	0x0002e3b8
   18214:	.word	0x0002e4ac
   18218:	.word	0x00011884
   1821c:	.word	0x0002e56c
   18220:	.word	0x0002e47c
   18224:	.word	0x0002e384
   18228:	.word	0x0002e4d0
   1822c:	.word	0x0002e598
   18230:	.word	0x00011515
   18234:	.word	0x0001151d
   18238:	.word	0x00011549

0001823c <sf_gen_atmtype_abbrev>:
   1823c:	push	{r4, r5, r6, sl, fp, lr}
   18240:	add	fp, sp, #16
   18244:	sub	sp, sp, #8
   18248:	sub	r0, r0, #22
   1824c:	cmp	r0, #9
   18250:	bhi	188f8 <sf_gen_atmtype_abbrev+0x6bc>
   18254:	add	r1, pc, #4
   18258:	ldr	r0, [r1, r0, lsl #2]
   1825c:	add	pc, r1, r0
   18260:	.word	0x00000028
   18264:	.word	0x00000324
   18268:	.word	0x00000238
   1826c:	.word	0x00000114
   18270:	.word	0x0000055c
   18274:	.word	0x00000410
   18278:	.word	0x00000698
   1827c:	.word	0x00000698
   18280:	.word	0x000004fc
   18284:	.word	0x00000200
   18288:	ldr	r0, [pc, #1740]	; 1895c <sf_gen_atmtype_abbrev+0x720>
   1828c:	add	r0, pc, r0
   18290:	ldrb	r0, [r0, #8]
   18294:	cmp	r0, #0
   18298:	beq	188fc <sf_gen_atmtype_abbrev+0x6c0>
   1829c:	mov	r0, #51	; 0x33
   182a0:	mov	r1, #0
   182a4:	mov	r2, #16
   182a8:	mov	r3, #0
   182ac:	bl	17edc <sf_gen_atmfield_code>
   182b0:	mov	r5, r0
   182b4:	mov	r0, #52	; 0x34
   182b8:	mov	r1, #1
   182bc:	mov	r2, #16
   182c0:	mov	r3, #0
   182c4:	bl	17edc <sf_gen_atmfield_code>
   182c8:	cmp	r5, #0
   182cc:	beq	18300 <sf_gen_atmtype_abbrev+0xc4>
   182d0:	ldr	r1, [r0, #96]	; 0x60
   182d4:	mov	r2, r5
   182d8:	ldr	r3, [r2, #44]	; 0x2c
   182dc:	add	r4, r2, #84	; 0x54
   182e0:	cmp	r3, #0
   182e4:	mov	r3, #84	; 0x54
   182e8:	movweq	r3, #60	; 0x3c
   182ec:	addeq	r4, r2, #60	; 0x3c
   182f0:	ldr	r2, [r2, r3]
   182f4:	str	r1, [r4]
   182f8:	cmp	r2, #0
   182fc:	bne	182d8 <sf_gen_atmtype_abbrev+0x9c>
   18300:	ldr	r1, [r5, #44]	; 0x2c
   18304:	cmp	r0, #0
   18308:	clz	r1, r1
   1830c:	lsr	r1, r1, #5
   18310:	str	r1, [r5, #44]	; 0x2c
   18314:	ldr	r2, [r0, #44]	; 0x2c
   18318:	clz	r1, r2
   1831c:	lsr	r1, r1, #5
   18320:	str	r1, [r0, #44]	; 0x2c
   18324:	str	r0, [sp, #4]
   18328:	beq	188d0 <sf_gen_atmtype_abbrev+0x694>
   1832c:	cmp	r2, #0
   18330:	mov	r2, #60	; 0x3c
   18334:	add	r1, r0, #60	; 0x3c
   18338:	movweq	r2, #84	; 0x54
   1833c:	addeq	r1, r0, #84	; 0x54
   18340:	ldr	r2, [r0, r2]
   18344:	cmp	r2, #0
   18348:	beq	188d4 <sf_gen_atmtype_abbrev+0x698>
   1834c:	ldr	r3, [r2, #44]	; 0x2c
   18350:	add	r1, r2, #84	; 0x54
   18354:	cmp	r3, #0
   18358:	mov	r3, #84	; 0x54
   1835c:	movweq	r3, #60	; 0x3c
   18360:	addeq	r1, r2, #60	; 0x3c
   18364:	ldr	r2, [r2, r3]
   18368:	cmp	r2, #0
   1836c:	bne	1834c <sf_gen_atmtype_abbrev+0x110>
   18370:	b	188d4 <sf_gen_atmtype_abbrev+0x698>
   18374:	ldr	r0, [pc, #1516]	; 18968 <sf_gen_atmtype_abbrev+0x72c>
   18378:	add	r0, pc, r0
   1837c:	ldrb	r0, [r0, #8]
   18380:	cmp	r0, #0
   18384:	beq	18908 <sf_gen_atmtype_abbrev+0x6cc>
   18388:	mov	r0, #51	; 0x33
   1838c:	mov	r1, #0
   18390:	mov	r2, #16
   18394:	mov	r3, #0
   18398:	bl	17edc <sf_gen_atmfield_code>
   1839c:	mov	r4, r0
   183a0:	mov	r0, #52	; 0x34
   183a4:	mov	r1, #4
   183a8:	mov	r2, #16
   183ac:	mov	r3, #0
   183b0:	bl	17edc <sf_gen_atmfield_code>
   183b4:	cmp	r4, #0
   183b8:	beq	183ec <sf_gen_atmtype_abbrev+0x1b0>
   183bc:	ldr	r1, [r0, #96]	; 0x60
   183c0:	mov	r2, r4
   183c4:	ldr	r3, [r2, #44]	; 0x2c
   183c8:	add	r5, r2, #84	; 0x54
   183cc:	cmp	r3, #0
   183d0:	mov	r3, #84	; 0x54
   183d4:	movweq	r3, #60	; 0x3c
   183d8:	addeq	r5, r2, #60	; 0x3c
   183dc:	ldr	r2, [r2, r3]
   183e0:	str	r1, [r5]
   183e4:	cmp	r2, #0
   183e8:	bne	183c4 <sf_gen_atmtype_abbrev+0x188>
   183ec:	ldr	r1, [r4, #44]	; 0x2c
   183f0:	cmp	r0, #0
   183f4:	clz	r1, r1
   183f8:	lsr	r1, r1, #5
   183fc:	str	r1, [r4, #44]	; 0x2c
   18400:	ldr	r2, [r0, #44]	; 0x2c
   18404:	clz	r1, r2
   18408:	lsr	r1, r1, #5
   1840c:	str	r1, [r0, #44]	; 0x2c
   18410:	str	r0, [sp, #4]
   18414:	beq	188a8 <sf_gen_atmtype_abbrev+0x66c>
   18418:	cmp	r2, #0
   1841c:	mov	r2, #60	; 0x3c
   18420:	add	r1, r0, #60	; 0x3c
   18424:	movweq	r2, #84	; 0x54
   18428:	addeq	r1, r0, #84	; 0x54
   1842c:	ldr	r2, [r0, r2]
   18430:	cmp	r2, #0
   18434:	beq	188ac <sf_gen_atmtype_abbrev+0x670>
   18438:	ldr	r3, [r2, #44]	; 0x2c
   1843c:	add	r1, r2, #84	; 0x54
   18440:	cmp	r3, #0
   18444:	mov	r3, #84	; 0x54
   18448:	movweq	r3, #60	; 0x3c
   1844c:	addeq	r1, r2, #60	; 0x3c
   18450:	ldr	r2, [r2, r3]
   18454:	cmp	r2, #0
   18458:	bne	18438 <sf_gen_atmtype_abbrev+0x1fc>
   1845c:	b	188ac <sf_gen_atmtype_abbrev+0x670>
   18460:	ldr	r4, [pc, #1296]	; 18978 <sf_gen_atmtype_abbrev+0x73c>
   18464:	add	r4, pc, r4
   18468:	ldrb	r0, [r4, #8]
   1846c:	cmp	r0, #0
   18470:	beq	18914 <sf_gen_atmtype_abbrev+0x6d8>
   18474:	mov	r0, #53	; 0x35
   18478:	mov	r1, #2
   1847c:	mov	r2, #16
   18480:	mov	r3, #0
   18484:	mov	r5, #0
   18488:	bl	17edc <sf_gen_atmfield_code>
   1848c:	strb	r5, [r4]
   18490:	sub	sp, fp, #16
   18494:	pop	{r4, r5, r6, sl, fp, pc}
   18498:	ldr	r0, [pc, #1220]	; 18964 <sf_gen_atmtype_abbrev+0x728>
   1849c:	add	r0, pc, r0
   184a0:	ldrb	r0, [r0, #8]
   184a4:	cmp	r0, #0
   184a8:	beq	18920 <sf_gen_atmtype_abbrev+0x6e4>
   184ac:	mov	r0, #51	; 0x33
   184b0:	mov	r1, #0
   184b4:	mov	r2, #16
   184b8:	mov	r3, #0
   184bc:	bl	17edc <sf_gen_atmfield_code>
   184c0:	mov	r4, r0
   184c4:	mov	r0, #52	; 0x34
   184c8:	mov	r1, #3
   184cc:	mov	r2, #16
   184d0:	mov	r3, #0
   184d4:	bl	17edc <sf_gen_atmfield_code>
   184d8:	cmp	r4, #0
   184dc:	beq	18510 <sf_gen_atmtype_abbrev+0x2d4>
   184e0:	ldr	r1, [r0, #96]	; 0x60
   184e4:	mov	r2, r4
   184e8:	ldr	r3, [r2, #44]	; 0x2c
   184ec:	add	r5, r2, #84	; 0x54
   184f0:	cmp	r3, #0
   184f4:	mov	r3, #84	; 0x54
   184f8:	movweq	r3, #60	; 0x3c
   184fc:	addeq	r5, r2, #60	; 0x3c
   18500:	ldr	r2, [r2, r3]
   18504:	str	r1, [r5]
   18508:	cmp	r2, #0
   1850c:	bne	184e8 <sf_gen_atmtype_abbrev+0x2ac>
   18510:	ldr	r1, [r4, #44]	; 0x2c
   18514:	cmp	r0, #0
   18518:	clz	r1, r1
   1851c:	lsr	r1, r1, #5
   18520:	str	r1, [r4, #44]	; 0x2c
   18524:	ldr	r2, [r0, #44]	; 0x2c
   18528:	clz	r1, r2
   1852c:	lsr	r1, r1, #5
   18530:	str	r1, [r0, #44]	; 0x2c
   18534:	str	r0, [sp, #4]
   18538:	beq	188a8 <sf_gen_atmtype_abbrev+0x66c>
   1853c:	cmp	r2, #0
   18540:	mov	r2, #60	; 0x3c
   18544:	add	r1, r0, #60	; 0x3c
   18548:	movweq	r2, #84	; 0x54
   1854c:	addeq	r1, r0, #84	; 0x54
   18550:	ldr	r2, [r0, r2]
   18554:	cmp	r2, #0
   18558:	beq	188ac <sf_gen_atmtype_abbrev+0x670>
   1855c:	ldr	r3, [r2, #44]	; 0x2c
   18560:	add	r1, r2, #84	; 0x54
   18564:	cmp	r3, #0
   18568:	mov	r3, #84	; 0x54
   1856c:	movweq	r3, #60	; 0x3c
   18570:	addeq	r1, r2, #60	; 0x3c
   18574:	ldr	r2, [r2, r3]
   18578:	cmp	r2, #0
   1857c:	bne	1855c <sf_gen_atmtype_abbrev+0x320>
   18580:	b	188ac <sf_gen_atmtype_abbrev+0x670>
   18584:	ldr	r0, [pc, #980]	; 18960 <sf_gen_atmtype_abbrev+0x724>
   18588:	add	r0, pc, r0
   1858c:	ldrb	r0, [r0, #8]
   18590:	cmp	r0, #0
   18594:	beq	1892c <sf_gen_atmtype_abbrev+0x6f0>
   18598:	mov	r0, #51	; 0x33
   1859c:	mov	r1, #0
   185a0:	mov	r2, #16
   185a4:	mov	r3, #0
   185a8:	bl	17edc <sf_gen_atmfield_code>
   185ac:	mov	r4, r0
   185b0:	mov	r0, #52	; 0x34
   185b4:	mov	r1, #2
   185b8:	mov	r2, #16
   185bc:	mov	r3, #0
   185c0:	bl	17edc <sf_gen_atmfield_code>
   185c4:	cmp	r4, #0
   185c8:	beq	185fc <sf_gen_atmtype_abbrev+0x3c0>
   185cc:	ldr	r1, [r0, #96]	; 0x60
   185d0:	mov	r2, r4
   185d4:	ldr	r3, [r2, #44]	; 0x2c
   185d8:	add	r5, r2, #84	; 0x54
   185dc:	cmp	r3, #0
   185e0:	mov	r3, #84	; 0x54
   185e4:	movweq	r3, #60	; 0x3c
   185e8:	addeq	r5, r2, #60	; 0x3c
   185ec:	ldr	r2, [r2, r3]
   185f0:	str	r1, [r5]
   185f4:	cmp	r2, #0
   185f8:	bne	185d4 <sf_gen_atmtype_abbrev+0x398>
   185fc:	ldr	r1, [r4, #44]	; 0x2c
   18600:	cmp	r0, #0
   18604:	clz	r1, r1
   18608:	lsr	r1, r1, #5
   1860c:	str	r1, [r4, #44]	; 0x2c
   18610:	ldr	r2, [r0, #44]	; 0x2c
   18614:	clz	r1, r2
   18618:	lsr	r1, r1, #5
   1861c:	str	r1, [r0, #44]	; 0x2c
   18620:	str	r0, [sp, #4]
   18624:	beq	188a8 <sf_gen_atmtype_abbrev+0x66c>
   18628:	cmp	r2, #0
   1862c:	mov	r2, #60	; 0x3c
   18630:	add	r1, r0, #60	; 0x3c
   18634:	movweq	r2, #84	; 0x54
   18638:	addeq	r1, r0, #84	; 0x54
   1863c:	ldr	r2, [r0, r2]
   18640:	cmp	r2, #0
   18644:	beq	188ac <sf_gen_atmtype_abbrev+0x670>
   18648:	ldr	r3, [r2, #44]	; 0x2c
   1864c:	add	r1, r2, #84	; 0x54
   18650:	cmp	r3, #0
   18654:	mov	r3, #84	; 0x54
   18658:	movweq	r3, #60	; 0x3c
   1865c:	addeq	r1, r2, #60	; 0x3c
   18660:	ldr	r2, [r2, r3]
   18664:	cmp	r2, #0
   18668:	bne	18648 <sf_gen_atmtype_abbrev+0x40c>
   1866c:	b	188ac <sf_gen_atmtype_abbrev+0x670>
   18670:	ldr	r0, [pc, #760]	; 18970 <sf_gen_atmtype_abbrev+0x734>
   18674:	add	r0, pc, r0
   18678:	ldrb	r0, [r0, #8]
   1867c:	cmp	r0, #0
   18680:	beq	18938 <sf_gen_atmtype_abbrev+0x6fc>
   18684:	mov	r0, #51	; 0x33
   18688:	mov	r1, #0
   1868c:	mov	r2, #16
   18690:	mov	r3, #0
   18694:	bl	17edc <sf_gen_atmfield_code>
   18698:	mov	r4, r0
   1869c:	mov	r0, #52	; 0x34
   186a0:	mov	r1, #16
   186a4:	mov	r2, #16
   186a8:	mov	r3, #0
   186ac:	bl	17edc <sf_gen_atmfield_code>
   186b0:	cmp	r4, #0
   186b4:	beq	186e8 <sf_gen_atmtype_abbrev+0x4ac>
   186b8:	ldr	r1, [r0, #96]	; 0x60
   186bc:	mov	r2, r4
   186c0:	ldr	r3, [r2, #44]	; 0x2c
   186c4:	add	r5, r2, #84	; 0x54
   186c8:	cmp	r3, #0
   186cc:	mov	r3, #84	; 0x54
   186d0:	movweq	r3, #60	; 0x3c
   186d4:	addeq	r5, r2, #60	; 0x3c
   186d8:	ldr	r2, [r2, r3]
   186dc:	str	r1, [r5]
   186e0:	cmp	r2, #0
   186e4:	bne	186c0 <sf_gen_atmtype_abbrev+0x484>
   186e8:	ldr	r1, [r4, #44]	; 0x2c
   186ec:	cmp	r0, #0
   186f0:	clz	r1, r1
   186f4:	lsr	r1, r1, #5
   186f8:	str	r1, [r4, #44]	; 0x2c
   186fc:	ldr	r2, [r0, #44]	; 0x2c
   18700:	clz	r1, r2
   18704:	lsr	r1, r1, #5
   18708:	str	r1, [r0, #44]	; 0x2c
   1870c:	str	r0, [sp, #4]
   18710:	beq	188a8 <sf_gen_atmtype_abbrev+0x66c>
   18714:	cmp	r2, #0
   18718:	mov	r2, #60	; 0x3c
   1871c:	add	r1, r0, #60	; 0x3c
   18720:	movweq	r2, #84	; 0x54
   18724:	addeq	r1, r0, #84	; 0x54
   18728:	ldr	r2, [r0, r2]
   1872c:	cmp	r2, #0
   18730:	beq	188ac <sf_gen_atmtype_abbrev+0x670>
   18734:	ldr	r3, [r2, #44]	; 0x2c
   18738:	add	r1, r2, #84	; 0x54
   1873c:	cmp	r3, #0
   18740:	mov	r3, #84	; 0x54
   18744:	movweq	r3, #60	; 0x3c
   18748:	addeq	r1, r2, #60	; 0x3c
   1874c:	ldr	r2, [r2, r3]
   18750:	cmp	r2, #0
   18754:	bne	18734 <sf_gen_atmtype_abbrev+0x4f8>
   18758:	b	188ac <sf_gen_atmtype_abbrev+0x670>
   1875c:	ldr	r4, [pc, #528]	; 18974 <sf_gen_atmtype_abbrev+0x738>
   18760:	add	r4, pc, r4
   18764:	ldrb	r0, [r4, #8]
   18768:	cmp	r0, #0
   1876c:	beq	18944 <sf_gen_atmtype_abbrev+0x708>
   18770:	mov	r0, #53	; 0x35
   18774:	mov	r1, #1
   18778:	mov	r2, #16
   1877c:	mov	r3, #0
   18780:	mov	r5, #1
   18784:	mov	r6, #0
   18788:	bl	17edc <sf_gen_atmfield_code>
   1878c:	strb	r5, [r4]
   18790:	mov	r1, #3
   18794:	add	ip, r4, #40	; 0x28
   18798:	ldr	r2, [r4, #68]	; 0x44
   1879c:	add	r3, r2, #2
   187a0:	add	r5, r2, #16
   187a4:	add	r2, r2, #14
   187a8:	stm	ip, {r2, r5, r6}
   187ac:	str	r3, [r4, #52]	; 0x34
   187b0:	str	r1, [r4, #56]	; 0x38
   187b4:	sub	sp, fp, #16
   187b8:	pop	{r4, r5, r6, sl, fp, pc}
   187bc:	ldr	r0, [pc, #424]	; 1896c <sf_gen_atmtype_abbrev+0x730>
   187c0:	add	r0, pc, r0
   187c4:	ldrb	r0, [r0, #8]
   187c8:	cmp	r0, #0
   187cc:	beq	18950 <sf_gen_atmtype_abbrev+0x714>
   187d0:	mov	r0, #51	; 0x33
   187d4:	mov	r1, #0
   187d8:	mov	r2, #16
   187dc:	mov	r3, #0
   187e0:	bl	17edc <sf_gen_atmfield_code>
   187e4:	mov	r4, r0
   187e8:	mov	r0, #52	; 0x34
   187ec:	mov	r1, #5
   187f0:	mov	r2, #16
   187f4:	mov	r3, #0
   187f8:	bl	17edc <sf_gen_atmfield_code>
   187fc:	cmp	r4, #0
   18800:	beq	18834 <sf_gen_atmtype_abbrev+0x5f8>
   18804:	ldr	r1, [r0, #96]	; 0x60
   18808:	mov	r2, r4
   1880c:	ldr	r3, [r2, #44]	; 0x2c
   18810:	add	r5, r2, #84	; 0x54
   18814:	cmp	r3, #0
   18818:	mov	r3, #84	; 0x54
   1881c:	movweq	r3, #60	; 0x3c
   18820:	addeq	r5, r2, #60	; 0x3c
   18824:	ldr	r2, [r2, r3]
   18828:	str	r1, [r5]
   1882c:	cmp	r2, #0
   18830:	bne	1880c <sf_gen_atmtype_abbrev+0x5d0>
   18834:	ldr	r1, [r4, #44]	; 0x2c
   18838:	cmp	r0, #0
   1883c:	clz	r1, r1
   18840:	lsr	r1, r1, #5
   18844:	str	r1, [r4, #44]	; 0x2c
   18848:	ldr	r2, [r0, #44]	; 0x2c
   1884c:	clz	r1, r2
   18850:	lsr	r1, r1, #5
   18854:	str	r1, [r0, #44]	; 0x2c
   18858:	str	r0, [sp, #4]
   1885c:	beq	188a8 <sf_gen_atmtype_abbrev+0x66c>
   18860:	cmp	r2, #0
   18864:	mov	r2, #60	; 0x3c
   18868:	add	r1, r0, #60	; 0x3c
   1886c:	movweq	r2, #84	; 0x54
   18870:	addeq	r1, r0, #84	; 0x54
   18874:	ldr	r2, [r0, r2]
   18878:	cmp	r2, #0
   1887c:	beq	188ac <sf_gen_atmtype_abbrev+0x670>
   18880:	ldr	r3, [r2, #44]	; 0x2c
   18884:	add	r1, r2, #84	; 0x54
   18888:	cmp	r3, #0
   1888c:	mov	r3, #84	; 0x54
   18890:	movweq	r3, #60	; 0x3c
   18894:	addeq	r1, r2, #60	; 0x3c
   18898:	ldr	r2, [r2, r3]
   1889c:	cmp	r2, #0
   188a0:	bne	18880 <sf_gen_atmtype_abbrev+0x644>
   188a4:	b	188ac <sf_gen_atmtype_abbrev+0x670>
   188a8:	add	r1, sp, #4
   188ac:	str	r4, [r1]
   188b0:	ldr	r1, [r0, #44]	; 0x2c
   188b4:	clz	r1, r1
   188b8:	lsr	r1, r1, #5
   188bc:	str	r1, [r0, #44]	; 0x2c
   188c0:	ldr	r1, [r4, #96]	; 0x60
   188c4:	str	r1, [r0, #96]	; 0x60
   188c8:	sub	sp, fp, #16
   188cc:	pop	{r4, r5, r6, sl, fp, pc}
   188d0:	add	r1, sp, #4
   188d4:	str	r5, [r1]
   188d8:	ldr	r1, [r0, #44]	; 0x2c
   188dc:	clz	r1, r1
   188e0:	lsr	r1, r1, #5
   188e4:	str	r1, [r0, #44]	; 0x2c
   188e8:	ldr	r1, [r5, #96]	; 0x60
   188ec:	str	r1, [r0, #96]	; 0x60
   188f0:	sub	sp, fp, #16
   188f4:	pop	{r4, r5, r6, sl, fp, pc}
   188f8:	bl	f24 <abort@plt>
   188fc:	ldr	r0, [pc, #120]	; 1897c <sf_gen_atmtype_abbrev+0x740>
   18900:	add	r0, pc, r0
   18904:	bl	214c <sf_bpf_error>
   18908:	ldr	r0, [pc, #120]	; 18988 <sf_gen_atmtype_abbrev+0x74c>
   1890c:	add	r0, pc, r0
   18910:	bl	214c <sf_bpf_error>
   18914:	ldr	r0, [pc, #124]	; 18998 <sf_gen_atmtype_abbrev+0x75c>
   18918:	add	r0, pc, r0
   1891c:	bl	214c <sf_bpf_error>
   18920:	ldr	r0, [pc, #92]	; 18984 <sf_gen_atmtype_abbrev+0x748>
   18924:	add	r0, pc, r0
   18928:	bl	214c <sf_bpf_error>
   1892c:	ldr	r0, [pc, #76]	; 18980 <sf_gen_atmtype_abbrev+0x744>
   18930:	add	r0, pc, r0
   18934:	bl	214c <sf_bpf_error>
   18938:	ldr	r0, [pc, #80]	; 18990 <sf_gen_atmtype_abbrev+0x754>
   1893c:	add	r0, pc, r0
   18940:	bl	214c <sf_bpf_error>
   18944:	ldr	r0, [pc, #72]	; 18994 <sf_gen_atmtype_abbrev+0x758>
   18948:	add	r0, pc, r0
   1894c:	bl	214c <sf_bpf_error>
   18950:	ldr	r0, [pc, #52]	; 1898c <sf_gen_atmtype_abbrev+0x750>
   18954:	add	r0, pc, r0
   18958:	bl	214c <sf_bpf_error>
   1895c:	.word	0x0002e254
   18960:	.word	0x0002df58
   18964:	.word	0x0002e044
   18968:	.word	0x0002e168
   1896c:	.word	0x0002dd20
   18970:	.word	0x0002de6c
   18974:	.word	0x0002dd80
   18978:	.word	0x0002e07c
   1897c:	.word	0x00010e65
   18980:	.word	0x00010e57
   18984:	.word	0x00010e83
   18988:	.word	0x00010ebe
   1898c:	.word	0x00010e99
   18990:	.word	0x00010ed0
   18994:	.word	0x00010ee6
   18998:	.word	0x00010f37

0001899c <sf_gen_mtp2type_abbrev>:
   1899c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189a0:	add	fp, sp, #28
   189a4:	sub	sp, sp, #12
   189a8:	cmp	r0, #24
   189ac:	beq	18ae0 <sf_gen_mtp2type_abbrev+0x144>
   189b0:	cmp	r0, #23
   189b4:	beq	18a54 <sf_gen_mtp2type_abbrev+0xb8>
   189b8:	cmp	r0, #22
   189bc:	bne	191b0 <sf_gen_mtp2type_abbrev+0x814>
   189c0:	ldr	r3, [pc, #2064]	; 191d8 <sf_gen_mtp2type_abbrev+0x83c>
   189c4:	add	r3, pc, r3
   189c8:	ldr	r0, [r3, #36]	; 0x24
   189cc:	sub	r1, r0, #139	; 0x8b
   189d0:	cmp	r1, #2
   189d4:	bcc	189e0 <sf_gen_mtp2type_abbrev+0x44>
   189d8:	cmp	r0, #197	; 0xc5
   189dc:	bne	191b4 <sf_gen_mtp2type_abbrev+0x818>
   189e0:	ldr	sl, [r3, #72]	; 0x48
   189e4:	ldr	r0, [r3, #92]	; 0x5c
   189e8:	ldr	r8, [pc, #2028]	; 191dc <sf_gen_mtp2type_abbrev+0x840>
   189ec:	add	r8, pc, r8
   189f0:	mov	r5, r8
   189f4:	ldr	r4, [r5, r0, lsl #3]!
   189f8:	cmp	r4, #19
   189fc:	bhi	18b74 <sf_gen_mtp2type_abbrev+0x1d8>
   18a00:	add	r6, r0, #1
   18a04:	cmp	r0, #15
   18a08:	str	r6, [r3, #92]	; 0x5c
   18a0c:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18a10:	mov	r0, #1024	; 0x400
   18a14:	mov	r7, r3
   18a18:	lsl	r4, r0, r6
   18a1c:	mov	r0, r4
   18a20:	bl	e34 <malloc@plt>
   18a24:	cmp	r0, #0
   18a28:	str	r0, [r5, #12]
   18a2c:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18a30:	mov	r1, #0
   18a34:	mov	r2, r4
   18a38:	add	r5, r5, #8
   18a3c:	bl	ea0 <memset@plt>
   18a40:	cmp	r4, #19
   18a44:	mov	r3, r7
   18a48:	str	r4, [r5]
   18a4c:	bhi	18b78 <sf_gen_mtp2type_abbrev+0x1dc>
   18a50:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18a54:	ldr	r8, [pc, #1924]	; 191e0 <sf_gen_mtp2type_abbrev+0x844>
   18a58:	add	r8, pc, r8
   18a5c:	ldr	r0, [r8, #36]	; 0x24
   18a60:	sub	r1, r0, #139	; 0x8b
   18a64:	cmp	r1, #2
   18a68:	bcc	18a74 <sf_gen_mtp2type_abbrev+0xd8>
   18a6c:	cmp	r0, #197	; 0xc5
   18a70:	bne	191c0 <sf_gen_mtp2type_abbrev+0x824>
   18a74:	ldr	r7, [r8, #72]	; 0x48
   18a78:	ldr	r0, [r8, #92]	; 0x5c
   18a7c:	ldr	sl, [pc, #1888]	; 191e4 <sf_gen_mtp2type_abbrev+0x848>
   18a80:	add	sl, pc, sl
   18a84:	mov	r5, sl
   18a88:	ldr	r4, [r5, r0, lsl #3]!
   18a8c:	cmp	r4, #19
   18a90:	bhi	18bf4 <sf_gen_mtp2type_abbrev+0x258>
   18a94:	add	r6, r0, #1
   18a98:	cmp	r0, #15
   18a9c:	str	r6, [r8, #92]	; 0x5c
   18aa0:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18aa4:	mov	r0, #1024	; 0x400
   18aa8:	lsl	r4, r0, r6
   18aac:	mov	r0, r4
   18ab0:	bl	e34 <malloc@plt>
   18ab4:	cmp	r0, #0
   18ab8:	str	r0, [r5, #12]
   18abc:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18ac0:	mov	r1, #0
   18ac4:	mov	r2, r4
   18ac8:	add	r5, r5, #8
   18acc:	bl	ea0 <memset@plt>
   18ad0:	cmp	r4, #19
   18ad4:	str	r4, [r5]
   18ad8:	bhi	18bf8 <sf_gen_mtp2type_abbrev+0x25c>
   18adc:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18ae0:	ldr	r3, [pc, #1808]	; 191f8 <sf_gen_mtp2type_abbrev+0x85c>
   18ae4:	add	r3, pc, r3
   18ae8:	ldr	r0, [r3, #36]	; 0x24
   18aec:	sub	r1, r0, #139	; 0x8b
   18af0:	cmp	r1, #2
   18af4:	bcc	18b00 <sf_gen_mtp2type_abbrev+0x164>
   18af8:	cmp	r0, #197	; 0xc5
   18afc:	bne	191cc <sf_gen_mtp2type_abbrev+0x830>
   18b00:	ldr	sl, [r3, #72]	; 0x48
   18b04:	ldr	r0, [r3, #92]	; 0x5c
   18b08:	ldr	r8, [pc, #1772]	; 191fc <sf_gen_mtp2type_abbrev+0x860>
   18b0c:	add	r8, pc, r8
   18b10:	mov	r5, r8
   18b14:	ldr	r4, [r5, r0, lsl #3]!
   18b18:	cmp	r4, #19
   18b1c:	bhi	18d18 <sf_gen_mtp2type_abbrev+0x37c>
   18b20:	add	r6, r0, #1
   18b24:	cmp	r0, #15
   18b28:	str	r6, [r3, #92]	; 0x5c
   18b2c:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18b30:	mov	r0, #1024	; 0x400
   18b34:	mov	r7, r3
   18b38:	lsl	r4, r0, r6
   18b3c:	mov	r0, r4
   18b40:	bl	e34 <malloc@plt>
   18b44:	cmp	r0, #0
   18b48:	str	r0, [r5, #12]
   18b4c:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18b50:	mov	r1, #0
   18b54:	mov	r2, r4
   18b58:	add	r5, r5, #8
   18b5c:	bl	ea0 <memset@plt>
   18b60:	cmp	r4, #19
   18b64:	mov	r3, r7
   18b68:	str	r4, [r5]
   18b6c:	bhi	18d1c <sf_gen_mtp2type_abbrev+0x380>
   18b70:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18b74:	mov	r6, r0
   18b78:	sub	r0, r4, #20
   18b7c:	mov	r1, #48	; 0x30
   18b80:	mov	r7, r8
   18b84:	str	r0, [r5]
   18b88:	ldr	r9, [r5, #4]
   18b8c:	str	r1, [r9, r0]!
   18b90:	str	sl, [r9, #12]
   18b94:	ldr	r4, [r7, r6, lsl #3]!
   18b98:	cmp	r4, #19
   18b9c:	bhi	18c70 <sf_gen_mtp2type_abbrev+0x2d4>
   18ba0:	add	r5, r6, #1
   18ba4:	cmp	r6, #15
   18ba8:	str	r5, [r3, #92]	; 0x5c
   18bac:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18bb0:	mov	r0, #1024	; 0x400
   18bb4:	mov	sl, r3
   18bb8:	lsl	r4, r0, r5
   18bbc:	mov	r0, r4
   18bc0:	bl	e34 <malloc@plt>
   18bc4:	cmp	r0, #0
   18bc8:	str	r0, [r7, #12]
   18bcc:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18bd0:	mov	r1, #0
   18bd4:	mov	r2, r4
   18bd8:	add	r7, r7, #8
   18bdc:	bl	ea0 <memset@plt>
   18be0:	cmp	r4, #19
   18be4:	mov	r3, sl
   18be8:	str	r4, [r7]
   18bec:	bhi	18c74 <sf_gen_mtp2type_abbrev+0x2d8>
   18bf0:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18bf4:	mov	r6, r0
   18bf8:	sub	r0, r4, #20
   18bfc:	mov	r1, #48	; 0x30
   18c00:	str	r0, [r5]
   18c04:	ldr	r5, [r5, #4]
   18c08:	str	r1, [r5, r0]!
   18c0c:	str	r7, [sp, #4]
   18c10:	str	r7, [r5, #12]
   18c14:	mov	r7, sl
   18c18:	ldr	r4, [r7, r6, lsl #3]!
   18c1c:	cmp	r4, #19
   18c20:	bhi	18d98 <sf_gen_mtp2type_abbrev+0x3fc>
   18c24:	add	r9, r6, #1
   18c28:	cmp	r6, #15
   18c2c:	str	r9, [r8, #92]	; 0x5c
   18c30:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18c34:	mov	r0, #1024	; 0x400
   18c38:	lsl	r4, r0, r9
   18c3c:	mov	r0, r4
   18c40:	bl	e34 <malloc@plt>
   18c44:	cmp	r0, #0
   18c48:	str	r0, [r7, #12]
   18c4c:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18c50:	mov	r1, #0
   18c54:	mov	r2, r4
   18c58:	add	r7, r7, #8
   18c5c:	bl	ea0 <memset@plt>
   18c60:	cmp	r4, #19
   18c64:	str	r4, [r7]
   18c68:	bhi	18d9c <sf_gen_mtp2type_abbrev+0x400>
   18c6c:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18c70:	mov	r5, r6
   18c74:	sub	r1, r4, #20
   18c78:	mov	r2, #84	; 0x54
   18c7c:	str	r1, [r7]
   18c80:	ldr	r0, [r7, #4]
   18c84:	str	r2, [r0, r1]!
   18c88:	mov	r1, #63	; 0x3f
   18c8c:	mov	r2, r9
   18c90:	str	r1, [r0, #12]
   18c94:	mov	r1, r2
   18c98:	ldr	r2, [r2, #16]
   18c9c:	cmp	r2, #0
   18ca0:	bne	18c94 <sf_gen_mtp2type_abbrev+0x2f8>
   18ca4:	str	r0, [r1, #16]
   18ca8:	ldr	r4, [r8, r5, lsl #3]!
   18cac:	cmp	r4, #207	; 0xcf
   18cb0:	bhi	18cfc <sf_gen_mtp2type_abbrev+0x360>
   18cb4:	add	r0, r5, #1
   18cb8:	cmp	r5, #15
   18cbc:	str	r0, [r3, #92]	; 0x5c
   18cc0:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18cc4:	mov	r1, #1024	; 0x400
   18cc8:	lsl	r4, r1, r0
   18ccc:	mov	r0, r4
   18cd0:	bl	e34 <malloc@plt>
   18cd4:	cmp	r0, #0
   18cd8:	str	r0, [r8, #12]
   18cdc:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18ce0:	mov	r1, #0
   18ce4:	mov	r2, r4
   18ce8:	add	r8, r8, #8
   18cec:	bl	ea0 <memset@plt>
   18cf0:	cmp	r4, #207	; 0xcf
   18cf4:	str	r4, [r8]
   18cf8:	bls	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18cfc:	sub	r0, r4, #208	; 0xd0
   18d00:	str	r0, [r8]
   18d04:	ldr	r1, [r8, #4]
   18d08:	add	r4, r1, r0
   18d0c:	mov	r0, #21
   18d10:	mov	r1, #0
   18d14:	b	18ed8 <sf_gen_mtp2type_abbrev+0x53c>
   18d18:	mov	r6, r0
   18d1c:	sub	r0, r4, #20
   18d20:	mov	r1, #48	; 0x30
   18d24:	mov	r7, r8
   18d28:	str	r0, [r5]
   18d2c:	ldr	r9, [r5, #4]
   18d30:	str	r1, [r9, r0]!
   18d34:	str	sl, [r9, #12]
   18d38:	ldr	r4, [r7, r6, lsl #3]!
   18d3c:	cmp	r4, #19
   18d40:	bhi	18e34 <sf_gen_mtp2type_abbrev+0x498>
   18d44:	add	r5, r6, #1
   18d48:	cmp	r6, #15
   18d4c:	str	r5, [r3, #92]	; 0x5c
   18d50:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18d54:	mov	r0, #1024	; 0x400
   18d58:	mov	sl, r3
   18d5c:	lsl	r4, r0, r5
   18d60:	mov	r0, r4
   18d64:	bl	e34 <malloc@plt>
   18d68:	cmp	r0, #0
   18d6c:	str	r0, [r7, #12]
   18d70:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18d74:	mov	r1, #0
   18d78:	mov	r2, r4
   18d7c:	add	r7, r7, #8
   18d80:	bl	ea0 <memset@plt>
   18d84:	cmp	r4, #19
   18d88:	mov	r3, sl
   18d8c:	str	r4, [r7]
   18d90:	bhi	18e38 <sf_gen_mtp2type_abbrev+0x49c>
   18d94:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18d98:	mov	r9, r6
   18d9c:	sub	r1, r4, #20
   18da0:	mov	r2, #84	; 0x54
   18da4:	str	r1, [r7]
   18da8:	ldr	r0, [r7, #4]
   18dac:	str	r2, [r0, r1]!
   18db0:	mov	r1, #63	; 0x3f
   18db4:	mov	r2, r5
   18db8:	str	r1, [r0, #12]
   18dbc:	mov	r1, r2
   18dc0:	ldr	r2, [r2, #16]
   18dc4:	cmp	r2, #0
   18dc8:	bne	18dbc <sf_gen_mtp2type_abbrev+0x420>
   18dcc:	str	r0, [r1, #16]
   18dd0:	mov	r6, sl
   18dd4:	ldr	r4, [r6, r9, lsl #3]!
   18dd8:	cmp	r4, #207	; 0xcf
   18ddc:	bhi	18ef4 <sf_gen_mtp2type_abbrev+0x558>
   18de0:	ldr	r0, [pc, #1024]	; 191e8 <sf_gen_mtp2type_abbrev+0x84c>
   18de4:	add	r8, r9, #1
   18de8:	cmp	r9, #15
   18dec:	add	r0, pc, r0
   18df0:	str	r8, [r0, #92]	; 0x5c
   18df4:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18df8:	mov	r0, #1024	; 0x400
   18dfc:	lsl	r4, r0, r8
   18e00:	mov	r0, r4
   18e04:	bl	e34 <malloc@plt>
   18e08:	cmp	r0, #0
   18e0c:	str	r0, [r6, #12]
   18e10:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18e14:	mov	r1, #0
   18e18:	mov	r2, r4
   18e1c:	add	r6, r6, #8
   18e20:	bl	ea0 <memset@plt>
   18e24:	cmp	r4, #207	; 0xcf
   18e28:	str	r4, [r6]
   18e2c:	bhi	18ef8 <sf_gen_mtp2type_abbrev+0x55c>
   18e30:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18e34:	mov	r5, r6
   18e38:	sub	r1, r4, #20
   18e3c:	mov	r2, #84	; 0x54
   18e40:	str	r1, [r7]
   18e44:	ldr	r0, [r7, #4]
   18e48:	str	r2, [r0, r1]!
   18e4c:	mov	r1, #63	; 0x3f
   18e50:	mov	r2, r9
   18e54:	str	r1, [r0, #12]
   18e58:	mov	r1, r2
   18e5c:	ldr	r2, [r2, #16]
   18e60:	cmp	r2, #0
   18e64:	bne	18e58 <sf_gen_mtp2type_abbrev+0x4bc>
   18e68:	str	r0, [r1, #16]
   18e6c:	ldr	r4, [r8, r5, lsl #3]!
   18e70:	cmp	r4, #207	; 0xcf
   18e74:	bhi	18ec0 <sf_gen_mtp2type_abbrev+0x524>
   18e78:	add	r0, r5, #1
   18e7c:	cmp	r5, #15
   18e80:	str	r0, [r3, #92]	; 0x5c
   18e84:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18e88:	mov	r1, #1024	; 0x400
   18e8c:	lsl	r4, r1, r0
   18e90:	mov	r0, r4
   18e94:	bl	e34 <malloc@plt>
   18e98:	cmp	r0, #0
   18e9c:	str	r0, [r8, #12]
   18ea0:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18ea4:	mov	r1, #0
   18ea8:	mov	r2, r4
   18eac:	add	r8, r8, #8
   18eb0:	bl	ea0 <memset@plt>
   18eb4:	cmp	r4, #207	; 0xcf
   18eb8:	str	r4, [r8]
   18ebc:	bls	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18ec0:	sub	r0, r4, #208	; 0xd0
   18ec4:	str	r0, [r8]
   18ec8:	ldr	r1, [r8, #4]
   18ecc:	add	r4, r1, r0
   18ed0:	mov	r0, #37	; 0x25
   18ed4:	mov	r1, #2
   18ed8:	str	r1, [r4, #20]
   18edc:	str	r9, [r4, #4]
   18ee0:	str	r0, [r4, #8]
   18ee4:	str	r4, [r4, #96]	; 0x60
   18ee8:	mov	r0, r4
   18eec:	sub	sp, fp, #28
   18ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ef4:	mov	r8, r9
   18ef8:	sub	r0, r4, #208	; 0xd0
   18efc:	mov	r7, sl
   18f00:	str	r0, [r6]
   18f04:	ldr	r1, [r6, #4]
   18f08:	add	r4, r1, r0
   18f0c:	mov	r1, #2
   18f10:	mov	r0, #37	; 0x25
   18f14:	str	r1, [r4, #20]
   18f18:	str	r5, [r4, #4]
   18f1c:	str	r0, [r4, #8]
   18f20:	ldr	r0, [r4, #44]	; 0x2c
   18f24:	clz	r0, r0
   18f28:	lsr	r0, r0, #5
   18f2c:	str	r0, [r4, #44]	; 0x2c
   18f30:	str	r4, [r4, #96]	; 0x60
   18f34:	ldr	r5, [r7, r8, lsl #3]!
   18f38:	cmp	r5, #19
   18f3c:	bhi	18f94 <sf_gen_mtp2type_abbrev+0x5f8>
   18f40:	ldr	r0, [pc, #676]	; 191ec <sf_gen_mtp2type_abbrev+0x850>
   18f44:	add	r6, r8, #1
   18f48:	cmp	r8, #15
   18f4c:	add	r0, pc, r0
   18f50:	str	r6, [r0, #92]	; 0x5c
   18f54:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18f58:	mov	r0, #1024	; 0x400
   18f5c:	lsl	r5, r0, r6
   18f60:	mov	r0, r5
   18f64:	bl	e34 <malloc@plt>
   18f68:	cmp	r0, #0
   18f6c:	str	r0, [r7, #12]
   18f70:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18f74:	mov	r1, #0
   18f78:	mov	r2, r5
   18f7c:	add	r7, r7, #8
   18f80:	bl	ea0 <memset@plt>
   18f84:	cmp	r5, #19
   18f88:	str	r5, [r7]
   18f8c:	bhi	18f98 <sf_gen_mtp2type_abbrev+0x5fc>
   18f90:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18f94:	mov	r6, r8
   18f98:	sub	r0, r5, #20
   18f9c:	mov	r1, #48	; 0x30
   18fa0:	str	r0, [r7]
   18fa4:	ldr	r8, [r7, #4]
   18fa8:	mov	r7, sl
   18fac:	str	r1, [r8, r0]!
   18fb0:	ldr	r0, [sp, #4]
   18fb4:	str	r0, [r8, #12]
   18fb8:	ldr	r5, [r7, r6, lsl #3]!
   18fbc:	cmp	r5, #19
   18fc0:	bhi	19018 <sf_gen_mtp2type_abbrev+0x67c>
   18fc4:	ldr	r0, [pc, #548]	; 191f0 <sf_gen_mtp2type_abbrev+0x854>
   18fc8:	add	r9, r6, #1
   18fcc:	cmp	r6, #15
   18fd0:	add	r0, pc, r0
   18fd4:	str	r9, [r0, #92]	; 0x5c
   18fd8:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18fdc:	mov	r0, #1024	; 0x400
   18fe0:	lsl	r5, r0, r9
   18fe4:	mov	r0, r5
   18fe8:	bl	e34 <malloc@plt>
   18fec:	cmp	r0, #0
   18ff0:	str	r0, [r7, #12]
   18ff4:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   18ff8:	mov	r1, #0
   18ffc:	mov	r2, r5
   19000:	add	r7, r7, #8
   19004:	bl	ea0 <memset@plt>
   19008:	cmp	r5, #19
   1900c:	str	r5, [r7]
   19010:	bhi	1901c <sf_gen_mtp2type_abbrev+0x680>
   19014:	b	191a4 <sf_gen_mtp2type_abbrev+0x808>
   19018:	mov	r9, r6
   1901c:	sub	r1, r5, #20
   19020:	mov	r2, #84	; 0x54
   19024:	str	r1, [r7]
   19028:	ldr	r0, [r7, #4]
   1902c:	str	r2, [r0, r1]!
   19030:	mov	r1, #63	; 0x3f
   19034:	mov	r2, r8
   19038:	str	r1, [r0, #12]
   1903c:	mov	r1, r2
   19040:	ldr	r2, [r2, #16]
   19044:	cmp	r2, #0
   19048:	bne	1903c <sf_gen_mtp2type_abbrev+0x6a0>
   1904c:	str	r0, [r1, #16]
   19050:	ldr	r5, [sl, r9, lsl #3]!
   19054:	cmp	r5, #207	; 0xcf
   19058:	bhi	190ac <sf_gen_mtp2type_abbrev+0x710>
   1905c:	ldr	r1, [pc, #400]	; 191f4 <sf_gen_mtp2type_abbrev+0x858>
   19060:	add	r0, r9, #1
   19064:	cmp	r9, #15
   19068:	add	r1, pc, r1
   1906c:	str	r0, [r1, #92]	; 0x5c
   19070:	bge	191a4 <sf_gen_mtp2type_abbrev+0x808>
   19074:	mov	r1, #1024	; 0x400
   19078:	lsl	r5, r1, r0
   1907c:	mov	r0, r5
   19080:	bl	e34 <malloc@plt>
   19084:	cmp	r0, #0
   19088:	str	r0, [sl, #12]
   1908c:	beq	191a4 <sf_gen_mtp2type_abbrev+0x808>
   19090:	mov	r1, #0
   19094:	mov	r2, r5
   19098:	add	sl, sl, #8
   1909c:	bl	ea0 <memset@plt>
   190a0:	cmp	r5, #207	; 0xcf
   190a4:	str	r5, [sl]
   190a8:	bls	191a4 <sf_gen_mtp2type_abbrev+0x808>
   190ac:	sub	r0, r5, #208	; 0xd0
   190b0:	mov	r2, #0
   190b4:	str	r0, [sl]
   190b8:	ldr	r1, [sl, #4]
   190bc:	adds	r0, r1, r0
   190c0:	mov	r1, #37	; 0x25
   190c4:	str	r2, [r0, #20]
   190c8:	str	r8, [r0, #4]
   190cc:	str	r1, [r0, #8]
   190d0:	str	r0, [r0, #96]	; 0x60
   190d4:	beq	19108 <sf_gen_mtp2type_abbrev+0x76c>
   190d8:	ldr	r1, [r4, #96]	; 0x60
   190dc:	mov	r2, r0
   190e0:	ldr	r3, [r2, #44]	; 0x2c
   190e4:	add	r7, r2, #84	; 0x54
   190e8:	cmp	r3, #0
   190ec:	mov	r3, #84	; 0x54
   190f0:	movweq	r3, #60	; 0x3c
   190f4:	addeq	r7, r2, #60	; 0x3c
   190f8:	ldr	r2, [r2, r3]
   190fc:	str	r1, [r7]
   19100:	cmp	r2, #0
   19104:	bne	190e0 <sf_gen_mtp2type_abbrev+0x744>
   19108:	ldr	r1, [r0, #44]	; 0x2c
   1910c:	cmp	r4, #0
   19110:	clz	r1, r1
   19114:	lsr	r1, r1, #5
   19118:	str	r1, [r0, #44]	; 0x2c
   1911c:	ldr	r1, [r4, #44]	; 0x2c
   19120:	clz	r2, r1
   19124:	lsr	r2, r2, #5
   19128:	str	r2, [r4, #44]	; 0x2c
   1912c:	str	r4, [sp, #8]
   19130:	beq	19178 <sf_gen_mtp2type_abbrev+0x7dc>
   19134:	cmp	r1, #0
   19138:	mov	r3, #60	; 0x3c
   1913c:	mov	r2, r4
   19140:	movweq	r3, #84	; 0x54
   19144:	ldr	r1, [r2, r3]!
   19148:	cmp	r1, #0
   1914c:	beq	1917c <sf_gen_mtp2type_abbrev+0x7e0>
   19150:	ldr	r3, [r1, #44]	; 0x2c
   19154:	add	r2, r1, #84	; 0x54
   19158:	cmp	r3, #0
   1915c:	mov	r3, #84	; 0x54
   19160:	movweq	r3, #60	; 0x3c
   19164:	addeq	r2, r1, #60	; 0x3c
   19168:	ldr	r1, [r1, r3]
   1916c:	cmp	r1, #0
   19170:	bne	19150 <sf_gen_mtp2type_abbrev+0x7b4>
   19174:	b	1917c <sf_gen_mtp2type_abbrev+0x7e0>
   19178:	add	r2, sp, #8
   1917c:	str	r0, [r2]
   19180:	ldr	r1, [r4, #44]	; 0x2c
   19184:	clz	r1, r1
   19188:	lsr	r1, r1, #5
   1918c:	str	r1, [r4, #44]	; 0x2c
   19190:	ldr	r0, [r0, #96]	; 0x60
   19194:	str	r0, [r4, #96]	; 0x60
   19198:	mov	r0, r4
   1919c:	sub	sp, fp, #28
   191a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191a4:	ldr	r0, [pc, #88]	; 19204 <sf_gen_mtp2type_abbrev+0x868>
   191a8:	add	r0, pc, r0
   191ac:	bl	214c <sf_bpf_error>
   191b0:	bl	f24 <abort@plt>
   191b4:	ldr	r0, [pc, #68]	; 19200 <sf_gen_mtp2type_abbrev+0x864>
   191b8:	add	r0, pc, r0
   191bc:	bl	214c <sf_bpf_error>
   191c0:	ldr	r0, [pc, #64]	; 19208 <sf_gen_mtp2type_abbrev+0x86c>
   191c4:	add	r0, pc, r0
   191c8:	bl	214c <sf_bpf_error>
   191cc:	ldr	r0, [pc, #56]	; 1920c <sf_gen_mtp2type_abbrev+0x870>
   191d0:	add	r0, pc, r0
   191d4:	bl	214c <sf_bpf_error>
   191d8:	.word	0x0002db1c
   191dc:	.word	0x0002da34
   191e0:	.word	0x0002da88
   191e4:	.word	0x0002d9a0
   191e8:	.word	0x0002d6f4
   191ec:	.word	0x0002d594
   191f0:	.word	0x0002d510
   191f4:	.word	0x0002d478
   191f8:	.word	0x0002d9fc
   191fc:	.word	0x0002d914
   19200:	.word	0x000106b7
   19204:	.word	0x000108bc
   19208:	.word	0x000106c9
   1920c:	.word	0x000106db

00019210 <sf_gen_mtp3field_code>:
   19210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19214:	add	fp, sp, #28
   19218:	sub	sp, sp, #12
   1921c:	sub	r0, r0, #1
   19220:	cmp	r0, #3
   19224:	bhi	1996c <sf_gen_mtp3field_code+0x75c>
   19228:	mov	r6, r2
   1922c:	add	r2, pc, #8
   19230:	str	r3, [sp, #8]
   19234:	ldr	r0, [r2, r0, lsl #2]
   19238:	add	pc, r2, r0
   1923c:	.word	0x00000010
   19240:	.word	0x000001cc
   19244:	.word	0x0000009c
   19248:	.word	0x00000134
   1924c:	ldr	r8, [pc, #1916]	; 199d0 <sf_gen_mtp3field_code+0x7c0>
   19250:	add	r8, pc, r8
   19254:	ldr	r9, [r8, #76]	; 0x4c
   19258:	cmn	r9, #1
   1925c:	beq	19970 <sf_gen_mtp3field_code+0x760>
   19260:	cmp	r1, #256	; 0x100
   19264:	bcs	1997c <sf_gen_mtp3field_code+0x76c>
   19268:	ldr	r0, [r8, #92]	; 0x5c
   1926c:	ldr	r4, [pc, #1888]	; 199d4 <sf_gen_mtp3field_code+0x7c4>
   19270:	add	r4, pc, r4
   19274:	mov	r5, r4
   19278:	ldr	r7, [r5, r0, lsl #3]!
   1927c:	cmp	r7, #19
   19280:	bhi	195b4 <sf_gen_mtp3field_code+0x3a4>
   19284:	add	sl, r0, #1
   19288:	cmp	r0, #15
   1928c:	str	r1, [sp]
   19290:	str	sl, [r8, #92]	; 0x5c
   19294:	bge	19960 <sf_gen_mtp3field_code+0x750>
   19298:	mov	r0, #1024	; 0x400
   1929c:	lsl	r7, r0, sl
   192a0:	mov	r0, r7
   192a4:	bl	e34 <malloc@plt>
   192a8:	cmp	r0, #0
   192ac:	str	r0, [r5, #12]
   192b0:	beq	19960 <sf_gen_mtp3field_code+0x750>
   192b4:	mov	r1, #0
   192b8:	mov	r2, r7
   192bc:	add	r5, r5, #8
   192c0:	bl	ea0 <memset@plt>
   192c4:	ldr	r1, [sp]
   192c8:	cmp	r7, #19
   192cc:	str	r7, [r5]
   192d0:	bhi	195b8 <sf_gen_mtp3field_code+0x3a8>
   192d4:	b	19960 <sf_gen_mtp3field_code+0x750>
   192d8:	str	r6, [sp, #4]
   192dc:	ldr	r4, [pc, #1796]	; 199e8 <sf_gen_mtp3field_code+0x7d8>
   192e0:	add	r4, pc, r4
   192e4:	ldr	sl, [r4, #84]	; 0x54
   192e8:	cmn	sl, #1
   192ec:	beq	19988 <sf_gen_mtp3field_code+0x778>
   192f0:	cmp	r1, #16384	; 0x4000
   192f4:	bcs	19994 <sf_gen_mtp3field_code+0x784>
   192f8:	ldr	r0, [r4, #92]	; 0x5c
   192fc:	ldr	r9, [pc, #1768]	; 199ec <sf_gen_mtp3field_code+0x7dc>
   19300:	add	r9, pc, r9
   19304:	mov	r5, r9
   19308:	ldr	r7, [r5, r0, lsl #3]!
   1930c:	cmp	r7, #19
   19310:	bhi	194a4 <sf_gen_mtp3field_code+0x294>
   19314:	add	r6, r0, #1
   19318:	cmp	r0, #15
   1931c:	str	r6, [r4, #92]	; 0x5c
   19320:	bge	19960 <sf_gen_mtp3field_code+0x750>
   19324:	mov	r0, #1024	; 0x400
   19328:	mov	r8, r1
   1932c:	lsl	r7, r0, r6
   19330:	mov	r0, r7
   19334:	bl	e34 <malloc@plt>
   19338:	cmp	r0, #0
   1933c:	str	r0, [r5, #12]
   19340:	beq	19960 <sf_gen_mtp3field_code+0x750>
   19344:	mov	r1, #0
   19348:	mov	r2, r7
   1934c:	add	r5, r5, #8
   19350:	bl	ea0 <memset@plt>
   19354:	str	r7, [r5]
   19358:	cmp	r7, #19
   1935c:	mov	r1, r8
   19360:	ldr	r4, [pc, #1672]	; 199f0 <sf_gen_mtp3field_code+0x7e0>
   19364:	add	r4, pc, r4
   19368:	bhi	194a8 <sf_gen_mtp3field_code+0x298>
   1936c:	b	19960 <sf_gen_mtp3field_code+0x750>
   19370:	ldr	ip, [pc, #1664]	; 199f8 <sf_gen_mtp3field_code+0x7e8>
   19374:	add	ip, pc, ip
   19378:	ldr	r8, [ip, #88]	; 0x58
   1937c:	cmn	r8, #1
   19380:	beq	199a0 <sf_gen_mtp3field_code+0x790>
   19384:	cmp	r1, #16
   19388:	str	r6, [sp, #4]
   1938c:	bcs	199ac <sf_gen_mtp3field_code+0x79c>
   19390:	ldr	r0, [ip, #92]	; 0x5c
   19394:	ldr	sl, [pc, #1632]	; 199fc <sf_gen_mtp3field_code+0x7ec>
   19398:	add	sl, pc, sl
   1939c:	mov	r4, sl
   193a0:	ldr	r7, [r4, r0, lsl #3]!
   193a4:	cmp	r7, #19
   193a8:	bhi	1952c <sf_gen_mtp3field_code+0x31c>
   193ac:	add	r6, r0, #1
   193b0:	cmp	r0, #15
   193b4:	str	r6, [ip, #92]	; 0x5c
   193b8:	bge	19960 <sf_gen_mtp3field_code+0x750>
   193bc:	mov	r0, #1024	; 0x400
   193c0:	mov	r5, r1
   193c4:	mov	r9, ip
   193c8:	lsl	r7, r0, r6
   193cc:	mov	r0, r7
   193d0:	bl	e34 <malloc@plt>
   193d4:	cmp	r0, #0
   193d8:	str	r0, [r4, #12]
   193dc:	beq	19960 <sf_gen_mtp3field_code+0x750>
   193e0:	mov	r1, #0
   193e4:	mov	r2, r7
   193e8:	add	r4, r4, #8
   193ec:	bl	ea0 <memset@plt>
   193f0:	cmp	r7, #19
   193f4:	mov	r1, r5
   193f8:	mov	ip, r9
   193fc:	str	r7, [r4]
   19400:	bhi	19530 <sf_gen_mtp3field_code+0x320>
   19404:	b	19960 <sf_gen_mtp3field_code+0x750>
   19408:	ldr	r3, [pc, #1480]	; 199d8 <sf_gen_mtp3field_code+0x7c8>
   1940c:	add	r3, pc, r3
   19410:	ldr	r8, [r3, #80]	; 0x50
   19414:	cmn	r8, #1
   19418:	beq	199b8 <sf_gen_mtp3field_code+0x7a8>
   1941c:	cmp	r1, #16384	; 0x4000
   19420:	str	r6, [sp, #4]
   19424:	bcs	199c4 <sf_gen_mtp3field_code+0x7b4>
   19428:	ubfx	r5, r1, #10, #4
   1942c:	ldr	r0, [r3, #92]	; 0x5c
   19430:	ldr	sl, [pc, #1444]	; 199dc <sf_gen_mtp3field_code+0x7cc>
   19434:	add	sl, pc, sl
   19438:	mov	r4, sl
   1943c:	ldr	r7, [r4, r0, lsl #3]!
   19440:	cmp	r7, #19
   19444:	bhi	19634 <sf_gen_mtp3field_code+0x424>
   19448:	add	r9, r0, #1
   1944c:	cmp	r0, #15
   19450:	str	r9, [r3, #92]	; 0x5c
   19454:	bge	19960 <sf_gen_mtp3field_code+0x750>
   19458:	mov	r0, #1024	; 0x400
   1945c:	mov	r6, r1
   19460:	lsl	r7, r0, r9
   19464:	mov	r0, r7
   19468:	bl	e34 <malloc@plt>
   1946c:	cmp	r0, #0
   19470:	str	r0, [r4, #12]
   19474:	beq	19960 <sf_gen_mtp3field_code+0x750>
   19478:	mov	r1, #0
   1947c:	mov	r2, r7
   19480:	add	r4, r4, #8
   19484:	bl	ea0 <memset@plt>
   19488:	str	r7, [r4]
   1948c:	cmp	r7, #19
   19490:	mov	r1, r6
   19494:	ldr	r3, [pc, #1348]	; 199e0 <sf_gen_mtp3field_code+0x7d0>
   19498:	add	r3, pc, r3
   1949c:	bhi	19638 <sf_gen_mtp3field_code+0x428>
   194a0:	b	19960 <sf_gen_mtp3field_code+0x750>
   194a4:	mov	r6, r0
   194a8:	sub	r0, r7, #20
   194ac:	mov	r2, #32
   194b0:	str	r0, [r5]
   194b4:	ldr	r8, [r5, #4]
   194b8:	mov	r5, r9
   194bc:	str	r2, [r8, r0]!
   194c0:	str	sl, [r8, #12]
   194c4:	ldr	r7, [r5, r6, lsl #3]!
   194c8:	cmp	r7, #19
   194cc:	bhi	196bc <sf_gen_mtp3field_code+0x4ac>
   194d0:	add	sl, r6, #1
   194d4:	cmp	r6, #15
   194d8:	str	r1, [sp]
   194dc:	str	sl, [r4, #92]	; 0x5c
   194e0:	bge	19960 <sf_gen_mtp3field_code+0x750>
   194e4:	mov	r0, #1024	; 0x400
   194e8:	lsl	r7, r0, sl
   194ec:	mov	r0, r7
   194f0:	bl	e34 <malloc@plt>
   194f4:	cmp	r0, #0
   194f8:	str	r0, [r5, #12]
   194fc:	beq	19960 <sf_gen_mtp3field_code+0x750>
   19500:	mov	r1, #0
   19504:	mov	r2, r7
   19508:	add	r5, r5, #8
   1950c:	bl	ea0 <memset@plt>
   19510:	str	r7, [r5]
   19514:	ldr	r1, [sp]
   19518:	cmp	r7, #19
   1951c:	ldr	r4, [pc, #1232]	; 199f4 <sf_gen_mtp3field_code+0x7e4>
   19520:	add	r4, pc, r4
   19524:	bhi	196c0 <sf_gen_mtp3field_code+0x4b0>
   19528:	b	19960 <sf_gen_mtp3field_code+0x750>
   1952c:	mov	r6, r0
   19530:	sub	r0, r7, #20
   19534:	mov	r2, #48	; 0x30
   19538:	mov	r5, sl
   1953c:	str	r0, [r4]
   19540:	ldr	r4, [r4, #4]
   19544:	str	r2, [r4, r0]!
   19548:	str	r8, [r4, #12]
   1954c:	ldr	r7, [r5, r6, lsl #3]!
   19550:	cmp	r7, #19
   19554:	bhi	19784 <sf_gen_mtp3field_code+0x574>
   19558:	add	r9, r6, #1
   1955c:	cmp	r6, #15
   19560:	str	r1, [sp]
   19564:	str	r9, [ip, #92]	; 0x5c
   19568:	bge	19960 <sf_gen_mtp3field_code+0x750>
   1956c:	mov	r0, #1024	; 0x400
   19570:	mov	r8, ip
   19574:	lsl	r7, r0, r9
   19578:	mov	r0, r7
   1957c:	bl	e34 <malloc@plt>
   19580:	cmp	r0, #0
   19584:	str	r0, [r5, #12]
   19588:	beq	19960 <sf_gen_mtp3field_code+0x750>
   1958c:	mov	r1, #0
   19590:	mov	r2, r7
   19594:	add	r5, r5, #8
   19598:	bl	ea0 <memset@plt>
   1959c:	ldr	r1, [sp]
   195a0:	cmp	r7, #19
   195a4:	mov	ip, r8
   195a8:	str	r7, [r5]
   195ac:	bhi	19788 <sf_gen_mtp3field_code+0x578>
   195b0:	b	19960 <sf_gen_mtp3field_code+0x750>
   195b4:	mov	sl, r0
   195b8:	sub	r0, r7, #20
   195bc:	mov	r2, #48	; 0x30
   195c0:	str	r0, [r5]
   195c4:	ldr	r5, [r5, #4]
   195c8:	str	r2, [r5, r0]!
   195cc:	str	r9, [r5, #12]
   195d0:	ldr	r7, [r4, sl, lsl #3]!
   195d4:	cmp	r7, #207	; 0xcf
   195d8:	bhi	19834 <sf_gen_mtp3field_code+0x624>
   195dc:	add	r0, sl, #1
   195e0:	cmp	sl, #15
   195e4:	str	r0, [r8, #92]	; 0x5c
   195e8:	bge	19960 <sf_gen_mtp3field_code+0x750>
   195ec:	mov	r9, r1
   195f0:	mov	r1, #1024	; 0x400
   195f4:	lsl	r7, r1, r0
   195f8:	mov	r0, r7
   195fc:	bl	e34 <malloc@plt>
   19600:	ldr	r8, [sp, #8]
   19604:	cmp	r0, #0
   19608:	str	r0, [r4, #12]
   1960c:	beq	19960 <sf_gen_mtp3field_code+0x750>
   19610:	mov	r1, #0
   19614:	mov	r2, r7
   19618:	add	r4, r4, #8
   1961c:	bl	ea0 <memset@plt>
   19620:	cmp	r7, #207	; 0xcf
   19624:	mov	r1, r9
   19628:	str	r7, [r4]
   1962c:	bhi	19838 <sf_gen_mtp3field_code+0x628>
   19630:	b	19960 <sf_gen_mtp3field_code+0x750>
   19634:	mov	r9, r0
   19638:	sub	r0, r7, #20
   1963c:	mov	r2, #32
   19640:	mov	r6, sl
   19644:	str	r0, [r4]
   19648:	ldr	r4, [r4, #4]
   1964c:	str	r2, [r4, r0]!
   19650:	str	r8, [r4, #12]
   19654:	ldr	r7, [r6, r9, lsl #3]!
   19658:	cmp	r7, #19
   1965c:	bhi	1986c <sf_gen_mtp3field_code+0x65c>
   19660:	add	r8, r9, #1
   19664:	cmp	r9, #15
   19668:	str	r1, [sp]
   1966c:	str	r8, [r3, #92]	; 0x5c
   19670:	bge	19960 <sf_gen_mtp3field_code+0x750>
   19674:	mov	r0, #1024	; 0x400
   19678:	lsl	r7, r0, r8
   1967c:	mov	r0, r7
   19680:	bl	e34 <malloc@plt>
   19684:	cmp	r0, #0
   19688:	str	r0, [r6, #12]
   1968c:	beq	19960 <sf_gen_mtp3field_code+0x750>
   19690:	mov	r1, #0
   19694:	mov	r2, r7
   19698:	add	r6, r6, #8
   1969c:	bl	ea0 <memset@plt>
   196a0:	str	r7, [r6]
   196a4:	ldr	r1, [sp]
   196a8:	cmp	r7, #19
   196ac:	ldr	r3, [pc, #816]	; 199e4 <sf_gen_mtp3field_code+0x7d4>
   196b0:	add	r3, pc, r3
   196b4:	bhi	19870 <sf_gen_mtp3field_code+0x660>
   196b8:	b	19960 <sf_gen_mtp3field_code+0x750>
   196bc:	mov	sl, r6
   196c0:	mov	r0, #4128768	; 0x3f0000
   196c4:	mov	r2, #84	; 0x54
   196c8:	and	r0, r0, r1, lsl #8
   196cc:	orr	ip, r0, r1, lsl #24
   196d0:	sub	r1, r7, #20
   196d4:	str	r1, [r5]
   196d8:	ldr	r0, [r5, #4]
   196dc:	str	r2, [r0, r1]!
   196e0:	movw	r1, #0
   196e4:	mov	r2, r8
   196e8:	movt	r1, #65343	; 0xff3f
   196ec:	str	r1, [r0, #12]
   196f0:	mov	r1, r2
   196f4:	ldr	r2, [r2, #16]
   196f8:	cmp	r2, #0
   196fc:	bne	196f0 <sf_gen_mtp3field_code+0x4e0>
   19700:	str	r0, [r1, #16]
   19704:	ldr	r6, [r9, sl, lsl #3]!
   19708:	cmp	r6, #207	; 0xcf
   1970c:	bhi	19760 <sf_gen_mtp3field_code+0x550>
   19710:	add	r0, sl, #1
   19714:	cmp	sl, #15
   19718:	str	r0, [r4, #92]	; 0x5c
   1971c:	bge	19960 <sf_gen_mtp3field_code+0x750>
   19720:	mov	r1, #1024	; 0x400
   19724:	mov	r5, ip
   19728:	lsl	r6, r1, r0
   1972c:	mov	r0, r6
   19730:	bl	e34 <malloc@plt>
   19734:	cmp	r0, #0
   19738:	str	r0, [r9, #12]
   1973c:	beq	19960 <sf_gen_mtp3field_code+0x750>
   19740:	mov	r1, #0
   19744:	mov	r2, r6
   19748:	add	r9, r9, #8
   1974c:	bl	ea0 <memset@plt>
   19750:	cmp	r6, #207	; 0xcf
   19754:	mov	ip, r5
   19758:	str	r6, [r9]
   1975c:	bls	19960 <sf_gen_mtp3field_code+0x750>
   19760:	sub	r0, r6, #208	; 0xd0
   19764:	ldr	r3, [sp, #4]
   19768:	str	r0, [r9]
   1976c:	ldr	r2, [r9, #4]
   19770:	orr	r1, r3, #5
   19774:	add	r0, r2, r0
   19778:	str	ip, [r0, #20]
   1977c:	str	r8, [r0, #4]
   19780:	b	1992c <sf_gen_mtp3field_code+0x71c>
   19784:	mov	r9, r6
   19788:	lsl	r8, r1, #4
   1978c:	sub	r1, r7, #20
   19790:	mov	r2, #84	; 0x54
   19794:	str	r1, [r5]
   19798:	ldr	r0, [r5, #4]
   1979c:	str	r2, [r0, r1]!
   197a0:	mov	r1, #240	; 0xf0
   197a4:	mov	r2, r4
   197a8:	str	r1, [r0, #12]
   197ac:	mov	r1, r2
   197b0:	ldr	r2, [r2, #16]
   197b4:	cmp	r2, #0
   197b8:	bne	197ac <sf_gen_mtp3field_code+0x59c>
   197bc:	str	r0, [r1, #16]
   197c0:	ldr	r6, [sl, r9, lsl #3]!
   197c4:	cmp	r6, #207	; 0xcf
   197c8:	bhi	19814 <sf_gen_mtp3field_code+0x604>
   197cc:	add	r0, r9, #1
   197d0:	cmp	r9, #15
   197d4:	str	r0, [ip, #92]	; 0x5c
   197d8:	bge	19960 <sf_gen_mtp3field_code+0x750>
   197dc:	mov	r1, #1024	; 0x400
   197e0:	lsl	r6, r1, r0
   197e4:	mov	r0, r6
   197e8:	bl	e34 <malloc@plt>
   197ec:	cmp	r0, #0
   197f0:	str	r0, [sl, #12]
   197f4:	beq	19960 <sf_gen_mtp3field_code+0x750>
   197f8:	mov	r1, #0
   197fc:	mov	r2, r6
   19800:	add	sl, sl, #8
   19804:	bl	ea0 <memset@plt>
   19808:	cmp	r6, #207	; 0xcf
   1980c:	str	r6, [sl]
   19810:	bls	19960 <sf_gen_mtp3field_code+0x750>
   19814:	sub	r0, r6, #208	; 0xd0
   19818:	ldr	r3, [sp, #4]
   1981c:	str	r0, [sl]
   19820:	ldr	r2, [sl, #4]
   19824:	orr	r1, r3, #5
   19828:	add	r0, r2, r0
   1982c:	str	r8, [r0, #20]
   19830:	b	19928 <sf_gen_mtp3field_code+0x718>
   19834:	ldr	r8, [sp, #8]
   19838:	sub	r0, r7, #208	; 0xd0
   1983c:	orr	r3, r6, #5
   19840:	cmp	r8, #0
   19844:	str	r0, [r4]
   19848:	ldr	r2, [r4, #4]
   1984c:	add	r0, r2, r0
   19850:	str	r1, [r0, #20]
   19854:	str	r5, [r0, #4]
   19858:	str	r3, [r0, #8]
   1985c:	str	r0, [r0, #96]	; 0x60
   19860:	beq	19958 <sf_gen_mtp3field_code+0x748>
   19864:	orr	r1, r6, #16
   19868:	b	19944 <sf_gen_mtp3field_code+0x734>
   1986c:	mov	r8, r9
   19870:	and	r0, r1, #1020	; 0x3fc
   19874:	and	r1, r1, #3
   19878:	mov	r2, #84	; 0x54
   1987c:	orr	r0, r5, r0, lsl #6
   19880:	orr	r9, r0, r1, lsl #22
   19884:	sub	r1, r7, #20
   19888:	str	r1, [r6]
   1988c:	ldr	r0, [r6, #4]
   19890:	str	r2, [r0, r1]!
   19894:	movw	r1, #65295	; 0xff0f
   19898:	mov	r2, r4
   1989c:	movt	r1, #192	; 0xc0
   198a0:	str	r1, [r0, #12]
   198a4:	mov	r1, r2
   198a8:	ldr	r2, [r2, #16]
   198ac:	cmp	r2, #0
   198b0:	bne	198a4 <sf_gen_mtp3field_code+0x694>
   198b4:	str	r0, [r1, #16]
   198b8:	ldr	r6, [sl, r8, lsl #3]!
   198bc:	cmp	r6, #207	; 0xcf
   198c0:	bhi	1990c <sf_gen_mtp3field_code+0x6fc>
   198c4:	add	r0, r8, #1
   198c8:	cmp	r8, #15
   198cc:	str	r0, [r3, #92]	; 0x5c
   198d0:	bge	19960 <sf_gen_mtp3field_code+0x750>
   198d4:	mov	r1, #1024	; 0x400
   198d8:	lsl	r6, r1, r0
   198dc:	mov	r0, r6
   198e0:	bl	e34 <malloc@plt>
   198e4:	cmp	r0, #0
   198e8:	str	r0, [sl, #12]
   198ec:	beq	19960 <sf_gen_mtp3field_code+0x750>
   198f0:	mov	r1, #0
   198f4:	mov	r2, r6
   198f8:	add	sl, sl, #8
   198fc:	bl	ea0 <memset@plt>
   19900:	cmp	r6, #207	; 0xcf
   19904:	str	r6, [sl]
   19908:	bls	19960 <sf_gen_mtp3field_code+0x750>
   1990c:	sub	r0, r6, #208	; 0xd0
   19910:	ldr	r3, [sp, #4]
   19914:	str	r0, [sl]
   19918:	ldr	r2, [sl, #4]
   1991c:	orr	r1, r3, #5
   19920:	add	r0, r2, r0
   19924:	str	r9, [r0, #20]
   19928:	str	r4, [r0, #4]
   1992c:	str	r1, [r0, #8]
   19930:	str	r0, [r0, #96]	; 0x60
   19934:	ldr	r1, [sp, #8]
   19938:	cmp	r1, #0
   1993c:	beq	19958 <sf_gen_mtp3field_code+0x748>
   19940:	orr	r1, r3, #16
   19944:	cmp	r1, #48	; 0x30
   19948:	ldreq	r1, [r0, #44]	; 0x2c
   1994c:	clzeq	r1, r1
   19950:	lsreq	r1, r1, #5
   19954:	streq	r1, [r0, #44]	; 0x2c
   19958:	sub	sp, fp, #28
   1995c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19960:	ldr	r0, [pc, #160]	; 19a08 <sf_gen_mtp3field_code+0x7f8>
   19964:	add	r0, pc, r0
   19968:	bl	214c <sf_bpf_error>
   1996c:	bl	f24 <abort@plt>
   19970:	ldr	r0, [pc, #136]	; 19a00 <sf_gen_mtp3field_code+0x7f0>
   19974:	add	r0, pc, r0
   19978:	bl	214c <sf_bpf_error>
   1997c:	ldr	r0, [pc, #128]	; 19a04 <sf_gen_mtp3field_code+0x7f4>
   19980:	add	r0, pc, r0
   19984:	bl	214c <sf_bpf_error>
   19988:	ldr	r0, [pc, #132]	; 19a14 <sf_gen_mtp3field_code+0x804>
   1998c:	add	r0, pc, r0
   19990:	bl	214c <sf_bpf_error>
   19994:	ldr	r0, [pc, #124]	; 19a18 <sf_gen_mtp3field_code+0x808>
   19998:	add	r0, pc, r0
   1999c:	bl	214c <sf_bpf_error>
   199a0:	ldr	r0, [pc, #116]	; 19a1c <sf_gen_mtp3field_code+0x80c>
   199a4:	add	r0, pc, r0
   199a8:	bl	214c <sf_bpf_error>
   199ac:	ldr	r0, [pc, #108]	; 19a20 <sf_gen_mtp3field_code+0x810>
   199b0:	add	r0, pc, r0
   199b4:	bl	214c <sf_bpf_error>
   199b8:	ldr	r0, [pc, #76]	; 19a0c <sf_gen_mtp3field_code+0x7fc>
   199bc:	add	r0, pc, r0
   199c0:	bl	214c <sf_bpf_error>
   199c4:	ldr	r0, [pc, #68]	; 19a10 <sf_gen_mtp3field_code+0x800>
   199c8:	add	r0, pc, r0
   199cc:	bl	214c <sf_bpf_error>
   199d0:	.word	0x0002d290
   199d4:	.word	0x0002d1b0
   199d8:	.word	0x0002d0d4
   199dc:	.word	0x0002cfec
   199e0:	.word	0x0002d048
   199e4:	.word	0x0002ce30
   199e8:	.word	0x0002d200
   199ec:	.word	0x0002d120
   199f0:	.word	0x0002d17c
   199f4:	.word	0x0002cfc0
   199f8:	.word	0x0002d16c
   199fc:	.word	0x0002d088
   19a00:	.word	0x0000ff54
   19a04:	.word	0x0000ff64
   19a08:	.word	0x00010100
   19a0c:	.word	0x0000ff4e
   19a10:	.word	0x0000ff5e
   19a14:	.word	0x0000ffc2
   19a18:	.word	0x0000ffd2
   19a1c:	.word	0x0000ffee
   19a20:	.word	0x0000fffe

00019a24 <sf_gen_atmmulti_abbrev>:
   19a24:	push	{r4, r5, fp, lr}
   19a28:	add	fp, sp, #8
   19a2c:	sub	sp, sp, #8
   19a30:	cmp	r0, #69	; 0x45
   19a34:	bgt	19ad0 <sf_gen_atmmulti_abbrev+0xac>
   19a38:	cmp	r0, #28
   19a3c:	bne	19b68 <sf_gen_atmmulti_abbrev+0x144>
   19a40:	ldr	r0, [pc, #3076]	; 1a64c <sf_gen_atmmulti_abbrev+0xc28>
   19a44:	add	r0, pc, r0
   19a48:	ldrb	r0, [r0, #8]
   19a4c:	cmp	r0, #0
   19a50:	beq	1a618 <sf_gen_atmmulti_abbrev+0xbf4>
   19a54:	mov	r0, #52	; 0x34
   19a58:	mov	r1, #3
   19a5c:	mov	r2, #16
   19a60:	mov	r3, #0
   19a64:	bl	17edc <sf_gen_atmfield_code>
   19a68:	mov	r5, r0
   19a6c:	mov	r0, #52	; 0x34
   19a70:	mov	r1, #4
   19a74:	mov	r2, #16
   19a78:	mov	r3, #0
   19a7c:	bl	17edc <sf_gen_atmfield_code>
   19a80:	mov	r4, r0
   19a84:	ldr	r0, [r5, #44]	; 0x2c
   19a88:	cmp	r5, #0
   19a8c:	clz	r0, r0
   19a90:	lsr	r0, r0, #5
   19a94:	str	r0, [r5, #44]	; 0x2c
   19a98:	beq	19c9c <sf_gen_atmmulti_abbrev+0x278>
   19a9c:	ldr	r1, [r4, #96]	; 0x60
   19aa0:	mov	r2, r5
   19aa4:	cmp	r0, #0
   19aa8:	mov	r0, #84	; 0x54
   19aac:	add	r3, r2, #84	; 0x54
   19ab0:	movweq	r0, #60	; 0x3c
   19ab4:	addeq	r3, r2, #60	; 0x3c
   19ab8:	ldr	r2, [r2, r0]
   19abc:	str	r1, [r3]
   19ac0:	cmp	r2, #0
   19ac4:	beq	19c98 <sf_gen_atmmulti_abbrev+0x274>
   19ac8:	ldr	r0, [r2, #44]	; 0x2c
   19acc:	b	19aa4 <sf_gen_atmmulti_abbrev+0x80>
   19ad0:	cmp	r0, #70	; 0x46
   19ad4:	bne	19c00 <sf_gen_atmmulti_abbrev+0x1dc>
   19ad8:	ldr	r0, [pc, #2928]	; 1a650 <sf_gen_atmmulti_abbrev+0xc2c>
   19adc:	add	r0, pc, r0
   19ae0:	ldrb	r0, [r0, #8]
   19ae4:	cmp	r0, #0
   19ae8:	beq	1a624 <sf_gen_atmmulti_abbrev+0xc00>
   19aec:	mov	r0, #54	; 0x36
   19af0:	mov	r1, #5
   19af4:	mov	r2, #16
   19af8:	mov	r3, #0
   19afc:	bl	17edc <sf_gen_atmfield_code>
   19b00:	mov	r5, r0
   19b04:	mov	r0, #54	; 0x36
   19b08:	mov	r1, #2
   19b0c:	mov	r2, #16
   19b10:	mov	r3, #0
   19b14:	bl	17edc <sf_gen_atmfield_code>
   19b18:	mov	r4, r0
   19b1c:	ldr	r0, [r5, #44]	; 0x2c
   19b20:	cmp	r5, #0
   19b24:	clz	r0, r0
   19b28:	lsr	r0, r0, #5
   19b2c:	str	r0, [r5, #44]	; 0x2c
   19b30:	beq	19ce4 <sf_gen_atmmulti_abbrev+0x2c0>
   19b34:	ldr	r1, [r4, #96]	; 0x60
   19b38:	mov	r2, r5
   19b3c:	cmp	r0, #0
   19b40:	mov	r0, #84	; 0x54
   19b44:	add	r3, r2, #84	; 0x54
   19b48:	movweq	r0, #60	; 0x3c
   19b4c:	addeq	r3, r2, #60	; 0x3c
   19b50:	ldr	r2, [r2, r0]
   19b54:	str	r1, [r3]
   19b58:	cmp	r2, #0
   19b5c:	beq	19ce0 <sf_gen_atmmulti_abbrev+0x2bc>
   19b60:	ldr	r0, [r2, #44]	; 0x2c
   19b64:	b	19b3c <sf_gen_atmmulti_abbrev+0x118>
   19b68:	cmp	r0, #29
   19b6c:	bne	1a614 <sf_gen_atmmulti_abbrev+0xbf0>
   19b70:	ldr	r0, [pc, #2768]	; 1a648 <sf_gen_atmmulti_abbrev+0xc24>
   19b74:	add	r0, pc, r0
   19b78:	ldrb	r0, [r0, #8]
   19b7c:	cmp	r0, #0
   19b80:	beq	1a630 <sf_gen_atmmulti_abbrev+0xc0c>
   19b84:	mov	r0, #52	; 0x34
   19b88:	mov	r1, #3
   19b8c:	mov	r2, #16
   19b90:	mov	r3, #0
   19b94:	bl	17edc <sf_gen_atmfield_code>
   19b98:	mov	r5, r0
   19b9c:	mov	r0, #52	; 0x34
   19ba0:	mov	r1, #4
   19ba4:	mov	r2, #16
   19ba8:	mov	r3, #0
   19bac:	bl	17edc <sf_gen_atmfield_code>
   19bb0:	mov	r4, r0
   19bb4:	ldr	r0, [r5, #44]	; 0x2c
   19bb8:	cmp	r5, #0
   19bbc:	clz	r0, r0
   19bc0:	lsr	r0, r0, #5
   19bc4:	str	r0, [r5, #44]	; 0x2c
   19bc8:	beq	19d2c <sf_gen_atmmulti_abbrev+0x308>
   19bcc:	ldr	r1, [r4, #96]	; 0x60
   19bd0:	mov	r2, r5
   19bd4:	cmp	r0, #0
   19bd8:	mov	r0, #84	; 0x54
   19bdc:	add	r3, r2, #84	; 0x54
   19be0:	movweq	r0, #60	; 0x3c
   19be4:	addeq	r3, r2, #60	; 0x3c
   19be8:	ldr	r2, [r2, r0]
   19bec:	str	r1, [r3]
   19bf0:	cmp	r2, #0
   19bf4:	beq	19d28 <sf_gen_atmmulti_abbrev+0x304>
   19bf8:	ldr	r0, [r2, #44]	; 0x2c
   19bfc:	b	19bd4 <sf_gen_atmmulti_abbrev+0x1b0>
   19c00:	cmp	r0, #71	; 0x47
   19c04:	bne	1a614 <sf_gen_atmmulti_abbrev+0xbf0>
   19c08:	ldr	r0, [pc, #2628]	; 1a654 <sf_gen_atmmulti_abbrev+0xc30>
   19c0c:	add	r0, pc, r0
   19c10:	ldrb	r0, [r0, #8]
   19c14:	cmp	r0, #0
   19c18:	beq	1a63c <sf_gen_atmmulti_abbrev+0xc18>
   19c1c:	mov	r0, #54	; 0x36
   19c20:	mov	r1, #5
   19c24:	mov	r2, #16
   19c28:	mov	r3, #0
   19c2c:	bl	17edc <sf_gen_atmfield_code>
   19c30:	mov	r5, r0
   19c34:	mov	r0, #54	; 0x36
   19c38:	mov	r1, #2
   19c3c:	mov	r2, #16
   19c40:	mov	r3, #0
   19c44:	bl	17edc <sf_gen_atmfield_code>
   19c48:	mov	r4, r0
   19c4c:	ldr	r0, [r5, #44]	; 0x2c
   19c50:	cmp	r5, #0
   19c54:	clz	r0, r0
   19c58:	lsr	r0, r0, #5
   19c5c:	str	r0, [r5, #44]	; 0x2c
   19c60:	beq	19d74 <sf_gen_atmmulti_abbrev+0x350>
   19c64:	ldr	r1, [r4, #96]	; 0x60
   19c68:	mov	r2, r5
   19c6c:	cmp	r0, #0
   19c70:	mov	r0, #84	; 0x54
   19c74:	add	r3, r2, #84	; 0x54
   19c78:	movweq	r0, #60	; 0x3c
   19c7c:	addeq	r3, r2, #60	; 0x3c
   19c80:	ldr	r2, [r2, r0]
   19c84:	str	r1, [r3]
   19c88:	cmp	r2, #0
   19c8c:	beq	19d70 <sf_gen_atmmulti_abbrev+0x34c>
   19c90:	ldr	r0, [r2, #44]	; 0x2c
   19c94:	b	19c6c <sf_gen_atmmulti_abbrev+0x248>
   19c98:	ldr	r0, [r5, #44]	; 0x2c
   19c9c:	clz	r0, r0
   19ca0:	cmp	r4, #0
   19ca4:	lsr	r0, r0, #5
   19ca8:	str	r0, [r5, #44]	; 0x2c
   19cac:	str	r4, [sp, #4]
   19cb0:	beq	19db8 <sf_gen_atmmulti_abbrev+0x394>
   19cb4:	mov	r1, r4
   19cb8:	ldr	r2, [r1, #44]	; 0x2c
   19cbc:	add	r0, r1, #84	; 0x54
   19cc0:	cmp	r2, #0
   19cc4:	mov	r2, #84	; 0x54
   19cc8:	movweq	r2, #60	; 0x3c
   19ccc:	addeq	r0, r1, #60	; 0x3c
   19cd0:	ldr	r1, [r1, r2]
   19cd4:	cmp	r1, #0
   19cd8:	bne	19cb8 <sf_gen_atmmulti_abbrev+0x294>
   19cdc:	b	19dbc <sf_gen_atmmulti_abbrev+0x398>
   19ce0:	ldr	r0, [r5, #44]	; 0x2c
   19ce4:	clz	r0, r0
   19ce8:	cmp	r4, #0
   19cec:	lsr	r0, r0, #5
   19cf0:	str	r0, [r5, #44]	; 0x2c
   19cf4:	str	r4, [sp, #4]
   19cf8:	beq	19e88 <sf_gen_atmmulti_abbrev+0x464>
   19cfc:	mov	r1, r4
   19d00:	ldr	r2, [r1, #44]	; 0x2c
   19d04:	add	r0, r1, #84	; 0x54
   19d08:	cmp	r2, #0
   19d0c:	mov	r2, #84	; 0x54
   19d10:	movweq	r2, #60	; 0x3c
   19d14:	addeq	r0, r1, #60	; 0x3c
   19d18:	ldr	r1, [r1, r2]
   19d1c:	cmp	r1, #0
   19d20:	bne	19d00 <sf_gen_atmmulti_abbrev+0x2dc>
   19d24:	b	19e8c <sf_gen_atmmulti_abbrev+0x468>
   19d28:	ldr	r0, [r5, #44]	; 0x2c
   19d2c:	clz	r0, r0
   19d30:	cmp	r4, #0
   19d34:	lsr	r0, r0, #5
   19d38:	str	r0, [r5, #44]	; 0x2c
   19d3c:	str	r4, [sp, #4]
   19d40:	beq	1a22c <sf_gen_atmmulti_abbrev+0x808>
   19d44:	mov	r1, r4
   19d48:	ldr	r2, [r1, #44]	; 0x2c
   19d4c:	add	r0, r1, #84	; 0x54
   19d50:	cmp	r2, #0
   19d54:	mov	r2, #84	; 0x54
   19d58:	movweq	r2, #60	; 0x3c
   19d5c:	addeq	r0, r1, #60	; 0x3c
   19d60:	ldr	r1, [r1, r2]
   19d64:	cmp	r1, #0
   19d68:	bne	19d48 <sf_gen_atmmulti_abbrev+0x324>
   19d6c:	b	1a230 <sf_gen_atmmulti_abbrev+0x80c>
   19d70:	ldr	r0, [r5, #44]	; 0x2c
   19d74:	clz	r0, r0
   19d78:	cmp	r4, #0
   19d7c:	lsr	r0, r0, #5
   19d80:	str	r0, [r5, #44]	; 0x2c
   19d84:	str	r4, [sp, #4]
   19d88:	beq	1a2fc <sf_gen_atmmulti_abbrev+0x8d8>
   19d8c:	mov	r1, r4
   19d90:	ldr	r2, [r1, #44]	; 0x2c
   19d94:	add	r0, r1, #84	; 0x54
   19d98:	cmp	r2, #0
   19d9c:	mov	r2, #84	; 0x54
   19da0:	movweq	r2, #60	; 0x3c
   19da4:	addeq	r0, r1, #60	; 0x3c
   19da8:	ldr	r1, [r1, r2]
   19dac:	cmp	r1, #0
   19db0:	bne	19d90 <sf_gen_atmmulti_abbrev+0x36c>
   19db4:	b	1a300 <sf_gen_atmmulti_abbrev+0x8dc>
   19db8:	add	r0, sp, #4
   19dbc:	str	r5, [r0]
   19dc0:	mov	r1, #0
   19dc4:	mov	r2, #16
   19dc8:	mov	r3, #0
   19dcc:	ldr	r0, [r5, #96]	; 0x60
   19dd0:	str	r0, [r4, #96]	; 0x60
   19dd4:	mov	r0, #51	; 0x33
   19dd8:	bl	17edc <sf_gen_atmfield_code>
   19ddc:	cmp	r0, #0
   19de0:	beq	19e14 <sf_gen_atmmulti_abbrev+0x3f0>
   19de4:	ldr	r1, [r4, #96]	; 0x60
   19de8:	mov	r2, r0
   19dec:	ldr	r3, [r2, #44]	; 0x2c
   19df0:	add	r5, r2, #84	; 0x54
   19df4:	cmp	r3, #0
   19df8:	mov	r3, #84	; 0x54
   19dfc:	movweq	r3, #60	; 0x3c
   19e00:	addeq	r5, r2, #60	; 0x3c
   19e04:	ldr	r2, [r2, r3]
   19e08:	str	r1, [r5]
   19e0c:	cmp	r2, #0
   19e10:	bne	19dec <sf_gen_atmmulti_abbrev+0x3c8>
   19e14:	ldr	r1, [r0, #44]	; 0x2c
   19e18:	cmp	r4, #0
   19e1c:	clz	r1, r1
   19e20:	lsr	r1, r1, #5
   19e24:	str	r1, [r0, #44]	; 0x2c
   19e28:	ldr	r2, [r4, #44]	; 0x2c
   19e2c:	clz	r1, r2
   19e30:	lsr	r1, r1, #5
   19e34:	str	r1, [r4, #44]	; 0x2c
   19e38:	str	r4, [sp, #4]
   19e3c:	beq	1a5e8 <sf_gen_atmmulti_abbrev+0xbc4>
   19e40:	cmp	r2, #0
   19e44:	mov	r2, #60	; 0x3c
   19e48:	add	r1, r4, #60	; 0x3c
   19e4c:	movweq	r2, #84	; 0x54
   19e50:	addeq	r1, r4, #84	; 0x54
   19e54:	ldr	r2, [r4, r2]
   19e58:	cmp	r2, #0
   19e5c:	beq	1a5ec <sf_gen_atmmulti_abbrev+0xbc8>
   19e60:	ldr	r3, [r2, #44]	; 0x2c
   19e64:	add	r1, r2, #84	; 0x54
   19e68:	cmp	r3, #0
   19e6c:	mov	r3, #84	; 0x54
   19e70:	movweq	r3, #60	; 0x3c
   19e74:	addeq	r1, r2, #60	; 0x3c
   19e78:	ldr	r2, [r2, r3]
   19e7c:	cmp	r2, #0
   19e80:	bne	19e60 <sf_gen_atmmulti_abbrev+0x43c>
   19e84:	b	1a5ec <sf_gen_atmmulti_abbrev+0xbc8>
   19e88:	add	r0, sp, #4
   19e8c:	str	r5, [r0]
   19e90:	mov	r1, #7
   19e94:	mov	r2, #16
   19e98:	mov	r3, #0
   19e9c:	ldr	r0, [r5, #96]	; 0x60
   19ea0:	str	r0, [r4, #96]	; 0x60
   19ea4:	mov	r0, #54	; 0x36
   19ea8:	bl	17edc <sf_gen_atmfield_code>
   19eac:	ldr	r1, [r0, #44]	; 0x2c
   19eb0:	cmp	r0, #0
   19eb4:	clz	r1, r1
   19eb8:	lsr	r1, r1, #5
   19ebc:	str	r1, [r0, #44]	; 0x2c
   19ec0:	beq	19efc <sf_gen_atmmulti_abbrev+0x4d8>
   19ec4:	ldr	r2, [r4, #96]	; 0x60
   19ec8:	mov	r3, r0
   19ecc:	cmp	r1, #0
   19ed0:	mov	r1, #84	; 0x54
   19ed4:	add	r5, r3, #84	; 0x54
   19ed8:	movweq	r1, #60	; 0x3c
   19edc:	addeq	r5, r3, #60	; 0x3c
   19ee0:	ldr	r3, [r3, r1]
   19ee4:	str	r2, [r5]
   19ee8:	cmp	r3, #0
   19eec:	beq	19ef8 <sf_gen_atmmulti_abbrev+0x4d4>
   19ef0:	ldr	r1, [r3, #44]	; 0x2c
   19ef4:	b	19ecc <sf_gen_atmmulti_abbrev+0x4a8>
   19ef8:	ldr	r1, [r0, #44]	; 0x2c
   19efc:	clz	r1, r1
   19f00:	cmp	r4, #0
   19f04:	lsr	r1, r1, #5
   19f08:	str	r1, [r0, #44]	; 0x2c
   19f0c:	str	r4, [sp, #4]
   19f10:	beq	19f40 <sf_gen_atmmulti_abbrev+0x51c>
   19f14:	mov	r2, r4
   19f18:	ldr	r3, [r2, #44]	; 0x2c
   19f1c:	add	r1, r2, #84	; 0x54
   19f20:	cmp	r3, #0
   19f24:	mov	r3, #84	; 0x54
   19f28:	movweq	r3, #60	; 0x3c
   19f2c:	addeq	r1, r2, #60	; 0x3c
   19f30:	ldr	r2, [r2, r3]
   19f34:	cmp	r2, #0
   19f38:	bne	19f18 <sf_gen_atmmulti_abbrev+0x4f4>
   19f3c:	b	19f44 <sf_gen_atmmulti_abbrev+0x520>
   19f40:	add	r1, sp, #4
   19f44:	str	r0, [r1]
   19f48:	mov	r1, #15
   19f4c:	mov	r2, #16
   19f50:	mov	r3, #0
   19f54:	ldr	r0, [r0, #96]	; 0x60
   19f58:	str	r0, [r4, #96]	; 0x60
   19f5c:	mov	r0, #54	; 0x36
   19f60:	bl	17edc <sf_gen_atmfield_code>
   19f64:	ldr	r1, [r0, #44]	; 0x2c
   19f68:	cmp	r0, #0
   19f6c:	clz	r1, r1
   19f70:	lsr	r1, r1, #5
   19f74:	str	r1, [r0, #44]	; 0x2c
   19f78:	beq	19fb4 <sf_gen_atmmulti_abbrev+0x590>
   19f7c:	ldr	r2, [r4, #96]	; 0x60
   19f80:	mov	r3, r0
   19f84:	cmp	r1, #0
   19f88:	mov	r1, #84	; 0x54
   19f8c:	add	r5, r3, #84	; 0x54
   19f90:	movweq	r1, #60	; 0x3c
   19f94:	addeq	r5, r3, #60	; 0x3c
   19f98:	ldr	r3, [r3, r1]
   19f9c:	str	r2, [r5]
   19fa0:	cmp	r3, #0
   19fa4:	beq	19fb0 <sf_gen_atmmulti_abbrev+0x58c>
   19fa8:	ldr	r1, [r3, #44]	; 0x2c
   19fac:	b	19f84 <sf_gen_atmmulti_abbrev+0x560>
   19fb0:	ldr	r1, [r0, #44]	; 0x2c
   19fb4:	clz	r1, r1
   19fb8:	cmp	r4, #0
   19fbc:	lsr	r1, r1, #5
   19fc0:	str	r1, [r0, #44]	; 0x2c
   19fc4:	str	r4, [sp, #4]
   19fc8:	beq	19ff8 <sf_gen_atmmulti_abbrev+0x5d4>
   19fcc:	mov	r2, r4
   19fd0:	ldr	r3, [r2, #44]	; 0x2c
   19fd4:	add	r1, r2, #84	; 0x54
   19fd8:	cmp	r3, #0
   19fdc:	mov	r3, #84	; 0x54
   19fe0:	movweq	r3, #60	; 0x3c
   19fe4:	addeq	r1, r2, #60	; 0x3c
   19fe8:	ldr	r2, [r2, r3]
   19fec:	cmp	r2, #0
   19ff0:	bne	19fd0 <sf_gen_atmmulti_abbrev+0x5ac>
   19ff4:	b	19ffc <sf_gen_atmmulti_abbrev+0x5d8>
   19ff8:	add	r1, sp, #4
   19ffc:	str	r0, [r1]
   1a000:	mov	r1, #77	; 0x4d
   1a004:	mov	r2, #16
   1a008:	mov	r3, #0
   1a00c:	ldr	r0, [r0, #96]	; 0x60
   1a010:	str	r0, [r4, #96]	; 0x60
   1a014:	mov	r0, #54	; 0x36
   1a018:	bl	17edc <sf_gen_atmfield_code>
   1a01c:	ldr	r1, [r0, #44]	; 0x2c
   1a020:	cmp	r0, #0
   1a024:	clz	r1, r1
   1a028:	lsr	r1, r1, #5
   1a02c:	str	r1, [r0, #44]	; 0x2c
   1a030:	beq	1a06c <sf_gen_atmmulti_abbrev+0x648>
   1a034:	ldr	r2, [r4, #96]	; 0x60
   1a038:	mov	r3, r0
   1a03c:	cmp	r1, #0
   1a040:	mov	r1, #84	; 0x54
   1a044:	add	r5, r3, #84	; 0x54
   1a048:	movweq	r1, #60	; 0x3c
   1a04c:	addeq	r5, r3, #60	; 0x3c
   1a050:	ldr	r3, [r3, r1]
   1a054:	str	r2, [r5]
   1a058:	cmp	r3, #0
   1a05c:	beq	1a068 <sf_gen_atmmulti_abbrev+0x644>
   1a060:	ldr	r1, [r3, #44]	; 0x2c
   1a064:	b	1a03c <sf_gen_atmmulti_abbrev+0x618>
   1a068:	ldr	r1, [r0, #44]	; 0x2c
   1a06c:	clz	r1, r1
   1a070:	cmp	r4, #0
   1a074:	lsr	r1, r1, #5
   1a078:	str	r1, [r0, #44]	; 0x2c
   1a07c:	str	r4, [sp, #4]
   1a080:	beq	1a0b0 <sf_gen_atmmulti_abbrev+0x68c>
   1a084:	mov	r2, r4
   1a088:	ldr	r3, [r2, #44]	; 0x2c
   1a08c:	add	r1, r2, #84	; 0x54
   1a090:	cmp	r3, #0
   1a094:	mov	r3, #84	; 0x54
   1a098:	movweq	r3, #60	; 0x3c
   1a09c:	addeq	r1, r2, #60	; 0x3c
   1a0a0:	ldr	r2, [r2, r3]
   1a0a4:	cmp	r2, #0
   1a0a8:	bne	1a088 <sf_gen_atmmulti_abbrev+0x664>
   1a0ac:	b	1a0b4 <sf_gen_atmmulti_abbrev+0x690>
   1a0b0:	add	r1, sp, #4
   1a0b4:	str	r0, [r1]
   1a0b8:	mov	r1, #90	; 0x5a
   1a0bc:	mov	r2, #16
   1a0c0:	mov	r3, #0
   1a0c4:	ldr	r0, [r0, #96]	; 0x60
   1a0c8:	str	r0, [r4, #96]	; 0x60
   1a0cc:	mov	r0, #54	; 0x36
   1a0d0:	bl	17edc <sf_gen_atmfield_code>
   1a0d4:	ldr	r1, [r0, #44]	; 0x2c
   1a0d8:	cmp	r0, #0
   1a0dc:	clz	r1, r1
   1a0e0:	lsr	r1, r1, #5
   1a0e4:	str	r1, [r0, #44]	; 0x2c
   1a0e8:	beq	1a124 <sf_gen_atmmulti_abbrev+0x700>
   1a0ec:	ldr	r2, [r4, #96]	; 0x60
   1a0f0:	mov	r3, r0
   1a0f4:	cmp	r1, #0
   1a0f8:	mov	r1, #84	; 0x54
   1a0fc:	add	r5, r3, #84	; 0x54
   1a100:	movweq	r1, #60	; 0x3c
   1a104:	addeq	r5, r3, #60	; 0x3c
   1a108:	ldr	r3, [r3, r1]
   1a10c:	str	r2, [r5]
   1a110:	cmp	r3, #0
   1a114:	beq	1a120 <sf_gen_atmmulti_abbrev+0x6fc>
   1a118:	ldr	r1, [r3, #44]	; 0x2c
   1a11c:	b	1a0f4 <sf_gen_atmmulti_abbrev+0x6d0>
   1a120:	ldr	r1, [r0, #44]	; 0x2c
   1a124:	clz	r1, r1
   1a128:	cmp	r4, #0
   1a12c:	lsr	r1, r1, #5
   1a130:	str	r1, [r0, #44]	; 0x2c
   1a134:	str	r4, [sp, #4]
   1a138:	beq	1a168 <sf_gen_atmmulti_abbrev+0x744>
   1a13c:	mov	r2, r4
   1a140:	ldr	r3, [r2, #44]	; 0x2c
   1a144:	add	r1, r2, #84	; 0x54
   1a148:	cmp	r3, #0
   1a14c:	mov	r3, #84	; 0x54
   1a150:	movweq	r3, #60	; 0x3c
   1a154:	addeq	r1, r2, #60	; 0x3c
   1a158:	ldr	r2, [r2, r3]
   1a15c:	cmp	r2, #0
   1a160:	bne	1a140 <sf_gen_atmmulti_abbrev+0x71c>
   1a164:	b	1a16c <sf_gen_atmmulti_abbrev+0x748>
   1a168:	add	r1, sp, #4
   1a16c:	str	r0, [r1]
   1a170:	ldr	r0, [r0, #96]	; 0x60
   1a174:	str	r0, [r4, #96]	; 0x60
   1a178:	mov	r0, #26
   1a17c:	bl	1823c <sf_gen_atmtype_abbrev>
   1a180:	cmp	r0, #0
   1a184:	beq	1a1b8 <sf_gen_atmmulti_abbrev+0x794>
   1a188:	ldr	r1, [r4, #96]	; 0x60
   1a18c:	mov	r2, r0
   1a190:	ldr	r3, [r2, #44]	; 0x2c
   1a194:	add	r5, r2, #84	; 0x54
   1a198:	cmp	r3, #0
   1a19c:	mov	r3, #84	; 0x54
   1a1a0:	movweq	r3, #60	; 0x3c
   1a1a4:	addeq	r5, r2, #60	; 0x3c
   1a1a8:	ldr	r2, [r2, r3]
   1a1ac:	str	r1, [r5]
   1a1b0:	cmp	r2, #0
   1a1b4:	bne	1a190 <sf_gen_atmmulti_abbrev+0x76c>
   1a1b8:	ldr	r1, [r0, #44]	; 0x2c
   1a1bc:	cmp	r4, #0
   1a1c0:	clz	r1, r1
   1a1c4:	lsr	r1, r1, #5
   1a1c8:	str	r1, [r0, #44]	; 0x2c
   1a1cc:	ldr	r2, [r4, #44]	; 0x2c
   1a1d0:	clz	r1, r2
   1a1d4:	lsr	r1, r1, #5
   1a1d8:	str	r1, [r4, #44]	; 0x2c
   1a1dc:	str	r4, [sp, #4]
   1a1e0:	beq	1a5e8 <sf_gen_atmmulti_abbrev+0xbc4>
   1a1e4:	cmp	r2, #0
   1a1e8:	mov	r2, #60	; 0x3c
   1a1ec:	add	r1, r4, #60	; 0x3c
   1a1f0:	movweq	r2, #84	; 0x54
   1a1f4:	addeq	r1, r4, #84	; 0x54
   1a1f8:	ldr	r2, [r4, r2]
   1a1fc:	cmp	r2, #0
   1a200:	beq	1a5ec <sf_gen_atmmulti_abbrev+0xbc8>
   1a204:	ldr	r3, [r2, #44]	; 0x2c
   1a208:	add	r1, r2, #84	; 0x54
   1a20c:	cmp	r3, #0
   1a210:	mov	r3, #84	; 0x54
   1a214:	movweq	r3, #60	; 0x3c
   1a218:	addeq	r1, r2, #60	; 0x3c
   1a21c:	ldr	r2, [r2, r3]
   1a220:	cmp	r2, #0
   1a224:	bne	1a204 <sf_gen_atmmulti_abbrev+0x7e0>
   1a228:	b	1a5ec <sf_gen_atmmulti_abbrev+0xbc8>
   1a22c:	add	r0, sp, #4
   1a230:	str	r5, [r0]
   1a234:	mov	r1, #0
   1a238:	mov	r2, #16
   1a23c:	mov	r3, #0
   1a240:	ldr	r0, [r5, #96]	; 0x60
   1a244:	str	r0, [r4, #96]	; 0x60
   1a248:	mov	r0, #51	; 0x33
   1a24c:	bl	17edc <sf_gen_atmfield_code>
   1a250:	cmp	r0, #0
   1a254:	beq	1a288 <sf_gen_atmmulti_abbrev+0x864>
   1a258:	ldr	r1, [r4, #96]	; 0x60
   1a25c:	mov	r2, r0
   1a260:	ldr	r3, [r2, #44]	; 0x2c
   1a264:	add	r5, r2, #84	; 0x54
   1a268:	cmp	r3, #0
   1a26c:	mov	r3, #84	; 0x54
   1a270:	movweq	r3, #60	; 0x3c
   1a274:	addeq	r5, r2, #60	; 0x3c
   1a278:	ldr	r2, [r2, r3]
   1a27c:	str	r1, [r5]
   1a280:	cmp	r2, #0
   1a284:	bne	1a260 <sf_gen_atmmulti_abbrev+0x83c>
   1a288:	ldr	r1, [r0, #44]	; 0x2c
   1a28c:	cmp	r4, #0
   1a290:	clz	r1, r1
   1a294:	lsr	r1, r1, #5
   1a298:	str	r1, [r0, #44]	; 0x2c
   1a29c:	ldr	r2, [r4, #44]	; 0x2c
   1a2a0:	clz	r1, r2
   1a2a4:	lsr	r1, r1, #5
   1a2a8:	str	r1, [r4, #44]	; 0x2c
   1a2ac:	str	r4, [sp, #4]
   1a2b0:	beq	1a5e8 <sf_gen_atmmulti_abbrev+0xbc4>
   1a2b4:	cmp	r2, #0
   1a2b8:	mov	r2, #60	; 0x3c
   1a2bc:	add	r1, r4, #60	; 0x3c
   1a2c0:	movweq	r2, #84	; 0x54
   1a2c4:	addeq	r1, r4, #84	; 0x54
   1a2c8:	ldr	r2, [r4, r2]
   1a2cc:	cmp	r2, #0
   1a2d0:	beq	1a5ec <sf_gen_atmmulti_abbrev+0xbc8>
   1a2d4:	ldr	r3, [r2, #44]	; 0x2c
   1a2d8:	add	r1, r2, #84	; 0x54
   1a2dc:	cmp	r3, #0
   1a2e0:	mov	r3, #84	; 0x54
   1a2e4:	movweq	r3, #60	; 0x3c
   1a2e8:	addeq	r1, r2, #60	; 0x3c
   1a2ec:	ldr	r2, [r2, r3]
   1a2f0:	cmp	r2, #0
   1a2f4:	bne	1a2d4 <sf_gen_atmmulti_abbrev+0x8b0>
   1a2f8:	b	1a5ec <sf_gen_atmmulti_abbrev+0xbc8>
   1a2fc:	add	r0, sp, #4
   1a300:	str	r5, [r0]
   1a304:	mov	r1, #7
   1a308:	mov	r2, #16
   1a30c:	mov	r3, #0
   1a310:	ldr	r0, [r5, #96]	; 0x60
   1a314:	str	r0, [r4, #96]	; 0x60
   1a318:	mov	r0, #54	; 0x36
   1a31c:	bl	17edc <sf_gen_atmfield_code>
   1a320:	ldr	r1, [r0, #44]	; 0x2c
   1a324:	cmp	r0, #0
   1a328:	clz	r1, r1
   1a32c:	lsr	r1, r1, #5
   1a330:	str	r1, [r0, #44]	; 0x2c
   1a334:	beq	1a370 <sf_gen_atmmulti_abbrev+0x94c>
   1a338:	ldr	r2, [r4, #96]	; 0x60
   1a33c:	mov	r3, r0
   1a340:	cmp	r1, #0
   1a344:	mov	r1, #84	; 0x54
   1a348:	add	r5, r3, #84	; 0x54
   1a34c:	movweq	r1, #60	; 0x3c
   1a350:	addeq	r5, r3, #60	; 0x3c
   1a354:	ldr	r3, [r3, r1]
   1a358:	str	r2, [r5]
   1a35c:	cmp	r3, #0
   1a360:	beq	1a36c <sf_gen_atmmulti_abbrev+0x948>
   1a364:	ldr	r1, [r3, #44]	; 0x2c
   1a368:	b	1a340 <sf_gen_atmmulti_abbrev+0x91c>
   1a36c:	ldr	r1, [r0, #44]	; 0x2c
   1a370:	clz	r1, r1
   1a374:	cmp	r4, #0
   1a378:	lsr	r1, r1, #5
   1a37c:	str	r1, [r0, #44]	; 0x2c
   1a380:	str	r4, [sp, #4]
   1a384:	beq	1a3b4 <sf_gen_atmmulti_abbrev+0x990>
   1a388:	mov	r2, r4
   1a38c:	ldr	r3, [r2, #44]	; 0x2c
   1a390:	add	r1, r2, #84	; 0x54
   1a394:	cmp	r3, #0
   1a398:	mov	r3, #84	; 0x54
   1a39c:	movweq	r3, #60	; 0x3c
   1a3a0:	addeq	r1, r2, #60	; 0x3c
   1a3a4:	ldr	r2, [r2, r3]
   1a3a8:	cmp	r2, #0
   1a3ac:	bne	1a38c <sf_gen_atmmulti_abbrev+0x968>
   1a3b0:	b	1a3b8 <sf_gen_atmmulti_abbrev+0x994>
   1a3b4:	add	r1, sp, #4
   1a3b8:	str	r0, [r1]
   1a3bc:	mov	r1, #77	; 0x4d
   1a3c0:	mov	r2, #16
   1a3c4:	mov	r3, #0
   1a3c8:	ldr	r0, [r0, #96]	; 0x60
   1a3cc:	str	r0, [r4, #96]	; 0x60
   1a3d0:	mov	r0, #54	; 0x36
   1a3d4:	bl	17edc <sf_gen_atmfield_code>
   1a3d8:	ldr	r1, [r0, #44]	; 0x2c
   1a3dc:	cmp	r0, #0
   1a3e0:	clz	r1, r1
   1a3e4:	lsr	r1, r1, #5
   1a3e8:	str	r1, [r0, #44]	; 0x2c
   1a3ec:	beq	1a428 <sf_gen_atmmulti_abbrev+0xa04>
   1a3f0:	ldr	r2, [r4, #96]	; 0x60
   1a3f4:	mov	r3, r0
   1a3f8:	cmp	r1, #0
   1a3fc:	mov	r1, #84	; 0x54
   1a400:	add	r5, r3, #84	; 0x54
   1a404:	movweq	r1, #60	; 0x3c
   1a408:	addeq	r5, r3, #60	; 0x3c
   1a40c:	ldr	r3, [r3, r1]
   1a410:	str	r2, [r5]
   1a414:	cmp	r3, #0
   1a418:	beq	1a424 <sf_gen_atmmulti_abbrev+0xa00>
   1a41c:	ldr	r1, [r3, #44]	; 0x2c
   1a420:	b	1a3f8 <sf_gen_atmmulti_abbrev+0x9d4>
   1a424:	ldr	r1, [r0, #44]	; 0x2c
   1a428:	clz	r1, r1
   1a42c:	cmp	r4, #0
   1a430:	lsr	r1, r1, #5
   1a434:	str	r1, [r0, #44]	; 0x2c
   1a438:	str	r4, [sp, #4]
   1a43c:	beq	1a46c <sf_gen_atmmulti_abbrev+0xa48>
   1a440:	mov	r2, r4
   1a444:	ldr	r3, [r2, #44]	; 0x2c
   1a448:	add	r1, r2, #84	; 0x54
   1a44c:	cmp	r3, #0
   1a450:	mov	r3, #84	; 0x54
   1a454:	movweq	r3, #60	; 0x3c
   1a458:	addeq	r1, r2, #60	; 0x3c
   1a45c:	ldr	r2, [r2, r3]
   1a460:	cmp	r2, #0
   1a464:	bne	1a444 <sf_gen_atmmulti_abbrev+0xa20>
   1a468:	b	1a470 <sf_gen_atmmulti_abbrev+0xa4c>
   1a46c:	add	r1, sp, #4
   1a470:	str	r0, [r1]
   1a474:	mov	r1, #90	; 0x5a
   1a478:	mov	r2, #16
   1a47c:	mov	r3, #0
   1a480:	ldr	r0, [r0, #96]	; 0x60
   1a484:	str	r0, [r4, #96]	; 0x60
   1a488:	mov	r0, #54	; 0x36
   1a48c:	bl	17edc <sf_gen_atmfield_code>
   1a490:	ldr	r1, [r0, #44]	; 0x2c
   1a494:	cmp	r0, #0
   1a498:	clz	r1, r1
   1a49c:	lsr	r1, r1, #5
   1a4a0:	str	r1, [r0, #44]	; 0x2c
   1a4a4:	beq	1a4e0 <sf_gen_atmmulti_abbrev+0xabc>
   1a4a8:	ldr	r2, [r4, #96]	; 0x60
   1a4ac:	mov	r3, r0
   1a4b0:	cmp	r1, #0
   1a4b4:	mov	r1, #84	; 0x54
   1a4b8:	add	r5, r3, #84	; 0x54
   1a4bc:	movweq	r1, #60	; 0x3c
   1a4c0:	addeq	r5, r3, #60	; 0x3c
   1a4c4:	ldr	r3, [r3, r1]
   1a4c8:	str	r2, [r5]
   1a4cc:	cmp	r3, #0
   1a4d0:	beq	1a4dc <sf_gen_atmmulti_abbrev+0xab8>
   1a4d4:	ldr	r1, [r3, #44]	; 0x2c
   1a4d8:	b	1a4b0 <sf_gen_atmmulti_abbrev+0xa8c>
   1a4dc:	ldr	r1, [r0, #44]	; 0x2c
   1a4e0:	clz	r1, r1
   1a4e4:	cmp	r4, #0
   1a4e8:	lsr	r1, r1, #5
   1a4ec:	str	r1, [r0, #44]	; 0x2c
   1a4f0:	str	r4, [sp, #4]
   1a4f4:	beq	1a524 <sf_gen_atmmulti_abbrev+0xb00>
   1a4f8:	mov	r2, r4
   1a4fc:	ldr	r3, [r2, #44]	; 0x2c
   1a500:	add	r1, r2, #84	; 0x54
   1a504:	cmp	r3, #0
   1a508:	mov	r3, #84	; 0x54
   1a50c:	movweq	r3, #60	; 0x3c
   1a510:	addeq	r1, r2, #60	; 0x3c
   1a514:	ldr	r2, [r2, r3]
   1a518:	cmp	r2, #0
   1a51c:	bne	1a4fc <sf_gen_atmmulti_abbrev+0xad8>
   1a520:	b	1a528 <sf_gen_atmmulti_abbrev+0xb04>
   1a524:	add	r1, sp, #4
   1a528:	str	r0, [r1]
   1a52c:	ldr	r0, [r0, #96]	; 0x60
   1a530:	str	r0, [r4, #96]	; 0x60
   1a534:	mov	r0, #22
   1a538:	bl	1823c <sf_gen_atmtype_abbrev>
   1a53c:	cmp	r0, #0
   1a540:	beq	1a574 <sf_gen_atmmulti_abbrev+0xb50>
   1a544:	ldr	r1, [r4, #96]	; 0x60
   1a548:	mov	r2, r0
   1a54c:	ldr	r3, [r2, #44]	; 0x2c
   1a550:	add	r5, r2, #84	; 0x54
   1a554:	cmp	r3, #0
   1a558:	mov	r3, #84	; 0x54
   1a55c:	movweq	r3, #60	; 0x3c
   1a560:	addeq	r5, r2, #60	; 0x3c
   1a564:	ldr	r2, [r2, r3]
   1a568:	str	r1, [r5]
   1a56c:	cmp	r2, #0
   1a570:	bne	1a54c <sf_gen_atmmulti_abbrev+0xb28>
   1a574:	ldr	r1, [r0, #44]	; 0x2c
   1a578:	cmp	r4, #0
   1a57c:	clz	r1, r1
   1a580:	lsr	r1, r1, #5
   1a584:	str	r1, [r0, #44]	; 0x2c
   1a588:	ldr	r2, [r4, #44]	; 0x2c
   1a58c:	clz	r1, r2
   1a590:	lsr	r1, r1, #5
   1a594:	str	r1, [r4, #44]	; 0x2c
   1a598:	str	r4, [sp, #4]
   1a59c:	beq	1a5e8 <sf_gen_atmmulti_abbrev+0xbc4>
   1a5a0:	cmp	r2, #0
   1a5a4:	mov	r2, #60	; 0x3c
   1a5a8:	add	r1, r4, #60	; 0x3c
   1a5ac:	movweq	r2, #84	; 0x54
   1a5b0:	addeq	r1, r4, #84	; 0x54
   1a5b4:	ldr	r2, [r4, r2]
   1a5b8:	cmp	r2, #0
   1a5bc:	beq	1a5ec <sf_gen_atmmulti_abbrev+0xbc8>
   1a5c0:	ldr	r3, [r2, #44]	; 0x2c
   1a5c4:	add	r1, r2, #84	; 0x54
   1a5c8:	cmp	r3, #0
   1a5cc:	mov	r3, #84	; 0x54
   1a5d0:	movweq	r3, #60	; 0x3c
   1a5d4:	addeq	r1, r2, #60	; 0x3c
   1a5d8:	ldr	r2, [r2, r3]
   1a5dc:	cmp	r2, #0
   1a5e0:	bne	1a5c0 <sf_gen_atmmulti_abbrev+0xb9c>
   1a5e4:	b	1a5ec <sf_gen_atmmulti_abbrev+0xbc8>
   1a5e8:	add	r1, sp, #4
   1a5ec:	str	r0, [r1]
   1a5f0:	ldr	r1, [r4, #44]	; 0x2c
   1a5f4:	clz	r1, r1
   1a5f8:	lsr	r1, r1, #5
   1a5fc:	str	r1, [r4, #44]	; 0x2c
   1a600:	ldr	r0, [r0, #96]	; 0x60
   1a604:	str	r0, [r4, #96]	; 0x60
   1a608:	mov	r0, r4
   1a60c:	sub	sp, fp, #8
   1a610:	pop	{r4, r5, fp, pc}
   1a614:	bl	f24 <abort@plt>
   1a618:	ldr	r0, [pc, #56]	; 1a658 <sf_gen_atmmulti_abbrev+0xc34>
   1a61c:	add	r0, pc, r0
   1a620:	bl	214c <sf_bpf_error>
   1a624:	ldr	r0, [pc, #52]	; 1a660 <sf_gen_atmmulti_abbrev+0xc3c>
   1a628:	add	r0, pc, r0
   1a62c:	bl	214c <sf_bpf_error>
   1a630:	ldr	r0, [pc, #36]	; 1a65c <sf_gen_atmmulti_abbrev+0xc38>
   1a634:	add	r0, pc, r0
   1a638:	bl	214c <sf_bpf_error>
   1a63c:	ldr	r0, [pc, #32]	; 1a664 <sf_gen_atmmulti_abbrev+0xc40>
   1a640:	add	r0, pc, r0
   1a644:	bl	214c <sf_bpf_error>
   1a648:	.word	0x0002c96c
   1a64c:	.word	0x0002ca9c
   1a650:	.word	0x0002ca04
   1a654:	.word	0x0002c8d4
   1a658:	.word	0x0000f3b7
   1a65c:	.word	0x0000f3bf
   1a660:	.word	0x0000f3ed
   1a664:	.word	0x0000f3fc

0001a668 <gen_ether_linktype>:
   1a668:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a66c:	add	fp, sp, #24
   1a670:	sub	sp, sp, #8
   1a674:	mov	r5, r0
   1a678:	cmp	r0, #253	; 0xfd
   1a67c:	bgt	1a78c <gen_ether_linktype+0x124>
   1a680:	cmp	r5, #6
   1a684:	beq	1a698 <gen_ether_linktype+0x30>
   1a688:	cmp	r5, #224	; 0xe0
   1a68c:	beq	1aba4 <gen_ether_linktype+0x53c>
   1a690:	cmp	r5, #240	; 0xf0
   1a694:	bne	1aa74 <gen_ether_linktype+0x40c>
   1a698:	ldr	r0, [pc, #2204]	; 1af3c <gen_ether_linktype+0x8d4>
   1a69c:	mov	r2, #8
   1a6a0:	movw	r3, #1500	; 0x5dc
   1a6a4:	add	r0, pc, r0
   1a6a8:	ldr	r1, [r0, #40]	; 0x28
   1a6ac:	mov	r0, #1
   1a6b0:	bl	14ae0 <gen_cmp_gt>
   1a6b4:	mov	r6, r0
   1a6b8:	ldr	r0, [r0, #44]	; 0x2c
   1a6bc:	orr	r3, r5, r5, lsl #8
   1a6c0:	mov	r1, #0
   1a6c4:	mov	r2, #8
   1a6c8:	clz	r0, r0
   1a6cc:	lsr	r0, r0, #5
   1a6d0:	str	r0, [r6, #44]	; 0x2c
   1a6d4:	mov	r0, #2
   1a6d8:	bl	a0a4 <gen_cmp>
   1a6dc:	mov	r4, r0
   1a6e0:	cmp	r6, #0
   1a6e4:	beq	1a718 <gen_ether_linktype+0xb0>
   1a6e8:	ldr	r0, [r4, #96]	; 0x60
   1a6ec:	mov	r1, r6
   1a6f0:	ldr	r2, [r1, #44]	; 0x2c
   1a6f4:	add	r3, r1, #84	; 0x54
   1a6f8:	cmp	r2, #0
   1a6fc:	mov	r2, #84	; 0x54
   1a700:	movweq	r2, #60	; 0x3c
   1a704:	addeq	r3, r1, #60	; 0x3c
   1a708:	ldr	r1, [r1, r2]
   1a70c:	str	r0, [r3]
   1a710:	cmp	r1, #0
   1a714:	bne	1a6f0 <gen_ether_linktype+0x88>
   1a718:	ldr	r0, [r6, #44]	; 0x2c
   1a71c:	cmp	r4, #0
   1a720:	clz	r0, r0
   1a724:	lsr	r0, r0, #5
   1a728:	str	r0, [r6, #44]	; 0x2c
   1a72c:	ldr	r1, [r4, #44]	; 0x2c
   1a730:	clz	r0, r1
   1a734:	lsr	r0, r0, #5
   1a738:	str	r0, [r4, #44]	; 0x2c
   1a73c:	str	r4, [sp]
   1a740:	beq	1ab78 <gen_ether_linktype+0x510>
   1a744:	cmp	r1, #0
   1a748:	mov	r1, #60	; 0x3c
   1a74c:	add	r0, r4, #60	; 0x3c
   1a750:	movweq	r1, #84	; 0x54
   1a754:	addeq	r0, r4, #84	; 0x54
   1a758:	ldr	r1, [r4, r1]
   1a75c:	cmp	r1, #0
   1a760:	beq	1ab7c <gen_ether_linktype+0x514>
   1a764:	ldr	r2, [r1, #44]	; 0x2c
   1a768:	add	r0, r1, #84	; 0x54
   1a76c:	cmp	r2, #0
   1a770:	mov	r2, #84	; 0x54
   1a774:	movweq	r2, #60	; 0x3c
   1a778:	addeq	r0, r1, #60	; 0x3c
   1a77c:	ldr	r1, [r1, r2]
   1a780:	cmp	r1, #0
   1a784:	bne	1a764 <gen_ether_linktype+0xfc>
   1a788:	b	1ab7c <gen_ether_linktype+0x514>
   1a78c:	movw	r0, #33011	; 0x80f3
   1a790:	cmp	r5, r0
   1a794:	movwne	r0, #32923	; 0x809b
   1a798:	cmpne	r5, r0
   1a79c:	bne	1aa6c <gen_ether_linktype+0x404>
   1a7a0:	ldr	r9, [pc, #1948]	; 1af44 <gen_ether_linktype+0x8dc>
   1a7a4:	mov	r0, #1
   1a7a8:	mov	r2, #8
   1a7ac:	movw	r3, #1500	; 0x5dc
   1a7b0:	add	r9, pc, r9
   1a7b4:	ldr	r1, [r9, #40]	; 0x28
   1a7b8:	bl	14ae0 <gen_cmp_gt>
   1a7bc:	mov	r6, r0
   1a7c0:	ldr	r0, [r0, #44]	; 0x2c
   1a7c4:	clz	r0, r0
   1a7c8:	lsr	r0, r0, #5
   1a7cc:	str	r0, [r6, #44]	; 0x2c
   1a7d0:	mov	r0, #3
   1a7d4:	strb	r0, [sp, #2]
   1a7d8:	movw	r0, #43690	; 0xaaaa
   1a7dc:	strh	r0, [sp]
   1a7e0:	movw	r0, #32923	; 0x809b
   1a7e4:	cmp	r5, r0
   1a7e8:	bne	1a8d0 <gen_ether_linktype+0x268>
   1a7ec:	mov	r0, #155	; 0x9b
   1a7f0:	mov	r7, sp
   1a7f4:	mov	r1, #0
   1a7f8:	mov	r2, #8
   1a7fc:	strb	r0, [sp, #7]
   1a800:	movw	r0, #8
   1a804:	mov	r3, r7
   1a808:	movt	r0, #32775	; 0x8007
   1a80c:	str	r0, [sp, #3]
   1a810:	mov	r0, #2
   1a814:	bl	1b00c <gen_bcmp>
   1a818:	mov	r8, r0
   1a81c:	mov	r4, r0
   1a820:	cmp	r6, #0
   1a824:	ldr	r0, [r8, #96]!	; 0x60
   1a828:	beq	1a858 <gen_ether_linktype+0x1f0>
   1a82c:	mov	r1, r6
   1a830:	ldr	r2, [r1, #44]	; 0x2c
   1a834:	add	r3, r1, #84	; 0x54
   1a838:	cmp	r2, #0
   1a83c:	mov	r2, #84	; 0x54
   1a840:	movweq	r2, #60	; 0x3c
   1a844:	addeq	r3, r1, #60	; 0x3c
   1a848:	ldr	r1, [r1, r2]
   1a84c:	str	r0, [r3]
   1a850:	cmp	r1, #0
   1a854:	bne	1a830 <gen_ether_linktype+0x1c8>
   1a858:	ldr	r0, [r6, #44]	; 0x2c
   1a85c:	movw	r5, #32923	; 0x809b
   1a860:	cmp	r4, #0
   1a864:	clz	r0, r0
   1a868:	lsr	r0, r0, #5
   1a86c:	str	r0, [r6, #44]	; 0x2c
   1a870:	ldr	r0, [r4, #44]	; 0x2c
   1a874:	clz	r1, r0
   1a878:	lsr	r1, r1, #5
   1a87c:	str	r1, [r4, #44]	; 0x2c
   1a880:	str	r4, [sp]
   1a884:	beq	1a9a8 <gen_ether_linktype+0x340>
   1a888:	cmp	r0, #0
   1a88c:	mov	r0, #60	; 0x3c
   1a890:	add	r7, r4, #60	; 0x3c
   1a894:	movweq	r0, #84	; 0x54
   1a898:	addeq	r7, r4, #84	; 0x54
   1a89c:	ldr	r0, [r4, r0]
   1a8a0:	cmp	r0, #0
   1a8a4:	beq	1a9a8 <gen_ether_linktype+0x340>
   1a8a8:	ldr	r1, [r0, #44]	; 0x2c
   1a8ac:	add	r7, r0, #84	; 0x54
   1a8b0:	cmp	r1, #0
   1a8b4:	mov	r1, #84	; 0x54
   1a8b8:	movweq	r1, #60	; 0x3c
   1a8bc:	addeq	r7, r0, #60	; 0x3c
   1a8c0:	ldr	r0, [r0, r1]
   1a8c4:	cmp	r0, #0
   1a8c8:	bne	1a8a8 <gen_ether_linktype+0x240>
   1a8cc:	b	1a9a8 <gen_ether_linktype+0x340>
   1a8d0:	mov	r0, #243	; 0xf3
   1a8d4:	mov	r7, sp
   1a8d8:	mov	r1, #0
   1a8dc:	mov	r2, #8
   1a8e0:	strb	r0, [sp, #7]
   1a8e4:	mov	r0, #-2147483648	; 0x80000000
   1a8e8:	mov	r3, r7
   1a8ec:	str	r0, [sp, #3]
   1a8f0:	mov	r0, #2
   1a8f4:	bl	1b00c <gen_bcmp>
   1a8f8:	mov	r8, r0
   1a8fc:	mov	r4, r0
   1a900:	cmp	r6, #0
   1a904:	ldr	r0, [r8, #96]!	; 0x60
   1a908:	beq	1a938 <gen_ether_linktype+0x2d0>
   1a90c:	mov	r1, r6
   1a910:	ldr	r2, [r1, #44]	; 0x2c
   1a914:	add	r3, r1, #84	; 0x54
   1a918:	cmp	r2, #0
   1a91c:	mov	r2, #84	; 0x54
   1a920:	movweq	r2, #60	; 0x3c
   1a924:	addeq	r3, r1, #60	; 0x3c
   1a928:	ldr	r1, [r1, r2]
   1a92c:	str	r0, [r3]
   1a930:	cmp	r1, #0
   1a934:	bne	1a910 <gen_ether_linktype+0x2a8>
   1a938:	ldr	r0, [r6, #44]	; 0x2c
   1a93c:	cmp	r4, #0
   1a940:	clz	r0, r0
   1a944:	lsr	r0, r0, #5
   1a948:	str	r0, [r6, #44]	; 0x2c
   1a94c:	ldr	r0, [r4, #44]	; 0x2c
   1a950:	clz	r1, r0
   1a954:	lsr	r1, r1, #5
   1a958:	str	r1, [r4, #44]	; 0x2c
   1a95c:	str	r4, [sp]
   1a960:	beq	1a9a8 <gen_ether_linktype+0x340>
   1a964:	cmp	r0, #0
   1a968:	mov	r0, #60	; 0x3c
   1a96c:	add	r7, r4, #60	; 0x3c
   1a970:	movweq	r0, #84	; 0x54
   1a974:	addeq	r7, r4, #84	; 0x54
   1a978:	ldr	r0, [r4, r0]
   1a97c:	cmp	r0, #0
   1a980:	beq	1a9a8 <gen_ether_linktype+0x340>
   1a984:	ldr	r1, [r0, #44]	; 0x2c
   1a988:	add	r7, r0, #84	; 0x54
   1a98c:	cmp	r1, #0
   1a990:	mov	r1, #84	; 0x54
   1a994:	movweq	r1, #60	; 0x3c
   1a998:	addeq	r7, r0, #60	; 0x3c
   1a99c:	ldr	r0, [r0, r1]
   1a9a0:	cmp	r0, #0
   1a9a4:	bne	1a984 <gen_ether_linktype+0x31c>
   1a9a8:	str	r6, [r7]
   1a9ac:	mov	r2, #8
   1a9b0:	mov	r3, r5
   1a9b4:	ldr	r0, [r4, #44]	; 0x2c
   1a9b8:	clz	r0, r0
   1a9bc:	lsr	r0, r0, #5
   1a9c0:	str	r0, [r4, #44]	; 0x2c
   1a9c4:	ldr	r0, [r6, #96]	; 0x60
   1a9c8:	str	r0, [r8]
   1a9cc:	mov	r0, #1
   1a9d0:	ldr	r1, [r9, #40]	; 0x28
   1a9d4:	bl	a0a4 <gen_cmp>
   1a9d8:	ldr	r1, [r0, #44]	; 0x2c
   1a9dc:	cmp	r0, #0
   1a9e0:	clz	r1, r1
   1a9e4:	lsr	r1, r1, #5
   1a9e8:	str	r1, [r0, #44]	; 0x2c
   1a9ec:	beq	1aa28 <gen_ether_linktype+0x3c0>
   1a9f0:	ldr	r2, [r8]
   1a9f4:	mov	r3, r0
   1a9f8:	cmp	r1, #0
   1a9fc:	mov	r1, #84	; 0x54
   1aa00:	add	r7, r3, #84	; 0x54
   1aa04:	movweq	r1, #60	; 0x3c
   1aa08:	addeq	r7, r3, #60	; 0x3c
   1aa0c:	ldr	r3, [r3, r1]
   1aa10:	str	r2, [r7]
   1aa14:	cmp	r3, #0
   1aa18:	beq	1aa24 <gen_ether_linktype+0x3bc>
   1aa1c:	ldr	r1, [r3, #44]	; 0x2c
   1aa20:	b	1a9f8 <gen_ether_linktype+0x390>
   1aa24:	ldr	r1, [r0, #44]	; 0x2c
   1aa28:	clz	r1, r1
   1aa2c:	cmp	r4, #0
   1aa30:	lsr	r1, r1, #5
   1aa34:	str	r1, [r0, #44]	; 0x2c
   1aa38:	str	r4, [sp]
   1aa3c:	beq	1ac20 <gen_ether_linktype+0x5b8>
   1aa40:	mov	r2, r4
   1aa44:	ldr	r3, [r2, #44]	; 0x2c
   1aa48:	add	r1, r2, #84	; 0x54
   1aa4c:	cmp	r3, #0
   1aa50:	mov	r3, #84	; 0x54
   1aa54:	movweq	r3, #60	; 0x3c
   1aa58:	addeq	r1, r2, #60	; 0x3c
   1aa5c:	ldr	r2, [r2, r3]
   1aa60:	cmp	r2, #0
   1aa64:	bne	1aa44 <gen_ether_linktype+0x3dc>
   1aa68:	b	1ac24 <gen_ether_linktype+0x5bc>
   1aa6c:	cmp	r5, #254	; 0xfe
   1aa70:	beq	1a698 <gen_ether_linktype+0x30>
   1aa74:	ldr	r4, [pc, #1212]	; 1af38 <gen_ether_linktype+0x8d0>
   1aa78:	movw	r0, #1500	; 0x5dc
   1aa7c:	cmp	r5, r0
   1aa80:	add	r4, pc, r4
   1aa84:	ldr	r1, [r4, #40]	; 0x28
   1aa88:	bgt	1ac84 <gen_ether_linktype+0x61c>
   1aa8c:	mov	r0, #1
   1aa90:	mov	r2, #8
   1aa94:	movw	r3, #1500	; 0x5dc
   1aa98:	bl	14ae0 <gen_cmp_gt>
   1aa9c:	mov	r6, r0
   1aaa0:	ldr	r0, [r0, #44]	; 0x2c
   1aaa4:	mov	r2, #16
   1aaa8:	mov	r3, r5
   1aaac:	clz	r0, r0
   1aab0:	lsr	r0, r0, #5
   1aab4:	str	r0, [r6, #44]	; 0x2c
   1aab8:	ldr	r0, [r4, #40]	; 0x28
   1aabc:	add	r1, r0, #2
   1aac0:	mov	r0, #1
   1aac4:	bl	a0a4 <gen_cmp>
   1aac8:	mov	r4, r0
   1aacc:	cmp	r6, #0
   1aad0:	beq	1ab04 <gen_ether_linktype+0x49c>
   1aad4:	ldr	r0, [r4, #96]	; 0x60
   1aad8:	mov	r1, r6
   1aadc:	ldr	r2, [r1, #44]	; 0x2c
   1aae0:	add	r3, r1, #84	; 0x54
   1aae4:	cmp	r2, #0
   1aae8:	mov	r2, #84	; 0x54
   1aaec:	movweq	r2, #60	; 0x3c
   1aaf0:	addeq	r3, r1, #60	; 0x3c
   1aaf4:	ldr	r1, [r1, r2]
   1aaf8:	str	r0, [r3]
   1aafc:	cmp	r1, #0
   1ab00:	bne	1aadc <gen_ether_linktype+0x474>
   1ab04:	ldr	r0, [r6, #44]	; 0x2c
   1ab08:	cmp	r4, #0
   1ab0c:	clz	r0, r0
   1ab10:	lsr	r0, r0, #5
   1ab14:	str	r0, [r6, #44]	; 0x2c
   1ab18:	ldr	r1, [r4, #44]	; 0x2c
   1ab1c:	clz	r0, r1
   1ab20:	lsr	r0, r0, #5
   1ab24:	str	r0, [r4, #44]	; 0x2c
   1ab28:	str	r4, [sp]
   1ab2c:	beq	1ab78 <gen_ether_linktype+0x510>
   1ab30:	cmp	r1, #0
   1ab34:	mov	r1, #60	; 0x3c
   1ab38:	add	r0, r4, #60	; 0x3c
   1ab3c:	movweq	r1, #84	; 0x54
   1ab40:	addeq	r0, r4, #84	; 0x54
   1ab44:	ldr	r1, [r4, r1]
   1ab48:	cmp	r1, #0
   1ab4c:	beq	1ab7c <gen_ether_linktype+0x514>
   1ab50:	ldr	r2, [r1, #44]	; 0x2c
   1ab54:	add	r0, r1, #84	; 0x54
   1ab58:	cmp	r2, #0
   1ab5c:	mov	r2, #84	; 0x54
   1ab60:	movweq	r2, #60	; 0x3c
   1ab64:	addeq	r0, r1, #60	; 0x3c
   1ab68:	ldr	r1, [r1, r2]
   1ab6c:	cmp	r1, #0
   1ab70:	bne	1ab50 <gen_ether_linktype+0x4e8>
   1ab74:	b	1ab7c <gen_ether_linktype+0x514>
   1ab78:	mov	r0, sp
   1ab7c:	str	r6, [r0]
   1ab80:	ldr	r0, [r4, #44]	; 0x2c
   1ab84:	clz	r0, r0
   1ab88:	lsr	r0, r0, #5
   1ab8c:	str	r0, [r4, #44]	; 0x2c
   1ab90:	ldr	r0, [r6, #96]	; 0x60
   1ab94:	str	r0, [r4, #96]	; 0x60
   1ab98:	mov	r0, r4
   1ab9c:	sub	sp, fp, #24
   1aba0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1aba4:	mov	r0, #2
   1aba8:	mov	r1, #0
   1abac:	mov	r2, #16
   1abb0:	mov	r3, #224	; 0xe0
   1abb4:	bl	a0a4 <gen_cmp>
   1abb8:	mov	r5, r0
   1abbc:	mov	r0, #2
   1abc0:	mov	r1, #0
   1abc4:	mov	r2, #8
   1abc8:	movw	r3, #65535	; 0xffff
   1abcc:	bl	a0a4 <gen_cmp>
   1abd0:	mov	r4, r0
   1abd4:	ldr	r0, [r5, #44]	; 0x2c
   1abd8:	cmp	r5, #0
   1abdc:	clz	r0, r0
   1abe0:	lsr	r0, r0, #5
   1abe4:	str	r0, [r5, #44]	; 0x2c
   1abe8:	beq	1ac40 <gen_ether_linktype+0x5d8>
   1abec:	ldr	r1, [r4, #96]	; 0x60
   1abf0:	mov	r2, r5
   1abf4:	cmp	r0, #0
   1abf8:	mov	r0, #84	; 0x54
   1abfc:	add	r3, r2, #84	; 0x54
   1ac00:	movweq	r0, #60	; 0x3c
   1ac04:	addeq	r3, r2, #60	; 0x3c
   1ac08:	ldr	r2, [r2, r0]
   1ac0c:	str	r1, [r3]
   1ac10:	cmp	r2, #0
   1ac14:	beq	1ac3c <gen_ether_linktype+0x5d4>
   1ac18:	ldr	r0, [r2, #44]	; 0x2c
   1ac1c:	b	1abf4 <gen_ether_linktype+0x58c>
   1ac20:	mov	r1, sp
   1ac24:	str	r0, [r1]
   1ac28:	ldr	r0, [r0, #96]	; 0x60
   1ac2c:	str	r0, [r8]
   1ac30:	mov	r0, r4
   1ac34:	sub	sp, fp, #24
   1ac38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ac3c:	ldr	r0, [r5, #44]	; 0x2c
   1ac40:	clz	r0, r0
   1ac44:	cmp	r4, #0
   1ac48:	lsr	r0, r0, #5
   1ac4c:	str	r0, [r5, #44]	; 0x2c
   1ac50:	str	r4, [sp]
   1ac54:	beq	1ac9c <gen_ether_linktype+0x634>
   1ac58:	mov	r1, r4
   1ac5c:	ldr	r2, [r1, #44]	; 0x2c
   1ac60:	add	r0, r1, #84	; 0x54
   1ac64:	cmp	r2, #0
   1ac68:	mov	r2, #84	; 0x54
   1ac6c:	movweq	r2, #60	; 0x3c
   1ac70:	addeq	r0, r1, #60	; 0x3c
   1ac74:	ldr	r1, [r1, r2]
   1ac78:	cmp	r1, #0
   1ac7c:	bne	1ac5c <gen_ether_linktype+0x5f4>
   1ac80:	b	1aca0 <gen_ether_linktype+0x638>
   1ac84:	mov	r0, #1
   1ac88:	mov	r2, #8
   1ac8c:	mov	r3, r5
   1ac90:	sub	sp, fp, #24
   1ac94:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ac98:	b	a0a4 <gen_cmp>
   1ac9c:	mov	r0, sp
   1aca0:	str	r5, [r0]
   1aca4:	mov	r1, #0
   1aca8:	mov	r2, #8
   1acac:	ldr	r0, [r5, #96]	; 0x60
   1acb0:	mov	r5, sp
   1acb4:	mov	r3, r5
   1acb8:	str	r0, [r4, #96]	; 0x60
   1acbc:	movw	r0, #0
   1acc0:	movt	r0, #14209	; 0x3781
   1acc4:	str	r0, [sp, #4]
   1acc8:	movw	r0, #43690	; 0xaaaa
   1accc:	movt	r0, #3
   1acd0:	str	r0, [sp]
   1acd4:	mov	r0, #2
   1acd8:	bl	1b00c <gen_bcmp>
   1acdc:	ldr	r1, [r0, #44]	; 0x2c
   1ace0:	cmp	r0, #0
   1ace4:	clz	r1, r1
   1ace8:	lsr	r1, r1, #5
   1acec:	str	r1, [r0, #44]	; 0x2c
   1acf0:	beq	1ad2c <gen_ether_linktype+0x6c4>
   1acf4:	ldr	r2, [r4, #96]	; 0x60
   1acf8:	mov	r3, r0
   1acfc:	cmp	r1, #0
   1ad00:	mov	r1, #84	; 0x54
   1ad04:	add	r7, r3, #84	; 0x54
   1ad08:	movweq	r1, #60	; 0x3c
   1ad0c:	addeq	r7, r3, #60	; 0x3c
   1ad10:	ldr	r3, [r3, r1]
   1ad14:	str	r2, [r7]
   1ad18:	cmp	r3, #0
   1ad1c:	beq	1ad28 <gen_ether_linktype+0x6c0>
   1ad20:	ldr	r1, [r3, #44]	; 0x2c
   1ad24:	b	1acfc <gen_ether_linktype+0x694>
   1ad28:	ldr	r1, [r0, #44]	; 0x2c
   1ad2c:	clz	r1, r1
   1ad30:	cmp	r4, #0
   1ad34:	lsr	r1, r1, #5
   1ad38:	str	r1, [r0, #44]	; 0x2c
   1ad3c:	str	r4, [sp]
   1ad40:	beq	1ad6c <gen_ether_linktype+0x704>
   1ad44:	mov	r1, r4
   1ad48:	ldr	r2, [r1, #44]	; 0x2c
   1ad4c:	add	r5, r1, #84	; 0x54
   1ad50:	cmp	r2, #0
   1ad54:	mov	r2, #84	; 0x54
   1ad58:	movweq	r2, #60	; 0x3c
   1ad5c:	addeq	r5, r1, #60	; 0x3c
   1ad60:	ldr	r1, [r1, r2]
   1ad64:	cmp	r1, #0
   1ad68:	bne	1ad48 <gen_ether_linktype+0x6e0>
   1ad6c:	str	r0, [r5]
   1ad70:	mov	r2, #8
   1ad74:	movw	r3, #1500	; 0x5dc
   1ad78:	ldr	r0, [r0, #96]	; 0x60
   1ad7c:	str	r0, [r4, #96]	; 0x60
   1ad80:	mov	r0, #1
   1ad84:	ldr	r5, [pc, #436]	; 1af40 <gen_ether_linktype+0x8d8>
   1ad88:	add	r5, pc, r5
   1ad8c:	ldr	r1, [r5, #40]	; 0x28
   1ad90:	bl	14ae0 <gen_cmp_gt>
   1ad94:	ldr	r1, [r0, #44]	; 0x2c
   1ad98:	cmp	r0, #0
   1ad9c:	clz	r1, r1
   1ada0:	lsr	r1, r1, #5
   1ada4:	str	r1, [r0, #44]	; 0x2c
   1ada8:	beq	1ade4 <gen_ether_linktype+0x77c>
   1adac:	ldr	r2, [r4, #96]	; 0x60
   1adb0:	mov	r3, r0
   1adb4:	cmp	r1, #0
   1adb8:	mov	r1, #84	; 0x54
   1adbc:	add	r7, r3, #84	; 0x54
   1adc0:	movweq	r1, #60	; 0x3c
   1adc4:	addeq	r7, r3, #60	; 0x3c
   1adc8:	ldr	r3, [r3, r1]
   1adcc:	str	r2, [r7]
   1add0:	cmp	r3, #0
   1add4:	beq	1ade0 <gen_ether_linktype+0x778>
   1add8:	ldr	r1, [r3, #44]	; 0x2c
   1addc:	b	1adb4 <gen_ether_linktype+0x74c>
   1ade0:	ldr	r1, [r0, #44]	; 0x2c
   1ade4:	clz	r1, r1
   1ade8:	cmp	r4, #0
   1adec:	lsr	r1, r1, #5
   1adf0:	str	r1, [r0, #44]	; 0x2c
   1adf4:	ldr	r2, [r4, #44]	; 0x2c
   1adf8:	clz	r1, r2
   1adfc:	lsr	r1, r1, #5
   1ae00:	str	r1, [r4, #44]	; 0x2c
   1ae04:	str	r4, [sp]
   1ae08:	beq	1ae54 <gen_ether_linktype+0x7ec>
   1ae0c:	cmp	r2, #0
   1ae10:	mov	r2, #60	; 0x3c
   1ae14:	add	r1, r4, #60	; 0x3c
   1ae18:	movweq	r2, #84	; 0x54
   1ae1c:	addeq	r1, r4, #84	; 0x54
   1ae20:	ldr	r2, [r4, r2]
   1ae24:	cmp	r2, #0
   1ae28:	beq	1ae58 <gen_ether_linktype+0x7f0>
   1ae2c:	ldr	r3, [r2, #44]	; 0x2c
   1ae30:	add	r1, r2, #84	; 0x54
   1ae34:	cmp	r3, #0
   1ae38:	mov	r3, #84	; 0x54
   1ae3c:	movweq	r3, #60	; 0x3c
   1ae40:	addeq	r1, r2, #60	; 0x3c
   1ae44:	ldr	r2, [r2, r3]
   1ae48:	cmp	r2, #0
   1ae4c:	bne	1ae2c <gen_ether_linktype+0x7c4>
   1ae50:	b	1ae58 <gen_ether_linktype+0x7f0>
   1ae54:	mov	r1, sp
   1ae58:	str	r0, [r1]
   1ae5c:	mov	r2, #8
   1ae60:	movw	r3, #33079	; 0x8137
   1ae64:	ldr	r1, [r4, #44]	; 0x2c
   1ae68:	clz	r1, r1
   1ae6c:	lsr	r1, r1, #5
   1ae70:	str	r1, [r4, #44]	; 0x2c
   1ae74:	ldr	r0, [r0, #96]	; 0x60
   1ae78:	str	r0, [r4, #96]	; 0x60
   1ae7c:	mov	r0, #1
   1ae80:	ldr	r1, [r5, #40]	; 0x28
   1ae84:	bl	a0a4 <gen_cmp>
   1ae88:	ldr	r1, [r0, #44]	; 0x2c
   1ae8c:	cmp	r0, #0
   1ae90:	clz	r1, r1
   1ae94:	lsr	r1, r1, #5
   1ae98:	str	r1, [r0, #44]	; 0x2c
   1ae9c:	beq	1aed8 <gen_ether_linktype+0x870>
   1aea0:	ldr	r2, [r4, #96]	; 0x60
   1aea4:	mov	r3, r0
   1aea8:	cmp	r1, #0
   1aeac:	mov	r1, #84	; 0x54
   1aeb0:	add	r7, r3, #84	; 0x54
   1aeb4:	movweq	r1, #60	; 0x3c
   1aeb8:	addeq	r7, r3, #60	; 0x3c
   1aebc:	ldr	r3, [r3, r1]
   1aec0:	str	r2, [r7]
   1aec4:	cmp	r3, #0
   1aec8:	beq	1aed4 <gen_ether_linktype+0x86c>
   1aecc:	ldr	r1, [r3, #44]	; 0x2c
   1aed0:	b	1aea8 <gen_ether_linktype+0x840>
   1aed4:	ldr	r1, [r0, #44]	; 0x2c
   1aed8:	clz	r1, r1
   1aedc:	cmp	r4, #0
   1aee0:	lsr	r1, r1, #5
   1aee4:	str	r1, [r0, #44]	; 0x2c
   1aee8:	str	r4, [sp]
   1aeec:	beq	1af1c <gen_ether_linktype+0x8b4>
   1aef0:	mov	r2, r4
   1aef4:	ldr	r3, [r2, #44]	; 0x2c
   1aef8:	add	r1, r2, #84	; 0x54
   1aefc:	cmp	r3, #0
   1af00:	mov	r3, #84	; 0x54
   1af04:	movweq	r3, #60	; 0x3c
   1af08:	addeq	r1, r2, #60	; 0x3c
   1af0c:	ldr	r2, [r2, r3]
   1af10:	cmp	r2, #0
   1af14:	bne	1aef4 <gen_ether_linktype+0x88c>
   1af18:	b	1af20 <gen_ether_linktype+0x8b8>
   1af1c:	mov	r1, sp
   1af20:	str	r0, [r1]
   1af24:	ldr	r0, [r0, #96]	; 0x60
   1af28:	str	r0, [r4, #96]	; 0x60
   1af2c:	mov	r0, r4
   1af30:	sub	sp, fp, #24
   1af34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1af38:	.word	0x0002ba60
   1af3c:	.word	0x0002be3c
   1af40:	.word	0x0002b758
   1af44:	.word	0x0002bd30

0001af48 <gen_llc_linktype>:
   1af48:	mov	r3, r0
   1af4c:	cmp	r0, #239	; 0xef
   1af50:	ble	1af74 <gen_llc_linktype+0x2c>
   1af54:	cmp	r3, #240	; 0xf0
   1af58:	beq	1af98 <gen_llc_linktype+0x50>
   1af5c:	movw	r0, #32923	; 0x809b
   1af60:	cmp	r3, r0
   1af64:	beq	1afac <gen_llc_linktype+0x64>
   1af68:	cmp	r3, #254	; 0xfe
   1af6c:	beq	1af98 <gen_llc_linktype+0x50>
   1af70:	b	1afec <gen_llc_linktype+0xa4>
   1af74:	cmp	r3, #6
   1af78:	beq	1af98 <gen_llc_linktype+0x50>
   1af7c:	cmp	r3, #224	; 0xe0
   1af80:	bne	1afec <gen_llc_linktype+0xa4>
   1af84:	mov	r0, #2
   1af88:	mov	r1, #0
   1af8c:	mov	r2, #16
   1af90:	mov	r3, #224	; 0xe0
   1af94:	b	a0a4 <gen_cmp>
   1af98:	orr	r3, r3, r3, lsl #8
   1af9c:	mov	r0, #2
   1afa0:	mov	r1, #0
   1afa4:	mov	r2, #8
   1afa8:	b	a0a4 <gen_cmp>
   1afac:	push	{fp, lr}
   1afb0:	mov	fp, sp
   1afb4:	sub	sp, sp, #8
   1afb8:	movw	r0, #1792	; 0x700
   1afbc:	mov	r3, sp
   1afc0:	mov	r1, #0
   1afc4:	mov	r2, #8
   1afc8:	movt	r0, #39808	; 0x9b80
   1afcc:	str	r0, [sp, #4]
   1afd0:	movw	r0, #43690	; 0xaaaa
   1afd4:	movt	r0, #2051	; 0x803
   1afd8:	str	r0, [sp]
   1afdc:	mov	r0, #2
   1afe0:	bl	1b00c <gen_bcmp>
   1afe4:	mov	sp, fp
   1afe8:	pop	{fp, pc}
   1afec:	movw	r0, #1500	; 0x5dc
   1aff0:	cmp	r3, r0
   1aff4:	mov	r0, #2
   1aff8:	movgt	r1, #6
   1affc:	movgt	r2, #8
   1b000:	movle	r1, #0
   1b004:	movle	r2, #16
   1b008:	b	a0a4 <gen_cmp>

0001b00c <gen_bcmp>:
   1b00c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b010:	add	fp, sp, #28
   1b014:	sub	sp, sp, #12
   1b018:	mov	r6, r3
   1b01c:	mov	r7, r2
   1b020:	mov	r8, r1
   1b024:	mov	r9, r0
   1b028:	mov	r4, #0
   1b02c:	cmp	r2, #4
   1b030:	bcc	1b138 <gen_bcmp+0x12c>
   1b034:	mov	r5, #0
   1b038:	mov	sl, sp
   1b03c:	b	1b068 <gen_bcmp+0x5c>
   1b040:	str	r5, [r0]
   1b044:	ldr	r0, [r4, #44]	; 0x2c
   1b048:	clz	r0, r0
   1b04c:	lsr	r0, r0, #5
   1b050:	str	r0, [r4, #44]	; 0x2c
   1b054:	ldr	r0, [r5, #96]	; 0x60
   1b058:	str	r0, [r4, #96]	; 0x60
   1b05c:	cmp	r7, #3
   1b060:	mov	r5, r4
   1b064:	bls	1b138 <gen_bcmp+0x12c>
   1b068:	sub	r7, r7, #4
   1b06c:	mov	r2, #0
   1b070:	ldr	r0, [r6, r7]
   1b074:	add	r1, r7, r8
   1b078:	rev	r3, r0
   1b07c:	mov	r0, r9
   1b080:	bl	a0a4 <gen_cmp>
   1b084:	mov	r4, r0
   1b088:	cmp	r5, #0
   1b08c:	beq	1b05c <gen_bcmp+0x50>
   1b090:	ldr	r0, [r4, #96]	; 0x60
   1b094:	mov	r1, r5
   1b098:	ldr	r2, [r1, #44]	; 0x2c
   1b09c:	add	r3, r1, #84	; 0x54
   1b0a0:	cmp	r2, #0
   1b0a4:	mov	r2, #84	; 0x54
   1b0a8:	movweq	r2, #60	; 0x3c
   1b0ac:	addeq	r3, r1, #60	; 0x3c
   1b0b0:	ldr	r1, [r1, r2]
   1b0b4:	str	r0, [r3]
   1b0b8:	cmp	r1, #0
   1b0bc:	bne	1b098 <gen_bcmp+0x8c>
   1b0c0:	ldr	r0, [r5, #44]	; 0x2c
   1b0c4:	cmp	r4, #0
   1b0c8:	clz	r0, r0
   1b0cc:	lsr	r0, r0, #5
   1b0d0:	str	r0, [r5, #44]	; 0x2c
   1b0d4:	ldr	r1, [r4, #44]	; 0x2c
   1b0d8:	clz	r0, r1
   1b0dc:	lsr	r0, r0, #5
   1b0e0:	str	r0, [r4, #44]	; 0x2c
   1b0e4:	mov	r0, sl
   1b0e8:	str	r4, [sp]
   1b0ec:	beq	1b040 <gen_bcmp+0x34>
   1b0f0:	cmp	r1, #0
   1b0f4:	mov	r1, #60	; 0x3c
   1b0f8:	add	r0, r4, #60	; 0x3c
   1b0fc:	movweq	r1, #84	; 0x54
   1b100:	addeq	r0, r4, #84	; 0x54
   1b104:	ldr	r1, [r4, r1]
   1b108:	cmp	r1, #0
   1b10c:	beq	1b040 <gen_bcmp+0x34>
   1b110:	ldr	r2, [r1, #44]	; 0x2c
   1b114:	add	r0, r1, #84	; 0x54
   1b118:	cmp	r2, #0
   1b11c:	mov	r2, #84	; 0x54
   1b120:	movweq	r2, #60	; 0x3c
   1b124:	addeq	r0, r1, #60	; 0x3c
   1b128:	ldr	r1, [r1, r2]
   1b12c:	cmp	r1, #0
   1b130:	bne	1b110 <gen_bcmp+0x104>
   1b134:	b	1b040 <gen_bcmp+0x34>
   1b138:	cmp	r7, #2
   1b13c:	bcc	1b248 <gen_bcmp+0x23c>
   1b140:	add	sl, sp, #8
   1b144:	b	1b170 <gen_bcmp+0x164>
   1b148:	str	r4, [r0]
   1b14c:	ldr	r0, [r5, #44]	; 0x2c
   1b150:	clz	r0, r0
   1b154:	lsr	r0, r0, #5
   1b158:	str	r0, [r5, #44]	; 0x2c
   1b15c:	ldr	r0, [r4, #96]	; 0x60
   1b160:	str	r0, [r5, #96]	; 0x60
   1b164:	cmp	r7, #1
   1b168:	mov	r4, r5
   1b16c:	bls	1b24c <gen_bcmp+0x240>
   1b170:	sub	r7, r7, #2
   1b174:	mov	r0, r6
   1b178:	mov	r2, #8
   1b17c:	ldrb	r1, [r0, r7]!
   1b180:	ldrb	r0, [r0, #1]
   1b184:	orr	r3, r0, r1, lsl #8
   1b188:	add	r1, r7, r8
   1b18c:	mov	r0, r9
   1b190:	bl	a0a4 <gen_cmp>
   1b194:	mov	r5, r0
   1b198:	cmp	r4, #0
   1b19c:	beq	1b164 <gen_bcmp+0x158>
   1b1a0:	ldr	r0, [r5, #96]	; 0x60
   1b1a4:	mov	r1, r4
   1b1a8:	ldr	r2, [r1, #44]	; 0x2c
   1b1ac:	add	r3, r1, #84	; 0x54
   1b1b0:	cmp	r2, #0
   1b1b4:	mov	r2, #84	; 0x54
   1b1b8:	movweq	r2, #60	; 0x3c
   1b1bc:	addeq	r3, r1, #60	; 0x3c
   1b1c0:	ldr	r1, [r1, r2]
   1b1c4:	str	r0, [r3]
   1b1c8:	cmp	r1, #0
   1b1cc:	bne	1b1a8 <gen_bcmp+0x19c>
   1b1d0:	ldr	r0, [r4, #44]	; 0x2c
   1b1d4:	cmp	r5, #0
   1b1d8:	clz	r0, r0
   1b1dc:	lsr	r0, r0, #5
   1b1e0:	str	r0, [r4, #44]	; 0x2c
   1b1e4:	ldr	r1, [r5, #44]	; 0x2c
   1b1e8:	clz	r0, r1
   1b1ec:	lsr	r0, r0, #5
   1b1f0:	str	r0, [r5, #44]	; 0x2c
   1b1f4:	mov	r0, sl
   1b1f8:	str	r5, [sp, #8]
   1b1fc:	beq	1b148 <gen_bcmp+0x13c>
   1b200:	cmp	r1, #0
   1b204:	mov	r1, #60	; 0x3c
   1b208:	add	r0, r5, #60	; 0x3c
   1b20c:	movweq	r1, #84	; 0x54
   1b210:	addeq	r0, r5, #84	; 0x54
   1b214:	ldr	r1, [r5, r1]
   1b218:	cmp	r1, #0
   1b21c:	beq	1b148 <gen_bcmp+0x13c>
   1b220:	ldr	r2, [r1, #44]	; 0x2c
   1b224:	add	r0, r1, #84	; 0x54
   1b228:	cmp	r2, #0
   1b22c:	mov	r2, #84	; 0x54
   1b230:	movweq	r2, #60	; 0x3c
   1b234:	addeq	r0, r1, #60	; 0x3c
   1b238:	ldr	r1, [r1, r2]
   1b23c:	cmp	r1, #0
   1b240:	bne	1b220 <gen_bcmp+0x214>
   1b244:	b	1b148 <gen_bcmp+0x13c>
   1b248:	mov	r5, r4
   1b24c:	cmp	r7, #1
   1b250:	bne	1b314 <gen_bcmp+0x308>
   1b254:	ldrb	r3, [r6]
   1b258:	mov	r0, r9
   1b25c:	mov	r1, r8
   1b260:	mov	r2, #16
   1b264:	bl	a0a4 <gen_cmp>
   1b268:	cmp	r5, #0
   1b26c:	beq	1b340 <gen_bcmp+0x334>
   1b270:	ldr	r1, [r0, #96]	; 0x60
   1b274:	mov	r2, r5
   1b278:	ldr	r3, [r2, #44]	; 0x2c
   1b27c:	add	r7, r2, #84	; 0x54
   1b280:	cmp	r3, #0
   1b284:	mov	r3, #84	; 0x54
   1b288:	movweq	r3, #60	; 0x3c
   1b28c:	addeq	r7, r2, #60	; 0x3c
   1b290:	ldr	r2, [r2, r3]
   1b294:	str	r1, [r7]
   1b298:	cmp	r2, #0
   1b29c:	bne	1b278 <gen_bcmp+0x26c>
   1b2a0:	ldr	r1, [r5, #44]	; 0x2c
   1b2a4:	cmp	r0, #0
   1b2a8:	clz	r1, r1
   1b2ac:	lsr	r1, r1, #5
   1b2b0:	str	r1, [r5, #44]	; 0x2c
   1b2b4:	ldr	r2, [r0, #44]	; 0x2c
   1b2b8:	clz	r1, r2
   1b2bc:	lsr	r1, r1, #5
   1b2c0:	str	r1, [r0, #44]	; 0x2c
   1b2c4:	str	r0, [sp, #4]
   1b2c8:	beq	1b320 <gen_bcmp+0x314>
   1b2cc:	cmp	r2, #0
   1b2d0:	mov	r2, #60	; 0x3c
   1b2d4:	add	r1, r0, #60	; 0x3c
   1b2d8:	movweq	r2, #84	; 0x54
   1b2dc:	addeq	r1, r0, #84	; 0x54
   1b2e0:	ldr	r2, [r0, r2]
   1b2e4:	cmp	r2, #0
   1b2e8:	beq	1b324 <gen_bcmp+0x318>
   1b2ec:	ldr	r3, [r2, #44]	; 0x2c
   1b2f0:	add	r1, r2, #84	; 0x54
   1b2f4:	cmp	r3, #0
   1b2f8:	mov	r3, #84	; 0x54
   1b2fc:	movweq	r3, #60	; 0x3c
   1b300:	addeq	r1, r2, #60	; 0x3c
   1b304:	ldr	r2, [r2, r3]
   1b308:	cmp	r2, #0
   1b30c:	bne	1b2ec <gen_bcmp+0x2e0>
   1b310:	b	1b324 <gen_bcmp+0x318>
   1b314:	mov	r0, r5
   1b318:	sub	sp, fp, #28
   1b31c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b320:	add	r1, sp, #4
   1b324:	str	r5, [r1]
   1b328:	ldr	r1, [r0, #44]	; 0x2c
   1b32c:	clz	r1, r1
   1b330:	lsr	r1, r1, #5
   1b334:	str	r1, [r0, #44]	; 0x2c
   1b338:	ldr	r1, [r5, #96]	; 0x60
   1b33c:	str	r1, [r0, #96]	; 0x60
   1b340:	sub	sp, fp, #28
   1b344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b348 <gen_uncond>:
   1b348:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b34c:	add	fp, sp, #24
   1b350:	ldr	r8, [pc, #276]	; 1b46c <gen_uncond+0x124>
   1b354:	mov	r4, r0
   1b358:	add	r8, pc, r8
   1b35c:	ldr	r0, [r8, #92]	; 0x5c
   1b360:	ldr	r7, [pc, #264]	; 1b470 <gen_uncond+0x128>
   1b364:	add	r7, pc, r7
   1b368:	mov	r6, r7
   1b36c:	ldr	r5, [r6, r0, lsl #3]!
   1b370:	cmp	r5, #19
   1b374:	bhi	1b3c4 <gen_uncond+0x7c>
   1b378:	add	r9, r0, #1
   1b37c:	cmp	r0, #15
   1b380:	str	r9, [r8, #92]	; 0x5c
   1b384:	bge	1b460 <gen_uncond+0x118>
   1b388:	mov	r0, #1024	; 0x400
   1b38c:	lsl	r5, r0, r9
   1b390:	mov	r0, r5
   1b394:	bl	e34 <malloc@plt>
   1b398:	cmp	r0, #0
   1b39c:	str	r0, [r6, #12]
   1b3a0:	beq	1b460 <gen_uncond+0x118>
   1b3a4:	mov	r1, #0
   1b3a8:	mov	r2, r5
   1b3ac:	add	r6, r6, #8
   1b3b0:	bl	ea0 <memset@plt>
   1b3b4:	cmp	r5, #19
   1b3b8:	str	r5, [r6]
   1b3bc:	bhi	1b3c8 <gen_uncond+0x80>
   1b3c0:	b	1b460 <gen_uncond+0x118>
   1b3c4:	mov	r9, r0
   1b3c8:	sub	r0, r5, #20
   1b3cc:	mov	r1, #0
   1b3d0:	str	r0, [r6]
   1b3d4:	ldr	r5, [r6, #4]
   1b3d8:	str	r1, [r5, r0]!
   1b3dc:	clz	r0, r4
   1b3e0:	lsr	r0, r0, #5
   1b3e4:	str	r0, [r5, #12]
   1b3e8:	ldr	r4, [r7, r9, lsl #3]!
   1b3ec:	cmp	r4, #207	; 0xcf
   1b3f0:	bhi	1b43c <gen_uncond+0xf4>
   1b3f4:	add	r0, r9, #1
   1b3f8:	cmp	r9, #15
   1b3fc:	str	r0, [r8, #92]	; 0x5c
   1b400:	bge	1b460 <gen_uncond+0x118>
   1b404:	mov	r1, #1024	; 0x400
   1b408:	lsl	r4, r1, r0
   1b40c:	mov	r0, r4
   1b410:	bl	e34 <malloc@plt>
   1b414:	cmp	r0, #0
   1b418:	str	r0, [r7, #12]
   1b41c:	beq	1b460 <gen_uncond+0x118>
   1b420:	mov	r1, #0
   1b424:	mov	r2, r4
   1b428:	add	r7, r7, #8
   1b42c:	bl	ea0 <memset@plt>
   1b430:	cmp	r4, #207	; 0xcf
   1b434:	str	r4, [r7]
   1b438:	bls	1b460 <gen_uncond+0x118>
   1b43c:	sub	r0, r4, #208	; 0xd0
   1b440:	str	r0, [r7]
   1b444:	ldr	r1, [r7, #4]
   1b448:	add	r0, r1, r0
   1b44c:	mov	r1, #21
   1b450:	str	r5, [r0, #4]
   1b454:	str	r1, [r0, #8]
   1b458:	str	r0, [r0, #96]	; 0x60
   1b45c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b460:	ldr	r0, [pc, #12]	; 1b474 <gen_uncond+0x12c>
   1b464:	add	r0, pc, r0
   1b468:	bl	214c <sf_bpf_error>
   1b46c:	.word	0x0002b188
   1b470:	.word	0x0002b0bc
   1b474:	.word	0x0000e600

0001b478 <gen_cmp_le>:
   1b478:	push	{r4, r5, r6, r7, fp, lr}
   1b47c:	add	fp, sp, #16
   1b480:	mov	r4, r3
   1b484:	bl	165d8 <gen_load_a>
   1b488:	ldr	r1, [pc, #168]	; 1b538 <gen_cmp_le+0xc0>
   1b48c:	mov	r5, r0
   1b490:	add	r1, pc, r1
   1b494:	ldr	r0, [r1, #92]	; 0x5c
   1b498:	ldr	r7, [pc, #156]	; 1b53c <gen_cmp_le+0xc4>
   1b49c:	add	r7, pc, r7
   1b4a0:	ldr	r6, [r7, r0, lsl #3]!
   1b4a4:	cmp	r6, #207	; 0xcf
   1b4a8:	bhi	1b4f4 <gen_cmp_le+0x7c>
   1b4ac:	add	r2, r0, #1
   1b4b0:	cmp	r0, #15
   1b4b4:	str	r2, [r1, #92]	; 0x5c
   1b4b8:	bge	1b52c <gen_cmp_le+0xb4>
   1b4bc:	mov	r0, #1024	; 0x400
   1b4c0:	lsl	r6, r0, r2
   1b4c4:	mov	r0, r6
   1b4c8:	bl	e34 <malloc@plt>
   1b4cc:	cmp	r0, #0
   1b4d0:	str	r0, [r7, #12]
   1b4d4:	beq	1b52c <gen_cmp_le+0xb4>
   1b4d8:	mov	r1, #0
   1b4dc:	mov	r2, r6
   1b4e0:	add	r7, r7, #8
   1b4e4:	bl	ea0 <memset@plt>
   1b4e8:	cmp	r6, #207	; 0xcf
   1b4ec:	str	r6, [r7]
   1b4f0:	bls	1b52c <gen_cmp_le+0xb4>
   1b4f4:	sub	r0, r6, #208	; 0xd0
   1b4f8:	str	r0, [r7]
   1b4fc:	ldr	r1, [r7, #4]
   1b500:	add	r0, r1, r0
   1b504:	mov	r1, #37	; 0x25
   1b508:	str	r4, [r0, #20]
   1b50c:	str	r5, [r0, #4]
   1b510:	str	r1, [r0, #8]
   1b514:	ldr	r1, [r0, #44]	; 0x2c
   1b518:	clz	r1, r1
   1b51c:	lsr	r1, r1, #5
   1b520:	str	r1, [r0, #44]	; 0x2c
   1b524:	str	r0, [r0, #96]	; 0x60
   1b528:	pop	{r4, r5, r6, r7, fp, pc}
   1b52c:	ldr	r0, [pc, #12]	; 1b540 <gen_cmp_le+0xc8>
   1b530:	add	r0, pc, r0
   1b534:	bl	214c <sf_bpf_error>
   1b538:	.word	0x0002b050
   1b53c:	.word	0x0002af84
   1b540:	.word	0x0000e534

0001b544 <gen_hostop>:
   1b544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b548:	add	fp, sp, #28
   1b54c:	sub	sp, sp, #36	; 0x24
   1b550:	cmp	r2, #4
   1b554:	bhi	1c02c <gen_hostop+0xae8>
   1b558:	mov	r8, r0
   1b55c:	add	r0, pc, #20
   1b560:	mov	r9, r1
   1b564:	ldr	r7, [fp, #12]
   1b568:	ldr	r5, [fp, #8]
   1b56c:	mov	r6, r3
   1b570:	ldr	r1, [r0, r2, lsl #2]
   1b574:	add	pc, r0, r1
   1b578:	.word	0x00000014
   1b57c:	.word	0x000001bc
   1b580:	.word	0x000001b8
   1b584:	.word	0x00000014
   1b588:	.word	0x000000e0
   1b58c:	mov	r0, r8
   1b590:	mov	r1, r9
   1b594:	mov	r2, #1
   1b598:	mov	r3, r6
   1b59c:	stm	sp, {r5, r7}
   1b5a0:	bl	1b544 <gen_hostop>
   1b5a4:	mov	r4, r0
   1b5a8:	mov	r0, r8
   1b5ac:	mov	r1, r9
   1b5b0:	mov	r2, #2
   1b5b4:	mov	r3, r6
   1b5b8:	stm	sp, {r5, r7}
   1b5bc:	bl	1b544 <gen_hostop>
   1b5c0:	ldr	r1, [r4, #44]	; 0x2c
   1b5c4:	cmp	r4, #0
   1b5c8:	clz	r1, r1
   1b5cc:	lsr	r3, r1, #5
   1b5d0:	mov	r1, r0
   1b5d4:	str	r3, [r4, #44]	; 0x2c
   1b5d8:	ldr	r2, [r1, #96]!	; 0x60
   1b5dc:	beq	1b614 <gen_hostop+0xd0>
   1b5e0:	mov	r7, r4
   1b5e4:	cmp	r3, #0
   1b5e8:	mov	r3, #84	; 0x54
   1b5ec:	add	r6, r7, #84	; 0x54
   1b5f0:	movweq	r3, #60	; 0x3c
   1b5f4:	addeq	r6, r7, #60	; 0x3c
   1b5f8:	ldr	r7, [r7, r3]
   1b5fc:	str	r2, [r6]
   1b600:	cmp	r7, #0
   1b604:	beq	1b610 <gen_hostop+0xcc>
   1b608:	ldr	r3, [r7, #44]	; 0x2c
   1b60c:	b	1b5e4 <gen_hostop+0xa0>
   1b610:	ldr	r3, [r4, #44]	; 0x2c
   1b614:	clz	r2, r3
   1b618:	cmp	r0, #0
   1b61c:	lsr	r2, r2, #5
   1b620:	str	r2, [r4, #44]	; 0x2c
   1b624:	str	r0, [sp, #32]
   1b628:	beq	1b7f8 <gen_hostop+0x2b4>
   1b62c:	mov	r3, r0
   1b630:	ldr	r7, [r3, #44]	; 0x2c
   1b634:	add	r2, r3, #84	; 0x54
   1b638:	cmp	r7, #0
   1b63c:	mov	r7, #84	; 0x54
   1b640:	movweq	r7, #60	; 0x3c
   1b644:	addeq	r2, r3, #60	; 0x3c
   1b648:	ldr	r3, [r3, r7]
   1b64c:	cmp	r3, #0
   1b650:	bne	1b630 <gen_hostop+0xec>
   1b654:	b	1b7fc <gen_hostop+0x2b8>
   1b658:	mov	r0, r6
   1b65c:	bl	6fb4 <gen_linktype>
   1b660:	str	r0, [sp, #24]
   1b664:	ldr	r7, [pc, #2500]	; 1c030 <gen_hostop+0xaec>
   1b668:	add	r7, pc, r7
   1b66c:	ldr	r0, [r7, #48]	; 0x30
   1b670:	add	sl, r0, r5
   1b674:	ldrb	r0, [r7, #16]
   1b678:	ldr	r3, [pc, #2484]	; 1c034 <gen_hostop+0xaf0>
   1b67c:	str	r8, [sp, #20]
   1b680:	str	r9, [sp, #28]
   1b684:	str	r6, [sp, #16]
   1b688:	cmp	r0, #0
   1b68c:	add	r3, pc, r3
   1b690:	beq	1b814 <gen_hostop+0x2d0>
   1b694:	str	sl, [sp, #12]
   1b698:	ldr	sl, [r7, #100]	; 0x64
   1b69c:	cmn	sl, #1
   1b6a0:	bne	1b6c0 <gen_hostop+0x17c>
   1b6a4:	bl	1305c <alloc_reg>
   1b6a8:	ldr	r7, [pc, #2448]	; 1c040 <gen_hostop+0xafc>
   1b6ac:	ldr	r3, [pc, #2448]	; 1c044 <gen_hostop+0xb00>
   1b6b0:	mov	sl, r0
   1b6b4:	add	r7, pc, r7
   1b6b8:	add	r3, pc, r3
   1b6bc:	str	r0, [r7, #100]	; 0x64
   1b6c0:	ldr	r0, [r7, #92]	; 0x5c
   1b6c4:	mov	r5, r3
   1b6c8:	ldr	r4, [r5, r0, lsl #3]!
   1b6cc:	cmp	r4, #19
   1b6d0:	bhi	1bbe0 <gen_hostop+0x69c>
   1b6d4:	add	r8, r0, #1
   1b6d8:	cmp	r0, #15
   1b6dc:	str	r8, [r7, #92]	; 0x5c
   1b6e0:	bge	1c020 <gen_hostop+0xadc>
   1b6e4:	mov	r0, #1024	; 0x400
   1b6e8:	lsl	r4, r0, r8
   1b6ec:	mov	r0, r4
   1b6f0:	bl	e34 <malloc@plt>
   1b6f4:	cmp	r0, #0
   1b6f8:	str	r0, [r5, #12]
   1b6fc:	beq	1c020 <gen_hostop+0xadc>
   1b700:	mov	r1, #0
   1b704:	mov	r2, r4
   1b708:	add	r5, r5, #8
   1b70c:	bl	ea0 <memset@plt>
   1b710:	str	r4, [r5]
   1b714:	cmp	r4, #19
   1b718:	ldr	r3, [pc, #2344]	; 1c048 <gen_hostop+0xb04>
   1b71c:	ldr	r7, [pc, #2344]	; 1c04c <gen_hostop+0xb08>
   1b720:	add	r3, pc, r3
   1b724:	add	r7, pc, r7
   1b728:	bhi	1bbe4 <gen_hostop+0x6a0>
   1b72c:	b	1c020 <gen_hostop+0xadc>
   1b730:	mov	r5, r7
   1b734:	mov	r0, r6
   1b738:	bl	6fb4 <gen_linktype>
   1b73c:	ldr	r3, [pc, #2332]	; 1c060 <gen_hostop+0xb1c>
   1b740:	str	r0, [sp, #24]
   1b744:	add	r3, pc, r3
   1b748:	ldr	r1, [r3, #48]	; 0x30
   1b74c:	add	r6, r1, r5
   1b750:	ldrb	r1, [r3, #16]
   1b754:	cmp	r1, #0
   1b758:	beq	1b7f0 <gen_hostop+0x2ac>
   1b75c:	ldr	sl, [r3, #100]	; 0x64
   1b760:	str	r9, [sp, #28]
   1b764:	cmn	sl, #1
   1b768:	bne	1b780 <gen_hostop+0x23c>
   1b76c:	bl	1305c <alloc_reg>
   1b770:	ldr	r3, [pc, #2288]	; 1c068 <gen_hostop+0xb24>
   1b774:	mov	sl, r0
   1b778:	add	r3, pc, r3
   1b77c:	str	r0, [r3, #100]	; 0x64
   1b780:	ldr	r0, [r3, #92]	; 0x5c
   1b784:	ldr	r9, [pc, #2272]	; 1c06c <gen_hostop+0xb28>
   1b788:	add	r9, pc, r9
   1b78c:	mov	r5, r9
   1b790:	ldr	r4, [r5, r0, lsl #3]!
   1b794:	cmp	r4, #19
   1b798:	bhi	1b888 <gen_hostop+0x344>
   1b79c:	add	r7, r0, #1
   1b7a0:	cmp	r0, #15
   1b7a4:	str	r7, [r3, #92]	; 0x5c
   1b7a8:	bge	1c020 <gen_hostop+0xadc>
   1b7ac:	mov	r0, #1024	; 0x400
   1b7b0:	lsl	r4, r0, r7
   1b7b4:	mov	r0, r4
   1b7b8:	bl	e34 <malloc@plt>
   1b7bc:	cmp	r0, #0
   1b7c0:	str	r0, [r5, #12]
   1b7c4:	beq	1c020 <gen_hostop+0xadc>
   1b7c8:	mov	r1, #0
   1b7cc:	mov	r2, r4
   1b7d0:	add	r5, r5, #8
   1b7d4:	bl	ea0 <memset@plt>
   1b7d8:	str	r4, [r5]
   1b7dc:	cmp	r4, #19
   1b7e0:	ldr	r3, [pc, #2184]	; 1c070 <gen_hostop+0xb2c>
   1b7e4:	add	r3, pc, r3
   1b7e8:	bhi	1b88c <gen_hostop+0x348>
   1b7ec:	b	1c020 <gen_hostop+0xadc>
   1b7f0:	ldr	r7, [r3, #92]	; 0x5c
   1b7f4:	b	1b910 <gen_hostop+0x3cc>
   1b7f8:	add	r2, sp, #32
   1b7fc:	str	r4, [r2]
   1b800:	add	r2, r4, #96	; 0x60
   1b804:	ldr	r2, [r2]
   1b808:	str	r2, [r1]
   1b80c:	sub	sp, fp, #28
   1b810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b814:	ldr	r8, [r7, #92]	; 0x5c
   1b818:	mov	r5, r3
   1b81c:	ldr	r4, [r5, r8, lsl #3]!
   1b820:	cmp	r4, #19
   1b824:	bhi	1bcec <gen_hostop+0x7a8>
   1b828:	add	r1, r8, #1
   1b82c:	cmp	r8, #15
   1b830:	str	r1, [r7, #92]	; 0x5c
   1b834:	bge	1c020 <gen_hostop+0xadc>
   1b838:	mov	r0, #1024	; 0x400
   1b83c:	mov	r8, r1
   1b840:	lsl	r4, r0, r1
   1b844:	mov	r0, r4
   1b848:	bl	e34 <malloc@plt>
   1b84c:	cmp	r0, #0
   1b850:	str	r0, [r5, #12]
   1b854:	beq	1c020 <gen_hostop+0xadc>
   1b858:	mov	r1, #0
   1b85c:	mov	r2, r4
   1b860:	add	r5, r5, #8
   1b864:	bl	ea0 <memset@plt>
   1b868:	str	r4, [r5]
   1b86c:	cmp	r4, #19
   1b870:	ldr	r3, [pc, #1984]	; 1c038 <gen_hostop+0xaf4>
   1b874:	ldr	r7, [pc, #1984]	; 1c03c <gen_hostop+0xaf8>
   1b878:	add	r3, pc, r3
   1b87c:	add	r7, pc, r7
   1b880:	bhi	1bcec <gen_hostop+0x7a8>
   1b884:	b	1c020 <gen_hostop+0xadc>
   1b888:	mov	r7, r0
   1b88c:	sub	r0, r4, #20
   1b890:	mov	r1, #97	; 0x61
   1b894:	str	r0, [r5]
   1b898:	ldr	r5, [r5, #4]
   1b89c:	str	r1, [r5, r0]!
   1b8a0:	cmp	r5, #0
   1b8a4:	str	sl, [r5, #12]
   1b8a8:	beq	1b90c <gen_hostop+0x3c8>
   1b8ac:	ldr	r4, [r9, r7, lsl #3]!
   1b8b0:	cmp	r4, #19
   1b8b4:	bhi	1ba44 <gen_hostop+0x500>
   1b8b8:	add	sl, r7, #1
   1b8bc:	cmp	r7, #15
   1b8c0:	str	sl, [r3, #92]	; 0x5c
   1b8c4:	bge	1c020 <gen_hostop+0xadc>
   1b8c8:	mov	r0, #1024	; 0x400
   1b8cc:	lsl	r4, r0, sl
   1b8d0:	mov	r0, r4
   1b8d4:	bl	e34 <malloc@plt>
   1b8d8:	cmp	r0, #0
   1b8dc:	str	r0, [r9, #12]
   1b8e0:	beq	1c020 <gen_hostop+0xadc>
   1b8e4:	mov	r1, #0
   1b8e8:	mov	r2, r4
   1b8ec:	add	r9, r9, #8
   1b8f0:	bl	ea0 <memset@plt>
   1b8f4:	str	r4, [r9]
   1b8f8:	cmp	r4, #19
   1b8fc:	ldr	r3, [pc, #1904]	; 1c074 <gen_hostop+0xb30>
   1b900:	add	r3, pc, r3
   1b904:	bhi	1ba48 <gen_hostop+0x504>
   1b908:	b	1c020 <gen_hostop+0xadc>
   1b90c:	ldr	r9, [sp, #28]
   1b910:	ldr	r5, [pc, #1868]	; 1c064 <gen_hostop+0xb20>
   1b914:	add	r5, pc, r5
   1b918:	ldr	r4, [r5, r7, lsl #3]!
   1b91c:	cmp	r4, #19
   1b920:	bhi	1b978 <gen_hostop+0x434>
   1b924:	add	sl, r7, #1
   1b928:	cmp	r7, #15
   1b92c:	str	sl, [r3, #92]	; 0x5c
   1b930:	bge	1c020 <gen_hostop+0xadc>
   1b934:	mov	r0, #1024	; 0x400
   1b938:	lsl	r4, r0, sl
   1b93c:	mov	r0, r4
   1b940:	bl	e34 <malloc@plt>
   1b944:	cmp	r0, #0
   1b948:	str	r0, [r5, #12]
   1b94c:	beq	1c020 <gen_hostop+0xadc>
   1b950:	mov	r1, #0
   1b954:	mov	r2, r4
   1b958:	add	r5, r5, #8
   1b95c:	bl	ea0 <memset@plt>
   1b960:	str	r4, [r5]
   1b964:	cmp	r4, #19
   1b968:	ldr	r3, [pc, #1800]	; 1c078 <gen_hostop+0xb34>
   1b96c:	add	r3, pc, r3
   1b970:	bhi	1b97c <gen_hostop+0x438>
   1b974:	b	1c020 <gen_hostop+0xadc>
   1b978:	mov	sl, r7
   1b97c:	sub	r0, r4, #20
   1b980:	mov	r1, #32
   1b984:	str	r0, [r5]
   1b988:	ldr	r5, [r5, #4]
   1b98c:	str	r1, [r5, r0]!
   1b990:	ldr	r0, [r3, #44]	; 0x2c
   1b994:	add	r0, r0, r6
   1b998:	str	r0, [r5, #12]
   1b99c:	cmn	r9, #1
   1b9a0:	beq	1ba84 <gen_hostop+0x540>
   1b9a4:	ldr	r6, [pc, #1744]	; 1c07c <gen_hostop+0xb38>
   1b9a8:	add	r6, pc, r6
   1b9ac:	ldr	r4, [r6, sl, lsl #3]!
   1b9b0:	cmp	r4, #19
   1b9b4:	bhi	1ba0c <gen_hostop+0x4c8>
   1b9b8:	add	r7, sl, #1
   1b9bc:	cmp	sl, #15
   1b9c0:	str	r7, [r3, #92]	; 0x5c
   1b9c4:	bge	1c020 <gen_hostop+0xadc>
   1b9c8:	mov	r0, #1024	; 0x400
   1b9cc:	lsl	r4, r0, r7
   1b9d0:	mov	r0, r4
   1b9d4:	bl	e34 <malloc@plt>
   1b9d8:	cmp	r0, #0
   1b9dc:	str	r0, [r6, #12]
   1b9e0:	beq	1c020 <gen_hostop+0xadc>
   1b9e4:	mov	r1, #0
   1b9e8:	mov	r2, r4
   1b9ec:	add	r6, r6, #8
   1b9f0:	bl	ea0 <memset@plt>
   1b9f4:	str	r4, [r6]
   1b9f8:	cmp	r4, #19
   1b9fc:	ldr	r3, [pc, #1660]	; 1c080 <gen_hostop+0xb3c>
   1ba00:	add	r3, pc, r3
   1ba04:	bhi	1ba10 <gen_hostop+0x4cc>
   1ba08:	b	1c020 <gen_hostop+0xadc>
   1ba0c:	mov	r7, sl
   1ba10:	sub	r1, r4, #20
   1ba14:	mov	r2, #84	; 0x54
   1ba18:	str	r1, [r6]
   1ba1c:	ldr	r0, [r6, #4]
   1ba20:	str	r2, [r0, r1]!
   1ba24:	mov	r2, r5
   1ba28:	str	r9, [r0, #12]
   1ba2c:	mov	r1, r2
   1ba30:	ldr	r2, [r2, #16]
   1ba34:	cmp	r2, #0
   1ba38:	bne	1ba2c <gen_hostop+0x4e8>
   1ba3c:	str	r0, [r1, #16]
   1ba40:	b	1ba88 <gen_hostop+0x544>
   1ba44:	mov	sl, r7
   1ba48:	sub	r1, r4, #20
   1ba4c:	mov	r2, #64	; 0x40
   1ba50:	str	r1, [r9]
   1ba54:	ldr	r0, [r9, #4]
   1ba58:	str	r2, [r0, r1]!
   1ba5c:	mov	r2, r5
   1ba60:	str	r6, [r0, #12]
   1ba64:	mov	r1, r2
   1ba68:	ldr	r2, [r2, #16]
   1ba6c:	cmp	r2, #0
   1ba70:	bne	1ba64 <gen_hostop+0x520>
   1ba74:	ldr	r9, [sp, #28]
   1ba78:	str	r0, [r1, #16]
   1ba7c:	cmn	r9, #1
   1ba80:	bne	1b9a4 <gen_hostop+0x460>
   1ba84:	mov	r7, sl
   1ba88:	ldr	r6, [pc, #1524]	; 1c084 <gen_hostop+0xb40>
   1ba8c:	add	r6, pc, r6
   1ba90:	ldr	r4, [r6, r7, lsl #3]!
   1ba94:	cmp	r4, #207	; 0xcf
   1ba98:	bhi	1bae4 <gen_hostop+0x5a0>
   1ba9c:	add	r0, r7, #1
   1baa0:	cmp	r7, #15
   1baa4:	str	r0, [r3, #92]	; 0x5c
   1baa8:	bge	1c020 <gen_hostop+0xadc>
   1baac:	mov	r1, #1024	; 0x400
   1bab0:	lsl	r4, r1, r0
   1bab4:	mov	r0, r4
   1bab8:	bl	e34 <malloc@plt>
   1babc:	cmp	r0, #0
   1bac0:	str	r0, [r6, #12]
   1bac4:	beq	1c020 <gen_hostop+0xadc>
   1bac8:	mov	r1, #0
   1bacc:	mov	r2, r4
   1bad0:	add	r6, r6, #8
   1bad4:	bl	ea0 <memset@plt>
   1bad8:	cmp	r4, #207	; 0xcf
   1badc:	str	r4, [r6]
   1bae0:	bls	1c020 <gen_hostop+0xadc>
   1bae4:	sub	r0, r4, #208	; 0xd0
   1bae8:	str	r0, [r6]
   1baec:	ldr	r1, [r6, #4]
   1baf0:	ldr	r6, [sp, #24]
   1baf4:	add	r0, r1, r0
   1baf8:	cmp	r6, #0
   1bafc:	mov	r1, #21
   1bb00:	str	r8, [r0, #20]
   1bb04:	str	r5, [r0, #4]
   1bb08:	str	r1, [r0, #8]
   1bb0c:	str	r0, [r0, #96]	; 0x60
   1bb10:	beq	1bb40 <gen_hostop+0x5fc>
   1bb14:	mov	r1, r6
   1bb18:	ldr	r2, [r1, #44]	; 0x2c
   1bb1c:	add	r3, r1, #84	; 0x54
   1bb20:	cmp	r2, #0
   1bb24:	mov	r2, #84	; 0x54
   1bb28:	movweq	r2, #60	; 0x3c
   1bb2c:	addeq	r3, r1, #60	; 0x3c
   1bb30:	ldr	r1, [r1, r2]
   1bb34:	str	r0, [r3]
   1bb38:	cmp	r1, #0
   1bb3c:	bne	1bb18 <gen_hostop+0x5d4>
   1bb40:	ldr	r2, [r6, #44]	; 0x2c
   1bb44:	add	r1, r0, #96	; 0x60
   1bb48:	cmp	r0, #0
   1bb4c:	clz	r2, r2
   1bb50:	lsr	r2, r2, #5
   1bb54:	str	r2, [r6, #44]	; 0x2c
   1bb58:	ldr	r2, [r0, #44]	; 0x2c
   1bb5c:	clz	r3, r2
   1bb60:	lsr	r3, r3, #5
   1bb64:	str	r3, [r0, #44]	; 0x2c
   1bb68:	str	r0, [sp, #32]
   1bb6c:	beq	1bbb4 <gen_hostop+0x670>
   1bb70:	cmp	r2, #0
   1bb74:	mov	r7, #60	; 0x3c
   1bb78:	mov	r3, r0
   1bb7c:	movweq	r7, #84	; 0x54
   1bb80:	ldr	r2, [r3, r7]!
   1bb84:	cmp	r2, #0
   1bb88:	beq	1bbb8 <gen_hostop+0x674>
   1bb8c:	ldr	r7, [r2, #44]	; 0x2c
   1bb90:	add	r3, r2, #84	; 0x54
   1bb94:	cmp	r7, #0
   1bb98:	mov	r7, #84	; 0x54
   1bb9c:	movweq	r7, #60	; 0x3c
   1bba0:	addeq	r3, r2, #60	; 0x3c
   1bba4:	ldr	r2, [r2, r7]
   1bba8:	cmp	r2, #0
   1bbac:	bne	1bb8c <gen_hostop+0x648>
   1bbb0:	b	1bbb8 <gen_hostop+0x674>
   1bbb4:	add	r3, sp, #32
   1bbb8:	str	r6, [r3]
   1bbbc:	ldr	r2, [r0, #44]	; 0x2c
   1bbc0:	clz	r2, r2
   1bbc4:	lsr	r2, r2, #5
   1bbc8:	str	r2, [r0, #44]	; 0x2c
   1bbcc:	add	r2, r6, #96	; 0x60
   1bbd0:	ldr	r2, [r2]
   1bbd4:	str	r2, [r1]
   1bbd8:	sub	sp, fp, #28
   1bbdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bbe0:	mov	r8, r0
   1bbe4:	sub	r0, r4, #20
   1bbe8:	mov	r1, #97	; 0x61
   1bbec:	str	r0, [r5]
   1bbf0:	ldr	r9, [r5, #4]
   1bbf4:	str	r1, [r9, r0]!
   1bbf8:	cmp	r9, #0
   1bbfc:	str	sl, [r9, #12]
   1bc00:	beq	1bcd8 <gen_hostop+0x794>
   1bc04:	mov	r6, r3
   1bc08:	ldr	r5, [sp, #12]
   1bc0c:	ldr	r4, [r6, r8, lsl #3]!
   1bc10:	cmp	r4, #19
   1bc14:	bhi	1bc74 <gen_hostop+0x730>
   1bc18:	add	r1, r8, #1
   1bc1c:	cmp	r8, #15
   1bc20:	str	r1, [r7, #92]	; 0x5c
   1bc24:	bge	1c020 <gen_hostop+0xadc>
   1bc28:	mov	r0, #1024	; 0x400
   1bc2c:	mov	r8, r1
   1bc30:	lsl	r4, r0, r1
   1bc34:	mov	r0, r4
   1bc38:	bl	e34 <malloc@plt>
   1bc3c:	cmp	r0, #0
   1bc40:	str	r0, [r6, #12]
   1bc44:	beq	1c020 <gen_hostop+0xadc>
   1bc48:	mov	r1, #0
   1bc4c:	mov	r2, r4
   1bc50:	add	r6, r6, #8
   1bc54:	bl	ea0 <memset@plt>
   1bc58:	str	r4, [r6]
   1bc5c:	cmp	r4, #19
   1bc60:	ldr	r3, [pc, #1000]	; 1c050 <gen_hostop+0xb0c>
   1bc64:	ldr	r7, [pc, #1000]	; 1c054 <gen_hostop+0xb10>
   1bc68:	add	r3, pc, r3
   1bc6c:	add	r7, pc, r7
   1bc70:	bls	1c020 <gen_hostop+0xadc>
   1bc74:	sub	r1, r4, #20
   1bc78:	mov	r2, #64	; 0x40
   1bc7c:	str	r1, [r6]
   1bc80:	ldr	r0, [r6, #4]
   1bc84:	str	r2, [r0, r1]!
   1bc88:	mov	r2, r9
   1bc8c:	str	r5, [r0, #12]
   1bc90:	mov	r1, r2
   1bc94:	ldr	r2, [r2, #16]
   1bc98:	cmp	r2, #0
   1bc9c:	bne	1bc90 <gen_hostop+0x74c>
   1bca0:	str	r0, [r1, #16]
   1bca4:	ldr	r0, [sp, #28]
   1bca8:	cmn	r0, #1
   1bcac:	bne	1bd18 <gen_hostop+0x7d4>
   1bcb0:	mov	sl, r8
   1bcb4:	ldr	r6, [sp, #20]
   1bcb8:	ldr	r8, [sp, #24]
   1bcbc:	ldr	r4, [r3, sl, lsl #3]!
   1bcc0:	cmp	r4, #207	; 0xcf
   1bcc4:	bls	1bdd4 <gen_hostop+0x890>
   1bcc8:	ldr	r5, [fp, #8]
   1bccc:	ldr	r7, [fp, #12]
   1bcd0:	mov	sl, r5
   1bcd4:	b	1be40 <gen_hostop+0x8fc>
   1bcd8:	ldr	sl, [sp, #12]
   1bcdc:	mov	r5, r3
   1bce0:	ldr	r4, [r5, r8, lsl #3]!
   1bce4:	cmp	r4, #19
   1bce8:	bls	1b828 <gen_hostop+0x2e4>
   1bcec:	sub	r0, r4, #20
   1bcf0:	mov	r1, #32
   1bcf4:	str	r0, [r5]
   1bcf8:	ldr	r9, [r5, #4]
   1bcfc:	str	r1, [r9, r0]!
   1bd00:	ldr	r0, [r7, #44]	; 0x2c
   1bd04:	add	r0, r0, sl
   1bd08:	str	r0, [r9, #12]
   1bd0c:	ldr	r0, [sp, #28]
   1bd10:	cmn	r0, #1
   1bd14:	beq	1bcb0 <gen_hostop+0x76c>
   1bd18:	mov	r6, r3
   1bd1c:	ldr	r4, [r6, r8, lsl #3]!
   1bd20:	cmp	r4, #19
   1bd24:	bhi	1bd88 <gen_hostop+0x844>
   1bd28:	add	sl, r8, #1
   1bd2c:	cmp	r8, #15
   1bd30:	str	sl, [r7, #92]	; 0x5c
   1bd34:	bge	1c020 <gen_hostop+0xadc>
   1bd38:	mov	r0, #1024	; 0x400
   1bd3c:	lsl	r4, r0, sl
   1bd40:	mov	r0, r4
   1bd44:	bl	e34 <malloc@plt>
   1bd48:	ldr	r8, [sp, #24]
   1bd4c:	cmp	r0, #0
   1bd50:	str	r0, [r6, #12]
   1bd54:	beq	1c020 <gen_hostop+0xadc>
   1bd58:	mov	r1, #0
   1bd5c:	mov	r2, r4
   1bd60:	add	r6, r6, #8
   1bd64:	bl	ea0 <memset@plt>
   1bd68:	str	r4, [r6]
   1bd6c:	cmp	r4, #19
   1bd70:	ldr	r3, [pc, #736]	; 1c058 <gen_hostop+0xb14>
   1bd74:	ldr	r7, [pc, #736]	; 1c05c <gen_hostop+0xb18>
   1bd78:	add	r3, pc, r3
   1bd7c:	add	r7, pc, r7
   1bd80:	bhi	1bd90 <gen_hostop+0x84c>
   1bd84:	b	1c020 <gen_hostop+0xadc>
   1bd88:	mov	sl, r8
   1bd8c:	ldr	r8, [sp, #24]
   1bd90:	sub	r1, r4, #20
   1bd94:	mov	r2, #84	; 0x54
   1bd98:	str	r1, [r6]
   1bd9c:	ldr	r0, [r6, #4]
   1bda0:	str	r2, [r0, r1]!
   1bda4:	mov	r2, r9
   1bda8:	ldr	r1, [sp, #28]
   1bdac:	str	r1, [r0, #12]
   1bdb0:	mov	r1, r2
   1bdb4:	ldr	r2, [r2, #16]
   1bdb8:	cmp	r2, #0
   1bdbc:	bne	1bdb0 <gen_hostop+0x86c>
   1bdc0:	ldr	r6, [sp, #20]
   1bdc4:	str	r0, [r1, #16]
   1bdc8:	ldr	r4, [r3, sl, lsl #3]!
   1bdcc:	cmp	r4, #207	; 0xcf
   1bdd0:	bhi	1bcc8 <gen_hostop+0x784>
   1bdd4:	add	r0, sl, #1
   1bdd8:	cmp	sl, #15
   1bddc:	str	r0, [r7, #92]	; 0x5c
   1bde0:	bge	1c020 <gen_hostop+0xadc>
   1bde4:	mov	r1, #1024	; 0x400
   1bde8:	mov	r5, r3
   1bdec:	lsl	r4, r1, r0
   1bdf0:	mov	r0, r4
   1bdf4:	bl	e34 <malloc@plt>
   1bdf8:	mov	r3, r5
   1bdfc:	str	r0, [r5, #12]
   1be00:	ldr	r5, [fp, #8]
   1be04:	ldr	r7, [fp, #12]
   1be08:	cmp	r0, #0
   1be0c:	beq	1c020 <gen_hostop+0xadc>
   1be10:	add	r3, r3, #8
   1be14:	mov	r1, #0
   1be18:	mov	r2, r4
   1be1c:	mov	sl, r5
   1be20:	mov	r5, r7
   1be24:	mov	r7, r3
   1be28:	bl	ea0 <memset@plt>
   1be2c:	mov	r3, r7
   1be30:	str	r4, [r7]
   1be34:	cmp	r4, #207	; 0xcf
   1be38:	mov	r7, r5
   1be3c:	bls	1c020 <gen_hostop+0xadc>
   1be40:	sub	r0, r4, #208	; 0xd0
   1be44:	cmp	r8, #0
   1be48:	str	r0, [r3]
   1be4c:	ldr	r1, [r3, #4]
   1be50:	add	r5, r1, r0
   1be54:	mov	r0, #21
   1be58:	str	r6, [r5, #20]
   1be5c:	str	r9, [r5, #4]
   1be60:	str	r0, [r5, #8]
   1be64:	str	r5, [r5, #96]	; 0x60
   1be68:	beq	1be98 <gen_hostop+0x954>
   1be6c:	mov	r0, r8
   1be70:	ldr	r1, [r0, #44]	; 0x2c
   1be74:	add	r2, r0, #84	; 0x54
   1be78:	cmp	r1, #0
   1be7c:	mov	r1, #84	; 0x54
   1be80:	movweq	r1, #60	; 0x3c
   1be84:	addeq	r2, r0, #60	; 0x3c
   1be88:	ldr	r0, [r0, r1]
   1be8c:	str	r5, [r2]
   1be90:	cmp	r0, #0
   1be94:	bne	1be70 <gen_hostop+0x92c>
   1be98:	ldr	r0, [r8, #44]	; 0x2c
   1be9c:	ldr	r3, [sp, #16]
   1bea0:	cmp	r5, #0
   1bea4:	clz	r0, r0
   1bea8:	lsr	r0, r0, #5
   1beac:	str	r0, [r8, #44]	; 0x2c
   1beb0:	ldr	r0, [r5, #44]	; 0x2c
   1beb4:	clz	r1, r0
   1beb8:	lsr	r1, r1, #5
   1bebc:	str	r1, [r5, #44]	; 0x2c
   1bec0:	ldr	r1, [sp, #28]
   1bec4:	str	r5, [sp, #32]
   1bec8:	beq	1bf10 <gen_hostop+0x9cc>
   1becc:	cmp	r0, #0
   1bed0:	mov	r2, #60	; 0x3c
   1bed4:	mov	r4, r5
   1bed8:	movweq	r2, #84	; 0x54
   1bedc:	ldr	r0, [r4, r2]!
   1bee0:	cmp	r0, #0
   1bee4:	beq	1bf14 <gen_hostop+0x9d0>
   1bee8:	ldr	r2, [r0, #44]	; 0x2c
   1beec:	add	r4, r0, #84	; 0x54
   1bef0:	cmp	r2, #0
   1bef4:	mov	r2, #84	; 0x54
   1bef8:	movweq	r2, #60	; 0x3c
   1befc:	addeq	r4, r0, #60	; 0x3c
   1bf00:	ldr	r0, [r0, r2]
   1bf04:	cmp	r0, #0
   1bf08:	bne	1bee8 <gen_hostop+0x9a4>
   1bf0c:	b	1bf14 <gen_hostop+0x9d0>
   1bf10:	add	r4, sp, #32
   1bf14:	str	r8, [r4]
   1bf18:	mov	r2, #2
   1bf1c:	ldr	r0, [r5, #44]	; 0x2c
   1bf20:	clz	r0, r0
   1bf24:	lsr	r0, r0, #5
   1bf28:	str	r0, [r5, #44]	; 0x2c
   1bf2c:	ldr	r0, [r8, #96]	; 0x60
   1bf30:	str	r0, [r5, #96]	; 0x60
   1bf34:	mov	r0, r6
   1bf38:	str	sl, [sp]
   1bf3c:	str	r7, [sp, #4]
   1bf40:	bl	1b544 <gen_hostop>
   1bf44:	mov	r1, r0
   1bf48:	cmp	r5, #0
   1bf4c:	ldr	r2, [r1, #96]!	; 0x60
   1bf50:	beq	1bf80 <gen_hostop+0xa3c>
   1bf54:	mov	r3, r5
   1bf58:	ldr	r7, [r3, #44]	; 0x2c
   1bf5c:	add	r6, r3, #84	; 0x54
   1bf60:	cmp	r7, #0
   1bf64:	mov	r7, #84	; 0x54
   1bf68:	movweq	r7, #60	; 0x3c
   1bf6c:	addeq	r6, r3, #60	; 0x3c
   1bf70:	ldr	r3, [r3, r7]
   1bf74:	str	r2, [r6]
   1bf78:	cmp	r3, #0
   1bf7c:	bne	1bf58 <gen_hostop+0xa14>
   1bf80:	ldr	r3, [r5, #44]	; 0x2c
   1bf84:	add	r2, r5, #96	; 0x60
   1bf88:	cmp	r0, #0
   1bf8c:	clz	r3, r3
   1bf90:	lsr	r3, r3, #5
   1bf94:	str	r3, [r5, #44]	; 0x2c
   1bf98:	ldr	r7, [r0, #44]	; 0x2c
   1bf9c:	clz	r3, r7
   1bfa0:	lsr	r3, r3, #5
   1bfa4:	str	r3, [r0, #44]	; 0x2c
   1bfa8:	str	r0, [sp, #32]
   1bfac:	beq	1bff8 <gen_hostop+0xab4>
   1bfb0:	cmp	r7, #0
   1bfb4:	mov	r7, #60	; 0x3c
   1bfb8:	add	r3, r0, #60	; 0x3c
   1bfbc:	movweq	r7, #84	; 0x54
   1bfc0:	addeq	r3, r0, #84	; 0x54
   1bfc4:	ldr	r7, [r0, r7]
   1bfc8:	cmp	r7, #0
   1bfcc:	beq	1bffc <gen_hostop+0xab8>
   1bfd0:	ldr	r6, [r7, #44]	; 0x2c
   1bfd4:	add	r3, r7, #84	; 0x54
   1bfd8:	cmp	r6, #0
   1bfdc:	mov	r6, #84	; 0x54
   1bfe0:	movweq	r6, #60	; 0x3c
   1bfe4:	addeq	r3, r7, #60	; 0x3c
   1bfe8:	ldr	r7, [r7, r6]
   1bfec:	cmp	r7, #0
   1bff0:	bne	1bfd0 <gen_hostop+0xa8c>
   1bff4:	b	1bffc <gen_hostop+0xab8>
   1bff8:	add	r3, sp, #32
   1bffc:	str	r5, [r3]
   1c000:	ldr	r3, [r0, #44]	; 0x2c
   1c004:	clz	r3, r3
   1c008:	lsr	r3, r3, #5
   1c00c:	str	r3, [r0, #44]	; 0x2c
   1c010:	ldr	r2, [r2]
   1c014:	str	r2, [r1]
   1c018:	sub	sp, fp, #28
   1c01c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c020:	ldr	r0, [pc, #96]	; 1c088 <gen_hostop+0xb44>
   1c024:	add	r0, pc, r0
   1c028:	bl	214c <sf_bpf_error>
   1c02c:	bl	f24 <abort@plt>
   1c030:	.word	0x0002ae78
   1c034:	.word	0x0002ad94
   1c038:	.word	0x0002aba8
   1c03c:	.word	0x0002ac64
   1c040:	.word	0x0002ae2c
   1c044:	.word	0x0002ad68
   1c048:	.word	0x0002ad00
   1c04c:	.word	0x0002adbc
   1c050:	.word	0x0002a7b8
   1c054:	.word	0x0002a874
   1c058:	.word	0x0002a6a8
   1c05c:	.word	0x0002a764
   1c060:	.word	0x0002ad9c
   1c064:	.word	0x0002ab0c
   1c068:	.word	0x0002ad68
   1c06c:	.word	0x0002ac98
   1c070:	.word	0x0002acfc
   1c074:	.word	0x0002abe0
   1c078:	.word	0x0002ab74
   1c07c:	.word	0x0002aa78
   1c080:	.word	0x0002aae0
   1c084:	.word	0x0002a994
   1c088:	.word	0x0000da40

0001c08c <gen_dnhostop>:
   1c08c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c090:	add	fp, sp, #28
   1c094:	sub	sp, sp, #28
   1c098:	cmp	r1, #24
   1c09c:	bhi	1d730 <gen_dnhostop+0x16a4>
   1c0a0:	mov	r5, r0
   1c0a4:	add	r0, pc, #12
   1c0a8:	mov	r8, #1
   1c0ac:	mov	r4, #7
   1c0b0:	ldr	r1, [r0, r1, lsl #2]
   1c0b4:	add	pc, r0, r1
   1c0b8:	.word	0x00000064
   1c0bc:	.word	0x0000011c
   1c0c0:	.word	0x00000124
   1c0c4:	.word	0x00000064
   1c0c8:	.word	0x00000214
   1c0cc:	.word	0x00001678
   1c0d0:	.word	0x00001678
   1c0d4:	.word	0x00001678
   1c0d8:	.word	0x00001678
   1c0dc:	.word	0x00001678
   1c0e0:	.word	0x00001678
   1c0e4:	.word	0x00001678
   1c0e8:	.word	0x00001678
   1c0ec:	.word	0x00001678
   1c0f0:	.word	0x00001678
   1c0f4:	.word	0x00001678
   1c0f8:	.word	0x00001678
   1c0fc:	.word	0x00001678
   1c100:	.word	0x00001678
   1c104:	.word	0x00001678
   1c108:	.word	0x00001678
   1c10c:	.word	0x00001678
   1c110:	.word	0x00001678
   1c114:	.word	0x00001678
   1c118:	.word	0x0000167c
   1c11c:	mov	r0, r5
   1c120:	mov	r1, #1
   1c124:	bl	1c08c <gen_dnhostop>
   1c128:	mov	r9, r0
   1c12c:	mov	r0, r5
   1c130:	mov	r1, #2
   1c134:	bl	1c08c <gen_dnhostop>
   1c138:	mov	sl, r0
   1c13c:	ldr	r0, [r9, #44]	; 0x2c
   1c140:	cmp	r9, #0
   1c144:	clz	r0, r0
   1c148:	lsr	r0, r0, #5
   1c14c:	str	r0, [r9, #44]	; 0x2c
   1c150:	beq	1c18c <gen_dnhostop+0x100>
   1c154:	ldr	r1, [sl, #96]	; 0x60
   1c158:	mov	r2, r9
   1c15c:	cmp	r0, #0
   1c160:	mov	r0, #84	; 0x54
   1c164:	add	r3, r2, #84	; 0x54
   1c168:	movweq	r0, #60	; 0x3c
   1c16c:	addeq	r3, r2, #60	; 0x3c
   1c170:	ldr	r2, [r2, r0]
   1c174:	str	r1, [r3]
   1c178:	cmp	r2, #0
   1c17c:	beq	1c188 <gen_dnhostop+0xfc>
   1c180:	ldr	r0, [r2, #44]	; 0x2c
   1c184:	b	1c15c <gen_dnhostop+0xd0>
   1c188:	ldr	r0, [r9, #44]	; 0x2c
   1c18c:	clz	r0, r0
   1c190:	cmp	sl, #0
   1c194:	lsr	r0, r0, #5
   1c198:	str	r0, [r9, #44]	; 0x2c
   1c19c:	str	sl, [sp, #24]
   1c1a0:	beq	1c398 <gen_dnhostop+0x30c>
   1c1a4:	mov	r1, sl
   1c1a8:	ldr	r2, [r1, #44]	; 0x2c
   1c1ac:	add	r0, r1, #84	; 0x54
   1c1b0:	cmp	r2, #0
   1c1b4:	mov	r2, #84	; 0x54
   1c1b8:	movweq	r2, #60	; 0x3c
   1c1bc:	addeq	r0, r1, #60	; 0x3c
   1c1c0:	ldr	r1, [r1, r2]
   1c1c4:	cmp	r1, #0
   1c1c8:	bne	1c1a8 <gen_dnhostop+0x11c>
   1c1cc:	str	r9, [r0]
   1c1d0:	b	1d70c <gen_dnhostop+0x1680>
   1c1d4:	mov	r8, #3
   1c1d8:	mov	r4, #15
   1c1dc:	movw	r0, #24579	; 0x6003
   1c1e0:	bl	6fb4 <gen_linktype>
   1c1e4:	ldr	r7, [pc, #4076]	; 1d1d8 <gen_dnhostop+0x114c>
   1c1e8:	mov	r9, r0
   1c1ec:	add	r7, pc, r7
   1c1f0:	ldrb	r0, [r7, #16]
   1c1f4:	ldr	r1, [r7, #48]	; 0x30
   1c1f8:	ldr	r3, [pc, #4060]	; 1d1dc <gen_dnhostop+0x1150>
   1c1fc:	str	r9, [sp, #8]
   1c200:	str	r8, [sp, #16]
   1c204:	str	r4, [sp, #12]
   1c208:	str	r5, [sp, #20]
   1c20c:	add	ip, r1, #2
   1c210:	cmp	r0, #0
   1c214:	add	r3, pc, r3
   1c218:	beq	1c2c4 <gen_dnhostop+0x238>
   1c21c:	ldr	sl, [r7, #100]	; 0x64
   1c220:	cmn	sl, #1
   1c224:	bne	1c24c <gen_dnhostop+0x1c0>
   1c228:	mov	r5, ip
   1c22c:	bl	1305c <alloc_reg>
   1c230:	ldr	r7, [pc, #4008]	; 1d1e0 <gen_dnhostop+0x1154>
   1c234:	ldr	r3, [pc, #4008]	; 1d1e4 <gen_dnhostop+0x1158>
   1c238:	mov	ip, r5
   1c23c:	mov	sl, r0
   1c240:	add	r7, pc, r7
   1c244:	add	r3, pc, r3
   1c248:	str	r0, [r7, #100]	; 0x64
   1c24c:	ldr	r0, [r7, #92]	; 0x5c
   1c250:	mov	r5, r3
   1c254:	ldr	r6, [r5, r0, lsl #3]!
   1c258:	cmp	r6, #19
   1c25c:	bhi	1c3a4 <gen_dnhostop+0x318>
   1c260:	add	r4, r0, #1
   1c264:	cmp	r0, #15
   1c268:	str	ip, [sp, #4]
   1c26c:	str	r4, [r7, #92]	; 0x5c
   1c270:	bge	1d724 <gen_dnhostop+0x1698>
   1c274:	mov	r0, #1024	; 0x400
   1c278:	lsl	r6, r0, r4
   1c27c:	mov	r0, r6
   1c280:	bl	e34 <malloc@plt>
   1c284:	cmp	r0, #0
   1c288:	str	r0, [r5, #12]
   1c28c:	beq	1d724 <gen_dnhostop+0x1698>
   1c290:	mov	r1, #0
   1c294:	mov	r2, r6
   1c298:	add	r5, r5, #8
   1c29c:	bl	ea0 <memset@plt>
   1c2a0:	str	r6, [r5]
   1c2a4:	cmp	r6, #19
   1c2a8:	ldr	r3, [pc, #4016]	; 1d260 <gen_dnhostop+0x11d4>
   1c2ac:	ldr	r7, [pc, #4016]	; 1d264 <gen_dnhostop+0x11d8>
   1c2b0:	ldr	ip, [sp, #4]
   1c2b4:	add	r3, pc, r3
   1c2b8:	add	r7, pc, r7
   1c2bc:	bhi	1c3a8 <gen_dnhostop+0x31c>
   1c2c0:	b	1d724 <gen_dnhostop+0x1698>
   1c2c4:	ldr	r4, [r7, #92]	; 0x5c
   1c2c8:	b	1c43c <gen_dnhostop+0x3b0>
   1c2cc:	mov	r0, r5
   1c2d0:	mov	r1, #1
   1c2d4:	bl	1c08c <gen_dnhostop>
   1c2d8:	mov	r9, r0
   1c2dc:	mov	r0, r5
   1c2e0:	mov	r1, #2
   1c2e4:	bl	1c08c <gen_dnhostop>
   1c2e8:	mov	sl, r0
   1c2ec:	cmp	r9, #0
   1c2f0:	beq	1c324 <gen_dnhostop+0x298>
   1c2f4:	ldr	r0, [sl, #96]	; 0x60
   1c2f8:	mov	r1, r9
   1c2fc:	ldr	r2, [r1, #44]	; 0x2c
   1c300:	add	r3, r1, #84	; 0x54
   1c304:	cmp	r2, #0
   1c308:	mov	r2, #84	; 0x54
   1c30c:	movweq	r2, #60	; 0x3c
   1c310:	addeq	r3, r1, #60	; 0x3c
   1c314:	ldr	r1, [r1, r2]
   1c318:	str	r0, [r3]
   1c31c:	cmp	r1, #0
   1c320:	bne	1c2fc <gen_dnhostop+0x270>
   1c324:	ldr	r0, [r9, #44]	; 0x2c
   1c328:	cmp	sl, #0
   1c32c:	clz	r0, r0
   1c330:	lsr	r0, r0, #5
   1c334:	str	r0, [r9, #44]	; 0x2c
   1c338:	ldr	r1, [sl, #44]	; 0x2c
   1c33c:	clz	r0, r1
   1c340:	lsr	r0, r0, #5
   1c344:	str	r0, [sl, #44]	; 0x2c
   1c348:	str	sl, [sp, #24]
   1c34c:	beq	1d6f4 <gen_dnhostop+0x1668>
   1c350:	cmp	r1, #0
   1c354:	mov	r1, #60	; 0x3c
   1c358:	add	r0, sl, #60	; 0x3c
   1c35c:	movweq	r1, #84	; 0x54
   1c360:	addeq	r0, sl, #84	; 0x54
   1c364:	ldr	r1, [sl, r1]
   1c368:	cmp	r1, #0
   1c36c:	beq	1d6f8 <gen_dnhostop+0x166c>
   1c370:	ldr	r2, [r1, #44]	; 0x2c
   1c374:	add	r0, r1, #84	; 0x54
   1c378:	cmp	r2, #0
   1c37c:	mov	r2, #84	; 0x54
   1c380:	movweq	r2, #60	; 0x3c
   1c384:	addeq	r0, r1, #60	; 0x3c
   1c388:	ldr	r1, [r1, r2]
   1c38c:	cmp	r1, #0
   1c390:	bne	1c370 <gen_dnhostop+0x2e4>
   1c394:	b	1d6f8 <gen_dnhostop+0x166c>
   1c398:	add	r0, sp, #24
   1c39c:	str	r9, [r0]
   1c3a0:	b	1d70c <gen_dnhostop+0x1680>
   1c3a4:	mov	r4, r0
   1c3a8:	sub	r0, r6, #20
   1c3ac:	mov	r1, #97	; 0x61
   1c3b0:	str	r0, [r5]
   1c3b4:	ldr	r9, [r5, #4]
   1c3b8:	str	r1, [r9, r0]!
   1c3bc:	cmp	r9, #0
   1c3c0:	str	sl, [r9, #12]
   1c3c4:	beq	1c43c <gen_dnhostop+0x3b0>
   1c3c8:	mov	r5, r3
   1c3cc:	ldr	r6, [r5, r4, lsl #3]!
   1c3d0:	cmp	r6, #19
   1c3d4:	bhi	1c540 <gen_dnhostop+0x4b4>
   1c3d8:	add	sl, r4, #1
   1c3dc:	cmp	r4, #15
   1c3e0:	str	sl, [r7, #92]	; 0x5c
   1c3e4:	bge	1d724 <gen_dnhostop+0x1698>
   1c3e8:	mov	r0, #1024	; 0x400
   1c3ec:	mov	r8, ip
   1c3f0:	lsl	r6, r0, sl
   1c3f4:	mov	r0, r6
   1c3f8:	bl	e34 <malloc@plt>
   1c3fc:	cmp	r0, #0
   1c400:	str	r0, [r5, #12]
   1c404:	beq	1d724 <gen_dnhostop+0x1698>
   1c408:	mov	r1, #0
   1c40c:	mov	r2, r6
   1c410:	add	r5, r5, #8
   1c414:	bl	ea0 <memset@plt>
   1c418:	str	r6, [r5]
   1c41c:	cmp	r6, #19
   1c420:	mov	ip, r8
   1c424:	ldr	r3, [pc, #3960]	; 1d3a4 <gen_dnhostop+0x1318>
   1c428:	ldr	r7, [pc, #3960]	; 1d3a8 <gen_dnhostop+0x131c>
   1c42c:	add	r3, pc, r3
   1c430:	add	r7, pc, r7
   1c434:	bhi	1c544 <gen_dnhostop+0x4b8>
   1c438:	b	1d724 <gen_dnhostop+0x1698>
   1c43c:	mov	r5, r3
   1c440:	ldr	r6, [r5, r4, lsl #3]!
   1c444:	cmp	r6, #19
   1c448:	bhi	1c4b0 <gen_dnhostop+0x424>
   1c44c:	add	sl, r4, #1
   1c450:	cmp	r4, #15
   1c454:	str	sl, [r7, #92]	; 0x5c
   1c458:	bge	1d724 <gen_dnhostop+0x1698>
   1c45c:	mov	r0, #1024	; 0x400
   1c460:	mov	r8, ip
   1c464:	lsl	r6, r0, sl
   1c468:	mov	r0, r6
   1c46c:	bl	e34 <malloc@plt>
   1c470:	cmp	r0, #0
   1c474:	str	r0, [r5, #12]
   1c478:	beq	1d724 <gen_dnhostop+0x1698>
   1c47c:	mov	r1, #0
   1c480:	mov	r2, r6
   1c484:	add	r5, r5, #8
   1c488:	bl	ea0 <memset@plt>
   1c48c:	str	r6, [r5]
   1c490:	cmp	r6, #19
   1c494:	mov	ip, r8
   1c498:	ldr	r3, [pc, #3852]	; 1d3ac <gen_dnhostop+0x1320>
   1c49c:	ldr	r7, [pc, #3852]	; 1d3b0 <gen_dnhostop+0x1324>
   1c4a0:	add	r3, pc, r3
   1c4a4:	add	r7, pc, r7
   1c4a8:	bhi	1c4b4 <gen_dnhostop+0x428>
   1c4ac:	b	1d724 <gen_dnhostop+0x1698>
   1c4b0:	mov	sl, r4
   1c4b4:	sub	r0, r6, #20
   1c4b8:	mov	r1, #40	; 0x28
   1c4bc:	str	r0, [r5]
   1c4c0:	ldr	r9, [r5, #4]
   1c4c4:	str	r1, [r9, r0]!
   1c4c8:	ldr	r0, [r7, #44]	; 0x2c
   1c4cc:	add	r0, r0, ip
   1c4d0:	str	r0, [r9, #12]
   1c4d4:	mov	r5, r3
   1c4d8:	ldr	r6, [r5, sl, lsl #3]!
   1c4dc:	cmp	r6, #19
   1c4e0:	bhi	1c584 <gen_dnhostop+0x4f8>
   1c4e4:	add	r4, sl, #1
   1c4e8:	cmp	sl, #15
   1c4ec:	str	r4, [r7, #92]	; 0x5c
   1c4f0:	bge	1d724 <gen_dnhostop+0x1698>
   1c4f4:	mov	r0, #1024	; 0x400
   1c4f8:	lsl	r6, r0, r4
   1c4fc:	mov	r0, r6
   1c500:	bl	e34 <malloc@plt>
   1c504:	cmp	r0, #0
   1c508:	str	r0, [r5, #12]
   1c50c:	beq	1d724 <gen_dnhostop+0x1698>
   1c510:	mov	r1, #0
   1c514:	mov	r2, r6
   1c518:	add	r5, r5, #8
   1c51c:	bl	ea0 <memset@plt>
   1c520:	str	r6, [r5]
   1c524:	cmp	r6, #19
   1c528:	ldr	r3, [pc, #3716]	; 1d3b4 <gen_dnhostop+0x1328>
   1c52c:	ldr	r7, [pc, #3716]	; 1d3b8 <gen_dnhostop+0x132c>
   1c530:	add	r3, pc, r3
   1c534:	add	r7, pc, r7
   1c538:	bhi	1c588 <gen_dnhostop+0x4fc>
   1c53c:	b	1d724 <gen_dnhostop+0x1698>
   1c540:	mov	sl, r4
   1c544:	sub	r1, r6, #20
   1c548:	mov	r2, #72	; 0x48
   1c54c:	str	r1, [r5]
   1c550:	ldr	r0, [r5, #4]
   1c554:	str	r2, [r0, r1]!
   1c558:	mov	r2, r9
   1c55c:	str	ip, [r0, #12]
   1c560:	mov	r1, r2
   1c564:	ldr	r2, [r2, #16]
   1c568:	cmp	r2, #0
   1c56c:	bne	1c560 <gen_dnhostop+0x4d4>
   1c570:	str	r0, [r1, #16]
   1c574:	mov	r5, r3
   1c578:	ldr	r6, [r5, sl, lsl #3]!
   1c57c:	cmp	r6, #19
   1c580:	bls	1c4e4 <gen_dnhostop+0x458>
   1c584:	mov	r4, sl
   1c588:	sub	r1, r6, #20
   1c58c:	mov	r2, #84	; 0x54
   1c590:	str	r1, [r5]
   1c594:	ldr	r0, [r5, #4]
   1c598:	str	r2, [r0, r1]!
   1c59c:	movw	r1, #65287	; 0xff07
   1c5a0:	mov	r2, r9
   1c5a4:	str	r1, [r0, #12]
   1c5a8:	mov	r1, r2
   1c5ac:	ldr	r2, [r2, #16]
   1c5b0:	cmp	r2, #0
   1c5b4:	bne	1c5a8 <gen_dnhostop+0x51c>
   1c5b8:	str	r0, [r1, #16]
   1c5bc:	mov	r5, r3
   1c5c0:	ldr	r6, [r5, r4, lsl #3]!
   1c5c4:	cmp	r6, #207	; 0xcf
   1c5c8:	bhi	1c614 <gen_dnhostop+0x588>
   1c5cc:	add	r0, r4, #1
   1c5d0:	cmp	r4, #15
   1c5d4:	str	r0, [r7, #92]	; 0x5c
   1c5d8:	bge	1d724 <gen_dnhostop+0x1698>
   1c5dc:	mov	r1, #1024	; 0x400
   1c5e0:	lsl	r6, r1, r0
   1c5e4:	mov	r0, r6
   1c5e8:	bl	e34 <malloc@plt>
   1c5ec:	cmp	r0, #0
   1c5f0:	str	r0, [r5, #12]
   1c5f4:	beq	1d724 <gen_dnhostop+0x1698>
   1c5f8:	mov	r1, #0
   1c5fc:	mov	r2, r6
   1c600:	add	r5, r5, #8
   1c604:	bl	ea0 <memset@plt>
   1c608:	cmp	r6, #207	; 0xcf
   1c60c:	str	r6, [r5]
   1c610:	bls	1d724 <gen_dnhostop+0x1698>
   1c614:	sub	r0, r6, #208	; 0xd0
   1c618:	mov	r2, #8
   1c61c:	str	r0, [r5]
   1c620:	ldr	r1, [r5, #4]
   1c624:	add	r4, r1, r0
   1c628:	movw	r1, #33030	; 0x8106
   1c62c:	mov	r0, #21
   1c630:	str	r1, [r4, #20]
   1c634:	str	r9, [r4, #4]
   1c638:	str	r0, [r4, #8]
   1c63c:	ldr	r0, [sp, #12]
   1c640:	str	r4, [r4, #96]	; 0x60
   1c644:	add	r1, r0, #3
   1c648:	ldr	r0, [sp, #20]
   1c64c:	rev	r0, r0
   1c650:	lsr	r3, r0, #16
   1c654:	mov	r0, #3
   1c658:	str	r3, [sp, #20]
   1c65c:	bl	a0a4 <gen_cmp>
   1c660:	mov	sl, r0
   1c664:	cmp	r4, #0
   1c668:	beq	1c69c <gen_dnhostop+0x610>
   1c66c:	ldr	r0, [sl, #96]	; 0x60
   1c670:	mov	r1, r4
   1c674:	ldr	r2, [r1, #44]	; 0x2c
   1c678:	add	r3, r1, #84	; 0x54
   1c67c:	cmp	r2, #0
   1c680:	mov	r2, #84	; 0x54
   1c684:	movweq	r2, #60	; 0x3c
   1c688:	addeq	r3, r1, #60	; 0x3c
   1c68c:	ldr	r1, [r1, r2]
   1c690:	str	r0, [r3]
   1c694:	cmp	r1, #0
   1c698:	bne	1c674 <gen_dnhostop+0x5e8>
   1c69c:	ldr	r0, [r4, #44]	; 0x2c
   1c6a0:	cmp	sl, #0
   1c6a4:	clz	r0, r0
   1c6a8:	lsr	r0, r0, #5
   1c6ac:	str	r0, [r4, #44]	; 0x2c
   1c6b0:	ldr	r1, [sl, #44]	; 0x2c
   1c6b4:	clz	r0, r1
   1c6b8:	lsr	r0, r0, #5
   1c6bc:	str	r0, [sl, #44]	; 0x2c
   1c6c0:	str	sl, [sp, #24]
   1c6c4:	ldr	ip, [pc, #3944]	; 1d634 <gen_dnhostop+0x15a8>
   1c6c8:	add	ip, pc, ip
   1c6cc:	beq	1c720 <gen_dnhostop+0x694>
   1c6d0:	cmp	r1, #0
   1c6d4:	mov	r1, #60	; 0x3c
   1c6d8:	add	r0, sl, #60	; 0x3c
   1c6dc:	movweq	r1, #84	; 0x54
   1c6e0:	addeq	r0, sl, #84	; 0x54
   1c6e4:	ldr	r1, [sl, r1]
   1c6e8:	ldr	r3, [pc, #3912]	; 1d638 <gen_dnhostop+0x15ac>
   1c6ec:	cmp	r1, #0
   1c6f0:	add	r3, pc, r3
   1c6f4:	beq	1c72c <gen_dnhostop+0x6a0>
   1c6f8:	ldr	r2, [r1, #44]	; 0x2c
   1c6fc:	add	r0, r1, #84	; 0x54
   1c700:	cmp	r2, #0
   1c704:	mov	r2, #84	; 0x54
   1c708:	movweq	r2, #60	; 0x3c
   1c70c:	addeq	r0, r1, #60	; 0x3c
   1c710:	ldr	r1, [r1, r2]
   1c714:	cmp	r1, #0
   1c718:	bne	1c6f8 <gen_dnhostop+0x66c>
   1c71c:	b	1c72c <gen_dnhostop+0x6a0>
   1c720:	ldr	r3, [pc, #4088]	; 1d720 <gen_dnhostop+0x1694>
   1c724:	add	r0, sp, #24
   1c728:	add	r3, pc, r3
   1c72c:	str	r4, [r0]
   1c730:	ldr	r0, [sl, #44]	; 0x2c
   1c734:	clz	r0, r0
   1c738:	lsr	r0, r0, #5
   1c73c:	str	r0, [sl, #44]	; 0x2c
   1c740:	ldr	r0, [r4, #96]	; 0x60
   1c744:	str	r0, [sl, #96]	; 0x60
   1c748:	ldrb	r0, [ip, #16]
   1c74c:	ldr	r1, [ip, #48]	; 0x30
   1c750:	add	r4, r1, #2
   1c754:	cmp	r0, #0
   1c758:	beq	1c7f4 <gen_dnhostop+0x768>
   1c75c:	ldr	r9, [ip, #100]	; 0x64
   1c760:	cmn	r9, #1
   1c764:	bne	1c784 <gen_dnhostop+0x6f8>
   1c768:	bl	1305c <alloc_reg>
   1c76c:	ldr	ip, [pc, #4048]	; 1d744 <gen_dnhostop+0x16b8>
   1c770:	ldr	r3, [pc, #4048]	; 1d748 <gen_dnhostop+0x16bc>
   1c774:	mov	r9, r0
   1c778:	add	ip, pc, ip
   1c77c:	add	r3, pc, r3
   1c780:	str	r0, [ip, #100]	; 0x64
   1c784:	ldr	r0, [ip, #92]	; 0x5c
   1c788:	mov	r5, r3
   1c78c:	ldr	r6, [r5, r0, lsl #3]!
   1c790:	cmp	r6, #19
   1c794:	bhi	1c7fc <gen_dnhostop+0x770>
   1c798:	add	r7, r0, #1
   1c79c:	cmp	r0, #15
   1c7a0:	str	r7, [ip, #92]	; 0x5c
   1c7a4:	bge	1d724 <gen_dnhostop+0x1698>
   1c7a8:	mov	r0, #1024	; 0x400
   1c7ac:	lsl	r6, r0, r7
   1c7b0:	mov	r0, r6
   1c7b4:	bl	e34 <malloc@plt>
   1c7b8:	cmp	r0, #0
   1c7bc:	str	r0, [r5, #12]
   1c7c0:	beq	1d724 <gen_dnhostop+0x1698>
   1c7c4:	mov	r1, #0
   1c7c8:	mov	r2, r6
   1c7cc:	add	r5, r5, #8
   1c7d0:	bl	ea0 <memset@plt>
   1c7d4:	str	r6, [r5]
   1c7d8:	cmp	r6, #19
   1c7dc:	ldr	r3, [pc, #3944]	; 1d74c <gen_dnhostop+0x16c0>
   1c7e0:	ldr	ip, [pc, #3944]	; 1d750 <gen_dnhostop+0x16c4>
   1c7e4:	add	r3, pc, r3
   1c7e8:	add	ip, pc, ip
   1c7ec:	bhi	1c800 <gen_dnhostop+0x774>
   1c7f0:	b	1d724 <gen_dnhostop+0x1698>
   1c7f4:	ldr	r7, [ip, #92]	; 0x5c
   1c7f8:	b	1c88c <gen_dnhostop+0x800>
   1c7fc:	mov	r7, r0
   1c800:	sub	r0, r6, #20
   1c804:	mov	r1, #97	; 0x61
   1c808:	str	r0, [r5]
   1c80c:	ldr	r8, [r5, #4]
   1c810:	str	r1, [r8, r0]!
   1c814:	cmp	r8, #0
   1c818:	str	r9, [r8, #12]
   1c81c:	beq	1c88c <gen_dnhostop+0x800>
   1c820:	mov	r5, r3
   1c824:	ldr	r6, [r5, r7, lsl #3]!
   1c828:	cmp	r6, #19
   1c82c:	bhi	1c98c <gen_dnhostop+0x900>
   1c830:	add	r9, r7, #1
   1c834:	cmp	r7, #15
   1c838:	str	r9, [ip, #92]	; 0x5c
   1c83c:	bge	1d724 <gen_dnhostop+0x1698>
   1c840:	mov	r0, #1024	; 0x400
   1c844:	lsl	r6, r0, r9
   1c848:	mov	r0, r6
   1c84c:	bl	e34 <malloc@plt>
   1c850:	cmp	r0, #0
   1c854:	str	r0, [r5, #12]
   1c858:	beq	1d724 <gen_dnhostop+0x1698>
   1c85c:	mov	r1, #0
   1c860:	mov	r2, r6
   1c864:	add	r5, r5, #8
   1c868:	bl	ea0 <memset@plt>
   1c86c:	str	r6, [r5]
   1c870:	cmp	r6, #19
   1c874:	ldr	r3, [pc, #3800]	; 1d754 <gen_dnhostop+0x16c8>
   1c878:	ldr	ip, [pc, #3800]	; 1d758 <gen_dnhostop+0x16cc>
   1c87c:	add	r3, pc, r3
   1c880:	add	ip, pc, ip
   1c884:	bhi	1c990 <gen_dnhostop+0x904>
   1c888:	b	1d724 <gen_dnhostop+0x1698>
   1c88c:	mov	r5, r3
   1c890:	ldr	r6, [r5, r7, lsl #3]!
   1c894:	cmp	r6, #19
   1c898:	bhi	1c8f8 <gen_dnhostop+0x86c>
   1c89c:	add	r9, r7, #1
   1c8a0:	cmp	r7, #15
   1c8a4:	str	r9, [ip, #92]	; 0x5c
   1c8a8:	bge	1d724 <gen_dnhostop+0x1698>
   1c8ac:	mov	r0, #1024	; 0x400
   1c8b0:	lsl	r6, r0, r9
   1c8b4:	mov	r0, r6
   1c8b8:	bl	e34 <malloc@plt>
   1c8bc:	cmp	r0, #0
   1c8c0:	str	r0, [r5, #12]
   1c8c4:	beq	1d724 <gen_dnhostop+0x1698>
   1c8c8:	mov	r1, #0
   1c8cc:	mov	r2, r6
   1c8d0:	add	r5, r5, #8
   1c8d4:	bl	ea0 <memset@plt>
   1c8d8:	str	r6, [r5]
   1c8dc:	cmp	r6, #19
   1c8e0:	ldr	r3, [pc, #3700]	; 1d75c <gen_dnhostop+0x16d0>
   1c8e4:	ldr	ip, [pc, #3700]	; 1d760 <gen_dnhostop+0x16d4>
   1c8e8:	add	r3, pc, r3
   1c8ec:	add	ip, pc, ip
   1c8f0:	bhi	1c8fc <gen_dnhostop+0x870>
   1c8f4:	b	1d724 <gen_dnhostop+0x1698>
   1c8f8:	mov	r9, r7
   1c8fc:	sub	r0, r6, #20
   1c900:	mov	r1, #48	; 0x30
   1c904:	str	r0, [r5]
   1c908:	ldr	r8, [r5, #4]
   1c90c:	str	r1, [r8, r0]!
   1c910:	ldr	r0, [ip, #44]	; 0x2c
   1c914:	add	r0, r0, r4
   1c918:	str	r0, [r8, #12]
   1c91c:	mov	r7, r3
   1c920:	ldr	r6, [r7, r9, lsl #3]!
   1c924:	cmp	r6, #19
   1c928:	bhi	1c9d0 <gen_dnhostop+0x944>
   1c92c:	add	r5, r9, #1
   1c930:	cmp	r9, #15
   1c934:	str	r5, [ip, #92]	; 0x5c
   1c938:	bge	1d724 <gen_dnhostop+0x1698>
   1c93c:	mov	r0, #1024	; 0x400
   1c940:	lsl	r6, r0, r5
   1c944:	mov	r0, r6
   1c948:	bl	e34 <malloc@plt>
   1c94c:	ldr	r9, [sp, #8]
   1c950:	cmp	r0, #0
   1c954:	str	r0, [r7, #12]
   1c958:	beq	1d724 <gen_dnhostop+0x1698>
   1c95c:	mov	r1, #0
   1c960:	mov	r2, r6
   1c964:	add	r7, r7, #8
   1c968:	bl	ea0 <memset@plt>
   1c96c:	str	r6, [r7]
   1c970:	cmp	r6, #19
   1c974:	ldr	r3, [pc, #3560]	; 1d764 <gen_dnhostop+0x16d8>
   1c978:	ldr	ip, [pc, #3560]	; 1d768 <gen_dnhostop+0x16dc>
   1c97c:	add	r3, pc, r3
   1c980:	add	ip, pc, ip
   1c984:	bhi	1c9d8 <gen_dnhostop+0x94c>
   1c988:	b	1d724 <gen_dnhostop+0x1698>
   1c98c:	mov	r9, r7
   1c990:	sub	r1, r6, #20
   1c994:	mov	r2, #80	; 0x50
   1c998:	str	r1, [r5]
   1c99c:	ldr	r0, [r5, #4]
   1c9a0:	str	r2, [r0, r1]!
   1c9a4:	mov	r2, r8
   1c9a8:	str	r4, [r0, #12]
   1c9ac:	mov	r1, r2
   1c9b0:	ldr	r2, [r2, #16]
   1c9b4:	cmp	r2, #0
   1c9b8:	bne	1c9ac <gen_dnhostop+0x920>
   1c9bc:	str	r0, [r1, #16]
   1c9c0:	mov	r7, r3
   1c9c4:	ldr	r6, [r7, r9, lsl #3]!
   1c9c8:	cmp	r6, #19
   1c9cc:	bls	1c92c <gen_dnhostop+0x8a0>
   1c9d0:	mov	r5, r9
   1c9d4:	ldr	r9, [sp, #8]
   1c9d8:	sub	r1, r6, #20
   1c9dc:	mov	r2, #84	; 0x54
   1c9e0:	str	r1, [r7]
   1c9e4:	ldr	r0, [r7, #4]
   1c9e8:	str	r2, [r0, r1]!
   1c9ec:	mov	r1, #7
   1c9f0:	mov	r2, r8
   1c9f4:	str	r1, [r0, #12]
   1c9f8:	mov	r1, r2
   1c9fc:	ldr	r2, [r2, #16]
   1ca00:	cmp	r2, #0
   1ca04:	bne	1c9f8 <gen_dnhostop+0x96c>
   1ca08:	str	r0, [r1, #16]
   1ca0c:	mov	r4, r3
   1ca10:	ldr	r6, [r4, r5, lsl #3]!
   1ca14:	cmp	r6, #207	; 0xcf
   1ca18:	bhi	1ca64 <gen_dnhostop+0x9d8>
   1ca1c:	add	r0, r5, #1
   1ca20:	cmp	r5, #15
   1ca24:	str	r0, [ip, #92]	; 0x5c
   1ca28:	bge	1d724 <gen_dnhostop+0x1698>
   1ca2c:	mov	r1, #1024	; 0x400
   1ca30:	lsl	r6, r1, r0
   1ca34:	mov	r0, r6
   1ca38:	bl	e34 <malloc@plt>
   1ca3c:	cmp	r0, #0
   1ca40:	str	r0, [r4, #12]
   1ca44:	beq	1d724 <gen_dnhostop+0x1698>
   1ca48:	mov	r1, #0
   1ca4c:	mov	r2, r6
   1ca50:	add	r4, r4, #8
   1ca54:	bl	ea0 <memset@plt>
   1ca58:	cmp	r6, #207	; 0xcf
   1ca5c:	str	r6, [r4]
   1ca60:	bls	1d724 <gen_dnhostop+0x1698>
   1ca64:	sub	r0, r6, #208	; 0xd0
   1ca68:	ldr	r3, [sp, #20]
   1ca6c:	mov	r2, #8
   1ca70:	str	r0, [r4]
   1ca74:	ldr	r1, [r4, #4]
   1ca78:	add	r4, r1, r0
   1ca7c:	mov	r1, #6
   1ca80:	mov	r0, #21
   1ca84:	str	r1, [r4, #20]
   1ca88:	str	r8, [r4, #4]
   1ca8c:	str	r0, [r4, #8]
   1ca90:	ldr	r0, [sp, #12]
   1ca94:	str	r4, [r4, #96]	; 0x60
   1ca98:	add	r1, r0, #2
   1ca9c:	mov	r0, #3
   1caa0:	bl	a0a4 <gen_cmp>
   1caa4:	cmp	r4, #0
   1caa8:	beq	1cadc <gen_dnhostop+0xa50>
   1caac:	ldr	r1, [r0, #96]	; 0x60
   1cab0:	mov	r2, r4
   1cab4:	ldr	r3, [r2, #44]	; 0x2c
   1cab8:	add	r7, r2, #84	; 0x54
   1cabc:	cmp	r3, #0
   1cac0:	mov	r3, #84	; 0x54
   1cac4:	movweq	r3, #60	; 0x3c
   1cac8:	addeq	r7, r2, #60	; 0x3c
   1cacc:	ldr	r2, [r2, r3]
   1cad0:	str	r1, [r7]
   1cad4:	cmp	r2, #0
   1cad8:	bne	1cab4 <gen_dnhostop+0xa28>
   1cadc:	ldr	r1, [r4, #44]	; 0x2c
   1cae0:	cmp	r0, #0
   1cae4:	clz	r1, r1
   1cae8:	lsr	r1, r1, #5
   1caec:	str	r1, [r4, #44]	; 0x2c
   1caf0:	ldr	r2, [r0, #44]	; 0x2c
   1caf4:	clz	r1, r2
   1caf8:	lsr	r1, r1, #5
   1cafc:	str	r1, [r0, #44]	; 0x2c
   1cb00:	str	r0, [sp, #24]
   1cb04:	beq	1cb58 <gen_dnhostop+0xacc>
   1cb08:	cmp	r2, #0
   1cb0c:	mov	r2, #60	; 0x3c
   1cb10:	add	r1, r0, #60	; 0x3c
   1cb14:	movweq	r2, #84	; 0x54
   1cb18:	addeq	r1, r0, #84	; 0x54
   1cb1c:	ldr	r2, [r0, r2]
   1cb20:	ldr	ip, [pc, #3144]	; 1d770 <gen_dnhostop+0x16e4>
   1cb24:	cmp	r2, #0
   1cb28:	add	ip, pc, ip
   1cb2c:	beq	1cb64 <gen_dnhostop+0xad8>
   1cb30:	ldr	r3, [r2, #44]	; 0x2c
   1cb34:	add	r1, r2, #84	; 0x54
   1cb38:	cmp	r3, #0
   1cb3c:	mov	r3, #84	; 0x54
   1cb40:	movweq	r3, #60	; 0x3c
   1cb44:	addeq	r1, r2, #60	; 0x3c
   1cb48:	ldr	r2, [r2, r3]
   1cb4c:	cmp	r2, #0
   1cb50:	bne	1cb30 <gen_dnhostop+0xaa4>
   1cb54:	b	1cb64 <gen_dnhostop+0xad8>
   1cb58:	ldr	ip, [pc, #3084]	; 1d76c <gen_dnhostop+0x16e0>
   1cb5c:	add	r1, sp, #24
   1cb60:	add	ip, pc, ip
   1cb64:	str	r4, [r1]
   1cb68:	ldr	r1, [r0, #44]	; 0x2c
   1cb6c:	clz	r2, r1
   1cb70:	cmp	r1, #0
   1cb74:	lsr	r2, r2, #5
   1cb78:	movwne	r1, #1
   1cb7c:	cmp	r0, #0
   1cb80:	str	r2, [r0, #44]	; 0x2c
   1cb84:	ldr	r2, [r4, #96]	; 0x60
   1cb88:	str	r1, [r0, #44]	; 0x2c
   1cb8c:	str	r2, [r0, #96]	; 0x60
   1cb90:	beq	1cbcc <gen_dnhostop+0xb40>
   1cb94:	ldr	r2, [sl, #96]	; 0x60
   1cb98:	mov	r3, r0
   1cb9c:	cmp	r1, #0
   1cba0:	mov	r1, #84	; 0x54
   1cba4:	add	r7, r3, #84	; 0x54
   1cba8:	movweq	r1, #60	; 0x3c
   1cbac:	addeq	r7, r3, #60	; 0x3c
   1cbb0:	ldr	r3, [r3, r1]
   1cbb4:	str	r2, [r7]
   1cbb8:	cmp	r3, #0
   1cbbc:	beq	1cbc8 <gen_dnhostop+0xb3c>
   1cbc0:	ldr	r1, [r3, #44]	; 0x2c
   1cbc4:	b	1cb9c <gen_dnhostop+0xb10>
   1cbc8:	ldr	r1, [r0, #44]	; 0x2c
   1cbcc:	clz	r1, r1
   1cbd0:	cmp	sl, #0
   1cbd4:	lsr	r1, r1, #5
   1cbd8:	str	r1, [r0, #44]	; 0x2c
   1cbdc:	str	sl, [sp, #24]
   1cbe0:	beq	1cc10 <gen_dnhostop+0xb84>
   1cbe4:	mov	r2, sl
   1cbe8:	ldr	r3, [r2, #44]	; 0x2c
   1cbec:	add	r1, r2, #84	; 0x54
   1cbf0:	cmp	r3, #0
   1cbf4:	mov	r3, #84	; 0x54
   1cbf8:	movweq	r3, #60	; 0x3c
   1cbfc:	addeq	r1, r2, #60	; 0x3c
   1cc00:	ldr	r2, [r2, r3]
   1cc04:	cmp	r2, #0
   1cc08:	bne	1cbe8 <gen_dnhostop+0xb5c>
   1cc0c:	b	1cc14 <gen_dnhostop+0xb88>
   1cc10:	add	r1, sp, #24
   1cc14:	str	r0, [r1]
   1cc18:	ldr	r0, [r0, #96]	; 0x60
   1cc1c:	str	r0, [sl, #96]	; 0x60
   1cc20:	ldrb	r0, [ip, #16]
   1cc24:	ldr	r1, [ip, #48]	; 0x30
   1cc28:	add	r5, r1, #2
   1cc2c:	cmp	r0, #0
   1cc30:	beq	1ccd8 <gen_dnhostop+0xc4c>
   1cc34:	str	r5, [sp, #12]
   1cc38:	ldr	r5, [ip, #100]	; 0x64
   1cc3c:	ldr	r3, [pc, #2868]	; 1d778 <gen_dnhostop+0x16ec>
   1cc40:	cmn	r5, #1
   1cc44:	add	r3, pc, r3
   1cc48:	bne	1cc68 <gen_dnhostop+0xbdc>
   1cc4c:	bl	1305c <alloc_reg>
   1cc50:	ldr	ip, [pc, #2852]	; 1d77c <gen_dnhostop+0x16f0>
   1cc54:	ldr	r3, [pc, #2852]	; 1d780 <gen_dnhostop+0x16f4>
   1cc58:	mov	r5, r0
   1cc5c:	add	ip, pc, ip
   1cc60:	add	r3, pc, r3
   1cc64:	str	r0, [ip, #100]	; 0x64
   1cc68:	ldr	r0, [ip, #92]	; 0x5c
   1cc6c:	mov	r4, r3
   1cc70:	ldr	r6, [r4, r0, lsl #3]!
   1cc74:	cmp	r6, #19
   1cc78:	bhi	1cd50 <gen_dnhostop+0xcc4>
   1cc7c:	add	r7, r0, #1
   1cc80:	cmp	r0, #15
   1cc84:	str	r7, [ip, #92]	; 0x5c
   1cc88:	bge	1d724 <gen_dnhostop+0x1698>
   1cc8c:	mov	r0, #1024	; 0x400
   1cc90:	lsl	r6, r0, r7
   1cc94:	mov	r0, r6
   1cc98:	bl	e34 <malloc@plt>
   1cc9c:	cmp	r0, #0
   1cca0:	str	r0, [r4, #12]
   1cca4:	beq	1d724 <gen_dnhostop+0x1698>
   1cca8:	mov	r1, #0
   1ccac:	mov	r2, r6
   1ccb0:	add	r4, r4, #8
   1ccb4:	bl	ea0 <memset@plt>
   1ccb8:	str	r6, [r4]
   1ccbc:	cmp	r6, #19
   1ccc0:	ldr	r3, [pc, #2748]	; 1d784 <gen_dnhostop+0x16f8>
   1ccc4:	ldr	ip, [pc, #2748]	; 1d788 <gen_dnhostop+0x16fc>
   1ccc8:	add	r3, pc, r3
   1cccc:	add	ip, pc, ip
   1ccd0:	bhi	1cd54 <gen_dnhostop+0xcc8>
   1ccd4:	b	1d724 <gen_dnhostop+0x1698>
   1ccd8:	ldr	r7, [ip, #92]	; 0x5c
   1ccdc:	ldr	r3, [pc, #2704]	; 1d774 <gen_dnhostop+0x16e8>
   1cce0:	add	r3, pc, r3
   1cce4:	mov	r4, r3
   1cce8:	ldr	r6, [r4, r7, lsl #3]!
   1ccec:	cmp	r6, #19
   1ccf0:	bhi	1cdf8 <gen_dnhostop+0xd6c>
   1ccf4:	add	r8, r7, #1
   1ccf8:	cmp	r7, #15
   1ccfc:	str	r8, [ip, #92]	; 0x5c
   1cd00:	bge	1d724 <gen_dnhostop+0x1698>
   1cd04:	mov	r0, #1024	; 0x400
   1cd08:	lsl	r6, r0, r8
   1cd0c:	mov	r0, r6
   1cd10:	bl	e34 <malloc@plt>
   1cd14:	cmp	r0, #0
   1cd18:	str	r0, [r4, #12]
   1cd1c:	beq	1d724 <gen_dnhostop+0x1698>
   1cd20:	mov	r1, #0
   1cd24:	mov	r2, r6
   1cd28:	add	r4, r4, #8
   1cd2c:	bl	ea0 <memset@plt>
   1cd30:	str	r6, [r4]
   1cd34:	cmp	r6, #19
   1cd38:	ldr	r3, [pc, #2644]	; 1d794 <gen_dnhostop+0x1708>
   1cd3c:	ldr	ip, [pc, #2644]	; 1d798 <gen_dnhostop+0x170c>
   1cd40:	add	r3, pc, r3
   1cd44:	add	ip, pc, ip
   1cd48:	bhi	1cdfc <gen_dnhostop+0xd70>
   1cd4c:	b	1d724 <gen_dnhostop+0x1698>
   1cd50:	mov	r7, r0
   1cd54:	sub	r0, r6, #20
   1cd58:	mov	r1, #97	; 0x61
   1cd5c:	str	r0, [r4]
   1cd60:	ldr	r4, [r4, #4]
   1cd64:	str	r1, [r4, r0]!
   1cd68:	cmp	r4, #0
   1cd6c:	str	r5, [r4, #12]
   1cd70:	beq	1cde4 <gen_dnhostop+0xd58>
   1cd74:	mov	r5, r9
   1cd78:	mov	r9, r3
   1cd7c:	ldr	r6, [r9, r7, lsl #3]!
   1cd80:	cmp	r6, #19
   1cd84:	bhi	1ce88 <gen_dnhostop+0xdfc>
   1cd88:	add	r8, r7, #1
   1cd8c:	cmp	r7, #15
   1cd90:	str	r8, [ip, #92]	; 0x5c
   1cd94:	bge	1d724 <gen_dnhostop+0x1698>
   1cd98:	mov	r0, #1024	; 0x400
   1cd9c:	lsl	r6, r0, r8
   1cda0:	mov	r0, r6
   1cda4:	bl	e34 <malloc@plt>
   1cda8:	cmp	r0, #0
   1cdac:	str	r0, [r9, #12]
   1cdb0:	beq	1d724 <gen_dnhostop+0x1698>
   1cdb4:	mov	r1, #0
   1cdb8:	mov	r2, r6
   1cdbc:	add	r9, r9, #8
   1cdc0:	bl	ea0 <memset@plt>
   1cdc4:	str	r6, [r9]
   1cdc8:	cmp	r6, #19
   1cdcc:	ldr	r3, [pc, #2488]	; 1d78c <gen_dnhostop+0x1700>
   1cdd0:	ldr	ip, [pc, #2488]	; 1d790 <gen_dnhostop+0x1704>
   1cdd4:	add	r3, pc, r3
   1cdd8:	add	ip, pc, ip
   1cddc:	bhi	1ce8c <gen_dnhostop+0xe00>
   1cde0:	b	1d724 <gen_dnhostop+0x1698>
   1cde4:	ldr	r5, [sp, #12]
   1cde8:	mov	r4, r3
   1cdec:	ldr	r6, [r4, r7, lsl #3]!
   1cdf0:	cmp	r6, #19
   1cdf4:	bls	1ccf4 <gen_dnhostop+0xc68>
   1cdf8:	mov	r8, r7
   1cdfc:	sub	r0, r6, #20
   1ce00:	mov	r1, #40	; 0x28
   1ce04:	str	r0, [r4]
   1ce08:	ldr	r4, [r4, #4]
   1ce0c:	str	r1, [r4, r0]!
   1ce10:	ldr	r0, [ip, #44]	; 0x2c
   1ce14:	add	r0, r0, r5
   1ce18:	str	r0, [r4, #12]
   1ce1c:	mov	r5, r3
   1ce20:	ldr	r6, [r5, r8, lsl #3]!
   1ce24:	cmp	r6, #19
   1ce28:	bhi	1ced4 <gen_dnhostop+0xe48>
   1ce2c:	add	r7, r8, #1
   1ce30:	cmp	r8, #15
   1ce34:	str	r7, [ip, #92]	; 0x5c
   1ce38:	bge	1d724 <gen_dnhostop+0x1698>
   1ce3c:	mov	r0, #1024	; 0x400
   1ce40:	lsl	r6, r0, r7
   1ce44:	mov	r0, r6
   1ce48:	bl	e34 <malloc@plt>
   1ce4c:	cmp	r0, #0
   1ce50:	str	r0, [r5, #12]
   1ce54:	beq	1d724 <gen_dnhostop+0x1698>
   1ce58:	mov	r1, #0
   1ce5c:	mov	r2, r6
   1ce60:	add	r5, r5, #8
   1ce64:	bl	ea0 <memset@plt>
   1ce68:	str	r6, [r5]
   1ce6c:	cmp	r6, #19
   1ce70:	ldr	r3, [pc, #2340]	; 1d79c <gen_dnhostop+0x1710>
   1ce74:	ldr	ip, [pc, #2340]	; 1d7a0 <gen_dnhostop+0x1714>
   1ce78:	add	r3, pc, r3
   1ce7c:	add	ip, pc, ip
   1ce80:	bhi	1ced8 <gen_dnhostop+0xe4c>
   1ce84:	b	1d724 <gen_dnhostop+0x1698>
   1ce88:	mov	r8, r7
   1ce8c:	sub	r1, r6, #20
   1ce90:	mov	r2, #72	; 0x48
   1ce94:	str	r1, [r9]
   1ce98:	ldr	r0, [r9, #4]
   1ce9c:	str	r2, [r0, r1]!
   1cea0:	mov	r2, r4
   1cea4:	ldr	r1, [sp, #12]
   1cea8:	str	r1, [r0, #12]
   1ceac:	mov	r1, r2
   1ceb0:	ldr	r2, [r2, #16]
   1ceb4:	cmp	r2, #0
   1ceb8:	bne	1ceac <gen_dnhostop+0xe20>
   1cebc:	str	r0, [r1, #16]
   1cec0:	mov	r9, r5
   1cec4:	mov	r5, r3
   1cec8:	ldr	r6, [r5, r8, lsl #3]!
   1cecc:	cmp	r6, #19
   1ced0:	bls	1ce2c <gen_dnhostop+0xda0>
   1ced4:	mov	r7, r8
   1ced8:	sub	r1, r6, #20
   1cedc:	mov	r2, #84	; 0x54
   1cee0:	str	r1, [r5]
   1cee4:	ldr	r0, [r5, #4]
   1cee8:	str	r2, [r0, r1]!
   1ceec:	movw	r1, #65287	; 0xff07
   1cef0:	mov	r2, r4
   1cef4:	str	r1, [r0, #12]
   1cef8:	mov	r1, r2
   1cefc:	ldr	r2, [r2, #16]
   1cf00:	cmp	r2, #0
   1cf04:	bne	1cef8 <gen_dnhostop+0xe6c>
   1cf08:	str	r0, [r1, #16]
   1cf0c:	mov	r5, r3
   1cf10:	ldr	r6, [r5, r7, lsl #3]!
   1cf14:	cmp	r6, #207	; 0xcf
   1cf18:	bhi	1cf64 <gen_dnhostop+0xed8>
   1cf1c:	add	r0, r7, #1
   1cf20:	cmp	r7, #15
   1cf24:	str	r0, [ip, #92]	; 0x5c
   1cf28:	bge	1d724 <gen_dnhostop+0x1698>
   1cf2c:	mov	r1, #1024	; 0x400
   1cf30:	lsl	r6, r1, r0
   1cf34:	mov	r0, r6
   1cf38:	bl	e34 <malloc@plt>
   1cf3c:	cmp	r0, #0
   1cf40:	str	r0, [r5, #12]
   1cf44:	beq	1d724 <gen_dnhostop+0x1698>
   1cf48:	mov	r1, #0
   1cf4c:	mov	r2, r6
   1cf50:	add	r5, r5, #8
   1cf54:	bl	ea0 <memset@plt>
   1cf58:	cmp	r6, #207	; 0xcf
   1cf5c:	str	r6, [r5]
   1cf60:	bls	1d724 <gen_dnhostop+0x1698>
   1cf64:	sub	r0, r6, #208	; 0xd0
   1cf68:	ldr	r3, [sp, #20]
   1cf6c:	mov	r2, #8
   1cf70:	str	r0, [r5]
   1cf74:	ldr	r1, [r5, #4]
   1cf78:	add	r6, r1, r0
   1cf7c:	movw	r1, #33026	; 0x8102
   1cf80:	mov	r0, #21
   1cf84:	str	r1, [r6, #20]
   1cf88:	str	r4, [r6, #4]
   1cf8c:	str	r0, [r6, #8]
   1cf90:	ldr	r0, [sp, #16]
   1cf94:	str	r6, [r6, #96]	; 0x60
   1cf98:	add	r1, r0, #3
   1cf9c:	mov	r0, #3
   1cfa0:	bl	a0a4 <gen_cmp>
   1cfa4:	cmp	r6, #0
   1cfa8:	beq	1cfdc <gen_dnhostop+0xf50>
   1cfac:	ldr	r1, [r0, #96]	; 0x60
   1cfb0:	mov	r2, r6
   1cfb4:	ldr	r3, [r2, #44]	; 0x2c
   1cfb8:	add	r7, r2, #84	; 0x54
   1cfbc:	cmp	r3, #0
   1cfc0:	mov	r3, #84	; 0x54
   1cfc4:	movweq	r3, #60	; 0x3c
   1cfc8:	addeq	r7, r2, #60	; 0x3c
   1cfcc:	ldr	r2, [r2, r3]
   1cfd0:	str	r1, [r7]
   1cfd4:	cmp	r2, #0
   1cfd8:	bne	1cfb4 <gen_dnhostop+0xf28>
   1cfdc:	ldr	r1, [r6, #44]	; 0x2c
   1cfe0:	cmp	r0, #0
   1cfe4:	clz	r1, r1
   1cfe8:	lsr	r1, r1, #5
   1cfec:	str	r1, [r6, #44]	; 0x2c
   1cff0:	ldr	r2, [r0, #44]	; 0x2c
   1cff4:	clz	r1, r2
   1cff8:	lsr	r1, r1, #5
   1cffc:	str	r1, [r0, #44]	; 0x2c
   1d000:	str	r0, [sp, #24]
   1d004:	beq	1d058 <gen_dnhostop+0xfcc>
   1d008:	cmp	r2, #0
   1d00c:	mov	r2, #60	; 0x3c
   1d010:	add	r1, r0, #60	; 0x3c
   1d014:	movweq	r2, #84	; 0x54
   1d018:	addeq	r1, r0, #84	; 0x54
   1d01c:	ldr	r2, [r0, r2]
   1d020:	ldr	ip, [pc, #1920]	; 1d7a8 <gen_dnhostop+0x171c>
   1d024:	cmp	r2, #0
   1d028:	add	ip, pc, ip
   1d02c:	beq	1d064 <gen_dnhostop+0xfd8>
   1d030:	ldr	r3, [r2, #44]	; 0x2c
   1d034:	add	r1, r2, #84	; 0x54
   1d038:	cmp	r3, #0
   1d03c:	mov	r3, #84	; 0x54
   1d040:	movweq	r3, #60	; 0x3c
   1d044:	addeq	r1, r2, #60	; 0x3c
   1d048:	ldr	r2, [r2, r3]
   1d04c:	cmp	r2, #0
   1d050:	bne	1d030 <gen_dnhostop+0xfa4>
   1d054:	b	1d064 <gen_dnhostop+0xfd8>
   1d058:	ldr	ip, [pc, #1860]	; 1d7a4 <gen_dnhostop+0x1718>
   1d05c:	add	r1, sp, #24
   1d060:	add	ip, pc, ip
   1d064:	str	r6, [r1]
   1d068:	ldr	r1, [r0, #44]	; 0x2c
   1d06c:	clz	r2, r1
   1d070:	cmp	r1, #0
   1d074:	lsr	r2, r2, #5
   1d078:	movwne	r1, #1
   1d07c:	cmp	r0, #0
   1d080:	str	r2, [r0, #44]	; 0x2c
   1d084:	ldr	r2, [r6, #96]	; 0x60
   1d088:	str	r1, [r0, #44]	; 0x2c
   1d08c:	str	r2, [r0, #96]	; 0x60
   1d090:	beq	1d0cc <gen_dnhostop+0x1040>
   1d094:	ldr	r2, [sl, #96]	; 0x60
   1d098:	mov	r3, r0
   1d09c:	cmp	r1, #0
   1d0a0:	mov	r1, #84	; 0x54
   1d0a4:	add	r7, r3, #84	; 0x54
   1d0a8:	movweq	r1, #60	; 0x3c
   1d0ac:	addeq	r7, r3, #60	; 0x3c
   1d0b0:	ldr	r3, [r3, r1]
   1d0b4:	str	r2, [r7]
   1d0b8:	cmp	r3, #0
   1d0bc:	beq	1d0c8 <gen_dnhostop+0x103c>
   1d0c0:	ldr	r1, [r3, #44]	; 0x2c
   1d0c4:	b	1d09c <gen_dnhostop+0x1010>
   1d0c8:	ldr	r1, [r0, #44]	; 0x2c
   1d0cc:	clz	r1, r1
   1d0d0:	cmp	sl, #0
   1d0d4:	lsr	r1, r1, #5
   1d0d8:	str	r1, [r0, #44]	; 0x2c
   1d0dc:	str	sl, [sp, #24]
   1d0e0:	beq	1d110 <gen_dnhostop+0x1084>
   1d0e4:	mov	r2, sl
   1d0e8:	ldr	r3, [r2, #44]	; 0x2c
   1d0ec:	add	r1, r2, #84	; 0x54
   1d0f0:	cmp	r3, #0
   1d0f4:	mov	r3, #84	; 0x54
   1d0f8:	movweq	r3, #60	; 0x3c
   1d0fc:	addeq	r1, r2, #60	; 0x3c
   1d100:	ldr	r2, [r2, r3]
   1d104:	cmp	r2, #0
   1d108:	bne	1d0e8 <gen_dnhostop+0x105c>
   1d10c:	b	1d114 <gen_dnhostop+0x1088>
   1d110:	add	r1, sp, #24
   1d114:	str	r0, [r1]
   1d118:	ldr	r0, [r0, #96]	; 0x60
   1d11c:	str	r0, [sl, #96]	; 0x60
   1d120:	ldrb	r0, [ip, #16]
   1d124:	ldr	r1, [ip, #48]	; 0x30
   1d128:	add	r7, r1, #2
   1d12c:	cmp	r0, #0
   1d130:	beq	1d1e8 <gen_dnhostop+0x115c>
   1d134:	mov	r8, r7
   1d138:	ldr	r7, [ip, #100]	; 0x64
   1d13c:	ldr	r3, [pc, #1644]	; 1d7b0 <gen_dnhostop+0x1724>
   1d140:	cmn	r7, #1
   1d144:	add	r3, pc, r3
   1d148:	bne	1d168 <gen_dnhostop+0x10dc>
   1d14c:	bl	1305c <alloc_reg>
   1d150:	ldr	ip, [pc, #1628]	; 1d7b4 <gen_dnhostop+0x1728>
   1d154:	ldr	r3, [pc, #1628]	; 1d7b8 <gen_dnhostop+0x172c>
   1d158:	mov	r7, r0
   1d15c:	add	ip, pc, ip
   1d160:	add	r3, pc, r3
   1d164:	str	r0, [ip, #100]	; 0x64
   1d168:	ldr	r0, [ip, #92]	; 0x5c
   1d16c:	mov	r4, r3
   1d170:	ldr	r6, [r4, r0, lsl #3]!
   1d174:	cmp	r6, #19
   1d178:	bhi	1d268 <gen_dnhostop+0x11dc>
   1d17c:	add	r5, r0, #1
   1d180:	cmp	r0, #15
   1d184:	str	r5, [ip, #92]	; 0x5c
   1d188:	bge	1d724 <gen_dnhostop+0x1698>
   1d18c:	mov	r0, #1024	; 0x400
   1d190:	lsl	r6, r0, r5
   1d194:	mov	r0, r6
   1d198:	bl	e34 <malloc@plt>
   1d19c:	cmp	r0, #0
   1d1a0:	str	r0, [r4, #12]
   1d1a4:	beq	1d724 <gen_dnhostop+0x1698>
   1d1a8:	mov	r1, #0
   1d1ac:	mov	r2, r6
   1d1b0:	add	r4, r4, #8
   1d1b4:	bl	ea0 <memset@plt>
   1d1b8:	str	r6, [r4]
   1d1bc:	cmp	r6, #19
   1d1c0:	ldr	r3, [pc, #1524]	; 1d7bc <gen_dnhostop+0x1730>
   1d1c4:	ldr	ip, [pc, #1524]	; 1d7c0 <gen_dnhostop+0x1734>
   1d1c8:	add	r3, pc, r3
   1d1cc:	add	ip, pc, ip
   1d1d0:	bhi	1d26c <gen_dnhostop+0x11e0>
   1d1d4:	b	1d724 <gen_dnhostop+0x1698>
   1d1d8:	.word	0x0002a2f4
   1d1dc:	.word	0x0002a20c
   1d1e0:	.word	0x0002a2a0
   1d1e4:	.word	0x0002a1dc
   1d1e8:	ldr	r5, [ip, #92]	; 0x5c
   1d1ec:	ldr	r3, [pc, #1464]	; 1d7ac <gen_dnhostop+0x1720>
   1d1f0:	add	r3, pc, r3
   1d1f4:	mov	r4, r3
   1d1f8:	ldr	r6, [r4, r5, lsl #3]!
   1d1fc:	cmp	r6, #19
   1d200:	bhi	1d314 <gen_dnhostop+0x1288>
   1d204:	add	r8, r5, #1
   1d208:	cmp	r5, #15
   1d20c:	str	r8, [ip, #92]	; 0x5c
   1d210:	bge	1d724 <gen_dnhostop+0x1698>
   1d214:	mov	r0, #1024	; 0x400
   1d218:	lsl	r6, r0, r8
   1d21c:	mov	r0, r6
   1d220:	bl	e34 <malloc@plt>
   1d224:	cmp	r0, #0
   1d228:	str	r0, [r4, #12]
   1d22c:	beq	1d724 <gen_dnhostop+0x1698>
   1d230:	mov	r1, #0
   1d234:	mov	r2, r6
   1d238:	add	r4, r4, #8
   1d23c:	bl	ea0 <memset@plt>
   1d240:	str	r6, [r4]
   1d244:	cmp	r6, #19
   1d248:	ldr	r3, [pc, #1404]	; 1d7cc <gen_dnhostop+0x1740>
   1d24c:	ldr	ip, [pc, #1404]	; 1d7d0 <gen_dnhostop+0x1744>
   1d250:	add	r3, pc, r3
   1d254:	add	ip, pc, ip
   1d258:	bhi	1d318 <gen_dnhostop+0x128c>
   1d25c:	b	1d724 <gen_dnhostop+0x1698>
   1d260:	.word	0x0002a16c
   1d264:	.word	0x0002a228
   1d268:	mov	r5, r0
   1d26c:	sub	r0, r6, #20
   1d270:	mov	r1, #97	; 0x61
   1d274:	str	r0, [r4]
   1d278:	ldr	r4, [r4, #4]
   1d27c:	str	r1, [r4, r0]!
   1d280:	cmp	r4, #0
   1d284:	str	r7, [r4, #12]
   1d288:	beq	1d2fc <gen_dnhostop+0x1270>
   1d28c:	mov	r6, r3
   1d290:	mov	r7, r8
   1d294:	ldr	r9, [r6, r5, lsl #3]!
   1d298:	cmp	r9, #19
   1d29c:	bhi	1d3bc <gen_dnhostop+0x1330>
   1d2a0:	add	r8, r5, #1
   1d2a4:	cmp	r5, #15
   1d2a8:	str	r8, [ip, #92]	; 0x5c
   1d2ac:	bge	1d724 <gen_dnhostop+0x1698>
   1d2b0:	mov	r0, #1024	; 0x400
   1d2b4:	lsl	r9, r0, r8
   1d2b8:	mov	r0, r9
   1d2bc:	bl	e34 <malloc@plt>
   1d2c0:	cmp	r0, #0
   1d2c4:	str	r0, [r6, #12]
   1d2c8:	beq	1d724 <gen_dnhostop+0x1698>
   1d2cc:	mov	r1, #0
   1d2d0:	mov	r2, r9
   1d2d4:	add	r6, r6, #8
   1d2d8:	bl	ea0 <memset@plt>
   1d2dc:	str	r9, [r6]
   1d2e0:	cmp	r9, #19
   1d2e4:	ldr	r3, [pc, #1240]	; 1d7c4 <gen_dnhostop+0x1738>
   1d2e8:	ldr	ip, [pc, #1240]	; 1d7c8 <gen_dnhostop+0x173c>
   1d2ec:	add	r3, pc, r3
   1d2f0:	add	ip, pc, ip
   1d2f4:	bhi	1d3c0 <gen_dnhostop+0x1334>
   1d2f8:	b	1d724 <gen_dnhostop+0x1698>
   1d2fc:	ldr	r9, [sp, #8]
   1d300:	mov	r7, r8
   1d304:	mov	r4, r3
   1d308:	ldr	r6, [r4, r5, lsl #3]!
   1d30c:	cmp	r6, #19
   1d310:	bls	1d204 <gen_dnhostop+0x1178>
   1d314:	mov	r8, r5
   1d318:	sub	r0, r6, #20
   1d31c:	mov	r1, #48	; 0x30
   1d320:	str	r0, [r4]
   1d324:	ldr	r4, [r4, #4]
   1d328:	str	r1, [r4, r0]!
   1d32c:	ldr	r0, [ip, #44]	; 0x2c
   1d330:	add	r0, r0, r7
   1d334:	str	r0, [r4, #12]
   1d338:	mov	r7, r3
   1d33c:	ldr	r6, [r7, r8, lsl #3]!
   1d340:	cmp	r6, #19
   1d344:	bhi	1d404 <gen_dnhostop+0x1378>
   1d348:	add	r5, r8, #1
   1d34c:	cmp	r8, #15
   1d350:	str	r5, [ip, #92]	; 0x5c
   1d354:	bge	1d724 <gen_dnhostop+0x1698>
   1d358:	mov	r0, #1024	; 0x400
   1d35c:	lsl	r6, r0, r5
   1d360:	mov	r0, r6
   1d364:	bl	e34 <malloc@plt>
   1d368:	cmp	r0, #0
   1d36c:	str	r0, [r7, #12]
   1d370:	beq	1d724 <gen_dnhostop+0x1698>
   1d374:	mov	r1, #0
   1d378:	mov	r2, r6
   1d37c:	add	r7, r7, #8
   1d380:	bl	ea0 <memset@plt>
   1d384:	str	r6, [r7]
   1d388:	cmp	r6, #19
   1d38c:	ldr	r3, [pc, #1088]	; 1d7d4 <gen_dnhostop+0x1748>
   1d390:	ldr	ip, [pc, #1088]	; 1d7d8 <gen_dnhostop+0x174c>
   1d394:	add	r3, pc, r3
   1d398:	add	ip, pc, ip
   1d39c:	bhi	1d408 <gen_dnhostop+0x137c>
   1d3a0:	b	1d724 <gen_dnhostop+0x1698>
   1d3a4:	.word	0x00029ff4
   1d3a8:	.word	0x0002a0b0
   1d3ac:	.word	0x00029f80
   1d3b0:	.word	0x0002a03c
   1d3b4:	.word	0x00029ef0
   1d3b8:	.word	0x00029fac
   1d3bc:	mov	r8, r5
   1d3c0:	sub	r1, r9, #20
   1d3c4:	mov	r2, #80	; 0x50
   1d3c8:	str	r1, [r6]
   1d3cc:	ldr	r0, [r6, #4]
   1d3d0:	str	r2, [r0, r1]!
   1d3d4:	mov	r2, r4
   1d3d8:	str	r7, [r0, #12]
   1d3dc:	mov	r1, r2
   1d3e0:	ldr	r2, [r2, #16]
   1d3e4:	cmp	r2, #0
   1d3e8:	bne	1d3dc <gen_dnhostop+0x1350>
   1d3ec:	ldr	r9, [sp, #8]
   1d3f0:	str	r0, [r1, #16]
   1d3f4:	mov	r7, r3
   1d3f8:	ldr	r6, [r7, r8, lsl #3]!
   1d3fc:	cmp	r6, #19
   1d400:	bls	1d348 <gen_dnhostop+0x12bc>
   1d404:	mov	r5, r8
   1d408:	sub	r1, r6, #20
   1d40c:	mov	r2, #84	; 0x54
   1d410:	str	r1, [r7]
   1d414:	ldr	r0, [r7, #4]
   1d418:	str	r2, [r0, r1]!
   1d41c:	mov	r1, #7
   1d420:	mov	r2, r4
   1d424:	str	r1, [r0, #12]
   1d428:	mov	r1, r2
   1d42c:	ldr	r2, [r2, #16]
   1d430:	cmp	r2, #0
   1d434:	bne	1d428 <gen_dnhostop+0x139c>
   1d438:	str	r0, [r1, #16]
   1d43c:	ldr	r6, [r3, r5, lsl #3]!
   1d440:	cmp	r6, #207	; 0xcf
   1d444:	bhi	1d498 <gen_dnhostop+0x140c>
   1d448:	add	r0, r5, #1
   1d44c:	cmp	r5, #15
   1d450:	str	r0, [ip, #92]	; 0x5c
   1d454:	bge	1d724 <gen_dnhostop+0x1698>
   1d458:	mov	r1, #1024	; 0x400
   1d45c:	mov	r7, r3
   1d460:	lsl	r6, r1, r0
   1d464:	mov	r0, r6
   1d468:	bl	e34 <malloc@plt>
   1d46c:	cmp	r0, #0
   1d470:	str	r0, [r7, #12]
   1d474:	beq	1d724 <gen_dnhostop+0x1698>
   1d478:	mov	r1, #0
   1d47c:	mov	r2, r6
   1d480:	add	r7, r7, #8
   1d484:	bl	ea0 <memset@plt>
   1d488:	mov	r3, r7
   1d48c:	cmp	r6, #207	; 0xcf
   1d490:	str	r6, [r7]
   1d494:	bls	1d724 <gen_dnhostop+0x1698>
   1d498:	sub	r0, r6, #208	; 0xd0
   1d49c:	mov	r2, #8
   1d4a0:	str	r0, [r3]
   1d4a4:	ldr	r1, [r3, #4]
   1d4a8:	ldr	r3, [sp, #20]
   1d4ac:	add	r6, r1, r0
   1d4b0:	mov	r1, #2
   1d4b4:	mov	r0, #21
   1d4b8:	str	r1, [r6, #20]
   1d4bc:	str	r4, [r6, #4]
   1d4c0:	str	r0, [r6, #8]
   1d4c4:	ldr	r0, [sp, #16]
   1d4c8:	str	r6, [r6, #96]	; 0x60
   1d4cc:	add	r1, r0, #2
   1d4d0:	mov	r0, #3
   1d4d4:	bl	a0a4 <gen_cmp>
   1d4d8:	cmp	r6, #0
   1d4dc:	beq	1d510 <gen_dnhostop+0x1484>
   1d4e0:	ldr	r1, [r0, #96]	; 0x60
   1d4e4:	mov	r2, r6
   1d4e8:	ldr	r3, [r2, #44]	; 0x2c
   1d4ec:	add	r7, r2, #84	; 0x54
   1d4f0:	cmp	r3, #0
   1d4f4:	mov	r3, #84	; 0x54
   1d4f8:	movweq	r3, #60	; 0x3c
   1d4fc:	addeq	r7, r2, #60	; 0x3c
   1d500:	ldr	r2, [r2, r3]
   1d504:	str	r1, [r7]
   1d508:	cmp	r2, #0
   1d50c:	bne	1d4e8 <gen_dnhostop+0x145c>
   1d510:	ldr	r1, [r6, #44]	; 0x2c
   1d514:	cmp	r0, #0
   1d518:	clz	r1, r1
   1d51c:	lsr	r1, r1, #5
   1d520:	str	r1, [r6, #44]	; 0x2c
   1d524:	ldr	r2, [r0, #44]	; 0x2c
   1d528:	clz	r1, r2
   1d52c:	lsr	r1, r1, #5
   1d530:	str	r1, [r0, #44]	; 0x2c
   1d534:	str	r0, [sp, #24]
   1d538:	beq	1d584 <gen_dnhostop+0x14f8>
   1d53c:	cmp	r2, #0
   1d540:	mov	r2, #60	; 0x3c
   1d544:	add	r1, r0, #60	; 0x3c
   1d548:	movweq	r2, #84	; 0x54
   1d54c:	addeq	r1, r0, #84	; 0x54
   1d550:	ldr	r2, [r0, r2]
   1d554:	cmp	r2, #0
   1d558:	beq	1d588 <gen_dnhostop+0x14fc>
   1d55c:	ldr	r3, [r2, #44]	; 0x2c
   1d560:	add	r1, r2, #84	; 0x54
   1d564:	cmp	r3, #0
   1d568:	mov	r3, #84	; 0x54
   1d56c:	movweq	r3, #60	; 0x3c
   1d570:	addeq	r1, r2, #60	; 0x3c
   1d574:	ldr	r2, [r2, r3]
   1d578:	cmp	r2, #0
   1d57c:	bne	1d55c <gen_dnhostop+0x14d0>
   1d580:	b	1d588 <gen_dnhostop+0x14fc>
   1d584:	add	r1, sp, #24
   1d588:	str	r6, [r1]
   1d58c:	ldr	r1, [r0, #44]	; 0x2c
   1d590:	clz	r2, r1
   1d594:	cmp	r1, #0
   1d598:	lsr	r2, r2, #5
   1d59c:	movwne	r1, #1
   1d5a0:	cmp	r0, #0
   1d5a4:	str	r2, [r0, #44]	; 0x2c
   1d5a8:	ldr	r2, [r6, #96]	; 0x60
   1d5ac:	str	r1, [r0, #44]	; 0x2c
   1d5b0:	str	r2, [r0, #96]	; 0x60
   1d5b4:	beq	1d5f0 <gen_dnhostop+0x1564>
   1d5b8:	ldr	r2, [sl, #96]	; 0x60
   1d5bc:	mov	r3, r0
   1d5c0:	cmp	r1, #0
   1d5c4:	mov	r1, #84	; 0x54
   1d5c8:	add	r7, r3, #84	; 0x54
   1d5cc:	movweq	r1, #60	; 0x3c
   1d5d0:	addeq	r7, r3, #60	; 0x3c
   1d5d4:	ldr	r3, [r3, r1]
   1d5d8:	str	r2, [r7]
   1d5dc:	cmp	r3, #0
   1d5e0:	beq	1d5ec <gen_dnhostop+0x1560>
   1d5e4:	ldr	r1, [r3, #44]	; 0x2c
   1d5e8:	b	1d5c0 <gen_dnhostop+0x1534>
   1d5ec:	ldr	r1, [r0, #44]	; 0x2c
   1d5f0:	clz	r1, r1
   1d5f4:	cmp	sl, #0
   1d5f8:	lsr	r1, r1, #5
   1d5fc:	str	r1, [r0, #44]	; 0x2c
   1d600:	str	sl, [sp, #24]
   1d604:	beq	1d63c <gen_dnhostop+0x15b0>
   1d608:	mov	r2, sl
   1d60c:	ldr	r3, [r2, #44]	; 0x2c
   1d610:	add	r1, r2, #84	; 0x54
   1d614:	cmp	r3, #0
   1d618:	mov	r3, #84	; 0x54
   1d61c:	movweq	r3, #60	; 0x3c
   1d620:	addeq	r1, r2, #60	; 0x3c
   1d624:	ldr	r2, [r2, r3]
   1d628:	cmp	r2, #0
   1d62c:	bne	1d60c <gen_dnhostop+0x1580>
   1d630:	b	1d640 <gen_dnhostop+0x15b4>
   1d634:	.word	0x00029e18
   1d638:	.word	0x00029d30
   1d63c:	add	r1, sp, #24
   1d640:	str	r0, [r1]
   1d644:	cmp	r9, #0
   1d648:	ldr	r0, [r0, #96]	; 0x60
   1d64c:	str	r0, [sl, #96]	; 0x60
   1d650:	beq	1d680 <gen_dnhostop+0x15f4>
   1d654:	mov	r1, r9
   1d658:	ldr	r2, [r1, #44]	; 0x2c
   1d65c:	add	r3, r1, #84	; 0x54
   1d660:	cmp	r2, #0
   1d664:	mov	r2, #84	; 0x54
   1d668:	movweq	r2, #60	; 0x3c
   1d66c:	addeq	r3, r1, #60	; 0x3c
   1d670:	ldr	r1, [r1, r2]
   1d674:	str	r0, [r3]
   1d678:	cmp	r1, #0
   1d67c:	bne	1d658 <gen_dnhostop+0x15cc>
   1d680:	ldr	r0, [r9, #44]	; 0x2c
   1d684:	cmp	sl, #0
   1d688:	clz	r0, r0
   1d68c:	lsr	r0, r0, #5
   1d690:	str	r0, [r9, #44]	; 0x2c
   1d694:	ldr	r1, [sl, #44]	; 0x2c
   1d698:	clz	r0, r1
   1d69c:	lsr	r0, r0, #5
   1d6a0:	str	r0, [sl, #44]	; 0x2c
   1d6a4:	str	sl, [sp, #24]
   1d6a8:	beq	1d6f4 <gen_dnhostop+0x1668>
   1d6ac:	cmp	r1, #0
   1d6b0:	mov	r1, #60	; 0x3c
   1d6b4:	add	r0, sl, #60	; 0x3c
   1d6b8:	movweq	r1, #84	; 0x54
   1d6bc:	addeq	r0, sl, #84	; 0x54
   1d6c0:	ldr	r1, [sl, r1]
   1d6c4:	cmp	r1, #0
   1d6c8:	beq	1d6f8 <gen_dnhostop+0x166c>
   1d6cc:	ldr	r2, [r1, #44]	; 0x2c
   1d6d0:	add	r0, r1, #84	; 0x54
   1d6d4:	cmp	r2, #0
   1d6d8:	mov	r2, #84	; 0x54
   1d6dc:	movweq	r2, #60	; 0x3c
   1d6e0:	addeq	r0, r1, #60	; 0x3c
   1d6e4:	ldr	r1, [r1, r2]
   1d6e8:	cmp	r1, #0
   1d6ec:	bne	1d6cc <gen_dnhostop+0x1640>
   1d6f0:	b	1d6f8 <gen_dnhostop+0x166c>
   1d6f4:	add	r0, sp, #24
   1d6f8:	str	r9, [r0]
   1d6fc:	ldr	r0, [sl, #44]	; 0x2c
   1d700:	clz	r0, r0
   1d704:	lsr	r0, r0, #5
   1d708:	str	r0, [sl, #44]	; 0x2c
   1d70c:	ldr	r0, [r9, #96]	; 0x60
   1d710:	str	r0, [sl, #96]	; 0x60
   1d714:	mov	r0, sl
   1d718:	sub	sp, fp, #28
   1d71c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d720:	.word	0x00029cf8
   1d724:	ldr	r0, [pc, #176]	; 1d7dc <gen_dnhostop+0x1750>
   1d728:	add	r0, pc, r0
   1d72c:	bl	214c <sf_bpf_error>
   1d730:	bl	f24 <abort@plt>
   1d734:	ldr	r0, [pc, #4]	; 1d740 <gen_dnhostop+0x16b4>
   1d738:	add	r0, pc, r0
   1d73c:	bl	214c <sf_bpf_error>
   1d740:	.word	0x0000cb33
   1d744:	.word	0x00029d68
   1d748:	.word	0x00029ca4
   1d74c:	.word	0x00029c3c
   1d750:	.word	0x00029cf8
   1d754:	.word	0x00029ba4
   1d758:	.word	0x00029c60
   1d75c:	.word	0x00029b38
   1d760:	.word	0x00029bf4
   1d764:	.word	0x00029aa4
   1d768:	.word	0x00029b60
   1d76c:	.word	0x00029980
   1d770:	.word	0x000299b8
   1d774:	.word	0x00029740
   1d778:	.word	0x000297dc
   1d77c:	.word	0x00029884
   1d780:	.word	0x000297c0
   1d784:	.word	0x00029758
   1d788:	.word	0x00029814
   1d78c:	.word	0x0002964c
   1d790:	.word	0x00029708
   1d794:	.word	0x000296e0
   1d798:	.word	0x0002979c
   1d79c:	.word	0x000295a8
   1d7a0:	.word	0x00029664
   1d7a4:	.word	0x00029480
   1d7a8:	.word	0x000294b8
   1d7ac:	.word	0x00029230
   1d7b0:	.word	0x000292dc
   1d7b4:	.word	0x00029384
   1d7b8:	.word	0x000292c0
   1d7bc:	.word	0x00029258
   1d7c0:	.word	0x00029314
   1d7c4:	.word	0x00029134
   1d7c8:	.word	0x000291f0
   1d7cc:	.word	0x000291d0
   1d7d0:	.word	0x0002928c
   1d7d4:	.word	0x0002908c
   1d7d8:	.word	0x00029148
   1d7dc:	.word	0x0000c33c

0001d7e0 <gen_hostop6>:
   1d7e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7e4:	add	fp, sp, #28
   1d7e8:	sub	sp, sp, #44	; 0x2c
   1d7ec:	cmp	r2, #4
   1d7f0:	bhi	1ec28 <gen_hostop6+0x1448>
   1d7f4:	mov	r5, r0
   1d7f8:	add	r0, pc, #20
   1d7fc:	mov	r7, r1
   1d800:	ldr	r8, [fp, #12]
   1d804:	ldr	r6, [fp, #8]
   1d808:	mov	r9, r3
   1d80c:	ldr	r1, [r0, r2, lsl #2]
   1d810:	add	pc, r0, r1
   1d814:	.word	0x00000014
   1d818:	.word	0x000001d8
   1d81c:	.word	0x000001d4
   1d820:	.word	0x00000014
   1d824:	.word	0x000000e8
   1d828:	mov	r0, r5
   1d82c:	mov	r1, r7
   1d830:	mov	r2, #1
   1d834:	mov	r3, r9
   1d838:	stm	sp, {r6, r8}
   1d83c:	bl	1d7e0 <gen_hostop6>
   1d840:	mov	r4, r0
   1d844:	mov	r0, r5
   1d848:	mov	r1, r7
   1d84c:	mov	r2, #2
   1d850:	mov	r3, r9
   1d854:	stm	sp, {r6, r8}
   1d858:	bl	1d7e0 <gen_hostop6>
   1d85c:	mov	r8, r0
   1d860:	ldr	r0, [r4, #44]	; 0x2c
   1d864:	cmp	r4, #0
   1d868:	mov	r5, r8
   1d86c:	clz	r0, r0
   1d870:	lsr	r1, r0, #5
   1d874:	str	r1, [r4, #44]	; 0x2c
   1d878:	ldr	r0, [r5, #96]!	; 0x60
   1d87c:	beq	1d8b4 <gen_hostop6+0xd4>
   1d880:	mov	r2, r4
   1d884:	cmp	r1, #0
   1d888:	mov	r1, #84	; 0x54
   1d88c:	add	r3, r2, #84	; 0x54
   1d890:	movweq	r1, #60	; 0x3c
   1d894:	addeq	r3, r2, #60	; 0x3c
   1d898:	ldr	r2, [r2, r1]
   1d89c:	str	r0, [r3]
   1d8a0:	cmp	r2, #0
   1d8a4:	beq	1d8b0 <gen_hostop6+0xd0>
   1d8a8:	ldr	r1, [r2, #44]	; 0x2c
   1d8ac:	b	1d884 <gen_hostop6+0xa4>
   1d8b0:	ldr	r1, [r4, #44]	; 0x2c
   1d8b4:	clz	r0, r1
   1d8b8:	cmp	r8, #0
   1d8bc:	lsr	r0, r0, #5
   1d8c0:	str	r0, [r4, #44]	; 0x2c
   1d8c4:	str	r8, [fp, #-32]	; 0xffffffe0
   1d8c8:	beq	1db3c <gen_hostop6+0x35c>
   1d8cc:	mov	r1, r8
   1d8d0:	ldr	r2, [r1, #44]	; 0x2c
   1d8d4:	add	r0, r1, #84	; 0x54
   1d8d8:	cmp	r2, #0
   1d8dc:	mov	r2, #84	; 0x54
   1d8e0:	movweq	r2, #60	; 0x3c
   1d8e4:	addeq	r0, r1, #60	; 0x3c
   1d8e8:	ldr	r1, [r1, r2]
   1d8ec:	cmp	r1, #0
   1d8f0:	bne	1d8d0 <gen_hostop6+0xf0>
   1d8f4:	str	r4, [r0]
   1d8f8:	b	1ec14 <gen_hostop6+0x1434>
   1d8fc:	mov	r0, r5
   1d900:	mov	r1, r7
   1d904:	mov	r2, #1
   1d908:	mov	r3, r9
   1d90c:	stm	sp, {r6, r8}
   1d910:	bl	1d7e0 <gen_hostop6>
   1d914:	mov	r4, r0
   1d918:	mov	r0, r5
   1d91c:	mov	r1, r7
   1d920:	mov	r2, #2
   1d924:	mov	r3, r9
   1d928:	stm	sp, {r6, r8}
   1d92c:	bl	1d7e0 <gen_hostop6>
   1d930:	mov	r5, r0
   1d934:	mov	r8, r0
   1d938:	cmp	r4, #0
   1d93c:	ldr	r0, [r5, #96]!	; 0x60
   1d940:	beq	1d970 <gen_hostop6+0x190>
   1d944:	mov	r1, r4
   1d948:	ldr	r2, [r1, #44]	; 0x2c
   1d94c:	add	r3, r1, #84	; 0x54
   1d950:	cmp	r2, #0
   1d954:	mov	r2, #84	; 0x54
   1d958:	movweq	r2, #60	; 0x3c
   1d95c:	addeq	r3, r1, #60	; 0x3c
   1d960:	ldr	r1, [r1, r2]
   1d964:	str	r0, [r3]
   1d968:	cmp	r1, #0
   1d96c:	bne	1d948 <gen_hostop6+0x168>
   1d970:	ldr	r0, [r4, #44]	; 0x2c
   1d974:	cmp	r8, #0
   1d978:	clz	r0, r0
   1d97c:	lsr	r0, r0, #5
   1d980:	str	r0, [r4, #44]	; 0x2c
   1d984:	ldr	r1, [r8, #44]	; 0x2c
   1d988:	clz	r0, r1
   1d98c:	lsr	r0, r0, #5
   1d990:	str	r0, [r8, #44]	; 0x2c
   1d994:	str	r8, [fp, #-32]	; 0xffffffe0
   1d998:	beq	1dbdc <gen_hostop6+0x3fc>
   1d99c:	cmp	r1, #0
   1d9a0:	mov	r1, #60	; 0x3c
   1d9a4:	add	r0, r8, #60	; 0x3c
   1d9a8:	movweq	r1, #84	; 0x54
   1d9ac:	addeq	r0, r8, #84	; 0x54
   1d9b0:	ldr	r1, [r8, r1]
   1d9b4:	cmp	r1, #0
   1d9b8:	beq	1d9e0 <gen_hostop6+0x200>
   1d9bc:	ldr	r2, [r1, #44]	; 0x2c
   1d9c0:	add	r0, r1, #84	; 0x54
   1d9c4:	cmp	r2, #0
   1d9c8:	mov	r2, #84	; 0x54
   1d9cc:	movweq	r2, #60	; 0x3c
   1d9d0:	addeq	r0, r1, #60	; 0x3c
   1d9d4:	ldr	r1, [r1, r2]
   1d9d8:	cmp	r1, #0
   1d9dc:	bne	1d9bc <gen_hostop6+0x1dc>
   1d9e0:	str	r4, [r0]
   1d9e4:	b	1ec04 <gen_hostop6+0x1424>
   1d9e8:	mov	r6, r8
   1d9ec:	ldr	ip, [pc, #4084]	; 1e9e8 <gen_hostop6+0x1208>
   1d9f0:	str	r6, [sp, #28]
   1d9f4:	str	r7, [sp, #36]	; 0x24
   1d9f8:	str	r5, [sp, #32]
   1d9fc:	add	ip, pc, ip
   1da00:	ldr	r0, [ip, #48]	; 0x30
   1da04:	add	r0, r6, r0
   1da08:	ldr	r6, [r7, #12]
   1da0c:	add	r3, r0, #12
   1da10:	ldr	r0, [r5, #12]
   1da14:	str	r0, [sp, #24]
   1da18:	ldrb	r0, [ip, #16]
   1da1c:	ldr	sl, [pc, #4040]	; 1e9ec <gen_hostop6+0x120c>
   1da20:	str	r9, [sp, #16]
   1da24:	cmp	r0, #0
   1da28:	add	sl, pc, sl
   1da2c:	beq	1dacc <gen_hostop6+0x2ec>
   1da30:	ldr	r4, [ip, #100]	; 0x64
   1da34:	str	r6, [sp, #20]
   1da38:	cmn	r4, #1
   1da3c:	bne	1da5c <gen_hostop6+0x27c>
   1da40:	mov	r4, r3
   1da44:	bl	1305c <alloc_reg>
   1da48:	ldr	ip, [pc, #4000]	; 1e9f0 <gen_hostop6+0x1210>
   1da4c:	mov	r3, r4
   1da50:	mov	r4, r0
   1da54:	add	ip, pc, ip
   1da58:	str	r0, [ip, #100]	; 0x64
   1da5c:	ldr	r0, [ip, #92]	; 0x5c
   1da60:	mov	r6, sl
   1da64:	ldr	r5, [r6, r0, lsl #3]!
   1da68:	cmp	r5, #19
   1da6c:	bhi	1db48 <gen_hostop6+0x368>
   1da70:	add	r7, r0, #1
   1da74:	cmp	r0, #15
   1da78:	str	r7, [ip, #92]	; 0x5c
   1da7c:	bge	1e9dc <gen_hostop6+0x11fc>
   1da80:	mov	r0, #1024	; 0x400
   1da84:	mov	r8, r3
   1da88:	lsl	r5, r0, r7
   1da8c:	mov	r0, r5
   1da90:	bl	e34 <malloc@plt>
   1da94:	cmp	r0, #0
   1da98:	str	r0, [r6, #12]
   1da9c:	beq	1e9dc <gen_hostop6+0x11fc>
   1daa0:	mov	r1, #0
   1daa4:	mov	r2, r5
   1daa8:	add	r6, r6, #8
   1daac:	bl	ea0 <memset@plt>
   1dab0:	str	r5, [r6]
   1dab4:	cmp	r5, #19
   1dab8:	mov	r3, r8
   1dabc:	ldr	ip, [pc, #3888]	; 1e9f4 <gen_hostop6+0x1214>
   1dac0:	add	ip, pc, ip
   1dac4:	bhi	1db4c <gen_hostop6+0x36c>
   1dac8:	b	1e9dc <gen_hostop6+0x11fc>
   1dacc:	ldr	r7, [ip, #92]	; 0x5c
   1dad0:	mov	r5, sl
   1dad4:	ldr	r4, [r5, r7, lsl #3]!
   1dad8:	cmp	r4, #19
   1dadc:	bhi	1dbfc <gen_hostop6+0x41c>
   1dae0:	add	sl, r7, #1
   1dae4:	cmp	r7, #15
   1dae8:	str	sl, [ip, #92]	; 0x5c
   1daec:	bge	1e9dc <gen_hostop6+0x11fc>
   1daf0:	mov	r0, #1024	; 0x400
   1daf4:	mov	r8, r3
   1daf8:	lsl	r4, r0, sl
   1dafc:	mov	r0, r4
   1db00:	bl	e34 <malloc@plt>
   1db04:	cmp	r0, #0
   1db08:	str	r0, [r5, #12]
   1db0c:	beq	1e9dc <gen_hostop6+0x11fc>
   1db10:	mov	r1, #0
   1db14:	mov	r2, r4
   1db18:	add	r5, r5, #8
   1db1c:	bl	ea0 <memset@plt>
   1db20:	str	r4, [r5]
   1db24:	cmp	r4, #19
   1db28:	mov	r3, r8
   1db2c:	ldr	ip, [pc, #4076]	; 1eb20 <gen_hostop6+0x1340>
   1db30:	add	ip, pc, ip
   1db34:	bhi	1dc00 <gen_hostop6+0x420>
   1db38:	b	1e9dc <gen_hostop6+0x11fc>
   1db3c:	sub	r0, fp, #32
   1db40:	str	r4, [r0]
   1db44:	b	1ec14 <gen_hostop6+0x1434>
   1db48:	mov	r7, r0
   1db4c:	sub	r0, r5, #20
   1db50:	mov	r1, #97	; 0x61
   1db54:	str	r0, [r6]
   1db58:	ldr	r9, [r6, #4]
   1db5c:	str	r1, [r9, r0]!
   1db60:	cmp	r9, #0
   1db64:	str	r4, [r9, #12]
   1db68:	beq	1dbe8 <gen_hostop6+0x408>
   1db6c:	mov	r5, sl
   1db70:	ldr	r6, [sp, #20]
   1db74:	ldr	r4, [r5, r7, lsl #3]!
   1db78:	cmp	r4, #19
   1db7c:	bhi	1dd3c <gen_hostop6+0x55c>
   1db80:	add	sl, r7, #1
   1db84:	cmp	r7, #15
   1db88:	str	sl, [ip, #92]	; 0x5c
   1db8c:	bge	1e9dc <gen_hostop6+0x11fc>
   1db90:	mov	r0, #1024	; 0x400
   1db94:	mov	r8, r3
   1db98:	lsl	r4, r0, sl
   1db9c:	mov	r0, r4
   1dba0:	bl	e34 <malloc@plt>
   1dba4:	cmp	r0, #0
   1dba8:	str	r0, [r5, #12]
   1dbac:	beq	1e9dc <gen_hostop6+0x11fc>
   1dbb0:	mov	r1, #0
   1dbb4:	mov	r2, r4
   1dbb8:	add	r5, r5, #8
   1dbbc:	bl	ea0 <memset@plt>
   1dbc0:	str	r4, [r5]
   1dbc4:	cmp	r4, #19
   1dbc8:	mov	r3, r8
   1dbcc:	ldr	ip, [pc, #3920]	; 1eb24 <gen_hostop6+0x1344>
   1dbd0:	add	ip, pc, ip
   1dbd4:	bhi	1dd40 <gen_hostop6+0x560>
   1dbd8:	b	1e9dc <gen_hostop6+0x11fc>
   1dbdc:	sub	r0, fp, #32
   1dbe0:	str	r4, [r0]
   1dbe4:	b	1ec04 <gen_hostop6+0x1424>
   1dbe8:	ldr	r6, [sp, #20]
   1dbec:	mov	r5, sl
   1dbf0:	ldr	r4, [r5, r7, lsl #3]!
   1dbf4:	cmp	r4, #19
   1dbf8:	bls	1dae0 <gen_hostop6+0x300>
   1dbfc:	mov	sl, r7
   1dc00:	sub	r0, r4, #20
   1dc04:	mov	r1, #32
   1dc08:	str	r0, [r5]
   1dc0c:	ldr	r9, [r5, #4]
   1dc10:	str	r1, [r9, r0]!
   1dc14:	ldr	r0, [ip, #44]	; 0x2c
   1dc18:	add	r0, r0, r3
   1dc1c:	str	r0, [r9, #12]
   1dc20:	cmn	r6, #1
   1dc24:	beq	1dd78 <gen_hostop6+0x598>
   1dc28:	ldr	r7, [pc, #4092]	; 1ec2c <gen_hostop6+0x144c>
   1dc2c:	add	r7, pc, r7
   1dc30:	ldr	r4, [r7, sl, lsl #3]!
   1dc34:	cmp	r4, #19
   1dc38:	bhi	1dc98 <gen_hostop6+0x4b8>
   1dc3c:	add	r5, sl, #1
   1dc40:	cmp	sl, #15
   1dc44:	str	r5, [ip, #92]	; 0x5c
   1dc48:	bge	1e9dc <gen_hostop6+0x11fc>
   1dc4c:	mov	r0, #1024	; 0x400
   1dc50:	lsl	r4, r0, r5
   1dc54:	mov	r0, r4
   1dc58:	bl	e34 <malloc@plt>
   1dc5c:	str	r0, [r7, #12]
   1dc60:	cmp	r0, #0
   1dc64:	ldr	sl, [pc, #4044]	; 1ec38 <gen_hostop6+0x1458>
   1dc68:	add	sl, pc, sl
   1dc6c:	beq	1e9dc <gen_hostop6+0x11fc>
   1dc70:	mov	r1, #0
   1dc74:	mov	r2, r4
   1dc78:	add	r7, r7, #8
   1dc7c:	bl	ea0 <memset@plt>
   1dc80:	str	r4, [r7]
   1dc84:	cmp	r4, #19
   1dc88:	ldr	ip, [pc, #4012]	; 1ec3c <gen_hostop6+0x145c>
   1dc8c:	add	ip, pc, ip
   1dc90:	bhi	1dca4 <gen_hostop6+0x4c4>
   1dc94:	b	1e9dc <gen_hostop6+0x11fc>
   1dc98:	mov	r5, sl
   1dc9c:	ldr	sl, [pc, #3984]	; 1ec34 <gen_hostop6+0x1454>
   1dca0:	add	sl, pc, sl
   1dca4:	sub	r2, r4, #20
   1dca8:	mov	r3, #84	; 0x54
   1dcac:	rev	r1, r6
   1dcb0:	str	r2, [r7]
   1dcb4:	ldr	r0, [r7, #4]
   1dcb8:	str	r3, [r0, r2]!
   1dcbc:	mov	r2, r9
   1dcc0:	str	r1, [r0, #12]
   1dcc4:	mov	r1, r2
   1dcc8:	ldr	r2, [r2, #16]
   1dccc:	cmp	r2, #0
   1dcd0:	bne	1dcc4 <gen_hostop6+0x4e4>
   1dcd4:	str	r0, [r1, #16]
   1dcd8:	mov	r6, sl
   1dcdc:	ldr	r4, [r6, r5, lsl #3]!
   1dce0:	cmp	r4, #207	; 0xcf
   1dce4:	bhi	1dd94 <gen_hostop6+0x5b4>
   1dce8:	add	r7, r5, #1
   1dcec:	cmp	r5, #15
   1dcf0:	str	r7, [ip, #92]	; 0x5c
   1dcf4:	bge	1e9dc <gen_hostop6+0x11fc>
   1dcf8:	mov	r0, #1024	; 0x400
   1dcfc:	lsl	r4, r0, r7
   1dd00:	mov	r0, r4
   1dd04:	bl	e34 <malloc@plt>
   1dd08:	cmp	r0, #0
   1dd0c:	str	r0, [r6, #12]
   1dd10:	beq	1e9dc <gen_hostop6+0x11fc>
   1dd14:	mov	r1, #0
   1dd18:	mov	r2, r4
   1dd1c:	add	r6, r6, #8
   1dd20:	bl	ea0 <memset@plt>
   1dd24:	str	r4, [r6]
   1dd28:	cmp	r4, #207	; 0xcf
   1dd2c:	ldr	ip, [pc, #3852]	; 1ec40 <gen_hostop6+0x1460>
   1dd30:	add	ip, pc, ip
   1dd34:	bhi	1dd98 <gen_hostop6+0x5b8>
   1dd38:	b	1e9dc <gen_hostop6+0x11fc>
   1dd3c:	mov	sl, r7
   1dd40:	sub	r1, r4, #20
   1dd44:	mov	r2, #64	; 0x40
   1dd48:	str	r1, [r5]
   1dd4c:	ldr	r0, [r5, #4]
   1dd50:	str	r2, [r0, r1]!
   1dd54:	mov	r2, r9
   1dd58:	str	r3, [r0, #12]
   1dd5c:	mov	r1, r2
   1dd60:	ldr	r2, [r2, #16]
   1dd64:	cmp	r2, #0
   1dd68:	bne	1dd5c <gen_hostop6+0x57c>
   1dd6c:	str	r0, [r1, #16]
   1dd70:	cmn	r6, #1
   1dd74:	bne	1dc28 <gen_hostop6+0x448>
   1dd78:	mov	r5, sl
   1dd7c:	ldr	sl, [pc, #3756]	; 1ec30 <gen_hostop6+0x1450>
   1dd80:	add	sl, pc, sl
   1dd84:	mov	r6, sl
   1dd88:	ldr	r4, [r6, r5, lsl #3]!
   1dd8c:	cmp	r4, #207	; 0xcf
   1dd90:	bls	1dce8 <gen_hostop6+0x508>
   1dd94:	mov	r7, r5
   1dd98:	sub	r1, r4, #208	; 0xd0
   1dd9c:	ldr	r0, [sp, #24]
   1dda0:	str	r1, [r6]
   1dda4:	ldr	r2, [r6, #4]
   1dda8:	rev	r0, r0
   1ddac:	add	r8, r2, r1
   1ddb0:	mov	r1, #21
   1ddb4:	str	r0, [r8, #20]
   1ddb8:	str	r9, [r8, #4]
   1ddbc:	str	r1, [r8, #8]
   1ddc0:	str	r8, [r8, #96]	; 0x60
   1ddc4:	ldr	r1, [sp, #28]
   1ddc8:	ldr	r0, [ip, #48]	; 0x30
   1ddcc:	add	r0, r1, r0
   1ddd0:	add	r5, r0, #8
   1ddd4:	ldr	r0, [sp, #36]	; 0x24
   1ddd8:	ldr	lr, [r0, #8]
   1dddc:	ldr	r0, [sp, #32]
   1dde0:	ldr	r0, [r0, #8]
   1dde4:	str	r0, [sp, #20]
   1dde8:	ldrb	r0, [ip, #16]
   1ddec:	cmp	r0, #1
   1ddf0:	bne	1df60 <gen_hostop6+0x780>
   1ddf4:	ldr	r0, [ip, #100]	; 0x64
   1ddf8:	cmn	r0, #1
   1ddfc:	beq	1de7c <gen_hostop6+0x69c>
   1de00:	mov	r4, sl
   1de04:	ldr	r6, [r4, r7, lsl #3]!
   1de08:	cmp	r6, #19
   1de0c:	bhi	1dea8 <gen_hostop6+0x6c8>
   1de10:	add	sl, r7, #1
   1de14:	cmp	r7, #15
   1de18:	str	r0, [sp, #24]
   1de1c:	str	sl, [ip, #92]	; 0x5c
   1de20:	bge	1e9dc <gen_hostop6+0x11fc>
   1de24:	mov	r0, #1024	; 0x400
   1de28:	mov	r9, r5
   1de2c:	mov	r5, lr
   1de30:	lsl	r6, r0, sl
   1de34:	mov	r0, r6
   1de38:	bl	e34 <malloc@plt>
   1de3c:	cmp	r0, #0
   1de40:	str	r0, [r4, #12]
   1de44:	beq	1e9dc <gen_hostop6+0x11fc>
   1de48:	mov	r1, #0
   1de4c:	mov	r2, r6
   1de50:	add	r4, r4, #8
   1de54:	bl	ea0 <memset@plt>
   1de58:	str	r6, [r4]
   1de5c:	mov	lr, r5
   1de60:	cmp	r6, #19
   1de64:	mov	r5, r9
   1de68:	ldr	ip, [pc, #3544]	; 1ec48 <gen_hostop6+0x1468>
   1de6c:	ldr	r0, [sp, #24]
   1de70:	add	ip, pc, ip
   1de74:	bhi	1deac <gen_hostop6+0x6cc>
   1de78:	b	1e9dc <gen_hostop6+0x11fc>
   1de7c:	mov	r4, lr
   1de80:	bl	1305c <alloc_reg>
   1de84:	ldr	ip, [pc, #3512]	; 1ec44 <gen_hostop6+0x1464>
   1de88:	mov	lr, r4
   1de8c:	add	ip, pc, ip
   1de90:	str	r0, [ip, #100]	; 0x64
   1de94:	ldr	r7, [ip, #92]	; 0x5c
   1de98:	mov	r4, sl
   1de9c:	ldr	r6, [r4, r7, lsl #3]!
   1dea0:	cmp	r6, #19
   1dea4:	bls	1de10 <gen_hostop6+0x630>
   1dea8:	mov	sl, r7
   1deac:	sub	r2, r6, #20
   1deb0:	mov	r1, #97	; 0x61
   1deb4:	str	r2, [r4]
   1deb8:	ldr	r9, [r4, #4]
   1debc:	str	r1, [r9, r2]!
   1dec0:	cmp	r9, #0
   1dec4:	str	r0, [r9, #12]
   1dec8:	beq	1df54 <gen_hostop6+0x774>
   1decc:	ldr	r6, [pc, #3452]	; 1ec50 <gen_hostop6+0x1470>
   1ded0:	add	r6, pc, r6
   1ded4:	ldr	r4, [r6, sl, lsl #3]!
   1ded8:	cmp	r4, #19
   1dedc:	bhi	1e110 <gen_hostop6+0x930>
   1dee0:	add	r1, sl, #1
   1dee4:	cmp	sl, #15
   1dee8:	str	r5, [sp, #24]
   1deec:	str	r1, [ip, #92]	; 0x5c
   1def0:	bge	1e9dc <gen_hostop6+0x11fc>
   1def4:	mov	r0, #1024	; 0x400
   1def8:	mov	r5, lr
   1defc:	mov	r7, r1
   1df00:	lsl	r4, r0, r1
   1df04:	mov	r0, r4
   1df08:	bl	e34 <malloc@plt>
   1df0c:	str	r0, [r6, #12]
   1df10:	cmp	r0, #0
   1df14:	ldr	sl, [pc, #3388]	; 1ec58 <gen_hostop6+0x1478>
   1df18:	add	sl, pc, sl
   1df1c:	beq	1e9dc <gen_hostop6+0x11fc>
   1df20:	mov	r1, #0
   1df24:	mov	r2, r4
   1df28:	add	r6, r6, #8
   1df2c:	bl	ea0 <memset@plt>
   1df30:	str	r4, [r6]
   1df34:	mov	lr, r5
   1df38:	cmp	r4, #19
   1df3c:	mov	r3, r7
   1df40:	ldr	ip, [pc, #3348]	; 1ec5c <gen_hostop6+0x147c>
   1df44:	ldr	r5, [sp, #24]
   1df48:	add	ip, pc, ip
   1df4c:	bhi	1e11c <gen_hostop6+0x93c>
   1df50:	b	1e9dc <gen_hostop6+0x11fc>
   1df54:	mov	r7, sl
   1df58:	ldr	sl, [pc, #3308]	; 1ec4c <gen_hostop6+0x146c>
   1df5c:	add	sl, pc, sl
   1df60:	mov	r6, sl
   1df64:	ldr	r4, [r6, r7, lsl #3]!
   1df68:	cmp	r4, #19
   1df6c:	bhi	1dfdc <gen_hostop6+0x7fc>
   1df70:	add	r1, r7, #1
   1df74:	cmp	r7, #15
   1df78:	str	r1, [ip, #92]	; 0x5c
   1df7c:	bge	1e9dc <gen_hostop6+0x11fc>
   1df80:	mov	r0, #1024	; 0x400
   1df84:	mov	r9, r5
   1df88:	mov	r5, lr
   1df8c:	mov	r7, r1
   1df90:	lsl	r4, r0, r1
   1df94:	mov	r0, r4
   1df98:	bl	e34 <malloc@plt>
   1df9c:	cmp	r0, #0
   1dfa0:	str	r0, [r6, #12]
   1dfa4:	beq	1e9dc <gen_hostop6+0x11fc>
   1dfa8:	mov	r1, #0
   1dfac:	mov	r2, r4
   1dfb0:	add	r6, r6, #8
   1dfb4:	bl	ea0 <memset@plt>
   1dfb8:	str	r4, [r6]
   1dfbc:	mov	lr, r5
   1dfc0:	cmp	r4, #19
   1dfc4:	mov	r5, r9
   1dfc8:	mov	r3, r7
   1dfcc:	ldr	ip, [pc, #3212]	; 1ec60 <gen_hostop6+0x1480>
   1dfd0:	add	ip, pc, ip
   1dfd4:	bhi	1dfe0 <gen_hostop6+0x800>
   1dfd8:	b	1e9dc <gen_hostop6+0x11fc>
   1dfdc:	mov	r3, r7
   1dfe0:	sub	r0, r4, #20
   1dfe4:	mov	r1, #32
   1dfe8:	str	r0, [r6]
   1dfec:	ldr	r9, [r6, #4]
   1dff0:	str	r1, [r9, r0]!
   1dff4:	ldr	r0, [ip, #44]	; 0x2c
   1dff8:	add	r0, r0, r5
   1dffc:	str	r0, [r9, #12]
   1e000:	cmn	lr, #1
   1e004:	beq	1e154 <gen_hostop6+0x974>
   1e008:	mov	r6, sl
   1e00c:	ldr	r4, [r6, r3, lsl #3]!
   1e010:	cmp	r4, #19
   1e014:	bhi	1e074 <gen_hostop6+0x894>
   1e018:	add	r7, r3, #1
   1e01c:	cmp	r3, #15
   1e020:	str	lr, [sp, #24]
   1e024:	str	r7, [ip, #92]	; 0x5c
   1e028:	bge	1e9dc <gen_hostop6+0x11fc>
   1e02c:	mov	r0, #1024	; 0x400
   1e030:	lsl	r4, r0, r7
   1e034:	mov	r0, r4
   1e038:	bl	e34 <malloc@plt>
   1e03c:	cmp	r0, #0
   1e040:	str	r0, [r6, #12]
   1e044:	beq	1e9dc <gen_hostop6+0x11fc>
   1e048:	mov	r1, #0
   1e04c:	mov	r2, r4
   1e050:	add	r6, r6, #8
   1e054:	bl	ea0 <memset@plt>
   1e058:	str	r4, [r6]
   1e05c:	cmp	r4, #19
   1e060:	ldr	ip, [pc, #3068]	; 1ec64 <gen_hostop6+0x1484>
   1e064:	ldr	lr, [sp, #24]
   1e068:	add	ip, pc, ip
   1e06c:	bhi	1e078 <gen_hostop6+0x898>
   1e070:	b	1e9dc <gen_hostop6+0x11fc>
   1e074:	mov	r7, r3
   1e078:	sub	r2, r4, #20
   1e07c:	mov	r3, #84	; 0x54
   1e080:	rev	r1, lr
   1e084:	str	r2, [r6]
   1e088:	ldr	r0, [r6, #4]
   1e08c:	str	r3, [r0, r2]!
   1e090:	mov	r2, r9
   1e094:	str	r1, [r0, #12]
   1e098:	mov	r1, r2
   1e09c:	ldr	r2, [r2, #16]
   1e0a0:	cmp	r2, #0
   1e0a4:	bne	1e098 <gen_hostop6+0x8b8>
   1e0a8:	str	r0, [r1, #16]
   1e0ac:	mov	r6, sl
   1e0b0:	ldr	r4, [r6, r7, lsl #3]!
   1e0b4:	cmp	r4, #207	; 0xcf
   1e0b8:	bhi	1e168 <gen_hostop6+0x988>
   1e0bc:	add	r5, r7, #1
   1e0c0:	cmp	r7, #15
   1e0c4:	str	r5, [ip, #92]	; 0x5c
   1e0c8:	bge	1e9dc <gen_hostop6+0x11fc>
   1e0cc:	mov	r0, #1024	; 0x400
   1e0d0:	lsl	r4, r0, r5
   1e0d4:	mov	r0, r4
   1e0d8:	bl	e34 <malloc@plt>
   1e0dc:	cmp	r0, #0
   1e0e0:	str	r0, [r6, #12]
   1e0e4:	beq	1e9dc <gen_hostop6+0x11fc>
   1e0e8:	mov	r1, #0
   1e0ec:	mov	r2, r4
   1e0f0:	add	r6, r6, #8
   1e0f4:	bl	ea0 <memset@plt>
   1e0f8:	str	r4, [r6]
   1e0fc:	cmp	r4, #207	; 0xcf
   1e100:	ldr	ip, [pc, #2912]	; 1ec68 <gen_hostop6+0x1488>
   1e104:	add	ip, pc, ip
   1e108:	bhi	1e16c <gen_hostop6+0x98c>
   1e10c:	b	1e9dc <gen_hostop6+0x11fc>
   1e110:	mov	r3, sl
   1e114:	ldr	sl, [pc, #2872]	; 1ec54 <gen_hostop6+0x1474>
   1e118:	add	sl, pc, sl
   1e11c:	sub	r1, r4, #20
   1e120:	mov	r2, #64	; 0x40
   1e124:	str	r1, [r6]
   1e128:	ldr	r0, [r6, #4]
   1e12c:	str	r2, [r0, r1]!
   1e130:	mov	r2, r9
   1e134:	str	r5, [r0, #12]
   1e138:	mov	r1, r2
   1e13c:	ldr	r2, [r2, #16]
   1e140:	cmp	r2, #0
   1e144:	bne	1e138 <gen_hostop6+0x958>
   1e148:	str	r0, [r1, #16]
   1e14c:	cmn	lr, #1
   1e150:	bne	1e008 <gen_hostop6+0x828>
   1e154:	mov	r7, r3
   1e158:	mov	r6, sl
   1e15c:	ldr	r4, [r6, r7, lsl #3]!
   1e160:	cmp	r4, #207	; 0xcf
   1e164:	bls	1e0bc <gen_hostop6+0x8dc>
   1e168:	mov	r5, r7
   1e16c:	add	r0, r8, #96	; 0x60
   1e170:	str	r0, [sp, #24]
   1e174:	ldr	r0, [sp, #20]
   1e178:	rev	r1, r0
   1e17c:	sub	r0, r4, #208	; 0xd0
   1e180:	str	r0, [r6]
   1e184:	ldr	r2, [r6, #4]
   1e188:	adds	r0, r2, r0
   1e18c:	mov	r2, #21
   1e190:	str	r1, [r0, #20]
   1e194:	str	r9, [r0, #4]
   1e198:	str	r2, [r0, #8]
   1e19c:	str	r0, [r0, #96]	; 0x60
   1e1a0:	beq	1e1d8 <gen_hostop6+0x9f8>
   1e1a4:	ldr	r1, [sp, #24]
   1e1a8:	mov	r2, r0
   1e1ac:	ldr	r1, [r1]
   1e1b0:	ldr	r3, [r2, #44]	; 0x2c
   1e1b4:	add	r7, r2, #84	; 0x54
   1e1b8:	cmp	r3, #0
   1e1bc:	mov	r3, #84	; 0x54
   1e1c0:	movweq	r3, #60	; 0x3c
   1e1c4:	addeq	r7, r2, #60	; 0x3c
   1e1c8:	ldr	r2, [r2, r3]
   1e1cc:	str	r1, [r7]
   1e1d0:	cmp	r2, #0
   1e1d4:	bne	1e1b0 <gen_hostop6+0x9d0>
   1e1d8:	ldr	r1, [r0, #44]	; 0x2c
   1e1dc:	cmp	r8, #0
   1e1e0:	clz	r1, r1
   1e1e4:	lsr	r1, r1, #5
   1e1e8:	str	r1, [r0, #44]	; 0x2c
   1e1ec:	ldr	r1, [r8, #44]	; 0x2c
   1e1f0:	clz	r2, r1
   1e1f4:	lsr	r2, r2, #5
   1e1f8:	str	r2, [r8, #44]	; 0x2c
   1e1fc:	str	r8, [fp, #-32]	; 0xffffffe0
   1e200:	beq	1e248 <gen_hostop6+0xa68>
   1e204:	cmp	r1, #0
   1e208:	mov	r3, #60	; 0x3c
   1e20c:	mov	r2, r8
   1e210:	movweq	r3, #84	; 0x54
   1e214:	ldr	r1, [r2, r3]!
   1e218:	cmp	r1, #0
   1e21c:	beq	1e24c <gen_hostop6+0xa6c>
   1e220:	ldr	r3, [r1, #44]	; 0x2c
   1e224:	add	r2, r1, #84	; 0x54
   1e228:	cmp	r3, #0
   1e22c:	mov	r3, #84	; 0x54
   1e230:	movweq	r3, #60	; 0x3c
   1e234:	addeq	r2, r1, #60	; 0x3c
   1e238:	ldr	r1, [r1, r3]
   1e23c:	cmp	r1, #0
   1e240:	bne	1e220 <gen_hostop6+0xa40>
   1e244:	b	1e24c <gen_hostop6+0xa6c>
   1e248:	sub	r2, fp, #32
   1e24c:	str	r0, [r2]
   1e250:	ldr	r1, [r8, #44]	; 0x2c
   1e254:	clz	r1, r1
   1e258:	lsr	r1, r1, #5
   1e25c:	str	r1, [r8, #44]	; 0x2c
   1e260:	ldr	r1, [sp, #28]
   1e264:	ldr	r0, [r0, #96]	; 0x60
   1e268:	str	r0, [r8, #96]	; 0x60
   1e26c:	ldr	r0, [ip, #48]	; 0x30
   1e270:	add	r0, r1, r0
   1e274:	add	r9, r0, #4
   1e278:	ldr	r0, [sp, #36]	; 0x24
   1e27c:	ldr	r7, [r0, #4]
   1e280:	ldr	r0, [sp, #32]
   1e284:	ldr	r0, [r0, #4]
   1e288:	str	r7, [sp, #20]
   1e28c:	str	r0, [sp, #12]
   1e290:	ldrb	r0, [ip, #16]
   1e294:	cmp	r0, #1
   1e298:	bne	1e3c8 <gen_hostop6+0xbe8>
   1e29c:	ldr	sl, [ip, #100]	; 0x64
   1e2a0:	cmn	sl, #1
   1e2a4:	bne	1e2c0 <gen_hostop6+0xae0>
   1e2a8:	bl	1305c <alloc_reg>
   1e2ac:	ldr	ip, [pc, #2488]	; 1ec6c <gen_hostop6+0x148c>
   1e2b0:	mov	sl, r0
   1e2b4:	add	ip, pc, ip
   1e2b8:	str	r0, [ip, #100]	; 0x64
   1e2bc:	ldr	r5, [ip, #92]	; 0x5c
   1e2c0:	ldr	r4, [pc, #2472]	; 1ec70 <gen_hostop6+0x1490>
   1e2c4:	add	r4, pc, r4
   1e2c8:	ldr	r6, [r4, r5, lsl #3]!
   1e2cc:	cmp	r6, #19
   1e2d0:	bhi	1e328 <gen_hostop6+0xb48>
   1e2d4:	add	r7, r5, #1
   1e2d8:	cmp	r5, #15
   1e2dc:	str	r7, [ip, #92]	; 0x5c
   1e2e0:	bge	1e9dc <gen_hostop6+0x11fc>
   1e2e4:	mov	r0, #1024	; 0x400
   1e2e8:	lsl	r6, r0, r7
   1e2ec:	mov	r0, r6
   1e2f0:	bl	e34 <malloc@plt>
   1e2f4:	cmp	r0, #0
   1e2f8:	str	r0, [r4, #12]
   1e2fc:	beq	1e9dc <gen_hostop6+0x11fc>
   1e300:	mov	r1, #0
   1e304:	mov	r2, r6
   1e308:	add	r4, r4, #8
   1e30c:	bl	ea0 <memset@plt>
   1e310:	str	r6, [r4]
   1e314:	cmp	r6, #19
   1e318:	ldr	ip, [pc, #2388]	; 1ec74 <gen_hostop6+0x1494>
   1e31c:	add	ip, pc, ip
   1e320:	bhi	1e32c <gen_hostop6+0xb4c>
   1e324:	b	1e9dc <gen_hostop6+0x11fc>
   1e328:	mov	r7, r5
   1e32c:	sub	r0, r6, #20
   1e330:	mov	r1, #97	; 0x61
   1e334:	str	r0, [r4]
   1e338:	ldr	r5, [r4, #4]
   1e33c:	str	r1, [r5, r0]!
   1e340:	cmp	r5, #0
   1e344:	str	sl, [r5, #12]
   1e348:	beq	1e3b8 <gen_hostop6+0xbd8>
   1e34c:	ldr	r6, [pc, #2344]	; 1ec7c <gen_hostop6+0x149c>
   1e350:	add	r6, pc, r6
   1e354:	ldr	r4, [r6, r7, lsl #3]!
   1e358:	cmp	r4, #19
   1e35c:	bhi	1e570 <gen_hostop6+0xd90>
   1e360:	add	sl, r7, #1
   1e364:	cmp	r7, #15
   1e368:	str	sl, [ip, #92]	; 0x5c
   1e36c:	bge	1e9dc <gen_hostop6+0x11fc>
   1e370:	mov	r0, #1024	; 0x400
   1e374:	lsl	r4, r0, sl
   1e378:	mov	r0, r4
   1e37c:	bl	e34 <malloc@plt>
   1e380:	ldr	r7, [sp, #20]
   1e384:	cmp	r0, #0
   1e388:	str	r0, [r6, #12]
   1e38c:	beq	1e9dc <gen_hostop6+0x11fc>
   1e390:	mov	r1, #0
   1e394:	mov	r2, r4
   1e398:	add	r6, r6, #8
   1e39c:	bl	ea0 <memset@plt>
   1e3a0:	str	r4, [r6]
   1e3a4:	cmp	r4, #19
   1e3a8:	ldr	ip, [pc, #2256]	; 1ec80 <gen_hostop6+0x14a0>
   1e3ac:	add	ip, pc, ip
   1e3b0:	bhi	1e578 <gen_hostop6+0xd98>
   1e3b4:	b	1e9dc <gen_hostop6+0x11fc>
   1e3b8:	ldr	sl, [pc, #2232]	; 1ec78 <gen_hostop6+0x1498>
   1e3bc:	mov	r5, r7
   1e3c0:	ldr	r7, [sp, #20]
   1e3c4:	add	sl, pc, sl
   1e3c8:	mov	r6, sl
   1e3cc:	ldr	r4, [r6, r5, lsl #3]!
   1e3d0:	cmp	r4, #19
   1e3d4:	bhi	1e42c <gen_hostop6+0xc4c>
   1e3d8:	add	sl, r5, #1
   1e3dc:	cmp	r5, #15
   1e3e0:	str	sl, [ip, #92]	; 0x5c
   1e3e4:	bge	1e9dc <gen_hostop6+0x11fc>
   1e3e8:	mov	r0, #1024	; 0x400
   1e3ec:	lsl	r4, r0, sl
   1e3f0:	mov	r0, r4
   1e3f4:	bl	e34 <malloc@plt>
   1e3f8:	cmp	r0, #0
   1e3fc:	str	r0, [r6, #12]
   1e400:	beq	1e9dc <gen_hostop6+0x11fc>
   1e404:	mov	r1, #0
   1e408:	mov	r2, r4
   1e40c:	add	r6, r6, #8
   1e410:	bl	ea0 <memset@plt>
   1e414:	str	r4, [r6]
   1e418:	cmp	r4, #19
   1e41c:	ldr	ip, [pc, #2144]	; 1ec84 <gen_hostop6+0x14a4>
   1e420:	add	ip, pc, ip
   1e424:	bhi	1e430 <gen_hostop6+0xc50>
   1e428:	b	1e9dc <gen_hostop6+0x11fc>
   1e42c:	mov	sl, r5
   1e430:	sub	r0, r4, #20
   1e434:	mov	r1, #32
   1e438:	str	r0, [r6]
   1e43c:	ldr	r5, [r6, #4]
   1e440:	str	r1, [r5, r0]!
   1e444:	ldr	r0, [ip, #44]	; 0x2c
   1e448:	add	r0, r0, r9
   1e44c:	str	r0, [r5, #12]
   1e450:	cmn	r7, #1
   1e454:	beq	1e5b0 <gen_hostop6+0xdd0>
   1e458:	ldr	r6, [pc, #2092]	; 1ec8c <gen_hostop6+0x14ac>
   1e45c:	add	r6, pc, r6
   1e460:	ldr	r4, [r6, sl, lsl #3]!
   1e464:	cmp	r4, #19
   1e468:	bhi	1e4c8 <gen_hostop6+0xce8>
   1e46c:	add	r7, sl, #1
   1e470:	cmp	sl, #15
   1e474:	str	r7, [ip, #92]	; 0x5c
   1e478:	bge	1e9dc <gen_hostop6+0x11fc>
   1e47c:	mov	r0, #1024	; 0x400
   1e480:	lsl	r4, r0, r7
   1e484:	mov	r0, r4
   1e488:	bl	e34 <malloc@plt>
   1e48c:	str	r0, [r6, #12]
   1e490:	cmp	r0, #0
   1e494:	ldr	r9, [pc, #2040]	; 1ec94 <gen_hostop6+0x14b4>
   1e498:	add	r9, pc, r9
   1e49c:	beq	1e9dc <gen_hostop6+0x11fc>
   1e4a0:	mov	r1, #0
   1e4a4:	mov	r2, r4
   1e4a8:	add	r6, r6, #8
   1e4ac:	bl	ea0 <memset@plt>
   1e4b0:	str	r4, [r6]
   1e4b4:	cmp	r4, #19
   1e4b8:	ldr	ip, [pc, #2008]	; 1ec98 <gen_hostop6+0x14b8>
   1e4bc:	add	ip, pc, ip
   1e4c0:	bhi	1e4d4 <gen_hostop6+0xcf4>
   1e4c4:	b	1e9dc <gen_hostop6+0x11fc>
   1e4c8:	ldr	r9, [pc, #1984]	; 1ec90 <gen_hostop6+0x14b0>
   1e4cc:	mov	r7, sl
   1e4d0:	add	r9, pc, r9
   1e4d4:	ldr	r0, [sp, #20]
   1e4d8:	sub	r2, r4, #20
   1e4dc:	mov	r3, #84	; 0x54
   1e4e0:	str	r2, [r6]
   1e4e4:	rev	r1, r0
   1e4e8:	ldr	r0, [r6, #4]
   1e4ec:	str	r3, [r0, r2]!
   1e4f0:	mov	r2, r5
   1e4f4:	str	r1, [r0, #12]
   1e4f8:	mov	r1, r2
   1e4fc:	ldr	r2, [r2, #16]
   1e500:	cmp	r2, #0
   1e504:	bne	1e4f8 <gen_hostop6+0xd18>
   1e508:	str	r0, [r1, #16]
   1e50c:	mov	r6, r9
   1e510:	ldr	r4, [r6, r7, lsl #3]!
   1e514:	cmp	r4, #207	; 0xcf
   1e518:	bhi	1e5cc <gen_hostop6+0xdec>
   1e51c:	add	sl, r7, #1
   1e520:	cmp	r7, #15
   1e524:	str	sl, [ip, #92]	; 0x5c
   1e528:	bge	1e9dc <gen_hostop6+0x11fc>
   1e52c:	mov	r0, #1024	; 0x400
   1e530:	lsl	r4, r0, sl
   1e534:	mov	r0, r4
   1e538:	bl	e34 <malloc@plt>
   1e53c:	cmp	r0, #0
   1e540:	str	r0, [r6, #12]
   1e544:	beq	1e9dc <gen_hostop6+0x11fc>
   1e548:	mov	r1, #0
   1e54c:	mov	r2, r4
   1e550:	add	r6, r6, #8
   1e554:	bl	ea0 <memset@plt>
   1e558:	str	r4, [r6]
   1e55c:	cmp	r4, #207	; 0xcf
   1e560:	ldr	ip, [pc, #1844]	; 1ec9c <gen_hostop6+0x14bc>
   1e564:	add	ip, pc, ip
   1e568:	bhi	1e5d0 <gen_hostop6+0xdf0>
   1e56c:	b	1e9dc <gen_hostop6+0x11fc>
   1e570:	mov	sl, r7
   1e574:	ldr	r7, [sp, #20]
   1e578:	sub	r1, r4, #20
   1e57c:	mov	r2, #64	; 0x40
   1e580:	str	r1, [r6]
   1e584:	ldr	r0, [r6, #4]
   1e588:	str	r2, [r0, r1]!
   1e58c:	mov	r2, r5
   1e590:	str	r9, [r0, #12]
   1e594:	mov	r1, r2
   1e598:	ldr	r2, [r2, #16]
   1e59c:	cmp	r2, #0
   1e5a0:	bne	1e594 <gen_hostop6+0xdb4>
   1e5a4:	str	r0, [r1, #16]
   1e5a8:	cmn	r7, #1
   1e5ac:	bne	1e458 <gen_hostop6+0xc78>
   1e5b0:	ldr	r9, [pc, #1744]	; 1ec88 <gen_hostop6+0x14a8>
   1e5b4:	mov	r7, sl
   1e5b8:	add	r9, pc, r9
   1e5bc:	mov	r6, r9
   1e5c0:	ldr	r4, [r6, r7, lsl #3]!
   1e5c4:	cmp	r4, #207	; 0xcf
   1e5c8:	bls	1e51c <gen_hostop6+0xd3c>
   1e5cc:	mov	sl, r7
   1e5d0:	ldr	r0, [sp, #12]
   1e5d4:	rev	r1, r0
   1e5d8:	sub	r0, r4, #208	; 0xd0
   1e5dc:	str	r0, [r6]
   1e5e0:	ldr	r2, [r6, #4]
   1e5e4:	adds	r0, r2, r0
   1e5e8:	mov	r2, #21
   1e5ec:	str	r1, [r0, #20]
   1e5f0:	str	r5, [r0, #4]
   1e5f4:	str	r2, [r0, #8]
   1e5f8:	str	r0, [r0, #96]	; 0x60
   1e5fc:	beq	1e634 <gen_hostop6+0xe54>
   1e600:	ldr	r1, [sp, #24]
   1e604:	mov	r2, r0
   1e608:	ldr	r1, [r1]
   1e60c:	ldr	r3, [r2, #44]	; 0x2c
   1e610:	add	r7, r2, #84	; 0x54
   1e614:	cmp	r3, #0
   1e618:	mov	r3, #84	; 0x54
   1e61c:	movweq	r3, #60	; 0x3c
   1e620:	addeq	r7, r2, #60	; 0x3c
   1e624:	ldr	r2, [r2, r3]
   1e628:	str	r1, [r7]
   1e62c:	cmp	r2, #0
   1e630:	bne	1e60c <gen_hostop6+0xe2c>
   1e634:	ldr	r1, [r0, #44]	; 0x2c
   1e638:	cmp	r8, #0
   1e63c:	clz	r1, r1
   1e640:	lsr	r1, r1, #5
   1e644:	str	r1, [r0, #44]	; 0x2c
   1e648:	ldr	r1, [r8, #44]	; 0x2c
   1e64c:	clz	r2, r1
   1e650:	lsr	r2, r2, #5
   1e654:	str	r2, [r8, #44]	; 0x2c
   1e658:	str	r8, [fp, #-32]	; 0xffffffe0
   1e65c:	beq	1e6a4 <gen_hostop6+0xec4>
   1e660:	cmp	r1, #0
   1e664:	mov	r3, #60	; 0x3c
   1e668:	mov	r2, r8
   1e66c:	movweq	r3, #84	; 0x54
   1e670:	ldr	r1, [r2, r3]!
   1e674:	cmp	r1, #0
   1e678:	beq	1e6a8 <gen_hostop6+0xec8>
   1e67c:	ldr	r3, [r1, #44]	; 0x2c
   1e680:	add	r2, r1, #84	; 0x54
   1e684:	cmp	r3, #0
   1e688:	mov	r3, #84	; 0x54
   1e68c:	movweq	r3, #60	; 0x3c
   1e690:	addeq	r2, r1, #60	; 0x3c
   1e694:	ldr	r1, [r1, r3]
   1e698:	cmp	r1, #0
   1e69c:	bne	1e67c <gen_hostop6+0xe9c>
   1e6a0:	b	1e6a8 <gen_hostop6+0xec8>
   1e6a4:	sub	r2, fp, #32
   1e6a8:	str	r0, [r2]
   1e6ac:	ldr	r1, [r8, #44]	; 0x2c
   1e6b0:	clz	r1, r1
   1e6b4:	lsr	r1, r1, #5
   1e6b8:	str	r1, [r8, #44]	; 0x2c
   1e6bc:	ldr	r1, [sp, #28]
   1e6c0:	ldr	r0, [r0, #96]	; 0x60
   1e6c4:	str	r0, [r8, #96]	; 0x60
   1e6c8:	ldr	r0, [ip, #48]	; 0x30
   1e6cc:	add	r3, r0, r1
   1e6d0:	ldr	r0, [sp, #36]	; 0x24
   1e6d4:	ldr	r1, [sp, #32]
   1e6d8:	ldr	r7, [r0]
   1e6dc:	ldrb	r0, [ip, #16]
   1e6e0:	ldr	r1, [r1]
   1e6e4:	cmp	r0, #1
   1e6e8:	str	r1, [sp, #32]
   1e6ec:	str	r7, [sp, #36]	; 0x24
   1e6f0:	bne	1e83c <gen_hostop6+0x105c>
   1e6f4:	ldr	r9, [ip, #100]	; 0x64
   1e6f8:	cmn	r9, #1
   1e6fc:	bne	1e720 <gen_hostop6+0xf40>
   1e700:	mov	r4, r3
   1e704:	bl	1305c <alloc_reg>
   1e708:	ldr	ip, [pc, #1424]	; 1eca0 <gen_hostop6+0x14c0>
   1e70c:	mov	r3, r4
   1e710:	mov	r9, r0
   1e714:	add	ip, pc, ip
   1e718:	str	r0, [ip, #100]	; 0x64
   1e71c:	ldr	sl, [ip, #92]	; 0x5c
   1e720:	ldr	r4, [pc, #1404]	; 1eca4 <gen_hostop6+0x14c4>
   1e724:	add	r4, pc, r4
   1e728:	ldr	r6, [r4, sl, lsl #3]!
   1e72c:	cmp	r6, #19
   1e730:	bhi	1e798 <gen_hostop6+0xfb8>
   1e734:	add	r7, sl, #1
   1e738:	cmp	sl, #15
   1e73c:	str	r7, [ip, #92]	; 0x5c
   1e740:	bge	1e9dc <gen_hostop6+0x11fc>
   1e744:	mov	r0, #1024	; 0x400
   1e748:	mov	r5, r3
   1e74c:	lsl	r6, r0, r7
   1e750:	mov	r0, r6
   1e754:	bl	e34 <malloc@plt>
   1e758:	str	r0, [r4, #12]
   1e75c:	cmp	r0, #0
   1e760:	ldr	sl, [pc, #1348]	; 1ecac <gen_hostop6+0x14cc>
   1e764:	add	sl, pc, sl
   1e768:	beq	1e9dc <gen_hostop6+0x11fc>
   1e76c:	mov	r1, #0
   1e770:	mov	r2, r6
   1e774:	add	r4, r4, #8
   1e778:	bl	ea0 <memset@plt>
   1e77c:	str	r6, [r4]
   1e780:	cmp	r6, #19
   1e784:	mov	r3, r5
   1e788:	ldr	ip, [pc, #1312]	; 1ecb0 <gen_hostop6+0x14d0>
   1e78c:	add	ip, pc, ip
   1e790:	bhi	1e7a4 <gen_hostop6+0xfc4>
   1e794:	b	1e9dc <gen_hostop6+0x11fc>
   1e798:	mov	r7, sl
   1e79c:	ldr	sl, [pc, #1284]	; 1eca8 <gen_hostop6+0x14c8>
   1e7a0:	add	sl, pc, sl
   1e7a4:	sub	r0, r6, #20
   1e7a8:	mov	r1, #97	; 0x61
   1e7ac:	str	r0, [r4]
   1e7b0:	ldr	r5, [r4, #4]
   1e7b4:	str	r1, [r5, r0]!
   1e7b8:	cmp	r5, #0
   1e7bc:	str	r9, [r5, #12]
   1e7c0:	beq	1e834 <gen_hostop6+0x1054>
   1e7c4:	mov	r6, sl
   1e7c8:	ldr	r4, [r6, r7, lsl #3]!
   1e7cc:	cmp	r4, #19
   1e7d0:	bhi	1e9f8 <gen_hostop6+0x1218>
   1e7d4:	add	r9, r7, #1
   1e7d8:	cmp	r7, #15
   1e7dc:	str	r3, [sp, #28]
   1e7e0:	str	r9, [ip, #92]	; 0x5c
   1e7e4:	bge	1e9dc <gen_hostop6+0x11fc>
   1e7e8:	mov	r0, #1024	; 0x400
   1e7ec:	lsl	r4, r0, r9
   1e7f0:	mov	r0, r4
   1e7f4:	bl	e34 <malloc@plt>
   1e7f8:	ldr	r7, [sp, #36]	; 0x24
   1e7fc:	cmp	r0, #0
   1e800:	str	r0, [r6, #12]
   1e804:	beq	1e9dc <gen_hostop6+0x11fc>
   1e808:	mov	r1, #0
   1e80c:	mov	r2, r4
   1e810:	add	r6, r6, #8
   1e814:	bl	ea0 <memset@plt>
   1e818:	str	r4, [r6]
   1e81c:	cmp	r4, #19
   1e820:	ldr	ip, [pc, #1172]	; 1ecbc <gen_hostop6+0x14dc>
   1e824:	ldr	r3, [sp, #28]
   1e828:	add	ip, pc, ip
   1e82c:	bhi	1ea00 <gen_hostop6+0x1220>
   1e830:	b	1e9dc <gen_hostop6+0x11fc>
   1e834:	mov	sl, r7
   1e838:	ldr	r7, [sp, #36]	; 0x24
   1e83c:	ldr	r6, [pc, #1136]	; 1ecb4 <gen_hostop6+0x14d4>
   1e840:	add	r6, pc, r6
   1e844:	ldr	r4, [r6, sl, lsl #3]!
   1e848:	cmp	r4, #19
   1e84c:	bhi	1e8b4 <gen_hostop6+0x10d4>
   1e850:	add	r9, sl, #1
   1e854:	cmp	sl, #15
   1e858:	str	r9, [ip, #92]	; 0x5c
   1e85c:	bge	1e9dc <gen_hostop6+0x11fc>
   1e860:	mov	r0, #1024	; 0x400
   1e864:	mov	r5, r3
   1e868:	lsl	r4, r0, r9
   1e86c:	mov	r0, r4
   1e870:	bl	e34 <malloc@plt>
   1e874:	str	r0, [r6, #12]
   1e878:	cmp	r0, #0
   1e87c:	ldr	sl, [pc, #1084]	; 1ecc0 <gen_hostop6+0x14e0>
   1e880:	add	sl, pc, sl
   1e884:	beq	1e9dc <gen_hostop6+0x11fc>
   1e888:	mov	r1, #0
   1e88c:	mov	r2, r4
   1e890:	add	r6, r6, #8
   1e894:	bl	ea0 <memset@plt>
   1e898:	str	r4, [r6]
   1e89c:	cmp	r4, #19
   1e8a0:	mov	r3, r5
   1e8a4:	ldr	ip, [pc, #1048]	; 1ecc4 <gen_hostop6+0x14e4>
   1e8a8:	add	ip, pc, ip
   1e8ac:	bhi	1e8c0 <gen_hostop6+0x10e0>
   1e8b0:	b	1e9dc <gen_hostop6+0x11fc>
   1e8b4:	mov	r9, sl
   1e8b8:	ldr	sl, [pc, #1016]	; 1ecb8 <gen_hostop6+0x14d8>
   1e8bc:	add	sl, pc, sl
   1e8c0:	sub	r0, r4, #20
   1e8c4:	mov	r1, #32
   1e8c8:	str	r0, [r6]
   1e8cc:	ldr	r5, [r6, #4]
   1e8d0:	str	r1, [r5, r0]!
   1e8d4:	ldr	r0, [ip, #44]	; 0x2c
   1e8d8:	add	r0, r0, r3
   1e8dc:	str	r0, [r5, #12]
   1e8e0:	cmn	r7, #1
   1e8e4:	beq	1ea38 <gen_hostop6+0x1258>
   1e8e8:	mov	r6, sl
   1e8ec:	ldr	r4, [r6, r9, lsl #3]!
   1e8f0:	cmp	r4, #19
   1e8f4:	bhi	1e94c <gen_hostop6+0x116c>
   1e8f8:	add	r7, r9, #1
   1e8fc:	cmp	r9, #15
   1e900:	str	r7, [ip, #92]	; 0x5c
   1e904:	bge	1e9dc <gen_hostop6+0x11fc>
   1e908:	mov	r0, #1024	; 0x400
   1e90c:	lsl	r4, r0, r7
   1e910:	mov	r0, r4
   1e914:	bl	e34 <malloc@plt>
   1e918:	cmp	r0, #0
   1e91c:	str	r0, [r6, #12]
   1e920:	beq	1e9dc <gen_hostop6+0x11fc>
   1e924:	mov	r1, #0
   1e928:	mov	r2, r4
   1e92c:	add	r6, r6, #8
   1e930:	bl	ea0 <memset@plt>
   1e934:	str	r4, [r6]
   1e938:	cmp	r4, #19
   1e93c:	ldr	ip, [pc, #900]	; 1ecc8 <gen_hostop6+0x14e8>
   1e940:	add	ip, pc, ip
   1e944:	bhi	1e950 <gen_hostop6+0x1170>
   1e948:	b	1e9dc <gen_hostop6+0x11fc>
   1e94c:	mov	r7, r9
   1e950:	ldr	r0, [sp, #36]	; 0x24
   1e954:	sub	r2, r4, #20
   1e958:	mov	r3, #84	; 0x54
   1e95c:	str	r2, [r6]
   1e960:	rev	r1, r0
   1e964:	ldr	r0, [r6, #4]
   1e968:	str	r3, [r0, r2]!
   1e96c:	mov	r2, r5
   1e970:	str	r1, [r0, #12]
   1e974:	mov	r1, r2
   1e978:	ldr	r2, [r2, #16]
   1e97c:	cmp	r2, #0
   1e980:	bne	1e974 <gen_hostop6+0x1194>
   1e984:	str	r0, [r1, #16]
   1e988:	ldr	r4, [sl, r7, lsl #3]!
   1e98c:	cmp	r4, #207	; 0xcf
   1e990:	bhi	1ea48 <gen_hostop6+0x1268>
   1e994:	add	r0, r7, #1
   1e998:	cmp	r7, #15
   1e99c:	str	r0, [ip, #92]	; 0x5c
   1e9a0:	bge	1e9dc <gen_hostop6+0x11fc>
   1e9a4:	mov	r1, #1024	; 0x400
   1e9a8:	lsl	r4, r1, r0
   1e9ac:	mov	r0, r4
   1e9b0:	bl	e34 <malloc@plt>
   1e9b4:	cmp	r0, #0
   1e9b8:	str	r0, [sl, #12]
   1e9bc:	beq	1e9dc <gen_hostop6+0x11fc>
   1e9c0:	mov	r1, #0
   1e9c4:	mov	r2, r4
   1e9c8:	add	sl, sl, #8
   1e9cc:	bl	ea0 <memset@plt>
   1e9d0:	cmp	r4, #207	; 0xcf
   1e9d4:	str	r4, [sl]
   1e9d8:	bhi	1ea48 <gen_hostop6+0x1268>
   1e9dc:	ldr	r0, [pc, #744]	; 1eccc <gen_hostop6+0x14ec>
   1e9e0:	add	r0, pc, r0
   1e9e4:	bl	214c <sf_bpf_error>
   1e9e8:	.word	0x00028ae4
   1e9ec:	.word	0x000289f8
   1e9f0:	.word	0x00028a8c
   1e9f4:	.word	0x00028a20
   1e9f8:	mov	r9, r7
   1e9fc:	ldr	r7, [sp, #36]	; 0x24
   1ea00:	sub	r1, r4, #20
   1ea04:	mov	r2, #64	; 0x40
   1ea08:	str	r1, [r6]
   1ea0c:	ldr	r0, [r6, #4]
   1ea10:	str	r2, [r0, r1]!
   1ea14:	mov	r2, r5
   1ea18:	str	r3, [r0, #12]
   1ea1c:	mov	r1, r2
   1ea20:	ldr	r2, [r2, #16]
   1ea24:	cmp	r2, #0
   1ea28:	bne	1ea1c <gen_hostop6+0x123c>
   1ea2c:	str	r0, [r1, #16]
   1ea30:	cmn	r7, #1
   1ea34:	bne	1e8e8 <gen_hostop6+0x1108>
   1ea38:	mov	r7, r9
   1ea3c:	ldr	r4, [sl, r7, lsl #3]!
   1ea40:	cmp	r4, #207	; 0xcf
   1ea44:	bls	1e994 <gen_hostop6+0x11b4>
   1ea48:	ldr	r0, [sp, #32]
   1ea4c:	rev	r1, r0
   1ea50:	sub	r0, r4, #208	; 0xd0
   1ea54:	str	r0, [sl]
   1ea58:	ldr	r2, [sl, #4]
   1ea5c:	adds	r6, r2, r0
   1ea60:	mov	r2, #21
   1ea64:	str	r1, [r6, #20]
   1ea68:	str	r5, [r6, #4]
   1ea6c:	ldr	r5, [sp, #24]
   1ea70:	str	r2, [r6, #8]
   1ea74:	str	r6, [r6, #96]	; 0x60
   1ea78:	beq	1eaac <gen_hostop6+0x12cc>
   1ea7c:	ldr	r1, [r5]
   1ea80:	mov	r2, r6
   1ea84:	ldr	r3, [r2, #44]	; 0x2c
   1ea88:	add	r7, r2, #84	; 0x54
   1ea8c:	cmp	r3, #0
   1ea90:	mov	r3, #84	; 0x54
   1ea94:	movweq	r3, #60	; 0x3c
   1ea98:	addeq	r7, r2, #60	; 0x3c
   1ea9c:	ldr	r2, [r2, r3]
   1eaa0:	str	r1, [r7]
   1eaa4:	cmp	r2, #0
   1eaa8:	bne	1ea84 <gen_hostop6+0x12a4>
   1eaac:	ldr	r1, [r6, #44]	; 0x2c
   1eab0:	cmp	r8, #0
   1eab4:	clz	r1, r1
   1eab8:	lsr	r1, r1, #5
   1eabc:	str	r1, [r6, #44]	; 0x2c
   1eac0:	ldr	r1, [r8, #44]	; 0x2c
   1eac4:	clz	r2, r1
   1eac8:	lsr	r2, r2, #5
   1eacc:	str	r2, [r8, #44]	; 0x2c
   1ead0:	str	r8, [fp, #-32]	; 0xffffffe0
   1ead4:	beq	1eb28 <gen_hostop6+0x1348>
   1ead8:	cmp	r1, #0
   1eadc:	mov	r3, #60	; 0x3c
   1eae0:	mov	r2, r8
   1eae4:	ldr	r0, [sp, #16]
   1eae8:	movweq	r3, #84	; 0x54
   1eaec:	ldr	r1, [r2, r3]!
   1eaf0:	cmp	r1, #0
   1eaf4:	beq	1eb30 <gen_hostop6+0x1350>
   1eaf8:	ldr	r3, [r1, #44]	; 0x2c
   1eafc:	add	r2, r1, #84	; 0x54
   1eb00:	cmp	r3, #0
   1eb04:	mov	r3, #84	; 0x54
   1eb08:	movweq	r3, #60	; 0x3c
   1eb0c:	addeq	r2, r1, #60	; 0x3c
   1eb10:	ldr	r1, [r1, r3]
   1eb14:	cmp	r1, #0
   1eb18:	bne	1eaf8 <gen_hostop6+0x1318>
   1eb1c:	b	1eb30 <gen_hostop6+0x1350>
   1eb20:	.word	0x000289b0
   1eb24:	.word	0x00028910
   1eb28:	ldr	r0, [sp, #16]
   1eb2c:	sub	r2, fp, #32
   1eb30:	str	r6, [r2]
   1eb34:	ldr	r1, [r8, #44]	; 0x2c
   1eb38:	clz	r1, r1
   1eb3c:	lsr	r1, r1, #5
   1eb40:	str	r1, [r8, #44]	; 0x2c
   1eb44:	ldr	r1, [r6, #96]	; 0x60
   1eb48:	str	r1, [r8, #96]	; 0x60
   1eb4c:	bl	6fb4 <gen_linktype>
   1eb50:	mov	r4, r0
   1eb54:	cmp	r0, #0
   1eb58:	beq	1eb8c <gen_hostop6+0x13ac>
   1eb5c:	ldr	r0, [r8, #96]	; 0x60
   1eb60:	mov	r1, r4
   1eb64:	ldr	r2, [r1, #44]	; 0x2c
   1eb68:	add	r3, r1, #84	; 0x54
   1eb6c:	cmp	r2, #0
   1eb70:	mov	r2, #84	; 0x54
   1eb74:	movweq	r2, #60	; 0x3c
   1eb78:	addeq	r3, r1, #60	; 0x3c
   1eb7c:	ldr	r1, [r1, r2]
   1eb80:	str	r0, [r3]
   1eb84:	cmp	r1, #0
   1eb88:	bne	1eb64 <gen_hostop6+0x1384>
   1eb8c:	ldr	r0, [r4, #44]	; 0x2c
   1eb90:	cmp	r8, #0
   1eb94:	clz	r0, r0
   1eb98:	lsr	r0, r0, #5
   1eb9c:	str	r0, [r4, #44]	; 0x2c
   1eba0:	ldr	r0, [r8, #44]	; 0x2c
   1eba4:	clz	r1, r0
   1eba8:	lsr	r1, r1, #5
   1ebac:	str	r1, [r8, #44]	; 0x2c
   1ebb0:	str	r8, [fp, #-32]	; 0xffffffe0
   1ebb4:	beq	1ebfc <gen_hostop6+0x141c>
   1ebb8:	cmp	r0, #0
   1ebbc:	mov	r2, #60	; 0x3c
   1ebc0:	mov	r1, r8
   1ebc4:	movweq	r2, #84	; 0x54
   1ebc8:	ldr	r0, [r1, r2]!
   1ebcc:	cmp	r0, #0
   1ebd0:	beq	1ec00 <gen_hostop6+0x1420>
   1ebd4:	ldr	r2, [r0, #44]	; 0x2c
   1ebd8:	add	r1, r0, #84	; 0x54
   1ebdc:	cmp	r2, #0
   1ebe0:	mov	r2, #84	; 0x54
   1ebe4:	movweq	r2, #60	; 0x3c
   1ebe8:	addeq	r1, r0, #60	; 0x3c
   1ebec:	ldr	r0, [r0, r2]
   1ebf0:	cmp	r0, #0
   1ebf4:	bne	1ebd4 <gen_hostop6+0x13f4>
   1ebf8:	b	1ec00 <gen_hostop6+0x1420>
   1ebfc:	sub	r1, fp, #32
   1ec00:	str	r4, [r1]
   1ec04:	ldr	r0, [r8, #44]	; 0x2c
   1ec08:	clz	r0, r0
   1ec0c:	lsr	r0, r0, #5
   1ec10:	str	r0, [r8, #44]	; 0x2c
   1ec14:	ldr	r0, [r4, #96]	; 0x60
   1ec18:	str	r0, [r5]
   1ec1c:	mov	r0, r8
   1ec20:	sub	sp, fp, #28
   1ec24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ec28:	bl	f24 <abort@plt>
   1ec2c:	.word	0x000287f4
   1ec30:	.word	0x000286a0
   1ec34:	.word	0x00028780
   1ec38:	.word	0x000287b8
   1ec3c:	.word	0x00028854
   1ec40:	.word	0x000287b0
   1ec44:	.word	0x00028654
   1ec48:	.word	0x00028670
   1ec4c:	.word	0x000284c4
   1ec50:	.word	0x00028550
   1ec54:	.word	0x00028308
   1ec58:	.word	0x00028508
   1ec5c:	.word	0x00028598
   1ec60:	.word	0x00028510
   1ec64:	.word	0x00028478
   1ec68:	.word	0x000283dc
   1ec6c:	.word	0x0002822c
   1ec70:	.word	0x0002815c
   1ec74:	.word	0x000281c4
   1ec78:	.word	0x0002805c
   1ec7c:	.word	0x000280d0
   1ec80:	.word	0x00028134
   1ec84:	.word	0x000280c0
   1ec88:	.word	0x00027e68
   1ec8c:	.word	0x00027fc4
   1ec90:	.word	0x00027f50
   1ec94:	.word	0x00027f88
   1ec98:	.word	0x00028024
   1ec9c:	.word	0x00027f7c
   1eca0:	.word	0x00027dcc
   1eca4:	.word	0x00027cfc
   1eca8:	.word	0x00027c80
   1ecac:	.word	0x00027cbc
   1ecb0:	.word	0x00027d54
   1ecb4:	.word	0x00027be0
   1ecb8:	.word	0x00027b64
   1ecbc:	.word	0x00027cb8
   1ecc0:	.word	0x00027ba0
   1ecc4:	.word	0x00027c38
   1ecc8:	.word	0x00027ba0
   1eccc:	.word	0x0000b084

0001ecd0 <gen_load_macplrel>:
   1ecd0:	push	{r4, r5, r6, r7, fp, lr}
   1ecd4:	add	fp, sp, #16
   1ecd8:	ldr	r7, [pc, #144]	; 1ed70 <gen_load_macplrel+0xa0>
   1ecdc:	mov	r4, r0
   1ece0:	mov	r6, r1
   1ece4:	add	r7, pc, r7
   1ece8:	ldrb	r0, [r7, #16]
   1ecec:	cmp	r0, #1
   1ecf0:	bne	1ed50 <gen_load_macplrel+0x80>
   1ecf4:	ldr	r0, [r7, #100]	; 0x64
   1ecf8:	cmn	r0, #1
   1ecfc:	bne	1ed08 <gen_load_macplrel+0x38>
   1ed00:	bl	1305c <alloc_reg>
   1ed04:	str	r0, [r7, #100]	; 0x64
   1ed08:	mov	r0, #97	; 0x61
   1ed0c:	bl	132dc <new_stmt>
   1ed10:	mov	r5, r0
   1ed14:	ldr	r0, [r7, #100]	; 0x64
   1ed18:	cmp	r5, #0
   1ed1c:	str	r0, [r5, #12]
   1ed20:	beq	1ed50 <gen_load_macplrel+0x80>
   1ed24:	orr	r0, r6, #64	; 0x40
   1ed28:	bl	132dc <new_stmt>
   1ed2c:	mov	r2, r5
   1ed30:	str	r4, [r0, #12]
   1ed34:	mov	r1, r2
   1ed38:	ldr	r2, [r2, #16]
   1ed3c:	cmp	r2, #0
   1ed40:	bne	1ed34 <gen_load_macplrel+0x64>
   1ed44:	str	r0, [r1, #16]
   1ed48:	mov	r0, r5
   1ed4c:	pop	{r4, r5, r6, r7, fp, pc}
   1ed50:	orr	r0, r6, #32
   1ed54:	bl	132dc <new_stmt>
   1ed58:	mov	r5, r0
   1ed5c:	ldr	r0, [r7, #44]	; 0x2c
   1ed60:	add	r0, r0, r4
   1ed64:	str	r0, [r5, #12]
   1ed68:	mov	r0, r5
   1ed6c:	pop	{r4, r5, r6, r7, fp, pc}
   1ed70:	.word	0x000277fc

0001ed74 <pcap_nametoaddr>:
   1ed74:	push	{fp, lr}
   1ed78:	mov	fp, sp
   1ed7c:	bl	f0c <gethostbyname@plt>
   1ed80:	cmp	r0, #0
   1ed84:	beq	1edc0 <pcap_nametoaddr+0x4c>
   1ed88:	ldr	r1, [r0, #16]
   1ed8c:	ldr	r2, [r1]
   1ed90:	cmp	r2, #0
   1ed94:	beq	1edb8 <pcap_nametoaddr+0x44>
   1ed98:	add	r1, r1, #4
   1ed9c:	ldr	r3, [r2]
   1eda0:	rev	r3, r3
   1eda4:	str	r3, [r2]
   1eda8:	ldr	r2, [r1], #4
   1edac:	cmp	r2, #0
   1edb0:	bne	1ed9c <pcap_nametoaddr+0x28>
   1edb4:	ldr	r1, [r0, #16]
   1edb8:	mov	r0, r1
   1edbc:	pop	{fp, pc}
   1edc0:	mov	r1, #0
   1edc4:	mov	r0, r1
   1edc8:	pop	{fp, pc}

0001edcc <pcap_nametoaddrinfo>:
   1edcc:	push	{r4, sl, fp, lr}
   1edd0:	add	fp, sp, #8
   1edd4:	sub	sp, sp, #40	; 0x28
   1edd8:	vmov.i32	q8, #0	; 0x00000000
   1eddc:	add	r2, sp, #8
   1ede0:	mov	r4, #0
   1ede4:	add	r1, r2, #16
   1ede8:	mov	r3, r2
   1edec:	vst1.64	{d16-d17}, [r1]
   1edf0:	mov	r1, #12
   1edf4:	vst1.64	{d16-d17}, [r3], r1
   1edf8:	mov	r1, #6
   1edfc:	str	r1, [r3]
   1ee00:	mov	r1, #1
   1ee04:	add	r3, sp, #4
   1ee08:	str	r1, [sp, #16]
   1ee0c:	mov	r1, #0
   1ee10:	bl	f00 <getaddrinfo@plt>
   1ee14:	cmp	r0, #0
   1ee18:	ldr	r1, [sp, #4]
   1ee1c:	movne	r1, r4
   1ee20:	mov	r0, r1
   1ee24:	sub	sp, fp, #8
   1ee28:	pop	{r4, sl, fp, pc}

0001ee2c <pcap_nametonetaddr>:
   1ee2c:	push	{fp, lr}
   1ee30:	mov	fp, sp
   1ee34:	bl	dc8 <getnetbyname@plt>
   1ee38:	cmp	r0, #0
   1ee3c:	ldrne	r0, [r0, #12]
   1ee40:	moveq	r0, #0
   1ee44:	pop	{fp, pc}

0001ee48 <pcap_nametoport>:
   1ee48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ee4c:	add	fp, sp, #24
   1ee50:	mov	r5, r1
   1ee54:	ldr	r1, [pc, #136]	; 1eee4 <pcap_nametoport+0x9c>
   1ee58:	mov	r8, r2
   1ee5c:	mov	r6, r0
   1ee60:	add	r1, pc, r1
   1ee64:	bl	e94 <getservbyname@plt>
   1ee68:	cmp	r0, #0
   1ee6c:	mvn	r4, #0
   1ee70:	mvn	r7, #0
   1ee74:	ldrhne	r0, [r0, #8]
   1ee78:	ldr	r1, [pc, #104]	; 1eee8 <pcap_nametoport+0xa0>
   1ee7c:	rev16ne	r4, r0
   1ee80:	add	r1, pc, r1
   1ee84:	mov	r0, r6
   1ee88:	bl	e94 <getservbyname@plt>
   1ee8c:	cmp	r0, #0
   1ee90:	ldrhne	r0, [r0, #8]
   1ee94:	rev16ne	r7, r0
   1ee98:	cmp	r4, #0
   1ee9c:	bmi	1eec8 <pcap_nametoport+0x80>
   1eea0:	cmp	r7, r4
   1eea4:	mov	r1, #6
   1eea8:	mov	r0, #6
   1eeac:	str	r4, [r5]
   1eeb0:	mvneq	r1, #0
   1eeb4:	cmn	r7, #1
   1eeb8:	movle	r1, r0
   1eebc:	mov	r0, #1
   1eec0:	str	r1, [r8]
   1eec4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eec8:	cmp	r7, #0
   1eecc:	movmi	r0, #0
   1eed0:	movpl	r0, #17
   1eed4:	strpl	r7, [r5]
   1eed8:	strpl	r0, [r8]
   1eedc:	movpl	r0, #1
   1eee0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eee4:	.word	0x0000a344
   1eee8:	.word	0x0000a359

0001eeec <pcap_nametoportrange>:
   1eeec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eef0:	add	fp, sp, #28
   1eef4:	sub	sp, sp, #12
   1eef8:	mov	r7, r1
   1eefc:	ldr	r1, [pc, #428]	; 1f0b0 <pcap_nametoportrange+0x1c4>
   1ef00:	mov	r8, r3
   1ef04:	mov	r9, r2
   1ef08:	add	r2, sp, #8
   1ef0c:	add	r3, sp, #4
   1ef10:	mov	r4, r0
   1ef14:	add	r1, pc, r1
   1ef18:	bl	ed0 <sscanf@plt>
   1ef1c:	cmp	r0, #2
   1ef20:	bne	1ef3c <pcap_nametoportrange+0x50>
   1ef24:	ldr	r0, [sp, #8]
   1ef28:	str	r0, [r7]
   1ef2c:	ldr	r0, [sp, #4]
   1ef30:	str	r0, [r9]
   1ef34:	mvn	r0, #0
   1ef38:	b	1f084 <pcap_nametoportrange+0x198>
   1ef3c:	mov	r0, r4
   1ef40:	bl	dec <strdup@plt>
   1ef44:	mov	r5, #0
   1ef48:	cmp	r0, #0
   1ef4c:	beq	1efe0 <pcap_nametoportrange+0xf4>
   1ef50:	mov	r1, #45	; 0x2d
   1ef54:	mov	r6, r0
   1ef58:	bl	e70 <strchr@plt>
   1ef5c:	cmp	r0, #0
   1ef60:	beq	1efd8 <pcap_nametoportrange+0xec>
   1ef64:	mov	r4, r0
   1ef68:	mov	r0, #0
   1ef6c:	strb	r0, [r4]
   1ef70:	mov	r0, r6
   1ef74:	ldr	r1, [pc, #312]	; 1f0b4 <pcap_nametoportrange+0x1c8>
   1ef78:	add	r1, pc, r1
   1ef7c:	bl	e94 <getservbyname@plt>
   1ef80:	cmp	r0, #0
   1ef84:	mvn	r5, #0
   1ef88:	mvn	sl, #0
   1ef8c:	ldrhne	r0, [r0, #8]
   1ef90:	ldr	r1, [pc, #288]	; 1f0b8 <pcap_nametoportrange+0x1cc>
   1ef94:	rev16ne	r5, r0
   1ef98:	add	r1, pc, r1
   1ef9c:	mov	r0, r6
   1efa0:	bl	e94 <getservbyname@plt>
   1efa4:	cmp	r0, #0
   1efa8:	ldrhne	r0, [r0, #8]
   1efac:	rev16ne	sl, r0
   1efb0:	cmp	r5, #0
   1efb4:	bmi	1efec <pcap_nametoportrange+0x100>
   1efb8:	cmp	sl, r5
   1efbc:	str	r5, [r7]
   1efc0:	mov	r7, #6
   1efc4:	mov	r0, #6
   1efc8:	mvneq	r7, #0
   1efcc:	cmn	sl, #1
   1efd0:	movle	r7, r0
   1efd4:	b	1effc <pcap_nametoportrange+0x110>
   1efd8:	mov	r0, r6
   1efdc:	bl	dbc <free@plt>
   1efe0:	mov	r0, r5
   1efe4:	sub	sp, fp, #28
   1efe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1efec:	cmp	sl, #0
   1eff0:	bmi	1f098 <pcap_nametoportrange+0x1ac>
   1eff4:	str	sl, [r7]
   1eff8:	mov	r7, #17
   1effc:	str	r7, [r8]
   1f000:	add	r4, r4, #1
   1f004:	ldr	r1, [pc, #176]	; 1f0bc <pcap_nametoportrange+0x1d0>
   1f008:	mov	r0, r4
   1f00c:	add	r1, pc, r1
   1f010:	bl	e94 <getservbyname@plt>
   1f014:	cmp	r0, #0
   1f018:	mvn	r5, #0
   1f01c:	mvn	sl, #0
   1f020:	ldrhne	r0, [r0, #8]
   1f024:	ldr	r1, [pc, #148]	; 1f0c0 <pcap_nametoportrange+0x1d4>
   1f028:	rev16ne	r5, r0
   1f02c:	add	r1, pc, r1
   1f030:	mov	r0, r4
   1f034:	bl	e94 <getservbyname@plt>
   1f038:	cmp	r0, #0
   1f03c:	ldrhne	r0, [r0, #8]
   1f040:	rev16ne	sl, r0
   1f044:	cmp	r5, #0
   1f048:	bmi	1f06c <pcap_nametoportrange+0x180>
   1f04c:	cmp	sl, r5
   1f050:	mov	r0, #6
   1f054:	mov	r1, #6
   1f058:	str	r5, [r9]
   1f05c:	mvneq	r0, #0
   1f060:	cmn	sl, #1
   1f064:	movle	r0, r1
   1f068:	b	1f07c <pcap_nametoportrange+0x190>
   1f06c:	cmp	sl, #0
   1f070:	bmi	1f098 <pcap_nametoportrange+0x1ac>
   1f074:	mov	r0, #17
   1f078:	str	sl, [r9]
   1f07c:	cmp	r0, r7
   1f080:	mvnne	r0, #0
   1f084:	mov	r5, #1
   1f088:	str	r0, [r8]
   1f08c:	mov	r0, r5
   1f090:	sub	sp, fp, #28
   1f094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f098:	mov	r0, r6
   1f09c:	bl	dbc <free@plt>
   1f0a0:	mov	r5, #0
   1f0a4:	mov	r0, r5
   1f0a8:	sub	sp, fp, #28
   1f0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0b0:	.word	0x0000b5f4
   1f0b4:	.word	0x0000a22c
   1f0b8:	.word	0x0000a241
   1f0bc:	.word	0x0000a198
   1f0c0:	.word	0x0000a1ad

0001f0c4 <pcap_nametoproto>:
   1f0c4:	push	{fp, lr}
   1f0c8:	mov	fp, sp
   1f0cc:	bl	d98 <getprotobyname@plt>
   1f0d0:	cmp	r0, #0
   1f0d4:	ldrne	r0, [r0, #8]
   1f0d8:	mvneq	r0, #0
   1f0dc:	pop	{fp, pc}

0001f0e0 <pcap_nametoeproto>:
   1f0e0:	push	{r4, r5, r6, sl, fp, lr}
   1f0e4:	add	fp, sp, #16
   1f0e8:	mov	r5, r0
   1f0ec:	ldr	r0, [pc, #80]	; 1f144 <pcap_nametoeproto+0x64>
   1f0f0:	mvn	r4, #0
   1f0f4:	ldr	r0, [pc, r0]
   1f0f8:	cmp	r0, #0
   1f0fc:	beq	1f130 <pcap_nametoeproto+0x50>
   1f100:	ldr	r1, [pc, #64]	; 1f148 <pcap_nametoeproto+0x68>
   1f104:	add	r1, pc, r1
   1f108:	add	r6, r1, #4
   1f10c:	mov	r1, r5
   1f110:	bl	d68 <strcmp@plt>
   1f114:	cmp	r0, #0
   1f118:	beq	1f138 <pcap_nametoeproto+0x58>
   1f11c:	ldr	r0, [r6, #4]
   1f120:	add	r1, r6, #8
   1f124:	mov	r6, r1
   1f128:	cmp	r0, #0
   1f12c:	bne	1f10c <pcap_nametoeproto+0x2c>
   1f130:	mov	r0, r4
   1f134:	pop	{r4, r5, r6, sl, fp, pc}
   1f138:	ldrh	r4, [r6]
   1f13c:	mov	r0, r4
   1f140:	pop	{r4, r5, r6, sl, fp, pc}
   1f144:	.word	0x00026fe8
   1f148:	.word	0x00026fd8

0001f14c <pcap_nametollc>:
   1f14c:	push	{r4, r5, fp, lr}
   1f150:	add	fp, sp, #8
   1f154:	mov	r4, r0
   1f158:	ldr	r0, [pc, #156]	; 1f1fc <pcap_nametollc+0xb0>
   1f15c:	mov	r1, r4
   1f160:	add	r0, pc, r0
   1f164:	bl	d68 <strcmp@plt>
   1f168:	cmp	r0, #0
   1f16c:	beq	1f1d4 <pcap_nametollc+0x88>
   1f170:	ldr	r0, [pc, #140]	; 1f204 <pcap_nametollc+0xb8>
   1f174:	mov	r1, r4
   1f178:	add	r0, pc, r0
   1f17c:	bl	d68 <strcmp@plt>
   1f180:	ldr	r5, [pc, #128]	; 1f208 <pcap_nametollc+0xbc>
   1f184:	cmp	r0, #0
   1f188:	add	r5, pc, r5
   1f18c:	beq	1f1e4 <pcap_nametollc+0x98>
   1f190:	ldr	r0, [pc, #116]	; 1f20c <pcap_nametollc+0xc0>
   1f194:	mov	r1, r4
   1f198:	add	r0, pc, r0
   1f19c:	bl	d68 <strcmp@plt>
   1f1a0:	cmp	r0, #0
   1f1a4:	beq	1f1f0 <pcap_nametollc+0xa4>
   1f1a8:	ldr	r0, [pc, #96]	; 1f210 <pcap_nametollc+0xc4>
   1f1ac:	mov	r1, r4
   1f1b0:	add	r0, pc, r0
   1f1b4:	bl	d68 <strcmp@plt>
   1f1b8:	mov	r1, r0
   1f1bc:	mvn	r0, #0
   1f1c0:	cmp	r1, #0
   1f1c4:	popne	{r4, r5, fp, pc}
   1f1c8:	add	r0, r5, #24
   1f1cc:	ldrh	r0, [r0, #4]
   1f1d0:	pop	{r4, r5, fp, pc}
   1f1d4:	ldr	r0, [pc, #36]	; 1f200 <pcap_nametollc+0xb4>
   1f1d8:	add	r0, pc, r0
   1f1dc:	ldrh	r0, [r0, #4]
   1f1e0:	pop	{r4, r5, fp, pc}
   1f1e4:	add	r0, r5, #8
   1f1e8:	ldrh	r0, [r0, #4]
   1f1ec:	pop	{r4, r5, fp, pc}
   1f1f0:	add	r0, r5, #16
   1f1f4:	ldrh	r0, [r0, #4]
   1f1f8:	pop	{r4, r5, fp, pc}
   1f1fc:	.word	0x0000b48c
   1f200:	.word	0x00026b58
   1f204:	.word	0x0000b478
   1f208:	.word	0x00026ba8
   1f20c:	.word	0x0000b45c
   1f210:	.word	0x0000b448

0001f214 <__pcap_atoin>:
   1f214:	push	{fp, lr}
   1f218:	mov	fp, sp
   1f21c:	mov	lr, #0
   1f220:	mov	ip, #0
   1f224:	str	lr, [r1]
   1f228:	add	r0, r0, #1
   1f22c:	mov	r2, #0
   1f230:	b	1f244 <__pcap_atoin+0x30>
   1f234:	add	r2, r2, r2, lsl #2
   1f238:	add	r0, r0, #1
   1f23c:	add	r2, r3, r2, lsl #1
   1f240:	sub	r2, r2, #48	; 0x30
   1f244:	ldrb	r3, [r0, #-1]
   1f248:	cmp	r3, #0
   1f24c:	cmpne	r3, #46	; 0x2e
   1f250:	bne	1f234 <__pcap_atoin+0x20>
   1f254:	uxtb	r2, r2
   1f258:	add	ip, ip, #8
   1f25c:	orr	lr, r2, lr, lsl #8
   1f260:	str	lr, [r1]
   1f264:	ldrb	r2, [r0, #-1]
   1f268:	cmp	r2, #0
   1f26c:	bne	1f228 <__pcap_atoin+0x14>
   1f270:	mov	r0, ip
   1f274:	pop	{fp, pc}

0001f278 <__pcap_atodn>:
   1f278:	push	{r4, r5, fp, lr}
   1f27c:	add	fp, sp, #8
   1f280:	sub	sp, sp, #8
   1f284:	mov	r4, r1
   1f288:	ldr	r1, [pc, #76]	; 1f2dc <__pcap_atodn+0x64>
   1f28c:	mov	r2, sp
   1f290:	add	r3, sp, #4
   1f294:	mov	r5, r0
   1f298:	add	r1, pc, r1
   1f29c:	bl	ed0 <sscanf@plt>
   1f2a0:	cmp	r0, #2
   1f2a4:	ldreq	r1, [sp]
   1f2a8:	ldreq	r0, [sp, #4]
   1f2ac:	lsleq	r1, r1, #10
   1f2b0:	bfceq	r0, #10, #22
   1f2b4:	uxtheq	r1, r1
   1f2b8:	orreq	r0, r0, r1
   1f2bc:	streq	r0, [r4]
   1f2c0:	moveq	r0, #32
   1f2c4:	subeq	sp, fp, #8
   1f2c8:	popeq	{r4, r5, fp, pc}
   1f2cc:	ldr	r0, [pc, #12]	; 1f2e0 <__pcap_atodn+0x68>
   1f2d0:	mov	r1, r5
   1f2d4:	add	r0, pc, r0
   1f2d8:	bl	214c <sf_bpf_error>
   1f2dc:	.word	0x0000b2e7
   1f2e0:	.word	0x0000b2b1

0001f2e4 <pcap_ether_aton>:
   1f2e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f2e8:	add	fp, sp, #24
   1f2ec:	mov	r4, r0
   1f2f0:	mov	r0, #6
   1f2f4:	bl	e34 <malloc@plt>
   1f2f8:	mov	r8, r0
   1f2fc:	cmp	r0, #0
   1f300:	beq	1f3c4 <pcap_ether_aton+0xe0>
   1f304:	mov	r9, #1
   1f308:	movw	r7, #8195	; 0x2003
   1f30c:	mov	r5, r8
   1f310:	ldrb	r6, [r4]
   1f314:	sub	r0, r6, #45	; 0x2d
   1f318:	cmp	r0, #13
   1f31c:	bls	1f33c <pcap_ether_aton+0x58>
   1f320:	b	1f34c <pcap_ether_aton+0x68>
   1f324:	mov	r4, r0
   1f328:	strb	r3, [r5], #1
   1f32c:	ldrb	r6, [r4]
   1f330:	sub	r0, r6, #45	; 0x2d
   1f334:	cmp	r0, #13
   1f338:	bhi	1f34c <pcap_ether_aton+0x68>
   1f33c:	tst	r7, r9, lsl r0
   1f340:	beq	1f34c <pcap_ether_aton+0x68>
   1f344:	ldrb	r6, [r4, #1]!
   1f348:	b	1f354 <pcap_ether_aton+0x70>
   1f34c:	cmp	r6, #0
   1f350:	beq	1f3c4 <pcap_ether_aton+0xe0>
   1f354:	bl	e4c <__ctype_b_loc@plt>
   1f358:	ldr	r2, [r0]
   1f35c:	mvn	r1, #47	; 0x2f
   1f360:	add	r0, r2, r6, lsl #1
   1f364:	ldrh	r3, [r0]
   1f368:	add	r0, r4, #1
   1f36c:	tst	r3, #2048	; 0x800
   1f370:	bne	1f380 <pcap_ether_aton+0x9c>
   1f374:	tst	r3, #512	; 0x200
   1f378:	mvn	r1, #86	; 0x56
   1f37c:	mvneq	r1, #54	; 0x36
   1f380:	add	r3, r1, r6
   1f384:	ldrb	r1, [r0]
   1f388:	add	r2, r2, r1, lsl #1
   1f38c:	ldrh	r2, [r2]
   1f390:	tst	r2, #4096	; 0x1000
   1f394:	beq	1f324 <pcap_ether_aton+0x40>
   1f398:	lsl	r0, r3, #4
   1f39c:	mvn	r3, #47	; 0x2f
   1f3a0:	tst	r2, #2048	; 0x800
   1f3a4:	bne	1f3b4 <pcap_ether_aton+0xd0>
   1f3a8:	tst	r2, #512	; 0x200
   1f3ac:	mvn	r3, #86	; 0x56
   1f3b0:	mvneq	r3, #54	; 0x36
   1f3b4:	add	r1, r3, r1
   1f3b8:	add	r4, r4, #2
   1f3bc:	orr	r3, r1, r0
   1f3c0:	b	1f328 <pcap_ether_aton+0x44>
   1f3c4:	mov	r0, r8
   1f3c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001f3cc <pcap_ether_hostton>:
   1f3cc:	push	{r4, r5, r6, sl, fp, lr}
   1f3d0:	add	fp, sp, #16
   1f3d4:	ldr	r5, [pc, #188]	; 1f498 <pcap_ether_hostton+0xcc>
   1f3d8:	mov	r4, r0
   1f3dc:	add	r5, pc, r5
   1f3e0:	ldr	r0, [r5, #4]
   1f3e4:	cmp	r0, #0
   1f3e8:	beq	1f404 <pcap_ether_hostton+0x38>
   1f3ec:	ldr	r0, [pc, #176]	; 1f4a4 <pcap_ether_hostton+0xd8>
   1f3f0:	ldr	r0, [pc, r0]
   1f3f4:	cmp	r0, #0
   1f3f8:	beq	1f48c <pcap_ether_hostton+0xc0>
   1f3fc:	bl	df8 <rewind@plt>
   1f400:	b	1f430 <pcap_ether_hostton+0x64>
   1f404:	ldr	r0, [pc, #144]	; 1f49c <pcap_ether_hostton+0xd0>
   1f408:	ldr	r1, [pc, #144]	; 1f4a0 <pcap_ether_hostton+0xd4>
   1f40c:	add	r0, pc, r0
   1f410:	add	r1, pc, r1
   1f414:	bl	d8c <fopen@plt>
   1f418:	str	r0, [r5]
   1f41c:	cmp	r0, #0
   1f420:	ldr	r1, [r5, #4]
   1f424:	add	r1, r1, #1
   1f428:	str	r1, [r5, #4]
   1f42c:	beq	1f48c <pcap_ether_hostton+0xc0>
   1f430:	mov	r5, #0
   1f434:	ldr	r0, [pc, #108]	; 1f4a8 <pcap_ether_hostton+0xdc>
   1f438:	ldr	r0, [pc, r0]
   1f43c:	bl	24540 <pcap_next_etherent>
   1f440:	cmp	r0, #0
   1f444:	beq	1f484 <pcap_ether_hostton+0xb8>
   1f448:	mov	r6, r0
   1f44c:	add	r0, r0, #6
   1f450:	mov	r1, r4
   1f454:	bl	d68 <strcmp@plt>
   1f458:	cmp	r0, #0
   1f45c:	bne	1f434 <pcap_ether_hostton+0x68>
   1f460:	mov	r0, #6
   1f464:	bl	e34 <malloc@plt>
   1f468:	cmp	r0, #0
   1f46c:	beq	1f484 <pcap_ether_hostton+0xb8>
   1f470:	ldrh	r1, [r6, #4]
   1f474:	mov	r5, r0
   1f478:	strh	r1, [r0, #4]
   1f47c:	ldr	r1, [r6]
   1f480:	str	r1, [r0]
   1f484:	mov	r0, r5
   1f488:	pop	{r4, r5, r6, sl, fp, pc}
   1f48c:	mov	r5, #0
   1f490:	mov	r0, r5
   1f494:	pop	{r4, r5, r6, sl, fp, pc}
   1f498:	.word	0x00027170
   1f49c:	.word	0x0000b197
   1f4a0:	.word	0x0000c5fc
   1f4a4:	.word	0x0002715c
   1f4a8:	.word	0x00027114

0001f4ac <__pcap_nametodnaddr>:
   1f4ac:	push	{fp, lr}
   1f4b0:	mov	fp, sp
   1f4b4:	mov	r1, r0
   1f4b8:	ldr	r0, [pc, #4]	; 1f4c4 <__pcap_nametodnaddr+0x18>
   1f4bc:	add	r0, pc, r0
   1f4c0:	bl	214c <sf_bpf_error>
   1f4c4:	.word	0x0000b0f3

0001f4c8 <sf_bpf_optimize>:
   1f4c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f4cc:	add	fp, sp, #28
   1f4d0:	sub	sp, sp, #36	; 0x24
   1f4d4:	ldr	r9, [r0]
   1f4d8:	ldr	r6, [pc, #2128]	; 1fd30 <sf_bpf_optimize+0x868>
   1f4dc:	mov	sl, r0
   1f4e0:	add	r6, pc, r6
   1f4e4:	ldr	r4, [r6, #4]
   1f4e8:	add	r0, r4, #1
   1f4ec:	str	r0, [r6, #4]
   1f4f0:	mov	r0, r9
   1f4f4:	bl	2442c <count_blocks>
   1f4f8:	mov	r1, #4
   1f4fc:	mov	r8, r0
   1f500:	bl	d5c <calloc@plt>
   1f504:	ldr	r1, [pc, #2088]	; 1fd34 <sf_bpf_optimize+0x86c>
   1f508:	cmp	r0, #0
   1f50c:	add	r1, pc, r1
   1f510:	str	r0, [r1]
   1f514:	beq	1f924 <sf_bpf_optimize+0x45c>
   1f518:	mov	r0, #0
   1f51c:	str	r0, [r6, #16]
   1f520:	add	r0, r4, #2
   1f524:	str	r0, [r6, #4]
   1f528:	mov	r0, r9
   1f52c:	bl	24488 <number_blks_r>
   1f530:	ldr	r7, [r6, #16]
   1f534:	mov	r1, #4
   1f538:	lsl	r0, r7, #1
   1f53c:	str	r0, [r6, #36]	; 0x24
   1f540:	bl	d5c <calloc@plt>
   1f544:	mov	r5, r0
   1f548:	ldr	r0, [pc, #2024]	; 1fd38 <sf_bpf_optimize+0x870>
   1f54c:	cmp	r5, #0
   1f550:	add	r0, pc, r0
   1f554:	str	r5, [r0]
   1f558:	beq	1f924 <sf_bpf_optimize+0x45c>
   1f55c:	mov	r0, r7
   1f560:	mov	r1, #4
   1f564:	mov	r4, r6
   1f568:	bl	d5c <calloc@plt>
   1f56c:	ldr	r1, [pc, #1992]	; 1fd3c <sf_bpf_optimize+0x874>
   1f570:	cmp	r0, #0
   1f574:	add	r1, pc, r1
   1f578:	str	r0, [r1]
   1f57c:	beq	1f924 <sf_bpf_optimize+0x45c>
   1f580:	mov	r0, #1
   1f584:	add	r0, r0, r7, lsr #5
   1f588:	str	r0, [r4, #24]
   1f58c:	ubfx	r6, r7, #4, #27
   1f590:	add	r1, r6, #1
   1f594:	add	r0, r1, r0
   1f598:	str	r1, [r4, #40]	; 0x28
   1f59c:	str	r1, [sp, #20]
   1f5a0:	mul	r0, r7, r0
   1f5a4:	lsl	r0, r0, #3
   1f5a8:	bl	e34 <malloc@plt>
   1f5ac:	ldr	r1, [pc, #1932]	; 1fd40 <sf_bpf_optimize+0x878>
   1f5b0:	cmp	r0, #0
   1f5b4:	add	r1, pc, r1
   1f5b8:	str	r0, [r1]
   1f5bc:	beq	1f924 <sf_bpf_optimize+0x45c>
   1f5c0:	cmp	r8, #1
   1f5c4:	str	sl, [sp, #8]
   1f5c8:	str	r0, [r4, #20]
   1f5cc:	str	r9, [sp, #24]
   1f5d0:	blt	1f620 <sf_bpf_optimize+0x158>
   1f5d4:	str	r6, [sp, #4]
   1f5d8:	str	r5, [sp, #12]
   1f5dc:	str	r7, [sp, #16]
   1f5e0:	lsr	r6, r7, #5
   1f5e4:	sub	r2, r8, #1
   1f5e8:	and	r1, r8, #3
   1f5ec:	ldr	r7, [pc, #1872]	; 1fd44 <sf_bpf_optimize+0x87c>
   1f5f0:	cmp	r2, #3
   1f5f4:	ldr	r7, [pc, r7]
   1f5f8:	str	r2, [sp]
   1f5fc:	str	r7, [sp, #32]
   1f600:	str	r6, [sp, #28]
   1f604:	bcs	1f630 <sf_bpf_optimize+0x168>
   1f608:	mov	r4, #0
   1f60c:	ldr	r5, [sp, #32]
   1f610:	ldr	r6, [sp, #28]
   1f614:	cmp	r1, #0
   1f618:	bne	1f6b0 <sf_bpf_optimize+0x1e8>
   1f61c:	b	1f6d0 <sf_bpf_optimize+0x208>
   1f620:	str	r0, [r4, #28]
   1f624:	str	r0, [r4, #32]
   1f628:	mov	r6, #0
   1f62c:	b	1f8e0 <sf_bpf_optimize+0x418>
   1f630:	mov	r2, #4
   1f634:	mov	r4, #12
   1f638:	sub	ip, r8, r1
   1f63c:	add	r7, r7, #8
   1f640:	add	sl, r2, r6, lsl #2
   1f644:	mov	r2, #8
   1f648:	add	r3, r2, r6, lsl #3
   1f64c:	mov	r2, #16
   1f650:	add	r9, r2, r6, lsl #4
   1f654:	add	r2, r6, r6, lsl #1
   1f658:	add	r2, r4, r2, lsl #2
   1f65c:	mov	r4, #0
   1f660:	ldr	r6, [r7, #-8]
   1f664:	add	r4, r4, #4
   1f668:	cmp	ip, r4
   1f66c:	str	r0, [r6, #104]	; 0x68
   1f670:	add	r6, r0, sl
   1f674:	ldr	lr, [r7, #-4]
   1f678:	str	r6, [lr, #104]	; 0x68
   1f67c:	add	r6, r0, r3
   1f680:	ldr	r5, [r7]
   1f684:	str	r6, [r5, #104]	; 0x68
   1f688:	add	r6, r0, r2
   1f68c:	add	r0, r0, r9
   1f690:	ldr	r5, [r7, #4]
   1f694:	add	r7, r7, #16
   1f698:	str	r6, [r5, #104]	; 0x68
   1f69c:	bne	1f660 <sf_bpf_optimize+0x198>
   1f6a0:	ldr	r5, [sp, #32]
   1f6a4:	ldr	r6, [sp, #28]
   1f6a8:	cmp	r1, #0
   1f6ac:	beq	1f6d0 <sf_bpf_optimize+0x208>
   1f6b0:	mov	r3, #4
   1f6b4:	add	r2, r5, r4, lsl #2
   1f6b8:	add	r3, r3, r6, lsl #2
   1f6bc:	ldr	r7, [r2], #4
   1f6c0:	subs	r1, r1, #1
   1f6c4:	str	r0, [r7, #104]	; 0x68
   1f6c8:	add	r0, r0, r3
   1f6cc:	bne	1f6bc <sf_bpf_optimize+0x1f4>
   1f6d0:	ldr	r1, [pc, #1648]	; 1fd48 <sf_bpf_optimize+0x880>
   1f6d4:	ldr	r2, [sp]
   1f6d8:	ldr	sl, [sp, #16]
   1f6dc:	add	r1, pc, r1
   1f6e0:	cmp	r2, #3
   1f6e4:	str	r0, [r1, #28]
   1f6e8:	and	r1, r8, #3
   1f6ec:	bcs	1f704 <sf_bpf_optimize+0x23c>
   1f6f0:	mov	r3, #0
   1f6f4:	ldr	r6, [sp, #32]
   1f6f8:	cmp	r1, #0
   1f6fc:	bne	1f780 <sf_bpf_optimize+0x2b8>
   1f700:	b	1f7a4 <sf_bpf_optimize+0x2dc>
   1f704:	mov	r2, #4
   1f708:	add	r3, r6, r6, lsl #1
   1f70c:	sub	r7, r8, r1
   1f710:	add	r5, r5, #8
   1f714:	add	ip, r2, r6, lsl #2
   1f718:	mov	r2, #8
   1f71c:	add	lr, r2, r6, lsl #3
   1f720:	mov	r2, #16
   1f724:	add	r9, r2, r6, lsl #4
   1f728:	mov	r6, #12
   1f72c:	add	r6, r6, r3, lsl #2
   1f730:	mov	r3, #0
   1f734:	ldr	r4, [r5, #-8]
   1f738:	add	r3, r3, #4
   1f73c:	cmp	r7, r3
   1f740:	str	r0, [r4, #108]	; 0x6c
   1f744:	add	r4, r0, ip
   1f748:	ldr	r2, [r5, #-4]
   1f74c:	str	r4, [r2, #108]	; 0x6c
   1f750:	add	r2, r0, lr
   1f754:	ldr	r4, [r5]
   1f758:	str	r2, [r4, #108]	; 0x6c
   1f75c:	add	r2, r0, r6
   1f760:	add	r0, r0, r9
   1f764:	ldr	r4, [r5, #4]
   1f768:	add	r5, r5, #16
   1f76c:	str	r2, [r4, #108]	; 0x6c
   1f770:	bne	1f734 <sf_bpf_optimize+0x26c>
   1f774:	ldr	r6, [sp, #32]
   1f778:	cmp	r1, #0
   1f77c:	beq	1f7a4 <sf_bpf_optimize+0x2dc>
   1f780:	ldr	r7, [sp, #28]
   1f784:	add	r2, r6, r3, lsl #2
   1f788:	mov	r3, #4
   1f78c:	add	r3, r3, r7, lsl #2
   1f790:	ldr	r7, [r2], #4
   1f794:	subs	r1, r1, #1
   1f798:	str	r0, [r7, #108]	; 0x6c
   1f79c:	add	r0, r0, r3
   1f7a0:	bne	1f790 <sf_bpf_optimize+0x2c8>
   1f7a4:	ldr	r1, [pc, #1440]	; 1fd4c <sf_bpf_optimize+0x884>
   1f7a8:	ldr	r7, [sp, #12]
   1f7ac:	cmp	r8, #1
   1f7b0:	add	r1, pc, r1
   1f7b4:	str	r0, [r1, #32]
   1f7b8:	ldr	r1, [sp, #20]
   1f7bc:	ldr	r2, [r6]
   1f7c0:	add	r1, r0, r1, lsl #2
   1f7c4:	mov	r3, r2
   1f7c8:	str	r1, [r2, #80]	; 0x50
   1f7cc:	mov	r1, #0
   1f7d0:	str	r0, [r2, #56]	; 0x38
   1f7d4:	str	r1, [r3, #48]!	; 0x30
   1f7d8:	str	r3, [r7]
   1f7dc:	mov	r3, r2
   1f7e0:	str	sl, [r3, #72]!	; 0x48
   1f7e4:	ldr	r7, [pc, #1380]	; 1fd50 <sf_bpf_optimize+0x888>
   1f7e8:	ldr	r7, [pc, r7]
   1f7ec:	ldr	r9, [sp, #24]
   1f7f0:	str	r3, [r7, sl, lsl #2]
   1f7f4:	ldr	r3, [sp, #4]
   1f7f8:	str	r2, [r2, #88]	; 0x58
   1f7fc:	str	r2, [r2, #64]	; 0x40
   1f800:	beq	1f880 <sf_bpf_optimize+0x3b8>
   1f804:	mov	r2, #8
   1f808:	mov	r7, #12
   1f80c:	mov	r6, #1
   1f810:	add	ip, r2, r3, lsl #3
   1f814:	add	r3, r3, r3, lsl #1
   1f818:	add	lr, r7, r3, lsl #2
   1f81c:	lsl	r7, sl, #2
   1f820:	ldr	r5, [pc, #1324]	; 1fd54 <sf_bpf_optimize+0x88c>
   1f824:	add	r4, r0, lr
   1f828:	add	r0, r0, ip
   1f82c:	ldr	r5, [pc, r5]
   1f830:	ldr	r3, [r5, r6, lsl #2]
   1f834:	ldr	r2, [pc, #1308]	; 1fd58 <sf_bpf_optimize+0x890>
   1f838:	ldr	r2, [pc, r2]
   1f83c:	mov	r5, r3
   1f840:	str	r4, [r3, #80]	; 0x50
   1f844:	str	r0, [r3, #56]	; 0x38
   1f848:	mov	r4, r3
   1f84c:	str	r6, [r5, #48]!	; 0x30
   1f850:	str	r5, [r2, r6, lsl #2]
   1f854:	add	r2, sl, r6
   1f858:	str	r2, [r4, #72]!	; 0x48
   1f85c:	ldr	r2, [pc, #1272]	; 1fd5c <sf_bpf_optimize+0x894>
   1f860:	ldr	r2, [pc, r2]
   1f864:	add	r2, r2, r7
   1f868:	str	r4, [r2, r6, lsl #2]
   1f86c:	add	r6, r6, #1
   1f870:	str	r3, [r3, #88]	; 0x58
   1f874:	str	r3, [r3, #64]	; 0x40
   1f878:	cmp	r8, r6
   1f87c:	bne	1f820 <sf_bpf_optimize+0x358>
   1f880:	ldr	r0, [pc, #1240]	; 1fd60 <sf_bpf_optimize+0x898>
   1f884:	mov	r2, #0
   1f888:	ldr	r0, [pc, r0]
   1f88c:	b	1f8a4 <sf_bpf_optimize+0x3dc>
   1f890:	add	r1, r1, r3
   1f894:	add	r2, r2, #1
   1f898:	add	r1, r1, #1
   1f89c:	cmp	r2, r8
   1f8a0:	beq	1f8d4 <sf_bpf_optimize+0x40c>
   1f8a4:	ldr	r3, [r0, r2, lsl #2]
   1f8a8:	ldr	r7, [r3, #4]
   1f8ac:	mov	r3, #0
   1f8b0:	cmp	r7, #0
   1f8b4:	beq	1f890 <sf_bpf_optimize+0x3c8>
   1f8b8:	ldr	r6, [r7]
   1f8bc:	ldr	r7, [r7, #16]
   1f8c0:	cmn	r6, #1
   1f8c4:	addne	r3, r3, #1
   1f8c8:	cmp	r7, #0
   1f8cc:	bne	1f8b8 <sf_bpf_optimize+0x3f0>
   1f8d0:	b	1f890 <sf_bpf_optimize+0x3c8>
   1f8d4:	ldr	r4, [pc, #1160]	; 1fd64 <sf_bpf_optimize+0x89c>
   1f8d8:	add	r6, r1, r1, lsl #1
   1f8dc:	add	r4, pc, r4
   1f8e0:	mov	r0, r6
   1f8e4:	mov	r1, #8
   1f8e8:	str	r6, [r4, #48]	; 0x30
   1f8ec:	bl	d5c <calloc@plt>
   1f8f0:	mov	r7, r0
   1f8f4:	ldr	r0, [pc, #1132]	; 1fd68 <sf_bpf_optimize+0x8a0>
   1f8f8:	mov	r1, #20
   1f8fc:	add	r0, pc, r0
   1f900:	str	r7, [r0]
   1f904:	mov	r0, r6
   1f908:	bl	d5c <calloc@plt>
   1f90c:	ldr	r1, [pc, #1112]	; 1fd6c <sf_bpf_optimize+0x8a4>
   1f910:	cmp	r7, #0
   1f914:	cmpne	r0, #0
   1f918:	add	r1, pc, r1
   1f91c:	str	r0, [r1]
   1f920:	bne	1f930 <sf_bpf_optimize+0x468>
   1f924:	ldr	r0, [pc, #1132]	; 1fd98 <sf_bpf_optimize+0x8d0>
   1f928:	add	r0, pc, r0
   1f92c:	bl	214c <sf_bpf_error>
   1f930:	mov	r0, r9
   1f934:	mov	r1, #0
   1f938:	mov	r5, #0
   1f93c:	bl	1fd9c <opt_loop>
   1f940:	mov	r0, r9
   1f944:	mov	r1, #1
   1f948:	bl	1fd9c <opt_loop>
   1f94c:	ldr	sl, [r4, #16]
   1f950:	and	r0, sl, #3
   1f954:	str	r0, [sp, #20]
   1f958:	sub	r0, sl, r0
   1f95c:	str	r0, [sp, #16]
   1f960:	sub	r0, sl, #1
   1f964:	str	r0, [sp, #28]
   1f968:	sub	r0, sl, #2
   1f96c:	str	r0, [sp, #12]
   1f970:	cmp	sl, #1
   1f974:	bge	1f98c <sf_bpf_optimize+0x4c4>
   1f978:	b	1fa04 <sf_bpf_optimize+0x53c>
   1f97c:	cmp	r2, #0
   1f980:	bne	1fc5c <sf_bpf_optimize+0x794>
   1f984:	cmp	sl, #1
   1f988:	blt	1fa04 <sf_bpf_optimize+0x53c>
   1f98c:	ldr	r0, [pc, #988]	; 1fd70 <sf_bpf_optimize+0x8a8>
   1f990:	mov	r1, #0
   1f994:	ldr	r0, [pc, r0]
   1f998:	ldr	r2, [sp, #28]
   1f99c:	ldr	r7, [sp, #16]
   1f9a0:	cmp	r2, #3
   1f9a4:	bcc	1f9e0 <sf_bpf_optimize+0x518>
   1f9a8:	add	r2, r0, #8
   1f9ac:	mov	r1, #0
   1f9b0:	ldr	r3, [r2, #-8]
   1f9b4:	add	r1, r1, #4
   1f9b8:	cmp	r7, r1
   1f9bc:	str	r5, [r3, #100]	; 0x64
   1f9c0:	ldr	r3, [r2, #-4]
   1f9c4:	str	r5, [r3, #100]	; 0x64
   1f9c8:	ldr	r3, [r2]
   1f9cc:	str	r5, [r3, #100]	; 0x64
   1f9d0:	ldr	r3, [r2, #4]
   1f9d4:	add	r2, r2, #16
   1f9d8:	str	r5, [r3, #100]	; 0x64
   1f9dc:	bne	1f9b0 <sf_bpf_optimize+0x4e8>
   1f9e0:	ldr	r2, [sp, #20]
   1f9e4:	cmp	r2, #0
   1f9e8:	beq	1fa04 <sf_bpf_optimize+0x53c>
   1f9ec:	add	r0, r0, r1, lsl #2
   1f9f0:	ldr	r1, [sp, #20]
   1f9f4:	ldr	r2, [r0], #4
   1f9f8:	subs	r1, r1, #1
   1f9fc:	str	r5, [r2, #100]	; 0x64
   1fa00:	bne	1f9f4 <sf_bpf_optimize+0x52c>
   1fa04:	ldr	r0, [r4, #4]
   1fa08:	add	r8, r0, #1
   1fa0c:	mov	r0, r9
   1fa10:	str	r8, [r4, #4]
   1fa14:	bl	243e0 <make_marks>
   1fa18:	ldr	r0, [sp, #28]
   1fa1c:	cmp	r0, #1
   1fa20:	blt	1fbd4 <sf_bpf_optimize+0x70c>
   1fa24:	ldr	r0, [pc, #840]	; 1fd74 <sf_bpf_optimize+0x8ac>
   1fa28:	ldr	r0, [pc, r0]
   1fa2c:	ldr	r1, [sp, #12]
   1fa30:	ldr	lr, [sp, #28]
   1fa34:	mov	r2, lr
   1fa38:	mov	lr, r1
   1fa3c:	cmp	r2, sl
   1fa40:	blt	1fa74 <sf_bpf_optimize+0x5ac>
   1fa44:	b	1fa58 <sf_bpf_optimize+0x590>
   1fa48:	ldr	r1, [r4, #100]	; 0x64
   1fa4c:	cmp	r1, #0
   1fa50:	moveq	r1, r4
   1fa54:	str	r1, [r3, #100]	; 0x64
   1fa58:	sub	r1, lr, #1
   1fa5c:	cmp	lr, #0
   1fa60:	ble	1fbd4 <sf_bpf_optimize+0x70c>
   1fa64:	mov	r2, lr
   1fa68:	mov	lr, r1
   1fa6c:	cmp	r2, sl
   1fa70:	bge	1fa58 <sf_bpf_optimize+0x590>
   1fa74:	ldr	r3, [r0, lr, lsl #2]
   1fa78:	ldr	r1, [r3, #24]
   1fa7c:	cmp	r1, r8
   1fa80:	bne	1fa58 <sf_bpf_optimize+0x590>
   1fa84:	add	r1, r3, #4
   1fa88:	str	r1, [sp, #32]
   1fa8c:	ldr	r4, [r0, r2, lsl #2]
   1fa90:	ldr	r1, [r4, #24]
   1fa94:	cmp	r1, r8
   1fa98:	bne	1faac <sf_bpf_optimize+0x5e4>
   1fa9c:	b	1fac8 <sf_bpf_optimize+0x600>
   1faa0:	cmp	r5, #0
   1faa4:	mov	sl, ip
   1faa8:	bne	1fa48 <sf_bpf_optimize+0x580>
   1faac:	add	r2, r2, #1
   1fab0:	cmp	r2, sl
   1fab4:	beq	1fa58 <sf_bpf_optimize+0x590>
   1fab8:	ldr	r4, [r0, r2, lsl #2]
   1fabc:	ldr	r1, [r4, #24]
   1fac0:	cmp	r1, r8
   1fac4:	bne	1faac <sf_bpf_optimize+0x5e4>
   1fac8:	ldr	r1, [r4, #8]
   1facc:	ldr	r5, [r3, #8]
   1fad0:	cmp	r5, r1
   1fad4:	bne	1faac <sf_bpf_optimize+0x5e4>
   1fad8:	ldr	r1, [r4, #20]
   1fadc:	ldr	r5, [r3, #20]
   1fae0:	cmp	r5, r1
   1fae4:	bne	1faac <sf_bpf_optimize+0x5e4>
   1fae8:	ldr	r1, [r4, #60]	; 0x3c
   1faec:	ldr	r5, [r3, #60]	; 0x3c
   1faf0:	cmp	r5, r1
   1faf4:	bne	1faac <sf_bpf_optimize+0x5e4>
   1faf8:	ldr	r1, [r4, #84]	; 0x54
   1fafc:	ldr	r5, [r3, #84]	; 0x54
   1fb00:	cmp	r5, r1
   1fb04:	bne	1faac <sf_bpf_optimize+0x5e4>
   1fb08:	ldr	r1, [sp, #32]
   1fb0c:	mov	ip, sl
   1fb10:	add	r5, r4, #4
   1fb14:	ldr	r1, [r1]
   1fb18:	ldr	r6, [r5]
   1fb1c:	mov	r5, #1
   1fb20:	mov	r9, #0
   1fb24:	mov	sl, #1
   1fb28:	cmp	r1, #0
   1fb2c:	beq	1fb50 <sf_bpf_optimize+0x688>
   1fb30:	ldr	r7, [r1]
   1fb34:	cmn	r7, #1
   1fb38:	bne	1fbb0 <sf_bpf_optimize+0x6e8>
   1fb3c:	ldr	r1, [r1, #16]
   1fb40:	cmp	r1, #0
   1fb44:	bne	1fb30 <sf_bpf_optimize+0x668>
   1fb48:	mov	r9, #0
   1fb4c:	mov	sl, #1
   1fb50:	cmp	r6, #0
   1fb54:	beq	1fb70 <sf_bpf_optimize+0x6a8>
   1fb58:	ldr	r1, [r6]
   1fb5c:	cmn	r1, #1
   1fb60:	bne	1fbc4 <sf_bpf_optimize+0x6fc>
   1fb64:	ldr	r6, [r6, #16]
   1fb68:	cmp	r6, #0
   1fb6c:	bne	1fb58 <sf_bpf_optimize+0x690>
   1fb70:	mov	r6, #0
   1fb74:	cmp	sl, #0
   1fb78:	bne	1faa0 <sf_bpf_optimize+0x5d8>
   1fb7c:	cmp	r5, #0
   1fb80:	mov	sl, ip
   1fb84:	bne	1faac <sf_bpf_optimize+0x5e4>
   1fb88:	ldr	r1, [r6]
   1fb8c:	ldr	r5, [r9]
   1fb90:	cmp	r5, r1
   1fb94:	ldreq	r1, [r6, #12]
   1fb98:	ldreq	r5, [r9, #12]
   1fb9c:	cmpeq	r5, r1
   1fba0:	bne	1faac <sf_bpf_optimize+0x5e4>
   1fba4:	add	r5, r6, #16
   1fba8:	add	r1, r9, #16
   1fbac:	b	1fb14 <sf_bpf_optimize+0x64c>
   1fbb0:	mov	sl, #0
   1fbb4:	mov	r9, r1
   1fbb8:	cmp	r6, #0
   1fbbc:	bne	1fb58 <sf_bpf_optimize+0x690>
   1fbc0:	b	1fb70 <sf_bpf_optimize+0x6a8>
   1fbc4:	mov	r5, #0
   1fbc8:	cmp	sl, #0
   1fbcc:	beq	1fb7c <sf_bpf_optimize+0x6b4>
   1fbd0:	b	1faa0 <sf_bpf_optimize+0x5d8>
   1fbd4:	ldr	r9, [sp, #24]
   1fbd8:	ldr	r4, [pc, #408]	; 1fd78 <sf_bpf_optimize+0x8b0>
   1fbdc:	cmp	sl, #1
   1fbe0:	mov	r5, #0
   1fbe4:	add	r4, pc, r4
   1fbe8:	blt	1fc5c <sf_bpf_optimize+0x794>
   1fbec:	ldr	r0, [pc, #392]	; 1fd7c <sf_bpf_optimize+0x8b4>
   1fbf0:	mov	r2, #1
   1fbf4:	mov	r1, sl
   1fbf8:	ldr	r0, [pc, r0]
   1fbfc:	ldr	r3, [r0]
   1fc00:	ldr	r6, [r3, #60]	; 0x3c
   1fc04:	cmp	r6, #0
   1fc08:	bne	1fc28 <sf_bpf_optimize+0x760>
   1fc0c:	add	r0, r0, #4
   1fc10:	subs	r1, r1, #1
   1fc14:	beq	1f97c <sf_bpf_optimize+0x4b4>
   1fc18:	ldr	r3, [r0]
   1fc1c:	ldr	r6, [r3, #60]	; 0x3c
   1fc20:	cmp	r6, #0
   1fc24:	beq	1fc0c <sf_bpf_optimize+0x744>
   1fc28:	ldr	r6, [r6, #100]	; 0x64
   1fc2c:	cmp	r6, #0
   1fc30:	strne	r6, [r3, #60]	; 0x3c
   1fc34:	movne	r2, #0
   1fc38:	ldr	r7, [r3, #84]	; 0x54
   1fc3c:	ldr	r6, [r7, #100]	; 0x64
   1fc40:	cmp	r6, #0
   1fc44:	movne	r2, #0
   1fc48:	strne	r6, [r3, #84]	; 0x54
   1fc4c:	add	r0, r0, #4
   1fc50:	subs	r1, r1, #1
   1fc54:	bne	1fc18 <sf_bpf_optimize+0x750>
   1fc58:	b	1f97c <sf_bpf_optimize+0x4b4>
   1fc5c:	ldr	r4, [sp, #8]
   1fc60:	mov	r1, #0
   1fc64:	ldr	r0, [r4]
   1fc68:	ldr	r5, [r0, #4]
   1fc6c:	str	r1, [r0, #4]
   1fc70:	ldr	r0, [r4]
   1fc74:	ldr	r1, [r0, #8]
   1fc78:	and	r1, r1, #7
   1fc7c:	cmp	r1, #5
   1fc80:	bne	1fcac <sf_bpf_optimize+0x7e4>
   1fc84:	ldr	r1, [r0, #60]	; 0x3c
   1fc88:	ldr	r2, [r0, #84]	; 0x54
   1fc8c:	cmp	r1, r2
   1fc90:	bne	1fcac <sf_bpf_optimize+0x7e4>
   1fc94:	str	r1, [r4]
   1fc98:	ldr	r0, [r1, #8]
   1fc9c:	and	r0, r0, #7
   1fca0:	cmp	r0, #5
   1fca4:	mov	r0, r1
   1fca8:	beq	1fc84 <sf_bpf_optimize+0x7bc>
   1fcac:	ldr	r1, [r0, #4]
   1fcb0:	cmp	r1, #0
   1fcb4:	beq	1fcc4 <sf_bpf_optimize+0x7fc>
   1fcb8:	mov	r0, r5
   1fcbc:	bl	11f28 <sf_append>
   1fcc0:	ldr	r0, [r4]
   1fcc4:	str	r5, [r0, #4]
   1fcc8:	ldr	r0, [r4]
   1fccc:	ldr	r1, [r0, #8]
   1fcd0:	and	r1, r1, #7
   1fcd4:	cmp	r1, #6
   1fcd8:	moveq	r1, #0
   1fcdc:	streq	r1, [r0, #4]
   1fce0:	ldr	r0, [pc, #152]	; 1fd80 <sf_bpf_optimize+0x8b8>
   1fce4:	ldr	r0, [pc, r0]
   1fce8:	bl	dbc <free@plt>
   1fcec:	ldr	r0, [pc, #144]	; 1fd84 <sf_bpf_optimize+0x8bc>
   1fcf0:	ldr	r0, [pc, r0]
   1fcf4:	bl	dbc <free@plt>
   1fcf8:	ldr	r0, [pc, #136]	; 1fd88 <sf_bpf_optimize+0x8c0>
   1fcfc:	ldr	r0, [pc, r0]
   1fd00:	bl	dbc <free@plt>
   1fd04:	ldr	r0, [pc, #128]	; 1fd8c <sf_bpf_optimize+0x8c4>
   1fd08:	ldr	r0, [pc, r0]
   1fd0c:	bl	dbc <free@plt>
   1fd10:	ldr	r0, [pc, #120]	; 1fd90 <sf_bpf_optimize+0x8c8>
   1fd14:	ldr	r0, [pc, r0]
   1fd18:	bl	dbc <free@plt>
   1fd1c:	ldr	r0, [pc, #112]	; 1fd94 <sf_bpf_optimize+0x8cc>
   1fd20:	ldr	r0, [pc, r0]
   1fd24:	sub	sp, fp, #28
   1fd28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fd2c:	b	dbc <free@plt>
   1fd30:	.word	0x000273cc
   1fd34:	.word	0x00027498
   1fd38:	.word	0x00027458
   1fd3c:	.word	0x0002742c
   1fd40:	.word	0x000273e8
   1fd44:	.word	0x000273b0
   1fd48:	.word	0x000271d0
   1fd4c:	.word	0x000270fc
   1fd50:	.word	0x000271c0
   1fd54:	.word	0x00027178
   1fd58:	.word	0x00027170
   1fd5c:	.word	0x00027148
   1fd60:	.word	0x0002711c
   1fd64:	.word	0x00026fd0
   1fd68:	.word	0x000270b8
   1fd6c:	.word	0x00027098
   1fd70:	.word	0x00027010
   1fd74:	.word	0x00026f7c
   1fd78:	.word	0x00026cc8
   1fd7c:	.word	0x00026dac
   1fd80:	.word	0x00026ccc
   1fd84:	.word	0x00026cc4
   1fd88:	.word	0x00026cac
   1fd8c:	.word	0x00026c94
   1fd90:	.word	0x00026c8c
   1fd94:	.word	0x00026c84
   1fd98:	.word	0x0000acd8

0001fd9c <opt_loop>:
   1fd9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fda0:	add	fp, sp, #28
   1fda4:	sub	sp, sp, #4
   1fda8:	vpush	{d8-d9}
   1fdac:	sub	sp, sp, #96	; 0x60
   1fdb0:	str	r1, [sp, #12]
   1fdb4:	vmov.i32	q4, #0	; 0x00000000
   1fdb8:	mov	r4, r0
   1fdbc:	mov	sl, #0
   1fdc0:	ldr	r5, [pc, #4044]	; 20d94 <opt_loop+0xff8>
   1fdc4:	str	r0, [sp]
   1fdc8:	add	r5, pc, r5
   1fdcc:	b	1fdf0 <opt_loop+0x54>
   1fdd0:	cmp	r6, #0
   1fdd4:	beq	232c8 <opt_loop+0x352c>
   1fdd8:	ldr	r5, [pc, #4024]	; 20d98 <opt_loop+0xffc>
   1fddc:	ldr	r4, [sp]
   1fde0:	add	r5, pc, r5
   1fde4:	ldrb	r0, [r5]
   1fde8:	cmp	r0, #1
   1fdec:	beq	23760 <opt_loop+0x39c4>
   1fdf0:	mov	r0, #1
   1fdf4:	mov	r1, #0
   1fdf8:	strb	r0, [r5]
   1fdfc:	ldr	r6, [r5, #16]
   1fe00:	ldr	r0, [pc, #4088]	; 20e00 <opt_loop+0x1064>
   1fe04:	ldr	r0, [pc, r0]
   1fe08:	lsl	r9, r6, #2
   1fe0c:	mov	r2, r9
   1fe10:	bl	ea0 <memset@plt>
   1fe14:	ldr	r0, [r5, #4]
   1fe18:	add	r0, r0, #1
   1fe1c:	str	r0, [r5, #4]
   1fe20:	mov	r0, r4
   1fe24:	bl	23dbc <find_levels_r>
   1fe28:	ldr	r7, [r5, #24]
   1fe2c:	mul	r1, r7, r6
   1fe30:	cmp	r1, #1
   1fe34:	blt	1fe48 <opt_loop+0xac>
   1fe38:	ldr	r0, [r5, #20]
   1fe3c:	lsl	r2, r1, #2
   1fe40:	mov	r1, #255	; 0xff
   1fe44:	bl	ea0 <memset@plt>
   1fe48:	cmp	r7, #1
   1fe4c:	blt	1fec0 <opt_loop+0x124>
   1fe50:	ands	r2, r7, #3
   1fe54:	sub	r1, r7, #1
   1fe58:	mov	r0, r7
   1fe5c:	beq	1fe7c <opt_loop+0xe0>
   1fe60:	mov	r0, r1
   1fe64:	ldr	r3, [r4, #104]	; 0x68
   1fe68:	subs	r2, r2, #1
   1fe6c:	str	sl, [r3, r0, lsl #2]
   1fe70:	sub	r0, r0, #1
   1fe74:	bne	1fe64 <opt_loop+0xc8>
   1fe78:	add	r0, r0, #1
   1fe7c:	cmp	r1, #3
   1fe80:	bcc	1fec0 <opt_loop+0x124>
   1fe84:	ldr	r1, [r4, #104]	; 0x68
   1fe88:	add	r1, r1, r0, lsl #2
   1fe8c:	str	sl, [r1, #-4]
   1fe90:	ldr	r1, [r4, #104]	; 0x68
   1fe94:	add	r1, r1, r0, lsl #2
   1fe98:	str	sl, [r1, #-8]
   1fe9c:	ldr	r1, [r4, #104]	; 0x68
   1fea0:	add	r1, r1, r0, lsl #2
   1fea4:	str	sl, [r1, #-12]
   1fea8:	ldr	r1, [r4, #104]	; 0x68
   1feac:	add	r1, r1, r0, lsl #2
   1feb0:	sub	r0, r0, #4
   1feb4:	cmp	r0, #0
   1feb8:	str	sl, [r1, #-16]
   1febc:	bgt	1fe84 <opt_loop+0xe8>
   1fec0:	ldr	r1, [r4, #36]	; 0x24
   1fec4:	cmp	r1, #0
   1fec8:	bmi	2015c <opt_loop+0x3c0>
   1fecc:	ldr	r5, [pc, #3888]	; 20e04 <opt_loop+0x1068>
   1fed0:	add	r5, pc, r5
   1fed4:	b	1feec <opt_loop+0x150>
   1fed8:	ldr	r1, [sp, #16]
   1fedc:	sub	r0, r1, #1
   1fee0:	cmp	r1, #0
   1fee4:	mov	r1, r0
   1fee8:	ble	2014c <opt_loop+0x3b0>
   1feec:	ldr	r0, [pc, #3860]	; 20e08 <opt_loop+0x106c>
   1fef0:	ldr	r0, [pc, r0]
   1fef4:	str	r1, [sp, #16]
   1fef8:	ldr	r9, [r0, r1, lsl #2]
   1fefc:	cmp	r9, #0
   1ff00:	bne	1ff14 <opt_loop+0x178>
   1ff04:	b	1fed8 <opt_loop+0x13c>
   1ff08:	ldr	r9, [r9, #100]	; 0x64
   1ff0c:	cmp	r9, #0
   1ff10:	beq	1fed8 <opt_loop+0x13c>
   1ff14:	ldr	r0, [r9]
   1ff18:	ldr	r2, [r9, #104]	; 0x68
   1ff1c:	mov	r1, #1
   1ff20:	lsr	r3, r0, #5
   1ff24:	and	r0, r0, #31
   1ff28:	ldr	r7, [r2, r3, lsl #2]
   1ff2c:	orr	r0, r7, r1, lsl r0
   1ff30:	str	r0, [r2, r3, lsl #2]
   1ff34:	ldr	r0, [r9, #60]	; 0x3c
   1ff38:	cmp	r0, #0
   1ff3c:	beq	1ff08 <opt_loop+0x16c>
   1ff40:	ldr	r2, [r5, #24]
   1ff44:	cmp	r2, #1
   1ff48:	blt	1ff08 <opt_loop+0x16c>
   1ff4c:	ldr	r3, [r0, #104]	; 0x68
   1ff50:	ldr	r7, [r9, #104]	; 0x68
   1ff54:	cmp	r2, #4
   1ff58:	bcc	20014 <opt_loop+0x278>
   1ff5c:	add	r0, r7, r2, lsl #2
   1ff60:	cmp	r3, r0
   1ff64:	addcc	r0, r3, r2, lsl #2
   1ff68:	cmpcc	r7, r0
   1ff6c:	bcc	20014 <opt_loop+0x278>
   1ff70:	bic	r0, r2, #3
   1ff74:	mov	r1, #1
   1ff78:	str	r0, [sp, #20]
   1ff7c:	subs	r0, r0, #4
   1ff80:	add	r0, r1, r0, lsr #2
   1ff84:	and	r1, r0, #1
   1ff88:	beq	20124 <opt_loop+0x388>
   1ff8c:	mov	r8, r1
   1ff90:	sub	r0, r0, r1
   1ff94:	mov	r4, #0
   1ff98:	mov	lr, r3
   1ff9c:	mov	r6, r7
   1ffa0:	mov	r1, #32
   1ffa4:	mov	r5, lr
   1ffa8:	add	ip, r6, #16
   1ffac:	vld1.32	{d16-d17}, [r6], r1
   1ffb0:	subs	r0, r0, #2
   1ffb4:	add	r4, r4, #8
   1ffb8:	vld1.32	{d18-d19}, [r5]!
   1ffbc:	vand	q8, q9, q8
   1ffc0:	vst1.32	{d16-d17}, [lr], r1
   1ffc4:	vld1.32	{d16-d17}, [r5]
   1ffc8:	vld1.32	{d18-d19}, [ip]
   1ffcc:	vand	q8, q8, q9
   1ffd0:	vst1.32	{d16-d17}, [r5]
   1ffd4:	bne	1ffa4 <opt_loop+0x208>
   1ffd8:	cmp	r8, #0
   1ffdc:	beq	1fff8 <opt_loop+0x25c>
   1ffe0:	add	r0, r3, r4, lsl #2
   1ffe4:	add	r6, r7, r4, lsl #2
   1ffe8:	vld1.32	{d16-d17}, [r6]
   1ffec:	vld1.32	{d18-d19}, [r0]
   1fff0:	vand	q8, q9, q8
   1fff4:	vst1.32	{d16-d17}, [r0]
   1fff8:	ldr	r8, [sp, #20]
   1fffc:	ldr	r5, [pc, #4040]	; 20fcc <opt_loop+0x1230>
   20000:	subs	r2, r2, r8
   20004:	add	r5, pc, r5
   20008:	beq	20030 <opt_loop+0x294>
   2000c:	add	r3, r3, r8, lsl #2
   20010:	add	r7, r7, r8, lsl #2
   20014:	ldr	r0, [r7], #4
   20018:	ldr	r6, [r3]
   2001c:	sub	r2, r2, #1
   20020:	cmp	r2, #0
   20024:	and	r0, r6, r0
   20028:	str	r0, [r3], #4
   2002c:	bgt	20014 <opt_loop+0x278>
   20030:	ldr	r2, [r5, #24]
   20034:	cmp	r2, #1
   20038:	blt	1ff08 <opt_loop+0x16c>
   2003c:	ldr	r0, [r9, #84]	; 0x54
   20040:	ldr	r3, [r9, #104]	; 0x68
   20044:	cmp	r2, #4
   20048:	ldr	r7, [r0, #104]	; 0x68
   2004c:	bcc	20104 <opt_loop+0x368>
   20050:	add	r0, r3, r2, lsl #2
   20054:	cmp	r7, r0
   20058:	addcc	r0, r7, r2, lsl #2
   2005c:	cmpcc	r3, r0
   20060:	bcc	20104 <opt_loop+0x368>
   20064:	bic	r8, r2, #3
   20068:	mov	r1, #1
   2006c:	subs	r0, r8, #4
   20070:	add	r0, r1, r0, lsr #2
   20074:	and	r1, r0, #1
   20078:	str	r1, [sp, #20]
   2007c:	beq	20138 <opt_loop+0x39c>
   20080:	sub	r0, r0, r1
   20084:	mov	r4, #0
   20088:	mov	lr, r7
   2008c:	mov	r6, r3
   20090:	mov	ip, #32
   20094:	mov	r5, lr
   20098:	add	r1, r6, #16
   2009c:	vld1.32	{d16-d17}, [r6], ip
   200a0:	subs	r0, r0, #2
   200a4:	add	r4, r4, #8
   200a8:	vld1.32	{d18-d19}, [r5]!
   200ac:	vand	q8, q9, q8
   200b0:	vst1.32	{d16-d17}, [lr], ip
   200b4:	vld1.32	{d16-d17}, [r5]
   200b8:	vld1.32	{d18-d19}, [r1]
   200bc:	vand	q8, q8, q9
   200c0:	vst1.32	{d16-d17}, [r5]
   200c4:	bne	20094 <opt_loop+0x2f8>
   200c8:	ldr	r0, [sp, #20]
   200cc:	cmp	r0, #0
   200d0:	beq	200ec <opt_loop+0x350>
   200d4:	add	r0, r7, r4, lsl #2
   200d8:	add	r1, r3, r4, lsl #2
   200dc:	vld1.32	{d16-d17}, [r1]
   200e0:	vld1.32	{d18-d19}, [r0]
   200e4:	vand	q8, q9, q8
   200e8:	vst1.32	{d16-d17}, [r0]
   200ec:	ldr	r5, [pc, #4092]	; 210f0 <opt_loop+0x1354>
   200f0:	subs	r2, r2, r8
   200f4:	add	r5, pc, r5
   200f8:	beq	1ff08 <opt_loop+0x16c>
   200fc:	add	r7, r7, r8, lsl #2
   20100:	add	r3, r3, r8, lsl #2
   20104:	ldr	r0, [r3], #4
   20108:	ldr	r1, [r7]
   2010c:	sub	r2, r2, #1
   20110:	cmp	r2, #0
   20114:	and	r0, r1, r0
   20118:	str	r0, [r7], #4
   2011c:	bgt	20104 <opt_loop+0x368>
   20120:	b	1ff08 <opt_loop+0x16c>
   20124:	mov	r8, r1
   20128:	mov	r4, #0
   2012c:	cmp	r8, #0
   20130:	bne	1ffe0 <opt_loop+0x244>
   20134:	b	1fff8 <opt_loop+0x25c>
   20138:	mov	r4, #0
   2013c:	ldr	r0, [sp, #20]
   20140:	cmp	r0, #0
   20144:	bne	200d4 <opt_loop+0x338>
   20148:	b	200ec <opt_loop+0x350>
   2014c:	ldr	r0, [r5, #16]
   20150:	ldr	r7, [r5, #24]
   20154:	ldr	r4, [sp]
   20158:	lsl	r9, r0, #2
   2015c:	ldr	r0, [pc, #3984]	; 210f4 <opt_loop+0x1358>
   20160:	mul	r2, r9, r7
   20164:	mov	r1, #0
   20168:	add	r0, pc, r0
   2016c:	ldr	r0, [r0, #28]
   20170:	bl	ea0 <memset@plt>
   20174:	ldr	r1, [r4, #36]	; 0x24
   20178:	cmp	r1, #0
   2017c:	bmi	206dc <opt_loop+0x940>
   20180:	ldr	r5, [pc, #3952]	; 210f8 <opt_loop+0x135c>
   20184:	add	r5, pc, r5
   20188:	b	201a0 <opt_loop+0x404>
   2018c:	ldr	r1, [sp, #16]
   20190:	sub	r0, r1, #1
   20194:	cmp	r1, #0
   20198:	mov	r1, r0
   2019c:	ble	203fc <opt_loop+0x660>
   201a0:	ldr	r0, [pc, #3924]	; 210fc <opt_loop+0x1360>
   201a4:	ldr	r0, [pc, r0]
   201a8:	str	r1, [sp, #16]
   201ac:	ldr	r9, [r0, r1, lsl #2]
   201b0:	cmp	r9, #0
   201b4:	bne	201c8 <opt_loop+0x42c>
   201b8:	b	2018c <opt_loop+0x3f0>
   201bc:	ldr	r9, [r9, #100]	; 0x64
   201c0:	cmp	r9, #0
   201c4:	beq	2018c <opt_loop+0x3f0>
   201c8:	ldr	r0, [r9]
   201cc:	ldr	r2, [r9, #108]	; 0x6c
   201d0:	mov	r1, #1
   201d4:	lsr	r3, r0, #5
   201d8:	and	r0, r0, #31
   201dc:	ldr	r7, [r2, r3, lsl #2]
   201e0:	orr	r0, r7, r1, lsl r0
   201e4:	str	r0, [r2, r3, lsl #2]
   201e8:	ldr	r0, [r9, #60]	; 0x3c
   201ec:	cmp	r0, #0
   201f0:	beq	201bc <opt_loop+0x420>
   201f4:	ldr	r2, [r5, #24]
   201f8:	cmp	r2, #1
   201fc:	blt	201bc <opt_loop+0x420>
   20200:	ldr	r3, [r0, #108]	; 0x6c
   20204:	ldr	r7, [r9, #108]	; 0x6c
   20208:	cmp	r2, #4
   2020c:	bcc	202c4 <opt_loop+0x528>
   20210:	add	r0, r7, r2, lsl #2
   20214:	cmp	r3, r0
   20218:	addcc	r0, r3, r2, lsl #2
   2021c:	cmpcc	r7, r0
   20220:	bcc	202c4 <opt_loop+0x528>
   20224:	bic	r8, r2, #3
   20228:	mov	r1, #1
   2022c:	subs	r0, r8, #4
   20230:	add	r0, r1, r0, lsr #2
   20234:	and	r1, r0, #1
   20238:	str	r1, [sp, #20]
   2023c:	beq	203d4 <opt_loop+0x638>
   20240:	sub	r0, r0, r1
   20244:	mov	r4, #0
   20248:	mov	lr, r3
   2024c:	mov	r6, r7
   20250:	mov	r1, #32
   20254:	mov	r5, lr
   20258:	add	ip, r6, #16
   2025c:	vld1.32	{d16-d17}, [r6], r1
   20260:	subs	r0, r0, #2
   20264:	add	r4, r4, #8
   20268:	vld1.32	{d18-d19}, [r5]!
   2026c:	vorr	q8, q9, q8
   20270:	vst1.32	{d16-d17}, [lr], r1
   20274:	vld1.32	{d16-d17}, [r5]
   20278:	vld1.32	{d18-d19}, [ip]
   2027c:	vorr	q8, q8, q9
   20280:	vst1.32	{d16-d17}, [r5]
   20284:	bne	20254 <opt_loop+0x4b8>
   20288:	ldr	r0, [sp, #20]
   2028c:	cmp	r0, #0
   20290:	beq	202ac <opt_loop+0x510>
   20294:	add	r0, r3, r4, lsl #2
   20298:	add	r6, r7, r4, lsl #2
   2029c:	vld1.32	{d16-d17}, [r6]
   202a0:	vld1.32	{d18-d19}, [r0]
   202a4:	vorr	q8, q9, q8
   202a8:	vst1.32	{d16-d17}, [r0]
   202ac:	ldr	r5, [pc, #3660]	; 21100 <opt_loop+0x1364>
   202b0:	subs	r2, r2, r8
   202b4:	add	r5, pc, r5
   202b8:	beq	202e0 <opt_loop+0x544>
   202bc:	add	r3, r3, r8, lsl #2
   202c0:	add	r7, r7, r8, lsl #2
   202c4:	ldr	r0, [r7], #4
   202c8:	ldr	r6, [r3]
   202cc:	sub	r2, r2, #1
   202d0:	cmp	r2, #0
   202d4:	orr	r0, r6, r0
   202d8:	str	r0, [r3], #4
   202dc:	bgt	202c4 <opt_loop+0x528>
   202e0:	ldr	r2, [r5, #24]
   202e4:	cmp	r2, #1
   202e8:	blt	201bc <opt_loop+0x420>
   202ec:	ldr	r0, [r9, #84]	; 0x54
   202f0:	ldr	r3, [r9, #108]	; 0x6c
   202f4:	cmp	r2, #4
   202f8:	ldr	r7, [r0, #108]	; 0x6c
   202fc:	bcc	203b4 <opt_loop+0x618>
   20300:	add	r0, r3, r2, lsl #2
   20304:	cmp	r7, r0
   20308:	addcc	r0, r7, r2, lsl #2
   2030c:	cmpcc	r3, r0
   20310:	bcc	203b4 <opt_loop+0x618>
   20314:	bic	r8, r2, #3
   20318:	mov	r1, #1
   2031c:	subs	r0, r8, #4
   20320:	add	r0, r1, r0, lsr #2
   20324:	and	r1, r0, #1
   20328:	str	r1, [sp, #20]
   2032c:	beq	203e8 <opt_loop+0x64c>
   20330:	sub	r0, r0, r1
   20334:	mov	r4, #0
   20338:	mov	lr, r7
   2033c:	mov	r6, r3
   20340:	mov	ip, #32
   20344:	mov	r5, lr
   20348:	add	r1, r6, #16
   2034c:	vld1.32	{d16-d17}, [r6], ip
   20350:	subs	r0, r0, #2
   20354:	add	r4, r4, #8
   20358:	vld1.32	{d18-d19}, [r5]!
   2035c:	vorr	q8, q9, q8
   20360:	vst1.32	{d16-d17}, [lr], ip
   20364:	vld1.32	{d16-d17}, [r5]
   20368:	vld1.32	{d18-d19}, [r1]
   2036c:	vorr	q8, q8, q9
   20370:	vst1.32	{d16-d17}, [r5]
   20374:	bne	20344 <opt_loop+0x5a8>
   20378:	ldr	r0, [sp, #20]
   2037c:	cmp	r0, #0
   20380:	beq	2039c <opt_loop+0x600>
   20384:	add	r0, r7, r4, lsl #2
   20388:	add	r1, r3, r4, lsl #2
   2038c:	vld1.32	{d16-d17}, [r1]
   20390:	vld1.32	{d18-d19}, [r0]
   20394:	vorr	q8, q9, q8
   20398:	vst1.32	{d16-d17}, [r0]
   2039c:	ldr	r5, [pc, #3424]	; 21104 <opt_loop+0x1368>
   203a0:	subs	r2, r2, r8
   203a4:	add	r5, pc, r5
   203a8:	beq	201bc <opt_loop+0x420>
   203ac:	add	r7, r7, r8, lsl #2
   203b0:	add	r3, r3, r8, lsl #2
   203b4:	ldr	r0, [r3], #4
   203b8:	ldr	r1, [r7]
   203bc:	sub	r2, r2, #1
   203c0:	cmp	r2, #0
   203c4:	orr	r0, r1, r0
   203c8:	str	r0, [r7], #4
   203cc:	bgt	203b4 <opt_loop+0x618>
   203d0:	b	201bc <opt_loop+0x420>
   203d4:	mov	r4, #0
   203d8:	ldr	r0, [sp, #20]
   203dc:	cmp	r0, #0
   203e0:	bne	20294 <opt_loop+0x4f8>
   203e4:	b	202ac <opt_loop+0x510>
   203e8:	mov	r4, #0
   203ec:	ldr	r0, [sp, #20]
   203f0:	cmp	r0, #0
   203f4:	bne	20384 <opt_loop+0x5e8>
   203f8:	b	2039c <opt_loop+0x600>
   203fc:	ldr	r4, [sp]
   20400:	ldr	r0, [r4, #36]	; 0x24
   20404:	cmp	r0, #0
   20408:	bmi	206dc <opt_loop+0x940>
   2040c:	ldr	r1, [pc, #4028]	; 213d0 <opt_loop+0x1634>
   20410:	ldr	r1, [pc, r1]
   20414:	str	r0, [sp, #8]
   20418:	str	r1, [sp, #16]
   2041c:	mov	r1, r0
   20420:	b	20438 <opt_loop+0x69c>
   20424:	ldr	r1, [sp, #20]
   20428:	sub	r0, r1, #1
   2042c:	cmp	r1, #0
   20430:	mov	r1, r0
   20434:	ble	20650 <opt_loop+0x8b4>
   20438:	ldr	r0, [sp, #16]
   2043c:	str	r1, [sp, #20]
   20440:	ldr	lr, [r0, r1, lsl #2]
   20444:	cmp	lr, #0
   20448:	bne	20478 <opt_loop+0x6dc>
   2044c:	b	20424 <opt_loop+0x688>
   20450:	mov	r1, #65536	; 0x10000
   20454:	bic	r1, r1, r4
   20458:	orr	r0, r1, r0
   2045c:	str	r4, [lr, #116]	; 0x74
   20460:	str	r9, [lr, #120]	; 0x78
   20464:	str	r0, [lr, #124]	; 0x7c
   20468:	str	sl, [lr, #128]	; 0x80
   2046c:	ldr	lr, [lr, #100]	; 0x64
   20470:	cmp	lr, #0
   20474:	beq	20424 <opt_loop+0x688>
   20478:	ldr	r1, [lr, #4]
   2047c:	cmp	r1, #0
   20480:	beq	20608 <opt_loop+0x86c>
   20484:	mov	r9, #0
   20488:	mov	r0, #0
   2048c:	mov	r4, #0
   20490:	ldr	r7, [r1]
   20494:	cmn	r7, #1
   20498:	bne	204d4 <opt_loop+0x738>
   2049c:	b	204bc <opt_loop+0x720>
   204a0:	tst	r7, #248	; 0xf8
   204a4:	mov	r6, #16
   204a8:	movweq	r6, #17
   204ac:	mov	r2, #1
   204b0:	tst	r0, r2, lsl r6
   204b4:	orr	r4, r4, r2, lsl r6
   204b8:	orreq	r9, r9, r2, lsl r6
   204bc:	ldr	r1, [r1, #16]
   204c0:	cmp	r1, #0
   204c4:	beq	20614 <opt_loop+0x878>
   204c8:	ldr	r7, [r1]
   204cc:	cmn	r7, #1
   204d0:	beq	204bc <opt_loop+0x720>
   204d4:	and	r2, r7, #7
   204d8:	add	r3, pc, #8
   204dc:	mov	r6, #16
   204e0:	ldr	r5, [r3, r2, lsl #2]
   204e4:	add	pc, r3, r5
   204e8:	.word	0x00000020
   204ec:	.word	0x00000020
   204f0:	.word	0x000000b8
   204f4:	.word	0x00000084
   204f8:	.word	0x00000058
   204fc:	.word	0x00000058
   20500:	.word	0x000000a0
   20504:	.word	0x0000008c
   20508:	and	r6, r7, #224	; 0xe0
   2050c:	cmp	r6, #64	; 0x40
   20510:	beq	2056c <opt_loop+0x7d0>
   20514:	cmp	r6, #96	; 0x60
   20518:	bne	205ac <opt_loop+0x810>
   2051c:	ldr	ip, [r1, #12]
   20520:	cmp	ip, #0
   20524:	bmi	205ac <opt_loop+0x810>
   20528:	cmp	ip, #18
   2052c:	beq	20548 <opt_loop+0x7ac>
   20530:	cmp	ip, #17
   20534:	mov	r6, ip
   20538:	ble	205a0 <opt_loop+0x804>
   2053c:	b	23770 <opt_loop+0x39d4>
   20540:	tst	r7, #8
   20544:	beq	205a0 <opt_loop+0x804>
   20548:	mov	r6, #131072	; 0x20000
   2054c:	mov	r3, #65536	; 0x10000
   20550:	bic	r6, r6, r4
   20554:	bic	r3, r3, r4
   20558:	orr	r0, r6, r0
   2055c:	orr	r0, r0, r3
   20560:	cmp	r2, #7
   20564:	bls	205b4 <opt_loop+0x818>
   20568:	b	204bc <opt_loop+0x720>
   2056c:	mov	r6, #17
   20570:	b	205a0 <opt_loop+0x804>
   20574:	and	r3, r7, #248	; 0xf8
   20578:	mov	r6, #16
   2057c:	cmp	r3, #128	; 0x80
   20580:	movweq	r6, #17
   20584:	b	205a0 <opt_loop+0x804>
   20588:	and	r3, r7, #24
   2058c:	mvn	ip, #0
   20590:	cmp	r3, #8
   20594:	movweq	ip, #17
   20598:	cmp	r3, #16
   2059c:	bne	205f4 <opt_loop+0x858>
   205a0:	mov	r3, #1
   205a4:	tst	r4, r3, lsl r6
   205a8:	orreq	r0, r0, r3, lsl r6
   205ac:	cmp	r2, #7
   205b0:	bhi	204bc <opt_loop+0x720>
   205b4:	add	r3, pc, #8
   205b8:	mov	r6, #16
   205bc:	ldr	r2, [r3, r2, lsl #2]
   205c0:	add	pc, r3, r2
   205c4:	.word	0xfffffee8
   205c8:	.word	0x0000003c
   205cc:	.word	0x00000020
   205d0:	.word	0x00000020
   205d4:	.word	0xfffffee8
   205d8:	.word	0xfffffef8
   205dc:	.word	0xfffffef8
   205e0:	.word	0xfffffedc
   205e4:	ldr	r6, [r1, #12]
   205e8:	cmp	r6, #0
   205ec:	bpl	204ac <opt_loop+0x710>
   205f0:	b	204bc <opt_loop+0x720>
   205f4:	cmp	ip, #0
   205f8:	bpl	20528 <opt_loop+0x78c>
   205fc:	b	205ac <opt_loop+0x810>
   20600:	mov	r6, #17
   20604:	b	204ac <opt_loop+0x710>
   20608:	mov	r4, #0
   2060c:	mov	r0, #0
   20610:	mov	r9, #0
   20614:	ldr	r1, [lr, #8]
   20618:	cmn	r1, #1
   2061c:	beq	2045c <opt_loop+0x6c0>
   20620:	and	r2, r1, #7
   20624:	cmp	r2, #5
   20628:	bne	2045c <opt_loop+0x6c0>
   2062c:	tst	r1, #8
   20630:	beq	20450 <opt_loop+0x6b4>
   20634:	mov	r2, #131072	; 0x20000
   20638:	mov	r1, #65536	; 0x10000
   2063c:	bic	r2, r2, r4
   20640:	bic	r1, r1, r4
   20644:	orr	r0, r2, r0
   20648:	orr	r0, r0, r1
   2064c:	b	2045c <opt_loop+0x6c0>
   20650:	ldr	r5, [sp, #8]
   20654:	ldr	r4, [sp]
   20658:	cmp	r5, #1
   2065c:	blt	206dc <opt_loop+0x940>
   20660:	mov	r0, #1
   20664:	ldr	r1, [sp, #16]
   20668:	ldr	r1, [r1, r0, lsl #2]
   2066c:	cmp	r1, #0
   20670:	bne	20694 <opt_loop+0x8f8>
   20674:	add	r1, r0, #1
   20678:	cmp	r0, r5
   2067c:	mov	r0, r1
   20680:	beq	206dc <opt_loop+0x940>
   20684:	ldr	r1, [sp, #16]
   20688:	ldr	r1, [r1, r0, lsl #2]
   2068c:	cmp	r1, #0
   20690:	beq	20674 <opt_loop+0x8d8>
   20694:	ldr	r2, [r1, #60]	; 0x3c
   20698:	ldr	r3, [r1, #84]	; 0x54
   2069c:	ldr	r7, [r1, #100]	; 0x64
   206a0:	ldr	r6, [r1, #120]	; 0x78
   206a4:	ldr	r2, [r2, #124]	; 0x7c
   206a8:	ldr	r3, [r3, #124]	; 0x7c
   206ac:	cmp	r7, #0
   206b0:	orr	r2, r3, r2
   206b4:	ldr	r3, [r1, #128]	; 0x80
   206b8:	orr	r2, r2, r3
   206bc:	str	r2, [r1, #128]	; 0x80
   206c0:	bic	r2, r2, r6
   206c4:	ldr	r3, [r1, #124]	; 0x7c
   206c8:	orr	r2, r3, r2
   206cc:	str	r2, [r1, #124]	; 0x7c
   206d0:	mov	r1, r7
   206d4:	bne	20694 <opt_loop+0x8f8>
   206d8:	b	20674 <opt_loop+0x8d8>
   206dc:	ldr	r6, [pc, #4056]	; 216bc <opt_loop+0x1920>
   206e0:	add	r6, pc, r6
   206e4:	ldr	r0, [r6, #36]	; 0x24
   206e8:	ldr	r5, [r6, #40]	; 0x28
   206ec:	mul	r1, r5, r0
   206f0:	cmp	r1, #1
   206f4:	blt	20708 <opt_loop+0x96c>
   206f8:	ldr	r0, [r6, #32]
   206fc:	lsl	r2, r1, #2
   20700:	mov	r1, #255	; 0xff
   20704:	bl	ea0 <memset@plt>
   20708:	ldr	r0, [r4, #56]	; 0x38
   2070c:	lsl	r5, r5, #2
   20710:	mov	r1, #0
   20714:	mov	r2, r5
   20718:	bl	ea0 <memset@plt>
   2071c:	ldr	r0, [r4, #80]	; 0x50
   20720:	mov	r1, #0
   20724:	mov	r2, r5
   20728:	bl	ea0 <memset@plt>
   2072c:	ldr	r1, [r4, #36]	; 0x24
   20730:	mov	r4, r6
   20734:	ldr	r6, [sp, #12]
   20738:	cmp	r1, #0
   2073c:	bpl	20758 <opt_loop+0x9bc>
   20740:	b	20c0c <opt_loop+0xe70>
   20744:	ldr	r1, [sp, #16]
   20748:	sub	r0, r1, #1
   2074c:	cmp	r1, #0
   20750:	mov	r1, r0
   20754:	ble	20c0c <opt_loop+0xe70>
   20758:	ldr	r0, [pc, #4064]	; 21740 <opt_loop+0x19a4>
   2075c:	ldr	r0, [pc, r0]
   20760:	str	r1, [sp, #16]
   20764:	ldr	r9, [r0, r1, lsl #2]
   20768:	cmp	r9, #0
   2076c:	bne	20780 <opt_loop+0x9e4>
   20770:	b	20744 <opt_loop+0x9a8>
   20774:	ldr	r9, [r9, #100]	; 0x64
   20778:	cmp	r9, #0
   2077c:	beq	20744 <opt_loop+0x9a8>
   20780:	ldr	r0, [r9, #48]	; 0x30
   20784:	ldr	r2, [r9, #56]	; 0x38
   20788:	mov	r1, #1
   2078c:	lsr	r3, r0, #5
   20790:	and	r0, r0, #31
   20794:	ldr	r7, [r2, r3, lsl #2]
   20798:	orr	r0, r7, r1, lsl r0
   2079c:	str	r0, [r2, r3, lsl #2]
   207a0:	ldr	r2, [r9, #60]	; 0x3c
   207a4:	cmp	r2, #0
   207a8:	beq	2099c <opt_loop+0xc00>
   207ac:	ldr	r0, [r4, #40]	; 0x28
   207b0:	cmp	r0, #1
   207b4:	blt	2099c <opt_loop+0xc00>
   207b8:	ldr	r3, [r2, #56]	; 0x38
   207bc:	ldr	r7, [r9, #56]	; 0x38
   207c0:	cmp	r0, #4
   207c4:	bcs	207d0 <opt_loop+0xa34>
   207c8:	mov	r2, r0
   207cc:	b	2088c <opt_loop+0xaf0>
   207d0:	add	r2, r7, r0, lsl #2
   207d4:	cmp	r3, r2
   207d8:	addcc	r2, r3, r0, lsl #2
   207dc:	cmpcc	r7, r2
   207e0:	bcc	20888 <opt_loop+0xaec>
   207e4:	bic	r8, r0, #3
   207e8:	mov	r1, #1
   207ec:	subs	r2, r8, #4
   207f0:	add	r2, r1, r2, lsr #2
   207f4:	and	r1, r2, #1
   207f8:	str	r1, [sp, #20]
   207fc:	beq	20bbc <opt_loop+0xe20>
   20800:	sub	r2, r2, r1
   20804:	mov	r4, #0
   20808:	mov	lr, r3
   2080c:	mov	r6, r7
   20810:	mov	r1, #32
   20814:	mov	r5, lr
   20818:	add	ip, r6, #16
   2081c:	vld1.32	{d16-d17}, [r6], r1
   20820:	subs	r2, r2, #2
   20824:	add	r4, r4, #8
   20828:	vld1.32	{d18-d19}, [r5]!
   2082c:	vand	q8, q9, q8
   20830:	vst1.32	{d16-d17}, [lr], r1
   20834:	vld1.32	{d16-d17}, [r5]
   20838:	vld1.32	{d18-d19}, [ip]
   2083c:	vand	q8, q8, q9
   20840:	vst1.32	{d16-d17}, [r5]
   20844:	bne	20814 <opt_loop+0xa78>
   20848:	ldr	r1, [sp, #20]
   2084c:	cmp	r1, #0
   20850:	beq	2086c <opt_loop+0xad0>
   20854:	add	r2, r3, r4, lsl #2
   20858:	add	r6, r7, r4, lsl #2
   2085c:	vld1.32	{d16-d17}, [r6]
   20860:	vld1.32	{d18-d19}, [r2]
   20864:	vand	q8, q9, q8
   20868:	vst1.32	{d16-d17}, [r2]
   2086c:	ldr	r4, [pc, #4080]	; 21864 <opt_loop+0x1ac8>
   20870:	subs	r2, r0, r8
   20874:	add	r4, pc, r4
   20878:	beq	208a8 <opt_loop+0xb0c>
   2087c:	add	r3, r3, r8, lsl #2
   20880:	add	r7, r7, r8, lsl #2
   20884:	b	2088c <opt_loop+0xaf0>
   20888:	mov	r2, r0
   2088c:	ldr	r6, [r7], #4
   20890:	ldr	r5, [r3]
   20894:	sub	r2, r2, #1
   20898:	cmp	r2, #0
   2089c:	and	r6, r5, r6
   208a0:	str	r6, [r3], #4
   208a4:	bgt	2088c <opt_loop+0xaf0>
   208a8:	ldr	r2, [r9, #60]	; 0x3c
   208ac:	ldr	r3, [r9, #56]	; 0x38
   208b0:	cmp	r0, #4
   208b4:	ldr	r7, [r2, #80]	; 0x50
   208b8:	bcs	208c4 <opt_loop+0xb28>
   208bc:	ldr	r6, [sp, #12]
   208c0:	b	20980 <opt_loop+0xbe4>
   208c4:	add	r2, r3, r0, lsl #2
   208c8:	ldr	r6, [sp, #12]
   208cc:	cmp	r7, r2
   208d0:	addcc	r2, r7, r0, lsl #2
   208d4:	cmpcc	r3, r2
   208d8:	bcc	20980 <opt_loop+0xbe4>
   208dc:	bic	r8, r0, #3
   208e0:	mov	r1, #1
   208e4:	subs	r2, r8, #4
   208e8:	add	r2, r1, r2, lsr #2
   208ec:	and	r1, r2, #1
   208f0:	str	r1, [sp, #20]
   208f4:	beq	20be4 <opt_loop+0xe48>
   208f8:	sub	r2, r2, r1
   208fc:	mov	r4, #0
   20900:	mov	lr, r7
   20904:	mov	r6, r3
   20908:	mov	ip, #32
   2090c:	mov	r5, lr
   20910:	add	r1, r6, #16
   20914:	vld1.32	{d16-d17}, [r6], ip
   20918:	subs	r2, r2, #2
   2091c:	add	r4, r4, #8
   20920:	vld1.32	{d18-d19}, [r5]!
   20924:	vand	q8, q9, q8
   20928:	vst1.32	{d16-d17}, [lr], ip
   2092c:	vld1.32	{d16-d17}, [r5]
   20930:	vld1.32	{d18-d19}, [r1]
   20934:	vand	q8, q8, q9
   20938:	vst1.32	{d16-d17}, [r5]
   2093c:	bne	2090c <opt_loop+0xb70>
   20940:	ldr	r1, [sp, #20]
   20944:	cmp	r1, #0
   20948:	beq	20964 <opt_loop+0xbc8>
   2094c:	add	r1, r7, r4, lsl #2
   20950:	add	r2, r3, r4, lsl #2
   20954:	vld1.32	{d16-d17}, [r2]
   20958:	vld1.32	{d18-d19}, [r1]
   2095c:	vand	q8, q9, q8
   20960:	vst1.32	{d16-d17}, [r1]
   20964:	ldr	r4, [pc, #4064]	; 2194c <opt_loop+0x1bb0>
   20968:	ldr	r6, [sp, #12]
   2096c:	subs	r0, r0, r8
   20970:	add	r4, pc, r4
   20974:	beq	2099c <opt_loop+0xc00>
   20978:	add	r7, r7, r8, lsl #2
   2097c:	add	r3, r3, r8, lsl #2
   20980:	ldr	r1, [r3], #4
   20984:	ldr	r2, [r7]
   20988:	sub	r0, r0, #1
   2098c:	cmp	r0, #0
   20990:	and	r1, r2, r1
   20994:	str	r1, [r7], #4
   20998:	bgt	20980 <opt_loop+0xbe4>
   2099c:	ldr	r0, [r9, #72]	; 0x48
   209a0:	ldr	r1, [r9, #80]	; 0x50
   209a4:	mov	r7, #1
   209a8:	lsr	r2, r0, #5
   209ac:	and	r0, r0, #31
   209b0:	ldr	r3, [r1, r2, lsl #2]
   209b4:	orr	r0, r3, r7, lsl r0
   209b8:	str	r0, [r1, r2, lsl #2]
   209bc:	ldr	r0, [r9, #84]	; 0x54
   209c0:	cmp	r0, #0
   209c4:	beq	20774 <opt_loop+0x9d8>
   209c8:	ldr	r2, [r4, #40]	; 0x28
   209cc:	cmp	r2, #1
   209d0:	blt	20774 <opt_loop+0x9d8>
   209d4:	ldr	r3, [r0, #56]	; 0x38
   209d8:	ldr	r7, [r9, #80]	; 0x50
   209dc:	cmp	r2, #4
   209e0:	bcs	209ec <opt_loop+0xc50>
   209e4:	mov	r0, r2
   209e8:	b	20aa8 <opt_loop+0xd0c>
   209ec:	add	r0, r7, r2, lsl #2
   209f0:	cmp	r3, r0
   209f4:	addcc	r0, r3, r2, lsl #2
   209f8:	cmpcc	r7, r0
   209fc:	bcc	20aa4 <opt_loop+0xd08>
   20a00:	bic	r8, r2, #3
   20a04:	mov	r1, #1
   20a08:	subs	r0, r8, #4
   20a0c:	add	r0, r1, r0, lsr #2
   20a10:	and	r1, r0, #1
   20a14:	str	r1, [sp, #20]
   20a18:	beq	20bd0 <opt_loop+0xe34>
   20a1c:	sub	r0, r0, r1
   20a20:	mov	r4, #0
   20a24:	mov	lr, r3
   20a28:	mov	r6, r7
   20a2c:	mov	ip, #32
   20a30:	mov	r5, lr
   20a34:	add	r1, r6, #16
   20a38:	vld1.32	{d16-d17}, [r6], ip
   20a3c:	subs	r0, r0, #2
   20a40:	add	r4, r4, #8
   20a44:	vld1.32	{d18-d19}, [r5]!
   20a48:	vand	q8, q9, q8
   20a4c:	vst1.32	{d16-d17}, [lr], ip
   20a50:	vld1.32	{d16-d17}, [r5]
   20a54:	vld1.32	{d18-d19}, [r1]
   20a58:	vand	q8, q8, q9
   20a5c:	vst1.32	{d16-d17}, [r5]
   20a60:	bne	20a30 <opt_loop+0xc94>
   20a64:	ldr	r0, [sp, #20]
   20a68:	cmp	r0, #0
   20a6c:	beq	20a88 <opt_loop+0xcec>
   20a70:	add	r0, r3, r4, lsl #2
   20a74:	add	r1, r7, r4, lsl #2
   20a78:	vld1.32	{d16-d17}, [r1]
   20a7c:	vld1.32	{d18-d19}, [r0]
   20a80:	vand	q8, q9, q8
   20a84:	vst1.32	{d16-d17}, [r0]
   20a88:	ldr	r4, [pc, #4048]	; 21a60 <opt_loop+0x1cc4>
   20a8c:	subs	r0, r2, r8
   20a90:	add	r4, pc, r4
   20a94:	beq	20ac4 <opt_loop+0xd28>
   20a98:	add	r3, r3, r8, lsl #2
   20a9c:	add	r7, r7, r8, lsl #2
   20aa0:	b	20aa8 <opt_loop+0xd0c>
   20aa4:	mov	r0, r2
   20aa8:	ldr	r1, [r7], #4
   20aac:	ldr	r6, [r3]
   20ab0:	sub	r0, r0, #1
   20ab4:	cmp	r0, #0
   20ab8:	and	r1, r6, r1
   20abc:	str	r1, [r3], #4
   20ac0:	bgt	20aa8 <opt_loop+0xd0c>
   20ac4:	ldr	r0, [r9, #84]	; 0x54
   20ac8:	ldr	r3, [r9, #80]	; 0x50
   20acc:	cmp	r2, #4
   20ad0:	ldr	r7, [r0, #80]	; 0x50
   20ad4:	bcs	20ae0 <opt_loop+0xd44>
   20ad8:	ldr	r6, [sp, #12]
   20adc:	b	20b9c <opt_loop+0xe00>
   20ae0:	add	r0, r3, r2, lsl #2
   20ae4:	ldr	r6, [sp, #12]
   20ae8:	cmp	r7, r0
   20aec:	addcc	r0, r7, r2, lsl #2
   20af0:	cmpcc	r3, r0
   20af4:	bcc	20b9c <opt_loop+0xe00>
   20af8:	bic	r8, r2, #3
   20afc:	mov	r1, #1
   20b00:	subs	r0, r8, #4
   20b04:	add	r0, r1, r0, lsr #2
   20b08:	and	r1, r0, #1
   20b0c:	str	r1, [sp, #20]
   20b10:	beq	20bf8 <opt_loop+0xe5c>
   20b14:	sub	r0, r0, r1
   20b18:	mov	r4, #0
   20b1c:	mov	lr, r7
   20b20:	mov	r6, r3
   20b24:	mov	ip, #32
   20b28:	mov	r5, lr
   20b2c:	add	r1, r6, #16
   20b30:	vld1.32	{d16-d17}, [r6], ip
   20b34:	subs	r0, r0, #2
   20b38:	add	r4, r4, #8
   20b3c:	vld1.32	{d18-d19}, [r5]!
   20b40:	vand	q8, q9, q8
   20b44:	vst1.32	{d16-d17}, [lr], ip
   20b48:	vld1.32	{d16-d17}, [r5]
   20b4c:	vld1.32	{d18-d19}, [r1]
   20b50:	vand	q8, q8, q9
   20b54:	vst1.32	{d16-d17}, [r5]
   20b58:	bne	20b28 <opt_loop+0xd8c>
   20b5c:	ldr	r0, [sp, #20]
   20b60:	cmp	r0, #0
   20b64:	beq	20b80 <opt_loop+0xde4>
   20b68:	add	r0, r7, r4, lsl #2
   20b6c:	add	r1, r3, r4, lsl #2
   20b70:	vld1.32	{d16-d17}, [r1]
   20b74:	vld1.32	{d18-d19}, [r0]
   20b78:	vand	q8, q9, q8
   20b7c:	vst1.32	{d16-d17}, [r0]
   20b80:	ldr	r4, [pc, #4044]	; 21b54 <opt_loop+0x1db8>
   20b84:	ldr	r6, [sp, #12]
   20b88:	subs	r2, r2, r8
   20b8c:	add	r4, pc, r4
   20b90:	beq	20774 <opt_loop+0x9d8>
   20b94:	add	r7, r7, r8, lsl #2
   20b98:	add	r3, r3, r8, lsl #2
   20b9c:	ldr	r0, [r3], #4
   20ba0:	ldr	r1, [r7]
   20ba4:	sub	r2, r2, #1
   20ba8:	cmp	r2, #0
   20bac:	and	r0, r1, r0
   20bb0:	str	r0, [r7], #4
   20bb4:	bgt	20b9c <opt_loop+0xe00>
   20bb8:	b	20774 <opt_loop+0x9d8>
   20bbc:	mov	r4, #0
   20bc0:	ldr	r1, [sp, #20]
   20bc4:	cmp	r1, #0
   20bc8:	bne	20854 <opt_loop+0xab8>
   20bcc:	b	2086c <opt_loop+0xad0>
   20bd0:	mov	r4, #0
   20bd4:	ldr	r0, [sp, #20]
   20bd8:	cmp	r0, #0
   20bdc:	bne	20a70 <opt_loop+0xcd4>
   20be0:	b	20a88 <opt_loop+0xcec>
   20be4:	mov	r4, #0
   20be8:	ldr	r1, [sp, #20]
   20bec:	cmp	r1, #0
   20bf0:	bne	2094c <opt_loop+0xbb0>
   20bf4:	b	20964 <opt_loop+0xbc8>
   20bf8:	mov	r4, #0
   20bfc:	ldr	r0, [sp, #20]
   20c00:	cmp	r0, #0
   20c04:	bne	20b68 <opt_loop+0xdcc>
   20c08:	b	20b80 <opt_loop+0xde4>
   20c0c:	str	sl, [r4, #44]	; 0x2c
   20c10:	ldr	r0, [pc, #3968]	; 21b98 <opt_loop+0x1dfc>
   20c14:	ldr	r0, [pc, r0]
   20c18:	ldr	r1, [pc, #3964]	; 21b9c <opt_loop+0x1e00>
   20c1c:	add	r1, pc, r1
   20c20:	str	r0, [r1]
   20c24:	ldr	r1, [r4, #48]	; 0x30
   20c28:	ldr	r0, [pc, #3952]	; 21ba0 <opt_loop+0x1e04>
   20c2c:	lsl	r2, r1, #3
   20c30:	mov	r1, #0
   20c34:	ldr	r0, [pc, r0]
   20c38:	bl	ea0 <memset@plt>
   20c3c:	ldr	r0, [pc, #3936]	; 21ba4 <opt_loop+0x1e08>
   20c40:	mov	r1, #0
   20c44:	mov	r2, #852	; 0x354
   20c48:	add	r0, pc, r0
   20c4c:	bl	ea0 <memset@plt>
   20c50:	ldr	r5, [sp]
   20c54:	ldr	r3, [r4, #16]
   20c58:	ldr	r0, [r5, #36]	; 0x24
   20c5c:	cmp	r3, #1
   20c60:	str	r0, [sp, #4]
   20c64:	blt	20ce4 <opt_loop+0xf48>
   20c68:	ldr	r1, [pc, #4056]	; 21c48 <opt_loop+0x1eac>
   20c6c:	sub	r7, r3, #1
   20c70:	and	r0, r3, #3
   20c74:	mov	r2, #0
   20c78:	cmp	r7, #3
   20c7c:	ldr	r1, [pc, r1]
   20c80:	bcc	20cc0 <opt_loop+0xf24>
   20c84:	sub	r3, r3, r0
   20c88:	add	r7, r1, #8
   20c8c:	mov	r2, #0
   20c90:	ldr	r6, [r7, #-8]
   20c94:	add	r2, r2, #4
   20c98:	cmp	r3, r2
   20c9c:	str	sl, [r6, #112]	; 0x70
   20ca0:	ldr	r6, [r7, #-4]
   20ca4:	str	sl, [r6, #112]	; 0x70
   20ca8:	ldr	r6, [r7]
   20cac:	str	sl, [r6, #112]	; 0x70
   20cb0:	ldr	r6, [r7, #4]
   20cb4:	add	r7, r7, #16
   20cb8:	str	sl, [r6, #112]	; 0x70
   20cbc:	bne	20c90 <opt_loop+0xef4>
   20cc0:	cmp	r0, #0
   20cc4:	beq	20cdc <opt_loop+0xf40>
   20cc8:	add	r1, r1, r2, lsl #2
   20ccc:	ldr	r2, [r1], #4
   20cd0:	subs	r0, r0, #1
   20cd4:	str	sl, [r2, #112]	; 0x70
   20cd8:	bne	20ccc <opt_loop+0xf30>
   20cdc:	ldr	r0, [r5, #36]	; 0x24
   20ce0:	ldr	r6, [sp, #12]
   20ce4:	cmp	r0, #1
   20ce8:	blt	20d50 <opt_loop+0xfb4>
   20cec:	ldr	r1, [pc, #4084]	; 21ce8 <opt_loop+0x1f4c>
   20cf0:	ldr	r1, [pc, r1]
   20cf4:	ldr	r2, [r1, r0, lsl #2]
   20cf8:	cmp	r2, #0
   20cfc:	bne	20d10 <opt_loop+0xf74>
   20d00:	b	20d44 <opt_loop+0xfa8>
   20d04:	ldr	r2, [r1, r0, lsl #2]
   20d08:	cmp	r2, #0
   20d0c:	beq	20d44 <opt_loop+0xfa8>
   20d10:	ldr	r3, [r2, #60]	; 0x3c
   20d14:	ldr	r7, [r3, #112]	; 0x70
   20d18:	str	r7, [r2, #68]	; 0x44
   20d1c:	add	r7, r2, #48	; 0x30
   20d20:	str	r7, [r3, #112]	; 0x70
   20d24:	ldr	r3, [r2, #84]	; 0x54
   20d28:	ldr	r7, [r3, #112]	; 0x70
   20d2c:	str	r7, [r2, #92]	; 0x5c
   20d30:	add	r7, r2, #72	; 0x48
   20d34:	str	r7, [r3, #112]	; 0x70
   20d38:	ldr	r2, [r2, #100]	; 0x64
   20d3c:	cmp	r2, #0
   20d40:	bne	20d10 <opt_loop+0xf74>
   20d44:	sub	r0, r0, #1
   20d48:	cmp	r0, #0
   20d4c:	bgt	20d04 <opt_loop+0xf68>
   20d50:	ldr	r0, [sp, #4]
   20d54:	cmp	r0, #0
   20d58:	bmi	1fdd0 <opt_loop+0x34>
   20d5c:	ldr	r1, [sp, #4]
   20d60:	b	20d78 <opt_loop+0xfdc>
   20d64:	ldr	r1, [sp, #8]
   20d68:	sub	r0, r1, #1
   20d6c:	cmp	r1, #0
   20d70:	mov	r1, r0
   20d74:	ble	1fdd0 <opt_loop+0x34>
   20d78:	ldr	r0, [pc, #4004]	; 21d24 <opt_loop+0x1f88>
   20d7c:	ldr	r0, [pc, r0]
   20d80:	str	r1, [sp, #8]
   20d84:	ldr	r9, [r0, r1, lsl #2]
   20d88:	cmp	r9, #0
   20d8c:	bne	20dbc <opt_loop+0x1020>
   20d90:	b	20d64 <opt_loop+0xfc8>
   20d94:	.word	0x00026ae4
   20d98:	.word	0x00026acc
   20d9c:	ldr	r3, [r9, #204]	; 0xcc
   20da0:	str	r0, [r9, #52]	; 0x34
   20da4:	rsb	r0, r0, #0
   20da8:	str	r3, [r9, #132]	; 0x84
   20dac:	str	r0, [r9, #76]	; 0x4c
   20db0:	ldr	r9, [r9, #100]	; 0x64
   20db4:	cmp	r9, #0
   20db8:	beq	20d64 <opt_loop+0xfc8>
   20dbc:	ldr	r4, [r9, #112]	; 0x70
   20dc0:	add	r0, r9, #136	; 0x88
   20dc4:	cmp	r4, #0
   20dc8:	beq	20f94 <opt_loop+0x11f8>
   20dcc:	ldr	r1, [r4, #16]
   20dd0:	mov	r2, #72	; 0x48
   20dd4:	add	r1, r1, #136	; 0x88
   20dd8:	bl	de0 <memcpy@plt>
   20ddc:	ldr	r0, [r4, #20]
   20de0:	cmp	r0, #0
   20de4:	beq	20fd0 <opt_loop+0x1234>
   20de8:	ldr	r3, [r9, #136]	; 0x88
   20dec:	ldr	r5, [r0, #16]
   20df0:	ldr	r1, [r5, #136]	; 0x88
   20df4:	cmp	r3, r1
   20df8:	beq	20e48 <opt_loop+0x10ac>
   20dfc:	b	20e3c <opt_loop+0x10a0>
   20e00:	.word	0x00026b9c
   20e04:	.word	0x000269dc
   20e08:	.word	0x00026ab0
   20e0c:	ldr	ip, [r9, #204]	; 0xcc
   20e10:	ldr	r1, [r5, #204]	; 0xcc
   20e14:	cmp	ip, r1
   20e18:	movne	ip, #0
   20e1c:	strne	ip, [r9, #204]	; 0xcc
   20e20:	ldr	r0, [r0, #20]
   20e24:	cmp	r0, #0
   20e28:	beq	20fd8 <opt_loop+0x123c>
   20e2c:	ldr	r5, [r0, #16]
   20e30:	ldr	r1, [r5, #136]	; 0x88
   20e34:	cmp	r3, r1
   20e38:	beq	20e48 <opt_loop+0x10ac>
   20e3c:	mov	r3, #0
   20e40:	str	r3, [r9, #136]	; 0x88
   20e44:	ldr	r5, [r0, #16]
   20e48:	ldr	r1, [r5, #140]	; 0x8c
   20e4c:	ldr	r2, [r9, #140]	; 0x8c
   20e50:	cmp	r2, r1
   20e54:	strne	sl, [r9, #140]	; 0x8c
   20e58:	ldrne	r5, [r0, #16]
   20e5c:	ldr	r2, [r9, #144]	; 0x90
   20e60:	ldr	r1, [r5, #144]	; 0x90
   20e64:	cmp	r2, r1
   20e68:	strne	sl, [r9, #144]	; 0x90
   20e6c:	ldrne	r5, [r0, #16]
   20e70:	ldr	r2, [r9, #148]	; 0x94
   20e74:	ldr	r1, [r5, #148]	; 0x94
   20e78:	cmp	r2, r1
   20e7c:	strne	sl, [r9, #148]	; 0x94
   20e80:	ldrne	r5, [r0, #16]
   20e84:	ldr	r2, [r9, #152]	; 0x98
   20e88:	ldr	r1, [r5, #152]	; 0x98
   20e8c:	cmp	r2, r1
   20e90:	strne	sl, [r9, #152]	; 0x98
   20e94:	ldrne	r5, [r0, #16]
   20e98:	ldr	r2, [r9, #156]	; 0x9c
   20e9c:	ldr	r1, [r5, #156]	; 0x9c
   20ea0:	cmp	r2, r1
   20ea4:	strne	sl, [r9, #156]	; 0x9c
   20ea8:	ldrne	r5, [r0, #16]
   20eac:	ldr	r2, [r9, #160]	; 0xa0
   20eb0:	ldr	r1, [r5, #160]	; 0xa0
   20eb4:	cmp	r2, r1
   20eb8:	strne	sl, [r9, #160]	; 0xa0
   20ebc:	ldrne	r5, [r0, #16]
   20ec0:	ldr	r2, [r9, #164]	; 0xa4
   20ec4:	ldr	r1, [r5, #164]	; 0xa4
   20ec8:	cmp	r2, r1
   20ecc:	strne	sl, [r9, #164]	; 0xa4
   20ed0:	ldrne	r5, [r0, #16]
   20ed4:	ldr	r2, [r9, #168]	; 0xa8
   20ed8:	ldr	r1, [r5, #168]	; 0xa8
   20edc:	cmp	r2, r1
   20ee0:	strne	sl, [r9, #168]	; 0xa8
   20ee4:	ldrne	r5, [r0, #16]
   20ee8:	ldr	r2, [r9, #172]	; 0xac
   20eec:	ldr	r1, [r5, #172]	; 0xac
   20ef0:	cmp	r2, r1
   20ef4:	strne	sl, [r9, #172]	; 0xac
   20ef8:	ldrne	r5, [r0, #16]
   20efc:	ldr	r2, [r9, #176]	; 0xb0
   20f00:	ldr	r1, [r5, #176]	; 0xb0
   20f04:	cmp	r2, r1
   20f08:	strne	sl, [r9, #176]	; 0xb0
   20f0c:	ldrne	r5, [r0, #16]
   20f10:	ldr	r2, [r9, #180]	; 0xb4
   20f14:	ldr	r1, [r5, #180]	; 0xb4
   20f18:	cmp	r2, r1
   20f1c:	strne	sl, [r9, #180]	; 0xb4
   20f20:	ldrne	r5, [r0, #16]
   20f24:	ldr	r2, [r9, #184]	; 0xb8
   20f28:	ldr	r1, [r5, #184]	; 0xb8
   20f2c:	cmp	r2, r1
   20f30:	strne	sl, [r9, #184]	; 0xb8
   20f34:	ldrne	r5, [r0, #16]
   20f38:	ldr	r2, [r9, #188]	; 0xbc
   20f3c:	ldr	r1, [r5, #188]	; 0xbc
   20f40:	cmp	r2, r1
   20f44:	strne	sl, [r9, #188]	; 0xbc
   20f48:	ldrne	r5, [r0, #16]
   20f4c:	ldr	r2, [r9, #192]	; 0xc0
   20f50:	ldr	r1, [r5, #192]	; 0xc0
   20f54:	cmp	r2, r1
   20f58:	strne	sl, [r9, #192]	; 0xc0
   20f5c:	ldrne	r5, [r0, #16]
   20f60:	ldr	r2, [r9, #196]	; 0xc4
   20f64:	ldr	r1, [r5, #196]	; 0xc4
   20f68:	cmp	r2, r1
   20f6c:	strne	sl, [r9, #196]	; 0xc4
   20f70:	ldrne	r5, [r0, #16]
   20f74:	ldr	r2, [r9, #200]	; 0xc8
   20f78:	ldr	r1, [r5, #200]	; 0xc8
   20f7c:	cmp	r2, r1
   20f80:	beq	20e0c <opt_loop+0x1070>
   20f84:	mov	r2, #0
   20f88:	str	r2, [r9, #200]	; 0xc8
   20f8c:	ldr	r5, [r0, #16]
   20f90:	b	20e0c <opt_loop+0x1070>
   20f94:	mov	r2, r0
   20f98:	mov	r1, #68	; 0x44
   20f9c:	mov	ip, #0
   20fa0:	vst1.32	{d8-d9}, [r2], r1
   20fa4:	str	ip, [r0, #64]	; 0x40
   20fa8:	str	ip, [r2]
   20fac:	add	r2, r0, #48	; 0x30
   20fb0:	vst1.32	{d8-d9}, [r2]
   20fb4:	add	r2, r0, #32
   20fb8:	add	r0, r0, #16
   20fbc:	vst1.32	{d8-d9}, [r2]
   20fc0:	vst1.32	{d8-d9}, [r0]
   20fc4:	mov	r2, #0
   20fc8:	b	20fd8 <opt_loop+0x123c>
   20fcc:	.word	0x000268a8
   20fd0:	ldr	r2, [r9, #200]	; 0xc8
   20fd4:	ldr	ip, [r9, #204]	; 0xcc
   20fd8:	str	r2, [sp, #16]
   20fdc:	ldr	r8, [r9, #4]
   20fe0:	add	r4, r9, #200	; 0xc8
   20fe4:	ldr	r3, [pc, #4088]	; 21fe4 <opt_loop+0x2248>
   20fe8:	str	r4, [sp, #20]
   20fec:	cmp	r8, #0
   20ff0:	add	r3, pc, r3
   20ff4:	bne	210d8 <opt_loop+0x133c>
   20ff8:	ldr	r1, [sp, #16]
   20ffc:	cmp	r6, #0
   21000:	beq	22a98 <opt_loop+0x2cfc>
   21004:	cmp	r1, #0
   21008:	beq	21038 <opt_loop+0x129c>
   2100c:	ldr	r0, [r9, #128]	; 0x80
   21010:	cmp	r0, #0
   21014:	bne	21038 <opt_loop+0x129c>
   21018:	cmp	ip, #0
   2101c:	beq	21038 <opt_loop+0x129c>
   21020:	ldr	r0, [r4]
   21024:	cmp	r0, r1
   21028:	bne	21038 <opt_loop+0x129c>
   2102c:	ldr	r0, [r9, #204]	; 0xcc
   21030:	cmp	r0, ip
   21034:	beq	21048 <opt_loop+0x12ac>
   21038:	ldr	r0, [r9, #8]
   2103c:	and	r0, r0, #7
   21040:	cmp	r0, #6
   21044:	bne	22a98 <opt_loop+0x2cfc>
   21048:	ldr	r0, [r9, #4]
   2104c:	ldr	r4, [pc, #4064]	; 22034 <opt_loop+0x2298>
   21050:	add	r4, pc, r4
   21054:	cmp	r0, #0
   21058:	mov	r8, r4
   2105c:	beq	23194 <opt_loop+0x33f8>
   21060:	str	sl, [r9, #4]
   21064:	b	23190 <opt_loop+0x33f4>
   21068:	ldr	r0, [pc, #4080]	; 22060 <opt_loop+0x22c4>
   2106c:	tst	r5, #230	; 0xe6
   21070:	add	r0, pc, r0
   21074:	mov	r1, r0
   21078:	ldr	r0, [r0, #44]	; 0x2c
   2107c:	add	r0, r0, #1
   21080:	str	r0, [r1, #44]	; 0x2c
   21084:	beq	21afc <opt_loop+0x1d60>
   21088:	ldr	r1, [pc, #4052]	; 22064 <opt_loop+0x22c8>
   2108c:	ldr	r1, [pc, r1]
   21090:	ldr	r3, [pc, #4048]	; 22068 <opt_loop+0x22cc>
   21094:	add	r2, r1, #20
   21098:	add	r3, pc, r3
   2109c:	str	r2, [r3]
   210a0:	stmib	r1, {r4, r6}
   210a4:	str	r5, [r1]
   210a8:	str	r0, [r1, #12]
   210ac:	ldr	r3, [pc, #4024]	; 2206c <opt_loop+0x22d0>
   210b0:	ldr	r4, [sp, #20]
   210b4:	add	r3, pc, r3
   210b8:	ldr	r2, [r3, r7, lsl #2]
   210bc:	str	r2, [r1, #16]
   210c0:	str	r1, [r3, r7, lsl #2]
   210c4:	str	r0, [r4]
   210c8:	mov	r6, lr
   210cc:	ldr	r8, [r8, #16]
   210d0:	cmp	r8, #0
   210d4:	beq	20ff8 <opt_loop+0x125c>
   210d8:	ldr	r5, [r8]
   210dc:	cmp	r5, #177	; 0xb1
   210e0:	bhi	210cc <opt_loop+0x1330>
   210e4:	add	r0, pc, #28
   210e8:	ldr	r2, [r0, r5, lsl #2]
   210ec:	add	pc, r0, r2
   210f0:	.word	0x000267b8
   210f4:	.word	0x00026744
   210f8:	.word	0x00026728
   210fc:	.word	0x000267fc
   21100:	.word	0x000265f8
   21104:	.word	0x00026508
   21108:	.word	0x00000fd4
   2110c:	.word	0x00001064
   21110:	.word	0x00000f30
   21114:	.word	0x000010f4
   21118:	.word	0x000002cc
   2111c:	.word	0xffffffc4
   21120:	.word	0xffffffc4
   21124:	.word	0x00000e7c
   21128:	.word	0xffffffc4
   2112c:	.word	0xffffffc4
   21130:	.word	0xffffffc4
   21134:	.word	0xffffffc4
   21138:	.word	0x00000370
   2113c:	.word	0xffffffc4
   21140:	.word	0xffffffc4
   21144:	.word	0xffffffc4
   21148:	.word	0xffffffc4
   2114c:	.word	0xffffffc4
   21150:	.word	0xffffffc4
   21154:	.word	0xffffffc4
   21158:	.word	0x000002cc
   2115c:	.word	0xffffffc4
   21160:	.word	0xffffffc4
   21164:	.word	0xffffffc4
   21168:	.word	0xffffffc4
   2116c:	.word	0xffffffc4
   21170:	.word	0xffffffc4
   21174:	.word	0xffffffc4
   21178:	.word	0x00000370
   2117c:	.word	0xffffffc4
   21180:	.word	0xffffffc4
   21184:	.word	0xffffffc4
   21188:	.word	0x00000400
   2118c:	.word	0xffffffc4
   21190:	.word	0xffffffc4
   21194:	.word	0xffffffc4
   21198:	.word	0x000002cc
   2119c:	.word	0xffffffc4
   211a0:	.word	0xffffffc4
   211a4:	.word	0xffffffc4
   211a8:	.word	0x00000400
   211ac:	.word	0xffffffc4
   211b0:	.word	0xffffffc4
   211b4:	.word	0xffffffc4
   211b8:	.word	0x00000370
   211bc:	.word	0xffffffc4
   211c0:	.word	0xffffffc4
   211c4:	.word	0xffffffc4
   211c8:	.word	0x00000400
   211cc:	.word	0xffffffc4
   211d0:	.word	0xffffffc4
   211d4:	.word	0xffffffc4
   211d8:	.word	0x000002cc
   211dc:	.word	0xffffffc4
   211e0:	.word	0xffffffc4
   211e4:	.word	0xffffffc4
   211e8:	.word	0xffffffc4
   211ec:	.word	0xffffffc4
   211f0:	.word	0xffffffc4
   211f4:	.word	0xffffffc4
   211f8:	.word	0x00000370
   211fc:	.word	0xffffffc4
   21200:	.word	0xffffffc4
   21204:	.word	0xffffffc4
   21208:	.word	0x00000490
   2120c:	.word	0xffffffc4
   21210:	.word	0xffffffc4
   21214:	.word	0xffffffc4
   21218:	.word	0x000002cc
   2121c:	.word	0xffffffc4
   21220:	.word	0xffffffc4
   21224:	.word	0xffffffc4
   21228:	.word	0x00000490
   2122c:	.word	0xffffffc4
   21230:	.word	0xffffffc4
   21234:	.word	0xffffffc4
   21238:	.word	0x00000370
   2123c:	.word	0xffffffc4
   21240:	.word	0xffffffc4
   21244:	.word	0xffffffc4
   21248:	.word	0x00000490
   2124c:	.word	0xffffffc4
   21250:	.word	0xffffffc4
   21254:	.word	0xffffffc4
   21258:	.word	0x000002cc
   2125c:	.word	0xffffffc4
   21260:	.word	0xffffffc4
   21264:	.word	0xffffffc4
   21268:	.word	0xffffffc4
   2126c:	.word	0xffffffc4
   21270:	.word	0xffffffc4
   21274:	.word	0xffffffc4
   21278:	.word	0x00000370
   2127c:	.word	0xffffffc4
   21280:	.word	0xffffffc4
   21284:	.word	0xffffffc4
   21288:	.word	0x00000f68
   2128c:	.word	0x00001120
   21290:	.word	0xffffffc4
   21294:	.word	0xffffffc4
   21298:	.word	0x000002cc
   2129c:	.word	0xffffffc4
   212a0:	.word	0xffffffc4
   212a4:	.word	0xffffffc4
   212a8:	.word	0xffffffc4
   212ac:	.word	0xffffffc4
   212b0:	.word	0xffffffc4
   212b4:	.word	0xffffffc4
   212b8:	.word	0x00000370
   212bc:	.word	0xffffffc4
   212c0:	.word	0xffffffc4
   212c4:	.word	0xffffffc4
   212c8:	.word	0xffffffc4
   212cc:	.word	0xffffffc4
   212d0:	.word	0xffffffc4
   212d4:	.word	0xffffffc4
   212d8:	.word	0x000002cc
   212dc:	.word	0xffffffc4
   212e0:	.word	0xffffffc4
   212e4:	.word	0xffffffc4
   212e8:	.word	0xffffffc4
   212ec:	.word	0xffffffc4
   212f0:	.word	0xffffffc4
   212f4:	.word	0xffffffc4
   212f8:	.word	0x00000370
   212fc:	.word	0xffffffc4
   21300:	.word	0xffffffc4
   21304:	.word	0xffffffc4
   21308:	.word	0x000011bc
   2130c:	.word	0xffffffc4
   21310:	.word	0xffffffc4
   21314:	.word	0xffffffc4
   21318:	.word	0x00000dd4
   2131c:	.word	0xffffffc4
   21320:	.word	0xffffffc4
   21324:	.word	0x00001190
   21328:	.word	0xffffffc4
   2132c:	.word	0xffffffc4
   21330:	.word	0xffffffc4
   21334:	.word	0xffffffc4
   21338:	.word	0xffffffc4
   2133c:	.word	0xffffffc4
   21340:	.word	0xffffffc4
   21344:	.word	0xffffffc4
   21348:	.word	0xffffffc4
   2134c:	.word	0xffffffc4
   21350:	.word	0xffffffc4
   21354:	.word	0xffffffc4
   21358:	.word	0xffffffc4
   2135c:	.word	0xffffffc4
   21360:	.word	0xffffffc4
   21364:	.word	0xffffffc4
   21368:	.word	0xffffffc4
   2136c:	.word	0xffffffc4
   21370:	.word	0xffffffc4
   21374:	.word	0xffffffc4
   21378:	.word	0xffffffc4
   2137c:	.word	0xffffffc4
   21380:	.word	0xffffffc4
   21384:	.word	0xffffffc4
   21388:	.word	0xffffffc4
   2138c:	.word	0xffffffc4
   21390:	.word	0xffffffc4
   21394:	.word	0xffffffc4
   21398:	.word	0xffffffc4
   2139c:	.word	0xffffffc4
   213a0:	.word	0xffffffc4
   213a4:	.word	0xffffffc4
   213a8:	.word	0xffffffc4
   213ac:	.word	0xffffffc4
   213b0:	.word	0xffffffc4
   213b4:	.word	0xffffffc4
   213b8:	.word	0xffffffc4
   213bc:	.word	0xffffffc4
   213c0:	.word	0xffffffc4
   213c4:	.word	0xffffffc4
   213c8:	.word	0xffffffc4
   213cc:	.word	0x00000ea8
   213d0:	.word	0x00026590
   213d4:	cmp	r6, #0
   213d8:	beq	21734 <opt_loop+0x1998>
   213dc:	ldr	r7, [r8, #12]
   213e0:	cmp	r7, #0
   213e4:	beq	21950 <opt_loop+0x1bb4>
   213e8:	mov	lr, r6
   213ec:	ldr	r4, [r4]
   213f0:	ldr	r6, [pc, #4016]	; 223a8 <opt_loop+0x260c>
   213f4:	ldr	r6, [pc, r6]
   213f8:	ldr	r0, [r6, r4, lsl #3]
   213fc:	cmp	r0, #0
   21400:	beq	21b20 <opt_loop+0x1d84>
   21404:	movw	r1, #8923	; 0x22db
   21408:	lsl	r0, r7, #4
   2140c:	movt	r1, #39383	; 0x99d7
   21410:	umull	r0, r2, r0, r1
   21414:	mov	r1, #213	; 0xd5
   21418:	lsr	r0, r2, #7
   2141c:	mul	r0, r0, r1
   21420:	rsb	r0, r0, r7, lsl #4
   21424:	ldr	r2, [r3, r0, lsl #2]
   21428:	cmp	r2, #0
   2142c:	bne	21440 <opt_loop+0x16a4>
   21430:	b	217c8 <opt_loop+0x1a2c>
   21434:	ldr	r2, [r2, #16]
   21438:	cmp	r2, #0
   2143c:	beq	217c8 <opt_loop+0x1a2c>
   21440:	ldr	r1, [r2]
   21444:	cmp	r1, #0
   21448:	bne	21434 <opt_loop+0x1698>
   2144c:	ldr	r1, [r2, #4]
   21450:	cmp	r1, r7
   21454:	bne	21434 <opt_loop+0x1698>
   21458:	ldr	r1, [r2, #8]
   2145c:	cmp	r1, #0
   21460:	bne	21434 <opt_loop+0x1698>
   21464:	ldr	r2, [r2, #12]
   21468:	ubfx	r5, r5, #4, #4
   2146c:	cmp	r5, #8
   21470:	bls	21848 <opt_loop+0x1aac>
   21474:	b	23770 <opt_loop+0x39d4>
   21478:	mov	lr, r6
   2147c:	cmp	r6, #0
   21480:	beq	21650 <opt_loop+0x18b4>
   21484:	ldr	r7, [r9, #200]	; 0xc8
   21488:	ldr	r4, [r9, #204]	; 0xcc
   2148c:	ldr	r2, [pc, #3992]	; 2242c <opt_loop+0x2690>
   21490:	and	r0, r5, #240	; 0xf0
   21494:	ldr	r2, [pc, r2]
   21498:	ldr	r1, [r2, r4, lsl #3]
   2149c:	ldr	r6, [r2, r7, lsl #3]
   214a0:	cmp	r1, #0
   214a4:	beq	21894 <opt_loop+0x1af8>
   214a8:	cmp	r6, #0
   214ac:	beq	21c88 <opt_loop+0x1eec>
   214b0:	ubfx	r5, r5, #4, #4
   214b4:	cmp	r5, #8
   214b8:	bhi	23770 <opt_loop+0x39d4>
   214bc:	add	r0, r2, r4, lsl #3
   214c0:	add	r1, r2, r7, lsl #3
   214c4:	mov	r6, lr
   214c8:	ldr	r0, [r0, #4]
   214cc:	ldr	r2, [r1, #4]
   214d0:	add	r1, pc, #4
   214d4:	ldr	r4, [r1, r5, lsl #2]
   214d8:	add	pc, r1, r4
   214dc:	.word	0x00000024
   214e0:	.word	0x00001364
   214e4:	.word	0x00001340
   214e8:	.word	0x00001348
   214ec:	.word	0x00001338
   214f0:	.word	0x0000136c
   214f4:	.word	0x00001374
   214f8:	.word	0x0000135c
   214fc:	.word	0x0000137c
   21500:	add	r7, r0, r2
   21504:	b	2285c <opt_loop+0x2ac0>
   21508:	mov	lr, r6
   2150c:	ldr	r6, [r8, #12]
   21510:	movw	r1, #8923	; 0x22db
   21514:	movt	r1, #39383	; 0x99d7
   21518:	eor	r0, r5, r6, lsl #4
   2151c:	umull	r2, r4, r0, r1
   21520:	mov	r1, #213	; 0xd5
   21524:	lsr	r2, r4, #7
   21528:	mls	r7, r2, r1, r0
   2152c:	ldr	r0, [r3, r7, lsl #2]
   21530:	ldr	r1, [pc, #4044]	; 22504 <opt_loop+0x2768>
   21534:	cmp	r0, #0
   21538:	add	r1, pc, r1
   2153c:	bne	21550 <opt_loop+0x17b4>
   21540:	b	21744 <opt_loop+0x19a8>
   21544:	ldr	r0, [r0, #16]
   21548:	cmp	r0, #0
   2154c:	beq	21744 <opt_loop+0x19a8>
   21550:	ldr	r2, [r0]
   21554:	cmp	r2, r5
   21558:	bne	21544 <opt_loop+0x17a8>
   2155c:	ldr	r2, [r0, #4]
   21560:	cmp	r2, r6
   21564:	bne	21544 <opt_loop+0x17a8>
   21568:	ldr	r2, [r0, #8]
   2156c:	cmp	r2, #0
   21570:	bne	21544 <opt_loop+0x17a8>
   21574:	ldr	r0, [r0, #12]
   21578:	ldr	r4, [sp, #20]
   2157c:	mov	r6, lr
   21580:	cmp	lr, #0
   21584:	beq	217b4 <opt_loop+0x1a18>
   21588:	ldr	r2, [r4]
   2158c:	cmp	r2, r0
   21590:	bne	217b4 <opt_loop+0x1a18>
   21594:	b	229e0 <opt_loop+0x2c44>
   21598:	ldr	r7, [r9, #204]	; 0xcc
   2159c:	mov	lr, r6
   215a0:	cmp	r6, #0
   215a4:	beq	219d8 <opt_loop+0x1c3c>
   215a8:	ldr	r0, [pc, #4052]	; 22584 <opt_loop+0x27e8>
   215ac:	ldr	r0, [pc, r0]
   215b0:	ldr	r0, [r0, r7, lsl #3]
   215b4:	cmp	r0, #0
   215b8:	beq	219d8 <opt_loop+0x1c3c>
   215bc:	and	r0, r5, #24
   215c0:	movw	r1, #8923	; 0x22db
   215c4:	orr	r6, r0, #32
   215c8:	movt	r1, #39383	; 0x99d7
   215cc:	str	r6, [r8]
   215d0:	ldr	r0, [pc, #4068]	; 225bc <opt_loop+0x2820>
   215d4:	ldr	r0, [pc, r0]
   215d8:	ldr	r2, [r8, #12]
   215dc:	add	r0, r0, r7, lsl #3
   215e0:	ldr	r0, [r0, #4]
   215e4:	add	r0, r2, r0
   215e8:	eor	r2, r6, r0, lsl #4
   215ec:	str	r0, [r8, #12]
   215f0:	umull	r4, r5, r2, r1
   215f4:	mov	r1, #213	; 0xd5
   215f8:	lsr	r4, r5, #7
   215fc:	mls	r2, r4, r1, r2
   21600:	ldr	r4, [r3, r2, lsl #2]
   21604:	cmp	r4, #0
   21608:	bne	2161c <opt_loop+0x1880>
   2160c:	b	21e64 <opt_loop+0x20c8>
   21610:	ldr	r4, [r4, #16]
   21614:	cmp	r4, #0
   21618:	beq	21e64 <opt_loop+0x20c8>
   2161c:	ldr	r5, [r4]
   21620:	cmp	r5, r6
   21624:	bne	21610 <opt_loop+0x1874>
   21628:	ldr	r5, [r4, #4]
   2162c:	cmp	r5, r0
   21630:	bne	21610 <opt_loop+0x1874>
   21634:	ldr	r5, [r4, #8]
   21638:	cmp	r5, #0
   2163c:	bne	21610 <opt_loop+0x1874>
   21640:	ldr	r4, [r4, #12]
   21644:	ldr	r1, [pc, #4068]	; 22630 <opt_loop+0x2894>
   21648:	add	r1, pc, r1
   2164c:	b	21ea8 <opt_loop+0x210c>
   21650:	ldr	r7, [r9, #200]	; 0xc8
   21654:	ldr	r4, [r9, #204]	; 0xcc
   21658:	eor	r0, r5, r4, lsl #8
   2165c:	movw	r1, #8923	; 0x22db
   21660:	movt	r1, #39383	; 0x99d7
   21664:	eor	r0, r0, r7, lsl #4
   21668:	umull	r1, r2, r0, r1
   2166c:	lsr	r1, r2, #7
   21670:	mov	r2, #213	; 0xd5
   21674:	mls	r6, r1, r2, r0
   21678:	ldr	r0, [r3, r6, lsl #2]
   2167c:	cmp	r0, #0
   21680:	bne	21694 <opt_loop+0x18f8>
   21684:	b	216c0 <opt_loop+0x1924>
   21688:	ldr	r0, [r0, #16]
   2168c:	cmp	r0, #0
   21690:	beq	216c0 <opt_loop+0x1924>
   21694:	ldr	r1, [r0]
   21698:	cmp	r1, r5
   2169c:	bne	21688 <opt_loop+0x18ec>
   216a0:	ldr	r1, [r0, #4]
   216a4:	cmp	r1, r7
   216a8:	bne	21688 <opt_loop+0x18ec>
   216ac:	ldr	r1, [r0, #8]
   216b0:	cmp	r1, r4
   216b4:	bne	21688 <opt_loop+0x18ec>
   216b8:	b	21c7c <opt_loop+0x1ee0>
   216bc:	.word	0x000261cc
   216c0:	ldr	r0, [pc, #4092]	; 226c4 <opt_loop+0x2928>
   216c4:	tst	r5, #230	; 0xe6
   216c8:	add	r0, pc, r0
   216cc:	mov	r1, r0
   216d0:	ldr	r0, [r0, #44]	; 0x2c
   216d4:	add	r0, r0, #1
   216d8:	str	r0, [r1, #44]	; 0x2c
   216dc:	bne	21700 <opt_loop+0x1964>
   216e0:	ldr	r1, [pc, #4088]	; 226e0 <opt_loop+0x2944>
   216e4:	mov	r2, #1
   216e8:	ldr	r1, [pc, r1]
   216ec:	add	r1, r1, r0, lsl #3
   216f0:	str	r7, [r1, #4]
   216f4:	ldr	r1, [pc, #4088]	; 226f4 <opt_loop+0x2958>
   216f8:	ldr	r1, [pc, r1]
   216fc:	str	r2, [r1, r0, lsl #3]
   21700:	ldr	r1, [pc, #4080]	; 226f8 <opt_loop+0x295c>
   21704:	ldr	r1, [pc, r1]
   21708:	ldr	r3, [pc, #4076]	; 226fc <opt_loop+0x2960>
   2170c:	add	r2, r1, #20
   21710:	add	r3, pc, r3
   21714:	str	r2, [r3]
   21718:	str	r4, [r1, #8]
   2171c:	stm	r1, {r5, r7}
   21720:	str	r0, [r1, #12]
   21724:	ldr	r3, [pc, #4052]	; 22700 <opt_loop+0x2964>
   21728:	ldr	r4, [sp, #20]
   2172c:	add	r3, pc, r3
   21730:	b	22800 <opt_loop+0x2a64>
   21734:	ldr	r7, [r8, #12]
   21738:	ldr	r4, [r4]
   2173c:	b	21b24 <opt_loop+0x1d88>
   21740:	.word	0x00026244
   21744:	ldr	r0, [r1, #44]	; 0x2c
   21748:	tst	r5, #230	; 0xe6
   2174c:	add	r0, r0, #1
   21750:	str	r0, [r1, #44]	; 0x2c
   21754:	bne	21778 <opt_loop+0x19dc>
   21758:	ldr	r2, [pc, #4080]	; 22750 <opt_loop+0x29b4>
   2175c:	mov	r1, #1
   21760:	ldr	r2, [pc, r2]
   21764:	add	r2, r2, r0, lsl #3
   21768:	str	r6, [r2, #4]
   2176c:	ldr	r2, [pc, #4064]	; 22754 <opt_loop+0x29b8>
   21770:	ldr	r2, [pc, r2]
   21774:	str	r1, [r2, r0, lsl #3]
   21778:	ldr	r2, [pc, #4056]	; 22758 <opt_loop+0x29bc>
   2177c:	ldr	r2, [pc, r2]
   21780:	ldr	r1, [pc, #4052]	; 2275c <opt_loop+0x29c0>
   21784:	add	r4, r2, #20
   21788:	add	r1, pc, r1
   2178c:	str	r4, [r1]
   21790:	stm	r2, {r5, r6, sl}
   21794:	str	r0, [r2, #12]
   21798:	ldr	r4, [r3, r7, lsl #2]
   2179c:	str	r4, [r2, #16]
   217a0:	str	r2, [r3, r7, lsl #2]
   217a4:	ldr	r4, [sp, #20]
   217a8:	mov	r6, lr
   217ac:	cmp	lr, #0
   217b0:	bne	21588 <opt_loop+0x17ec>
   217b4:	str	r0, [r4]
   217b8:	ldr	r8, [r8, #16]
   217bc:	cmp	r8, #0
   217c0:	bne	210d8 <opt_loop+0x133c>
   217c4:	b	20ff8 <opt_loop+0x125c>
   217c8:	ldr	r1, [pc, #4040]	; 22798 <opt_loop+0x29fc>
   217cc:	mov	r3, #1
   217d0:	add	r1, pc, r1
   217d4:	mov	r5, r1
   217d8:	ldr	r1, [r1, #44]	; 0x2c
   217dc:	add	r2, r1, #1
   217e0:	add	r1, r6, r2, lsl #3
   217e4:	str	r2, [r5, #44]	; 0x2c
   217e8:	str	r7, [r1, #4]
   217ec:	ldr	r1, [pc, #4008]	; 2279c <opt_loop+0x2a00>
   217f0:	ldr	r1, [pc, r1]
   217f4:	str	r3, [r1, r2, lsl #3]
   217f8:	ldr	r1, [pc, #4000]	; 227a0 <opt_loop+0x2a04>
   217fc:	ldr	r1, [pc, r1]
   21800:	ldr	r3, [pc, #3996]	; 227a4 <opt_loop+0x2a08>
   21804:	add	r5, r1, #20
   21808:	add	r3, pc, r3
   2180c:	str	r5, [r3]
   21810:	ldr	r3, [pc, #4088]	; 22810 <opt_loop+0x2a74>
   21814:	stmib	r1, {r7, sl}
   21818:	str	sl, [r1]
   2181c:	str	r2, [r1, #12]
   21820:	add	r3, pc, r3
   21824:	ldr	r5, [r3, r0, lsl #2]
   21828:	str	r5, [r1, #16]
   2182c:	str	r1, [r3, r0, lsl #2]
   21830:	ldr	r5, [r8]
   21834:	ldr	r6, [pc, #4088]	; 22834 <opt_loop+0x2a98>
   21838:	ldr	r6, [pc, r6]
   2183c:	ubfx	r5, r5, #4, #4
   21840:	cmp	r5, #8
   21844:	bhi	23770 <opt_loop+0x39d4>
   21848:	add	r0, r6, r2, lsl #3
   2184c:	add	r1, r6, r4, lsl #3
   21850:	ldr	r0, [r0, #4]
   21854:	ldr	r2, [r1, #4]
   21858:	add	r1, pc, #8
   2185c:	ldr	r4, [r1, r5, lsl #2]
   21860:	add	pc, r1, r4
   21864:	.word	0x00026038
   21868:	.word	0x00000024
   2186c:	.word	0x00000e54
   21870:	.word	0x00000e4c
   21874:	.word	0x00000e60
   21878:	.word	0x00000e44
   2187c:	.word	0x00000e7c
   21880:	.word	0x00000e84
   21884:	.word	0x00000e70
   21888:	.word	0x00000e9c
   2188c:	add	r7, r0, r2
   21890:	b	22708 <opt_loop+0x296c>
   21894:	cmp	r6, #0
   21898:	beq	21658 <opt_loop+0x18bc>
   2189c:	add	r1, r2, r7, lsl #3
   218a0:	ldr	r1, [r1, #4]
   218a4:	cmp	r1, #0
   218a8:	bne	21658 <opt_loop+0x18bc>
   218ac:	tst	r5, #176	; 0xb0
   218b0:	beq	229f8 <opt_loop+0x2c5c>
   218b4:	sub	r0, r0, #32
   218b8:	lsr	r0, r0, #4
   218bc:	cmp	r0, #6
   218c0:	bhi	21658 <opt_loop+0x18bc>
   218c4:	mov	r1, #59	; 0x3b
   218c8:	mov	r2, #1
   218cc:	tst	r1, r2, lsl r0
   218d0:	beq	22a60 <opt_loop+0x2cc4>
   218d4:	str	sl, [r8, #12]
   218d8:	str	sl, [r8]
   218dc:	mov	r6, lr
   218e0:	ldr	r0, [pc, #4080]	; 228d8 <opt_loop+0x2b3c>
   218e4:	ldr	r0, [pc, r0]
   218e8:	ldr	r2, [pc, #4076]	; 228dc <opt_loop+0x2b40>
   218ec:	ldr	r4, [sp, #20]
   218f0:	cmp	r0, #0
   218f4:	add	r2, pc, r2
   218f8:	bne	2190c <opt_loop+0x1b70>
   218fc:	b	22968 <opt_loop+0x2bcc>
   21900:	ldr	r0, [r0, #16]
   21904:	cmp	r0, #0
   21908:	beq	22968 <opt_loop+0x2bcc>
   2190c:	ldr	r1, [r0]
   21910:	cmp	r1, #0
   21914:	bne	21900 <opt_loop+0x1b64>
   21918:	ldr	r1, [r0, #4]
   2191c:	cmp	r1, #0
   21920:	bne	21900 <opt_loop+0x1b64>
   21924:	ldr	r1, [r0, #8]
   21928:	cmp	r1, #0
   2192c:	bne	21900 <opt_loop+0x1b64>
   21930:	ldr	r0, [r0, #12]
   21934:	ldr	r3, [pc, #4004]	; 228e0 <opt_loop+0x2b44>
   21938:	add	r3, pc, r3
   2193c:	ldr	r1, [r4]
   21940:	cmp	r1, r0
   21944:	beq	229e0 <opt_loop+0x2c44>
   21948:	b	22a48 <opt_loop+0x2cac>
   2194c:	.word	0x00025f3c
   21950:	tst	r5, #176	; 0xb0
   21954:	andne	r0, r5, #240	; 0xf0
   21958:	orrne	r2, r0, #16
   2195c:	cmpne	r2, #112	; 0x70
   21960:	beq	229e0 <opt_loop+0x2c44>
   21964:	cmp	r0, #80	; 0x50
   21968:	cmpne	r0, #32
   2196c:	bne	213e8 <opt_loop+0x164c>
   21970:	str	sl, [r8]
   21974:	ldr	r0, [pc, #4068]	; 22960 <opt_loop+0x2bc4>
   21978:	ldr	r0, [pc, r0]
   2197c:	ldr	r1, [pc, #4064]	; 22964 <opt_loop+0x2bc8>
   21980:	cmp	r0, #0
   21984:	add	r1, pc, r1
   21988:	bne	2199c <opt_loop+0x1c00>
   2198c:	b	22508 <opt_loop+0x276c>
   21990:	ldr	r0, [r0, #16]
   21994:	cmp	r0, #0
   21998:	beq	22508 <opt_loop+0x276c>
   2199c:	ldr	r2, [r0]
   219a0:	cmp	r2, #0
   219a4:	bne	21990 <opt_loop+0x1bf4>
   219a8:	ldr	r2, [r0, #4]
   219ac:	cmp	r2, #0
   219b0:	bne	21990 <opt_loop+0x1bf4>
   219b4:	ldr	r2, [r0, #8]
   219b8:	cmp	r2, #0
   219bc:	bne	21990 <opt_loop+0x1bf4>
   219c0:	ldr	r0, [r0, #12]
   219c4:	str	r0, [r4]
   219c8:	ldr	r8, [r8, #16]
   219cc:	cmp	r8, #0
   219d0:	bne	210d8 <opt_loop+0x133c>
   219d4:	b	20ff8 <opt_loop+0x125c>
   219d8:	ldr	r4, [r8, #12]
   219dc:	eor	r0, r5, r7, lsl #8
   219e0:	movw	r1, #8923	; 0x22db
   219e4:	movt	r1, #39383	; 0x99d7
   219e8:	eor	r0, r0, r4, lsl #4
   219ec:	umull	r2, r6, r0, r1
   219f0:	mov	r1, #213	; 0xd5
   219f4:	lsr	r2, r6, #7
   219f8:	mls	r6, r2, r1, r0
   219fc:	ldr	r0, [r3, r6, lsl #2]
   21a00:	cmp	r0, #0
   21a04:	bne	21a18 <opt_loop+0x1c7c>
   21a08:	b	21a64 <opt_loop+0x1cc8>
   21a0c:	ldr	r0, [r0, #16]
   21a10:	cmp	r0, #0
   21a14:	beq	21a64 <opt_loop+0x1cc8>
   21a18:	ldr	r2, [r0]
   21a1c:	cmp	r2, r5
   21a20:	bne	21a0c <opt_loop+0x1c70>
   21a24:	ldr	r2, [r0, #4]
   21a28:	cmp	r2, r4
   21a2c:	bne	21a0c <opt_loop+0x1c70>
   21a30:	ldr	r2, [r0, #8]
   21a34:	cmp	r2, r7
   21a38:	bne	21a0c <opt_loop+0x1c70>
   21a3c:	ldr	r0, [r0, #12]
   21a40:	mov	r6, lr
   21a44:	ldr	r4, [sp, #20]
   21a48:	cmp	r6, #0
   21a4c:	beq	21ae8 <opt_loop+0x1d4c>
   21a50:	ldr	r2, [r4]
   21a54:	cmp	r2, r0
   21a58:	beq	229e0 <opt_loop+0x2c44>
   21a5c:	b	21ae8 <opt_loop+0x1d4c>
   21a60:	.word	0x00025e1c
   21a64:	ldr	r0, [pc, #4080]	; 22a5c <opt_loop+0x2cc0>
   21a68:	tst	r5, #230	; 0xe6
   21a6c:	add	r0, pc, r0
   21a70:	mov	r1, r0
   21a74:	ldr	r0, [r0, #44]	; 0x2c
   21a78:	add	r0, r0, #1
   21a7c:	str	r0, [r1, #44]	; 0x2c
   21a80:	bne	21aa4 <opt_loop+0x1d08>
   21a84:	ldr	r2, [pc, #4092]	; 22a88 <opt_loop+0x2cec>
   21a88:	mov	r1, #1
   21a8c:	ldr	r2, [pc, r2]
   21a90:	add	r2, r2, r0, lsl #3
   21a94:	str	r4, [r2, #4]
   21a98:	ldr	r2, [pc, #4076]	; 22a8c <opt_loop+0x2cf0>
   21a9c:	ldr	r2, [pc, r2]
   21aa0:	str	r1, [r2, r0, lsl #3]
   21aa4:	ldr	r2, [pc, #4068]	; 22a90 <opt_loop+0x2cf4>
   21aa8:	ldr	r2, [pc, r2]
   21aac:	ldr	r1, [pc, #4064]	; 22a94 <opt_loop+0x2cf8>
   21ab0:	add	sl, r2, #20
   21ab4:	add	r1, pc, r1
   21ab8:	str	sl, [r1]
   21abc:	stmib	r2, {r4, r7}
   21ac0:	str	r5, [r2]
   21ac4:	str	r0, [r2, #12]
   21ac8:	mov	sl, #0
   21acc:	ldr	r4, [r3, r6, lsl #2]
   21ad0:	str	r4, [r2, #16]
   21ad4:	str	r2, [r3, r6, lsl #2]
   21ad8:	ldr	r6, [sp, #12]
   21adc:	ldr	r4, [sp, #20]
   21ae0:	cmp	r6, #0
   21ae4:	bne	21a50 <opt_loop+0x1cb4>
   21ae8:	str	r0, [r4]
   21aec:	ldr	r8, [r8, #16]
   21af0:	cmp	r8, #0
   21af4:	bne	210d8 <opt_loop+0x133c>
   21af8:	b	20ff8 <opt_loop+0x125c>
   21afc:	ldr	r1, [pc, #4056]	; 22adc <opt_loop+0x2d40>
   21b00:	mov	r2, #1
   21b04:	ldr	r1, [pc, r1]
   21b08:	add	r1, r1, r0, lsl #3
   21b0c:	str	r4, [r1, #4]
   21b10:	ldr	r1, [pc, #4040]	; 22ae0 <opt_loop+0x2d44>
   21b14:	ldr	r1, [pc, r1]
   21b18:	str	r2, [r1, r0, lsl #3]
   21b1c:	b	21088 <opt_loop+0x12ec>
   21b20:	mov	r6, lr
   21b24:	movw	r1, #8923	; 0x22db
   21b28:	lsl	r0, r7, #4
   21b2c:	movt	r1, #39383	; 0x99d7
   21b30:	umull	r0, r1, r0, r1
   21b34:	lsr	r0, r1, #7
   21b38:	mov	r1, #213	; 0xd5
   21b3c:	mul	r0, r0, r1
   21b40:	rsb	r0, r0, r7, lsl #4
   21b44:	ldr	r2, [r3, r0, lsl #2]
   21b48:	cmp	r2, #0
   21b4c:	bne	21b64 <opt_loop+0x1dc8>
   21b50:	b	21ba8 <opt_loop+0x1e0c>
   21b54:	.word	0x00025d20
   21b58:	ldr	r2, [r2, #16]
   21b5c:	cmp	r2, #0
   21b60:	beq	21ba8 <opt_loop+0x1e0c>
   21b64:	ldr	r1, [r2]
   21b68:	cmp	r1, #0
   21b6c:	bne	21b58 <opt_loop+0x1dbc>
   21b70:	ldr	r1, [r2, #4]
   21b74:	cmp	r1, r7
   21b78:	bne	21b58 <opt_loop+0x1dbc>
   21b7c:	ldr	r1, [r2, #8]
   21b80:	cmp	r1, #0
   21b84:	bne	21b58 <opt_loop+0x1dbc>
   21b88:	mov	lr, r6
   21b8c:	ldr	r6, [r2, #12]
   21b90:	mov	sl, #0
   21b94:	b	21c18 <opt_loop+0x1e7c>
   21b98:	.word	0x00025d9c
   21b9c:	.word	0x00025d90
   21ba0:	.word	0x00025d80
   21ba4:	.word	0x00025910
   21ba8:	ldr	r1, [pc, #4092]	; 22bac <opt_loop+0x2e10>
   21bac:	mov	lr, r6
   21bb0:	add	r1, pc, r1
   21bb4:	mov	r2, r1
   21bb8:	ldr	r1, [r1, #44]	; 0x2c
   21bbc:	add	r6, r1, #1
   21bc0:	str	r6, [r2, #44]	; 0x2c
   21bc4:	mov	r2, #1
   21bc8:	ldr	r1, [pc, #4064]	; 22bb0 <opt_loop+0x2e14>
   21bcc:	ldr	r1, [pc, r1]
   21bd0:	add	r1, r1, r6, lsl #3
   21bd4:	str	r7, [r1, #4]
   21bd8:	ldr	r1, [pc, #4052]	; 22bb4 <opt_loop+0x2e18>
   21bdc:	ldr	r1, [pc, r1]
   21be0:	str	r2, [r1, r6, lsl #3]
   21be4:	ldr	r1, [pc, #4092]	; 22be8 <opt_loop+0x2e4c>
   21be8:	ldr	r1, [pc, r1]
   21bec:	ldr	sl, [pc, #4088]	; 22bec <opt_loop+0x2e50>
   21bf0:	add	r2, r1, #20
   21bf4:	add	sl, pc, sl
   21bf8:	str	r2, [sl]
   21bfc:	mov	sl, #0
   21c00:	stmib	r1, {r7, sl}
   21c04:	str	sl, [r1]
   21c08:	str	r6, [r1, #12]
   21c0c:	ldr	r2, [r3, r0, lsl #2]
   21c10:	str	r2, [r1, #16]
   21c14:	str	r1, [r3, r0, lsl #2]
   21c18:	eor	r0, r5, r4, lsl #4
   21c1c:	movw	r1, #8923	; 0x22db
   21c20:	movt	r1, #39383	; 0x99d7
   21c24:	eor	r0, r0, r6, lsl #8
   21c28:	umull	r1, r2, r0, r1
   21c2c:	lsr	r1, r2, #7
   21c30:	mov	r2, #213	; 0xd5
   21c34:	mls	r7, r1, r2, r0
   21c38:	ldr	r0, [r3, r7, lsl #2]
   21c3c:	cmp	r0, #0
   21c40:	bne	21c58 <opt_loop+0x1ebc>
   21c44:	b	21068 <opt_loop+0x12cc>
   21c48:	.word	0x00025d28
   21c4c:	ldr	r0, [r0, #16]
   21c50:	cmp	r0, #0
   21c54:	beq	21068 <opt_loop+0x12cc>
   21c58:	ldr	r1, [r0]
   21c5c:	cmp	r1, r5
   21c60:	bne	21c4c <opt_loop+0x1eb0>
   21c64:	ldr	r1, [r0, #4]
   21c68:	cmp	r1, r4
   21c6c:	bne	21c4c <opt_loop+0x1eb0>
   21c70:	ldr	r1, [r0, #8]
   21c74:	cmp	r1, r6
   21c78:	bne	21c4c <opt_loop+0x1eb0>
   21c7c:	ldr	r0, [r0, #12]
   21c80:	ldr	r4, [sp, #20]
   21c84:	b	210c4 <opt_loop+0x1328>
   21c88:	orr	r7, r0, #4
   21c8c:	movw	r1, #8923	; 0x22db
   21c90:	str	r7, [r8]
   21c94:	movt	r1, #39383	; 0x99d7
   21c98:	ldr	r0, [r9, #204]	; 0xcc
   21c9c:	ldr	r2, [pc, #3972]	; 22c28 <opt_loop+0x2e8c>
   21ca0:	ldr	r2, [pc, r2]
   21ca4:	add	r0, r2, r0, lsl #3
   21ca8:	ldr	r4, [r0, #4]
   21cac:	str	r4, [r8, #12]
   21cb0:	ldr	r0, [pc, #3956]	; 22c2c <opt_loop+0x2e90>
   21cb4:	add	r0, pc, r0
   21cb8:	strb	sl, [r0]
   21cbc:	lsl	r0, r4, #4
   21cc0:	umull	r0, r1, r0, r1
   21cc4:	ldr	r5, [r9, #200]	; 0xc8
   21cc8:	lsr	r0, r1, #7
   21ccc:	mov	r1, #213	; 0xd5
   21cd0:	mul	r0, r0, r1
   21cd4:	rsb	r0, r0, r4, lsl #4
   21cd8:	ldr	r6, [r3, r0, lsl #2]
   21cdc:	cmp	r6, #0
   21ce0:	bne	21cf8 <opt_loop+0x1f5c>
   21ce4:	b	21d28 <opt_loop+0x1f8c>
   21ce8:	.word	0x00025cb0
   21cec:	ldr	r6, [r6, #16]
   21cf0:	cmp	r6, #0
   21cf4:	beq	21d28 <opt_loop+0x1f8c>
   21cf8:	ldr	r1, [r6]
   21cfc:	cmp	r1, #0
   21d00:	bne	21cec <opt_loop+0x1f50>
   21d04:	ldr	r1, [r6, #4]
   21d08:	cmp	r1, r4
   21d0c:	bne	21cec <opt_loop+0x1f50>
   21d10:	ldr	r1, [r6, #8]
   21d14:	cmp	r1, #0
   21d18:	bne	21cec <opt_loop+0x1f50>
   21d1c:	ldr	r6, [r6, #12]
   21d20:	b	21d90 <opt_loop+0x1ff4>
   21d24:	.word	0x00025c24
   21d28:	ldr	sl, [pc, #4068]	; 22d14 <opt_loop+0x2f78>
   21d2c:	add	sl, pc, sl
   21d30:	ldr	r1, [sl, #44]	; 0x2c
   21d34:	add	r6, r1, #1
   21d38:	add	r1, r2, r6, lsl #3
   21d3c:	str	r6, [sl, #44]	; 0x2c
   21d40:	mov	r2, #1
   21d44:	mov	sl, #0
   21d48:	str	r4, [r1, #4]
   21d4c:	ldr	r1, [pc, #4068]	; 22d38 <opt_loop+0x2f9c>
   21d50:	ldr	r1, [pc, r1]
   21d54:	str	r2, [r1, r6, lsl #3]
   21d58:	ldr	r1, [pc, #4060]	; 22d3c <opt_loop+0x2fa0>
   21d5c:	ldr	r1, [pc, r1]
   21d60:	ldr	r3, [pc, #4056]	; 22d40 <opt_loop+0x2fa4>
   21d64:	add	r2, r1, #20
   21d68:	add	r3, pc, r3
   21d6c:	str	r2, [r3]
   21d70:	ldr	r3, [pc, #4044]	; 22d44 <opt_loop+0x2fa8>
   21d74:	stmib	r1, {r4, sl}
   21d78:	str	sl, [r1]
   21d7c:	str	r6, [r1, #12]
   21d80:	add	r3, pc, r3
   21d84:	ldr	r2, [r3, r0, lsl #2]
   21d88:	str	r2, [r1, #16]
   21d8c:	str	r1, [r3, r0, lsl #2]
   21d90:	eor	r0, r7, r5, lsl #4
   21d94:	movw	r1, #8923	; 0x22db
   21d98:	movt	r1, #39383	; 0x99d7
   21d9c:	eor	r0, r0, r6, lsl #8
   21da0:	umull	r1, r2, r0, r1
   21da4:	lsr	r1, r2, #7
   21da8:	mov	r2, #213	; 0xd5
   21dac:	mls	r0, r1, r2, r0
   21db0:	ldr	r2, [r3, r0, lsl #2]
   21db4:	ldr	r4, [pc, #4040]	; 22d84 <opt_loop+0x2fe8>
   21db8:	cmp	r2, #0
   21dbc:	add	r4, pc, r4
   21dc0:	bne	21dd4 <opt_loop+0x2038>
   21dc4:	b	21e04 <opt_loop+0x2068>
   21dc8:	ldr	r2, [r2, #16]
   21dcc:	cmp	r2, #0
   21dd0:	beq	21e04 <opt_loop+0x2068>
   21dd4:	ldr	r1, [r2]
   21dd8:	cmp	r1, r7
   21ddc:	bne	21dc8 <opt_loop+0x202c>
   21de0:	ldr	r1, [r2, #4]
   21de4:	cmp	r1, r5
   21de8:	bne	21dc8 <opt_loop+0x202c>
   21dec:	ldr	r1, [r2, #8]
   21df0:	cmp	r1, r6
   21df4:	bne	21dc8 <opt_loop+0x202c>
   21df8:	ldr	r0, [r2, #12]
   21dfc:	ldr	r4, [sp, #20]
   21e00:	b	210c4 <opt_loop+0x1328>
   21e04:	ldr	r1, [pc, #4024]	; 22dc4 <opt_loop+0x3028>
   21e08:	ldr	r1, [pc, r1]
   21e0c:	ldr	r3, [pc, #4020]	; 22dc8 <opt_loop+0x302c>
   21e10:	add	r2, r1, #20
   21e14:	add	r3, pc, r3
   21e18:	str	r2, [r3]
   21e1c:	ldr	r3, [pc, #4008]	; 22dcc <opt_loop+0x3030>
   21e20:	ldr	r2, [r4, #44]	; 0x2c
   21e24:	add	r2, r2, #1
   21e28:	add	r3, pc, r3
   21e2c:	str	r2, [r4, #44]	; 0x2c
   21e30:	stmib	r1, {r5, r6}
   21e34:	str	r7, [r1]
   21e38:	str	r2, [r1, #12]
   21e3c:	mov	r6, lr
   21e40:	ldr	r4, [r3, r0, lsl #2]
   21e44:	str	r4, [r1, #16]
   21e48:	ldr	r4, [sp, #20]
   21e4c:	str	r1, [r3, r0, lsl #2]
   21e50:	str	r2, [r4]
   21e54:	ldr	r8, [r8, #16]
   21e58:	cmp	r8, #0
   21e5c:	bne	210d8 <opt_loop+0x133c>
   21e60:	b	20ff8 <opt_loop+0x125c>
   21e64:	ldr	r5, [pc, #4084]	; 22e60 <opt_loop+0x30c4>
   21e68:	ldr	r5, [pc, r5]
   21e6c:	ldr	r1, [pc, #4080]	; 22e64 <opt_loop+0x30c8>
   21e70:	add	r4, r5, #20
   21e74:	add	r1, pc, r1
   21e78:	str	r4, [r1]
   21e7c:	ldr	r1, [pc, #4088]	; 22e7c <opt_loop+0x30e0>
   21e80:	add	r1, pc, r1
   21e84:	ldr	r4, [r1, #44]	; 0x2c
   21e88:	add	r4, r4, #1
   21e8c:	str	r4, [r1, #44]	; 0x2c
   21e90:	stmib	r5, {r0, sl}
   21e94:	str	r6, [r5]
   21e98:	str	r4, [r5, #12]
   21e9c:	ldr	r0, [r3, r2, lsl #2]
   21ea0:	str	r0, [r5, #16]
   21ea4:	str	r5, [r3, r2, lsl #2]
   21ea8:	strb	sl, [r1]
   21eac:	ldr	r1, [sp, #20]
   21eb0:	mov	r6, lr
   21eb4:	ldr	r0, [r1]
   21eb8:	cmp	r0, r4
   21ebc:	mvneq	r0, #0
   21ec0:	strne	r4, [r1]
   21ec4:	mov	r4, r1
   21ec8:	streq	r0, [r8]
   21ecc:	ldr	r8, [r8, #16]
   21ed0:	cmp	r8, #0
   21ed4:	bne	210d8 <opt_loop+0x133c>
   21ed8:	b	20ff8 <opt_loop+0x125c>
   21edc:	cmp	r6, #0
   21ee0:	beq	22588 <opt_loop+0x27ec>
   21ee4:	ldr	r7, [r4]
   21ee8:	ldr	r0, [pc, #4024]	; 22ea8 <opt_loop+0x310c>
   21eec:	ldr	r0, [pc, r0]
   21ef0:	ldr	r0, [r0, r7, lsl #3]
   21ef4:	cmp	r0, #0
   21ef8:	beq	2258c <opt_loop+0x27f0>
   21efc:	str	sl, [r8]
   21f00:	movw	r1, #8923	; 0x22db
   21f04:	ldr	r0, [r4]
   21f08:	ldr	r2, [pc, #3996]	; 22eac <opt_loop+0x3110>
   21f0c:	movt	r1, #39383	; 0x99d7
   21f10:	ldr	r2, [pc, r2]
   21f14:	add	r0, r2, r0, lsl #3
   21f18:	ldr	r0, [r0, #4]
   21f1c:	rsb	r7, r0, #0
   21f20:	lsl	r0, r7, #4
   21f24:	str	r7, [r8, #12]
   21f28:	umull	r0, r4, r0, r1
   21f2c:	mov	r1, #213	; 0xd5
   21f30:	lsr	r0, r4, #7
   21f34:	mul	r0, r0, r1
   21f38:	rsb	r0, r0, r7, lsl #4
   21f3c:	ldr	r4, [r3, r0, lsl #2]
   21f40:	cmp	r4, #0
   21f44:	bne	21f58 <opt_loop+0x21bc>
   21f48:	b	22634 <opt_loop+0x2898>
   21f4c:	ldr	r4, [r4, #16]
   21f50:	cmp	r4, #0
   21f54:	beq	22634 <opt_loop+0x2898>
   21f58:	ldr	r5, [r4]
   21f5c:	cmp	r5, #0
   21f60:	bne	21f4c <opt_loop+0x21b0>
   21f64:	ldr	r5, [r4, #4]
   21f68:	cmp	r5, r7
   21f6c:	bne	21f4c <opt_loop+0x21b0>
   21f70:	ldr	r5, [r4, #8]
   21f74:	cmp	r5, #0
   21f78:	bne	21f4c <opt_loop+0x21b0>
   21f7c:	ldr	r0, [r4, #12]
   21f80:	b	22a30 <opt_loop+0x2c94>
   21f84:	ldr	r0, [r4]
   21f88:	cmp	r6, #0
   21f8c:	beq	21f9c <opt_loop+0x2200>
   21f90:	ldr	r1, [r9, #204]	; 0xcc
   21f94:	cmp	r1, r0
   21f98:	beq	229e0 <opt_loop+0x2c44>
   21f9c:	str	r0, [r9, #204]	; 0xcc
   21fa0:	ldr	r8, [r8, #16]
   21fa4:	cmp	r8, #0
   21fa8:	bne	210d8 <opt_loop+0x133c>
   21fac:	b	20ff8 <opt_loop+0x125c>
   21fb0:	ldr	r2, [r8, #12]
   21fb4:	mov	r0, #177	; 0xb1
   21fb8:	movw	r1, #8923	; 0x22db
   21fbc:	movt	r1, #39383	; 0x99d7
   21fc0:	eor	r0, r0, r2, lsl #4
   21fc4:	umull	r4, r5, r0, r1
   21fc8:	mov	r1, #213	; 0xd5
   21fcc:	lsr	r4, r5, #7
   21fd0:	mls	r0, r4, r1, r0
   21fd4:	ldr	r4, [r3, r0, lsl #2]
   21fd8:	cmp	r4, #0
   21fdc:	bne	21ff4 <opt_loop+0x2258>
   21fe0:	b	2249c <opt_loop+0x2700>
   21fe4:	.word	0x00025568
   21fe8:	ldr	r4, [r4, #16]
   21fec:	cmp	r4, #0
   21ff0:	beq	2249c <opt_loop+0x2700>
   21ff4:	ldr	r5, [r4]
   21ff8:	cmp	r5, #177	; 0xb1
   21ffc:	bne	21fe8 <opt_loop+0x224c>
   22000:	ldr	r5, [r4, #4]
   22004:	cmp	r5, r2
   22008:	bne	21fe8 <opt_loop+0x224c>
   2200c:	ldr	r5, [r4, #8]
   22010:	cmp	r5, #0
   22014:	bne	21fe8 <opt_loop+0x224c>
   22018:	ldr	r4, [r4, #12]
   2201c:	cmp	r6, #0
   22020:	beq	224ec <opt_loop+0x2750>
   22024:	ldr	r0, [r9, #204]	; 0xcc
   22028:	cmp	r0, r4
   2202c:	bne	224ec <opt_loop+0x2750>
   22030:	b	22a14 <opt_loop+0x2c78>
   22034:	.word	0x0002585c
   22038:	ldr	r0, [r8, #12]
   2203c:	ldr	r2, [r9, #200]	; 0xc8
   22040:	add	r0, r9, r0, lsl #2
   22044:	add	r0, r0, #136	; 0x88
   22048:	cmp	r6, #0
   2204c:	beq	22214 <opt_loop+0x2478>
   22050:	ldr	r1, [r0]
   22054:	cmp	r1, r2
   22058:	beq	229e0 <opt_loop+0x2c44>
   2205c:	b	22214 <opt_loop+0x2478>
   22060:	.word	0x0002583c
   22064:	.word	0x00025920
   22068:	.word	0x00025914
   2206c:	.word	0x000254a4
   22070:	ldr	r0, [r8, #12]
   22074:	cmp	r6, #0
   22078:	add	r0, r9, r0, lsl #2
   2207c:	ldr	r0, [r0, #136]	; 0x88
   22080:	beq	220c8 <opt_loop+0x232c>
   22084:	ldr	r1, [pc, #3620]	; 22eb0 <opt_loop+0x3114>
   22088:	ldr	r1, [pc, r1]
   2208c:	ldr	r1, [r1, r0, lsl #3]
   22090:	cmp	r1, #0
   22094:	beq	220bc <opt_loop+0x2320>
   22098:	str	sl, [r8]
   2209c:	ldr	r1, [pc, #3600]	; 22eb4 <opt_loop+0x3118>
   220a0:	ldr	r1, [pc, r1]
   220a4:	add	r1, r1, r0, lsl #3
   220a8:	ldr	r1, [r1, #4]
   220ac:	str	r1, [r8, #12]
   220b0:	ldr	r1, [pc, #3584]	; 22eb8 <opt_loop+0x311c>
   220b4:	add	r1, pc, r1
   220b8:	strb	sl, [r1]
   220bc:	ldr	r1, [r4]
   220c0:	cmp	r1, r0
   220c4:	beq	229e0 <opt_loop+0x2c44>
   220c8:	str	r0, [r4]
   220cc:	ldr	r8, [r8, #16]
   220d0:	cmp	r8, #0
   220d4:	bne	210d8 <opt_loop+0x133c>
   220d8:	b	20ff8 <opt_loop+0x125c>
   220dc:	ldr	r7, [r8, #12]
   220e0:	movw	r1, #8923	; 0x22db
   220e4:	mov	r5, r6
   220e8:	movt	r1, #39383	; 0x99d7
   220ec:	lsl	r0, r7, #4
   220f0:	umull	r0, r2, r0, r1
   220f4:	mov	r1, #213	; 0xd5
   220f8:	lsr	r0, r2, #7
   220fc:	mul	r0, r0, r1
   22100:	rsb	r6, r0, r7, lsl #4
   22104:	ldr	r0, [r3, r6, lsl #2]
   22108:	ldr	r1, [pc, #3500]	; 22ebc <opt_loop+0x3120>
   2210c:	cmp	r0, #0
   22110:	add	r1, pc, r1
   22114:	bne	22128 <opt_loop+0x238c>
   22118:	b	22328 <opt_loop+0x258c>
   2211c:	ldr	r0, [r0, #16]
   22120:	cmp	r0, #0
   22124:	beq	22328 <opt_loop+0x258c>
   22128:	ldr	r2, [r0]
   2212c:	cmp	r2, #0
   22130:	bne	2211c <opt_loop+0x2380>
   22134:	ldr	r2, [r0, #4]
   22138:	cmp	r2, r7
   2213c:	bne	2211c <opt_loop+0x2380>
   22140:	ldr	r2, [r0, #8]
   22144:	cmp	r2, #0
   22148:	bne	2211c <opt_loop+0x2380>
   2214c:	ldr	r0, [r0, #12]
   22150:	mov	r6, r5
   22154:	cmp	r5, #0
   22158:	beq	22394 <opt_loop+0x25f8>
   2215c:	ldr	r2, [r4]
   22160:	cmp	r2, r0
   22164:	beq	229e0 <opt_loop+0x2c44>
   22168:	b	22394 <opt_loop+0x25f8>
   2216c:	ldr	r7, [r8, #12]
   22170:	movw	r1, #8923	; 0x22db
   22174:	mov	r5, r6
   22178:	movt	r1, #39383	; 0x99d7
   2217c:	lsl	r0, r7, #4
   22180:	umull	r0, r2, r0, r1
   22184:	mov	r1, #213	; 0xd5
   22188:	lsr	r0, r2, #7
   2218c:	mul	r0, r0, r1
   22190:	rsb	r6, r0, r7, lsl #4
   22194:	ldr	r0, [r3, r6, lsl #2]
   22198:	ldr	r1, [pc, #3360]	; 22ec0 <opt_loop+0x3124>
   2219c:	cmp	r0, #0
   221a0:	add	r1, pc, r1
   221a4:	bne	221b8 <opt_loop+0x241c>
   221a8:	b	223ac <opt_loop+0x2610>
   221ac:	ldr	r0, [r0, #16]
   221b0:	cmp	r0, #0
   221b4:	beq	223ac <opt_loop+0x2610>
   221b8:	ldr	r2, [r0]
   221bc:	cmp	r2, #0
   221c0:	bne	221ac <opt_loop+0x2410>
   221c4:	ldr	r2, [r0, #4]
   221c8:	cmp	r2, r7
   221cc:	bne	221ac <opt_loop+0x2410>
   221d0:	ldr	r2, [r0, #8]
   221d4:	cmp	r2, #0
   221d8:	bne	221ac <opt_loop+0x2410>
   221dc:	ldr	r0, [r0, #12]
   221e0:	mov	r6, r5
   221e4:	cmp	r5, #0
   221e8:	beq	22418 <opt_loop+0x267c>
   221ec:	ldr	r2, [r9, #204]	; 0xcc
   221f0:	cmp	r2, r0
   221f4:	beq	229e0 <opt_loop+0x2c44>
   221f8:	b	22418 <opt_loop+0x267c>
   221fc:	ldr	r0, [r8, #12]
   22200:	ldr	r2, [r9, #204]	; 0xcc
   22204:	add	r0, r9, r0, lsl #2
   22208:	add	r0, r0, #136	; 0x88
   2220c:	cmp	r6, #0
   22210:	bne	22050 <opt_loop+0x22b4>
   22214:	str	r2, [r0]
   22218:	ldr	r8, [r8, #16]
   2221c:	cmp	r8, #0
   22220:	bne	210d8 <opt_loop+0x133c>
   22224:	b	20ff8 <opt_loop+0x125c>
   22228:	ldr	r0, [r8, #12]
   2222c:	cmp	r6, #0
   22230:	add	r0, r9, r0, lsl #2
   22234:	ldr	r0, [r0, #136]	; 0x88
   22238:	beq	22284 <opt_loop+0x24e8>
   2223c:	ldr	r1, [pc, #4048]	; 23214 <opt_loop+0x3478>
   22240:	ldr	r1, [pc, r1]
   22244:	ldr	r1, [r1, r0, lsl #3]
   22248:	cmp	r1, #0
   2224c:	beq	22278 <opt_loop+0x24dc>
   22250:	mov	r1, #1
   22254:	str	r1, [r8]
   22258:	ldr	r1, [pc, #4024]	; 23218 <opt_loop+0x347c>
   2225c:	ldr	r1, [pc, r1]
   22260:	add	r1, r1, r0, lsl #3
   22264:	ldr	r1, [r1, #4]
   22268:	str	r1, [r8, #12]
   2226c:	ldr	r1, [pc, #4008]	; 2321c <opt_loop+0x3480>
   22270:	add	r1, pc, r1
   22274:	strb	sl, [r1]
   22278:	ldr	r1, [r9, #204]	; 0xcc
   2227c:	cmp	r1, r0
   22280:	beq	229e0 <opt_loop+0x2c44>
   22284:	str	r0, [r9, #204]	; 0xcc
   22288:	ldr	r8, [r8, #16]
   2228c:	cmp	r8, #0
   22290:	bne	210d8 <opt_loop+0x133c>
   22294:	b	20ff8 <opt_loop+0x125c>
   22298:	ldr	r0, [r9, #204]	; 0xcc
   2229c:	cmp	r6, #0
   222a0:	beq	222b0 <opt_loop+0x2514>
   222a4:	ldr	r1, [r4]
   222a8:	cmp	r1, r0
   222ac:	beq	229e0 <opt_loop+0x2c44>
   222b0:	str	r0, [r4]
   222b4:	ldr	r8, [r8, #16]
   222b8:	cmp	r8, #0
   222bc:	bne	210d8 <opt_loop+0x133c>
   222c0:	b	20ff8 <opt_loop+0x125c>
   222c4:	ldr	r0, [r3, #512]	; 0x200
   222c8:	ldr	r1, [pc, #4064]	; 232b0 <opt_loop+0x3514>
   222cc:	cmp	r0, #0
   222d0:	add	r1, pc, r1
   222d4:	bne	222e8 <opt_loop+0x254c>
   222d8:	b	22430 <opt_loop+0x2694>
   222dc:	ldr	r0, [r0, #16]
   222e0:	cmp	r0, #0
   222e4:	beq	22430 <opt_loop+0x2694>
   222e8:	ldr	r2, [r0]
   222ec:	cmp	r2, #128	; 0x80
   222f0:	bne	222dc <opt_loop+0x2540>
   222f4:	ldr	r2, [r0, #4]
   222f8:	cmp	r2, #0
   222fc:	bne	222dc <opt_loop+0x2540>
   22300:	ldr	r2, [r0, #8]
   22304:	cmp	r2, #0
   22308:	bne	222dc <opt_loop+0x2540>
   2230c:	ldr	r0, [r0, #12]
   22310:	cmp	r6, #0
   22314:	beq	22488 <opt_loop+0x26ec>
   22318:	ldr	r2, [r4]
   2231c:	cmp	r2, r0
   22320:	beq	229e0 <opt_loop+0x2c44>
   22324:	b	22488 <opt_loop+0x26ec>
   22328:	ldr	r0, [r1, #44]	; 0x2c
   2232c:	add	r0, r0, #1
   22330:	str	r0, [r1, #44]	; 0x2c
   22334:	mov	r1, #1
   22338:	ldr	r2, [pc, #3956]	; 232b4 <opt_loop+0x3518>
   2233c:	ldr	r2, [pc, r2]
   22340:	add	r2, r2, r0, lsl #3
   22344:	str	r7, [r2, #4]
   22348:	ldr	r2, [pc, #3944]	; 232b8 <opt_loop+0x351c>
   2234c:	ldr	r2, [pc, r2]
   22350:	str	r1, [r2, r0, lsl #3]
   22354:	ldr	r2, [pc, #3936]	; 232bc <opt_loop+0x3520>
   22358:	ldr	r2, [pc, r2]
   2235c:	ldr	r1, [pc, #3932]	; 232c0 <opt_loop+0x3524>
   22360:	add	r4, r2, #20
   22364:	add	r1, pc, r1
   22368:	str	r4, [r1]
   2236c:	stmib	r2, {r7, sl}
   22370:	str	sl, [r2]
   22374:	str	r0, [r2, #12]
   22378:	ldr	r4, [r3, r6, lsl #2]
   2237c:	str	r4, [r2, #16]
   22380:	ldr	r4, [sp, #20]
   22384:	str	r2, [r3, r6, lsl #2]
   22388:	mov	r6, r5
   2238c:	cmp	r5, #0
   22390:	bne	2215c <opt_loop+0x23c0>
   22394:	str	r0, [r4]
   22398:	ldr	r8, [r8, #16]
   2239c:	cmp	r8, #0
   223a0:	bne	210d8 <opt_loop+0x133c>
   223a4:	b	20ff8 <opt_loop+0x125c>
   223a8:	.word	0x000255c0
   223ac:	ldr	r0, [r1, #44]	; 0x2c
   223b0:	add	r0, r0, #1
   223b4:	str	r0, [r1, #44]	; 0x2c
   223b8:	mov	r1, #1
   223bc:	ldr	r2, [pc, #3840]	; 232c4 <opt_loop+0x3528>
   223c0:	ldr	r2, [pc, r2]
   223c4:	add	r2, r2, r0, lsl #3
   223c8:	str	r7, [r2, #4]
   223cc:	ldr	r2, [pc, #4088]	; 233cc <opt_loop+0x3630>
   223d0:	ldr	r2, [pc, r2]
   223d4:	str	r1, [r2, r0, lsl #3]
   223d8:	ldr	r2, [pc, #4080]	; 233d0 <opt_loop+0x3634>
   223dc:	ldr	r2, [pc, r2]
   223e0:	ldr	r1, [pc, #4076]	; 233d4 <opt_loop+0x3638>
   223e4:	add	r4, r2, #20
   223e8:	add	r1, pc, r1
   223ec:	str	r4, [r1]
   223f0:	stmib	r2, {r7, sl}
   223f4:	str	sl, [r2]
   223f8:	str	r0, [r2, #12]
   223fc:	ldr	r4, [r3, r6, lsl #2]
   22400:	str	r4, [r2, #16]
   22404:	ldr	r4, [sp, #20]
   22408:	str	r2, [r3, r6, lsl #2]
   2240c:	mov	r6, r5
   22410:	cmp	r5, #0
   22414:	bne	221ec <opt_loop+0x2450>
   22418:	str	r0, [r9, #204]	; 0xcc
   2241c:	ldr	r8, [r8, #16]
   22420:	cmp	r8, #0
   22424:	bne	210d8 <opt_loop+0x133c>
   22428:	b	20ff8 <opt_loop+0x125c>
   2242c:	.word	0x00025520
   22430:	ldr	r2, [pc, #4000]	; 233d8 <opt_loop+0x363c>
   22434:	ldr	r2, [pc, r2]
   22438:	ldr	r3, [pc, #4092]	; 2343c <opt_loop+0x36a0>
   2243c:	add	r0, r2, #20
   22440:	add	r3, pc, r3
   22444:	str	r0, [r3]
   22448:	ldr	r3, [pc, #4080]	; 23440 <opt_loop+0x36a4>
   2244c:	ldr	r0, [r1, #44]	; 0x2c
   22450:	add	r0, r0, #1
   22454:	add	r3, pc, r3
   22458:	str	r0, [r1, #44]	; 0x2c
   2245c:	mov	r1, #128	; 0x80
   22460:	str	sl, [r2, #8]
   22464:	str	sl, [r2, #4]
   22468:	str	r1, [r2]
   2246c:	str	r0, [r2, #12]
   22470:	ldr	r4, [r3, #512]	; 0x200
   22474:	str	r4, [r2, #16]
   22478:	ldr	r4, [sp, #20]
   2247c:	str	r2, [r3, #512]	; 0x200
   22480:	cmp	r6, #0
   22484:	bne	22318 <opt_loop+0x257c>
   22488:	str	r0, [r4]
   2248c:	ldr	r8, [r8, #16]
   22490:	cmp	r8, #0
   22494:	bne	210d8 <opt_loop+0x133c>
   22498:	b	20ff8 <opt_loop+0x125c>
   2249c:	ldr	r5, [pc, #4052]	; 23478 <opt_loop+0x36dc>
   224a0:	ldr	r5, [pc, r5]
   224a4:	ldr	r1, [pc, #4048]	; 2347c <opt_loop+0x36e0>
   224a8:	add	r4, r5, #20
   224ac:	add	r1, pc, r1
   224b0:	str	r4, [r1]
   224b4:	ldr	r1, [pc, #4036]	; 23480 <opt_loop+0x36e4>
   224b8:	add	r1, pc, r1
   224bc:	ldr	r4, [r1, #44]	; 0x2c
   224c0:	add	r4, r4, #1
   224c4:	str	r4, [r1, #44]	; 0x2c
   224c8:	mov	r1, #177	; 0xb1
   224cc:	stmib	r5, {r2, sl}
   224d0:	str	r1, [r5]
   224d4:	str	r4, [r5, #12]
   224d8:	ldr	r2, [r3, r0, lsl #2]
   224dc:	str	r2, [r5, #16]
   224e0:	str	r5, [r3, r0, lsl #2]
   224e4:	cmp	r6, #0
   224e8:	bne	22024 <opt_loop+0x2288>
   224ec:	str	r4, [r9, #204]	; 0xcc
   224f0:	ldr	r4, [sp, #20]
   224f4:	ldr	r8, [r8, #16]
   224f8:	cmp	r8, #0
   224fc:	bne	210d8 <opt_loop+0x133c>
   22500:	b	20ff8 <opt_loop+0x125c>
   22504:	.word	0x00025374
   22508:	ldr	r0, [r1, #44]	; 0x2c
   2250c:	add	r0, r0, #1
   22510:	str	r0, [r1, #44]	; 0x2c
   22514:	mov	r1, #1
   22518:	ldr	r2, [pc, #4032]	; 234e0 <opt_loop+0x3744>
   2251c:	ldr	r2, [pc, r2]
   22520:	add	r2, r2, r0, lsl #3
   22524:	str	sl, [r2, #4]
   22528:	ldr	r2, [pc, #4020]	; 234e4 <opt_loop+0x3748>
   2252c:	ldr	r2, [pc, r2]
   22530:	str	r1, [r2, r0, lsl #3]
   22534:	ldr	r2, [pc, #4012]	; 234e8 <opt_loop+0x374c>
   22538:	ldr	r2, [pc, r2]
   2253c:	ldr	r1, [pc, #4008]	; 234ec <opt_loop+0x3750>
   22540:	add	r4, r2, #20
   22544:	add	r1, pc, r1
   22548:	str	r4, [r1]
   2254c:	str	sl, [r2, #8]
   22550:	str	sl, [r2, #4]
   22554:	str	sl, [r2]
   22558:	str	r0, [r2, #12]
   2255c:	ldr	r4, [pc, #3980]	; 234f0 <opt_loop+0x3754>
   22560:	ldr	r4, [pc, r4]
   22564:	str	r4, [r2, #16]
   22568:	ldr	r4, [sp, #20]
   2256c:	str	r2, [r3]
   22570:	str	r0, [r4]
   22574:	ldr	r8, [r8, #16]
   22578:	cmp	r8, #0
   2257c:	bne	210d8 <opt_loop+0x133c>
   22580:	b	20ff8 <opt_loop+0x125c>
   22584:	.word	0x00025408
   22588:	ldr	r7, [r4]
   2258c:	mov	r0, #132	; 0x84
   22590:	movw	r1, #8923	; 0x22db
   22594:	eor	r0, r0, r7, lsl #4
   22598:	movt	r1, #39383	; 0x99d7
   2259c:	umull	r2, r4, r0, r1
   225a0:	mov	r1, #213	; 0xd5
   225a4:	lsr	r2, r4, #7
   225a8:	mls	r0, r2, r1, r0
   225ac:	ldr	r2, [r3, r0, lsl #2]
   225b0:	cmp	r2, #0
   225b4:	bne	225cc <opt_loop+0x2830>
   225b8:	b	225f4 <opt_loop+0x2858>
   225bc:	.word	0x000253e0
   225c0:	ldr	r2, [r2, #16]
   225c4:	cmp	r2, #0
   225c8:	beq	225f4 <opt_loop+0x2858>
   225cc:	ldr	r4, [r2]
   225d0:	cmp	r4, #132	; 0x84
   225d4:	bne	225c0 <opt_loop+0x2824>
   225d8:	ldr	r4, [r2, #4]
   225dc:	cmp	r4, r7
   225e0:	bne	225c0 <opt_loop+0x2824>
   225e4:	ldr	r4, [r2, #8]
   225e8:	cmp	r4, #0
   225ec:	bne	225c0 <opt_loop+0x2824>
   225f0:	b	228d0 <opt_loop+0x2b34>
   225f4:	ldr	r2, [pc, #4084]	; 235f0 <opt_loop+0x3854>
   225f8:	ldr	r2, [pc, r2]
   225fc:	ldr	r1, [pc, #4080]	; 235f4 <opt_loop+0x3858>
   22600:	add	r4, r2, #20
   22604:	add	r1, pc, r1
   22608:	str	r4, [r1]
   2260c:	ldr	r1, [pc, #4068]	; 235f8 <opt_loop+0x385c>
   22610:	add	r1, pc, r1
   22614:	ldr	r4, [r1, #44]	; 0x2c
   22618:	add	r4, r4, #1
   2261c:	str	r4, [r1, #44]	; 0x2c
   22620:	mov	r1, #132	; 0x84
   22624:	stmib	r2, {r7, sl}
   22628:	str	r1, [r2]
   2262c:	b	22680 <opt_loop+0x28e4>
   22630:	.word	0x00025264
   22634:	ldr	r1, [pc, #4084]	; 23630 <opt_loop+0x3894>
   22638:	add	r1, pc, r1
   2263c:	ldr	r4, [r1, #44]	; 0x2c
   22640:	add	r4, r4, #1
   22644:	add	r2, r2, r4, lsl #3
   22648:	str	r4, [r1, #44]	; 0x2c
   2264c:	mov	r1, #1
   22650:	str	r7, [r2, #4]
   22654:	ldr	r2, [pc, #4056]	; 23634 <opt_loop+0x3898>
   22658:	ldr	r2, [pc, r2]
   2265c:	str	r1, [r2, r4, lsl #3]
   22660:	ldr	r2, [pc, #4048]	; 23638 <opt_loop+0x389c>
   22664:	ldr	r2, [pc, r2]
   22668:	ldr	r1, [pc, #4044]	; 2363c <opt_loop+0x38a0>
   2266c:	add	r5, r2, #20
   22670:	add	r1, pc, r1
   22674:	str	r5, [r1]
   22678:	stmib	r2, {r7, sl}
   2267c:	str	sl, [r2]
   22680:	str	r4, [r2, #12]
   22684:	ldr	r5, [r3, r0, lsl #2]
   22688:	str	r5, [r2, #16]
   2268c:	str	r2, [r3, r0, lsl #2]
   22690:	ldr	r0, [sp, #20]
   22694:	str	r4, [r0]
   22698:	mov	r4, r0
   2269c:	ldr	r8, [r8, #16]
   226a0:	cmp	r8, #0
   226a4:	bne	210d8 <opt_loop+0x133c>
   226a8:	b	20ff8 <opt_loop+0x125c>
   226ac:	orr	r7, r0, r2
   226b0:	b	22708 <opt_loop+0x296c>
   226b4:	mul	r7, r0, r2
   226b8:	b	22708 <opt_loop+0x296c>
   226bc:	sub	r7, r2, r0
   226c0:	b	22708 <opt_loop+0x296c>
   226c4:	.word	0x000251e4
   226c8:	cmp	r0, #0
   226cc:	beq	23774 <opt_loop+0x39d8>
   226d0:	udiv	r7, r2, r0
   226d4:	b	22708 <opt_loop+0x296c>
   226d8:	lsr	r7, r2, r0
   226dc:	b	22708 <opt_loop+0x296c>
   226e0:	.word	0x000252cc
   226e4:	and	r7, r0, r2
   226e8:	b	22708 <opt_loop+0x296c>
   226ec:	lsl	r7, r2, r0
   226f0:	b	22708 <opt_loop+0x296c>
   226f4:	.word	0x000252bc
   226f8:	.word	0x000252a8
   226fc:	.word	0x0002529c
   22700:	.word	0x00024e2c
   22704:	rsb	r7, r2, #0
   22708:	movw	r1, #8923	; 0x22db
   2270c:	lsl	r0, r7, #4
   22710:	ldr	r2, [pc, #3880]	; 23640 <opt_loop+0x38a4>
   22714:	str	sl, [r8]
   22718:	str	r7, [r8, #12]
   2271c:	ldr	r4, [sp, #20]
   22720:	movt	r1, #39383	; 0x99d7
   22724:	umull	r0, r1, r0, r1
   22728:	add	r2, pc, r2
   2272c:	strb	sl, [r2]
   22730:	lsr	r0, r1, #7
   22734:	mov	r1, #213	; 0xd5
   22738:	mul	r0, r0, r1
   2273c:	rsb	r6, r0, r7, lsl #4
   22740:	ldr	r0, [r3, r6, lsl #2]
   22744:	cmp	r0, #0
   22748:	bne	2276c <opt_loop+0x29d0>
   2274c:	b	227a8 <opt_loop+0x2a0c>
   22750:	.word	0x00025254
   22754:	.word	0x00025244
   22758:	.word	0x00025230
   2275c:	.word	0x00025224
   22760:	ldr	r0, [r0, #16]
   22764:	cmp	r0, #0
   22768:	beq	227a8 <opt_loop+0x2a0c>
   2276c:	ldr	r1, [r0]
   22770:	cmp	r1, #0
   22774:	bne	22760 <opt_loop+0x29c4>
   22778:	ldr	r1, [r0, #4]
   2277c:	cmp	r1, r7
   22780:	bne	22760 <opt_loop+0x29c4>
   22784:	ldr	r1, [r0, #8]
   22788:	cmp	r1, #0
   2278c:	bne	22760 <opt_loop+0x29c4>
   22790:	ldr	r0, [r0, #12]
   22794:	b	210c4 <opt_loop+0x1328>
   22798:	.word	0x000250dc
   2279c:	.word	0x000251c4
   227a0:	.word	0x000251b0
   227a4:	.word	0x000251a4
   227a8:	ldr	r0, [r2, #44]	; 0x2c
   227ac:	add	r0, r0, #1
   227b0:	str	r0, [r2, #44]	; 0x2c
   227b4:	mov	r2, #1
   227b8:	ldr	r1, [pc, #4032]	; 23780 <opt_loop+0x39e4>
   227bc:	ldr	r1, [pc, r1]
   227c0:	add	r1, r1, r0, lsl #3
   227c4:	str	r7, [r1, #4]
   227c8:	ldr	r1, [pc, #4020]	; 23784 <opt_loop+0x39e8>
   227cc:	ldr	r1, [pc, r1]
   227d0:	str	r2, [r1, r0, lsl #3]
   227d4:	ldr	r1, [pc, #4012]	; 23788 <opt_loop+0x39ec>
   227d8:	ldr	r1, [pc, r1]
   227dc:	ldr	r3, [pc, #4008]	; 2378c <opt_loop+0x39f0>
   227e0:	add	r2, r1, #20
   227e4:	add	r3, pc, r3
   227e8:	str	r2, [r3]
   227ec:	ldr	r3, [pc, #3996]	; 23790 <opt_loop+0x39f4>
   227f0:	stmib	r1, {r7, sl}
   227f4:	str	sl, [r1]
   227f8:	str	r0, [r1, #12]
   227fc:	add	r3, pc, r3
   22800:	ldr	r2, [r3, r6, lsl #2]
   22804:	str	r2, [r1, #16]
   22808:	str	r1, [r3, r6, lsl #2]
   2280c:	b	210c4 <opt_loop+0x1328>
   22810:	.word	0x00024d38
   22814:	orr	r7, r0, r2
   22818:	b	2285c <opt_loop+0x2ac0>
   2281c:	mul	r7, r0, r2
   22820:	b	2285c <opt_loop+0x2ac0>
   22824:	cmp	r0, #0
   22828:	beq	23774 <opt_loop+0x39d8>
   2282c:	udiv	r7, r2, r0
   22830:	b	2285c <opt_loop+0x2ac0>
   22834:	.word	0x0002517c
   22838:	lsr	r7, r2, r0
   2283c:	b	2285c <opt_loop+0x2ac0>
   22840:	sub	r7, r2, r0
   22844:	b	2285c <opt_loop+0x2ac0>
   22848:	and	r7, r0, r2
   2284c:	b	2285c <opt_loop+0x2ac0>
   22850:	lsl	r7, r2, r0
   22854:	b	2285c <opt_loop+0x2ac0>
   22858:	rsb	r7, r2, #0
   2285c:	movw	r1, #8923	; 0x22db
   22860:	lsl	r0, r7, #4
   22864:	ldr	r4, [pc, #3880]	; 23794 <opt_loop+0x39f8>
   22868:	str	sl, [r8]
   2286c:	str	r7, [r8, #12]
   22870:	movt	r1, #39383	; 0x99d7
   22874:	umull	r0, r1, r0, r1
   22878:	add	r4, pc, r4
   2287c:	strb	sl, [r4]
   22880:	lsr	r0, r1, #7
   22884:	mov	r1, #213	; 0xd5
   22888:	mul	r0, r0, r1
   2288c:	rsb	r0, r0, r7, lsl #4
   22890:	ldr	r2, [r3, r0, lsl #2]
   22894:	cmp	r2, #0
   22898:	bne	228ac <opt_loop+0x2b10>
   2289c:	b	228e4 <opt_loop+0x2b48>
   228a0:	ldr	r2, [r2, #16]
   228a4:	cmp	r2, #0
   228a8:	beq	228e4 <opt_loop+0x2b48>
   228ac:	ldr	r1, [r2]
   228b0:	cmp	r1, #0
   228b4:	bne	228a0 <opt_loop+0x2b04>
   228b8:	ldr	r1, [r2, #4]
   228bc:	cmp	r1, r7
   228c0:	bne	228a0 <opt_loop+0x2b04>
   228c4:	ldr	r1, [r2, #8]
   228c8:	cmp	r1, #0
   228cc:	bne	228a0 <opt_loop+0x2b04>
   228d0:	ldr	r0, [r2, #12]
   228d4:	b	22a30 <opt_loop+0x2c94>
   228d8:	.word	0x00024c74
   228dc:	.word	0x00024fb8
   228e0:	.word	0x00024c20
   228e4:	ldr	r1, [r4, #44]	; 0x2c
   228e8:	mov	r3, #1
   228ec:	add	r1, r1, #1
   228f0:	str	r1, [r4, #44]	; 0x2c
   228f4:	ldr	r2, [pc, #3740]	; 23798 <opt_loop+0x39fc>
   228f8:	ldr	r2, [pc, r2]
   228fc:	add	r2, r2, r1, lsl #3
   22900:	str	r7, [r2, #4]
   22904:	ldr	r2, [pc, #3728]	; 2379c <opt_loop+0x3a00>
   22908:	ldr	r2, [pc, r2]
   2290c:	str	r3, [r2, r1, lsl #3]
   22910:	ldr	r2, [pc, #3720]	; 237a0 <opt_loop+0x3a04>
   22914:	ldr	r2, [pc, r2]
   22918:	ldr	r3, [pc, #3716]	; 237a4 <opt_loop+0x3a08>
   2291c:	add	r4, r2, #20
   22920:	add	r3, pc, r3
   22924:	str	r4, [r3]
   22928:	ldr	r3, [pc, #3704]	; 237a8 <opt_loop+0x3a0c>
   2292c:	stmib	r2, {r7, sl}
   22930:	str	sl, [r2]
   22934:	str	r1, [r2, #12]
   22938:	add	r3, pc, r3
   2293c:	ldr	r4, [r3, r0, lsl #2]
   22940:	str	r4, [r2, #16]
   22944:	ldr	r4, [sp, #20]
   22948:	str	r2, [r3, r0, lsl #2]
   2294c:	str	r1, [r4]
   22950:	ldr	r8, [r8, #16]
   22954:	cmp	r8, #0
   22958:	bne	210d8 <opt_loop+0x133c>
   2295c:	b	20ff8 <opt_loop+0x125c>
   22960:	.word	0x00024be0
   22964:	.word	0x00024f28
   22968:	ldr	r0, [r2, #44]	; 0x2c
   2296c:	add	r0, r0, #1
   22970:	str	r0, [r2, #44]	; 0x2c
   22974:	mov	r2, #1
   22978:	ldr	r1, [pc, #3628]	; 237ac <opt_loop+0x3a10>
   2297c:	ldr	r1, [pc, r1]
   22980:	add	r1, r1, r0, lsl #3
   22984:	str	sl, [r1, #4]
   22988:	ldr	r1, [pc, #3616]	; 237b0 <opt_loop+0x3a14>
   2298c:	ldr	r1, [pc, r1]
   22990:	str	r2, [r1, r0, lsl #3]
   22994:	ldr	r1, [pc, #3608]	; 237b4 <opt_loop+0x3a18>
   22998:	ldr	r1, [pc, r1]
   2299c:	ldr	r3, [pc, #3604]	; 237b8 <opt_loop+0x3a1c>
   229a0:	add	r2, r1, #20
   229a4:	add	r3, pc, r3
   229a8:	str	r2, [r3]
   229ac:	str	sl, [r1, #8]
   229b0:	str	sl, [r1, #4]
   229b4:	str	sl, [r1]
   229b8:	str	r0, [r1, #12]
   229bc:	ldr	r2, [pc, #3576]	; 237bc <opt_loop+0x3a20>
   229c0:	ldr	r2, [pc, r2]
   229c4:	str	r2, [r1, #16]
   229c8:	ldr	r3, [pc, #3568]	; 237c0 <opt_loop+0x3a24>
   229cc:	add	r3, pc, r3
   229d0:	str	r1, [r3]
   229d4:	ldr	r1, [r4]
   229d8:	cmp	r1, r0
   229dc:	bne	22a48 <opt_loop+0x2cac>
   229e0:	mvn	r0, #0
   229e4:	str	r0, [r8]
   229e8:	ldr	r8, [r8, #16]
   229ec:	cmp	r8, #0
   229f0:	bne	210d8 <opt_loop+0x133c>
   229f4:	b	20ff8 <opt_loop+0x125c>
   229f8:	mov	r0, #135	; 0x87
   229fc:	mov	r6, lr
   22a00:	str	r0, [r8]
   22a04:	ldr	r1, [r9, #200]	; 0xc8
   22a08:	ldr	r0, [r9, #204]	; 0xcc
   22a0c:	cmp	r1, r0
   22a10:	bne	22a30 <opt_loop+0x2c94>
   22a14:	mvn	r0, #0
   22a18:	str	r0, [r8]
   22a1c:	ldr	r4, [sp, #20]
   22a20:	ldr	r8, [r8, #16]
   22a24:	cmp	r8, #0
   22a28:	bne	210d8 <opt_loop+0x133c>
   22a2c:	b	20ff8 <opt_loop+0x125c>
   22a30:	ldr	r4, [sp, #20]
   22a34:	str	r0, [r4]
   22a38:	ldr	r8, [r8, #16]
   22a3c:	cmp	r8, #0
   22a40:	bne	210d8 <opt_loop+0x133c>
   22a44:	b	20ff8 <opt_loop+0x125c>
   22a48:	str	r0, [r4]
   22a4c:	ldr	r8, [r8, #16]
   22a50:	cmp	r8, #0
   22a54:	bne	210d8 <opt_loop+0x133c>
   22a58:	b	20ff8 <opt_loop+0x125c>
   22a5c:	.word	0x00024e40
   22a60:	cmp	r0, #6
   22a64:	bne	21658 <opt_loop+0x18bc>
   22a68:	ldr	r4, [sp, #20]
   22a6c:	mvn	r0, #0
   22a70:	mov	r6, lr
   22a74:	str	r0, [r8]
   22a78:	ldr	r8, [r8, #16]
   22a7c:	cmp	r8, #0
   22a80:	bne	210d8 <opt_loop+0x133c>
   22a84:	b	20ff8 <opt_loop+0x125c>
   22a88:	.word	0x00024f28
   22a8c:	.word	0x00024f18
   22a90:	.word	0x00024f04
   22a94:	.word	0x00024ef8
   22a98:	ldr	r1, [r9, #4]
   22a9c:	ldr	r4, [pc, #3360]	; 237c4 <opt_loop+0x3a28>
   22aa0:	add	r4, pc, r4
   22aa4:	cmp	r1, #0
   22aa8:	mov	r8, r4
   22aac:	add	r4, sp, #24
   22ab0:	beq	22ce4 <opt_loop+0x2f48>
   22ab4:	mov	r3, r1
   22ab8:	mov	r2, r1
   22abc:	ldr	r0, [r2]
   22ac0:	ldr	r1, [r2, #16]
   22ac4:	cmn	r0, #1
   22ac8:	bne	22ae8 <opt_loop+0x2d4c>
   22acc:	cmp	r1, #0
   22ad0:	mov	r2, r1
   22ad4:	bne	22abc <opt_loop+0x2d20>
   22ad8:	b	22c74 <opt_loop+0x2ed8>
   22adc:	.word	0x00024eb0
   22ae0:	.word	0x00024ea0
   22ae4:	ldr	r1, [r1, #16]
   22ae8:	cmp	r1, #0
   22aec:	beq	22c74 <opt_loop+0x2ed8>
   22af0:	ldr	r7, [r1]
   22af4:	cmn	r7, #1
   22af8:	beq	22ae4 <opt_loop+0x2d48>
   22afc:	cmp	r0, #2
   22b00:	bne	22b2c <opt_loop+0x2d90>
   22b04:	cmp	r7, #97	; 0x61
   22b08:	bne	22b34 <opt_loop+0x2d98>
   22b0c:	ldr	r0, [r1, #12]
   22b10:	ldr	r3, [r2, #12]
   22b14:	cmp	r3, r0
   22b18:	bne	22b34 <opt_loop+0x2d98>
   22b1c:	mov	r7, #7
   22b20:	strb	sl, [r8]
   22b24:	str	r7, [r1]
   22b28:	ldr	r0, [r2]
   22b2c:	cmp	r0, #0
   22b30:	beq	22b40 <opt_loop+0x2da4>
   22b34:	cmp	r1, #0
   22b38:	bne	22ab4 <opt_loop+0x2d18>
   22b3c:	b	22c70 <opt_loop+0x2ed4>
   22b40:	cmp	r7, #7
   22b44:	bne	22b68 <opt_loop+0x2dcc>
   22b48:	mov	r0, #1
   22b4c:	str	r0, [r2]
   22b50:	mov	r0, #135	; 0x87
   22b54:	str	r0, [r1]
   22b58:	strb	sl, [r8]
   22b5c:	ldr	r0, [r2]
   22b60:	cmp	r0, #0
   22b64:	bne	22b34 <opt_loop+0x2d98>
   22b68:	ldrb	r0, [r9, #130]	; 0x82
   22b6c:	tst	r0, #2
   22b70:	bne	22b34 <opt_loop+0x2d98>
   22b74:	ldr	r0, [r1]
   22b78:	mov	r3, r1
   22b7c:	cmp	r0, #177	; 0xb1
   22b80:	bne	22bb8 <opt_loop+0x2e1c>
   22b84:	ldr	r3, [r1, #16]
   22b88:	cmp	r3, #0
   22b8c:	beq	22b34 <opt_loop+0x2d98>
   22b90:	ldr	r0, [r3]
   22b94:	cmn	r0, #1
   22b98:	bne	22bb8 <opt_loop+0x2e1c>
   22b9c:	ldr	r3, [r3, #16]
   22ba0:	cmp	r3, #0
   22ba4:	bne	22b90 <opt_loop+0x2df4>
   22ba8:	b	22b34 <opt_loop+0x2d98>
   22bac:	.word	0x00024cfc
   22bb0:	.word	0x00024de8
   22bb4:	.word	0x00024dd8
   22bb8:	cmp	r0, #12
   22bbc:	bne	22b34 <opt_loop+0x2d98>
   22bc0:	ldr	r7, [r3, #16]
   22bc4:	cmp	r7, #0
   22bc8:	beq	22b34 <opt_loop+0x2d98>
   22bcc:	ldr	r0, [r7]
   22bd0:	cmn	r0, #1
   22bd4:	bne	22bf0 <opt_loop+0x2e54>
   22bd8:	ldr	r7, [r7, #16]
   22bdc:	cmp	r7, #0
   22be0:	bne	22bcc <opt_loop+0x2e30>
   22be4:	b	22b34 <opt_loop+0x2d98>
   22be8:	.word	0x00024dc4
   22bec:	.word	0x00024db8
   22bf0:	cmp	r0, #7
   22bf4:	bne	22b34 <opt_loop+0x2d98>
   22bf8:	ldr	r0, [r7, #16]
   22bfc:	cmp	r0, #0
   22c00:	beq	22b34 <opt_loop+0x2d98>
   22c04:	mov	ip, r6
   22c08:	ldr	r6, [r0]
   22c0c:	cmn	r6, #1
   22c10:	bne	22c30 <opt_loop+0x2e94>
   22c14:	ldr	r0, [r0, #16]
   22c18:	mov	r6, ip
   22c1c:	cmp	r0, #0
   22c20:	bne	22c04 <opt_loop+0x2e68>
   22c24:	b	22b34 <opt_loop+0x2d98>
   22c28:	.word	0x00024d14
   22c2c:	.word	0x00024bf8
   22c30:	and	r6, r6, #231	; 0xe7
   22c34:	cmp	r6, #64	; 0x40
   22c38:	mov	r6, ip
   22c3c:	bne	22b34 <opt_loop+0x2d98>
   22c40:	ldr	r6, [r2, #12]
   22c44:	ldr	r5, [r0, #12]
   22c48:	add	r6, r5, r6
   22c4c:	str	r6, [r0, #12]
   22c50:	mov	r6, ip
   22c54:	mvn	r0, #0
   22c58:	str	r0, [r2]
   22c5c:	str	r0, [r3]
   22c60:	str	r0, [r7]
   22c64:	strb	sl, [r8]
   22c68:	cmp	r1, #0
   22c6c:	bne	22ab4 <opt_loop+0x2d18>
   22c70:	mov	r3, #0
   22c74:	ldr	r1, [r9, #8]
   22c78:	cmp	r1, #21
   22c7c:	bne	22d98 <opt_loop+0x2ffc>
   22c80:	ldrb	r0, [r9, #130]	; 0x82
   22c84:	tst	r0, #1
   22c88:	bne	22d94 <opt_loop+0x2ff8>
   22c8c:	ldr	r0, [r3]
   22c90:	cmp	r0, #20
   22c94:	beq	22d18 <opt_loop+0x2f7c>
   22c98:	cmp	r0, #84	; 0x54
   22c9c:	beq	22d48 <opt_loop+0x2fac>
   22ca0:	cmp	r0, #28
   22ca4:	bne	22d94 <opt_loop+0x2ff8>
   22ca8:	ldr	r0, [r9, #204]	; 0xcc
   22cac:	ldr	r1, [pc, #2836]	; 237c8 <opt_loop+0x3a2c>
   22cb0:	ldr	r1, [pc, r1]
   22cb4:	ldr	r2, [r1, r0, lsl #3]
   22cb8:	cmp	r2, #0
   22cbc:	beq	22d88 <opt_loop+0x2fec>
   22cc0:	add	r0, r1, r0, lsl #3
   22cc4:	ldr	r1, [r9, #20]
   22cc8:	ldr	r0, [r0, #4]
   22ccc:	add	r0, r1, r0
   22cd0:	str	r0, [r9, #20]
   22cd4:	mvn	r0, #0
   22cd8:	str	r0, [r3]
   22cdc:	strb	sl, [r8]
   22ce0:	b	22d94 <opt_loop+0x2ff8>
   22ce4:	mov	r0, r4
   22ce8:	mov	r1, #68	; 0x44
   22cec:	str	sl, [sp, #88]	; 0x58
   22cf0:	vst1.64	{d8-d9}, [r0], r1
   22cf4:	str	sl, [r0]
   22cf8:	add	r0, r4, #48	; 0x30
   22cfc:	vst1.64	{d8-d9}, [r0]
   22d00:	add	r0, r4, #32
   22d04:	vst1.64	{d8-d9}, [r0]
   22d08:	add	r0, r4, #16
   22d0c:	vst1.64	{d8-d9}, [r0]
   22d10:	b	22f44 <opt_loop+0x31a8>
   22d14:	.word	0x00024b80
   22d18:	mvn	r0, #0
   22d1c:	str	r0, [r3]
   22d20:	ldr	r0, [r3, #12]
   22d24:	ldr	r1, [r9, #20]
   22d28:	add	r0, r1, r0
   22d2c:	str	r0, [r9, #20]
   22d30:	strb	sl, [r8]
   22d34:	b	22d94 <opt_loop+0x2ff8>
   22d38:	.word	0x00024c64
   22d3c:	.word	0x00024c50
   22d40:	.word	0x00024c44
   22d44:	.word	0x000247d8
   22d48:	ldr	r0, [r9, #20]
   22d4c:	cmp	r0, #0
   22d50:	bne	22d94 <opt_loop+0x2ff8>
   22d54:	ldr	r0, [r3, #12]
   22d58:	mov	r1, #69	; 0x45
   22d5c:	str	r1, [r9, #8]
   22d60:	str	r0, [r9, #20]
   22d64:	mvn	r0, #0
   22d68:	str	r0, [r3]
   22d6c:	strb	sl, [r8]
   22d70:	ldr	r0, [r9, #60]	; 0x3c
   22d74:	ldr	r1, [r9, #84]	; 0x54
   22d78:	str	r0, [r9, #84]	; 0x54
   22d7c:	str	r1, [r9, #60]	; 0x3c
   22d80:	b	22d94 <opt_loop+0x2ff8>
   22d84:	.word	0x00024af0
   22d88:	ldr	r0, [r9, #20]
   22d8c:	cmp	r0, #0
   22d90:	beq	23298 <opt_loop+0x34fc>
   22d94:	ldr	r1, [r9, #8]
   22d98:	cmp	r1, #69	; 0x45
   22d9c:	bne	22dd8 <opt_loop+0x303c>
   22da0:	ldr	r0, [r9, #20]
   22da4:	mov	r1, #69	; 0x45
   22da8:	cmn	r0, #1
   22dac:	beq	22dd0 <opt_loop+0x3034>
   22db0:	cmp	r0, #0
   22db4:	bne	22dd8 <opt_loop+0x303c>
   22db8:	ldr	r0, [r9, #84]	; 0x54
   22dbc:	str	r0, [r9, #60]	; 0x3c
   22dc0:	b	22dd8 <opt_loop+0x303c>
   22dc4:	.word	0x00024ba4
   22dc8:	.word	0x00024b98
   22dcc:	.word	0x00024730
   22dd0:	ldr	r0, [r9, #60]	; 0x3c
   22dd4:	str	r0, [r9, #84]	; 0x54
   22dd8:	ldr	r0, [pc, #2540]	; 237cc <opt_loop+0x3a30>
   22ddc:	tst	r1, #8
   22de0:	ldr	r0, [pc, r0]
   22de4:	beq	22e0c <opt_loop+0x3070>
   22de8:	ldr	r2, [r9, #204]	; 0xcc
   22dec:	ldr	r3, [r0, r2, lsl #3]
   22df0:	cmp	r3, #0
   22df4:	beq	22e0c <opt_loop+0x3070>
   22df8:	add	r2, r0, r2, lsl #3
   22dfc:	bic	r1, r1, #8
   22e00:	ldr	r2, [r2, #4]
   22e04:	str	r1, [r9, #8]
   22e08:	str	r2, [r9, #20]
   22e0c:	tst	r1, #8
   22e10:	bne	22ef4 <opt_loop+0x3158>
   22e14:	ldr	r2, [sp, #20]
   22e18:	ldr	r2, [r2]
   22e1c:	ldr	r3, [r0, r2, lsl #3]
   22e20:	cmp	r3, #0
   22e24:	beq	22ef4 <opt_loop+0x3158>
   22e28:	and	r1, r1, #240	; 0xf0
   22e2c:	sub	r1, r1, #16
   22e30:	lsr	r1, r1, #4
   22e34:	cmp	r1, #3
   22e38:	bhi	23770 <opt_loop+0x39d4>
   22e3c:	add	r0, r0, r2, lsl #3
   22e40:	ldr	r0, [r0, #4]
   22e44:	add	r2, pc, #4
   22e48:	ldr	r1, [r2, r1, lsl #2]
   22e4c:	add	pc, r2, r1
   22e50:	.word	0x00000018
   22e54:	.word	0x00000030
   22e58:	.word	0x00000044
   22e5c:	.word	0x00000074
   22e60:	.word	0x00024b44
   22e64:	.word	0x00024b38
   22e68:	ldr	r1, [r9, #20]
   22e6c:	sub	r0, r0, r1
   22e70:	clz	r0, r0
   22e74:	lsr	r0, r0, #5
   22e78:	b	22ecc <opt_loop+0x3130>
   22e7c:	.word	0x00024a2c
   22e80:	ldr	r1, [r9, #20]
   22e84:	cmp	r0, r1
   22e88:	mov	r0, #0
   22e8c:	movwhi	r0, #1
   22e90:	b	22ecc <opt_loop+0x3130>
   22e94:	ldr	r1, [r9, #20]
   22e98:	cmp	r0, r1
   22e9c:	mov	r0, #0
   22ea0:	movwcs	r0, #1
   22ea4:	b	22ecc <opt_loop+0x3130>
   22ea8:	.word	0x00024ac8
   22eac:	.word	0x00024aa4
   22eb0:	.word	0x0002492c
   22eb4:	.word	0x00024914
   22eb8:	.word	0x000247f8
   22ebc:	.word	0x0002479c
   22ec0:	.word	0x0002470c
   22ec4:	ldr	r1, [r9, #20]
   22ec8:	and	r0, r1, r0
   22ecc:	mov	r3, r9
   22ed0:	ldr	r1, [r3, #60]!	; 0x3c
   22ed4:	mov	r2, r3
   22ed8:	ldr	r7, [r2, #24]!
   22edc:	cmp	r7, r1
   22ee0:	strbne	sl, [r8]
   22ee4:	cmp	r0, #0
   22ee8:	moveq	r2, r3
   22eec:	moveq	r1, r7
   22ef0:	str	r1, [r2]
   22ef4:	add	r0, r4, #48	; 0x30
   22ef8:	ldr	r5, [r9, #4]
   22efc:	mov	r1, #68	; 0x44
   22f00:	str	sl, [sp, #88]	; 0x58
   22f04:	vst1.64	{d8-d9}, [r0]
   22f08:	add	r0, r4, #32
   22f0c:	vst1.64	{d8-d9}, [r0]
   22f10:	add	r0, r4, #16
   22f14:	vst1.64	{d8-d9}, [r0]
   22f18:	mov	r0, r4
   22f1c:	vst1.64	{d8-d9}, [r0], r1
   22f20:	str	sl, [r0]
   22f24:	cmp	r5, #0
   22f28:	beq	22f44 <opt_loop+0x31a8>
   22f2c:	mov	r0, r5
   22f30:	mov	r1, r4
   22f34:	bl	24028 <deadstmt>
   22f38:	ldr	r5, [r5, #16]
   22f3c:	cmp	r5, #0
   22f40:	bne	22f2c <opt_loop+0x3190>
   22f44:	add	r0, r9, #8
   22f48:	mov	r1, r4
   22f4c:	bl	24028 <deadstmt>
   22f50:	ldr	r0, [sp, #24]
   22f54:	cmp	r0, #0
   22f58:	beq	22f70 <opt_loop+0x31d4>
   22f5c:	ldrb	r1, [r9, #128]	; 0x80
   22f60:	tst	r1, #1
   22f64:	mvneq	r1, #0
   22f68:	streq	r1, [r0]
   22f6c:	strbeq	sl, [r8]
   22f70:	ldr	r0, [sp, #28]
   22f74:	cmp	r0, #0
   22f78:	beq	22f90 <opt_loop+0x31f4>
   22f7c:	ldrb	r1, [r9, #128]	; 0x80
   22f80:	tst	r1, #2
   22f84:	mvneq	r1, #0
   22f88:	streq	r1, [r0]
   22f8c:	strbeq	sl, [r8]
   22f90:	ldr	r0, [sp, #32]
   22f94:	cmp	r0, #0
   22f98:	beq	22fb0 <opt_loop+0x3214>
   22f9c:	ldrb	r1, [r9, #128]	; 0x80
   22fa0:	tst	r1, #4
   22fa4:	mvneq	r1, #0
   22fa8:	streq	r1, [r0]
   22fac:	strbeq	sl, [r8]
   22fb0:	ldr	r0, [sp, #36]	; 0x24
   22fb4:	cmp	r0, #0
   22fb8:	beq	22fd0 <opt_loop+0x3234>
   22fbc:	ldrb	r1, [r9, #128]	; 0x80
   22fc0:	tst	r1, #8
   22fc4:	mvneq	r1, #0
   22fc8:	streq	r1, [r0]
   22fcc:	strbeq	sl, [r8]
   22fd0:	ldr	r0, [sp, #40]	; 0x28
   22fd4:	cmp	r0, #0
   22fd8:	beq	22ff0 <opt_loop+0x3254>
   22fdc:	ldrb	r1, [r9, #128]	; 0x80
   22fe0:	tst	r1, #16
   22fe4:	mvneq	r1, #0
   22fe8:	streq	r1, [r0]
   22fec:	strbeq	sl, [r8]
   22ff0:	ldr	r0, [sp, #44]	; 0x2c
   22ff4:	cmp	r0, #0
   22ff8:	beq	23010 <opt_loop+0x3274>
   22ffc:	ldrb	r1, [r9, #128]	; 0x80
   23000:	tst	r1, #32
   23004:	mvneq	r1, #0
   23008:	streq	r1, [r0]
   2300c:	strbeq	sl, [r8]
   23010:	ldr	r0, [sp, #48]	; 0x30
   23014:	cmp	r0, #0
   23018:	beq	23030 <opt_loop+0x3294>
   2301c:	ldrb	r1, [r9, #128]	; 0x80
   23020:	tst	r1, #64	; 0x40
   23024:	mvneq	r1, #0
   23028:	streq	r1, [r0]
   2302c:	strbeq	sl, [r8]
   23030:	ldr	r0, [sp, #52]	; 0x34
   23034:	cmp	r0, #0
   23038:	beq	23050 <opt_loop+0x32b4>
   2303c:	ldrb	r1, [r9, #128]	; 0x80
   23040:	tst	r1, #128	; 0x80
   23044:	mvneq	r1, #0
   23048:	streq	r1, [r0]
   2304c:	strbeq	sl, [r8]
   23050:	ldr	r0, [sp, #56]	; 0x38
   23054:	cmp	r0, #0
   23058:	beq	23070 <opt_loop+0x32d4>
   2305c:	ldrb	r1, [r9, #129]	; 0x81
   23060:	tst	r1, #1
   23064:	mvneq	r1, #0
   23068:	streq	r1, [r0]
   2306c:	strbeq	sl, [r8]
   23070:	ldr	r0, [sp, #60]	; 0x3c
   23074:	cmp	r0, #0
   23078:	beq	23090 <opt_loop+0x32f4>
   2307c:	ldrb	r1, [r9, #129]	; 0x81
   23080:	tst	r1, #2
   23084:	mvneq	r1, #0
   23088:	streq	r1, [r0]
   2308c:	strbeq	sl, [r8]
   23090:	ldr	r0, [sp, #64]	; 0x40
   23094:	cmp	r0, #0
   23098:	beq	230b0 <opt_loop+0x3314>
   2309c:	ldrb	r1, [r9, #129]	; 0x81
   230a0:	tst	r1, #4
   230a4:	mvneq	r1, #0
   230a8:	streq	r1, [r0]
   230ac:	strbeq	sl, [r8]
   230b0:	ldr	r0, [sp, #68]	; 0x44
   230b4:	cmp	r0, #0
   230b8:	beq	230d0 <opt_loop+0x3334>
   230bc:	ldrb	r1, [r9, #129]	; 0x81
   230c0:	tst	r1, #8
   230c4:	mvneq	r1, #0
   230c8:	streq	r1, [r0]
   230cc:	strbeq	sl, [r8]
   230d0:	ldr	r0, [sp, #72]	; 0x48
   230d4:	cmp	r0, #0
   230d8:	beq	230f0 <opt_loop+0x3354>
   230dc:	ldrb	r1, [r9, #129]	; 0x81
   230e0:	tst	r1, #16
   230e4:	mvneq	r1, #0
   230e8:	streq	r1, [r0]
   230ec:	strbeq	sl, [r8]
   230f0:	ldr	r0, [sp, #76]	; 0x4c
   230f4:	cmp	r0, #0
   230f8:	beq	23110 <opt_loop+0x3374>
   230fc:	ldrb	r1, [r9, #129]	; 0x81
   23100:	tst	r1, #32
   23104:	mvneq	r1, #0
   23108:	streq	r1, [r0]
   2310c:	strbeq	sl, [r8]
   23110:	ldr	r0, [sp, #80]	; 0x50
   23114:	cmp	r0, #0
   23118:	beq	23130 <opt_loop+0x3394>
   2311c:	ldrb	r1, [r9, #129]	; 0x81
   23120:	tst	r1, #64	; 0x40
   23124:	mvneq	r1, #0
   23128:	streq	r1, [r0]
   2312c:	strbeq	sl, [r8]
   23130:	ldr	r0, [sp, #84]	; 0x54
   23134:	cmp	r0, #0
   23138:	beq	23150 <opt_loop+0x33b4>
   2313c:	ldrb	r1, [r9, #129]	; 0x81
   23140:	tst	r1, #128	; 0x80
   23144:	mvneq	r1, #0
   23148:	streq	r1, [r0]
   2314c:	strbeq	sl, [r8]
   23150:	ldr	r0, [sp, #88]	; 0x58
   23154:	cmp	r0, #0
   23158:	beq	23170 <opt_loop+0x33d4>
   2315c:	ldrb	r1, [r9, #130]	; 0x82
   23160:	tst	r1, #1
   23164:	mvneq	r1, #0
   23168:	streq	r1, [r0]
   2316c:	strbeq	sl, [r8]
   23170:	ldr	r0, [sp, #92]	; 0x5c
   23174:	cmp	r0, #0
   23178:	beq	23194 <opt_loop+0x33f8>
   2317c:	ldrb	r1, [r9, #130]	; 0x82
   23180:	tst	r1, #2
   23184:	bne	23194 <opt_loop+0x33f8>
   23188:	mvn	r1, #0
   2318c:	str	r1, [r0]
   23190:	strb	sl, [r8]
   23194:	ldr	r0, [r9, #8]
   23198:	tst	r0, #8
   2319c:	bne	20d9c <opt_loop+0x1000>
   231a0:	ldr	r1, [r9, #20]
   231a4:	movw	r3, #8923	; 0x22db
   231a8:	movt	r3, #39383	; 0x99d7
   231ac:	lsl	r2, r1, #4
   231b0:	umull	r2, r3, r2, r3
   231b4:	lsr	r2, r3, #7
   231b8:	mov	r3, #213	; 0xd5
   231bc:	mul	r2, r2, r3
   231c0:	ldr	r3, [pc, #1544]	; 237d0 <opt_loop+0x3a34>
   231c4:	rsb	r2, r2, r1, lsl #4
   231c8:	add	r3, pc, r3
   231cc:	ldr	r3, [r3, r2, lsl #2]
   231d0:	cmp	r3, #0
   231d4:	bne	231e8 <opt_loop+0x344c>
   231d8:	b	23220 <opt_loop+0x3484>
   231dc:	ldr	r3, [r3, #16]
   231e0:	cmp	r3, #0
   231e4:	beq	23220 <opt_loop+0x3484>
   231e8:	ldr	r7, [r3]
   231ec:	cmp	r7, #0
   231f0:	bne	231dc <opt_loop+0x3440>
   231f4:	ldr	r7, [r3, #4]
   231f8:	cmp	r7, r1
   231fc:	bne	231dc <opt_loop+0x3440>
   23200:	ldr	r7, [r3, #8]
   23204:	cmp	r7, #0
   23208:	bne	231dc <opt_loop+0x3440>
   2320c:	ldr	r3, [r3, #12]
   23210:	b	20da0 <opt_loop+0x1004>
   23214:	.word	0x00024774
   23218:	.word	0x00024758
   2321c:	.word	0x0002463c
   23220:	ldr	r0, [r8, #44]	; 0x2c
   23224:	mov	r7, #1
   23228:	mov	r5, r6
   2322c:	add	r3, r0, #1
   23230:	str	r3, [r8, #44]	; 0x2c
   23234:	ldr	r0, [pc, #1432]	; 237d4 <opt_loop+0x3a38>
   23238:	ldr	r0, [pc, r0]
   2323c:	add	r0, r0, r3, lsl #3
   23240:	str	r1, [r0, #4]
   23244:	ldr	r0, [pc, #1420]	; 237d8 <opt_loop+0x3a3c>
   23248:	ldr	r0, [pc, r0]
   2324c:	str	r7, [r0, r3, lsl #3]
   23250:	ldr	r0, [pc, #1412]	; 237dc <opt_loop+0x3a40>
   23254:	ldr	r0, [pc, r0]
   23258:	ldr	r6, [pc, #1408]	; 237e0 <opt_loop+0x3a44>
   2325c:	add	r7, r0, #20
   23260:	add	r6, pc, r6
   23264:	str	r7, [r6]
   23268:	stmib	r0, {r1, sl}
   2326c:	str	sl, [r0]
   23270:	str	r3, [r0, #12]
   23274:	mov	r6, r5
   23278:	ldr	r1, [pc, #1380]	; 237e4 <opt_loop+0x3a48>
   2327c:	add	r1, pc, r1
   23280:	mov	r7, r1
   23284:	ldr	r1, [r1, r2, lsl #2]
   23288:	str	r1, [r0, #16]
   2328c:	str	r0, [r7, r2, lsl #2]
   23290:	ldr	r0, [r9, #8]
   23294:	b	20da0 <opt_loop+0x1004>
   23298:	mvn	r0, #0
   2329c:	mov	r1, #29
   232a0:	str	r0, [r3]
   232a4:	str	r1, [r9, #8]
   232a8:	strb	sl, [r8]
   232ac:	b	22dd8 <opt_loop+0x303c>
   232b0:	.word	0x000245dc
   232b4:	.word	0x00024678
   232b8:	.word	0x00024668
   232bc:	.word	0x00024654
   232c0:	.word	0x00024648
   232c4:	.word	0x000245f4
   232c8:	ldr	r0, [sp, #4]
   232cc:	ldr	r9, [sp]
   232d0:	cmp	r0, #1
   232d4:	blt	23320 <opt_loop+0x3584>
   232d8:	mov	r4, #1
   232dc:	ldr	r0, [pc, #1284]	; 237e8 <opt_loop+0x3a4c>
   232e0:	ldr	r0, [pc, r0]
   232e4:	ldr	r5, [r0, r4, lsl #2]
   232e8:	cmp	r5, #0
   232ec:	beq	2330c <opt_loop+0x3570>
   232f0:	add	r0, r5, #48	; 0x30
   232f4:	bl	23e44 <opt_j>
   232f8:	add	r0, r5, #72	; 0x48
   232fc:	bl	23e44 <opt_j>
   23300:	ldr	r5, [r5, #100]	; 0x64
   23304:	cmp	r5, #0
   23308:	bne	232f0 <opt_loop+0x3554>
   2330c:	ldr	r1, [sp, #4]
   23310:	add	r0, r4, #1
   23314:	cmp	r4, r1
   23318:	mov	r4, r0
   2331c:	bne	232dc <opt_loop+0x3540>
   23320:	ldr	r0, [pc, #1220]	; 237ec <opt_loop+0x3a50>
   23324:	add	r0, pc, r0
   23328:	ldr	r3, [r0, #16]
   2332c:	cmp	r3, #1
   23330:	blt	233a8 <opt_loop+0x360c>
   23334:	ldr	r1, [pc, #1204]	; 237f0 <opt_loop+0x3a54>
   23338:	sub	r7, r3, #1
   2333c:	and	r0, r3, #3
   23340:	mov	r2, #0
   23344:	cmp	r7, #3
   23348:	ldr	r1, [pc, r1]
   2334c:	bcc	2338c <opt_loop+0x35f0>
   23350:	sub	r3, r3, r0
   23354:	add	r7, r1, #8
   23358:	mov	r2, #0
   2335c:	ldr	r6, [r7, #-8]
   23360:	add	r2, r2, #4
   23364:	cmp	r3, r2
   23368:	str	sl, [r6, #112]	; 0x70
   2336c:	ldr	r6, [r7, #-4]
   23370:	str	sl, [r6, #112]	; 0x70
   23374:	ldr	r6, [r7]
   23378:	str	sl, [r6, #112]	; 0x70
   2337c:	ldr	r6, [r7, #4]
   23380:	add	r7, r7, #16
   23384:	str	sl, [r6, #112]	; 0x70
   23388:	bne	2335c <opt_loop+0x35c0>
   2338c:	cmp	r0, #0
   23390:	beq	233a8 <opt_loop+0x360c>
   23394:	add	r1, r1, r2, lsl #2
   23398:	ldr	r2, [r1], #4
   2339c:	subs	r0, r0, #1
   233a0:	str	sl, [r2, #112]	; 0x70
   233a4:	bne	23398 <opt_loop+0x35fc>
   233a8:	ldr	r0, [r9, #36]	; 0x24
   233ac:	cmp	r0, #1
   233b0:	blt	23428 <opt_loop+0x368c>
   233b4:	ldr	r1, [pc, #1080]	; 237f4 <opt_loop+0x3a58>
   233b8:	ldr	r1, [pc, r1]
   233bc:	ldr	r2, [r1, r0, lsl #2]
   233c0:	cmp	r2, #0
   233c4:	bne	233e8 <opt_loop+0x364c>
   233c8:	b	2341c <opt_loop+0x3680>
   233cc:	.word	0x000245e4
   233d0:	.word	0x000245d0
   233d4:	.word	0x000245c4
   233d8:	.word	0x00024578
   233dc:	ldr	r2, [r1, r0, lsl #2]
   233e0:	cmp	r2, #0
   233e4:	beq	2341c <opt_loop+0x3680>
   233e8:	ldr	r3, [r2, #60]	; 0x3c
   233ec:	ldr	r7, [r3, #112]	; 0x70
   233f0:	str	r7, [r2, #68]	; 0x44
   233f4:	add	r7, r2, #48	; 0x30
   233f8:	str	r7, [r3, #112]	; 0x70
   233fc:	ldr	r3, [r2, #84]	; 0x54
   23400:	ldr	r7, [r3, #112]	; 0x70
   23404:	str	r7, [r2, #92]	; 0x5c
   23408:	add	r7, r2, #72	; 0x48
   2340c:	str	r7, [r3, #112]	; 0x70
   23410:	ldr	r2, [r2, #100]	; 0x64
   23414:	cmp	r2, #0
   23418:	bne	233e8 <opt_loop+0x364c>
   2341c:	sub	r0, r0, #1
   23420:	cmp	r0, #0
   23424:	bgt	233dc <opt_loop+0x3640>
   23428:	ldr	r0, [sp, #4]
   2342c:	cmp	r0, #1
   23430:	blt	1fdd8 <opt_loop+0x3c>
   23434:	mov	r1, #1
   23438:	b	2345c <opt_loop+0x36c0>
   2343c:	.word	0x0002456c
   23440:	.word	0x00024104
   23444:	ldr	r2, [sp, #20]
   23448:	ldr	r1, [sp, #4]
   2344c:	add	r0, r2, #1
   23450:	cmp	r2, r1
   23454:	mov	r1, r0
   23458:	beq	1fdd8 <opt_loop+0x3c>
   2345c:	ldr	r0, [pc, #916]	; 237f8 <opt_loop+0x3a5c>
   23460:	ldr	r0, [pc, r0]
   23464:	str	r1, [sp, #20]
   23468:	ldr	lr, [r0, r1, lsl #2]
   2346c:	cmp	lr, #0
   23470:	bne	234a0 <opt_loop+0x3704>
   23474:	b	23444 <opt_loop+0x36a8>
   23478:	.word	0x0002450c
   2347c:	.word	0x00024500
   23480:	.word	0x000243f4
   23484:	str	r6, [r2]
   23488:	ldr	r3, [pc, #884]	; 23804 <opt_loop+0x3a68>
   2348c:	add	r3, pc, r3
   23490:	strb	sl, [r3]
   23494:	ldr	lr, [lr, #100]	; 0x64
   23498:	cmp	lr, #0
   2349c:	beq	23444 <opt_loop+0x36a8>
   234a0:	ldr	r2, [lr, #112]	; 0x70
   234a4:	cmp	r2, #0
   234a8:	beq	23494 <opt_loop+0x36f8>
   234ac:	ldr	r7, [r2, #16]
   234b0:	mov	r0, r2
   234b4:	ldr	r3, [r7, #200]	; 0xc8
   234b8:	ldr	r0, [r0, #20]
   234bc:	cmp	r0, #0
   234c0:	beq	234f4 <opt_loop+0x3758>
   234c4:	ldr	r1, [r0, #16]
   234c8:	ldr	r1, [r1, #200]	; 0xc8
   234cc:	cmp	r3, r1
   234d0:	beq	234b8 <opt_loop+0x371c>
   234d4:	cmp	r2, #0
   234d8:	bne	23608 <opt_loop+0x386c>
   234dc:	b	23494 <opt_loop+0x36f8>
   234e0:	.word	0x00024498
   234e4:	.word	0x00024488
   234e8:	.word	0x00024474
   234ec:	.word	0x00024468
   234f0:	.word	0x00023ff8
   234f4:	ldr	r0, [r7, #60]!	; 0x3c
   234f8:	mov	ip, #1
   234fc:	mov	r5, #1
   23500:	cmp	r0, lr
   23504:	addne	r7, r7, #24
   23508:	mov	r9, r5
   2350c:	ldr	r5, [r7]
   23510:	cmp	r5, #0
   23514:	beq	235fc <opt_loop+0x3860>
   23518:	ldr	r0, [r5, #60]	; 0x3c
   2351c:	ldr	r1, [lr, #60]	; 0x3c
   23520:	cmp	r0, r1
   23524:	bne	235fc <opt_loop+0x3860>
   23528:	ldr	r1, [lr]
   2352c:	mov	sl, r7
   23530:	ldr	r7, [r5, #104]	; 0x68
   23534:	and	r6, r1, #31
   23538:	lsr	r1, r1, #5
   2353c:	ldr	r7, [r7, r1, lsl #2]
   23540:	tst	r7, ip, lsl r6
   23544:	beq	235fc <opt_loop+0x3860>
   23548:	ldr	r4, [r5, #200]	; 0xc8
   2354c:	add	r7, r5, #84	; 0x54
   23550:	mov	r5, #0
   23554:	cmp	r4, r3
   23558:	beq	23508 <opt_loop+0x376c>
   2355c:	lsl	r6, ip, r6
   23560:	ldr	r5, [r7]
   23564:	cmp	r5, #0
   23568:	beq	235fc <opt_loop+0x3860>
   2356c:	ldr	r4, [r5, #60]	; 0x3c
   23570:	cmp	r4, r0
   23574:	bne	235fc <opt_loop+0x3860>
   23578:	ldr	r4, [r5, #104]	; 0x68
   2357c:	ldr	r4, [r4, r1, lsl #2]
   23580:	tst	r4, r6
   23584:	beq	235fc <opt_loop+0x3860>
   23588:	ldr	r4, [r5, #200]	; 0xc8
   2358c:	mov	ip, r7
   23590:	add	r7, r5, #84	; 0x54
   23594:	cmp	r4, r3
   23598:	bne	23560 <opt_loop+0x37c4>
   2359c:	ldr	r0, [r7]
   235a0:	cmp	r9, #0
   235a4:	str	r0, [ip]
   235a8:	ldr	r0, [sl]
   235ac:	str	r0, [r7]
   235b0:	ldr	r3, [pc, #580]	; 237fc <opt_loop+0x3a60>
   235b4:	add	r3, pc, r3
   235b8:	beq	23744 <opt_loop+0x39a8>
   235bc:	ldr	r0, [lr, #112]	; 0x70
   235c0:	cmp	r0, #0
   235c4:	beq	23748 <opt_loop+0x39ac>
   235c8:	ldr	r1, [r0, #16]
   235cc:	ldr	r2, [r1, #60]	; 0x3c
   235d0:	cmp	r2, lr
   235d4:	mov	r2, #84	; 0x54
   235d8:	movweq	r2, #60	; 0x3c
   235dc:	str	r5, [r1, r2]
   235e0:	ldr	r0, [r0, #20]
   235e4:	cmp	r0, #0
   235e8:	bne	235c8 <opt_loop+0x382c>
   235ec:	b	23748 <opt_loop+0x39ac>
   235f0:	.word	0x000243b4
   235f4:	.word	0x000243a8
   235f8:	.word	0x0002429c
   235fc:	mov	sl, #0
   23600:	cmp	r2, #0
   23604:	beq	23494 <opt_loop+0x36f8>
   23608:	ldr	r4, [r2, #16]
   2360c:	ldr	r3, [r4, #200]	; 0xc8
   23610:	ldr	r2, [r2, #20]
   23614:	cmp	r2, #0
   23618:	beq	23644 <opt_loop+0x38a8>
   2361c:	ldr	r0, [r2, #16]
   23620:	ldr	r0, [r0, #200]	; 0xc8
   23624:	cmp	r3, r0
   23628:	beq	23610 <opt_loop+0x3874>
   2362c:	b	23494 <opt_loop+0x36f8>
   23630:	.word	0x00024274
   23634:	.word	0x0002435c
   23638:	.word	0x00024348
   2363c:	.word	0x0002433c
   23640:	.word	0x00024184
   23644:	ldr	r0, [r4, #60]!	; 0x3c
   23648:	mov	r1, #1
   2364c:	cmp	r0, lr
   23650:	addne	r4, r4, #24
   23654:	mov	ip, r1
   23658:	ldr	r1, [r4]
   2365c:	cmp	r1, #0
   23660:	beq	23494 <opt_loop+0x36f8>
   23664:	ldr	r5, [r1, #84]	; 0x54
   23668:	ldr	r0, [lr, #84]	; 0x54
   2366c:	cmp	r5, r0
   23670:	bne	23494 <opt_loop+0x36f8>
   23674:	ldr	r0, [lr]
   23678:	mov	r2, r4
   2367c:	ldr	r4, [r1, #104]	; 0x68
   23680:	mov	r7, #1
   23684:	and	r6, r0, #31
   23688:	lsr	r0, r0, #5
   2368c:	ldr	r4, [r4, r0, lsl #2]
   23690:	tst	r4, r7, lsl r6
   23694:	beq	23494 <opt_loop+0x36f8>
   23698:	ldr	r7, [r1, #200]	; 0xc8
   2369c:	add	r4, r1, #60	; 0x3c
   236a0:	mov	r1, #0
   236a4:	cmp	r7, r3
   236a8:	beq	23654 <opt_loop+0x38b8>
   236ac:	mov	r1, #1
   236b0:	lsl	r9, r1, r6
   236b4:	ldr	r6, [r4]
   236b8:	cmp	r6, #0
   236bc:	beq	23494 <opt_loop+0x36f8>
   236c0:	mov	r1, r4
   236c4:	ldr	r4, [r6, #84]	; 0x54
   236c8:	cmp	r4, r5
   236cc:	bne	23494 <opt_loop+0x36f8>
   236d0:	ldr	r4, [r6, #104]	; 0x68
   236d4:	ldr	r4, [r4, r0, lsl #2]
   236d8:	tst	r4, r9
   236dc:	beq	23494 <opt_loop+0x36f8>
   236e0:	ldr	r7, [r6, #200]	; 0xc8
   236e4:	add	r4, r6, #60	; 0x3c
   236e8:	cmp	r7, r3
   236ec:	bne	236b4 <opt_loop+0x3918>
   236f0:	ldr	r0, [r4]
   236f4:	cmp	ip, #0
   236f8:	str	r0, [r1]
   236fc:	ldr	r0, [r2]
   23700:	str	r0, [r4]
   23704:	beq	23484 <opt_loop+0x36e8>
   23708:	ldr	r0, [lr, #112]	; 0x70
   2370c:	ldr	r3, [pc, #236]	; 23800 <opt_loop+0x3a64>
   23710:	cmp	r0, #0
   23714:	add	r3, pc, r3
   23718:	beq	23490 <opt_loop+0x36f4>
   2371c:	ldr	r1, [r0, #16]
   23720:	ldr	r2, [r1, #60]	; 0x3c
   23724:	cmp	r2, lr
   23728:	mov	r2, #84	; 0x54
   2372c:	movweq	r2, #60	; 0x3c
   23730:	str	r6, [r1, r2]
   23734:	ldr	r0, [r0, #20]
   23738:	cmp	r0, #0
   2373c:	bne	2371c <opt_loop+0x3980>
   23740:	b	23490 <opt_loop+0x36f4>
   23744:	str	r5, [sl]
   23748:	mov	sl, #0
   2374c:	strb	sl, [r3]
   23750:	ldr	r2, [lr, #112]	; 0x70
   23754:	cmp	r2, #0
   23758:	bne	23608 <opt_loop+0x386c>
   2375c:	b	23494 <opt_loop+0x36f8>
   23760:	sub	sp, fp, #48	; 0x30
   23764:	vpop	{d8-d9}
   23768:	add	sp, sp, #4
   2376c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23770:	bl	f24 <abort@plt>
   23774:	ldr	r0, [pc, #140]	; 23808 <opt_loop+0x3a6c>
   23778:	add	r0, pc, r0
   2377c:	bl	214c <sf_bpf_error>
   23780:	.word	0x000241f8
   23784:	.word	0x000241e8
   23788:	.word	0x000241d4
   2378c:	.word	0x000241c8
   23790:	.word	0x00023d5c
   23794:	.word	0x00024034
   23798:	.word	0x000240bc
   2379c:	.word	0x000240ac
   237a0:	.word	0x00024098
   237a4:	.word	0x0002408c
   237a8:	.word	0x00023c20
   237ac:	.word	0x00024038
   237b0:	.word	0x00024028
   237b4:	.word	0x00024014
   237b8:	.word	0x00024008
   237bc:	.word	0x00023b98
   237c0:	.word	0x00023b8c
   237c4:	.word	0x00023e0c
   237c8:	.word	0x00023d04
   237cc:	.word	0x00023bd4
   237d0:	.word	0x00023390
   237d4:	.word	0x0002377c
   237d8:	.word	0x0002376c
   237dc:	.word	0x00023758
   237e0:	.word	0x0002374c
   237e4:	.word	0x000232dc
   237e8:	.word	0x000236c0
   237ec:	.word	0x00023588
   237f0:	.word	0x0002365c
   237f4:	.word	0x000235e8
   237f8:	.word	0x00023540
   237fc:	.word	0x000232f8
   23800:	.word	0x00023198
   23804:	.word	0x00023420
   23808:	.word	0x00006e8f

0002380c <sf_icode_to_fcode>:
   2380c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23810:	add	fp, sp, #28
   23814:	sub	sp, sp, #4
   23818:	ldr	sl, [pc, #192]	; 238e0 <sf_icode_to_fcode+0xd4>
   2381c:	mov	r9, r0
   23820:	mov	r8, r1
   23824:	add	sl, pc, sl
   23828:	ldr	r5, [sl, #4]
   2382c:	add	r0, r5, #1
   23830:	str	r0, [sl, #4]
   23834:	mov	r0, r9
   23838:	bl	238e8 <count_stmts>
   2383c:	lsl	r4, r0, #3
   23840:	mov	r7, r0
   23844:	str	r0, [r8]
   23848:	mov	r0, r4
   2384c:	bl	e34 <malloc@plt>
   23850:	cmp	r0, #0
   23854:	beq	238c8 <sf_icode_to_fcode+0xbc>
   23858:	mov	r6, r0
   2385c:	mov	r0, r6
   23860:	mov	r1, #0
   23864:	mov	r2, r4
   23868:	bl	ea0 <memset@plt>
   2386c:	add	r0, r6, r7, lsl #3
   23870:	add	r1, r5, #2
   23874:	stmib	sl, {r1, r6}
   23878:	str	r0, [sl, #12]
   2387c:	mov	r0, r9
   23880:	bl	2397c <convert_code_r>
   23884:	cmp	r0, #0
   23888:	bne	238d4 <sf_icode_to_fcode+0xc8>
   2388c:	mov	r0, r6
   23890:	bl	dbc <free@plt>
   23894:	ldr	r5, [sl, #4]
   23898:	add	r0, r5, #1
   2389c:	str	r0, [sl, #4]
   238a0:	mov	r0, r9
   238a4:	bl	238e8 <count_stmts>
   238a8:	lsl	r4, r0, #3
   238ac:	mov	r7, r0
   238b0:	str	r0, [r8]
   238b4:	mov	r0, r4
   238b8:	bl	e34 <malloc@plt>
   238bc:	mov	r6, r0
   238c0:	cmp	r0, #0
   238c4:	bne	2385c <sf_icode_to_fcode+0x50>
   238c8:	ldr	r0, [pc, #20]	; 238e4 <sf_icode_to_fcode+0xd8>
   238cc:	add	r0, pc, r0
   238d0:	bl	214c <sf_bpf_error>
   238d4:	mov	r0, r6
   238d8:	sub	sp, fp, #28
   238dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   238e0:	.word	0x00023088
   238e4:	.word	0x00006d34

000238e8 <count_stmts>:
   238e8:	push	{r4, r5, fp, lr}
   238ec:	add	fp, sp, #8
   238f0:	mov	r4, r0
   238f4:	mov	r0, #0
   238f8:	cmp	r4, #0
   238fc:	beq	23974 <count_stmts+0x8c>
   23900:	ldr	r1, [pc, #112]	; 23978 <count_stmts+0x90>
   23904:	ldr	r2, [r4, #24]
   23908:	add	r1, pc, r1
   2390c:	ldr	r1, [r1, #4]
   23910:	cmp	r2, r1
   23914:	popeq	{r4, r5, fp, pc}
   23918:	str	r1, [r4, #24]
   2391c:	ldr	r0, [r4, #60]	; 0x3c
   23920:	bl	238e8 <count_stmts>
   23924:	mov	r5, r0
   23928:	ldr	r0, [r4, #84]	; 0x54
   2392c:	bl	238e8 <count_stmts>
   23930:	ldr	r2, [r4, #4]
   23934:	mov	r1, #0
   23938:	cmp	r2, #0
   2393c:	beq	23958 <count_stmts+0x70>
   23940:	ldr	r3, [r2]
   23944:	ldr	r2, [r2, #16]
   23948:	cmn	r3, #1
   2394c:	addne	r1, r1, #1
   23950:	cmp	r2, #0
   23954:	bne	23940 <count_stmts+0x58>
   23958:	add	r0, r5, r0
   2395c:	ldr	r2, [r4, #32]
   23960:	add	r0, r0, r1
   23964:	ldr	r1, [r4, #28]
   23968:	add	r0, r0, r1
   2396c:	add	r0, r0, r2
   23970:	add	r0, r0, #1
   23974:	pop	{r4, r5, fp, pc}
   23978:	.word	0x00022fa4

0002397c <convert_code_r>:
   2397c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23980:	add	fp, sp, #28
   23984:	sub	sp, sp, #12
   23988:	cmp	r0, #0
   2398c:	beq	239ac <convert_code_r+0x30>
   23990:	ldr	r8, [pc, #1028]	; 23d9c <convert_code_r+0x420>
   23994:	mov	r6, r0
   23998:	ldr	r1, [r6, #24]
   2399c:	add	r8, pc, r8
   239a0:	ldr	r0, [r8, #4]
   239a4:	cmp	r1, r0
   239a8:	bne	239bc <convert_code_r+0x40>
   239ac:	mov	r5, #1
   239b0:	mov	r0, r5
   239b4:	sub	sp, fp, #28
   239b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   239bc:	str	r0, [r6, #24]
   239c0:	ldr	r0, [r6, #84]	; 0x54
   239c4:	bl	2397c <convert_code_r>
   239c8:	mov	r5, #0
   239cc:	cmp	r0, #0
   239d0:	beq	239b0 <convert_code_r+0x34>
   239d4:	ldr	r0, [r6, #60]	; 0x3c
   239d8:	bl	2397c <convert_code_r>
   239dc:	cmp	r0, #0
   239e0:	beq	239b0 <convert_code_r+0x34>
   239e4:	ldr	r7, [r6, #4]
   239e8:	mov	r4, #0
   239ec:	mov	r9, #0
   239f0:	str	r6, [sp]
   239f4:	cmp	r7, #0
   239f8:	beq	23a1c <convert_code_r+0xa0>
   239fc:	mov	r9, #0
   23a00:	mov	r1, r7
   23a04:	ldr	r2, [r1]
   23a08:	ldr	r1, [r1, #16]
   23a0c:	cmn	r2, #1
   23a10:	addne	r9, r9, #1
   23a14:	cmp	r1, #0
   23a18:	bne	23a04 <convert_code_r+0x88>
   23a1c:	ldr	r6, [sp]
   23a20:	ldr	r3, [r8, #12]
   23a24:	cmp	r9, #0
   23a28:	ldr	r1, [r6, #28]
   23a2c:	ldr	r2, [r6, #32]
   23a30:	add	r1, r9, r1
   23a34:	add	r1, r1, r2
   23a38:	ldr	r2, [r8, #8]
   23a3c:	sub	r1, r3, r1, lsl #3
   23a40:	sub	sl, r1, #8
   23a44:	sub	r1, sl, r2
   23a48:	str	sl, [r8, #12]
   23a4c:	asr	r1, r1, #3
   23a50:	str	r1, [r6, #40]	; 0x28
   23a54:	beq	23a9c <convert_code_r+0x120>
   23a58:	mov	r0, r9
   23a5c:	mov	r1, #4
   23a60:	bl	d5c <calloc@plt>
   23a64:	cmp	r0, #0
   23a68:	beq	23d90 <convert_code_r+0x414>
   23a6c:	mov	r4, r0
   23a70:	cmp	r7, #0
   23a74:	beq	23a9c <convert_code_r+0x120>
   23a78:	mov	r1, #0
   23a7c:	mov	r2, r7
   23a80:	str	r2, [r4, r1, lsl #2]
   23a84:	add	r1, r1, #1
   23a88:	cmp	r1, r9
   23a8c:	bcs	23a9c <convert_code_r+0x120>
   23a90:	ldr	r2, [r2, #16]
   23a94:	cmp	r2, #0
   23a98:	bne	23a80 <convert_code_r+0x104>
   23a9c:	cmp	r7, #0
   23aa0:	beq	23c64 <convert_code_r+0x2e8>
   23aa4:	sub	r3, r9, #2
   23aa8:	cmp	r9, #0
   23aac:	ble	23bd8 <convert_code_r+0x25c>
   23ab0:	sub	r0, r9, #1
   23ab4:	mov	r2, #0
   23ab8:	str	r4, [sp, #8]
   23abc:	str	r0, [sp, #4]
   23ac0:	ldr	r1, [r7]
   23ac4:	cmn	r1, #1
   23ac8:	bne	23af0 <convert_code_r+0x174>
   23acc:	b	23ad8 <convert_code_r+0x15c>
   23ad0:	add	r2, r2, #1
   23ad4:	add	sl, sl, #8
   23ad8:	ldr	r7, [r7, #16]
   23adc:	cmp	r7, #0
   23ae0:	beq	23c64 <convert_code_r+0x2e8>
   23ae4:	ldr	r1, [r7]
   23ae8:	cmn	r1, #1
   23aec:	beq	23ad8 <convert_code_r+0x15c>
   23af0:	strh	r1, [sl]
   23af4:	cmp	r2, r3
   23af8:	ldr	r1, [r7, #12]
   23afc:	str	r1, [sl, #4]
   23b00:	ldrne	r1, [r7]
   23b04:	cmpne	r1, #5
   23b08:	beq	23ad0 <convert_code_r+0x154>
   23b0c:	and	r1, r1, #7
   23b10:	cmp	r1, #5
   23b14:	bne	23ad0 <convert_code_r+0x154>
   23b18:	ldr	ip, [r7, #4]
   23b1c:	cmp	ip, #0
   23b20:	ldrne	r1, [r7, #8]
   23b24:	cmpne	r1, #0
   23b28:	beq	23c50 <convert_code_r+0x2d4>
   23b2c:	ldr	r5, [sp, #4]
   23b30:	mov	r0, r3
   23b34:	eor	r3, r2, #255	; 0xff
   23b38:	mov	r8, #0
   23b3c:	mov	r6, #0
   23b40:	ldr	lr, [r4]
   23b44:	cmp	lr, ip
   23b48:	beq	23b64 <convert_code_r+0x1e8>
   23b4c:	ldr	r1, [r7, #8]
   23b50:	cmp	lr, r1
   23b54:	beq	23b84 <convert_code_r+0x208>
   23b58:	cmp	r5, #0
   23b5c:	bne	23b9c <convert_code_r+0x220>
   23b60:	b	23bbc <convert_code_r+0x240>
   23b64:	cmp	r6, #0
   23b68:	bne	23d68 <convert_code_r+0x3ec>
   23b6c:	strb	r3, [sl, #2]
   23b70:	mov	r6, #1
   23b74:	ldr	lr, [r4]
   23b78:	ldr	r1, [r7, #8]
   23b7c:	cmp	lr, r1
   23b80:	bne	23b58 <convert_code_r+0x1dc>
   23b84:	cmp	r8, #0
   23b88:	bne	23d68 <convert_code_r+0x3ec>
   23b8c:	mov	r8, #1
   23b90:	strb	r3, [sl, #3]
   23b94:	cmp	r5, #0
   23b98:	beq	23bbc <convert_code_r+0x240>
   23b9c:	ldr	ip, [r7, #4]
   23ba0:	add	r4, r4, #4
   23ba4:	add	r3, r3, #1
   23ba8:	sub	r5, r5, #1
   23bac:	ldr	lr, [r4]
   23bb0:	cmp	lr, ip
   23bb4:	bne	23b4c <convert_code_r+0x1d0>
   23bb8:	b	23b64 <convert_code_r+0x1e8>
   23bbc:	cmp	r6, #0
   23bc0:	beq	23d7c <convert_code_r+0x400>
   23bc4:	ldr	r4, [sp, #8]
   23bc8:	cmp	r8, #0
   23bcc:	mov	r3, r0
   23bd0:	bne	23ad0 <convert_code_r+0x154>
   23bd4:	b	23d7c <convert_code_r+0x400>
   23bd8:	mov	r2, #0
   23bdc:	ldr	r1, [r7]
   23be0:	cmn	r1, #1
   23be4:	bne	23c0c <convert_code_r+0x290>
   23be8:	b	23bf4 <convert_code_r+0x278>
   23bec:	add	r2, r2, #1
   23bf0:	add	sl, sl, #8
   23bf4:	ldr	r7, [r7, #16]
   23bf8:	cmp	r7, #0
   23bfc:	beq	23c64 <convert_code_r+0x2e8>
   23c00:	ldr	r1, [r7]
   23c04:	cmn	r1, #1
   23c08:	beq	23bf4 <convert_code_r+0x278>
   23c0c:	strh	r1, [sl]
   23c10:	cmp	r2, r3
   23c14:	ldr	r1, [r7, #12]
   23c18:	str	r1, [sl, #4]
   23c1c:	beq	23bec <convert_code_r+0x270>
   23c20:	ldr	r1, [r7]
   23c24:	cmp	r1, #5
   23c28:	beq	23bec <convert_code_r+0x270>
   23c2c:	and	r1, r1, #7
   23c30:	cmp	r1, #5
   23c34:	bne	23bec <convert_code_r+0x270>
   23c38:	ldr	r0, [r7, #4]
   23c3c:	cmp	r0, #0
   23c40:	beq	23c50 <convert_code_r+0x2d4>
   23c44:	ldr	r0, [r7, #8]
   23c48:	cmp	r0, #0
   23c4c:	bne	23d7c <convert_code_r+0x400>
   23c50:	ldr	r0, [pc, #328]	; 23da0 <convert_code_r+0x424>
   23c54:	ldr	r1, [pc, #328]	; 23da4 <convert_code_r+0x428>
   23c58:	add	r0, pc, r0
   23c5c:	add	r1, pc, r1
   23c60:	bl	214c <sf_bpf_error>
   23c64:	cmp	r4, #0
   23c68:	beq	23c74 <convert_code_r+0x2f8>
   23c6c:	mov	r0, r4
   23c70:	bl	dbc <free@plt>
   23c74:	ldr	r3, [sp]
   23c78:	ldr	r0, [r3, #8]
   23c7c:	strh	r0, [sl]
   23c80:	ldr	r0, [r3, #20]
   23c84:	str	r0, [sl, #4]
   23c88:	ldr	r0, [r3, #60]	; 0x3c
   23c8c:	cmp	r0, #0
   23c90:	beq	239ac <convert_code_r+0x30>
   23c94:	ldr	r1, [r3, #40]	; 0x28
   23c98:	ldr	r0, [r0, #40]	; 0x28
   23c9c:	add	r1, r1, r9
   23ca0:	mvn	r1, r1
   23ca4:	add	r0, r0, r1
   23ca8:	cmp	r0, #256	; 0x100
   23cac:	bcc	23cdc <convert_code_r+0x360>
   23cb0:	ldr	r1, [r3, #28]
   23cb4:	cmp	r1, #0
   23cb8:	beq	23d38 <convert_code_r+0x3bc>
   23cbc:	mov	r1, #5
   23cc0:	sub	r0, r0, #1
   23cc4:	strh	r1, [sl, #8]
   23cc8:	mov	r1, #0
   23ccc:	strb	r1, [sl, #2]
   23cd0:	str	r0, [sl, #12]
   23cd4:	mov	r0, #1
   23cd8:	b	23ce4 <convert_code_r+0x368>
   23cdc:	strb	r0, [sl, #2]
   23ce0:	mov	r0, #0
   23ce4:	ldr	r2, [r3, #84]	; 0x54
   23ce8:	ldr	r1, [r3, #40]	; 0x28
   23cec:	ldr	r2, [r2, #40]	; 0x28
   23cf0:	add	r1, r1, r9
   23cf4:	mvn	r1, r1
   23cf8:	add	r1, r2, r1
   23cfc:	cmp	r1, #256	; 0x100
   23d00:	bcc	23d30 <convert_code_r+0x3b4>
   23d04:	ldr	r2, [r3, #32]
   23d08:	cmp	r2, #0
   23d0c:	beq	23d50 <convert_code_r+0x3d4>
   23d10:	strb	r0, [sl, #3]
   23d14:	add	r0, r0, #1
   23d18:	mov	r3, #5
   23d1c:	lsl	r2, r0, #3
   23d20:	sub	r0, r1, r0
   23d24:	strh	r3, [sl, r2]!
   23d28:	str	r0, [sl, #4]
   23d2c:	b	239ac <convert_code_r+0x30>
   23d30:	strb	r1, [sl, #3]
   23d34:	b	239ac <convert_code_r+0x30>
   23d38:	mov	r0, #1
   23d3c:	mov	r5, #0
   23d40:	str	r0, [r3, #28]
   23d44:	mov	r0, r5
   23d48:	sub	sp, fp, #28
   23d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d50:	mov	r0, #1
   23d54:	mov	r5, #0
   23d58:	str	r0, [r3, #32]
   23d5c:	mov	r0, r5
   23d60:	sub	sp, fp, #28
   23d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d68:	ldr	r0, [pc, #64]	; 23db0 <convert_code_r+0x434>
   23d6c:	ldr	r1, [pc, #64]	; 23db4 <convert_code_r+0x438>
   23d70:	add	r0, pc, r0
   23d74:	add	r1, pc, r1
   23d78:	bl	214c <sf_bpf_error>
   23d7c:	ldr	r0, [pc, #36]	; 23da8 <convert_code_r+0x42c>
   23d80:	ldr	r1, [pc, #36]	; 23dac <convert_code_r+0x430>
   23d84:	add	r0, pc, r0
   23d88:	add	r1, pc, r1
   23d8c:	bl	214c <sf_bpf_error>
   23d90:	ldr	r0, [pc, #32]	; 23db8 <convert_code_r+0x43c>
   23d94:	add	r0, pc, r0
   23d98:	bl	214c <sf_bpf_error>
   23d9c:	.word	0x00022f10
   23da0:	.word	0x000069d0
   23da4:	.word	0x000069f5
   23da8:	.word	0x000068a4
   23dac:	.word	0x000068ed
   23db0:	.word	0x000068b8
   23db4:	.word	0x000068f0
   23db8:	.word	0x00006884

00023dbc <find_levels_r>:
   23dbc:	push	{r4, sl, fp, lr}
   23dc0:	add	fp, sp, #8
   23dc4:	mov	r4, r0
   23dc8:	ldr	r0, [pc, #108]	; 23e3c <find_levels_r+0x80>
   23dcc:	ldr	r1, [r4, #24]
   23dd0:	add	r0, pc, r0
   23dd4:	ldr	r0, [r0, #4]
   23dd8:	cmp	r1, r0
   23ddc:	popeq	{r4, sl, fp, pc}
   23de0:	mov	r1, #0
   23de4:	str	r1, [r4, #100]	; 0x64
   23de8:	str	r0, [r4, #24]
   23dec:	ldr	r0, [r4, #60]	; 0x3c
   23df0:	cmp	r0, #0
   23df4:	beq	23e20 <find_levels_r+0x64>
   23df8:	bl	23dbc <find_levels_r>
   23dfc:	ldr	r0, [r4, #84]	; 0x54
   23e00:	bl	23dbc <find_levels_r>
   23e04:	ldr	r0, [r4, #60]	; 0x3c
   23e08:	ldr	r1, [r4, #84]	; 0x54
   23e0c:	ldr	r0, [r0, #36]	; 0x24
   23e10:	ldr	r1, [r1, #36]	; 0x24
   23e14:	cmp	r0, r1
   23e18:	movgt	r1, r0
   23e1c:	add	r1, r1, #1
   23e20:	str	r1, [r4, #36]	; 0x24
   23e24:	ldr	r0, [pc, #20]	; 23e40 <find_levels_r+0x84>
   23e28:	ldr	r0, [pc, r0]
   23e2c:	ldr	r2, [r0, r1, lsl #2]
   23e30:	str	r2, [r4, #100]	; 0x64
   23e34:	str	r4, [r0, r1, lsl #2]
   23e38:	pop	{r4, sl, fp, pc}
   23e3c:	.word	0x00022adc
   23e40:	.word	0x00022b78

00023e44 <opt_j>:
   23e44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e48:	add	fp, sp, #28
   23e4c:	sub	sp, sp, #20
   23e50:	ldr	r6, [r0, #12]
   23e54:	str	r0, [sp, #12]
   23e58:	ldr	r5, [r6, #60]	; 0x3c
   23e5c:	cmp	r5, #0
   23e60:	beq	24010 <opt_j+0x1cc>
   23e64:	ldr	r0, [r6, #84]	; 0x54
   23e68:	cmp	r5, r0
   23e6c:	bne	23ea4 <opt_j+0x60>
   23e70:	ldr	r0, [sp, #12]
   23e74:	mov	r1, r5
   23e78:	ldr	r0, [r0, #16]
   23e7c:	bl	241bc <use_conflict>
   23e80:	cmp	r0, #0
   23e84:	bne	23ea4 <opt_j+0x60>
   23e88:	ldr	r1, [pc, #392]	; 24018 <opt_j+0x1d4>
   23e8c:	mov	r0, #0
   23e90:	mov	r6, r5
   23e94:	add	r1, pc, r1
   23e98:	strb	r0, [r1]
   23e9c:	ldr	r0, [sp, #12]
   23ea0:	str	r5, [r0, #12]
   23ea4:	ldr	r0, [pc, #368]	; 2401c <opt_j+0x1d8>
   23ea8:	add	r0, pc, r0
   23eac:	ldr	r0, [r0, #40]	; 0x28
   23eb0:	cmp	r0, #1
   23eb4:	str	r0, [sp]
   23eb8:	blt	24010 <opt_j+0x1cc>
   23ebc:	ldr	r0, [sp, #12]
   23ec0:	mov	ip, #1
   23ec4:	ldr	r0, [r0, #8]
   23ec8:	str	r0, [sp, #4]
   23ecc:	ldr	r7, [pc, #332]	; 24020 <opt_j+0x1dc>
   23ed0:	ldr	r7, [pc, r7]
   23ed4:	str	r7, [sp, #8]
   23ed8:	add	lr, r6, #84	; 0x54
   23edc:	mov	r1, #0
   23ee0:	b	23ef8 <opt_j+0xb4>
   23ee4:	ldr	r1, [sp, #16]
   23ee8:	ldr	r0, [sp]
   23eec:	add	r1, r1, #1
   23ef0:	cmp	r1, r0
   23ef4:	beq	24010 <opt_j+0x1cc>
   23ef8:	ldr	r0, [sp, #4]
   23efc:	str	r1, [sp, #16]
   23f00:	ldr	r4, [r0, r1, lsl #2]
   23f04:	cmp	r4, #0
   23f08:	beq	23ee4 <opt_j+0xa0>
   23f0c:	ldr	r0, [sp, #16]
   23f10:	ldr	r8, [r6, #8]
   23f14:	lsl	r9, r0, #5
   23f18:	b	23f28 <opt_j+0xe4>
   23f1c:	bic	r4, r4, ip, lsl sl
   23f20:	cmp	r4, #0
   23f24:	beq	23ee4 <opt_j+0xa0>
   23f28:	rbit	r0, r4
   23f2c:	clz	sl, r0
   23f30:	orr	r0, sl, r9
   23f34:	ldr	r2, [r7, r0, lsl #2]
   23f38:	mov	r0, #0
   23f3c:	ldr	r1, [r2, #4]
   23f40:	cmn	r1, #1
   23f44:	mov	r3, r1
   23f48:	movwgt	r0, #1
   23f4c:	cmp	r1, #0
   23f50:	rsbmi	r3, r1, #0
   23f54:	cmp	r8, r3
   23f58:	bne	23f1c <opt_j+0xd8>
   23f5c:	ldr	r2, [r2, #16]
   23f60:	ldr	r3, [r6, #200]	; 0xc8
   23f64:	ldr	r5, [r2, #200]	; 0xc8
   23f68:	cmp	r3, r5
   23f6c:	bne	23f1c <opt_j+0xd8>
   23f70:	ldr	r2, [r2, #132]	; 0x84
   23f74:	ldr	r3, [r6, #132]	; 0x84
   23f78:	cmp	r3, r2
   23f7c:	bne	23f9c <opt_j+0x158>
   23f80:	cmp	r1, #0
   23f84:	mov	r0, lr
   23f88:	addpl	r0, r6, #60	; 0x3c
   23f8c:	ldr	r5, [r0]
   23f90:	cmp	r5, #0
   23f94:	bne	23fc0 <opt_j+0x17c>
   23f98:	b	23f1c <opt_j+0xd8>
   23f9c:	subs	r1, r8, #21
   23fa0:	eor	r0, r0, #1
   23fa4:	movwne	r1, #1
   23fa8:	orrs	r0, r1, r0
   23fac:	mov	r0, lr
   23fb0:	bne	23f1c <opt_j+0xd8>
   23fb4:	ldr	r5, [r0]
   23fb8:	cmp	r5, #0
   23fbc:	beq	23f1c <opt_j+0xd8>
   23fc0:	ldr	r0, [sp, #12]
   23fc4:	mov	r1, r5
   23fc8:	mov	r7, lr
   23fcc:	ldr	r0, [r0, #16]
   23fd0:	bl	241bc <use_conflict>
   23fd4:	mov	lr, r7
   23fd8:	ldr	r7, [sp, #8]
   23fdc:	mov	ip, #1
   23fe0:	cmp	r0, #0
   23fe4:	bne	23f1c <opt_j+0xd8>
   23fe8:	ldr	r0, [pc, #52]	; 24024 <opt_j+0x1e0>
   23fec:	mov	r1, #0
   23ff0:	mov	r6, r5
   23ff4:	add	r0, pc, r0
   23ff8:	strb	r1, [r0]
   23ffc:	ldr	r0, [sp, #12]
   24000:	str	r5, [r0, #12]
   24004:	ldr	r0, [r5, #60]	; 0x3c
   24008:	cmp	r0, #0
   2400c:	bne	23ed8 <opt_j+0x94>
   24010:	sub	sp, fp, #28
   24014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24018:	.word	0x00022a18
   2401c:	.word	0x00022a04
   24020:	.word	0x00022ad8
   24024:	.word	0x000228b8

00024028 <deadstmt>:
   24028:	push	{r4, sl, fp, lr}
   2402c:	add	fp, sp, #8
   24030:	ldr	r3, [r0]
   24034:	cmn	r3, #1
   24038:	beq	24184 <deadstmt+0x15c>
   2403c:	and	lr, r3, #7
   24040:	add	r4, pc, #8
   24044:	mov	ip, #16
   24048:	ldr	r2, [r4, lr, lsl #2]
   2404c:	add	pc, r4, r2
   24050:	.word	0x00000020
   24054:	.word	0x00000020
   24058:	.word	0x00000120
   2405c:	.word	0x000000e4
   24060:	.word	0x00000050
   24064:	.word	0x00000050
   24068:	.word	0x000000ec
   2406c:	.word	0x00000110
   24070:	and	r2, r3, #224	; 0xe0
   24074:	cmp	r2, #64	; 0x40
   24078:	beq	24134 <deadstmt+0x10c>
   2407c:	cmp	r2, #96	; 0x60
   24080:	bne	24178 <deadstmt+0x150>
   24084:	ldr	r3, [r0, #12]
   24088:	cmp	r3, #0
   2408c:	bmi	24178 <deadstmt+0x150>
   24090:	cmp	r3, #18
   24094:	mov	ip, r3
   24098:	bne	24170 <deadstmt+0x148>
   2409c:	b	240a8 <deadstmt+0x80>
   240a0:	tst	r3, #8
   240a4:	beq	24170 <deadstmt+0x148>
   240a8:	mov	r2, #0
   240ac:	str	r2, [r1, #64]	; 0x40
   240b0:	str	r2, [r1, #68]	; 0x44
   240b4:	ldr	r3, [r0]
   240b8:	cmn	r3, #1
   240bc:	beq	24184 <deadstmt+0x15c>
   240c0:	and	r2, r3, #7
   240c4:	cmp	r2, #7
   240c8:	bhi	24184 <deadstmt+0x15c>
   240cc:	add	r4, pc, #8
   240d0:	mov	ip, #16
   240d4:	ldr	r2, [r4, r2, lsl #2]
   240d8:	add	pc, r4, r2
   240dc:	.word	0x0000002c
   240e0:	.word	0x000000ac
   240e4:	.word	0x00000020
   240e8:	.word	0x00000020
   240ec:	.word	0x0000002c
   240f0:	.word	0x000000a8
   240f4:	.word	0x000000a8
   240f8:	.word	0x000000c0
   240fc:	ldr	ip, [r0, #12]
   24100:	cmp	ip, #0
   24104:	popmi	{r4, sl, fp, pc}
   24108:	ldr	r3, [r1, ip, lsl #2]
   2410c:	cmp	r3, #0
   24110:	beq	2412c <deadstmt+0x104>
   24114:	ldr	r2, [pc, #156]	; 241b8 <deadstmt+0x190>
   24118:	mov	r4, #0
   2411c:	add	r2, pc, r2
   24120:	strb	r4, [r2]
   24124:	mvn	r2, #0
   24128:	str	r2, [r3]
   2412c:	str	r0, [r1, ip, lsl #2]
   24130:	pop	{r4, sl, fp, pc}
   24134:	mov	ip, #17
   24138:	b	24170 <deadstmt+0x148>
   2413c:	and	r2, r3, #24
   24140:	mvn	r3, #0
   24144:	cmp	r2, #8
   24148:	movweq	r3, #17
   2414c:	cmp	r2, #16
   24150:	beq	24170 <deadstmt+0x148>
   24154:	cmp	r3, #0
   24158:	bpl	24090 <deadstmt+0x68>
   2415c:	b	24178 <deadstmt+0x150>
   24160:	and	r2, r3, #248	; 0xf8
   24164:	mov	ip, #16
   24168:	cmp	r2, #128	; 0x80
   2416c:	movweq	ip, #17
   24170:	mov	r2, #0
   24174:	str	r2, [r1, ip, lsl #2]
   24178:	ldr	r3, [r0]
   2417c:	cmn	r3, #1
   24180:	bne	240c0 <deadstmt+0x98>
   24184:	pop	{r4, sl, fp, pc}
   24188:	mov	ip, #17
   2418c:	ldr	r3, [r1, ip, lsl #2]
   24190:	cmp	r3, #0
   24194:	bne	24114 <deadstmt+0xec>
   24198:	b	2412c <deadstmt+0x104>
   2419c:	tst	r3, #248	; 0xf8
   241a0:	mov	ip, #16
   241a4:	movweq	ip, #17
   241a8:	ldr	r3, [r1, ip, lsl #2]
   241ac:	cmp	r3, #0
   241b0:	bne	24114 <deadstmt+0xec>
   241b4:	b	2412c <deadstmt+0x104>
   241b8:	.word	0x00022790

000241bc <use_conflict>:
   241bc:	push	{fp, lr}
   241c0:	mov	fp, sp
   241c4:	ldr	ip, [r1, #128]	; 0x80
   241c8:	mov	r2, #0
   241cc:	cmp	ip, #0
   241d0:	beq	243d8 <use_conflict+0x21c>
   241d4:	tst	ip, #1
   241d8:	beq	241f0 <use_conflict+0x34>
   241dc:	ldr	lr, [r1, #136]	; 0x88
   241e0:	ldr	r3, [r0, #136]	; 0x88
   241e4:	mov	r2, #1
   241e8:	cmp	r3, lr
   241ec:	bne	243d8 <use_conflict+0x21c>
   241f0:	tst	ip, #2
   241f4:	beq	2420c <use_conflict+0x50>
   241f8:	ldr	lr, [r1, #140]	; 0x8c
   241fc:	ldr	r3, [r0, #140]	; 0x8c
   24200:	mov	r2, #1
   24204:	cmp	r3, lr
   24208:	bne	243d8 <use_conflict+0x21c>
   2420c:	tst	ip, #4
   24210:	beq	24228 <use_conflict+0x6c>
   24214:	ldr	lr, [r1, #144]	; 0x90
   24218:	ldr	r3, [r0, #144]	; 0x90
   2421c:	mov	r2, #1
   24220:	cmp	r3, lr
   24224:	bne	243d8 <use_conflict+0x21c>
   24228:	tst	ip, #8
   2422c:	beq	24244 <use_conflict+0x88>
   24230:	ldr	lr, [r1, #148]	; 0x94
   24234:	ldr	r3, [r0, #148]	; 0x94
   24238:	mov	r2, #1
   2423c:	cmp	r3, lr
   24240:	bne	243d8 <use_conflict+0x21c>
   24244:	tst	ip, #16
   24248:	beq	24260 <use_conflict+0xa4>
   2424c:	ldr	lr, [r1, #152]	; 0x98
   24250:	ldr	r3, [r0, #152]	; 0x98
   24254:	mov	r2, #1
   24258:	cmp	r3, lr
   2425c:	bne	243d8 <use_conflict+0x21c>
   24260:	tst	ip, #32
   24264:	beq	2427c <use_conflict+0xc0>
   24268:	ldr	lr, [r1, #156]	; 0x9c
   2426c:	ldr	r3, [r0, #156]	; 0x9c
   24270:	mov	r2, #1
   24274:	cmp	r3, lr
   24278:	bne	243d8 <use_conflict+0x21c>
   2427c:	tst	ip, #64	; 0x40
   24280:	beq	24298 <use_conflict+0xdc>
   24284:	ldr	lr, [r1, #160]	; 0xa0
   24288:	ldr	r3, [r0, #160]	; 0xa0
   2428c:	mov	r2, #1
   24290:	cmp	r3, lr
   24294:	bne	243d8 <use_conflict+0x21c>
   24298:	tst	ip, #128	; 0x80
   2429c:	beq	242b4 <use_conflict+0xf8>
   242a0:	ldr	lr, [r1, #164]	; 0xa4
   242a4:	ldr	r3, [r0, #164]	; 0xa4
   242a8:	mov	r2, #1
   242ac:	cmp	r3, lr
   242b0:	bne	243d8 <use_conflict+0x21c>
   242b4:	tst	ip, #256	; 0x100
   242b8:	beq	242d0 <use_conflict+0x114>
   242bc:	ldr	lr, [r1, #168]	; 0xa8
   242c0:	ldr	r3, [r0, #168]	; 0xa8
   242c4:	mov	r2, #1
   242c8:	cmp	r3, lr
   242cc:	bne	243d8 <use_conflict+0x21c>
   242d0:	tst	ip, #512	; 0x200
   242d4:	beq	242ec <use_conflict+0x130>
   242d8:	ldr	lr, [r1, #172]	; 0xac
   242dc:	ldr	r3, [r0, #172]	; 0xac
   242e0:	mov	r2, #1
   242e4:	cmp	r3, lr
   242e8:	bne	243d8 <use_conflict+0x21c>
   242ec:	tst	ip, #1024	; 0x400
   242f0:	beq	24308 <use_conflict+0x14c>
   242f4:	ldr	lr, [r1, #176]	; 0xb0
   242f8:	ldr	r3, [r0, #176]	; 0xb0
   242fc:	mov	r2, #1
   24300:	cmp	r3, lr
   24304:	bne	243d8 <use_conflict+0x21c>
   24308:	tst	ip, #2048	; 0x800
   2430c:	beq	24324 <use_conflict+0x168>
   24310:	ldr	lr, [r1, #180]	; 0xb4
   24314:	ldr	r3, [r0, #180]	; 0xb4
   24318:	mov	r2, #1
   2431c:	cmp	r3, lr
   24320:	bne	243d8 <use_conflict+0x21c>
   24324:	tst	ip, #4096	; 0x1000
   24328:	beq	24340 <use_conflict+0x184>
   2432c:	ldr	lr, [r1, #184]	; 0xb8
   24330:	ldr	r3, [r0, #184]	; 0xb8
   24334:	mov	r2, #1
   24338:	cmp	r3, lr
   2433c:	bne	243d8 <use_conflict+0x21c>
   24340:	tst	ip, #8192	; 0x2000
   24344:	beq	2435c <use_conflict+0x1a0>
   24348:	ldr	lr, [r1, #188]	; 0xbc
   2434c:	ldr	r3, [r0, #188]	; 0xbc
   24350:	mov	r2, #1
   24354:	cmp	r3, lr
   24358:	bne	243d8 <use_conflict+0x21c>
   2435c:	tst	ip, #16384	; 0x4000
   24360:	beq	24378 <use_conflict+0x1bc>
   24364:	ldr	lr, [r1, #192]	; 0xc0
   24368:	ldr	r3, [r0, #192]	; 0xc0
   2436c:	mov	r2, #1
   24370:	cmp	r3, lr
   24374:	bne	243d8 <use_conflict+0x21c>
   24378:	tst	ip, #32768	; 0x8000
   2437c:	beq	24394 <use_conflict+0x1d8>
   24380:	ldr	lr, [r1, #196]	; 0xc4
   24384:	ldr	r3, [r0, #196]	; 0xc4
   24388:	mov	r2, #1
   2438c:	cmp	r3, lr
   24390:	bne	243d8 <use_conflict+0x21c>
   24394:	tst	ip, #65536	; 0x10000
   24398:	beq	243b0 <use_conflict+0x1f4>
   2439c:	ldr	lr, [r1, #200]	; 0xc8
   243a0:	ldr	r3, [r0, #200]	; 0xc8
   243a4:	mov	r2, #1
   243a8:	cmp	r3, lr
   243ac:	bne	243d8 <use_conflict+0x21c>
   243b0:	tst	ip, #131072	; 0x20000
   243b4:	bne	243c4 <use_conflict+0x208>
   243b8:	mov	r2, #0
   243bc:	mov	r0, r2
   243c0:	pop	{fp, pc}
   243c4:	ldr	r1, [r1, #204]	; 0xcc
   243c8:	ldr	r0, [r0, #204]	; 0xcc
   243cc:	mov	r2, #1
   243d0:	cmp	r0, r1
   243d4:	moveq	r2, #0
   243d8:	mov	r0, r2
   243dc:	pop	{fp, pc}

000243e0 <make_marks>:
   243e0:	push	{r4, r5, fp, lr}
   243e4:	add	fp, sp, #8
   243e8:	mov	r4, r0
   243ec:	ldr	r0, [pc, #52]	; 24428 <make_marks+0x48>
   243f0:	add	r0, pc, r0
   243f4:	ldr	r5, [r0, #4]
   243f8:	b	24408 <make_marks+0x28>
   243fc:	ldr	r0, [r4, #60]	; 0x3c
   24400:	bl	243e0 <make_marks>
   24404:	ldr	r4, [r4, #84]	; 0x54
   24408:	ldr	r0, [r4, #24]
   2440c:	cmp	r0, r5
   24410:	strne	r5, [r4, #24]
   24414:	ldrne	r0, [r4, #8]
   24418:	andne	r0, r0, #7
   2441c:	cmpne	r0, #6
   24420:	bne	243fc <make_marks+0x1c>
   24424:	pop	{r4, r5, fp, pc}
   24428:	.word	0x000224bc

0002442c <count_blocks>:
   2442c:	push	{r4, r5, fp, lr}
   24430:	add	fp, sp, #8
   24434:	cmp	r0, #0
   24438:	beq	24458 <count_blocks+0x2c>
   2443c:	mov	r4, r0
   24440:	ldr	r0, [pc, #60]	; 24484 <count_blocks+0x58>
   24444:	ldr	r1, [r4, #24]
   24448:	add	r0, pc, r0
   2444c:	ldr	r0, [r0, #4]
   24450:	cmp	r1, r0
   24454:	bne	24460 <count_blocks+0x34>
   24458:	mov	r0, #0
   2445c:	pop	{r4, r5, fp, pc}
   24460:	str	r0, [r4, #24]
   24464:	ldr	r0, [r4, #60]	; 0x3c
   24468:	bl	2442c <count_blocks>
   2446c:	mov	r5, r0
   24470:	ldr	r0, [r4, #84]	; 0x54
   24474:	bl	2442c <count_blocks>
   24478:	add	r0, r5, r0
   2447c:	add	r0, r0, #1
   24480:	pop	{r4, r5, fp, pc}
   24484:	.word	0x00022464

00024488 <number_blks_r>:
   24488:	push	{r4, r5, r6, sl, fp, lr}
   2448c:	add	fp, sp, #16
   24490:	cmp	r0, #0
   24494:	beq	244e8 <number_blks_r+0x60>
   24498:	ldr	r5, [pc, #76]	; 244ec <number_blks_r+0x64>
   2449c:	mov	r4, r0
   244a0:	add	r5, pc, r5
   244a4:	ldr	r6, [r5, #4]
   244a8:	ldr	r0, [r4, #24]
   244ac:	cmp	r0, r6
   244b0:	beq	244e8 <number_blks_r+0x60>
   244b4:	str	r6, [r4, #24]
   244b8:	ldr	r0, [r5, #16]
   244bc:	add	r1, r0, #1
   244c0:	str	r1, [r5, #16]
   244c4:	str	r0, [r4]
   244c8:	ldr	r1, [pc, #32]	; 244f0 <number_blks_r+0x68>
   244cc:	ldr	r1, [pc, r1]
   244d0:	str	r4, [r1, r0, lsl #2]
   244d4:	ldr	r0, [r4, #60]	; 0x3c
   244d8:	bl	24488 <number_blks_r>
   244dc:	ldr	r4, [r4, #84]	; 0x54
   244e0:	cmp	r4, #0
   244e4:	bne	244a8 <number_blks_r+0x20>
   244e8:	pop	{r4, r5, r6, sl, fp, pc}
   244ec:	.word	0x0002240c
   244f0:	.word	0x000224d8

000244f4 <sfbpf_strcasecmp>:
   244f4:	push	{fp, lr}
   244f8:	mov	fp, sp
   244fc:	ldr	ip, [pc, #56]	; 2453c <sfbpf_strcasecmp+0x48>
   24500:	add	ip, pc, ip
   24504:	ldrb	r2, [r1]
   24508:	ldrb	r3, [r0]
   2450c:	ldrb	lr, [ip, r2]
   24510:	ldrb	r2, [ip, r3]
   24514:	cmp	r2, lr
   24518:	bne	24534 <sfbpf_strcasecmp+0x40>
   2451c:	add	r0, r0, #1
   24520:	add	r1, r1, #1
   24524:	cmp	r3, #0
   24528:	bne	24504 <sfbpf_strcasecmp+0x10>
   2452c:	mov	r0, #0
   24530:	pop	{fp, pc}
   24534:	sub	r0, r2, lr
   24538:	pop	{fp, pc}
   2453c:	.word	0x0000618a

00024540 <pcap_next_etherent>:
   24540:	push	{r4, r5, r6, r7, fp, lr}
   24544:	add	fp, sp, #16
   24548:	ldr	r4, [pc, #1192]	; 249f8 <pcap_next_etherent+0x4b8>
   2454c:	vmov.i32	q8, #0	; 0x00000000
   24550:	mov	r5, r0
   24554:	mov	r0, #112	; 0x70
   24558:	add	r4, pc, r4
   2455c:	mov	r1, r4
   24560:	vst1.64	{d16-d17}, [r1], r0
   24564:	add	r0, r4, #96	; 0x60
   24568:	vst1.64	{d16-d17}, [r0]
   2456c:	add	r0, r4, #80	; 0x50
   24570:	vst1.64	{d16-d17}, [r1]
   24574:	vst1.64	{d16-d17}, [r0]
   24578:	add	r0, r4, #64	; 0x40
   2457c:	vst1.64	{d16-d17}, [r0]
   24580:	add	r0, r4, #48	; 0x30
   24584:	vst1.64	{d16-d17}, [r0]
   24588:	add	r0, r4, #32
   2458c:	vst1.64	{d16-d17}, [r0]
   24590:	add	r0, r4, #16
   24594:	vst1.64	{d16-d17}, [r0]
   24598:	b	245a4 <pcap_next_etherent+0x64>
   2459c:	cmn	r0, #1
   245a0:	beq	2498c <pcap_next_etherent+0x44c>
   245a4:	mov	r0, r5
   245a8:	bl	f30 <getc@plt>
   245ac:	mov	r7, r0
   245b0:	bl	e4c <__ctype_b_loc@plt>
   245b4:	mov	r6, r0
   245b8:	ldr	r0, [r0]
   245bc:	cmp	r7, #10
   245c0:	add	r0, r0, r7, lsl #1
   245c4:	ldrh	r1, [r0]
   245c8:	andsne	r0, r1, #8192	; 0x2000
   245cc:	bne	245a4 <pcap_next_etherent+0x64>
   245d0:	mov	r0, #10
   245d4:	cmp	r7, #10
   245d8:	beq	2459c <pcap_next_etherent+0x5c>
   245dc:	tst	r1, #4096	; 0x1000
   245e0:	bne	24600 <pcap_next_etherent+0xc0>
   245e4:	mov	r0, r5
   245e8:	bl	f30 <getc@plt>
   245ec:	cmn	r0, #1
   245f0:	beq	2459c <pcap_next_etherent+0x5c>
   245f4:	cmp	r0, #10
   245f8:	bne	245e4 <pcap_next_etherent+0xa4>
   245fc:	b	2459c <pcap_next_etherent+0x5c>
   24600:	mvn	r0, #47	; 0x2f
   24604:	tst	r1, #2048	; 0x800
   24608:	bne	24618 <pcap_next_etherent+0xd8>
   2460c:	tst	r1, #512	; 0x200
   24610:	mvn	r0, #86	; 0x56
   24614:	mvneq	r0, #54	; 0x36
   24618:	add	r7, r7, r0
   2461c:	mov	r0, r5
   24620:	bl	f30 <getc@plt>
   24624:	ldr	r1, [r6]
   24628:	add	r1, r1, r0, lsl #1
   2462c:	ldrh	r2, [r1]
   24630:	tst	r2, #4096	; 0x1000
   24634:	beq	24664 <pcap_next_etherent+0x124>
   24638:	lsl	r1, r7, #4
   2463c:	mvn	r3, #47	; 0x2f
   24640:	tst	r2, #2048	; 0x800
   24644:	bne	24654 <pcap_next_etherent+0x114>
   24648:	tst	r2, #512	; 0x200
   2464c:	mvn	r3, #86	; 0x56
   24650:	mvneq	r3, #54	; 0x36
   24654:	add	r0, r0, r3
   24658:	orr	r7, r0, r1
   2465c:	mov	r0, r5
   24660:	bl	f30 <getc@plt>
   24664:	cmp	r0, #58	; 0x3a
   24668:	strb	r7, [r4]
   2466c:	bne	2490c <pcap_next_etherent+0x3cc>
   24670:	mov	r0, r5
   24674:	bl	f30 <getc@plt>
   24678:	ldr	r1, [r6]
   2467c:	add	r1, r1, r0, lsl #1
   24680:	ldrh	r2, [r1]
   24684:	mvn	r1, #47	; 0x2f
   24688:	tst	r2, #2048	; 0x800
   2468c:	bne	2469c <pcap_next_etherent+0x15c>
   24690:	tst	r2, #512	; 0x200
   24694:	mvn	r1, #86	; 0x56
   24698:	mvneq	r1, #54	; 0x36
   2469c:	add	r7, r0, r1
   246a0:	mov	r0, r5
   246a4:	bl	f30 <getc@plt>
   246a8:	ldr	r1, [r6]
   246ac:	add	r1, r1, r0, lsl #1
   246b0:	ldrh	r2, [r1]
   246b4:	tst	r2, #4096	; 0x1000
   246b8:	beq	246e8 <pcap_next_etherent+0x1a8>
   246bc:	lsl	r1, r7, #4
   246c0:	mvn	r3, #47	; 0x2f
   246c4:	tst	r2, #2048	; 0x800
   246c8:	bne	246d8 <pcap_next_etherent+0x198>
   246cc:	tst	r2, #512	; 0x200
   246d0:	mvn	r3, #86	; 0x56
   246d4:	mvneq	r3, #54	; 0x36
   246d8:	add	r0, r0, r3
   246dc:	orr	r7, r0, r1
   246e0:	mov	r0, r5
   246e4:	bl	f30 <getc@plt>
   246e8:	cmp	r0, #58	; 0x3a
   246ec:	strb	r7, [r4, #1]
   246f0:	bne	2490c <pcap_next_etherent+0x3cc>
   246f4:	mov	r0, r5
   246f8:	bl	f30 <getc@plt>
   246fc:	ldr	r1, [r6]
   24700:	add	r1, r1, r0, lsl #1
   24704:	ldrh	r2, [r1]
   24708:	mvn	r1, #47	; 0x2f
   2470c:	tst	r2, #2048	; 0x800
   24710:	bne	24720 <pcap_next_etherent+0x1e0>
   24714:	tst	r2, #512	; 0x200
   24718:	mvn	r1, #86	; 0x56
   2471c:	mvneq	r1, #54	; 0x36
   24720:	add	r7, r0, r1
   24724:	mov	r0, r5
   24728:	bl	f30 <getc@plt>
   2472c:	ldr	r1, [r6]
   24730:	add	r1, r1, r0, lsl #1
   24734:	ldrh	r2, [r1]
   24738:	tst	r2, #4096	; 0x1000
   2473c:	beq	2476c <pcap_next_etherent+0x22c>
   24740:	lsl	r1, r7, #4
   24744:	mvn	r3, #47	; 0x2f
   24748:	tst	r2, #2048	; 0x800
   2474c:	bne	2475c <pcap_next_etherent+0x21c>
   24750:	tst	r2, #512	; 0x200
   24754:	mvn	r3, #86	; 0x56
   24758:	mvneq	r3, #54	; 0x36
   2475c:	add	r0, r0, r3
   24760:	orr	r7, r0, r1
   24764:	mov	r0, r5
   24768:	bl	f30 <getc@plt>
   2476c:	cmp	r0, #58	; 0x3a
   24770:	strb	r7, [r4, #2]
   24774:	bne	2490c <pcap_next_etherent+0x3cc>
   24778:	mov	r0, r5
   2477c:	bl	f30 <getc@plt>
   24780:	ldr	r1, [r6]
   24784:	add	r1, r1, r0, lsl #1
   24788:	ldrh	r2, [r1]
   2478c:	mvn	r1, #47	; 0x2f
   24790:	tst	r2, #2048	; 0x800
   24794:	bne	247a4 <pcap_next_etherent+0x264>
   24798:	tst	r2, #512	; 0x200
   2479c:	mvn	r1, #86	; 0x56
   247a0:	mvneq	r1, #54	; 0x36
   247a4:	add	r7, r0, r1
   247a8:	mov	r0, r5
   247ac:	bl	f30 <getc@plt>
   247b0:	ldr	r1, [r6]
   247b4:	add	r1, r1, r0, lsl #1
   247b8:	ldrh	r2, [r1]
   247bc:	tst	r2, #4096	; 0x1000
   247c0:	beq	247f0 <pcap_next_etherent+0x2b0>
   247c4:	lsl	r1, r7, #4
   247c8:	mvn	r3, #47	; 0x2f
   247cc:	tst	r2, #2048	; 0x800
   247d0:	bne	247e0 <pcap_next_etherent+0x2a0>
   247d4:	tst	r2, #512	; 0x200
   247d8:	mvn	r3, #86	; 0x56
   247dc:	mvneq	r3, #54	; 0x36
   247e0:	add	r0, r0, r3
   247e4:	orr	r7, r0, r1
   247e8:	mov	r0, r5
   247ec:	bl	f30 <getc@plt>
   247f0:	cmp	r0, #58	; 0x3a
   247f4:	strb	r7, [r4, #3]
   247f8:	bne	2490c <pcap_next_etherent+0x3cc>
   247fc:	mov	r0, r5
   24800:	bl	f30 <getc@plt>
   24804:	ldr	r1, [r6]
   24808:	add	r1, r1, r0, lsl #1
   2480c:	ldrh	r2, [r1]
   24810:	mvn	r1, #47	; 0x2f
   24814:	tst	r2, #2048	; 0x800
   24818:	bne	24828 <pcap_next_etherent+0x2e8>
   2481c:	tst	r2, #512	; 0x200
   24820:	mvn	r1, #86	; 0x56
   24824:	mvneq	r1, #54	; 0x36
   24828:	add	r7, r0, r1
   2482c:	mov	r0, r5
   24830:	bl	f30 <getc@plt>
   24834:	ldr	r1, [r6]
   24838:	add	r1, r1, r0, lsl #1
   2483c:	ldrh	r2, [r1]
   24840:	tst	r2, #4096	; 0x1000
   24844:	beq	24874 <pcap_next_etherent+0x334>
   24848:	lsl	r1, r7, #4
   2484c:	mvn	r3, #47	; 0x2f
   24850:	tst	r2, #2048	; 0x800
   24854:	bne	24864 <pcap_next_etherent+0x324>
   24858:	tst	r2, #512	; 0x200
   2485c:	mvn	r3, #86	; 0x56
   24860:	mvneq	r3, #54	; 0x36
   24864:	add	r0, r0, r3
   24868:	orr	r7, r0, r1
   2486c:	mov	r0, r5
   24870:	bl	f30 <getc@plt>
   24874:	cmp	r0, #58	; 0x3a
   24878:	strb	r7, [r4, #4]
   2487c:	bne	2490c <pcap_next_etherent+0x3cc>
   24880:	mov	r0, r5
   24884:	bl	f30 <getc@plt>
   24888:	ldr	r1, [r6]
   2488c:	add	r1, r1, r0, lsl #1
   24890:	ldrh	r2, [r1]
   24894:	mvn	r1, #47	; 0x2f
   24898:	tst	r2, #2048	; 0x800
   2489c:	bne	248ac <pcap_next_etherent+0x36c>
   248a0:	tst	r2, #512	; 0x200
   248a4:	mvn	r1, #86	; 0x56
   248a8:	mvneq	r1, #54	; 0x36
   248ac:	add	r7, r0, r1
   248b0:	mov	r0, r5
   248b4:	bl	f30 <getc@plt>
   248b8:	ldr	r1, [r6]
   248bc:	add	r1, r1, r0, lsl #1
   248c0:	ldrh	r2, [r1]
   248c4:	tst	r2, #4096	; 0x1000
   248c8:	beq	248f8 <pcap_next_etherent+0x3b8>
   248cc:	lsl	r1, r7, #4
   248d0:	mvn	r3, #47	; 0x2f
   248d4:	tst	r2, #2048	; 0x800
   248d8:	bne	248e8 <pcap_next_etherent+0x3a8>
   248dc:	tst	r2, #512	; 0x200
   248e0:	mvn	r3, #86	; 0x56
   248e4:	mvneq	r3, #54	; 0x36
   248e8:	add	r0, r0, r3
   248ec:	orr	r7, r0, r1
   248f0:	mov	r0, r5
   248f4:	bl	f30 <getc@plt>
   248f8:	cmp	r0, #58	; 0x3a
   248fc:	strb	r7, [r4, #5]
   24900:	bne	2490c <pcap_next_etherent+0x3cc>
   24904:	mov	r0, r5
   24908:	bl	f30 <getc@plt>
   2490c:	cmn	r0, #1
   24910:	beq	2498c <pcap_next_etherent+0x44c>
   24914:	ldr	r1, [r6]
   24918:	add	r0, r1, r0, lsl #1
   2491c:	ldrb	r0, [r0, #1]
   24920:	tst	r0, #32
   24924:	bne	24944 <pcap_next_etherent+0x404>
   24928:	mov	r0, r5
   2492c:	bl	f30 <getc@plt>
   24930:	cmn	r0, #1
   24934:	beq	2459c <pcap_next_etherent+0x5c>
   24938:	cmp	r0, #10
   2493c:	bne	24928 <pcap_next_etherent+0x3e8>
   24940:	b	2459c <pcap_next_etherent+0x5c>
   24944:	mov	r0, r5
   24948:	bl	f30 <getc@plt>
   2494c:	cmp	r0, #10
   24950:	ldrne	r1, [r6]
   24954:	addne	r1, r1, r0, lsl #1
   24958:	ldrhne	r1, [r1]
   2495c:	andsne	r1, r1, #8192	; 0x2000
   24960:	bne	24944 <pcap_next_etherent+0x404>
   24964:	cmp	r0, #10
   24968:	beq	2459c <pcap_next_etherent+0x5c>
   2496c:	cmp	r0, #35	; 0x23
   24970:	bne	24998 <pcap_next_etherent+0x458>
   24974:	mov	r0, r5
   24978:	bl	f30 <getc@plt>
   2497c:	cmn	r0, #1
   24980:	cmpne	r0, #10
   24984:	bne	24974 <pcap_next_etherent+0x434>
   24988:	b	2459c <pcap_next_etherent+0x5c>
   2498c:	mov	r4, #0
   24990:	mov	r0, r4
   24994:	pop	{r4, r5, r6, r7, fp, pc}
   24998:	mvn	r7, #5
   2499c:	strb	r0, [r4, -r7]
   249a0:	mov	r0, r5
   249a4:	bl	f30 <getc@plt>
   249a8:	ldr	r1, [r6]
   249ac:	add	r1, r1, r0, lsl #1
   249b0:	ldrb	r2, [r1, #1]
   249b4:	sub	r1, r7, #1
   249b8:	tst	r2, #32
   249bc:	bne	249d4 <pcap_next_etherent+0x494>
   249c0:	cmn	r0, #1
   249c4:	beq	249d4 <pcap_next_etherent+0x494>
   249c8:	cmn	r7, #126	; 0x7e
   249cc:	mov	r7, r1
   249d0:	bne	2499c <pcap_next_etherent+0x45c>
   249d4:	mov	r2, #0
   249d8:	strb	r2, [r4, -r1]
   249dc:	cmp	r0, #10
   249e0:	beq	24990 <pcap_next_etherent+0x450>
   249e4:	mov	r0, r5
   249e8:	bl	f30 <getc@plt>
   249ec:	cmn	r0, #1
   249f0:	bne	249dc <pcap_next_etherent+0x49c>
   249f4:	b	24990 <pcap_next_etherent+0x450>
   249f8:	.word	0x00022388

000249fc <sfbpf_parse>:
   249fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24a00:	add	fp, sp, #28
   24a04:	sub	sp, sp, #564	; 0x234
   24a08:	sub	sp, sp, #3072	; 0xc00
   24a0c:	ldr	r0, [pc, #3224]	; 256ac <sfbpf_parse+0xcb0>
   24a10:	mov	sl, #0
   24a14:	sub	r4, fp, #432	; 0x1b0
   24a18:	mvn	r1, #1
   24a1c:	add	r9, sp, #32
   24a20:	mov	ip, #200	; 0xc8
   24a24:	mov	r6, #15
   24a28:	mov	r8, r4
   24a2c:	add	r0, pc, r0
   24a30:	str	sl, [r0]
   24a34:	ldr	r0, [pc, #3188]	; 256b0 <sfbpf_parse+0xcb4>
   24a38:	str	r9, [sp, #20]
   24a3c:	add	r0, pc, r0
   24a40:	str	r1, [r0]
   24a44:	b	24a64 <sfbpf_parse+0x68>
   24a48:	ldr	r1, [pc, #3172]	; 256b4 <sfbpf_parse+0xcb8>
   24a4c:	add	r1, pc, r1
   24a50:	add	r0, r1, r0, lsl #1
   24a54:	ldrsh	sl, [r0]
   24a58:	ldr	r4, [sp, #24]
   24a5c:	mov	r6, #15
   24a60:	add	r8, r8, #2
   24a64:	add	r0, r4, ip, lsl #1
   24a68:	strh	sl, [r8]
   24a6c:	sub	r0, r0, #2
   24a70:	cmp	r0, r8
   24a74:	bhi	24b2c <sfbpf_parse+0x130>
   24a78:	movw	r0, #9999	; 0x270f
   24a7c:	cmp	ip, r0
   24a80:	bhi	263a8 <sfbpf_parse+0x19ac>
   24a84:	lsl	r0, ip, #1
   24a88:	movw	r1, #10000	; 0x2710
   24a8c:	movw	r7, #10000	; 0x2710
   24a90:	cmp	r0, r1
   24a94:	lslcc	r7, ip, #1
   24a98:	add	r0, r7, r7, lsl #3
   24a9c:	add	r0, r6, r0, lsl #1
   24aa0:	bl	e34 <malloc@plt>
   24aa4:	cmp	r0, #0
   24aa8:	beq	263a8 <sfbpf_parse+0x19ac>
   24aac:	mov	r5, r0
   24ab0:	sub	r0, r8, r4
   24ab4:	mov	r1, #1
   24ab8:	mov	r8, r4
   24abc:	add	r4, r1, r0, asr #1
   24ac0:	asr	r9, r0, #1
   24ac4:	mov	r0, r5
   24ac8:	mov	r1, r8
   24acc:	lsl	r2, r4, #1
   24ad0:	bl	de0 <memcpy@plt>
   24ad4:	add	r0, r6, r7, lsl #1
   24ad8:	ldr	r1, [sp, #20]
   24adc:	lsl	r2, r4, #4
   24ae0:	bic	r0, r0, #15
   24ae4:	add	r6, r5, r0
   24ae8:	mov	r0, r6
   24aec:	bl	de0 <memcpy@plt>
   24af0:	sub	r0, fp, #432	; 0x1b0
   24af4:	cmp	r8, r0
   24af8:	beq	24b04 <sfbpf_parse+0x108>
   24afc:	mov	r0, r8
   24b00:	bl	dbc <free@plt>
   24b04:	add	r0, r5, r7, lsl #1
   24b08:	add	r8, r5, r9, lsl #1
   24b0c:	sub	r0, r0, #2
   24b10:	cmp	r0, r8
   24b14:	bls	2638c <sfbpf_parse+0x1990>
   24b18:	add	r9, r6, r9, lsl #4
   24b1c:	str	r6, [sp, #20]
   24b20:	mov	ip, r7
   24b24:	mov	r4, r5
   24b28:	mov	r6, #15
   24b2c:	cmp	sl, #3
   24b30:	beq	26370 <sfbpf_parse+0x1974>
   24b34:	ldr	r0, [pc, #4088]	; 25b34 <sfbpf_parse+0x1138>
   24b38:	str	r4, [sp, #24]
   24b3c:	add	r0, pc, r0
   24b40:	add	r0, r0, sl, lsl #1
   24b44:	ldrsh	r5, [r0]
   24b48:	cmn	r5, #198	; 0xc6
   24b4c:	beq	24c28 <sfbpf_parse+0x22c>
   24b50:	ldr	r0, [pc, #4092]	; 25b54 <sfbpf_parse+0x1158>
   24b54:	ldr	r0, [pc, r0]
   24b58:	cmn	r0, #2
   24b5c:	bne	24b78 <sfbpf_parse+0x17c>
   24b60:	mov	r7, ip
   24b64:	bl	265d4 <sfbpf_lex>
   24b68:	ldr	r1, [pc, #4072]	; 25b58 <sfbpf_parse+0x115c>
   24b6c:	mov	ip, r7
   24b70:	add	r1, pc, r1
   24b74:	str	r0, [r1]
   24b78:	cmp	r0, #0
   24b7c:	ble	24bb0 <sfbpf_parse+0x1b4>
   24b80:	lsr	r2, r0, #1
   24b84:	mov	r1, #2
   24b88:	cmp	r2, #182	; 0xb6
   24b8c:	bhi	24b9c <sfbpf_parse+0x1a0>
   24b90:	ldr	r1, [pc, #4088]	; 25b90 <sfbpf_parse+0x1194>
   24b94:	add	r1, pc, r1
   24b98:	ldrb	r1, [r1, r0]
   24b9c:	add	r0, r1, r5
   24ba0:	movw	r2, #669	; 0x29d
   24ba4:	cmp	r0, r2
   24ba8:	bls	24bd0 <sfbpf_parse+0x1d4>
   24bac:	b	24c28 <sfbpf_parse+0x22c>
   24bb0:	ldr	r0, [pc, #4060]	; 25b94 <sfbpf_parse+0x1198>
   24bb4:	mov	r1, #0
   24bb8:	add	r0, pc, r0
   24bbc:	str	r1, [r0]
   24bc0:	add	r0, r1, r5
   24bc4:	movw	r2, #669	; 0x29d
   24bc8:	cmp	r0, r2
   24bcc:	bhi	24c28 <sfbpf_parse+0x22c>
   24bd0:	ldr	r2, [pc, #4092]	; 25bd4 <sfbpf_parse+0x11d8>
   24bd4:	add	r2, pc, r2
   24bd8:	add	r2, r2, r0, lsl #1
   24bdc:	ldrsh	r2, [r2]
   24be0:	cmp	r1, r2
   24be4:	bne	24c28 <sfbpf_parse+0x22c>
   24be8:	ldr	r1, [pc, #4084]	; 25be4 <sfbpf_parse+0x11e8>
   24bec:	add	r1, pc, r1
   24bf0:	add	r0, r1, r0, lsl #1
   24bf4:	ldrsh	sl, [r0]
   24bf8:	cmp	sl, #0
   24bfc:	ble	24fbc <sfbpf_parse+0x5c0>
   24c00:	ldr	r0, [pc, #4088]	; 25c00 <sfbpf_parse+0x1204>
   24c04:	add	r9, r9, #16
   24c08:	mvn	r1, #1
   24c0c:	add	r0, pc, r0
   24c10:	vld1.32	{d16-d17}, [r0]
   24c14:	ldr	r0, [pc, #4072]	; 25c04 <sfbpf_parse+0x1208>
   24c18:	add	r0, pc, r0
   24c1c:	str	r1, [r0]
   24c20:	vst1.32	{d16-d17}, [r9]
   24c24:	b	24a60 <sfbpf_parse+0x64>
   24c28:	ldr	r0, [pc, #4084]	; 25c24 <sfbpf_parse+0x1228>
   24c2c:	add	r0, pc, r0
   24c30:	ldrb	r7, [r0, sl]
   24c34:	cmp	r7, #0
   24c38:	beq	263bc <sfbpf_parse+0x19c0>
   24c3c:	ldr	r0, [pc, #4068]	; 25c28 <sfbpf_parse+0x122c>
   24c40:	mov	r1, r9
   24c44:	add	r0, pc, r0
   24c48:	ldrb	r2, [r0, r7]
   24c4c:	rsb	r0, r2, #1
   24c50:	ldr	r6, [r1, r0, lsl #4]!
   24c54:	sub	r0, r7, #2
   24c58:	cmp	r0, #200	; 0xc8
   24c5c:	ldmib	r1, {r3, lr}
   24c60:	ldr	r1, [r1, #12]
   24c64:	lsr	r5, r6, #24
   24c68:	lsr	r4, r6, #16
   24c6c:	lsr	sl, r6, #8
   24c70:	str	r1, [sp, #28]
   24c74:	bhi	260a4 <sfbpf_parse+0x16a8>
   24c78:	add	r1, pc, #4
   24c7c:	ldr	r0, [r1, r0, lsl #2]
   24c80:	add	pc, r1, r0
   24c84:	.word	0x00001228
   24c88:	.word	0x00001420
   24c8c:	.word	0x00001070
   24c90:	.word	0x00001420
   24c94:	.word	0x00000358
   24c98:	.word	0x00000358
   24c9c:	.word	0x00000340
   24ca0:	.word	0x00000340
   24ca4:	.word	0x00000324
   24ca8:	.word	0x00000324
   24cac:	.word	0x00001420
   24cb0:	.word	0x000003a8
   24cb4:	.word	0x00000324
   24cb8:	.word	0x00000678
   24cbc:	.word	0x000004a8
   24cc0:	.word	0x000005b4
   24cc4:	.word	0x000004d8
   24cc8:	.word	0x00000460
   24ccc:	.word	0x000013d8
   24cd0:	.word	0x00001374
   24cd4:	.word	0x00001398
   24cd8:	.word	0x000003d0
   24cdc:	.word	0x00000324
   24ce0:	.word	0x00000324
   24ce4:	.word	0x00001420
   24ce8:	.word	0x00000358
   24cec:	.word	0x00000340
   24cf0:	.word	0x000003a8
   24cf4:	.word	0x00001420
   24cf8:	.word	0x00001420
   24cfc:	.word	0x000003d0
   24d00:	.word	0x00000540
   24d04:	.word	0x00000568
   24d08:	.word	0x0000040c
   24d0c:	.word	0x00000578
   24d10:	.word	0x000005e0
   24d14:	.word	0x0000040c
   24d18:	.word	0x000003e8
   24d1c:	.word	0x00000e38
   24d20:	.word	0x00000614
   24d24:	.word	0x000006ec
   24d28:	.word	0x00000e40
   24d2c:	.word	0x00000478
   24d30:	.word	0x000007ac
   24d34:	.word	0x00000480
   24d38:	.word	0x000003fc
   24d3c:	.word	0x00001044
   24d40:	.word	0x000003fc
   24d44:	.word	0x00001420
   24d48:	.word	0x00000720
   24d4c:	.word	0x0000039c
   24d50:	.word	0x00000370
   24d54:	.word	0x00000390
   24d58:	.word	0x00000390
   24d5c:	.word	0x00000384
   24d60:	.word	0x00000384
   24d64:	.word	0x000007d8
   24d68:	.word	0x00000910
   24d6c:	.word	0x00000444
   24d70:	.word	0x00001084
   24d74:	.word	0x0000039c
   24d78:	.word	0x00000370
   24d7c:	.word	0x00000390
   24d80:	.word	0x00000444
   24d84:	.word	0x00000384
   24d88:	.word	0x0000039c
   24d8c:	.word	0x00000370
   24d90:	.word	0x00000e78
   24d94:	.word	0x00001188
   24d98:	.word	0x00001360
   24d9c:	.word	0x000004c0
   24da0:	.word	0x000008e8
   24da4:	.word	0x00000590
   24da8:	.word	0x00000f54
   24dac:	.word	0x00001090
   24db0:	.word	0x000007f4
   24db4:	.word	0x000010d8
   24db8:	.word	0x00000f64
   24dbc:	.word	0x000006a8
   24dc0:	.word	0x00000708
   24dc4:	.word	0x00000f70
   24dc8:	.word	0x00001160
   24dcc:	.word	0x0000049c
   24dd0:	.word	0x000004cc
   24dd4:	.word	0x00000714
   24dd8:	.word	0x00000728
   24ddc:	.word	0x0000055c
   24de0:	.word	0x0000059c
   24de4:	.word	0x00001194
   24de8:	.word	0x000011d4
   24dec:	.word	0x00000660
   24df0:	.word	0x00001254
   24df4:	.word	0x000012ac
   24df8:	.word	0x0000134c
   24dfc:	.word	0x00000e84
   24e00:	.word	0x00001340
   24e04:	.word	0x000005a8
   24e08:	.word	0x000012a0
   24e0c:	.word	0x00000ebc
   24e10:	.word	0x00000608
   24e14:	.word	0x00000e90
   24e18:	.word	0x00000550
   24e1c:	.word	0x000012b8
   24e20:	.word	0x000012c4
   24e24:	.word	0x00000630
   24e28:	.word	0x000011a0
   24e2c:	.word	0x00000f84
   24e30:	.word	0x00000fa8
   24e34:	.word	0x000012fc
   24e38:	.word	0x00001304
   24e3c:	.word	0x00000800
   24e40:	.word	0x00000808
   24e44:	.word	0x000006b4
   24e48:	.word	0x00000588
   24e4c:	.word	0x000011bc
   24e50:	.word	0x000005f0
   24e54:	.word	0x0000037c
   24e58:	.word	0x0000037c
   24e5c:	.word	0x0000116c
   24e60:	.word	0x00001120
   24e64:	.word	0x000006d0
   24e68:	.word	0x000012e0
   24e6c:	.word	0x00000748
   24e70:	.word	0x00001260
   24e74:	.word	0x000007c8
   24e78:	.word	0x0000066c
   24e7c:	.word	0x000009c4
   24e80:	.word	0x00000824
   24e84:	.word	0x00001420
   24e88:	.word	0x0000091c
   24e8c:	.word	0x00001420
   24e90:	.word	0x000009e4
   24e94:	.word	0x00000a34
   24e98:	.word	0x00001420
   24e9c:	.word	0x00000840
   24ea0:	.word	0x0000037c
   24ea4:	.word	0x00001730
   24ea8:	.word	0x00001734
   24eac:	.word	0x00000458
   24eb0:	.word	0x00000450
   24eb4:	.word	0x00000404
   24eb8:	.word	0x00000458
   24ebc:	.word	0x00000450
   24ec0:	.word	0x00000404
   24ec4:	.word	0x00000764
   24ec8:	.word	0x00001420
   24ecc:	.word	0x000011e0
   24ed0:	.word	0x0000127c
   24ed4:	.word	0x0000064c
   24ed8:	.word	0x00000e9c
   24edc:	.word	0x000009b0
   24ee0:	.word	0x00000780
   24ee4:	.word	0x000011f4
   24ee8:	.word	0x000010c4
   24eec:	.word	0x000008d4
   24ef0:	.word	0x00000734
   24ef4:	.word	0x00001104
   24ef8:	.word	0x00000434
   24efc:	.word	0x000010e4
   24f00:	.word	0x00001144
   24f04:	.word	0x00000794
   24f08:	.word	0x0000079c
   24f0c:	.word	0x000007a4
   24f10:	.word	0x000007e4
   24f14:	.word	0x00001420
   24f18:	.word	0x00000434
   24f1c:	.word	0x000008f4
   24f20:	.word	0x00000fcc
   24f24:	.word	0x0000042c
   24f28:	.word	0x0000041c
   24f2c:	.word	0x000007ec
   24f30:	.word	0x00000424
   24f34:	.word	0x00000ec8
   24f38:	.word	0x0000114c
   24f3c:	.word	0x000010fc
   24f40:	.word	0x0000109c
   24f44:	.word	0x000010a4
   24f48:	.word	0x0000113c
   24f4c:	.word	0x000010ac
   24f50:	.word	0x00000fd4
   24f54:	.word	0x00001420
   24f58:	.word	0x000008fc
   24f5c:	.word	0x00000f14
   24f60:	.word	0x0000043c
   24f64:	.word	0x00000ed8
   24f68:	.word	0x00001420
   24f6c:	.word	0x00000340
   24f70:	.word	0x0000042c
   24f74:	.word	0x0000041c
   24f78:	.word	0x00000424
   24f7c:	.word	0x00000eb4
   24f80:	.word	0x000010b4
   24f84:	.word	0x00000f04
   24f88:	.word	0x000010bc
   24f8c:	.word	0x00001420
   24f90:	.word	0x00000f3c
   24f94:	.word	0x00000fdc
   24f98:	.word	0x0000043c
   24f9c:	.word	0x00000ff8
   24fa0:	.word	0x00001420
   24fa4:	.word	0x00000340
   24fa8:	ldr	r6, [r9, #-16]
   24fac:	ldr	r3, [r9, #-12]
   24fb0:	ldr	lr, [r9, #-8]
   24fb4:	ldr	r0, [r9, #-4]
   24fb8:	b	26094 <sfbpf_parse+0x1698>
   24fbc:	rsb	r7, sl, #0
   24fc0:	b	24c3c <sfbpf_parse+0x240>
   24fc4:	ldr	r0, [r9, #-20]	; 0xffffffec
   24fc8:	ldr	r1, [r9, #12]
   24fcc:	mov	r4, ip
   24fd0:	mov	r5, r2
   24fd4:	bl	535c <sf_gen_or>
   24fd8:	b	25064 <sfbpf_parse+0x668>
   24fdc:	ldr	r0, [r9, #-20]	; 0xffffffec
   24fe0:	ldr	r1, [r9, #12]
   24fe4:	mov	r4, ip
   24fe8:	mov	r5, r2
   24fec:	bl	527c <sf_gen_and>
   24ff0:	b	25064 <sfbpf_parse+0x668>
   24ff4:	mov	sl, #0
   24ff8:	mov	r6, #2
   24ffc:	b	25dd8 <sfbpf_parse+0x13dc>
   25000:	ldr	r6, [r9]
   25004:	b	26098 <sfbpf_parse+0x169c>
   25008:	mov	sl, #0
   2500c:	mov	r6, #4
   25010:	b	25dd8 <sfbpf_parse+0x13dc>
   25014:	mov	sl, #0
   25018:	mov	r6, #3
   2501c:	b	25dd8 <sfbpf_parse+0x13dc>
   25020:	mov	sl, #0
   25024:	mov	r6, #1
   25028:	b	25dd8 <sfbpf_parse+0x13dc>
   2502c:	ldr	r6, [r9, #-16]
   25030:	ldr	r1, [r9]
   25034:	str	r2, [sp, #16]
   25038:	mov	r0, #0
   2503c:	mov	r4, ip
   25040:	mov	r5, r3
   25044:	mov	sl, lr
   25048:	mov	r2, r6
   2504c:	bl	11690 <sf_gen_ncode>
   25050:	b	26084 <sfbpf_parse+0x1688>
   25054:	ldr	r0, [r9, #12]
   25058:	mov	r4, ip
   2505c:	mov	r5, r2
   25060:	bl	5414 <sf_gen_not>
   25064:	mov	r2, r5
   25068:	mov	ip, r4
   2506c:	ldr	r6, [r9]
   25070:	ldr	r3, [r9, #4]
   25074:	ldr	lr, [r9, #8]
   25078:	ldr	r0, [r9, #12]
   2507c:	b	26094 <sfbpf_parse+0x1698>
   25080:	ldr	r0, [r9, #12]
   25084:	b	25cf0 <sfbpf_parse+0x12f4>
   25088:	mov	r6, #16
   2508c:	b	25dd4 <sfbpf_parse+0x13d8>
   25090:	ldrb	r6, [r9]
   25094:	ldr	sl, [r9, #-16]
   25098:	mov	r4, #0
   2509c:	b	260a4 <sfbpf_parse+0x16a8>
   250a0:	mov	r6, #23
   250a4:	b	25dd4 <sfbpf_parse+0x13d8>
   250a8:	mov	r6, #24
   250ac:	b	25dd4 <sfbpf_parse+0x13d8>
   250b0:	mov	r6, #22
   250b4:	b	25dd4 <sfbpf_parse+0x13d8>
   250b8:	ldr	r6, [r9, #-16]
   250bc:	b	26098 <sfbpf_parse+0x169c>
   250c0:	ldr	r0, [r9, #-4]
   250c4:	b	25cf0 <sfbpf_parse+0x12f4>
   250c8:	mov	sl, #0
   250cc:	mov	r6, #7
   250d0:	b	25dd8 <sfbpf_parse+0x13dc>
   250d4:	mov	r6, #48	; 0x30
   250d8:	b	25dd4 <sfbpf_parse+0x13d8>
   250dc:	mov	r6, #32
   250e0:	b	25dd4 <sfbpf_parse+0x13d8>
   250e4:	str	r2, [sp, #16]
   250e8:	ldr	r6, [r9, #-48]	; 0xffffffd0
   250ec:	ldr	r0, [r9, #-32]	; 0xffffffe0
   250f0:	ldr	r2, [r9]
   250f4:	mov	r1, #0
   250f8:	b	26070 <sfbpf_parse+0x1674>
   250fc:	ldr	r0, [r9]
   25100:	b	25cf0 <sfbpf_parse+0x12f4>
   25104:	ldr	r0, [r9]
   25108:	mov	sl, ip
   2510c:	mov	r5, r2
   25110:	mov	r6, r3
   25114:	mov	r4, lr
   25118:	bl	19a24 <sf_gen_atmmulti_abbrev>
   2511c:	b	25ce0 <sfbpf_parse+0x12e4>
   25120:	mov	r4, #0
   25124:	mov	r6, #16
   25128:	b	25fec <sfbpf_parse+0x15f0>
   2512c:	str	r2, [sp, #16]
   25130:	ldr	r6, [r9, #-48]	; 0xffffffd0
   25134:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25138:	ldr	r2, [r9]
   2513c:	mov	r1, #0
   25140:	b	2524c <sfbpf_parse+0x850>
   25144:	mov	r4, #0
   25148:	mov	r6, #6
   2514c:	b	25fec <sfbpf_parse+0x15f0>
   25150:	mov	r4, #0
   25154:	mov	r6, #15
   25158:	b	25fec <sfbpf_parse+0x15f0>
   2515c:	ldr	r6, [r9, #-16]
   25160:	mvn	r0, #2
   25164:	str	lr, [sp, #4]
   25168:	str	r3, [sp, #8]
   2516c:	str	r2, [sp, #16]
   25170:	str	ip, [sp, #12]
   25174:	uxtab	r0, r0, r6
   25178:	cmp	r0, #4
   2517c:	bhi	251a0 <sfbpf_parse+0x7a4>
   25180:	add	r1, pc, #4
   25184:	ldr	r0, [r1, r0, lsl #2]
   25188:	add	pc, r1, r0
   2518c:	.word	0x00001260
   25190:	.word	0x00000014
   25194:	.word	0x0000126c
   25198:	.word	0x00001278
   2519c:	.word	0x00001284
   251a0:	ldr	r0, [r9]
   251a4:	mov	r1, #0
   251a8:	mov	r2, r6
   251ac:	bl	11690 <sf_gen_ncode>
   251b0:	str	r0, [sp, #28]
   251b4:	lsr	sl, r6, #8
   251b8:	lsr	r4, r6, #16
   251bc:	lsr	r5, r6, #24
   251c0:	b	262a0 <sfbpf_parse+0x18a4>
   251c4:	ldrb	r6, [r9]
   251c8:	ldr	sl, [r9, #-32]	; 0xffffffe0
   251cc:	ldr	r4, [r9, #-16]
   251d0:	b	260a4 <sfbpf_parse+0x16a8>
   251d4:	mov	r5, #0
   251d8:	mov	r6, #30
   251dc:	b	25fd8 <sfbpf_parse+0x15dc>
   251e0:	mov	r5, #0
   251e4:	mov	r6, #19
   251e8:	b	25fd8 <sfbpf_parse+0x15dc>
   251ec:	ldr	sl, [r9, #-16]
   251f0:	ldr	r4, [r9]
   251f4:	mov	r6, #0
   251f8:	b	260a4 <sfbpf_parse+0x16a8>
   251fc:	ldr	sl, [r9, #-16]
   25200:	mov	r4, #0
   25204:	mov	r6, #5
   25208:	b	260a4 <sfbpf_parse+0x16a8>
   2520c:	mvn	r0, #0
   25210:	b	2533c <sfbpf_parse+0x940>
   25214:	mov	r4, #0
   25218:	mov	r6, #8
   2521c:	b	25fec <sfbpf_parse+0x15f0>
   25220:	mov	r5, #0
   25224:	mov	r6, #20
   25228:	b	25fd8 <sfbpf_parse+0x15dc>
   2522c:	mov	r5, #0
   25230:	mov	r6, #38	; 0x26
   25234:	b	25fd8 <sfbpf_parse+0x15dc>
   25238:	ldr	r6, [r9, #-48]	; 0xffffffd0
   2523c:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25240:	ldr	r1, [r9]
   25244:	str	r2, [sp, #16]
   25248:	mov	r2, #0
   2524c:	mov	r5, r3
   25250:	mov	r3, r6
   25254:	mov	r4, ip
   25258:	mov	sl, lr
   2525c:	bl	1157c <sf_gen_mcode>
   25260:	b	26084 <sfbpf_parse+0x1688>
   25264:	ldr	sl, [r9, #-16]
   25268:	mov	r4, #0
   2526c:	mov	r6, #6
   25270:	b	260a4 <sfbpf_parse+0x16a8>
   25274:	mov	sl, ip
   25278:	mov	r5, r2
   2527c:	mov	r6, r3
   25280:	mov	r4, lr
   25284:	bl	17e8c <sf_gen_pppoes>
   25288:	b	25fa0 <sfbpf_parse+0x15a4>
   2528c:	mov	r5, #0
   25290:	mov	r6, #28
   25294:	b	25fd8 <sfbpf_parse+0x15dc>
   25298:	ldr	r0, [r9]
   2529c:	mov	sl, ip
   252a0:	mov	r5, r2
   252a4:	mov	r6, r3
   252a8:	mov	r4, lr
   252ac:	bl	5428 <sf_gen_proto_abbrev>
   252b0:	b	25ce0 <sfbpf_parse+0x12e4>
   252b4:	ldr	r0, [r9, #-16]
   252b8:	mov	sl, ip
   252bc:	mov	r5, r2
   252c0:	mov	r6, r3
   252c4:	mov	r4, lr
   252c8:	bl	157e0 <sf_gen_multicast>
   252cc:	b	25fa0 <sfbpf_parse+0x15a4>
   252d0:	mov	sl, r2
   252d4:	ldr	r1, [r9, #-32]	; 0xffffffe0
   252d8:	ldr	r2, [r9]
   252dc:	mov	r0, #0
   252e0:	b	25e88 <sfbpf_parse+0x148c>
   252e4:	mov	r5, #0
   252e8:	mov	r6, #26
   252ec:	b	25fd8 <sfbpf_parse+0x15dc>
   252f0:	ldr	r0, [r9]
   252f4:	mov	r1, #12
   252f8:	b	25650 <sfbpf_parse+0xc54>
   252fc:	ldr	r6, [r9, #-16]
   25300:	ldr	r0, [r9]
   25304:	str	ip, [sp, #12]
   25308:	str	r2, [sp, #16]
   2530c:	str	r3, [sp, #8]
   25310:	str	lr, [sp, #4]
   25314:	mov	r1, r6
   25318:	lsr	r5, r6, #24
   2531c:	lsr	r4, r6, #16
   25320:	lsr	sl, r6, #8
   25324:	bl	b094 <sf_gen_scode>
   25328:	b	25cb0 <sfbpf_parse+0x12b4>
   2532c:	mov	r4, #0
   25330:	mov	r6, #23
   25334:	b	25fec <sfbpf_parse+0x15f0>
   25338:	ldr	r0, [r9]
   2533c:	mov	sl, ip
   25340:	mov	r5, r2
   25344:	mov	r6, r3
   25348:	mov	r4, lr
   2534c:	bl	17a2c <sf_gen_mpls>
   25350:	b	25fa0 <sfbpf_parse+0x15a4>
   25354:	ldr	r0, [r9]
   25358:	mov	sl, ip
   2535c:	mov	r5, r2
   25360:	mov	r6, r3
   25364:	mov	r4, lr
   25368:	bl	1710c <sf_gen_pf_rnr>
   2536c:	b	25fa0 <sfbpf_parse+0x15a4>
   25370:	mov	sl, r2
   25374:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25378:	ldr	r0, [r9, #-16]
   2537c:	ldr	r2, [r9]
   25380:	mov	r6, r3
   25384:	mov	r3, #0
   25388:	b	25adc <sfbpf_parse+0x10e0>
   2538c:	mov	r4, #0
   25390:	mov	r6, #12
   25394:	b	25fec <sfbpf_parse+0x15f0>
   25398:	mov	r4, #0
   2539c:	mov	r6, #17
   253a0:	b	25fec <sfbpf_parse+0x15f0>
   253a4:	mov	r6, #0
   253a8:	b	25dd4 <sfbpf_parse+0x13d8>
   253ac:	mov	r5, #0
   253b0:	mov	r6, #18
   253b4:	b	25fd8 <sfbpf_parse+0x15dc>
   253b8:	mov	sl, r2
   253bc:	ldr	r1, [r9, #-32]	; 0xffffffe0
   253c0:	ldr	r2, [r9]
   253c4:	mov	r0, #112	; 0x70
   253c8:	b	25e88 <sfbpf_parse+0x148c>
   253cc:	ldr	r0, [r9]
   253d0:	mov	sl, ip
   253d4:	mov	r5, r2
   253d8:	mov	r6, r3
   253dc:	mov	r4, lr
   253e0:	bl	1713c <sf_gen_pf_reason>
   253e4:	b	25fa0 <sfbpf_parse+0x15a4>
   253e8:	ldr	r0, [r9]
   253ec:	mov	sl, ip
   253f0:	mov	r5, r2
   253f4:	mov	r6, r3
   253f8:	mov	r4, lr
   253fc:	bl	13fa0 <sf_gen_loadi>
   25400:	b	25fa0 <sfbpf_parse+0x15a4>
   25404:	mov	sl, r2
   25408:	ldr	r1, [r9, #-32]	; 0xffffffe0
   2540c:	ldr	r2, [r9]
   25410:	mov	r0, #48	; 0x30
   25414:	b	25e88 <sfbpf_parse+0x148c>
   25418:	mov	r6, #124	; 0x7c
   2541c:	b	25dd4 <sfbpf_parse+0x13d8>
   25420:	mov	r6, #60	; 0x3c
   25424:	b	25dd4 <sfbpf_parse+0x13d8>
   25428:	mov	r6, #62	; 0x3e
   2542c:	b	25dd4 <sfbpf_parse+0x13d8>
   25430:	ldr	r0, [r9]
   25434:	mov	sl, ip
   25438:	mov	r5, r2
   2543c:	mov	r6, r3
   25440:	mov	r4, lr
   25444:	bl	1823c <sf_gen_atmtype_abbrev>
   25448:	b	25ce0 <sfbpf_parse+0x12e4>
   2544c:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25450:	ldr	r1, [r9]
   25454:	orr	r0, r1, r0
   25458:	b	2564c <sfbpf_parse+0xc50>
   2545c:	mov	sl, #0
   25460:	mov	r6, #5
   25464:	b	25dd8 <sfbpf_parse+0x13dc>
   25468:	mov	r6, #61	; 0x3d
   2546c:	b	25dd4 <sfbpf_parse+0x13d8>
   25470:	mov	r6, #25
   25474:	b	25dd4 <sfbpf_parse+0x13d8>
   25478:	mov	r4, #0
   2547c:	mov	r6, #21
   25480:	b	25fec <sfbpf_parse+0x15f0>
   25484:	ldr	r0, [r9]
   25488:	b	25490 <sfbpf_parse+0xa94>
   2548c:	mvn	r0, #0
   25490:	mov	sl, ip
   25494:	mov	r5, r2
   25498:	mov	r6, r3
   2549c:	mov	r4, lr
   254a0:	bl	17760 <sf_gen_vlan>
   254a4:	b	25fa0 <sfbpf_parse+0x15a4>
   254a8:	ldr	r0, [r9]
   254ac:	mov	sl, ip
   254b0:	mov	r5, r2
   254b4:	mov	r6, r3
   254b8:	mov	r4, lr
   254bc:	bl	17330 <sf_gen_p80211_fcdir>
   254c0:	b	25fa0 <sfbpf_parse+0x15a4>
   254c4:	str	lr, [sp, #4]
   254c8:	str	r3, [sp, #8]
   254cc:	str	r2, [sp, #16]
   254d0:	str	ip, [sp, #12]
   254d4:	ldr	r0, [r9]
   254d8:	ldr	r1, [pc, #3996]	; 2647c <sfbpf_parse+0x1a80>
   254dc:	add	r1, pc, r1
   254e0:	bl	244f4 <sfbpf_strcasecmp>
   254e4:	mov	sl, #0
   254e8:	cmp	r0, #0
   254ec:	beq	26130 <sfbpf_parse+0x1734>
   254f0:	ldr	r0, [r9]
   254f4:	ldr	r1, [pc, #3972]	; 26480 <sfbpf_parse+0x1a84>
   254f8:	add	r1, pc, r1
   254fc:	bl	244f4 <sfbpf_strcasecmp>
   25500:	cmp	r0, #0
   25504:	beq	261a4 <sfbpf_parse+0x17a8>
   25508:	ldr	r0, [r9]
   2550c:	ldr	r1, [pc, #3952]	; 26484 <sfbpf_parse+0x1a88>
   25510:	add	r1, pc, r1
   25514:	bl	244f4 <sfbpf_strcasecmp>
   25518:	cmp	r0, #0
   2551c:	beq	261bc <sfbpf_parse+0x17c0>
   25520:	ldr	r0, [r9]
   25524:	ldr	r1, [pc, #3932]	; 26488 <sfbpf_parse+0x1a8c>
   25528:	add	r1, pc, r1
   2552c:	bl	244f4 <sfbpf_strcasecmp>
   25530:	ldr	ip, [sp, #12]
   25534:	ldr	r2, [sp, #16]
   25538:	ldr	r3, [sp, #8]
   2553c:	ldr	lr, [sp, #4]
   25540:	mov	r6, #3
   25544:	cmp	r0, #0
   25548:	mov	r4, #0
   2554c:	mov	r5, #0
   25550:	beq	260a4 <sfbpf_parse+0x16a8>
   25554:	b	2641c <sfbpf_parse+0x1a20>
   25558:	mov	sl, r2
   2555c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25560:	ldr	r2, [r9]
   25564:	mov	r0, #96	; 0x60
   25568:	b	25e88 <sfbpf_parse+0x148c>
   2556c:	mov	r4, #0
   25570:	mov	r6, #7
   25574:	b	25fec <sfbpf_parse+0x15f0>
   25578:	mov	r6, #30
   2557c:	b	25dd4 <sfbpf_parse+0x13d8>
   25580:	str	r2, [sp, #16]
   25584:	ldr	r0, [r9, #-28]	; 0xffffffe4
   25588:	ldr	r2, [r9, #-16]
   2558c:	ldr	r1, [r9]
   25590:	b	25b7c <sfbpf_parse+0x1180>
   25594:	mov	sl, #0
   25598:	mov	r6, #6
   2559c:	b	25dd8 <sfbpf_parse+0x13dc>
   255a0:	str	lr, [sp, #4]
   255a4:	str	r3, [sp, #8]
   255a8:	str	r2, [sp, #16]
   255ac:	str	ip, [sp, #12]
   255b0:	ldr	r6, [r9]
   255b4:	ldr	r0, [pc, #3740]	; 26458 <sfbpf_parse+0x1a5c>
   255b8:	mov	r1, r6
   255bc:	add	r0, pc, r0
   255c0:	bl	244f4 <sfbpf_strcasecmp>
   255c4:	cmp	r0, #0
   255c8:	beq	26138 <sfbpf_parse+0x173c>
   255cc:	ldr	r0, [pc, #3720]	; 2645c <sfbpf_parse+0x1a60>
   255d0:	mov	r1, r6
   255d4:	add	r0, pc, r0
   255d8:	bl	244f4 <sfbpf_strcasecmp>
   255dc:	cmp	r0, #0
   255e0:	beq	261ac <sfbpf_parse+0x17b0>
   255e4:	ldr	r0, [pc, #3800]	; 264c4 <sfbpf_parse+0x1ac8>
   255e8:	mov	r1, r6
   255ec:	add	r0, pc, r0
   255f0:	bl	244f4 <sfbpf_strcasecmp>
   255f4:	cmp	r0, #0
   255f8:	beq	261cc <sfbpf_parse+0x17d0>
   255fc:	ldr	r0, [pc, #3780]	; 264c8 <sfbpf_parse+0x1acc>
   25600:	mov	r1, r6
   25604:	add	r0, pc, r0
   25608:	bl	244f4 <sfbpf_strcasecmp>
   2560c:	cmp	r0, #0
   25610:	beq	261dc <sfbpf_parse+0x17e0>
   25614:	ldr	r0, [pc, #3760]	; 264cc <sfbpf_parse+0x1ad0>
   25618:	mov	r1, r6
   2561c:	add	r0, pc, r0
   25620:	bl	244f4 <sfbpf_strcasecmp>
   25624:	mov	r1, #4
   25628:	cmp	r0, #0
   2562c:	beq	261e0 <sfbpf_parse+0x17e4>
   25630:	b	26434 <sfbpf_parse+0x1a38>
   25634:	mov	sl, r2
   25638:	ldr	r1, [r9, #-32]	; 0xffffffe0
   2563c:	ldr	r2, [r9]
   25640:	mov	r0, #32
   25644:	b	25e88 <sfbpf_parse+0x148c>
   25648:	ldr	r0, [r9]
   2564c:	mov	r1, #252	; 0xfc
   25650:	mov	sl, ip
   25654:	mov	r5, r2
   25658:	mov	r6, r3
   2565c:	mov	r4, lr
   25660:	bl	1716c <sf_gen_p80211_type>
   25664:	b	25fa0 <sfbpf_parse+0x15a4>
   25668:	ldr	r0, [r9, #-32]	; 0xffffffe0
   2566c:	str	ip, [sp, #12]
   25670:	str	r2, [sp, #16]
   25674:	str	r3, [sp, #8]
   25678:	str	lr, [sp, #4]
   2567c:	cmp	r0, #0
   25680:	beq	26140 <sfbpf_parse+0x1744>
   25684:	cmp	r0, #4
   25688:	beq	26158 <sfbpf_parse+0x175c>
   2568c:	cmp	r0, #8
   25690:	bne	26428 <sfbpf_parse+0x1a2c>
   25694:	ldr	r1, [pc, #3496]	; 26444 <sfbpf_parse+0x1a48>
   25698:	add	r1, pc, r1
   2569c:	ldr	r0, [r1, #4]
   256a0:	cmp	r0, #0
   256a4:	bne	2616c <sfbpf_parse+0x1770>
   256a8:	b	263e0 <sfbpf_parse+0x19e4>
   256ac:	.word	0x00021f90
   256b0:	.word	0x00021f7c
   256b4:	.word	0x00006e4c
   256b8:	str	lr, [sp, #4]
   256bc:	str	r3, [sp, #8]
   256c0:	str	r2, [sp, #16]
   256c4:	str	ip, [sp, #12]
   256c8:	ldr	r6, [r9]
   256cc:	ldr	r0, [pc, #3480]	; 2646c <sfbpf_parse+0x1a70>
   256d0:	mov	r1, r6
   256d4:	add	r0, pc, r0
   256d8:	bl	244f4 <sfbpf_strcasecmp>
   256dc:	cmp	r0, #0
   256e0:	mov	r4, #0
   256e4:	mov	r0, #0
   256e8:	beq	26274 <sfbpf_parse+0x1878>
   256ec:	ldr	r0, [pc, #3452]	; 26470 <sfbpf_parse+0x1a74>
   256f0:	mov	r1, r6
   256f4:	add	r0, pc, r0
   256f8:	bl	244f4 <sfbpf_strcasecmp>
   256fc:	cmp	r0, #0
   25700:	beq	261b4 <sfbpf_parse+0x17b8>
   25704:	ldr	r0, [pc, #3528]	; 264d4 <sfbpf_parse+0x1ad8>
   25708:	mov	r1, r6
   2570c:	add	r0, pc, r0
   25710:	bl	244f4 <sfbpf_strcasecmp>
   25714:	cmp	r0, #0
   25718:	beq	261d4 <sfbpf_parse+0x17d8>
   2571c:	ldr	r0, [pc, #3508]	; 264d8 <sfbpf_parse+0x1adc>
   25720:	mov	r1, r6
   25724:	add	r0, pc, r0
   25728:	bl	244f4 <sfbpf_strcasecmp>
   2572c:	cmp	r0, #0
   25730:	beq	261f0 <sfbpf_parse+0x17f4>
   25734:	ldr	r0, [pc, #3488]	; 264dc <sfbpf_parse+0x1ae0>
   25738:	mov	r1, r6
   2573c:	add	r0, pc, r0
   25740:	bl	244f4 <sfbpf_strcasecmp>
   25744:	cmp	r0, #0
   25748:	beq	261f8 <sfbpf_parse+0x17fc>
   2574c:	ldr	r0, [pc, #3468]	; 264e0 <sfbpf_parse+0x1ae4>
   25750:	mov	r1, r6
   25754:	add	r0, pc, r0
   25758:	bl	244f4 <sfbpf_strcasecmp>
   2575c:	cmp	r0, #0
   25760:	beq	26200 <sfbpf_parse+0x1804>
   25764:	ldr	r0, [pc, #3448]	; 264e4 <sfbpf_parse+0x1ae8>
   25768:	mov	r1, r6
   2576c:	add	r0, pc, r0
   25770:	bl	244f4 <sfbpf_strcasecmp>
   25774:	cmp	r0, #0
   25778:	beq	26208 <sfbpf_parse+0x180c>
   2577c:	ldr	r0, [pc, #3428]	; 264e8 <sfbpf_parse+0x1aec>
   25780:	mov	r1, r6
   25784:	add	r0, pc, r0
   25788:	bl	244f4 <sfbpf_strcasecmp>
   2578c:	cmp	r0, #0
   25790:	beq	26210 <sfbpf_parse+0x1814>
   25794:	ldr	r0, [pc, #3408]	; 264ec <sfbpf_parse+0x1af0>
   25798:	mov	r1, r6
   2579c:	add	r0, pc, r0
   257a0:	bl	244f4 <sfbpf_strcasecmp>
   257a4:	cmp	r0, #0
   257a8:	beq	26218 <sfbpf_parse+0x181c>
   257ac:	ldr	r0, [pc, #3388]	; 264f0 <sfbpf_parse+0x1af4>
   257b0:	mov	r1, r6
   257b4:	add	r0, pc, r0
   257b8:	bl	244f4 <sfbpf_strcasecmp>
   257bc:	cmp	r0, #0
   257c0:	beq	26220 <sfbpf_parse+0x1824>
   257c4:	ldr	r0, [pc, #3368]	; 264f4 <sfbpf_parse+0x1af8>
   257c8:	mov	r1, r6
   257cc:	add	r0, pc, r0
   257d0:	bl	244f4 <sfbpf_strcasecmp>
   257d4:	cmp	r0, #0
   257d8:	beq	26228 <sfbpf_parse+0x182c>
   257dc:	ldr	r0, [pc, #3348]	; 264f8 <sfbpf_parse+0x1afc>
   257e0:	mov	r1, r6
   257e4:	add	r0, pc, r0
   257e8:	bl	244f4 <sfbpf_strcasecmp>
   257ec:	cmp	r0, #0
   257f0:	beq	26230 <sfbpf_parse+0x1834>
   257f4:	ldr	r0, [pc, #3328]	; 264fc <sfbpf_parse+0x1b00>
   257f8:	mov	r1, r6
   257fc:	add	r0, pc, r0
   25800:	bl	244f4 <sfbpf_strcasecmp>
   25804:	cmp	r0, #0
   25808:	beq	26238 <sfbpf_parse+0x183c>
   2580c:	ldr	r0, [pc, #3308]	; 26500 <sfbpf_parse+0x1b04>
   25810:	mov	r1, r6
   25814:	add	r0, pc, r0
   25818:	bl	244f4 <sfbpf_strcasecmp>
   2581c:	cmp	r0, #0
   25820:	beq	26240 <sfbpf_parse+0x1844>
   25824:	ldr	r0, [pc, #3288]	; 26504 <sfbpf_parse+0x1b08>
   25828:	mov	r1, r6
   2582c:	add	r0, pc, r0
   25830:	bl	244f4 <sfbpf_strcasecmp>
   25834:	cmp	r0, #0
   25838:	beq	26248 <sfbpf_parse+0x184c>
   2583c:	ldr	r0, [pc, #3268]	; 26508 <sfbpf_parse+0x1b0c>
   25840:	mov	r1, r6
   25844:	add	r0, pc, r0
   25848:	bl	244f4 <sfbpf_strcasecmp>
   2584c:	cmp	r0, #0
   25850:	beq	26250 <sfbpf_parse+0x1854>
   25854:	ldr	r0, [pc, #3248]	; 2650c <sfbpf_parse+0x1b10>
   25858:	mov	r1, r6
   2585c:	add	r0, pc, r0
   25860:	bl	244f4 <sfbpf_strcasecmp>
   25864:	cmp	r0, #0
   25868:	beq	26258 <sfbpf_parse+0x185c>
   2586c:	ldr	r0, [pc, #3228]	; 26510 <sfbpf_parse+0x1b14>
   25870:	mov	r1, r6
   25874:	add	r0, pc, r0
   25878:	bl	244f4 <sfbpf_strcasecmp>
   2587c:	cmp	r0, #0
   25880:	beq	26260 <sfbpf_parse+0x1864>
   25884:	ldr	r0, [pc, #3208]	; 26514 <sfbpf_parse+0x1b18>
   25888:	mov	r1, r6
   2588c:	add	r0, pc, r0
   25890:	bl	244f4 <sfbpf_strcasecmp>
   25894:	cmp	r0, #0
   25898:	beq	26268 <sfbpf_parse+0x186c>
   2589c:	ldr	r0, [pc, #3188]	; 26518 <sfbpf_parse+0x1b1c>
   258a0:	mov	r1, r6
   258a4:	add	r0, pc, r0
   258a8:	bl	244f4 <sfbpf_strcasecmp>
   258ac:	cmp	r0, #0
   258b0:	beq	26270 <sfbpf_parse+0x1874>
   258b4:	ldr	r6, [r9]
   258b8:	ldr	r0, [pc, #3164]	; 2651c <sfbpf_parse+0x1b20>
   258bc:	add	r0, pc, r0
   258c0:	mov	r1, r6
   258c4:	bl	244f4 <sfbpf_strcasecmp>
   258c8:	cmp	r0, #0
   258cc:	beq	262b4 <sfbpf_parse+0x18b8>
   258d0:	ldr	r0, [pc, #3032]	; 264b0 <sfbpf_parse+0x1ab4>
   258d4:	mov	r1, r6
   258d8:	add	r0, pc, r0
   258dc:	bl	244f4 <sfbpf_strcasecmp>
   258e0:	cmp	r0, #0
   258e4:	beq	262bc <sfbpf_parse+0x18c0>
   258e8:	ldr	r0, [pc, #3120]	; 26520 <sfbpf_parse+0x1b24>
   258ec:	mov	r1, r6
   258f0:	add	r0, pc, r0
   258f4:	bl	244f4 <sfbpf_strcasecmp>
   258f8:	cmp	r0, #0
   258fc:	beq	262c4 <sfbpf_parse+0x18c8>
   25900:	ldr	r0, [pc, #3100]	; 26524 <sfbpf_parse+0x1b28>
   25904:	mov	r1, r6
   25908:	add	r0, pc, r0
   2590c:	bl	244f4 <sfbpf_strcasecmp>
   25910:	cmp	r0, #0
   25914:	beq	262cc <sfbpf_parse+0x18d0>
   25918:	ldr	r0, [pc, #3080]	; 26528 <sfbpf_parse+0x1b2c>
   2591c:	mov	r1, r6
   25920:	add	r0, pc, r0
   25924:	bl	244f4 <sfbpf_strcasecmp>
   25928:	cmp	r0, #0
   2592c:	beq	262d4 <sfbpf_parse+0x18d8>
   25930:	ldr	r0, [pc, #3060]	; 2652c <sfbpf_parse+0x1b30>
   25934:	mov	r1, r6
   25938:	add	r0, pc, r0
   2593c:	bl	244f4 <sfbpf_strcasecmp>
   25940:	cmp	r0, #0
   25944:	beq	262dc <sfbpf_parse+0x18e0>
   25948:	ldr	r6, [r9]
   2594c:	ldr	r0, [pc, #3036]	; 26530 <sfbpf_parse+0x1b34>
   25950:	add	r0, pc, r0
   25954:	mov	r1, r6
   25958:	bl	244f4 <sfbpf_strcasecmp>
   2595c:	cmp	r0, #0
   25960:	beq	262f0 <sfbpf_parse+0x18f4>
   25964:	ldr	r0, [pc, #2892]	; 264b8 <sfbpf_parse+0x1abc>
   25968:	mov	r1, r6
   2596c:	add	r0, pc, r0
   25970:	bl	244f4 <sfbpf_strcasecmp>
   25974:	cmp	r0, #0
   25978:	beq	262f8 <sfbpf_parse+0x18fc>
   2597c:	ldr	r0, [pc, #2992]	; 26534 <sfbpf_parse+0x1b38>
   25980:	mov	r1, r6
   25984:	add	r0, pc, r0
   25988:	bl	244f4 <sfbpf_strcasecmp>
   2598c:	cmp	r0, #0
   25990:	beq	26300 <sfbpf_parse+0x1904>
   25994:	ldr	r0, [pc, #2972]	; 26538 <sfbpf_parse+0x1b3c>
   25998:	mov	r1, r6
   2599c:	add	r0, pc, r0
   259a0:	bl	244f4 <sfbpf_strcasecmp>
   259a4:	cmp	r0, #0
   259a8:	beq	26308 <sfbpf_parse+0x190c>
   259ac:	ldr	r0, [pc, #2952]	; 2653c <sfbpf_parse+0x1b40>
   259b0:	mov	r1, r6
   259b4:	add	r0, pc, r0
   259b8:	bl	244f4 <sfbpf_strcasecmp>
   259bc:	cmp	r0, #0
   259c0:	beq	26310 <sfbpf_parse+0x1914>
   259c4:	ldr	r0, [pc, #2932]	; 26540 <sfbpf_parse+0x1b44>
   259c8:	mov	r1, r6
   259cc:	add	r0, pc, r0
   259d0:	bl	244f4 <sfbpf_strcasecmp>
   259d4:	cmp	r0, #0
   259d8:	beq	26318 <sfbpf_parse+0x191c>
   259dc:	ldr	r0, [pc, #2912]	; 26544 <sfbpf_parse+0x1b48>
   259e0:	mov	r1, r6
   259e4:	add	r0, pc, r0
   259e8:	bl	244f4 <sfbpf_strcasecmp>
   259ec:	cmp	r0, #0
   259f0:	beq	26320 <sfbpf_parse+0x1924>
   259f4:	ldr	r0, [pc, #2892]	; 26548 <sfbpf_parse+0x1b4c>
   259f8:	mov	r1, r6
   259fc:	add	r0, pc, r0
   25a00:	bl	244f4 <sfbpf_strcasecmp>
   25a04:	cmp	r0, #0
   25a08:	beq	26328 <sfbpf_parse+0x192c>
   25a0c:	ldr	r0, [pc, #2872]	; 2654c <sfbpf_parse+0x1b50>
   25a10:	mov	r1, r6
   25a14:	add	r0, pc, r0
   25a18:	bl	244f4 <sfbpf_strcasecmp>
   25a1c:	cmp	r0, #0
   25a20:	beq	26330 <sfbpf_parse+0x1934>
   25a24:	ldr	r0, [pc, #2852]	; 26550 <sfbpf_parse+0x1b54>
   25a28:	mov	r1, r6
   25a2c:	add	r0, pc, r0
   25a30:	bl	244f4 <sfbpf_strcasecmp>
   25a34:	cmp	r0, #0
   25a38:	beq	26338 <sfbpf_parse+0x193c>
   25a3c:	ldr	r0, [pc, #2832]	; 26554 <sfbpf_parse+0x1b58>
   25a40:	mov	r1, r6
   25a44:	add	r0, pc, r0
   25a48:	bl	244f4 <sfbpf_strcasecmp>
   25a4c:	cmp	r0, #0
   25a50:	beq	26340 <sfbpf_parse+0x1944>
   25a54:	ldr	r0, [pc, #2812]	; 26558 <sfbpf_parse+0x1b5c>
   25a58:	mov	r1, r6
   25a5c:	add	r0, pc, r0
   25a60:	bl	244f4 <sfbpf_strcasecmp>
   25a64:	cmp	r0, #0
   25a68:	beq	26348 <sfbpf_parse+0x194c>
   25a6c:	ldr	r0, [pc, #2792]	; 2655c <sfbpf_parse+0x1b60>
   25a70:	mov	r1, r6
   25a74:	add	r0, pc, r0
   25a78:	bl	244f4 <sfbpf_strcasecmp>
   25a7c:	cmp	r0, #0
   25a80:	beq	26350 <sfbpf_parse+0x1954>
   25a84:	ldr	r0, [pc, #2772]	; 26560 <sfbpf_parse+0x1b64>
   25a88:	mov	r1, r6
   25a8c:	add	r0, pc, r0
   25a90:	bl	244f4 <sfbpf_strcasecmp>
   25a94:	cmp	r0, #0
   25a98:	beq	26358 <sfbpf_parse+0x195c>
   25a9c:	ldr	r0, [pc, #2752]	; 26564 <sfbpf_parse+0x1b68>
   25aa0:	mov	r1, r6
   25aa4:	add	r0, pc, r0
   25aa8:	bl	244f4 <sfbpf_strcasecmp>
   25aac:	mov	r1, #14
   25ab0:	cmp	r0, #0
   25ab4:	beq	2635c <sfbpf_parse+0x1960>
   25ab8:	b	26434 <sfbpf_parse+0x1a38>
   25abc:	ldr	r6, [r9, #-32]	; 0xffffffe0
   25ac0:	b	24fb4 <sfbpf_parse+0x5b8>
   25ac4:	mov	sl, r2
   25ac8:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25acc:	ldr	r0, [r9, #-16]
   25ad0:	ldr	r2, [r9]
   25ad4:	mov	r6, r3
   25ad8:	mov	r3, #1
   25adc:	mov	r4, ip
   25ae0:	mov	r5, lr
   25ae4:	bl	138a4 <sf_gen_relation>
   25ae8:	mov	lr, r5
   25aec:	mov	r3, r6
   25af0:	mov	r2, sl
   25af4:	mov	ip, r4
   25af8:	b	25cf0 <sfbpf_parse+0x12f4>
   25afc:	mov	r4, #0
   25b00:	mov	r6, #3
   25b04:	b	25fec <sfbpf_parse+0x15f0>
   25b08:	mov	r5, #0
   25b0c:	mov	r6, #39	; 0x27
   25b10:	b	25fd8 <sfbpf_parse+0x15dc>
   25b14:	mov	r5, #0
   25b18:	mov	r6, #29
   25b1c:	b	25fd8 <sfbpf_parse+0x15dc>
   25b20:	mov	sl, r2
   25b24:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25b28:	ldr	r2, [r9]
   25b2c:	mov	r0, #16
   25b30:	b	25e88 <sfbpf_parse+0x148c>
   25b34:	.word	0x00005c4e
   25b38:	mov	lr, #1
   25b3c:	b	260a4 <sfbpf_parse+0x16a8>
   25b40:	mov	r5, #0
   25b44:	mov	r6, #27
   25b48:	b	25fd8 <sfbpf_parse+0x15dc>
   25b4c:	mov	r6, #26
   25b50:	b	25dd4 <sfbpf_parse+0x13d8>
   25b54:	.word	0x00021e64
   25b58:	.word	0x00021e48
   25b5c:	ldr	r3, [r9, #-12]
   25b60:	sub	r0, r3, #51	; 0x33
   25b64:	cmp	r0, #1
   25b68:	bhi	260a4 <sfbpf_parse+0x16a8>
   25b6c:	ldr	r1, [r9]
   25b70:	str	r2, [sp, #16]
   25b74:	mov	r0, r3
   25b78:	mov	r2, #16
   25b7c:	str	r3, [sp, #8]
   25b80:	mov	r3, #0
   25b84:	b	25bb0 <sfbpf_parse+0x11b4>
   25b88:	mov	lr, #3
   25b8c:	b	260a4 <sfbpf_parse+0x16a8>
   25b90:	.word	0x00005e1a
   25b94:	.word	0x00021e00
   25b98:	str	r2, [sp, #16]
   25b9c:	ldr	r0, [r9, #-28]	; 0xffffffe4
   25ba0:	ldr	r2, [r9, #-16]
   25ba4:	ldr	r1, [r9]
   25ba8:	str	r3, [sp, #8]
   25bac:	mov	r3, #1
   25bb0:	str	ip, [sp, #12]
   25bb4:	str	lr, [sp, #4]
   25bb8:	bl	17edc <sf_gen_atmfield_code>
   25bbc:	b	25cb0 <sfbpf_parse+0x12b4>
   25bc0:	str	r2, [sp, #16]
   25bc4:	ldr	r0, [r9, #-24]	; 0xffffffe8
   25bc8:	ldr	r2, [r9, #-16]
   25bcc:	ldr	r1, [r9]
   25bd0:	b	25c9c <sfbpf_parse+0x12a0>
   25bd4:	.word	0x00005f48
   25bd8:	mov	r4, #0
   25bdc:	mov	r6, #9
   25be0:	b	25fec <sfbpf_parse+0x15f0>
   25be4:	.word	0x0000646c
   25be8:	mov	r4, #0
   25bec:	mov	r6, #11
   25bf0:	b	25fec <sfbpf_parse+0x15f0>
   25bf4:	mov	r4, #0
   25bf8:	mov	r6, #13
   25bfc:	b	25fec <sfbpf_parse+0x15f0>
   25c00:	.word	0x00021db4
   25c04:	.word	0x00021da0
   25c08:	ldr	r0, [r9]
   25c0c:	mov	sl, ip
   25c10:	mov	r5, r2
   25c14:	mov	r6, r3
   25c18:	mov	r4, lr
   25c1c:	bl	1465c <sf_gen_greater>
   25c20:	b	25fa0 <sfbpf_parse+0x15a4>
   25c24:	.word	0x00006968
   25c28:	.word	0x00006a62
   25c2c:	mov	sl, r2
   25c30:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25c34:	ldr	r0, [r9, #-16]
   25c38:	ldr	r2, [r9]
   25c3c:	mov	r4, ip
   25c40:	mov	r6, r3
   25c44:	mov	r5, lr
   25c48:	bl	147c4 <sf_gen_byteop>
   25c4c:	b	25e98 <sfbpf_parse+0x149c>
   25c50:	mov	r6, #31
   25c54:	b	25dd4 <sfbpf_parse+0x13d8>
   25c58:	mov	r3, #52	; 0x34
   25c5c:	b	260a4 <sfbpf_parse+0x16a8>
   25c60:	str	r2, [sp, #16]
   25c64:	ldr	r0, [r9, #-24]	; 0xffffffe8
   25c68:	ldr	r2, [r9, #-16]
   25c6c:	ldr	r1, [r9]
   25c70:	str	r3, [sp, #8]
   25c74:	mov	r3, #1
   25c78:	b	25ca4 <sfbpf_parse+0x12a8>
   25c7c:	ldr	lr, [r9, #-8]
   25c80:	sub	r0, lr, #1
   25c84:	cmp	r0, #3
   25c88:	bhi	260a4 <sfbpf_parse+0x16a8>
   25c8c:	ldr	r1, [r9]
   25c90:	str	r2, [sp, #16]
   25c94:	mov	r0, lr
   25c98:	mov	r2, #16
   25c9c:	str	r3, [sp, #8]
   25ca0:	mov	r3, #0
   25ca4:	str	ip, [sp, #12]
   25ca8:	str	lr, [sp, #4]
   25cac:	bl	19210 <sf_gen_mtp3field_code>
   25cb0:	ldr	lr, [sp, #4]
   25cb4:	ldr	r3, [sp, #8]
   25cb8:	ldr	r2, [sp, #16]
   25cbc:	ldr	ip, [sp, #12]
   25cc0:	str	r0, [sp, #28]
   25cc4:	b	260a4 <sfbpf_parse+0x16a8>
   25cc8:	ldr	r0, [r9]
   25ccc:	mov	sl, ip
   25cd0:	mov	r5, r2
   25cd4:	mov	r6, r3
   25cd8:	mov	r4, lr
   25cdc:	bl	1899c <sf_gen_mtp2type_abbrev>
   25ce0:	mov	lr, r4
   25ce4:	mov	r3, r6
   25ce8:	mov	r2, r5
   25cec:	mov	ip, sl
   25cf0:	str	r0, [sp, #28]
   25cf4:	mov	r6, #255	; 0xff
   25cf8:	mov	sl, #255	; 0xff
   25cfc:	mov	r4, #255	; 0xff
   25d00:	mov	r5, #255	; 0xff
   25d04:	b	260a4 <sfbpf_parse+0x16a8>
   25d08:	mov	sl, #0
   25d0c:	mov	r6, #8
   25d10:	b	25dd8 <sfbpf_parse+0x13dc>
   25d14:	mov	r4, #0
   25d18:	mov	r6, #10
   25d1c:	b	25fec <sfbpf_parse+0x15f0>
   25d20:	mov	r6, #29
   25d24:	b	25dd4 <sfbpf_parse+0x13d8>
   25d28:	mov	r6, #70	; 0x46
   25d2c:	b	25dd4 <sfbpf_parse+0x13d8>
   25d30:	mov	r3, #51	; 0x33
   25d34:	b	260a4 <sfbpf_parse+0x16a8>
   25d38:	mov	lr, #2
   25d3c:	b	260a4 <sfbpf_parse+0x16a8>
   25d40:	mov	lr, #4
   25d44:	b	260a4 <sfbpf_parse+0x16a8>
   25d48:	mov	sl, r2
   25d4c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25d50:	ldr	r2, [r9]
   25d54:	mov	r0, #64	; 0x40
   25d58:	b	25e88 <sfbpf_parse+0x148c>
   25d5c:	mov	r4, #0
   25d60:	mov	r6, #22
   25d64:	b	25fec <sfbpf_parse+0x15f0>
   25d68:	mov	sl, ip
   25d6c:	mov	r5, r2
   25d70:	mov	r6, r3
   25d74:	mov	r4, lr
   25d78:	bl	13ddc <sf_gen_loadlen>
   25d7c:	b	25fa0 <sfbpf_parse+0x15a4>
   25d80:	mov	r6, #28
   25d84:	b	25dd4 <sfbpf_parse+0x13d8>
   25d88:	ldr	r0, [r9]
   25d8c:	mov	sl, ip
   25d90:	mov	r5, r2
   25d94:	mov	r6, r3
   25d98:	mov	r4, lr
   25d9c:	bl	1415c <sf_gen_neg>
   25da0:	b	25fa0 <sfbpf_parse+0x15a4>
   25da4:	ldr	r0, [r9]
   25da8:	mov	sl, ip
   25dac:	mov	r5, r2
   25db0:	mov	r6, r3
   25db4:	mov	r4, lr
   25db8:	bl	170f4 <sf_gen_pf_ruleset>
   25dbc:	b	25fa0 <sfbpf_parse+0x15a4>
   25dc0:	mov	r6, #71	; 0x47
   25dc4:	b	25dd4 <sfbpf_parse+0x13d8>
   25dc8:	mov	r6, #38	; 0x26
   25dcc:	b	25dd4 <sfbpf_parse+0x13d8>
   25dd0:	mov	r6, #27
   25dd4:	mov	sl, #0
   25dd8:	mov	r4, #0
   25ddc:	mov	r5, #0
   25de0:	b	260a4 <sfbpf_parse+0x16a8>
   25de4:	mov	r4, #0
   25de8:	mov	r6, #14
   25dec:	b	25fec <sfbpf_parse+0x15f0>
   25df0:	ldr	r0, [r9]
   25df4:	mov	sl, ip
   25df8:	mov	r5, r2
   25dfc:	mov	r6, r3
   25e00:	mov	r4, lr
   25e04:	bl	170dc <sf_gen_pf_ifname>
   25e08:	b	25fa0 <sfbpf_parse+0x15a4>
   25e0c:	mov	r4, #0
   25e10:	mov	r6, #4
   25e14:	b	25fec <sfbpf_parse+0x15f0>
   25e18:	mov	r5, #0
   25e1c:	mov	r6, #24
   25e20:	b	25fd8 <sfbpf_parse+0x15dc>
   25e24:	ldr	r0, [r9]
   25e28:	mov	sl, ip
   25e2c:	mov	r5, r2
   25e30:	mov	r6, r3
   25e34:	mov	r4, lr
   25e38:	bl	1479c <sf_gen_less>
   25e3c:	b	25fa0 <sfbpf_parse+0x15a4>
   25e40:	mov	sl, ip
   25e44:	mov	r5, r2
   25e48:	mov	r6, r3
   25e4c:	mov	r4, lr
   25e50:	bl	17e84 <sf_gen_pppoed>
   25e54:	b	25fa0 <sfbpf_parse+0x15a4>
   25e58:	mov	r5, #0
   25e5c:	mov	r6, #25
   25e60:	b	25fd8 <sfbpf_parse+0x15dc>
   25e64:	ldr	r0, [r9, #-48]	; 0xffffffd0
   25e68:	ldr	r1, [r9, #-16]
   25e6c:	mov	sl, r2
   25e70:	mov	r2, #1
   25e74:	b	25f10 <sfbpf_parse+0x1514>
   25e78:	mov	sl, r2
   25e7c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25e80:	ldr	r2, [r9]
   25e84:	mov	r0, #80	; 0x50
   25e88:	mov	r4, ip
   25e8c:	mov	r6, r3
   25e90:	mov	r5, lr
   25e94:	bl	14354 <sf_gen_arth>
   25e98:	mov	lr, r5
   25e9c:	mov	r3, r6
   25ea0:	mov	r2, sl
   25ea4:	mov	ip, r4
   25ea8:	b	25fb0 <sfbpf_parse+0x15b4>
   25eac:	ldr	r0, [r9, #12]
   25eb0:	str	ip, [sp, #12]
   25eb4:	str	r2, [sp, #16]
   25eb8:	str	r3, [sp, #8]
   25ebc:	str	lr, [sp, #4]
   25ec0:	bl	2eb0 <sf_finish_parse>
   25ec4:	ldr	lr, [sp, #4]
   25ec8:	ldr	r3, [sp, #8]
   25ecc:	ldr	r2, [sp, #16]
   25ed0:	ldr	ip, [sp, #12]
   25ed4:	b	260a4 <sfbpf_parse+0x16a8>
   25ed8:	mov	r5, #0
   25edc:	mov	r6, #31
   25ee0:	b	25fd8 <sfbpf_parse+0x15dc>
   25ee4:	ldr	r0, [r9]
   25ee8:	mov	sl, ip
   25eec:	mov	r5, r2
   25ef0:	mov	r6, r3
   25ef4:	mov	r4, lr
   25ef8:	bl	17154 <sf_gen_pf_action>
   25efc:	b	25fa0 <sfbpf_parse+0x15a4>
   25f00:	mov	sl, r2
   25f04:	ldr	r0, [r9, #-80]	; 0xffffffb0
   25f08:	ldr	r1, [r9, #-48]	; 0xffffffd0
   25f0c:	ldr	r2, [r9, #-16]
   25f10:	mov	r4, ip
   25f14:	mov	r6, r3
   25f18:	mov	r5, lr
   25f1c:	bl	11f40 <sf_gen_load>
   25f20:	b	25e98 <sfbpf_parse+0x149c>
   25f24:	mov	r5, #0
   25f28:	mov	r6, #37	; 0x25
   25f2c:	b	25fd8 <sfbpf_parse+0x15dc>
   25f30:	mov	r5, #0
   25f34:	mov	r6, #32
   25f38:	b	25fd8 <sfbpf_parse+0x15dc>
   25f3c:	mov	r5, #0
   25f40:	mov	r6, #40	; 0x28
   25f44:	b	25fd8 <sfbpf_parse+0x15dc>
   25f48:	ldr	r0, [r9, #-16]
   25f4c:	mov	sl, ip
   25f50:	mov	r5, r2
   25f54:	mov	r6, r3
   25f58:	mov	r4, lr
   25f5c:	bl	14b9c <sf_gen_broadcast>
   25f60:	b	25fa0 <sfbpf_parse+0x15a4>
   25f64:	ldr	r0, [r9]
   25f68:	mov	sl, ip
   25f6c:	mov	r5, r2
   25f70:	mov	r6, r3
   25f74:	mov	r4, lr
   25f78:	bl	17124 <sf_gen_pf_srnr>
   25f7c:	b	25fa0 <sfbpf_parse+0x15a4>
   25f80:	mov	r0, #0
   25f84:	b	25f8c <sfbpf_parse+0x1590>
   25f88:	mov	r0, #1
   25f8c:	mov	sl, ip
   25f90:	mov	r5, r2
   25f94:	mov	r6, r3
   25f98:	mov	r4, lr
   25f9c:	bl	16a48 <sf_gen_inbound>
   25fa0:	mov	lr, r4
   25fa4:	mov	r3, r6
   25fa8:	mov	r2, r5
   25fac:	mov	ip, sl
   25fb0:	mov	r6, r0
   25fb4:	lsr	r5, r0, #24
   25fb8:	lsr	r4, r0, #16
   25fbc:	lsr	sl, r0, #8
   25fc0:	b	260a4 <sfbpf_parse+0x16a8>
   25fc4:	mov	r5, #0
   25fc8:	mov	r6, #36	; 0x24
   25fcc:	b	25fd8 <sfbpf_parse+0x15dc>
   25fd0:	mov	r5, #0
   25fd4:	mov	r6, #33	; 0x21
   25fd8:	mov	sl, #0
   25fdc:	mov	r4, #0
   25fe0:	b	260a4 <sfbpf_parse+0x16a8>
   25fe4:	mov	r4, #0
   25fe8:	mov	r6, #5
   25fec:	mov	sl, #0
   25ff0:	mov	r5, #0
   25ff4:	b	260a4 <sfbpf_parse+0x16a8>
   25ff8:	ldr	r6, [r9, #-16]
   25ffc:	ldr	r0, [r9]
   26000:	str	ip, [sp, #12]
   26004:	mov	r5, r2
   26008:	mov	r4, r3
   2600c:	mov	sl, lr
   26010:	mov	r1, r6
   26014:	bl	11c2c <sf_gen_ecode>
   26018:	b	2603c <sfbpf_parse+0x1640>
   2601c:	ldr	r6, [r9, #-16]
   26020:	ldr	r0, [r9]
   26024:	str	ip, [sp, #12]
   26028:	mov	r5, r2
   2602c:	mov	r4, r3
   26030:	mov	sl, lr
   26034:	mov	r1, r6
   26038:	bl	174d0 <sf_gen_acode>
   2603c:	str	r0, [sp, #28]
   26040:	ldr	r0, [r9]
   26044:	bl	dbc <free@plt>
   26048:	ldr	ip, [sp, #12]
   2604c:	mov	lr, sl
   26050:	mov	r3, r4
   26054:	mov	r2, r5
   26058:	b	26098 <sfbpf_parse+0x169c>
   2605c:	ldr	r6, [r9, #-16]
   26060:	ldr	r0, [r9]
   26064:	str	r2, [sp, #16]
   26068:	mov	r1, #0
   2606c:	mov	r2, #128	; 0x80
   26070:	mov	r5, r3
   26074:	mov	r3, r6
   26078:	mov	r4, ip
   2607c:	mov	sl, lr
   26080:	bl	11a68 <sf_gen_mcode6>
   26084:	ldr	r2, [sp, #16]
   26088:	mov	lr, sl
   2608c:	mov	r3, r5
   26090:	mov	ip, r4
   26094:	str	r0, [sp, #28]
   26098:	lsr	r5, r6, #24
   2609c:	lsr	r4, r6, #16
   260a0:	lsr	sl, r6, #8
   260a4:	uxtb	r0, r6
   260a8:	uxtb	r1, r4
   260ac:	sub	r9, r9, r2, lsl #4
   260b0:	bfi	r0, sl, #8, #8
   260b4:	orr	r0, r0, r1, lsl #16
   260b8:	orr	r0, r0, r5, lsl #24
   260bc:	str	r0, [r9, #16]!
   260c0:	ldr	r0, [sp, #28]
   260c4:	stmib	r9, {r3, lr}
   260c8:	movw	r3, #669	; 0x29d
   260cc:	str	r0, [r9, #12]
   260d0:	lsl	r0, r2, #1
   260d4:	ldrsh	r2, [r8, -r0]!
   260d8:	ldr	r0, [pc, #944]	; 26490 <sfbpf_parse+0x1a94>
   260dc:	ldr	r1, [pc, #944]	; 26494 <sfbpf_parse+0x1a98>
   260e0:	add	r0, pc, r0
   260e4:	add	r1, pc, r1
   260e8:	ldrb	r0, [r0, r7]
   260ec:	sub	r0, r0, #126	; 0x7e
   260f0:	add	r1, r1, r0, lsl #1
   260f4:	ldrsh	r1, [r1]
   260f8:	add	r1, r2, r1
   260fc:	cmp	r1, r3
   26100:	bhi	24a48 <sfbpf_parse+0x4c>
   26104:	ldr	r3, [pc, #908]	; 26498 <sfbpf_parse+0x1a9c>
   26108:	uxth	r2, r2
   2610c:	add	r3, pc, r3
   26110:	add	r3, r3, r1, lsl #1
   26114:	ldrh	r3, [r3]
   26118:	cmp	r3, r2
   2611c:	bne	24a48 <sfbpf_parse+0x4c>
   26120:	ldr	r0, [pc, #884]	; 2649c <sfbpf_parse+0x1aa0>
   26124:	add	r0, pc, r0
   26128:	add	r0, r0, r1, lsl #1
   2612c:	b	24a54 <sfbpf_parse+0x58>
   26130:	mov	r6, #0
   26134:	b	261c0 <sfbpf_parse+0x17c4>
   26138:	mov	r1, #0
   2613c:	b	261e0 <sfbpf_parse+0x17e4>
   26140:	ldr	r1, [pc, #760]	; 26440 <sfbpf_parse+0x1a44>
   26144:	add	r1, pc, r1
   26148:	ldr	r0, [r1, #4]
   2614c:	cmp	r0, #0
   26150:	bne	2616c <sfbpf_parse+0x1770>
   26154:	b	263e0 <sfbpf_parse+0x19e4>
   26158:	ldr	r1, [pc, #772]	; 26464 <sfbpf_parse+0x1a68>
   2615c:	add	r1, pc, r1
   26160:	ldr	r0, [r1, #4]
   26164:	cmp	r0, #0
   26168:	beq	263e0 <sfbpf_parse+0x19e4>
   2616c:	ldr	r6, [r9]
   26170:	add	r4, r1, #12
   26174:	mov	r1, r6
   26178:	bl	244f4 <sfbpf_strcasecmp>
   2617c:	cmp	r0, #0
   26180:	beq	26194 <sfbpf_parse+0x1798>
   26184:	ldr	r0, [r4], #8
   26188:	cmp	r0, #0
   2618c:	bne	26174 <sfbpf_parse+0x1778>
   26190:	b	263e0 <sfbpf_parse+0x19e4>
   26194:	ldr	r6, [r4, #-12]
   26198:	cmn	r6, #1
   2619c:	bne	26294 <sfbpf_parse+0x1898>
   261a0:	b	263e0 <sfbpf_parse+0x19e4>
   261a4:	mov	r6, #1
   261a8:	b	261c0 <sfbpf_parse+0x17c4>
   261ac:	mov	r1, #1
   261b0:	b	261e0 <sfbpf_parse+0x17e4>
   261b4:	mov	r0, #1
   261b8:	b	26274 <sfbpf_parse+0x1878>
   261bc:	mov	r6, #2
   261c0:	mov	r4, #0
   261c4:	mov	r5, #0
   261c8:	b	262a0 <sfbpf_parse+0x18a4>
   261cc:	mov	r1, #2
   261d0:	b	261e0 <sfbpf_parse+0x17e4>
   261d4:	mov	r0, #2
   261d8:	b	26274 <sfbpf_parse+0x1878>
   261dc:	mov	r1, #3
   261e0:	ldr	r0, [pc, #632]	; 26460 <sfbpf_parse+0x1a64>
   261e4:	add	r0, pc, r0
   261e8:	ldr	r6, [r0, r1, lsl #3]
   261ec:	b	26294 <sfbpf_parse+0x1898>
   261f0:	mov	r0, #3
   261f4:	b	26274 <sfbpf_parse+0x1878>
   261f8:	mov	r0, #4
   261fc:	b	26274 <sfbpf_parse+0x1878>
   26200:	mov	r0, #5
   26204:	b	26274 <sfbpf_parse+0x1878>
   26208:	mov	r0, #6
   2620c:	b	26274 <sfbpf_parse+0x1878>
   26210:	mov	r0, #7
   26214:	b	26274 <sfbpf_parse+0x1878>
   26218:	mov	r0, #8
   2621c:	b	26274 <sfbpf_parse+0x1878>
   26220:	mov	r0, #9
   26224:	b	26274 <sfbpf_parse+0x1878>
   26228:	mov	r0, #10
   2622c:	b	26274 <sfbpf_parse+0x1878>
   26230:	mov	r0, #11
   26234:	b	26274 <sfbpf_parse+0x1878>
   26238:	mov	r0, #12
   2623c:	b	26274 <sfbpf_parse+0x1878>
   26240:	mov	r0, #13
   26244:	b	26274 <sfbpf_parse+0x1878>
   26248:	mov	r0, #14
   2624c:	b	26274 <sfbpf_parse+0x1878>
   26250:	mov	r0, #15
   26254:	b	26274 <sfbpf_parse+0x1878>
   26258:	mov	r0, #16
   2625c:	b	26274 <sfbpf_parse+0x1878>
   26260:	mov	r0, #17
   26264:	b	26274 <sfbpf_parse+0x1878>
   26268:	mov	r0, #18
   2626c:	b	26274 <sfbpf_parse+0x1878>
   26270:	mov	r0, #19
   26274:	ldr	r1, [pc, #504]	; 26474 <sfbpf_parse+0x1a78>
   26278:	add	r1, pc, r1
   2627c:	add	r0, r1, r0, lsl #3
   26280:	ldr	r1, [pc, #496]	; 26478 <sfbpf_parse+0x1a7c>
   26284:	ldr	r0, [r0]
   26288:	add	r1, pc, r1
   2628c:	ldr	r1, [r1, r4, lsl #3]
   26290:	orr	r6, r1, r0
   26294:	lsr	r5, r6, #24
   26298:	lsr	r4, r6, #16
   2629c:	lsr	sl, r6, #8
   262a0:	ldr	ip, [sp, #12]
   262a4:	ldr	r2, [sp, #16]
   262a8:	ldr	r3, [sp, #8]
   262ac:	ldr	lr, [sp, #4]
   262b0:	b	260a4 <sfbpf_parse+0x16a8>
   262b4:	mov	r0, #0
   262b8:	b	262e0 <sfbpf_parse+0x18e4>
   262bc:	mov	r0, #1
   262c0:	b	262e0 <sfbpf_parse+0x18e4>
   262c4:	mov	r0, #2
   262c8:	b	262e0 <sfbpf_parse+0x18e4>
   262cc:	mov	r0, #3
   262d0:	b	262e0 <sfbpf_parse+0x18e4>
   262d4:	mov	r0, #4
   262d8:	b	262e0 <sfbpf_parse+0x18e4>
   262dc:	mov	r0, #5
   262e0:	ldr	r1, [pc, #460]	; 264b4 <sfbpf_parse+0x1ab8>
   262e4:	mov	r4, #1
   262e8:	add	r1, pc, r1
   262ec:	b	2627c <sfbpf_parse+0x1880>
   262f0:	mov	r1, #0
   262f4:	b	2635c <sfbpf_parse+0x1960>
   262f8:	mov	r1, #1
   262fc:	b	2635c <sfbpf_parse+0x1960>
   26300:	mov	r1, #2
   26304:	b	2635c <sfbpf_parse+0x1960>
   26308:	mov	r1, #3
   2630c:	b	2635c <sfbpf_parse+0x1960>
   26310:	mov	r1, #4
   26314:	b	2635c <sfbpf_parse+0x1960>
   26318:	mov	r1, #5
   2631c:	b	2635c <sfbpf_parse+0x1960>
   26320:	mov	r1, #6
   26324:	b	2635c <sfbpf_parse+0x1960>
   26328:	mov	r1, #7
   2632c:	b	2635c <sfbpf_parse+0x1960>
   26330:	mov	r1, #8
   26334:	b	2635c <sfbpf_parse+0x1960>
   26338:	mov	r1, #9
   2633c:	b	2635c <sfbpf_parse+0x1960>
   26340:	mov	r1, #10
   26344:	b	2635c <sfbpf_parse+0x1960>
   26348:	mov	r1, #11
   2634c:	b	2635c <sfbpf_parse+0x1960>
   26350:	mov	r1, #12
   26354:	b	2635c <sfbpf_parse+0x1960>
   26358:	mov	r1, #13
   2635c:	ldr	r0, [pc, #344]	; 264bc <sfbpf_parse+0x1ac0>
   26360:	mov	r4, #2
   26364:	add	r0, pc, r0
   26368:	add	r0, r0, r1, lsl #3
   2636c:	b	26280 <sfbpf_parse+0x1884>
   26370:	sub	r0, fp, #432	; 0x1b0
   26374:	mov	r6, #0
   26378:	cmp	r4, r0
   2637c:	bne	26394 <sfbpf_parse+0x1998>
   26380:	mov	r0, r6
   26384:	sub	sp, fp, #28
   26388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2638c:	mov	r6, #1
   26390:	mov	r4, r5
   26394:	mov	r0, r4
   26398:	bl	dbc <free@plt>
   2639c:	mov	r0, r6
   263a0:	sub	sp, fp, #28
   263a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   263a8:	ldr	r0, [pc, #252]	; 264ac <sfbpf_parse+0x1ab0>
   263ac:	add	r0, pc, r0
   263b0:	bl	26598 <sfbpf_error>
   263b4:	bl	26568 <pfreason_to_num>
   263b8:	bl	26580 <pfaction_to_num>
   263bc:	ldr	r0, [pc, #220]	; 264a0 <sfbpf_parse+0x1aa4>
   263c0:	ldr	r0, [pc, r0]
   263c4:	ldr	r1, [pc, #216]	; 264a4 <sfbpf_parse+0x1aa8>
   263c8:	add	r0, r0, #1
   263cc:	add	r1, pc, r1
   263d0:	str	r0, [r1]
   263d4:	ldr	r0, [pc, #204]	; 264a8 <sfbpf_parse+0x1aac>
   263d8:	add	r0, pc, r0
   263dc:	bl	26598 <sfbpf_error>
   263e0:	ldr	r0, [pc, #128]	; 26468 <sfbpf_parse+0x1a6c>
   263e4:	add	r0, pc, r0
   263e8:	bl	214c <sf_bpf_error>
   263ec:	ldr	r0, [pc, #84]	; 26448 <sfbpf_parse+0x1a4c>
   263f0:	add	r0, pc, r0
   263f4:	bl	214c <sf_bpf_error>
   263f8:	ldr	r0, [pc, #80]	; 26450 <sfbpf_parse+0x1a54>
   263fc:	add	r0, pc, r0
   26400:	bl	214c <sf_bpf_error>
   26404:	ldr	r0, [pc, #72]	; 26454 <sfbpf_parse+0x1a58>
   26408:	add	r0, pc, r0
   2640c:	bl	214c <sf_bpf_error>
   26410:	ldr	r0, [pc, #52]	; 2644c <sfbpf_parse+0x1a50>
   26414:	add	r0, pc, r0
   26418:	bl	214c <sf_bpf_error>
   2641c:	ldr	r0, [pc, #104]	; 2648c <sfbpf_parse+0x1a90>
   26420:	add	r0, pc, r0
   26424:	bl	214c <sf_bpf_error>
   26428:	ldr	r0, [pc, #144]	; 264c0 <sfbpf_parse+0x1ac4>
   2642c:	add	r0, pc, r0
   26430:	bl	214c <sf_bpf_error>
   26434:	ldr	r0, [pc, #148]	; 264d0 <sfbpf_parse+0x1ad4>
   26438:	add	r0, pc, r0
   2643c:	bl	214c <sf_bpf_error>
   26440:	.word	0x0001fc64
   26444:	.word	0x000207f0
   26448:	.word	0x00005504
   2644c:	.word	0x00005503
   26450:	.word	0x00005543
   26454:	.word	0x0000555b
   26458:	.word	0x0000653d
   2645c:	.word	0x0000644b
   26460:	.word	0x0001fb74
   26464:	.word	0x0001fcf4
   26468:	.word	0x000055d5
   2646c:	.word	0x00006368
   26470:	.word	0x00006353
   26474:	.word	0x0001fb30
   26478:	.word	0x0001fb00
   2647c:	.word	0x000064f9
   26480:	.word	0x000064eb
   26484:	.word	0x000064ca
   26488:	.word	0x000064b9
   2648c:	.word	0x000055c8
   26490:	.word	0x00005691
   26494:	.word	0x00005758
   26498:	.word	0x00004a10
   2649c:	.word	0x00004f34
   264a0:	.word	0x000205fc
   264a4:	.word	0x000205f0
   264a8:	.word	0x00005629
   264ac:	.word	0x00005662
   264b0:	.word	0x000061fe
   264b4:	.word	0x0001fb68
   264b8:	.word	0x00006196
   264bc:	.word	0x0001fb24
   264c0:	.word	0x00005579
   264c4:	.word	0x00006437
   264c8:	.word	0x0000642a
   264cc:	.word	0x00006416
   264d0:	.word	0x00005554
   264d4:	.word	0x00006347
   264d8:	.word	0x0000633b
   264dc:	.word	0x000062fe
   264e0:	.word	0x000062f1
   264e4:	.word	0x000062e5
   264e8:	.word	0x000062d9
   264ec:	.word	0x000062ce
   264f0:	.word	0x000062bf
   264f4:	.word	0x000062b1
   264f8:	.word	0x000062a3
   264fc:	.word	0x00006296
   26500:	.word	0x00006285
   26504:	.word	0x00006272
   26508:	.word	0x00006263
   2650c:	.word	0x0000625c
   26510:	.word	0x0000624b
   26514:	.word	0x0000622a
   26518:	.word	0x00006219
   2651c:	.word	0x00006212
   26520:	.word	0x000061ea
   26524:	.word	0x000061e4
   26528:	.word	0x000061be
   2652c:	.word	0x000061ad
   26530:	.word	0x000061a9
   26534:	.word	0x0000618e
   26538:	.word	0x00006187
   2653c:	.word	0x0000613c
   26540:	.word	0x0000613b
   26544:	.word	0x00006133
   26548:	.word	0x0000612c
   2654c:	.word	0x000060e1
   26550:	.word	0x000060d2
   26554:	.word	0x000060ca
   26558:	.word	0x000060c3
   2655c:	.word	0x000060c0
   26560:	.word	0x000060ac
   26564:	.word	0x000060a0

00026568 <pfreason_to_num>:
   26568:	push	{fp, lr}
   2656c:	mov	fp, sp
   26570:	ldr	r0, [pc, #4]	; 2657c <pfreason_to_num+0x14>
   26574:	add	r0, pc, r0
   26578:	bl	214c <sf_bpf_error>
   2657c:	.word	0x00003048

00026580 <pfaction_to_num>:
   26580:	push	{fp, lr}
   26584:	mov	fp, sp
   26588:	ldr	r0, [pc, #4]	; 26594 <pfaction_to_num+0x14>
   2658c:	add	r0, pc, r0
   26590:	bl	214c <sf_bpf_error>
   26594:	.word	0x00003030

00026598 <sfbpf_error>:
   26598:	push	{fp, lr}
   2659c:	mov	fp, sp
   265a0:	mov	r1, r0
   265a4:	ldr	r0, [pc, #28]	; 265c8 <sfbpf_error+0x30>
   265a8:	ldr	r0, [pc, r0]
   265ac:	ldr	r2, [pc, #24]	; 265cc <sfbpf_error+0x34>
   265b0:	add	r0, r0, #1
   265b4:	add	r2, pc, r2
   265b8:	str	r0, [r2]
   265bc:	ldr	r0, [pc, #12]	; 265d0 <sfbpf_error+0x38>
   265c0:	add	r0, pc, r0
   265c4:	bl	214c <sf_bpf_error>
   265c8:	.word	0x000203b8
   265cc:	.word	0x000203ac
   265d0:	.word	0x00003dc5

000265d4 <sfbpf_lex>:
   265d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   265d8:	add	fp, sp, #28
   265dc:	sub	sp, sp, #84	; 0x54
   265e0:	ldr	lr, [pc, #4044]	; 275b4 <sfbpf_lex+0xfe0>
   265e4:	add	lr, pc, lr
   265e8:	ldrb	r0, [lr]
   265ec:	ldr	r6, [pc, #4092]	; 275f0 <sfbpf_lex+0x101c>
   265f0:	cmp	r0, #0
   265f4:	add	r6, pc, r6
   265f8:	bne	2673c <sfbpf_lex+0x168>
   265fc:	mov	r0, #1
   26600:	strb	r0, [lr]
   26604:	ldrb	r1, [lr, #4]
   26608:	cmp	r1, #0
   2660c:	strbeq	r0, [lr, #4]
   26610:	ldr	r4, [lr, #8]
   26614:	cmp	r4, #0
   26618:	beq	26690 <sfbpf_lex+0xbc>
   2661c:	ldr	r0, [lr, #12]
   26620:	cmp	r0, #0
   26624:	beq	266ac <sfbpf_lex+0xd8>
   26628:	ldr	r0, [lr, #16]
   2662c:	cmp	r0, #0
   26630:	beq	266c8 <sfbpf_lex+0xf4>
   26634:	ldr	r2, [lr, #20]
   26638:	ldr	r1, [r0, r2, lsl #2]
   2663c:	cmp	r1, #0
   26640:	bne	26714 <sfbpf_lex+0x140>
   26644:	ldr	r1, [lr, #44]	; 0x2c
   26648:	mov	r5, lr
   2664c:	sub	r3, r1, #1
   26650:	cmp	r2, r3
   26654:	bcc	266f4 <sfbpf_lex+0x120>
   26658:	add	r4, r1, #8
   2665c:	lsl	r1, r4, #2
   26660:	bl	e04 <realloc@plt>
   26664:	cmp	r0, #0
   26668:	str	r0, [r5, #16]
   2666c:	beq	28104 <sfbpf_lex+0x1b30>
   26670:	ldr	r1, [r5, #44]	; 0x2c
   26674:	str	r4, [r5, #44]	; 0x2c
   26678:	vmov.i32	q8, #0	; 0x00000000
   2667c:	ldr	r4, [r5, #8]
   26680:	add	r0, r0, r1, lsl #2
   26684:	vst1.32	{d16-d17}, [r0]!
   26688:	vst1.32	{d16-d17}, [r0]
   2668c:	b	266f4 <sfbpf_lex+0x120>
   26690:	ldr	r0, [pc, #4056]	; 27670 <sfbpf_lex+0x109c>
   26694:	ldr	r0, [pc, r0]
   26698:	ldr	r4, [r0]
   2669c:	str	r4, [lr, #8]
   266a0:	ldr	r0, [lr, #12]
   266a4:	cmp	r0, #0
   266a8:	bne	26628 <sfbpf_lex+0x54>
   266ac:	ldr	r0, [pc, #4032]	; 27674 <sfbpf_lex+0x10a0>
   266b0:	ldr	r0, [pc, r0]
   266b4:	ldr	r0, [r0]
   266b8:	str	r0, [lr, #12]
   266bc:	ldr	r0, [lr, #16]
   266c0:	cmp	r0, #0
   266c4:	bne	26634 <sfbpf_lex+0x60>
   266c8:	mov	r0, #4
   266cc:	mov	r5, lr
   266d0:	bl	e34 <malloc@plt>
   266d4:	cmp	r0, #0
   266d8:	str	r0, [r5, #16]
   266dc:	beq	28104 <sfbpf_lex+0x1b30>
   266e0:	mov	r1, #0
   266e4:	str	r1, [r0]
   266e8:	mov	r0, #1
   266ec:	str	r1, [r5, #20]
   266f0:	str	r0, [r5, #44]	; 0x2c
   266f4:	mov	r0, r4
   266f8:	mov	r1, #16384	; 0x4000
   266fc:	bl	28250 <sfbpf__create_buffer>
   26700:	mov	r1, r0
   26704:	ldr	r0, [r5, #16]
   26708:	ldr	r2, [r5, #20]
   2670c:	mov	lr, r5
   26710:	str	r1, [r0, r2, lsl #2]
   26714:	ldr	r3, [r1, #16]
   26718:	str	r3, [lr, #36]	; 0x24
   2671c:	ldr	r1, [r1, #8]
   26720:	str	r1, [r6]
   26724:	str	r1, [lr, #24]
   26728:	ldr	r0, [r0, r2, lsl #2]
   2672c:	ldr	r0, [r0]
   26730:	str	r0, [lr, #8]
   26734:	ldrb	r0, [r1]
   26738:	strb	r0, [lr, #5]
   2673c:	ldr	r7, [pc, #4076]	; 27730 <sfbpf_lex+0x115c>
   26740:	ldr	r4, [pc, #4076]	; 27734 <sfbpf_lex+0x1160>
   26744:	ldr	r8, [pc, #4076]	; 27738 <sfbpf_lex+0x1164>
   26748:	ldr	r9, [pc, #4076]	; 2773c <sfbpf_lex+0x1168>
   2674c:	ldr	ip, [pc, #4076]	; 27740 <sfbpf_lex+0x116c>
   26750:	ldr	r5, [pc, #4076]	; 27744 <sfbpf_lex+0x1170>
   26754:	movw	sl, #1434	; 0x59a
   26758:	add	r7, pc, r7
   2675c:	add	r4, pc, r4
   26760:	add	r8, pc, r8
   26764:	add	r9, pc, r9
   26768:	add	ip, pc, ip
   2676c:	add	r5, pc, r5
   26770:	ldr	r6, [lr, #24]
   26774:	ldrb	r0, [lr, #5]
   26778:	strb	r0, [r6]
   2677c:	str	r6, [sp, #40]	; 0x28
   26780:	ldrb	r0, [lr, #4]
   26784:	b	267bc <sfbpf_lex+0x1e8>
   26788:	ldr	r4, [pc, #4076]	; 2777c <sfbpf_lex+0x11a8>
   2678c:	mov	r7, ip
   26790:	ldr	ip, [pc, #4072]	; 27780 <sfbpf_lex+0x11ac>
   26794:	add	r4, pc, r4
   26798:	add	ip, pc, ip
   2679c:	add	r0, ip, r3, lsl #1
   267a0:	movw	r2, #7401	; 0x1ce9
   267a4:	add	r6, r6, #1
   267a8:	ldrsh	r0, [r0]
   267ac:	add	r1, r8, r0, lsl #1
   267b0:	ldrh	r1, [r1]
   267b4:	cmp	r1, r2
   267b8:	beq	26850 <sfbpf_lex+0x27c>
   267bc:	add	r2, r4, r0, lsl #1
   267c0:	ldrb	r1, [r6]
   267c4:	ldrh	r2, [r2]
   267c8:	ldrb	r1, [r7, r1]
   267cc:	cmp	r2, #0
   267d0:	add	r2, r8, r0, lsl #1
   267d4:	strne	r0, [lr, #28]
   267d8:	strne	r6, [lr, #32]
   267dc:	ldrsh	r2, [r2]
   267e0:	add	r3, r2, r1
   267e4:	add	r2, r9, r3, lsl #1
   267e8:	ldrsh	r2, [r2]
   267ec:	cmp	r0, r2
   267f0:	beq	2679c <sfbpf_lex+0x1c8>
   267f4:	mov	ip, r7
   267f8:	mov	r2, r1
   267fc:	add	r0, r5, r0, lsl #1
   26800:	ldrsh	r0, [r0]
   26804:	cmp	r0, sl
   26808:	bge	26840 <sfbpf_lex+0x26c>
   2680c:	add	r1, r8, r0, lsl #1
   26810:	uxth	r4, r0
   26814:	ldrsh	r1, [r1]
   26818:	uxtab	r3, r1, r2
   2681c:	add	r1, r9, r3, lsl #1
   26820:	ldrh	r7, [r1]
   26824:	uxtb	r1, r2
   26828:	cmp	r4, r7
   2682c:	beq	26788 <sfbpf_lex+0x1b4>
   26830:	add	r0, r5, r0, lsl #1
   26834:	ldrsh	r0, [r0]
   26838:	cmp	r0, sl
   2683c:	blt	2680c <sfbpf_lex+0x238>
   26840:	ldr	r2, [pc, #4060]	; 27824 <sfbpf_lex+0x1250>
   26844:	add	r2, pc, r2
   26848:	ldrb	r2, [r2, r1]
   2684c:	b	2680c <sfbpf_lex+0x238>
   26850:	ldr	r2, [sp, #40]	; 0x28
   26854:	ldr	r3, [pc, #4084]	; 27850 <sfbpf_lex+0x127c>
   26858:	str	r2, [sp, #36]	; 0x24
   2685c:	add	r3, pc, r3
   26860:	add	r0, r4, r0, lsl #1
   26864:	ldrh	r0, [r0]
   26868:	cmp	r0, #0
   2686c:	bne	26880 <sfbpf_lex+0x2ac>
   26870:	ldr	r0, [lr, #28]
   26874:	ldr	r6, [lr, #32]
   26878:	add	r0, r4, r0, lsl #1
   2687c:	ldrh	r0, [r0]
   26880:	str	r2, [r3]
   26884:	sub	r1, r6, r2
   26888:	sxth	r0, r0
   2688c:	ldr	r2, [pc, #4092]	; 27890 <sfbpf_lex+0x12bc>
   26890:	add	r2, pc, r2
   26894:	str	r1, [r2]
   26898:	ldrb	r1, [r6]
   2689c:	strb	r1, [lr, #5]
   268a0:	mov	r1, #0
   268a4:	strb	r1, [r6]
   268a8:	str	r6, [lr, #24]
   268ac:	cmp	r0, #146	; 0x92
   268b0:	bhi	280a0 <sfbpf_lex+0x1acc>
   268b4:	add	r1, pc, #4
   268b8:	ldr	r0, [r1, r0, lsl #2]
   268bc:	add	pc, r1, r0
   268c0:	.word	0x000009f8
   268c4:	.word	0x0000128c
   268c8:	.word	0x0000121c
   268cc:	.word	0x00000efc
   268d0:	.word	0x00000efc
   268d4:	.word	0x00001040
   268d8:	.word	0x0000104c
   268dc:	.word	0x00001424
   268e0:	.word	0x00001388
   268e4:	.word	0x00001204
   268e8:	.word	0x0000114c
   268ec:	.word	0x00001418
   268f0:	.word	0x000016ec
   268f4:	.word	0x000010ec
   268f8:	.word	0x00001514
   268fc:	.word	0x000015f0
   26900:	.word	0x000014d8
   26904:	.word	0x000014c0
   26908:	.word	0x0000101c
   2690c:	.word	0x00001468
   26910:	.word	0x000016f8
   26914:	.word	0x000016e0
   26918:	.word	0x000016b4
   2691c:	.word	0x00000f4c
   26920:	.word	0x0000144c
   26924:	.word	0x00001198
   26928:	.word	0x00001244
   2692c:	.word	0x000011a4
   26930:	.word	0x000011ec
   26934:	.word	0x00000eb0
   26938:	.word	0x00000eb0
   2693c:	.word	0x00000ea4
   26940:	.word	0x00000ea4
   26944:	.word	0x000015cc
   26948:	.word	0x000013c8
   2694c:	.word	0x00001104
   26950:	.word	0x00001110
   26954:	.word	0x00001028
   26958:	.word	0x00001128
   2695c:	.word	0x000015d8
   26960:	.word	0x000010d4
   26964:	.word	0x00001440
   26968:	.word	0x000015e4
   2696c:	.word	0x000012e4
   26970:	.word	0x00001400
   26974:	.word	0x00001520
   26978:	.word	0x000013f4
   2697c:	.word	0x0000160c
   26980:	.word	0x000014f0
   26984:	.word	0x0000137c
   26988:	.word	0x00001544
   2698c:	.word	0x00001670
   26990:	.word	0x00000fec
   26994:	.word	0x00001688
   26998:	.word	0x00001164
   2699c:	.word	0x000011f8
   269a0:	.word	0x000011b0
   269a4:	.word	0x00001140
   269a8:	.word	0x000010e0
   269ac:	.word	0x000010c8
   269b0:	.word	0x00001210
   269b4:	.word	0x00001058
   269b8:	.word	0x000012f0
   269bc:	.word	0x00001370
   269c0:	.word	0x00000ff8
   269c4:	.word	0x0000140c
   269c8:	.word	0x000012b4
   269cc:	.word	0x000011bc
   269d0:	.word	0x00000fe0
   269d4:	.word	0x00001434
   269d8:	.word	0x00001490
   269dc:	.word	0x00000fc4
   269e0:	.word	0x00001554
   269e4:	.word	0x00001064
   269e8:	.word	0x00001624
   269ec:	.word	0x000014cc
   269f0:	.word	0x0000167c
   269f4:	.word	0x00001618
   269f8:	.word	0x00001458
   269fc:	.word	0x0000149c
   26a00:	.word	0x00001538
   26a04:	.word	0x000011e0
   26a08:	.word	0x0000111c
   26a0c:	.word	0x0000118c
   26a10:	.word	0x000010f8
   26a14:	.word	0x00001158
   26a18:	.word	0x00001394
   26a1c:	.word	0x000010bc
   26a20:	.word	0x000011c8
   26a24:	.word	0x00001070
   26a28:	.word	0x000013d4
   26a2c:	.word	0x00001004
   26a30:	.word	0x00000fd4
   26a34:	.word	0x00001034
   26a38:	.word	0x00001134
   26a3c:	.word	0x00000f24
   26a40:	.word	0x00000f24
   26a44:	.word	0x00001094
   26a48:	.word	0x00001600
   26a4c:	.word	0x00001010
   26a50:	.word	0x00000fb8
   26a54:	.word	0x00001088
   26a58:	.word	0xfffffeb0
   26a5c:	.word	0x000013e0
   26a60:	.word	0x00000f58
   26a64:	.word	0x0000107c
   26a68:	.word	0x000014b4
   26a6c:	.word	0x000014a8
   26a70:	.word	0x00001508
   26a74:	.word	0x000014e4
   26a78:	.word	0x00000f68
   26a7c:	.word	0x000015a8
   26a80:	.word	0x00001568
   26a84:	.word	0x00000f94
   26a88:	.word	0x000012fc
   26a8c:	.word	0x000017a8
   26a90:	.word	0x00000e88
   26a94:	.word	0x00000e54
   26a98:	.word	0x00000e88
   26a9c:	.word	0x000016c4
   26aa0:	.word	0x00000f30
   26aa4:	.word	0x00001698
   26aa8:	.word	0x00000f08
   26aac:	.word	0x00001638
   26ab0:	.word	0x00001474
   26ab4:	.word	0x00001654
   26ab8:	.word	0x00001170
   26abc:	.word	0x00000ec4
   26ac0:	.word	0x00001254
   26ac4:	.word	0x00001298
   26ac8:	.word	0x00000ee0
   26acc:	.word	0x00001228
   26ad0:	.word	0x000012c4
   26ad4:	.word	0x00000ec4
   26ad8:	.word	0x00000e54
   26adc:	.word	0x000010a0
   26ae0:	.word	0x00000f30
   26ae4:	.word	0x00000f08
   26ae8:	.word	0x00000ee0
   26aec:	.word	0x00001270
   26af0:	.word	0x000011d4
   26af4:	.word	0x000013a0
   26af8:	.word	0x00001824
   26afc:	.word	0x00001808
   26b00:	.word	0x00000e1c
   26b04:	.word	0x0000024c
   26b08:	.word	0x0000152c
   26b0c:	ldrb	r0, [lr, #5]
   26b10:	ldr	r1, [pc, #4088]	; 27b10 <sfbpf_lex+0x153c>
   26b14:	ldr	r1, [pc, r1]
   26b18:	strb	r0, [r6]
   26b1c:	ldr	r2, [lr, #16]
   26b20:	str	r1, [sp, #8]
   26b24:	ldr	r1, [lr, #20]
   26b28:	str	r2, [sp, #32]
   26b2c:	ldr	r3, [r2, r1, lsl #2]
   26b30:	str	r1, [sp, #28]
   26b34:	ldr	r0, [r3, #44]	; 0x2c
   26b38:	cmp	r0, #0
   26b3c:	beq	26b48 <sfbpf_lex+0x574>
   26b40:	ldr	r1, [lr, #36]	; 0x24
   26b44:	b	26b74 <sfbpf_lex+0x5a0>
   26b48:	ldr	r0, [r3, #16]
   26b4c:	str	r0, [lr, #36]	; 0x24
   26b50:	str	r0, [sp, #24]
   26b54:	ldr	r0, [lr, #8]
   26b58:	str	r0, [r3]
   26b5c:	mov	r3, r2
   26b60:	ldr	r0, [r2, r1, lsl #2]
   26b64:	mov	r2, #1
   26b68:	str	r2, [r0, #44]	; 0x2c
   26b6c:	ldr	r3, [r3, r1, lsl #2]
   26b70:	ldr	r1, [sp, #24]
   26b74:	ldr	r0, [r3, #4]
   26b78:	str	r3, [sp, #20]
   26b7c:	str	r1, [sp, #24]
   26b80:	add	r2, r0, r1
   26b84:	ldr	r1, [lr, #24]
   26b88:	ldr	r3, [pc, #4080]	; 27b80 <sfbpf_lex+0x15ac>
   26b8c:	ldr	r3, [pc, r3]
   26b90:	cmp	r1, r2
   26b94:	str	r3, [sp, #40]	; 0x28
   26b98:	bls	272e0 <sfbpf_lex+0xd0c>
   26b9c:	ldr	r3, [pc, #4092]	; 27ba0 <sfbpf_lex+0x15cc>
   26ba0:	add	r2, r2, #1
   26ba4:	cmp	r1, r2
   26ba8:	add	r3, pc, r3
   26bac:	bhi	2807c <sfbpf_lex+0x1aa8>
   26bb0:	ldr	r2, [sp, #40]	; 0x28
   26bb4:	str	r1, [sp, #12]
   26bb8:	sub	r1, r1, r2
   26bbc:	ldr	r2, [sp, #20]
   26bc0:	ldr	r2, [r2, #40]	; 0x28
   26bc4:	cmp	r2, #0
   26bc8:	beq	26c10 <sfbpf_lex+0x63c>
   26bcc:	sub	r2, r1, #1
   26bd0:	str	r1, [sp, #24]
   26bd4:	str	r2, [sp, #16]
   26bd8:	cmp	r2, #1
   26bdc:	ldr	r2, [sp, #20]
   26be0:	blt	26ddc <sfbpf_lex+0x808>
   26be4:	ldr	ip, [sp, #40]	; 0x28
   26be8:	ldr	r2, [sp, #12]
   26bec:	mov	lr, #0
   26bf0:	mvn	r1, ip
   26bf4:	add	r3, r1, r2
   26bf8:	mov	r1, r2
   26bfc:	mov	r2, r3
   26c00:	cmp	r3, #16
   26c04:	bcs	26c1c <sfbpf_lex+0x648>
   26c08:	mov	r3, ip
   26c0c:	b	26d40 <sfbpf_lex+0x76c>
   26c10:	cmp	r1, #1
   26c14:	beq	27288 <sfbpf_lex+0xcb4>
   26c18:	b	274ac <sfbpf_lex+0xed8>
   26c1c:	sub	r1, r1, #1
   26c20:	cmp	r0, r1
   26c24:	bcs	26c54 <sfbpf_lex+0x680>
   26c28:	ldr	r1, [sp, #24]
   26c2c:	mov	r3, r2
   26c30:	ldr	r2, [sp, #40]	; 0x28
   26c34:	add	r1, r0, r1
   26c38:	sub	r1, r1, #1
   26c3c:	cmp	r2, r1
   26c40:	mov	r2, r3
   26c44:	bcs	26c54 <sfbpf_lex+0x680>
   26c48:	ldr	ip, [sp, #40]	; 0x28
   26c4c:	mov	r3, ip
   26c50:	b	26d3c <sfbpf_lex+0x768>
   26c54:	bic	lr, r2, #15
   26c58:	mov	r1, #1
   26c5c:	str	r2, [sp]
   26c60:	mov	r3, #0
   26c64:	sub	r4, lr, #16
   26c68:	add	r2, r1, r4, lsr #4
   26c6c:	cmp	r4, #48	; 0x30
   26c70:	ldr	r4, [sp, #40]	; 0x28
   26c74:	and	r1, r2, #3
   26c78:	str	r1, [sp, #4]
   26c7c:	bcc	26ce8 <sfbpf_lex+0x714>
   26c80:	ldr	r1, [sp, #4]
   26c84:	mov	r3, #0
   26c88:	sub	r2, r1, r2
   26c8c:	add	r4, r4, r3
   26c90:	mov	r7, #48	; 0x30
   26c94:	add	ip, r0, r3
   26c98:	adds	r2, r2, #4
   26c9c:	add	r3, r3, #64	; 0x40
   26ca0:	mov	r1, r4
   26ca4:	vld1.8	{d16-d17}, [r1], r7
   26ca8:	str	r1, [sp, #20]
   26cac:	mov	r1, ip
   26cb0:	vst1.8	{d16-d17}, [r1], r7
   26cb4:	add	r7, r4, #16
   26cb8:	add	r4, r4, #32
   26cbc:	vld1.8	{d16-d17}, [r7]
   26cc0:	add	r7, ip, #16
   26cc4:	vst1.8	{d16-d17}, [r7]
   26cc8:	add	r7, ip, #32
   26ccc:	vld1.8	{d16-d17}, [r4]
   26cd0:	ldr	r4, [sp, #40]	; 0x28
   26cd4:	vst1.8	{d16-d17}, [r7]
   26cd8:	ldr	r7, [sp, #20]
   26cdc:	vld1.8	{d16-d17}, [r7]
   26ce0:	vst1.8	{d16-d17}, [r1]
   26ce4:	bne	26c8c <sfbpf_lex+0x6b8>
   26ce8:	ldr	r7, [sp, #4]
   26cec:	ldr	r4, [pc, #4092]	; 27cf0 <sfbpf_lex+0x171c>
   26cf0:	cmp	r7, #0
   26cf4:	add	r4, pc, r4
   26cf8:	beq	26d1c <sfbpf_lex+0x748>
   26cfc:	ldr	r1, [sp, #40]	; 0x28
   26d00:	add	r2, r0, r3
   26d04:	add	r3, r1, r3
   26d08:	rsb	r1, r7, #0
   26d0c:	vld1.8	{d16-d17}, [r3]!
   26d10:	adds	r1, r1, #1
   26d14:	vst1.8	{d16-d17}, [r2]!
   26d18:	bcc	26d0c <sfbpf_lex+0x738>
   26d1c:	ldr	r2, [sp]
   26d20:	ldr	r7, [pc, #4092]	; 27d24 <sfbpf_lex+0x1750>
   26d24:	cmp	r2, lr
   26d28:	add	r7, pc, r7
   26d2c:	beq	26db4 <sfbpf_lex+0x7e0>
   26d30:	ldr	ip, [sp, #40]	; 0x28
   26d34:	add	r0, r0, lr
   26d38:	add	r3, ip, lr
   26d3c:	ldr	r1, [sp, #12]
   26d40:	sub	r1, r1, lr
   26d44:	ands	r2, r2, #3
   26d48:	sub	r1, r1, ip
   26d4c:	sub	ip, r1, #2
   26d50:	beq	26d68 <sfbpf_lex+0x794>
   26d54:	ldrb	r1, [r3], #1
   26d58:	subs	r2, r2, #1
   26d5c:	add	lr, lr, #1
   26d60:	strb	r1, [r0], #1
   26d64:	bne	26d54 <sfbpf_lex+0x780>
   26d68:	cmp	ip, #3
   26d6c:	bcc	26db4 <sfbpf_lex+0x7e0>
   26d70:	ldr	r1, [sp, #40]	; 0x28
   26d74:	ldr	r2, [sp, #12]
   26d78:	add	r1, lr, r1
   26d7c:	sub	r1, r1, r2
   26d80:	add	r1, r1, #1
   26d84:	ldrb	r2, [r3]
   26d88:	adds	r1, r1, #4
   26d8c:	strb	r2, [r0]
   26d90:	ldrb	r2, [r3, #1]
   26d94:	strb	r2, [r0, #1]
   26d98:	ldrb	r2, [r3, #2]
   26d9c:	strb	r2, [r0, #2]
   26da0:	ldrb	r2, [r3, #3]
   26da4:	add	r3, r3, #4
   26da8:	strb	r2, [r0, #3]
   26dac:	add	r0, r0, #4
   26db0:	bne	26d84 <sfbpf_lex+0x7b0>
   26db4:	ldr	r0, [sp, #28]
   26db8:	ldr	r1, [sp, #32]
   26dbc:	ldr	r2, [r1, r0, lsl #2]
   26dc0:	ldr	lr, [pc, #4084]	; 27dbc <sfbpf_lex+0x17e8>
   26dc4:	ldr	ip, [pc, #4084]	; 27dc0 <sfbpf_lex+0x17ec>
   26dc8:	ldr	r3, [pc, #4084]	; 27dc4 <sfbpf_lex+0x17f0>
   26dcc:	ldr	r1, [sp, #24]
   26dd0:	add	lr, pc, lr
   26dd4:	add	ip, pc, ip
   26dd8:	add	r3, pc, r3
   26ddc:	ldr	r0, [r2, #44]	; 0x2c
   26de0:	cmp	r0, #2
   26de4:	bne	26e4c <sfbpf_lex+0x878>
   26de8:	mov	r0, #0
   26dec:	str	r0, [lr, #36]	; 0x24
   26df0:	str	r0, [r2, #16]
   26df4:	ldr	r0, [sp, #16]
   26df8:	cmp	r0, #0
   26dfc:	bne	2715c <sfbpf_lex+0xb88>
   26e00:	ldr	r0, [lr, #8]
   26e04:	mov	r4, lr
   26e08:	mov	r7, r3
   26e0c:	bl	283b4 <sfbpf_restart>
   26e10:	mov	lr, r4
   26e14:	ldr	ip, [pc, #4084]	; 27e10 <sfbpf_lex+0x183c>
   26e18:	mov	r3, r7
   26e1c:	ldr	r7, [pc, #4092]	; 27e20 <sfbpf_lex+0x184c>
   26e20:	ldr	r4, [pc, #4092]	; 27e24 <sfbpf_lex+0x1850>
   26e24:	mov	r1, #1
   26e28:	ldr	r0, [lr, #16]
   26e2c:	ldr	r2, [lr, #36]	; 0x24
   26e30:	add	ip, pc, ip
   26e34:	add	r7, pc, r7
   26e38:	add	r4, pc, r4
   26e3c:	str	r0, [sp, #32]
   26e40:	ldr	r0, [lr, #20]
   26e44:	str	r0, [sp, #28]
   26e48:	b	27174 <sfbpf_lex+0xba0>
   26e4c:	ldr	r3, [r2, #12]
   26e50:	mov	ip, r2
   26e54:	sub	r2, r3, r1
   26e58:	cmp	r2, #0
   26e5c:	ble	26e68 <sfbpf_lex+0x894>
   26e60:	ldr	r0, [sp, #28]
   26e64:	b	26f0c <sfbpf_lex+0x938>
   26e68:	ldr	r1, [sp, #12]
   26e6c:	str	r1, [sp, #28]
   26e70:	ldr	r1, [ip, #20]
   26e74:	cmp	r1, #0
   26e78:	beq	2808c <sfbpf_lex+0x1ab8>
   26e7c:	ldr	r4, [ip, #4]
   26e80:	cmp	r3, #0
   26e84:	ble	26e90 <sfbpf_lex+0x8bc>
   26e88:	lsl	r1, r3, #1
   26e8c:	b	26e9c <sfbpf_lex+0x8c8>
   26e90:	asr	r1, r3, #31
   26e94:	add	r1, r3, r1, lsr #29
   26e98:	add	r1, r3, r1, asr #3
   26e9c:	str	r1, [ip, #12]
   26ea0:	add	r1, r1, #2
   26ea4:	mov	r0, r4
   26ea8:	mov	r7, ip
   26eac:	bl	e04 <realloc@plt>
   26eb0:	cmp	r0, #0
   26eb4:	str	r0, [r7, #4]
   26eb8:	beq	28094 <sfbpf_lex+0x1ac0>
   26ebc:	ldr	r1, [sp, #28]
   26ec0:	ldr	lr, [pc, #4084]	; 27ebc <sfbpf_lex+0x18e8>
   26ec4:	sub	r1, r1, r4
   26ec8:	add	lr, pc, lr
   26ecc:	add	r0, r0, r1
   26ed0:	str	r0, [lr, #24]
   26ed4:	str	r0, [sp, #28]
   26ed8:	ldr	r1, [lr, #16]
   26edc:	ldr	r0, [lr, #20]
   26ee0:	ldr	ip, [r1, r0, lsl #2]
   26ee4:	str	r1, [sp, #32]
   26ee8:	ldr	r1, [sp, #24]
   26eec:	ldr	r3, [ip, #12]
   26ef0:	ldr	r7, [pc, #4088]	; 27ef0 <sfbpf_lex+0x191c>
   26ef4:	ldr	r4, [pc, #4088]	; 27ef4 <sfbpf_lex+0x1920>
   26ef8:	sub	r2, r3, r1
   26efc:	add	r7, pc, r7
   26f00:	add	r4, pc, r4
   26f04:	cmp	r2, #1
   26f08:	blt	26e70 <sfbpf_lex+0x89c>
   26f0c:	mov	r3, r0
   26f10:	ldr	r0, [ip, #24]
   26f14:	ldr	r1, [sp, #32]
   26f18:	cmp	r2, #8192	; 0x2000
   26f1c:	movge	r2, #8192	; 0x2000
   26f20:	str	r2, [sp, #20]
   26f24:	cmp	r0, #0
   26f28:	beq	26fec <sfbpf_lex+0xa18>
   26f2c:	ldr	r0, [sp, #40]	; 0x28
   26f30:	ldr	r1, [sp, #12]
   26f34:	mov	r4, #0
   26f38:	mvn	r0, r0
   26f3c:	add	r0, r0, r1
   26f40:	str	r0, [sp, #40]	; 0x28
   26f44:	ldr	r0, [lr, #8]
   26f48:	bl	f30 <getc@plt>
   26f4c:	cmn	r0, #1
   26f50:	cmpne	r0, #10
   26f54:	beq	26f90 <sfbpf_lex+0x9bc>
   26f58:	ldr	lr, [pc, #4084]	; 27f54 <sfbpf_lex+0x1980>
   26f5c:	add	lr, pc, lr
   26f60:	ldr	r1, [lr, #16]
   26f64:	ldr	r2, [lr, #20]
   26f68:	ldr	r1, [r1, r2, lsl #2]
   26f6c:	ldr	r2, [sp, #40]	; 0x28
   26f70:	ldr	r1, [r1, #4]
   26f74:	add	r1, r1, r2
   26f78:	ldr	r2, [sp, #20]
   26f7c:	strb	r0, [r1, r4]
   26f80:	add	r4, r4, #1
   26f84:	cmp	r4, r2
   26f88:	blt	26f44 <sfbpf_lex+0x970>
   26f8c:	b	26f98 <sfbpf_lex+0x9c4>
   26f90:	ldr	lr, [pc, #4072]	; 27f80 <sfbpf_lex+0x19ac>
   26f94:	add	lr, pc, lr
   26f98:	cmn	r0, #1
   26f9c:	beq	270f0 <sfbpf_lex+0xb1c>
   26fa0:	cmp	r0, #10
   26fa4:	bne	26fcc <sfbpf_lex+0x9f8>
   26fa8:	ldr	r0, [lr, #16]
   26fac:	ldr	r1, [lr, #20]
   26fb0:	ldr	r0, [r0, r1, lsl #2]
   26fb4:	ldr	r1, [sp, #16]
   26fb8:	ldr	r0, [r0, #4]
   26fbc:	add	r0, r0, r1
   26fc0:	mov	r1, #10
   26fc4:	strb	r1, [r0, r4]
   26fc8:	add	r4, r4, #1
   26fcc:	ldr	ip, [pc, #4080]	; 27fc4 <sfbpf_lex+0x19f0>
   26fd0:	mov	r2, r4
   26fd4:	ldr	r4, [pc, #4076]	; 27fc8 <sfbpf_lex+0x19f4>
   26fd8:	str	r2, [lr, #36]	; 0x24
   26fdc:	add	ip, pc, ip
   26fe0:	add	r4, pc, r4
   26fe4:	mov	r3, ip
   26fe8:	b	27124 <sfbpf_lex+0xb50>
   26fec:	str	r1, [sp, #32]
   26ff0:	str	r3, [sp, #28]
   26ff4:	bl	e88 <__errno_location@plt>
   26ff8:	mov	r1, #0
   26ffc:	str	r0, [sp, #40]	; 0x28
   27000:	str	r1, [r0]
   27004:	ldr	r0, [sp, #32]
   27008:	ldr	r1, [sp, #28]
   2700c:	ldr	r0, [r0, r1, lsl #2]
   27010:	ldr	r1, [sp, #16]
   27014:	ldr	r0, [r0, #4]
   27018:	add	r0, r0, r1
   2701c:	ldr	r1, [pc, #4040]	; 27fec <sfbpf_lex+0x1a18>
   27020:	ldr	r2, [sp, #20]
   27024:	add	r1, pc, r1
   27028:	ldr	r3, [r1, #8]
   2702c:	mov	r1, #1
   27030:	bl	e1c <fread@plt>
   27034:	ldr	lr, [pc, #4084]	; 28030 <sfbpf_lex+0x1a5c>
   27038:	mov	r2, r0
   2703c:	cmp	r0, #0
   27040:	add	lr, pc, lr
   27044:	str	r0, [lr, #36]	; 0x24
   27048:	ldr	ip, [pc, #4092]	; 2804c <sfbpf_lex+0x1a78>
   2704c:	add	ip, pc, ip
   27050:	mov	r3, ip
   27054:	ldr	ip, [pc, #4084]	; 28050 <sfbpf_lex+0x1a7c>
   27058:	add	ip, pc, ip
   2705c:	bne	2712c <sfbpf_lex+0xb58>
   27060:	ldr	r0, [lr, #8]
   27064:	bl	dd4 <ferror@plt>
   27068:	cmp	r0, #0
   2706c:	beq	272a0 <sfbpf_lex+0xccc>
   27070:	ldr	r1, [sp, #40]	; 0x28
   27074:	ldr	r0, [r1]
   27078:	cmp	r0, #4
   2707c:	bne	280b8 <sfbpf_lex+0x1ae4>
   27080:	mov	r0, #0
   27084:	mov	r4, r7
   27088:	str	r0, [r1]
   2708c:	ldr	r7, [pc, #4084]	; 28088 <sfbpf_lex+0x1ab4>
   27090:	add	r7, pc, r7
   27094:	ldr	r0, [r7, #8]
   27098:	bl	edc <clearerr@plt>
   2709c:	ldr	r0, [r7, #16]
   270a0:	ldr	r1, [r7, #20]
   270a4:	ldr	r3, [r7, #8]
   270a8:	ldr	r2, [sp, #20]
   270ac:	ldr	r0, [r0, r1, lsl #2]
   270b0:	ldr	r1, [sp, #16]
   270b4:	ldr	r0, [r0, #4]
   270b8:	add	r0, r0, r1
   270bc:	mov	r1, #1
   270c0:	bl	e1c <fread@plt>
   270c4:	str	r0, [r7, #36]	; 0x24
   270c8:	mov	lr, r7
   270cc:	mov	r7, r4
   270d0:	cmp	r0, #0
   270d4:	ldr	r4, [pc, #4072]	; 280c4 <sfbpf_lex+0x1af0>
   270d8:	add	r4, pc, r4
   270dc:	beq	27060 <sfbpf_lex+0xa8c>
   270e0:	ldr	ip, [pc, #4088]	; 280e0 <sfbpf_lex+0x1b0c>
   270e4:	mov	r2, r0
   270e8:	add	ip, pc, ip
   270ec:	b	26fe4 <sfbpf_lex+0xa10>
   270f0:	ldr	r0, [lr, #8]
   270f4:	bl	dd4 <ferror@plt>
   270f8:	ldr	lr, [pc, #4088]	; 280f8 <sfbpf_lex+0x1b24>
   270fc:	ldr	ip, [pc, #4088]	; 280fc <sfbpf_lex+0x1b28>
   27100:	mov	r2, r4
   27104:	ldr	r4, [pc, #4084]	; 28100 <sfbpf_lex+0x1b2c>
   27108:	cmp	r0, #0
   2710c:	add	ip, pc, ip
   27110:	add	lr, pc, lr
   27114:	add	r4, pc, r4
   27118:	mov	r3, ip
   2711c:	bne	280b8 <sfbpf_lex+0x1ae4>
   27120:	str	r2, [lr, #36]	; 0x24
   27124:	ldr	ip, [pc, #4088]	; 28124 <sfbpf_lex+0x1b50>
   27128:	add	ip, pc, ip
   2712c:	ldr	r1, [lr, #16]
   27130:	ldr	r0, [lr, #20]
   27134:	cmp	r2, #0
   27138:	str	r0, [sp, #28]
   2713c:	ldr	r0, [r1, r0, lsl #2]
   27140:	str	r1, [sp, #32]
   27144:	mov	r1, #0
   27148:	str	r2, [r0, #16]
   2714c:	bne	27174 <sfbpf_lex+0xba0>
   27150:	ldr	r0, [sp, #16]
   27154:	cmp	r0, #0
   27158:	beq	26e00 <sfbpf_lex+0x82c>
   2715c:	ldr	r0, [sp, #28]
   27160:	ldr	r1, [sp, #32]
   27164:	mov	r2, #0
   27168:	ldr	r0, [r1, r0, lsl #2]
   2716c:	mov	r1, #2
   27170:	str	r1, [r0, #44]	; 0x2c
   27174:	ldr	r0, [sp, #16]
   27178:	str	r1, [sp, #20]
   2717c:	str	r2, [sp, #40]	; 0x28
   27180:	ldr	r1, [sp, #28]
   27184:	add	r0, r2, r0
   27188:	ldr	r2, [sp, #32]
   2718c:	ldr	r1, [r2, r1, lsl #2]
   27190:	ldr	r2, [r1, #12]
   27194:	cmp	r0, r2
   27198:	ble	27220 <sfbpf_lex+0xc4c>
   2719c:	ldr	r2, [sp, #40]	; 0x28
   271a0:	mov	r3, r1
   271a4:	mov	r4, lr
   271a8:	add	r1, r0, r2, asr #1
   271ac:	ldr	r0, [r3, #4]
   271b0:	mov	r7, r1
   271b4:	bl	e04 <realloc@plt>
   271b8:	ldr	r2, [r4, #16]
   271bc:	ldr	ip, [r4, #20]
   271c0:	ldr	r1, [r2, ip, lsl #2]
   271c4:	str	r0, [r1, #4]
   271c8:	ldr	r0, [r2, ip, lsl #2]
   271cc:	ldr	r1, [r0, #4]
   271d0:	cmp	r1, #0
   271d4:	beq	280ac <sfbpf_lex+0x1ad8>
   271d8:	sub	r1, r7, #2
   271dc:	mov	lr, r4
   271e0:	str	r1, [r0, #12]
   271e4:	ldr	r0, [sp, #16]
   271e8:	ldr	r3, [r4, #36]	; 0x24
   271ec:	ldr	r1, [r2, ip, lsl #2]
   271f0:	str	r3, [sp, #40]	; 0x28
   271f4:	add	r0, r3, r0
   271f8:	ldr	r3, [pc, #3880]	; 28128 <sfbpf_lex+0x1b54>
   271fc:	ldr	r7, [pc, #3880]	; 2812c <sfbpf_lex+0x1b58>
   27200:	ldr	r4, [pc, #3880]	; 28130 <sfbpf_lex+0x1b5c>
   27204:	str	ip, [sp, #28]
   27208:	ldr	ip, [pc, #4092]	; 2820c <sfbpf_lex+0x1c38>
   2720c:	str	r2, [sp, #32]
   27210:	add	r3, pc, r3
   27214:	add	r7, pc, r7
   27218:	add	r4, pc, r4
   2721c:	add	ip, pc, ip
   27220:	str	r0, [lr, #36]	; 0x24
   27224:	ldr	r1, [r1, #4]
   27228:	str	r1, [sp, #16]
   2722c:	mov	r1, #0
   27230:	ldr	r2, [sp, #16]
   27234:	strb	r1, [r2, r0]
   27238:	ldr	r0, [sp, #24]
   2723c:	ldr	r1, [sp, #40]	; 0x28
   27240:	mov	r2, #0
   27244:	add	r0, r1, r0
   27248:	ldr	r1, [sp, #32]
   2724c:	str	r0, [sp, #40]	; 0x28
   27250:	ldr	r0, [sp, #28]
   27254:	ldr	r1, [r1, r0, lsl #2]
   27258:	ldr	r0, [sp, #40]	; 0x28
   2725c:	ldr	r1, [r1, #4]
   27260:	strb	r2, [r1, r0]
   27264:	ldr	r0, [sp, #28]
   27268:	ldr	r1, [sp, #32]
   2726c:	ldr	r0, [r1, r0, lsl #2]
   27270:	ldr	r1, [sp, #20]
   27274:	ldr	r0, [r0, #4]
   27278:	cmp	r1, #1
   2727c:	str	r0, [r3]
   27280:	str	r0, [sp, #40]	; 0x28
   27284:	bne	27484 <sfbpf_lex+0xeb0>
   27288:	ldr	r0, [sp, #40]	; 0x28
   2728c:	str	r0, [lr, #24]
   27290:	mov	r0, #146	; 0x92
   27294:	cmp	r0, #146	; 0x92
   27298:	bls	268b4 <sfbpf_lex+0x2e0>
   2729c:	b	280a0 <sfbpf_lex+0x1acc>
   272a0:	ldr	lr, [pc, #3932]	; 28204 <sfbpf_lex+0x1c30>
   272a4:	ldr	ip, [pc, #3932]	; 28208 <sfbpf_lex+0x1c34>
   272a8:	mov	r2, #0
   272ac:	add	lr, pc, lr
   272b0:	add	ip, pc, ip
   272b4:	b	26fe4 <sfbpf_lex+0xa10>
   272b8:	ldrb	r0, [lr, #5]
   272bc:	ldr	r2, [sp, #36]	; 0x24
   272c0:	strb	r0, [r6]
   272c4:	ldr	r0, [lr, #28]
   272c8:	ldr	r6, [lr, #32]
   272cc:	add	r0, r4, r0, lsl #1
   272d0:	ldrh	r0, [r0]
   272d4:	cmp	r0, #0
   272d8:	bne	26880 <sfbpf_lex+0x2ac>
   272dc:	b	26870 <sfbpf_lex+0x29c>
   272e0:	ldr	r0, [sp, #8]
   272e4:	ldr	r2, [sp, #40]	; 0x28
   272e8:	mvn	r0, r0
   272ec:	add	r1, r0, r6
   272f0:	add	r6, r2, r1
   272f4:	cmp	r1, #1
   272f8:	str	r6, [lr, #24]
   272fc:	ldrb	r0, [lr, #4]
   27300:	blt	273e4 <sfbpf_lex+0xe10>
   27304:	mov	ip, r2
   27308:	ldrb	r1, [ip]
   2730c:	cmp	r1, #0
   27310:	bne	27350 <sfbpf_lex+0xd7c>
   27314:	b	27358 <sfbpf_lex+0xd84>
   27318:	ldr	r7, [pc, #3784]	; 281e8 <sfbpf_lex+0x1c14>
   2731c:	ldr	r4, [pc, #3784]	; 281ec <sfbpf_lex+0x1c18>
   27320:	add	r7, pc, r7
   27324:	add	r4, pc, r4
   27328:	ldr	r0, [pc, #3776]	; 281f0 <sfbpf_lex+0x1c1c>
   2732c:	add	ip, ip, #1
   27330:	cmp	ip, r6
   27334:	add	r0, pc, r0
   27338:	add	r0, r0, r1, lsl #1
   2733c:	ldrsh	r0, [r0]
   27340:	bcs	273dc <sfbpf_lex+0xe08>
   27344:	ldrb	r1, [ip]
   27348:	cmp	r1, #0
   2734c:	beq	27358 <sfbpf_lex+0xd84>
   27350:	ldrb	r2, [r7, r1]
   27354:	b	2735c <sfbpf_lex+0xd88>
   27358:	mov	r2, #1
   2735c:	add	r1, r4, r0, lsl #1
   27360:	ldrh	r1, [r1]
   27364:	cmp	r1, #0
   27368:	add	r1, r8, r0, lsl #1
   2736c:	strne	r0, [lr, #28]
   27370:	strne	ip, [lr, #32]
   27374:	ldrsh	r1, [r1]
   27378:	add	r1, r1, r2
   2737c:	add	r3, r9, r1, lsl #1
   27380:	ldrsh	r3, [r3]
   27384:	cmp	r0, r3
   27388:	beq	27328 <sfbpf_lex+0xd54>
   2738c:	mov	r3, r2
   27390:	b	273b8 <sfbpf_lex+0xde4>
   27394:	add	r1, r8, r0, lsl #1
   27398:	uxth	r4, r0
   2739c:	ldrsh	r1, [r1]
   273a0:	uxtab	r1, r1, r3
   273a4:	add	r2, r9, r1, lsl #1
   273a8:	ldrh	r7, [r2]
   273ac:	uxtb	r2, r3
   273b0:	cmp	r4, r7
   273b4:	beq	27318 <sfbpf_lex+0xd44>
   273b8:	add	r0, r5, r0, lsl #1
   273bc:	movw	r1, #1434	; 0x59a
   273c0:	ldrsh	r0, [r0]
   273c4:	cmp	r0, r1
   273c8:	blt	27394 <sfbpf_lex+0xdc0>
   273cc:	ldr	r1, [pc, #3600]	; 281e4 <sfbpf_lex+0x1c10>
   273d0:	add	r1, pc, r1
   273d4:	ldrb	r3, [r1, r2]
   273d8:	b	27394 <sfbpf_lex+0xdc0>
   273dc:	ldr	ip, [pc, #3600]	; 281f4 <sfbpf_lex+0x1c20>
   273e0:	add	ip, pc, ip
   273e4:	ldr	r1, [pc, #3596]	; 281f8 <sfbpf_lex+0x1c24>
   273e8:	mov	r4, r7
   273ec:	add	r1, pc, r1
   273f0:	add	r1, r1, r0, lsl #1
   273f4:	ldrh	r1, [r1]
   273f8:	cmp	r1, #0
   273fc:	add	r1, r8, r0, lsl #1
   27400:	strne	r0, [lr, #28]
   27404:	strne	r6, [lr, #32]
   27408:	ldrsh	r1, [r1]
   2740c:	add	r1, r1, #1
   27410:	add	r2, r9, r1, lsl #1
   27414:	ldrsh	r2, [r2]
   27418:	cmp	r0, r2
   2741c:	beq	2744c <sfbpf_lex+0xe78>
   27420:	mov	r2, r0
   27424:	add	r1, r5, r2, lsl #1
   27428:	ldrh	r3, [r1]
   2742c:	sxth	r2, r3
   27430:	add	r1, r8, r2, lsl #1
   27434:	ldrsh	r1, [r1]
   27438:	add	r1, r1, #1
   2743c:	add	r7, r9, r1, lsl #1
   27440:	ldrh	r7, [r7]
   27444:	cmp	r3, r7
   27448:	bne	27424 <sfbpf_lex+0xe50>
   2744c:	add	r1, ip, r1, lsl #1
   27450:	ldr	r3, [sp, #40]	; 0x28
   27454:	mov	r7, r4
   27458:	ldr	r4, [pc, #3484]	; 281fc <sfbpf_lex+0x1c28>
   2745c:	ldrh	r1, [r1]
   27460:	mov	r2, r3
   27464:	add	r4, pc, r4
   27468:	cmp	r1, #0
   2746c:	beq	26854 <sfbpf_lex+0x280>
   27470:	movw	r2, #1433	; 0x599
   27474:	cmp	r1, r2
   27478:	mov	r2, r3
   2747c:	beq	26854 <sfbpf_lex+0x280>
   27480:	b	276cc <sfbpf_lex+0x10f8>
   27484:	cmp	r1, #0
   27488:	beq	275b8 <sfbpf_lex+0xfe4>
   2748c:	cmp	r1, #2
   27490:	bne	26770 <sfbpf_lex+0x19c>
   27494:	ldr	r0, [lr, #16]
   27498:	ldr	r2, [lr, #20]
   2749c:	ldr	r1, [lr, #36]	; 0x24
   274a0:	ldr	r0, [r0, r2, lsl #2]
   274a4:	str	r1, [sp, #24]
   274a8:	ldr	r0, [r0, #4]
   274ac:	ldr	r1, [sp, #24]
   274b0:	add	r6, r0, r1
   274b4:	ldr	r1, [sp, #40]	; 0x28
   274b8:	str	r6, [lr, #24]
   274bc:	ldrb	r0, [lr, #4]
   274c0:	cmp	r1, r6
   274c4:	mov	r2, r1
   274c8:	bcs	26854 <sfbpf_lex+0x280>
   274cc:	mov	ip, r1
   274d0:	ldrb	r1, [ip]
   274d4:	cmp	r1, #0
   274d8:	bne	27518 <sfbpf_lex+0xf44>
   274dc:	b	27520 <sfbpf_lex+0xf4c>
   274e0:	ldr	r7, [pc, #3388]	; 28224 <sfbpf_lex+0x1c50>
   274e4:	ldr	r4, [pc, #3388]	; 28228 <sfbpf_lex+0x1c54>
   274e8:	add	r7, pc, r7
   274ec:	add	r4, pc, r4
   274f0:	ldr	r0, [pc, #3380]	; 2822c <sfbpf_lex+0x1c58>
   274f4:	add	ip, ip, #1
   274f8:	cmp	ip, r6
   274fc:	add	r0, pc, r0
   27500:	add	r0, r0, r1, lsl #1
   27504:	ldrsh	r0, [r0]
   27508:	beq	275a4 <sfbpf_lex+0xfd0>
   2750c:	ldrb	r1, [ip]
   27510:	cmp	r1, #0
   27514:	beq	27520 <sfbpf_lex+0xf4c>
   27518:	ldrb	r2, [r7, r1]
   2751c:	b	27524 <sfbpf_lex+0xf50>
   27520:	mov	r2, #1
   27524:	add	r1, r4, r0, lsl #1
   27528:	ldrh	r1, [r1]
   2752c:	cmp	r1, #0
   27530:	add	r1, r8, r0, lsl #1
   27534:	strne	r0, [lr, #28]
   27538:	strne	ip, [lr, #32]
   2753c:	ldrsh	r1, [r1]
   27540:	add	r1, r1, r2
   27544:	add	r3, r9, r1, lsl #1
   27548:	ldrsh	r3, [r3]
   2754c:	cmp	r0, r3
   27550:	beq	274f0 <sfbpf_lex+0xf1c>
   27554:	mov	r3, r2
   27558:	b	27580 <sfbpf_lex+0xfac>
   2755c:	add	r1, r8, r0, lsl #1
   27560:	uxth	r4, r0
   27564:	ldrsh	r1, [r1]
   27568:	uxtab	r1, r1, r3
   2756c:	add	r2, r9, r1, lsl #1
   27570:	ldrh	r7, [r2]
   27574:	uxtb	r2, r3
   27578:	cmp	r4, r7
   2757c:	beq	274e0 <sfbpf_lex+0xf0c>
   27580:	add	r0, r5, r0, lsl #1
   27584:	movw	r1, #1434	; 0x59a
   27588:	ldrsh	r0, [r0]
   2758c:	cmp	r0, r1
   27590:	blt	2755c <sfbpf_lex+0xf88>
   27594:	ldr	r1, [pc, #3204]	; 28220 <sfbpf_lex+0x1c4c>
   27598:	add	r1, pc, r1
   2759c:	ldrb	r3, [r1, r2]
   275a0:	b	2755c <sfbpf_lex+0xf88>
   275a4:	ldr	r2, [sp, #40]	; 0x28
   275a8:	ldr	ip, [pc, #3200]	; 28230 <sfbpf_lex+0x1c5c>
   275ac:	add	ip, pc, ip
   275b0:	b	26854 <sfbpf_lex+0x280>
   275b4:	.word	0x00020384
   275b8:	ldr	r0, [sp, #8]
   275bc:	mvn	r0, r0
   275c0:	add	r1, r0, r6
   275c4:	ldr	r0, [sp, #40]	; 0x28
   275c8:	cmp	r1, #1
   275cc:	add	r6, r0, r1
   275d0:	str	r6, [lr, #24]
   275d4:	ldrb	r0, [lr, #4]
   275d8:	blt	267bc <sfbpf_lex+0x1e8>
   275dc:	ldr	ip, [sp, #40]	; 0x28
   275e0:	ldrb	r1, [ip]
   275e4:	cmp	r1, #0
   275e8:	bne	2762c <sfbpf_lex+0x1058>
   275ec:	b	27634 <sfbpf_lex+0x1060>
   275f0:	.word	0x000203e0
   275f4:	ldr	r7, [pc, #3096]	; 28214 <sfbpf_lex+0x1c40>
   275f8:	ldr	r4, [pc, #3096]	; 28218 <sfbpf_lex+0x1c44>
   275fc:	add	r7, pc, r7
   27600:	add	r4, pc, r4
   27604:	ldr	r0, [pc, #3088]	; 2821c <sfbpf_lex+0x1c48>
   27608:	add	ip, ip, #1
   2760c:	cmp	ip, r6
   27610:	add	r0, pc, r0
   27614:	add	r0, r0, r1, lsl #1
   27618:	ldrsh	r0, [r0]
   2761c:	bcs	276c0 <sfbpf_lex+0x10ec>
   27620:	ldrb	r1, [ip]
   27624:	cmp	r1, #0
   27628:	beq	27634 <sfbpf_lex+0x1060>
   2762c:	ldrb	r2, [r7, r1]
   27630:	b	27638 <sfbpf_lex+0x1064>
   27634:	mov	r2, #1
   27638:	add	r1, r4, r0, lsl #1
   2763c:	ldrh	r1, [r1]
   27640:	cmp	r1, #0
   27644:	add	r1, r8, r0, lsl #1
   27648:	strne	r0, [lr, #28]
   2764c:	strne	ip, [lr, #32]
   27650:	ldrsh	r1, [r1]
   27654:	add	r1, r1, r2
   27658:	add	r3, r9, r1, lsl #1
   2765c:	ldrsh	r3, [r3]
   27660:	cmp	r0, r3
   27664:	beq	27604 <sfbpf_lex+0x1030>
   27668:	mov	r3, r2
   2766c:	b	2769c <sfbpf_lex+0x10c8>
   27670:	.word	0x0001fa24
   27674:	.word	0x0001fa0c
   27678:	add	r1, r8, r0, lsl #1
   2767c:	uxth	r4, r0
   27680:	ldrsh	r1, [r1]
   27684:	uxtab	r1, r1, r3
   27688:	add	r2, r9, r1, lsl #1
   2768c:	ldrh	r7, [r2]
   27690:	uxtb	r2, r3
   27694:	cmp	r4, r7
   27698:	beq	275f4 <sfbpf_lex+0x1020>
   2769c:	add	r0, r5, r0, lsl #1
   276a0:	movw	r1, #1434	; 0x59a
   276a4:	ldrsh	r0, [r0]
   276a8:	cmp	r0, r1
   276ac:	blt	27678 <sfbpf_lex+0x10a4>
   276b0:	ldr	r1, [pc, #2904]	; 28210 <sfbpf_lex+0x1c3c>
   276b4:	add	r1, pc, r1
   276b8:	ldrb	r3, [r1, r2]
   276bc:	b	27678 <sfbpf_lex+0x10a4>
   276c0:	ldr	ip, [pc, #2668]	; 28134 <sfbpf_lex+0x1b60>
   276c4:	add	ip, pc, ip
   276c8:	b	267bc <sfbpf_lex+0x1e8>
   276cc:	add	r6, r6, #1
   276d0:	sxth	r0, r1
   276d4:	str	r6, [lr, #24]
   276d8:	b	267bc <sfbpf_lex+0x1e8>
   276dc:	ldr	r3, [lr, #12]
   276e0:	ldr	r1, [pc, #2796]	; 281d4 <sfbpf_lex+0x1c00>
   276e4:	mov	r2, #1
   276e8:	mov	r4, lr
   276ec:	ldr	r1, [pc, r1]
   276f0:	ldr	r0, [pc, #2784]	; 281d8 <sfbpf_lex+0x1c04>
   276f4:	ldr	r0, [pc, r0]
   276f8:	bl	e10 <fwrite@plt>
   276fc:	ldr	ip, [pc, #2776]	; 281dc <sfbpf_lex+0x1c08>
   27700:	mov	lr, r4
   27704:	ldr	r4, [pc, #2772]	; 281e0 <sfbpf_lex+0x1c0c>
   27708:	add	ip, pc, ip
   2770c:	add	r4, pc, r4
   27710:	b	26770 <sfbpf_lex+0x19c>
   27714:	ldr	r0, [pc, #2692]	; 281a0 <sfbpf_lex+0x1bcc>
   27718:	mov	r1, #1
   2771c:	ldr	r0, [pc, r0]
   27720:	str	r1, [r0]
   27724:	movw	r0, #291	; 0x123
   27728:	sub	sp, fp, #28
   2772c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27730:	.word	0x000053fc
   27734:	.word	0x000054f8
   27738:	.word	0x00009a66
   2773c:	.word	0x00006024
   27740:	.word	0x0000b82c
   27744:	.word	0x0000a926
   27748:	ldr	r0, [pc, #2592]	; 28170 <sfbpf_lex+0x1b9c>
   2774c:	mov	r1, #0
   27750:	ldr	r0, [pc, r0]
   27754:	str	r1, [r0]
   27758:	movw	r0, #291	; 0x123
   2775c:	sub	sp, fp, #28
   27760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27764:	movw	r0, #330	; 0x14a
   27768:	sub	sp, fp, #28
   2776c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27770:	mov	r0, #328	; 0x148
   27774:	sub	sp, fp, #28
   27778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2777c:	.word	0x000054c0
   27780:	.word	0x0000b7fc
   27784:	ldr	r0, [pc, #2576]	; 2819c <sfbpf_lex+0x1bc8>
   27788:	mov	r1, #13
   2778c:	ldr	r0, [pc, r0]
   27790:	str	r1, [r0]
   27794:	movw	r0, #291	; 0x123
   27798:	sub	sp, fp, #28
   2779c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277a0:	ldr	r0, [pc, #2568]	; 281b0 <sfbpf_lex+0x1bdc>
   277a4:	mov	r1, #16
   277a8:	ldr	r0, [pc, r0]
   277ac:	str	r1, [r0]
   277b0:	movw	r0, #291	; 0x123
   277b4:	sub	sp, fp, #28
   277b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277bc:	movw	r0, #307	; 0x133
   277c0:	sub	sp, fp, #28
   277c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277c8:	ldr	r0, [pc, #2524]	; 281ac <sfbpf_lex+0x1bd8>
   277cc:	mov	r1, #8
   277d0:	ldr	r0, [pc, r0]
   277d4:	str	r1, [r0]
   277d8:	movw	r0, #291	; 0x123
   277dc:	sub	sp, fp, #28
   277e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277e4:	movw	r0, #357	; 0x165
   277e8:	sub	sp, fp, #28
   277ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277f0:	ldr	r0, [pc, #2480]	; 281a8 <sfbpf_lex+0x1bd4>
   277f4:	mov	r1, #4
   277f8:	ldr	r0, [pc, r0]
   277fc:	str	r1, [r0]
   27800:	movw	r0, #291	; 0x123
   27804:	sub	sp, fp, #28
   27808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2780c:	mov	r0, #284	; 0x11c
   27810:	sub	sp, fp, #28
   27814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27818:	mov	r0, #308	; 0x134
   2781c:	sub	sp, fp, #28
   27820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27824:	.word	0x0000b71a
   27828:	ldr	r0, [pc, #2316]	; 2813c <sfbpf_lex+0x1b68>
   2782c:	ldr	r0, [pc, r0]
   27830:	add	r0, r0, #1
   27834:	bl	1f2e4 <pcap_ether_aton>
   27838:	ldr	r1, [pc, #2304]	; 28140 <sfbpf_lex+0x1b6c>
   2783c:	ldr	r1, [pc, r1]
   27840:	str	r0, [r1]
   27844:	movw	r0, #315	; 0x13b
   27848:	sub	sp, fp, #28
   2784c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27850:	.word	0x00020178
   27854:	ldr	r0, [pc, #2296]	; 28154 <sfbpf_lex+0x1b80>
   27858:	ldr	r0, [pc, r0]
   2785c:	bl	219c <sf_sdup>
   27860:	ldr	r1, [pc, #2288]	; 28158 <sfbpf_lex+0x1b84>
   27864:	ldr	r1, [pc, r1]
   27868:	str	r0, [r1]
   2786c:	movw	r0, #313	; 0x139
   27870:	sub	sp, fp, #28
   27874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27878:	movw	r0, #361	; 0x169
   2787c:	sub	sp, fp, #28
   27880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27884:	mov	r0, #324	; 0x144
   27888:	sub	sp, fp, #28
   2788c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27890:	.word	0x00020140
   27894:	movw	r0, #298	; 0x12a
   27898:	sub	sp, fp, #28
   2789c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278a0:	mov	r0, #292	; 0x124
   278a4:	sub	sp, fp, #28
   278a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278ac:	mov	r0, #300	; 0x12c
   278b0:	sub	sp, fp, #28
   278b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278b8:	mov	r0, #364	; 0x16c
   278bc:	sub	sp, fp, #28
   278c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278c4:	movw	r0, #297	; 0x129
   278c8:	sub	sp, fp, #28
   278cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278d0:	mov	r0, #360	; 0x168
   278d4:	sub	sp, fp, #28
   278d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278dc:	mov	r0, #320	; 0x140
   278e0:	sub	sp, fp, #28
   278e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278e8:	movw	r0, #335	; 0x14f
   278ec:	sub	sp, fp, #28
   278f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278f4:	movw	r0, #299	; 0x12b
   278f8:	sub	sp, fp, #28
   278fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27900:	movw	r0, #271	; 0x10f
   27904:	sub	sp, fp, #28
   27908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2790c:	mov	r0, #272	; 0x110
   27910:	sub	sp, fp, #28
   27914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27918:	movw	r0, #270	; 0x10e
   2791c:	sub	sp, fp, #28
   27920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27924:	movw	r0, #326	; 0x146
   27928:	sub	sp, fp, #28
   2792c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27930:	movw	r0, #295	; 0x127
   27934:	sub	sp, fp, #28
   27938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2793c:	movw	r0, #309	; 0x135
   27940:	sub	sp, fp, #28
   27944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27948:	movw	r0, #362	; 0x16a
   2794c:	sub	sp, fp, #28
   27950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27954:	movw	r0, #358	; 0x166
   27958:	sub	sp, fp, #28
   2795c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27960:	ldr	r0, [pc, #2108]	; 281a4 <sfbpf_lex+0x1bd0>
   27964:	mov	r1, #2
   27968:	ldr	r0, [pc, r0]
   2796c:	str	r1, [r0]
   27970:	movw	r0, #291	; 0x123
   27974:	sub	sp, fp, #28
   27978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2797c:	mov	r0, #352	; 0x160
   27980:	sub	sp, fp, #28
   27984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27988:	movw	r0, #266	; 0x10a
   2798c:	sub	sp, fp, #28
   27990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27994:	movw	r0, #329	; 0x149
   27998:	sub	sp, fp, #28
   2799c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279a0:	movw	r0, #306	; 0x132
   279a4:	sub	sp, fp, #28
   279a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279ac:	movw	r0, #279	; 0x117
   279b0:	sub	sp, fp, #28
   279b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279b8:	movw	r0, #353	; 0x161
   279bc:	sub	sp, fp, #28
   279c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279c4:	movw	r0, #333	; 0x14d
   279c8:	sub	sp, fp, #28
   279cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279d0:	movw	r0, #334	; 0x14e
   279d4:	sub	sp, fp, #28
   279d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279dc:	movw	r0, #345	; 0x159
   279e0:	sub	sp, fp, #28
   279e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279e8:	mov	r0, #336	; 0x150
   279ec:	sub	sp, fp, #28
   279f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279f4:	mov	r0, #356	; 0x164
   279f8:	sub	sp, fp, #28
   279fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a00:	movw	r0, #305	; 0x131
   27a04:	sub	sp, fp, #28
   27a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a0c:	mov	r0, #276	; 0x114
   27a10:	sub	sp, fp, #28
   27a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a18:	movw	r0, #354	; 0x162
   27a1c:	sub	sp, fp, #28
   27a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a24:	movw	r0, #302	; 0x12e
   27a28:	sub	sp, fp, #28
   27a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a30:	ldr	r0, [pc, #1872]	; 28188 <sfbpf_lex+0x1bb4>
   27a34:	mov	r1, #12
   27a38:	ldr	r0, [pc, r0]
   27a3c:	str	r1, [r0]
   27a40:	movw	r0, #291	; 0x123
   27a44:	sub	sp, fp, #28
   27a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a4c:	movw	r0, #346	; 0x15a
   27a50:	sub	sp, fp, #28
   27a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a58:	movw	r0, #286	; 0x11e
   27a5c:	sub	sp, fp, #28
   27a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a64:	mov	r0, #288	; 0x120
   27a68:	sub	sp, fp, #28
   27a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a70:	mov	r0, #304	; 0x130
   27a74:	sub	sp, fp, #28
   27a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a7c:	movw	r0, #318	; 0x13e
   27a80:	sub	sp, fp, #28
   27a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a88:	movw	r0, #294	; 0x126
   27a8c:	sub	sp, fp, #28
   27a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a94:	ldr	r0, [pc, #1820]	; 281b8 <sfbpf_lex+0x1be4>
   27a98:	ldr	r0, [pc, r0]
   27a9c:	b	27c6c <sfbpf_lex+0x1698>
   27aa0:	mov	r0, #348	; 0x15c
   27aa4:	sub	sp, fp, #28
   27aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27aac:	movw	r0, #327	; 0x147
   27ab0:	sub	sp, fp, #28
   27ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ab8:	movw	r0, #303	; 0x12f
   27abc:	sub	sp, fp, #28
   27ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ac4:	movw	r0, #275	; 0x113
   27ac8:	sub	sp, fp, #28
   27acc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ad0:	movw	r0, #267	; 0x10b
   27ad4:	sub	sp, fp, #28
   27ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27adc:	movw	r0, #259	; 0x103
   27ae0:	sub	sp, fp, #28
   27ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ae8:	ldr	r0, [pc, #1700]	; 28194 <sfbpf_lex+0x1bc0>
   27aec:	mov	r1, #17
   27af0:	ldr	r0, [pc, r0]
   27af4:	str	r1, [r0]
   27af8:	movw	r0, #291	; 0x123
   27afc:	sub	sp, fp, #28
   27b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b04:	movw	r0, #287	; 0x11f
   27b08:	sub	sp, fp, #28
   27b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b10:	.word	0x0001fec0
   27b14:	ldr	r0, [pc, #1648]	; 2818c <sfbpf_lex+0x1bb8>
   27b18:	mov	r1, #14
   27b1c:	ldr	r0, [pc, r0]
   27b20:	str	r1, [r0]
   27b24:	movw	r0, #291	; 0x123
   27b28:	sub	sp, fp, #28
   27b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b30:	ldr	r0, [pc, #1660]	; 281b4 <sfbpf_lex+0x1be0>
   27b34:	mov	r1, #32
   27b38:	ldr	r0, [pc, r0]
   27b3c:	str	r1, [r0]
   27b40:	movw	r0, #291	; 0x123
   27b44:	sub	sp, fp, #28
   27b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b4c:	movw	r0, #258	; 0x102
   27b50:	sub	sp, fp, #28
   27b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b58:	ldr	r0, [pc, #1584]	; 28190 <sfbpf_lex+0x1bbc>
   27b5c:	mov	r1, #15
   27b60:	ldr	r0, [pc, r0]
   27b64:	str	r1, [r0]
   27b68:	movw	r0, #291	; 0x123
   27b6c:	sub	sp, fp, #28
   27b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b74:	mov	r0, #33	; 0x21
   27b78:	sub	sp, fp, #28
   27b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b80:	.word	0x0001fe48
   27b84:	ldr	r0, [pc, #1548]	; 28198 <sfbpf_lex+0x1bc4>
   27b88:	mov	r1, #18
   27b8c:	ldr	r0, [pc, r0]
   27b90:	str	r1, [r0]
   27b94:	movw	r0, #291	; 0x123
   27b98:	sub	sp, fp, #28
   27b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ba0:	.word	0x0001fe2c
   27ba4:	mov	r0, #340	; 0x154
   27ba8:	sub	sp, fp, #28
   27bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27bb0:	movw	r0, #289	; 0x121
   27bb4:	sub	sp, fp, #28
   27bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27bbc:	vmov.i32	q8, #0	; 0x00000000
   27bc0:	add	r2, sp, #48	; 0x30
   27bc4:	add	r3, sp, #44	; 0x2c
   27bc8:	mov	r1, #0
   27bcc:	add	r0, r2, #8
   27bd0:	vst1.64	{d16-d17}, [r0]
   27bd4:	mov	r0, #0
   27bd8:	str	r0, [sp, #76]	; 0x4c
   27bdc:	str	r0, [sp, #72]	; 0x48
   27be0:	mov	r0, #10
   27be4:	str	r0, [sp, #52]	; 0x34
   27be8:	mov	r0, #4
   27bec:	str	r0, [sp, #48]	; 0x30
   27bf0:	ldr	r0, [pc, #1380]	; 2815c <sfbpf_lex+0x1b88>
   27bf4:	ldr	r0, [pc, r0]
   27bf8:	bl	f00 <getaddrinfo@plt>
   27bfc:	cmp	r0, #0
   27c00:	bne	28110 <sfbpf_lex+0x1b3c>
   27c04:	ldr	r0, [sp, #44]	; 0x2c
   27c08:	bl	ef4 <freeaddrinfo@plt>
   27c0c:	ldr	r0, [pc, #1356]	; 28160 <sfbpf_lex+0x1b8c>
   27c10:	ldr	r0, [pc, r0]
   27c14:	bl	219c <sf_sdup>
   27c18:	ldr	r1, [pc, #1348]	; 28164 <sfbpf_lex+0x1b90>
   27c1c:	ldr	r1, [pc, r1]
   27c20:	str	r0, [r1]
   27c24:	movw	r0, #314	; 0x13a
   27c28:	sub	sp, fp, #28
   27c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c30:	movw	r0, #290	; 0x122
   27c34:	sub	sp, fp, #28
   27c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c3c:	mov	r0, #268	; 0x10c
   27c40:	sub	sp, fp, #28
   27c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c48:	movw	r0, #274	; 0x112
   27c4c:	sub	sp, fp, #28
   27c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c54:	movw	r0, #351	; 0x15f
   27c58:	sub	sp, fp, #28
   27c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c60:	ldr	r0, [pc, #1368]	; 281c0 <sfbpf_lex+0x1bec>
   27c64:	ldr	r0, [pc, r0]
   27c68:	add	r0, r0, #1
   27c6c:	bl	219c <sf_sdup>
   27c70:	ldr	r1, [pc, #1348]	; 281bc <sfbpf_lex+0x1be8>
   27c74:	ldr	r1, [pc, r1]
   27c78:	str	r0, [r1]
   27c7c:	movw	r0, #311	; 0x137
   27c80:	sub	sp, fp, #28
   27c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c88:	mov	r0, #332	; 0x14c
   27c8c:	sub	sp, fp, #28
   27c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c94:	mov	r0, #296	; 0x128
   27c98:	sub	sp, fp, #28
   27c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ca0:	ldr	r0, [pc, #1168]	; 28138 <sfbpf_lex+0x1b64>
   27ca4:	ldr	r0, [pc, r0]
   27ca8:	ldrb	r0, [r0]
   27cac:	sub	sp, fp, #28
   27cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cb4:	movw	r0, #263	; 0x107
   27cb8:	sub	sp, fp, #28
   27cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cc0:	mov	r0, #260	; 0x104
   27cc4:	sub	sp, fp, #28
   27cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ccc:	movw	r0, #363	; 0x16b
   27cd0:	sub	sp, fp, #28
   27cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cd8:	movw	r0, #277	; 0x115
   27cdc:	sub	sp, fp, #28
   27ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ce4:	movw	r0, #273	; 0x111
   27ce8:	sub	sp, fp, #28
   27cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cf0:	.word	0x00004f60
   27cf4:	movw	r0, #293	; 0x125
   27cf8:	sub	sp, fp, #28
   27cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d00:	movw	r0, #338	; 0x152
   27d04:	sub	sp, fp, #28
   27d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d0c:	movw	r0, #285	; 0x11d
   27d10:	sub	sp, fp, #28
   27d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d18:	movw	r0, #349	; 0x15d
   27d1c:	sub	sp, fp, #28
   27d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d24:	.word	0x00004e2c
   27d28:	movw	r0, #321	; 0x141
   27d2c:	sub	sp, fp, #28
   27d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d34:	ldr	r0, [pc, #1092]	; 28180 <sfbpf_lex+0x1bac>
   27d38:	mov	r1, #10
   27d3c:	ldr	r0, [pc, r0]
   27d40:	str	r1, [r0]
   27d44:	movw	r0, #291	; 0x123
   27d48:	sub	sp, fp, #28
   27d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d50:	movw	r0, #323	; 0x143
   27d54:	sub	sp, fp, #28
   27d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d5c:	movw	r0, #350	; 0x15e
   27d60:	sub	sp, fp, #28
   27d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d68:	mov	r0, #61	; 0x3d
   27d6c:	sub	sp, fp, #28
   27d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d74:	movw	r0, #310	; 0x136
   27d78:	sub	sp, fp, #28
   27d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d80:	movw	r0, #319	; 0x13f
   27d84:	sub	sp, fp, #28
   27d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d8c:	movw	r0, #342	; 0x156
   27d90:	sub	sp, fp, #28
   27d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d98:	movw	r0, #355	; 0x163
   27d9c:	sub	sp, fp, #28
   27da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27da4:	movw	r0, #317	; 0x13d
   27da8:	sub	sp, fp, #28
   27dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27db0:	movw	r0, #265	; 0x109
   27db4:	sub	sp, fp, #28
   27db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27dbc:	.word	0x0001fb98
   27dc0:	.word	0x0000b1c0
   27dc4:	.word	0x0001fbfc
   27dc8:	mov	r0, #316	; 0x13c
   27dcc:	sub	sp, fp, #28
   27dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27dd4:	mov	r0, #280	; 0x118
   27dd8:	sub	sp, fp, #28
   27ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27de0:	movw	r0, #262	; 0x106
   27de4:	sub	sp, fp, #28
   27de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27dec:	mov	r0, #0
   27df0:	sub	sp, fp, #28
   27df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27df8:	movw	r0, #347	; 0x15b
   27dfc:	sub	sp, fp, #28
   27e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e04:	movw	r0, #269	; 0x10d
   27e08:	sub	sp, fp, #28
   27e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e10:	.word	0x0000b164
   27e14:	movw	r0, #325	; 0x145
   27e18:	sub	sp, fp, #28
   27e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e20:	.word	0x00004d20
   27e24:	.word	0x00004e1c
   27e28:	ldr	r0, [pc, #796]	; 2814c <sfbpf_lex+0x1b78>
   27e2c:	ldr	r0, [pc, r0]
   27e30:	ldrb	r5, [r0]
   27e34:	cmp	r5, #48	; 0x30
   27e38:	bne	27fcc <sfbpf_lex+0x19f8>
   27e3c:	mov	r1, r0
   27e40:	ldrb	r5, [r1, #1]!
   27e44:	orr	r2, r5, #32
   27e48:	cmp	r2, #120	; 0x78
   27e4c:	bne	28054 <sfbpf_lex+0x1a80>
   27e50:	ldrb	r5, [r0, #2]!
   27e54:	mov	r4, #16
   27e58:	cmp	r5, #0
   27e5c:	bne	27fd8 <sfbpf_lex+0x1a04>
   27e60:	mov	r1, #0
   27e64:	b	28034 <sfbpf_lex+0x1a60>
   27e68:	ldr	r0, [pc, #724]	; 28144 <sfbpf_lex+0x1b70>
   27e6c:	ldr	r0, [pc, r0]
   27e70:	bl	1f2e4 <pcap_ether_aton>
   27e74:	ldr	r1, [pc, #716]	; 28148 <sfbpf_lex+0x1b74>
   27e78:	ldr	r1, [pc, r1]
   27e7c:	str	r0, [r1]
   27e80:	mov	r0, #312	; 0x138
   27e84:	sub	sp, fp, #28
   27e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e8c:	movw	r0, #331	; 0x14b
   27e90:	sub	sp, fp, #28
   27e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e98:	movw	r0, #337	; 0x151
   27e9c:	sub	sp, fp, #28
   27ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ea4:	movw	r0, #339	; 0x153
   27ea8:	sub	sp, fp, #28
   27eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27eb0:	movw	r0, #281	; 0x119
   27eb4:	sub	sp, fp, #28
   27eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ebc:	.word	0x0001faa0
   27ec0:	movw	r0, #359	; 0x167
   27ec4:	sub	sp, fp, #28
   27ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ecc:	mov	r0, #264	; 0x108
   27ed0:	sub	sp, fp, #28
   27ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ed8:	mov	r0, #344	; 0x158
   27edc:	sub	sp, fp, #28
   27ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ee4:	movw	r0, #341	; 0x155
   27ee8:	sub	sp, fp, #28
   27eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ef0:	.word	0x00004c58
   27ef4:	.word	0x00004d54
   27ef8:	ldr	r0, [pc, #636]	; 2817c <sfbpf_lex+0x1ba8>
   27efc:	mov	r1, #9
   27f00:	ldr	r0, [pc, r0]
   27f04:	str	r1, [r0]
   27f08:	movw	r0, #291	; 0x123
   27f0c:	sub	sp, fp, #28
   27f10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f14:	ldr	r0, [pc, #616]	; 28184 <sfbpf_lex+0x1bb0>
   27f18:	mov	r1, #11
   27f1c:	ldr	r0, [pc, r0]
   27f20:	str	r1, [r0]
   27f24:	movw	r0, #291	; 0x123
   27f28:	sub	sp, fp, #28
   27f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f30:	movw	r0, #261	; 0x105
   27f34:	sub	sp, fp, #28
   27f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f3c:	movw	r0, #343	; 0x157
   27f40:	sub	sp, fp, #28
   27f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f48:	movw	r0, #301	; 0x12d
   27f4c:	sub	sp, fp, #28
   27f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f54:	.word	0x0001fa0c
   27f58:	ldr	r0, [pc, #536]	; 28178 <sfbpf_lex+0x1ba4>
   27f5c:	mov	r1, #5
   27f60:	ldr	r0, [pc, r0]
   27f64:	str	r1, [r0]
   27f68:	movw	r0, #291	; 0x123
   27f6c:	sub	sp, fp, #28
   27f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f74:	movw	r0, #283	; 0x11b
   27f78:	sub	sp, fp, #28
   27f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f80:	.word	0x0001f9d4
   27f84:	ldr	r0, [pc, #488]	; 28174 <sfbpf_lex+0x1ba0>
   27f88:	mov	r1, #3
   27f8c:	ldr	r0, [pc, r0]
   27f90:	str	r1, [r0]
   27f94:	movw	r0, #291	; 0x123
   27f98:	sub	sp, fp, #28
   27f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fa0:	movw	r0, #282	; 0x11a
   27fa4:	sub	sp, fp, #28
   27fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fac:	movw	r0, #278	; 0x116
   27fb0:	sub	sp, fp, #28
   27fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fb8:	movw	r0, #322	; 0x142
   27fbc:	sub	sp, fp, #28
   27fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fc4:	.word	0x0001f9f8
   27fc8:	.word	0x00004c74
   27fcc:	mov	r4, #10
   27fd0:	cmp	r5, #0
   27fd4:	beq	27e60 <sfbpf_lex+0x188c>
   27fd8:	add	r6, r0, #1
   27fdc:	bl	e4c <__ctype_b_loc@plt>
   27fe0:	ldr	r0, [r0]
   27fe4:	mov	r1, #0
   27fe8:	b	28004 <sfbpf_lex+0x1a30>
   27fec:	.word	0x0001f944
   27ff0:	ldrb	r5, [r6], #1
   27ff4:	add	r2, r3, r2
   27ff8:	add	r1, r2, r1
   27ffc:	cmp	r5, #0
   28000:	beq	28034 <sfbpf_lex+0x1a60>
   28004:	uxtb	r2, r5
   28008:	mul	r1, r1, r4
   2800c:	add	r3, r0, r2, lsl #1
   28010:	ldrh	r7, [r3]
   28014:	mvn	r3, #47	; 0x2f
   28018:	tst	r7, #2048	; 0x800
   2801c:	bne	27ff0 <sfbpf_lex+0x1a1c>
   28020:	tst	r7, #512	; 0x200
   28024:	mvn	r3, #86	; 0x56
   28028:	mvneq	r3, #54	; 0x36
   2802c:	b	27ff0 <sfbpf_lex+0x1a1c>
   28030:	.word	0x0001f928
   28034:	ldr	r0, [pc, #276]	; 28150 <sfbpf_lex+0x1b7c>
   28038:	ldr	r0, [pc, r0]
   2803c:	str	r1, [r0]
   28040:	movw	r0, #291	; 0x123
   28044:	sub	sp, fp, #28
   28048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2804c:	.word	0x0001f988
   28050:	.word	0x0000af3c
   28054:	mov	r4, #8
   28058:	mov	r0, r1
   2805c:	cmp	r5, #0
   28060:	bne	27fd8 <sfbpf_lex+0x1a04>
   28064:	b	27e60 <sfbpf_lex+0x188c>
   28068:	ldr	r1, [pc, #248]	; 28168 <sfbpf_lex+0x1b94>
   2806c:	ldr	r1, [pc, r1]
   28070:	ldr	r0, [pc, #244]	; 2816c <sfbpf_lex+0x1b98>
   28074:	add	r0, pc, r0
   28078:	bl	214c <sf_bpf_error>
   2807c:	ldr	r0, [pc, #448]	; 28244 <sfbpf_lex+0x1c70>
   28080:	add	r0, pc, r0
   28084:	bl	285ac <yy_fatal_error>
   28088:	.word	0x0001f8d8
   2808c:	mov	r0, #0
   28090:	str	r0, [ip, #4]
   28094:	ldr	r0, [pc, #356]	; 28200 <sfbpf_lex+0x1c2c>
   28098:	add	r0, pc, r0
   2809c:	bl	285ac <yy_fatal_error>
   280a0:	ldr	r0, [pc, #396]	; 28234 <sfbpf_lex+0x1c60>
   280a4:	add	r0, pc, r0
   280a8:	bl	285ac <yy_fatal_error>
   280ac:	ldr	r0, [pc, #408]	; 2824c <sfbpf_lex+0x1c78>
   280b0:	add	r0, pc, r0
   280b4:	bl	285ac <yy_fatal_error>
   280b8:	ldr	r0, [pc, #392]	; 28248 <sfbpf_lex+0x1c74>
   280bc:	add	r0, pc, r0
   280c0:	bl	285ac <yy_fatal_error>
   280c4:	.word	0x00004b7c
   280c8:	ldr	r0, [pc, #252]	; 281cc <sfbpf_lex+0x1bf8>
   280cc:	ldr	r0, [pc, r0]
   280d0:	ldrb	r1, [r0]
   280d4:	ldr	r0, [pc, #244]	; 281d0 <sfbpf_lex+0x1bfc>
   280d8:	add	r0, pc, r0
   280dc:	bl	214c <sf_bpf_error>
   280e0:	.word	0x0001f8ec
   280e4:	ldr	r1, [pc, #216]	; 281c4 <sfbpf_lex+0x1bf0>
   280e8:	ldr	r1, [pc, r1]
   280ec:	ldr	r0, [pc, #212]	; 281c8 <sfbpf_lex+0x1bf4>
   280f0:	add	r0, pc, r0
   280f4:	bl	214c <sf_bpf_error>
   280f8:	.word	0x0001f858
   280fc:	.word	0x0001f8c8
   28100:	.word	0x00004b40
   28104:	ldr	r0, [pc, #300]	; 28238 <sfbpf_lex+0x1c64>
   28108:	add	r0, pc, r0
   2810c:	bl	285ac <yy_fatal_error>
   28110:	ldr	r1, [pc, #292]	; 2823c <sfbpf_lex+0x1c68>
   28114:	ldr	r1, [pc, r1]
   28118:	ldr	r0, [pc, #288]	; 28240 <sfbpf_lex+0x1c6c>
   2811c:	add	r0, pc, r0
   28120:	bl	214c <sf_bpf_error>
   28124:	.word	0x0000ae6c
   28128:	.word	0x0001f7c4
   2812c:	.word	0x00004940
   28130:	.word	0x00004a3c
   28134:	.word	0x0000a8d0
   28138:	.word	0x0001ed30
   2813c:	.word	0x0001f1a8
   28140:	.word	0x0001e884
   28144:	.word	0x0001eb68
   28148:	.word	0x0001e248
   2814c:	.word	0x0001eba8
   28150:	.word	0x0001e088
   28154:	.word	0x0001f17c
   28158:	.word	0x0001e85c
   2815c:	.word	0x0001ede0
   28160:	.word	0x0001edc4
   28164:	.word	0x0001e4a4
   28168:	.word	0x0001e968
   2816c:	.word	0x0000d974
   28170:	.word	0x0001e970
   28174:	.word	0x0001e134
   28178:	.word	0x0001e160
   2817c:	.word	0x0001e1c0
   28180:	.word	0x0001e384
   28184:	.word	0x0001e1a4
   28188:	.word	0x0001e688
   2818c:	.word	0x0001e5a4
   28190:	.word	0x0001e560
   28194:	.word	0x0001e5d0
   28198:	.word	0x0001e534
   2819c:	.word	0x0001e934
   281a0:	.word	0x0001e9a4
   281a4:	.word	0x0001e758
   281a8:	.word	0x0001e8c8
   281ac:	.word	0x0001e8f0
   281b0:	.word	0x0001e918
   281b4:	.word	0x0001e588
   281b8:	.word	0x0001ef3c
   281bc:	.word	0x0001e44c
   281c0:	.word	0x0001ed70
   281c4:	.word	0x0001e8ec
   281c8:	.word	0x0000d912
   281cc:	.word	0x0001e908
   281d0:	.word	0x0000d93c
   281d4:	.word	0x0001f2e4
   281d8:	.word	0x0001f2e0
   281dc:	.word	0x0000a88c
   281e0:	.word	0x00004548
   281e4:	.word	0x0000ab8e
   281e8:	.word	0x00004834
   281ec:	.word	0x00004930
   281f0:	.word	0x0000ac60
   281f4:	.word	0x0000abb4
   281f8:	.word	0x00004868
   281fc:	.word	0x000047f0
   28200:	.word	0x0000da96
   28204:	.word	0x0001f6bc
   28208:	.word	0x0001f724
   2820c:	.word	0x0000ad78
   28210:	.word	0x0000a8aa
   28214:	.word	0x00004558
   28218:	.word	0x00004654
   2821c:	.word	0x0000a984
   28220:	.word	0x0000a9c6
   28224:	.word	0x0000466c
   28228:	.word	0x00004768
   2822c:	.word	0x0000aa98
   28230:	.word	0x0000a9e8
   28234:	.word	0x0000d982
   28238:	.word	0x0000da9d
   2823c:	.word	0x0001e8c0
   28240:	.word	0x0000d8b6
   28244:	.word	0x0000da76
   28248:	.word	0x0000da9e
   2824c:	.word	0x0000dac7

00028250 <sfbpf__create_buffer>:
   28250:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28254:	add	fp, sp, #24
   28258:	mov	r5, r0
   2825c:	mov	r0, #48	; 0x30
   28260:	mov	r6, r1
   28264:	bl	e34 <malloc@plt>
   28268:	cmp	r0, #0
   2826c:	beq	28394 <sfbpf__create_buffer+0x144>
   28270:	mov	r4, r0
   28274:	str	r6, [r0, #12]
   28278:	add	r0, r6, #2
   2827c:	bl	e34 <malloc@plt>
   28280:	cmp	r0, #0
   28284:	str	r0, [r4, #4]
   28288:	beq	28394 <sfbpf__create_buffer+0x144>
   2828c:	mov	r6, #1
   28290:	mov	r7, r0
   28294:	str	r6, [r4, #20]
   28298:	bl	e88 <__errno_location@plt>
   2829c:	mov	r2, #0
   282a0:	ldr	r8, [r0]
   282a4:	mov	r9, r0
   282a8:	str	r2, [r4, #16]
   282ac:	str	r7, [r4, #8]
   282b0:	str	r6, [r4, #28]
   282b4:	strh	r2, [r7]
   282b8:	str	r2, [r4, #44]	; 0x2c
   282bc:	ldr	r1, [pc, #220]	; 283a0 <sfbpf__create_buffer+0x150>
   282c0:	add	r1, pc, r1
   282c4:	ldr	r0, [r1, #16]
   282c8:	cmp	r0, #0
   282cc:	beq	282d8 <sfbpf__create_buffer+0x88>
   282d0:	ldr	r2, [r1, #20]
   282d4:	ldr	r2, [r0, r2, lsl #2]
   282d8:	cmp	r2, r4
   282dc:	bne	28318 <sfbpf__create_buffer+0xc8>
   282e0:	ldr	r2, [r1, #20]
   282e4:	ldr	r3, [r0, r2, lsl #2]
   282e8:	ldr	r7, [r3, #16]
   282ec:	str	r7, [r1, #36]	; 0x24
   282f0:	ldr	r3, [r3, #8]
   282f4:	str	r3, [r1, #24]
   282f8:	ldr	r7, [pc, #164]	; 283a4 <sfbpf__create_buffer+0x154>
   282fc:	add	r7, pc, r7
   28300:	str	r3, [r7]
   28304:	ldr	r2, [r0, r2, lsl #2]
   28308:	ldr	r2, [r2]
   2830c:	str	r2, [r1, #8]
   28310:	ldrb	r2, [r3]
   28314:	strb	r2, [r1, #5]
   28318:	mov	r2, #1
   2831c:	cmp	r0, #0
   28320:	str	r2, [r4, #40]	; 0x28
   28324:	str	r5, [r4]
   28328:	beq	28338 <sfbpf__create_buffer+0xe8>
   2832c:	ldr	r1, [r1, #20]
   28330:	ldr	r0, [r0, r1, lsl #2]
   28334:	b	2833c <sfbpf__create_buffer+0xec>
   28338:	mov	r0, #0
   2833c:	cmp	r0, r4
   28340:	movne	r1, #1
   28344:	movne	r0, #0
   28348:	strne	r1, [r4, #32]
   2834c:	strne	r0, [r4, #36]	; 0x24
   28350:	cmp	r5, #0
   28354:	beq	28380 <sfbpf__create_buffer+0x130>
   28358:	mov	r0, r5
   2835c:	bl	ec4 <fileno@plt>
   28360:	bl	f18 <isatty@plt>
   28364:	cmp	r0, #0
   28368:	mov	r1, #0
   2836c:	movwgt	r1, #1
   28370:	mov	r0, r4
   28374:	str	r1, [r4, #24]
   28378:	str	r8, [r9]
   2837c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28380:	mov	r1, #0
   28384:	mov	r0, r4
   28388:	str	r1, [r4, #24]
   2838c:	str	r8, [r9]
   28390:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28394:	ldr	r0, [pc, #12]	; 283a8 <sfbpf__create_buffer+0x158>
   28398:	add	r0, pc, r0
   2839c:	bl	285ac <yy_fatal_error>
   283a0:	.word	0x0001e6a8
   283a4:	.word	0x0001e6d8
   283a8:	.word	0x0000d6c1

000283ac <sfbpf_wrap>:
   283ac:	mov	r0, #1
   283b0:	bx	lr

000283b4 <sfbpf_restart>:
   283b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   283b8:	add	fp, sp, #28
   283bc:	sub	sp, sp, #4
   283c0:	ldr	r4, [pc, #472]	; 285a0 <sfbpf_restart+0x1ec>
   283c4:	mov	r8, r0
   283c8:	add	r4, pc, r4
   283cc:	ldr	r5, [r4, #16]
   283d0:	cmp	r5, #0
   283d4:	beq	28430 <sfbpf_restart+0x7c>
   283d8:	ldr	r7, [r4, #20]
   283dc:	ldr	r6, [r5, r7, lsl #2]
   283e0:	cmp	r6, #0
   283e4:	bne	2847c <sfbpf_restart+0xc8>
   283e8:	ldr	r0, [r4, #44]	; 0x2c
   283ec:	sub	r1, r0, #1
   283f0:	cmp	r7, r1
   283f4:	bcc	28458 <sfbpf_restart+0xa4>
   283f8:	add	r6, r0, #8
   283fc:	mov	r0, r5
   28400:	lsl	r1, r6, #2
   28404:	bl	e04 <realloc@plt>
   28408:	cmp	r0, #0
   2840c:	str	r0, [r4, #16]
   28410:	beq	28594 <sfbpf_restart+0x1e0>
   28414:	ldr	r1, [r4, #44]	; 0x2c
   28418:	vmov.i32	q8, #0	; 0x00000000
   2841c:	str	r6, [r4, #44]	; 0x2c
   28420:	add	r0, r0, r1, lsl #2
   28424:	vst1.32	{d16-d17}, [r0]!
   28428:	vst1.32	{d16-d17}, [r0]
   2842c:	b	28458 <sfbpf_restart+0xa4>
   28430:	mov	r0, #4
   28434:	bl	e34 <malloc@plt>
   28438:	cmp	r0, #0
   2843c:	str	r0, [r4, #16]
   28440:	beq	28594 <sfbpf_restart+0x1e0>
   28444:	mov	r1, #0
   28448:	str	r1, [r0]
   2844c:	mov	r0, #1
   28450:	str	r1, [r4, #20]
   28454:	str	r0, [r4, #44]	; 0x2c
   28458:	ldr	r0, [r4, #8]
   2845c:	mov	r1, #16384	; 0x4000
   28460:	bl	28250 <sfbpf__create_buffer>
   28464:	ldr	r5, [r4, #16]
   28468:	ldr	r7, [r4, #20]
   2846c:	mov	r6, r0
   28470:	cmp	r5, #0
   28474:	str	r0, [r5, r7, lsl #2]
   28478:	beq	28590 <sfbpf_restart+0x1dc>
   2847c:	bl	e88 <__errno_location@plt>
   28480:	ldr	sl, [r0]
   28484:	ldr	r2, [pc, #280]	; 285a4 <sfbpf_restart+0x1f0>
   28488:	mov	r9, r0
   2848c:	cmp	r6, #0
   28490:	add	r2, pc, r2
   28494:	beq	284fc <sfbpf_restart+0x148>
   28498:	mov	r0, #0
   2849c:	str	r0, [r6, #16]
   284a0:	ldr	r1, [r6, #4]
   284a4:	strb	r0, [r1]
   284a8:	ldr	r1, [r6, #4]
   284ac:	strb	r0, [r1, #1]
   284b0:	str	r0, [r6, #44]	; 0x2c
   284b4:	mov	r0, #1
   284b8:	str	r0, [r6, #28]
   284bc:	ldr	r0, [r6, #4]
   284c0:	str	r0, [r6, #8]
   284c4:	ldr	r0, [r5, r7, lsl #2]
   284c8:	cmp	r0, r6
   284cc:	bne	284fc <sfbpf_restart+0x148>
   284d0:	ldr	r0, [r5, r7, lsl #2]
   284d4:	ldr	r1, [r0, #16]
   284d8:	str	r1, [r4, #36]	; 0x24
   284dc:	ldr	r0, [r0, #8]
   284e0:	str	r0, [r2]
   284e4:	str	r0, [r4, #24]
   284e8:	ldr	r1, [r5, r7, lsl #2]
   284ec:	ldr	r1, [r1]
   284f0:	str	r1, [r4, #8]
   284f4:	ldrb	r0, [r0]
   284f8:	strb	r0, [r4, #5]
   284fc:	mov	r0, #1
   28500:	str	r0, [r6, #40]	; 0x28
   28504:	str	r8, [r6]
   28508:	ldr	r1, [r5, r7, lsl #2]
   2850c:	cmp	r1, r6
   28510:	movne	r1, #0
   28514:	strne	r0, [r6, #32]
   28518:	strne	r1, [r6, #36]	; 0x24
   2851c:	cmp	r8, #0
   28520:	beq	28550 <sfbpf_restart+0x19c>
   28524:	mov	r0, r8
   28528:	mov	r5, r2
   2852c:	bl	ec4 <fileno@plt>
   28530:	bl	f18 <isatty@plt>
   28534:	mov	r2, r5
   28538:	ldr	r5, [r4, #16]
   2853c:	ldr	r7, [r4, #20]
   28540:	cmp	r0, #0
   28544:	mov	r1, #0
   28548:	movwgt	r1, #1
   2854c:	b	28554 <sfbpf_restart+0x1a0>
   28550:	mov	r1, #0
   28554:	str	r1, [r6, #24]
   28558:	str	sl, [r9]
   2855c:	ldr	r0, [r5, r7, lsl #2]
   28560:	ldr	r1, [r0, #16]
   28564:	str	r1, [r4, #36]	; 0x24
   28568:	ldr	r0, [r0, #8]
   2856c:	str	r0, [r2]
   28570:	str	r0, [r4, #24]
   28574:	ldr	r1, [r5, r7, lsl #2]
   28578:	ldr	r1, [r1]
   2857c:	str	r1, [r4, #8]
   28580:	ldrb	r0, [r0]
   28584:	strb	r0, [r4, #5]
   28588:	sub	sp, fp, #28
   2858c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28590:	udf	#65006	; 0xfdee
   28594:	ldr	r0, [pc, #12]	; 285a8 <sfbpf_restart+0x1f4>
   28598:	add	r0, pc, r0
   2859c:	bl	285ac <yy_fatal_error>
   285a0:	.word	0x0001e5a0
   285a4:	.word	0x0001e544
   285a8:	.word	0x0000d60d

000285ac <yy_fatal_error>:
   285ac:	push	{fp, lr}
   285b0:	mov	fp, sp
   285b4:	mov	r2, r0
   285b8:	ldr	r0, [pc, #24]	; 285d8 <yy_fatal_error+0x2c>
   285bc:	ldr	r0, [pc, r0]
   285c0:	ldr	r0, [r0]
   285c4:	ldr	r1, [pc, #16]	; 285dc <yy_fatal_error+0x30>
   285c8:	add	r1, pc, r1
   285cc:	bl	e7c <fprintf@plt>
   285d0:	mov	r0, #2
   285d4:	bl	e58 <exit@plt>
   285d8:	.word	0x0001daf0
   285dc:	.word	0x000007b1

000285e0 <sfbpf__switch_to_buffer>:
   285e0:	push	{r4, r5, r6, sl, fp, lr}
   285e4:	add	fp, sp, #16
   285e8:	ldr	r5, [pc, #292]	; 28714 <sfbpf__switch_to_buffer+0x134>
   285ec:	mov	r4, r0
   285f0:	add	r5, pc, r5
   285f4:	ldr	r0, [r5, #16]
   285f8:	cmp	r0, #0
   285fc:	beq	286cc <sfbpf__switch_to_buffer+0xec>
   28600:	ldr	r1, [r5, #44]	; 0x2c
   28604:	ldr	r2, [r5, #20]
   28608:	sub	r3, r1, #1
   2860c:	cmp	r2, r3
   28610:	bcc	28644 <sfbpf__switch_to_buffer+0x64>
   28614:	add	r6, r1, #8
   28618:	lsl	r1, r6, #2
   2861c:	bl	e04 <realloc@plt>
   28620:	cmp	r0, #0
   28624:	str	r0, [r5, #16]
   28628:	beq	28708 <sfbpf__switch_to_buffer+0x128>
   2862c:	ldr	r1, [r5, #44]	; 0x2c
   28630:	vmov.i32	q8, #0	; 0x00000000
   28634:	str	r6, [r5, #44]	; 0x2c
   28638:	add	r1, r0, r1, lsl #2
   2863c:	vst1.32	{d16-d17}, [r1]!
   28640:	vst1.32	{d16-d17}, [r1]
   28644:	clz	r1, r0
   28648:	lsr	r2, r1, #5
   2864c:	ldr	r1, [r5, #20]
   28650:	ldr	r1, [r0, r1, lsl #2]
   28654:	cmp	r1, r4
   28658:	beq	286c8 <sfbpf__switch_to_buffer+0xe8>
   2865c:	ldr	r1, [r5, #20]
   28660:	cmp	r2, #0
   28664:	bne	28694 <sfbpf__switch_to_buffer+0xb4>
   28668:	ldr	r2, [r0, r1, lsl #2]
   2866c:	cmp	r2, #0
   28670:	beq	28694 <sfbpf__switch_to_buffer+0xb4>
   28674:	ldr	r2, [r5, #24]
   28678:	ldrb	r3, [r5, #5]
   2867c:	strb	r3, [r2]
   28680:	ldr	r3, [r0, r1, lsl #2]
   28684:	str	r2, [r3, #8]
   28688:	ldr	r2, [r0, r1, lsl #2]
   2868c:	ldr	r3, [r5, #36]	; 0x24
   28690:	str	r3, [r2, #16]
   28694:	str	r4, [r0, r1, lsl #2]
   28698:	ldr	r2, [r4, #16]
   2869c:	str	r2, [r5, #36]	; 0x24
   286a0:	ldr	r2, [r4, #8]
   286a4:	ldr	r3, [pc, #112]	; 2871c <sfbpf__switch_to_buffer+0x13c>
   286a8:	add	r3, pc, r3
   286ac:	str	r2, [r5, #24]
   286b0:	str	r2, [r3]
   286b4:	ldr	r0, [r0, r1, lsl #2]
   286b8:	ldr	r0, [r0]
   286bc:	str	r0, [r5, #8]
   286c0:	ldrb	r0, [r2]
   286c4:	strb	r0, [r5, #5]
   286c8:	pop	{r4, r5, r6, sl, fp, pc}
   286cc:	mov	r0, #4
   286d0:	bl	e34 <malloc@plt>
   286d4:	cmp	r0, #0
   286d8:	str	r0, [r5, #16]
   286dc:	beq	28708 <sfbpf__switch_to_buffer+0x128>
   286e0:	mov	r2, #0
   286e4:	mov	r1, #1
   286e8:	str	r2, [r5, #20]
   286ec:	str	r2, [r0]
   286f0:	str	r1, [r5, #44]	; 0x2c
   286f4:	ldr	r1, [r5, #20]
   286f8:	ldr	r1, [r0, r1, lsl #2]
   286fc:	cmp	r1, r4
   28700:	bne	2865c <sfbpf__switch_to_buffer+0x7c>
   28704:	b	286c8 <sfbpf__switch_to_buffer+0xe8>
   28708:	ldr	r0, [pc, #8]	; 28718 <sfbpf__switch_to_buffer+0x138>
   2870c:	add	r0, pc, r0
   28710:	bl	285ac <yy_fatal_error>
   28714:	.word	0x0001e378
   28718:	.word	0x0000d499
   2871c:	.word	0x0001e32c

00028720 <sfbpf_alloc>:
   28720:	b	e34 <malloc@plt>

00028724 <sfbpf__delete_buffer>:
   28724:	cmp	r0, #0
   28728:	bxeq	lr
   2872c:	push	{r4, sl, fp, lr}
   28730:	add	fp, sp, #8
   28734:	ldr	r1, [pc, #92]	; 28798 <sfbpf__delete_buffer+0x74>
   28738:	mov	r4, r0
   2873c:	add	r1, pc, r1
   28740:	ldr	r0, [r1, #16]
   28744:	cmp	r0, #0
   28748:	beq	28788 <sfbpf__delete_buffer+0x64>
   2874c:	ldr	r2, [r1, #20]
   28750:	ldr	r2, [r0, r2, lsl #2]
   28754:	cmp	r2, r4
   28758:	bne	28768 <sfbpf__delete_buffer+0x44>
   2875c:	ldr	r1, [r1, #20]
   28760:	mov	r2, #0
   28764:	str	r2, [r0, r1, lsl #2]
   28768:	ldr	r0, [r4, #20]
   2876c:	cmp	r0, #0
   28770:	beq	2877c <sfbpf__delete_buffer+0x58>
   28774:	ldr	r0, [r4, #4]
   28778:	bl	dbc <free@plt>
   2877c:	mov	r0, r4
   28780:	pop	{r4, sl, fp, lr}
   28784:	b	dbc <free@plt>
   28788:	mov	r2, #0
   2878c:	cmp	r2, r4
   28790:	bne	28768 <sfbpf__delete_buffer+0x44>
   28794:	b	2875c <sfbpf__delete_buffer+0x38>
   28798:	.word	0x0001e22c

0002879c <sfbpf_free>:
   2879c:	b	dbc <free@plt>

000287a0 <sfbpf__flush_buffer>:
   287a0:	cmp	r0, #0
   287a4:	beq	28830 <sfbpf__flush_buffer+0x90>
   287a8:	mov	r3, #0
   287ac:	str	r3, [r0, #16]
   287b0:	ldr	r1, [r0, #4]
   287b4:	strb	r3, [r1]
   287b8:	ldr	r1, [r0, #4]
   287bc:	strb	r3, [r1, #1]
   287c0:	mov	r1, #1
   287c4:	str	r3, [r0, #44]	; 0x2c
   287c8:	str	r1, [r0, #28]
   287cc:	ldr	r1, [r0, #4]
   287d0:	str	r1, [r0, #8]
   287d4:	ldr	r1, [pc, #88]	; 28834 <sfbpf__flush_buffer+0x94>
   287d8:	add	r1, pc, r1
   287dc:	ldr	r2, [r1, #16]
   287e0:	cmp	r2, #0
   287e4:	beq	287f0 <sfbpf__flush_buffer+0x50>
   287e8:	ldr	r3, [r1, #20]
   287ec:	ldr	r3, [r2, r3, lsl #2]
   287f0:	cmp	r3, r0
   287f4:	bxne	lr
   287f8:	ldr	ip, [r1, #20]
   287fc:	ldr	r3, [r2, ip, lsl #2]
   28800:	ldr	r0, [r3, #16]
   28804:	str	r0, [r1, #36]	; 0x24
   28808:	ldr	r0, [r3, #8]
   2880c:	str	r0, [r1, #24]
   28810:	ldr	r3, [pc, #32]	; 28838 <sfbpf__flush_buffer+0x98>
   28814:	add	r3, pc, r3
   28818:	str	r0, [r3]
   2881c:	ldr	r2, [r2, ip, lsl #2]
   28820:	ldr	r2, [r2]
   28824:	str	r2, [r1, #8]
   28828:	ldrb	r0, [r0]
   2882c:	strb	r0, [r1, #5]
   28830:	bx	lr
   28834:	.word	0x0001e190
   28838:	.word	0x0001e1c0

0002883c <sfbpf_push_buffer_state>:
   2883c:	push	{r4, r5, r6, sl, fp, lr}
   28840:	add	fp, sp, #16
   28844:	cmp	r0, #0
   28848:	beq	2891c <sfbpf_push_buffer_state+0xe0>
   2884c:	ldr	r5, [pc, #276]	; 28968 <sfbpf_push_buffer_state+0x12c>
   28850:	mov	r4, r0
   28854:	add	r5, pc, r5
   28858:	ldr	r0, [r5, #16]
   2885c:	cmp	r0, #0
   28860:	beq	28920 <sfbpf_push_buffer_state+0xe4>
   28864:	ldr	r1, [r5, #44]	; 0x2c
   28868:	ldr	r2, [r5, #20]
   2886c:	sub	r3, r1, #1
   28870:	cmp	r2, r3
   28874:	bcc	288a8 <sfbpf_push_buffer_state+0x6c>
   28878:	add	r6, r1, #8
   2887c:	lsl	r1, r6, #2
   28880:	bl	e04 <realloc@plt>
   28884:	cmp	r0, #0
   28888:	str	r0, [r5, #16]
   2888c:	beq	2895c <sfbpf_push_buffer_state+0x120>
   28890:	ldr	r1, [r5, #44]	; 0x2c
   28894:	vmov.i32	q8, #0	; 0x00000000
   28898:	str	r6, [r5, #44]	; 0x2c
   2889c:	add	r1, r0, r1, lsl #2
   288a0:	vst1.32	{d16-d17}, [r1]!
   288a4:	vst1.32	{d16-d17}, [r1]
   288a8:	ldr	r1, [r5, #20]
   288ac:	ldr	r2, [r0, r1, lsl #2]
   288b0:	cmp	r2, #0
   288b4:	beq	288e8 <sfbpf_push_buffer_state+0xac>
   288b8:	ldr	r2, [r5, #24]
   288bc:	ldrb	r3, [r5, #5]
   288c0:	strb	r3, [r2]
   288c4:	ldr	r3, [r0, r1, lsl #2]
   288c8:	str	r2, [r3, #8]
   288cc:	ldr	r2, [r0, r1, lsl #2]
   288d0:	ldr	r3, [r5, #36]	; 0x24
   288d4:	str	r3, [r2, #16]
   288d8:	ldr	r2, [r0, r1, lsl #2]
   288dc:	cmp	r2, #0
   288e0:	addne	r1, r1, #1
   288e4:	strne	r1, [r5, #20]
   288e8:	str	r4, [r0, r1, lsl #2]
   288ec:	ldr	r2, [r4, #16]
   288f0:	str	r2, [r5, #36]	; 0x24
   288f4:	ldr	r2, [r4, #8]
   288f8:	ldr	r3, [pc, #112]	; 28970 <sfbpf_push_buffer_state+0x134>
   288fc:	add	r3, pc, r3
   28900:	str	r2, [r5, #24]
   28904:	str	r2, [r3]
   28908:	ldr	r0, [r0, r1, lsl #2]
   2890c:	ldr	r0, [r0]
   28910:	str	r0, [r5, #8]
   28914:	ldrb	r0, [r2]
   28918:	strb	r0, [r5, #5]
   2891c:	pop	{r4, r5, r6, sl, fp, pc}
   28920:	mov	r0, #4
   28924:	bl	e34 <malloc@plt>
   28928:	cmp	r0, #0
   2892c:	str	r0, [r5, #16]
   28930:	beq	2895c <sfbpf_push_buffer_state+0x120>
   28934:	mov	r1, #0
   28938:	str	r1, [r0]
   2893c:	str	r1, [r5, #20]
   28940:	mov	r1, #1
   28944:	str	r1, [r5, #44]	; 0x2c
   28948:	ldr	r1, [r5, #20]
   2894c:	ldr	r2, [r0, r1, lsl #2]
   28950:	cmp	r2, #0
   28954:	bne	288b8 <sfbpf_push_buffer_state+0x7c>
   28958:	b	288e8 <sfbpf_push_buffer_state+0xac>
   2895c:	ldr	r0, [pc, #8]	; 2896c <sfbpf_push_buffer_state+0x130>
   28960:	add	r0, pc, r0
   28964:	bl	285ac <yy_fatal_error>
   28968:	.word	0x0001e114
   2896c:	.word	0x0000d245
   28970:	.word	0x0001e0d8

00028974 <sfbpf_pop_buffer_state>:
   28974:	push	{r4, r5, r6, sl, fp, lr}
   28978:	add	fp, sp, #16
   2897c:	ldr	r5, [pc, #160]	; 28a24 <sfbpf_pop_buffer_state+0xb0>
   28980:	add	r5, pc, r5
   28984:	ldr	r0, [r5, #16]
   28988:	cmp	r0, #0
   2898c:	beq	28a20 <sfbpf_pop_buffer_state+0xac>
   28990:	ldr	r1, [r5, #20]
   28994:	ldr	r4, [r0, r1, lsl #2]
   28998:	cmp	r4, #0
   2899c:	beq	28a20 <sfbpf_pop_buffer_state+0xac>
   289a0:	mov	r6, #0
   289a4:	str	r6, [r0, r1, lsl #2]
   289a8:	ldr	r0, [r4, #20]
   289ac:	cmp	r0, #0
   289b0:	beq	289bc <sfbpf_pop_buffer_state+0x48>
   289b4:	ldr	r0, [r4, #4]
   289b8:	bl	dbc <free@plt>
   289bc:	mov	r0, r4
   289c0:	bl	dbc <free@plt>
   289c4:	ldr	r1, [r5, #20]
   289c8:	ldr	r0, [r5, #16]
   289cc:	cmp	r1, #0
   289d0:	str	r6, [r0, r1, lsl #2]
   289d4:	subne	r6, r1, #1
   289d8:	strne	r6, [r5, #20]
   289dc:	cmp	r0, #0
   289e0:	beq	28a20 <sfbpf_pop_buffer_state+0xac>
   289e4:	ldr	r1, [r0, r6, lsl #2]
   289e8:	cmp	r1, #0
   289ec:	beq	28a20 <sfbpf_pop_buffer_state+0xac>
   289f0:	ldr	r2, [r1, #16]
   289f4:	str	r2, [r5, #36]	; 0x24
   289f8:	ldr	r1, [r1, #8]
   289fc:	ldr	r2, [pc, #36]	; 28a28 <sfbpf_pop_buffer_state+0xb4>
   28a00:	add	r2, pc, r2
   28a04:	str	r1, [r5, #24]
   28a08:	str	r1, [r2]
   28a0c:	ldr	r0, [r0, r6, lsl #2]
   28a10:	ldr	r0, [r0]
   28a14:	str	r0, [r5, #8]
   28a18:	ldrb	r0, [r1]
   28a1c:	strb	r0, [r5, #5]
   28a20:	pop	{r4, r5, r6, sl, fp, pc}
   28a24:	.word	0x0001dfe8
   28a28:	.word	0x0001dfd4

00028a2c <sfbpf__scan_buffer>:
   28a2c:	push	{r4, r5, r6, sl, fp, lr}
   28a30:	add	fp, sp, #16
   28a34:	mov	r4, #0
   28a38:	cmp	r1, #2
   28a3c:	bcc	28a64 <sfbpf__scan_buffer+0x38>
   28a40:	sub	r6, r1, #2
   28a44:	mov	r5, r0
   28a48:	ldrb	r0, [r0, r6]
   28a4c:	cmp	r0, #0
   28a50:	bne	28a64 <sfbpf__scan_buffer+0x38>
   28a54:	add	r0, r1, r5
   28a58:	ldrb	r0, [r0, #-1]
   28a5c:	cmp	r0, #0
   28a60:	beq	28a6c <sfbpf__scan_buffer+0x40>
   28a64:	mov	r0, r4
   28a68:	pop	{r4, r5, r6, sl, fp, pc}
   28a6c:	mov	r0, #48	; 0x30
   28a70:	bl	e34 <malloc@plt>
   28a74:	cmp	r0, #0
   28a78:	beq	28abc <sfbpf__scan_buffer+0x90>
   28a7c:	mov	r4, r0
   28a80:	mov	r0, #0
   28a84:	mov	r1, #1
   28a88:	str	r0, [r4, #40]	; 0x28
   28a8c:	str	r0, [r4, #44]	; 0x2c
   28a90:	stm	r4, {r0, r5}
   28a94:	str	r5, [r4, #8]
   28a98:	str	r6, [r4, #12]
   28a9c:	str	r6, [r4, #16]
   28aa0:	str	r0, [r4, #20]
   28aa4:	str	r0, [r4, #24]
   28aa8:	mov	r0, r4
   28aac:	str	r1, [r4, #28]
   28ab0:	bl	285e0 <sfbpf__switch_to_buffer>
   28ab4:	mov	r0, r4
   28ab8:	pop	{r4, r5, r6, sl, fp, pc}
   28abc:	ldr	r0, [pc, #4]	; 28ac8 <sfbpf__scan_buffer+0x9c>
   28ac0:	add	r0, pc, r0
   28ac4:	bl	285ac <yy_fatal_error>
   28ac8:	.word	0x0000cfc5

00028acc <sfbpf__scan_string>:
   28acc:	push	{r4, sl, fp, lr}
   28ad0:	add	fp, sp, #8
   28ad4:	mov	r4, r0
   28ad8:	bl	e64 <strlen@plt>
   28adc:	mov	r1, r0
   28ae0:	mov	r0, r4
   28ae4:	pop	{r4, sl, fp, lr}
   28ae8:	b	28aec <sfbpf__scan_bytes>

00028aec <sfbpf__scan_bytes>:
   28aec:	push	{r4, r5, r6, r7, fp, lr}
   28af0:	add	fp, sp, #16
   28af4:	add	r6, r1, #2
   28af8:	mov	r7, r0
   28afc:	mov	r4, r1
   28b00:	mov	r0, r6
   28b04:	bl	e34 <malloc@plt>
   28b08:	cmp	r0, #0
   28b0c:	beq	28b94 <sfbpf__scan_bytes+0xa8>
   28b10:	mov	r5, r0
   28b14:	cmp	r4, #1
   28b18:	blt	28b2c <sfbpf__scan_bytes+0x40>
   28b1c:	mov	r0, r5
   28b20:	mov	r1, r7
   28b24:	mov	r2, r4
   28b28:	bl	de0 <memcpy@plt>
   28b2c:	cmp	r6, #2
   28b30:	add	r0, r5, r4
   28b34:	mov	r1, #0
   28b38:	strh	r1, [r0]
   28b3c:	bcc	28ba0 <sfbpf__scan_bytes+0xb4>
   28b40:	mov	r0, #48	; 0x30
   28b44:	bl	e34 <malloc@plt>
   28b48:	cmp	r0, #0
   28b4c:	beq	28bac <sfbpf__scan_bytes+0xc0>
   28b50:	mov	r6, r0
   28b54:	mov	r0, #0
   28b58:	mov	r7, #1
   28b5c:	str	r0, [r6, #40]	; 0x28
   28b60:	str	r0, [r6, #44]	; 0x2c
   28b64:	stm	r6, {r0, r5}
   28b68:	str	r5, [r6, #8]
   28b6c:	str	r4, [r6, #12]
   28b70:	str	r4, [r6, #16]
   28b74:	str	r0, [r6, #20]
   28b78:	str	r0, [r6, #24]
   28b7c:	mov	r0, r6
   28b80:	str	r7, [r6, #28]
   28b84:	bl	285e0 <sfbpf__switch_to_buffer>
   28b88:	mov	r0, r6
   28b8c:	str	r7, [r6, #20]
   28b90:	pop	{r4, r5, r6, r7, fp, pc}
   28b94:	ldr	r0, [pc, #32]	; 28bbc <sfbpf__scan_bytes+0xd0>
   28b98:	add	r0, pc, r0
   28b9c:	bl	285ac <yy_fatal_error>
   28ba0:	ldr	r0, [pc, #16]	; 28bb8 <sfbpf__scan_bytes+0xcc>
   28ba4:	add	r0, pc, r0
   28ba8:	bl	285ac <yy_fatal_error>
   28bac:	ldr	r0, [pc, #12]	; 28bc0 <sfbpf__scan_bytes+0xd4>
   28bb0:	add	r0, pc, r0
   28bb4:	bl	285ac <yy_fatal_error>
   28bb8:	.word	0x0000cf34
   28bbc:	.word	0x0000cf17
   28bc0:	.word	0x0000ced5

00028bc4 <sfbpf_get_debug>:
   28bc4:	ldr	r0, [pc, #4]	; 28bd0 <sfbpf_get_debug+0xc>
   28bc8:	ldr	r0, [pc, r0]
   28bcc:	bx	lr
   28bd0:	.word	0x0001dd9c

00028bd4 <sfbpf_set_debug>:
   28bd4:	ldr	r1, [pc, #8]	; 28be4 <sfbpf_set_debug+0x10>
   28bd8:	add	r1, pc, r1
   28bdc:	str	r0, [r1]
   28be0:	bx	lr
   28be4:	.word	0x0001dd8c

00028be8 <sfbpf_lex_destroy>:
   28be8:	push	{r4, r5, r6, r7, fp, lr}
   28bec:	add	fp, sp, #16
   28bf0:	ldr	r5, [pc, #164]	; 28c9c <sfbpf_lex_destroy+0xb4>
   28bf4:	mov	r6, #0
   28bf8:	mov	r4, #0
   28bfc:	add	r5, pc, r5
   28c00:	ldr	r0, [r5, #16]
   28c04:	cmp	r0, #0
   28c08:	beq	28c6c <sfbpf_lex_destroy+0x84>
   28c0c:	ldr	r1, [r5, #20]
   28c10:	mov	r7, #0
   28c14:	ldr	r4, [r0, r1, lsl #2]
   28c18:	cmp	r4, #0
   28c1c:	bne	28c4c <sfbpf_lex_destroy+0x64>
   28c20:	b	28c68 <sfbpf_lex_destroy+0x80>
   28c24:	mov	r0, r4
   28c28:	bl	dbc <free@plt>
   28c2c:	ldr	r0, [r5, #16]
   28c30:	ldr	r1, [r5, #20]
   28c34:	mov	r4, #0
   28c38:	cmp	r0, #0
   28c3c:	str	r4, [r0, r1, lsl #2]
   28c40:	beq	28c6c <sfbpf_lex_destroy+0x84>
   28c44:	cmp	r4, #0
   28c48:	beq	28c68 <sfbpf_lex_destroy+0x80>
   28c4c:	str	r7, [r0, r1, lsl #2]
   28c50:	ldr	r0, [r4, #20]
   28c54:	cmp	r0, #0
   28c58:	beq	28c24 <sfbpf_lex_destroy+0x3c>
   28c5c:	ldr	r0, [r4, #4]
   28c60:	bl	dbc <free@plt>
   28c64:	b	28c24 <sfbpf_lex_destroy+0x3c>
   28c68:	mov	r4, r0
   28c6c:	mov	r0, r4
   28c70:	bl	dbc <free@plt>
   28c74:	mov	r0, #0
   28c78:	str	r6, [r5, #44]	; 0x2c
   28c7c:	str	r6, [r5, #8]
   28c80:	str	r6, [r5, #12]
   28c84:	str	r6, [r5, #16]
   28c88:	str	r6, [r5, #20]
   28c8c:	str	r6, [r5, #24]
   28c90:	strb	r6, [r5, #4]
   28c94:	strb	r6, [r5]
   28c98:	pop	{r4, r5, r6, r7, fp, pc}
   28c9c:	.word	0x0001dd6c

00028ca0 <sfbpf_realloc>:
   28ca0:	b	e04 <realloc@plt>

00028ca4 <sf_lex_init>:
   28ca4:	push	{r4, sl, fp, lr}
   28ca8:	add	fp, sp, #8
   28cac:	mov	r4, r0
   28cb0:	bl	e64 <strlen@plt>
   28cb4:	mov	r1, r0
   28cb8:	mov	r0, r4
   28cbc:	bl	28aec <sfbpf__scan_bytes>
   28cc0:	ldr	r1, [pc, #8]	; 28cd0 <sf_lex_init+0x2c>
   28cc4:	add	r1, pc, r1
   28cc8:	str	r0, [r1, #40]	; 0x28
   28ccc:	pop	{r4, sl, fp, pc}
   28cd0:	.word	0x0001dca4

00028cd4 <sf_lex_cleanup>:
   28cd4:	push	{r4, r5, fp, lr}
   28cd8:	add	fp, sp, #8
   28cdc:	ldr	r5, [pc, #108]	; 28d50 <sf_lex_cleanup+0x7c>
   28ce0:	add	r5, pc, r5
   28ce4:	ldr	r4, [r5, #40]	; 0x28
   28ce8:	cmp	r4, #0
   28cec:	beq	28d34 <sf_lex_cleanup+0x60>
   28cf0:	ldr	r0, [r5, #16]
   28cf4:	cmp	r0, #0
   28cf8:	beq	28d40 <sf_lex_cleanup+0x6c>
   28cfc:	ldr	r1, [r5, #20]
   28d00:	ldr	r1, [r0, r1, lsl #2]
   28d04:	cmp	r1, r4
   28d08:	bne	28d18 <sf_lex_cleanup+0x44>
   28d0c:	ldr	r1, [r5, #20]
   28d10:	mov	r2, #0
   28d14:	str	r2, [r0, r1, lsl #2]
   28d18:	ldr	r0, [r4, #20]
   28d1c:	cmp	r0, #0
   28d20:	beq	28d2c <sf_lex_cleanup+0x58>
   28d24:	ldr	r0, [r4, #4]
   28d28:	bl	dbc <free@plt>
   28d2c:	mov	r0, r4
   28d30:	bl	dbc <free@plt>
   28d34:	mov	r0, #0
   28d38:	str	r0, [r5, #40]	; 0x28
   28d3c:	pop	{r4, r5, fp, pc}
   28d40:	mov	r1, #0
   28d44:	cmp	r1, r4
   28d48:	bne	28d18 <sf_lex_cleanup+0x44>
   28d4c:	b	28d0c <sf_lex_cleanup+0x38>
   28d50:	.word	0x0001dc88

Disassembly of section .fini:

00028d54 <_fini>:
   28d54:	push	{r3, lr}
   28d58:	pop	{r3, pc}
