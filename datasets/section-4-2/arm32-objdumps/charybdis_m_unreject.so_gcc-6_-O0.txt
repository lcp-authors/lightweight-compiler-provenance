
../repos/charybdis/modules/.libs/m_unreject.so:     file format elf32-littlearm


Disassembly of section .init:

00000488 <_init>:
 488:	push	{r3, lr}
 48c:	bl	4e4 <call_weak_fn>
 490:	pop	{r3, pc}

Disassembly of section .plt:

00000494 <.plt>:
 494:	push	{lr}		; (str lr, [sp, #-4]!)
 498:	ldr	lr, [pc, #4]	; 4a4 <.plt+0x10>
 49c:	add	lr, pc, lr
 4a0:	ldr	pc, [lr, #8]!
 4a4:	.word	0x00010b5c

000004a8 <__cxa_finalize@plt>:
 4a8:	add	ip, pc, #0, 12
 4ac:	add	ip, ip, #16, 20	; 0x10000
 4b0:	ldr	pc, [ip, #2908]!	; 0xb5c

000004b4 <parse_netmask@plt>:
 4b4:	add	ip, pc, #0, 12
 4b8:	add	ip, ip, #16, 20	; 0x10000
 4bc:	ldr	pc, [ip, #2900]!	; 0xb54

000004c0 <remove_reject_ip@plt>:
 4c0:	add	ip, pc, #0, 12
 4c4:	add	ip, ip, #16, 20	; 0x10000
 4c8:	ldr	pc, [ip, #2892]!	; 0xb4c

000004cc <__gmon_start__@plt>:
 4cc:	add	ip, pc, #0, 12
 4d0:	add	ip, ip, #16, 20	; 0x10000
 4d4:	ldr	pc, [ip, #2884]!	; 0xb44

000004d8 <sendto_one_notice@plt>:
 4d8:	add	ip, pc, #0, 12
 4dc:	add	ip, ip, #16, 20	; 0x10000
 4e0:	ldr	pc, [ip, #2876]!	; 0xb3c

Disassembly of section .text:

000004e4 <call_weak_fn>:
 4e4:	ldr	r3, [pc, #20]	; 500 <call_weak_fn+0x1c>
 4e8:	ldr	r2, [pc, #20]	; 504 <call_weak_fn+0x20>
 4ec:	add	r3, pc, r3
 4f0:	ldr	r2, [r3, r2]
 4f4:	cmp	r2, #0
 4f8:	bxeq	lr
 4fc:	b	4cc <__gmon_start__@plt>
 500:	.word	0x00010b0c
 504:	.word	0x00000028

00000508 <deregister_tm_clones>:
 508:	ldr	r3, [pc, #52]	; 544 <deregister_tm_clones+0x3c>
 50c:	ldr	r0, [pc, #52]	; 548 <deregister_tm_clones+0x40>
 510:	add	r3, pc, r3
 514:	add	r0, pc, r0
 518:	add	r3, r3, #3
 51c:	sub	r3, r3, r0
 520:	cmp	r3, #6
 524:	ldr	r3, [pc, #32]	; 54c <deregister_tm_clones+0x44>
 528:	add	r3, pc, r3
 52c:	bxls	lr
 530:	ldr	r2, [pc, #24]	; 550 <deregister_tm_clones+0x48>
 534:	ldr	r3, [r3, r2]
 538:	cmp	r3, #0
 53c:	bxeq	lr
 540:	bx	r3
 544:	.word	0x00010b98
 548:	.word	0x00010b94
 54c:	.word	0x00010ad0
 550:	.word	0x00000024

00000554 <register_tm_clones>:
 554:	ldr	r1, [pc, #56]	; 594 <register_tm_clones+0x40>
 558:	ldr	r0, [pc, #56]	; 598 <register_tm_clones+0x44>
 55c:	add	r1, pc, r1
 560:	add	r0, pc, r0
 564:	sub	r1, r1, r0
 568:	ldr	r3, [pc, #44]	; 59c <register_tm_clones+0x48>
 56c:	asr	r1, r1, #2
 570:	add	r3, pc, r3
 574:	add	r1, r1, r1, lsr #31
 578:	asrs	r1, r1, #1
 57c:	bxeq	lr
 580:	ldr	r2, [pc, #24]	; 5a0 <register_tm_clones+0x4c>
 584:	ldr	r3, [r3, r2]
 588:	cmp	r3, #0
 58c:	bxeq	lr
 590:	bx	r3
 594:	.word	0x00010b4c
 598:	.word	0x00010b48
 59c:	.word	0x00010a88
 5a0:	.word	0x00000030

000005a4 <__do_global_dtors_aux>:
 5a4:	ldr	r3, [pc, #76]	; 5f8 <__do_global_dtors_aux+0x54>
 5a8:	ldr	r2, [pc, #76]	; 5fc <__do_global_dtors_aux+0x58>
 5ac:	add	r3, pc, r3
 5b0:	add	r2, pc, r2
 5b4:	ldrb	r3, [r3]
 5b8:	cmp	r3, #0
 5bc:	bxne	lr
 5c0:	ldr	r3, [pc, #56]	; 600 <__do_global_dtors_aux+0x5c>
 5c4:	push	{r4, lr}
 5c8:	ldr	r3, [r2, r3]
 5cc:	cmp	r3, #0
 5d0:	beq	5e0 <__do_global_dtors_aux+0x3c>
 5d4:	ldr	r3, [pc, #40]	; 604 <__do_global_dtors_aux+0x60>
 5d8:	ldr	r0, [pc, r3]
 5dc:	bl	4a8 <__cxa_finalize@plt>
 5e0:	bl	508 <deregister_tm_clones>
 5e4:	ldr	r3, [pc, #28]	; 608 <__do_global_dtors_aux+0x64>
 5e8:	mov	r2, #1
 5ec:	add	r3, pc, r3
 5f0:	strb	r2, [r3]
 5f4:	pop	{r4, pc}
 5f8:	.word	0x00010afc
 5fc:	.word	0x00010a48
 600:	.word	0x00000020
 604:	.word	0x00010a58
 608:	.word	0x00010abc

0000060c <frame_dummy>:
 60c:	ldr	r0, [pc, #56]	; 64c <frame_dummy+0x40>
 610:	ldr	r3, [pc, #56]	; 650 <frame_dummy+0x44>
 614:	add	r0, pc, r0
 618:	ldr	r2, [r0]
 61c:	add	r3, pc, r3
 620:	cmp	r2, #0
 624:	bne	62c <frame_dummy+0x20>
 628:	b	554 <register_tm_clones>
 62c:	ldr	r2, [pc, #32]	; 654 <frame_dummy+0x48>
 630:	ldr	r3, [r3, r2]
 634:	cmp	r3, #0
 638:	beq	628 <frame_dummy+0x1c>
 63c:	push	{r4, lr}
 640:	blx	r3
 644:	pop	{r4, lr}
 648:	b	554 <register_tm_clones>
 64c:	.word	0x000108e0
 650:	.word	0x000109dc
 654:	.word	0x0000002c

00000658 <mo_unreject>:
 658:	push	{fp, lr}
 65c:	add	fp, sp, #4
 660:	sub	sp, sp, #16
 664:	str	r0, [fp, #-8]
 668:	str	r1, [fp, #-12]
 66c:	str	r2, [fp, #-16]
 670:	str	r3, [fp, #-20]	; 0xffffffec
 674:	ldr	r3, [pc, #280]	; 794 <mo_unreject+0x13c>
 678:	add	r3, pc, r3
 67c:	ldr	r2, [pc, #276]	; 798 <mo_unreject+0x140>
 680:	ldr	r2, [r3, r2]
 684:	ldr	r2, [r2, #284]	; 0x11c
 688:	cmp	r2, #0
 68c:	beq	6b8 <mo_unreject+0x60>
 690:	ldr	r2, [pc, #256]	; 798 <mo_unreject+0x140>
 694:	ldr	r2, [r3, r2]
 698:	ldr	r2, [r2, #280]	; 0x118
 69c:	cmp	r2, #0
 6a0:	beq	6b8 <mo_unreject+0x60>
 6a4:	ldr	r2, [pc, #236]	; 798 <mo_unreject+0x140>
 6a8:	ldr	r3, [r3, r2]
 6ac:	ldr	r3, [r3, #288]	; 0x120
 6b0:	cmp	r3, #0
 6b4:	bne	6d0 <mo_unreject+0x78>
 6b8:	ldr	r3, [pc, #220]	; 79c <mo_unreject+0x144>
 6bc:	add	r3, pc, r3
 6c0:	mov	r1, r3
 6c4:	ldr	r0, [fp, #-16]
 6c8:	bl	4d8 <sendto_one_notice@plt>
 6cc:	b	78c <mo_unreject+0x134>
 6d0:	ldr	r3, [fp, #4]
 6d4:	add	r3, r3, #4
 6d8:	ldr	r3, [r3]
 6dc:	mov	r2, #0
 6e0:	mov	r1, #0
 6e4:	mov	r0, r3
 6e8:	bl	4b4 <parse_netmask@plt>
 6ec:	mov	r3, r0
 6f0:	cmp	r3, #0
 6f4:	bne	720 <mo_unreject+0xc8>
 6f8:	ldr	r3, [fp, #4]
 6fc:	add	r3, r3, #4
 700:	ldr	r3, [r3]
 704:	mov	r2, r3
 708:	ldr	r3, [pc, #144]	; 7a0 <mo_unreject+0x148>
 70c:	add	r3, pc, r3
 710:	mov	r1, r3
 714:	ldr	r0, [fp, #-16]
 718:	bl	4d8 <sendto_one_notice@plt>
 71c:	b	78c <mo_unreject+0x134>
 720:	ldr	r3, [fp, #4]
 724:	add	r3, r3, #4
 728:	ldr	r3, [r3]
 72c:	mov	r0, r3
 730:	bl	4c0 <remove_reject_ip@plt>
 734:	mov	r3, r0
 738:	cmp	r3, #0
 73c:	beq	768 <mo_unreject+0x110>
 740:	ldr	r3, [fp, #4]
 744:	add	r3, r3, #4
 748:	ldr	r3, [r3]
 74c:	mov	r2, r3
 750:	ldr	r3, [pc, #76]	; 7a4 <mo_unreject+0x14c>
 754:	add	r3, pc, r3
 758:	mov	r1, r3
 75c:	ldr	r0, [fp, #-16]
 760:	bl	4d8 <sendto_one_notice@plt>
 764:	b	78c <mo_unreject+0x134>
 768:	ldr	r3, [fp, #4]
 76c:	add	r3, r3, #4
 770:	ldr	r3, [r3]
 774:	mov	r2, r3
 778:	ldr	r3, [pc, #40]	; 7a8 <mo_unreject+0x150>
 77c:	add	r3, pc, r3
 780:	mov	r1, r3
 784:	ldr	r0, [fp, #-16]
 788:	bl	4d8 <sendto_one_notice@plt>
 78c:	sub	sp, fp, #4
 790:	pop	{fp, pc}
 794:	.word	0x00010980
 798:	.word	0x00000034
 79c:	.word	0x00000140
 7a0:	.word	0x0000010c
 7a4:	.word	0x000000e0
 7a8:	.word	0x000000d0

Disassembly of section .fini:

000007ac <_fini>:
 7ac:	push	{r3, lr}
 7b0:	pop	{r3, pc}
