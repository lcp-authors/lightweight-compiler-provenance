
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010d48 <.init>:
   10d48:	push	{r3, lr}
   10d4c:	bl	11000 <_start@@Base+0x3c>
   10d50:	pop	{r3, pc}

Disassembly of section .plt:

00010d54 <calloc@plt-0x14>:
   10d54:	push	{lr}		; (str lr, [sp, #-4]!)
   10d58:	ldr	lr, [pc, #4]	; 10d64 <calloc@plt-0x4>
   10d5c:	add	lr, pc, lr
   10d60:	ldr	pc, [lr, #8]!
   10d64:	muleq	r1, ip, r2

00010d68 <calloc@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #668]!	; 0x29c

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #660]!	; 0x294

00010d80 <strcmp@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #652]!	; 0x28c

00010d8c <printf@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #644]!	; 0x284

00010d98 <__isoc99_fscanf@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #636]!	; 0x27c

00010da4 <fopen@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #628]!	; 0x274

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #620]!	; 0x26c

00010dbc <memcpy@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #612]!	; 0x264

00010dc8 <realloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #604]!	; 0x25c

00010dd4 <strcpy@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #596]!	; 0x254

00010de0 <puts@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #73728	; 0x12000
   10de8:	ldr	pc, [ip, #588]!	; 0x24c

00010dec <malloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #73728	; 0x12000
   10df4:	ldr	pc, [ip, #580]!	; 0x244

00010df8 <__libc_start_main@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #73728	; 0x12000
   10e00:	ldr	pc, [ip, #572]!	; 0x23c

00010e04 <__gmon_start__@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #73728	; 0x12000
   10e0c:	ldr	pc, [ip, #564]!	; 0x234

00010e10 <strlen@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #73728	; 0x12000
   10e18:	ldr	pc, [ip, #556]!	; 0x22c

00010e1c <setvbuf@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #73728	; 0x12000
   10e24:	ldr	pc, [ip, #548]!	; 0x224

00010e28 <putchar@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #73728	; 0x12000
   10e30:	ldr	pc, [ip, #540]!	; 0x21c

00010e34 <fclose@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #73728	; 0x12000
   10e3c:	ldr	pc, [ip, #532]!	; 0x214

00010e40 <abort@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #73728	; 0x12000
   10e48:	ldr	pc, [ip, #524]!	; 0x20c

Disassembly of section .text:

00010e4c <main@@Base>:
   10e4c:	ldr	r0, [pc, #312]	; 10f8c <main@@Base+0x140>
   10e50:	mov	r3, #0
   10e54:	push	{r4, r5, r6, r7, r8, lr}
   10e58:	mov	r1, r3
   10e5c:	sub	sp, sp, #504	; 0x1f8
   10e60:	mov	r2, #2
   10e64:	ldr	r0, [r0]
   10e68:	bl	10e1c <setvbuf@plt>
   10e6c:	ldr	r1, [pc, #284]	; 10f90 <main@@Base+0x144>
   10e70:	ldr	r0, [pc, #284]	; 10f94 <main@@Base+0x148>
   10e74:	bl	10da4 <fopen@plt>
   10e78:	ldr	r1, [pc, #272]	; 10f90 <main@@Base+0x144>
   10e7c:	ldr	r7, [pc, #276]	; 10f98 <main@@Base+0x14c>
   10e80:	mov	r6, r0
   10e84:	ldr	r0, [pc, #272]	; 10f9c <main@@Base+0x150>
   10e88:	bl	10da4 <fopen@plt>
   10e8c:	mov	r5, r0
   10e90:	ldr	r0, [pc, #264]	; 10fa0 <main@@Base+0x154>
   10e94:	bl	10de0 <puts@plt>
   10e98:	bl	111a0 <avl_nova@@Base>
   10e9c:	mov	r4, r0
   10ea0:	add	r2, sp, #4
   10ea4:	mov	r1, r7
   10ea8:	mov	r0, r6
   10eac:	bl	10d98 <__isoc99_fscanf@plt>
   10eb0:	cmp	r0, #1
   10eb4:	beq	10f68 <main@@Base+0x11c>
   10eb8:	ldr	r0, [pc, #228]	; 10fa4 <main@@Base+0x158>
   10ebc:	bl	10d8c <printf@plt>
   10ec0:	mov	r0, r4
   10ec4:	bl	11770 <avl_imprime@@Base>
   10ec8:	ldr	r0, [pc, #216]	; 10fa8 <main@@Base+0x15c>
   10ecc:	bl	10d8c <printf@plt>
   10ed0:	ldr	r1, [pc, #212]	; 10fac <main@@Base+0x160>
   10ed4:	mov	r0, r4
   10ed8:	bl	110ec <avl_max_subarvore@@Base>
   10edc:	mov	r0, r4
   10ee0:	bl	116d0 <avl_apaga@@Base>
   10ee4:	ldr	r0, [pc, #196]	; 10fb0 <main@@Base+0x164>
   10ee8:	bl	10de0 <puts@plt>
   10eec:	ldr	r1, [pc, #192]	; 10fb4 <main@@Base+0x168>
   10ef0:	ldr	r0, [pc, #192]	; 10fb8 <main@@Base+0x16c>
   10ef4:	bl	11790 <tabela_nova@@Base>
   10ef8:	ldr	r7, [pc, #152]	; 10f98 <main@@Base+0x14c>
   10efc:	ldr	r8, [pc, #184]	; 10fbc <main@@Base+0x170>
   10f00:	mov	r4, r0
   10f04:	add	r2, sp, #4
   10f08:	mov	r1, r7
   10f0c:	mov	r0, r5
   10f10:	bl	10d98 <__isoc99_fscanf@plt>
   10f14:	cmp	r0, #1
   10f18:	beq	10f78 <main@@Base+0x12c>
   10f1c:	mov	r0, r4
   10f20:	bl	11bf0 <mostraTabela@@Base>
   10f24:	ldr	r1, [pc, #148]	; 10fc0 <main@@Base+0x174>
   10f28:	mov	r0, r4
   10f2c:	bl	11134 <tabela_copia@@Base>
   10f30:	subs	r7, r0, #0
   10f34:	beq	10f3c <main@@Base+0xf0>
   10f38:	bl	11bf0 <mostraTabela@@Base>
   10f3c:	mov	r0, r4
   10f40:	bl	117f4 <tabela_apaga@@Base>
   10f44:	mov	r0, r7
   10f48:	bl	117f4 <tabela_apaga@@Base>
   10f4c:	mov	r0, r6
   10f50:	bl	10e34 <fclose@plt>
   10f54:	mov	r0, r5
   10f58:	bl	10e34 <fclose@plt>
   10f5c:	mov	r0, #0
   10f60:	add	sp, sp, #504	; 0x1f8
   10f64:	pop	{r4, r5, r6, r7, r8, pc}
   10f68:	add	r1, sp, #4
   10f6c:	mov	r0, r4
   10f70:	bl	114bc <avl_insere@@Base>
   10f74:	b	10ea0 <main@@Base+0x54>
   10f78:	mov	r2, r8
   10f7c:	add	r1, sp, #4
   10f80:	mov	r0, r4
   10f84:	bl	11854 <tabela_adiciona@@Base>
   10f88:	b	10f04 <main@@Base+0xb8>
   10f8c:	andeq	r3, r2, r4, rrx
   10f90:	andeq	r1, r1, pc, lsl pc
   10f94:	andeq	r1, r1, r1, lsr #30
   10f98:	andeq	r1, r1, ip, lsl pc
   10f9c:	andeq	r1, r1, ip, lsr #30
   10fa0:	andeq	r1, r1, r6, lsr pc
   10fa4:	andeq	r1, r1, r7, asr #30
   10fa8:	andeq	r1, r1, r9, asr pc
   10fac:	andeq	r1, r1, r0, ror pc
   10fb0:	andeq	r1, r1, r3, ror pc
   10fb4:			; <UNDEFINED> instruction: 0x00011bb8
   10fb8:	andeq	r0, r0, r9, asr r2
   10fbc:	andeq	r1, r1, sp, lsr #31
   10fc0:	andeq	r0, r0, fp, ror #4

00010fc4 <_start@@Base>:
   10fc4:	mov	fp, #0
   10fc8:	mov	lr, #0
   10fcc:	pop	{r1}		; (ldr r1, [sp], #4)
   10fd0:	mov	r2, sp
   10fd4:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd8:	push	{r0}		; (str r0, [sp, #-4]!)
   10fdc:	ldr	ip, [pc, #16]	; 10ff4 <_start@@Base+0x30>
   10fe0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe4:	ldr	r0, [pc, #12]	; 10ff8 <_start@@Base+0x34>
   10fe8:	ldr	r3, [pc, #12]	; 10ffc <_start@@Base+0x38>
   10fec:	bl	10df8 <__libc_start_main@plt>
   10ff0:	bl	10e40 <abort@plt>
   10ff4:	andeq	r1, r1, ip, lsl #30
   10ff8:	andeq	r0, r1, ip, asr #28
   10ffc:	andeq	r1, r1, ip, lsr #29
   11000:	ldr	r3, [pc, #20]	; 1101c <_start@@Base+0x58>
   11004:	ldr	r2, [pc, #20]	; 11020 <_start@@Base+0x5c>
   11008:	add	r3, pc, r3
   1100c:	ldr	r2, [r3, r2]
   11010:	cmp	r2, #0
   11014:	bxeq	lr
   11018:	b	10e04 <__gmon_start__@plt>
   1101c:	strdeq	r1, [r1], -r0
   11020:	andeq	r0, r0, r8, asr r0
   11024:	ldr	r3, [pc, #28]	; 11048 <_start@@Base+0x84>
   11028:	ldr	r0, [pc, #28]	; 1104c <_start@@Base+0x88>
   1102c:	sub	r3, r3, r0
   11030:	cmp	r3, #6
   11034:	bxls	lr
   11038:	ldr	r3, [pc, #16]	; 11050 <_start@@Base+0x8c>
   1103c:	cmp	r3, #0
   11040:	bxeq	lr
   11044:	bx	r3
   11048:	andeq	r3, r2, r7, rrx
   1104c:	andeq	r3, r2, r4, rrx
   11050:	andeq	r0, r0, r0
   11054:	ldr	r1, [pc, #36]	; 11080 <_start@@Base+0xbc>
   11058:	ldr	r0, [pc, #36]	; 11084 <_start@@Base+0xc0>
   1105c:	sub	r1, r1, r0
   11060:	asr	r1, r1, #2
   11064:	add	r1, r1, r1, lsr #31
   11068:	asrs	r1, r1, #1
   1106c:	bxeq	lr
   11070:	ldr	r3, [pc, #16]	; 11088 <_start@@Base+0xc4>
   11074:	cmp	r3, #0
   11078:	bxeq	lr
   1107c:	bx	r3
   11080:	andeq	r3, r2, r4, rrx
   11084:	andeq	r3, r2, r4, rrx
   11088:	andeq	r0, r0, r0
   1108c:	push	{r4, lr}
   11090:	ldr	r4, [pc, #24]	; 110b0 <_start@@Base+0xec>
   11094:	ldrb	r3, [r4]
   11098:	cmp	r3, #0
   1109c:	popne	{r4, pc}
   110a0:	bl	11024 <_start@@Base+0x60>
   110a4:	mov	r3, #1
   110a8:	strb	r3, [r4]
   110ac:	pop	{r4, pc}
   110b0:	andeq	r3, r2, r8, rrx
   110b4:	ldr	r0, [pc, #40]	; 110e4 <_start@@Base+0x120>
   110b8:	ldr	r3, [r0]
   110bc:	cmp	r3, #0
   110c0:	bne	110c8 <_start@@Base+0x104>
   110c4:	b	11054 <_start@@Base+0x90>
   110c8:	ldr	r3, [pc, #24]	; 110e8 <_start@@Base+0x124>
   110cc:	cmp	r3, #0
   110d0:	beq	110c4 <_start@@Base+0x100>
   110d4:	push	{r4, lr}
   110d8:	blx	r3
   110dc:	pop	{r4, lr}
   110e0:	b	11054 <_start@@Base+0x90>
   110e4:	andeq	r2, r2, r4, lsl pc
   110e8:	andeq	r0, r0, r0

000110ec <avl_max_subarvore@@Base>:
   110ec:	push	{r4, r5, r6, lr}
   110f0:	mov	r5, r0
   110f4:	mov	r6, r1
   110f8:	bl	111a0 <avl_nova@@Base>
   110fc:	mov	r1, r6
   11100:	mov	r4, r0
   11104:	mov	r0, r5
   11108:	bl	113a8 <avl_pesquisa@@Base>
   1110c:	str	r0, [r4]
   11110:	mov	r0, r4
   11114:	bl	111e4 <avl_max@@Base>
   11118:	mov	r1, r0
   1111c:	ldr	r0, [pc, #12]	; 11130 <avl_max_subarvore@@Base+0x44>
   11120:	bl	10d8c <printf@plt>
   11124:	mov	r0, r4
   11128:	pop	{r4, r5, r6, lr}
   1112c:	b	10db0 <free@plt>
   11130:	andeq	r1, r1, ip, lsl pc

00011134 <tabela_copia@@Base>:
   11134:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11138:	mov	r4, r0
   1113c:	mov	r0, r1
   11140:	ldr	r1, [r4]
   11144:	bl	11790 <tabela_nova@@Base>
   11148:	add	r1, sp, #4
   1114c:	mov	r5, #0
   11150:	mov	r6, r0
   11154:	mov	r0, r4
   11158:	bl	11af8 <tabela_elementos@@Base>
   1115c:	mov	r7, r0
   11160:	mov	r4, r0
   11164:	ldr	r3, [sp, #4]
   11168:	cmp	r5, r3
   1116c:	blt	11184 <tabela_copia@@Base+0x50>
   11170:	mov	r0, r7
   11174:	bl	10db0 <free@plt>
   11178:	mov	r0, r6
   1117c:	add	sp, sp, #12
   11180:	pop	{r4, r5, r6, r7, pc}
   11184:	add	r2, r4, #50	; 0x32
   11188:	mov	r1, r4
   1118c:	mov	r0, r6
   11190:	bl	11854 <tabela_adiciona@@Base>
   11194:	add	r5, r5, #1
   11198:	add	r4, r4, #150	; 0x96
   1119c:	b	11164 <tabela_copia@@Base+0x30>

000111a0 <avl_nova@@Base>:
   111a0:	push	{r4, lr}
   111a4:	mov	r0, #4
   111a8:	bl	10dec <malloc@plt>
   111ac:	cmp	r0, #0
   111b0:	movne	r3, #0
   111b4:	strne	r3, [r0]
   111b8:	pop	{r4, pc}

000111bc <avl_min@@Base>:
   111bc:	cmp	r0, #0
   111c0:	ldrne	r3, [r0]
   111c4:	bne	111d0 <avl_min@@Base+0x14>
   111c8:	bx	lr
   111cc:	mov	r3, r2
   111d0:	ldr	r2, [r3, #4]
   111d4:	cmp	r2, #0
   111d8:	bne	111cc <avl_min@@Base+0x10>
   111dc:	ldr	r0, [r3]
   111e0:	bx	lr

000111e4 <avl_max@@Base>:
   111e4:	cmp	r0, #0
   111e8:	ldrne	r3, [r0]
   111ec:	bne	111f8 <avl_max@@Base+0x14>
   111f0:	bx	lr
   111f4:	mov	r3, r2
   111f8:	ldr	r2, [r3, #8]
   111fc:	cmp	r2, #0
   11200:	bne	111f4 <avl_max@@Base+0x10>
   11204:	ldr	r0, [r3]
   11208:	bx	lr

0001120c <avl_altura@@Base>:
   1120c:	cmp	r0, #0
   11210:	ldrne	r0, [r0, #12]
   11214:	mvneq	r0, #0
   11218:	bx	lr

0001121c <max@@Base>:
   1121c:	cmp	r1, r0
   11220:	movge	r0, r1
   11224:	bx	lr

00011228 <avl_novo_no@@Base>:
   11228:	push	{r4, r5, r6, lr}
   1122c:	mov	r5, r0
   11230:	mov	r0, #16
   11234:	bl	10dec <malloc@plt>
   11238:	mov	r4, r0
   1123c:	mov	r0, r5
   11240:	bl	10e10 <strlen@plt>
   11244:	add	r0, r0, #1
   11248:	bl	10dec <malloc@plt>
   1124c:	mov	r1, r5
   11250:	str	r0, [r4]
   11254:	bl	10dd4 <strcpy@plt>
   11258:	mov	r3, #0
   1125c:	str	r3, [r4, #4]
   11260:	str	r3, [r4, #8]
   11264:	str	r3, [r4, #12]
   11268:	mov	r0, r4
   1126c:	pop	{r4, r5, r6, pc}

00011270 <roda_direita@@Base>:
   11270:	ldr	r1, [r0, #4]
   11274:	ldr	r3, [r1, #8]
   11278:	str	r0, [r1, #8]
   1127c:	cmp	r3, #0
   11280:	str	r3, [r0, #4]
   11284:	ldrne	r2, [r3, #12]
   11288:	ldr	r3, [r0, #8]
   1128c:	mvneq	r2, #0
   11290:	cmp	r3, #0
   11294:	mvneq	r3, #0
   11298:	ldrne	r3, [r3, #12]
   1129c:	cmp	r3, r2
   112a0:	movlt	r3, r2
   112a4:	ldr	r2, [r1, #4]
   112a8:	add	r3, r3, #1
   112ac:	cmp	r2, #0
   112b0:	str	r3, [r0, #12]
   112b4:	ldrne	r2, [r2, #12]
   112b8:	mvneq	r2, #0
   112bc:	cmp	r2, r3
   112c0:	movge	r3, r2
   112c4:	add	r3, r3, #1
   112c8:	str	r3, [r1, #12]
   112cc:	mov	r0, r1
   112d0:	bx	lr

000112d4 <roda_esquerda@@Base>:
   112d4:	mov	r2, r0
   112d8:	ldr	r0, [r0, #8]
   112dc:	ldr	r1, [r0, #4]
   112e0:	str	r2, [r0, #4]
   112e4:	ldr	r3, [r2, #4]
   112e8:	str	r1, [r2, #8]
   112ec:	cmp	r3, #0
   112f0:	ldrne	r3, [r3, #12]
   112f4:	mvneq	r3, #0
   112f8:	cmp	r1, #0
   112fc:	orreq	r3, r3, r3, asr #31
   11300:	beq	11310 <roda_esquerda@@Base+0x3c>
   11304:	ldr	r1, [r1, #12]
   11308:	cmp	r3, r1
   1130c:	movlt	r3, r1
   11310:	add	r3, r3, #1
   11314:	str	r3, [r2, #12]
   11318:	ldr	r2, [r0, #8]
   1131c:	cmp	r2, #0
   11320:	mvneq	r2, #0
   11324:	ldrne	r2, [r2, #12]
   11328:	cmp	r3, r2
   1132c:	movlt	r3, r2
   11330:	add	r3, r3, #1
   11334:	str	r3, [r0, #12]
   11338:	bx	lr

0001133c <calc_balanceamento@@Base>:
   1133c:	cmp	r0, #0
   11340:	bxeq	lr
   11344:	ldr	r3, [r0, #8]
   11348:	ldr	r2, [r0, #4]
   1134c:	cmp	r3, #0
   11350:	mvneq	r3, #0
   11354:	ldrne	r3, [r3, #12]
   11358:	cmp	r2, #0
   1135c:	mvneq	r0, #0
   11360:	ldrne	r0, [r2, #12]
   11364:	sub	r0, r3, r0
   11368:	bx	lr

0001136c <avl_pesquisa_impl@@Base>:
   1136c:	push	{r4, r5, r6, lr}
   11370:	mov	r5, r1
   11374:	mov	r4, r0
   11378:	cmp	r4, #0
   1137c:	beq	113a0 <avl_pesquisa_impl@@Base+0x34>
   11380:	ldr	r1, [r4]
   11384:	mov	r0, r5
   11388:	bl	10d80 <strcmp@plt>
   1138c:	cmp	r0, #0
   11390:	ldrlt	r4, [r4, #4]
   11394:	blt	11378 <avl_pesquisa_impl@@Base+0xc>
   11398:	ldrne	r4, [r4, #8]
   1139c:	bne	11378 <avl_pesquisa_impl@@Base+0xc>
   113a0:	mov	r0, r4
   113a4:	pop	{r4, r5, r6, pc}

000113a8 <avl_pesquisa@@Base>:
   113a8:	cmp	r1, #0
   113ac:	cmpne	r0, #0
   113b0:	beq	113bc <avl_pesquisa@@Base+0x14>
   113b4:	ldr	r0, [r0]
   113b8:	b	1136c <avl_pesquisa_impl@@Base>
   113bc:	mov	r0, #0
   113c0:	bx	lr

000113c4 <avl_insere_impl@@Base>:
   113c4:	push	{r4, r5, r6, lr}
   113c8:	subs	r4, r0, #0
   113cc:	bne	113dc <avl_insere_impl@@Base+0x18>
   113d0:	mov	r0, r1
   113d4:	pop	{r4, r5, r6, lr}
   113d8:	b	11228 <avl_novo_no@@Base>
   113dc:	mov	r5, r1
   113e0:	mov	r0, r5
   113e4:	ldr	r1, [r4]
   113e8:	bl	10d80 <strcmp@plt>
   113ec:	cmp	r0, #0
   113f0:	bge	1146c <avl_insere_impl@@Base+0xa8>
   113f4:	mov	r1, r5
   113f8:	ldr	r0, [r4, #4]
   113fc:	bl	113c4 <avl_insere_impl@@Base>
   11400:	str	r0, [r4, #4]
   11404:	ldr	r1, [r4, #4]
   11408:	ldr	r5, [r4, #8]
   1140c:	cmp	r1, #0
   11410:	mvneq	r3, #0
   11414:	ldrne	r3, [r1, #12]
   11418:	cmp	r5, #0
   1141c:	mvneq	r2, #0
   11420:	ldrne	r2, [r5, #12]
   11424:	mov	r0, r4
   11428:	cmp	r3, r2
   1142c:	movlt	r3, r2
   11430:	add	r3, r3, #1
   11434:	str	r3, [r4, #12]
   11438:	bl	1133c <calc_balanceamento@@Base>
   1143c:	cmp	r0, #1
   11440:	ble	11484 <avl_insere_impl@@Base+0xc0>
   11444:	mov	r0, r5
   11448:	bl	1133c <calc_balanceamento@@Base>
   1144c:	cmp	r0, #0
   11450:	bge	11460 <avl_insere_impl@@Base+0x9c>
   11454:	mov	r0, r5
   11458:	bl	11270 <roda_direita@@Base>
   1145c:	str	r0, [r4, #8]
   11460:	mov	r0, r4
   11464:	pop	{r4, r5, r6, lr}
   11468:	b	112d4 <roda_esquerda@@Base>
   1146c:	beq	114b4 <avl_insere_impl@@Base+0xf0>
   11470:	mov	r1, r5
   11474:	ldr	r0, [r4, #8]
   11478:	bl	113c4 <avl_insere_impl@@Base>
   1147c:	str	r0, [r4, #8]
   11480:	b	11404 <avl_insere_impl@@Base+0x40>
   11484:	cmn	r0, #1
   11488:	bge	114b4 <avl_insere_impl@@Base+0xf0>
   1148c:	mov	r0, r1
   11490:	bl	1133c <calc_balanceamento@@Base>
   11494:	cmp	r0, #0
   11498:	ble	114a8 <avl_insere_impl@@Base+0xe4>
   1149c:	mov	r0, r1
   114a0:	bl	112d4 <roda_esquerda@@Base>
   114a4:	str	r0, [r4, #4]
   114a8:	mov	r0, r4
   114ac:	pop	{r4, r5, r6, lr}
   114b0:	b	11270 <roda_direita@@Base>
   114b4:	mov	r0, r4
   114b8:	pop	{r4, r5, r6, pc}

000114bc <avl_insere@@Base>:
   114bc:	cmp	r1, #0
   114c0:	cmpne	r0, #0
   114c4:	push	{r4, r5, r6, lr}
   114c8:	moveq	r5, #1
   114cc:	movne	r5, #0
   114d0:	beq	114ec <avl_insere@@Base+0x30>
   114d4:	mov	r4, r0
   114d8:	ldr	r0, [r0]
   114dc:	bl	113c4 <avl_insere_impl@@Base>
   114e0:	str	r0, [r4]
   114e4:	mov	r0, r5
   114e8:	pop	{r4, r5, r6, pc}
   114ec:	mvn	r0, #0
   114f0:	pop	{r4, r5, r6, pc}

000114f4 <avl_no_valormin@@Base>:
   114f4:	ldr	r3, [r0, #4]
   114f8:	cmp	r3, #0
   114fc:	bne	11504 <avl_no_valormin@@Base+0x10>
   11500:	bx	lr
   11504:	mov	r0, r3
   11508:	b	114f4 <avl_no_valormin@@Base>

0001150c <avl_no_valormax@@Base>:
   1150c:	ldr	r3, [r0, #8]
   11510:	cmp	r3, #0
   11514:	bne	1151c <avl_no_valormax@@Base+0x10>
   11518:	bx	lr
   1151c:	mov	r0, r3
   11520:	b	1150c <avl_no_valormax@@Base>

00011524 <avl_remove_impl@@Base>:
   11524:	push	{r4, r5, r6, r7, r8, lr}
   11528:	subs	r4, r0, #0
   1152c:	bne	1153c <avl_remove_impl@@Base+0x18>
   11530:	mov	r4, #0
   11534:	mov	r0, r4
   11538:	pop	{r4, r5, r6, r7, r8, pc}
   1153c:	ldr	r7, [r4]
   11540:	mov	r5, r1
   11544:	mov	r0, r5
   11548:	mov	r1, r7
   1154c:	bl	10d80 <strcmp@plt>
   11550:	cmp	r0, #0
   11554:	bge	115d0 <avl_remove_impl@@Base+0xac>
   11558:	mov	r1, r5
   1155c:	ldr	r0, [r4, #4]
   11560:	bl	11524 <avl_remove_impl@@Base>
   11564:	str	r0, [r4, #4]
   11568:	ldr	r1, [r4, #4]
   1156c:	ldr	r5, [r4, #8]
   11570:	cmp	r1, #0
   11574:	mvneq	r3, #0
   11578:	ldrne	r3, [r1, #12]
   1157c:	cmp	r5, #0
   11580:	mvneq	r2, #0
   11584:	ldrne	r2, [r5, #12]
   11588:	mov	r0, r4
   1158c:	cmp	r3, r2
   11590:	movlt	r3, r2
   11594:	add	r3, r3, #1
   11598:	str	r3, [r4, #12]
   1159c:	bl	1133c <calc_balanceamento@@Base>
   115a0:	cmp	r0, #1
   115a4:	ble	116a0 <avl_remove_impl@@Base+0x17c>
   115a8:	mov	r0, r5
   115ac:	bl	1133c <calc_balanceamento@@Base>
   115b0:	cmp	r0, #0
   115b4:	bge	115c4 <avl_remove_impl@@Base+0xa0>
   115b8:	mov	r0, r5
   115bc:	bl	11270 <roda_direita@@Base>
   115c0:	str	r0, [r4, #8]
   115c4:	mov	r0, r4
   115c8:	pop	{r4, r5, r6, r7, r8, lr}
   115cc:	b	112d4 <roda_esquerda@@Base>
   115d0:	movne	r1, r5
   115d4:	bne	11690 <avl_remove_impl@@Base+0x16c>
   115d8:	ldr	r5, [r4, #4]
   115dc:	ldr	r6, [r4, #8]
   115e0:	cmp	r5, #0
   115e4:	beq	1162c <avl_remove_impl@@Base+0x108>
   115e8:	cmp	r6, #0
   115ec:	bne	11660 <avl_remove_impl@@Base+0x13c>
   115f0:	ldr	r0, [r5]
   115f4:	bl	10e10 <strlen@plt>
   115f8:	add	r1, r0, #1
   115fc:	mov	r0, r7
   11600:	bl	10dc8 <realloc@plt>
   11604:	str	r0, [r4]
   11608:	ldr	r1, [r5]
   1160c:	bl	10dd4 <strcpy@plt>
   11610:	ldr	r3, [r5, #4]
   11614:	str	r3, [r4, #4]
   11618:	ldr	r3, [r5, #8]
   1161c:	str	r3, [r4, #8]
   11620:	ldr	r3, [r5, #12]
   11624:	str	r3, [r4, #12]
   11628:	b	11640 <avl_remove_impl@@Base+0x11c>
   1162c:	subs	r5, r6, #0
   11630:	moveq	r3, r4
   11634:	moveq	r4, r5
   11638:	moveq	r5, r3
   1163c:	bne	115f0 <avl_remove_impl@@Base+0xcc>
   11640:	ldr	r0, [r5]
   11644:	bl	10db0 <free@plt>
   11648:	mov	r0, r5
   1164c:	bl	10db0 <free@plt>
   11650:	cmp	r4, #0
   11654:	beq	11530 <avl_remove_impl@@Base+0xc>
   11658:	b	11568 <avl_remove_impl@@Base+0x44>
   1165c:	mov	r6, r3
   11660:	ldr	r3, [r6, #4]
   11664:	cmp	r3, #0
   11668:	bne	1165c <avl_remove_impl@@Base+0x138>
   1166c:	ldr	r0, [r6]
   11670:	bl	10e10 <strlen@plt>
   11674:	add	r1, r0, #1
   11678:	mov	r0, r7
   1167c:	bl	10dc8 <realloc@plt>
   11680:	str	r0, [r4]
   11684:	ldr	r1, [r6]
   11688:	bl	10dd4 <strcpy@plt>
   1168c:	ldr	r1, [r6]
   11690:	ldr	r0, [r4, #8]
   11694:	bl	11524 <avl_remove_impl@@Base>
   11698:	str	r0, [r4, #8]
   1169c:	b	11568 <avl_remove_impl@@Base+0x44>
   116a0:	cmn	r0, #1
   116a4:	bge	11534 <avl_remove_impl@@Base+0x10>
   116a8:	mov	r0, r1
   116ac:	bl	1133c <calc_balanceamento@@Base>
   116b0:	cmp	r0, #0
   116b4:	ble	116c4 <avl_remove_impl@@Base+0x1a0>
   116b8:	mov	r0, r1
   116bc:	bl	112d4 <roda_esquerda@@Base>
   116c0:	str	r0, [r4, #4]
   116c4:	mov	r0, r4
   116c8:	pop	{r4, r5, r6, r7, r8, lr}
   116cc:	b	11270 <roda_direita@@Base>

000116d0 <avl_apaga@@Base>:
   116d0:	push	{r4, lr}
   116d4:	subs	r4, r0, #0
   116d8:	bne	116ec <avl_apaga@@Base+0x1c>
   116dc:	pop	{r4, pc}
   116e0:	ldr	r1, [r0]
   116e4:	bl	11524 <avl_remove_impl@@Base>
   116e8:	str	r0, [r4]
   116ec:	ldr	r0, [r4]
   116f0:	cmp	r0, #0
   116f4:	bne	116e0 <avl_apaga@@Base+0x10>
   116f8:	mov	r0, r4
   116fc:	pop	{r4, lr}
   11700:	b	10db0 <free@plt>

00011704 <avl_remove@@Base>:
   11704:	cmp	r1, #0
   11708:	cmpne	r0, #0
   1170c:	push	{r4, r5, r6, lr}
   11710:	moveq	r5, #1
   11714:	movne	r5, #0
   11718:	beq	11734 <avl_remove@@Base+0x30>
   1171c:	mov	r4, r0
   11720:	ldr	r0, [r0]
   11724:	bl	11524 <avl_remove_impl@@Base>
   11728:	str	r0, [r4]
   1172c:	mov	r0, r5
   11730:	pop	{r4, r5, r6, pc}
   11734:	mvn	r0, #0
   11738:	pop	{r4, r5, r6, pc}

0001173c <avl_preordem_impl@@Base>:
   1173c:	push	{r4, r5, r6, lr}
   11740:	mov	r4, r0
   11744:	ldr	r5, [pc, #32]	; 1176c <avl_preordem_impl@@Base+0x30>
   11748:	cmp	r4, #0
   1174c:	popeq	{r4, r5, r6, pc}
   11750:	ldr	r1, [r4]
   11754:	mov	r0, r5
   11758:	bl	10d8c <printf@plt>
   1175c:	ldr	r0, [r4, #4]
   11760:	bl	1173c <avl_preordem_impl@@Base>
   11764:	ldr	r4, [r4, #8]
   11768:	b	11748 <avl_preordem_impl@@Base+0xc>
   1176c:	andeq	r1, r1, r6, lsl #31

00011770 <avl_imprime@@Base>:
   11770:	cmp	r0, #0
   11774:	bxeq	lr
   11778:	push	{r4, lr}
   1177c:	ldr	r0, [r0]
   11780:	bl	1173c <avl_preordem_impl@@Base>
   11784:	mov	r0, #10
   11788:	pop	{r4, lr}
   1178c:	b	10e28 <putchar@plt>

00011790 <tabela_nova@@Base>:
   11790:	cmp	r1, #0
   11794:	cmpne	r0, #0
   11798:	push	{r4, r5, r6, r7, r8, lr}
   1179c:	bgt	117ac <tabela_nova@@Base+0x1c>
   117a0:	mov	r4, #0
   117a4:	mov	r0, r4
   117a8:	pop	{r4, r5, r6, r7, r8, pc}
   117ac:	mov	r5, r0
   117b0:	mov	r0, #12
   117b4:	mov	r6, r1
   117b8:	bl	10dec <malloc@plt>
   117bc:	subs	r4, r0, #0
   117c0:	beq	117a0 <tabela_nova@@Base+0x10>
   117c4:	mov	r1, #4
   117c8:	mov	r0, r5
   117cc:	bl	10d68 <calloc@plt>
   117d0:	cmp	r0, #0
   117d4:	mov	r7, r0
   117d8:	str	r0, [r4, #4]
   117dc:	strne	r5, [r4, #8]
   117e0:	strne	r6, [r4]
   117e4:	bne	117a4 <tabela_nova@@Base+0x14>
   117e8:	mov	r0, r4
   117ec:	bl	10db0 <free@plt>
   117f0:	b	117a0 <tabela_nova@@Base+0x10>

000117f4 <tabela_apaga@@Base>:
   117f4:	push	{r4, r5, r6, r7, r8, lr}
   117f8:	subs	r4, r0, #0
   117fc:	movne	r6, #0
   11800:	bne	1181c <tabela_apaga@@Base+0x28>
   11804:	pop	{r4, r5, r6, r7, r8, pc}
   11808:	ldr	r3, [r4, #4]
   1180c:	ldr	r5, [r3, r6, lsl #2]
   11810:	cmp	r5, #0
   11814:	bne	1183c <tabela_apaga@@Base+0x48>
   11818:	add	r6, r6, #1
   1181c:	ldr	r3, [r4, #8]
   11820:	cmp	r6, r3
   11824:	blt	11808 <tabela_apaga@@Base+0x14>
   11828:	ldr	r0, [r4, #4]
   1182c:	bl	10db0 <free@plt>
   11830:	mov	r0, r4
   11834:	pop	{r4, r5, r6, r7, r8, lr}
   11838:	b	10db0 <free@plt>
   1183c:	ldm	r5, {r0, r7}
   11840:	bl	10db0 <free@plt>
   11844:	mov	r0, r5
   11848:	bl	10db0 <free@plt>
   1184c:	mov	r5, r7
   11850:	b	11810 <tabela_apaga@@Base+0x1c>

00011854 <tabela_adiciona@@Base>:
   11854:	cmp	r2, #0
   11858:	cmpne	r1, #0
   1185c:	moveq	r3, #1
   11860:	movne	r3, #0
   11864:	cmp	r0, #0
   11868:	orreq	r3, r3, #1
   1186c:	cmp	r3, #0
   11870:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11874:	beq	11884 <tabela_adiciona@@Base+0x30>
   11878:	mvn	r7, #1
   1187c:	mov	r0, r7
   11880:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11884:	mov	r4, r1
   11888:	mov	r5, r0
   1188c:	ldr	r3, [r0]
   11890:	ldr	r1, [r0, #8]
   11894:	mov	r0, r4
   11898:	mov	r6, r2
   1189c:	blx	r3
   118a0:	ldr	r9, [r5, #4]
   118a4:	ldr	r5, [r9, r0, lsl #2]
   118a8:	mov	r8, r0
   118ac:	cmp	r5, #0
   118b0:	beq	118e4 <tabela_adiciona@@Base+0x90>
   118b4:	ldr	sl, [r5]
   118b8:	mov	r1, r4
   118bc:	mov	r0, sl
   118c0:	bl	10d80 <strcmp@plt>
   118c4:	subs	r7, r0, #0
   118c8:	bne	118dc <tabela_adiciona@@Base+0x88>
   118cc:	mov	r1, r6
   118d0:	add	r0, sl, #50	; 0x32
   118d4:	bl	10dd4 <strcpy@plt>
   118d8:	b	1187c <tabela_adiciona@@Base+0x28>
   118dc:	ldr	r5, [r5, #4]
   118e0:	b	118ac <tabela_adiciona@@Base+0x58>
   118e4:	mov	r0, #8
   118e8:	bl	10dec <malloc@plt>
   118ec:	subs	r7, r0, #0
   118f0:	beq	11878 <tabela_adiciona@@Base+0x24>
   118f4:	mov	r0, #150	; 0x96
   118f8:	bl	10dec <malloc@plt>
   118fc:	cmp	r0, #0
   11900:	mov	sl, r0
   11904:	str	r0, [r7]
   11908:	beq	11878 <tabela_adiciona@@Base+0x24>
   1190c:	mov	r1, r4
   11910:	bl	10dd4 <strcpy@plt>
   11914:	mov	r1, r6
   11918:	add	r0, sl, #50	; 0x32
   1191c:	bl	10dd4 <strcpy@plt>
   11920:	ldr	r3, [r9, r8, lsl #2]
   11924:	str	r3, [r7, #4]
   11928:	str	r7, [r9, r8, lsl #2]
   1192c:	mov	r7, r5
   11930:	b	1187c <tabela_adiciona@@Base+0x28>

00011934 <tabela_remove@@Base>:
   11934:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11938:	subs	r4, r0, #0
   1193c:	mvneq	r6, #1
   11940:	beq	119ac <tabela_remove@@Base+0x78>
   11944:	mov	r5, r1
   11948:	ldr	r3, [r4]
   1194c:	ldr	r1, [r4, #8]
   11950:	mov	r0, r5
   11954:	blx	r3
   11958:	ldr	r9, [r4, #4]
   1195c:	mov	r7, #0
   11960:	ldr	r4, [r9, r0, lsl #2]
   11964:	mov	r8, r0
   11968:	cmp	r4, #0
   1196c:	mvneq	r6, #2
   11970:	beq	119ac <tabela_remove@@Base+0x78>
   11974:	ldr	sl, [r4]
   11978:	mov	r1, r5
   1197c:	mov	r0, sl
   11980:	bl	10d80 <strcmp@plt>
   11984:	ldr	r3, [r4, #4]
   11988:	subs	r6, r0, #0
   1198c:	bne	119b4 <tabela_remove@@Base+0x80>
   11990:	cmp	r7, #0
   11994:	mov	r0, sl
   11998:	strne	r3, [r7, #4]
   1199c:	streq	r3, [r9, r8, lsl #2]
   119a0:	bl	10db0 <free@plt>
   119a4:	mov	r0, r4
   119a8:	bl	10db0 <free@plt>
   119ac:	mov	r0, r6
   119b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119b4:	mov	r7, r4
   119b8:	mov	r4, r3
   119bc:	b	11968 <tabela_remove@@Base+0x34>

000119c0 <tabela_valor@@Base>:
   119c0:	push	{r4, r5, r6, lr}
   119c4:	subs	r4, r0, #0
   119c8:	bne	119d4 <tabela_valor@@Base+0x14>
   119cc:	mov	r0, #0
   119d0:	pop	{r4, r5, r6, pc}
   119d4:	mov	r6, r1
   119d8:	ldr	r3, [r4]
   119dc:	ldr	r1, [r4, #8]
   119e0:	mov	r0, r6
   119e4:	blx	r3
   119e8:	ldr	r3, [r4, #4]
   119ec:	ldr	r5, [r3, r0, lsl #2]
   119f0:	cmp	r5, #0
   119f4:	beq	119cc <tabela_valor@@Base+0xc>
   119f8:	ldr	r4, [r5]
   119fc:	mov	r1, r6
   11a00:	mov	r0, r4
   11a04:	bl	10d80 <strcmp@plt>
   11a08:	cmp	r0, #0
   11a0c:	bne	11a18 <tabela_valor@@Base+0x58>
   11a10:	add	r0, r4, #50	; 0x32
   11a14:	pop	{r4, r5, r6, pc}
   11a18:	ldr	r5, [r5, #4]
   11a1c:	b	119f0 <tabela_valor@@Base+0x30>

00011a20 <tabela_existe@@Base>:
   11a20:	cmp	r0, #0
   11a24:	cmpne	r1, #0
   11a28:	beq	11a44 <tabela_existe@@Base+0x24>
   11a2c:	push	{r4, lr}
   11a30:	bl	119c0 <tabela_valor@@Base>
   11a34:	cmp	r0, #0
   11a38:	mvneq	r0, #2
   11a3c:	movne	r0, #1
   11a40:	pop	{r4, pc}
   11a44:	mvn	r0, #1
   11a48:	bx	lr

00011a4c <tabela_esvazia@@Base>:
   11a4c:	push	{r4, r5, r6, r7, r8, lr}
   11a50:	subs	r6, r0, #0
   11a54:	movne	r5, #0
   11a58:	bne	11a84 <tabela_esvazia@@Base+0x38>
   11a5c:	mvn	r0, #1
   11a60:	pop	{r4, r5, r6, r7, r8, pc}
   11a64:	ldr	r3, [r6, #4]
   11a68:	lsl	r7, r5, #2
   11a6c:	ldr	r4, [r3, r5, lsl #2]
   11a70:	cmp	r4, #0
   11a74:	bne	11a98 <tabela_esvazia@@Base+0x4c>
   11a78:	ldr	r3, [r6, #4]
   11a7c:	add	r5, r5, #1
   11a80:	str	r4, [r3, r7]
   11a84:	ldr	r3, [r6, #8]
   11a88:	cmp	r5, r3
   11a8c:	blt	11a64 <tabela_esvazia@@Base+0x18>
   11a90:	mov	r0, #0
   11a94:	pop	{r4, r5, r6, r7, r8, pc}
   11a98:	ldm	r4, {r0, r8}
   11a9c:	bl	10db0 <free@plt>
   11aa0:	mov	r0, r4
   11aa4:	bl	10db0 <free@plt>
   11aa8:	mov	r4, r8
   11aac:	b	11a70 <tabela_esvazia@@Base+0x24>

00011ab0 <tabela_numelementos@@Base>:
   11ab0:	subs	r1, r0, #0
   11ab4:	movne	r0, #0
   11ab8:	ldrne	ip, [r1, #8]
   11abc:	movne	r3, r0
   11ac0:	bne	11ae0 <tabela_numelementos@@Base+0x30>
   11ac4:	mvn	r0, #1
   11ac8:	bx	lr
   11acc:	ldr	r2, [r1, #4]
   11ad0:	ldr	r2, [r2, r3, lsl #2]
   11ad4:	cmp	r2, #0
   11ad8:	bne	11aec <tabela_numelementos@@Base+0x3c>
   11adc:	add	r3, r3, #1
   11ae0:	cmp	r3, ip
   11ae4:	blt	11acc <tabela_numelementos@@Base+0x1c>
   11ae8:	bx	lr
   11aec:	ldr	r2, [r2, #4]
   11af0:	add	r0, r0, #1
   11af4:	b	11ad4 <tabela_numelementos@@Base+0x24>

00011af8 <tabela_elementos@@Base>:
   11af8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11afc:	mov	r4, r1
   11b00:	mov	r9, r0
   11b04:	bl	11ab0 <tabela_numelementos@@Base>
   11b08:	cmp	r0, #0
   11b0c:	str	r0, [r4]
   11b10:	bgt	11b20 <tabela_elementos@@Base+0x28>
   11b14:	mov	r8, #0
   11b18:	mov	r0, r8
   11b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b20:	mov	r7, #150	; 0x96
   11b24:	mul	r0, r7, r0
   11b28:	bl	10dec <malloc@plt>
   11b2c:	subs	r8, r0, #0
   11b30:	movne	sl, #0
   11b34:	movne	r5, sl
   11b38:	beq	11b14 <tabela_elementos@@Base+0x1c>
   11b3c:	ldr	r3, [r9, #8]
   11b40:	cmp	r5, r3
   11b44:	bge	11b18 <tabela_elementos@@Base+0x20>
   11b48:	ldr	r3, [r9, #4]
   11b4c:	ldr	r4, [r3, r5, lsl #2]
   11b50:	cmp	r4, #0
   11b54:	beq	11b84 <tabela_elementos@@Base+0x8c>
   11b58:	add	r6, sl, #1
   11b5c:	mla	r0, r7, r6, r8
   11b60:	ldr	r1, [r4]
   11b64:	mov	r2, #150	; 0x96
   11b68:	sub	r0, r0, #150	; 0x96
   11b6c:	bl	10dbc <memcpy@plt>
   11b70:	ldr	r4, [r4, #4]
   11b74:	mov	sl, r6
   11b78:	cmp	r4, #0
   11b7c:	add	r6, r6, #1
   11b80:	bne	11b5c <tabela_elementos@@Base+0x64>
   11b84:	add	r5, r5, #1
   11b88:	b	11b3c <tabela_elementos@@Base+0x44>

00011b8c <hash_krm@@Base>:
   11b8c:	sub	r2, r0, #1
   11b90:	mov	r0, #7
   11b94:	push	{r4, lr}
   11b98:	ldrb	r3, [r2, #1]!
   11b9c:	cmp	r3, #0
   11ba0:	bne	11bb0 <hash_krm@@Base+0x24>
   11ba4:	bl	11e7c <mostraTabela@@Base+0x28c>
   11ba8:	mov	r0, r1
   11bac:	pop	{r4, pc}
   11bb0:	add	r0, r0, r3
   11bb4:	b	11b98 <hash_krm@@Base+0xc>

00011bb8 <hash_djbm@@Base>:
   11bb8:	sub	r2, r0, #1
   11bbc:	ldr	r0, [pc, #40]	; 11bec <hash_djbm@@Base+0x34>
   11bc0:	mov	ip, #31
   11bc4:	push	{r4, lr}
   11bc8:	ldrb	r3, [r2, #1]!
   11bcc:	cmp	r3, #0
   11bd0:	bne	11be0 <hash_djbm@@Base+0x28>
   11bd4:	bl	11e7c <mostraTabela@@Base+0x28c>
   11bd8:	mov	r0, r1
   11bdc:	pop	{r4, pc}
   11be0:	mul	r0, ip, r0
   11be4:	eor	r0, r0, r3
   11be8:	b	11bc8 <hash_djbm@@Base+0x10>
   11bec:	andeq	r1, r0, r3, ror #9

00011bf0 <mostraTabela@@Base>:
   11bf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bf4:	mov	r6, r0
   11bf8:	bl	11ab0 <tabela_numelementos@@Base>
   11bfc:	ldr	r7, [pc, #128]	; 11c84 <mostraTabela@@Base+0x94>
   11c00:	ldr	r8, [pc, #128]	; 11c88 <mostraTabela@@Base+0x98>
   11c04:	mov	r4, #0
   11c08:	mov	r9, #10
   11c0c:	mov	r1, r0
   11c10:	ldr	r0, [pc, #116]	; 11c8c <mostraTabela@@Base+0x9c>
   11c14:	bl	10d8c <printf@plt>
   11c18:	ldr	r3, [r6, #8]
   11c1c:	cmp	r4, r3
   11c20:	blt	11c30 <mostraTabela@@Base+0x40>
   11c24:	mov	r0, #10
   11c28:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c2c:	b	10e28 <putchar@plt>
   11c30:	ldr	r3, [r6, #4]
   11c34:	ldr	r3, [r3, r4, lsl #2]
   11c38:	cmp	r3, #0
   11c3c:	beq	11c64 <mostraTabela@@Base+0x74>
   11c40:	mov	r1, r4
   11c44:	mov	r0, r7
   11c48:	bl	10d8c <printf@plt>
   11c4c:	ldr	r3, [r6, #4]
   11c50:	ldr	r5, [r3, r4, lsl #2]
   11c54:	cmp	r5, #0
   11c58:	bne	11c6c <mostraTabela@@Base+0x7c>
   11c5c:	mov	r0, r9
   11c60:	bl	10e28 <putchar@plt>
   11c64:	add	r4, r4, #1
   11c68:	b	11c18 <mostraTabela@@Base+0x28>
   11c6c:	ldr	r1, [r5]
   11c70:	mov	r0, r8
   11c74:	add	r2, r1, #50	; 0x32
   11c78:	bl	10d8c <printf@plt>
   11c7c:	ldr	r5, [r5, #4]
   11c80:	b	11c54 <mostraTabela@@Base+0x64>
   11c84:	andeq	r1, r1, lr, lsr #31
   11c88:			; <UNDEFINED> instruction: 0x00011fb5
   11c8c:	andeq	r1, r1, sl, lsl #31
   11c90:	subs	r2, r1, #1
   11c94:	bxeq	lr
   11c98:	bcc	11e70 <mostraTabela@@Base+0x280>
   11c9c:	cmp	r0, r1
   11ca0:	bls	11e54 <mostraTabela@@Base+0x264>
   11ca4:	tst	r1, r2
   11ca8:	beq	11e60 <mostraTabela@@Base+0x270>
   11cac:	clz	r3, r0
   11cb0:	clz	r2, r1
   11cb4:	sub	r3, r2, r3
   11cb8:	rsbs	r3, r3, #31
   11cbc:	addne	r3, r3, r3, lsl #1
   11cc0:	mov	r2, #0
   11cc4:	addne	pc, pc, r3, lsl #2
   11cc8:	nop			; (mov r0, r0)
   11ccc:	cmp	r0, r1, lsl #31
   11cd0:	adc	r2, r2, r2
   11cd4:	subcs	r0, r0, r1, lsl #31
   11cd8:	cmp	r0, r1, lsl #30
   11cdc:	adc	r2, r2, r2
   11ce0:	subcs	r0, r0, r1, lsl #30
   11ce4:	cmp	r0, r1, lsl #29
   11ce8:	adc	r2, r2, r2
   11cec:	subcs	r0, r0, r1, lsl #29
   11cf0:	cmp	r0, r1, lsl #28
   11cf4:	adc	r2, r2, r2
   11cf8:	subcs	r0, r0, r1, lsl #28
   11cfc:	cmp	r0, r1, lsl #27
   11d00:	adc	r2, r2, r2
   11d04:	subcs	r0, r0, r1, lsl #27
   11d08:	cmp	r0, r1, lsl #26
   11d0c:	adc	r2, r2, r2
   11d10:	subcs	r0, r0, r1, lsl #26
   11d14:	cmp	r0, r1, lsl #25
   11d18:	adc	r2, r2, r2
   11d1c:	subcs	r0, r0, r1, lsl #25
   11d20:	cmp	r0, r1, lsl #24
   11d24:	adc	r2, r2, r2
   11d28:	subcs	r0, r0, r1, lsl #24
   11d2c:	cmp	r0, r1, lsl #23
   11d30:	adc	r2, r2, r2
   11d34:	subcs	r0, r0, r1, lsl #23
   11d38:	cmp	r0, r1, lsl #22
   11d3c:	adc	r2, r2, r2
   11d40:	subcs	r0, r0, r1, lsl #22
   11d44:	cmp	r0, r1, lsl #21
   11d48:	adc	r2, r2, r2
   11d4c:	subcs	r0, r0, r1, lsl #21
   11d50:	cmp	r0, r1, lsl #20
   11d54:	adc	r2, r2, r2
   11d58:	subcs	r0, r0, r1, lsl #20
   11d5c:	cmp	r0, r1, lsl #19
   11d60:	adc	r2, r2, r2
   11d64:	subcs	r0, r0, r1, lsl #19
   11d68:	cmp	r0, r1, lsl #18
   11d6c:	adc	r2, r2, r2
   11d70:	subcs	r0, r0, r1, lsl #18
   11d74:	cmp	r0, r1, lsl #17
   11d78:	adc	r2, r2, r2
   11d7c:	subcs	r0, r0, r1, lsl #17
   11d80:	cmp	r0, r1, lsl #16
   11d84:	adc	r2, r2, r2
   11d88:	subcs	r0, r0, r1, lsl #16
   11d8c:	cmp	r0, r1, lsl #15
   11d90:	adc	r2, r2, r2
   11d94:	subcs	r0, r0, r1, lsl #15
   11d98:	cmp	r0, r1, lsl #14
   11d9c:	adc	r2, r2, r2
   11da0:	subcs	r0, r0, r1, lsl #14
   11da4:	cmp	r0, r1, lsl #13
   11da8:	adc	r2, r2, r2
   11dac:	subcs	r0, r0, r1, lsl #13
   11db0:	cmp	r0, r1, lsl #12
   11db4:	adc	r2, r2, r2
   11db8:	subcs	r0, r0, r1, lsl #12
   11dbc:	cmp	r0, r1, lsl #11
   11dc0:	adc	r2, r2, r2
   11dc4:	subcs	r0, r0, r1, lsl #11
   11dc8:	cmp	r0, r1, lsl #10
   11dcc:	adc	r2, r2, r2
   11dd0:	subcs	r0, r0, r1, lsl #10
   11dd4:	cmp	r0, r1, lsl #9
   11dd8:	adc	r2, r2, r2
   11ddc:	subcs	r0, r0, r1, lsl #9
   11de0:	cmp	r0, r1, lsl #8
   11de4:	adc	r2, r2, r2
   11de8:	subcs	r0, r0, r1, lsl #8
   11dec:	cmp	r0, r1, lsl #7
   11df0:	adc	r2, r2, r2
   11df4:	subcs	r0, r0, r1, lsl #7
   11df8:	cmp	r0, r1, lsl #6
   11dfc:	adc	r2, r2, r2
   11e00:	subcs	r0, r0, r1, lsl #6
   11e04:	cmp	r0, r1, lsl #5
   11e08:	adc	r2, r2, r2
   11e0c:	subcs	r0, r0, r1, lsl #5
   11e10:	cmp	r0, r1, lsl #4
   11e14:	adc	r2, r2, r2
   11e18:	subcs	r0, r0, r1, lsl #4
   11e1c:	cmp	r0, r1, lsl #3
   11e20:	adc	r2, r2, r2
   11e24:	subcs	r0, r0, r1, lsl #3
   11e28:	cmp	r0, r1, lsl #2
   11e2c:	adc	r2, r2, r2
   11e30:	subcs	r0, r0, r1, lsl #2
   11e34:	cmp	r0, r1, lsl #1
   11e38:	adc	r2, r2, r2
   11e3c:	subcs	r0, r0, r1, lsl #1
   11e40:	cmp	r0, r1
   11e44:	adc	r2, r2, r2
   11e48:	subcs	r0, r0, r1
   11e4c:	mov	r0, r2
   11e50:	bx	lr
   11e54:	moveq	r0, #1
   11e58:	movne	r0, #0
   11e5c:	bx	lr
   11e60:	clz	r2, r1
   11e64:	rsb	r2, r2, #31
   11e68:	lsr	r0, r0, r2
   11e6c:	bx	lr
   11e70:	cmp	r0, #0
   11e74:	mvnne	r0, #0
   11e78:	b	11e9c <mostraTabela@@Base+0x2ac>
   11e7c:	cmp	r1, #0
   11e80:	beq	11e70 <mostraTabela@@Base+0x280>
   11e84:	push	{r0, r1, lr}
   11e88:	bl	11c90 <mostraTabela@@Base+0xa0>
   11e8c:	pop	{r1, r2, lr}
   11e90:	mul	r3, r2, r0
   11e94:	sub	r1, r1, r3
   11e98:	bx	lr
   11e9c:	push	{r1, lr}
   11ea0:	mov	r0, #8
   11ea4:	bl	10d74 <raise@plt>
   11ea8:	pop	{r1, pc}

00011eac <__libc_csu_init@@Base>:
   11eac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11eb0:	mov	r7, r0
   11eb4:	ldr	r6, [pc, #72]	; 11f04 <__libc_csu_init@@Base+0x58>
   11eb8:	ldr	r5, [pc, #72]	; 11f08 <__libc_csu_init@@Base+0x5c>
   11ebc:	add	r6, pc, r6
   11ec0:	add	r5, pc, r5
   11ec4:	sub	r6, r6, r5
   11ec8:	mov	r8, r1
   11ecc:	mov	r9, r2
   11ed0:	bl	10d48 <calloc@plt-0x20>
   11ed4:	asrs	r6, r6, #2
   11ed8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11edc:	mov	r4, #0
   11ee0:	add	r4, r4, #1
   11ee4:	ldr	r3, [r5], #4
   11ee8:	mov	r2, r9
   11eec:	mov	r1, r8
   11ef0:	mov	r0, r7
   11ef4:	blx	r3
   11ef8:	cmp	r6, r4
   11efc:	bne	11ee0 <__libc_csu_init@@Base+0x34>
   11f00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f04:	andeq	r1, r1, ip, asr #32
   11f08:	andeq	r1, r1, r4, asr #32

00011f0c <__libc_csu_fini@@Base>:
   11f0c:	bx	lr

Disassembly of section .fini:

00011f10 <.fini>:
   11f10:	push	{r3, lr}
   11f14:	pop	{r3, pc}
