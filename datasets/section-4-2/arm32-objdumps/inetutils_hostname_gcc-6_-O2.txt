
../repos/inetutils/src/hostname:     file format elf32-littlearm


Disassembly of section .init:

00010f20 <.init>:
   10f20:	push	{r3, lr}
   10f24:	bl	11818 <__assert_fail@plt+0x620>
   10f28:	pop	{r3, pc}

Disassembly of section .plt:

00010f2c <calloc@plt-0x14>:
   10f2c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f30:	ldr	lr, [pc, #4]	; 10f3c <calloc@plt-0x4>
   10f34:	add	lr, pc, lr
   10f38:	ldr	pc, [lr, #8]!
   10f3c:	andeq	r9, r1, r4, asr #1

00010f40 <calloc@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #102400	; 0x19000
   10f48:	ldr	pc, [ip, #196]!	; 0xc4

00010f4c <fputs_unlocked@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #102400	; 0x19000
   10f54:	ldr	pc, [ip, #188]!	; 0xbc

00010f58 <raise@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #102400	; 0x19000
   10f60:	ldr	pc, [ip, #180]!	; 0xb4

00010f64 <__getdelim@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #102400	; 0x19000
   10f6c:	ldr	pc, [ip, #172]!	; 0xac

00010f70 <strcmp@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #102400	; 0x19000
   10f78:	ldr	pc, [ip, #164]!	; 0xa4

00010f7c <strtol@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #102400	; 0x19000
   10f84:	ldr	pc, [ip, #156]!	; 0x9c

00010f88 <printf@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #102400	; 0x19000
   10f90:	ldr	pc, [ip, #148]!	; 0x94

00010f94 <hstrerror@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #102400	; 0x19000
   10f9c:	ldr	pc, [ip, #140]!	; 0x8c

00010fa0 <memmove@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #102400	; 0x19000
   10fa8:	ldr	pc, [ip, #132]!	; 0x84

00010fac <strchrnul@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #102400	; 0x19000
   10fb4:	ldr	pc, [ip, #124]!	; 0x7c

00010fb8 <free@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #102400	; 0x19000
   10fc0:	ldr	pc, [ip, #116]!	; 0x74

00010fc4 <strndup@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #102400	; 0x19000
   10fcc:	ldr	pc, [ip, #108]!	; 0x6c

00010fd0 <memcpy@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #102400	; 0x19000
   10fd8:	ldr	pc, [ip, #100]!	; 0x64

00010fdc <fwrite_unlocked@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #102400	; 0x19000
   10fe4:	ldr	pc, [ip, #92]!	; 0x5c

00010fe8 <sleep@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #102400	; 0x19000
   10ff0:	ldr	pc, [ip, #84]!	; 0x54

00010ff4 <stpcpy@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #102400	; 0x19000
   10ffc:	ldr	pc, [ip, #76]!	; 0x4c

00011000 <getdomainname@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #102400	; 0x19000
   11008:	ldr	pc, [ip, #68]!	; 0x44

0001100c <strdup@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #102400	; 0x19000
   11014:	ldr	pc, [ip, #60]!	; 0x3c

00011018 <realloc@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #102400	; 0x19000
   11020:	ldr	pc, [ip, #52]!	; 0x34

00011024 <strcasecmp@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #102400	; 0x19000
   1102c:	ldr	pc, [ip, #44]!	; 0x2c

00011030 <funlockfile@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #102400	; 0x19000
   11038:	ldr	pc, [ip, #36]!	; 0x24

0001103c <fwrite@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #102400	; 0x19000
   11044:	ldr	pc, [ip, #28]!

00011048 <error@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #102400	; 0x19000
   11050:	ldr	pc, [ip, #20]!

00011054 <gethostname@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #102400	; 0x19000
   1105c:	ldr	pc, [ip, #12]!

00011060 <getenv@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #102400	; 0x19000
   11068:	ldr	pc, [ip, #4]!

0001106c <puts@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #24, 20	; 0x18000
   11074:	ldr	pc, [ip, #4092]!	; 0xffc

00011078 <malloc@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #24, 20	; 0x18000
   11080:	ldr	pc, [ip, #4084]!	; 0xff4

00011084 <__libc_start_main@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #24, 20	; 0x18000
   1108c:	ldr	pc, [ip, #4076]!	; 0xfec

00011090 <strerror@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #24, 20	; 0x18000
   11098:	ldr	pc, [ip, #4068]!	; 0xfe4

0001109c <__h_errno_location@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #24, 20	; 0x18000
   110a4:	ldr	pc, [ip, #4060]!	; 0xfdc

000110a8 <sethostname@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #24, 20	; 0x18000
   110b0:	ldr	pc, [ip, #4052]!	; 0xfd4

000110b4 <__ctype_tolower_loc@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #24, 20	; 0x18000
   110bc:	ldr	pc, [ip, #4044]!	; 0xfcc

000110c0 <__gmon_start__@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #24, 20	; 0x18000
   110c8:	ldr	pc, [ip, #4036]!	; 0xfc4

000110cc <mempcpy@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #24, 20	; 0x18000
   110d4:	ldr	pc, [ip, #4028]!	; 0xfbc

000110d8 <__ctype_b_loc@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #24, 20	; 0x18000
   110e0:	ldr	pc, [ip, #4020]!	; 0xfb4

000110e4 <exit@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #24, 20	; 0x18000
   110ec:	ldr	pc, [ip, #4012]!	; 0xfac

000110f0 <feof@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #24, 20	; 0x18000
   110f8:	ldr	pc, [ip, #4004]!	; 0xfa4

000110fc <strlen@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #24, 20	; 0x18000
   11104:	ldr	pc, [ip, #3996]!	; 0xf9c

00011108 <strchr@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #24, 20	; 0x18000
   11110:	ldr	pc, [ip, #3988]!	; 0xf94

00011114 <fprintf@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #24, 20	; 0x18000
   1111c:	ldr	pc, [ip, #3980]!	; 0xf8c

00011120 <__errno_location@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #24, 20	; 0x18000
   11128:	ldr	pc, [ip, #3972]!	; 0xf84

0001112c <strerror_r@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #24, 20	; 0x18000
   11134:	ldr	pc, [ip, #3964]!	; 0xf7c

00011138 <memset@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #24, 20	; 0x18000
   11140:	ldr	pc, [ip, #3956]!	; 0xf74

00011144 <memchr@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #24, 20	; 0x18000
   1114c:	ldr	pc, [ip, #3948]!	; 0xf6c

00011150 <fclose@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #24, 20	; 0x18000
   11158:	ldr	pc, [ip, #3940]!	; 0xf64

0001115c <__overflow@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #24, 20	; 0x18000
   11164:	ldr	pc, [ip, #3932]!	; 0xf5c

00011168 <strrchr@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #24, 20	; 0x18000
   11170:	ldr	pc, [ip, #3924]!	; 0xf54

00011174 <vfprintf@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #24, 20	; 0x18000
   1117c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011180 <fputc@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #24, 20	; 0x18000
   11188:	ldr	pc, [ip, #3908]!	; 0xf44

0001118c <sscanf@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #24, 20	; 0x18000
   11194:	ldr	pc, [ip, #3900]!	; 0xf3c

00011198 <flockfile@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #24, 20	; 0x18000
   111a0:	ldr	pc, [ip, #3892]!	; 0xf34

000111a4 <vsnprintf@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #24, 20	; 0x18000
   111ac:	ldr	pc, [ip, #3884]!	; 0xf2c

000111b0 <fopen64@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #24, 20	; 0x18000
   111b8:	ldr	pc, [ip, #3876]!	; 0xf24

000111bc <qsort@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #24, 20	; 0x18000
   111c4:	ldr	pc, [ip, #3868]!	; 0xf1c

000111c8 <inet_ntop@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #24, 20	; 0x18000
   111d0:	ldr	pc, [ip, #3860]!	; 0xf14

000111d4 <gethostbyname@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #24, 20	; 0x18000
   111dc:	ldr	pc, [ip, #3852]!	; 0xf0c

000111e0 <strncmp@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #24, 20	; 0x18000
   111e8:	ldr	pc, [ip, #3844]!	; 0xf04

000111ec <abort@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #24, 20	; 0x18000
   111f4:	ldr	pc, [ip, #3836]!	; 0xefc

000111f8 <__assert_fail@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #24, 20	; 0x18000
   11200:	ldr	pc, [ip, #3828]!	; 0xef4

Disassembly of section .text:

00011204 <argp_parse@@Base-0xdd0>:
   11204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11208:	mov	r8, r0
   1120c:	sub	sp, sp, #52	; 0x34
   11210:	ldr	r0, [r1]
   11214:	mov	r7, r1
   11218:	bl	12f74 <argp_parse@@Base+0xfa0>
   1121c:	ldr	r3, [pc, #1376]	; 11784 <__assert_fail@plt+0x58c>
   11220:	mov	r5, #0
   11224:	ldr	r2, [pc, #1372]	; 11788 <__assert_fail@plt+0x590>
   11228:	add	r6, sp, #28
   1122c:	ldr	r4, [pc, #1368]	; 1178c <__assert_fail@plt+0x594>
   11230:	ldr	r1, [pc, #1368]	; 11790 <__assert_fail@plt+0x598>
   11234:	ldr	r0, [pc, #1368]	; 11794 <__assert_fail@plt+0x59c>
   11238:	str	r2, [r3]
   1123c:	str	r5, [sp, #32]
   11240:	str	r5, [sp, #28]
   11244:	str	r5, [sp, #36]	; 0x24
   11248:	str	r5, [sp, #40]	; 0x28
   1124c:	str	r5, [sp, #44]	; 0x2c
   11250:	bl	12d98 <argp_parse@@Base+0xdc4>
   11254:	mov	r3, r5
   11258:	stm	sp, {r5, r6}
   1125c:	mov	r2, r7
   11260:	mov	r1, r8
   11264:	ldr	r0, [pc, #1324]	; 11798 <__assert_fail@plt+0x5a0>
   11268:	bl	11fd4 <argp_parse@@Base>
   1126c:	ldr	r3, [r4]
   11270:	cmp	r3, r5
   11274:	beq	112a8 <__assert_fail@plt+0xb0>
   11278:	ldr	r1, [pc, #1308]	; 1179c <__assert_fail@plt+0x5a4>
   1127c:	ldr	r2, [pc, #1308]	; 117a0 <__assert_fail@plt+0x5a8>
   11280:	cmp	r3, r2
   11284:	cmpne	r3, r1
   11288:	beq	112bc <__assert_fail@plt+0xc4>
   1128c:	ldr	r3, [pc, #1296]	; 117a4 <__assert_fail@plt+0x5ac>
   11290:	ldr	r2, [r4, #4]
   11294:	cmp	r2, r3
   11298:	beq	11324 <__assert_fail@plt+0x12c>
   1129c:	mov	r0, #0
   112a0:	add	sp, sp, #52	; 0x34
   112a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112a8:	ldr	r3, [r4, #4]
   112ac:	cmp	r3, r5
   112b0:	ldreq	r3, [pc, #1256]	; 117a0 <__assert_fail@plt+0x5a8>
   112b4:	streq	r3, [r4]
   112b8:	bne	1128c <__assert_fail@plt+0x94>
   112bc:	blx	r3
   112c0:	subs	sl, r0, #0
   112c4:	beq	1162c <__assert_fail@plt+0x434>
   112c8:	ldrsh	r3, [sp, #36]	; 0x24
   112cc:	cmp	r3, #1
   112d0:	beq	1152c <__assert_fail@plt+0x334>
   112d4:	ldrsh	r3, [sp, #38]	; 0x26
   112d8:	cmp	r3, #1
   112dc:	beq	115e4 <__assert_fail@plt+0x3ec>
   112e0:	ldrsh	r5, [sp, #40]	; 0x28
   112e4:	cmp	r5, #1
   112e8:	beq	1144c <__assert_fail@plt+0x254>
   112ec:	mov	r0, sl
   112f0:	bl	1100c <strdup@plt>
   112f4:	subs	r4, r0, #0
   112f8:	beq	116b8 <__assert_fail@plt+0x4c0>
   112fc:	ldrb	r3, [r4]
   11300:	cmp	r3, #0
   11304:	beq	11310 <__assert_fail@plt+0x118>
   11308:	mov	r0, r4
   1130c:	bl	1106c <puts@plt>
   11310:	mov	r0, r4
   11314:	bl	12e6c <argp_parse@@Base+0xe98>
   11318:	mov	r0, sl
   1131c:	bl	12e6c <argp_parse@@Base+0xe98>
   11320:	b	1129c <__assert_fail@plt+0xa4>
   11324:	ldr	r0, [sp, #28]
   11328:	cmp	r0, #0
   1132c:	ldreq	r5, [sp, #32]
   11330:	beq	11414 <__assert_fail@plt+0x21c>
   11334:	mov	r3, #0
   11338:	ldr	r1, [pc, #1128]	; 117a8 <__assert_fail@plt+0x5b0>
   1133c:	str	r3, [sp, #8]
   11340:	str	r3, [sp, #12]
   11344:	bl	111b0 <fopen64@plt>
   11348:	subs	r6, r0, #0
   1134c:	beq	116ec <__assert_fail@plt+0x4f4>
   11350:	bl	11120 <__errno_location@plt>
   11354:	mov	r3, #0
   11358:	ldr	fp, [pc, #1100]	; 117ac <__assert_fail@plt+0x5b4>
   1135c:	ldr	sl, [pc, #1100]	; 117b0 <__assert_fail@plt+0x5b8>
   11360:	ldr	r8, [pc, #1100]	; 117b4 <__assert_fail@plt+0x5bc>
   11364:	mov	r7, #10
   11368:	mov	r9, r0
   1136c:	str	r3, [r0]
   11370:	b	113c0 <__assert_fail@plt+0x1c8>
   11374:	ldr	r3, [sp, #8]
   11378:	add	r0, r5, #1
   1137c:	ldrb	r3, [r3]
   11380:	cmp	r3, #35	; 0x23
   11384:	beq	113b0 <__assert_fail@plt+0x1b8>
   11388:	bl	1341c <argp_parse@@Base+0x1448>
   1138c:	mov	r1, r8
   11390:	mov	r5, r0
   11394:	mov	r2, r0
   11398:	ldr	r0, [sp, #8]
   1139c:	bl	1118c <sscanf@plt>
   113a0:	cmp	r0, #1
   113a4:	mov	r0, r5
   113a8:	beq	11404 <__assert_fail@plt+0x20c>
   113ac:	bl	12e6c <argp_parse@@Base+0xe98>
   113b0:	mov	r0, r6
   113b4:	bl	110f0 <feof@plt>
   113b8:	cmp	r0, #0
   113bc:	bne	11400 <__assert_fail@plt+0x208>
   113c0:	mov	r3, r6
   113c4:	mov	r2, r7
   113c8:	add	r1, sp, #12
   113cc:	add	r0, sp, #8
   113d0:	bl	10f64 <__getdelim@plt>
   113d4:	cmn	r0, #1
   113d8:	mov	r5, r0
   113dc:	bne	11374 <__assert_fail@plt+0x17c>
   113e0:	ldr	r1, [r9]
   113e4:	ldr	r2, [pc, #972]	; 117b8 <__assert_fail@plt+0x5c0>
   113e8:	cmp	r1, #0
   113ec:	moveq	r3, fp
   113f0:	movne	r3, sl
   113f4:	mov	r0, #1
   113f8:	bl	11048 <error@plt>
   113fc:	b	11374 <__assert_fail@plt+0x17c>
   11400:	mov	r5, #0
   11404:	ldr	r0, [sp, #8]
   11408:	bl	12e6c <argp_parse@@Base+0xe98>
   1140c:	mov	r0, r6
   11410:	bl	11150 <fclose@plt>
   11414:	cmp	r5, #0
   11418:	beq	11514 <__assert_fail@plt+0x31c>
   1141c:	mov	r0, r5
   11420:	bl	110fc <strlen@plt>
   11424:	subs	r1, r0, #0
   11428:	beq	11514 <__assert_fail@plt+0x31c>
   1142c:	ldr	r3, [r4, #4]
   11430:	mov	r0, r5
   11434:	blx	r3
   11438:	cmn	r0, #1
   1143c:	beq	115cc <__assert_fail@plt+0x3d4>
   11440:	mov	r0, r5
   11444:	bl	12e6c <argp_parse@@Base+0xe98>
   11448:	b	1129c <__assert_fail@plt+0xa4>
   1144c:	mov	r0, #256	; 0x100
   11450:	bl	1341c <argp_parse@@Base+0x1448>
   11454:	mov	r8, #0
   11458:	strb	r8, [r0]
   1145c:	mov	r4, r0
   11460:	mov	r0, sl
   11464:	bl	111d4 <gethostbyname@plt>
   11468:	subs	r7, r0, #0
   1146c:	beq	11748 <__assert_fail@plt+0x550>
   11470:	mov	r5, r8
   11474:	mov	r9, #256	; 0x100
   11478:	ldr	r1, [r7, #16]
   1147c:	mov	fp, #16
   11480:	b	114b4 <__assert_fail@plt+0x2bc>
   11484:	mov	r0, r4
   11488:	bl	110fc <strlen@plt>
   1148c:	add	r1, sp, #12
   11490:	add	r0, r4, r0
   11494:	bl	10ff4 <stpcpy@plt>
   11498:	ldr	r1, [r7, #16]
   1149c:	ldr	r3, [r1, r6]
   114a0:	cmp	r3, #0
   114a4:	ldrne	r3, [pc, #784]	; 117bc <__assert_fail@plt+0x5c4>
   114a8:	ldrhne	r3, [r3]
   114ac:	strhne	r3, [r0]
   114b0:	ldrne	r1, [r7, #16]
   114b4:	ldr	r0, [r1, r8]
   114b8:	add	r6, r8, #4
   114bc:	subs	r1, r0, #0
   114c0:	mov	r3, fp
   114c4:	add	r2, sp, #12
   114c8:	mov	r8, r6
   114cc:	beq	112fc <__assert_fail@plt+0x104>
   114d0:	ldr	r0, [r7, #8]
   114d4:	bl	111c8 <inet_ntop@plt>
   114d8:	ldr	r3, [r7, #16]
   114dc:	add	r0, sp, #12
   114e0:	ldr	r3, [r3, r6]
   114e4:	cmp	r3, #0
   114e8:	addne	r5, r5, #1
   114ec:	bl	110fc <strlen@plt>
   114f0:	add	r5, r5, r0
   114f4:	cmp	r5, r9
   114f8:	bcc	11484 <__assert_fail@plt+0x28c>
   114fc:	lsl	r9, r9, #1
   11500:	mov	r0, r4
   11504:	mov	r1, r9
   11508:	bl	13458 <argp_parse@@Base+0x1484>
   1150c:	mov	r4, r0
   11510:	b	11484 <__assert_fail@plt+0x28c>
   11514:	mov	r1, #0
   11518:	ldr	r2, [pc, #672]	; 117c0 <__assert_fail@plt+0x5c8>
   1151c:	mov	r0, #1
   11520:	bl	11048 <error@plt>
   11524:	mov	r1, #0
   11528:	b	1142c <__assert_fail@plt+0x234>
   1152c:	mov	r0, #256	; 0x100
   11530:	bl	1341c <argp_parse@@Base+0x1448>
   11534:	mov	r6, #0
   11538:	strb	r6, [r0]
   1153c:	mov	r4, r0
   11540:	mov	r0, sl
   11544:	bl	111d4 <gethostbyname@plt>
   11548:	subs	r9, r0, #0
   1154c:	beq	1176c <__assert_fail@plt+0x574>
   11550:	mov	r5, r6
   11554:	mov	r8, #256	; 0x100
   11558:	b	11580 <__assert_fail@plt+0x388>
   1155c:	mov	r0, r4
   11560:	bl	110fc <strlen@plt>
   11564:	ldr	r1, [r7, r6]
   11568:	mov	r6, fp
   1156c:	add	r0, r4, r0
   11570:	bl	10ff4 <stpcpy@plt>
   11574:	ldr	r3, [pc, #576]	; 117bc <__assert_fail@plt+0x5c4>
   11578:	ldrh	r3, [r3]
   1157c:	strh	r3, [r0]
   11580:	ldr	r7, [r9, #4]
   11584:	add	fp, r6, #4
   11588:	ldr	r3, [r7, r6]
   1158c:	subs	r0, r3, #0
   11590:	beq	112fc <__assert_fail@plt+0x104>
   11594:	ldr	r3, [r7, fp]
   11598:	cmp	r3, #0
   1159c:	addne	r5, r5, #1
   115a0:	bl	110fc <strlen@plt>
   115a4:	add	r5, r5, r0
   115a8:	cmp	r5, r8
   115ac:	bcc	1155c <__assert_fail@plt+0x364>
   115b0:	lsl	r8, r8, #1
   115b4:	mov	r0, r4
   115b8:	mov	r1, r8
   115bc:	bl	13458 <argp_parse@@Base+0x1484>
   115c0:	ldr	r7, [r9, #4]
   115c4:	mov	r4, r0
   115c8:	b	1155c <__assert_fail@plt+0x364>
   115cc:	bl	11120 <__errno_location@plt>
   115d0:	ldr	r2, [pc, #492]	; 117c4 <__assert_fail@plt+0x5cc>
   115d4:	ldr	r1, [r0]
   115d8:	mov	r0, #1
   115dc:	bl	11048 <error@plt>
   115e0:	b	11440 <__assert_fail@plt+0x248>
   115e4:	mov	r0, sl
   115e8:	bl	111d4 <gethostbyname@plt>
   115ec:	cmp	r0, #0
   115f0:	moveq	r0, sl
   115f4:	ldrne	r0, [r0]
   115f8:	bl	1100c <strdup@plt>
   115fc:	cmp	r0, #0
   11600:	mov	r4, r0
   11604:	beq	11704 <__assert_fail@plt+0x50c>
   11608:	ldrsh	r3, [sp, #42]	; 0x2a
   1160c:	cmp	r3, #1
   11610:	beq	1164c <__assert_fail@plt+0x454>
   11614:	ldrsh	r2, [sp, #44]	; 0x2c
   11618:	cmp	r2, #1
   1161c:	beq	11644 <__assert_fail@plt+0x44c>
   11620:	cmp	r4, #0
   11624:	beq	11310 <__assert_fail@plt+0x118>
   11628:	b	112fc <__assert_fail@plt+0x104>
   1162c:	bl	11120 <__errno_location@plt>
   11630:	ldr	r2, [pc, #400]	; 117c8 <__assert_fail@plt+0x5d0>
   11634:	ldr	r1, [r0]
   11638:	mov	r0, #1
   1163c:	bl	11048 <error@plt>
   11640:	b	112c8 <__assert_fail@plt+0xd0>
   11644:	cmp	r4, #0
   11648:	beq	1168c <__assert_fail@plt+0x494>
   1164c:	ldrb	r2, [r4]
   11650:	cmp	r2, #0
   11654:	cmpne	r2, #40	; 0x28
   11658:	movne	r5, #1
   1165c:	moveq	r5, #0
   11660:	beq	116d0 <__assert_fail@plt+0x4d8>
   11664:	mov	r0, sl
   11668:	bl	12e6c <argp_parse@@Base+0xe98>
   1166c:	ldrsh	r3, [sp, #42]	; 0x2a
   11670:	mov	sl, r4
   11674:	mov	r4, #0
   11678:	cmp	r3, #1
   1167c:	beq	11724 <__assert_fail@plt+0x52c>
   11680:	ldrsh	r3, [sp, #44]	; 0x2c
   11684:	cmp	r3, #1
   11688:	bne	11620 <__assert_fail@plt+0x428>
   1168c:	mov	r1, #46	; 0x2e
   11690:	mov	r0, sl
   11694:	bl	11108 <strchr@plt>
   11698:	subs	r1, r0, #0
   1169c:	beq	11774 <__assert_fail@plt+0x57c>
   116a0:	sub	r1, r1, sl
   116a4:	mov	r0, sl
   116a8:	bl	10fc4 <strndup@plt>
   116ac:	mov	r4, r0
   116b0:	cmp	r4, #0
   116b4:	bne	112fc <__assert_fail@plt+0x104>
   116b8:	bl	11120 <__errno_location@plt>
   116bc:	ldr	r2, [pc, #264]	; 117cc <__assert_fail@plt+0x5d4>
   116c0:	ldr	r1, [r0]
   116c4:	mov	r0, #1
   116c8:	bl	11048 <error@plt>
   116cc:	b	11310 <__assert_fail@plt+0x118>
   116d0:	cmp	r2, #40	; 0x28
   116d4:	bne	11678 <__assert_fail@plt+0x480>
   116d8:	mov	r0, r4
   116dc:	bl	12e6c <argp_parse@@Base+0xe98>
   116e0:	mov	r4, r5
   116e4:	ldrsh	r3, [sp, #42]	; 0x2a
   116e8:	b	11678 <__assert_fail@plt+0x480>
   116ec:	bl	11120 <__errno_location@plt>
   116f0:	ldr	r2, [pc, #216]	; 117d0 <__assert_fail@plt+0x5d8>
   116f4:	ldr	r1, [r0]
   116f8:	mov	r0, #1
   116fc:	bl	11048 <error@plt>
   11700:	b	11350 <__assert_fail@plt+0x158>
   11704:	bl	11120 <__errno_location@plt>
   11708:	ldr	r2, [pc, #188]	; 117cc <__assert_fail@plt+0x5d4>
   1170c:	ldr	r1, [r0]
   11710:	mov	r0, #1
   11714:	bl	11048 <error@plt>
   11718:	ldrsh	r3, [sp, #42]	; 0x2a
   1171c:	cmp	r3, #1
   11720:	bne	11614 <__assert_fail@plt+0x41c>
   11724:	mov	r1, #46	; 0x2e
   11728:	mov	r0, sl
   1172c:	bl	11108 <strchr@plt>
   11730:	cmp	r0, #0
   11734:	addne	r0, r0, #1
   11738:	ldreq	r0, [pc, #148]	; 117d4 <__assert_fail@plt+0x5dc>
   1173c:	bl	1100c <strdup@plt>
   11740:	mov	r4, r0
   11744:	b	116b0 <__assert_fail@plt+0x4b8>
   11748:	bl	1109c <__h_errno_location@plt>
   1174c:	ldr	r0, [r0]
   11750:	bl	10f94 <hstrerror@plt>
   11754:	mov	r1, r7
   11758:	ldr	r2, [pc, #120]	; 117d8 <__assert_fail@plt+0x5e0>
   1175c:	mov	r3, r0
   11760:	mov	r0, r5
   11764:	bl	11048 <error@plt>
   11768:	b	112fc <__assert_fail@plt+0x104>
   1176c:	strb	r9, [r4]
   11770:	b	112fc <__assert_fail@plt+0x104>
   11774:	mov	r0, sl
   11778:	bl	1100c <strdup@plt>
   1177c:	mov	r4, r0
   11780:	b	116b0 <__assert_fail@plt+0x4b8>
   11784:	andeq	sl, r2, ip, lsr #5
   11788:	andeq	r8, r1, ip, lsl #17
   1178c:	andeq	sl, r2, ip, ror #4
   11790:	andeq	sl, r2, r4, lsl #2
   11794:	andeq	r8, r1, r4, lsr #17
   11798:	andeq	sl, r2, ip, lsl #2
   1179c:	muleq	r1, r0, r9
   117a0:	andeq	r3, r1, ip, ror sl
   117a4:	andeq	r1, r1, r8, lsr #1
   117a8:	andeq	r9, r1, ip, asr r2
   117ac:	andeq	r8, r1, r0, lsl #17
   117b0:	andeq	r9, r1, ip, ror #9
   117b4:	strdeq	r8, [r1], -ip
   117b8:	strdeq	r8, [r1], -r0
   117bc:	andeq	r8, r1, r8, asr #17
   117c0:	andeq	r8, r1, r0, lsl #18
   117c4:	andeq	r8, r1, r0, lsl r9
   117c8:			; <UNDEFINED> instruction: 0x000188b0
   117cc:	andeq	r8, r1, r8, ror r8
   117d0:	andeq	r8, r1, r8, ror #17
   117d4:	andeq	r8, r1, ip, asr #17
   117d8:	ldrdeq	r8, [r1], -r4
   117dc:	mov	fp, #0
   117e0:	mov	lr, #0
   117e4:	pop	{r1}		; (ldr r1, [sp], #4)
   117e8:	mov	r2, sp
   117ec:	push	{r2}		; (str r2, [sp, #-4]!)
   117f0:	push	{r0}		; (str r0, [sp, #-4]!)
   117f4:	ldr	ip, [pc, #16]	; 1180c <__assert_fail@plt+0x614>
   117f8:	push	{ip}		; (str ip, [sp, #-4]!)
   117fc:	ldr	r0, [pc, #12]	; 11810 <__assert_fail@plt+0x618>
   11800:	ldr	r3, [pc, #12]	; 11814 <__assert_fail@plt+0x61c>
   11804:	bl	11084 <__libc_start_main@plt>
   11808:	bl	111ec <abort@plt>
   1180c:	andeq	r8, r1, ip, lsr r8
   11810:	andeq	r1, r1, r4, lsl #4
   11814:	ldrdeq	r8, [r1], -ip
   11818:	ldr	r3, [pc, #20]	; 11834 <__assert_fail@plt+0x63c>
   1181c:	ldr	r2, [pc, #20]	; 11838 <__assert_fail@plt+0x640>
   11820:	add	r3, pc, r3
   11824:	ldr	r2, [r3, r2]
   11828:	cmp	r2, #0
   1182c:	bxeq	lr
   11830:	b	110c0 <__gmon_start__@plt>
   11834:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11838:	strdeq	r0, [r0], -r8
   1183c:	ldr	r3, [pc, #28]	; 11860 <__assert_fail@plt+0x668>
   11840:	ldr	r0, [pc, #28]	; 11864 <__assert_fail@plt+0x66c>
   11844:	sub	r3, r3, r0
   11848:	cmp	r3, #6
   1184c:	bxls	lr
   11850:	ldr	r3, [pc, #16]	; 11868 <__assert_fail@plt+0x670>
   11854:	cmp	r3, #0
   11858:	bxeq	lr
   1185c:	bx	r3
   11860:	andeq	sl, r2, r7, asr r2
   11864:	andeq	sl, r2, r4, asr r2
   11868:	andeq	r0, r0, r0
   1186c:	ldr	r1, [pc, #36]	; 11898 <__assert_fail@plt+0x6a0>
   11870:	ldr	r0, [pc, #36]	; 1189c <__assert_fail@plt+0x6a4>
   11874:	sub	r1, r1, r0
   11878:	asr	r1, r1, #2
   1187c:	add	r1, r1, r1, lsr #31
   11880:	asrs	r1, r1, #1
   11884:	bxeq	lr
   11888:	ldr	r3, [pc, #16]	; 118a0 <__assert_fail@plt+0x6a8>
   1188c:	cmp	r3, #0
   11890:	bxeq	lr
   11894:	bx	r3
   11898:	andeq	sl, r2, r4, asr r2
   1189c:	andeq	sl, r2, r4, asr r2
   118a0:	andeq	r0, r0, r0
   118a4:	push	{r4, lr}
   118a8:	ldr	r4, [pc, #24]	; 118c8 <__assert_fail@plt+0x6d0>
   118ac:	ldrb	r3, [r4]
   118b0:	cmp	r3, #0
   118b4:	popne	{r4, pc}
   118b8:	bl	1183c <__assert_fail@plt+0x644>
   118bc:	mov	r3, #1
   118c0:	strb	r3, [r4]
   118c4:	pop	{r4, pc}
   118c8:	andeq	sl, r2, r8, ror #4
   118cc:	ldr	r0, [pc, #40]	; 118fc <__assert_fail@plt+0x704>
   118d0:	ldr	r3, [r0]
   118d4:	cmp	r3, #0
   118d8:	bne	118e0 <__assert_fail@plt+0x6e8>
   118dc:	b	1186c <__assert_fail@plt+0x674>
   118e0:	ldr	r3, [pc, #24]	; 11900 <__assert_fail@plt+0x708>
   118e4:	cmp	r3, #0
   118e8:	beq	118dc <__assert_fail@plt+0x6e4>
   118ec:	push	{r4, lr}
   118f0:	blx	r3
   118f4:	pop	{r4, lr}
   118f8:	b	1186c <__assert_fail@plt+0x674>
   118fc:	andeq	r9, r2, ip, lsl #30
   11900:	andeq	r0, r0, r0
   11904:	cmp	r0, #100	; 0x64
   11908:	push	{r4, r5, r6, lr}
   1190c:	ldr	r5, [r2, #28]
   11910:	beq	11a40 <__assert_fail@plt+0x848>
   11914:	ble	11948 <__assert_fail@plt+0x750>
   11918:	cmp	r0, #105	; 0x69
   1191c:	beq	11a24 <__assert_fail@plt+0x82c>
   11920:	ble	119a4 <__assert_fail@plt+0x7ac>
   11924:	cmp	r0, #115	; 0x73
   11928:	beq	11984 <__assert_fail@plt+0x78c>
   1192c:	cmp	r0, #121	; 0x79
   11930:	bne	11960 <__assert_fail@plt+0x768>
   11934:	ldr	r3, [pc, #292]	; 11a60 <__assert_fail@plt+0x868>
   11938:	ldr	r2, [pc, #292]	; 11a64 <__assert_fail@plt+0x86c>
   1193c:	mov	r0, #0
   11940:	str	r2, [r3]
   11944:	pop	{r4, r5, r6, pc}
   11948:	cmp	r0, #70	; 0x46
   1194c:	beq	119c8 <__assert_fail@plt+0x7d0>
   11950:	cmp	r0, #97	; 0x61
   11954:	beq	11968 <__assert_fail@plt+0x770>
   11958:	cmp	r0, #0
   1195c:	beq	119e0 <__assert_fail@plt+0x7e8>
   11960:	mov	r0, #7
   11964:	pop	{r4, r5, r6, pc}
   11968:	ldr	r2, [pc, #240]	; 11a60 <__assert_fail@plt+0x868>
   1196c:	ldr	r1, [pc, #244]	; 11a68 <__assert_fail@plt+0x870>
   11970:	mov	r3, #1
   11974:	str	r1, [r2]
   11978:	strh	r3, [r5, #8]
   1197c:	mov	r0, #0
   11980:	pop	{r4, r5, r6, pc}
   11984:	ldr	r2, [pc, #212]	; 11a60 <__assert_fail@plt+0x868>
   11988:	ldr	r1, [pc, #216]	; 11a68 <__assert_fail@plt+0x870>
   1198c:	mov	r3, #1
   11990:	str	r1, [r2]
   11994:	strh	r3, [r5, #10]
   11998:	strh	r3, [r5, #16]
   1199c:	mov	r0, #0
   119a0:	pop	{r4, r5, r6, pc}
   119a4:	cmp	r0, #102	; 0x66
   119a8:	bne	11960 <__assert_fail@plt+0x768>
   119ac:	ldr	r2, [pc, #172]	; 11a60 <__assert_fail@plt+0x868>
   119b0:	ldr	r1, [pc, #176]	; 11a68 <__assert_fail@plt+0x870>
   119b4:	mov	r3, #1
   119b8:	str	r1, [r2]
   119bc:	strh	r3, [r5, #10]
   119c0:	mov	r0, #0
   119c4:	pop	{r4, r5, r6, pc}
   119c8:	ldr	r3, [pc, #144]	; 11a60 <__assert_fail@plt+0x868>
   119cc:	ldr	r2, [pc, #152]	; 11a6c <__assert_fail@plt+0x874>
   119d0:	str	r1, [r5]
   119d4:	str	r2, [r3, #4]
   119d8:	mov	r0, #0
   119dc:	pop	{r4, r5, r6, pc}
   119e0:	ldr	r3, [pc, #120]	; 11a60 <__assert_fail@plt+0x868>
   119e4:	ldr	r2, [pc, #128]	; 11a6c <__assert_fail@plt+0x874>
   119e8:	mov	r4, r0
   119ec:	mov	r0, r1
   119f0:	str	r2, [r3, #4]
   119f4:	bl	1100c <strdup@plt>
   119f8:	cmp	r0, #0
   119fc:	mov	r6, r0
   11a00:	str	r0, [r5, #4]
   11a04:	bne	1197c <__assert_fail@plt+0x784>
   11a08:	bl	11120 <__errno_location@plt>
   11a0c:	ldr	r2, [pc, #92]	; 11a70 <__assert_fail@plt+0x878>
   11a10:	ldr	r1, [r0]
   11a14:	mov	r0, #1
   11a18:	bl	11048 <error@plt>
   11a1c:	mov	r0, r6
   11a20:	pop	{r4, r5, r6, pc}
   11a24:	ldr	r2, [pc, #52]	; 11a60 <__assert_fail@plt+0x868>
   11a28:	ldr	r1, [pc, #56]	; 11a68 <__assert_fail@plt+0x870>
   11a2c:	mov	r3, #1
   11a30:	str	r1, [r2]
   11a34:	strh	r3, [r5, #12]
   11a38:	mov	r0, #0
   11a3c:	pop	{r4, r5, r6, pc}
   11a40:	ldr	r2, [pc, #24]	; 11a60 <__assert_fail@plt+0x868>
   11a44:	ldr	r1, [pc, #28]	; 11a68 <__assert_fail@plt+0x870>
   11a48:	mov	r3, #1
   11a4c:	str	r1, [r2]
   11a50:	strh	r3, [r5, #10]
   11a54:	strh	r3, [r5, #14]
   11a58:	mov	r0, #0
   11a5c:	pop	{r4, r5, r6, pc}
   11a60:	andeq	sl, r2, ip, ror #4
   11a64:	muleq	r1, r0, r9
   11a68:	andeq	r3, r1, ip, ror sl
   11a6c:	andeq	r1, r1, r8, lsr #1
   11a70:	andeq	r8, r1, r8, ror r8
   11a74:	ldr	r3, [r0]
   11a78:	push	{r4, r5, r6, lr}
   11a7c:	cmp	r3, #0
   11a80:	ldr	r5, [r0, #16]
   11a84:	beq	11aec <__assert_fail@plt+0x8f4>
   11a88:	ldr	r0, [r1, #8]
   11a8c:	mov	r2, #0
   11a90:	add	r0, r0, #1
   11a94:	str	r0, [r1, #8]
   11a98:	b	11aa0 <__assert_fail@plt+0x8a8>
   11a9c:	add	r2, r2, #1
   11aa0:	add	r3, r3, #24
   11aa4:	ldr	r0, [r3, #-20]	; 0xffffffec
   11aa8:	cmp	r0, #0
   11aac:	bne	11a9c <__assert_fail@plt+0x8a4>
   11ab0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11ab4:	cmp	r0, #0
   11ab8:	bne	11a9c <__assert_fail@plt+0x8a4>
   11abc:	ldr	r0, [r3, #-8]
   11ac0:	cmp	r0, #0
   11ac4:	bne	11a9c <__assert_fail@plt+0x8a4>
   11ac8:	ldr	r0, [r3, #-4]
   11acc:	cmp	r0, #0
   11ad0:	bne	11a9c <__assert_fail@plt+0x8a4>
   11ad4:	ldm	r1, {r0, r3}
   11ad8:	add	ip, r2, r2, lsl #1
   11adc:	add	r0, r0, ip
   11ae0:	add	r2, r3, r2
   11ae4:	stm	r1, {r0, r2}
   11ae8:	b	11b00 <__assert_fail@plt+0x908>
   11aec:	ldr	r3, [r0, #4]
   11af0:	cmp	r3, #0
   11af4:	ldrne	r3, [r1, #8]
   11af8:	addne	r3, r3, #1
   11afc:	strne	r3, [r1, #8]
   11b00:	cmp	r5, #0
   11b04:	popeq	{r4, r5, r6, pc}
   11b08:	ldr	r0, [r5]
   11b0c:	cmp	r0, #0
   11b10:	popeq	{r4, r5, r6, pc}
   11b14:	mov	r4, r1
   11b18:	mov	r1, r4
   11b1c:	bl	11a74 <__assert_fail@plt+0x87c>
   11b20:	ldr	r3, [r4, #12]
   11b24:	ldr	r0, [r5, #16]!
   11b28:	add	r3, r3, #1
   11b2c:	cmp	r0, #0
   11b30:	str	r3, [r4, #12]
   11b34:	bne	11b18 <__assert_fail@plt+0x920>
   11b38:	pop	{r4, r5, r6, pc}
   11b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b40:	sub	sp, sp, #36	; 0x24
   11b44:	ldr	sl, [r0]
   11b48:	str	r0, [sp, #12]
   11b4c:	cmp	sl, #0
   11b50:	str	r1, [sp, #16]
   11b54:	str	r2, [sp, #20]
   11b58:	mov	r9, r3
   11b5c:	ldr	r8, [r0, #16]
   11b60:	ldr	r7, [sp, #72]	; 0x48
   11b64:	beq	11d30 <__assert_fail@plt+0xb38>
   11b68:	add	fp, sl, #24
   11b6c:	str	r8, [sp, #28]
   11b70:	str	r3, [sp, #24]
   11b74:	ldr	r4, [fp, #-20]	; 0xffffffec
   11b78:	sub	r1, fp, #24
   11b7c:	cmp	r4, #0
   11b80:	bne	11b90 <__assert_fail@plt+0x998>
   11b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b88:	cmp	r3, #0
   11b8c:	beq	11d04 <__assert_fail@plt+0xb0c>
   11b90:	ldr	r3, [fp, #-12]
   11b94:	tst	r3, #4
   11b98:	moveq	sl, r1
   11b9c:	moveq	r5, r3
   11ba0:	ldrne	r5, [sl, #12]
   11ba4:	ands	r5, r5, #8
   11ba8:	bne	11cec <__assert_fail@plt+0xaf4>
   11bac:	tst	r3, #8
   11bb0:	bne	11c2c <__assert_fail@plt+0xa34>
   11bb4:	sub	r3, r4, #1
   11bb8:	cmp	r3, #254	; 0xfe
   11bbc:	bhi	11c2c <__assert_fail@plt+0xa34>
   11bc0:	bl	110d8 <__ctype_b_loc@plt>
   11bc4:	lsl	r3, r4, #1
   11bc8:	ldr	r1, [r0]
   11bcc:	ldrh	r3, [r1, r3]
   11bd0:	tst	r3, #16384	; 0x4000
   11bd4:	beq	11c2c <__assert_fail@plt+0xa34>
   11bd8:	ldr	r3, [r7, #4]
   11bdc:	add	r1, r3, #1
   11be0:	str	r1, [r7, #4]
   11be4:	strb	r4, [r3]
   11be8:	ldr	r3, [sl, #8]
   11bec:	cmp	r3, #0
   11bf0:	beq	11c20 <__assert_fail@plt+0xa28>
   11bf4:	ldr	r3, [r7, #4]
   11bf8:	mov	r2, #58	; 0x3a
   11bfc:	add	r1, r3, #1
   11c00:	str	r1, [r7, #4]
   11c04:	strb	r2, [r3]
   11c08:	ldr	r3, [sl, #12]
   11c0c:	tst	r3, #1
   11c10:	ldrne	r3, [r7, #4]
   11c14:	addne	r1, r3, #1
   11c18:	strne	r1, [r7, #4]
   11c1c:	strbne	r2, [r3]
   11c20:	ldr	r3, [r7, #4]
   11c24:	mov	r2, #0
   11c28:	strb	r2, [r3]
   11c2c:	ldr	r4, [fp, #-24]	; 0xffffffe8
   11c30:	cmp	r4, #0
   11c34:	beq	11cec <__assert_fail@plt+0xaf4>
   11c38:	ldr	r8, [r7]
   11c3c:	ldr	r6, [r8, #8]
   11c40:	ldr	r0, [r6]
   11c44:	cmp	r0, #0
   11c48:	beq	11c6c <__assert_fail@plt+0xa74>
   11c4c:	mov	r9, r6
   11c50:	mov	r1, r4
   11c54:	bl	10f70 <strcmp@plt>
   11c58:	cmp	r0, #0
   11c5c:	beq	11cf4 <__assert_fail@plt+0xafc>
   11c60:	ldr	r0, [r9, #16]!
   11c64:	cmp	r0, #0
   11c68:	bne	11c50 <__assert_fail@plt+0xa58>
   11c6c:	ldr	r3, [sl, #8]
   11c70:	ldr	r1, [r7, #8]
   11c74:	cmp	r3, #0
   11c78:	str	r4, [r1]
   11c7c:	beq	11c90 <__assert_fail@plt+0xa98>
   11c80:	ldr	r3, [sl, #12]
   11c84:	tst	r3, #1
   11c88:	moveq	r5, #1
   11c8c:	movne	r5, #2
   11c90:	str	r5, [r1, #4]
   11c94:	ldr	ip, [fp, #-20]	; 0xffffffec
   11c98:	mov	r3, #0
   11c9c:	cmp	ip, r3
   11ca0:	str	r3, [r1, #8]
   11ca4:	ldr	r2, [sp, #24]
   11ca8:	ldr	r3, [r8, #48]	; 0x30
   11cac:	ldreq	ip, [sl, #4]
   11cb0:	sub	r3, r2, r3
   11cb4:	bic	ip, ip, #-16777216	; 0xff000000
   11cb8:	asr	r3, r3, #2
   11cbc:	add	lr, r1, #16
   11cc0:	rsb	r0, r3, r3, lsl #3
   11cc4:	add	r0, r0, r0, lsl #6
   11cc8:	add	r0, r3, r0, lsl #3
   11ccc:	rsb	r0, r0, r0, lsl #15
   11cd0:	add	r3, r3, r0, lsl #3
   11cd4:	add	r3, r3, #1
   11cd8:	add	r3, ip, r3, lsl #24
   11cdc:	str	r3, [r1, #12]
   11ce0:	mov	r3, #0
   11ce4:	str	lr, [r7, #8]
   11ce8:	str	r3, [r1, #16]
   11cec:	add	fp, fp, #24
   11cf0:	b	11b74 <__assert_fail@plt+0x97c>
   11cf4:	sub	r6, r9, r6
   11cf8:	cmn	r6, #15
   11cfc:	bge	11cec <__assert_fail@plt+0xaf4>
   11d00:	b	11c6c <__assert_fail@plt+0xa74>
   11d04:	ldr	r3, [fp, #-8]
   11d08:	cmp	r3, #0
   11d0c:	bne	11b90 <__assert_fail@plt+0x998>
   11d10:	ldr	r3, [fp, #-4]
   11d14:	cmp	r3, #0
   11d18:	bne	11b90 <__assert_fail@plt+0x998>
   11d1c:	ldr	r3, [sp, #12]
   11d20:	ldr	r8, [sp, #28]
   11d24:	ldr	r9, [sp, #24]
   11d28:	ldr	r3, [r3, #4]
   11d2c:	b	11d48 <__assert_fail@plt+0xb50>
   11d30:	ldr	r3, [sp, #12]
   11d34:	ldr	r3, [r3, #4]
   11d38:	cmp	r3, #0
   11d3c:	moveq	r0, r9
   11d40:	moveq	r9, r3
   11d44:	beq	11db8 <__assert_fail@plt+0xbc0>
   11d48:	ldr	r2, [r7, #4]
   11d4c:	ldr	r1, [sp, #12]
   11d50:	str	r3, [r9]
   11d54:	cmp	r8, #0
   11d58:	stmib	r9, {r1, r2}
   11d5c:	ldr	r2, [sp, #16]
   11d60:	mov	r3, #0
   11d64:	str	r2, [r9, #16]
   11d68:	ldr	r2, [sp, #20]
   11d6c:	str	r3, [r9, #12]
   11d70:	str	r2, [r9, #20]
   11d74:	str	r3, [r9, #24]
   11d78:	str	r3, [r9, #32]
   11d7c:	str	r3, [r9, #28]
   11d80:	beq	11db4 <__assert_fail@plt+0xbbc>
   11d84:	ldr	r2, [r8]
   11d88:	cmp	r2, r3
   11d8c:	beq	11e00 <__assert_fail@plt+0xc08>
   11d90:	add	r3, r3, #1
   11d94:	ldr	r2, [r8, r3, lsl #4]
   11d98:	cmp	r2, #0
   11d9c:	bne	11d90 <__assert_fail@plt+0xb98>
   11da0:	lsl	r3, r3, #2
   11da4:	ldr	r2, [r7, #12]
   11da8:	add	r3, r2, r3
   11dac:	str	r2, [r9, #28]
   11db0:	str	r3, [r7, #12]
   11db4:	add	r0, r9, #36	; 0x24
   11db8:	cmp	r8, #0
   11dbc:	beq	11df8 <__assert_fail@plt+0xc00>
   11dc0:	ldr	r1, [r8]
   11dc4:	cmp	r1, #0
   11dc8:	beq	11df8 <__assert_fail@plt+0xc00>
   11dcc:	mov	r2, #0
   11dd0:	add	r4, r2, #1
   11dd4:	mov	r3, r0
   11dd8:	str	r7, [sp]
   11ddc:	mov	r0, r1
   11de0:	mov	r1, r9
   11de4:	bl	11b3c <__assert_fail@plt+0x944>
   11de8:	ldr	r1, [r8, r4, lsl #4]
   11dec:	mov	r2, r4
   11df0:	cmp	r1, #0
   11df4:	bne	11dd0 <__assert_fail@plt+0xbd8>
   11df8:	add	sp, sp, #36	; 0x24
   11dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e00:	mov	r3, r2
   11e04:	b	11da4 <__assert_fail@plt+0xbac>
   11e08:	cmp	r0, #86	; 0x56
   11e0c:	beq	11e18 <__assert_fail@plt+0xc20>
   11e10:	mov	r0, #7
   11e14:	bx	lr
   11e18:	ldr	r3, [pc, #104]	; 11e88 <__assert_fail@plt+0xc90>
   11e1c:	push	{r4, lr}
   11e20:	mov	r4, r2
   11e24:	ldr	r3, [r3]
   11e28:	cmp	r3, #0
   11e2c:	beq	11e50 <__assert_fail@plt+0xc58>
   11e30:	mov	r1, r2
   11e34:	ldr	r0, [r2, #48]	; 0x30
   11e38:	blx	r3
   11e3c:	ldr	r0, [r4, #16]
   11e40:	ands	r0, r0, #32
   11e44:	beq	11e84 <__assert_fail@plt+0xc8c>
   11e48:	mov	r0, #0
   11e4c:	pop	{r4, pc}
   11e50:	ldr	r3, [pc, #52]	; 11e8c <__assert_fail@plt+0xc94>
   11e54:	ldr	r2, [r3]
   11e58:	cmp	r2, #0
   11e5c:	beq	11e70 <__assert_fail@plt+0xc78>
   11e60:	ldr	r1, [pc, #40]	; 11e90 <__assert_fail@plt+0xc98>
   11e64:	ldr	r0, [r4, #48]	; 0x30
   11e68:	bl	11114 <fprintf@plt>
   11e6c:	b	11e3c <__assert_fail@plt+0xc44>
   11e70:	ldr	r2, [pc, #28]	; 11e94 <__assert_fail@plt+0xc9c>
   11e74:	ldr	r1, [pc, #28]	; 11e98 <__assert_fail@plt+0xca0>
   11e78:	mov	r0, r4
   11e7c:	bl	16e34 <argp_error@@Base>
   11e80:	b	11e3c <__assert_fail@plt+0xc44>
   11e84:	bl	110e4 <exit@plt>
   11e88:	andeq	sl, r2, r8, ror r2
   11e8c:			; <UNDEFINED> instruction: 0x0002a2b0
   11e90:	ldrdeq	r8, [r1], -r0
   11e94:	andeq	r8, r1, r4, lsr fp
   11e98:	strdeq	r8, [r1], -ip
   11e9c:	cmn	r0, #3
   11ea0:	push	{r4, r5, lr}
   11ea4:	mov	r4, r2
   11ea8:	sub	sp, sp, #12
   11eac:	beq	11f90 <__assert_fail@plt+0xd98>
   11eb0:	ble	11f20 <__assert_fail@plt+0xd28>
   11eb4:	cmn	r0, #2
   11eb8:	beq	11ee0 <__assert_fail@plt+0xce8>
   11ebc:	cmp	r0, #63	; 0x3f
   11ec0:	bne	11f84 <__assert_fail@plt+0xd8c>
   11ec4:	mov	r0, r4
   11ec8:	ldr	r2, [pc, #236]	; 11fbc <__assert_fail@plt+0xdc4>
   11ecc:	ldr	r1, [r4, #48]	; 0x30
   11ed0:	bl	16d84 <argp_state_help@@Base>
   11ed4:	mov	r0, #0
   11ed8:	add	sp, sp, #12
   11edc:	pop	{r4, r5, pc}
   11ee0:	ldr	r3, [pc, #216]	; 11fc0 <__assert_fail@plt+0xdc8>
   11ee4:	mov	r0, r1
   11ee8:	str	r1, [sp, #4]
   11eec:	str	r1, [r3]
   11ef0:	bl	12dc0 <argp_parse@@Base+0xdec>
   11ef4:	ldr	r3, [r4, #16]
   11ef8:	ldr	r2, [pc, #196]	; 11fc4 <__assert_fail@plt+0xdcc>
   11efc:	and	r3, r3, #3
   11f00:	cmp	r3, #1
   11f04:	ldr	r1, [sp, #4]
   11f08:	str	r0, [r4, #40]	; 0x28
   11f0c:	str	r0, [r2]
   11f10:	beq	11fac <__assert_fail@plt+0xdb4>
   11f14:	mov	r0, #0
   11f18:	add	sp, sp, #12
   11f1c:	pop	{r4, r5, pc}
   11f20:	cmn	r0, #4
   11f24:	bne	11f84 <__assert_fail@plt+0xd8c>
   11f28:	cmp	r1, #0
   11f2c:	ldr	r0, [pc, #148]	; 11fc8 <__assert_fail@plt+0xdd0>
   11f30:	mov	r2, #10
   11f34:	movne	r0, r1
   11f38:	mov	r1, #0
   11f3c:	bl	10f7c <strtol@plt>
   11f40:	ldr	r4, [pc, #132]	; 11fcc <__assert_fail@plt+0xdd4>
   11f44:	str	r0, [r4]
   11f48:	ldr	r3, [r4]
   11f4c:	cmp	r3, #0
   11f50:	sub	r3, r3, #1
   11f54:	str	r3, [r4]
   11f58:	ble	11f14 <__assert_fail@plt+0xd1c>
   11f5c:	mov	r5, #1
   11f60:	mov	r0, r5
   11f64:	bl	10fe8 <sleep@plt>
   11f68:	ldr	r3, [r4]
   11f6c:	cmp	r3, #0
   11f70:	sub	r3, r3, #1
   11f74:	str	r3, [r4]
   11f78:	bgt	11f60 <__assert_fail@plt+0xd68>
   11f7c:	mov	r0, #0
   11f80:	b	11f18 <__assert_fail@plt+0xd20>
   11f84:	mov	r0, #7
   11f88:	add	sp, sp, #12
   11f8c:	pop	{r4, r5, pc}
   11f90:	mov	r0, r4
   11f94:	ldr	r2, [pc, #52]	; 11fd0 <__assert_fail@plt+0xdd8>
   11f98:	ldr	r1, [r4, #48]	; 0x30
   11f9c:	bl	16d84 <argp_state_help@@Base>
   11fa0:	mov	r0, #0
   11fa4:	add	sp, sp, #12
   11fa8:	pop	{r4, r5, pc}
   11fac:	ldr	r3, [r4, #8]
   11fb0:	mov	r0, #0
   11fb4:	str	r1, [r3]
   11fb8:	b	11ed8 <__assert_fail@plt+0xce0>
   11fbc:	andeq	r0, r0, sl, ror r2
   11fc0:	andeq	sl, r2, ip, asr r2
   11fc4:	andeq	sl, r2, r8, asr r2
   11fc8:	andeq	r8, r1, r8, asr fp
   11fcc:	andeq	sl, r2, r4, ror r2
   11fd0:	andeq	r0, r0, r1, lsl #4

00011fd4 <argp_parse@@Base>:
   11fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fd8:	add	fp, sp, #32
   11fdc:	tst	r3, #1
   11fe0:	sub	sp, sp, #228	; 0xe4
   11fe4:	mov	r6, r3
   11fe8:	mov	r7, r0
   11fec:	str	r1, [fp, #-240]	; 0xffffff10
   11ff0:	str	r2, [fp, #-232]	; 0xffffff18
   11ff4:	bne	12020 <argp_parse@@Base+0x4c>
   11ff8:	ldr	r3, [pc, #3260]	; 12cbc <argp_parse@@Base+0xce8>
   11ffc:	ldr	r4, [pc, #3260]	; 12cc0 <argp_parse@@Base+0xcec>
   12000:	ldr	r2, [r3]
   12004:	cmp	r2, #0
   12008:	ldreq	r2, [fp, #-232]	; 0xffffff18
   1200c:	ldreq	r2, [r2]
   12010:	streq	r2, [r3]
   12014:	ldr	r3, [r4]
   12018:	cmp	r3, #0
   1201c:	beq	126c0 <argp_parse@@Base+0x6ec>
   12020:	ands	r3, r6, #16
   12024:	beq	125c8 <argp_parse@@Base+0x5f4>
   12028:	sub	r4, fp, #196	; 0xc4
   1202c:	mov	r0, r4
   12030:	mov	r2, #36	; 0x24
   12034:	mov	r1, #0
   12038:	bl	11138 <memset@plt>
   1203c:	ands	r3, r6, #4
   12040:	str	r3, [fp, #-244]	; 0xffffff0c
   12044:	mov	r3, #0
   12048:	moveq	r0, #1
   1204c:	movne	r0, #0
   12050:	cmp	r7, r3
   12054:	str	r3, [fp, #-224]	; 0xffffff20
   12058:	str	r3, [fp, #-220]	; 0xffffff24
   1205c:	str	r3, [fp, #-216]	; 0xffffff28
   12060:	str	r0, [fp, #-228]	; 0xffffff1c
   12064:	beq	124cc <argp_parse@@Base+0x4f8>
   12068:	mov	r0, r7
   1206c:	sub	r1, fp, #228	; 0xe4
   12070:	bl	11a74 <__assert_fail@plt+0x87c>
   12074:	ldr	r5, [fp, #-220]	; 0xffffff24
   12078:	ldr	r9, [fp, #-216]	; 0xffffff28
   1207c:	add	r5, r5, #1
   12080:	ldr	r3, [fp, #-224]	; 0xffffff20
   12084:	add	r5, r5, r5, lsl #3
   12088:	lsl	r2, r9, #2
   1208c:	lsl	r5, r5, #2
   12090:	add	r3, r3, #1
   12094:	add	sl, r2, r5
   12098:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1209c:	add	r9, sl, r3, lsl #4
   120a0:	str	r2, [fp, #-236]	; 0xffffff14
   120a4:	add	r0, r9, r0
   120a8:	add	r0, r0, #1
   120ac:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   120b0:	cmp	r0, #0
   120b4:	mov	r8, r0
   120b8:	str	r0, [fp, #-40]	; 0xffffffd8
   120bc:	moveq	r5, #12
   120c0:	beq	124c0 <argp_parse@@Base+0x4ec>
   120c4:	mov	r3, #1
   120c8:	str	r3, [fp, #-196]	; 0xffffff3c
   120cc:	str	r3, [fp, #-192]	; 0xffffff40
   120d0:	ldm	r4!, {r0, r1, r2, r3}
   120d4:	sub	ip, fp, #148	; 0x94
   120d8:	add	r5, r8, r5
   120dc:	str	r5, [fp, #-104]	; 0xffffff98
   120e0:	stmia	ip!, {r0, r1, r2, r3}
   120e4:	add	r3, r8, sl
   120e8:	mov	lr, r3
   120ec:	ldm	r4!, {r0, r1, r2, r3}
   120f0:	add	sl, r8, r9
   120f4:	str	lr, [fp, #-248]	; 0xffffff08
   120f8:	str	lr, [fp, #-152]	; 0xffffff68
   120fc:	ldr	lr, [r4]
   12100:	stmia	ip!, {r0, r1, r2, r3}
   12104:	mov	r0, r5
   12108:	ldr	r2, [fp, #-236]	; 0xffffff14
   1210c:	mov	r1, #0
   12110:	str	lr, [ip]
   12114:	str	r8, [fp, #-112]	; 0xffffff90
   12118:	str	sl, [fp, #-156]	; 0xffffff64
   1211c:	bl	11138 <memset@plt>
   12120:	ldr	lr, [fp, #-248]	; 0xffffff08
   12124:	sub	r4, fp, #160	; 0xa0
   12128:	tst	r6, #8
   1212c:	str	lr, [fp, #-204]	; 0xffffff34
   12130:	str	sl, [fp, #-208]	; 0xffffff30
   12134:	str	r5, [fp, #-200]	; 0xffffff38
   12138:	str	r4, [fp, #-212]	; 0xffffff2c
   1213c:	bne	124e0 <argp_parse@@Base+0x50c>
   12140:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12144:	cmp	r3, #0
   12148:	addne	r3, sl, #1
   1214c:	movne	r2, #43	; 0x2b
   12150:	strbne	r2, [sl]
   12154:	movne	sl, r3
   12158:	strne	r3, [fp, #-208]	; 0xffffff30
   1215c:	mov	r2, #0
   12160:	strb	r2, [sl]
   12164:	ldr	r3, [fp, #-204]	; 0xffffff34
   12168:	cmp	r7, r2
   1216c:	str	r2, [r3]
   12170:	str	r7, [fp, #-160]	; 0xffffff60
   12174:	beq	12688 <argp_parse@@Base+0x6b4>
   12178:	sub	r1, fp, #212	; 0xd4
   1217c:	mov	r0, r7
   12180:	str	r1, [sp]
   12184:	ldr	r3, [fp, #-112]	; 0xffffff90
   12188:	mov	r1, r2
   1218c:	bl	11b3c <__assert_fail@plt+0x944>
   12190:	ldr	r7, [fp, #-160]	; 0xffffff60
   12194:	ldr	r5, [fp, #-112]	; 0xffffff90
   12198:	mov	r8, r0
   1219c:	str	r0, [fp, #-108]	; 0xffffff94
   121a0:	mov	r2, #56	; 0x38
   121a4:	mov	r1, #0
   121a8:	sub	r0, fp, #96	; 0x60
   121ac:	bl	11138 <memset@plt>
   121b0:	ldr	r2, [pc, #2828]	; 12cc4 <argp_parse@@Base+0xcf0>
   121b4:	ldr	r3, [pc, #2828]	; 12cc8 <argp_parse@@Base+0xcf4>
   121b8:	ldr	r0, [fp, #-240]	; 0xffffff10
   121bc:	ldr	r1, [r2]
   121c0:	str	r0, [fp, #-92]	; 0xffffffa4
   121c4:	ldr	r2, [r3]
   121c8:	ldr	r0, [fp, #-232]	; 0xffffff18
   121cc:	mov	r3, #1
   121d0:	cmp	r5, r8
   121d4:	str	r7, [fp, #-96]	; 0xffffffa0
   121d8:	str	r0, [fp, #-88]	; 0xffffffa8
   121dc:	str	r6, [fp, #-80]	; 0xffffffb0
   121e0:	str	r4, [fp, #-44]	; 0xffffffd4
   121e4:	str	r1, [fp, #-52]	; 0xffffffcc
   121e8:	str	r2, [fp, #-48]	; 0xffffffd0
   121ec:	str	r3, [fp, #-100]	; 0xffffff9c
   121f0:	bcc	124f4 <argp_parse@@Base+0x520>
   121f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   121f8:	tst	r3, #2
   121fc:	bne	12698 <argp_parse@@Base+0x6c4>
   12200:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12204:	ldr	r4, [fp, #-92]	; 0xffffffa4
   12208:	mov	r2, #1
   1220c:	str	r2, [fp, #-144]	; 0xffffff70
   12210:	ldr	r2, [fp, #-232]	; 0xffffff18
   12214:	cmp	r2, r3
   12218:	beq	12b98 <argp_parse@@Base+0xbc4>
   1221c:	ldr	r3, [pc, #2716]	; 12cc0 <argp_parse@@Base+0xcec>
   12220:	ldr	r3, [r3]
   12224:	str	r3, [fp, #-56]	; 0xffffffc8
   12228:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1222c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12230:	ldr	sl, [pc, #2708]	; 12ccc <argp_parse@@Base+0xcf8>
   12234:	mov	r0, r4
   12238:	mov	r6, #0
   1223c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12240:	cmp	r3, #0
   12244:	beq	126d4 <argp_parse@@Base+0x700>
   12248:	cmp	r3, r5
   1224c:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12250:	bgt	126d4 <argp_parse@@Base+0x700>
   12254:	cmp	r5, r0
   12258:	blt	12a70 <argp_parse@@Base+0xa9c>
   1225c:	cmp	r5, r0
   12260:	bne	12a7c <argp_parse@@Base+0xaa8>
   12264:	ldr	r3, [fp, #-112]	; 0xffffff90
   12268:	ldr	ip, [fp, #-108]	; 0xffffff94
   1226c:	cmp	r3, ip
   12270:	bcs	12c60 <argp_parse@@Base+0xc8c>
   12274:	mov	r5, #0
   12278:	add	r4, r3, #36	; 0x24
   1227c:	mov	r7, r5
   12280:	ldr	r6, [pc, #2632]	; 12cd0 <argp_parse@@Base+0xcfc>
   12284:	mov	r0, r5
   12288:	b	122d0 <argp_parse@@Base+0x2fc>
   1228c:	ldr	ip, [r4, #-4]
   12290:	str	ip, [fp, #-60]	; 0xffffffc4
   12294:	ldr	ip, [r4, #-12]
   12298:	str	ip, [fp, #-68]	; 0xffffffbc
   1229c:	ldr	ip, [r4, #-8]
   122a0:	str	r3, [fp, #-76]	; 0xffffffb4
   122a4:	str	ip, [fp, #-64]	; 0xffffffc0
   122a8:	blx	r5
   122ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   122b0:	str	r3, [r4, #-4]
   122b4:	ldr	ip, [fp, #-108]	; 0xffffff94
   122b8:	cmp	ip, r4
   122bc:	bls	12c08 <argp_parse@@Base+0xc34>
   122c0:	cmp	r0, #7
   122c4:	cmpne	r0, #0
   122c8:	bne	12be4 <argp_parse@@Base+0xc10>
   122cc:	add	r4, r4, #36	; 0x24
   122d0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   122d4:	cmp	r3, #0
   122d8:	bne	122b8 <argp_parse@@Base+0x2e4>
   122dc:	ldr	r5, [r4, #-36]	; 0xffffffdc
   122e0:	sub	r2, fp, #96	; 0x60
   122e4:	cmp	r5, #0
   122e8:	mov	r1, r7
   122ec:	mov	r0, r6
   122f0:	bne	1228c <argp_parse@@Base+0x2b8>
   122f4:	cmp	ip, r4
   122f8:	mov	r0, #7
   122fc:	bhi	122cc <argp_parse@@Base+0x2f8>
   12300:	ldr	r3, [fp, #-112]	; 0xffffff90
   12304:	sub	r4, ip, #36	; 0x24
   12308:	cmp	r4, r3
   1230c:	movcs	r5, #7
   12310:	bcc	12398 <argp_parse@@Base+0x3c4>
   12314:	cmp	r5, #7
   12318:	cmpne	r5, #0
   1231c:	bne	12bf8 <argp_parse@@Base+0xc24>
   12320:	sub	r4, r4, #36	; 0x24
   12324:	mov	r7, #0
   12328:	ldr	r6, [pc, #2468]	; 12cd4 <argp_parse@@Base+0xd00>
   1232c:	b	12378 <argp_parse@@Base+0x3a4>
   12330:	ldr	r3, [r4, #68]	; 0x44
   12334:	ldr	ip, [r4, #48]	; 0x30
   12338:	str	r3, [fp, #-60]	; 0xffffffc4
   1233c:	ldr	r3, [r4, #60]	; 0x3c
   12340:	str	r3, [fp, #-68]	; 0xffffffbc
   12344:	ldr	r3, [r4, #64]	; 0x40
   12348:	str	ip, [fp, #-76]	; 0xffffffb4
   1234c:	str	r3, [fp, #-64]	; 0xffffffc0
   12350:	blx	r5
   12354:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12358:	str	r3, [r4, #68]	; 0x44
   1235c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12360:	cmp	r4, r3
   12364:	bcc	12c58 <argp_parse@@Base+0xc84>
   12368:	cmp	r0, #7
   1236c:	cmpne	r0, #0
   12370:	bne	12bc8 <argp_parse@@Base+0xbf4>
   12374:	sub	r4, r4, #36	; 0x24
   12378:	ldr	r5, [r4, #36]	; 0x24
   1237c:	sub	r2, fp, #96	; 0x60
   12380:	cmp	r5, #0
   12384:	mov	r1, r7
   12388:	mov	r0, r6
   1238c:	bne	12330 <argp_parse@@Base+0x35c>
   12390:	cmp	r4, r3
   12394:	bcs	12374 <argp_parse@@Base+0x3a0>
   12398:	ldr	r2, [fp, #4]
   1239c:	cmp	r2, #0
   123a0:	beq	123bc <argp_parse@@Base+0x3e8>
   123a4:	mov	r5, #0
   123a8:	ldr	r1, [fp, #4]
   123ac:	ldr	r2, [fp, #-84]	; 0xffffffac
   123b0:	str	r2, [r1]
   123b4:	cmp	r5, #0
   123b8:	bne	12bd8 <argp_parse@@Base+0xc04>
   123bc:	ldr	ip, [fp, #-108]	; 0xffffff94
   123c0:	b	12a94 <argp_parse@@Base+0xac0>
   123c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   123c8:	mov	r5, r0
   123cc:	ldr	ip, [fp, #-108]	; 0xffffff94
   123d0:	cmp	ip, r3
   123d4:	bls	12b90 <argp_parse@@Base+0xbbc>
   123d8:	ldr	r7, [pc, #2296]	; 12cd8 <argp_parse@@Base+0xd04>
   123dc:	add	r4, r3, #36	; 0x24
   123e0:	mov	r8, #0
   123e4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   123e8:	sub	r2, fp, #96	; 0x60
   123ec:	cmp	r3, #0
   123f0:	mov	r1, r8
   123f4:	mov	r0, r7
   123f8:	mov	r6, r4
   123fc:	beq	12430 <argp_parse@@Base+0x45c>
   12400:	ldr	ip, [r4, #-4]
   12404:	ldr	lr, [r4, #-24]	; 0xffffffe8
   12408:	str	ip, [fp, #-60]	; 0xffffffc4
   1240c:	ldr	ip, [r4, #-12]
   12410:	str	ip, [fp, #-68]	; 0xffffffbc
   12414:	ldr	ip, [r4, #-8]
   12418:	str	lr, [fp, #-76]	; 0xffffffb4
   1241c:	str	ip, [fp, #-64]	; 0xffffffc0
   12420:	blx	r3
   12424:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12428:	str	r3, [r4, #-4]
   1242c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12430:	cmp	ip, r6
   12434:	add	r4, r4, #36	; 0x24
   12438:	bhi	123e4 <argp_parse@@Base+0x410>
   1243c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12440:	sub	ip, ip, #36	; 0x24
   12444:	cmp	r3, ip
   12448:	bhi	124b0 <argp_parse@@Base+0x4dc>
   1244c:	ldr	r8, [pc, #2184]	; 12cdc <argp_parse@@Base+0xd08>
   12450:	sub	r4, ip, #36	; 0x24
   12454:	mov	r9, #0
   12458:	ldr	r6, [r4, #36]	; 0x24
   1245c:	sub	r2, fp, #96	; 0x60
   12460:	cmp	r6, #0
   12464:	mov	r1, r9
   12468:	mov	r0, r8
   1246c:	mov	r7, r4
   12470:	beq	124a4 <argp_parse@@Base+0x4d0>
   12474:	ldr	r3, [r4, #68]	; 0x44
   12478:	ldr	ip, [r4, #48]	; 0x30
   1247c:	str	r3, [fp, #-60]	; 0xffffffc4
   12480:	ldr	r3, [r4, #60]	; 0x3c
   12484:	str	r3, [fp, #-68]	; 0xffffffbc
   12488:	ldr	r3, [r4, #64]	; 0x40
   1248c:	str	ip, [fp, #-76]	; 0xffffffb4
   12490:	str	r3, [fp, #-64]	; 0xffffffc0
   12494:	blx	r6
   12498:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1249c:	str	r3, [r4, #68]	; 0x44
   124a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   124a4:	cmp	r3, r7
   124a8:	sub	r4, r4, #36	; 0x24
   124ac:	bls	12458 <argp_parse@@Base+0x484>
   124b0:	cmp	r5, #7
   124b4:	moveq	r5, #22
   124b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   124bc:	bl	12e6c <argp_parse@@Base+0xe98>
   124c0:	mov	r0, r5
   124c4:	sub	sp, fp, #32
   124c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124cc:	mov	sl, #36	; 0x24
   124d0:	mov	r5, sl
   124d4:	mov	r9, #52	; 0x34
   124d8:	str	r7, [fp, #-236]	; 0xffffff14
   124dc:	b	120a4 <argp_parse@@Base+0xd0>
   124e0:	add	sl, sl, #1
   124e4:	mov	r3, #45	; 0x2d
   124e8:	str	sl, [fp, #-208]	; 0xffffff30
   124ec:	strb	r3, [r8, r9]
   124f0:	b	1215c <argp_parse@@Base+0x188>
   124f4:	ldr	r3, [fp, #8]
   124f8:	add	r4, r5, #36	; 0x24
   124fc:	str	r3, [r5, #24]
   12500:	mov	r7, #0
   12504:	ldr	r6, [pc, #2004]	; 12ce0 <argp_parse@@Base+0xd0c>
   12508:	b	12560 <argp_parse@@Base+0x58c>
   1250c:	ldr	r2, [r4, #-4]
   12510:	ldr	r0, [r4, #-24]	; 0xffffffe8
   12514:	str	r2, [fp, #-60]	; 0xffffffc4
   12518:	ldr	r1, [r4, #-12]
   1251c:	sub	r2, fp, #96	; 0x60
   12520:	str	r1, [fp, #-68]	; 0xffffffbc
   12524:	ldr	ip, [r4, #-8]
   12528:	mov	r1, r7
   1252c:	str	r0, [fp, #-76]	; 0xffffffb4
   12530:	str	ip, [fp, #-64]	; 0xffffffc0
   12534:	mov	r0, r6
   12538:	blx	r3
   1253c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12540:	str	r3, [r4, #-4]
   12544:	ldr	r3, [fp, #-108]	; 0xffffff94
   12548:	cmp	r3, r4
   1254c:	bls	12c7c <argp_parse@@Base+0xca8>
   12550:	cmp	r0, #7
   12554:	cmpne	r0, #0
   12558:	bne	12678 <argp_parse@@Base+0x6a4>
   1255c:	add	r4, r4, #36	; 0x24
   12560:	ldr	r3, [r4, #-20]	; 0xffffffec
   12564:	cmp	r3, #0
   12568:	ldrne	r3, [r3, #28]
   1256c:	ldrne	r2, [r4, #-16]
   12570:	ldrne	r3, [r3, r2, lsl #2]
   12574:	strne	r3, [r4, #-12]
   12578:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1257c:	cmp	r3, #0
   12580:	bne	1250c <argp_parse@@Base+0x538>
   12584:	ldr	r3, [r4, #-32]	; 0xffffffe0
   12588:	ldr	r3, [r3, #16]
   1258c:	cmp	r3, #0
   12590:	beq	125b8 <argp_parse@@Base+0x5e4>
   12594:	ldr	r3, [r3]
   12598:	cmp	r3, #0
   1259c:	beq	125b8 <argp_parse@@Base+0x5e4>
   125a0:	ldr	r3, [r4, #-8]
   125a4:	ldr	r2, [r4, #-12]
   125a8:	str	r2, [r3]
   125ac:	ldr	r3, [r4, #-36]	; 0xffffffdc
   125b0:	cmp	r3, #0
   125b4:	bne	1250c <argp_parse@@Base+0x538>
   125b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   125bc:	cmp	r3, r4
   125c0:	bhi	1255c <argp_parse@@Base+0x588>
   125c4:	b	121f4 <argp_parse@@Base+0x220>
   125c8:	sub	sp, sp, #72	; 0x48
   125cc:	add	r4, sp, #8
   125d0:	sub	sp, sp, #40	; 0x28
   125d4:	add	r5, sp, #8
   125d8:	mov	r1, r3
   125dc:	mov	r0, r4
   125e0:	mov	r2, #64	; 0x40
   125e4:	str	r3, [r5]
   125e8:	str	r3, [r5, #4]
   125ec:	str	r3, [r5, #8]
   125f0:	str	r3, [r5, #12]
   125f4:	str	r3, [r5, #20]
   125f8:	str	r3, [r5, #24]
   125fc:	str	r4, [r5, #16]
   12600:	bl	11138 <memset@plt>
   12604:	ldr	r3, [pc, #1752]	; 12ce4 <argp_parse@@Base+0xd10>
   12608:	cmp	r7, #0
   1260c:	strne	r7, [r4]
   12610:	ldr	r3, [r3]
   12614:	addne	r4, r4, #16
   12618:	ldr	r2, [pc, #1736]	; 12ce8 <argp_parse@@Base+0xd14>
   1261c:	cmp	r3, #0
   12620:	str	r2, [r4]
   12624:	beq	12bb0 <argp_parse@@Base+0xbdc>
   12628:	ldr	r2, [pc, #1724]	; 12cec <argp_parse@@Base+0xd18>
   1262c:	add	r3, r4, #32
   12630:	str	r2, [r4, #16]
   12634:	mov	r8, #0
   12638:	sub	r4, fp, #196	; 0xc4
   1263c:	str	r8, [r3]
   12640:	mov	r1, r8
   12644:	mov	r0, r4
   12648:	mov	r2, #36	; 0x24
   1264c:	bl	11138 <memset@plt>
   12650:	ands	r3, r6, #4
   12654:	str	r3, [fp, #-244]	; 0xffffff0c
   12658:	moveq	r3, #1
   1265c:	movne	r3, r8
   12660:	mov	r7, r5
   12664:	str	r8, [fp, #-224]	; 0xffffff20
   12668:	str	r8, [fp, #-220]	; 0xffffff24
   1266c:	str	r8, [fp, #-216]	; 0xffffff28
   12670:	str	r3, [fp, #-228]	; 0xffffff1c
   12674:	b	12068 <argp_parse@@Base+0x94>
   12678:	mov	r5, r0
   1267c:	mov	r0, r5
   12680:	sub	sp, fp, #32
   12684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12688:	ldr	r5, [fp, #-112]	; 0xffffff90
   1268c:	mov	r8, r5
   12690:	str	r5, [fp, #-108]	; 0xffffff94
   12694:	b	121a0 <argp_parse@@Base+0x1cc>
   12698:	tst	r3, #1
   1269c:	mov	r3, #0
   126a0:	str	r3, [fp, #-144]	; 0xffffff70
   126a4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   126a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   126ac:	subne	r3, r3, #4
   126b0:	addne	r4, r4, #1
   126b4:	strne	r3, [fp, #-88]	; 0xffffffa8
   126b8:	strne	r4, [fp, #-92]	; 0xffffffa4
   126bc:	b	12210 <argp_parse@@Base+0x23c>
   126c0:	ldr	r3, [fp, #-232]	; 0xffffff18
   126c4:	ldr	r0, [r3]
   126c8:	bl	12dc0 <argp_parse@@Base+0xdec>
   126cc:	str	r0, [r4]
   126d0:	b	12020 <argp_parse@@Base+0x4c>
   126d4:	cmp	r2, #0
   126d8:	beq	12254 <argp_parse@@Base+0x280>
   126dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   126e0:	str	r5, [fp, #-148]	; 0xffffff6c
   126e4:	ands	ip, r3, #64	; 0x40
   126e8:	mvn	r3, #0
   126ec:	str	r3, [fp, #-140]	; 0xffffff74
   126f0:	ldr	r2, [fp, #-156]	; 0xffffff64
   126f4:	ldr	r3, [fp, #-152]	; 0xffffff68
   126f8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   126fc:	beq	12a1c <argp_parse@@Base+0xa48>
   12700:	sub	ip, fp, #148	; 0x94
   12704:	stm	sp, {r6, ip}
   12708:	bl	12f40 <argp_parse@@Base+0xf6c>
   1270c:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12710:	str	r5, [fp, #-84]	; 0xffffffac
   12714:	mov	r7, r0
   12718:	cmn	r7, #1
   1271c:	beq	12a3c <argp_parse@@Base+0xa68>
   12720:	cmp	r7, #63	; 0x3f
   12724:	beq	12b40 <argp_parse@@Base+0xb6c>
   12728:	cmp	r7, #1
   1272c:	beq	12884 <argp_parse@@Base+0x8b0>
   12730:	asrs	r8, r7, #24
   12734:	bne	127e0 <argp_parse@@Base+0x80c>
   12738:	mov	r1, r7
   1273c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12740:	bl	11108 <strchr@plt>
   12744:	cmp	r0, #0
   12748:	beq	12850 <argp_parse@@Base+0x87c>
   1274c:	ldr	r4, [fp, #-112]	; 0xffffff90
   12750:	ldr	r2, [fp, #-108]	; 0xffffff94
   12754:	cmp	r4, r2
   12758:	bcc	1276c <argp_parse@@Base+0x798>
   1275c:	b	12850 <argp_parse@@Base+0x87c>
   12760:	add	r4, r4, #36	; 0x24
   12764:	cmp	r4, r2
   12768:	bcs	12850 <argp_parse@@Base+0x87c>
   1276c:	ldr	r3, [r4, #8]
   12770:	cmp	r0, r3
   12774:	bcs	12760 <argp_parse@@Base+0x78c>
   12778:	ldr	r3, [r4]
   1277c:	cmp	r3, #0
   12780:	beq	12850 <argp_parse@@Base+0x87c>
   12784:	ldr	r2, [r4, #32]
   12788:	ldr	r0, [r4, #28]
   1278c:	ldr	ip, [r4, #24]
   12790:	str	r2, [fp, #-60]	; 0xffffffc4
   12794:	ldr	r2, [r4, #12]
   12798:	ldr	r1, [fp, #-136]	; 0xffffff78
   1279c:	str	r0, [fp, #-64]	; 0xffffffc0
   127a0:	str	r2, [fp, #-76]	; 0xffffffb4
   127a4:	str	ip, [fp, #-68]	; 0xffffffbc
   127a8:	sub	r2, fp, #96	; 0x60
   127ac:	mov	r0, r7
   127b0:	blx	r3
   127b4:	mov	r8, r6
   127b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   127bc:	str	r3, [r4, #32]
   127c0:	cmp	r0, #7
   127c4:	beq	12848 <argp_parse@@Base+0x874>
   127c8:	cmp	r0, #0
   127cc:	bne	123c4 <argp_parse@@Base+0x3f0>
   127d0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   127d4:	ldr	r5, [fp, #-84]	; 0xffffffac
   127d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   127dc:	b	1223c <argp_parse@@Base+0x268>
   127e0:	add	r3, r8, r8, lsl #3
   127e4:	ldr	r2, [fp, #-112]	; 0xffffff90
   127e8:	lsl	r3, r3, #2
   127ec:	sub	r3, r3, #36	; 0x24
   127f0:	add	r4, r2, r3
   127f4:	ldr	r5, [r2, r3]
   127f8:	ands	r3, r7, #8388608	; 0x800000
   127fc:	movne	r3, #-16777216	; 0xff000000
   12800:	cmp	r5, #0
   12804:	beq	129d4 <argp_parse@@Base+0xa00>
   12808:	ldr	r0, [r4, #32]
   1280c:	ldr	r2, [r4, #24]
   12810:	str	r0, [fp, #-60]	; 0xffffffc4
   12814:	ldr	r0, [r4, #28]
   12818:	str	r2, [fp, #-68]	; 0xffffffbc
   1281c:	ldr	r2, [r4, #12]
   12820:	str	r0, [fp, #-64]	; 0xffffffc0
   12824:	bic	r0, r7, #-16777216	; 0xff000000
   12828:	str	r2, [fp, #-76]	; 0xffffffb4
   1282c:	orr	r0, r0, r3
   12830:	ldr	r1, [fp, #-136]	; 0xffffff78
   12834:	sub	r2, fp, #96	; 0x60
   12838:	blx	r5
   1283c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12840:	str	r3, [r4, #32]
   12844:	b	127c0 <argp_parse@@Base+0x7ec>
   12848:	cmp	r8, #0
   1284c:	bne	129d4 <argp_parse@@Base+0xa00>
   12850:	mov	r2, r7
   12854:	ldr	r3, [pc, #1172]	; 12cf0 <argp_parse@@Base+0xd1c>
   12858:	ldr	r1, [pc, #1172]	; 12cf4 <argp_parse@@Base+0xd20>
   1285c:	sub	r0, fp, #96	; 0x60
   12860:	bl	16e34 <argp_error@@Base>
   12864:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12868:	mov	r2, #260	; 0x104
   1286c:	sub	r0, fp, #96	; 0x60
   12870:	bl	16d84 <argp_state_help@@Base>
   12874:	mov	r5, #7
   12878:	ldr	r3, [fp, #-112]	; 0xffffff90
   1287c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12880:	b	123d0 <argp_parse@@Base+0x3fc>
   12884:	ldr	r7, [fp, #-136]	; 0xffffff78
   12888:	ldr	r3, [fp, #-112]	; 0xffffff90
   1288c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12890:	sub	r8, r5, #1
   12894:	cmp	r3, ip
   12898:	str	r8, [fp, #-84]	; 0xffffffac
   1289c:	bcs	129c8 <argp_parse@@Base+0x9f4>
   128a0:	mov	lr, r8
   128a4:	add	r4, r3, #36	; 0x24
   128a8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   128ac:	add	r5, lr, #1
   128b0:	cmp	r3, #0
   128b4:	str	r5, [fp, #-84]	; 0xffffffac
   128b8:	sub	r2, fp, #96	; 0x60
   128bc:	mov	r1, r7
   128c0:	mov	r0, r6
   128c4:	sub	r5, r4, #36	; 0x24
   128c8:	mov	r9, r4
   128cc:	streq	lr, [fp, #-84]	; 0xffffffac
   128d0:	beq	129bc <argp_parse@@Base+0x9e8>
   128d4:	ldr	ip, [r4, #-4]
   128d8:	ldr	lr, [r4, #-24]	; 0xffffffe8
   128dc:	str	ip, [fp, #-60]	; 0xffffffc4
   128e0:	ldr	ip, [r4, #-12]
   128e4:	str	ip, [fp, #-68]	; 0xffffffbc
   128e8:	ldr	ip, [r4, #-8]
   128ec:	str	lr, [fp, #-76]	; 0xffffffb4
   128f0:	str	ip, [fp, #-64]	; 0xffffffc0
   128f4:	blx	r3
   128f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   128fc:	str	r3, [r4, #-4]
   12900:	cmp	r0, #7
   12904:	beq	12940 <argp_parse@@Base+0x96c>
   12908:	cmp	r0, #0
   1290c:	bne	123c4 <argp_parse@@Base+0x3f0>
   12910:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12914:	ldr	r5, [fp, #-84]	; 0xffffffac
   12918:	cmp	r8, r5
   1291c:	sublt	r8, r5, r8
   12920:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   12924:	movge	r3, #1
   12928:	addlt	r8, r3, r8
   1292c:	strlt	r8, [r4, #-24]	; 0xffffffe8
   12930:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   12934:	strge	r3, [fp, #-100]	; 0xffffff9c
   12938:	movge	r2, r3
   1293c:	b	1223c <argp_parse@@Base+0x268>
   12940:	ldr	lr, [fp, #-84]	; 0xffffffac
   12944:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12948:	sub	lr, lr, #1
   1294c:	cmp	r3, #0
   12950:	str	lr, [fp, #-84]	; 0xffffffac
   12954:	beq	129b8 <argp_parse@@Base+0x9e4>
   12958:	add	r0, r5, #24
   1295c:	ldr	r2, [r5, #12]
   12960:	ldm	r0, {r0, r1, ip}
   12964:	str	r2, [fp, #-76]	; 0xffffffb4
   12968:	sub	r2, fp, #96	; 0x60
   1296c:	str	ip, [fp, #-60]	; 0xffffffc4
   12970:	str	r0, [fp, #-68]	; 0xffffffbc
   12974:	str	r1, [fp, #-64]	; 0xffffffc0
   12978:	mov	r0, sl
   1297c:	mov	r1, r6
   12980:	blx	r3
   12984:	ldr	ip, [fp, #-108]	; 0xffffff94
   12988:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1298c:	cmp	r4, ip
   12990:	movcs	r1, #0
   12994:	movcc	r1, #1
   12998:	mov	r3, r4
   1299c:	str	r2, [r5, #32]
   129a0:	cmp	r0, #7
   129a4:	movne	r1, #0
   129a8:	cmp	r1, #0
   129ac:	beq	12c94 <argp_parse@@Base+0xcc0>
   129b0:	ldr	lr, [fp, #-84]	; 0xffffffac
   129b4:	b	128a4 <argp_parse@@Base+0x8d0>
   129b8:	ldr	ip, [fp, #-108]	; 0xffffff94
   129bc:	cmp	r9, ip
   129c0:	add	r4, r4, #36	; 0x24
   129c4:	bcc	128a8 <argp_parse@@Base+0x8d4>
   129c8:	ldr	r5, [fp, #-84]	; 0xffffffac
   129cc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   129d0:	b	1225c <argp_parse@@Base+0x288>
   129d4:	ldr	r3, [fp, #-152]	; 0xffffff68
   129d8:	ldr	r2, [r3, #12]
   129dc:	cmp	r2, r7
   129e0:	bne	129f8 <argp_parse@@Base+0xa24>
   129e4:	b	12b2c <argp_parse@@Base+0xb58>
   129e8:	add	r3, r3, #16
   129ec:	ldr	r2, [r3, #12]
   129f0:	cmp	r2, r7
   129f4:	beq	12b2c <argp_parse@@Base+0xb58>
   129f8:	ldr	r2, [r3]
   129fc:	cmp	r2, #0
   12a00:	bne	129e8 <argp_parse@@Base+0xa14>
   12a04:	ldr	r2, [pc, #748]	; 12cf8 <argp_parse@@Base+0xd24>
   12a08:	ldr	r3, [pc, #736]	; 12cf0 <argp_parse@@Base+0xd1c>
   12a0c:	ldr	r1, [pc, #744]	; 12cfc <argp_parse@@Base+0xd28>
   12a10:	sub	r0, fp, #96	; 0x60
   12a14:	bl	16e34 <argp_error@@Base>
   12a18:	b	12864 <argp_parse@@Base+0x890>
   12a1c:	sub	lr, fp, #148	; 0x94
   12a20:	stm	sp, {ip, lr}
   12a24:	bl	12eec <argp_parse@@Base+0xf18>
   12a28:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12a2c:	str	r5, [fp, #-84]	; 0xffffffac
   12a30:	mov	r7, r0
   12a34:	cmn	r7, #1
   12a38:	bne	12720 <argp_parse@@Base+0x74c>
   12a3c:	cmp	r5, #1
   12a40:	str	r6, [fp, #-100]	; 0xffffff9c
   12a44:	ble	12a64 <argp_parse@@Base+0xa90>
   12a48:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12a4c:	sub	r3, r5, #-1073741823	; 0xc0000001
   12a50:	ldr	r1, [pc, #680]	; 12d00 <argp_parse@@Base+0xd2c>
   12a54:	ldr	r0, [r2, r3, lsl #2]
   12a58:	bl	10f70 <strcmp@plt>
   12a5c:	cmp	r0, #0
   12a60:	streq	r5, [fp, #-72]	; 0xffffffb8
   12a64:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12a68:	cmp	r5, r0
   12a6c:	bge	1225c <argp_parse@@Base+0x288>
   12a70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12a74:	tst	r3, #4
   12a78:	beq	12b50 <argp_parse@@Base+0xb7c>
   12a7c:	ldr	r3, [fp, #4]
   12a80:	cmp	r3, #0
   12a84:	beq	12c28 <argp_parse@@Base+0xc54>
   12a88:	str	r5, [r3]
   12a8c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12a90:	ldr	r3, [fp, #-112]	; 0xffffff90
   12a94:	sub	r2, ip, #36	; 0x24
   12a98:	cmp	r3, r2
   12a9c:	bhi	12b84 <argp_parse@@Base+0xbb0>
   12aa0:	ldr	r6, [pc, #604]	; 12d04 <argp_parse@@Base+0xd30>
   12aa4:	sub	r4, ip, #72	; 0x48
   12aa8:	mov	r7, #0
   12aac:	ldr	r5, [r4, #36]	; 0x24
   12ab0:	sub	r2, fp, #96	; 0x60
   12ab4:	cmp	r5, #0
   12ab8:	mov	r1, r7
   12abc:	mov	r0, r6
   12ac0:	beq	12b1c <argp_parse@@Base+0xb48>
   12ac4:	ldr	r3, [r4, #68]	; 0x44
   12ac8:	ldr	ip, [r4, #48]	; 0x30
   12acc:	str	r3, [fp, #-60]	; 0xffffffc4
   12ad0:	ldr	r3, [r4, #60]	; 0x3c
   12ad4:	str	r3, [fp, #-68]	; 0xffffffbc
   12ad8:	ldr	r3, [r4, #64]	; 0x40
   12adc:	str	ip, [fp, #-76]	; 0xffffffb4
   12ae0:	str	r3, [fp, #-64]	; 0xffffffc0
   12ae4:	blx	r5
   12ae8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12aec:	str	r3, [r4, #68]	; 0x44
   12af0:	ldr	r3, [fp, #-112]	; 0xffffff90
   12af4:	cmp	r4, r3
   12af8:	bcc	12b64 <argp_parse@@Base+0xb90>
   12afc:	cmp	r0, #7
   12b00:	cmpne	r0, #0
   12b04:	sub	r4, r4, #36	; 0x24
   12b08:	beq	12aac <argp_parse@@Base+0xad8>
   12b0c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12b10:	mov	r5, r0
   12b14:	sub	ip, ip, #36	; 0x24
   12b18:	b	12444 <argp_parse@@Base+0x470>
   12b1c:	cmp	r4, r3
   12b20:	bcc	12b70 <argp_parse@@Base+0xb9c>
   12b24:	sub	r4, r4, #36	; 0x24
   12b28:	b	12aac <argp_parse@@Base+0xad8>
   12b2c:	ldr	r2, [r3]
   12b30:	ldr	r3, [pc, #448]	; 12cf8 <argp_parse@@Base+0xd24>
   12b34:	cmp	r2, #0
   12b38:	moveq	r2, r3
   12b3c:	b	12a08 <argp_parse@@Base+0xa34>
   12b40:	ldr	r3, [fp, #-140]	; 0xffffff74
   12b44:	cmn	r3, #1
   12b48:	bne	12864 <argp_parse@@Base+0x890>
   12b4c:	b	12738 <argp_parse@@Base+0x764>
   12b50:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12b54:	ldr	r7, [r3, r5, lsl #2]
   12b58:	add	r5, r5, #1
   12b5c:	str	r7, [fp, #-136]	; 0xffffff78
   12b60:	b	12888 <argp_parse@@Base+0x8b4>
   12b64:	cmp	r0, #7
   12b68:	mov	r5, r0
   12b6c:	bne	12b8c <argp_parse@@Base+0xbb8>
   12b70:	ldr	ip, [fp, #-108]	; 0xffffff94
   12b74:	sub	ip, ip, #36	; 0x24
   12b78:	cmp	ip, r3
   12b7c:	movcs	r5, #0
   12b80:	bcs	1244c <argp_parse@@Base+0x478>
   12b84:	mov	r5, #0
   12b88:	b	124b8 <argp_parse@@Base+0x4e4>
   12b8c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12b90:	sub	ip, ip, #36	; 0x24
   12b94:	b	12444 <argp_parse@@Base+0x470>
   12b98:	ldr	r0, [r2]
   12b9c:	cmp	r0, #0
   12ba0:	beq	1221c <argp_parse@@Base+0x248>
   12ba4:	bl	12dc0 <argp_parse@@Base+0xdec>
   12ba8:	str	r0, [fp, #-56]	; 0xffffffc8
   12bac:	b	12228 <argp_parse@@Base+0x254>
   12bb0:	ldr	r3, [pc, #336]	; 12d08 <argp_parse@@Base+0xd34>
   12bb4:	ldr	r3, [r3]
   12bb8:	cmp	r3, #0
   12bbc:	addeq	r3, r4, #16
   12bc0:	bne	12628 <argp_parse@@Base+0x654>
   12bc4:	b	12634 <argp_parse@@Base+0x660>
   12bc8:	mov	r5, r0
   12bcc:	ldr	r2, [fp, #4]
   12bd0:	cmp	r2, #0
   12bd4:	bne	123a8 <argp_parse@@Base+0x3d4>
   12bd8:	cmp	r5, #7
   12bdc:	bne	123cc <argp_parse@@Base+0x3f8>
   12be0:	b	12864 <argp_parse@@Base+0x890>
   12be4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12be8:	sub	ip, ip, #36	; 0x24
   12bec:	cmp	r3, ip
   12bf0:	mov	r5, r0
   12bf4:	bls	12bcc <argp_parse@@Base+0xbf8>
   12bf8:	ldr	r2, [fp, #4]
   12bfc:	cmp	r2, #0
   12c00:	bne	123a8 <argp_parse@@Base+0x3d4>
   12c04:	b	123b4 <argp_parse@@Base+0x3e0>
   12c08:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c0c:	sub	r4, ip, #36	; 0x24
   12c10:	cmp	r4, r3
   12c14:	mov	r5, r0
   12c18:	bcs	12314 <argp_parse@@Base+0x340>
   12c1c:	cmp	r5, #7
   12c20:	beq	12398 <argp_parse@@Base+0x3c4>
   12c24:	b	12bf8 <argp_parse@@Base+0xc24>
   12c28:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12c2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c30:	tst	r3, #2
   12c34:	bne	12868 <argp_parse@@Base+0x894>
   12c38:	cmp	r1, #0
   12c3c:	beq	12868 <argp_parse@@Base+0x894>
   12c40:	mov	r0, r1
   12c44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c48:	ldr	r1, [pc, #188]	; 12d0c <argp_parse@@Base+0xd38>
   12c4c:	bl	11114 <fprintf@plt>
   12c50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c54:	b	12868 <argp_parse@@Base+0x894>
   12c58:	mov	r5, r0
   12c5c:	b	12c1c <argp_parse@@Base+0xc48>
   12c60:	sub	r4, ip, #36	; 0x24
   12c64:	cmp	r3, r4
   12c68:	bls	12320 <argp_parse@@Base+0x34c>
   12c6c:	ldr	r2, [fp, #4]
   12c70:	cmp	r2, #0
   12c74:	bne	123a4 <argp_parse@@Base+0x3d0>
   12c78:	b	12a94 <argp_parse@@Base+0xac0>
   12c7c:	cmp	r0, #7
   12c80:	mov	r5, r0
   12c84:	beq	121f4 <argp_parse@@Base+0x220>
   12c88:	cmp	r0, #0
   12c8c:	beq	121f4 <argp_parse@@Base+0x220>
   12c90:	b	124c0 <argp_parse@@Base+0x4ec>
   12c94:	cmp	r0, #0
   12c98:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   12c9c:	moveq	r5, r0
   12ca0:	streq	r0, [fp, #-84]	; 0xffffffac
   12ca4:	beq	12918 <argp_parse@@Base+0x944>
   12ca8:	cmp	r0, #7
   12cac:	mov	r5, r0
   12cb0:	beq	129c8 <argp_parse@@Base+0x9f4>
   12cb4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12cb8:	b	123d0 <argp_parse@@Base+0x3fc>
   12cbc:	andeq	sl, r2, ip, asr r2
   12cc0:	andeq	sl, r2, r8, asr r2
   12cc4:	andeq	sl, r2, r0, ror #4
   12cc8:	andeq	sl, r2, r4, ror #4
   12ccc:	tsteq	r0, r6
   12cd0:	tsteq	r0, r2
   12cd4:	tsteq	r0, r1
   12cd8:	tsteq	r0, r5
   12cdc:	tsteq	r0, r7
   12ce0:	tsteq	r0, r3
   12ce4:			; <UNDEFINED> instruction: 0x0002a2b0
   12ce8:	andeq	r8, r1, ip, lsl sl
   12cec:	andeq	r8, r1, r8, lsr sl
   12cf0:	andeq	r8, r1, r4, asr sl
   12cf4:	andeq	r8, r1, r8, ror #22
   12cf8:	andeq	r8, r1, r0, ror #22
   12cfc:	andeq	r8, r1, r0, ror fp
   12d00:	andeq	r8, r1, r4, ror #22
   12d04:	tsteq	r0, r4
   12d08:	andeq	sl, r2, r8, ror r2
   12d0c:	andeq	r8, r1, ip, ror fp
   12d10:	cmp	r1, #0
   12d14:	beq	12d54 <argp_parse@@Base+0xd80>
   12d18:	ldr	r2, [r1, #52]	; 0x34
   12d1c:	ldr	r3, [r2, #48]	; 0x30
   12d20:	ldr	r1, [r2, #52]	; 0x34
   12d24:	cmp	r3, r1
   12d28:	bcs	12d54 <argp_parse@@Base+0xd80>
   12d2c:	ldr	r2, [r3, #4]
   12d30:	cmp	r0, r2
   12d34:	bne	12d48 <argp_parse@@Base+0xd74>
   12d38:	b	12d5c <argp_parse@@Base+0xd88>
   12d3c:	ldr	r2, [r3, #4]
   12d40:	cmp	r2, r0
   12d44:	beq	12d5c <argp_parse@@Base+0xd88>
   12d48:	add	r3, r3, #36	; 0x24
   12d4c:	cmp	r3, r1
   12d50:	bcc	12d3c <argp_parse@@Base+0xd68>
   12d54:	mov	r0, #0
   12d58:	bx	lr
   12d5c:	ldr	r0, [r3, #24]
   12d60:	bx	lr
   12d64:	ldr	ip, [pc, #32]	; 12d8c <argp_parse@@Base+0xdb8>
   12d68:	push	{lr}		; (str lr, [sp, #-4]!)
   12d6c:	sub	sp, sp, #12
   12d70:	ldm	ip, {r1, ip}
   12d74:	ldr	r3, [pc, #20]	; 12d90 <argp_parse@@Base+0xdbc>
   12d78:	ldr	r2, [pc, #20]	; 12d94 <argp_parse@@Base+0xdc0>
   12d7c:	str	ip, [sp]
   12d80:	bl	132d0 <argp_parse@@Base+0x12fc>
   12d84:	add	sp, sp, #12
   12d88:	pop	{pc}		; (ldr pc, [sp], #4)
   12d8c:	andeq	sl, r2, ip, ror r2
   12d90:	andeq	r8, r1, r4, ror #24
   12d94:	andeq	r8, r1, r4, ror ip
   12d98:	ldr	r3, [pc, #20]	; 12db4 <argp_parse@@Base+0xde0>
   12d9c:	ldr	r2, [pc, #20]	; 12db8 <argp_parse@@Base+0xde4>
   12da0:	ldr	ip, [pc, #20]	; 12dbc <argp_parse@@Base+0xde8>
   12da4:	str	r0, [r3]
   12da8:	str	ip, [r2]
   12dac:	str	r1, [r3, #4]
   12db0:	bx	lr
   12db4:	andeq	sl, r2, ip, ror r2
   12db8:	andeq	sl, r2, r8, ror r2
   12dbc:	andeq	r2, r1, r4, ror #26
   12dc0:	ldrb	r3, [r0]
   12dc4:	cmp	r3, #47	; 0x2f
   12dc8:	bne	12dd8 <argp_parse@@Base+0xe04>
   12dcc:	ldrb	r3, [r0, #1]!
   12dd0:	cmp	r3, #47	; 0x2f
   12dd4:	beq	12dcc <argp_parse@@Base+0xdf8>
   12dd8:	cmp	r3, #0
   12ddc:	bxeq	lr
   12de0:	mov	r2, #0
   12de4:	push	{lr}		; (str lr, [sp, #-4]!)
   12de8:	mov	ip, r2
   12dec:	mov	r1, r0
   12df0:	mov	lr, #1
   12df4:	cmp	r3, #47	; 0x2f
   12df8:	moveq	r2, lr
   12dfc:	beq	12e0c <argp_parse@@Base+0xe38>
   12e00:	cmp	r2, #0
   12e04:	movne	r0, r1
   12e08:	movne	r2, ip
   12e0c:	ldrb	r3, [r1, #1]!
   12e10:	cmp	r3, #0
   12e14:	bne	12df4 <argp_parse@@Base+0xe20>
   12e18:	pop	{pc}		; (ldr pc, [sp], #4)
   12e1c:	push	{r4, lr}
   12e20:	mov	r4, r0
   12e24:	bl	110fc <strlen@plt>
   12e28:	cmp	r0, #1
   12e2c:	popls	{r4, pc}
   12e30:	sub	r3, r0, #1
   12e34:	add	r2, r4, r3
   12e38:	ldrb	r1, [r4, r3]
   12e3c:	cmp	r1, #47	; 0x2f
   12e40:	popne	{r4, pc}
   12e44:	cmp	r3, #1
   12e48:	beq	12e5c <argp_parse@@Base+0xe88>
   12e4c:	ldrb	r1, [r2, #-1]!
   12e50:	sub	r0, r3, #1
   12e54:	cmp	r1, #47	; 0x2f
   12e58:	beq	12e64 <argp_parse@@Base+0xe90>
   12e5c:	mov	r0, r3
   12e60:	pop	{r4, pc}
   12e64:	mov	r3, r0
   12e68:	b	12e44 <argp_parse@@Base+0xe70>
   12e6c:	push	{r4, r5, lr}
   12e70:	sub	sp, sp, #12
   12e74:	mov	r5, r0
   12e78:	bl	11120 <__errno_location@plt>
   12e7c:	mov	r2, #0
   12e80:	mov	r4, r0
   12e84:	ldr	r3, [r0]
   12e88:	str	r2, [r4]
   12e8c:	mov	r0, r5
   12e90:	str	r3, [sp]
   12e94:	str	r3, [sp, #4]
   12e98:	bl	10fb8 <free@plt>
   12e9c:	ldr	r3, [r4]
   12ea0:	add	r2, sp, #8
   12ea4:	cmp	r3, #0
   12ea8:	moveq	r3, #4
   12eac:	movne	r3, #0
   12eb0:	add	r3, r2, r3
   12eb4:	ldr	r3, [r3, #-8]
   12eb8:	str	r3, [r4]
   12ebc:	add	sp, sp, #12
   12ec0:	pop	{r4, r5, pc}
   12ec4:	push	{lr}		; (str lr, [sp, #-4]!)
   12ec8:	sub	sp, sp, #20
   12ecc:	mov	ip, #0
   12ed0:	ldr	lr, [sp, #24]
   12ed4:	str	ip, [sp, #8]
   12ed8:	str	lr, [sp]
   12edc:	str	ip, [sp, #4]
   12ee0:	bl	17ad8 <argp_error@@Base+0xca4>
   12ee4:	add	sp, sp, #20
   12ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   12eec:	push	{r4, lr}
   12ef0:	sub	sp, sp, #16
   12ef4:	mov	ip, #0
   12ef8:	ldr	r4, [sp, #24]
   12efc:	ldr	lr, [sp, #28]
   12f00:	str	r4, [sp]
   12f04:	str	lr, [sp, #8]
   12f08:	str	ip, [sp, #12]
   12f0c:	str	ip, [sp, #4]
   12f10:	bl	17578 <argp_error@@Base+0x744>
   12f14:	add	sp, sp, #16
   12f18:	pop	{r4, pc}
   12f1c:	push	{r4, lr}
   12f20:	sub	sp, sp, #16
   12f24:	mov	lr, #0
   12f28:	ldr	r4, [sp, #24]
   12f2c:	mov	ip, #1
   12f30:	stm	sp, {r4, ip, lr}
   12f34:	bl	17ad8 <argp_error@@Base+0xca4>
   12f38:	add	sp, sp, #16
   12f3c:	pop	{r4, pc}
   12f40:	push	{r4, r5, lr}
   12f44:	sub	sp, sp, #20
   12f48:	mov	lr, #0
   12f4c:	ldr	r5, [sp, #32]
   12f50:	ldr	r4, [sp, #36]	; 0x24
   12f54:	mov	ip, #1
   12f58:	str	r5, [sp]
   12f5c:	str	r4, [sp, #8]
   12f60:	str	lr, [sp, #12]
   12f64:	str	ip, [sp, #4]
   12f68:	bl	17578 <argp_error@@Base+0x744>
   12f6c:	add	sp, sp, #20
   12f70:	pop	{r4, r5, pc}
   12f74:	push	{r4, r5, r6, lr}
   12f78:	subs	r4, r0, #0
   12f7c:	beq	12ff0 <argp_parse@@Base+0x101c>
   12f80:	mov	r1, #47	; 0x2f
   12f84:	bl	11168 <strrchr@plt>
   12f88:	subs	r5, r0, #0
   12f8c:	beq	12fdc <argp_parse@@Base+0x1008>
   12f90:	add	r6, r5, #1
   12f94:	sub	r3, r6, r4
   12f98:	cmp	r3, #6
   12f9c:	ble	12fdc <argp_parse@@Base+0x1008>
   12fa0:	mov	r2, #7
   12fa4:	ldr	r1, [pc, #96]	; 1300c <argp_parse@@Base+0x1038>
   12fa8:	sub	r0, r5, #6
   12fac:	bl	111e0 <strncmp@plt>
   12fb0:	cmp	r0, #0
   12fb4:	bne	12fdc <argp_parse@@Base+0x1008>
   12fb8:	mov	r2, #3
   12fbc:	ldr	r1, [pc, #76]	; 13010 <argp_parse@@Base+0x103c>
   12fc0:	mov	r0, r6
   12fc4:	bl	111e0 <strncmp@plt>
   12fc8:	cmp	r0, #0
   12fcc:	movne	r4, r6
   12fd0:	ldreq	r3, [pc, #60]	; 13014 <argp_parse@@Base+0x1040>
   12fd4:	addeq	r4, r5, #4
   12fd8:	streq	r4, [r3]
   12fdc:	ldr	r2, [pc, #52]	; 13018 <argp_parse@@Base+0x1044>
   12fe0:	ldr	r3, [pc, #52]	; 1301c <argp_parse@@Base+0x1048>
   12fe4:	str	r4, [r2]
   12fe8:	str	r4, [r3]
   12fec:	pop	{r4, r5, r6, pc}
   12ff0:	ldr	r3, [pc, #40]	; 13020 <argp_parse@@Base+0x104c>
   12ff4:	mov	r2, #55	; 0x37
   12ff8:	mov	r1, #1
   12ffc:	ldr	r3, [r3]
   13000:	ldr	r0, [pc, #28]	; 13024 <argp_parse@@Base+0x1050>
   13004:	bl	1103c <fwrite@plt>
   13008:	bl	111ec <abort@plt>
   1300c:			; <UNDEFINED> instruction: 0x00018cbc
   13010:	andeq	r8, r1, r4, asr #25
   13014:	andeq	sl, r2, r8, asr r2
   13018:	andeq	sl, r2, r4, lsl #5
   1301c:	andeq	sl, r2, ip, asr r2
   13020:	andeq	sl, r2, r0, ror #4
   13024:	andeq	r8, r1, r4, lsl #25
   13028:	push	{r4, r5, r6, r7, lr}
   1302c:	sub	sp, sp, #36	; 0x24
   13030:	cmp	r1, #0
   13034:	mov	r4, r0
   13038:	ldr	r5, [sp, #56]	; 0x38
   1303c:	ldr	r6, [sp, #60]	; 0x3c
   13040:	beq	13280 <argp_parse@@Base+0x12ac>
   13044:	str	r3, [sp]
   13048:	mov	r3, r2
   1304c:	mov	r2, r1
   13050:	ldr	r1, [pc, #564]	; 1328c <argp_parse@@Base+0x12b8>
   13054:	bl	11114 <fprintf@plt>
   13058:	ldr	r3, [pc, #560]	; 13290 <argp_parse@@Base+0x12bc>
   1305c:	ldr	r2, [pc, #560]	; 13294 <argp_parse@@Base+0x12c0>
   13060:	ldr	r1, [pc, #560]	; 13298 <argp_parse@@Base+0x12c4>
   13064:	mov	r0, r4
   13068:	bl	11114 <fprintf@plt>
   1306c:	mov	r1, r4
   13070:	mov	r0, #10
   13074:	bl	11180 <fputc@plt>
   13078:	ldr	r1, [pc, #540]	; 1329c <argp_parse@@Base+0x12c8>
   1307c:	ldr	r2, [pc, #540]	; 132a0 <argp_parse@@Base+0x12cc>
   13080:	mov	r0, r4
   13084:	bl	11114 <fprintf@plt>
   13088:	mov	r1, r4
   1308c:	mov	r0, #10
   13090:	bl	11180 <fputc@plt>
   13094:	cmp	r6, #9
   13098:	ldrls	pc, [pc, r6, lsl #2]
   1309c:	b	130c8 <argp_parse@@Base+0x10f4>
   130a0:	andeq	r3, r1, r8, lsl #2
   130a4:	andeq	r3, r1, r4, asr r1
   130a8:	andeq	r3, r1, ip, ror #2
   130ac:	andeq	r3, r1, r4, lsl #3
   130b0:	andeq	r3, r1, r4, lsr #3
   130b4:	andeq	r3, r1, ip, asr #3
   130b8:	andeq	r3, r1, ip, ror #3
   130bc:	andeq	r3, r1, r4, lsl r2
   130c0:	andeq	r3, r1, r4, asr #4
   130c4:	andeq	r3, r1, r0, lsl r1
   130c8:	ldr	ip, [r5, #32]
   130cc:	ldr	r1, [r5, #28]
   130d0:	ldm	r5, {r2, r3}
   130d4:	ldr	r7, [r5, #24]
   130d8:	ldr	r6, [r5, #20]
   130dc:	str	ip, [sp, #24]
   130e0:	ldr	lr, [r5, #16]
   130e4:	str	r1, [sp, #20]
   130e8:	ldr	r1, [r5, #8]
   130ec:	ldr	ip, [r5, #12]
   130f0:	mov	r0, r4
   130f4:	str	r7, [sp, #16]
   130f8:	stm	sp, {r1, ip, lr}
   130fc:	str	r6, [sp, #12]
   13100:	ldr	r1, [pc, #412]	; 132a4 <argp_parse@@Base+0x12d0>
   13104:	bl	11114 <fprintf@plt>
   13108:	add	sp, sp, #36	; 0x24
   1310c:	pop	{r4, r5, r6, r7, pc}
   13110:	ldr	ip, [r5, #32]
   13114:	ldr	r1, [r5, #28]
   13118:	ldm	r5, {r2, r3}
   1311c:	ldr	r7, [r5, #24]
   13120:	ldr	r6, [r5, #20]
   13124:	str	ip, [sp, #24]
   13128:	ldr	lr, [r5, #16]
   1312c:	str	r1, [sp, #20]
   13130:	ldr	r1, [r5, #8]
   13134:	ldr	ip, [r5, #12]
   13138:	mov	r0, r4
   1313c:	str	r7, [sp, #16]
   13140:	stm	sp, {r1, ip, lr}
   13144:	str	r6, [sp, #12]
   13148:	ldr	r1, [pc, #344]	; 132a8 <argp_parse@@Base+0x12d4>
   1314c:	bl	11114 <fprintf@plt>
   13150:	b	13108 <argp_parse@@Base+0x1134>
   13154:	ldr	r2, [r5]
   13158:	mov	r0, r4
   1315c:	ldr	r1, [pc, #328]	; 132ac <argp_parse@@Base+0x12d8>
   13160:	add	sp, sp, #36	; 0x24
   13164:	pop	{r4, r5, r6, r7, lr}
   13168:	b	11114 <fprintf@plt>
   1316c:	mov	r0, r4
   13170:	ldm	r5, {r2, r3}
   13174:	ldr	r1, [pc, #308]	; 132b0 <argp_parse@@Base+0x12dc>
   13178:	add	sp, sp, #36	; 0x24
   1317c:	pop	{r4, r5, r6, r7, lr}
   13180:	b	11114 <fprintf@plt>
   13184:	ldr	r1, [r5, #8]
   13188:	ldm	r5, {r2, r3}
   1318c:	mov	r0, r4
   13190:	str	r1, [sp, #56]	; 0x38
   13194:	ldr	r1, [pc, #280]	; 132b4 <argp_parse@@Base+0x12e0>
   13198:	add	sp, sp, #36	; 0x24
   1319c:	pop	{r4, r5, r6, r7, lr}
   131a0:	b	11114 <fprintf@plt>
   131a4:	ldr	r1, [r5, #8]
   131a8:	ldr	ip, [r5, #12]
   131ac:	ldm	r5, {r2, r3}
   131b0:	mov	r0, r4
   131b4:	str	r1, [sp, #56]	; 0x38
   131b8:	str	ip, [sp, #60]	; 0x3c
   131bc:	ldr	r1, [pc, #244]	; 132b8 <argp_parse@@Base+0x12e4>
   131c0:	add	sp, sp, #36	; 0x24
   131c4:	pop	{r4, r5, r6, r7, lr}
   131c8:	b	11114 <fprintf@plt>
   131cc:	add	r1, r5, #8
   131d0:	ldm	r5, {r2, r3}
   131d4:	ldm	r1, {r1, ip, lr}
   131d8:	mov	r0, r4
   131dc:	stm	sp, {r1, ip, lr}
   131e0:	ldr	r1, [pc, #212]	; 132bc <argp_parse@@Base+0x12e8>
   131e4:	bl	11114 <fprintf@plt>
   131e8:	b	13108 <argp_parse@@Base+0x1134>
   131ec:	add	r1, r5, #8
   131f0:	ldr	r6, [r5, #20]
   131f4:	ldm	r1, {r1, ip, lr}
   131f8:	mov	r0, r4
   131fc:	ldm	r5, {r2, r3}
   13200:	str	r6, [sp, #12]
   13204:	stm	sp, {r1, ip, lr}
   13208:	ldr	r1, [pc, #176]	; 132c0 <argp_parse@@Base+0x12ec>
   1320c:	bl	11114 <fprintf@plt>
   13210:	b	13108 <argp_parse@@Base+0x1134>
   13214:	add	r1, r5, #8
   13218:	ldr	r7, [r5, #24]
   1321c:	ldm	r1, {r1, ip, lr}
   13220:	mov	r0, r4
   13224:	ldr	r6, [r5, #20]
   13228:	ldm	r5, {r2, r3}
   1322c:	stm	sp, {r1, ip, lr}
   13230:	str	r7, [sp, #16]
   13234:	str	r6, [sp, #12]
   13238:	ldr	r1, [pc, #132]	; 132c4 <argp_parse@@Base+0x12f0>
   1323c:	bl	11114 <fprintf@plt>
   13240:	b	13108 <argp_parse@@Base+0x1134>
   13244:	ldr	r1, [r5, #28]
   13248:	ldm	r5, {r2, r3}
   1324c:	ldr	r7, [r5, #24]
   13250:	ldr	r6, [r5, #20]
   13254:	ldr	lr, [r5, #16]
   13258:	str	r1, [sp, #20]
   1325c:	ldr	r1, [r5, #8]
   13260:	ldr	ip, [r5, #12]
   13264:	mov	r0, r4
   13268:	str	r7, [sp, #16]
   1326c:	stm	sp, {r1, ip, lr}
   13270:	str	r6, [sp, #12]
   13274:	ldr	r1, [pc, #76]	; 132c8 <argp_parse@@Base+0x12f4>
   13278:	bl	11114 <fprintf@plt>
   1327c:	b	13108 <argp_parse@@Base+0x1134>
   13280:	ldr	r1, [pc, #68]	; 132cc <argp_parse@@Base+0x12f8>
   13284:	bl	11114 <fprintf@plt>
   13288:	b	13058 <argp_parse@@Base+0x1084>
   1328c:	andeq	r8, r1, r8, asr #25
   13290:	andeq	r0, r0, r6, ror #15
   13294:	ldrdeq	r8, [r1], -ip
   13298:	ldrdeq	r8, [r1], -ip
   1329c:	andeq	r8, r1, r4, lsl #26
   132a0:	andeq	r8, r1, r0, ror #25
   132a4:	strdeq	r8, [r1], -r0
   132a8:			; <UNDEFINED> instruction: 0x00018ebc
   132ac:			; <UNDEFINED> instruction: 0x00018db0
   132b0:	andeq	r8, r1, r0, asr #27
   132b4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   132b8:	strdeq	r8, [r1], -r4
   132bc:	andeq	r8, r1, r4, lsl lr
   132c0:	andeq	r8, r1, r8, lsr lr
   132c4:	andeq	r8, r1, r0, ror #28
   132c8:	andeq	r8, r1, ip, lsl #29
   132cc:	ldrdeq	r8, [r1], -r4
   132d0:	push	{r4, r5, lr}
   132d4:	sub	sp, sp, #12
   132d8:	ldr	r5, [sp, #24]
   132dc:	ldr	ip, [r5]
   132e0:	cmp	ip, #0
   132e4:	beq	13300 <argp_parse@@Base+0x132c>
   132e8:	mov	lr, r5
   132ec:	mov	ip, #0
   132f0:	ldr	r4, [lr, #4]!
   132f4:	add	ip, ip, #1
   132f8:	cmp	r4, #0
   132fc:	bne	132f0 <argp_parse@@Base+0x131c>
   13300:	stm	sp, {r5, ip}
   13304:	bl	13028 <argp_parse@@Base+0x1054>
   13308:	add	sp, sp, #12
   1330c:	pop	{r4, r5, pc}
   13310:	push	{r4, r5, lr}
   13314:	sub	sp, sp, #52	; 0x34
   13318:	add	r5, sp, #4
   1331c:	ldr	r4, [sp, #64]	; 0x40
   13320:	mov	ip, #0
   13324:	sub	r4, r4, #4
   13328:	ldr	lr, [r4, #4]!
   1332c:	cmp	lr, #0
   13330:	str	lr, [r5, #4]!
   13334:	beq	13344 <argp_parse@@Base+0x1370>
   13338:	add	ip, ip, #1
   1333c:	cmp	ip, #10
   13340:	bne	13328 <argp_parse@@Base+0x1354>
   13344:	add	lr, sp, #8
   13348:	str	ip, [sp, #4]
   1334c:	str	lr, [sp]
   13350:	bl	13028 <argp_parse@@Base+0x1054>
   13354:	add	sp, sp, #52	; 0x34
   13358:	pop	{r4, r5, pc}
   1335c:	push	{r3}		; (str r3, [sp, #-4]!)
   13360:	push	{r4, lr}
   13364:	sub	sp, sp, #60	; 0x3c
   13368:	add	lr, sp, #56	; 0x38
   1336c:	add	r3, sp, #72	; 0x48
   13370:	str	r3, [lr, #-44]!	; 0xffffffd4
   13374:	add	r4, sp, #68	; 0x44
   13378:	mov	r3, #0
   1337c:	ldr	ip, [r4, #4]!
   13380:	cmp	ip, #0
   13384:	str	ip, [lr, #4]!
   13388:	beq	13398 <argp_parse@@Base+0x13c4>
   1338c:	add	r3, r3, #1
   13390:	cmp	r3, #10
   13394:	bne	1337c <argp_parse@@Base+0x13a8>
   13398:	add	ip, sp, #16
   1339c:	str	r3, [sp, #4]
   133a0:	str	ip, [sp]
   133a4:	ldr	r3, [sp, #68]	; 0x44
   133a8:	bl	13028 <argp_parse@@Base+0x1054>
   133ac:	add	sp, sp, #60	; 0x3c
   133b0:	pop	{r4, lr}
   133b4:	add	sp, sp, #4
   133b8:	bx	lr
   133bc:	ldr	r3, [pc, #56]	; 133fc <argp_parse@@Base+0x1428>
   133c0:	push	{r4, lr}
   133c4:	mov	r0, #10
   133c8:	ldr	r1, [r3]
   133cc:	bl	11180 <fputc@plt>
   133d0:	ldr	r1, [pc, #40]	; 13400 <argp_parse@@Base+0x142c>
   133d4:	ldr	r0, [pc, #40]	; 13404 <argp_parse@@Base+0x1430>
   133d8:	bl	10f88 <printf@plt>
   133dc:	ldr	r1, [pc, #36]	; 13408 <argp_parse@@Base+0x1434>
   133e0:	ldr	r2, [pc, #36]	; 1340c <argp_parse@@Base+0x1438>
   133e4:	ldr	r0, [pc, #36]	; 13410 <argp_parse@@Base+0x143c>
   133e8:	bl	10f88 <printf@plt>
   133ec:	ldr	r1, [pc, #32]	; 13414 <argp_parse@@Base+0x1440>
   133f0:	ldr	r0, [pc, #32]	; 13418 <argp_parse@@Base+0x1444>
   133f4:	pop	{r4, lr}
   133f8:	b	10f88 <printf@plt>
   133fc:	andeq	sl, r2, r4, ror #4
   13400:	andeq	r8, r1, ip, lsr #30
   13404:	andeq	r8, r1, r4, asr #30
   13408:	andeq	r8, r1, r4, ror ip
   1340c:	andeq	r8, r1, r8, asr pc
   13410:	andeq	r8, r1, r0, lsl #31
   13414:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13418:			; <UNDEFINED> instruction: 0x00018fb4
   1341c:	push	{r4, lr}
   13420:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   13424:	cmp	r0, #0
   13428:	popne	{r4, pc}
   1342c:	bl	13964 <argp_parse@@Base+0x1990>
   13430:	push	{r4, lr}
   13434:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   13438:	cmp	r0, #0
   1343c:	popne	{r4, pc}
   13440:	bl	13964 <argp_parse@@Base+0x1990>
   13444:	push	{r4, lr}
   13448:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   1344c:	cmp	r0, #0
   13450:	popne	{r4, pc}
   13454:	bl	13964 <argp_parse@@Base+0x1990>
   13458:	push	{r4, r5, r6, lr}
   1345c:	mov	r5, r0
   13460:	mov	r4, r1
   13464:	bl	13bdc <argp_parse@@Base+0x1c08>
   13468:	cmp	r0, #0
   1346c:	popne	{r4, r5, r6, pc}
   13470:	adds	r4, r4, #0
   13474:	movne	r4, #1
   13478:	cmp	r5, #0
   1347c:	orreq	r4, r4, #1
   13480:	cmp	r4, #0
   13484:	popeq	{r4, r5, r6, pc}
   13488:	bl	13964 <argp_parse@@Base+0x1990>
   1348c:	push	{r4, lr}
   13490:	cmp	r1, #0
   13494:	orreq	r1, r1, #1
   13498:	bl	13bdc <argp_parse@@Base+0x1c08>
   1349c:	cmp	r0, #0
   134a0:	popne	{r4, pc}
   134a4:	bl	13964 <argp_parse@@Base+0x1990>
   134a8:	push	{r4, r5, r6, lr}
   134ac:	mov	r6, r0
   134b0:	mov	r5, r1
   134b4:	mov	r4, r2
   134b8:	bl	17b6c <argp_error@@Base+0xd38>
   134bc:	cmp	r0, #0
   134c0:	popne	{r4, r5, r6, pc}
   134c4:	cmp	r6, #0
   134c8:	beq	134d8 <argp_parse@@Base+0x1504>
   134cc:	cmp	r5, #0
   134d0:	cmpne	r4, #0
   134d4:	popeq	{r4, r5, r6, pc}
   134d8:	bl	13964 <argp_parse@@Base+0x1990>
   134dc:	b	134a8 <argp_parse@@Base+0x14d4>
   134e0:	cmp	r2, #0
   134e4:	cmpne	r1, #0
   134e8:	moveq	r2, #1
   134ec:	moveq	r1, r2
   134f0:	push	{r4, lr}
   134f4:	bl	17b6c <argp_error@@Base+0xd38>
   134f8:	cmp	r0, #0
   134fc:	popne	{r4, pc}
   13500:	bl	13964 <argp_parse@@Base+0x1990>
   13504:	mov	r2, r1
   13508:	mov	r1, r0
   1350c:	mov	r0, #0
   13510:	b	134a8 <argp_parse@@Base+0x14d4>
   13514:	mov	r2, r1
   13518:	mov	r1, r0
   1351c:	mov	r0, #0
   13520:	b	134e0 <argp_parse@@Base+0x150c>
   13524:	push	{r4, r5, r6, lr}
   13528:	subs	r6, r0, #0
   1352c:	sub	sp, sp, #8
   13530:	mov	r5, r1
   13534:	ldr	r4, [r1]
   13538:	beq	13574 <argp_parse@@Base+0x15a0>
   1353c:	lsr	r1, r4, #1
   13540:	add	r3, r1, #1
   13544:	mvn	r3, r3
   13548:	cmp	r4, r3
   1354c:	bhi	13570 <argp_parse@@Base+0x159c>
   13550:	add	r4, r4, #1
   13554:	add	r4, r4, r1
   13558:	mov	r0, r6
   1355c:	mov	r1, r4
   13560:	bl	134a8 <argp_parse@@Base+0x14d4>
   13564:	str	r4, [r5]
   13568:	add	sp, sp, #8
   1356c:	pop	{r4, r5, r6, pc}
   13570:	bl	13964 <argp_parse@@Base+0x1990>
   13574:	cmp	r4, #0
   13578:	bne	13558 <argp_parse@@Base+0x1584>
   1357c:	mov	r1, r2
   13580:	mov	r0, #64	; 0x40
   13584:	str	r2, [sp, #4]
   13588:	bl	18380 <argp_error@@Base+0x154c>
   1358c:	ldr	r2, [sp, #4]
   13590:	cmp	r0, #0
   13594:	movne	r4, r0
   13598:	addeq	r4, r0, #1
   1359c:	b	13558 <argp_parse@@Base+0x1584>
   135a0:	mov	r2, #1
   135a4:	b	13524 <argp_parse@@Base+0x1550>
   135a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135ac:	sub	sp, sp, #12
   135b0:	ldr	r6, [r1]
   135b4:	mov	sl, r1
   135b8:	mov	r9, r0
   135bc:	asrs	r4, r6, #1
   135c0:	mov	r5, r2
   135c4:	mov	fp, r3
   135c8:	ldr	r7, [sp, #48]	; 0x30
   135cc:	bmi	13738 <argp_parse@@Base+0x1764>
   135d0:	mvn	r3, #-2147483648	; 0x80000000
   135d4:	sub	r3, r3, r4
   135d8:	cmp	r6, r3
   135dc:	movle	r3, #0
   135e0:	movgt	r3, #1
   135e4:	mvn	r8, fp
   135e8:	cmp	r3, #0
   135ec:	addeq	r4, r4, r6
   135f0:	mvnne	r4, #-2147483648	; 0x80000000
   135f4:	lsr	r8, r8, #31
   135f8:	cmp	fp, r4
   135fc:	movge	r3, #0
   13600:	andlt	r3, r8, #1
   13604:	cmp	r3, #0
   13608:	beq	136f0 <argp_parse@@Base+0x171c>
   1360c:	cmp	r7, #0
   13610:	blt	137c0 <argp_parse@@Base+0x17ec>
   13614:	bne	137b8 <argp_parse@@Base+0x17e4>
   13618:	mov	r2, #64	; 0x40
   1361c:	mov	r1, r7
   13620:	mov	r0, r2
   13624:	str	r2, [sp, #4]
   13628:	bl	1858c <argp_error@@Base+0x1758>
   1362c:	ldr	r2, [sp, #4]
   13630:	mov	r1, r7
   13634:	mov	r4, r0
   13638:	mov	r0, r2
   1363c:	bl	187ac <argp_error@@Base+0x1978>
   13640:	ldr	r2, [sp, #4]
   13644:	sub	r1, r2, r1
   13648:	cmp	r9, #0
   1364c:	sub	r3, r4, r6
   13650:	streq	r9, [sl]
   13654:	cmp	r3, r5
   13658:	bge	136dc <argp_parse@@Base+0x1708>
   1365c:	cmp	r5, #0
   13660:	blt	1374c <argp_parse@@Base+0x1778>
   13664:	cmp	r6, #0
   13668:	blt	13688 <argp_parse@@Base+0x16b4>
   1366c:	mvn	r3, #-2147483648	; 0x80000000
   13670:	sub	r3, r3, r5
   13674:	cmp	r6, r3
   13678:	movle	r3, #0
   1367c:	movgt	r3, #1
   13680:	cmp	r3, #0
   13684:	bne	13848 <argp_parse@@Base+0x1874>
   13688:	add	r5, r6, r5
   1368c:	cmp	fp, r5
   13690:	movge	r8, #0
   13694:	andlt	r8, r8, #1
   13698:	cmp	r8, #0
   1369c:	mov	r4, r5
   136a0:	bne	13848 <argp_parse@@Base+0x1874>
   136a4:	cmp	r7, #0
   136a8:	blt	13760 <argp_parse@@Base+0x178c>
   136ac:	beq	136d8 <argp_parse@@Base+0x1704>
   136b0:	cmp	r5, #0
   136b4:	blt	13808 <argp_parse@@Base+0x1834>
   136b8:	mov	r1, r7
   136bc:	mvn	r0, #-2147483648	; 0x80000000
   136c0:	bl	1858c <argp_error@@Base+0x1758>
   136c4:	cmp	r5, r0
   136c8:	movle	r0, #0
   136cc:	movgt	r0, #1
   136d0:	cmp	r0, #0
   136d4:	bne	13848 <argp_parse@@Base+0x1874>
   136d8:	mul	r1, r5, r7
   136dc:	mov	r0, r9
   136e0:	bl	13458 <argp_parse@@Base+0x1484>
   136e4:	str	r4, [sl]
   136e8:	add	sp, sp, #12
   136ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136f0:	cmp	r7, #0
   136f4:	blt	1378c <argp_parse@@Base+0x17b8>
   136f8:	beq	13618 <argp_parse@@Base+0x1644>
   136fc:	cmp	r4, #0
   13700:	blt	137c8 <argp_parse@@Base+0x17f4>
   13704:	mov	r1, r7
   13708:	mvn	r0, #-2147483648	; 0x80000000
   1370c:	bl	1858c <argp_error@@Base+0x1758>
   13710:	cmp	r0, r4
   13714:	movge	r0, #0
   13718:	movlt	r0, #1
   1371c:	cmp	r0, #0
   13720:	mvnne	r2, #-2147483648	; 0x80000000
   13724:	bne	1361c <argp_parse@@Base+0x1648>
   13728:	mul	r1, r7, r4
   1372c:	cmp	r1, #63	; 0x3f
   13730:	bgt	13648 <argp_parse@@Base+0x1674>
   13734:	b	13618 <argp_parse@@Base+0x1644>
   13738:	rsb	r3, r4, #-2147483648	; 0x80000000
   1373c:	cmp	r6, r3
   13740:	movge	r3, #0
   13744:	movlt	r3, #1
   13748:	b	135e4 <argp_parse@@Base+0x1610>
   1374c:	rsb	r3, r5, #-2147483648	; 0x80000000
   13750:	cmp	r6, r3
   13754:	movge	r3, #0
   13758:	movlt	r3, #1
   1375c:	b	13680 <argp_parse@@Base+0x16ac>
   13760:	cmp	r5, #0
   13764:	blt	137ec <argp_parse@@Base+0x1818>
   13768:	cmn	r7, #1
   1376c:	beq	136d8 <argp_parse@@Base+0x1704>
   13770:	mov	r1, r7
   13774:	mov	r0, #-2147483648	; 0x80000000
   13778:	bl	1858c <argp_error@@Base+0x1758>
   1377c:	cmp	r5, r0
   13780:	movle	r0, #0
   13784:	movgt	r0, #1
   13788:	b	136d0 <argp_parse@@Base+0x16fc>
   1378c:	cmp	r4, #0
   13790:	blt	1382c <argp_parse@@Base+0x1858>
   13794:	cmn	r7, #1
   13798:	beq	13728 <argp_parse@@Base+0x1754>
   1379c:	mov	r1, r7
   137a0:	mov	r0, #-2147483648	; 0x80000000
   137a4:	bl	1858c <argp_error@@Base+0x1758>
   137a8:	cmp	r0, r4
   137ac:	movge	r0, #0
   137b0:	movlt	r0, #1
   137b4:	b	1371c <argp_parse@@Base+0x1748>
   137b8:	mov	r4, fp
   137bc:	b	13704 <argp_parse@@Base+0x1730>
   137c0:	mov	r4, fp
   137c4:	b	13794 <argp_parse@@Base+0x17c0>
   137c8:	cmn	r4, #1
   137cc:	beq	13728 <argp_parse@@Base+0x1754>
   137d0:	mov	r1, r4
   137d4:	mov	r0, #-2147483648	; 0x80000000
   137d8:	bl	1858c <argp_error@@Base+0x1758>
   137dc:	cmp	r7, r0
   137e0:	movle	r0, #0
   137e4:	movgt	r0, #1
   137e8:	b	1371c <argp_parse@@Base+0x1748>
   137ec:	mov	r1, r7
   137f0:	mvn	r0, #-2147483648	; 0x80000000
   137f4:	bl	1858c <argp_error@@Base+0x1758>
   137f8:	cmp	r5, r0
   137fc:	movge	r0, #0
   13800:	movlt	r0, #1
   13804:	b	136d0 <argp_parse@@Base+0x16fc>
   13808:	cmn	r5, #1
   1380c:	beq	136d8 <argp_parse@@Base+0x1704>
   13810:	mov	r1, r5
   13814:	mov	r0, #-2147483648	; 0x80000000
   13818:	bl	1858c <argp_error@@Base+0x1758>
   1381c:	cmp	r7, r0
   13820:	movle	r0, #0
   13824:	movgt	r0, #1
   13828:	b	136d0 <argp_parse@@Base+0x16fc>
   1382c:	mov	r1, r7
   13830:	mvn	r0, #-2147483648	; 0x80000000
   13834:	bl	1858c <argp_error@@Base+0x1758>
   13838:	cmp	r0, r4
   1383c:	movle	r0, #0
   13840:	movgt	r0, #1
   13844:	b	1371c <argp_parse@@Base+0x1748>
   13848:	bl	13964 <argp_parse@@Base+0x1990>
   1384c:	push	{r4, lr}
   13850:	mov	r1, #1
   13854:	bl	13b68 <argp_parse@@Base+0x1b94>
   13858:	cmp	r0, #0
   1385c:	popne	{r4, pc}
   13860:	bl	13964 <argp_parse@@Base+0x1990>
   13864:	push	{r4, lr}
   13868:	mov	r1, #1
   1386c:	bl	13b68 <argp_parse@@Base+0x1b94>
   13870:	cmp	r0, #0
   13874:	popne	{r4, pc}
   13878:	bl	13964 <argp_parse@@Base+0x1990>
   1387c:	push	{r4, lr}
   13880:	bl	13b68 <argp_parse@@Base+0x1b94>
   13884:	cmp	r0, #0
   13888:	popne	{r4, pc}
   1388c:	bl	13964 <argp_parse@@Base+0x1990>
   13890:	push	{r4, lr}
   13894:	bl	13b68 <argp_parse@@Base+0x1b94>
   13898:	cmp	r0, #0
   1389c:	popne	{r4, pc}
   138a0:	bl	13964 <argp_parse@@Base+0x1990>
   138a4:	push	{r4, r5, r6, lr}
   138a8:	mov	r6, r0
   138ac:	mov	r0, r1
   138b0:	mov	r4, r1
   138b4:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   138b8:	subs	r5, r0, #0
   138bc:	beq	138d4 <argp_parse@@Base+0x1900>
   138c0:	mov	r2, r4
   138c4:	mov	r1, r6
   138c8:	bl	10fd0 <memcpy@plt>
   138cc:	mov	r0, r5
   138d0:	pop	{r4, r5, r6, pc}
   138d4:	bl	13964 <argp_parse@@Base+0x1990>
   138d8:	push	{r4, r5, r6, lr}
   138dc:	mov	r6, r0
   138e0:	mov	r0, r1
   138e4:	mov	r4, r1
   138e8:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   138ec:	subs	r5, r0, #0
   138f0:	beq	13908 <argp_parse@@Base+0x1934>
   138f4:	mov	r2, r4
   138f8:	mov	r1, r6
   138fc:	bl	10fd0 <memcpy@plt>
   13900:	mov	r0, r5
   13904:	pop	{r4, r5, r6, pc}
   13908:	bl	13964 <argp_parse@@Base+0x1990>
   1390c:	push	{r4, r5, r6, lr}
   13910:	mov	r6, r0
   13914:	add	r0, r1, #1
   13918:	mov	r4, r1
   1391c:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   13920:	subs	r5, r0, #0
   13924:	beq	13944 <argp_parse@@Base+0x1970>
   13928:	mov	r3, #0
   1392c:	mov	r1, r6
   13930:	strb	r3, [r5, r4]
   13934:	mov	r2, r4
   13938:	bl	10fd0 <memcpy@plt>
   1393c:	mov	r0, r5
   13940:	pop	{r4, r5, r6, pc}
   13944:	bl	13964 <argp_parse@@Base+0x1990>
   13948:	push	{r4, lr}
   1394c:	mov	r4, r0
   13950:	bl	110fc <strlen@plt>
   13954:	add	r1, r0, #1
   13958:	mov	r0, r4
   1395c:	pop	{r4, lr}
   13960:	b	138a4 <argp_parse@@Base+0x18d0>
   13964:	ldr	r1, [pc, #24]	; 13984 <argp_parse@@Base+0x19b0>
   13968:	push	{r4, lr}
   1396c:	ldr	r0, [r1]
   13970:	ldr	r3, [pc, #16]	; 13988 <argp_parse@@Base+0x19b4>
   13974:	ldr	r2, [pc, #16]	; 1398c <argp_parse@@Base+0x19b8>
   13978:	mov	r1, #0
   1397c:	bl	11048 <error@plt>
   13980:	bl	111ec <abort@plt>
   13984:	andeq	sl, r2, r0, asr #4
   13988:	andeq	r9, r1, ip
   1398c:	strdeq	r8, [r1], -ip
   13990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13994:	sub	sp, sp, #116	; 0x74
   13998:	mov	r4, #100	; 0x64
   1399c:	str	r4, [sp, #8]
   139a0:	bl	11120 <__errno_location@plt>
   139a4:	mov	r7, #0
   139a8:	mov	r5, r7
   139ac:	add	fp, sp, #12
   139b0:	mov	r8, #1
   139b4:	mvn	sl, #0
   139b8:	mov	r6, r0
   139bc:	b	139d4 <argp_parse@@Base+0x1a00>
   139c0:	str	r8, [sp]
   139c4:	bl	135a8 <argp_parse@@Base+0x15d4>
   139c8:	ldr	r4, [sp, #8]
   139cc:	mov	fp, r0
   139d0:	mov	r7, r0
   139d4:	sub	r4, r4, #1
   139d8:	mov	r1, r4
   139dc:	strb	r5, [fp, r4]
   139e0:	mov	r0, fp
   139e4:	str	r5, [r6]
   139e8:	bl	11000 <getdomainname@plt>
   139ec:	subs	r9, r0, #0
   139f0:	mov	r0, fp
   139f4:	bne	13a0c <argp_parse@@Base+0x1a38>
   139f8:	bl	110fc <strlen@plt>
   139fc:	add	r0, r0, #1
   13a00:	cmp	r4, r0
   13a04:	bgt	13a5c <argp_parse@@Base+0x1a88>
   13a08:	str	r9, [r6]
   13a0c:	mov	r0, r7
   13a10:	bl	12e6c <argp_parse@@Base+0xe98>
   13a14:	ldr	ip, [r6]
   13a18:	mov	r3, r8
   13a1c:	cmp	ip, #22
   13a20:	mov	r2, #1
   13a24:	ldrls	r3, [pc, #76]	; 13a78 <argp_parse@@Base+0x1aa4>
   13a28:	add	r1, sp, #8
   13a2c:	mov	r0, r5
   13a30:	mvnls	r3, r3, lsr ip
   13a34:	cmp	ip, #36	; 0x24
   13a38:	moveq	ip, #0
   13a3c:	andne	ip, r3, #1
   13a40:	cmp	ip, #0
   13a44:	mov	r3, sl
   13a48:	beq	139c0 <argp_parse@@Base+0x19ec>
   13a4c:	mov	r7, #0
   13a50:	mov	r0, r7
   13a54:	add	sp, sp, #116	; 0x74
   13a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a5c:	cmp	r7, #0
   13a60:	bne	13a50 <argp_parse@@Base+0x1a7c>
   13a64:	mov	r1, r0
   13a68:	mov	r0, fp
   13a6c:	bl	138d8 <argp_parse@@Base+0x1904>
   13a70:	mov	r7, r0
   13a74:	b	13a50 <argp_parse@@Base+0x1a7c>
   13a78:	subeq	r1, r0, r1
   13a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a80:	sub	sp, sp, #116	; 0x74
   13a84:	mov	r4, #100	; 0x64
   13a88:	str	r4, [sp, #8]
   13a8c:	bl	11120 <__errno_location@plt>
   13a90:	mov	r7, #0
   13a94:	mov	r5, r7
   13a98:	add	fp, sp, #12
   13a9c:	mov	r8, #1
   13aa0:	mvn	sl, #0
   13aa4:	mov	r6, r0
   13aa8:	b	13ac0 <argp_parse@@Base+0x1aec>
   13aac:	str	r8, [sp]
   13ab0:	bl	135a8 <argp_parse@@Base+0x15d4>
   13ab4:	ldr	r4, [sp, #8]
   13ab8:	mov	fp, r0
   13abc:	mov	r7, r0
   13ac0:	sub	r4, r4, #1
   13ac4:	mov	r1, r4
   13ac8:	strb	r5, [fp, r4]
   13acc:	mov	r0, fp
   13ad0:	str	r5, [r6]
   13ad4:	bl	11054 <gethostname@plt>
   13ad8:	subs	r9, r0, #0
   13adc:	mov	r0, fp
   13ae0:	bne	13af8 <argp_parse@@Base+0x1b24>
   13ae4:	bl	110fc <strlen@plt>
   13ae8:	add	r0, r0, #1
   13aec:	cmp	r4, r0
   13af0:	bgt	13b48 <argp_parse@@Base+0x1b74>
   13af4:	str	r9, [r6]
   13af8:	mov	r0, r7
   13afc:	bl	12e6c <argp_parse@@Base+0xe98>
   13b00:	ldr	ip, [r6]
   13b04:	mov	r3, r8
   13b08:	cmp	ip, #22
   13b0c:	mov	r2, #1
   13b10:	ldrls	r3, [pc, #76]	; 13b64 <argp_parse@@Base+0x1b90>
   13b14:	add	r1, sp, #8
   13b18:	mov	r0, r5
   13b1c:	mvnls	r3, r3, lsr ip
   13b20:	cmp	ip, #36	; 0x24
   13b24:	moveq	ip, #0
   13b28:	andne	ip, r3, #1
   13b2c:	cmp	ip, #0
   13b30:	mov	r3, sl
   13b34:	beq	13aac <argp_parse@@Base+0x1ad8>
   13b38:	mov	r7, #0
   13b3c:	mov	r0, r7
   13b40:	add	sp, sp, #116	; 0x74
   13b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b48:	cmp	r7, #0
   13b4c:	bne	13b3c <argp_parse@@Base+0x1b68>
   13b50:	mov	r1, r0
   13b54:	mov	r0, fp
   13b58:	bl	138d8 <argp_parse@@Base+0x1904>
   13b5c:	mov	r7, r0
   13b60:	b	13b3c <argp_parse@@Base+0x1b68>
   13b64:	subeq	r1, r0, r1
   13b68:	cmp	r1, #0
   13b6c:	cmpne	r0, #0
   13b70:	moveq	r1, #1
   13b74:	moveq	r0, r1
   13b78:	umull	r2, r3, r0, r1
   13b7c:	adds	r3, r3, #0
   13b80:	movne	r3, #1
   13b84:	cmp	r2, #0
   13b88:	blt	13b98 <argp_parse@@Base+0x1bc4>
   13b8c:	cmp	r3, #0
   13b90:	bne	13b98 <argp_parse@@Base+0x1bc4>
   13b94:	b	10f40 <calloc@plt>
   13b98:	push	{r4, lr}
   13b9c:	bl	11120 <__errno_location@plt>
   13ba0:	mov	r3, #12
   13ba4:	str	r3, [r0]
   13ba8:	mov	r0, #0
   13bac:	pop	{r4, pc}
   13bb0:	cmp	r0, #0
   13bb4:	moveq	r0, #1
   13bb8:	cmp	r0, #0
   13bbc:	blt	13bc4 <argp_parse@@Base+0x1bf0>
   13bc0:	b	11078 <malloc@plt>
   13bc4:	push	{r4, lr}
   13bc8:	bl	11120 <__errno_location@plt>
   13bcc:	mov	r3, #12
   13bd0:	str	r3, [r0]
   13bd4:	mov	r0, #0
   13bd8:	pop	{r4, pc}
   13bdc:	cmp	r0, #0
   13be0:	beq	13c04 <argp_parse@@Base+0x1c30>
   13be4:	cmp	r1, #0
   13be8:	push	{lr}		; (str lr, [sp, #-4]!)
   13bec:	sub	sp, sp, #12
   13bf0:	beq	13c0c <argp_parse@@Base+0x1c38>
   13bf4:	blt	13c24 <argp_parse@@Base+0x1c50>
   13bf8:	add	sp, sp, #12
   13bfc:	pop	{lr}		; (ldr lr, [sp], #4)
   13c00:	b	11018 <realloc@plt>
   13c04:	mov	r0, r1
   13c08:	b	13bb0 <argp_parse@@Base+0x1bdc>
   13c0c:	str	r1, [sp, #4]
   13c10:	bl	12e6c <argp_parse@@Base+0xe98>
   13c14:	ldr	r3, [sp, #4]
   13c18:	mov	r0, r3
   13c1c:	add	sp, sp, #12
   13c20:	pop	{pc}		; (ldr pc, [sp], #4)
   13c24:	bl	11120 <__errno_location@plt>
   13c28:	mov	r2, #12
   13c2c:	mov	r3, #0
   13c30:	str	r2, [r0]
   13c34:	b	13c18 <argp_parse@@Base+0x1c44>
   13c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c3c:	sub	sp, sp, #20
   13c40:	ldr	r5, [r0, #4]
   13c44:	ldr	r4, [r0]
   13c48:	cmp	r5, #0
   13c4c:	ldr	r7, [r0, #8]
   13c50:	beq	13d28 <argp_parse@@Base+0x1d54>
   13c54:	stmib	sp, {r1, r2, r3}
   13c58:	mov	r6, #1
   13c5c:	str	r4, [sp]
   13c60:	mov	r8, #0
   13c64:	b	13c84 <argp_parse@@Base+0x1cb0>
   13c68:	mov	r3, r6
   13c6c:	subs	r5, r5, #1
   13c70:	moveq	r3, #0
   13c74:	andne	r3, r3, #1
   13c78:	cmp	r3, #0
   13c7c:	add	r4, r4, #24
   13c80:	beq	13cf0 <argp_parse@@Base+0x1d1c>
   13c84:	ldr	fp, [r4, #12]
   13c88:	ands	r9, fp, #8
   13c8c:	movne	r3, r6
   13c90:	movne	r9, r8
   13c94:	bne	13c6c <argp_parse@@Base+0x1c98>
   13c98:	ldr	sl, [r4, #4]
   13c9c:	sub	r3, sl, #1
   13ca0:	cmp	r3, #254	; 0xfe
   13ca4:	bhi	13c68 <argp_parse@@Base+0x1c94>
   13ca8:	bl	110d8 <__ctype_b_loc@plt>
   13cac:	lsl	r3, sl, #1
   13cb0:	ldr	r1, [r0]
   13cb4:	ldrh	r3, [r1, r3]
   13cb8:	tst	r3, #16384	; 0x4000
   13cbc:	beq	13c68 <argp_parse@@Base+0x1c94>
   13cc0:	ldrb	r3, [r7]
   13cc4:	cmp	r3, sl
   13cc8:	bne	13c68 <argp_parse@@Base+0x1c94>
   13ccc:	ldr	r3, [sp]
   13cd0:	tst	fp, #4
   13cd4:	moveq	r3, r4
   13cd8:	tst	fp, #2
   13cdc:	str	r3, [sp]
   13ce0:	movne	r3, r6
   13ce4:	beq	13d00 <argp_parse@@Base+0x1d2c>
   13ce8:	add	r7, r7, #1
   13cec:	b	13c6c <argp_parse@@Base+0x1c98>
   13cf0:	mov	sl, r9
   13cf4:	mov	r0, sl
   13cf8:	add	sp, sp, #20
   13cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d00:	ldr	r3, [sp, #12]
   13d04:	ldr	r2, [sp, #8]
   13d08:	ldr	r1, [sp]
   13d0c:	mov	r0, r4
   13d10:	ldr	ip, [sp, #4]
   13d14:	blx	ip
   13d18:	clz	r3, r0
   13d1c:	mov	r9, r0
   13d20:	lsr	r3, r3, #5
   13d24:	b	13ce8 <argp_parse@@Base+0x1d14>
   13d28:	mov	sl, r5
   13d2c:	b	13cf4 <argp_parse@@Base+0x1d20>
   13d30:	push	{r4, r5, r6, lr}
   13d34:	ldr	r4, [r0, #12]
   13d38:	ands	r4, r4, #8
   13d3c:	movne	r4, #0
   13d40:	bne	13d6c <argp_parse@@Base+0x1d98>
   13d44:	ldr	r5, [r0, #4]
   13d48:	sub	r3, r5, #1
   13d4c:	cmp	r3, #254	; 0xfe
   13d50:	bhi	13d6c <argp_parse@@Base+0x1d98>
   13d54:	bl	110d8 <__ctype_b_loc@plt>
   13d58:	lsl	r3, r5, #1
   13d5c:	ldr	r2, [r0]
   13d60:	ldrh	r3, [r2, r3]
   13d64:	tst	r3, #16384	; 0x4000
   13d68:	movne	r4, r5
   13d6c:	mov	r0, r4
   13d70:	pop	{r4, r5, r6, pc}
   13d74:	push	{r4, lr}
   13d78:	mov	r4, r0
   13d7c:	bl	110d8 <__ctype_b_loc@plt>
   13d80:	ldr	r2, [r4]
   13d84:	ldr	lr, [r0]
   13d88:	b	13d90 <argp_parse@@Base+0x1dbc>
   13d8c:	str	r2, [r4]
   13d90:	ldrb	r1, [r2]
   13d94:	mov	r3, r2
   13d98:	add	r2, r2, #1
   13d9c:	lsl	r0, r1, #1
   13da0:	ldrh	ip, [lr, r0]
   13da4:	tst	ip, #8192	; 0x2000
   13da8:	bne	13d8c <argp_parse@@Base+0x1db8>
   13dac:	subs	r0, r1, #45	; 0x2d
   13db0:	movne	r0, #1
   13db4:	cmp	r1, #0
   13db8:	popeq	{r4, pc}
   13dbc:	tst	ip, #8
   13dc0:	popne	{r4, pc}
   13dc4:	add	r3, r3, #1
   13dc8:	str	r3, [r4]
   13dcc:	ldrb	r2, [r3]
   13dd0:	cmp	r2, #0
   13dd4:	lsl	r2, r2, #1
   13dd8:	popeq	{r4, pc}
   13ddc:	ldrh	r2, [lr, r2]
   13de0:	tst	r2, #8
   13de4:	beq	13dc4 <argp_parse@@Base+0x1df0>
   13de8:	pop	{r4, pc}
   13dec:	push	{r4, r5, r6, lr}
   13df0:	mov	r5, r0
   13df4:	ldr	r0, [r0, #12]
   13df8:	cmp	r0, #0
   13dfc:	beq	13e10 <argp_parse@@Base+0x1e3c>
   13e00:	ldr	r4, [r0, #24]
   13e04:	bl	12e6c <argp_parse@@Base+0xe98>
   13e08:	subs	r0, r4, #0
   13e0c:	bne	13e00 <argp_parse@@Base+0x1e2c>
   13e10:	ldr	r3, [r5, #4]
   13e14:	cmp	r3, #0
   13e18:	beq	13e2c <argp_parse@@Base+0x1e58>
   13e1c:	ldr	r0, [r5]
   13e20:	bl	12e6c <argp_parse@@Base+0xe98>
   13e24:	ldr	r0, [r5, #8]
   13e28:	bl	12e6c <argp_parse@@Base+0xe98>
   13e2c:	mov	r0, r5
   13e30:	pop	{r4, r5, r6, lr}
   13e34:	b	12e6c <argp_parse@@Base+0xe98>
   13e38:	push	{r4, r5, r6, r7, r8, lr}
   13e3c:	mov	r5, r1
   13e40:	ldr	r3, [r0, #28]
   13e44:	ldr	r1, [r0, #24]
   13e48:	ldr	r2, [r0, #16]
   13e4c:	sub	r3, r3, r1
   13e50:	cmp	r3, r2
   13e54:	mov	r4, r0
   13e58:	bhi	13ec4 <argp_parse@@Base+0x1ef0>
   13e5c:	ldr	r1, [r4, #20]
   13e60:	mov	r6, #32
   13e64:	cmp	r1, #0
   13e68:	subge	r5, r5, r1
   13e6c:	mov	r7, #1
   13e70:	cmp	r5, #0
   13e74:	sub	r5, r5, #1
   13e78:	ble	13ea4 <argp_parse@@Base+0x1ed0>
   13e7c:	ldr	r3, [r4, #28]
   13e80:	ldr	r2, [r4, #32]
   13e84:	cmp	r3, r2
   13e88:	bcs	13ea8 <argp_parse@@Base+0x1ed4>
   13e8c:	add	r2, r3, #1
   13e90:	cmp	r5, #0
   13e94:	str	r2, [r4, #28]
   13e98:	sub	r5, r5, #1
   13e9c:	strb	r6, [r3]
   13ea0:	bgt	13e7c <argp_parse@@Base+0x1ea8>
   13ea4:	pop	{r4, r5, r6, r7, r8, pc}
   13ea8:	mov	r1, r7
   13eac:	mov	r0, r4
   13eb0:	bl	182c4 <argp_error@@Base+0x1490>
   13eb4:	cmp	r0, #0
   13eb8:	beq	13e70 <argp_parse@@Base+0x1e9c>
   13ebc:	ldr	r3, [r4, #28]
   13ec0:	b	13e8c <argp_parse@@Base+0x1eb8>
   13ec4:	bl	17c34 <argp_error@@Base+0xe00>
   13ec8:	b	13e5c <argp_parse@@Base+0x1e88>
   13ecc:	push	{r4, r5, r6, lr}
   13ed0:	subs	r4, r2, #0
   13ed4:	popeq	{r4, r5, r6, pc}
   13ed8:	ldr	ip, [r4, #20]
   13edc:	cmp	ip, #0
   13ee0:	popeq	{r4, r5, r6, pc}
   13ee4:	mov	r6, r1
   13ee8:	mov	r5, r0
   13eec:	mov	r1, r3
   13ef0:	mov	r0, r4
   13ef4:	bl	12d10 <argp_parse@@Base+0xd3c>
   13ef8:	ldr	r3, [r4, #20]
   13efc:	mov	r1, r5
   13f00:	mov	r2, r0
   13f04:	mov	r0, r6
   13f08:	pop	{r4, r5, r6, lr}
   13f0c:	bx	r3
   13f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f14:	mov	r5, r2
   13f18:	sub	sp, sp, #12
   13f1c:	mov	r2, r1
   13f20:	ldr	r3, [r5, #16]
   13f24:	ldr	r1, [pc, #488]	; 14114 <argp_parse@@Base+0x2140>
   13f28:	mov	r8, r0
   13f2c:	bl	13ecc <argp_parse@@Base+0x1ef8>
   13f30:	subs	r6, r0, #0
   13f34:	beq	14040 <argp_parse@@Base+0x206c>
   13f38:	ldrb	r3, [r6]
   13f3c:	cmp	r3, #0
   13f40:	beq	14034 <argp_parse@@Base+0x2060>
   13f44:	ldr	r3, [r5, #8]
   13f48:	ldr	r3, [r3]
   13f4c:	cmp	r3, #0
   13f50:	beq	13f78 <argp_parse@@Base+0x1fa4>
   13f54:	ldr	r4, [r5, #4]
   13f58:	ldr	r3, [r4, #28]
   13f5c:	ldr	r2, [r4, #32]
   13f60:	cmp	r3, r2
   13f64:	bcs	140f8 <argp_parse@@Base+0x2124>
   13f68:	add	r1, r3, #1
   13f6c:	mov	r2, #10
   13f70:	str	r1, [r4, #28]
   13f74:	strb	r2, [r3]
   13f78:	ldr	sl, [pc, #408]	; 14118 <argp_parse@@Base+0x2144>
   13f7c:	ldr	r0, [r5, #4]
   13f80:	ldr	r1, [sl, #24]
   13f84:	bl	13e38 <argp_parse@@Base+0x1e64>
   13f88:	ldr	r4, [r5, #4]
   13f8c:	ldr	r9, [sl, #24]
   13f90:	ldr	r7, [r4, #28]
   13f94:	ldr	r3, [r4, #24]
   13f98:	ldr	r2, [r4, #16]
   13f9c:	sub	r3, r7, r3
   13fa0:	cmp	r3, r2
   13fa4:	strls	r9, [r4, #4]
   13fa8:	movls	fp, r4
   13fac:	bhi	1407c <argp_parse@@Base+0x20a8>
   13fb0:	str	r9, [fp, #12]
   13fb4:	mov	r0, r6
   13fb8:	bl	110fc <strlen@plt>
   13fbc:	subs	r9, r0, #0
   13fc0:	beq	13ff8 <argp_parse@@Base+0x2024>
   13fc4:	ldr	r2, [r4, #32]
   13fc8:	add	r3, r7, r9
   13fcc:	cmp	r2, r3
   13fd0:	bcc	14060 <argp_parse@@Base+0x208c>
   13fd4:	mov	r2, r9
   13fd8:	mov	r0, r7
   13fdc:	mov	r1, r6
   13fe0:	bl	10fd0 <memcpy@plt>
   13fe4:	ldr	r3, [r4, #28]
   13fe8:	add	r9, r3, r9
   13fec:	str	r9, [r4, #28]
   13ff0:	ldr	r4, [r5, #4]
   13ff4:	ldr	r7, [r4, #28]
   13ff8:	ldr	r3, [r4, #24]
   13ffc:	ldr	r2, [r4, #16]
   14000:	sub	r3, r7, r3
   14004:	cmp	r3, r2
   14008:	movls	r9, r4
   1400c:	bhi	140c8 <argp_parse@@Base+0x20f4>
   14010:	ldr	r2, [r9, #32]
   14014:	mov	r3, #0
   14018:	cmp	r2, r7
   1401c:	str	r3, [r4, #4]
   14020:	bls	140dc <argp_parse@@Base+0x2108>
   14024:	add	r2, r7, #1
   14028:	mov	r3, #10
   1402c:	str	r2, [r9, #28]
   14030:	strb	r3, [r7]
   14034:	ldr	r3, [r5, #8]
   14038:	mov	r2, #1
   1403c:	str	r2, [r3, #4]
   14040:	cmp	r8, r6
   14044:	beq	14058 <argp_parse@@Base+0x2084>
   14048:	mov	r0, r6
   1404c:	add	sp, sp, #12
   14050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14054:	b	12e6c <argp_parse@@Base+0xe98>
   14058:	add	sp, sp, #12
   1405c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14060:	mov	r1, r9
   14064:	mov	r0, r4
   14068:	bl	182c4 <argp_error@@Base+0x1490>
   1406c:	cmp	r0, #0
   14070:	beq	13ff0 <argp_parse@@Base+0x201c>
   14074:	ldr	r7, [r4, #28]
   14078:	b	13fd4 <argp_parse@@Base+0x2000>
   1407c:	mov	r0, r4
   14080:	str	r9, [sp, #4]
   14084:	bl	17c34 <argp_error@@Base+0xe00>
   14088:	ldr	fp, [r5, #4]
   1408c:	ldr	r3, [sp, #4]
   14090:	ldr	r9, [sl, #24]
   14094:	ldr	r7, [fp, #28]
   14098:	ldr	r2, [fp, #24]
   1409c:	ldr	r1, [fp, #16]
   140a0:	sub	r2, r7, r2
   140a4:	cmp	r2, r1
   140a8:	str	r3, [r4, #4]
   140ac:	movls	r4, fp
   140b0:	bls	13fb0 <argp_parse@@Base+0x1fdc>
   140b4:	mov	r0, fp
   140b8:	bl	17c34 <argp_error@@Base+0xe00>
   140bc:	ldr	r4, [r5, #4]
   140c0:	ldr	r7, [r4, #28]
   140c4:	b	13fb0 <argp_parse@@Base+0x1fdc>
   140c8:	mov	r0, r4
   140cc:	bl	17c34 <argp_error@@Base+0xe00>
   140d0:	ldr	r9, [r5, #4]
   140d4:	ldr	r7, [r9, #28]
   140d8:	b	14010 <argp_parse@@Base+0x203c>
   140dc:	mov	r1, #1
   140e0:	mov	r0, r9
   140e4:	bl	182c4 <argp_error@@Base+0x1490>
   140e8:	cmp	r0, #0
   140ec:	beq	14034 <argp_parse@@Base+0x2060>
   140f0:	ldr	r7, [r9, #28]
   140f4:	b	14024 <argp_parse@@Base+0x2050>
   140f8:	mov	r1, #1
   140fc:	mov	r0, r4
   14100:	bl	182c4 <argp_error@@Base+0x1490>
   14104:	cmp	r0, #0
   14108:	beq	13f78 <argp_parse@@Base+0x1fa4>
   1410c:	ldr	r3, [r4, #28]
   14110:	b	13f68 <argp_parse@@Base+0x1f94>
   14114:	andeq	r0, r0, #3
   14118:	andeq	sl, r2, r8, lsl r2
   1411c:	ldr	r3, [r1, #12]
   14120:	push	{r4, r5, r6, r7, r8, lr}
   14124:	cmp	r3, #0
   14128:	mov	r4, r1
   1412c:	mov	r6, r0
   14130:	beq	14218 <argp_parse@@Base+0x2244>
   14134:	ldr	r3, [r1, #8]
   14138:	ldr	r2, [r1]
   1413c:	ldr	r7, [r3]
   14140:	ldr	r3, [r3, #4]
   14144:	ldr	r5, [r2, #16]
   14148:	cmp	r3, #0
   1414c:	cmpne	r7, #0
   14150:	beq	14188 <argp_parse@@Base+0x21b4>
   14154:	ldr	r2, [r2, #12]
   14158:	ldr	r3, [r7, #12]
   1415c:	cmp	r2, r3
   14160:	beq	14188 <argp_parse@@Base+0x21b4>
   14164:	ldr	r8, [r1, #4]
   14168:	ldr	r3, [r8, #28]
   1416c:	ldr	r2, [r8, #32]
   14170:	cmp	r3, r2
   14174:	bcs	142a8 <argp_parse@@Base+0x22d4>
   14178:	add	r1, r3, #1
   1417c:	mov	r2, #10
   14180:	str	r1, [r8, #28]
   14184:	strb	r2, [r3]
   14188:	cmp	r5, #0
   1418c:	beq	14274 <argp_parse@@Base+0x22a0>
   14190:	ldr	r0, [r5]
   14194:	cmp	r0, #0
   14198:	beq	14274 <argp_parse@@Base+0x22a0>
   1419c:	ldrb	r3, [r0]
   141a0:	cmp	r3, #0
   141a4:	beq	14274 <argp_parse@@Base+0x22a0>
   141a8:	cmp	r7, #0
   141ac:	beq	141dc <argp_parse@@Base+0x2208>
   141b0:	ldr	r3, [r7, #16]
   141b4:	cmp	r5, r3
   141b8:	beq	14274 <argp_parse@@Base+0x22a0>
   141bc:	cmp	r3, #0
   141c0:	beq	141dc <argp_parse@@Base+0x2208>
   141c4:	ldr	r3, [r3, #12]
   141c8:	cmp	r3, #0
   141cc:	cmpne	r5, r3
   141d0:	bne	141c4 <argp_parse@@Base+0x21f0>
   141d4:	cmp	r5, r3
   141d8:	beq	14274 <argp_parse@@Base+0x22a0>
   141dc:	ldr	r3, [r4, #4]
   141e0:	ldr	r1, [r5, #16]
   141e4:	mov	r2, r4
   141e8:	ldr	r7, [r3, #12]
   141ec:	bl	13f10 <argp_parse@@Base+0x1f3c>
   141f0:	ldr	r5, [r4, #4]
   141f4:	mov	r0, r5
   141f8:	ldr	r3, [r5, #28]
   141fc:	ldr	r1, [r5, #24]
   14200:	ldr	r2, [r5, #16]
   14204:	sub	r3, r3, r1
   14208:	cmp	r3, r2
   1420c:	bhi	1429c <argp_parse@@Base+0x22c8>
   14210:	str	r7, [r5, #12]
   14214:	b	14278 <argp_parse@@Base+0x22a4>
   14218:	ldr	r5, [r1, #4]
   1421c:	ldr	r3, [r5, #28]
   14220:	ldr	r1, [r5, #32]
   14224:	add	r2, r3, #2
   14228:	cmp	r1, r2
   1422c:	bcc	14258 <argp_parse@@Base+0x2284>
   14230:	ldr	r2, [pc, #140]	; 142c4 <argp_parse@@Base+0x22f0>
   14234:	mov	r1, r6
   14238:	ldrh	r2, [r2]
   1423c:	strh	r2, [r3]
   14240:	ldr	r3, [r5, #28]
   14244:	ldr	r0, [r4, #4]
   14248:	add	r3, r3, #2
   1424c:	str	r3, [r5, #28]
   14250:	pop	{r4, r5, r6, r7, r8, lr}
   14254:	b	13e38 <argp_parse@@Base+0x1e64>
   14258:	mov	r1, #2
   1425c:	mov	r0, r5
   14260:	bl	182c4 <argp_error@@Base+0x1490>
   14264:	cmp	r0, #0
   14268:	beq	1428c <argp_parse@@Base+0x22b8>
   1426c:	ldr	r3, [r5, #28]
   14270:	b	14230 <argp_parse@@Base+0x225c>
   14274:	ldr	r0, [r4, #4]
   14278:	mov	r3, #0
   1427c:	str	r3, [r4, #12]
   14280:	mov	r1, r6
   14284:	pop	{r4, r5, r6, r7, r8, lr}
   14288:	b	13e38 <argp_parse@@Base+0x1e64>
   1428c:	ldr	r0, [r4, #4]
   14290:	mov	r1, r6
   14294:	pop	{r4, r5, r6, r7, r8, lr}
   14298:	b	13e38 <argp_parse@@Base+0x1e64>
   1429c:	bl	17c34 <argp_error@@Base+0xe00>
   142a0:	ldr	r0, [r4, #4]
   142a4:	b	14210 <argp_parse@@Base+0x223c>
   142a8:	mov	r1, #1
   142ac:	mov	r0, r8
   142b0:	bl	182c4 <argp_error@@Base+0x1490>
   142b4:	cmp	r0, #0
   142b8:	beq	14188 <argp_parse@@Base+0x21b4>
   142bc:	ldr	r3, [r8, #28]
   142c0:	b	14178 <argp_parse@@Base+0x21a4>
   142c4:	andeq	r9, r1, r8, asr #1
   142c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142cc:	mov	r7, r3
   142d0:	ldr	sl, [r0, #12]
   142d4:	sub	sp, sp, #36	; 0x24
   142d8:	ldr	r3, [r0, #16]
   142dc:	cmp	sl, #0
   142e0:	mov	fp, r0
   142e4:	mov	r6, r2
   142e8:	str	r3, [sp, #16]
   142ec:	mov	r9, r1
   142f0:	ldr	r8, [sp, #72]	; 0x48
   142f4:	ldr	r5, [sp, #76]	; 0x4c
   142f8:	beq	146c8 <argp_parse@@Base+0x26f4>
   142fc:	mov	r1, #11
   14300:	mov	r0, sl
   14304:	bl	11108 <strchr@plt>
   14308:	cmp	r6, #0
   1430c:	bne	145e4 <argp_parse@@Base+0x2610>
   14310:	cmp	r0, #0
   14314:	ldr	r3, [fp, #20]
   14318:	beq	14820 <argp_parse@@Base+0x284c>
   1431c:	cmp	r3, #0
   14320:	sub	r4, r0, sl
   14324:	beq	147b8 <argp_parse@@Base+0x27e4>
   14328:	cmp	r4, #0
   1432c:	beq	14758 <argp_parse@@Base+0x2784>
   14330:	mov	r0, sl
   14334:	mov	r1, r4
   14338:	bl	10fc4 <strndup@plt>
   1433c:	mov	r3, #1
   14340:	str	r3, [sp, #24]
   14344:	mov	sl, r0
   14348:	adds	r3, r0, #0
   1434c:	movne	r3, #1
   14350:	str	r3, [sp, #20]
   14354:	mov	r1, r9
   14358:	mov	r0, fp
   1435c:	bl	12d10 <argp_parse@@Base+0xd3c>
   14360:	ldr	r3, [fp, #20]
   14364:	str	r0, [sp, #12]
   14368:	ldr	r0, [pc, #1272]	; 14868 <argp_parse@@Base+0x2894>
   1436c:	ldr	r2, [sp, #12]
   14370:	mov	r1, sl
   14374:	blx	r3
   14378:	subs	r3, r0, #0
   1437c:	beq	14708 <argp_parse@@Base+0x2734>
   14380:	cmp	r7, #0
   14384:	beq	143a8 <argp_parse@@Base+0x23d4>
   14388:	ldr	r2, [r5, #28]
   1438c:	ldr	r1, [r5, #32]
   14390:	cmp	r2, r1
   14394:	bcs	14710 <argp_parse@@Base+0x273c>
   14398:	add	r0, r2, #1
   1439c:	mov	r1, #10
   143a0:	str	r0, [r5, #28]
   143a4:	strb	r1, [r2]
   143a8:	ldr	r2, [sp, #24]
   143ac:	cmp	r3, sl
   143b0:	movne	r2, #0
   143b4:	andeq	r2, r2, #1
   143b8:	cmp	r2, #0
   143bc:	beq	14628 <argp_parse@@Base+0x2654>
   143c0:	ldr	r0, [r5, #28]
   143c4:	ldr	r1, [r5, #32]
   143c8:	add	r2, r0, r4
   143cc:	cmp	r1, r2
   143d0:	bcs	14688 <argp_parse@@Base+0x26b4>
   143d4:	mov	r1, r4
   143d8:	mov	r0, r5
   143dc:	str	r3, [sp, #24]
   143e0:	bl	182c4 <argp_error@@Base+0x1490>
   143e4:	ldr	r3, [sp, #24]
   143e8:	cmp	r0, #0
   143ec:	bne	14684 <argp_parse@@Base+0x26b0>
   143f0:	ldr	r4, [r5, #28]
   143f4:	ldr	r1, [r5, #24]
   143f8:	ldr	r2, [r5, #16]
   143fc:	sub	r4, r4, r1
   14400:	cmp	r4, r2
   14404:	bhi	146ac <argp_parse@@Base+0x26d8>
   14408:	ldr	r2, [r5, #20]
   1440c:	ldr	r1, [r5, #4]
   14410:	bic	r2, r2, r2, asr #31
   14414:	cmp	r1, r2
   14418:	bcs	1443c <argp_parse@@Base+0x2468>
   1441c:	ldr	r2, [r5, #28]
   14420:	ldr	r1, [r5, #32]
   14424:	cmp	r2, r1
   14428:	bcs	14734 <argp_parse@@Base+0x2760>
   1442c:	add	r0, r2, #1
   14430:	mov	r1, #10
   14434:	str	r0, [r5, #28]
   14438:	strb	r1, [r2]
   1443c:	cmp	r3, sl
   14440:	moveq	r4, #1
   14444:	beq	14454 <argp_parse@@Base+0x2480>
   14448:	mov	r0, r3
   1444c:	bl	12e6c <argp_parse@@Base+0xe98>
   14450:	mov	r4, #1
   14454:	ldr	r3, [sp, #20]
   14458:	cmp	r3, #0
   1445c:	beq	14474 <argp_parse@@Base+0x24a0>
   14460:	ldr	r3, [fp, #20]
   14464:	cmp	r3, #0
   14468:	beq	14558 <argp_parse@@Base+0x2584>
   1446c:	mov	r0, sl
   14470:	bl	12e6c <argp_parse@@Base+0xe98>
   14474:	cmp	r6, #0
   14478:	beq	14558 <argp_parse@@Base+0x2584>
   1447c:	ldr	r3, [fp, #20]
   14480:	cmp	r3, #0
   14484:	beq	14558 <argp_parse@@Base+0x2584>
   14488:	ldr	r2, [sp, #12]
   1448c:	mov	r1, #0
   14490:	ldr	r0, [pc, #980]	; 1486c <argp_parse@@Base+0x2898>
   14494:	blx	r3
   14498:	subs	sl, r0, #0
   1449c:	beq	14558 <argp_parse@@Base+0x2584>
   144a0:	orrs	r3, r7, r4
   144a4:	beq	144c8 <argp_parse@@Base+0x24f4>
   144a8:	ldr	r3, [r5, #28]
   144ac:	ldr	r2, [r5, #32]
   144b0:	cmp	r3, r2
   144b4:	bcs	147f0 <argp_parse@@Base+0x281c>
   144b8:	add	r1, r3, #1
   144bc:	mov	r2, #10
   144c0:	str	r1, [r5, #28]
   144c4:	strb	r2, [r3]
   144c8:	mov	r0, sl
   144cc:	bl	110fc <strlen@plt>
   144d0:	subs	r4, r0, #0
   144d4:	beq	14500 <argp_parse@@Base+0x252c>
   144d8:	ldr	r0, [r5, #28]
   144dc:	ldr	r2, [r5, #32]
   144e0:	add	r3, r0, r4
   144e4:	cmp	r2, r3
   144e8:	bcs	14768 <argp_parse@@Base+0x2794>
   144ec:	mov	r1, r4
   144f0:	mov	r0, r5
   144f4:	bl	182c4 <argp_error@@Base+0x1490>
   144f8:	cmp	r0, #0
   144fc:	bne	14764 <argp_parse@@Base+0x2790>
   14500:	mov	r0, sl
   14504:	bl	12e6c <argp_parse@@Base+0xe98>
   14508:	ldr	r3, [r5, #28]
   1450c:	ldr	r1, [r5, #24]
   14510:	ldr	r2, [r5, #16]
   14514:	sub	r3, r3, r1
   14518:	cmp	r3, r2
   1451c:	bhi	14784 <argp_parse@@Base+0x27b0>
   14520:	ldr	r3, [r5, #20]
   14524:	ldr	r2, [r5, #4]
   14528:	bic	r3, r3, r3, asr #31
   1452c:	cmp	r2, r3
   14530:	bcs	146c0 <argp_parse@@Base+0x26ec>
   14534:	ldr	r3, [r5, #28]
   14538:	ldr	r2, [r5, #32]
   1453c:	cmp	r3, r2
   14540:	bcs	147d4 <argp_parse@@Base+0x2800>
   14544:	mov	r4, #1
   14548:	add	r2, r3, r4
   1454c:	str	r2, [r5, #28]
   14550:	mov	r2, #10
   14554:	strb	r2, [r3]
   14558:	ldr	fp, [sp, #16]
   1455c:	cmp	fp, #0
   14560:	beq	145d8 <argp_parse@@Base+0x2604>
   14564:	ldr	r3, [fp]
   14568:	cmp	r3, #0
   1456c:	beq	145d8 <argp_parse@@Base+0x2604>
   14570:	eor	r2, r4, #1
   14574:	and	r2, r2, #1
   14578:	clz	sl, r8
   1457c:	lsr	sl, sl, #5
   14580:	orrs	r2, sl, r2
   14584:	bne	145a0 <argp_parse@@Base+0x25cc>
   14588:	b	1480c <argp_parse@@Base+0x2838>
   1458c:	cmp	r4, #0
   14590:	movne	r2, sl
   14594:	orreq	r2, sl, #1
   14598:	cmp	r2, #0
   1459c:	beq	145d8 <argp_parse@@Base+0x2604>
   145a0:	orrs	r2, r7, r4
   145a4:	mov	r0, r3
   145a8:	str	r5, [sp, #4]
   145ac:	movne	r3, #1
   145b0:	moveq	r3, #0
   145b4:	str	r8, [sp]
   145b8:	mov	r2, r6
   145bc:	mov	r1, r9
   145c0:	bl	142c8 <argp_parse@@Base+0x22f4>
   145c4:	ldr	r3, [fp, #16]
   145c8:	add	fp, fp, #16
   145cc:	cmp	r3, #0
   145d0:	orr	r4, r4, r0
   145d4:	bne	1458c <argp_parse@@Base+0x25b8>
   145d8:	mov	r0, r4
   145dc:	add	sp, sp, #36	; 0x24
   145e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145e4:	cmp	r0, #0
   145e8:	addne	sl, r0, #1
   145ec:	beq	147b0 <argp_parse@@Base+0x27dc>
   145f0:	ldr	r3, [fp, #20]
   145f4:	cmp	r3, #0
   145f8:	beq	14790 <argp_parse@@Base+0x27bc>
   145fc:	mov	r3, #0
   14600:	mov	r1, r9
   14604:	mov	r0, fp
   14608:	mov	r4, r3
   1460c:	str	r3, [sp, #20]
   14610:	bl	12d10 <argp_parse@@Base+0xd3c>
   14614:	str	r4, [sp, #24]
   14618:	ldr	r3, [fp, #20]
   1461c:	str	r0, [sp, #12]
   14620:	ldr	r0, [pc, #584]	; 14870 <argp_parse@@Base+0x289c>
   14624:	b	1436c <argp_parse@@Base+0x2398>
   14628:	mov	r0, r3
   1462c:	str	r3, [sp, #24]
   14630:	bl	110fc <strlen@plt>
   14634:	ldr	r3, [sp, #24]
   14638:	subs	r4, r0, #0
   1463c:	beq	143f0 <argp_parse@@Base+0x241c>
   14640:	ldr	r0, [r5, #28]
   14644:	ldr	r1, [r5, #32]
   14648:	add	r2, r0, r4
   1464c:	cmp	r1, r2
   14650:	bcs	14674 <argp_parse@@Base+0x26a0>
   14654:	mov	r1, r4
   14658:	mov	r0, r5
   1465c:	str	r3, [sp, #24]
   14660:	bl	182c4 <argp_error@@Base+0x1490>
   14664:	ldr	r3, [sp, #24]
   14668:	cmp	r0, #0
   1466c:	beq	143f0 <argp_parse@@Base+0x241c>
   14670:	ldr	r0, [r5, #28]
   14674:	mov	r2, r4
   14678:	mov	r1, r3
   1467c:	str	r3, [sp, #24]
   14680:	b	14694 <argp_parse@@Base+0x26c0>
   14684:	ldr	r0, [r5, #28]
   14688:	mov	r2, r4
   1468c:	mov	r1, sl
   14690:	str	r3, [sp, #24]
   14694:	bl	10fd0 <memcpy@plt>
   14698:	ldr	r2, [r5, #28]
   1469c:	ldr	r3, [sp, #24]
   146a0:	add	r4, r2, r4
   146a4:	str	r4, [r5, #28]
   146a8:	b	143f4 <argp_parse@@Base+0x2420>
   146ac:	mov	r0, r5
   146b0:	str	r3, [sp, #24]
   146b4:	bl	17c34 <argp_error@@Base+0xe00>
   146b8:	ldr	r3, [sp, #24]
   146bc:	b	14408 <argp_parse@@Base+0x2434>
   146c0:	mov	r4, #1
   146c4:	b	14558 <argp_parse@@Base+0x2584>
   146c8:	ldr	r4, [r0, #20]
   146cc:	cmp	r4, #0
   146d0:	beq	14818 <argp_parse@@Base+0x2844>
   146d4:	bl	12d10 <argp_parse@@Base+0xd3c>
   146d8:	cmp	r6, #0
   146dc:	ldr	r3, [fp, #20]
   146e0:	strne	sl, [sp, #20]
   146e4:	strne	sl, [sp, #24]
   146e8:	movne	r4, sl
   146ec:	streq	r6, [sp, #20]
   146f0:	streq	r6, [sp, #24]
   146f4:	moveq	r4, r6
   146f8:	str	r0, [sp, #12]
   146fc:	ldrne	r0, [pc, #364]	; 14870 <argp_parse@@Base+0x289c>
   14700:	ldreq	r0, [pc, #352]	; 14868 <argp_parse@@Base+0x2894>
   14704:	b	1436c <argp_parse@@Base+0x2398>
   14708:	mov	r4, r3
   1470c:	b	14454 <argp_parse@@Base+0x2480>
   14710:	mov	r1, #1
   14714:	mov	r0, r5
   14718:	str	r3, [sp, #28]
   1471c:	bl	182c4 <argp_error@@Base+0x1490>
   14720:	ldr	r3, [sp, #28]
   14724:	cmp	r0, #0
   14728:	beq	143a8 <argp_parse@@Base+0x23d4>
   1472c:	ldr	r2, [r5, #28]
   14730:	b	14398 <argp_parse@@Base+0x23c4>
   14734:	mov	r1, #1
   14738:	mov	r0, r5
   1473c:	str	r3, [sp, #24]
   14740:	bl	182c4 <argp_error@@Base+0x1490>
   14744:	ldr	r3, [sp, #24]
   14748:	cmp	r0, #0
   1474c:	beq	1443c <argp_parse@@Base+0x2468>
   14750:	ldr	r2, [r5, #28]
   14754:	b	1442c <argp_parse@@Base+0x2458>
   14758:	str	r4, [sp, #20]
   1475c:	str	r4, [sp, #24]
   14760:	b	14354 <argp_parse@@Base+0x2380>
   14764:	ldr	r0, [r5, #28]
   14768:	mov	r2, r4
   1476c:	mov	r1, sl
   14770:	bl	10fd0 <memcpy@plt>
   14774:	ldr	r3, [r5, #28]
   14778:	add	r4, r3, r4
   1477c:	str	r4, [r5, #28]
   14780:	b	14500 <argp_parse@@Base+0x252c>
   14784:	mov	r0, r5
   14788:	bl	17c34 <argp_error@@Base+0xe00>
   1478c:	b	14520 <argp_parse@@Base+0x254c>
   14790:	cmp	sl, #0
   14794:	beq	14814 <argp_parse@@Base+0x2840>
   14798:	str	r3, [sp, #20]
   1479c:	str	r3, [sp, #24]
   147a0:	mov	r4, r3
   147a4:	str	r3, [sp, #12]
   147a8:	mov	r3, sl
   147ac:	b	14380 <argp_parse@@Base+0x23ac>
   147b0:	mov	sl, r0
   147b4:	b	145f0 <argp_parse@@Base+0x261c>
   147b8:	adds	r3, r4, #0
   147bc:	movne	r3, #1
   147c0:	str	r3, [sp, #24]
   147c4:	str	r3, [sp, #20]
   147c8:	str	r6, [sp, #12]
   147cc:	mov	r3, sl
   147d0:	b	14380 <argp_parse@@Base+0x23ac>
   147d4:	mov	r1, #1
   147d8:	mov	r0, r5
   147dc:	bl	182c4 <argp_error@@Base+0x1490>
   147e0:	cmp	r0, #0
   147e4:	beq	146c0 <argp_parse@@Base+0x26ec>
   147e8:	ldr	r3, [r5, #28]
   147ec:	b	14544 <argp_parse@@Base+0x2570>
   147f0:	mov	r1, #1
   147f4:	mov	r0, r5
   147f8:	bl	182c4 <argp_error@@Base+0x1490>
   147fc:	cmp	r0, #0
   14800:	beq	144c8 <argp_parse@@Base+0x24f4>
   14804:	ldr	r3, [r5, #28]
   14808:	b	144b8 <argp_parse@@Base+0x24e4>
   1480c:	mov	r4, #1
   14810:	b	145d8 <argp_parse@@Base+0x2604>
   14814:	mov	r4, sl
   14818:	str	r4, [sp, #12]
   1481c:	b	14474 <argp_parse@@Base+0x24a0>
   14820:	cmp	r3, #0
   14824:	beq	14850 <argp_parse@@Base+0x287c>
   14828:	mov	r1, r9
   1482c:	mov	r0, fp
   14830:	bl	12d10 <argp_parse@@Base+0xd3c>
   14834:	mov	r4, r6
   14838:	ldr	r3, [fp, #20]
   1483c:	str	r6, [sp, #20]
   14840:	str	r6, [sp, #24]
   14844:	str	r0, [sp, #12]
   14848:	ldr	r0, [pc, #24]	; 14868 <argp_parse@@Base+0x2894>
   1484c:	b	1436c <argp_parse@@Base+0x2398>
   14850:	mov	r3, sl
   14854:	str	r6, [sp, #20]
   14858:	str	r6, [sp, #24]
   1485c:	mov	r4, r6
   14860:	str	r6, [sp, #12]
   14864:	b	14380 <argp_parse@@Base+0x23ac>
   14868:	andeq	r0, r0, #1
   1486c:	andeq	r0, r0, #4
   14870:	andeq	r0, r0, #2
   14874:	ldr	r3, [r0, #12]
   14878:	ldr	r2, [r1, #12]
   1487c:	push	{r4, r5, r6, lr}
   14880:	cmp	r3, r2
   14884:	beq	148d4 <argp_parse@@Base+0x2900>
   14888:	mov	r5, r1
   1488c:	mov	r4, r0
   14890:	mov	r1, r2
   14894:	mov	r0, r3
   14898:	bl	14874 <argp_parse@@Base+0x28a0>
   1489c:	cmp	r0, #0
   148a0:	popne	{r4, r5, r6, pc}
   148a4:	ldr	r3, [r5, #8]
   148a8:	ldr	r0, [r4, #8]
   148ac:	mvn	r2, r3
   148b0:	lsr	r2, r2, #31
   148b4:	cmp	r2, r0, lsr #31
   148b8:	subne	r0, r0, r3
   148bc:	subeq	r0, r3, r0
   148c0:	cmp	r0, #0
   148c4:	ldreq	r3, [r5, #4]
   148c8:	ldreq	r0, [r4, #4]
   148cc:	subeq	r0, r3, r0
   148d0:	pop	{r4, r5, r6, pc}
   148d4:	ldr	r3, [r1, #8]
   148d8:	ldr	r2, [r0, #8]
   148dc:	mvn	ip, r3
   148e0:	ldr	lr, [r1, #4]
   148e4:	lsr	ip, ip, #31
   148e8:	cmp	ip, r2, lsr #31
   148ec:	ldr	r1, [r0, #4]
   148f0:	subne	r0, r2, r3
   148f4:	subeq	r0, r3, r2
   148f8:	cmp	r0, #0
   148fc:	subeq	r0, lr, r1
   14900:	pop	{r4, r5, r6, pc}
   14904:	push	{r4, r5, r6, r7, r8, r9, lr}
   14908:	sub	sp, sp, #12
   1490c:	ldr	lr, [r0, #16]
   14910:	cmp	lr, #0
   14914:	movne	r2, lr
   14918:	bne	14924 <argp_parse@@Base+0x2950>
   1491c:	b	14be8 <argp_parse@@Base+0x2c14>
   14920:	mov	r2, r3
   14924:	ldr	r3, [r2, #12]
   14928:	cmp	r3, #0
   1492c:	bne	14920 <argp_parse@@Base+0x294c>
   14930:	ldr	ip, [r1, #16]
   14934:	ldr	r4, [r2, #8]
   14938:	cmp	ip, #0
   1493c:	movne	r2, ip
   14940:	bne	1494c <argp_parse@@Base+0x2978>
   14944:	b	14bfc <argp_parse@@Base+0x2c28>
   14948:	mov	r2, r3
   1494c:	ldr	r3, [r2, #12]
   14950:	cmp	r3, #0
   14954:	bne	14948 <argp_parse@@Base+0x2974>
   14958:	ldr	r3, [r2, #8]
   1495c:	mvn	r2, r3
   14960:	lsr	r2, r2, #31
   14964:	cmp	r2, r4, lsr #31
   14968:	subne	r4, r4, r3
   1496c:	subeq	r4, r3, r4
   14970:	cmp	r4, #0
   14974:	bne	149dc <argp_parse@@Base+0x2a08>
   14978:	adds	r4, ip, #0
   1497c:	movne	r4, #1
   14980:	cmp	lr, #0
   14984:	rsbeq	r4, r4, #0
   14988:	rsbne	r4, r4, #1
   1498c:	cmp	r4, #0
   14990:	bne	149dc <argp_parse@@Base+0x2a08>
   14994:	cmp	lr, #0
   14998:	mov	r5, r1
   1499c:	mov	r6, r0
   149a0:	beq	149f8 <argp_parse@@Base+0x2a24>
   149a4:	ldr	r0, [lr, #20]
   149a8:	ldr	r2, [ip, #20]
   149ac:	cmp	r0, r2
   149b0:	ble	14bbc <argp_parse@@Base+0x2be8>
   149b4:	mov	r0, lr
   149b8:	ldr	r0, [r0, #12]
   149bc:	ldr	r3, [r0, #20]
   149c0:	cmp	r2, r3
   149c4:	blt	149b8 <argp_parse@@Base+0x29e4>
   149c8:	mov	r1, ip
   149cc:	bl	14874 <argp_parse@@Base+0x28a0>
   149d0:	cmp	r0, #0
   149d4:	movne	r4, r0
   149d8:	moveq	r4, #1
   149dc:	mov	r0, r4
   149e0:	add	sp, sp, #12
   149e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   149e8:	mov	r0, lr
   149ec:	bl	14874 <argp_parse@@Base+0x28a0>
   149f0:	subs	r4, r0, #0
   149f4:	bne	149dc <argp_parse@@Base+0x2a08>
   149f8:	ldr	r4, [r5, #12]
   149fc:	ldr	r3, [r6, #12]
   14a00:	mvn	r2, r4
   14a04:	lsr	r2, r2, #31
   14a08:	cmp	r2, r3, lsr #31
   14a0c:	subne	r4, r3, r4
   14a10:	subeq	r4, r4, r3
   14a14:	cmp	r4, #0
   14a18:	bne	149dc <argp_parse@@Base+0x2a08>
   14a1c:	ldr	r2, [r6, #4]
   14a20:	ldr	lr, [r6]
   14a24:	cmp	r2, #0
   14a28:	beq	14a54 <argp_parse@@Base+0x2a80>
   14a2c:	add	r3, lr, #24
   14a30:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14a34:	cmp	r1, #0
   14a38:	beq	14a48 <argp_parse@@Base+0x2a74>
   14a3c:	ldr	r0, [r3, #-12]
   14a40:	tst	r0, #2
   14a44:	beq	14c04 <argp_parse@@Base+0x2c30>
   14a48:	subs	r2, r2, #1
   14a4c:	add	r3, r3, #24
   14a50:	bne	14a30 <argp_parse@@Base+0x2a5c>
   14a54:	ldr	r2, [r5, #4]
   14a58:	mov	ip, #0
   14a5c:	cmp	r2, ip
   14a60:	str	ip, [sp]
   14a64:	ldr	r3, [r5]
   14a68:	beq	14c74 <argp_parse@@Base+0x2ca0>
   14a6c:	add	r3, r3, #24
   14a70:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14a74:	cmp	r1, #0
   14a78:	beq	14a88 <argp_parse@@Base+0x2ab4>
   14a7c:	ldr	r0, [r3, #-12]
   14a80:	tst	r0, #2
   14a84:	beq	14a98 <argp_parse@@Base+0x2ac4>
   14a88:	subs	r2, r2, #1
   14a8c:	add	r3, r3, #24
   14a90:	bne	14a70 <argp_parse@@Base+0x2a9c>
   14a94:	mov	r1, r2
   14a98:	ldr	r3, [lr, #12]
   14a9c:	str	r1, [sp, #4]
   14aa0:	ands	r3, ip, r3, lsr #3
   14aa4:	beq	14c6c <argp_parse@@Base+0x2c98>
   14aa8:	mov	r0, sp
   14aac:	bl	13d74 <argp_parse@@Base+0x1da0>
   14ab0:	ldr	r3, [r5]
   14ab4:	cmp	r0, #0
   14ab8:	bne	14c58 <argp_parse@@Base+0x2c84>
   14abc:	ldr	r3, [r3, #12]
   14ac0:	tst	r3, #8
   14ac4:	beq	14aec <argp_parse@@Base+0x2b18>
   14ac8:	ldr	r3, [sp, #4]
   14acc:	cmp	r3, #0
   14ad0:	beq	14aec <argp_parse@@Base+0x2b18>
   14ad4:	add	r0, sp, #4
   14ad8:	bl	13d74 <argp_parse@@Base+0x1da0>
   14adc:	cmp	r0, #0
   14ae0:	subne	r4, r4, #1
   14ae4:	cmp	r4, #0
   14ae8:	bne	149dc <argp_parse@@Base+0x2a08>
   14aec:	ldr	r2, [r6, #20]
   14af0:	mov	r0, r6
   14af4:	mov	r3, #0
   14af8:	ldr	r2, [r2, #24]
   14afc:	ldr	r1, [pc, #408]	; 14c9c <argp_parse@@Base+0x2cc8>
   14b00:	bl	13c38 <argp_parse@@Base+0x1c64>
   14b04:	ldr	r2, [r5, #20]
   14b08:	mov	r3, #0
   14b0c:	ldr	r1, [pc, #392]	; 14c9c <argp_parse@@Base+0x2cc8>
   14b10:	ldr	r2, [r2, #24]
   14b14:	uxtb	r6, r0
   14b18:	mov	r0, r5
   14b1c:	bl	13c38 <argp_parse@@Base+0x1c64>
   14b20:	cmp	r6, #0
   14b24:	lslne	r4, r6, #2
   14b28:	movne	r7, r6
   14b2c:	uxtb	r5, r0
   14b30:	beq	14c3c <argp_parse@@Base+0x2c68>
   14b34:	cmp	r5, #0
   14b38:	lslne	r9, r5, #2
   14b3c:	movne	r8, r5
   14b40:	beq	14c20 <argp_parse@@Base+0x2c4c>
   14b44:	bl	110b4 <__ctype_tolower_loc@plt>
   14b48:	ldr	r3, [r0]
   14b4c:	ldr	r4, [r3, r4]
   14b50:	ldr	r3, [r3, r9]
   14b54:	subs	r4, r4, r3
   14b58:	bne	149dc <argp_parse@@Base+0x2a08>
   14b5c:	subs	r4, r8, r7
   14b60:	bne	149dc <argp_parse@@Base+0x2a08>
   14b64:	adds	r4, r5, #0
   14b68:	movne	r4, #1
   14b6c:	cmp	r6, #0
   14b70:	rsbeq	r4, r4, #0
   14b74:	rsbne	r4, r4, #1
   14b78:	cmp	r4, #0
   14b7c:	bne	149dc <argp_parse@@Base+0x2a08>
   14b80:	cmp	r6, #0
   14b84:	bne	149dc <argp_parse@@Base+0x2a08>
   14b88:	ldm	sp, {r0, r1}
   14b8c:	adds	r4, r1, #0
   14b90:	movne	r4, #1
   14b94:	cmp	r0, #0
   14b98:	rsbeq	r4, r4, #0
   14b9c:	rsbne	r4, r4, #1
   14ba0:	cmp	r4, #0
   14ba4:	bne	149dc <argp_parse@@Base+0x2a08>
   14ba8:	cmp	r0, #0
   14bac:	beq	149dc <argp_parse@@Base+0x2a08>
   14bb0:	bl	11024 <strcasecmp@plt>
   14bb4:	mov	r4, r0
   14bb8:	b	149dc <argp_parse@@Base+0x2a08>
   14bbc:	mov	r1, ip
   14bc0:	bge	149e8 <argp_parse@@Base+0x2a14>
   14bc4:	ldr	r1, [r1, #12]
   14bc8:	ldr	r3, [r1, #20]
   14bcc:	cmp	r0, r3
   14bd0:	blt	14bc4 <argp_parse@@Base+0x2bf0>
   14bd4:	mov	r0, lr
   14bd8:	bl	14874 <argp_parse@@Base+0x28a0>
   14bdc:	subs	r4, r0, #0
   14be0:	mvneq	r4, #0
   14be4:	b	149dc <argp_parse@@Base+0x2a08>
   14be8:	ldr	ip, [r1, #16]
   14bec:	ldr	r4, [r0, #12]
   14bf0:	cmp	ip, #0
   14bf4:	movne	r2, ip
   14bf8:	bne	1494c <argp_parse@@Base+0x2978>
   14bfc:	ldr	r3, [r1, #12]
   14c00:	b	1495c <argp_parse@@Base+0x2988>
   14c04:	ldr	r2, [r5, #4]
   14c08:	str	r1, [sp]
   14c0c:	cmp	r2, #0
   14c10:	ldr	r3, [r5]
   14c14:	beq	14c7c <argp_parse@@Base+0x2ca8>
   14c18:	mov	ip, #1
   14c1c:	b	14a6c <argp_parse@@Base+0x2a98>
   14c20:	ldr	r3, [sp, #4]
   14c24:	cmp	r3, #0
   14c28:	moveq	r9, r5
   14c2c:	ldrbne	r8, [r3]
   14c30:	moveq	r8, r5
   14c34:	lslne	r9, r8, #2
   14c38:	b	14b44 <argp_parse@@Base+0x2b70>
   14c3c:	ldr	r3, [sp]
   14c40:	cmp	r3, #0
   14c44:	moveq	r4, r6
   14c48:	ldrbne	r7, [r3]
   14c4c:	moveq	r7, r6
   14c50:	lslne	r4, r7, #2
   14c54:	b	14b34 <argp_parse@@Base+0x2b60>
   14c58:	ldr	r3, [r3, #12]
   14c5c:	tst	r3, #8
   14c60:	bne	14c88 <argp_parse@@Base+0x2cb4>
   14c64:	mov	r4, #1
   14c68:	b	149dc <argp_parse@@Base+0x2a08>
   14c6c:	ldr	r3, [r5]
   14c70:	b	14abc <argp_parse@@Base+0x2ae8>
   14c74:	str	r2, [sp, #4]
   14c78:	b	14aec <argp_parse@@Base+0x2b18>
   14c7c:	mov	r1, r2
   14c80:	mov	ip, #1
   14c84:	b	14a98 <argp_parse@@Base+0x2ac4>
   14c88:	ldr	r3, [sp, #4]
   14c8c:	mov	r4, #1
   14c90:	cmp	r3, #0
   14c94:	bne	14ad4 <argp_parse@@Base+0x2b00>
   14c98:	b	149dc <argp_parse@@Base+0x2a08>
   14c9c:	andeq	r3, r1, r0, lsr sp
   14ca0:	ldr	r3, [r0, #28]
   14ca4:	ldr	r2, [r0, #24]
   14ca8:	push	{r4, r5, r6, lr}
   14cac:	mov	r5, r1
   14cb0:	ldr	r1, [r0, #16]
   14cb4:	sub	r2, r3, r2
   14cb8:	cmp	r2, r1
   14cbc:	mov	r4, r0
   14cc0:	movls	r2, r3
   14cc4:	bhi	14d20 <argp_parse@@Base+0x2d4c>
   14cc8:	ldr	r1, [r4, #20]
   14ccc:	ldr	r0, [r4, #8]
   14cd0:	cmp	r1, #0
   14cd4:	addge	r5, r5, r1
   14cd8:	cmp	r5, r0
   14cdc:	bcc	14d00 <argp_parse@@Base+0x2d2c>
   14ce0:	ldr	r1, [r4, #32]
   14ce4:	cmp	r1, r3
   14ce8:	bls	14d30 <argp_parse@@Base+0x2d5c>
   14cec:	add	r1, r2, #1
   14cf0:	mov	r3, #10
   14cf4:	str	r1, [r4, #28]
   14cf8:	strb	r3, [r2]
   14cfc:	pop	{r4, r5, r6, pc}
   14d00:	ldr	r2, [r4, #32]
   14d04:	cmp	r2, r3
   14d08:	bls	14d4c <argp_parse@@Base+0x2d78>
   14d0c:	add	r1, r3, #1
   14d10:	mov	r2, #32
   14d14:	str	r1, [r4, #28]
   14d18:	strb	r2, [r3]
   14d1c:	pop	{r4, r5, r6, pc}
   14d20:	bl	17c34 <argp_error@@Base+0xe00>
   14d24:	ldr	r3, [r4, #28]
   14d28:	mov	r2, r3
   14d2c:	b	14cc8 <argp_parse@@Base+0x2cf4>
   14d30:	mov	r1, #1
   14d34:	mov	r0, r4
   14d38:	bl	182c4 <argp_error@@Base+0x1490>
   14d3c:	cmp	r0, #0
   14d40:	popeq	{r4, r5, r6, pc}
   14d44:	ldr	r2, [r4, #28]
   14d48:	b	14cec <argp_parse@@Base+0x2d18>
   14d4c:	mov	r1, #1
   14d50:	mov	r0, r4
   14d54:	bl	182c4 <argp_error@@Base+0x1490>
   14d58:	cmp	r0, #0
   14d5c:	popeq	{r4, r5, r6, pc}
   14d60:	ldr	r3, [r4, #28]
   14d64:	b	14d0c <argp_parse@@Base+0x2d38>
   14d68:	push	{r4, r5, r6, lr}
   14d6c:	ldr	r5, [r0, #8]
   14d70:	ldr	r2, [r0, #12]
   14d74:	ldr	ip, [r1, #12]
   14d78:	cmp	r5, #0
   14d7c:	orr	r2, r2, ip
   14d80:	beq	14de8 <argp_parse@@Base+0x2e14>
   14d84:	tst	r2, #16
   14d88:	bne	14dc4 <argp_parse@@Base+0x2df0>
   14d8c:	tst	r2, #1
   14d90:	mov	r6, r3
   14d94:	mov	r4, r0
   14d98:	bne	14dcc <argp_parse@@Base+0x2df8>
   14d9c:	mov	r0, r5
   14da0:	bl	110fc <strlen@plt>
   14da4:	add	r1, r0, #6
   14da8:	mov	r0, r6
   14dac:	bl	14ca0 <argp_parse@@Base+0x2ccc>
   14db0:	mov	r3, r5
   14db4:	ldr	r2, [r4, #4]
   14db8:	mov	r0, r6
   14dbc:	ldr	r1, [pc, #56]	; 14dfc <argp_parse@@Base+0x2e28>
   14dc0:	bl	182e4 <argp_error@@Base+0x14b0>
   14dc4:	mov	r0, #0
   14dc8:	pop	{r4, r5, r6, pc}
   14dcc:	ldr	r2, [r0, #4]
   14dd0:	mov	r3, r5
   14dd4:	mov	r0, r6
   14dd8:	ldr	r1, [pc, #32]	; 14e00 <argp_parse@@Base+0x2e2c>
   14ddc:	bl	182e4 <argp_error@@Base+0x14b0>
   14de0:	mov	r0, #0
   14de4:	pop	{r4, r5, r6, pc}
   14de8:	ldr	r5, [r1, #8]
   14dec:	cmp	r5, #0
   14df0:	bne	14d84 <argp_parse@@Base+0x2db0>
   14df4:	mov	r0, #0
   14df8:	pop	{r4, r5, r6, pc}
   14dfc:	ldrdeq	r9, [r1], -r8
   14e00:	andeq	r9, r1, ip, asr #1
   14e04:	mov	ip, r0
   14e08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e0c:	mov	r8, r2
   14e10:	sub	sp, sp, #28
   14e14:	mov	r2, ip
   14e18:	ldr	ip, [ip, #16]
   14e1c:	mov	r9, r1
   14e20:	ldr	r1, [r0, #8]
   14e24:	str	ip, [sp, #8]
   14e28:	ldr	ip, [r8]
   14e2c:	str	r1, [sp, #16]
   14e30:	mov	r0, r1
   14e34:	mov	r4, r3
   14e38:	ldr	r1, [pc, #456]	; 15008 <argp_parse@@Base+0x3034>
   14e3c:	mov	r3, r9
   14e40:	mov	r5, ip
   14e44:	str	ip, [sp, #20]
   14e48:	ldr	r6, [sp, #64]	; 0x40
   14e4c:	bl	13ecc <argp_parse@@Base+0x1ef8>
   14e50:	subs	r3, r0, #0
   14e54:	str	r3, [sp, #12]
   14e58:	beq	14fb4 <argp_parse@@Base+0x2fe0>
   14e5c:	mov	r1, #10
   14e60:	bl	10fac <strchrnul@plt>
   14e64:	ldrb	sl, [r0]
   14e68:	mov	r7, r0
   14e6c:	cmp	sl, #0
   14e70:	bne	14f70 <argp_parse@@Base+0x2f9c>
   14e74:	ldr	r5, [sp, #12]
   14e78:	add	r1, r7, #1
   14e7c:	sub	r1, r1, r5
   14e80:	mov	r0, r6
   14e84:	bl	14ca0 <argp_parse@@Base+0x2ccc>
   14e88:	ldr	r0, [r6, #28]
   14e8c:	sub	fp, r7, r5
   14e90:	ldr	r1, [r6, #32]
   14e94:	add	r2, r0, fp
   14e98:	cmp	r1, r2
   14e9c:	bcs	14eb8 <argp_parse@@Base+0x2ee4>
   14ea0:	mov	r1, fp
   14ea4:	mov	r0, r6
   14ea8:	bl	182c4 <argp_error@@Base+0x1490>
   14eac:	cmp	r0, #0
   14eb0:	beq	14ed0 <argp_parse@@Base+0x2efc>
   14eb4:	ldr	r0, [r6, #28]
   14eb8:	mov	r2, fp
   14ebc:	mov	r1, r5
   14ec0:	bl	10fd0 <memcpy@plt>
   14ec4:	ldr	r3, [r6, #28]
   14ec8:	add	fp, r3, fp
   14ecc:	str	fp, [r6, #28]
   14ed0:	ldr	r3, [sp, #16]
   14ed4:	ldr	r2, [sp, #12]
   14ed8:	cmp	r3, r2
   14edc:	beq	14ee8 <argp_parse@@Base+0x2f14>
   14ee0:	mov	r0, r2
   14ee4:	bl	12e6c <argp_parse@@Base+0xe98>
   14ee8:	ldr	r3, [sp, #8]
   14eec:	cmp	r3, #0
   14ef0:	beq	14f34 <argp_parse@@Base+0x2f60>
   14ef4:	ldr	r2, [r3]
   14ef8:	cmp	r2, #0
   14efc:	beq	14f34 <argp_parse@@Base+0x2f60>
   14f00:	ldr	r5, [sp, #8]
   14f04:	mov	r3, r4
   14f08:	mov	r0, r2
   14f0c:	str	r6, [sp]
   14f10:	mov	r2, r8
   14f14:	mov	r1, r9
   14f18:	bl	14e04 <argp_parse@@Base+0x2e30>
   14f1c:	ldr	r2, [r5, #16]!
   14f20:	cmp	r2, #0
   14f24:	clz	r3, r0
   14f28:	lsr	r3, r3, #5
   14f2c:	bne	14f08 <argp_parse@@Base+0x2f34>
   14f30:	mov	r4, r3
   14f34:	cmp	r4, #0
   14f38:	moveq	sl, #0
   14f3c:	andne	sl, sl, #1
   14f40:	cmp	sl, #0
   14f44:	beq	14fd4 <argp_parse@@Base+0x3000>
   14f48:	ldrb	r0, [r7]
   14f4c:	cmp	r0, #0
   14f50:	bne	14fe4 <argp_parse@@Base+0x3010>
   14f54:	ldr	r3, [sp, #20]
   14f58:	ldrb	r4, [r3]
   14f5c:	cmp	r4, #0
   14f60:	moveq	r0, r4
   14f64:	strbne	r0, [r3]
   14f68:	add	sp, sp, #28
   14f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f70:	ldrb	sl, [r5]
   14f74:	cmp	sl, #0
   14f78:	beq	15000 <argp_parse@@Base+0x302c>
   14f7c:	mov	fp, #0
   14f80:	add	r5, r0, #1
   14f84:	add	fp, fp, #1
   14f88:	mov	r0, r5
   14f8c:	mov	r1, #10
   14f90:	bl	10fac <strchrnul@plt>
   14f94:	cmp	fp, sl
   14f98:	bne	14f80 <argp_parse@@Base+0x2fac>
   14f9c:	mov	r7, r0
   14fa0:	ldr	r2, [r8]
   14fa4:	mov	sl, #1
   14fa8:	add	r2, r2, sl
   14fac:	str	r2, [r8]
   14fb0:	b	14e78 <argp_parse@@Base+0x2ea4>
   14fb4:	ldr	r3, [sp, #8]
   14fb8:	cmp	r3, #0
   14fbc:	beq	14fd4 <argp_parse@@Base+0x3000>
   14fc0:	ldr	r2, [r3]
   14fc4:	cmp	r2, #0
   14fc8:	ldrne	r7, [sp, #12]
   14fcc:	movne	sl, r7
   14fd0:	bne	14f00 <argp_parse@@Base+0x2f2c>
   14fd4:	clz	r0, r4
   14fd8:	lsr	r0, r0, #5
   14fdc:	add	sp, sp, #28
   14fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fe4:	ldr	r2, [sp, #20]
   14fe8:	mov	r0, #1
   14fec:	ldrb	r3, [r2]
   14ff0:	add	r3, r3, r0
   14ff4:	strb	r3, [r2]
   14ff8:	add	sp, sp, #28
   14ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15000:	ldr	r5, [sp, #12]
   15004:	b	14fa0 <argp_parse@@Base+0x2fcc>
   15008:	andeq	r0, r0, #6
   1500c:	ldr	r2, [r0, #8]
   15010:	cmp	r2, #0
   15014:	beq	15020 <argp_parse@@Base+0x304c>
   15018:	mov	r0, #0
   1501c:	bx	lr
   15020:	ldr	r2, [r1, #8]
   15024:	cmp	r2, #0
   15028:	bne	15018 <argp_parse@@Base+0x3044>
   1502c:	ldr	r1, [r1, #12]
   15030:	ldr	r2, [r0, #12]
   15034:	orr	r2, r2, r1
   15038:	tst	r2, #16
   1503c:	ldreq	r2, [r3]
   15040:	ldreq	r1, [r0, #4]
   15044:	addeq	r0, r2, #1
   15048:	streq	r0, [r3]
   1504c:	strbeq	r1, [r2]
   15050:	b	15018 <argp_parse@@Base+0x3044>
   15054:	mov	r3, r0
   15058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1505c:	sub	sp, sp, #52	; 0x34
   15060:	ldr	r2, [r3, #16]
   15064:	str	r0, [sp, #24]
   15068:	mov	r0, #16
   1506c:	ldr	r4, [r3]
   15070:	str	r1, [sp, #28]
   15074:	str	r2, [sp, #8]
   15078:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   1507c:	subs	r3, r0, #0
   15080:	str	r3, [sp, #20]
   15084:	beq	156e8 <argp_parse@@Base+0x3714>
   15088:	ldr	r2, [sp, #20]
   1508c:	mov	r3, #0
   15090:	cmp	r4, #0
   15094:	str	r3, [r2, #4]
   15098:	str	r3, [r2, #12]
   1509c:	beq	152a0 <argp_parse@@Base+0x32cc>
   150a0:	ldr	r5, [r4, #12]
   150a4:	ands	r5, r5, #4
   150a8:	bne	156fc <argp_parse@@Base+0x3728>
   150ac:	add	r6, r4, #24
   150b0:	mov	r9, r5
   150b4:	mov	sl, r5
   150b8:	mov	fp, r2
   150bc:	b	15100 <argp_parse@@Base+0x312c>
   150c0:	ldr	r3, [r6, #-12]
   150c4:	tst	r3, #4
   150c8:	addeq	r9, r9, #1
   150cc:	streq	r9, [fp, #4]
   150d0:	tst	r3, #8
   150d4:	bne	150fc <argp_parse@@Base+0x3128>
   150d8:	sub	r3, r8, #1
   150dc:	cmp	r3, #254	; 0xfe
   150e0:	bhi	150fc <argp_parse@@Base+0x3128>
   150e4:	bl	110d8 <__ctype_b_loc@plt>
   150e8:	lsl	r8, r8, #1
   150ec:	ldr	r3, [r0]
   150f0:	ldrh	r3, [r3, r8]
   150f4:	tst	r3, #16384	; 0x4000
   150f8:	addne	sl, sl, #1
   150fc:	add	r6, r6, #24
   15100:	ldr	r8, [r6, #-20]	; 0xffffffec
   15104:	cmp	r8, #0
   15108:	bne	150c0 <argp_parse@@Base+0x30ec>
   1510c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15110:	cmp	r3, #0
   15114:	bne	150c0 <argp_parse@@Base+0x30ec>
   15118:	ldr	r3, [r6, #-8]
   1511c:	cmp	r3, #0
   15120:	bne	150c0 <argp_parse@@Base+0x30ec>
   15124:	ldr	r7, [r6, #-4]
   15128:	cmp	r7, #0
   1512c:	bne	150c0 <argp_parse@@Base+0x30ec>
   15130:	rsb	r9, r9, r9, lsl #3
   15134:	lsl	r0, r9, #2
   15138:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   1513c:	ldr	r6, [sp, #20]
   15140:	str	r0, [r6]
   15144:	add	r0, sl, #1
   15148:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   1514c:	ldr	r8, [r6]
   15150:	mov	r3, r6
   15154:	cmp	r0, #0
   15158:	cmpne	r8, #0
   1515c:	mov	sl, r0
   15160:	str	r0, [r3, #8]
   15164:	beq	156ac <argp_parse@@Base+0x36d8>
   15168:	ldr	r2, [sp, #20]
   1516c:	ldr	r3, [pc, #1436]	; 15710 <argp_parse@@Base+0x373c>
   15170:	ldr	r2, [r2, #4]
   15174:	cmp	r2, r3
   15178:	bhi	15698 <argp_parse@@Base+0x36c4>
   1517c:	add	r8, r8, #28
   15180:	mov	r2, r8
   15184:	ldr	r3, [r4, #4]
   15188:	mov	r8, sl
   1518c:	mov	r9, r2
   15190:	cmp	r3, #0
   15194:	bne	151a4 <argp_parse@@Base+0x31d0>
   15198:	ldr	r2, [r4]
   1519c:	cmp	r2, #0
   151a0:	beq	15650 <argp_parse@@Base+0x367c>
   151a4:	str	r7, [r9, #-24]	; 0xffffffe8
   151a8:	ldr	r6, [r4, #20]
   151ac:	str	r4, [r9, #-28]	; 0xffffffe4
   151b0:	cmp	r6, #0
   151b4:	str	sl, [r9, #-20]	; 0xffffffec
   151b8:	bne	151d0 <argp_parse@@Base+0x31fc>
   151bc:	ldr	r2, [r4]
   151c0:	cmp	r2, #0
   151c4:	cmpeq	r3, #0
   151c8:	movne	r6, r5
   151cc:	beq	15674 <argp_parse@@Base+0x36a0>
   151d0:	ldr	r1, [sp, #28]
   151d4:	str	r6, [r9, #-16]
   151d8:	mov	r5, r4
   151dc:	ldr	r2, [r4, #12]
   151e0:	mov	r3, r7
   151e4:	str	r1, [r9, #-12]
   151e8:	ldr	r1, [sp, #24]
   151ec:	str	r1, [r9, #-8]
   151f0:	add	r3, r3, #1
   151f4:	tst	r2, #8
   151f8:	str	r3, [r9, #-24]	; 0xffffffe8
   151fc:	bne	15268 <argp_parse@@Base+0x3294>
   15200:	ldr	fp, [r4, #4]
   15204:	sub	r3, fp, #1
   15208:	cmp	r3, #254	; 0xfe
   1520c:	bhi	15268 <argp_parse@@Base+0x3294>
   15210:	bl	110d8 <__ctype_b_loc@plt>
   15214:	lsl	r3, fp, #1
   15218:	ldr	r2, [r0]
   1521c:	ldrh	r3, [r2, r3]
   15220:	tst	r3, #16384	; 0x4000
   15224:	beq	15268 <argp_parse@@Base+0x3294>
   15228:	cmp	r8, sl
   1522c:	uxtb	r1, fp
   15230:	bcs	15260 <argp_parse@@Base+0x328c>
   15234:	ldrb	r3, [r8]
   15238:	cmp	r3, r1
   1523c:	movne	r3, r8
   15240:	subne	r0, sl, #1
   15244:	bne	15258 <argp_parse@@Base+0x3284>
   15248:	b	15268 <argp_parse@@Base+0x3294>
   1524c:	ldrb	r2, [r3, #1]!
   15250:	cmp	r2, r1
   15254:	beq	15268 <argp_parse@@Base+0x3294>
   15258:	cmp	r0, r3
   1525c:	bne	1524c <argp_parse@@Base+0x3278>
   15260:	strb	r1, [sl]
   15264:	add	sl, sl, #1
   15268:	ldr	r3, [r5, #28]
   1526c:	add	r4, r4, #24
   15270:	cmp	r3, #0
   15274:	bne	15284 <argp_parse@@Base+0x32b0>
   15278:	ldr	r2, [r5, #24]
   1527c:	cmp	r2, #0
   15280:	beq	1562c <argp_parse@@Base+0x3658>
   15284:	ldr	r2, [r5, #36]	; 0x24
   15288:	tst	r2, #4
   1528c:	beq	15644 <argp_parse@@Base+0x3670>
   15290:	ldr	r3, [r9, #-24]	; 0xffffffe8
   15294:	mov	r5, r4
   15298:	b	151f0 <argp_parse@@Base+0x321c>
   1529c:	strb	r3, [sl]
   152a0:	ldr	r3, [sp, #8]
   152a4:	cmp	r3, #0
   152a8:	beq	153e4 <argp_parse@@Base+0x3410>
   152ac:	ldr	r3, [r3]
   152b0:	cmp	r3, #0
   152b4:	beq	153e4 <argp_parse@@Base+0x3410>
   152b8:	ldr	r3, [sp, #20]
   152bc:	add	r3, r3, #12
   152c0:	str	r3, [sp, #44]	; 0x2c
   152c4:	ldr	r3, [sp, #8]
   152c8:	ldr	r5, [r3, #12]
   152cc:	cmp	r5, #0
   152d0:	ldrne	r6, [r3, #8]
   152d4:	bne	152e8 <argp_parse@@Base+0x3314>
   152d8:	ldr	r3, [sp, #8]
   152dc:	ldr	r6, [r3, #8]
   152e0:	cmp	r6, #0
   152e4:	beq	1560c <argp_parse@@Base+0x3638>
   152e8:	ldr	r7, [sp, #24]
   152ec:	ldr	r2, [sp, #8]
   152f0:	mov	r0, #28
   152f4:	ldr	r3, [r7, #16]
   152f8:	sub	r3, r2, r3
   152fc:	asr	r4, r3, #4
   15300:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   15304:	subs	r1, r0, #0
   15308:	beq	15348 <argp_parse@@Base+0x3374>
   1530c:	ldr	r3, [sp, #28]
   15310:	ldr	r0, [sp, #20]
   15314:	cmp	r3, #0
   15318:	str	r3, [r1, #12]
   1531c:	ldrne	r3, [r3, #20]
   15320:	ldr	r2, [r0, #12]
   15324:	addne	r3, r3, #1
   15328:	moveq	r3, #0
   1532c:	str	r5, [r1, #8]
   15330:	str	r6, [r1]
   15334:	str	r4, [r1, #4]
   15338:	str	r7, [r1, #16]
   1533c:	str	r3, [r1, #20]
   15340:	str	r2, [r1, #24]
   15344:	str	r1, [r0, #12]
   15348:	ldr	r3, [sp, #8]
   1534c:	ldr	r0, [r3]
   15350:	bl	15054 <argp_parse@@Base+0x3080>
   15354:	ldr	r3, [sp, #20]
   15358:	ldr	r2, [r3, #12]
   1535c:	cmp	r2, #0
   15360:	str	r0, [sp, #16]
   15364:	bne	15370 <argp_parse@@Base+0x339c>
   15368:	b	15614 <argp_parse@@Base+0x3640>
   1536c:	mov	r2, r3
   15370:	ldr	r3, [r2, #24]
   15374:	cmp	r3, #0
   15378:	bne	1536c <argp_parse@@Base+0x3398>
   1537c:	add	r2, r2, #24
   15380:	ldr	r0, [sp, #16]
   15384:	mov	ip, r0
   15388:	ldr	r3, [r0, #4]
   1538c:	ldr	r1, [r0, #12]
   15390:	cmp	r3, #0
   15394:	str	r1, [r2]
   15398:	mov	r2, #0
   1539c:	str	r2, [r0, #12]
   153a0:	beq	153c8 <argp_parse@@Base+0x33f4>
   153a4:	ldr	lr, [sp, #20]
   153a8:	ldr	r2, [lr, #4]
   153ac:	cmp	r2, #0
   153b0:	bne	153f0 <argp_parse@@Base+0x341c>
   153b4:	ldr	r0, [r0]
   153b8:	ldr	r1, [ip, #8]
   153bc:	stm	lr, {r0, r3}
   153c0:	str	r1, [lr, #8]
   153c4:	str	r2, [ip, #4]
   153c8:	ldr	r0, [sp, #16]
   153cc:	bl	13dec <argp_parse@@Base+0x1e18>
   153d0:	ldr	r2, [sp, #8]
   153d4:	ldr	r3, [r2, #16]!
   153d8:	cmp	r3, #0
   153dc:	str	r2, [sp, #8]
   153e0:	bne	152c4 <argp_parse@@Base+0x32f0>
   153e4:	ldr	r0, [sp, #20]
   153e8:	add	sp, sp, #52	; 0x34
   153ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153f0:	add	r3, r3, r2
   153f4:	str	r3, [sp, #36]	; 0x24
   153f8:	rsb	r0, r3, r3, lsl #3
   153fc:	lsl	r0, r0, #2
   15400:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   15404:	ldr	r3, [sp, #20]
   15408:	mov	r4, r0
   1540c:	str	r0, [sp, #32]
   15410:	ldr	r0, [r3, #8]
   15414:	bl	110fc <strlen@plt>
   15418:	ldr	r3, [sp, #16]
   1541c:	mov	r8, r0
   15420:	ldr	r0, [r3, #8]
   15424:	bl	110fc <strlen@plt>
   15428:	add	r0, r8, r0
   1542c:	add	r0, r0, #1
   15430:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   15434:	cmp	r4, #0
   15438:	cmpne	r0, #0
   1543c:	mov	r7, r0
   15440:	beq	156c0 <argp_parse@@Base+0x36ec>
   15444:	ldr	r3, [sp, #36]	; 0x24
   15448:	ldr	r2, [pc, #704]	; 15710 <argp_parse@@Base+0x373c>
   1544c:	cmp	r3, r2
   15450:	bhi	156d4 <argp_parse@@Base+0x3700>
   15454:	ldr	r5, [sp, #20]
   15458:	ldr	r9, [sp, #32]
   1545c:	ldm	r5, {r3, r4}
   15460:	mov	r0, r9
   15464:	rsb	r6, r4, r4, lsl #3
   15468:	mov	r1, r3
   1546c:	lsl	r6, r6, #2
   15470:	mov	r2, r6
   15474:	str	r3, [sp, #40]	; 0x28
   15478:	bl	110cc <mempcpy@plt>
   1547c:	ldr	r3, [sp, #16]
   15480:	ldr	r1, [r3, #4]
   15484:	mov	ip, r1
   15488:	str	r1, [sp, #4]
   1548c:	rsb	r2, ip, ip, lsl #3
   15490:	ldr	r1, [r3]
   15494:	lsl	r2, r2, #2
   15498:	bl	10fd0 <memcpy@plt>
   1549c:	ldr	r5, [r5, #8]
   154a0:	mov	r2, r8
   154a4:	mov	r1, r5
   154a8:	mov	r0, r7
   154ac:	bl	10fd0 <memcpy@plt>
   154b0:	cmp	r4, #0
   154b4:	beq	15624 <argp_parse@@Base+0x3650>
   154b8:	mov	r2, r9
   154bc:	ldr	r3, [r2, #8]
   154c0:	subs	r4, r4, #1
   154c4:	sub	r3, r3, r5
   154c8:	add	r3, r7, r3
   154cc:	str	r3, [r2, #8]
   154d0:	add	r2, r2, #28
   154d4:	bne	154bc <argp_parse@@Base+0x34e8>
   154d8:	ldr	r3, [sp, #32]
   154dc:	add	r1, r3, r6
   154e0:	ldr	r3, [sp, #4]
   154e4:	ldr	r2, [sp, #16]
   154e8:	cmp	r3, #0
   154ec:	add	r3, r7, r8
   154f0:	str	r3, [sp, #12]
   154f4:	ldr	sl, [r2, #8]
   154f8:	beq	1561c <argp_parse@@Base+0x3648>
   154fc:	sub	r8, r3, #1
   15500:	add	fp, r1, #28
   15504:	mov	r9, r3
   15508:	mov	r3, r8
   1550c:	mov	r8, fp
   15510:	mov	fp, sl
   15514:	mov	sl, r3
   15518:	ldr	r5, [r8, #-24]	; 0xffffffe8
   1551c:	str	r9, [r8, #-20]	; 0xffffffec
   15520:	cmp	r5, #0
   15524:	ldr	r4, [r8, #-28]	; 0xffffffe4
   15528:	bne	1553c <argp_parse@@Base+0x3568>
   1552c:	b	155c8 <argp_parse@@Base+0x35f4>
   15530:	subs	r5, r5, #1
   15534:	add	r4, r4, #24
   15538:	beq	155c8 <argp_parse@@Base+0x35f4>
   1553c:	ldr	r3, [r4, #12]
   15540:	tst	r3, #8
   15544:	bne	15530 <argp_parse@@Base+0x355c>
   15548:	ldr	r6, [r4, #4]
   1554c:	sub	r3, r6, #1
   15550:	cmp	r3, #254	; 0xfe
   15554:	bhi	15530 <argp_parse@@Base+0x355c>
   15558:	bl	110d8 <__ctype_b_loc@plt>
   1555c:	lsl	r3, r6, #1
   15560:	ldr	r2, [r0]
   15564:	ldrh	r3, [r2, r3]
   15568:	tst	r3, #16384	; 0x4000
   1556c:	beq	15530 <argp_parse@@Base+0x355c>
   15570:	ldrb	r1, [fp]
   15574:	cmp	r1, r6
   15578:	bne	15530 <argp_parse@@Base+0x355c>
   1557c:	ldr	r3, [sp, #12]
   15580:	cmp	r7, r3
   15584:	bcs	155b0 <argp_parse@@Base+0x35dc>
   15588:	ldrb	r3, [r7]
   1558c:	cmp	r3, r1
   15590:	movne	r3, r7
   15594:	bne	155a8 <argp_parse@@Base+0x35d4>
   15598:	b	155b8 <argp_parse@@Base+0x35e4>
   1559c:	ldrb	r2, [r3, #1]!
   155a0:	cmp	r2, r1
   155a4:	beq	155b8 <argp_parse@@Base+0x35e4>
   155a8:	cmp	sl, r3
   155ac:	bne	1559c <argp_parse@@Base+0x35c8>
   155b0:	strb	r1, [r9]
   155b4:	add	r9, r9, #1
   155b8:	subs	r5, r5, #1
   155bc:	add	fp, fp, #1
   155c0:	add	r4, r4, #24
   155c4:	bne	1553c <argp_parse@@Base+0x3568>
   155c8:	ldr	r3, [sp, #4]
   155cc:	add	r8, r8, #28
   155d0:	subs	r3, r3, #1
   155d4:	str	r3, [sp, #4]
   155d8:	bne	15518 <argp_parse@@Base+0x3544>
   155dc:	mov	r3, #0
   155e0:	strb	r3, [r9]
   155e4:	ldr	r0, [sp, #40]	; 0x28
   155e8:	bl	12e6c <argp_parse@@Base+0xe98>
   155ec:	ldr	r4, [sp, #20]
   155f0:	ldr	r0, [r4, #8]
   155f4:	bl	12e6c <argp_parse@@Base+0xe98>
   155f8:	ldr	r2, [sp, #32]
   155fc:	str	r2, [r4]
   15600:	ldr	r2, [sp, #36]	; 0x24
   15604:	stmib	r4, {r2, r7}
   15608:	b	153c8 <argp_parse@@Base+0x33f4>
   1560c:	ldr	r1, [sp, #28]
   15610:	b	15348 <argp_parse@@Base+0x3374>
   15614:	ldr	r2, [sp, #44]	; 0x2c
   15618:	b	15380 <argp_parse@@Base+0x33ac>
   1561c:	ldr	r9, [sp, #12]
   15620:	b	155dc <argp_parse@@Base+0x3608>
   15624:	ldr	r1, [sp, #32]
   15628:	b	154e0 <argp_parse@@Base+0x350c>
   1562c:	ldr	r2, [r5, #40]	; 0x28
   15630:	cmp	r2, #0
   15634:	bne	15284 <argp_parse@@Base+0x32b0>
   15638:	ldr	r2, [r5, #44]	; 0x2c
   1563c:	cmp	r2, #0
   15640:	bne	15284 <argp_parse@@Base+0x32b0>
   15644:	add	r9, r9, #28
   15648:	mov	r5, r6
   1564c:	b	15190 <argp_parse@@Base+0x31bc>
   15650:	ldr	r2, [r4, #16]
   15654:	cmp	r2, #0
   15658:	beq	1567c <argp_parse@@Base+0x36a8>
   1565c:	str	r3, [r9, #-24]	; 0xffffffe8
   15660:	ldr	r6, [r4, #20]
   15664:	str	r4, [r9, #-28]	; 0xffffffe4
   15668:	cmp	r6, #0
   1566c:	str	sl, [r9, #-20]	; 0xffffffec
   15670:	bne	151d0 <argp_parse@@Base+0x31fc>
   15674:	add	r6, r5, #1
   15678:	b	151d0 <argp_parse@@Base+0x31fc>
   1567c:	ldr	r6, [r4, #20]
   15680:	cmp	r6, #0
   15684:	beq	1529c <argp_parse@@Base+0x32c8>
   15688:	str	r4, [r9, #-28]	; 0xffffffe4
   1568c:	str	r3, [r9, #-24]	; 0xffffffe8
   15690:	str	sl, [r9, #-20]	; 0xffffffec
   15694:	b	151d0 <argp_parse@@Base+0x31fc>
   15698:	ldr	r3, [pc, #116]	; 15714 <argp_parse@@Base+0x3740>
   1569c:	mov	r2, #476	; 0x1dc
   156a0:	ldr	r1, [pc, #112]	; 15718 <argp_parse@@Base+0x3744>
   156a4:	ldr	r0, [pc, #112]	; 1571c <argp_parse@@Base+0x3748>
   156a8:	bl	111f8 <__assert_fail@plt>
   156ac:	ldr	r3, [pc, #96]	; 15714 <argp_parse@@Base+0x3740>
   156b0:	ldr	r2, [pc, #104]	; 15720 <argp_parse@@Base+0x374c>
   156b4:	ldr	r1, [pc, #92]	; 15718 <argp_parse@@Base+0x3744>
   156b8:	ldr	r0, [pc, #100]	; 15724 <argp_parse@@Base+0x3750>
   156bc:	bl	111f8 <__assert_fail@plt>
   156c0:	ldr	r3, [pc, #96]	; 15728 <argp_parse@@Base+0x3754>
   156c4:	ldr	r2, [pc, #96]	; 1572c <argp_parse@@Base+0x3758>
   156c8:	ldr	r1, [pc, #72]	; 15718 <argp_parse@@Base+0x3744>
   156cc:	ldr	r0, [pc, #92]	; 15730 <argp_parse@@Base+0x375c>
   156d0:	bl	111f8 <__assert_fail@plt>
   156d4:	ldr	r3, [pc, #76]	; 15728 <argp_parse@@Base+0x3754>
   156d8:	mov	r2, #972	; 0x3cc
   156dc:	ldr	r1, [pc, #52]	; 15718 <argp_parse@@Base+0x3744>
   156e0:	ldr	r0, [pc, #76]	; 15734 <argp_parse@@Base+0x3760>
   156e4:	bl	111f8 <__assert_fail@plt>
   156e8:	ldr	r3, [pc, #36]	; 15714 <argp_parse@@Base+0x3740>
   156ec:	ldr	r2, [pc, #68]	; 15738 <argp_parse@@Base+0x3764>
   156f0:	ldr	r1, [pc, #32]	; 15718 <argp_parse@@Base+0x3744>
   156f4:	ldr	r0, [pc, #64]	; 1573c <argp_parse@@Base+0x3768>
   156f8:	bl	111f8 <__assert_fail@plt>
   156fc:	ldr	r3, [pc, #16]	; 15714 <argp_parse@@Base+0x3740>
   15700:	mov	r2, #460	; 0x1cc
   15704:	ldr	r1, [pc, #12]	; 15718 <argp_parse@@Base+0x3744>
   15708:	ldr	r0, [pc, #48]	; 15740 <argp_parse@@Base+0x376c>
   1570c:	bl	111f8 <__assert_fail@plt>
   15710:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15714:	andeq	r9, r1, r0, lsr #32
   15718:	andeq	r9, r1, r4, ror #1
   1571c:	andeq	r9, r1, r8, lsr #2
   15720:	ldrdeq	r0, [r0], -sl
   15724:	andeq	r9, r1, r4, lsl #2
   15728:	andeq	r9, r1, ip, lsr #32
   1572c:	andeq	r0, r0, sl, asr #7
   15730:	andeq	r9, r1, r4, ror #2
   15734:	andeq	r9, r1, r0, lsl #3
   15738:	andeq	r0, r0, r2, asr #3
   1573c:	strdeq	r9, [r1], -r0
   15740:	strdeq	r9, [r1], -r4
   15744:	cmp	r1, #0
   15748:	push	{r4, r5, r6, r7, r8, lr}
   1574c:	beq	157c4 <argp_parse@@Base+0x37f0>
   15750:	sub	r7, r1, #1
   15754:	mov	r8, r2
   15758:	mov	r6, r0
   1575c:	ldm	r6, {r4, r5}
   15760:	cmp	r5, #0
   15764:	sub	r5, r5, #1
   15768:	beq	157a8 <argp_parse@@Base+0x37d4>
   1576c:	add	r4, r4, #24
   15770:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15774:	mov	r1, r8
   15778:	subs	r0, r3, #0
   1577c:	sub	r5, r5, #1
   15780:	beq	1579c <argp_parse@@Base+0x37c8>
   15784:	ldr	r3, [r4, #-12]
   15788:	tst	r3, #2
   1578c:	bne	1579c <argp_parse@@Base+0x37c8>
   15790:	bl	10f70 <strcmp@plt>
   15794:	cmp	r0, #0
   15798:	beq	157bc <argp_parse@@Base+0x37e8>
   1579c:	cmn	r5, #1
   157a0:	add	r4, r4, #24
   157a4:	bne	15770 <argp_parse@@Base+0x379c>
   157a8:	sub	r7, r7, #1
   157ac:	cmn	r7, #1
   157b0:	add	r6, r6, #28
   157b4:	bne	1575c <argp_parse@@Base+0x3788>
   157b8:	mov	r6, #0
   157bc:	mov	r0, r6
   157c0:	pop	{r4, r5, r6, r7, r8, pc}
   157c4:	mov	r6, r1
   157c8:	b	157bc <argp_parse@@Base+0x37e8>
   157cc:	push	{r4, r5, r6, lr}
   157d0:	subs	r4, r0, #0
   157d4:	mov	r5, r1
   157d8:	beq	157ec <argp_parse@@Base+0x3818>
   157dc:	mov	r1, #10
   157e0:	bl	11108 <strchr@plt>
   157e4:	adds	r4, r0, #0
   157e8:	movne	r4, #1
   157ec:	cmp	r5, #0
   157f0:	beq	1581c <argp_parse@@Base+0x3848>
   157f4:	ldr	r3, [r5]
   157f8:	cmp	r3, #0
   157fc:	beq	1581c <argp_parse@@Base+0x3848>
   15800:	ldr	r1, [r3, #16]
   15804:	ldr	r0, [r3, #8]
   15808:	bl	157cc <argp_parse@@Base+0x37f8>
   1580c:	ldr	r3, [r5, #16]!
   15810:	cmp	r3, #0
   15814:	add	r4, r4, r0
   15818:	bne	15800 <argp_parse@@Base+0x382c>
   1581c:	mov	r0, r4
   15820:	pop	{r4, r5, r6, pc}
   15824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15828:	add	fp, sp, #32
   1582c:	sub	sp, sp, #12
   15830:	ldr	r5, [r0, #4]
   15834:	cmp	r5, #0
   15838:	bne	15844 <argp_parse@@Base+0x3870>
   1583c:	sub	sp, fp, #32
   15840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15844:	mov	r6, r0
   15848:	ldr	r0, [r0, #8]
   1584c:	mov	r9, r1
   15850:	bl	110fc <strlen@plt>
   15854:	ldr	r8, [pc, #360]	; 159c4 <argp_parse@@Base+0x39f0>
   15858:	ldr	r4, [r6]
   1585c:	sub	r7, fp, #36	; 0x24
   15860:	add	r3, r0, #15
   15864:	bic	r3, r3, #7
   15868:	sub	sp, sp, r3
   1586c:	mov	sl, sp
   15870:	str	sp, [r7, #-4]!
   15874:	ldr	r2, [r4, #20]
   15878:	mov	r0, r4
   1587c:	mov	r3, r7
   15880:	mov	r1, r8
   15884:	ldr	r2, [r2, #24]
   15888:	bl	13c38 <argp_parse@@Base+0x1c64>
   1588c:	subs	r5, r5, #1
   15890:	add	r4, r4, #28
   15894:	bne	15874 <argp_parse@@Base+0x38a0>
   15898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1589c:	cmp	sl, r3
   158a0:	bcc	159a4 <argp_parse@@Base+0x39d0>
   158a4:	ldm	r6, {r4, r5}
   158a8:	cmp	r5, #0
   158ac:	beq	1583c <argp_parse@@Base+0x3868>
   158b0:	ldr	r7, [pc, #272]	; 159c8 <argp_parse@@Base+0x39f4>
   158b4:	ldr	r2, [r4, #20]
   158b8:	mov	r0, r4
   158bc:	mov	r3, r9
   158c0:	mov	r1, r7
   158c4:	ldr	r2, [r2, #24]
   158c8:	bl	13c38 <argp_parse@@Base+0x1c64>
   158cc:	subs	r5, r5, #1
   158d0:	add	r4, r4, #28
   158d4:	bne	158b4 <argp_parse@@Base+0x38e0>
   158d8:	ldm	r6, {r7, r8}
   158dc:	cmp	r8, #0
   158e0:	beq	1583c <argp_parse@@Base+0x3868>
   158e4:	ldr	sl, [pc, #224]	; 159cc <argp_parse@@Base+0x39f8>
   158e8:	add	r7, r7, #28
   158ec:	ldr	r5, [r7, #-24]	; 0xffffffe8
   158f0:	ldr	r4, [r7, #-28]	; 0xffffffe4
   158f4:	cmp	r5, #0
   158f8:	movne	r6, r4
   158fc:	bne	15910 <argp_parse@@Base+0x393c>
   15900:	b	1596c <argp_parse@@Base+0x3998>
   15904:	subs	r5, r5, #1
   15908:	add	r4, r4, #24
   1590c:	beq	1596c <argp_parse@@Base+0x3998>
   15910:	ldr	r2, [r4]
   15914:	cmp	r2, #0
   15918:	beq	15904 <argp_parse@@Base+0x3930>
   1591c:	ldr	r1, [r4, #12]
   15920:	tst	r1, #4
   15924:	moveq	r6, r4
   15928:	tst	r1, #2
   1592c:	bne	15904 <argp_parse@@Base+0x3930>
   15930:	ldr	r3, [r4, #8]
   15934:	ldr	r0, [r6, #12]
   15938:	cmp	r3, #0
   1593c:	orr	r1, r1, r0
   15940:	beq	15980 <argp_parse@@Base+0x39ac>
   15944:	tst	r1, #16
   15948:	bne	15904 <argp_parse@@Base+0x3930>
   1594c:	tst	r1, #1
   15950:	moveq	r1, sl
   15954:	ldrne	r1, [pc, #116]	; 159d0 <argp_parse@@Base+0x39fc>
   15958:	mov	r0, r9
   1595c:	bl	182e4 <argp_error@@Base+0x14b0>
   15960:	subs	r5, r5, #1
   15964:	add	r4, r4, #24
   15968:	bne	15910 <argp_parse@@Base+0x393c>
   1596c:	subs	r8, r8, #1
   15970:	add	r7, r7, #28
   15974:	bne	158ec <argp_parse@@Base+0x3918>
   15978:	sub	sp, fp, #32
   1597c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15980:	tst	r1, #16
   15984:	bne	15904 <argp_parse@@Base+0x3930>
   15988:	ldr	r3, [r6, #8]
   1598c:	cmp	r3, #0
   15990:	bne	1594c <argp_parse@@Base+0x3978>
   15994:	ldr	r1, [pc, #56]	; 159d4 <argp_parse@@Base+0x3a00>
   15998:	mov	r0, r9
   1599c:	bl	182e4 <argp_error@@Base+0x14b0>
   159a0:	b	15904 <argp_parse@@Base+0x3930>
   159a4:	add	r1, r3, #1
   159a8:	str	r1, [fp, #-40]	; 0xffffffd8
   159ac:	mov	r2, sl
   159b0:	ldr	r1, [pc, #32]	; 159d8 <argp_parse@@Base+0x3a04>
   159b4:	strb	r5, [r3]
   159b8:	mov	r0, r9
   159bc:	bl	182e4 <argp_error@@Base+0x14b0>
   159c0:	b	158a4 <argp_parse@@Base+0x38d0>
   159c4:	andeq	r5, r1, ip
   159c8:	andeq	r4, r1, r8, ror #26
   159cc:	andeq	r9, r1, ip, asr #3
   159d0:			; <UNDEFINED> instruction: 0x000191bc
   159d4:	ldrdeq	r9, [r1], -r8
   159d8:			; <UNDEFINED> instruction: 0x000191b4

000159dc <argp_failure@@Base>:
   159dc:	push	{r3}		; (str r3, [sp, #-4]!)
   159e0:	push	{r4, r5, r6, r7, lr}
   159e4:	subs	r5, r0, #0
   159e8:	sub	sp, sp, #200	; 0xc8
   159ec:	mov	r7, r1
   159f0:	mov	r6, r2
   159f4:	beq	15b44 <argp_failure@@Base+0x168>
   159f8:	ldr	r3, [r5, #16]
   159fc:	tst	r3, #2
   15a00:	bne	15b34 <argp_failure@@Base+0x158>
   15a04:	ldr	r4, [r5, #44]	; 0x2c
   15a08:	cmp	r4, #0
   15a0c:	beq	15b34 <argp_failure@@Base+0x158>
   15a10:	mov	r0, r4
   15a14:	bl	11198 <flockfile@plt>
   15a18:	ldr	r0, [r5, #40]	; 0x28
   15a1c:	mov	r1, r4
   15a20:	bl	10f4c <fputs_unlocked@plt>
   15a24:	ldr	r3, [sp, #220]	; 0xdc
   15a28:	cmp	r3, #0
   15a2c:	beq	15a88 <argp_failure@@Base+0xac>
   15a30:	ldr	r3, [r4, #20]
   15a34:	ldr	r1, [r4, #24]
   15a38:	add	r2, sp, #224	; 0xe0
   15a3c:	cmp	r3, r1
   15a40:	str	r2, [sp]
   15a44:	addcc	r1, r3, #1
   15a48:	movcc	r2, #58	; 0x3a
   15a4c:	strcc	r1, [r4, #20]
   15a50:	strbcc	r2, [r3]
   15a54:	bcs	15b90 <argp_failure@@Base+0x1b4>
   15a58:	ldr	r3, [r4, #20]
   15a5c:	ldr	r2, [r4, #24]
   15a60:	cmp	r3, r2
   15a64:	addcc	r1, r3, #1
   15a68:	movcc	r2, #32
   15a6c:	strcc	r1, [r4, #20]
   15a70:	strbcc	r2, [r3]
   15a74:	bcs	15b80 <argp_failure@@Base+0x1a4>
   15a78:	ldr	r2, [sp]
   15a7c:	ldr	r1, [sp, #220]	; 0xdc
   15a80:	mov	r0, r4
   15a84:	bl	11174 <vfprintf@plt>
   15a88:	cmp	r6, #0
   15a8c:	beq	15af0 <argp_failure@@Base+0x114>
   15a90:	ldr	r3, [r4, #20]
   15a94:	ldr	r2, [r4, #24]
   15a98:	cmp	r3, r2
   15a9c:	addcc	r1, r3, #1
   15aa0:	movcc	r2, #58	; 0x3a
   15aa4:	strcc	r1, [r4, #20]
   15aa8:	strbcc	r2, [r3]
   15aac:	bcs	15bb0 <argp_failure@@Base+0x1d4>
   15ab0:	ldr	r3, [r4, #20]
   15ab4:	ldr	r2, [r4, #24]
   15ab8:	cmp	r3, r2
   15abc:	addcc	r1, r3, #1
   15ac0:	movcc	r2, #32
   15ac4:	strcc	r1, [r4, #20]
   15ac8:	strbcc	r2, [r3]
   15acc:	bcs	15ba0 <argp_failure@@Base+0x1c4>
   15ad0:	mov	r2, #200	; 0xc8
   15ad4:	mov	r1, sp
   15ad8:	mov	r0, r6
   15adc:	bl	1112c <strerror_r@plt>
   15ae0:	cmp	r0, #0
   15ae4:	beq	15bc0 <argp_failure@@Base+0x1e4>
   15ae8:	mov	r1, r4
   15aec:	bl	10f4c <fputs_unlocked@plt>
   15af0:	ldr	r3, [r4, #20]
   15af4:	ldr	r2, [r4, #24]
   15af8:	cmp	r3, r2
   15afc:	addcc	r1, r3, #1
   15b00:	movcc	r2, #10
   15b04:	strcc	r1, [r4, #20]
   15b08:	strbcc	r2, [r3]
   15b0c:	bcs	15b68 <argp_failure@@Base+0x18c>
   15b10:	mov	r0, r4
   15b14:	bl	11030 <funlockfile@plt>
   15b18:	cmp	r7, #0
   15b1c:	beq	15b34 <argp_failure@@Base+0x158>
   15b20:	cmp	r5, #0
   15b24:	beq	15b78 <argp_failure@@Base+0x19c>
   15b28:	ldr	r3, [r5, #16]
   15b2c:	tst	r3, #32
   15b30:	beq	15b78 <argp_failure@@Base+0x19c>
   15b34:	add	sp, sp, #200	; 0xc8
   15b38:	pop	{r4, r5, r6, r7, lr}
   15b3c:	add	sp, sp, #4
   15b40:	bx	lr
   15b44:	ldr	r3, [pc, #140]	; 15bd8 <argp_failure@@Base+0x1fc>
   15b48:	ldr	r4, [r3]
   15b4c:	cmp	r4, #0
   15b50:	beq	15b34 <argp_failure@@Base+0x158>
   15b54:	mov	r0, r4
   15b58:	bl	11198 <flockfile@plt>
   15b5c:	ldr	r3, [pc, #120]	; 15bdc <argp_failure@@Base+0x200>
   15b60:	ldr	r0, [r3]
   15b64:	b	15a1c <argp_failure@@Base+0x40>
   15b68:	mov	r1, #10
   15b6c:	mov	r0, r4
   15b70:	bl	1115c <__overflow@plt>
   15b74:	b	15b10 <argp_failure@@Base+0x134>
   15b78:	mov	r0, r7
   15b7c:	bl	110e4 <exit@plt>
   15b80:	mov	r1, #32
   15b84:	mov	r0, r4
   15b88:	bl	1115c <__overflow@plt>
   15b8c:	b	15a78 <argp_failure@@Base+0x9c>
   15b90:	mov	r1, #58	; 0x3a
   15b94:	mov	r0, r4
   15b98:	bl	1115c <__overflow@plt>
   15b9c:	b	15a58 <argp_failure@@Base+0x7c>
   15ba0:	mov	r1, #32
   15ba4:	mov	r0, r4
   15ba8:	bl	1115c <__overflow@plt>
   15bac:	b	15ad0 <argp_failure@@Base+0xf4>
   15bb0:	mov	r1, #58	; 0x3a
   15bb4:	mov	r0, r4
   15bb8:	bl	1115c <__overflow@plt>
   15bbc:	b	15ab0 <argp_failure@@Base+0xd4>
   15bc0:	mov	r0, r6
   15bc4:	bl	11090 <strerror@plt>
   15bc8:	ldr	r3, [pc, #16]	; 15be0 <argp_failure@@Base+0x204>
   15bcc:	cmp	r0, #0
   15bd0:	moveq	r0, r3
   15bd4:	b	15ae8 <argp_failure@@Base+0x10c>
   15bd8:	andeq	sl, r2, r0, ror #4
   15bdc:	andeq	sl, r2, r8, asr r2
   15be0:	andeq	r9, r1, r0, ror #3
   15be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15be8:	add	fp, sp, #32
   15bec:	cmp	r2, #0
   15bf0:	sub	sp, sp, #116	; 0x74
   15bf4:	str	r2, [fp, #-132]	; 0xffffff7c
   15bf8:	str	r0, [fp, #-112]	; 0xffffff90
   15bfc:	str	r1, [fp, #-104]	; 0xffffff98
   15c00:	str	r3, [fp, #-96]	; 0xffffffa0
   15c04:	beq	15cbc <argp_failure@@Base+0x2e0>
   15c08:	ldr	sl, [pc, #4064]	; 16bf0 <argp_failure@@Base+0x1214>
   15c0c:	mov	r0, r2
   15c10:	bl	11198 <flockfile@plt>
   15c14:	ldr	r3, [sl, #36]	; 0x24
   15c18:	cmp	r3, #0
   15c1c:	str	r3, [fp, #-108]	; 0xffffff94
   15c20:	beq	1616c <argp_failure@@Base+0x790>
   15c24:	mov	r3, #0
   15c28:	mov	r1, r3
   15c2c:	ldr	r2, [sl, #32]
   15c30:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15c34:	bl	17bb8 <argp_error@@Base+0xd84>
   15c38:	subs	r9, r0, #0
   15c3c:	beq	16cb0 <argp_failure@@Base+0x12d4>
   15c40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c44:	ands	r3, r3, #11
   15c48:	streq	r3, [fp, #-136]	; 0xffffff78
   15c4c:	bne	165c8 <argp_failure@@Base+0xbec>
   15c50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c54:	ands	r4, r3, #3
   15c58:	bne	163bc <argp_failure@@Base+0x9e0>
   15c5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c60:	tst	r3, #16
   15c64:	bne	16398 <argp_failure@@Base+0x9bc>
   15c68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c6c:	tst	r3, #4
   15c70:	bne	1637c <argp_failure@@Base+0x9a0>
   15c74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c78:	tst	r3, #8
   15c7c:	bne	15d10 <argp_failure@@Base+0x334>
   15c80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c84:	tst	r3, #32
   15c88:	bne	16144 <argp_failure@@Base+0x768>
   15c8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c90:	tst	r3, #64	; 0x40
   15c94:	bne	15cc4 <argp_failure@@Base+0x2e8>
   15c98:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15c9c:	bl	11030 <funlockfile@plt>
   15ca0:	ldr	r3, [fp, #-136]	; 0xffffff78
   15ca4:	cmp	r3, #0
   15ca8:	beq	15cb4 <argp_failure@@Base+0x2d8>
   15cac:	mov	r0, r3
   15cb0:	bl	13dec <argp_parse@@Base+0x1e18>
   15cb4:	mov	r0, r9
   15cb8:	bl	181a4 <argp_error@@Base+0x1370>
   15cbc:	sub	sp, fp, #32
   15cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cc4:	ldr	r5, [pc, #3880]	; 16bf4 <argp_failure@@Base+0x1218>
   15cc8:	ldr	r2, [r5]
   15ccc:	cmp	r2, #0
   15cd0:	beq	15c98 <argp_failure@@Base+0x2bc>
   15cd4:	cmp	r4, #0
   15cd8:	beq	15d00 <argp_failure@@Base+0x324>
   15cdc:	ldr	r3, [r9, #28]
   15ce0:	ldr	r2, [r9, #32]
   15ce4:	cmp	r3, r2
   15ce8:	bcs	16c94 <argp_failure@@Base+0x12b8>
   15cec:	add	r1, r3, #1
   15cf0:	mov	r2, #10
   15cf4:	str	r1, [r9, #28]
   15cf8:	strb	r2, [r3]
   15cfc:	ldr	r2, [r5]
   15d00:	ldr	r1, [pc, #3824]	; 16bf8 <argp_failure@@Base+0x121c>
   15d04:	mov	r0, r9
   15d08:	bl	182e4 <argp_error@@Base+0x14b0>
   15d0c:	b	15c98 <argp_failure@@Base+0x2bc>
   15d10:	ldr	r3, [fp, #-136]	; 0xffffff78
   15d14:	ldr	r3, [r3, #4]
   15d18:	cmp	r3, #0
   15d1c:	str	r3, [fp, #-108]	; 0xffffff94
   15d20:	beq	15c80 <argp_failure@@Base+0x2a4>
   15d24:	cmp	r4, #0
   15d28:	beq	16b44 <argp_failure@@Base+0x1168>
   15d2c:	ldr	r3, [r9, #28]
   15d30:	ldr	r2, [r9, #32]
   15d34:	cmp	r3, r2
   15d38:	bcs	16ce8 <argp_failure@@Base+0x130c>
   15d3c:	add	r1, r3, #1
   15d40:	mov	r2, #10
   15d44:	str	r1, [r9, #28]
   15d48:	strb	r2, [r3]
   15d4c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15d50:	ldr	r2, [fp, #-136]	; 0xffffff78
   15d54:	ldr	r3, [r3, #4]
   15d58:	ldr	r8, [r2]
   15d5c:	str	r3, [fp, #-108]	; 0xffffff94
   15d60:	ldr	r3, [fp, #-108]	; 0xffffff94
   15d64:	cmp	r3, #0
   15d68:	mov	r3, #0
   15d6c:	str	r3, [fp, #-88]	; 0xffffffa8
   15d70:	str	r3, [fp, #-84]	; 0xffffffac
   15d74:	str	r3, [fp, #-80]	; 0xffffffb0
   15d78:	beq	16134 <argp_failure@@Base+0x758>
   15d7c:	str	sl, [fp, #-100]	; 0xffffff9c
   15d80:	ldr	lr, [r9, #28]
   15d84:	ldr	r3, [r9, #24]
   15d88:	ldr	r5, [r9, #16]
   15d8c:	sub	lr, lr, r3
   15d90:	cmp	lr, r5
   15d94:	ldr	r6, [r8]
   15d98:	ldr	sl, [r8, #8]
   15d9c:	bhi	1689c <argp_failure@@Base+0xec0>
   15da0:	ldr	r1, [r9, #4]
   15da4:	ldr	r7, [r6, #12]
   15da8:	str	r1, [fp, #-116]	; 0xffffff8c
   15dac:	ldr	r1, [r9, #12]
   15db0:	mov	r3, #0
   15db4:	str	r1, [fp, #-120]	; 0xffffff88
   15db8:	sub	r1, fp, #88	; 0x58
   15dbc:	str	r3, [r9, #4]
   15dc0:	and	r2, r7, #8
   15dc4:	str	r1, [fp, #-68]	; 0xffffffbc
   15dc8:	ldr	r1, [fp, #-104]	; 0xffffff98
   15dcc:	mov	r0, #1
   15dd0:	cmp	r2, r3
   15dd4:	mov	r4, r2
   15dd8:	str	r0, [fp, #-64]	; 0xffffffc0
   15ddc:	str	r8, [fp, #-76]	; 0xffffffb4
   15de0:	str	r9, [fp, #-72]	; 0xffffffb8
   15de4:	str	r1, [fp, #-60]	; 0xffffffc4
   15de8:	bne	16728 <argp_failure@@Base+0xd4c>
   15dec:	ldr	ip, [r8, #4]
   15df0:	cmp	ip, r3
   15df4:	beq	15e20 <argp_failure@@Base+0x444>
   15df8:	add	r0, r6, #24
   15dfc:	ldr	r3, [r0, #-24]	; 0xffffffe8
   15e00:	cmp	r3, #0
   15e04:	beq	15e14 <argp_failure@@Base+0x438>
   15e08:	ldr	r3, [r0, #-12]
   15e0c:	tst	r3, #2
   15e10:	beq	16724 <argp_failure@@Base+0xd48>
   15e14:	subs	ip, ip, #1
   15e18:	add	r0, r0, #24
   15e1c:	bne	15dfc <argp_failure@@Base+0x420>
   15e20:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15e24:	cmp	lr, r5
   15e28:	str	r2, [fp, #-128]	; 0xffffff80
   15e2c:	ldr	r5, [r3, #8]
   15e30:	bhi	1673c <argp_failure@@Base+0xd60>
   15e34:	str	r5, [r9, #12]
   15e38:	ldr	r5, [r8, #4]
   15e3c:	cmp	r5, #0
   15e40:	beq	15ec4 <argp_failure@@Base+0x4e8>
   15e44:	mov	r4, r6
   15e48:	str	r8, [fp, #-124]	; 0xffffff84
   15e4c:	b	15e64 <argp_failure@@Base+0x488>
   15e50:	subs	r5, r5, #1
   15e54:	add	r4, r4, #24
   15e58:	beq	15eb8 <argp_failure@@Base+0x4dc>
   15e5c:	ldr	r7, [r4, #12]
   15e60:	and	r2, r7, #8
   15e64:	cmp	r2, #0
   15e68:	bne	15e50 <argp_failure@@Base+0x474>
   15e6c:	ldr	r8, [r4, #4]
   15e70:	sub	r2, r8, #1
   15e74:	cmp	r2, #254	; 0xfe
   15e78:	bhi	15e50 <argp_failure@@Base+0x474>
   15e7c:	bl	110d8 <__ctype_b_loc@plt>
   15e80:	lsl	r2, r8, #1
   15e84:	ldr	r1, [r0]
   15e88:	ldrh	r2, [r1, r2]
   15e8c:	tst	r2, #16384	; 0x4000
   15e90:	beq	15e50 <argp_failure@@Base+0x474>
   15e94:	ldrb	r2, [sl]
   15e98:	cmp	r8, r2
   15e9c:	bne	15e50 <argp_failure@@Base+0x474>
   15ea0:	tst	r7, #2
   15ea4:	beq	167e8 <argp_failure@@Base+0xe0c>
   15ea8:	subs	r5, r5, #1
   15eac:	add	sl, sl, #1
   15eb0:	add	r4, r4, #24
   15eb4:	bne	15e5c <argp_failure@@Base+0x480>
   15eb8:	ldr	r4, [r6, #12]
   15ebc:	ldr	r8, [fp, #-124]	; 0xffffff84
   15ec0:	and	r4, r4, #8
   15ec4:	ldr	r3, [r9, #28]
   15ec8:	ldr	r1, [r9, #24]
   15ecc:	cmp	r4, #0
   15ed0:	ldr	r2, [r9, #16]
   15ed4:	sub	r3, r3, r1
   15ed8:	beq	16754 <argp_failure@@Base+0xd78>
   15edc:	cmp	r3, r2
   15ee0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ee4:	ldr	r4, [r3, #16]
   15ee8:	bhi	16a1c <argp_failure@@Base+0x1040>
   15eec:	str	r4, [r9, #12]
   15ef0:	ldr	r5, [r8, #4]
   15ef4:	cmp	r5, #0
   15ef8:	addne	r4, r6, #24
   15efc:	bne	15f10 <argp_failure@@Base+0x534>
   15f00:	b	15fa0 <argp_failure@@Base+0x5c4>
   15f04:	subs	r5, r5, #1
   15f08:	add	r4, r4, #24
   15f0c:	beq	15fa0 <argp_failure@@Base+0x5c4>
   15f10:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15f14:	cmp	r3, #0
   15f18:	beq	15f04 <argp_failure@@Base+0x528>
   15f1c:	ldr	r3, [r4, #-12]
   15f20:	tst	r3, #2
   15f24:	bne	15f04 <argp_failure@@Base+0x528>
   15f28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15f2c:	sub	r1, fp, #76	; 0x4c
   15f30:	ldr	r0, [r3, #16]
   15f34:	bl	1411c <argp_parse@@Base+0x2148>
   15f38:	ldr	sl, [r4, #-24]	; 0xffffffe8
   15f3c:	mov	r0, sl
   15f40:	bl	110fc <strlen@plt>
   15f44:	subs	r7, r0, #0
   15f48:	beq	15f04 <argp_failure@@Base+0x528>
   15f4c:	ldr	r2, [r9, #28]
   15f50:	ldr	lr, [r9, #32]
   15f54:	add	ip, r2, r7
   15f58:	cmp	lr, ip
   15f5c:	mov	r1, r7
   15f60:	mov	r0, r9
   15f64:	bcs	15f78 <argp_failure@@Base+0x59c>
   15f68:	bl	182c4 <argp_error@@Base+0x1490>
   15f6c:	cmp	r0, #0
   15f70:	beq	15f04 <argp_failure@@Base+0x528>
   15f74:	ldr	r2, [r9, #28]
   15f78:	mov	r0, r2
   15f7c:	mov	r1, sl
   15f80:	mov	r2, r7
   15f84:	bl	10fd0 <memcpy@plt>
   15f88:	ldr	r2, [r9, #28]
   15f8c:	subs	r5, r5, #1
   15f90:	add	r3, r2, r7
   15f94:	str	r3, [r9, #28]
   15f98:	add	r4, r4, #24
   15f9c:	bne	15f10 <argp_failure@@Base+0x534>
   15fa0:	ldr	r3, [r9, #28]
   15fa4:	ldr	r1, [r9, #24]
   15fa8:	ldr	r2, [r9, #16]
   15fac:	sub	r3, r3, r1
   15fb0:	cmp	r3, r2
   15fb4:	bhi	169d0 <argp_failure@@Base+0xff4>
   15fb8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15fbc:	mov	r3, #0
   15fc0:	cmp	r2, r3
   15fc4:	str	r3, [r9, #4]
   15fc8:	beq	168b8 <argp_failure@@Base+0xedc>
   15fcc:	ldr	r3, [r6, #12]
   15fd0:	tst	r3, #8
   15fd4:	bne	16000 <argp_failure@@Base+0x624>
   15fd8:	ldr	r4, [r6, #4]
   15fdc:	sub	r3, r4, #1
   15fe0:	cmp	r3, #254	; 0xfe
   15fe4:	bhi	16000 <argp_failure@@Base+0x624>
   15fe8:	bl	110d8 <__ctype_b_loc@plt>
   15fec:	lsl	r4, r4, #1
   15ff0:	ldr	r3, [r0]
   15ff4:	ldrh	r3, [r3, r4]
   15ff8:	tst	r3, #16384	; 0x4000
   15ffc:	bne	1600c <argp_failure@@Base+0x630>
   16000:	ldr	r3, [r6]
   16004:	cmp	r3, #0
   16008:	beq	16c80 <argp_failure@@Base+0x12a4>
   1600c:	ldr	r3, [r9, #28]
   16010:	ldr	r1, [r9, #24]
   16014:	ldr	r2, [r9, #16]
   16018:	sub	r3, r3, r1
   1601c:	cmp	r3, r2
   16020:	bhi	16868 <argp_failure@@Base+0xe8c>
   16024:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16028:	str	r3, [r9, #4]
   1602c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16030:	add	r8, r8, #28
   16034:	subs	r3, r3, #1
   16038:	str	r3, [fp, #-108]	; 0xffffff94
   1603c:	ldr	r3, [fp, #-120]	; 0xffffff88
   16040:	str	r3, [r9, #12]
   16044:	bne	15d80 <argp_failure@@Base+0x3a4>
   16048:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1604c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   16050:	cmp	r3, #0
   16054:	beq	16134 <argp_failure@@Base+0x758>
   16058:	ldr	r3, [sl, #4]
   1605c:	cmp	r3, #0
   16060:	beq	16134 <argp_failure@@Base+0x758>
   16064:	ldr	r3, [fp, #-104]	; 0xffffff98
   16068:	ldr	r1, [pc, #2956]	; 16bfc <argp_failure@@Base+0x1220>
   1606c:	cmp	r3, #0
   16070:	ldr	r0, [pc, #2952]	; 16c00 <argp_failure@@Base+0x1224>
   16074:	ldrne	r2, [r3]
   16078:	ldreq	r2, [fp, #-104]	; 0xffffff98
   1607c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16080:	bl	13ecc <argp_parse@@Base+0x1ef8>
   16084:	subs	r4, r0, #0
   16088:	beq	16134 <argp_failure@@Base+0x758>
   1608c:	ldrb	r3, [r4]
   16090:	cmp	r3, #0
   16094:	beq	16128 <argp_failure@@Base+0x74c>
   16098:	ldr	r3, [r9, #28]
   1609c:	ldr	r2, [r9, #32]
   160a0:	cmp	r3, r2
   160a4:	bcs	16d44 <argp_failure@@Base+0x1368>
   160a8:	add	r1, r3, #1
   160ac:	mov	r2, #10
   160b0:	str	r1, [r9, #28]
   160b4:	strb	r2, [r3]
   160b8:	mov	r0, r4
   160bc:	bl	110fc <strlen@plt>
   160c0:	subs	r5, r0, #0
   160c4:	beq	16d20 <argp_failure@@Base+0x1344>
   160c8:	ldr	r0, [r9, #28]
   160cc:	ldr	r2, [r9, #32]
   160d0:	add	r3, r0, r5
   160d4:	cmp	r2, r3
   160d8:	bcs	160f4 <argp_failure@@Base+0x718>
   160dc:	mov	r1, r5
   160e0:	mov	r0, r9
   160e4:	bl	182c4 <argp_error@@Base+0x1490>
   160e8:	cmp	r0, #0
   160ec:	beq	16d20 <argp_failure@@Base+0x1344>
   160f0:	ldr	r0, [r9, #28]
   160f4:	mov	r2, r5
   160f8:	mov	r1, r4
   160fc:	bl	10fd0 <memcpy@plt>
   16100:	ldr	r3, [r9, #28]
   16104:	add	r3, r3, r5
   16108:	str	r3, [r9, #28]
   1610c:	ldr	r2, [r9, #32]
   16110:	cmp	r2, r3
   16114:	bls	16d28 <argp_failure@@Base+0x134c>
   16118:	add	r1, r3, #1
   1611c:	mov	r2, #10
   16120:	str	r1, [r9, #28]
   16124:	strb	r2, [r3]
   16128:	ldr	r3, [pc, #2768]	; 16c00 <argp_failure@@Base+0x1224>
   1612c:	cmp	r4, r3
   16130:	bne	16c74 <argp_failure@@Base+0x1298>
   16134:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16138:	mov	r4, #1
   1613c:	tst	r3, #32
   16140:	beq	15c8c <argp_failure@@Base+0x2b0>
   16144:	mov	r3, #0
   16148:	str	r3, [sp]
   1614c:	str	r9, [sp, #4]
   16150:	mov	r3, r4
   16154:	ldr	r1, [fp, #-104]	; 0xffffff98
   16158:	ldr	r0, [fp, #-112]	; 0xffffff90
   1615c:	mov	r2, #1
   16160:	bl	142c8 <argp_parse@@Base+0x22f4>
   16164:	orr	r4, r4, r0
   16168:	b	15c8c <argp_failure@@Base+0x2b0>
   1616c:	ldr	r0, [pc, #2704]	; 16c04 <argp_failure@@Base+0x1228>
   16170:	bl	11060 <getenv@plt>
   16174:	mov	lr, sl
   16178:	sub	r3, fp, #76	; 0x4c
   1617c:	mov	ip, r3
   16180:	str	r3, [fp, #-100]	; 0xffffff9c
   16184:	mov	r6, r0
   16188:	ldm	lr!, {r0, r1, r2, r3}
   1618c:	cmp	r6, #0
   16190:	stmia	ip!, {r0, r1, r2, r3}
   16194:	ldm	lr!, {r0, r1, r2, r3}
   16198:	stmia	ip!, {r0, r1, r2, r3}
   1619c:	ldm	lr, {r0, r1}
   161a0:	stm	ip, {r0, r1}
   161a4:	beq	15c24 <argp_failure@@Base+0x248>
   161a8:	ldrb	r9, [r6]
   161ac:	ldr	r8, [pc, #2644]	; 16c08 <argp_failure@@Base+0x122c>
   161b0:	cmp	r9, #0
   161b4:	beq	16308 <argp_failure@@Base+0x92c>
   161b8:	bl	110d8 <__ctype_b_loc@plt>
   161bc:	mov	r5, r0
   161c0:	ldr	r1, [r0]
   161c4:	b	161cc <argp_failure@@Base+0x7f0>
   161c8:	ldrb	r9, [r6, #1]!
   161cc:	lsl	r3, r9, #1
   161d0:	ldrh	r3, [r1, r3]
   161d4:	tst	r3, #8192	; 0x2000
   161d8:	bne	161c8 <argp_failure@@Base+0x7ec>
   161dc:	ands	r2, r3, #1024	; 0x400
   161e0:	beq	16300 <argp_failure@@Base+0x924>
   161e4:	cmp	r9, #95	; 0x5f
   161e8:	cmpne	r9, #45	; 0x2d
   161ec:	lsl	r3, r3, #28
   161f0:	moveq	r7, #1
   161f4:	movne	r7, #0
   161f8:	orrs	r3, r7, r3, lsr #31
   161fc:	beq	16abc <argp_failure@@Base+0x10e0>
   16200:	mov	r4, r6
   16204:	ldrb	r3, [r4, #1]!
   16208:	cmp	r3, #95	; 0x5f
   1620c:	cmpne	r3, #45	; 0x2d
   16210:	lsl	r2, r3, #1
   16214:	moveq	r0, #1
   16218:	ldrh	r2, [r1, r2]
   1621c:	movne	r0, #0
   16220:	lsl	ip, r2, #28
   16224:	orrs	r0, r0, ip, lsr #31
   16228:	bne	16204 <argp_failure@@Base+0x828>
   1622c:	tst	r2, #8192	; 0x2000
   16230:	sub	r7, r4, r6
   16234:	beq	1624c <argp_failure@@Base+0x870>
   16238:	ldrb	r3, [r4, #1]!
   1623c:	lsl	r2, r3, #1
   16240:	ldrh	r2, [r1, r2]
   16244:	tst	r2, #8192	; 0x2000
   16248:	bne	16238 <argp_failure@@Base+0x85c>
   1624c:	cmp	r3, #44	; 0x2c
   16250:	cmpne	r3, #0
   16254:	beq	16368 <argp_failure@@Base+0x98c>
   16258:	cmp	r3, #61	; 0x3d
   1625c:	beq	166c4 <argp_failure@@Base+0xce8>
   16260:	ldrb	r3, [r4]
   16264:	lsl	r3, r3, #1
   16268:	ldrh	r3, [r1, r3]
   1626c:	tst	r3, #2048	; 0x800
   16270:	bne	16664 <argp_failure@@Base+0xc88>
   16274:	ldr	r3, [fp, #-108]	; 0xffffff94
   16278:	mov	r9, r3
   1627c:	str	r3, [fp, #-116]	; 0xffffff8c
   16280:	ldr	r5, [pc, #2436]	; 16c0c <argp_failure@@Base+0x1230>
   16284:	b	16294 <argp_failure@@Base+0x8b8>
   16288:	add	r5, r5, #16
   1628c:	cmp	r5, r8
   16290:	beq	16b24 <argp_failure@@Base+0x1148>
   16294:	mov	r0, r5
   16298:	bl	110fc <strlen@plt>
   1629c:	cmp	r0, r7
   162a0:	bne	16288 <argp_failure@@Base+0x8ac>
   162a4:	mov	r2, r7
   162a8:	mov	r1, r5
   162ac:	mov	r0, r6
   162b0:	bl	111e0 <strncmp@plt>
   162b4:	cmp	r0, #0
   162b8:	bne	16288 <argp_failure@@Base+0x8ac>
   162bc:	cmp	r9, #0
   162c0:	beq	162d0 <argp_failure@@Base+0x8f4>
   162c4:	ldrb	r1, [r5, #14]
   162c8:	cmp	r1, #0
   162cc:	beq	16d04 <argp_failure@@Base+0x1328>
   162d0:	ldrb	r3, [r5, #15]
   162d4:	sub	r2, fp, #36	; 0x24
   162d8:	add	r3, r2, r3
   162dc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   162e0:	str	r2, [r3, #-40]	; 0xffffffd8
   162e4:	cmp	r5, r8
   162e8:	beq	16b24 <argp_failure@@Base+0x1148>
   162ec:	ldrb	r9, [r4]
   162f0:	cmp	r9, #44	; 0x2c
   162f4:	beq	16a04 <argp_failure@@Base+0x1028>
   162f8:	mov	r6, r4
   162fc:	b	161b0 <argp_failure@@Base+0x7d4>
   16300:	cmp	r9, #0
   16304:	bne	16c5c <argp_failure@@Base+0x1280>
   16308:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1630c:	ldr	r1, [pc, #2296]	; 16c0c <argp_failure@@Base+0x1230>
   16310:	add	r3, r1, #16
   16314:	cmp	r3, r8
   16318:	mov	r1, r3
   1631c:	beq	16a60 <argp_failure@@Base+0x1084>
   16320:	ldrb	r2, [r3, #14]
   16324:	cmp	r2, #0
   16328:	bne	16310 <argp_failure@@Base+0x934>
   1632c:	ldrb	r0, [r3, #15]
   16330:	sub	ip, fp, #36	; 0x24
   16334:	cmp	r0, #32
   16338:	add	ip, ip, r0
   1633c:	beq	16310 <argp_failure@@Base+0x934>
   16340:	ldr	r0, [ip, #-40]	; 0xffffffd8
   16344:	cmp	r0, lr
   16348:	blt	16310 <argp_failure@@Base+0x934>
   1634c:	ldr	r1, [pc, #2236]	; 16c10 <argp_failure@@Base+0x1234>
   16350:	ldr	r0, [fp, #-104]	; 0xffffff98
   16354:	stm	sp, {r1, r3}
   16358:	ldr	r3, [pc, #2228]	; 16c14 <argp_failure@@Base+0x1238>
   1635c:	mov	r1, r2
   16360:	bl	159dc <argp_failure@@Base>
   16364:	b	15c24 <argp_failure@@Base+0x248>
   16368:	cmp	r9, #110	; 0x6e
   1636c:	beq	166f4 <argp_failure@@Base+0xd18>
   16370:	mov	r9, #1
   16374:	str	r9, [fp, #-116]	; 0xffffff8c
   16378:	b	16280 <argp_failure@@Base+0x8a4>
   1637c:	ldr	r3, [fp, #4]
   16380:	ldr	r1, [pc, #2192]	; 16c18 <argp_failure@@Base+0x123c>
   16384:	mov	r2, r3
   16388:	mov	r0, r9
   1638c:	bl	182e4 <argp_error@@Base+0x14b0>
   16390:	mov	r4, #1
   16394:	b	15c74 <argp_failure@@Base+0x298>
   16398:	mov	r2, #1
   1639c:	mov	r3, #0
   163a0:	stm	sp, {r2, r9}
   163a4:	ldr	r1, [fp, #-104]	; 0xffffff98
   163a8:	mov	r2, r3
   163ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   163b0:	bl	142c8 <argp_parse@@Base+0x22f4>
   163b4:	orr	r4, r4, r0
   163b8:	b	15c68 <argp_failure@@Base+0x28c>
   163bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   163c0:	mov	r4, #1
   163c4:	mov	r6, r4
   163c8:	ldr	r1, [r3, #16]
   163cc:	ldr	r0, [r3, #8]
   163d0:	bl	157cc <argp_parse@@Base+0x37f8>
   163d4:	mov	r1, #0
   163d8:	add	r3, r0, #14
   163dc:	bic	r3, r3, #7
   163e0:	sub	sp, sp, r3
   163e4:	add	r7, sp, #8
   163e8:	mov	r2, r0
   163ec:	mov	r0, r7
   163f0:	bl	11138 <memset@plt>
   163f4:	sub	r3, fp, #76	; 0x4c
   163f8:	str	r3, [fp, #-100]	; 0xffffff9c
   163fc:	ldr	r8, [fp, #-136]	; 0xffffff78
   16400:	str	r7, [fp, #-108]	; 0xffffff94
   16404:	b	16520 <argp_failure@@Base+0xb44>
   16408:	cmp	r4, #0
   1640c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16410:	ldr	r5, [r9, #12]
   16414:	ldrne	r2, [pc, #2048]	; 16c1c <argp_failure@@Base+0x1240>
   16418:	str	r7, [r9, #12]
   1641c:	ldreq	r2, [pc, #2044]	; 16c20 <argp_failure@@Base+0x1244>
   16420:	str	r3, [fp, #-76]	; 0xffffffb4
   16424:	ldr	r1, [pc, #2040]	; 16c24 <argp_failure@@Base+0x1248>
   16428:	ldr	r3, [fp, #4]
   1642c:	mov	r0, r9
   16430:	bl	182e4 <argp_error@@Base+0x14b0>
   16434:	ldr	r3, [r9, #28]
   16438:	ldr	r1, [r9, #24]
   1643c:	ldr	r2, [r9, #16]
   16440:	sub	r3, r3, r1
   16444:	cmp	r3, r2
   16448:	ldr	r7, [sl, #28]
   1644c:	bhi	165b4 <argp_failure@@Base+0xbd8>
   16450:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16454:	ldr	r4, [r9, #4]
   16458:	tst	r3, #2
   1645c:	str	r7, [r9, #4]
   16460:	beq	16598 <argp_failure@@Base+0xbbc>
   16464:	ldr	r3, [r8, #4]
   16468:	cmp	r3, #0
   1646c:	beq	164bc <argp_failure@@Base+0xae0>
   16470:	ldr	ip, [r9, #28]
   16474:	ldr	r2, [r9, #32]
   16478:	add	r3, ip, #12
   1647c:	cmp	r2, r3
   16480:	bcs	1649c <argp_failure@@Base+0xac0>
   16484:	mov	r1, #12
   16488:	mov	r0, r9
   1648c:	bl	182c4 <argp_error@@Base+0x1490>
   16490:	cmp	r0, #0
   16494:	beq	164bc <argp_failure@@Base+0xae0>
   16498:	ldr	ip, [r9, #28]
   1649c:	ldr	r3, [pc, #1924]	; 16c28 <argp_failure@@Base+0x124c>
   164a0:	ldm	r3!, {r0, r1, r2}
   164a4:	str	r0, [ip]
   164a8:	str	r1, [ip, #4]
   164ac:	str	r2, [ip, #8]
   164b0:	ldr	r3, [r9, #28]
   164b4:	add	r3, r3, #12
   164b8:	str	r3, [r9, #28]
   164bc:	mov	r3, r6
   164c0:	ldr	r1, [fp, #-104]	; 0xffffff98
   164c4:	str	r9, [sp]
   164c8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   164cc:	ldr	r0, [fp, #-112]	; 0xffffff90
   164d0:	bl	14e04 <argp_parse@@Base+0x2e30>
   164d4:	ldr	r3, [r9, #28]
   164d8:	ldr	r1, [r9, #24]
   164dc:	sub	r1, r3, r1
   164e0:	mov	r7, r0
   164e4:	ldr	r0, [r9, #16]
   164e8:	cmp	r1, r0
   164ec:	strls	r5, [r9, #12]
   164f0:	bhi	16564 <argp_failure@@Base+0xb88>
   164f4:	ldr	r1, [r9, #32]
   164f8:	str	r4, [r9, #4]
   164fc:	cmp	r1, r3
   16500:	bls	16548 <argp_failure@@Base+0xb6c>
   16504:	add	r1, r3, #1
   16508:	mov	r2, #10
   1650c:	str	r1, [r9, #28]
   16510:	strb	r2, [r3]
   16514:	cmp	r7, #0
   16518:	mov	r4, #0
   1651c:	beq	165c0 <argp_failure@@Base+0xbe4>
   16520:	ldr	r3, [r9, #28]
   16524:	ldr	r1, [r9, #24]
   16528:	ldr	r2, [r9, #16]
   1652c:	sub	r3, r3, r1
   16530:	cmp	r3, r2
   16534:	ldr	r7, [sl, #28]
   16538:	bls	16408 <argp_failure@@Base+0xa2c>
   1653c:	mov	r0, r9
   16540:	bl	17c34 <argp_error@@Base+0xe00>
   16544:	b	16408 <argp_failure@@Base+0xa2c>
   16548:	mov	r1, r6
   1654c:	mov	r0, r9
   16550:	bl	182c4 <argp_error@@Base+0x1490>
   16554:	cmp	r0, #0
   16558:	beq	16514 <argp_failure@@Base+0xb38>
   1655c:	ldr	r3, [r9, #28]
   16560:	b	16504 <argp_failure@@Base+0xb28>
   16564:	mov	r0, r9
   16568:	bl	17c34 <argp_error@@Base+0xe00>
   1656c:	ldr	r3, [r9, #28]
   16570:	ldr	r1, [r9, #24]
   16574:	ldr	r0, [r9, #16]
   16578:	sub	r1, r3, r1
   1657c:	cmp	r1, r0
   16580:	str	r5, [r9, #12]
   16584:	bls	164f4 <argp_failure@@Base+0xb18>
   16588:	mov	r0, r9
   1658c:	bl	17c34 <argp_error@@Base+0xe00>
   16590:	ldr	r3, [r9, #28]
   16594:	b	164f4 <argp_failure@@Base+0xb18>
   16598:	mov	r1, r9
   1659c:	mov	r0, r8
   165a0:	bl	15824 <argp_parse@@Base+0x3850>
   165a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   165a8:	orr	r3, r3, #2
   165ac:	str	r3, [fp, #-96]	; 0xffffffa0
   165b0:	b	164bc <argp_failure@@Base+0xae0>
   165b4:	mov	r0, r9
   165b8:	bl	17c34 <argp_error@@Base+0xe00>
   165bc:	b	16450 <argp_failure@@Base+0xa74>
   165c0:	mov	r4, #1
   165c4:	b	15c5c <argp_failure@@Base+0x280>
   165c8:	mov	r1, #0
   165cc:	ldr	r0, [fp, #-112]	; 0xffffff90
   165d0:	bl	15054 <argp_parse@@Base+0x3080>
   165d4:	ldr	r2, [pc, #1616]	; 16c2c <argp_failure@@Base+0x1250>
   165d8:	ldr	r4, [r0, #4]
   165dc:	ldr	r5, [r0]
   165e0:	mov	r1, r4
   165e4:	mov	r6, r0
   165e8:	str	r0, [fp, #-136]	; 0xffffff78
   165ec:	mov	r0, r5
   165f0:	bl	15744 <argp_parse@@Base+0x3770>
   165f4:	ldr	r2, [pc, #1588]	; 16c30 <argp_failure@@Base+0x1254>
   165f8:	cmp	r0, #0
   165fc:	mvnne	r3, #0
   16600:	strne	r3, [r0, #12]
   16604:	movne	r3, r6
   16608:	mov	r0, r5
   1660c:	ldrne	r4, [r3, #4]
   16610:	mov	r1, r4
   16614:	bl	15744 <argp_parse@@Base+0x3770>
   16618:	cmp	r0, #0
   1661c:	mvnne	r3, #0
   16620:	strne	r3, [r0, #12]
   16624:	ldrne	r3, [fp, #-136]	; 0xffffff78
   16628:	ldrne	r4, [r3, #4]
   1662c:	cmp	r4, #0
   16630:	beq	15c50 <argp_failure@@Base+0x274>
   16634:	mov	r3, r5
   16638:	mov	r1, #0
   1663c:	str	r1, [r3, #24]
   16640:	add	r1, r1, #1
   16644:	cmp	r1, r4
   16648:	add	r3, r3, #28
   1664c:	bne	1663c <argp_failure@@Base+0xc60>
   16650:	mov	r0, r5
   16654:	ldr	r3, [pc, #1496]	; 16c34 <argp_failure@@Base+0x1258>
   16658:	mov	r2, #28
   1665c:	bl	111bc <qsort@plt>
   16660:	b	15c50 <argp_failure@@Base+0x274>
   16664:	mov	r2, #10
   16668:	mov	r1, #0
   1666c:	mov	r0, r4
   16670:	bl	10f7c <strtol@plt>
   16674:	ldrb	r3, [r4]
   16678:	ldr	r2, [r5]
   1667c:	lsl	r3, r3, #1
   16680:	ldrh	r3, [r2, r3]
   16684:	tst	r3, #2048	; 0x800
   16688:	str	r0, [fp, #-116]	; 0xffffff8c
   1668c:	beq	166b4 <argp_failure@@Base+0xcd8>
   16690:	ldrb	r3, [r4, #1]!
   16694:	lsl	r3, r3, #1
   16698:	ldrh	r3, [r2, r3]
   1669c:	tst	r3, #2048	; 0x800
   166a0:	bne	16690 <argp_failure@@Base+0xcb4>
   166a4:	b	166b4 <argp_failure@@Base+0xcd8>
   166a8:	ldrb	r3, [r4, #1]!
   166ac:	lsl	r3, r3, #1
   166b0:	ldrh	r3, [r2, r3]
   166b4:	tst	r3, #8192	; 0x2000
   166b8:	bne	166a8 <argp_failure@@Base+0xccc>
   166bc:	ldr	r9, [fp, #-108]	; 0xffffff94
   166c0:	b	16280 <argp_failure@@Base+0x8a4>
   166c4:	ldrb	r3, [r4, #1]
   166c8:	add	r4, r4, #1
   166cc:	lsl	r3, r3, #1
   166d0:	ldrh	r3, [r1, r3]
   166d4:	tst	r3, #8192	; 0x2000
   166d8:	beq	1626c <argp_failure@@Base+0x890>
   166dc:	ldrb	r3, [r4, #1]!
   166e0:	lsl	r3, r3, #1
   166e4:	ldrh	r3, [r1, r3]
   166e8:	tst	r3, #8192	; 0x2000
   166ec:	bne	166dc <argp_failure@@Base+0xd00>
   166f0:	b	1626c <argp_failure@@Base+0x890>
   166f4:	ldrb	r3, [r6, #1]
   166f8:	cmp	r3, #111	; 0x6f
   166fc:	bne	16370 <argp_failure@@Base+0x994>
   16700:	ldrb	r3, [r6, #2]
   16704:	cmp	r3, #45	; 0x2d
   16708:	bne	16370 <argp_failure@@Base+0x994>
   1670c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16710:	add	r6, r6, #3
   16714:	sub	r7, r7, #3
   16718:	str	r3, [fp, #-116]	; 0xffffff8c
   1671c:	mov	r9, #1
   16720:	b	16280 <argp_failure@@Base+0x8a4>
   16724:	mov	r3, #1
   16728:	str	r3, [fp, #-128]	; 0xffffff80
   1672c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16730:	cmp	lr, r5
   16734:	ldr	r5, [r3, #8]
   16738:	bls	15e34 <argp_failure@@Base+0x458>
   1673c:	mov	r0, r9
   16740:	bl	17c34 <argp_error@@Base+0xe00>
   16744:	ldr	r7, [r6, #12]
   16748:	and	r2, r7, #8
   1674c:	mov	r4, r2
   16750:	b	15e34 <argp_failure@@Base+0x458>
   16754:	cmp	r3, r2
   16758:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1675c:	ldr	r4, [r3, #12]
   16760:	bhi	16a10 <argp_failure@@Base+0x1034>
   16764:	str	r4, [r9, #12]
   16768:	ldr	r5, [r8, #4]
   1676c:	cmp	r5, #0
   16770:	beq	15fa0 <argp_failure@@Base+0x5c4>
   16774:	add	r4, r6, #24
   16778:	ldr	r7, [fp, #-100]	; 0xffffff9c
   1677c:	b	1678c <argp_failure@@Base+0xdb0>
   16780:	subs	r5, r5, #1
   16784:	add	r4, r4, #24
   16788:	beq	15fa0 <argp_failure@@Base+0x5c4>
   1678c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16790:	cmp	r3, #0
   16794:	beq	16780 <argp_failure@@Base+0xda4>
   16798:	ldr	r3, [r4, #-12]
   1679c:	tst	r3, #2
   167a0:	bne	16780 <argp_failure@@Base+0xda4>
   167a4:	sub	r1, fp, #76	; 0x4c
   167a8:	ldr	r0, [r7, #12]
   167ac:	bl	1411c <argp_parse@@Base+0x2148>
   167b0:	ldr	r2, [r4, #-24]	; 0xffffffe8
   167b4:	ldr	r1, [pc, #1148]	; 16c38 <argp_failure@@Base+0x125c>
   167b8:	mov	r0, r9
   167bc:	bl	182e4 <argp_error@@Base+0x14b0>
   167c0:	ldr	r3, [r6, #8]
   167c4:	ldr	r1, [pc, #1136]	; 16c3c <argp_failure@@Base+0x1260>
   167c8:	subs	r2, r3, #0
   167cc:	mov	r0, r9
   167d0:	beq	16780 <argp_failure@@Base+0xda4>
   167d4:	ldr	ip, [r6, #12]
   167d8:	tst	ip, #1
   167dc:	ldrne	r1, [pc, #1116]	; 16c40 <argp_failure@@Base+0x1264>
   167e0:	bl	182e4 <argp_error@@Base+0x14b0>
   167e4:	b	16780 <argp_failure@@Base+0xda4>
   167e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   167ec:	sub	r1, fp, #76	; 0x4c
   167f0:	ldr	r0, [r3, #8]
   167f4:	bl	1411c <argp_parse@@Base+0x2148>
   167f8:	ldr	r3, [r9, #28]
   167fc:	ldr	r2, [r9, #32]
   16800:	cmp	r3, r2
   16804:	bcs	16a44 <argp_failure@@Base+0x1068>
   16808:	add	r2, r3, #1
   1680c:	str	r2, [r9, #28]
   16810:	mov	r2, #45	; 0x2d
   16814:	strb	r2, [r3]
   16818:	ldr	r3, [r9, #28]
   1681c:	ldr	r2, [r9, #32]
   16820:	ldrb	r7, [sl]
   16824:	cmp	r3, r2
   16828:	bcs	16a28 <argp_failure@@Base+0x104c>
   1682c:	add	r2, r3, #1
   16830:	str	r2, [r9, #28]
   16834:	strb	r7, [r3]
   16838:	ldr	r3, [fp, #-128]	; 0xffffff80
   1683c:	cmp	r3, #0
   16840:	beq	169dc <argp_failure@@Base+0x1000>
   16844:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16848:	ldr	r3, [r3]
   1684c:	cmp	r3, #0
   16850:	bne	169dc <argp_failure@@Base+0x1000>
   16854:	ldr	r3, [r6, #8]
   16858:	cmp	r3, #0
   1685c:	movne	r3, #1
   16860:	strne	r3, [fp, #-80]	; 0xffffffb0
   16864:	b	15ea8 <argp_failure@@Base+0x4cc>
   16868:	mov	r0, r9
   1686c:	bl	17c34 <argp_error@@Base+0xe00>
   16870:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16874:	ldr	r3, [r9, #28]
   16878:	ldr	r1, [r9, #24]
   1687c:	str	r2, [r9, #4]
   16880:	ldr	r2, [r9, #16]
   16884:	sub	r3, r3, r1
   16888:	cmp	r3, r2
   1688c:	bls	1602c <argp_failure@@Base+0x650>
   16890:	mov	r0, r9
   16894:	bl	17c34 <argp_error@@Base+0xe00>
   16898:	b	1602c <argp_failure@@Base+0x650>
   1689c:	mov	r0, r9
   168a0:	bl	17c34 <argp_error@@Base+0xe00>
   168a4:	ldr	lr, [r9, #28]
   168a8:	ldr	r2, [r9, #24]
   168ac:	ldr	r5, [r9, #16]
   168b0:	sub	lr, lr, r2
   168b4:	b	15da0 <argp_failure@@Base+0x3c4>
   168b8:	ldr	r4, [r6, #16]
   168bc:	ldr	r1, [r6, #4]
   168c0:	mov	r0, r4
   168c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   168c8:	ldr	r2, [r8, #20]
   168cc:	bl	13ecc <argp_parse@@Base+0x1ef8>
   168d0:	subs	r5, r0, #0
   168d4:	beq	1698c <argp_failure@@Base+0xfb0>
   168d8:	ldrb	r3, [r5]
   168dc:	cmp	r3, #0
   168e0:	beq	1697c <argp_failure@@Base+0xfa0>
   168e4:	ldr	r3, [r9, #28]
   168e8:	ldr	r1, [r9, #24]
   168ec:	ldr	r2, [r9, #16]
   168f0:	sub	r3, r3, r1
   168f4:	cmp	r3, r2
   168f8:	bhi	16b7c <argp_failure@@Base+0x11a0>
   168fc:	ldr	r7, [r9, #20]
   16900:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16904:	bic	r7, r7, r7, asr #31
   16908:	ldr	r6, [r3, #20]
   1690c:	mov	r3, r6
   16910:	str	r6, [r9, #4]
   16914:	add	r2, r6, #3
   16918:	cmp	r2, r7
   1691c:	str	r3, [r9, #12]
   16920:	bcs	16acc <argp_failure@@Base+0x10f0>
   16924:	ldr	r3, [r9, #28]
   16928:	ldr	r2, [r9, #32]
   1692c:	cmp	r3, r2
   16930:	bcs	16ccc <argp_failure@@Base+0x12f0>
   16934:	add	r1, r3, #1
   16938:	mov	r2, #10
   1693c:	str	r1, [r9, #28]
   16940:	strb	r2, [r3]
   16944:	mov	r0, r5
   16948:	bl	110fc <strlen@plt>
   1694c:	subs	r6, r0, #0
   16950:	beq	1697c <argp_failure@@Base+0xfa0>
   16954:	ldr	r0, [r9, #28]
   16958:	ldr	r2, [r9, #32]
   1695c:	add	r3, r0, r6
   16960:	cmp	r2, r3
   16964:	bcs	16b60 <argp_failure@@Base+0x1184>
   16968:	mov	r1, r6
   1696c:	mov	r0, r9
   16970:	bl	182c4 <argp_error@@Base+0x1490>
   16974:	cmp	r0, #0
   16978:	bne	16b5c <argp_failure@@Base+0x1180>
   1697c:	cmp	r4, r5
   16980:	beq	1698c <argp_failure@@Base+0xfb0>
   16984:	mov	r0, r5
   16988:	bl	12e6c <argp_parse@@Base+0xe98>
   1698c:	ldr	r3, [r9, #28]
   16990:	ldr	r2, [r9, #24]
   16994:	ldr	r1, [r9, #16]
   16998:	sub	r2, r3, r2
   1699c:	cmp	r2, r1
   169a0:	bhi	16aac <argp_failure@@Base+0x10d0>
   169a4:	ldr	r1, [r9, #32]
   169a8:	mov	r2, #0
   169ac:	cmp	r1, r3
   169b0:	str	r2, [r9, #4]
   169b4:	bls	16a90 <argp_failure@@Base+0x10b4>
   169b8:	add	r1, r3, #1
   169bc:	mov	r2, #10
   169c0:	str	r1, [r9, #28]
   169c4:	strb	r2, [r3]
   169c8:	str	r8, [fp, #-88]	; 0xffffffa8
   169cc:	b	1600c <argp_failure@@Base+0x630>
   169d0:	mov	r0, r9
   169d4:	bl	17c34 <argp_error@@Base+0xe00>
   169d8:	b	15fb8 <argp_failure@@Base+0x5dc>
   169dc:	ldr	r2, [r6, #8]
   169e0:	cmp	r2, #0
   169e4:	beq	15ea8 <argp_failure@@Base+0x4cc>
   169e8:	ldr	r3, [r6, #12]
   169ec:	mov	r0, r9
   169f0:	tst	r3, #1
   169f4:	ldrne	r1, [pc, #584]	; 16c44 <argp_failure@@Base+0x1268>
   169f8:	ldreq	r1, [pc, #584]	; 16c48 <argp_failure@@Base+0x126c>
   169fc:	bl	182e4 <argp_error@@Base+0x14b0>
   16a00:	b	15ea8 <argp_failure@@Base+0x4cc>
   16a04:	ldrb	r9, [r4, #1]
   16a08:	add	r4, r4, #1
   16a0c:	b	162f8 <argp_failure@@Base+0x91c>
   16a10:	mov	r0, r9
   16a14:	bl	17c34 <argp_error@@Base+0xe00>
   16a18:	b	16764 <argp_failure@@Base+0xd88>
   16a1c:	mov	r0, r9
   16a20:	bl	17c34 <argp_error@@Base+0xe00>
   16a24:	b	15eec <argp_failure@@Base+0x510>
   16a28:	mov	r1, #1
   16a2c:	mov	r0, r9
   16a30:	bl	182c4 <argp_error@@Base+0x1490>
   16a34:	cmp	r0, #0
   16a38:	beq	16838 <argp_failure@@Base+0xe5c>
   16a3c:	ldr	r3, [r9, #28]
   16a40:	b	1682c <argp_failure@@Base+0xe50>
   16a44:	mov	r1, #1
   16a48:	mov	r0, r9
   16a4c:	bl	182c4 <argp_error@@Base+0x1490>
   16a50:	cmp	r0, #0
   16a54:	beq	16818 <argp_failure@@Base+0xe3c>
   16a58:	ldr	r3, [r9, #28]
   16a5c:	b	16808 <argp_failure@@Base+0xe2c>
   16a60:	ldr	lr, [fp, #-100]	; 0xffffff9c
   16a64:	ldr	sl, [pc, #388]	; 16bf0 <argp_failure@@Base+0x1214>
   16a68:	mov	r4, #1
   16a6c:	ldm	lr!, {r0, r1, r2, r3}
   16a70:	mov	ip, sl
   16a74:	stmia	ip!, {r0, r1, r2, r3}
   16a78:	ldm	lr!, {r0, r1, r2, r3}
   16a7c:	stmia	ip!, {r0, r1, r2, r3}
   16a80:	ldm	lr, {r0, r1}
   16a84:	stm	ip, {r0, r1}
   16a88:	str	r4, [sl, #36]	; 0x24
   16a8c:	b	15c24 <argp_failure@@Base+0x248>
   16a90:	mov	r1, #1
   16a94:	mov	r0, r9
   16a98:	bl	182c4 <argp_error@@Base+0x1490>
   16a9c:	cmp	r0, #0
   16aa0:	beq	169c8 <argp_failure@@Base+0xfec>
   16aa4:	ldr	r3, [r9, #28]
   16aa8:	b	169b8 <argp_failure@@Base+0xfdc>
   16aac:	mov	r0, r9
   16ab0:	bl	17c34 <argp_error@@Base+0xe00>
   16ab4:	ldr	r3, [r9, #28]
   16ab8:	b	169a4 <argp_failure@@Base+0xfc8>
   16abc:	mov	r7, r3
   16ac0:	mov	r4, r6
   16ac4:	mov	r3, r9
   16ac8:	b	1624c <argp_failure@@Base+0x870>
   16acc:	cmp	r6, r7
   16ad0:	bhi	16cbc <argp_failure@@Base+0x12e0>
   16ad4:	ldr	r3, [r9, #28]
   16ad8:	ldr	r1, [r9, #32]
   16adc:	add	r2, r3, #3
   16ae0:	cmp	r1, r2
   16ae4:	bcs	16b00 <argp_failure@@Base+0x1124>
   16ae8:	mov	r1, #3
   16aec:	mov	r0, r9
   16af0:	bl	182c4 <argp_error@@Base+0x1490>
   16af4:	cmp	r0, #0
   16af8:	beq	16944 <argp_failure@@Base+0xf68>
   16afc:	ldr	r3, [r9, #28]
   16b00:	ldr	r2, [pc, #324]	; 16c4c <argp_failure@@Base+0x1270>
   16b04:	ldrh	r1, [r2]
   16b08:	ldrb	r2, [r2, #2]
   16b0c:	strh	r1, [r3]
   16b10:	strb	r2, [r3, #2]
   16b14:	ldr	r3, [r9, #28]
   16b18:	add	r3, r3, #3
   16b1c:	str	r3, [r9, #28]
   16b20:	b	16944 <argp_failure@@Base+0xf68>
   16b24:	mov	r2, #0
   16b28:	str	r6, [sp, #4]
   16b2c:	str	r7, [sp]
   16b30:	ldr	r3, [pc, #280]	; 16c50 <argp_failure@@Base+0x1274>
   16b34:	mov	r1, r2
   16b38:	ldr	r0, [fp, #-104]	; 0xffffff98
   16b3c:	bl	159dc <argp_failure@@Base>
   16b40:	b	162ec <argp_failure@@Base+0x910>
   16b44:	ldr	r3, [fp, #-136]	; 0xffffff78
   16b48:	ldr	r8, [r3]
   16b4c:	str	r4, [fp, #-88]	; 0xffffffa8
   16b50:	str	r4, [fp, #-84]	; 0xffffffac
   16b54:	str	r4, [fp, #-80]	; 0xffffffb0
   16b58:	b	15d7c <argp_failure@@Base+0x3a0>
   16b5c:	ldr	r0, [r9, #28]
   16b60:	mov	r2, r6
   16b64:	mov	r1, r5
   16b68:	bl	10fd0 <memcpy@plt>
   16b6c:	ldr	r3, [r9, #28]
   16b70:	add	r6, r3, r6
   16b74:	str	r6, [r9, #28]
   16b78:	b	1697c <argp_failure@@Base+0xfa0>
   16b7c:	mov	r0, r9
   16b80:	bl	17c34 <argp_error@@Base+0xe00>
   16b84:	ldr	r3, [r9, #28]
   16b88:	ldr	r1, [r9, #24]
   16b8c:	ldr	r2, [r9, #16]
   16b90:	ldr	r7, [r9, #20]
   16b94:	ldr	sl, [fp, #-100]	; 0xffffff9c
   16b98:	sub	r3, r3, r1
   16b9c:	cmp	r3, r2
   16ba0:	ldr	r6, [sl, #20]
   16ba4:	bic	r7, r7, r7, asr #31
   16ba8:	bls	1690c <argp_failure@@Base+0xf30>
   16bac:	mov	r0, r9
   16bb0:	bl	17c34 <argp_error@@Base+0xe00>
   16bb4:	ldr	r3, [r9, #28]
   16bb8:	ldr	r1, [r9, #24]
   16bbc:	ldr	r2, [r9, #16]
   16bc0:	sub	r3, r3, r1
   16bc4:	cmp	r3, r2
   16bc8:	ldr	r3, [sl, #20]
   16bcc:	str	r6, [r9, #4]
   16bd0:	movls	r6, r3
   16bd4:	bls	16914 <argp_failure@@Base+0xf38>
   16bd8:	mov	r0, r9
   16bdc:	str	r3, [fp, #-124]	; 0xffffff84
   16be0:	bl	17c34 <argp_error@@Base+0xe00>
   16be4:	ldr	r6, [sl, #20]
   16be8:	ldr	r3, [fp, #-124]	; 0xffffff84
   16bec:	b	16914 <argp_failure@@Base+0xf38>
   16bf0:	andeq	sl, r2, r8, lsl r2
   16bf4:	andeq	sl, r2, ip, lsr #5
   16bf8:			; <UNDEFINED> instruction: 0x000193b0
   16bfc:	andeq	r0, r0, #5
   16c00:	andeq	r9, r1, ip, lsr r3
   16c04:	strdeq	r9, [r1], -r8
   16c08:	andeq	r9, r1, r8, asr #1
   16c0c:	andeq	r9, r1, r8, lsr r0
   16c10:			; <UNDEFINED> instruction: 0x000192b4
   16c14:	andeq	r9, r1, r0, lsl #5
   16c18:	andeq	r9, r1, r4, ror #5
   16c1c:			; <UNDEFINED> instruction: 0x000192bc
   16c20:	andeq	r9, r1, ip, asr #5
   16c24:	andeq	r9, r1, r4, asr #5
   16c28:	ldrdeq	r9, [r1], -r4
   16c2c:			; <UNDEFINED> instruction: 0x00018bbc
   16c30:	muleq	r1, ip, fp
   16c34:	andeq	r4, r1, r4, lsl #18
   16c38:	andeq	r9, r1, r4, lsr #6
   16c3c:	andeq	r9, r1, r4, lsr r3
   16c40:	andeq	r9, r1, ip, lsr #6
   16c44:	andeq	r9, r1, ip, lsl r3
   16c48:	andeq	r8, r1, ip, ror #22
   16c4c:	andeq	r9, r1, r8, lsr r3
   16c50:	andeq	r9, r1, r8, lsr r2
   16c54:	andeq	r9, r1, r0, ror #4
   16c58:	andeq	r9, r1, r8, lsl #4
   16c5c:	str	r6, [sp]
   16c60:	ldr	r3, [pc, #-20]	; 16c54 <argp_failure@@Base+0x1278>
   16c64:	mov	r1, r2
   16c68:	ldr	r0, [fp, #-104]	; 0xffffff98
   16c6c:	bl	159dc <argp_failure@@Base>
   16c70:	b	16308 <argp_failure@@Base+0x92c>
   16c74:	mov	r0, r4
   16c78:	bl	12e6c <argp_parse@@Base+0xe98>
   16c7c:	b	16134 <argp_failure@@Base+0x758>
   16c80:	ldr	r0, [r6, #16]
   16c84:	sub	r2, fp, #76	; 0x4c
   16c88:	ldr	r1, [r8, #20]
   16c8c:	bl	13f10 <argp_parse@@Base+0x1f3c>
   16c90:	b	169c8 <argp_failure@@Base+0xfec>
   16c94:	mov	r1, #1
   16c98:	mov	r0, r9
   16c9c:	bl	182c4 <argp_error@@Base+0x1490>
   16ca0:	cmp	r0, #0
   16ca4:	beq	15cfc <argp_failure@@Base+0x320>
   16ca8:	ldr	r3, [r9, #28]
   16cac:	b	15cec <argp_failure@@Base+0x310>
   16cb0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16cb4:	bl	11030 <funlockfile@plt>
   16cb8:	b	15cbc <argp_failure@@Base+0x2e0>
   16cbc:	mov	r1, r6
   16cc0:	mov	r0, r9
   16cc4:	bl	13e38 <argp_parse@@Base+0x1e64>
   16cc8:	b	16944 <argp_failure@@Base+0xf68>
   16ccc:	mov	r1, #1
   16cd0:	mov	r0, r9
   16cd4:	bl	182c4 <argp_error@@Base+0x1490>
   16cd8:	cmp	r0, #0
   16cdc:	beq	16944 <argp_failure@@Base+0xf68>
   16ce0:	ldr	r3, [r9, #28]
   16ce4:	b	16934 <argp_failure@@Base+0xf58>
   16ce8:	mov	r1, #1
   16cec:	mov	r0, r9
   16cf0:	bl	182c4 <argp_error@@Base+0x1490>
   16cf4:	cmp	r0, #0
   16cf8:	beq	15d4c <argp_failure@@Base+0x370>
   16cfc:	ldr	r3, [r9, #28]
   16d00:	b	15d3c <argp_failure@@Base+0x360>
   16d04:	str	r6, [sp, #4]
   16d08:	str	r7, [sp]
   16d0c:	ldr	r3, [pc, #-188]	; 16c58 <argp_failure@@Base+0x127c>
   16d10:	mov	r2, #0
   16d14:	ldr	r0, [fp, #-104]	; 0xffffff98
   16d18:	bl	159dc <argp_failure@@Base>
   16d1c:	b	162e4 <argp_failure@@Base+0x908>
   16d20:	ldr	r3, [r9, #28]
   16d24:	b	1610c <argp_failure@@Base+0x730>
   16d28:	mov	r1, #1
   16d2c:	mov	r0, r9
   16d30:	bl	182c4 <argp_error@@Base+0x1490>
   16d34:	cmp	r0, #0
   16d38:	beq	16128 <argp_failure@@Base+0x74c>
   16d3c:	ldr	r3, [r9, #28]
   16d40:	b	16118 <argp_failure@@Base+0x73c>
   16d44:	mov	r1, #1
   16d48:	mov	r0, r9
   16d4c:	bl	182c4 <argp_error@@Base+0x1490>
   16d50:	cmp	r0, #0
   16d54:	beq	160b8 <argp_failure@@Base+0x6dc>
   16d58:	ldr	r3, [r9, #28]
   16d5c:	b	160a8 <argp_failure@@Base+0x6cc>

00016d60 <argp_help@@Base>:
   16d60:	push	{lr}		; (str lr, [sp, #-4]!)
   16d64:	sub	sp, sp, #12
   16d68:	str	r3, [sp]
   16d6c:	mov	r3, r2
   16d70:	mov	r2, r1
   16d74:	mov	r1, #0
   16d78:	bl	15be4 <argp_failure@@Base+0x208>
   16d7c:	add	sp, sp, #12
   16d80:	pop	{pc}		; (ldr pc, [sp], #4)

00016d84 <argp_state_help@@Base>:
   16d84:	push	{r4, r5, lr}
   16d88:	subs	r4, r0, #0
   16d8c:	sub	sp, sp, #12
   16d90:	mov	r5, r2
   16d94:	beq	16df4 <argp_state_help@@Base+0x70>
   16d98:	ldr	r3, [r4, #16]
   16d9c:	tst	r3, #2
   16da0:	bne	16dec <argp_state_help@@Base+0x68>
   16da4:	cmp	r1, #0
   16da8:	beq	16dec <argp_state_help@@Base+0x68>
   16dac:	tst	r3, #64	; 0x40
   16db0:	ldr	r3, [r4, #40]	; 0x28
   16db4:	orrne	r5, r5, #128	; 0x80
   16db8:	ldr	r0, [r4]
   16dbc:	mov	r2, r1
   16dc0:	str	r3, [sp]
   16dc4:	mov	r1, r4
   16dc8:	mov	r3, r5
   16dcc:	bl	15be4 <argp_failure@@Base+0x208>
   16dd0:	ldr	r3, [r4, #16]
   16dd4:	tst	r3, #32
   16dd8:	bne	16dec <argp_state_help@@Base+0x68>
   16ddc:	ands	r0, r5, #256	; 0x100
   16de0:	bne	16e20 <argp_state_help@@Base+0x9c>
   16de4:	tst	r5, #512	; 0x200
   16de8:	bne	16e1c <argp_state_help@@Base+0x98>
   16dec:	add	sp, sp, #12
   16df0:	pop	{r4, r5, pc}
   16df4:	cmp	r1, #0
   16df8:	beq	16dec <argp_state_help@@Base+0x68>
   16dfc:	ldr	r3, [pc, #40]	; 16e2c <argp_state_help@@Base+0xa8>
   16e00:	mov	r2, r1
   16e04:	mov	r1, r4
   16e08:	ldr	ip, [r3]
   16e0c:	mov	r3, r5
   16e10:	str	ip, [sp]
   16e14:	bl	15be4 <argp_failure@@Base+0x208>
   16e18:	b	16ddc <argp_state_help@@Base+0x58>
   16e1c:	bl	110e4 <exit@plt>
   16e20:	ldr	r3, [pc, #8]	; 16e30 <argp_state_help@@Base+0xac>
   16e24:	ldr	r0, [r3]
   16e28:	bl	110e4 <exit@plt>
   16e2c:	andeq	sl, r2, r8, asr r2
   16e30:	andeq	sl, r2, r0, asr r2

00016e34 <argp_error@@Base>:
   16e34:	push	{r1, r2, r3}
   16e38:	push	{r4, r5, lr}
   16e3c:	subs	r5, r0, #0
   16e40:	sub	sp, sp, #8
   16e44:	beq	16f14 <argp_error@@Base+0xe0>
   16e48:	ldr	r3, [r5, #16]
   16e4c:	tst	r3, #2
   16e50:	bne	16f04 <argp_error@@Base+0xd0>
   16e54:	ldr	r4, [r5, #44]	; 0x2c
   16e58:	cmp	r4, #0
   16e5c:	beq	16f04 <argp_error@@Base+0xd0>
   16e60:	mov	r0, r4
   16e64:	bl	11198 <flockfile@plt>
   16e68:	ldr	r0, [r5, #40]	; 0x28
   16e6c:	add	r3, sp, #24
   16e70:	str	r3, [sp, #4]
   16e74:	mov	r1, r4
   16e78:	bl	10f4c <fputs_unlocked@plt>
   16e7c:	ldr	r3, [r4, #20]
   16e80:	ldr	r2, [r4, #24]
   16e84:	cmp	r3, r2
   16e88:	addcc	r1, r3, #1
   16e8c:	movcc	r2, #58	; 0x3a
   16e90:	strcc	r1, [r4, #20]
   16e94:	strbcc	r2, [r3]
   16e98:	bcs	16f60 <argp_error@@Base+0x12c>
   16e9c:	ldr	r3, [r4, #20]
   16ea0:	ldr	r2, [r4, #24]
   16ea4:	cmp	r3, r2
   16ea8:	addcc	r1, r3, #1
   16eac:	movcc	r2, #32
   16eb0:	strcc	r1, [r4, #20]
   16eb4:	strbcc	r2, [r3]
   16eb8:	bcs	16f50 <argp_error@@Base+0x11c>
   16ebc:	ldr	r1, [sp, #20]
   16ec0:	ldr	r2, [sp, #4]
   16ec4:	mov	r0, r4
   16ec8:	bl	11174 <vfprintf@plt>
   16ecc:	ldr	r3, [r4, #20]
   16ed0:	ldr	r2, [r4, #24]
   16ed4:	cmp	r3, r2
   16ed8:	addcc	r1, r3, #1
   16edc:	movcc	r2, #10
   16ee0:	strcc	r1, [r4, #20]
   16ee4:	strbcc	r2, [r3]
   16ee8:	bcs	16f40 <argp_error@@Base+0x10c>
   16eec:	mov	r0, r5
   16ef0:	mov	r2, #260	; 0x104
   16ef4:	mov	r1, r4
   16ef8:	bl	16d84 <argp_state_help@@Base>
   16efc:	mov	r0, r4
   16f00:	bl	11030 <funlockfile@plt>
   16f04:	add	sp, sp, #8
   16f08:	pop	{r4, r5, lr}
   16f0c:	add	sp, sp, #12
   16f10:	bx	lr
   16f14:	ldr	r3, [pc, #84]	; 16f70 <argp_error@@Base+0x13c>
   16f18:	ldr	r4, [r3]
   16f1c:	cmp	r4, #0
   16f20:	beq	16f04 <argp_error@@Base+0xd0>
   16f24:	mov	r0, r4
   16f28:	bl	11198 <flockfile@plt>
   16f2c:	ldr	r2, [pc, #64]	; 16f74 <argp_error@@Base+0x140>
   16f30:	add	r3, sp, #24
   16f34:	str	r3, [sp, #4]
   16f38:	ldr	r0, [r2]
   16f3c:	b	16e74 <argp_error@@Base+0x40>
   16f40:	mov	r1, #10
   16f44:	mov	r0, r4
   16f48:	bl	1115c <__overflow@plt>
   16f4c:	b	16eec <argp_error@@Base+0xb8>
   16f50:	mov	r1, #32
   16f54:	mov	r0, r4
   16f58:	bl	1115c <__overflow@plt>
   16f5c:	b	16ebc <argp_error@@Base+0x88>
   16f60:	mov	r1, #58	; 0x3a
   16f64:	mov	r0, r4
   16f68:	bl	1115c <__overflow@plt>
   16f6c:	b	16e9c <argp_error@@Base+0x68>
   16f70:	andeq	sl, r2, r0, ror #4
   16f74:	andeq	sl, r2, r8, asr r2
   16f78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16f7c:	ldr	r4, [r1, #32]
   16f80:	ldr	r8, [r1, #28]
   16f84:	ldr	r7, [r1]
   16f88:	add	r6, r0, r4, lsl #2
   16f8c:	mov	r2, r8
   16f90:	mov	r5, r7
   16f94:	cmp	r5, r4
   16f98:	movle	r3, #0
   16f9c:	movgt	r3, #1
   16fa0:	cmp	r2, r4
   16fa4:	movge	r3, #0
   16fa8:	cmp	r3, #0
   16fac:	beq	17020 <argp_error@@Base+0x1ec>
   16fb0:	sub	r3, r5, r4
   16fb4:	sub	sl, r4, r2
   16fb8:	cmp	r3, sl
   16fbc:	ble	16ff0 <argp_error@@Base+0x1bc>
   16fc0:	sub	r5, r5, sl
   16fc4:	add	sl, sl, r2
   16fc8:	add	ip, r0, r5, lsl #2
   16fcc:	add	sl, r0, sl, lsl #2
   16fd0:	add	r3, r0, r2, lsl #2
   16fd4:	ldr	r9, [ip]
   16fd8:	ldr	lr, [r3]
   16fdc:	str	r9, [r3], #4
   16fe0:	cmp	sl, r3
   16fe4:	str	lr, [ip], #4
   16fe8:	bne	16fd4 <argp_error@@Base+0x1a0>
   16fec:	b	16f94 <argp_error@@Base+0x160>
   16ff0:	add	sl, r3, r2
   16ff4:	add	r3, r0, r2, lsl #2
   16ff8:	add	r9, r0, sl, lsl #2
   16ffc:	mov	r2, r6
   17000:	ldr	lr, [r2]
   17004:	ldr	ip, [r3]
   17008:	str	lr, [r3], #4
   1700c:	cmp	r3, r9
   17010:	str	ip, [r2], #4
   17014:	bne	17000 <argp_error@@Base+0x1cc>
   17018:	mov	r2, sl
   1701c:	b	16f94 <argp_error@@Base+0x160>
   17020:	sub	r4, r7, r4
   17024:	add	r8, r4, r8
   17028:	str	r8, [r1, #28]
   1702c:	str	r7, [r1, #32]
   17030:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17038:	sub	sp, sp, #44	; 0x2c
   1703c:	str	r1, [sp, #20]
   17040:	ldr	r1, [sp, #88]	; 0x58
   17044:	str	r0, [sp, #24]
   17048:	str	r2, [sp, #28]
   1704c:	ldr	r8, [r1, #20]
   17050:	str	r3, [sp, #12]
   17054:	mov	r7, r8
   17058:	ldrb	r5, [r8]
   1705c:	cmp	r5, #61	; 0x3d
   17060:	cmpne	r5, #0
   17064:	movne	r5, #1
   17068:	moveq	r5, #0
   1706c:	beq	17084 <argp_error@@Base+0x250>
   17070:	ldrb	r3, [r7, #1]!
   17074:	cmp	r3, #0
   17078:	cmpne	r3, #61	; 0x3d
   1707c:	bne	17070 <argp_error@@Base+0x23c>
   17080:	sub	r5, r7, r8
   17084:	ldr	r3, [sp, #12]
   17088:	ldr	sl, [r3]
   1708c:	cmp	sl, #0
   17090:	beq	17344 <argp_error@@Base+0x510>
   17094:	mov	fp, r3
   17098:	mov	r4, sl
   1709c:	mov	r6, #0
   170a0:	mov	r2, r5
   170a4:	mov	r1, r8
   170a8:	mov	r0, r4
   170ac:	bl	111e0 <strncmp@plt>
   170b0:	mov	r9, fp
   170b4:	cmp	r0, #0
   170b8:	mov	r0, r4
   170bc:	bne	170cc <argp_error@@Base+0x298>
   170c0:	bl	110fc <strlen@plt>
   170c4:	cmp	r0, r5
   170c8:	beq	17158 <argp_error@@Base+0x324>
   170cc:	ldr	r4, [fp, #16]!
   170d0:	add	r6, r6, #1
   170d4:	cmp	r4, #0
   170d8:	bne	170a0 <argp_error@@Base+0x26c>
   170dc:	ldr	r3, [sp, #12]
   170e0:	ldr	fp, [sp, #88]	; 0x58
   170e4:	mov	r0, sl
   170e8:	mov	r1, r8
   170ec:	mov	r9, r4
   170f0:	mov	sl, r4
   170f4:	mov	r8, r3
   170f8:	mvn	r2, #0
   170fc:	str	r4, [sp, #36]	; 0x24
   17100:	str	r4, [sp, #16]
   17104:	str	r2, [sp, #32]
   17108:	mov	r2, r5
   1710c:	bl	111e0 <strncmp@plt>
   17110:	cmp	r0, #0
   17114:	bne	17134 <argp_error@@Base+0x300>
   17118:	cmp	r9, #0
   1711c:	beq	173b4 <argp_error@@Base+0x580>
   17120:	ldr	r3, [sp, #84]	; 0x54
   17124:	cmp	r3, #0
   17128:	beq	171fc <argp_error@@Base+0x3c8>
   1712c:	cmp	r4, #0
   17130:	beq	17230 <argp_error@@Base+0x3fc>
   17134:	ldr	r0, [r8, #16]!
   17138:	add	sl, sl, #1
   1713c:	cmp	r0, #0
   17140:	beq	17264 <argp_error@@Base+0x430>
   17144:	ldr	r1, [fp, #20]
   17148:	b	17108 <argp_error@@Base+0x2d4>
   1714c:	cmp	r9, #0
   17150:	beq	17344 <argp_error@@Base+0x510>
   17154:	ldr	r6, [sp, #32]
   17158:	ldr	r3, [sp, #88]	; 0x58
   1715c:	ldr	r0, [sp, #88]	; 0x58
   17160:	mov	r1, #0
   17164:	ldr	r2, [r3]
   17168:	str	r1, [r0, #20]
   1716c:	add	r3, r2, #1
   17170:	str	r3, [r0]
   17174:	ldrb	r1, [r7]
   17178:	cmp	r1, #0
   1717c:	bne	171bc <argp_error@@Base+0x388>
   17180:	ldr	r1, [r9, #4]
   17184:	cmp	r1, #1
   17188:	beq	173c0 <argp_error@@Base+0x58c>
   1718c:	ldr	r3, [sp, #80]	; 0x50
   17190:	ldr	r2, [r9, #8]
   17194:	cmp	r3, #0
   17198:	strne	r6, [r3]
   1719c:	cmp	r2, #0
   171a0:	movne	r3, #0
   171a4:	ldreq	r3, [r9, #12]
   171a8:	ldrne	r1, [r9, #12]
   171ac:	strne	r1, [r2]
   171b0:	mov	r0, r3
   171b4:	add	sp, sp, #44	; 0x2c
   171b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171bc:	ldr	r3, [r9, #4]
   171c0:	cmp	r3, #0
   171c4:	movne	r3, r0
   171c8:	addne	r7, r7, #1
   171cc:	strne	r7, [r3, #12]
   171d0:	bne	1718c <argp_error@@Base+0x358>
   171d4:	ldr	r3, [sp, #92]	; 0x5c
   171d8:	cmp	r3, #0
   171dc:	bne	1730c <argp_error@@Base+0x4d8>
   171e0:	ldr	r1, [sp, #88]	; 0x58
   171e4:	ldr	r2, [r9, #12]
   171e8:	mov	r3, #63	; 0x3f
   171ec:	str	r2, [r1, #8]
   171f0:	mov	r0, r3
   171f4:	add	sp, sp, #44	; 0x2c
   171f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171fc:	ldr	r2, [r9, #4]
   17200:	ldr	r3, [r8, #4]
   17204:	cmp	r2, r3
   17208:	bne	1712c <argp_error@@Base+0x2f8>
   1720c:	ldr	r2, [r9, #8]
   17210:	ldr	r3, [r8, #8]
   17214:	cmp	r2, r3
   17218:	bne	1712c <argp_error@@Base+0x2f8>
   1721c:	ldr	r2, [r9, #12]
   17220:	ldr	r3, [r8, #12]
   17224:	cmp	r2, r3
   17228:	bne	1712c <argp_error@@Base+0x2f8>
   1722c:	b	17134 <argp_error@@Base+0x300>
   17230:	ldr	r3, [sp, #92]	; 0x5c
   17234:	cmp	r3, #0
   17238:	ldr	r3, [sp, #16]
   1723c:	beq	172fc <argp_error@@Base+0x4c8>
   17240:	cmp	r3, #0
   17244:	beq	17518 <argp_error@@Base+0x6e4>
   17248:	ldr	r3, [sp, #16]
   1724c:	ldr	r0, [r8, #16]!
   17250:	mov	r2, #1
   17254:	cmp	r0, #0
   17258:	strb	r2, [r3, sl]
   1725c:	add	sl, sl, #1
   17260:	bne	17144 <argp_error@@Base+0x310>
   17264:	ldr	r3, [sp, #16]
   17268:	cmp	r3, #0
   1726c:	cmpeq	r4, #0
   17270:	beq	1714c <argp_error@@Base+0x318>
   17274:	ldr	r3, [sp, #92]	; 0x5c
   17278:	cmp	r3, #0
   1727c:	beq	173fc <argp_error@@Base+0x5c8>
   17280:	cmp	r4, #0
   17284:	bne	17484 <argp_error@@Base+0x650>
   17288:	ldr	r5, [pc, #716]	; 1755c <argp_error@@Base+0x728>
   1728c:	ldr	r8, [sp, #16]
   17290:	ldr	r7, [pc, #712]	; 17560 <argp_error@@Base+0x72c>
   17294:	ldr	r0, [r5]
   17298:	bl	11198 <flockfile@plt>
   1729c:	ldr	r3, [sp, #20]
   172a0:	ldr	r0, [r5]
   172a4:	ldr	r1, [pc, #696]	; 17564 <argp_error@@Base+0x730>
   172a8:	ldr	r2, [r3]
   172ac:	ldr	r3, [sp, #88]	; 0x58
   172b0:	add	r6, r8, r6
   172b4:	ldr	r3, [r3, #20]
   172b8:	str	r3, [sp]
   172bc:	ldr	r3, [sp, #96]	; 0x60
   172c0:	bl	11114 <fprintf@plt>
   172c4:	ldr	r9, [sp, #12]
   172c8:	b	172d8 <argp_error@@Base+0x4a4>
   172cc:	cmp	r8, r6
   172d0:	add	r4, r4, #1
   172d4:	beq	173e8 <argp_error@@Base+0x5b4>
   172d8:	ldrb	r3, [r8], #1
   172dc:	cmp	r3, #0
   172e0:	beq	172cc <argp_error@@Base+0x498>
   172e4:	ldr	r3, [r9, r4, lsl #4]
   172e8:	ldr	r2, [sp, #96]	; 0x60
   172ec:	mov	r1, r7
   172f0:	ldr	r0, [r5]
   172f4:	bl	11114 <fprintf@plt>
   172f8:	b	172cc <argp_error@@Base+0x498>
   172fc:	cmp	r3, #0
   17300:	mov	r4, #1
   17304:	bne	17248 <argp_error@@Base+0x414>
   17308:	b	17134 <argp_error@@Base+0x300>
   1730c:	ldr	r3, [sp, #20]
   17310:	ldr	r1, [pc, #580]	; 1755c <argp_error@@Base+0x728>
   17314:	ldr	r2, [r3]
   17318:	ldr	r3, [r9]
   1731c:	ldr	r0, [r1]
   17320:	str	r3, [sp]
   17324:	ldr	r1, [pc, #572]	; 17568 <argp_error@@Base+0x734>
   17328:	ldr	r3, [sp, #96]	; 0x60
   1732c:	bl	11114 <fprintf@plt>
   17330:	ldr	r1, [sp, #88]	; 0x58
   17334:	ldr	r2, [r9, #12]
   17338:	mov	r3, #63	; 0x3f
   1733c:	str	r2, [r1, #8]
   17340:	b	171f0 <argp_error@@Base+0x3bc>
   17344:	ldr	r3, [sp, #84]	; 0x54
   17348:	cmp	r3, #0
   1734c:	bne	174d8 <argp_error@@Base+0x6a4>
   17350:	ldr	r3, [sp, #92]	; 0x5c
   17354:	cmp	r3, #0
   17358:	beq	17384 <argp_error@@Base+0x550>
   1735c:	ldr	r3, [sp, #20]
   17360:	ldr	r1, [pc, #500]	; 1755c <argp_error@@Base+0x728>
   17364:	ldr	r2, [r3]
   17368:	ldr	r3, [sp, #88]	; 0x58
   1736c:	ldr	r0, [r1]
   17370:	ldr	r1, [pc, #500]	; 1756c <argp_error@@Base+0x738>
   17374:	ldr	r3, [r3, #20]
   17378:	str	r3, [sp]
   1737c:	ldr	r3, [sp, #96]	; 0x60
   17380:	bl	11114 <fprintf@plt>
   17384:	ldr	r3, [sp, #88]	; 0x58
   17388:	ldr	r1, [sp, #88]	; 0x58
   1738c:	mov	r2, #0
   17390:	ldr	r3, [r3]
   17394:	str	r2, [r1, #20]
   17398:	add	r3, r3, #1
   1739c:	str	r3, [r1]
   173a0:	mov	r3, #63	; 0x3f
   173a4:	mov	r0, r3
   173a8:	str	r2, [r1, #8]
   173ac:	add	sp, sp, #44	; 0x2c
   173b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173b4:	str	sl, [sp, #32]
   173b8:	mov	r9, r8
   173bc:	b	17134 <argp_error@@Base+0x300>
   173c0:	ldr	r1, [sp, #24]
   173c4:	cmp	r3, r1
   173c8:	bge	17454 <argp_error@@Base+0x620>
   173cc:	ldr	r1, [sp, #20]
   173d0:	add	r2, r2, #2
   173d4:	ldr	r3, [r1, r3, lsl #2]
   173d8:	ldr	r1, [sp, #88]	; 0x58
   173dc:	str	r3, [r1, #12]
   173e0:	str	r2, [r1]
   173e4:	b	1718c <argp_error@@Base+0x358>
   173e8:	ldr	r1, [r5]
   173ec:	mov	r0, #10
   173f0:	bl	11180 <fputc@plt>
   173f4:	ldr	r0, [r5]
   173f8:	bl	11030 <funlockfile@plt>
   173fc:	ldr	r3, [sp, #36]	; 0x24
   17400:	cmp	r3, #0
   17404:	beq	17410 <argp_error@@Base+0x5dc>
   17408:	ldr	r0, [sp, #16]
   1740c:	bl	12e6c <argp_parse@@Base+0xe98>
   17410:	ldr	r3, [sp, #88]	; 0x58
   17414:	ldr	r4, [r3, #20]
   17418:	mov	r0, r4
   1741c:	bl	110fc <strlen@plt>
   17420:	ldr	r3, [sp, #88]	; 0x58
   17424:	ldr	r1, [sp, #88]	; 0x58
   17428:	mov	r2, #0
   1742c:	ldr	r3, [r3]
   17430:	str	r2, [r1, #8]
   17434:	add	r3, r3, #1
   17438:	str	r3, [r1]
   1743c:	mov	r3, #63	; 0x3f
   17440:	add	r0, r4, r0
   17444:	str	r0, [r1, #20]
   17448:	mov	r0, r3
   1744c:	add	sp, sp, #44	; 0x2c
   17450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17454:	ldr	r3, [sp, #92]	; 0x5c
   17458:	cmp	r3, #0
   1745c:	bne	174b0 <argp_error@@Base+0x67c>
   17460:	ldr	r2, [sp, #88]	; 0x58
   17464:	ldr	r3, [r9, #12]
   17468:	str	r3, [r2, #8]
   1746c:	ldr	r3, [sp, #28]
   17470:	ldrb	r3, [r3]
   17474:	cmp	r3, #58	; 0x3a
   17478:	movne	r3, #63	; 0x3f
   1747c:	moveq	r3, #58	; 0x3a
   17480:	b	171b0 <argp_error@@Base+0x37c>
   17484:	ldr	r3, [sp, #20]
   17488:	ldr	r1, [pc, #204]	; 1755c <argp_error@@Base+0x728>
   1748c:	ldr	r2, [r3]
   17490:	ldr	r3, [sp, #88]	; 0x58
   17494:	ldr	r0, [r1]
   17498:	ldr	r1, [pc, #208]	; 17570 <argp_error@@Base+0x73c>
   1749c:	ldr	r3, [r3, #20]
   174a0:	str	r3, [sp]
   174a4:	ldr	r3, [sp, #96]	; 0x60
   174a8:	bl	11114 <fprintf@plt>
   174ac:	b	173fc <argp_error@@Base+0x5c8>
   174b0:	ldr	r3, [sp, #20]
   174b4:	ldr	r1, [pc, #160]	; 1755c <argp_error@@Base+0x728>
   174b8:	ldr	r2, [r3]
   174bc:	ldr	r3, [r9]
   174c0:	ldr	r0, [r1]
   174c4:	str	r3, [sp]
   174c8:	ldr	r1, [pc, #164]	; 17574 <argp_error@@Base+0x740>
   174cc:	ldr	r3, [sp, #96]	; 0x60
   174d0:	bl	11114 <fprintf@plt>
   174d4:	b	17460 <argp_error@@Base+0x62c>
   174d8:	ldr	r3, [sp, #88]	; 0x58
   174dc:	ldr	r2, [sp, #20]
   174e0:	ldr	r3, [r3]
   174e4:	ldr	r3, [r2, r3, lsl #2]
   174e8:	ldrb	r3, [r3, #1]
   174ec:	cmp	r3, #45	; 0x2d
   174f0:	beq	17350 <argp_error@@Base+0x51c>
   174f4:	ldr	r3, [sp, #88]	; 0x58
   174f8:	ldr	r0, [sp, #28]
   174fc:	ldr	r3, [r3, #20]
   17500:	ldrb	r1, [r3]
   17504:	bl	11108 <strchr@plt>
   17508:	cmp	r0, #0
   1750c:	beq	17350 <argp_error@@Base+0x51c>
   17510:	mvn	r3, #0
   17514:	b	171b0 <argp_error@@Base+0x37c>
   17518:	mov	r0, r6
   1751c:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   17520:	subs	r3, r0, #0
   17524:	str	r3, [sp, #16]
   17528:	beq	17554 <argp_error@@Base+0x720>
   1752c:	mov	r2, r6
   17530:	mov	r1, #0
   17534:	bl	11138 <memset@plt>
   17538:	mov	r3, #1
   1753c:	str	r3, [sp, #36]	; 0x24
   17540:	ldr	r2, [sp, #32]
   17544:	ldr	r3, [sp, #16]
   17548:	mov	r1, #1
   1754c:	strb	r1, [r3, r2]
   17550:	b	17248 <argp_error@@Base+0x414>
   17554:	mov	r4, #1
   17558:	b	17134 <argp_error@@Base+0x300>
   1755c:	andeq	sl, r2, r0, ror #4
   17560:	andeq	r9, r1, r4, lsl r4
   17564:	andeq	r9, r1, r4, ror #7
   17568:	andeq	r9, r1, ip, lsr r4
   1756c:	andeq	r9, r1, ip, lsl r4
   17570:	andeq	r9, r1, r4, asr #7
   17574:	andeq	r9, r1, ip, ror #8
   17578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1757c:	sub	sp, sp, #36	; 0x24
   17580:	subs	r6, r0, #0
   17584:	ldr	r4, [sp, #80]	; 0x50
   17588:	ldr	r8, [r4, #4]
   1758c:	ble	17768 <argp_error@@Base+0x934>
   17590:	mov	sl, r3
   17594:	ldr	r3, [r4]
   17598:	mov	r7, r2
   1759c:	mov	r2, #0
   175a0:	cmp	r3, r2
   175a4:	mov	r9, r1
   175a8:	str	r2, [r4, #12]
   175ac:	beq	177f0 <argp_error@@Base+0x9bc>
   175b0:	ldr	r2, [r4, #16]
   175b4:	cmp	r2, #0
   175b8:	bne	17774 <argp_error@@Base+0x940>
   175bc:	mov	r5, #0
   175c0:	str	r3, [r4, #32]
   175c4:	str	r3, [r4, #28]
   175c8:	str	r5, [r4, #20]
   175cc:	ldrb	r3, [r7]
   175d0:	cmp	r3, #45	; 0x2d
   175d4:	moveq	r3, #2
   175d8:	addeq	r7, r7, #1
   175dc:	streq	r3, [r4, #24]
   175e0:	beq	17608 <argp_error@@Base+0x7d4>
   175e4:	cmp	r3, #43	; 0x2b
   175e8:	streq	r5, [r4, #24]
   175ec:	addeq	r7, r7, #1
   175f0:	beq	17608 <argp_error@@Base+0x7d4>
   175f4:	ldr	r3, [sp, #84]	; 0x54
   175f8:	cmp	r3, #0
   175fc:	beq	17890 <argp_error@@Base+0xa5c>
   17600:	mov	r3, #0
   17604:	str	r3, [r4, #24]
   17608:	mov	r3, #1
   1760c:	str	r3, [r4, #16]
   17610:	ldrb	r3, [r7]
   17614:	cmp	r3, #58	; 0x3a
   17618:	moveq	r8, #0
   1761c:	cmp	r5, #0
   17620:	beq	176d4 <argp_error@@Base+0x8a0>
   17624:	ldrb	r3, [r5]
   17628:	cmp	r3, #0
   1762c:	beq	176d4 <argp_error@@Base+0x8a0>
   17630:	add	r3, r5, #1
   17634:	str	r3, [r4, #20]
   17638:	ldrb	fp, [r5]
   1763c:	mov	r0, r7
   17640:	str	r3, [sp, #28]
   17644:	mov	r1, fp
   17648:	bl	11108 <strchr@plt>
   1764c:	ldrb	r1, [r5, #1]
   17650:	ldr	r3, [sp, #28]
   17654:	cmp	r1, #0
   17658:	ldreq	r1, [r4]
   1765c:	addeq	r1, r1, #1
   17660:	streq	r1, [r4]
   17664:	sub	r1, fp, #58	; 0x3a
   17668:	mov	r2, r0
   1766c:	cmp	r2, #0
   17670:	cmpne	r1, #1
   17674:	mov	r0, fp
   17678:	bls	177c0 <argp_error@@Base+0x98c>
   1767c:	ldrb	r1, [r2]
   17680:	cmp	r1, #87	; 0x57
   17684:	ldrb	r1, [r2, #1]
   17688:	beq	17914 <argp_error@@Base+0xae0>
   1768c:	cmp	r1, #58	; 0x3a
   17690:	bne	177b8 <argp_error@@Base+0x984>
   17694:	ldrb	r2, [r2, #2]
   17698:	cmp	r2, #58	; 0x3a
   1769c:	ldrb	r2, [r5, #1]
   176a0:	beq	1799c <argp_error@@Base+0xb68>
   176a4:	cmp	r2, #0
   176a8:	bne	179a8 <argp_error@@Base+0xb74>
   176ac:	ldr	r3, [r4]
   176b0:	cmp	r6, r3
   176b4:	beq	17a48 <argp_error@@Base+0xc14>
   176b8:	ldr	r2, [r9, r3, lsl #2]
   176bc:	add	r3, r3, #1
   176c0:	str	r2, [r4, #12]
   176c4:	str	r3, [r4]
   176c8:	mov	r3, #0
   176cc:	str	r3, [r4, #20]
   176d0:	b	177b8 <argp_error@@Base+0x984>
   176d4:	ldr	fp, [r4]
   176d8:	ldr	r3, [r4, #32]
   176dc:	cmp	r3, fp
   176e0:	ldr	r3, [r4, #28]
   176e4:	strgt	fp, [r4, #32]
   176e8:	cmp	fp, r3
   176ec:	ldr	r3, [r4, #24]
   176f0:	strlt	fp, [r4, #28]
   176f4:	cmp	r3, #1
   176f8:	beq	17800 <argp_error@@Base+0x9cc>
   176fc:	cmp	r6, fp
   17700:	beq	17878 <argp_error@@Base+0xa44>
   17704:	ldr	r3, [pc, #944]	; 17abc <argp_error@@Base+0xc88>
   17708:	ldr	r5, [r9, fp, lsl #2]
   1770c:	mov	r1, r3
   17710:	mov	r0, r5
   17714:	str	r3, [sp, #28]
   17718:	bl	10f70 <strcmp@plt>
   1771c:	ldr	r3, [sp, #28]
   17720:	cmp	r0, #0
   17724:	bne	17790 <argp_error@@Base+0x95c>
   17728:	ldr	r3, [r4, #28]
   1772c:	ldr	r2, [r4, #32]
   17730:	add	fp, fp, #1
   17734:	cmp	r3, r2
   17738:	str	fp, [r4]
   1773c:	beq	17908 <argp_error@@Base+0xad4>
   17740:	cmp	fp, r2
   17744:	beq	17758 <argp_error@@Base+0x924>
   17748:	mov	r0, r9
   1774c:	mov	r1, r4
   17750:	bl	16f78 <argp_error@@Base+0x144>
   17754:	ldr	r3, [r4, #28]
   17758:	cmp	r3, r6
   1775c:	str	r6, [r4]
   17760:	str	r6, [r4, #32]
   17764:	strne	r3, [r4]
   17768:	mvn	r0, #0
   1776c:	add	sp, sp, #36	; 0x24
   17770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17774:	ldrb	r3, [r7]
   17778:	ldr	r5, [r4, #20]
   1777c:	sub	r2, r3, #43	; 0x2b
   17780:	tst	r2, #253	; 0xfd
   17784:	ldrbeq	r3, [r7, #1]
   17788:	addeq	r7, r7, #1
   1778c:	b	17614 <argp_error@@Base+0x7e0>
   17790:	ldrb	r2, [r5]
   17794:	cmp	r2, #45	; 0x2d
   17798:	beq	178bc <argp_error@@Base+0xa88>
   1779c:	ldr	r3, [r4, #24]
   177a0:	cmp	r3, #0
   177a4:	beq	17768 <argp_error@@Base+0x934>
   177a8:	mov	r0, #1
   177ac:	add	fp, fp, #1
   177b0:	str	fp, [r4]
   177b4:	str	r5, [r4, #12]
   177b8:	add	sp, sp, #36	; 0x24
   177bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177c0:	cmp	r8, #0
   177c4:	beq	177e0 <argp_error@@Base+0x9ac>
   177c8:	ldr	r1, [pc, #752]	; 17ac0 <argp_error@@Base+0xc8c>
   177cc:	ldr	r2, [r9]
   177d0:	mov	r3, fp
   177d4:	ldr	r0, [r1]
   177d8:	ldr	r1, [pc, #740]	; 17ac4 <argp_error@@Base+0xc90>
   177dc:	bl	11114 <fprintf@plt>
   177e0:	mov	r0, #63	; 0x3f
   177e4:	str	fp, [r4, #8]
   177e8:	add	sp, sp, #36	; 0x24
   177ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177f0:	mov	r2, #1
   177f4:	mov	r3, r2
   177f8:	str	r2, [r4]
   177fc:	b	175bc <argp_error@@Base+0x788>
   17800:	ldr	r2, [r4, #28]
   17804:	ldr	r3, [r4, #32]
   17808:	cmp	r2, r3
   1780c:	beq	1798c <argp_error@@Base+0xb58>
   17810:	cmp	fp, r3
   17814:	beq	17828 <argp_error@@Base+0x9f4>
   17818:	mov	r1, r4
   1781c:	mov	r0, r9
   17820:	bl	16f78 <argp_error@@Base+0x144>
   17824:	ldr	r3, [r4]
   17828:	cmp	r6, r3
   1782c:	movle	fp, r3
   17830:	ble	1786c <argp_error@@Base+0xa38>
   17834:	add	r1, r9, r3, lsl #2
   17838:	b	1784c <argp_error@@Base+0xa18>
   1783c:	add	r3, r3, #1
   17840:	cmp	r6, r3
   17844:	str	r3, [r4]
   17848:	beq	178b0 <argp_error@@Base+0xa7c>
   1784c:	ldr	r2, [r1], #4
   17850:	ldrb	r0, [r2]
   17854:	cmp	r0, #45	; 0x2d
   17858:	bne	1783c <argp_error@@Base+0xa08>
   1785c:	ldrb	r2, [r2, #1]
   17860:	cmp	r2, #0
   17864:	beq	1783c <argp_error@@Base+0xa08>
   17868:	ldr	fp, [r4]
   1786c:	str	r3, [r4, #32]
   17870:	cmp	r6, fp
   17874:	bne	17704 <argp_error@@Base+0x8d0>
   17878:	ldr	r3, [r4, #28]
   1787c:	ldr	r6, [r4, #32]
   17880:	mvn	r0, #0
   17884:	cmp	r3, r6
   17888:	strne	r3, [r4]
   1788c:	b	1776c <argp_error@@Base+0x938>
   17890:	ldr	r0, [pc, #560]	; 17ac8 <argp_error@@Base+0xc94>
   17894:	bl	11060 <getenv@plt>
   17898:	ldr	r5, [r4, #20]
   1789c:	cmp	r0, #0
   178a0:	bne	17600 <argp_error@@Base+0x7cc>
   178a4:	mov	r3, #1
   178a8:	str	r3, [r4, #24]
   178ac:	b	17608 <argp_error@@Base+0x7d4>
   178b0:	mov	fp, r6
   178b4:	str	r3, [r4, #32]
   178b8:	b	17870 <argp_error@@Base+0xa3c>
   178bc:	ldrb	r1, [r5, #1]
   178c0:	cmp	r1, #0
   178c4:	beq	1779c <argp_error@@Base+0x968>
   178c8:	cmp	sl, #0
   178cc:	beq	17900 <argp_error@@Base+0xacc>
   178d0:	cmp	r1, #45	; 0x2d
   178d4:	beq	17a0c <argp_error@@Base+0xbd8>
   178d8:	ldr	r3, [sp, #76]	; 0x4c
   178dc:	cmp	r3, #0
   178e0:	beq	17900 <argp_error@@Base+0xacc>
   178e4:	ldrb	r3, [r5, #2]
   178e8:	cmp	r3, #0
   178ec:	bne	179bc <argp_error@@Base+0xb88>
   178f0:	mov	r0, r7
   178f4:	bl	11108 <strchr@plt>
   178f8:	cmp	r0, #0
   178fc:	beq	179bc <argp_error@@Base+0xb88>
   17900:	add	r5, r5, #1
   17904:	b	17630 <argp_error@@Base+0x7fc>
   17908:	mov	r3, fp
   1790c:	str	fp, [r4, #28]
   17910:	b	17758 <argp_error@@Base+0x924>
   17914:	cmp	sl, #0
   17918:	sub	ip, r1, #59	; 0x3b
   1791c:	clz	ip, ip
   17920:	lsr	ip, ip, #5
   17924:	moveq	ip, #0
   17928:	cmp	ip, #0
   1792c:	beq	1768c <argp_error@@Base+0x858>
   17930:	ldrb	r2, [r5, #1]
   17934:	cmp	r2, #0
   17938:	bne	1794c <argp_error@@Base+0xb18>
   1793c:	ldr	r3, [r4]
   17940:	cmp	r6, r3
   17944:	ldrne	r3, [r9, r3, lsl #2]
   17948:	beq	17a68 <argp_error@@Base+0xc34>
   1794c:	str	r3, [r4, #20]
   17950:	ldr	lr, [pc, #372]	; 17acc <argp_error@@Base+0xc98>
   17954:	ldr	r3, [sp, #72]	; 0x48
   17958:	mov	ip, #0
   1795c:	str	r3, [sp]
   17960:	str	r8, [sp, #12]
   17964:	str	r4, [sp, #8]
   17968:	str	lr, [sp, #16]
   1796c:	mov	r3, sl
   17970:	str	ip, [r4, #12]
   17974:	mov	r2, r7
   17978:	mov	r1, r9
   1797c:	mov	r0, r6
   17980:	str	ip, [sp, #4]
   17984:	bl	17034 <argp_error@@Base+0x200>
   17988:	b	177b8 <argp_error@@Base+0x984>
   1798c:	cmp	fp, r3
   17990:	movne	r3, fp
   17994:	strne	fp, [r4, #28]
   17998:	b	17828 <argp_error@@Base+0x9f4>
   1799c:	cmp	r2, #0
   179a0:	streq	r2, [r4, #12]
   179a4:	beq	176c8 <argp_error@@Base+0x894>
   179a8:	ldr	r2, [r4]
   179ac:	str	r3, [r4, #12]
   179b0:	add	r3, r2, #1
   179b4:	str	r3, [r4]
   179b8:	b	176c8 <argp_error@@Base+0x894>
   179bc:	ldr	r2, [sp, #76]	; 0x4c
   179c0:	add	r5, r5, #1
   179c4:	str	r5, [r4, #20]
   179c8:	ldr	r3, [pc, #256]	; 17ad0 <argp_error@@Base+0xc9c>
   179cc:	str	r2, [sp, #4]
   179d0:	ldr	r2, [sp, #72]	; 0x48
   179d4:	str	r3, [sp, #16]
   179d8:	str	r2, [sp]
   179dc:	str	r8, [sp, #12]
   179e0:	str	r4, [sp, #8]
   179e4:	mov	r3, sl
   179e8:	mov	r2, r7
   179ec:	mov	r1, r9
   179f0:	mov	r0, r6
   179f4:	bl	17034 <argp_error@@Base+0x200>
   179f8:	cmn	r0, #1
   179fc:	bne	177b8 <argp_error@@Base+0x984>
   17a00:	ldr	r3, [r4]
   17a04:	ldr	r5, [r9, r3, lsl #2]
   17a08:	b	17900 <argp_error@@Base+0xacc>
   17a0c:	add	r5, r5, #2
   17a10:	str	r5, [r4, #20]
   17a14:	str	r3, [sp, #16]
   17a18:	ldr	r3, [sp, #76]	; 0x4c
   17a1c:	str	r8, [sp, #12]
   17a20:	str	r3, [sp, #4]
   17a24:	ldr	r3, [sp, #72]	; 0x48
   17a28:	str	r4, [sp, #8]
   17a2c:	str	r3, [sp]
   17a30:	mov	r2, r7
   17a34:	mov	r3, sl
   17a38:	mov	r1, r9
   17a3c:	mov	r0, r6
   17a40:	bl	17034 <argp_error@@Base+0x200>
   17a44:	b	177b8 <argp_error@@Base+0x984>
   17a48:	cmp	r8, #0
   17a4c:	bne	17aa0 <argp_error@@Base+0xc6c>
   17a50:	str	fp, [r4, #8]
   17a54:	ldrb	r0, [r7]
   17a58:	cmp	r0, #58	; 0x3a
   17a5c:	movne	r0, #63	; 0x3f
   17a60:	moveq	r0, #58	; 0x3a
   17a64:	b	176c8 <argp_error@@Base+0x894>
   17a68:	cmp	r8, #0
   17a6c:	beq	17a88 <argp_error@@Base+0xc54>
   17a70:	ldr	r1, [pc, #72]	; 17ac0 <argp_error@@Base+0xc8c>
   17a74:	ldr	r2, [r9]
   17a78:	mov	r3, fp
   17a7c:	ldr	r0, [r1]
   17a80:	ldr	r1, [pc, #76]	; 17ad4 <argp_error@@Base+0xca0>
   17a84:	bl	11114 <fprintf@plt>
   17a88:	str	fp, [r4, #8]
   17a8c:	ldrb	r0, [r7]
   17a90:	cmp	r0, #58	; 0x3a
   17a94:	movne	r0, #63	; 0x3f
   17a98:	moveq	r0, #58	; 0x3a
   17a9c:	b	177b8 <argp_error@@Base+0x984>
   17aa0:	ldr	r1, [pc, #24]	; 17ac0 <argp_error@@Base+0xc8c>
   17aa4:	ldr	r2, [r9]
   17aa8:	mov	r3, fp
   17aac:	ldr	r0, [r1]
   17ab0:	ldr	r1, [pc, #28]	; 17ad4 <argp_error@@Base+0xca0>
   17ab4:	bl	11114 <fprintf@plt>
   17ab8:	b	17a50 <argp_error@@Base+0xc1c>
   17abc:	andeq	r8, r1, r4, ror #22
   17ac0:	andeq	sl, r2, r0, ror #4
   17ac4:	andeq	r9, r1, r8, lsr #9
   17ac8:	muleq	r1, r4, r4
   17acc:	strdeq	r9, [r1], -r0
   17ad0:	andeq	r9, r1, r4, lsr #9
   17ad4:	andeq	r9, r1, r4, asr #9
   17ad8:	push	{r4, r5, r6, lr}
   17adc:	sub	sp, sp, #16
   17ae0:	ldr	r5, [pc, #84]	; 17b3c <argp_error@@Base+0xd08>
   17ae4:	ldr	ip, [sp, #32]
   17ae8:	ldr	r4, [pc, #80]	; 17b40 <argp_error@@Base+0xd0c>
   17aec:	str	ip, [sp]
   17af0:	ldr	ip, [sp, #40]	; 0x28
   17af4:	ldr	r6, [sp, #36]	; 0x24
   17af8:	ldr	lr, [r5]
   17afc:	str	ip, [sp, #12]
   17b00:	ldr	ip, [r5, #4]
   17b04:	str	r4, [sp, #8]
   17b08:	str	r6, [sp, #4]
   17b0c:	str	ip, [r4, #4]
   17b10:	str	lr, [r4]
   17b14:	bl	17578 <argp_error@@Base+0x744>
   17b18:	ldr	r3, [pc, #36]	; 17b44 <argp_error@@Base+0xd10>
   17b1c:	ldr	ip, [r4]
   17b20:	ldr	r1, [r4, #8]
   17b24:	ldr	r2, [r4, #12]
   17b28:	str	ip, [r5]
   17b2c:	str	r1, [r5, #8]
   17b30:	str	r2, [r3]
   17b34:	add	sp, sp, #16
   17b38:	pop	{r4, r5, r6, pc}
   17b3c:	andeq	sl, r2, r4, asr #4
   17b40:	andeq	sl, r2, r8, lsl #5
   17b44:			; <UNDEFINED> instruction: 0x0002a2b4
   17b48:	push	{lr}		; (str lr, [sp, #-4]!)
   17b4c:	mov	r3, #0
   17b50:	sub	sp, sp, #20
   17b54:	mov	ip, #1
   17b58:	str	r3, [sp]
   17b5c:	stmib	sp, {r3, ip}
   17b60:	bl	17ad8 <argp_error@@Base+0xca4>
   17b64:	add	sp, sp, #20
   17b68:	pop	{pc}		; (ldr pc, [sp], #4)
   17b6c:	push	{r4, r5, r6, lr}
   17b70:	subs	r4, r2, #0
   17b74:	mov	r6, r0
   17b78:	mov	r5, r1
   17b7c:	beq	17ba8 <argp_error@@Base+0xd74>
   17b80:	mov	r1, r4
   17b84:	mvn	r0, #0
   17b88:	bl	18380 <argp_error@@Base+0x154c>
   17b8c:	cmp	r0, r5
   17b90:	bcs	17ba8 <argp_error@@Base+0xd74>
   17b94:	bl	11120 <__errno_location@plt>
   17b98:	mov	r3, #12
   17b9c:	str	r3, [r0]
   17ba0:	mov	r0, #0
   17ba4:	pop	{r4, r5, r6, pc}
   17ba8:	mul	r1, r5, r4
   17bac:	mov	r0, r6
   17bb0:	pop	{r4, r5, r6, lr}
   17bb4:	b	13bdc <argp_parse@@Base+0x1c08>
   17bb8:	push	{r4, r5, r6, r7, r8, lr}
   17bbc:	mov	r8, r0
   17bc0:	mov	r0, #36	; 0x24
   17bc4:	mov	r7, r1
   17bc8:	mov	r6, r2
   17bcc:	mov	r5, r3
   17bd0:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   17bd4:	subs	r4, r0, #0
   17bd8:	beq	17c1c <argp_error@@Base+0xde8>
   17bdc:	mov	r0, #0
   17be0:	str	r5, [r4, #12]
   17be4:	str	r0, [r4, #20]
   17be8:	str	r0, [r4, #16]
   17bec:	str	r8, [r4]
   17bf0:	str	r7, [r4, #4]
   17bf4:	str	r6, [r4, #8]
   17bf8:	mov	r0, #200	; 0xc8
   17bfc:	bl	13bb0 <argp_parse@@Base+0x1bdc>
   17c00:	cmp	r0, #0
   17c04:	addne	r3, r0, #200	; 0xc8
   17c08:	mov	r5, r0
   17c0c:	str	r0, [r4, #24]
   17c10:	strne	r0, [r4, #28]
   17c14:	strne	r3, [r4, #32]
   17c18:	beq	17c24 <argp_error@@Base+0xdf0>
   17c1c:	mov	r0, r4
   17c20:	pop	{r4, r5, r6, r7, r8, pc}
   17c24:	mov	r0, r4
   17c28:	bl	12e6c <argp_parse@@Base+0xe98>
   17c2c:	mov	r4, r5
   17c30:	b	17c1c <argp_error@@Base+0xde8>
   17c34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c38:	mov	r7, r0
   17c3c:	ldr	r6, [r0, #24]
   17c40:	ldr	r3, [r0, #16]
   17c44:	ldr	fp, [r0, #28]
   17c48:	sub	sp, sp, #12
   17c4c:	add	r6, r6, r3
   17c50:	mov	r9, #32
   17c54:	cmp	r6, fp
   17c58:	bcs	17d34 <argp_error@@Base+0xf00>
   17c5c:	ldr	r8, [r7, #20]
   17c60:	cmp	r8, #0
   17c64:	bne	17cd4 <argp_error@@Base+0xea0>
   17c68:	ldr	r4, [r7, #4]
   17c6c:	cmp	r4, #0
   17c70:	beq	17f78 <argp_error@@Base+0x1144>
   17c74:	ldr	r2, [r7, #32]
   17c78:	add	r3, fp, r4
   17c7c:	cmp	r2, r3
   17c80:	bls	17c94 <argp_error@@Base+0xe60>
   17c84:	b	180c0 <argp_error@@Base+0x128c>
   17c88:	add	r8, r8, #1
   17c8c:	cmp	r4, r8
   17c90:	beq	17cc8 <argp_error@@Base+0xe94>
   17c94:	ldr	r0, [r7]
   17c98:	ldr	r3, [r0, #20]
   17c9c:	ldr	r2, [r0, #24]
   17ca0:	add	r1, r3, #1
   17ca4:	cmp	r3, r2
   17ca8:	strcc	r1, [r0, #20]
   17cac:	strbcc	r9, [r3]
   17cb0:	bcc	17c88 <argp_error@@Base+0xe54>
   17cb4:	mov	r1, r9
   17cb8:	add	r8, r8, #1
   17cbc:	bl	1115c <__overflow@plt>
   17cc0:	cmp	r4, r8
   17cc4:	bne	17c94 <argp_error@@Base+0xe60>
   17cc8:	ldr	fp, [r7, #28]
   17ccc:	mov	r8, r4
   17cd0:	str	r4, [r7, #20]
   17cd4:	sub	sl, fp, r6
   17cd8:	mov	r2, sl
   17cdc:	mov	r1, #10
   17ce0:	mov	r0, r6
   17ce4:	bl	11144 <memchr@plt>
   17ce8:	cmp	r8, #0
   17cec:	movlt	r8, #0
   17cf0:	movlt	r3, r8
   17cf4:	str	r6, [sp]
   17cf8:	mov	r4, r0
   17cfc:	strlt	r3, [r7, #20]
   17d00:	cmp	r4, #0
   17d04:	beq	17f9c <argp_error@@Base+0x1168>
   17d08:	sub	r2, r4, r6
   17d0c:	ldr	r3, [r7, #8]
   17d10:	add	r2, r2, r8
   17d14:	cmp	r2, r3
   17d18:	bge	17d48 <argp_error@@Base+0xf14>
   17d1c:	ldr	fp, [r7, #28]
   17d20:	add	r6, r4, #1
   17d24:	mov	r3, #0
   17d28:	cmp	r6, fp
   17d2c:	str	r3, [r7, #20]
   17d30:	bcc	17c5c <argp_error@@Base+0xe28>
   17d34:	ldr	r3, [r7, #24]
   17d38:	sub	r3, fp, r3
   17d3c:	str	r3, [r7, #16]
   17d40:	add	sp, sp, #12
   17d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d48:	ldr	r2, [r7, #12]
   17d4c:	sub	r5, r3, #1
   17d50:	cmp	r2, #0
   17d54:	str	r2, [sp, #4]
   17d58:	blt	18054 <argp_error@@Base+0x1220>
   17d5c:	add	r5, r5, #1
   17d60:	sub	r8, r5, r8
   17d64:	adds	r8, r6, r8
   17d68:	bcs	17fd4 <argp_error@@Base+0x11a0>
   17d6c:	bl	110d8 <__ctype_b_loc@plt>
   17d70:	mov	r3, r8
   17d74:	ldr	r0, [r0]
   17d78:	b	17d84 <argp_error@@Base+0xf50>
   17d7c:	cmp	r3, r6
   17d80:	bcc	17fd8 <argp_error@@Base+0x11a4>
   17d84:	mov	r1, r3
   17d88:	sub	r3, r3, #1
   17d8c:	ldrb	r2, [r1]
   17d90:	mov	r5, r3
   17d94:	lsl	r2, r2, #1
   17d98:	ldrh	r2, [r0, r2]
   17d9c:	tst	r2, #1
   17da0:	beq	17d7c <argp_error@@Base+0xf48>
   17da4:	add	r5, r1, #1
   17da8:	cmp	r5, r6
   17dac:	bls	17fec <argp_error@@Base+0x11b8>
   17db0:	cmp	r1, r6
   17db4:	bcc	17fe4 <argp_error@@Base+0x11b0>
   17db8:	mov	r1, r3
   17dbc:	sub	r8, r6, #1
   17dc0:	b	17ddc <argp_error@@Base+0xfa8>
   17dc4:	ldrb	r3, [r1]
   17dc8:	sub	r1, r1, #1
   17dcc:	lsl	r3, r3, #1
   17dd0:	ldrh	r3, [r0, r3]
   17dd4:	tst	r3, #1
   17dd8:	beq	18104 <argp_error@@Base+0x12d0>
   17ddc:	cmp	r8, r1
   17de0:	mov	r2, r1
   17de4:	bne	17dc4 <argp_error@@Base+0xf90>
   17de8:	add	r8, r8, #1
   17dec:	add	r3, sl, #1
   17df0:	add	r3, r6, r3
   17df4:	cmp	r5, r3
   17df8:	beq	17ee0 <argp_error@@Base+0x10ac>
   17dfc:	add	r3, r8, #1
   17e00:	ldr	r1, [sp, #4]
   17e04:	sub	r2, r5, r3
   17e08:	cmp	r2, r1
   17e0c:	bge	17efc <argp_error@@Base+0x10c8>
   17e10:	cmp	r5, fp
   17e14:	bcs	17ef4 <argp_error@@Base+0x10c0>
   17e18:	ldr	r3, [r7, #32]
   17e1c:	ldr	r2, [sp, #4]
   17e20:	sub	r3, r3, fp
   17e24:	add	r0, r2, #1
   17e28:	cmp	r3, r0
   17e2c:	bgt	18134 <argp_error@@Base+0x1300>
   17e30:	ldr	r0, [r7, #24]
   17e34:	cmp	r8, r0
   17e38:	bls	17e4c <argp_error@@Base+0x1018>
   17e3c:	sub	r2, r8, r0
   17e40:	ldr	r3, [r7]
   17e44:	mov	r1, #1
   17e48:	bl	10fdc <fwrite_unlocked@plt>
   17e4c:	ldr	r0, [r7]
   17e50:	ldr	r2, [r0, #24]
   17e54:	ldr	r3, [r0, #20]
   17e58:	cmp	r3, r2
   17e5c:	addcc	r2, r3, #1
   17e60:	strcc	r2, [r0, #20]
   17e64:	movcc	r2, #10
   17e68:	strbcc	r2, [r3]
   17e6c:	bcs	18174 <argp_error@@Base+0x1340>
   17e70:	ldr	r6, [r7, #24]
   17e74:	ldr	r3, [sp]
   17e78:	sub	r2, r5, r6
   17e7c:	sub	r3, r3, r6
   17e80:	add	sl, sl, r3
   17e84:	mov	fp, r2
   17e88:	mov	r4, r6
   17e8c:	ldr	r3, [r7, #12]
   17e90:	cmp	r3, r2
   17e94:	bgt	17f1c <argp_error@@Base+0x10e8>
   17e98:	cmp	r3, #0
   17e9c:	movgt	r2, r6
   17ea0:	ble	17ebc <argp_error@@Base+0x1088>
   17ea4:	strb	r9, [r2], #1
   17ea8:	ldr	r3, [r7, #12]
   17eac:	sub	r1, r2, r6
   17eb0:	cmp	r3, r1
   17eb4:	bgt	17ea4 <argp_error@@Base+0x1070>
   17eb8:	mov	r6, r2
   17ebc:	cmp	r6, r5
   17ec0:	bcc	180a4 <argp_error@@Base+0x1270>
   17ec4:	sub	fp, sl, fp
   17ec8:	cmp	r3, #0
   17ecc:	add	fp, r6, fp
   17ed0:	mvneq	r3, #0
   17ed4:	str	fp, [r7, #28]
   17ed8:	str	r3, [r7, #20]
   17edc:	b	17c54 <argp_error@@Base+0xe20>
   17ee0:	ldr	r3, [r7, #32]
   17ee4:	ldr	r2, [sp, #4]
   17ee8:	sub	r3, r3, r8
   17eec:	cmp	r3, r2
   17ef0:	ble	17e10 <argp_error@@Base+0xfdc>
   17ef4:	add	r3, r8, #1
   17ef8:	sub	r2, r5, r3
   17efc:	sub	fp, r5, r6
   17f00:	mov	r4, r6
   17f04:	mov	r6, r3
   17f08:	mov	r3, #10
   17f0c:	strb	r3, [r8]
   17f10:	ldr	r3, [r7, #12]
   17f14:	cmp	r3, r2
   17f18:	ble	17e98 <argp_error@@Base+0x1064>
   17f1c:	add	r2, sl, #1
   17f20:	add	r2, r4, r2
   17f24:	cmp	r5, r2
   17f28:	beq	18120 <argp_error@@Base+0x12ec>
   17f2c:	cmp	r3, #0
   17f30:	movgt	r8, #0
   17f34:	bgt	17f4c <argp_error@@Base+0x1118>
   17f38:	b	17ebc <argp_error@@Base+0x1088>
   17f3c:	ldr	r3, [r7, #12]
   17f40:	add	r8, r8, #1
   17f44:	cmp	r3, r8
   17f48:	ble	17ebc <argp_error@@Base+0x1088>
   17f4c:	ldr	r0, [r7]
   17f50:	ldr	r3, [r0, #20]
   17f54:	ldr	r2, [r0, #24]
   17f58:	add	r1, r3, #1
   17f5c:	cmp	r3, r2
   17f60:	strcc	r1, [r0, #20]
   17f64:	strbcc	r9, [r3]
   17f68:	bcc	17f3c <argp_error@@Base+0x1108>
   17f6c:	mov	r1, r9
   17f70:	bl	1115c <__overflow@plt>
   17f74:	b	17f3c <argp_error@@Base+0x1108>
   17f78:	sub	sl, fp, r6
   17f7c:	mov	r2, sl
   17f80:	mov	r1, #10
   17f84:	mov	r0, r6
   17f88:	bl	11144 <memchr@plt>
   17f8c:	str	r6, [sp]
   17f90:	mov	r4, r0
   17f94:	cmp	r4, #0
   17f98:	bne	17d08 <argp_error@@Base+0xed4>
   17f9c:	ldr	r5, [r7, #8]
   17fa0:	add	r3, r8, sl
   17fa4:	cmp	r3, r5
   17fa8:	bcc	18198 <argp_error@@Base+0x1364>
   17fac:	ldr	r2, [r7, #12]
   17fb0:	sub	r5, r5, #1
   17fb4:	cmp	r2, #0
   17fb8:	str	r2, [sp, #4]
   17fbc:	blt	18184 <argp_error@@Base+0x1350>
   17fc0:	add	r5, r5, #1
   17fc4:	sub	r8, r5, r8
   17fc8:	adds	r8, r6, r8
   17fcc:	mov	r4, fp
   17fd0:	bcc	17d6c <argp_error@@Base+0xf38>
   17fd4:	mov	r5, r8
   17fd8:	add	r5, r5, #1
   17fdc:	cmp	r5, r6
   17fe0:	bls	17fec <argp_error@@Base+0x11b8>
   17fe4:	mov	r8, r5
   17fe8:	b	17dec <argp_error@@Base+0xfb8>
   17fec:	cmp	r8, r4
   17ff0:	bcs	18028 <argp_error@@Base+0x11f4>
   17ff4:	add	r5, r8, #1
   17ff8:	b	1801c <argp_error@@Base+0x11e8>
   17ffc:	bl	110d8 <__ctype_b_loc@plt>
   18000:	ldrb	r3, [r5]
   18004:	add	r5, r5, #1
   18008:	lsl	r3, r3, #1
   1800c:	ldr	r2, [r0]
   18010:	ldrh	r3, [r2, r3]
   18014:	tst	r3, #1
   18018:	bne	18038 <argp_error@@Base+0x1204>
   1801c:	cmp	r5, r4
   18020:	mov	r8, r5
   18024:	bne	17ffc <argp_error@@Base+0x11c8>
   18028:	cmp	r8, r4
   1802c:	beq	1810c <argp_error@@Base+0x12d8>
   18030:	bl	110d8 <__ctype_b_loc@plt>
   18034:	ldr	r2, [r0]
   18038:	mov	r5, r8
   1803c:	ldrb	r3, [r5, #1]!
   18040:	lsl	r3, r3, #1
   18044:	ldrh	r3, [r2, r3]
   18048:	tst	r3, #1
   1804c:	bne	1803c <argp_error@@Base+0x1208>
   18050:	b	17dec <argp_error@@Base+0xfb8>
   18054:	cmp	r4, fp
   18058:	str	r3, [sp]
   1805c:	bcs	18180 <argp_error@@Base+0x134c>
   18060:	sub	r0, r5, r8
   18064:	sub	r2, fp, r4
   18068:	add	r0, r6, r0
   1806c:	mov	r1, r4
   18070:	bl	10fa0 <memmove@plt>
   18074:	ldr	r2, [r7, #20]
   18078:	ldr	fp, [r7, #28]
   1807c:	sub	r5, r5, r2
   18080:	add	r5, r6, r5
   18084:	mov	r3, #0
   18088:	sub	r4, r5, r4
   1808c:	str	r3, [r7, #20]
   18090:	ldr	r3, [sp]
   18094:	sub	fp, fp, r4
   18098:	add	r6, r6, r3
   1809c:	str	fp, [r7, #28]
   180a0:	b	17c54 <argp_error@@Base+0xe20>
   180a4:	add	r2, r4, sl
   180a8:	sub	r2, r2, r5
   180ac:	mov	r1, r5
   180b0:	mov	r0, r6
   180b4:	bl	10fa0 <memmove@plt>
   180b8:	ldr	r3, [r7, #12]
   180bc:	b	17ec4 <argp_error@@Base+0x1090>
   180c0:	add	r5, r6, r4
   180c4:	sub	r2, fp, r6
   180c8:	mov	r1, r6
   180cc:	mov	r0, r5
   180d0:	bl	10fa0 <memmove@plt>
   180d4:	ldr	r3, [r7, #28]
   180d8:	mov	r0, r6
   180dc:	add	r3, r3, r4
   180e0:	str	r3, [r7, #28]
   180e4:	mov	r2, r4
   180e8:	mov	r1, r9
   180ec:	bl	11138 <memset@plt>
   180f0:	mov	r6, r5
   180f4:	ldr	fp, [r7, #28]
   180f8:	mov	r8, r4
   180fc:	str	r4, [r7, #20]
   18100:	b	17cd4 <argp_error@@Base+0xea0>
   18104:	add	r8, r2, #1
   18108:	b	17dec <argp_error@@Base+0xfb8>
   1810c:	mov	r3, #0
   18110:	str	r3, [r7, #20]
   18114:	add	r6, r8, #1
   18118:	ldr	fp, [r7, #28]
   1811c:	b	17c54 <argp_error@@Base+0xe20>
   18120:	ldr	r2, [r7, #32]
   18124:	sub	r2, r2, r5
   18128:	cmp	r3, r2
   1812c:	ble	17e98 <argp_error@@Base+0x1064>
   18130:	b	17f2c <argp_error@@Base+0x10f8>
   18134:	sub	fp, fp, r5
   18138:	mov	r2, fp
   1813c:	mov	r1, r5
   18140:	add	r0, r8, r0
   18144:	bl	10fa0 <memmove@plt>
   18148:	ldr	r2, [r7, #12]
   1814c:	mov	r3, #10
   18150:	add	r5, r2, #1
   18154:	add	r5, r8, r5
   18158:	add	fp, r5, fp
   1815c:	sub	sl, fp, r6
   18160:	mov	r4, r6
   18164:	sub	fp, r5, r6
   18168:	strb	r3, [r8]
   1816c:	add	r6, r8, #1
   18170:	b	17e8c <argp_error@@Base+0x1058>
   18174:	mov	r1, #10
   18178:	bl	1115c <__overflow@plt>
   1817c:	b	17e70 <argp_error@@Base+0x103c>
   18180:	add	r3, r8, sl
   18184:	sub	r5, r5, r3
   18188:	add	fp, fp, r5
   1818c:	str	fp, [r7, #28]
   18190:	str	r3, [r7, #20]
   18194:	b	17d34 <argp_error@@Base+0xf00>
   18198:	str	r3, [r7, #20]
   1819c:	ldr	fp, [r7, #28]
   181a0:	b	17d34 <argp_error@@Base+0xf00>
   181a4:	push	{r4, lr}
   181a8:	mov	r4, r0
   181ac:	bl	17c34 <argp_error@@Base+0xe00>
   181b0:	ldr	r2, [r4, #28]
   181b4:	ldr	r0, [r4, #24]
   181b8:	cmp	r2, r0
   181bc:	bls	181d4 <argp_error@@Base+0x13a0>
   181c0:	sub	r2, r2, r0
   181c4:	ldr	r3, [r4]
   181c8:	mov	r1, #1
   181cc:	bl	10fdc <fwrite_unlocked@plt>
   181d0:	ldr	r0, [r4, #24]
   181d4:	bl	12e6c <argp_parse@@Base+0xe98>
   181d8:	mov	r0, r4
   181dc:	pop	{r4, lr}
   181e0:	b	12e6c <argp_parse@@Base+0xe98>
   181e4:	push	{r4, r5, r6, lr}
   181e8:	mov	r4, r0
   181ec:	mov	r5, r1
   181f0:	bl	17c34 <argp_error@@Base+0xe00>
   181f4:	ldr	r3, [r4, #24]
   181f8:	ldr	r2, [r4, #28]
   181fc:	mov	r0, r3
   18200:	sub	r2, r2, r3
   18204:	mov	r1, #1
   18208:	ldr	r3, [r4]
   1820c:	bl	10fdc <fwrite_unlocked@plt>
   18210:	ldr	r2, [r4, #28]
   18214:	ldr	r3, [r4, #24]
   18218:	sub	r1, r2, r3
   1821c:	cmp	r0, r1
   18220:	bne	18264 <argp_error@@Base+0x1430>
   18224:	ldr	r1, [r4, #32]
   18228:	mov	r2, #0
   1822c:	sub	r1, r1, r3
   18230:	cmp	r1, r5
   18234:	str	r3, [r4, #28]
   18238:	str	r2, [r4, #16]
   1823c:	movcs	r3, #1
   18240:	bcs	1825c <argp_error@@Base+0x1428>
   18244:	adds	r5, r1, r5
   18248:	bcc	18294 <argp_error@@Base+0x1460>
   1824c:	bl	11120 <__errno_location@plt>
   18250:	mov	r3, #0
   18254:	mov	r2, #12
   18258:	str	r2, [r0]
   1825c:	mov	r0, r3
   18260:	pop	{r4, r5, r6, pc}
   18264:	ldr	r1, [r4, #16]
   18268:	sub	r2, r2, r0
   1826c:	sub	r1, r1, r0
   18270:	str	r2, [r4, #28]
   18274:	str	r1, [r4, #16]
   18278:	sub	r2, r2, r3
   1827c:	add	r1, r3, r0
   18280:	mov	r0, r3
   18284:	bl	10fa0 <memmove@plt>
   18288:	mov	r3, #0
   1828c:	mov	r0, r3
   18290:	pop	{r4, r5, r6, pc}
   18294:	mov	r0, r3
   18298:	mov	r1, r5
   1829c:	bl	13bdc <argp_parse@@Base+0x1c08>
   182a0:	cmp	r0, #0
   182a4:	beq	1824c <argp_error@@Base+0x1418>
   182a8:	add	r1, r0, r5
   182ac:	mov	r3, #1
   182b0:	str	r0, [r4, #24]
   182b4:	str	r0, [r4, #28]
   182b8:	str	r1, [r4, #32]
   182bc:	mov	r0, r3
   182c0:	pop	{r4, r5, r6, pc}
   182c4:	ldr	r3, [r0, #32]
   182c8:	ldr	r2, [r0, #28]
   182cc:	sub	r3, r3, r2
   182d0:	cmp	r3, r1
   182d4:	bcc	182e0 <argp_error@@Base+0x14ac>
   182d8:	mov	r0, #1
   182dc:	bx	lr
   182e0:	b	181e4 <argp_error@@Base+0x13b0>
   182e4:	push	{r1, r2, r3}
   182e8:	mov	r1, #150	; 0x96
   182ec:	push	{r4, r5, r6, r7, lr}
   182f0:	sub	sp, sp, #8
   182f4:	mov	r5, r0
   182f8:	ldr	r7, [sp, #28]
   182fc:	add	r6, sp, #32
   18300:	ldr	r3, [r5, #32]
   18304:	ldr	r0, [r5, #28]
   18308:	sub	r2, r3, r0
   1830c:	cmp	r1, r2
   18310:	bhi	18354 <argp_error@@Base+0x1520>
   18314:	sub	r4, r3, r0
   18318:	mov	r1, r4
   1831c:	mov	r3, r6
   18320:	mov	r2, r7
   18324:	str	r6, [sp, #4]
   18328:	bl	111a4 <vsnprintf@plt>
   1832c:	cmp	r4, r0
   18330:	addls	r1, r0, #1
   18334:	bls	18300 <argp_error@@Base+0x14cc>
   18338:	ldr	r3, [r5, #28]
   1833c:	add	r3, r3, r0
   18340:	str	r3, [r5, #28]
   18344:	add	sp, sp, #8
   18348:	pop	{r4, r5, r6, r7, lr}
   1834c:	add	sp, sp, #12
   18350:	bx	lr
   18354:	mov	r0, r5
   18358:	bl	181e4 <argp_error@@Base+0x13b0>
   1835c:	cmp	r0, #0
   18360:	ldrne	r3, [r5, #32]
   18364:	ldrne	r0, [r5, #28]
   18368:	bne	18314 <argp_error@@Base+0x14e0>
   1836c:	mvn	r0, #0
   18370:	add	sp, sp, #8
   18374:	pop	{r4, r5, r6, r7, lr}
   18378:	add	sp, sp, #12
   1837c:	bx	lr
   18380:	subs	r2, r1, #1
   18384:	bxeq	lr
   18388:	bcc	18560 <argp_error@@Base+0x172c>
   1838c:	cmp	r0, r1
   18390:	bls	18544 <argp_error@@Base+0x1710>
   18394:	tst	r1, r2
   18398:	beq	18550 <argp_error@@Base+0x171c>
   1839c:	clz	r3, r0
   183a0:	clz	r2, r1
   183a4:	sub	r3, r2, r3
   183a8:	rsbs	r3, r3, #31
   183ac:	addne	r3, r3, r3, lsl #1
   183b0:	mov	r2, #0
   183b4:	addne	pc, pc, r3, lsl #2
   183b8:	nop			; (mov r0, r0)
   183bc:	cmp	r0, r1, lsl #31
   183c0:	adc	r2, r2, r2
   183c4:	subcs	r0, r0, r1, lsl #31
   183c8:	cmp	r0, r1, lsl #30
   183cc:	adc	r2, r2, r2
   183d0:	subcs	r0, r0, r1, lsl #30
   183d4:	cmp	r0, r1, lsl #29
   183d8:	adc	r2, r2, r2
   183dc:	subcs	r0, r0, r1, lsl #29
   183e0:	cmp	r0, r1, lsl #28
   183e4:	adc	r2, r2, r2
   183e8:	subcs	r0, r0, r1, lsl #28
   183ec:	cmp	r0, r1, lsl #27
   183f0:	adc	r2, r2, r2
   183f4:	subcs	r0, r0, r1, lsl #27
   183f8:	cmp	r0, r1, lsl #26
   183fc:	adc	r2, r2, r2
   18400:	subcs	r0, r0, r1, lsl #26
   18404:	cmp	r0, r1, lsl #25
   18408:	adc	r2, r2, r2
   1840c:	subcs	r0, r0, r1, lsl #25
   18410:	cmp	r0, r1, lsl #24
   18414:	adc	r2, r2, r2
   18418:	subcs	r0, r0, r1, lsl #24
   1841c:	cmp	r0, r1, lsl #23
   18420:	adc	r2, r2, r2
   18424:	subcs	r0, r0, r1, lsl #23
   18428:	cmp	r0, r1, lsl #22
   1842c:	adc	r2, r2, r2
   18430:	subcs	r0, r0, r1, lsl #22
   18434:	cmp	r0, r1, lsl #21
   18438:	adc	r2, r2, r2
   1843c:	subcs	r0, r0, r1, lsl #21
   18440:	cmp	r0, r1, lsl #20
   18444:	adc	r2, r2, r2
   18448:	subcs	r0, r0, r1, lsl #20
   1844c:	cmp	r0, r1, lsl #19
   18450:	adc	r2, r2, r2
   18454:	subcs	r0, r0, r1, lsl #19
   18458:	cmp	r0, r1, lsl #18
   1845c:	adc	r2, r2, r2
   18460:	subcs	r0, r0, r1, lsl #18
   18464:	cmp	r0, r1, lsl #17
   18468:	adc	r2, r2, r2
   1846c:	subcs	r0, r0, r1, lsl #17
   18470:	cmp	r0, r1, lsl #16
   18474:	adc	r2, r2, r2
   18478:	subcs	r0, r0, r1, lsl #16
   1847c:	cmp	r0, r1, lsl #15
   18480:	adc	r2, r2, r2
   18484:	subcs	r0, r0, r1, lsl #15
   18488:	cmp	r0, r1, lsl #14
   1848c:	adc	r2, r2, r2
   18490:	subcs	r0, r0, r1, lsl #14
   18494:	cmp	r0, r1, lsl #13
   18498:	adc	r2, r2, r2
   1849c:	subcs	r0, r0, r1, lsl #13
   184a0:	cmp	r0, r1, lsl #12
   184a4:	adc	r2, r2, r2
   184a8:	subcs	r0, r0, r1, lsl #12
   184ac:	cmp	r0, r1, lsl #11
   184b0:	adc	r2, r2, r2
   184b4:	subcs	r0, r0, r1, lsl #11
   184b8:	cmp	r0, r1, lsl #10
   184bc:	adc	r2, r2, r2
   184c0:	subcs	r0, r0, r1, lsl #10
   184c4:	cmp	r0, r1, lsl #9
   184c8:	adc	r2, r2, r2
   184cc:	subcs	r0, r0, r1, lsl #9
   184d0:	cmp	r0, r1, lsl #8
   184d4:	adc	r2, r2, r2
   184d8:	subcs	r0, r0, r1, lsl #8
   184dc:	cmp	r0, r1, lsl #7
   184e0:	adc	r2, r2, r2
   184e4:	subcs	r0, r0, r1, lsl #7
   184e8:	cmp	r0, r1, lsl #6
   184ec:	adc	r2, r2, r2
   184f0:	subcs	r0, r0, r1, lsl #6
   184f4:	cmp	r0, r1, lsl #5
   184f8:	adc	r2, r2, r2
   184fc:	subcs	r0, r0, r1, lsl #5
   18500:	cmp	r0, r1, lsl #4
   18504:	adc	r2, r2, r2
   18508:	subcs	r0, r0, r1, lsl #4
   1850c:	cmp	r0, r1, lsl #3
   18510:	adc	r2, r2, r2
   18514:	subcs	r0, r0, r1, lsl #3
   18518:	cmp	r0, r1, lsl #2
   1851c:	adc	r2, r2, r2
   18520:	subcs	r0, r0, r1, lsl #2
   18524:	cmp	r0, r1, lsl #1
   18528:	adc	r2, r2, r2
   1852c:	subcs	r0, r0, r1, lsl #1
   18530:	cmp	r0, r1
   18534:	adc	r2, r2, r2
   18538:	subcs	r0, r0, r1
   1853c:	mov	r0, r2
   18540:	bx	lr
   18544:	moveq	r0, #1
   18548:	movne	r0, #0
   1854c:	bx	lr
   18550:	clz	r2, r1
   18554:	rsb	r2, r2, #31
   18558:	lsr	r0, r0, r2
   1855c:	bx	lr
   18560:	cmp	r0, #0
   18564:	mvnne	r0, #0
   18568:	b	187cc <argp_error@@Base+0x1998>
   1856c:	cmp	r1, #0
   18570:	beq	18560 <argp_error@@Base+0x172c>
   18574:	push	{r0, r1, lr}
   18578:	bl	18380 <argp_error@@Base+0x154c>
   1857c:	pop	{r1, r2, lr}
   18580:	mul	r3, r2, r0
   18584:	sub	r1, r1, r3
   18588:	bx	lr
   1858c:	cmp	r1, #0
   18590:	beq	1879c <argp_error@@Base+0x1968>
   18594:	eor	ip, r0, r1
   18598:	rsbmi	r1, r1, #0
   1859c:	subs	r2, r1, #1
   185a0:	beq	18768 <argp_error@@Base+0x1934>
   185a4:	movs	r3, r0
   185a8:	rsbmi	r3, r0, #0
   185ac:	cmp	r3, r1
   185b0:	bls	18774 <argp_error@@Base+0x1940>
   185b4:	tst	r1, r2
   185b8:	beq	18784 <argp_error@@Base+0x1950>
   185bc:	clz	r2, r3
   185c0:	clz	r0, r1
   185c4:	sub	r2, r0, r2
   185c8:	rsbs	r2, r2, #31
   185cc:	addne	r2, r2, r2, lsl #1
   185d0:	mov	r0, #0
   185d4:	addne	pc, pc, r2, lsl #2
   185d8:	nop			; (mov r0, r0)
   185dc:	cmp	r3, r1, lsl #31
   185e0:	adc	r0, r0, r0
   185e4:	subcs	r3, r3, r1, lsl #31
   185e8:	cmp	r3, r1, lsl #30
   185ec:	adc	r0, r0, r0
   185f0:	subcs	r3, r3, r1, lsl #30
   185f4:	cmp	r3, r1, lsl #29
   185f8:	adc	r0, r0, r0
   185fc:	subcs	r3, r3, r1, lsl #29
   18600:	cmp	r3, r1, lsl #28
   18604:	adc	r0, r0, r0
   18608:	subcs	r3, r3, r1, lsl #28
   1860c:	cmp	r3, r1, lsl #27
   18610:	adc	r0, r0, r0
   18614:	subcs	r3, r3, r1, lsl #27
   18618:	cmp	r3, r1, lsl #26
   1861c:	adc	r0, r0, r0
   18620:	subcs	r3, r3, r1, lsl #26
   18624:	cmp	r3, r1, lsl #25
   18628:	adc	r0, r0, r0
   1862c:	subcs	r3, r3, r1, lsl #25
   18630:	cmp	r3, r1, lsl #24
   18634:	adc	r0, r0, r0
   18638:	subcs	r3, r3, r1, lsl #24
   1863c:	cmp	r3, r1, lsl #23
   18640:	adc	r0, r0, r0
   18644:	subcs	r3, r3, r1, lsl #23
   18648:	cmp	r3, r1, lsl #22
   1864c:	adc	r0, r0, r0
   18650:	subcs	r3, r3, r1, lsl #22
   18654:	cmp	r3, r1, lsl #21
   18658:	adc	r0, r0, r0
   1865c:	subcs	r3, r3, r1, lsl #21
   18660:	cmp	r3, r1, lsl #20
   18664:	adc	r0, r0, r0
   18668:	subcs	r3, r3, r1, lsl #20
   1866c:	cmp	r3, r1, lsl #19
   18670:	adc	r0, r0, r0
   18674:	subcs	r3, r3, r1, lsl #19
   18678:	cmp	r3, r1, lsl #18
   1867c:	adc	r0, r0, r0
   18680:	subcs	r3, r3, r1, lsl #18
   18684:	cmp	r3, r1, lsl #17
   18688:	adc	r0, r0, r0
   1868c:	subcs	r3, r3, r1, lsl #17
   18690:	cmp	r3, r1, lsl #16
   18694:	adc	r0, r0, r0
   18698:	subcs	r3, r3, r1, lsl #16
   1869c:	cmp	r3, r1, lsl #15
   186a0:	adc	r0, r0, r0
   186a4:	subcs	r3, r3, r1, lsl #15
   186a8:	cmp	r3, r1, lsl #14
   186ac:	adc	r0, r0, r0
   186b0:	subcs	r3, r3, r1, lsl #14
   186b4:	cmp	r3, r1, lsl #13
   186b8:	adc	r0, r0, r0
   186bc:	subcs	r3, r3, r1, lsl #13
   186c0:	cmp	r3, r1, lsl #12
   186c4:	adc	r0, r0, r0
   186c8:	subcs	r3, r3, r1, lsl #12
   186cc:	cmp	r3, r1, lsl #11
   186d0:	adc	r0, r0, r0
   186d4:	subcs	r3, r3, r1, lsl #11
   186d8:	cmp	r3, r1, lsl #10
   186dc:	adc	r0, r0, r0
   186e0:	subcs	r3, r3, r1, lsl #10
   186e4:	cmp	r3, r1, lsl #9
   186e8:	adc	r0, r0, r0
   186ec:	subcs	r3, r3, r1, lsl #9
   186f0:	cmp	r3, r1, lsl #8
   186f4:	adc	r0, r0, r0
   186f8:	subcs	r3, r3, r1, lsl #8
   186fc:	cmp	r3, r1, lsl #7
   18700:	adc	r0, r0, r0
   18704:	subcs	r3, r3, r1, lsl #7
   18708:	cmp	r3, r1, lsl #6
   1870c:	adc	r0, r0, r0
   18710:	subcs	r3, r3, r1, lsl #6
   18714:	cmp	r3, r1, lsl #5
   18718:	adc	r0, r0, r0
   1871c:	subcs	r3, r3, r1, lsl #5
   18720:	cmp	r3, r1, lsl #4
   18724:	adc	r0, r0, r0
   18728:	subcs	r3, r3, r1, lsl #4
   1872c:	cmp	r3, r1, lsl #3
   18730:	adc	r0, r0, r0
   18734:	subcs	r3, r3, r1, lsl #3
   18738:	cmp	r3, r1, lsl #2
   1873c:	adc	r0, r0, r0
   18740:	subcs	r3, r3, r1, lsl #2
   18744:	cmp	r3, r1, lsl #1
   18748:	adc	r0, r0, r0
   1874c:	subcs	r3, r3, r1, lsl #1
   18750:	cmp	r3, r1
   18754:	adc	r0, r0, r0
   18758:	subcs	r3, r3, r1
   1875c:	cmp	ip, #0
   18760:	rsbmi	r0, r0, #0
   18764:	bx	lr
   18768:	teq	ip, r0
   1876c:	rsbmi	r0, r0, #0
   18770:	bx	lr
   18774:	movcc	r0, #0
   18778:	asreq	r0, ip, #31
   1877c:	orreq	r0, r0, #1
   18780:	bx	lr
   18784:	clz	r2, r1
   18788:	rsb	r2, r2, #31
   1878c:	cmp	ip, #0
   18790:	lsr	r0, r3, r2
   18794:	rsbmi	r0, r0, #0
   18798:	bx	lr
   1879c:	cmp	r0, #0
   187a0:	mvngt	r0, #-2147483648	; 0x80000000
   187a4:	movlt	r0, #-2147483648	; 0x80000000
   187a8:	b	187cc <argp_error@@Base+0x1998>
   187ac:	cmp	r1, #0
   187b0:	beq	1879c <argp_error@@Base+0x1968>
   187b4:	push	{r0, r1, lr}
   187b8:	bl	18594 <argp_error@@Base+0x1760>
   187bc:	pop	{r1, r2, lr}
   187c0:	mul	r3, r2, r0
   187c4:	sub	r1, r1, r3
   187c8:	bx	lr
   187cc:	push	{r1, lr}
   187d0:	mov	r0, #8
   187d4:	bl	10f58 <raise@plt>
   187d8:	pop	{r1, pc}
   187dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   187e0:	mov	r7, r0
   187e4:	ldr	r6, [pc, #72]	; 18834 <argp_error@@Base+0x1a00>
   187e8:	ldr	r5, [pc, #72]	; 18838 <argp_error@@Base+0x1a04>
   187ec:	add	r6, pc, r6
   187f0:	add	r5, pc, r5
   187f4:	sub	r6, r6, r5
   187f8:	mov	r8, r1
   187fc:	mov	r9, r2
   18800:	bl	10f20 <calloc@plt-0x20>
   18804:	asrs	r6, r6, #2
   18808:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1880c:	mov	r4, #0
   18810:	add	r4, r4, #1
   18814:	ldr	r3, [r5], #4
   18818:	mov	r2, r9
   1881c:	mov	r1, r8
   18820:	mov	r0, r7
   18824:	blx	r3
   18828:	cmp	r6, r4
   1882c:	bne	18810 <argp_error@@Base+0x19dc>
   18830:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18834:	andeq	r1, r1, r4, lsl r7
   18838:	andeq	r1, r1, ip, lsl #14
   1883c:	bx	lr

Disassembly of section .fini:

00018840 <.fini>:
   18840:	push	{r3, lr}
   18844:	pop	{r3, pc}
