
../repos/inetutils/src/tftp:     file format elf32-littlearm


Disassembly of section .init:

00011194 <.init>:
   11194:	push	{r3, lr}
   11198:	bl	117d8 <__assert_fail@plt+0x2a0>
   1119c:	pop	{r3, pc}

Disassembly of section .plt:

000111a0 <fdopen@plt-0x14>:
   111a0:	push	{lr}		; (str lr, [sp, #-4]!)
   111a4:	ldr	lr, [pc, #4]	; 111b0 <fdopen@plt-0x4>
   111a8:	add	lr, pc, lr
   111ac:	ldr	pc, [lr, #8]!
   111b0:	andeq	ip, r1, r0, asr lr

000111b4 <fdopen@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #28, 20	; 0x1c000
   111bc:	ldr	pc, [ip, #3664]!	; 0xe50

000111c0 <calloc@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #28, 20	; 0x1c000
   111c8:	ldr	pc, [ip, #3656]!	; 0xe48

000111cc <fputs_unlocked@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #28, 20	; 0x1c000
   111d4:	ldr	pc, [ip, #3648]!	; 0xe40

000111d8 <strcmp@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #28, 20	; 0x1c000
   111e0:	ldr	pc, [ip, #3640]!	; 0xe38

000111e4 <strtol@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #28, 20	; 0x1c000
   111ec:	ldr	pc, [ip, #3632]!	; 0xe30

000111f0 <printf@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #28, 20	; 0x1c000
   111f8:	ldr	pc, [ip, #3624]!	; 0xe28

000111fc <read@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #28, 20	; 0x1c000
   11204:	ldr	pc, [ip, #3616]!	; 0xe20

00011208 <longjmp@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #28, 20	; 0x1c000
   11210:	ldr	pc, [ip, #3608]!	; 0xe18

00011214 <_setjmp@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #28, 20	; 0x1c000
   1121c:	ldr	pc, [ip, #3600]!	; 0xe10

00011220 <memmove@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #28, 20	; 0x1c000
   11228:	ldr	pc, [ip, #3592]!	; 0xe08

0001122c <strchrnul@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #28, 20	; 0x1c000
   11234:	ldr	pc, [ip, #3584]!	; 0xe00

00011238 <free@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #28, 20	; 0x1c000
   11240:	ldr	pc, [ip, #3576]!	; 0xdf8

00011244 <gai_strerror@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #28, 20	; 0x1c000
   1124c:	ldr	pc, [ip, #3568]!	; 0xdf0

00011250 <fgets@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #28, 20	; 0x1c000
   11258:	ldr	pc, [ip, #3560]!	; 0xde8

0001125c <strndup@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #28, 20	; 0x1c000
   11264:	ldr	pc, [ip, #3552]!	; 0xde0

00011268 <memcpy@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #28, 20	; 0x1c000
   11270:	ldr	pc, [ip, #3544]!	; 0xdd8

00011274 <signal@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #28, 20	; 0x1c000
   1127c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011280 <fwrite_unlocked@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #28, 20	; 0x1c000
   11288:	ldr	pc, [ip, #3528]!	; 0xdc8

0001128c <sleep@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #28, 20	; 0x1c000
   11294:	ldr	pc, [ip, #3520]!	; 0xdc0

00011298 <recvfrom@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #28, 20	; 0x1c000
   112a0:	ldr	pc, [ip, #3512]!	; 0xdb8

000112a4 <alarm@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #28, 20	; 0x1c000
   112ac:	ldr	pc, [ip, #3504]!	; 0xdb0

000112b0 <realloc@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #28, 20	; 0x1c000
   112b8:	ldr	pc, [ip, #3496]!	; 0xda8

000112bc <strcasecmp@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #28, 20	; 0x1c000
   112c4:	ldr	pc, [ip, #3488]!	; 0xda0

000112c8 <funlockfile@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #28, 20	; 0x1c000
   112d0:	ldr	pc, [ip, #3480]!	; 0xd98

000112d4 <perror@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #28, 20	; 0x1c000
   112dc:	ldr	pc, [ip, #3472]!	; 0xd90

000112e0 <fwrite@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #28, 20	; 0x1c000
   112e8:	ldr	pc, [ip, #3464]!	; 0xd88

000112ec <ioctl@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #28, 20	; 0x1c000
   112f4:	ldr	pc, [ip, #3456]!	; 0xd80

000112f8 <strcpy@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #28, 20	; 0x1c000
   11300:	ldr	pc, [ip, #3448]!	; 0xd78

00011304 <gettimeofday@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #28, 20	; 0x1c000
   1130c:	ldr	pc, [ip, #3440]!	; 0xd70

00011310 <creat64@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #28, 20	; 0x1c000
   11318:	ldr	pc, [ip, #3432]!	; 0xd68

0001131c <error@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #28, 20	; 0x1c000
   11324:	ldr	pc, [ip, #3424]!	; 0xd60

00011328 <open64@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #28, 20	; 0x1c000
   11330:	ldr	pc, [ip, #3416]!	; 0xd58

00011334 <getenv@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #28, 20	; 0x1c000
   1133c:	ldr	pc, [ip, #3408]!	; 0xd50

00011340 <puts@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #28, 20	; 0x1c000
   11348:	ldr	pc, [ip, #3400]!	; 0xd48

0001134c <malloc@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #28, 20	; 0x1c000
   11354:	ldr	pc, [ip, #3392]!	; 0xd40

00011358 <__libc_start_main@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #28, 20	; 0x1c000
   11360:	ldr	pc, [ip, #3384]!	; 0xd38

00011364 <strerror@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #28, 20	; 0x1c000
   1136c:	ldr	pc, [ip, #3376]!	; 0xd30

00011370 <__ctype_tolower_loc@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #28, 20	; 0x1c000
   11378:	ldr	pc, [ip, #3368]!	; 0xd28

0001137c <__gmon_start__@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #28, 20	; 0x1c000
   11384:	ldr	pc, [ip, #3360]!	; 0xd20

00011388 <mempcpy@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #28, 20	; 0x1c000
   11390:	ldr	pc, [ip, #3352]!	; 0xd18

00011394 <__ctype_b_loc@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #28, 20	; 0x1c000
   1139c:	ldr	pc, [ip, #3344]!	; 0xd10

000113a0 <exit@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #28, 20	; 0x1c000
   113a8:	ldr	pc, [ip, #3336]!	; 0xd08

000113ac <feof@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #28, 20	; 0x1c000
   113b4:	ldr	pc, [ip, #3328]!	; 0xd00

000113b8 <strlen@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #28, 20	; 0x1c000
   113c0:	ldr	pc, [ip, #3320]!	; 0xcf8

000113c4 <strchr@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #28, 20	; 0x1c000
   113cc:	ldr	pc, [ip, #3312]!	; 0xcf0

000113d0 <fprintf@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #28, 20	; 0x1c000
   113d8:	ldr	pc, [ip, #3304]!	; 0xce8

000113dc <__errno_location@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #28, 20	; 0x1c000
   113e4:	ldr	pc, [ip, #3296]!	; 0xce0

000113e8 <getservbyname@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #28, 20	; 0x1c000
   113f0:	ldr	pc, [ip, #3288]!	; 0xcd8

000113f4 <strerror_r@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #28, 20	; 0x1c000
   113fc:	ldr	pc, [ip, #3280]!	; 0xcd0

00011400 <bind@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #28, 20	; 0x1c000
   11408:	ldr	pc, [ip, #3272]!	; 0xcc8

0001140c <memset@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #28, 20	; 0x1c000
   11414:	ldr	pc, [ip, #3264]!	; 0xcc0

00011418 <strncpy@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #28, 20	; 0x1c000
   11420:	ldr	pc, [ip, #3256]!	; 0xcb8

00011424 <write@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #28, 20	; 0x1c000
   1142c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011430 <fileno@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #28, 20	; 0x1c000
   11438:	ldr	pc, [ip, #3240]!	; 0xca8

0001143c <memchr@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #28, 20	; 0x1c000
   11444:	ldr	pc, [ip, #3232]!	; 0xca0

00011448 <fclose@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #28, 20	; 0x1c000
   11450:	ldr	pc, [ip, #3224]!	; 0xc98

00011454 <fseeko64@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #28, 20	; 0x1c000
   1145c:	ldr	pc, [ip, #3216]!	; 0xc90

00011460 <sendto@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #28, 20	; 0x1c000
   11468:	ldr	pc, [ip, #3208]!	; 0xc88

0001146c <__overflow@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #28, 20	; 0x1c000
   11474:	ldr	pc, [ip, #3200]!	; 0xc80

00011478 <setlocale@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #28, 20	; 0x1c000
   11480:	ldr	pc, [ip, #3192]!	; 0xc78

00011484 <strrchr@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #28, 20	; 0x1c000
   1148c:	ldr	pc, [ip, #3184]!	; 0xc70

00011490 <vfprintf@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #28, 20	; 0x1c000
   11498:	ldr	pc, [ip, #3176]!	; 0xc68

0001149c <fputc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #28, 20	; 0x1c000
   114a4:	ldr	pc, [ip, #3168]!	; 0xc60

000114a8 <putc@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #28, 20	; 0x1c000
   114b0:	ldr	pc, [ip, #3160]!	; 0xc58

000114b4 <flockfile@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #28, 20	; 0x1c000
   114bc:	ldr	pc, [ip, #3152]!	; 0xc50

000114c0 <vsnprintf@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #28, 20	; 0x1c000
   114c8:	ldr	pc, [ip, #3144]!	; 0xc48

000114cc <qsort@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #28, 20	; 0x1c000
   114d4:	ldr	pc, [ip, #3136]!	; 0xc40

000114d8 <freeaddrinfo@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #28, 20	; 0x1c000
   114e0:	ldr	pc, [ip, #3128]!	; 0xc38

000114e4 <getaddrinfo@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #28, 20	; 0x1c000
   114ec:	ldr	pc, [ip, #3120]!	; 0xc30

000114f0 <socket@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #28, 20	; 0x1c000
   114f8:	ldr	pc, [ip, #3112]!	; 0xc28

000114fc <isatty@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #28, 20	; 0x1c000
   11504:	ldr	pc, [ip, #3104]!	; 0xc20

00011508 <strncmp@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #28, 20	; 0x1c000
   11510:	ldr	pc, [ip, #3096]!	; 0xc18

00011514 <abort@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #28, 20	; 0x1c000
   1151c:	ldr	pc, [ip, #3088]!	; 0xc10

00011520 <getc@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #28, 20	; 0x1c000
   11528:	ldr	pc, [ip, #3080]!	; 0xc08

0001152c <close@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #28, 20	; 0x1c000
   11534:	ldr	pc, [ip, #3072]!	; 0xc00

00011538 <__assert_fail@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #28, 20	; 0x1c000
   11540:	ldr	pc, [ip, #3064]!	; 0xbf8

Disassembly of section .text:

00011548 <argp_failure@@Base-0x51d0>:
   11548:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1154c:	mov	r5, r1
   11550:	movw	r4, #51708	; 0xc9fc
   11554:	movt	r4, #1
   11558:	strd	r6, [sp, #8]
   1155c:	mov	r6, r0
   11560:	str	r8, [sp, #16]
   11564:	str	lr, [sp, #20]
   11568:	sub	sp, sp, #8
   1156c:	ldr	r0, [r1]
   11570:	bl	198b8 <argp_parse@@Base+0x1194>
   11574:	movw	r1, #55764	; 0xd9d4
   11578:	movt	r1, #1
   1157c:	mov	r0, #6
   11580:	bl	11478 <setlocale@plt>
   11584:	movw	r3, #61372	; 0xefbc
   11588:	movt	r3, #2
   1158c:	movw	ip, #52192	; 0xcbe0
   11590:	movt	ip, #1
   11594:	mov	r0, r4
   11598:	movw	r1, #58364	; 0xe3fc
   1159c:	movt	r1, #2
   115a0:	str	ip, [r3]
   115a4:	bl	19664 <argp_parse@@Base+0xf40>
   115a8:	mov	ip, #0
   115ac:	mov	r2, r5
   115b0:	ldr	r0, [pc, #480]	; 11798 <__assert_fail@plt+0x260>
   115b4:	mov	r3, ip
   115b8:	mov	r1, r6
   115bc:	str	ip, [sp]
   115c0:	str	ip, [sp, #4]
   115c4:	bl	18724 <argp_parse@@Base>
   115c8:	mov	r0, r4
   115cc:	movw	r1, #52160	; 0xcbc0
   115d0:	movt	r1, #1
   115d4:	bl	113e8 <getservbyname@plt>
   115d8:	cmp	r0, #0
   115dc:	moveq	r3, #69	; 0x45
   115e0:	beq	115f0 <__assert_fail@plt+0xb8>
   115e4:	ldr	r3, [r0, #8]
   115e8:	rev16	r3, r3
   115ec:	uxth	r3, r3
   115f0:	movw	r4, #58468	; 0xe464
   115f4:	movt	r4, #2
   115f8:	mov	r0, #0
   115fc:	str	r3, [r4, #144]	; 0x90
   11600:	bl	114fc <isatty@plt>
   11604:	movw	r2, #51880	; 0xcaa8
   11608:	movt	r2, #1
   1160c:	str	r0, [r4, #148]	; 0x94
   11610:	ldrb	lr, [r2, #8]
   11614:	movw	r3, #60100	; 0xeac4
   11618:	movt	r3, #2
   1161c:	movw	r1, #7796	; 0x1e74
   11620:	movt	r1, #1
   11624:	ldr	ip, [r2]
   11628:	mov	r0, #2
   1162c:	ldr	r2, [r2, #4]
   11630:	str	ip, [r3]
   11634:	strb	lr, [r3, #8]
   11638:	str	r2, [r3, #4]
   1163c:	bl	11274 <signal@plt>
   11640:	movw	r3, #57672	; 0xe148
   11644:	movt	r3, #2
   11648:	ldr	r3, [r3, #84]	; 0x54
   1164c:	cmp	r3, #1
   11650:	ble	11684 <__assert_fail@plt+0x14c>
   11654:	movw	r0, #59680	; 0xe920
   11658:	movt	r0, #2
   1165c:	bl	11214 <_setjmp@plt>
   11660:	cmp	r0, #0
   11664:	beq	11670 <__assert_fail@plt+0x138>
   11668:	mov	r0, #0
   1166c:	bl	113a0 <exit@plt>
   11670:	movw	r3, #57672	; 0xe148
   11674:	movt	r3, #2
   11678:	add	r1, r3, #88	; 0x58
   1167c:	ldr	r0, [r3, #84]	; 0x54
   11680:	bl	126c4 <__assert_fail@plt+0x118c>
   11684:	movw	r0, #59680	; 0xe920
   11688:	movt	r0, #2
   1168c:	bl	11214 <_setjmp@plt>
   11690:	cmp	r0, #0
   11694:	beq	116ac <__assert_fail@plt+0x174>
   11698:	movw	r3, #58460	; 0xe45c
   1169c:	movt	r3, #2
   116a0:	mov	r0, #10
   116a4:	ldr	r1, [r3]
   116a8:	bl	114a8 <putc@plt>
   116ac:	movw	r6, #58468	; 0xe464
   116b0:	movt	r6, #2
   116b4:	movw	r8, #57672	; 0xe148
   116b8:	movt	r8, #2
   116bc:	movw	r7, #52216	; 0xcbf8
   116c0:	movt	r7, #1
   116c4:	ldr	r3, [r6, #148]	; 0x94
   116c8:	cmp	r3, #0
   116cc:	bne	11754 <__assert_fail@plt+0x21c>
   116d0:	movw	r5, #58456	; 0xe458
   116d4:	movt	r5, #2
   116d8:	movw	r4, #60132	; 0xeae4
   116dc:	movt	r4, #2
   116e0:	ldr	r2, [r5]
   116e4:	mov	r0, r4
   116e8:	mov	r1, #200	; 0xc8
   116ec:	bl	11250 <fgets@plt>
   116f0:	cmp	r0, #0
   116f4:	beq	11764 <__assert_fail@plt+0x22c>
   116f8:	ldrb	r3, [r4]
   116fc:	cmp	r3, #0
   11700:	beq	116c4 <__assert_fail@plt+0x18c>
   11704:	bl	11ad0 <__assert_fail@plt+0x598>
   11708:	movw	r3, #60092	; 0xeabc
   1170c:	movt	r3, #2
   11710:	ldr	r4, [r3]
   11714:	cmp	r4, #0
   11718:	beq	116c4 <__assert_fail@plt+0x18c>
   1171c:	movw	r5, #59600	; 0xe8d0
   11720:	movt	r5, #2
   11724:	ldr	r0, [r5]
   11728:	bl	128bc <__assert_fail@plt+0x1384>
   1172c:	cmn	r0, #1
   11730:	mov	r3, r0
   11734:	beq	11778 <__assert_fail@plt+0x240>
   11738:	cmp	r0, #0
   1173c:	beq	11788 <__assert_fail@plt+0x250>
   11740:	mov	r1, r5
   11744:	mov	r0, r4
   11748:	ldr	r3, [r3, #8]
   1174c:	blx	r3
   11750:	b	116c4 <__assert_fail@plt+0x18c>
   11754:	mov	r0, r7
   11758:	ldr	r1, [r8, #344]	; 0x158
   1175c:	bl	111f0 <printf@plt>
   11760:	b	116d0 <__assert_fail@plt+0x198>
   11764:	ldr	r0, [r5]
   11768:	bl	113ac <feof@plt>
   1176c:	cmp	r0, #0
   11770:	bne	11668 <__assert_fail@plt+0x130>
   11774:	b	116c4 <__assert_fail@plt+0x18c>
   11778:	movw	r0, #52224	; 0xcc00
   1177c:	movt	r0, #1
   11780:	bl	11340 <puts@plt>
   11784:	b	116c4 <__assert_fail@plt+0x18c>
   11788:	movw	r0, #52244	; 0xcc14
   1178c:	movt	r0, #1
   11790:	bl	11340 <puts@plt>
   11794:	b	116c4 <__assert_fail@plt+0x18c>
   11798:	andeq	lr, r2, r4, lsl #5
   1179c:	mov	fp, #0
   117a0:	mov	lr, #0
   117a4:	pop	{r1}		; (ldr r1, [sp], #4)
   117a8:	mov	r2, sp
   117ac:	push	{r2}		; (str r2, [sp, #-4]!)
   117b0:	push	{r0}		; (str r0, [sp, #-4]!)
   117b4:	ldr	ip, [pc, #16]	; 117cc <__assert_fail@plt+0x294>
   117b8:	push	{ip}		; (str ip, [sp, #-4]!)
   117bc:	ldr	r0, [pc, #12]	; 117d0 <__assert_fail@plt+0x298>
   117c0:	ldr	r3, [pc, #12]	; 117d4 <__assert_fail@plt+0x29c>
   117c4:	bl	11358 <__libc_start_main@plt>
   117c8:	bl	11514 <abort@plt>
   117cc:	andeq	ip, r1, ip, asr r8
   117d0:	andeq	r1, r1, r8, asr #10
   117d4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   117d8:	ldr	r3, [pc, #20]	; 117f4 <__assert_fail@plt+0x2bc>
   117dc:	ldr	r2, [pc, #20]	; 117f8 <__assert_fail@plt+0x2c0>
   117e0:	add	r3, pc, r3
   117e4:	ldr	r2, [r3, r2]
   117e8:	cmp	r2, #0
   117ec:	bxeq	lr
   117f0:	b	1137c <__gmon_start__@plt>
   117f4:	andeq	ip, r1, r8, lsl r8
   117f8:	andeq	r0, r0, ip, lsr r1
   117fc:	ldr	r0, [pc, #24]	; 1181c <__assert_fail@plt+0x2e4>
   11800:	ldr	r3, [pc, #24]	; 11820 <__assert_fail@plt+0x2e8>
   11804:	cmp	r3, r0
   11808:	bxeq	lr
   1180c:	ldr	r3, [pc, #16]	; 11824 <__assert_fail@plt+0x2ec>
   11810:	cmp	r3, #0
   11814:	bxeq	lr
   11818:	bx	r3
   1181c:	andeq	lr, r2, r4, asr #8
   11820:	andeq	lr, r2, r4, asr #8
   11824:	andeq	r0, r0, r0
   11828:	ldr	r0, [pc, #36]	; 11854 <__assert_fail@plt+0x31c>
   1182c:	ldr	r1, [pc, #36]	; 11858 <__assert_fail@plt+0x320>
   11830:	sub	r1, r1, r0
   11834:	asr	r1, r1, #2
   11838:	add	r1, r1, r1, lsr #31
   1183c:	asrs	r1, r1, #1
   11840:	bxeq	lr
   11844:	ldr	r3, [pc, #16]	; 1185c <__assert_fail@plt+0x324>
   11848:	cmp	r3, #0
   1184c:	bxeq	lr
   11850:	bx	r3
   11854:	andeq	lr, r2, r4, asr #8
   11858:	andeq	lr, r2, r4, asr #8
   1185c:	andeq	r0, r0, r0
   11860:	push	{r4, lr}
   11864:	ldr	r4, [pc, #24]	; 11884 <__assert_fail@plt+0x34c>
   11868:	ldrb	r3, [r4]
   1186c:	cmp	r3, #0
   11870:	popne	{r4, pc}
   11874:	bl	117fc <__assert_fail@plt+0x2c4>
   11878:	mov	r3, #1
   1187c:	strb	r3, [r4]
   11880:	pop	{r4, pc}
   11884:	andeq	lr, r2, r0, ror #8
   11888:	b	11828 <__assert_fail@plt+0x2f0>
   1188c:	andeq	r0, r0, r0
   11890:	mov	r0, #0
   11894:	str	r4, [sp, #-8]!
   11898:	str	lr, [sp, #4]
   1189c:	bl	113a0 <exit@plt>
   118a0:	movw	r3, #58468	; 0xe464
   118a4:	movt	r3, #2
   118a8:	ldr	ip, [r3]
   118ac:	movw	r2, #51388	; 0xc8bc
   118b0:	movt	r2, #1
   118b4:	movw	r1, #52816	; 0xce50
   118b8:	movt	r1, #1
   118bc:	movw	r0, #51392	; 0xc8c0
   118c0:	movt	r0, #1
   118c4:	cmp	ip, #0
   118c8:	moveq	ip, #1
   118cc:	movne	ip, #0
   118d0:	movne	r1, r2
   118d4:	str	ip, [r3]
   118d8:	b	111f0 <printf@plt>
   118dc:	movw	r3, #58468	; 0xe464
   118e0:	movt	r3, #2
   118e4:	ldr	ip, [r3, #4]
   118e8:	movw	r2, #51388	; 0xc8bc
   118ec:	movt	r2, #1
   118f0:	movw	r1, #52816	; 0xce50
   118f4:	movt	r1, #1
   118f8:	movw	r0, #51412	; 0xc8d4
   118fc:	movt	r0, #1
   11900:	cmp	ip, #0
   11904:	moveq	ip, #1
   11908:	movne	ip, #0
   1190c:	movne	r1, r2
   11910:	str	ip, [r3, #4]
   11914:	b	111f0 <printf@plt>
   11918:	strd	r4, [sp, #-12]!
   1191c:	movw	r5, #60084	; 0xeab4
   11920:	movt	r5, #2
   11924:	movw	ip, #46473	; 0xb589
   11928:	movt	ip, #5368	; 0x14f8
   1192c:	vldr	d5, [pc, #228]	; 11a18 <__assert_fail@plt+0x4e0>
   11930:	mov	r4, r1
   11934:	mov	r1, r0
   11938:	vldr	s6, [r5]
   1193c:	ldr	r3, [r5, #4]
   11940:	str	lr, [sp, #8]
   11944:	movw	lr, #60076	; 0xeaac
   11948:	movt	lr, #2
   1194c:	vpush	{d8}
   11950:	sub	sp, sp, #12
   11954:	ldr	r2, [lr, #4]
   11958:	vcvt.f64.s32	d3, s6
   1195c:	smull	r0, r5, ip, r3
   11960:	vldr	s8, [lr]
   11964:	asr	r3, r3, #31
   11968:	smull	r0, ip, ip, r2
   1196c:	asr	r0, r2, #31
   11970:	mov	r2, r4
   11974:	rsb	r3, r3, r5, asr #13
   11978:	rsb	r0, r0, ip, asr #13
   1197c:	vcvt.f64.s32	d4, s8
   11980:	vmov	s15, r3
   11984:	vmov	s14, r0
   11988:	movw	r0, #51432	; 0xc8e8
   1198c:	movt	r0, #1
   11990:	vcvt.f64.s32	d6, s15
   11994:	vcvt.f64.s32	d7, s14
   11998:	vmla.f64	d6, d3, d5
   1199c:	vmla.f64	d7, d4, d5
   119a0:	vsub.f64	d7, d6, d7
   119a4:	vdiv.f64	d8, d7, d5
   119a8:	vstr	d8, [sp]
   119ac:	bl	111f0 <printf@plt>
   119b0:	movw	r3, #58468	; 0xe464
   119b4:	movt	r3, #2
   119b8:	ldr	r3, [r3, #4]
   119bc:	cmp	r3, #0
   119c0:	bne	119ec <__assert_fail@plt+0x4b4>
   119c4:	movw	r3, #58460	; 0xe45c
   119c8:	movt	r3, #2
   119cc:	ldr	r1, [r3]
   119d0:	mov	r0, #10
   119d4:	add	sp, sp, #12
   119d8:	vpop	{d8}
   119dc:	ldrd	r4, [sp]
   119e0:	ldr	lr, [sp, #8]
   119e4:	add	sp, sp, #12
   119e8:	b	114a8 <putc@plt>
   119ec:	vmov	s15, r4
   119f0:	movw	r0, #51460	; 0xc904
   119f4:	movt	r0, #1
   119f8:	vldr	d6, [pc, #32]	; 11a20 <__assert_fail@plt+0x4e8>
   119fc:	vcvt.f64.u32	d7, s15
   11a00:	vmul.f64	d7, d7, d6
   11a04:	vdiv.f64	d7, d7, d8
   11a08:	vmov	r2, r3, d7
   11a0c:	bl	111f0 <printf@plt>
   11a10:	b	119c4 <__assert_fail@plt+0x48c>
   11a14:	nop	{0}
   11a18:	andeq	r0, r0, r0
   11a1c:	eormi	r0, r4, r0
   11a20:	andeq	r0, r0, r0
   11a24:	eormi	r0, r0, r0
   11a28:	str	r4, [sp, #-8]!
   11a2c:	movw	r4, #58468	; 0xe464
   11a30:	movt	r4, #2
   11a34:	ldr	r3, [r4, #8]
   11a38:	str	lr, [sp, #4]
   11a3c:	cmp	r3, #0
   11a40:	beq	11ac0 <__assert_fail@plt+0x588>
   11a44:	movw	r3, #60096	; 0xeac0
   11a48:	movt	r3, #2
   11a4c:	movw	r0, #51480	; 0xc918
   11a50:	movt	r0, #1
   11a54:	ldr	r1, [r3]
   11a58:	bl	111f0 <printf@plt>
   11a5c:	ldm	r4, {r3, lr}
   11a60:	movw	r2, #52816	; 0xce50
   11a64:	movt	r2, #1
   11a68:	movw	ip, #51388	; 0xc8bc
   11a6c:	movt	ip, #1
   11a70:	movw	r1, #60100	; 0xeac4
   11a74:	movt	r1, #2
   11a78:	movw	r0, #51516	; 0xc93c
   11a7c:	movt	r0, #1
   11a80:	cmp	r3, #0
   11a84:	movne	r3, r2
   11a88:	moveq	r3, ip
   11a8c:	cmp	lr, #0
   11a90:	moveq	r2, ip
   11a94:	bl	111f0 <printf@plt>
   11a98:	movw	r3, #57672	; 0xe148
   11a9c:	movt	r3, #2
   11aa0:	ldr	r4, [sp]
   11aa4:	movw	r0, #51552	; 0xc960
   11aa8:	movt	r0, #1
   11aac:	ldr	r2, [r3]
   11ab0:	ldr	lr, [sp, #4]
   11ab4:	add	sp, sp, #8
   11ab8:	ldr	r1, [r3, #4]
   11abc:	b	111f0 <printf@plt>
   11ac0:	movw	r0, #51500	; 0xc92c
   11ac4:	movt	r0, #1
   11ac8:	bl	11340 <puts@plt>
   11acc:	b	11a5c <__assert_fail@plt+0x524>
   11ad0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ad4:	movw	r4, #60132	; 0xeae4
   11ad8:	movt	r4, #2
   11adc:	strd	r6, [sp, #8]
   11ae0:	movw	r5, #60092	; 0xeabc
   11ae4:	movt	r5, #2
   11ae8:	str	r8, [sp, #16]
   11aec:	mov	r6, #0
   11af0:	str	lr, [sp, #20]
   11af4:	ldrb	r3, [r4]
   11af8:	str	r6, [r5]
   11afc:	cmp	r3, r6
   11b00:	movweq	r6, #59600	; 0xe8d0
   11b04:	movteq	r6, #2
   11b08:	beq	11b90 <__assert_fail@plt+0x658>
   11b0c:	bl	11394 <__ctype_b_loc@plt>
   11b10:	mov	r7, r6
   11b14:	mov	lr, r6
   11b18:	mov	r3, r4
   11b1c:	mov	r4, r6
   11b20:	movw	r6, #59600	; 0xe8d0
   11b24:	movt	r6, #2
   11b28:	ldrb	r2, [r3]
   11b2c:	ldr	r1, [r0]
   11b30:	lsl	ip, r2, #1
   11b34:	ldrh	ip, [r1, ip]
   11b38:	tst	ip, #8192	; 0x2000
   11b3c:	beq	11b54 <__assert_fail@plt+0x61c>
   11b40:	ldrb	r2, [r3, #1]!
   11b44:	lsl	ip, r2, #1
   11b48:	ldrh	ip, [r1, ip]
   11b4c:	tst	ip, #8192	; 0x2000
   11b50:	bne	11b40 <__assert_fail@plt+0x608>
   11b54:	cmp	r2, #0
   11b58:	beq	11bc8 <__assert_fail@plt+0x690>
   11b5c:	add	r4, r4, #1
   11b60:	str	r3, [r6], #4
   11b64:	b	11b78 <__assert_fail@plt+0x640>
   11b68:	ldrh	r2, [r1, lr]
   11b6c:	tst	r2, #8192	; 0x2000
   11b70:	bne	11bac <__assert_fail@plt+0x674>
   11b74:	mov	r3, ip
   11b78:	ldrb	r2, [r3, #1]
   11b7c:	add	ip, r3, #1
   11b80:	cmp	r2, #0
   11b84:	lsl	lr, r2, #1
   11b88:	bne	11b68 <__assert_fail@plt+0x630>
   11b8c:	str	r4, [r5]
   11b90:	mov	r3, #0
   11b94:	ldrd	r4, [sp]
   11b98:	ldr	r8, [sp, #16]
   11b9c:	str	r3, [r6]
   11ba0:	ldrd	r6, [sp, #8]
   11ba4:	add	sp, sp, #20
   11ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bac:	ldrb	r2, [ip, #1]
   11bb0:	add	r3, r3, #2
   11bb4:	mov	lr, #1
   11bb8:	strb	r7, [ip]
   11bbc:	cmp	r2, #0
   11bc0:	bne	11b28 <__assert_fail@plt+0x5f0>
   11bc4:	b	11b8c <__assert_fail@plt+0x654>
   11bc8:	cmp	lr, #0
   11bcc:	bne	11b8c <__assert_fail@plt+0x654>
   11bd0:	b	11b90 <__assert_fail@plt+0x658>
   11bd4:	strd	r4, [sp, #-16]!
   11bd8:	mov	r5, r1
   11bdc:	ldrsh	r4, [r1]
   11be0:	str	r6, [sp, #8]
   11be4:	str	lr, [sp, #12]
   11be8:	rev16	r4, r4
   11bec:	uxth	r4, r4
   11bf0:	sub	r1, r4, #1
   11bf4:	cmp	r1, #4
   11bf8:	bls	11c20 <__assert_fail@plt+0x6e8>
   11bfc:	mov	r1, r0
   11c00:	mov	r2, r4
   11c04:	movw	r0, #51608	; 0xc998
   11c08:	movt	r0, #1
   11c0c:	ldrd	r4, [sp]
   11c10:	ldr	r6, [sp, #8]
   11c14:	ldr	lr, [sp, #12]
   11c18:	add	sp, sp, #16
   11c1c:	b	111f0 <printf@plt>
   11c20:	movw	r3, #51308	; 0xc86c
   11c24:	movt	r3, #1
   11c28:	mov	r1, r0
   11c2c:	mov	r6, r2
   11c30:	ldr	r2, [r3, r4, lsl #2]
   11c34:	movw	r0, #51624	; 0xc9a8
   11c38:	movt	r0, #1
   11c3c:	bl	111f0 <printf@plt>
   11c40:	cmp	r4, #4
   11c44:	beq	11c7c <__assert_fail@plt+0x744>
   11c48:	cmp	r4, #5
   11c4c:	beq	11cc0 <__assert_fail@plt+0x788>
   11c50:	cmp	r4, #3
   11c54:	beq	11ca4 <__assert_fail@plt+0x76c>
   11c58:	add	r5, r5, #2
   11c5c:	mov	r0, r5
   11c60:	bl	113b8 <strlen@plt>
   11c64:	add	r2, r0, #1
   11c68:	mov	r1, r5
   11c6c:	movw	r0, #51632	; 0xc9b0
   11c70:	movt	r0, #1
   11c74:	add	r2, r5, r2
   11c78:	b	11c0c <__assert_fail@plt+0x6d4>
   11c7c:	ldrh	r1, [r5, #2]
   11c80:	movw	r0, #51676	; 0xc9dc
   11c84:	movt	r0, #1
   11c88:	ldrd	r4, [sp]
   11c8c:	ldr	r6, [sp, #8]
   11c90:	rev16	r1, r1
   11c94:	uxth	r1, r1
   11c98:	ldr	lr, [sp, #12]
   11c9c:	add	sp, sp, #16
   11ca0:	b	111f0 <printf@plt>
   11ca4:	ldrh	r1, [r5, #2]
   11ca8:	movw	r0, #51652	; 0xc9c4
   11cac:	movt	r0, #1
   11cb0:	sub	r2, r6, #4
   11cb4:	rev16	r1, r1
   11cb8:	uxth	r1, r1
   11cbc:	b	11c0c <__assert_fail@plt+0x6d4>
   11cc0:	movw	r0, #51688	; 0xc9e8
   11cc4:	movt	r0, #1
   11cc8:	ldrsh	r1, [r5, #2]
   11ccc:	add	r2, r5, #4
   11cd0:	b	11cb4 <__assert_fail@plt+0x77c>
   11cd4:	mov	r3, #194	; 0xc2
   11cd8:	strd	r4, [sp, #-20]!	; 0xffffffec
   11cdc:	mov	ip, #0
   11ce0:	strd	r6, [sp, #8]
   11ce4:	movw	r1, #51708	; 0xc9fc
   11ce8:	movt	r1, #1
   11cec:	str	lr, [sp, #16]
   11cf0:	sub	sp, sp, #172	; 0xac
   11cf4:	mov	lr, #2
   11cf8:	add	r2, sp, #8
   11cfc:	mov	r4, r0
   11d00:	str	r3, [sp, #8]
   11d04:	add	r3, sp, #4
   11d08:	str	ip, [sp, #12]
   11d0c:	str	lr, [sp, #16]
   11d10:	str	ip, [sp, #20]
   11d14:	str	ip, [sp, #24]
   11d18:	str	ip, [sp, #28]
   11d1c:	str	ip, [sp, #32]
   11d20:	str	ip, [sp, #36]	; 0x24
   11d24:	bl	114e4 <getaddrinfo@plt>
   11d28:	cmp	r0, #0
   11d2c:	bne	11e44 <__assert_fail@plt+0x90c>
   11d30:	movw	r6, #57672	; 0xe148
   11d34:	movt	r6, #2
   11d38:	ldr	r0, [r6, #8]
   11d3c:	cmp	r0, #0
   11d40:	blt	11d50 <__assert_fail@plt+0x818>
   11d44:	bl	1152c <close@plt>
   11d48:	mvn	r3, #0
   11d4c:	str	r3, [r6, #8]
   11d50:	ldr	r4, [sp, #4]
   11d54:	cmp	r4, #0
   11d58:	beq	11e34 <__assert_fail@plt+0x8fc>
   11d5c:	ldrd	r0, [r4, #4]
   11d60:	ldr	r2, [r4, #12]
   11d64:	bl	114f0 <socket@plt>
   11d68:	mov	r5, r0
   11d6c:	mov	r1, #0
   11d70:	cmp	r5, r1
   11d74:	mov	r2, #128	; 0x80
   11d78:	add	r0, sp, #40	; 0x28
   11d7c:	str	r5, [r6, #8]
   11d80:	blt	11e24 <__assert_fail@plt+0x8ec>
   11d84:	bl	1140c <memset@plt>
   11d88:	ldr	r3, [r4, #4]
   11d8c:	add	r1, sp, #40	; 0x28
   11d90:	mov	r0, r5
   11d94:	ldr	r2, [r4, #16]
   11d98:	strh	r3, [sp, #40]	; 0x28
   11d9c:	bl	11400 <bind@plt>
   11da0:	subs	r7, r0, #0
   11da4:	bne	11e14 <__assert_fail@plt+0x8dc>
   11da8:	ldr	r2, [r4, #16]
   11dac:	movw	r5, #58468	; 0xe464
   11db0:	movt	r5, #2
   11db4:	add	r0, r5, #16
   11db8:	movw	r6, #60096	; 0xeac0
   11dbc:	movt	r6, #2
   11dc0:	ldr	r1, [r4, #20]
   11dc4:	str	r2, [r5, #12]
   11dc8:	bl	11268 <memcpy@plt>
   11dcc:	mov	r3, #1
   11dd0:	ldr	r0, [r6]
   11dd4:	str	r3, [r5, #8]
   11dd8:	bl	1975c <argp_parse@@Base+0x1038>
   11ddc:	ldr	r0, [r4, #24]
   11de0:	cmp	r0, #0
   11de4:	movweq	r0, #51732	; 0xca14
   11de8:	movteq	r0, #1
   11dec:	bl	1aa88 <argp_parse@@Base+0x2364>
   11df0:	str	r0, [r6]
   11df4:	ldr	r0, [sp, #4]
   11df8:	bl	114d8 <freeaddrinfo@plt>
   11dfc:	mov	r0, r7
   11e00:	add	sp, sp, #172	; 0xac
   11e04:	ldrd	r4, [sp]
   11e08:	ldrd	r6, [sp, #8]
   11e0c:	add	sp, sp, #16
   11e10:	pop	{pc}		; (ldr pc, [sp], #4)
   11e14:	mov	r0, r5
   11e18:	bl	1152c <close@plt>
   11e1c:	mvn	r3, #0
   11e20:	str	r3, [r6, #8]
   11e24:	ldr	r4, [r4, #28]
   11e28:	cmp	r4, #0
   11e2c:	bne	11d5c <__assert_fail@plt+0x824>
   11e30:	ldr	r4, [sp, #4]
   11e34:	mov	r0, r4
   11e38:	mvn	r7, #0
   11e3c:	bl	114d8 <freeaddrinfo@plt>
   11e40:	b	11dfc <__assert_fail@plt+0x8c4>
   11e44:	movw	r3, #58448	; 0xe450
   11e48:	movt	r3, #2
   11e4c:	ldr	r5, [r3]
   11e50:	mvn	r7, #0
   11e54:	bl	11244 <gai_strerror@plt>
   11e58:	mov	r3, r0
   11e5c:	mov	r2, r4
   11e60:	movw	r1, #51716	; 0xca04
   11e64:	movt	r1, #1
   11e68:	mov	r0, r5
   11e6c:	bl	113d0 <fprintf@plt>
   11e70:	b	11dfc <__assert_fail@plt+0x8c4>
   11e74:	mov	r1, #1
   11e78:	mov	r0, #14
   11e7c:	str	r4, [sp, #-8]!
   11e80:	str	lr, [sp, #4]
   11e84:	bl	11274 <signal@plt>
   11e88:	mov	r0, #0
   11e8c:	bl	112a4 <alarm@plt>
   11e90:	movw	r0, #59680	; 0xe920
   11e94:	movt	r0, #2
   11e98:	mvn	r1, #0
   11e9c:	bl	11208 <longjmp@plt>
   11ea0:	movw	r3, #60072	; 0xeaa8
   11ea4:	movt	r3, #2
   11ea8:	str	r4, [sp, #-8]!
   11eac:	movw	r1, #57672	; 0xe148
   11eb0:	movt	r1, #2
   11eb4:	ldr	r2, [r3]
   11eb8:	ldr	r0, [r1, #4]
   11ebc:	ldr	r1, [r1]
   11ec0:	str	lr, [sp, #4]
   11ec4:	add	r2, r2, r0
   11ec8:	cmp	r2, r1
   11ecc:	str	r2, [r3]
   11ed0:	blt	11ef0 <__assert_fail@plt+0x9b8>
   11ed4:	movw	r0, #51740	; 0xca1c
   11ed8:	movt	r0, #1
   11edc:	bl	11340 <puts@plt>
   11ee0:	movw	r0, #59680	; 0xe920
   11ee4:	movt	r0, #2
   11ee8:	mvn	r1, #0
   11eec:	bl	11208 <longjmp@plt>
   11ef0:	movw	r0, #59208	; 0xe748
   11ef4:	movt	r0, #2
   11ef8:	mov	r1, #1
   11efc:	bl	11208 <longjmp@plt>
   11f00:	strd	r4, [sp, #-20]!	; 0xffffffec
   11f04:	mov	r1, #0
   11f08:	movw	r5, #58688	; 0xe540
   11f0c:	movt	r5, #2
   11f10:	strd	r6, [sp, #8]
   11f14:	movw	r6, #57672	; 0xe148
   11f18:	movt	r6, #2
   11f1c:	rev16	ip, r0
   11f20:	str	lr, [sp, #16]
   11f24:	ldr	r3, [r6, #12]
   11f28:	mov	r2, #5
   11f2c:	sub	sp, sp, #12
   11f30:	strb	r1, [r5]
   11f34:	strb	r2, [r5, #1]
   11f38:	strh	ip, [r5, #2]
   11f3c:	cmp	r3, r1
   11f40:	blt	12048 <__assert_fail@plt+0xb10>
   11f44:	cmp	r0, r3
   11f48:	beq	12050 <__assert_fail@plt+0xb18>
   11f4c:	add	r3, r6, #12
   11f50:	b	11f60 <__assert_fail@plt+0xa28>
   11f54:	cmp	r2, r0
   11f58:	beq	12024 <__assert_fail@plt+0xaec>
   11f5c:	mov	r3, r4
   11f60:	ldr	r2, [r3, #8]
   11f64:	add	r4, r3, #8
   11f68:	cmp	r2, #0
   11f6c:	bge	11f54 <__assert_fail@plt+0xa1c>
   11f70:	sub	r0, r0, #100	; 0x64
   11f74:	bl	11364 <strerror@plt>
   11f78:	mov	r7, r0
   11f7c:	mov	r3, #0
   11f80:	str	r0, [r4, #4]
   11f84:	strb	r3, [r5, #2]
   11f88:	strb	r3, [r5, #3]
   11f8c:	mov	r0, r7
   11f90:	movw	r5, #58468	; 0xe464
   11f94:	movt	r5, #2
   11f98:	bl	113b8 <strlen@plt>
   11f9c:	mov	r4, r0
   11fa0:	mov	r1, r7
   11fa4:	ldr	r0, [pc, #172]	; 12058 <__assert_fail@plt+0xb20>
   11fa8:	add	r2, r4, #1
   11fac:	add	r4, r4, #4
   11fb0:	bl	11268 <memcpy@plt>
   11fb4:	ldr	r3, [r5]
   11fb8:	cmp	r3, #0
   11fbc:	bne	1202c <__assert_fail@plt+0xaf4>
   11fc0:	ldr	lr, [pc, #148]	; 1205c <__assert_fail@plt+0xb24>
   11fc4:	movw	r1, #58688	; 0xe540
   11fc8:	movt	r1, #2
   11fcc:	mov	r3, #0
   11fd0:	mov	r2, r4
   11fd4:	ldr	ip, [r5, #12]
   11fd8:	ldr	r0, [r6, #8]
   11fdc:	str	lr, [sp]
   11fe0:	str	ip, [sp, #4]
   11fe4:	bl	11460 <sendto@plt>
   11fe8:	cmp	r0, r4
   11fec:	beq	12010 <__assert_fail@plt+0xad8>
   11ff0:	movw	r0, #51768	; 0xca38
   11ff4:	movt	r0, #1
   11ff8:	add	sp, sp, #12
   11ffc:	ldrd	r4, [sp]
   12000:	ldrd	r6, [sp, #8]
   12004:	ldr	lr, [sp, #16]
   12008:	add	sp, sp, #20
   1200c:	b	112d4 <perror@plt>
   12010:	add	sp, sp, #12
   12014:	ldrd	r4, [sp]
   12018:	ldrd	r6, [sp, #8]
   1201c:	add	sp, sp, #16
   12020:	pop	{pc}		; (ldr pc, [sp], #4)
   12024:	ldr	r7, [r3, #12]
   12028:	b	11f8c <__assert_fail@plt+0xa54>
   1202c:	movw	r1, #58688	; 0xe540
   12030:	movt	r1, #2
   12034:	movw	r0, #51760	; 0xca30
   12038:	movt	r0, #1
   1203c:	mov	r2, r4
   12040:	bl	11bd4 <__assert_fail@plt+0x69c>
   12044:	b	11fc0 <__assert_fail@plt+0xa88>
   12048:	add	r4, r6, #12
   1204c:	b	11f70 <__assert_fail@plt+0xa38>
   12050:	ldr	r7, [r6, #16]
   12054:	b	11f8c <__assert_fail@plt+0xa54>
   12058:	andeq	lr, r2, r4, asr #10
   1205c:	andeq	lr, r2, r4, ror r4
   12060:	cmp	r0, #0
   12064:	beq	12094 <__assert_fail@plt+0xb5c>
   12068:	cmp	r0, #118	; 0x76
   1206c:	bne	1208c <__assert_fail@plt+0xb54>
   12070:	movw	r3, #58468	; 0xe464
   12074:	movt	r3, #2
   12078:	ldr	r2, [r3, #4]
   1207c:	mov	r0, #0
   12080:	add	r2, r2, #1
   12084:	str	r2, [r3, #4]
   12088:	bx	lr
   1208c:	mov	r0, #7
   12090:	bx	lr
   12094:	ldr	r3, [r2, #20]
   12098:	mov	r0, r2
   1209c:	strd	r4, [sp, #-16]!
   120a0:	movw	r4, #57672	; 0xe148
   120a4:	movt	r4, #2
   120a8:	mov	r5, r1
   120ac:	str	r6, [sp, #8]
   120b0:	str	lr, [sp, #12]
   120b4:	cmp	r3, #1
   120b8:	bhi	120c8 <__assert_fail@plt+0xb90>
   120bc:	ldr	r3, [r4, #84]	; 0x54
   120c0:	cmp	r3, #2
   120c4:	ble	120e0 <__assert_fail@plt+0xba8>
   120c8:	movw	r3, #58448	; 0xe450
   120cc:	movt	r3, #2
   120d0:	movw	r2, #262	; 0x106
   120d4:	ldr	r1, [r3]
   120d8:	bl	17f50 <argp_state_help@@Base>
   120dc:	ldr	r3, [r4, #84]	; 0x54
   120e0:	add	r2, r4, r3, lsl #2
   120e4:	add	r3, r3, #1
   120e8:	mov	r0, #0
   120ec:	ldr	r6, [sp, #8]
   120f0:	str	r3, [r4, #84]	; 0x54
   120f4:	str	r5, [r2, #88]	; 0x58
   120f8:	ldrd	r4, [sp]
   120fc:	add	sp, sp, #12
   12100:	pop	{pc}		; (ldr pc, [sp], #4)
   12104:	cmp	r0, #1
   12108:	ble	12244 <__assert_fail@plt+0xd0c>
   1210c:	cmp	r0, #2
   12110:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12114:	strd	r6, [sp, #8]
   12118:	movw	r6, #57672	; 0xe148
   1211c:	movt	r6, #2
   12120:	mov	r7, r1
   12124:	str	r8, [sp, #16]
   12128:	str	lr, [sp, #20]
   1212c:	bne	121ac <__assert_fail@plt+0xc74>
   12130:	ldr	r1, [r6, #100]	; 0x64
   12134:	ldr	r5, [r7, #4]
   12138:	cmp	r1, #0
   1213c:	beq	1219c <__assert_fail@plt+0xc64>
   12140:	add	r4, r6, #100	; 0x64
   12144:	b	12154 <__assert_fail@plt+0xc1c>
   12148:	ldr	r1, [r4, #8]!
   1214c:	cmp	r1, #0
   12150:	beq	1219c <__assert_fail@plt+0xc64>
   12154:	mov	r0, r5
   12158:	bl	111d8 <strcmp@plt>
   1215c:	cmp	r0, #0
   12160:	bne	12148 <__assert_fail@plt+0xc10>
   12164:	movw	r0, #60100	; 0xeac4
   12168:	movt	r0, #2
   1216c:	ldr	r1, [r4, #4]
   12170:	bl	112f8 <strcpy@plt>
   12174:	movw	r3, #58468	; 0xe464
   12178:	movt	r3, #2
   1217c:	ldr	r3, [r3, #4]
   12180:	cmp	r3, #0
   12184:	bne	1221c <__assert_fail@plt+0xce4>
   12188:	ldrd	r4, [sp]
   1218c:	ldrd	r6, [sp, #8]
   12190:	ldr	r8, [sp, #16]
   12194:	add	sp, sp, #20
   12198:	pop	{pc}		; (ldr pc, [sp], #4)
   1219c:	movw	r0, #51852	; 0xca8c
   121a0:	movt	r0, #1
   121a4:	mov	r1, r5
   121a8:	bl	111f0 <printf@plt>
   121ac:	movw	r0, #51824	; 0xca70
   121b0:	movt	r0, #1
   121b4:	ldr	r1, [r7]
   121b8:	bl	111f0 <printf@plt>
   121bc:	ldr	r2, [r6, #100]	; 0x64
   121c0:	cmp	r2, #0
   121c4:	beq	121fc <__assert_fail@plt+0xcc4>
   121c8:	ldr	r4, [pc, #136]	; 12258 <__assert_fail@plt+0xd20>
   121cc:	movw	r1, #52104	; 0xcb88
   121d0:	movt	r1, #1
   121d4:	movw	r6, #51840	; 0xca80
   121d8:	movt	r6, #1
   121dc:	movw	r5, #51848	; 0xca88
   121e0:	movt	r5, #1
   121e4:	mov	r0, r6
   121e8:	bl	111f0 <printf@plt>
   121ec:	ldr	r2, [r4, #8]!
   121f0:	mov	r1, r5
   121f4:	cmp	r2, #0
   121f8:	bne	121e4 <__assert_fail@plt+0xcac>
   121fc:	movw	r0, #51836	; 0xca7c
   12200:	movt	r0, #1
   12204:	ldrd	r4, [sp]
   12208:	ldrd	r6, [sp, #8]
   1220c:	ldr	r8, [sp, #16]
   12210:	ldr	lr, [sp, #20]
   12214:	add	sp, sp, #24
   12218:	b	11340 <puts@plt>
   1221c:	movw	r1, #60100	; 0xeac4
   12220:	movt	r1, #2
   12224:	ldrd	r4, [sp]
   12228:	movw	r0, #51808	; 0xca60
   1222c:	movt	r0, #1
   12230:	ldrd	r6, [sp, #8]
   12234:	ldr	r8, [sp, #16]
   12238:	ldr	lr, [sp, #20]
   1223c:	add	sp, sp, #24
   12240:	b	111f0 <printf@plt>
   12244:	movw	r1, #60100	; 0xeac4
   12248:	movt	r1, #2
   1224c:	movw	r0, #51772	; 0xca3c
   12250:	movt	r0, #1
   12254:	b	111f0 <printf@plt>
   12258:	andeq	lr, r2, ip, lsr #3
   1225c:	movw	r2, #58468	; 0xe464
   12260:	movt	r2, #2
   12264:	movw	r3, #51872	; 0xcaa0
   12268:	movt	r3, #1
   1226c:	ldr	r0, [r2, #4]
   12270:	movw	r1, #60100	; 0xeac4
   12274:	movt	r1, #2
   12278:	ldrh	r2, [r3, #4]
   1227c:	ldr	r3, [r3]
   12280:	cmp	r0, #0
   12284:	str	r3, [r1]
   12288:	strh	r2, [r1, #4]
   1228c:	bne	12294 <__assert_fail@plt+0xd5c>
   12290:	bx	lr
   12294:	movw	r0, #51808	; 0xca60
   12298:	movt	r0, #1
   1229c:	b	111f0 <printf@plt>
   122a0:	movw	r2, #58468	; 0xe464
   122a4:	movt	r2, #2
   122a8:	movw	r3, #51880	; 0xcaa8
   122ac:	movt	r3, #1
   122b0:	ldr	ip, [r2, #4]
   122b4:	movw	r1, #60100	; 0xeac4
   122b8:	movt	r1, #2
   122bc:	ldrb	r0, [r3, #8]
   122c0:	ldrd	r2, [r3]
   122c4:	cmp	ip, #0
   122c8:	str	r2, [r1]
   122cc:	str	r3, [r1, #4]
   122d0:	strb	r0, [r1, #8]
   122d4:	bne	122dc <__assert_fail@plt+0xda4>
   122d8:	bx	lr
   122dc:	movw	r0, #51808	; 0xca60
   122e0:	movt	r0, #1
   122e4:	b	111f0 <printf@plt>
   122e8:	cmp	r0, #1
   122ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   122f0:	strd	r6, [sp, #8]
   122f4:	strd	r8, [sp, #16]
   122f8:	strd	sl, [sp, #24]
   122fc:	str	lr, [sp, #32]
   12300:	sub	sp, sp, #12
   12304:	beq	12438 <__assert_fail@plt+0xf00>
   12308:	sub	r4, r0, #1
   1230c:	cmp	r4, #0
   12310:	ble	123c8 <__assert_fail@plt+0xe90>
   12314:	movw	r5, #57672	; 0xe148
   12318:	movt	r5, #2
   1231c:	movw	r3, #51980	; 0xcb0c
   12320:	movt	r3, #1
   12324:	mov	r7, r1
   12328:	str	r3, [sp, #4]
   1232c:	ldr	r3, [r5, #148]	; 0x94
   12330:	ldr	r1, [r7, #4]!
   12334:	cmp	r3, #0
   12338:	beq	12410 <__assert_fail@plt+0xed8>
   1233c:	ldrb	lr, [r1]
   12340:	mov	r8, #0
   12344:	mov	fp, r8
   12348:	mov	sl, r8
   1234c:	ldr	r0, [pc, #304]	; 12484 <__assert_fail@plt+0xf4c>
   12350:	mov	r9, r0
   12354:	ldrb	r2, [r3], #1
   12358:	cmp	r2, lr
   1235c:	bne	1242c <__assert_fail@plt+0xef4>
   12360:	cmp	lr, #0
   12364:	beq	123e8 <__assert_fail@plt+0xeb0>
   12368:	mov	r2, r1
   1236c:	b	12378 <__assert_fail@plt+0xe40>
   12370:	cmp	ip, #0
   12374:	beq	123e8 <__assert_fail@plt+0xeb0>
   12378:	ldrb	r6, [r2, #1]!
   1237c:	ldrb	ip, [r3], #1
   12380:	cmp	ip, r6
   12384:	beq	12370 <__assert_fail@plt+0xe38>
   12388:	cmp	r6, #0
   1238c:	bne	123a0 <__assert_fail@plt+0xe68>
   12390:	sub	r2, r2, r1
   12394:	cmp	r2, sl
   12398:	bgt	1241c <__assert_fail@plt+0xee4>
   1239c:	addeq	fp, fp, #1
   123a0:	ldr	r3, [r0, #12]!
   123a4:	cmp	r3, #0
   123a8:	bne	12350 <__assert_fail@plt+0xe18>
   123ac:	cmp	fp, #1
   123b0:	ble	123e4 <__assert_fail@plt+0xeac>
   123b4:	movw	r0, #51952	; 0xcaf0
   123b8:	movt	r0, #1
   123bc:	bl	111f0 <printf@plt>
   123c0:	subs	r4, r4, #1
   123c4:	bne	1232c <__assert_fail@plt+0xdf4>
   123c8:	add	sp, sp, #12
   123cc:	ldrd	r4, [sp]
   123d0:	ldrd	r6, [sp, #8]
   123d4:	ldrd	r8, [sp, #16]
   123d8:	ldrd	sl, [sp, #24]
   123dc:	add	sp, sp, #32
   123e0:	pop	{pc}		; (ldr pc, [sp], #4)
   123e4:	mov	r9, r8
   123e8:	cmp	r9, #0
   123ec:	beq	12410 <__assert_fail@plt+0xed8>
   123f0:	ldr	r0, [r9, #4]
   123f4:	bl	11340 <puts@plt>
   123f8:	subs	r4, r4, #1
   123fc:	beq	123c8 <__assert_fail@plt+0xe90>
   12400:	ldr	r3, [r5, #148]	; 0x94
   12404:	ldr	r1, [r7, #4]!
   12408:	cmp	r3, #0
   1240c:	bne	1233c <__assert_fail@plt+0xe04>
   12410:	ldr	r0, [sp, #4]
   12414:	bl	111f0 <printf@plt>
   12418:	b	123f8 <__assert_fail@plt+0xec0>
   1241c:	mov	sl, r2
   12420:	mov	r8, r0
   12424:	mov	fp, #1
   12428:	b	123a0 <__assert_fail@plt+0xe68>
   1242c:	mov	r2, r1
   12430:	mov	r6, lr
   12434:	b	12388 <__assert_fail@plt+0xe50>
   12438:	movw	r0, #51892	; 0xcab4
   1243c:	movt	r0, #1
   12440:	movw	r4, #57672	; 0xe148
   12444:	movt	r4, #2
   12448:	bl	11340 <puts@plt>
   1244c:	ldr	r2, [r4, #148]	; 0x94
   12450:	cmp	r2, #0
   12454:	beq	123c8 <__assert_fail@plt+0xe90>
   12458:	movw	r5, #51940	; 0xcae4
   1245c:	movt	r5, #1
   12460:	add	r4, r4, #148	; 0x94
   12464:	mov	r1, #8
   12468:	mov	r0, r5
   1246c:	ldr	r3, [r4, #4]
   12470:	bl	111f0 <printf@plt>
   12474:	ldr	r2, [r4, #12]!
   12478:	cmp	r2, #0
   1247c:	bne	12464 <__assert_fail@plt+0xf2c>
   12480:	b	123c8 <__assert_fail@plt+0xe90>
   12484:	ldrdeq	lr, [r2], -ip
   12488:	cmp	r0, #1
   1248c:	strd	r4, [sp, #-16]!
   12490:	mov	r4, r1
   12494:	str	r6, [sp, #8]
   12498:	str	lr, [sp, #12]
   1249c:	ble	124fc <__assert_fail@plt+0xfc4>
   124a0:	cmp	r0, #2
   124a4:	bne	124dc <__assert_fail@plt+0xfa4>
   124a8:	mov	r2, #10
   124ac:	mov	r1, #0
   124b0:	ldr	r0, [r4, #4]
   124b4:	bl	111e4 <strtol@plt>
   124b8:	cmp	r0, #0
   124bc:	blt	1258c <__assert_fail@plt+0x1054>
   124c0:	movw	r3, #57672	; 0xe148
   124c4:	movt	r3, #2
   124c8:	ldrd	r4, [sp]
   124cc:	ldr	r6, [sp, #8]
   124d0:	add	sp, sp, #12
   124d4:	str	r0, [r3, #4]
   124d8:	pop	{pc}		; (ldr pc, [sp], #4)
   124dc:	ldr	r1, [r4]
   124e0:	movw	r0, #52040	; 0xcb48
   124e4:	movt	r0, #1
   124e8:	ldrd	r4, [sp]
   124ec:	ldr	r6, [sp, #8]
   124f0:	ldr	lr, [sp, #12]
   124f4:	add	sp, sp, #16
   124f8:	b	111f0 <printf@plt>
   124fc:	movw	r6, #52008	; 0xcb28
   12500:	movt	r6, #1
   12504:	movw	r3, #52104	; 0xcb88
   12508:	movt	r3, #1
   1250c:	ldrb	r2, [r6, #12]
   12510:	movw	r5, #60132	; 0xeae4
   12514:	movt	r5, #2
   12518:	ldrh	r3, [r3]
   1251c:	movw	r1, #52024	; 0xcb38
   12520:	movt	r1, #1
   12524:	movw	r0, #52036	; 0xcb44
   12528:	movt	r0, #1
   1252c:	ldr	ip, [r6]
   12530:	strb	r2, [r5, #12]
   12534:	strh	r3, [r5, #13]
   12538:	ldr	r2, [r6, #4]
   1253c:	str	ip, [r5]
   12540:	ldr	r3, [r6, #8]
   12544:	str	r2, [r5, #4]
   12548:	str	r3, [r5, #8]
   1254c:	bl	111f0 <printf@plt>
   12550:	movw	r3, #58456	; 0xe458
   12554:	movt	r3, #2
   12558:	add	r0, r5, #14
   1255c:	mov	r1, #186	; 0xba
   12560:	ldr	r2, [r3]
   12564:	bl	11250 <fgets@plt>
   12568:	cmp	r0, #0
   1256c:	beq	1259c <__assert_fail@plt+0x1064>
   12570:	bl	11ad0 <__assert_fail@plt+0x598>
   12574:	movw	r3, #60092	; 0xeabc
   12578:	movt	r3, #2
   1257c:	movw	r4, #59600	; 0xe8d0
   12580:	movt	r4, #2
   12584:	ldr	r0, [r3]
   12588:	b	124a0 <__assert_fail@plt+0xf68>
   1258c:	movw	r0, #52060	; 0xcb5c
   12590:	movt	r0, #1
   12594:	ldr	r1, [r4, #4]
   12598:	b	124e8 <__assert_fail@plt+0xfb0>
   1259c:	mov	r1, r6
   125a0:	str	r6, [r4]
   125a4:	b	124e0 <__assert_fail@plt+0xfa8>
   125a8:	cmp	r0, #1
   125ac:	strd	r4, [sp, #-16]!
   125b0:	mov	r4, r1
   125b4:	str	r6, [sp, #8]
   125b8:	str	lr, [sp, #12]
   125bc:	ble	1261c <__assert_fail@plt+0x10e4>
   125c0:	cmp	r0, #2
   125c4:	bne	125fc <__assert_fail@plt+0x10c4>
   125c8:	mov	r2, #10
   125cc:	mov	r1, #0
   125d0:	ldr	r0, [r4, #4]
   125d4:	bl	111e4 <strtol@plt>
   125d8:	cmp	r0, #0
   125dc:	blt	126a8 <__assert_fail@plt+0x1170>
   125e0:	movw	r3, #57672	; 0xe148
   125e4:	movt	r3, #2
   125e8:	ldrd	r4, [sp]
   125ec:	ldr	r6, [sp, #8]
   125f0:	add	sp, sp, #12
   125f4:	str	r0, [r3]
   125f8:	pop	{pc}		; (ldr pc, [sp], #4)
   125fc:	ldr	r1, [r4]
   12600:	movw	r0, #52040	; 0xcb48
   12604:	movt	r0, #1
   12608:	ldrd	r4, [sp]
   1260c:	ldr	r6, [sp, #8]
   12610:	ldr	lr, [sp, #12]
   12614:	add	sp, sp, #16
   12618:	b	111f0 <printf@plt>
   1261c:	movw	r6, #52076	; 0xcb6c
   12620:	movt	r6, #1
   12624:	movw	r3, #52104	; 0xcb88
   12628:	movt	r3, #1
   1262c:	ldr	ip, [r6]
   12630:	movw	r5, #60132	; 0xeae4
   12634:	movt	r5, #2
   12638:	ldrh	r3, [r3]
   1263c:	movw	r1, #52024	; 0xcb38
   12640:	movt	r1, #1
   12644:	movw	r0, #52036	; 0xcb44
   12648:	movt	r0, #1
   1264c:	ldr	r2, [r6, #12]
   12650:	str	ip, [r5]
   12654:	str	r2, [r5, #12]
   12658:	strh	r3, [r5, #15]
   1265c:	ldrd	r2, [r6, #4]
   12660:	str	r2, [r5, #4]
   12664:	str	r3, [r5, #8]
   12668:	bl	111f0 <printf@plt>
   1266c:	movw	r3, #58456	; 0xe458
   12670:	movt	r3, #2
   12674:	add	r0, r5, #16
   12678:	mov	r1, #184	; 0xb8
   1267c:	ldr	r2, [r3]
   12680:	bl	11250 <fgets@plt>
   12684:	cmp	r0, #0
   12688:	beq	126b8 <__assert_fail@plt+0x1180>
   1268c:	bl	11ad0 <__assert_fail@plt+0x598>
   12690:	movw	r3, #60092	; 0xeabc
   12694:	movt	r3, #2
   12698:	movw	r4, #59600	; 0xe8d0
   1269c:	movt	r4, #2
   126a0:	ldr	r0, [r3]
   126a4:	b	125c0 <__assert_fail@plt+0x1088>
   126a8:	movw	r0, #52060	; 0xcb5c
   126ac:	movt	r0, #1
   126b0:	ldr	r1, [r4, #4]
   126b4:	b	12608 <__assert_fail@plt+0x10d0>
   126b8:	mov	r1, r6
   126bc:	str	r6, [r4]
   126c0:	b	12600 <__assert_fail@plt+0x10c8>
   126c4:	cmp	r0, #1
   126c8:	strd	r4, [sp, #-16]!
   126cc:	mov	r5, r1
   126d0:	movgt	r4, r0
   126d4:	str	r6, [sp, #8]
   126d8:	str	lr, [sp, #12]
   126dc:	ble	12770 <__assert_fail@plt+0x1238>
   126e0:	sub	r3, r4, #2
   126e4:	cmp	r3, #1
   126e8:	bhi	12750 <__assert_fail@plt+0x1218>
   126ec:	ldr	r0, [r5, #4]
   126f0:	bl	11cd4 <__assert_fail@plt+0x79c>
   126f4:	cmn	r0, #1
   126f8:	beq	12740 <__assert_fail@plt+0x1208>
   126fc:	cmp	r4, #3
   12700:	beq	127f8 <__assert_fail@plt+0x12c0>
   12704:	movw	r1, #52160	; 0xcbc0
   12708:	movt	r1, #1
   1270c:	movw	r0, #51708	; 0xc9fc
   12710:	movt	r0, #1
   12714:	bl	113e8 <getservbyname@plt>
   12718:	subs	r4, r0, #0
   1271c:	beq	12838 <__assert_fail@plt+0x1300>
   12720:	ldr	r3, [r4, #8]
   12724:	movw	r4, #58468	; 0xe464
   12728:	movt	r4, #2
   1272c:	rev16	r3, r3
   12730:	uxth	r3, r3
   12734:	str	r3, [r4, #144]	; 0x90
   12738:	mov	r3, #1
   1273c:	str	r3, [r4, #8]
   12740:	ldrd	r4, [sp]
   12744:	ldr	r6, [sp, #8]
   12748:	add	sp, sp, #12
   1274c:	pop	{pc}		; (ldr pc, [sp], #4)
   12750:	ldr	r1, [r5]
   12754:	movw	r0, #52108	; 0xcb8c
   12758:	movt	r0, #1
   1275c:	ldrd	r4, [sp]
   12760:	ldr	r6, [sp, #8]
   12764:	ldr	lr, [sp, #12]
   12768:	add	sp, sp, #16
   1276c:	b	111f0 <printf@plt>
   12770:	movw	r6, #52092	; 0xcb7c
   12774:	movt	r6, #1
   12778:	movw	r3, #52104	; 0xcb88
   1277c:	movt	r3, #1
   12780:	ldrh	r2, [r3]
   12784:	movw	r4, #60132	; 0xeae4
   12788:	movt	r4, #2
   1278c:	movw	r1, #52100	; 0xcb84
   12790:	movt	r1, #1
   12794:	ldm	r6, {r3, ip}
   12798:	movw	r0, #52036	; 0xcb44
   1279c:	movt	r0, #1
   127a0:	str	r3, [r4]
   127a4:	str	ip, [r4, #4]
   127a8:	strh	r2, [r4, #7]
   127ac:	bl	111f0 <printf@plt>
   127b0:	movw	r3, #58456	; 0xe458
   127b4:	movt	r3, #2
   127b8:	add	r0, r4, #8
   127bc:	mov	r1, #192	; 0xc0
   127c0:	ldr	r2, [r3]
   127c4:	bl	11250 <fgets@plt>
   127c8:	cmp	r0, #0
   127cc:	beq	127ec <__assert_fail@plt+0x12b4>
   127d0:	bl	11ad0 <__assert_fail@plt+0x598>
   127d4:	movw	r3, #60092	; 0xeabc
   127d8:	movt	r3, #2
   127dc:	movw	r5, #59600	; 0xe8d0
   127e0:	movt	r5, #2
   127e4:	ldr	r4, [r3]
   127e8:	b	126e0 <__assert_fail@plt+0x11a8>
   127ec:	mov	r1, r6
   127f0:	str	r6, [r5]
   127f4:	b	12754 <__assert_fail@plt+0x121c>
   127f8:	mov	r2, #10
   127fc:	mov	r1, #0
   12800:	ldr	r0, [r5, #8]
   12804:	bl	111e4 <strtol@plt>
   12808:	movw	r4, #58468	; 0xe464
   1280c:	movt	r4, #2
   12810:	cmp	r0, #0
   12814:	str	r0, [r4, #144]	; 0x90
   12818:	bgt	12738 <__assert_fail@plt+0x1200>
   1281c:	movw	r0, #52136	; 0xcba8
   12820:	movt	r0, #1
   12824:	ldr	r1, [r5, #8]
   12828:	bl	111f0 <printf@plt>
   1282c:	mov	r3, #0
   12830:	str	r3, [r4, #8]
   12834:	b	12740 <__assert_fail@plt+0x1208>
   12838:	movw	r2, #52164	; 0xcbc4
   1283c:	movt	r2, #1
   12840:	mov	r1, r4
   12844:	mov	r0, #1
   12848:	bl	1131c <error@plt>
   1284c:	b	12720 <__assert_fail@plt+0x11e8>
   12850:	str	r4, [sp, #-8]!
   12854:	mov	r4, r0
   12858:	str	lr, [sp, #4]
   1285c:	ldrb	r3, [r0]
   12860:	cmp	r3, #0
   12864:	bne	12888 <__assert_fail@plt+0x1350>
   12868:	b	1289c <__assert_fail@plt+0x1364>
   1286c:	ldrb	r3, [r0, #1]
   12870:	cmp	r3, #0
   12874:	bne	128ac <__assert_fail@plt+0x1374>
   12878:	strb	r3, [r0]
   1287c:	ldrb	r3, [r4]
   12880:	cmp	r3, #0
   12884:	beq	1289c <__assert_fail@plt+0x1364>
   12888:	mov	r1, #47	; 0x2f
   1288c:	mov	r0, r4
   12890:	bl	11484 <strrchr@plt>
   12894:	cmp	r0, #0
   12898:	bne	1286c <__assert_fail@plt+0x1334>
   1289c:	mov	r0, r4
   128a0:	ldr	r4, [sp]
   128a4:	add	sp, sp, #4
   128a8:	pop	{pc}		; (ldr pc, [sp], #4)
   128ac:	ldr	r4, [sp]
   128b0:	add	sp, sp, #4
   128b4:	add	r0, r0, #1
   128b8:	pop	{pc}		; (ldr pc, [sp], #4)
   128bc:	movw	r3, #57672	; 0xe148
   128c0:	movt	r3, #2
   128c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   128c8:	ldr	r2, [r3, #148]	; 0x94
   128cc:	strd	r6, [sp, #8]
   128d0:	str	r8, [sp, #16]
   128d4:	str	lr, [sp, #20]
   128d8:	cmp	r2, #0
   128dc:	beq	129a4 <__assert_fail@plt+0x146c>
   128e0:	ldrb	r4, [r0]
   128e4:	mov	r5, #0
   128e8:	add	lr, r3, #148	; 0x94
   128ec:	mov	r7, r5
   128f0:	mov	r8, r5
   128f4:	ldrb	r3, [r2], #1
   128f8:	mov	r6, lr
   128fc:	cmp	r3, r4
   12900:	bne	12990 <__assert_fail@plt+0x1458>
   12904:	cmp	r4, #0
   12908:	beq	1295c <__assert_fail@plt+0x1424>
   1290c:	mov	r1, r0
   12910:	b	1291c <__assert_fail@plt+0x13e4>
   12914:	cmp	r3, #0
   12918:	beq	1295c <__assert_fail@plt+0x1424>
   1291c:	ldrb	ip, [r1, #1]!
   12920:	ldrb	r3, [r2], #1
   12924:	cmp	r3, ip
   12928:	beq	12914 <__assert_fail@plt+0x13dc>
   1292c:	cmp	ip, #0
   12930:	bne	12944 <__assert_fail@plt+0x140c>
   12934:	sub	r1, r1, r0
   12938:	cmp	r1, r5
   1293c:	bgt	12974 <__assert_fail@plt+0x143c>
   12940:	addeq	r7, r7, #1
   12944:	ldr	r2, [lr, #12]!
   12948:	cmp	r2, #0
   1294c:	bne	128f4 <__assert_fail@plt+0x13bc>
   12950:	cmp	r7, #2
   12954:	movlt	r6, r8
   12958:	mvnge	r6, #0
   1295c:	mov	r0, r6
   12960:	ldrd	r4, [sp]
   12964:	ldrd	r6, [sp, #8]
   12968:	ldr	r8, [sp, #16]
   1296c:	add	sp, sp, #20
   12970:	pop	{pc}		; (ldr pc, [sp], #4)
   12974:	mov	r8, lr
   12978:	ldr	r2, [lr, #12]!
   1297c:	mov	r5, r1
   12980:	mov	r7, #1
   12984:	cmp	r2, #0
   12988:	bne	128f4 <__assert_fail@plt+0x13bc>
   1298c:	b	12950 <__assert_fail@plt+0x1418>
   12990:	mov	ip, r4
   12994:	mov	r1, r0
   12998:	cmp	ip, #0
   1299c:	bne	12944 <__assert_fail@plt+0x140c>
   129a0:	b	12934 <__assert_fail@plt+0x13fc>
   129a4:	mov	r6, r2
   129a8:	b	1295c <__assert_fail@plt+0x1424>
   129ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   129b0:	mov	r4, r0
   129b4:	movw	r0, #60076	; 0xeaac
   129b8:	movt	r0, #2
   129bc:	strd	r6, [sp, #8]
   129c0:	mov	r5, r2
   129c4:	strd	r8, [sp, #16]
   129c8:	strd	sl, [sp, #24]
   129cc:	str	lr, [sp, #32]
   129d0:	sub	sp, sp, #188	; 0xbc
   129d4:	str	r1, [sp, #24]
   129d8:	mov	r1, #0
   129dc:	str	r2, [sp, #28]
   129e0:	bl	11304 <gettimeofday@plt>
   129e4:	bl	13ae0 <__assert_fail@plt+0x25a8>
   129e8:	movw	r3, #58688	; 0xe540
   129ec:	movt	r3, #2
   129f0:	movw	r1, #53684	; 0xd1b4
   129f4:	movt	r1, #1
   129f8:	str	r3, [sp, #12]
   129fc:	movw	r3, #58468	; 0xe464
   12a00:	movt	r3, #2
   12a04:	str	r0, [sp, #32]
   12a08:	mov	r0, r4
   12a0c:	str	r3, [sp, #16]
   12a10:	bl	111b4 <fdopen@plt>
   12a14:	movw	r1, #51880	; 0xcaa8
   12a18:	movt	r1, #1
   12a1c:	str	r0, [sp, #8]
   12a20:	mov	r0, r5
   12a24:	bl	111d8 <strcmp@plt>
   12a28:	clz	r3, r0
   12a2c:	mov	r2, #0
   12a30:	lsr	r3, r3, #5
   12a34:	movw	ip, #57672	; 0xe148
   12a38:	movt	ip, #2
   12a3c:	movw	r1, #7840	; 0x1ea0
   12a40:	movt	r1, #1
   12a44:	mov	r0, #14
   12a48:	str	ip, [sp, #20]
   12a4c:	str	r3, [sp, #44]	; 0x2c
   12a50:	str	r2, [sp, #36]	; 0x24
   12a54:	str	r2, [sp, #48]	; 0x30
   12a58:	bl	11274 <signal@plt>
   12a5c:	ldr	r4, [sp, #36]	; 0x24
   12a60:	cmp	r4, #0
   12a64:	beq	12c0c <__assert_fail@plt+0x16d4>
   12a68:	add	r1, sp, #32
   12a6c:	ldr	r0, [sp, #8]
   12a70:	ldr	r2, [sp, #44]	; 0x2c
   12a74:	bl	13c64 <__assert_fail@plt+0x272c>
   12a78:	str	r0, [sp, #40]	; 0x28
   12a7c:	ldr	r3, [sp, #40]	; 0x28
   12a80:	cmp	r3, #0
   12a84:	blt	12d1c <__assert_fail@plt+0x17e4>
   12a88:	ldr	r3, [sp, #32]
   12a8c:	mov	r0, #0
   12a90:	mov	r1, #3
   12a94:	ldr	r2, [sp, #36]	; 0x24
   12a98:	strb	r0, [r3]
   12a9c:	strb	r1, [r3, #1]
   12aa0:	rev16	r2, r2
   12aa4:	strh	r2, [r3, #2]
   12aa8:	mov	r2, #0
   12aac:	movw	r3, #60072	; 0xeaa8
   12ab0:	movt	r3, #2
   12ab4:	movw	r0, #59208	; 0xe748
   12ab8:	movt	r0, #2
   12abc:	str	r2, [r3]
   12ac0:	bl	11214 <_setjmp@plt>
   12ac4:	ldr	r7, [sp, #12]
   12ac8:	movw	r8, #51760	; 0xca30
   12acc:	movt	r8, #1
   12ad0:	ldr	r9, [sp, #16]
   12ad4:	ldr	r4, [sp, #20]
   12ad8:	ldr	r3, [r9]
   12adc:	ldr	r1, [sp, #32]
   12ae0:	cmp	r3, #0
   12ae4:	bne	12cf0 <__assert_fail@plt+0x17b8>
   12ae8:	add	r0, r9, #16
   12aec:	ldr	r2, [sp, #40]	; 0x28
   12af0:	mov	r3, #0
   12af4:	str	r0, [sp]
   12af8:	ldr	ip, [r9, #12]
   12afc:	add	r2, r2, #4
   12b00:	ldr	r0, [r4, #8]
   12b04:	str	ip, [sp, #4]
   12b08:	bl	11460 <sendto@plt>
   12b0c:	ldr	r3, [sp, #40]	; 0x28
   12b10:	add	r3, r3, #4
   12b14:	cmp	r3, r0
   12b18:	bne	12d84 <__assert_fail@plt+0x184c>
   12b1c:	ldr	r0, [sp, #8]
   12b20:	movw	r6, #58688	; 0xe540
   12b24:	movt	r6, #2
   12b28:	movw	sl, #52280	; 0xcc38
   12b2c:	movt	sl, #1
   12b30:	ldr	r1, [sp, #44]	; 0x2c
   12b34:	bl	13b30 <__assert_fail@plt+0x25f8>
   12b38:	ldr	r0, [r4, #4]
   12b3c:	mov	r5, #128	; 0x80
   12b40:	bl	112a4 <alarm@plt>
   12b44:	add	r1, sp, #56	; 0x38
   12b48:	add	ip, sp, #52	; 0x34
   12b4c:	ldr	r0, [r4, #8]
   12b50:	mov	r3, #0
   12b54:	mov	r2, #516	; 0x204
   12b58:	stm	sp, {r1, ip}
   12b5c:	mov	r1, r6
   12b60:	str	r5, [sp, #52]	; 0x34
   12b64:	bl	11298 <recvfrom@plt>
   12b68:	cmp	r0, #0
   12b6c:	ble	12b44 <__assert_fail@plt+0x160c>
   12b70:	mov	fp, r0
   12b74:	mov	r0, #0
   12b78:	bl	112a4 <alarm@plt>
   12b7c:	ldrh	r3, [sp, #58]	; 0x3a
   12b80:	rev16	r3, r3
   12b84:	uxth	r3, r3
   12b88:	rev16	r3, r3
   12b8c:	strh	r3, [r9, #18]
   12b90:	ldr	r3, [r9]
   12b94:	cmp	r3, #0
   12b98:	bne	12c88 <__assert_fail@plt+0x1750>
   12b9c:	ldrsh	r2, [r7]
   12ba0:	ldrh	r3, [r7, #2]
   12ba4:	rev16	r2, r2
   12ba8:	sxth	r0, r2
   12bac:	rev16	r3, r3
   12bb0:	cmp	r0, #5
   12bb4:	strh	r2, [r7]
   12bb8:	uxth	r1, r3
   12bbc:	strh	r3, [r7, #2]
   12bc0:	beq	12c9c <__assert_fail@plt+0x1764>
   12bc4:	cmp	r0, #4
   12bc8:	bne	12b38 <__assert_fail@plt+0x1600>
   12bcc:	ldr	r3, [sp, #36]	; 0x24
   12bd0:	cmp	r1, r3
   12bd4:	beq	12d40 <__assert_fail@plt+0x1808>
   12bd8:	ldr	r0, [r4, #8]
   12bdc:	bl	13ec4 <__assert_fail@plt+0x298c>
   12be0:	subs	r1, r0, #0
   12be4:	beq	12bf4 <__assert_fail@plt+0x16bc>
   12be8:	ldr	r3, [r9]
   12bec:	cmp	r3, #0
   12bf0:	bne	12d30 <__assert_fail@plt+0x17f8>
   12bf4:	ldr	r3, [sp, #36]	; 0x24
   12bf8:	ldrh	r2, [r7, #2]
   12bfc:	sub	r3, r3, #1
   12c00:	cmp	r2, r3
   12c04:	bne	12b38 <__assert_fail@plt+0x1600>
   12c08:	b	12ad8 <__assert_fail@plt+0x15a0>
   12c0c:	ldr	r8, [sp, #24]
   12c10:	mov	r3, #2
   12c14:	ldr	r6, [sp, #32]
   12c18:	mov	r0, r8
   12c1c:	strb	r4, [r6]
   12c20:	add	r7, r6, r3
   12c24:	strb	r3, [r6, #1]
   12c28:	bl	113b8 <strlen@plt>
   12c2c:	mov	r5, r0
   12c30:	movw	r2, #502	; 0x1f6
   12c34:	mov	r1, r8
   12c38:	mov	r0, r7
   12c3c:	bl	11418 <strncpy@plt>
   12c40:	movw	r3, #502	; 0x1f6
   12c44:	ldr	r8, [sp, #28]
   12c48:	cmp	r5, r3
   12c4c:	movcc	r3, r5
   12c50:	add	r5, r7, r3
   12c54:	add	r5, r5, #1
   12c58:	strb	r4, [r7, r3]
   12c5c:	mov	r1, r8
   12c60:	mov	r0, r5
   12c64:	bl	112f8 <strcpy@plt>
   12c68:	mov	r0, r8
   12c6c:	bl	113b8 <strlen@plt>
   12c70:	add	r3, r5, r0
   12c74:	strb	r4, [r5, r0]
   12c78:	sub	r3, r3, r6
   12c7c:	sub	r3, r3, #3
   12c80:	str	r3, [sp, #40]	; 0x28
   12c84:	b	12aa8 <__assert_fail@plt+0x1570>
   12c88:	mov	r2, fp
   12c8c:	mov	r1, r6
   12c90:	mov	r0, sl
   12c94:	bl	11bd4 <__assert_fail@plt+0x69c>
   12c98:	b	12b9c <__assert_fail@plt+0x1664>
   12c9c:	movw	r0, #52292	; 0xcc44
   12ca0:	movt	r0, #1
   12ca4:	ldr	r2, [pc, #232]	; 12d94 <__assert_fail@plt+0x185c>
   12ca8:	sxth	r1, r1
   12cac:	bl	111f0 <printf@plt>
   12cb0:	ldr	r0, [sp, #8]
   12cb4:	bl	11448 <fclose@plt>
   12cb8:	movw	r0, #60084	; 0xeab4
   12cbc:	movt	r0, #2
   12cc0:	mov	r1, #0
   12cc4:	bl	11304 <gettimeofday@plt>
   12cc8:	ldr	r3, [sp, #48]	; 0x30
   12ccc:	cmp	r3, #0
   12cd0:	bne	12d08 <__assert_fail@plt+0x17d0>
   12cd4:	add	sp, sp, #188	; 0xbc
   12cd8:	ldrd	r4, [sp]
   12cdc:	ldrd	r6, [sp, #8]
   12ce0:	ldrd	r8, [sp, #16]
   12ce4:	ldrd	sl, [sp, #24]
   12ce8:	add	sp, sp, #32
   12cec:	pop	{pc}		; (ldr pc, [sp], #4)
   12cf0:	ldr	r2, [sp, #40]	; 0x28
   12cf4:	mov	r0, r8
   12cf8:	add	r2, r2, #4
   12cfc:	bl	11bd4 <__assert_fail@plt+0x69c>
   12d00:	ldr	r1, [sp, #32]
   12d04:	b	12ae8 <__assert_fail@plt+0x15b0>
   12d08:	movw	r0, #52336	; 0xcc70
   12d0c:	movt	r0, #1
   12d10:	ldr	r1, [sp, #48]	; 0x30
   12d14:	bl	11918 <__assert_fail@plt+0x3e0>
   12d18:	b	12cd4 <__assert_fail@plt+0x179c>
   12d1c:	bl	113dc <__errno_location@plt>
   12d20:	ldr	r0, [r0]
   12d24:	add	r0, r0, #100	; 0x64
   12d28:	bl	11f00 <__assert_fail@plt+0x9c8>
   12d2c:	b	12cb0 <__assert_fail@plt+0x1778>
   12d30:	movw	r0, #52312	; 0xcc58
   12d34:	movt	r0, #1
   12d38:	bl	111f0 <printf@plt>
   12d3c:	b	12bf4 <__assert_fail@plt+0x16bc>
   12d40:	ldr	r3, [sp, #36]	; 0x24
   12d44:	cmp	r3, #0
   12d48:	ble	12d5c <__assert_fail@plt+0x1824>
   12d4c:	ldr	r3, [sp, #40]	; 0x28
   12d50:	ldr	r2, [sp, #48]	; 0x30
   12d54:	add	r3, r3, r2
   12d58:	str	r3, [sp, #48]	; 0x30
   12d5c:	ldr	r3, [sp, #36]	; 0x24
   12d60:	add	r3, r3, #1
   12d64:	str	r3, [sp, #36]	; 0x24
   12d68:	ldr	r3, [sp, #40]	; 0x28
   12d6c:	cmp	r3, #512	; 0x200
   12d70:	beq	12a5c <__assert_fail@plt+0x1524>
   12d74:	ldr	r3, [sp, #36]	; 0x24
   12d78:	cmp	r3, #1
   12d7c:	bne	12cb0 <__assert_fail@plt+0x1778>
   12d80:	b	12a5c <__assert_fail@plt+0x1524>
   12d84:	movw	r0, #52264	; 0xcc28
   12d88:	movt	r0, #1
   12d8c:	bl	112d4 <perror@plt>
   12d90:	b	12cb0 <__assert_fail@plt+0x1778>
   12d94:	andeq	lr, r2, r4, asr #10
   12d98:	cmp	r0, #1
   12d9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12da0:	mov	r4, r1
   12da4:	strd	r6, [sp, #8]
   12da8:	strd	r8, [sp, #16]
   12dac:	movgt	r9, r0
   12db0:	strd	sl, [sp, #24]
   12db4:	str	lr, [sp, #32]
   12db8:	sub	sp, sp, #20
   12dbc:	ble	12f68 <__assert_fail@plt+0x1a30>
   12dc0:	sub	r5, r9, #-1073741823	; 0xc0000001
   12dc4:	mov	r1, #58	; 0x3a
   12dc8:	ldr	r7, [r4, r5, lsl #2]
   12dcc:	lsl	r5, r5, #2
   12dd0:	add	r3, r4, r5
   12dd4:	str	r3, [sp, #12]
   12dd8:	mov	r0, r7
   12ddc:	bl	113c4 <strchr@plt>
   12de0:	subs	sl, r0, #0
   12de4:	beq	12ebc <__assert_fail@plt+0x1984>
   12de8:	cmp	r9, #2
   12dec:	beq	12f40 <__assert_fail@plt+0x1a08>
   12df0:	mov	fp, r4
   12df4:	sub	r8, r9, #1
   12df8:	mov	r6, #1
   12dfc:	b	12e08 <__assert_fail@plt+0x18d0>
   12e00:	cmp	r6, r8
   12e04:	beq	12f40 <__assert_fail@plt+0x1a08>
   12e08:	mov	r1, #58	; 0x3a
   12e0c:	ldr	r0, [fp, #4]!
   12e10:	add	r6, r6, #1
   12e14:	bl	113c4 <strchr@plt>
   12e18:	cmp	r0, #0
   12e1c:	beq	12e00 <__assert_fail@plt+0x18c8>
   12e20:	ldr	r4, [r4]
   12e24:	movw	r0, #52360	; 0xcc88
   12e28:	movt	r0, #1
   12e2c:	mov	r1, r4
   12e30:	bl	111f0 <printf@plt>
   12e34:	mov	r1, r4
   12e38:	movw	r0, #52396	; 0xccac
   12e3c:	movt	r0, #1
   12e40:	add	sp, sp, #20
   12e44:	ldrd	r4, [sp]
   12e48:	ldrd	r6, [sp, #8]
   12e4c:	ldrd	r8, [sp, #16]
   12e50:	ldrd	sl, [sp, #24]
   12e54:	ldr	lr, [sp, #32]
   12e58:	add	sp, sp, #36	; 0x24
   12e5c:	b	111f0 <printf@plt>
   12e60:	mov	r0, r7
   12e64:	mov	r1, #93	; 0x5d
   12e68:	bl	113c4 <strchr@plt>
   12e6c:	cmp	r0, #0
   12e70:	beq	130c4 <__assert_fail@plt+0x1b8c>
   12e74:	mov	r2, #0
   12e78:	ldrb	r3, [r0, #1]
   12e7c:	strb	r2, [r0]
   12e80:	ldr	r2, [sp, #12]
   12e84:	cmp	r3, #58	; 0x3a
   12e88:	ldr	r7, [r2]
   12e8c:	bne	12ebc <__assert_fail@plt+0x1984>
   12e90:	add	r3, r7, #1
   12e94:	add	r7, r0, #2
   12e98:	cmp	r3, #0
   12e9c:	beq	12ebc <__assert_fail@plt+0x1984>
   12ea0:	mov	sl, r7
   12ea4:	mov	r7, r3
   12ea8:	mov	r0, r7
   12eac:	bl	11cd4 <__assert_fail@plt+0x79c>
   12eb0:	cmp	r0, #0
   12eb4:	bne	130c4 <__assert_fail@plt+0x1b8c>
   12eb8:	mov	r7, sl
   12ebc:	movw	r6, #58468	; 0xe464
   12ec0:	movt	r6, #2
   12ec4:	ldr	r3, [r6, #8]
   12ec8:	cmp	r3, #0
   12ecc:	beq	13150 <__assert_fail@plt+0x1c18>
   12ed0:	cmp	r9, #3
   12ed4:	bgt	12ff4 <__assert_fail@plt+0x1abc>
   12ed8:	cmp	r9, #2
   12edc:	beq	131ec <__assert_fail@plt+0x1cb4>
   12ee0:	ldr	r4, [r4, #4]
   12ee4:	mov	r1, #0
   12ee8:	mov	r0, r4
   12eec:	bl	11328 <open64@plt>
   12ef0:	subs	r5, r0, #0
   12ef4:	blt	13178 <__assert_fail@plt+0x1c40>
   12ef8:	ldr	r3, [r6, #4]
   12efc:	cmp	r3, #0
   12f00:	bne	131bc <__assert_fail@plt+0x1c84>
   12f04:	ldr	r3, [r6, #144]	; 0x90
   12f08:	mov	r1, r7
   12f0c:	mov	r0, r5
   12f10:	movw	r2, #60100	; 0xeac4
   12f14:	movt	r2, #2
   12f18:	rev16	r3, r3
   12f1c:	strh	r3, [r6, #18]
   12f20:	add	sp, sp, #20
   12f24:	ldrd	r4, [sp]
   12f28:	ldrd	r6, [sp, #8]
   12f2c:	ldrd	r8, [sp, #16]
   12f30:	ldrd	sl, [sp, #24]
   12f34:	ldr	lr, [sp, #32]
   12f38:	add	sp, sp, #36	; 0x24
   12f3c:	b	129ac <__assert_fail@plt+0x1474>
   12f40:	ldrb	r3, [r7]
   12f44:	cmp	r3, #91	; 0x5b
   12f48:	beq	12e60 <__assert_fail@plt+0x1928>
   12f4c:	mov	r3, #0
   12f50:	strb	r3, [sl], #1
   12f54:	ldrb	r3, [r7]
   12f58:	cmp	r3, #0
   12f5c:	bne	12ea8 <__assert_fail@plt+0x1970>
   12f60:	mov	r7, sl
   12f64:	b	12ebc <__assert_fail@plt+0x1984>
   12f68:	movw	r6, #52344	; 0xcc78
   12f6c:	movt	r6, #1
   12f70:	movw	r3, #52104	; 0xcb88
   12f74:	movt	r3, #1
   12f78:	ldr	r2, [r6]
   12f7c:	movw	r5, #60132	; 0xeae4
   12f80:	movt	r5, #2
   12f84:	ldrh	r3, [r3]
   12f88:	movw	r1, #52352	; 0xcc80
   12f8c:	movt	r1, #1
   12f90:	movw	r0, #52036	; 0xcb44
   12f94:	movt	r0, #1
   12f98:	str	r2, [r5]
   12f9c:	strh	r3, [r5, #4]
   12fa0:	bl	111f0 <printf@plt>
   12fa4:	movw	r3, #58456	; 0xe458
   12fa8:	movt	r3, #2
   12fac:	add	r0, r5, #5
   12fb0:	mov	r1, #195	; 0xc3
   12fb4:	ldr	r2, [r3]
   12fb8:	bl	11250 <fgets@plt>
   12fbc:	cmp	r0, #0
   12fc0:	beq	13130 <__assert_fail@plt+0x1bf8>
   12fc4:	bl	11ad0 <__assert_fail@plt+0x598>
   12fc8:	movw	r3, #60092	; 0xeabc
   12fcc:	movt	r3, #2
   12fd0:	ldr	r9, [r3]
   12fd4:	cmp	r9, #1
   12fd8:	movwgt	r4, #59600	; 0xe8d0
   12fdc:	movtgt	r4, #2
   12fe0:	bgt	12dc0 <__assert_fail@plt+0x1888>
   12fe4:	movw	r3, #59600	; 0xe8d0
   12fe8:	movt	r3, #2
   12fec:	ldr	r5, [r3]
   12ff0:	b	13138 <__assert_fail@plt+0x1c00>
   12ff4:	mov	r0, r7
   12ff8:	add	r5, r5, r4
   12ffc:	bl	113b8 <strlen@plt>
   13000:	mov	r3, #47	; 0x2f
   13004:	add	sl, r7, r0
   13008:	movw	r9, #60100	; 0xeac4
   1300c:	movt	r9, #2
   13010:	movw	fp, #60096	; 0xeac0
   13014:	movt	fp, #2
   13018:	strb	r3, [r7, r0]
   1301c:	sub	r5, r5, #4
   13020:	movw	r3, #52488	; 0xcd08
   13024:	movt	r3, #1
   13028:	add	sl, sl, #1
   1302c:	str	r3, [sp, #12]
   13030:	ldr	r8, [r4, #4]!
   13034:	ldrb	r3, [r8]
   13038:	cmp	r3, #0
   1303c:	bne	13060 <__assert_fail@plt+0x1b28>
   13040:	b	13074 <__assert_fail@plt+0x1b3c>
   13044:	ldrb	r3, [r0, #1]
   13048:	cmp	r3, #0
   1304c:	bne	130e0 <__assert_fail@plt+0x1ba8>
   13050:	strb	r3, [r0]
   13054:	ldrb	r3, [r8]
   13058:	cmp	r3, #0
   1305c:	beq	13074 <__assert_fail@plt+0x1b3c>
   13060:	mov	r1, #47	; 0x2f
   13064:	mov	r0, r8
   13068:	bl	11484 <strrchr@plt>
   1306c:	cmp	r0, #0
   13070:	bne	13044 <__assert_fail@plt+0x1b0c>
   13074:	mov	r1, r8
   13078:	mov	r0, sl
   1307c:	bl	112f8 <strcpy@plt>
   13080:	mov	r1, #0
   13084:	ldr	r0, [r4]
   13088:	bl	11328 <open64@plt>
   1308c:	subs	r8, r0, #0
   13090:	blt	13104 <__assert_fail@plt+0x1bcc>
   13094:	ldr	r3, [r6, #4]
   13098:	cmp	r3, #0
   1309c:	bne	130e8 <__assert_fail@plt+0x1bb0>
   130a0:	ldr	r3, [r6, #144]	; 0x90
   130a4:	mov	r0, r8
   130a8:	mov	r2, r9
   130ac:	mov	r1, r7
   130b0:	rev16	r3, r3
   130b4:	strh	r3, [r6, #18]
   130b8:	bl	129ac <__assert_fail@plt+0x1474>
   130bc:	cmp	r5, r4
   130c0:	bne	13030 <__assert_fail@plt+0x1af8>
   130c4:	add	sp, sp, #20
   130c8:	ldrd	r4, [sp]
   130cc:	ldrd	r6, [sp, #8]
   130d0:	ldrd	r8, [sp, #16]
   130d4:	ldrd	sl, [sp, #24]
   130d8:	add	sp, sp, #32
   130dc:	pop	{pc}		; (ldr pc, [sp], #4)
   130e0:	add	r8, r0, #1
   130e4:	b	13074 <__assert_fail@plt+0x1b3c>
   130e8:	ldr	r1, [r4]
   130ec:	mov	r3, r7
   130f0:	str	r9, [sp]
   130f4:	ldr	r2, [fp]
   130f8:	ldr	r0, [sp, #12]
   130fc:	bl	111f0 <printf@plt>
   13100:	b	130a0 <__assert_fail@plt+0x1b68>
   13104:	movw	r3, #58448	; 0xe450
   13108:	movt	r3, #2
   1310c:	mov	r2, #6
   13110:	mov	r1, #1
   13114:	ldr	r3, [r3]
   13118:	movw	r0, #52480	; 0xcd00
   1311c:	movt	r0, #1
   13120:	bl	112e0 <fwrite@plt>
   13124:	ldr	r0, [r4]
   13128:	bl	112d4 <perror@plt>
   1312c:	b	130bc <__assert_fail@plt+0x1b84>
   13130:	mov	r5, r6
   13134:	str	r6, [r4]
   13138:	mov	r1, r5
   1313c:	movw	r0, #52360	; 0xcc88
   13140:	movt	r0, #1
   13144:	bl	111f0 <printf@plt>
   13148:	mov	r1, r5
   1314c:	b	12e38 <__assert_fail@plt+0x1900>
   13150:	movw	r0, #52448	; 0xcce0
   13154:	movt	r0, #1
   13158:	add	sp, sp, #20
   1315c:	ldrd	r4, [sp]
   13160:	ldrd	r6, [sp, #8]
   13164:	ldrd	r8, [sp, #16]
   13168:	ldrd	sl, [sp, #24]
   1316c:	ldr	lr, [sp, #32]
   13170:	add	sp, sp, #36	; 0x24
   13174:	b	11340 <puts@plt>
   13178:	movw	r3, #58448	; 0xe450
   1317c:	movt	r3, #2
   13180:	ldr	r3, [r3]
   13184:	mov	r2, #6
   13188:	mov	r1, #1
   1318c:	movw	r0, #52480	; 0xcd00
   13190:	movt	r0, #1
   13194:	bl	112e0 <fwrite@plt>
   13198:	mov	r0, r4
   1319c:	add	sp, sp, #20
   131a0:	ldrd	r4, [sp]
   131a4:	ldrd	r6, [sp, #8]
   131a8:	ldrd	r8, [sp, #16]
   131ac:	ldrd	sl, [sp, #24]
   131b0:	ldr	lr, [sp, #32]
   131b4:	add	sp, sp, #36	; 0x24
   131b8:	b	112d4 <perror@plt>
   131bc:	movw	r3, #60100	; 0xeac4
   131c0:	movt	r3, #2
   131c4:	movw	r2, #60096	; 0xeac0
   131c8:	movt	r2, #2
   131cc:	mov	r1, r4
   131d0:	movw	r0, #52488	; 0xcd08
   131d4:	movt	r0, #1
   131d8:	str	r3, [sp]
   131dc:	mov	r3, r7
   131e0:	ldr	r2, [r2]
   131e4:	bl	111f0 <printf@plt>
   131e8:	b	12f04 <__assert_fail@plt+0x19cc>
   131ec:	ldrb	r3, [r7]
   131f0:	cmp	r3, #0
   131f4:	bne	13218 <__assert_fail@plt+0x1ce0>
   131f8:	b	1322c <__assert_fail@plt+0x1cf4>
   131fc:	ldrb	r3, [r0, #1]
   13200:	cmp	r3, #0
   13204:	bne	13234 <__assert_fail@plt+0x1cfc>
   13208:	strb	r3, [r0]
   1320c:	ldrb	r3, [r7]
   13210:	cmp	r3, #0
   13214:	beq	1322c <__assert_fail@plt+0x1cf4>
   13218:	mov	r1, #47	; 0x2f
   1321c:	mov	r0, r7
   13220:	bl	11484 <strrchr@plt>
   13224:	cmp	r0, #0
   13228:	bne	131fc <__assert_fail@plt+0x1cc4>
   1322c:	mov	r4, r7
   13230:	b	12ee4 <__assert_fail@plt+0x19ac>
   13234:	add	r4, r0, #1
   13238:	b	12ee4 <__assert_fail@plt+0x19ac>
   1323c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13240:	mov	r4, r0
   13244:	movw	r0, #60076	; 0xeaac
   13248:	movt	r0, #2
   1324c:	strd	r6, [sp, #8]
   13250:	mov	r5, r2
   13254:	strd	r8, [sp, #16]
   13258:	str	sl, [sp, #24]
   1325c:	str	lr, [sp, #28]
   13260:	sub	sp, sp, #192	; 0xc0
   13264:	str	r1, [sp, #24]
   13268:	mov	r1, #0
   1326c:	str	r2, [sp, #28]
   13270:	bl	11304 <gettimeofday@plt>
   13274:	bl	13a94 <__assert_fail@plt+0x255c>
   13278:	movw	r1, #52516	; 0xcd24
   1327c:	movt	r1, #1
   13280:	str	r0, [sp, #36]	; 0x24
   13284:	mov	r0, r4
   13288:	mov	r4, #0
   1328c:	bl	111b4 <fdopen@plt>
   13290:	movw	r1, #51880	; 0xcaa8
   13294:	movt	r1, #1
   13298:	str	r0, [sp, #12]
   1329c:	mov	r0, r5
   132a0:	bl	111d8 <strcmp@plt>
   132a4:	clz	r3, r0
   132a8:	movw	r1, #58688	; 0xe540
   132ac:	movt	r1, #2
   132b0:	lsr	r3, r3, #5
   132b4:	mov	r2, #1
   132b8:	mov	r0, #14
   132bc:	str	r1, [sp, #16]
   132c0:	movw	r1, #7840	; 0x1ea0
   132c4:	movt	r1, #1
   132c8:	str	r3, [sp, #60]	; 0x3c
   132cc:	movw	r3, #57672	; 0xe148
   132d0:	movt	r3, #2
   132d4:	str	r3, [sp, #20]
   132d8:	str	r2, [sp, #40]	; 0x28
   132dc:	str	r2, [sp, #48]	; 0x30
   132e0:	str	r4, [sp, #52]	; 0x34
   132e4:	bl	11274 <signal@plt>
   132e8:	ldr	r3, [sp, #48]	; 0x30
   132ec:	cmp	r3, #0
   132f0:	bne	13564 <__assert_fail@plt+0x202c>
   132f4:	ldr	r0, [sp, #16]
   132f8:	mov	r1, #4
   132fc:	ldr	r2, [sp, #40]	; 0x28
   13300:	str	r1, [sp, #44]	; 0x2c
   13304:	strb	r3, [r0]
   13308:	ldr	r3, [sp, #40]	; 0x28
   1330c:	rev16	r2, r2
   13310:	strb	r1, [r0, #1]
   13314:	strh	r2, [r0, #2]
   13318:	add	r3, r3, #1
   1331c:	str	r3, [sp, #40]	; 0x28
   13320:	mov	r2, #0
   13324:	movw	r3, #60072	; 0xeaa8
   13328:	movt	r3, #2
   1332c:	movw	r0, #59208	; 0xe748
   13330:	movt	r0, #2
   13334:	str	r2, [r3]
   13338:	bl	11214 <_setjmp@plt>
   1333c:	ldr	r4, [sp, #20]
   13340:	movw	r7, #58468	; 0xe464
   13344:	movt	r7, #2
   13348:	movw	r8, #51760	; 0xca30
   1334c:	movt	r8, #1
   13350:	add	r9, r7, #16
   13354:	ldr	r3, [r7]
   13358:	cmp	r3, #0
   1335c:	bne	1354c <__assert_fail@plt+0x2014>
   13360:	str	r9, [sp]
   13364:	mov	r3, #0
   13368:	movw	r1, #58688	; 0xe540
   1336c:	movt	r1, #2
   13370:	ldr	ip, [r7, #12]
   13374:	ldr	r0, [r4, #8]
   13378:	ldr	r2, [sp, #44]	; 0x2c
   1337c:	str	ip, [sp, #4]
   13380:	bl	11460 <sendto@plt>
   13384:	ldr	r3, [sp, #44]	; 0x2c
   13388:	cmp	r3, r0
   1338c:	bne	13614 <__assert_fail@plt+0x20dc>
   13390:	ldr	r0, [sp, #12]
   13394:	ldr	r1, [sp, #60]	; 0x3c
   13398:	bl	13cf4 <__assert_fail@plt+0x27bc>
   1339c:	ldr	r0, [r4, #4]
   133a0:	mov	sl, #128	; 0x80
   133a4:	add	r5, sp, #64	; 0x40
   133a8:	bl	112a4 <alarm@plt>
   133ac:	add	r0, sp, #56	; 0x38
   133b0:	mov	r3, #0
   133b4:	str	r5, [sp]
   133b8:	mov	r2, #516	; 0x204
   133bc:	ldr	r1, [sp, #36]	; 0x24
   133c0:	str	r0, [sp, #4]
   133c4:	ldr	r0, [r4, #8]
   133c8:	str	sl, [sp, #56]	; 0x38
   133cc:	bl	11298 <recvfrom@plt>
   133d0:	cmp	r0, #0
   133d4:	ble	133ac <__assert_fail@plt+0x1e74>
   133d8:	mov	r6, r0
   133dc:	mov	r0, #0
   133e0:	bl	112a4 <alarm@plt>
   133e4:	ldrh	r3, [sp, #66]	; 0x42
   133e8:	ldr	r1, [sp, #36]	; 0x24
   133ec:	rev16	r3, r3
   133f0:	uxth	r3, r3
   133f4:	rev16	r3, r3
   133f8:	strh	r3, [r7, #18]
   133fc:	ldr	r3, [r7]
   13400:	cmp	r3, #0
   13404:	bne	1347c <__assert_fail@plt+0x1f44>
   13408:	ldrsh	r2, [r1]
   1340c:	ldrh	r3, [r1, #2]
   13410:	rev16	r2, r2
   13414:	sxth	r0, r2
   13418:	rev16	r3, r3
   1341c:	cmp	r0, #5
   13420:	strh	r2, [r1]
   13424:	uxth	ip, r3
   13428:	strh	r3, [r1, #2]
   1342c:	beq	13494 <__assert_fail@plt+0x1f5c>
   13430:	cmp	r0, #3
   13434:	bne	1339c <__assert_fail@plt+0x1e64>
   13438:	ldr	r3, [sp, #40]	; 0x28
   1343c:	cmp	ip, r3
   13440:	beq	1362c <__assert_fail@plt+0x20f4>
   13444:	ldr	r0, [r4, #8]
   13448:	bl	13ec4 <__assert_fail@plt+0x298c>
   1344c:	subs	r1, r0, #0
   13450:	beq	13460 <__assert_fail@plt+0x1f28>
   13454:	ldr	r3, [r7]
   13458:	cmp	r3, #0
   1345c:	bne	13604 <__assert_fail@plt+0x20cc>
   13460:	ldr	r2, [sp, #36]	; 0x24
   13464:	ldr	r3, [sp, #40]	; 0x28
   13468:	ldrh	r2, [r2, #2]
   1346c:	sub	r3, r3, #1
   13470:	cmp	r2, r3
   13474:	bne	1339c <__assert_fail@plt+0x1e64>
   13478:	b	13354 <__assert_fail@plt+0x1e1c>
   1347c:	movw	r0, #52280	; 0xcc38
   13480:	movt	r0, #1
   13484:	mov	r2, r6
   13488:	bl	11bd4 <__assert_fail@plt+0x69c>
   1348c:	ldr	r1, [sp, #36]	; 0x24
   13490:	b	13408 <__assert_fail@plt+0x1ed0>
   13494:	add	r2, r1, #4
   13498:	movw	r0, #52292	; 0xcc44
   1349c:	movt	r0, #1
   134a0:	sxth	r1, ip
   134a4:	bl	111f0 <printf@plt>
   134a8:	movw	r3, #58468	; 0xe464
   134ac:	movt	r3, #2
   134b0:	ldr	r5, [sp, #16]
   134b4:	add	r2, r3, #16
   134b8:	mov	r4, #0
   134bc:	ldr	ip, [sp, #40]	; 0x28
   134c0:	movw	r1, #57672	; 0xe148
   134c4:	movt	r1, #2
   134c8:	ldr	lr, [r3, #12]
   134cc:	mov	r3, r4
   134d0:	str	r2, [sp]
   134d4:	mov	r2, #4
   134d8:	strb	r4, [r5]
   134dc:	rev16	ip, ip
   134e0:	strb	r2, [r5, #1]
   134e4:	ldr	r0, [r1, #8]
   134e8:	movw	r1, #58688	; 0xe540
   134ec:	movt	r1, #2
   134f0:	str	lr, [sp, #4]
   134f4:	strh	ip, [r5, #2]
   134f8:	bl	11460 <sendto@plt>
   134fc:	ldr	r5, [sp, #12]
   13500:	ldr	r1, [sp, #60]	; 0x3c
   13504:	mov	r0, r5
   13508:	bl	13cf4 <__assert_fail@plt+0x27bc>
   1350c:	mov	r0, r5
   13510:	bl	11448 <fclose@plt>
   13514:	mov	r1, r4
   13518:	movw	r0, #60084	; 0xeab4
   1351c:	movt	r0, #2
   13520:	bl	11304 <gettimeofday@plt>
   13524:	ldr	r3, [sp, #52]	; 0x34
   13528:	cmp	r3, r4
   1352c:	bne	135f0 <__assert_fail@plt+0x20b8>
   13530:	add	sp, sp, #192	; 0xc0
   13534:	ldrd	r4, [sp]
   13538:	ldrd	r6, [sp, #8]
   1353c:	ldrd	r8, [sp, #16]
   13540:	ldr	sl, [sp, #24]
   13544:	add	sp, sp, #28
   13548:	pop	{pc}		; (ldr pc, [sp], #4)
   1354c:	movw	r1, #58688	; 0xe540
   13550:	movt	r1, #2
   13554:	ldr	r2, [sp, #44]	; 0x2c
   13558:	mov	r0, r8
   1355c:	bl	11bd4 <__assert_fail@plt+0x69c>
   13560:	b	13360 <__assert_fail@plt+0x1e28>
   13564:	ldr	r7, [sp, #24]
   13568:	mov	r3, #1
   1356c:	mov	r6, #0
   13570:	movw	r5, #58688	; 0xe540
   13574:	movt	r5, #2
   13578:	strb	r6, [r5]
   1357c:	strb	r3, [r5, #1]
   13580:	mov	r0, r7
   13584:	bl	113b8 <strlen@plt>
   13588:	mov	r4, r0
   1358c:	mov	r1, r7
   13590:	movw	r2, #502	; 0x1f6
   13594:	add	r0, r5, #2
   13598:	bl	11418 <strncpy@plt>
   1359c:	movw	r3, #502	; 0x1f6
   135a0:	ldr	r7, [sp, #28]
   135a4:	add	r2, r5, #2
   135a8:	cmp	r4, r3
   135ac:	movcc	r3, r4
   135b0:	add	r4, r3, r2
   135b4:	add	r4, r4, #1
   135b8:	strb	r6, [r3, r2]
   135bc:	mov	r1, r7
   135c0:	mov	r0, r4
   135c4:	bl	112f8 <strcpy@plt>
   135c8:	mov	r0, r7
   135cc:	bl	113b8 <strlen@plt>
   135d0:	add	r3, r4, r0
   135d4:	strb	r6, [r4, r0]
   135d8:	add	r3, r3, #1
   135dc:	sub	r3, r3, r5
   135e0:	str	r3, [sp, #44]	; 0x2c
   135e4:	mov	r3, #0
   135e8:	str	r3, [sp, #48]	; 0x30
   135ec:	b	13320 <__assert_fail@plt+0x1de8>
   135f0:	movw	r0, #52520	; 0xcd28
   135f4:	movt	r0, #1
   135f8:	ldr	r1, [sp, #52]	; 0x34
   135fc:	bl	11918 <__assert_fail@plt+0x3e0>
   13600:	b	13530 <__assert_fail@plt+0x1ff8>
   13604:	movw	r0, #52312	; 0xcc58
   13608:	movt	r0, #1
   1360c:	bl	111f0 <printf@plt>
   13610:	b	13460 <__assert_fail@plt+0x1f28>
   13614:	mov	r0, #0
   13618:	bl	112a4 <alarm@plt>
   1361c:	movw	r0, #52264	; 0xcc28
   13620:	movt	r0, #1
   13624:	bl	112d4 <perror@plt>
   13628:	b	134a8 <__assert_fail@plt+0x1f70>
   1362c:	sub	r2, r6, #4
   13630:	add	r1, sp, #36	; 0x24
   13634:	ldr	r0, [sp, #12]
   13638:	ldr	r3, [sp, #60]	; 0x3c
   1363c:	bl	13e2c <__assert_fail@plt+0x28f4>
   13640:	str	r0, [sp, #44]	; 0x2c
   13644:	ldr	r3, [sp, #44]	; 0x2c
   13648:	cmp	r3, #0
   1364c:	blt	13670 <__assert_fail@plt+0x2138>
   13650:	ldr	r3, [sp, #44]	; 0x2c
   13654:	ldr	r2, [sp, #52]	; 0x34
   13658:	add	r3, r3, r2
   1365c:	str	r3, [sp, #52]	; 0x34
   13660:	ldr	r3, [sp, #44]	; 0x2c
   13664:	cmp	r3, #512	; 0x200
   13668:	bne	134a8 <__assert_fail@plt+0x1f70>
   1366c:	b	132e8 <__assert_fail@plt+0x1db0>
   13670:	bl	113dc <__errno_location@plt>
   13674:	ldr	r0, [r0]
   13678:	add	r0, r0, #100	; 0x64
   1367c:	bl	11f00 <__assert_fail@plt+0x9c8>
   13680:	b	134a8 <__assert_fail@plt+0x1f70>
   13684:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13688:	cmp	r0, #1
   1368c:	strd	r6, [sp, #8]
   13690:	strd	r8, [sp, #16]
   13694:	movgt	r8, r0
   13698:	strd	sl, [sp, #24]
   1369c:	str	lr, [sp, #32]
   136a0:	sub	sp, sp, #28
   136a4:	str	r1, [sp, #12]
   136a8:	ble	13940 <__assert_fail@plt+0x2408>
   136ac:	movw	r6, #58468	; 0xe464
   136b0:	movt	r6, #2
   136b4:	ldr	r3, [r6, #8]
   136b8:	cmp	r3, #0
   136bc:	beq	138d4 <__assert_fail@plt+0x239c>
   136c0:	ldr	r9, [sp, #12]
   136c4:	movw	r3, #60096	; 0xeac0
   136c8:	movt	r3, #2
   136cc:	movw	fp, #60100	; 0xeac4
   136d0:	movt	fp, #2
   136d4:	mov	r7, #1
   136d8:	str	r3, [sp, #16]
   136dc:	movw	r3, #52636	; 0xcd9c
   136e0:	movt	r3, #1
   136e4:	str	r3, [sp, #20]
   136e8:	ldr	r4, [r9, #4]!
   136ec:	mov	r1, #58	; 0x3a
   136f0:	mov	r0, r4
   136f4:	bl	113c4 <strchr@plt>
   136f8:	subs	r5, r0, #0
   136fc:	beq	13734 <__assert_fail@plt+0x21fc>
   13700:	cmp	r4, r5
   13704:	addeq	r4, r4, #1
   13708:	beq	13734 <__assert_fail@plt+0x21fc>
   1370c:	ldrb	r3, [r4]
   13710:	cmp	r3, #91	; 0x5b
   13714:	beq	13800 <__assert_fail@plt+0x22c8>
   13718:	mov	r3, #0
   1371c:	mov	r0, r4
   13720:	strb	r3, [r5], #1
   13724:	mov	r4, r5
   13728:	bl	11cd4 <__assert_fail@plt+0x79c>
   1372c:	cmp	r0, #0
   13730:	bne	137b0 <__assert_fail@plt+0x2278>
   13734:	cmp	r8, #3
   13738:	bgt	13764 <__assert_fail@plt+0x222c>
   1373c:	b	13840 <__assert_fail@plt+0x2308>
   13740:	mov	r1, #47	; 0x2f
   13744:	mov	r0, r4
   13748:	bl	11484 <strrchr@plt>
   1374c:	cmp	r0, #0
   13750:	beq	13770 <__assert_fail@plt+0x2238>
   13754:	ldrb	r3, [r0, #1]
   13758:	cmp	r3, #0
   1375c:	bne	137d8 <__assert_fail@plt+0x22a0>
   13760:	strb	r3, [r0]
   13764:	ldrb	r3, [r4]
   13768:	cmp	r3, #0
   1376c:	bne	13740 <__assert_fail@plt+0x2208>
   13770:	mov	r5, r4
   13774:	mov	r1, #420	; 0x1a4
   13778:	mov	r0, r5
   1377c:	bl	11310 <creat64@plt>
   13780:	subs	sl, r0, #0
   13784:	blt	138a8 <__assert_fail@plt+0x2370>
   13788:	ldr	r3, [r6, #4]
   1378c:	cmp	r3, #0
   13790:	bne	137e0 <__assert_fail@plt+0x22a8>
   13794:	ldr	r3, [r6, #144]	; 0x90
   13798:	mov	r1, r4
   1379c:	mov	r0, sl
   137a0:	mov	r2, fp
   137a4:	rev16	r3, r3
   137a8:	strh	r3, [r6, #18]
   137ac:	bl	1323c <__assert_fail@plt+0x1d04>
   137b0:	add	r7, r7, #1
   137b4:	cmp	r7, r8
   137b8:	blt	136e8 <__assert_fail@plt+0x21b0>
   137bc:	add	sp, sp, #28
   137c0:	ldrd	r4, [sp]
   137c4:	ldrd	r6, [sp, #8]
   137c8:	ldrd	r8, [sp, #16]
   137cc:	ldrd	sl, [sp, #24]
   137d0:	add	sp, sp, #32
   137d4:	pop	{pc}		; (ldr pc, [sp], #4)
   137d8:	add	r5, r0, #1
   137dc:	b	13774 <__assert_fail@plt+0x223c>
   137e0:	ldr	r1, [sp, #16]
   137e4:	mov	r3, r5
   137e8:	mov	r2, r4
   137ec:	str	fp, [sp]
   137f0:	ldr	r0, [sp, #20]
   137f4:	ldr	r1, [r1]
   137f8:	bl	111f0 <printf@plt>
   137fc:	b	13794 <__assert_fail@plt+0x225c>
   13800:	mov	r0, r4
   13804:	mov	r1, #93	; 0x5d
   13808:	bl	113c4 <strchr@plt>
   1380c:	cmp	r0, #0
   13810:	beq	13938 <__assert_fail@plt+0x2400>
   13814:	ldrb	r3, [r0, #1]
   13818:	mov	r2, #0
   1381c:	strb	r2, [r0]
   13820:	cmp	r3, #58	; 0x3a
   13824:	addne	r4, r0, #1
   13828:	addeq	r4, r0, #2
   1382c:	ldr	r0, [r9]
   13830:	adds	r0, r0, #1
   13834:	bne	13728 <__assert_fail@plt+0x21f0>
   13838:	cmp	r8, #3
   1383c:	bgt	13764 <__assert_fail@plt+0x222c>
   13840:	bne	13924 <__assert_fail@plt+0x23ec>
   13844:	ldr	r3, [sp, #12]
   13848:	ldr	r5, [r3, #8]
   1384c:	mov	r1, #420	; 0x1a4
   13850:	mov	r0, r5
   13854:	bl	11310 <creat64@plt>
   13858:	subs	r7, r0, #0
   1385c:	blt	13a50 <__assert_fail@plt+0x2518>
   13860:	ldr	r3, [r6, #4]
   13864:	cmp	r3, #0
   13868:	bne	13a18 <__assert_fail@plt+0x24e0>
   1386c:	ldr	r3, [r6, #144]	; 0x90
   13870:	mov	r1, r4
   13874:	mov	r0, r7
   13878:	movw	r2, #60100	; 0xeac4
   1387c:	movt	r2, #2
   13880:	rev16	r3, r3
   13884:	strh	r3, [r6, #18]
   13888:	add	sp, sp, #28
   1388c:	ldrd	r4, [sp]
   13890:	ldrd	r6, [sp, #8]
   13894:	ldrd	r8, [sp, #16]
   13898:	ldrd	sl, [sp, #24]
   1389c:	ldr	lr, [sp, #32]
   138a0:	add	sp, sp, #36	; 0x24
   138a4:	b	1323c <__assert_fail@plt+0x1d04>
   138a8:	movw	r3, #58448	; 0xe450
   138ac:	movt	r3, #2
   138b0:	mov	r2, #6
   138b4:	mov	r1, #1
   138b8:	ldr	r3, [r3]
   138bc:	movw	r0, #52480	; 0xcd00
   138c0:	movt	r0, #1
   138c4:	bl	112e0 <fwrite@plt>
   138c8:	mov	r0, r5
   138cc:	bl	112d4 <perror@plt>
   138d0:	b	137b0 <__assert_fail@plt+0x2278>
   138d4:	ldr	r5, [sp, #12]
   138d8:	mov	r4, #1
   138dc:	mov	r1, #58	; 0x3a
   138e0:	add	r4, r4, #1
   138e4:	ldr	r0, [r5, #4]!
   138e8:	bl	113c4 <strchr@plt>
   138ec:	cmp	r0, #0
   138f0:	beq	139c4 <__assert_fail@plt+0x248c>
   138f4:	cmp	r4, r8
   138f8:	blt	138dc <__assert_fail@plt+0x23a4>
   138fc:	b	136c0 <__assert_fail@plt+0x2188>
   13900:	mov	r1, #47	; 0x2f
   13904:	mov	r0, r4
   13908:	bl	11484 <strrchr@plt>
   1390c:	cmp	r0, #0
   13910:	beq	13930 <__assert_fail@plt+0x23f8>
   13914:	ldrb	r3, [r0, #1]
   13918:	cmp	r3, #0
   1391c:	bne	13a48 <__assert_fail@plt+0x2510>
   13920:	strb	r3, [r0]
   13924:	ldrb	r3, [r4]
   13928:	cmp	r3, #0
   1392c:	bne	13900 <__assert_fail@plt+0x23c8>
   13930:	mov	r5, r4
   13934:	b	1384c <__assert_fail@plt+0x2314>
   13938:	mov	r4, r5
   1393c:	b	13734 <__assert_fail@plt+0x21fc>
   13940:	movw	r5, #52532	; 0xcd34
   13944:	movt	r5, #1
   13948:	movw	r3, #52104	; 0xcb88
   1394c:	movt	r3, #1
   13950:	ldr	r2, [r5]
   13954:	movw	r4, #60132	; 0xeae4
   13958:	movt	r4, #2
   1395c:	ldrh	r3, [r3]
   13960:	movw	r1, #52536	; 0xcd38
   13964:	movt	r1, #1
   13968:	movw	r0, #52036	; 0xcb44
   1396c:	movt	r0, #1
   13970:	str	r2, [r4]
   13974:	strh	r3, [r4, #3]
   13978:	bl	111f0 <printf@plt>
   1397c:	movw	r3, #58456	; 0xe458
   13980:	movt	r3, #2
   13984:	add	r0, r4, #4
   13988:	mov	r1, #196	; 0xc4
   1398c:	ldr	r2, [r3]
   13990:	bl	11250 <fgets@plt>
   13994:	cmp	r0, #0
   13998:	beq	13a08 <__assert_fail@plt+0x24d0>
   1399c:	bl	11ad0 <__assert_fail@plt+0x598>
   139a0:	movw	r3, #60092	; 0xeabc
   139a4:	movt	r3, #2
   139a8:	ldr	r8, [r3]
   139ac:	movw	r3, #59600	; 0xe8d0
   139b0:	movt	r3, #2
   139b4:	cmp	r8, #1
   139b8:	strgt	r3, [sp, #12]
   139bc:	bgt	136ac <__assert_fail@plt+0x2174>
   139c0:	b	139c8 <__assert_fail@plt+0x2490>
   139c4:	ldr	r3, [sp, #12]
   139c8:	ldr	r4, [r3]
   139cc:	mov	r1, r4
   139d0:	movw	r0, #52548	; 0xcd44
   139d4:	movt	r0, #1
   139d8:	bl	111f0 <printf@plt>
   139dc:	mov	r1, r4
   139e0:	movw	r0, #52592	; 0xcd70
   139e4:	movt	r0, #1
   139e8:	add	sp, sp, #28
   139ec:	ldrd	r4, [sp]
   139f0:	ldrd	r6, [sp, #8]
   139f4:	ldrd	r8, [sp, #16]
   139f8:	ldrd	sl, [sp, #24]
   139fc:	ldr	lr, [sp, #32]
   13a00:	add	sp, sp, #36	; 0x24
   13a04:	b	111f0 <printf@plt>
   13a08:	ldr	r3, [sp, #12]
   13a0c:	mov	r4, r5
   13a10:	str	r5, [r3]
   13a14:	b	139cc <__assert_fail@plt+0x2494>
   13a18:	movw	r2, #60100	; 0xeac4
   13a1c:	movt	r2, #2
   13a20:	movw	r1, #60096	; 0xeac0
   13a24:	movt	r1, #2
   13a28:	mov	r3, r5
   13a2c:	movw	r0, #52636	; 0xcd9c
   13a30:	movt	r0, #1
   13a34:	str	r2, [sp]
   13a38:	mov	r2, r4
   13a3c:	ldr	r1, [r1]
   13a40:	bl	111f0 <printf@plt>
   13a44:	b	1386c <__assert_fail@plt+0x2334>
   13a48:	add	r5, r0, #1
   13a4c:	b	1384c <__assert_fail@plt+0x2314>
   13a50:	movw	r3, #58448	; 0xe450
   13a54:	movt	r3, #2
   13a58:	ldr	r3, [r3]
   13a5c:	mov	r2, #6
   13a60:	mov	r1, #1
   13a64:	movw	r0, #52480	; 0xcd00
   13a68:	movt	r0, #1
   13a6c:	bl	112e0 <fwrite@plt>
   13a70:	mov	r0, r5
   13a74:	add	sp, sp, #28
   13a78:	ldrd	r4, [sp]
   13a7c:	ldrd	r6, [sp, #8]
   13a80:	ldrd	r8, [sp, #16]
   13a84:	ldrd	sl, [sp, #24]
   13a88:	ldr	lr, [sp, #32]
   13a8c:	add	sp, sp, #36	; 0x24
   13a90:	b	112d4 <perror@plt>
   13a94:	movw	r1, #58372	; 0xe404
   13a98:	movt	r1, #2
   13a9c:	push	{lr}		; (str lr, [sp, #-4]!)
   13aa0:	mvn	lr, #0
   13aa4:	mvn	r0, #2
   13aa8:	mvn	ip, #1
   13aac:	movw	r2, #58620	; 0xe4fc
   13ab0:	movt	r2, #2
   13ab4:	movw	r3, #60332	; 0xebac
   13ab8:	movt	r3, #2
   13abc:	str	lr, [r1]
   13ac0:	mov	r1, #0
   13ac4:	str	r0, [r3]
   13ac8:	add	r0, r3, #4
   13acc:	str	r1, [r2]
   13ad0:	str	r1, [r2, #4]
   13ad4:	str	r1, [r2, #8]
   13ad8:	str	ip, [r3, #520]	; 0x208
   13adc:	pop	{pc}		; (ldr pc, [sp], #4)
   13ae0:	mov	ip, #1
   13ae4:	mvn	r0, #0
   13ae8:	push	{lr}		; (str lr, [sp, #-4]!)
   13aec:	movw	r2, #58620	; 0xe4fc
   13af0:	movt	r2, #2
   13af4:	movw	r1, #58372	; 0xe404
   13af8:	movt	r1, #2
   13afc:	mvn	lr, #2
   13b00:	movw	r3, #60332	; 0xebac
   13b04:	movt	r3, #2
   13b08:	str	r0, [r1]
   13b0c:	mov	r1, #0
   13b10:	add	r0, r3, #4
   13b14:	str	ip, [r2, #8]
   13b18:	mvn	ip, #1
   13b1c:	str	lr, [r3]
   13b20:	str	r1, [r2]
   13b24:	str	r1, [r2, #4]
   13b28:	str	ip, [r3, #520]	; 0x208
   13b2c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13b34:	movw	r5, #58620	; 0xe4fc
   13b38:	movt	r5, #2
   13b3c:	strd	r6, [sp, #8]
   13b40:	movw	r7, #60332	; 0xebac
   13b44:	movt	r7, #2
   13b48:	strd	r8, [sp, #16]
   13b4c:	ldr	r8, [r5, #8]
   13b50:	strd	sl, [sp, #24]
   13b54:	str	lr, [sp, #32]
   13b58:	sub	sp, sp, #12
   13b5c:	lsl	r3, r8, #6
   13b60:	add	r4, r3, r8
   13b64:	lsl	r4, r4, #3
   13b68:	str	r3, [sp, #4]
   13b6c:	ldr	r3, [r7, r4]
   13b70:	cmn	r3, #2
   13b74:	bne	13c30 <__assert_fail@plt+0x26f8>
   13b78:	clz	r3, r8
   13b7c:	add	r2, r4, #4
   13b80:	lsr	r3, r3, #5
   13b84:	add	r2, r7, r2
   13b88:	cmp	r1, #0
   13b8c:	add	r1, r2, #4
   13b90:	str	r1, [sp]
   13b94:	str	r3, [r5, #8]
   13b98:	beq	13c4c <__assert_fail@plt+0x2714>
   13b9c:	movw	fp, #58372	; 0xe404
   13ba0:	movt	fp, #2
   13ba4:	mov	r6, r0
   13ba8:	mov	r4, r1
   13bac:	add	r9, r2, #516	; 0x204
   13bb0:	mov	sl, #1
   13bb4:	b	13bd8 <__assert_fail@plt+0x26a0>
   13bb8:	ldr	r3, [fp]
   13bbc:	str	r0, [r5]
   13bc0:	cmp	r3, #10
   13bc4:	moveq	r3, #10
   13bc8:	movne	r3, r0
   13bcc:	strb	r3, [r4], #1
   13bd0:	cmp	r4, r9
   13bd4:	beq	13c1c <__assert_fail@plt+0x26e4>
   13bd8:	ldr	r3, [r5]
   13bdc:	mov	r0, #0
   13be0:	cmp	r3, r0
   13be4:	bne	13bb8 <__assert_fail@plt+0x2680>
   13be8:	mov	r0, r6
   13bec:	bl	11520 <getc@plt>
   13bf0:	cmn	r0, #1
   13bf4:	mov	r3, #13
   13bf8:	beq	13c1c <__assert_fail@plt+0x26e4>
   13bfc:	cmp	r0, r3
   13c00:	cmpne	r0, #10
   13c04:	uxtbne	r3, r0
   13c08:	streq	sl, [r5]
   13c0c:	streq	r0, [fp]
   13c10:	strb	r3, [r4], #1
   13c14:	cmp	r4, r9
   13c18:	bne	13bd8 <__assert_fail@plt+0x26a0>
   13c1c:	ldr	r3, [sp, #4]
   13c20:	add	r8, r3, r8
   13c24:	ldr	r3, [sp]
   13c28:	sub	r4, r4, r3
   13c2c:	str	r4, [r7, r8, lsl #3]
   13c30:	add	sp, sp, #12
   13c34:	ldrd	r4, [sp]
   13c38:	ldrd	r6, [sp, #8]
   13c3c:	ldrd	r8, [sp, #16]
   13c40:	ldrd	sl, [sp, #24]
   13c44:	add	sp, sp, #32
   13c48:	pop	{pc}		; (ldr pc, [sp], #4)
   13c4c:	bl	11430 <fileno@plt>
   13c50:	mov	r2, #512	; 0x200
   13c54:	ldr	r1, [sp]
   13c58:	bl	111fc <read@plt>
   13c5c:	str	r0, [r7, r4]
   13c60:	b	13c30 <__assert_fail@plt+0x26f8>
   13c64:	movw	ip, #58620	; 0xe4fc
   13c68:	movt	ip, #2
   13c6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13c70:	ldr	r3, [ip, #4]
   13c74:	movw	r4, #60332	; 0xebac
   13c78:	movt	r4, #2
   13c7c:	strd	r6, [sp, #8]
   13c80:	mov	r7, r1
   13c84:	str	r8, [sp, #16]
   13c88:	str	lr, [sp, #20]
   13c8c:	mvn	lr, #1
   13c90:	clz	r5, r3
   13c94:	add	r3, r3, r3, lsl #6
   13c98:	lsr	r5, r5, #5
   13c9c:	lsl	r6, r5, #6
   13ca0:	str	lr, [r4, r3, lsl #3]
   13ca4:	str	r5, [ip, #4]
   13ca8:	add	r8, r6, r5
   13cac:	lsl	r8, r8, #3
   13cb0:	ldr	r3, [r4, r8]
   13cb4:	cmp	r3, lr
   13cb8:	beq	13ce4 <__assert_fail@plt+0x27ac>
   13cbc:	add	r5, r6, r5
   13cc0:	ldr	r8, [sp, #16]
   13cc4:	mov	r0, r3
   13cc8:	add	r4, r4, r5, lsl #3
   13ccc:	add	r4, r4, #4
   13cd0:	str	r4, [r7]
   13cd4:	ldrd	r4, [sp]
   13cd8:	ldrd	r6, [sp, #8]
   13cdc:	add	sp, sp, #20
   13ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ce4:	mov	r1, r2
   13ce8:	bl	13b30 <__assert_fail@plt+0x25f8>
   13cec:	ldr	r3, [r4, r8]
   13cf0:	b	13cbc <__assert_fail@plt+0x2784>
   13cf4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13cf8:	movw	r4, #58620	; 0xe4fc
   13cfc:	movt	r4, #2
   13d00:	ldr	r3, [r4, #8]
   13d04:	strd	r6, [sp, #8]
   13d08:	str	lr, [sp, #28]
   13d0c:	movw	lr, #60332	; 0xebac
   13d10:	movt	lr, #2
   13d14:	strd	r8, [sp, #16]
   13d18:	str	sl, [sp, #24]
   13d1c:	sub	sp, sp, #8
   13d20:	add	ip, r3, r3, lsl #6
   13d24:	lsl	ip, ip, #3
   13d28:	ldr	r9, [lr, ip]
   13d2c:	cmn	r9, #1
   13d30:	blt	13df0 <__assert_fail@plt+0x28b8>
   13d34:	clz	r3, r3
   13d38:	mvn	r5, #1
   13d3c:	lsr	r3, r3, #5
   13d40:	add	r6, ip, #4
   13d44:	cmp	r9, #0
   13d48:	add	r2, r6, lr
   13d4c:	str	r5, [lr, ip]
   13d50:	add	r5, r2, #4
   13d54:	str	r3, [r4, #8]
   13d58:	ble	13e24 <__assert_fail@plt+0x28ec>
   13d5c:	cmp	r1, #0
   13d60:	beq	13df8 <__assert_fail@plt+0x28c0>
   13d64:	movw	r7, #58372	; 0xe404
   13d68:	movt	r7, #2
   13d6c:	ldr	r3, [r7]
   13d70:	add	r6, r9, #4
   13d74:	mov	r8, r0
   13d78:	mov	sl, #1
   13d7c:	add	r6, r2, r6
   13d80:	cmp	r3, #13
   13d84:	ldrb	r4, [r5], #1
   13d88:	bne	13d9c <__assert_fail@plt+0x2864>
   13d8c:	cmp	r4, #10
   13d90:	beq	13dd8 <__assert_fail@plt+0x28a0>
   13d94:	cmp	r4, #0
   13d98:	beq	13da8 <__assert_fail@plt+0x2870>
   13d9c:	mov	r1, r8
   13da0:	mov	r0, r4
   13da4:	bl	114a8 <putc@plt>
   13da8:	cmp	r6, r5
   13dac:	mov	r3, r4
   13db0:	str	r4, [r7]
   13db4:	bne	13d80 <__assert_fail@plt+0x2848>
   13db8:	mov	r0, r9
   13dbc:	add	sp, sp, #8
   13dc0:	ldrd	r4, [sp]
   13dc4:	ldrd	r6, [sp, #8]
   13dc8:	ldrd	r8, [sp, #16]
   13dcc:	ldr	sl, [sp, #24]
   13dd0:	add	sp, sp, #28
   13dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   13dd8:	mvn	r2, #0
   13ddc:	mvn	r3, #0
   13de0:	str	sl, [sp]
   13de4:	mov	r0, r8
   13de8:	bl	11454 <fseeko64@plt>
   13dec:	b	13d9c <__assert_fail@plt+0x2864>
   13df0:	mov	r9, #0
   13df4:	b	13db8 <__assert_fail@plt+0x2880>
   13df8:	bl	11430 <fileno@plt>
   13dfc:	mov	r2, r9
   13e00:	mov	r1, r5
   13e04:	add	sp, sp, #8
   13e08:	ldrd	r4, [sp]
   13e0c:	ldrd	r6, [sp, #8]
   13e10:	ldrd	r8, [sp, #16]
   13e14:	ldr	sl, [sp, #24]
   13e18:	ldr	lr, [sp, #28]
   13e1c:	add	sp, sp, #32
   13e20:	b	11424 <write@plt>
   13e24:	mvn	r9, #0
   13e28:	b	13db8 <__assert_fail@plt+0x2880>
   13e2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13e30:	movw	r4, #60332	; 0xebac
   13e34:	movt	r4, #2
   13e38:	strd	r6, [sp, #8]
   13e3c:	mov	r6, r2
   13e40:	mov	r7, r1
   13e44:	str	r8, [sp, #16]
   13e48:	movw	r8, #58620	; 0xe4fc
   13e4c:	movt	r8, #2
   13e50:	ldr	ip, [r8, #4]
   13e54:	str	lr, [sp, #20]
   13e58:	clz	lr, ip
   13e5c:	add	r5, ip, ip, lsl #6
   13e60:	lsr	lr, lr, #5
   13e64:	lsl	ip, lr, #6
   13e68:	str	r2, [r4, r5, lsl #3]
   13e6c:	str	lr, [r8, #4]
   13e70:	add	r2, ip, lr
   13e74:	ldr	r2, [r4, r2, lsl #3]
   13e78:	cmn	r2, #2
   13e7c:	beq	13e90 <__assert_fail@plt+0x2958>
   13e80:	mov	r1, r3
   13e84:	bl	13cf4 <__assert_fail@plt+0x27bc>
   13e88:	ldr	lr, [r8, #4]
   13e8c:	lsl	ip, lr, #6
   13e90:	add	ip, ip, lr
   13e94:	mvn	r2, #2
   13e98:	ldr	r8, [sp, #16]
   13e9c:	lsl	ip, ip, #3
   13ea0:	mov	r0, r6
   13ea4:	add	r3, ip, #4
   13ea8:	add	r3, r4, r3
   13eac:	str	r2, [r4, ip]
   13eb0:	ldrd	r4, [sp]
   13eb4:	str	r3, [r7]
   13eb8:	ldrd	r6, [sp, #8]
   13ebc:	add	sp, sp, #20
   13ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ec4:	strd	r4, [sp, #-20]!	; 0xffffffec
   13ec8:	mov	r4, r0
   13ecc:	mov	r5, #0
   13ed0:	strd	r6, [sp, #8]
   13ed4:	mov	r7, #128	; 0x80
   13ed8:	str	lr, [sp, #16]
   13edc:	sub	sp, sp, #668	; 0x29c
   13ee0:	add	r6, sp, #20
   13ee4:	b	13efc <__assert_fail@plt+0x29c4>
   13ee8:	add	ip, sp, #16
   13eec:	add	r5, r5, #1
   13ef0:	stm	sp, {r6, ip}
   13ef4:	str	r7, [sp, #16]
   13ef8:	bl	11298 <recvfrom@plt>
   13efc:	add	r2, sp, #12
   13f00:	movw	r1, #21531	; 0x541b
   13f04:	mov	r0, r4
   13f08:	bl	19888 <argp_parse@@Base+0x1164>
   13f0c:	ldr	ip, [sp, #12]
   13f10:	mov	r3, #0
   13f14:	mov	r2, #516	; 0x204
   13f18:	add	r1, sp, #148	; 0x94
   13f1c:	mov	r0, r4
   13f20:	cmp	ip, r3
   13f24:	bne	13ee8 <__assert_fail@plt+0x29b0>
   13f28:	mov	r0, r5
   13f2c:	add	sp, sp, #668	; 0x29c
   13f30:	ldrd	r4, [sp]
   13f34:	ldrd	r6, [sp, #8]
   13f38:	add	sp, sp, #16
   13f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f40:	ldr	r3, [r0, #12]
   13f44:	strd	r4, [sp, #-16]!
   13f48:	ldr	r2, [r1, #12]
   13f4c:	str	r6, [sp, #8]
   13f50:	str	lr, [sp, #12]
   13f54:	cmp	r3, r2
   13f58:	beq	13fb8 <__assert_fail@plt+0x2a80>
   13f5c:	mov	r5, r1
   13f60:	mov	r4, r0
   13f64:	mov	r1, r2
   13f68:	mov	r0, r3
   13f6c:	bl	13f40 <__assert_fail@plt+0x2a08>
   13f70:	cmp	r0, #0
   13f74:	bne	13fa8 <__assert_fail@plt+0x2a70>
   13f78:	ldr	r3, [r5, #8]
   13f7c:	ldr	r0, [r4, #8]
   13f80:	mvn	r2, r3
   13f84:	lsr	r2, r2, #31
   13f88:	cmp	r2, r0, lsr #31
   13f8c:	subne	r0, r0, r3
   13f90:	subeq	r0, r3, r0
   13f94:	cmp	r0, #0
   13f98:	bne	13fa8 <__assert_fail@plt+0x2a70>
   13f9c:	ldr	r0, [r4, #4]
   13fa0:	ldr	r3, [r5, #4]
   13fa4:	sub	r0, r3, r0
   13fa8:	ldrd	r4, [sp]
   13fac:	ldr	r6, [sp, #8]
   13fb0:	add	sp, sp, #12
   13fb4:	pop	{pc}		; (ldr pc, [sp], #4)
   13fb8:	ldr	lr, [r1, #4]
   13fbc:	ldr	r3, [r1, #8]
   13fc0:	ldr	r2, [r0, #8]
   13fc4:	ldr	ip, [r0, #4]
   13fc8:	mvn	r1, r3
   13fcc:	lsr	r1, r1, #31
   13fd0:	ldrd	r4, [sp]
   13fd4:	cmp	r1, r2, lsr #31
   13fd8:	ldr	r6, [sp, #8]
   13fdc:	add	sp, sp, #12
   13fe0:	subne	r0, r2, r3
   13fe4:	subeq	r0, r3, r2
   13fe8:	cmp	r0, #0
   13fec:	subeq	r0, lr, ip
   13ff0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ff4:	strd	r4, [sp, #-16]!
   13ff8:	subs	r5, r0, #0
   13ffc:	mov	r4, r1
   14000:	str	r6, [sp, #8]
   14004:	str	lr, [sp, #12]
   14008:	beq	1401c <__assert_fail@plt+0x2ae4>
   1400c:	mov	r1, #10
   14010:	bl	113c4 <strchr@plt>
   14014:	adds	r5, r0, #0
   14018:	movne	r5, #1
   1401c:	cmp	r4, #0
   14020:	beq	1404c <__assert_fail@plt+0x2b14>
   14024:	ldr	r3, [r4]
   14028:	cmp	r3, #0
   1402c:	beq	1404c <__assert_fail@plt+0x2b14>
   14030:	ldr	r0, [r3, #8]
   14034:	ldr	r1, [r3, #16]
   14038:	bl	13ff4 <__assert_fail@plt+0x2abc>
   1403c:	ldr	r3, [r4, #16]!
   14040:	add	r5, r5, r0
   14044:	cmp	r3, #0
   14048:	bne	14030 <__assert_fail@plt+0x2af8>
   1404c:	mov	r0, r5
   14050:	ldrd	r4, [sp]
   14054:	ldr	r6, [sp, #8]
   14058:	add	sp, sp, #12
   1405c:	pop	{pc}		; (ldr pc, [sp], #4)
   14060:	ldr	r3, [r0, #16]
   14064:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14068:	ldr	r4, [r0]
   1406c:	strd	r6, [sp, #8]
   14070:	strd	r8, [sp, #16]
   14074:	strd	sl, [sp, #24]
   14078:	str	lr, [sp, #32]
   1407c:	sub	sp, sp, #52	; 0x34
   14080:	stm	sp, {r0, r3}
   14084:	mov	r0, #16
   14088:	str	r1, [sp, #8]
   1408c:	bl	1ab78 <argp_parse@@Base+0x2454>
   14090:	subs	fp, r0, #0
   14094:	beq	146fc <__assert_fail@plt+0x31c4>
   14098:	mov	r3, #0
   1409c:	cmp	r4, r3
   140a0:	str	r3, [fp, #4]
   140a4:	str	r3, [fp, #12]
   140a8:	beq	14304 <__assert_fail@plt+0x2dcc>
   140ac:	ldr	r0, [r4, #12]
   140b0:	ands	r0, r0, #4
   140b4:	bne	14738 <__assert_fail@plt+0x3200>
   140b8:	mov	r9, r0
   140bc:	add	r5, r4, #24
   140c0:	mov	r8, r0
   140c4:	b	14114 <__assert_fail@plt+0x2bdc>
   140c8:	ldr	r3, [r5, #-12]
   140cc:	tst	r3, #4
   140d0:	bne	140e0 <__assert_fail@plt+0x2ba8>
   140d4:	add	r9, r9, #1
   140d8:	str	r9, [fp, #4]
   140dc:	ldr	r3, [r5, #-12]
   140e0:	tst	r3, #8
   140e4:	bne	14110 <__assert_fail@plt+0x2bd8>
   140e8:	ldr	r6, [r5, #-20]	; 0xffffffec
   140ec:	sub	r3, r6, #1
   140f0:	cmp	r3, #254	; 0xfe
   140f4:	bhi	14110 <__assert_fail@plt+0x2bd8>
   140f8:	bl	11394 <__ctype_b_loc@plt>
   140fc:	ldr	r3, [r0]
   14100:	lsl	r6, r6, #1
   14104:	ldrh	r3, [r3, r6]
   14108:	tst	r3, #16384	; 0x4000
   1410c:	addne	r8, r8, #1
   14110:	add	r5, r5, #24
   14114:	ldr	r3, [r5, #-20]	; 0xffffffec
   14118:	cmp	r3, #0
   1411c:	bne	140c8 <__assert_fail@plt+0x2b90>
   14120:	ldr	r3, [r5, #-24]	; 0xffffffe8
   14124:	cmp	r3, #0
   14128:	bne	140c8 <__assert_fail@plt+0x2b90>
   1412c:	ldr	r3, [r5, #-8]
   14130:	cmp	r3, #0
   14134:	bne	140c8 <__assert_fail@plt+0x2b90>
   14138:	ldr	sl, [r5, #-4]
   1413c:	cmp	sl, #0
   14140:	bne	140c8 <__assert_fail@plt+0x2b90>
   14144:	rsb	r9, r9, r9, lsl #3
   14148:	lsl	r0, r9, #2
   1414c:	bl	1ab78 <argp_parse@@Base+0x2454>
   14150:	str	r0, [fp]
   14154:	add	r0, r8, #1
   14158:	bl	1ab78 <argp_parse@@Base+0x2454>
   1415c:	ldr	r5, [fp]
   14160:	mov	r7, r0
   14164:	str	r0, [fp, #8]
   14168:	cmp	r5, #0
   1416c:	cmpne	r0, #0
   14170:	beq	146a0 <__assert_fail@plt+0x3168>
   14174:	ldr	r2, [fp, #4]
   14178:	movw	r3, #37449	; 0x9249
   1417c:	movt	r3, #2340	; 0x924
   14180:	cmp	r2, r3
   14184:	bhi	146c0 <__assert_fail@plt+0x3188>
   14188:	mov	r6, r0
   1418c:	mov	r8, sl
   14190:	ldr	r3, [r4, #4]
   14194:	mov	r0, sl
   14198:	add	r5, r5, #28
   1419c:	str	fp, [sp, #12]
   141a0:	ldr	sl, [sp, #8]
   141a4:	mov	fp, r7
   141a8:	cmp	r3, #0
   141ac:	ldr	r7, [r4, #20]
   141b0:	bne	141c0 <__assert_fail@plt+0x2c88>
   141b4:	ldr	ip, [r4]
   141b8:	cmp	ip, #0
   141bc:	beq	142a0 <__assert_fail@plt+0x2d68>
   141c0:	cmp	r7, #0
   141c4:	str	r4, [r5, #-28]	; 0xffffffe4
   141c8:	str	r8, [r5, #-24]	; 0xffffffe8
   141cc:	str	r6, [r5, #-20]	; 0xffffffec
   141d0:	bne	141e4 <__assert_fail@plt+0x2cac>
   141d4:	ldr	r2, [r4]
   141d8:	orrs	r3, r2, r3
   141dc:	movne	r7, r0
   141e0:	beq	142c0 <__assert_fail@plt+0x2d88>
   141e4:	ldr	r2, [sp]
   141e8:	mov	r3, #0
   141ec:	str	r7, [r5, #-16]
   141f0:	str	sl, [r5, #-12]
   141f4:	str	r2, [r5, #-8]
   141f8:	add	r3, r3, #1
   141fc:	str	r3, [r5, #-24]	; 0xffffffe8
   14200:	ldr	r3, [r4, #12]
   14204:	tst	r3, #8
   14208:	bne	14270 <__assert_fail@plt+0x2d38>
   1420c:	ldr	r9, [r4, #4]
   14210:	sub	r3, r9, #1
   14214:	cmp	r3, #254	; 0xfe
   14218:	bhi	14270 <__assert_fail@plt+0x2d38>
   1421c:	bl	11394 <__ctype_b_loc@plt>
   14220:	ldr	r0, [r0]
   14224:	lsl	r3, r9, #1
   14228:	ldrh	r3, [r0, r3]
   1422c:	tst	r3, #16384	; 0x4000
   14230:	beq	14270 <__assert_fail@plt+0x2d38>
   14234:	cmp	fp, r6
   14238:	uxtb	r9, r9
   1423c:	bcs	1426c <__assert_fail@plt+0x2d34>
   14240:	ldrb	r3, [fp]
   14244:	cmp	r3, r9
   14248:	beq	14270 <__assert_fail@plt+0x2d38>
   1424c:	mov	r3, fp
   14250:	sub	r0, r6, #1
   14254:	b	14264 <__assert_fail@plt+0x2d2c>
   14258:	ldrb	ip, [r3, #1]!
   1425c:	cmp	ip, r9
   14260:	beq	14270 <__assert_fail@plt+0x2d38>
   14264:	cmp	r0, r3
   14268:	bne	14258 <__assert_fail@plt+0x2d20>
   1426c:	strb	r9, [r6], #1
   14270:	add	r4, r4, #24
   14274:	ldr	r0, [r4, #4]
   14278:	cmp	r0, #0
   1427c:	bne	1428c <__assert_fail@plt+0x2d54>
   14280:	ldr	r3, [r4]
   14284:	cmp	r3, #0
   14288:	beq	142c8 <__assert_fail@plt+0x2d90>
   1428c:	ldr	r3, [r4, #12]
   14290:	tst	r3, #4
   14294:	beq	142ec <__assert_fail@plt+0x2db4>
   14298:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1429c:	b	141f8 <__assert_fail@plt+0x2cc0>
   142a0:	ldr	ip, [r4, #16]
   142a4:	cmp	ip, #0
   142a8:	beq	142f4 <__assert_fail@plt+0x2dbc>
   142ac:	cmp	r7, #0
   142b0:	str	r4, [r5, #-28]	; 0xffffffe4
   142b4:	str	r3, [r5, #-24]	; 0xffffffe8
   142b8:	str	r6, [r5, #-20]	; 0xffffffec
   142bc:	bne	141e4 <__assert_fail@plt+0x2cac>
   142c0:	add	r7, r0, #1
   142c4:	b	141e4 <__assert_fail@plt+0x2cac>
   142c8:	ldr	r3, [r4, #16]
   142cc:	cmp	r3, #0
   142d0:	bne	1428c <__assert_fail@plt+0x2d54>
   142d4:	ldr	r3, [r4, #20]
   142d8:	cmp	r3, #0
   142dc:	bne	1428c <__assert_fail@plt+0x2d54>
   142e0:	add	r5, r5, #28
   142e4:	mov	r0, r7
   142e8:	b	141a8 <__assert_fail@plt+0x2c70>
   142ec:	mov	r3, r0
   142f0:	b	142e0 <__assert_fail@plt+0x2da8>
   142f4:	cmp	r7, #0
   142f8:	bne	14440 <__assert_fail@plt+0x2f08>
   142fc:	ldr	fp, [sp, #12]
   14300:	strb	r3, [r6]
   14304:	ldr	sl, [sp, #4]
   14308:	cmp	sl, #0
   1430c:	beq	14420 <__assert_fail@plt+0x2ee8>
   14310:	ldr	r0, [sl]
   14314:	cmp	r0, #0
   14318:	beq	14420 <__assert_fail@plt+0x2ee8>
   1431c:	movw	r3, #37449	; 0x9249
   14320:	movt	r3, #2340	; 0x924
   14324:	str	r3, [sp, #28]
   14328:	add	r3, fp, #12
   1432c:	str	r3, [sp, #44]	; 0x2c
   14330:	ldr	r6, [sl, #8]
   14334:	ldr	r5, [sl, #12]
   14338:	cmp	r5, #0
   1433c:	bne	14348 <__assert_fail@plt+0x2e10>
   14340:	cmp	r6, #0
   14344:	beq	14688 <__assert_fail@plt+0x3150>
   14348:	ldr	r3, [sp]
   1434c:	mov	r0, #28
   14350:	ldr	r4, [r3, #16]
   14354:	bl	1ab78 <argp_parse@@Base+0x2454>
   14358:	subs	r1, r0, #0
   1435c:	beq	14450 <__assert_fail@plt+0x2f18>
   14360:	ldr	r2, [sp]
   14364:	sub	r4, sl, r4
   14368:	asr	r4, r4, #4
   1436c:	str	r6, [r1]
   14370:	ldr	r3, [sp, #8]
   14374:	strd	r4, [r1, #4]
   14378:	cmp	r3, #0
   1437c:	str	r3, [r1, #12]
   14380:	ldrne	r3, [r3, #20]
   14384:	str	r2, [r1, #16]
   14388:	ldr	r2, [fp, #12]
   1438c:	ldr	r0, [sl]
   14390:	addne	r3, r3, #1
   14394:	str	r1, [fp, #12]
   14398:	str	r3, [r1, #20]
   1439c:	str	r2, [r1, #24]
   143a0:	bl	14060 <__assert_fail@plt+0x2b28>
   143a4:	ldr	r3, [fp, #12]
   143a8:	mov	r4, r0
   143ac:	cmp	r3, #0
   143b0:	bne	143bc <__assert_fail@plt+0x2e84>
   143b4:	b	14690 <__assert_fail@plt+0x3158>
   143b8:	mov	r3, r2
   143bc:	ldr	r2, [r3, #24]
   143c0:	cmp	r2, #0
   143c4:	bne	143b8 <__assert_fail@plt+0x2e80>
   143c8:	add	r3, r3, #24
   143cc:	ldr	r2, [r4, #4]
   143d0:	ldr	r1, [r4, #12]
   143d4:	cmp	r2, #0
   143d8:	str	r1, [r3]
   143dc:	mov	r3, #0
   143e0:	str	r3, [r4, #12]
   143e4:	beq	1440c <__assert_fail@plt+0x2ed4>
   143e8:	ldr	r3, [fp, #4]
   143ec:	cmp	r3, #0
   143f0:	bne	14458 <__assert_fail@plt+0x2f20>
   143f4:	ldr	r1, [r4]
   143f8:	str	r2, [fp, #4]
   143fc:	ldr	r2, [r4, #8]
   14400:	str	r1, [fp]
   14404:	str	r2, [fp, #8]
   14408:	str	r3, [r4, #4]
   1440c:	mov	r0, r4
   14410:	bl	1975c <argp_parse@@Base+0x1038>
   14414:	ldr	r0, [sl, #16]!
   14418:	cmp	r0, #0
   1441c:	bne	14330 <__assert_fail@plt+0x2df8>
   14420:	mov	r0, fp
   14424:	add	sp, sp, #52	; 0x34
   14428:	ldrd	r4, [sp]
   1442c:	ldrd	r6, [sp, #8]
   14430:	ldrd	r8, [sp, #16]
   14434:	ldrd	sl, [sp, #24]
   14438:	add	sp, sp, #32
   1443c:	pop	{pc}		; (ldr pc, [sp], #4)
   14440:	str	r4, [r5, #-28]	; 0xffffffe4
   14444:	str	r3, [r5, #-24]	; 0xffffffe8
   14448:	str	r6, [r5, #-20]	; 0xffffffec
   1444c:	b	141e4 <__assert_fail@plt+0x2cac>
   14450:	ldr	r0, [sl]
   14454:	b	143a0 <__assert_fail@plt+0x2e68>
   14458:	add	r3, r2, r3
   1445c:	rsb	r0, r3, r3, lsl #3
   14460:	str	r3, [sp, #12]
   14464:	lsl	r0, r0, #2
   14468:	bl	1ab78 <argp_parse@@Base+0x2454>
   1446c:	mov	r5, r0
   14470:	ldr	r0, [fp, #8]
   14474:	str	r5, [sp, #4]
   14478:	bl	113b8 <strlen@plt>
   1447c:	mov	r8, r0
   14480:	ldr	r0, [r4, #8]
   14484:	bl	113b8 <strlen@plt>
   14488:	add	r0, r8, r0
   1448c:	add	r0, r0, #1
   14490:	bl	1ab78 <argp_parse@@Base+0x2454>
   14494:	cmp	r5, #0
   14498:	cmpne	r0, #0
   1449c:	mov	r9, r0
   144a0:	beq	146e0 <__assert_fail@plt+0x31a8>
   144a4:	ldr	r3, [sp, #12]
   144a8:	ldr	r2, [sp, #28]
   144ac:	cmp	r3, r2
   144b0:	bhi	1471c <__assert_fail@plt+0x31e4>
   144b4:	ldm	fp, {r1, r6}
   144b8:	ldr	r0, [sp, #4]
   144bc:	rsb	r5, r6, r6, lsl #3
   144c0:	str	r1, [sp, #16]
   144c4:	lsl	r5, r5, #2
   144c8:	mov	r2, r5
   144cc:	bl	11388 <mempcpy@plt>
   144d0:	ldm	r4, {r1, r3}
   144d4:	rsb	r2, r3, r3, lsl #3
   144d8:	str	r3, [sp, #20]
   144dc:	lsl	r2, r2, #2
   144e0:	bl	11268 <memcpy@plt>
   144e4:	ldr	r7, [fp, #8]
   144e8:	mov	r2, r8
   144ec:	mov	r0, r9
   144f0:	mov	r1, r7
   144f4:	bl	11268 <memcpy@plt>
   144f8:	cmp	r6, #0
   144fc:	ldr	r3, [sp, #20]
   14500:	beq	14698 <__assert_fail@plt+0x3160>
   14504:	ldr	r1, [sp, #4]
   14508:	subs	r6, r6, #1
   1450c:	add	r1, r1, #28
   14510:	ldr	r2, [r1, #-20]	; 0xffffffec
   14514:	sub	r2, r2, r7
   14518:	add	r2, r9, r2
   1451c:	str	r2, [r1, #-20]	; 0xffffffec
   14520:	bne	14508 <__assert_fail@plt+0x2fd0>
   14524:	ldr	r2, [sp, #4]
   14528:	add	r5, r2, r5
   1452c:	add	r2, r9, r8
   14530:	cmp	r3, #0
   14534:	ldr	r1, [r4, #8]
   14538:	str	r2, [sp, #20]
   1453c:	beq	145dc <__assert_fail@plt+0x30a4>
   14540:	sub	r0, r2, #1
   14544:	add	r5, r5, #28
   14548:	mov	r7, r2
   1454c:	str	r0, [sp, #24]
   14550:	strd	sl, [sp, #36]	; 0x24
   14554:	mov	sl, r1
   14558:	mov	fp, r3
   1455c:	str	r4, [sp, #32]
   14560:	str	r7, [r5, #-20]	; 0xffffffec
   14564:	ldr	r6, [r5, #-24]	; 0xffffffe8
   14568:	ldr	r8, [r5, #-28]	; 0xffffffe4
   1456c:	cmp	r6, #0
   14570:	beq	145c4 <__assert_fail@plt+0x308c>
   14574:	ldr	r3, [r8, #12]
   14578:	tst	r3, #8
   1457c:	bne	145b8 <__assert_fail@plt+0x3080>
   14580:	ldr	r4, [r8, #4]
   14584:	sub	r3, r4, #1
   14588:	cmp	r3, #254	; 0xfe
   1458c:	bhi	145b8 <__assert_fail@plt+0x3080>
   14590:	bl	11394 <__ctype_b_loc@plt>
   14594:	ldr	r1, [r0]
   14598:	lsl	r2, r4, #1
   1459c:	ldrb	r3, [sl]
   145a0:	ldrh	r2, [r1, r2]
   145a4:	sub	r4, r3, r4
   145a8:	clz	r4, r4
   145ac:	lsr	r4, r4, #5
   145b0:	ands	r2, r4, r2, lsr #14
   145b4:	bne	14644 <__assert_fail@plt+0x310c>
   145b8:	subs	r6, r6, #1
   145bc:	add	r8, r8, #24
   145c0:	bne	14574 <__assert_fail@plt+0x303c>
   145c4:	subs	fp, fp, #1
   145c8:	add	r5, r5, #28
   145cc:	bne	14560 <__assert_fail@plt+0x3028>
   145d0:	add	r4, sp, #32
   145d4:	mov	r2, r7
   145d8:	ldm	r4, {r4, sl, fp}
   145dc:	mov	r3, #0
   145e0:	strb	r3, [r2]
   145e4:	ldr	r0, [sp, #16]
   145e8:	bl	1975c <argp_parse@@Base+0x1038>
   145ec:	ldr	r0, [fp, #8]
   145f0:	bl	1975c <argp_parse@@Base+0x1038>
   145f4:	ldr	r3, [sp, #4]
   145f8:	ldr	r0, [r4, #12]
   145fc:	str	r3, [fp]
   14600:	ldr	r3, [sp, #12]
   14604:	cmp	r0, #0
   14608:	str	r3, [fp, #4]
   1460c:	str	r9, [fp, #8]
   14610:	beq	14624 <__assert_fail@plt+0x30ec>
   14614:	ldr	r5, [r0, #24]
   14618:	bl	1975c <argp_parse@@Base+0x1038>
   1461c:	subs	r0, r5, #0
   14620:	bne	14614 <__assert_fail@plt+0x30dc>
   14624:	ldr	r3, [r4, #4]
   14628:	cmp	r3, #0
   1462c:	beq	1440c <__assert_fail@plt+0x2ed4>
   14630:	ldr	r0, [r4]
   14634:	bl	1975c <argp_parse@@Base+0x1038>
   14638:	ldr	r0, [r4, #8]
   1463c:	bl	1975c <argp_parse@@Base+0x1038>
   14640:	b	1440c <__assert_fail@plt+0x2ed4>
   14644:	ldr	r2, [sp, #20]
   14648:	cmp	r9, r2
   1464c:	bcs	1467c <__assert_fail@plt+0x3144>
   14650:	ldrb	r2, [r9]
   14654:	cmp	r2, r3
   14658:	beq	14680 <__assert_fail@plt+0x3148>
   1465c:	mov	r2, r9
   14660:	ldr	r0, [sp, #24]
   14664:	b	14674 <__assert_fail@plt+0x313c>
   14668:	ldrb	r1, [r2, #1]!
   1466c:	cmp	r1, r3
   14670:	beq	14680 <__assert_fail@plt+0x3148>
   14674:	cmp	r0, r2
   14678:	bne	14668 <__assert_fail@plt+0x3130>
   1467c:	strb	r3, [r7], #1
   14680:	add	sl, sl, #1
   14684:	b	145b8 <__assert_fail@plt+0x3080>
   14688:	ldr	r1, [sp, #8]
   1468c:	b	143a0 <__assert_fail@plt+0x2e68>
   14690:	ldr	r3, [sp, #44]	; 0x2c
   14694:	b	143cc <__assert_fail@plt+0x2e94>
   14698:	ldr	r5, [sp, #4]
   1469c:	b	1452c <__assert_fail@plt+0x2ff4>
   146a0:	movw	r3, #52996	; 0xcf04
   146a4:	movt	r3, #1
   146a8:	movw	r1, #53164	; 0xcfac
   146ac:	movt	r1, #1
   146b0:	movw	r0, #53196	; 0xcfcc
   146b4:	movt	r0, #1
   146b8:	movw	r2, #474	; 0x1da
   146bc:	bl	11538 <__assert_fail@plt>
   146c0:	movw	r3, #52996	; 0xcf04
   146c4:	movt	r3, #1
   146c8:	movw	r1, #53164	; 0xcfac
   146cc:	movt	r1, #1
   146d0:	movw	r0, #53232	; 0xcff0
   146d4:	movt	r0, #1
   146d8:	mov	r2, #476	; 0x1dc
   146dc:	bl	11538 <__assert_fail@plt>
   146e0:	movw	r1, #53164	; 0xcfac
   146e4:	movt	r1, #1
   146e8:	ldr	r3, [pc, #104]	; 14758 <__assert_fail@plt+0x3220>
   146ec:	movw	r0, #53292	; 0xd02c
   146f0:	movt	r0, #1
   146f4:	movw	r2, #970	; 0x3ca
   146f8:	bl	11538 <__assert_fail@plt>
   146fc:	movw	r3, #52996	; 0xcf04
   14700:	movt	r3, #1
   14704:	movw	r1, #53164	; 0xcfac
   14708:	movt	r1, #1
   1470c:	movw	r0, #53176	; 0xcfb8
   14710:	movt	r0, #1
   14714:	movw	r2, #450	; 0x1c2
   14718:	bl	11538 <__assert_fail@plt>
   1471c:	movw	r1, #53164	; 0xcfac
   14720:	movt	r1, #1
   14724:	ldr	r3, [pc, #44]	; 14758 <__assert_fail@plt+0x3220>
   14728:	movw	r0, #53320	; 0xd048
   1472c:	movt	r0, #1
   14730:	mov	r2, #972	; 0x3cc
   14734:	bl	11538 <__assert_fail@plt>
   14738:	movw	r3, #52996	; 0xcf04
   1473c:	movt	r3, #1
   14740:	movw	r1, #53164	; 0xcfac
   14744:	movt	r1, #1
   14748:	movw	r0, #53180	; 0xcfbc
   1474c:	movt	r0, #1
   14750:	mov	r2, #460	; 0x1cc
   14754:	bl	11538 <__assert_fail@plt>
   14758:	andeq	ip, r1, r0, lsl pc
   1475c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14760:	mov	r4, r3
   14764:	ldr	r3, [r0, #20]
   14768:	cmp	r3, #0
   1476c:	ldr	r3, [r0, #16]
   14770:	strd	r6, [sp, #8]
   14774:	strd	r8, [sp, #16]
   14778:	mov	r8, r2
   1477c:	ldr	r2, [r2]
   14780:	strd	sl, [sp, #24]
   14784:	ldr	r7, [r0, #8]
   14788:	str	lr, [sp, #32]
   1478c:	sub	sp, sp, #28
   14790:	ldr	r5, [sp, #64]	; 0x40
   14794:	str	r3, [sp, #8]
   14798:	moveq	r9, r7
   1479c:	str	r7, [sp, #12]
   147a0:	str	r2, [sp, #16]
   147a4:	str	r1, [sp, #20]
   147a8:	beq	147d0 <__assert_fail@plt+0x3298>
   147ac:	mov	r6, r0
   147b0:	bl	195dc <argp_parse@@Base+0xeb8>
   147b4:	mov	r2, r0
   147b8:	mov	r1, r7
   147bc:	ldr	r3, [r6, #20]
   147c0:	mov	r0, #6
   147c4:	movt	r0, #512	; 0x200
   147c8:	blx	r3
   147cc:	mov	r9, r0
   147d0:	cmp	r9, #0
   147d4:	beq	149c4 <__assert_fail@plt+0x348c>
   147d8:	mov	r1, #10
   147dc:	mov	r0, r9
   147e0:	bl	1122c <strchrnul@plt>
   147e4:	ldrb	r3, [r0]
   147e8:	mov	r6, r0
   147ec:	cmp	r3, #0
   147f0:	moveq	fp, r3
   147f4:	moveq	r7, r9
   147f8:	beq	14844 <__assert_fail@plt+0x330c>
   147fc:	ldr	r3, [sp, #16]
   14800:	ldrb	sl, [r3]
   14804:	cmp	sl, #0
   14808:	beq	14a48 <__assert_fail@plt+0x3510>
   1480c:	mov	fp, #0
   14810:	add	r7, r0, #1
   14814:	add	fp, fp, #1
   14818:	mov	r0, r7
   1481c:	mov	r1, #10
   14820:	bl	1122c <strchrnul@plt>
   14824:	cmp	fp, sl
   14828:	bne	14810 <__assert_fail@plt+0x32d8>
   1482c:	mov	r6, r0
   14830:	ldr	r3, [r8]
   14834:	mov	r2, #1
   14838:	mov	fp, r2
   1483c:	add	r3, r3, r2
   14840:	str	r3, [r8]
   14844:	ldr	ip, [r5, #16]
   14848:	add	sl, r6, #1
   1484c:	sub	sl, sl, r7
   14850:	ldr	r1, [r5, #24]
   14854:	ldr	r3, [r5, #28]
   14858:	sub	r1, r3, r1
   1485c:	mov	r0, r3
   14860:	cmp	r1, ip
   14864:	bhi	149b0 <__assert_fail@plt+0x3478>
   14868:	ldr	ip, [r5, #8]
   1486c:	ldr	r1, [r5, #20]
   14870:	cmp	r1, #0
   14874:	addge	sl, sl, r1
   14878:	ldr	r1, [r5, #32]
   1487c:	cmp	sl, ip
   14880:	bcc	148a0 <__assert_fail@plt+0x3368>
   14884:	cmp	r3, r1
   14888:	bcs	14a00 <__assert_fail@plt+0x34c8>
   1488c:	add	r0, r3, #1
   14890:	mov	r1, #10
   14894:	str	r0, [r5, #28]
   14898:	strb	r1, [r3]
   1489c:	b	148b8 <__assert_fail@plt+0x3380>
   148a0:	cmp	r3, r1
   148a4:	bcs	14a2c <__assert_fail@plt+0x34f4>
   148a8:	add	r1, r0, #1
   148ac:	mov	r3, #32
   148b0:	str	r1, [r5, #28]
   148b4:	strb	r3, [r0]
   148b8:	ldrd	r0, [r5, #28]
   148bc:	sub	sl, r6, r7
   148c0:	add	r3, r0, sl
   148c4:	cmp	r1, r3
   148c8:	bcs	148e4 <__assert_fail@plt+0x33ac>
   148cc:	mov	r1, sl
   148d0:	mov	r0, r5
   148d4:	bl	1b334 <argp_parse@@Base+0x2c10>
   148d8:	cmp	r0, #0
   148dc:	beq	148fc <__assert_fail@plt+0x33c4>
   148e0:	ldr	r0, [r5, #28]
   148e4:	mov	r2, sl
   148e8:	mov	r1, r7
   148ec:	bl	11268 <memcpy@plt>
   148f0:	ldr	r3, [r5, #28]
   148f4:	add	sl, r3, sl
   148f8:	str	sl, [r5, #28]
   148fc:	ldr	r3, [sp, #12]
   14900:	cmp	r3, r9
   14904:	beq	14910 <__assert_fail@plt+0x33d8>
   14908:	mov	r0, r9
   1490c:	bl	1975c <argp_parse@@Base+0x1038>
   14910:	ldr	r3, [sp, #8]
   14914:	cmp	r3, #0
   14918:	beq	14960 <__assert_fail@plt+0x3428>
   1491c:	ldr	r2, [r3]
   14920:	cmp	r2, #0
   14924:	beq	14960 <__assert_fail@plt+0x3428>
   14928:	mov	r3, r4
   1492c:	ldr	r7, [sp, #8]
   14930:	ldr	r4, [sp, #20]
   14934:	mov	r0, r2
   14938:	mov	r1, r4
   1493c:	str	r5, [sp]
   14940:	mov	r2, r8
   14944:	bl	1475c <__assert_fail@plt+0x3224>
   14948:	ldr	r2, [r7, #16]!
   1494c:	clz	r3, r0
   14950:	lsr	r3, r3, #5
   14954:	cmp	r2, #0
   14958:	bne	14934 <__assert_fail@plt+0x33fc>
   1495c:	mov	r4, r3
   14960:	cmp	r4, #0
   14964:	mov	r3, fp
   14968:	moveq	r3, #0
   1496c:	cmp	r3, #0
   14970:	beq	149e4 <__assert_fail@plt+0x34ac>
   14974:	ldrb	r3, [r6]
   14978:	ldr	r2, [sp, #16]
   1497c:	cmp	r3, #0
   14980:	ldrb	r0, [r2]
   14984:	beq	149f0 <__assert_fail@plt+0x34b8>
   14988:	add	r4, r0, #1
   1498c:	mov	r0, #1
   14990:	strb	r4, [r2]
   14994:	add	sp, sp, #28
   14998:	ldrd	r4, [sp]
   1499c:	ldrd	r6, [sp, #8]
   149a0:	ldrd	r8, [sp, #16]
   149a4:	ldrd	sl, [sp, #24]
   149a8:	add	sp, sp, #32
   149ac:	pop	{pc}		; (ldr pc, [sp], #4)
   149b0:	mov	r0, r5
   149b4:	bl	1aca4 <argp_parse@@Base+0x2580>
   149b8:	ldr	r3, [r5, #28]
   149bc:	mov	r0, r3
   149c0:	b	14868 <__assert_fail@plt+0x3330>
   149c4:	ldr	r3, [sp, #8]
   149c8:	cmp	r3, #0
   149cc:	beq	149e4 <__assert_fail@plt+0x34ac>
   149d0:	ldr	r2, [r3]
   149d4:	cmp	r2, #0
   149d8:	movne	r6, r9
   149dc:	movne	fp, r6
   149e0:	bne	14928 <__assert_fail@plt+0x33f0>
   149e4:	clz	r0, r4
   149e8:	lsr	r0, r0, #5
   149ec:	b	14994 <__assert_fail@plt+0x345c>
   149f0:	cmp	r0, #0
   149f4:	movne	r0, r3
   149f8:	strbne	r3, [r2]
   149fc:	b	14994 <__assert_fail@plt+0x345c>
   14a00:	mov	r1, #1
   14a04:	mov	r0, r5
   14a08:	bl	1b334 <argp_parse@@Base+0x2c10>
   14a0c:	cmp	r0, #0
   14a10:	beq	148b8 <__assert_fail@plt+0x3380>
   14a14:	ldr	r3, [r5, #28]
   14a18:	mov	r1, #10
   14a1c:	add	r0, r3, #1
   14a20:	str	r0, [r5, #28]
   14a24:	strb	r1, [r3]
   14a28:	b	148b8 <__assert_fail@plt+0x3380>
   14a2c:	mov	r1, #1
   14a30:	mov	r0, r5
   14a34:	bl	1b334 <argp_parse@@Base+0x2c10>
   14a38:	cmp	r0, #0
   14a3c:	beq	148b8 <__assert_fail@plt+0x3380>
   14a40:	ldr	r0, [r5, #28]
   14a44:	b	148a8 <__assert_fail@plt+0x3370>
   14a48:	mov	r7, r9
   14a4c:	b	14830 <__assert_fail@plt+0x32f8>
   14a50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14a54:	subs	r4, r1, #0
   14a58:	strd	r6, [sp, #8]
   14a5c:	mov	r7, r0
   14a60:	mov	r6, r2
   14a64:	strd	r8, [sp, #16]
   14a68:	strd	sl, [sp, #24]
   14a6c:	str	lr, [sp, #32]
   14a70:	sub	sp, sp, #12
   14a74:	beq	14ab0 <__assert_fail@plt+0x3578>
   14a78:	ldr	r3, [r4, #20]
   14a7c:	cmp	r3, #0
   14a80:	beq	14ab0 <__assert_fail@plt+0x3578>
   14a84:	mov	r0, r4
   14a88:	ldr	r1, [r2, #16]
   14a8c:	bl	195dc <argp_parse@@Base+0xeb8>
   14a90:	mov	r2, r0
   14a94:	mov	r1, r7
   14a98:	ldr	r3, [r4, #20]
   14a9c:	mov	r0, #3
   14aa0:	movt	r0, #512	; 0x200
   14aa4:	blx	r3
   14aa8:	mov	r9, r0
   14aac:	b	14ab4 <__assert_fail@plt+0x357c>
   14ab0:	mov	r9, r7
   14ab4:	cmp	r9, #0
   14ab8:	beq	14ad4 <__assert_fail@plt+0x359c>
   14abc:	ldrb	r2, [r9]
   14ac0:	ldr	r3, [r6, #8]
   14ac4:	cmp	r2, #0
   14ac8:	bne	14b00 <__assert_fail@plt+0x35c8>
   14acc:	mov	r2, #1
   14ad0:	str	r2, [r3, #4]
   14ad4:	cmp	r7, r9
   14ad8:	beq	14c4c <__assert_fail@plt+0x3714>
   14adc:	mov	r0, r9
   14ae0:	add	sp, sp, #12
   14ae4:	ldrd	r4, [sp]
   14ae8:	ldrd	r6, [sp, #8]
   14aec:	ldrd	r8, [sp, #16]
   14af0:	ldrd	sl, [sp, #24]
   14af4:	ldr	lr, [sp, #32]
   14af8:	add	sp, sp, #36	; 0x24
   14afc:	b	1975c <argp_parse@@Base+0x1038>
   14b00:	ldr	r3, [r3]
   14b04:	ldr	r4, [r6, #4]
   14b08:	cmp	r3, #0
   14b0c:	ldr	r3, [r4, #28]
   14b10:	beq	14b50 <__assert_fail@plt+0x3618>
   14b14:	ldr	r2, [r4, #32]
   14b18:	cmp	r2, r3
   14b1c:	bhi	14b38 <__assert_fail@plt+0x3600>
   14b20:	mov	r1, #1
   14b24:	mov	r0, r4
   14b28:	bl	1b334 <argp_parse@@Base+0x2c10>
   14b2c:	cmp	r0, #0
   14b30:	ldrne	r3, [r4, #28]
   14b34:	beq	14b48 <__assert_fail@plt+0x3610>
   14b38:	add	r1, r3, #1
   14b3c:	mov	r2, #10
   14b40:	str	r1, [r4, #28]
   14b44:	strb	r2, [r3]
   14b48:	ldr	r4, [r6, #4]
   14b4c:	ldr	r3, [r4, #28]
   14b50:	movw	r8, #58376	; 0xe408
   14b54:	movt	r8, #2
   14b58:	ldr	r2, [r4, #16]
   14b5c:	ldr	r1, [r4, #24]
   14b60:	ldr	r5, [r8, #24]
   14b64:	sub	r3, r3, r1
   14b68:	cmp	r3, r2
   14b6c:	bhi	14d30 <__assert_fail@plt+0x37f8>
   14b70:	ldr	r3, [r4, #20]
   14b74:	cmp	r3, #0
   14b78:	subge	r5, r5, r3
   14b7c:	cmp	r5, #0
   14b80:	sub	r5, r5, #1
   14b84:	ble	14bcc <__assert_fail@plt+0x3694>
   14b88:	mov	sl, #32
   14b8c:	ldr	r3, [r4, #28]
   14b90:	mov	r1, #1
   14b94:	mov	r0, r4
   14b98:	sub	r5, r5, #1
   14b9c:	ldr	r2, [r4, #32]
   14ba0:	cmp	r3, r2
   14ba4:	bcc	14bb8 <__assert_fail@plt+0x3680>
   14ba8:	bl	1b334 <argp_parse@@Base+0x2c10>
   14bac:	cmp	r0, #0
   14bb0:	beq	14bc4 <__assert_fail@plt+0x368c>
   14bb4:	ldr	r3, [r4, #28]
   14bb8:	add	r2, r3, #1
   14bbc:	str	r2, [r4, #28]
   14bc0:	strb	sl, [r3]
   14bc4:	cmn	r5, #1
   14bc8:	bne	14b8c <__assert_fail@plt+0x3654>
   14bcc:	ldr	r4, [r6, #4]
   14bd0:	ldr	sl, [r8, #24]
   14bd4:	ldr	r1, [r4, #16]
   14bd8:	ldr	r3, [r4, #24]
   14bdc:	ldr	r5, [r4, #28]
   14be0:	sub	r3, r5, r3
   14be4:	cmp	r3, r1
   14be8:	movls	fp, r4
   14bec:	strls	sl, [r4, #4]
   14bf0:	bhi	14ce8 <__assert_fail@plt+0x37b0>
   14bf4:	mov	r0, r9
   14bf8:	str	sl, [fp, #12]
   14bfc:	bl	113b8 <strlen@plt>
   14c00:	subs	r8, r0, #0
   14c04:	bne	14c98 <__assert_fail@plt+0x3760>
   14c08:	ldr	r2, [r4, #16]
   14c0c:	ldr	r3, [r4, #24]
   14c10:	sub	r3, r5, r3
   14c14:	cmp	r3, r2
   14c18:	movls	r8, r4
   14c1c:	bhi	14c84 <__assert_fail@plt+0x374c>
   14c20:	ldr	r3, [r8, #32]
   14c24:	mov	r2, #0
   14c28:	str	r2, [r4, #4]
   14c2c:	cmp	r3, r5
   14c30:	bls	14c68 <__assert_fail@plt+0x3730>
   14c34:	add	r2, r5, #1
   14c38:	mov	r3, #10
   14c3c:	str	r2, [r8, #28]
   14c40:	strb	r3, [r5]
   14c44:	ldr	r3, [r6, #8]
   14c48:	b	14acc <__assert_fail@plt+0x3594>
   14c4c:	add	sp, sp, #12
   14c50:	ldrd	r4, [sp]
   14c54:	ldrd	r6, [sp, #8]
   14c58:	ldrd	r8, [sp, #16]
   14c5c:	ldrd	sl, [sp, #24]
   14c60:	add	sp, sp, #32
   14c64:	pop	{pc}		; (ldr pc, [sp], #4)
   14c68:	mov	r1, #1
   14c6c:	mov	r0, r8
   14c70:	bl	1b334 <argp_parse@@Base+0x2c10>
   14c74:	cmp	r0, #0
   14c78:	ldrne	r5, [r8, #28]
   14c7c:	bne	14c34 <__assert_fail@plt+0x36fc>
   14c80:	b	14c44 <__assert_fail@plt+0x370c>
   14c84:	mov	r0, r4
   14c88:	bl	1aca4 <argp_parse@@Base+0x2580>
   14c8c:	ldr	r8, [r6, #4]
   14c90:	ldr	r5, [r8, #28]
   14c94:	b	14c20 <__assert_fail@plt+0x36e8>
   14c98:	ldr	r2, [r4, #32]
   14c9c:	add	r3, r5, r8
   14ca0:	cmp	r2, r3
   14ca4:	bcs	14cc0 <__assert_fail@plt+0x3788>
   14ca8:	mov	r1, r8
   14cac:	mov	r0, r4
   14cb0:	bl	1b334 <argp_parse@@Base+0x2c10>
   14cb4:	cmp	r0, #0
   14cb8:	beq	14cdc <__assert_fail@plt+0x37a4>
   14cbc:	ldr	r5, [r4, #28]
   14cc0:	mov	r2, r8
   14cc4:	mov	r0, r5
   14cc8:	mov	r1, r9
   14ccc:	bl	11268 <memcpy@plt>
   14cd0:	ldr	r3, [r4, #28]
   14cd4:	add	r8, r3, r8
   14cd8:	str	r8, [r4, #28]
   14cdc:	ldr	r4, [r6, #4]
   14ce0:	ldr	r5, [r4, #28]
   14ce4:	b	14c08 <__assert_fail@plt+0x36d0>
   14ce8:	mov	r0, r4
   14cec:	str	sl, [sp, #4]
   14cf0:	bl	1aca4 <argp_parse@@Base+0x2580>
   14cf4:	ldr	fp, [r6, #4]
   14cf8:	ldr	r2, [sp, #4]
   14cfc:	ldr	sl, [r8, #24]
   14d00:	ldr	r1, [fp, #16]
   14d04:	ldr	r3, [fp, #24]
   14d08:	ldr	r5, [fp, #28]
   14d0c:	str	r2, [r4, #4]
   14d10:	sub	r3, r5, r3
   14d14:	cmp	r3, r1
   14d18:	bls	14d3c <__assert_fail@plt+0x3804>
   14d1c:	mov	r0, fp
   14d20:	bl	1aca4 <argp_parse@@Base+0x2580>
   14d24:	ldr	r4, [r6, #4]
   14d28:	ldr	r5, [r4, #28]
   14d2c:	b	14bf4 <__assert_fail@plt+0x36bc>
   14d30:	mov	r0, r4
   14d34:	bl	1aca4 <argp_parse@@Base+0x2580>
   14d38:	b	14b70 <__assert_fail@plt+0x3638>
   14d3c:	mov	r4, fp
   14d40:	b	14bf4 <__assert_fail@plt+0x36bc>
   14d44:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14d48:	strd	r6, [sp, #8]
   14d4c:	strd	r8, [sp, #16]
   14d50:	strd	sl, [sp, #24]
   14d54:	add	fp, sp, #32
   14d58:	str	lr, [sp, #32]
   14d5c:	sub	sp, sp, #36	; 0x24
   14d60:	ldr	r3, [r0, #4]
   14d64:	cmp	r3, #0
   14d68:	str	r3, [fp, #-40]	; 0xffffffd8
   14d6c:	beq	14f88 <__assert_fail@plt+0x3a50>
   14d70:	mov	r4, r0
   14d74:	ldr	r0, [r0, #8]
   14d78:	str	r4, [fp, #-60]	; 0xffffffc4
   14d7c:	str	r1, [fp, #-48]	; 0xffffffd0
   14d80:	str	r3, [fp, #-44]	; 0xffffffd4
   14d84:	bl	113b8 <strlen@plt>
   14d88:	add	r3, r0, #8
   14d8c:	ldr	r2, [r4]
   14d90:	bic	r3, r3, #7
   14d94:	sub	sp, sp, r3
   14d98:	mov	r3, sp
   14d9c:	str	r3, [fp, #-56]	; 0xffffffc8
   14da0:	str	r3, [fp, #-52]	; 0xffffffcc
   14da4:	add	r3, r2, #28
   14da8:	mov	r9, r3
   14dac:	str	r3, [fp, #-64]	; 0xffffffc0
   14db0:	ldr	r8, [r9, #-28]	; 0xffffffe4
   14db4:	ldr	r5, [r9, #-24]	; 0xffffffe8
   14db8:	ldr	sl, [r9, #-20]	; 0xffffffec
   14dbc:	cmp	r5, #0
   14dc0:	beq	14e14 <__assert_fail@plt+0x38dc>
   14dc4:	mov	r4, r8
   14dc8:	ldr	r6, [r4, #12]
   14dcc:	tst	r6, #8
   14dd0:	bne	14e08 <__assert_fail@plt+0x38d0>
   14dd4:	ldr	r7, [r4, #4]
   14dd8:	sub	r3, r7, #1
   14ddc:	cmp	r3, #254	; 0xfe
   14de0:	bhi	14e08 <__assert_fail@plt+0x38d0>
   14de4:	bl	11394 <__ctype_b_loc@plt>
   14de8:	ldr	r2, [r0]
   14dec:	lsl	r3, r7, #1
   14df0:	ldrh	r3, [r2, r3]
   14df4:	tst	r3, #16384	; 0x4000
   14df8:	beq	14e08 <__assert_fail@plt+0x38d0>
   14dfc:	ldrb	r3, [sl]
   14e00:	cmp	r7, r3
   14e04:	beq	14fa4 <__assert_fail@plt+0x3a6c>
   14e08:	subs	r5, r5, #1
   14e0c:	add	r4, r4, #24
   14e10:	bne	14dc8 <__assert_fail@plt+0x3890>
   14e14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14e18:	add	r9, r9, #28
   14e1c:	subs	r3, r3, #1
   14e20:	str	r3, [fp, #-44]	; 0xffffffd4
   14e24:	bne	14db0 <__assert_fail@plt+0x3878>
   14e28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14e2c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14e30:	cmp	r3, r2
   14e34:	bcc	15174 <__assert_fail@plt+0x3c3c>
   14e38:	ldr	r6, [fp, #-64]	; 0xffffffc0
   14e3c:	movw	r3, #53392	; 0xd090
   14e40:	movt	r3, #1
   14e44:	str	r3, [fp, #-44]	; 0xffffffd4
   14e48:	movw	r3, #53380	; 0xd084
   14e4c:	movt	r3, #1
   14e50:	str	r3, [fp, #-52]	; 0xffffffcc
   14e54:	ldr	r8, [r6, #-28]	; 0xffffffe4
   14e58:	ldr	r5, [r6, #-24]	; 0xffffffe8
   14e5c:	ldr	r7, [r6, #-20]	; 0xffffffec
   14e60:	cmp	r5, #0
   14e64:	movne	r4, r8
   14e68:	beq	14eb8 <__assert_fail@plt+0x3980>
   14e6c:	ldr	r9, [r4, #12]
   14e70:	tst	r9, #8
   14e74:	bne	14eac <__assert_fail@plt+0x3974>
   14e78:	ldr	sl, [r4, #4]
   14e7c:	sub	r3, sl, #1
   14e80:	cmp	r3, #254	; 0xfe
   14e84:	bhi	14eac <__assert_fail@plt+0x3974>
   14e88:	bl	11394 <__ctype_b_loc@plt>
   14e8c:	ldr	r2, [r0]
   14e90:	lsl	r3, sl, #1
   14e94:	ldrh	r3, [r2, r3]
   14e98:	tst	r3, #16384	; 0x4000
   14e9c:	beq	14eac <__assert_fail@plt+0x3974>
   14ea0:	ldrb	r3, [r7]
   14ea4:	cmp	sl, r3
   14ea8:	beq	14fec <__assert_fail@plt+0x3ab4>
   14eac:	subs	r5, r5, #1
   14eb0:	add	r4, r4, #24
   14eb4:	bne	14e6c <__assert_fail@plt+0x3934>
   14eb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14ebc:	add	r6, r6, #28
   14ec0:	subs	r3, r3, #1
   14ec4:	str	r3, [fp, #-40]	; 0xffffffd8
   14ec8:	bne	14e54 <__assert_fail@plt+0x391c>
   14ecc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14ed0:	ldm	r3, {r7, r8}
   14ed4:	cmp	r8, #0
   14ed8:	beq	14f88 <__assert_fail@plt+0x3a50>
   14edc:	movw	sl, #53420	; 0xd0ac
   14ee0:	movt	sl, #1
   14ee4:	movw	r9, #53404	; 0xd09c
   14ee8:	movt	r9, #1
   14eec:	str	sl, [fp, #-40]	; 0xffffffd8
   14ef0:	movw	r3, #53432	; 0xd0b8
   14ef4:	movt	r3, #1
   14ef8:	ldr	sl, [fp, #-48]	; 0xffffffd0
   14efc:	add	r7, r7, #28
   14f00:	str	r3, [fp, #-44]	; 0xffffffd4
   14f04:	ldr	r6, [r7, #-28]	; 0xffffffe4
   14f08:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14f0c:	cmp	r5, #0
   14f10:	movne	r4, r6
   14f14:	beq	14f7c <__assert_fail@plt+0x3a44>
   14f18:	ldr	r2, [r4]
   14f1c:	cmp	r2, #0
   14f20:	beq	14f70 <__assert_fail@plt+0x3a38>
   14f24:	ldr	r1, [r4, #12]
   14f28:	tst	r1, #4
   14f2c:	moveq	r6, r4
   14f30:	tst	r1, #2
   14f34:	bne	14f70 <__assert_fail@plt+0x3a38>
   14f38:	ldr	r3, [r4, #8]
   14f3c:	ldr	r0, [r6, #12]
   14f40:	cmp	r3, #0
   14f44:	orr	r1, r1, r0
   14f48:	and	r0, r1, #16
   14f4c:	beq	14fc8 <__assert_fail@plt+0x3a90>
   14f50:	cmp	r0, #0
   14f54:	bne	14f70 <__assert_fail@plt+0x3a38>
   14f58:	tst	r1, #1
   14f5c:	movne	r1, r9
   14f60:	movne	r0, sl
   14f64:	ldreq	r1, [fp, #-40]	; 0xffffffd8
   14f68:	moveq	r0, sl
   14f6c:	bl	1b354 <argp_parse@@Base+0x2c30>
   14f70:	subs	r5, r5, #1
   14f74:	add	r4, r4, #24
   14f78:	bne	14f18 <__assert_fail@plt+0x39e0>
   14f7c:	subs	r8, r8, #1
   14f80:	add	r7, r7, #28
   14f84:	bne	14f04 <__assert_fail@plt+0x39cc>
   14f88:	sub	sp, fp, #32
   14f8c:	ldrd	r4, [sp]
   14f90:	ldrd	r6, [sp, #8]
   14f94:	ldrd	r8, [sp, #16]
   14f98:	ldrd	sl, [sp, #24]
   14f9c:	add	sp, sp, #32
   14fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fa4:	tst	r6, #4
   14fa8:	moveq	r8, r4
   14fac:	tst	r6, #2
   14fb0:	bne	14fc0 <__assert_fail@plt+0x3a88>
   14fb4:	ldr	r3, [r4, #8]
   14fb8:	cmp	r3, #0
   14fbc:	beq	15038 <__assert_fail@plt+0x3b00>
   14fc0:	add	sl, sl, #1
   14fc4:	b	14e08 <__assert_fail@plt+0x38d0>
   14fc8:	cmp	r0, #0
   14fcc:	bne	14f70 <__assert_fail@plt+0x3a38>
   14fd0:	ldr	r3, [r6, #8]
   14fd4:	cmp	r3, #0
   14fd8:	bne	14f58 <__assert_fail@plt+0x3a20>
   14fdc:	mov	r0, sl
   14fe0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14fe4:	bl	1b354 <argp_parse@@Base+0x2c30>
   14fe8:	b	14f70 <__assert_fail@plt+0x3a38>
   14fec:	tst	r9, #4
   14ff0:	moveq	r8, r4
   14ff4:	tst	r9, #2
   14ff8:	bne	15030 <__assert_fail@plt+0x3af8>
   14ffc:	ldr	r3, [r4, #8]
   15000:	cmp	r3, #0
   15004:	beq	15064 <__assert_fail@plt+0x3b2c>
   15008:	ldr	r2, [r8, #12]
   1500c:	orr	r9, r9, r2
   15010:	tst	r9, #16
   15014:	bne	15030 <__assert_fail@plt+0x3af8>
   15018:	tst	r9, #1
   1501c:	beq	15074 <__assert_fail@plt+0x3b3c>
   15020:	mov	r2, sl
   15024:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15028:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1502c:	bl	1b354 <argp_parse@@Base+0x2c30>
   15030:	add	r7, r7, #1
   15034:	b	14eac <__assert_fail@plt+0x3974>
   15038:	ldr	r3, [r8, #8]
   1503c:	cmp	r3, #0
   15040:	bne	14fc0 <__assert_fail@plt+0x3a88>
   15044:	ldr	r3, [r8, #12]
   15048:	orr	r6, r6, r3
   1504c:	tst	r6, #16
   15050:	bne	14fc0 <__assert_fail@plt+0x3a88>
   15054:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15058:	strb	r7, [r3], #1
   1505c:	str	r3, [fp, #-52]	; 0xffffffcc
   15060:	b	14fc0 <__assert_fail@plt+0x3a88>
   15064:	ldr	r3, [r8, #8]
   15068:	cmp	r3, #0
   1506c:	beq	15030 <__assert_fail@plt+0x3af8>
   15070:	b	15008 <__assert_fail@plt+0x3ad0>
   15074:	mov	r0, r3
   15078:	str	r3, [fp, #-56]	; 0xffffffc8
   1507c:	bl	113b8 <strlen@plt>
   15080:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15084:	mov	r9, r0
   15088:	ldr	r0, [r3, #16]
   1508c:	ldr	r2, [r3, #24]
   15090:	ldr	r1, [r3, #28]
   15094:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15098:	sub	r2, r1, r2
   1509c:	cmp	r2, r0
   150a0:	bhi	1515c <__assert_fail@plt+0x3c24>
   150a4:	ldr	lr, [fp, #-48]	; 0xffffffd0
   150a8:	ldr	r0, [lr, #8]
   150ac:	ldr	r2, [lr, #20]
   150b0:	ldr	ip, [lr, #32]
   150b4:	bic	r2, r2, r2, asr #31
   150b8:	add	r2, r2, #6
   150bc:	add	r2, r2, r9
   150c0:	cmp	r2, r0
   150c4:	bcs	15118 <__assert_fail@plt+0x3be0>
   150c8:	cmp	r1, ip
   150cc:	bcc	150f4 <__assert_fail@plt+0x3bbc>
   150d0:	mov	r1, #1
   150d4:	mov	r0, lr
   150d8:	str	r3, [fp, #-56]	; 0xffffffc8
   150dc:	mov	r9, lr
   150e0:	bl	1b334 <argp_parse@@Base+0x2c10>
   150e4:	cmp	r0, #0
   150e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   150ec:	beq	15108 <__assert_fail@plt+0x3bd0>
   150f0:	ldr	r1, [r9, #28]
   150f4:	add	r2, r1, #1
   150f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   150fc:	str	r2, [r0, #28]
   15100:	mov	r2, #32
   15104:	strb	r2, [r1]
   15108:	ldrd	r0, [fp, #-48]	; 0xffffffd0
   1510c:	ldr	r2, [r4, #4]
   15110:	bl	1b354 <argp_parse@@Base+0x2c30>
   15114:	b	15030 <__assert_fail@plt+0x3af8>
   15118:	cmp	r1, ip
   1511c:	bcc	15144 <__assert_fail@plt+0x3c0c>
   15120:	mov	r1, #1
   15124:	mov	r0, lr
   15128:	str	r3, [fp, #-56]	; 0xffffffc8
   1512c:	mov	r9, lr
   15130:	bl	1b334 <argp_parse@@Base+0x2c10>
   15134:	cmp	r0, #0
   15138:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1513c:	beq	15108 <__assert_fail@plt+0x3bd0>
   15140:	ldr	r1, [r9, #28]
   15144:	add	r0, r1, #1
   15148:	mov	r2, #10
   1514c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15150:	str	r0, [ip, #28]
   15154:	strb	r2, [r1]
   15158:	b	15108 <__assert_fail@plt+0x3bd0>
   1515c:	ldr	sl, [fp, #-48]	; 0xffffffd0
   15160:	mov	r0, sl
   15164:	bl	1aca4 <argp_parse@@Base+0x2580>
   15168:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1516c:	ldr	r1, [sl, #28]
   15170:	b	150a4 <__assert_fail@plt+0x3b6c>
   15174:	mov	r2, r3
   15178:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1517c:	movw	r1, #53372	; 0xd07c
   15180:	movt	r1, #1
   15184:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15188:	strb	r0, [r3]
   1518c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15190:	bl	1b354 <argp_parse@@Base+0x2c30>
   15194:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15198:	ldr	r3, [r2, #4]
   1519c:	cmp	r3, #0
   151a0:	str	r3, [fp, #-40]	; 0xffffffd8
   151a4:	beq	14f88 <__assert_fail@plt+0x3a50>
   151a8:	ldr	r2, [r2]
   151ac:	add	r3, r2, #28
   151b0:	str	r3, [fp, #-64]	; 0xffffffc0
   151b4:	b	14e38 <__assert_fail@plt+0x3900>
   151b8:	ldr	r3, [r1, #12]
   151bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   151c0:	mov	r5, r0
   151c4:	ldr	r4, [r1, #4]
   151c8:	strd	r6, [sp, #8]
   151cc:	mov	r6, r1
   151d0:	str	r8, [sp, #16]
   151d4:	cmp	r3, #0
   151d8:	str	lr, [sp, #20]
   151dc:	beq	15308 <__assert_fail@plt+0x3dd0>
   151e0:	ldr	r2, [r1]
   151e4:	ldr	r3, [r1, #8]
   151e8:	ldr	r7, [r2, #16]
   151ec:	ldr	r8, [r3]
   151f0:	ldr	r3, [r3, #4]
   151f4:	cmp	r3, #0
   151f8:	cmpne	r8, #0
   151fc:	bne	152b0 <__assert_fail@plt+0x3d78>
   15200:	cmp	r7, #0
   15204:	beq	15220 <__assert_fail@plt+0x3ce8>
   15208:	ldr	r0, [r7]
   1520c:	cmp	r0, #0
   15210:	beq	15220 <__assert_fail@plt+0x3ce8>
   15214:	ldrb	r3, [r0]
   15218:	cmp	r3, #0
   1521c:	bne	15378 <__assert_fail@plt+0x3e40>
   15220:	ldr	r2, [r4, #16]
   15224:	ldr	r1, [r4, #24]
   15228:	ldr	r3, [r4, #28]
   1522c:	sub	r3, r3, r1
   15230:	mov	r1, #0
   15234:	cmp	r3, r2
   15238:	str	r1, [r6, #12]
   1523c:	bhi	1536c <__assert_fail@plt+0x3e34>
   15240:	ldr	r3, [r4, #20]
   15244:	cmp	r3, #0
   15248:	subge	r5, r5, r3
   1524c:	cmp	r5, #0
   15250:	sub	r5, r5, #1
   15254:	ble	1529c <__assert_fail@plt+0x3d64>
   15258:	mov	r6, #32
   1525c:	ldr	r3, [r4, #28]
   15260:	mov	r1, #1
   15264:	mov	r0, r4
   15268:	sub	r5, r5, #1
   1526c:	ldr	r2, [r4, #32]
   15270:	cmp	r3, r2
   15274:	bcc	15288 <__assert_fail@plt+0x3d50>
   15278:	bl	1b334 <argp_parse@@Base+0x2c10>
   1527c:	cmp	r0, #0
   15280:	beq	15294 <__assert_fail@plt+0x3d5c>
   15284:	ldr	r3, [r4, #28]
   15288:	add	r2, r3, #1
   1528c:	str	r2, [r4, #28]
   15290:	strb	r6, [r3]
   15294:	cmn	r5, #1
   15298:	bne	1525c <__assert_fail@plt+0x3d24>
   1529c:	ldrd	r4, [sp]
   152a0:	ldrd	r6, [sp, #8]
   152a4:	ldr	r8, [sp, #16]
   152a8:	add	sp, sp, #20
   152ac:	pop	{pc}		; (ldr pc, [sp], #4)
   152b0:	ldr	r2, [r2, #12]
   152b4:	ldr	r3, [r8, #12]
   152b8:	cmp	r2, r3
   152bc:	beq	15200 <__assert_fail@plt+0x3cc8>
   152c0:	ldr	r3, [r4, #28]
   152c4:	ldr	r2, [r4, #32]
   152c8:	cmp	r3, r2
   152cc:	bcc	152e8 <__assert_fail@plt+0x3db0>
   152d0:	mov	r1, #1
   152d4:	mov	r0, r4
   152d8:	bl	1b334 <argp_parse@@Base+0x2c10>
   152dc:	cmp	r0, #0
   152e0:	ldrne	r3, [r4, #28]
   152e4:	beq	152f8 <__assert_fail@plt+0x3dc0>
   152e8:	add	r1, r3, #1
   152ec:	mov	r2, #10
   152f0:	str	r1, [r4, #28]
   152f4:	strb	r2, [r3]
   152f8:	cmp	r7, #0
   152fc:	ldr	r4, [r6, #4]
   15300:	bne	15208 <__assert_fail@plt+0x3cd0>
   15304:	b	15220 <__assert_fail@plt+0x3ce8>
   15308:	ldr	r3, [r4, #28]
   1530c:	ldr	r1, [r4, #32]
   15310:	add	r2, r3, #2
   15314:	cmp	r1, r2
   15318:	bcs	15334 <__assert_fail@plt+0x3dfc>
   1531c:	mov	r1, #2
   15320:	mov	r0, r4
   15324:	bl	1b334 <argp_parse@@Base+0x2c10>
   15328:	cmp	r0, #0
   1532c:	beq	15350 <__assert_fail@plt+0x3e18>
   15330:	ldr	r3, [r4, #28]
   15334:	movw	r2, #53440	; 0xd0c0
   15338:	movt	r2, #1
   1533c:	ldrh	r2, [r2]
   15340:	strh	r2, [r3]
   15344:	ldr	r3, [r4, #28]
   15348:	add	r3, r3, #2
   1534c:	str	r3, [r4, #28]
   15350:	ldr	r4, [r6, #4]
   15354:	ldr	r2, [r4, #16]
   15358:	ldr	r1, [r4, #24]
   1535c:	ldr	r3, [r4, #28]
   15360:	sub	r3, r3, r1
   15364:	cmp	r3, r2
   15368:	bls	15240 <__assert_fail@plt+0x3d08>
   1536c:	mov	r0, r4
   15370:	bl	1aca4 <argp_parse@@Base+0x2580>
   15374:	b	15240 <__assert_fail@plt+0x3d08>
   15378:	cmp	r8, #0
   1537c:	beq	153ac <__assert_fail@plt+0x3e74>
   15380:	ldr	r3, [r8, #16]
   15384:	cmp	r3, r7
   15388:	beq	15220 <__assert_fail@plt+0x3ce8>
   1538c:	cmp	r3, #0
   15390:	beq	153ac <__assert_fail@plt+0x3e74>
   15394:	ldr	r3, [r3, #12]
   15398:	cmp	r3, #0
   1539c:	cmpne	r7, r3
   153a0:	bne	15394 <__assert_fail@plt+0x3e5c>
   153a4:	cmp	r7, r3
   153a8:	beq	15220 <__assert_fail@plt+0x3ce8>
   153ac:	mov	r2, r6
   153b0:	ldr	r1, [r7, #16]
   153b4:	ldr	r7, [r4, #12]
   153b8:	bl	14a50 <__assert_fail@plt+0x3518>
   153bc:	ldr	r8, [r6, #4]
   153c0:	ldr	r2, [r8, #16]
   153c4:	ldr	r1, [r8, #24]
   153c8:	ldr	r3, [r8, #28]
   153cc:	sub	r3, r3, r1
   153d0:	cmp	r3, r2
   153d4:	movls	r4, r8
   153d8:	bhi	153e4 <__assert_fail@plt+0x3eac>
   153dc:	str	r7, [r8, #12]
   153e0:	b	15230 <__assert_fail@plt+0x3cf8>
   153e4:	mov	r0, r8
   153e8:	bl	1aca4 <argp_parse@@Base+0x2580>
   153ec:	ldr	r4, [r6, #4]
   153f0:	ldr	r2, [r4, #16]
   153f4:	ldr	r1, [r4, #24]
   153f8:	ldr	r3, [r4, #28]
   153fc:	sub	r3, r3, r1
   15400:	b	153dc <__assert_fail@plt+0x3ea4>
   15404:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15408:	strd	r6, [sp, #8]
   1540c:	mov	r7, r0
   15410:	ldr	r6, [r0, #12]
   15414:	strd	r8, [sp, #16]
   15418:	mov	r8, r2
   1541c:	strd	sl, [sp, #24]
   15420:	mov	sl, r3
   15424:	mov	fp, r1
   15428:	ldr	r3, [r0, #16]
   1542c:	str	lr, [sp, #32]
   15430:	sub	sp, sp, #28
   15434:	cmp	r6, #0
   15438:	ldr	r5, [sp, #68]	; 0x44
   1543c:	str	r3, [sp, #8]
   15440:	ldr	r3, [r0, #20]
   15444:	beq	157b4 <__assert_fail@plt+0x427c>
   15448:	mov	r1, #11
   1544c:	mov	r0, r6
   15450:	str	r3, [sp, #12]
   15454:	bl	113c4 <strchr@plt>
   15458:	cmp	r8, #0
   1545c:	mov	r9, r0
   15460:	ldr	r3, [sp, #12]
   15464:	bne	156b0 <__assert_fail@plt+0x4178>
   15468:	cmp	r0, #0
   1546c:	beq	159b0 <__assert_fail@plt+0x4478>
   15470:	subs	r1, r0, r6
   15474:	movne	r4, #1
   15478:	moveq	r4, #0
   1547c:	cmp	r3, #0
   15480:	str	r1, [sp, #20]
   15484:	beq	15954 <__assert_fail@plt+0x441c>
   15488:	cmp	r1, #0
   1548c:	beq	159a4 <__assert_fail@plt+0x446c>
   15490:	mov	r0, r6
   15494:	mov	r4, #1
   15498:	bl	1125c <strndup@plt>
   1549c:	adds	r3, r0, #0
   154a0:	mov	r6, r0
   154a4:	movne	r3, #1
   154a8:	str	r3, [sp, #16]
   154ac:	mov	r1, fp
   154b0:	mov	r0, r7
   154b4:	bl	195dc <argp_parse@@Base+0xeb8>
   154b8:	mov	r2, r0
   154bc:	mov	r1, r6
   154c0:	ldr	r3, [r7, #20]
   154c4:	mov	r0, #1
   154c8:	movt	r0, #512	; 0x200
   154cc:	str	r2, [sp, #12]
   154d0:	blx	r3
   154d4:	subs	r9, r0, #0
   154d8:	moveq	r4, r9
   154dc:	beq	1556c <__assert_fail@plt+0x4034>
   154e0:	cmp	r6, r9
   154e4:	movne	r4, #0
   154e8:	andeq	r4, r4, #1
   154ec:	cmp	sl, #0
   154f0:	ldr	r2, [r5, #28]
   154f4:	bne	157fc <__assert_fail@plt+0x42c4>
   154f8:	cmp	r4, #0
   154fc:	beq	15754 <__assert_fail@plt+0x421c>
   15500:	ldr	r3, [sp, #20]
   15504:	ldr	r0, [r5, #32]
   15508:	add	r1, r2, r3
   1550c:	cmp	r0, r1
   15510:	bcs	1570c <__assert_fail@plt+0x41d4>
   15514:	mov	r1, r3
   15518:	mov	r0, r5
   1551c:	bl	1b334 <argp_parse@@Base+0x2c10>
   15520:	cmp	r0, #0
   15524:	ldr	r2, [r5, #28]
   15528:	bne	1570c <__assert_fail@plt+0x41d4>
   1552c:	ldr	r0, [r5, #16]
   15530:	ldr	r1, [r5, #24]
   15534:	sub	r2, r2, r1
   15538:	cmp	r2, r0
   1553c:	bhi	15844 <__assert_fail@plt+0x430c>
   15540:	ldr	r1, [r5, #4]
   15544:	ldr	r2, [r5, #20]
   15548:	bic	r2, r2, r2, asr #31
   1554c:	cmp	r1, r2
   15550:	bcc	15820 <__assert_fail@plt+0x42e8>
   15554:	cmp	r9, r6
   15558:	moveq	r4, #1
   1555c:	beq	1556c <__assert_fail@plt+0x4034>
   15560:	mov	r0, r9
   15564:	mov	r4, #1
   15568:	bl	1975c <argp_parse@@Base+0x1038>
   1556c:	ldr	r3, [sp, #16]
   15570:	cmp	r3, #0
   15574:	beq	1558c <__assert_fail@plt+0x4054>
   15578:	ldr	r3, [r7, #20]
   1557c:	cmp	r3, #0
   15580:	beq	1560c <__assert_fail@plt+0x40d4>
   15584:	mov	r0, r6
   15588:	bl	1975c <argp_parse@@Base+0x1038>
   1558c:	cmp	r8, #0
   15590:	beq	1560c <__assert_fail@plt+0x40d4>
   15594:	ldr	r3, [r7, #20]
   15598:	cmp	r3, #0
   1559c:	beq	1560c <__assert_fail@plt+0x40d4>
   155a0:	mov	r0, #4
   155a4:	movt	r0, #512	; 0x200
   155a8:	ldr	r2, [sp, #12]
   155ac:	mov	r1, #0
   155b0:	blx	r3
   155b4:	subs	r6, r0, #0
   155b8:	beq	1560c <__assert_fail@plt+0x40d4>
   155bc:	orrs	r3, sl, r4
   155c0:	bne	158e0 <__assert_fail@plt+0x43a8>
   155c4:	mov	r0, r6
   155c8:	bl	113b8 <strlen@plt>
   155cc:	subs	r4, r0, #0
   155d0:	bne	15898 <__assert_fail@plt+0x4360>
   155d4:	mov	r0, r6
   155d8:	bl	1975c <argp_parse@@Base+0x1038>
   155dc:	ldr	r2, [r5, #16]
   155e0:	ldr	r1, [r5, #24]
   155e4:	ldr	r3, [r5, #28]
   155e8:	sub	r3, r3, r1
   155ec:	cmp	r3, r2
   155f0:	bhi	1592c <__assert_fail@plt+0x43f4>
   155f4:	ldr	r2, [r5, #4]
   155f8:	ldr	r3, [r5, #20]
   155fc:	bic	r3, r3, r3, asr #31
   15600:	cmp	r2, r3
   15604:	bcc	15904 <__assert_fail@plt+0x43cc>
   15608:	mov	r4, #1
   1560c:	ldr	r7, [sp, #8]
   15610:	cmp	r7, #0
   15614:	beq	15690 <__assert_fail@plt+0x4158>
   15618:	ldr	r3, [r7]
   1561c:	cmp	r3, #0
   15620:	beq	15690 <__assert_fail@plt+0x4158>
   15624:	ldr	r2, [sp, #64]	; 0x40
   15628:	eor	r6, r2, #1
   1562c:	eor	r2, r4, #1
   15630:	orr	r2, r2, r6
   15634:	and	r6, r6, #1
   15638:	tst	r2, #1
   1563c:	beq	15964 <__assert_fail@plt+0x442c>
   15640:	ldr	r9, [sp, #64]	; 0x40
   15644:	orrs	r2, r4, sl
   15648:	mov	r0, r3
   1564c:	str	r9, [sp]
   15650:	movne	r3, #1
   15654:	moveq	r3, #0
   15658:	str	r5, [sp, #4]
   1565c:	mov	r2, r8
   15660:	mov	r1, fp
   15664:	bl	15404 <__assert_fail@plt+0x3ecc>
   15668:	ldr	r3, [r7, #16]
   1566c:	orr	r4, r4, r0
   15670:	add	r7, r7, #16
   15674:	cmp	r3, #0
   15678:	beq	15690 <__assert_fail@plt+0x4158>
   1567c:	cmp	r4, #0
   15680:	movne	r2, r6
   15684:	moveq	r2, #1
   15688:	cmp	r2, #0
   1568c:	bne	15644 <__assert_fail@plt+0x410c>
   15690:	mov	r0, r4
   15694:	add	sp, sp, #28
   15698:	ldrd	r4, [sp]
   1569c:	ldrd	r6, [sp, #8]
   156a0:	ldrd	r8, [sp, #16]
   156a4:	ldrd	sl, [sp, #24]
   156a8:	add	sp, sp, #32
   156ac:	pop	{pc}		; (ldr pc, [sp], #4)
   156b0:	cmp	r0, #0
   156b4:	beq	15938 <__assert_fail@plt+0x4400>
   156b8:	cmp	r3, #0
   156bc:	add	r6, r0, #1
   156c0:	movne	r1, fp
   156c4:	movne	r0, r7
   156c8:	beq	15730 <__assert_fail@plt+0x41f8>
   156cc:	bl	195dc <argp_parse@@Base+0xeb8>
   156d0:	ldr	r3, [r7, #20]
   156d4:	str	r0, [sp, #12]
   156d8:	mov	r0, #2
   156dc:	movt	r0, #512	; 0x200
   156e0:	mov	r1, r6
   156e4:	ldr	r2, [sp, #12]
   156e8:	blx	r3
   156ec:	subs	r9, r0, #0
   156f0:	moveq	r4, r9
   156f4:	beq	1558c <__assert_fail@plt+0x4054>
   156f8:	mov	r3, #0
   156fc:	mov	r4, r3
   15700:	str	r3, [sp, #16]
   15704:	str	r3, [sp, #20]
   15708:	b	154e0 <__assert_fail@plt+0x3fa8>
   1570c:	ldr	r4, [sp, #20]
   15710:	mov	r0, r2
   15714:	mov	r1, r6
   15718:	mov	r2, r4
   1571c:	bl	11268 <memcpy@plt>
   15720:	ldr	r2, [r5, #28]
   15724:	add	r2, r2, r4
   15728:	str	r2, [r5, #28]
   1572c:	b	1552c <__assert_fail@plt+0x3ff4>
   15730:	cmp	r6, #0
   15734:	moveq	r4, r6
   15738:	beq	1560c <__assert_fail@plt+0x40d4>
   1573c:	cmp	sl, #0
   15740:	ldr	r2, [r5, #28]
   15744:	bne	157e4 <__assert_fail@plt+0x42ac>
   15748:	mov	r9, r6
   1574c:	str	sl, [sp, #12]
   15750:	str	sl, [sp, #16]
   15754:	mov	r0, r9
   15758:	str	r2, [sp, #20]
   1575c:	bl	113b8 <strlen@plt>
   15760:	subs	r4, r0, #0
   15764:	ldr	r2, [sp, #20]
   15768:	beq	1552c <__assert_fail@plt+0x3ff4>
   1576c:	ldr	r0, [r5, #32]
   15770:	add	r1, r2, r4
   15774:	cmp	r0, r1
   15778:	bcs	15794 <__assert_fail@plt+0x425c>
   1577c:	mov	r1, r4
   15780:	mov	r0, r5
   15784:	bl	1b334 <argp_parse@@Base+0x2c10>
   15788:	cmp	r0, #0
   1578c:	ldr	r2, [r5, #28]
   15790:	beq	1552c <__assert_fail@plt+0x3ff4>
   15794:	mov	r0, r2
   15798:	mov	r1, r9
   1579c:	mov	r2, r4
   157a0:	bl	11268 <memcpy@plt>
   157a4:	ldr	r2, [r5, #28]
   157a8:	add	r2, r2, r4
   157ac:	str	r2, [r5, #28]
   157b0:	b	1552c <__assert_fail@plt+0x3ff4>
   157b4:	cmp	r3, #0
   157b8:	beq	1594c <__assert_fail@plt+0x4414>
   157bc:	bl	195dc <argp_parse@@Base+0xeb8>
   157c0:	mov	r2, #1
   157c4:	movt	r2, #512	; 0x200
   157c8:	str	r0, [sp, #12]
   157cc:	cmp	r8, #0
   157d0:	mov	r0, #2
   157d4:	movt	r0, #512	; 0x200
   157d8:	moveq	r0, r2
   157dc:	ldr	r3, [r7, #20]
   157e0:	b	156e0 <__assert_fail@plt+0x41a8>
   157e4:	mov	r3, #0
   157e8:	mov	r9, r6
   157ec:	mov	r4, r3
   157f0:	str	r3, [sp, #12]
   157f4:	str	r3, [sp, #16]
   157f8:	str	r3, [sp, #20]
   157fc:	ldr	r1, [r5, #32]
   15800:	cmp	r1, r2
   15804:	bls	15850 <__assert_fail@plt+0x4318>
   15808:	add	r0, r2, #1
   1580c:	mov	r1, #10
   15810:	str	r0, [r5, #28]
   15814:	strb	r1, [r2]
   15818:	ldr	r2, [r5, #28]
   1581c:	b	154f8 <__assert_fail@plt+0x3fc0>
   15820:	ldr	r2, [r5, #28]
   15824:	ldr	r1, [r5, #32]
   15828:	cmp	r2, r1
   1582c:	bcs	1586c <__assert_fail@plt+0x4334>
   15830:	add	r0, r2, #1
   15834:	mov	r1, #10
   15838:	str	r0, [r5, #28]
   1583c:	strb	r1, [r2]
   15840:	b	15554 <__assert_fail@plt+0x401c>
   15844:	mov	r0, r5
   15848:	bl	1aca4 <argp_parse@@Base+0x2580>
   1584c:	b	15540 <__assert_fail@plt+0x4008>
   15850:	mov	r1, #1
   15854:	mov	r0, r5
   15858:	bl	1b334 <argp_parse@@Base+0x2c10>
   1585c:	cmp	r0, #0
   15860:	ldr	r2, [r5, #28]
   15864:	bne	15808 <__assert_fail@plt+0x42d0>
   15868:	b	154f8 <__assert_fail@plt+0x3fc0>
   1586c:	mov	r1, #1
   15870:	mov	r0, r5
   15874:	bl	1b334 <argp_parse@@Base+0x2c10>
   15878:	cmp	r0, #0
   1587c:	beq	15554 <__assert_fail@plt+0x401c>
   15880:	ldr	r2, [r5, #28]
   15884:	mov	r1, #10
   15888:	add	r0, r2, #1
   1588c:	str	r0, [r5, #28]
   15890:	strb	r1, [r2]
   15894:	b	15554 <__assert_fail@plt+0x401c>
   15898:	ldr	r0, [r5, #28]
   1589c:	ldr	r2, [r5, #32]
   158a0:	add	r3, r0, r4
   158a4:	cmp	r2, r3
   158a8:	bcs	158c4 <__assert_fail@plt+0x438c>
   158ac:	mov	r1, r4
   158b0:	mov	r0, r5
   158b4:	bl	1b334 <argp_parse@@Base+0x2c10>
   158b8:	cmp	r0, #0
   158bc:	beq	155d4 <__assert_fail@plt+0x409c>
   158c0:	ldr	r0, [r5, #28]
   158c4:	mov	r2, r4
   158c8:	mov	r1, r6
   158cc:	bl	11268 <memcpy@plt>
   158d0:	ldr	r3, [r5, #28]
   158d4:	add	r4, r3, r4
   158d8:	str	r4, [r5, #28]
   158dc:	b	155d4 <__assert_fail@plt+0x409c>
   158e0:	ldr	r3, [r5, #28]
   158e4:	ldr	r2, [r5, #32]
   158e8:	cmp	r3, r2
   158ec:	bcs	15988 <__assert_fail@plt+0x4450>
   158f0:	add	r1, r3, #1
   158f4:	mov	r2, #10
   158f8:	str	r1, [r5, #28]
   158fc:	strb	r2, [r3]
   15900:	b	155c4 <__assert_fail@plt+0x408c>
   15904:	ldr	r3, [r5, #28]
   15908:	ldr	r2, [r5, #32]
   1590c:	cmp	r3, r2
   15910:	bcs	1596c <__assert_fail@plt+0x4434>
   15914:	add	r1, r3, #1
   15918:	mov	r2, #10
   1591c:	mov	r4, #1
   15920:	str	r1, [r5, #28]
   15924:	strb	r2, [r3]
   15928:	b	1560c <__assert_fail@plt+0x40d4>
   1592c:	mov	r0, r5
   15930:	bl	1aca4 <argp_parse@@Base+0x2580>
   15934:	b	155f4 <__assert_fail@plt+0x40bc>
   15938:	cmp	r3, #0
   1593c:	movne	r1, fp
   15940:	movne	r0, r7
   15944:	movne	r6, r9
   15948:	bne	156cc <__assert_fail@plt+0x4194>
   1594c:	mov	r4, r3
   15950:	b	1560c <__assert_fail@plt+0x40d4>
   15954:	mov	r9, r6
   15958:	str	r8, [sp, #12]
   1595c:	str	r4, [sp, #16]
   15960:	b	154e0 <__assert_fail@plt+0x3fa8>
   15964:	mov	r4, #1
   15968:	b	15690 <__assert_fail@plt+0x4158>
   1596c:	mov	r1, #1
   15970:	mov	r0, r5
   15974:	bl	1b334 <argp_parse@@Base+0x2c10>
   15978:	cmp	r0, #0
   1597c:	beq	15608 <__assert_fail@plt+0x40d0>
   15980:	ldr	r3, [r5, #28]
   15984:	b	15914 <__assert_fail@plt+0x43dc>
   15988:	mov	r1, #1
   1598c:	mov	r0, r5
   15990:	bl	1b334 <argp_parse@@Base+0x2c10>
   15994:	cmp	r0, #0
   15998:	beq	155c4 <__assert_fail@plt+0x408c>
   1599c:	ldr	r3, [r5, #28]
   159a0:	b	158f0 <__assert_fail@plt+0x43b8>
   159a4:	ldr	r4, [sp, #20]
   159a8:	str	r4, [sp, #16]
   159ac:	b	154ac <__assert_fail@plt+0x3f74>
   159b0:	cmp	r3, #0
   159b4:	beq	1573c <__assert_fail@plt+0x4204>
   159b8:	mov	r1, fp
   159bc:	mov	r0, r7
   159c0:	bl	195dc <argp_parse@@Base+0xeb8>
   159c4:	str	r0, [sp, #12]
   159c8:	mov	r0, #1
   159cc:	movt	r0, #512	; 0x200
   159d0:	ldr	r3, [r7, #20]
   159d4:	b	156e0 <__assert_fail@plt+0x41a8>
   159d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   159dc:	ldr	r4, [r0, #16]
   159e0:	strd	r6, [sp, #8]
   159e4:	strd	r8, [sp, #16]
   159e8:	strd	sl, [sp, #24]
   159ec:	str	lr, [sp, #32]
   159f0:	sub	sp, sp, #20
   159f4:	cmp	r4, #0
   159f8:	movne	r3, r4
   159fc:	bne	15a08 <__assert_fail@plt+0x44d0>
   15a00:	b	16298 <__assert_fail@plt+0x4d60>
   15a04:	mov	r3, r2
   15a08:	ldr	r2, [r3, #12]
   15a0c:	cmp	r2, #0
   15a10:	bne	15a04 <__assert_fail@plt+0x44cc>
   15a14:	ldr	r2, [r3, #8]
   15a18:	ldr	r7, [r1, #16]
   15a1c:	cmp	r7, #0
   15a20:	movne	r3, r7
   15a24:	bne	15a30 <__assert_fail@plt+0x44f8>
   15a28:	b	16290 <__assert_fail@plt+0x4d58>
   15a2c:	mov	r3, ip
   15a30:	ldr	ip, [r3, #12]
   15a34:	cmp	ip, #0
   15a38:	bne	15a2c <__assert_fail@plt+0x44f4>
   15a3c:	ldr	ip, [r3, #8]
   15a40:	mvn	r3, ip
   15a44:	lsr	r3, r3, #31
   15a48:	cmp	r3, r2, lsr #31
   15a4c:	subne	ip, r2, ip
   15a50:	subeq	ip, ip, r2
   15a54:	cmp	ip, #0
   15a58:	bne	15c38 <__assert_fail@plt+0x4700>
   15a5c:	adds	ip, r7, #0
   15a60:	movne	ip, #1
   15a64:	cmp	r4, #0
   15a68:	rsbeq	ip, ip, #0
   15a6c:	rsbne	ip, ip, #1
   15a70:	cmp	ip, #0
   15a74:	bne	15c38 <__assert_fail@plt+0x4700>
   15a78:	cmp	r4, #0
   15a7c:	mov	r6, r1
   15a80:	mov	r5, r0
   15a84:	beq	15f88 <__assert_fail@plt+0x4a50>
   15a88:	ldr	r8, [r4, #12]
   15a8c:	ldr	r1, [r4, #20]
   15a90:	ldr	r2, [r7, #20]
   15a94:	ldr	r9, [r7, #12]
   15a98:	cmp	r1, r2
   15a9c:	bgt	15c5c <__assert_fail@plt+0x4724>
   15aa0:	blt	15aac <__assert_fail@plt+0x4574>
   15aa4:	b	15dec <__assert_fail@plt+0x48b4>
   15aa8:	mov	r9, r5
   15aac:	ldr	r5, [r9, #12]
   15ab0:	ldr	r3, [r9, #20]
   15ab4:	cmp	r1, r3
   15ab8:	blt	15aa8 <__assert_fail@plt+0x4570>
   15abc:	cmp	r8, r5
   15ac0:	beq	16458 <__assert_fail@plt+0x4f20>
   15ac4:	ldr	r7, [r5, #12]
   15ac8:	ldr	r6, [r8, #12]
   15acc:	cmp	r6, r7
   15ad0:	beq	163a0 <__assert_fail@plt+0x4e68>
   15ad4:	ldr	sl, [r6, #12]
   15ad8:	ldr	fp, [r7, #12]
   15adc:	cmp	sl, fp
   15ae0:	beq	164c0 <__assert_fail@plt+0x4f88>
   15ae4:	ldr	r3, [sl, #12]
   15ae8:	ldr	r2, [fp, #12]
   15aec:	cmp	r3, r2
   15af0:	beq	1655c <__assert_fail@plt+0x5024>
   15af4:	ldr	r1, [r2, #12]
   15af8:	ldr	r0, [r3, #12]
   15afc:	cmp	r0, r1
   15b00:	beq	165f8 <__assert_fail@plt+0x50c0>
   15b04:	str	r3, [sp]
   15b08:	str	r2, [sp, #4]
   15b0c:	bl	13f40 <__assert_fail@plt+0x2a08>
   15b10:	subs	ip, r0, #0
   15b14:	bne	15c38 <__assert_fail@plt+0x4700>
   15b18:	ldr	r3, [sp]
   15b1c:	ldr	r2, [sp, #4]
   15b20:	ldr	r0, [r3, #8]
   15b24:	ldr	r1, [r2, #8]
   15b28:	mvn	ip, r1
   15b2c:	lsr	ip, ip, #31
   15b30:	cmp	ip, r0, lsr #31
   15b34:	subne	ip, r0, r1
   15b38:	subeq	ip, r1, r0
   15b3c:	cmp	ip, #0
   15b40:	bne	15c38 <__assert_fail@plt+0x4700>
   15b44:	ldr	r1, [r2, #4]
   15b48:	ldr	r3, [r3, #4]
   15b4c:	sub	ip, r1, r3
   15b50:	cmp	ip, #0
   15b54:	bne	15c38 <__assert_fail@plt+0x4700>
   15b58:	ldr	r1, [fp, #8]
   15b5c:	ldr	r0, [sl, #8]
   15b60:	mvn	r3, r1
   15b64:	lsr	r3, r3, #31
   15b68:	cmp	r3, r0, lsr #31
   15b6c:	subne	ip, r0, r1
   15b70:	subeq	ip, r1, r0
   15b74:	cmp	ip, #0
   15b78:	bne	15c38 <__assert_fail@plt+0x4700>
   15b7c:	ldr	r3, [sl, #4]
   15b80:	ldr	r1, [fp, #4]
   15b84:	sub	ip, r1, r3
   15b88:	cmp	ip, #0
   15b8c:	bne	15c38 <__assert_fail@plt+0x4700>
   15b90:	ldr	r1, [r7, #8]
   15b94:	ldr	r0, [r6, #8]
   15b98:	mvn	r3, r1
   15b9c:	lsr	r3, r3, #31
   15ba0:	cmp	r3, r0, lsr #31
   15ba4:	subne	ip, r0, r1
   15ba8:	subeq	ip, r1, r0
   15bac:	cmp	ip, #0
   15bb0:	bne	15c38 <__assert_fail@plt+0x4700>
   15bb4:	ldr	r3, [r6, #4]
   15bb8:	ldr	r1, [r7, #4]
   15bbc:	sub	ip, r1, r3
   15bc0:	cmp	ip, #0
   15bc4:	bne	15c38 <__assert_fail@plt+0x4700>
   15bc8:	ldr	r1, [r5, #8]
   15bcc:	ldr	r0, [r8, #8]
   15bd0:	mvn	r3, r1
   15bd4:	lsr	r3, r3, #31
   15bd8:	cmp	r3, r0, lsr #31
   15bdc:	subne	ip, r0, r1
   15be0:	subeq	ip, r1, r0
   15be4:	cmp	ip, #0
   15be8:	bne	15c38 <__assert_fail@plt+0x4700>
   15bec:	ldr	r1, [r5, #4]
   15bf0:	ldr	r3, [r8, #4]
   15bf4:	sub	ip, r1, r3
   15bf8:	cmp	ip, #0
   15bfc:	bne	15c38 <__assert_fail@plt+0x4700>
   15c00:	ldr	r1, [r9, #8]
   15c04:	ldr	r0, [r4, #8]
   15c08:	mvn	r3, r1
   15c0c:	lsr	r3, r3, #31
   15c10:	cmp	r3, r0, lsr #31
   15c14:	subne	ip, r0, r1
   15c18:	subeq	ip, r1, r0
   15c1c:	cmp	ip, #0
   15c20:	bne	15c38 <__assert_fail@plt+0x4700>
   15c24:	ldr	r0, [r4, #4]
   15c28:	ldr	r1, [r9, #4]
   15c2c:	sub	ip, r1, r0
   15c30:	cmp	ip, #0
   15c34:	mvneq	ip, #0
   15c38:	mov	r0, ip
   15c3c:	add	sp, sp, #20
   15c40:	ldrd	r4, [sp]
   15c44:	ldrd	r6, [sp, #8]
   15c48:	ldrd	r8, [sp, #16]
   15c4c:	ldrd	sl, [sp, #24]
   15c50:	add	sp, sp, #32
   15c54:	pop	{pc}		; (ldr pc, [sp], #4)
   15c58:	mov	r8, r4
   15c5c:	ldr	r4, [r8, #12]
   15c60:	ldr	r3, [r8, #20]
   15c64:	cmp	r2, r3
   15c68:	blt	15c58 <__assert_fail@plt+0x4720>
   15c6c:	cmp	r4, r9
   15c70:	beq	16424 <__assert_fail@plt+0x4eec>
   15c74:	ldr	r5, [r4, #12]
   15c78:	ldr	r6, [r9, #12]
   15c7c:	cmp	r5, r6
   15c80:	beq	1648c <__assert_fail@plt+0x4f54>
   15c84:	ldr	sl, [r5, #12]
   15c88:	ldr	fp, [r6, #12]
   15c8c:	cmp	sl, fp
   15c90:	beq	163d4 <__assert_fail@plt+0x4e9c>
   15c94:	ldr	r3, [sl, #12]
   15c98:	ldr	r2, [fp, #12]
   15c9c:	cmp	r3, r2
   15ca0:	beq	16504 <__assert_fail@plt+0x4fcc>
   15ca4:	ldr	r1, [r2, #12]
   15ca8:	ldr	r0, [r3, #12]
   15cac:	cmp	r0, r1
   15cb0:	beq	16590 <__assert_fail@plt+0x5058>
   15cb4:	str	r3, [sp]
   15cb8:	str	r2, [sp, #4]
   15cbc:	bl	13f40 <__assert_fail@plt+0x2a08>
   15cc0:	subs	ip, r0, #0
   15cc4:	bne	15c38 <__assert_fail@plt+0x4700>
   15cc8:	ldr	r3, [sp]
   15ccc:	ldr	r2, [sp, #4]
   15cd0:	ldr	r0, [r3, #8]
   15cd4:	ldr	r1, [r2, #8]
   15cd8:	mvn	ip, r1
   15cdc:	lsr	ip, ip, #31
   15ce0:	cmp	ip, r0, lsr #31
   15ce4:	subne	ip, r0, r1
   15ce8:	subeq	ip, r1, r0
   15cec:	cmp	ip, #0
   15cf0:	bne	15c38 <__assert_fail@plt+0x4700>
   15cf4:	ldr	r1, [r2, #4]
   15cf8:	ldr	r3, [r3, #4]
   15cfc:	sub	ip, r1, r3
   15d00:	cmp	ip, #0
   15d04:	bne	15c38 <__assert_fail@plt+0x4700>
   15d08:	ldr	r1, [fp, #8]
   15d0c:	ldr	r0, [sl, #8]
   15d10:	mvn	r3, r1
   15d14:	lsr	r3, r3, #31
   15d18:	cmp	r3, r0, lsr #31
   15d1c:	subne	ip, r0, r1
   15d20:	subeq	ip, r1, r0
   15d24:	cmp	ip, #0
   15d28:	bne	15c38 <__assert_fail@plt+0x4700>
   15d2c:	ldr	r3, [sl, #4]
   15d30:	ldr	r1, [fp, #4]
   15d34:	sub	ip, r1, r3
   15d38:	cmp	ip, #0
   15d3c:	bne	15c38 <__assert_fail@plt+0x4700>
   15d40:	ldr	r1, [r6, #8]
   15d44:	ldr	r0, [r5, #8]
   15d48:	mvn	r3, r1
   15d4c:	lsr	r3, r3, #31
   15d50:	cmp	r3, r0, lsr #31
   15d54:	subne	ip, r0, r1
   15d58:	subeq	ip, r1, r0
   15d5c:	cmp	ip, #0
   15d60:	bne	15c38 <__assert_fail@plt+0x4700>
   15d64:	ldr	r3, [r5, #4]
   15d68:	ldr	r1, [r6, #4]
   15d6c:	sub	ip, r1, r3
   15d70:	cmp	ip, #0
   15d74:	bne	15c38 <__assert_fail@plt+0x4700>
   15d78:	ldr	r1, [r9, #8]
   15d7c:	ldr	r0, [r4, #8]
   15d80:	mvn	r3, r1
   15d84:	lsr	r3, r3, #31
   15d88:	cmp	r3, r0, lsr #31
   15d8c:	subne	ip, r0, r1
   15d90:	subeq	ip, r1, r0
   15d94:	cmp	ip, #0
   15d98:	bne	15c38 <__assert_fail@plt+0x4700>
   15d9c:	ldr	r0, [r4, #4]
   15da0:	ldr	r1, [r9, #4]
   15da4:	sub	ip, r1, r0
   15da8:	cmp	ip, #0
   15dac:	bne	15c38 <__assert_fail@plt+0x4700>
   15db0:	ldr	r1, [r7, #8]
   15db4:	ldr	r0, [r8, #8]
   15db8:	mvn	r3, r1
   15dbc:	lsr	r3, r3, #31
   15dc0:	cmp	r3, r0, lsr #31
   15dc4:	subne	ip, r0, r1
   15dc8:	subeq	ip, r1, r0
   15dcc:	cmp	ip, #0
   15dd0:	bne	15c38 <__assert_fail@plt+0x4700>
   15dd4:	ldr	r1, [r7, #4]
   15dd8:	ldr	r0, [r8, #4]
   15ddc:	sub	ip, r1, r0
   15de0:	cmp	ip, #0
   15de4:	moveq	ip, #1
   15de8:	b	15c38 <__assert_fail@plt+0x4700>
   15dec:	cmp	r8, r9
   15df0:	beq	165c4 <__assert_fail@plt+0x508c>
   15df4:	ldr	sl, [r8, #12]
   15df8:	ldr	fp, [r9, #12]
   15dfc:	cmp	sl, fp
   15e00:	beq	1662c <__assert_fail@plt+0x50f4>
   15e04:	ldr	r3, [sl, #12]
   15e08:	mov	r2, r3
   15e0c:	ldr	r3, [fp, #12]
   15e10:	str	r2, [sp]
   15e14:	cmp	r2, r3
   15e18:	beq	16660 <__assert_fail@plt+0x5128>
   15e1c:	ldr	r2, [r2, #12]
   15e20:	mov	r1, r2
   15e24:	ldr	r2, [r3, #12]
   15e28:	str	r1, [sp, #4]
   15e2c:	cmp	r1, r2
   15e30:	beq	16694 <__assert_fail@plt+0x515c>
   15e34:	ldr	r0, [r1, #12]
   15e38:	ldr	r1, [r2, #12]
   15e3c:	cmp	r0, r1
   15e40:	beq	166cc <__assert_fail@plt+0x5194>
   15e44:	str	r3, [sp, #8]
   15e48:	str	r2, [sp, #12]
   15e4c:	bl	13f40 <__assert_fail@plt+0x2a08>
   15e50:	subs	ip, r0, #0
   15e54:	bne	15c38 <__assert_fail@plt+0x4700>
   15e58:	ldr	r3, [sp, #4]
   15e5c:	ldr	r2, [sp, #12]
   15e60:	ldr	r0, [r3, #8]
   15e64:	ldr	r1, [r2, #8]
   15e68:	ldr	r3, [sp, #8]
   15e6c:	mvn	ip, r1
   15e70:	lsr	ip, ip, #31
   15e74:	cmp	ip, r0, lsr #31
   15e78:	subne	ip, r0, r1
   15e7c:	subeq	ip, r1, r0
   15e80:	cmp	ip, #0
   15e84:	bne	15c38 <__assert_fail@plt+0x4700>
   15e88:	ldr	r1, [r2, #4]
   15e8c:	ldr	r2, [sp, #4]
   15e90:	ldr	r2, [r2, #4]
   15e94:	sub	ip, r1, r2
   15e98:	cmp	ip, #0
   15e9c:	bne	15c38 <__assert_fail@plt+0x4700>
   15ea0:	ldr	r2, [sp]
   15ea4:	ldr	r1, [r3, #8]
   15ea8:	ldr	r0, [r2, #8]
   15eac:	mvn	r2, r1
   15eb0:	lsr	r2, r2, #31
   15eb4:	cmp	r2, r0, lsr #31
   15eb8:	subne	ip, r0, r1
   15ebc:	subeq	ip, r1, r0
   15ec0:	cmp	ip, #0
   15ec4:	bne	15c38 <__assert_fail@plt+0x4700>
   15ec8:	ldr	r1, [r3, #4]
   15ecc:	ldr	r3, [sp]
   15ed0:	ldr	r3, [r3, #4]
   15ed4:	sub	ip, r1, r3
   15ed8:	cmp	ip, #0
   15edc:	bne	15c38 <__assert_fail@plt+0x4700>
   15ee0:	ldr	r1, [fp, #8]
   15ee4:	ldr	r0, [sl, #8]
   15ee8:	mvn	r3, r1
   15eec:	lsr	r3, r3, #31
   15ef0:	cmp	r3, r0, lsr #31
   15ef4:	subne	ip, r0, r1
   15ef8:	subeq	ip, r1, r0
   15efc:	cmp	ip, #0
   15f00:	bne	15c38 <__assert_fail@plt+0x4700>
   15f04:	ldr	r3, [sl, #4]
   15f08:	ldr	r1, [fp, #4]
   15f0c:	sub	ip, r1, r3
   15f10:	cmp	ip, #0
   15f14:	bne	15c38 <__assert_fail@plt+0x4700>
   15f18:	ldr	r1, [r9, #8]
   15f1c:	ldr	r0, [r8, #8]
   15f20:	mvn	r3, r1
   15f24:	lsr	r3, r3, #31
   15f28:	cmp	r3, r0, lsr #31
   15f2c:	subne	ip, r0, r1
   15f30:	subeq	ip, r1, r0
   15f34:	cmp	ip, #0
   15f38:	bne	15c38 <__assert_fail@plt+0x4700>
   15f3c:	ldr	r3, [r8, #4]
   15f40:	ldr	r1, [r9, #4]
   15f44:	sub	ip, r1, r3
   15f48:	cmp	ip, #0
   15f4c:	bne	15c38 <__assert_fail@plt+0x4700>
   15f50:	ldr	r1, [r7, #8]
   15f54:	ldr	r0, [r4, #8]
   15f58:	mvn	r3, r1
   15f5c:	lsr	r3, r3, #31
   15f60:	cmp	r3, r0, lsr #31
   15f64:	subne	ip, r0, r1
   15f68:	subeq	ip, r1, r0
   15f6c:	cmp	ip, #0
   15f70:	bne	15c38 <__assert_fail@plt+0x4700>
   15f74:	ldr	r3, [r4, #4]
   15f78:	ldr	r1, [r7, #4]
   15f7c:	sub	ip, r1, r3
   15f80:	cmp	ip, #0
   15f84:	bne	15c38 <__assert_fail@plt+0x4700>
   15f88:	ldr	r1, [r6, #12]
   15f8c:	ldr	r0, [r5, #12]
   15f90:	mvn	r3, r1
   15f94:	lsr	r3, r3, #31
   15f98:	cmp	r3, r0, lsr #31
   15f9c:	subne	ip, r0, r1
   15fa0:	subeq	ip, r1, r0
   15fa4:	cmp	ip, #0
   15fa8:	bne	15c38 <__assert_fail@plt+0x4700>
   15fac:	ldm	r5, {r3, sl}
   15fb0:	cmp	sl, #0
   15fb4:	beq	164f4 <__assert_fail@plt+0x4fbc>
   15fb8:	add	r2, r3, #24
   15fbc:	mov	r1, sl
   15fc0:	ldr	r7, [r2, #-24]	; 0xffffffe8
   15fc4:	cmp	r7, #0
   15fc8:	beq	15fd8 <__assert_fail@plt+0x4aa0>
   15fcc:	ldr	r0, [r2, #-12]
   15fd0:	tst	r0, #2
   15fd4:	beq	15fe8 <__assert_fail@plt+0x4ab0>
   15fd8:	subs	r1, r1, #1
   15fdc:	add	r2, r2, #24
   15fe0:	bne	15fc0 <__assert_fail@plt+0x4a88>
   15fe4:	mov	r7, r1
   15fe8:	ldrd	r8, [r6]
   15fec:	cmp	r9, #0
   15ff0:	beq	164fc <__assert_fail@plt+0x4fc4>
   15ff4:	add	r2, r8, #24
   15ff8:	mov	r1, r9
   15ffc:	ldr	r4, [r2, #-24]	; 0xffffffe8
   16000:	cmp	r4, #0
   16004:	beq	16014 <__assert_fail@plt+0x4adc>
   16008:	ldr	r0, [r2, #-12]
   1600c:	tst	r0, #2
   16010:	beq	16024 <__assert_fail@plt+0x4aec>
   16014:	subs	r1, r1, #1
   16018:	add	r2, r2, #24
   1601c:	bne	15ffc <__assert_fail@plt+0x4ac4>
   16020:	mov	r4, r1
   16024:	ldr	r2, [r3, #12]
   16028:	tst	r2, #8
   1602c:	beq	160a0 <__assert_fail@plt+0x4b68>
   16030:	cmp	r7, #0
   16034:	beq	160a0 <__assert_fail@plt+0x4b68>
   16038:	str	r3, [sp]
   1603c:	bl	11394 <__ctype_b_loc@plt>
   16040:	ldrb	r1, [r7]
   16044:	ldr	r0, [r0]
   16048:	ldr	r3, [sp]
   1604c:	lsl	r2, r1, #1
   16050:	ldrh	r2, [r0, r2]
   16054:	tst	r2, #8192	; 0x2000
   16058:	beq	16070 <__assert_fail@plt+0x4b38>
   1605c:	ldrb	r1, [r7, #1]!
   16060:	lsl	r2, r1, #1
   16064:	ldrh	r2, [r0, r2]
   16068:	tst	r2, #8192	; 0x2000
   1606c:	bne	1605c <__assert_fail@plt+0x4b24>
   16070:	cmp	r1, #0
   16074:	bne	16090 <__assert_fail@plt+0x4b58>
   16078:	b	16384 <__assert_fail@plt+0x4e4c>
   1607c:	ldrb	r2, [r7, #1]!
   16080:	cmp	r2, #0
   16084:	lsl	ip, r2, #1
   16088:	beq	16098 <__assert_fail@plt+0x4b60>
   1608c:	ldrh	r2, [r0, ip]
   16090:	tst	r2, #8
   16094:	beq	1607c <__assert_fail@plt+0x4b44>
   16098:	cmp	r1, #45	; 0x2d
   1609c:	bne	16384 <__assert_fail@plt+0x4e4c>
   160a0:	ldr	r2, [r8, #12]
   160a4:	tst	r2, #8
   160a8:	bne	162a0 <__assert_fail@plt+0x4d68>
   160ac:	cmp	sl, #0
   160b0:	ldr	r2, [r5, #8]
   160b4:	ldr	r6, [r6, #8]
   160b8:	beq	16328 <__assert_fail@plt+0x4df0>
   160bc:	mov	fp, sl
   160c0:	mov	r5, r3
   160c4:	str	r7, [sp]
   160c8:	stmib	sp, {r4, r6}
   160cc:	mov	r4, r2
   160d0:	ldr	sl, [r5, #12]
   160d4:	mov	r0, #1
   160d8:	ands	r6, sl, #8
   160dc:	movne	r6, #0
   160e0:	bne	16130 <__assert_fail@plt+0x4bf8>
   160e4:	ldr	r7, [r5, #4]
   160e8:	sub	ip, r7, #1
   160ec:	cmp	ip, #254	; 0xfe
   160f0:	bhi	16130 <__assert_fail@plt+0x4bf8>
   160f4:	bl	11394 <__ctype_b_loc@plt>
   160f8:	ldr	lr, [r0]
   160fc:	lsl	ip, r7, #1
   16100:	mov	r0, #1
   16104:	ldrh	ip, [lr, ip]
   16108:	tst	ip, #16384	; 0x4000
   1610c:	beq	16130 <__assert_fail@plt+0x4bf8>
   16110:	ldrb	ip, [r4]
   16114:	cmp	r7, ip
   16118:	bne	16130 <__assert_fail@plt+0x4bf8>
   1611c:	and	sl, sl, #2
   16120:	add	r4, r4, r0
   16124:	cmp	sl, #0
   16128:	moveq	r6, r7
   1612c:	moveq	r0, #0
   16130:	subs	fp, fp, #1
   16134:	add	r5, r5, #24
   16138:	moveq	r0, #0
   1613c:	cmp	r0, #0
   16140:	bne	160d0 <__assert_fail@plt+0x4b98>
   16144:	uxtb	r3, r6
   16148:	mov	fp, r6
   1614c:	ldr	r7, [sp]
   16150:	cmp	r9, #0
   16154:	ldmib	sp, {r4, r6}
   16158:	str	r3, [sp]
   1615c:	strne	r4, [sp, #4]
   16160:	beq	16538 <__assert_fail@plt+0x5000>
   16164:	ldr	r5, [r8, #12]
   16168:	mov	r3, #1
   1616c:	ands	sl, r5, #8
   16170:	movne	sl, #0
   16174:	bne	161c4 <__assert_fail@plt+0x4c8c>
   16178:	ldr	r4, [r8, #4]
   1617c:	sub	r1, r4, #1
   16180:	cmp	r1, #254	; 0xfe
   16184:	bhi	161c4 <__assert_fail@plt+0x4c8c>
   16188:	bl	11394 <__ctype_b_loc@plt>
   1618c:	ldr	r0, [r0]
   16190:	lsl	r1, r4, #1
   16194:	mov	r3, #1
   16198:	ldrh	r1, [r0, r1]
   1619c:	tst	r1, #16384	; 0x4000
   161a0:	beq	161c4 <__assert_fail@plt+0x4c8c>
   161a4:	ldrb	r1, [r6]
   161a8:	cmp	r4, r1
   161ac:	bne	161c4 <__assert_fail@plt+0x4c8c>
   161b0:	and	r5, r5, #2
   161b4:	add	r6, r6, r3
   161b8:	cmp	r5, #0
   161bc:	moveq	sl, r4
   161c0:	moveq	r3, #0
   161c4:	subs	r9, r9, #1
   161c8:	add	r8, r8, #24
   161cc:	moveq	r3, #0
   161d0:	cmp	r3, #0
   161d4:	bne	16164 <__assert_fail@plt+0x4c2c>
   161d8:	cmp	fp, #0
   161dc:	uxtb	r6, sl
   161e0:	ldr	r4, [sp, #4]
   161e4:	beq	16368 <__assert_fail@plt+0x4e30>
   161e8:	ldr	r3, [sp]
   161ec:	lsl	r9, r3, #2
   161f0:	cmp	sl, #0
   161f4:	beq	16354 <__assert_fail@plt+0x4e1c>
   161f8:	lsl	r8, r6, #2
   161fc:	bl	11370 <__ctype_tolower_loc@plt>
   16200:	ldr	r3, [r0]
   16204:	ldr	r1, [r3, r9]
   16208:	ldr	r0, [r3, r8]
   1620c:	subs	ip, r1, r0
   16210:	bne	15c38 <__assert_fail@plt+0x4700>
   16214:	ldr	r3, [sp]
   16218:	subs	ip, r6, r3
   1621c:	bne	15c38 <__assert_fail@plt+0x4700>
   16220:	adds	r0, sl, #0
   16224:	movne	r0, #1
   16228:	cmp	fp, #0
   1622c:	rsbeq	ip, r0, #0
   16230:	rsbne	ip, r0, #1
   16234:	cmp	ip, #0
   16238:	bne	15c38 <__assert_fail@plt+0x4700>
   1623c:	cmp	fp, #0
   16240:	bne	15c38 <__assert_fail@plt+0x4700>
   16244:	adds	r0, r4, #0
   16248:	movne	r0, #1
   1624c:	cmp	r7, #0
   16250:	rsbeq	ip, r0, #0
   16254:	rsbne	ip, r0, #1
   16258:	cmp	ip, #0
   1625c:	bne	15c38 <__assert_fail@plt+0x4700>
   16260:	cmp	r7, #0
   16264:	beq	15c38 <__assert_fail@plt+0x4700>
   16268:	mov	r1, r4
   1626c:	mov	r0, r7
   16270:	add	sp, sp, #20
   16274:	ldrd	r4, [sp]
   16278:	ldrd	r6, [sp, #8]
   1627c:	ldrd	r8, [sp, #16]
   16280:	ldrd	sl, [sp, #24]
   16284:	ldr	lr, [sp, #32]
   16288:	add	sp, sp, #36	; 0x24
   1628c:	b	112bc <strcasecmp@plt>
   16290:	ldr	ip, [r1, #12]
   16294:	b	15a40 <__assert_fail@plt+0x4508>
   16298:	ldr	r2, [r0, #12]
   1629c:	b	15a18 <__assert_fail@plt+0x44e0>
   162a0:	cmp	r4, #0
   162a4:	movne	fp, #0
   162a8:	beq	160ac <__assert_fail@plt+0x4b74>
   162ac:	str	r3, [sp]
   162b0:	bl	11394 <__ctype_b_loc@plt>
   162b4:	ldrb	ip, [r4]
   162b8:	ldr	r1, [r0]
   162bc:	ldr	r3, [sp]
   162c0:	lsl	r2, ip, #1
   162c4:	ldrh	r2, [r1, r2]
   162c8:	tst	r2, #8192	; 0x2000
   162cc:	beq	162e4 <__assert_fail@plt+0x4dac>
   162d0:	ldrb	ip, [r4, #1]!
   162d4:	lsl	r2, ip, #1
   162d8:	ldrh	r2, [r1, r2]
   162dc:	tst	r2, #8192	; 0x2000
   162e0:	bne	162d0 <__assert_fail@plt+0x4d98>
   162e4:	cmp	ip, #0
   162e8:	bne	16304 <__assert_fail@plt+0x4dcc>
   162ec:	b	1630c <__assert_fail@plt+0x4dd4>
   162f0:	ldrb	r2, [r4, #1]!
   162f4:	cmp	r2, #0
   162f8:	lsl	r0, r2, #1
   162fc:	beq	1630c <__assert_fail@plt+0x4dd4>
   16300:	ldrh	r2, [r1, r0]
   16304:	tst	r2, #8
   16308:	beq	162f0 <__assert_fail@plt+0x4db8>
   1630c:	cmp	ip, #45	; 0x2d
   16310:	moveq	r0, fp
   16314:	subne	r0, fp, #1
   16318:	cmp	r0, #0
   1631c:	movne	ip, r0
   16320:	bne	15c38 <__assert_fail@plt+0x4700>
   16324:	b	160ac <__assert_fail@plt+0x4b74>
   16328:	cmp	r9, #0
   1632c:	movne	fp, sl
   16330:	strne	r4, [sp, #4]
   16334:	strne	fp, [sp]
   16338:	bne	16164 <__assert_fail@plt+0x4c2c>
   1633c:	cmp	r7, #0
   16340:	beq	16708 <__assert_fail@plt+0x51d0>
   16344:	ldrb	r3, [r7]
   16348:	mov	fp, sl
   1634c:	lsl	r9, r3, #2
   16350:	str	r3, [sp]
   16354:	cmp	r4, #0
   16358:	beq	16408 <__assert_fail@plt+0x4ed0>
   1635c:	ldrb	r6, [r4]
   16360:	mov	sl, #0
   16364:	b	161f8 <__assert_fail@plt+0x4cc0>
   16368:	cmp	r7, #0
   1636c:	beq	16418 <__assert_fail@plt+0x4ee0>
   16370:	ldrb	r3, [r7]
   16374:	mov	fp, #0
   16378:	lsl	r9, r3, #2
   1637c:	str	r3, [sp]
   16380:	b	161f0 <__assert_fail@plt+0x4cb8>
   16384:	ldr	r2, [r8, #12]
   16388:	tst	r2, #8
   1638c:	beq	16398 <__assert_fail@plt+0x4e60>
   16390:	cmp	r4, #0
   16394:	bne	16710 <__assert_fail@plt+0x51d8>
   16398:	mov	ip, #1
   1639c:	b	15c38 <__assert_fail@plt+0x4700>
   163a0:	ldr	lr, [r5, #4]
   163a4:	ldr	r1, [r5, #8]
   163a8:	ldr	r0, [r8, #8]
   163ac:	ldr	r2, [r8, #4]
   163b0:	mvn	r3, r1
   163b4:	lsr	r3, r3, #31
   163b8:	cmp	r3, r0, lsr #31
   163bc:	subne	ip, r0, r1
   163c0:	subeq	ip, r1, r0
   163c4:	cmp	ip, #0
   163c8:	subeq	ip, lr, r2
   163cc:	beq	15bf8 <__assert_fail@plt+0x46c0>
   163d0:	b	15c38 <__assert_fail@plt+0x4700>
   163d4:	ldr	r2, [r5, #4]
   163d8:	ldr	r1, [r6, #8]
   163dc:	ldr	r0, [r5, #8]
   163e0:	ldr	lr, [r6, #4]
   163e4:	mvn	r3, r1
   163e8:	lsr	r3, r3, #31
   163ec:	cmp	r3, r0, lsr #31
   163f0:	subne	ip, r0, r1
   163f4:	subeq	ip, r1, r0
   163f8:	cmp	ip, #0
   163fc:	subeq	ip, lr, r2
   16400:	beq	15d70 <__assert_fail@plt+0x4838>
   16404:	b	15c38 <__assert_fail@plt+0x4700>
   16408:	mov	sl, r4
   1640c:	mov	r8, r4
   16410:	mov	r6, r4
   16414:	b	161fc <__assert_fail@plt+0x4cc4>
   16418:	mov	r9, r7
   1641c:	str	r7, [sp]
   16420:	b	161f0 <__assert_fail@plt+0x4cb8>
   16424:	ldr	lr, [r7, #4]
   16428:	ldr	r1, [r7, #8]
   1642c:	ldr	r0, [r8, #8]
   16430:	ldr	r2, [r8, #4]
   16434:	mvn	r3, r1
   16438:	lsr	r3, r3, #31
   1643c:	cmp	r3, r0, lsr #31
   16440:	subne	ip, r0, r1
   16444:	subeq	ip, r1, r0
   16448:	cmp	ip, #0
   1644c:	subeq	ip, lr, r2
   16450:	beq	15de0 <__assert_fail@plt+0x48a8>
   16454:	b	15c38 <__assert_fail@plt+0x4700>
   16458:	ldr	r2, [r4, #4]
   1645c:	ldr	r1, [r9, #8]
   16460:	ldr	r0, [r4, #8]
   16464:	ldr	lr, [r9, #4]
   16468:	mvn	r3, r1
   1646c:	lsr	r3, r3, #31
   16470:	cmp	r3, r0, lsr #31
   16474:	subne	ip, r0, r1
   16478:	subeq	ip, r1, r0
   1647c:	cmp	ip, #0
   16480:	subeq	ip, lr, r2
   16484:	beq	15c30 <__assert_fail@plt+0x46f8>
   16488:	b	15c38 <__assert_fail@plt+0x4700>
   1648c:	ldr	r2, [r4, #4]
   16490:	ldr	r1, [r9, #8]
   16494:	ldr	r0, [r4, #8]
   16498:	ldr	lr, [r9, #4]
   1649c:	mvn	r3, r1
   164a0:	lsr	r3, r3, #31
   164a4:	cmp	r3, r0, lsr #31
   164a8:	subne	ip, r0, r1
   164ac:	subeq	ip, r1, r0
   164b0:	cmp	ip, #0
   164b4:	subeq	ip, lr, r2
   164b8:	beq	15da8 <__assert_fail@plt+0x4870>
   164bc:	b	15c38 <__assert_fail@plt+0x4700>
   164c0:	ldr	r2, [r6, #4]
   164c4:	ldr	r1, [r7, #8]
   164c8:	ldr	r0, [r6, #8]
   164cc:	ldr	lr, [r7, #4]
   164d0:	mvn	r3, r1
   164d4:	lsr	r3, r3, #31
   164d8:	cmp	r3, r0, lsr #31
   164dc:	subne	ip, r0, r1
   164e0:	subeq	ip, r1, r0
   164e4:	cmp	ip, #0
   164e8:	subeq	ip, lr, r2
   164ec:	beq	15bc0 <__assert_fail@plt+0x4688>
   164f0:	b	15c38 <__assert_fail@plt+0x4700>
   164f4:	mov	r7, ip
   164f8:	b	15fe8 <__assert_fail@plt+0x4ab0>
   164fc:	mov	r4, r9
   16500:	b	16024 <__assert_fail@plt+0x4aec>
   16504:	ldr	r2, [sl, #4]
   16508:	ldr	r1, [fp, #8]
   1650c:	ldr	r0, [sl, #8]
   16510:	ldr	lr, [fp, #4]
   16514:	mvn	r3, r1
   16518:	lsr	r3, r3, #31
   1651c:	cmp	r3, r0, lsr #31
   16520:	subne	ip, r0, r1
   16524:	subeq	ip, r1, r0
   16528:	cmp	ip, #0
   1652c:	subeq	ip, lr, r2
   16530:	beq	15d38 <__assert_fail@plt+0x4800>
   16534:	b	15c38 <__assert_fail@plt+0x4700>
   16538:	cmp	fp, #0
   1653c:	lslne	r9, fp, #2
   16540:	bne	16354 <__assert_fail@plt+0x4e1c>
   16544:	cmp	r7, #0
   16548:	movne	sl, fp
   1654c:	movne	r6, sl
   16550:	bne	16370 <__assert_fail@plt+0x4e38>
   16554:	str	r7, [sp]
   16558:	b	16354 <__assert_fail@plt+0x4e1c>
   1655c:	ldr	r2, [sl, #4]
   16560:	ldr	r1, [fp, #8]
   16564:	ldr	r0, [sl, #8]
   16568:	ldr	lr, [fp, #4]
   1656c:	mvn	r3, r1
   16570:	lsr	r3, r3, #31
   16574:	cmp	r3, r0, lsr #31
   16578:	subne	ip, r0, r1
   1657c:	subeq	ip, r1, r0
   16580:	cmp	ip, #0
   16584:	subeq	ip, lr, r2
   16588:	beq	15b88 <__assert_fail@plt+0x4650>
   1658c:	b	15c38 <__assert_fail@plt+0x4700>
   16590:	ldr	r0, [r3, #8]
   16594:	ldr	r1, [r2, #8]
   16598:	ldr	lr, [r2, #4]
   1659c:	ldr	r3, [r3, #4]
   165a0:	mvn	r2, r1
   165a4:	lsr	r2, r2, #31
   165a8:	cmp	r2, r0, lsr #31
   165ac:	subne	ip, r0, r1
   165b0:	subeq	ip, r1, r0
   165b4:	cmp	ip, #0
   165b8:	subeq	ip, lr, r3
   165bc:	beq	15d00 <__assert_fail@plt+0x47c8>
   165c0:	b	15c38 <__assert_fail@plt+0x4700>
   165c4:	ldr	r2, [r4, #4]
   165c8:	ldr	r1, [r7, #8]
   165cc:	ldr	r0, [r4, #8]
   165d0:	ldr	lr, [r7, #4]
   165d4:	mvn	r3, r1
   165d8:	lsr	r3, r3, #31
   165dc:	cmp	r3, r0, lsr #31
   165e0:	subne	ip, r0, r1
   165e4:	subeq	ip, r1, r0
   165e8:	cmp	ip, #0
   165ec:	subeq	ip, lr, r2
   165f0:	beq	15f80 <__assert_fail@plt+0x4a48>
   165f4:	b	15c38 <__assert_fail@plt+0x4700>
   165f8:	ldr	r0, [r3, #8]
   165fc:	ldr	r1, [r2, #8]
   16600:	ldr	lr, [r2, #4]
   16604:	ldr	r3, [r3, #4]
   16608:	mvn	r2, r1
   1660c:	lsr	r2, r2, #31
   16610:	cmp	r2, r0, lsr #31
   16614:	subne	ip, r0, r1
   16618:	subeq	ip, r1, r0
   1661c:	cmp	ip, #0
   16620:	subeq	ip, lr, r3
   16624:	beq	15b50 <__assert_fail@plt+0x4618>
   16628:	b	15c38 <__assert_fail@plt+0x4700>
   1662c:	ldr	r2, [r8, #4]
   16630:	ldr	r1, [r9, #8]
   16634:	ldr	r0, [r8, #8]
   16638:	ldr	lr, [r9, #4]
   1663c:	mvn	r3, r1
   16640:	lsr	r3, r3, #31
   16644:	cmp	r3, r0, lsr #31
   16648:	subne	ip, r0, r1
   1664c:	subeq	ip, r1, r0
   16650:	cmp	ip, #0
   16654:	subeq	ip, lr, r2
   16658:	beq	15f48 <__assert_fail@plt+0x4a10>
   1665c:	b	15c38 <__assert_fail@plt+0x4700>
   16660:	ldr	r2, [sl, #4]
   16664:	ldr	r1, [fp, #8]
   16668:	ldr	r0, [sl, #8]
   1666c:	ldr	lr, [fp, #4]
   16670:	mvn	r3, r1
   16674:	lsr	r3, r3, #31
   16678:	cmp	r3, r0, lsr #31
   1667c:	subne	ip, r0, r1
   16680:	subeq	ip, r1, r0
   16684:	cmp	ip, #0
   16688:	subeq	ip, lr, r2
   1668c:	beq	15f10 <__assert_fail@plt+0x49d8>
   16690:	b	15c38 <__assert_fail@plt+0x4700>
   16694:	ldr	ip, [sp]
   16698:	ldr	r2, [r3, #4]
   1669c:	ldr	r1, [r3, #8]
   166a0:	ldr	lr, [ip, #4]
   166a4:	ldr	r0, [ip, #8]
   166a8:	mvn	r3, r1
   166ac:	lsr	r3, r3, #31
   166b0:	cmp	r3, r0, lsr #31
   166b4:	subne	ip, r0, r1
   166b8:	subeq	ip, r1, r0
   166bc:	cmp	ip, #0
   166c0:	subeq	ip, r2, lr
   166c4:	beq	15ed8 <__assert_fail@plt+0x49a0>
   166c8:	b	15c38 <__assert_fail@plt+0x4700>
   166cc:	ldr	r0, [sp, #4]
   166d0:	ldr	lr, [r2, #4]
   166d4:	ldr	r1, [r2, #8]
   166d8:	ldr	r2, [sp, #4]
   166dc:	ldr	r0, [r0, #8]
   166e0:	mvn	ip, r1
   166e4:	lsr	ip, ip, #31
   166e8:	ldr	r2, [r2, #4]
   166ec:	cmp	ip, r0, lsr #31
   166f0:	subne	ip, r0, r1
   166f4:	subeq	ip, r1, r0
   166f8:	cmp	ip, #0
   166fc:	subeq	ip, lr, r2
   16700:	beq	15e98 <__assert_fail@plt+0x4960>
   16704:	b	15c38 <__assert_fail@plt+0x4700>
   16708:	mov	fp, r7
   1670c:	b	16554 <__assert_fail@plt+0x501c>
   16710:	mov	fp, #1
   16714:	b	162ac <__assert_fail@plt+0x4d74>

00016718 <argp_failure@@Base>:
   16718:	push	{r3}		; (str r3, [sp, #-4]!)
   1671c:	strd	r4, [sp, #-20]!	; 0xffffffec
   16720:	subs	r5, r0, #0
   16724:	strd	r6, [sp, #8]
   16728:	mov	r7, r1
   1672c:	mov	r6, r2
   16730:	str	lr, [sp, #16]
   16734:	sub	sp, sp, #200	; 0xc8
   16738:	beq	16894 <argp_failure@@Base+0x17c>
   1673c:	ldr	r3, [r5, #16]
   16740:	tst	r3, #2
   16744:	bne	16878 <argp_failure@@Base+0x160>
   16748:	ldr	r4, [r5, #44]	; 0x2c
   1674c:	cmp	r4, #0
   16750:	beq	16878 <argp_failure@@Base+0x160>
   16754:	mov	r0, r4
   16758:	bl	114b4 <flockfile@plt>
   1675c:	ldr	r0, [r5, #40]	; 0x28
   16760:	mov	r1, r4
   16764:	bl	111cc <fputs_unlocked@plt>
   16768:	ldr	r3, [sp, #220]	; 0xdc
   1676c:	cmp	r3, #0
   16770:	beq	167cc <argp_failure@@Base+0xb4>
   16774:	ldr	r3, [r4, #20]
   16778:	add	r1, sp, #224	; 0xe0
   1677c:	ldr	r2, [r4, #24]
   16780:	str	r1, [sp]
   16784:	cmp	r3, r2
   16788:	addcc	r1, r3, #1
   1678c:	movcc	r2, #58	; 0x3a
   16790:	strcc	r1, [r4, #20]
   16794:	strbcc	r2, [r3]
   16798:	bcs	16904 <argp_failure@@Base+0x1ec>
   1679c:	ldr	r3, [r4, #20]
   167a0:	ldr	r2, [r4, #24]
   167a4:	cmp	r3, r2
   167a8:	addcc	r1, r3, #1
   167ac:	movcc	r2, #32
   167b0:	strcc	r1, [r4, #20]
   167b4:	strbcc	r2, [r3]
   167b8:	bcs	168f4 <argp_failure@@Base+0x1dc>
   167bc:	mov	r0, r4
   167c0:	ldr	r2, [sp]
   167c4:	ldr	r1, [sp, #220]	; 0xdc
   167c8:	bl	11490 <vfprintf@plt>
   167cc:	cmp	r6, #0
   167d0:	ldr	r3, [r4, #20]
   167d4:	ldr	r2, [r4, #24]
   167d8:	beq	1683c <argp_failure@@Base+0x124>
   167dc:	cmp	r2, r3
   167e0:	addhi	r1, r3, #1
   167e4:	movhi	r2, #58	; 0x3a
   167e8:	strhi	r1, [r4, #20]
   167ec:	strbhi	r2, [r3]
   167f0:	bls	16924 <argp_failure@@Base+0x20c>
   167f4:	ldr	r3, [r4, #20]
   167f8:	ldr	r2, [r4, #24]
   167fc:	cmp	r3, r2
   16800:	addcc	r1, r3, #1
   16804:	movcc	r2, #32
   16808:	strcc	r1, [r4, #20]
   1680c:	strbcc	r2, [r3]
   16810:	bcs	16914 <argp_failure@@Base+0x1fc>
   16814:	mov	r2, #200	; 0xc8
   16818:	mov	r1, sp
   1681c:	mov	r0, r6
   16820:	bl	113f4 <strerror_r@plt>
   16824:	cmp	r0, #0
   16828:	beq	168d8 <argp_failure@@Base+0x1c0>
   1682c:	mov	r1, r4
   16830:	bl	111cc <fputs_unlocked@plt>
   16834:	ldr	r3, [r4, #20]
   16838:	ldr	r2, [r4, #24]
   1683c:	cmp	r3, r2
   16840:	addcc	r1, r3, #1
   16844:	movcc	r2, #10
   16848:	strcc	r1, [r4, #20]
   1684c:	strbcc	r2, [r3]
   16850:	bcs	168c8 <argp_failure@@Base+0x1b0>
   16854:	mov	r0, r4
   16858:	bl	112c8 <funlockfile@plt>
   1685c:	cmp	r7, #0
   16860:	beq	16878 <argp_failure@@Base+0x160>
   16864:	cmp	r5, #0
   16868:	beq	168c0 <argp_failure@@Base+0x1a8>
   1686c:	ldr	r3, [r5, #16]
   16870:	tst	r3, #32
   16874:	beq	168c0 <argp_failure@@Base+0x1a8>
   16878:	add	sp, sp, #200	; 0xc8
   1687c:	ldrd	r4, [sp]
   16880:	ldrd	r6, [sp, #8]
   16884:	ldr	lr, [sp, #16]
   16888:	add	sp, sp, #20
   1688c:	add	sp, sp, #4
   16890:	bx	lr
   16894:	movw	r3, #58448	; 0xe450
   16898:	movt	r3, #2
   1689c:	ldr	r4, [r3]
   168a0:	cmp	r4, #0
   168a4:	beq	16878 <argp_failure@@Base+0x160>
   168a8:	mov	r0, r4
   168ac:	bl	114b4 <flockfile@plt>
   168b0:	movw	r3, #58440	; 0xe448
   168b4:	movt	r3, #2
   168b8:	ldr	r0, [r3]
   168bc:	b	16760 <argp_failure@@Base+0x48>
   168c0:	mov	r0, r7
   168c4:	bl	113a0 <exit@plt>
   168c8:	mov	r1, #10
   168cc:	mov	r0, r4
   168d0:	bl	1146c <__overflow@plt>
   168d4:	b	16854 <argp_failure@@Base+0x13c>
   168d8:	mov	r0, r6
   168dc:	bl	11364 <strerror@plt>
   168e0:	cmp	r0, #0
   168e4:	movw	r3, #53444	; 0xd0c4
   168e8:	movt	r3, #1
   168ec:	moveq	r0, r3
   168f0:	b	1682c <argp_failure@@Base+0x114>
   168f4:	mov	r1, #32
   168f8:	mov	r0, r4
   168fc:	bl	1146c <__overflow@plt>
   16900:	b	167bc <argp_failure@@Base+0xa4>
   16904:	mov	r1, #58	; 0x3a
   16908:	mov	r0, r4
   1690c:	bl	1146c <__overflow@plt>
   16910:	b	1679c <argp_failure@@Base+0x84>
   16914:	mov	r1, #32
   16918:	mov	r0, r4
   1691c:	bl	1146c <__overflow@plt>
   16920:	b	16814 <argp_failure@@Base+0xfc>
   16924:	mov	r1, #58	; 0x3a
   16928:	mov	r0, r4
   1692c:	bl	1146c <__overflow@plt>
   16930:	b	167f4 <argp_failure@@Base+0xdc>
   16934:	cmp	r2, #0
   16938:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1693c:	strd	r6, [sp, #8]
   16940:	strd	r8, [sp, #16]
   16944:	strd	sl, [sp, #24]
   16948:	add	fp, sp, #32
   1694c:	str	lr, [sp, #32]
   16950:	sub	sp, sp, #124	; 0x7c
   16954:	str	r2, [fp, #-132]	; 0xffffff7c
   16958:	str	r0, [fp, #-108]	; 0xffffff94
   1695c:	str	r3, [fp, #-104]	; 0xffffff98
   16960:	str	r1, [fp, #-100]	; 0xffffff9c
   16964:	beq	16e18 <argp_failure@@Base+0x700>
   16968:	mov	r0, r2
   1696c:	movw	r9, #58376	; 0xe408
   16970:	movt	r9, #2
   16974:	bl	114b4 <flockfile@plt>
   16978:	ldr	r3, [r9, #36]	; 0x24
   1697c:	cmp	r3, #0
   16980:	beq	16e34 <argp_failure@@Base+0x71c>
   16984:	mov	r3, #0
   16988:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1698c:	mov	r1, r3
   16990:	ldr	r2, [r9, #32]
   16994:	bl	1ac0c <argp_parse@@Base+0x24e8>
   16998:	subs	r7, r0, #0
   1699c:	beq	17c90 <argp_failure@@Base+0x1578>
   169a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   169a4:	ands	r3, r3, #11
   169a8:	streq	r3, [fp, #-112]	; 0xffffff90
   169ac:	bne	171c0 <argp_failure@@Base+0xaa8>
   169b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   169b4:	ands	r4, r3, #3
   169b8:	bne	17004 <argp_failure@@Base+0x8ec>
   169bc:	ldr	r3, [fp, #-104]	; 0xffffff98
   169c0:	tst	r3, #16
   169c4:	bne	16fd0 <argp_failure@@Base+0x8b8>
   169c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   169cc:	tst	r3, #4
   169d0:	and	r5, r3, #8
   169d4:	bne	16f48 <argp_failure@@Base+0x830>
   169d8:	cmp	r5, #0
   169dc:	beq	16d84 <argp_failure@@Base+0x66c>
   169e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   169e4:	ldr	r3, [r3, #4]
   169e8:	cmp	r3, #0
   169ec:	str	r3, [fp, #-116]	; 0xffffff8c
   169f0:	beq	16d84 <argp_failure@@Base+0x66c>
   169f4:	cmp	r4, #0
   169f8:	bne	16f78 <argp_failure@@Base+0x860>
   169fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   16a00:	ldr	r3, [r3]
   16a04:	str	r4, [fp, #-88]	; 0xffffffa8
   16a08:	str	r4, [fp, #-84]	; 0xffffffac
   16a0c:	str	r4, [fp, #-80]	; 0xffffffb0
   16a10:	mov	r0, r3
   16a14:	movw	r3, #54280	; 0xd408
   16a18:	movt	r3, #1
   16a1c:	ldr	r2, [r7, #16]
   16a20:	str	r3, [fp, #-140]	; 0xffffff74
   16a24:	movw	r3, #53892	; 0xd284
   16a28:	movt	r3, #1
   16a2c:	ldr	r1, [r7, #24]
   16a30:	str	r3, [fp, #-144]	; 0xffffff70
   16a34:	ldr	r3, [r7, #28]
   16a38:	str	r9, [fp, #-96]	; 0xffffffa0
   16a3c:	mov	r9, r0
   16a40:	sub	r3, r3, r1
   16a44:	ldr	r4, [r9]
   16a48:	cmp	r3, r2
   16a4c:	ldr	r8, [r9, #8]
   16a50:	bhi	17714 <argp_failure@@Base+0xffc>
   16a54:	mov	r1, #1
   16a58:	ldr	r0, [r7, #4]
   16a5c:	ldr	r6, [r4, #12]
   16a60:	str	r0, [fp, #-120]	; 0xffffff88
   16a64:	mov	r0, #0
   16a68:	str	r0, [r7, #4]
   16a6c:	ldr	r0, [r7, #12]
   16a70:	str	r1, [fp, #-64]	; 0xffffffc0
   16a74:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16a78:	str	r0, [fp, #-124]	; 0xffffff84
   16a7c:	ands	r0, r6, #8
   16a80:	str	r9, [fp, #-76]	; 0xffffffb4
   16a84:	str	r0, [fp, #-128]	; 0xffffff80
   16a88:	sub	r0, fp, #88	; 0x58
   16a8c:	str	r7, [fp, #-72]	; 0xffffffb8
   16a90:	str	r1, [fp, #-60]	; 0xffffffc4
   16a94:	movne	r1, #0
   16a98:	str	r0, [fp, #-68]	; 0xffffffbc
   16a9c:	strne	r1, [fp, #-128]	; 0xffffff80
   16aa0:	bne	16ad8 <argp_failure@@Base+0x3c0>
   16aa4:	ldr	r0, [r9, #4]
   16aa8:	cmp	r0, #0
   16aac:	beq	16ad8 <argp_failure@@Base+0x3c0>
   16ab0:	add	r1, r4, #24
   16ab4:	ldr	ip, [r1, #-24]	; 0xffffffe8
   16ab8:	cmp	ip, #0
   16abc:	beq	16acc <argp_failure@@Base+0x3b4>
   16ac0:	ldr	ip, [r1, #-12]
   16ac4:	tst	ip, #2
   16ac8:	beq	17844 <argp_failure@@Base+0x112c>
   16acc:	subs	r0, r0, #1
   16ad0:	add	r1, r1, #24
   16ad4:	bne	16ab4 <argp_failure@@Base+0x39c>
   16ad8:	cmp	r3, r2
   16adc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16ae0:	ldr	r5, [r3, #8]
   16ae4:	bhi	17708 <argp_failure@@Base+0xff0>
   16ae8:	str	r5, [r7, #12]
   16aec:	ldr	sl, [r9, #4]
   16af0:	cmp	sl, #0
   16af4:	beq	16b64 <argp_failure@@Base+0x44c>
   16af8:	mov	r5, r4
   16afc:	str	r9, [fp, #-136]	; 0xffffff78
   16b00:	mov	r9, r7
   16b04:	mov	r7, r4
   16b08:	mov	r4, r8
   16b0c:	ldr	r8, [r5, #12]
   16b10:	tst	r8, #8
   16b14:	bne	16b4c <argp_failure@@Base+0x434>
   16b18:	ldr	r6, [r5, #4]
   16b1c:	sub	r2, r6, #1
   16b20:	cmp	r2, #254	; 0xfe
   16b24:	bhi	16b4c <argp_failure@@Base+0x434>
   16b28:	bl	11394 <__ctype_b_loc@plt>
   16b2c:	ldr	r1, [r0]
   16b30:	lsl	r2, r6, #1
   16b34:	ldrh	r2, [r1, r2]
   16b38:	tst	r2, #16384	; 0x4000
   16b3c:	beq	16b4c <argp_failure@@Base+0x434>
   16b40:	ldrb	r2, [r4]
   16b44:	cmp	r6, r2
   16b48:	beq	17318 <argp_failure@@Base+0xc00>
   16b4c:	subs	sl, sl, #1
   16b50:	add	r5, r5, #24
   16b54:	bne	16b0c <argp_failure@@Base+0x3f4>
   16b58:	mov	r4, r7
   16b5c:	mov	r7, r9
   16b60:	ldr	r9, [fp, #-136]	; 0xffffff78
   16b64:	ldr	r2, [r4, #12]
   16b68:	ldr	r1, [r7, #24]
   16b6c:	ldr	r3, [r7, #28]
   16b70:	tst	r2, #8
   16b74:	ldr	r2, [r7, #16]
   16b78:	sub	r3, r3, r1
   16b7c:	beq	17328 <argp_failure@@Base+0xc10>
   16b80:	cmp	r3, r2
   16b84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16b88:	ldr	r5, [r3, #16]
   16b8c:	bhi	178a8 <argp_failure@@Base+0x1190>
   16b90:	str	r5, [r7, #12]
   16b94:	ldr	r6, [r9, #4]
   16b98:	cmp	r6, #0
   16b9c:	addne	r5, r4, #24
   16ba0:	bne	16bb4 <argp_failure@@Base+0x49c>
   16ba4:	b	16c44 <argp_failure@@Base+0x52c>
   16ba8:	subs	r6, r6, #1
   16bac:	add	r5, r5, #24
   16bb0:	beq	16c44 <argp_failure@@Base+0x52c>
   16bb4:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16bb8:	cmp	r3, #0
   16bbc:	beq	16ba8 <argp_failure@@Base+0x490>
   16bc0:	ldr	r3, [r5, #-12]
   16bc4:	tst	r3, #2
   16bc8:	bne	16ba8 <argp_failure@@Base+0x490>
   16bcc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16bd0:	sub	r1, fp, #76	; 0x4c
   16bd4:	ldr	r0, [r3, #16]
   16bd8:	bl	151b8 <__assert_fail@plt+0x3c80>
   16bdc:	ldr	sl, [r5, #-24]	; 0xffffffe8
   16be0:	mov	r0, sl
   16be4:	bl	113b8 <strlen@plt>
   16be8:	subs	r8, r0, #0
   16bec:	beq	16ba8 <argp_failure@@Base+0x490>
   16bf0:	ldr	ip, [r7, #28]
   16bf4:	mov	r1, r8
   16bf8:	mov	r0, r7
   16bfc:	ldr	lr, [r7, #32]
   16c00:	add	r2, ip, r8
   16c04:	cmp	lr, r2
   16c08:	bcs	16c1c <argp_failure@@Base+0x504>
   16c0c:	bl	1b334 <argp_parse@@Base+0x2c10>
   16c10:	cmp	r0, #0
   16c14:	beq	16ba8 <argp_failure@@Base+0x490>
   16c18:	ldr	ip, [r7, #28]
   16c1c:	mov	r2, r8
   16c20:	mov	r1, sl
   16c24:	mov	r0, ip
   16c28:	add	r5, r5, #24
   16c2c:	bl	11268 <memcpy@plt>
   16c30:	ldr	r2, [r7, #28]
   16c34:	subs	r6, r6, #1
   16c38:	add	r3, r2, r8
   16c3c:	str	r3, [r7, #28]
   16c40:	bne	16bb4 <argp_failure@@Base+0x49c>
   16c44:	ldr	r2, [r7, #16]
   16c48:	ldr	r1, [r7, #24]
   16c4c:	ldr	r3, [r7, #28]
   16c50:	sub	r3, r3, r1
   16c54:	cmp	r3, r2
   16c58:	bhi	176fc <argp_failure@@Base+0xfe4>
   16c5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16c60:	mov	r2, #0
   16c64:	str	r2, [r7, #4]
   16c68:	cmp	r3, r2
   16c6c:	beq	173dc <argp_failure@@Base+0xcc4>
   16c70:	ldr	r3, [r4, #12]
   16c74:	tst	r3, #8
   16c78:	bne	16ca4 <argp_failure@@Base+0x58c>
   16c7c:	ldr	r5, [r4, #4]
   16c80:	sub	r3, r5, #1
   16c84:	cmp	r3, #254	; 0xfe
   16c88:	bhi	16ca4 <argp_failure@@Base+0x58c>
   16c8c:	bl	11394 <__ctype_b_loc@plt>
   16c90:	ldr	r3, [r0]
   16c94:	lsl	r5, r5, #1
   16c98:	ldrh	r3, [r3, r5]
   16c9c:	tst	r3, #16384	; 0x4000
   16ca0:	bne	16cb0 <argp_failure@@Base+0x598>
   16ca4:	ldr	r3, [r4]
   16ca8:	cmp	r3, #0
   16cac:	beq	179dc <argp_failure@@Base+0x12c4>
   16cb0:	ldr	r2, [r7, #16]
   16cb4:	ldr	r1, [r7, #24]
   16cb8:	ldr	r3, [r7, #28]
   16cbc:	sub	r0, r3, r1
   16cc0:	cmp	r0, r2
   16cc4:	bhi	17730 <argp_failure@@Base+0x1018>
   16cc8:	ldr	r0, [fp, #-120]	; 0xffffff88
   16ccc:	str	r0, [r7, #4]
   16cd0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   16cd4:	add	r9, r9, #28
   16cd8:	subs	r0, r0, #1
   16cdc:	str	r0, [fp, #-116]	; 0xffffff8c
   16ce0:	ldr	r0, [fp, #-124]	; 0xffffff84
   16ce4:	str	r0, [r7, #12]
   16ce8:	bne	16a40 <argp_failure@@Base+0x328>
   16cec:	ldr	r9, [fp, #-96]	; 0xffffffa0
   16cf0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16cf4:	cmp	r3, #0
   16cf8:	beq	16d80 <argp_failure@@Base+0x668>
   16cfc:	ldr	r3, [r9, #4]
   16d00:	cmp	r3, #0
   16d04:	beq	16d80 <argp_failure@@Base+0x668>
   16d08:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16d0c:	cmp	r1, #0
   16d10:	beq	17db8 <argp_failure@@Base+0x16a0>
   16d14:	ldr	r5, [r1]
   16d18:	cmp	r5, #0
   16d1c:	beq	17ea8 <argp_failure@@Base+0x1790>
   16d20:	ldr	r4, [r5, #20]
   16d24:	cmp	r4, #0
   16d28:	beq	17e48 <argp_failure@@Base+0x1730>
   16d2c:	mov	r0, r5
   16d30:	movw	r4, #53468	; 0xd0dc
   16d34:	movt	r4, #1
   16d38:	bl	195dc <argp_parse@@Base+0xeb8>
   16d3c:	mov	r2, r0
   16d40:	mov	r1, r4
   16d44:	ldr	r3, [r5, #20]
   16d48:	mov	r0, #5
   16d4c:	movt	r0, #512	; 0x200
   16d50:	blx	r3
   16d54:	subs	r5, r0, #0
   16d58:	beq	16d80 <argp_failure@@Base+0x668>
   16d5c:	ldrb	r3, [r5]
   16d60:	subs	r4, r5, r4
   16d64:	movne	r4, #1
   16d68:	cmp	r3, #0
   16d6c:	bne	17dc4 <argp_failure@@Base+0x16ac>
   16d70:	cmp	r4, #0
   16d74:	beq	16d80 <argp_failure@@Base+0x668>
   16d78:	mov	r0, r5
   16d7c:	bl	1975c <argp_parse@@Base+0x1038>
   16d80:	mov	r4, #1
   16d84:	ldr	r3, [fp, #-104]	; 0xffffff98
   16d88:	tst	r3, #32
   16d8c:	bne	172b4 <argp_failure@@Base+0xb9c>
   16d90:	ldr	r3, [fp, #-104]	; 0xffffff98
   16d94:	tst	r3, #64	; 0x40
   16d98:	beq	16dc8 <argp_failure@@Base+0x6b0>
   16d9c:	movw	r5, #61372	; 0xefbc
   16da0:	movt	r5, #2
   16da4:	ldr	r2, [r5]
   16da8:	cmp	r2, #0
   16dac:	beq	16dc8 <argp_failure@@Base+0x6b0>
   16db0:	cmp	r4, #0
   16db4:	bne	172f0 <argp_failure@@Base+0xbd8>
   16db8:	movw	r1, #53924	; 0xd2a4
   16dbc:	movt	r1, #1
   16dc0:	mov	r0, r7
   16dc4:	bl	1b354 <argp_parse@@Base+0x2c30>
   16dc8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16dcc:	bl	112c8 <funlockfile@plt>
   16dd0:	ldr	r3, [fp, #-112]	; 0xffffff90
   16dd4:	cmp	r3, #0
   16dd8:	beq	16e10 <argp_failure@@Base+0x6f8>
   16ddc:	ldr	r0, [r3, #12]
   16de0:	cmp	r0, #0
   16de4:	beq	16df8 <argp_failure@@Base+0x6e0>
   16de8:	ldr	r4, [r0, #24]
   16dec:	bl	1975c <argp_parse@@Base+0x1038>
   16df0:	subs	r0, r4, #0
   16df4:	bne	16de8 <argp_failure@@Base+0x6d0>
   16df8:	ldr	r3, [fp, #-112]	; 0xffffff90
   16dfc:	ldr	r3, [r3, #4]
   16e00:	cmp	r3, #0
   16e04:	bne	17b48 <argp_failure@@Base+0x1430>
   16e08:	ldr	r0, [fp, #-112]	; 0xffffff90
   16e0c:	bl	1975c <argp_parse@@Base+0x1038>
   16e10:	mov	r0, r7
   16e14:	bl	1b204 <argp_parse@@Base+0x2ae0>
   16e18:	sub	sp, fp, #32
   16e1c:	ldrd	r4, [sp]
   16e20:	ldrd	r6, [sp, #8]
   16e24:	ldrd	r8, [sp, #16]
   16e28:	ldrd	sl, [sp, #24]
   16e2c:	add	sp, sp, #32
   16e30:	pop	{pc}		; (ldr pc, [sp], #4)
   16e34:	movw	r0, #53584	; 0xd150
   16e38:	movt	r0, #1
   16e3c:	bl	11334 <getenv@plt>
   16e40:	subs	r8, r0, #0
   16e44:	ldrd	r2, [r9]
   16e48:	sub	sl, fp, #76	; 0x4c
   16e4c:	ldrd	r0, [r9, #8]
   16e50:	ldrd	r4, [r9, #16]
   16e54:	strd	r2, [fp, #-76]	; 0xffffffb4
   16e58:	ldrd	r2, [r9, #24]
   16e5c:	strd	r0, [sl, #8]
   16e60:	ldrd	r0, [r9, #32]
   16e64:	strd	r4, [sl, #16]
   16e68:	strd	r2, [sl, #24]
   16e6c:	strd	r0, [sl, #32]
   16e70:	beq	16984 <argp_failure@@Base+0x26c>
   16e74:	ldrb	r6, [r8]
   16e78:	cmp	r6, #0
   16e7c:	beq	16ec8 <argp_failure@@Base+0x7b0>
   16e80:	bl	11394 <__ctype_b_loc@plt>
   16e84:	mov	r3, r0
   16e88:	mov	r0, r6
   16e8c:	mov	r6, r3
   16e90:	ldr	r1, [r6]
   16e94:	lsl	r3, r0, #1
   16e98:	ldrh	r3, [r1, r3]
   16e9c:	tst	r3, #8192	; 0x2000
   16ea0:	beq	16eb8 <argp_failure@@Base+0x7a0>
   16ea4:	ldrb	r0, [r8, #1]!
   16ea8:	lsl	r3, r0, #1
   16eac:	ldrh	r3, [r1, r3]
   16eb0:	tst	r3, #8192	; 0x2000
   16eb4:	bne	16ea4 <argp_failure@@Base+0x78c>
   16eb8:	ands	r2, r3, #1024	; 0x400
   16ebc:	bne	17580 <argp_failure@@Base+0xe68>
   16ec0:	cmp	r0, #0
   16ec4:	bne	17c9c <argp_failure@@Base+0x1584>
   16ec8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16ecc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ed0:	cmp	r3, r2
   16ed4:	ble	17e54 <argp_failure@@Base+0x173c>
   16ed8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16edc:	cmp	r3, r2
   16ee0:	ble	17e80 <argp_failure@@Base+0x1768>
   16ee4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16ee8:	cmp	r3, r2
   16eec:	ble	17e88 <argp_failure@@Base+0x1770>
   16ef0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ef4:	cmp	r3, r2
   16ef8:	ble	17e90 <argp_failure@@Base+0x1778>
   16efc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f00:	cmp	r3, r2
   16f04:	ble	17e98 <argp_failure@@Base+0x1780>
   16f08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16f0c:	cmp	r3, r2
   16f10:	ble	17ea0 <argp_failure@@Base+0x1788>
   16f14:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   16f18:	mov	ip, #1
   16f1c:	ldrd	r4, [sl, #8]
   16f20:	ldrd	r2, [sl, #32]
   16f24:	strd	r0, [r9]
   16f28:	ldrd	r0, [sl, #24]
   16f2c:	strd	r4, [r9, #8]
   16f30:	strd	r2, [r9, #32]
   16f34:	ldrd	r2, [sl, #16]
   16f38:	strd	r2, [r9, #16]
   16f3c:	strd	r0, [r9, #24]
   16f40:	str	ip, [r9, #36]	; 0x24
   16f44:	b	16984 <argp_failure@@Base+0x26c>
   16f48:	ldr	r3, [fp, #4]
   16f4c:	movw	r1, #53836	; 0xd24c
   16f50:	movt	r1, #1
   16f54:	mov	r0, r7
   16f58:	mov	r2, r3
   16f5c:	bl	1b354 <argp_parse@@Base+0x2c30>
   16f60:	cmp	r5, #0
   16f64:	beq	16d80 <argp_failure@@Base+0x668>
   16f68:	ldr	r3, [fp, #-112]	; 0xffffff90
   16f6c:	ldr	r3, [r3, #4]
   16f70:	cmp	r3, #0
   16f74:	beq	16d80 <argp_failure@@Base+0x668>
   16f78:	ldr	r3, [r7, #28]
   16f7c:	ldr	r2, [r7, #32]
   16f80:	cmp	r3, r2
   16f84:	bcs	17cf0 <argp_failure@@Base+0x15d8>
   16f88:	add	r1, r3, #1
   16f8c:	mov	r2, #10
   16f90:	str	r1, [r7, #28]
   16f94:	strb	r2, [r3]
   16f98:	ldr	r3, [fp, #-112]	; 0xffffff90
   16f9c:	ldr	r3, [r3, #4]
   16fa0:	mov	r2, r3
   16fa4:	str	r3, [fp, #-116]	; 0xffffff8c
   16fa8:	mov	r3, #0
   16fac:	cmp	r2, r3
   16fb0:	ldr	r2, [fp, #-112]	; 0xffffff90
   16fb4:	ldr	r2, [r2]
   16fb8:	str	r3, [fp, #-88]	; 0xffffffa8
   16fbc:	str	r3, [fp, #-84]	; 0xffffffac
   16fc0:	str	r3, [fp, #-80]	; 0xffffffb0
   16fc4:	mov	r0, r2
   16fc8:	bne	16a14 <argp_failure@@Base+0x2fc>
   16fcc:	b	16d80 <argp_failure@@Base+0x668>
   16fd0:	mov	r0, #1
   16fd4:	mov	r3, #0
   16fd8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16fdc:	mov	r2, r3
   16fe0:	stm	sp, {r0, r7}
   16fe4:	ldr	r0, [fp, #-108]	; 0xffffff94
   16fe8:	bl	15404 <__assert_fail@plt+0x3ecc>
   16fec:	ldr	r3, [fp, #-104]	; 0xffffff98
   16ff0:	orr	r4, r4, r0
   16ff4:	tst	r3, #4
   16ff8:	and	r5, r3, #8
   16ffc:	beq	169d8 <argp_failure@@Base+0x2c0>
   17000:	b	16f48 <argp_failure@@Base+0x830>
   17004:	ldr	r3, [fp, #-108]	; 0xffffff94
   17008:	ldr	r0, [r3, #8]
   1700c:	ldr	r5, [r3, #16]
   17010:	cmp	r0, #0
   17014:	moveq	r4, r0
   17018:	beq	1702c <argp_failure@@Base+0x914>
   1701c:	mov	r1, #10
   17020:	bl	113c4 <strchr@plt>
   17024:	adds	r4, r0, #0
   17028:	movne	r4, #1
   1702c:	cmp	r5, #0
   17030:	beq	1705c <argp_failure@@Base+0x944>
   17034:	ldr	r3, [r5]
   17038:	cmp	r3, #0
   1703c:	beq	1705c <argp_failure@@Base+0x944>
   17040:	ldr	r0, [r3, #8]
   17044:	ldr	r1, [r3, #16]
   17048:	bl	13ff4 <__assert_fail@plt+0x2abc>
   1704c:	ldr	r3, [r5, #16]!
   17050:	add	r4, r4, r0
   17054:	cmp	r3, #0
   17058:	bne	17040 <argp_failure@@Base+0x928>
   1705c:	add	r3, r4, #7
   17060:	sub	sl, fp, #76	; 0x4c
   17064:	bic	r3, r3, #7
   17068:	movw	r8, #53804	; 0xd22c
   1706c:	movt	r8, #1
   17070:	sub	sp, sp, r3
   17074:	movw	r3, #53812	; 0xd234
   17078:	movt	r3, #1
   1707c:	mov	r2, r4
   17080:	mov	r1, #0
   17084:	str	r3, [fp, #-124]	; 0xffffff84
   17088:	add	r3, sp, #8
   1708c:	mov	r4, #1
   17090:	mov	r0, r3
   17094:	str	r3, [fp, #-96]	; 0xffffffa0
   17098:	movw	r3, #53796	; 0xd224
   1709c:	movt	r3, #1
   170a0:	str	r3, [fp, #-128]	; 0xffffff80
   170a4:	bl	1140c <memset@plt>
   170a8:	str	r8, [fp, #-120]	; 0xffffff88
   170ac:	str	sl, [fp, #-116]	; 0xffffff8c
   170b0:	ldr	sl, [fp, #-112]	; 0xffffff90
   170b4:	ldr	r8, [fp, #-104]	; 0xffffff98
   170b8:	b	17198 <argp_failure@@Base+0xa80>
   170bc:	cmp	r4, #0
   170c0:	mov	r0, r7
   170c4:	ldr	r1, [fp, #-120]	; 0xffffff88
   170c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   170cc:	ldrne	r2, [fp, #-128]	; 0xffffff80
   170d0:	ldreq	r2, [fp, #-124]	; 0xffffff84
   170d4:	ldr	r4, [r7, #12]
   170d8:	str	r5, [r7, #12]
   170dc:	str	r3, [fp, #-76]	; 0xffffffb4
   170e0:	ldr	r3, [fp, #4]
   170e4:	bl	1b354 <argp_parse@@Base+0x2c30>
   170e8:	ldr	r2, [r7, #16]
   170ec:	ldr	r1, [r7, #24]
   170f0:	ldr	r3, [r7, #28]
   170f4:	ldr	r5, [r9, #28]
   170f8:	sub	r3, r3, r1
   170fc:	cmp	r3, r2
   17100:	bhi	172a8 <argp_failure@@Base+0xb90>
   17104:	tst	r8, #2
   17108:	ldr	r6, [r7, #4]
   1710c:	str	r5, [r7, #4]
   17110:	beq	17294 <argp_failure@@Base+0xb7c>
   17114:	ldr	r3, [sl, #4]
   17118:	cmp	r3, #0
   1711c:	bne	17a80 <argp_failure@@Base+0x1368>
   17120:	mov	r3, #1
   17124:	str	r7, [sp]
   17128:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1712c:	ldr	r0, [fp, #-108]	; 0xffffff94
   17130:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17134:	bl	1475c <__assert_fail@plt+0x3224>
   17138:	ldr	r1, [r7, #16]
   1713c:	mov	r5, r0
   17140:	ldrd	r2, [r7, #24]
   17144:	sub	r2, r3, r2
   17148:	cmp	r2, r1
   1714c:	strls	r4, [r7, #12]
   17150:	bhi	17264 <argp_failure@@Base+0xb4c>
   17154:	ldr	r2, [r7, #32]
   17158:	str	r6, [r7, #4]
   1715c:	cmp	r2, r3
   17160:	bhi	1717c <argp_failure@@Base+0xa64>
   17164:	mov	r1, #1
   17168:	mov	r0, r7
   1716c:	bl	1b334 <argp_parse@@Base+0x2c10>
   17170:	cmp	r0, #0
   17174:	beq	1718c <argp_failure@@Base+0xa74>
   17178:	ldr	r3, [r7, #28]
   1717c:	add	r1, r3, #1
   17180:	mov	r2, #10
   17184:	str	r1, [r7, #28]
   17188:	strb	r2, [r3]
   1718c:	cmp	r5, #0
   17190:	mov	r4, #0
   17194:	beq	172d8 <argp_failure@@Base+0xbc0>
   17198:	ldr	r2, [r7, #16]
   1719c:	ldr	r1, [r7, #24]
   171a0:	ldr	r3, [r7, #28]
   171a4:	ldr	r5, [r9, #28]
   171a8:	sub	r3, r3, r1
   171ac:	cmp	r3, r2
   171b0:	bls	170bc <argp_failure@@Base+0x9a4>
   171b4:	mov	r0, r7
   171b8:	bl	1aca4 <argp_parse@@Base+0x2580>
   171bc:	b	170bc <argp_failure@@Base+0x9a4>
   171c0:	mov	r1, #0
   171c4:	ldr	r0, [fp, #-108]	; 0xffffff94
   171c8:	bl	14060 <__assert_fail@plt+0x2b28>
   171cc:	ldr	r5, [r0]
   171d0:	mov	r3, r0
   171d4:	ldr	r2, [r0, #4]
   171d8:	cmp	r2, #0
   171dc:	sub	r4, r2, #1
   171e0:	strd	r2, [fp, #-116]	; 0xffffff8c
   171e4:	str	r5, [fp, #-96]	; 0xffffffa0
   171e8:	beq	169b0 <argp_failure@@Base+0x298>
   171ec:	movw	r6, #53780	; 0xd214
   171f0:	movt	r6, #1
   171f4:	str	r4, [fp, #-120]	; 0xffffff88
   171f8:	mov	sl, r4
   171fc:	ldr	r8, [r5]
   17200:	ldr	r3, [r5, #4]
   17204:	cmp	r3, #0
   17208:	sub	r4, r3, #1
   1720c:	beq	1724c <argp_failure@@Base+0xb34>
   17210:	add	r8, r8, #24
   17214:	ldr	r0, [r8, #-24]	; 0xffffffe8
   17218:	sub	r4, r4, #1
   1721c:	cmp	r0, #0
   17220:	beq	17240 <argp_failure@@Base+0xb28>
   17224:	ldr	r3, [r8, #-12]
   17228:	mov	r1, r6
   1722c:	tst	r3, #2
   17230:	bne	17240 <argp_failure@@Base+0xb28>
   17234:	bl	111d8 <strcmp@plt>
   17238:	cmp	r0, #0
   1723c:	beq	178f4 <argp_failure@@Base+0x11dc>
   17240:	cmn	r4, #1
   17244:	add	r8, r8, #24
   17248:	bne	17214 <argp_failure@@Base+0xafc>
   1724c:	sub	sl, sl, #1
   17250:	add	r5, r5, #28
   17254:	cmn	sl, #1
   17258:	bne	171fc <argp_failure@@Base+0xae4>
   1725c:	ldr	r4, [fp, #-120]	; 0xffffff88
   17260:	b	17914 <argp_failure@@Base+0x11fc>
   17264:	mov	r0, r7
   17268:	bl	1aca4 <argp_parse@@Base+0x2580>
   1726c:	ldr	r1, [r7, #16]
   17270:	str	r4, [r7, #12]
   17274:	ldrd	r2, [r7, #24]
   17278:	sub	r2, r3, r2
   1727c:	cmp	r2, r1
   17280:	bls	17154 <argp_failure@@Base+0xa3c>
   17284:	mov	r0, r7
   17288:	bl	1aca4 <argp_parse@@Base+0x2580>
   1728c:	ldr	r3, [r7, #28]
   17290:	b	17154 <argp_failure@@Base+0xa3c>
   17294:	mov	r1, r7
   17298:	mov	r0, sl
   1729c:	orr	r8, r8, #2
   172a0:	bl	14d44 <__assert_fail@plt+0x380c>
   172a4:	b	17120 <argp_failure@@Base+0xa08>
   172a8:	mov	r0, r7
   172ac:	bl	1aca4 <argp_parse@@Base+0x2580>
   172b0:	b	17104 <argp_failure@@Base+0x9ec>
   172b4:	mov	r2, #0
   172b8:	mov	r3, r4
   172bc:	ldr	r0, [fp, #-108]	; 0xffffff94
   172c0:	stm	sp, {r2, r7}
   172c4:	mov	r2, #1
   172c8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   172cc:	bl	15404 <__assert_fail@plt+0x3ecc>
   172d0:	orr	r4, r4, r0
   172d4:	b	16d90 <argp_failure@@Base+0x678>
   172d8:	str	r8, [fp, #-104]	; 0xffffff98
   172dc:	mov	r4, #1
   172e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   172e4:	tst	r3, #16
   172e8:	beq	169c8 <argp_failure@@Base+0x2b0>
   172ec:	b	16fd0 <argp_failure@@Base+0x8b8>
   172f0:	ldr	r3, [r7, #28]
   172f4:	ldr	r2, [r7, #32]
   172f8:	cmp	r3, r2
   172fc:	bcs	17cd4 <argp_failure@@Base+0x15bc>
   17300:	add	r1, r3, #1
   17304:	mov	r2, #10
   17308:	str	r1, [r7, #28]
   1730c:	strb	r2, [r3]
   17310:	ldr	r2, [r5]
   17314:	b	16db8 <argp_failure@@Base+0x6a0>
   17318:	tst	r8, #2
   1731c:	beq	17794 <argp_failure@@Base+0x107c>
   17320:	add	r4, r4, #1
   17324:	b	16b4c <argp_failure@@Base+0x434>
   17328:	cmp	r3, r2
   1732c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17330:	ldr	r5, [r3, #12]
   17334:	bhi	178c4 <argp_failure@@Base+0x11ac>
   17338:	str	r5, [r7, #12]
   1733c:	ldr	sl, [r9, #4]
   17340:	cmp	sl, #0
   17344:	beq	16c44 <argp_failure@@Base+0x52c>
   17348:	movw	r3, #53908	; 0xd294
   1734c:	movt	r3, #1
   17350:	movw	r6, #53900	; 0xd28c
   17354:	movt	r6, #1
   17358:	movw	r8, #53916	; 0xd29c
   1735c:	movt	r8, #1
   17360:	str	r3, [fp, #-128]	; 0xffffff80
   17364:	add	r5, r4, #24
   17368:	b	17378 <argp_failure@@Base+0xc60>
   1736c:	subs	sl, sl, #1
   17370:	add	r5, r5, #24
   17374:	beq	16c44 <argp_failure@@Base+0x52c>
   17378:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1737c:	cmp	r3, #0
   17380:	beq	1736c <argp_failure@@Base+0xc54>
   17384:	ldr	r3, [r5, #-12]
   17388:	tst	r3, #2
   1738c:	bne	1736c <argp_failure@@Base+0xc54>
   17390:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17394:	sub	r1, fp, #76	; 0x4c
   17398:	ldr	r0, [r3, #12]
   1739c:	bl	151b8 <__assert_fail@plt+0x3c80>
   173a0:	mov	r1, r6
   173a4:	mov	r0, r7
   173a8:	ldr	r2, [r5, #-24]	; 0xffffffe8
   173ac:	bl	1b354 <argp_parse@@Base+0x2c30>
   173b0:	ldr	r3, [r4, #8]
   173b4:	cmp	r3, #0
   173b8:	beq	1736c <argp_failure@@Base+0xc54>
   173bc:	ldr	ip, [r4, #12]
   173c0:	mov	r1, r8
   173c4:	mov	r2, r3
   173c8:	mov	r0, r7
   173cc:	tst	ip, #1
   173d0:	ldrne	r1, [fp, #-128]	; 0xffffff80
   173d4:	bl	1b354 <argp_parse@@Base+0x2c30>
   173d8:	b	1736c <argp_failure@@Base+0xc54>
   173dc:	ldr	r6, [r9, #20]
   173e0:	ldr	r5, [r4, #16]
   173e4:	cmp	r6, #0
   173e8:	beq	1778c <argp_failure@@Base+0x1074>
   173ec:	ldr	r3, [r6, #20]
   173f0:	cmp	r3, #0
   173f4:	beq	1778c <argp_failure@@Base+0x1074>
   173f8:	ldr	r4, [r4, #4]
   173fc:	mov	r0, r6
   17400:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17404:	bl	195dc <argp_parse@@Base+0xeb8>
   17408:	mov	r2, r0
   1740c:	mov	r1, r5
   17410:	ldr	r3, [r6, #20]
   17414:	mov	r0, r4
   17418:	blx	r3
   1741c:	mov	r4, r0
   17420:	cmp	r4, #0
   17424:	beq	17528 <argp_failure@@Base+0xe10>
   17428:	ldrb	r3, [r4]
   1742c:	cmp	r3, #0
   17430:	beq	17518 <argp_failure@@Base+0xe00>
   17434:	ldr	r1, [r7, #16]
   17438:	ldrd	r2, [r7, #24]
   1743c:	sub	r2, r3, r2
   17440:	cmp	r2, r1
   17444:	bhi	17c28 <argp_failure@@Base+0x1510>
   17448:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1744c:	ldr	r8, [r7, #20]
   17450:	ldr	r6, [r2, #20]
   17454:	bic	r8, r8, r8, asr #31
   17458:	mov	sl, r6
   1745c:	str	r6, [r7, #4]
   17460:	add	r2, r6, #3
   17464:	str	sl, [r7, #12]
   17468:	cmp	r2, r8
   1746c:	bcc	17c08 <argp_failure@@Base+0x14f0>
   17470:	cmp	r6, r8
   17474:	bhi	17b94 <argp_failure@@Base+0x147c>
   17478:	ldr	r1, [r7, #32]
   1747c:	add	r2, r3, #3
   17480:	cmp	r1, r2
   17484:	bcs	174a0 <argp_failure@@Base+0xd88>
   17488:	mov	r1, #3
   1748c:	mov	r0, r7
   17490:	bl	1b334 <argp_parse@@Base+0x2c10>
   17494:	cmp	r0, #0
   17498:	beq	174c4 <argp_failure@@Base+0xdac>
   1749c:	ldr	r3, [r7, #28]
   174a0:	movw	r2, #53920	; 0xd2a0
   174a4:	movt	r2, #1
   174a8:	ldrh	r1, [r2]
   174ac:	ldrb	r2, [r2, #2]
   174b0:	strh	r1, [r3]
   174b4:	strb	r2, [r3, #2]
   174b8:	ldr	r3, [r7, #28]
   174bc:	add	r3, r3, #3
   174c0:	str	r3, [r7, #28]
   174c4:	mov	r0, r4
   174c8:	bl	113b8 <strlen@plt>
   174cc:	subs	r6, r0, #0
   174d0:	beq	17518 <argp_failure@@Base+0xe00>
   174d4:	ldr	r0, [r7, #28]
   174d8:	ldr	r2, [r7, #32]
   174dc:	add	r3, r0, r6
   174e0:	cmp	r2, r3
   174e4:	bcs	17500 <argp_failure@@Base+0xde8>
   174e8:	mov	r1, r6
   174ec:	mov	r0, r7
   174f0:	bl	1b334 <argp_parse@@Base+0x2c10>
   174f4:	cmp	r0, #0
   174f8:	beq	17518 <argp_failure@@Base+0xe00>
   174fc:	ldr	r0, [r7, #28]
   17500:	mov	r2, r6
   17504:	mov	r1, r4
   17508:	bl	11268 <memcpy@plt>
   1750c:	ldr	r3, [r7, #28]
   17510:	add	r6, r3, r6
   17514:	str	r6, [r7, #28]
   17518:	cmp	r5, r4
   1751c:	beq	17528 <argp_failure@@Base+0xe10>
   17520:	mov	r0, r4
   17524:	bl	1975c <argp_parse@@Base+0x1038>
   17528:	ldr	r1, [r7, #16]
   1752c:	ldrd	r2, [r7, #24]
   17530:	sub	r2, r3, r2
   17534:	cmp	r2, r1
   17538:	bhi	178b4 <argp_failure@@Base+0x119c>
   1753c:	mov	r2, #0
   17540:	str	r2, [r7, #4]
   17544:	ldr	r2, [r7, #32]
   17548:	cmp	r2, r3
   1754c:	bhi	17568 <argp_failure@@Base+0xe50>
   17550:	mov	r1, #1
   17554:	mov	r0, r7
   17558:	bl	1b334 <argp_parse@@Base+0x2c10>
   1755c:	cmp	r0, #0
   17560:	beq	17578 <argp_failure@@Base+0xe60>
   17564:	ldr	r3, [r7, #28]
   17568:	add	r1, r3, #1
   1756c:	mov	r2, #10
   17570:	str	r1, [r7, #28]
   17574:	strb	r2, [r3]
   17578:	str	r9, [fp, #-88]	; 0xffffffa8
   1757c:	b	16cb0 <argp_failure@@Base+0x598>
   17580:	cmp	r0, #45	; 0x2d
   17584:	cmpne	r0, #95	; 0x5f
   17588:	ubfx	r7, r3, #3, #1
   1758c:	moveq	r2, #1
   17590:	movne	r2, #0
   17594:	orrs	r7, r2, r7
   17598:	beq	17dac <argp_failure@@Base+0x1694>
   1759c:	mov	r4, r8
   175a0:	ldrb	r2, [r4, #1]!
   175a4:	lsl	r3, r2, #1
   175a8:	cmp	r2, #45	; 0x2d
   175ac:	cmpne	r2, #95	; 0x5f
   175b0:	moveq	lr, #1
   175b4:	movne	lr, #0
   175b8:	ldrh	r3, [r1, r3]
   175bc:	ubfx	ip, r3, #3, #1
   175c0:	orrs	ip, lr, ip
   175c4:	bne	175a0 <argp_failure@@Base+0xe88>
   175c8:	tst	r3, #8192	; 0x2000
   175cc:	sub	r7, r4, r8
   175d0:	beq	175e8 <argp_failure@@Base+0xed0>
   175d4:	ldrb	r2, [r4, #1]!
   175d8:	lsl	r3, r2, #1
   175dc:	ldrh	r3, [r1, r3]
   175e0:	tst	r3, #8192	; 0x2000
   175e4:	bne	175d4 <argp_failure@@Base+0xebc>
   175e8:	cmp	r2, #44	; 0x2c
   175ec:	cmpne	r2, #0
   175f0:	beq	17850 <argp_failure@@Base+0x1138>
   175f4:	cmp	r2, #61	; 0x3d
   175f8:	beq	17d18 <argp_failure@@Base+0x1600>
   175fc:	ands	r3, r3, #2048	; 0x800
   17600:	streq	r3, [fp, #-112]	; 0xffffff90
   17604:	streq	r3, [fp, #-96]	; 0xffffffa0
   17608:	bne	17d48 <argp_failure@@Base+0x1630>
   1760c:	ldr	r0, [pc, #2292]	; 17f08 <argp_failure@@Base+0x17f0>
   17610:	bl	113b8 <strlen@plt>
   17614:	cmp	r7, r0
   17618:	beq	17874 <argp_failure@@Base+0x115c>
   1761c:	ldr	r5, [pc, #2280]	; 17f0c <argp_failure@@Base+0x17f4>
   17620:	mov	r0, r5
   17624:	bl	113b8 <strlen@plt>
   17628:	cmp	r7, r0
   1762c:	beq	179f0 <argp_failure@@Base+0x12d8>
   17630:	ldr	r5, [pc, #2264]	; 17f10 <argp_failure@@Base+0x17f8>
   17634:	mov	r0, r5
   17638:	bl	113b8 <strlen@plt>
   1763c:	cmp	r7, r0
   17640:	beq	17a2c <argp_failure@@Base+0x1314>
   17644:	ldr	r5, [pc, #2248]	; 17f14 <argp_failure@@Base+0x17fc>
   17648:	mov	r0, r5
   1764c:	bl	113b8 <strlen@plt>
   17650:	cmp	r7, r0
   17654:	beq	17a48 <argp_failure@@Base+0x1330>
   17658:	ldr	r5, [pc, #2232]	; 17f18 <argp_failure@@Base+0x1800>
   1765c:	mov	r0, r5
   17660:	bl	113b8 <strlen@plt>
   17664:	cmp	r7, r0
   17668:	beq	17a64 <argp_failure@@Base+0x134c>
   1766c:	ldr	r5, [pc, #2216]	; 17f1c <argp_failure@@Base+0x1804>
   17670:	mov	r0, r5
   17674:	bl	113b8 <strlen@plt>
   17678:	cmp	r7, r0
   1767c:	beq	17ad8 <argp_failure@@Base+0x13c0>
   17680:	ldr	r5, [pc, #2200]	; 17f20 <argp_failure@@Base+0x1808>
   17684:	mov	r0, r5
   17688:	bl	113b8 <strlen@plt>
   1768c:	cmp	r7, r0
   17690:	beq	17af4 <argp_failure@@Base+0x13dc>
   17694:	ldr	r5, [pc, #2184]	; 17f24 <argp_failure@@Base+0x180c>
   17698:	mov	r0, r5
   1769c:	bl	113b8 <strlen@plt>
   176a0:	cmp	r7, r0
   176a4:	beq	17b10 <argp_failure@@Base+0x13f8>
   176a8:	ldr	r5, [pc, #2168]	; 17f28 <argp_failure@@Base+0x1810>
   176ac:	mov	r0, r5
   176b0:	bl	113b8 <strlen@plt>
   176b4:	cmp	r0, r7
   176b8:	beq	17b2c <argp_failure@@Base+0x1414>
   176bc:	movw	r3, #53648	; 0xd190
   176c0:	movt	r3, #1
   176c4:	mov	r2, #0
   176c8:	mov	r1, r2
   176cc:	stm	sp, {r7, r8}
   176d0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   176d4:	bl	16718 <argp_failure@@Base>
   176d8:	ldrb	r0, [r4]
   176dc:	cmp	r0, #44	; 0x2c
   176e0:	movne	r8, r4
   176e4:	bne	176f0 <argp_failure@@Base+0xfd8>
   176e8:	ldrb	r0, [r4, #1]
   176ec:	add	r8, r4, #1
   176f0:	cmp	r0, #0
   176f4:	bne	16e90 <argp_failure@@Base+0x778>
   176f8:	b	16ec8 <argp_failure@@Base+0x7b0>
   176fc:	mov	r0, r7
   17700:	bl	1aca4 <argp_parse@@Base+0x2580>
   17704:	b	16c5c <argp_failure@@Base+0x544>
   17708:	mov	r0, r7
   1770c:	bl	1aca4 <argp_parse@@Base+0x2580>
   17710:	b	16ae8 <argp_failure@@Base+0x3d0>
   17714:	mov	r0, r7
   17718:	bl	1aca4 <argp_parse@@Base+0x2580>
   1771c:	ldr	r2, [r7, #16]
   17720:	ldr	r3, [r7, #24]
   17724:	ldr	r1, [r7, #28]
   17728:	sub	r3, r1, r3
   1772c:	b	16a54 <argp_failure@@Base+0x33c>
   17730:	mov	r0, r7
   17734:	bl	1aca4 <argp_parse@@Base+0x2580>
   17738:	ldr	r3, [fp, #-120]	; 0xffffff88
   1773c:	ldr	r2, [r7, #16]
   17740:	ldr	r1, [r7, #24]
   17744:	str	r3, [r7, #4]
   17748:	ldr	r3, [r7, #28]
   1774c:	sub	r0, r3, r1
   17750:	cmp	r0, r2
   17754:	bls	16cd0 <argp_failure@@Base+0x5b8>
   17758:	mov	r0, r7
   1775c:	add	r9, r9, #28
   17760:	bl	1aca4 <argp_parse@@Base+0x2580>
   17764:	ldr	r3, [fp, #-116]	; 0xffffff8c
   17768:	subs	r3, r3, #1
   1776c:	str	r3, [fp, #-116]	; 0xffffff8c
   17770:	ldr	r3, [fp, #-124]	; 0xffffff84
   17774:	str	r3, [r7, #12]
   17778:	beq	16cec <argp_failure@@Base+0x5d4>
   1777c:	ldr	r2, [r7, #16]
   17780:	ldr	r1, [r7, #24]
   17784:	ldr	r3, [r7, #28]
   17788:	b	16a40 <argp_failure@@Base+0x328>
   1778c:	mov	r4, r5
   17790:	b	17420 <argp_failure@@Base+0xd08>
   17794:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17798:	sub	r1, fp, #76	; 0x4c
   1779c:	ldr	r0, [r3, #8]
   177a0:	bl	151b8 <__assert_fail@plt+0x3c80>
   177a4:	ldr	r2, [r9, #28]
   177a8:	ldr	r1, [r9, #32]
   177ac:	cmp	r2, r1
   177b0:	bcc	177cc <argp_failure@@Base+0x10b4>
   177b4:	mov	r1, #1
   177b8:	mov	r0, r9
   177bc:	bl	1b334 <argp_parse@@Base+0x2c10>
   177c0:	cmp	r0, #0
   177c4:	beq	177dc <argp_failure@@Base+0x10c4>
   177c8:	ldr	r2, [r9, #28]
   177cc:	add	r0, r2, #1
   177d0:	mov	r1, #45	; 0x2d
   177d4:	str	r0, [r9, #28]
   177d8:	strb	r1, [r2]
   177dc:	ldr	r2, [r9, #28]
   177e0:	ldr	r1, [r9, #32]
   177e4:	ldrb	r6, [r4]
   177e8:	cmp	r2, r1
   177ec:	bcc	17808 <argp_failure@@Base+0x10f0>
   177f0:	mov	r1, #1
   177f4:	mov	r0, r9
   177f8:	bl	1b334 <argp_parse@@Base+0x2c10>
   177fc:	cmp	r0, #0
   17800:	beq	17814 <argp_failure@@Base+0x10fc>
   17804:	ldr	r2, [r9, #28]
   17808:	add	r1, r2, #1
   1780c:	str	r1, [r9, #28]
   17810:	strb	r6, [r2]
   17814:	ldr	r3, [fp, #-128]	; 0xffffff80
   17818:	ldr	r2, [r7, #8]
   1781c:	cmp	r3, #0
   17820:	beq	178d0 <argp_failure@@Base+0x11b8>
   17824:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17828:	ldr	r1, [r3]
   1782c:	cmp	r1, #0
   17830:	bne	178d0 <argp_failure@@Base+0x11b8>
   17834:	cmp	r2, #0
   17838:	movne	r2, #1
   1783c:	strne	r2, [fp, #-80]	; 0xffffffb0
   17840:	b	17320 <argp_failure@@Base+0xc08>
   17844:	mov	r1, #1
   17848:	str	r1, [fp, #-128]	; 0xffffff80
   1784c:	b	16ad8 <argp_failure@@Base+0x3c0>
   17850:	cmp	r0, #110	; 0x6e
   17854:	beq	17b60 <argp_failure@@Base+0x1448>
   17858:	mov	r3, #1
   1785c:	ldr	r0, [pc, #1700]	; 17f08 <argp_failure@@Base+0x17f0>
   17860:	str	r3, [fp, #-112]	; 0xffffff90
   17864:	str	r3, [fp, #-96]	; 0xffffffa0
   17868:	bl	113b8 <strlen@plt>
   1786c:	cmp	r7, r0
   17870:	bne	1761c <argp_failure@@Base+0xf04>
   17874:	mov	r2, r7
   17878:	ldr	r1, [pc, #1672]	; 17f08 <argp_failure@@Base+0x17f0>
   1787c:	mov	r0, r8
   17880:	bl	11508 <strncmp@plt>
   17884:	cmp	r0, #0
   17888:	bne	1761c <argp_failure@@Base+0xf04>
   1788c:	ldr	r5, [pc, #1652]	; 17f08 <argp_failure@@Base+0x17f0>
   17890:	sub	r2, fp, #36	; 0x24
   17894:	ldrb	r3, [r5, #15]
   17898:	add	r3, r2, r3
   1789c:	ldr	r2, [fp, #-112]	; 0xffffff90
   178a0:	str	r2, [r3, #-40]	; 0xffffffd8
   178a4:	b	176d8 <argp_failure@@Base+0xfc0>
   178a8:	mov	r0, r7
   178ac:	bl	1aca4 <argp_parse@@Base+0x2580>
   178b0:	b	16b90 <argp_failure@@Base+0x478>
   178b4:	mov	r0, r7
   178b8:	bl	1aca4 <argp_parse@@Base+0x2580>
   178bc:	ldr	r3, [r7, #28]
   178c0:	b	1753c <argp_failure@@Base+0xe24>
   178c4:	mov	r0, r7
   178c8:	bl	1aca4 <argp_parse@@Base+0x2580>
   178cc:	b	17338 <argp_failure@@Base+0xc20>
   178d0:	cmp	r2, #0
   178d4:	beq	17320 <argp_failure@@Base+0xc08>
   178d8:	ldr	r1, [r7, #12]
   178dc:	mov	r0, r9
   178e0:	tst	r1, #1
   178e4:	ldrne	r1, [fp, #-144]	; 0xffffff70
   178e8:	ldreq	r1, [fp, #-140]	; 0xffffff74
   178ec:	bl	1b354 <argp_parse@@Base+0x2c30>
   178f0:	b	17320 <argp_failure@@Base+0xc08>
   178f4:	mvn	r3, #0
   178f8:	str	r3, [r5, #12]
   178fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   17900:	ldr	r3, [r3, #4]
   17904:	cmp	r3, #0
   17908:	sub	r4, r3, #1
   1790c:	str	r3, [fp, #-116]	; 0xffffff8c
   17910:	beq	169b0 <argp_failure@@Base+0x298>
   17914:	ldr	r5, [fp, #-96]	; 0xffffffa0
   17918:	movw	r6, #53788	; 0xd21c
   1791c:	movt	r6, #1
   17920:	ldm	r5, {r8, sl}
   17924:	cmp	sl, #0
   17928:	sub	sl, sl, #1
   1792c:	beq	1796c <argp_failure@@Base+0x1254>
   17930:	add	r8, r8, #24
   17934:	ldr	r0, [r8, #-24]	; 0xffffffe8
   17938:	sub	sl, sl, #1
   1793c:	cmp	r0, #0
   17940:	beq	17960 <argp_failure@@Base+0x1248>
   17944:	ldr	r3, [r8, #-12]
   17948:	mov	r1, r6
   1794c:	tst	r3, #2
   17950:	bne	17960 <argp_failure@@Base+0x1248>
   17954:	bl	111d8 <strcmp@plt>
   17958:	cmp	r0, #0
   1795c:	beq	17984 <argp_failure@@Base+0x126c>
   17960:	cmn	sl, #1
   17964:	add	r8, r8, #24
   17968:	bne	17934 <argp_failure@@Base+0x121c>
   1796c:	cmp	r4, #0
   17970:	add	r5, r5, #28
   17974:	sub	r4, r4, #1
   17978:	bne	17920 <argp_failure@@Base+0x1208>
   1797c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   17980:	b	1799c <argp_failure@@Base+0x1284>
   17984:	mvn	r3, #0
   17988:	str	r3, [r5, #12]
   1798c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17990:	ldr	r1, [r3, #4]
   17994:	cmp	r1, #0
   17998:	beq	169b0 <argp_failure@@Base+0x298>
   1799c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   179a0:	mov	r3, #0
   179a4:	str	r3, [r2, #24]
   179a8:	add	r3, r3, #1
   179ac:	add	r2, r2, #28
   179b0:	cmp	r1, r3
   179b4:	bhi	179a4 <argp_failure@@Base+0x128c>
   179b8:	movw	r3, #23000	; 0x59d8
   179bc:	movt	r3, #1
   179c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   179c4:	mov	r2, #28
   179c8:	bl	114cc <qsort@plt>
   179cc:	ldr	r3, [fp, #-104]	; 0xffffff98
   179d0:	ands	r4, r3, #3
   179d4:	beq	169bc <argp_failure@@Base+0x2a4>
   179d8:	b	17004 <argp_failure@@Base+0x8ec>
   179dc:	sub	r2, fp, #76	; 0x4c
   179e0:	ldr	r0, [r4, #16]
   179e4:	ldr	r1, [r9, #20]
   179e8:	bl	14a50 <__assert_fail@plt+0x3518>
   179ec:	b	17578 <argp_failure@@Base+0xe60>
   179f0:	mov	r2, r7
   179f4:	mov	r1, r5
   179f8:	mov	r0, r8
   179fc:	bl	11508 <strncmp@plt>
   17a00:	cmp	r0, #0
   17a04:	bne	17630 <argp_failure@@Base+0xf18>
   17a08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17a0c:	cmp	r3, #0
   17a10:	beq	17890 <argp_failure@@Base+0x1178>
   17a14:	ldrb	r2, [r5, #14]
   17a18:	cmp	r2, #0
   17a1c:	movweq	r3, #53600	; 0xd160
   17a20:	movteq	r3, #1
   17a24:	bne	17890 <argp_failure@@Base+0x1178>
   17a28:	b	176c8 <argp_failure@@Base+0xfb0>
   17a2c:	mov	r2, r7
   17a30:	mov	r1, r5
   17a34:	mov	r0, r8
   17a38:	bl	11508 <strncmp@plt>
   17a3c:	cmp	r0, #0
   17a40:	bne	17644 <argp_failure@@Base+0xf2c>
   17a44:	b	17a08 <argp_failure@@Base+0x12f0>
   17a48:	mov	r2, r7
   17a4c:	mov	r1, r5
   17a50:	mov	r0, r8
   17a54:	bl	11508 <strncmp@plt>
   17a58:	cmp	r0, #0
   17a5c:	bne	17658 <argp_failure@@Base+0xf40>
   17a60:	b	17a08 <argp_failure@@Base+0x12f0>
   17a64:	mov	r2, r7
   17a68:	mov	r1, r5
   17a6c:	mov	r0, r8
   17a70:	bl	11508 <strncmp@plt>
   17a74:	cmp	r0, #0
   17a78:	bne	1766c <argp_failure@@Base+0xf54>
   17a7c:	b	17a08 <argp_failure@@Base+0x12f0>
   17a80:	ldr	r3, [r7, #28]
   17a84:	ldr	r1, [r7, #32]
   17a88:	add	r2, r3, #12
   17a8c:	cmp	r1, r2
   17a90:	bcs	17aac <argp_failure@@Base+0x1394>
   17a94:	mov	r1, #12
   17a98:	mov	r0, r7
   17a9c:	bl	1b334 <argp_parse@@Base+0x2c10>
   17aa0:	cmp	r0, #0
   17aa4:	beq	17120 <argp_failure@@Base+0xa08>
   17aa8:	ldr	r3, [r7, #28]
   17aac:	movw	r2, #53820	; 0xd23c
   17ab0:	movt	r2, #1
   17ab4:	ldrd	r0, [r2]
   17ab8:	ldr	r2, [r2, #8]
   17abc:	str	r0, [r3]
   17ac0:	str	r1, [r3, #4]
   17ac4:	str	r2, [r3, #8]
   17ac8:	ldr	r3, [r7, #28]
   17acc:	add	r3, r3, #12
   17ad0:	str	r3, [r7, #28]
   17ad4:	b	17120 <argp_failure@@Base+0xa08>
   17ad8:	mov	r2, r7
   17adc:	mov	r1, r5
   17ae0:	mov	r0, r8
   17ae4:	bl	11508 <strncmp@plt>
   17ae8:	cmp	r0, #0
   17aec:	bne	17680 <argp_failure@@Base+0xf68>
   17af0:	b	17a08 <argp_failure@@Base+0x12f0>
   17af4:	mov	r2, r7
   17af8:	mov	r1, r5
   17afc:	mov	r0, r8
   17b00:	bl	11508 <strncmp@plt>
   17b04:	cmp	r0, #0
   17b08:	bne	17694 <argp_failure@@Base+0xf7c>
   17b0c:	b	17a08 <argp_failure@@Base+0x12f0>
   17b10:	mov	r2, r7
   17b14:	mov	r1, r5
   17b18:	mov	r0, r8
   17b1c:	bl	11508 <strncmp@plt>
   17b20:	cmp	r0, #0
   17b24:	bne	176a8 <argp_failure@@Base+0xf90>
   17b28:	b	17a08 <argp_failure@@Base+0x12f0>
   17b2c:	mov	r2, r7
   17b30:	mov	r1, r5
   17b34:	mov	r0, r8
   17b38:	bl	11508 <strncmp@plt>
   17b3c:	cmp	r0, #0
   17b40:	bne	176bc <argp_failure@@Base+0xfa4>
   17b44:	b	17a08 <argp_failure@@Base+0x12f0>
   17b48:	ldr	r4, [fp, #-112]	; 0xffffff90
   17b4c:	ldr	r0, [r4]
   17b50:	bl	1975c <argp_parse@@Base+0x1038>
   17b54:	ldr	r0, [r4, #8]
   17b58:	bl	1975c <argp_parse@@Base+0x1038>
   17b5c:	b	16e08 <argp_failure@@Base+0x6f0>
   17b60:	ldrb	r3, [r8, #1]
   17b64:	cmp	r3, #111	; 0x6f
   17b68:	bne	17858 <argp_failure@@Base+0x1140>
   17b6c:	ldrb	r3, [r8, #2]
   17b70:	cmp	r3, #45	; 0x2d
   17b74:	bne	17858 <argp_failure@@Base+0x1140>
   17b78:	mov	r3, #0
   17b7c:	add	r8, r8, #3
   17b80:	sub	r7, r7, #3
   17b84:	str	r3, [fp, #-112]	; 0xffffff90
   17b88:	mov	r3, #1
   17b8c:	str	r3, [fp, #-96]	; 0xffffffa0
   17b90:	b	1760c <argp_failure@@Base+0xef4>
   17b94:	ldr	r1, [r7, #16]
   17b98:	ldr	r2, [r7, #24]
   17b9c:	sub	r3, r3, r2
   17ba0:	cmp	r3, r1
   17ba4:	bhi	17d0c <argp_failure@@Base+0x15f4>
   17ba8:	ldr	r3, [r7, #20]
   17bac:	cmp	r3, #0
   17bb0:	subge	r6, r6, r3
   17bb4:	cmp	r6, #0
   17bb8:	sub	r6, r6, #1
   17bbc:	ble	174c4 <argp_failure@@Base+0xdac>
   17bc0:	mov	r8, #32
   17bc4:	ldr	r3, [r7, #28]
   17bc8:	mov	r1, #1
   17bcc:	mov	r0, r7
   17bd0:	sub	r6, r6, #1
   17bd4:	ldr	r2, [r7, #32]
   17bd8:	cmp	r3, r2
   17bdc:	bcc	17bf0 <argp_failure@@Base+0x14d8>
   17be0:	bl	1b334 <argp_parse@@Base+0x2c10>
   17be4:	cmp	r0, #0
   17be8:	beq	17bfc <argp_failure@@Base+0x14e4>
   17bec:	ldr	r3, [r7, #28]
   17bf0:	add	r2, r3, #1
   17bf4:	str	r2, [r7, #28]
   17bf8:	strb	r8, [r3]
   17bfc:	cmn	r6, #1
   17c00:	bne	17bc4 <argp_failure@@Base+0x14ac>
   17c04:	b	174c4 <argp_failure@@Base+0xdac>
   17c08:	ldr	r2, [r7, #32]
   17c0c:	cmp	r2, r3
   17c10:	bls	17cb8 <argp_failure@@Base+0x15a0>
   17c14:	add	r1, r3, #1
   17c18:	mov	r2, #10
   17c1c:	str	r1, [r7, #28]
   17c20:	strb	r2, [r3]
   17c24:	b	174c4 <argp_failure@@Base+0xdac>
   17c28:	mov	r0, r7
   17c2c:	bl	1aca4 <argp_parse@@Base+0x2580>
   17c30:	ldr	r1, [r7, #16]
   17c34:	ldrd	r2, [r7, #24]
   17c38:	ldr	sl, [fp, #-96]	; 0xffffffa0
   17c3c:	ldr	r8, [r7, #20]
   17c40:	sub	r2, r3, r2
   17c44:	cmp	r2, r1
   17c48:	ldr	r6, [sl, #20]
   17c4c:	bic	r8, r8, r8, asr #31
   17c50:	bls	17458 <argp_failure@@Base+0xd40>
   17c54:	mov	r0, r7
   17c58:	bl	1aca4 <argp_parse@@Base+0x2580>
   17c5c:	ldr	r1, [r7, #16]
   17c60:	str	r6, [r7, #4]
   17c64:	mov	r6, sl
   17c68:	ldrd	r2, [r7, #24]
   17c6c:	ldr	sl, [sl, #20]
   17c70:	sub	r2, r3, r2
   17c74:	cmp	r2, r1
   17c78:	bls	17f00 <argp_failure@@Base+0x17e8>
   17c7c:	mov	r0, r7
   17c80:	bl	1aca4 <argp_parse@@Base+0x2580>
   17c84:	ldr	r6, [r6, #20]
   17c88:	ldr	r3, [r7, #28]
   17c8c:	b	17460 <argp_failure@@Base+0xd48>
   17c90:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17c94:	bl	112c8 <funlockfile@plt>
   17c98:	b	16e18 <argp_failure@@Base+0x700>
   17c9c:	movw	r3, #53688	; 0xd1b8
   17ca0:	movt	r3, #1
   17ca4:	str	r8, [sp]
   17ca8:	mov	r1, r2
   17cac:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17cb0:	bl	16718 <argp_failure@@Base>
   17cb4:	b	16ec8 <argp_failure@@Base+0x7b0>
   17cb8:	mov	r1, #1
   17cbc:	mov	r0, r7
   17cc0:	bl	1b334 <argp_parse@@Base+0x2c10>
   17cc4:	cmp	r0, #0
   17cc8:	beq	174c4 <argp_failure@@Base+0xdac>
   17ccc:	ldr	r3, [r7, #28]
   17cd0:	b	17c14 <argp_failure@@Base+0x14fc>
   17cd4:	mov	r1, #1
   17cd8:	mov	r0, r7
   17cdc:	bl	1b334 <argp_parse@@Base+0x2c10>
   17ce0:	cmp	r0, #0
   17ce4:	ldrne	r3, [r7, #28]
   17ce8:	bne	17300 <argp_failure@@Base+0xbe8>
   17cec:	b	17310 <argp_failure@@Base+0xbf8>
   17cf0:	mov	r1, #1
   17cf4:	mov	r0, r7
   17cf8:	bl	1b334 <argp_parse@@Base+0x2c10>
   17cfc:	cmp	r0, #0
   17d00:	ldrne	r3, [r7, #28]
   17d04:	bne	16f88 <argp_failure@@Base+0x870>
   17d08:	b	16f98 <argp_failure@@Base+0x880>
   17d0c:	mov	r0, r7
   17d10:	bl	1aca4 <argp_parse@@Base+0x2580>
   17d14:	b	17ba8 <argp_failure@@Base+0x1490>
   17d18:	ldrb	r3, [r4, #1]
   17d1c:	add	r4, r4, #1
   17d20:	lsl	r3, r3, #1
   17d24:	ldrh	r3, [r1, r3]
   17d28:	tst	r3, #8192	; 0x2000
   17d2c:	beq	175fc <argp_failure@@Base+0xee4>
   17d30:	ldrb	r3, [r4, #1]!
   17d34:	lsl	r3, r3, #1
   17d38:	ldrh	r3, [r1, r3]
   17d3c:	tst	r3, #8192	; 0x2000
   17d40:	bne	17d30 <argp_failure@@Base+0x1618>
   17d44:	b	175fc <argp_failure@@Base+0xee4>
   17d48:	mov	r2, #10
   17d4c:	mov	r1, #0
   17d50:	mov	r0, r4
   17d54:	bl	111e4 <strtol@plt>
   17d58:	ldrb	r3, [r4]
   17d5c:	ldr	r2, [r6]
   17d60:	lsl	r3, r3, #1
   17d64:	ldrh	r3, [r2, r3]
   17d68:	str	r0, [fp, #-112]	; 0xffffff90
   17d6c:	tst	r3, #2048	; 0x800
   17d70:	beq	17d88 <argp_failure@@Base+0x1670>
   17d74:	ldrb	r3, [r4, #1]!
   17d78:	lsl	r3, r3, #1
   17d7c:	ldrh	r3, [r2, r3]
   17d80:	tst	r3, #2048	; 0x800
   17d84:	bne	17d74 <argp_failure@@Base+0x165c>
   17d88:	ands	r3, r3, #8192	; 0x2000
   17d8c:	beq	17da4 <argp_failure@@Base+0x168c>
   17d90:	ldrb	r3, [r4, #1]!
   17d94:	lsl	r3, r3, #1
   17d98:	ldrh	r3, [r2, r3]
   17d9c:	ands	r3, r3, #8192	; 0x2000
   17da0:	bne	17d90 <argp_failure@@Base+0x1678>
   17da4:	str	r3, [fp, #-96]	; 0xffffffa0
   17da8:	b	1760c <argp_failure@@Base+0xef4>
   17dac:	mov	r2, r0
   17db0:	mov	r4, r8
   17db4:	b	175e8 <argp_failure@@Base+0xed0>
   17db8:	movw	r5, #53468	; 0xd0dc
   17dbc:	movt	r5, #1
   17dc0:	mov	r4, r1
   17dc4:	ldr	r3, [r7, #28]
   17dc8:	ldr	r2, [r7, #32]
   17dcc:	cmp	r3, r2
   17dd0:	bcc	17dec <argp_failure@@Base+0x16d4>
   17dd4:	mov	r1, #1
   17dd8:	mov	r0, r7
   17ddc:	bl	1b334 <argp_parse@@Base+0x2c10>
   17de0:	cmp	r0, #0
   17de4:	beq	17dfc <argp_failure@@Base+0x16e4>
   17de8:	ldr	r3, [r7, #28]
   17dec:	add	r1, r3, #1
   17df0:	mov	r2, #10
   17df4:	str	r1, [r7, #28]
   17df8:	strb	r2, [r3]
   17dfc:	mov	r0, r5
   17e00:	bl	113b8 <strlen@plt>
   17e04:	subs	r6, r0, #0
   17e08:	ldr	r0, [r7, #28]
   17e0c:	ldr	r3, [r7, #32]
   17e10:	bne	17eb8 <argp_failure@@Base+0x17a0>
   17e14:	cmp	r0, r3
   17e18:	bcc	17e34 <argp_failure@@Base+0x171c>
   17e1c:	mov	r1, #1
   17e20:	mov	r0, r7
   17e24:	bl	1b334 <argp_parse@@Base+0x2c10>
   17e28:	cmp	r0, #0
   17e2c:	beq	16d70 <argp_failure@@Base+0x658>
   17e30:	ldr	r0, [r7, #28]
   17e34:	add	r2, r0, #1
   17e38:	mov	r3, #10
   17e3c:	str	r2, [r7, #28]
   17e40:	strb	r3, [r0]
   17e44:	b	16d70 <argp_failure@@Base+0x658>
   17e48:	movw	r5, #53468	; 0xd0dc
   17e4c:	movt	r5, #1
   17e50:	b	17dc4 <argp_failure@@Base+0x16ac>
   17e54:	ldr	r3, [pc, #180]	; 17f10 <argp_failure@@Base+0x17f8>
   17e58:	movw	r0, #53772	; 0xd20c
   17e5c:	movt	r0, #1
   17e60:	mov	r2, #0
   17e64:	mov	r1, r2
   17e68:	stm	sp, {r0, r3}
   17e6c:	movw	r3, #53720	; 0xd1d8
   17e70:	movt	r3, #1
   17e74:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17e78:	bl	16718 <argp_failure@@Base>
   17e7c:	b	16984 <argp_failure@@Base+0x26c>
   17e80:	ldr	r3, [pc, #140]	; 17f14 <argp_failure@@Base+0x17fc>
   17e84:	b	17e58 <argp_failure@@Base+0x1740>
   17e88:	ldr	r3, [pc, #136]	; 17f18 <argp_failure@@Base+0x1800>
   17e8c:	b	17e58 <argp_failure@@Base+0x1740>
   17e90:	ldr	r3, [pc, #132]	; 17f1c <argp_failure@@Base+0x1804>
   17e94:	b	17e58 <argp_failure@@Base+0x1740>
   17e98:	ldr	r3, [pc, #128]	; 17f20 <argp_failure@@Base+0x1808>
   17e9c:	b	17e58 <argp_failure@@Base+0x1740>
   17ea0:	ldr	r3, [pc, #124]	; 17f24 <argp_failure@@Base+0x180c>
   17ea4:	b	17e58 <argp_failure@@Base+0x1740>
   17ea8:	mov	r4, r5
   17eac:	movw	r5, #53468	; 0xd0dc
   17eb0:	movt	r5, #1
   17eb4:	b	17dc4 <argp_failure@@Base+0x16ac>
   17eb8:	add	r2, r0, r6
   17ebc:	cmp	r3, r2
   17ec0:	bcs	17ee0 <argp_failure@@Base+0x17c8>
   17ec4:	mov	r1, r6
   17ec8:	mov	r0, r7
   17ecc:	bl	1b334 <argp_parse@@Base+0x2c10>
   17ed0:	cmp	r0, #0
   17ed4:	ldr	r0, [r7, #28]
   17ed8:	ldreq	r3, [r7, #32]
   17edc:	beq	17e14 <argp_failure@@Base+0x16fc>
   17ee0:	mov	r2, r6
   17ee4:	mov	r1, r5
   17ee8:	bl	11268 <memcpy@plt>
   17eec:	ldr	r0, [r7, #28]
   17ef0:	ldr	r3, [r7, #32]
   17ef4:	add	r0, r0, r6
   17ef8:	str	r0, [r7, #28]
   17efc:	b	17e14 <argp_failure@@Base+0x16fc>
   17f00:	mov	r6, sl
   17f04:	b	17460 <argp_failure@@Base+0xd48>
   17f08:	andeq	ip, r1, ip, lsl pc
   17f0c:	andeq	ip, r1, ip, lsr #30
   17f10:	andeq	ip, r1, ip, lsr pc
   17f14:	andeq	ip, r1, ip, asr #30
   17f18:	andeq	ip, r1, ip, asr pc
   17f1c:	andeq	ip, r1, ip, ror #30
   17f20:	andeq	ip, r1, ip, ror pc
   17f24:	andeq	ip, r1, ip, lsl #31
   17f28:	muleq	r1, ip, pc	; <UNPREDICTABLE>

00017f2c <argp_help@@Base>:
   17f2c:	push	{lr}		; (str lr, [sp, #-4]!)
   17f30:	sub	sp, sp, #12
   17f34:	str	r3, [sp]
   17f38:	mov	r3, r2
   17f3c:	mov	r2, r1
   17f40:	mov	r1, #0
   17f44:	bl	16934 <argp_failure@@Base+0x21c>
   17f48:	add	sp, sp, #12
   17f4c:	pop	{pc}		; (ldr pc, [sp], #4)

00017f50 <argp_state_help@@Base>:
   17f50:	strd	r4, [sp, #-12]!
   17f54:	subs	r4, r0, #0
   17f58:	mov	r5, r2
   17f5c:	str	lr, [sp, #8]
   17f60:	sub	sp, sp, #12
   17f64:	beq	17fd4 <argp_state_help@@Base+0x84>
   17f68:	ldr	r3, [r4, #16]
   17f6c:	adds	r2, r1, #0
   17f70:	movne	r2, #1
   17f74:	eor	r0, r3, #2
   17f78:	ands	r2, r2, r0, lsr #1
   17f7c:	bne	17f90 <argp_state_help@@Base+0x40>
   17f80:	add	sp, sp, #12
   17f84:	ldrd	r4, [sp]
   17f88:	add	sp, sp, #8
   17f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17f90:	ldr	r0, [r4, #40]	; 0x28
   17f94:	tst	r3, #64	; 0x40
   17f98:	mov	r2, r1
   17f9c:	orrne	r5, r5, #128	; 0x80
   17fa0:	mov	r1, r4
   17fa4:	mov	r3, r5
   17fa8:	str	r0, [sp]
   17fac:	ldr	r0, [r4]
   17fb0:	bl	16934 <argp_failure@@Base+0x21c>
   17fb4:	ldr	r3, [r4, #16]
   17fb8:	tst	r3, #32
   17fbc:	bne	17f80 <argp_state_help@@Base+0x30>
   17fc0:	ands	r0, r5, #256	; 0x100
   17fc4:	bne	18000 <argp_state_help@@Base+0xb0>
   17fc8:	tst	r5, #512	; 0x200
   17fcc:	beq	17f80 <argp_state_help@@Base+0x30>
   17fd0:	bl	113a0 <exit@plt>
   17fd4:	cmp	r1, #0
   17fd8:	beq	17f80 <argp_state_help@@Base+0x30>
   17fdc:	movw	r3, #58440	; 0xe448
   17fe0:	movt	r3, #2
   17fe4:	ldr	ip, [r3]
   17fe8:	mov	r2, r1
   17fec:	mov	r3, r5
   17ff0:	mov	r1, r4
   17ff4:	str	ip, [sp]
   17ff8:	bl	16934 <argp_failure@@Base+0x21c>
   17ffc:	b	17fc0 <argp_state_help@@Base+0x70>
   18000:	movw	r3, #58416	; 0xe430
   18004:	movt	r3, #2
   18008:	ldr	r0, [r3]
   1800c:	bl	113a0 <exit@plt>

00018010 <argp_error@@Base>:
   18010:	push	{r1, r2, r3}
   18014:	strd	r4, [sp, #-12]!
   18018:	subs	r5, r0, #0
   1801c:	str	lr, [sp, #8]
   18020:	sub	sp, sp, #8
   18024:	beq	180fc <argp_error@@Base+0xec>
   18028:	ldr	r3, [r5, #16]
   1802c:	tst	r3, #2
   18030:	bne	180e4 <argp_error@@Base+0xd4>
   18034:	ldr	r4, [r5, #44]	; 0x2c
   18038:	cmp	r4, #0
   1803c:	beq	180e4 <argp_error@@Base+0xd4>
   18040:	mov	r0, r4
   18044:	bl	114b4 <flockfile@plt>
   18048:	ldr	r0, [r5, #40]	; 0x28
   1804c:	add	r3, sp, #24
   18050:	str	r3, [sp, #4]
   18054:	mov	r1, r4
   18058:	bl	111cc <fputs_unlocked@plt>
   1805c:	ldr	r3, [r4, #20]
   18060:	ldr	r2, [r4, #24]
   18064:	cmp	r3, r2
   18068:	addcc	r1, r3, #1
   1806c:	movcc	r2, #58	; 0x3a
   18070:	strcc	r1, [r4, #20]
   18074:	strbcc	r2, [r3]
   18078:	bcs	18140 <argp_error@@Base+0x130>
   1807c:	ldr	r3, [r4, #20]
   18080:	ldr	r2, [r4, #24]
   18084:	cmp	r3, r2
   18088:	addcc	r1, r3, #1
   1808c:	movcc	r2, #32
   18090:	strcc	r1, [r4, #20]
   18094:	strbcc	r2, [r3]
   18098:	bcs	18150 <argp_error@@Base+0x140>
   1809c:	mov	r0, r4
   180a0:	ldr	r2, [sp, #4]
   180a4:	ldr	r1, [sp, #20]
   180a8:	bl	11490 <vfprintf@plt>
   180ac:	ldr	r3, [r4, #20]
   180b0:	ldr	r2, [r4, #24]
   180b4:	cmp	r3, r2
   180b8:	addcc	r1, r3, #1
   180bc:	movcc	r2, #10
   180c0:	strcc	r1, [r4, #20]
   180c4:	strbcc	r2, [r3]
   180c8:	bcs	18130 <argp_error@@Base+0x120>
   180cc:	mov	r0, r5
   180d0:	mov	r2, #260	; 0x104
   180d4:	mov	r1, r4
   180d8:	bl	17f50 <argp_state_help@@Base>
   180dc:	mov	r0, r4
   180e0:	bl	112c8 <funlockfile@plt>
   180e4:	add	sp, sp, #8
   180e8:	ldrd	r4, [sp]
   180ec:	ldr	lr, [sp, #8]
   180f0:	add	sp, sp, #12
   180f4:	add	sp, sp, #12
   180f8:	bx	lr
   180fc:	movw	r3, #58448	; 0xe450
   18100:	movt	r3, #2
   18104:	ldr	r4, [r3]
   18108:	cmp	r4, #0
   1810c:	beq	180e4 <argp_error@@Base+0xd4>
   18110:	mov	r0, r4
   18114:	bl	114b4 <flockfile@plt>
   18118:	add	r2, sp, #24
   1811c:	movw	r3, #58440	; 0xe448
   18120:	movt	r3, #2
   18124:	str	r2, [sp, #4]
   18128:	ldr	r0, [r3]
   1812c:	b	18054 <argp_error@@Base+0x44>
   18130:	mov	r1, #10
   18134:	mov	r0, r4
   18138:	bl	1146c <__overflow@plt>
   1813c:	b	180cc <argp_error@@Base+0xbc>
   18140:	mov	r1, #58	; 0x3a
   18144:	mov	r0, r4
   18148:	bl	1146c <__overflow@plt>
   1814c:	b	1807c <argp_error@@Base+0x6c>
   18150:	mov	r1, #32
   18154:	mov	r0, r4
   18158:	bl	1146c <__overflow@plt>
   1815c:	b	1809c <argp_error@@Base+0x8c>
   18160:	ldr	r3, [r0]
   18164:	strd	r4, [sp, #-16]!
   18168:	ldr	r5, [r0, #16]
   1816c:	str	r6, [sp, #8]
   18170:	str	lr, [sp, #12]
   18174:	cmp	r3, #0
   18178:	beq	18224 <argp_error@@Base+0x214>
   1817c:	ldr	r0, [r1, #8]
   18180:	mov	r2, #0
   18184:	add	r0, r0, #1
   18188:	str	r0, [r1, #8]
   1818c:	b	18194 <argp_error@@Base+0x184>
   18190:	add	r2, r2, #1
   18194:	add	r3, r3, #24
   18198:	ldr	r0, [r3, #-20]	; 0xffffffec
   1819c:	cmp	r0, #0
   181a0:	bne	18190 <argp_error@@Base+0x180>
   181a4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   181a8:	cmp	r0, #0
   181ac:	bne	18190 <argp_error@@Base+0x180>
   181b0:	ldr	r0, [r3, #-8]
   181b4:	cmp	r0, #0
   181b8:	bne	18190 <argp_error@@Base+0x180>
   181bc:	ldr	r0, [r3, #-4]
   181c0:	cmp	r0, #0
   181c4:	bne	18190 <argp_error@@Base+0x180>
   181c8:	ldm	r1, {r0, r3}
   181cc:	add	ip, r2, r2, lsl #1
   181d0:	add	r2, r3, r2
   181d4:	add	r0, r0, ip
   181d8:	stm	r1, {r0, r2}
   181dc:	cmp	r5, #0
   181e0:	beq	18214 <argp_error@@Base+0x204>
   181e4:	ldr	r0, [r5]
   181e8:	cmp	r0, #0
   181ec:	beq	18214 <argp_error@@Base+0x204>
   181f0:	mov	r4, r1
   181f4:	mov	r1, r4
   181f8:	bl	18160 <argp_error@@Base+0x150>
   181fc:	ldr	r3, [r4, #12]
   18200:	ldr	r0, [r5, #16]!
   18204:	add	r3, r3, #1
   18208:	cmp	r0, #0
   1820c:	str	r3, [r4, #12]
   18210:	bne	181f4 <argp_error@@Base+0x1e4>
   18214:	ldrd	r4, [sp]
   18218:	ldr	r6, [sp, #8]
   1821c:	add	sp, sp, #12
   18220:	pop	{pc}		; (ldr pc, [sp], #4)
   18224:	ldr	r3, [r0, #4]
   18228:	cmp	r3, #0
   1822c:	beq	181dc <argp_error@@Base+0x1cc>
   18230:	ldr	r3, [r1, #8]
   18234:	add	r3, r3, #1
   18238:	str	r3, [r1, #8]
   1823c:	b	181dc <argp_error@@Base+0x1cc>
   18240:	cmp	r0, #86	; 0x56
   18244:	beq	18250 <argp_error@@Base+0x240>
   18248:	mov	r0, #7
   1824c:	bx	lr
   18250:	movw	r3, #58636	; 0xe50c
   18254:	movt	r3, #2
   18258:	str	r4, [sp, #-8]!
   1825c:	ldr	r3, [r3]
   18260:	mov	r4, r2
   18264:	str	lr, [sp, #4]
   18268:	cmp	r3, #0
   1826c:	beq	1829c <argp_error@@Base+0x28c>
   18270:	mov	r1, r2
   18274:	ldr	r0, [r2, #48]	; 0x30
   18278:	blx	r3
   1827c:	ldr	r0, [r4, #16]
   18280:	ands	r0, r0, #32
   18284:	beq	18298 <argp_error@@Base+0x288>
   18288:	ldr	r4, [sp]
   1828c:	add	sp, sp, #4
   18290:	mov	r0, #0
   18294:	pop	{pc}		; (ldr pc, [sp], #4)
   18298:	bl	113a0 <exit@plt>
   1829c:	movw	r3, #61376	; 0xefc0
   182a0:	movt	r3, #2
   182a4:	ldr	r2, [r3]
   182a8:	cmp	r2, #0
   182ac:	beq	182c4 <argp_error@@Base+0x2b4>
   182b0:	movw	r1, #54620	; 0xd55c
   182b4:	movt	r1, #1
   182b8:	ldr	r0, [r4, #48]	; 0x30
   182bc:	bl	113d0 <fprintf@plt>
   182c0:	b	1827c <argp_error@@Base+0x26c>
   182c4:	movw	r2, #54224	; 0xd3d0
   182c8:	movt	r2, #1
   182cc:	movw	r1, #52036	; 0xcb44
   182d0:	movt	r1, #1
   182d4:	mov	r0, r4
   182d8:	bl	18010 <argp_error@@Base>
   182dc:	b	1827c <argp_error@@Base+0x26c>
   182e0:	cmn	r0, #3
   182e4:	str	r4, [sp, #-8]!
   182e8:	mov	r4, r2
   182ec:	str	lr, [sp, #4]
   182f0:	sub	sp, sp, #8
   182f4:	beq	183f4 <argp_error@@Base+0x3e4>
   182f8:	ble	18330 <argp_error@@Base+0x320>
   182fc:	cmn	r0, #2
   18300:	beq	183a8 <argp_error@@Base+0x398>
   18304:	cmp	r0, #63	; 0x3f
   18308:	bne	18394 <argp_error@@Base+0x384>
   1830c:	mov	r0, r4
   18310:	movw	r2, #634	; 0x27a
   18314:	ldr	r1, [r4, #48]	; 0x30
   18318:	bl	17f50 <argp_state_help@@Base>
   1831c:	mov	r0, #0
   18320:	add	sp, sp, #8
   18324:	ldr	r4, [sp]
   18328:	add	sp, sp, #4
   1832c:	pop	{pc}		; (ldr pc, [sp], #4)
   18330:	cmn	r0, #4
   18334:	bne	18394 <argp_error@@Base+0x384>
   18338:	cmp	r1, #0
   1833c:	movw	r0, #54260	; 0xd3f4
   18340:	movt	r0, #1
   18344:	mov	r2, #10
   18348:	movne	r0, r1
   1834c:	movw	r4, #58632	; 0xe508
   18350:	movt	r4, #2
   18354:	mov	r1, #0
   18358:	bl	111e4 <strtol@plt>
   1835c:	str	r0, [r4]
   18360:	b	1836c <argp_error@@Base+0x35c>
   18364:	mov	r0, #1
   18368:	bl	1128c <sleep@plt>
   1836c:	ldr	r3, [r4]
   18370:	sub	r2, r3, #1
   18374:	cmp	r3, #0
   18378:	str	r2, [r4]
   1837c:	bgt	18364 <argp_error@@Base+0x354>
   18380:	mov	r0, #0
   18384:	add	sp, sp, #8
   18388:	ldr	r4, [sp]
   1838c:	add	sp, sp, #4
   18390:	pop	{pc}		; (ldr pc, [sp], #4)
   18394:	mov	r0, #7
   18398:	add	sp, sp, #8
   1839c:	ldr	r4, [sp]
   183a0:	add	sp, sp, #4
   183a4:	pop	{pc}		; (ldr pc, [sp], #4)
   183a8:	movw	r3, #58444	; 0xe44c
   183ac:	movt	r3, #2
   183b0:	str	r1, [sp, #4]
   183b4:	mov	r0, r1
   183b8:	str	r1, [r3]
   183bc:	bl	19688 <argp_parse@@Base+0xf64>
   183c0:	ldr	r3, [r4, #16]
   183c4:	movw	r2, #58440	; 0xe448
   183c8:	movt	r2, #2
   183cc:	str	r0, [r4, #40]	; 0x28
   183d0:	str	r0, [r2]
   183d4:	ldr	r1, [sp, #4]
   183d8:	and	r3, r3, #3
   183dc:	cmp	r3, #1
   183e0:	bne	18380 <argp_error@@Base+0x370>
   183e4:	ldr	r3, [r4, #8]
   183e8:	mov	r0, #0
   183ec:	str	r1, [r3]
   183f0:	b	18320 <argp_error@@Base+0x310>
   183f4:	ldr	r1, [r4, #48]	; 0x30
   183f8:	mov	r0, r4
   183fc:	movw	r2, #513	; 0x201
   18400:	bl	17f50 <argp_state_help@@Base>
   18404:	mov	r0, #0
   18408:	add	sp, sp, #8
   1840c:	ldr	r4, [sp]
   18410:	add	sp, sp, #4
   18414:	pop	{pc}		; (ldr pc, [sp], #4)
   18418:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1841c:	strd	r6, [sp, #8]
   18420:	strd	r8, [sp, #16]
   18424:	strd	sl, [sp, #24]
   18428:	str	lr, [sp, #32]
   1842c:	sub	sp, sp, #44	; 0x2c
   18430:	ldr	fp, [r0]
   18434:	str	r3, [sp, #16]
   18438:	ldr	r3, [r0, #16]
   1843c:	ldr	r7, [sp, #80]	; 0x50
   18440:	cmp	fp, #0
   18444:	str	r3, [sp, #24]
   18448:	strd	r0, [sp, #28]
   1844c:	str	r2, [sp, #36]	; 0x24
   18450:	beq	186fc <argp_error@@Base+0x6ec>
   18454:	ldr	r9, [r7, #4]
   18458:	movw	r3, #36409	; 0x8e39
   1845c:	movt	r3, #14563	; 0x38e3
   18460:	mov	r4, fp
   18464:	str	r3, [sp, #20]
   18468:	ldr	r6, [r4, #4]
   1846c:	cmp	r6, #0
   18470:	bne	18480 <argp_error@@Base+0x470>
   18474:	ldr	r3, [r4]
   18478:	cmp	r3, #0
   1847c:	beq	185f4 <argp_error@@Base+0x5e4>
   18480:	ldr	r3, [r4, #12]
   18484:	tst	r3, #4
   18488:	moveq	r5, r3
   1848c:	moveq	fp, r4
   18490:	ldrne	r5, [fp, #12]
   18494:	ands	r5, r5, #8
   18498:	bne	185dc <argp_error@@Base+0x5cc>
   1849c:	tst	r3, #8
   184a0:	bne	18520 <argp_error@@Base+0x510>
   184a4:	sub	r3, r6, #1
   184a8:	cmp	r3, #254	; 0xfe
   184ac:	bhi	18520 <argp_error@@Base+0x510>
   184b0:	bl	11394 <__ctype_b_loc@plt>
   184b4:	ldr	r1, [r0]
   184b8:	lsl	r3, r6, #1
   184bc:	ldrh	r3, [r1, r3]
   184c0:	tst	r3, #16384	; 0x4000
   184c4:	beq	18520 <argp_error@@Base+0x510>
   184c8:	add	r3, r9, #1
   184cc:	str	r3, [r7, #4]
   184d0:	strb	r6, [r9]
   184d4:	ldr	r3, [fp, #8]
   184d8:	cmp	r3, #0
   184dc:	beq	18510 <argp_error@@Base+0x500>
   184e0:	ldr	r3, [r7, #4]
   184e4:	mov	r2, #58	; 0x3a
   184e8:	add	r1, r3, #1
   184ec:	str	r1, [r7, #4]
   184f0:	strb	r2, [r3]
   184f4:	ldr	r3, [fp, #12]
   184f8:	tst	r3, #1
   184fc:	beq	18510 <argp_error@@Base+0x500>
   18500:	ldr	r3, [r7, #4]
   18504:	add	r1, r3, #1
   18508:	str	r1, [r7, #4]
   1850c:	strb	r2, [r3]
   18510:	ldr	r3, [r7, #4]
   18514:	mov	r2, #0
   18518:	strb	r2, [r3]
   1851c:	ldr	r9, [r7, #4]
   18520:	ldr	sl, [r4]
   18524:	cmp	sl, #0
   18528:	beq	185dc <argp_error@@Base+0x5cc>
   1852c:	ldr	r3, [r7]
   18530:	ldr	r8, [r3, #8]
   18534:	str	r3, [sp, #12]
   18538:	ldr	r0, [r8]
   1853c:	cmp	r0, #0
   18540:	beq	18564 <argp_error@@Base+0x554>
   18544:	mov	r6, r8
   18548:	mov	r1, sl
   1854c:	bl	111d8 <strcmp@plt>
   18550:	cmp	r0, #0
   18554:	beq	185e4 <argp_error@@Base+0x5d4>
   18558:	ldr	r0, [r6, #16]!
   1855c:	cmp	r0, #0
   18560:	bne	18548 <argp_error@@Base+0x538>
   18564:	ldr	r0, [fp, #8]
   18568:	ldr	r1, [r7, #8]
   1856c:	cmp	r0, #0
   18570:	str	sl, [r1]
   18574:	beq	18588 <argp_error@@Base+0x578>
   18578:	ldr	r3, [fp, #12]
   1857c:	tst	r3, #1
   18580:	movne	r5, #2
   18584:	moveq	r5, #1
   18588:	str	r5, [r1, #4]
   1858c:	mov	r3, #0
   18590:	add	ip, r1, #16
   18594:	ldr	r0, [r4, #4]
   18598:	str	r3, [r1, #8]
   1859c:	ldr	r2, [sp, #16]
   185a0:	cmp	r0, r3
   185a4:	ldr	r3, [sp, #12]
   185a8:	ldreq	r0, [fp, #4]
   185ac:	ldr	r3, [r3, #48]	; 0x30
   185b0:	bic	r0, r0, #-16777216	; 0xff000000
   185b4:	sub	r3, r2, r3
   185b8:	ldr	r2, [sp, #20]
   185bc:	asr	r3, r3, #2
   185c0:	mul	r3, r2, r3
   185c4:	add	r3, r3, #1
   185c8:	add	r3, r0, r3, lsl #24
   185cc:	str	r3, [r1, #12]
   185d0:	mov	r3, #0
   185d4:	str	ip, [r7, #8]
   185d8:	str	r3, [r1, #16]
   185dc:	add	r4, r4, #24
   185e0:	b	18468 <argp_error@@Base+0x458>
   185e4:	sub	r6, r6, r8
   185e8:	cmp	r6, #0
   185ec:	bge	185dc <argp_error@@Base+0x5cc>
   185f0:	b	18564 <argp_error@@Base+0x554>
   185f4:	ldr	r3, [r4, #16]
   185f8:	cmp	r3, #0
   185fc:	bne	18480 <argp_error@@Base+0x470>
   18600:	ldr	r3, [r4, #20]
   18604:	cmp	r3, #0
   18608:	bne	18480 <argp_error@@Base+0x470>
   1860c:	ldr	r3, [sp, #28]
   18610:	ldr	r2, [r3, #4]
   18614:	mov	r3, #0
   18618:	ldr	r1, [sp, #16]
   1861c:	ldr	r0, [sp, #24]
   18620:	str	r2, [r1]
   18624:	mov	r2, r1
   18628:	ldr	r1, [sp, #28]
   1862c:	cmp	r0, r3
   18630:	stmib	r2, {r1, r9}
   18634:	ldr	r1, [sp, #32]
   18638:	str	r3, [r2, #12]
   1863c:	str	r1, [r2, #16]
   18640:	ldr	r1, [sp, #36]	; 0x24
   18644:	str	r3, [r2, #24]
   18648:	str	r3, [r2, #28]
   1864c:	str	r3, [r2, #32]
   18650:	str	r1, [r2, #20]
   18654:	beq	18690 <argp_error@@Base+0x680>
   18658:	ldr	r2, [r0]
   1865c:	cmp	r2, r3
   18660:	beq	1871c <argp_error@@Base+0x70c>
   18664:	mov	r1, r0
   18668:	add	r3, r3, #1
   1866c:	ldr	r2, [r1, r3, lsl #4]
   18670:	cmp	r2, #0
   18674:	bne	18668 <argp_error@@Base+0x658>
   18678:	lsl	r3, r3, #2
   1867c:	ldr	r2, [r7, #12]
   18680:	ldr	r1, [sp, #16]
   18684:	add	r3, r2, r3
   18688:	str	r2, [r1, #28]
   1868c:	str	r3, [r7, #12]
   18690:	ldr	r3, [sp, #16]
   18694:	add	r0, r3, #36	; 0x24
   18698:	ldr	r5, [sp, #24]
   1869c:	cmp	r5, #0
   186a0:	beq	186e0 <argp_error@@Base+0x6d0>
   186a4:	ldr	r1, [r5]
   186a8:	cmp	r1, #0
   186ac:	beq	186e0 <argp_error@@Base+0x6d0>
   186b0:	ldr	r6, [sp, #16]
   186b4:	mov	r2, #0
   186b8:	add	r4, r2, #1
   186bc:	mov	r3, r0
   186c0:	str	r7, [sp]
   186c4:	mov	r0, r1
   186c8:	mov	r1, r6
   186cc:	bl	18418 <argp_error@@Base+0x408>
   186d0:	ldr	r1, [r5, r4, lsl #4]
   186d4:	mov	r2, r4
   186d8:	cmp	r1, #0
   186dc:	bne	186b8 <argp_error@@Base+0x6a8>
   186e0:	add	sp, sp, #44	; 0x2c
   186e4:	ldrd	r4, [sp]
   186e8:	ldrd	r6, [sp, #8]
   186ec:	ldrd	r8, [sp, #16]
   186f0:	ldrd	sl, [sp, #24]
   186f4:	add	sp, sp, #32
   186f8:	pop	{pc}		; (ldr pc, [sp], #4)
   186fc:	ldr	r2, [r0, #4]
   18700:	cmp	r2, #0
   18704:	beq	18710 <argp_error@@Base+0x700>
   18708:	ldr	r9, [r7, #4]
   1870c:	b	18614 <argp_error@@Base+0x604>
   18710:	ldr	r0, [sp, #16]
   18714:	str	r2, [sp, #16]
   18718:	b	18698 <argp_error@@Base+0x688>
   1871c:	mov	r3, r2
   18720:	b	1867c <argp_error@@Base+0x66c>

00018724 <argp_parse@@Base>:
   18724:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18728:	tst	r3, #1
   1872c:	mov	r4, r3
   18730:	strd	r6, [sp, #8]
   18734:	strd	r8, [sp, #16]
   18738:	strd	sl, [sp, #24]
   1873c:	add	fp, sp, #32
   18740:	str	lr, [sp, #32]
   18744:	sub	sp, sp, #236	; 0xec
   18748:	str	r1, [fp, #-256]	; 0xffffff00
   1874c:	str	r2, [fp, #-236]	; 0xffffff14
   18750:	str	r0, [fp, #-232]	; 0xffffff18
   18754:	bne	18780 <argp_parse@@Base+0x5c>
   18758:	movw	r3, #58444	; 0xe44c
   1875c:	movt	r3, #2
   18760:	ldr	r2, [r3]
   18764:	cmp	r2, #0
   18768:	beq	191ac <argp_parse@@Base+0xa88>
   1876c:	movw	r5, #58440	; 0xe448
   18770:	movt	r5, #2
   18774:	ldr	r3, [r5]
   18778:	cmp	r3, #0
   1877c:	beq	191bc <argp_parse@@Base+0xa98>
   18780:	ands	r3, r4, #4
   18784:	moveq	r5, #1
   18788:	movne	r5, #0
   1878c:	ands	ip, r4, #16
   18790:	str	r3, [fp, #-240]	; 0xffffff10
   18794:	beq	187ec <argp_parse@@Base+0xc8>
   18798:	ldr	r2, [fp, #-232]	; 0xffffff18
   1879c:	mov	r3, #0
   187a0:	sub	r9, fp, #196	; 0xc4
   187a4:	str	r5, [fp, #-228]	; 0xffffff1c
   187a8:	str	r3, [fp, #-224]	; 0xffffff20
   187ac:	str	r3, [fp, #-220]	; 0xffffff24
   187b0:	str	r3, [fp, #-216]	; 0xffffff28
   187b4:	cmp	r2, r3
   187b8:	str	r3, [r9, #8]
   187bc:	str	r3, [r9, #12]
   187c0:	str	r3, [r9, #16]
   187c4:	str	r3, [r9, #20]
   187c8:	str	r3, [r9, #24]
   187cc:	str	r3, [r9, #28]
   187d0:	str	r3, [r9, #32]
   187d4:	bne	188a0 <argp_parse@@Base+0x17c>
   187d8:	mov	r3, #52	; 0x34
   187dc:	mov	sl, #36	; 0x24
   187e0:	str	r3, [fp, #-240]	; 0xffffff10
   187e4:	mov	r3, sl
   187e8:	b	188dc <argp_parse@@Base+0x1b8>
   187ec:	sub	sp, sp, #64	; 0x40
   187f0:	mov	r1, ip
   187f4:	add	r3, sp, #8
   187f8:	sub	sp, sp, #32
   187fc:	add	r7, sp, #8
   18800:	mov	r0, r3
   18804:	mov	r2, #64	; 0x40
   18808:	str	ip, [r7]
   1880c:	str	ip, [r7, #4]
   18810:	str	ip, [r7, #8]
   18814:	str	ip, [r7, #12]
   18818:	str	r3, [r7, #16]
   1881c:	str	ip, [r7, #20]
   18820:	str	ip, [r7, #24]
   18824:	bl	1140c <memset@plt>
   18828:	ldr	r2, [fp, #-232]	; 0xffffff18
   1882c:	mov	r3, r0
   18830:	cmp	r2, #0
   18834:	strne	r2, [r3], #16
   18838:	movw	r2, #61376	; 0xefc0
   1883c:	movt	r2, #2
   18840:	ldr	r1, [r2]
   18844:	movw	r2, #53944	; 0xd2b8
   18848:	movt	r2, #1
   1884c:	str	r2, [r3]
   18850:	cmp	r1, #0
   18854:	beq	19348 <argp_parse@@Base+0xc24>
   18858:	ldr	r1, [pc, #3444]	; 195d4 <argp_parse@@Base+0xeb0>
   1885c:	add	r2, r3, #32
   18860:	str	r1, [r3, #16]
   18864:	mov	r3, #0
   18868:	sub	r9, fp, #196	; 0xc4
   1886c:	str	r7, [fp, #-232]	; 0xffffff18
   18870:	str	r5, [fp, #-228]	; 0xffffff1c
   18874:	str	r3, [fp, #-224]	; 0xffffff20
   18878:	str	r3, [fp, #-220]	; 0xffffff24
   1887c:	str	r3, [fp, #-216]	; 0xffffff28
   18880:	str	r3, [r2]
   18884:	str	r3, [r9, #8]
   18888:	str	r3, [r9, #12]
   1888c:	str	r3, [r9, #16]
   18890:	str	r3, [r9, #20]
   18894:	str	r3, [r9, #24]
   18898:	str	r3, [r9, #28]
   1889c:	str	r3, [r9, #32]
   188a0:	sub	r1, fp, #228	; 0xe4
   188a4:	ldr	r0, [fp, #-232]	; 0xffffff18
   188a8:	bl	18160 <argp_error@@Base+0x150>
   188ac:	ldr	r5, [fp, #-228]	; 0xffffff1c
   188b0:	ldr	r3, [fp, #-220]	; 0xffffff24
   188b4:	ldr	r2, [fp, #-216]	; 0xffffff28
   188b8:	ldr	r7, [fp, #-224]	; 0xffffff20
   188bc:	add	r3, r3, #1
   188c0:	add	r3, r3, r3, lsl #3
   188c4:	lsl	r2, r2, #2
   188c8:	lsl	r3, r3, #2
   188cc:	add	r7, r7, #1
   188d0:	add	sl, r2, r3
   188d4:	add	r1, sl, r7, lsl #4
   188d8:	str	r1, [fp, #-240]	; 0xffffff10
   188dc:	str	r3, [fp, #-252]	; 0xffffff04
   188e0:	ldr	r3, [fp, #-240]	; 0xffffff10
   188e4:	str	r2, [fp, #-244]	; 0xffffff0c
   188e8:	add	r0, r3, r5
   188ec:	add	r0, r0, #1
   188f0:	bl	1ab78 <argp_parse@@Base+0x2454>
   188f4:	cmp	r0, #0
   188f8:	mov	r5, r0
   188fc:	str	r0, [fp, #-40]	; 0xffffffd8
   18900:	moveq	r5, #12
   18904:	ldr	r3, [fp, #-252]	; 0xffffff04
   18908:	ldr	r2, [fp, #-244]	; 0xffffff0c
   1890c:	beq	18e20 <argp_parse@@Base+0x6fc>
   18910:	add	ip, r5, sl
   18914:	add	r3, r5, r3
   18918:	ldr	r1, [fp, #-240]	; 0xffffff10
   1891c:	str	ip, [fp, #-244]	; 0xffffff0c
   18920:	ldrd	r6, [r9, #8]
   18924:	str	ip, [fp, #-152]	; 0xffffff68
   18928:	add	sl, r5, r1
   1892c:	ldrd	r0, [r9, #16]
   18930:	str	r5, [fp, #-112]	; 0xffffff90
   18934:	strd	r6, [fp, #-140]	; 0xffffff74
   18938:	ldrd	r6, [r9, #24]
   1893c:	strd	r0, [fp, #-252]	; 0xffffff04
   18940:	mov	r0, r3
   18944:	ldr	r1, [r9, #32]
   18948:	str	sl, [fp, #-156]	; 0xffffff64
   1894c:	ldrd	r8, [fp, #-252]	; 0xffffff04
   18950:	str	r3, [fp, #-104]	; 0xffffff98
   18954:	strd	r8, [fp, #-132]	; 0xffffff7c
   18958:	mov	r9, #1
   1895c:	mov	r8, #1
   18960:	str	r1, [fp, #-116]	; 0xffffff8c
   18964:	mov	r1, #0
   18968:	strd	r8, [fp, #-196]	; 0xffffff3c
   1896c:	strd	r8, [fp, #-148]	; 0xffffff6c
   18970:	sub	r9, fp, #160	; 0xa0
   18974:	strd	r6, [fp, #-124]	; 0xffffff84
   18978:	bl	1140c <memset@plt>
   1897c:	ldr	ip, [fp, #-244]	; 0xffffff0c
   18980:	tst	r4, #8
   18984:	str	r9, [fp, #-212]	; 0xffffff2c
   18988:	str	sl, [fp, #-208]	; 0xffffff30
   1898c:	str	ip, [fp, #-204]	; 0xffffff34
   18990:	str	r0, [fp, #-200]	; 0xffffff38
   18994:	bne	18e40 <argp_parse@@Base+0x71c>
   18998:	ands	r3, r4, #4
   1899c:	cmp	r3, #0
   189a0:	moveq	r3, sl
   189a4:	moveq	r2, ip
   189a8:	beq	189c0 <argp_parse@@Base+0x29c>
   189ac:	mov	r2, #43	; 0x2b
   189b0:	add	r3, sl, #1
   189b4:	strb	r2, [sl]
   189b8:	mov	r2, ip
   189bc:	str	r3, [fp, #-208]	; 0xffffff30
   189c0:	ldr	r0, [fp, #-232]	; 0xffffff18
   189c4:	mov	r5, #0
   189c8:	strb	r5, [r3]
   189cc:	str	r5, [r2]
   189d0:	cmp	r0, r5
   189d4:	str	r0, [fp, #-160]	; 0xffffff60
   189d8:	beq	1902c <argp_parse@@Base+0x908>
   189dc:	sub	ip, fp, #212	; 0xd4
   189e0:	mov	r2, r5
   189e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   189e8:	mov	r1, r5
   189ec:	str	ip, [sp]
   189f0:	bl	18418 <argp_error@@Base+0x408>
   189f4:	movw	r1, #58448	; 0xe450
   189f8:	movt	r1, #2
   189fc:	ldr	r6, [fp, #-236]	; 0xffffff14
   18a00:	mov	lr, #1
   18a04:	movw	r2, #58460	; 0xe45c
   18a08:	movt	r2, #2
   18a0c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18a10:	str	r0, [fp, #-108]	; 0xffffff94
   18a14:	ldr	ip, [r1]
   18a18:	str	lr, [fp, #-100]	; 0xffffff9c
   18a1c:	ldr	r1, [fp, #-256]	; 0xffffff00
   18a20:	cmp	r0, r3
   18a24:	mov	r0, #0
   18a28:	ldr	lr, [fp, #-160]	; 0xffffff60
   18a2c:	movls	r3, r6
   18a30:	ldr	r2, [r2]
   18a34:	str	ip, [fp, #-52]	; 0xffffffcc
   18a38:	str	r9, [fp, #-44]	; 0xffffffd4
   18a3c:	str	r1, [fp, #-92]	; 0xffffffa4
   18a40:	mov	r1, #0
   18a44:	str	lr, [fp, #-96]	; 0xffffffa0
   18a48:	str	r6, [fp, #-88]	; 0xffffffa8
   18a4c:	str	r5, [fp, #-84]	; 0xffffffac
   18a50:	str	r4, [fp, #-80]	; 0xffffffb0
   18a54:	strd	r0, [fp, #-76]	; 0xffffffb4
   18a58:	strd	r0, [fp, #-68]	; 0xffffffbc
   18a5c:	strd	r0, [fp, #-60]	; 0xffffffc4
   18a60:	str	r2, [fp, #-48]	; 0xffffffd0
   18a64:	bls	18b4c <argp_parse@@Base+0x428>
   18a68:	ldr	r2, [fp, #8]
   18a6c:	mov	r8, r6
   18a70:	add	r4, r3, #36	; 0x24
   18a74:	mov	r6, #3
   18a78:	movt	r6, #256	; 0x100
   18a7c:	str	r2, [r3, #24]
   18a80:	b	18acc <argp_parse@@Base+0x3a8>
   18a84:	ldr	r7, [r4, #-24]	; 0xffffffe8
   18a88:	ldr	r5, [r4, #-12]
   18a8c:	ldr	lr, [r4, #-8]
   18a90:	ldr	ip, [r4, #-4]
   18a94:	str	r7, [fp, #-76]	; 0xffffffb4
   18a98:	str	r5, [fp, #-68]	; 0xffffffbc
   18a9c:	str	lr, [fp, #-64]	; 0xffffffc0
   18aa0:	str	ip, [fp, #-60]	; 0xffffffc4
   18aa4:	blx	r3
   18aa8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18aac:	str	r3, [r4, #-4]
   18ab0:	ldr	r3, [fp, #-108]	; 0xffffff94
   18ab4:	cmp	r3, r4
   18ab8:	bls	190e0 <argp_parse@@Base+0x9bc>
   18abc:	cmp	r0, #7
   18ac0:	cmpne	r0, #0
   18ac4:	bne	190d0 <argp_parse@@Base+0x9ac>
   18ac8:	add	r4, r4, #36	; 0x24
   18acc:	ldr	r3, [r4, #-20]	; 0xffffffec
   18ad0:	mov	r1, #0
   18ad4:	sub	r2, fp, #96	; 0x60
   18ad8:	mov	r0, r6
   18adc:	cmp	r3, r1
   18ae0:	beq	18af4 <argp_parse@@Base+0x3d0>
   18ae4:	ldr	ip, [r4, #-16]
   18ae8:	ldr	r3, [r3, #28]
   18aec:	ldr	r3, [r3, ip, lsl #2]
   18af0:	str	r3, [r4, #-12]
   18af4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   18af8:	cmp	r3, #0
   18afc:	bne	18a84 <argp_parse@@Base+0x360>
   18b00:	ldr	r3, [r4, #-32]	; 0xffffffe0
   18b04:	ldr	r3, [r3, #16]
   18b08:	cmp	r3, #0
   18b0c:	beq	18b34 <argp_parse@@Base+0x410>
   18b10:	ldr	r3, [r3]
   18b14:	cmp	r3, #0
   18b18:	beq	18b34 <argp_parse@@Base+0x410>
   18b1c:	ldr	ip, [r4, #-12]
   18b20:	ldr	r3, [r4, #-8]
   18b24:	str	ip, [r3]
   18b28:	ldr	r3, [r4, #-36]	; 0xffffffdc
   18b2c:	cmp	r3, #0
   18b30:	bne	18a84 <argp_parse@@Base+0x360>
   18b34:	ldr	r3, [fp, #-108]	; 0xffffff94
   18b38:	cmp	r4, r3
   18b3c:	bcc	18ac8 <argp_parse@@Base+0x3a4>
   18b40:	str	r8, [fp, #-236]	; 0xffffff14
   18b44:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18b48:	ldr	r4, [fp, #-80]	; 0xffffffb0
   18b4c:	tst	r4, #2
   18b50:	beq	190a0 <argp_parse@@Base+0x97c>
   18b54:	tst	r4, #1
   18b58:	mov	r2, #0
   18b5c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   18b60:	subne	r3, r3, #4
   18b64:	str	r2, [fp, #-144]	; 0xffffff70
   18b68:	ldr	r2, [fp, #-236]	; 0xffffff14
   18b6c:	strne	r3, [fp, #-88]	; 0xffffffa8
   18b70:	addne	r4, r4, #1
   18b74:	strne	r4, [fp, #-92]	; 0xffffffa4
   18b78:	cmp	r2, r3
   18b7c:	beq	190b8 <argp_parse@@Base+0x994>
   18b80:	movw	r3, #58440	; 0xe448
   18b84:	movt	r3, #2
   18b88:	ldr	r3, [r3]
   18b8c:	str	r3, [fp, #-56]	; 0xffffffc8
   18b90:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18b94:	movw	r3, #54272	; 0xd400
   18b98:	movt	r3, #1
   18b9c:	mov	r9, #6
   18ba0:	movt	r9, #256	; 0x100
   18ba4:	ldr	r7, [fp, #-84]	; 0xffffffac
   18ba8:	mov	r0, r4
   18bac:	str	r3, [fp, #-232]	; 0xffffff18
   18bb0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18bb4:	cmp	r3, #0
   18bb8:	beq	18ca0 <argp_parse@@Base+0x57c>
   18bbc:	cmp	r3, r7
   18bc0:	movgt	r3, #0
   18bc4:	strgt	r3, [fp, #-72]	; 0xffffffb8
   18bc8:	bgt	18ca0 <argp_parse@@Base+0x57c>
   18bcc:	cmp	r7, r0
   18bd0:	bge	18ef0 <argp_parse@@Base+0x7cc>
   18bd4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18bd8:	tst	r3, #4
   18bdc:	bne	19104 <argp_parse@@Base+0x9e0>
   18be0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18be4:	ldr	r5, [r3, r7, lsl #2]
   18be8:	str	r5, [fp, #-136]	; 0xffffff78
   18bec:	ldr	r8, [fp, #-112]	; 0xffffff90
   18bf0:	str	r7, [fp, #-84]	; 0xffffffac
   18bf4:	ldr	ip, [fp, #-108]	; 0xffffff94
   18bf8:	cmp	r8, ip
   18bfc:	bcs	18ee8 <argp_parse@@Base+0x7c4>
   18c00:	mov	r3, r7
   18c04:	add	r4, r8, #36	; 0x24
   18c08:	ldr	sl, [r4, #-36]	; 0xffffffdc
   18c0c:	mov	r0, #0
   18c10:	add	lr, r3, #1
   18c14:	sub	r2, fp, #96	; 0x60
   18c18:	mov	r1, r5
   18c1c:	sub	r6, r4, #36	; 0x24
   18c20:	mov	r8, r4
   18c24:	str	lr, [fp, #-84]	; 0xffffffac
   18c28:	cmp	sl, r0
   18c2c:	beq	18ed4 <argp_parse@@Base+0x7b0>
   18c30:	ldr	r3, [r4, #-12]
   18c34:	ldr	lr, [r4, #-8]
   18c38:	ldr	ip, [r4, #-4]
   18c3c:	str	r3, [fp, #-68]	; 0xffffffbc
   18c40:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18c44:	str	r3, [fp, #-76]	; 0xffffffb4
   18c48:	str	lr, [fp, #-64]	; 0xffffffc0
   18c4c:	str	ip, [fp, #-60]	; 0xffffffc4
   18c50:	blx	sl
   18c54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18c58:	cmp	r0, #7
   18c5c:	str	r3, [r4, #-4]
   18c60:	beq	18e5c <argp_parse@@Base+0x738>
   18c64:	cmp	r0, #0
   18c68:	bne	18fa4 <argp_parse@@Base+0x880>
   18c6c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18c70:	ldr	r3, [fp, #-84]	; 0xffffffac
   18c74:	cmp	r7, r3
   18c78:	bge	18fbc <argp_parse@@Base+0x898>
   18c7c:	ldr	r1, [r4, #-24]	; 0xffffffe8
   18c80:	sub	ip, r3, r7
   18c84:	mov	r7, r3
   18c88:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18c8c:	add	r3, r1, ip
   18c90:	str	r3, [r4, #-24]	; 0xffffffe8
   18c94:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18c98:	cmp	r3, #0
   18c9c:	bne	18bbc <argp_parse@@Base+0x498>
   18ca0:	cmp	r2, #0
   18ca4:	beq	18bcc <argp_parse@@Base+0x4a8>
   18ca8:	mvn	r2, #0
   18cac:	str	r7, [fp, #-148]	; 0xffffff6c
   18cb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18cb4:	str	r2, [fp, #-140]	; 0xffffff74
   18cb8:	ldr	r2, [fp, #-156]	; 0xffffff64
   18cbc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18cc0:	ands	ip, r3, #64	; 0x40
   18cc4:	ldr	r3, [fp, #-152]	; 0xffffff68
   18cc8:	beq	18fd0 <argp_parse@@Base+0x8ac>
   18ccc:	mov	ip, #0
   18cd0:	sub	lr, fp, #148	; 0x94
   18cd4:	stm	sp, {ip, lr}
   18cd8:	bl	1984c <argp_parse@@Base+0x1128>
   18cdc:	ldr	r7, [fp, #-148]	; 0xffffff6c
   18ce0:	mov	r4, r0
   18ce4:	cmn	r4, #1
   18ce8:	str	r7, [fp, #-84]	; 0xffffffac
   18cec:	beq	18ff4 <argp_parse@@Base+0x8d0>
   18cf0:	cmp	r4, #63	; 0x3f
   18cf4:	beq	18d0c <argp_parse@@Base+0x5e8>
   18cf8:	cmp	r4, #1
   18cfc:	bne	192b8 <argp_parse@@Base+0xb94>
   18d00:	sub	r7, r7, #1
   18d04:	ldr	r5, [fp, #-136]	; 0xffffff78
   18d08:	b	18bec <argp_parse@@Base+0x4c8>
   18d0c:	ldr	r3, [fp, #-140]	; 0xffffff74
   18d10:	cmn	r3, #1
   18d14:	beq	191d0 <argp_parse@@Base+0xaac>
   18d18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18d1c:	sub	r6, fp, #96	; 0x60
   18d20:	mov	r0, r6
   18d24:	mov	r2, #260	; 0x104
   18d28:	mov	r5, #7
   18d2c:	bl	17f50 <argp_state_help@@Base>
   18d30:	ldr	r3, [fp, #-112]	; 0xffffff90
   18d34:	ldr	ip, [fp, #-108]	; 0xffffff94
   18d38:	cmp	r3, ip
   18d3c:	mov	r6, r3
   18d40:	mov	r4, ip
   18d44:	bcs	19558 <argp_parse@@Base+0xe34>
   18d48:	mov	r7, #5
   18d4c:	movt	r7, #256	; 0x100
   18d50:	ldr	r3, [r6]
   18d54:	mov	r1, #0
   18d58:	sub	r2, fp, #96	; 0x60
   18d5c:	mov	r0, r7
   18d60:	cmp	r3, r1
   18d64:	beq	19294 <argp_parse@@Base+0xb70>
   18d68:	ldr	ip, [r6, #24]
   18d6c:	add	r6, r6, #36	; 0x24
   18d70:	ldr	r4, [r6, #-8]
   18d74:	ldr	lr, [r6, #-4]
   18d78:	str	ip, [fp, #-68]	; 0xffffffbc
   18d7c:	ldr	ip, [r6, #-24]	; 0xffffffe8
   18d80:	str	ip, [fp, #-76]	; 0xffffffb4
   18d84:	str	r4, [fp, #-64]	; 0xffffffc0
   18d88:	str	lr, [fp, #-60]	; 0xffffffc4
   18d8c:	blx	r3
   18d90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18d94:	str	r3, [r6, #-4]
   18d98:	ldr	r4, [fp, #-108]	; 0xffffff94
   18d9c:	cmp	r6, r4
   18da0:	bcc	18d50 <argp_parse@@Base+0x62c>
   18da4:	ldr	r3, [fp, #-112]	; 0xffffff90
   18da8:	sub	r4, r4, #36	; 0x24
   18dac:	cmp	r3, r4
   18db0:	bhi	18e10 <argp_parse@@Base+0x6ec>
   18db4:	mov	r7, #7
   18db8:	movt	r7, #256	; 0x100
   18dbc:	ldr	r6, [r4]
   18dc0:	mov	r1, #0
   18dc4:	sub	r2, fp, #96	; 0x60
   18dc8:	mov	r0, r7
   18dcc:	cmp	r6, r1
   18dd0:	beq	19284 <argp_parse@@Base+0xb60>
   18dd4:	ldr	r8, [r4, #12]
   18dd8:	sub	r4, r4, #36	; 0x24
   18ddc:	ldr	lr, [r4, #60]	; 0x3c
   18de0:	ldr	ip, [r4, #64]	; 0x40
   18de4:	ldr	r3, [r4, #68]	; 0x44
   18de8:	str	r8, [fp, #-76]	; 0xffffffb4
   18dec:	str	lr, [fp, #-68]	; 0xffffffbc
   18df0:	str	ip, [fp, #-64]	; 0xffffffc0
   18df4:	str	r3, [fp, #-60]	; 0xffffffc4
   18df8:	blx	r6
   18dfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18e00:	str	r3, [r4, #68]	; 0x44
   18e04:	ldr	r3, [fp, #-112]	; 0xffffff90
   18e08:	cmp	r3, r4
   18e0c:	bls	18dbc <argp_parse@@Base+0x698>
   18e10:	cmp	r5, #7
   18e14:	moveq	r5, #22
   18e18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e1c:	bl	1975c <argp_parse@@Base+0x1038>
   18e20:	mov	r0, r5
   18e24:	sub	sp, fp, #32
   18e28:	ldrd	r4, [sp]
   18e2c:	ldrd	r6, [sp, #8]
   18e30:	ldrd	r8, [sp, #16]
   18e34:	ldrd	sl, [sp, #24]
   18e38:	add	sp, sp, #32
   18e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   18e40:	ldr	r1, [fp, #-240]	; 0xffffff10
   18e44:	mov	r2, #45	; 0x2d
   18e48:	add	r3, sl, #1
   18e4c:	str	r3, [fp, #-208]	; 0xffffff30
   18e50:	strb	r2, [r5, r1]
   18e54:	mov	r2, ip
   18e58:	b	189c0 <argp_parse@@Base+0x29c>
   18e5c:	ldr	r3, [fp, #-84]	; 0xffffffac
   18e60:	ldr	sl, [r4, #-36]	; 0xffffffdc
   18e64:	sub	r3, r3, #1
   18e68:	cmp	sl, #0
   18e6c:	str	r3, [fp, #-84]	; 0xffffffac
   18e70:	beq	195a0 <argp_parse@@Base+0xe7c>
   18e74:	ldr	r3, [r6, #24]
   18e78:	sub	r2, fp, #96	; 0x60
   18e7c:	mov	r1, #0
   18e80:	mov	r0, r9
   18e84:	ldr	lr, [r6, #28]
   18e88:	ldr	ip, [r6, #32]
   18e8c:	str	r3, [fp, #-68]	; 0xffffffbc
   18e90:	ldr	r3, [r6, #12]
   18e94:	str	r3, [fp, #-76]	; 0xffffffb4
   18e98:	str	lr, [fp, #-64]	; 0xffffffc0
   18e9c:	str	ip, [fp, #-60]	; 0xffffffc4
   18ea0:	blx	sl
   18ea4:	ldr	ip, [fp, #-108]	; 0xffffff94
   18ea8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18eac:	cmp	ip, r4
   18eb0:	movls	r2, #0
   18eb4:	movhi	r2, #1
   18eb8:	cmp	r0, #7
   18ebc:	str	r3, [r6, #32]
   18ec0:	movne	r2, #0
   18ec4:	cmp	r2, #0
   18ec8:	beq	195a8 <argp_parse@@Base+0xe84>
   18ecc:	ldr	r3, [fp, #-84]	; 0xffffffac
   18ed0:	b	18c04 <argp_parse@@Base+0x4e0>
   18ed4:	str	r3, [fp, #-84]	; 0xffffffac
   18ed8:	add	r2, r4, #36	; 0x24
   18edc:	cmp	ip, r4
   18ee0:	mov	r4, r2
   18ee4:	bhi	18c08 <argp_parse@@Base+0x4e4>
   18ee8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18eec:	ldr	r7, [fp, #-84]	; 0xffffffac
   18ef0:	cmp	r7, r0
   18ef4:	bne	19104 <argp_parse@@Base+0x9e0>
   18ef8:	ldr	r4, [fp, #-112]	; 0xffffff90
   18efc:	ldr	ip, [fp, #-108]	; 0xffffff94
   18f00:	mov	r3, r4
   18f04:	cmp	r4, ip
   18f08:	bcs	19568 <argp_parse@@Base+0xe44>
   18f0c:	mov	r6, #2
   18f10:	movt	r6, #256	; 0x100
   18f14:	mov	r5, #0
   18f18:	b	18f60 <argp_parse@@Base+0x83c>
   18f1c:	ldr	r7, [r4, #-12]
   18f20:	ldr	lr, [r4, #-8]
   18f24:	ldr	ip, [r4, #-4]
   18f28:	str	r3, [fp, #-76]	; 0xffffffb4
   18f2c:	str	r7, [fp, #-68]	; 0xffffffbc
   18f30:	str	lr, [fp, #-64]	; 0xffffffc0
   18f34:	str	ip, [fp, #-60]	; 0xffffffc4
   18f38:	blx	r5
   18f3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18f40:	mov	r5, r0
   18f44:	str	r3, [r4, #-4]
   18f48:	ldr	ip, [fp, #-108]	; 0xffffff94
   18f4c:	cmp	ip, r4
   18f50:	bls	1943c <argp_parse@@Base+0xd18>
   18f54:	cmp	r5, #7
   18f58:	cmpne	r5, #0
   18f5c:	bne	19404 <argp_parse@@Base+0xce0>
   18f60:	ldr	r3, [r4, #12]
   18f64:	sub	r2, fp, #96	; 0x60
   18f68:	mov	r0, r6
   18f6c:	add	r4, r4, #36	; 0x24
   18f70:	subs	r1, r3, #0
   18f74:	bne	18f4c <argp_parse@@Base+0x828>
   18f78:	ldr	r5, [r4, #-36]	; 0xffffffdc
   18f7c:	cmp	r5, #0
   18f80:	bne	18f1c <argp_parse@@Base+0x7f8>
   18f84:	cmp	ip, r4
   18f88:	mov	r5, #7
   18f8c:	bhi	18f60 <argp_parse@@Base+0x83c>
   18f90:	ldr	r3, [fp, #-112]	; 0xffffff90
   18f94:	sub	r4, ip, #36	; 0x24
   18f98:	cmp	r3, r4
   18f9c:	bls	19458 <argp_parse@@Base+0xd34>
   18fa0:	b	194dc <argp_parse@@Base+0xdb8>
   18fa4:	mov	r5, r0
   18fa8:	cmp	r5, #7
   18fac:	bne	18d30 <argp_parse@@Base+0x60c>
   18fb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18fb4:	sub	r6, fp, #96	; 0x60
   18fb8:	b	18d20 <argp_parse@@Base+0x5fc>
   18fbc:	mov	r1, #1
   18fc0:	mov	r7, r3
   18fc4:	mov	r2, r1
   18fc8:	str	r1, [fp, #-100]	; 0xffffff9c
   18fcc:	b	18bb0 <argp_parse@@Base+0x48c>
   18fd0:	str	ip, [sp]
   18fd4:	sub	ip, fp, #148	; 0x94
   18fd8:	str	ip, [sp, #4]
   18fdc:	bl	197e4 <argp_parse@@Base+0x10c0>
   18fe0:	ldr	r7, [fp, #-148]	; 0xffffff6c
   18fe4:	mov	r4, r0
   18fe8:	cmn	r4, #1
   18fec:	str	r7, [fp, #-84]	; 0xffffffac
   18ff0:	bne	18cf0 <argp_parse@@Base+0x5cc>
   18ff4:	mov	r3, #0
   18ff8:	cmp	r7, #1
   18ffc:	str	r3, [fp, #-100]	; 0xffffff9c
   19000:	ble	190d8 <argp_parse@@Base+0x9b4>
   19004:	sub	r3, r7, #-1073741823	; 0xc0000001
   19008:	ldr	r1, [fp, #-232]	; 0xffffff18
   1900c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19010:	ldr	r0, [r2, r3, lsl #2]
   19014:	bl	111d8 <strcmp@plt>
   19018:	cmp	r0, #0
   1901c:	bne	190d8 <argp_parse@@Base+0x9b4>
   19020:	str	r7, [fp, #-72]	; 0xffffffb8
   19024:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19028:	b	18bcc <argp_parse@@Base+0x4a8>
   1902c:	ldr	r2, [fp, #-256]	; 0xffffff00
   19030:	movw	r3, #58448	; 0xe450
   19034:	movt	r3, #2
   19038:	mov	lr, r0
   1903c:	mov	r0, #1
   19040:	ldr	r1, [r3]
   19044:	movw	r3, #58460	; 0xe45c
   19048:	movt	r3, #2
   1904c:	str	r0, [fp, #-100]	; 0xffffff9c
   19050:	mov	r0, #0
   19054:	tst	r4, #2
   19058:	ldr	ip, [fp, #-236]	; 0xffffff14
   1905c:	str	lr, [fp, #-96]	; 0xffffffa0
   19060:	str	r2, [fp, #-92]	; 0xffffffa4
   19064:	ldr	r2, [fp, #-112]	; 0xffffff90
   19068:	ldr	r3, [r3]
   1906c:	str	r2, [fp, #-108]	; 0xffffff94
   19070:	str	r1, [fp, #-52]	; 0xffffffcc
   19074:	mov	r1, #0
   19078:	str	ip, [fp, #-88]	; 0xffffffa8
   1907c:	str	lr, [fp, #-84]	; 0xffffffac
   19080:	str	r4, [fp, #-80]	; 0xffffffb0
   19084:	strd	r0, [fp, #-76]	; 0xffffffb4
   19088:	strd	r0, [fp, #-68]	; 0xffffffbc
   1908c:	strd	r0, [fp, #-60]	; 0xffffffc4
   19090:	str	r3, [fp, #-48]	; 0xffffffd0
   19094:	mov	r3, ip
   19098:	str	r9, [fp, #-44]	; 0xffffffd4
   1909c:	bne	18b54 <argp_parse@@Base+0x430>
   190a0:	mov	r2, #1
   190a4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   190a8:	str	r2, [fp, #-144]	; 0xffffff70
   190ac:	ldr	r2, [fp, #-236]	; 0xffffff14
   190b0:	cmp	r2, r3
   190b4:	bne	18b80 <argp_parse@@Base+0x45c>
   190b8:	ldr	r0, [r2]
   190bc:	cmp	r0, #0
   190c0:	beq	18b80 <argp_parse@@Base+0x45c>
   190c4:	bl	19688 <argp_parse@@Base+0xf64>
   190c8:	str	r0, [fp, #-56]	; 0xffffffc8
   190cc:	b	18b90 <argp_parse@@Base+0x46c>
   190d0:	mov	r5, r0
   190d4:	b	18e20 <argp_parse@@Base+0x6fc>
   190d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   190dc:	b	18bcc <argp_parse@@Base+0x4a8>
   190e0:	cmp	r0, #7
   190e4:	mov	r5, r0
   190e8:	str	r8, [fp, #-236]	; 0xffffff14
   190ec:	beq	18b44 <argp_parse@@Base+0x420>
   190f0:	cmp	r0, #0
   190f4:	bne	18e20 <argp_parse@@Base+0x6fc>
   190f8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   190fc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   19100:	b	18b4c <argp_parse@@Base+0x428>
   19104:	ldr	r3, [fp, #4]
   19108:	cmp	r3, #0
   1910c:	beq	1924c <argp_parse@@Base+0xb28>
   19110:	str	r7, [r3]
   19114:	ldr	r3, [fp, #-112]	; 0xffffff90
   19118:	ldr	ip, [fp, #-108]	; 0xffffff94
   1911c:	sub	r2, ip, #36	; 0x24
   19120:	cmp	r3, r2
   19124:	movls	r6, #4
   19128:	subls	r4, ip, #72	; 0x48
   1912c:	movtls	r6, #256	; 0x100
   19130:	bhi	19384 <argp_parse@@Base+0xc60>
   19134:	ldr	r5, [r4, #36]	; 0x24
   19138:	mov	r1, #0
   1913c:	sub	r2, fp, #96	; 0x60
   19140:	mov	r0, r6
   19144:	cmp	r5, r1
   19148:	beq	192a4 <argp_parse@@Base+0xb80>
   1914c:	ldr	r3, [r4, #60]	; 0x3c
   19150:	ldr	lr, [r4, #64]	; 0x40
   19154:	ldr	ip, [r4, #68]	; 0x44
   19158:	str	r3, [fp, #-68]	; 0xffffffbc
   1915c:	ldr	r3, [r4, #48]	; 0x30
   19160:	str	r3, [fp, #-76]	; 0xffffffb4
   19164:	str	lr, [fp, #-64]	; 0xffffffc0
   19168:	str	ip, [fp, #-60]	; 0xffffffc4
   1916c:	blx	r5
   19170:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19174:	str	r3, [r4, #68]	; 0x44
   19178:	ldr	r3, [fp, #-112]	; 0xffffff90
   1917c:	cmp	r4, r3
   19180:	sub	r4, r4, #36	; 0x24
   19184:	bcc	19364 <argp_parse@@Base+0xc40>
   19188:	cmp	r0, #7
   1918c:	cmpne	r0, #0
   19190:	beq	19134 <argp_parse@@Base+0xa10>
   19194:	ldr	ip, [fp, #-108]	; 0xffffff94
   19198:	mov	r5, r0
   1919c:	sub	r4, ip, #36	; 0x24
   191a0:	cmp	r4, r3
   191a4:	bcs	18db4 <argp_parse@@Base+0x690>
   191a8:	b	18e18 <argp_parse@@Base+0x6f4>
   191ac:	ldr	r2, [fp, #-236]	; 0xffffff14
   191b0:	ldr	r2, [r2]
   191b4:	str	r2, [r3]
   191b8:	b	1876c <argp_parse@@Base+0x48>
   191bc:	ldr	r3, [fp, #-236]	; 0xffffff14
   191c0:	ldr	r0, [r3]
   191c4:	bl	19688 <argp_parse@@Base+0xf64>
   191c8:	str	r0, [r5]
   191cc:	b	18780 <argp_parse@@Base+0x5c>
   191d0:	mov	r1, r4
   191d4:	ldr	r0, [fp, #-156]	; 0xffffff64
   191d8:	bl	113c4 <strchr@plt>
   191dc:	cmp	r0, #0
   191e0:	beq	1921c <argp_parse@@Base+0xaf8>
   191e4:	ldr	r5, [fp, #-112]	; 0xffffff90
   191e8:	ldr	r2, [fp, #-108]	; 0xffffff94
   191ec:	cmp	r5, r2
   191f0:	bcs	1921c <argp_parse@@Base+0xaf8>
   191f4:	ldr	r3, [r5, #8]
   191f8:	cmp	r3, r0
   191fc:	bls	19210 <argp_parse@@Base+0xaec>
   19200:	b	194f8 <argp_parse@@Base+0xdd4>
   19204:	ldr	r3, [r5, #8]
   19208:	cmp	r0, r3
   1920c:	bcc	194f8 <argp_parse@@Base+0xdd4>
   19210:	add	r5, r5, #36	; 0x24
   19214:	cmp	r5, r2
   19218:	bcc	19204 <argp_parse@@Base+0xae0>
   1921c:	sub	r6, fp, #96	; 0x60
   19220:	mov	r2, r4
   19224:	add	r4, r4, #1
   19228:	ldr	r3, [pc, #936]	; 195d8 <argp_parse@@Base+0xeb4>
   1922c:	movw	r1, #54276	; 0xd404
   19230:	movt	r1, #1
   19234:	mov	r0, r6
   19238:	bic	r4, r4, #2
   1923c:	bl	18010 <argp_error@@Base>
   19240:	cmp	r4, #0
   19244:	bne	1927c <argp_parse@@Base+0xb58>
   19248:	b	18ee8 <argp_parse@@Base+0x7c4>
   1924c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19250:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19254:	tst	r3, #2
   19258:	bne	18fb4 <argp_parse@@Base+0x890>
   1925c:	cmp	r1, #0
   19260:	beq	18fb4 <argp_parse@@Base+0x890>
   19264:	mov	r0, r1
   19268:	movw	r1, #54296	; 0xd418
   1926c:	movt	r1, #1
   19270:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19274:	sub	r6, fp, #96	; 0x60
   19278:	bl	113d0 <fprintf@plt>
   1927c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19280:	b	18d20 <argp_parse@@Base+0x5fc>
   19284:	sub	r4, r4, #36	; 0x24
   19288:	cmp	r4, r3
   1928c:	bcs	18dbc <argp_parse@@Base+0x698>
   19290:	b	18e10 <argp_parse@@Base+0x6ec>
   19294:	add	r6, r6, #36	; 0x24
   19298:	cmp	r6, r4
   1929c:	bcc	18d50 <argp_parse@@Base+0x62c>
   192a0:	b	18da4 <argp_parse@@Base+0x680>
   192a4:	cmp	r4, r3
   192a8:	sub	r4, r4, #36	; 0x24
   192ac:	bcs	19134 <argp_parse@@Base+0xa10>
   192b0:	mov	r5, #7
   192b4:	b	19368 <argp_parse@@Base+0xc44>
   192b8:	asrs	r8, r4, #24
   192bc:	beq	191d0 <argp_parse@@Base+0xaac>
   192c0:	add	r3, r8, r8, lsl #3
   192c4:	ldr	r5, [fp, #-112]	; 0xffffff90
   192c8:	ands	r2, r4, #8388608	; 0x800000
   192cc:	movne	r2, #-16777216	; 0xff000000
   192d0:	bic	r0, r4, #-16777216	; 0xff000000
   192d4:	lsl	r3, r3, #2
   192d8:	orr	r0, r0, r2
   192dc:	sub	r3, r3, #36	; 0x24
   192e0:	ldr	r7, [r5, r3]
   192e4:	add	r5, r5, r3
   192e8:	cmp	r7, #0
   192ec:	beq	19560 <argp_parse@@Base+0xe3c>
   192f0:	ldr	r3, [r5, #24]
   192f4:	sub	r6, fp, #96	; 0x60
   192f8:	mov	r2, r6
   192fc:	ldr	ip, [r5, #28]
   19300:	ldr	r1, [r5, #32]
   19304:	str	r3, [fp, #-68]	; 0xffffffbc
   19308:	ldr	r3, [r5, #12]
   1930c:	str	r3, [fp, #-76]	; 0xffffffb4
   19310:	str	ip, [fp, #-64]	; 0xffffffc0
   19314:	str	r1, [fp, #-60]	; 0xffffffc4
   19318:	ldr	r1, [fp, #-136]	; 0xffffff78
   1931c:	blx	r7
   19320:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19324:	str	r3, [r5, #32]
   19328:	cmp	r0, #7
   1932c:	beq	1938c <argp_parse@@Base+0xc68>
   19330:	cmp	r0, #0
   19334:	bne	18fa4 <argp_parse@@Base+0x880>
   19338:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1933c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19340:	ldr	r7, [fp, #-84]	; 0xffffffac
   19344:	b	18bb0 <argp_parse@@Base+0x48c>
   19348:	movw	r2, #58636	; 0xe50c
   1934c:	movt	r2, #2
   19350:	ldr	r2, [r2]
   19354:	cmp	r2, #0
   19358:	addeq	r2, r3, #16
   1935c:	bne	18858 <argp_parse@@Base+0x134>
   19360:	b	18864 <argp_parse@@Base+0x140>
   19364:	mov	r5, r0
   19368:	ldr	ip, [fp, #-108]	; 0xffffff94
   1936c:	cmp	r5, #7
   19370:	sub	r4, ip, #36	; 0x24
   19374:	bne	191a0 <argp_parse@@Base+0xa7c>
   19378:	cmp	r4, r3
   1937c:	movcs	r5, #0
   19380:	bcs	18db4 <argp_parse@@Base+0x690>
   19384:	mov	r5, #0
   19388:	b	18e18 <argp_parse@@Base+0x6f4>
   1938c:	cmp	r8, #0
   19390:	beq	19220 <argp_parse@@Base+0xafc>
   19394:	ldr	r3, [fp, #-152]	; 0xffffff68
   19398:	ldr	r2, [r3]
   1939c:	ldr	r1, [r3, #12]
   193a0:	cmp	r4, r1
   193a4:	bne	193c0 <argp_parse@@Base+0xc9c>
   193a8:	b	193f0 <argp_parse@@Base+0xccc>
   193ac:	add	r3, r3, #16
   193b0:	ldr	r2, [r3]
   193b4:	ldr	r1, [r3, #12]
   193b8:	cmp	r4, r1
   193bc:	beq	193f0 <argp_parse@@Base+0xccc>
   193c0:	cmp	r2, #0
   193c4:	bne	193ac <argp_parse@@Base+0xc88>
   193c8:	movw	r2, #54268	; 0xd3fc
   193cc:	movt	r2, #1
   193d0:	movw	r1, #54284	; 0xd40c
   193d4:	movt	r1, #1
   193d8:	ldr	r3, [pc, #504]	; 195d8 <argp_parse@@Base+0xeb4>
   193dc:	mov	r0, r6
   193e0:	add	r4, r4, #1
   193e4:	bl	18010 <argp_error@@Base>
   193e8:	bic	r4, r4, #2
   193ec:	b	19240 <argp_parse@@Base+0xb1c>
   193f0:	movw	r3, #54268	; 0xd3fc
   193f4:	movt	r3, #1
   193f8:	cmp	r2, #0
   193fc:	moveq	r2, r3
   19400:	b	193d0 <argp_parse@@Base+0xcac>
   19404:	ldr	r3, [fp, #-112]	; 0xffffff90
   19408:	sub	r2, ip, #36	; 0x24
   1940c:	cmp	r3, r2
   19410:	bhi	19590 <argp_parse@@Base+0xe6c>
   19414:	ldr	r2, [fp, #4]
   19418:	cmp	r2, #0
   1941c:	beq	1942c <argp_parse@@Base+0xd08>
   19420:	ldr	r2, [fp, #-84]	; 0xffffffac
   19424:	ldr	r1, [fp, #4]
   19428:	str	r2, [r1]
   1942c:	cmp	r5, #0
   19430:	bne	18fa8 <argp_parse@@Base+0x884>
   19434:	ldr	ip, [fp, #-108]	; 0xffffff94
   19438:	b	1911c <argp_parse@@Base+0x9f8>
   1943c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19440:	sub	r4, ip, #36	; 0x24
   19444:	cmp	r4, r3
   19448:	bcc	1954c <argp_parse@@Base+0xe28>
   1944c:	cmp	r5, #0
   19450:	cmpne	r5, #7
   19454:	bne	19414 <argp_parse@@Base+0xcf0>
   19458:	mov	r6, #1
   1945c:	movt	r6, #256	; 0x100
   19460:	sub	r4, r4, #36	; 0x24
   19464:	ldr	r5, [r4, #36]	; 0x24
   19468:	mov	r1, #0
   1946c:	sub	r2, fp, #96	; 0x60
   19470:	mov	r0, r6
   19474:	cmp	r5, r1
   19478:	beq	194cc <argp_parse@@Base+0xda8>
   1947c:	ldr	r3, [r4, #60]	; 0x3c
   19480:	ldr	lr, [r4, #64]	; 0x40
   19484:	ldr	ip, [r4, #68]	; 0x44
   19488:	str	r3, [fp, #-68]	; 0xffffffbc
   1948c:	ldr	r3, [r4, #48]	; 0x30
   19490:	str	r3, [fp, #-76]	; 0xffffffb4
   19494:	str	lr, [fp, #-64]	; 0xffffffc0
   19498:	str	ip, [fp, #-60]	; 0xffffffc4
   1949c:	blx	r5
   194a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   194a4:	str	r3, [r4, #68]	; 0x44
   194a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   194ac:	cmp	r3, r4
   194b0:	sub	r4, r4, #36	; 0x24
   194b4:	bhi	19548 <argp_parse@@Base+0xe24>
   194b8:	cmp	r0, #7
   194bc:	cmpne	r0, #0
   194c0:	beq	19464 <argp_parse@@Base+0xd40>
   194c4:	mov	r5, r0
   194c8:	b	19414 <argp_parse@@Base+0xcf0>
   194cc:	cmp	r3, r4
   194d0:	sub	r4, r4, #36	; 0x24
   194d4:	bls	19464 <argp_parse@@Base+0xd40>
   194d8:	ldr	ip, [fp, #-108]	; 0xffffff94
   194dc:	ldr	r2, [fp, #4]
   194e0:	cmp	r2, #0
   194e4:	beq	1911c <argp_parse@@Base+0x9f8>
   194e8:	mov	r1, r2
   194ec:	ldr	r2, [fp, #-84]	; 0xffffffac
   194f0:	str	r2, [r1]
   194f4:	b	1911c <argp_parse@@Base+0x9f8>
   194f8:	ldr	r3, [r5]
   194fc:	cmp	r3, #0
   19500:	beq	1921c <argp_parse@@Base+0xaf8>
   19504:	ldr	r2, [r5, #12]
   19508:	sub	r6, fp, #96	; 0x60
   1950c:	mov	r8, #0
   19510:	ldr	r0, [r5, #24]
   19514:	ldr	ip, [r5, #28]
   19518:	ldr	r1, [r5, #32]
   1951c:	str	r2, [fp, #-76]	; 0xffffffb4
   19520:	mov	r2, r6
   19524:	str	r0, [fp, #-68]	; 0xffffffbc
   19528:	mov	r0, r4
   1952c:	str	ip, [fp, #-64]	; 0xffffffc0
   19530:	str	r1, [fp, #-60]	; 0xffffffc4
   19534:	ldr	r1, [fp, #-136]	; 0xffffff78
   19538:	blx	r3
   1953c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19540:	str	r3, [r5, #32]
   19544:	b	19328 <argp_parse@@Base+0xc04>
   19548:	mov	r5, r0
   1954c:	cmp	r5, #7
   19550:	beq	194d8 <argp_parse@@Base+0xdb4>
   19554:	b	19414 <argp_parse@@Base+0xcf0>
   19558:	sub	r4, ip, #36	; 0x24
   1955c:	b	18dac <argp_parse@@Base+0x688>
   19560:	sub	r6, fp, #96	; 0x60
   19564:	b	19394 <argp_parse@@Base+0xc70>
   19568:	sub	r4, ip, #36	; 0x24
   1956c:	cmp	r3, r4
   19570:	bls	19458 <argp_parse@@Base+0xd34>
   19574:	ldr	r2, [fp, #4]
   19578:	cmp	r2, #0
   1957c:	beq	19384 <argp_parse@@Base+0xc60>
   19580:	ldr	r2, [fp, #-84]	; 0xffffffac
   19584:	ldr	r1, [fp, #4]
   19588:	str	r2, [r1]
   1958c:	b	1911c <argp_parse@@Base+0x9f8>
   19590:	ldr	r2, [fp, #4]
   19594:	cmp	r2, #0
   19598:	bne	19420 <argp_parse@@Base+0xcfc>
   1959c:	b	18d38 <argp_parse@@Base+0x614>
   195a0:	ldr	ip, [fp, #-108]	; 0xffffff94
   195a4:	b	18ed8 <argp_parse@@Base+0x7b4>
   195a8:	cmp	r0, #0
   195ac:	beq	195c4 <argp_parse@@Base+0xea0>
   195b0:	cmp	r0, #7
   195b4:	mov	r5, r0
   195b8:	ldrne	r3, [fp, #-112]	; 0xffffff90
   195bc:	beq	18ee8 <argp_parse@@Base+0x7c4>
   195c0:	b	18d38 <argp_parse@@Base+0x614>
   195c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   195c8:	mov	r0, r3
   195cc:	str	r3, [fp, #-84]	; 0xffffffac
   195d0:	b	18c74 <argp_parse@@Base+0x550>
   195d4:	ldrdeq	sp, [r1], -r4
   195d8:	strdeq	sp, [r1], -r0
   195dc:	cmp	r1, #0
   195e0:	beq	19620 <argp_parse@@Base+0xefc>
   195e4:	ldr	r2, [r1, #52]	; 0x34
   195e8:	ldr	r3, [r2, #48]	; 0x30
   195ec:	ldr	r1, [r2, #52]	; 0x34
   195f0:	cmp	r3, r1
   195f4:	bcs	19620 <argp_parse@@Base+0xefc>
   195f8:	ldr	r2, [r3, #4]
   195fc:	cmp	r0, r2
   19600:	bne	19614 <argp_parse@@Base+0xef0>
   19604:	b	19628 <argp_parse@@Base+0xf04>
   19608:	ldr	r2, [r3, #4]
   1960c:	cmp	r2, r0
   19610:	beq	19628 <argp_parse@@Base+0xf04>
   19614:	add	r3, r3, #36	; 0x24
   19618:	cmp	r3, r1
   1961c:	bcc	19608 <argp_parse@@Base+0xee4>
   19620:	mov	r0, #0
   19624:	bx	lr
   19628:	ldr	r0, [r3, #24]
   1962c:	bx	lr
   19630:	movw	r1, #58640	; 0xe510
   19634:	movt	r1, #2
   19638:	push	{lr}		; (str lr, [sp, #-4]!)
   1963c:	ldm	r1, {r1, ip}
   19640:	sub	sp, sp, #12
   19644:	movw	r3, #54512	; 0xd4f0
   19648:	movt	r3, #1
   1964c:	movw	r2, #54528	; 0xd500
   19650:	movt	r2, #1
   19654:	str	ip, [sp]
   19658:	bl	19c88 <argp_parse@@Base+0x1564>
   1965c:	add	sp, sp, #12
   19660:	pop	{pc}		; (ldr pc, [sp], #4)
   19664:	movw	r2, #58636	; 0xe50c
   19668:	movt	r2, #2
   1966c:	movw	ip, #38448	; 0x9630
   19670:	movt	ip, #1
   19674:	movw	r3, #58640	; 0xe510
   19678:	movt	r3, #2
   1967c:	str	ip, [r2]
   19680:	strd	r0, [r3]
   19684:	bx	lr
   19688:	ldrb	r3, [r0]
   1968c:	cmp	r3, #47	; 0x2f
   19690:	bne	196a0 <argp_parse@@Base+0xf7c>
   19694:	ldrb	r3, [r0, #1]!
   19698:	cmp	r3, #47	; 0x2f
   1969c:	beq	19694 <argp_parse@@Base+0xf70>
   196a0:	cmp	r3, #0
   196a4:	beq	196d4 <argp_parse@@Base+0xfb0>
   196a8:	mov	r2, r0
   196ac:	mov	r1, #0
   196b0:	cmp	r3, #47	; 0x2f
   196b4:	moveq	r1, #1
   196b8:	beq	196c8 <argp_parse@@Base+0xfa4>
   196bc:	cmp	r1, #0
   196c0:	movne	r0, r2
   196c4:	movne	r1, #0
   196c8:	ldrb	r3, [r2, #1]!
   196cc:	cmp	r3, #0
   196d0:	bne	196b0 <argp_parse@@Base+0xf8c>
   196d4:	bx	lr
   196d8:	str	r4, [sp, #-8]!
   196dc:	mov	r4, r0
   196e0:	str	lr, [sp, #4]
   196e4:	bl	113b8 <strlen@plt>
   196e8:	cmp	r0, #1
   196ec:	bls	19700 <argp_parse@@Base+0xfdc>
   196f0:	sub	r2, r0, #1
   196f4:	ldrb	r1, [r4, r2]
   196f8:	cmp	r1, #47	; 0x2f
   196fc:	beq	1970c <argp_parse@@Base+0xfe8>
   19700:	ldr	r4, [sp]
   19704:	add	sp, sp, #4
   19708:	pop	{pc}		; (ldr pc, [sp], #4)
   1970c:	cmp	r2, #1
   19710:	beq	19724 <argp_parse@@Base+0x1000>
   19714:	add	r1, r4, r0
   19718:	ldrb	r1, [r1, #-2]
   1971c:	cmp	r1, #47	; 0x2f
   19720:	beq	19734 <argp_parse@@Base+0x1010>
   19724:	ldr	r4, [sp]
   19728:	add	sp, sp, #4
   1972c:	mov	r0, r2
   19730:	pop	{pc}		; (ldr pc, [sp], #4)
   19734:	sub	r3, r0, #3
   19738:	rsb	r0, r4, #1
   1973c:	add	r3, r4, r3
   19740:	cmp	r3, r4
   19744:	add	r2, r0, r3
   19748:	beq	19724 <argp_parse@@Base+0x1000>
   1974c:	ldrb	r1, [r3], #-1
   19750:	cmp	r1, #47	; 0x2f
   19754:	bne	19724 <argp_parse@@Base+0x1000>
   19758:	b	19740 <argp_parse@@Base+0x101c>
   1975c:	strd	r4, [sp, #-12]!
   19760:	mov	r5, r0
   19764:	str	lr, [sp, #8]
   19768:	sub	sp, sp, #12
   1976c:	bl	113dc <__errno_location@plt>
   19770:	mov	r4, r0
   19774:	mov	r2, #0
   19778:	ldr	r3, [r4]
   1977c:	mov	r0, r5
   19780:	str	r2, [r4]
   19784:	str	r3, [sp]
   19788:	str	r3, [sp, #4]
   1978c:	bl	11238 <free@plt>
   19790:	ldr	r3, [r4]
   19794:	add	r2, sp, #8
   19798:	clz	r3, r3
   1979c:	lsr	r3, r3, #5
   197a0:	add	r3, r2, r3, lsl #2
   197a4:	ldr	r3, [r3, #-8]
   197a8:	str	r3, [r4]
   197ac:	add	sp, sp, #12
   197b0:	ldrd	r4, [sp]
   197b4:	add	sp, sp, #8
   197b8:	pop	{pc}		; (ldr pc, [sp], #4)
   197bc:	push	{lr}		; (str lr, [sp, #-4]!)
   197c0:	sub	sp, sp, #20
   197c4:	mov	ip, #0
   197c8:	ldr	lr, [sp, #24]
   197cc:	str	lr, [sp]
   197d0:	str	ip, [sp, #4]
   197d4:	str	ip, [sp, #8]
   197d8:	bl	1c2d8 <argp_parse@@Base+0x3bb4>
   197dc:	add	sp, sp, #20
   197e0:	pop	{pc}		; (ldr pc, [sp], #4)
   197e4:	str	r4, [sp, #-8]!
   197e8:	mov	ip, #0
   197ec:	str	lr, [sp, #4]
   197f0:	sub	sp, sp, #16
   197f4:	ldr	r4, [sp, #24]
   197f8:	str	ip, [sp, #12]
   197fc:	ldr	lr, [sp, #28]
   19800:	stm	sp, {r4, ip, lr}
   19804:	bl	1bd3c <argp_parse@@Base+0x3618>
   19808:	add	sp, sp, #16
   1980c:	ldr	r4, [sp]
   19810:	add	sp, sp, #4
   19814:	pop	{pc}		; (ldr pc, [sp], #4)
   19818:	str	r4, [sp, #-8]!
   1981c:	mov	r4, #1
   19820:	str	lr, [sp, #4]
   19824:	sub	sp, sp, #16
   19828:	mov	lr, #0
   1982c:	ldr	ip, [sp, #24]
   19830:	str	ip, [sp]
   19834:	stmib	sp, {r4, lr}
   19838:	bl	1c2d8 <argp_parse@@Base+0x3bb4>
   1983c:	add	sp, sp, #16
   19840:	ldr	r4, [sp]
   19844:	add	sp, sp, #4
   19848:	pop	{pc}		; (ldr pc, [sp], #4)
   1984c:	strd	r4, [sp, #-12]!
   19850:	mov	r4, #0
   19854:	mov	r5, #1
   19858:	str	lr, [sp, #8]
   1985c:	sub	sp, sp, #20
   19860:	ldr	lr, [sp, #32]
   19864:	ldr	ip, [sp, #36]	; 0x24
   19868:	str	lr, [sp]
   1986c:	str	r4, [sp, #12]
   19870:	stmib	sp, {r5, ip}
   19874:	bl	1bd3c <argp_parse@@Base+0x3618>
   19878:	add	sp, sp, #20
   1987c:	ldrd	r4, [sp]
   19880:	add	sp, sp, #8
   19884:	pop	{pc}		; (ldr pc, [sp], #4)
   19888:	push	{r1, r2, r3}
   1988c:	push	{lr}		; (str lr, [sp, #-4]!)
   19890:	sub	sp, sp, #8
   19894:	ldr	r1, [sp, #12]
   19898:	add	r3, sp, #16
   1989c:	ldr	r2, [sp, #16]
   198a0:	str	r3, [sp, #4]
   198a4:	bl	112ec <ioctl@plt>
   198a8:	add	sp, sp, #8
   198ac:	pop	{lr}		; (ldr lr, [sp], #4)
   198b0:	add	sp, sp, #12
   198b4:	bx	lr
   198b8:	strd	r4, [sp, #-16]!
   198bc:	subs	r4, r0, #0
   198c0:	str	r6, [sp, #8]
   198c4:	str	lr, [sp, #12]
   198c8:	beq	19960 <argp_parse@@Base+0x123c>
   198cc:	mov	r1, #47	; 0x2f
   198d0:	bl	11484 <strrchr@plt>
   198d4:	subs	r5, r0, #0
   198d8:	beq	19938 <argp_parse@@Base+0x1214>
   198dc:	add	r6, r5, #1
   198e0:	sub	r3, r6, r4
   198e4:	cmp	r3, #6
   198e8:	ble	19938 <argp_parse@@Base+0x1214>
   198ec:	movw	r1, #54600	; 0xd548
   198f0:	movt	r1, #1
   198f4:	mov	r2, #7
   198f8:	sub	r0, r5, #6
   198fc:	bl	11508 <strncmp@plt>
   19900:	cmp	r0, #0
   19904:	bne	19938 <argp_parse@@Base+0x1214>
   19908:	movw	r1, #54608	; 0xd550
   1990c:	movt	r1, #1
   19910:	mov	r2, #3
   19914:	mov	r0, r6
   19918:	bl	11508 <strncmp@plt>
   1991c:	cmp	r0, #0
   19920:	movne	r4, r6
   19924:	bne	19938 <argp_parse@@Base+0x1214>
   19928:	add	r4, r5, #4
   1992c:	movw	r3, #58440	; 0xe448
   19930:	movt	r3, #2
   19934:	str	r4, [r3]
   19938:	movw	r2, #58648	; 0xe518
   1993c:	movt	r2, #2
   19940:	ldr	r6, [sp, #8]
   19944:	movw	r3, #58444	; 0xe44c
   19948:	movt	r3, #2
   1994c:	str	r4, [r2]
   19950:	str	r4, [r3]
   19954:	ldrd	r4, [sp]
   19958:	add	sp, sp, #12
   1995c:	pop	{pc}		; (ldr pc, [sp], #4)
   19960:	movw	r3, #58448	; 0xe450
   19964:	movt	r3, #2
   19968:	movw	r0, #54544	; 0xd510
   1996c:	movt	r0, #1
   19970:	ldr	r3, [r3]
   19974:	mov	r2, #55	; 0x37
   19978:	mov	r1, #1
   1997c:	bl	112e0 <fwrite@plt>
   19980:	bl	11514 <abort@plt>
   19984:	cmp	r1, #0
   19988:	strd	r4, [sp, #-16]!
   1998c:	mov	r4, r0
   19990:	str	r6, [sp, #8]
   19994:	str	lr, [sp, #12]
   19998:	sub	sp, sp, #32
   1999c:	ldr	r5, [sp, #48]	; 0x30
   199a0:	ldr	r6, [sp, #52]	; 0x34
   199a4:	beq	19aa8 <argp_parse@@Base+0x1384>
   199a8:	mov	ip, r3
   199ac:	mov	r3, r2
   199b0:	mov	r2, r1
   199b4:	movw	r1, #54612	; 0xd554
   199b8:	movt	r1, #1
   199bc:	str	ip, [sp]
   199c0:	bl	113d0 <fprintf@plt>
   199c4:	movw	r3, #2022	; 0x7e6
   199c8:	movw	r2, #54632	; 0xd568
   199cc:	movt	r2, #1
   199d0:	movw	r1, #55400	; 0xd868
   199d4:	movt	r1, #1
   199d8:	mov	r0, r4
   199dc:	bl	113d0 <fprintf@plt>
   199e0:	mov	r1, r4
   199e4:	mov	r0, #10
   199e8:	bl	1149c <fputc@plt>
   199ec:	movw	r2, #54636	; 0xd56c
   199f0:	movt	r2, #1
   199f4:	movw	r1, #54672	; 0xd590
   199f8:	movt	r1, #1
   199fc:	mov	r0, r4
   19a00:	bl	113d0 <fprintf@plt>
   19a04:	mov	r1, r4
   19a08:	mov	r0, #10
   19a0c:	bl	1149c <fputc@plt>
   19a10:	cmp	r6, #9
   19a14:	ldrls	pc, [pc, r6, lsl #2]
   19a18:	b	19c74 <argp_parse@@Base+0x1550>
   19a1c:	muleq	r1, r4, sl
   19a20:			; <UNDEFINED> instruction: 0x00019ab8
   19a24:	andeq	r9, r1, r0, ror #21
   19a28:	andeq	r9, r1, r8, lsl #22
   19a2c:	andeq	r9, r1, r8, lsr fp
   19a30:	andeq	r9, r1, r4, ror fp
   19a34:	andeq	r9, r1, r8, lsr #23
   19a38:	andeq	r9, r1, r4, ror #23
   19a3c:	andeq	r9, r1, r8, lsr #24
   19a40:	andeq	r9, r1, r4, asr #20
   19a44:	ldr	ip, [r5, #8]
   19a48:	movw	r1, #55112	; 0xd748
   19a4c:	movt	r1, #1
   19a50:	mov	r0, r4
   19a54:	ldr	r3, [r5, #12]
   19a58:	ldr	r2, [r5, #32]
   19a5c:	str	ip, [sp]
   19a60:	ldr	ip, [r5, #16]
   19a64:	str	r2, [sp, #24]
   19a68:	ldr	r2, [r5, #28]
   19a6c:	str	r3, [sp, #4]
   19a70:	ldr	r3, [r5, #20]
   19a74:	str	ip, [sp, #8]
   19a78:	ldr	ip, [r5, #24]
   19a7c:	str	r2, [sp, #20]
   19a80:	ldr	r2, [r5]
   19a84:	str	r3, [sp, #12]
   19a88:	ldr	r3, [r5, #4]
   19a8c:	str	ip, [sp, #16]
   19a90:	bl	113d0 <fprintf@plt>
   19a94:	add	sp, sp, #32
   19a98:	ldrd	r4, [sp]
   19a9c:	ldr	r6, [sp, #8]
   19aa0:	add	sp, sp, #12
   19aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   19aa8:	movw	r1, #54624	; 0xd560
   19aac:	movt	r1, #1
   19ab0:	bl	113d0 <fprintf@plt>
   19ab4:	b	199c4 <argp_parse@@Base+0x12a0>
   19ab8:	ldr	r2, [r5]
   19abc:	mov	r0, r4
   19ac0:	movw	r1, #54844	; 0xd63c
   19ac4:	movt	r1, #1
   19ac8:	add	sp, sp, #32
   19acc:	ldrd	r4, [sp]
   19ad0:	ldr	r6, [sp, #8]
   19ad4:	ldr	lr, [sp, #12]
   19ad8:	add	sp, sp, #16
   19adc:	b	113d0 <fprintf@plt>
   19ae0:	ldrd	r2, [r5]
   19ae4:	mov	r0, r4
   19ae8:	movw	r1, #54860	; 0xd64c
   19aec:	movt	r1, #1
   19af0:	add	sp, sp, #32
   19af4:	ldrd	r4, [sp]
   19af8:	ldr	r6, [sp, #8]
   19afc:	ldr	lr, [sp, #12]
   19b00:	add	sp, sp, #16
   19b04:	b	113d0 <fprintf@plt>
   19b08:	ldrd	r2, [r5]
   19b0c:	mov	r0, r4
   19b10:	movw	r1, #54884	; 0xd664
   19b14:	movt	r1, #1
   19b18:	ldr	ip, [r5, #8]
   19b1c:	str	ip, [sp, #48]	; 0x30
   19b20:	add	sp, sp, #32
   19b24:	ldrd	r4, [sp]
   19b28:	ldr	r6, [sp, #8]
   19b2c:	ldr	lr, [sp, #12]
   19b30:	add	sp, sp, #16
   19b34:	b	113d0 <fprintf@plt>
   19b38:	ldr	r2, [r5]
   19b3c:	mov	r0, r4
   19b40:	movw	r1, #54912	; 0xd680
   19b44:	movt	r1, #1
   19b48:	ldr	r3, [r5, #8]
   19b4c:	ldr	ip, [r5, #12]
   19b50:	str	r3, [sp, #48]	; 0x30
   19b54:	ldr	r3, [r5, #4]
   19b58:	str	ip, [sp, #52]	; 0x34
   19b5c:	add	sp, sp, #32
   19b60:	ldrd	r4, [sp]
   19b64:	ldr	r6, [sp, #8]
   19b68:	ldr	lr, [sp, #12]
   19b6c:	add	sp, sp, #16
   19b70:	b	113d0 <fprintf@plt>
   19b74:	ldr	r2, [r5, #8]
   19b78:	mov	r0, r4
   19b7c:	movw	r1, #54944	; 0xd6a0
   19b80:	movt	r1, #1
   19b84:	ldr	ip, [r5, #12]
   19b88:	ldr	r3, [r5, #16]
   19b8c:	str	r2, [sp]
   19b90:	ldr	r2, [r5]
   19b94:	str	r3, [sp, #8]
   19b98:	ldr	r3, [r5, #4]
   19b9c:	str	ip, [sp, #4]
   19ba0:	bl	113d0 <fprintf@plt>
   19ba4:	b	19a94 <argp_parse@@Base+0x1370>
   19ba8:	ldr	ip, [r5, #8]
   19bac:	mov	r0, r4
   19bb0:	movw	r1, #54980	; 0xd6c4
   19bb4:	movt	r1, #1
   19bb8:	ldr	r3, [r5, #12]
   19bbc:	ldr	r2, [r5, #20]
   19bc0:	str	ip, [sp]
   19bc4:	ldr	ip, [r5, #16]
   19bc8:	str	r2, [sp, #12]
   19bcc:	ldr	r2, [r5]
   19bd0:	str	r3, [sp, #4]
   19bd4:	ldr	r3, [r5, #4]
   19bd8:	str	ip, [sp, #8]
   19bdc:	bl	113d0 <fprintf@plt>
   19be0:	b	19a94 <argp_parse@@Base+0x1370>
   19be4:	ldr	r3, [r5, #8]
   19be8:	mov	r0, r4
   19bec:	movw	r1, #55020	; 0xd6ec
   19bf0:	movt	r1, #1
   19bf4:	ldr	r2, [r5, #12]
   19bf8:	ldr	ip, [r5, #24]
   19bfc:	str	r3, [sp]
   19c00:	ldr	r3, [r5, #16]
   19c04:	str	ip, [sp, #16]
   19c08:	ldr	ip, [r5, #20]
   19c0c:	str	r2, [sp, #4]
   19c10:	ldr	r2, [r5]
   19c14:	str	r3, [sp, #8]
   19c18:	ldr	r3, [r5, #4]
   19c1c:	str	ip, [sp, #12]
   19c20:	bl	113d0 <fprintf@plt>
   19c24:	b	19a94 <argp_parse@@Base+0x1370>
   19c28:	ldr	r2, [r5, #8]
   19c2c:	mov	r0, r4
   19c30:	movw	r1, #55064	; 0xd718
   19c34:	movt	r1, #1
   19c38:	ldr	ip, [r5, #12]
   19c3c:	ldr	r3, [r5, #28]
   19c40:	str	r2, [sp]
   19c44:	ldr	r2, [r5, #16]
   19c48:	str	r3, [sp, #20]
   19c4c:	ldr	r3, [r5, #24]
   19c50:	str	ip, [sp, #4]
   19c54:	ldr	ip, [r5, #20]
   19c58:	str	r2, [sp, #8]
   19c5c:	ldr	r2, [r5]
   19c60:	str	r3, [sp, #16]
   19c64:	ldr	r3, [r5, #4]
   19c68:	str	ip, [sp, #12]
   19c6c:	bl	113d0 <fprintf@plt>
   19c70:	b	19a94 <argp_parse@@Base+0x1370>
   19c74:	movw	r1, #55164	; 0xd77c
   19c78:	movt	r1, #1
   19c7c:	ldr	ip, [r5, #8]
   19c80:	mov	r0, r4
   19c84:	b	19a54 <argp_parse@@Base+0x1330>
   19c88:	strd	r4, [sp, #-16]!
   19c8c:	mov	ip, r3
   19c90:	str	r6, [sp, #8]
   19c94:	mov	r6, r0
   19c98:	str	lr, [sp, #12]
   19c9c:	sub	sp, sp, #32
   19ca0:	ldr	r5, [sp, #48]	; 0x30
   19ca4:	ldr	r4, [r5]
   19ca8:	cmp	r4, #0
   19cac:	beq	19cc8 <argp_parse@@Base+0x15a4>
   19cb0:	mov	r3, r5
   19cb4:	mov	r4, #0
   19cb8:	ldr	r0, [r3, #4]!
   19cbc:	add	r4, r4, #1
   19cc0:	cmp	r0, #0
   19cc4:	bne	19cb8 <argp_parse@@Base+0x1594>
   19cc8:	cmp	r1, #0
   19ccc:	beq	19dd0 <argp_parse@@Base+0x16ac>
   19cd0:	mov	r3, r2
   19cd4:	mov	r0, r6
   19cd8:	str	ip, [sp]
   19cdc:	mov	r2, r1
   19ce0:	movw	r1, #54612	; 0xd554
   19ce4:	movt	r1, #1
   19ce8:	bl	113d0 <fprintf@plt>
   19cec:	movw	r3, #2022	; 0x7e6
   19cf0:	movw	r2, #54632	; 0xd568
   19cf4:	movt	r2, #1
   19cf8:	movw	r1, #55400	; 0xd868
   19cfc:	movt	r1, #1
   19d00:	mov	r0, r6
   19d04:	bl	113d0 <fprintf@plt>
   19d08:	mov	r1, r6
   19d0c:	mov	r0, #10
   19d10:	bl	1149c <fputc@plt>
   19d14:	movw	r2, #54636	; 0xd56c
   19d18:	movt	r2, #1
   19d1c:	movw	r1, #54672	; 0xd590
   19d20:	movt	r1, #1
   19d24:	mov	r0, r6
   19d28:	bl	113d0 <fprintf@plt>
   19d2c:	mov	r1, r6
   19d30:	mov	r0, #10
   19d34:	bl	1149c <fputc@plt>
   19d38:	cmp	r4, #9
   19d3c:	ldrls	pc, [pc, r4, lsl #2]
   19d40:	b	19f94 <argp_parse@@Base+0x1870>
   19d44:			; <UNDEFINED> instruction: 0x00019dbc
   19d48:	andeq	r9, r1, r8, ror #27
   19d4c:	andeq	r9, r1, r0, lsl lr
   19d50:	andeq	r9, r1, r8, lsr lr
   19d54:	andeq	r9, r1, r8, ror #28
   19d58:	muleq	r1, r4, lr
   19d5c:	andeq	r9, r1, r8, asr #29
   19d60:	andeq	r9, r1, r4, lsl #30
   19d64:	andeq	r9, r1, r8, asr #30
   19d68:	andeq	r9, r1, ip, ror #26
   19d6c:	ldr	ip, [r5, #8]
   19d70:	movw	r1, #55112	; 0xd748
   19d74:	movt	r1, #1
   19d78:	mov	r0, r6
   19d7c:	ldr	r3, [r5, #12]
   19d80:	ldr	r2, [r5, #32]
   19d84:	str	ip, [sp]
   19d88:	ldr	ip, [r5, #16]
   19d8c:	str	r2, [sp, #24]
   19d90:	ldr	r2, [r5, #28]
   19d94:	str	r3, [sp, #4]
   19d98:	ldr	r3, [r5, #20]
   19d9c:	str	ip, [sp, #8]
   19da0:	ldr	ip, [r5, #24]
   19da4:	str	r2, [sp, #20]
   19da8:	ldr	r2, [r5]
   19dac:	str	r3, [sp, #12]
   19db0:	ldr	r3, [r5, #4]
   19db4:	str	ip, [sp, #16]
   19db8:	bl	113d0 <fprintf@plt>
   19dbc:	add	sp, sp, #32
   19dc0:	ldrd	r4, [sp]
   19dc4:	ldr	r6, [sp, #8]
   19dc8:	add	sp, sp, #12
   19dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   19dd0:	mov	r3, ip
   19dd4:	movw	r1, #54624	; 0xd560
   19dd8:	movt	r1, #1
   19ddc:	mov	r0, r6
   19de0:	bl	113d0 <fprintf@plt>
   19de4:	b	19cec <argp_parse@@Base+0x15c8>
   19de8:	ldr	r2, [r5]
   19dec:	mov	r0, r6
   19df0:	movw	r1, #54844	; 0xd63c
   19df4:	movt	r1, #1
   19df8:	add	sp, sp, #32
   19dfc:	ldrd	r4, [sp]
   19e00:	ldr	r6, [sp, #8]
   19e04:	ldr	lr, [sp, #12]
   19e08:	add	sp, sp, #16
   19e0c:	b	113d0 <fprintf@plt>
   19e10:	ldrd	r2, [r5]
   19e14:	mov	r0, r6
   19e18:	movw	r1, #54860	; 0xd64c
   19e1c:	movt	r1, #1
   19e20:	add	sp, sp, #32
   19e24:	ldrd	r4, [sp]
   19e28:	ldr	r6, [sp, #8]
   19e2c:	ldr	lr, [sp, #12]
   19e30:	add	sp, sp, #16
   19e34:	b	113d0 <fprintf@plt>
   19e38:	ldrd	r2, [r5]
   19e3c:	mov	r0, r6
   19e40:	movw	r1, #54884	; 0xd664
   19e44:	movt	r1, #1
   19e48:	ldr	ip, [r5, #8]
   19e4c:	str	ip, [sp, #48]	; 0x30
   19e50:	add	sp, sp, #32
   19e54:	ldrd	r4, [sp]
   19e58:	ldr	r6, [sp, #8]
   19e5c:	ldr	lr, [sp, #12]
   19e60:	add	sp, sp, #16
   19e64:	b	113d0 <fprintf@plt>
   19e68:	mov	r0, r6
   19e6c:	movw	r1, #54912	; 0xd680
   19e70:	movt	r1, #1
   19e74:	ldr	r3, [r5, #8]
   19e78:	ldr	ip, [r5, #12]
   19e7c:	ldr	r2, [r5]
   19e80:	str	r3, [sp]
   19e84:	ldr	r3, [r5, #4]
   19e88:	str	ip, [sp, #4]
   19e8c:	bl	113d0 <fprintf@plt>
   19e90:	b	19dbc <argp_parse@@Base+0x1698>
   19e94:	ldr	r2, [r5, #8]
   19e98:	mov	r0, r6
   19e9c:	movw	r1, #54944	; 0xd6a0
   19ea0:	movt	r1, #1
   19ea4:	ldr	ip, [r5, #12]
   19ea8:	ldr	r3, [r5, #16]
   19eac:	str	r2, [sp]
   19eb0:	ldr	r2, [r5]
   19eb4:	str	r3, [sp, #8]
   19eb8:	ldr	r3, [r5, #4]
   19ebc:	str	ip, [sp, #4]
   19ec0:	bl	113d0 <fprintf@plt>
   19ec4:	b	19dbc <argp_parse@@Base+0x1698>
   19ec8:	ldr	ip, [r5, #8]
   19ecc:	mov	r0, r6
   19ed0:	movw	r1, #54980	; 0xd6c4
   19ed4:	movt	r1, #1
   19ed8:	ldr	r3, [r5, #12]
   19edc:	ldr	r2, [r5, #20]
   19ee0:	str	ip, [sp]
   19ee4:	ldr	ip, [r5, #16]
   19ee8:	str	r2, [sp, #12]
   19eec:	ldr	r2, [r5]
   19ef0:	str	r3, [sp, #4]
   19ef4:	ldr	r3, [r5, #4]
   19ef8:	str	ip, [sp, #8]
   19efc:	bl	113d0 <fprintf@plt>
   19f00:	b	19dbc <argp_parse@@Base+0x1698>
   19f04:	ldr	r3, [r5, #8]
   19f08:	mov	r0, r6
   19f0c:	movw	r1, #55020	; 0xd6ec
   19f10:	movt	r1, #1
   19f14:	ldr	r2, [r5, #12]
   19f18:	ldr	ip, [r5, #24]
   19f1c:	str	r3, [sp]
   19f20:	ldr	r3, [r5, #16]
   19f24:	str	ip, [sp, #16]
   19f28:	ldr	ip, [r5, #20]
   19f2c:	str	r2, [sp, #4]
   19f30:	ldr	r2, [r5]
   19f34:	str	r3, [sp, #8]
   19f38:	ldr	r3, [r5, #4]
   19f3c:	str	ip, [sp, #12]
   19f40:	bl	113d0 <fprintf@plt>
   19f44:	b	19dbc <argp_parse@@Base+0x1698>
   19f48:	ldr	r2, [r5, #8]
   19f4c:	mov	r0, r6
   19f50:	movw	r1, #55064	; 0xd718
   19f54:	movt	r1, #1
   19f58:	ldr	ip, [r5, #12]
   19f5c:	ldr	r3, [r5, #28]
   19f60:	str	r2, [sp]
   19f64:	ldr	r2, [r5, #16]
   19f68:	str	r3, [sp, #20]
   19f6c:	ldr	r3, [r5, #24]
   19f70:	str	ip, [sp, #4]
   19f74:	ldr	ip, [r5, #20]
   19f78:	str	r2, [sp, #8]
   19f7c:	ldr	r2, [r5]
   19f80:	str	r3, [sp, #16]
   19f84:	ldr	r3, [r5, #4]
   19f88:	str	ip, [sp, #12]
   19f8c:	bl	113d0 <fprintf@plt>
   19f90:	b	19dbc <argp_parse@@Base+0x1698>
   19f94:	movw	r1, #55164	; 0xd77c
   19f98:	movt	r1, #1
   19f9c:	ldr	ip, [r5, #8]
   19fa0:	mov	r0, r6
   19fa4:	b	19d7c <argp_parse@@Base+0x1658>
   19fa8:	strd	r4, [sp, #-12]!
   19fac:	mov	r4, r0
   19fb0:	mov	r0, r3
   19fb4:	str	lr, [sp, #8]
   19fb8:	sub	sp, sp, #76	; 0x4c
   19fbc:	ldr	ip, [sp, #88]	; 0x58
   19fc0:	ldr	r3, [ip]
   19fc4:	cmp	r3, #0
   19fc8:	str	r3, [sp, #32]
   19fcc:	beq	1a2ec <argp_parse@@Base+0x1bc8>
   19fd0:	ldr	r3, [ip, #4]
   19fd4:	cmp	r3, #0
   19fd8:	str	r3, [sp, #36]	; 0x24
   19fdc:	beq	1a2f4 <argp_parse@@Base+0x1bd0>
   19fe0:	ldr	r3, [ip, #8]
   19fe4:	cmp	r3, #0
   19fe8:	str	r3, [sp, #40]	; 0x28
   19fec:	beq	1a2fc <argp_parse@@Base+0x1bd8>
   19ff0:	ldr	r3, [ip, #12]
   19ff4:	cmp	r3, #0
   19ff8:	str	r3, [sp, #44]	; 0x2c
   19ffc:	beq	1a304 <argp_parse@@Base+0x1be0>
   1a000:	ldr	r3, [ip, #16]
   1a004:	cmp	r3, #0
   1a008:	str	r3, [sp, #48]	; 0x30
   1a00c:	beq	1a30c <argp_parse@@Base+0x1be8>
   1a010:	ldr	r3, [ip, #20]
   1a014:	cmp	r3, #0
   1a018:	str	r3, [sp, #52]	; 0x34
   1a01c:	beq	1a314 <argp_parse@@Base+0x1bf0>
   1a020:	ldr	r3, [ip, #24]
   1a024:	cmp	r3, #0
   1a028:	str	r3, [sp, #56]	; 0x38
   1a02c:	beq	1a31c <argp_parse@@Base+0x1bf8>
   1a030:	ldr	r3, [ip, #28]
   1a034:	cmp	r3, #0
   1a038:	str	r3, [sp, #60]	; 0x3c
   1a03c:	beq	1a324 <argp_parse@@Base+0x1c00>
   1a040:	ldr	r3, [ip, #32]
   1a044:	cmp	r3, #0
   1a048:	str	r3, [sp, #64]	; 0x40
   1a04c:	beq	1a32c <argp_parse@@Base+0x1c08>
   1a050:	ldr	r3, [ip, #36]	; 0x24
   1a054:	cmp	r3, #0
   1a058:	movne	r5, #10
   1a05c:	moveq	r5, #9
   1a060:	cmp	r1, #0
   1a064:	beq	1a160 <argp_parse@@Base+0x1a3c>
   1a068:	mov	r3, r2
   1a06c:	mov	r2, r1
   1a070:	str	r0, [sp]
   1a074:	movw	r1, #54612	; 0xd554
   1a078:	movt	r1, #1
   1a07c:	mov	r0, r4
   1a080:	bl	113d0 <fprintf@plt>
   1a084:	movw	r3, #2022	; 0x7e6
   1a088:	movw	r2, #54632	; 0xd568
   1a08c:	movt	r2, #1
   1a090:	movw	r1, #55400	; 0xd868
   1a094:	movt	r1, #1
   1a098:	mov	r0, r4
   1a09c:	bl	113d0 <fprintf@plt>
   1a0a0:	mov	r1, r4
   1a0a4:	mov	r0, #10
   1a0a8:	bl	1149c <fputc@plt>
   1a0ac:	movw	r2, #54636	; 0xd56c
   1a0b0:	movt	r2, #1
   1a0b4:	movw	r1, #54672	; 0xd590
   1a0b8:	movt	r1, #1
   1a0bc:	mov	r0, r4
   1a0c0:	bl	113d0 <fprintf@plt>
   1a0c4:	mov	r1, r4
   1a0c8:	mov	r0, #10
   1a0cc:	bl	1149c <fputc@plt>
   1a0d0:	cmp	r5, #9
   1a0d4:	ldrls	pc, [pc, r5, lsl #2]
   1a0d8:	b	1a334 <argp_parse@@Base+0x1c10>
   1a0dc:	andeq	sl, r1, r0, asr r1
   1a0e0:	andeq	sl, r1, r8, ror r1
   1a0e4:	muleq	r1, ip, r1
   1a0e8:	andeq	sl, r1, r0, asr #3
   1a0ec:	andeq	sl, r1, ip, ror #3
   1a0f0:	andeq	sl, r1, r4, lsl r2
   1a0f4:	andeq	sl, r1, ip, lsr r2
   1a0f8:	andeq	sl, r1, r4, ror r2
   1a0fc:			; <UNDEFINED> instruction: 0x0001a2b4
   1a100:	andeq	sl, r1, r4, lsl #2
   1a104:	ldr	ip, [sp, #40]	; 0x28
   1a108:	movw	r1, #55112	; 0xd748
   1a10c:	movt	r1, #1
   1a110:	mov	r0, r4
   1a114:	str	ip, [sp]
   1a118:	ldr	r2, [sp, #44]	; 0x2c
   1a11c:	ldr	ip, [sp, #48]	; 0x30
   1a120:	ldr	r3, [sp, #64]	; 0x40
   1a124:	str	r2, [sp, #4]
   1a128:	ldr	r2, [sp, #52]	; 0x34
   1a12c:	str	ip, [sp, #8]
   1a130:	ldr	ip, [sp, #56]	; 0x38
   1a134:	str	r3, [sp, #24]
   1a138:	ldr	r3, [sp, #60]	; 0x3c
   1a13c:	str	r2, [sp, #12]
   1a140:	str	ip, [sp, #16]
   1a144:	str	r3, [sp, #20]
   1a148:	ldrd	r2, [sp, #32]
   1a14c:	bl	113d0 <fprintf@plt>
   1a150:	add	sp, sp, #76	; 0x4c
   1a154:	ldrd	r4, [sp]
   1a158:	add	sp, sp, #8
   1a15c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a160:	mov	r3, r0
   1a164:	movw	r1, #54624	; 0xd560
   1a168:	movt	r1, #1
   1a16c:	mov	r0, r4
   1a170:	bl	113d0 <fprintf@plt>
   1a174:	b	1a084 <argp_parse@@Base+0x1960>
   1a178:	ldr	r2, [sp, #32]
   1a17c:	mov	r0, r4
   1a180:	movw	r1, #54844	; 0xd63c
   1a184:	movt	r1, #1
   1a188:	add	sp, sp, #76	; 0x4c
   1a18c:	ldrd	r4, [sp]
   1a190:	ldr	lr, [sp, #8]
   1a194:	add	sp, sp, #12
   1a198:	b	113d0 <fprintf@plt>
   1a19c:	ldrd	r2, [sp, #32]
   1a1a0:	mov	r0, r4
   1a1a4:	movw	r1, #54860	; 0xd64c
   1a1a8:	movt	r1, #1
   1a1ac:	add	sp, sp, #76	; 0x4c
   1a1b0:	ldrd	r4, [sp]
   1a1b4:	ldr	lr, [sp, #8]
   1a1b8:	add	sp, sp, #12
   1a1bc:	b	113d0 <fprintf@plt>
   1a1c0:	ldrd	r2, [sp, #32]
   1a1c4:	mov	r0, r4
   1a1c8:	movw	r1, #54884	; 0xd664
   1a1cc:	movt	r1, #1
   1a1d0:	ldr	ip, [sp, #40]	; 0x28
   1a1d4:	str	ip, [sp, #88]	; 0x58
   1a1d8:	add	sp, sp, #76	; 0x4c
   1a1dc:	ldrd	r4, [sp]
   1a1e0:	ldr	lr, [sp, #8]
   1a1e4:	add	sp, sp, #12
   1a1e8:	b	113d0 <fprintf@plt>
   1a1ec:	mov	r0, r4
   1a1f0:	movw	r1, #54912	; 0xd680
   1a1f4:	movt	r1, #1
   1a1f8:	ldr	r3, [sp, #40]	; 0x28
   1a1fc:	ldr	ip, [sp, #44]	; 0x2c
   1a200:	ldr	r2, [sp, #32]
   1a204:	stm	sp, {r3, ip}
   1a208:	ldr	r3, [sp, #36]	; 0x24
   1a20c:	bl	113d0 <fprintf@plt>
   1a210:	b	1a150 <argp_parse@@Base+0x1a2c>
   1a214:	ldrd	r2, [sp, #40]	; 0x28
   1a218:	mov	r0, r4
   1a21c:	movw	r1, #54944	; 0xd6a0
   1a220:	movt	r1, #1
   1a224:	ldr	ip, [sp, #48]	; 0x30
   1a228:	strd	r2, [sp]
   1a22c:	ldrd	r2, [sp, #32]
   1a230:	str	ip, [sp, #8]
   1a234:	bl	113d0 <fprintf@plt>
   1a238:	b	1a150 <argp_parse@@Base+0x1a2c>
   1a23c:	ldr	ip, [sp, #40]	; 0x28
   1a240:	mov	r0, r4
   1a244:	movw	r1, #54980	; 0xd6c4
   1a248:	movt	r1, #1
   1a24c:	ldr	r2, [sp, #44]	; 0x2c
   1a250:	ldr	r3, [sp, #52]	; 0x34
   1a254:	str	ip, [sp]
   1a258:	ldr	ip, [sp, #48]	; 0x30
   1a25c:	str	r2, [sp, #4]
   1a260:	str	ip, [sp, #8]
   1a264:	str	r3, [sp, #12]
   1a268:	ldrd	r2, [sp, #32]
   1a26c:	bl	113d0 <fprintf@plt>
   1a270:	b	1a150 <argp_parse@@Base+0x1a2c>
   1a274:	ldr	r3, [sp, #40]	; 0x28
   1a278:	mov	r0, r4
   1a27c:	movw	r1, #55020	; 0xd6ec
   1a280:	movt	r1, #1
   1a284:	ldr	ip, [sp, #44]	; 0x2c
   1a288:	ldr	r2, [sp, #56]	; 0x38
   1a28c:	stm	sp, {r3, ip}
   1a290:	ldr	r3, [sp, #48]	; 0x30
   1a294:	ldr	ip, [sp, #52]	; 0x34
   1a298:	str	r3, [sp, #8]
   1a29c:	str	r2, [sp, #16]
   1a2a0:	str	ip, [sp, #12]
   1a2a4:	ldr	r2, [sp, #32]
   1a2a8:	ldr	r3, [sp, #36]	; 0x24
   1a2ac:	bl	113d0 <fprintf@plt>
   1a2b0:	b	1a150 <argp_parse@@Base+0x1a2c>
   1a2b4:	ldrd	r2, [sp, #40]	; 0x28
   1a2b8:	mov	r0, r4
   1a2bc:	movw	r1, #55064	; 0xd718
   1a2c0:	movt	r1, #1
   1a2c4:	ldr	ip, [sp, #60]	; 0x3c
   1a2c8:	strd	r2, [sp]
   1a2cc:	ldrd	r2, [sp, #48]	; 0x30
   1a2d0:	str	ip, [sp, #20]
   1a2d4:	ldr	ip, [sp, #56]	; 0x38
   1a2d8:	strd	r2, [sp, #8]
   1a2dc:	ldrd	r2, [sp, #32]
   1a2e0:	str	ip, [sp, #16]
   1a2e4:	bl	113d0 <fprintf@plt>
   1a2e8:	b	1a150 <argp_parse@@Base+0x1a2c>
   1a2ec:	mov	r5, r3
   1a2f0:	b	1a060 <argp_parse@@Base+0x193c>
   1a2f4:	mov	r5, #1
   1a2f8:	b	1a060 <argp_parse@@Base+0x193c>
   1a2fc:	mov	r5, #2
   1a300:	b	1a060 <argp_parse@@Base+0x193c>
   1a304:	mov	r5, #3
   1a308:	b	1a060 <argp_parse@@Base+0x193c>
   1a30c:	mov	r5, #4
   1a310:	b	1a060 <argp_parse@@Base+0x193c>
   1a314:	mov	r5, #5
   1a318:	b	1a060 <argp_parse@@Base+0x193c>
   1a31c:	mov	r5, #6
   1a320:	b	1a060 <argp_parse@@Base+0x193c>
   1a324:	mov	r5, #7
   1a328:	b	1a060 <argp_parse@@Base+0x193c>
   1a32c:	mov	r5, #8
   1a330:	b	1a060 <argp_parse@@Base+0x193c>
   1a334:	movw	r1, #55164	; 0xd77c
   1a338:	movt	r1, #1
   1a33c:	ldr	ip, [sp, #40]	; 0x28
   1a340:	mov	r0, r4
   1a344:	b	1a114 <argp_parse@@Base+0x19f0>
   1a348:	push	{r3}		; (str r3, [sp, #-4]!)
   1a34c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a350:	sub	sp, sp, #56	; 0x38
   1a354:	ldr	ip, [sp, #64]	; 0x40
   1a358:	add	r3, sp, #64	; 0x40
   1a35c:	str	r3, [sp, #12]
   1a360:	cmp	ip, #0
   1a364:	str	ip, [sp, #16]
   1a368:	beq	1a400 <argp_parse@@Base+0x1cdc>
   1a36c:	ldr	ip, [sp, #68]	; 0x44
   1a370:	cmp	ip, #0
   1a374:	str	ip, [sp, #20]
   1a378:	beq	1a424 <argp_parse@@Base+0x1d00>
   1a37c:	ldr	ip, [sp, #72]	; 0x48
   1a380:	cmp	ip, #0
   1a384:	str	ip, [sp, #24]
   1a388:	beq	1a42c <argp_parse@@Base+0x1d08>
   1a38c:	ldr	ip, [sp, #76]	; 0x4c
   1a390:	cmp	ip, #0
   1a394:	str	ip, [sp, #28]
   1a398:	beq	1a434 <argp_parse@@Base+0x1d10>
   1a39c:	ldr	ip, [sp, #80]	; 0x50
   1a3a0:	cmp	ip, #0
   1a3a4:	str	ip, [sp, #32]
   1a3a8:	beq	1a43c <argp_parse@@Base+0x1d18>
   1a3ac:	ldr	ip, [sp, #84]	; 0x54
   1a3b0:	cmp	ip, #0
   1a3b4:	str	ip, [sp, #36]	; 0x24
   1a3b8:	beq	1a444 <argp_parse@@Base+0x1d20>
   1a3bc:	ldr	ip, [sp, #88]	; 0x58
   1a3c0:	cmp	ip, #0
   1a3c4:	str	ip, [sp, #40]	; 0x28
   1a3c8:	beq	1a44c <argp_parse@@Base+0x1d28>
   1a3cc:	ldr	ip, [sp, #92]	; 0x5c
   1a3d0:	cmp	ip, #0
   1a3d4:	str	ip, [sp, #44]	; 0x2c
   1a3d8:	beq	1a454 <argp_parse@@Base+0x1d30>
   1a3dc:	ldr	ip, [sp, #96]	; 0x60
   1a3e0:	cmp	ip, #0
   1a3e4:	str	ip, [sp, #48]	; 0x30
   1a3e8:	beq	1a45c <argp_parse@@Base+0x1d38>
   1a3ec:	ldr	r3, [sp, #100]	; 0x64
   1a3f0:	cmp	r3, #0
   1a3f4:	str	r3, [sp, #52]	; 0x34
   1a3f8:	movne	ip, #10
   1a3fc:	moveq	ip, #9
   1a400:	ldr	r3, [sp, #60]	; 0x3c
   1a404:	add	lr, sp, #16
   1a408:	str	lr, [sp]
   1a40c:	str	ip, [sp, #4]
   1a410:	bl	19984 <argp_parse@@Base+0x1260>
   1a414:	add	sp, sp, #56	; 0x38
   1a418:	pop	{lr}		; (ldr lr, [sp], #4)
   1a41c:	add	sp, sp, #4
   1a420:	bx	lr
   1a424:	mov	ip, #1
   1a428:	b	1a400 <argp_parse@@Base+0x1cdc>
   1a42c:	mov	ip, #2
   1a430:	b	1a400 <argp_parse@@Base+0x1cdc>
   1a434:	mov	ip, #3
   1a438:	b	1a400 <argp_parse@@Base+0x1cdc>
   1a43c:	mov	ip, #4
   1a440:	b	1a400 <argp_parse@@Base+0x1cdc>
   1a444:	mov	ip, #5
   1a448:	b	1a400 <argp_parse@@Base+0x1cdc>
   1a44c:	mov	ip, #6
   1a450:	b	1a400 <argp_parse@@Base+0x1cdc>
   1a454:	mov	ip, #7
   1a458:	b	1a400 <argp_parse@@Base+0x1cdc>
   1a45c:	mov	ip, #8
   1a460:	b	1a400 <argp_parse@@Base+0x1cdc>
   1a464:	movw	r3, #58460	; 0xe45c
   1a468:	movt	r3, #2
   1a46c:	str	r4, [sp, #-8]!
   1a470:	mov	r0, #10
   1a474:	ldr	r1, [r3]
   1a478:	str	lr, [sp, #4]
   1a47c:	bl	1149c <fputc@plt>
   1a480:	movw	r1, #55224	; 0xd7b8
   1a484:	movt	r1, #1
   1a488:	movw	r0, #55248	; 0xd7d0
   1a48c:	movt	r0, #1
   1a490:	bl	111f0 <printf@plt>
   1a494:	movw	r2, #55268	; 0xd7e4
   1a498:	movt	r2, #1
   1a49c:	movw	r1, #54528	; 0xd500
   1a4a0:	movt	r1, #1
   1a4a4:	movw	r0, #55308	; 0xd80c
   1a4a8:	movt	r0, #1
   1a4ac:	bl	111f0 <printf@plt>
   1a4b0:	movw	r1, #55328	; 0xd820
   1a4b4:	movt	r1, #1
   1a4b8:	ldr	r4, [sp]
   1a4bc:	movw	r0, #55360	; 0xd840
   1a4c0:	movt	r0, #1
   1a4c4:	ldr	lr, [sp, #4]
   1a4c8:	add	sp, sp, #8
   1a4cc:	b	111f0 <printf@plt>
   1a4d0:	strd	r4, [sp, #-16]!
   1a4d4:	mov	r4, r0
   1a4d8:	mov	r5, r2
   1a4dc:	str	r6, [sp, #8]
   1a4e0:	mov	r6, r1
   1a4e4:	str	lr, [sp, #12]
   1a4e8:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a4ec:	cmp	r0, #0
   1a4f0:	beq	1a504 <argp_parse@@Base+0x1de0>
   1a4f4:	ldrd	r4, [sp]
   1a4f8:	ldr	r6, [sp, #8]
   1a4fc:	add	sp, sp, #12
   1a500:	pop	{pc}		; (ldr pc, [sp], #4)
   1a504:	cmp	r4, #0
   1a508:	beq	1a518 <argp_parse@@Base+0x1df4>
   1a50c:	cmp	r6, #0
   1a510:	cmpne	r5, #0
   1a514:	beq	1a4f4 <argp_parse@@Base+0x1dd0>
   1a518:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a51c:	str	r4, [sp, #-8]!
   1a520:	str	lr, [sp, #4]
   1a524:	bl	1ab78 <argp_parse@@Base+0x2454>
   1a528:	cmp	r0, #0
   1a52c:	beq	1a53c <argp_parse@@Base+0x1e18>
   1a530:	ldr	r4, [sp]
   1a534:	add	sp, sp, #4
   1a538:	pop	{pc}		; (ldr pc, [sp], #4)
   1a53c:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a540:	str	r4, [sp, #-8]!
   1a544:	str	lr, [sp, #4]
   1a548:	bl	1ab78 <argp_parse@@Base+0x2454>
   1a54c:	cmp	r0, #0
   1a550:	beq	1a560 <argp_parse@@Base+0x1e3c>
   1a554:	ldr	r4, [sp]
   1a558:	add	sp, sp, #4
   1a55c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a560:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a564:	str	r4, [sp, #-8]!
   1a568:	str	lr, [sp, #4]
   1a56c:	bl	1ab78 <argp_parse@@Base+0x2454>
   1a570:	cmp	r0, #0
   1a574:	beq	1a584 <argp_parse@@Base+0x1e60>
   1a578:	ldr	r4, [sp]
   1a57c:	add	sp, sp, #4
   1a580:	pop	{pc}		; (ldr pc, [sp], #4)
   1a584:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a588:	strd	r4, [sp, #-16]!
   1a58c:	mov	r5, r0
   1a590:	mov	r4, r1
   1a594:	str	r6, [sp, #8]
   1a598:	str	lr, [sp, #12]
   1a59c:	bl	1abb4 <argp_parse@@Base+0x2490>
   1a5a0:	cmp	r0, #0
   1a5a4:	beq	1a5b8 <argp_parse@@Base+0x1e94>
   1a5a8:	ldrd	r4, [sp]
   1a5ac:	ldr	r6, [sp, #8]
   1a5b0:	add	sp, sp, #12
   1a5b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5b8:	adds	r4, r4, #0
   1a5bc:	movne	r4, #1
   1a5c0:	cmp	r5, #0
   1a5c4:	moveq	r4, #1
   1a5c8:	cmp	r4, #0
   1a5cc:	beq	1a5a8 <argp_parse@@Base+0x1e84>
   1a5d0:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a5d4:	cmp	r1, #0
   1a5d8:	orreq	r1, r1, #1
   1a5dc:	str	r4, [sp, #-8]!
   1a5e0:	str	lr, [sp, #4]
   1a5e4:	bl	1abb4 <argp_parse@@Base+0x2490>
   1a5e8:	cmp	r0, #0
   1a5ec:	beq	1a5fc <argp_parse@@Base+0x1ed8>
   1a5f0:	ldr	r4, [sp]
   1a5f4:	add	sp, sp, #4
   1a5f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5fc:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a600:	strd	r4, [sp, #-16]!
   1a604:	mov	r4, r0
   1a608:	mov	r5, r2
   1a60c:	str	r6, [sp, #8]
   1a610:	mov	r6, r1
   1a614:	str	lr, [sp, #12]
   1a618:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a61c:	cmp	r0, #0
   1a620:	beq	1a634 <argp_parse@@Base+0x1f10>
   1a624:	ldrd	r4, [sp]
   1a628:	ldr	r6, [sp, #8]
   1a62c:	add	sp, sp, #12
   1a630:	pop	{pc}		; (ldr pc, [sp], #4)
   1a634:	cmp	r4, #0
   1a638:	beq	1a648 <argp_parse@@Base+0x1f24>
   1a63c:	cmp	r6, #0
   1a640:	cmpne	r5, #0
   1a644:	beq	1a624 <argp_parse@@Base+0x1f00>
   1a648:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a64c:	cmp	r2, #0
   1a650:	cmpne	r1, #0
   1a654:	str	r4, [sp, #-8]!
   1a658:	moveq	r2, #1
   1a65c:	str	lr, [sp, #4]
   1a660:	moveq	r1, r2
   1a664:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a668:	cmp	r0, #0
   1a66c:	beq	1a67c <argp_parse@@Base+0x1f58>
   1a670:	ldr	r4, [sp]
   1a674:	add	sp, sp, #4
   1a678:	pop	{pc}		; (ldr pc, [sp], #4)
   1a67c:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a680:	mov	r2, r1
   1a684:	mov	r1, r0
   1a688:	str	r4, [sp, #-8]!
   1a68c:	mov	r0, #0
   1a690:	str	lr, [sp, #4]
   1a694:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a698:	cmp	r0, #0
   1a69c:	beq	1a6ac <argp_parse@@Base+0x1f88>
   1a6a0:	ldr	r4, [sp]
   1a6a4:	add	sp, sp, #4
   1a6a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6ac:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a6b0:	cmp	r1, #0
   1a6b4:	cmpne	r0, #0
   1a6b8:	str	r4, [sp, #-8]!
   1a6bc:	moveq	r2, #1
   1a6c0:	movne	r2, r1
   1a6c4:	str	lr, [sp, #4]
   1a6c8:	movne	r1, r0
   1a6cc:	moveq	r1, r2
   1a6d0:	mov	r0, #0
   1a6d4:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a6d8:	cmp	r0, #0
   1a6dc:	beq	1a6ec <argp_parse@@Base+0x1fc8>
   1a6e0:	ldr	r4, [sp]
   1a6e4:	add	sp, sp, #4
   1a6e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6ec:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a6f0:	cmp	r0, #0
   1a6f4:	strd	r4, [sp, #-16]!
   1a6f8:	mov	r5, r1
   1a6fc:	ldr	r4, [r1]
   1a700:	str	r6, [sp, #8]
   1a704:	str	lr, [sp, #12]
   1a708:	beq	1a750 <argp_parse@@Base+0x202c>
   1a70c:	lsr	r3, r4, #1
   1a710:	add	r3, r3, #1
   1a714:	adds	r4, r4, r3
   1a718:	bcs	1a74c <argp_parse@@Base+0x2028>
   1a71c:	mov	r2, #1
   1a720:	mov	r1, r4
   1a724:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a728:	cmp	r0, #0
   1a72c:	beq	1a744 <argp_parse@@Base+0x2020>
   1a730:	ldr	r6, [sp, #8]
   1a734:	str	r4, [r5]
   1a738:	ldrd	r4, [sp]
   1a73c:	add	sp, sp, #12
   1a740:	pop	{pc}		; (ldr pc, [sp], #4)
   1a744:	cmp	r4, #0
   1a748:	beq	1a730 <argp_parse@@Base+0x200c>
   1a74c:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a750:	cmp	r4, #0
   1a754:	mov	r2, #1
   1a758:	moveq	r4, #64	; 0x40
   1a75c:	mov	r1, r4
   1a760:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a764:	cmp	r0, #0
   1a768:	bne	1a730 <argp_parse@@Base+0x200c>
   1a76c:	b	1a74c <argp_parse@@Base+0x2028>
   1a770:	cmp	r0, #0
   1a774:	strd	r4, [sp, #-16]!
   1a778:	mov	r5, r1
   1a77c:	ldr	r4, [r1]
   1a780:	str	r6, [sp, #8]
   1a784:	mov	r6, r2
   1a788:	str	lr, [sp, #12]
   1a78c:	beq	1a7d4 <argp_parse@@Base+0x20b0>
   1a790:	lsr	r3, r4, #1
   1a794:	add	r3, r3, #1
   1a798:	adds	r4, r4, r3
   1a79c:	bcs	1a7d0 <argp_parse@@Base+0x20ac>
   1a7a0:	mov	r1, r4
   1a7a4:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a7a8:	cmp	r0, #0
   1a7ac:	beq	1a7c4 <argp_parse@@Base+0x20a0>
   1a7b0:	ldr	r6, [sp, #8]
   1a7b4:	str	r4, [r5]
   1a7b8:	ldrd	r4, [sp]
   1a7bc:	add	sp, sp, #12
   1a7c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a7c4:	cmp	r4, #0
   1a7c8:	cmpne	r6, #0
   1a7cc:	beq	1a7b0 <argp_parse@@Base+0x208c>
   1a7d0:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a7d4:	cmp	r4, #0
   1a7d8:	bne	1a7ec <argp_parse@@Base+0x20c8>
   1a7dc:	mov	r4, #64	; 0x40
   1a7e0:	udiv	r4, r4, r2
   1a7e4:	cmp	r2, #64	; 0x40
   1a7e8:	addhi	r4, r4, #1
   1a7ec:	mov	r2, r6
   1a7f0:	mov	r1, r4
   1a7f4:	mov	r0, #0
   1a7f8:	bl	1c7c4 <argp_parse@@Base+0x40a0>
   1a7fc:	cmp	r0, #0
   1a800:	bne	1a7b0 <argp_parse@@Base+0x208c>
   1a804:	b	1a7d0 <argp_parse@@Base+0x20ac>
   1a808:	ldr	ip, [r1]
   1a80c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a810:	strd	r6, [sp, #8]
   1a814:	mov	r7, r1
   1a818:	mov	r6, r0
   1a81c:	str	r8, [sp, #16]
   1a820:	mvn	r8, r3
   1a824:	lsr	r8, r8, #31
   1a828:	str	lr, [sp, #20]
   1a82c:	asr	r1, ip, #1
   1a830:	ldr	lr, [sp, #24]
   1a834:	adds	r4, ip, r1
   1a838:	mvnvs	r4, #-2147483648	; 0x80000000
   1a83c:	cmp	r3, r4
   1a840:	movge	r1, #0
   1a844:	andlt	r1, r8, #1
   1a848:	cmp	r1, #0
   1a84c:	movne	r4, r3
   1a850:	smull	r0, r1, r4, lr
   1a854:	cmp	r1, r0, asr #31
   1a858:	bne	1a908 <argp_parse@@Base+0x21e4>
   1a85c:	cmp	r0, #63	; 0x3f
   1a860:	mov	r5, r0
   1a864:	ble	1a8d4 <argp_parse@@Base+0x21b0>
   1a868:	cmp	r6, #0
   1a86c:	sub	r1, r4, ip
   1a870:	streq	r6, [r7]
   1a874:	cmp	r1, r2
   1a878:	bge	1a8a8 <argp_parse@@Base+0x2184>
   1a87c:	adds	r4, ip, r2
   1a880:	bvs	1a904 <argp_parse@@Base+0x21e0>
   1a884:	cmp	r4, r3
   1a888:	movle	r3, #0
   1a88c:	andgt	r3, r8, #1
   1a890:	cmp	r3, #0
   1a894:	bne	1a904 <argp_parse@@Base+0x21e0>
   1a898:	smull	r0, r1, r4, lr
   1a89c:	cmp	r1, r0, asr #31
   1a8a0:	mov	r5, r0
   1a8a4:	bne	1a904 <argp_parse@@Base+0x21e0>
   1a8a8:	mov	r1, r5
   1a8ac:	mov	r0, r6
   1a8b0:	bl	1abb4 <argp_parse@@Base+0x2490>
   1a8b4:	cmp	r0, #0
   1a8b8:	beq	1a8e8 <argp_parse@@Base+0x21c4>
   1a8bc:	ldr	r8, [sp, #16]
   1a8c0:	str	r4, [r7]
   1a8c4:	ldrd	r4, [sp]
   1a8c8:	ldrd	r6, [sp, #8]
   1a8cc:	add	sp, sp, #20
   1a8d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8d4:	mov	r0, #64	; 0x40
   1a8d8:	sdiv	r4, r0, lr
   1a8dc:	mls	r5, lr, r4, r0
   1a8e0:	sub	r5, r0, r5
   1a8e4:	b	1a868 <argp_parse@@Base+0x2144>
   1a8e8:	adds	r5, r5, #0
   1a8ec:	movne	r5, #1
   1a8f0:	cmp	r6, #0
   1a8f4:	movne	r6, r5
   1a8f8:	moveq	r6, #1
   1a8fc:	cmp	r6, #0
   1a900:	beq	1a8bc <argp_parse@@Base+0x2198>
   1a904:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a908:	mvn	r0, #-2147483648	; 0x80000000
   1a90c:	b	1a8d8 <argp_parse@@Base+0x21b4>
   1a910:	mov	r1, #1
   1a914:	str	r4, [sp, #-8]!
   1a918:	str	lr, [sp, #4]
   1a91c:	bl	1ab04 <argp_parse@@Base+0x23e0>
   1a920:	cmp	r0, #0
   1a924:	beq	1a934 <argp_parse@@Base+0x2210>
   1a928:	ldr	r4, [sp]
   1a92c:	add	sp, sp, #4
   1a930:	pop	{pc}		; (ldr pc, [sp], #4)
   1a934:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a938:	mov	r1, #1
   1a93c:	str	r4, [sp, #-8]!
   1a940:	str	lr, [sp, #4]
   1a944:	bl	1ab04 <argp_parse@@Base+0x23e0>
   1a948:	cmp	r0, #0
   1a94c:	beq	1a95c <argp_parse@@Base+0x2238>
   1a950:	ldr	r4, [sp]
   1a954:	add	sp, sp, #4
   1a958:	pop	{pc}		; (ldr pc, [sp], #4)
   1a95c:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a960:	str	r4, [sp, #-8]!
   1a964:	str	lr, [sp, #4]
   1a968:	bl	1ab04 <argp_parse@@Base+0x23e0>
   1a96c:	cmp	r0, #0
   1a970:	beq	1a980 <argp_parse@@Base+0x225c>
   1a974:	ldr	r4, [sp]
   1a978:	add	sp, sp, #4
   1a97c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a980:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a984:	str	r4, [sp, #-8]!
   1a988:	str	lr, [sp, #4]
   1a98c:	bl	1ab04 <argp_parse@@Base+0x23e0>
   1a990:	cmp	r0, #0
   1a994:	beq	1a9a4 <argp_parse@@Base+0x2280>
   1a998:	ldr	r4, [sp]
   1a99c:	add	sp, sp, #4
   1a9a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9a4:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a9a8:	strd	r4, [sp, #-16]!
   1a9ac:	mov	r4, r1
   1a9b0:	str	r6, [sp, #8]
   1a9b4:	mov	r6, r0
   1a9b8:	mov	r0, r1
   1a9bc:	str	lr, [sp, #12]
   1a9c0:	bl	1ab78 <argp_parse@@Base+0x2454>
   1a9c4:	subs	r5, r0, #0
   1a9c8:	beq	1a9ec <argp_parse@@Base+0x22c8>
   1a9cc:	mov	r2, r4
   1a9d0:	mov	r1, r6
   1a9d4:	bl	11268 <memcpy@plt>
   1a9d8:	mov	r0, r5
   1a9dc:	ldrd	r4, [sp]
   1a9e0:	ldr	r6, [sp, #8]
   1a9e4:	add	sp, sp, #12
   1a9e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9ec:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1a9f0:	strd	r4, [sp, #-16]!
   1a9f4:	mov	r4, r1
   1a9f8:	str	r6, [sp, #8]
   1a9fc:	mov	r6, r0
   1aa00:	mov	r0, r1
   1aa04:	str	lr, [sp, #12]
   1aa08:	bl	1ab78 <argp_parse@@Base+0x2454>
   1aa0c:	subs	r5, r0, #0
   1aa10:	beq	1aa34 <argp_parse@@Base+0x2310>
   1aa14:	mov	r2, r4
   1aa18:	mov	r1, r6
   1aa1c:	bl	11268 <memcpy@plt>
   1aa20:	mov	r0, r5
   1aa24:	ldrd	r4, [sp]
   1aa28:	ldr	r6, [sp, #8]
   1aa2c:	add	sp, sp, #12
   1aa30:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa34:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1aa38:	strd	r4, [sp, #-16]!
   1aa3c:	mov	r4, r1
   1aa40:	str	r6, [sp, #8]
   1aa44:	mov	r6, r0
   1aa48:	add	r0, r1, #1
   1aa4c:	str	lr, [sp, #12]
   1aa50:	bl	1ab78 <argp_parse@@Base+0x2454>
   1aa54:	subs	r5, r0, #0
   1aa58:	beq	1aa84 <argp_parse@@Base+0x2360>
   1aa5c:	mov	r3, #0
   1aa60:	mov	r1, r6
   1aa64:	mov	r2, r4
   1aa68:	strb	r3, [r5, r4]
   1aa6c:	bl	11268 <memcpy@plt>
   1aa70:	mov	r0, r5
   1aa74:	ldrd	r4, [sp]
   1aa78:	ldr	r6, [sp, #8]
   1aa7c:	add	sp, sp, #12
   1aa80:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa84:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1aa88:	strd	r4, [sp, #-16]!
   1aa8c:	str	r6, [sp, #8]
   1aa90:	mov	r6, r0
   1aa94:	str	lr, [sp, #12]
   1aa98:	bl	113b8 <strlen@plt>
   1aa9c:	add	r4, r0, #1
   1aaa0:	mov	r0, r4
   1aaa4:	bl	1ab78 <argp_parse@@Base+0x2454>
   1aaa8:	subs	r5, r0, #0
   1aaac:	beq	1aad0 <argp_parse@@Base+0x23ac>
   1aab0:	mov	r2, r4
   1aab4:	mov	r1, r6
   1aab8:	bl	11268 <memcpy@plt>
   1aabc:	mov	r0, r5
   1aac0:	ldrd	r4, [sp]
   1aac4:	ldr	r6, [sp, #8]
   1aac8:	add	sp, sp, #12
   1aacc:	pop	{pc}		; (ldr pc, [sp], #4)
   1aad0:	bl	1aad4 <argp_parse@@Base+0x23b0>
   1aad4:	movw	r3, #58420	; 0xe434
   1aad8:	movt	r3, #2
   1aadc:	str	r4, [sp, #-8]!
   1aae0:	movw	r2, #52036	; 0xcb44
   1aae4:	movt	r2, #1
   1aae8:	ldr	r0, [r3]
   1aaec:	mov	r1, #0
   1aaf0:	movw	r3, #55448	; 0xd898
   1aaf4:	movt	r3, #1
   1aaf8:	str	lr, [sp, #4]
   1aafc:	bl	1131c <error@plt>
   1ab00:	bl	11514 <abort@plt>
   1ab04:	cmp	r1, #0
   1ab08:	cmpne	r0, #0
   1ab0c:	beq	1ab58 <argp_parse@@Base+0x2434>
   1ab10:	strd	r4, [sp, #-16]!
   1ab14:	umull	r4, r5, r0, r1
   1ab18:	str	r6, [sp, #8]
   1ab1c:	str	lr, [sp, #12]
   1ab20:	adds	r3, r5, #0
   1ab24:	movne	r3, #1
   1ab28:	cmp	r4, #0
   1ab2c:	blt	1ab38 <argp_parse@@Base+0x2414>
   1ab30:	cmp	r3, #0
   1ab34:	beq	1ab64 <argp_parse@@Base+0x2440>
   1ab38:	bl	113dc <__errno_location@plt>
   1ab3c:	mov	r3, #12
   1ab40:	ldrd	r4, [sp]
   1ab44:	ldr	r6, [sp, #8]
   1ab48:	add	sp, sp, #12
   1ab4c:	str	r3, [r0]
   1ab50:	mov	r0, #0
   1ab54:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab58:	mov	r1, #1
   1ab5c:	mov	r0, r1
   1ab60:	b	111c0 <calloc@plt>
   1ab64:	ldrd	r4, [sp]
   1ab68:	ldr	r6, [sp, #8]
   1ab6c:	ldr	lr, [sp, #12]
   1ab70:	add	sp, sp, #16
   1ab74:	b	111c0 <calloc@plt>
   1ab78:	cmp	r0, #0
   1ab7c:	beq	1ab88 <argp_parse@@Base+0x2464>
   1ab80:	blt	1ab90 <argp_parse@@Base+0x246c>
   1ab84:	b	1134c <malloc@plt>
   1ab88:	mov	r0, #1
   1ab8c:	b	1134c <malloc@plt>
   1ab90:	str	r4, [sp, #-8]!
   1ab94:	str	lr, [sp, #4]
   1ab98:	bl	113dc <__errno_location@plt>
   1ab9c:	mov	r3, #12
   1aba0:	ldr	r4, [sp]
   1aba4:	add	sp, sp, #4
   1aba8:	str	r3, [r0]
   1abac:	mov	r0, #0
   1abb0:	pop	{pc}		; (ldr pc, [sp], #4)
   1abb4:	cmp	r0, #0
   1abb8:	beq	1abe0 <argp_parse@@Base+0x24bc>
   1abbc:	cmp	r1, #0
   1abc0:	str	r4, [sp, #-8]!
   1abc4:	str	lr, [sp, #4]
   1abc8:	beq	1abe8 <argp_parse@@Base+0x24c4>
   1abcc:	blt	1abfc <argp_parse@@Base+0x24d8>
   1abd0:	ldr	r4, [sp]
   1abd4:	ldr	lr, [sp, #4]
   1abd8:	add	sp, sp, #8
   1abdc:	b	112b0 <realloc@plt>
   1abe0:	mov	r0, r1
   1abe4:	b	1ab78 <argp_parse@@Base+0x2454>
   1abe8:	bl	1975c <argp_parse@@Base+0x1038>
   1abec:	ldr	r4, [sp]
   1abf0:	add	sp, sp, #4
   1abf4:	mov	r0, #0
   1abf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1abfc:	bl	113dc <__errno_location@plt>
   1ac00:	mov	r3, #12
   1ac04:	str	r3, [r0]
   1ac08:	b	1abec <argp_parse@@Base+0x24c8>
   1ac0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ac10:	mov	r5, r3
   1ac14:	strd	r6, [sp, #8]
   1ac18:	mov	r7, r1
   1ac1c:	mov	r6, r2
   1ac20:	str	r8, [sp, #16]
   1ac24:	mov	r8, r0
   1ac28:	mov	r0, #36	; 0x24
   1ac2c:	str	lr, [sp, #20]
   1ac30:	bl	1ab78 <argp_parse@@Base+0x2454>
   1ac34:	subs	r4, r0, #0
   1ac38:	beq	1ac7c <argp_parse@@Base+0x2558>
   1ac3c:	mov	r3, #0
   1ac40:	mov	r0, #200	; 0xc8
   1ac44:	str	r8, [r4]
   1ac48:	str	r7, [r4, #4]
   1ac4c:	str	r6, [r4, #8]
   1ac50:	str	r5, [r4, #12]
   1ac54:	str	r3, [r4, #16]
   1ac58:	str	r3, [r4, #20]
   1ac5c:	bl	1ab78 <argp_parse@@Base+0x2454>
   1ac60:	cmp	r0, #0
   1ac64:	mov	r3, r0
   1ac68:	str	r0, [r4, #24]
   1ac6c:	addne	r2, r0, #200	; 0xc8
   1ac70:	strne	r0, [r4, #28]
   1ac74:	strne	r2, [r4, #32]
   1ac78:	beq	1ac94 <argp_parse@@Base+0x2570>
   1ac7c:	mov	r0, r4
   1ac80:	ldrd	r4, [sp]
   1ac84:	ldrd	r6, [sp, #8]
   1ac88:	ldr	r8, [sp, #16]
   1ac8c:	add	sp, sp, #20
   1ac90:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac94:	mov	r0, r4
   1ac98:	mov	r4, r3
   1ac9c:	bl	1975c <argp_parse@@Base+0x1038>
   1aca0:	b	1ac7c <argp_parse@@Base+0x2558>
   1aca4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1aca8:	mov	r5, r0
   1acac:	ldr	r4, [r0, #16]
   1acb0:	ldr	r3, [r0, #24]
   1acb4:	strd	r6, [sp, #8]
   1acb8:	strd	r8, [sp, #16]
   1acbc:	ldr	r8, [r0, #28]
   1acc0:	strd	sl, [sp, #24]
   1acc4:	add	r4, r3, r4
   1acc8:	str	lr, [sp, #32]
   1accc:	sub	sp, sp, #12
   1acd0:	cmp	r4, r8
   1acd4:	bcc	1ad50 <argp_parse@@Base+0x262c>
   1acd8:	b	1afac <argp_parse@@Base+0x2888>
   1acdc:	sub	r2, fp, r4
   1ace0:	add	r2, r2, r6
   1ace4:	cmp	r2, r3
   1ace8:	blt	1afec <argp_parse@@Base+0x28c8>
   1acec:	ldr	sl, [r5, #12]
   1acf0:	sub	r7, r3, #1
   1acf4:	str	r3, [sp, #4]
   1acf8:	cmp	sl, #0
   1acfc:	bge	1ae0c <argp_parse@@Base+0x26e8>
   1ad00:	cmp	r8, fp
   1ad04:	bls	1b184 <argp_parse@@Base+0x2a60>
   1ad08:	sub	r0, r7, r6
   1ad0c:	sub	r2, r8, fp
   1ad10:	add	r0, r4, r0
   1ad14:	mov	r1, fp
   1ad18:	bl	11220 <memmove@plt>
   1ad1c:	ldr	r2, [r5, #20]
   1ad20:	mov	r3, #0
   1ad24:	str	r3, [r5, #20]
   1ad28:	ldr	r3, [sp, #4]
   1ad2c:	ldr	r8, [r5, #28]
   1ad30:	sub	r7, r7, r2
   1ad34:	add	r7, r4, r7
   1ad38:	sub	fp, r7, fp
   1ad3c:	add	r4, r4, r3
   1ad40:	sub	r8, r8, fp
   1ad44:	str	r8, [r5, #28]
   1ad48:	cmp	r4, r8
   1ad4c:	bcs	1afa8 <argp_parse@@Base+0x2884>
   1ad50:	ldr	r6, [r5, #20]
   1ad54:	cmp	r6, #0
   1ad58:	bne	1adb8 <argp_parse@@Base+0x2694>
   1ad5c:	ldr	r7, [r5, #4]
   1ad60:	cmp	r7, #0
   1ad64:	beq	1afd0 <argp_parse@@Base+0x28ac>
   1ad68:	ldr	r2, [r5, #32]
   1ad6c:	add	r3, r8, r7
   1ad70:	cmp	r2, r3
   1ad74:	bls	1b0f8 <argp_parse@@Base+0x29d4>
   1ad78:	add	r6, r4, r7
   1ad7c:	sub	r2, r8, r4
   1ad80:	mov	r1, r4
   1ad84:	mov	r0, r6
   1ad88:	bl	11220 <memmove@plt>
   1ad8c:	ldr	r3, [r5, #28]
   1ad90:	mov	r0, r4
   1ad94:	mov	r2, r7
   1ad98:	mov	r1, #32
   1ad9c:	mov	r4, r6
   1ada0:	add	r3, r3, r7
   1ada4:	str	r3, [r5, #28]
   1ada8:	bl	1140c <memset@plt>
   1adac:	ldr	r8, [r5, #28]
   1adb0:	mov	r6, r7
   1adb4:	str	r7, [r5, #20]
   1adb8:	sub	r9, r8, r4
   1adbc:	mov	r1, #10
   1adc0:	mov	r2, r9
   1adc4:	mov	r0, r4
   1adc8:	bl	1143c <memchr@plt>
   1adcc:	cmp	r6, #0
   1add0:	mov	fp, r0
   1add4:	bge	1ade0 <argp_parse@@Base+0x26bc>
   1add8:	mov	r6, #0
   1addc:	str	r6, [r5, #20]
   1ade0:	cmp	fp, #0
   1ade4:	ldr	r3, [r5, #8]
   1ade8:	bne	1acdc <argp_parse@@Base+0x25b8>
   1adec:	add	r1, r6, r9
   1adf0:	cmp	r1, r3
   1adf4:	bcc	1b1f4 <argp_parse@@Base+0x2ad0>
   1adf8:	ldr	sl, [r5, #12]
   1adfc:	sub	r7, r3, #1
   1ae00:	cmp	sl, #0
   1ae04:	blt	1b188 <argp_parse@@Base+0x2a64>
   1ae08:	mov	fp, r8
   1ae0c:	add	r7, r7, #1
   1ae10:	sub	r6, r7, r6
   1ae14:	adds	r6, r4, r6
   1ae18:	bcs	1b030 <argp_parse@@Base+0x290c>
   1ae1c:	bl	11394 <__ctype_b_loc@plt>
   1ae20:	mov	r3, r6
   1ae24:	ldr	ip, [r0]
   1ae28:	b	1ae38 <argp_parse@@Base+0x2714>
   1ae2c:	cmp	r4, r0
   1ae30:	mov	r3, r0
   1ae34:	bhi	1b034 <argp_parse@@Base+0x2910>
   1ae38:	ldrb	r1, [r3]
   1ae3c:	mov	r7, r3
   1ae40:	sub	r0, r3, #1
   1ae44:	lsl	r1, r1, #1
   1ae48:	ldrh	r1, [ip, r1]
   1ae4c:	tst	r1, #1
   1ae50:	beq	1ae2c <argp_parse@@Base+0x2708>
   1ae54:	add	r0, r3, #1
   1ae58:	cmp	r4, r0
   1ae5c:	bcs	1b044 <argp_parse@@Base+0x2920>
   1ae60:	cmp	r4, r3
   1ae64:	movhi	r6, r0
   1ae68:	movhi	r7, r6
   1ae6c:	bls	1ae88 <argp_parse@@Base+0x2764>
   1ae70:	b	1ae9c <argp_parse@@Base+0x2778>
   1ae74:	ldrb	r1, [r6, #-1]
   1ae78:	lsl	r1, r1, #1
   1ae7c:	ldrh	r1, [ip, r1]
   1ae80:	tst	r1, #1
   1ae84:	beq	1ae98 <argp_parse@@Base+0x2774>
   1ae88:	cmp	r4, r3
   1ae8c:	mov	r6, r3
   1ae90:	sub	r3, r3, #1
   1ae94:	bne	1ae74 <argp_parse@@Base+0x2750>
   1ae98:	mov	r7, r0
   1ae9c:	add	r3, r9, #1
   1aea0:	add	r3, r4, r3
   1aea4:	cmp	r7, r3
   1aea8:	beq	1b000 <argp_parse@@Base+0x28dc>
   1aeac:	add	r1, r6, #1
   1aeb0:	sub	r3, r7, r1
   1aeb4:	cmp	r3, sl
   1aeb8:	bge	1b018 <argp_parse@@Base+0x28f4>
   1aebc:	cmp	r7, r8
   1aec0:	bcs	1b010 <argp_parse@@Base+0x28ec>
   1aec4:	ldr	r3, [r5, #32]
   1aec8:	add	sl, sl, #1
   1aecc:	sub	r3, r3, r8
   1aed0:	cmp	r3, sl
   1aed4:	bgt	1b1a0 <argp_parse@@Base+0x2a7c>
   1aed8:	ldr	r3, [r5]
   1aedc:	ldr	r0, [r5, #24]
   1aee0:	cmp	r0, r6
   1aee4:	bcs	1aef8 <argp_parse@@Base+0x27d4>
   1aee8:	sub	r2, r6, r0
   1aeec:	mov	r1, #1
   1aef0:	bl	11280 <fwrite_unlocked@plt>
   1aef4:	ldr	r3, [r5]
   1aef8:	ldr	r2, [r3, #20]
   1aefc:	ldr	r1, [r3, #24]
   1af00:	cmp	r2, r1
   1af04:	addcc	r1, r2, #1
   1af08:	strcc	r1, [r3, #20]
   1af0c:	movcc	r3, #10
   1af10:	strbcc	r3, [r2]
   1af14:	bcs	1b1e4 <argp_parse@@Base+0x2ac0>
   1af18:	ldr	fp, [r5, #24]
   1af1c:	sub	r4, r4, fp
   1af20:	sub	r3, r7, fp
   1af24:	add	r9, r9, r4
   1af28:	mov	r8, r3
   1af2c:	mov	r4, fp
   1af30:	ldr	r2, [r5, #12]
   1af34:	cmp	r2, r3
   1af38:	ble	1af5c <argp_parse@@Base+0x2838>
   1af3c:	add	r3, r9, #1
   1af40:	add	r3, fp, r3
   1af44:	cmp	r7, r3
   1af48:	bne	1b078 <argp_parse@@Base+0x2954>
   1af4c:	ldr	r3, [r5, #32]
   1af50:	sub	r3, r3, r7
   1af54:	cmp	r2, r3
   1af58:	bgt	1b078 <argp_parse@@Base+0x2954>
   1af5c:	cmp	r2, #0
   1af60:	ble	1af80 <argp_parse@@Base+0x285c>
   1af64:	mov	r3, #0
   1af68:	mov	r1, #32
   1af6c:	strb	r1, [r4], #1
   1af70:	add	r3, r3, #1
   1af74:	ldr	r2, [r5, #12]
   1af78:	cmp	r2, r3
   1af7c:	bgt	1af6c <argp_parse@@Base+0x2848>
   1af80:	cmp	r4, r7
   1af84:	bcc	1b0dc <argp_parse@@Base+0x29b8>
   1af88:	cmp	r2, #0
   1af8c:	sub	r8, r9, r8
   1af90:	add	r8, r4, r8
   1af94:	mvneq	r2, #0
   1af98:	cmp	r4, r8
   1af9c:	str	r2, [r5, #20]
   1afa0:	str	r8, [r5, #28]
   1afa4:	bcc	1ad50 <argp_parse@@Base+0x262c>
   1afa8:	ldr	r3, [r5, #24]
   1afac:	sub	r8, r8, r3
   1afb0:	str	r8, [r5, #16]
   1afb4:	add	sp, sp, #12
   1afb8:	ldrd	r4, [sp]
   1afbc:	ldrd	r6, [sp, #8]
   1afc0:	ldrd	r8, [sp, #16]
   1afc4:	ldrd	sl, [sp, #24]
   1afc8:	add	sp, sp, #32
   1afcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1afd0:	sub	r9, r8, r4
   1afd4:	mov	r1, #10
   1afd8:	mov	r2, r9
   1afdc:	mov	r0, r4
   1afe0:	bl	1143c <memchr@plt>
   1afe4:	mov	fp, r0
   1afe8:	b	1ade0 <argp_parse@@Base+0x26bc>
   1afec:	mov	r3, #0
   1aff0:	add	r4, fp, #1
   1aff4:	ldr	r8, [r5, #28]
   1aff8:	str	r3, [r5, #20]
   1affc:	b	1ad48 <argp_parse@@Base+0x2624>
   1b000:	ldr	r3, [r5, #32]
   1b004:	sub	r3, r3, r6
   1b008:	cmp	r3, sl
   1b00c:	ble	1aebc <argp_parse@@Base+0x2798>
   1b010:	add	r1, r6, #1
   1b014:	sub	r3, r7, r1
   1b018:	mov	r2, #10
   1b01c:	sub	r8, r7, r4
   1b020:	mov	fp, r4
   1b024:	mov	r4, r1
   1b028:	strb	r2, [r6]
   1b02c:	b	1af30 <argp_parse@@Base+0x280c>
   1b030:	add	r7, r6, #1
   1b034:	cmp	r4, r7
   1b038:	bcs	1b044 <argp_parse@@Base+0x2920>
   1b03c:	mov	r6, r7
   1b040:	b	1ae9c <argp_parse@@Base+0x2778>
   1b044:	cmp	r6, fp
   1b048:	bcc	1b14c <argp_parse@@Base+0x2a28>
   1b04c:	cmp	r6, fp
   1b050:	beq	1b138 <argp_parse@@Base+0x2a14>
   1b054:	bl	11394 <__ctype_b_loc@plt>
   1b058:	ldr	r1, [r0]
   1b05c:	mov	r7, r6
   1b060:	ldrb	r3, [r7, #1]!
   1b064:	lsl	r3, r3, #1
   1b068:	ldrh	r3, [r1, r3]
   1b06c:	tst	r3, #1
   1b070:	bne	1b060 <argp_parse@@Base+0x293c>
   1b074:	b	1ae9c <argp_parse@@Base+0x2778>
   1b078:	cmp	r2, #0
   1b07c:	movgt	r6, #0
   1b080:	movgt	sl, #32
   1b084:	bgt	1b0a4 <argp_parse@@Base+0x2980>
   1b088:	b	1af80 <argp_parse@@Base+0x285c>
   1b08c:	str	ip, [r0, #20]
   1b090:	add	r6, r6, #1
   1b094:	strb	sl, [r2]
   1b098:	ldr	r2, [r5, #12]
   1b09c:	cmp	r2, r6
   1b0a0:	ble	1af80 <argp_parse@@Base+0x285c>
   1b0a4:	ldr	r0, [r5]
   1b0a8:	ldr	r2, [r0, #20]
   1b0ac:	ldr	r1, [r0, #24]
   1b0b0:	add	ip, r2, #1
   1b0b4:	cmp	r2, r1
   1b0b8:	bcc	1b08c <argp_parse@@Base+0x2968>
   1b0bc:	mov	r1, #32
   1b0c0:	add	r6, r6, #1
   1b0c4:	bl	1146c <__overflow@plt>
   1b0c8:	ldr	r2, [r5, #12]
   1b0cc:	cmp	r6, r2
   1b0d0:	blt	1b0a4 <argp_parse@@Base+0x2980>
   1b0d4:	cmp	r4, r7
   1b0d8:	bcs	1af88 <argp_parse@@Base+0x2864>
   1b0dc:	add	r2, fp, r9
   1b0e0:	mov	r1, r7
   1b0e4:	sub	r2, r2, r7
   1b0e8:	mov	r0, r4
   1b0ec:	bl	11220 <memmove@plt>
   1b0f0:	ldr	r2, [r5, #12]
   1b0f4:	b	1af88 <argp_parse@@Base+0x2864>
   1b0f8:	mov	r8, #32
   1b0fc:	b	1b10c <argp_parse@@Base+0x29e8>
   1b100:	add	r6, r6, #1
   1b104:	cmp	r7, r6
   1b108:	beq	1adac <argp_parse@@Base+0x2688>
   1b10c:	ldr	r0, [r5]
   1b110:	ldr	r3, [r0, #20]
   1b114:	ldr	r2, [r0, #24]
   1b118:	add	r1, r3, #1
   1b11c:	cmp	r3, r2
   1b120:	strcc	r1, [r0, #20]
   1b124:	strbcc	r8, [r3]
   1b128:	bcc	1b100 <argp_parse@@Base+0x29dc>
   1b12c:	mov	r1, #32
   1b130:	bl	1146c <__overflow@plt>
   1b134:	b	1b100 <argp_parse@@Base+0x29dc>
   1b138:	mov	r3, #0
   1b13c:	add	r4, r6, #1
   1b140:	ldr	r8, [r5, #28]
   1b144:	str	r3, [r5, #20]
   1b148:	b	1ad48 <argp_parse@@Base+0x2624>
   1b14c:	add	r7, r6, #1
   1b150:	b	1b174 <argp_parse@@Base+0x2a50>
   1b154:	bl	11394 <__ctype_b_loc@plt>
   1b158:	ldrb	r3, [r7]
   1b15c:	add	r7, r7, #1
   1b160:	ldr	r1, [r0]
   1b164:	lsl	r3, r3, #1
   1b168:	ldrh	r3, [r1, r3]
   1b16c:	tst	r3, #1
   1b170:	bne	1b05c <argp_parse@@Base+0x2938>
   1b174:	cmp	fp, r7
   1b178:	mov	r6, r7
   1b17c:	bne	1b154 <argp_parse@@Base+0x2a30>
   1b180:	b	1b04c <argp_parse@@Base+0x2928>
   1b184:	add	r1, r9, r6
   1b188:	sub	r7, r7, r1
   1b18c:	str	r1, [r5, #20]
   1b190:	add	r8, r8, r7
   1b194:	ldr	r3, [r5, #24]
   1b198:	str	r8, [r5, #28]
   1b19c:	b	1afac <argp_parse@@Base+0x2888>
   1b1a0:	sub	r8, r8, r7
   1b1a4:	mov	r1, r7
   1b1a8:	mov	r2, r8
   1b1ac:	add	r0, r6, sl
   1b1b0:	bl	11220 <memmove@plt>
   1b1b4:	ldr	r3, [r5, #12]
   1b1b8:	mov	r2, r6
   1b1bc:	mov	r1, #10
   1b1c0:	mov	fp, r4
   1b1c4:	strb	r1, [r2], #1
   1b1c8:	add	r7, r3, #1
   1b1cc:	add	r7, r6, r7
   1b1d0:	add	r9, r7, r8
   1b1d4:	sub	r8, r7, r4
   1b1d8:	sub	r9, r9, r4
   1b1dc:	mov	r4, r2
   1b1e0:	b	1af30 <argp_parse@@Base+0x280c>
   1b1e4:	mov	r0, r3
   1b1e8:	mov	r1, #10
   1b1ec:	bl	1146c <__overflow@plt>
   1b1f0:	b	1af18 <argp_parse@@Base+0x27f4>
   1b1f4:	str	r1, [r5, #20]
   1b1f8:	ldr	r3, [r5, #24]
   1b1fc:	ldr	r8, [r5, #28]
   1b200:	b	1afac <argp_parse@@Base+0x2888>
   1b204:	str	r4, [sp, #-8]!
   1b208:	mov	r4, r0
   1b20c:	str	lr, [sp, #4]
   1b210:	bl	1aca4 <argp_parse@@Base+0x2580>
   1b214:	ldr	r0, [r4, #24]
   1b218:	ldr	r2, [r4, #28]
   1b21c:	cmp	r2, r0
   1b220:	bls	1b238 <argp_parse@@Base+0x2b14>
   1b224:	sub	r2, r2, r0
   1b228:	mov	r1, #1
   1b22c:	ldr	r3, [r4]
   1b230:	bl	11280 <fwrite_unlocked@plt>
   1b234:	ldr	r0, [r4, #24]
   1b238:	bl	1975c <argp_parse@@Base+0x1038>
   1b23c:	mov	r0, r4
   1b240:	ldr	r4, [sp]
   1b244:	ldr	lr, [sp, #4]
   1b248:	add	sp, sp, #8
   1b24c:	b	1975c <argp_parse@@Base+0x1038>
   1b250:	strd	r4, [sp, #-16]!
   1b254:	mov	r4, r0
   1b258:	mov	r5, r1
   1b25c:	str	r6, [sp, #8]
   1b260:	str	lr, [sp, #12]
   1b264:	bl	1aca4 <argp_parse@@Base+0x2580>
   1b268:	mov	r1, #1
   1b26c:	ldr	r3, [r4]
   1b270:	ldr	r2, [r4, #24]
   1b274:	ldr	ip, [r4, #28]
   1b278:	mov	r0, r2
   1b27c:	sub	r2, ip, r2
   1b280:	bl	11280 <fwrite_unlocked@plt>
   1b284:	mov	ip, r0
   1b288:	ldr	r0, [r4, #24]
   1b28c:	ldr	r3, [r4, #28]
   1b290:	sub	r2, r3, r0
   1b294:	cmp	ip, r2
   1b298:	bne	1b2f8 <argp_parse@@Base+0x2bd4>
   1b29c:	ldr	r1, [r4, #32]
   1b2a0:	mov	r3, #0
   1b2a4:	str	r3, [r4, #16]
   1b2a8:	str	r0, [r4, #28]
   1b2ac:	sub	r1, r1, r0
   1b2b0:	cmp	r1, r5
   1b2b4:	movcs	r3, #1
   1b2b8:	bcs	1b2e4 <argp_parse@@Base+0x2bc0>
   1b2bc:	adds	r5, r1, r5
   1b2c0:	bcs	1b320 <argp_parse@@Base+0x2bfc>
   1b2c4:	mov	r1, r5
   1b2c8:	bl	1abb4 <argp_parse@@Base+0x2490>
   1b2cc:	cmp	r0, #0
   1b2d0:	beq	1b320 <argp_parse@@Base+0x2bfc>
   1b2d4:	add	r1, r0, r5
   1b2d8:	mov	r3, #1
   1b2dc:	str	r0, [r4, #24]
   1b2e0:	strd	r0, [r4, #28]
   1b2e4:	ldrd	r4, [sp]
   1b2e8:	mov	r0, r3
   1b2ec:	ldr	r6, [sp, #8]
   1b2f0:	add	sp, sp, #12
   1b2f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2f8:	ldr	lr, [r4, #16]
   1b2fc:	sub	r3, r3, ip
   1b300:	add	r1, r0, ip
   1b304:	sub	r2, r3, r0
   1b308:	str	r3, [r4, #28]
   1b30c:	sub	ip, lr, ip
   1b310:	str	ip, [r4, #16]
   1b314:	bl	11220 <memmove@plt>
   1b318:	mov	r3, #0
   1b31c:	b	1b2e4 <argp_parse@@Base+0x2bc0>
   1b320:	bl	113dc <__errno_location@plt>
   1b324:	mov	r2, #12
   1b328:	mov	r3, #0
   1b32c:	str	r2, [r0]
   1b330:	b	1b2e4 <argp_parse@@Base+0x2bc0>
   1b334:	ldr	ip, [r0, #28]
   1b338:	ldr	r3, [r0, #32]
   1b33c:	sub	r3, r3, ip
   1b340:	cmp	r3, r1
   1b344:	bcc	1b350 <argp_parse@@Base+0x2c2c>
   1b348:	mov	r0, #1
   1b34c:	bx	lr
   1b350:	b	1b250 <argp_parse@@Base+0x2b2c>
   1b354:	push	{r1, r2, r3}
   1b358:	mov	r1, #150	; 0x96
   1b35c:	strd	r4, [sp, #-20]!	; 0xffffffec
   1b360:	mov	r5, r0
   1b364:	strd	r6, [sp, #8]
   1b368:	str	lr, [sp, #16]
   1b36c:	sub	sp, sp, #8
   1b370:	ldr	r7, [sp, #28]
   1b374:	add	r6, sp, #32
   1b378:	ldr	r0, [r5, #28]
   1b37c:	ldr	r3, [r5, #32]
   1b380:	sub	r2, r3, r0
   1b384:	cmp	r1, r2
   1b388:	bhi	1b3d8 <argp_parse@@Base+0x2cb4>
   1b38c:	sub	r4, r3, r0
   1b390:	mov	r2, r7
   1b394:	str	r6, [sp, #4]
   1b398:	mov	r1, r4
   1b39c:	mov	r3, r6
   1b3a0:	bl	114c0 <vsnprintf@plt>
   1b3a4:	cmp	r0, r4
   1b3a8:	add	r1, r0, #1
   1b3ac:	bcs	1b378 <argp_parse@@Base+0x2c54>
   1b3b0:	ldr	r3, [r5, #28]
   1b3b4:	add	r3, r3, r0
   1b3b8:	str	r3, [r5, #28]
   1b3bc:	add	sp, sp, #8
   1b3c0:	ldrd	r4, [sp]
   1b3c4:	ldrd	r6, [sp, #8]
   1b3c8:	ldr	lr, [sp, #16]
   1b3cc:	add	sp, sp, #20
   1b3d0:	add	sp, sp, #12
   1b3d4:	bx	lr
   1b3d8:	mov	r0, r5
   1b3dc:	bl	1b250 <argp_parse@@Base+0x2b2c>
   1b3e0:	cmp	r0, #0
   1b3e4:	beq	1b3f4 <argp_parse@@Base+0x2cd0>
   1b3e8:	ldr	r0, [r5, #28]
   1b3ec:	ldr	r3, [r5, #32]
   1b3f0:	b	1b38c <argp_parse@@Base+0x2c68>
   1b3f4:	mvn	r0, #0
   1b3f8:	b	1b3bc <argp_parse@@Base+0x2c98>
   1b3fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b400:	ldr	r2, [r1]
   1b404:	ldr	ip, [r1, #32]
   1b408:	strd	r6, [sp, #8]
   1b40c:	strd	r8, [sp, #16]
   1b410:	strd	sl, [sp, #24]
   1b414:	str	lr, [sp, #32]
   1b418:	sub	sp, sp, #36	; 0x24
   1b41c:	str	r2, [sp, #24]
   1b420:	str	r1, [sp, #28]
   1b424:	ldr	r1, [r1, #28]
   1b428:	cmp	r1, ip
   1b42c:	cmplt	ip, r2
   1b430:	str	r1, [sp, #20]
   1b434:	bge	1b534 <argp_parse@@Base+0x2e10>
   1b438:	mov	r3, r1
   1b43c:	lsl	r1, ip, #2
   1b440:	mov	lr, r2
   1b444:	mov	r2, r1
   1b448:	add	r2, r2, #8
   1b44c:	str	r1, [sp, #8]
   1b450:	add	r1, r0, r1
   1b454:	str	r1, [sp, #4]
   1b458:	str	r2, [sp, #12]
   1b45c:	sub	r2, r1, #8
   1b460:	str	r2, [sp, #16]
   1b464:	sub	r1, lr, ip
   1b468:	sub	r8, ip, r3
   1b46c:	cmp	r1, r8
   1b470:	ble	1b56c <argp_parse@@Base+0x2e48>
   1b474:	lsl	r2, r3, #2
   1b478:	sub	lr, lr, r8
   1b47c:	sub	r5, r8, #1
   1b480:	add	r1, lr, #2
   1b484:	lsl	r6, lr, #2
   1b488:	cmp	r2, r1, lsl #2
   1b48c:	add	r7, r2, #8
   1b490:	add	r2, r0, r2
   1b494:	add	r1, r0, r6
   1b498:	movge	r4, #1
   1b49c:	movlt	r4, #0
   1b4a0:	cmp	r6, r7
   1b4a4:	orrge	r4, r4, #1
   1b4a8:	orr	r9, r1, r2
   1b4ac:	cmp	r5, #3
   1b4b0:	movls	r4, #0
   1b4b4:	andhi	r4, r4, #1
   1b4b8:	tst	r9, #7
   1b4bc:	movne	r4, #0
   1b4c0:	cmp	r4, #0
   1b4c4:	beq	1b640 <argp_parse@@Base+0x2f1c>
   1b4c8:	lsr	fp, r8, #1
   1b4cc:	sub	r2, r2, #8
   1b4d0:	sub	sl, r1, #8
   1b4d4:	mov	r9, r2
   1b4d8:	add	fp, r1, fp, lsl #3
   1b4dc:	ldrd	r4, [r2, #8]!
   1b4e0:	ldrd	r6, [sl, #8]!
   1b4e4:	strd	r6, [r9, #8]!
   1b4e8:	strd	r4, [r1], #8
   1b4ec:	cmp	r1, fp
   1b4f0:	bne	1b4dc <argp_parse@@Base+0x2db8>
   1b4f4:	bic	r2, r8, #1
   1b4f8:	cmp	r8, r2
   1b4fc:	beq	1b518 <argp_parse@@Base+0x2df4>
   1b500:	add	r1, r3, r2
   1b504:	add	r2, lr, r2
   1b508:	ldr	r4, [r0, r1, lsl #2]
   1b50c:	ldr	r5, [r0, r2, lsl #2]
   1b510:	str	r5, [r0, r1, lsl #2]
   1b514:	str	r4, [r0, r2, lsl #2]
   1b518:	cmp	lr, ip
   1b51c:	movle	r2, #0
   1b520:	movgt	r2, #1
   1b524:	cmp	r3, ip
   1b528:	movge	r2, #0
   1b52c:	cmp	r2, #0
   1b530:	bne	1b464 <argp_parse@@Base+0x2d40>
   1b534:	ldr	r3, [sp, #24]
   1b538:	ldr	r2, [sp, #28]
   1b53c:	sub	ip, r3, ip
   1b540:	str	r3, [r2, #32]
   1b544:	ldr	r3, [sp, #20]
   1b548:	add	ip, ip, r3
   1b54c:	str	ip, [r2, #28]
   1b550:	add	sp, sp, #36	; 0x24
   1b554:	ldrd	r4, [sp]
   1b558:	ldrd	r6, [sp, #8]
   1b55c:	ldrd	r8, [sp, #16]
   1b560:	ldrd	sl, [sp, #24]
   1b564:	add	sp, sp, #32
   1b568:	pop	{pc}		; (ldr pc, [sp], #4)
   1b56c:	ldr	r4, [sp, #8]
   1b570:	lsl	r5, r3, #2
   1b574:	sub	r7, r1, #1
   1b578:	ldr	r8, [sp, #12]
   1b57c:	mov	r6, r5
   1b580:	add	r5, r5, #8
   1b584:	add	r2, r0, r6
   1b588:	cmp	r8, r6
   1b58c:	cmpgt	r5, r4
   1b590:	ldr	r8, [sp, #4]
   1b594:	movle	r5, #1
   1b598:	movgt	r5, #0
   1b59c:	cmp	r7, #3
   1b5a0:	movls	r4, #0
   1b5a4:	andhi	r4, r5, #1
   1b5a8:	orr	r6, r2, r8
   1b5ac:	tst	r6, #7
   1b5b0:	movne	r4, #0
   1b5b4:	cmp	r4, #0
   1b5b8:	beq	1b618 <argp_parse@@Base+0x2ef4>
   1b5bc:	lsr	fp, r1, #1
   1b5c0:	ldr	sl, [sp, #16]
   1b5c4:	sub	r2, r2, #8
   1b5c8:	mov	r9, r2
   1b5cc:	add	fp, r8, fp, lsl #3
   1b5d0:	ldrd	r4, [r2, #8]!
   1b5d4:	ldrd	r6, [sl, #8]!
   1b5d8:	strd	r6, [r9, #8]!
   1b5dc:	strd	r4, [r8], #8
   1b5e0:	cmp	r8, fp
   1b5e4:	bne	1b5d0 <argp_parse@@Base+0x2eac>
   1b5e8:	bic	r2, r1, #1
   1b5ec:	cmp	r1, r2
   1b5f0:	addeq	r3, r1, r3
   1b5f4:	beq	1b518 <argp_parse@@Base+0x2df4>
   1b5f8:	add	r4, r3, r2
   1b5fc:	add	r2, ip, r2
   1b600:	ldr	r5, [r0, r4, lsl #2]
   1b604:	add	r3, r1, r3
   1b608:	ldr	r6, [r0, r2, lsl #2]
   1b60c:	str	r6, [r0, r4, lsl #2]
   1b610:	str	r5, [r0, r2, lsl #2]
   1b614:	b	1b518 <argp_parse@@Base+0x2df4>
   1b618:	add	r3, r1, r3
   1b61c:	ldr	r1, [sp, #4]
   1b620:	add	r6, r0, r3, lsl #2
   1b624:	ldr	r5, [r1]
   1b628:	ldr	r4, [r2]
   1b62c:	str	r5, [r2], #4
   1b630:	cmp	r2, r6
   1b634:	str	r4, [r1], #4
   1b638:	bne	1b624 <argp_parse@@Base+0x2f00>
   1b63c:	b	1b518 <argp_parse@@Base+0x2df4>
   1b640:	add	r8, r3, r8
   1b644:	add	r8, r0, r8, lsl #2
   1b648:	ldr	r5, [r1]
   1b64c:	ldr	r4, [r2]
   1b650:	str	r5, [r2], #4
   1b654:	cmp	r8, r2
   1b658:	str	r4, [r1], #4
   1b65c:	bne	1b648 <argp_parse@@Base+0x2f24>
   1b660:	b	1b518 <argp_parse@@Base+0x2df4>
   1b664:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b668:	strd	r6, [sp, #8]
   1b66c:	strd	r8, [sp, #16]
   1b670:	strd	sl, [sp, #24]
   1b674:	str	lr, [sp, #32]
   1b678:	sub	sp, sp, #52	; 0x34
   1b67c:	str	r3, [sp, #8]
   1b680:	ldr	r3, [sp, #96]	; 0x60
   1b684:	str	r1, [sp, #20]
   1b688:	str	r2, [sp, #28]
   1b68c:	str	r0, [sp, #32]
   1b690:	ldr	r9, [r3, #20]
   1b694:	ldrb	r5, [r9]
   1b698:	mov	r8, r9
   1b69c:	str	r9, [sp, #24]
   1b6a0:	cmp	r5, #61	; 0x3d
   1b6a4:	cmpne	r5, #0
   1b6a8:	movne	r5, #1
   1b6ac:	moveq	r5, #0
   1b6b0:	beq	1b6c8 <argp_parse@@Base+0x2fa4>
   1b6b4:	ldrb	r3, [r8, #1]!
   1b6b8:	cmp	r3, #0
   1b6bc:	cmpne	r3, #61	; 0x3d
   1b6c0:	bne	1b6b4 <argp_parse@@Base+0x2f90>
   1b6c4:	sub	r5, r8, r9
   1b6c8:	ldr	r3, [sp, #8]
   1b6cc:	ldr	r3, [r3]
   1b6d0:	cmp	r3, #0
   1b6d4:	str	r3, [sp, #12]
   1b6d8:	beq	1b8cc <argp_parse@@Base+0x31a8>
   1b6dc:	ldr	fp, [sp, #8]
   1b6e0:	mov	r4, r3
   1b6e4:	mov	r6, #0
   1b6e8:	str	fp, [sp, #16]
   1b6ec:	b	1b6f4 <argp_parse@@Base+0x2fd0>
   1b6f0:	mov	r6, r7
   1b6f4:	mov	r2, r5
   1b6f8:	mov	r1, r9
   1b6fc:	mov	r0, r4
   1b700:	add	r7, r6, #1
   1b704:	bl	11508 <strncmp@plt>
   1b708:	cmp	r0, #0
   1b70c:	mov	sl, fp
   1b710:	mov	r0, r4
   1b714:	bne	1b724 <argp_parse@@Base+0x3000>
   1b718:	bl	113b8 <strlen@plt>
   1b71c:	cmp	r0, r5
   1b720:	beq	1b844 <argp_parse@@Base+0x3120>
   1b724:	ldr	r4, [fp, #16]!
   1b728:	cmp	r4, #0
   1b72c:	bne	1b6f0 <argp_parse@@Base+0x2fcc>
   1b730:	ldr	r3, [sp, #100]	; 0x64
   1b734:	cmp	r3, #0
   1b738:	ldr	r3, [sp, #92]	; 0x5c
   1b73c:	beq	1b7d8 <argp_parse@@Base+0x30b4>
   1b740:	cmp	r3, #0
   1b744:	bne	1b944 <argp_parse@@Base+0x3220>
   1b748:	ldr	r0, [sp, #12]
   1b74c:	mov	r9, r3
   1b750:	mov	sl, r3
   1b754:	mov	fp, #1
   1b758:	str	r3, [sp, #40]	; 0x28
   1b75c:	ldr	r1, [sp, #24]
   1b760:	str	r7, [sp, #24]
   1b764:	mov	r7, r5
   1b768:	ldr	r5, [sp, #16]
   1b76c:	str	r6, [sp, #16]
   1b770:	ldr	r6, [sp, #96]	; 0x60
   1b774:	str	r3, [sp, #44]	; 0x2c
   1b778:	mvn	r3, #0
   1b77c:	str	r3, [sp, #36]	; 0x24
   1b780:	mov	r2, r7
   1b784:	bl	11508 <strncmp@plt>
   1b788:	cmp	r0, #0
   1b78c:	bne	1b7c0 <argp_parse@@Base+0x309c>
   1b790:	cmp	sl, #0
   1b794:	beq	1bb28 <argp_parse@@Base+0x3404>
   1b798:	ldr	r2, [r5, #4]
   1b79c:	ldr	r1, [sl, #4]
   1b7a0:	cmp	r1, r2
   1b7a4:	beq	1bc48 <argp_parse@@Base+0x3524>
   1b7a8:	ldr	r3, [sp, #40]	; 0x28
   1b7ac:	cmp	r3, #0
   1b7b0:	bne	1b7c0 <argp_parse@@Base+0x309c>
   1b7b4:	cmp	r4, #0
   1b7b8:	beq	1bbc0 <argp_parse@@Base+0x349c>
   1b7bc:	strb	fp, [r4, r9]
   1b7c0:	ldr	r0, [r5, #16]!
   1b7c4:	add	r9, r9, #1
   1b7c8:	cmp	r0, #0
   1b7cc:	beq	1ba58 <argp_parse@@Base+0x3334>
   1b7d0:	ldr	r1, [r6, #20]
   1b7d4:	b	1b780 <argp_parse@@Base+0x305c>
   1b7d8:	cmp	r3, #0
   1b7dc:	beq	1b9bc <argp_parse@@Base+0x3298>
   1b7e0:	ldr	r0, [sp, #12]
   1b7e4:	mvn	r3, #0
   1b7e8:	ldr	r6, [sp, #100]	; 0x64
   1b7ec:	str	r3, [sp, #36]	; 0x24
   1b7f0:	ldr	sl, [sp, #16]
   1b7f4:	mov	r7, r6
   1b7f8:	mov	r2, r5
   1b7fc:	mov	r1, r9
   1b800:	bl	11508 <strncmp@plt>
   1b804:	cmp	r0, #0
   1b808:	bne	1b81c <argp_parse@@Base+0x30f8>
   1b80c:	cmp	r4, #0
   1b810:	moveq	r4, sl
   1b814:	movne	r6, #1
   1b818:	streq	r7, [sp, #36]	; 0x24
   1b81c:	ldr	r0, [sl, #16]!
   1b820:	add	r7, r7, #1
   1b824:	cmp	r0, #0
   1b828:	bne	1b7f8 <argp_parse@@Base+0x30d4>
   1b82c:	cmp	r6, #0
   1b830:	moveq	sl, r4
   1b834:	bne	1bac0 <argp_parse@@Base+0x339c>
   1b838:	cmp	sl, #0
   1b83c:	ldrne	r6, [sp, #36]	; 0x24
   1b840:	beq	1b8cc <argp_parse@@Base+0x31a8>
   1b844:	ldr	r3, [sp, #96]	; 0x60
   1b848:	mov	r2, #0
   1b84c:	ldr	r1, [sp, #96]	; 0x60
   1b850:	ldr	r0, [sl, #4]
   1b854:	ldr	r3, [r3]
   1b858:	str	r2, [r1, #20]
   1b85c:	add	r2, r3, #1
   1b860:	str	r2, [r1]
   1b864:	ldrb	r1, [r8]
   1b868:	cmp	r1, #0
   1b86c:	bne	1b8b4 <argp_parse@@Base+0x3190>
   1b870:	cmp	r0, #1
   1b874:	beq	1baf4 <argp_parse@@Base+0x33d0>
   1b878:	ldr	r3, [sp, #88]	; 0x58
   1b87c:	cmp	r3, #0
   1b880:	strne	r6, [r3]
   1b884:	ldr	r3, [sl, #8]
   1b888:	ldr	r0, [sl, #12]
   1b88c:	cmp	r3, #0
   1b890:	strne	r0, [r3]
   1b894:	movne	r0, #0
   1b898:	add	sp, sp, #52	; 0x34
   1b89c:	ldrd	r4, [sp]
   1b8a0:	ldrd	r6, [sp, #8]
   1b8a4:	ldrd	r8, [sp, #16]
   1b8a8:	ldrd	sl, [sp, #24]
   1b8ac:	add	sp, sp, #32
   1b8b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8b4:	cmp	r0, #0
   1b8b8:	beq	1bb34 <argp_parse@@Base+0x3410>
   1b8bc:	ldr	r3, [sp, #96]	; 0x60
   1b8c0:	add	r8, r8, #1
   1b8c4:	str	r8, [r3, #12]
   1b8c8:	b	1b878 <argp_parse@@Base+0x3154>
   1b8cc:	ldr	r3, [sp, #92]	; 0x5c
   1b8d0:	cmp	r3, #0
   1b8d4:	beq	1b910 <argp_parse@@Base+0x31ec>
   1b8d8:	ldr	r2, [sp, #20]
   1b8dc:	ldr	r3, [sp, #96]	; 0x60
   1b8e0:	ldr	r3, [r3]
   1b8e4:	ldr	r3, [r2, r3, lsl #2]
   1b8e8:	ldrb	r3, [r3, #1]
   1b8ec:	cmp	r3, #45	; 0x2d
   1b8f0:	beq	1b910 <argp_parse@@Base+0x31ec>
   1b8f4:	ldr	r0, [sp, #28]
   1b8f8:	ldr	r3, [sp, #96]	; 0x60
   1b8fc:	ldr	r3, [r3, #20]
   1b900:	ldrb	r1, [r3]
   1b904:	bl	113c4 <strchr@plt>
   1b908:	cmp	r0, #0
   1b90c:	bne	1bb84 <argp_parse@@Base+0x3460>
   1b910:	ldr	r3, [sp, #100]	; 0x64
   1b914:	cmp	r3, #0
   1b918:	bne	1ba24 <argp_parse@@Base+0x3300>
   1b91c:	ldr	r3, [sp, #96]	; 0x60
   1b920:	mov	r2, #0
   1b924:	mov	r0, #63	; 0x3f
   1b928:	ldr	r1, [sp, #96]	; 0x60
   1b92c:	ldr	r3, [r3]
   1b930:	str	r2, [r1, #8]
   1b934:	str	r2, [r1, #20]
   1b938:	add	r3, r3, #1
   1b93c:	str	r3, [r1]
   1b940:	b	1b898 <argp_parse@@Base+0x3174>
   1b944:	ldr	r0, [sp, #12]
   1b948:	mvn	r3, #0
   1b94c:	mov	sl, r4
   1b950:	mov	r9, r4
   1b954:	ldr	fp, [sp, #16]
   1b958:	str	r3, [sp, #36]	; 0x24
   1b95c:	ldr	r1, [sp, #24]
   1b960:	str	r7, [sp, #24]
   1b964:	ldr	r7, [sp, #96]	; 0x60
   1b968:	str	r4, [sp, #40]	; 0x28
   1b96c:	str	r4, [sp, #44]	; 0x2c
   1b970:	mov	r2, r5
   1b974:	bl	11508 <strncmp@plt>
   1b978:	cmp	r0, #0
   1b97c:	bne	1b9a4 <argp_parse@@Base+0x3280>
   1b980:	cmp	sl, #0
   1b984:	beq	1bb1c <argp_parse@@Base+0x33f8>
   1b988:	ldr	r3, [sp, #40]	; 0x28
   1b98c:	cmp	r3, #0
   1b990:	bne	1b9a4 <argp_parse@@Base+0x3280>
   1b994:	cmp	r4, #0
   1b998:	beq	1bb8c <argp_parse@@Base+0x3468>
   1b99c:	mov	r3, #1
   1b9a0:	strb	r3, [r4, r9]
   1b9a4:	ldr	r0, [fp, #16]!
   1b9a8:	add	r9, r9, #1
   1b9ac:	cmp	r0, #0
   1b9b0:	beq	1ba5c <argp_parse@@Base+0x3338>
   1b9b4:	ldr	r1, [r7, #20]
   1b9b8:	b	1b970 <argp_parse@@Base+0x324c>
   1b9bc:	mov	r6, r3
   1b9c0:	mov	r7, r3
   1b9c4:	ldr	r0, [sp, #12]
   1b9c8:	mvn	r3, #0
   1b9cc:	ldr	sl, [sp, #16]
   1b9d0:	str	r3, [sp, #36]	; 0x24
   1b9d4:	b	1b9fc <argp_parse@@Base+0x32d8>
   1b9d8:	ldr	r2, [r4, #4]
   1b9dc:	ldr	r3, [sl, #4]
   1b9e0:	cmp	r2, r3
   1b9e4:	beq	1bc24 <argp_parse@@Base+0x3500>
   1b9e8:	mov	r6, #1
   1b9ec:	ldr	r0, [sl, #16]!
   1b9f0:	add	r7, r7, #1
   1b9f4:	cmp	r0, #0
   1b9f8:	beq	1b82c <argp_parse@@Base+0x3108>
   1b9fc:	mov	r2, r5
   1ba00:	mov	r1, r9
   1ba04:	bl	11508 <strncmp@plt>
   1ba08:	cmp	r0, #0
   1ba0c:	bne	1b9ec <argp_parse@@Base+0x32c8>
   1ba10:	cmp	r4, #0
   1ba14:	bne	1b9d8 <argp_parse@@Base+0x32b4>
   1ba18:	mov	r4, sl
   1ba1c:	str	r7, [sp, #36]	; 0x24
   1ba20:	b	1b9ec <argp_parse@@Base+0x32c8>
   1ba24:	ldr	r3, [sp, #96]	; 0x60
   1ba28:	movw	r0, #58448	; 0xe450
   1ba2c:	movt	r0, #2
   1ba30:	movw	r1, #55556	; 0xd904
   1ba34:	movt	r1, #1
   1ba38:	ldr	r0, [r0]
   1ba3c:	ldr	ip, [r3, #20]
   1ba40:	ldr	r3, [sp, #20]
   1ba44:	ldr	r2, [r3]
   1ba48:	str	ip, [sp]
   1ba4c:	ldr	r3, [sp, #104]	; 0x68
   1ba50:	bl	113d0 <fprintf@plt>
   1ba54:	b	1b91c <argp_parse@@Base+0x31f8>
   1ba58:	ldr	r6, [sp, #16]
   1ba5c:	ldr	r3, [sp, #40]	; 0x28
   1ba60:	orrs	r3, r4, r3
   1ba64:	beq	1b838 <argp_parse@@Base+0x3114>
   1ba68:	ldr	r3, [sp, #40]	; 0x28
   1ba6c:	movw	r5, #58448	; 0xe450
   1ba70:	movt	r5, #2
   1ba74:	ldr	r0, [r5]
   1ba78:	cmp	r3, #0
   1ba7c:	beq	1bc6c <argp_parse@@Base+0x3548>
   1ba80:	ldr	r2, [sp, #20]
   1ba84:	movw	r1, #55468	; 0xd8ac
   1ba88:	movt	r1, #1
   1ba8c:	ldr	r3, [sp, #96]	; 0x60
   1ba90:	ldr	r2, [r2]
   1ba94:	ldr	ip, [r3, #20]
   1ba98:	ldr	r3, [sp, #104]	; 0x68
   1ba9c:	str	ip, [sp]
   1baa0:	bl	113d0 <fprintf@plt>
   1baa4:	ldr	r3, [sp, #44]	; 0x2c
   1baa8:	cmp	r3, #0
   1baac:	beq	1bab8 <argp_parse@@Base+0x3394>
   1bab0:	mov	r0, r4
   1bab4:	bl	1975c <argp_parse@@Base+0x1038>
   1bab8:	ldr	r3, [sp, #96]	; 0x60
   1babc:	ldr	r9, [r3, #20]
   1bac0:	mov	r0, r9
   1bac4:	bl	113b8 <strlen@plt>
   1bac8:	ldr	r3, [sp, #96]	; 0x60
   1bacc:	add	r9, r9, r0
   1bad0:	mov	r2, #0
   1bad4:	mov	r0, #63	; 0x3f
   1bad8:	ldr	r1, [sp, #96]	; 0x60
   1badc:	ldr	r3, [r3]
   1bae0:	str	r2, [r1, #8]
   1bae4:	str	r9, [r1, #20]
   1bae8:	add	r3, r3, #1
   1baec:	str	r3, [r1]
   1baf0:	b	1b898 <argp_parse@@Base+0x3174>
   1baf4:	ldr	r1, [sp, #32]
   1baf8:	cmp	r2, r1
   1bafc:	bge	1bbf4 <argp_parse@@Base+0x34d0>
   1bb00:	ldr	r1, [sp, #20]
   1bb04:	add	r3, r3, #2
   1bb08:	ldr	r2, [r1, r2, lsl #2]
   1bb0c:	ldr	r1, [sp, #96]	; 0x60
   1bb10:	str	r3, [r1]
   1bb14:	str	r2, [r1, #12]
   1bb18:	b	1b878 <argp_parse@@Base+0x3154>
   1bb1c:	mov	sl, fp
   1bb20:	str	r9, [sp, #36]	; 0x24
   1bb24:	b	1b9a4 <argp_parse@@Base+0x3280>
   1bb28:	mov	sl, r5
   1bb2c:	str	r9, [sp, #36]	; 0x24
   1bb30:	b	1b7c0 <argp_parse@@Base+0x309c>
   1bb34:	ldr	r3, [sp, #100]	; 0x64
   1bb38:	cmp	r3, #0
   1bb3c:	bne	1bb54 <argp_parse@@Base+0x3430>
   1bb40:	ldr	r3, [sl, #12]
   1bb44:	mov	r0, #63	; 0x3f
   1bb48:	ldr	r2, [sp, #96]	; 0x60
   1bb4c:	str	r3, [r2, #8]
   1bb50:	b	1b898 <argp_parse@@Base+0x3174>
   1bb54:	ldr	ip, [sl]
   1bb58:	movw	r0, #58448	; 0xe450
   1bb5c:	movt	r0, #2
   1bb60:	movw	r1, #55588	; 0xd924
   1bb64:	movt	r1, #1
   1bb68:	ldr	r3, [sp, #20]
   1bb6c:	ldr	r0, [r0]
   1bb70:	ldr	r2, [r3]
   1bb74:	str	ip, [sp]
   1bb78:	ldr	r3, [sp, #104]	; 0x68
   1bb7c:	bl	113d0 <fprintf@plt>
   1bb80:	b	1bb40 <argp_parse@@Base+0x341c>
   1bb84:	mvn	r0, #0
   1bb88:	b	1b898 <argp_parse@@Base+0x3174>
   1bb8c:	ldr	r0, [sp, #24]
   1bb90:	bl	1ab78 <argp_parse@@Base+0x2454>
   1bb94:	subs	r4, r0, #0
   1bb98:	beq	1bd30 <argp_parse@@Base+0x360c>
   1bb9c:	ldr	r2, [sp, #24]
   1bba0:	ldr	r1, [sp, #40]	; 0x28
   1bba4:	bl	1140c <memset@plt>
   1bba8:	mov	r3, #1
   1bbac:	mov	r2, #1
   1bbb0:	str	r3, [sp, #44]	; 0x2c
   1bbb4:	ldr	r3, [sp, #36]	; 0x24
   1bbb8:	strb	r2, [r4, r3]
   1bbbc:	b	1b99c <argp_parse@@Base+0x3278>
   1bbc0:	ldr	r0, [sp, #24]
   1bbc4:	bl	1ab78 <argp_parse@@Base+0x2454>
   1bbc8:	subs	r4, r0, #0
   1bbcc:	mov	r3, #1
   1bbd0:	streq	r3, [sp, #40]	; 0x28
   1bbd4:	beq	1b7c0 <argp_parse@@Base+0x309c>
   1bbd8:	ldr	r2, [sp, #24]
   1bbdc:	str	r3, [sp, #44]	; 0x2c
   1bbe0:	ldr	r1, [sp, #40]	; 0x28
   1bbe4:	bl	1140c <memset@plt>
   1bbe8:	ldr	r3, [sp, #36]	; 0x24
   1bbec:	strb	fp, [r4, r3]
   1bbf0:	b	1b7bc <argp_parse@@Base+0x3098>
   1bbf4:	ldr	r3, [sp, #100]	; 0x64
   1bbf8:	cmp	r3, #0
   1bbfc:	bne	1bd00 <argp_parse@@Base+0x35dc>
   1bc00:	ldr	r3, [sl, #12]
   1bc04:	ldr	r2, [sp, #96]	; 0x60
   1bc08:	str	r3, [r2, #8]
   1bc0c:	ldr	r3, [sp, #28]
   1bc10:	ldrb	r3, [r3]
   1bc14:	cmp	r3, #58	; 0x3a
   1bc18:	moveq	r0, #58	; 0x3a
   1bc1c:	movne	r0, #63	; 0x3f
   1bc20:	b	1b898 <argp_parse@@Base+0x3174>
   1bc24:	ldr	r2, [r4, #8]
   1bc28:	ldr	r3, [sl, #8]
   1bc2c:	cmp	r2, r3
   1bc30:	bne	1b9e8 <argp_parse@@Base+0x32c4>
   1bc34:	ldr	r2, [r4, #12]
   1bc38:	ldr	r3, [sl, #12]
   1bc3c:	cmp	r2, r3
   1bc40:	movne	r6, #1
   1bc44:	b	1b9ec <argp_parse@@Base+0x32c8>
   1bc48:	ldr	r2, [r5, #8]
   1bc4c:	ldr	r1, [sl, #8]
   1bc50:	cmp	r1, r2
   1bc54:	bne	1b7a8 <argp_parse@@Base+0x3084>
   1bc58:	ldr	r2, [r5, #12]
   1bc5c:	ldr	r1, [sl, #12]
   1bc60:	cmp	r1, r2
   1bc64:	bne	1b7a8 <argp_parse@@Base+0x3084>
   1bc68:	b	1b7c0 <argp_parse@@Base+0x309c>
   1bc6c:	bl	114b4 <flockfile@plt>
   1bc70:	ldr	r2, [sp, #20]
   1bc74:	movw	r1, #55500	; 0xd8cc
   1bc78:	movt	r1, #1
   1bc7c:	movw	r7, #55548	; 0xd8fc
   1bc80:	movt	r7, #1
   1bc84:	ldr	r3, [sp, #96]	; 0x60
   1bc88:	add	r6, r4, r6
   1bc8c:	sub	r8, r4, #1
   1bc90:	ldr	r2, [r2]
   1bc94:	ldr	r0, [r3, #20]
   1bc98:	ldr	r3, [sp, #104]	; 0x68
   1bc9c:	str	r0, [sp]
   1bca0:	ldr	r0, [r5]
   1bca4:	bl	113d0 <fprintf@plt>
   1bca8:	ldr	r0, [r5]
   1bcac:	ldr	sl, [sp, #8]
   1bcb0:	ldr	r9, [sp, #40]	; 0x28
   1bcb4:	b	1bcc4 <argp_parse@@Base+0x35a0>
   1bcb8:	cmp	r6, r8
   1bcbc:	add	r9, r9, #1
   1bcc0:	beq	1bce8 <argp_parse@@Base+0x35c4>
   1bcc4:	ldrb	r3, [r8, #1]!
   1bcc8:	cmp	r3, #0
   1bccc:	beq	1bcb8 <argp_parse@@Base+0x3594>
   1bcd0:	mov	r1, r7
   1bcd4:	ldr	r3, [sl, r9, lsl #4]
   1bcd8:	ldr	r2, [sp, #104]	; 0x68
   1bcdc:	bl	113d0 <fprintf@plt>
   1bce0:	ldr	r0, [r5]
   1bce4:	b	1bcb8 <argp_parse@@Base+0x3594>
   1bce8:	mov	r1, r0
   1bcec:	mov	r0, #10
   1bcf0:	bl	1149c <fputc@plt>
   1bcf4:	ldr	r0, [r5]
   1bcf8:	bl	112c8 <funlockfile@plt>
   1bcfc:	b	1baa4 <argp_parse@@Base+0x3380>
   1bd00:	ldr	ip, [sl]
   1bd04:	movw	r0, #58448	; 0xe450
   1bd08:	movt	r0, #2
   1bd0c:	movw	r1, #55636	; 0xd954
   1bd10:	movt	r1, #1
   1bd14:	ldr	r3, [sp, #20]
   1bd18:	ldr	r0, [r0]
   1bd1c:	ldr	r2, [r3]
   1bd20:	str	ip, [sp]
   1bd24:	ldr	r3, [sp, #104]	; 0x68
   1bd28:	bl	113d0 <fprintf@plt>
   1bd2c:	b	1bc00 <argp_parse@@Base+0x34dc>
   1bd30:	mov	r3, #1
   1bd34:	str	r3, [sp, #40]	; 0x28
   1bd38:	b	1b9a4 <argp_parse@@Base+0x3280>
   1bd3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bd40:	subs	r5, r0, #0
   1bd44:	strd	r6, [sp, #8]
   1bd48:	strd	r8, [sp, #16]
   1bd4c:	strd	sl, [sp, #24]
   1bd50:	str	lr, [sp, #32]
   1bd54:	sub	sp, sp, #36	; 0x24
   1bd58:	ldr	r4, [sp, #80]	; 0x50
   1bd5c:	ldr	r7, [r4, #4]
   1bd60:	ble	1bf54 <argp_parse@@Base+0x3830>
   1bd64:	mov	r6, r2
   1bd68:	mov	sl, r3
   1bd6c:	ldr	r2, [r4]
   1bd70:	mov	r3, #0
   1bd74:	mov	r9, r1
   1bd78:	str	r3, [r4, #12]
   1bd7c:	cmp	r2, r3
   1bd80:	beq	1bffc <argp_parse@@Base+0x38d8>
   1bd84:	ldr	r3, [r4, #16]
   1bd88:	cmp	r3, #0
   1bd8c:	bne	1bf20 <argp_parse@@Base+0x37fc>
   1bd90:	mov	r3, #0
   1bd94:	str	r3, [r4, #20]
   1bd98:	str	r2, [r4, #28]
   1bd9c:	str	r2, [r4, #32]
   1bda0:	ldrb	r2, [r6]
   1bda4:	cmp	r2, #45	; 0x2d
   1bda8:	moveq	r2, #2
   1bdac:	addeq	r6, r6, #1
   1bdb0:	streq	r2, [r4, #24]
   1bdb4:	beq	1bddc <argp_parse@@Base+0x36b8>
   1bdb8:	cmp	r2, #43	; 0x2b
   1bdbc:	addeq	r6, r6, #1
   1bdc0:	streq	r3, [r4, #24]
   1bdc4:	beq	1bddc <argp_parse@@Base+0x36b8>
   1bdc8:	ldr	r2, [sp, #84]	; 0x54
   1bdcc:	cmp	r2, #0
   1bdd0:	beq	1c12c <argp_parse@@Base+0x3a08>
   1bdd4:	mov	r2, #0
   1bdd8:	str	r2, [r4, #24]
   1bddc:	mov	r2, #1
   1bde0:	str	r2, [r4, #16]
   1bde4:	ldrb	r2, [r6]
   1bde8:	cmp	r2, #58	; 0x3a
   1bdec:	moveq	r7, #0
   1bdf0:	cmp	r3, #0
   1bdf4:	beq	1be88 <argp_parse@@Base+0x3764>
   1bdf8:	ldrb	r2, [r3]
   1bdfc:	cmp	r2, #0
   1be00:	beq	1be88 <argp_parse@@Base+0x3764>
   1be04:	add	fp, r3, #1
   1be08:	mov	r0, r6
   1be0c:	str	r3, [sp, #28]
   1be10:	str	fp, [r4, #20]
   1be14:	ldrb	r8, [r3]
   1be18:	mov	r1, r8
   1be1c:	str	r8, [sp, #24]
   1be20:	bl	113c4 <strchr@plt>
   1be24:	ldrd	r2, [sp, #24]
   1be28:	ldrb	r1, [r3, #1]
   1be2c:	cmp	r1, #0
   1be30:	bne	1be40 <argp_parse@@Base+0x371c>
   1be34:	ldr	r1, [r4]
   1be38:	add	r1, r1, #1
   1be3c:	str	r1, [r4]
   1be40:	sub	r1, r8, #58	; 0x3a
   1be44:	cmp	r0, #0
   1be48:	cmpne	r1, #1
   1be4c:	bls	1c1a4 <argp_parse@@Base+0x3a80>
   1be50:	ldrb	ip, [r0]
   1be54:	ldrb	r1, [r0, #1]
   1be58:	cmp	ip, #87	; 0x57
   1be5c:	beq	1c0ac <argp_parse@@Base+0x3988>
   1be60:	cmp	r1, #58	; 0x3a
   1be64:	beq	1c150 <argp_parse@@Base+0x3a2c>
   1be68:	mov	r0, r2
   1be6c:	add	sp, sp, #36	; 0x24
   1be70:	ldrd	r4, [sp]
   1be74:	ldrd	r6, [sp, #8]
   1be78:	ldrd	r8, [sp, #16]
   1be7c:	ldrd	sl, [sp, #24]
   1be80:	add	sp, sp, #32
   1be84:	pop	{pc}		; (ldr pc, [sp], #4)
   1be88:	ldr	r8, [r4]
   1be8c:	ldr	r2, [r4, #28]
   1be90:	ldr	r3, [r4, #32]
   1be94:	cmp	r3, r8
   1be98:	ldr	r3, [r4, #24]
   1be9c:	strgt	r8, [r4, #32]
   1bea0:	cmp	r8, r2
   1bea4:	movlt	r2, r8
   1bea8:	strlt	r8, [r4, #28]
   1beac:	cmp	r3, #1
   1beb0:	beq	1bf5c <argp_parse@@Base+0x3838>
   1beb4:	cmp	r5, r8
   1beb8:	beq	1bf3c <argp_parse@@Base+0x3818>
   1bebc:	ldr	r3, [r9, r8, lsl #2]
   1bec0:	movw	fp, #54272	; 0xd400
   1bec4:	movt	fp, #1
   1bec8:	mov	r1, fp
   1becc:	mov	r0, r3
   1bed0:	str	r3, [sp, #24]
   1bed4:	bl	111d8 <strcmp@plt>
   1bed8:	cmp	r0, #0
   1bedc:	ldr	r3, [sp, #24]
   1bee0:	bne	1bfd0 <argp_parse@@Base+0x38ac>
   1bee4:	ldr	r3, [r4, #28]
   1bee8:	add	r8, r8, #1
   1beec:	ldr	r2, [r4, #32]
   1bef0:	str	r8, [r4]
   1bef4:	cmp	r3, r2
   1bef8:	beq	1c1b8 <argp_parse@@Base+0x3a94>
   1befc:	cmp	r8, r2
   1bf00:	beq	1bf14 <argp_parse@@Base+0x37f0>
   1bf04:	mov	r0, r9
   1bf08:	mov	r1, r4
   1bf0c:	bl	1b3fc <argp_parse@@Base+0x2cd8>
   1bf10:	ldr	r3, [r4, #28]
   1bf14:	str	r5, [r4]
   1bf18:	str	r5, [r4, #32]
   1bf1c:	b	1bf44 <argp_parse@@Base+0x3820>
   1bf20:	ldrb	r2, [r6]
   1bf24:	ldr	r3, [r4, #20]
   1bf28:	sub	r1, r2, #43	; 0x2b
   1bf2c:	tst	r1, #253	; 0xfd
   1bf30:	ldrbeq	r2, [r6, #1]
   1bf34:	addeq	r6, r6, #1
   1bf38:	b	1bde8 <argp_parse@@Base+0x36c4>
   1bf3c:	ldr	r3, [r4, #28]
   1bf40:	ldr	r5, [r4, #32]
   1bf44:	cmp	r5, r3
   1bf48:	mvnne	r2, #0
   1bf4c:	strne	r3, [r4]
   1bf50:	bne	1be68 <argp_parse@@Base+0x3744>
   1bf54:	mvn	r2, #0
   1bf58:	b	1be68 <argp_parse@@Base+0x3744>
   1bf5c:	ldr	r3, [r4, #32]
   1bf60:	cmp	r3, r2
   1bf64:	beq	1c190 <argp_parse@@Base+0x3a6c>
   1bf68:	cmp	r8, r3
   1bf6c:	beq	1bf80 <argp_parse@@Base+0x385c>
   1bf70:	mov	r1, r4
   1bf74:	mov	r0, r9
   1bf78:	bl	1b3fc <argp_parse@@Base+0x2cd8>
   1bf7c:	ldr	r3, [r4]
   1bf80:	cmp	r5, r3
   1bf84:	ble	1bfbc <argp_parse@@Base+0x3898>
   1bf88:	add	r1, r9, r3, lsl #2
   1bf8c:	b	1bfa0 <argp_parse@@Base+0x387c>
   1bf90:	add	r3, r3, #1
   1bf94:	cmp	r3, r5
   1bf98:	str	r3, [r4]
   1bf9c:	beq	1bfbc <argp_parse@@Base+0x3898>
   1bfa0:	ldr	r2, [r1], #4
   1bfa4:	ldrb	r0, [r2]
   1bfa8:	cmp	r0, #45	; 0x2d
   1bfac:	bne	1bf90 <argp_parse@@Base+0x386c>
   1bfb0:	ldrb	r2, [r2, #1]
   1bfb4:	cmp	r2, #0
   1bfb8:	beq	1bf90 <argp_parse@@Base+0x386c>
   1bfbc:	mov	r8, r3
   1bfc0:	str	r3, [r4, #32]
   1bfc4:	cmp	r5, r8
   1bfc8:	bne	1bebc <argp_parse@@Base+0x3798>
   1bfcc:	b	1bf3c <argp_parse@@Base+0x3818>
   1bfd0:	ldrb	r2, [r3]
   1bfd4:	cmp	r2, #45	; 0x2d
   1bfd8:	beq	1c00c <argp_parse@@Base+0x38e8>
   1bfdc:	ldr	r2, [r4, #24]
   1bfe0:	cmp	r2, #0
   1bfe4:	beq	1bf54 <argp_parse@@Base+0x3830>
   1bfe8:	add	r8, r8, #1
   1bfec:	mov	r2, #1
   1bff0:	str	r8, [r4]
   1bff4:	str	r3, [r4, #12]
   1bff8:	b	1be68 <argp_parse@@Base+0x3744>
   1bffc:	mov	r3, #1
   1c000:	mov	r2, r3
   1c004:	str	r3, [r4]
   1c008:	b	1bd90 <argp_parse@@Base+0x366c>
   1c00c:	ldrb	r1, [r3, #1]
   1c010:	cmp	r1, #0
   1c014:	beq	1bfdc <argp_parse@@Base+0x38b8>
   1c018:	cmp	sl, #0
   1c01c:	beq	1c0a4 <argp_parse@@Base+0x3980>
   1c020:	cmp	r1, #45	; 0x2d
   1c024:	beq	1c23c <argp_parse@@Base+0x3b18>
   1c028:	ldr	r2, [sp, #76]	; 0x4c
   1c02c:	cmp	r2, #0
   1c030:	beq	1c0a4 <argp_parse@@Base+0x3980>
   1c034:	ldrb	r2, [r3, #2]
   1c038:	cmp	r2, #0
   1c03c:	bne	1c058 <argp_parse@@Base+0x3934>
   1c040:	mov	r0, r6
   1c044:	str	r3, [sp, #24]
   1c048:	bl	113c4 <strchr@plt>
   1c04c:	cmp	r0, #0
   1c050:	ldr	r3, [sp, #24]
   1c054:	bne	1c0a4 <argp_parse@@Base+0x3980>
   1c058:	ldr	r2, [sp, #72]	; 0x48
   1c05c:	add	ip, r3, #1
   1c060:	movw	r0, #55692	; 0xd98c
   1c064:	movt	r0, #1
   1c068:	mov	r3, sl
   1c06c:	ldr	r1, [sp, #76]	; 0x4c
   1c070:	str	r2, [sp]
   1c074:	mov	r2, r6
   1c078:	str	r0, [sp, #16]
   1c07c:	mov	r0, r5
   1c080:	stmib	sp, {r1, r4, r7}
   1c084:	mov	r1, r9
   1c088:	str	ip, [r4, #20]
   1c08c:	bl	1b664 <argp_parse@@Base+0x2f40>
   1c090:	cmn	r0, #1
   1c094:	mov	r2, r0
   1c098:	bne	1be68 <argp_parse@@Base+0x3744>
   1c09c:	ldr	r3, [r4]
   1c0a0:	ldr	r3, [r9, r3, lsl #2]
   1c0a4:	add	r3, r3, #1
   1c0a8:	b	1be04 <argp_parse@@Base+0x36e0>
   1c0ac:	sub	ip, r1, #59	; 0x3b
   1c0b0:	cmp	sl, #0
   1c0b4:	clz	ip, ip
   1c0b8:	lsr	ip, ip, #5
   1c0bc:	moveq	ip, #0
   1c0c0:	cmp	ip, #0
   1c0c4:	beq	1be60 <argp_parse@@Base+0x373c>
   1c0c8:	ldrb	r3, [r3, #1]
   1c0cc:	cmp	r3, #0
   1c0d0:	bne	1c0e4 <argp_parse@@Base+0x39c0>
   1c0d4:	ldr	r3, [r4]
   1c0d8:	cmp	r3, r5
   1c0dc:	beq	1c270 <argp_parse@@Base+0x3b4c>
   1c0e0:	ldr	fp, [r9, r3, lsl #2]
   1c0e4:	mov	lr, #0
   1c0e8:	movw	ip, #55768	; 0xd9d8
   1c0ec:	movt	ip, #1
   1c0f0:	ldr	r3, [sp, #72]	; 0x48
   1c0f4:	mov	r2, r6
   1c0f8:	mov	r1, r9
   1c0fc:	mov	r0, r5
   1c100:	str	r3, [sp]
   1c104:	mov	r3, sl
   1c108:	str	r4, [sp, #8]
   1c10c:	str	r7, [sp, #12]
   1c110:	str	ip, [sp, #16]
   1c114:	str	fp, [r4, #20]
   1c118:	str	lr, [sp, #4]
   1c11c:	str	lr, [r4, #12]
   1c120:	bl	1b664 <argp_parse@@Base+0x2f40>
   1c124:	mov	r2, r0
   1c128:	b	1be68 <argp_parse@@Base+0x3744>
   1c12c:	movw	r0, #55676	; 0xd97c
   1c130:	movt	r0, #1
   1c134:	bl	11334 <getenv@plt>
   1c138:	cmp	r0, #0
   1c13c:	ldr	r3, [r4, #20]
   1c140:	bne	1bdd4 <argp_parse@@Base+0x36b0>
   1c144:	mov	r2, #1
   1c148:	str	r2, [r4, #24]
   1c14c:	b	1bddc <argp_parse@@Base+0x36b8>
   1c150:	ldrb	r1, [r0, #2]
   1c154:	ldrb	r3, [r3, #1]
   1c158:	cmp	r1, #58	; 0x3a
   1c15c:	beq	1c1f8 <argp_parse@@Base+0x3ad4>
   1c160:	cmp	r3, #0
   1c164:	ldr	r3, [r4]
   1c168:	bne	1c1c4 <argp_parse@@Base+0x3aa0>
   1c16c:	cmp	r5, r3
   1c170:	beq	1c21c <argp_parse@@Base+0x3af8>
   1c174:	ldr	r1, [r9, r3, lsl #2]
   1c178:	add	r3, r3, #1
   1c17c:	str	r3, [r4]
   1c180:	str	r1, [r4, #12]
   1c184:	mov	r3, #0
   1c188:	str	r3, [r4, #20]
   1c18c:	b	1be68 <argp_parse@@Base+0x3744>
   1c190:	cmp	r8, r2
   1c194:	movne	r3, r8
   1c198:	moveq	r3, r2
   1c19c:	strne	r8, [r4, #28]
   1c1a0:	b	1bf80 <argp_parse@@Base+0x385c>
   1c1a4:	cmp	r7, #0
   1c1a8:	bne	1c1d4 <argp_parse@@Base+0x3ab0>
   1c1ac:	mov	r2, #63	; 0x3f
   1c1b0:	str	r8, [r4, #8]
   1c1b4:	b	1be68 <argp_parse@@Base+0x3744>
   1c1b8:	mov	r3, r8
   1c1bc:	str	r8, [r4, #28]
   1c1c0:	b	1bf14 <argp_parse@@Base+0x37f0>
   1c1c4:	add	r3, r3, #1
   1c1c8:	str	r3, [r4]
   1c1cc:	str	fp, [r4, #12]
   1c1d0:	b	1c184 <argp_parse@@Base+0x3a60>
   1c1d4:	movw	r0, #58448	; 0xe450
   1c1d8:	movt	r0, #2
   1c1dc:	ldr	r2, [r9]
   1c1e0:	movw	r1, #55696	; 0xd990
   1c1e4:	movt	r1, #1
   1c1e8:	mov	r3, r8
   1c1ec:	ldr	r0, [r0]
   1c1f0:	bl	113d0 <fprintf@plt>
   1c1f4:	b	1c1ac <argp_parse@@Base+0x3a88>
   1c1f8:	cmp	r3, #0
   1c1fc:	ldrne	r3, [r4]
   1c200:	moveq	fp, r3
   1c204:	str	fp, [r4, #12]
   1c208:	addne	r3, r3, #1
   1c20c:	strne	r3, [r4]
   1c210:	mov	r3, #0
   1c214:	str	r3, [r4, #20]
   1c218:	b	1be68 <argp_parse@@Base+0x3744>
   1c21c:	cmp	r7, #0
   1c220:	bne	1c290 <argp_parse@@Base+0x3b6c>
   1c224:	str	r8, [r4, #8]
   1c228:	ldrb	r3, [r6]
   1c22c:	cmp	r3, #58	; 0x3a
   1c230:	moveq	r2, #58	; 0x3a
   1c234:	movne	r2, #63	; 0x3f
   1c238:	b	1c184 <argp_parse@@Base+0x3a60>
   1c23c:	ldr	r2, [sp, #72]	; 0x48
   1c240:	add	ip, r3, #2
   1c244:	mov	r1, r9
   1c248:	mov	r3, sl
   1c24c:	ldr	r0, [sp, #76]	; 0x4c
   1c250:	str	r2, [sp]
   1c254:	mov	r2, r6
   1c258:	stmib	sp, {r0, r4, r7, fp}
   1c25c:	mov	r0, r5
   1c260:	str	ip, [r4, #20]
   1c264:	bl	1b664 <argp_parse@@Base+0x2f40>
   1c268:	mov	r2, r0
   1c26c:	b	1be68 <argp_parse@@Base+0x3744>
   1c270:	cmp	r7, #0
   1c274:	bne	1c2b4 <argp_parse@@Base+0x3b90>
   1c278:	str	r8, [r4, #8]
   1c27c:	ldrb	r3, [r6]
   1c280:	cmp	r3, #58	; 0x3a
   1c284:	moveq	r2, #58	; 0x3a
   1c288:	movne	r2, #63	; 0x3f
   1c28c:	b	1be68 <argp_parse@@Base+0x3744>
   1c290:	movw	r0, #58448	; 0xe450
   1c294:	movt	r0, #2
   1c298:	ldr	r2, [r9]
   1c29c:	movw	r1, #55724	; 0xd9ac
   1c2a0:	movt	r1, #1
   1c2a4:	mov	r3, r8
   1c2a8:	ldr	r0, [r0]
   1c2ac:	bl	113d0 <fprintf@plt>
   1c2b0:	b	1c224 <argp_parse@@Base+0x3b00>
   1c2b4:	movw	r0, #58448	; 0xe450
   1c2b8:	movt	r0, #2
   1c2bc:	ldr	r2, [r9]
   1c2c0:	movw	r1, #55724	; 0xd9ac
   1c2c4:	movt	r1, #1
   1c2c8:	mov	r3, r8
   1c2cc:	ldr	r0, [r0]
   1c2d0:	bl	113d0 <fprintf@plt>
   1c2d4:	b	1c278 <argp_parse@@Base+0x3b54>
   1c2d8:	strd	r4, [sp, #-16]!
   1c2dc:	movw	r5, #58424	; 0xe438
   1c2e0:	movt	r5, #2
   1c2e4:	str	r6, [sp, #8]
   1c2e8:	movw	r4, #58652	; 0xe51c
   1c2ec:	movt	r4, #2
   1c2f0:	str	lr, [sp, #12]
   1c2f4:	sub	sp, sp, #16
   1c2f8:	ldr	lr, [sp, #32]
   1c2fc:	ldr	ip, [r5]
   1c300:	ldr	r6, [sp, #36]	; 0x24
   1c304:	str	lr, [sp]
   1c308:	ldr	lr, [sp, #40]	; 0x28
   1c30c:	str	ip, [r4]
   1c310:	ldr	ip, [r5, #4]
   1c314:	str	r6, [sp, #4]
   1c318:	str	r4, [sp, #8]
   1c31c:	str	lr, [sp, #12]
   1c320:	str	ip, [r4, #4]
   1c324:	bl	1bd3c <argp_parse@@Base+0x3618>
   1c328:	ldr	ip, [r4]
   1c32c:	movw	r3, #61380	; 0xefc4
   1c330:	movt	r3, #2
   1c334:	ldr	r1, [r4, #8]
   1c338:	ldr	r2, [r4, #12]
   1c33c:	str	ip, [r5]
   1c340:	str	r1, [r5, #8]
   1c344:	str	r2, [r3]
   1c348:	add	sp, sp, #16
   1c34c:	ldrd	r4, [sp]
   1c350:	ldr	r6, [sp, #8]
   1c354:	add	sp, sp, #12
   1c358:	pop	{pc}		; (ldr pc, [sp], #4)
   1c35c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c360:	movw	r4, #58652	; 0xe51c
   1c364:	movt	r4, #2
   1c368:	strd	r6, [sp, #8]
   1c36c:	movw	r6, #58424	; 0xe438
   1c370:	movt	r6, #2
   1c374:	strd	r8, [sp, #16]
   1c378:	subs	r9, r0, #0
   1c37c:	strd	sl, [sp, #24]
   1c380:	ldm	r6, {r5, sl}
   1c384:	str	lr, [sp, #32]
   1c388:	sub	sp, sp, #20
   1c38c:	str	r1, [sp, #4]
   1c390:	stm	r4, {r5, sl}
   1c394:	ble	1c768 <argp_parse@@Base+0x4044>
   1c398:	mov	r3, #0
   1c39c:	mov	r8, r2
   1c3a0:	cmp	r5, r3
   1c3a4:	str	r3, [r4, #12]
   1c3a8:	beq	1c478 <argp_parse@@Base+0x3d54>
   1c3ac:	ldr	r3, [r4, #16]
   1c3b0:	cmp	r3, #0
   1c3b4:	beq	1c484 <argp_parse@@Base+0x3d60>
   1c3b8:	ldrb	r3, [r2]
   1c3bc:	sub	r2, r3, #43	; 0x2b
   1c3c0:	tst	r2, #253	; 0xfd
   1c3c4:	ldrbeq	r3, [r8, #1]
   1c3c8:	addeq	r8, r8, #1
   1c3cc:	cmp	r3, #58	; 0x3a
   1c3d0:	ldr	r3, [r4, #20]
   1c3d4:	moveq	sl, #0
   1c3d8:	cmp	r3, #0
   1c3dc:	beq	1c4c4 <argp_parse@@Base+0x3da0>
   1c3e0:	ldrb	r2, [r3]
   1c3e4:	cmp	r2, #0
   1c3e8:	beq	1c4c4 <argp_parse@@Base+0x3da0>
   1c3ec:	add	r7, r3, #1
   1c3f0:	mov	r0, r8
   1c3f4:	str	r3, [sp, #12]
   1c3f8:	str	r7, [r4, #20]
   1c3fc:	ldrb	fp, [r3]
   1c400:	mov	r1, fp
   1c404:	str	fp, [sp, #8]
   1c408:	bl	113c4 <strchr@plt>
   1c40c:	ldrd	r2, [sp, #8]
   1c410:	ldrb	r1, [r3, #1]
   1c414:	cmp	r1, #0
   1c418:	sub	r1, fp, #58	; 0x3a
   1c41c:	addeq	r5, r5, #1
   1c420:	streq	r5, [r4]
   1c424:	cmp	r0, #0
   1c428:	cmpne	r1, #1
   1c42c:	bls	1c690 <argp_parse@@Base+0x3f6c>
   1c430:	ldrb	r1, [r0, #1]
   1c434:	cmp	r1, #58	; 0x3a
   1c438:	beq	1c6ac <argp_parse@@Base+0x3f88>
   1c43c:	ldr	r1, [r4, #8]
   1c440:	ldr	r7, [r4, #12]
   1c444:	mov	r0, r2
   1c448:	movw	r3, #61380	; 0xefc4
   1c44c:	movt	r3, #2
   1c450:	str	r5, [r6]
   1c454:	str	r1, [r6, #8]
   1c458:	str	r7, [r3]
   1c45c:	add	sp, sp, #20
   1c460:	ldrd	r4, [sp]
   1c464:	ldrd	r6, [sp, #8]
   1c468:	ldrd	r8, [sp, #16]
   1c46c:	ldrd	sl, [sp, #24]
   1c470:	add	sp, sp, #32
   1c474:	pop	{pc}		; (ldr pc, [sp], #4)
   1c478:	mov	r3, #1
   1c47c:	mov	r5, r3
   1c480:	str	r3, [r4]
   1c484:	mov	r3, #0
   1c488:	str	r3, [r4, #20]
   1c48c:	str	r5, [r4, #28]
   1c490:	str	r5, [r4, #32]
   1c494:	ldrb	r2, [r8]
   1c498:	cmp	r2, #45	; 0x2d
   1c49c:	beq	1c56c <argp_parse@@Base+0x3e48>
   1c4a0:	cmp	r2, #43	; 0x2b
   1c4a4:	mov	r1, r3
   1c4a8:	str	r3, [r4, #24]
   1c4ac:	addeq	r8, r8, #1
   1c4b0:	mov	r3, #1
   1c4b4:	str	r3, [r4, #16]
   1c4b8:	ldrb	r3, [r8]
   1c4bc:	cmp	r3, #58	; 0x3a
   1c4c0:	beq	1c5b0 <argp_parse@@Base+0x3e8c>
   1c4c4:	mov	r2, r5
   1c4c8:	ldr	r1, [r4, #24]
   1c4cc:	ldr	r3, [r4, #32]
   1c4d0:	ldr	r0, [r4, #28]
   1c4d4:	cmp	r3, r5
   1c4d8:	movgt	r3, r5
   1c4dc:	strgt	r5, [r4, #32]
   1c4e0:	cmp	r5, r0
   1c4e4:	movge	r5, r0
   1c4e8:	strlt	r5, [r4, #28]
   1c4ec:	cmp	r1, #1
   1c4f0:	beq	1c5c4 <argp_parse@@Base+0x3ea0>
   1c4f4:	cmp	r9, r2
   1c4f8:	beq	1c638 <argp_parse@@Base+0x3f14>
   1c4fc:	ldr	fp, [sp, #4]
   1c500:	movw	r1, #54272	; 0xd400
   1c504:	movt	r1, #1
   1c508:	strd	r2, [sp, #8]
   1c50c:	ldr	r7, [fp, r2, lsl #2]
   1c510:	mov	r0, r7
   1c514:	bl	111d8 <strcmp@plt>
   1c518:	cmp	r0, #0
   1c51c:	ldr	r2, [sp, #8]
   1c520:	bne	1c580 <argp_parse@@Base+0x3e5c>
   1c524:	ldr	r3, [sp, #12]
   1c528:	add	r2, r2, #1
   1c52c:	ldr	r5, [r4, #28]
   1c530:	str	r2, [r4]
   1c534:	cmp	r5, r3
   1c538:	beq	1c6f4 <argp_parse@@Base+0x3fd0>
   1c53c:	cmp	r2, r3
   1c540:	beq	1c558 <argp_parse@@Base+0x3e34>
   1c544:	mov	r0, fp
   1c548:	movw	r1, #58652	; 0xe51c
   1c54c:	movt	r1, #2
   1c550:	bl	1b3fc <argp_parse@@Base+0x2cd8>
   1c554:	ldr	r5, [r4, #28]
   1c558:	mov	r2, r9
   1c55c:	mov	r3, r9
   1c560:	str	r9, [r4]
   1c564:	str	r9, [r4, #32]
   1c568:	b	1c63c <argp_parse@@Base+0x3f18>
   1c56c:	mov	r3, #2
   1c570:	add	r8, r8, #1
   1c574:	mov	r1, r3
   1c578:	str	r3, [r4, #24]
   1c57c:	b	1c4b0 <argp_parse@@Base+0x3d8c>
   1c580:	ldrb	r3, [r7]
   1c584:	cmp	r3, #45	; 0x2d
   1c588:	beq	1c65c <argp_parse@@Base+0x3f38>
   1c58c:	ldr	r3, [r4, #24]
   1c590:	cmp	r3, #0
   1c594:	beq	1c764 <argp_parse@@Base+0x4040>
   1c598:	add	r5, r2, #1
   1c59c:	mov	r2, #1
   1c5a0:	ldr	r1, [r4, #8]
   1c5a4:	str	r5, [r4]
   1c5a8:	str	r7, [r4, #12]
   1c5ac:	b	1c444 <argp_parse@@Base+0x3d20>
   1c5b0:	cmp	r1, #1
   1c5b4:	mov	r3, r5
   1c5b8:	mov	r2, r5
   1c5bc:	mov	sl, #0
   1c5c0:	bne	1c4f4 <argp_parse@@Base+0x3dd0>
   1c5c4:	cmp	r5, r3
   1c5c8:	beq	1c674 <argp_parse@@Base+0x3f50>
   1c5cc:	cmp	r2, r3
   1c5d0:	beq	1c5e8 <argp_parse@@Base+0x3ec4>
   1c5d4:	movw	r1, #58652	; 0xe51c
   1c5d8:	movt	r1, #2
   1c5dc:	ldr	r0, [sp, #4]
   1c5e0:	bl	1b3fc <argp_parse@@Base+0x2cd8>
   1c5e4:	ldr	r3, [r4]
   1c5e8:	cmp	r9, r3
   1c5ec:	ble	1c628 <argp_parse@@Base+0x3f04>
   1c5f0:	ldr	r2, [sp, #4]
   1c5f4:	add	r1, r2, r3, lsl #2
   1c5f8:	b	1c60c <argp_parse@@Base+0x3ee8>
   1c5fc:	add	r3, r3, #1
   1c600:	cmp	r9, r3
   1c604:	str	r3, [r4]
   1c608:	beq	1c688 <argp_parse@@Base+0x3f64>
   1c60c:	ldr	r2, [r1], #4
   1c610:	ldrb	r0, [r2]
   1c614:	cmp	r0, #45	; 0x2d
   1c618:	bne	1c5fc <argp_parse@@Base+0x3ed8>
   1c61c:	ldrb	r2, [r2, #1]
   1c620:	cmp	r2, #0
   1c624:	beq	1c5fc <argp_parse@@Base+0x3ed8>
   1c628:	mov	r2, r3
   1c62c:	cmp	r9, r2
   1c630:	str	r3, [r4, #32]
   1c634:	bne	1c4fc <argp_parse@@Base+0x3dd8>
   1c638:	ldr	r5, [r4, #28]
   1c63c:	cmp	r3, r5
   1c640:	moveq	r5, r2
   1c644:	mvnne	r2, #0
   1c648:	ldr	r1, [r4, #8]
   1c64c:	strne	r5, [r4]
   1c650:	mvneq	r2, #0
   1c654:	ldr	r7, [r4, #12]
   1c658:	b	1c444 <argp_parse@@Base+0x3d20>
   1c65c:	ldrb	r3, [r7, #1]
   1c660:	cmp	r3, #0
   1c664:	beq	1c58c <argp_parse@@Base+0x3e68>
   1c668:	add	r3, r7, #1
   1c66c:	mov	r5, r2
   1c670:	b	1c3ec <argp_parse@@Base+0x3cc8>
   1c674:	cmp	r2, r3
   1c678:	beq	1c5e8 <argp_parse@@Base+0x3ec4>
   1c67c:	mov	r3, r2
   1c680:	str	r2, [r4, #28]
   1c684:	b	1c5e8 <argp_parse@@Base+0x3ec4>
   1c688:	mov	r2, r9
   1c68c:	b	1c62c <argp_parse@@Base+0x3f08>
   1c690:	cmp	sl, #0
   1c694:	bne	1c714 <argp_parse@@Base+0x3ff0>
   1c698:	mov	r1, fp
   1c69c:	mov	r2, #63	; 0x3f
   1c6a0:	str	fp, [r4, #8]
   1c6a4:	ldr	r7, [r4, #12]
   1c6a8:	b	1c444 <argp_parse@@Base+0x3d20>
   1c6ac:	ldrb	r1, [r0, #2]
   1c6b0:	ldrb	r3, [r3, #1]
   1c6b4:	cmp	r1, #58	; 0x3a
   1c6b8:	beq	1c740 <argp_parse@@Base+0x401c>
   1c6bc:	cmp	r3, #0
   1c6c0:	bne	1c700 <argp_parse@@Base+0x3fdc>
   1c6c4:	cmp	r9, r5
   1c6c8:	beq	1c770 <argp_parse@@Base+0x404c>
   1c6cc:	ldr	r3, [sp, #4]
   1c6d0:	ldr	r1, [r4, #8]
   1c6d4:	ldr	r7, [r3, r5, lsl #2]
   1c6d8:	add	r3, r5, #1
   1c6dc:	mov	r5, r3
   1c6e0:	str	r3, [r4]
   1c6e4:	str	r7, [r4, #12]
   1c6e8:	mov	r3, #0
   1c6ec:	str	r3, [r4, #20]
   1c6f0:	b	1c444 <argp_parse@@Base+0x3d20>
   1c6f4:	mov	r5, r2
   1c6f8:	str	r2, [r4, #28]
   1c6fc:	b	1c558 <argp_parse@@Base+0x3e34>
   1c700:	add	r5, r5, #1
   1c704:	ldr	r1, [r4, #8]
   1c708:	str	r5, [r4]
   1c70c:	str	r7, [r4, #12]
   1c710:	b	1c6e8 <argp_parse@@Base+0x3fc4>
   1c714:	ldr	r3, [sp, #4]
   1c718:	movw	r0, #58448	; 0xe450
   1c71c:	movt	r0, #2
   1c720:	movw	r1, #55696	; 0xd990
   1c724:	movt	r1, #1
   1c728:	ldr	r0, [r0]
   1c72c:	ldr	r2, [r3]
   1c730:	mov	r3, fp
   1c734:	bl	113d0 <fprintf@plt>
   1c738:	ldr	r5, [r4]
   1c73c:	b	1c698 <argp_parse@@Base+0x3f74>
   1c740:	cmp	r3, #0
   1c744:	ldr	r1, [r4, #8]
   1c748:	moveq	r7, r3
   1c74c:	addne	r5, r5, #1
   1c750:	mov	r3, #0
   1c754:	strne	r5, [r4]
   1c758:	str	r7, [r4, #12]
   1c75c:	str	r3, [r4, #20]
   1c760:	b	1c444 <argp_parse@@Base+0x3d20>
   1c764:	mov	r5, r2
   1c768:	mvn	r2, #0
   1c76c:	b	1c43c <argp_parse@@Base+0x3d18>
   1c770:	cmp	sl, #0
   1c774:	bne	1c798 <argp_parse@@Base+0x4074>
   1c778:	str	fp, [r4, #8]
   1c77c:	mov	r1, fp
   1c780:	ldrb	r3, [r8]
   1c784:	ldr	r7, [r4, #12]
   1c788:	cmp	r3, #58	; 0x3a
   1c78c:	moveq	r2, #58	; 0x3a
   1c790:	movne	r2, #63	; 0x3f
   1c794:	b	1c6e8 <argp_parse@@Base+0x3fc4>
   1c798:	ldr	r3, [sp, #4]
   1c79c:	movw	r0, #58448	; 0xe450
   1c7a0:	movt	r0, #2
   1c7a4:	movw	r1, #55724	; 0xd9ac
   1c7a8:	movt	r1, #1
   1c7ac:	ldr	r0, [r0]
   1c7b0:	ldr	r2, [r3]
   1c7b4:	mov	r3, fp
   1c7b8:	bl	113d0 <fprintf@plt>
   1c7bc:	ldr	r5, [r4]
   1c7c0:	b	1c778 <argp_parse@@Base+0x4054>
   1c7c4:	umull	r2, r3, r1, r2
   1c7c8:	cmp	r3, #0
   1c7cc:	bne	1c7d8 <argp_parse@@Base+0x40b4>
   1c7d0:	mov	r1, r2
   1c7d4:	b	1abb4 <argp_parse@@Base+0x2490>
   1c7d8:	str	r4, [sp, #-8]!
   1c7dc:	str	lr, [sp, #4]
   1c7e0:	bl	113dc <__errno_location@plt>
   1c7e4:	mov	r3, #12
   1c7e8:	ldr	r4, [sp]
   1c7ec:	add	sp, sp, #4
   1c7f0:	str	r3, [r0]
   1c7f4:	mov	r0, #0
   1c7f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c800:	mov	r7, r0
   1c804:	ldr	r6, [pc, #72]	; 1c854 <argp_parse@@Base+0x4130>
   1c808:	ldr	r5, [pc, #72]	; 1c858 <argp_parse@@Base+0x4134>
   1c80c:	add	r6, pc, r6
   1c810:	add	r5, pc, r5
   1c814:	sub	r6, r6, r5
   1c818:	mov	r8, r1
   1c81c:	mov	r9, r2
   1c820:	bl	11194 <fdopen@plt-0x20>
   1c824:	asrs	r6, r6, #2
   1c828:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c82c:	mov	r4, #0
   1c830:	add	r4, r4, #1
   1c834:	ldr	r3, [r5], #4
   1c838:	mov	r2, r9
   1c83c:	mov	r1, r8
   1c840:	mov	r0, r7
   1c844:	blx	r3
   1c848:	cmp	r6, r4
   1c84c:	bne	1c830 <argp_parse@@Base+0x410c>
   1c850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c854:	strdeq	r1, [r1], -r8
   1c858:	strdeq	r1, [r1], -r0
   1c85c:	bx	lr

Disassembly of section .fini:

0001c860 <.fini>:
   1c860:	push	{r3, lr}
   1c864:	pop	{r3, pc}
