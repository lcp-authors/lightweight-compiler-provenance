
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

000005f0 <_init>:
 5f0:	push	{r3, lr}
 5f4:	bl	6c4 <call_weak_fn>
 5f8:	pop	{r3, pc}

Disassembly of section .plt:

000005fc <.plt>:
 5fc:	push	{lr}		; (str lr, [sp, #-4]!)
 600:	ldr	lr, [pc, #4]	; 60c <.plt+0x10>
 604:	add	lr, pc, lr
 608:	ldr	pc, [lr, #8]!
 60c:	.word	0x000119f4

00000610 <calloc@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #69632	; 0x11000
 618:	ldr	pc, [ip, #2548]!	; 0x9f4

0000061c <strcmp@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #69632	; 0x11000
 624:	ldr	pc, [ip, #2540]!	; 0x9ec

00000628 <__cxa_finalize@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #69632	; 0x11000
 630:	ldr	pc, [ip, #2532]!	; 0x9e4

00000634 <free@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #69632	; 0x11000
 63c:	ldr	pc, [ip, #2524]!	; 0x9dc

00000640 <ferror@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2516]!	; 0x9d4

0000064c <strdup@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2508]!	; 0x9cc

00000658 <pcap_close@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2500]!	; 0x9c4

00000664 <strcasecmp@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000670 <pcap_open_dead@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2484]!	; 0x9b4

0000067c <pcap_dump@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2476]!	; 0x9ac

00000688 <__gmon_start__@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2468]!	; 0x9a4

00000694 <snprintf@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2460]!	; 0x99c

000006a0 <pcap_dump_file@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2452]!	; 0x994

000006ac <pcap_dump_close@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2444]!	; 0x98c

000006b8 <pcap_dump_open@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2436]!	; 0x984

Disassembly of section .text:

000006c4 <call_weak_fn>:
 6c4:	ldr	r3, [pc, #20]	; 6e0 <call_weak_fn+0x1c>
 6c8:	ldr	r2, [pc, #20]	; 6e4 <call_weak_fn+0x20>
 6cc:	add	r3, pc, r3
 6d0:	ldr	r2, [r3, r2]
 6d4:	cmp	r2, #0
 6d8:	bxeq	lr
 6dc:	b	688 <__gmon_start__@plt>
 6e0:	.word	0x0001192c
 6e4:	.word	0x00000050

000006e8 <deregister_tm_clones>:
 6e8:	ldr	r0, [pc, #44]	; 71c <deregister_tm_clones+0x34>
 6ec:	ldr	r3, [pc, #44]	; 720 <deregister_tm_clones+0x38>
 6f0:	add	r0, pc, r0
 6f4:	add	r3, pc, r3
 6f8:	cmp	r3, r0
 6fc:	ldr	r3, [pc, #32]	; 724 <deregister_tm_clones+0x3c>
 700:	add	r3, pc, r3
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <deregister_tm_clones+0x40>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000119cc
 720:	.word	0x000119c8
 724:	.word	0x000118f8
 728:	.word	0x0000004c

0000072c <register_tm_clones>:
 72c:	ldr	r0, [pc, #56]	; 76c <register_tm_clones+0x40>
 730:	ldr	r3, [pc, #56]	; 770 <register_tm_clones+0x44>
 734:	add	r0, pc, r0
 738:	add	r3, pc, r3
 73c:	sub	r1, r3, r0
 740:	ldr	r3, [pc, #44]	; 774 <register_tm_clones+0x48>
 744:	asr	r1, r1, #2
 748:	add	r3, pc, r3
 74c:	add	r1, r1, r1, lsr #31
 750:	asrs	r1, r1, #1
 754:	bxeq	lr
 758:	ldr	r2, [pc, #24]	; 778 <register_tm_clones+0x4c>
 75c:	ldr	r3, [r3, r2]
 760:	cmp	r3, #0
 764:	bxeq	lr
 768:	bx	r3
 76c:	.word	0x00011988
 770:	.word	0x00011984
 774:	.word	0x000118b0
 778:	.word	0x00000054

0000077c <__do_global_dtors_aux>:
 77c:	ldr	r3, [pc, #76]	; 7d0 <__do_global_dtors_aux+0x54>
 780:	ldr	r2, [pc, #76]	; 7d4 <__do_global_dtors_aux+0x58>
 784:	add	r3, pc, r3
 788:	add	r2, pc, r2
 78c:	ldrb	r3, [r3]
 790:	cmp	r3, #0
 794:	bxne	lr
 798:	ldr	r3, [pc, #56]	; 7d8 <__do_global_dtors_aux+0x5c>
 79c:	push	{r4, lr}
 7a0:	ldr	r3, [r2, r3]
 7a4:	cmp	r3, #0
 7a8:	beq	7b8 <__do_global_dtors_aux+0x3c>
 7ac:	ldr	r3, [pc, #40]	; 7dc <__do_global_dtors_aux+0x60>
 7b0:	ldr	r0, [pc, r3]
 7b4:	bl	628 <__cxa_finalize@plt>
 7b8:	bl	6e8 <deregister_tm_clones>
 7bc:	ldr	r3, [pc, #28]	; 7e0 <__do_global_dtors_aux+0x64>
 7c0:	mov	r2, #1
 7c4:	add	r3, pc, r3
 7c8:	strb	r2, [r3]
 7cc:	pop	{r4, pc}
 7d0:	.word	0x00011938
 7d4:	.word	0x00011870
 7d8:	.word	0x00000048
 7dc:	.word	0x000118a0
 7e0:	.word	0x000118f8

000007e4 <frame_dummy>:
 7e4:	b	72c <register_tm_clones>

000007e8 <dump_daq_initialize>:
 7e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 7ec:	add	fp, sp, #24
 7f0:	sub	sp, sp, #32
 7f4:	mov	r9, r3
 7f8:	mov	r5, r2
 7fc:	mov	r8, r1
 800:	mov	r6, r0
 804:	mov	r0, #1
 808:	mov	r1, #120	; 0x78
 80c:	bl	610 <calloc@plt>
 810:	mov	r4, r0
 814:	ldr	r7, [r6, #24]
 818:	mov	r0, #12
 81c:	vld1.32	{d16-d17}, [r6], r0
 820:	vld1.32	{d18-d19}, [r6]
 824:	mov	r1, sp
 828:	vst1.64	{d16-d17}, [r1], r0
 82c:	vst1.32	{d18-d19}, [r1]
 830:	cmp	r4, #0
 834:	beq	874 <dump_daq_initialize+0x8c>
 838:	cmp	r7, #0
 83c:	ldrbne	r0, [r7, #12]
 840:	tstne	r0, #1
 844:	bne	8a0 <dump_daq_initialize+0xb8>
 848:	ldr	r2, [pc, #180]	; 904 <dump_daq_initialize+0x11c>
 84c:	add	r2, pc, r2
 850:	ldr	r3, [pc, #176]	; 908 <dump_daq_initialize+0x120>
 854:	add	r3, pc, r3
 858:	mov	r0, r5
 85c:	mov	r1, r9
 860:	bl	694 <snprintf@plt>
 864:	mov	r0, r4
 868:	bl	634 <free@plt>
 86c:	mvn	r5, #0
 870:	b	894 <dump_daq_initialize+0xac>
 874:	ldr	r2, [pc, #128]	; 8fc <dump_daq_initialize+0x114>
 878:	add	r2, pc, r2
 87c:	ldr	r3, [pc, #124]	; 900 <dump_daq_initialize+0x118>
 880:	add	r3, pc, r3
 884:	mov	r0, r5
 888:	mov	r1, r9
 88c:	bl	694 <snprintf@plt>
 890:	mvn	r5, #1
 894:	mov	r0, r5
 898:	sub	sp, fp, #24
 89c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 8a0:	mov	r1, sp
 8a4:	mov	r0, r4
 8a8:	mov	r2, r5
 8ac:	mov	r3, r9
 8b0:	bl	cc8 <daq_dump_get_vars>
 8b4:	cmp	r0, #0
 8b8:	beq	864 <dump_daq_initialize+0x7c>
 8bc:	ldr	r6, [r7, #16]
 8c0:	add	r1, r4, #4
 8c4:	mov	r0, sp
 8c8:	mov	r2, r5
 8cc:	mov	r3, r9
 8d0:	blx	r6
 8d4:	cmp	r0, #0
 8d8:	beq	8ec <dump_daq_initialize+0x104>
 8dc:	mov	r5, r0
 8e0:	mov	r0, r4
 8e4:	bl	634 <free@plt>
 8e8:	b	894 <dump_daq_initialize+0xac>
 8ec:	str	r7, [r4]
 8f0:	str	r4, [r8]
 8f4:	mov	r5, #0
 8f8:	b	894 <dump_daq_initialize+0xac>
 8fc:	.word	0x00000601
 900:	.word	0x0000062a
 904:	.word	0x00000672
 908:	.word	0x00000656

0000090c <dump_daq_set_filter>:
 90c:	ldm	r0, {r0, r3}
 910:	ldr	r2, [r0, #20]
 914:	mov	r0, r3
 918:	bx	r2

0000091c <dump_daq_start>:
 91c:	push	{r4, r5, r6, sl, fp, lr}
 920:	add	fp, sp, #16
 924:	mov	r4, r0
 928:	ldrd	r0, [r0]
 92c:	ldr	r2, [r4, #12]
 930:	ldr	r5, [pc, #180]	; 9ec <dump_daq_start+0xd0>
 934:	add	r5, pc, r5
 938:	cmp	r2, #0
 93c:	movne	r5, r2
 940:	ldr	r2, [r0, #24]
 944:	mov	r0, r1
 948:	blx	r2
 94c:	cmp	r0, #0
 950:	popne	{r4, r5, r6, sl, fp, pc}
 954:	ldrd	r0, [r4]
 958:	ldr	r2, [r0, #68]	; 0x44
 95c:	mov	r0, r1
 960:	blx	r2
 964:	mov	r6, r0
 968:	ldrd	r0, [r4]
 96c:	ldr	r2, [r0, #60]	; 0x3c
 970:	mov	r0, r1
 974:	blx	r2
 978:	mov	r1, r0
 97c:	mov	r0, r6
 980:	bl	670 <pcap_open_dead@plt>
 984:	cmp	r0, #0
 988:	beq	9b4 <dump_daq_start+0x98>
 98c:	mov	r6, r0
 990:	mov	r1, r5
 994:	bl	6b8 <pcap_dump_open@plt>
 998:	str	r0, [r4, #8]
 99c:	cmp	r0, #0
 9a0:	beq	9bc <dump_daq_start+0xa0>
 9a4:	mov	r0, r6
 9a8:	bl	658 <pcap_close@plt>
 9ac:	mov	r0, #0
 9b0:	pop	{r4, r5, r6, sl, fp, pc}
 9b4:	mov	r0, #0
 9b8:	str	r0, [r4, #8]
 9bc:	ldrd	r0, [r4]
 9c0:	ldr	r2, [r0, #40]	; 0x28
 9c4:	mov	r0, r1
 9c8:	blx	r2
 9cc:	ldm	r4, {r0, r3}
 9d0:	ldr	r2, [r0, #76]	; 0x4c
 9d4:	ldr	r1, [pc, #20]	; 9f0 <dump_daq_start+0xd4>
 9d8:	add	r1, pc, r1
 9dc:	mov	r0, r3
 9e0:	blx	r2
 9e4:	mvn	r0, #0
 9e8:	pop	{r4, r5, r6, sl, fp, pc}
 9ec:	.word	0x000005e5
 9f0:	.word	0x00000551

000009f4 <dump_daq_acquire>:
 9f4:	push	{r5, sl, fp, lr}
 9f8:	add	fp, sp, #8
 9fc:	sub	sp, sp, #8
 a00:	str	r2, [r0, #16]
 a04:	ldr	r2, [fp, #8]
 a08:	str	r2, [r0, #20]
 a0c:	ldm	r0, {r2, r5}
 a10:	ldr	ip, [r2, #28]
 a14:	str	r0, [sp]
 a18:	ldr	r2, [pc, #16]	; a30 <dump_daq_acquire+0x3c>
 a1c:	add	r2, pc, r2
 a20:	mov	r0, r5
 a24:	blx	ip
 a28:	sub	sp, fp, #8
 a2c:	pop	{r5, sl, fp, pc}
 a30:	.word	0x000003e0

00000a34 <dump_daq_inject>:
 a34:	push	{r4, r5, fp, lr}
 a38:	add	fp, sp, #8
 a3c:	sub	sp, sp, #56	; 0x38
 a40:	mov	r5, r0
 a44:	add	r0, r1, #16
 a48:	add	r4, r1, #32
 a4c:	mov	ip, sp
 a50:	vld1.32	{d16-d17}, [r4]
 a54:	add	r4, ip, #32
 a58:	mov	lr, #48	; 0x30
 a5c:	vld1.32	{d18-d19}, [r0]
 a60:	vld1.32	{d20-d21}, [r1], lr
 a64:	vst1.64	{d16-d17}, [r4]
 a68:	add	r0, ip, #16
 a6c:	vst1.64	{d18-d19}, [r0]
 a70:	ldr	r0, [r1]
 a74:	mov	r1, #12
 a78:	mov	r4, ip
 a7c:	vst1.64	{d20-d21}, [r4], r1
 a80:	str	r3, [r4]
 a84:	str	r3, [sp, #8]
 a88:	str	r0, [sp, #48]	; 0x30
 a8c:	ldr	r0, [r5, #8]
 a90:	mov	r1, ip
 a94:	bl	67c <pcap_dump@plt>
 a98:	ldr	r0, [r5, #8]
 a9c:	bl	6a0 <pcap_dump_file@plt>
 aa0:	bl	640 <ferror@plt>
 aa4:	cmp	r0, #0
 aa8:	beq	ad0 <dump_daq_inject+0x9c>
 aac:	ldm	r5, {r0, r3}
 ab0:	ldr	r2, [r0, #76]	; 0x4c
 ab4:	ldr	r1, [pc, #48]	; aec <dump_daq_inject+0xb8>
 ab8:	add	r1, pc, r1
 abc:	mov	r0, r3
 ac0:	blx	r2
 ac4:	mvn	r0, #0
 ac8:	sub	sp, fp, #8
 acc:	pop	{r4, r5, fp, pc}
 ad0:	ldrd	r0, [r5, #56]	; 0x38
 ad4:	adds	r0, r0, #1
 ad8:	adc	r1, r1, #0
 adc:	strd	r0, [r5, #56]	; 0x38
 ae0:	mov	r0, #0
 ae4:	sub	sp, fp, #8
 ae8:	pop	{r4, r5, fp, pc}
 aec:	.word	0x00000486

00000af0 <dump_daq_breakloop>:
 af0:	ldrd	r0, [r0]
 af4:	ldr	r2, [r0, #36]	; 0x24
 af8:	mov	r0, r1
 afc:	bx	r2

00000b00 <dump_daq_stop>:
 b00:	push	{r4, r5, fp, lr}
 b04:	add	fp, sp, #8
 b08:	mov	r4, r0
 b0c:	ldrd	r0, [r0]
 b10:	ldr	r2, [r0, #40]	; 0x28
 b14:	mov	r0, r1
 b18:	blx	r2
 b1c:	mov	r5, r0
 b20:	cmp	r0, #0
 b24:	bne	b40 <dump_daq_stop+0x40>
 b28:	ldr	r0, [r4, #8]
 b2c:	cmp	r0, #0
 b30:	beq	b40 <dump_daq_stop+0x40>
 b34:	bl	6ac <pcap_dump_close@plt>
 b38:	mov	r0, #0
 b3c:	str	r0, [r4, #8]
 b40:	mov	r0, r5
 b44:	pop	{r4, r5, fp, pc}

00000b48 <dump_daq_shutdown>:
 b48:	push	{r4, sl, fp, lr}
 b4c:	add	fp, sp, #8
 b50:	mov	r4, r0
 b54:	ldrd	r0, [r0]
 b58:	ldr	r2, [r0, #44]	; 0x2c
 b5c:	mov	r0, r1
 b60:	blx	r2
 b64:	ldr	r0, [r4, #12]
 b68:	cmp	r0, #0
 b6c:	beq	b74 <dump_daq_shutdown+0x2c>
 b70:	bl	634 <free@plt>
 b74:	mov	r0, r4
 b78:	pop	{r4, sl, fp, lr}
 b7c:	b	634 <free@plt>

00000b80 <dump_daq_check_status>:
 b80:	ldrd	r0, [r0]
 b84:	ldr	r2, [r0, #48]	; 0x30
 b88:	mov	r0, r1
 b8c:	bx	r2

00000b90 <dump_daq_get_stats>:
 b90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 b94:	add	fp, sp, #24
 b98:	mov	r8, r1
 b9c:	mov	r5, r0
 ba0:	ldrd	r0, [r0]
 ba4:	ldr	r2, [r0, #52]	; 0x34
 ba8:	mov	r0, r1
 bac:	mov	r1, r8
 bb0:	blx	r2
 bb4:	add	r7, r8, #40	; 0x28
 bb8:	add	r4, r5, #64	; 0x40
 bbc:	mov	r3, #0
 bc0:	mov	r2, r4
 bc4:	ldr	r6, [r2, r3]!
 bc8:	ldr	r2, [r2, #4]
 bcc:	mov	r1, r7
 bd0:	str	r6, [r1, r3]!
 bd4:	str	r2, [r1, #4]
 bd8:	add	r3, r3, #8
 bdc:	cmp	r3, #56	; 0x38
 be0:	bne	bc0 <dump_daq_get_stats+0x30>
 be4:	ldrd	r2, [r5, #56]	; 0x38
 be8:	strd	r2, [r8, #32]
 bec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000bf0 <dump_daq_reset_stats>:
 bf0:	push	{r4, sl, fp, lr}
 bf4:	add	fp, sp, #8
 bf8:	mov	r4, r0
 bfc:	ldrd	r0, [r0]
 c00:	ldr	r2, [r0, #56]	; 0x38
 c04:	mov	r0, r1
 c08:	blx	r2
 c0c:	vmov.i32	q8, #0	; 0x00000000
 c10:	add	r0, r4, #104	; 0x68
 c14:	vst1.64	{d16-d17}, [r0]
 c18:	add	r0, r4, #88	; 0x58
 c1c:	vst1.64	{d16-d17}, [r0]
 c20:	add	r0, r4, #72	; 0x48
 c24:	vst1.64	{d16-d17}, [r0]
 c28:	add	r0, r4, #56	; 0x38
 c2c:	vst1.64	{d16-d17}, [r0]
 c30:	add	r0, r4, #40	; 0x28
 c34:	vst1.64	{d16-d17}, [r0]
 c38:	add	r0, r4, #24
 c3c:	vst1.64	{d16-d17}, [r0]
 c40:	pop	{r4, sl, fp, pc}

00000c44 <dump_daq_get_snaplen>:
 c44:	ldrd	r0, [r0]
 c48:	ldr	r2, [r0, #60]	; 0x3c
 c4c:	mov	r0, r1
 c50:	bx	r2

00000c54 <dump_daq_get_capabilities>:
 c54:	push	{fp, lr}
 c58:	mov	fp, sp
 c5c:	ldrd	r0, [r0]
 c60:	ldr	r2, [r0, #64]	; 0x40
 c64:	mov	r0, r1
 c68:	blx	r2
 c6c:	orr	r0, r0, #7
 c70:	pop	{fp, pc}

00000c74 <dump_daq_get_datalink_type>:
 c74:	ldrd	r0, [r0]
 c78:	ldr	r2, [r0, #68]	; 0x44
 c7c:	mov	r0, r1
 c80:	bx	r2

00000c84 <dump_daq_get_errbuf>:
 c84:	ldrd	r0, [r0]
 c88:	ldr	r2, [r0, #72]	; 0x48
 c8c:	mov	r0, r1
 c90:	bx	r2

00000c94 <dump_daq_set_errbuf>:
 c94:	ldr	r2, [pc, #24]	; cb4 <dump_daq_set_errbuf+0x20>
 c98:	add	r2, pc, r2
 c9c:	cmp	r1, #0
 ca0:	moveq	r1, r2
 ca4:	ldm	r0, {r0, r3}
 ca8:	ldr	r2, [r0, #76]	; 0x4c
 cac:	mov	r0, r3
 cb0:	bx	r2
 cb4:	.word	0x00000280

00000cb8 <dump_daq_get_device_index>:
 cb8:	ldm	r0, {r0, r3}
 cbc:	ldr	r2, [r0, #80]	; 0x50
 cc0:	mov	r0, r3
 cc4:	bx	r2

00000cc8 <daq_dump_get_vars>:
 cc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 ccc:	add	fp, sp, #28
 cd0:	sub	sp, sp, #12
 cd4:	mov	r7, r0
 cd8:	ldr	sl, [r1, #20]
 cdc:	mov	r0, #1
 ce0:	cmp	sl, #0
 ce4:	beq	db8 <daq_dump_get_vars+0xf0>
 ce8:	mov	r5, r1
 cec:	stmib	sp, {r2, r3}
 cf0:	mov	r6, #0
 cf4:	ldr	r4, [pc, #240]	; dec <daq_dump_get_vars+0x124>
 cf8:	add	r4, pc, r4
 cfc:	ldr	r8, [pc, #236]	; df0 <daq_dump_get_vars+0x128>
 d00:	add	r8, pc, r8
 d04:	ldr	r9, [sl]
 d08:	mov	r0, r9
 d0c:	mov	r1, r4
 d10:	bl	61c <strcmp@plt>
 d14:	cmp	r0, #0
 d18:	beq	d40 <daq_dump_get_vars+0x78>
 d1c:	mov	r0, r9
 d20:	mov	r1, r8
 d24:	bl	61c <strcmp@plt>
 d28:	cmp	r0, #0
 d2c:	bne	d44 <daq_dump_get_vars+0x7c>
 d30:	ldr	r0, [sl, #4]
 d34:	bl	64c <strdup@plt>
 d38:	str	r0, [r7, #12]
 d3c:	b	d44 <daq_dump_get_vars+0x7c>
 d40:	ldr	r6, [sl, #4]
 d44:	ldr	sl, [sl, #8]
 d48:	cmp	sl, #0
 d4c:	bne	d04 <daq_dump_get_vars+0x3c>
 d50:	cmp	r6, #0
 d54:	beq	dd0 <daq_dump_get_vars+0x108>
 d58:	ldr	r1, [pc, #148]	; df4 <daq_dump_get_vars+0x12c>
 d5c:	add	r1, pc, r1
 d60:	mov	r0, r6
 d64:	bl	664 <strcasecmp@plt>
 d68:	cmp	r0, #0
 d6c:	beq	dc0 <daq_dump_get_vars+0xf8>
 d70:	ldr	r1, [pc, #128]	; df8 <daq_dump_get_vars+0x130>
 d74:	add	r1, pc, r1
 d78:	mov	r0, r6
 d7c:	bl	664 <strcasecmp@plt>
 d80:	cmp	r0, #0
 d84:	beq	dc8 <daq_dump_get_vars+0x100>
 d88:	ldr	r1, [pc, #108]	; dfc <daq_dump_get_vars+0x134>
 d8c:	add	r1, pc, r1
 d90:	mov	r0, r6
 d94:	bl	664 <strcasecmp@plt>
 d98:	cmp	r0, #0
 d9c:	beq	ddc <daq_dump_get_vars+0x114>
 da0:	ldr	r2, [pc, #88]	; e00 <daq_dump_get_vars+0x138>
 da4:	add	r2, pc, r2
 da8:	ldmib	sp, {r0, r1}
 dac:	mov	r3, r6
 db0:	bl	694 <snprintf@plt>
 db4:	mov	r0, #0
 db8:	sub	sp, fp, #28
 dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 dc0:	mov	r0, #2
 dc4:	b	dcc <daq_dump_get_vars+0x104>
 dc8:	mov	r0, #0
 dcc:	str	r0, [r5, #12]
 dd0:	mov	r0, #1
 dd4:	sub	sp, fp, #28
 dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 ddc:	mov	r0, #1
 de0:	str	r0, [r5, #12]
 de4:	sub	sp, fp, #28
 de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 dec:	.word	0x000001e7
 df0:	.word	0x00000239
 df4:	.word	0x0000018d
 df8:	.word	0x0000017f
 dfc:	.word	0x0000016f
 e00:	.word	0x0000015e

00000e04 <daq_dump_capture>:
 e04:	push	{r4, r5, r6, r7, fp, lr}
 e08:	add	fp, sp, #16
 e0c:	mov	r4, r2
 e10:	mov	r5, r1
 e14:	mov	r7, r0
 e18:	ldr	r6, [r0, #16]
 e1c:	ldr	r1, [r0, #20]
 e20:	mov	r0, r1
 e24:	mov	r1, r5
 e28:	blx	r6
 e2c:	mov	r6, r0
 e30:	cmp	r0, #6
 e34:	movwhi	r6, #1
 e38:	add	r0, r7, r6, lsl #3
 e3c:	ldrd	r2, [r0, #64]	; 0x40
 e40:	adds	r2, r2, #1
 e44:	adc	r3, r3, #0
 e48:	strd	r2, [r0, #64]	; 0x40
 e4c:	mov	r0, #45	; 0x2d
 e50:	mov	r1, #1
 e54:	tst	r1, r0, lsr r6
 e58:	beq	e6c <daq_dump_capture+0x68>
 e5c:	ldr	r0, [r7, #8]
 e60:	mov	r1, r5
 e64:	mov	r2, r4
 e68:	bl	67c <pcap_dump@plt>
 e6c:	mov	r0, r6
 e70:	pop	{r4, r5, r6, r7, fp, pc}

Disassembly of section .fini:

00000e74 <_fini>:
 e74:	push	{r3, lr}
 e78:	pop	{r3, pc}
