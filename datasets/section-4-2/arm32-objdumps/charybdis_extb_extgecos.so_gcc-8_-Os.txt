
../repos/charybdis/extensions/.libs/extb_extgecos.so:     file format elf32-littlearm


Disassembly of section .init:

0000038c <_init>:
 38c:	push	{r3, lr}
 390:	bl	3dc <call_weak_fn>
 394:	pop	{r3, pc}

Disassembly of section .plt:

00000398 <.plt>:
 398:	push	{lr}		; (str lr, [sp, #-4]!)
 39c:	ldr	lr, [pc, #4]	; 3a8 <.plt+0x10>
 3a0:	add	lr, pc, lr
 3a4:	ldr	pc, [lr, #8]!
 3a8:	.word	0x00010c58

000003ac <__cxa_finalize@plt>:
 3ac:	add	ip, pc, #0, 12
 3b0:	add	ip, ip, #16, 20	; 0x10000
 3b4:	ldr	pc, [ip, #3160]!	; 0xc58

000003b8 <__gmon_start__@plt>:
 3b8:	add	ip, pc, #0, 12
 3bc:	add	ip, ip, #16, 20	; 0x10000
 3c0:	ldr	pc, [ip, #3152]!	; 0xc50

000003c4 <snprintf@plt>:
 3c4:	add	ip, pc, #0, 12
 3c8:	add	ip, ip, #16, 20	; 0x10000
 3cc:	ldr	pc, [ip, #3144]!	; 0xc48

000003d0 <match@plt>:
 3d0:	add	ip, pc, #0, 12
 3d4:	add	ip, ip, #16, 20	; 0x10000
 3d8:	ldr	pc, [ip, #3136]!	; 0xc40

Disassembly of section .text:

000003dc <call_weak_fn>:
 3dc:	ldr	r3, [pc, #20]	; 3f8 <call_weak_fn+0x1c>
 3e0:	ldr	r2, [pc, #20]	; 3fc <call_weak_fn+0x20>
 3e4:	add	r3, pc, r3
 3e8:	ldr	r2, [r3, r2]
 3ec:	cmp	r2, #0
 3f0:	bxeq	lr
 3f4:	b	3b8 <__gmon_start__@plt>
 3f8:	.word	0x00010c14
 3fc:	.word	0x00000024

00000400 <deregister_tm_clones>:
 400:	ldr	r0, [pc, #44]	; 434 <deregister_tm_clones+0x34>
 404:	ldr	r3, [pc, #44]	; 438 <deregister_tm_clones+0x38>
 408:	add	r0, pc, r0
 40c:	add	r3, pc, r3
 410:	cmp	r3, r0
 414:	ldr	r3, [pc, #32]	; 43c <deregister_tm_clones+0x3c>
 418:	add	r3, pc, r3
 41c:	bxeq	lr
 420:	ldr	r2, [pc, #24]	; 440 <deregister_tm_clones+0x40>
 424:	ldr	r3, [r3, r2]
 428:	cmp	r3, #0
 42c:	bxeq	lr
 430:	bx	r3
 434:	.word	0x00010c4c
 438:	.word	0x00010c48
 43c:	.word	0x00010be0
 440:	.word	0x00000020

00000444 <register_tm_clones>:
 444:	ldr	r0, [pc, #56]	; 484 <register_tm_clones+0x40>
 448:	ldr	r3, [pc, #56]	; 488 <register_tm_clones+0x44>
 44c:	add	r0, pc, r0
 450:	add	r3, pc, r3
 454:	sub	r1, r3, r0
 458:	ldr	r3, [pc, #44]	; 48c <register_tm_clones+0x48>
 45c:	asr	r1, r1, #2
 460:	add	r3, pc, r3
 464:	add	r1, r1, r1, lsr #31
 468:	asrs	r1, r1, #1
 46c:	bxeq	lr
 470:	ldr	r2, [pc, #24]	; 490 <register_tm_clones+0x4c>
 474:	ldr	r3, [r3, r2]
 478:	cmp	r3, #0
 47c:	bxeq	lr
 480:	bx	r3
 484:	.word	0x00010c08
 488:	.word	0x00010c04
 48c:	.word	0x00010b98
 490:	.word	0x0000002c

00000494 <__do_global_dtors_aux>:
 494:	ldr	r3, [pc, #76]	; 4e8 <__do_global_dtors_aux+0x54>
 498:	ldr	r2, [pc, #76]	; 4ec <__do_global_dtors_aux+0x58>
 49c:	add	r3, pc, r3
 4a0:	add	r2, pc, r2
 4a4:	ldrb	r3, [r3]
 4a8:	cmp	r3, #0
 4ac:	bxne	lr
 4b0:	ldr	r3, [pc, #56]	; 4f0 <__do_global_dtors_aux+0x5c>
 4b4:	push	{r4, lr}
 4b8:	ldr	r3, [r2, r3]
 4bc:	cmp	r3, #0
 4c0:	beq	4d0 <__do_global_dtors_aux+0x3c>
 4c4:	ldr	r3, [pc, #40]	; 4f4 <__do_global_dtors_aux+0x60>
 4c8:	ldr	r0, [pc, r3]
 4cc:	bl	3ac <__cxa_finalize@plt>
 4d0:	bl	400 <deregister_tm_clones>
 4d4:	ldr	r3, [pc, #28]	; 4f8 <__do_global_dtors_aux+0x64>
 4d8:	mov	r2, #1
 4dc:	add	r3, pc, r3
 4e0:	strb	r2, [r3]
 4e4:	pop	{r4, pc}
 4e8:	.word	0x00010bb8
 4ec:	.word	0x00010b58
 4f0:	.word	0x0000001c
 4f4:	.word	0x00010b60
 4f8:	.word	0x00010b78

000004fc <frame_dummy>:
 4fc:	b	444 <register_tm_clones>

00000500 <_modinit>:
 500:	ldr	r3, [pc, #28]	; 524 <_modinit+0x24>
 504:	mov	r0, #0
 508:	ldr	r2, [pc, #24]	; 528 <_modinit+0x28>
 50c:	add	r3, pc, r3
 510:	ldr	r3, [r3, r2]
 514:	ldr	r2, [pc, #16]	; 52c <_modinit+0x2c>
 518:	add	r2, pc, r2
 51c:	str	r2, [r3, #480]	; 0x1e0
 520:	bx	lr
 524:	.word	0x00010aec
 528:	.word	0x00000028
 52c:	.word	0x000000f0

00000530 <_moddeinit>:
 530:	ldr	r3, [pc, #20]	; 54c <_moddeinit+0x1c>
 534:	ldr	r2, [pc, #20]	; 550 <_moddeinit+0x20>
 538:	add	r3, pc, r3
 53c:	ldr	r3, [r3, r2]
 540:	mov	r2, #0
 544:	str	r2, [r3, #480]	; 0x1e0
 548:	bx	lr
 54c:	.word	0x00010ac0
 550:	.word	0x00000028

00000554 <eb_extended.part.0>:
 554:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 558:	add	r6, r1, #344	; 0x158
 55c:	sub	sp, sp, #528	; 0x210
 560:	add	r3, r1, #163	; 0xa3
 564:	add	sl, r1, #152	; 0x98
 568:	add	r6, r6, #1
 56c:	add	r9, r1, #88	; 0x58
 570:	ldr	r8, [pc, #148]	; 60c <eb_extended.part.0+0xb8>
 574:	add	r5, sp, #16
 578:	mov	r7, r0
 57c:	mov	r4, r1
 580:	mov	r0, r5
 584:	str	sl, [sp]
 588:	mov	r1, #512	; 0x200
 58c:	stmib	sp, {r3, r6}
 590:	mov	r3, r9
 594:	add	r8, pc, r8
 598:	mov	r2, r8
 59c:	bl	3c4 <snprintf@plt>
 5a0:	mov	r1, r5
 5a4:	mov	r0, r7
 5a8:	bl	3d0 <match@plt>
 5ac:	subs	r1, r0, #0
 5b0:	movne	r0, #1
 5b4:	moveq	r0, #0
 5b8:	bne	604 <eb_extended.part.0+0xb0>
 5bc:	ldr	ip, [r4, #64]	; 0x40
 5c0:	mov	r3, r1
 5c4:	and	r2, ip, #131072	; 0x20000
 5c8:	orrs	r3, r2, r3
 5cc:	beq	604 <eb_extended.part.0+0xb0>
 5d0:	add	r4, r4, #227	; 0xe3
 5d4:	mov	r3, r9
 5d8:	str	sl, [sp]
 5dc:	mov	r2, r8
 5e0:	mov	r1, #512	; 0x200
 5e4:	mov	r0, r5
 5e8:	stmib	sp, {r4, r6}
 5ec:	bl	3c4 <snprintf@plt>
 5f0:	mov	r1, r5
 5f4:	mov	r0, r7
 5f8:	bl	3d0 <match@plt>
 5fc:	adds	r0, r0, #0
 600:	movne	r0, #1
 604:	add	sp, sp, #528	; 0x210
 608:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 60c:	.word	0x000000af

00000610 <eb_extended>:
 610:	cmp	r0, #0
 614:	beq	61c <eb_extended+0xc>
 618:	b	554 <eb_extended.part.0>
 61c:	mvn	r0, #0
 620:	bx	lr

Disassembly of section .fini:

00000624 <_fini>:
 624:	push	{r3, lr}
 628:	pop	{r3, pc}
