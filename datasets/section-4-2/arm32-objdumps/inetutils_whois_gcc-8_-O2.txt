
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

00011098 <.init>:
   11098:	push	{r3, lr}
   1109c:	bl	118e4 <__assert_fail@plt+0x52c>
   110a0:	pop	{r3, pc}

Disassembly of section .plt:

000110a4 <fdopen@plt-0x14>:
   110a4:	push	{lr}		; (str lr, [sp, #-4]!)
   110a8:	ldr	lr, [pc, #4]	; 110b4 <fdopen@plt-0x4>
   110ac:	add	lr, pc, lr
   110b0:	ldr	pc, [lr, #8]!
   110b4:	andeq	fp, r1, ip, asr #30

000110b8 <fdopen@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #110592	; 0x1b000
   110c0:	ldr	pc, [ip, #3916]!	; 0xf4c

000110c4 <calloc@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #110592	; 0x1b000
   110cc:	ldr	pc, [ip, #3908]!	; 0xf44

000110d0 <fputs_unlocked@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #110592	; 0x1b000
   110d8:	ldr	pc, [ip, #3900]!	; 0xf3c

000110dc <inet_aton@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #110592	; 0x1b000
   110e4:	ldr	pc, [ip, #3892]!	; 0xf34

000110e8 <strcmp@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #110592	; 0x1b000
   110f0:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f4 <strtol@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #110592	; 0x1b000
   110fc:	ldr	pc, [ip, #3876]!	; 0xf24

00011100 <printf@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #110592	; 0x1b000
   11108:	ldr	pc, [ip, #3868]!	; 0xf1c

0001110c <memmove@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #110592	; 0x1b000
   11114:	ldr	pc, [ip, #3860]!	; 0xf14

00011118 <strchrnul@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #110592	; 0x1b000
   11120:	ldr	pc, [ip, #3852]!	; 0xf0c

00011124 <free@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #110592	; 0x1b000
   1112c:	ldr	pc, [ip, #3844]!	; 0xf04

00011130 <gai_strerror@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #110592	; 0x1b000
   11138:	ldr	pc, [ip, #3836]!	; 0xefc

0001113c <fgets@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #110592	; 0x1b000
   11144:	ldr	pc, [ip, #3828]!	; 0xef4

00011148 <ferror@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #110592	; 0x1b000
   11150:	ldr	pc, [ip, #3820]!	; 0xeec

00011154 <strndup@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #110592	; 0x1b000
   1115c:	ldr	pc, [ip, #3812]!	; 0xee4

00011160 <memcpy@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #110592	; 0x1b000
   11168:	ldr	pc, [ip, #3804]!	; 0xedc

0001116c <signal@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #110592	; 0x1b000
   11174:	ldr	pc, [ip, #3796]!	; 0xed4

00011178 <fwrite_unlocked@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #110592	; 0x1b000
   11180:	ldr	pc, [ip, #3788]!	; 0xecc

00011184 <sleep@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #110592	; 0x1b000
   1118c:	ldr	pc, [ip, #3780]!	; 0xec4

00011190 <stpcpy@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #110592	; 0x1b000
   11198:	ldr	pc, [ip, #3772]!	; 0xebc

0001119c <realloc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #110592	; 0x1b000
   111a4:	ldr	pc, [ip, #3764]!	; 0xeb4

000111a8 <strcasecmp@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #110592	; 0x1b000
   111b0:	ldr	pc, [ip, #3756]!	; 0xeac

000111b4 <funlockfile@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #110592	; 0x1b000
   111bc:	ldr	pc, [ip, #3748]!	; 0xea4

000111c0 <fwrite@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #110592	; 0x1b000
   111c8:	ldr	pc, [ip, #3740]!	; 0xe9c

000111cc <strcat@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #110592	; 0x1b000
   111d4:	ldr	pc, [ip, #3732]!	; 0xe94

000111d8 <strcpy@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #110592	; 0x1b000
   111e0:	ldr	pc, [ip, #3724]!	; 0xe8c

000111e4 <error@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #110592	; 0x1b000
   111ec:	ldr	pc, [ip, #3716]!	; 0xe84

000111f0 <getenv@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #110592	; 0x1b000
   111f8:	ldr	pc, [ip, #3708]!	; 0xe7c

000111fc <puts@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #110592	; 0x1b000
   11204:	ldr	pc, [ip, #3700]!	; 0xe74

00011208 <malloc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #110592	; 0x1b000
   11210:	ldr	pc, [ip, #3692]!	; 0xe6c

00011214 <__libc_start_main@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #110592	; 0x1b000
   1121c:	ldr	pc, [ip, #3684]!	; 0xe64

00011220 <strerror@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #110592	; 0x1b000
   11228:	ldr	pc, [ip, #3676]!	; 0xe5c

0001122c <__ctype_tolower_loc@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #110592	; 0x1b000
   11234:	ldr	pc, [ip, #3668]!	; 0xe54

00011238 <__gmon_start__@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #110592	; 0x1b000
   11240:	ldr	pc, [ip, #3660]!	; 0xe4c

00011244 <mempcpy@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #110592	; 0x1b000
   1124c:	ldr	pc, [ip, #3652]!	; 0xe44

00011250 <__ctype_b_loc@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #110592	; 0x1b000
   11258:	ldr	pc, [ip, #3644]!	; 0xe3c

0001125c <exit@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #110592	; 0x1b000
   11264:	ldr	pc, [ip, #3636]!	; 0xe34

00011268 <strlen@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #110592	; 0x1b000
   11270:	ldr	pc, [ip, #3628]!	; 0xe2c

00011274 <strchr@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #110592	; 0x1b000
   1127c:	ldr	pc, [ip, #3620]!	; 0xe24

00011280 <fprintf@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #110592	; 0x1b000
   11288:	ldr	pc, [ip, #3612]!	; 0xe1c

0001128c <__errno_location@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #110592	; 0x1b000
   11294:	ldr	pc, [ip, #3604]!	; 0xe14

00011298 <strncasecmp@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #110592	; 0x1b000
   112a0:	ldr	pc, [ip, #3596]!	; 0xe0c

000112a4 <strerror_r@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #110592	; 0x1b000
   112ac:	ldr	pc, [ip, #3588]!	; 0xe04

000112b0 <memset@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #110592	; 0x1b000
   112b8:	ldr	pc, [ip, #3580]!	; 0xdfc

000112bc <write@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #110592	; 0x1b000
   112c4:	ldr	pc, [ip, #3572]!	; 0xdf4

000112c8 <memchr@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #110592	; 0x1b000
   112d0:	ldr	pc, [ip, #3564]!	; 0xdec

000112d4 <__overflow@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #110592	; 0x1b000
   112dc:	ldr	pc, [ip, #3556]!	; 0xde4

000112e0 <strrchr@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #110592	; 0x1b000
   112e8:	ldr	pc, [ip, #3548]!	; 0xddc

000112ec <vfprintf@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #110592	; 0x1b000
   112f4:	ldr	pc, [ip, #3540]!	; 0xdd4

000112f8 <fputc@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #110592	; 0x1b000
   11300:	ldr	pc, [ip, #3532]!	; 0xdcc

00011304 <sscanf@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #110592	; 0x1b000
   1130c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011310 <sprintf@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #110592	; 0x1b000
   11318:	ldr	pc, [ip, #3516]!	; 0xdbc

0001131c <flockfile@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #110592	; 0x1b000
   11324:	ldr	pc, [ip, #3508]!	; 0xdb4

00011328 <vsnprintf@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #110592	; 0x1b000
   11330:	ldr	pc, [ip, #3500]!	; 0xdac

00011334 <qsort@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #110592	; 0x1b000
   1133c:	ldr	pc, [ip, #3492]!	; 0xda4

00011340 <strpbrk@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #110592	; 0x1b000
   11348:	ldr	pc, [ip, #3484]!	; 0xd9c

0001134c <freeaddrinfo@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #110592	; 0x1b000
   11354:	ldr	pc, [ip, #3476]!	; 0xd94

00011358 <getaddrinfo@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #110592	; 0x1b000
   11360:	ldr	pc, [ip, #3468]!	; 0xd8c

00011364 <socket@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #110592	; 0x1b000
   1136c:	ldr	pc, [ip, #3460]!	; 0xd84

00011370 <gethostbyname@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #110592	; 0x1b000
   11378:	ldr	pc, [ip, #3452]!	; 0xd7c

0001137c <fputs@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #110592	; 0x1b000
   11384:	ldr	pc, [ip, #3444]!	; 0xd74

00011388 <strncmp@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #110592	; 0x1b000
   11390:	ldr	pc, [ip, #3436]!	; 0xd6c

00011394 <abort@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #110592	; 0x1b000
   1139c:	ldr	pc, [ip, #3428]!	; 0xd64

000113a0 <close@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #110592	; 0x1b000
   113a8:	ldr	pc, [ip, #3420]!	; 0xd5c

000113ac <connect@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #110592	; 0x1b000
   113b4:	ldr	pc, [ip, #3412]!	; 0xd54

000113b8 <__assert_fail@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #110592	; 0x1b000
   113c0:	ldr	pc, [ip, #3404]!	; 0xd4c

Disassembly of section .text:

000113c4 <argp_parse@@Base-0x1dfc>:
   113c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   113c8:	movw	r4, #2316	; 0x90c
   113cc:	movt	r4, #3
   113d0:	strd	r6, [sp, #8]
   113d4:	strd	r8, [sp, #16]
   113d8:	mov	r8, r1
   113dc:	strd	sl, [sp, #24]
   113e0:	mov	sl, r0
   113e4:	str	lr, [sp, #32]
   113e8:	sub	sp, sp, #36	; 0x24
   113ec:	ldr	r0, [r1]
   113f0:	bl	1468c <_obstack_memory_used@@Base+0x34>
   113f4:	movw	r3, #16804	; 0x41a4
   113f8:	movt	r3, #1
   113fc:	mov	r2, #0
   11400:	mov	r0, r4
   11404:	mov	r1, r2
   11408:	str	r3, [sp]
   1140c:	movw	r3, #20720	; 0x50f0
   11410:	movt	r3, #1
   11414:	bl	143f8 <_obstack_begin@@Base>
   11418:	movw	r3, #2364	; 0x93c
   1141c:	movt	r3, #3
   11420:	ldr	r1, [pc, #1140]	; 1189c <__assert_fail@plt+0x4e4>
   11424:	movw	r2, #40804	; 0x9f64
   11428:	movt	r2, #1
   1142c:	movw	r0, #40612	; 0x9ea4
   11430:	movt	r0, #1
   11434:	str	r2, [r3]
   11438:	bl	140c8 <argp_parse@@Base+0xf08>
   1143c:	mov	ip, #0
   11440:	add	r3, sp, #28
   11444:	ldr	r0, [pc, #1108]	; 118a0 <__assert_fail@plt+0x4e8>
   11448:	mov	r2, r8
   1144c:	mov	r1, sl
   11450:	stm	sp, {r3, ip}
   11454:	mov	r3, #8
   11458:	bl	131c0 <argp_parse@@Base>
   1145c:	ldr	r3, [r4, #12]
   11460:	ldr	r2, [r4, #16]
   11464:	cmp	r2, r3
   11468:	beq	1173c <__assert_fail@plt+0x384>
   1146c:	add	r1, r3, #1
   11470:	mov	r2, #0
   11474:	str	r1, [r4, #12]
   11478:	strb	r2, [r3]
   1147c:	ldr	r3, [r4, #8]
   11480:	ldr	r2, [r4, #12]
   11484:	str	r3, [sp, #20]
   11488:	cmp	r2, r3
   1148c:	beq	11708 <__assert_fail@plt+0x350>
   11490:	ldr	r1, [r4, #4]
   11494:	movw	r9, #2244	; 0x8c4
   11498:	movt	r9, #3
   1149c:	ldr	ip, [r4, #24]
   114a0:	ldr	r0, [r4, #16]
   114a4:	ldr	r6, [sp, #28]
   114a8:	add	r3, r2, ip
   114ac:	bic	r3, r3, ip
   114b0:	sub	r2, r3, r1
   114b4:	sub	r1, r0, r1
   114b8:	cmp	r2, r1
   114bc:	movhi	r3, r0
   114c0:	subs	r2, sl, r6
   114c4:	mov	r5, r3
   114c8:	str	r3, [r4, #8]
   114cc:	str	r2, [sp, #8]
   114d0:	str	r3, [r4, #12]
   114d4:	bne	11610 <__assert_fail@plt+0x258>
   114d8:	ldr	r3, [r9]
   114dc:	cmp	r3, #0
   114e0:	beq	115fc <__assert_fail@plt+0x244>
   114e4:	ldr	r3, [r4, #16]
   114e8:	cmp	r3, r5
   114ec:	beq	116c8 <__assert_fail@plt+0x310>
   114f0:	add	r2, r5, #1
   114f4:	mov	r3, #0
   114f8:	str	r2, [r4, #12]
   114fc:	strb	r3, [r5]
   11500:	ldr	r5, [r4, #8]
   11504:	ldr	r1, [r4, #12]
   11508:	cmp	r1, r5
   1150c:	beq	11718 <__assert_fail@plt+0x360>
   11510:	ldr	r0, [r4, #4]
   11514:	ldr	ip, [r4, #24]
   11518:	ldr	r2, [r4, #16]
   1151c:	add	r3, r1, ip
   11520:	ldr	r1, [r9, #4]
   11524:	bic	r3, r3, ip
   11528:	sub	ip, r3, r0
   1152c:	sub	r0, r2, r0
   11530:	cmp	ip, r0
   11534:	movhi	r3, r2
   11538:	cmp	r1, #0
   1153c:	str	r3, [r4, #8]
   11540:	str	r3, [r4, #12]
   11544:	beq	11750 <__assert_fail@plt+0x398>
   11548:	movw	r4, #2360	; 0x938
   1154c:	movt	r4, #3
   11550:	movw	r0, #41112	; 0xa098
   11554:	movt	r0, #1
   11558:	bl	111f0 <getenv@plt>
   1155c:	cmp	r0, #0
   11560:	beq	11574 <__assert_fail@plt+0x1bc>
   11564:	movw	r3, #53532	; 0xd11c
   11568:	movt	r3, #2
   1156c:	mov	r2, #0
   11570:	str	r2, [r3]
   11574:	mov	r2, r5
   11578:	ldr	r0, [r9, #4]
   1157c:	ldr	r1, [sp, #20]
   11580:	bl	11e34 <__assert_fail@plt+0xa7c>
   11584:	ldr	r3, [r9, #12]
   11588:	mov	r5, r0
   1158c:	cmp	r3, #0
   11590:	bne	11728 <__assert_fail@plt+0x370>
   11594:	mov	r0, r5
   11598:	bl	11268 <strlen@plt>
   1159c:	movw	r3, #40548	; 0x9e64
   115a0:	movt	r3, #1
   115a4:	ldrh	ip, [r3]
   115a8:	add	r2, r5, r0
   115ac:	movw	r1, #11212	; 0x2bcc
   115b0:	movt	r1, #1
   115b4:	ldrb	r3, [r3, #2]
   115b8:	strh	ip, [r5, r0]
   115bc:	mov	r0, #15
   115c0:	strb	r3, [r2, #2]
   115c4:	bl	1116c <signal@plt>
   115c8:	movw	r1, #11212	; 0x2bcc
   115cc:	movt	r1, #1
   115d0:	mov	r0, #2
   115d4:	bl	1116c <signal@plt>
   115d8:	ldrd	r0, [r9, #4]
   115dc:	bl	127ec <__assert_fail@plt+0x1434>
   115e0:	mov	r1, r5
   115e4:	str	r0, [r4]
   115e8:	bl	1292c <__assert_fail@plt+0x1574>
   115ec:	ldr	r0, [r4]
   115f0:	bl	113a0 <close@plt>
   115f4:	mov	r0, #0
   115f8:	bl	1125c <exit@plt>
   115fc:	movw	r2, #40828	; 0x9f7c
   11600:	movt	r2, #1
   11604:	ldr	r1, [sp, #8]
   11608:	mov	r0, #1
   1160c:	bl	111e4 <error@plt>
   11610:	ldr	r7, [r9]
   11614:	cmp	r7, #0
   11618:	ldrne	r5, [r4, #12]
   1161c:	bne	114e4 <__assert_fail@plt+0x12c>
   11620:	movw	r3, #2316	; 0x90c
   11624:	movt	r3, #3
   11628:	add	r8, r8, r6, lsl #2
   1162c:	str	r3, [sp, #12]
   11630:	sub	r8, r8, #4
   11634:	ldr	r3, [sp, #8]
   11638:	str	r9, [sp, #16]
   1163c:	sub	sl, r3, #1
   11640:	b	11664 <__assert_fail@plt+0x2ac>
   11644:	ldr	r3, [r4, #16]
   11648:	cmp	r5, r3
   1164c:	beq	116f4 <__assert_fail@plt+0x33c>
   11650:	add	r3, r5, #1
   11654:	add	r7, r7, #1
   11658:	str	r3, [r4, #12]
   1165c:	mov	r3, #32
   11660:	strb	r3, [r5]
   11664:	ldr	r3, [sp, #8]
   11668:	ldr	r5, [r4, #12]
   1166c:	ldr	r6, [r4, #16]
   11670:	cmp	r3, r7
   11674:	beq	116b8 <__assert_fail@plt+0x300>
   11678:	ldr	fp, [r8, #4]!
   1167c:	sub	r6, r6, r5
   11680:	mov	r0, fp
   11684:	bl	11268 <strlen@plt>
   11688:	cmp	r0, r6
   1168c:	mov	r9, r0
   11690:	bhi	116e0 <__assert_fail@plt+0x328>
   11694:	mov	r0, r5
   11698:	mov	r1, fp
   1169c:	mov	r2, r9
   116a0:	bl	11160 <memcpy@plt>
   116a4:	ldr	r5, [r4, #12]
   116a8:	cmp	sl, r7
   116ac:	add	r5, r5, r9
   116b0:	str	r5, [r4, #12]
   116b4:	bne	11644 <__assert_fail@plt+0x28c>
   116b8:	ldr	r3, [r4, #16]
   116bc:	ldr	r9, [sp, #16]
   116c0:	cmp	r3, r5
   116c4:	bne	114f0 <__assert_fail@plt+0x138>
   116c8:	movw	r0, #2316	; 0x90c
   116cc:	movt	r0, #3
   116d0:	mov	r1, #1
   116d4:	bl	14460 <_obstack_newchunk@@Base>
   116d8:	ldr	r5, [r4, #12]
   116dc:	b	114f0 <__assert_fail@plt+0x138>
   116e0:	mov	r1, r0
   116e4:	ldr	r0, [sp, #12]
   116e8:	bl	14460 <_obstack_newchunk@@Base>
   116ec:	ldr	r5, [r4, #12]
   116f0:	b	11694 <__assert_fail@plt+0x2dc>
   116f4:	mov	r1, #1
   116f8:	ldr	r0, [sp, #12]
   116fc:	bl	14460 <_obstack_newchunk@@Base>
   11700:	ldr	r5, [r4, #12]
   11704:	b	11650 <__assert_fail@plt+0x298>
   11708:	ldrb	r3, [r4, #40]	; 0x28
   1170c:	orr	r3, r3, #2
   11710:	strb	r3, [r4, #40]	; 0x28
   11714:	b	11490 <__assert_fail@plt+0xd8>
   11718:	ldrb	r3, [r4, #40]	; 0x28
   1171c:	orr	r3, r3, #2
   11720:	strb	r3, [r4, #40]	; 0x28
   11724:	b	11510 <__assert_fail@plt+0x158>
   11728:	movw	r0, #41124	; 0xa0a4
   1172c:	movt	r0, #1
   11730:	mov	r1, r5
   11734:	bl	11100 <printf@plt>
   11738:	b	11594 <__assert_fail@plt+0x1dc>
   1173c:	mov	r1, #1
   11740:	mov	r0, r4
   11744:	bl	14460 <_obstack_newchunk@@Base>
   11748:	ldr	r3, [r4, #12]
   1174c:	b	1146c <__assert_fail@plt+0xb4>
   11750:	ldr	r1, [pc, #332]	; 118a4 <__assert_fail@plt+0x4ec>
   11754:	mov	r0, r5
   11758:	bl	12538 <__assert_fail@plt+0x1180>
   1175c:	cmp	r0, #0
   11760:	beq	117c4 <__assert_fail@plt+0x40c>
   11764:	ldr	r3, [r9, #12]
   11768:	cmp	r3, #0
   1176c:	bne	11864 <__assert_fail@plt+0x4ac>
   11770:	mov	r1, #0
   11774:	movw	r0, #40888	; 0x9fb8
   11778:	movt	r0, #1
   1177c:	movw	r4, #2360	; 0x938
   11780:	movt	r4, #3
   11784:	bl	127ec <__assert_fail@plt+0x1434>
   11788:	mov	r1, r5
   1178c:	str	r0, [r4]
   11790:	bl	125fc <__assert_fail@plt+0x1244>
   11794:	str	r0, [r9, #4]
   11798:	ldr	r0, [r4]
   1179c:	bl	113a0 <close@plt>
   117a0:	ldr	r1, [r9, #4]
   117a4:	cmp	r1, #0
   117a8:	beq	11808 <__assert_fail@plt+0x450>
   117ac:	movw	r0, #40908	; 0x9fcc
   117b0:	movt	r0, #1
   117b4:	bl	11100 <printf@plt>
   117b8:	ldr	r3, [r9, #4]
   117bc:	cmp	r3, #0
   117c0:	bne	11550 <__assert_fail@plt+0x198>
   117c4:	mov	r0, r5
   117c8:	bl	121a8 <__assert_fail@plt+0xdf0>
   117cc:	str	r0, [r9, #4]
   117d0:	ldrb	r3, [r0]
   117d4:	cmp	r3, #3
   117d8:	ldrls	pc, [pc, r3, lsl #2]
   117dc:	b	11874 <__assert_fail@plt+0x4bc>
   117e0:	andeq	r1, r1, r4, lsr #16
   117e4:	strdeq	r1, [r1], -r0
   117e8:	strdeq	r1, [r1], -ip
   117ec:	andeq	r1, r1, r0, lsl r8
   117f0:	movw	r0, #40988	; 0xa01c
   117f4:	movt	r0, #1
   117f8:	bl	111fc <puts@plt>
   117fc:	ldr	r0, [r9, #4]
   11800:	add	r0, r0, #1
   11804:	bl	111fc <puts@plt>
   11808:	mov	r0, #0
   1180c:	bl	1125c <exit@plt>
   11810:	movw	r0, #41060	; 0xa064
   11814:	movt	r0, #1
   11818:	bl	111fc <puts@plt>
   1181c:	mov	r0, #0
   11820:	bl	1125c <exit@plt>
   11824:	movw	r0, #40944	; 0x9ff0
   11828:	movt	r0, #1
   1182c:	bl	111f0 <getenv@plt>
   11830:	cmp	r0, #0
   11834:	movweq	r3, #40888	; 0x9fb8
   11838:	movteq	r3, #1
   1183c:	strne	r0, [r9, #4]
   11840:	streq	r3, [r9, #4]
   11844:	ldr	r3, [r9, #12]
   11848:	cmp	r3, #0
   1184c:	beq	11548 <__assert_fail@plt+0x190>
   11850:	movw	r0, #40960	; 0xa000
   11854:	movt	r0, #1
   11858:	ldr	r1, [r9, #4]
   1185c:	bl	11100 <printf@plt>
   11860:	b	11548 <__assert_fail@plt+0x190>
   11864:	movw	r0, #40852	; 0x9f94
   11868:	movt	r0, #1
   1186c:	bl	111fc <puts@plt>
   11870:	b	11770 <__assert_fail@plt+0x3b8>
   11874:	ldr	r3, [r9, #12]
   11878:	cmp	r3, #0
   1187c:	beq	11548 <__assert_fail@plt+0x190>
   11880:	mov	r1, r0
   11884:	movw	r0, #41092	; 0xa084
   11888:	movt	r0, #1
   1188c:	movw	r4, #2360	; 0x938
   11890:	movt	r4, #3
   11894:	bl	11100 <printf@plt>
   11898:	b	11550 <__assert_fail@plt+0x198>
   1189c:	strdeq	sp, [r2], -r4
   118a0:	strdeq	sp, [r2], -ip
   118a4:	andeq	sp, r2, r8, lsl ip
   118a8:	mov	fp, #0
   118ac:	mov	lr, #0
   118b0:	pop	{r1}		; (ldr r1, [sp], #4)
   118b4:	mov	r2, sp
   118b8:	push	{r2}		; (str r2, [sp, #-4]!)
   118bc:	push	{r0}		; (str r0, [sp, #-4]!)
   118c0:	ldr	ip, [pc, #16]	; 118d8 <__assert_fail@plt+0x520>
   118c4:	push	{ip}		; (str ip, [sp, #-4]!)
   118c8:	ldr	r0, [pc, #12]	; 118dc <__assert_fail@plt+0x524>
   118cc:	ldr	r3, [pc, #12]	; 118e0 <__assert_fail@plt+0x528>
   118d0:	bl	11214 <__libc_start_main@plt>
   118d4:	bl	11394 <abort@plt>
   118d8:	andeq	r9, r1, r0, ror #23
   118dc:	andeq	r1, r1, r4, asr #7
   118e0:	andeq	r9, r1, r0, lsl #23
   118e4:	ldr	r3, [pc, #20]	; 11900 <__assert_fail@plt+0x548>
   118e8:	ldr	r2, [pc, #20]	; 11904 <__assert_fail@plt+0x54c>
   118ec:	add	r3, pc, r3
   118f0:	ldr	r2, [r3, r2]
   118f4:	cmp	r2, #0
   118f8:	bxeq	lr
   118fc:	b	11238 <__gmon_start__@plt>
   11900:	andeq	fp, r1, ip, lsl #14
   11904:	andeq	r0, r0, r0, lsl r1
   11908:	ldr	r0, [pc, #24]	; 11928 <__assert_fail@plt+0x570>
   1190c:	ldr	r3, [pc, #24]	; 1192c <__assert_fail@plt+0x574>
   11910:	cmp	r3, r0
   11914:	bxeq	lr
   11918:	ldr	r3, [pc, #16]	; 11930 <__assert_fail@plt+0x578>
   1191c:	cmp	r3, #0
   11920:	bxeq	lr
   11924:	bx	r3
   11928:			; <UNDEFINED> instruction: 0x000308b0
   1192c:			; <UNDEFINED> instruction: 0x000308b0
   11930:	andeq	r0, r0, r0
   11934:	ldr	r0, [pc, #36]	; 11960 <__assert_fail@plt+0x5a8>
   11938:	ldr	r1, [pc, #36]	; 11964 <__assert_fail@plt+0x5ac>
   1193c:	sub	r1, r1, r0
   11940:	asr	r1, r1, #2
   11944:	add	r1, r1, r1, lsr #31
   11948:	asrs	r1, r1, #1
   1194c:	bxeq	lr
   11950:	ldr	r3, [pc, #16]	; 11968 <__assert_fail@plt+0x5b0>
   11954:	cmp	r3, #0
   11958:	bxeq	lr
   1195c:	bx	r3
   11960:			; <UNDEFINED> instruction: 0x000308b0
   11964:			; <UNDEFINED> instruction: 0x000308b0
   11968:	andeq	r0, r0, r0
   1196c:	push	{r4, lr}
   11970:	ldr	r4, [pc, #24]	; 11990 <__assert_fail@plt+0x5d8>
   11974:	ldrb	r3, [r4]
   11978:	cmp	r3, #0
   1197c:	popne	{r4, pc}
   11980:	bl	11908 <__assert_fail@plt+0x550>
   11984:	mov	r3, #1
   11988:	strb	r3, [r4]
   1198c:	pop	{r4, pc}
   11990:	andeq	r0, r3, r0, asr #17
   11994:	b	11934 <__assert_fail@plt+0x57c>
   11998:	sub	r3, r0, #1
   1199c:	cmp	r3, #126	; 0x7e
   119a0:	bls	119ac <__assert_fail@plt+0x5f4>
   119a4:	mov	r0, #7
   119a8:	bx	lr
   119ac:	bic	r3, r0, #2
   119b0:	strd	r4, [sp, #-16]!
   119b4:	cmp	r0, #113	; 0x71
   119b8:	cmpne	r3, #116	; 0x74
   119bc:	str	r6, [sp, #8]
   119c0:	str	lr, [sp, #12]
   119c4:	bne	119d8 <__assert_fail@plt+0x620>
   119c8:	movw	r3, #2244	; 0x8c4
   119cc:	movt	r3, #3
   119d0:	mov	r2, #1
   119d4:	str	r2, [r3]
   119d8:	movw	r4, #2316	; 0x90c
   119dc:	movt	r4, #3
   119e0:	ldr	r3, [r4, #12]
   119e4:	mov	r6, r1
   119e8:	mov	r5, r0
   119ec:	ldr	r2, [r4, #16]
   119f0:	cmp	r2, r3
   119f4:	beq	11acc <__assert_fail@plt+0x714>
   119f8:	add	r1, r3, #1
   119fc:	mov	r2, #45	; 0x2d
   11a00:	str	r1, [r4, #12]
   11a04:	strb	r2, [r3]
   11a08:	ldr	r3, [r4, #12]
   11a0c:	ldr	r2, [r4, #16]
   11a10:	cmp	r2, r3
   11a14:	beq	11ab4 <__assert_fail@plt+0x6fc>
   11a18:	add	r2, r3, #1
   11a1c:	cmp	r6, #0
   11a20:	moveq	r0, r6
   11a24:	str	r2, [r4, #12]
   11a28:	strb	r5, [r3]
   11a2c:	beq	11a8c <__assert_fail@plt+0x6d4>
   11a30:	ldr	r3, [r4, #12]
   11a34:	ldr	r2, [r4, #16]
   11a38:	cmp	r2, r3
   11a3c:	beq	11ae0 <__assert_fail@plt+0x728>
   11a40:	add	r1, r3, #1
   11a44:	mov	r2, #32
   11a48:	mov	r0, r6
   11a4c:	str	r1, [r4, #12]
   11a50:	strb	r2, [r3]
   11a54:	bl	11268 <strlen@plt>
   11a58:	mov	r5, r0
   11a5c:	ldr	r0, [r4, #12]
   11a60:	ldr	r3, [r4, #16]
   11a64:	sub	r3, r3, r0
   11a68:	cmp	r5, r3
   11a6c:	bhi	11a9c <__assert_fail@plt+0x6e4>
   11a70:	mov	r2, r5
   11a74:	mov	r1, r6
   11a78:	bl	11160 <memcpy@plt>
   11a7c:	ldr	r3, [r4, #12]
   11a80:	mov	r0, #0
   11a84:	add	r5, r3, r5
   11a88:	str	r5, [r4, #12]
   11a8c:	ldrd	r4, [sp]
   11a90:	ldr	r6, [sp, #8]
   11a94:	add	sp, sp, #12
   11a98:	pop	{pc}		; (ldr pc, [sp], #4)
   11a9c:	movw	r0, #2316	; 0x90c
   11aa0:	movt	r0, #3
   11aa4:	mov	r1, r5
   11aa8:	bl	14460 <_obstack_newchunk@@Base>
   11aac:	ldr	r0, [r4, #12]
   11ab0:	b	11a70 <__assert_fail@plt+0x6b8>
   11ab4:	movw	r0, #2316	; 0x90c
   11ab8:	movt	r0, #3
   11abc:	mov	r1, #1
   11ac0:	bl	14460 <_obstack_newchunk@@Base>
   11ac4:	ldr	r3, [r4, #12]
   11ac8:	b	11a18 <__assert_fail@plt+0x660>
   11acc:	mov	r1, #1
   11ad0:	mov	r0, r4
   11ad4:	bl	14460 <_obstack_newchunk@@Base>
   11ad8:	ldr	r3, [r4, #12]
   11adc:	b	119f8 <__assert_fail@plt+0x640>
   11ae0:	movw	r0, #2316	; 0x90c
   11ae4:	movt	r0, #3
   11ae8:	mov	r1, #1
   11aec:	bl	14460 <_obstack_newchunk@@Base>
   11af0:	ldr	r3, [r4, #12]
   11af4:	b	11a40 <__assert_fail@plt+0x688>
   11af8:	sub	r0, r0, #72	; 0x48
   11afc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b00:	strd	r6, [sp, #8]
   11b04:	mov	r6, r1
   11b08:	str	r8, [sp, #16]
   11b0c:	str	lr, [sp, #20]
   11b10:	cmp	r0, #40	; 0x28
   11b14:	ldrls	pc, [pc, r0, lsl #2]
   11b18:	b	11c88 <__assert_fail@plt+0x8d0>
   11b1c:	andeq	r1, r1, r0, ror ip
   11b20:	andeq	r1, r1, r8, lsl #25
   11b24:	andeq	r1, r1, r8, lsl #25
   11b28:	andeq	r1, r1, r8, lsl #25
   11b2c:	andeq	r1, r1, r8, lsl #25
   11b30:	andeq	r1, r1, r8, lsl #25
   11b34:	andeq	r1, r1, r8, lsl #25
   11b38:	andeq	r1, r1, r8, lsl #25
   11b3c:	andeq	r1, r1, r8, lsl #25
   11b40:	andeq	r1, r1, r8, lsl #25
   11b44:	andeq	r1, r1, r8, lsl #25
   11b48:	andeq	r1, r1, r8, lsl #25
   11b4c:	andeq	r1, r1, r8, lsl #25
   11b50:	andeq	r1, r1, r8, lsl #25
   11b54:	andeq	r1, r1, r8, asr ip
   11b58:	andeq	r1, r1, r8, lsl #25
   11b5c:	andeq	r1, r1, r8, lsl #25
   11b60:	andeq	r1, r1, r8, lsl #25
   11b64:	andeq	r1, r1, r8, lsl #25
   11b68:	andeq	r1, r1, r8, lsl #25
   11b6c:	andeq	r1, r1, r8, lsl #25
   11b70:	andeq	r1, r1, r8, lsl #25
   11b74:	andeq	r1, r1, r8, lsl #25
   11b78:	andeq	r1, r1, r8, lsl #25
   11b7c:	andeq	r1, r1, r8, lsl #25
   11b80:	andeq	r1, r1, r8, lsl #25
   11b84:	andeq	r1, r1, r8, lsl #25
   11b88:	andeq	r1, r1, r8, lsl #25
   11b8c:	andeq	r1, r1, r8, lsl #25
   11b90:	andeq	r1, r1, r8, lsl #25
   11b94:	andeq	r1, r1, r8, lsl #25
   11b98:	andeq	r1, r1, r8, lsl #25
   11b9c:	andeq	r1, r1, r4, ror #23
   11ba0:	andeq	r1, r1, r8, lsl #25
   11ba4:	andeq	r1, r1, r8, lsl #25
   11ba8:	andeq	r1, r1, r8, lsl #25
   11bac:	andeq	r1, r1, r8, lsl #25
   11bb0:	andeq	r1, r1, r8, lsl #25
   11bb4:	andeq	r1, r1, r8, lsl #25
   11bb8:	andeq	r1, r1, r8, lsl #25
   11bbc:	andeq	r1, r1, r0, asr #23
   11bc0:	movw	r3, #2244	; 0x8c4
   11bc4:	movt	r3, #3
   11bc8:	mov	r0, #0
   11bcc:	str	r1, [r3, #8]
   11bd0:	ldrd	r4, [sp]
   11bd4:	ldrd	r6, [sp, #8]
   11bd8:	ldr	r8, [sp, #16]
   11bdc:	add	sp, sp, #20
   11be0:	pop	{pc}		; (ldr pc, [sp], #4)
   11be4:	mov	r0, r1
   11be8:	movw	r7, #2244	; 0x8c4
   11bec:	movt	r7, #3
   11bf0:	bl	11268 <strlen@plt>
   11bf4:	add	r0, r0, #1
   11bf8:	bl	14bd4 <_obstack_memory_used@@Base+0x57c>
   11bfc:	str	r0, [r7, #4]
   11c00:	mov	r5, r0
   11c04:	ldrb	r4, [r6]
   11c08:	cmp	r4, #0
   11c0c:	cmpne	r4, #58	; 0x3a
   11c10:	beq	11c3c <__assert_fail@plt+0x884>
   11c14:	bl	1122c <__ctype_tolower_loc@plt>
   11c18:	ldr	r1, [r0]
   11c1c:	add	r3, r6, #1
   11c20:	mov	r6, r3
   11c24:	ldr	r2, [r1, r4, lsl #2]
   11c28:	ldrb	r4, [r3], #1
   11c2c:	strb	r2, [r5], #1
   11c30:	cmp	r4, #0
   11c34:	cmpne	r4, #58	; 0x3a
   11c38:	bne	11c20 <__assert_fail@plt+0x868>
   11c3c:	cmp	r4, #58	; 0x3a
   11c40:	mov	r3, #0
   11c44:	addeq	r6, r6, #1
   11c48:	mov	r0, r3
   11c4c:	strb	r3, [r5]
   11c50:	streq	r6, [r7, #8]
   11c54:	b	11bd0 <__assert_fail@plt+0x818>
   11c58:	movw	r3, #2244	; 0x8c4
   11c5c:	movt	r3, #3
   11c60:	mov	r2, #1
   11c64:	mov	r0, #0
   11c68:	str	r2, [r3, #12]
   11c6c:	b	11bd0 <__assert_fail@plt+0x818>
   11c70:	mov	r2, #0
   11c74:	movw	r3, #53532	; 0xd11c
   11c78:	movt	r3, #2
   11c7c:	mov	r0, r2
   11c80:	str	r2, [r3]
   11c84:	b	11bd0 <__assert_fail@plt+0x818>
   11c88:	mov	r0, #7
   11c8c:	b	11bd0 <__assert_fail@plt+0x818>
   11c90:	push	{lr}		; (str lr, [sp, #-4]!)
   11c94:	sub	sp, sp, #28
   11c98:	movw	r1, #39920	; 0x9bf0
   11c9c:	movt	r1, #1
   11ca0:	add	ip, sp, #20
   11ca4:	add	r2, sp, #16
   11ca8:	add	r3, sp, #12
   11cac:	stm	sp, {r2, ip}
   11cb0:	add	r2, sp, #8
   11cb4:	bl	11304 <sscanf@plt>
   11cb8:	cmp	r0, #4
   11cbc:	movne	r0, #0
   11cc0:	bne	11ce0 <__assert_fail@plt+0x928>
   11cc4:	add	r0, sp, #12
   11cc8:	ldr	r1, [sp, #8]
   11ccc:	ldm	r0, {r0, r2, r3}
   11cd0:	lsl	r0, r0, #16
   11cd4:	add	r0, r0, r1, lsl #24
   11cd8:	add	r0, r0, r2, lsl #8
   11cdc:	add	r0, r0, r3
   11ce0:	add	sp, sp, #28
   11ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ce8:	movw	r3, #5071	; 0x13cf
   11cec:	movt	r3, #6
   11cf0:	strd	r4, [sp, #-16]!
   11cf4:	cmp	r0, r3
   11cf8:	mov	r5, r0
   11cfc:	str	r6, [sp, #8]
   11d00:	mov	r4, r1
   11d04:	str	lr, [sp, #12]
   11d08:	bgt	11d5c <__assert_fail@plt+0x9a4>
   11d0c:	ldr	r0, [r4, #4]
   11d10:	cmp	r0, #0
   11d14:	beq	11d44 <__assert_fail@plt+0x98c>
   11d18:	add	r1, r4, #8
   11d1c:	ldrh	r3, [r1, #-8]
   11d20:	cmp	r3, r5
   11d24:	bgt	11d34 <__assert_fail@plt+0x97c>
   11d28:	ldrh	r3, [r1, #-6]
   11d2c:	cmp	r3, r5
   11d30:	bge	11d4c <__assert_fail@plt+0x994>
   11d34:	add	r1, r1, #8
   11d38:	ldr	r0, [r1, #-4]
   11d3c:	cmp	r0, #0
   11d40:	bne	11d1c <__assert_fail@plt+0x964>
   11d44:	movw	r0, #39932	; 0x9bfc
   11d48:	movt	r0, #1
   11d4c:	ldrd	r4, [sp]
   11d50:	ldr	r6, [sp, #8]
   11d54:	add	sp, sp, #12
   11d58:	pop	{pc}		; (ldr pc, [sp], #4)
   11d5c:	movw	r0, #39948	; 0x9c0c
   11d60:	movt	r0, #1
   11d64:	bl	111fc <puts@plt>
   11d68:	b	11d0c <__assert_fail@plt+0x954>
   11d6c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11d70:	mov	r5, r0
   11d74:	strd	r6, [sp, #8]
   11d78:	mov	r6, r1
   11d7c:	str	lr, [sp, #16]
   11d80:	sub	sp, sp, #12
   11d84:	mov	r0, r6
   11d88:	add	r1, sp, #4
   11d8c:	bl	110dc <inet_aton@plt>
   11d90:	ldr	r4, [r5]
   11d94:	cmp	r4, #0
   11d98:	beq	11e2c <__assert_fail@plt+0xa74>
   11d9c:	mov	r7, r0
   11da0:	b	11db0 <__assert_fail@plt+0x9f8>
   11da4:	ldr	r4, [r5, #4]!
   11da8:	cmp	r4, #0
   11dac:	beq	11e2c <__assert_fail@plt+0xa74>
   11db0:	mov	r1, r6
   11db4:	mov	r0, r4
   11db8:	bl	110e8 <strcmp@plt>
   11dbc:	cmp	r0, #0
   11dc0:	beq	11e14 <__assert_fail@plt+0xa5c>
   11dc4:	cmp	r7, #0
   11dc8:	beq	11da4 <__assert_fail@plt+0x9ec>
   11dcc:	mov	r0, r4
   11dd0:	bl	11370 <gethostbyname@plt>
   11dd4:	cmp	r0, #0
   11dd8:	beq	11da4 <__assert_fail@plt+0x9ec>
   11ddc:	ldr	r2, [r0, #16]
   11de0:	ldr	r3, [r2]
   11de4:	cmp	r3, #0
   11de8:	beq	11da4 <__assert_fail@plt+0x9ec>
   11dec:	ldr	r3, [r3]
   11df0:	ldr	r1, [sp, #4]
   11df4:	cmp	r3, r1
   11df8:	beq	11e14 <__assert_fail@plt+0xa5c>
   11dfc:	ldr	r3, [r2, #4]!
   11e00:	cmp	r3, #0
   11e04:	beq	11da4 <__assert_fail@plt+0x9ec>
   11e08:	ldr	r3, [r3]
   11e0c:	cmp	r3, r1
   11e10:	bne	11dfc <__assert_fail@plt+0xa44>
   11e14:	mov	r0, #1
   11e18:	add	sp, sp, #12
   11e1c:	ldrd	r4, [sp]
   11e20:	ldrd	r6, [sp, #8]
   11e24:	add	sp, sp, #16
   11e28:	pop	{pc}		; (ldr pc, [sp], #4)
   11e2c:	mov	r0, #0
   11e30:	b	11e18 <__assert_fail@plt+0xa60>
   11e34:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e38:	mov	r5, r0
   11e3c:	mov	r0, r1
   11e40:	strd	r6, [sp, #8]
   11e44:	mov	r6, r2
   11e48:	mov	r7, r1
   11e4c:	str	r8, [sp, #16]
   11e50:	str	lr, [sp, #20]
   11e54:	bl	11268 <strlen@plt>
   11e58:	mov	r4, r0
   11e5c:	mov	r0, r6
   11e60:	bl	11268 <strlen@plt>
   11e64:	add	r0, r4, r0
   11e68:	add	r0, r0, #13
   11e6c:	bl	14bd4 <_obstack_memory_used@@Base+0x57c>
   11e70:	mov	r4, r0
   11e74:	mov	r3, #0
   11e78:	ldr	r0, [pc, #536]	; 12098 <__assert_fail@plt+0xce0>
   11e7c:	mov	r1, r5
   11e80:	strb	r3, [r4]
   11e84:	bl	11d6c <__assert_fail@plt+0x9b4>
   11e88:	cmp	r0, #0
   11e8c:	bne	11ea4 <__assert_fail@plt+0xaec>
   11e90:	mov	r1, r5
   11e94:	ldr	r0, [pc, #512]	; 1209c <__assert_fail@plt+0xce4>
   11e98:	bl	11d6c <__assert_fail@plt+0x9b4>
   11e9c:	cmp	r0, #0
   11ea0:	beq	11f14 <__assert_fail@plt+0xb5c>
   11ea4:	mov	r0, r4
   11ea8:	bl	11268 <strlen@plt>
   11eac:	movw	r3, #39996	; 0x9c3c
   11eb0:	movt	r3, #1
   11eb4:	ldrb	lr, [r7]
   11eb8:	add	r2, r4, r0
   11ebc:	ldrb	r1, [r3, #8]
   11ec0:	ldr	ip, [r3]
   11ec4:	cmp	lr, #0
   11ec8:	ldr	r3, [r3, #4]
   11ecc:	str	ip, [r4, r0]
   11ed0:	str	r3, [r2, #4]
   11ed4:	strb	r1, [r2, #8]
   11ed8:	bne	11f00 <__assert_fail@plt+0xb48>
   11edc:	mov	r1, r6
   11ee0:	mov	r0, r4
   11ee4:	bl	111cc <strcat@plt>
   11ee8:	mov	r0, r4
   11eec:	ldrd	r4, [sp]
   11ef0:	ldrd	r6, [sp, #8]
   11ef4:	ldr	r8, [sp, #16]
   11ef8:	add	sp, sp, #20
   11efc:	pop	{pc}		; (ldr pc, [sp], #4)
   11f00:	add	r0, r0, #8
   11f04:	mov	r1, r7
   11f08:	add	r0, r4, r0
   11f0c:	bl	111d8 <strcpy@plt>
   11f10:	b	11edc <__assert_fail@plt+0xb24>
   11f14:	ldrb	r3, [r7]
   11f18:	cmp	r3, #0
   11f1c:	beq	11f44 <__assert_fail@plt+0xb8c>
   11f20:	movw	r1, #40008	; 0x9c48
   11f24:	movt	r1, #1
   11f28:	mov	r0, r5
   11f2c:	bl	110e8 <strcmp@plt>
   11f30:	cmp	r0, #0
   11f34:	bne	12070 <__assert_fail@plt+0xcb8>
   11f38:	mov	r1, r7
   11f3c:	mov	r0, r4
   11f40:	bl	111cc <strcat@plt>
   11f44:	movw	r1, #39932	; 0x9bfc
   11f48:	movt	r1, #1
   11f4c:	mov	r0, r5
   11f50:	bl	110e8 <strcmp@plt>
   11f54:	cmp	r0, #0
   11f58:	beq	12014 <__assert_fail@plt+0xc5c>
   11f5c:	movw	r1, #40084	; 0x9c94
   11f60:	movt	r1, #1
   11f64:	mov	r0, r5
   11f68:	bl	110e8 <strcmp@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	12014 <__assert_fail@plt+0xc5c>
   11f74:	movw	r1, #40008	; 0x9c48
   11f78:	movt	r1, #1
   11f7c:	mov	r0, r5
   11f80:	bl	110e8 <strcmp@plt>
   11f84:	cmp	r0, #0
   11f88:	beq	12058 <__assert_fail@plt+0xca0>
   11f8c:	movw	r1, #40128	; 0x9cc0
   11f90:	movt	r1, #1
   11f94:	mov	r0, r5
   11f98:	bl	110e8 <strcmp@plt>
   11f9c:	cmp	r0, #0
   11fa0:	bne	11fb8 <__assert_fail@plt+0xc00>
   11fa4:	mov	r1, #32
   11fa8:	mov	r0, r6
   11fac:	bl	11274 <strchr@plt>
   11fb0:	cmp	r0, #0
   11fb4:	beq	12080 <__assert_fail@plt+0xcc8>
   11fb8:	mov	r0, r5
   11fbc:	movw	r1, #40160	; 0x9ce0
   11fc0:	movt	r1, #1
   11fc4:	bl	110e8 <strcmp@plt>
   11fc8:	cmp	r0, #0
   11fcc:	bne	11edc <__assert_fail@plt+0xb24>
   11fd0:	movw	r0, #40176	; 0x9cf0
   11fd4:	movt	r0, #1
   11fd8:	bl	111f0 <getenv@plt>
   11fdc:	cmp	r0, #0
   11fe0:	beq	11ffc <__assert_fail@plt+0xc44>
   11fe4:	movw	r1, #40184	; 0x9cf8
   11fe8:	movt	r1, #1
   11fec:	mov	r2, #2
   11ff0:	bl	11388 <strncmp@plt>
   11ff4:	cmp	r0, #0
   11ff8:	beq	11edc <__assert_fail@plt+0xb24>
   11ffc:	mov	r2, r6
   12000:	movw	r1, #40188	; 0x9cfc
   12004:	movt	r1, #1
   12008:	mov	r0, r4
   1200c:	bl	11310 <sprintf@plt>
   12010:	b	11ee8 <__assert_fail@plt+0xb30>
   12014:	movw	r1, #40100	; 0x9ca4
   12018:	movt	r1, #1
   1201c:	mov	r2, #2
   12020:	mov	r0, r6
   12024:	bl	11298 <strncasecmp@plt>
   12028:	cmp	r0, #0
   1202c:	bne	11f74 <__assert_fail@plt+0xbbc>
   12030:	ldrb	r3, [r6, #2]
   12034:	sub	r3, r3, #48	; 0x30
   12038:	cmp	r3, #9
   1203c:	bhi	11f74 <__assert_fail@plt+0xbbc>
   12040:	add	r2, r6, #2
   12044:	movw	r1, #40104	; 0x9ca8
   12048:	movt	r1, #1
   1204c:	mov	r0, r4
   12050:	bl	11310 <sprintf@plt>
   12054:	b	11ee8 <__assert_fail@plt+0xb30>
   12058:	mov	r2, r6
   1205c:	movw	r1, #40112	; 0x9cb0
   12060:	movt	r1, #1
   12064:	mov	r0, r4
   12068:	bl	11310 <sprintf@plt>
   1206c:	b	11ee8 <__assert_fail@plt+0xb30>
   12070:	movw	r0, #40028	; 0x9c5c
   12074:	movt	r0, #1
   12078:	bl	111fc <puts@plt>
   1207c:	b	11f44 <__assert_fail@plt+0xb8c>
   12080:	mov	r2, r6
   12084:	movw	r1, #40148	; 0x9cd4
   12088:	movt	r1, #1
   1208c:	mov	r0, r4
   12090:	bl	11310 <sprintf@plt>
   12094:	b	11ee8 <__assert_fail@plt+0xb30>
   12098:	andeq	sp, r2, r0, lsr #2
   1209c:	andeq	sp, r2, ip, asr r1
   120a0:	b	113a0 <close@plt>
   120a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   120a8:	strd	r6, [sp, #8]
   120ac:	str	r8, [sp, #16]
   120b0:	str	lr, [sp, #20]
   120b4:	ldrb	r3, [r0]
   120b8:	cmp	r3, #0
   120bc:	beq	121a0 <__assert_fail@plt+0xde8>
   120c0:	mov	r5, r0
   120c4:	b	120cc <__assert_fail@plt+0xd14>
   120c8:	mov	r5, r2
   120cc:	ldrb	r3, [r5, #1]
   120d0:	add	r2, r5, #1
   120d4:	cmp	r3, #0
   120d8:	bne	120c8 <__assert_fail@plt+0xd10>
   120dc:	ldrb	r3, [r1]
   120e0:	cmp	r3, #0
   120e4:	beq	12198 <__assert_fail@plt+0xde0>
   120e8:	mov	r4, r1
   120ec:	b	120f4 <__assert_fail@plt+0xd3c>
   120f0:	mov	r4, r2
   120f4:	ldrb	r3, [r4, #1]
   120f8:	add	r2, r4, #1
   120fc:	cmp	r3, #0
   12100:	bne	120f0 <__assert_fail@plt+0xd38>
   12104:	cmp	r1, r4
   12108:	cmpls	r0, r5
   1210c:	movls	ip, #1
   12110:	movhi	ip, #0
   12114:	bhi	12188 <__assert_fail@plt+0xdd0>
   12118:	mov	r6, r1
   1211c:	mov	r7, r0
   12120:	bl	1122c <__ctype_tolower_loc@plt>
   12124:	add	r3, r4, #1
   12128:	mov	r2, r5
   1212c:	ldr	r4, [r0]
   12130:	b	12150 <__assert_fail@plt+0xd98>
   12134:	cmp	r6, r1
   12138:	beq	12190 <__assert_fail@plt+0xdd8>
   1213c:	cmp	r6, ip
   12140:	cmpls	r7, r2
   12144:	movls	ip, #1
   12148:	movhi	ip, #0
   1214c:	bhi	12188 <__assert_fail@plt+0xdd0>
   12150:	ldrb	r0, [r2], #-1
   12154:	sub	r1, r3, #1
   12158:	sub	ip, r3, #2
   1215c:	ldrb	lr, [r3, #-1]
   12160:	mov	r3, r1
   12164:	ldr	r0, [r4, r0, lsl #2]
   12168:	cmp	lr, r0
   1216c:	beq	12134 <__assert_fail@plt+0xd7c>
   12170:	mov	r0, #0
   12174:	ldrd	r4, [sp]
   12178:	ldrd	r6, [sp, #8]
   1217c:	ldr	r8, [sp, #16]
   12180:	add	sp, sp, #20
   12184:	pop	{pc}		; (ldr pc, [sp], #4)
   12188:	mov	r0, ip
   1218c:	b	12174 <__assert_fail@plt+0xdbc>
   12190:	mov	r0, #1
   12194:	b	12174 <__assert_fail@plt+0xdbc>
   12198:	sub	r4, r1, #1
   1219c:	b	12104 <__assert_fail@plt+0xd4c>
   121a0:	sub	r5, r0, #1
   121a4:	b	120dc <__assert_fail@plt+0xd24>
   121a8:	ldrb	r3, [r0]
   121ac:	cmp	r3, #0
   121b0:	beq	12458 <__assert_fail@plt+0x10a0>
   121b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   121b8:	mov	r4, r0
   121bc:	strd	r6, [sp, #8]
   121c0:	str	r8, [sp, #16]
   121c4:	str	lr, [sp, #20]
   121c8:	sub	sp, sp, #8
   121cc:	b	121dc <__assert_fail@plt+0xe24>
   121d0:	ldrb	r3, [r4, #2]!
   121d4:	cmp	r3, #0
   121d8:	beq	122f0 <__assert_fail@plt+0xf38>
   121dc:	ldrb	r3, [r4, #1]
   121e0:	cmp	r3, #32
   121e4:	beq	121d0 <__assert_fail@plt+0xe18>
   121e8:	mov	r1, #64	; 0x40
   121ec:	mov	r0, r4
   121f0:	bl	11274 <strchr@plt>
   121f4:	subs	r5, r0, #0
   121f8:	beq	1221c <__assert_fail@plt+0xe64>
   121fc:	movw	r0, #41144	; 0xa0b8
   12200:	movt	r0, #1
   12204:	add	sp, sp, #8
   12208:	ldrd	r4, [sp]
   1220c:	ldrd	r6, [sp, #8]
   12210:	ldr	r8, [sp, #16]
   12214:	add	sp, sp, #20
   12218:	pop	{pc}		; (ldr pc, [sp], #4)
   1221c:	movw	r1, #40212	; 0x9d14
   12220:	movt	r1, #1
   12224:	mov	r0, r4
   12228:	bl	11340 <strpbrk@plt>
   1222c:	cmp	r0, #0
   12230:	beq	12380 <__assert_fail@plt+0xfc8>
   12234:	mov	r1, #58	; 0x3a
   12238:	mov	r0, r4
   1223c:	bl	11274 <strchr@plt>
   12240:	cmp	r0, #0
   12244:	mov	r0, r4
   12248:	beq	122fc <__assert_fail@plt+0xf44>
   1224c:	movw	r1, #40224	; 0x9d20
   12250:	movt	r1, #1
   12254:	str	r5, [sp]
   12258:	add	r3, sp, #4
   1225c:	mov	r2, sp
   12260:	str	r5, [sp, #4]
   12264:	bl	11304 <sscanf@plt>
   12268:	cmp	r0, #0
   1226c:	beq	121fc <__assert_fail@plt+0xe44>
   12270:	movw	r3, #53532	; 0xd11c
   12274:	movt	r3, #2
   12278:	ldrh	ip, [sp, #4]
   1227c:	ldr	r0, [r3, #328]	; 0x148
   12280:	ldr	r2, [sp]
   12284:	cmp	r0, #0
   12288:	orr	ip, ip, r2, lsl #16
   1228c:	beq	122d0 <__assert_fail@plt+0xf18>
   12290:	ldr	r1, [r3, #320]	; 0x140
   12294:	ldr	r2, [r3, #324]	; 0x144
   12298:	and	r2, r2, ip
   1229c:	cmp	r1, r2
   122a0:	beq	12204 <__assert_fail@plt+0xe4c>
   122a4:	add	r3, r3, #320	; 0x140
   122a8:	b	122c0 <__assert_fail@plt+0xf08>
   122ac:	ldr	r2, [r2, #16]
   122b0:	ldr	r1, [r3, #12]!
   122b4:	and	r2, r2, ip
   122b8:	cmp	r2, r1
   122bc:	beq	12204 <__assert_fail@plt+0xe4c>
   122c0:	ldr	r0, [r3, #20]
   122c4:	mov	r2, r3
   122c8:	cmp	r0, #0
   122cc:	bne	122ac <__assert_fail@plt+0xef4>
   122d0:	movw	r3, #2244	; 0x8c4
   122d4:	movt	r3, #3
   122d8:	ldr	r3, [r3, #12]
   122dc:	cmp	r3, #0
   122e0:	bne	1249c <__assert_fail@plt+0x10e4>
   122e4:	movw	r0, #39932	; 0x9bfc
   122e8:	movt	r0, #1
   122ec:	b	12204 <__assert_fail@plt+0xe4c>
   122f0:	movw	r0, #40196	; 0x9d04
   122f4:	movt	r0, #1
   122f8:	b	12204 <__assert_fail@plt+0xe4c>
   122fc:	bl	11c90 <__assert_fail@plt+0x8d8>
   12300:	subs	r5, r0, #0
   12304:	beq	1240c <__assert_fail@plt+0x1054>
   12308:	movw	r3, #56980	; 0xde94
   1230c:	movt	r3, #2
   12310:	ldr	r0, [r3, #8]
   12314:	cmp	r0, #0
   12318:	beq	12354 <__assert_fail@plt+0xf9c>
   1231c:	ldm	r3, {r1, r2}
   12320:	and	r2, r2, r5
   12324:	cmp	r1, r2
   12328:	bne	12344 <__assert_fail@plt+0xf8c>
   1232c:	b	12204 <__assert_fail@plt+0xe4c>
   12330:	ldr	r2, [r2, #16]
   12334:	ldr	r1, [r3, #12]!
   12338:	and	r2, r2, r5
   1233c:	cmp	r2, r1
   12340:	beq	12204 <__assert_fail@plt+0xe4c>
   12344:	ldr	r0, [r3, #20]
   12348:	mov	r2, r3
   1234c:	cmp	r0, #0
   12350:	bne	12330 <__assert_fail@plt+0xf78>
   12354:	movw	r3, #2244	; 0x8c4
   12358:	movt	r3, #3
   1235c:	ldr	r3, [r3, #12]
   12360:	cmp	r3, #0
   12364:	beq	122e4 <__assert_fail@plt+0xf2c>
   12368:	movw	r0, #40324	; 0x9d84
   1236c:	movt	r0, #1
   12370:	bl	111fc <puts@plt>
   12374:	movw	r0, #39932	; 0x9bfc
   12378:	movt	r0, #1
   1237c:	b	12204 <__assert_fail@plt+0xe4c>
   12380:	ldrb	r3, [r4]
   12384:	mov	r5, r4
   12388:	cmp	r3, #0
   1238c:	beq	1239c <__assert_fail@plt+0xfe4>
   12390:	ldrb	r3, [r5, #1]!
   12394:	cmp	r3, #0
   12398:	bne	12390 <__assert_fail@plt+0xfd8>
   1239c:	movw	r1, #40216	; 0x9d18
   123a0:	movt	r1, #1
   123a4:	mov	r2, #2
   123a8:	mov	r0, r4
   123ac:	bl	11298 <strncasecmp@plt>
   123b0:	subs	r1, r0, #0
   123b4:	bne	123e4 <__assert_fail@plt+0x102c>
   123b8:	ldrb	r3, [r4, #2]
   123bc:	sub	r2, r3, #48	; 0x30
   123c0:	cmp	r3, #32
   123c4:	cmpne	r2, #9
   123c8:	bhi	123e4 <__assert_fail@plt+0x102c>
   123cc:	add	r0, r4, #2
   123d0:	mov	r2, #10
   123d4:	bl	110f4 <strtol@plt>
   123d8:	ldr	r1, [pc, #336]	; 12530 <__assert_fail@plt+0x1178>
   123dc:	bl	11ce8 <__assert_fail@plt+0x930>
   123e0:	b	12204 <__assert_fail@plt+0xe4c>
   123e4:	sub	r0, r5, #2
   123e8:	movw	r1, #40220	; 0x9d1c
   123ec:	movt	r1, #1
   123f0:	mov	r2, #2
   123f4:	bl	11298 <strncasecmp@plt>
   123f8:	cmp	r0, #0
   123fc:	movweq	r0, #40160	; 0x9ce0
   12400:	movteq	r0, #1
   12404:	beq	12204 <__assert_fail@plt+0xe4c>
   12408:	b	121fc <__assert_fail@plt+0xe44>
   1240c:	movw	r8, #53532	; 0xd11c
   12410:	movt	r8, #2
   12414:	ldr	r1, [r8, #608]	; 0x260
   12418:	cmp	r1, #0
   1241c:	movne	r6, r5
   12420:	addne	r7, r8, #608	; 0x260
   12424:	bne	1243c <__assert_fail@plt+0x1084>
   12428:	b	12464 <__assert_fail@plt+0x10ac>
   1242c:	add	r6, r6, #2
   12430:	ldr	r1, [r7, r6, lsl #2]
   12434:	cmp	r1, #0
   12438:	beq	12464 <__assert_fail@plt+0x10ac>
   1243c:	mov	r0, r4
   12440:	bl	120a4 <__assert_fail@plt+0xcec>
   12444:	cmp	r0, #0
   12448:	beq	1242c <__assert_fail@plt+0x1074>
   1244c:	add	r6, r8, r6, lsl #2
   12450:	ldr	r0, [r6, #612]	; 0x264
   12454:	b	12204 <__assert_fail@plt+0xe4c>
   12458:	movw	r0, #40196	; 0x9d04
   1245c:	movt	r0, #1
   12460:	bx	lr
   12464:	mov	r1, #46	; 0x2e
   12468:	mov	r0, r4
   1246c:	bl	11274 <strchr@plt>
   12470:	cmp	r0, #0
   12474:	beq	124b4 <__assert_fail@plt+0x10fc>
   12478:	movw	r3, #2244	; 0x8c4
   1247c:	movt	r3, #3
   12480:	ldr	r3, [r3, #12]
   12484:	cmp	r3, #0
   12488:	beq	121fc <__assert_fail@plt+0xe44>
   1248c:	movw	r0, #40480	; 0x9e20
   12490:	movt	r0, #1
   12494:	bl	111fc <puts@plt>
   12498:	b	121fc <__assert_fail@plt+0xe44>
   1249c:	movw	r0, #40232	; 0x9d28
   124a0:	movt	r0, #1
   124a4:	bl	111fc <puts@plt>
   124a8:	movw	r0, #39932	; 0x9bfc
   124ac:	movt	r0, #1
   124b0:	b	12204 <__assert_fail@plt+0xe4c>
   124b4:	ldr	r6, [r8, #2600]	; 0xa28
   124b8:	cmp	r6, #0
   124bc:	beq	12504 <__assert_fail@plt+0x114c>
   124c0:	ldr	r7, [pc, #108]	; 12534 <__assert_fail@plt+0x117c>
   124c4:	b	124d8 <__assert_fail@plt+0x1120>
   124c8:	add	r5, r5, #2
   124cc:	ldr	r6, [r7, r5, lsl #2]
   124d0:	cmp	r6, #0
   124d4:	beq	12504 <__assert_fail@plt+0x114c>
   124d8:	mov	r0, r6
   124dc:	bl	11268 <strlen@plt>
   124e0:	mov	r2, r0
   124e4:	mov	r1, r6
   124e8:	mov	r0, r4
   124ec:	bl	11298 <strncasecmp@plt>
   124f0:	cmp	r0, #0
   124f4:	bne	124c8 <__assert_fail@plt+0x1110>
   124f8:	add	r5, r8, r5, lsl #2
   124fc:	ldr	r0, [r5, #2604]	; 0xa2c
   12500:	b	12204 <__assert_fail@plt+0xe4c>
   12504:	movw	r3, #2244	; 0x8c4
   12508:	movt	r3, #3
   1250c:	ldr	r3, [r3, #12]
   12510:	cmp	r3, #0
   12514:	beq	122e4 <__assert_fail@plt+0xf2c>
   12518:	movw	r0, #40412	; 0x9ddc
   1251c:	movt	r0, #1
   12520:	bl	111fc <puts@plt>
   12524:	movw	r0, #39932	; 0x9bfc
   12528:	movt	r0, #1
   1252c:	b	12204 <__assert_fail@plt+0xe4c>
   12530:	andeq	sp, r2, ip, ror r1
   12534:	andeq	sp, r2, r4, asr #22
   12538:	strd	r4, [sp, #-16]!
   1253c:	mov	r4, r1
   12540:	ldr	r1, [r1]
   12544:	str	r6, [sp, #8]
   12548:	str	lr, [sp, #12]
   1254c:	cmp	r1, #0
   12550:	beq	1258c <__assert_fail@plt+0x11d4>
   12554:	mov	r5, r0
   12558:	b	12568 <__assert_fail@plt+0x11b0>
   1255c:	ldr	r1, [r4, #4]!
   12560:	cmp	r1, #0
   12564:	beq	1257c <__assert_fail@plt+0x11c4>
   12568:	mov	r0, r5
   1256c:	bl	120a4 <__assert_fail@plt+0xcec>
   12570:	cmp	r0, #0
   12574:	beq	1255c <__assert_fail@plt+0x11a4>
   12578:	mov	r0, #1
   1257c:	ldrd	r4, [sp]
   12580:	ldr	r6, [sp, #8]
   12584:	add	sp, sp, #12
   12588:	pop	{pc}		; (ldr pc, [sp], #4)
   1258c:	mov	r0, r1
   12590:	b	1257c <__assert_fail@plt+0x11c4>
   12594:	cmp	r0, #0
   12598:	beq	125a0 <__assert_fail@plt+0x11e8>
   1259c:	b	11c90 <__assert_fail@plt+0x8d8>
   125a0:	bx	lr
   125a4:	push	{r0, r1, r2, r3}
   125a8:	movw	r4, #2232	; 0x8b8
   125ac:	movt	r4, #3
   125b0:	push	{lr}		; (str lr, [sp, #-4]!)
   125b4:	sub	sp, sp, #12
   125b8:	add	r3, sp, #20
   125bc:	ldr	r0, [r4]
   125c0:	mov	r2, r3
   125c4:	ldr	r1, [sp, #16]
   125c8:	str	r3, [sp, #4]
   125cc:	bl	112ec <vfprintf@plt>
   125d0:	bl	1128c <__errno_location@plt>
   125d4:	ldr	r4, [r4]
   125d8:	ldr	r0, [r0]
   125dc:	bl	11220 <strerror@plt>
   125e0:	mov	r2, r0
   125e4:	movw	r1, #40540	; 0x9e5c
   125e8:	movt	r1, #1
   125ec:	mov	r0, r4
   125f0:	bl	11280 <fprintf@plt>
   125f4:	mov	r0, #1
   125f8:	bl	1125c <exit@plt>
   125fc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12600:	mov	r4, r0
   12604:	mov	r0, r1
   12608:	strd	r6, [sp, #8]
   1260c:	mov	r5, r1
   12610:	strd	r8, [sp, #16]
   12614:	str	lr, [sp, #24]
   12618:	sub	sp, sp, #108	; 0x6c
   1261c:	bl	11268 <strlen@plt>
   12620:	add	r0, r0, #4
   12624:	bl	14bd4 <_obstack_memory_used@@Base+0x57c>
   12628:	mov	r3, #61	; 0x3d
   1262c:	mov	r8, r0
   12630:	mov	r1, r5
   12634:	strb	r3, [r0], #1
   12638:	bl	11190 <stpcpy@plt>
   1263c:	movw	r3, #40548	; 0x9e64
   12640:	movt	r3, #1
   12644:	ldrh	ip, [r3]
   12648:	mov	r2, r0
   1264c:	movw	r1, #49764	; 0xc264
   12650:	movt	r1, #1
   12654:	mov	r0, r4
   12658:	ldrb	r3, [r3, #2]
   1265c:	strh	ip, [r2]
   12660:	strb	r3, [r2, #2]
   12664:	bl	110b8 <fdopen@plt>
   12668:	mov	r5, r0
   1266c:	mov	r0, r8
   12670:	bl	11268 <strlen@plt>
   12674:	mov	r2, r0
   12678:	mov	r1, r8
   1267c:	mov	r0, r4
   12680:	bl	112bc <write@plt>
   12684:	cmp	r0, #0
   12688:	blt	12794 <__assert_fail@plt+0x13dc>
   1268c:	movw	r7, #40560	; 0x9e70
   12690:	movt	r7, #1
   12694:	movw	r6, #2236	; 0x8bc
   12698:	movt	r6, #3
   1269c:	mov	r9, #0
   126a0:	b	126c8 <__assert_fail@plt+0x1310>
   126a4:	mov	r2, #16
   126a8:	mov	r1, r7
   126ac:	add	r0, sp, #4
   126b0:	bl	11388 <strncmp@plt>
   126b4:	orrs	r3, r9, r0
   126b8:	beq	12714 <__assert_fail@plt+0x135c>
   126bc:	add	r0, sp, #4
   126c0:	ldr	r1, [r6]
   126c4:	bl	1137c <fputs@plt>
   126c8:	mov	r2, r5
   126cc:	mov	r1, #100	; 0x64
   126d0:	add	r0, sp, #4
   126d4:	bl	1113c <fgets@plt>
   126d8:	cmp	r0, #0
   126dc:	bne	126a4 <__assert_fail@plt+0x12ec>
   126e0:	mov	r0, r5
   126e4:	bl	11148 <ferror@plt>
   126e8:	cmp	r0, #0
   126ec:	bne	127a0 <__assert_fail@plt+0x13e8>
   126f0:	mov	r0, r8
   126f4:	bl	141a4 <argp_parse@@Base+0xfe4>
   126f8:	mov	r0, r9
   126fc:	add	sp, sp, #108	; 0x6c
   12700:	ldrd	r4, [sp]
   12704:	ldrd	r6, [sp, #8]
   12708:	ldrd	r8, [sp, #16]
   1270c:	add	sp, sp, #24
   12710:	pop	{pc}		; (ldr pc, [sp], #4)
   12714:	ldrb	r3, [sp, #4]
   12718:	add	r4, sp, #4
   1271c:	cmp	r3, #58	; 0x3a
   12720:	beq	12730 <__assert_fail@plt+0x1378>
   12724:	ldrb	r3, [r4, #1]!
   12728:	cmp	r3, #58	; 0x3a
   1272c:	bne	12724 <__assert_fail@plt+0x136c>
   12730:	ldrb	r3, [r4, #1]
   12734:	add	r4, r4, #1
   12738:	cmp	r3, #32
   1273c:	bne	1274c <__assert_fail@plt+0x1394>
   12740:	ldrb	r3, [r4, #1]!
   12744:	cmp	r3, #32
   12748:	beq	12740 <__assert_fail@plt+0x1388>
   1274c:	mov	r0, r4
   12750:	bl	11268 <strlen@plt>
   12754:	add	r0, r0, #1
   12758:	bl	14bd4 <_obstack_memory_used@@Base+0x57c>
   1275c:	ldrb	r3, [r4]
   12760:	mov	r9, r0
   12764:	mov	r2, r0
   12768:	cmp	r3, #10
   1276c:	cmpne	r3, #13
   12770:	beq	12788 <__assert_fail@plt+0x13d0>
   12774:	strb	r3, [r2], #1
   12778:	ldrb	r3, [r4, #1]!
   1277c:	cmp	r3, #10
   12780:	cmpne	r3, #13
   12784:	bne	12774 <__assert_fail@plt+0x13bc>
   12788:	mov	r3, #0
   1278c:	strb	r3, [r2]
   12790:	b	126bc <__assert_fail@plt+0x1304>
   12794:	movw	r0, #40552	; 0x9e68
   12798:	movt	r0, #1
   1279c:	bl	125a4 <__assert_fail@plt+0x11ec>
   127a0:	movw	r0, #40580	; 0x9e84
   127a4:	movt	r0, #1
   127a8:	bl	125a4 <__assert_fail@plt+0x11ec>
   127ac:	push	{r0, r1, r2, r3}
   127b0:	movw	r4, #2232	; 0x8b8
   127b4:	movt	r4, #3
   127b8:	push	{lr}		; (str lr, [sp, #-4]!)
   127bc:	sub	sp, sp, #12
   127c0:	add	r3, sp, #20
   127c4:	ldr	r0, [r4]
   127c8:	mov	r2, r3
   127cc:	ldr	r1, [sp, #16]
   127d0:	str	r3, [sp, #4]
   127d4:	bl	112ec <vfprintf@plt>
   127d8:	mov	r0, #10
   127dc:	ldr	r1, [r4]
   127e0:	bl	112f8 <fputc@plt>
   127e4:	mov	r0, #1
   127e8:	bl	1125c <exit@plt>
   127ec:	mov	r2, #0
   127f0:	mov	r3, #0
   127f4:	strd	r4, [sp, #-16]!
   127f8:	mov	ip, #1
   127fc:	str	r6, [sp, #8]
   12800:	subs	r5, r1, #0
   12804:	str	lr, [sp, #12]
   12808:	sub	sp, sp, #40	; 0x28
   1280c:	mov	r6, r0
   12810:	strd	r2, [sp, #8]
   12814:	strd	r2, [sp, #16]
   12818:	str	ip, [sp, #16]
   1281c:	strd	r2, [sp, #24]
   12820:	strd	r2, [sp, #32]
   12824:	beq	128ec <__assert_fail@plt+0x1534>
   12828:	add	r4, sp, #4
   1282c:	add	r2, sp, #8
   12830:	mov	r3, r4
   12834:	bl	11358 <getaddrinfo@plt>
   12838:	cmp	r0, #0
   1283c:	beq	1285c <__assert_fail@plt+0x14a4>
   12840:	mov	r3, r4
   12844:	add	r2, sp, #8
   12848:	mov	r1, r5
   1284c:	mov	r0, r6
   12850:	bl	11358 <getaddrinfo@plt>
   12854:	cmp	r0, #0
   12858:	bne	12918 <__assert_fail@plt+0x1560>
   1285c:	ldr	r5, [sp, #4]
   12860:	cmp	r5, #0
   12864:	beq	128b4 <__assert_fail@plt+0x14fc>
   12868:	mov	r3, r5
   1286c:	ldrd	r0, [r3, #4]
   12870:	ldr	r2, [r3, #12]
   12874:	bl	11364 <socket@plt>
   12878:	subs	r4, r0, #0
   1287c:	blt	128a0 <__assert_fail@plt+0x14e8>
   12880:	ldr	r3, [sp, #4]
   12884:	ldr	r2, [r3, #16]
   12888:	ldr	r1, [r3, #20]
   1288c:	bl	113ac <connect@plt>
   12890:	cmp	r0, #0
   12894:	beq	128c0 <__assert_fail@plt+0x1508>
   12898:	mov	r0, r4
   1289c:	bl	113a0 <close@plt>
   128a0:	ldr	r3, [sp, #4]
   128a4:	ldr	r3, [r3, #28]
   128a8:	cmp	r3, #0
   128ac:	str	r3, [sp, #4]
   128b0:	bne	1286c <__assert_fail@plt+0x14b4>
   128b4:	movw	r0, #40620	; 0x9eac
   128b8:	movt	r0, #1
   128bc:	bl	125a4 <__assert_fail@plt+0x11ec>
   128c0:	ldr	r3, [sp, #4]
   128c4:	cmp	r3, #0
   128c8:	beq	128b4 <__assert_fail@plt+0x14fc>
   128cc:	mov	r0, r5
   128d0:	bl	1134c <freeaddrinfo@plt>
   128d4:	mov	r0, r4
   128d8:	add	sp, sp, #40	; 0x28
   128dc:	ldrd	r4, [sp]
   128e0:	ldr	r6, [sp, #8]
   128e4:	add	sp, sp, #12
   128e8:	pop	{pc}		; (ldr pc, [sp], #4)
   128ec:	add	r4, sp, #4
   128f0:	movw	r1, #40612	; 0x9ea4
   128f4:	movt	r1, #1
   128f8:	mov	r3, r4
   128fc:	add	r2, sp, #8
   12900:	bl	11358 <getaddrinfo@plt>
   12904:	cmp	r0, #0
   12908:	beq	1285c <__assert_fail@plt+0x14a4>
   1290c:	movw	r5, #40588	; 0x9e8c
   12910:	movt	r5, #1
   12914:	b	12840 <__assert_fail@plt+0x1488>
   12918:	bl	11130 <gai_strerror@plt>
   1291c:	mov	r1, r0
   12920:	movw	r0, #40596	; 0x9e94
   12924:	movt	r0, #1
   12928:	bl	127ac <__assert_fail@plt+0x13f4>
   1292c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12930:	mov	r4, r1
   12934:	movw	r1, #49764	; 0xc264
   12938:	movt	r1, #1
   1293c:	strd	r6, [sp, #8]
   12940:	mov	r6, r0
   12944:	strd	r8, [sp, #16]
   12948:	movw	r8, #53532	; 0xd11c
   1294c:	movt	r8, #2
   12950:	str	sl, [sp, #24]
   12954:	str	lr, [sp, #28]
   12958:	sub	sp, sp, #1504	; 0x5e0
   1295c:	ldr	r5, [r8]
   12960:	bl	110b8 <fdopen@plt>
   12964:	mov	r7, r0
   12968:	mov	r0, r4
   1296c:	bl	11268 <strlen@plt>
   12970:	mov	r2, r0
   12974:	mov	r1, r4
   12978:	mov	r0, r6
   1297c:	bl	112bc <write@plt>
   12980:	cmp	r0, #0
   12984:	movwge	r9, #40628	; 0x9eb4
   12988:	movge	r4, #0
   1298c:	movtge	r9, #1
   12990:	addge	r6, r8, #2672	; 0xa70
   12994:	blt	12ba8 <__assert_fail@plt+0x17f0>
   12998:	mov	r2, r7
   1299c:	mov	r1, #200	; 0xc8
   129a0:	add	r0, sp, #24
   129a4:	bl	1113c <fgets@plt>
   129a8:	cmp	r0, #0
   129ac:	beq	12a7c <__assert_fail@plt+0x16c4>
   129b0:	cmp	r5, #1
   129b4:	beq	12afc <__assert_fail@plt+0x1744>
   129b8:	cmp	r5, #0
   129bc:	beq	12ab0 <__assert_fail@plt+0x16f8>
   129c0:	mov	r2, #10
   129c4:	mov	r1, r9
   129c8:	add	r0, sp, #24
   129cc:	bl	11388 <strncmp@plt>
   129d0:	cmp	r0, #0
   129d4:	bne	12a00 <__assert_fail@plt+0x1648>
   129d8:	add	ip, sp, #480	; 0x1e0
   129dc:	add	r3, sp, #8
   129e0:	add	r2, sp, #224	; 0xe0
   129e4:	movw	r1, #40640	; 0x9ec0
   129e8:	movt	r1, #1
   129ec:	add	r0, sp, #24
   129f0:	str	ip, [sp]
   129f4:	bl	11304 <sscanf@plt>
   129f8:	cmp	r0, #3
   129fc:	beq	12b28 <__assert_fail@plt+0x1770>
   12a00:	ldrb	r2, [sp, #24]
   12a04:	add	ip, sp, #24
   12a08:	cmp	r2, #13
   12a0c:	cmpne	r2, #0
   12a10:	movne	r3, #1
   12a14:	moveq	r3, #0
   12a18:	cmp	r2, #10
   12a1c:	moveq	r3, #0
   12a20:	andne	r3, r3, #1
   12a24:	cmp	r3, #0
   12a28:	beq	12a54 <__assert_fail@plt+0x169c>
   12a2c:	ldrb	r2, [ip, #1]!
   12a30:	subs	r3, r2, #13
   12a34:	movne	r3, #1
   12a38:	cmp	r2, #0
   12a3c:	moveq	r3, #0
   12a40:	cmp	r2, #10
   12a44:	moveq	r3, #0
   12a48:	andne	r3, r3, #1
   12a4c:	cmp	r3, #0
   12a50:	bne	12a2c <__assert_fail@plt+0x1674>
   12a54:	mov	lr, #0
   12a58:	movw	r3, #2236	; 0x8bc
   12a5c:	movt	r3, #3
   12a60:	movw	r1, #48248	; 0xbc78
   12a64:	movt	r1, #1
   12a68:	add	r2, sp, #24
   12a6c:	strb	lr, [ip]
   12a70:	ldr	r0, [r3]
   12a74:	bl	11280 <fprintf@plt>
   12a78:	b	12998 <__assert_fail@plt+0x15e0>
   12a7c:	mov	r0, r7
   12a80:	bl	11148 <ferror@plt>
   12a84:	cmp	r0, #0
   12a88:	bne	12bc0 <__assert_fail@plt+0x1808>
   12a8c:	cmp	r5, #1
   12a90:	beq	12bb4 <__assert_fail@plt+0x17fc>
   12a94:	add	sp, sp, #1504	; 0x5e0
   12a98:	ldrd	r4, [sp]
   12a9c:	ldrd	r6, [sp, #8]
   12aa0:	ldrd	r8, [sp, #16]
   12aa4:	ldr	sl, [sp, #24]
   12aa8:	add	sp, sp, #28
   12aac:	pop	{pc}		; (ldr pc, [sp], #4)
   12ab0:	ldr	sl, [r8, #2672]	; 0xa70
   12ab4:	mov	r4, r5
   12ab8:	cmp	sl, #0
   12abc:	bne	12ad4 <__assert_fail@plt+0x171c>
   12ac0:	b	129c0 <__assert_fail@plt+0x1608>
   12ac4:	add	r4, r4, #2
   12ac8:	ldr	sl, [r6, r4, lsl #2]
   12acc:	cmp	sl, #0
   12ad0:	beq	129c0 <__assert_fail@plt+0x1608>
   12ad4:	mov	r0, sl
   12ad8:	bl	11268 <strlen@plt>
   12adc:	mov	r2, r0
   12ae0:	mov	r1, sl
   12ae4:	add	r0, sp, #24
   12ae8:	bl	11388 <strncmp@plt>
   12aec:	cmp	r0, #0
   12af0:	bne	12ac4 <__assert_fail@plt+0x170c>
   12af4:	mov	r5, #1
   12af8:	b	12998 <__assert_fail@plt+0x15e0>
   12afc:	add	r3, r8, r4, lsl #2
   12b00:	ldr	r5, [r3, #2676]	; 0xa74
   12b04:	mov	r0, r5
   12b08:	bl	11268 <strlen@plt>
   12b0c:	mov	r2, r0
   12b10:	mov	r1, r5
   12b14:	add	r0, sp, #24
   12b18:	bl	11388 <strncmp@plt>
   12b1c:	adds	r5, r0, #0
   12b20:	movne	r5, #1
   12b24:	b	12998 <__assert_fail@plt+0x15e0>
   12b28:	movw	r3, #2244	; 0x8c4
   12b2c:	movt	r3, #3
   12b30:	ldr	r3, [r3, #12]
   12b34:	cmp	r3, #0
   12b38:	bne	12b90 <__assert_fail@plt+0x17d8>
   12b3c:	add	r0, sp, #480	; 0x1e0
   12b40:	add	sl, sp, #480	; 0x1e0
   12b44:	bl	11268 <strlen@plt>
   12b48:	movw	r3, #40548	; 0x9e64
   12b4c:	movt	r3, #1
   12b50:	ldrh	lr, [r3]
   12b54:	mov	r2, r0
   12b58:	add	ip, sp, #480	; 0x1e0
   12b5c:	add	ip, ip, r2
   12b60:	add	r1, sp, #8
   12b64:	ldrb	r3, [r3, #2]
   12b68:	add	r0, sp, #224	; 0xe0
   12b6c:	strh	lr, [sl, r2]
   12b70:	strb	r3, [ip, #2]
   12b74:	bl	127ec <__assert_fail@plt+0x1434>
   12b78:	mov	sl, r0
   12b7c:	add	r1, sp, #480	; 0x1e0
   12b80:	bl	1292c <__assert_fail@plt+0x1574>
   12b84:	mov	r0, sl
   12b88:	bl	113a0 <close@plt>
   12b8c:	b	12998 <__assert_fail@plt+0x15e0>
   12b90:	movw	r0, #40688	; 0x9ef0
   12b94:	movt	r0, #1
   12b98:	add	r2, sp, #224	; 0xe0
   12b9c:	add	r1, sp, #480	; 0x1e0
   12ba0:	bl	11100 <printf@plt>
   12ba4:	b	12b3c <__assert_fail@plt+0x1784>
   12ba8:	movw	r0, #40552	; 0x9e68
   12bac:	movt	r0, #1
   12bb0:	bl	125a4 <__assert_fail@plt+0x11ec>
   12bb4:	movw	r0, #40720	; 0x9f10
   12bb8:	movt	r0, #1
   12bbc:	bl	127ac <__assert_fail@plt+0x13f4>
   12bc0:	movw	r0, #40580	; 0x9e84
   12bc4:	movt	r0, #1
   12bc8:	bl	125a4 <__assert_fail@plt+0x11ec>
   12bcc:	movw	r3, #2360	; 0x938
   12bd0:	movt	r3, #3
   12bd4:	str	r4, [sp, #-8]!
   12bd8:	mov	r4, r0
   12bdc:	ldr	r0, [r3]
   12be0:	str	lr, [sp, #4]
   12be4:	bl	113a0 <close@plt>
   12be8:	movw	r0, #41148	; 0xa0bc
   12bec:	movt	r0, #1
   12bf0:	mov	r1, r4
   12bf4:	bl	127ac <__assert_fail@plt+0x13f4>
   12bf8:	ldr	r3, [r0]
   12bfc:	strd	r4, [sp, #-16]!
   12c00:	ldr	r5, [r0, #16]
   12c04:	str	r6, [sp, #8]
   12c08:	str	lr, [sp, #12]
   12c0c:	cmp	r3, #0
   12c10:	beq	12cbc <__assert_fail@plt+0x1904>
   12c14:	ldr	r0, [r1, #8]
   12c18:	mov	r2, #0
   12c1c:	add	r0, r0, #1
   12c20:	str	r0, [r1, #8]
   12c24:	b	12c2c <__assert_fail@plt+0x1874>
   12c28:	add	r2, r2, #1
   12c2c:	add	r3, r3, #24
   12c30:	ldr	r0, [r3, #-20]	; 0xffffffec
   12c34:	cmp	r0, #0
   12c38:	bne	12c28 <__assert_fail@plt+0x1870>
   12c3c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12c40:	cmp	r0, #0
   12c44:	bne	12c28 <__assert_fail@plt+0x1870>
   12c48:	ldr	r0, [r3, #-8]
   12c4c:	cmp	r0, #0
   12c50:	bne	12c28 <__assert_fail@plt+0x1870>
   12c54:	ldr	r0, [r3, #-4]
   12c58:	cmp	r0, #0
   12c5c:	bne	12c28 <__assert_fail@plt+0x1870>
   12c60:	ldm	r1, {r0, r3}
   12c64:	add	ip, r2, r2, lsl #1
   12c68:	add	r2, r3, r2
   12c6c:	add	r0, r0, ip
   12c70:	stm	r1, {r0, r2}
   12c74:	cmp	r5, #0
   12c78:	beq	12cac <__assert_fail@plt+0x18f4>
   12c7c:	ldr	r0, [r5]
   12c80:	cmp	r0, #0
   12c84:	beq	12cac <__assert_fail@plt+0x18f4>
   12c88:	mov	r4, r1
   12c8c:	mov	r1, r4
   12c90:	bl	12bf8 <__assert_fail@plt+0x1840>
   12c94:	ldr	r3, [r4, #12]
   12c98:	ldr	r0, [r5, #16]!
   12c9c:	add	r3, r3, #1
   12ca0:	cmp	r0, #0
   12ca4:	str	r3, [r4, #12]
   12ca8:	bne	12c8c <__assert_fail@plt+0x18d4>
   12cac:	ldrd	r4, [sp]
   12cb0:	ldr	r6, [sp, #8]
   12cb4:	add	sp, sp, #12
   12cb8:	pop	{pc}		; (ldr pc, [sp], #4)
   12cbc:	ldr	r3, [r0, #4]
   12cc0:	cmp	r3, #0
   12cc4:	beq	12c74 <__assert_fail@plt+0x18bc>
   12cc8:	ldr	r3, [r1, #8]
   12ccc:	add	r3, r3, #1
   12cd0:	str	r3, [r1, #8]
   12cd4:	b	12c74 <__assert_fail@plt+0x18bc>
   12cd8:	cmp	r0, #86	; 0x56
   12cdc:	beq	12ce8 <__assert_fail@plt+0x1930>
   12ce0:	mov	r0, #7
   12ce4:	bx	lr
   12ce8:	movw	r3, #2264	; 0x8d8
   12cec:	movt	r3, #3
   12cf0:	str	r4, [sp, #-8]!
   12cf4:	ldr	r3, [r3]
   12cf8:	mov	r4, r2
   12cfc:	str	lr, [sp, #4]
   12d00:	cmp	r3, #0
   12d04:	beq	12d34 <__assert_fail@plt+0x197c>
   12d08:	mov	r1, r2
   12d0c:	ldr	r0, [r2, #48]	; 0x30
   12d10:	blx	r3
   12d14:	ldr	r0, [r4, #16]
   12d18:	ands	r0, r0, #32
   12d1c:	beq	12d30 <__assert_fail@plt+0x1978>
   12d20:	ldr	r4, [sp]
   12d24:	add	sp, sp, #4
   12d28:	mov	r0, #0
   12d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d30:	bl	1125c <exit@plt>
   12d34:	movw	r3, #2368	; 0x940
   12d38:	movt	r3, #3
   12d3c:	ldr	r2, [r3]
   12d40:	cmp	r2, #0
   12d44:	beq	12d5c <__assert_fail@plt+0x19a4>
   12d48:	movw	r1, #48248	; 0xbc78
   12d4c:	movt	r1, #1
   12d50:	ldr	r0, [r4, #48]	; 0x30
   12d54:	bl	11280 <fprintf@plt>
   12d58:	b	12d14 <__assert_fail@plt+0x195c>
   12d5c:	movw	r2, #47812	; 0xbac4
   12d60:	movt	r2, #1
   12d64:	movw	r1, #47848	; 0xbae8
   12d68:	movt	r1, #1
   12d6c:	mov	r0, r4
   12d70:	bl	185b8 <argp_error@@Base>
   12d74:	b	12d14 <__assert_fail@plt+0x195c>
   12d78:	cmn	r0, #3
   12d7c:	str	r4, [sp, #-8]!
   12d80:	mov	r4, r2
   12d84:	str	lr, [sp, #4]
   12d88:	sub	sp, sp, #8
   12d8c:	beq	12e8c <__assert_fail@plt+0x1ad4>
   12d90:	ble	12dc8 <__assert_fail@plt+0x1a10>
   12d94:	cmn	r0, #2
   12d98:	beq	12e40 <__assert_fail@plt+0x1a88>
   12d9c:	cmp	r0, #63	; 0x3f
   12da0:	bne	12e2c <__assert_fail@plt+0x1a74>
   12da4:	mov	r0, r4
   12da8:	movw	r2, #634	; 0x27a
   12dac:	ldr	r1, [r4, #48]	; 0x30
   12db0:	bl	184f8 <argp_state_help@@Base>
   12db4:	mov	r0, #0
   12db8:	add	sp, sp, #8
   12dbc:	ldr	r4, [sp]
   12dc0:	add	sp, sp, #4
   12dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   12dc8:	cmn	r0, #4
   12dcc:	bne	12e2c <__assert_fail@plt+0x1a74>
   12dd0:	cmp	r1, #0
   12dd4:	movw	r0, #47852	; 0xbaec
   12dd8:	movt	r0, #1
   12ddc:	mov	r2, #10
   12de0:	movne	r0, r1
   12de4:	movw	r4, #2260	; 0x8d4
   12de8:	movt	r4, #3
   12dec:	mov	r1, #0
   12df0:	bl	110f4 <strtol@plt>
   12df4:	str	r0, [r4]
   12df8:	b	12e04 <__assert_fail@plt+0x1a4c>
   12dfc:	mov	r0, #1
   12e00:	bl	11184 <sleep@plt>
   12e04:	ldr	r3, [r4]
   12e08:	sub	r2, r3, #1
   12e0c:	cmp	r3, #0
   12e10:	str	r2, [r4]
   12e14:	bgt	12dfc <__assert_fail@plt+0x1a44>
   12e18:	mov	r0, #0
   12e1c:	add	sp, sp, #8
   12e20:	ldr	r4, [sp]
   12e24:	add	sp, sp, #4
   12e28:	pop	{pc}		; (ldr pc, [sp], #4)
   12e2c:	mov	r0, #7
   12e30:	add	sp, sp, #8
   12e34:	ldr	r4, [sp]
   12e38:	add	sp, sp, #4
   12e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e40:	movw	r3, #2228	; 0x8b4
   12e44:	movt	r3, #3
   12e48:	str	r1, [sp, #4]
   12e4c:	mov	r0, r1
   12e50:	str	r1, [r3]
   12e54:	bl	140ec <argp_parse@@Base+0xf2c>
   12e58:	ldr	r3, [r4, #16]
   12e5c:	movw	r2, #2224	; 0x8b0
   12e60:	movt	r2, #3
   12e64:	str	r0, [r4, #40]	; 0x28
   12e68:	str	r0, [r2]
   12e6c:	ldr	r1, [sp, #4]
   12e70:	and	r3, r3, #3
   12e74:	cmp	r3, #1
   12e78:	bne	12e18 <__assert_fail@plt+0x1a60>
   12e7c:	ldr	r3, [r4, #8]
   12e80:	mov	r0, #0
   12e84:	str	r1, [r3]
   12e88:	b	12db8 <__assert_fail@plt+0x1a00>
   12e8c:	ldr	r1, [r4, #48]	; 0x30
   12e90:	mov	r0, r4
   12e94:	movw	r2, #513	; 0x201
   12e98:	bl	184f8 <argp_state_help@@Base>
   12e9c:	mov	r0, #0
   12ea0:	add	sp, sp, #8
   12ea4:	ldr	r4, [sp]
   12ea8:	add	sp, sp, #4
   12eac:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12eb4:	strd	r6, [sp, #8]
   12eb8:	strd	r8, [sp, #16]
   12ebc:	strd	sl, [sp, #24]
   12ec0:	str	lr, [sp, #32]
   12ec4:	sub	sp, sp, #44	; 0x2c
   12ec8:	ldr	fp, [r0]
   12ecc:	str	r3, [sp, #16]
   12ed0:	ldr	r3, [r0, #16]
   12ed4:	ldr	r7, [sp, #80]	; 0x50
   12ed8:	cmp	fp, #0
   12edc:	str	r3, [sp, #24]
   12ee0:	strd	r0, [sp, #28]
   12ee4:	str	r2, [sp, #36]	; 0x24
   12ee8:	beq	13194 <__assert_fail@plt+0x1ddc>
   12eec:	ldr	r9, [r7, #4]
   12ef0:	movw	r3, #36409	; 0x8e39
   12ef4:	movt	r3, #14563	; 0x38e3
   12ef8:	mov	r4, fp
   12efc:	str	r3, [sp, #20]
   12f00:	ldr	r6, [r4, #4]
   12f04:	cmp	r6, #0
   12f08:	bne	12f18 <__assert_fail@plt+0x1b60>
   12f0c:	ldr	r3, [r4]
   12f10:	cmp	r3, #0
   12f14:	beq	1308c <__assert_fail@plt+0x1cd4>
   12f18:	ldr	r3, [r4, #12]
   12f1c:	tst	r3, #4
   12f20:	moveq	r5, r3
   12f24:	moveq	fp, r4
   12f28:	ldrne	r5, [fp, #12]
   12f2c:	ands	r5, r5, #8
   12f30:	bne	13074 <__assert_fail@plt+0x1cbc>
   12f34:	tst	r3, #8
   12f38:	bne	12fb8 <__assert_fail@plt+0x1c00>
   12f3c:	sub	r3, r6, #1
   12f40:	cmp	r3, #254	; 0xfe
   12f44:	bhi	12fb8 <__assert_fail@plt+0x1c00>
   12f48:	bl	11250 <__ctype_b_loc@plt>
   12f4c:	ldr	r1, [r0]
   12f50:	lsl	r3, r6, #1
   12f54:	ldrh	r3, [r1, r3]
   12f58:	tst	r3, #16384	; 0x4000
   12f5c:	beq	12fb8 <__assert_fail@plt+0x1c00>
   12f60:	add	r3, r9, #1
   12f64:	str	r3, [r7, #4]
   12f68:	strb	r6, [r9]
   12f6c:	ldr	r3, [fp, #8]
   12f70:	cmp	r3, #0
   12f74:	beq	12fa8 <__assert_fail@plt+0x1bf0>
   12f78:	ldr	r3, [r7, #4]
   12f7c:	mov	r2, #58	; 0x3a
   12f80:	add	r1, r3, #1
   12f84:	str	r1, [r7, #4]
   12f88:	strb	r2, [r3]
   12f8c:	ldr	r3, [fp, #12]
   12f90:	tst	r3, #1
   12f94:	beq	12fa8 <__assert_fail@plt+0x1bf0>
   12f98:	ldr	r3, [r7, #4]
   12f9c:	add	r1, r3, #1
   12fa0:	str	r1, [r7, #4]
   12fa4:	strb	r2, [r3]
   12fa8:	ldr	r3, [r7, #4]
   12fac:	mov	r2, #0
   12fb0:	strb	r2, [r3]
   12fb4:	ldr	r9, [r7, #4]
   12fb8:	ldr	sl, [r4]
   12fbc:	cmp	sl, #0
   12fc0:	beq	13074 <__assert_fail@plt+0x1cbc>
   12fc4:	ldr	r3, [r7]
   12fc8:	ldr	r8, [r3, #8]
   12fcc:	str	r3, [sp, #12]
   12fd0:	ldr	r0, [r8]
   12fd4:	cmp	r0, #0
   12fd8:	beq	12ffc <__assert_fail@plt+0x1c44>
   12fdc:	mov	r6, r8
   12fe0:	mov	r1, sl
   12fe4:	bl	110e8 <strcmp@plt>
   12fe8:	cmp	r0, #0
   12fec:	beq	1307c <__assert_fail@plt+0x1cc4>
   12ff0:	ldr	r0, [r6, #16]!
   12ff4:	cmp	r0, #0
   12ff8:	bne	12fe0 <__assert_fail@plt+0x1c28>
   12ffc:	ldr	r0, [fp, #8]
   13000:	ldr	r1, [r7, #8]
   13004:	cmp	r0, #0
   13008:	str	sl, [r1]
   1300c:	beq	13020 <__assert_fail@plt+0x1c68>
   13010:	ldr	r3, [fp, #12]
   13014:	tst	r3, #1
   13018:	movne	r5, #2
   1301c:	moveq	r5, #1
   13020:	str	r5, [r1, #4]
   13024:	mov	r3, #0
   13028:	add	ip, r1, #16
   1302c:	ldr	r0, [r4, #4]
   13030:	str	r3, [r1, #8]
   13034:	ldr	r2, [sp, #16]
   13038:	cmp	r0, r3
   1303c:	ldr	r3, [sp, #12]
   13040:	ldreq	r0, [fp, #4]
   13044:	ldr	r3, [r3, #48]	; 0x30
   13048:	bic	r0, r0, #-16777216	; 0xff000000
   1304c:	sub	r3, r2, r3
   13050:	ldr	r2, [sp, #20]
   13054:	asr	r3, r3, #2
   13058:	mul	r3, r2, r3
   1305c:	add	r3, r3, #1
   13060:	add	r3, r0, r3, lsl #24
   13064:	str	r3, [r1, #12]
   13068:	mov	r3, #0
   1306c:	str	ip, [r7, #8]
   13070:	str	r3, [r1, #16]
   13074:	add	r4, r4, #24
   13078:	b	12f00 <__assert_fail@plt+0x1b48>
   1307c:	sub	r6, r6, r8
   13080:	cmp	r6, #0
   13084:	bge	13074 <__assert_fail@plt+0x1cbc>
   13088:	b	12ffc <__assert_fail@plt+0x1c44>
   1308c:	ldr	r3, [r4, #16]
   13090:	cmp	r3, #0
   13094:	bne	12f18 <__assert_fail@plt+0x1b60>
   13098:	ldr	r3, [r4, #20]
   1309c:	cmp	r3, #0
   130a0:	bne	12f18 <__assert_fail@plt+0x1b60>
   130a4:	ldr	r3, [sp, #28]
   130a8:	ldr	r2, [r3, #4]
   130ac:	mov	r3, #0
   130b0:	ldr	r1, [sp, #16]
   130b4:	ldr	r0, [sp, #24]
   130b8:	str	r2, [r1]
   130bc:	mov	r2, r1
   130c0:	ldr	r1, [sp, #28]
   130c4:	cmp	r0, r3
   130c8:	stmib	r2, {r1, r9}
   130cc:	ldr	r1, [sp, #32]
   130d0:	str	r3, [r2, #12]
   130d4:	str	r1, [r2, #16]
   130d8:	ldr	r1, [sp, #36]	; 0x24
   130dc:	str	r3, [r2, #24]
   130e0:	str	r3, [r2, #28]
   130e4:	str	r3, [r2, #32]
   130e8:	str	r1, [r2, #20]
   130ec:	beq	13128 <__assert_fail@plt+0x1d70>
   130f0:	ldr	r2, [r0]
   130f4:	cmp	r2, r3
   130f8:	beq	131b8 <__assert_fail@plt+0x1e00>
   130fc:	mov	r1, r0
   13100:	add	r3, r3, #1
   13104:	ldr	r2, [r1, r3, lsl #4]
   13108:	cmp	r2, #0
   1310c:	bne	13100 <__assert_fail@plt+0x1d48>
   13110:	lsl	r3, r3, #2
   13114:	ldr	r2, [r7, #12]
   13118:	ldr	r1, [sp, #16]
   1311c:	add	r3, r2, r3
   13120:	str	r2, [r1, #28]
   13124:	str	r3, [r7, #12]
   13128:	ldr	r3, [sp, #16]
   1312c:	add	r0, r3, #36	; 0x24
   13130:	ldr	r5, [sp, #24]
   13134:	cmp	r5, #0
   13138:	beq	13178 <__assert_fail@plt+0x1dc0>
   1313c:	ldr	r1, [r5]
   13140:	cmp	r1, #0
   13144:	beq	13178 <__assert_fail@plt+0x1dc0>
   13148:	ldr	r6, [sp, #16]
   1314c:	mov	r2, #0
   13150:	add	r4, r2, #1
   13154:	mov	r3, r0
   13158:	str	r7, [sp]
   1315c:	mov	r0, r1
   13160:	mov	r1, r6
   13164:	bl	12eb0 <__assert_fail@plt+0x1af8>
   13168:	ldr	r1, [r5, r4, lsl #4]
   1316c:	mov	r2, r4
   13170:	cmp	r1, #0
   13174:	bne	13150 <__assert_fail@plt+0x1d98>
   13178:	add	sp, sp, #44	; 0x2c
   1317c:	ldrd	r4, [sp]
   13180:	ldrd	r6, [sp, #8]
   13184:	ldrd	r8, [sp, #16]
   13188:	ldrd	sl, [sp, #24]
   1318c:	add	sp, sp, #32
   13190:	pop	{pc}		; (ldr pc, [sp], #4)
   13194:	ldr	r3, [sp, #28]
   13198:	ldr	r2, [r3, #4]
   1319c:	cmp	r2, #0
   131a0:	beq	131ac <__assert_fail@plt+0x1df4>
   131a4:	ldr	r9, [r7, #4]
   131a8:	b	130ac <__assert_fail@plt+0x1cf4>
   131ac:	ldr	r0, [sp, #16]
   131b0:	str	r2, [sp, #16]
   131b4:	b	13130 <__assert_fail@plt+0x1d78>
   131b8:	mov	r3, r2
   131bc:	b	13114 <__assert_fail@plt+0x1d5c>

000131c0 <argp_parse@@Base>:
   131c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   131c4:	tst	r3, #1
   131c8:	mov	r5, r3
   131cc:	strd	r6, [sp, #8]
   131d0:	mov	r7, r0
   131d4:	strd	r8, [sp, #16]
   131d8:	strd	sl, [sp, #24]
   131dc:	add	fp, sp, #32
   131e0:	str	lr, [sp, #32]
   131e4:	sub	sp, sp, #236	; 0xec
   131e8:	str	r1, [fp, #-244]	; 0xffffff0c
   131ec:	str	r2, [fp, #-232]	; 0xffffff18
   131f0:	bne	1321c <argp_parse@@Base+0x5c>
   131f4:	movw	r3, #2228	; 0x8b4
   131f8:	movt	r3, #3
   131fc:	ldr	r2, [r3]
   13200:	cmp	r2, #0
   13204:	beq	13c40 <argp_parse@@Base+0xa80>
   13208:	movw	r4, #2224	; 0x8b0
   1320c:	movt	r4, #3
   13210:	ldr	r3, [r4]
   13214:	cmp	r3, #0
   13218:	beq	13c50 <argp_parse@@Base+0xa90>
   1321c:	ands	r3, r5, #4
   13220:	moveq	r6, #1
   13224:	movne	r6, #0
   13228:	ands	ip, r5, #16
   1322c:	str	r3, [fp, #-236]	; 0xffffff14
   13230:	beq	13288 <argp_parse@@Base+0xc8>
   13234:	mov	r3, #0
   13238:	sub	r4, fp, #196	; 0xc4
   1323c:	str	r6, [fp, #-228]	; 0xffffff1c
   13240:	cmp	r7, r3
   13244:	str	r3, [fp, #-224]	; 0xffffff20
   13248:	str	r3, [fp, #-220]	; 0xffffff24
   1324c:	str	r3, [fp, #-216]	; 0xffffff28
   13250:	str	r3, [r4, #8]
   13254:	str	r3, [r4, #12]
   13258:	str	r3, [r4, #16]
   1325c:	str	r3, [r4, #20]
   13260:	str	r3, [r4, #24]
   13264:	str	r3, [r4, #28]
   13268:	str	r3, [r4, #32]
   1326c:	bne	13338 <argp_parse@@Base+0x178>
   13270:	mov	r3, #52	; 0x34
   13274:	mov	sl, #36	; 0x24
   13278:	mov	r9, r7
   1327c:	str	r3, [fp, #-236]	; 0xffffff14
   13280:	mov	r3, sl
   13284:	b	13370 <argp_parse@@Base+0x1b0>
   13288:	sub	sp, sp, #64	; 0x40
   1328c:	mov	r1, ip
   13290:	add	r3, sp, #8
   13294:	sub	sp, sp, #32
   13298:	add	r4, sp, #8
   1329c:	mov	r0, r3
   132a0:	mov	r2, #64	; 0x40
   132a4:	str	ip, [r4]
   132a8:	str	ip, [r4, #4]
   132ac:	str	ip, [r4, #8]
   132b0:	str	ip, [r4, #12]
   132b4:	str	r3, [r4, #16]
   132b8:	str	ip, [r4, #20]
   132bc:	str	ip, [r4, #24]
   132c0:	bl	112b0 <memset@plt>
   132c4:	movw	r2, #2368	; 0x940
   132c8:	movt	r2, #3
   132cc:	ldr	r1, [r2]
   132d0:	mov	r3, r0
   132d4:	cmp	r7, #0
   132d8:	movw	r2, #47532	; 0xb9ac
   132dc:	movt	r2, #1
   132e0:	strne	r7, [r3], #16
   132e4:	str	r2, [r3]
   132e8:	cmp	r1, #0
   132ec:	beq	13db8 <argp_parse@@Base+0xbf8>
   132f0:	ldr	r1, [pc, #3392]	; 14038 <argp_parse@@Base+0xe78>
   132f4:	add	r2, r3, #32
   132f8:	str	r1, [r3, #16]
   132fc:	mov	r3, #0
   13300:	mov	r7, r4
   13304:	str	r6, [fp, #-228]	; 0xffffff1c
   13308:	sub	r4, fp, #196	; 0xc4
   1330c:	str	r3, [fp, #-224]	; 0xffffff20
   13310:	str	r3, [fp, #-220]	; 0xffffff24
   13314:	str	r3, [fp, #-216]	; 0xffffff28
   13318:	str	r3, [r2]
   1331c:	str	r3, [r4, #8]
   13320:	str	r3, [r4, #12]
   13324:	str	r3, [r4, #16]
   13328:	str	r3, [r4, #20]
   1332c:	str	r3, [r4, #24]
   13330:	str	r3, [r4, #28]
   13334:	str	r3, [r4, #32]
   13338:	sub	r1, fp, #228	; 0xe4
   1333c:	mov	r0, r7
   13340:	bl	12bf8 <__assert_fail@plt+0x1840>
   13344:	ldr	r6, [fp, #-228]	; 0xffffff1c
   13348:	ldrd	r2, [fp, #-224]	; 0xffffff20
   1334c:	ldr	r9, [fp, #-216]	; 0xffffff28
   13350:	add	r3, r3, #1
   13354:	add	r2, r2, #1
   13358:	add	r3, r3, r3, lsl #3
   1335c:	lsl	r9, r9, #2
   13360:	lsl	r3, r3, #2
   13364:	add	sl, r9, r3
   13368:	add	r2, sl, r2, lsl #4
   1336c:	str	r2, [fp, #-236]	; 0xffffff14
   13370:	str	r3, [fp, #-240]	; 0xffffff10
   13374:	ldr	r3, [fp, #-236]	; 0xffffff14
   13378:	add	r0, r6, r3
   1337c:	add	r0, r0, #1
   13380:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   13384:	cmp	r0, #0
   13388:	mov	r6, r0
   1338c:	str	r0, [fp, #-40]	; 0xffffffd8
   13390:	moveq	r5, #12
   13394:	ldr	r3, [fp, #-240]	; 0xffffff10
   13398:	beq	138b8 <argp_parse@@Base+0x6f8>
   1339c:	mov	r2, r9
   133a0:	mov	r1, #1
   133a4:	ldrd	r8, [r4, #8]
   133a8:	add	ip, r0, sl
   133ac:	add	r3, r0, r3
   133b0:	str	r0, [fp, #-112]	; 0xffffff90
   133b4:	ldr	lr, [fp, #-236]	; 0xffffff14
   133b8:	str	r1, [fp, #-196]	; 0xffffff3c
   133bc:	str	r1, [fp, #-192]	; 0xffffff40
   133c0:	str	ip, [fp, #-240]	; 0xffffff10
   133c4:	strd	r8, [fp, #-140]	; 0xffffff74
   133c8:	ldrd	r8, [r4, #16]
   133cc:	add	sl, r0, lr
   133d0:	str	r3, [fp, #-104]	; 0xffffff98
   133d4:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   133d8:	strd	r8, [fp, #-252]	; 0xffffff04
   133dc:	ldrd	r8, [r4, #24]
   133e0:	str	sl, [fp, #-156]	; 0xffffff64
   133e4:	strd	r0, [fp, #-148]	; 0xffffff6c
   133e8:	mov	r0, r3
   133ec:	sub	r3, fp, #260	; 0x104
   133f0:	str	ip, [fp, #-152]	; 0xffffff68
   133f4:	mov	r1, #0
   133f8:	ldr	ip, [r4, #32]
   133fc:	strd	r8, [r3]
   13400:	ldrd	r8, [fp, #-252]	; 0xffffff04
   13404:	strd	r8, [fp, #-132]	; 0xffffff7c
   13408:	ldrd	r8, [r3]
   1340c:	str	ip, [fp, #-116]	; 0xffffff8c
   13410:	strd	r8, [fp, #-124]	; 0xffffff84
   13414:	bl	112b0 <memset@plt>
   13418:	ldr	ip, [fp, #-240]	; 0xffffff10
   1341c:	sub	r2, fp, #160	; 0xa0
   13420:	tst	r5, #8
   13424:	str	r2, [fp, #-212]	; 0xffffff2c
   13428:	str	sl, [fp, #-208]	; 0xffffff30
   1342c:	str	r0, [fp, #-200]	; 0xffffff38
   13430:	str	ip, [fp, #-204]	; 0xffffff34
   13434:	bne	138d8 <argp_parse@@Base+0x718>
   13438:	ands	r3, r5, #4
   1343c:	cmp	r3, #0
   13440:	moveq	r3, sl
   13444:	beq	13458 <argp_parse@@Base+0x298>
   13448:	add	r3, sl, #1
   1344c:	mov	r2, #43	; 0x2b
   13450:	str	r3, [fp, #-208]	; 0xffffff30
   13454:	strb	r2, [sl]
   13458:	ldr	r2, [fp, #-204]	; 0xffffff34
   1345c:	mov	r4, #0
   13460:	cmp	r7, r4
   13464:	strb	r4, [r3]
   13468:	str	r4, [r2]
   1346c:	str	r7, [fp, #-160]	; 0xffffff60
   13470:	beq	13ac0 <argp_parse@@Base+0x900>
   13474:	sub	ip, fp, #212	; 0xd4
   13478:	mov	r2, r4
   1347c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13480:	mov	r1, r4
   13484:	mov	r0, r7
   13488:	str	ip, [sp]
   1348c:	bl	12eb0 <__assert_fail@plt+0x1af8>
   13490:	movw	r1, #2232	; 0x8b8
   13494:	movt	r1, #3
   13498:	ldr	r6, [fp, #-232]	; 0xffffff18
   1349c:	movw	r2, #2236	; 0x8bc
   134a0:	movt	r2, #3
   134a4:	str	r0, [fp, #-108]	; 0xffffff94
   134a8:	mov	lr, #1
   134ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   134b0:	ldr	ip, [r1]
   134b4:	str	lr, [fp, #-100]	; 0xffffff9c
   134b8:	ldr	r1, [fp, #-244]	; 0xffffff0c
   134bc:	cmp	r0, r3
   134c0:	mov	r0, #0
   134c4:	ldr	r2, [r2]
   134c8:	movls	r3, r6
   134cc:	ldr	lr, [fp, #-160]	; 0xffffff60
   134d0:	str	ip, [fp, #-52]	; 0xffffffcc
   134d4:	str	r1, [fp, #-92]	; 0xffffffa4
   134d8:	mov	r1, #0
   134dc:	str	r2, [fp, #-48]	; 0xffffffd0
   134e0:	sub	r2, fp, #160	; 0xa0
   134e4:	str	lr, [fp, #-96]	; 0xffffffa0
   134e8:	str	r6, [fp, #-88]	; 0xffffffa8
   134ec:	strd	r4, [fp, #-84]	; 0xffffffac
   134f0:	strd	r0, [fp, #-76]	; 0xffffffb4
   134f4:	strd	r0, [fp, #-68]	; 0xffffffbc
   134f8:	strd	r0, [fp, #-60]	; 0xffffffc4
   134fc:	str	r2, [fp, #-44]	; 0xffffffd4
   13500:	bls	135e8 <argp_parse@@Base+0x428>
   13504:	mov	r6, #3
   13508:	movt	r6, #256	; 0x100
   1350c:	ldr	r8, [fp, #-232]	; 0xffffff18
   13510:	add	r4, r3, #36	; 0x24
   13514:	ldr	r2, [fp, #8]
   13518:	str	r2, [r3, #24]
   1351c:	b	13568 <argp_parse@@Base+0x3a8>
   13520:	ldr	lr, [r4, #-24]	; 0xffffffe8
   13524:	ldr	ip, [r4, #-4]
   13528:	str	ip, [fp, #-60]	; 0xffffffc4
   1352c:	ldr	ip, [r4, #-12]
   13530:	str	ip, [fp, #-68]	; 0xffffffbc
   13534:	ldr	ip, [r4, #-8]
   13538:	str	lr, [fp, #-76]	; 0xffffffb4
   1353c:	str	ip, [fp, #-64]	; 0xffffffc0
   13540:	blx	r3
   13544:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13548:	str	r3, [r4, #-4]
   1354c:	ldr	r3, [fp, #-108]	; 0xffffff94
   13550:	cmp	r4, r3
   13554:	bcs	13b74 <argp_parse@@Base+0x9b4>
   13558:	cmp	r0, #7
   1355c:	cmpne	r0, #0
   13560:	bne	13b64 <argp_parse@@Base+0x9a4>
   13564:	add	r4, r4, #36	; 0x24
   13568:	ldr	r3, [r4, #-20]	; 0xffffffec
   1356c:	mov	r1, #0
   13570:	sub	r2, fp, #96	; 0x60
   13574:	mov	r0, r6
   13578:	cmp	r3, r1
   1357c:	beq	13590 <argp_parse@@Base+0x3d0>
   13580:	ldr	ip, [r4, #-16]
   13584:	ldr	r3, [r3, #28]
   13588:	ldr	r3, [r3, ip, lsl #2]
   1358c:	str	r3, [r4, #-12]
   13590:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13594:	cmp	r3, #0
   13598:	bne	13520 <argp_parse@@Base+0x360>
   1359c:	ldr	r3, [r4, #-32]	; 0xffffffe0
   135a0:	ldr	r3, [r3, #16]
   135a4:	cmp	r3, #0
   135a8:	beq	135d0 <argp_parse@@Base+0x410>
   135ac:	ldr	r3, [r3]
   135b0:	cmp	r3, #0
   135b4:	beq	135d0 <argp_parse@@Base+0x410>
   135b8:	ldr	ip, [r4, #-12]
   135bc:	ldr	r3, [r4, #-8]
   135c0:	str	ip, [r3]
   135c4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   135c8:	cmp	r3, #0
   135cc:	bne	13520 <argp_parse@@Base+0x360>
   135d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   135d4:	cmp	r4, r3
   135d8:	bcc	13564 <argp_parse@@Base+0x3a4>
   135dc:	str	r8, [fp, #-232]	; 0xffffff18
   135e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   135e4:	ldr	r5, [fp, #-80]	; 0xffffffb0
   135e8:	tst	r5, #2
   135ec:	beq	13b34 <argp_parse@@Base+0x974>
   135f0:	mov	r2, #0
   135f4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   135f8:	tst	r5, #1
   135fc:	subne	r3, r3, #4
   13600:	str	r2, [fp, #-144]	; 0xffffff70
   13604:	ldr	r2, [fp, #-232]	; 0xffffff18
   13608:	strne	r3, [fp, #-88]	; 0xffffffa8
   1360c:	addne	r4, r4, #1
   13610:	strne	r4, [fp, #-92]	; 0xffffffa4
   13614:	cmp	r2, r3
   13618:	beq	13b4c <argp_parse@@Base+0x98c>
   1361c:	movw	r3, #2224	; 0x8b0
   13620:	movt	r3, #3
   13624:	ldr	r3, [r3]
   13628:	str	r3, [fp, #-56]	; 0xffffffc8
   1362c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13630:	movw	r3, #47864	; 0xbaf8
   13634:	movt	r3, #1
   13638:	mov	r9, #6
   1363c:	movt	r9, #256	; 0x100
   13640:	ldr	r7, [fp, #-84]	; 0xffffffac
   13644:	mov	r0, r4
   13648:	str	r3, [fp, #-232]	; 0xffffff18
   1364c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13650:	cmp	r3, #0
   13654:	beq	1373c <argp_parse@@Base+0x57c>
   13658:	cmp	r3, r7
   1365c:	movgt	r3, #0
   13660:	strgt	r3, [fp, #-72]	; 0xffffffb8
   13664:	bgt	1373c <argp_parse@@Base+0x57c>
   13668:	cmp	r0, r7
   1366c:	ble	13984 <argp_parse@@Base+0x7c4>
   13670:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13674:	tst	r3, #4
   13678:	bne	13b98 <argp_parse@@Base+0x9d8>
   1367c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13680:	ldr	sl, [r3, r7, lsl #2]
   13684:	str	sl, [fp, #-136]	; 0xffffff78
   13688:	ldr	r8, [fp, #-112]	; 0xffffff90
   1368c:	str	r7, [fp, #-84]	; 0xffffffac
   13690:	ldr	ip, [fp, #-108]	; 0xffffff94
   13694:	cmp	r8, ip
   13698:	bcs	1397c <argp_parse@@Base+0x7bc>
   1369c:	mov	lr, r7
   136a0:	add	r4, r8, #36	; 0x24
   136a4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   136a8:	mov	r0, #0
   136ac:	add	r6, lr, #1
   136b0:	sub	r2, fp, #96	; 0x60
   136b4:	mov	r1, sl
   136b8:	sub	r5, r4, #36	; 0x24
   136bc:	mov	r8, r4
   136c0:	str	r6, [fp, #-84]	; 0xffffffac
   136c4:	cmp	r3, r0
   136c8:	beq	13968 <argp_parse@@Base+0x7a8>
   136cc:	ldr	lr, [r4, #-24]	; 0xffffffe8
   136d0:	ldr	ip, [r4, #-4]
   136d4:	str	ip, [fp, #-60]	; 0xffffffc4
   136d8:	ldr	ip, [r4, #-12]
   136dc:	str	ip, [fp, #-68]	; 0xffffffbc
   136e0:	ldr	ip, [r4, #-8]
   136e4:	str	lr, [fp, #-76]	; 0xffffffb4
   136e8:	str	ip, [fp, #-64]	; 0xffffffc0
   136ec:	blx	r3
   136f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   136f4:	cmp	r0, #7
   136f8:	str	r3, [r4, #-4]
   136fc:	beq	138f0 <argp_parse@@Base+0x730>
   13700:	cmp	r0, #0
   13704:	bne	13a38 <argp_parse@@Base+0x878>
   13708:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1370c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13710:	cmp	r7, r3
   13714:	bge	13a50 <argp_parse@@Base+0x890>
   13718:	ldr	r1, [r4, #-24]	; 0xffffffe8
   1371c:	sub	ip, r3, r7
   13720:	mov	r7, r3
   13724:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13728:	add	r3, r1, ip
   1372c:	str	r3, [r4, #-24]	; 0xffffffe8
   13730:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13734:	cmp	r3, #0
   13738:	bne	13658 <argp_parse@@Base+0x498>
   1373c:	cmp	r2, #0
   13740:	beq	13668 <argp_parse@@Base+0x4a8>
   13744:	mvn	r2, #0
   13748:	str	r7, [fp, #-148]	; 0xffffff6c
   1374c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13750:	str	r2, [fp, #-140]	; 0xffffff74
   13754:	ldr	r2, [fp, #-156]	; 0xffffff64
   13758:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1375c:	ands	ip, r3, #64	; 0x40
   13760:	ldr	r3, [fp, #-152]	; 0xffffff68
   13764:	beq	13a64 <argp_parse@@Base+0x8a4>
   13768:	mov	ip, #0
   1376c:	sub	lr, fp, #148	; 0x94
   13770:	stm	sp, {ip, lr}
   13774:	bl	14294 <argp_parse@@Base+0x10d4>
   13778:	ldr	r7, [fp, #-148]	; 0xffffff6c
   1377c:	mov	r4, r0
   13780:	cmn	r4, #1
   13784:	str	r7, [fp, #-84]	; 0xffffffac
   13788:	beq	13a88 <argp_parse@@Base+0x8c8>
   1378c:	cmp	r4, #63	; 0x3f
   13790:	beq	137a8 <argp_parse@@Base+0x5e8>
   13794:	cmp	r4, #1
   13798:	bne	13d2c <argp_parse@@Base+0xb6c>
   1379c:	sub	r7, r7, #1
   137a0:	ldr	sl, [fp, #-136]	; 0xffffff78
   137a4:	b	13688 <argp_parse@@Base+0x4c8>
   137a8:	ldr	r3, [fp, #-140]	; 0xffffff74
   137ac:	cmn	r3, #1
   137b0:	beq	13c64 <argp_parse@@Base+0xaa4>
   137b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   137b8:	sub	r7, fp, #96	; 0x60
   137bc:	mov	r0, r7
   137c0:	mov	r2, #260	; 0x104
   137c4:	mov	r5, #7
   137c8:	bl	184f8 <argp_state_help@@Base>
   137cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   137d0:	ldr	ip, [fp, #-108]	; 0xffffff94
   137d4:	cmp	r3, ip
   137d8:	mov	r4, r3
   137dc:	bcs	13fc8 <argp_parse@@Base+0xe08>
   137e0:	mov	r6, #5
   137e4:	movt	r6, #256	; 0x100
   137e8:	ldr	r3, [r4]
   137ec:	mov	r1, #0
   137f0:	sub	r2, fp, #96	; 0x60
   137f4:	mov	r0, r6
   137f8:	cmp	r3, r1
   137fc:	beq	13830 <argp_parse@@Base+0x670>
   13800:	ldr	lr, [r4, #12]
   13804:	ldr	ip, [r4, #32]
   13808:	str	ip, [fp, #-60]	; 0xffffffc4
   1380c:	ldr	ip, [r4, #24]
   13810:	str	ip, [fp, #-68]	; 0xffffffbc
   13814:	ldr	ip, [r4, #28]
   13818:	str	lr, [fp, #-76]	; 0xffffffb4
   1381c:	str	ip, [fp, #-64]	; 0xffffffc0
   13820:	blx	r3
   13824:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13828:	str	r3, [r4, #32]
   1382c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13830:	add	r4, r4, #36	; 0x24
   13834:	cmp	r4, ip
   13838:	bcc	137e8 <argp_parse@@Base+0x628>
   1383c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13840:	sub	r4, ip, #36	; 0x24
   13844:	cmp	r4, r3
   13848:	bcc	138a8 <argp_parse@@Base+0x6e8>
   1384c:	mov	r7, #7
   13850:	movt	r7, #256	; 0x100
   13854:	ldr	r6, [r4]
   13858:	mov	r1, #0
   1385c:	sub	r2, fp, #96	; 0x60
   13860:	mov	r0, r7
   13864:	cmp	r6, r1
   13868:	beq	1389c <argp_parse@@Base+0x6dc>
   1386c:	ldr	ip, [r4, #12]
   13870:	ldr	r3, [r4, #32]
   13874:	str	r3, [fp, #-60]	; 0xffffffc4
   13878:	ldr	r3, [r4, #24]
   1387c:	str	r3, [fp, #-68]	; 0xffffffbc
   13880:	ldr	r3, [r4, #28]
   13884:	str	ip, [fp, #-76]	; 0xffffffb4
   13888:	str	r3, [fp, #-64]	; 0xffffffc0
   1388c:	blx	r6
   13890:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13894:	str	r3, [r4, #32]
   13898:	ldr	r3, [fp, #-112]	; 0xffffff90
   1389c:	sub	r4, r4, #36	; 0x24
   138a0:	cmp	r4, r3
   138a4:	bcs	13854 <argp_parse@@Base+0x694>
   138a8:	cmp	r5, #7
   138ac:	moveq	r5, #22
   138b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   138b4:	bl	141a4 <argp_parse@@Base+0xfe4>
   138b8:	mov	r0, r5
   138bc:	sub	sp, fp, #32
   138c0:	ldrd	r4, [sp]
   138c4:	ldrd	r6, [sp, #8]
   138c8:	ldrd	r8, [sp, #16]
   138cc:	ldrd	sl, [sp, #24]
   138d0:	add	sp, sp, #32
   138d4:	pop	{pc}		; (ldr pc, [sp], #4)
   138d8:	ldr	lr, [fp, #-236]	; 0xffffff14
   138dc:	add	r3, sl, #1
   138e0:	mov	r2, #45	; 0x2d
   138e4:	str	r3, [fp, #-208]	; 0xffffff30
   138e8:	strb	r2, [r6, lr]
   138ec:	b	13458 <argp_parse@@Base+0x298>
   138f0:	ldr	lr, [fp, #-84]	; 0xffffffac
   138f4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   138f8:	sub	lr, lr, #1
   138fc:	cmp	r3, #0
   13900:	str	lr, [fp, #-84]	; 0xffffffac
   13904:	beq	14004 <argp_parse@@Base+0xe44>
   13908:	ldr	r6, [r5, #12]
   1390c:	sub	r2, fp, #96	; 0x60
   13910:	mov	r1, #0
   13914:	mov	r0, r9
   13918:	ldr	ip, [r5, #24]
   1391c:	ldr	lr, [r5, #32]
   13920:	str	ip, [fp, #-68]	; 0xffffffbc
   13924:	ldr	ip, [r5, #28]
   13928:	str	r6, [fp, #-76]	; 0xffffffb4
   1392c:	str	ip, [fp, #-64]	; 0xffffffc0
   13930:	str	lr, [fp, #-60]	; 0xffffffc4
   13934:	blx	r3
   13938:	ldr	ip, [fp, #-108]	; 0xffffff94
   1393c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13940:	cmp	ip, r4
   13944:	movls	r2, #0
   13948:	movhi	r2, #1
   1394c:	cmp	r0, #7
   13950:	str	r3, [r5, #32]
   13954:	movne	r2, #0
   13958:	cmp	r2, #0
   1395c:	beq	1400c <argp_parse@@Base+0xe4c>
   13960:	ldr	lr, [fp, #-84]	; 0xffffffac
   13964:	b	136a0 <argp_parse@@Base+0x4e0>
   13968:	str	lr, [fp, #-84]	; 0xffffffac
   1396c:	add	r3, r4, #36	; 0x24
   13970:	cmp	ip, r4
   13974:	mov	r4, r3
   13978:	bhi	136a4 <argp_parse@@Base+0x4e4>
   1397c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13980:	ldr	r7, [fp, #-84]	; 0xffffffac
   13984:	cmp	r7, r0
   13988:	bne	13b98 <argp_parse@@Base+0x9d8>
   1398c:	ldr	r4, [fp, #-112]	; 0xffffff90
   13990:	ldr	ip, [fp, #-108]	; 0xffffff94
   13994:	mov	r3, r4
   13998:	cmp	r4, ip
   1399c:	bcs	13fd8 <argp_parse@@Base+0xe18>
   139a0:	mov	r6, #2
   139a4:	movt	r6, #256	; 0x100
   139a8:	mov	r5, #0
   139ac:	b	139f4 <argp_parse@@Base+0x834>
   139b0:	ldr	ip, [r4, #-4]
   139b4:	str	ip, [fp, #-60]	; 0xffffffc4
   139b8:	ldr	ip, [r4, #-12]
   139bc:	str	ip, [fp, #-68]	; 0xffffffbc
   139c0:	ldr	ip, [r4, #-8]
   139c4:	str	r3, [fp, #-76]	; 0xffffffb4
   139c8:	str	ip, [fp, #-64]	; 0xffffffc0
   139cc:	blx	r5
   139d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   139d4:	mov	r5, r0
   139d8:	str	r3, [r4, #-4]
   139dc:	ldr	ip, [fp, #-108]	; 0xffffff94
   139e0:	cmp	ip, r4
   139e4:	bls	13eac <argp_parse@@Base+0xcec>
   139e8:	cmp	r5, #7
   139ec:	cmpne	r5, #0
   139f0:	bne	13e74 <argp_parse@@Base+0xcb4>
   139f4:	ldr	r3, [r4, #12]
   139f8:	sub	r2, fp, #96	; 0x60
   139fc:	mov	r0, r6
   13a00:	add	r4, r4, #36	; 0x24
   13a04:	subs	r1, r3, #0
   13a08:	bne	139e0 <argp_parse@@Base+0x820>
   13a0c:	ldr	r5, [r4, #-36]	; 0xffffffdc
   13a10:	cmp	r5, #0
   13a14:	bne	139b0 <argp_parse@@Base+0x7f0>
   13a18:	cmp	r4, ip
   13a1c:	mov	r5, #7
   13a20:	bcc	139f4 <argp_parse@@Base+0x834>
   13a24:	ldr	r3, [fp, #-112]	; 0xffffff90
   13a28:	sub	r4, ip, #36	; 0x24
   13a2c:	cmp	r4, r3
   13a30:	bcs	13ec8 <argp_parse@@Base+0xd08>
   13a34:	b	13f4c <argp_parse@@Base+0xd8c>
   13a38:	mov	r5, r0
   13a3c:	cmp	r5, #7
   13a40:	bne	137cc <argp_parse@@Base+0x60c>
   13a44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a48:	sub	r7, fp, #96	; 0x60
   13a4c:	b	137bc <argp_parse@@Base+0x5fc>
   13a50:	mov	r1, #1
   13a54:	mov	r7, r3
   13a58:	mov	r2, r1
   13a5c:	str	r1, [fp, #-100]	; 0xffffff9c
   13a60:	b	1364c <argp_parse@@Base+0x48c>
   13a64:	str	ip, [sp]
   13a68:	sub	ip, fp, #148	; 0x94
   13a6c:	str	ip, [sp, #4]
   13a70:	bl	1422c <argp_parse@@Base+0x106c>
   13a74:	ldr	r7, [fp, #-148]	; 0xffffff6c
   13a78:	mov	r4, r0
   13a7c:	cmn	r4, #1
   13a80:	str	r7, [fp, #-84]	; 0xffffffac
   13a84:	bne	1378c <argp_parse@@Base+0x5cc>
   13a88:	mov	r3, #0
   13a8c:	cmp	r7, #1
   13a90:	str	r3, [fp, #-100]	; 0xffffff9c
   13a94:	ble	13b6c <argp_parse@@Base+0x9ac>
   13a98:	sub	r3, r7, #-1073741823	; 0xc0000001
   13a9c:	ldr	r1, [fp, #-232]	; 0xffffff18
   13aa0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13aa4:	ldr	r0, [r2, r3, lsl #2]
   13aa8:	bl	110e8 <strcmp@plt>
   13aac:	cmp	r0, #0
   13ab0:	bne	13b6c <argp_parse@@Base+0x9ac>
   13ab4:	str	r7, [fp, #-72]	; 0xffffffb8
   13ab8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13abc:	b	13668 <argp_parse@@Base+0x4a8>
   13ac0:	ldr	r2, [fp, #-244]	; 0xffffff0c
   13ac4:	movw	r3, #2232	; 0x8b8
   13ac8:	movt	r3, #3
   13acc:	mov	r0, #1
   13ad0:	tst	r5, #2
   13ad4:	ldr	r1, [r3]
   13ad8:	movw	r3, #2236	; 0x8bc
   13adc:	movt	r3, #3
   13ae0:	str	r0, [fp, #-100]	; 0xffffff9c
   13ae4:	mov	r0, #0
   13ae8:	ldr	ip, [fp, #-232]	; 0xffffff18
   13aec:	str	r7, [fp, #-96]	; 0xffffffa0
   13af0:	str	r2, [fp, #-92]	; 0xffffffa4
   13af4:	ldr	r2, [r3]
   13af8:	ldr	r3, [fp, #-112]	; 0xffffff90
   13afc:	str	r1, [fp, #-52]	; 0xffffffcc
   13b00:	mov	r1, #0
   13b04:	str	r2, [fp, #-48]	; 0xffffffd0
   13b08:	str	r3, [fp, #-108]	; 0xffffff94
   13b0c:	sub	r3, fp, #160	; 0xa0
   13b10:	str	ip, [fp, #-88]	; 0xffffffa8
   13b14:	str	r7, [fp, #-84]	; 0xffffffac
   13b18:	str	r5, [fp, #-80]	; 0xffffffb0
   13b1c:	strd	r0, [fp, #-76]	; 0xffffffb4
   13b20:	strd	r0, [fp, #-68]	; 0xffffffbc
   13b24:	strd	r0, [fp, #-60]	; 0xffffffc4
   13b28:	str	r3, [fp, #-44]	; 0xffffffd4
   13b2c:	mov	r3, ip
   13b30:	bne	135f0 <argp_parse@@Base+0x430>
   13b34:	mov	r2, #1
   13b38:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13b3c:	str	r2, [fp, #-144]	; 0xffffff70
   13b40:	ldr	r2, [fp, #-232]	; 0xffffff18
   13b44:	cmp	r2, r3
   13b48:	bne	1361c <argp_parse@@Base+0x45c>
   13b4c:	ldr	r0, [r2]
   13b50:	cmp	r0, #0
   13b54:	beq	1361c <argp_parse@@Base+0x45c>
   13b58:	bl	140ec <argp_parse@@Base+0xf2c>
   13b5c:	str	r0, [fp, #-56]	; 0xffffffc8
   13b60:	b	1362c <argp_parse@@Base+0x46c>
   13b64:	mov	r5, r0
   13b68:	b	138b8 <argp_parse@@Base+0x6f8>
   13b6c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13b70:	b	13668 <argp_parse@@Base+0x4a8>
   13b74:	cmp	r0, #7
   13b78:	mov	r5, r0
   13b7c:	str	r8, [fp, #-232]	; 0xffffff18
   13b80:	beq	135e0 <argp_parse@@Base+0x420>
   13b84:	cmp	r0, #0
   13b88:	bne	138b8 <argp_parse@@Base+0x6f8>
   13b8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13b90:	ldr	r5, [fp, #-80]	; 0xffffffb0
   13b94:	b	135e8 <argp_parse@@Base+0x428>
   13b98:	ldr	r3, [fp, #4]
   13b9c:	cmp	r3, #0
   13ba0:	beq	13ce0 <argp_parse@@Base+0xb20>
   13ba4:	str	r7, [r3]
   13ba8:	ldr	r3, [fp, #-112]	; 0xffffff90
   13bac:	ldr	ip, [fp, #-108]	; 0xffffff94
   13bb0:	sub	r2, ip, #36	; 0x24
   13bb4:	cmp	r3, r2
   13bb8:	movls	r6, #4
   13bbc:	subls	r4, ip, #72	; 0x48
   13bc0:	movtls	r6, #256	; 0x100
   13bc4:	bhi	13df4 <argp_parse@@Base+0xc34>
   13bc8:	ldr	r5, [r4, #36]	; 0x24
   13bcc:	mov	r1, #0
   13bd0:	sub	r2, fp, #96	; 0x60
   13bd4:	mov	r0, r6
   13bd8:	cmp	r5, r1
   13bdc:	beq	13d18 <argp_parse@@Base+0xb58>
   13be0:	ldr	ip, [r4, #48]	; 0x30
   13be4:	ldr	r3, [r4, #68]	; 0x44
   13be8:	str	r3, [fp, #-60]	; 0xffffffc4
   13bec:	ldr	r3, [r4, #60]	; 0x3c
   13bf0:	str	r3, [fp, #-68]	; 0xffffffbc
   13bf4:	ldr	r3, [r4, #64]	; 0x40
   13bf8:	str	ip, [fp, #-76]	; 0xffffffb4
   13bfc:	str	r3, [fp, #-64]	; 0xffffffc0
   13c00:	blx	r5
   13c04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c08:	str	r3, [r4, #68]	; 0x44
   13c0c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13c10:	cmp	r3, r4
   13c14:	sub	r4, r4, #36	; 0x24
   13c18:	bhi	13dd4 <argp_parse@@Base+0xc14>
   13c1c:	cmp	r0, #7
   13c20:	cmpne	r0, #0
   13c24:	beq	13bc8 <argp_parse@@Base+0xa08>
   13c28:	ldr	ip, [fp, #-108]	; 0xffffff94
   13c2c:	mov	r5, r0
   13c30:	sub	r4, ip, #36	; 0x24
   13c34:	cmp	r4, r3
   13c38:	bcs	1384c <argp_parse@@Base+0x68c>
   13c3c:	b	138b0 <argp_parse@@Base+0x6f0>
   13c40:	ldr	r2, [fp, #-232]	; 0xffffff18
   13c44:	ldr	r2, [r2]
   13c48:	str	r2, [r3]
   13c4c:	b	13208 <argp_parse@@Base+0x48>
   13c50:	ldr	r3, [fp, #-232]	; 0xffffff18
   13c54:	ldr	r0, [r3]
   13c58:	bl	140ec <argp_parse@@Base+0xf2c>
   13c5c:	str	r0, [r4]
   13c60:	b	1321c <argp_parse@@Base+0x5c>
   13c64:	mov	r1, r4
   13c68:	ldr	r0, [fp, #-156]	; 0xffffff64
   13c6c:	bl	11274 <strchr@plt>
   13c70:	cmp	r0, #0
   13c74:	beq	13cb0 <argp_parse@@Base+0xaf0>
   13c78:	ldr	r5, [fp, #-112]	; 0xffffff90
   13c7c:	ldr	r2, [fp, #-108]	; 0xffffff94
   13c80:	cmp	r5, r2
   13c84:	bcs	13cb0 <argp_parse@@Base+0xaf0>
   13c88:	ldr	r3, [r5, #8]
   13c8c:	cmp	r3, r0
   13c90:	bls	13ca4 <argp_parse@@Base+0xae4>
   13c94:	b	13f68 <argp_parse@@Base+0xda8>
   13c98:	ldr	r3, [r5, #8]
   13c9c:	cmp	r0, r3
   13ca0:	bcc	13f68 <argp_parse@@Base+0xda8>
   13ca4:	add	r5, r5, #36	; 0x24
   13ca8:	cmp	r5, r2
   13cac:	bcc	13c98 <argp_parse@@Base+0xad8>
   13cb0:	sub	r7, fp, #96	; 0x60
   13cb4:	mov	r2, r4
   13cb8:	add	r4, r4, #1
   13cbc:	ldr	r3, [pc, #888]	; 1403c <argp_parse@@Base+0xe7c>
   13cc0:	movw	r1, #47868	; 0xbafc
   13cc4:	movt	r1, #1
   13cc8:	mov	r0, r7
   13ccc:	bic	r4, r4, #2
   13cd0:	bl	185b8 <argp_error@@Base>
   13cd4:	cmp	r4, #0
   13cd8:	bne	13d10 <argp_parse@@Base+0xb50>
   13cdc:	b	1397c <argp_parse@@Base+0x7bc>
   13ce0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ce4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ce8:	tst	r3, #2
   13cec:	bne	13a48 <argp_parse@@Base+0x888>
   13cf0:	cmp	r1, #0
   13cf4:	beq	13a48 <argp_parse@@Base+0x888>
   13cf8:	mov	r0, r1
   13cfc:	movw	r1, #47888	; 0xbb10
   13d00:	movt	r1, #1
   13d04:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13d08:	sub	r7, fp, #96	; 0x60
   13d0c:	bl	11280 <fprintf@plt>
   13d10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13d14:	b	137bc <argp_parse@@Base+0x5fc>
   13d18:	cmp	r4, r3
   13d1c:	sub	r4, r4, #36	; 0x24
   13d20:	bcs	13bc8 <argp_parse@@Base+0xa08>
   13d24:	mov	r5, #7
   13d28:	b	13dd8 <argp_parse@@Base+0xc18>
   13d2c:	asrs	r8, r4, #24
   13d30:	beq	13c64 <argp_parse@@Base+0xaa4>
   13d34:	add	r3, r8, r8, lsl #3
   13d38:	ldr	r5, [fp, #-112]	; 0xffffff90
   13d3c:	ands	r2, r4, #8388608	; 0x800000
   13d40:	movne	r2, #-16777216	; 0xff000000
   13d44:	bic	r0, r4, #-16777216	; 0xff000000
   13d48:	lsl	r3, r3, #2
   13d4c:	orr	r0, r0, r2
   13d50:	sub	r3, r3, #36	; 0x24
   13d54:	ldr	r6, [r5, r3]
   13d58:	add	r5, r5, r3
   13d5c:	cmp	r6, #0
   13d60:	beq	13fd0 <argp_parse@@Base+0xe10>
   13d64:	add	r1, r5, #24
   13d68:	ldr	lr, [r5, #12]
   13d6c:	sub	r7, fp, #96	; 0x60
   13d70:	ldm	r1, {r1, r3, ip}
   13d74:	mov	r2, r7
   13d78:	str	lr, [fp, #-76]	; 0xffffffb4
   13d7c:	str	r1, [fp, #-68]	; 0xffffffbc
   13d80:	str	r3, [fp, #-64]	; 0xffffffc0
   13d84:	str	ip, [fp, #-60]	; 0xffffffc4
   13d88:	ldr	r1, [fp, #-136]	; 0xffffff78
   13d8c:	blx	r6
   13d90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d94:	str	r3, [r5, #32]
   13d98:	cmp	r0, #7
   13d9c:	beq	13dfc <argp_parse@@Base+0xc3c>
   13da0:	cmp	r0, #0
   13da4:	bne	13a38 <argp_parse@@Base+0x878>
   13da8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13dac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13db0:	ldr	r7, [fp, #-84]	; 0xffffffac
   13db4:	b	1364c <argp_parse@@Base+0x48c>
   13db8:	movw	r2, #2264	; 0x8d8
   13dbc:	movt	r2, #3
   13dc0:	ldr	r2, [r2]
   13dc4:	cmp	r2, #0
   13dc8:	addeq	r2, r3, #16
   13dcc:	bne	132f0 <argp_parse@@Base+0x130>
   13dd0:	b	132fc <argp_parse@@Base+0x13c>
   13dd4:	mov	r5, r0
   13dd8:	ldr	ip, [fp, #-108]	; 0xffffff94
   13ddc:	cmp	r5, #7
   13de0:	sub	r4, ip, #36	; 0x24
   13de4:	bne	13c34 <argp_parse@@Base+0xa74>
   13de8:	cmp	r4, r3
   13dec:	movcs	r5, #0
   13df0:	bcs	1384c <argp_parse@@Base+0x68c>
   13df4:	mov	r5, #0
   13df8:	b	138b0 <argp_parse@@Base+0x6f0>
   13dfc:	cmp	r8, #0
   13e00:	beq	13cb4 <argp_parse@@Base+0xaf4>
   13e04:	ldr	r3, [fp, #-152]	; 0xffffff68
   13e08:	ldr	r2, [r3]
   13e0c:	ldr	r1, [r3, #12]
   13e10:	cmp	r4, r1
   13e14:	bne	13e30 <argp_parse@@Base+0xc70>
   13e18:	b	13e60 <argp_parse@@Base+0xca0>
   13e1c:	add	r3, r3, #16
   13e20:	ldr	r2, [r3]
   13e24:	ldr	r1, [r3, #12]
   13e28:	cmp	r4, r1
   13e2c:	beq	13e60 <argp_parse@@Base+0xca0>
   13e30:	cmp	r2, #0
   13e34:	bne	13e1c <argp_parse@@Base+0xc5c>
   13e38:	movw	r2, #47860	; 0xbaf4
   13e3c:	movt	r2, #1
   13e40:	movw	r1, #47876	; 0xbb04
   13e44:	movt	r1, #1
   13e48:	ldr	r3, [pc, #492]	; 1403c <argp_parse@@Base+0xe7c>
   13e4c:	mov	r0, r7
   13e50:	add	r4, r4, #1
   13e54:	bl	185b8 <argp_error@@Base>
   13e58:	bic	r4, r4, #2
   13e5c:	b	13cd4 <argp_parse@@Base+0xb14>
   13e60:	movw	r3, #47860	; 0xbaf4
   13e64:	movt	r3, #1
   13e68:	cmp	r2, #0
   13e6c:	moveq	r2, r3
   13e70:	b	13e40 <argp_parse@@Base+0xc80>
   13e74:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e78:	sub	r2, ip, #36	; 0x24
   13e7c:	cmp	r3, r2
   13e80:	bhi	13ff4 <argp_parse@@Base+0xe34>
   13e84:	ldr	r2, [fp, #4]
   13e88:	cmp	r2, #0
   13e8c:	beq	13e9c <argp_parse@@Base+0xcdc>
   13e90:	ldr	r2, [fp, #-84]	; 0xffffffac
   13e94:	ldr	r1, [fp, #4]
   13e98:	str	r2, [r1]
   13e9c:	cmp	r5, #0
   13ea0:	bne	13a3c <argp_parse@@Base+0x87c>
   13ea4:	ldr	ip, [fp, #-108]	; 0xffffff94
   13ea8:	b	13bb0 <argp_parse@@Base+0x9f0>
   13eac:	ldr	r3, [fp, #-112]	; 0xffffff90
   13eb0:	sub	r4, ip, #36	; 0x24
   13eb4:	cmp	r4, r3
   13eb8:	bcc	13fbc <argp_parse@@Base+0xdfc>
   13ebc:	cmp	r5, #7
   13ec0:	cmpne	r5, #0
   13ec4:	bne	13e84 <argp_parse@@Base+0xcc4>
   13ec8:	mov	r6, #1
   13ecc:	movt	r6, #256	; 0x100
   13ed0:	sub	r4, r4, #36	; 0x24
   13ed4:	ldr	r5, [r4, #36]	; 0x24
   13ed8:	mov	r1, #0
   13edc:	sub	r2, fp, #96	; 0x60
   13ee0:	mov	r0, r6
   13ee4:	cmp	r5, r1
   13ee8:	beq	13f3c <argp_parse@@Base+0xd7c>
   13eec:	ldr	ip, [r4, #48]	; 0x30
   13ef0:	ldr	r3, [r4, #68]	; 0x44
   13ef4:	str	r3, [fp, #-60]	; 0xffffffc4
   13ef8:	ldr	r3, [r4, #60]	; 0x3c
   13efc:	str	r3, [fp, #-68]	; 0xffffffbc
   13f00:	ldr	r3, [r4, #64]	; 0x40
   13f04:	str	ip, [fp, #-76]	; 0xffffffb4
   13f08:	str	r3, [fp, #-64]	; 0xffffffc0
   13f0c:	blx	r5
   13f10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13f14:	str	r3, [r4, #68]	; 0x44
   13f18:	ldr	r3, [fp, #-112]	; 0xffffff90
   13f1c:	cmp	r3, r4
   13f20:	sub	r4, r4, #36	; 0x24
   13f24:	bhi	13fb8 <argp_parse@@Base+0xdf8>
   13f28:	cmp	r0, #7
   13f2c:	cmpne	r0, #0
   13f30:	beq	13ed4 <argp_parse@@Base+0xd14>
   13f34:	mov	r5, r0
   13f38:	b	13e84 <argp_parse@@Base+0xcc4>
   13f3c:	cmp	r3, r4
   13f40:	sub	r4, r4, #36	; 0x24
   13f44:	bls	13ed4 <argp_parse@@Base+0xd14>
   13f48:	ldr	ip, [fp, #-108]	; 0xffffff94
   13f4c:	ldr	r2, [fp, #4]
   13f50:	cmp	r2, #0
   13f54:	beq	13bb0 <argp_parse@@Base+0x9f0>
   13f58:	ldr	r2, [fp, #-84]	; 0xffffffac
   13f5c:	ldr	r1, [fp, #4]
   13f60:	str	r2, [r1]
   13f64:	b	13bb0 <argp_parse@@Base+0x9f0>
   13f68:	ldr	r3, [r5]
   13f6c:	cmp	r3, #0
   13f70:	beq	13cb0 <argp_parse@@Base+0xaf0>
   13f74:	ldr	r6, [r5, #12]
   13f78:	sub	r7, fp, #96	; 0x60
   13f7c:	mov	r0, r4
   13f80:	mov	r2, r7
   13f84:	mov	r8, #0
   13f88:	ldr	ip, [r5, #24]
   13f8c:	ldr	r1, [r5, #28]
   13f90:	ldr	lr, [r5, #32]
   13f94:	str	r6, [fp, #-76]	; 0xffffffb4
   13f98:	str	ip, [fp, #-68]	; 0xffffffbc
   13f9c:	str	r1, [fp, #-64]	; 0xffffffc0
   13fa0:	ldr	r1, [fp, #-136]	; 0xffffff78
   13fa4:	str	lr, [fp, #-60]	; 0xffffffc4
   13fa8:	blx	r3
   13fac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13fb0:	str	r3, [r5, #32]
   13fb4:	b	13d98 <argp_parse@@Base+0xbd8>
   13fb8:	mov	r5, r0
   13fbc:	cmp	r5, #7
   13fc0:	beq	13f48 <argp_parse@@Base+0xd88>
   13fc4:	b	13e84 <argp_parse@@Base+0xcc4>
   13fc8:	sub	r4, ip, #36	; 0x24
   13fcc:	b	13844 <argp_parse@@Base+0x684>
   13fd0:	sub	r7, fp, #96	; 0x60
   13fd4:	b	13e04 <argp_parse@@Base+0xc44>
   13fd8:	sub	r4, ip, #36	; 0x24
   13fdc:	cmp	r3, r4
   13fe0:	bls	13ec8 <argp_parse@@Base+0xd08>
   13fe4:	ldr	r2, [fp, #4]
   13fe8:	cmp	r2, #0
   13fec:	bne	13f58 <argp_parse@@Base+0xd98>
   13ff0:	b	13df4 <argp_parse@@Base+0xc34>
   13ff4:	ldr	r2, [fp, #4]
   13ff8:	cmp	r2, #0
   13ffc:	bne	13e90 <argp_parse@@Base+0xcd0>
   14000:	b	137d4 <argp_parse@@Base+0x614>
   14004:	ldr	ip, [fp, #-108]	; 0xffffff94
   14008:	b	1396c <argp_parse@@Base+0x7ac>
   1400c:	cmp	r0, #0
   14010:	beq	14028 <argp_parse@@Base+0xe68>
   14014:	cmp	r0, #7
   14018:	mov	r5, r0
   1401c:	ldrne	r3, [fp, #-112]	; 0xffffff90
   14020:	beq	1397c <argp_parse@@Base+0x7bc>
   14024:	b	137d4 <argp_parse@@Base+0x614>
   14028:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1402c:	mov	r0, r3
   14030:	str	r3, [fp, #-84]	; 0xffffffac
   14034:	b	13710 <argp_parse@@Base+0x550>
   14038:	andeq	fp, r1, r8, asr #19
   1403c:	andeq	fp, r1, r4, ror #19
   14040:	cmp	r1, #0
   14044:	beq	14084 <argp_parse@@Base+0xec4>
   14048:	ldr	r2, [r1, #52]	; 0x34
   1404c:	ldr	r3, [r2, #48]	; 0x30
   14050:	ldr	r1, [r2, #52]	; 0x34
   14054:	cmp	r3, r1
   14058:	bcs	14084 <argp_parse@@Base+0xec4>
   1405c:	ldr	r2, [r3, #4]
   14060:	cmp	r0, r2
   14064:	bne	14078 <argp_parse@@Base+0xeb8>
   14068:	b	1408c <argp_parse@@Base+0xecc>
   1406c:	ldr	r2, [r3, #4]
   14070:	cmp	r2, r0
   14074:	beq	1408c <argp_parse@@Base+0xecc>
   14078:	add	r3, r3, #36	; 0x24
   1407c:	cmp	r3, r1
   14080:	bcc	1406c <argp_parse@@Base+0xeac>
   14084:	mov	r0, #0
   14088:	bx	lr
   1408c:	ldr	r0, [r3, #24]
   14090:	bx	lr
   14094:	movw	r1, #2268	; 0x8dc
   14098:	movt	r1, #3
   1409c:	push	{lr}		; (str lr, [sp, #-4]!)
   140a0:	ldm	r1, {r1, ip}
   140a4:	sub	sp, sp, #12
   140a8:	movw	r3, #48120	; 0xbbf8
   140ac:	movt	r3, #1
   140b0:	movw	r2, #48136	; 0xbc08
   140b4:	movt	r2, #1
   140b8:	str	ip, [sp]
   140bc:	bl	14a5c <_obstack_memory_used@@Base+0x404>
   140c0:	add	sp, sp, #12
   140c4:	pop	{pc}		; (ldr pc, [sp], #4)
   140c8:	movw	r2, #2264	; 0x8d8
   140cc:	movt	r2, #3
   140d0:	movw	ip, #16532	; 0x4094
   140d4:	movt	ip, #1
   140d8:	movw	r3, #2268	; 0x8dc
   140dc:	movt	r3, #3
   140e0:	str	ip, [r2]
   140e4:	strd	r0, [r3]
   140e8:	bx	lr
   140ec:	ldrb	r3, [r0]
   140f0:	cmp	r3, #47	; 0x2f
   140f4:	bne	14104 <argp_parse@@Base+0xf44>
   140f8:	ldrb	r3, [r0, #1]!
   140fc:	cmp	r3, #47	; 0x2f
   14100:	beq	140f8 <argp_parse@@Base+0xf38>
   14104:	cmp	r3, #0
   14108:	beq	14138 <argp_parse@@Base+0xf78>
   1410c:	mov	r2, r0
   14110:	mov	r1, #0
   14114:	cmp	r3, #47	; 0x2f
   14118:	moveq	r1, #1
   1411c:	beq	1412c <argp_parse@@Base+0xf6c>
   14120:	cmp	r1, #0
   14124:	movne	r0, r2
   14128:	movne	r1, #0
   1412c:	ldrb	r3, [r2, #1]!
   14130:	cmp	r3, #0
   14134:	bne	14114 <argp_parse@@Base+0xf54>
   14138:	bx	lr
   1413c:	str	r4, [sp, #-8]!
   14140:	mov	r4, r0
   14144:	str	lr, [sp, #4]
   14148:	bl	11268 <strlen@plt>
   1414c:	cmp	r0, #1
   14150:	bls	14174 <argp_parse@@Base+0xfb4>
   14154:	add	r2, r4, r0
   14158:	mov	r3, r0
   1415c:	ldrb	r2, [r2, #-1]
   14160:	cmp	r2, #47	; 0x2f
   14164:	subeq	r3, r0, #2
   14168:	rsbeq	r1, r4, #1
   1416c:	addeq	r3, r4, r3
   14170:	beq	14180 <argp_parse@@Base+0xfc0>
   14174:	ldr	r4, [sp]
   14178:	add	sp, sp, #4
   1417c:	pop	{pc}		; (ldr pc, [sp], #4)
   14180:	cmp	r3, r4
   14184:	add	r0, r1, r3
   14188:	beq	14174 <argp_parse@@Base+0xfb4>
   1418c:	ldrb	r2, [r3], #-1
   14190:	cmp	r2, #47	; 0x2f
   14194:	beq	14180 <argp_parse@@Base+0xfc0>
   14198:	ldr	r4, [sp]
   1419c:	add	sp, sp, #4
   141a0:	pop	{pc}		; (ldr pc, [sp], #4)
   141a4:	strd	r4, [sp, #-12]!
   141a8:	mov	r5, r0
   141ac:	str	lr, [sp, #8]
   141b0:	sub	sp, sp, #12
   141b4:	bl	1128c <__errno_location@plt>
   141b8:	mov	r4, r0
   141bc:	mov	r2, #0
   141c0:	ldr	r3, [r4]
   141c4:	mov	r0, r5
   141c8:	str	r2, [r4]
   141cc:	str	r3, [sp]
   141d0:	str	r3, [sp, #4]
   141d4:	bl	11124 <free@plt>
   141d8:	ldr	r3, [r4]
   141dc:	add	r2, sp, #8
   141e0:	clz	r3, r3
   141e4:	lsr	r3, r3, #5
   141e8:	add	r3, r2, r3, lsl #2
   141ec:	ldr	r3, [r3, #-8]
   141f0:	str	r3, [r4]
   141f4:	add	sp, sp, #12
   141f8:	ldrd	r4, [sp]
   141fc:	add	sp, sp, #8
   14200:	pop	{pc}		; (ldr pc, [sp], #4)
   14204:	push	{lr}		; (str lr, [sp, #-4]!)
   14208:	sub	sp, sp, #20
   1420c:	mov	ip, #0
   14210:	ldr	lr, [sp, #24]
   14214:	str	lr, [sp]
   14218:	str	ip, [sp, #4]
   1421c:	str	ip, [sp, #8]
   14220:	bl	192d0 <argp_error@@Base+0xd18>
   14224:	add	sp, sp, #20
   14228:	pop	{pc}		; (ldr pc, [sp], #4)
   1422c:	str	r4, [sp, #-8]!
   14230:	mov	ip, #0
   14234:	str	lr, [sp, #4]
   14238:	sub	sp, sp, #16
   1423c:	ldr	r4, [sp, #24]
   14240:	str	ip, [sp, #12]
   14244:	ldr	lr, [sp, #28]
   14248:	stm	sp, {r4, ip, lr}
   1424c:	bl	18d38 <argp_error@@Base+0x780>
   14250:	add	sp, sp, #16
   14254:	ldr	r4, [sp]
   14258:	add	sp, sp, #4
   1425c:	pop	{pc}		; (ldr pc, [sp], #4)
   14260:	str	r4, [sp, #-8]!
   14264:	mov	r4, #1
   14268:	str	lr, [sp, #4]
   1426c:	sub	sp, sp, #16
   14270:	mov	lr, #0
   14274:	ldr	ip, [sp, #24]
   14278:	str	ip, [sp]
   1427c:	stmib	sp, {r4, lr}
   14280:	bl	192d0 <argp_error@@Base+0xd18>
   14284:	add	sp, sp, #16
   14288:	ldr	r4, [sp]
   1428c:	add	sp, sp, #4
   14290:	pop	{pc}		; (ldr pc, [sp], #4)
   14294:	strd	r4, [sp, #-12]!
   14298:	mov	r4, #0
   1429c:	mov	r5, #1
   142a0:	str	lr, [sp, #8]
   142a4:	sub	sp, sp, #20
   142a8:	ldr	lr, [sp, #32]
   142ac:	ldr	ip, [sp, #36]	; 0x24
   142b0:	str	lr, [sp]
   142b4:	str	r4, [sp, #12]
   142b8:	stmib	sp, {r5, ip}
   142bc:	bl	18d38 <argp_error@@Base+0x780>
   142c0:	add	sp, sp, #20
   142c4:	ldrd	r4, [sp]
   142c8:	add	sp, sp, #8
   142cc:	pop	{pc}		; (ldr pc, [sp], #4)
   142d0:	movw	r3, #2232	; 0x8b8
   142d4:	movt	r3, #3
   142d8:	str	r4, [sp, #-8]!
   142dc:	movw	r2, #48152	; 0xbc18
   142e0:	movt	r2, #1
   142e4:	ldr	r0, [r3]
   142e8:	movw	r1, #48248	; 0xbc78
   142ec:	movt	r1, #1
   142f0:	str	lr, [sp, #4]
   142f4:	bl	11280 <fprintf@plt>
   142f8:	movw	r3, #2204	; 0x89c
   142fc:	movt	r3, #3
   14300:	ldr	r0, [r3]
   14304:	bl	1125c <exit@plt>
   14308:	ldrb	r2, [r0, #40]	; 0x28
   1430c:	ldr	r3, [r0, #28]
   14310:	tst	r2, #1
   14314:	beq	14320 <argp_parse@@Base+0x1160>
   14318:	ldr	r0, [r0, #36]	; 0x24
   1431c:	bx	r3
   14320:	mov	r0, r1
   14324:	bx	r3
   14328:	ldrb	r2, [r0, #40]	; 0x28
   1432c:	ldr	r3, [r0, #32]
   14330:	tst	r2, #1
   14334:	beq	14340 <argp_parse@@Base+0x1180>
   14338:	ldr	r0, [r0, #36]	; 0x24
   1433c:	bx	r3
   14340:	mov	r0, r1
   14344:	bx	r3
   14348:	strd	r4, [sp, #-16]!
   1434c:	subs	r5, r2, #0
   14350:	movw	r2, #4072	; 0xfe8
   14354:	moveq	r5, #8
   14358:	str	r6, [sp, #8]
   1435c:	subne	r6, r5, #1
   14360:	moveq	r6, #7
   14364:	cmp	r1, #0
   14368:	str	lr, [sp, #12]
   1436c:	mov	r3, r1
   14370:	moveq	r3, r2
   14374:	mov	r1, r3
   14378:	mov	r4, r0
   1437c:	str	r3, [r0]
   14380:	str	r6, [r0, #24]
   14384:	bl	14308 <argp_parse@@Base+0x1148>
   14388:	cmp	r0, #0
   1438c:	mov	r3, r0
   14390:	str	r0, [r4, #4]
   14394:	beq	143e8 <argp_parse@@Base+0x1228>
   14398:	ldrb	lr, [r4, #40]	; 0x28
   1439c:	add	r1, r0, #8
   143a0:	rsb	r2, r5, #0
   143a4:	add	r1, r1, r6
   143a8:	mov	r5, #0
   143ac:	ldr	ip, [r4]
   143b0:	and	r2, r2, r1
   143b4:	mov	r0, #1
   143b8:	ldr	r6, [sp, #8]
   143bc:	bic	lr, lr, #6
   143c0:	str	r2, [r4, #8]
   143c4:	str	r2, [r4, #12]
   143c8:	add	r2, r3, ip
   143cc:	str	r2, [r3]
   143d0:	str	r2, [r4, #16]
   143d4:	str	r5, [r3, #4]
   143d8:	strb	lr, [r4, #40]	; 0x28
   143dc:	ldrd	r4, [sp]
   143e0:	add	sp, sp, #12
   143e4:	pop	{pc}		; (ldr pc, [sp], #4)
   143e8:	movw	r3, #2160	; 0x870
   143ec:	movt	r3, #3
   143f0:	ldr	r3, [r3]
   143f4:	blx	r3

000143f8 <_obstack_begin@@Base>:
   143f8:	str	r4, [sp, #-8]!
   143fc:	str	lr, [sp, #4]
   14400:	ldrb	lr, [r0, #40]	; 0x28
   14404:	str	r3, [r0, #28]
   14408:	ldr	r4, [sp, #8]
   1440c:	bfc	lr, #0, #1
   14410:	str	r4, [r0, #32]
   14414:	ldr	r4, [sp]
   14418:	strb	lr, [r0, #40]	; 0x28
   1441c:	ldr	lr, [sp, #4]
   14420:	add	sp, sp, #8
   14424:	b	14348 <argp_parse@@Base+0x1188>

00014428 <_obstack_begin_1@@Base>:
   14428:	str	r4, [sp, #-8]!
   1442c:	str	lr, [sp, #4]
   14430:	ldrb	lr, [r0, #40]	; 0x28
   14434:	str	r3, [r0, #28]
   14438:	ldr	r4, [sp, #8]
   1443c:	ldr	r3, [sp, #12]
   14440:	orr	lr, lr, #1
   14444:	str	r4, [r0, #32]
   14448:	ldr	r4, [sp]
   1444c:	str	r3, [r0, #36]	; 0x24
   14450:	strb	lr, [r0, #40]	; 0x28
   14454:	ldr	lr, [sp, #4]
   14458:	add	sp, sp, #8
   1445c:	b	14348 <argp_parse@@Base+0x1188>

00014460 <_obstack_newchunk@@Base>:
   14460:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14464:	ldr	r2, [r0, #8]
   14468:	ldr	r3, [r0, #24]
   1446c:	strd	r6, [sp, #8]
   14470:	str	r8, [sp, #16]
   14474:	ldr	r6, [r0, #12]
   14478:	str	lr, [sp, #20]
   1447c:	ldr	lr, [r0]
   14480:	ldr	r7, [r0, #4]
   14484:	sub	r6, r6, r2
   14488:	adds	r1, r6, r1
   1448c:	movcs	ip, #1
   14490:	movcc	ip, #0
   14494:	adds	r3, r3, r1
   14498:	eor	ip, ip, #1
   1449c:	add	r4, r3, r6, lsr #3
   144a0:	movcs	r2, #1
   144a4:	movcc	r2, #0
   144a8:	cmp	r3, lr
   144ac:	eor	r2, r2, #1
   144b0:	add	r4, r4, #100	; 0x64
   144b4:	movcc	r3, lr
   144b8:	cmp	r3, r4
   144bc:	movcs	r4, r3
   144c0:	tst	ip, r2
   144c4:	beq	1457c <_obstack_newchunk@@Base+0x11c>
   144c8:	mov	r1, r4
   144cc:	mov	r5, r0
   144d0:	bl	14308 <argp_parse@@Base+0x1148>
   144d4:	subs	r8, r0, #0
   144d8:	beq	1457c <_obstack_newchunk@@Base+0x11c>
   144dc:	add	r3, r8, r4
   144e0:	mov	r4, r8
   144e4:	str	r8, [r5, #4]
   144e8:	ldr	r0, [r5, #24]
   144ec:	mov	r2, r6
   144f0:	ldr	r1, [r5, #8]
   144f4:	str	r7, [r8, #4]
   144f8:	str	r3, [r5, #16]
   144fc:	str	r3, [r4], #8
   14500:	add	r4, r4, r0
   14504:	bic	r4, r4, r0
   14508:	mov	r0, r4
   1450c:	bl	11160 <memcpy@plt>
   14510:	ldrb	r3, [r5, #40]	; 0x28
   14514:	tst	r3, #2
   14518:	bne	14538 <_obstack_newchunk@@Base+0xd8>
   1451c:	ldr	r1, [r5, #8]
   14520:	add	r3, r7, #8
   14524:	ldr	r2, [r5, #24]
   14528:	add	r3, r3, r2
   1452c:	bic	r3, r3, r2
   14530:	cmp	r1, r3
   14534:	beq	14564 <_obstack_newchunk@@Base+0x104>
   14538:	ldrb	r3, [r5, #40]	; 0x28
   1453c:	add	r6, r4, r6
   14540:	ldr	r8, [sp, #16]
   14544:	str	r4, [r5, #8]
   14548:	str	r6, [r5, #12]
   1454c:	bfc	r3, #1, #1
   14550:	ldrd	r6, [sp, #8]
   14554:	strb	r3, [r5, #40]	; 0x28
   14558:	ldrd	r4, [sp]
   1455c:	add	sp, sp, #20
   14560:	pop	{pc}		; (ldr pc, [sp], #4)
   14564:	ldr	r3, [r7, #4]
   14568:	mov	r1, r7
   1456c:	mov	r0, r5
   14570:	str	r3, [r8, #4]
   14574:	bl	14328 <argp_parse@@Base+0x1168>
   14578:	b	14538 <_obstack_newchunk@@Base+0xd8>
   1457c:	movw	r3, #2160	; 0x870
   14580:	movt	r3, #3
   14584:	ldr	r3, [r3]
   14588:	blx	r3

0001458c <_obstack_allocated_p@@Base>:
   1458c:	ldr	r0, [r0, #4]
   14590:	cmp	r0, #0
   14594:	beq	145c4 <_obstack_allocated_p@@Base+0x38>
   14598:	cmp	r1, r0
   1459c:	bls	145ac <_obstack_allocated_p@@Base+0x20>
   145a0:	ldr	r3, [r0]
   145a4:	cmp	r3, r1
   145a8:	bcs	145bc <_obstack_allocated_p@@Base+0x30>
   145ac:	ldr	r0, [r0, #4]
   145b0:	cmp	r0, #0
   145b4:	bne	14598 <_obstack_allocated_p@@Base+0xc>
   145b8:	bx	lr
   145bc:	mov	r0, #1
   145c0:	bx	lr
   145c4:	bx	lr

000145c8 <_obstack_free@@Base>:
   145c8:	strd	r4, [sp, #-16]!
   145cc:	ldr	r4, [r0, #4]
   145d0:	str	r6, [sp, #8]
   145d4:	mov	r6, r1
   145d8:	str	lr, [sp, #12]
   145dc:	cmp	r4, #0
   145e0:	movne	r5, r0
   145e4:	beq	14620 <_obstack_free@@Base+0x58>
   145e8:	cmp	r4, r6
   145ec:	bcs	145fc <_obstack_free@@Base+0x34>
   145f0:	ldr	r2, [r4]
   145f4:	cmp	r2, r6
   145f8:	bcs	14638 <_obstack_free@@Base+0x70>
   145fc:	mov	r1, r4
   14600:	mov	r0, r5
   14604:	ldr	r4, [r4, #4]
   14608:	bl	14328 <argp_parse@@Base+0x1168>
   1460c:	ldrb	r2, [r5, #40]	; 0x28
   14610:	cmp	r4, #0
   14614:	orr	r2, r2, #2
   14618:	strb	r2, [r5, #40]	; 0x28
   1461c:	bne	145e8 <_obstack_free@@Base+0x20>
   14620:	cmp	r6, #0
   14624:	bne	14654 <_obstack_free@@Base+0x8c>
   14628:	ldrd	r4, [sp]
   1462c:	ldr	r6, [sp, #8]
   14630:	add	sp, sp, #12
   14634:	pop	{pc}		; (ldr pc, [sp], #4)
   14638:	stmib	r5, {r4, r6}
   1463c:	str	r6, [r5, #12]
   14640:	str	r2, [r5, #16]
   14644:	ldrd	r4, [sp]
   14648:	ldr	r6, [sp, #8]
   1464c:	add	sp, sp, #12
   14650:	pop	{pc}		; (ldr pc, [sp], #4)
   14654:	bl	11394 <abort@plt>

00014658 <_obstack_memory_used@@Base>:
   14658:	ldr	r3, [r0, #4]
   1465c:	cmp	r3, #0
   14660:	beq	14684 <_obstack_memory_used@@Base+0x2c>
   14664:	mov	r0, #0
   14668:	ldr	r2, [r3]
   1466c:	sub	r2, r2, r3
   14670:	ldr	r3, [r3, #4]
   14674:	add	r0, r0, r2
   14678:	cmp	r3, #0
   1467c:	bne	14668 <_obstack_memory_used@@Base+0x10>
   14680:	bx	lr
   14684:	mov	r0, r3
   14688:	bx	lr
   1468c:	strd	r4, [sp, #-16]!
   14690:	subs	r4, r0, #0
   14694:	str	r6, [sp, #8]
   14698:	str	lr, [sp, #12]
   1469c:	beq	14734 <_obstack_memory_used@@Base+0xdc>
   146a0:	mov	r1, #47	; 0x2f
   146a4:	bl	112e0 <strrchr@plt>
   146a8:	subs	r5, r0, #0
   146ac:	beq	1470c <_obstack_memory_used@@Base+0xb4>
   146b0:	add	r6, r5, #1
   146b4:	sub	r3, r6, r4
   146b8:	cmp	r3, #6
   146bc:	ble	1470c <_obstack_memory_used@@Base+0xb4>
   146c0:	movw	r1, #48228	; 0xbc64
   146c4:	movt	r1, #1
   146c8:	mov	r2, #7
   146cc:	sub	r0, r5, #6
   146d0:	bl	11388 <strncmp@plt>
   146d4:	cmp	r0, #0
   146d8:	bne	1470c <_obstack_memory_used@@Base+0xb4>
   146dc:	movw	r1, #48236	; 0xbc6c
   146e0:	movt	r1, #1
   146e4:	mov	r2, #3
   146e8:	mov	r0, r6
   146ec:	bl	11388 <strncmp@plt>
   146f0:	cmp	r0, #0
   146f4:	movne	r4, r6
   146f8:	bne	1470c <_obstack_memory_used@@Base+0xb4>
   146fc:	add	r4, r5, #4
   14700:	movw	r3, #2224	; 0x8b0
   14704:	movt	r3, #3
   14708:	str	r4, [r3]
   1470c:	movw	r2, #2276	; 0x8e4
   14710:	movt	r2, #3
   14714:	ldr	r6, [sp, #8]
   14718:	movw	r3, #2228	; 0x8b4
   1471c:	movt	r3, #3
   14720:	str	r4, [r2]
   14724:	str	r4, [r3]
   14728:	ldrd	r4, [sp]
   1472c:	add	sp, sp, #12
   14730:	pop	{pc}		; (ldr pc, [sp], #4)
   14734:	movw	r3, #2232	; 0x8b8
   14738:	movt	r3, #3
   1473c:	movw	r0, #48172	; 0xbc2c
   14740:	movt	r0, #1
   14744:	ldr	r3, [r3]
   14748:	mov	r2, #55	; 0x37
   1474c:	mov	r1, #1
   14750:	bl	111c0 <fwrite@plt>
   14754:	bl	11394 <abort@plt>
   14758:	cmp	r1, #0
   1475c:	strd	r4, [sp, #-16]!
   14760:	mov	r4, r0
   14764:	str	r6, [sp, #8]
   14768:	str	lr, [sp, #12]
   1476c:	sub	sp, sp, #32
   14770:	ldr	r5, [sp, #48]	; 0x30
   14774:	ldr	r6, [sp, #52]	; 0x34
   14778:	beq	1487c <_obstack_memory_used@@Base+0x224>
   1477c:	mov	ip, r3
   14780:	mov	r3, r2
   14784:	mov	r2, r1
   14788:	movw	r1, #48240	; 0xbc70
   1478c:	movt	r1, #1
   14790:	str	ip, [sp]
   14794:	bl	11280 <fprintf@plt>
   14798:	movw	r3, #2022	; 0x7e6
   1479c:	movw	r2, #48260	; 0xbc84
   147a0:	movt	r2, #1
   147a4:	movw	r1, #49028	; 0xbf84
   147a8:	movt	r1, #1
   147ac:	mov	r0, r4
   147b0:	bl	11280 <fprintf@plt>
   147b4:	mov	r1, r4
   147b8:	mov	r0, #10
   147bc:	bl	112f8 <fputc@plt>
   147c0:	movw	r2, #48264	; 0xbc88
   147c4:	movt	r2, #1
   147c8:	movw	r1, #48300	; 0xbcac
   147cc:	movt	r1, #1
   147d0:	mov	r0, r4
   147d4:	bl	11280 <fprintf@plt>
   147d8:	mov	r1, r4
   147dc:	mov	r0, #10
   147e0:	bl	112f8 <fputc@plt>
   147e4:	cmp	r6, #9
   147e8:	ldrls	pc, [pc, r6, lsl #2]
   147ec:	b	14a48 <_obstack_memory_used@@Base+0x3f0>
   147f0:	andeq	r4, r1, r8, ror #16
   147f4:	andeq	r4, r1, ip, lsl #17
   147f8:			; <UNDEFINED> instruction: 0x000148b4
   147fc:	ldrdeq	r4, [r1], -ip
   14800:	andeq	r4, r1, ip, lsl #18
   14804:	andeq	r4, r1, r8, asr #18
   14808:	andeq	r4, r1, ip, ror r9
   1480c:			; <UNDEFINED> instruction: 0x000149b8
   14810:	strdeq	r4, [r1], -ip
   14814:	andeq	r4, r1, r8, lsl r8
   14818:	ldr	ip, [r5, #8]
   1481c:	movw	r1, #48740	; 0xbe64
   14820:	movt	r1, #1
   14824:	mov	r0, r4
   14828:	ldr	r3, [r5, #12]
   1482c:	ldr	r2, [r5, #32]
   14830:	str	ip, [sp]
   14834:	ldr	ip, [r5, #16]
   14838:	str	r2, [sp, #24]
   1483c:	ldr	r2, [r5, #28]
   14840:	str	r3, [sp, #4]
   14844:	ldr	r3, [r5, #20]
   14848:	str	ip, [sp, #8]
   1484c:	ldr	ip, [r5, #24]
   14850:	str	r2, [sp, #20]
   14854:	ldr	r2, [r5]
   14858:	str	r3, [sp, #12]
   1485c:	ldr	r3, [r5, #4]
   14860:	str	ip, [sp, #16]
   14864:	bl	11280 <fprintf@plt>
   14868:	add	sp, sp, #32
   1486c:	ldrd	r4, [sp]
   14870:	ldr	r6, [sp, #8]
   14874:	add	sp, sp, #12
   14878:	pop	{pc}		; (ldr pc, [sp], #4)
   1487c:	movw	r1, #48252	; 0xbc7c
   14880:	movt	r1, #1
   14884:	bl	11280 <fprintf@plt>
   14888:	b	14798 <_obstack_memory_used@@Base+0x140>
   1488c:	ldr	r2, [r5]
   14890:	mov	r0, r4
   14894:	movw	r1, #48472	; 0xbd58
   14898:	movt	r1, #1
   1489c:	add	sp, sp, #32
   148a0:	ldrd	r4, [sp]
   148a4:	ldr	r6, [sp, #8]
   148a8:	ldr	lr, [sp, #12]
   148ac:	add	sp, sp, #16
   148b0:	b	11280 <fprintf@plt>
   148b4:	ldrd	r2, [r5]
   148b8:	mov	r0, r4
   148bc:	movw	r1, #48488	; 0xbd68
   148c0:	movt	r1, #1
   148c4:	add	sp, sp, #32
   148c8:	ldrd	r4, [sp]
   148cc:	ldr	r6, [sp, #8]
   148d0:	ldr	lr, [sp, #12]
   148d4:	add	sp, sp, #16
   148d8:	b	11280 <fprintf@plt>
   148dc:	ldrd	r2, [r5]
   148e0:	mov	r0, r4
   148e4:	movw	r1, #48512	; 0xbd80
   148e8:	movt	r1, #1
   148ec:	ldr	ip, [r5, #8]
   148f0:	str	ip, [sp, #48]	; 0x30
   148f4:	add	sp, sp, #32
   148f8:	ldrd	r4, [sp]
   148fc:	ldr	r6, [sp, #8]
   14900:	ldr	lr, [sp, #12]
   14904:	add	sp, sp, #16
   14908:	b	11280 <fprintf@plt>
   1490c:	ldr	r2, [r5]
   14910:	mov	r0, r4
   14914:	movw	r1, #48540	; 0xbd9c
   14918:	movt	r1, #1
   1491c:	ldr	r3, [r5, #8]
   14920:	ldr	ip, [r5, #12]
   14924:	str	r3, [sp, #48]	; 0x30
   14928:	ldr	r3, [r5, #4]
   1492c:	str	ip, [sp, #52]	; 0x34
   14930:	add	sp, sp, #32
   14934:	ldrd	r4, [sp]
   14938:	ldr	r6, [sp, #8]
   1493c:	ldr	lr, [sp, #12]
   14940:	add	sp, sp, #16
   14944:	b	11280 <fprintf@plt>
   14948:	ldr	r2, [r5, #8]
   1494c:	mov	r0, r4
   14950:	movw	r1, #48572	; 0xbdbc
   14954:	movt	r1, #1
   14958:	ldr	ip, [r5, #12]
   1495c:	ldr	r3, [r5, #16]
   14960:	str	r2, [sp]
   14964:	ldr	r2, [r5]
   14968:	str	r3, [sp, #8]
   1496c:	ldr	r3, [r5, #4]
   14970:	str	ip, [sp, #4]
   14974:	bl	11280 <fprintf@plt>
   14978:	b	14868 <_obstack_memory_used@@Base+0x210>
   1497c:	ldr	ip, [r5, #8]
   14980:	mov	r0, r4
   14984:	movw	r1, #48608	; 0xbde0
   14988:	movt	r1, #1
   1498c:	ldr	r3, [r5, #12]
   14990:	ldr	r2, [r5, #20]
   14994:	str	ip, [sp]
   14998:	ldr	ip, [r5, #16]
   1499c:	str	r2, [sp, #12]
   149a0:	ldr	r2, [r5]
   149a4:	str	r3, [sp, #4]
   149a8:	ldr	r3, [r5, #4]
   149ac:	str	ip, [sp, #8]
   149b0:	bl	11280 <fprintf@plt>
   149b4:	b	14868 <_obstack_memory_used@@Base+0x210>
   149b8:	ldr	r3, [r5, #8]
   149bc:	mov	r0, r4
   149c0:	movw	r1, #48648	; 0xbe08
   149c4:	movt	r1, #1
   149c8:	ldr	r2, [r5, #12]
   149cc:	ldr	ip, [r5, #24]
   149d0:	str	r3, [sp]
   149d4:	ldr	r3, [r5, #16]
   149d8:	str	ip, [sp, #16]
   149dc:	ldr	ip, [r5, #20]
   149e0:	str	r2, [sp, #4]
   149e4:	ldr	r2, [r5]
   149e8:	str	r3, [sp, #8]
   149ec:	ldr	r3, [r5, #4]
   149f0:	str	ip, [sp, #12]
   149f4:	bl	11280 <fprintf@plt>
   149f8:	b	14868 <_obstack_memory_used@@Base+0x210>
   149fc:	ldr	r2, [r5, #8]
   14a00:	mov	r0, r4
   14a04:	movw	r1, #48692	; 0xbe34
   14a08:	movt	r1, #1
   14a0c:	ldr	ip, [r5, #12]
   14a10:	ldr	r3, [r5, #28]
   14a14:	str	r2, [sp]
   14a18:	ldr	r2, [r5, #16]
   14a1c:	str	r3, [sp, #20]
   14a20:	ldr	r3, [r5, #24]
   14a24:	str	ip, [sp, #4]
   14a28:	ldr	ip, [r5, #20]
   14a2c:	str	r2, [sp, #8]
   14a30:	ldr	r2, [r5]
   14a34:	str	r3, [sp, #16]
   14a38:	ldr	r3, [r5, #4]
   14a3c:	str	ip, [sp, #12]
   14a40:	bl	11280 <fprintf@plt>
   14a44:	b	14868 <_obstack_memory_used@@Base+0x210>
   14a48:	movw	r1, #48792	; 0xbe98
   14a4c:	movt	r1, #1
   14a50:	ldr	ip, [r5, #8]
   14a54:	mov	r0, r4
   14a58:	b	14828 <_obstack_memory_used@@Base+0x1d0>
   14a5c:	strd	r4, [sp, #-12]!
   14a60:	str	lr, [sp, #8]
   14a64:	sub	sp, sp, #12
   14a68:	ldr	r5, [sp, #24]
   14a6c:	ldr	ip, [r5]
   14a70:	cmp	ip, #0
   14a74:	beq	14a90 <_obstack_memory_used@@Base+0x438>
   14a78:	mov	lr, r5
   14a7c:	mov	ip, #0
   14a80:	ldr	r4, [lr, #4]!
   14a84:	add	ip, ip, #1
   14a88:	cmp	r4, #0
   14a8c:	bne	14a80 <_obstack_memory_used@@Base+0x428>
   14a90:	stm	sp, {r5, ip}
   14a94:	bl	14758 <_obstack_memory_used@@Base+0x100>
   14a98:	add	sp, sp, #12
   14a9c:	ldrd	r4, [sp]
   14aa0:	add	sp, sp, #8
   14aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   14aa8:	strd	r4, [sp, #-16]!
   14aac:	mov	ip, #0
   14ab0:	str	r6, [sp, #8]
   14ab4:	str	lr, [sp, #12]
   14ab8:	sub	sp, sp, #48	; 0x30
   14abc:	ldr	r5, [sp, #64]	; 0x40
   14ac0:	add	r6, sp, #8
   14ac4:	mov	r4, r6
   14ac8:	ldr	lr, [r5], #4
   14acc:	cmp	lr, #0
   14ad0:	str	lr, [r4], #4
   14ad4:	beq	14ae4 <_obstack_memory_used@@Base+0x48c>
   14ad8:	add	ip, ip, #1
   14adc:	cmp	ip, #10
   14ae0:	bne	14ac8 <_obstack_memory_used@@Base+0x470>
   14ae4:	stm	sp, {r6, ip}
   14ae8:	bl	14758 <_obstack_memory_used@@Base+0x100>
   14aec:	add	sp, sp, #48	; 0x30
   14af0:	ldrd	r4, [sp]
   14af4:	ldr	r6, [sp, #8]
   14af8:	add	sp, sp, #12
   14afc:	pop	{pc}		; (ldr pc, [sp], #4)
   14b00:	push	{r3}		; (str r3, [sp, #-4]!)
   14b04:	mov	ip, #0
   14b08:	strd	r4, [sp, #-12]!
   14b0c:	str	lr, [sp, #8]
   14b10:	sub	sp, sp, #56	; 0x38
   14b14:	add	r3, sp, #72	; 0x48
   14b18:	add	r5, sp, #16
   14b1c:	mov	r4, r3
   14b20:	mov	lr, r5
   14b24:	str	r3, [sp, #12]
   14b28:	ldr	r3, [r4], #4
   14b2c:	cmp	r3, #0
   14b30:	str	r3, [lr], #4
   14b34:	beq	14b44 <_obstack_memory_used@@Base+0x4ec>
   14b38:	add	ip, ip, #1
   14b3c:	cmp	ip, #10
   14b40:	bne	14b28 <_obstack_memory_used@@Base+0x4d0>
   14b44:	ldr	r3, [sp, #68]	; 0x44
   14b48:	stm	sp, {r5, ip}
   14b4c:	bl	14758 <_obstack_memory_used@@Base+0x100>
   14b50:	add	sp, sp, #56	; 0x38
   14b54:	ldrd	r4, [sp]
   14b58:	ldr	lr, [sp, #8]
   14b5c:	add	sp, sp, #12
   14b60:	add	sp, sp, #4
   14b64:	bx	lr
   14b68:	movw	r3, #2236	; 0x8bc
   14b6c:	movt	r3, #3
   14b70:	str	r4, [sp, #-8]!
   14b74:	mov	r0, #10
   14b78:	ldr	r1, [r3]
   14b7c:	str	lr, [sp, #4]
   14b80:	bl	112f8 <fputc@plt>
   14b84:	movw	r1, #48852	; 0xbed4
   14b88:	movt	r1, #1
   14b8c:	movw	r0, #48876	; 0xbeec
   14b90:	movt	r0, #1
   14b94:	bl	11100 <printf@plt>
   14b98:	movw	r2, #48896	; 0xbf00
   14b9c:	movt	r2, #1
   14ba0:	movw	r1, #48136	; 0xbc08
   14ba4:	movt	r1, #1
   14ba8:	movw	r0, #48936	; 0xbf28
   14bac:	movt	r0, #1
   14bb0:	bl	11100 <printf@plt>
   14bb4:	movw	r1, #48956	; 0xbf3c
   14bb8:	movt	r1, #1
   14bbc:	ldr	r4, [sp]
   14bc0:	movw	r0, #48988	; 0xbf5c
   14bc4:	movt	r0, #1
   14bc8:	ldr	lr, [sp, #4]
   14bcc:	add	sp, sp, #8
   14bd0:	b	11100 <printf@plt>
   14bd4:	str	r4, [sp, #-8]!
   14bd8:	str	lr, [sp, #4]
   14bdc:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   14be0:	cmp	r0, #0
   14be4:	beq	14bf4 <_obstack_memory_used@@Base+0x59c>
   14be8:	ldr	r4, [sp]
   14bec:	add	sp, sp, #4
   14bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   14bf4:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14bf8:	str	r4, [sp, #-8]!
   14bfc:	str	lr, [sp, #4]
   14c00:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   14c04:	cmp	r0, #0
   14c08:	beq	14c18 <_obstack_memory_used@@Base+0x5c0>
   14c0c:	ldr	r4, [sp]
   14c10:	add	sp, sp, #4
   14c14:	pop	{pc}		; (ldr pc, [sp], #4)
   14c18:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14c1c:	str	r4, [sp, #-8]!
   14c20:	str	lr, [sp, #4]
   14c24:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   14c28:	cmp	r0, #0
   14c2c:	beq	14c3c <_obstack_memory_used@@Base+0x5e4>
   14c30:	ldr	r4, [sp]
   14c34:	add	sp, sp, #4
   14c38:	pop	{pc}		; (ldr pc, [sp], #4)
   14c3c:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14c40:	strd	r4, [sp, #-16]!
   14c44:	mov	r5, r0
   14c48:	mov	r4, r1
   14c4c:	str	r6, [sp, #8]
   14c50:	str	lr, [sp, #12]
   14c54:	bl	1512c <_obstack_memory_used@@Base+0xad4>
   14c58:	cmp	r0, #0
   14c5c:	beq	14c70 <_obstack_memory_used@@Base+0x618>
   14c60:	ldrd	r4, [sp]
   14c64:	ldr	r6, [sp, #8]
   14c68:	add	sp, sp, #12
   14c6c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c70:	adds	r4, r4, #0
   14c74:	movne	r4, #1
   14c78:	cmp	r5, #0
   14c7c:	moveq	r4, #1
   14c80:	cmp	r4, #0
   14c84:	beq	14c60 <_obstack_memory_used@@Base+0x608>
   14c88:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14c8c:	cmp	r1, #0
   14c90:	orreq	r1, r1, #1
   14c94:	str	r4, [sp, #-8]!
   14c98:	str	lr, [sp, #4]
   14c9c:	bl	1512c <_obstack_memory_used@@Base+0xad4>
   14ca0:	cmp	r0, #0
   14ca4:	beq	14cb4 <_obstack_memory_used@@Base+0x65c>
   14ca8:	ldr	r4, [sp]
   14cac:	add	sp, sp, #4
   14cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cb4:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14cb8:	strd	r4, [sp, #-16]!
   14cbc:	mov	r4, r0
   14cc0:	mov	r5, r2
   14cc4:	str	r6, [sp, #8]
   14cc8:	mov	r6, r1
   14ccc:	str	lr, [sp, #12]
   14cd0:	bl	1937c <argp_error@@Base+0xdc4>
   14cd4:	cmp	r0, #0
   14cd8:	beq	14cec <_obstack_memory_used@@Base+0x694>
   14cdc:	ldrd	r4, [sp]
   14ce0:	ldr	r6, [sp, #8]
   14ce4:	add	sp, sp, #12
   14ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   14cec:	cmp	r4, #0
   14cf0:	beq	14d00 <_obstack_memory_used@@Base+0x6a8>
   14cf4:	cmp	r6, #0
   14cf8:	cmpne	r5, #0
   14cfc:	beq	14cdc <_obstack_memory_used@@Base+0x684>
   14d00:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14d04:	b	14cb8 <_obstack_memory_used@@Base+0x660>
   14d08:	cmp	r2, #0
   14d0c:	cmpne	r1, #0
   14d10:	str	r4, [sp, #-8]!
   14d14:	moveq	r2, #1
   14d18:	str	lr, [sp, #4]
   14d1c:	moveq	r1, r2
   14d20:	bl	1937c <argp_error@@Base+0xdc4>
   14d24:	cmp	r0, #0
   14d28:	beq	14d38 <_obstack_memory_used@@Base+0x6e0>
   14d2c:	ldr	r4, [sp]
   14d30:	add	sp, sp, #4
   14d34:	pop	{pc}		; (ldr pc, [sp], #4)
   14d38:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14d3c:	mov	r2, r1
   14d40:	mov	r1, r0
   14d44:	mov	r0, #0
   14d48:	b	14cb8 <_obstack_memory_used@@Base+0x660>
   14d4c:	mov	r2, r1
   14d50:	mov	r1, r0
   14d54:	mov	r0, #0
   14d58:	b	14d08 <_obstack_memory_used@@Base+0x6b0>
   14d5c:	cmp	r0, #0
   14d60:	strd	r4, [sp, #-16]!
   14d64:	mov	r5, r1
   14d68:	ldr	r4, [r1]
   14d6c:	str	r6, [sp, #8]
   14d70:	str	lr, [sp, #12]
   14d74:	beq	14da4 <_obstack_memory_used@@Base+0x74c>
   14d78:	lsr	r3, r4, #1
   14d7c:	add	r3, r3, #1
   14d80:	adds	r4, r4, r3
   14d84:	bcs	14dc0 <_obstack_memory_used@@Base+0x768>
   14d88:	mov	r1, r4
   14d8c:	bl	14cb8 <_obstack_memory_used@@Base+0x660>
   14d90:	ldr	r6, [sp, #8]
   14d94:	str	r4, [r5]
   14d98:	ldrd	r4, [sp]
   14d9c:	add	sp, sp, #12
   14da0:	pop	{pc}		; (ldr pc, [sp], #4)
   14da4:	cmp	r4, #0
   14da8:	bne	14d88 <_obstack_memory_used@@Base+0x730>
   14dac:	mov	r4, #64	; 0x40
   14db0:	udiv	r4, r4, r2
   14db4:	cmp	r2, #64	; 0x40
   14db8:	addhi	r4, r4, #1
   14dbc:	b	14d88 <_obstack_memory_used@@Base+0x730>
   14dc0:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14dc4:	mov	r2, #1
   14dc8:	b	14d5c <_obstack_memory_used@@Base+0x704>
   14dcc:	ldr	ip, [r1]
   14dd0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14dd4:	mov	r5, r1
   14dd8:	strd	r6, [sp, #8]
   14ddc:	str	lr, [sp, #28]
   14de0:	strd	r8, [sp, #16]
   14de4:	asr	lr, ip, #1
   14de8:	ldr	r8, [sp, #32]
   14dec:	str	sl, [sp, #24]
   14df0:	adds	r4, ip, lr
   14df4:	mvn	lr, r3
   14df8:	lsr	lr, lr, #31
   14dfc:	mvnvs	r4, #-2147483648	; 0x80000000
   14e00:	cmp	r3, r4
   14e04:	movge	r1, #0
   14e08:	andlt	r1, lr, #1
   14e0c:	cmp	r1, #0
   14e10:	movne	r4, r3
   14e14:	smull	r6, r7, r4, r8
   14e18:	cmp	r7, r6, asr #31
   14e1c:	bne	14ea4 <_obstack_memory_used@@Base+0x84c>
   14e20:	cmp	r6, #63	; 0x3f
   14e24:	mov	r1, r6
   14e28:	ble	14e8c <_obstack_memory_used@@Base+0x834>
   14e2c:	cmp	r0, #0
   14e30:	sub	r6, r4, ip
   14e34:	streq	r0, [r5]
   14e38:	cmp	r6, r2
   14e3c:	bge	14e6c <_obstack_memory_used@@Base+0x814>
   14e40:	adds	r4, ip, r2
   14e44:	bvs	14ea0 <_obstack_memory_used@@Base+0x848>
   14e48:	cmp	r4, r3
   14e4c:	movle	r3, #0
   14e50:	andgt	r3, lr, #1
   14e54:	cmp	r3, #0
   14e58:	bne	14ea0 <_obstack_memory_used@@Base+0x848>
   14e5c:	smull	r8, r9, r4, r8
   14e60:	cmp	r9, r8, asr #31
   14e64:	mov	r1, r8
   14e68:	bne	14ea0 <_obstack_memory_used@@Base+0x848>
   14e6c:	bl	14c40 <_obstack_memory_used@@Base+0x5e8>
   14e70:	ldrd	r6, [sp, #8]
   14e74:	ldrd	r8, [sp, #16]
   14e78:	ldr	sl, [sp, #24]
   14e7c:	str	r4, [r5]
   14e80:	ldrd	r4, [sp]
   14e84:	add	sp, sp, #28
   14e88:	pop	{pc}		; (ldr pc, [sp], #4)
   14e8c:	mov	r6, #64	; 0x40
   14e90:	sdiv	r4, r6, r8
   14e94:	mls	r1, r8, r4, r6
   14e98:	sub	r1, r6, r1
   14e9c:	b	14e2c <_obstack_memory_used@@Base+0x7d4>
   14ea0:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14ea4:	mvn	r6, #-2147483648	; 0x80000000
   14ea8:	b	14e90 <_obstack_memory_used@@Base+0x838>
   14eac:	mov	r1, #1
   14eb0:	str	r4, [sp, #-8]!
   14eb4:	str	lr, [sp, #4]
   14eb8:	bl	1507c <_obstack_memory_used@@Base+0xa24>
   14ebc:	cmp	r0, #0
   14ec0:	beq	14ed0 <_obstack_memory_used@@Base+0x878>
   14ec4:	ldr	r4, [sp]
   14ec8:	add	sp, sp, #4
   14ecc:	pop	{pc}		; (ldr pc, [sp], #4)
   14ed0:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14ed4:	mov	r1, #1
   14ed8:	str	r4, [sp, #-8]!
   14edc:	str	lr, [sp, #4]
   14ee0:	bl	1507c <_obstack_memory_used@@Base+0xa24>
   14ee4:	cmp	r0, #0
   14ee8:	beq	14ef8 <_obstack_memory_used@@Base+0x8a0>
   14eec:	ldr	r4, [sp]
   14ef0:	add	sp, sp, #4
   14ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ef8:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14efc:	str	r4, [sp, #-8]!
   14f00:	str	lr, [sp, #4]
   14f04:	bl	1507c <_obstack_memory_used@@Base+0xa24>
   14f08:	cmp	r0, #0
   14f0c:	beq	14f1c <_obstack_memory_used@@Base+0x8c4>
   14f10:	ldr	r4, [sp]
   14f14:	add	sp, sp, #4
   14f18:	pop	{pc}		; (ldr pc, [sp], #4)
   14f1c:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14f20:	str	r4, [sp, #-8]!
   14f24:	str	lr, [sp, #4]
   14f28:	bl	1507c <_obstack_memory_used@@Base+0xa24>
   14f2c:	cmp	r0, #0
   14f30:	beq	14f40 <_obstack_memory_used@@Base+0x8e8>
   14f34:	ldr	r4, [sp]
   14f38:	add	sp, sp, #4
   14f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14f40:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14f44:	strd	r4, [sp, #-16]!
   14f48:	mov	r4, r1
   14f4c:	str	r6, [sp, #8]
   14f50:	mov	r6, r0
   14f54:	mov	r0, r1
   14f58:	str	lr, [sp, #12]
   14f5c:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   14f60:	subs	r5, r0, #0
   14f64:	beq	14f88 <_obstack_memory_used@@Base+0x930>
   14f68:	mov	r2, r4
   14f6c:	mov	r1, r6
   14f70:	bl	11160 <memcpy@plt>
   14f74:	mov	r0, r5
   14f78:	ldrd	r4, [sp]
   14f7c:	ldr	r6, [sp, #8]
   14f80:	add	sp, sp, #12
   14f84:	pop	{pc}		; (ldr pc, [sp], #4)
   14f88:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14f8c:	strd	r4, [sp, #-16]!
   14f90:	mov	r4, r1
   14f94:	str	r6, [sp, #8]
   14f98:	mov	r6, r0
   14f9c:	mov	r0, r1
   14fa0:	str	lr, [sp, #12]
   14fa4:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   14fa8:	subs	r5, r0, #0
   14fac:	beq	14fd0 <_obstack_memory_used@@Base+0x978>
   14fb0:	mov	r2, r4
   14fb4:	mov	r1, r6
   14fb8:	bl	11160 <memcpy@plt>
   14fbc:	mov	r0, r5
   14fc0:	ldrd	r4, [sp]
   14fc4:	ldr	r6, [sp, #8]
   14fc8:	add	sp, sp, #12
   14fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   14fd0:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   14fd4:	strd	r4, [sp, #-16]!
   14fd8:	mov	r4, r1
   14fdc:	str	r6, [sp, #8]
   14fe0:	mov	r6, r0
   14fe4:	add	r0, r1, #1
   14fe8:	str	lr, [sp, #12]
   14fec:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   14ff0:	subs	r5, r0, #0
   14ff4:	beq	15020 <_obstack_memory_used@@Base+0x9c8>
   14ff8:	mov	r3, #0
   14ffc:	mov	r1, r6
   15000:	mov	r2, r4
   15004:	strb	r3, [r5, r4]
   15008:	bl	11160 <memcpy@plt>
   1500c:	mov	r0, r5
   15010:	ldrd	r4, [sp]
   15014:	ldr	r6, [sp, #8]
   15018:	add	sp, sp, #12
   1501c:	pop	{pc}		; (ldr pc, [sp], #4)
   15020:	bl	1504c <_obstack_memory_used@@Base+0x9f4>
   15024:	str	r4, [sp, #-8]!
   15028:	mov	r4, r0
   1502c:	str	lr, [sp, #4]
   15030:	bl	11268 <strlen@plt>
   15034:	add	r1, r0, #1
   15038:	mov	r0, r4
   1503c:	ldr	r4, [sp]
   15040:	ldr	lr, [sp, #4]
   15044:	add	sp, sp, #8
   15048:	b	14f44 <_obstack_memory_used@@Base+0x8ec>
   1504c:	movw	r3, #2204	; 0x89c
   15050:	movt	r3, #3
   15054:	str	r4, [sp, #-8]!
   15058:	movw	r2, #47848	; 0xbae8
   1505c:	movt	r2, #1
   15060:	ldr	r0, [r3]
   15064:	mov	r1, #0
   15068:	movw	r3, #48152	; 0xbc18
   1506c:	movt	r3, #1
   15070:	str	lr, [sp, #4]
   15074:	bl	111e4 <error@plt>
   15078:	bl	11394 <abort@plt>
   1507c:	cmp	r1, #0
   15080:	cmpne	r0, #0
   15084:	beq	150d0 <_obstack_memory_used@@Base+0xa78>
   15088:	strd	r4, [sp, #-16]!
   1508c:	umull	r4, r5, r0, r1
   15090:	str	r6, [sp, #8]
   15094:	str	lr, [sp, #12]
   15098:	adds	r3, r5, #0
   1509c:	movne	r3, #1
   150a0:	cmp	r4, #0
   150a4:	blt	150b0 <_obstack_memory_used@@Base+0xa58>
   150a8:	cmp	r3, #0
   150ac:	beq	150dc <_obstack_memory_used@@Base+0xa84>
   150b0:	bl	1128c <__errno_location@plt>
   150b4:	mov	r3, #12
   150b8:	ldrd	r4, [sp]
   150bc:	ldr	r6, [sp, #8]
   150c0:	add	sp, sp, #12
   150c4:	str	r3, [r0]
   150c8:	mov	r0, #0
   150cc:	pop	{pc}		; (ldr pc, [sp], #4)
   150d0:	mov	r1, #1
   150d4:	mov	r0, r1
   150d8:	b	110c4 <calloc@plt>
   150dc:	ldrd	r4, [sp]
   150e0:	ldr	r6, [sp, #8]
   150e4:	ldr	lr, [sp, #12]
   150e8:	add	sp, sp, #16
   150ec:	b	110c4 <calloc@plt>
   150f0:	cmp	r0, #0
   150f4:	beq	15100 <_obstack_memory_used@@Base+0xaa8>
   150f8:	blt	15108 <_obstack_memory_used@@Base+0xab0>
   150fc:	b	11208 <malloc@plt>
   15100:	mov	r0, #1
   15104:	b	11208 <malloc@plt>
   15108:	str	r4, [sp, #-8]!
   1510c:	str	lr, [sp, #4]
   15110:	bl	1128c <__errno_location@plt>
   15114:	mov	r3, #12
   15118:	ldr	r4, [sp]
   1511c:	add	sp, sp, #4
   15120:	str	r3, [r0]
   15124:	mov	r0, #0
   15128:	pop	{pc}		; (ldr pc, [sp], #4)
   1512c:	cmp	r0, #0
   15130:	beq	15158 <_obstack_memory_used@@Base+0xb00>
   15134:	cmp	r1, #0
   15138:	str	r4, [sp, #-8]!
   1513c:	str	lr, [sp, #4]
   15140:	beq	15160 <_obstack_memory_used@@Base+0xb08>
   15144:	blt	15174 <_obstack_memory_used@@Base+0xb1c>
   15148:	ldr	r4, [sp]
   1514c:	ldr	lr, [sp, #4]
   15150:	add	sp, sp, #8
   15154:	b	1119c <realloc@plt>
   15158:	mov	r0, r1
   1515c:	b	150f0 <_obstack_memory_used@@Base+0xa98>
   15160:	bl	141a4 <argp_parse@@Base+0xfe4>
   15164:	ldr	r4, [sp]
   15168:	add	sp, sp, #4
   1516c:	mov	r0, #0
   15170:	pop	{pc}		; (ldr pc, [sp], #4)
   15174:	bl	1128c <__errno_location@plt>
   15178:	mov	r3, #12
   1517c:	str	r3, [r0]
   15180:	b	15164 <_obstack_memory_used@@Base+0xb0c>
   15184:	strd	r4, [sp, #-16]!
   15188:	mov	r5, r0
   1518c:	ldr	r0, [r0, #12]
   15190:	str	r6, [sp, #8]
   15194:	str	lr, [sp, #12]
   15198:	cmp	r0, #0
   1519c:	beq	151b0 <_obstack_memory_used@@Base+0xb58>
   151a0:	ldr	r4, [r0, #24]
   151a4:	bl	141a4 <argp_parse@@Base+0xfe4>
   151a8:	subs	r0, r4, #0
   151ac:	bne	151a0 <_obstack_memory_used@@Base+0xb48>
   151b0:	ldr	r3, [r5, #4]
   151b4:	cmp	r3, #0
   151b8:	bne	151d4 <_obstack_memory_used@@Base+0xb7c>
   151bc:	mov	r0, r5
   151c0:	ldrd	r4, [sp]
   151c4:	ldr	r6, [sp, #8]
   151c8:	ldr	lr, [sp, #12]
   151cc:	add	sp, sp, #16
   151d0:	b	141a4 <argp_parse@@Base+0xfe4>
   151d4:	ldr	r0, [r5]
   151d8:	bl	141a4 <argp_parse@@Base+0xfe4>
   151dc:	ldr	r0, [r5, #8]
   151e0:	bl	141a4 <argp_parse@@Base+0xfe4>
   151e4:	b	151bc <_obstack_memory_used@@Base+0xb64>
   151e8:	ldr	r3, [r0, #12]
   151ec:	strd	r4, [sp, #-16]!
   151f0:	ldr	r2, [r1, #12]
   151f4:	str	r6, [sp, #8]
   151f8:	str	lr, [sp, #12]
   151fc:	cmp	r3, r2
   15200:	beq	15260 <_obstack_memory_used@@Base+0xc08>
   15204:	mov	r5, r1
   15208:	mov	r4, r0
   1520c:	mov	r1, r2
   15210:	mov	r0, r3
   15214:	bl	151e8 <_obstack_memory_used@@Base+0xb90>
   15218:	cmp	r0, #0
   1521c:	bne	15250 <_obstack_memory_used@@Base+0xbf8>
   15220:	ldr	r3, [r5, #8]
   15224:	ldr	r0, [r4, #8]
   15228:	mvn	r2, r3
   1522c:	lsr	r2, r2, #31
   15230:	cmp	r2, r0, lsr #31
   15234:	subne	r0, r0, r3
   15238:	subeq	r0, r3, r0
   1523c:	cmp	r0, #0
   15240:	bne	15250 <_obstack_memory_used@@Base+0xbf8>
   15244:	ldr	r0, [r4, #4]
   15248:	ldr	r3, [r5, #4]
   1524c:	sub	r0, r3, r0
   15250:	ldrd	r4, [sp]
   15254:	ldr	r6, [sp, #8]
   15258:	add	sp, sp, #12
   1525c:	pop	{pc}		; (ldr pc, [sp], #4)
   15260:	ldr	lr, [r1, #4]
   15264:	ldr	r3, [r1, #8]
   15268:	ldr	r2, [r0, #8]
   1526c:	ldr	ip, [r0, #4]
   15270:	mvn	r1, r3
   15274:	lsr	r1, r1, #31
   15278:	ldrd	r4, [sp]
   1527c:	cmp	r1, r2, lsr #31
   15280:	ldr	r6, [sp, #8]
   15284:	add	sp, sp, #12
   15288:	subne	r0, r2, r3
   1528c:	subeq	r0, r3, r2
   15290:	cmp	r0, #0
   15294:	subeq	r0, lr, ip
   15298:	pop	{pc}		; (ldr pc, [sp], #4)
   1529c:	ldr	r2, [r0, #8]
   152a0:	cmp	r2, #0
   152a4:	beq	152b0 <_obstack_memory_used@@Base+0xc58>
   152a8:	mov	r0, #0
   152ac:	bx	lr
   152b0:	ldr	r2, [r1, #8]
   152b4:	cmp	r2, #0
   152b8:	bne	152a8 <_obstack_memory_used@@Base+0xc50>
   152bc:	ldr	r2, [r0, #12]
   152c0:	ldr	r1, [r1, #12]
   152c4:	orr	r2, r2, r1
   152c8:	tst	r2, #16
   152cc:	bne	152a8 <_obstack_memory_used@@Base+0xc50>
   152d0:	ldr	r2, [r3]
   152d4:	ldr	r1, [r0, #4]
   152d8:	add	r0, r2, #1
   152dc:	str	r0, [r3]
   152e0:	strb	r1, [r2]
   152e4:	b	152a8 <_obstack_memory_used@@Base+0xc50>
   152e8:	strd	r4, [sp, #-16]!
   152ec:	ldr	r4, [r0, #12]
   152f0:	str	r6, [sp, #8]
   152f4:	str	lr, [sp, #12]
   152f8:	ands	r4, r4, #8
   152fc:	movne	r4, #0
   15300:	bne	1532c <_obstack_memory_used@@Base+0xcd4>
   15304:	ldr	r5, [r0, #4]
   15308:	sub	r3, r5, #1
   1530c:	cmp	r3, #254	; 0xfe
   15310:	bhi	1532c <_obstack_memory_used@@Base+0xcd4>
   15314:	bl	11250 <__ctype_b_loc@plt>
   15318:	ldr	r2, [r0]
   1531c:	lsl	r3, r5, #1
   15320:	ldrh	r3, [r2, r3]
   15324:	tst	r3, #16384	; 0x4000
   15328:	movne	r4, r5
   1532c:	mov	r0, r4
   15330:	ldrd	r4, [sp]
   15334:	ldr	r6, [sp, #8]
   15338:	add	sp, sp, #12
   1533c:	pop	{pc}		; (ldr pc, [sp], #4)
   15340:	str	r4, [sp, #-8]!
   15344:	mov	r4, r0
   15348:	str	lr, [sp, #4]
   1534c:	bl	11250 <__ctype_b_loc@plt>
   15350:	ldr	lr, [r0]
   15354:	ldr	r2, [r4]
   15358:	b	15360 <_obstack_memory_used@@Base+0xd08>
   1535c:	str	r2, [r4]
   15360:	ldrb	r1, [r2]
   15364:	mov	r3, r2
   15368:	add	r2, r2, #1
   1536c:	lsl	r0, r1, #1
   15370:	ldrh	ip, [lr, r0]
   15374:	tst	ip, #8192	; 0x2000
   15378:	bne	1535c <_obstack_memory_used@@Base+0xd04>
   1537c:	subs	r0, r1, #45	; 0x2d
   15380:	movne	r0, #1
   15384:	cmp	r1, #0
   15388:	beq	153bc <_obstack_memory_used@@Base+0xd64>
   1538c:	tst	ip, #8
   15390:	beq	153a4 <_obstack_memory_used@@Base+0xd4c>
   15394:	b	153bc <_obstack_memory_used@@Base+0xd64>
   15398:	ldrh	r2, [lr, r1]
   1539c:	tst	r2, #8
   153a0:	bne	153bc <_obstack_memory_used@@Base+0xd64>
   153a4:	add	r3, r3, #1
   153a8:	str	r3, [r4]
   153ac:	ldrb	r2, [r3]
   153b0:	cmp	r2, #0
   153b4:	lsl	r1, r2, #1
   153b8:	bne	15398 <_obstack_memory_used@@Base+0xd40>
   153bc:	ldr	r4, [sp]
   153c0:	add	sp, sp, #4
   153c4:	pop	{pc}		; (ldr pc, [sp], #4)
   153c8:	cmp	r1, #0
   153cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   153d0:	strd	r6, [sp, #8]
   153d4:	str	r8, [sp, #16]
   153d8:	str	lr, [sp, #20]
   153dc:	beq	15464 <_obstack_memory_used@@Base+0xe0c>
   153e0:	mov	r6, r0
   153e4:	mov	r8, r2
   153e8:	sub	r7, r1, #1
   153ec:	ldrd	r4, [r6]
   153f0:	cmp	r5, #0
   153f4:	sub	r5, r5, #1
   153f8:	beq	15438 <_obstack_memory_used@@Base+0xde0>
   153fc:	add	r4, r4, #24
   15400:	ldr	r0, [r4, #-24]	; 0xffffffe8
   15404:	sub	r5, r5, #1
   15408:	cmp	r0, #0
   1540c:	beq	1542c <_obstack_memory_used@@Base+0xdd4>
   15410:	ldr	r3, [r4, #-12]
   15414:	mov	r1, r8
   15418:	tst	r3, #2
   1541c:	bne	1542c <_obstack_memory_used@@Base+0xdd4>
   15420:	bl	110e8 <strcmp@plt>
   15424:	cmp	r0, #0
   15428:	beq	1544c <_obstack_memory_used@@Base+0xdf4>
   1542c:	cmn	r5, #1
   15430:	add	r4, r4, #24
   15434:	bne	15400 <_obstack_memory_used@@Base+0xda8>
   15438:	sub	r7, r7, #1
   1543c:	add	r6, r6, #28
   15440:	cmn	r7, #1
   15444:	bne	153ec <_obstack_memory_used@@Base+0xd94>
   15448:	mov	r6, #0
   1544c:	mov	r0, r6
   15450:	ldrd	r4, [sp]
   15454:	ldrd	r6, [sp, #8]
   15458:	ldr	r8, [sp, #16]
   1545c:	add	sp, sp, #20
   15460:	pop	{pc}		; (ldr pc, [sp], #4)
   15464:	mov	r6, r1
   15468:	b	1544c <_obstack_memory_used@@Base+0xdf4>
   1546c:	strd	r4, [sp, #-16]!
   15470:	subs	r5, r0, #0
   15474:	mov	r4, r1
   15478:	str	r6, [sp, #8]
   1547c:	str	lr, [sp, #12]
   15480:	beq	15494 <_obstack_memory_used@@Base+0xe3c>
   15484:	mov	r1, #10
   15488:	bl	11274 <strchr@plt>
   1548c:	adds	r5, r0, #0
   15490:	movne	r5, #1
   15494:	cmp	r4, #0
   15498:	beq	154c4 <_obstack_memory_used@@Base+0xe6c>
   1549c:	ldr	r3, [r4]
   154a0:	cmp	r3, #0
   154a4:	beq	154c4 <_obstack_memory_used@@Base+0xe6c>
   154a8:	ldr	r0, [r3, #8]
   154ac:	ldr	r1, [r3, #16]
   154b0:	bl	1546c <_obstack_memory_used@@Base+0xe14>
   154b4:	ldr	r3, [r4, #16]!
   154b8:	add	r5, r5, r0
   154bc:	cmp	r3, #0
   154c0:	bne	154a8 <_obstack_memory_used@@Base+0xe50>
   154c4:	mov	r0, r5
   154c8:	ldrd	r4, [sp]
   154cc:	ldr	r6, [sp, #8]
   154d0:	add	sp, sp, #12
   154d4:	pop	{pc}		; (ldr pc, [sp], #4)
   154d8:	strd	r4, [sp, #-16]!
   154dc:	mov	r5, r1
   154e0:	mov	r1, r3
   154e4:	str	r6, [sp, #8]
   154e8:	mov	r6, r0
   154ec:	mov	r0, r2
   154f0:	mov	r4, r2
   154f4:	str	lr, [sp, #12]
   154f8:	bl	14040 <argp_parse@@Base+0xe80>
   154fc:	mov	r2, r0
   15500:	mov	r1, r6
   15504:	ldr	r6, [sp, #8]
   15508:	mov	r0, r5
   1550c:	ldr	lr, [sp, #12]
   15510:	ldr	r3, [r4, #20]
   15514:	ldrd	r4, [sp]
   15518:	add	sp, sp, #16
   1551c:	bx	r3
   15520:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15524:	ldr	r4, [r0]
   15528:	strd	r6, [sp, #8]
   1552c:	strd	r8, [sp, #16]
   15530:	strd	sl, [sp, #24]
   15534:	str	lr, [sp, #32]
   15538:	sub	sp, sp, #52	; 0x34
   1553c:	ldr	r7, [r0, #16]
   15540:	str	r1, [sp]
   15544:	str	r0, [sp, #4]
   15548:	mov	r0, #16
   1554c:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   15550:	subs	fp, r0, #0
   15554:	beq	15b88 <_obstack_memory_used@@Base+0x1530>
   15558:	mov	r3, #0
   1555c:	cmp	r4, r3
   15560:	str	r3, [fp, #4]
   15564:	str	r3, [fp, #12]
   15568:	beq	157cc <_obstack_memory_used@@Base+0x1174>
   1556c:	ldr	r0, [r4, #12]
   15570:	ands	r0, r0, #4
   15574:	bne	15bc4 <_obstack_memory_used@@Base+0x156c>
   15578:	mov	r9, r0
   1557c:	add	r5, r4, #24
   15580:	mov	r8, r0
   15584:	b	155d4 <_obstack_memory_used@@Base+0xf7c>
   15588:	ldr	r3, [r5, #-12]
   1558c:	tst	r3, #4
   15590:	bne	155a0 <_obstack_memory_used@@Base+0xf48>
   15594:	add	r9, r9, #1
   15598:	str	r9, [fp, #4]
   1559c:	ldr	r3, [r5, #-12]
   155a0:	tst	r3, #8
   155a4:	bne	155d0 <_obstack_memory_used@@Base+0xf78>
   155a8:	ldr	r6, [r5, #-20]	; 0xffffffec
   155ac:	sub	r3, r6, #1
   155b0:	cmp	r3, #254	; 0xfe
   155b4:	bhi	155d0 <_obstack_memory_used@@Base+0xf78>
   155b8:	bl	11250 <__ctype_b_loc@plt>
   155bc:	ldr	r3, [r0]
   155c0:	lsl	r6, r6, #1
   155c4:	ldrh	r3, [r3, r6]
   155c8:	tst	r3, #16384	; 0x4000
   155cc:	addne	r8, r8, #1
   155d0:	add	r5, r5, #24
   155d4:	ldr	r3, [r5, #-20]	; 0xffffffec
   155d8:	cmp	r3, #0
   155dc:	bne	15588 <_obstack_memory_used@@Base+0xf30>
   155e0:	ldr	r3, [r5, #-24]	; 0xffffffe8
   155e4:	cmp	r3, #0
   155e8:	bne	15588 <_obstack_memory_used@@Base+0xf30>
   155ec:	ldr	r3, [r5, #-8]
   155f0:	cmp	r3, #0
   155f4:	bne	15588 <_obstack_memory_used@@Base+0xf30>
   155f8:	ldr	sl, [r5, #-4]
   155fc:	cmp	sl, #0
   15600:	bne	15588 <_obstack_memory_used@@Base+0xf30>
   15604:	rsb	r9, r9, r9, lsl #3
   15608:	lsl	r0, r9, #2
   1560c:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   15610:	str	r0, [fp]
   15614:	add	r0, r8, #1
   15618:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   1561c:	ldr	r5, [fp]
   15620:	mov	r8, r0
   15624:	str	r0, [fp, #8]
   15628:	cmp	r5, #0
   1562c:	cmpne	r0, #0
   15630:	beq	15b2c <_obstack_memory_used@@Base+0x14d4>
   15634:	ldr	r2, [fp, #4]
   15638:	movw	r3, #37449	; 0x9249
   1563c:	movt	r3, #2340	; 0x924
   15640:	cmp	r2, r3
   15644:	bhi	15b4c <_obstack_memory_used@@Base+0x14f4>
   15648:	mov	r6, r0
   1564c:	mov	r0, sl
   15650:	str	r7, [sp, #8]
   15654:	mov	r7, r8
   15658:	ldr	sl, [sp]
   1565c:	add	r5, r5, #28
   15660:	str	fp, [sp, #12]
   15664:	ldr	r3, [r4, #4]
   15668:	ldr	r8, [sp, #4]
   1566c:	cmp	r3, #0
   15670:	ldr	fp, [r4, #20]
   15674:	bne	15684 <_obstack_memory_used@@Base+0x102c>
   15678:	ldr	ip, [r4]
   1567c:	cmp	ip, #0
   15680:	beq	15764 <_obstack_memory_used@@Base+0x110c>
   15684:	mov	r2, #0
   15688:	cmp	fp, #0
   1568c:	str	r4, [r5, #-28]	; 0xffffffe4
   15690:	str	r2, [r5, #-24]	; 0xffffffe8
   15694:	str	r6, [r5, #-20]	; 0xffffffec
   15698:	bne	156ac <_obstack_memory_used@@Base+0x1054>
   1569c:	ldr	r2, [r4]
   156a0:	orrs	r3, r2, r3
   156a4:	movne	fp, r0
   156a8:	beq	15784 <_obstack_memory_used@@Base+0x112c>
   156ac:	mov	r3, #0
   156b0:	str	fp, [r5, #-16]
   156b4:	str	sl, [r5, #-12]
   156b8:	str	r8, [r5, #-8]
   156bc:	add	r3, r3, #1
   156c0:	str	r3, [r5, #-24]	; 0xffffffe8
   156c4:	ldr	r3, [r4, #12]
   156c8:	tst	r3, #8
   156cc:	bne	15734 <_obstack_memory_used@@Base+0x10dc>
   156d0:	ldr	r9, [r4, #4]
   156d4:	sub	r3, r9, #1
   156d8:	cmp	r3, #254	; 0xfe
   156dc:	bhi	15734 <_obstack_memory_used@@Base+0x10dc>
   156e0:	bl	11250 <__ctype_b_loc@plt>
   156e4:	ldr	r0, [r0]
   156e8:	lsl	r3, r9, #1
   156ec:	ldrh	r3, [r0, r3]
   156f0:	tst	r3, #16384	; 0x4000
   156f4:	beq	15734 <_obstack_memory_used@@Base+0x10dc>
   156f8:	cmp	r7, r6
   156fc:	uxtb	r9, r9
   15700:	bcs	15730 <_obstack_memory_used@@Base+0x10d8>
   15704:	ldrb	r3, [r7]
   15708:	cmp	r3, r9
   1570c:	beq	15734 <_obstack_memory_used@@Base+0x10dc>
   15710:	mov	r3, r7
   15714:	sub	r0, r6, #1
   15718:	b	15728 <_obstack_memory_used@@Base+0x10d0>
   1571c:	ldrb	ip, [r3, #1]!
   15720:	cmp	ip, r9
   15724:	beq	15734 <_obstack_memory_used@@Base+0x10dc>
   15728:	cmp	r0, r3
   1572c:	bne	1571c <_obstack_memory_used@@Base+0x10c4>
   15730:	strb	r9, [r6], #1
   15734:	add	r4, r4, #24
   15738:	ldr	r0, [r4, #4]
   1573c:	cmp	r0, #0
   15740:	bne	15750 <_obstack_memory_used@@Base+0x10f8>
   15744:	ldr	r3, [r4]
   15748:	cmp	r3, #0
   1574c:	beq	1578c <_obstack_memory_used@@Base+0x1134>
   15750:	ldr	r3, [r4, #12]
   15754:	tst	r3, #4
   15758:	beq	157b0 <_obstack_memory_used@@Base+0x1158>
   1575c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   15760:	b	156bc <_obstack_memory_used@@Base+0x1064>
   15764:	ldr	ip, [r4, #16]
   15768:	cmp	ip, #0
   1576c:	beq	157b8 <_obstack_memory_used@@Base+0x1160>
   15770:	cmp	fp, #0
   15774:	str	r4, [r5, #-28]	; 0xffffffe4
   15778:	str	r3, [r5, #-24]	; 0xffffffe8
   1577c:	str	r6, [r5, #-20]	; 0xffffffec
   15780:	bne	156ac <_obstack_memory_used@@Base+0x1054>
   15784:	add	fp, r0, #1
   15788:	b	156ac <_obstack_memory_used@@Base+0x1054>
   1578c:	ldr	r3, [r4, #16]
   15790:	cmp	r3, #0
   15794:	bne	15750 <_obstack_memory_used@@Base+0x10f8>
   15798:	ldr	r3, [r4, #20]
   1579c:	cmp	r3, #0
   157a0:	bne	15750 <_obstack_memory_used@@Base+0x10f8>
   157a4:	add	r5, r5, #28
   157a8:	mov	r0, fp
   157ac:	b	1566c <_obstack_memory_used@@Base+0x1014>
   157b0:	mov	r3, r0
   157b4:	b	157a4 <_obstack_memory_used@@Base+0x114c>
   157b8:	cmp	fp, #0
   157bc:	bne	15908 <_obstack_memory_used@@Base+0x12b0>
   157c0:	ldr	r7, [sp, #8]
   157c4:	strb	r3, [r6]
   157c8:	ldr	fp, [sp, #12]
   157cc:	cmp	r7, #0
   157d0:	beq	158e8 <_obstack_memory_used@@Base+0x1290>
   157d4:	ldr	r3, [r7]
   157d8:	cmp	r3, #0
   157dc:	beq	158e8 <_obstack_memory_used@@Base+0x1290>
   157e0:	movw	r3, #37449	; 0x9249
   157e4:	movt	r3, #2340	; 0x924
   157e8:	mov	sl, r7
   157ec:	str	r3, [sp, #28]
   157f0:	add	r3, fp, #12
   157f4:	str	r3, [sp, #44]	; 0x2c
   157f8:	ldr	r6, [sl, #8]
   157fc:	ldr	r5, [sl, #12]
   15800:	cmp	r5, #0
   15804:	bne	15810 <_obstack_memory_used@@Base+0x11b8>
   15808:	cmp	r6, #0
   1580c:	beq	15b0c <_obstack_memory_used@@Base+0x14b4>
   15810:	ldr	r7, [sp, #4]
   15814:	mov	r0, #28
   15818:	ldr	r4, [r7, #16]
   1581c:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   15820:	subs	r1, r0, #0
   15824:	beq	15864 <_obstack_memory_used@@Base+0x120c>
   15828:	ldr	r3, [sp]
   1582c:	sub	r4, sl, r4
   15830:	asr	r4, r4, #4
   15834:	str	r6, [r1]
   15838:	ldr	r2, [fp, #12]
   1583c:	str	r1, [fp, #12]
   15840:	strd	r4, [r1, #4]
   15844:	cmp	r3, #0
   15848:	str	r3, [r1, #12]
   1584c:	ldrne	r3, [r3, #20]
   15850:	str	r7, [r1, #16]
   15854:	ldreq	r3, [sp]
   15858:	str	r2, [r1, #24]
   1585c:	addne	r3, r3, #1
   15860:	str	r3, [r1, #20]
   15864:	ldr	r0, [sl]
   15868:	bl	15520 <_obstack_memory_used@@Base+0xec8>
   1586c:	ldr	r3, [fp, #12]
   15870:	mov	r6, r0
   15874:	cmp	r3, #0
   15878:	bne	15884 <_obstack_memory_used@@Base+0x122c>
   1587c:	b	15b14 <_obstack_memory_used@@Base+0x14bc>
   15880:	mov	r3, r2
   15884:	ldr	r2, [r3, #24]
   15888:	cmp	r2, #0
   1588c:	bne	15880 <_obstack_memory_used@@Base+0x1228>
   15890:	add	r3, r3, #24
   15894:	ldr	r2, [r6, #4]
   15898:	ldr	r1, [r6, #12]
   1589c:	cmp	r2, #0
   158a0:	str	r1, [r3]
   158a4:	mov	r3, #0
   158a8:	str	r3, [r6, #12]
   158ac:	beq	158d4 <_obstack_memory_used@@Base+0x127c>
   158b0:	ldr	r3, [fp, #4]
   158b4:	cmp	r3, #0
   158b8:	bne	15918 <_obstack_memory_used@@Base+0x12c0>
   158bc:	ldr	r1, [r6]
   158c0:	str	r2, [fp, #4]
   158c4:	ldr	r2, [r6, #8]
   158c8:	str	r1, [fp]
   158cc:	str	r2, [fp, #8]
   158d0:	str	r3, [r6, #4]
   158d4:	mov	r0, r6
   158d8:	bl	15184 <_obstack_memory_used@@Base+0xb2c>
   158dc:	ldr	r3, [sl, #16]!
   158e0:	cmp	r3, #0
   158e4:	bne	157f8 <_obstack_memory_used@@Base+0x11a0>
   158e8:	mov	r0, fp
   158ec:	add	sp, sp, #52	; 0x34
   158f0:	ldrd	r4, [sp]
   158f4:	ldrd	r6, [sp, #8]
   158f8:	ldrd	r8, [sp, #16]
   158fc:	ldrd	sl, [sp, #24]
   15900:	add	sp, sp, #32
   15904:	pop	{pc}		; (ldr pc, [sp], #4)
   15908:	str	r4, [r5, #-28]	; 0xffffffe4
   1590c:	str	r3, [r5, #-24]	; 0xffffffe8
   15910:	str	r6, [r5, #-20]	; 0xffffffec
   15914:	b	156ac <_obstack_memory_used@@Base+0x1054>
   15918:	add	r3, r2, r3
   1591c:	rsb	r0, r3, r3, lsl #3
   15920:	str	r3, [sp, #12]
   15924:	lsl	r0, r0, #2
   15928:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   1592c:	mov	r4, r0
   15930:	ldr	r0, [fp, #8]
   15934:	str	r4, [sp, #8]
   15938:	bl	11268 <strlen@plt>
   1593c:	mov	r8, r0
   15940:	ldr	r0, [r6, #8]
   15944:	bl	11268 <strlen@plt>
   15948:	add	r0, r8, r0
   1594c:	add	r0, r0, #1
   15950:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   15954:	cmp	r4, #0
   15958:	cmpne	r0, #0
   1595c:	mov	r9, r0
   15960:	beq	15b6c <_obstack_memory_used@@Base+0x1514>
   15964:	ldr	r3, [sp, #12]
   15968:	ldr	r2, [sp, #28]
   1596c:	cmp	r3, r2
   15970:	bhi	15ba8 <_obstack_memory_used@@Base+0x1550>
   15974:	ldm	fp, {r1, r5}
   15978:	ldr	r0, [sp, #8]
   1597c:	rsb	r4, r5, r5, lsl #3
   15980:	str	r1, [sp, #24]
   15984:	lsl	r4, r4, #2
   15988:	mov	r2, r4
   1598c:	bl	11244 <mempcpy@plt>
   15990:	ldm	r6, {r1, r3}
   15994:	rsb	r2, r3, r3, lsl #3
   15998:	str	r3, [sp, #16]
   1599c:	lsl	r2, r2, #2
   159a0:	bl	11160 <memcpy@plt>
   159a4:	ldr	r7, [fp, #8]
   159a8:	mov	r2, r8
   159ac:	mov	r0, r9
   159b0:	mov	r1, r7
   159b4:	bl	11160 <memcpy@plt>
   159b8:	cmp	r5, #0
   159bc:	ldr	r3, [sp, #16]
   159c0:	beq	15b1c <_obstack_memory_used@@Base+0x14c4>
   159c4:	ldr	r1, [sp, #8]
   159c8:	subs	r5, r5, #1
   159cc:	add	r1, r1, #28
   159d0:	ldr	r2, [r1, #-20]	; 0xffffffec
   159d4:	sub	r2, r2, r7
   159d8:	add	r2, r9, r2
   159dc:	str	r2, [r1, #-20]	; 0xffffffec
   159e0:	bne	159c8 <_obstack_memory_used@@Base+0x1370>
   159e4:	ldr	r2, [sp, #8]
   159e8:	add	r4, r2, r4
   159ec:	add	r2, r9, r8
   159f0:	cmp	r3, #0
   159f4:	ldr	r1, [r6, #8]
   159f8:	str	r2, [sp, #16]
   159fc:	beq	15b24 <_obstack_memory_used@@Base+0x14cc>
   15a00:	mov	r8, r2
   15a04:	add	r4, r4, #28
   15a08:	str	r6, [sp, #32]
   15a0c:	sub	r2, r2, #1
   15a10:	strd	sl, [sp, #36]	; 0x24
   15a14:	mov	sl, r1
   15a18:	mov	fp, r3
   15a1c:	str	r2, [sp, #20]
   15a20:	str	r8, [r4, #-20]	; 0xffffffec
   15a24:	ldr	r6, [r4, #-24]	; 0xffffffe8
   15a28:	ldr	r7, [r4, #-28]	; 0xffffffe4
   15a2c:	cmp	r6, #0
   15a30:	beq	15a84 <_obstack_memory_used@@Base+0x142c>
   15a34:	ldr	r3, [r7, #12]
   15a38:	tst	r3, #8
   15a3c:	bne	15a78 <_obstack_memory_used@@Base+0x1420>
   15a40:	ldr	r5, [r7, #4]
   15a44:	sub	r3, r5, #1
   15a48:	cmp	r3, #254	; 0xfe
   15a4c:	bhi	15a78 <_obstack_memory_used@@Base+0x1420>
   15a50:	bl	11250 <__ctype_b_loc@plt>
   15a54:	ldr	r1, [r0]
   15a58:	lsl	r2, r5, #1
   15a5c:	ldrb	r3, [sl]
   15a60:	ldrh	r2, [r1, r2]
   15a64:	sub	r5, r3, r5
   15a68:	clz	r5, r5
   15a6c:	lsr	r5, r5, #5
   15a70:	ands	r2, r5, r2, lsr #14
   15a74:	bne	15ac8 <_obstack_memory_used@@Base+0x1470>
   15a78:	subs	r6, r6, #1
   15a7c:	add	r7, r7, #24
   15a80:	bne	15a34 <_obstack_memory_used@@Base+0x13dc>
   15a84:	subs	fp, fp, #1
   15a88:	add	r4, r4, #28
   15a8c:	bne	15a20 <_obstack_memory_used@@Base+0x13c8>
   15a90:	add	r6, sp, #32
   15a94:	ldm	r6, {r6, sl, fp}
   15a98:	mov	r3, #0
   15a9c:	strb	r3, [r8]
   15aa0:	ldr	r0, [sp, #24]
   15aa4:	bl	141a4 <argp_parse@@Base+0xfe4>
   15aa8:	ldr	r0, [fp, #8]
   15aac:	bl	141a4 <argp_parse@@Base+0xfe4>
   15ab0:	ldr	r3, [sp, #8]
   15ab4:	str	r3, [fp]
   15ab8:	ldr	r3, [sp, #12]
   15abc:	str	r9, [fp, #8]
   15ac0:	str	r3, [fp, #4]
   15ac4:	b	158d4 <_obstack_memory_used@@Base+0x127c>
   15ac8:	ldr	r2, [sp, #16]
   15acc:	cmp	r9, r2
   15ad0:	bcs	15b00 <_obstack_memory_used@@Base+0x14a8>
   15ad4:	ldrb	r2, [r9]
   15ad8:	cmp	r2, r3
   15adc:	beq	15b04 <_obstack_memory_used@@Base+0x14ac>
   15ae0:	mov	r2, r9
   15ae4:	ldr	r0, [sp, #20]
   15ae8:	b	15af8 <_obstack_memory_used@@Base+0x14a0>
   15aec:	ldrb	r1, [r2, #1]!
   15af0:	cmp	r1, r3
   15af4:	beq	15b04 <_obstack_memory_used@@Base+0x14ac>
   15af8:	cmp	r2, r0
   15afc:	bne	15aec <_obstack_memory_used@@Base+0x1494>
   15b00:	strb	r3, [r8], #1
   15b04:	add	sl, sl, #1
   15b08:	b	15a78 <_obstack_memory_used@@Base+0x1420>
   15b0c:	ldr	r1, [sp]
   15b10:	b	15864 <_obstack_memory_used@@Base+0x120c>
   15b14:	ldr	r3, [sp, #44]	; 0x2c
   15b18:	b	15894 <_obstack_memory_used@@Base+0x123c>
   15b1c:	ldr	r4, [sp, #8]
   15b20:	b	159ec <_obstack_memory_used@@Base+0x1394>
   15b24:	ldr	r8, [sp, #16]
   15b28:	b	15a98 <_obstack_memory_used@@Base+0x1440>
   15b2c:	movw	r3, #49076	; 0xbfb4
   15b30:	movt	r3, #1
   15b34:	movw	r1, #49244	; 0xc05c
   15b38:	movt	r1, #1
   15b3c:	movw	r0, #49276	; 0xc07c
   15b40:	movt	r0, #1
   15b44:	movw	r2, #474	; 0x1da
   15b48:	bl	113b8 <__assert_fail@plt>
   15b4c:	movw	r3, #49076	; 0xbfb4
   15b50:	movt	r3, #1
   15b54:	movw	r1, #49244	; 0xc05c
   15b58:	movt	r1, #1
   15b5c:	movw	r0, #49312	; 0xc0a0
   15b60:	movt	r0, #1
   15b64:	mov	r2, #476	; 0x1dc
   15b68:	bl	113b8 <__assert_fail@plt>
   15b6c:	movw	r1, #49244	; 0xc05c
   15b70:	movt	r1, #1
   15b74:	ldr	r3, [pc, #104]	; 15be4 <_obstack_memory_used@@Base+0x158c>
   15b78:	movw	r0, #49372	; 0xc0dc
   15b7c:	movt	r0, #1
   15b80:	movw	r2, #970	; 0x3ca
   15b84:	bl	113b8 <__assert_fail@plt>
   15b88:	movw	r3, #49076	; 0xbfb4
   15b8c:	movt	r3, #1
   15b90:	movw	r1, #49244	; 0xc05c
   15b94:	movt	r1, #1
   15b98:	movw	r0, #49256	; 0xc068
   15b9c:	movt	r0, #1
   15ba0:	movw	r2, #450	; 0x1c2
   15ba4:	bl	113b8 <__assert_fail@plt>
   15ba8:	movw	r1, #49244	; 0xc05c
   15bac:	movt	r1, #1
   15bb0:	ldr	r3, [pc, #44]	; 15be4 <_obstack_memory_used@@Base+0x158c>
   15bb4:	movw	r0, #49400	; 0xc0f8
   15bb8:	movt	r0, #1
   15bbc:	mov	r2, #972	; 0x3cc
   15bc0:	bl	113b8 <__assert_fail@plt>
   15bc4:	movw	r3, #49076	; 0xbfb4
   15bc8:	movt	r3, #1
   15bcc:	movw	r1, #49244	; 0xc05c
   15bd0:	movt	r1, #1
   15bd4:	movw	r0, #49260	; 0xc06c
   15bd8:	movt	r0, #1
   15bdc:	mov	r2, #460	; 0x1cc
   15be0:	bl	113b8 <__assert_fail@plt>
   15be4:	andeq	fp, r1, r0, asr #31
   15be8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15bec:	ldr	r5, [r0, #4]
   15bf0:	strd	r6, [sp, #8]
   15bf4:	strd	r8, [sp, #16]
   15bf8:	strd	sl, [sp, #24]
   15bfc:	str	lr, [sp, #32]
   15c00:	sub	sp, sp, #12
   15c04:	cmp	r5, #0
   15c08:	ldr	r7, [r0]
   15c0c:	ldr	r6, [r0, #8]
   15c10:	beq	15ce0 <_obstack_memory_used@@Base+0x1688>
   15c14:	mov	sl, r3
   15c18:	mov	r4, r7
   15c1c:	stm	sp, {r1, r2}
   15c20:	ldr	fp, [r4, #12]
   15c24:	ands	r8, fp, #8
   15c28:	movne	r0, #1
   15c2c:	movne	r8, #0
   15c30:	bne	15c6c <_obstack_memory_used@@Base+0x1614>
   15c34:	ldr	r9, [r4, #4]
   15c38:	sub	r1, r9, #1
   15c3c:	cmp	r1, #254	; 0xfe
   15c40:	bhi	15c68 <_obstack_memory_used@@Base+0x1610>
   15c44:	bl	11250 <__ctype_b_loc@plt>
   15c48:	ldr	r0, [r0]
   15c4c:	lsl	r1, r9, #1
   15c50:	ldrh	r1, [r0, r1]
   15c54:	tst	r1, #16384	; 0x4000
   15c58:	beq	15c68 <_obstack_memory_used@@Base+0x1610>
   15c5c:	ldrb	r1, [r6]
   15c60:	cmp	r1, r9
   15c64:	beq	15ca0 <_obstack_memory_used@@Base+0x1648>
   15c68:	mov	r0, #1
   15c6c:	subs	r5, r5, #1
   15c70:	add	r4, r4, #24
   15c74:	moveq	r0, #0
   15c78:	cmp	r0, #0
   15c7c:	bne	15c20 <_obstack_memory_used@@Base+0x15c8>
   15c80:	mov	r0, r8
   15c84:	add	sp, sp, #12
   15c88:	ldrd	r4, [sp]
   15c8c:	ldrd	r6, [sp, #8]
   15c90:	ldrd	r8, [sp, #16]
   15c94:	ldrd	sl, [sp, #24]
   15c98:	add	sp, sp, #32
   15c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   15ca0:	tst	fp, #4
   15ca4:	moveq	r7, r4
   15ca8:	tst	fp, #2
   15cac:	movne	r0, #1
   15cb0:	bne	15cd8 <_obstack_memory_used@@Base+0x1680>
   15cb4:	mov	r3, sl
   15cb8:	mov	r1, r7
   15cbc:	ldr	ip, [sp]
   15cc0:	mov	r0, r4
   15cc4:	ldr	r2, [sp, #4]
   15cc8:	blx	ip
   15ccc:	mov	r8, r0
   15cd0:	clz	r0, r0
   15cd4:	lsr	r0, r0, #5
   15cd8:	add	r6, r6, #1
   15cdc:	b	15c6c <_obstack_memory_used@@Base+0x1614>
   15ce0:	mov	r8, r5
   15ce4:	b	15c80 <_obstack_memory_used@@Base+0x1628>
   15ce8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15cec:	strd	r6, [sp, #8]
   15cf0:	strd	r8, [sp, #16]
   15cf4:	strd	sl, [sp, #24]
   15cf8:	add	fp, sp, #32
   15cfc:	str	lr, [sp, #32]
   15d00:	sub	sp, sp, #20
   15d04:	ldr	r5, [r0, #4]
   15d08:	cmp	r5, #0
   15d0c:	beq	15e5c <_obstack_memory_used@@Base+0x1804>
   15d10:	mov	r6, r0
   15d14:	ldr	r0, [r0, #8]
   15d18:	mov	r9, r1
   15d1c:	bl	11268 <strlen@plt>
   15d20:	add	r3, r0, #8
   15d24:	ldr	r4, [r6]
   15d28:	movw	r7, #21148	; 0x529c
   15d2c:	movt	r7, #1
   15d30:	bic	r3, r3, #7
   15d34:	sub	sp, sp, r3
   15d38:	mov	r8, sp
   15d3c:	str	r8, [fp, #-40]	; 0xffffffd8
   15d40:	ldr	r2, [r4, #20]
   15d44:	mov	r0, r4
   15d48:	sub	r3, fp, #40	; 0x28
   15d4c:	mov	r1, r7
   15d50:	add	r4, r4, #28
   15d54:	ldr	r2, [r2, #24]
   15d58:	bl	15be8 <_obstack_memory_used@@Base+0x1590>
   15d5c:	subs	r5, r5, #1
   15d60:	bne	15d40 <_obstack_memory_used@@Base+0x16e8>
   15d64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d68:	cmp	r3, r8
   15d6c:	bhi	15e9c <_obstack_memory_used@@Base+0x1844>
   15d70:	ldrd	r4, [r6]
   15d74:	cmp	r5, #0
   15d78:	beq	15e5c <_obstack_memory_used@@Base+0x1804>
   15d7c:	movw	r7, #25572	; 0x63e4
   15d80:	movt	r7, #1
   15d84:	ldr	r2, [r4, #20]
   15d88:	mov	r0, r4
   15d8c:	mov	r3, r9
   15d90:	mov	r1, r7
   15d94:	add	r4, r4, #28
   15d98:	ldr	r2, [r2, #24]
   15d9c:	bl	15be8 <_obstack_memory_used@@Base+0x1590>
   15da0:	subs	r5, r5, #1
   15da4:	bne	15d84 <_obstack_memory_used@@Base+0x172c>
   15da8:	ldm	r6, {r7, r8}
   15dac:	cmp	r8, #0
   15db0:	beq	15e5c <_obstack_memory_used@@Base+0x1804>
   15db4:	movw	r3, #49460	; 0xc134
   15db8:	movt	r3, #1
   15dbc:	movw	sl, #49476	; 0xc144
   15dc0:	movt	sl, #1
   15dc4:	add	r7, r7, #28
   15dc8:	str	r3, [fp, #-48]	; 0xffffffd0
   15dcc:	movw	r3, #49488	; 0xc150
   15dd0:	movt	r3, #1
   15dd4:	str	r3, [fp, #-52]	; 0xffffffcc
   15dd8:	ldr	r6, [r7, #-28]	; 0xffffffe4
   15ddc:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15de0:	cmp	r5, #0
   15de4:	movne	r4, r6
   15de8:	beq	15e50 <_obstack_memory_used@@Base+0x17f8>
   15dec:	ldr	r2, [r4]
   15df0:	cmp	r2, #0
   15df4:	beq	15e44 <_obstack_memory_used@@Base+0x17ec>
   15df8:	ldr	r1, [r4, #12]
   15dfc:	tst	r1, #4
   15e00:	moveq	r6, r4
   15e04:	tst	r1, #2
   15e08:	bne	15e44 <_obstack_memory_used@@Base+0x17ec>
   15e0c:	ldr	r3, [r4, #8]
   15e10:	ldr	r0, [r6, #12]
   15e14:	cmp	r3, #0
   15e18:	orr	r1, r1, r0
   15e1c:	and	r0, r1, #16
   15e20:	beq	15e78 <_obstack_memory_used@@Base+0x1820>
   15e24:	cmp	r0, #0
   15e28:	bne	15e44 <_obstack_memory_used@@Base+0x17ec>
   15e2c:	tst	r1, #1
   15e30:	movne	r0, r9
   15e34:	ldrne	r1, [fp, #-48]	; 0xffffffd0
   15e38:	moveq	r1, sl
   15e3c:	moveq	r0, r9
   15e40:	bl	19ad8 <argp_error@@Base+0x1520>
   15e44:	subs	r5, r5, #1
   15e48:	add	r4, r4, #24
   15e4c:	bne	15dec <_obstack_memory_used@@Base+0x1794>
   15e50:	subs	r8, r8, #1
   15e54:	add	r7, r7, #28
   15e58:	bne	15dd8 <_obstack_memory_used@@Base+0x1780>
   15e5c:	sub	sp, fp, #32
   15e60:	ldrd	r4, [sp]
   15e64:	ldrd	r6, [sp, #8]
   15e68:	ldrd	r8, [sp, #16]
   15e6c:	ldrd	sl, [sp, #24]
   15e70:	add	sp, sp, #32
   15e74:	pop	{pc}		; (ldr pc, [sp], #4)
   15e78:	cmp	r0, #0
   15e7c:	bne	15e44 <_obstack_memory_used@@Base+0x17ec>
   15e80:	ldr	r3, [r6, #8]
   15e84:	cmp	r3, #0
   15e88:	bne	15e2c <_obstack_memory_used@@Base+0x17d4>
   15e8c:	mov	r0, r9
   15e90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e94:	bl	19ad8 <argp_error@@Base+0x1520>
   15e98:	b	15e44 <_obstack_memory_used@@Base+0x17ec>
   15e9c:	add	r0, r3, #1
   15ea0:	mov	r2, r8
   15ea4:	movw	r1, #49452	; 0xc12c
   15ea8:	movt	r1, #1
   15eac:	str	r0, [fp, #-40]	; 0xffffffd8
   15eb0:	mov	r0, r9
   15eb4:	strb	r5, [r3]
   15eb8:	bl	19ad8 <argp_error@@Base+0x1520>
   15ebc:	ldrd	r4, [r6]
   15ec0:	cmp	r5, #0
   15ec4:	bne	15d7c <_obstack_memory_used@@Base+0x1724>
   15ec8:	b	15e5c <_obstack_memory_used@@Base+0x1804>
   15ecc:	ldr	r3, [r0, #16]
   15ed0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15ed4:	strd	r6, [sp, #8]
   15ed8:	strd	r8, [sp, #16]
   15edc:	str	lr, [sp, #24]
   15ee0:	sub	sp, sp, #12
   15ee4:	cmp	r3, #0
   15ee8:	movne	r2, r3
   15eec:	bne	15ef8 <_obstack_memory_used@@Base+0x18a0>
   15ef0:	b	161f8 <_obstack_memory_used@@Base+0x1ba0>
   15ef4:	mov	r2, ip
   15ef8:	ldr	ip, [r2, #12]
   15efc:	cmp	ip, #0
   15f00:	bne	15ef4 <_obstack_memory_used@@Base+0x189c>
   15f04:	ldr	lr, [r2, #8]
   15f08:	ldr	r2, [r1, #16]
   15f0c:	cmp	r2, #0
   15f10:	movne	ip, r2
   15f14:	bne	15f20 <_obstack_memory_used@@Base+0x18c8>
   15f18:	b	161f0 <_obstack_memory_used@@Base+0x1b98>
   15f1c:	mov	ip, r4
   15f20:	ldr	r4, [ip, #12]
   15f24:	cmp	r4, #0
   15f28:	bne	15f1c <_obstack_memory_used@@Base+0x18c4>
   15f2c:	ldr	r4, [ip, #8]
   15f30:	mvn	ip, r4
   15f34:	lsr	ip, ip, #31
   15f38:	cmp	ip, lr, lsr #31
   15f3c:	subne	r4, lr, r4
   15f40:	subeq	r4, r4, lr
   15f44:	cmp	r4, #0
   15f48:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   15f4c:	adds	r4, r2, #0
   15f50:	movne	r4, #1
   15f54:	cmp	r3, #0
   15f58:	rsbeq	r4, r4, #0
   15f5c:	rsbne	r4, r4, #1
   15f60:	cmp	r4, #0
   15f64:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   15f68:	cmp	r3, #0
   15f6c:	mov	r5, r1
   15f70:	mov	r6, r0
   15f74:	beq	16008 <_obstack_memory_used@@Base+0x19b0>
   15f78:	ldr	r0, [r2, #20]
   15f7c:	ldr	ip, [r3, #20]
   15f80:	cmp	ip, r0
   15f84:	bgt	15fcc <_obstack_memory_used@@Base+0x1974>
   15f88:	bge	15ff4 <_obstack_memory_used@@Base+0x199c>
   15f8c:	ldr	r2, [r2, #12]
   15f90:	ldr	r1, [r2, #20]
   15f94:	cmp	ip, r1
   15f98:	blt	15f8c <_obstack_memory_used@@Base+0x1934>
   15f9c:	mov	r1, r2
   15fa0:	mov	r0, r3
   15fa4:	bl	151e8 <_obstack_memory_used@@Base+0xb90>
   15fa8:	subs	r4, r0, #0
   15fac:	mvneq	r4, #0
   15fb0:	mov	r0, r4
   15fb4:	add	sp, sp, #12
   15fb8:	ldrd	r4, [sp]
   15fbc:	ldrd	r6, [sp, #8]
   15fc0:	ldrd	r8, [sp, #16]
   15fc4:	add	sp, sp, #24
   15fc8:	pop	{pc}		; (ldr pc, [sp], #4)
   15fcc:	ldr	r3, [r3, #12]
   15fd0:	ldr	r1, [r3, #20]
   15fd4:	cmp	r0, r1
   15fd8:	blt	15fcc <_obstack_memory_used@@Base+0x1974>
   15fdc:	mov	r1, r2
   15fe0:	mov	r0, r3
   15fe4:	bl	151e8 <_obstack_memory_used@@Base+0xb90>
   15fe8:	subs	r4, r0, #0
   15fec:	moveq	r4, #1
   15ff0:	b	15fb0 <_obstack_memory_used@@Base+0x1958>
   15ff4:	mov	r1, r2
   15ff8:	mov	r0, r3
   15ffc:	bl	151e8 <_obstack_memory_used@@Base+0xb90>
   16000:	subs	r4, r0, #0
   16004:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   16008:	ldr	r4, [r5, #12]
   1600c:	ldr	r3, [r6, #12]
   16010:	mvn	r2, r4
   16014:	lsr	r2, r2, #31
   16018:	cmp	r2, r3, lsr #31
   1601c:	subne	r4, r3, r4
   16020:	subeq	r4, r4, r3
   16024:	cmp	r4, #0
   16028:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   1602c:	ldr	r7, [r6]
   16030:	ldr	r2, [r6, #4]
   16034:	cmp	r2, #0
   16038:	beq	16064 <_obstack_memory_used@@Base+0x1a0c>
   1603c:	add	r3, r7, #24
   16040:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16044:	cmp	r1, #0
   16048:	beq	16058 <_obstack_memory_used@@Base+0x1a00>
   1604c:	ldr	r0, [r3, #-12]
   16050:	tst	r0, #2
   16054:	beq	16200 <_obstack_memory_used@@Base+0x1ba8>
   16058:	subs	r2, r2, #1
   1605c:	add	r3, r3, #24
   16060:	bne	16040 <_obstack_memory_used@@Base+0x19e8>
   16064:	mov	lr, #0
   16068:	ldr	ip, [r5]
   1606c:	ldr	r2, [r5, #4]
   16070:	str	lr, [sp]
   16074:	cmp	r2, lr
   16078:	beq	1625c <_obstack_memory_used@@Base+0x1c04>
   1607c:	add	r3, ip, #24
   16080:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16084:	cmp	r1, #0
   16088:	beq	16098 <_obstack_memory_used@@Base+0x1a40>
   1608c:	ldr	r0, [r3, #-12]
   16090:	tst	r0, #2
   16094:	beq	160a8 <_obstack_memory_used@@Base+0x1a50>
   16098:	subs	r2, r2, #1
   1609c:	add	r3, r3, #24
   160a0:	bne	16080 <_obstack_memory_used@@Base+0x1a28>
   160a4:	mov	r1, r2
   160a8:	ldr	r3, [r7, #12]
   160ac:	str	r1, [sp, #4]
   160b0:	ands	r3, lr, r3, lsr #3
   160b4:	bne	1621c <_obstack_memory_used@@Base+0x1bc4>
   160b8:	ldr	r3, [ip, #12]
   160bc:	tst	r3, #8
   160c0:	beq	160e8 <_obstack_memory_used@@Base+0x1a90>
   160c4:	ldr	r3, [sp, #4]
   160c8:	cmp	r3, #0
   160cc:	beq	160e8 <_obstack_memory_used@@Base+0x1a90>
   160d0:	add	r0, sp, #4
   160d4:	bl	15340 <_obstack_memory_used@@Base+0xce8>
   160d8:	cmp	r0, #0
   160dc:	subne	r4, r4, #1
   160e0:	cmp	r4, #0
   160e4:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   160e8:	ldr	r2, [r6, #20]
   160ec:	mov	r0, r6
   160f0:	mov	r3, #0
   160f4:	movw	r1, #21224	; 0x52e8
   160f8:	movt	r1, #1
   160fc:	ldr	r2, [r2, #24]
   16100:	bl	15be8 <_obstack_memory_used@@Base+0x1590>
   16104:	ldr	r2, [r5, #20]
   16108:	uxtb	r6, r0
   1610c:	movw	r1, #21224	; 0x52e8
   16110:	movt	r1, #1
   16114:	mov	r0, r5
   16118:	mov	r3, #0
   1611c:	ldr	r2, [r2, #24]
   16120:	bl	15be8 <_obstack_memory_used@@Base+0x1590>
   16124:	cmp	r6, #0
   16128:	uxtb	r5, r0
   1612c:	movne	r7, r6
   16130:	lslne	r4, r6, #2
   16134:	bne	16150 <_obstack_memory_used@@Base+0x1af8>
   16138:	ldr	r3, [sp]
   1613c:	cmp	r3, #0
   16140:	ldrbne	r7, [r3]
   16144:	moveq	r4, r6
   16148:	moveq	r7, r6
   1614c:	lslne	r4, r7, #2
   16150:	cmp	r5, #0
   16154:	movne	r8, r5
   16158:	lslne	r9, r5, #2
   1615c:	bne	16178 <_obstack_memory_used@@Base+0x1b20>
   16160:	ldr	r3, [sp, #4]
   16164:	cmp	r3, #0
   16168:	ldrbne	r8, [r3]
   1616c:	moveq	r9, r5
   16170:	moveq	r8, r5
   16174:	lslne	r9, r8, #2
   16178:	bl	1122c <__ctype_tolower_loc@plt>
   1617c:	ldr	r3, [r0]
   16180:	ldr	r4, [r3, r4]
   16184:	ldr	r3, [r3, r9]
   16188:	subs	r4, r4, r3
   1618c:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   16190:	subs	r4, r8, r7
   16194:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   16198:	adds	r4, r5, #0
   1619c:	movne	r4, #1
   161a0:	cmp	r6, #0
   161a4:	rsbeq	r4, r4, #0
   161a8:	rsbne	r4, r4, #1
   161ac:	cmp	r4, #0
   161b0:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   161b4:	cmp	r6, #0
   161b8:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   161bc:	ldrd	r0, [sp]
   161c0:	adds	r4, r1, #0
   161c4:	movne	r4, #1
   161c8:	cmp	r0, #0
   161cc:	rsbeq	r4, r4, #0
   161d0:	rsbne	r4, r4, #1
   161d4:	cmp	r4, #0
   161d8:	bne	15fb0 <_obstack_memory_used@@Base+0x1958>
   161dc:	cmp	r0, #0
   161e0:	beq	15fb0 <_obstack_memory_used@@Base+0x1958>
   161e4:	bl	111a8 <strcasecmp@plt>
   161e8:	mov	r4, r0
   161ec:	b	15fb0 <_obstack_memory_used@@Base+0x1958>
   161f0:	ldr	r4, [r1, #12]
   161f4:	b	15f30 <_obstack_memory_used@@Base+0x18d8>
   161f8:	ldr	lr, [r0, #12]
   161fc:	b	15f08 <_obstack_memory_used@@Base+0x18b0>
   16200:	str	r1, [sp]
   16204:	ldr	r2, [r5, #4]
   16208:	ldr	ip, [r5]
   1620c:	cmp	r2, #0
   16210:	beq	16264 <_obstack_memory_used@@Base+0x1c0c>
   16214:	mov	lr, #1
   16218:	b	1607c <_obstack_memory_used@@Base+0x1a24>
   1621c:	mov	r0, sp
   16220:	bl	15340 <_obstack_memory_used@@Base+0xce8>
   16224:	cmp	r0, #0
   16228:	beq	16254 <_obstack_memory_used@@Base+0x1bfc>
   1622c:	ldr	r3, [r5]
   16230:	ldr	r3, [r3, #12]
   16234:	tst	r3, #8
   16238:	moveq	r4, #1
   1623c:	beq	15fb0 <_obstack_memory_used@@Base+0x1958>
   16240:	ldr	r3, [sp, #4]
   16244:	mov	r4, #1
   16248:	cmp	r3, #0
   1624c:	beq	15fb0 <_obstack_memory_used@@Base+0x1958>
   16250:	b	160d0 <_obstack_memory_used@@Base+0x1a78>
   16254:	ldr	ip, [r5]
   16258:	b	160b8 <_obstack_memory_used@@Base+0x1a60>
   1625c:	str	r2, [sp, #4]
   16260:	b	160e8 <_obstack_memory_used@@Base+0x1a90>
   16264:	mov	r1, r2
   16268:	mov	lr, #1
   1626c:	b	160a8 <_obstack_memory_used@@Base+0x1a50>
   16270:	strd	r4, [sp, #-16]!
   16274:	mov	r5, r1
   16278:	mov	r4, r0
   1627c:	ldr	r2, [r0, #16]
   16280:	ldr	r1, [r0, #24]
   16284:	ldr	r3, [r0, #28]
   16288:	str	r6, [sp, #8]
   1628c:	str	lr, [sp, #12]
   16290:	sub	r3, r3, r1
   16294:	cmp	r3, r2
   16298:	bhi	16300 <_obstack_memory_used@@Base+0x1ca8>
   1629c:	ldr	r1, [r4, #20]
   162a0:	mov	r6, #32
   162a4:	cmp	r1, #0
   162a8:	subge	r5, r5, r1
   162ac:	b	162dc <_obstack_memory_used@@Base+0x1c84>
   162b0:	ldr	r3, [r4, #28]
   162b4:	ldr	r2, [r4, #32]
   162b8:	cmp	r3, r2
   162bc:	bcc	162d0 <_obstack_memory_used@@Base+0x1c78>
   162c0:	bl	19ab8 <argp_error@@Base+0x1500>
   162c4:	cmp	r0, #0
   162c8:	beq	162dc <_obstack_memory_used@@Base+0x1c84>
   162cc:	ldr	r3, [r4, #28]
   162d0:	add	r2, r3, #1
   162d4:	str	r2, [r4, #28]
   162d8:	strb	r6, [r3]
   162dc:	cmp	r5, #0
   162e0:	mov	r1, #1
   162e4:	mov	r0, r4
   162e8:	sub	r5, r5, #1
   162ec:	bgt	162b0 <_obstack_memory_used@@Base+0x1c58>
   162f0:	ldrd	r4, [sp]
   162f4:	ldr	r6, [sp, #8]
   162f8:	add	sp, sp, #12
   162fc:	pop	{pc}		; (ldr pc, [sp], #4)
   16300:	bl	1944c <argp_error@@Base+0xe94>
   16304:	b	1629c <_obstack_memory_used@@Base+0x1c44>
   16308:	ldrd	r2, [r0, #24]
   1630c:	strd	r4, [sp, #-16]!
   16310:	mov	r5, r1
   16314:	mov	r4, r0
   16318:	ldr	r1, [r0, #16]
   1631c:	str	r6, [sp, #8]
   16320:	str	lr, [sp, #12]
   16324:	sub	r2, r3, r2
   16328:	cmp	r2, r1
   1632c:	movls	ip, r3
   16330:	bhi	163d4 <_obstack_memory_used@@Base+0x1d7c>
   16334:	ldr	r0, [r4, #8]
   16338:	ldr	r1, [r4, #20]
   1633c:	ldr	r2, [r4, #32]
   16340:	cmp	r1, #0
   16344:	addge	r5, r5, r1
   16348:	cmp	r5, r0
   1634c:	bcc	16394 <_obstack_memory_used@@Base+0x1d3c>
   16350:	cmp	r3, r2
   16354:	bcs	16378 <_obstack_memory_used@@Base+0x1d20>
   16358:	add	r1, r3, #1
   1635c:	mov	r2, #10
   16360:	str	r1, [r4, #28]
   16364:	strb	r2, [r3]
   16368:	ldrd	r4, [sp]
   1636c:	ldr	r6, [sp, #8]
   16370:	add	sp, sp, #12
   16374:	pop	{pc}		; (ldr pc, [sp], #4)
   16378:	mov	r1, #1
   1637c:	mov	r0, r4
   16380:	bl	19ab8 <argp_error@@Base+0x1500>
   16384:	cmp	r0, #0
   16388:	beq	16368 <_obstack_memory_used@@Base+0x1d10>
   1638c:	ldr	r3, [r4, #28]
   16390:	b	16358 <_obstack_memory_used@@Base+0x1d00>
   16394:	cmp	r3, r2
   16398:	bcc	163b4 <_obstack_memory_used@@Base+0x1d5c>
   1639c:	mov	r1, #1
   163a0:	mov	r0, r4
   163a4:	bl	19ab8 <argp_error@@Base+0x1500>
   163a8:	cmp	r0, #0
   163ac:	beq	16368 <_obstack_memory_used@@Base+0x1d10>
   163b0:	ldr	ip, [r4, #28]
   163b4:	add	r2, ip, #1
   163b8:	mov	r3, #32
   163bc:	str	r2, [r4, #28]
   163c0:	strb	r3, [ip]
   163c4:	ldrd	r4, [sp]
   163c8:	ldr	r6, [sp, #8]
   163cc:	add	sp, sp, #12
   163d0:	pop	{pc}		; (ldr pc, [sp], #4)
   163d4:	bl	1944c <argp_error@@Base+0xe94>
   163d8:	ldr	r3, [r4, #28]
   163dc:	mov	ip, r3
   163e0:	b	16334 <_obstack_memory_used@@Base+0x1cdc>
   163e4:	strd	r4, [sp, #-16]!
   163e8:	ldr	r5, [r0, #8]
   163ec:	str	r6, [sp, #8]
   163f0:	str	lr, [sp, #12]
   163f4:	cmp	r5, #0
   163f8:	beq	1644c <_obstack_memory_used@@Base+0x1df4>
   163fc:	ldr	r2, [r0, #12]
   16400:	ldr	r1, [r1, #12]
   16404:	orr	r2, r2, r1
   16408:	tst	r2, #16
   1640c:	bne	16438 <_obstack_memory_used@@Base+0x1de0>
   16410:	tst	r2, #1
   16414:	mov	r6, r3
   16418:	mov	r4, r0
   1641c:	beq	1645c <_obstack_memory_used@@Base+0x1e04>
   16420:	movw	r1, #49496	; 0xc158
   16424:	movt	r1, #1
   16428:	ldr	r2, [r4, #4]
   1642c:	mov	r3, r5
   16430:	mov	r0, r6
   16434:	bl	19ad8 <argp_error@@Base+0x1520>
   16438:	ldrd	r4, [sp]
   1643c:	mov	r0, #0
   16440:	ldr	r6, [sp, #8]
   16444:	add	sp, sp, #12
   16448:	pop	{pc}		; (ldr pc, [sp], #4)
   1644c:	ldr	r5, [r1, #8]
   16450:	cmp	r5, #0
   16454:	beq	16438 <_obstack_memory_used@@Base+0x1de0>
   16458:	b	163fc <_obstack_memory_used@@Base+0x1da4>
   1645c:	mov	r0, r5
   16460:	bl	11268 <strlen@plt>
   16464:	add	r1, r0, #6
   16468:	mov	r0, r6
   1646c:	bl	16308 <_obstack_memory_used@@Base+0x1cb0>
   16470:	mov	r3, r5
   16474:	mov	r0, r6
   16478:	ldr	r2, [r4, #4]
   1647c:	movw	r1, #49508	; 0xc164
   16480:	movt	r1, #1
   16484:	bl	19ad8 <argp_error@@Base+0x1520>
   16488:	b	16438 <_obstack_memory_used@@Base+0x1de0>
   1648c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16490:	mov	r4, r3
   16494:	ldr	ip, [r0, #8]
   16498:	ldr	r3, [r0, #20]
   1649c:	cmp	r3, #0
   164a0:	ldr	r3, [r0, #16]
   164a4:	strd	r6, [sp, #8]
   164a8:	strd	r8, [sp, #16]
   164ac:	mov	r8, r2
   164b0:	ldr	r2, [r2]
   164b4:	strd	sl, [sp, #24]
   164b8:	mov	sl, r1
   164bc:	str	lr, [sp, #32]
   164c0:	sub	sp, sp, #28
   164c4:	ldr	r7, [sp, #64]	; 0x40
   164c8:	str	r3, [sp, #8]
   164cc:	str	ip, [sp, #12]
   164d0:	str	r2, [sp, #16]
   164d4:	beq	166a4 <_obstack_memory_used@@Base+0x204c>
   164d8:	mov	r2, r0
   164dc:	mov	r1, #6
   164e0:	movt	r1, #512	; 0x200
   164e4:	mov	r3, sl
   164e8:	mov	r0, ip
   164ec:	bl	154d8 <_obstack_memory_used@@Base+0xe80>
   164f0:	mov	r9, r0
   164f4:	cmp	r9, #0
   164f8:	beq	16674 <_obstack_memory_used@@Base+0x201c>
   164fc:	mov	r1, #10
   16500:	mov	r0, r9
   16504:	bl	11118 <strchrnul@plt>
   16508:	ldrb	r3, [r0]
   1650c:	mov	r5, r0
   16510:	cmp	r3, #0
   16514:	moveq	r6, r9
   16518:	streq	r3, [sp, #20]
   1651c:	beq	1656c <_obstack_memory_used@@Base+0x1f14>
   16520:	ldr	r3, [sp, #16]
   16524:	ldrb	r3, [r3]
   16528:	cmp	r3, #0
   1652c:	beq	166c4 <_obstack_memory_used@@Base+0x206c>
   16530:	mov	fp, #0
   16534:	mov	r5, r3
   16538:	add	r6, r0, #1
   1653c:	add	fp, fp, #1
   16540:	mov	r0, r6
   16544:	mov	r1, #10
   16548:	bl	11118 <strchrnul@plt>
   1654c:	cmp	fp, r5
   16550:	bne	16538 <_obstack_memory_used@@Base+0x1ee0>
   16554:	mov	r5, r0
   16558:	ldr	r3, [r8]
   1655c:	mov	r2, #1
   16560:	str	r2, [sp, #20]
   16564:	add	r3, r3, r2
   16568:	str	r3, [r8]
   1656c:	add	r1, r5, #1
   16570:	mov	r0, r7
   16574:	sub	r1, r1, r6
   16578:	sub	fp, r5, r6
   1657c:	bl	16308 <_obstack_memory_used@@Base+0x1cb0>
   16580:	ldr	r0, [r7, #28]
   16584:	ldr	r2, [r7, #32]
   16588:	add	r3, r0, fp
   1658c:	cmp	r2, r3
   16590:	bcs	165ac <_obstack_memory_used@@Base+0x1f54>
   16594:	mov	r1, fp
   16598:	mov	r0, r7
   1659c:	bl	19ab8 <argp_error@@Base+0x1500>
   165a0:	cmp	r0, #0
   165a4:	beq	165c4 <_obstack_memory_used@@Base+0x1f6c>
   165a8:	ldr	r0, [r7, #28]
   165ac:	mov	r2, fp
   165b0:	mov	r1, r6
   165b4:	bl	11160 <memcpy@plt>
   165b8:	ldr	r3, [r7, #28]
   165bc:	add	fp, r3, fp
   165c0:	str	fp, [r7, #28]
   165c4:	ldr	r3, [sp, #12]
   165c8:	cmp	r3, r9
   165cc:	beq	165d8 <_obstack_memory_used@@Base+0x1f80>
   165d0:	mov	r0, r9
   165d4:	bl	141a4 <argp_parse@@Base+0xfe4>
   165d8:	ldr	r3, [sp, #8]
   165dc:	cmp	r3, #0
   165e0:	beq	16624 <_obstack_memory_used@@Base+0x1fcc>
   165e4:	ldr	r2, [r3]
   165e8:	cmp	r2, #0
   165ec:	beq	16624 <_obstack_memory_used@@Base+0x1fcc>
   165f0:	ldr	r6, [sp, #8]
   165f4:	mov	r3, r4
   165f8:	mov	r0, r2
   165fc:	mov	r1, sl
   16600:	str	r7, [sp]
   16604:	mov	r2, r8
   16608:	bl	1648c <_obstack_memory_used@@Base+0x1e34>
   1660c:	ldr	r2, [r6, #16]!
   16610:	clz	r3, r0
   16614:	lsr	r3, r3, #5
   16618:	cmp	r2, #0
   1661c:	bne	165f8 <_obstack_memory_used@@Base+0x1fa0>
   16620:	mov	r4, r3
   16624:	ldr	r3, [sp, #20]
   16628:	cmp	r4, #0
   1662c:	moveq	r3, #0
   16630:	cmp	r3, #0
   16634:	beq	16698 <_obstack_memory_used@@Base+0x2040>
   16638:	ldrb	r3, [r5]
   1663c:	ldr	r2, [sp, #16]
   16640:	cmp	r3, #0
   16644:	ldrb	r0, [r2]
   16648:	beq	166ac <_obstack_memory_used@@Base+0x2054>
   1664c:	add	r4, r0, #1
   16650:	mov	r0, #1
   16654:	strb	r4, [r2]
   16658:	add	sp, sp, #28
   1665c:	ldrd	r4, [sp]
   16660:	ldrd	r6, [sp, #8]
   16664:	ldrd	r8, [sp, #16]
   16668:	ldrd	sl, [sp, #24]
   1666c:	add	sp, sp, #32
   16670:	pop	{pc}		; (ldr pc, [sp], #4)
   16674:	ldr	r3, [sp, #8]
   16678:	cmp	r3, #0
   1667c:	beq	16698 <_obstack_memory_used@@Base+0x2040>
   16680:	ldr	r3, [sp, #8]
   16684:	ldr	r2, [r3]
   16688:	cmp	r2, #0
   1668c:	movne	r5, r9
   16690:	strne	r5, [sp, #20]
   16694:	bne	165f0 <_obstack_memory_used@@Base+0x1f98>
   16698:	clz	r0, r4
   1669c:	lsr	r0, r0, #5
   166a0:	b	16658 <_obstack_memory_used@@Base+0x2000>
   166a4:	ldr	r9, [sp, #12]
   166a8:	b	164f4 <_obstack_memory_used@@Base+0x1e9c>
   166ac:	cmp	r0, #0
   166b0:	beq	16658 <_obstack_memory_used@@Base+0x2000>
   166b4:	ldr	r2, [sp, #16]
   166b8:	mov	r0, r3
   166bc:	strb	r3, [r2]
   166c0:	b	16658 <_obstack_memory_used@@Base+0x2000>
   166c4:	mov	r6, r9
   166c8:	b	16558 <_obstack_memory_used@@Base+0x1f00>
   166cc:	cmp	r1, #0
   166d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   166d4:	strd	r6, [sp, #8]
   166d8:	mov	r6, r2
   166dc:	strd	r8, [sp, #16]
   166e0:	mov	r8, r0
   166e4:	strd	sl, [sp, #24]
   166e8:	str	lr, [sp, #32]
   166ec:	sub	sp, sp, #12
   166f0:	beq	1671c <_obstack_memory_used@@Base+0x20c4>
   166f4:	ldr	r3, [r1, #20]
   166f8:	cmp	r3, #0
   166fc:	beq	1671c <_obstack_memory_used@@Base+0x20c4>
   16700:	mov	r2, r1
   16704:	mov	r1, #3
   16708:	movt	r1, #512	; 0x200
   1670c:	ldr	r3, [r6, #16]
   16710:	bl	154d8 <_obstack_memory_used@@Base+0xe80>
   16714:	mov	r4, r0
   16718:	b	16720 <_obstack_memory_used@@Base+0x20c8>
   1671c:	mov	r4, r8
   16720:	cmp	r4, #0
   16724:	beq	16740 <_obstack_memory_used@@Base+0x20e8>
   16728:	ldrb	r2, [r4]
   1672c:	ldr	r3, [r6, #8]
   16730:	cmp	r2, #0
   16734:	bne	1676c <_obstack_memory_used@@Base+0x2114>
   16738:	mov	r2, #1
   1673c:	str	r2, [r3, #4]
   16740:	cmp	r8, r4
   16744:	beq	1684c <_obstack_memory_used@@Base+0x21f4>
   16748:	mov	r0, r4
   1674c:	add	sp, sp, #12
   16750:	ldrd	r4, [sp]
   16754:	ldrd	r6, [sp, #8]
   16758:	ldrd	r8, [sp, #16]
   1675c:	ldrd	sl, [sp, #24]
   16760:	ldr	lr, [sp, #32]
   16764:	add	sp, sp, #36	; 0x24
   16768:	b	141a4 <argp_parse@@Base+0xfe4>
   1676c:	ldr	r3, [r3]
   16770:	ldr	r5, [r6, #4]
   16774:	cmp	r3, #0
   16778:	beq	167b8 <_obstack_memory_used@@Base+0x2160>
   1677c:	ldr	r3, [r5, #28]
   16780:	ldr	r2, [r5, #32]
   16784:	cmp	r3, r2
   16788:	bcc	167a4 <_obstack_memory_used@@Base+0x214c>
   1678c:	mov	r1, #1
   16790:	mov	r0, r5
   16794:	bl	19ab8 <argp_error@@Base+0x1500>
   16798:	cmp	r0, #0
   1679c:	ldrne	r3, [r5, #28]
   167a0:	beq	167b4 <_obstack_memory_used@@Base+0x215c>
   167a4:	add	r1, r3, #1
   167a8:	mov	r2, #10
   167ac:	str	r1, [r5, #28]
   167b0:	strb	r2, [r3]
   167b4:	ldr	r5, [r6, #4]
   167b8:	movw	r9, #2164	; 0x874
   167bc:	movt	r9, #3
   167c0:	mov	r0, r5
   167c4:	ldr	r1, [r9, #24]
   167c8:	bl	16270 <_obstack_memory_used@@Base+0x1c18>
   167cc:	ldr	r5, [r6, #4]
   167d0:	ldr	sl, [r9, #24]
   167d4:	ldr	r1, [r5, #16]
   167d8:	ldr	r3, [r5, #24]
   167dc:	ldr	r7, [r5, #28]
   167e0:	sub	r3, r7, r3
   167e4:	cmp	r3, r1
   167e8:	movls	fp, r5
   167ec:	strls	sl, [r5, #4]
   167f0:	bhi	168e8 <_obstack_memory_used@@Base+0x2290>
   167f4:	mov	r0, r4
   167f8:	str	sl, [fp, #12]
   167fc:	bl	11268 <strlen@plt>
   16800:	subs	r9, r0, #0
   16804:	bne	16898 <_obstack_memory_used@@Base+0x2240>
   16808:	ldr	r2, [r5, #16]
   1680c:	ldr	r3, [r5, #24]
   16810:	sub	r3, r7, r3
   16814:	cmp	r3, r2
   16818:	movls	r9, r5
   1681c:	bhi	16884 <_obstack_memory_used@@Base+0x222c>
   16820:	ldr	r3, [r9, #32]
   16824:	mov	r2, #0
   16828:	str	r2, [r5, #4]
   1682c:	cmp	r3, r7
   16830:	bls	16868 <_obstack_memory_used@@Base+0x2210>
   16834:	add	r2, r7, #1
   16838:	mov	r3, #10
   1683c:	str	r2, [r9, #28]
   16840:	strb	r3, [r7]
   16844:	ldr	r3, [r6, #8]
   16848:	b	16738 <_obstack_memory_used@@Base+0x20e0>
   1684c:	add	sp, sp, #12
   16850:	ldrd	r4, [sp]
   16854:	ldrd	r6, [sp, #8]
   16858:	ldrd	r8, [sp, #16]
   1685c:	ldrd	sl, [sp, #24]
   16860:	add	sp, sp, #32
   16864:	pop	{pc}		; (ldr pc, [sp], #4)
   16868:	mov	r1, #1
   1686c:	mov	r0, r9
   16870:	bl	19ab8 <argp_error@@Base+0x1500>
   16874:	cmp	r0, #0
   16878:	ldrne	r7, [r9, #28]
   1687c:	bne	16834 <_obstack_memory_used@@Base+0x21dc>
   16880:	b	16844 <_obstack_memory_used@@Base+0x21ec>
   16884:	mov	r0, r5
   16888:	bl	1944c <argp_error@@Base+0xe94>
   1688c:	ldr	r9, [r6, #4]
   16890:	ldr	r7, [r9, #28]
   16894:	b	16820 <_obstack_memory_used@@Base+0x21c8>
   16898:	ldr	r2, [r5, #32]
   1689c:	add	r3, r7, r9
   168a0:	cmp	r2, r3
   168a4:	bcs	168c0 <_obstack_memory_used@@Base+0x2268>
   168a8:	mov	r1, r9
   168ac:	mov	r0, r5
   168b0:	bl	19ab8 <argp_error@@Base+0x1500>
   168b4:	cmp	r0, #0
   168b8:	beq	168dc <_obstack_memory_used@@Base+0x2284>
   168bc:	ldr	r7, [r5, #28]
   168c0:	mov	r2, r9
   168c4:	mov	r0, r7
   168c8:	mov	r1, r4
   168cc:	bl	11160 <memcpy@plt>
   168d0:	ldr	r3, [r5, #28]
   168d4:	add	r9, r3, r9
   168d8:	str	r9, [r5, #28]
   168dc:	ldr	r5, [r6, #4]
   168e0:	ldr	r7, [r5, #28]
   168e4:	b	16808 <_obstack_memory_used@@Base+0x21b0>
   168e8:	mov	r0, r5
   168ec:	str	sl, [sp, #4]
   168f0:	bl	1944c <argp_error@@Base+0xe94>
   168f4:	ldr	fp, [r6, #4]
   168f8:	ldr	r2, [sp, #4]
   168fc:	ldr	sl, [r9, #24]
   16900:	ldr	r1, [fp, #16]
   16904:	ldr	r3, [fp, #24]
   16908:	ldr	r7, [fp, #28]
   1690c:	str	r2, [r5, #4]
   16910:	sub	r3, r7, r3
   16914:	cmp	r3, r1
   16918:	bls	16930 <_obstack_memory_used@@Base+0x22d8>
   1691c:	mov	r0, fp
   16920:	bl	1944c <argp_error@@Base+0xe94>
   16924:	ldr	r5, [r6, #4]
   16928:	ldr	r7, [r5, #28]
   1692c:	b	167f4 <_obstack_memory_used@@Base+0x219c>
   16930:	mov	r5, fp
   16934:	b	167f4 <_obstack_memory_used@@Base+0x219c>
   16938:	ldr	r3, [r1, #12]
   1693c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16940:	mov	r4, r1
   16944:	ldr	r5, [r1, #4]
   16948:	strd	r6, [sp, #8]
   1694c:	mov	r7, r0
   16950:	str	r8, [sp, #16]
   16954:	cmp	r3, #0
   16958:	str	lr, [sp, #20]
   1695c:	beq	16a88 <_obstack_memory_used@@Base+0x2430>
   16960:	ldr	r2, [r1]
   16964:	ldr	r3, [r1, #8]
   16968:	ldr	r6, [r2, #16]
   1696c:	ldr	r8, [r3]
   16970:	ldr	r3, [r3, #4]
   16974:	cmp	r3, #0
   16978:	cmpne	r8, #0
   1697c:	bne	16a30 <_obstack_memory_used@@Base+0x23d8>
   16980:	cmp	r6, #0
   16984:	beq	16a08 <_obstack_memory_used@@Base+0x23b0>
   16988:	ldr	r0, [r6]
   1698c:	cmp	r0, #0
   16990:	beq	16a08 <_obstack_memory_used@@Base+0x23b0>
   16994:	ldrb	r3, [r0]
   16998:	cmp	r3, #0
   1699c:	beq	16a08 <_obstack_memory_used@@Base+0x23b0>
   169a0:	cmp	r8, #0
   169a4:	beq	169d4 <_obstack_memory_used@@Base+0x237c>
   169a8:	ldr	r3, [r8, #16]
   169ac:	cmp	r3, r6
   169b0:	beq	16a08 <_obstack_memory_used@@Base+0x23b0>
   169b4:	cmp	r3, #0
   169b8:	beq	169d4 <_obstack_memory_used@@Base+0x237c>
   169bc:	ldr	r3, [r3, #12]
   169c0:	cmp	r3, #0
   169c4:	cmpne	r6, r3
   169c8:	bne	169bc <_obstack_memory_used@@Base+0x2364>
   169cc:	cmp	r6, r3
   169d0:	beq	16a08 <_obstack_memory_used@@Base+0x23b0>
   169d4:	mov	r2, r4
   169d8:	ldr	r1, [r6, #16]
   169dc:	ldr	r8, [r5, #12]
   169e0:	bl	166cc <_obstack_memory_used@@Base+0x2074>
   169e4:	ldr	r6, [r4, #4]
   169e8:	ldr	r2, [r6, #16]
   169ec:	ldr	r1, [r6, #24]
   169f0:	ldr	r3, [r6, #28]
   169f4:	sub	r3, r3, r1
   169f8:	cmp	r3, r2
   169fc:	movls	r5, r6
   16a00:	bhi	16ad8 <_obstack_memory_used@@Base+0x2480>
   16a04:	str	r8, [r6, #12]
   16a08:	mov	r3, #0
   16a0c:	str	r3, [r4, #12]
   16a10:	mov	r1, r7
   16a14:	mov	r0, r5
   16a18:	ldrd	r4, [sp]
   16a1c:	ldrd	r6, [sp, #8]
   16a20:	ldr	r8, [sp, #16]
   16a24:	ldr	lr, [sp, #20]
   16a28:	add	sp, sp, #24
   16a2c:	b	16270 <_obstack_memory_used@@Base+0x1c18>
   16a30:	ldr	r2, [r2, #12]
   16a34:	ldr	r3, [r8, #12]
   16a38:	cmp	r2, r3
   16a3c:	beq	16980 <_obstack_memory_used@@Base+0x2328>
   16a40:	ldr	r3, [r5, #28]
   16a44:	ldr	r2, [r5, #32]
   16a48:	cmp	r3, r2
   16a4c:	bcc	16a68 <_obstack_memory_used@@Base+0x2410>
   16a50:	mov	r1, #1
   16a54:	mov	r0, r5
   16a58:	bl	19ab8 <argp_error@@Base+0x1500>
   16a5c:	cmp	r0, #0
   16a60:	ldrne	r3, [r5, #28]
   16a64:	beq	16a78 <_obstack_memory_used@@Base+0x2420>
   16a68:	add	r1, r3, #1
   16a6c:	mov	r2, #10
   16a70:	str	r1, [r5, #28]
   16a74:	strb	r2, [r3]
   16a78:	cmp	r6, #0
   16a7c:	ldr	r5, [r4, #4]
   16a80:	bne	16988 <_obstack_memory_used@@Base+0x2330>
   16a84:	b	16a08 <_obstack_memory_used@@Base+0x23b0>
   16a88:	ldr	r3, [r5, #28]
   16a8c:	ldr	r1, [r5, #32]
   16a90:	add	r2, r3, #2
   16a94:	cmp	r1, r2
   16a98:	bcs	16ab4 <_obstack_memory_used@@Base+0x245c>
   16a9c:	mov	r1, #2
   16aa0:	mov	r0, r5
   16aa4:	bl	19ab8 <argp_error@@Base+0x1500>
   16aa8:	cmp	r0, #0
   16aac:	beq	16ad0 <_obstack_memory_used@@Base+0x2478>
   16ab0:	ldr	r3, [r5, #28]
   16ab4:	movw	r2, #49520	; 0xc170
   16ab8:	movt	r2, #1
   16abc:	ldrh	r2, [r2]
   16ac0:	strh	r2, [r3]
   16ac4:	ldr	r3, [r5, #28]
   16ac8:	add	r3, r3, #2
   16acc:	str	r3, [r5, #28]
   16ad0:	ldr	r5, [r4, #4]
   16ad4:	b	16a10 <_obstack_memory_used@@Base+0x23b8>
   16ad8:	mov	r0, r6
   16adc:	bl	1944c <argp_error@@Base+0xe94>
   16ae0:	ldr	r5, [r4, #4]
   16ae4:	b	16a04 <_obstack_memory_used@@Base+0x23ac>
   16ae8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16aec:	strd	r6, [sp, #8]
   16af0:	mov	r7, r0
   16af4:	ldr	r6, [r0, #12]
   16af8:	strd	r8, [sp, #16]
   16afc:	mov	r8, r2
   16b00:	strd	sl, [sp, #24]
   16b04:	mov	sl, r3
   16b08:	mov	fp, r1
   16b0c:	ldr	r3, [r0, #16]
   16b10:	str	lr, [sp, #32]
   16b14:	sub	sp, sp, #28
   16b18:	cmp	r6, #0
   16b1c:	ldr	r5, [sp, #68]	; 0x44
   16b20:	str	r3, [sp, #8]
   16b24:	ldr	r3, [r0, #20]
   16b28:	beq	16e98 <_obstack_memory_used@@Base+0x2840>
   16b2c:	mov	r1, #11
   16b30:	mov	r0, r6
   16b34:	str	r3, [sp, #12]
   16b38:	bl	11274 <strchr@plt>
   16b3c:	cmp	r8, #0
   16b40:	mov	r9, r0
   16b44:	ldr	r3, [sp, #12]
   16b48:	bne	16d94 <_obstack_memory_used@@Base+0x273c>
   16b4c:	cmp	r0, #0
   16b50:	beq	17090 <_obstack_memory_used@@Base+0x2a38>
   16b54:	subs	r1, r0, r6
   16b58:	movne	r4, #1
   16b5c:	moveq	r4, #0
   16b60:	cmp	r3, #0
   16b64:	str	r1, [sp, #20]
   16b68:	beq	17034 <_obstack_memory_used@@Base+0x29dc>
   16b6c:	cmp	r1, #0
   16b70:	beq	17084 <_obstack_memory_used@@Base+0x2a2c>
   16b74:	mov	r0, r6
   16b78:	mov	r4, #1
   16b7c:	bl	11154 <strndup@plt>
   16b80:	adds	r3, r0, #0
   16b84:	mov	r6, r0
   16b88:	movne	r3, #1
   16b8c:	str	r3, [sp, #16]
   16b90:	mov	r1, fp
   16b94:	mov	r0, r7
   16b98:	bl	14040 <argp_parse@@Base+0xe80>
   16b9c:	mov	r2, r0
   16ba0:	mov	r1, r6
   16ba4:	ldr	r3, [r7, #20]
   16ba8:	mov	r0, #1
   16bac:	movt	r0, #512	; 0x200
   16bb0:	str	r2, [sp, #12]
   16bb4:	blx	r3
   16bb8:	subs	r9, r0, #0
   16bbc:	moveq	r4, r9
   16bc0:	beq	16c50 <_obstack_memory_used@@Base+0x25f8>
   16bc4:	cmp	r6, r9
   16bc8:	movne	r4, #0
   16bcc:	andeq	r4, r4, #1
   16bd0:	cmp	sl, #0
   16bd4:	ldr	r2, [r5, #28]
   16bd8:	bne	16edc <_obstack_memory_used@@Base+0x2884>
   16bdc:	cmp	r4, #0
   16be0:	beq	16e38 <_obstack_memory_used@@Base+0x27e0>
   16be4:	ldr	r3, [sp, #20]
   16be8:	ldr	r0, [r5, #32]
   16bec:	add	r1, r2, r3
   16bf0:	cmp	r0, r1
   16bf4:	bcs	16df0 <_obstack_memory_used@@Base+0x2798>
   16bf8:	mov	r1, r3
   16bfc:	mov	r0, r5
   16c00:	bl	19ab8 <argp_error@@Base+0x1500>
   16c04:	cmp	r0, #0
   16c08:	ldr	r2, [r5, #28]
   16c0c:	bne	16df0 <_obstack_memory_used@@Base+0x2798>
   16c10:	ldr	r0, [r5, #16]
   16c14:	ldr	r1, [r5, #24]
   16c18:	sub	r2, r2, r1
   16c1c:	cmp	r2, r0
   16c20:	bhi	16f24 <_obstack_memory_used@@Base+0x28cc>
   16c24:	ldr	r1, [r5, #4]
   16c28:	ldr	r2, [r5, #20]
   16c2c:	bic	r2, r2, r2, asr #31
   16c30:	cmp	r1, r2
   16c34:	bcc	16f00 <_obstack_memory_used@@Base+0x28a8>
   16c38:	cmp	r9, r6
   16c3c:	moveq	r4, #1
   16c40:	beq	16c50 <_obstack_memory_used@@Base+0x25f8>
   16c44:	mov	r0, r9
   16c48:	mov	r4, #1
   16c4c:	bl	141a4 <argp_parse@@Base+0xfe4>
   16c50:	ldr	r3, [sp, #16]
   16c54:	cmp	r3, #0
   16c58:	beq	16c70 <_obstack_memory_used@@Base+0x2618>
   16c5c:	ldr	r3, [r7, #20]
   16c60:	cmp	r3, #0
   16c64:	beq	16cf0 <_obstack_memory_used@@Base+0x2698>
   16c68:	mov	r0, r6
   16c6c:	bl	141a4 <argp_parse@@Base+0xfe4>
   16c70:	cmp	r8, #0
   16c74:	beq	16cf0 <_obstack_memory_used@@Base+0x2698>
   16c78:	ldr	r3, [r7, #20]
   16c7c:	cmp	r3, #0
   16c80:	beq	16cf0 <_obstack_memory_used@@Base+0x2698>
   16c84:	mov	r0, #4
   16c88:	movt	r0, #512	; 0x200
   16c8c:	ldr	r2, [sp, #12]
   16c90:	mov	r1, #0
   16c94:	blx	r3
   16c98:	subs	r6, r0, #0
   16c9c:	beq	16cf0 <_obstack_memory_used@@Base+0x2698>
   16ca0:	orrs	r3, sl, r4
   16ca4:	bne	16fc0 <_obstack_memory_used@@Base+0x2968>
   16ca8:	mov	r0, r6
   16cac:	bl	11268 <strlen@plt>
   16cb0:	subs	r4, r0, #0
   16cb4:	bne	16f78 <_obstack_memory_used@@Base+0x2920>
   16cb8:	mov	r0, r6
   16cbc:	bl	141a4 <argp_parse@@Base+0xfe4>
   16cc0:	ldr	r2, [r5, #16]
   16cc4:	ldr	r1, [r5, #24]
   16cc8:	ldr	r3, [r5, #28]
   16ccc:	sub	r3, r3, r1
   16cd0:	cmp	r3, r2
   16cd4:	bhi	1700c <_obstack_memory_used@@Base+0x29b4>
   16cd8:	ldr	r2, [r5, #4]
   16cdc:	ldr	r3, [r5, #20]
   16ce0:	bic	r3, r3, r3, asr #31
   16ce4:	cmp	r2, r3
   16ce8:	bcc	16fe4 <_obstack_memory_used@@Base+0x298c>
   16cec:	mov	r4, #1
   16cf0:	ldr	r7, [sp, #8]
   16cf4:	cmp	r7, #0
   16cf8:	beq	16d74 <_obstack_memory_used@@Base+0x271c>
   16cfc:	ldr	r3, [r7]
   16d00:	cmp	r3, #0
   16d04:	beq	16d74 <_obstack_memory_used@@Base+0x271c>
   16d08:	ldr	r2, [sp, #64]	; 0x40
   16d0c:	eor	r6, r2, #1
   16d10:	eor	r2, r4, #1
   16d14:	orr	r2, r2, r6
   16d18:	and	r6, r6, #1
   16d1c:	tst	r2, #1
   16d20:	beq	17044 <_obstack_memory_used@@Base+0x29ec>
   16d24:	ldr	r9, [sp, #64]	; 0x40
   16d28:	orrs	r2, r4, sl
   16d2c:	mov	r0, r3
   16d30:	str	r9, [sp]
   16d34:	movne	r3, #1
   16d38:	moveq	r3, #0
   16d3c:	str	r5, [sp, #4]
   16d40:	mov	r2, r8
   16d44:	mov	r1, fp
   16d48:	bl	16ae8 <_obstack_memory_used@@Base+0x2490>
   16d4c:	ldr	r3, [r7, #16]
   16d50:	orr	r4, r4, r0
   16d54:	add	r7, r7, #16
   16d58:	cmp	r3, #0
   16d5c:	beq	16d74 <_obstack_memory_used@@Base+0x271c>
   16d60:	cmp	r4, #0
   16d64:	movne	r2, r6
   16d68:	moveq	r2, #1
   16d6c:	cmp	r2, #0
   16d70:	bne	16d28 <_obstack_memory_used@@Base+0x26d0>
   16d74:	mov	r0, r4
   16d78:	add	sp, sp, #28
   16d7c:	ldrd	r4, [sp]
   16d80:	ldrd	r6, [sp, #8]
   16d84:	ldrd	r8, [sp, #16]
   16d88:	ldrd	sl, [sp, #24]
   16d8c:	add	sp, sp, #32
   16d90:	pop	{pc}		; (ldr pc, [sp], #4)
   16d94:	cmp	r0, #0
   16d98:	beq	17018 <_obstack_memory_used@@Base+0x29c0>
   16d9c:	cmp	r3, #0
   16da0:	add	r6, r0, #1
   16da4:	movne	r1, fp
   16da8:	movne	r0, r7
   16dac:	beq	16e14 <_obstack_memory_used@@Base+0x27bc>
   16db0:	bl	14040 <argp_parse@@Base+0xe80>
   16db4:	ldr	r3, [r7, #20]
   16db8:	str	r0, [sp, #12]
   16dbc:	mov	r0, #2
   16dc0:	movt	r0, #512	; 0x200
   16dc4:	mov	r1, r6
   16dc8:	ldr	r2, [sp, #12]
   16dcc:	blx	r3
   16dd0:	subs	r9, r0, #0
   16dd4:	moveq	r4, r9
   16dd8:	beq	16c70 <_obstack_memory_used@@Base+0x2618>
   16ddc:	mov	r3, #0
   16de0:	mov	r4, r3
   16de4:	str	r3, [sp, #16]
   16de8:	str	r3, [sp, #20]
   16dec:	b	16bc4 <_obstack_memory_used@@Base+0x256c>
   16df0:	ldr	r4, [sp, #20]
   16df4:	mov	r0, r2
   16df8:	mov	r1, r6
   16dfc:	mov	r2, r4
   16e00:	bl	11160 <memcpy@plt>
   16e04:	ldr	r2, [r5, #28]
   16e08:	add	r2, r2, r4
   16e0c:	str	r2, [r5, #28]
   16e10:	b	16c10 <_obstack_memory_used@@Base+0x25b8>
   16e14:	cmp	r6, #0
   16e18:	moveq	r4, r6
   16e1c:	beq	16cf0 <_obstack_memory_used@@Base+0x2698>
   16e20:	cmp	sl, #0
   16e24:	ldr	r2, [r5, #28]
   16e28:	bne	16ec8 <_obstack_memory_used@@Base+0x2870>
   16e2c:	mov	r9, r6
   16e30:	str	sl, [sp, #12]
   16e34:	str	sl, [sp, #16]
   16e38:	mov	r0, r9
   16e3c:	str	r2, [sp, #20]
   16e40:	bl	11268 <strlen@plt>
   16e44:	subs	r4, r0, #0
   16e48:	ldr	r2, [sp, #20]
   16e4c:	beq	16c10 <_obstack_memory_used@@Base+0x25b8>
   16e50:	ldr	r0, [r5, #32]
   16e54:	add	r1, r2, r4
   16e58:	cmp	r0, r1
   16e5c:	bcs	16e78 <_obstack_memory_used@@Base+0x2820>
   16e60:	mov	r1, r4
   16e64:	mov	r0, r5
   16e68:	bl	19ab8 <argp_error@@Base+0x1500>
   16e6c:	cmp	r0, #0
   16e70:	ldr	r2, [r5, #28]
   16e74:	beq	16c10 <_obstack_memory_used@@Base+0x25b8>
   16e78:	mov	r0, r2
   16e7c:	mov	r1, r9
   16e80:	mov	r2, r4
   16e84:	bl	11160 <memcpy@plt>
   16e88:	ldr	r2, [r5, #28]
   16e8c:	add	r2, r2, r4
   16e90:	str	r2, [r5, #28]
   16e94:	b	16c10 <_obstack_memory_used@@Base+0x25b8>
   16e98:	cmp	r3, #0
   16e9c:	beq	1702c <_obstack_memory_used@@Base+0x29d4>
   16ea0:	bl	14040 <argp_parse@@Base+0xe80>
   16ea4:	mov	r2, #1
   16ea8:	movt	r2, #512	; 0x200
   16eac:	str	r0, [sp, #12]
   16eb0:	cmp	r8, #0
   16eb4:	mov	r0, #2
   16eb8:	movt	r0, #512	; 0x200
   16ebc:	moveq	r0, r2
   16ec0:	ldr	r3, [r7, #20]
   16ec4:	b	16dc4 <_obstack_memory_used@@Base+0x276c>
   16ec8:	mov	r4, #0
   16ecc:	mov	r9, r6
   16ed0:	str	r4, [sp, #12]
   16ed4:	str	r4, [sp, #16]
   16ed8:	str	r4, [sp, #20]
   16edc:	ldr	r1, [r5, #32]
   16ee0:	cmp	r1, r2
   16ee4:	bls	16f30 <_obstack_memory_used@@Base+0x28d8>
   16ee8:	add	r0, r2, #1
   16eec:	mov	r1, #10
   16ef0:	str	r0, [r5, #28]
   16ef4:	strb	r1, [r2]
   16ef8:	ldr	r2, [r5, #28]
   16efc:	b	16bdc <_obstack_memory_used@@Base+0x2584>
   16f00:	ldr	r2, [r5, #28]
   16f04:	ldr	r1, [r5, #32]
   16f08:	cmp	r2, r1
   16f0c:	bcs	16f4c <_obstack_memory_used@@Base+0x28f4>
   16f10:	add	r0, r2, #1
   16f14:	mov	r1, #10
   16f18:	str	r0, [r5, #28]
   16f1c:	strb	r1, [r2]
   16f20:	b	16c38 <_obstack_memory_used@@Base+0x25e0>
   16f24:	mov	r0, r5
   16f28:	bl	1944c <argp_error@@Base+0xe94>
   16f2c:	b	16c24 <_obstack_memory_used@@Base+0x25cc>
   16f30:	mov	r1, #1
   16f34:	mov	r0, r5
   16f38:	bl	19ab8 <argp_error@@Base+0x1500>
   16f3c:	cmp	r0, #0
   16f40:	ldr	r2, [r5, #28]
   16f44:	bne	16ee8 <_obstack_memory_used@@Base+0x2890>
   16f48:	b	16bdc <_obstack_memory_used@@Base+0x2584>
   16f4c:	mov	r1, #1
   16f50:	mov	r0, r5
   16f54:	bl	19ab8 <argp_error@@Base+0x1500>
   16f58:	cmp	r0, #0
   16f5c:	beq	16c38 <_obstack_memory_used@@Base+0x25e0>
   16f60:	ldr	r2, [r5, #28]
   16f64:	mov	r1, #10
   16f68:	add	r0, r2, #1
   16f6c:	str	r0, [r5, #28]
   16f70:	strb	r1, [r2]
   16f74:	b	16c38 <_obstack_memory_used@@Base+0x25e0>
   16f78:	ldr	r0, [r5, #28]
   16f7c:	ldr	r2, [r5, #32]
   16f80:	add	r3, r0, r4
   16f84:	cmp	r2, r3
   16f88:	bcs	16fa4 <_obstack_memory_used@@Base+0x294c>
   16f8c:	mov	r1, r4
   16f90:	mov	r0, r5
   16f94:	bl	19ab8 <argp_error@@Base+0x1500>
   16f98:	cmp	r0, #0
   16f9c:	beq	16cb8 <_obstack_memory_used@@Base+0x2660>
   16fa0:	ldr	r0, [r5, #28]
   16fa4:	mov	r2, r4
   16fa8:	mov	r1, r6
   16fac:	bl	11160 <memcpy@plt>
   16fb0:	ldr	r3, [r5, #28]
   16fb4:	add	r4, r3, r4
   16fb8:	str	r4, [r5, #28]
   16fbc:	b	16cb8 <_obstack_memory_used@@Base+0x2660>
   16fc0:	ldr	r3, [r5, #28]
   16fc4:	ldr	r2, [r5, #32]
   16fc8:	cmp	r3, r2
   16fcc:	bcs	17068 <_obstack_memory_used@@Base+0x2a10>
   16fd0:	add	r1, r3, #1
   16fd4:	mov	r2, #10
   16fd8:	str	r1, [r5, #28]
   16fdc:	strb	r2, [r3]
   16fe0:	b	16ca8 <_obstack_memory_used@@Base+0x2650>
   16fe4:	ldr	r3, [r5, #28]
   16fe8:	ldr	r2, [r5, #32]
   16fec:	cmp	r3, r2
   16ff0:	bcs	1704c <_obstack_memory_used@@Base+0x29f4>
   16ff4:	add	r1, r3, #1
   16ff8:	mov	r2, #10
   16ffc:	mov	r4, #1
   17000:	str	r1, [r5, #28]
   17004:	strb	r2, [r3]
   17008:	b	16cf0 <_obstack_memory_used@@Base+0x2698>
   1700c:	mov	r0, r5
   17010:	bl	1944c <argp_error@@Base+0xe94>
   17014:	b	16cd8 <_obstack_memory_used@@Base+0x2680>
   17018:	cmp	r3, #0
   1701c:	movne	r1, fp
   17020:	movne	r0, r7
   17024:	movne	r6, r9
   17028:	bne	16db0 <_obstack_memory_used@@Base+0x2758>
   1702c:	mov	r4, r3
   17030:	b	16cf0 <_obstack_memory_used@@Base+0x2698>
   17034:	mov	r9, r6
   17038:	str	r8, [sp, #12]
   1703c:	str	r4, [sp, #16]
   17040:	b	16bc4 <_obstack_memory_used@@Base+0x256c>
   17044:	mov	r4, #1
   17048:	b	16d74 <_obstack_memory_used@@Base+0x271c>
   1704c:	mov	r1, #1
   17050:	mov	r0, r5
   17054:	bl	19ab8 <argp_error@@Base+0x1500>
   17058:	cmp	r0, #0
   1705c:	beq	16cec <_obstack_memory_used@@Base+0x2694>
   17060:	ldr	r3, [r5, #28]
   17064:	b	16ff4 <_obstack_memory_used@@Base+0x299c>
   17068:	mov	r1, #1
   1706c:	mov	r0, r5
   17070:	bl	19ab8 <argp_error@@Base+0x1500>
   17074:	cmp	r0, #0
   17078:	beq	16ca8 <_obstack_memory_used@@Base+0x2650>
   1707c:	ldr	r3, [r5, #28]
   17080:	b	16fd0 <_obstack_memory_used@@Base+0x2978>
   17084:	ldr	r4, [sp, #20]
   17088:	str	r4, [sp, #16]
   1708c:	b	16b90 <_obstack_memory_used@@Base+0x2538>
   17090:	cmp	r3, #0
   17094:	beq	16e20 <_obstack_memory_used@@Base+0x27c8>
   17098:	mov	r1, fp
   1709c:	mov	r0, r7
   170a0:	bl	14040 <argp_parse@@Base+0xe80>
   170a4:	str	r0, [sp, #12]
   170a8:	mov	r0, #1
   170ac:	movt	r0, #512	; 0x200
   170b0:	ldr	r3, [r7, #20]
   170b4:	b	16dc4 <_obstack_memory_used@@Base+0x276c>

000170b8 <argp_failure@@Base>:
   170b8:	push	{r3}		; (str r3, [sp, #-4]!)
   170bc:	strd	r4, [sp, #-20]!	; 0xffffffec
   170c0:	subs	r5, r0, #0
   170c4:	strd	r6, [sp, #8]
   170c8:	mov	r7, r1
   170cc:	mov	r6, r2
   170d0:	str	lr, [sp, #16]
   170d4:	sub	sp, sp, #200	; 0xc8
   170d8:	beq	17234 <argp_failure@@Base+0x17c>
   170dc:	ldr	r3, [r5, #16]
   170e0:	tst	r3, #2
   170e4:	bne	17218 <argp_failure@@Base+0x160>
   170e8:	ldr	r4, [r5, #44]	; 0x2c
   170ec:	cmp	r4, #0
   170f0:	beq	17218 <argp_failure@@Base+0x160>
   170f4:	mov	r0, r4
   170f8:	bl	1131c <flockfile@plt>
   170fc:	ldr	r0, [r5, #40]	; 0x28
   17100:	mov	r1, r4
   17104:	bl	110d0 <fputs_unlocked@plt>
   17108:	ldr	r3, [sp, #220]	; 0xdc
   1710c:	cmp	r3, #0
   17110:	beq	1716c <argp_failure@@Base+0xb4>
   17114:	ldr	r3, [r4, #20]
   17118:	add	r1, sp, #224	; 0xe0
   1711c:	ldr	r2, [r4, #24]
   17120:	str	r1, [sp]
   17124:	cmp	r3, r2
   17128:	addcc	r1, r3, #1
   1712c:	movcc	r2, #58	; 0x3a
   17130:	strcc	r1, [r4, #20]
   17134:	strbcc	r2, [r3]
   17138:	bcs	172a4 <argp_failure@@Base+0x1ec>
   1713c:	ldr	r3, [r4, #20]
   17140:	ldr	r2, [r4, #24]
   17144:	cmp	r3, r2
   17148:	addcc	r1, r3, #1
   1714c:	movcc	r2, #32
   17150:	strcc	r1, [r4, #20]
   17154:	strbcc	r2, [r3]
   17158:	bcs	17294 <argp_failure@@Base+0x1dc>
   1715c:	mov	r0, r4
   17160:	ldr	r2, [sp]
   17164:	ldr	r1, [sp, #220]	; 0xdc
   17168:	bl	112ec <vfprintf@plt>
   1716c:	cmp	r6, #0
   17170:	ldr	r3, [r4, #20]
   17174:	ldr	r2, [r4, #24]
   17178:	beq	171dc <argp_failure@@Base+0x124>
   1717c:	cmp	r2, r3
   17180:	addhi	r1, r3, #1
   17184:	movhi	r2, #58	; 0x3a
   17188:	strhi	r1, [r4, #20]
   1718c:	strbhi	r2, [r3]
   17190:	bls	172c4 <argp_failure@@Base+0x20c>
   17194:	ldr	r3, [r4, #20]
   17198:	ldr	r2, [r4, #24]
   1719c:	cmp	r3, r2
   171a0:	addcc	r1, r3, #1
   171a4:	movcc	r2, #32
   171a8:	strcc	r1, [r4, #20]
   171ac:	strbcc	r2, [r3]
   171b0:	bcs	172b4 <argp_failure@@Base+0x1fc>
   171b4:	mov	r2, #200	; 0xc8
   171b8:	mov	r1, sp
   171bc:	mov	r0, r6
   171c0:	bl	112a4 <strerror_r@plt>
   171c4:	cmp	r0, #0
   171c8:	beq	17278 <argp_failure@@Base+0x1c0>
   171cc:	mov	r1, r4
   171d0:	bl	110d0 <fputs_unlocked@plt>
   171d4:	ldr	r3, [r4, #20]
   171d8:	ldr	r2, [r4, #24]
   171dc:	cmp	r3, r2
   171e0:	addcc	r1, r3, #1
   171e4:	movcc	r2, #10
   171e8:	strcc	r1, [r4, #20]
   171ec:	strbcc	r2, [r3]
   171f0:	bcs	17268 <argp_failure@@Base+0x1b0>
   171f4:	mov	r0, r4
   171f8:	bl	111b4 <funlockfile@plt>
   171fc:	cmp	r7, #0
   17200:	beq	17218 <argp_failure@@Base+0x160>
   17204:	cmp	r5, #0
   17208:	beq	17260 <argp_failure@@Base+0x1a8>
   1720c:	ldr	r3, [r5, #16]
   17210:	tst	r3, #32
   17214:	beq	17260 <argp_failure@@Base+0x1a8>
   17218:	add	sp, sp, #200	; 0xc8
   1721c:	ldrd	r4, [sp]
   17220:	ldrd	r6, [sp, #8]
   17224:	ldr	lr, [sp, #16]
   17228:	add	sp, sp, #20
   1722c:	add	sp, sp, #4
   17230:	bx	lr
   17234:	movw	r3, #2232	; 0x8b8
   17238:	movt	r3, #3
   1723c:	ldr	r4, [r3]
   17240:	cmp	r4, #0
   17244:	beq	17218 <argp_failure@@Base+0x160>
   17248:	mov	r0, r4
   1724c:	bl	1131c <flockfile@plt>
   17250:	movw	r3, #2224	; 0x8b0
   17254:	movt	r3, #3
   17258:	ldr	r0, [r3]
   1725c:	b	17100 <argp_failure@@Base+0x48>
   17260:	mov	r0, r7
   17264:	bl	1125c <exit@plt>
   17268:	mov	r1, #10
   1726c:	mov	r0, r4
   17270:	bl	112d4 <__overflow@plt>
   17274:	b	171f4 <argp_failure@@Base+0x13c>
   17278:	mov	r0, r6
   1727c:	bl	11220 <strerror@plt>
   17280:	cmp	r0, #0
   17284:	movw	r3, #49524	; 0xc174
   17288:	movt	r3, #1
   1728c:	moveq	r0, r3
   17290:	b	171cc <argp_failure@@Base+0x114>
   17294:	mov	r1, #32
   17298:	mov	r0, r4
   1729c:	bl	112d4 <__overflow@plt>
   172a0:	b	1715c <argp_failure@@Base+0xa4>
   172a4:	mov	r1, #58	; 0x3a
   172a8:	mov	r0, r4
   172ac:	bl	112d4 <__overflow@plt>
   172b0:	b	1713c <argp_failure@@Base+0x84>
   172b4:	mov	r1, #32
   172b8:	mov	r0, r4
   172bc:	bl	112d4 <__overflow@plt>
   172c0:	b	171b4 <argp_failure@@Base+0xfc>
   172c4:	mov	r1, #58	; 0x3a
   172c8:	mov	r0, r4
   172cc:	bl	112d4 <__overflow@plt>
   172d0:	b	17194 <argp_failure@@Base+0xdc>
   172d4:	cmp	r2, #0
   172d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   172dc:	strd	r6, [sp, #8]
   172e0:	strd	r8, [sp, #16]
   172e4:	strd	sl, [sp, #24]
   172e8:	add	fp, sp, #32
   172ec:	str	lr, [sp, #32]
   172f0:	sub	sp, sp, #124	; 0x7c
   172f4:	str	r2, [fp, #-128]	; 0xffffff80
   172f8:	strd	r0, [fp, #-108]	; 0xffffff94
   172fc:	str	r3, [fp, #-100]	; 0xffffff9c
   17300:	beq	17774 <argp_failure@@Base+0x6bc>
   17304:	mov	r0, r2
   17308:	movw	r8, #2164	; 0x874
   1730c:	movt	r8, #3
   17310:	bl	1131c <flockfile@plt>
   17314:	ldr	r3, [r8, #36]	; 0x24
   17318:	cmp	r3, #0
   1731c:	beq	17790 <argp_failure@@Base+0x6d8>
   17320:	mov	r3, #0
   17324:	ldr	r0, [fp, #-128]	; 0xffffff80
   17328:	mov	r1, r3
   1732c:	ldr	r2, [r8, #32]
   17330:	bl	193b4 <argp_error@@Base+0xdfc>
   17334:	subs	r7, r0, #0
   17338:	beq	182b0 <argp_failure@@Base+0x11f8>
   1733c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17340:	ands	r3, r3, #11
   17344:	streq	r3, [fp, #-136]	; 0xffffff78
   17348:	bne	17ac0 <argp_failure@@Base+0xa08>
   1734c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17350:	ands	r4, r3, #3
   17354:	bne	17950 <argp_failure@@Base+0x898>
   17358:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1735c:	tst	r3, #16
   17360:	bne	1791c <argp_failure@@Base+0x864>
   17364:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17368:	tst	r3, #4
   1736c:	and	r5, r3, #8
   17370:	bne	17898 <argp_failure@@Base+0x7e0>
   17374:	cmp	r5, #0
   17378:	beq	1770c <argp_failure@@Base+0x654>
   1737c:	ldr	r3, [fp, #-136]	; 0xffffff78
   17380:	ldr	r3, [r3, #4]
   17384:	cmp	r3, #0
   17388:	str	r3, [fp, #-112]	; 0xffffff90
   1738c:	beq	1770c <argp_failure@@Base+0x654>
   17390:	cmp	r4, #0
   17394:	bne	178c8 <argp_failure@@Base+0x810>
   17398:	ldr	r3, [fp, #-136]	; 0xffffff78
   1739c:	ldr	r3, [r3]
   173a0:	str	r4, [fp, #-88]	; 0xffffffa8
   173a4:	str	r4, [fp, #-84]	; 0xffffffac
   173a8:	str	r4, [fp, #-80]	; 0xffffffb0
   173ac:	mov	r2, r3
   173b0:	movw	r3, #47872	; 0xbb00
   173b4:	movt	r3, #1
   173b8:	mov	r5, r2
   173bc:	str	r3, [fp, #-140]	; 0xffffff74
   173c0:	movw	r3, #49956	; 0xc324
   173c4:	movt	r3, #1
   173c8:	str	r8, [fp, #-96]	; 0xffffffa0
   173cc:	str	r3, [fp, #-144]	; 0xffffff70
   173d0:	ldr	r0, [r7, #16]
   173d4:	ldr	r3, [r7, #24]
   173d8:	ldr	r2, [r7, #28]
   173dc:	ldr	r4, [r5]
   173e0:	ldr	r9, [r5, #8]
   173e4:	sub	r2, r2, r3
   173e8:	cmp	r2, r0
   173ec:	bhi	17fa0 <argp_failure@@Base+0xee8>
   173f0:	ldr	r1, [r7, #4]
   173f4:	mov	r3, #1
   173f8:	ldr	r8, [r4, #12]
   173fc:	str	r1, [fp, #-120]	; 0xffffff88
   17400:	mov	r1, #0
   17404:	str	r1, [r7, #4]
   17408:	ldr	r1, [r7, #12]
   1740c:	str	r3, [fp, #-64]	; 0xffffffc0
   17410:	ldr	r3, [fp, #-104]	; 0xffffff98
   17414:	str	r1, [fp, #-116]	; 0xffffff8c
   17418:	ands	r1, r8, #8
   1741c:	str	r5, [fp, #-76]	; 0xffffffb4
   17420:	str	r1, [fp, #-124]	; 0xffffff84
   17424:	sub	r1, fp, #88	; 0x58
   17428:	str	r7, [fp, #-72]	; 0xffffffb8
   1742c:	str	r3, [fp, #-60]	; 0xffffffc4
   17430:	movne	r3, #0
   17434:	str	r1, [fp, #-68]	; 0xffffffbc
   17438:	strne	r3, [fp, #-124]	; 0xffffff84
   1743c:	bne	17474 <argp_failure@@Base+0x3bc>
   17440:	ldr	r1, [r5, #4]
   17444:	cmp	r1, #0
   17448:	beq	17474 <argp_failure@@Base+0x3bc>
   1744c:	add	r3, r4, #24
   17450:	ldr	ip, [r3, #-24]	; 0xffffffe8
   17454:	cmp	ip, #0
   17458:	beq	17468 <argp_failure@@Base+0x3b0>
   1745c:	ldr	ip, [r3, #-12]
   17460:	tst	ip, #2
   17464:	beq	180c0 <argp_failure@@Base+0x1008>
   17468:	subs	r1, r1, #1
   1746c:	add	r3, r3, #24
   17470:	bne	17450 <argp_failure@@Base+0x398>
   17474:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17478:	cmp	r2, r0
   1747c:	ldr	r6, [r3, #8]
   17480:	bhi	17ffc <argp_failure@@Base+0xf44>
   17484:	str	r6, [r7, #12]
   17488:	ldr	sl, [r5, #4]
   1748c:	cmp	sl, #0
   17490:	movne	r6, r4
   17494:	strne	r5, [fp, #-132]	; 0xffffff7c
   17498:	movne	r5, r4
   1749c:	movne	r4, r9
   174a0:	beq	174f8 <argp_failure@@Base+0x440>
   174a4:	ldr	r9, [r6, #12]
   174a8:	tst	r9, #8
   174ac:	bne	174e4 <argp_failure@@Base+0x42c>
   174b0:	ldr	r8, [r6, #4]
   174b4:	sub	r2, r8, #1
   174b8:	cmp	r2, #254	; 0xfe
   174bc:	bhi	174e4 <argp_failure@@Base+0x42c>
   174c0:	bl	11250 <__ctype_b_loc@plt>
   174c4:	ldr	r1, [r0]
   174c8:	lsl	r2, r8, #1
   174cc:	ldrh	r2, [r1, r2]
   174d0:	tst	r2, #16384	; 0x4000
   174d4:	beq	174e4 <argp_failure@@Base+0x42c>
   174d8:	ldrb	r2, [r4]
   174dc:	cmp	r8, r2
   174e0:	beq	17c28 <argp_failure@@Base+0xb70>
   174e4:	subs	sl, sl, #1
   174e8:	add	r6, r6, #24
   174ec:	bne	174a4 <argp_failure@@Base+0x3ec>
   174f0:	mov	r4, r5
   174f4:	ldr	r5, [fp, #-132]	; 0xffffff7c
   174f8:	ldr	r2, [r4, #12]
   174fc:	ldr	r1, [r7, #24]
   17500:	ldr	r3, [r7, #28]
   17504:	tst	r2, #8
   17508:	ldr	r2, [r7, #16]
   1750c:	sub	r3, r3, r1
   17510:	beq	17d18 <argp_failure@@Base+0xc60>
   17514:	cmp	r3, r2
   17518:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1751c:	ldr	r6, [r3, #16]
   17520:	bhi	180fc <argp_failure@@Base+0x1044>
   17524:	str	r6, [r7, #12]
   17528:	ldr	r8, [r5, #4]
   1752c:	cmp	r8, #0
   17530:	addne	r6, r4, #24
   17534:	bne	17548 <argp_failure@@Base+0x490>
   17538:	b	175d8 <argp_failure@@Base+0x520>
   1753c:	subs	r8, r8, #1
   17540:	add	r6, r6, #24
   17544:	beq	175d8 <argp_failure@@Base+0x520>
   17548:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1754c:	cmp	r3, #0
   17550:	beq	1753c <argp_failure@@Base+0x484>
   17554:	ldr	r3, [r6, #-12]
   17558:	tst	r3, #2
   1755c:	bne	1753c <argp_failure@@Base+0x484>
   17560:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17564:	sub	r1, fp, #76	; 0x4c
   17568:	ldr	r0, [r3, #16]
   1756c:	bl	16938 <_obstack_memory_used@@Base+0x22e0>
   17570:	ldr	sl, [r6, #-24]	; 0xffffffe8
   17574:	mov	r0, sl
   17578:	bl	11268 <strlen@plt>
   1757c:	subs	r9, r0, #0
   17580:	beq	1753c <argp_failure@@Base+0x484>
   17584:	ldr	ip, [r7, #28]
   17588:	mov	r1, r9
   1758c:	mov	r0, r7
   17590:	ldr	lr, [r7, #32]
   17594:	add	r2, ip, r9
   17598:	cmp	lr, r2
   1759c:	bcs	175b0 <argp_failure@@Base+0x4f8>
   175a0:	bl	19ab8 <argp_error@@Base+0x1500>
   175a4:	cmp	r0, #0
   175a8:	beq	1753c <argp_failure@@Base+0x484>
   175ac:	ldr	ip, [r7, #28]
   175b0:	mov	r2, r9
   175b4:	mov	r1, sl
   175b8:	mov	r0, ip
   175bc:	add	r6, r6, #24
   175c0:	bl	11160 <memcpy@plt>
   175c4:	ldr	r2, [r7, #28]
   175c8:	subs	r8, r8, #1
   175cc:	add	r3, r2, r9
   175d0:	str	r3, [r7, #28]
   175d4:	bne	17548 <argp_failure@@Base+0x490>
   175d8:	ldr	r2, [r7, #16]
   175dc:	ldr	r1, [r7, #24]
   175e0:	ldr	r3, [r7, #28]
   175e4:	sub	r3, r3, r1
   175e8:	cmp	r3, r2
   175ec:	bhi	17ff0 <argp_failure@@Base+0xf38>
   175f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   175f4:	mov	r2, #0
   175f8:	str	r2, [r7, #4]
   175fc:	cmp	r3, r2
   17600:	beq	17c38 <argp_failure@@Base+0xb80>
   17604:	ldr	r3, [r4, #12]
   17608:	tst	r3, #8
   1760c:	bne	17638 <argp_failure@@Base+0x580>
   17610:	ldr	r6, [r4, #4]
   17614:	sub	r3, r6, #1
   17618:	cmp	r3, #254	; 0xfe
   1761c:	bhi	17638 <argp_failure@@Base+0x580>
   17620:	bl	11250 <__ctype_b_loc@plt>
   17624:	ldr	r3, [r0]
   17628:	lsl	r6, r6, #1
   1762c:	ldrh	r3, [r3, r6]
   17630:	tst	r3, #16384	; 0x4000
   17634:	bne	17644 <argp_failure@@Base+0x58c>
   17638:	ldr	r3, [r4]
   1763c:	cmp	r3, #0
   17640:	beq	1812c <argp_failure@@Base+0x1074>
   17644:	ldr	r2, [r7, #16]
   17648:	ldr	r1, [r7, #24]
   1764c:	ldr	r3, [r7, #28]
   17650:	sub	r3, r3, r1
   17654:	cmp	r3, r2
   17658:	bhi	17fbc <argp_failure@@Base+0xf04>
   1765c:	ldr	r3, [fp, #-120]	; 0xffffff88
   17660:	str	r3, [r7, #4]
   17664:	ldr	r3, [fp, #-112]	; 0xffffff90
   17668:	add	r5, r5, #28
   1766c:	subs	r3, r3, #1
   17670:	str	r3, [fp, #-112]	; 0xffffff90
   17674:	ldr	r3, [fp, #-116]	; 0xffffff8c
   17678:	str	r3, [r7, #12]
   1767c:	bne	173d0 <argp_failure@@Base+0x318>
   17680:	ldr	r8, [fp, #-96]	; 0xffffffa0
   17684:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17688:	cmp	r3, #0
   1768c:	beq	17708 <argp_failure@@Base+0x650>
   17690:	ldr	r3, [r8, #4]
   17694:	cmp	r3, #0
   17698:	beq	17708 <argp_failure@@Base+0x650>
   1769c:	ldr	ip, [fp, #-104]	; 0xffffff98
   176a0:	cmp	ip, #0
   176a4:	beq	1846c <argp_failure@@Base+0x13b4>
   176a8:	ldr	r2, [ip]
   176ac:	cmp	r2, #0
   176b0:	beq	183dc <argp_failure@@Base+0x1324>
   176b4:	ldr	r3, [r2, #20]
   176b8:	cmp	r3, #0
   176bc:	beq	183dc <argp_failure@@Base+0x1324>
   176c0:	movw	r5, #49548	; 0xc18c
   176c4:	movt	r5, #1
   176c8:	mov	r0, r5
   176cc:	mov	r1, #5
   176d0:	movt	r1, #512	; 0x200
   176d4:	mov	r3, ip
   176d8:	bl	154d8 <_obstack_memory_used@@Base+0xe80>
   176dc:	subs	r4, r0, #0
   176e0:	beq	17708 <argp_failure@@Base+0x650>
   176e4:	ldrb	r3, [r4]
   176e8:	subs	r5, r4, r5
   176ec:	movne	r5, #1
   176f0:	cmp	r3, #0
   176f4:	bne	183e8 <argp_failure@@Base+0x1330>
   176f8:	cmp	r5, #0
   176fc:	beq	17708 <argp_failure@@Base+0x650>
   17700:	mov	r0, r4
   17704:	bl	141a4 <argp_parse@@Base+0xfe4>
   17708:	mov	r4, #1
   1770c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17710:	tst	r3, #32
   17714:	bne	17bc8 <argp_failure@@Base+0xb10>
   17718:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1771c:	tst	r3, #64	; 0x40
   17720:	beq	17750 <argp_failure@@Base+0x698>
   17724:	movw	r5, #2364	; 0x93c
   17728:	movt	r5, #3
   1772c:	ldr	r2, [r5]
   17730:	cmp	r2, #0
   17734:	beq	17750 <argp_failure@@Base+0x698>
   17738:	cmp	r4, #0
   1773c:	bne	17c00 <argp_failure@@Base+0xb48>
   17740:	movw	r1, #49988	; 0xc344
   17744:	movt	r1, #1
   17748:	mov	r0, r7
   1774c:	bl	19ad8 <argp_error@@Base+0x1520>
   17750:	ldr	r0, [fp, #-128]	; 0xffffff80
   17754:	bl	111b4 <funlockfile@plt>
   17758:	ldr	r3, [fp, #-136]	; 0xffffff78
   1775c:	cmp	r3, #0
   17760:	beq	1776c <argp_failure@@Base+0x6b4>
   17764:	mov	r0, r3
   17768:	bl	15184 <_obstack_memory_used@@Base+0xb2c>
   1776c:	mov	r0, r7
   17770:	bl	19988 <argp_error@@Base+0x13d0>
   17774:	sub	sp, fp, #32
   17778:	ldrd	r4, [sp]
   1777c:	ldrd	r6, [sp, #8]
   17780:	ldrd	r8, [sp, #16]
   17784:	ldrd	sl, [sp, #24]
   17788:	add	sp, sp, #32
   1778c:	pop	{pc}		; (ldr pc, [sp], #4)
   17790:	movw	r0, #49664	; 0xc200
   17794:	movt	r0, #1
   17798:	bl	111f0 <getenv@plt>
   1779c:	subs	r5, r0, #0
   177a0:	ldrd	r2, [r8]
   177a4:	sub	ip, fp, #76	; 0x4c
   177a8:	ldrd	r0, [r8, #8]
   177ac:	str	ip, [fp, #-96]	; 0xffffffa0
   177b0:	ldrd	r6, [r8, #16]
   177b4:	strd	r2, [fp, #-76]	; 0xffffffb4
   177b8:	ldrd	r2, [r8, #24]
   177bc:	strd	r0, [fp, #-68]	; 0xffffffbc
   177c0:	ldrd	r0, [r8, #32]
   177c4:	strd	r6, [fp, #-60]	; 0xffffffc4
   177c8:	strd	r2, [fp, #-52]	; 0xffffffcc
   177cc:	strd	r0, [fp, #-44]	; 0xffffffd4
   177d0:	beq	17320 <argp_failure@@Base+0x268>
   177d4:	ldrb	sl, [r5]
   177d8:	movw	r3, #49728	; 0xc240
   177dc:	movt	r3, #1
   177e0:	ldr	r9, [pc, #3300]	; 184cc <argp_failure@@Base+0x1414>
   177e4:	str	r3, [fp, #-116]	; 0xffffff8c
   177e8:	movw	r3, #49680	; 0xc210
   177ec:	movt	r3, #1
   177f0:	str	r3, [fp, #-120]	; 0xffffff88
   177f4:	cmp	sl, #0
   177f8:	beq	17830 <argp_failure@@Base+0x778>
   177fc:	bl	11250 <__ctype_b_loc@plt>
   17800:	mov	r7, r0
   17804:	ldr	r1, [r0]
   17808:	b	17810 <argp_failure@@Base+0x758>
   1780c:	ldrb	sl, [r5, #1]!
   17810:	lsl	r3, sl, #1
   17814:	ldrh	r6, [r1, r3]
   17818:	tst	r6, #8192	; 0x2000
   1781c:	bne	1780c <argp_failure@@Base+0x754>
   17820:	ands	r2, r6, #1024	; 0x400
   17824:	bne	17e94 <argp_failure@@Base+0xddc>
   17828:	cmp	sl, #0
   1782c:	bne	182bc <argp_failure@@Base+0x1204>
   17830:	ldr	r1, [pc, #3224]	; 184d0 <argp_failure@@Base+0x1418>
   17834:	ldr	lr, [fp, #-44]	; 0xffffffd4
   17838:	add	r3, r1, #16
   1783c:	cmp	r3, r9
   17840:	mov	r1, r3
   17844:	beq	18198 <argp_failure@@Base+0x10e0>
   17848:	ldrb	r2, [r3, #14]
   1784c:	cmp	r2, #0
   17850:	bne	17838 <argp_failure@@Base+0x780>
   17854:	ldrb	r0, [r3, #15]
   17858:	sub	ip, fp, #36	; 0x24
   1785c:	cmp	r0, #32
   17860:	add	ip, ip, r0
   17864:	beq	17838 <argp_failure@@Base+0x780>
   17868:	ldr	r0, [ip, #-40]	; 0xffffffd8
   1786c:	cmp	r0, lr
   17870:	blt	17838 <argp_failure@@Base+0x780>
   17874:	movw	r0, #49852	; 0xc2bc
   17878:	movt	r0, #1
   1787c:	mov	r1, r2
   17880:	stm	sp, {r0, r3}
   17884:	movw	r3, #49800	; 0xc288
   17888:	movt	r3, #1
   1788c:	ldr	r0, [fp, #-104]	; 0xffffff98
   17890:	bl	170b8 <argp_failure@@Base>
   17894:	b	17320 <argp_failure@@Base+0x268>
   17898:	ldr	r3, [fp, #4]
   1789c:	movw	r1, #49900	; 0xc2ec
   178a0:	movt	r1, #1
   178a4:	mov	r0, r7
   178a8:	mov	r2, r3
   178ac:	bl	19ad8 <argp_error@@Base+0x1520>
   178b0:	cmp	r5, #0
   178b4:	beq	17708 <argp_failure@@Base+0x650>
   178b8:	ldr	r3, [fp, #-136]	; 0xffffff78
   178bc:	ldr	r3, [r3, #4]
   178c0:	cmp	r3, #0
   178c4:	beq	17708 <argp_failure@@Base+0x650>
   178c8:	ldr	r3, [r7, #28]
   178cc:	ldr	r2, [r7, #32]
   178d0:	cmp	r3, r2
   178d4:	bcs	18324 <argp_failure@@Base+0x126c>
   178d8:	add	r1, r3, #1
   178dc:	mov	r2, #10
   178e0:	str	r1, [r7, #28]
   178e4:	strb	r2, [r3]
   178e8:	ldr	r3, [fp, #-136]	; 0xffffff78
   178ec:	ldr	r3, [r3, #4]
   178f0:	str	r3, [fp, #-112]	; 0xffffff90
   178f4:	mov	r3, #0
   178f8:	ldr	r2, [fp, #-112]	; 0xffffff90
   178fc:	cmp	r2, r3
   17900:	ldr	r2, [fp, #-136]	; 0xffffff78
   17904:	ldr	r2, [r2]
   17908:	str	r3, [fp, #-88]	; 0xffffffa8
   1790c:	str	r3, [fp, #-84]	; 0xffffffac
   17910:	str	r3, [fp, #-80]	; 0xffffffb0
   17914:	bne	173b0 <argp_failure@@Base+0x2f8>
   17918:	b	17708 <argp_failure@@Base+0x650>
   1791c:	mov	r0, #1
   17920:	mov	r3, #0
   17924:	ldr	r1, [fp, #-104]	; 0xffffff98
   17928:	mov	r2, r3
   1792c:	stm	sp, {r0, r7}
   17930:	ldr	r0, [fp, #-108]	; 0xffffff94
   17934:	bl	16ae8 <_obstack_memory_used@@Base+0x2490>
   17938:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1793c:	orr	r4, r4, r0
   17940:	tst	r3, #4
   17944:	and	r5, r3, #8
   17948:	beq	17374 <argp_failure@@Base+0x2bc>
   1794c:	b	17898 <argp_failure@@Base+0x7e0>
   17950:	ldr	r3, [fp, #-108]	; 0xffffff94
   17954:	movw	r2, #49876	; 0xc2d4
   17958:	movt	r2, #1
   1795c:	movw	sl, #49868	; 0xc2cc
   17960:	movt	sl, #1
   17964:	str	r2, [fp, #-120]	; 0xffffff88
   17968:	mov	r4, #1
   1796c:	ldr	r0, [r3, #8]
   17970:	ldr	r1, [r3, #16]
   17974:	movw	r3, #49860	; 0xc2c4
   17978:	movt	r3, #1
   1797c:	str	r3, [fp, #-124]	; 0xffffff84
   17980:	bl	1546c <_obstack_memory_used@@Base+0xe14>
   17984:	add	r3, r0, #7
   17988:	mov	r2, r0
   1798c:	bic	r3, r3, #7
   17990:	mov	r1, #0
   17994:	sub	sp, sp, r3
   17998:	add	r9, sp, #8
   1799c:	mov	r0, r9
   179a0:	bl	112b0 <memset@plt>
   179a4:	sub	r3, fp, #76	; 0x4c
   179a8:	str	sl, [fp, #-116]	; 0xffffff8c
   179ac:	str	r9, [fp, #-112]	; 0xffffff90
   179b0:	str	r3, [fp, #-96]	; 0xffffffa0
   179b4:	ldr	r9, [fp, #-136]	; 0xffffff78
   179b8:	ldr	sl, [fp, #-100]	; 0xffffff9c
   179bc:	b	17a98 <argp_failure@@Base+0x9e0>
   179c0:	cmp	r4, #0
   179c4:	mov	r0, r7
   179c8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   179cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   179d0:	ldrne	r2, [fp, #-124]	; 0xffffff84
   179d4:	ldreq	r2, [fp, #-120]	; 0xffffff88
   179d8:	ldr	r4, [r7, #12]
   179dc:	str	r5, [r7, #12]
   179e0:	str	r3, [fp, #-76]	; 0xffffffb4
   179e4:	ldr	r3, [fp, #4]
   179e8:	bl	19ad8 <argp_error@@Base+0x1520>
   179ec:	ldr	r2, [r7, #16]
   179f0:	ldr	r1, [r7, #24]
   179f4:	ldr	r3, [r7, #28]
   179f8:	ldr	r5, [r8, #28]
   179fc:	sub	r3, r3, r1
   17a00:	cmp	r3, r2
   17a04:	bhi	17bbc <argp_failure@@Base+0xb04>
   17a08:	tst	sl, #2
   17a0c:	ldr	r6, [r7, #4]
   17a10:	str	r5, [r7, #4]
   17a14:	beq	17ba8 <argp_failure@@Base+0xaf0>
   17a18:	ldr	r3, [r9, #4]
   17a1c:	cmp	r3, #0
   17a20:	bne	18140 <argp_failure@@Base+0x1088>
   17a24:	mov	r3, #1
   17a28:	str	r7, [sp]
   17a2c:	ldrd	r0, [fp, #-108]	; 0xffffff94
   17a30:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17a34:	bl	1648c <_obstack_memory_used@@Base+0x1e34>
   17a38:	ldr	r1, [r7, #16]
   17a3c:	mov	r5, r0
   17a40:	ldrd	r2, [r7, #24]
   17a44:	sub	r2, r3, r2
   17a48:	cmp	r2, r1
   17a4c:	strls	r4, [r7, #12]
   17a50:	bhi	17b78 <argp_failure@@Base+0xac0>
   17a54:	ldr	r2, [r7, #32]
   17a58:	str	r6, [r7, #4]
   17a5c:	cmp	r2, r3
   17a60:	bhi	17a7c <argp_failure@@Base+0x9c4>
   17a64:	mov	r1, #1
   17a68:	mov	r0, r7
   17a6c:	bl	19ab8 <argp_error@@Base+0x1500>
   17a70:	cmp	r0, #0
   17a74:	beq	17a8c <argp_failure@@Base+0x9d4>
   17a78:	ldr	r3, [r7, #28]
   17a7c:	add	r1, r3, #1
   17a80:	mov	r2, #10
   17a84:	str	r1, [r7, #28]
   17a88:	strb	r2, [r3]
   17a8c:	cmp	r5, #0
   17a90:	mov	r4, #0
   17a94:	beq	17be8 <argp_failure@@Base+0xb30>
   17a98:	ldr	r2, [r7, #16]
   17a9c:	ldr	r1, [r7, #24]
   17aa0:	ldr	r3, [r7, #28]
   17aa4:	ldr	r5, [r8, #28]
   17aa8:	sub	r3, r3, r1
   17aac:	cmp	r3, r2
   17ab0:	bls	179c0 <argp_failure@@Base+0x908>
   17ab4:	mov	r0, r7
   17ab8:	bl	1944c <argp_error@@Base+0xe94>
   17abc:	b	179c0 <argp_failure@@Base+0x908>
   17ac0:	mov	r1, #0
   17ac4:	ldr	r0, [fp, #-108]	; 0xffffff94
   17ac8:	bl	15520 <_obstack_memory_used@@Base+0xec8>
   17acc:	ldr	r5, [r0]
   17ad0:	mov	r6, r0
   17ad4:	movw	r2, #47952	; 0xbb50
   17ad8:	movt	r2, #1
   17adc:	ldr	r4, [r0, #4]
   17ae0:	str	r6, [fp, #-136]	; 0xffffff78
   17ae4:	mov	r0, r5
   17ae8:	mov	r1, r4
   17aec:	bl	153c8 <_obstack_memory_used@@Base+0xd70>
   17af0:	cmp	r0, #0
   17af4:	beq	17b04 <argp_failure@@Base+0xa4c>
   17af8:	mvn	r3, #0
   17afc:	str	r3, [r0, #12]
   17b00:	ldr	r4, [r6, #4]
   17b04:	movw	r2, #47920	; 0xbb30
   17b08:	movt	r2, #1
   17b0c:	mov	r1, r4
   17b10:	mov	r0, r5
   17b14:	bl	153c8 <_obstack_memory_used@@Base+0xd70>
   17b18:	cmp	r0, #0
   17b1c:	beq	17b30 <argp_failure@@Base+0xa78>
   17b20:	mvn	r3, #0
   17b24:	str	r3, [r0, #12]
   17b28:	ldr	r3, [fp, #-136]	; 0xffffff78
   17b2c:	ldr	r4, [r3, #4]
   17b30:	cmp	r4, #0
   17b34:	beq	1734c <argp_failure@@Base+0x294>
   17b38:	mov	r3, r5
   17b3c:	mov	r1, #0
   17b40:	str	r1, [r3, #24]
   17b44:	add	r1, r1, #1
   17b48:	add	r3, r3, #28
   17b4c:	cmp	r1, r4
   17b50:	bne	17b40 <argp_failure@@Base+0xa88>
   17b54:	mov	r0, r5
   17b58:	movw	r3, #24268	; 0x5ecc
   17b5c:	movt	r3, #1
   17b60:	mov	r2, #28
   17b64:	bl	11334 <qsort@plt>
   17b68:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17b6c:	ands	r4, r3, #3
   17b70:	beq	17358 <argp_failure@@Base+0x2a0>
   17b74:	b	17950 <argp_failure@@Base+0x898>
   17b78:	mov	r0, r7
   17b7c:	bl	1944c <argp_error@@Base+0xe94>
   17b80:	ldr	r1, [r7, #16]
   17b84:	str	r4, [r7, #12]
   17b88:	ldrd	r2, [r7, #24]
   17b8c:	sub	r2, r3, r2
   17b90:	cmp	r2, r1
   17b94:	bls	17a54 <argp_failure@@Base+0x99c>
   17b98:	mov	r0, r7
   17b9c:	bl	1944c <argp_error@@Base+0xe94>
   17ba0:	ldr	r3, [r7, #28]
   17ba4:	b	17a54 <argp_failure@@Base+0x99c>
   17ba8:	mov	r1, r7
   17bac:	mov	r0, r9
   17bb0:	orr	sl, sl, #2
   17bb4:	bl	15ce8 <_obstack_memory_used@@Base+0x1690>
   17bb8:	b	17a24 <argp_failure@@Base+0x96c>
   17bbc:	mov	r0, r7
   17bc0:	bl	1944c <argp_error@@Base+0xe94>
   17bc4:	b	17a08 <argp_failure@@Base+0x950>
   17bc8:	mov	r2, #0
   17bcc:	mov	r3, r4
   17bd0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   17bd4:	stm	sp, {r2, r7}
   17bd8:	mov	r2, #1
   17bdc:	bl	16ae8 <_obstack_memory_used@@Base+0x2490>
   17be0:	orr	r4, r4, r0
   17be4:	b	17718 <argp_failure@@Base+0x660>
   17be8:	str	sl, [fp, #-100]	; 0xffffff9c
   17bec:	mov	r4, #1
   17bf0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17bf4:	tst	r3, #16
   17bf8:	beq	17364 <argp_failure@@Base+0x2ac>
   17bfc:	b	1791c <argp_failure@@Base+0x864>
   17c00:	ldr	r3, [r7, #28]
   17c04:	ldr	r2, [r7, #32]
   17c08:	cmp	r3, r2
   17c0c:	bcs	182f4 <argp_failure@@Base+0x123c>
   17c10:	add	r1, r3, #1
   17c14:	mov	r2, #10
   17c18:	str	r1, [r7, #28]
   17c1c:	strb	r2, [r3]
   17c20:	ldr	r2, [r5]
   17c24:	b	17740 <argp_failure@@Base+0x688>
   17c28:	tst	r9, #2
   17c2c:	beq	18010 <argp_failure@@Base+0xf58>
   17c30:	add	r4, r4, #1
   17c34:	b	174e4 <argp_failure@@Base+0x42c>
   17c38:	ldr	r2, [r5, #20]
   17c3c:	ldr	r6, [r4, #16]
   17c40:	cmp	r2, #0
   17c44:	beq	18008 <argp_failure@@Base+0xf50>
   17c48:	ldr	r3, [r2, #20]
   17c4c:	cmp	r3, #0
   17c50:	beq	18008 <argp_failure@@Base+0xf50>
   17c54:	mov	r0, r6
   17c58:	ldr	r3, [fp, #-104]	; 0xffffff98
   17c5c:	ldr	r1, [r4, #4]
   17c60:	bl	154d8 <_obstack_memory_used@@Base+0xe80>
   17c64:	mov	r4, r0
   17c68:	cmp	r4, #0
   17c6c:	beq	17e3c <argp_failure@@Base+0xd84>
   17c70:	ldrb	r3, [r4]
   17c74:	cmp	r3, #0
   17c78:	beq	17e2c <argp_failure@@Base+0xd74>
   17c7c:	ldr	r2, [r7, #16]
   17c80:	ldr	r1, [r7, #24]
   17c84:	ldr	r3, [r7, #28]
   17c88:	sub	r3, r3, r1
   17c8c:	cmp	r3, r2
   17c90:	bhi	18244 <argp_failure@@Base+0x118c>
   17c94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17c98:	ldr	r9, [r7, #20]
   17c9c:	ldr	r8, [r3, #20]
   17ca0:	bic	r9, r9, r9, asr #31
   17ca4:	mov	sl, r8
   17ca8:	str	r8, [r7, #4]
   17cac:	add	r3, r8, #3
   17cb0:	str	sl, [r7, #12]
   17cb4:	cmp	r3, r9
   17cb8:	bcc	18220 <argp_failure@@Base+0x1168>
   17cbc:	cmp	r8, r9
   17cc0:	bhi	17dcc <argp_failure@@Base+0xd14>
   17cc4:	ldr	r3, [r7, #28]
   17cc8:	ldr	r1, [r7, #32]
   17ccc:	add	r2, r3, #3
   17cd0:	cmp	r1, r2
   17cd4:	bcs	17cf0 <argp_failure@@Base+0xc38>
   17cd8:	mov	r1, #3
   17cdc:	mov	r0, r7
   17ce0:	bl	19ab8 <argp_error@@Base+0x1500>
   17ce4:	cmp	r0, #0
   17ce8:	beq	17dd8 <argp_failure@@Base+0xd20>
   17cec:	ldr	r3, [r7, #28]
   17cf0:	movw	r2, #49984	; 0xc340
   17cf4:	movt	r2, #1
   17cf8:	ldrh	r1, [r2]
   17cfc:	ldrb	r2, [r2, #2]
   17d00:	strh	r1, [r3]
   17d04:	strb	r2, [r3, #2]
   17d08:	ldr	r3, [r7, #28]
   17d0c:	add	r3, r3, #3
   17d10:	str	r3, [r7, #28]
   17d14:	b	17dd8 <argp_failure@@Base+0xd20>
   17d18:	cmp	r3, r2
   17d1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d20:	ldr	r6, [r3, #12]
   17d24:	bhi	180e0 <argp_failure@@Base+0x1028>
   17d28:	str	r6, [r7, #12]
   17d2c:	ldr	sl, [r5, #4]
   17d30:	cmp	sl, #0
   17d34:	beq	175d8 <argp_failure@@Base+0x520>
   17d38:	movw	r3, #49972	; 0xc334
   17d3c:	movt	r3, #1
   17d40:	movw	r8, #49964	; 0xc32c
   17d44:	movt	r8, #1
   17d48:	movw	r9, #49980	; 0xc33c
   17d4c:	movt	r9, #1
   17d50:	str	r3, [fp, #-124]	; 0xffffff84
   17d54:	add	r6, r4, #24
   17d58:	b	17d68 <argp_failure@@Base+0xcb0>
   17d5c:	subs	sl, sl, #1
   17d60:	add	r6, r6, #24
   17d64:	beq	175d8 <argp_failure@@Base+0x520>
   17d68:	ldr	r3, [r6, #-24]	; 0xffffffe8
   17d6c:	cmp	r3, #0
   17d70:	beq	17d5c <argp_failure@@Base+0xca4>
   17d74:	ldr	r3, [r6, #-12]
   17d78:	tst	r3, #2
   17d7c:	bne	17d5c <argp_failure@@Base+0xca4>
   17d80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d84:	sub	r1, fp, #76	; 0x4c
   17d88:	ldr	r0, [r3, #12]
   17d8c:	bl	16938 <_obstack_memory_used@@Base+0x22e0>
   17d90:	mov	r1, r8
   17d94:	mov	r0, r7
   17d98:	ldr	r2, [r6, #-24]	; 0xffffffe8
   17d9c:	bl	19ad8 <argp_error@@Base+0x1520>
   17da0:	ldr	r3, [r4, #8]
   17da4:	cmp	r3, #0
   17da8:	beq	17d5c <argp_failure@@Base+0xca4>
   17dac:	ldr	ip, [r4, #12]
   17db0:	mov	r1, r9
   17db4:	mov	r2, r3
   17db8:	mov	r0, r7
   17dbc:	tst	ip, #1
   17dc0:	ldrne	r1, [fp, #-124]	; 0xffffff84
   17dc4:	bl	19ad8 <argp_error@@Base+0x1520>
   17dc8:	b	17d5c <argp_failure@@Base+0xca4>
   17dcc:	mov	r1, r8
   17dd0:	mov	r0, r7
   17dd4:	bl	16270 <_obstack_memory_used@@Base+0x1c18>
   17dd8:	mov	r0, r4
   17ddc:	bl	11268 <strlen@plt>
   17de0:	subs	r8, r0, #0
   17de4:	beq	17e2c <argp_failure@@Base+0xd74>
   17de8:	ldr	r0, [r7, #28]
   17dec:	ldr	r2, [r7, #32]
   17df0:	add	r3, r0, r8
   17df4:	cmp	r2, r3
   17df8:	bcs	17e14 <argp_failure@@Base+0xd5c>
   17dfc:	mov	r1, r8
   17e00:	mov	r0, r7
   17e04:	bl	19ab8 <argp_error@@Base+0x1500>
   17e08:	cmp	r0, #0
   17e0c:	beq	17e2c <argp_failure@@Base+0xd74>
   17e10:	ldr	r0, [r7, #28]
   17e14:	mov	r2, r8
   17e18:	mov	r1, r4
   17e1c:	bl	11160 <memcpy@plt>
   17e20:	ldr	r3, [r7, #28]
   17e24:	add	r8, r3, r8
   17e28:	str	r8, [r7, #28]
   17e2c:	cmp	r6, r4
   17e30:	beq	17e3c <argp_failure@@Base+0xd84>
   17e34:	mov	r0, r4
   17e38:	bl	141a4 <argp_parse@@Base+0xfe4>
   17e3c:	ldr	r1, [r7, #16]
   17e40:	ldrd	r2, [r7, #24]
   17e44:	sub	r2, r3, r2
   17e48:	cmp	r2, r1
   17e4c:	bhi	180ec <argp_failure@@Base+0x1034>
   17e50:	mov	r2, #0
   17e54:	str	r2, [r7, #4]
   17e58:	ldr	r2, [r7, #32]
   17e5c:	cmp	r2, r3
   17e60:	bhi	17e7c <argp_failure@@Base+0xdc4>
   17e64:	mov	r1, #1
   17e68:	mov	r0, r7
   17e6c:	bl	19ab8 <argp_error@@Base+0x1500>
   17e70:	cmp	r0, #0
   17e74:	beq	17e8c <argp_failure@@Base+0xdd4>
   17e78:	ldr	r3, [r7, #28]
   17e7c:	add	r1, r3, #1
   17e80:	mov	r2, #10
   17e84:	str	r1, [r7, #28]
   17e88:	strb	r2, [r3]
   17e8c:	str	r5, [fp, #-88]	; 0xffffffa8
   17e90:	b	17644 <argp_failure@@Base+0x58c>
   17e94:	cmp	sl, #95	; 0x5f
   17e98:	cmpne	sl, #45	; 0x2d
   17e9c:	ubfx	r6, r6, #3, #1
   17ea0:	moveq	r3, #1
   17ea4:	movne	r3, #0
   17ea8:	orrs	r6, r3, r6
   17eac:	beq	183d0 <argp_failure@@Base+0x1318>
   17eb0:	mov	r4, r5
   17eb4:	ldrb	r3, [r4, #1]!
   17eb8:	lsl	r2, r3, #1
   17ebc:	cmp	r3, #45	; 0x2d
   17ec0:	cmpne	r3, #95	; 0x5f
   17ec4:	moveq	ip, #1
   17ec8:	movne	ip, #0
   17ecc:	ldrh	r2, [r1, r2]
   17ed0:	ubfx	r0, r2, #3, #1
   17ed4:	orrs	r0, ip, r0
   17ed8:	bne	17eb4 <argp_failure@@Base+0xdfc>
   17edc:	tst	r2, #8192	; 0x2000
   17ee0:	sub	r6, r4, r5
   17ee4:	beq	17efc <argp_failure@@Base+0xe44>
   17ee8:	ldrb	r3, [r4, #1]!
   17eec:	lsl	r2, r3, #1
   17ef0:	ldrh	r2, [r1, r2]
   17ef4:	tst	r2, #8192	; 0x2000
   17ef8:	bne	17ee8 <argp_failure@@Base+0xe30>
   17efc:	cmp	r3, #44	; 0x2c
   17f00:	cmpne	r3, #0
   17f04:	beq	180cc <argp_failure@@Base+0x1014>
   17f08:	cmp	r3, #61	; 0x3d
   17f0c:	beq	18340 <argp_failure@@Base+0x1288>
   17f10:	ldrb	r3, [r4]
   17f14:	lsl	r3, r3, #1
   17f18:	ldrh	r3, [r1, r3]
   17f1c:	ands	r3, r3, #2048	; 0x800
   17f20:	moveq	r7, r3
   17f24:	streq	r7, [fp, #-112]	; 0xffffff90
   17f28:	bne	18370 <argp_failure@@Base+0x12b8>
   17f2c:	ldr	sl, [pc, #1436]	; 184d0 <argp_failure@@Base+0x1418>
   17f30:	b	17f40 <argp_failure@@Base+0xe88>
   17f34:	add	sl, sl, #16
   17f38:	cmp	sl, r9
   17f3c:	beq	181d0 <argp_failure@@Base+0x1118>
   17f40:	mov	r0, sl
   17f44:	bl	11268 <strlen@plt>
   17f48:	cmp	r0, r6
   17f4c:	bne	17f34 <argp_failure@@Base+0xe7c>
   17f50:	mov	r2, r6
   17f54:	mov	r1, sl
   17f58:	mov	r0, r5
   17f5c:	bl	11388 <strncmp@plt>
   17f60:	cmp	r0, #0
   17f64:	bne	17f34 <argp_failure@@Base+0xe7c>
   17f68:	cmp	r7, #0
   17f6c:	bne	18310 <argp_failure@@Base+0x1258>
   17f70:	ldrb	r3, [sl, #15]
   17f74:	sub	r2, fp, #36	; 0x24
   17f78:	add	r3, r2, r3
   17f7c:	ldr	r2, [fp, #-112]	; 0xffffff90
   17f80:	str	r2, [r3, #-40]	; 0xffffffd8
   17f84:	ldrb	sl, [r4]
   17f88:	cmp	sl, #44	; 0x2c
   17f8c:	movne	r5, r4
   17f90:	bne	177f4 <argp_failure@@Base+0x73c>
   17f94:	add	r5, r4, #1
   17f98:	ldrb	sl, [r4, #1]
   17f9c:	b	177f4 <argp_failure@@Base+0x73c>
   17fa0:	mov	r0, r7
   17fa4:	bl	1944c <argp_error@@Base+0xe94>
   17fa8:	ldr	r0, [r7, #16]
   17fac:	ldr	r3, [r7, #24]
   17fb0:	ldr	r2, [r7, #28]
   17fb4:	sub	r2, r2, r3
   17fb8:	b	173f0 <argp_failure@@Base+0x338>
   17fbc:	mov	r0, r7
   17fc0:	bl	1944c <argp_error@@Base+0xe94>
   17fc4:	ldr	r3, [fp, #-120]	; 0xffffff88
   17fc8:	ldr	r2, [r7, #16]
   17fcc:	ldr	r1, [r7, #24]
   17fd0:	str	r3, [r7, #4]
   17fd4:	ldr	r3, [r7, #28]
   17fd8:	sub	r3, r3, r1
   17fdc:	cmp	r3, r2
   17fe0:	bls	17664 <argp_failure@@Base+0x5ac>
   17fe4:	mov	r0, r7
   17fe8:	bl	1944c <argp_error@@Base+0xe94>
   17fec:	b	17664 <argp_failure@@Base+0x5ac>
   17ff0:	mov	r0, r7
   17ff4:	bl	1944c <argp_error@@Base+0xe94>
   17ff8:	b	175f0 <argp_failure@@Base+0x538>
   17ffc:	mov	r0, r7
   18000:	bl	1944c <argp_error@@Base+0xe94>
   18004:	b	17484 <argp_failure@@Base+0x3cc>
   18008:	mov	r4, r6
   1800c:	b	17c68 <argp_failure@@Base+0xbb0>
   18010:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18014:	sub	r1, fp, #76	; 0x4c
   18018:	ldr	r0, [r3, #8]
   1801c:	bl	16938 <_obstack_memory_used@@Base+0x22e0>
   18020:	ldr	r2, [r7, #28]
   18024:	ldr	r1, [r7, #32]
   18028:	cmp	r2, r1
   1802c:	bcc	18048 <argp_failure@@Base+0xf90>
   18030:	mov	r1, #1
   18034:	mov	r0, r7
   18038:	bl	19ab8 <argp_error@@Base+0x1500>
   1803c:	cmp	r0, #0
   18040:	beq	18058 <argp_failure@@Base+0xfa0>
   18044:	ldr	r2, [r7, #28]
   18048:	add	r0, r2, #1
   1804c:	mov	r1, #45	; 0x2d
   18050:	str	r0, [r7, #28]
   18054:	strb	r1, [r2]
   18058:	ldr	r2, [r7, #28]
   1805c:	ldr	r1, [r7, #32]
   18060:	ldrb	r8, [r4]
   18064:	cmp	r2, r1
   18068:	bcc	18084 <argp_failure@@Base+0xfcc>
   1806c:	mov	r1, #1
   18070:	mov	r0, r7
   18074:	bl	19ab8 <argp_error@@Base+0x1500>
   18078:	cmp	r0, #0
   1807c:	beq	18090 <argp_failure@@Base+0xfd8>
   18080:	ldr	r2, [r7, #28]
   18084:	add	r1, r2, #1
   18088:	str	r1, [r7, #28]
   1808c:	strb	r8, [r2]
   18090:	ldr	r3, [fp, #-124]	; 0xffffff84
   18094:	ldr	r2, [r5, #8]
   18098:	cmp	r3, #0
   1809c:	beq	18108 <argp_failure@@Base+0x1050>
   180a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   180a4:	ldr	r1, [r3]
   180a8:	cmp	r1, #0
   180ac:	bne	18108 <argp_failure@@Base+0x1050>
   180b0:	cmp	r2, #0
   180b4:	movne	r2, #1
   180b8:	strne	r2, [fp, #-80]	; 0xffffffb0
   180bc:	b	17c30 <argp_failure@@Base+0xb78>
   180c0:	mov	r3, #1
   180c4:	str	r3, [fp, #-124]	; 0xffffff84
   180c8:	b	17474 <argp_failure@@Base+0x3bc>
   180cc:	cmp	sl, #110	; 0x6e
   180d0:	beq	181f0 <argp_failure@@Base+0x1138>
   180d4:	mov	r7, #1
   180d8:	str	r7, [fp, #-112]	; 0xffffff90
   180dc:	b	17f2c <argp_failure@@Base+0xe74>
   180e0:	mov	r0, r7
   180e4:	bl	1944c <argp_error@@Base+0xe94>
   180e8:	b	17d28 <argp_failure@@Base+0xc70>
   180ec:	mov	r0, r7
   180f0:	bl	1944c <argp_error@@Base+0xe94>
   180f4:	ldr	r3, [r7, #28]
   180f8:	b	17e50 <argp_failure@@Base+0xd98>
   180fc:	mov	r0, r7
   18100:	bl	1944c <argp_error@@Base+0xe94>
   18104:	b	17524 <argp_failure@@Base+0x46c>
   18108:	cmp	r2, #0
   1810c:	beq	17c30 <argp_failure@@Base+0xb78>
   18110:	ldr	r1, [r5, #12]
   18114:	mov	r0, r7
   18118:	tst	r1, #1
   1811c:	ldrne	r1, [fp, #-144]	; 0xffffff70
   18120:	ldreq	r1, [fp, #-140]	; 0xffffff74
   18124:	bl	19ad8 <argp_error@@Base+0x1520>
   18128:	b	17c30 <argp_failure@@Base+0xb78>
   1812c:	sub	r2, fp, #76	; 0x4c
   18130:	ldr	r0, [r4, #16]
   18134:	ldr	r1, [r5, #20]
   18138:	bl	166cc <_obstack_memory_used@@Base+0x2074>
   1813c:	b	17e8c <argp_failure@@Base+0xdd4>
   18140:	ldr	r3, [r7, #28]
   18144:	ldr	r1, [r7, #32]
   18148:	add	r2, r3, #12
   1814c:	cmp	r1, r2
   18150:	bcs	1816c <argp_failure@@Base+0x10b4>
   18154:	mov	r1, #12
   18158:	mov	r0, r7
   1815c:	bl	19ab8 <argp_error@@Base+0x1500>
   18160:	cmp	r0, #0
   18164:	beq	17a24 <argp_failure@@Base+0x96c>
   18168:	ldr	r3, [r7, #28]
   1816c:	movw	r2, #49884	; 0xc2dc
   18170:	movt	r2, #1
   18174:	ldrd	r0, [r2]
   18178:	ldr	r2, [r2, #8]
   1817c:	str	r0, [r3]
   18180:	str	r1, [r3, #4]
   18184:	str	r2, [r3, #8]
   18188:	ldr	r3, [r7, #28]
   1818c:	add	r3, r3, #12
   18190:	str	r3, [r7, #28]
   18194:	b	17a24 <argp_failure@@Base+0x96c>
   18198:	ldr	lr, [fp, #-96]	; 0xffffffa0
   1819c:	mov	ip, #1
   181a0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   181a4:	ldrd	r4, [lr, #8]
   181a8:	ldrd	r2, [lr, #32]
   181ac:	strd	r0, [r8]
   181b0:	ldrd	r0, [lr, #24]
   181b4:	strd	r4, [r8, #8]
   181b8:	strd	r2, [r8, #32]
   181bc:	ldrd	r2, [lr, #16]
   181c0:	strd	r2, [r8, #16]
   181c4:	strd	r0, [r8, #24]
   181c8:	str	ip, [r8, #36]	; 0x24
   181cc:	b	17320 <argp_failure@@Base+0x268>
   181d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   181d4:	mov	r2, #0
   181d8:	mov	r1, r2
   181dc:	str	r6, [sp]
   181e0:	str	r5, [sp, #4]
   181e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   181e8:	bl	170b8 <argp_failure@@Base>
   181ec:	b	17f84 <argp_failure@@Base+0xecc>
   181f0:	ldrb	r3, [r5, #1]
   181f4:	cmp	r3, #111	; 0x6f
   181f8:	bne	180d4 <argp_failure@@Base+0x101c>
   181fc:	ldrb	r3, [r5, #2]
   18200:	cmp	r3, #45	; 0x2d
   18204:	bne	180d4 <argp_failure@@Base+0x101c>
   18208:	mov	r3, #0
   1820c:	add	r5, r5, #3
   18210:	sub	r6, r6, #3
   18214:	mov	r7, #1
   18218:	str	r3, [fp, #-112]	; 0xffffff90
   1821c:	b	17f2c <argp_failure@@Base+0xe74>
   18220:	ldr	r3, [r7, #28]
   18224:	ldr	r2, [r7, #32]
   18228:	cmp	r3, r2
   1822c:	bcs	182d8 <argp_failure@@Base+0x1220>
   18230:	add	r1, r3, #1
   18234:	mov	r2, #10
   18238:	str	r1, [r7, #28]
   1823c:	strb	r2, [r3]
   18240:	b	17dd8 <argp_failure@@Base+0xd20>
   18244:	mov	r0, r7
   18248:	bl	1944c <argp_error@@Base+0xe94>
   1824c:	ldr	r2, [r7, #16]
   18250:	ldr	r1, [r7, #24]
   18254:	ldr	r3, [r7, #28]
   18258:	ldr	sl, [fp, #-96]	; 0xffffffa0
   1825c:	ldr	r9, [r7, #20]
   18260:	sub	r3, r3, r1
   18264:	cmp	r3, r2
   18268:	ldr	r8, [sl, #20]
   1826c:	bic	r9, r9, r9, asr #31
   18270:	bls	17ca4 <argp_failure@@Base+0xbec>
   18274:	mov	r0, r7
   18278:	bl	1944c <argp_error@@Base+0xe94>
   1827c:	ldr	r2, [r7, #16]
   18280:	str	r8, [r7, #4]
   18284:	mov	r8, sl
   18288:	ldr	r1, [r7, #24]
   1828c:	ldr	r3, [r7, #28]
   18290:	ldr	sl, [sl, #20]
   18294:	sub	r3, r3, r1
   18298:	cmp	r3, r2
   1829c:	bls	184c4 <argp_failure@@Base+0x140c>
   182a0:	mov	r0, r7
   182a4:	bl	1944c <argp_error@@Base+0xe94>
   182a8:	ldr	r8, [r8, #20]
   182ac:	b	17cac <argp_failure@@Base+0xbf4>
   182b0:	ldr	r0, [fp, #-128]	; 0xffffff80
   182b4:	bl	111b4 <funlockfile@plt>
   182b8:	b	17774 <argp_failure@@Base+0x6bc>
   182bc:	movw	r3, #49768	; 0xc268
   182c0:	movt	r3, #1
   182c4:	str	r5, [sp]
   182c8:	mov	r1, r2
   182cc:	ldr	r0, [fp, #-104]	; 0xffffff98
   182d0:	bl	170b8 <argp_failure@@Base>
   182d4:	b	17830 <argp_failure@@Base+0x778>
   182d8:	mov	r1, #1
   182dc:	mov	r0, r7
   182e0:	bl	19ab8 <argp_error@@Base+0x1500>
   182e4:	cmp	r0, #0
   182e8:	beq	17dd8 <argp_failure@@Base+0xd20>
   182ec:	ldr	r3, [r7, #28]
   182f0:	b	18230 <argp_failure@@Base+0x1178>
   182f4:	mov	r1, #1
   182f8:	mov	r0, r7
   182fc:	bl	19ab8 <argp_error@@Base+0x1500>
   18300:	cmp	r0, #0
   18304:	ldrne	r3, [r7, #28]
   18308:	bne	17c10 <argp_failure@@Base+0xb58>
   1830c:	b	17c20 <argp_failure@@Base+0xb68>
   18310:	ldrb	r2, [sl, #14]
   18314:	cmp	r2, #0
   18318:	bne	17f70 <argp_failure@@Base+0xeb8>
   1831c:	ldr	r3, [fp, #-120]	; 0xffffff88
   18320:	b	181d8 <argp_failure@@Base+0x1120>
   18324:	mov	r1, #1
   18328:	mov	r0, r7
   1832c:	bl	19ab8 <argp_error@@Base+0x1500>
   18330:	cmp	r0, #0
   18334:	ldrne	r3, [r7, #28]
   18338:	bne	178d8 <argp_failure@@Base+0x820>
   1833c:	b	178e8 <argp_failure@@Base+0x830>
   18340:	ldrb	r3, [r4, #1]
   18344:	add	r4, r4, #1
   18348:	lsl	r3, r3, #1
   1834c:	ldrh	r3, [r1, r3]
   18350:	tst	r3, #8192	; 0x2000
   18354:	beq	17f1c <argp_failure@@Base+0xe64>
   18358:	ldrb	r3, [r4, #1]!
   1835c:	lsl	r3, r3, #1
   18360:	ldrh	r3, [r1, r3]
   18364:	tst	r3, #8192	; 0x2000
   18368:	bne	18358 <argp_failure@@Base+0x12a0>
   1836c:	b	17f1c <argp_failure@@Base+0xe64>
   18370:	mov	r2, #10
   18374:	mov	r1, #0
   18378:	mov	r0, r4
   1837c:	bl	110f4 <strtol@plt>
   18380:	ldrb	r3, [r4]
   18384:	ldr	r2, [r7]
   18388:	lsl	r3, r3, #1
   1838c:	ldrh	r7, [r2, r3]
   18390:	str	r0, [fp, #-112]	; 0xffffff90
   18394:	tst	r7, #2048	; 0x800
   18398:	beq	183b0 <argp_failure@@Base+0x12f8>
   1839c:	ldrb	r3, [r4, #1]!
   183a0:	lsl	r3, r3, #1
   183a4:	ldrh	r7, [r2, r3]
   183a8:	tst	r7, #2048	; 0x800
   183ac:	bne	1839c <argp_failure@@Base+0x12e4>
   183b0:	ands	r7, r7, #8192	; 0x2000
   183b4:	beq	17f2c <argp_failure@@Base+0xe74>
   183b8:	ldrb	r3, [r4, #1]!
   183bc:	lsl	r3, r3, #1
   183c0:	ldrh	r7, [r2, r3]
   183c4:	ands	r7, r7, #8192	; 0x2000
   183c8:	bne	183b8 <argp_failure@@Base+0x1300>
   183cc:	b	17f2c <argp_failure@@Base+0xe74>
   183d0:	mov	r3, sl
   183d4:	mov	r4, r5
   183d8:	b	17efc <argp_failure@@Base+0xe44>
   183dc:	ldr	r5, [fp, #-112]	; 0xffffff90
   183e0:	movw	r4, #49548	; 0xc18c
   183e4:	movt	r4, #1
   183e8:	ldr	r3, [r7, #28]
   183ec:	ldr	r2, [r7, #32]
   183f0:	cmp	r3, r2
   183f4:	bcc	18410 <argp_failure@@Base+0x1358>
   183f8:	mov	r1, #1
   183fc:	mov	r0, r7
   18400:	bl	19ab8 <argp_error@@Base+0x1500>
   18404:	cmp	r0, #0
   18408:	beq	18420 <argp_failure@@Base+0x1368>
   1840c:	ldr	r3, [r7, #28]
   18410:	add	r1, r3, #1
   18414:	mov	r2, #10
   18418:	str	r1, [r7, #28]
   1841c:	strb	r2, [r3]
   18420:	mov	r0, r4
   18424:	bl	11268 <strlen@plt>
   18428:	subs	r6, r0, #0
   1842c:	ldr	r0, [r7, #28]
   18430:	ldr	r3, [r7, #32]
   18434:	bne	1847c <argp_failure@@Base+0x13c4>
   18438:	cmp	r0, r3
   1843c:	bcc	18458 <argp_failure@@Base+0x13a0>
   18440:	mov	r1, #1
   18444:	mov	r0, r7
   18448:	bl	19ab8 <argp_error@@Base+0x1500>
   1844c:	cmp	r0, #0
   18450:	beq	176f8 <argp_failure@@Base+0x640>
   18454:	ldr	r0, [r7, #28]
   18458:	add	r2, r0, #1
   1845c:	mov	r3, #10
   18460:	str	r2, [r7, #28]
   18464:	strb	r3, [r0]
   18468:	b	176f8 <argp_failure@@Base+0x640>
   1846c:	movw	r4, #49548	; 0xc18c
   18470:	movt	r4, #1
   18474:	ldr	r5, [fp, #-104]	; 0xffffff98
   18478:	b	183e8 <argp_failure@@Base+0x1330>
   1847c:	add	r2, r0, r6
   18480:	cmp	r3, r2
   18484:	bcs	184a4 <argp_failure@@Base+0x13ec>
   18488:	mov	r1, r6
   1848c:	mov	r0, r7
   18490:	bl	19ab8 <argp_error@@Base+0x1500>
   18494:	cmp	r0, #0
   18498:	ldr	r0, [r7, #28]
   1849c:	ldreq	r3, [r7, #32]
   184a0:	beq	18438 <argp_failure@@Base+0x1380>
   184a4:	mov	r2, r6
   184a8:	mov	r1, r4
   184ac:	bl	11160 <memcpy@plt>
   184b0:	ldr	r0, [r7, #28]
   184b4:	ldr	r3, [r7, #32]
   184b8:	add	r0, r0, r6
   184bc:	str	r0, [r7, #28]
   184c0:	b	18438 <argp_failure@@Base+0x1380>
   184c4:	mov	r8, sl
   184c8:	b	17cac <argp_failure@@Base+0xbf4>
   184cc:	andeq	ip, r1, ip, asr r0
   184d0:	andeq	fp, r1, ip, asr #31

000184d4 <argp_help@@Base>:
   184d4:	push	{lr}		; (str lr, [sp, #-4]!)
   184d8:	sub	sp, sp, #12
   184dc:	str	r3, [sp]
   184e0:	mov	r3, r2
   184e4:	mov	r2, r1
   184e8:	mov	r1, #0
   184ec:	bl	172d4 <argp_failure@@Base+0x21c>
   184f0:	add	sp, sp, #12
   184f4:	pop	{pc}		; (ldr pc, [sp], #4)

000184f8 <argp_state_help@@Base>:
   184f8:	strd	r4, [sp, #-12]!
   184fc:	subs	r4, r0, #0
   18500:	mov	r5, r2
   18504:	str	lr, [sp, #8]
   18508:	sub	sp, sp, #12
   1850c:	beq	1857c <argp_state_help@@Base+0x84>
   18510:	ldr	r3, [r4, #16]
   18514:	adds	r2, r1, #0
   18518:	movne	r2, #1
   1851c:	eor	r0, r3, #2
   18520:	ands	r2, r2, r0, lsr #1
   18524:	bne	18538 <argp_state_help@@Base+0x40>
   18528:	add	sp, sp, #12
   1852c:	ldrd	r4, [sp]
   18530:	add	sp, sp, #8
   18534:	pop	{pc}		; (ldr pc, [sp], #4)
   18538:	ldr	r0, [r4, #40]	; 0x28
   1853c:	tst	r3, #64	; 0x40
   18540:	mov	r2, r1
   18544:	orrne	r5, r5, #128	; 0x80
   18548:	mov	r1, r4
   1854c:	mov	r3, r5
   18550:	str	r0, [sp]
   18554:	ldr	r0, [r4]
   18558:	bl	172d4 <argp_failure@@Base+0x21c>
   1855c:	ldr	r3, [r4, #16]
   18560:	tst	r3, #32
   18564:	bne	18528 <argp_state_help@@Base+0x30>
   18568:	ands	r0, r5, #256	; 0x100
   1856c:	bne	185a8 <argp_state_help@@Base+0xb0>
   18570:	tst	r5, #512	; 0x200
   18574:	beq	18528 <argp_state_help@@Base+0x30>
   18578:	bl	1125c <exit@plt>
   1857c:	cmp	r1, #0
   18580:	beq	18528 <argp_state_help@@Base+0x30>
   18584:	movw	r3, #2224	; 0x8b0
   18588:	movt	r3, #3
   1858c:	ldr	ip, [r3]
   18590:	mov	r2, r1
   18594:	mov	r3, r5
   18598:	mov	r1, r4
   1859c:	str	ip, [sp]
   185a0:	bl	172d4 <argp_failure@@Base+0x21c>
   185a4:	b	18568 <argp_state_help@@Base+0x70>
   185a8:	movw	r3, #2220	; 0x8ac
   185ac:	movt	r3, #3
   185b0:	ldr	r0, [r3]
   185b4:	bl	1125c <exit@plt>

000185b8 <argp_error@@Base>:
   185b8:	push	{r1, r2, r3}
   185bc:	strd	r4, [sp, #-12]!
   185c0:	subs	r5, r0, #0
   185c4:	str	lr, [sp, #8]
   185c8:	sub	sp, sp, #8
   185cc:	beq	186a4 <argp_error@@Base+0xec>
   185d0:	ldr	r3, [r5, #16]
   185d4:	tst	r3, #2
   185d8:	bne	1868c <argp_error@@Base+0xd4>
   185dc:	ldr	r4, [r5, #44]	; 0x2c
   185e0:	cmp	r4, #0
   185e4:	beq	1868c <argp_error@@Base+0xd4>
   185e8:	mov	r0, r4
   185ec:	bl	1131c <flockfile@plt>
   185f0:	ldr	r0, [r5, #40]	; 0x28
   185f4:	add	r3, sp, #24
   185f8:	str	r3, [sp, #4]
   185fc:	mov	r1, r4
   18600:	bl	110d0 <fputs_unlocked@plt>
   18604:	ldr	r3, [r4, #20]
   18608:	ldr	r2, [r4, #24]
   1860c:	cmp	r3, r2
   18610:	addcc	r1, r3, #1
   18614:	movcc	r2, #58	; 0x3a
   18618:	strcc	r1, [r4, #20]
   1861c:	strbcc	r2, [r3]
   18620:	bcs	186e8 <argp_error@@Base+0x130>
   18624:	ldr	r3, [r4, #20]
   18628:	ldr	r2, [r4, #24]
   1862c:	cmp	r3, r2
   18630:	addcc	r1, r3, #1
   18634:	movcc	r2, #32
   18638:	strcc	r1, [r4, #20]
   1863c:	strbcc	r2, [r3]
   18640:	bcs	186f8 <argp_error@@Base+0x140>
   18644:	mov	r0, r4
   18648:	ldr	r2, [sp, #4]
   1864c:	ldr	r1, [sp, #20]
   18650:	bl	112ec <vfprintf@plt>
   18654:	ldr	r3, [r4, #20]
   18658:	ldr	r2, [r4, #24]
   1865c:	cmp	r3, r2
   18660:	addcc	r1, r3, #1
   18664:	movcc	r2, #10
   18668:	strcc	r1, [r4, #20]
   1866c:	strbcc	r2, [r3]
   18670:	bcs	186d8 <argp_error@@Base+0x120>
   18674:	mov	r0, r5
   18678:	mov	r2, #260	; 0x104
   1867c:	mov	r1, r4
   18680:	bl	184f8 <argp_state_help@@Base>
   18684:	mov	r0, r4
   18688:	bl	111b4 <funlockfile@plt>
   1868c:	add	sp, sp, #8
   18690:	ldrd	r4, [sp]
   18694:	ldr	lr, [sp, #8]
   18698:	add	sp, sp, #12
   1869c:	add	sp, sp, #12
   186a0:	bx	lr
   186a4:	movw	r3, #2232	; 0x8b8
   186a8:	movt	r3, #3
   186ac:	ldr	r4, [r3]
   186b0:	cmp	r4, #0
   186b4:	beq	1868c <argp_error@@Base+0xd4>
   186b8:	mov	r0, r4
   186bc:	bl	1131c <flockfile@plt>
   186c0:	add	r2, sp, #24
   186c4:	movw	r3, #2224	; 0x8b0
   186c8:	movt	r3, #3
   186cc:	str	r2, [sp, #4]
   186d0:	ldr	r0, [r3]
   186d4:	b	185fc <argp_error@@Base+0x44>
   186d8:	mov	r1, #10
   186dc:	mov	r0, r4
   186e0:	bl	112d4 <__overflow@plt>
   186e4:	b	18674 <argp_error@@Base+0xbc>
   186e8:	mov	r1, #58	; 0x3a
   186ec:	mov	r0, r4
   186f0:	bl	112d4 <__overflow@plt>
   186f4:	b	18624 <argp_error@@Base+0x6c>
   186f8:	mov	r1, #32
   186fc:	mov	r0, r4
   18700:	bl	112d4 <__overflow@plt>
   18704:	b	18644 <argp_error@@Base+0x8c>
   18708:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1870c:	ldr	r4, [r1, #32]
   18710:	strd	r6, [sp, #8]
   18714:	strd	r8, [sp, #16]
   18718:	ldr	r7, [r1]
   1871c:	str	sl, [sp, #24]
   18720:	ldr	r8, [r1, #28]
   18724:	add	r6, r0, r4, lsl #2
   18728:	str	lr, [sp, #28]
   1872c:	mov	r5, r7
   18730:	mov	r3, r8
   18734:	cmp	r5, r4
   18738:	movle	r2, #0
   1873c:	movgt	r2, #1
   18740:	cmp	r3, r4
   18744:	movge	r2, #0
   18748:	cmp	r2, #0
   1874c:	beq	187c0 <argp_error@@Base+0x208>
   18750:	sub	r2, r5, r4
   18754:	sub	lr, r4, r3
   18758:	cmp	r2, lr
   1875c:	ble	18790 <argp_error@@Base+0x1d8>
   18760:	sub	r5, r5, lr
   18764:	add	lr, lr, r3
   18768:	add	r2, r0, r3, lsl #2
   1876c:	add	lr, r0, lr, lsl #2
   18770:	add	ip, r0, r5, lsl #2
   18774:	ldr	sl, [ip]
   18778:	ldr	r9, [r2]
   1877c:	str	sl, [r2], #4
   18780:	cmp	lr, r2
   18784:	str	r9, [ip], #4
   18788:	bne	18774 <argp_error@@Base+0x1bc>
   1878c:	b	18734 <argp_error@@Base+0x17c>
   18790:	add	sl, r2, r3
   18794:	add	r3, r0, r3, lsl #2
   18798:	mov	r2, r6
   1879c:	add	r9, r0, sl, lsl #2
   187a0:	ldr	lr, [r2]
   187a4:	ldr	ip, [r3]
   187a8:	str	lr, [r3], #4
   187ac:	cmp	r3, r9
   187b0:	str	ip, [r2], #4
   187b4:	bne	187a0 <argp_error@@Base+0x1e8>
   187b8:	mov	r3, sl
   187bc:	b	18734 <argp_error@@Base+0x17c>
   187c0:	sub	r4, r7, r4
   187c4:	str	r7, [r1, #32]
   187c8:	add	r8, r4, r8
   187cc:	ldrd	r4, [sp]
   187d0:	str	r8, [r1, #28]
   187d4:	ldrd	r6, [sp, #8]
   187d8:	ldrd	r8, [sp, #16]
   187dc:	ldr	sl, [sp, #24]
   187e0:	add	sp, sp, #28
   187e4:	pop	{pc}		; (ldr pc, [sp], #4)
   187e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   187ec:	strd	r6, [sp, #8]
   187f0:	strd	r8, [sp, #16]
   187f4:	strd	sl, [sp, #24]
   187f8:	str	lr, [sp, #32]
   187fc:	sub	sp, sp, #52	; 0x34
   18800:	str	r3, [sp, #12]
   18804:	ldr	r3, [sp, #96]	; 0x60
   18808:	str	r1, [sp, #28]
   1880c:	str	r2, [sp, #32]
   18810:	str	r0, [sp, #36]	; 0x24
   18814:	ldr	r8, [r3, #20]
   18818:	ldrb	r5, [r8]
   1881c:	mov	r9, r8
   18820:	cmp	r5, #61	; 0x3d
   18824:	cmpne	r5, #0
   18828:	movne	r5, #1
   1882c:	moveq	r5, #0
   18830:	beq	18848 <argp_error@@Base+0x290>
   18834:	ldrb	r3, [r9, #1]!
   18838:	cmp	r3, #0
   1883c:	cmpne	r3, #61	; 0x3d
   18840:	bne	18834 <argp_error@@Base+0x27c>
   18844:	sub	r5, r9, r8
   18848:	ldr	r3, [sp, #12]
   1884c:	ldr	r3, [r3]
   18850:	cmp	r3, #0
   18854:	str	r3, [sp, #16]
   18858:	beq	18a20 <argp_error@@Base+0x468>
   1885c:	ldr	fp, [sp, #12]
   18860:	mov	r6, #0
   18864:	ldr	r4, [sp, #16]
   18868:	str	fp, [sp, #24]
   1886c:	b	18874 <argp_error@@Base+0x2bc>
   18870:	mov	r6, r7
   18874:	mov	r2, r5
   18878:	mov	r1, r8
   1887c:	mov	r0, r4
   18880:	add	r7, r6, #1
   18884:	bl	11388 <strncmp@plt>
   18888:	cmp	r0, #0
   1888c:	mov	sl, fp
   18890:	mov	r0, r4
   18894:	bne	188a4 <argp_error@@Base+0x2ec>
   18898:	bl	11268 <strlen@plt>
   1889c:	cmp	r0, r5
   188a0:	beq	18958 <argp_error@@Base+0x3a0>
   188a4:	ldr	r4, [fp, #16]!
   188a8:	cmp	r4, #0
   188ac:	bne	18870 <argp_error@@Base+0x2b8>
   188b0:	ldr	r0, [sp, #16]
   188b4:	mvn	r3, #0
   188b8:	mov	r1, r8
   188bc:	str	r7, [sp, #16]
   188c0:	mov	sl, r4
   188c4:	mov	r8, r4
   188c8:	ldr	fp, [sp, #24]
   188cc:	str	r4, [sp, #20]
   188d0:	ldr	r7, [sp, #96]	; 0x60
   188d4:	str	r3, [sp, #40]	; 0x28
   188d8:	str	r4, [sp, #44]	; 0x2c
   188dc:	mov	r2, r5
   188e0:	bl	11388 <strncmp@plt>
   188e4:	cmp	r0, #0
   188e8:	bne	18928 <argp_error@@Base+0x370>
   188ec:	cmp	sl, #0
   188f0:	beq	18a14 <argp_error@@Base+0x45c>
   188f4:	ldr	r3, [sp, #92]	; 0x5c
   188f8:	cmp	r3, #0
   188fc:	beq	189c8 <argp_error@@Base+0x410>
   18900:	ldr	r3, [sp, #20]
   18904:	cmp	r3, #0
   18908:	bne	18928 <argp_error@@Base+0x370>
   1890c:	ldr	r3, [sp, #100]	; 0x64
   18910:	cmp	r3, #0
   18914:	beq	18a98 <argp_error@@Base+0x4e0>
   18918:	cmp	r4, #0
   1891c:	beq	18bc0 <argp_error@@Base+0x608>
   18920:	mov	r3, #1
   18924:	strb	r3, [r4, r8]
   18928:	ldr	r0, [fp, #16]!
   1892c:	add	r8, r8, #1
   18930:	cmp	r0, #0
   18934:	beq	18940 <argp_error@@Base+0x388>
   18938:	ldr	r1, [r7, #20]
   1893c:	b	188dc <argp_error@@Base+0x324>
   18940:	ldr	r3, [sp, #20]
   18944:	orrs	r3, r4, r3
   18948:	bne	18ae8 <argp_error@@Base+0x530>
   1894c:	cmp	sl, #0
   18950:	ldrne	r6, [sp, #40]	; 0x28
   18954:	beq	18a20 <argp_error@@Base+0x468>
   18958:	ldr	r3, [sp, #96]	; 0x60
   1895c:	mov	r2, #0
   18960:	ldr	r1, [sp, #96]	; 0x60
   18964:	ldr	r0, [sl, #4]
   18968:	ldr	r3, [r3]
   1896c:	str	r2, [r1, #20]
   18970:	add	r2, r3, #1
   18974:	str	r2, [r1]
   18978:	ldrb	r1, [r9]
   1897c:	cmp	r1, #0
   18980:	bne	189fc <argp_error@@Base+0x444>
   18984:	cmp	r0, #1
   18988:	beq	18b78 <argp_error@@Base+0x5c0>
   1898c:	ldr	r3, [sp, #88]	; 0x58
   18990:	cmp	r3, #0
   18994:	strne	r6, [r3]
   18998:	ldr	r3, [sl, #8]
   1899c:	ldr	r0, [sl, #12]
   189a0:	cmp	r3, #0
   189a4:	strne	r0, [r3]
   189a8:	movne	r0, #0
   189ac:	add	sp, sp, #52	; 0x34
   189b0:	ldrd	r4, [sp]
   189b4:	ldrd	r6, [sp, #8]
   189b8:	ldrd	r8, [sp, #16]
   189bc:	ldrd	sl, [sp, #24]
   189c0:	add	sp, sp, #32
   189c4:	pop	{pc}		; (ldr pc, [sp], #4)
   189c8:	ldr	r1, [sl, #4]
   189cc:	ldr	r2, [fp, #4]
   189d0:	cmp	r1, r2
   189d4:	bne	18900 <argp_error@@Base+0x348>
   189d8:	ldr	r1, [sl, #8]
   189dc:	ldr	r2, [fp, #8]
   189e0:	cmp	r1, r2
   189e4:	bne	18900 <argp_error@@Base+0x348>
   189e8:	ldr	r1, [sl, #12]
   189ec:	ldr	r2, [fp, #12]
   189f0:	cmp	r1, r2
   189f4:	bne	18900 <argp_error@@Base+0x348>
   189f8:	b	18928 <argp_error@@Base+0x370>
   189fc:	cmp	r0, #0
   18a00:	beq	18ba0 <argp_error@@Base+0x5e8>
   18a04:	ldr	r3, [sp, #96]	; 0x60
   18a08:	add	r9, r9, #1
   18a0c:	str	r9, [r3, #12]
   18a10:	b	1898c <argp_error@@Base+0x3d4>
   18a14:	mov	sl, fp
   18a18:	str	r8, [sp, #40]	; 0x28
   18a1c:	b	18928 <argp_error@@Base+0x370>
   18a20:	ldr	r3, [sp, #92]	; 0x5c
   18a24:	cmp	r3, #0
   18a28:	beq	18a64 <argp_error@@Base+0x4ac>
   18a2c:	ldr	r2, [sp, #28]
   18a30:	ldr	r3, [sp, #96]	; 0x60
   18a34:	ldr	r3, [r3]
   18a38:	ldr	r3, [r2, r3, lsl #2]
   18a3c:	ldrb	r3, [r3, #1]
   18a40:	cmp	r3, #45	; 0x2d
   18a44:	beq	18a64 <argp_error@@Base+0x4ac>
   18a48:	ldr	r0, [sp, #32]
   18a4c:	ldr	r3, [sp, #96]	; 0x60
   18a50:	ldr	r3, [r3, #20]
   18a54:	ldrb	r1, [r3]
   18a58:	bl	11274 <strchr@plt>
   18a5c:	cmp	r0, #0
   18a60:	bne	18c30 <argp_error@@Base+0x678>
   18a64:	ldr	r3, [sp, #100]	; 0x64
   18a68:	cmp	r3, #0
   18a6c:	bne	18ab4 <argp_error@@Base+0x4fc>
   18a70:	ldr	r3, [sp, #96]	; 0x60
   18a74:	mov	r2, #0
   18a78:	mov	r0, #63	; 0x3f
   18a7c:	ldr	r1, [sp, #96]	; 0x60
   18a80:	ldr	r3, [r3]
   18a84:	str	r2, [r1, #8]
   18a88:	str	r2, [r1, #20]
   18a8c:	add	r3, r3, #1
   18a90:	str	r3, [r1]
   18a94:	b	189ac <argp_error@@Base+0x3f4>
   18a98:	mov	r3, #1
   18a9c:	cmp	r4, #0
   18aa0:	str	r3, [sp, #20]
   18aa4:	beq	18928 <argp_error@@Base+0x370>
   18aa8:	mov	r3, #1
   18aac:	strb	r3, [r4, r8]
   18ab0:	b	18928 <argp_error@@Base+0x370>
   18ab4:	ldr	r3, [sp, #96]	; 0x60
   18ab8:	movw	r0, #2232	; 0x8b8
   18abc:	movt	r0, #3
   18ac0:	movw	r1, #50096	; 0xc3b0
   18ac4:	movt	r1, #1
   18ac8:	ldr	r0, [r0]
   18acc:	ldr	ip, [r3, #20]
   18ad0:	ldr	r3, [sp, #28]
   18ad4:	ldr	r2, [r3]
   18ad8:	str	ip, [sp]
   18adc:	ldr	r3, [sp, #104]	; 0x68
   18ae0:	bl	11280 <fprintf@plt>
   18ae4:	b	18a70 <argp_error@@Base+0x4b8>
   18ae8:	ldr	r3, [sp, #100]	; 0x64
   18aec:	cmp	r3, #0
   18af0:	beq	18b30 <argp_error@@Base+0x578>
   18af4:	ldr	r3, [sp, #20]
   18af8:	movw	r5, #2232	; 0x8b8
   18afc:	movt	r5, #3
   18b00:	ldr	r0, [r5]
   18b04:	cmp	r3, #0
   18b08:	beq	18c68 <argp_error@@Base+0x6b0>
   18b0c:	ldr	r2, [sp, #28]
   18b10:	movw	r1, #50008	; 0xc358
   18b14:	movt	r1, #1
   18b18:	ldr	r3, [sp, #96]	; 0x60
   18b1c:	ldr	r2, [r2]
   18b20:	ldr	ip, [r3, #20]
   18b24:	ldr	r3, [sp, #104]	; 0x68
   18b28:	str	ip, [sp]
   18b2c:	bl	11280 <fprintf@plt>
   18b30:	ldr	r3, [sp, #44]	; 0x2c
   18b34:	cmp	r3, #0
   18b38:	bne	18c24 <argp_error@@Base+0x66c>
   18b3c:	ldr	r3, [sp, #96]	; 0x60
   18b40:	ldr	r4, [r3, #20]
   18b44:	mov	r0, r4
   18b48:	bl	11268 <strlen@plt>
   18b4c:	ldr	r3, [sp, #96]	; 0x60
   18b50:	add	r4, r4, r0
   18b54:	mov	r2, #0
   18b58:	mov	r0, #63	; 0x3f
   18b5c:	ldr	r1, [sp, #96]	; 0x60
   18b60:	ldr	r3, [r3]
   18b64:	str	r2, [r1, #8]
   18b68:	str	r4, [r1, #20]
   18b6c:	add	r3, r3, #1
   18b70:	str	r3, [r1]
   18b74:	b	189ac <argp_error@@Base+0x3f4>
   18b78:	ldr	r1, [sp, #36]	; 0x24
   18b7c:	cmp	r2, r1
   18b80:	bge	18c38 <argp_error@@Base+0x680>
   18b84:	ldr	r1, [sp, #28]
   18b88:	add	r3, r3, #2
   18b8c:	ldr	r2, [r1, r2, lsl #2]
   18b90:	ldr	r1, [sp, #96]	; 0x60
   18b94:	str	r3, [r1]
   18b98:	str	r2, [r1, #12]
   18b9c:	b	1898c <argp_error@@Base+0x3d4>
   18ba0:	ldr	r3, [sp, #100]	; 0x64
   18ba4:	cmp	r3, #0
   18ba8:	bne	18bf4 <argp_error@@Base+0x63c>
   18bac:	ldr	r3, [sl, #12]
   18bb0:	mov	r0, #63	; 0x3f
   18bb4:	ldr	r2, [sp, #96]	; 0x60
   18bb8:	str	r3, [r2, #8]
   18bbc:	b	189ac <argp_error@@Base+0x3f4>
   18bc0:	ldr	r0, [sp, #16]
   18bc4:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   18bc8:	subs	r4, r0, #0
   18bcc:	beq	18d2c <argp_error@@Base+0x774>
   18bd0:	ldr	r2, [sp, #16]
   18bd4:	ldr	r1, [sp, #20]
   18bd8:	bl	112b0 <memset@plt>
   18bdc:	mov	r3, #1
   18be0:	mov	r2, #1
   18be4:	str	r3, [sp, #44]	; 0x2c
   18be8:	ldr	r3, [sp, #40]	; 0x28
   18bec:	strb	r2, [r4, r3]
   18bf0:	b	18920 <argp_error@@Base+0x368>
   18bf4:	ldr	ip, [sl]
   18bf8:	movw	r0, #2232	; 0x8b8
   18bfc:	movt	r0, #3
   18c00:	movw	r1, #50128	; 0xc3d0
   18c04:	movt	r1, #1
   18c08:	ldr	r3, [sp, #28]
   18c0c:	ldr	r0, [r0]
   18c10:	ldr	r2, [r3]
   18c14:	str	ip, [sp]
   18c18:	ldr	r3, [sp, #104]	; 0x68
   18c1c:	bl	11280 <fprintf@plt>
   18c20:	b	18bac <argp_error@@Base+0x5f4>
   18c24:	mov	r0, r4
   18c28:	bl	141a4 <argp_parse@@Base+0xfe4>
   18c2c:	b	18b3c <argp_error@@Base+0x584>
   18c30:	mvn	r0, #0
   18c34:	b	189ac <argp_error@@Base+0x3f4>
   18c38:	ldr	r3, [sp, #100]	; 0x64
   18c3c:	cmp	r3, #0
   18c40:	bne	18cfc <argp_error@@Base+0x744>
   18c44:	ldr	r3, [sl, #12]
   18c48:	ldr	r2, [sp, #96]	; 0x60
   18c4c:	str	r3, [r2, #8]
   18c50:	ldr	r3, [sp, #32]
   18c54:	ldrb	r3, [r3]
   18c58:	cmp	r3, #58	; 0x3a
   18c5c:	moveq	r0, #58	; 0x3a
   18c60:	movne	r0, #63	; 0x3f
   18c64:	b	189ac <argp_error@@Base+0x3f4>
   18c68:	bl	1131c <flockfile@plt>
   18c6c:	ldr	r2, [sp, #28]
   18c70:	movw	r1, #50040	; 0xc378
   18c74:	movt	r1, #1
   18c78:	movw	r7, #50088	; 0xc3a8
   18c7c:	movt	r7, #1
   18c80:	ldr	r3, [sp, #96]	; 0x60
   18c84:	add	r6, r4, r6
   18c88:	sub	r8, r4, #1
   18c8c:	ldr	r2, [r2]
   18c90:	ldr	r0, [r3, #20]
   18c94:	ldr	r3, [sp, #104]	; 0x68
   18c98:	str	r0, [sp]
   18c9c:	ldr	r0, [r5]
   18ca0:	bl	11280 <fprintf@plt>
   18ca4:	ldr	r0, [r5]
   18ca8:	ldr	sl, [sp, #12]
   18cac:	ldr	r9, [sp, #20]
   18cb0:	b	18cc0 <argp_error@@Base+0x708>
   18cb4:	cmp	r6, r8
   18cb8:	add	r9, r9, #1
   18cbc:	beq	18ce4 <argp_error@@Base+0x72c>
   18cc0:	ldrb	r3, [r8, #1]!
   18cc4:	cmp	r3, #0
   18cc8:	beq	18cb4 <argp_error@@Base+0x6fc>
   18ccc:	mov	r1, r7
   18cd0:	ldr	r3, [sl, r9, lsl #4]
   18cd4:	ldr	r2, [sp, #104]	; 0x68
   18cd8:	bl	11280 <fprintf@plt>
   18cdc:	ldr	r0, [r5]
   18ce0:	b	18cb4 <argp_error@@Base+0x6fc>
   18ce4:	mov	r1, r0
   18ce8:	mov	r0, #10
   18cec:	bl	112f8 <fputc@plt>
   18cf0:	ldr	r0, [r5]
   18cf4:	bl	111b4 <funlockfile@plt>
   18cf8:	b	18b30 <argp_error@@Base+0x578>
   18cfc:	ldr	ip, [sl]
   18d00:	movw	r0, #2232	; 0x8b8
   18d04:	movt	r0, #3
   18d08:	movw	r1, #50176	; 0xc400
   18d0c:	movt	r1, #1
   18d10:	ldr	r3, [sp, #28]
   18d14:	ldr	r0, [r0]
   18d18:	ldr	r2, [r3]
   18d1c:	str	ip, [sp]
   18d20:	ldr	r3, [sp, #104]	; 0x68
   18d24:	bl	11280 <fprintf@plt>
   18d28:	b	18c44 <argp_error@@Base+0x68c>
   18d2c:	mov	r3, #1
   18d30:	str	r3, [sp, #20]
   18d34:	b	18928 <argp_error@@Base+0x370>
   18d38:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18d3c:	subs	r5, r0, #0
   18d40:	strd	r6, [sp, #8]
   18d44:	strd	r8, [sp, #16]
   18d48:	strd	sl, [sp, #24]
   18d4c:	str	lr, [sp, #32]
   18d50:	sub	sp, sp, #36	; 0x24
   18d54:	ldr	r4, [sp, #80]	; 0x50
   18d58:	ldr	r7, [r4, #4]
   18d5c:	ble	18f4c <argp_error@@Base+0x994>
   18d60:	mov	r6, r2
   18d64:	mov	sl, r3
   18d68:	ldr	r2, [r4]
   18d6c:	mov	r3, #0
   18d70:	mov	r9, r1
   18d74:	str	r3, [r4, #12]
   18d78:	cmp	r2, r3
   18d7c:	beq	18ff4 <argp_error@@Base+0xa3c>
   18d80:	ldr	r3, [r4, #16]
   18d84:	cmp	r3, #0
   18d88:	bne	18f18 <argp_error@@Base+0x960>
   18d8c:	mov	r3, #0
   18d90:	str	r3, [r4, #20]
   18d94:	str	r2, [r4, #28]
   18d98:	str	r2, [r4, #32]
   18d9c:	ldrb	r2, [r6]
   18da0:	cmp	r2, #45	; 0x2d
   18da4:	moveq	r2, #2
   18da8:	addeq	r6, r6, #1
   18dac:	streq	r2, [r4, #24]
   18db0:	beq	18dd8 <argp_error@@Base+0x820>
   18db4:	cmp	r2, #43	; 0x2b
   18db8:	addeq	r6, r6, #1
   18dbc:	streq	r3, [r4, #24]
   18dc0:	beq	18dd8 <argp_error@@Base+0x820>
   18dc4:	ldr	r2, [sp, #84]	; 0x54
   18dc8:	cmp	r2, #0
   18dcc:	beq	19124 <argp_error@@Base+0xb6c>
   18dd0:	mov	r2, #0
   18dd4:	str	r2, [r4, #24]
   18dd8:	mov	r2, #1
   18ddc:	str	r2, [r4, #16]
   18de0:	ldrb	r2, [r6]
   18de4:	cmp	r2, #58	; 0x3a
   18de8:	moveq	r7, #0
   18dec:	cmp	r3, #0
   18df0:	beq	18e84 <argp_error@@Base+0x8cc>
   18df4:	ldrb	r2, [r3]
   18df8:	cmp	r2, #0
   18dfc:	beq	18e84 <argp_error@@Base+0x8cc>
   18e00:	add	fp, r3, #1
   18e04:	mov	r0, r6
   18e08:	str	r3, [sp, #28]
   18e0c:	str	fp, [r4, #20]
   18e10:	ldrb	r8, [r3]
   18e14:	mov	r1, r8
   18e18:	str	r8, [sp, #24]
   18e1c:	bl	11274 <strchr@plt>
   18e20:	ldrd	r2, [sp, #24]
   18e24:	ldrb	r1, [r3, #1]
   18e28:	cmp	r1, #0
   18e2c:	bne	18e3c <argp_error@@Base+0x884>
   18e30:	ldr	r1, [r4]
   18e34:	add	r1, r1, #1
   18e38:	str	r1, [r4]
   18e3c:	sub	r1, r8, #58	; 0x3a
   18e40:	cmp	r0, #0
   18e44:	cmpne	r1, #1
   18e48:	bls	191a0 <argp_error@@Base+0xbe8>
   18e4c:	ldrb	ip, [r0]
   18e50:	ldrb	r1, [r0, #1]
   18e54:	cmp	ip, #87	; 0x57
   18e58:	beq	190a4 <argp_error@@Base+0xaec>
   18e5c:	cmp	r1, #58	; 0x3a
   18e60:	beq	19148 <argp_error@@Base+0xb90>
   18e64:	mov	r0, r2
   18e68:	add	sp, sp, #36	; 0x24
   18e6c:	ldrd	r4, [sp]
   18e70:	ldrd	r6, [sp, #8]
   18e74:	ldrd	r8, [sp, #16]
   18e78:	ldrd	sl, [sp, #24]
   18e7c:	add	sp, sp, #32
   18e80:	pop	{pc}		; (ldr pc, [sp], #4)
   18e84:	ldr	r8, [r4]
   18e88:	ldr	r3, [r4, #32]
   18e8c:	cmp	r3, r8
   18e90:	ldr	r3, [r4, #28]
   18e94:	strgt	r8, [r4, #32]
   18e98:	cmp	r8, r3
   18e9c:	ldr	r3, [r4, #24]
   18ea0:	strlt	r8, [r4, #28]
   18ea4:	cmp	r3, #1
   18ea8:	beq	18f54 <argp_error@@Base+0x99c>
   18eac:	cmp	r5, r8
   18eb0:	beq	18f34 <argp_error@@Base+0x97c>
   18eb4:	ldr	r3, [r9, r8, lsl #2]
   18eb8:	movw	fp, #47864	; 0xbaf8
   18ebc:	movt	fp, #1
   18ec0:	mov	r1, fp
   18ec4:	mov	r0, r3
   18ec8:	str	r3, [sp, #24]
   18ecc:	bl	110e8 <strcmp@plt>
   18ed0:	cmp	r0, #0
   18ed4:	ldr	r3, [sp, #24]
   18ed8:	bne	18fc8 <argp_error@@Base+0xa10>
   18edc:	ldr	r3, [r4, #28]
   18ee0:	add	r8, r8, #1
   18ee4:	ldr	r2, [r4, #32]
   18ee8:	str	r8, [r4]
   18eec:	cmp	r3, r2
   18ef0:	beq	191b4 <argp_error@@Base+0xbfc>
   18ef4:	cmp	r8, r2
   18ef8:	beq	18f0c <argp_error@@Base+0x954>
   18efc:	mov	r0, r9
   18f00:	mov	r1, r4
   18f04:	bl	18708 <argp_error@@Base+0x150>
   18f08:	ldr	r3, [r4, #28]
   18f0c:	str	r5, [r4]
   18f10:	str	r5, [r4, #32]
   18f14:	b	18f3c <argp_error@@Base+0x984>
   18f18:	ldrb	r2, [r6]
   18f1c:	ldr	r3, [r4, #20]
   18f20:	sub	r1, r2, #43	; 0x2b
   18f24:	tst	r1, #253	; 0xfd
   18f28:	ldrbeq	r2, [r6, #1]
   18f2c:	addeq	r6, r6, #1
   18f30:	b	18de4 <argp_error@@Base+0x82c>
   18f34:	ldr	r3, [r4, #28]
   18f38:	ldr	r5, [r4, #32]
   18f3c:	cmp	r5, r3
   18f40:	mvnne	r2, #0
   18f44:	strne	r3, [r4]
   18f48:	bne	18e64 <argp_error@@Base+0x8ac>
   18f4c:	mvn	r2, #0
   18f50:	b	18e64 <argp_error@@Base+0x8ac>
   18f54:	ldrd	r2, [r4, #28]
   18f58:	cmp	r2, r3
   18f5c:	beq	19188 <argp_error@@Base+0xbd0>
   18f60:	cmp	r8, r3
   18f64:	beq	18f78 <argp_error@@Base+0x9c0>
   18f68:	mov	r1, r4
   18f6c:	mov	r0, r9
   18f70:	bl	18708 <argp_error@@Base+0x150>
   18f74:	ldr	r3, [r4]
   18f78:	cmp	r5, r3
   18f7c:	ble	19198 <argp_error@@Base+0xbe0>
   18f80:	add	r1, r9, r3, lsl #2
   18f84:	b	18f98 <argp_error@@Base+0x9e0>
   18f88:	add	r3, r3, #1
   18f8c:	cmp	r3, r5
   18f90:	str	r3, [r4]
   18f94:	beq	19198 <argp_error@@Base+0xbe0>
   18f98:	ldr	r2, [r1], #4
   18f9c:	ldrb	r0, [r2]
   18fa0:	cmp	r0, #45	; 0x2d
   18fa4:	bne	18f88 <argp_error@@Base+0x9d0>
   18fa8:	ldrb	r2, [r2, #1]
   18fac:	cmp	r2, #0
   18fb0:	beq	18f88 <argp_error@@Base+0x9d0>
   18fb4:	ldr	r8, [r4]
   18fb8:	cmp	r5, r8
   18fbc:	str	r3, [r4, #32]
   18fc0:	bne	18eb4 <argp_error@@Base+0x8fc>
   18fc4:	b	18f34 <argp_error@@Base+0x97c>
   18fc8:	ldrb	r2, [r3]
   18fcc:	cmp	r2, #45	; 0x2d
   18fd0:	beq	19004 <argp_error@@Base+0xa4c>
   18fd4:	ldr	r2, [r4, #24]
   18fd8:	cmp	r2, #0
   18fdc:	beq	18f4c <argp_error@@Base+0x994>
   18fe0:	add	r8, r8, #1
   18fe4:	mov	r2, #1
   18fe8:	str	r8, [r4]
   18fec:	str	r3, [r4, #12]
   18ff0:	b	18e64 <argp_error@@Base+0x8ac>
   18ff4:	mov	r3, #1
   18ff8:	mov	r2, r3
   18ffc:	str	r3, [r4]
   19000:	b	18d8c <argp_error@@Base+0x7d4>
   19004:	ldrb	r1, [r3, #1]
   19008:	cmp	r1, #0
   1900c:	beq	18fd4 <argp_error@@Base+0xa1c>
   19010:	cmp	sl, #0
   19014:	beq	1909c <argp_error@@Base+0xae4>
   19018:	cmp	r1, #45	; 0x2d
   1901c:	beq	19234 <argp_error@@Base+0xc7c>
   19020:	ldr	r2, [sp, #76]	; 0x4c
   19024:	cmp	r2, #0
   19028:	beq	1909c <argp_error@@Base+0xae4>
   1902c:	ldrb	r2, [r3, #2]
   19030:	cmp	r2, #0
   19034:	bne	19050 <argp_error@@Base+0xa98>
   19038:	mov	r0, r6
   1903c:	str	r3, [sp, #24]
   19040:	bl	11274 <strchr@plt>
   19044:	cmp	r0, #0
   19048:	ldr	r3, [sp, #24]
   1904c:	bne	1909c <argp_error@@Base+0xae4>
   19050:	ldr	r2, [sp, #72]	; 0x48
   19054:	add	ip, r3, #1
   19058:	movw	r0, #46880	; 0xb720
   1905c:	movt	r0, #1
   19060:	mov	r3, sl
   19064:	ldr	r1, [sp, #76]	; 0x4c
   19068:	str	r2, [sp]
   1906c:	mov	r2, r6
   19070:	str	r0, [sp, #16]
   19074:	mov	r0, r5
   19078:	stmib	sp, {r1, r4, r7}
   1907c:	mov	r1, r9
   19080:	str	ip, [r4, #20]
   19084:	bl	187e8 <argp_error@@Base+0x230>
   19088:	cmn	r0, #1
   1908c:	mov	r2, r0
   19090:	bne	18e64 <argp_error@@Base+0x8ac>
   19094:	ldr	r3, [r4]
   19098:	ldr	r3, [r9, r3, lsl #2]
   1909c:	add	r3, r3, #1
   190a0:	b	18e00 <argp_error@@Base+0x848>
   190a4:	sub	ip, r1, #59	; 0x3b
   190a8:	cmp	sl, #0
   190ac:	clz	ip, ip
   190b0:	lsr	ip, ip, #5
   190b4:	moveq	ip, #0
   190b8:	cmp	ip, #0
   190bc:	beq	18e5c <argp_error@@Base+0x8a4>
   190c0:	ldrb	r3, [r3, #1]
   190c4:	cmp	r3, #0
   190c8:	bne	190dc <argp_error@@Base+0xb24>
   190cc:	ldr	r3, [r4]
   190d0:	cmp	r3, r5
   190d4:	beq	19268 <argp_error@@Base+0xcb0>
   190d8:	ldr	fp, [r9, r3, lsl #2]
   190dc:	mov	lr, #0
   190e0:	movw	ip, #50304	; 0xc480
   190e4:	movt	ip, #1
   190e8:	ldr	r3, [sp, #72]	; 0x48
   190ec:	mov	r2, r6
   190f0:	mov	r1, r9
   190f4:	mov	r0, r5
   190f8:	str	r3, [sp]
   190fc:	mov	r3, sl
   19100:	str	r4, [sp, #8]
   19104:	str	r7, [sp, #12]
   19108:	str	ip, [sp, #16]
   1910c:	str	fp, [r4, #20]
   19110:	str	lr, [sp, #4]
   19114:	str	lr, [r4, #12]
   19118:	bl	187e8 <argp_error@@Base+0x230>
   1911c:	mov	r2, r0
   19120:	b	18e64 <argp_error@@Base+0x8ac>
   19124:	movw	r0, #50216	; 0xc428
   19128:	movt	r0, #1
   1912c:	bl	111f0 <getenv@plt>
   19130:	cmp	r0, #0
   19134:	ldr	r3, [r4, #20]
   19138:	bne	18dd0 <argp_error@@Base+0x818>
   1913c:	mov	r2, #1
   19140:	str	r2, [r4, #24]
   19144:	b	18dd8 <argp_error@@Base+0x820>
   19148:	ldrb	r1, [r0, #2]
   1914c:	ldrb	r3, [r3, #1]
   19150:	cmp	r1, #58	; 0x3a
   19154:	beq	191f4 <argp_error@@Base+0xc3c>
   19158:	cmp	r3, #0
   1915c:	ldr	r3, [r4]
   19160:	bne	191c0 <argp_error@@Base+0xc08>
   19164:	cmp	r5, r3
   19168:	beq	19214 <argp_error@@Base+0xc5c>
   1916c:	ldr	r1, [r9, r3, lsl #2]
   19170:	add	r3, r3, #1
   19174:	str	r3, [r4]
   19178:	str	r1, [r4, #12]
   1917c:	mov	r3, #0
   19180:	str	r3, [r4, #20]
   19184:	b	18e64 <argp_error@@Base+0x8ac>
   19188:	cmp	r8, r3
   1918c:	movne	r3, r8
   19190:	strne	r8, [r4, #28]
   19194:	b	18f78 <argp_error@@Base+0x9c0>
   19198:	mov	r8, r3
   1919c:	b	18fb8 <argp_error@@Base+0xa00>
   191a0:	cmp	r7, #0
   191a4:	bne	191d0 <argp_error@@Base+0xc18>
   191a8:	mov	r2, #63	; 0x3f
   191ac:	str	r8, [r4, #8]
   191b0:	b	18e64 <argp_error@@Base+0x8ac>
   191b4:	mov	r3, r8
   191b8:	str	r8, [r4, #28]
   191bc:	b	18f0c <argp_error@@Base+0x954>
   191c0:	add	r3, r3, #1
   191c4:	str	r3, [r4]
   191c8:	str	fp, [r4, #12]
   191cc:	b	1917c <argp_error@@Base+0xbc4>
   191d0:	movw	r0, #2232	; 0x8b8
   191d4:	movt	r0, #3
   191d8:	ldr	r2, [r9]
   191dc:	movw	r1, #50232	; 0xc438
   191e0:	movt	r1, #1
   191e4:	mov	r3, r8
   191e8:	ldr	r0, [r0]
   191ec:	bl	11280 <fprintf@plt>
   191f0:	b	191a8 <argp_error@@Base+0xbf0>
   191f4:	cmp	r3, #0
   191f8:	streq	r3, [r4, #12]
   191fc:	beq	1917c <argp_error@@Base+0xbc4>
   19200:	ldr	r3, [r4]
   19204:	str	fp, [r4, #12]
   19208:	add	r3, r3, #1
   1920c:	str	r3, [r4]
   19210:	b	1917c <argp_error@@Base+0xbc4>
   19214:	cmp	r7, #0
   19218:	bne	19288 <argp_error@@Base+0xcd0>
   1921c:	str	r8, [r4, #8]
   19220:	ldrb	r3, [r6]
   19224:	cmp	r3, #58	; 0x3a
   19228:	moveq	r2, #58	; 0x3a
   1922c:	movne	r2, #63	; 0x3f
   19230:	b	1917c <argp_error@@Base+0xbc4>
   19234:	ldr	r2, [sp, #72]	; 0x48
   19238:	add	ip, r3, #2
   1923c:	mov	r1, r9
   19240:	mov	r3, sl
   19244:	ldr	r0, [sp, #76]	; 0x4c
   19248:	str	r2, [sp]
   1924c:	mov	r2, r6
   19250:	stmib	sp, {r0, r4, r7, fp}
   19254:	mov	r0, r5
   19258:	str	ip, [r4, #20]
   1925c:	bl	187e8 <argp_error@@Base+0x230>
   19260:	mov	r2, r0
   19264:	b	18e64 <argp_error@@Base+0x8ac>
   19268:	cmp	r7, #0
   1926c:	bne	192ac <argp_error@@Base+0xcf4>
   19270:	str	r8, [r4, #8]
   19274:	ldrb	r3, [r6]
   19278:	cmp	r3, #58	; 0x3a
   1927c:	moveq	r2, #58	; 0x3a
   19280:	movne	r2, #63	; 0x3f
   19284:	b	18e64 <argp_error@@Base+0x8ac>
   19288:	movw	r0, #2232	; 0x8b8
   1928c:	movt	r0, #3
   19290:	ldr	r2, [r9]
   19294:	movw	r1, #50260	; 0xc454
   19298:	movt	r1, #1
   1929c:	mov	r3, r8
   192a0:	ldr	r0, [r0]
   192a4:	bl	11280 <fprintf@plt>
   192a8:	b	1921c <argp_error@@Base+0xc64>
   192ac:	movw	r0, #2232	; 0x8b8
   192b0:	movt	r0, #3
   192b4:	ldr	r2, [r9]
   192b8:	movw	r1, #50260	; 0xc454
   192bc:	movt	r1, #1
   192c0:	mov	r3, r8
   192c4:	ldr	r0, [r0]
   192c8:	bl	11280 <fprintf@plt>
   192cc:	b	19270 <argp_error@@Base+0xcb8>
   192d0:	strd	r4, [sp, #-16]!
   192d4:	movw	r5, #2208	; 0x8a0
   192d8:	movt	r5, #3
   192dc:	str	r6, [sp, #8]
   192e0:	movw	r4, #2280	; 0x8e8
   192e4:	movt	r4, #3
   192e8:	str	lr, [sp, #12]
   192ec:	sub	sp, sp, #16
   192f0:	ldr	lr, [sp, #32]
   192f4:	ldr	ip, [r5]
   192f8:	ldr	r6, [sp, #36]	; 0x24
   192fc:	str	lr, [sp]
   19300:	ldr	lr, [sp, #40]	; 0x28
   19304:	str	ip, [r4]
   19308:	ldr	ip, [r5, #4]
   1930c:	str	r6, [sp, #4]
   19310:	str	r4, [sp, #8]
   19314:	str	lr, [sp, #12]
   19318:	str	ip, [r4, #4]
   1931c:	bl	18d38 <argp_error@@Base+0x780>
   19320:	ldr	ip, [r4]
   19324:	movw	r3, #2372	; 0x944
   19328:	movt	r3, #3
   1932c:	ldr	r1, [r4, #8]
   19330:	ldr	r2, [r4, #12]
   19334:	str	ip, [r5]
   19338:	str	r1, [r5, #8]
   1933c:	str	r2, [r3]
   19340:	add	sp, sp, #16
   19344:	ldrd	r4, [sp]
   19348:	ldr	r6, [sp, #8]
   1934c:	add	sp, sp, #12
   19350:	pop	{pc}		; (ldr pc, [sp], #4)
   19354:	mov	ip, #0
   19358:	push	{lr}		; (str lr, [sp, #-4]!)
   1935c:	mov	lr, #1
   19360:	sub	sp, sp, #20
   19364:	mov	r3, ip
   19368:	str	ip, [sp]
   1936c:	stmib	sp, {ip, lr}
   19370:	bl	192d0 <argp_error@@Base+0xd18>
   19374:	add	sp, sp, #20
   19378:	pop	{pc}		; (ldr pc, [sp], #4)
   1937c:	umull	r2, r3, r1, r2
   19380:	cmp	r3, #0
   19384:	bne	19390 <argp_error@@Base+0xdd8>
   19388:	mov	r1, r2
   1938c:	b	1512c <_obstack_memory_used@@Base+0xad4>
   19390:	str	r4, [sp, #-8]!
   19394:	str	lr, [sp, #4]
   19398:	bl	1128c <__errno_location@plt>
   1939c:	mov	r3, #12
   193a0:	ldr	r4, [sp]
   193a4:	add	sp, sp, #4
   193a8:	str	r3, [r0]
   193ac:	mov	r0, #0
   193b0:	pop	{pc}		; (ldr pc, [sp], #4)
   193b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   193b8:	mov	r5, r3
   193bc:	strd	r6, [sp, #8]
   193c0:	mov	r7, r1
   193c4:	mov	r6, r2
   193c8:	str	r8, [sp, #16]
   193cc:	mov	r8, r0
   193d0:	mov	r0, #36	; 0x24
   193d4:	str	lr, [sp, #20]
   193d8:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   193dc:	subs	r4, r0, #0
   193e0:	beq	19424 <argp_error@@Base+0xe6c>
   193e4:	mov	r3, #0
   193e8:	mov	r0, #200	; 0xc8
   193ec:	str	r8, [r4]
   193f0:	str	r7, [r4, #4]
   193f4:	str	r6, [r4, #8]
   193f8:	str	r5, [r4, #12]
   193fc:	str	r3, [r4, #16]
   19400:	str	r3, [r4, #20]
   19404:	bl	150f0 <_obstack_memory_used@@Base+0xa98>
   19408:	cmp	r0, #0
   1940c:	mov	r3, r0
   19410:	str	r0, [r4, #24]
   19414:	addne	r2, r0, #200	; 0xc8
   19418:	strne	r0, [r4, #28]
   1941c:	strne	r2, [r4, #32]
   19420:	beq	1943c <argp_error@@Base+0xe84>
   19424:	mov	r0, r4
   19428:	ldrd	r4, [sp]
   1942c:	ldrd	r6, [sp, #8]
   19430:	ldr	r8, [sp, #16]
   19434:	add	sp, sp, #20
   19438:	pop	{pc}		; (ldr pc, [sp], #4)
   1943c:	mov	r0, r4
   19440:	mov	r4, r3
   19444:	bl	141a4 <argp_parse@@Base+0xfe4>
   19448:	b	19424 <argp_error@@Base+0xe6c>
   1944c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19450:	mov	r5, r0
   19454:	ldr	r3, [r0, #16]
   19458:	ldr	r4, [r0, #24]
   1945c:	strd	r6, [sp, #8]
   19460:	strd	r8, [sp, #16]
   19464:	ldr	r8, [r0, #28]
   19468:	strd	sl, [sp, #24]
   1946c:	add	r4, r4, r3
   19470:	str	lr, [sp, #32]
   19474:	sub	sp, sp, #12
   19478:	cmp	r4, r8
   1947c:	bcs	19590 <argp_error@@Base+0xfd8>
   19480:	ldr	r6, [r5, #20]
   19484:	cmp	r6, #0
   19488:	bne	194e8 <argp_error@@Base+0xf30>
   1948c:	ldr	r7, [r5, #4]
   19490:	cmp	r7, #0
   19494:	beq	19770 <argp_error@@Base+0x11b8>
   19498:	ldr	r2, [r5, #32]
   1949c:	add	r3, r8, r7
   194a0:	cmp	r2, r3
   194a4:	bls	1985c <argp_error@@Base+0x12a4>
   194a8:	add	r6, r4, r7
   194ac:	sub	r2, r8, r4
   194b0:	mov	r1, r4
   194b4:	mov	r0, r6
   194b8:	bl	1110c <memmove@plt>
   194bc:	ldr	r3, [r5, #28]
   194c0:	mov	r0, r4
   194c4:	mov	r2, r7
   194c8:	mov	r1, #32
   194cc:	mov	r4, r6
   194d0:	add	r3, r3, r7
   194d4:	str	r3, [r5, #28]
   194d8:	bl	112b0 <memset@plt>
   194dc:	ldr	r8, [r5, #28]
   194e0:	mov	r6, r7
   194e4:	str	r7, [r5, #20]
   194e8:	sub	r9, r8, r4
   194ec:	mov	r1, #10
   194f0:	mov	r2, r9
   194f4:	mov	r0, r4
   194f8:	bl	112c8 <memchr@plt>
   194fc:	cmp	r6, #0
   19500:	mov	fp, r0
   19504:	bge	19510 <argp_error@@Base+0xf58>
   19508:	mov	r6, #0
   1950c:	str	r6, [r5, #20]
   19510:	cmp	fp, #0
   19514:	ldr	r3, [r5, #8]
   19518:	beq	195b8 <argp_error@@Base+0x1000>
   1951c:	sub	r2, fp, r4
   19520:	add	r2, r2, r6
   19524:	cmp	r2, r3
   19528:	blt	1978c <argp_error@@Base+0x11d4>
   1952c:	ldr	sl, [r5, #12]
   19530:	sub	r7, r3, #1
   19534:	str	r3, [sp, #4]
   19538:	cmp	sl, #0
   1953c:	bge	195d8 <argp_error@@Base+0x1020>
   19540:	cmp	r8, fp
   19544:	bls	19910 <argp_error@@Base+0x1358>
   19548:	sub	r0, r7, r6
   1954c:	sub	r2, r8, fp
   19550:	add	r0, r4, r0
   19554:	mov	r1, fp
   19558:	bl	1110c <memmove@plt>
   1955c:	ldr	r2, [r5, #20]
   19560:	mov	r3, #0
   19564:	str	r3, [r5, #20]
   19568:	ldr	r3, [sp, #4]
   1956c:	ldr	r8, [r5, #28]
   19570:	sub	r7, r7, r2
   19574:	add	r7, r4, r7
   19578:	sub	fp, r7, fp
   1957c:	add	r4, r4, r3
   19580:	sub	r8, r8, fp
   19584:	cmp	r4, r8
   19588:	str	r8, [r5, #28]
   1958c:	bcc	19480 <argp_error@@Base+0xec8>
   19590:	ldr	r3, [r5, #24]
   19594:	sub	r8, r8, r3
   19598:	str	r8, [r5, #16]
   1959c:	add	sp, sp, #12
   195a0:	ldrd	r4, [sp]
   195a4:	ldrd	r6, [sp, #8]
   195a8:	ldrd	r8, [sp, #16]
   195ac:	ldrd	sl, [sp, #24]
   195b0:	add	sp, sp, #32
   195b4:	pop	{pc}		; (ldr pc, [sp], #4)
   195b8:	add	r1, r6, r9
   195bc:	cmp	r1, r3
   195c0:	bcc	1997c <argp_error@@Base+0x13c4>
   195c4:	ldr	sl, [r5, #12]
   195c8:	sub	r7, r3, #1
   195cc:	cmp	sl, #0
   195d0:	blt	19914 <argp_error@@Base+0x135c>
   195d4:	mov	fp, r8
   195d8:	add	r7, r7, #1
   195dc:	sub	r6, r7, r6
   195e0:	adds	r6, r4, r6
   195e4:	bcs	197d0 <argp_error@@Base+0x1218>
   195e8:	bl	11250 <__ctype_b_loc@plt>
   195ec:	mov	r3, r6
   195f0:	ldr	ip, [r0]
   195f4:	b	19604 <argp_error@@Base+0x104c>
   195f8:	cmp	r4, r0
   195fc:	mov	r3, r0
   19600:	bhi	197d4 <argp_error@@Base+0x121c>
   19604:	ldrb	r1, [r3]
   19608:	mov	r7, r3
   1960c:	sub	r0, r3, #1
   19610:	lsl	r1, r1, #1
   19614:	ldrh	r1, [ip, r1]
   19618:	tst	r1, #1
   1961c:	beq	195f8 <argp_error@@Base+0x1040>
   19620:	add	r0, r3, #1
   19624:	cmp	r4, r0
   19628:	bcs	197e4 <argp_error@@Base+0x122c>
   1962c:	cmp	r4, r3
   19630:	movhi	r6, r0
   19634:	movhi	r7, r6
   19638:	bls	19654 <argp_error@@Base+0x109c>
   1963c:	b	19668 <argp_error@@Base+0x10b0>
   19640:	ldrb	r1, [r6, #-1]
   19644:	lsl	r1, r1, #1
   19648:	ldrh	r1, [ip, r1]
   1964c:	tst	r1, #1
   19650:	beq	19664 <argp_error@@Base+0x10ac>
   19654:	cmp	r4, r3
   19658:	mov	r6, r3
   1965c:	sub	r3, r3, #1
   19660:	bne	19640 <argp_error@@Base+0x1088>
   19664:	mov	r7, r0
   19668:	add	r3, r9, #1
   1966c:	add	r3, r4, r3
   19670:	cmp	r7, r3
   19674:	beq	197a0 <argp_error@@Base+0x11e8>
   19678:	add	r1, r6, #1
   1967c:	sub	r3, r7, r1
   19680:	cmp	r3, sl
   19684:	bge	197b8 <argp_error@@Base+0x1200>
   19688:	cmp	r7, r8
   1968c:	bcs	197b0 <argp_error@@Base+0x11f8>
   19690:	ldr	r3, [r5, #32]
   19694:	add	sl, sl, #1
   19698:	sub	r3, r3, r8
   1969c:	cmp	r3, sl
   196a0:	bgt	19928 <argp_error@@Base+0x1370>
   196a4:	ldr	r3, [r5]
   196a8:	ldr	r0, [r5, #24]
   196ac:	cmp	r0, r6
   196b0:	bcs	196c4 <argp_error@@Base+0x110c>
   196b4:	sub	r2, r6, r0
   196b8:	mov	r1, #1
   196bc:	bl	11178 <fwrite_unlocked@plt>
   196c0:	ldr	r3, [r5]
   196c4:	ldr	r2, [r3, #20]
   196c8:	ldr	r1, [r3, #24]
   196cc:	cmp	r2, r1
   196d0:	addcc	r1, r2, #1
   196d4:	strcc	r1, [r3, #20]
   196d8:	movcc	r3, #10
   196dc:	strbcc	r3, [r2]
   196e0:	bcs	1996c <argp_error@@Base+0x13b4>
   196e4:	ldr	fp, [r5, #24]
   196e8:	sub	r4, r4, fp
   196ec:	sub	r3, r7, fp
   196f0:	add	r9, r9, r4
   196f4:	mov	r8, r3
   196f8:	mov	r4, fp
   196fc:	ldr	r2, [r5, #12]
   19700:	cmp	r2, r3
   19704:	ble	19728 <argp_error@@Base+0x1170>
   19708:	add	r3, r9, #1
   1970c:	add	r3, fp, r3
   19710:	cmp	r7, r3
   19714:	bne	19818 <argp_error@@Base+0x1260>
   19718:	ldr	r3, [r5, #32]
   1971c:	sub	r3, r3, r7
   19720:	cmp	r2, r3
   19724:	bgt	19818 <argp_error@@Base+0x1260>
   19728:	cmp	r2, #0
   1972c:	ble	1974c <argp_error@@Base+0x1194>
   19730:	mov	r3, #0
   19734:	mov	r1, #32
   19738:	strb	r1, [r4], #1
   1973c:	add	r3, r3, #1
   19740:	ldr	r2, [r5, #12]
   19744:	cmp	r2, r3
   19748:	bgt	19738 <argp_error@@Base+0x1180>
   1974c:	cmp	r4, r7
   19750:	bcc	198a8 <argp_error@@Base+0x12f0>
   19754:	sub	r8, r9, r8
   19758:	cmp	r2, #0
   1975c:	add	r8, r4, r8
   19760:	mvneq	r2, #0
   19764:	str	r2, [r5, #20]
   19768:	str	r8, [r5, #28]
   1976c:	b	19478 <argp_error@@Base+0xec0>
   19770:	sub	r9, r8, r4
   19774:	mov	r1, #10
   19778:	mov	r2, r9
   1977c:	mov	r0, r4
   19780:	bl	112c8 <memchr@plt>
   19784:	mov	fp, r0
   19788:	b	19510 <argp_error@@Base+0xf58>
   1978c:	mov	r3, #0
   19790:	add	r4, fp, #1
   19794:	ldr	r8, [r5, #28]
   19798:	str	r3, [r5, #20]
   1979c:	b	19478 <argp_error@@Base+0xec0>
   197a0:	ldr	r3, [r5, #32]
   197a4:	sub	r3, r3, r6
   197a8:	cmp	r3, sl
   197ac:	ble	19688 <argp_error@@Base+0x10d0>
   197b0:	add	r1, r6, #1
   197b4:	sub	r3, r7, r1
   197b8:	mov	r2, #10
   197bc:	sub	r8, r7, r4
   197c0:	mov	fp, r4
   197c4:	mov	r4, r1
   197c8:	strb	r2, [r6]
   197cc:	b	196fc <argp_error@@Base+0x1144>
   197d0:	add	r7, r6, #1
   197d4:	cmp	r4, r7
   197d8:	bcs	197e4 <argp_error@@Base+0x122c>
   197dc:	mov	r6, r7
   197e0:	b	19668 <argp_error@@Base+0x10b0>
   197e4:	cmp	r6, fp
   197e8:	bcc	198d8 <argp_error@@Base+0x1320>
   197ec:	cmp	r6, fp
   197f0:	beq	198c4 <argp_error@@Base+0x130c>
   197f4:	bl	11250 <__ctype_b_loc@plt>
   197f8:	ldr	r1, [r0]
   197fc:	mov	r7, r6
   19800:	ldrb	r3, [r7, #1]!
   19804:	lsl	r3, r3, #1
   19808:	ldrh	r3, [r1, r3]
   1980c:	tst	r3, #1
   19810:	bne	19800 <argp_error@@Base+0x1248>
   19814:	b	19668 <argp_error@@Base+0x10b0>
   19818:	cmp	r2, #0
   1981c:	movgt	r6, #0
   19820:	movgt	sl, #32
   19824:	ble	1974c <argp_error@@Base+0x1194>
   19828:	ldr	r0, [r5]
   1982c:	ldr	r2, [r0, #20]
   19830:	ldr	r1, [r0, #24]
   19834:	add	ip, r2, #1
   19838:	cmp	r2, r1
   1983c:	strcc	ip, [r0, #20]
   19840:	strbcc	sl, [r2]
   19844:	bcs	1989c <argp_error@@Base+0x12e4>
   19848:	ldr	r2, [r5, #12]
   1984c:	add	r6, r6, #1
   19850:	cmp	r2, r6
   19854:	bgt	19828 <argp_error@@Base+0x1270>
   19858:	b	1974c <argp_error@@Base+0x1194>
   1985c:	mov	r8, #32
   19860:	b	19870 <argp_error@@Base+0x12b8>
   19864:	add	r6, r6, #1
   19868:	cmp	r7, r6
   1986c:	beq	194dc <argp_error@@Base+0xf24>
   19870:	ldr	r0, [r5]
   19874:	ldr	r3, [r0, #20]
   19878:	ldr	r2, [r0, #24]
   1987c:	add	r1, r3, #1
   19880:	cmp	r3, r2
   19884:	strcc	r1, [r0, #20]
   19888:	strbcc	r8, [r3]
   1988c:	bcc	19864 <argp_error@@Base+0x12ac>
   19890:	mov	r1, #32
   19894:	bl	112d4 <__overflow@plt>
   19898:	b	19864 <argp_error@@Base+0x12ac>
   1989c:	mov	r1, #32
   198a0:	bl	112d4 <__overflow@plt>
   198a4:	b	19848 <argp_error@@Base+0x1290>
   198a8:	add	r2, fp, r9
   198ac:	mov	r1, r7
   198b0:	sub	r2, r2, r7
   198b4:	mov	r0, r4
   198b8:	bl	1110c <memmove@plt>
   198bc:	ldr	r2, [r5, #12]
   198c0:	b	19754 <argp_error@@Base+0x119c>
   198c4:	mov	r3, #0
   198c8:	add	r4, r6, #1
   198cc:	ldr	r8, [r5, #28]
   198d0:	str	r3, [r5, #20]
   198d4:	b	19478 <argp_error@@Base+0xec0>
   198d8:	add	r7, r6, #1
   198dc:	b	19900 <argp_error@@Base+0x1348>
   198e0:	bl	11250 <__ctype_b_loc@plt>
   198e4:	ldrb	r3, [r7]
   198e8:	add	r7, r7, #1
   198ec:	ldr	r1, [r0]
   198f0:	lsl	r3, r3, #1
   198f4:	ldrh	r3, [r1, r3]
   198f8:	tst	r3, #1
   198fc:	bne	197fc <argp_error@@Base+0x1244>
   19900:	cmp	fp, r7
   19904:	mov	r6, r7
   19908:	bne	198e0 <argp_error@@Base+0x1328>
   1990c:	b	197ec <argp_error@@Base+0x1234>
   19910:	add	r1, r9, r6
   19914:	sub	r7, r7, r1
   19918:	str	r1, [r5, #20]
   1991c:	add	r8, r8, r7
   19920:	str	r8, [r5, #28]
   19924:	b	19590 <argp_error@@Base+0xfd8>
   19928:	sub	r8, r8, r7
   1992c:	mov	r1, r7
   19930:	mov	r2, r8
   19934:	add	r0, r6, sl
   19938:	bl	1110c <memmove@plt>
   1993c:	ldr	r3, [r5, #12]
   19940:	mov	r2, r6
   19944:	mov	r1, #10
   19948:	mov	fp, r4
   1994c:	strb	r1, [r2], #1
   19950:	add	r7, r3, #1
   19954:	add	r7, r6, r7
   19958:	add	r9, r7, r8
   1995c:	sub	r8, r7, r4
   19960:	sub	r9, r9, r4
   19964:	mov	r4, r2
   19968:	b	196fc <argp_error@@Base+0x1144>
   1996c:	mov	r0, r3
   19970:	mov	r1, #10
   19974:	bl	112d4 <__overflow@plt>
   19978:	b	196e4 <argp_error@@Base+0x112c>
   1997c:	str	r1, [r5, #20]
   19980:	ldr	r8, [r5, #28]
   19984:	b	19590 <argp_error@@Base+0xfd8>
   19988:	str	r4, [sp, #-8]!
   1998c:	mov	r4, r0
   19990:	str	lr, [sp, #4]
   19994:	bl	1944c <argp_error@@Base+0xe94>
   19998:	ldr	r0, [r4, #24]
   1999c:	ldr	r2, [r4, #28]
   199a0:	cmp	r2, r0
   199a4:	bls	199bc <argp_error@@Base+0x1404>
   199a8:	sub	r2, r2, r0
   199ac:	mov	r1, #1
   199b0:	ldr	r3, [r4]
   199b4:	bl	11178 <fwrite_unlocked@plt>
   199b8:	ldr	r0, [r4, #24]
   199bc:	bl	141a4 <argp_parse@@Base+0xfe4>
   199c0:	mov	r0, r4
   199c4:	ldr	r4, [sp]
   199c8:	ldr	lr, [sp, #4]
   199cc:	add	sp, sp, #8
   199d0:	b	141a4 <argp_parse@@Base+0xfe4>
   199d4:	strd	r4, [sp, #-16]!
   199d8:	mov	r4, r0
   199dc:	mov	r5, r1
   199e0:	str	r6, [sp, #8]
   199e4:	str	lr, [sp, #12]
   199e8:	bl	1944c <argp_error@@Base+0xe94>
   199ec:	mov	r1, #1
   199f0:	ldr	r3, [r4]
   199f4:	ldr	r2, [r4, #24]
   199f8:	ldr	ip, [r4, #28]
   199fc:	mov	r0, r2
   19a00:	sub	r2, ip, r2
   19a04:	bl	11178 <fwrite_unlocked@plt>
   19a08:	mov	ip, r0
   19a0c:	ldr	r0, [r4, #24]
   19a10:	ldr	r3, [r4, #28]
   19a14:	sub	r2, r3, r0
   19a18:	cmp	ip, r2
   19a1c:	bne	19a7c <argp_error@@Base+0x14c4>
   19a20:	ldr	r1, [r4, #32]
   19a24:	mov	r3, #0
   19a28:	str	r3, [r4, #16]
   19a2c:	str	r0, [r4, #28]
   19a30:	sub	r1, r1, r0
   19a34:	cmp	r1, r5
   19a38:	movcs	r3, #1
   19a3c:	bcs	19a68 <argp_error@@Base+0x14b0>
   19a40:	adds	r5, r1, r5
   19a44:	bcs	19aa4 <argp_error@@Base+0x14ec>
   19a48:	mov	r1, r5
   19a4c:	bl	1512c <_obstack_memory_used@@Base+0xad4>
   19a50:	cmp	r0, #0
   19a54:	beq	19aa4 <argp_error@@Base+0x14ec>
   19a58:	add	r1, r0, r5
   19a5c:	mov	r3, #1
   19a60:	str	r0, [r4, #24]
   19a64:	strd	r0, [r4, #28]
   19a68:	ldrd	r4, [sp]
   19a6c:	mov	r0, r3
   19a70:	ldr	r6, [sp, #8]
   19a74:	add	sp, sp, #12
   19a78:	pop	{pc}		; (ldr pc, [sp], #4)
   19a7c:	ldr	lr, [r4, #16]
   19a80:	sub	r3, r3, ip
   19a84:	add	r1, r0, ip
   19a88:	sub	r2, r3, r0
   19a8c:	str	r3, [r4, #28]
   19a90:	sub	ip, lr, ip
   19a94:	str	ip, [r4, #16]
   19a98:	bl	1110c <memmove@plt>
   19a9c:	mov	r3, #0
   19aa0:	b	19a68 <argp_error@@Base+0x14b0>
   19aa4:	bl	1128c <__errno_location@plt>
   19aa8:	mov	r2, #12
   19aac:	mov	r3, #0
   19ab0:	str	r2, [r0]
   19ab4:	b	19a68 <argp_error@@Base+0x14b0>
   19ab8:	ldr	ip, [r0, #28]
   19abc:	ldr	r3, [r0, #32]
   19ac0:	sub	r3, r3, ip
   19ac4:	cmp	r3, r1
   19ac8:	bcc	19ad4 <argp_error@@Base+0x151c>
   19acc:	mov	r0, #1
   19ad0:	bx	lr
   19ad4:	b	199d4 <argp_error@@Base+0x141c>
   19ad8:	push	{r1, r2, r3}
   19adc:	mov	r1, #150	; 0x96
   19ae0:	strd	r4, [sp, #-20]!	; 0xffffffec
   19ae4:	mov	r5, r0
   19ae8:	strd	r6, [sp, #8]
   19aec:	str	lr, [sp, #16]
   19af0:	sub	sp, sp, #8
   19af4:	ldr	r7, [sp, #28]
   19af8:	add	r6, sp, #32
   19afc:	ldr	r0, [r5, #28]
   19b00:	ldr	r3, [r5, #32]
   19b04:	sub	r2, r3, r0
   19b08:	cmp	r1, r2
   19b0c:	bhi	19b5c <argp_error@@Base+0x15a4>
   19b10:	sub	r4, r3, r0
   19b14:	mov	r2, r7
   19b18:	str	r6, [sp, #4]
   19b1c:	mov	r1, r4
   19b20:	mov	r3, r6
   19b24:	bl	11328 <vsnprintf@plt>
   19b28:	cmp	r0, r4
   19b2c:	add	r1, r0, #1
   19b30:	bcs	19afc <argp_error@@Base+0x1544>
   19b34:	ldr	r3, [r5, #28]
   19b38:	add	r3, r3, r0
   19b3c:	str	r3, [r5, #28]
   19b40:	add	sp, sp, #8
   19b44:	ldrd	r4, [sp]
   19b48:	ldrd	r6, [sp, #8]
   19b4c:	ldr	lr, [sp, #16]
   19b50:	add	sp, sp, #20
   19b54:	add	sp, sp, #12
   19b58:	bx	lr
   19b5c:	mov	r0, r5
   19b60:	bl	199d4 <argp_error@@Base+0x141c>
   19b64:	cmp	r0, #0
   19b68:	beq	19b78 <argp_error@@Base+0x15c0>
   19b6c:	ldr	r0, [r5, #28]
   19b70:	ldr	r3, [r5, #32]
   19b74:	b	19b10 <argp_error@@Base+0x1558>
   19b78:	mvn	r0, #0
   19b7c:	b	19b40 <argp_error@@Base+0x1588>
   19b80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19b84:	mov	r7, r0
   19b88:	ldr	r6, [pc, #72]	; 19bd8 <argp_error@@Base+0x1620>
   19b8c:	ldr	r5, [pc, #72]	; 19bdc <argp_error@@Base+0x1624>
   19b90:	add	r6, pc, r6
   19b94:	add	r5, pc, r5
   19b98:	sub	r6, r6, r5
   19b9c:	mov	r8, r1
   19ba0:	mov	r9, r2
   19ba4:	bl	11098 <fdopen@plt-0x20>
   19ba8:	asrs	r6, r6, #2
   19bac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19bb0:	mov	r4, #0
   19bb4:	add	r4, r4, #1
   19bb8:	ldr	r3, [r5], #4
   19bbc:	mov	r2, r9
   19bc0:	mov	r1, r8
   19bc4:	mov	r0, r7
   19bc8:	blx	r3
   19bcc:	cmp	r6, r4
   19bd0:	bne	19bb4 <argp_error@@Base+0x15fc>
   19bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19bd8:	andeq	r3, r1, ip, ror r3
   19bdc:	andeq	r3, r1, r4, ror r3
   19be0:	bx	lr

Disassembly of section .fini:

00019be4 <.fini>:
   19be4:	push	{r3, lr}
   19be8:	pop	{r3, pc}
