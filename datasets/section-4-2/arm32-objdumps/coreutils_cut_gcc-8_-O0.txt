
../repos/coreutils/src/cut:     file format elf32-littlearm


Disassembly of section .init:

00010dec <.init>:
   10dec:	push	{r3, lr}
   10df0:	bl	1110c <__assert_fail@plt+0x48>
   10df4:	pop	{r3, pc}

Disassembly of section .plt:

00010df8 <calloc@plt-0x14>:
   10df8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dfc:	ldr	lr, [pc, #4]	; 10e08 <calloc@plt-0x4>
   10e00:	add	lr, pc, lr
   10e04:	ldr	pc, [lr, #8]!
   10e08:	strdeq	sl, [r1], -r8

00010e0c <calloc@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #106496	; 0x1a000
   10e14:	ldr	pc, [ip, #504]!	; 0x1f8

00010e18 <fputs_unlocked@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #106496	; 0x1a000
   10e20:	ldr	pc, [ip, #496]!	; 0x1f0

00010e24 <strcmp@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #106496	; 0x1a000
   10e2c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e30 <posix_fadvise64@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #106496	; 0x1a000
   10e38:	ldr	pc, [ip, #480]!	; 0x1e0

00010e3c <printf@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #106496	; 0x1a000
   10e44:	ldr	pc, [ip, #472]!	; 0x1d8

00010e48 <fflush@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #106496	; 0x1a000
   10e50:	ldr	pc, [ip, #464]!	; 0x1d0

00010e54 <memmove@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #106496	; 0x1a000
   10e5c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e60 <free@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #106496	; 0x1a000
   10e68:	ldr	pc, [ip, #448]!	; 0x1c0

00010e6c <ferror@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #106496	; 0x1a000
   10e74:	ldr	pc, [ip, #440]!	; 0x1b8

00010e78 <_exit@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #106496	; 0x1a000
   10e80:	ldr	pc, [ip, #432]!	; 0x1b0

00010e84 <memcpy@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #106496	; 0x1a000
   10e8c:	ldr	pc, [ip, #424]!	; 0x1a8

00010e90 <mbsinit@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #106496	; 0x1a000
   10e98:	ldr	pc, [ip, #416]!	; 0x1a0

00010e9c <fwrite_unlocked@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #106496	; 0x1a000
   10ea4:	ldr	pc, [ip, #408]!	; 0x198

00010ea8 <memcmp@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #106496	; 0x1a000
   10eb0:	ldr	pc, [ip, #400]!	; 0x190

00010eb4 <fputc_unlocked@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #106496	; 0x1a000
   10ebc:	ldr	pc, [ip, #392]!	; 0x188

00010ec0 <getc_unlocked@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #106496	; 0x1a000
   10ec8:	ldr	pc, [ip, #384]!	; 0x180

00010ecc <realloc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #106496	; 0x1a000
   10ed4:	ldr	pc, [ip, #376]!	; 0x178

00010ed8 <textdomain@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #106496	; 0x1a000
   10ee0:	ldr	pc, [ip, #368]!	; 0x170

00010ee4 <iswprint@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #106496	; 0x1a000
   10eec:	ldr	pc, [ip, #360]!	; 0x168

00010ef0 <fwrite@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #106496	; 0x1a000
   10ef8:	ldr	pc, [ip, #352]!	; 0x160

00010efc <lseek64@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #106496	; 0x1a000
   10f04:	ldr	pc, [ip, #344]!	; 0x158

00010f08 <__ctype_get_mb_cur_max@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #106496	; 0x1a000
   10f10:	ldr	pc, [ip, #336]!	; 0x150

00010f14 <fread@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #106496	; 0x1a000
   10f1c:	ldr	pc, [ip, #328]!	; 0x148

00010f20 <__fpending@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #106496	; 0x1a000
   10f28:	ldr	pc, [ip, #320]!	; 0x140

00010f2c <ferror_unlocked@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #106496	; 0x1a000
   10f34:	ldr	pc, [ip, #312]!	; 0x138

00010f38 <mbrtowc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #106496	; 0x1a000
   10f40:	ldr	pc, [ip, #304]!	; 0x130

00010f44 <error@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #106496	; 0x1a000
   10f4c:	ldr	pc, [ip, #296]!	; 0x128

00010f50 <malloc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #106496	; 0x1a000
   10f58:	ldr	pc, [ip, #288]!	; 0x120

00010f5c <__libc_start_main@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #106496	; 0x1a000
   10f64:	ldr	pc, [ip, #280]!	; 0x118

00010f68 <__freading@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #106496	; 0x1a000
   10f70:	ldr	pc, [ip, #272]!	; 0x110

00010f74 <__gmon_start__@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #106496	; 0x1a000
   10f7c:	ldr	pc, [ip, #264]!	; 0x108

00010f80 <getopt_long@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #106496	; 0x1a000
   10f88:	ldr	pc, [ip, #256]!	; 0x100

00010f8c <__ctype_b_loc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #106496	; 0x1a000
   10f94:	ldr	pc, [ip, #248]!	; 0xf8

00010f98 <exit@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #106496	; 0x1a000
   10fa0:	ldr	pc, [ip, #240]!	; 0xf0

00010fa4 <gettext@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #106496	; 0x1a000
   10fac:	ldr	pc, [ip, #232]!	; 0xe8

00010fb0 <strlen@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #106496	; 0x1a000
   10fb8:	ldr	pc, [ip, #224]!	; 0xe0

00010fbc <fprintf@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #106496	; 0x1a000
   10fc4:	ldr	pc, [ip, #216]!	; 0xd8

00010fc8 <ungetc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #106496	; 0x1a000
   10fd0:	ldr	pc, [ip, #208]!	; 0xd0

00010fd4 <__errno_location@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #106496	; 0x1a000
   10fdc:	ldr	pc, [ip, #200]!	; 0xc8

00010fe0 <__cxa_atexit@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #106496	; 0x1a000
   10fe8:	ldr	pc, [ip, #192]!	; 0xc0

00010fec <memset@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #106496	; 0x1a000
   10ff4:	ldr	pc, [ip, #184]!	; 0xb8

00010ff8 <fgetc@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #106496	; 0x1a000
   11000:	ldr	pc, [ip, #176]!	; 0xb0

00011004 <fileno@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #106496	; 0x1a000
   1100c:	ldr	pc, [ip, #168]!	; 0xa8

00011010 <memchr@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #106496	; 0x1a000
   11018:	ldr	pc, [ip, #160]!	; 0xa0

0001101c <fclose@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #106496	; 0x1a000
   11024:	ldr	pc, [ip, #152]!	; 0x98

00011028 <fseeko64@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #106496	; 0x1a000
   11030:	ldr	pc, [ip, #144]!	; 0x90

00011034 <setlocale@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #106496	; 0x1a000
   1103c:	ldr	pc, [ip, #136]!	; 0x88

00011040 <strrchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #106496	; 0x1a000
   11048:	ldr	pc, [ip, #128]!	; 0x80

0001104c <nl_langinfo@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #106496	; 0x1a000
   11054:	ldr	pc, [ip, #120]!	; 0x78

00011058 <clearerr_unlocked@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #106496	; 0x1a000
   11060:	ldr	pc, [ip, #112]!	; 0x70

00011064 <fopen64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #106496	; 0x1a000
   1106c:	ldr	pc, [ip, #104]!	; 0x68

00011070 <qsort@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #106496	; 0x1a000
   11078:	ldr	pc, [ip, #96]!	; 0x60

0001107c <bindtextdomain@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #106496	; 0x1a000
   11084:	ldr	pc, [ip, #88]!	; 0x58

00011088 <strncmp@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #106496	; 0x1a000
   11090:	ldr	pc, [ip, #80]!	; 0x50

00011094 <abort@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #106496	; 0x1a000
   1109c:	ldr	pc, [ip, #72]!	; 0x48

000110a0 <feof_unlocked@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #106496	; 0x1a000
   110a8:	ldr	pc, [ip, #64]!	; 0x40

000110ac <putchar_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #106496	; 0x1a000
   110b4:	ldr	pc, [ip, #56]!	; 0x38

000110b8 <strspn@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #106496	; 0x1a000
   110c0:	ldr	pc, [ip, #48]!	; 0x30

000110c4 <__assert_fail@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #106496	; 0x1a000
   110cc:	ldr	pc, [ip, #40]!	; 0x28

Disassembly of section .text:

000110d0 <.text>:
   110d0:	mov	fp, #0
   110d4:	mov	lr, #0
   110d8:	pop	{r1}		; (ldr r1, [sp], #4)
   110dc:	mov	r2, sp
   110e0:	push	{r2}		; (str r2, [sp, #-4]!)
   110e4:	push	{r0}		; (str r0, [sp, #-4]!)
   110e8:	ldr	ip, [pc, #16]	; 11100 <__assert_fail@plt+0x3c>
   110ec:	push	{ip}		; (str ip, [sp, #-4]!)
   110f0:	ldr	r0, [pc, #12]	; 11104 <__assert_fail@plt+0x40>
   110f4:	ldr	r3, [pc, #12]	; 11108 <__assert_fail@plt+0x44>
   110f8:	bl	10f5c <__libc_start_main@plt>
   110fc:	bl	11094 <abort@plt>
   11100:	andeq	r8, r1, ip, lsl #28
   11104:	strheq	r2, [r1], -ip
   11108:	andeq	r8, r1, ip, lsr #27
   1110c:	ldr	r3, [pc, #20]	; 11128 <__assert_fail@plt+0x64>
   11110:	ldr	r2, [pc, #20]	; 1112c <__assert_fail@plt+0x68>
   11114:	add	r3, pc, r3
   11118:	ldr	r2, [r3, r2]
   1111c:	cmp	r2, #0
   11120:	bxeq	lr
   11124:	b	10f74 <__gmon_start__@plt>
   11128:	andeq	r9, r1, r4, ror #29
   1112c:	strdeq	r0, [r0], -r8
   11130:	ldr	r0, [pc, #24]	; 11150 <__assert_fail@plt+0x8c>
   11134:	ldr	r3, [pc, #24]	; 11154 <__assert_fail@plt+0x90>
   11138:	cmp	r3, r0
   1113c:	bxeq	lr
   11140:	ldr	r3, [pc, #16]	; 11158 <__assert_fail@plt+0x94>
   11144:	cmp	r3, #0
   11148:	bxeq	lr
   1114c:	bx	r3
   11150:	andeq	fp, r2, r0, asr r1
   11154:	andeq	fp, r2, r0, asr r1
   11158:	andeq	r0, r0, r0
   1115c:	ldr	r0, [pc, #36]	; 11188 <__assert_fail@plt+0xc4>
   11160:	ldr	r1, [pc, #36]	; 1118c <__assert_fail@plt+0xc8>
   11164:	sub	r1, r1, r0
   11168:	asr	r1, r1, #2
   1116c:	add	r1, r1, r1, lsr #31
   11170:	asrs	r1, r1, #1
   11174:	bxeq	lr
   11178:	ldr	r3, [pc, #16]	; 11190 <__assert_fail@plt+0xcc>
   1117c:	cmp	r3, #0
   11180:	bxeq	lr
   11184:	bx	r3
   11188:	andeq	fp, r2, r0, asr r1
   1118c:	andeq	fp, r2, r0, asr r1
   11190:	andeq	r0, r0, r0
   11194:	push	{r4, lr}
   11198:	ldr	r4, [pc, #24]	; 111b8 <__assert_fail@plt+0xf4>
   1119c:	ldrb	r3, [r4]
   111a0:	cmp	r3, #0
   111a4:	popne	{r4, pc}
   111a8:	bl	11130 <__assert_fail@plt+0x6c>
   111ac:	mov	r3, #1
   111b0:	strb	r3, [r4]
   111b4:	pop	{r4, pc}
   111b8:	andeq	fp, r2, r4, ror r1
   111bc:	b	1115c <__assert_fail@plt+0x98>
   111c0:	push	{fp}		; (str fp, [sp, #-4]!)
   111c4:	add	fp, sp, #0
   111c8:	sub	sp, sp, #12
   111cc:	mov	r3, r0
   111d0:	strb	r3, [fp, #-5]
   111d4:	ldrb	r3, [fp, #-5]
   111d8:	mov	r0, r3
   111dc:	add	sp, fp, #0
   111e0:	pop	{fp}		; (ldr fp, [sp], #4)
   111e4:	bx	lr
   111e8:	str	fp, [sp, #-8]!
   111ec:	str	lr, [sp, #4]
   111f0:	add	fp, sp, #4
   111f4:	movw	r0, #36404	; 0x8e34
   111f8:	movt	r0, #1
   111fc:	bl	10fa4 <gettext@plt>
   11200:	mov	r2, r0
   11204:	movw	r3, #45420	; 0xb16c
   11208:	movt	r3, #2
   1120c:	ldr	r3, [r3]
   11210:	mov	r1, r3
   11214:	mov	r0, r2
   11218:	bl	10e18 <fputs_unlocked@plt>
   1121c:	nop	{0}
   11220:	sub	sp, fp, #4
   11224:	ldr	fp, [sp]
   11228:	add	sp, sp, #4
   1122c:	pop	{pc}		; (ldr pc, [sp], #4)
   11230:	str	fp, [sp, #-8]!
   11234:	str	lr, [sp, #4]
   11238:	add	fp, sp, #4
   1123c:	movw	r0, #36460	; 0x8e6c
   11240:	movt	r0, #1
   11244:	bl	10fa4 <gettext@plt>
   11248:	mov	r2, r0
   1124c:	movw	r3, #45420	; 0xb16c
   11250:	movt	r3, #2
   11254:	ldr	r3, [r3]
   11258:	mov	r1, r3
   1125c:	mov	r0, r2
   11260:	bl	10e18 <fputs_unlocked@plt>
   11264:	nop	{0}
   11268:	sub	sp, fp, #4
   1126c:	ldr	fp, [sp]
   11270:	add	sp, sp, #4
   11274:	pop	{pc}		; (ldr pc, [sp], #4)
   11278:	str	fp, [sp, #-8]!
   1127c:	str	lr, [sp, #4]
   11280:	add	fp, sp, #4
   11284:	sub	sp, sp, #80	; 0x50
   11288:	str	r0, [fp, #-80]	; 0xffffffb0
   1128c:	movw	r2, #36908	; 0x902c
   11290:	movt	r2, #1
   11294:	sub	r3, fp, #72	; 0x48
   11298:	ldrd	r0, [r2]
   1129c:	strd	r0, [r3]
   112a0:	ldrd	r0, [r2, #8]
   112a4:	strd	r0, [r3, #8]
   112a8:	ldrd	r0, [r2, #16]
   112ac:	strd	r0, [r3, #16]
   112b0:	ldrd	r0, [r2, #24]
   112b4:	strd	r0, [r3, #24]
   112b8:	ldrd	r0, [r2, #32]
   112bc:	strd	r0, [r3, #32]
   112c0:	ldrd	r0, [r2, #40]	; 0x28
   112c4:	strd	r0, [r3, #40]	; 0x28
   112c8:	ldrd	r0, [r2, #48]	; 0x30
   112cc:	strd	r0, [r3, #48]	; 0x30
   112d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   112d4:	str	r3, [fp, #-8]
   112d8:	sub	r3, fp, #72	; 0x48
   112dc:	str	r3, [fp, #-12]
   112e0:	b	112f0 <__assert_fail@plt+0x22c>
   112e4:	ldr	r3, [fp, #-12]
   112e8:	add	r3, r3, #8
   112ec:	str	r3, [fp, #-12]
   112f0:	ldr	r3, [fp, #-12]
   112f4:	ldr	r3, [r3]
   112f8:	cmp	r3, #0
   112fc:	beq	11320 <__assert_fail@plt+0x25c>
   11300:	ldr	r3, [fp, #-12]
   11304:	ldr	r3, [r3]
   11308:	mov	r1, r3
   1130c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11310:	bl	10e24 <strcmp@plt>
   11314:	mov	r3, r0
   11318:	cmp	r3, #0
   1131c:	bne	112e4 <__assert_fail@plt+0x220>
   11320:	ldr	r3, [fp, #-12]
   11324:	ldr	r3, [r3, #4]
   11328:	cmp	r3, #0
   1132c:	beq	1133c <__assert_fail@plt+0x278>
   11330:	ldr	r3, [fp, #-12]
   11334:	ldr	r3, [r3, #4]
   11338:	str	r3, [fp, #-8]
   1133c:	movw	r0, #36536	; 0x8eb8
   11340:	movt	r0, #1
   11344:	bl	10fa4 <gettext@plt>
   11348:	mov	r3, r0
   1134c:	movw	r2, #36560	; 0x8ed0
   11350:	movt	r2, #1
   11354:	movw	r1, #36600	; 0x8ef8
   11358:	movt	r1, #1
   1135c:	mov	r0, r3
   11360:	bl	10e3c <printf@plt>
   11364:	mov	r1, #0
   11368:	mov	r0, #5
   1136c:	bl	11034 <setlocale@plt>
   11370:	str	r0, [fp, #-16]
   11374:	ldr	r3, [fp, #-16]
   11378:	cmp	r3, #0
   1137c:	beq	113c8 <__assert_fail@plt+0x304>
   11380:	mov	r2, #3
   11384:	movw	r1, #36616	; 0x8f08
   11388:	movt	r1, #1
   1138c:	ldr	r0, [fp, #-16]
   11390:	bl	11088 <strncmp@plt>
   11394:	mov	r3, r0
   11398:	cmp	r3, #0
   1139c:	beq	113c8 <__assert_fail@plt+0x304>
   113a0:	movw	r0, #36620	; 0x8f0c
   113a4:	movt	r0, #1
   113a8:	bl	10fa4 <gettext@plt>
   113ac:	mov	r2, r0
   113b0:	movw	r3, #45420	; 0xb16c
   113b4:	movt	r3, #2
   113b8:	ldr	r3, [r3]
   113bc:	mov	r1, r3
   113c0:	mov	r0, r2
   113c4:	bl	10e18 <fputs_unlocked@plt>
   113c8:	movw	r0, #36692	; 0x8f54
   113cc:	movt	r0, #1
   113d0:	bl	10fa4 <gettext@plt>
   113d4:	mov	r3, r0
   113d8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   113dc:	movw	r1, #36560	; 0x8ed0
   113e0:	movt	r1, #1
   113e4:	mov	r0, r3
   113e8:	bl	10e3c <printf@plt>
   113ec:	movw	r0, #36720	; 0x8f70
   113f0:	movt	r0, #1
   113f4:	bl	10fa4 <gettext@plt>
   113f8:	ldr	r2, [fp, #-8]
   113fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11400:	cmp	r2, r3
   11404:	bne	11414 <__assert_fail@plt+0x350>
   11408:	movw	r3, #36772	; 0x8fa4
   1140c:	movt	r3, #1
   11410:	b	1141c <__assert_fail@plt+0x358>
   11414:	movw	r3, #36784	; 0x8fb0
   11418:	movt	r3, #1
   1141c:	mov	r2, r3
   11420:	ldr	r1, [fp, #-8]
   11424:	bl	10e3c <printf@plt>
   11428:	nop	{0}
   1142c:	sub	sp, fp, #4
   11430:	ldr	fp, [sp]
   11434:	add	sp, sp, #4
   11438:	pop	{pc}		; (ldr pc, [sp], #4)
   1143c:	str	r4, [sp, #-12]!
   11440:	str	fp, [sp, #4]
   11444:	str	lr, [sp, #8]
   11448:	add	fp, sp, #8
   1144c:	sub	sp, sp, #12
   11450:	str	r0, [fp, #-16]
   11454:	ldr	r3, [fp, #-16]
   11458:	cmp	r3, #0
   1145c:	beq	11498 <__assert_fail@plt+0x3d4>
   11460:	movw	r3, #45408	; 0xb160
   11464:	movt	r3, #2
   11468:	ldr	r4, [r3]
   1146c:	movw	r0, #37260	; 0x918c
   11470:	movt	r0, #1
   11474:	bl	10fa4 <gettext@plt>
   11478:	mov	r1, r0
   1147c:	movw	r3, #45488	; 0xb1b0
   11480:	movt	r3, #2
   11484:	ldr	r3, [r3]
   11488:	mov	r2, r3
   1148c:	mov	r0, r4
   11490:	bl	10fbc <fprintf@plt>
   11494:	b	11664 <__assert_fail@plt+0x5a0>
   11498:	movw	r0, #37300	; 0x91b4
   1149c:	movt	r0, #1
   114a0:	bl	10fa4 <gettext@plt>
   114a4:	mov	r2, r0
   114a8:	movw	r3, #45488	; 0xb1b0
   114ac:	movt	r3, #2
   114b0:	ldr	r3, [r3]
   114b4:	mov	r1, r3
   114b8:	mov	r0, r2
   114bc:	bl	10e3c <printf@plt>
   114c0:	movw	r0, #37332	; 0x91d4
   114c4:	movt	r0, #1
   114c8:	bl	10fa4 <gettext@plt>
   114cc:	mov	r2, r0
   114d0:	movw	r3, #45420	; 0xb16c
   114d4:	movt	r3, #2
   114d8:	ldr	r3, [r3]
   114dc:	mov	r1, r3
   114e0:	mov	r0, r2
   114e4:	bl	10e18 <fputs_unlocked@plt>
   114e8:	bl	111e8 <__assert_fail@plt+0x124>
   114ec:	bl	11230 <__assert_fail@plt+0x16c>
   114f0:	movw	r0, #37400	; 0x9218
   114f4:	movt	r0, #1
   114f8:	bl	10fa4 <gettext@plt>
   114fc:	mov	r2, r0
   11500:	movw	r3, #45420	; 0xb16c
   11504:	movt	r3, #2
   11508:	ldr	r3, [r3]
   1150c:	mov	r1, r3
   11510:	mov	r0, r2
   11514:	bl	10e18 <fputs_unlocked@plt>
   11518:	movw	r0, #37580	; 0x92cc
   1151c:	movt	r0, #1
   11520:	bl	10fa4 <gettext@plt>
   11524:	mov	r2, r0
   11528:	movw	r3, #45420	; 0xb16c
   1152c:	movt	r3, #2
   11530:	ldr	r3, [r3]
   11534:	mov	r1, r3
   11538:	mov	r0, r2
   1153c:	bl	10e18 <fputs_unlocked@plt>
   11540:	movw	r0, #37820	; 0x93bc
   11544:	movt	r0, #1
   11548:	bl	10fa4 <gettext@plt>
   1154c:	mov	r2, r0
   11550:	movw	r3, #45420	; 0xb16c
   11554:	movt	r3, #2
   11558:	ldr	r3, [r3]
   1155c:	mov	r1, r3
   11560:	mov	r0, r2
   11564:	bl	10e18 <fputs_unlocked@plt>
   11568:	movw	r0, #37936	; 0x9430
   1156c:	movt	r0, #1
   11570:	bl	10fa4 <gettext@plt>
   11574:	mov	r2, r0
   11578:	movw	r3, #45420	; 0xb16c
   1157c:	movt	r3, #2
   11580:	ldr	r3, [r3]
   11584:	mov	r1, r3
   11588:	mov	r0, r2
   1158c:	bl	10e18 <fputs_unlocked@plt>
   11590:	movw	r0, #38148	; 0x9504
   11594:	movt	r0, #1
   11598:	bl	10fa4 <gettext@plt>
   1159c:	mov	r2, r0
   115a0:	movw	r3, #45420	; 0xb16c
   115a4:	movt	r3, #2
   115a8:	ldr	r3, [r3]
   115ac:	mov	r1, r3
   115b0:	mov	r0, r2
   115b4:	bl	10e18 <fputs_unlocked@plt>
   115b8:	movw	r0, #38212	; 0x9544
   115bc:	movt	r0, #1
   115c0:	bl	10fa4 <gettext@plt>
   115c4:	mov	r2, r0
   115c8:	movw	r3, #45420	; 0xb16c
   115cc:	movt	r3, #2
   115d0:	ldr	r3, [r3]
   115d4:	mov	r1, r3
   115d8:	mov	r0, r2
   115dc:	bl	10e18 <fputs_unlocked@plt>
   115e0:	movw	r0, #38260	; 0x9574
   115e4:	movt	r0, #1
   115e8:	bl	10fa4 <gettext@plt>
   115ec:	mov	r2, r0
   115f0:	movw	r3, #45420	; 0xb16c
   115f4:	movt	r3, #2
   115f8:	ldr	r3, [r3]
   115fc:	mov	r1, r3
   11600:	mov	r0, r2
   11604:	bl	10e18 <fputs_unlocked@plt>
   11608:	movw	r0, #38316	; 0x95ac
   1160c:	movt	r0, #1
   11610:	bl	10fa4 <gettext@plt>
   11614:	mov	r2, r0
   11618:	movw	r3, #45420	; 0xb16c
   1161c:	movt	r3, #2
   11620:	ldr	r3, [r3]
   11624:	mov	r1, r3
   11628:	mov	r0, r2
   1162c:	bl	10e18 <fputs_unlocked@plt>
   11630:	movw	r0, #38520	; 0x9678
   11634:	movt	r0, #1
   11638:	bl	10fa4 <gettext@plt>
   1163c:	mov	r2, r0
   11640:	movw	r3, #45420	; 0xb16c
   11644:	movt	r3, #2
   11648:	ldr	r3, [r3]
   1164c:	mov	r1, r3
   11650:	mov	r0, r2
   11654:	bl	10e18 <fputs_unlocked@plt>
   11658:	movw	r0, #38784	; 0x9780
   1165c:	movt	r0, #1
   11660:	bl	11278 <__assert_fail@plt+0x1b4>
   11664:	ldr	r0, [fp, #-16]
   11668:	bl	10f98 <exit@plt>
   1166c:	strd	r4, [sp, #-12]!
   11670:	str	fp, [sp, #8]
   11674:	add	fp, sp, #8
   11678:	sub	sp, sp, #12
   1167c:	str	r0, [fp, #-16]
   11680:	ldr	r3, [fp, #-16]
   11684:	ldrd	r2, [r3]
   11688:	adds	r4, r2, #1
   1168c:	adc	r5, r3, #0
   11690:	ldr	r3, [fp, #-16]
   11694:	strd	r4, [r3]
   11698:	ldr	r3, [fp, #-16]
   1169c:	ldrd	r0, [r3]
   116a0:	movw	r3, #45436	; 0xb17c
   116a4:	movt	r3, #2
   116a8:	ldr	r3, [r3]
   116ac:	ldrd	r2, [r3, #8]
   116b0:	cmp	r1, r3
   116b4:	cmpeq	r0, r2
   116b8:	bls	116d8 <__assert_fail@plt+0x614>
   116bc:	movw	r3, #45436	; 0xb17c
   116c0:	movt	r3, #2
   116c4:	ldr	r3, [r3]
   116c8:	add	r2, r3, #16
   116cc:	movw	r3, #45436	; 0xb17c
   116d0:	movt	r3, #2
   116d4:	str	r2, [r3]
   116d8:	nop	{0}
   116dc:	sub	sp, fp, #8
   116e0:	ldrd	r4, [sp]
   116e4:	ldr	fp, [sp, #8]
   116e8:	add	sp, sp, #12
   116ec:	bx	lr
   116f0:	push	{fp}		; (str fp, [sp, #-4]!)
   116f4:	add	fp, sp, #0
   116f8:	sub	sp, sp, #12
   116fc:	strd	r0, [fp, #-12]
   11700:	movw	r3, #45436	; 0xb17c
   11704:	movt	r3, #2
   11708:	ldr	r3, [r3]
   1170c:	ldrd	r2, [r3]
   11710:	ldrd	r0, [fp, #-12]
   11714:	cmp	r1, r3
   11718:	cmpeq	r0, r2
   1171c:	movcs	r3, #1
   11720:	movcc	r3, #0
   11724:	uxtb	r3, r3
   11728:	mov	r0, r3
   1172c:	add	sp, fp, #0
   11730:	pop	{fp}		; (ldr fp, [sp], #4)
   11734:	bx	lr
   11738:	push	{fp}		; (str fp, [sp, #-4]!)
   1173c:	add	fp, sp, #0
   11740:	sub	sp, sp, #12
   11744:	strd	r0, [fp, #-12]
   11748:	movw	r3, #45436	; 0xb17c
   1174c:	movt	r3, #2
   11750:	ldr	r3, [r3]
   11754:	ldrd	r2, [r3]
   11758:	ldrd	r0, [fp, #-12]
   1175c:	cmp	r1, r3
   11760:	cmpeq	r0, r2
   11764:	moveq	r3, #1
   11768:	movne	r3, #0
   1176c:	uxtb	r3, r3
   11770:	mov	r0, r3
   11774:	add	sp, fp, #0
   11778:	pop	{fp}		; (ldr fp, [sp], #4)
   1177c:	bx	lr
   11780:	str	fp, [sp, #-8]!
   11784:	str	lr, [sp, #4]
   11788:	add	fp, sp, #4
   1178c:	sub	sp, sp, #24
   11790:	str	r0, [fp, #-24]	; 0xffffffe8
   11794:	mov	r2, #0
   11798:	mov	r3, #0
   1179c:	strd	r2, [fp, #-20]	; 0xffffffec
   117a0:	mov	r3, #0
   117a4:	strb	r3, [fp, #-5]
   117a8:	movw	r3, #45464	; 0xb198
   117ac:	movt	r3, #2
   117b0:	ldr	r2, [r3]
   117b4:	movw	r3, #45436	; 0xb17c
   117b8:	movt	r3, #2
   117bc:	str	r2, [r3]
   117c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   117c4:	bl	10ec0 <getc_unlocked@plt>
   117c8:	str	r0, [fp, #-12]
   117cc:	movw	r3, #45316	; 0xb104
   117d0:	movt	r3, #2
   117d4:	ldrb	r3, [r3]
   117d8:	mov	r2, r3
   117dc:	ldr	r3, [fp, #-12]
   117e0:	cmp	r3, r2
   117e4:	bne	11820 <__assert_fail@plt+0x75c>
   117e8:	ldr	r0, [fp, #-12]
   117ec:	bl	110ac <putchar_unlocked@plt>
   117f0:	mov	r2, #0
   117f4:	mov	r3, #0
   117f8:	strd	r2, [fp, #-20]	; 0xffffffec
   117fc:	mov	r3, #0
   11800:	strb	r3, [fp, #-5]
   11804:	movw	r3, #45464	; 0xb198
   11808:	movt	r3, #2
   1180c:	ldr	r2, [r3]
   11810:	movw	r3, #45436	; 0xb17c
   11814:	movt	r3, #2
   11818:	str	r2, [r3]
   1181c:	b	117c0 <__assert_fail@plt+0x6fc>
   11820:	ldr	r3, [fp, #-12]
   11824:	cmn	r3, #1
   11828:	bne	11850 <__assert_fail@plt+0x78c>
   1182c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11830:	orrs	r3, r2, r3
   11834:	beq	118fc <__assert_fail@plt+0x838>
   11838:	movw	r3, #45316	; 0xb104
   1183c:	movt	r3, #2
   11840:	ldrb	r3, [r3]
   11844:	mov	r0, r3
   11848:	bl	110ac <putchar_unlocked@plt>
   1184c:	b	118fc <__assert_fail@plt+0x838>
   11850:	sub	r3, fp, #20
   11854:	mov	r0, r3
   11858:	bl	1166c <__assert_fail@plt+0x5a8>
   1185c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11860:	mov	r0, r2
   11864:	mov	r1, r3
   11868:	bl	116f0 <__assert_fail@plt+0x62c>
   1186c:	mov	r3, r0
   11870:	cmp	r3, #0
   11874:	beq	117c0 <__assert_fail@plt+0x6fc>
   11878:	movw	r3, #45456	; 0xb190
   1187c:	movt	r3, #2
   11880:	ldr	r2, [r3]
   11884:	movw	r3, #45432	; 0xb178
   11888:	movt	r3, #2
   1188c:	cmp	r2, r3
   11890:	beq	118f0 <__assert_fail@plt+0x82c>
   11894:	ldrb	r3, [fp, #-5]
   11898:	cmp	r3, #0
   1189c:	beq	118e8 <__assert_fail@plt+0x824>
   118a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   118a4:	mov	r0, r2
   118a8:	mov	r1, r3
   118ac:	bl	11738 <__assert_fail@plt+0x674>
   118b0:	mov	r3, r0
   118b4:	cmp	r3, #0
   118b8:	beq	118e8 <__assert_fail@plt+0x824>
   118bc:	movw	r3, #45456	; 0xb190
   118c0:	movt	r3, #2
   118c4:	ldr	r0, [r3]
   118c8:	movw	r3, #45452	; 0xb18c
   118cc:	movt	r3, #2
   118d0:	ldr	r2, [r3]
   118d4:	movw	r3, #45420	; 0xb16c
   118d8:	movt	r3, #2
   118dc:	ldr	r3, [r3]
   118e0:	mov	r1, #1
   118e4:	bl	10e9c <fwrite_unlocked@plt>
   118e8:	mov	r3, #1
   118ec:	strb	r3, [fp, #-5]
   118f0:	ldr	r0, [fp, #-12]
   118f4:	bl	110ac <putchar_unlocked@plt>
   118f8:	b	117c0 <__assert_fail@plt+0x6fc>
   118fc:	nop	{0}
   11900:	nop	{0}
   11904:	sub	sp, fp, #4
   11908:	ldr	fp, [sp]
   1190c:	add	sp, sp, #4
   11910:	pop	{pc}		; (ldr pc, [sp], #4)
   11914:	str	fp, [sp, #-8]!
   11918:	str	lr, [sp, #4]
   1191c:	add	fp, sp, #4
   11920:	sub	sp, sp, #64	; 0x40
   11924:	str	r0, [fp, #-48]	; 0xffffffd0
   11928:	mov	r2, #1
   1192c:	mov	r3, #0
   11930:	strd	r2, [fp, #-44]	; 0xffffffd4
   11934:	mov	r3, #0
   11938:	strb	r3, [fp, #-9]
   1193c:	movw	r3, #45464	; 0xb198
   11940:	movt	r3, #2
   11944:	ldr	r2, [r3]
   11948:	movw	r3, #45436	; 0xb17c
   1194c:	movt	r3, #2
   11950:	str	r2, [r3]
   11954:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11958:	bl	10ec0 <getc_unlocked@plt>
   1195c:	str	r0, [fp, #-8]
   11960:	ldr	r3, [fp, #-8]
   11964:	cmn	r3, #1
   11968:	beq	11f00 <__assert_fail@plt+0xe3c>
   1196c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11970:	ldr	r0, [fp, #-8]
   11974:	bl	10fc8 <ungetc@plt>
   11978:	mov	r3, #0
   1197c:	str	r3, [fp, #-8]
   11980:	mov	r0, #1
   11984:	mov	r1, #0
   11988:	bl	116f0 <__assert_fail@plt+0x62c>
   1198c:	mov	r3, r0
   11990:	eor	r3, r3, #1
   11994:	uxtb	r2, r3
   11998:	movw	r3, #45448	; 0xb188
   1199c:	movt	r3, #2
   119a0:	ldrb	r3, [r3]
   119a4:	eor	r3, r3, r2
   119a8:	uxtb	r3, r3
   119ac:	cmp	r3, #0
   119b0:	movne	r3, #1
   119b4:	moveq	r3, #0
   119b8:	strb	r3, [fp, #-17]	; 0xffffffef
   119bc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   119c0:	cmp	r3, #0
   119c4:	cmpeq	r2, #1
   119c8:	bne	11c34 <__assert_fail@plt+0xb70>
   119cc:	ldrb	r3, [fp, #-17]	; 0xffffffef
   119d0:	cmp	r3, #0
   119d4:	beq	11c34 <__assert_fail@plt+0xb70>
   119d8:	movw	r3, #45450	; 0xb18a
   119dc:	movt	r3, #2
   119e0:	ldrb	r3, [r3]
   119e4:	mov	r2, r3
   119e8:	movw	r3, #45316	; 0xb104
   119ec:	movt	r3, #2
   119f0:	ldrb	r3, [r3]
   119f4:	mov	r1, r3
   119f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   119fc:	str	r3, [sp, #8]
   11a00:	str	r1, [sp, #4]
   11a04:	str	r2, [sp]
   11a08:	mvn	r3, #0
   11a0c:	mov	r2, #0
   11a10:	movw	r1, #45444	; 0xb184
   11a14:	movt	r1, #2
   11a18:	movw	r0, #45440	; 0xb180
   11a1c:	movt	r0, #2
   11a20:	bl	139b8 <__assert_fail@plt+0x28f4>
   11a24:	str	r0, [fp, #-24]	; 0xffffffe8
   11a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a2c:	cmp	r3, #0
   11a30:	bge	11a84 <__assert_fail@plt+0x9c0>
   11a34:	movw	r3, #45440	; 0xb180
   11a38:	movt	r3, #2
   11a3c:	ldr	r3, [r3]
   11a40:	mov	r0, r3
   11a44:	bl	13824 <__assert_fail@plt+0x2760>
   11a48:	movw	r3, #45440	; 0xb180
   11a4c:	movt	r3, #2
   11a50:	mov	r2, #0
   11a54:	str	r2, [r3]
   11a58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11a5c:	bl	10f2c <ferror_unlocked@plt>
   11a60:	mov	r3, r0
   11a64:	cmp	r3, #0
   11a68:	bne	11f0c <__assert_fail@plt+0xe48>
   11a6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11a70:	bl	110a0 <feof_unlocked@plt>
   11a74:	mov	r3, r0
   11a78:	cmp	r3, #0
   11a7c:	bne	11f0c <__assert_fail@plt+0xe48>
   11a80:	bl	17ae0 <__assert_fail@plt+0x6a1c>
   11a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a88:	str	r3, [fp, #-28]	; 0xffffffe4
   11a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a90:	cmp	r3, #0
   11a94:	bne	11ab8 <__assert_fail@plt+0x9f4>
   11a98:	movw	r3, #39188	; 0x9914
   11a9c:	movt	r3, #1
   11aa0:	movw	r2, #315	; 0x13b
   11aa4:	movw	r1, #38788	; 0x9784
   11aa8:	movt	r1, #1
   11aac:	movw	r0, #38800	; 0x9790
   11ab0:	movt	r0, #1
   11ab4:	bl	110c4 <__assert_fail@plt>
   11ab8:	mov	r3, #0
   11abc:	str	r3, [fp, #-8]
   11ac0:	movw	r3, #45440	; 0xb180
   11ac4:	movt	r3, #2
   11ac8:	ldr	r2, [r3]
   11acc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ad0:	sub	r3, r3, #1
   11ad4:	add	r3, r2, r3
   11ad8:	ldrb	r3, [r3]
   11adc:	mov	r0, r3
   11ae0:	bl	111c0 <__assert_fail@plt+0xfc>
   11ae4:	mov	r3, r0
   11ae8:	mov	r2, r3
   11aec:	movw	r3, #45450	; 0xb18a
   11af0:	movt	r3, #2
   11af4:	ldrb	r3, [r3]
   11af8:	cmp	r2, r3
   11afc:	beq	11b90 <__assert_fail@plt+0xacc>
   11b00:	movw	r3, #45448	; 0xb188
   11b04:	movt	r3, #2
   11b08:	ldrb	r3, [r3]
   11b0c:	cmp	r3, #0
   11b10:	bne	11ef8 <__assert_fail@plt+0xe34>
   11b14:	movw	r3, #45440	; 0xb180
   11b18:	movt	r3, #2
   11b1c:	ldr	r0, [r3]
   11b20:	movw	r3, #45420	; 0xb16c
   11b24:	movt	r3, #2
   11b28:	ldr	r3, [r3]
   11b2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11b30:	mov	r1, #1
   11b34:	bl	10e9c <fwrite_unlocked@plt>
   11b38:	movw	r3, #45440	; 0xb180
   11b3c:	movt	r3, #2
   11b40:	ldr	r2, [r3]
   11b44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11b48:	sub	r3, r3, #1
   11b4c:	add	r3, r2, r3
   11b50:	ldrb	r2, [r3]
   11b54:	movw	r3, #45316	; 0xb104
   11b58:	movt	r3, #2
   11b5c:	ldrb	r3, [r3]
   11b60:	cmp	r2, r3
   11b64:	beq	11b7c <__assert_fail@plt+0xab8>
   11b68:	movw	r3, #45316	; 0xb104
   11b6c:	movt	r3, #2
   11b70:	ldrb	r3, [r3]
   11b74:	mov	r0, r3
   11b78:	bl	110ac <putchar_unlocked@plt>
   11b7c:	movw	r3, #45316	; 0xb104
   11b80:	movt	r3, #2
   11b84:	ldrb	r3, [r3]
   11b88:	str	r3, [fp, #-8]
   11b8c:	b	11ef8 <__assert_fail@plt+0xe34>
   11b90:	mov	r0, #1
   11b94:	mov	r1, #0
   11b98:	bl	116f0 <__assert_fail@plt+0x62c>
   11b9c:	mov	r3, r0
   11ba0:	cmp	r3, #0
   11ba4:	beq	11c28 <__assert_fail@plt+0xb64>
   11ba8:	movw	r3, #45440	; 0xb180
   11bac:	movt	r3, #2
   11bb0:	ldr	r0, [r3]
   11bb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11bb8:	sub	r2, r3, #1
   11bbc:	movw	r3, #45420	; 0xb16c
   11bc0:	movt	r3, #2
   11bc4:	ldr	r3, [r3]
   11bc8:	mov	r1, #1
   11bcc:	bl	10e9c <fwrite_unlocked@plt>
   11bd0:	movw	r3, #45450	; 0xb18a
   11bd4:	movt	r3, #2
   11bd8:	ldrb	r2, [r3]
   11bdc:	movw	r3, #45316	; 0xb104
   11be0:	movt	r3, #2
   11be4:	ldrb	r3, [r3]
   11be8:	cmp	r2, r3
   11bec:	bne	11c20 <__assert_fail@plt+0xb5c>
   11bf0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11bf4:	bl	10ec0 <getc_unlocked@plt>
   11bf8:	str	r0, [fp, #-32]	; 0xffffffe0
   11bfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c00:	cmn	r3, #1
   11c04:	beq	11c28 <__assert_fail@plt+0xb64>
   11c08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c10:	bl	10fc8 <ungetc@plt>
   11c14:	mov	r3, #1
   11c18:	strb	r3, [fp, #-9]
   11c1c:	b	11c28 <__assert_fail@plt+0xb64>
   11c20:	mov	r3, #1
   11c24:	strb	r3, [fp, #-9]
   11c28:	sub	r3, fp, #44	; 0x2c
   11c2c:	mov	r0, r3
   11c30:	bl	1166c <__assert_fail@plt+0x5a8>
   11c34:	ldr	r3, [fp, #-8]
   11c38:	str	r3, [fp, #-16]
   11c3c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11c40:	mov	r0, r2
   11c44:	mov	r1, r3
   11c48:	bl	116f0 <__assert_fail@plt+0x62c>
   11c4c:	mov	r3, r0
   11c50:	cmp	r3, #0
   11c54:	beq	11d08 <__assert_fail@plt+0xc44>
   11c58:	ldrb	r3, [fp, #-9]
   11c5c:	cmp	r3, #0
   11c60:	beq	11c90 <__assert_fail@plt+0xbcc>
   11c64:	movw	r3, #45456	; 0xb190
   11c68:	movt	r3, #2
   11c6c:	ldr	r0, [r3]
   11c70:	movw	r3, #45452	; 0xb18c
   11c74:	movt	r3, #2
   11c78:	ldr	r2, [r3]
   11c7c:	movw	r3, #45420	; 0xb16c
   11c80:	movt	r3, #2
   11c84:	ldr	r3, [r3]
   11c88:	mov	r1, #1
   11c8c:	bl	10e9c <fwrite_unlocked@plt>
   11c90:	mov	r3, #1
   11c94:	strb	r3, [fp, #-9]
   11c98:	b	11cac <__assert_fail@plt+0xbe8>
   11c9c:	ldr	r0, [fp, #-8]
   11ca0:	bl	110ac <putchar_unlocked@plt>
   11ca4:	ldr	r3, [fp, #-8]
   11ca8:	str	r3, [fp, #-16]
   11cac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11cb0:	bl	10ec0 <getc_unlocked@plt>
   11cb4:	str	r0, [fp, #-8]
   11cb8:	movw	r3, #45450	; 0xb18a
   11cbc:	movt	r3, #2
   11cc0:	ldrb	r3, [r3]
   11cc4:	mov	r2, r3
   11cc8:	ldr	r3, [fp, #-8]
   11ccc:	cmp	r3, r2
   11cd0:	beq	11d58 <__assert_fail@plt+0xc94>
   11cd4:	movw	r3, #45316	; 0xb104
   11cd8:	movt	r3, #2
   11cdc:	ldrb	r3, [r3]
   11ce0:	mov	r2, r3
   11ce4:	ldr	r3, [fp, #-8]
   11ce8:	cmp	r3, r2
   11cec:	beq	11d58 <__assert_fail@plt+0xc94>
   11cf0:	ldr	r3, [fp, #-8]
   11cf4:	cmn	r3, #1
   11cf8:	bne	11c9c <__assert_fail@plt+0xbd8>
   11cfc:	b	11d58 <__assert_fail@plt+0xc94>
   11d00:	ldr	r3, [fp, #-8]
   11d04:	str	r3, [fp, #-16]
   11d08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11d0c:	bl	10ec0 <getc_unlocked@plt>
   11d10:	str	r0, [fp, #-8]
   11d14:	movw	r3, #45450	; 0xb18a
   11d18:	movt	r3, #2
   11d1c:	ldrb	r3, [r3]
   11d20:	mov	r2, r3
   11d24:	ldr	r3, [fp, #-8]
   11d28:	cmp	r3, r2
   11d2c:	beq	11d58 <__assert_fail@plt+0xc94>
   11d30:	movw	r3, #45316	; 0xb104
   11d34:	movt	r3, #2
   11d38:	ldrb	r3, [r3]
   11d3c:	mov	r2, r3
   11d40:	ldr	r3, [fp, #-8]
   11d44:	cmp	r3, r2
   11d48:	beq	11d58 <__assert_fail@plt+0xc94>
   11d4c:	ldr	r3, [fp, #-8]
   11d50:	cmn	r3, #1
   11d54:	bne	11d00 <__assert_fail@plt+0xc3c>
   11d58:	movw	r3, #45450	; 0xb18a
   11d5c:	movt	r3, #2
   11d60:	ldrb	r2, [r3]
   11d64:	movw	r3, #45316	; 0xb104
   11d68:	movt	r3, #2
   11d6c:	ldrb	r3, [r3]
   11d70:	cmp	r2, r3
   11d74:	bne	11dc4 <__assert_fail@plt+0xd00>
   11d78:	movw	r3, #45450	; 0xb18a
   11d7c:	movt	r3, #2
   11d80:	ldrb	r3, [r3]
   11d84:	mov	r2, r3
   11d88:	ldr	r3, [fp, #-8]
   11d8c:	cmp	r3, r2
   11d90:	bne	11dc4 <__assert_fail@plt+0xd00>
   11d94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11d98:	bl	10ec0 <getc_unlocked@plt>
   11d9c:	str	r0, [fp, #-36]	; 0xffffffdc
   11da0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11da4:	cmn	r3, #1
   11da8:	beq	11dbc <__assert_fail@plt+0xcf8>
   11dac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11db4:	bl	10fc8 <ungetc@plt>
   11db8:	b	11dc4 <__assert_fail@plt+0xd00>
   11dbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11dc0:	str	r3, [fp, #-8]
   11dc4:	movw	r3, #45450	; 0xb18a
   11dc8:	movt	r3, #2
   11dcc:	ldrb	r3, [r3]
   11dd0:	mov	r2, r3
   11dd4:	ldr	r3, [fp, #-8]
   11dd8:	cmp	r3, r2
   11ddc:	bne	11df0 <__assert_fail@plt+0xd2c>
   11de0:	sub	r3, fp, #44	; 0x2c
   11de4:	mov	r0, r3
   11de8:	bl	1166c <__assert_fail@plt+0x5a8>
   11dec:	b	119bc <__assert_fail@plt+0x8f8>
   11df0:	movw	r3, #45316	; 0xb104
   11df4:	movt	r3, #2
   11df8:	ldrb	r3, [r3]
   11dfc:	mov	r2, r3
   11e00:	ldr	r3, [fp, #-8]
   11e04:	cmp	r3, r2
   11e08:	beq	11e18 <__assert_fail@plt+0xd54>
   11e0c:	ldr	r3, [fp, #-8]
   11e10:	cmn	r3, #1
   11e14:	bne	119bc <__assert_fail@plt+0x8f8>
   11e18:	ldrb	r3, [fp, #-9]
   11e1c:	cmp	r3, #0
   11e20:	bne	11e50 <__assert_fail@plt+0xd8c>
   11e24:	movw	r3, #45448	; 0xb188
   11e28:	movt	r3, #2
   11e2c:	ldrb	r3, [r3]
   11e30:	eor	r3, r3, #1
   11e34:	uxtb	r3, r3
   11e38:	cmp	r3, #0
   11e3c:	bne	11e50 <__assert_fail@plt+0xd8c>
   11e40:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11e44:	cmp	r3, #0
   11e48:	cmpeq	r2, #1
   11e4c:	beq	11ebc <__assert_fail@plt+0xdf8>
   11e50:	movw	r3, #45316	; 0xb104
   11e54:	movt	r3, #2
   11e58:	ldrb	r3, [r3]
   11e5c:	mov	r2, r3
   11e60:	ldr	r3, [fp, #-8]
   11e64:	cmp	r3, r2
   11e68:	beq	11ea8 <__assert_fail@plt+0xde4>
   11e6c:	movw	r3, #45316	; 0xb104
   11e70:	movt	r3, #2
   11e74:	ldrb	r3, [r3]
   11e78:	mov	r2, r3
   11e7c:	ldr	r3, [fp, #-16]
   11e80:	cmp	r3, r2
   11e84:	bne	11ea8 <__assert_fail@plt+0xde4>
   11e88:	movw	r3, #45450	; 0xb18a
   11e8c:	movt	r3, #2
   11e90:	ldrb	r2, [r3]
   11e94:	movw	r3, #45316	; 0xb104
   11e98:	movt	r3, #2
   11e9c:	ldrb	r3, [r3]
   11ea0:	cmp	r2, r3
   11ea4:	bne	11ebc <__assert_fail@plt+0xdf8>
   11ea8:	movw	r3, #45316	; 0xb104
   11eac:	movt	r3, #2
   11eb0:	ldrb	r3, [r3]
   11eb4:	mov	r0, r3
   11eb8:	bl	110ac <putchar_unlocked@plt>
   11ebc:	ldr	r3, [fp, #-8]
   11ec0:	cmn	r3, #1
   11ec4:	beq	11f08 <__assert_fail@plt+0xe44>
   11ec8:	mov	r2, #1
   11ecc:	mov	r3, #0
   11ed0:	strd	r2, [fp, #-44]	; 0xffffffd4
   11ed4:	movw	r3, #45464	; 0xb198
   11ed8:	movt	r3, #2
   11edc:	ldr	r2, [r3]
   11ee0:	movw	r3, #45436	; 0xb17c
   11ee4:	movt	r3, #2
   11ee8:	str	r2, [r3]
   11eec:	mov	r3, #0
   11ef0:	strb	r3, [fp, #-9]
   11ef4:	b	119bc <__assert_fail@plt+0x8f8>
   11ef8:	nop	{0}
   11efc:	b	119bc <__assert_fail@plt+0x8f8>
   11f00:	nop	{0}
   11f04:	b	11f0c <__assert_fail@plt+0xe48>
   11f08:	nop	{0}
   11f0c:	sub	sp, fp, #4
   11f10:	ldr	fp, [sp]
   11f14:	add	sp, sp, #4
   11f18:	pop	{pc}		; (ldr pc, [sp], #4)
   11f1c:	str	r4, [sp, #-12]!
   11f20:	str	fp, [sp, #4]
   11f24:	str	lr, [sp, #8]
   11f28:	add	fp, sp, #8
   11f2c:	sub	sp, sp, #20
   11f30:	str	r0, [fp, #-24]	; 0xffffffe8
   11f34:	str	r1, [fp, #-28]	; 0xffffffe4
   11f38:	movw	r1, #38816	; 0x97a0
   11f3c:	movt	r1, #1
   11f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f44:	bl	10e24 <strcmp@plt>
   11f48:	mov	r3, r0
   11f4c:	cmp	r3, #0
   11f50:	bne	11f78 <__assert_fail@plt+0xeb4>
   11f54:	movw	r3, #45460	; 0xb194
   11f58:	movt	r3, #2
   11f5c:	mov	r2, #1
   11f60:	strb	r2, [r3]
   11f64:	movw	r3, #45416	; 0xb168
   11f68:	movt	r3, #2
   11f6c:	ldr	r3, [r3]
   11f70:	str	r3, [fp, #-16]
   11f74:	b	11fd4 <__assert_fail@plt+0xf10>
   11f78:	movw	r1, #38820	; 0x97a4
   11f7c:	movt	r1, #1
   11f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f84:	bl	11064 <fopen64@plt>
   11f88:	str	r0, [fp, #-16]
   11f8c:	ldr	r3, [fp, #-16]
   11f90:	cmp	r3, #0
   11f94:	bne	11fd4 <__assert_fail@plt+0xf10>
   11f98:	bl	10fd4 <__errno_location@plt>
   11f9c:	mov	r3, r0
   11fa0:	ldr	r4, [r3]
   11fa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11fa8:	mov	r1, #3
   11fac:	mov	r0, #0
   11fb0:	bl	166e8 <__assert_fail@plt+0x5624>
   11fb4:	mov	r3, r0
   11fb8:	movw	r2, #38824	; 0x97a8
   11fbc:	movt	r2, #1
   11fc0:	mov	r1, r4
   11fc4:	mov	r0, #0
   11fc8:	bl	10f44 <error@plt>
   11fcc:	mov	r3, #0
   11fd0:	b	120a4 <__assert_fail@plt+0xfe0>
   11fd4:	mov	r1, #2
   11fd8:	ldr	r0, [fp, #-16]
   11fdc:	bl	135f8 <__assert_fail@plt+0x2534>
   11fe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fe4:	ldr	r0, [fp, #-16]
   11fe8:	blx	r3
   11fec:	bl	10fd4 <__errno_location@plt>
   11ff0:	mov	r3, r0
   11ff4:	ldr	r3, [r3]
   11ff8:	str	r3, [fp, #-20]	; 0xffffffec
   11ffc:	ldr	r0, [fp, #-16]
   12000:	bl	10f2c <ferror_unlocked@plt>
   12004:	mov	r3, r0
   12008:	cmp	r3, #0
   1200c:	bne	12018 <__assert_fail@plt+0xf54>
   12010:	mov	r3, #0
   12014:	str	r3, [fp, #-20]	; 0xffffffec
   12018:	movw	r1, #38816	; 0x97a0
   1201c:	movt	r1, #1
   12020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12024:	bl	10e24 <strcmp@plt>
   12028:	mov	r3, r0
   1202c:	cmp	r3, #0
   12030:	bne	12040 <__assert_fail@plt+0xf7c>
   12034:	ldr	r0, [fp, #-16]
   12038:	bl	11058 <clearerr_unlocked@plt>
   1203c:	b	12064 <__assert_fail@plt+0xfa0>
   12040:	ldr	r0, [fp, #-16]
   12044:	bl	13660 <__assert_fail@plt+0x259c>
   12048:	mov	r3, r0
   1204c:	cmn	r3, #1
   12050:	bne	12064 <__assert_fail@plt+0xfa0>
   12054:	bl	10fd4 <__errno_location@plt>
   12058:	mov	r3, r0
   1205c:	ldr	r3, [r3]
   12060:	str	r3, [fp, #-20]	; 0xffffffec
   12064:	ldr	r3, [fp, #-20]	; 0xffffffec
   12068:	cmp	r3, #0
   1206c:	beq	120a0 <__assert_fail@plt+0xfdc>
   12070:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12074:	mov	r1, #3
   12078:	mov	r0, #0
   1207c:	bl	166e8 <__assert_fail@plt+0x5624>
   12080:	mov	r3, r0
   12084:	movw	r2, #38824	; 0x97a8
   12088:	movt	r2, #1
   1208c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12090:	mov	r0, #0
   12094:	bl	10f44 <error@plt>
   12098:	mov	r3, #0
   1209c:	b	120a4 <__assert_fail@plt+0xfe0>
   120a0:	mov	r3, #1
   120a4:	mov	r0, r3
   120a8:	sub	sp, fp, #8
   120ac:	ldr	r4, [sp]
   120b0:	ldr	fp, [sp, #4]
   120b4:	add	sp, sp, #8
   120b8:	pop	{pc}		; (ldr pc, [sp], #4)
   120bc:	str	fp, [sp, #-8]!
   120c0:	str	lr, [sp, #4]
   120c4:	add	fp, sp, #4
   120c8:	sub	sp, sp, #40	; 0x28
   120cc:	str	r0, [fp, #-24]	; 0xffffffe8
   120d0:	str	r1, [fp, #-28]	; 0xffffffe4
   120d4:	mov	r3, #0
   120d8:	strb	r3, [fp, #-6]
   120dc:	mov	r3, #0
   120e0:	strb	r3, [fp, #-7]
   120e4:	mov	r3, #0
   120e8:	str	r3, [fp, #-12]
   120ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   120f0:	ldr	r3, [r3]
   120f4:	mov	r0, r3
   120f8:	bl	14084 <__assert_fail@plt+0x2fc0>
   120fc:	movw	r1, #36784	; 0x8fb0
   12100:	movt	r1, #1
   12104:	mov	r0, #6
   12108:	bl	11034 <setlocale@plt>
   1210c:	movw	r1, #38828	; 0x97ac
   12110:	movt	r1, #1
   12114:	movw	r0, #36808	; 0x8fc8
   12118:	movt	r0, #1
   1211c:	bl	1107c <bindtextdomain@plt>
   12120:	movw	r0, #36808	; 0x8fc8
   12124:	movt	r0, #1
   12128:	bl	10ed8 <textdomain@plt>
   1212c:	movw	r0, #13404	; 0x345c
   12130:	movt	r0, #1
   12134:	bl	18e10 <__assert_fail@plt+0x7d4c>
   12138:	movw	r3, #45448	; 0xb188
   1213c:	movt	r3, #2
   12140:	mov	r2, #0
   12144:	strb	r2, [r3]
   12148:	movw	r3, #45450	; 0xb18a
   1214c:	movt	r3, #2
   12150:	mov	r2, #0
   12154:	strb	r2, [r3]
   12158:	movw	r3, #45460	; 0xb194
   1215c:	movt	r3, #2
   12160:	mov	r2, #0
   12164:	strb	r2, [r3]
   12168:	b	12400 <__assert_fail@plt+0x133c>
   1216c:	ldr	r3, [fp, #-16]
   12170:	cmp	r3, #102	; 0x66
   12174:	beq	12224 <__assert_fail@plt+0x1160>
   12178:	ldr	r3, [fp, #-16]
   1217c:	cmp	r3, #102	; 0x66
   12180:	bgt	121c8 <__assert_fail@plt+0x1104>
   12184:	ldr	r3, [fp, #-16]
   12188:	cmp	r3, #99	; 0x63
   1218c:	bgt	121b8 <__assert_fail@plt+0x10f4>
   12190:	ldr	r3, [fp, #-16]
   12194:	cmp	r3, #98	; 0x62
   12198:	bge	1221c <__assert_fail@plt+0x1158>
   1219c:	ldr	r3, [fp, #-16]
   121a0:	cmn	r3, #3
   121a4:	beq	12394 <__assert_fail@plt+0x12d0>
   121a8:	ldr	r3, [fp, #-16]
   121ac:	cmn	r3, #2
   121b0:	beq	1238c <__assert_fail@plt+0x12c8>
   121b4:	b	123f8 <__assert_fail@plt+0x1334>
   121b8:	ldr	r3, [fp, #-16]
   121bc:	cmp	r3, #100	; 0x64
   121c0:	beq	1226c <__assert_fail@plt+0x11a8>
   121c4:	b	123f8 <__assert_fail@plt+0x1334>
   121c8:	ldr	r3, [fp, #-16]
   121cc:	cmp	r3, #122	; 0x7a
   121d0:	beq	12364 <__assert_fail@plt+0x12a0>
   121d4:	ldr	r3, [fp, #-16]
   121d8:	cmp	r3, #122	; 0x7a
   121dc:	bgt	121fc <__assert_fail@plt+0x1138>
   121e0:	ldr	r3, [fp, #-16]
   121e4:	cmp	r3, #110	; 0x6e
   121e8:	beq	12400 <__assert_fail@plt+0x133c>
   121ec:	ldr	r3, [fp, #-16]
   121f0:	cmp	r3, #115	; 0x73
   121f4:	beq	12350 <__assert_fail@plt+0x128c>
   121f8:	b	123f8 <__assert_fail@plt+0x1334>
   121fc:	ldr	r3, [fp, #-16]
   12200:	cmp	r3, #256	; 0x100
   12204:	beq	122f0 <__assert_fail@plt+0x122c>
   12208:	ldr	r3, [fp, #-16]
   1220c:	movw	r2, #257	; 0x101
   12210:	cmp	r3, r2
   12214:	beq	12378 <__assert_fail@plt+0x12b4>
   12218:	b	123f8 <__assert_fail@plt+0x1334>
   1221c:	mov	r3, #1
   12220:	strb	r3, [fp, #-7]
   12224:	ldr	r3, [fp, #-12]
   12228:	cmp	r3, #0
   1222c:	beq	12258 <__assert_fail@plt+0x1194>
   12230:	movw	r0, #38852	; 0x97c4
   12234:	movt	r0, #1
   12238:	bl	10fa4 <gettext@plt>
   1223c:	mov	r3, r0
   12240:	mov	r2, r3
   12244:	mov	r1, #0
   12248:	mov	r0, #0
   1224c:	bl	10f44 <error@plt>
   12250:	mov	r0, #1
   12254:	bl	1143c <__assert_fail@plt+0x378>
   12258:	movw	r3, #45424	; 0xb170
   1225c:	movt	r3, #2
   12260:	ldr	r3, [r3]
   12264:	str	r3, [fp, #-12]
   12268:	b	12400 <__assert_fail@plt+0x133c>
   1226c:	movw	r3, #45424	; 0xb170
   12270:	movt	r3, #2
   12274:	ldr	r3, [r3]
   12278:	ldrb	r3, [r3]
   1227c:	cmp	r3, #0
   12280:	beq	122c8 <__assert_fail@plt+0x1204>
   12284:	movw	r3, #45424	; 0xb170
   12288:	movt	r3, #2
   1228c:	ldr	r3, [r3]
   12290:	add	r3, r3, #1
   12294:	ldrb	r3, [r3]
   12298:	cmp	r3, #0
   1229c:	beq	122c8 <__assert_fail@plt+0x1204>
   122a0:	movw	r0, #38884	; 0x97e4
   122a4:	movt	r0, #1
   122a8:	bl	10fa4 <gettext@plt>
   122ac:	mov	r3, r0
   122b0:	mov	r2, r3
   122b4:	mov	r1, #0
   122b8:	mov	r0, #0
   122bc:	bl	10f44 <error@plt>
   122c0:	mov	r0, #1
   122c4:	bl	1143c <__assert_fail@plt+0x378>
   122c8:	movw	r3, #45424	; 0xb170
   122cc:	movt	r3, #2
   122d0:	ldr	r3, [r3]
   122d4:	ldrb	r2, [r3]
   122d8:	movw	r3, #45450	; 0xb18a
   122dc:	movt	r3, #2
   122e0:	strb	r2, [r3]
   122e4:	mov	r3, #1
   122e8:	strb	r3, [fp, #-6]
   122ec:	b	12400 <__assert_fail@plt+0x133c>
   122f0:	movw	r3, #45424	; 0xb170
   122f4:	movt	r3, #2
   122f8:	ldr	r3, [r3]
   122fc:	ldrb	r3, [r3]
   12300:	cmp	r3, #0
   12304:	beq	12324 <__assert_fail@plt+0x1260>
   12308:	movw	r3, #45424	; 0xb170
   1230c:	movt	r3, #2
   12310:	ldr	r3, [r3]
   12314:	mov	r0, r3
   12318:	bl	10fb0 <strlen@plt>
   1231c:	mov	r2, r0
   12320:	b	12328 <__assert_fail@plt+0x1264>
   12324:	mov	r2, #1
   12328:	movw	r3, #45452	; 0xb18c
   1232c:	movt	r3, #2
   12330:	str	r2, [r3]
   12334:	movw	r3, #45424	; 0xb170
   12338:	movt	r3, #2
   1233c:	ldr	r2, [r3]
   12340:	movw	r3, #45456	; 0xb190
   12344:	movt	r3, #2
   12348:	str	r2, [r3]
   1234c:	b	12400 <__assert_fail@plt+0x133c>
   12350:	movw	r3, #45448	; 0xb188
   12354:	movt	r3, #2
   12358:	mov	r2, #1
   1235c:	strb	r2, [r3]
   12360:	b	12400 <__assert_fail@plt+0x133c>
   12364:	movw	r3, #45316	; 0xb104
   12368:	movt	r3, #2
   1236c:	mov	r2, #0
   12370:	strb	r2, [r3]
   12374:	b	12400 <__assert_fail@plt+0x133c>
   12378:	movw	r3, #45449	; 0xb189
   1237c:	movt	r3, #2
   12380:	mov	r2, #1
   12384:	strb	r2, [r3]
   12388:	b	12400 <__assert_fail@plt+0x133c>
   1238c:	mov	r0, #0
   12390:	bl	1143c <__assert_fail@plt+0x378>
   12394:	movw	r3, #45420	; 0xb16c
   12398:	movt	r3, #2
   1239c:	ldr	r0, [r3]
   123a0:	movw	r3, #45320	; 0xb108
   123a4:	movt	r3, #2
   123a8:	ldr	r2, [r3]
   123ac:	mov	r3, #0
   123b0:	str	r3, [sp, #12]
   123b4:	movw	r3, #38928	; 0x9810
   123b8:	movt	r3, #1
   123bc:	str	r3, [sp, #8]
   123c0:	movw	r3, #38944	; 0x9820
   123c4:	movt	r3, #1
   123c8:	str	r3, [sp, #4]
   123cc:	movw	r3, #38960	; 0x9830
   123d0:	movt	r3, #1
   123d4:	str	r3, [sp]
   123d8:	mov	r3, r2
   123dc:	movw	r2, #36600	; 0x8ef8
   123e0:	movt	r2, #1
   123e4:	movw	r1, #38784	; 0x9780
   123e8:	movt	r1, #1
   123ec:	bl	170ec <__assert_fail@plt+0x6028>
   123f0:	mov	r0, #0
   123f4:	bl	10f98 <exit@plt>
   123f8:	mov	r0, #1
   123fc:	bl	1143c <__assert_fail@plt+0x378>
   12400:	mov	r3, #0
   12404:	str	r3, [sp]
   12408:	movw	r3, #37084	; 0x90dc
   1240c:	movt	r3, #1
   12410:	movw	r2, #38976	; 0x9840
   12414:	movt	r2, #1
   12418:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1241c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12420:	bl	10f80 <getopt_long@plt>
   12424:	str	r0, [fp, #-16]
   12428:	ldr	r3, [fp, #-16]
   1242c:	cmn	r3, #1
   12430:	bne	1216c <__assert_fail@plt+0x10a8>
   12434:	ldr	r3, [fp, #-12]
   12438:	cmp	r3, #0
   1243c:	bne	12468 <__assert_fail@plt+0x13a4>
   12440:	movw	r0, #38988	; 0x984c
   12444:	movt	r0, #1
   12448:	bl	10fa4 <gettext@plt>
   1244c:	mov	r3, r0
   12450:	mov	r2, r3
   12454:	mov	r1, #0
   12458:	mov	r0, #0
   1245c:	bl	10f44 <error@plt>
   12460:	mov	r0, #1
   12464:	bl	1143c <__assert_fail@plt+0x378>
   12468:	ldrb	r3, [fp, #-7]
   1246c:	cmp	r3, #0
   12470:	beq	124e4 <__assert_fail@plt+0x1420>
   12474:	ldrb	r3, [fp, #-6]
   12478:	cmp	r3, #0
   1247c:	beq	124a8 <__assert_fail@plt+0x13e4>
   12480:	movw	r0, #39044	; 0x9884
   12484:	movt	r0, #1
   12488:	bl	10fa4 <gettext@plt>
   1248c:	mov	r3, r0
   12490:	mov	r2, r3
   12494:	mov	r1, #0
   12498:	mov	r0, #0
   1249c:	bl	10f44 <error@plt>
   124a0:	mov	r0, #1
   124a4:	bl	1143c <__assert_fail@plt+0x378>
   124a8:	movw	r3, #45448	; 0xb188
   124ac:	movt	r3, #2
   124b0:	ldrb	r3, [r3]
   124b4:	cmp	r3, #0
   124b8:	beq	124e4 <__assert_fail@plt+0x1420>
   124bc:	movw	r0, #39112	; 0x98c8
   124c0:	movt	r0, #1
   124c4:	bl	10fa4 <gettext@plt>
   124c8:	mov	r3, r0
   124cc:	mov	r2, r3
   124d0:	mov	r1, #0
   124d4:	mov	r0, #0
   124d8:	bl	10f44 <error@plt>
   124dc:	mov	r0, #1
   124e0:	bl	1143c <__assert_fail@plt+0x378>
   124e4:	ldrb	r3, [fp, #-7]
   124e8:	cmp	r3, #0
   124ec:	beq	124f8 <__assert_fail@plt+0x1434>
   124f0:	mov	r2, #4
   124f4:	b	124fc <__assert_fail@plt+0x1438>
   124f8:	mov	r2, #0
   124fc:	movw	r3, #45449	; 0xb189
   12500:	movt	r3, #2
   12504:	ldrb	r3, [r3]
   12508:	cmp	r3, #0
   1250c:	beq	12518 <__assert_fail@plt+0x1454>
   12510:	mov	r3, #2
   12514:	b	1251c <__assert_fail@plt+0x1458>
   12518:	mov	r3, #0
   1251c:	orr	r3, r2, r3
   12520:	mov	r1, r3
   12524:	ldr	r0, [fp, #-12]
   12528:	bl	12a74 <__assert_fail@plt+0x19b0>
   1252c:	ldrb	r3, [fp, #-6]
   12530:	eor	r3, r3, #1
   12534:	uxtb	r3, r3
   12538:	cmp	r3, #0
   1253c:	beq	12550 <__assert_fail@plt+0x148c>
   12540:	movw	r3, #45450	; 0xb18a
   12544:	movt	r3, #2
   12548:	mov	r2, #9
   1254c:	strb	r2, [r3]
   12550:	movw	r3, #45456	; 0xb190
   12554:	movt	r3, #2
   12558:	ldr	r3, [r3]
   1255c:	cmp	r3, #0
   12560:	bne	125a0 <__assert_fail@plt+0x14dc>
   12564:	movw	r3, #45450	; 0xb18a
   12568:	movt	r3, #2
   1256c:	ldrb	r2, [r3]
   12570:	movw	r3, #45432	; 0xb178
   12574:	movt	r3, #2
   12578:	strb	r2, [r3]
   1257c:	movw	r3, #45456	; 0xb190
   12580:	movt	r3, #2
   12584:	movw	r2, #45432	; 0xb178
   12588:	movt	r2, #2
   1258c:	str	r2, [r3]
   12590:	movw	r3, #45452	; 0xb18c
   12594:	movt	r3, #2
   12598:	mov	r2, #1
   1259c:	str	r2, [r3]
   125a0:	ldrb	r3, [fp, #-7]
   125a4:	cmp	r3, #0
   125a8:	beq	125b8 <__assert_fail@plt+0x14f4>
   125ac:	movw	r3, #6016	; 0x1780
   125b0:	movt	r3, #1
   125b4:	b	125c0 <__assert_fail@plt+0x14fc>
   125b8:	movw	r3, #6420	; 0x1914
   125bc:	movt	r3, #1
   125c0:	str	r3, [fp, #-20]	; 0xffffffec
   125c4:	movw	r3, #45400	; 0xb158
   125c8:	movt	r3, #2
   125cc:	ldr	r3, [r3]
   125d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   125d4:	cmp	r2, r3
   125d8:	bne	125f8 <__assert_fail@plt+0x1534>
   125dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   125e0:	movw	r0, #38816	; 0x97a0
   125e4:	movt	r0, #1
   125e8:	bl	11f1c <__assert_fail@plt+0xe58>
   125ec:	mov	r3, r0
   125f0:	strb	r3, [fp, #-5]
   125f4:	b	12680 <__assert_fail@plt+0x15bc>
   125f8:	mov	r3, #1
   125fc:	strb	r3, [fp, #-5]
   12600:	b	12668 <__assert_fail@plt+0x15a4>
   12604:	movw	r3, #45400	; 0xb158
   12608:	movt	r3, #2
   1260c:	ldr	r3, [r3]
   12610:	lsl	r3, r3, #2
   12614:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12618:	add	r3, r2, r3
   1261c:	ldr	r3, [r3]
   12620:	ldr	r1, [fp, #-20]	; 0xffffffec
   12624:	mov	r0, r3
   12628:	bl	11f1c <__assert_fail@plt+0xe58>
   1262c:	mov	r3, r0
   12630:	mov	r2, r3
   12634:	ldrb	r3, [fp, #-5]
   12638:	and	r3, r3, r2
   1263c:	cmp	r3, #0
   12640:	movne	r3, #1
   12644:	moveq	r3, #0
   12648:	strb	r3, [fp, #-5]
   1264c:	movw	r3, #45400	; 0xb158
   12650:	movt	r3, #2
   12654:	ldr	r3, [r3]
   12658:	add	r2, r3, #1
   1265c:	movw	r3, #45400	; 0xb158
   12660:	movt	r3, #2
   12664:	str	r2, [r3]
   12668:	movw	r3, #45400	; 0xb158
   1266c:	movt	r3, #2
   12670:	ldr	r3, [r3]
   12674:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12678:	cmp	r2, r3
   1267c:	bgt	12604 <__assert_fail@plt+0x1540>
   12680:	movw	r3, #45460	; 0xb194
   12684:	movt	r3, #2
   12688:	ldrb	r3, [r3]
   1268c:	cmp	r3, #0
   12690:	beq	126dc <__assert_fail@plt+0x1618>
   12694:	movw	r3, #45416	; 0xb168
   12698:	movt	r3, #2
   1269c:	ldr	r3, [r3]
   126a0:	mov	r0, r3
   126a4:	bl	13660 <__assert_fail@plt+0x259c>
   126a8:	mov	r3, r0
   126ac:	cmn	r3, #1
   126b0:	bne	126dc <__assert_fail@plt+0x1618>
   126b4:	bl	10fd4 <__errno_location@plt>
   126b8:	mov	r3, r0
   126bc:	ldr	r3, [r3]
   126c0:	movw	r2, #38816	; 0x97a0
   126c4:	movt	r2, #1
   126c8:	mov	r1, r3
   126cc:	mov	r0, #0
   126d0:	bl	10f44 <error@plt>
   126d4:	mov	r3, #0
   126d8:	strb	r3, [fp, #-5]
   126dc:	ldrb	r3, [fp, #-5]
   126e0:	eor	r3, r3, #1
   126e4:	uxtb	r3, r3
   126e8:	mov	r0, r3
   126ec:	sub	sp, fp, #4
   126f0:	ldr	fp, [sp]
   126f4:	add	sp, sp, #4
   126f8:	pop	{pc}		; (ldr pc, [sp], #4)
   126fc:	andeq	r0, r0, r0
   12700:	push	{fp}		; (str fp, [sp, #-4]!)
   12704:	add	fp, sp, #0
   12708:	sub	sp, sp, #12
   1270c:	mov	r3, r0
   12710:	strb	r3, [fp, #-5]
   12714:	ldrb	r3, [fp, #-5]
   12718:	mov	r0, r3
   1271c:	add	sp, fp, #0
   12720:	pop	{fp}		; (ldr fp, [sp], #4)
   12724:	bx	lr
   12728:	str	fp, [sp, #-8]!
   1272c:	str	lr, [sp, #4]
   12730:	add	fp, sp, #4
   12734:	sub	sp, sp, #16
   12738:	strd	r0, [fp, #-12]
   1273c:	strd	r2, [fp, #-20]	; 0xffffffec
   12740:	movw	r3, #45468	; 0xb19c
   12744:	movt	r3, #2
   12748:	ldr	r2, [r3]
   1274c:	movw	r3, #45472	; 0xb1a0
   12750:	movt	r3, #2
   12754:	ldr	r3, [r3]
   12758:	cmp	r2, r3
   1275c:	bne	12790 <__assert_fail@plt+0x16cc>
   12760:	movw	r3, #45464	; 0xb198
   12764:	movt	r3, #2
   12768:	ldr	r3, [r3]
   1276c:	mov	r2, #16
   12770:	movw	r1, #45472	; 0xb1a0
   12774:	movt	r1, #2
   12778:	mov	r0, r3
   1277c:	bl	1755c <__assert_fail@plt+0x6498>
   12780:	mov	r2, r0
   12784:	movw	r3, #45464	; 0xb198
   12788:	movt	r3, #2
   1278c:	str	r2, [r3]
   12790:	movw	r3, #45464	; 0xb198
   12794:	movt	r3, #2
   12798:	ldr	r2, [r3]
   1279c:	movw	r3, #45468	; 0xb19c
   127a0:	movt	r3, #2
   127a4:	ldr	r3, [r3]
   127a8:	lsl	r3, r3, #4
   127ac:	add	r1, r2, r3
   127b0:	ldrd	r2, [fp, #-12]
   127b4:	strd	r2, [r1]
   127b8:	movw	r3, #45464	; 0xb198
   127bc:	movt	r3, #2
   127c0:	ldr	r2, [r3]
   127c4:	movw	r3, #45468	; 0xb19c
   127c8:	movt	r3, #2
   127cc:	ldr	r3, [r3]
   127d0:	lsl	r3, r3, #4
   127d4:	add	r1, r2, r3
   127d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   127dc:	strd	r2, [r1, #8]
   127e0:	movw	r3, #45468	; 0xb19c
   127e4:	movt	r3, #2
   127e8:	ldr	r3, [r3]
   127ec:	add	r2, r3, #1
   127f0:	movw	r3, #45468	; 0xb19c
   127f4:	movt	r3, #2
   127f8:	str	r2, [r3]
   127fc:	nop	{0}
   12800:	sub	sp, fp, #4
   12804:	ldr	fp, [sp]
   12808:	add	sp, sp, #4
   1280c:	pop	{pc}		; (ldr pc, [sp], #4)
   12810:	push	{fp}		; (str fp, [sp, #-4]!)
   12814:	add	fp, sp, #0
   12818:	sub	sp, sp, #20
   1281c:	str	r0, [fp, #-16]
   12820:	str	r1, [fp, #-20]	; 0xffffffec
   12824:	ldr	r3, [fp, #-16]
   12828:	ldrd	r2, [r3]
   1282c:	mov	r3, r2
   12830:	str	r3, [fp, #-8]
   12834:	ldr	r3, [fp, #-20]	; 0xffffffec
   12838:	ldrd	r2, [r3]
   1283c:	mov	r3, r2
   12840:	str	r3, [fp, #-12]
   12844:	ldr	r2, [fp, #-8]
   12848:	ldr	r3, [fp, #-12]
   1284c:	cmp	r2, r3
   12850:	blt	12870 <__assert_fail@plt+0x17ac>
   12854:	ldr	r2, [fp, #-8]
   12858:	ldr	r3, [fp, #-12]
   1285c:	cmp	r2, r3
   12860:	movgt	r3, #1
   12864:	movle	r3, #0
   12868:	uxtb	r3, r3
   1286c:	b	12874 <__assert_fail@plt+0x17b0>
   12870:	mvn	r3, #0
   12874:	mov	r0, r3
   12878:	add	sp, fp, #0
   1287c:	pop	{fp}		; (ldr fp, [sp], #4)
   12880:	bx	lr
   12884:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12888:	strd	r6, [sp, #8]
   1288c:	strd	r8, [sp, #16]
   12890:	str	fp, [sp, #24]
   12894:	str	lr, [sp, #28]
   12898:	add	fp, sp, #28
   1289c:	sub	sp, sp, #24
   128a0:	movw	r3, #45464	; 0xb198
   128a4:	movt	r3, #2
   128a8:	ldr	r3, [r3]
   128ac:	str	r3, [fp, #-36]	; 0xffffffdc
   128b0:	movw	r3, #45468	; 0xb19c
   128b4:	movt	r3, #2
   128b8:	ldr	r3, [r3]
   128bc:	str	r3, [fp, #-40]	; 0xffffffd8
   128c0:	movw	r3, #45464	; 0xb198
   128c4:	movt	r3, #2
   128c8:	mov	r2, #0
   128cc:	str	r2, [r3]
   128d0:	movw	r3, #45468	; 0xb19c
   128d4:	movt	r3, #2
   128d8:	mov	r2, #0
   128dc:	str	r2, [r3]
   128e0:	movw	r3, #45472	; 0xb1a0
   128e4:	movt	r3, #2
   128e8:	mov	r2, #0
   128ec:	str	r2, [r3]
   128f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   128f4:	ldrd	r2, [r3]
   128f8:	cmp	r3, #0
   128fc:	cmpeq	r2, #1
   12900:	bls	12928 <__assert_fail@plt+0x1864>
   12904:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12908:	ldrd	r2, [r3]
   1290c:	subs	r0, r2, #1
   12910:	sbc	r1, r3, #0
   12914:	mov	r2, r0
   12918:	mov	r3, r1
   1291c:	mov	r0, #1
   12920:	mov	r1, #0
   12924:	bl	12728 <__assert_fail@plt+0x1664>
   12928:	mov	r3, #1
   1292c:	str	r3, [fp, #-32]	; 0xffffffe0
   12930:	b	129dc <__assert_fail@plt+0x1918>
   12934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12938:	sub	r3, r3, #-268435455	; 0xf0000001
   1293c:	lsl	r3, r3, #4
   12940:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12944:	add	r3, r2, r3
   12948:	ldrd	r2, [r3, #8]
   1294c:	adds	r4, r2, #1
   12950:	adc	r5, r3, #0
   12954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12958:	lsl	r3, r3, #4
   1295c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12960:	add	r3, r2, r3
   12964:	ldrd	r2, [r3]
   12968:	cmp	r5, r3
   1296c:	cmpeq	r4, r2
   12970:	beq	129cc <__assert_fail@plt+0x1908>
   12974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12978:	sub	r3, r3, #-268435455	; 0xf0000001
   1297c:	lsl	r3, r3, #4
   12980:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12984:	add	r3, r2, r3
   12988:	ldrd	r2, [r3, #8]
   1298c:	adds	r8, r2, #1
   12990:	adc	r9, r3, #0
   12994:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12998:	lsl	r3, r3, #4
   1299c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   129a0:	add	r3, r2, r3
   129a4:	ldrd	r2, [r3]
   129a8:	subs	r1, r2, #1
   129ac:	str	r1, [fp, #-52]	; 0xffffffcc
   129b0:	sbc	r3, r3, #0
   129b4:	str	r3, [fp, #-48]	; 0xffffffd0
   129b8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   129bc:	mov	r0, r8
   129c0:	mov	r1, r9
   129c4:	bl	12728 <__assert_fail@plt+0x1664>
   129c8:	b	129d0 <__assert_fail@plt+0x190c>
   129cc:	nop	{0}
   129d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   129d4:	add	r3, r3, #1
   129d8:	str	r3, [fp, #-32]	; 0xffffffe0
   129dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   129e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   129e4:	cmp	r2, r3
   129e8:	bcc	12934 <__assert_fail@plt+0x1870>
   129ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   129f0:	sub	r3, r3, #-268435455	; 0xf0000001
   129f4:	lsl	r3, r3, #4
   129f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   129fc:	add	r3, r2, r3
   12a00:	ldrd	r2, [r3, #8]
   12a04:	mvn	r0, #0
   12a08:	mvn	r1, #0
   12a0c:	cmp	r3, r1
   12a10:	cmpeq	r2, r0
   12a14:	beq	12a4c <__assert_fail@plt+0x1988>
   12a18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12a1c:	sub	r3, r3, #-268435455	; 0xf0000001
   12a20:	lsl	r3, r3, #4
   12a24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12a28:	add	r3, r2, r3
   12a2c:	ldrd	r2, [r3, #8]
   12a30:	adds	r6, r2, #1
   12a34:	adc	r7, r3, #0
   12a38:	mvn	r2, #0
   12a3c:	mvn	r3, #0
   12a40:	mov	r0, r6
   12a44:	mov	r1, r7
   12a48:	bl	12728 <__assert_fail@plt+0x1664>
   12a4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a50:	bl	13824 <__assert_fail@plt+0x2760>
   12a54:	nop	{0}
   12a58:	sub	sp, fp, #28
   12a5c:	ldrd	r4, [sp]
   12a60:	ldrd	r6, [sp, #8]
   12a64:	ldrd	r8, [sp, #16]
   12a68:	ldr	fp, [sp, #24]
   12a6c:	add	sp, sp, #28
   12a70:	pop	{pc}		; (ldr pc, [sp], #4)
   12a74:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12a78:	strd	r6, [sp, #8]
   12a7c:	strd	r8, [sp, #16]
   12a80:	str	fp, [sp, #24]
   12a84:	str	lr, [sp, #28]
   12a88:	add	fp, sp, #28
   12a8c:	sub	sp, sp, #64	; 0x40
   12a90:	str	r0, [fp, #-72]	; 0xffffffb8
   12a94:	str	r1, [fp, #-76]	; 0xffffffb4
   12a98:	mov	r2, #1
   12a9c:	mov	r3, #0
   12aa0:	strd	r2, [fp, #-36]	; 0xffffffdc
   12aa4:	mov	r2, #0
   12aa8:	mov	r3, #0
   12aac:	strd	r2, [fp, #-68]	; 0xffffffbc
   12ab0:	mov	r3, #0
   12ab4:	strb	r3, [fp, #-37]	; 0xffffffdb
   12ab8:	mov	r3, #0
   12abc:	strb	r3, [fp, #-38]	; 0xffffffda
   12ac0:	mov	r3, #0
   12ac4:	strb	r3, [fp, #-39]	; 0xffffffd9
   12ac8:	mov	r3, #0
   12acc:	strb	r3, [fp, #-40]	; 0xffffffd8
   12ad0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12ad4:	and	r3, r3, #1
   12ad8:	cmp	r3, #0
   12adc:	beq	12b24 <__assert_fail@plt+0x1a60>
   12ae0:	movw	r1, #39200	; 0x9920
   12ae4:	movt	r1, #1
   12ae8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12aec:	bl	10e24 <strcmp@plt>
   12af0:	mov	r3, r0
   12af4:	cmp	r3, #0
   12af8:	bne	12b24 <__assert_fail@plt+0x1a60>
   12afc:	mov	r2, #1
   12b00:	mov	r3, #0
   12b04:	strd	r2, [fp, #-68]	; 0xffffffbc
   12b08:	mov	r3, #1
   12b0c:	strb	r3, [fp, #-37]	; 0xffffffdb
   12b10:	mov	r3, #1
   12b14:	strb	r3, [fp, #-39]	; 0xffffffd9
   12b18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12b1c:	add	r3, r3, #1
   12b20:	str	r3, [fp, #-72]	; 0xffffffb8
   12b24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12b28:	ldrb	r3, [r3]
   12b2c:	cmp	r3, #45	; 0x2d
   12b30:	bne	12c3c <__assert_fail@plt+0x1b78>
   12b34:	mov	r3, #0
   12b38:	strb	r3, [fp, #-40]	; 0xffffffd8
   12b3c:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   12b40:	cmp	r3, #0
   12b44:	beq	12b94 <__assert_fail@plt+0x1ad0>
   12b48:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12b4c:	and	r3, r3, #4
   12b50:	cmp	r3, #0
   12b54:	beq	12b6c <__assert_fail@plt+0x1aa8>
   12b58:	movw	r0, #39204	; 0x9924
   12b5c:	movt	r0, #1
   12b60:	bl	10fa4 <gettext@plt>
   12b64:	mov	r3, r0
   12b68:	b	12b7c <__assert_fail@plt+0x1ab8>
   12b6c:	movw	r0, #39236	; 0x9944
   12b70:	movt	r0, #1
   12b74:	bl	10fa4 <gettext@plt>
   12b78:	mov	r3, r0
   12b7c:	mov	r2, r3
   12b80:	mov	r1, #0
   12b84:	mov	r0, #0
   12b88:	bl	10f44 <error@plt>
   12b8c:	mov	r0, #1
   12b90:	bl	1143c <__assert_fail@plt+0x378>
   12b94:	mov	r3, #1
   12b98:	strb	r3, [fp, #-39]	; 0xffffffd9
   12b9c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12ba0:	add	r3, r3, #1
   12ba4:	str	r3, [fp, #-72]	; 0xffffffb8
   12ba8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   12bac:	cmp	r3, #0
   12bb0:	beq	12c0c <__assert_fail@plt+0x1b48>
   12bb4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12bb8:	orrs	r3, r2, r3
   12bbc:	bne	12c0c <__assert_fail@plt+0x1b48>
   12bc0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12bc4:	and	r3, r3, #4
   12bc8:	cmp	r3, #0
   12bcc:	beq	12be4 <__assert_fail@plt+0x1b20>
   12bd0:	movw	r0, #39256	; 0x9958
   12bd4:	movt	r0, #1
   12bd8:	bl	10fa4 <gettext@plt>
   12bdc:	mov	r3, r0
   12be0:	b	12bf4 <__assert_fail@plt+0x1b30>
   12be4:	movw	r0, #39304	; 0x9988
   12be8:	movt	r0, #1
   12bec:	bl	10fa4 <gettext@plt>
   12bf0:	mov	r3, r0
   12bf4:	mov	r2, r3
   12bf8:	mov	r1, #0
   12bfc:	mov	r0, #0
   12c00:	bl	10f44 <error@plt>
   12c04:	mov	r0, #1
   12c08:	bl	1143c <__assert_fail@plt+0x378>
   12c0c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   12c10:	cmp	r3, #0
   12c14:	beq	12c20 <__assert_fail@plt+0x1b5c>
   12c18:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12c1c:	b	12c28 <__assert_fail@plt+0x1b64>
   12c20:	mov	r2, #1
   12c24:	mov	r3, #0
   12c28:	strd	r2, [fp, #-36]	; 0xffffffdc
   12c2c:	mov	r2, #0
   12c30:	mov	r3, #0
   12c34:	strd	r2, [fp, #-68]	; 0xffffffbc
   12c38:	b	12b24 <__assert_fail@plt+0x1a60>
   12c3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12c40:	ldrb	r3, [r3]
   12c44:	cmp	r3, #44	; 0x2c
   12c48:	beq	12c94 <__assert_fail@plt+0x1bd0>
   12c4c:	bl	10f8c <__ctype_b_loc@plt>
   12c50:	mov	r3, r0
   12c54:	ldr	r4, [r3]
   12c58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12c5c:	ldrb	r3, [r3]
   12c60:	mov	r0, r3
   12c64:	bl	12700 <__assert_fail@plt+0x163c>
   12c68:	mov	r3, r0
   12c6c:	lsl	r3, r3, #1
   12c70:	add	r3, r4, r3
   12c74:	ldrh	r3, [r3]
   12c78:	and	r3, r3, #1
   12c7c:	cmp	r3, #0
   12c80:	bne	12c94 <__assert_fail@plt+0x1bd0>
   12c84:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12c88:	ldrb	r3, [r3]
   12c8c:	cmp	r3, #0
   12c90:	bne	12e40 <__assert_fail@plt+0x1d7c>
   12c94:	mov	r3, #0
   12c98:	strb	r3, [fp, #-40]	; 0xffffffd8
   12c9c:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   12ca0:	cmp	r3, #0
   12ca4:	beq	12da0 <__assert_fail@plt+0x1cdc>
   12ca8:	mov	r3, #0
   12cac:	strb	r3, [fp, #-39]	; 0xffffffd9
   12cb0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   12cb4:	eor	r3, r3, #1
   12cb8:	uxtb	r3, r3
   12cbc:	cmp	r3, #0
   12cc0:	beq	12d20 <__assert_fail@plt+0x1c5c>
   12cc4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12cc8:	eor	r3, r3, #1
   12ccc:	uxtb	r3, r3
   12cd0:	cmp	r3, #0
   12cd4:	beq	12d20 <__assert_fail@plt+0x1c5c>
   12cd8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12cdc:	and	r3, r3, #1
   12ce0:	cmp	r3, #0
   12ce4:	beq	12cf8 <__assert_fail@plt+0x1c34>
   12ce8:	mov	r2, #1
   12cec:	mov	r3, #0
   12cf0:	strd	r2, [fp, #-36]	; 0xffffffdc
   12cf4:	b	12d20 <__assert_fail@plt+0x1c5c>
   12cf8:	movw	r0, #39332	; 0x99a4
   12cfc:	movt	r0, #1
   12d00:	bl	10fa4 <gettext@plt>
   12d04:	mov	r3, r0
   12d08:	mov	r2, r3
   12d0c:	mov	r1, #0
   12d10:	mov	r0, #0
   12d14:	bl	10f44 <error@plt>
   12d18:	mov	r0, #1
   12d1c:	bl	1143c <__assert_fail@plt+0x378>
   12d20:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12d24:	eor	r3, r3, #1
   12d28:	uxtb	r3, r3
   12d2c:	cmp	r3, #0
   12d30:	beq	12d48 <__assert_fail@plt+0x1c84>
   12d34:	mvn	r2, #0
   12d38:	mvn	r3, #0
   12d3c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   12d40:	bl	12728 <__assert_fail@plt+0x1664>
   12d44:	b	12d90 <__assert_fail@plt+0x1ccc>
   12d48:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12d4c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   12d50:	cmp	r1, r3
   12d54:	cmpeq	r0, r2
   12d58:	bls	12d84 <__assert_fail@plt+0x1cc0>
   12d5c:	movw	r0, #39368	; 0x99c8
   12d60:	movt	r0, #1
   12d64:	bl	10fa4 <gettext@plt>
   12d68:	mov	r3, r0
   12d6c:	mov	r2, r3
   12d70:	mov	r1, #0
   12d74:	mov	r0, #0
   12d78:	bl	10f44 <error@plt>
   12d7c:	mov	r0, #1
   12d80:	bl	1143c <__assert_fail@plt+0x378>
   12d84:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12d88:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   12d8c:	bl	12728 <__assert_fail@plt+0x1664>
   12d90:	mov	r2, #0
   12d94:	mov	r3, #0
   12d98:	strd	r2, [fp, #-68]	; 0xffffffbc
   12d9c:	b	12e10 <__assert_fail@plt+0x1d4c>
   12da0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12da4:	orrs	r3, r2, r3
   12da8:	bne	12df8 <__assert_fail@plt+0x1d34>
   12dac:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12db0:	and	r3, r3, #4
   12db4:	cmp	r3, #0
   12db8:	beq	12dd0 <__assert_fail@plt+0x1d0c>
   12dbc:	movw	r0, #39256	; 0x9958
   12dc0:	movt	r0, #1
   12dc4:	bl	10fa4 <gettext@plt>
   12dc8:	mov	r3, r0
   12dcc:	b	12de0 <__assert_fail@plt+0x1d1c>
   12dd0:	movw	r0, #39304	; 0x9988
   12dd4:	movt	r0, #1
   12dd8:	bl	10fa4 <gettext@plt>
   12ddc:	mov	r3, r0
   12de0:	mov	r2, r3
   12de4:	mov	r1, #0
   12de8:	mov	r0, #0
   12dec:	bl	10f44 <error@plt>
   12df0:	mov	r0, #1
   12df4:	bl	1143c <__assert_fail@plt+0x378>
   12df8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   12dfc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12e00:	bl	12728 <__assert_fail@plt+0x1664>
   12e04:	mov	r2, #0
   12e08:	mov	r3, #0
   12e0c:	strd	r2, [fp, #-68]	; 0xffffffbc
   12e10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12e14:	ldrb	r3, [r3]
   12e18:	cmp	r3, #0
   12e1c:	beq	130dc <__assert_fail@plt+0x2018>
   12e20:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12e24:	add	r3, r3, #1
   12e28:	str	r3, [fp, #-72]	; 0xffffffb8
   12e2c:	mov	r3, #0
   12e30:	strb	r3, [fp, #-37]	; 0xffffffdb
   12e34:	mov	r3, #0
   12e38:	strb	r3, [fp, #-38]	; 0xffffffda
   12e3c:	b	130d8 <__assert_fail@plt+0x2014>
   12e40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12e44:	ldrb	r3, [r3]
   12e48:	sub	r3, r3, #48	; 0x30
   12e4c:	cmp	r3, #9
   12e50:	bhi	13080 <__assert_fail@plt+0x1fbc>
   12e54:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   12e58:	eor	r3, r3, #1
   12e5c:	uxtb	r3, r3
   12e60:	cmp	r3, #0
   12e64:	bne	12e7c <__assert_fail@plt+0x1db8>
   12e68:	movw	r3, #45476	; 0xb1a4
   12e6c:	movt	r3, #2
   12e70:	ldr	r3, [r3]
   12e74:	cmp	r3, #0
   12e78:	bne	12e8c <__assert_fail@plt+0x1dc8>
   12e7c:	movw	r3, #45476	; 0xb1a4
   12e80:	movt	r3, #2
   12e84:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e88:	str	r2, [r3]
   12e8c:	mov	r3, #1
   12e90:	strb	r3, [fp, #-40]	; 0xffffffd8
   12e94:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   12e98:	cmp	r3, #0
   12e9c:	beq	12eac <__assert_fail@plt+0x1de8>
   12ea0:	mov	r3, #1
   12ea4:	strb	r3, [fp, #-38]	; 0xffffffda
   12ea8:	b	12eb4 <__assert_fail@plt+0x1df0>
   12eac:	mov	r3, #1
   12eb0:	strb	r3, [fp, #-37]	; 0xffffffdb
   12eb4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12eb8:	add	r1, pc, #712	; 0x2c8
   12ebc:	ldrd	r0, [r1]
   12ec0:	cmp	r3, r1
   12ec4:	cmpeq	r2, r0
   12ec8:	bhi	12fcc <__assert_fail@plt+0x1f08>
   12ecc:	ldrd	r4, [fp, #-68]	; 0xffffffbc
   12ed0:	mov	r2, r4
   12ed4:	mov	r3, r5
   12ed8:	mov	r0, #0
   12edc:	mov	r1, #0
   12ee0:	lsl	r1, r3, #2
   12ee4:	orr	r1, r1, r2, lsr #30
   12ee8:	lsl	r0, r2, #2
   12eec:	mov	r2, r0
   12ef0:	mov	r3, r1
   12ef4:	adds	r2, r2, r4
   12ef8:	adc	r3, r3, r5
   12efc:	adds	r1, r2, r2
   12f00:	str	r1, [fp, #-84]	; 0xffffffac
   12f04:	adc	r3, r3, r3
   12f08:	str	r3, [fp, #-80]	; 0xffffffb0
   12f0c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   12f10:	mov	r0, r2
   12f14:	mov	r1, r3
   12f18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12f1c:	ldrb	r3, [r3]
   12f20:	sub	r3, r3, #48	; 0x30
   12f24:	mov	r2, r3
   12f28:	asr	r3, r2, #31
   12f2c:	adds	r6, r0, r2
   12f30:	adc	r7, r1, r3
   12f34:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12f38:	cmp	r7, r3
   12f3c:	cmpeq	r6, r2
   12f40:	bcc	12fcc <__assert_fail@plt+0x1f08>
   12f44:	ldrd	r4, [fp, #-68]	; 0xffffffbc
   12f48:	mov	r2, r4
   12f4c:	mov	r3, r5
   12f50:	mov	r0, #0
   12f54:	mov	r1, #0
   12f58:	lsl	r1, r3, #2
   12f5c:	orr	r1, r1, r2, lsr #30
   12f60:	lsl	r0, r2, #2
   12f64:	mov	r2, r0
   12f68:	mov	r3, r1
   12f6c:	adds	r2, r2, r4
   12f70:	adc	r3, r3, r5
   12f74:	adds	r1, r2, r2
   12f78:	str	r1, [fp, #-92]	; 0xffffffa4
   12f7c:	adc	r3, r3, r3
   12f80:	str	r3, [fp, #-88]	; 0xffffffa8
   12f84:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   12f88:	mov	r0, r2
   12f8c:	mov	r1, r3
   12f90:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12f94:	ldrb	r3, [r3]
   12f98:	sub	r3, r3, #48	; 0x30
   12f9c:	mov	r2, r3
   12fa0:	asr	r3, r2, #31
   12fa4:	adds	r8, r0, r2
   12fa8:	adc	r9, r1, r3
   12fac:	strd	r8, [fp, #-68]	; 0xffffffbc
   12fb0:	nop	{0}
   12fb4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12fb8:	mvn	r0, #0
   12fbc:	mvn	r1, #0
   12fc0:	cmp	r3, r1
   12fc4:	cmpeq	r2, r0
   12fc8:	bne	13070 <__assert_fail@plt+0x1fac>
   12fcc:	movw	r3, #45476	; 0xb1a4
   12fd0:	movt	r3, #2
   12fd4:	ldr	r3, [r3]
   12fd8:	movw	r1, #39396	; 0x99e4
   12fdc:	movt	r1, #1
   12fe0:	mov	r0, r3
   12fe4:	bl	110b8 <strspn@plt>
   12fe8:	str	r0, [fp, #-52]	; 0xffffffcc
   12fec:	movw	r3, #45476	; 0xb1a4
   12ff0:	movt	r3, #2
   12ff4:	ldr	r3, [r3]
   12ff8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12ffc:	mov	r1, r2
   13000:	mov	r0, r3
   13004:	bl	17a28 <__assert_fail@plt+0x6964>
   13008:	mov	r3, r0
   1300c:	str	r3, [fp, #-56]	; 0xffffffc8
   13010:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13014:	and	r3, r3, #4
   13018:	cmp	r3, #0
   1301c:	beq	13034 <__assert_fail@plt+0x1f70>
   13020:	movw	r0, #39408	; 0x99f0
   13024:	movt	r0, #1
   13028:	bl	10fa4 <gettext@plt>
   1302c:	mov	r4, r0
   13030:	b	13044 <__assert_fail@plt+0x1f80>
   13034:	movw	r0, #39448	; 0x9a18
   13038:	movt	r0, #1
   1303c:	bl	10fa4 <gettext@plt>
   13040:	mov	r4, r0
   13044:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13048:	bl	169e4 <__assert_fail@plt+0x5920>
   1304c:	mov	r3, r0
   13050:	mov	r2, r4
   13054:	mov	r1, #0
   13058:	mov	r0, #0
   1305c:	bl	10f44 <error@plt>
   13060:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13064:	bl	13824 <__assert_fail@plt+0x2760>
   13068:	mov	r0, #1
   1306c:	bl	1143c <__assert_fail@plt+0x378>
   13070:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13074:	add	r3, r3, #1
   13078:	str	r3, [fp, #-72]	; 0xffffffb8
   1307c:	b	12b24 <__assert_fail@plt+0x1a60>
   13080:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13084:	and	r3, r3, #4
   13088:	cmp	r3, #0
   1308c:	beq	130a4 <__assert_fail@plt+0x1fe0>
   13090:	movw	r0, #39480	; 0x9a38
   13094:	movt	r0, #1
   13098:	bl	10fa4 <gettext@plt>
   1309c:	mov	r4, r0
   130a0:	b	130b4 <__assert_fail@plt+0x1ff0>
   130a4:	movw	r0, #39516	; 0x9a5c
   130a8:	movt	r0, #1
   130ac:	bl	10fa4 <gettext@plt>
   130b0:	mov	r4, r0
   130b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   130b8:	bl	169e4 <__assert_fail@plt+0x5920>
   130bc:	mov	r3, r0
   130c0:	mov	r2, r4
   130c4:	mov	r1, #0
   130c8:	mov	r0, #0
   130cc:	bl	10f44 <error@plt>
   130d0:	mov	r0, #1
   130d4:	bl	1143c <__assert_fail@plt+0x378>
   130d8:	b	12b24 <__assert_fail@plt+0x1a60>
   130dc:	nop	{0}
   130e0:	movw	r3, #45468	; 0xb19c
   130e4:	movt	r3, #2
   130e8:	ldr	r3, [r3]
   130ec:	cmp	r3, #0
   130f0:	bne	13140 <__assert_fail@plt+0x207c>
   130f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   130f8:	and	r3, r3, #4
   130fc:	cmp	r3, #0
   13100:	beq	13118 <__assert_fail@plt+0x2054>
   13104:	movw	r0, #39540	; 0x9a74
   13108:	movt	r0, #1
   1310c:	bl	10fa4 <gettext@plt>
   13110:	mov	r3, r0
   13114:	b	13128 <__assert_fail@plt+0x2064>
   13118:	movw	r0, #39584	; 0x9aa0
   1311c:	movt	r0, #1
   13120:	bl	10fa4 <gettext@plt>
   13124:	mov	r3, r0
   13128:	mov	r2, r3
   1312c:	mov	r1, #0
   13130:	mov	r0, #0
   13134:	bl	10f44 <error@plt>
   13138:	mov	r0, #1
   1313c:	bl	1143c <__assert_fail@plt+0x378>
   13140:	movw	r3, #45464	; 0xb198
   13144:	movt	r3, #2
   13148:	ldr	r0, [r3]
   1314c:	movw	r3, #45468	; 0xb19c
   13150:	movt	r3, #2
   13154:	ldr	r1, [r3]
   13158:	movw	r3, #10256	; 0x2810
   1315c:	movt	r3, #1
   13160:	mov	r2, #16
   13164:	bl	11070 <qsort@plt>
   13168:	mov	r3, #0
   1316c:	str	r3, [fp, #-44]	; 0xffffffd4
   13170:	b	132fc <__assert_fail@plt+0x2238>
   13174:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13178:	add	r3, r3, #1
   1317c:	str	r3, [fp, #-48]	; 0xffffffd0
   13180:	b	132d0 <__assert_fail@plt+0x220c>
   13184:	nop	{0}
   13188:	ldmibls	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   1318c:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   13190:	movw	r3, #45464	; 0xb198
   13194:	movt	r3, #2
   13198:	ldr	r2, [r3]
   1319c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   131a0:	lsl	r3, r3, #4
   131a4:	add	r3, r2, r3
   131a8:	ldrd	r0, [r3]
   131ac:	movw	r3, #45464	; 0xb198
   131b0:	movt	r3, #2
   131b4:	ldr	r2, [r3]
   131b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   131bc:	lsl	r3, r3, #4
   131c0:	add	r3, r2, r3
   131c4:	ldrd	r2, [r3, #8]
   131c8:	cmp	r1, r3
   131cc:	cmpeq	r0, r2
   131d0:	bhi	132ec <__assert_fail@plt+0x2228>
   131d4:	movw	r3, #45464	; 0xb198
   131d8:	movt	r3, #2
   131dc:	ldr	r2, [r3]
   131e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   131e4:	lsl	r3, r3, #4
   131e8:	add	r3, r2, r3
   131ec:	ldrd	r4, [r3, #8]
   131f0:	movw	r3, #45464	; 0xb198
   131f4:	movt	r3, #2
   131f8:	ldr	r2, [r3]
   131fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13200:	lsl	r3, r3, #4
   13204:	add	r3, r2, r3
   13208:	ldrd	r0, [r3, #8]
   1320c:	movw	r3, #45464	; 0xb198
   13210:	movt	r3, #2
   13214:	ldr	r2, [r3]
   13218:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1321c:	lsl	r3, r3, #4
   13220:	add	ip, r2, r3
   13224:	mov	r2, r4
   13228:	mov	r3, r5
   1322c:	cmp	r3, r1
   13230:	cmpeq	r2, r0
   13234:	bcs	13240 <__assert_fail@plt+0x217c>
   13238:	mov	r2, r0
   1323c:	mov	r3, r1
   13240:	strd	r2, [ip, #8]
   13244:	movw	r3, #45464	; 0xb198
   13248:	movt	r3, #2
   1324c:	ldr	r2, [r3]
   13250:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13254:	lsl	r3, r3, #4
   13258:	add	r0, r2, r3
   1325c:	movw	r3, #45464	; 0xb198
   13260:	movt	r3, #2
   13264:	ldr	r2, [r3]
   13268:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1326c:	add	r3, r3, #1
   13270:	lsl	r3, r3, #4
   13274:	add	r1, r2, r3
   13278:	movw	r3, #45468	; 0xb19c
   1327c:	movt	r3, #2
   13280:	ldr	r2, [r3]
   13284:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13288:	sub	r3, r2, r3
   1328c:	sub	r3, r3, #-268435455	; 0xf0000001
   13290:	lsl	r3, r3, #4
   13294:	mov	r2, r3
   13298:	bl	10e54 <memmove@plt>
   1329c:	movw	r3, #45468	; 0xb19c
   132a0:	movt	r3, #2
   132a4:	ldr	r3, [r3]
   132a8:	sub	r2, r3, #1
   132ac:	movw	r3, #45468	; 0xb19c
   132b0:	movt	r3, #2
   132b4:	str	r2, [r3]
   132b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   132bc:	sub	r3, r3, #1
   132c0:	str	r3, [fp, #-48]	; 0xffffffd0
   132c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   132c8:	add	r3, r3, #1
   132cc:	str	r3, [fp, #-48]	; 0xffffffd0
   132d0:	movw	r3, #45468	; 0xb19c
   132d4:	movt	r3, #2
   132d8:	ldr	r3, [r3]
   132dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   132e0:	cmp	r2, r3
   132e4:	bcc	13190 <__assert_fail@plt+0x20cc>
   132e8:	b	132f0 <__assert_fail@plt+0x222c>
   132ec:	nop	{0}
   132f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   132f4:	add	r3, r3, #1
   132f8:	str	r3, [fp, #-44]	; 0xffffffd4
   132fc:	movw	r3, #45468	; 0xb19c
   13300:	movt	r3, #2
   13304:	ldr	r3, [r3]
   13308:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1330c:	cmp	r2, r3
   13310:	bcc	13174 <__assert_fail@plt+0x20b0>
   13314:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13318:	and	r3, r3, #2
   1331c:	cmp	r3, #0
   13320:	beq	13328 <__assert_fail@plt+0x2264>
   13324:	bl	12884 <__assert_fail@plt+0x17c0>
   13328:	movw	r3, #45468	; 0xb19c
   1332c:	movt	r3, #2
   13330:	ldr	r3, [r3]
   13334:	add	r2, r3, #1
   13338:	movw	r3, #45468	; 0xb19c
   1333c:	movt	r3, #2
   13340:	str	r2, [r3]
   13344:	movw	r3, #45464	; 0xb198
   13348:	movt	r3, #2
   1334c:	ldr	r2, [r3]
   13350:	movw	r3, #45468	; 0xb19c
   13354:	movt	r3, #2
   13358:	ldr	r3, [r3]
   1335c:	lsl	r3, r3, #4
   13360:	mov	r1, r3
   13364:	mov	r0, r2
   13368:	bl	17320 <__assert_fail@plt+0x625c>
   1336c:	mov	r2, r0
   13370:	movw	r3, #45464	; 0xb198
   13374:	movt	r3, #2
   13378:	str	r2, [r3]
   1337c:	movw	r3, #45464	; 0xb198
   13380:	movt	r3, #2
   13384:	ldr	r2, [r3]
   13388:	movw	r3, #45468	; 0xb19c
   1338c:	movt	r3, #2
   13390:	ldr	r3, [r3]
   13394:	sub	r3, r3, #-268435455	; 0xf0000001
   13398:	lsl	r3, r3, #4
   1339c:	add	r2, r2, r3
   133a0:	mvn	r0, #0
   133a4:	mvn	r1, #0
   133a8:	strd	r0, [r2, #8]
   133ac:	movw	r3, #45464	; 0xb198
   133b0:	movt	r3, #2
   133b4:	ldr	r1, [r3]
   133b8:	movw	r3, #45468	; 0xb19c
   133bc:	movt	r3, #2
   133c0:	ldr	r3, [r3]
   133c4:	sub	r3, r3, #-268435455	; 0xf0000001
   133c8:	lsl	r3, r3, #4
   133cc:	add	r1, r1, r3
   133d0:	ldrd	r2, [r2, #8]
   133d4:	strd	r2, [r1]
   133d8:	nop	{0}
   133dc:	sub	sp, fp, #28
   133e0:	ldrd	r4, [sp]
   133e4:	ldrd	r6, [sp, #8]
   133e8:	ldrd	r8, [sp, #16]
   133ec:	ldr	fp, [sp, #24]
   133f0:	add	sp, sp, #28
   133f4:	pop	{pc}		; (ldr pc, [sp], #4)
   133f8:	push	{fp}		; (str fp, [sp, #-4]!)
   133fc:	add	fp, sp, #0
   13400:	sub	sp, sp, #12
   13404:	str	r0, [fp, #-8]
   13408:	movw	r3, #45480	; 0xb1a8
   1340c:	movt	r3, #2
   13410:	ldr	r2, [fp, #-8]
   13414:	str	r2, [r3]
   13418:	nop	{0}
   1341c:	add	sp, fp, #0
   13420:	pop	{fp}		; (ldr fp, [sp], #4)
   13424:	bx	lr
   13428:	push	{fp}		; (str fp, [sp, #-4]!)
   1342c:	add	fp, sp, #0
   13430:	sub	sp, sp, #12
   13434:	mov	r3, r0
   13438:	strb	r3, [fp, #-5]
   1343c:	movw	r3, #45484	; 0xb1ac
   13440:	movt	r3, #2
   13444:	ldrb	r2, [fp, #-5]
   13448:	strb	r2, [r3]
   1344c:	nop	{0}
   13450:	add	sp, fp, #0
   13454:	pop	{fp}		; (ldr fp, [sp], #4)
   13458:	bx	lr
   1345c:	str	r4, [sp, #-12]!
   13460:	str	fp, [sp, #4]
   13464:	str	lr, [sp, #8]
   13468:	add	fp, sp, #8
   1346c:	sub	sp, sp, #20
   13470:	movw	r3, #45420	; 0xb16c
   13474:	movt	r3, #2
   13478:	ldr	r3, [r3]
   1347c:	mov	r0, r3
   13480:	bl	17de8 <__assert_fail@plt+0x6d24>
   13484:	mov	r3, r0
   13488:	cmp	r3, #0
   1348c:	beq	13560 <__assert_fail@plt+0x249c>
   13490:	movw	r3, #45484	; 0xb1ac
   13494:	movt	r3, #2
   13498:	ldrb	r3, [r3]
   1349c:	eor	r3, r3, #1
   134a0:	uxtb	r3, r3
   134a4:	cmp	r3, #0
   134a8:	bne	134c0 <__assert_fail@plt+0x23fc>
   134ac:	bl	10fd4 <__errno_location@plt>
   134b0:	mov	r3, r0
   134b4:	ldr	r3, [r3]
   134b8:	cmp	r3, #32
   134bc:	beq	13560 <__assert_fail@plt+0x249c>
   134c0:	movw	r0, #39624	; 0x9ac8
   134c4:	movt	r0, #1
   134c8:	bl	10fa4 <gettext@plt>
   134cc:	str	r0, [fp, #-16]
   134d0:	movw	r3, #45480	; 0xb1a8
   134d4:	movt	r3, #2
   134d8:	ldr	r3, [r3]
   134dc:	cmp	r3, #0
   134e0:	beq	1352c <__assert_fail@plt+0x2468>
   134e4:	bl	10fd4 <__errno_location@plt>
   134e8:	mov	r3, r0
   134ec:	ldr	r4, [r3]
   134f0:	movw	r3, #45480	; 0xb1a8
   134f4:	movt	r3, #2
   134f8:	ldr	r3, [r3]
   134fc:	mov	r0, r3
   13500:	bl	16670 <__assert_fail@plt+0x55ac>
   13504:	mov	r2, r0
   13508:	ldr	r3, [fp, #-16]
   1350c:	str	r3, [sp]
   13510:	mov	r3, r2
   13514:	movw	r2, #39636	; 0x9ad4
   13518:	movt	r2, #1
   1351c:	mov	r1, r4
   13520:	mov	r0, #0
   13524:	bl	10f44 <error@plt>
   13528:	b	1354c <__assert_fail@plt+0x2488>
   1352c:	bl	10fd4 <__errno_location@plt>
   13530:	mov	r3, r0
   13534:	ldr	r1, [r3]
   13538:	ldr	r3, [fp, #-16]
   1353c:	movw	r2, #39644	; 0x9adc
   13540:	movt	r2, #1
   13544:	mov	r0, #0
   13548:	bl	10f44 <error@plt>
   1354c:	movw	r3, #45324	; 0xb10c
   13550:	movt	r3, #2
   13554:	ldr	r3, [r3]
   13558:	mov	r0, r3
   1355c:	bl	10e78 <_exit@plt>
   13560:	movw	r3, #45408	; 0xb160
   13564:	movt	r3, #2
   13568:	ldr	r3, [r3]
   1356c:	mov	r0, r3
   13570:	bl	17de8 <__assert_fail@plt+0x6d24>
   13574:	mov	r3, r0
   13578:	cmp	r3, #0
   1357c:	beq	13594 <__assert_fail@plt+0x24d0>
   13580:	movw	r3, #45324	; 0xb10c
   13584:	movt	r3, #2
   13588:	ldr	r3, [r3]
   1358c:	mov	r0, r3
   13590:	bl	10e78 <_exit@plt>
   13594:	nop	{0}
   13598:	sub	sp, fp, #8
   1359c:	ldr	r4, [sp]
   135a0:	ldr	fp, [sp, #4]
   135a4:	add	sp, sp, #8
   135a8:	pop	{pc}		; (ldr pc, [sp], #4)
   135ac:	str	fp, [sp, #-8]!
   135b0:	str	lr, [sp, #4]
   135b4:	add	fp, sp, #4
   135b8:	sub	sp, sp, #40	; 0x28
   135bc:	str	r0, [fp, #-16]
   135c0:	strd	r2, [fp, #-28]	; 0xffffffe4
   135c4:	ldr	r3, [fp, #12]
   135c8:	str	r3, [sp, #8]
   135cc:	ldrd	r2, [fp, #4]
   135d0:	strd	r2, [sp]
   135d4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   135d8:	ldr	r0, [fp, #-16]
   135dc:	bl	10e30 <posix_fadvise64@plt>
   135e0:	str	r0, [fp, #-8]
   135e4:	nop	{0}
   135e8:	sub	sp, fp, #4
   135ec:	ldr	fp, [sp]
   135f0:	add	sp, sp, #4
   135f4:	pop	{pc}		; (ldr pc, [sp], #4)
   135f8:	str	fp, [sp, #-8]!
   135fc:	str	lr, [sp, #4]
   13600:	add	fp, sp, #4
   13604:	sub	sp, sp, #24
   13608:	str	r0, [fp, #-8]
   1360c:	str	r1, [fp, #-12]
   13610:	ldr	r3, [fp, #-8]
   13614:	cmp	r3, #0
   13618:	beq	1364c <__assert_fail@plt+0x2588>
   1361c:	ldr	r0, [fp, #-8]
   13620:	bl	11004 <fileno@plt>
   13624:	mov	r1, r0
   13628:	ldr	r3, [fp, #-12]
   1362c:	str	r3, [sp, #8]
   13630:	mov	r2, #0
   13634:	mov	r3, #0
   13638:	strd	r2, [sp]
   1363c:	mov	r2, #0
   13640:	mov	r3, #0
   13644:	mov	r0, r1
   13648:	bl	135ac <__assert_fail@plt+0x24e8>
   1364c:	nop	{0}
   13650:	sub	sp, fp, #4
   13654:	ldr	fp, [sp]
   13658:	add	sp, sp, #4
   1365c:	pop	{pc}		; (ldr pc, [sp], #4)
   13660:	str	fp, [sp, #-8]!
   13664:	str	lr, [sp, #4]
   13668:	add	fp, sp, #4
   1366c:	sub	sp, sp, #32
   13670:	str	r0, [fp, #-24]	; 0xffffffe8
   13674:	mov	r3, #0
   13678:	str	r3, [fp, #-8]
   1367c:	mov	r3, #0
   13680:	str	r3, [fp, #-12]
   13684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13688:	bl	11004 <fileno@plt>
   1368c:	str	r0, [fp, #-16]
   13690:	ldr	r3, [fp, #-16]
   13694:	cmp	r3, #0
   13698:	bge	136ac <__assert_fail@plt+0x25e8>
   1369c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136a0:	bl	1101c <fclose@plt>
   136a4:	mov	r3, r0
   136a8:	b	13750 <__assert_fail@plt+0x268c>
   136ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136b0:	bl	10f68 <__freading@plt>
   136b4:	mov	r3, r0
   136b8:	cmp	r3, #0
   136bc:	beq	136f8 <__assert_fail@plt+0x2634>
   136c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136c4:	bl	11004 <fileno@plt>
   136c8:	mov	r1, r0
   136cc:	mov	r3, #1
   136d0:	str	r3, [sp]
   136d4:	mov	r2, #0
   136d8:	mov	r3, #0
   136dc:	mov	r0, r1
   136e0:	bl	10efc <lseek64@plt>
   136e4:	mvn	r2, #0
   136e8:	mvn	r3, #0
   136ec:	cmp	r1, r3
   136f0:	cmpeq	r0, r2
   136f4:	beq	1371c <__assert_fail@plt+0x2658>
   136f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136fc:	bl	137b8 <__assert_fail@plt+0x26f4>
   13700:	mov	r3, r0
   13704:	cmp	r3, #0
   13708:	beq	1371c <__assert_fail@plt+0x2658>
   1370c:	bl	10fd4 <__errno_location@plt>
   13710:	mov	r3, r0
   13714:	ldr	r3, [r3]
   13718:	str	r3, [fp, #-8]
   1371c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13720:	bl	1101c <fclose@plt>
   13724:	str	r0, [fp, #-12]
   13728:	ldr	r3, [fp, #-8]
   1372c:	cmp	r3, #0
   13730:	beq	1374c <__assert_fail@plt+0x2688>
   13734:	bl	10fd4 <__errno_location@plt>
   13738:	mov	r2, r0
   1373c:	ldr	r3, [fp, #-8]
   13740:	str	r3, [r2]
   13744:	mvn	r3, #0
   13748:	str	r3, [fp, #-12]
   1374c:	ldr	r3, [fp, #-12]
   13750:	mov	r0, r3
   13754:	sub	sp, fp, #4
   13758:	ldr	fp, [sp]
   1375c:	add	sp, sp, #4
   13760:	pop	{pc}		; (ldr pc, [sp], #4)
   13764:	str	fp, [sp, #-8]!
   13768:	str	lr, [sp, #4]
   1376c:	add	fp, sp, #4
   13770:	sub	sp, sp, #16
   13774:	str	r0, [fp, #-8]
   13778:	ldr	r3, [fp, #-8]
   1377c:	ldr	r3, [r3]
   13780:	and	r3, r3, #256	; 0x100
   13784:	cmp	r3, #0
   13788:	beq	137a4 <__assert_fail@plt+0x26e0>
   1378c:	mov	r3, #1
   13790:	str	r3, [sp]
   13794:	mov	r2, #0
   13798:	mov	r3, #0
   1379c:	ldr	r0, [fp, #-8]
   137a0:	bl	138c8 <__assert_fail@plt+0x2804>
   137a4:	nop	{0}
   137a8:	sub	sp, fp, #4
   137ac:	ldr	fp, [sp]
   137b0:	add	sp, sp, #4
   137b4:	pop	{pc}		; (ldr pc, [sp], #4)
   137b8:	str	fp, [sp, #-8]!
   137bc:	str	lr, [sp, #4]
   137c0:	add	fp, sp, #4
   137c4:	sub	sp, sp, #8
   137c8:	str	r0, [fp, #-8]
   137cc:	ldr	r3, [fp, #-8]
   137d0:	cmp	r3, #0
   137d4:	beq	137ec <__assert_fail@plt+0x2728>
   137d8:	ldr	r0, [fp, #-8]
   137dc:	bl	10f68 <__freading@plt>
   137e0:	mov	r3, r0
   137e4:	cmp	r3, #0
   137e8:	bne	137fc <__assert_fail@plt+0x2738>
   137ec:	ldr	r0, [fp, #-8]
   137f0:	bl	10e48 <fflush@plt>
   137f4:	mov	r3, r0
   137f8:	b	13810 <__assert_fail@plt+0x274c>
   137fc:	ldr	r0, [fp, #-8]
   13800:	bl	13764 <__assert_fail@plt+0x26a0>
   13804:	ldr	r0, [fp, #-8]
   13808:	bl	10e48 <fflush@plt>
   1380c:	mov	r3, r0
   13810:	mov	r0, r3
   13814:	sub	sp, fp, #4
   13818:	ldr	fp, [sp]
   1381c:	add	sp, sp, #4
   13820:	pop	{pc}		; (ldr pc, [sp], #4)
   13824:	str	r4, [sp, #-12]!
   13828:	str	fp, [sp, #4]
   1382c:	str	lr, [sp, #8]
   13830:	add	fp, sp, #8
   13834:	sub	sp, sp, #20
   13838:	str	r0, [fp, #-24]	; 0xffffffe8
   1383c:	bl	10fd4 <__errno_location@plt>
   13840:	mov	r3, r0
   13844:	ldr	r3, [r3]
   13848:	str	r3, [fp, #-20]	; 0xffffffec
   1384c:	bl	10fd4 <__errno_location@plt>
   13850:	mov	r3, r0
   13854:	ldr	r3, [r3]
   13858:	str	r3, [fp, #-16]
   1385c:	bl	10fd4 <__errno_location@plt>
   13860:	mov	r2, r0
   13864:	mov	r3, #0
   13868:	str	r3, [r2]
   1386c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13870:	bl	10e60 <free@plt>
   13874:	bl	10fd4 <__errno_location@plt>
   13878:	mov	r3, r0
   1387c:	ldr	r3, [r3]
   13880:	cmp	r3, #0
   13884:	moveq	r3, #1
   13888:	movne	r3, #0
   1388c:	uxtb	r3, r3
   13890:	mov	r4, r3
   13894:	bl	10fd4 <__errno_location@plt>
   13898:	mov	r2, r0
   1389c:	lsl	r3, r4, #2
   138a0:	sub	r1, fp, #12
   138a4:	add	r3, r1, r3
   138a8:	ldr	r3, [r3, #-8]
   138ac:	str	r3, [r2]
   138b0:	nop	{0}
   138b4:	sub	sp, fp, #8
   138b8:	ldr	r4, [sp]
   138bc:	ldr	fp, [sp, #4]
   138c0:	add	sp, sp, #8
   138c4:	pop	{pc}		; (ldr pc, [sp], #4)
   138c8:	str	fp, [sp, #-8]!
   138cc:	str	lr, [sp, #4]
   138d0:	add	fp, sp, #4
   138d4:	sub	sp, sp, #32
   138d8:	str	r0, [fp, #-16]
   138dc:	strd	r2, [fp, #-28]	; 0xffffffe4
   138e0:	ldr	r3, [fp, #-16]
   138e4:	ldr	r2, [r3, #8]
   138e8:	ldr	r3, [fp, #-16]
   138ec:	ldr	r3, [r3, #4]
   138f0:	cmp	r2, r3
   138f4:	bne	1398c <__assert_fail@plt+0x28c8>
   138f8:	ldr	r3, [fp, #-16]
   138fc:	ldr	r2, [r3, #20]
   13900:	ldr	r3, [fp, #-16]
   13904:	ldr	r3, [r3, #16]
   13908:	cmp	r2, r3
   1390c:	bne	1398c <__assert_fail@plt+0x28c8>
   13910:	ldr	r3, [fp, #-16]
   13914:	ldr	r3, [r3, #36]	; 0x24
   13918:	cmp	r3, #0
   1391c:	bne	1398c <__assert_fail@plt+0x28c8>
   13920:	ldr	r0, [fp, #-16]
   13924:	bl	11004 <fileno@plt>
   13928:	mov	r1, r0
   1392c:	ldr	r3, [fp, #4]
   13930:	str	r3, [sp]
   13934:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13938:	mov	r0, r1
   1393c:	bl	10efc <lseek64@plt>
   13940:	strd	r0, [fp, #-12]
   13944:	ldrd	r2, [fp, #-12]
   13948:	mvn	r0, #0
   1394c:	mvn	r1, #0
   13950:	cmp	r3, r1
   13954:	cmpeq	r2, r0
   13958:	bne	13964 <__assert_fail@plt+0x28a0>
   1395c:	mvn	r3, #0
   13960:	b	139a4 <__assert_fail@plt+0x28e0>
   13964:	ldr	r3, [fp, #-16]
   13968:	ldr	r3, [r3]
   1396c:	bic	r2, r3, #16
   13970:	ldr	r3, [fp, #-16]
   13974:	str	r2, [r3]
   13978:	ldr	r1, [fp, #-16]
   1397c:	ldrd	r2, [fp, #-12]
   13980:	strd	r2, [r1, #80]	; 0x50
   13984:	mov	r3, #0
   13988:	b	139a4 <__assert_fail@plt+0x28e0>
   1398c:	ldr	r3, [fp, #4]
   13990:	str	r3, [sp]
   13994:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13998:	ldr	r0, [fp, #-16]
   1399c:	bl	11028 <fseeko64@plt>
   139a0:	mov	r3, r0
   139a4:	mov	r0, r3
   139a8:	sub	sp, fp, #4
   139ac:	ldr	fp, [sp]
   139b0:	add	sp, sp, #4
   139b4:	pop	{pc}		; (ldr pc, [sp], #4)
   139b8:	str	fp, [sp, #-8]!
   139bc:	str	lr, [sp, #4]
   139c0:	add	fp, sp, #4
   139c4:	sub	sp, sp, #72	; 0x48
   139c8:	str	r0, [fp, #-64]	; 0xffffffc0
   139cc:	str	r1, [fp, #-68]	; 0xffffffbc
   139d0:	str	r2, [fp, #-72]	; 0xffffffb8
   139d4:	str	r3, [fp, #-76]	; 0xffffffb4
   139d8:	mvn	r3, #0
   139dc:	str	r3, [fp, #-16]
   139e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   139e4:	ldr	r3, [r3]
   139e8:	str	r3, [fp, #-20]	; 0xffffffec
   139ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   139f0:	ldr	r3, [r3]
   139f4:	str	r3, [fp, #-24]	; 0xffffffe8
   139f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   139fc:	cmp	r3, #0
   13a00:	bne	13a3c <__assert_fail@plt+0x2978>
   13a04:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13a08:	cmp	r3, #64	; 0x40
   13a0c:	movcc	r3, r3
   13a10:	movcs	r3, #64	; 0x40
   13a14:	str	r3, [fp, #-24]	; 0xffffffe8
   13a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a1c:	bl	17bf4 <__assert_fail@plt+0x6b30>
   13a20:	mov	r3, r0
   13a24:	str	r3, [fp, #-20]	; 0xffffffec
   13a28:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a2c:	cmp	r3, #0
   13a30:	bne	13a3c <__assert_fail@plt+0x2978>
   13a34:	mvn	r3, #0
   13a38:	b	13e20 <__assert_fail@plt+0x2d5c>
   13a3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13a40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13a44:	cmp	r2, r3
   13a48:	bcc	13dcc <__assert_fail@plt+0x2d08>
   13a4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13a50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13a54:	sub	r3, r2, r3
   13a58:	str	r3, [fp, #-8]
   13a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a60:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13a64:	add	r3, r2, r3
   13a68:	str	r3, [fp, #-12]
   13a6c:	ldr	r3, [fp, #-8]
   13a70:	cmp	r3, #0
   13a74:	bne	13a88 <__assert_fail@plt+0x29c4>
   13a78:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a80:	cmp	r2, r3
   13a84:	bls	13dd4 <__assert_fail@plt+0x2d10>
   13a88:	ldr	r3, [fp, #4]
   13a8c:	cmn	r3, #1
   13a90:	bne	13aa0 <__assert_fail@plt+0x29dc>
   13a94:	ldr	r3, [fp, #8]
   13a98:	str	r3, [fp, #4]
   13a9c:	b	13ab4 <__assert_fail@plt+0x29f0>
   13aa0:	ldr	r3, [fp, #8]
   13aa4:	cmn	r3, #1
   13aa8:	bne	13ab4 <__assert_fail@plt+0x29f0>
   13aac:	ldr	r3, [fp, #4]
   13ab0:	str	r3, [fp, #8]
   13ab4:	mov	r3, #0
   13ab8:	strb	r3, [fp, #-25]	; 0xffffffe7
   13abc:	mov	r3, #0
   13ac0:	str	r3, [fp, #-32]	; 0xffffffe0
   13ac4:	sub	r3, fp, #60	; 0x3c
   13ac8:	mov	r1, r3
   13acc:	ldr	r0, [fp, #12]
   13ad0:	bl	17ecc <__assert_fail@plt+0x6e08>
   13ad4:	str	r0, [fp, #-44]	; 0xffffffd4
   13ad8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13adc:	cmp	r3, #0
   13ae0:	beq	13b34 <__assert_fail@plt+0x2a70>
   13ae4:	ldr	r3, [fp, #4]
   13ae8:	cmn	r3, #1
   13aec:	beq	13b90 <__assert_fail@plt+0x2acc>
   13af0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13af4:	ldr	r2, [fp, #8]
   13af8:	ldr	r1, [fp, #4]
   13afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b00:	bl	13e34 <__assert_fail@plt+0x2d70>
   13b04:	str	r0, [fp, #-48]	; 0xffffffd0
   13b08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13b0c:	cmp	r3, #0
   13b10:	beq	13b90 <__assert_fail@plt+0x2acc>
   13b14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13b18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13b1c:	sub	r3, r2, r3
   13b20:	add	r3, r3, #1
   13b24:	str	r3, [fp, #-60]	; 0xffffffc4
   13b28:	mov	r3, #1
   13b2c:	strb	r3, [fp, #-25]	; 0xffffffe7
   13b30:	b	13b90 <__assert_fail@plt+0x2acc>
   13b34:	ldr	r0, [fp, #12]
   13b38:	bl	10ec0 <getc_unlocked@plt>
   13b3c:	str	r0, [fp, #-32]	; 0xffffffe0
   13b40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13b44:	cmn	r3, #1
   13b48:	bne	13b60 <__assert_fail@plt+0x2a9c>
   13b4c:	ldr	r2, [fp, #-12]
   13b50:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b54:	cmp	r2, r3
   13b58:	bne	13da0 <__assert_fail@plt+0x2cdc>
   13b5c:	b	13df0 <__assert_fail@plt+0x2d2c>
   13b60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13b64:	ldr	r3, [fp, #4]
   13b68:	cmp	r2, r3
   13b6c:	beq	13b80 <__assert_fail@plt+0x2abc>
   13b70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13b74:	ldr	r3, [fp, #8]
   13b78:	cmp	r2, r3
   13b7c:	bne	13b88 <__assert_fail@plt+0x2ac4>
   13b80:	mov	r3, #1
   13b84:	strb	r3, [fp, #-25]	; 0xffffffe7
   13b88:	mov	r3, #1
   13b8c:	str	r3, [fp, #-60]	; 0xffffffc4
   13b90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13b94:	add	r3, r3, #1
   13b98:	ldr	r2, [fp, #-8]
   13b9c:	cmp	r2, r3
   13ba0:	bcs	13ce0 <__assert_fail@plt+0x2c1c>
   13ba4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ba8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13bac:	cmp	r2, r3
   13bb0:	bcs	13ce0 <__assert_fail@plt+0x2c1c>
   13bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13bb8:	cmp	r3, #63	; 0x3f
   13bbc:	bhi	13bcc <__assert_fail@plt+0x2b08>
   13bc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13bc4:	add	r3, r3, #64	; 0x40
   13bc8:	b	13bd4 <__assert_fail@plt+0x2b10>
   13bcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13bd0:	lsl	r3, r3, #1
   13bd4:	str	r3, [fp, #-36]	; 0xffffffdc
   13bd8:	ldr	r2, [fp, #-12]
   13bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13be0:	sub	r3, r2, r3
   13be4:	mov	r2, r3
   13be8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13bec:	sub	r2, r3, r2
   13bf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bf4:	add	r3, r3, #1
   13bf8:	cmp	r2, r3
   13bfc:	bcs	13c20 <__assert_fail@plt+0x2b5c>
   13c00:	ldr	r2, [fp, #-12]
   13c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c08:	sub	r3, r2, r3
   13c0c:	mov	r2, r3
   13c10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c14:	add	r3, r2, r3
   13c18:	add	r3, r3, #1
   13c1c:	str	r3, [fp, #-36]	; 0xffffffdc
   13c20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13c28:	cmp	r2, r3
   13c2c:	bcs	13c40 <__assert_fail@plt+0x2b7c>
   13c30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13c34:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13c38:	cmp	r2, r3
   13c3c:	bls	13c48 <__assert_fail@plt+0x2b84>
   13c40:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13c44:	str	r3, [fp, #-36]	; 0xffffffdc
   13c48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13c4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13c50:	sub	r3, r2, r3
   13c54:	cmp	r3, #0
   13c58:	bge	13c80 <__assert_fail@plt+0x2bbc>
   13c5c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13c60:	add	r3, r3, #-2147483648	; 0x80000000
   13c64:	str	r3, [fp, #-52]	; 0xffffffcc
   13c68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13c70:	cmp	r2, r3
   13c74:	beq	13ddc <__assert_fail@plt+0x2d18>
   13c78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13c7c:	str	r3, [fp, #-36]	; 0xffffffdc
   13c80:	ldr	r2, [fp, #-12]
   13c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c88:	sub	r3, r2, r3
   13c8c:	mov	r2, r3
   13c90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13c94:	sub	r3, r3, r2
   13c98:	str	r3, [fp, #-8]
   13c9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ca0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ca4:	bl	17c84 <__assert_fail@plt+0x6bc0>
   13ca8:	str	r0, [fp, #-56]	; 0xffffffc8
   13cac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13cb0:	cmp	r3, #0
   13cb4:	beq	13de4 <__assert_fail@plt+0x2d20>
   13cb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13cbc:	str	r3, [fp, #-20]	; 0xffffffec
   13cc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13cc4:	str	r3, [fp, #-24]	; 0xffffffe8
   13cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ccc:	ldr	r3, [fp, #-8]
   13cd0:	sub	r3, r2, r3
   13cd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13cd8:	add	r3, r2, r3
   13cdc:	str	r3, [fp, #-12]
   13ce0:	ldr	r3, [fp, #-8]
   13ce4:	cmp	r3, #1
   13ce8:	bls	13d60 <__assert_fail@plt+0x2c9c>
   13cec:	ldr	r3, [fp, #-8]
   13cf0:	sub	r3, r3, #1
   13cf4:	str	r3, [fp, #-40]	; 0xffffffd8
   13cf8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13cfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13d00:	cmp	r2, r3
   13d04:	bls	13d10 <__assert_fail@plt+0x2c4c>
   13d08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d0c:	str	r3, [fp, #-40]	; 0xffffffd8
   13d10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13d14:	cmp	r3, #0
   13d18:	beq	13d30 <__assert_fail@plt+0x2c6c>
   13d1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13d20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d24:	ldr	r0, [fp, #-12]
   13d28:	bl	10e84 <memcpy@plt>
   13d2c:	b	13d40 <__assert_fail@plt+0x2c7c>
   13d30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d34:	uxtb	r2, r3
   13d38:	ldr	r3, [fp, #-12]
   13d3c:	strb	r2, [r3]
   13d40:	ldr	r2, [fp, #-12]
   13d44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13d48:	add	r3, r2, r3
   13d4c:	str	r3, [fp, #-12]
   13d50:	ldr	r2, [fp, #-8]
   13d54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13d58:	sub	r3, r2, r3
   13d5c:	str	r3, [fp, #-8]
   13d60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13d64:	cmp	r3, #0
   13d68:	beq	13d88 <__assert_fail@plt+0x2cc4>
   13d6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d70:	mov	r1, r3
   13d74:	ldr	r0, [fp, #12]
   13d78:	bl	17f8c <__assert_fail@plt+0x6ec8>
   13d7c:	mov	r3, r0
   13d80:	cmp	r3, #0
   13d84:	bne	13dec <__assert_fail@plt+0x2d28>
   13d88:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13d8c:	eor	r3, r3, #1
   13d90:	uxtb	r3, r3
   13d94:	cmp	r3, #0
   13d98:	bne	13abc <__assert_fail@plt+0x29f8>
   13d9c:	b	13da4 <__assert_fail@plt+0x2ce0>
   13da0:	nop	{0}
   13da4:	ldr	r3, [fp, #-12]
   13da8:	mov	r2, #0
   13dac:	strb	r2, [r3]
   13db0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13db4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13db8:	add	r3, r2, r3
   13dbc:	ldr	r2, [fp, #-12]
   13dc0:	sub	r3, r2, r3
   13dc4:	str	r3, [fp, #-16]
   13dc8:	b	13df0 <__assert_fail@plt+0x2d2c>
   13dcc:	nop	{0}
   13dd0:	b	13df0 <__assert_fail@plt+0x2d2c>
   13dd4:	nop	{0}
   13dd8:	b	13df0 <__assert_fail@plt+0x2d2c>
   13ddc:	nop	{0}
   13de0:	b	13df0 <__assert_fail@plt+0x2d2c>
   13de4:	nop	{0}
   13de8:	b	13df0 <__assert_fail@plt+0x2d2c>
   13dec:	nop	{0}
   13df0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13df4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13df8:	str	r2, [r3]
   13dfc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13e00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e04:	str	r2, [r3]
   13e08:	ldr	r3, [fp, #-16]
   13e0c:	cmp	r3, #0
   13e10:	beq	13e1c <__assert_fail@plt+0x2d58>
   13e14:	ldr	r3, [fp, #-16]
   13e18:	b	13e20 <__assert_fail@plt+0x2d5c>
   13e1c:	mvn	r3, #0
   13e20:	mov	r0, r3
   13e24:	sub	sp, fp, #4
   13e28:	ldr	fp, [sp]
   13e2c:	add	sp, sp, #4
   13e30:	pop	{pc}		; (ldr pc, [sp], #4)
   13e34:	str	fp, [sp, #-8]!
   13e38:	str	lr, [sp, #4]
   13e3c:	add	fp, sp, #4
   13e40:	sub	sp, sp, #56	; 0x38
   13e44:	str	r0, [fp, #-48]	; 0xffffffd0
   13e48:	str	r1, [fp, #-52]	; 0xffffffcc
   13e4c:	str	r2, [fp, #-56]	; 0xffffffc8
   13e50:	str	r3, [fp, #-60]	; 0xffffffc4
   13e54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13e58:	strb	r3, [fp, #-17]	; 0xffffffef
   13e5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13e60:	strb	r3, [fp, #-18]	; 0xffffffee
   13e64:	ldrb	r2, [fp, #-17]	; 0xffffffef
   13e68:	ldrb	r3, [fp, #-18]	; 0xffffffee
   13e6c:	cmp	r2, r3
   13e70:	bne	13e90 <__assert_fail@plt+0x2dcc>
   13e74:	ldrb	r3, [fp, #-17]	; 0xffffffef
   13e78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13e7c:	mov	r1, r3
   13e80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13e84:	bl	11010 <memchr@plt>
   13e88:	mov	r3, r0
   13e8c:	b	14070 <__assert_fail@plt+0x2fac>
   13e90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13e94:	str	r3, [fp, #-12]
   13e98:	b	13eec <__assert_fail@plt+0x2e28>
   13e9c:	ldr	r3, [fp, #-12]
   13ea0:	str	r3, [fp, #-8]
   13ea4:	ldr	r3, [fp, #-8]
   13ea8:	ldrb	r3, [r3]
   13eac:	ldrb	r2, [fp, #-17]	; 0xffffffef
   13eb0:	cmp	r2, r3
   13eb4:	beq	13ecc <__assert_fail@plt+0x2e08>
   13eb8:	ldr	r3, [fp, #-8]
   13ebc:	ldrb	r3, [r3]
   13ec0:	ldrb	r2, [fp, #-18]	; 0xffffffee
   13ec4:	cmp	r2, r3
   13ec8:	bne	13ed4 <__assert_fail@plt+0x2e10>
   13ecc:	ldr	r3, [fp, #-12]
   13ed0:	b	14070 <__assert_fail@plt+0x2fac>
   13ed4:	ldr	r3, [fp, #-8]
   13ed8:	add	r3, r3, #1
   13edc:	str	r3, [fp, #-12]
   13ee0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ee4:	sub	r3, r3, #1
   13ee8:	str	r3, [fp, #-60]	; 0xffffffc4
   13eec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ef0:	cmp	r3, #0
   13ef4:	beq	13f08 <__assert_fail@plt+0x2e44>
   13ef8:	ldr	r3, [fp, #-12]
   13efc:	and	r3, r3, #3
   13f00:	cmp	r3, #0
   13f04:	bne	13e9c <__assert_fail@plt+0x2dd8>
   13f08:	ldr	r3, [fp, #-12]
   13f0c:	str	r3, [fp, #-16]
   13f10:	movw	r3, #257	; 0x101
   13f14:	movt	r3, #257	; 0x101
   13f18:	str	r3, [fp, #-24]	; 0xffffffe8
   13f1c:	ldrb	r2, [fp, #-17]	; 0xffffffef
   13f20:	ldrb	r3, [fp, #-17]	; 0xffffffef
   13f24:	lsl	r3, r3, #8
   13f28:	orr	r3, r2, r3
   13f2c:	str	r3, [fp, #-28]	; 0xffffffe4
   13f30:	ldrb	r2, [fp, #-18]	; 0xffffffee
   13f34:	ldrb	r3, [fp, #-18]	; 0xffffffee
   13f38:	lsl	r3, r3, #8
   13f3c:	orr	r3, r2, r3
   13f40:	str	r3, [fp, #-32]	; 0xffffffe0
   13f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f48:	lsl	r3, r3, #16
   13f4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f50:	orr	r3, r2, r3
   13f54:	str	r3, [fp, #-28]	; 0xffffffe4
   13f58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f5c:	lsl	r3, r3, #16
   13f60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f64:	orr	r3, r2, r3
   13f68:	str	r3, [fp, #-32]	; 0xffffffe0
   13f6c:	b	13ff8 <__assert_fail@plt+0x2f34>
   13f70:	ldr	r3, [fp, #-16]
   13f74:	ldr	r3, [r3]
   13f78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f7c:	eor	r3, r3, r2
   13f80:	str	r3, [fp, #-36]	; 0xffffffdc
   13f84:	ldr	r3, [fp, #-16]
   13f88:	ldr	r3, [r3]
   13f8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f90:	eor	r3, r3, r2
   13f94:	str	r3, [fp, #-40]	; 0xffffffd8
   13f98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fa0:	sub	r2, r2, r3
   13fa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fa8:	mvn	r3, r3
   13fac:	and	r2, r2, r3
   13fb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13fb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fb8:	sub	r1, r1, r3
   13fbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13fc0:	mvn	r3, r3
   13fc4:	and	r3, r3, r1
   13fc8:	orr	r2, r2, r3
   13fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fd0:	lsl	r3, r3, #7
   13fd4:	and	r3, r3, r2
   13fd8:	cmp	r3, #0
   13fdc:	bne	14008 <__assert_fail@plt+0x2f44>
   13fe0:	ldr	r3, [fp, #-16]
   13fe4:	add	r3, r3, #4
   13fe8:	str	r3, [fp, #-16]
   13fec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ff0:	sub	r3, r3, #4
   13ff4:	str	r3, [fp, #-60]	; 0xffffffc4
   13ff8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ffc:	cmp	r3, #3
   14000:	bhi	13f70 <__assert_fail@plt+0x2eac>
   14004:	b	1400c <__assert_fail@plt+0x2f48>
   14008:	nop	{0}
   1400c:	ldr	r3, [fp, #-16]
   14010:	str	r3, [fp, #-8]
   14014:	b	14060 <__assert_fail@plt+0x2f9c>
   14018:	ldr	r3, [fp, #-8]
   1401c:	ldrb	r3, [r3]
   14020:	ldrb	r2, [fp, #-17]	; 0xffffffef
   14024:	cmp	r2, r3
   14028:	beq	14040 <__assert_fail@plt+0x2f7c>
   1402c:	ldr	r3, [fp, #-8]
   14030:	ldrb	r3, [r3]
   14034:	ldrb	r2, [fp, #-18]	; 0xffffffee
   14038:	cmp	r2, r3
   1403c:	bne	14048 <__assert_fail@plt+0x2f84>
   14040:	ldr	r3, [fp, #-8]
   14044:	b	14070 <__assert_fail@plt+0x2fac>
   14048:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1404c:	sub	r3, r3, #1
   14050:	str	r3, [fp, #-60]	; 0xffffffc4
   14054:	ldr	r3, [fp, #-8]
   14058:	add	r3, r3, #1
   1405c:	str	r3, [fp, #-8]
   14060:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14064:	cmp	r3, #0
   14068:	bne	14018 <__assert_fail@plt+0x2f54>
   1406c:	mov	r3, #0
   14070:	mov	r0, r3
   14074:	sub	sp, fp, #4
   14078:	ldr	fp, [sp]
   1407c:	add	sp, sp, #4
   14080:	pop	{pc}		; (ldr pc, [sp], #4)
   14084:	str	fp, [sp, #-8]!
   14088:	str	lr, [sp, #4]
   1408c:	add	fp, sp, #4
   14090:	sub	sp, sp, #16
   14094:	str	r0, [fp, #-16]
   14098:	ldr	r3, [fp, #-16]
   1409c:	cmp	r3, #0
   140a0:	bne	140c8 <__assert_fail@plt+0x3004>
   140a4:	movw	r3, #45408	; 0xb160
   140a8:	movt	r3, #2
   140ac:	ldr	r3, [r3]
   140b0:	mov	r2, #55	; 0x37
   140b4:	mov	r1, #1
   140b8:	movw	r0, #39648	; 0x9ae0
   140bc:	movt	r0, #1
   140c0:	bl	10ef0 <fwrite@plt>
   140c4:	bl	11094 <abort@plt>
   140c8:	mov	r1, #47	; 0x2f
   140cc:	ldr	r0, [fp, #-16]
   140d0:	bl	11040 <strrchr@plt>
   140d4:	str	r0, [fp, #-8]
   140d8:	ldr	r3, [fp, #-8]
   140dc:	cmp	r3, #0
   140e0:	beq	140f0 <__assert_fail@plt+0x302c>
   140e4:	ldr	r3, [fp, #-8]
   140e8:	add	r3, r3, #1
   140ec:	b	140f4 <__assert_fail@plt+0x3030>
   140f0:	ldr	r3, [fp, #-16]
   140f4:	str	r3, [fp, #-12]
   140f8:	ldr	r2, [fp, #-12]
   140fc:	ldr	r3, [fp, #-16]
   14100:	sub	r3, r2, r3
   14104:	cmp	r3, #6
   14108:	ble	14178 <__assert_fail@plt+0x30b4>
   1410c:	ldr	r3, [fp, #-12]
   14110:	sub	r3, r3, #7
   14114:	mov	r2, #7
   14118:	movw	r1, #39704	; 0x9b18
   1411c:	movt	r1, #1
   14120:	mov	r0, r3
   14124:	bl	11088 <strncmp@plt>
   14128:	mov	r3, r0
   1412c:	cmp	r3, #0
   14130:	bne	14178 <__assert_fail@plt+0x30b4>
   14134:	ldr	r3, [fp, #-12]
   14138:	str	r3, [fp, #-16]
   1413c:	mov	r2, #3
   14140:	movw	r1, #39712	; 0x9b20
   14144:	movt	r1, #1
   14148:	ldr	r0, [fp, #-12]
   1414c:	bl	11088 <strncmp@plt>
   14150:	mov	r3, r0
   14154:	cmp	r3, #0
   14158:	bne	14178 <__assert_fail@plt+0x30b4>
   1415c:	ldr	r3, [fp, #-12]
   14160:	add	r3, r3, #3
   14164:	str	r3, [fp, #-16]
   14168:	movw	r3, #45392	; 0xb150
   1416c:	movt	r3, #2
   14170:	ldr	r2, [fp, #-16]
   14174:	str	r2, [r3]
   14178:	movw	r3, #45488	; 0xb1b0
   1417c:	movt	r3, #2
   14180:	ldr	r2, [fp, #-16]
   14184:	str	r2, [r3]
   14188:	movw	r3, #45396	; 0xb154
   1418c:	movt	r3, #2
   14190:	ldr	r2, [fp, #-16]
   14194:	str	r2, [r3]
   14198:	nop	{0}
   1419c:	sub	sp, fp, #4
   141a0:	ldr	fp, [sp]
   141a4:	add	sp, sp, #4
   141a8:	pop	{pc}		; (ldr pc, [sp], #4)
   141ac:	str	fp, [sp, #-8]!
   141b0:	str	lr, [sp, #4]
   141b4:	add	fp, sp, #4
   141b8:	sub	sp, sp, #16
   141bc:	str	r0, [fp, #-16]
   141c0:	bl	10fd4 <__errno_location@plt>
   141c4:	mov	r3, r0
   141c8:	ldr	r3, [r3]
   141cc:	str	r3, [fp, #-8]
   141d0:	ldr	r3, [fp, #-16]
   141d4:	cmp	r3, #0
   141d8:	beq	141e4 <__assert_fail@plt+0x3120>
   141dc:	ldr	r3, [fp, #-16]
   141e0:	b	141ec <__assert_fail@plt+0x3128>
   141e4:	movw	r3, #45492	; 0xb1b4
   141e8:	movt	r3, #2
   141ec:	mov	r1, #48	; 0x30
   141f0:	mov	r0, r3
   141f4:	bl	1798c <__assert_fail@plt+0x68c8>
   141f8:	mov	r3, r0
   141fc:	str	r3, [fp, #-12]
   14200:	bl	10fd4 <__errno_location@plt>
   14204:	mov	r2, r0
   14208:	ldr	r3, [fp, #-8]
   1420c:	str	r3, [r2]
   14210:	ldr	r3, [fp, #-12]
   14214:	mov	r0, r3
   14218:	sub	sp, fp, #4
   1421c:	ldr	fp, [sp]
   14220:	add	sp, sp, #4
   14224:	pop	{pc}		; (ldr pc, [sp], #4)
   14228:	push	{fp}		; (str fp, [sp, #-4]!)
   1422c:	add	fp, sp, #0
   14230:	sub	sp, sp, #12
   14234:	str	r0, [fp, #-8]
   14238:	ldr	r3, [fp, #-8]
   1423c:	cmp	r3, #0
   14240:	beq	1424c <__assert_fail@plt+0x3188>
   14244:	ldr	r3, [fp, #-8]
   14248:	b	14254 <__assert_fail@plt+0x3190>
   1424c:	movw	r3, #45492	; 0xb1b4
   14250:	movt	r3, #2
   14254:	ldr	r3, [r3]
   14258:	mov	r0, r3
   1425c:	add	sp, fp, #0
   14260:	pop	{fp}		; (ldr fp, [sp], #4)
   14264:	bx	lr
   14268:	push	{fp}		; (str fp, [sp, #-4]!)
   1426c:	add	fp, sp, #0
   14270:	sub	sp, sp, #12
   14274:	str	r0, [fp, #-8]
   14278:	str	r1, [fp, #-12]
   1427c:	ldr	r3, [fp, #-8]
   14280:	cmp	r3, #0
   14284:	beq	14290 <__assert_fail@plt+0x31cc>
   14288:	ldr	r3, [fp, #-8]
   1428c:	b	14298 <__assert_fail@plt+0x31d4>
   14290:	movw	r3, #45492	; 0xb1b4
   14294:	movt	r3, #2
   14298:	ldr	r2, [fp, #-12]
   1429c:	str	r2, [r3]
   142a0:	nop	{0}
   142a4:	add	sp, fp, #0
   142a8:	pop	{fp}		; (ldr fp, [sp], #4)
   142ac:	bx	lr
   142b0:	push	{fp}		; (str fp, [sp, #-4]!)
   142b4:	add	fp, sp, #0
   142b8:	sub	sp, sp, #36	; 0x24
   142bc:	str	r0, [fp, #-24]	; 0xffffffe8
   142c0:	mov	r3, r1
   142c4:	str	r2, [fp, #-32]	; 0xffffffe0
   142c8:	strb	r3, [fp, #-25]	; 0xffffffe7
   142cc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   142d0:	strb	r3, [fp, #-5]
   142d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142d8:	cmp	r3, #0
   142dc:	beq	142e8 <__assert_fail@plt+0x3224>
   142e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142e4:	b	142f0 <__assert_fail@plt+0x322c>
   142e8:	movw	r3, #45492	; 0xb1b4
   142ec:	movt	r3, #2
   142f0:	add	r2, r3, #8
   142f4:	ldrb	r3, [fp, #-5]
   142f8:	lsr	r3, r3, #5
   142fc:	uxtb	r3, r3
   14300:	lsl	r3, r3, #2
   14304:	add	r3, r2, r3
   14308:	str	r3, [fp, #-12]
   1430c:	ldrb	r3, [fp, #-5]
   14310:	and	r3, r3, #31
   14314:	str	r3, [fp, #-16]
   14318:	ldr	r3, [fp, #-12]
   1431c:	ldr	r2, [r3]
   14320:	ldr	r3, [fp, #-16]
   14324:	lsr	r3, r2, r3
   14328:	and	r3, r3, #1
   1432c:	str	r3, [fp, #-20]	; 0xffffffec
   14330:	ldr	r3, [fp, #-12]
   14334:	ldr	r3, [r3]
   14338:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1433c:	and	r1, r2, #1
   14340:	ldr	r2, [fp, #-20]	; 0xffffffec
   14344:	eor	r1, r1, r2
   14348:	ldr	r2, [fp, #-16]
   1434c:	lsl	r2, r1, r2
   14350:	eor	r2, r2, r3
   14354:	ldr	r3, [fp, #-12]
   14358:	str	r2, [r3]
   1435c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14360:	mov	r0, r3
   14364:	add	sp, fp, #0
   14368:	pop	{fp}		; (ldr fp, [sp], #4)
   1436c:	bx	lr
   14370:	push	{fp}		; (str fp, [sp, #-4]!)
   14374:	add	fp, sp, #0
   14378:	sub	sp, sp, #20
   1437c:	str	r0, [fp, #-16]
   14380:	str	r1, [fp, #-20]	; 0xffffffec
   14384:	ldr	r3, [fp, #-16]
   14388:	cmp	r3, #0
   1438c:	bne	1439c <__assert_fail@plt+0x32d8>
   14390:	movw	r3, #45492	; 0xb1b4
   14394:	movt	r3, #2
   14398:	str	r3, [fp, #-16]
   1439c:	ldr	r3, [fp, #-16]
   143a0:	ldr	r3, [r3, #4]
   143a4:	str	r3, [fp, #-8]
   143a8:	ldr	r3, [fp, #-16]
   143ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   143b0:	str	r2, [r3, #4]
   143b4:	ldr	r3, [fp, #-8]
   143b8:	mov	r0, r3
   143bc:	add	sp, fp, #0
   143c0:	pop	{fp}		; (ldr fp, [sp], #4)
   143c4:	bx	lr
   143c8:	str	fp, [sp, #-8]!
   143cc:	str	lr, [sp, #4]
   143d0:	add	fp, sp, #4
   143d4:	sub	sp, sp, #16
   143d8:	str	r0, [fp, #-8]
   143dc:	str	r1, [fp, #-12]
   143e0:	str	r2, [fp, #-16]
   143e4:	ldr	r3, [fp, #-8]
   143e8:	cmp	r3, #0
   143ec:	bne	143fc <__assert_fail@plt+0x3338>
   143f0:	movw	r3, #45492	; 0xb1b4
   143f4:	movt	r3, #2
   143f8:	str	r3, [fp, #-8]
   143fc:	ldr	r3, [fp, #-8]
   14400:	mov	r2, #10
   14404:	str	r2, [r3]
   14408:	ldr	r3, [fp, #-12]
   1440c:	cmp	r3, #0
   14410:	beq	14420 <__assert_fail@plt+0x335c>
   14414:	ldr	r3, [fp, #-16]
   14418:	cmp	r3, #0
   1441c:	bne	14424 <__assert_fail@plt+0x3360>
   14420:	bl	11094 <abort@plt>
   14424:	ldr	r3, [fp, #-8]
   14428:	ldr	r2, [fp, #-12]
   1442c:	str	r2, [r3, #40]	; 0x28
   14430:	ldr	r3, [fp, #-8]
   14434:	ldr	r2, [fp, #-16]
   14438:	str	r2, [r3, #44]	; 0x2c
   1443c:	nop	{0}
   14440:	sub	sp, fp, #4
   14444:	ldr	fp, [sp]
   14448:	add	sp, sp, #4
   1444c:	pop	{pc}		; (ldr pc, [sp], #4)
   14450:	str	fp, [sp, #-8]!
   14454:	str	lr, [sp, #4]
   14458:	add	fp, sp, #4
   1445c:	sub	sp, sp, #56	; 0x38
   14460:	str	r0, [fp, #-56]	; 0xffffffc8
   14464:	str	r1, [fp, #-60]	; 0xffffffc4
   14468:	sub	r1, fp, #52	; 0x34
   1446c:	mov	r2, #0
   14470:	mov	r3, #0
   14474:	strd	r2, [r1]
   14478:	strd	r2, [r1, #8]
   1447c:	strd	r2, [r1, #16]
   14480:	strd	r2, [r1, #24]
   14484:	strd	r2, [r1, #32]
   14488:	strd	r2, [r1, #40]	; 0x28
   1448c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14490:	cmp	r3, #10
   14494:	bne	1449c <__assert_fail@plt+0x33d8>
   14498:	bl	11094 <abort@plt>
   1449c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   144a0:	str	r3, [fp, #-52]	; 0xffffffcc
   144a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   144a8:	mov	r2, r3
   144ac:	sub	r3, fp, #52	; 0x34
   144b0:	ldrd	r0, [r3]
   144b4:	strd	r0, [r2]
   144b8:	ldrd	r0, [r3, #8]
   144bc:	strd	r0, [r2, #8]
   144c0:	ldrd	r0, [r3, #16]
   144c4:	strd	r0, [r2, #16]
   144c8:	ldrd	r0, [r3, #24]
   144cc:	strd	r0, [r2, #24]
   144d0:	ldrd	r0, [r3, #32]
   144d4:	strd	r0, [r2, #32]
   144d8:	ldrd	r0, [r3, #40]	; 0x28
   144dc:	strd	r0, [r2, #40]	; 0x28
   144e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   144e4:	sub	sp, fp, #4
   144e8:	ldr	fp, [sp]
   144ec:	add	sp, sp, #4
   144f0:	pop	{pc}		; (ldr pc, [sp], #4)
   144f4:	str	fp, [sp, #-8]!
   144f8:	str	lr, [sp, #4]
   144fc:	add	fp, sp, #4
   14500:	sub	sp, sp, #16
   14504:	str	r0, [fp, #-16]
   14508:	str	r1, [fp, #-20]	; 0xffffffec
   1450c:	ldr	r0, [fp, #-16]
   14510:	bl	10fa4 <gettext@plt>
   14514:	str	r0, [fp, #-8]
   14518:	ldr	r2, [fp, #-8]
   1451c:	ldr	r3, [fp, #-16]
   14520:	cmp	r2, r3
   14524:	beq	14530 <__assert_fail@plt+0x346c>
   14528:	ldr	r3, [fp, #-8]
   1452c:	b	145e0 <__assert_fail@plt+0x351c>
   14530:	bl	183fc <__assert_fail@plt+0x7338>
   14534:	str	r0, [fp, #-12]
   14538:	movw	r1, #39904	; 0x9be0
   1453c:	movt	r1, #1
   14540:	ldr	r0, [fp, #-12]
   14544:	bl	17d3c <__assert_fail@plt+0x6c78>
   14548:	mov	r3, r0
   1454c:	cmp	r3, #0
   14550:	bne	1457c <__assert_fail@plt+0x34b8>
   14554:	ldr	r3, [fp, #-16]
   14558:	ldrb	r3, [r3]
   1455c:	cmp	r3, #96	; 0x60
   14560:	bne	14570 <__assert_fail@plt+0x34ac>
   14564:	movw	r3, #39912	; 0x9be8
   14568:	movt	r3, #1
   1456c:	b	145e0 <__assert_fail@plt+0x351c>
   14570:	movw	r3, #39916	; 0x9bec
   14574:	movt	r3, #1
   14578:	b	145e0 <__assert_fail@plt+0x351c>
   1457c:	movw	r1, #39920	; 0x9bf0
   14580:	movt	r1, #1
   14584:	ldr	r0, [fp, #-12]
   14588:	bl	17d3c <__assert_fail@plt+0x6c78>
   1458c:	mov	r3, r0
   14590:	cmp	r3, #0
   14594:	bne	145c0 <__assert_fail@plt+0x34fc>
   14598:	ldr	r3, [fp, #-16]
   1459c:	ldrb	r3, [r3]
   145a0:	cmp	r3, #96	; 0x60
   145a4:	bne	145b4 <__assert_fail@plt+0x34f0>
   145a8:	movw	r3, #39928	; 0x9bf8
   145ac:	movt	r3, #1
   145b0:	b	145e0 <__assert_fail@plt+0x351c>
   145b4:	movw	r3, #39932	; 0x9bfc
   145b8:	movt	r3, #1
   145bc:	b	145e0 <__assert_fail@plt+0x351c>
   145c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   145c4:	cmp	r3, #9
   145c8:	bne	145d8 <__assert_fail@plt+0x3514>
   145cc:	movw	r3, #39936	; 0x9c00
   145d0:	movt	r3, #1
   145d4:	b	145e0 <__assert_fail@plt+0x351c>
   145d8:	movw	r3, #39940	; 0x9c04
   145dc:	movt	r3, #1
   145e0:	mov	r0, r3
   145e4:	sub	sp, fp, #4
   145e8:	ldr	fp, [sp]
   145ec:	add	sp, sp, #4
   145f0:	pop	{pc}		; (ldr pc, [sp], #4)
   145f4:	str	r4, [sp, #-12]!
   145f8:	str	fp, [sp, #4]
   145fc:	str	lr, [sp, #8]
   14600:	add	fp, sp, #8
   14604:	sub	sp, sp, #116	; 0x74
   14608:	str	r0, [fp, #-88]	; 0xffffffa8
   1460c:	str	r1, [fp, #-92]	; 0xffffffa4
   14610:	str	r2, [fp, #-96]	; 0xffffffa0
   14614:	str	r3, [fp, #-100]	; 0xffffff9c
   14618:	mov	r3, #0
   1461c:	str	r3, [fp, #-20]	; 0xffffffec
   14620:	mov	r3, #0
   14624:	str	r3, [fp, #-24]	; 0xffffffe8
   14628:	mov	r3, #0
   1462c:	str	r3, [fp, #-28]	; 0xffffffe4
   14630:	mov	r3, #0
   14634:	str	r3, [fp, #-32]	; 0xffffffe0
   14638:	mov	r3, #0
   1463c:	strb	r3, [fp, #-33]	; 0xffffffdf
   14640:	bl	10f08 <__ctype_get_mb_cur_max@plt>
   14644:	mov	r3, r0
   14648:	cmp	r3, #1
   1464c:	moveq	r3, #1
   14650:	movne	r3, #0
   14654:	strb	r3, [fp, #-57]	; 0xffffffc7
   14658:	ldr	r3, [fp, #8]
   1465c:	and	r3, r3, #2
   14660:	cmp	r3, #0
   14664:	movne	r3, #1
   14668:	moveq	r3, #0
   1466c:	strb	r3, [fp, #-34]	; 0xffffffde
   14670:	mov	r3, #0
   14674:	strb	r3, [fp, #-35]	; 0xffffffdd
   14678:	mov	r3, #0
   1467c:	strb	r3, [fp, #-36]	; 0xffffffdc
   14680:	mov	r3, #1
   14684:	strb	r3, [fp, #-37]	; 0xffffffdb
   14688:	ldr	r3, [fp, #4]
   1468c:	cmp	r3, #10
   14690:	ldrls	pc, [pc, r3, lsl #2]
   14694:	b	148ac <__assert_fail@plt+0x37e8>
   14698:	andeq	r4, r1, r0, lsr #17
   1469c:	andeq	r4, r1, r8, lsl r8
   146a0:	andeq	r4, r1, ip, lsr r8
   146a4:	andeq	r4, r1, r0, lsl r8
   146a8:	andeq	r4, r1, r0, lsr #16
   146ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   146b0:	andeq	r4, r1, r4, asr #13
   146b4:	andeq	r4, r1, r8, lsr r7
   146b8:	andeq	r4, r1, ip, asr #14
   146bc:	andeq	r4, r1, ip, asr #14
   146c0:	andeq	r4, r1, ip, asr #14
   146c4:	mov	r3, #5
   146c8:	str	r3, [fp, #4]
   146cc:	mov	r3, #1
   146d0:	strb	r3, [fp, #-34]	; 0xffffffde
   146d4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   146d8:	eor	r3, r3, #1
   146dc:	uxtb	r3, r3
   146e0:	cmp	r3, #0
   146e4:	beq	14718 <__assert_fail@plt+0x3654>
   146e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   146ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   146f0:	cmp	r2, r3
   146f4:	bcs	1470c <__assert_fail@plt+0x3648>
   146f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   146fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14700:	add	r3, r2, r3
   14704:	mov	r2, #34	; 0x22
   14708:	strb	r2, [r3]
   1470c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14710:	add	r3, r3, #1
   14714:	str	r3, [fp, #-20]	; 0xffffffec
   14718:	mov	r3, #1
   1471c:	strb	r3, [fp, #-33]	; 0xffffffdf
   14720:	movw	r3, #39936	; 0x9c00
   14724:	movt	r3, #1
   14728:	str	r3, [fp, #-28]	; 0xffffffe4
   1472c:	mov	r3, #1
   14730:	str	r3, [fp, #-32]	; 0xffffffe0
   14734:	b	148b0 <__assert_fail@plt+0x37ec>
   14738:	mov	r3, #1
   1473c:	strb	r3, [fp, #-33]	; 0xffffffdf
   14740:	mov	r3, #0
   14744:	strb	r3, [fp, #-34]	; 0xffffffde
   14748:	b	148b0 <__assert_fail@plt+0x37ec>
   1474c:	ldr	r3, [fp, #4]
   14750:	cmp	r3, #10
   14754:	beq	14780 <__assert_fail@plt+0x36bc>
   14758:	ldr	r1, [fp, #4]
   1475c:	movw	r0, #39944	; 0x9c08
   14760:	movt	r0, #1
   14764:	bl	144f4 <__assert_fail@plt+0x3430>
   14768:	str	r0, [fp, #16]
   1476c:	ldr	r1, [fp, #4]
   14770:	movw	r0, #39940	; 0x9c04
   14774:	movt	r0, #1
   14778:	bl	144f4 <__assert_fail@plt+0x3430>
   1477c:	str	r0, [fp, #20]
   14780:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14784:	eor	r3, r3, #1
   14788:	uxtb	r3, r3
   1478c:	cmp	r3, #0
   14790:	beq	147f0 <__assert_fail@plt+0x372c>
   14794:	ldr	r3, [fp, #16]
   14798:	str	r3, [fp, #-28]	; 0xffffffe4
   1479c:	b	147e0 <__assert_fail@plt+0x371c>
   147a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   147a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   147a8:	cmp	r2, r3
   147ac:	bcs	147c8 <__assert_fail@plt+0x3704>
   147b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   147b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   147b8:	add	r3, r2, r3
   147bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   147c0:	ldrb	r2, [r2]
   147c4:	strb	r2, [r3]
   147c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   147cc:	add	r3, r3, #1
   147d0:	str	r3, [fp, #-20]	; 0xffffffec
   147d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   147d8:	add	r3, r3, #1
   147dc:	str	r3, [fp, #-28]	; 0xffffffe4
   147e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   147e4:	ldrb	r3, [r3]
   147e8:	cmp	r3, #0
   147ec:	bne	147a0 <__assert_fail@plt+0x36dc>
   147f0:	mov	r3, #1
   147f4:	strb	r3, [fp, #-33]	; 0xffffffdf
   147f8:	ldr	r3, [fp, #20]
   147fc:	str	r3, [fp, #-28]	; 0xffffffe4
   14800:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14804:	bl	10fb0 <strlen@plt>
   14808:	str	r0, [fp, #-32]	; 0xffffffe0
   1480c:	b	148b0 <__assert_fail@plt+0x37ec>
   14810:	mov	r3, #1
   14814:	strb	r3, [fp, #-33]	; 0xffffffdf
   14818:	mov	r3, #1
   1481c:	strb	r3, [fp, #-34]	; 0xffffffde
   14820:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14824:	eor	r3, r3, #1
   14828:	uxtb	r3, r3
   1482c:	cmp	r3, #0
   14830:	beq	1483c <__assert_fail@plt+0x3778>
   14834:	mov	r3, #1
   14838:	strb	r3, [fp, #-33]	; 0xffffffdf
   1483c:	mov	r3, #2
   14840:	str	r3, [fp, #4]
   14844:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14848:	eor	r3, r3, #1
   1484c:	uxtb	r3, r3
   14850:	cmp	r3, #0
   14854:	beq	14888 <__assert_fail@plt+0x37c4>
   14858:	ldr	r2, [fp, #-20]	; 0xffffffec
   1485c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14860:	cmp	r2, r3
   14864:	bcs	1487c <__assert_fail@plt+0x37b8>
   14868:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1486c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14870:	add	r3, r2, r3
   14874:	mov	r2, #39	; 0x27
   14878:	strb	r2, [r3]
   1487c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14880:	add	r3, r3, #1
   14884:	str	r3, [fp, #-20]	; 0xffffffec
   14888:	movw	r3, #39940	; 0x9c04
   1488c:	movt	r3, #1
   14890:	str	r3, [fp, #-28]	; 0xffffffe4
   14894:	mov	r3, #1
   14898:	str	r3, [fp, #-32]	; 0xffffffe0
   1489c:	b	148b0 <__assert_fail@plt+0x37ec>
   148a0:	mov	r3, #0
   148a4:	strb	r3, [fp, #-34]	; 0xffffffde
   148a8:	b	148b0 <__assert_fail@plt+0x37ec>
   148ac:	bl	11094 <abort@plt>
   148b0:	mov	r3, #0
   148b4:	str	r3, [fp, #-16]
   148b8:	b	15a54 <__assert_fail@plt+0x4990>
   148bc:	mov	r3, #0
   148c0:	strb	r3, [fp, #-40]	; 0xffffffd8
   148c4:	mov	r3, #0
   148c8:	strb	r3, [fp, #-41]	; 0xffffffd7
   148cc:	mov	r3, #0
   148d0:	strb	r3, [fp, #-42]	; 0xffffffd6
   148d4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   148d8:	cmp	r3, #0
   148dc:	beq	14978 <__assert_fail@plt+0x38b4>
   148e0:	ldr	r3, [fp, #4]
   148e4:	cmp	r3, #2
   148e8:	beq	14978 <__assert_fail@plt+0x38b4>
   148ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148f0:	cmp	r3, #0
   148f4:	beq	14978 <__assert_fail@plt+0x38b4>
   148f8:	ldr	r2, [fp, #-16]
   148fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14900:	add	r4, r2, r3
   14904:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14908:	cmn	r3, #1
   1490c:	bne	14930 <__assert_fail@plt+0x386c>
   14910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14914:	cmp	r3, #1
   14918:	bls	14930 <__assert_fail@plt+0x386c>
   1491c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14920:	bl	10fb0 <strlen@plt>
   14924:	str	r0, [fp, #-100]	; 0xffffff9c
   14928:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1492c:	b	14934 <__assert_fail@plt+0x3870>
   14930:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14934:	cmp	r3, r4
   14938:	bcc	14978 <__assert_fail@plt+0x38b4>
   1493c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14940:	ldr	r3, [fp, #-16]
   14944:	add	r3, r2, r3
   14948:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1494c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14950:	mov	r0, r3
   14954:	bl	10ea8 <memcmp@plt>
   14958:	mov	r3, r0
   1495c:	cmp	r3, #0
   14960:	bne	14978 <__assert_fail@plt+0x38b4>
   14964:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14968:	cmp	r3, #0
   1496c:	bne	15c10 <__assert_fail@plt+0x4b4c>
   14970:	mov	r3, #1
   14974:	strb	r3, [fp, #-40]	; 0xffffffd8
   14978:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1497c:	ldr	r3, [fp, #-16]
   14980:	add	r3, r2, r3
   14984:	ldrb	r3, [r3]
   14988:	strb	r3, [fp, #-38]	; 0xffffffda
   1498c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14990:	cmp	r3, #126	; 0x7e
   14994:	ldrls	pc, [pc, r3, lsl #2]
   14998:	b	151d0 <__assert_fail@plt+0x410c>
   1499c:	muleq	r1, r8, fp
   149a0:	ldrdeq	r5, [r1], -r0
   149a4:	ldrdeq	r5, [r1], -r0
   149a8:	ldrdeq	r5, [r1], -r0
   149ac:	ldrdeq	r5, [r1], -r0
   149b0:	ldrdeq	r5, [r1], -r0
   149b4:	ldrdeq	r5, [r1], -r0
   149b8:	andeq	r4, r1, ip, lsl #31
   149bc:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   149c0:	andeq	r4, r1, r8, asr #31
   149c4:			; <UNDEFINED> instruction: 0x00014fb0
   149c8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   149cc:	andeq	r4, r1, r4, lsr #31
   149d0:			; <UNDEFINED> instruction: 0x00014fbc
   149d4:	ldrdeq	r5, [r1], -r0
   149d8:	ldrdeq	r5, [r1], -r0
   149dc:	ldrdeq	r5, [r1], -r0
   149e0:	ldrdeq	r5, [r1], -r0
   149e4:	ldrdeq	r5, [r1], -r0
   149e8:	ldrdeq	r5, [r1], -r0
   149ec:	ldrdeq	r5, [r1], -r0
   149f0:	ldrdeq	r5, [r1], -r0
   149f4:	ldrdeq	r5, [r1], -r0
   149f8:	ldrdeq	r5, [r1], -r0
   149fc:	ldrdeq	r5, [r1], -r0
   14a00:	ldrdeq	r5, [r1], -r0
   14a04:	ldrdeq	r5, [r1], -r0
   14a08:	ldrdeq	r5, [r1], -r0
   14a0c:	ldrdeq	r5, [r1], -r0
   14a10:	ldrdeq	r5, [r1], -r0
   14a14:	ldrdeq	r5, [r1], -r0
   14a18:	ldrdeq	r5, [r1], -r0
   14a1c:	strheq	r5, [r1], -r4
   14a20:	strheq	r5, [r1], -ip
   14a24:	strheq	r5, [r1], -ip
   14a28:	andeq	r5, r1, r8, lsr #1
   14a2c:	strheq	r5, [r1], -ip
   14a30:	andeq	r5, r1, r4, asr #3
   14a34:	strheq	r5, [r1], -ip
   14a38:	ldrdeq	r5, [r1], -r8
   14a3c:	strheq	r5, [r1], -ip
   14a40:	strheq	r5, [r1], -ip
   14a44:	strheq	r5, [r1], -ip
   14a48:	andeq	r5, r1, r4, asr #3
   14a4c:	andeq	r5, r1, r4, asr #3
   14a50:	andeq	r5, r1, r4, asr #3
   14a54:	andeq	r5, r1, r4, asr #3
   14a58:	andeq	r5, r1, r4, asr #3
   14a5c:	andeq	r5, r1, r4, asr #3
   14a60:	andeq	r5, r1, r4, asr #3
   14a64:	andeq	r5, r1, r4, asr #3
   14a68:	andeq	r5, r1, r4, asr #3
   14a6c:	andeq	r5, r1, r4, asr #3
   14a70:	andeq	r5, r1, r4, asr #3
   14a74:	andeq	r5, r1, r4, asr #3
   14a78:	andeq	r5, r1, r4, asr #3
   14a7c:	andeq	r5, r1, r4, asr #3
   14a80:	andeq	r5, r1, r4, asr #3
   14a84:	andeq	r5, r1, r4, asr #3
   14a88:	strheq	r5, [r1], -ip
   14a8c:	strheq	r5, [r1], -ip
   14a90:	strheq	r5, [r1], -ip
   14a94:	strheq	r5, [r1], -ip
   14a98:	andeq	r4, r1, r8, ror sp
   14a9c:	ldrdeq	r5, [r1], -r0
   14aa0:	andeq	r5, r1, r4, asr #3
   14aa4:	andeq	r5, r1, r4, asr #3
   14aa8:	andeq	r5, r1, r4, asr #3
   14aac:	andeq	r5, r1, r4, asr #3
   14ab0:	andeq	r5, r1, r4, asr #3
   14ab4:	andeq	r5, r1, r4, asr #3
   14ab8:	andeq	r5, r1, r4, asr #3
   14abc:	andeq	r5, r1, r4, asr #3
   14ac0:	andeq	r5, r1, r4, asr #3
   14ac4:	andeq	r5, r1, r4, asr #3
   14ac8:	andeq	r5, r1, r4, asr #3
   14acc:	andeq	r5, r1, r4, asr #3
   14ad0:	andeq	r5, r1, r4, asr #3
   14ad4:	andeq	r5, r1, r4, asr #3
   14ad8:	andeq	r5, r1, r4, asr #3
   14adc:	andeq	r5, r1, r4, asr #3
   14ae0:	andeq	r5, r1, r4, asr #3
   14ae4:	andeq	r5, r1, r4, asr #3
   14ae8:	andeq	r5, r1, r4, asr #3
   14aec:	andeq	r5, r1, r4, asr #3
   14af0:	andeq	r5, r1, r4, asr #3
   14af4:	andeq	r5, r1, r4, asr #3
   14af8:	andeq	r5, r1, r4, asr #3
   14afc:	andeq	r5, r1, r4, asr #3
   14b00:	andeq	r5, r1, r4, asr #3
   14b04:	andeq	r5, r1, r4, asr #3
   14b08:	strheq	r5, [r1], -ip
   14b0c:	andeq	r4, r1, r0, ror #31
   14b10:	andeq	r5, r1, r4, asr #3
   14b14:	strheq	r5, [r1], -ip
   14b18:	andeq	r5, r1, r4, asr #3
   14b1c:	strheq	r5, [r1], -ip
   14b20:	andeq	r5, r1, r4, asr #3
   14b24:	andeq	r5, r1, r4, asr #3
   14b28:	andeq	r5, r1, r4, asr #3
   14b2c:	andeq	r5, r1, r4, asr #3
   14b30:	andeq	r5, r1, r4, asr #3
   14b34:	andeq	r5, r1, r4, asr #3
   14b38:	andeq	r5, r1, r4, asr #3
   14b3c:	andeq	r5, r1, r4, asr #3
   14b40:	andeq	r5, r1, r4, asr #3
   14b44:	andeq	r5, r1, r4, asr #3
   14b48:	andeq	r5, r1, r4, asr #3
   14b4c:	andeq	r5, r1, r4, asr #3
   14b50:	andeq	r5, r1, r4, asr #3
   14b54:	andeq	r5, r1, r4, asr #3
   14b58:	andeq	r5, r1, r4, asr #3
   14b5c:	andeq	r5, r1, r4, asr #3
   14b60:	andeq	r5, r1, r4, asr #3
   14b64:	andeq	r5, r1, r4, asr #3
   14b68:	andeq	r5, r1, r4, asr #3
   14b6c:	andeq	r5, r1, r4, asr #3
   14b70:	andeq	r5, r1, r4, asr #3
   14b74:	andeq	r5, r1, r4, asr #3
   14b78:	andeq	r5, r1, r4, asr #3
   14b7c:	andeq	r5, r1, r4, asr #3
   14b80:	andeq	r5, r1, r4, asr #3
   14b84:	andeq	r5, r1, r4, asr #3
   14b88:	andeq	r5, r1, r0, rrx
   14b8c:	strheq	r5, [r1], -ip
   14b90:	andeq	r5, r1, r0, rrx
   14b94:	andeq	r5, r1, r8, lsr #1
   14b98:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14b9c:	cmp	r3, #0
   14ba0:	beq	14d64 <__assert_fail@plt+0x3ca0>
   14ba4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14ba8:	cmp	r3, #0
   14bac:	bne	15c18 <__assert_fail@plt+0x4b54>
   14bb0:	mov	r3, #1
   14bb4:	strb	r3, [fp, #-41]	; 0xffffffd7
   14bb8:	ldr	r3, [fp, #4]
   14bbc:	cmp	r3, #2
   14bc0:	bne	14c70 <__assert_fail@plt+0x3bac>
   14bc4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14bc8:	eor	r3, r3, #1
   14bcc:	uxtb	r3, r3
   14bd0:	cmp	r3, #0
   14bd4:	beq	14c70 <__assert_fail@plt+0x3bac>
   14bd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14bdc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14be0:	cmp	r2, r3
   14be4:	bcs	14bfc <__assert_fail@plt+0x3b38>
   14be8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bf0:	add	r3, r2, r3
   14bf4:	mov	r2, #39	; 0x27
   14bf8:	strb	r2, [r3]
   14bfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c00:	add	r3, r3, #1
   14c04:	str	r3, [fp, #-20]	; 0xffffffec
   14c08:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c10:	cmp	r2, r3
   14c14:	bcs	14c2c <__assert_fail@plt+0x3b68>
   14c18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c20:	add	r3, r2, r3
   14c24:	mov	r2, #36	; 0x24
   14c28:	strb	r2, [r3]
   14c2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c30:	add	r3, r3, #1
   14c34:	str	r3, [fp, #-20]	; 0xffffffec
   14c38:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c40:	cmp	r2, r3
   14c44:	bcs	14c5c <__assert_fail@plt+0x3b98>
   14c48:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c50:	add	r3, r2, r3
   14c54:	mov	r2, #39	; 0x27
   14c58:	strb	r2, [r3]
   14c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c60:	add	r3, r3, #1
   14c64:	str	r3, [fp, #-20]	; 0xffffffec
   14c68:	mov	r3, #1
   14c6c:	strb	r3, [fp, #-35]	; 0xffffffdd
   14c70:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c74:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c78:	cmp	r2, r3
   14c7c:	bcs	14c94 <__assert_fail@plt+0x3bd0>
   14c80:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c88:	add	r3, r2, r3
   14c8c:	mov	r2, #92	; 0x5c
   14c90:	strb	r2, [r3]
   14c94:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c98:	add	r3, r3, #1
   14c9c:	str	r3, [fp, #-20]	; 0xffffffec
   14ca0:	ldr	r3, [fp, #4]
   14ca4:	cmp	r3, #2
   14ca8:	beq	14d58 <__assert_fail@plt+0x3c94>
   14cac:	ldr	r3, [fp, #-16]
   14cb0:	add	r3, r3, #1
   14cb4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14cb8:	cmp	r2, r3
   14cbc:	bls	14d58 <__assert_fail@plt+0x3c94>
   14cc0:	ldr	r3, [fp, #-16]
   14cc4:	add	r3, r3, #1
   14cc8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14ccc:	add	r3, r2, r3
   14cd0:	ldrb	r3, [r3]
   14cd4:	cmp	r3, #47	; 0x2f
   14cd8:	bls	14d58 <__assert_fail@plt+0x3c94>
   14cdc:	ldr	r3, [fp, #-16]
   14ce0:	add	r3, r3, #1
   14ce4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14ce8:	add	r3, r2, r3
   14cec:	ldrb	r3, [r3]
   14cf0:	cmp	r3, #57	; 0x39
   14cf4:	bhi	14d58 <__assert_fail@plt+0x3c94>
   14cf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14cfc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14d00:	cmp	r2, r3
   14d04:	bcs	14d1c <__assert_fail@plt+0x3c58>
   14d08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d10:	add	r3, r2, r3
   14d14:	mov	r2, #48	; 0x30
   14d18:	strb	r2, [r3]
   14d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d20:	add	r3, r3, #1
   14d24:	str	r3, [fp, #-20]	; 0xffffffec
   14d28:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14d30:	cmp	r2, r3
   14d34:	bcs	14d4c <__assert_fail@plt+0x3c88>
   14d38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d40:	add	r3, r2, r3
   14d44:	mov	r2, #48	; 0x30
   14d48:	strb	r2, [r3]
   14d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d50:	add	r3, r3, #1
   14d54:	str	r3, [fp, #-20]	; 0xffffffec
   14d58:	mov	r3, #48	; 0x30
   14d5c:	strb	r3, [fp, #-38]	; 0xffffffda
   14d60:	b	157a0 <__assert_fail@plt+0x46dc>
   14d64:	ldr	r3, [fp, #8]
   14d68:	and	r3, r3, #1
   14d6c:	cmp	r3, #0
   14d70:	beq	157a0 <__assert_fail@plt+0x46dc>
   14d74:	b	15a48 <__assert_fail@plt+0x4984>
   14d78:	ldr	r3, [fp, #4]
   14d7c:	cmp	r3, #2
   14d80:	beq	14d94 <__assert_fail@plt+0x3cd0>
   14d84:	ldr	r3, [fp, #4]
   14d88:	cmp	r3, #5
   14d8c:	beq	14da4 <__assert_fail@plt+0x3ce0>
   14d90:	b	14f88 <__assert_fail@plt+0x3ec4>
   14d94:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14d98:	cmp	r3, #0
   14d9c:	beq	14f7c <__assert_fail@plt+0x3eb8>
   14da0:	b	15c4c <__assert_fail@plt+0x4b88>
   14da4:	ldr	r3, [fp, #8]
   14da8:	and	r3, r3, #4
   14dac:	cmp	r3, #0
   14db0:	beq	14f84 <__assert_fail@plt+0x3ec0>
   14db4:	ldr	r3, [fp, #-16]
   14db8:	add	r3, r3, #2
   14dbc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14dc0:	cmp	r2, r3
   14dc4:	bls	14f84 <__assert_fail@plt+0x3ec0>
   14dc8:	ldr	r3, [fp, #-16]
   14dcc:	add	r3, r3, #1
   14dd0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14dd4:	add	r3, r2, r3
   14dd8:	ldrb	r3, [r3]
   14ddc:	cmp	r3, #63	; 0x3f
   14de0:	bne	14f84 <__assert_fail@plt+0x3ec0>
   14de4:	ldr	r3, [fp, #-16]
   14de8:	add	r3, r3, #2
   14dec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14df0:	add	r3, r2, r3
   14df4:	ldrb	r3, [r3]
   14df8:	sub	r3, r3, #33	; 0x21
   14dfc:	cmp	r3, #29
   14e00:	ldrls	pc, [pc, r3, lsl #2]
   14e04:	b	14f74 <__assert_fail@plt+0x3eb0>
   14e08:	andeq	r4, r1, r0, lsl #29
   14e0c:	andeq	r4, r1, r4, ror pc
   14e10:	andeq	r4, r1, r4, ror pc
   14e14:	andeq	r4, r1, r4, ror pc
   14e18:	andeq	r4, r1, r4, ror pc
   14e1c:	andeq	r4, r1, r4, ror pc
   14e20:	andeq	r4, r1, r0, lsl #29
   14e24:	andeq	r4, r1, r0, lsl #29
   14e28:	andeq	r4, r1, r0, lsl #29
   14e2c:	andeq	r4, r1, r4, ror pc
   14e30:	andeq	r4, r1, r4, ror pc
   14e34:	andeq	r4, r1, r4, ror pc
   14e38:	andeq	r4, r1, r0, lsl #29
   14e3c:	andeq	r4, r1, r4, ror pc
   14e40:	andeq	r4, r1, r0, lsl #29
   14e44:	andeq	r4, r1, r4, ror pc
   14e48:	andeq	r4, r1, r4, ror pc
   14e4c:	andeq	r4, r1, r4, ror pc
   14e50:	andeq	r4, r1, r4, ror pc
   14e54:	andeq	r4, r1, r4, ror pc
   14e58:	andeq	r4, r1, r4, ror pc
   14e5c:	andeq	r4, r1, r4, ror pc
   14e60:	andeq	r4, r1, r4, ror pc
   14e64:	andeq	r4, r1, r4, ror pc
   14e68:	andeq	r4, r1, r4, ror pc
   14e6c:	andeq	r4, r1, r4, ror pc
   14e70:	andeq	r4, r1, r4, ror pc
   14e74:	andeq	r4, r1, r0, lsl #29
   14e78:	andeq	r4, r1, r0, lsl #29
   14e7c:	andeq	r4, r1, r0, lsl #29
   14e80:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14e84:	cmp	r3, #0
   14e88:	bne	15c20 <__assert_fail@plt+0x4b5c>
   14e8c:	ldr	r3, [fp, #-16]
   14e90:	add	r3, r3, #2
   14e94:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14e98:	add	r3, r2, r3
   14e9c:	ldrb	r3, [r3]
   14ea0:	strb	r3, [fp, #-38]	; 0xffffffda
   14ea4:	ldr	r3, [fp, #-16]
   14ea8:	add	r3, r3, #2
   14eac:	str	r3, [fp, #-16]
   14eb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14eb4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14eb8:	cmp	r2, r3
   14ebc:	bcs	14ed4 <__assert_fail@plt+0x3e10>
   14ec0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ec8:	add	r3, r2, r3
   14ecc:	mov	r2, #63	; 0x3f
   14ed0:	strb	r2, [r3]
   14ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ed8:	add	r3, r3, #1
   14edc:	str	r3, [fp, #-20]	; 0xffffffec
   14ee0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ee4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ee8:	cmp	r2, r3
   14eec:	bcs	14f04 <__assert_fail@plt+0x3e40>
   14ef0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ef8:	add	r3, r2, r3
   14efc:	mov	r2, #34	; 0x22
   14f00:	strb	r2, [r3]
   14f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f08:	add	r3, r3, #1
   14f0c:	str	r3, [fp, #-20]	; 0xffffffec
   14f10:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14f18:	cmp	r2, r3
   14f1c:	bcs	14f34 <__assert_fail@plt+0x3e70>
   14f20:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14f24:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f28:	add	r3, r2, r3
   14f2c:	mov	r2, #34	; 0x22
   14f30:	strb	r2, [r3]
   14f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f38:	add	r3, r3, #1
   14f3c:	str	r3, [fp, #-20]	; 0xffffffec
   14f40:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14f48:	cmp	r2, r3
   14f4c:	bcs	14f64 <__assert_fail@plt+0x3ea0>
   14f50:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f58:	add	r3, r2, r3
   14f5c:	mov	r2, #63	; 0x3f
   14f60:	strb	r2, [r3]
   14f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f68:	add	r3, r3, #1
   14f6c:	str	r3, [fp, #-20]	; 0xffffffec
   14f70:	b	14f78 <__assert_fail@plt+0x3eb4>
   14f74:	nop	{0}
   14f78:	b	14f84 <__assert_fail@plt+0x3ec0>
   14f7c:	nop	{0}
   14f80:	b	157d4 <__assert_fail@plt+0x4710>
   14f84:	nop	{0}
   14f88:	b	157d4 <__assert_fail@plt+0x4710>
   14f8c:	mov	r3, #97	; 0x61
   14f90:	strb	r3, [fp, #-39]	; 0xffffffd9
   14f94:	b	15048 <__assert_fail@plt+0x3f84>
   14f98:	mov	r3, #98	; 0x62
   14f9c:	strb	r3, [fp, #-39]	; 0xffffffd9
   14fa0:	b	15048 <__assert_fail@plt+0x3f84>
   14fa4:	mov	r3, #102	; 0x66
   14fa8:	strb	r3, [fp, #-39]	; 0xffffffd9
   14fac:	b	15048 <__assert_fail@plt+0x3f84>
   14fb0:	mov	r3, #110	; 0x6e
   14fb4:	strb	r3, [fp, #-39]	; 0xffffffd9
   14fb8:	b	1502c <__assert_fail@plt+0x3f68>
   14fbc:	mov	r3, #114	; 0x72
   14fc0:	strb	r3, [fp, #-39]	; 0xffffffd9
   14fc4:	b	1502c <__assert_fail@plt+0x3f68>
   14fc8:	mov	r3, #116	; 0x74
   14fcc:	strb	r3, [fp, #-39]	; 0xffffffd9
   14fd0:	b	1502c <__assert_fail@plt+0x3f68>
   14fd4:	mov	r3, #118	; 0x76
   14fd8:	strb	r3, [fp, #-39]	; 0xffffffd9
   14fdc:	b	15048 <__assert_fail@plt+0x3f84>
   14fe0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14fe4:	strb	r3, [fp, #-39]	; 0xffffffd9
   14fe8:	ldr	r3, [fp, #4]
   14fec:	cmp	r3, #2
   14ff0:	bne	15004 <__assert_fail@plt+0x3f40>
   14ff4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14ff8:	cmp	r3, #0
   14ffc:	beq	15960 <__assert_fail@plt+0x489c>
   15000:	b	15c4c <__assert_fail@plt+0x4b88>
   15004:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15008:	cmp	r3, #0
   1500c:	beq	15028 <__assert_fail@plt+0x3f64>
   15010:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15014:	cmp	r3, #0
   15018:	beq	15028 <__assert_fail@plt+0x3f64>
   1501c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15020:	cmp	r3, #0
   15024:	bne	15968 <__assert_fail@plt+0x48a4>
   15028:	nop	{0}
   1502c:	ldr	r3, [fp, #4]
   15030:	cmp	r3, #2
   15034:	bne	15044 <__assert_fail@plt+0x3f80>
   15038:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1503c:	cmp	r3, #0
   15040:	bne	15c28 <__assert_fail@plt+0x4b64>
   15044:	nop	{0}
   15048:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1504c:	cmp	r3, #0
   15050:	beq	157a8 <__assert_fail@plt+0x46e4>
   15054:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   15058:	strb	r3, [fp, #-38]	; 0xffffffda
   1505c:	b	15860 <__assert_fail@plt+0x479c>
   15060:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15064:	cmn	r3, #1
   15068:	bne	1508c <__assert_fail@plt+0x3fc8>
   1506c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15070:	add	r3, r3, #1
   15074:	ldrb	r3, [r3]
   15078:	cmp	r3, #0
   1507c:	movne	r3, #1
   15080:	moveq	r3, #0
   15084:	uxtb	r3, r3
   15088:	b	150a0 <__assert_fail@plt+0x3fdc>
   1508c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15090:	cmp	r3, #1
   15094:	movne	r3, #1
   15098:	moveq	r3, #0
   1509c:	uxtb	r3, r3
   150a0:	cmp	r3, #0
   150a4:	bne	157b0 <__assert_fail@plt+0x46ec>
   150a8:	ldr	r3, [fp, #-16]
   150ac:	cmp	r3, #0
   150b0:	bne	157b8 <__assert_fail@plt+0x46f4>
   150b4:	mov	r3, #1
   150b8:	strb	r3, [fp, #-42]	; 0xffffffd6
   150bc:	ldr	r3, [fp, #4]
   150c0:	cmp	r3, #2
   150c4:	bne	157c0 <__assert_fail@plt+0x46fc>
   150c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   150cc:	cmp	r3, #0
   150d0:	beq	157c0 <__assert_fail@plt+0x46fc>
   150d4:	b	15c4c <__assert_fail@plt+0x4b88>
   150d8:	mov	r3, #1
   150dc:	strb	r3, [fp, #-36]	; 0xffffffdc
   150e0:	mov	r3, #1
   150e4:	strb	r3, [fp, #-42]	; 0xffffffd6
   150e8:	ldr	r3, [fp, #4]
   150ec:	cmp	r3, #2
   150f0:	bne	157c8 <__assert_fail@plt+0x4704>
   150f4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   150f8:	cmp	r3, #0
   150fc:	bne	15c30 <__assert_fail@plt+0x4b6c>
   15100:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15104:	cmp	r3, #0
   15108:	beq	15128 <__assert_fail@plt+0x4064>
   1510c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15110:	cmp	r3, #0
   15114:	bne	15128 <__assert_fail@plt+0x4064>
   15118:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1511c:	str	r3, [fp, #-24]	; 0xffffffe8
   15120:	mov	r3, #0
   15124:	str	r3, [fp, #-92]	; 0xffffffa4
   15128:	ldr	r2, [fp, #-20]	; 0xffffffec
   1512c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15130:	cmp	r2, r3
   15134:	bcs	1514c <__assert_fail@plt+0x4088>
   15138:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1513c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15140:	add	r3, r2, r3
   15144:	mov	r2, #39	; 0x27
   15148:	strb	r2, [r3]
   1514c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15150:	add	r3, r3, #1
   15154:	str	r3, [fp, #-20]	; 0xffffffec
   15158:	ldr	r2, [fp, #-20]	; 0xffffffec
   1515c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15160:	cmp	r2, r3
   15164:	bcs	1517c <__assert_fail@plt+0x40b8>
   15168:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1516c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15170:	add	r3, r2, r3
   15174:	mov	r2, #92	; 0x5c
   15178:	strb	r2, [r3]
   1517c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15180:	add	r3, r3, #1
   15184:	str	r3, [fp, #-20]	; 0xffffffec
   15188:	ldr	r2, [fp, #-20]	; 0xffffffec
   1518c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15190:	cmp	r2, r3
   15194:	bcs	151ac <__assert_fail@plt+0x40e8>
   15198:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1519c:	ldr	r3, [fp, #-20]	; 0xffffffec
   151a0:	add	r3, r2, r3
   151a4:	mov	r2, #39	; 0x27
   151a8:	strb	r2, [r3]
   151ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   151b0:	add	r3, r3, #1
   151b4:	str	r3, [fp, #-20]	; 0xffffffec
   151b8:	mov	r3, #0
   151bc:	strb	r3, [fp, #-35]	; 0xffffffdd
   151c0:	b	157c8 <__assert_fail@plt+0x4704>
   151c4:	mov	r3, #1
   151c8:	strb	r3, [fp, #-42]	; 0xffffffd6
   151cc:	b	157d4 <__assert_fail@plt+0x4710>
   151d0:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   151d4:	cmp	r3, #0
   151d8:	beq	15218 <__assert_fail@plt+0x4154>
   151dc:	mov	r3, #1
   151e0:	str	r3, [fp, #-48]	; 0xffffffd0
   151e4:	bl	10f8c <__ctype_b_loc@plt>
   151e8:	mov	r3, r0
   151ec:	ldr	r2, [r3]
   151f0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   151f4:	lsl	r3, r3, #1
   151f8:	add	r3, r2, r3
   151fc:	ldrh	r3, [r3]
   15200:	and	r3, r3, #16384	; 0x4000
   15204:	cmp	r3, #0
   15208:	movne	r3, #1
   1520c:	moveq	r3, #0
   15210:	strb	r3, [fp, #-49]	; 0xffffffcf
   15214:	b	15464 <__assert_fail@plt+0x43a0>
   15218:	sub	r3, fp, #76	; 0x4c
   1521c:	mov	r2, #8
   15220:	mov	r1, #0
   15224:	mov	r0, r3
   15228:	bl	10fec <memset@plt>
   1522c:	mov	r3, #0
   15230:	str	r3, [fp, #-48]	; 0xffffffd0
   15234:	mov	r3, #1
   15238:	strb	r3, [fp, #-49]	; 0xffffffcf
   1523c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15240:	cmn	r3, #1
   15244:	bne	15254 <__assert_fail@plt+0x4190>
   15248:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1524c:	bl	10fb0 <strlen@plt>
   15250:	str	r0, [fp, #-100]	; 0xffffff9c
   15254:	ldr	r2, [fp, #-16]
   15258:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1525c:	add	r3, r2, r3
   15260:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15264:	add	r1, r2, r3
   15268:	ldr	r2, [fp, #-16]
   1526c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15270:	add	r3, r2, r3
   15274:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15278:	sub	r2, r2, r3
   1527c:	sub	r3, fp, #76	; 0x4c
   15280:	sub	r0, fp, #80	; 0x50
   15284:	bl	18464 <__assert_fail@plt+0x73a0>
   15288:	str	r0, [fp, #-64]	; 0xffffffc0
   1528c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15290:	cmp	r3, #0
   15294:	beq	15458 <__assert_fail@plt+0x4394>
   15298:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1529c:	cmn	r3, #1
   152a0:	bne	152b0 <__assert_fail@plt+0x41ec>
   152a4:	mov	r3, #0
   152a8:	strb	r3, [fp, #-49]	; 0xffffffcf
   152ac:	b	15464 <__assert_fail@plt+0x43a0>
   152b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   152b4:	cmn	r3, #2
   152b8:	bne	15310 <__assert_fail@plt+0x424c>
   152bc:	mov	r3, #0
   152c0:	strb	r3, [fp, #-49]	; 0xffffffcf
   152c4:	b	152d4 <__assert_fail@plt+0x4210>
   152c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   152cc:	add	r3, r3, #1
   152d0:	str	r3, [fp, #-48]	; 0xffffffd0
   152d4:	ldr	r2, [fp, #-16]
   152d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   152dc:	add	r3, r2, r3
   152e0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   152e4:	cmp	r2, r3
   152e8:	bls	15460 <__assert_fail@plt+0x439c>
   152ec:	ldr	r2, [fp, #-16]
   152f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   152f4:	add	r3, r2, r3
   152f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   152fc:	add	r3, r2, r3
   15300:	ldrb	r3, [r3]
   15304:	cmp	r3, #0
   15308:	bne	152c8 <__assert_fail@plt+0x4204>
   1530c:	b	15460 <__assert_fail@plt+0x439c>
   15310:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15314:	cmp	r3, #0
   15318:	beq	1540c <__assert_fail@plt+0x4348>
   1531c:	ldr	r3, [fp, #4]
   15320:	cmp	r3, #2
   15324:	bne	1540c <__assert_fail@plt+0x4348>
   15328:	mov	r3, #1
   1532c:	str	r3, [fp, #-56]	; 0xffffffc8
   15330:	b	153fc <__assert_fail@plt+0x4338>
   15334:	ldr	r2, [fp, #-16]
   15338:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1533c:	add	r2, r2, r3
   15340:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15344:	add	r3, r2, r3
   15348:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1534c:	add	r3, r2, r3
   15350:	ldrb	r3, [r3]
   15354:	sub	r3, r3, #91	; 0x5b
   15358:	cmp	r3, #33	; 0x21
   1535c:	ldrls	pc, [pc, r3, lsl #2]
   15360:	b	153ec <__assert_fail@plt+0x4328>
   15364:	andeq	r5, r1, ip, asr #24
   15368:	andeq	r5, r1, ip, asr #24
   1536c:	andeq	r5, r1, ip, ror #7
   15370:	andeq	r5, r1, ip, asr #24
   15374:	andeq	r5, r1, ip, ror #7
   15378:	andeq	r5, r1, ip, asr #24
   1537c:	andeq	r5, r1, ip, ror #7
   15380:	andeq	r5, r1, ip, ror #7
   15384:	andeq	r5, r1, ip, ror #7
   15388:	andeq	r5, r1, ip, ror #7
   1538c:	andeq	r5, r1, ip, ror #7
   15390:	andeq	r5, r1, ip, ror #7
   15394:	andeq	r5, r1, ip, ror #7
   15398:	andeq	r5, r1, ip, ror #7
   1539c:	andeq	r5, r1, ip, ror #7
   153a0:	andeq	r5, r1, ip, ror #7
   153a4:	andeq	r5, r1, ip, ror #7
   153a8:	andeq	r5, r1, ip, ror #7
   153ac:	andeq	r5, r1, ip, ror #7
   153b0:	andeq	r5, r1, ip, ror #7
   153b4:	andeq	r5, r1, ip, ror #7
   153b8:	andeq	r5, r1, ip, ror #7
   153bc:	andeq	r5, r1, ip, ror #7
   153c0:	andeq	r5, r1, ip, ror #7
   153c4:	andeq	r5, r1, ip, ror #7
   153c8:	andeq	r5, r1, ip, ror #7
   153cc:	andeq	r5, r1, ip, ror #7
   153d0:	andeq	r5, r1, ip, ror #7
   153d4:	andeq	r5, r1, ip, ror #7
   153d8:	andeq	r5, r1, ip, ror #7
   153dc:	andeq	r5, r1, ip, ror #7
   153e0:	andeq	r5, r1, ip, ror #7
   153e4:	andeq	r5, r1, ip, ror #7
   153e8:	andeq	r5, r1, ip, asr #24
   153ec:	nop	{0}
   153f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   153f4:	add	r3, r3, #1
   153f8:	str	r3, [fp, #-56]	; 0xffffffc8
   153fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15400:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15404:	cmp	r2, r3
   15408:	bcc	15334 <__assert_fail@plt+0x4270>
   1540c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15410:	mov	r0, r3
   15414:	bl	10ee4 <iswprint@plt>
   15418:	mov	r3, r0
   1541c:	cmp	r3, #0
   15420:	bne	1542c <__assert_fail@plt+0x4368>
   15424:	mov	r3, #0
   15428:	strb	r3, [fp, #-49]	; 0xffffffcf
   1542c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15430:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15434:	add	r3, r2, r3
   15438:	str	r3, [fp, #-48]	; 0xffffffd0
   1543c:	sub	r3, fp, #76	; 0x4c
   15440:	mov	r0, r3
   15444:	bl	10e90 <mbsinit@plt>
   15448:	mov	r3, r0
   1544c:	cmp	r3, #0
   15450:	beq	15254 <__assert_fail@plt+0x4190>
   15454:	b	15464 <__assert_fail@plt+0x43a0>
   15458:	nop	{0}
   1545c:	b	15464 <__assert_fail@plt+0x43a0>
   15460:	nop	{0}
   15464:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   15468:	strb	r3, [fp, #-42]	; 0xffffffd6
   1546c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15470:	cmp	r3, #1
   15474:	bhi	15498 <__assert_fail@plt+0x43d4>
   15478:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1547c:	cmp	r3, #0
   15480:	beq	157d0 <__assert_fail@plt+0x470c>
   15484:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   15488:	eor	r3, r3, #1
   1548c:	uxtb	r3, r3
   15490:	cmp	r3, #0
   15494:	beq	157d0 <__assert_fail@plt+0x470c>
   15498:	ldr	r2, [fp, #-16]
   1549c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   154a0:	add	r3, r2, r3
   154a4:	str	r3, [fp, #-68]	; 0xffffffbc
   154a8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   154ac:	cmp	r3, #0
   154b0:	beq	15664 <__assert_fail@plt+0x45a0>
   154b4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   154b8:	eor	r3, r3, #1
   154bc:	uxtb	r3, r3
   154c0:	cmp	r3, #0
   154c4:	beq	15664 <__assert_fail@plt+0x45a0>
   154c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   154cc:	cmp	r3, #0
   154d0:	bne	15c38 <__assert_fail@plt+0x4b74>
   154d4:	mov	r3, #1
   154d8:	strb	r3, [fp, #-41]	; 0xffffffd7
   154dc:	ldr	r3, [fp, #4]
   154e0:	cmp	r3, #2
   154e4:	bne	15594 <__assert_fail@plt+0x44d0>
   154e8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   154ec:	eor	r3, r3, #1
   154f0:	uxtb	r3, r3
   154f4:	cmp	r3, #0
   154f8:	beq	15594 <__assert_fail@plt+0x44d0>
   154fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15500:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15504:	cmp	r2, r3
   15508:	bcs	15520 <__assert_fail@plt+0x445c>
   1550c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15510:	ldr	r3, [fp, #-20]	; 0xffffffec
   15514:	add	r3, r2, r3
   15518:	mov	r2, #39	; 0x27
   1551c:	strb	r2, [r3]
   15520:	ldr	r3, [fp, #-20]	; 0xffffffec
   15524:	add	r3, r3, #1
   15528:	str	r3, [fp, #-20]	; 0xffffffec
   1552c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15530:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15534:	cmp	r2, r3
   15538:	bcs	15550 <__assert_fail@plt+0x448c>
   1553c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15540:	ldr	r3, [fp, #-20]	; 0xffffffec
   15544:	add	r3, r2, r3
   15548:	mov	r2, #36	; 0x24
   1554c:	strb	r2, [r3]
   15550:	ldr	r3, [fp, #-20]	; 0xffffffec
   15554:	add	r3, r3, #1
   15558:	str	r3, [fp, #-20]	; 0xffffffec
   1555c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15560:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15564:	cmp	r2, r3
   15568:	bcs	15580 <__assert_fail@plt+0x44bc>
   1556c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15570:	ldr	r3, [fp, #-20]	; 0xffffffec
   15574:	add	r3, r2, r3
   15578:	mov	r2, #39	; 0x27
   1557c:	strb	r2, [r3]
   15580:	ldr	r3, [fp, #-20]	; 0xffffffec
   15584:	add	r3, r3, #1
   15588:	str	r3, [fp, #-20]	; 0xffffffec
   1558c:	mov	r3, #1
   15590:	strb	r3, [fp, #-35]	; 0xffffffdd
   15594:	ldr	r2, [fp, #-20]	; 0xffffffec
   15598:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1559c:	cmp	r2, r3
   155a0:	bcs	155b8 <__assert_fail@plt+0x44f4>
   155a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   155a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   155ac:	add	r3, r2, r3
   155b0:	mov	r2, #92	; 0x5c
   155b4:	strb	r2, [r3]
   155b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   155bc:	add	r3, r3, #1
   155c0:	str	r3, [fp, #-20]	; 0xffffffec
   155c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   155c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155cc:	cmp	r2, r3
   155d0:	bcs	155f8 <__assert_fail@plt+0x4534>
   155d4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   155d8:	lsr	r3, r3, #6
   155dc:	uxtb	r2, r3
   155e0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   155e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155e8:	add	r3, r1, r3
   155ec:	add	r2, r2, #48	; 0x30
   155f0:	uxtb	r2, r2
   155f4:	strb	r2, [r3]
   155f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   155fc:	add	r3, r3, #1
   15600:	str	r3, [fp, #-20]	; 0xffffffec
   15604:	ldr	r2, [fp, #-20]	; 0xffffffec
   15608:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1560c:	cmp	r2, r3
   15610:	bcs	15640 <__assert_fail@plt+0x457c>
   15614:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15618:	lsr	r3, r3, #3
   1561c:	uxtb	r3, r3
   15620:	and	r3, r3, #7
   15624:	uxtb	r2, r3
   15628:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1562c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15630:	add	r3, r1, r3
   15634:	add	r2, r2, #48	; 0x30
   15638:	uxtb	r2, r2
   1563c:	strb	r2, [r3]
   15640:	ldr	r3, [fp, #-20]	; 0xffffffec
   15644:	add	r3, r3, #1
   15648:	str	r3, [fp, #-20]	; 0xffffffec
   1564c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15650:	and	r3, r3, #7
   15654:	uxtb	r3, r3
   15658:	add	r3, r3, #48	; 0x30
   1565c:	strb	r3, [fp, #-38]	; 0xffffffda
   15660:	b	156a8 <__assert_fail@plt+0x45e4>
   15664:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   15668:	cmp	r3, #0
   1566c:	beq	156a8 <__assert_fail@plt+0x45e4>
   15670:	ldr	r2, [fp, #-20]	; 0xffffffec
   15674:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15678:	cmp	r2, r3
   1567c:	bcs	15694 <__assert_fail@plt+0x45d0>
   15680:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15684:	ldr	r3, [fp, #-20]	; 0xffffffec
   15688:	add	r3, r2, r3
   1568c:	mov	r2, #92	; 0x5c
   15690:	strb	r2, [r3]
   15694:	ldr	r3, [fp, #-20]	; 0xffffffec
   15698:	add	r3, r3, #1
   1569c:	str	r3, [fp, #-20]	; 0xffffffec
   156a0:	mov	r3, #0
   156a4:	strb	r3, [fp, #-40]	; 0xffffffd8
   156a8:	ldr	r3, [fp, #-16]
   156ac:	add	r3, r3, #1
   156b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   156b4:	cmp	r2, r3
   156b8:	bls	15798 <__assert_fail@plt+0x46d4>
   156bc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   156c0:	cmp	r3, #0
   156c4:	beq	15744 <__assert_fail@plt+0x4680>
   156c8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   156cc:	eor	r3, r3, #1
   156d0:	uxtb	r3, r3
   156d4:	cmp	r3, #0
   156d8:	beq	15744 <__assert_fail@plt+0x4680>
   156dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   156e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   156e4:	cmp	r2, r3
   156e8:	bcs	15700 <__assert_fail@plt+0x463c>
   156ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   156f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   156f4:	add	r3, r2, r3
   156f8:	mov	r2, #39	; 0x27
   156fc:	strb	r2, [r3]
   15700:	ldr	r3, [fp, #-20]	; 0xffffffec
   15704:	add	r3, r3, #1
   15708:	str	r3, [fp, #-20]	; 0xffffffec
   1570c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15710:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15714:	cmp	r2, r3
   15718:	bcs	15730 <__assert_fail@plt+0x466c>
   1571c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15720:	ldr	r3, [fp, #-20]	; 0xffffffec
   15724:	add	r3, r2, r3
   15728:	mov	r2, #39	; 0x27
   1572c:	strb	r2, [r3]
   15730:	ldr	r3, [fp, #-20]	; 0xffffffec
   15734:	add	r3, r3, #1
   15738:	str	r3, [fp, #-20]	; 0xffffffec
   1573c:	mov	r3, #0
   15740:	strb	r3, [fp, #-35]	; 0xffffffdd
   15744:	ldr	r2, [fp, #-20]	; 0xffffffec
   15748:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1574c:	cmp	r2, r3
   15750:	bcs	15768 <__assert_fail@plt+0x46a4>
   15754:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15758:	ldr	r3, [fp, #-20]	; 0xffffffec
   1575c:	add	r3, r2, r3
   15760:	ldrb	r2, [fp, #-38]	; 0xffffffda
   15764:	strb	r2, [r3]
   15768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1576c:	add	r3, r3, #1
   15770:	str	r3, [fp, #-20]	; 0xffffffec
   15774:	ldr	r3, [fp, #-16]
   15778:	add	r3, r3, #1
   1577c:	str	r3, [fp, #-16]
   15780:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15784:	ldr	r3, [fp, #-16]
   15788:	add	r3, r2, r3
   1578c:	ldrb	r3, [r3]
   15790:	strb	r3, [fp, #-38]	; 0xffffffda
   15794:	b	154a8 <__assert_fail@plt+0x43e4>
   15798:	nop	{0}
   1579c:	b	15974 <__assert_fail@plt+0x48b0>
   157a0:	nop	{0}
   157a4:	b	157d4 <__assert_fail@plt+0x4710>
   157a8:	nop	{0}
   157ac:	b	157d4 <__assert_fail@plt+0x4710>
   157b0:	nop	{0}
   157b4:	b	157d4 <__assert_fail@plt+0x4710>
   157b8:	nop	{0}
   157bc:	b	157d4 <__assert_fail@plt+0x4710>
   157c0:	nop	{0}
   157c4:	b	157d4 <__assert_fail@plt+0x4710>
   157c8:	nop	{0}
   157cc:	b	157d4 <__assert_fail@plt+0x4710>
   157d0:	nop	{0}
   157d4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   157d8:	eor	r3, r3, #1
   157dc:	uxtb	r3, r3
   157e0:	cmp	r3, #0
   157e4:	bne	157f4 <__assert_fail@plt+0x4730>
   157e8:	ldr	r3, [fp, #4]
   157ec:	cmp	r3, #2
   157f0:	bne	15808 <__assert_fail@plt+0x4744>
   157f4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   157f8:	eor	r3, r3, #1
   157fc:	uxtb	r3, r3
   15800:	cmp	r3, #0
   15804:	bne	15848 <__assert_fail@plt+0x4784>
   15808:	ldr	r3, [fp, #12]
   1580c:	cmp	r3, #0
   15810:	beq	15848 <__assert_fail@plt+0x4784>
   15814:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15818:	lsr	r3, r3, #5
   1581c:	uxtb	r3, r3
   15820:	lsl	r3, r3, #2
   15824:	ldr	r2, [fp, #12]
   15828:	add	r3, r2, r3
   1582c:	ldr	r2, [r3]
   15830:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15834:	and	r3, r3, #31
   15838:	lsr	r3, r2, r3
   1583c:	and	r3, r3, #1
   15840:	cmp	r3, #0
   15844:	bne	1585c <__assert_fail@plt+0x4798>
   15848:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1584c:	eor	r3, r3, #1
   15850:	uxtb	r3, r3
   15854:	cmp	r3, #0
   15858:	bne	15970 <__assert_fail@plt+0x48ac>
   1585c:	nop	{0}
   15860:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15864:	cmp	r3, #0
   15868:	bne	15c40 <__assert_fail@plt+0x4b7c>
   1586c:	mov	r3, #1
   15870:	strb	r3, [fp, #-41]	; 0xffffffd7
   15874:	ldr	r3, [fp, #4]
   15878:	cmp	r3, #2
   1587c:	bne	1592c <__assert_fail@plt+0x4868>
   15880:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15884:	eor	r3, r3, #1
   15888:	uxtb	r3, r3
   1588c:	cmp	r3, #0
   15890:	beq	1592c <__assert_fail@plt+0x4868>
   15894:	ldr	r2, [fp, #-20]	; 0xffffffec
   15898:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1589c:	cmp	r2, r3
   158a0:	bcs	158b8 <__assert_fail@plt+0x47f4>
   158a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   158a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158ac:	add	r3, r2, r3
   158b0:	mov	r2, #39	; 0x27
   158b4:	strb	r2, [r3]
   158b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158bc:	add	r3, r3, #1
   158c0:	str	r3, [fp, #-20]	; 0xffffffec
   158c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   158c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   158cc:	cmp	r2, r3
   158d0:	bcs	158e8 <__assert_fail@plt+0x4824>
   158d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   158d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158dc:	add	r3, r2, r3
   158e0:	mov	r2, #36	; 0x24
   158e4:	strb	r2, [r3]
   158e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158ec:	add	r3, r3, #1
   158f0:	str	r3, [fp, #-20]	; 0xffffffec
   158f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   158f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   158fc:	cmp	r2, r3
   15900:	bcs	15918 <__assert_fail@plt+0x4854>
   15904:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15908:	ldr	r3, [fp, #-20]	; 0xffffffec
   1590c:	add	r3, r2, r3
   15910:	mov	r2, #39	; 0x27
   15914:	strb	r2, [r3]
   15918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1591c:	add	r3, r3, #1
   15920:	str	r3, [fp, #-20]	; 0xffffffec
   15924:	mov	r3, #1
   15928:	strb	r3, [fp, #-35]	; 0xffffffdd
   1592c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15930:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15934:	cmp	r2, r3
   15938:	bcs	15950 <__assert_fail@plt+0x488c>
   1593c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15940:	ldr	r3, [fp, #-20]	; 0xffffffec
   15944:	add	r3, r2, r3
   15948:	mov	r2, #92	; 0x5c
   1594c:	strb	r2, [r3]
   15950:	ldr	r3, [fp, #-20]	; 0xffffffec
   15954:	add	r3, r3, #1
   15958:	str	r3, [fp, #-20]	; 0xffffffec
   1595c:	b	15974 <__assert_fail@plt+0x48b0>
   15960:	nop	{0}
   15964:	b	15974 <__assert_fail@plt+0x48b0>
   15968:	nop	{0}
   1596c:	b	15974 <__assert_fail@plt+0x48b0>
   15970:	nop	{0}
   15974:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15978:	cmp	r3, #0
   1597c:	beq	159fc <__assert_fail@plt+0x4938>
   15980:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   15984:	eor	r3, r3, #1
   15988:	uxtb	r3, r3
   1598c:	cmp	r3, #0
   15990:	beq	159fc <__assert_fail@plt+0x4938>
   15994:	ldr	r2, [fp, #-20]	; 0xffffffec
   15998:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1599c:	cmp	r2, r3
   159a0:	bcs	159b8 <__assert_fail@plt+0x48f4>
   159a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   159a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159ac:	add	r3, r2, r3
   159b0:	mov	r2, #39	; 0x27
   159b4:	strb	r2, [r3]
   159b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159bc:	add	r3, r3, #1
   159c0:	str	r3, [fp, #-20]	; 0xffffffec
   159c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   159c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   159cc:	cmp	r2, r3
   159d0:	bcs	159e8 <__assert_fail@plt+0x4924>
   159d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   159d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159dc:	add	r3, r2, r3
   159e0:	mov	r2, #39	; 0x27
   159e4:	strb	r2, [r3]
   159e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159ec:	add	r3, r3, #1
   159f0:	str	r3, [fp, #-20]	; 0xffffffec
   159f4:	mov	r3, #0
   159f8:	strb	r3, [fp, #-35]	; 0xffffffdd
   159fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a04:	cmp	r2, r3
   15a08:	bcs	15a20 <__assert_fail@plt+0x495c>
   15a0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15a10:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a14:	add	r3, r2, r3
   15a18:	ldrb	r2, [fp, #-38]	; 0xffffffda
   15a1c:	strb	r2, [r3]
   15a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a24:	add	r3, r3, #1
   15a28:	str	r3, [fp, #-20]	; 0xffffffec
   15a2c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   15a30:	eor	r3, r3, #1
   15a34:	uxtb	r3, r3
   15a38:	cmp	r3, #0
   15a3c:	beq	15a48 <__assert_fail@plt+0x4984>
   15a40:	mov	r3, #0
   15a44:	strb	r3, [fp, #-37]	; 0xffffffdb
   15a48:	ldr	r3, [fp, #-16]
   15a4c:	add	r3, r3, #1
   15a50:	str	r3, [fp, #-16]
   15a54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15a58:	cmn	r3, #1
   15a5c:	bne	15a84 <__assert_fail@plt+0x49c0>
   15a60:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15a64:	ldr	r3, [fp, #-16]
   15a68:	add	r3, r2, r3
   15a6c:	ldrb	r3, [r3]
   15a70:	cmp	r3, #0
   15a74:	movne	r3, #1
   15a78:	moveq	r3, #0
   15a7c:	uxtb	r3, r3
   15a80:	b	15a9c <__assert_fail@plt+0x49d8>
   15a84:	ldr	r2, [fp, #-16]
   15a88:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15a8c:	cmp	r2, r3
   15a90:	movne	r3, #1
   15a94:	moveq	r3, #0
   15a98:	uxtb	r3, r3
   15a9c:	cmp	r3, #0
   15aa0:	bne	148bc <__assert_fail@plt+0x37f8>
   15aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15aa8:	cmp	r3, #0
   15aac:	bne	15ac8 <__assert_fail@plt+0x4a04>
   15ab0:	ldr	r3, [fp, #4]
   15ab4:	cmp	r3, #2
   15ab8:	bne	15ac8 <__assert_fail@plt+0x4a04>
   15abc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ac0:	cmp	r3, #0
   15ac4:	bne	15c48 <__assert_fail@plt+0x4b84>
   15ac8:	ldr	r3, [fp, #4]
   15acc:	cmp	r3, #2
   15ad0:	bne	15b70 <__assert_fail@plt+0x4aac>
   15ad4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ad8:	eor	r3, r3, #1
   15adc:	uxtb	r3, r3
   15ae0:	cmp	r3, #0
   15ae4:	beq	15b70 <__assert_fail@plt+0x4aac>
   15ae8:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   15aec:	cmp	r3, #0
   15af0:	beq	15b70 <__assert_fail@plt+0x4aac>
   15af4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   15af8:	cmp	r3, #0
   15afc:	beq	15b44 <__assert_fail@plt+0x4a80>
   15b00:	ldr	r3, [fp, #20]
   15b04:	str	r3, [sp, #16]
   15b08:	ldr	r3, [fp, #16]
   15b0c:	str	r3, [sp, #12]
   15b10:	ldr	r3, [fp, #12]
   15b14:	str	r3, [sp, #8]
   15b18:	ldr	r3, [fp, #8]
   15b1c:	str	r3, [sp, #4]
   15b20:	mov	r3, #5
   15b24:	str	r3, [sp]
   15b28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b2c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15b30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b34:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15b38:	bl	145f4 <__assert_fail@plt+0x3530>
   15b3c:	mov	r3, r0
   15b40:	b	15cb0 <__assert_fail@plt+0x4bec>
   15b44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15b48:	cmp	r3, #0
   15b4c:	bne	15b70 <__assert_fail@plt+0x4aac>
   15b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b54:	cmp	r3, #0
   15b58:	beq	15b70 <__assert_fail@plt+0x4aac>
   15b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b60:	str	r3, [fp, #-92]	; 0xffffffa4
   15b64:	mov	r3, #0
   15b68:	str	r3, [fp, #-20]	; 0xffffffec
   15b6c:	b	14688 <__assert_fail@plt+0x35c4>
   15b70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b74:	cmp	r3, #0
   15b78:	beq	15be4 <__assert_fail@plt+0x4b20>
   15b7c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15b80:	eor	r3, r3, #1
   15b84:	uxtb	r3, r3
   15b88:	cmp	r3, #0
   15b8c:	beq	15be4 <__assert_fail@plt+0x4b20>
   15b90:	b	15bd4 <__assert_fail@plt+0x4b10>
   15b94:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15b9c:	cmp	r2, r3
   15ba0:	bcs	15bbc <__assert_fail@plt+0x4af8>
   15ba4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bac:	add	r3, r2, r3
   15bb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15bb4:	ldrb	r2, [r2]
   15bb8:	strb	r2, [r3]
   15bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bc0:	add	r3, r3, #1
   15bc4:	str	r3, [fp, #-20]	; 0xffffffec
   15bc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bcc:	add	r3, r3, #1
   15bd0:	str	r3, [fp, #-28]	; 0xffffffe4
   15bd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bd8:	ldrb	r3, [r3]
   15bdc:	cmp	r3, #0
   15be0:	bne	15b94 <__assert_fail@plt+0x4ad0>
   15be4:	ldr	r2, [fp, #-20]	; 0xffffffec
   15be8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15bec:	cmp	r2, r3
   15bf0:	bcs	15c08 <__assert_fail@plt+0x4b44>
   15bf4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bfc:	add	r3, r2, r3
   15c00:	mov	r2, #0
   15c04:	strb	r2, [r3]
   15c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c0c:	b	15cb0 <__assert_fail@plt+0x4bec>
   15c10:	nop	{0}
   15c14:	b	15c4c <__assert_fail@plt+0x4b88>
   15c18:	nop	{0}
   15c1c:	b	15c4c <__assert_fail@plt+0x4b88>
   15c20:	nop	{0}
   15c24:	b	15c4c <__assert_fail@plt+0x4b88>
   15c28:	nop	{0}
   15c2c:	b	15c4c <__assert_fail@plt+0x4b88>
   15c30:	nop	{0}
   15c34:	b	15c4c <__assert_fail@plt+0x4b88>
   15c38:	nop	{0}
   15c3c:	b	15c4c <__assert_fail@plt+0x4b88>
   15c40:	nop	{0}
   15c44:	b	15c4c <__assert_fail@plt+0x4b88>
   15c48:	nop	{0}
   15c4c:	ldr	r3, [fp, #4]
   15c50:	cmp	r3, #2
   15c54:	bne	15c6c <__assert_fail@plt+0x4ba8>
   15c58:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15c5c:	cmp	r3, #0
   15c60:	beq	15c6c <__assert_fail@plt+0x4ba8>
   15c64:	mov	r3, #4
   15c68:	str	r3, [fp, #4]
   15c6c:	ldr	r3, [fp, #8]
   15c70:	bic	r3, r3, #2
   15c74:	ldr	r2, [fp, #20]
   15c78:	str	r2, [sp, #16]
   15c7c:	ldr	r2, [fp, #16]
   15c80:	str	r2, [sp, #12]
   15c84:	mov	r2, #0
   15c88:	str	r2, [sp, #8]
   15c8c:	str	r3, [sp, #4]
   15c90:	ldr	r3, [fp, #4]
   15c94:	str	r3, [sp]
   15c98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c9c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15ca0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15ca4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15ca8:	bl	145f4 <__assert_fail@plt+0x3530>
   15cac:	mov	r3, r0
   15cb0:	mov	r0, r3
   15cb4:	sub	sp, fp, #8
   15cb8:	ldr	r4, [sp]
   15cbc:	ldr	fp, [sp, #4]
   15cc0:	add	sp, sp, #8
   15cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   15cc8:	str	fp, [sp, #-8]!
   15ccc:	str	lr, [sp, #4]
   15cd0:	add	fp, sp, #4
   15cd4:	sub	sp, sp, #56	; 0x38
   15cd8:	str	r0, [fp, #-24]	; 0xffffffe8
   15cdc:	str	r1, [fp, #-28]	; 0xffffffe4
   15ce0:	str	r2, [fp, #-32]	; 0xffffffe0
   15ce4:	str	r3, [fp, #-36]	; 0xffffffdc
   15ce8:	ldr	r3, [fp, #4]
   15cec:	cmp	r3, #0
   15cf0:	beq	15cfc <__assert_fail@plt+0x4c38>
   15cf4:	ldr	r3, [fp, #4]
   15cf8:	b	15d04 <__assert_fail@plt+0x4c40>
   15cfc:	movw	r3, #45492	; 0xb1b4
   15d00:	movt	r3, #2
   15d04:	str	r3, [fp, #-8]
   15d08:	bl	10fd4 <__errno_location@plt>
   15d0c:	mov	r3, r0
   15d10:	ldr	r3, [r3]
   15d14:	str	r3, [fp, #-12]
   15d18:	ldr	r3, [fp, #-8]
   15d1c:	ldr	r3, [r3]
   15d20:	ldr	r2, [fp, #-8]
   15d24:	ldr	r2, [r2, #4]
   15d28:	ldr	r1, [fp, #-8]
   15d2c:	add	r1, r1, #8
   15d30:	ldr	r0, [fp, #-8]
   15d34:	ldr	r0, [r0, #40]	; 0x28
   15d38:	ldr	ip, [fp, #-8]
   15d3c:	ldr	ip, [ip, #44]	; 0x2c
   15d40:	str	ip, [sp, #16]
   15d44:	str	r0, [sp, #12]
   15d48:	str	r1, [sp, #8]
   15d4c:	str	r2, [sp, #4]
   15d50:	str	r3, [sp]
   15d54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15d5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d64:	bl	145f4 <__assert_fail@plt+0x3530>
   15d68:	str	r0, [fp, #-16]
   15d6c:	bl	10fd4 <__errno_location@plt>
   15d70:	mov	r2, r0
   15d74:	ldr	r3, [fp, #-12]
   15d78:	str	r3, [r2]
   15d7c:	ldr	r3, [fp, #-16]
   15d80:	mov	r0, r3
   15d84:	sub	sp, fp, #4
   15d88:	ldr	fp, [sp]
   15d8c:	add	sp, sp, #4
   15d90:	pop	{pc}		; (ldr pc, [sp], #4)
   15d94:	str	fp, [sp, #-8]!
   15d98:	str	lr, [sp, #4]
   15d9c:	add	fp, sp, #4
   15da0:	sub	sp, sp, #16
   15da4:	str	r0, [fp, #-8]
   15da8:	str	r1, [fp, #-12]
   15dac:	str	r2, [fp, #-16]
   15db0:	ldr	r3, [fp, #-16]
   15db4:	mov	r2, #0
   15db8:	ldr	r1, [fp, #-12]
   15dbc:	ldr	r0, [fp, #-8]
   15dc0:	bl	15ddc <__assert_fail@plt+0x4d18>
   15dc4:	mov	r3, r0
   15dc8:	mov	r0, r3
   15dcc:	sub	sp, fp, #4
   15dd0:	ldr	fp, [sp]
   15dd4:	add	sp, sp, #4
   15dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   15ddc:	str	fp, [sp, #-8]!
   15de0:	str	lr, [sp, #4]
   15de4:	add	fp, sp, #4
   15de8:	sub	sp, sp, #64	; 0x40
   15dec:	str	r0, [fp, #-32]	; 0xffffffe0
   15df0:	str	r1, [fp, #-36]	; 0xffffffdc
   15df4:	str	r2, [fp, #-40]	; 0xffffffd8
   15df8:	str	r3, [fp, #-44]	; 0xffffffd4
   15dfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e00:	cmp	r3, #0
   15e04:	beq	15e10 <__assert_fail@plt+0x4d4c>
   15e08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e0c:	b	15e18 <__assert_fail@plt+0x4d54>
   15e10:	movw	r3, #45492	; 0xb1b4
   15e14:	movt	r3, #2
   15e18:	str	r3, [fp, #-8]
   15e1c:	bl	10fd4 <__errno_location@plt>
   15e20:	mov	r3, r0
   15e24:	ldr	r3, [r3]
   15e28:	str	r3, [fp, #-12]
   15e2c:	ldr	r3, [fp, #-8]
   15e30:	ldr	r3, [r3, #4]
   15e34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15e38:	cmp	r2, #0
   15e3c:	moveq	r2, #1
   15e40:	movne	r2, #0
   15e44:	uxtb	r2, r2
   15e48:	orr	r3, r3, r2
   15e4c:	str	r3, [fp, #-16]
   15e50:	ldr	r3, [fp, #-8]
   15e54:	ldr	r3, [r3]
   15e58:	ldr	r2, [fp, #-8]
   15e5c:	add	r2, r2, #8
   15e60:	ldr	r1, [fp, #-8]
   15e64:	ldr	r1, [r1, #40]	; 0x28
   15e68:	ldr	r0, [fp, #-8]
   15e6c:	ldr	r0, [r0, #44]	; 0x2c
   15e70:	str	r0, [sp, #16]
   15e74:	str	r1, [sp, #12]
   15e78:	str	r2, [sp, #8]
   15e7c:	ldr	r2, [fp, #-16]
   15e80:	str	r2, [sp, #4]
   15e84:	str	r3, [sp]
   15e88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15e90:	mov	r1, #0
   15e94:	mov	r0, #0
   15e98:	bl	145f4 <__assert_fail@plt+0x3530>
   15e9c:	mov	r3, r0
   15ea0:	add	r3, r3, #1
   15ea4:	str	r3, [fp, #-20]	; 0xffffffec
   15ea8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15eac:	bl	172ec <__assert_fail@plt+0x6228>
   15eb0:	mov	r3, r0
   15eb4:	str	r3, [fp, #-24]	; 0xffffffe8
   15eb8:	ldr	r3, [fp, #-8]
   15ebc:	ldr	r3, [r3]
   15ec0:	ldr	r2, [fp, #-8]
   15ec4:	add	r2, r2, #8
   15ec8:	ldr	r1, [fp, #-8]
   15ecc:	ldr	r1, [r1, #40]	; 0x28
   15ed0:	ldr	r0, [fp, #-8]
   15ed4:	ldr	r0, [r0, #44]	; 0x2c
   15ed8:	str	r0, [sp, #16]
   15edc:	str	r1, [sp, #12]
   15ee0:	str	r2, [sp, #8]
   15ee4:	ldr	r2, [fp, #-16]
   15ee8:	str	r2, [sp, #4]
   15eec:	str	r3, [sp]
   15ef0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ef4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15ef8:	ldr	r1, [fp, #-20]	; 0xffffffec
   15efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f00:	bl	145f4 <__assert_fail@plt+0x3530>
   15f04:	bl	10fd4 <__errno_location@plt>
   15f08:	mov	r2, r0
   15f0c:	ldr	r3, [fp, #-12]
   15f10:	str	r3, [r2]
   15f14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f18:	cmp	r3, #0
   15f1c:	beq	15f30 <__assert_fail@plt+0x4e6c>
   15f20:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f24:	sub	r2, r3, #1
   15f28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f2c:	str	r2, [r3]
   15f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15f34:	mov	r0, r3
   15f38:	sub	sp, fp, #4
   15f3c:	ldr	fp, [sp]
   15f40:	add	sp, sp, #4
   15f44:	pop	{pc}		; (ldr pc, [sp], #4)
   15f48:	str	fp, [sp, #-8]!
   15f4c:	str	lr, [sp, #4]
   15f50:	add	fp, sp, #4
   15f54:	sub	sp, sp, #8
   15f58:	movw	r3, #45340	; 0xb11c
   15f5c:	movt	r3, #2
   15f60:	ldr	r3, [r3]
   15f64:	str	r3, [fp, #-12]
   15f68:	mov	r3, #1
   15f6c:	str	r3, [fp, #-8]
   15f70:	b	15f9c <__assert_fail@plt+0x4ed8>
   15f74:	ldr	r3, [fp, #-8]
   15f78:	lsl	r3, r3, #3
   15f7c:	ldr	r2, [fp, #-12]
   15f80:	add	r3, r2, r3
   15f84:	ldr	r3, [r3, #4]
   15f88:	mov	r0, r3
   15f8c:	bl	13824 <__assert_fail@plt+0x2760>
   15f90:	ldr	r3, [fp, #-8]
   15f94:	add	r3, r3, #1
   15f98:	str	r3, [fp, #-8]
   15f9c:	movw	r3, #45328	; 0xb110
   15fa0:	movt	r3, #2
   15fa4:	ldr	r3, [r3]
   15fa8:	ldr	r2, [fp, #-8]
   15fac:	cmp	r2, r3
   15fb0:	blt	15f74 <__assert_fail@plt+0x4eb0>
   15fb4:	ldr	r3, [fp, #-12]
   15fb8:	ldr	r2, [r3, #4]
   15fbc:	movw	r3, #45540	; 0xb1e4
   15fc0:	movt	r3, #2
   15fc4:	cmp	r2, r3
   15fc8:	beq	16000 <__assert_fail@plt+0x4f3c>
   15fcc:	ldr	r3, [fp, #-12]
   15fd0:	ldr	r3, [r3, #4]
   15fd4:	mov	r0, r3
   15fd8:	bl	13824 <__assert_fail@plt+0x2760>
   15fdc:	movw	r3, #45332	; 0xb114
   15fe0:	movt	r3, #2
   15fe4:	mov	r2, #256	; 0x100
   15fe8:	str	r2, [r3]
   15fec:	movw	r3, #45332	; 0xb114
   15ff0:	movt	r3, #2
   15ff4:	movw	r2, #45540	; 0xb1e4
   15ff8:	movt	r2, #2
   15ffc:	str	r2, [r3, #4]
   16000:	ldr	r2, [fp, #-12]
   16004:	movw	r3, #45332	; 0xb114
   16008:	movt	r3, #2
   1600c:	cmp	r2, r3
   16010:	beq	16030 <__assert_fail@plt+0x4f6c>
   16014:	ldr	r0, [fp, #-12]
   16018:	bl	13824 <__assert_fail@plt+0x2760>
   1601c:	movw	r3, #45340	; 0xb11c
   16020:	movt	r3, #2
   16024:	movw	r2, #45332	; 0xb114
   16028:	movt	r2, #2
   1602c:	str	r2, [r3]
   16030:	movw	r3, #45328	; 0xb110
   16034:	movt	r3, #2
   16038:	mov	r2, #1
   1603c:	str	r2, [r3]
   16040:	nop	{0}
   16044:	sub	sp, fp, #4
   16048:	ldr	fp, [sp]
   1604c:	add	sp, sp, #4
   16050:	pop	{pc}		; (ldr pc, [sp], #4)
   16054:	str	fp, [sp, #-8]!
   16058:	str	lr, [sp, #4]
   1605c:	add	fp, sp, #4
   16060:	sub	sp, sp, #80	; 0x50
   16064:	str	r0, [fp, #-48]	; 0xffffffd0
   16068:	str	r1, [fp, #-52]	; 0xffffffcc
   1606c:	str	r2, [fp, #-56]	; 0xffffffc8
   16070:	str	r3, [fp, #-60]	; 0xffffffc4
   16074:	bl	10fd4 <__errno_location@plt>
   16078:	mov	r3, r0
   1607c:	ldr	r3, [r3]
   16080:	str	r3, [fp, #-16]
   16084:	movw	r3, #45340	; 0xb11c
   16088:	movt	r3, #2
   1608c:	ldr	r3, [r3]
   16090:	str	r3, [fp, #-8]
   16094:	mvn	r3, #-2147483648	; 0x80000000
   16098:	str	r3, [fp, #-20]	; 0xffffffec
   1609c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   160a0:	cmp	r3, #0
   160a4:	blt	160b8 <__assert_fail@plt+0x4ff4>
   160a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   160ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   160b0:	cmp	r2, r3
   160b4:	blt	160bc <__assert_fail@plt+0x4ff8>
   160b8:	bl	11094 <abort@plt>
   160bc:	movw	r3, #45328	; 0xb110
   160c0:	movt	r3, #2
   160c4:	ldr	r3, [r3]
   160c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   160cc:	cmp	r2, r3
   160d0:	blt	161c8 <__assert_fail@plt+0x5104>
   160d4:	ldr	r2, [fp, #-8]
   160d8:	movw	r3, #45332	; 0xb114
   160dc:	movt	r3, #2
   160e0:	cmp	r2, r3
   160e4:	moveq	r3, #1
   160e8:	movne	r3, #0
   160ec:	strb	r3, [fp, #-21]	; 0xffffffeb
   160f0:	movw	r3, #45328	; 0xb110
   160f4:	movt	r3, #2
   160f8:	ldr	r3, [r3]
   160fc:	str	r3, [fp, #-40]	; 0xffffffd8
   16100:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   16104:	cmp	r3, #0
   16108:	beq	16114 <__assert_fail@plt+0x5050>
   1610c:	mov	r0, #0
   16110:	b	16118 <__assert_fail@plt+0x5054>
   16114:	ldr	r0, [fp, #-8]
   16118:	movw	r3, #45328	; 0xb110
   1611c:	movt	r3, #2
   16120:	ldr	r3, [r3]
   16124:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16128:	sub	r3, r2, r3
   1612c:	add	r2, r3, #1
   16130:	sub	r1, fp, #40	; 0x28
   16134:	mov	r3, #8
   16138:	str	r3, [sp]
   1613c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16140:	bl	1764c <__assert_fail@plt+0x6588>
   16144:	str	r0, [fp, #-8]
   16148:	movw	r3, #45340	; 0xb11c
   1614c:	movt	r3, #2
   16150:	ldr	r2, [fp, #-8]
   16154:	str	r2, [r3]
   16158:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1615c:	cmp	r3, #0
   16160:	beq	1617c <__assert_fail@plt+0x50b8>
   16164:	ldr	r2, [fp, #-8]
   16168:	movw	r3, #45332	; 0xb114
   1616c:	movt	r3, #2
   16170:	mov	r1, r2
   16174:	ldrd	r2, [r3]
   16178:	strd	r2, [r1]
   1617c:	movw	r3, #45328	; 0xb110
   16180:	movt	r3, #2
   16184:	ldr	r3, [r3]
   16188:	lsl	r3, r3, #3
   1618c:	ldr	r2, [fp, #-8]
   16190:	add	r0, r2, r3
   16194:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16198:	movw	r3, #45328	; 0xb110
   1619c:	movt	r3, #2
   161a0:	ldr	r3, [r3]
   161a4:	sub	r3, r2, r3
   161a8:	lsl	r3, r3, #3
   161ac:	mov	r2, r3
   161b0:	mov	r1, #0
   161b4:	bl	10fec <memset@plt>
   161b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   161bc:	movw	r3, #45328	; 0xb110
   161c0:	movt	r3, #2
   161c4:	str	r2, [r3]
   161c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   161cc:	lsl	r3, r3, #3
   161d0:	ldr	r2, [fp, #-8]
   161d4:	add	r3, r2, r3
   161d8:	ldr	r3, [r3]
   161dc:	str	r3, [fp, #-28]	; 0xffffffe4
   161e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   161e4:	lsl	r3, r3, #3
   161e8:	ldr	r2, [fp, #-8]
   161ec:	add	r3, r2, r3
   161f0:	ldr	r3, [r3, #4]
   161f4:	str	r3, [fp, #-12]
   161f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   161fc:	ldr	r3, [r3, #4]
   16200:	orr	r3, r3, #1
   16204:	str	r3, [fp, #-32]	; 0xffffffe0
   16208:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1620c:	ldr	r3, [r3]
   16210:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16214:	add	r2, r2, #8
   16218:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1621c:	ldr	r1, [r1, #40]	; 0x28
   16220:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16224:	ldr	r0, [r0, #44]	; 0x2c
   16228:	str	r0, [sp, #16]
   1622c:	str	r1, [sp, #12]
   16230:	str	r2, [sp, #8]
   16234:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16238:	str	r2, [sp, #4]
   1623c:	str	r3, [sp]
   16240:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16244:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16248:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1624c:	ldr	r0, [fp, #-12]
   16250:	bl	145f4 <__assert_fail@plt+0x3530>
   16254:	str	r0, [fp, #-36]	; 0xffffffdc
   16258:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1625c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16260:	cmp	r2, r3
   16264:	bhi	1631c <__assert_fail@plt+0x5258>
   16268:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1626c:	add	r3, r3, #1
   16270:	str	r3, [fp, #-28]	; 0xffffffe4
   16274:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16278:	lsl	r3, r3, #3
   1627c:	ldr	r2, [fp, #-8]
   16280:	add	r3, r2, r3
   16284:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16288:	str	r2, [r3]
   1628c:	ldr	r2, [fp, #-12]
   16290:	movw	r3, #45540	; 0xb1e4
   16294:	movt	r3, #2
   16298:	cmp	r2, r3
   1629c:	beq	162a8 <__assert_fail@plt+0x51e4>
   162a0:	ldr	r0, [fp, #-12]
   162a4:	bl	13824 <__assert_fail@plt+0x2760>
   162a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   162ac:	bl	172ec <__assert_fail@plt+0x6228>
   162b0:	mov	r3, r0
   162b4:	str	r3, [fp, #-12]
   162b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   162bc:	lsl	r3, r3, #3
   162c0:	ldr	r2, [fp, #-8]
   162c4:	add	r3, r2, r3
   162c8:	ldr	r2, [fp, #-12]
   162cc:	str	r2, [r3, #4]
   162d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   162d4:	ldr	r3, [r3]
   162d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   162dc:	add	r2, r2, #8
   162e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   162e4:	ldr	r1, [r1, #40]	; 0x28
   162e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   162ec:	ldr	r0, [r0, #44]	; 0x2c
   162f0:	str	r0, [sp, #16]
   162f4:	str	r1, [sp, #12]
   162f8:	str	r2, [sp, #8]
   162fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16300:	str	r2, [sp, #4]
   16304:	str	r3, [sp]
   16308:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1630c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16310:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16314:	ldr	r0, [fp, #-12]
   16318:	bl	145f4 <__assert_fail@plt+0x3530>
   1631c:	bl	10fd4 <__errno_location@plt>
   16320:	mov	r2, r0
   16324:	ldr	r3, [fp, #-16]
   16328:	str	r3, [r2]
   1632c:	ldr	r3, [fp, #-12]
   16330:	mov	r0, r3
   16334:	sub	sp, fp, #4
   16338:	ldr	fp, [sp]
   1633c:	add	sp, sp, #4
   16340:	pop	{pc}		; (ldr pc, [sp], #4)
   16344:	str	fp, [sp, #-8]!
   16348:	str	lr, [sp, #4]
   1634c:	add	fp, sp, #4
   16350:	sub	sp, sp, #8
   16354:	str	r0, [fp, #-8]
   16358:	str	r1, [fp, #-12]
   1635c:	movw	r3, #45492	; 0xb1b4
   16360:	movt	r3, #2
   16364:	mvn	r2, #0
   16368:	ldr	r1, [fp, #-12]
   1636c:	ldr	r0, [fp, #-8]
   16370:	bl	16054 <__assert_fail@plt+0x4f90>
   16374:	mov	r3, r0
   16378:	mov	r0, r3
   1637c:	sub	sp, fp, #4
   16380:	ldr	fp, [sp]
   16384:	add	sp, sp, #4
   16388:	pop	{pc}		; (ldr pc, [sp], #4)
   1638c:	str	fp, [sp, #-8]!
   16390:	str	lr, [sp, #4]
   16394:	add	fp, sp, #4
   16398:	sub	sp, sp, #16
   1639c:	str	r0, [fp, #-8]
   163a0:	str	r1, [fp, #-12]
   163a4:	str	r2, [fp, #-16]
   163a8:	movw	r3, #45492	; 0xb1b4
   163ac:	movt	r3, #2
   163b0:	ldr	r2, [fp, #-16]
   163b4:	ldr	r1, [fp, #-12]
   163b8:	ldr	r0, [fp, #-8]
   163bc:	bl	16054 <__assert_fail@plt+0x4f90>
   163c0:	mov	r3, r0
   163c4:	mov	r0, r3
   163c8:	sub	sp, fp, #4
   163cc:	ldr	fp, [sp]
   163d0:	add	sp, sp, #4
   163d4:	pop	{pc}		; (ldr pc, [sp], #4)
   163d8:	str	fp, [sp, #-8]!
   163dc:	str	lr, [sp, #4]
   163e0:	add	fp, sp, #4
   163e4:	sub	sp, sp, #8
   163e8:	str	r0, [fp, #-8]
   163ec:	ldr	r1, [fp, #-8]
   163f0:	mov	r0, #0
   163f4:	bl	16344 <__assert_fail@plt+0x5280>
   163f8:	mov	r3, r0
   163fc:	mov	r0, r3
   16400:	sub	sp, fp, #4
   16404:	ldr	fp, [sp]
   16408:	add	sp, sp, #4
   1640c:	pop	{pc}		; (ldr pc, [sp], #4)
   16410:	str	fp, [sp, #-8]!
   16414:	str	lr, [sp, #4]
   16418:	add	fp, sp, #4
   1641c:	sub	sp, sp, #8
   16420:	str	r0, [fp, #-8]
   16424:	str	r1, [fp, #-12]
   16428:	ldr	r2, [fp, #-12]
   1642c:	ldr	r1, [fp, #-8]
   16430:	mov	r0, #0
   16434:	bl	1638c <__assert_fail@plt+0x52c8>
   16438:	mov	r3, r0
   1643c:	mov	r0, r3
   16440:	sub	sp, fp, #4
   16444:	ldr	fp, [sp]
   16448:	add	sp, sp, #4
   1644c:	pop	{pc}		; (ldr pc, [sp], #4)
   16450:	str	fp, [sp, #-8]!
   16454:	str	lr, [sp, #4]
   16458:	add	fp, sp, #4
   1645c:	sub	sp, sp, #64	; 0x40
   16460:	str	r0, [fp, #-56]	; 0xffffffc8
   16464:	str	r1, [fp, #-60]	; 0xffffffc4
   16468:	str	r2, [fp, #-64]	; 0xffffffc0
   1646c:	sub	r3, fp, #52	; 0x34
   16470:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16474:	mov	r0, r3
   16478:	bl	14450 <__assert_fail@plt+0x338c>
   1647c:	sub	r3, fp, #52	; 0x34
   16480:	mvn	r2, #0
   16484:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16488:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1648c:	bl	16054 <__assert_fail@plt+0x4f90>
   16490:	mov	r3, r0
   16494:	mov	r0, r3
   16498:	sub	sp, fp, #4
   1649c:	ldr	fp, [sp]
   164a0:	add	sp, sp, #4
   164a4:	pop	{pc}		; (ldr pc, [sp], #4)
   164a8:	str	fp, [sp, #-8]!
   164ac:	str	lr, [sp, #4]
   164b0:	add	fp, sp, #4
   164b4:	sub	sp, sp, #64	; 0x40
   164b8:	str	r0, [fp, #-56]	; 0xffffffc8
   164bc:	str	r1, [fp, #-60]	; 0xffffffc4
   164c0:	str	r2, [fp, #-64]	; 0xffffffc0
   164c4:	str	r3, [fp, #-68]	; 0xffffffbc
   164c8:	sub	r3, fp, #52	; 0x34
   164cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   164d0:	mov	r0, r3
   164d4:	bl	14450 <__assert_fail@plt+0x338c>
   164d8:	sub	r3, fp, #52	; 0x34
   164dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   164e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   164e8:	bl	16054 <__assert_fail@plt+0x4f90>
   164ec:	mov	r3, r0
   164f0:	mov	r0, r3
   164f4:	sub	sp, fp, #4
   164f8:	ldr	fp, [sp]
   164fc:	add	sp, sp, #4
   16500:	pop	{pc}		; (ldr pc, [sp], #4)
   16504:	str	fp, [sp, #-8]!
   16508:	str	lr, [sp, #4]
   1650c:	add	fp, sp, #4
   16510:	sub	sp, sp, #8
   16514:	str	r0, [fp, #-8]
   16518:	str	r1, [fp, #-12]
   1651c:	ldr	r2, [fp, #-12]
   16520:	ldr	r1, [fp, #-8]
   16524:	mov	r0, #0
   16528:	bl	16450 <__assert_fail@plt+0x538c>
   1652c:	mov	r3, r0
   16530:	mov	r0, r3
   16534:	sub	sp, fp, #4
   16538:	ldr	fp, [sp]
   1653c:	add	sp, sp, #4
   16540:	pop	{pc}		; (ldr pc, [sp], #4)
   16544:	str	fp, [sp, #-8]!
   16548:	str	lr, [sp, #4]
   1654c:	add	fp, sp, #4
   16550:	sub	sp, sp, #16
   16554:	str	r0, [fp, #-8]
   16558:	str	r1, [fp, #-12]
   1655c:	str	r2, [fp, #-16]
   16560:	ldr	r3, [fp, #-16]
   16564:	ldr	r2, [fp, #-12]
   16568:	ldr	r1, [fp, #-8]
   1656c:	mov	r0, #0
   16570:	bl	164a8 <__assert_fail@plt+0x53e4>
   16574:	mov	r3, r0
   16578:	mov	r0, r3
   1657c:	sub	sp, fp, #4
   16580:	ldr	fp, [sp]
   16584:	add	sp, sp, #4
   16588:	pop	{pc}		; (ldr pc, [sp], #4)
   1658c:	str	fp, [sp, #-8]!
   16590:	str	lr, [sp, #4]
   16594:	add	fp, sp, #4
   16598:	sub	sp, sp, #64	; 0x40
   1659c:	str	r0, [fp, #-56]	; 0xffffffc8
   165a0:	str	r1, [fp, #-60]	; 0xffffffc4
   165a4:	mov	r3, r2
   165a8:	strb	r3, [fp, #-61]	; 0xffffffc3
   165ac:	movw	r2, #45492	; 0xb1b4
   165b0:	movt	r2, #2
   165b4:	sub	r3, fp, #52	; 0x34
   165b8:	ldrd	r0, [r2]
   165bc:	strd	r0, [r3]
   165c0:	ldrd	r0, [r2, #8]
   165c4:	strd	r0, [r3, #8]
   165c8:	ldrd	r0, [r2, #16]
   165cc:	strd	r0, [r3, #16]
   165d0:	ldrd	r0, [r2, #24]
   165d4:	strd	r0, [r3, #24]
   165d8:	ldrd	r0, [r2, #32]
   165dc:	strd	r0, [r3, #32]
   165e0:	ldrd	r0, [r2, #40]	; 0x28
   165e4:	strd	r0, [r3, #40]	; 0x28
   165e8:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   165ec:	sub	r3, fp, #52	; 0x34
   165f0:	mov	r2, #1
   165f4:	mov	r0, r3
   165f8:	bl	142b0 <__assert_fail@plt+0x31ec>
   165fc:	sub	r3, fp, #52	; 0x34
   16600:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16604:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16608:	mov	r0, #0
   1660c:	bl	16054 <__assert_fail@plt+0x4f90>
   16610:	mov	r3, r0
   16614:	mov	r0, r3
   16618:	sub	sp, fp, #4
   1661c:	ldr	fp, [sp]
   16620:	add	sp, sp, #4
   16624:	pop	{pc}		; (ldr pc, [sp], #4)
   16628:	str	fp, [sp, #-8]!
   1662c:	str	lr, [sp, #4]
   16630:	add	fp, sp, #4
   16634:	sub	sp, sp, #8
   16638:	str	r0, [fp, #-8]
   1663c:	mov	r3, r1
   16640:	strb	r3, [fp, #-9]
   16644:	ldrb	r3, [fp, #-9]
   16648:	mov	r2, r3
   1664c:	mvn	r1, #0
   16650:	ldr	r0, [fp, #-8]
   16654:	bl	1658c <__assert_fail@plt+0x54c8>
   16658:	mov	r3, r0
   1665c:	mov	r0, r3
   16660:	sub	sp, fp, #4
   16664:	ldr	fp, [sp]
   16668:	add	sp, sp, #4
   1666c:	pop	{pc}		; (ldr pc, [sp], #4)
   16670:	str	fp, [sp, #-8]!
   16674:	str	lr, [sp, #4]
   16678:	add	fp, sp, #4
   1667c:	sub	sp, sp, #8
   16680:	str	r0, [fp, #-8]
   16684:	mov	r1, #58	; 0x3a
   16688:	ldr	r0, [fp, #-8]
   1668c:	bl	16628 <__assert_fail@plt+0x5564>
   16690:	mov	r3, r0
   16694:	mov	r0, r3
   16698:	sub	sp, fp, #4
   1669c:	ldr	fp, [sp]
   166a0:	add	sp, sp, #4
   166a4:	pop	{pc}		; (ldr pc, [sp], #4)
   166a8:	str	fp, [sp, #-8]!
   166ac:	str	lr, [sp, #4]
   166b0:	add	fp, sp, #4
   166b4:	sub	sp, sp, #8
   166b8:	str	r0, [fp, #-8]
   166bc:	str	r1, [fp, #-12]
   166c0:	mov	r2, #58	; 0x3a
   166c4:	ldr	r1, [fp, #-12]
   166c8:	ldr	r0, [fp, #-8]
   166cc:	bl	1658c <__assert_fail@plt+0x54c8>
   166d0:	mov	r3, r0
   166d4:	mov	r0, r3
   166d8:	sub	sp, fp, #4
   166dc:	ldr	fp, [sp]
   166e0:	add	sp, sp, #4
   166e4:	pop	{pc}		; (ldr pc, [sp], #4)
   166e8:	str	fp, [sp, #-8]!
   166ec:	str	lr, [sp, #4]
   166f0:	add	fp, sp, #4
   166f4:	sub	sp, sp, #112	; 0x70
   166f8:	str	r0, [fp, #-56]	; 0xffffffc8
   166fc:	str	r1, [fp, #-60]	; 0xffffffc4
   16700:	str	r2, [fp, #-64]	; 0xffffffc0
   16704:	sub	r3, fp, #116	; 0x74
   16708:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1670c:	mov	r0, r3
   16710:	bl	14450 <__assert_fail@plt+0x338c>
   16714:	sub	r3, fp, #52	; 0x34
   16718:	sub	r2, fp, #116	; 0x74
   1671c:	ldrd	r0, [r2]
   16720:	strd	r0, [r3]
   16724:	ldrd	r0, [r2, #8]
   16728:	strd	r0, [r3, #8]
   1672c:	ldrd	r0, [r2, #16]
   16730:	strd	r0, [r3, #16]
   16734:	ldrd	r0, [r2, #24]
   16738:	strd	r0, [r3, #24]
   1673c:	ldrd	r0, [r2, #32]
   16740:	strd	r0, [r3, #32]
   16744:	ldrd	r0, [r2, #40]	; 0x28
   16748:	strd	r0, [r3, #40]	; 0x28
   1674c:	sub	r3, fp, #52	; 0x34
   16750:	mov	r2, #1
   16754:	mov	r1, #58	; 0x3a
   16758:	mov	r0, r3
   1675c:	bl	142b0 <__assert_fail@plt+0x31ec>
   16760:	sub	r3, fp, #52	; 0x34
   16764:	mvn	r2, #0
   16768:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1676c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16770:	bl	16054 <__assert_fail@plt+0x4f90>
   16774:	mov	r3, r0
   16778:	mov	r0, r3
   1677c:	sub	sp, fp, #4
   16780:	ldr	fp, [sp]
   16784:	add	sp, sp, #4
   16788:	pop	{pc}		; (ldr pc, [sp], #4)
   1678c:	str	fp, [sp, #-8]!
   16790:	str	lr, [sp, #4]
   16794:	add	fp, sp, #4
   16798:	sub	sp, sp, #24
   1679c:	str	r0, [fp, #-8]
   167a0:	str	r1, [fp, #-12]
   167a4:	str	r2, [fp, #-16]
   167a8:	str	r3, [fp, #-20]	; 0xffffffec
   167ac:	mvn	r3, #0
   167b0:	str	r3, [sp]
   167b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   167b8:	ldr	r2, [fp, #-16]
   167bc:	ldr	r1, [fp, #-12]
   167c0:	ldr	r0, [fp, #-8]
   167c4:	bl	167e0 <__assert_fail@plt+0x571c>
   167c8:	mov	r3, r0
   167cc:	mov	r0, r3
   167d0:	sub	sp, fp, #4
   167d4:	ldr	fp, [sp]
   167d8:	add	sp, sp, #4
   167dc:	pop	{pc}		; (ldr pc, [sp], #4)
   167e0:	str	fp, [sp, #-8]!
   167e4:	str	lr, [sp, #4]
   167e8:	add	fp, sp, #4
   167ec:	sub	sp, sp, #64	; 0x40
   167f0:	str	r0, [fp, #-56]	; 0xffffffc8
   167f4:	str	r1, [fp, #-60]	; 0xffffffc4
   167f8:	str	r2, [fp, #-64]	; 0xffffffc0
   167fc:	str	r3, [fp, #-68]	; 0xffffffbc
   16800:	movw	r2, #45492	; 0xb1b4
   16804:	movt	r2, #2
   16808:	sub	r3, fp, #52	; 0x34
   1680c:	ldrd	r0, [r2]
   16810:	strd	r0, [r3]
   16814:	ldrd	r0, [r2, #8]
   16818:	strd	r0, [r3, #8]
   1681c:	ldrd	r0, [r2, #16]
   16820:	strd	r0, [r3, #16]
   16824:	ldrd	r0, [r2, #24]
   16828:	strd	r0, [r3, #24]
   1682c:	ldrd	r0, [r2, #32]
   16830:	strd	r0, [r3, #32]
   16834:	ldrd	r0, [r2, #40]	; 0x28
   16838:	strd	r0, [r3, #40]	; 0x28
   1683c:	sub	r3, fp, #52	; 0x34
   16840:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16844:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16848:	mov	r0, r3
   1684c:	bl	143c8 <__assert_fail@plt+0x3304>
   16850:	sub	r3, fp, #52	; 0x34
   16854:	ldr	r2, [fp, #4]
   16858:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1685c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16860:	bl	16054 <__assert_fail@plt+0x4f90>
   16864:	mov	r3, r0
   16868:	mov	r0, r3
   1686c:	sub	sp, fp, #4
   16870:	ldr	fp, [sp]
   16874:	add	sp, sp, #4
   16878:	pop	{pc}		; (ldr pc, [sp], #4)
   1687c:	str	fp, [sp, #-8]!
   16880:	str	lr, [sp, #4]
   16884:	add	fp, sp, #4
   16888:	sub	sp, sp, #16
   1688c:	str	r0, [fp, #-8]
   16890:	str	r1, [fp, #-12]
   16894:	str	r2, [fp, #-16]
   16898:	ldr	r3, [fp, #-16]
   1689c:	ldr	r2, [fp, #-12]
   168a0:	ldr	r1, [fp, #-8]
   168a4:	mov	r0, #0
   168a8:	bl	1678c <__assert_fail@plt+0x56c8>
   168ac:	mov	r3, r0
   168b0:	mov	r0, r3
   168b4:	sub	sp, fp, #4
   168b8:	ldr	fp, [sp]
   168bc:	add	sp, sp, #4
   168c0:	pop	{pc}		; (ldr pc, [sp], #4)
   168c4:	str	fp, [sp, #-8]!
   168c8:	str	lr, [sp, #4]
   168cc:	add	fp, sp, #4
   168d0:	sub	sp, sp, #24
   168d4:	str	r0, [fp, #-8]
   168d8:	str	r1, [fp, #-12]
   168dc:	str	r2, [fp, #-16]
   168e0:	str	r3, [fp, #-20]	; 0xffffffec
   168e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   168e8:	str	r3, [sp]
   168ec:	ldr	r3, [fp, #-16]
   168f0:	ldr	r2, [fp, #-12]
   168f4:	ldr	r1, [fp, #-8]
   168f8:	mov	r0, #0
   168fc:	bl	167e0 <__assert_fail@plt+0x571c>
   16900:	mov	r3, r0
   16904:	mov	r0, r3
   16908:	sub	sp, fp, #4
   1690c:	ldr	fp, [sp]
   16910:	add	sp, sp, #4
   16914:	pop	{pc}		; (ldr pc, [sp], #4)
   16918:	str	fp, [sp, #-8]!
   1691c:	str	lr, [sp, #4]
   16920:	add	fp, sp, #4
   16924:	sub	sp, sp, #16
   16928:	str	r0, [fp, #-8]
   1692c:	str	r1, [fp, #-12]
   16930:	str	r2, [fp, #-16]
   16934:	movw	r3, #45344	; 0xb120
   16938:	movt	r3, #2
   1693c:	ldr	r2, [fp, #-16]
   16940:	ldr	r1, [fp, #-12]
   16944:	ldr	r0, [fp, #-8]
   16948:	bl	16054 <__assert_fail@plt+0x4f90>
   1694c:	mov	r3, r0
   16950:	mov	r0, r3
   16954:	sub	sp, fp, #4
   16958:	ldr	fp, [sp]
   1695c:	add	sp, sp, #4
   16960:	pop	{pc}		; (ldr pc, [sp], #4)
   16964:	str	fp, [sp, #-8]!
   16968:	str	lr, [sp, #4]
   1696c:	add	fp, sp, #4
   16970:	sub	sp, sp, #8
   16974:	str	r0, [fp, #-8]
   16978:	str	r1, [fp, #-12]
   1697c:	ldr	r2, [fp, #-12]
   16980:	ldr	r1, [fp, #-8]
   16984:	mov	r0, #0
   16988:	bl	16918 <__assert_fail@plt+0x5854>
   1698c:	mov	r3, r0
   16990:	mov	r0, r3
   16994:	sub	sp, fp, #4
   16998:	ldr	fp, [sp]
   1699c:	add	sp, sp, #4
   169a0:	pop	{pc}		; (ldr pc, [sp], #4)
   169a4:	str	fp, [sp, #-8]!
   169a8:	str	lr, [sp, #4]
   169ac:	add	fp, sp, #4
   169b0:	sub	sp, sp, #8
   169b4:	str	r0, [fp, #-8]
   169b8:	str	r1, [fp, #-12]
   169bc:	mvn	r2, #0
   169c0:	ldr	r1, [fp, #-12]
   169c4:	ldr	r0, [fp, #-8]
   169c8:	bl	16918 <__assert_fail@plt+0x5854>
   169cc:	mov	r3, r0
   169d0:	mov	r0, r3
   169d4:	sub	sp, fp, #4
   169d8:	ldr	fp, [sp]
   169dc:	add	sp, sp, #4
   169e0:	pop	{pc}		; (ldr pc, [sp], #4)
   169e4:	str	fp, [sp, #-8]!
   169e8:	str	lr, [sp, #4]
   169ec:	add	fp, sp, #4
   169f0:	sub	sp, sp, #8
   169f4:	str	r0, [fp, #-8]
   169f8:	ldr	r1, [fp, #-8]
   169fc:	mov	r0, #0
   16a00:	bl	169a4 <__assert_fail@plt+0x58e0>
   16a04:	mov	r3, r0
   16a08:	mov	r0, r3
   16a0c:	sub	sp, fp, #4
   16a10:	ldr	fp, [sp]
   16a14:	add	sp, sp, #4
   16a18:	pop	{pc}		; (ldr pc, [sp], #4)
   16a1c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16a20:	strd	r6, [sp, #8]
   16a24:	str	fp, [sp, #16]
   16a28:	str	lr, [sp, #20]
   16a2c:	add	fp, sp, #20
   16a30:	sub	sp, sp, #48	; 0x30
   16a34:	str	r0, [fp, #-24]	; 0xffffffe8
   16a38:	str	r1, [fp, #-28]	; 0xffffffe4
   16a3c:	str	r2, [fp, #-32]	; 0xffffffe0
   16a40:	str	r3, [fp, #-36]	; 0xffffffdc
   16a44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a48:	cmp	r3, #0
   16a4c:	beq	16a74 <__assert_fail@plt+0x59b0>
   16a50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16a54:	str	r3, [sp]
   16a58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16a5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16a60:	movw	r1, #39948	; 0x9c0c
   16a64:	movt	r1, #1
   16a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a6c:	bl	10fbc <fprintf@plt>
   16a70:	b	16a8c <__assert_fail@plt+0x59c8>
   16a74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16a78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16a7c:	movw	r1, #39960	; 0x9c18
   16a80:	movt	r1, #1
   16a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a88:	bl	10fbc <fprintf@plt>
   16a8c:	movw	r0, #39968	; 0x9c20
   16a90:	movt	r0, #1
   16a94:	bl	10fa4 <gettext@plt>
   16a98:	mov	r2, r0
   16a9c:	movw	r3, #2022	; 0x7e6
   16aa0:	movw	r1, #40752	; 0x9f30
   16aa4:	movt	r1, #1
   16aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aac:	bl	10fbc <fprintf@plt>
   16ab0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ab4:	mov	r0, #10
   16ab8:	bl	10eb4 <fputc_unlocked@plt>
   16abc:	movw	r0, #39972	; 0x9c24
   16ac0:	movt	r0, #1
   16ac4:	bl	10fa4 <gettext@plt>
   16ac8:	mov	r3, r0
   16acc:	movw	r2, #40144	; 0x9cd0
   16ad0:	movt	r2, #1
   16ad4:	mov	r1, r3
   16ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16adc:	bl	10fbc <fprintf@plt>
   16ae0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ae4:	mov	r0, #10
   16ae8:	bl	10eb4 <fputc_unlocked@plt>
   16aec:	ldr	r3, [fp, #8]
   16af0:	cmp	r3, #9
   16af4:	ldrls	pc, [pc, r3, lsl #2]
   16af8:	b	16ed8 <__assert_fail@plt+0x5e14>
   16afc:	andeq	r6, r1, r4, lsl #31
   16b00:	andeq	r6, r1, r4, lsr #22
   16b04:	andeq	r6, r1, ip, asr #22
   16b08:	andeq	r6, r1, ip, ror fp
   16b0c:	andeq	r6, r1, r0, asr #23
   16b10:	andeq	r6, r1, ip, lsl ip
   16b14:	andeq	r6, r1, r8, lsl #25
   16b18:	andeq	r6, r1, r4, lsl #26
   16b1c:	muleq	r1, r0, sp
   16b20:	andeq	r6, r1, ip, lsr #28
   16b24:	movw	r0, #40180	; 0x9cf4
   16b28:	movt	r0, #1
   16b2c:	bl	10fa4 <gettext@plt>
   16b30:	mov	r1, r0
   16b34:	ldr	r3, [fp, #4]
   16b38:	ldr	r3, [r3]
   16b3c:	mov	r2, r3
   16b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b44:	bl	10fbc <fprintf@plt>
   16b48:	b	16f88 <__assert_fail@plt+0x5ec4>
   16b4c:	movw	r0, #40196	; 0x9d04
   16b50:	movt	r0, #1
   16b54:	bl	10fa4 <gettext@plt>
   16b58:	mov	r1, r0
   16b5c:	ldr	r3, [fp, #4]
   16b60:	ldr	r2, [r3]
   16b64:	ldr	r3, [fp, #4]
   16b68:	add	r3, r3, #4
   16b6c:	ldr	r3, [r3]
   16b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b74:	bl	10fbc <fprintf@plt>
   16b78:	b	16f88 <__assert_fail@plt+0x5ec4>
   16b7c:	movw	r0, #40220	; 0x9d1c
   16b80:	movt	r0, #1
   16b84:	bl	10fa4 <gettext@plt>
   16b88:	ldr	r3, [fp, #4]
   16b8c:	ldr	r2, [r3]
   16b90:	ldr	r3, [fp, #4]
   16b94:	add	r3, r3, #4
   16b98:	ldr	r1, [r3]
   16b9c:	ldr	r3, [fp, #4]
   16ba0:	add	r3, r3, #8
   16ba4:	ldr	r3, [r3]
   16ba8:	str	r3, [sp]
   16bac:	mov	r3, r1
   16bb0:	mov	r1, r0
   16bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bb8:	bl	10fbc <fprintf@plt>
   16bbc:	b	16f88 <__assert_fail@plt+0x5ec4>
   16bc0:	movw	r0, #40248	; 0x9d38
   16bc4:	movt	r0, #1
   16bc8:	bl	10fa4 <gettext@plt>
   16bcc:	mov	ip, r0
   16bd0:	ldr	r3, [fp, #4]
   16bd4:	ldr	r1, [r3]
   16bd8:	ldr	r3, [fp, #4]
   16bdc:	add	r3, r3, #4
   16be0:	ldr	r0, [r3]
   16be4:	ldr	r3, [fp, #4]
   16be8:	add	r3, r3, #8
   16bec:	ldr	r3, [r3]
   16bf0:	ldr	r2, [fp, #4]
   16bf4:	add	r2, r2, #12
   16bf8:	ldr	r2, [r2]
   16bfc:	str	r2, [sp, #4]
   16c00:	str	r3, [sp]
   16c04:	mov	r3, r0
   16c08:	mov	r2, r1
   16c0c:	mov	r1, ip
   16c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c14:	bl	10fbc <fprintf@plt>
   16c18:	b	16f88 <__assert_fail@plt+0x5ec4>
   16c1c:	movw	r0, #40280	; 0x9d58
   16c20:	movt	r0, #1
   16c24:	bl	10fa4 <gettext@plt>
   16c28:	mov	lr, r0
   16c2c:	ldr	r3, [fp, #4]
   16c30:	ldr	r0, [r3]
   16c34:	ldr	r3, [fp, #4]
   16c38:	add	r3, r3, #4
   16c3c:	ldr	ip, [r3]
   16c40:	ldr	r3, [fp, #4]
   16c44:	add	r3, r3, #8
   16c48:	ldr	r3, [r3]
   16c4c:	ldr	r2, [fp, #4]
   16c50:	add	r2, r2, #12
   16c54:	ldr	r2, [r2]
   16c58:	ldr	r1, [fp, #4]
   16c5c:	add	r1, r1, #16
   16c60:	ldr	r1, [r1]
   16c64:	str	r1, [sp, #8]
   16c68:	str	r2, [sp, #4]
   16c6c:	str	r3, [sp]
   16c70:	mov	r3, ip
   16c74:	mov	r2, r0
   16c78:	mov	r1, lr
   16c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c80:	bl	10fbc <fprintf@plt>
   16c84:	b	16f88 <__assert_fail@plt+0x5ec4>
   16c88:	movw	r0, #40316	; 0x9d7c
   16c8c:	movt	r0, #1
   16c90:	bl	10fa4 <gettext@plt>
   16c94:	mov	r4, r0
   16c98:	ldr	r3, [fp, #4]
   16c9c:	ldr	ip, [r3]
   16ca0:	ldr	r3, [fp, #4]
   16ca4:	add	r3, r3, #4
   16ca8:	ldr	lr, [r3]
   16cac:	ldr	r3, [fp, #4]
   16cb0:	add	r3, r3, #8
   16cb4:	ldr	r3, [r3]
   16cb8:	ldr	r2, [fp, #4]
   16cbc:	add	r2, r2, #12
   16cc0:	ldr	r2, [r2]
   16cc4:	ldr	r1, [fp, #4]
   16cc8:	add	r1, r1, #16
   16ccc:	ldr	r1, [r1]
   16cd0:	ldr	r0, [fp, #4]
   16cd4:	add	r0, r0, #20
   16cd8:	ldr	r0, [r0]
   16cdc:	str	r0, [sp, #12]
   16ce0:	str	r1, [sp, #8]
   16ce4:	str	r2, [sp, #4]
   16ce8:	str	r3, [sp]
   16cec:	mov	r3, lr
   16cf0:	mov	r2, ip
   16cf4:	mov	r1, r4
   16cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cfc:	bl	10fbc <fprintf@plt>
   16d00:	b	16f88 <__assert_fail@plt+0x5ec4>
   16d04:	movw	r0, #40356	; 0x9da4
   16d08:	movt	r0, #1
   16d0c:	bl	10fa4 <gettext@plt>
   16d10:	mov	r5, r0
   16d14:	ldr	r3, [fp, #4]
   16d18:	ldr	lr, [r3]
   16d1c:	ldr	r3, [fp, #4]
   16d20:	add	r3, r3, #4
   16d24:	ldr	r4, [r3]
   16d28:	ldr	r3, [fp, #4]
   16d2c:	add	r3, r3, #8
   16d30:	ldr	r3, [r3]
   16d34:	ldr	r2, [fp, #4]
   16d38:	add	r2, r2, #12
   16d3c:	ldr	r2, [r2]
   16d40:	ldr	r1, [fp, #4]
   16d44:	add	r1, r1, #16
   16d48:	ldr	r1, [r1]
   16d4c:	ldr	r0, [fp, #4]
   16d50:	add	r0, r0, #20
   16d54:	ldr	r0, [r0]
   16d58:	ldr	ip, [fp, #4]
   16d5c:	add	ip, ip, #24
   16d60:	ldr	ip, [ip]
   16d64:	str	ip, [sp, #16]
   16d68:	str	r0, [sp, #12]
   16d6c:	str	r1, [sp, #8]
   16d70:	str	r2, [sp, #4]
   16d74:	str	r3, [sp]
   16d78:	mov	r3, r4
   16d7c:	mov	r2, lr
   16d80:	mov	r1, r5
   16d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d88:	bl	10fbc <fprintf@plt>
   16d8c:	b	16f88 <__assert_fail@plt+0x5ec4>
   16d90:	movw	r0, #40400	; 0x9dd0
   16d94:	movt	r0, #1
   16d98:	bl	10fa4 <gettext@plt>
   16d9c:	mov	r6, r0
   16da0:	ldr	r3, [fp, #4]
   16da4:	ldr	r4, [r3]
   16da8:	ldr	r3, [fp, #4]
   16dac:	add	r3, r3, #4
   16db0:	ldr	r5, [r3]
   16db4:	ldr	r3, [fp, #4]
   16db8:	add	r3, r3, #8
   16dbc:	ldr	r3, [r3]
   16dc0:	ldr	r2, [fp, #4]
   16dc4:	add	r2, r2, #12
   16dc8:	ldr	r2, [r2]
   16dcc:	ldr	r1, [fp, #4]
   16dd0:	add	r1, r1, #16
   16dd4:	ldr	r1, [r1]
   16dd8:	ldr	r0, [fp, #4]
   16ddc:	add	r0, r0, #20
   16de0:	ldr	r0, [r0]
   16de4:	ldr	ip, [fp, #4]
   16de8:	add	ip, ip, #24
   16dec:	ldr	ip, [ip]
   16df0:	ldr	lr, [fp, #4]
   16df4:	add	lr, lr, #28
   16df8:	ldr	lr, [lr]
   16dfc:	str	lr, [sp, #20]
   16e00:	str	ip, [sp, #16]
   16e04:	str	r0, [sp, #12]
   16e08:	str	r1, [sp, #8]
   16e0c:	str	r2, [sp, #4]
   16e10:	str	r3, [sp]
   16e14:	mov	r3, r5
   16e18:	mov	r2, r4
   16e1c:	mov	r1, r6
   16e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e24:	bl	10fbc <fprintf@plt>
   16e28:	b	16f88 <__assert_fail@plt+0x5ec4>
   16e2c:	movw	r0, #40448	; 0x9e00
   16e30:	movt	r0, #1
   16e34:	bl	10fa4 <gettext@plt>
   16e38:	mov	r7, r0
   16e3c:	ldr	r3, [fp, #4]
   16e40:	ldr	r5, [r3]
   16e44:	ldr	r3, [fp, #4]
   16e48:	add	r3, r3, #4
   16e4c:	ldr	r6, [r3]
   16e50:	ldr	r3, [fp, #4]
   16e54:	add	r3, r3, #8
   16e58:	ldr	r3, [r3]
   16e5c:	ldr	r2, [fp, #4]
   16e60:	add	r2, r2, #12
   16e64:	ldr	r2, [r2]
   16e68:	ldr	r1, [fp, #4]
   16e6c:	add	r1, r1, #16
   16e70:	ldr	r1, [r1]
   16e74:	ldr	r0, [fp, #4]
   16e78:	add	r0, r0, #20
   16e7c:	ldr	r0, [r0]
   16e80:	ldr	ip, [fp, #4]
   16e84:	add	ip, ip, #24
   16e88:	ldr	ip, [ip]
   16e8c:	ldr	lr, [fp, #4]
   16e90:	add	lr, lr, #28
   16e94:	ldr	lr, [lr]
   16e98:	ldr	r4, [fp, #4]
   16e9c:	add	r4, r4, #32
   16ea0:	ldr	r4, [r4]
   16ea4:	str	r4, [sp, #24]
   16ea8:	str	lr, [sp, #20]
   16eac:	str	ip, [sp, #16]
   16eb0:	str	r0, [sp, #12]
   16eb4:	str	r1, [sp, #8]
   16eb8:	str	r2, [sp, #4]
   16ebc:	str	r3, [sp]
   16ec0:	mov	r3, r6
   16ec4:	mov	r2, r5
   16ec8:	mov	r1, r7
   16ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ed0:	bl	10fbc <fprintf@plt>
   16ed4:	b	16f88 <__assert_fail@plt+0x5ec4>
   16ed8:	movw	r0, #40500	; 0x9e34
   16edc:	movt	r0, #1
   16ee0:	bl	10fa4 <gettext@plt>
   16ee4:	mov	r7, r0
   16ee8:	ldr	r3, [fp, #4]
   16eec:	ldr	r5, [r3]
   16ef0:	ldr	r3, [fp, #4]
   16ef4:	add	r3, r3, #4
   16ef8:	ldr	r6, [r3]
   16efc:	ldr	r3, [fp, #4]
   16f00:	add	r3, r3, #8
   16f04:	ldr	r3, [r3]
   16f08:	ldr	r2, [fp, #4]
   16f0c:	add	r2, r2, #12
   16f10:	ldr	r2, [r2]
   16f14:	ldr	r1, [fp, #4]
   16f18:	add	r1, r1, #16
   16f1c:	ldr	r1, [r1]
   16f20:	ldr	r0, [fp, #4]
   16f24:	add	r0, r0, #20
   16f28:	ldr	r0, [r0]
   16f2c:	ldr	ip, [fp, #4]
   16f30:	add	ip, ip, #24
   16f34:	ldr	ip, [ip]
   16f38:	ldr	lr, [fp, #4]
   16f3c:	add	lr, lr, #28
   16f40:	ldr	lr, [lr]
   16f44:	ldr	r4, [fp, #4]
   16f48:	add	r4, r4, #32
   16f4c:	ldr	r4, [r4]
   16f50:	str	r4, [sp, #24]
   16f54:	str	lr, [sp, #20]
   16f58:	str	ip, [sp, #16]
   16f5c:	str	r0, [sp, #12]
   16f60:	str	r1, [sp, #8]
   16f64:	str	r2, [sp, #4]
   16f68:	str	r3, [sp]
   16f6c:	mov	r3, r6
   16f70:	mov	r2, r5
   16f74:	mov	r1, r7
   16f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f7c:	bl	10fbc <fprintf@plt>
   16f80:	b	16f88 <__assert_fail@plt+0x5ec4>
   16f84:	nop	{0}
   16f88:	nop	{0}
   16f8c:	sub	sp, fp, #20
   16f90:	ldrd	r4, [sp]
   16f94:	ldrd	r6, [sp, #8]
   16f98:	ldr	fp, [sp, #16]
   16f9c:	add	sp, sp, #20
   16fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   16fa4:	str	fp, [sp, #-8]!
   16fa8:	str	lr, [sp, #4]
   16fac:	add	fp, sp, #4
   16fb0:	sub	sp, sp, #32
   16fb4:	str	r0, [fp, #-16]
   16fb8:	str	r1, [fp, #-20]	; 0xffffffec
   16fbc:	str	r2, [fp, #-24]	; 0xffffffe8
   16fc0:	str	r3, [fp, #-28]	; 0xffffffe4
   16fc4:	mov	r3, #0
   16fc8:	str	r3, [fp, #-8]
   16fcc:	b	16fdc <__assert_fail@plt+0x5f18>
   16fd0:	ldr	r3, [fp, #-8]
   16fd4:	add	r3, r3, #1
   16fd8:	str	r3, [fp, #-8]
   16fdc:	ldr	r3, [fp, #-8]
   16fe0:	lsl	r3, r3, #2
   16fe4:	ldr	r2, [fp, #4]
   16fe8:	add	r3, r2, r3
   16fec:	ldr	r3, [r3]
   16ff0:	cmp	r3, #0
   16ff4:	bne	16fd0 <__assert_fail@plt+0x5f0c>
   16ff8:	ldr	r3, [fp, #-8]
   16ffc:	str	r3, [sp, #4]
   17000:	ldr	r3, [fp, #4]
   17004:	str	r3, [sp]
   17008:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1700c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17010:	ldr	r1, [fp, #-20]	; 0xffffffec
   17014:	ldr	r0, [fp, #-16]
   17018:	bl	16a1c <__assert_fail@plt+0x5958>
   1701c:	nop	{0}
   17020:	sub	sp, fp, #4
   17024:	ldr	fp, [sp]
   17028:	add	sp, sp, #4
   1702c:	pop	{pc}		; (ldr pc, [sp], #4)
   17030:	str	fp, [sp, #-8]!
   17034:	str	lr, [sp, #4]
   17038:	add	fp, sp, #4
   1703c:	sub	sp, sp, #72	; 0x48
   17040:	str	r0, [fp, #-56]	; 0xffffffc8
   17044:	str	r1, [fp, #-60]	; 0xffffffc4
   17048:	str	r2, [fp, #-64]	; 0xffffffc0
   1704c:	str	r3, [fp, #-68]	; 0xffffffbc
   17050:	mov	r3, #0
   17054:	str	r3, [fp, #-8]
   17058:	b	17068 <__assert_fail@plt+0x5fa4>
   1705c:	ldr	r3, [fp, #-8]
   17060:	add	r3, r3, #1
   17064:	str	r3, [fp, #-8]
   17068:	ldr	r3, [fp, #-8]
   1706c:	cmp	r3, #9
   17070:	bhi	170b4 <__assert_fail@plt+0x5ff0>
   17074:	ldr	r3, [fp, #4]
   17078:	add	r2, r3, #4
   1707c:	str	r2, [fp, #4]
   17080:	ldr	r2, [r3]
   17084:	ldr	r3, [fp, #-8]
   17088:	lsl	r3, r3, #2
   1708c:	sub	r1, fp, #4
   17090:	add	r3, r1, r3
   17094:	str	r2, [r3, #-44]	; 0xffffffd4
   17098:	ldr	r3, [fp, #-8]
   1709c:	lsl	r3, r3, #2
   170a0:	sub	r2, fp, #4
   170a4:	add	r3, r2, r3
   170a8:	ldr	r3, [r3, #-44]	; 0xffffffd4
   170ac:	cmp	r3, #0
   170b0:	bne	1705c <__assert_fail@plt+0x5f98>
   170b4:	ldr	r3, [fp, #-8]
   170b8:	str	r3, [sp, #4]
   170bc:	sub	r3, fp, #48	; 0x30
   170c0:	str	r3, [sp]
   170c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   170c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   170cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   170d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   170d4:	bl	16a1c <__assert_fail@plt+0x5958>
   170d8:	nop	{0}
   170dc:	sub	sp, fp, #4
   170e0:	ldr	fp, [sp]
   170e4:	add	sp, sp, #4
   170e8:	pop	{pc}		; (ldr pc, [sp], #4)
   170ec:	push	{r3}		; (str r3, [sp, #-4]!)
   170f0:	str	fp, [sp, #-8]!
   170f4:	str	lr, [sp, #4]
   170f8:	add	fp, sp, #4
   170fc:	sub	sp, sp, #36	; 0x24
   17100:	str	r0, [fp, #-20]	; 0xffffffec
   17104:	str	r1, [fp, #-24]	; 0xffffffe8
   17108:	str	r2, [fp, #-28]	; 0xffffffe4
   1710c:	add	r3, fp, #8
   17110:	str	r3, [fp, #-12]
   17114:	ldr	r3, [fp, #-12]
   17118:	str	r3, [sp]
   1711c:	ldr	r3, [fp, #4]
   17120:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1712c:	bl	17030 <__assert_fail@plt+0x5f6c>
   17130:	nop	{0}
   17134:	sub	sp, fp, #4
   17138:	ldr	fp, [sp]
   1713c:	ldr	lr, [sp, #4]
   17140:	add	sp, sp, #8
   17144:	add	sp, sp, #4
   17148:	bx	lr
   1714c:	str	fp, [sp, #-8]!
   17150:	str	lr, [sp, #4]
   17154:	add	fp, sp, #4
   17158:	movw	r3, #45420	; 0xb16c
   1715c:	movt	r3, #2
   17160:	ldr	r3, [r3]
   17164:	mov	r1, r3
   17168:	mov	r0, #10
   1716c:	bl	10eb4 <fputc_unlocked@plt>
   17170:	movw	r0, #40560	; 0x9e70
   17174:	movt	r0, #1
   17178:	bl	10fa4 <gettext@plt>
   1717c:	mov	r3, r0
   17180:	movw	r1, #40580	; 0x9e84
   17184:	movt	r1, #1
   17188:	mov	r0, r3
   1718c:	bl	10e3c <printf@plt>
   17190:	movw	r0, #40604	; 0x9e9c
   17194:	movt	r0, #1
   17198:	bl	10fa4 <gettext@plt>
   1719c:	mov	r3, r0
   171a0:	movw	r2, #40624	; 0x9eb0
   171a4:	movt	r2, #1
   171a8:	movw	r1, #40664	; 0x9ed8
   171ac:	movt	r1, #1
   171b0:	mov	r0, r3
   171b4:	bl	10e3c <printf@plt>
   171b8:	movw	r0, #40680	; 0x9ee8
   171bc:	movt	r0, #1
   171c0:	bl	10fa4 <gettext@plt>
   171c4:	mov	r3, r0
   171c8:	movw	r1, #40720	; 0x9f10
   171cc:	movt	r1, #1
   171d0:	mov	r0, r3
   171d4:	bl	10e3c <printf@plt>
   171d8:	nop	{0}
   171dc:	sub	sp, fp, #4
   171e0:	ldr	fp, [sp]
   171e4:	add	sp, sp, #4
   171e8:	pop	{pc}		; (ldr pc, [sp], #4)
   171ec:	str	fp, [sp, #-8]!
   171f0:	str	lr, [sp, #4]
   171f4:	add	fp, sp, #4
   171f8:	sub	sp, sp, #16
   171fc:	str	r0, [fp, #-8]
   17200:	str	r1, [fp, #-12]
   17204:	str	r2, [fp, #-16]
   17208:	ldr	r2, [fp, #-16]
   1720c:	ldr	r1, [fp, #-12]
   17210:	ldr	r0, [fp, #-8]
   17214:	bl	173d0 <__assert_fail@plt+0x630c>
   17218:	mov	r3, r0
   1721c:	mov	r0, r3
   17220:	sub	sp, fp, #4
   17224:	ldr	fp, [sp]
   17228:	add	sp, sp, #4
   1722c:	pop	{pc}		; (ldr pc, [sp], #4)
   17230:	str	fp, [sp, #-8]!
   17234:	str	lr, [sp, #4]
   17238:	add	fp, sp, #4
   1723c:	sub	sp, sp, #8
   17240:	str	r0, [fp, #-8]
   17244:	ldr	r3, [fp, #-8]
   17248:	cmp	r3, #0
   1724c:	bne	17254 <__assert_fail@plt+0x6190>
   17250:	bl	17ae0 <__assert_fail@plt+0x6a1c>
   17254:	ldr	r3, [fp, #-8]
   17258:	mov	r0, r3
   1725c:	sub	sp, fp, #4
   17260:	ldr	fp, [sp]
   17264:	add	sp, sp, #4
   17268:	pop	{pc}		; (ldr pc, [sp], #4)
   1726c:	str	fp, [sp, #-8]!
   17270:	str	lr, [sp, #4]
   17274:	add	fp, sp, #4
   17278:	sub	sp, sp, #8
   1727c:	str	r0, [fp, #-8]
   17280:	ldr	r0, [fp, #-8]
   17284:	bl	17bf4 <__assert_fail@plt+0x6b30>
   17288:	mov	r3, r0
   1728c:	mov	r0, r3
   17290:	bl	17230 <__assert_fail@plt+0x616c>
   17294:	mov	r3, r0
   17298:	mov	r0, r3
   1729c:	sub	sp, fp, #4
   172a0:	ldr	fp, [sp]
   172a4:	add	sp, sp, #4
   172a8:	pop	{pc}		; (ldr pc, [sp], #4)
   172ac:	str	fp, [sp, #-8]!
   172b0:	str	lr, [sp, #4]
   172b4:	add	fp, sp, #4
   172b8:	sub	sp, sp, #8
   172bc:	str	r0, [fp, #-8]
   172c0:	ldr	r0, [fp, #-8]
   172c4:	bl	182b4 <__assert_fail@plt+0x71f0>
   172c8:	mov	r3, r0
   172cc:	mov	r0, r3
   172d0:	bl	17230 <__assert_fail@plt+0x616c>
   172d4:	mov	r3, r0
   172d8:	mov	r0, r3
   172dc:	sub	sp, fp, #4
   172e0:	ldr	fp, [sp]
   172e4:	add	sp, sp, #4
   172e8:	pop	{pc}		; (ldr pc, [sp], #4)
   172ec:	str	fp, [sp, #-8]!
   172f0:	str	lr, [sp, #4]
   172f4:	add	fp, sp, #4
   172f8:	sub	sp, sp, #8
   172fc:	str	r0, [fp, #-8]
   17300:	ldr	r0, [fp, #-8]
   17304:	bl	1726c <__assert_fail@plt+0x61a8>
   17308:	mov	r3, r0
   1730c:	mov	r0, r3
   17310:	sub	sp, fp, #4
   17314:	ldr	fp, [sp]
   17318:	add	sp, sp, #4
   1731c:	pop	{pc}		; (ldr pc, [sp], #4)
   17320:	str	fp, [sp, #-8]!
   17324:	str	lr, [sp, #4]
   17328:	add	fp, sp, #4
   1732c:	sub	sp, sp, #16
   17330:	str	r0, [fp, #-16]
   17334:	str	r1, [fp, #-20]	; 0xffffffec
   17338:	ldr	r1, [fp, #-20]	; 0xffffffec
   1733c:	ldr	r0, [fp, #-16]
   17340:	bl	17c84 <__assert_fail@plt+0x6bc0>
   17344:	str	r0, [fp, #-8]
   17348:	ldr	r3, [fp, #-8]
   1734c:	cmp	r3, #0
   17350:	bne	17370 <__assert_fail@plt+0x62ac>
   17354:	ldr	r3, [fp, #-16]
   17358:	cmp	r3, #0
   1735c:	beq	1736c <__assert_fail@plt+0x62a8>
   17360:	ldr	r3, [fp, #-20]	; 0xffffffec
   17364:	cmp	r3, #0
   17368:	beq	17370 <__assert_fail@plt+0x62ac>
   1736c:	bl	17ae0 <__assert_fail@plt+0x6a1c>
   17370:	ldr	r3, [fp, #-8]
   17374:	mov	r0, r3
   17378:	sub	sp, fp, #4
   1737c:	ldr	fp, [sp]
   17380:	add	sp, sp, #4
   17384:	pop	{pc}		; (ldr pc, [sp], #4)
   17388:	str	fp, [sp, #-8]!
   1738c:	str	lr, [sp, #4]
   17390:	add	fp, sp, #4
   17394:	sub	sp, sp, #8
   17398:	str	r0, [fp, #-8]
   1739c:	str	r1, [fp, #-12]
   173a0:	ldr	r1, [fp, #-12]
   173a4:	ldr	r0, [fp, #-8]
   173a8:	bl	182ec <__assert_fail@plt+0x7228>
   173ac:	mov	r3, r0
   173b0:	mov	r0, r3
   173b4:	bl	17230 <__assert_fail@plt+0x616c>
   173b8:	mov	r3, r0
   173bc:	mov	r0, r3
   173c0:	sub	sp, fp, #4
   173c4:	ldr	fp, [sp]
   173c8:	add	sp, sp, #4
   173cc:	pop	{pc}		; (ldr pc, [sp], #4)
   173d0:	str	fp, [sp, #-8]!
   173d4:	str	lr, [sp, #4]
   173d8:	add	fp, sp, #4
   173dc:	sub	sp, sp, #24
   173e0:	str	r0, [fp, #-16]
   173e4:	str	r1, [fp, #-20]	; 0xffffffec
   173e8:	str	r2, [fp, #-24]	; 0xffffffe8
   173ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   173f4:	ldr	r0, [fp, #-16]
   173f8:	bl	1851c <__assert_fail@plt+0x7458>
   173fc:	str	r0, [fp, #-8]
   17400:	ldr	r3, [fp, #-8]
   17404:	cmp	r3, #0
   17408:	bne	17434 <__assert_fail@plt+0x6370>
   1740c:	ldr	r3, [fp, #-16]
   17410:	cmp	r3, #0
   17414:	beq	17430 <__assert_fail@plt+0x636c>
   17418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1741c:	cmp	r3, #0
   17420:	beq	17434 <__assert_fail@plt+0x6370>
   17424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17428:	cmp	r3, #0
   1742c:	beq	17434 <__assert_fail@plt+0x6370>
   17430:	bl	17ae0 <__assert_fail@plt+0x6a1c>
   17434:	ldr	r3, [fp, #-8]
   17438:	mov	r0, r3
   1743c:	sub	sp, fp, #4
   17440:	ldr	fp, [sp]
   17444:	add	sp, sp, #4
   17448:	pop	{pc}		; (ldr pc, [sp], #4)
   1744c:	str	fp, [sp, #-8]!
   17450:	str	lr, [sp, #4]
   17454:	add	fp, sp, #4
   17458:	sub	sp, sp, #16
   1745c:	str	r0, [fp, #-8]
   17460:	str	r1, [fp, #-12]
   17464:	str	r2, [fp, #-16]
   17468:	ldr	r2, [fp, #-16]
   1746c:	ldr	r1, [fp, #-12]
   17470:	ldr	r0, [fp, #-8]
   17474:	bl	1838c <__assert_fail@plt+0x72c8>
   17478:	mov	r3, r0
   1747c:	mov	r0, r3
   17480:	bl	17230 <__assert_fail@plt+0x616c>
   17484:	mov	r3, r0
   17488:	mov	r0, r3
   1748c:	sub	sp, fp, #4
   17490:	ldr	fp, [sp]
   17494:	add	sp, sp, #4
   17498:	pop	{pc}		; (ldr pc, [sp], #4)
   1749c:	str	fp, [sp, #-8]!
   174a0:	str	lr, [sp, #4]
   174a4:	add	fp, sp, #4
   174a8:	sub	sp, sp, #8
   174ac:	str	r0, [fp, #-8]
   174b0:	str	r1, [fp, #-12]
   174b4:	ldr	r2, [fp, #-12]
   174b8:	ldr	r1, [fp, #-8]
   174bc:	mov	r0, #0
   174c0:	bl	173d0 <__assert_fail@plt+0x630c>
   174c4:	mov	r3, r0
   174c8:	mov	r0, r3
   174cc:	sub	sp, fp, #4
   174d0:	ldr	fp, [sp]
   174d4:	add	sp, sp, #4
   174d8:	pop	{pc}		; (ldr pc, [sp], #4)
   174dc:	str	fp, [sp, #-8]!
   174e0:	str	lr, [sp, #4]
   174e4:	add	fp, sp, #4
   174e8:	sub	sp, sp, #8
   174ec:	str	r0, [fp, #-8]
   174f0:	str	r1, [fp, #-12]
   174f4:	ldr	r2, [fp, #-12]
   174f8:	ldr	r1, [fp, #-8]
   174fc:	mov	r0, #0
   17500:	bl	1744c <__assert_fail@plt+0x6388>
   17504:	mov	r3, r0
   17508:	mov	r0, r3
   1750c:	sub	sp, fp, #4
   17510:	ldr	fp, [sp]
   17514:	add	sp, sp, #4
   17518:	pop	{pc}		; (ldr pc, [sp], #4)
   1751c:	str	fp, [sp, #-8]!
   17520:	str	lr, [sp, #4]
   17524:	add	fp, sp, #4
   17528:	sub	sp, sp, #8
   1752c:	str	r0, [fp, #-8]
   17530:	str	r1, [fp, #-12]
   17534:	mov	r2, #1
   17538:	ldr	r1, [fp, #-12]
   1753c:	ldr	r0, [fp, #-8]
   17540:	bl	1755c <__assert_fail@plt+0x6498>
   17544:	mov	r3, r0
   17548:	mov	r0, r3
   1754c:	sub	sp, fp, #4
   17550:	ldr	fp, [sp]
   17554:	add	sp, sp, #4
   17558:	pop	{pc}		; (ldr pc, [sp], #4)
   1755c:	str	fp, [sp, #-8]!
   17560:	str	lr, [sp, #4]
   17564:	add	fp, sp, #4
   17568:	sub	sp, sp, #24
   1756c:	str	r0, [fp, #-16]
   17570:	str	r1, [fp, #-20]	; 0xffffffec
   17574:	str	r2, [fp, #-24]	; 0xffffffe8
   17578:	ldr	r3, [fp, #-20]	; 0xffffffec
   1757c:	ldr	r3, [r3]
   17580:	str	r3, [fp, #-8]
   17584:	ldr	r3, [fp, #-16]
   17588:	cmp	r3, #0
   1758c:	bne	175d4 <__assert_fail@plt+0x6510>
   17590:	ldr	r3, [fp, #-8]
   17594:	cmp	r3, #0
   17598:	bne	17610 <__assert_fail@plt+0x654c>
   1759c:	mov	r2, #64	; 0x40
   175a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   175a4:	udiv	r3, r2, r3
   175a8:	str	r3, [fp, #-8]
   175ac:	ldr	r3, [fp, #-8]
   175b0:	cmp	r3, #0
   175b4:	moveq	r3, #1
   175b8:	movne	r3, #0
   175bc:	uxtb	r3, r3
   175c0:	mov	r2, r3
   175c4:	ldr	r3, [fp, #-8]
   175c8:	add	r3, r2, r3
   175cc:	str	r3, [fp, #-8]
   175d0:	b	17610 <__assert_fail@plt+0x654c>
   175d4:	ldr	r2, [fp, #-8]
   175d8:	ldr	r3, [fp, #-8]
   175dc:	lsr	r3, r3, #1
   175e0:	add	r3, r3, #1
   175e4:	mov	r1, #0
   175e8:	adds	r3, r2, r3
   175ec:	bcc	175f4 <__assert_fail@plt+0x6530>
   175f0:	mov	r1, #1
   175f4:	str	r3, [fp, #-8]
   175f8:	mov	r3, r1
   175fc:	and	r3, r3, #1
   17600:	uxtb	r3, r3
   17604:	cmp	r3, #0
   17608:	beq	17610 <__assert_fail@plt+0x654c>
   1760c:	bl	17ae0 <__assert_fail@plt+0x6a1c>
   17610:	ldr	r3, [fp, #-8]
   17614:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17618:	mov	r1, r3
   1761c:	ldr	r0, [fp, #-16]
   17620:	bl	173d0 <__assert_fail@plt+0x630c>
   17624:	str	r0, [fp, #-16]
   17628:	ldr	r2, [fp, #-8]
   1762c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17630:	str	r2, [r3]
   17634:	ldr	r3, [fp, #-16]
   17638:	mov	r0, r3
   1763c:	sub	sp, fp, #4
   17640:	ldr	fp, [sp]
   17644:	add	sp, sp, #4
   17648:	pop	{pc}		; (ldr pc, [sp], #4)
   1764c:	str	fp, [sp, #-8]!
   17650:	str	lr, [sp, #4]
   17654:	add	fp, sp, #4
   17658:	sub	sp, sp, #32
   1765c:	str	r0, [fp, #-24]	; 0xffffffe8
   17660:	str	r1, [fp, #-28]	; 0xffffffe4
   17664:	str	r2, [fp, #-32]	; 0xffffffe0
   17668:	str	r3, [fp, #-36]	; 0xffffffdc
   1766c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17670:	ldr	r3, [r3]
   17674:	str	r3, [fp, #-8]
   17678:	ldr	r3, [fp, #-8]
   1767c:	asr	r3, r3, #1
   17680:	mov	r1, #0
   17684:	ldr	r2, [fp, #-8]
   17688:	adds	r3, r2, r3
   1768c:	bvc	17694 <__assert_fail@plt+0x65d0>
   17690:	mov	r1, #1
   17694:	str	r3, [fp, #-16]
   17698:	mov	r3, r1
   1769c:	and	r3, r3, #1
   176a0:	uxtb	r3, r3
   176a4:	cmp	r3, #0
   176a8:	beq	176b4 <__assert_fail@plt+0x65f0>
   176ac:	mvn	r3, #-2147483648	; 0x80000000
   176b0:	str	r3, [fp, #-16]
   176b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   176b8:	cmp	r3, #0
   176bc:	blt	176d8 <__assert_fail@plt+0x6614>
   176c0:	ldr	r3, [fp, #-16]
   176c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   176c8:	cmp	r2, r3
   176cc:	bge	176d8 <__assert_fail@plt+0x6614>
   176d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   176d4:	str	r3, [fp, #-16]
   176d8:	ldr	r2, [fp, #-16]
   176dc:	mov	lr, #0
   176e0:	ldr	r3, [fp, #4]
   176e4:	smull	r2, r3, r2, r3
   176e8:	mov	r0, #0
   176ec:	mov	r1, #0
   176f0:	mov	r0, r3
   176f4:	asr	r1, r3, #31
   176f8:	asr	ip, r2, #31
   176fc:	cmp	ip, r0
   17700:	beq	17708 <__assert_fail@plt+0x6644>
   17704:	mov	lr, #1
   17708:	mov	r3, r2
   1770c:	str	r3, [fp, #-20]	; 0xffffffec
   17710:	mov	r3, lr
   17714:	and	r3, r3, #1
   17718:	uxtb	r3, r3
   1771c:	cmp	r3, #0
   17720:	beq	1772c <__assert_fail@plt+0x6668>
   17724:	mvn	r3, #-2147483648	; 0x80000000
   17728:	b	17744 <__assert_fail@plt+0x6680>
   1772c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17730:	cmp	r3, #63	; 0x3f
   17734:	bgt	17740 <__assert_fail@plt+0x667c>
   17738:	mov	r3, #64	; 0x40
   1773c:	b	17744 <__assert_fail@plt+0x6680>
   17740:	mov	r3, #0
   17744:	str	r3, [fp, #-12]
   17748:	ldr	r3, [fp, #-12]
   1774c:	cmp	r3, #0
   17750:	beq	17788 <__assert_fail@plt+0x66c4>
   17754:	ldr	r2, [fp, #-12]
   17758:	ldr	r3, [fp, #4]
   1775c:	sdiv	r3, r2, r3
   17760:	str	r3, [fp, #-16]
   17764:	ldr	r3, [fp, #-12]
   17768:	ldr	r2, [fp, #4]
   1776c:	sdiv	r2, r3, r2
   17770:	ldr	r1, [fp, #4]
   17774:	mul	r2, r1, r2
   17778:	sub	r3, r3, r2
   1777c:	ldr	r2, [fp, #-12]
   17780:	sub	r3, r2, r3
   17784:	str	r3, [fp, #-20]	; 0xffffffec
   17788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1778c:	cmp	r3, #0
   17790:	bne	177a0 <__assert_fail@plt+0x66dc>
   17794:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17798:	mov	r2, #0
   1779c:	str	r2, [r3]
   177a0:	ldr	r2, [fp, #-16]
   177a4:	ldr	r3, [fp, #-8]
   177a8:	sub	r3, r2, r3
   177ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   177b0:	cmp	r2, r3
   177b4:	ble	17854 <__assert_fail@plt+0x6790>
   177b8:	mov	r1, #0
   177bc:	ldr	r2, [fp, #-8]
   177c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   177c4:	adds	r3, r2, r3
   177c8:	bvc	177d0 <__assert_fail@plt+0x670c>
   177cc:	mov	r1, #1
   177d0:	str	r3, [fp, #-16]
   177d4:	mov	r3, r1
   177d8:	and	r3, r3, #1
   177dc:	uxtb	r3, r3
   177e0:	cmp	r3, #0
   177e4:	bne	17850 <__assert_fail@plt+0x678c>
   177e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   177ec:	cmp	r3, #0
   177f0:	blt	17804 <__assert_fail@plt+0x6740>
   177f4:	ldr	r3, [fp, #-16]
   177f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   177fc:	cmp	r2, r3
   17800:	blt	17850 <__assert_fail@plt+0x678c>
   17804:	ldr	r2, [fp, #-16]
   17808:	mov	lr, #0
   1780c:	ldr	r3, [fp, #4]
   17810:	smull	r2, r3, r2, r3
   17814:	mov	r0, #0
   17818:	mov	r1, #0
   1781c:	mov	r0, r3
   17820:	asr	r1, r3, #31
   17824:	asr	ip, r2, #31
   17828:	cmp	ip, r0
   1782c:	beq	17834 <__assert_fail@plt+0x6770>
   17830:	mov	lr, #1
   17834:	mov	r3, r2
   17838:	str	r3, [fp, #-20]	; 0xffffffec
   1783c:	mov	r3, lr
   17840:	and	r3, r3, #1
   17844:	uxtb	r3, r3
   17848:	cmp	r3, #0
   1784c:	beq	17854 <__assert_fail@plt+0x6790>
   17850:	bl	17ae0 <__assert_fail@plt+0x6a1c>
   17854:	ldr	r3, [fp, #-20]	; 0xffffffec
   17858:	mov	r1, r3
   1785c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17860:	bl	17320 <__assert_fail@plt+0x625c>
   17864:	str	r0, [fp, #-24]	; 0xffffffe8
   17868:	ldr	r2, [fp, #-16]
   1786c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17870:	str	r2, [r3]
   17874:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17878:	mov	r0, r3
   1787c:	sub	sp, fp, #4
   17880:	ldr	fp, [sp]
   17884:	add	sp, sp, #4
   17888:	pop	{pc}		; (ldr pc, [sp], #4)
   1788c:	str	fp, [sp, #-8]!
   17890:	str	lr, [sp, #4]
   17894:	add	fp, sp, #4
   17898:	sub	sp, sp, #8
   1789c:	str	r0, [fp, #-8]
   178a0:	mov	r1, #1
   178a4:	ldr	r0, [fp, #-8]
   178a8:	bl	178fc <__assert_fail@plt+0x6838>
   178ac:	mov	r3, r0
   178b0:	mov	r0, r3
   178b4:	sub	sp, fp, #4
   178b8:	ldr	fp, [sp]
   178bc:	add	sp, sp, #4
   178c0:	pop	{pc}		; (ldr pc, [sp], #4)
   178c4:	str	fp, [sp, #-8]!
   178c8:	str	lr, [sp, #4]
   178cc:	add	fp, sp, #4
   178d0:	sub	sp, sp, #8
   178d4:	str	r0, [fp, #-8]
   178d8:	mov	r1, #1
   178dc:	ldr	r0, [fp, #-8]
   178e0:	bl	17944 <__assert_fail@plt+0x6880>
   178e4:	mov	r3, r0
   178e8:	mov	r0, r3
   178ec:	sub	sp, fp, #4
   178f0:	ldr	fp, [sp]
   178f4:	add	sp, sp, #4
   178f8:	pop	{pc}		; (ldr pc, [sp], #4)
   178fc:	str	fp, [sp, #-8]!
   17900:	str	lr, [sp, #4]
   17904:	add	fp, sp, #4
   17908:	sub	sp, sp, #8
   1790c:	str	r0, [fp, #-8]
   17910:	str	r1, [fp, #-12]
   17914:	ldr	r1, [fp, #-12]
   17918:	ldr	r0, [fp, #-8]
   1791c:	bl	17b24 <__assert_fail@plt+0x6a60>
   17920:	mov	r3, r0
   17924:	mov	r0, r3
   17928:	bl	17230 <__assert_fail@plt+0x616c>
   1792c:	mov	r3, r0
   17930:	mov	r0, r3
   17934:	sub	sp, fp, #4
   17938:	ldr	fp, [sp]
   1793c:	add	sp, sp, #4
   17940:	pop	{pc}		; (ldr pc, [sp], #4)
   17944:	str	fp, [sp, #-8]!
   17948:	str	lr, [sp, #4]
   1794c:	add	fp, sp, #4
   17950:	sub	sp, sp, #8
   17954:	str	r0, [fp, #-8]
   17958:	str	r1, [fp, #-12]
   1795c:	ldr	r1, [fp, #-12]
   17960:	ldr	r0, [fp, #-8]
   17964:	bl	18348 <__assert_fail@plt+0x7284>
   17968:	mov	r3, r0
   1796c:	mov	r0, r3
   17970:	bl	17230 <__assert_fail@plt+0x616c>
   17974:	mov	r3, r0
   17978:	mov	r0, r3
   1797c:	sub	sp, fp, #4
   17980:	ldr	fp, [sp]
   17984:	add	sp, sp, #4
   17988:	pop	{pc}		; (ldr pc, [sp], #4)
   1798c:	str	fp, [sp, #-8]!
   17990:	str	lr, [sp, #4]
   17994:	add	fp, sp, #4
   17998:	sub	sp, sp, #8
   1799c:	str	r0, [fp, #-8]
   179a0:	str	r1, [fp, #-12]
   179a4:	ldr	r0, [fp, #-12]
   179a8:	bl	1726c <__assert_fail@plt+0x61a8>
   179ac:	mov	r3, r0
   179b0:	ldr	r2, [fp, #-12]
   179b4:	ldr	r1, [fp, #-8]
   179b8:	mov	r0, r3
   179bc:	bl	10e84 <memcpy@plt>
   179c0:	mov	r3, r0
   179c4:	mov	r0, r3
   179c8:	sub	sp, fp, #4
   179cc:	ldr	fp, [sp]
   179d0:	add	sp, sp, #4
   179d4:	pop	{pc}		; (ldr pc, [sp], #4)
   179d8:	str	fp, [sp, #-8]!
   179dc:	str	lr, [sp, #4]
   179e0:	add	fp, sp, #4
   179e4:	sub	sp, sp, #8
   179e8:	str	r0, [fp, #-8]
   179ec:	str	r1, [fp, #-12]
   179f0:	ldr	r0, [fp, #-12]
   179f4:	bl	172ac <__assert_fail@plt+0x61e8>
   179f8:	mov	r3, r0
   179fc:	mov	r0, r3
   17a00:	ldr	r3, [fp, #-12]
   17a04:	mov	r2, r3
   17a08:	ldr	r1, [fp, #-8]
   17a0c:	bl	10e84 <memcpy@plt>
   17a10:	mov	r3, r0
   17a14:	mov	r0, r3
   17a18:	sub	sp, fp, #4
   17a1c:	ldr	fp, [sp]
   17a20:	add	sp, sp, #4
   17a24:	pop	{pc}		; (ldr pc, [sp], #4)
   17a28:	str	fp, [sp, #-8]!
   17a2c:	str	lr, [sp, #4]
   17a30:	add	fp, sp, #4
   17a34:	sub	sp, sp, #16
   17a38:	str	r0, [fp, #-16]
   17a3c:	str	r1, [fp, #-20]	; 0xffffffec
   17a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a44:	add	r3, r3, #1
   17a48:	mov	r0, r3
   17a4c:	bl	172ac <__assert_fail@plt+0x61e8>
   17a50:	mov	r3, r0
   17a54:	str	r3, [fp, #-8]
   17a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a5c:	ldr	r2, [fp, #-8]
   17a60:	add	r3, r2, r3
   17a64:	mov	r2, #0
   17a68:	strb	r2, [r3]
   17a6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a70:	mov	r2, r3
   17a74:	ldr	r1, [fp, #-16]
   17a78:	ldr	r0, [fp, #-8]
   17a7c:	bl	10e84 <memcpy@plt>
   17a80:	mov	r3, r0
   17a84:	mov	r0, r3
   17a88:	sub	sp, fp, #4
   17a8c:	ldr	fp, [sp]
   17a90:	add	sp, sp, #4
   17a94:	pop	{pc}		; (ldr pc, [sp], #4)
   17a98:	str	fp, [sp, #-8]!
   17a9c:	str	lr, [sp, #4]
   17aa0:	add	fp, sp, #4
   17aa4:	sub	sp, sp, #8
   17aa8:	str	r0, [fp, #-8]
   17aac:	ldr	r0, [fp, #-8]
   17ab0:	bl	10fb0 <strlen@plt>
   17ab4:	mov	r3, r0
   17ab8:	add	r3, r3, #1
   17abc:	mov	r1, r3
   17ac0:	ldr	r0, [fp, #-8]
   17ac4:	bl	1798c <__assert_fail@plt+0x68c8>
   17ac8:	mov	r3, r0
   17acc:	mov	r0, r3
   17ad0:	sub	sp, fp, #4
   17ad4:	ldr	fp, [sp]
   17ad8:	add	sp, sp, #4
   17adc:	pop	{pc}		; (ldr pc, [sp], #4)
   17ae0:	strd	r4, [sp, #-16]!
   17ae4:	str	fp, [sp, #8]
   17ae8:	str	lr, [sp, #12]
   17aec:	add	fp, sp, #12
   17af0:	movw	r3, #45324	; 0xb10c
   17af4:	movt	r3, #2
   17af8:	ldr	r4, [r3]
   17afc:	movw	r0, #40800	; 0x9f60
   17b00:	movt	r0, #1
   17b04:	bl	10fa4 <gettext@plt>
   17b08:	mov	r3, r0
   17b0c:	movw	r2, #40820	; 0x9f74
   17b10:	movt	r2, #1
   17b14:	mov	r1, #0
   17b18:	mov	r0, r4
   17b1c:	bl	10f44 <error@plt>
   17b20:	bl	11094 <abort@plt>
   17b24:	str	fp, [sp, #-8]!
   17b28:	str	lr, [sp, #4]
   17b2c:	add	fp, sp, #4
   17b30:	sub	sp, sp, #16
   17b34:	str	r0, [fp, #-16]
   17b38:	str	r1, [fp, #-20]	; 0xffffffec
   17b3c:	ldr	r3, [fp, #-16]
   17b40:	cmp	r3, #0
   17b44:	beq	17b54 <__assert_fail@plt+0x6a90>
   17b48:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b4c:	cmp	r3, #0
   17b50:	bne	17b64 <__assert_fail@plt+0x6aa0>
   17b54:	mov	r3, #1
   17b58:	str	r3, [fp, #-20]	; 0xffffffec
   17b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b60:	str	r3, [fp, #-16]
   17b64:	mov	ip, #0
   17b68:	ldr	r2, [fp, #-16]
   17b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b70:	umull	r0, r1, r2, r3
   17b74:	mov	r2, #0
   17b78:	mov	r3, #0
   17b7c:	mov	r2, r1
   17b80:	mov	r3, #0
   17b84:	cmp	r2, #0
   17b88:	beq	17b90 <__assert_fail@plt+0x6acc>
   17b8c:	mov	ip, #1
   17b90:	cmp	r0, #0
   17b94:	bge	17b9c <__assert_fail@plt+0x6ad8>
   17b98:	mov	ip, #1
   17b9c:	mov	r3, ip
   17ba0:	and	r3, r3, #1
   17ba4:	uxtb	r3, r3
   17ba8:	cmp	r3, #0
   17bac:	beq	17bc8 <__assert_fail@plt+0x6b04>
   17bb0:	bl	10fd4 <__errno_location@plt>
   17bb4:	mov	r2, r0
   17bb8:	mov	r3, #12
   17bbc:	str	r3, [r2]
   17bc0:	mov	r3, #0
   17bc4:	b	17be0 <__assert_fail@plt+0x6b1c>
   17bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17bcc:	ldr	r0, [fp, #-16]
   17bd0:	bl	10e0c <calloc@plt>
   17bd4:	mov	r3, r0
   17bd8:	str	r3, [fp, #-8]
   17bdc:	ldr	r3, [fp, #-8]
   17be0:	mov	r0, r3
   17be4:	sub	sp, fp, #4
   17be8:	ldr	fp, [sp]
   17bec:	add	sp, sp, #4
   17bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   17bf4:	str	fp, [sp, #-8]!
   17bf8:	str	lr, [sp, #4]
   17bfc:	add	fp, sp, #4
   17c00:	sub	sp, sp, #16
   17c04:	str	r0, [fp, #-16]
   17c08:	ldr	r3, [fp, #-16]
   17c0c:	cmp	r3, #0
   17c10:	bne	17c1c <__assert_fail@plt+0x6b58>
   17c14:	mov	r3, #1
   17c18:	str	r3, [fp, #-16]
   17c1c:	mov	r2, #0
   17c20:	ldr	r3, [fp, #-16]
   17c24:	cmp	r3, #0
   17c28:	bge	17c30 <__assert_fail@plt+0x6b6c>
   17c2c:	mov	r2, #1
   17c30:	mov	r3, r2
   17c34:	and	r3, r3, #1
   17c38:	uxtb	r3, r3
   17c3c:	cmp	r3, #0
   17c40:	beq	17c5c <__assert_fail@plt+0x6b98>
   17c44:	bl	10fd4 <__errno_location@plt>
   17c48:	mov	r2, r0
   17c4c:	mov	r3, #12
   17c50:	str	r3, [r2]
   17c54:	mov	r3, #0
   17c58:	b	17c70 <__assert_fail@plt+0x6bac>
   17c5c:	ldr	r0, [fp, #-16]
   17c60:	bl	10f50 <malloc@plt>
   17c64:	mov	r3, r0
   17c68:	str	r3, [fp, #-8]
   17c6c:	ldr	r3, [fp, #-8]
   17c70:	mov	r0, r3
   17c74:	sub	sp, fp, #4
   17c78:	ldr	fp, [sp]
   17c7c:	add	sp, sp, #4
   17c80:	pop	{pc}		; (ldr pc, [sp], #4)
   17c84:	str	fp, [sp, #-8]!
   17c88:	str	lr, [sp, #4]
   17c8c:	add	fp, sp, #4
   17c90:	sub	sp, sp, #16
   17c94:	str	r0, [fp, #-16]
   17c98:	str	r1, [fp, #-20]	; 0xffffffec
   17c9c:	ldr	r3, [fp, #-16]
   17ca0:	cmp	r3, #0
   17ca4:	bne	17cb8 <__assert_fail@plt+0x6bf4>
   17ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   17cac:	bl	17bf4 <__assert_fail@plt+0x6b30>
   17cb0:	mov	r3, r0
   17cb4:	b	17d28 <__assert_fail@plt+0x6c64>
   17cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   17cbc:	cmp	r3, #0
   17cc0:	bne	17cd4 <__assert_fail@plt+0x6c10>
   17cc4:	ldr	r0, [fp, #-16]
   17cc8:	bl	13824 <__assert_fail@plt+0x2760>
   17ccc:	mov	r3, #0
   17cd0:	b	17d28 <__assert_fail@plt+0x6c64>
   17cd4:	mov	r2, #0
   17cd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   17cdc:	cmp	r3, #0
   17ce0:	bge	17ce8 <__assert_fail@plt+0x6c24>
   17ce4:	mov	r2, #1
   17ce8:	mov	r3, r2
   17cec:	and	r3, r3, #1
   17cf0:	uxtb	r3, r3
   17cf4:	cmp	r3, #0
   17cf8:	beq	17d14 <__assert_fail@plt+0x6c50>
   17cfc:	bl	10fd4 <__errno_location@plt>
   17d00:	mov	r2, r0
   17d04:	mov	r3, #12
   17d08:	str	r3, [r2]
   17d0c:	mov	r3, #0
   17d10:	b	17d28 <__assert_fail@plt+0x6c64>
   17d14:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d18:	ldr	r0, [fp, #-16]
   17d1c:	bl	10ecc <realloc@plt>
   17d20:	str	r0, [fp, #-8]
   17d24:	ldr	r3, [fp, #-8]
   17d28:	mov	r0, r3
   17d2c:	sub	sp, fp, #4
   17d30:	ldr	fp, [sp]
   17d34:	add	sp, sp, #4
   17d38:	pop	{pc}		; (ldr pc, [sp], #4)
   17d3c:	strd	r4, [sp, #-16]!
   17d40:	str	fp, [sp, #8]
   17d44:	str	lr, [sp, #12]
   17d48:	add	fp, sp, #12
   17d4c:	sub	sp, sp, #16
   17d50:	str	r0, [fp, #-24]	; 0xffffffe8
   17d54:	str	r1, [fp, #-28]	; 0xffffffe4
   17d58:	ldr	r5, [fp, #-24]	; 0xffffffe8
   17d5c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   17d60:	cmp	r5, r4
   17d64:	bne	17d70 <__assert_fail@plt+0x6cac>
   17d68:	mov	r3, #0
   17d6c:	b	17dd0 <__assert_fail@plt+0x6d0c>
   17d70:	ldrb	r3, [r5]
   17d74:	mov	r0, r3
   17d78:	bl	18a68 <__assert_fail@plt+0x79a4>
   17d7c:	mov	r3, r0
   17d80:	strb	r3, [fp, #-13]
   17d84:	ldrb	r3, [r4]
   17d88:	mov	r0, r3
   17d8c:	bl	18a68 <__assert_fail@plt+0x79a4>
   17d90:	mov	r3, r0
   17d94:	strb	r3, [fp, #-14]
   17d98:	ldrb	r3, [fp, #-13]
   17d9c:	cmp	r3, #0
   17da0:	beq	17dc0 <__assert_fail@plt+0x6cfc>
   17da4:	add	r5, r5, #1
   17da8:	add	r4, r4, #1
   17dac:	ldrb	r2, [fp, #-13]
   17db0:	ldrb	r3, [fp, #-14]
   17db4:	cmp	r2, r3
   17db8:	beq	17d70 <__assert_fail@plt+0x6cac>
   17dbc:	b	17dc4 <__assert_fail@plt+0x6d00>
   17dc0:	nop	{0}
   17dc4:	ldrb	r2, [fp, #-13]
   17dc8:	ldrb	r3, [fp, #-14]
   17dcc:	sub	r3, r2, r3
   17dd0:	mov	r0, r3
   17dd4:	sub	sp, fp, #12
   17dd8:	ldrd	r4, [sp]
   17ddc:	ldr	fp, [sp, #8]
   17de0:	add	sp, sp, #12
   17de4:	pop	{pc}		; (ldr pc, [sp], #4)
   17de8:	str	fp, [sp, #-8]!
   17dec:	str	lr, [sp, #4]
   17df0:	add	fp, sp, #4
   17df4:	sub	sp, sp, #16
   17df8:	str	r0, [fp, #-16]
   17dfc:	ldr	r0, [fp, #-16]
   17e00:	bl	10f20 <__fpending@plt>
   17e04:	mov	r3, r0
   17e08:	cmp	r3, #0
   17e0c:	movne	r3, #1
   17e10:	moveq	r3, #0
   17e14:	strb	r3, [fp, #-5]
   17e18:	ldr	r0, [fp, #-16]
   17e1c:	bl	10f2c <ferror_unlocked@plt>
   17e20:	mov	r3, r0
   17e24:	cmp	r3, #0
   17e28:	movne	r3, #1
   17e2c:	moveq	r3, #0
   17e30:	strb	r3, [fp, #-6]
   17e34:	ldr	r0, [fp, #-16]
   17e38:	bl	13660 <__assert_fail@plt+0x259c>
   17e3c:	mov	r3, r0
   17e40:	cmp	r3, #0
   17e44:	movne	r3, #1
   17e48:	moveq	r3, #0
   17e4c:	strb	r3, [fp, #-7]
   17e50:	ldrb	r3, [fp, #-6]
   17e54:	cmp	r3, #0
   17e58:	bne	17e88 <__assert_fail@plt+0x6dc4>
   17e5c:	ldrb	r3, [fp, #-7]
   17e60:	cmp	r3, #0
   17e64:	beq	17eb4 <__assert_fail@plt+0x6df0>
   17e68:	ldrb	r3, [fp, #-5]
   17e6c:	cmp	r3, #0
   17e70:	bne	17e88 <__assert_fail@plt+0x6dc4>
   17e74:	bl	10fd4 <__errno_location@plt>
   17e78:	mov	r3, r0
   17e7c:	ldr	r3, [r3]
   17e80:	cmp	r3, #9
   17e84:	beq	17eb4 <__assert_fail@plt+0x6df0>
   17e88:	ldrb	r3, [fp, #-7]
   17e8c:	eor	r3, r3, #1
   17e90:	uxtb	r3, r3
   17e94:	cmp	r3, #0
   17e98:	beq	17eac <__assert_fail@plt+0x6de8>
   17e9c:	bl	10fd4 <__errno_location@plt>
   17ea0:	mov	r2, r0
   17ea4:	mov	r3, #0
   17ea8:	str	r3, [r2]
   17eac:	mvn	r3, #0
   17eb0:	b	17eb8 <__assert_fail@plt+0x6df4>
   17eb4:	mov	r3, #0
   17eb8:	mov	r0, r3
   17ebc:	sub	sp, fp, #4
   17ec0:	ldr	fp, [sp]
   17ec4:	add	sp, sp, #4
   17ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   17ecc:	push	{fp}		; (str fp, [sp, #-4]!)
   17ed0:	add	fp, sp, #0
   17ed4:	sub	sp, sp, #20
   17ed8:	str	r0, [fp, #-16]
   17edc:	str	r1, [fp, #-20]	; 0xffffffec
   17ee0:	ldr	r3, [fp, #-16]
   17ee4:	ldr	r2, [r3, #20]
   17ee8:	ldr	r3, [fp, #-16]
   17eec:	ldr	r3, [r3, #16]
   17ef0:	cmp	r2, r3
   17ef4:	bls	17f00 <__assert_fail@plt+0x6e3c>
   17ef8:	mov	r3, #0
   17efc:	b	17f40 <__assert_fail@plt+0x6e7c>
   17f00:	ldr	r3, [fp, #-16]
   17f04:	ldr	r2, [r3, #8]
   17f08:	ldr	r3, [fp, #-16]
   17f0c:	ldr	r3, [r3, #4]
   17f10:	sub	r3, r2, r3
   17f14:	str	r3, [fp, #-8]
   17f18:	ldr	r3, [fp, #-8]
   17f1c:	cmp	r3, #0
   17f20:	bne	17f2c <__assert_fail@plt+0x6e68>
   17f24:	mov	r3, #0
   17f28:	b	17f40 <__assert_fail@plt+0x6e7c>
   17f2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f30:	ldr	r2, [fp, #-8]
   17f34:	str	r2, [r3]
   17f38:	ldr	r3, [fp, #-16]
   17f3c:	ldr	r3, [r3, #4]
   17f40:	mov	r0, r3
   17f44:	add	sp, fp, #0
   17f48:	pop	{fp}		; (ldr fp, [sp], #4)
   17f4c:	bx	lr
   17f50:	push	{fp}		; (str fp, [sp, #-4]!)
   17f54:	add	fp, sp, #0
   17f58:	sub	sp, sp, #12
   17f5c:	str	r0, [fp, #-8]
   17f60:	str	r1, [fp, #-12]
   17f64:	ldr	r3, [fp, #-8]
   17f68:	ldr	r2, [r3, #4]
   17f6c:	ldr	r3, [fp, #-12]
   17f70:	add	r2, r2, r3
   17f74:	ldr	r3, [fp, #-8]
   17f78:	str	r2, [r3, #4]
   17f7c:	nop	{0}
   17f80:	add	sp, fp, #0
   17f84:	pop	{fp}		; (ldr fp, [sp], #4)
   17f88:	bx	lr
   17f8c:	str	fp, [sp, #-8]!
   17f90:	str	lr, [sp, #4]
   17f94:	add	fp, sp, #4
   17f98:	sub	sp, sp, #4096	; 0x1000
   17f9c:	sub	sp, sp, #40	; 0x28
   17fa0:	sub	r3, fp, #4096	; 0x1000
   17fa4:	sub	r3, r3, #4
   17fa8:	str	r0, [r3, #-28]	; 0xffffffe4
   17fac:	sub	r3, fp, #4096	; 0x1000
   17fb0:	sub	r3, r3, #4
   17fb4:	str	r1, [r3, #-32]	; 0xffffffe0
   17fb8:	sub	r3, fp, #4096	; 0x1000
   17fbc:	sub	r3, r3, #4
   17fc0:	ldr	r3, [r3, #-32]	; 0xffffffe0
   17fc4:	cmp	r3, #0
   17fc8:	bne	17fd4 <__assert_fail@plt+0x6f10>
   17fcc:	mov	r3, #0
   17fd0:	b	1826c <__assert_fail@plt+0x71a8>
   17fd4:	sub	r3, fp, #4096	; 0x1000
   17fd8:	sub	r3, r3, #4
   17fdc:	ldr	r0, [r3, #-28]	; 0xffffffe4
   17fe0:	bl	18ae8 <__assert_fail@plt+0x7a24>
   17fe4:	str	r0, [fp, #-8]
   17fe8:	b	18110 <__assert_fail@plt+0x704c>
   17fec:	sub	r2, fp, #24
   17ff0:	sub	r3, fp, #4096	; 0x1000
   17ff4:	sub	r3, r3, #4
   17ff8:	mov	r1, r2
   17ffc:	ldr	r0, [r3, #-28]	; 0xffffffe4
   18000:	bl	17ecc <__assert_fail@plt+0x6e08>
   18004:	mov	r3, r0
   18008:	cmp	r3, #0
   1800c:	beq	180ac <__assert_fail@plt+0x6fe8>
   18010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18014:	cmp	r3, #0
   18018:	beq	180ac <__assert_fail@plt+0x6fe8>
   1801c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18020:	sub	r2, fp, #4096	; 0x1000
   18024:	sub	r2, r2, #4
   18028:	ldr	r2, [r2, #-32]	; 0xffffffe0
   1802c:	cmp	r2, r3
   18030:	movcc	r3, r2
   18034:	movcs	r3, r3
   18038:	str	r3, [fp, #-12]
   1803c:	sub	r3, fp, #4096	; 0x1000
   18040:	sub	r3, r3, #4
   18044:	ldr	r1, [fp, #-12]
   18048:	ldr	r0, [r3, #-28]	; 0xffffffe4
   1804c:	bl	17f50 <__assert_fail@plt+0x6e8c>
   18050:	sub	r3, fp, #4096	; 0x1000
   18054:	sub	r3, r3, #4
   18058:	mov	r1, r3
   1805c:	sub	r3, fp, #4096	; 0x1000
   18060:	sub	r3, r3, #4
   18064:	ldr	r2, [r3, #-32]	; 0xffffffe0
   18068:	ldr	r3, [fp, #-12]
   1806c:	sub	r3, r2, r3
   18070:	str	r3, [r1, #-32]	; 0xffffffe0
   18074:	sub	r3, fp, #4096	; 0x1000
   18078:	sub	r3, r3, #4
   1807c:	ldr	r3, [r3, #-32]	; 0xffffffe0
   18080:	cmp	r3, #0
   18084:	bne	18090 <__assert_fail@plt+0x6fcc>
   18088:	mov	r3, #0
   1808c:	b	1826c <__assert_fail@plt+0x71a8>
   18090:	ldr	r2, [fp, #-8]
   18094:	ldr	r3, [fp, #-12]
   18098:	sub	r3, r2, r3
   1809c:	str	r3, [fp, #-8]
   180a0:	ldr	r3, [fp, #-8]
   180a4:	cmp	r3, #0
   180a8:	beq	18120 <__assert_fail@plt+0x705c>
   180ac:	sub	r3, fp, #4096	; 0x1000
   180b0:	sub	r3, r3, #4
   180b4:	ldr	r0, [r3, #-28]	; 0xffffffe4
   180b8:	bl	10ff8 <fgetc@plt>
   180bc:	mov	r3, r0
   180c0:	cmn	r3, #1
   180c4:	beq	18238 <__assert_fail@plt+0x7174>
   180c8:	sub	r3, fp, #4096	; 0x1000
   180cc:	sub	r3, r3, #4
   180d0:	mov	r2, r3
   180d4:	sub	r3, fp, #4096	; 0x1000
   180d8:	sub	r3, r3, #4
   180dc:	ldr	r3, [r3, #-32]	; 0xffffffe0
   180e0:	sub	r3, r3, #1
   180e4:	str	r3, [r2, #-32]	; 0xffffffe0
   180e8:	sub	r3, fp, #4096	; 0x1000
   180ec:	sub	r3, r3, #4
   180f0:	ldr	r3, [r3, #-32]	; 0xffffffe0
   180f4:	cmp	r3, #0
   180f8:	bne	18104 <__assert_fail@plt+0x7040>
   180fc:	mov	r3, #0
   18100:	b	1826c <__assert_fail@plt+0x71a8>
   18104:	ldr	r3, [fp, #-8]
   18108:	sub	r3, r3, #1
   1810c:	str	r3, [fp, #-8]
   18110:	ldr	r3, [fp, #-8]
   18114:	cmp	r3, #0
   18118:	bne	17fec <__assert_fail@plt+0x6f28>
   1811c:	b	18124 <__assert_fail@plt+0x7060>
   18120:	nop	{0}
   18124:	sub	r3, fp, #4096	; 0x1000
   18128:	sub	r3, r3, #4
   1812c:	ldr	r0, [r3, #-28]	; 0xffffffe4
   18130:	bl	11004 <fileno@plt>
   18134:	str	r0, [fp, #-16]
   18138:	ldr	r3, [fp, #-16]
   1813c:	cmp	r3, #0
   18140:	blt	181a8 <__assert_fail@plt+0x70e4>
   18144:	mov	r3, #1
   18148:	str	r3, [sp]
   1814c:	mov	r2, #0
   18150:	mov	r3, #0
   18154:	ldr	r0, [fp, #-16]
   18158:	bl	10efc <lseek64@plt>
   1815c:	mov	r2, r0
   18160:	mov	r3, r1
   18164:	cmp	r2, #0
   18168:	sbcs	r3, r3, #0
   1816c:	blt	181a8 <__assert_fail@plt+0x70e4>
   18170:	sub	r3, fp, #4096	; 0x1000
   18174:	sub	r3, r3, #4
   18178:	ldr	r3, [r3, #-32]	; 0xffffffe0
   1817c:	mov	r2, r3
   18180:	mov	r3, #0
   18184:	sub	r1, fp, #4096	; 0x1000
   18188:	sub	r1, r1, #4
   1818c:	mov	r0, r1
   18190:	mov	r1, #1
   18194:	str	r1, [sp]
   18198:	ldr	r0, [r0, #-28]	; 0xffffffe4
   1819c:	bl	138c8 <__assert_fail@plt+0x2804>
   181a0:	mov	r3, r0
   181a4:	b	1826c <__assert_fail@plt+0x71a8>
   181a8:	sub	r3, fp, #4096	; 0x1000
   181ac:	sub	r3, r3, #4
   181b0:	ldr	r3, [r3, #-32]	; 0xffffffe0
   181b4:	cmp	r3, #4096	; 0x1000
   181b8:	movcc	r3, r3
   181bc:	movcs	r3, #4096	; 0x1000
   181c0:	str	r3, [fp, #-20]	; 0xffffffec
   181c4:	sub	r3, fp, #4096	; 0x1000
   181c8:	sub	r3, r3, #4
   181cc:	sub	r0, fp, #4096	; 0x1000
   181d0:	sub	r0, r0, #4
   181d4:	sub	r0, r0, #20
   181d8:	ldr	r3, [r3, #-28]	; 0xffffffe4
   181dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   181e0:	mov	r1, #1
   181e4:	bl	10f14 <fread@plt>
   181e8:	mov	r2, r0
   181ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   181f0:	cmp	r3, r2
   181f4:	bhi	18240 <__assert_fail@plt+0x717c>
   181f8:	sub	r3, fp, #4096	; 0x1000
   181fc:	sub	r3, r3, #4
   18200:	mov	r1, r3
   18204:	sub	r3, fp, #4096	; 0x1000
   18208:	sub	r3, r3, #4
   1820c:	ldr	r2, [r3, #-32]	; 0xffffffe0
   18210:	ldr	r3, [fp, #-20]	; 0xffffffec
   18214:	sub	r3, r2, r3
   18218:	str	r3, [r1, #-32]	; 0xffffffe0
   1821c:	sub	r3, fp, #4096	; 0x1000
   18220:	sub	r3, r3, #4
   18224:	ldr	r3, [r3, #-32]	; 0xffffffe0
   18228:	cmp	r3, #0
   1822c:	bne	181a8 <__assert_fail@plt+0x70e4>
   18230:	mov	r3, #0
   18234:	b	1826c <__assert_fail@plt+0x71a8>
   18238:	nop	{0}
   1823c:	b	18244 <__assert_fail@plt+0x7180>
   18240:	nop	{0}
   18244:	sub	r3, fp, #4096	; 0x1000
   18248:	sub	r3, r3, #4
   1824c:	ldr	r0, [r3, #-28]	; 0xffffffe4
   18250:	bl	10e6c <ferror@plt>
   18254:	mov	r3, r0
   18258:	cmp	r3, #0
   1825c:	beq	18268 <__assert_fail@plt+0x71a4>
   18260:	mvn	r3, #0
   18264:	b	1826c <__assert_fail@plt+0x71a8>
   18268:	mov	r3, #0
   1826c:	mov	r0, r3
   18270:	sub	sp, fp, #4
   18274:	ldr	fp, [sp]
   18278:	add	sp, sp, #4
   1827c:	pop	{pc}		; (ldr pc, [sp], #4)
   18280:	str	fp, [sp, #-8]!
   18284:	str	lr, [sp, #4]
   18288:	add	fp, sp, #4
   1828c:	bl	10fd4 <__errno_location@plt>
   18290:	mov	r2, r0
   18294:	mov	r3, #12
   18298:	str	r3, [r2]
   1829c:	mov	r3, #0
   182a0:	mov	r0, r3
   182a4:	sub	sp, fp, #4
   182a8:	ldr	fp, [sp]
   182ac:	add	sp, sp, #4
   182b0:	pop	{pc}		; (ldr pc, [sp], #4)
   182b4:	str	fp, [sp, #-8]!
   182b8:	str	lr, [sp, #4]
   182bc:	add	fp, sp, #4
   182c0:	sub	sp, sp, #8
   182c4:	str	r0, [fp, #-8]
   182c8:	ldr	r3, [fp, #-8]
   182cc:	mov	r0, r3
   182d0:	bl	17bf4 <__assert_fail@plt+0x6b30>
   182d4:	mov	r3, r0
   182d8:	mov	r0, r3
   182dc:	sub	sp, fp, #4
   182e0:	ldr	fp, [sp]
   182e4:	add	sp, sp, #4
   182e8:	pop	{pc}		; (ldr pc, [sp], #4)
   182ec:	str	fp, [sp, #-8]!
   182f0:	str	lr, [sp, #4]
   182f4:	add	fp, sp, #4
   182f8:	sub	sp, sp, #8
   182fc:	str	r0, [fp, #-8]
   18300:	str	r1, [fp, #-12]
   18304:	ldr	r3, [fp, #-12]
   18308:	cmp	r3, #0
   1830c:	moveq	r3, #1
   18310:	movne	r3, #0
   18314:	uxtb	r3, r3
   18318:	mov	r2, r3
   1831c:	ldr	r3, [fp, #-12]
   18320:	orr	r3, r2, r3
   18324:	mov	r1, r3
   18328:	ldr	r0, [fp, #-8]
   1832c:	bl	17c84 <__assert_fail@plt+0x6bc0>
   18330:	mov	r3, r0
   18334:	mov	r0, r3
   18338:	sub	sp, fp, #4
   1833c:	ldr	fp, [sp]
   18340:	add	sp, sp, #4
   18344:	pop	{pc}		; (ldr pc, [sp], #4)
   18348:	str	fp, [sp, #-8]!
   1834c:	str	lr, [sp, #4]
   18350:	add	fp, sp, #4
   18354:	sub	sp, sp, #8
   18358:	str	r0, [fp, #-8]
   1835c:	str	r1, [fp, #-12]
   18360:	ldr	r3, [fp, #-8]
   18364:	ldr	r2, [fp, #-12]
   18368:	mov	r1, r2
   1836c:	mov	r0, r3
   18370:	bl	17b24 <__assert_fail@plt+0x6a60>
   18374:	mov	r3, r0
   18378:	mov	r0, r3
   1837c:	sub	sp, fp, #4
   18380:	ldr	fp, [sp]
   18384:	add	sp, sp, #4
   18388:	pop	{pc}		; (ldr pc, [sp], #4)
   1838c:	str	fp, [sp, #-8]!
   18390:	str	lr, [sp, #4]
   18394:	add	fp, sp, #4
   18398:	sub	sp, sp, #16
   1839c:	str	r0, [fp, #-8]
   183a0:	str	r1, [fp, #-12]
   183a4:	str	r2, [fp, #-16]
   183a8:	ldr	r3, [fp, #-12]
   183ac:	cmp	r3, #0
   183b0:	beq	183c0 <__assert_fail@plt+0x72fc>
   183b4:	ldr	r3, [fp, #-16]
   183b8:	cmp	r3, #0
   183bc:	bne	183d0 <__assert_fail@plt+0x730c>
   183c0:	mov	r3, #1
   183c4:	str	r3, [fp, #-16]
   183c8:	ldr	r3, [fp, #-16]
   183cc:	str	r3, [fp, #-12]
   183d0:	ldr	r3, [fp, #-12]
   183d4:	ldr	r2, [fp, #-16]
   183d8:	mov	r1, r3
   183dc:	ldr	r0, [fp, #-8]
   183e0:	bl	1851c <__assert_fail@plt+0x7458>
   183e4:	mov	r3, r0
   183e8:	mov	r0, r3
   183ec:	sub	sp, fp, #4
   183f0:	ldr	fp, [sp]
   183f4:	add	sp, sp, #4
   183f8:	pop	{pc}		; (ldr pc, [sp], #4)
   183fc:	str	fp, [sp, #-8]!
   18400:	str	lr, [sp, #4]
   18404:	add	fp, sp, #4
   18408:	sub	sp, sp, #8
   1840c:	mov	r0, #14
   18410:	bl	1104c <nl_langinfo@plt>
   18414:	str	r0, [fp, #-8]
   18418:	ldr	r3, [fp, #-8]
   1841c:	cmp	r3, #0
   18420:	bne	18430 <__assert_fail@plt+0x736c>
   18424:	movw	r3, #40824	; 0x9f78
   18428:	movt	r3, #1
   1842c:	str	r3, [fp, #-8]
   18430:	ldr	r3, [fp, #-8]
   18434:	ldrb	r3, [r3]
   18438:	cmp	r3, #0
   1843c:	bne	1844c <__assert_fail@plt+0x7388>
   18440:	movw	r3, #40828	; 0x9f7c
   18444:	movt	r3, #1
   18448:	str	r3, [fp, #-8]
   1844c:	ldr	r3, [fp, #-8]
   18450:	mov	r0, r3
   18454:	sub	sp, fp, #4
   18458:	ldr	fp, [sp]
   1845c:	add	sp, sp, #4
   18460:	pop	{pc}		; (ldr pc, [sp], #4)
   18464:	str	fp, [sp, #-8]!
   18468:	str	lr, [sp, #4]
   1846c:	add	fp, sp, #4
   18470:	sub	sp, sp, #32
   18474:	str	r0, [fp, #-24]	; 0xffffffe8
   18478:	str	r1, [fp, #-28]	; 0xffffffe4
   1847c:	str	r2, [fp, #-32]	; 0xffffffe0
   18480:	str	r3, [fp, #-36]	; 0xffffffdc
   18484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18488:	cmp	r3, #0
   1848c:	bne	18498 <__assert_fail@plt+0x73d4>
   18490:	sub	r3, fp, #16
   18494:	str	r3, [fp, #-24]	; 0xffffffe8
   18498:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1849c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   184a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   184a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184a8:	bl	10f38 <mbrtowc@plt>
   184ac:	str	r0, [fp, #-8]
   184b0:	ldr	r3, [fp, #-8]
   184b4:	cmn	r3, #3
   184b8:	bls	18504 <__assert_fail@plt+0x7440>
   184bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   184c0:	cmp	r3, #0
   184c4:	beq	18504 <__assert_fail@plt+0x7440>
   184c8:	mov	r0, #0
   184cc:	bl	18b70 <__assert_fail@plt+0x7aac>
   184d0:	mov	r3, r0
   184d4:	eor	r3, r3, #1
   184d8:	uxtb	r3, r3
   184dc:	cmp	r3, #0
   184e0:	beq	18504 <__assert_fail@plt+0x7440>
   184e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   184e8:	ldrb	r3, [r3]
   184ec:	strb	r3, [fp, #-9]
   184f0:	ldrb	r2, [fp, #-9]
   184f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   184f8:	str	r2, [r3]
   184fc:	mov	r3, #1
   18500:	b	18508 <__assert_fail@plt+0x7444>
   18504:	ldr	r3, [fp, #-8]
   18508:	mov	r0, r3
   1850c:	sub	sp, fp, #4
   18510:	ldr	fp, [sp]
   18514:	add	sp, sp, #4
   18518:	pop	{pc}		; (ldr pc, [sp], #4)
   1851c:	str	fp, [sp, #-8]!
   18520:	str	lr, [sp, #4]
   18524:	add	fp, sp, #4
   18528:	sub	sp, sp, #24
   1852c:	str	r0, [fp, #-16]
   18530:	str	r1, [fp, #-20]	; 0xffffffec
   18534:	str	r2, [fp, #-24]	; 0xffffffe8
   18538:	mov	ip, #0
   1853c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18544:	umull	r0, r1, r2, r3
   18548:	mov	r2, #0
   1854c:	mov	r3, #0
   18550:	mov	r2, r1
   18554:	mov	r3, #0
   18558:	cmp	r2, #0
   1855c:	beq	18564 <__assert_fail@plt+0x74a0>
   18560:	mov	ip, #1
   18564:	mov	r3, r0
   18568:	str	r3, [fp, #-8]
   1856c:	mov	r3, ip
   18570:	and	r3, r3, #1
   18574:	uxtb	r3, r3
   18578:	cmp	r3, #0
   1857c:	beq	18598 <__assert_fail@plt+0x74d4>
   18580:	bl	10fd4 <__errno_location@plt>
   18584:	mov	r2, r0
   18588:	mov	r3, #12
   1858c:	str	r3, [r2]
   18590:	mov	r3, #0
   18594:	b	185ac <__assert_fail@plt+0x74e8>
   18598:	ldr	r3, [fp, #-8]
   1859c:	mov	r1, r3
   185a0:	ldr	r0, [fp, #-16]
   185a4:	bl	17c84 <__assert_fail@plt+0x6bc0>
   185a8:	mov	r3, r0
   185ac:	mov	r0, r3
   185b0:	sub	sp, fp, #4
   185b4:	ldr	fp, [sp]
   185b8:	add	sp, sp, #4
   185bc:	pop	{pc}		; (ldr pc, [sp], #4)
   185c0:	push	{fp}		; (str fp, [sp, #-4]!)
   185c4:	add	fp, sp, #0
   185c8:	sub	sp, sp, #12
   185cc:	str	r0, [fp, #-8]
   185d0:	ldr	r3, [fp, #-8]
   185d4:	cmp	r3, #90	; 0x5a
   185d8:	bgt	185fc <__assert_fail@plt+0x7538>
   185dc:	ldr	r3, [fp, #-8]
   185e0:	cmp	r3, #65	; 0x41
   185e4:	bge	1860c <__assert_fail@plt+0x7548>
   185e8:	ldr	r3, [fp, #-8]
   185ec:	sub	r3, r3, #48	; 0x30
   185f0:	cmp	r3, #9
   185f4:	bhi	18614 <__assert_fail@plt+0x7550>
   185f8:	b	1860c <__assert_fail@plt+0x7548>
   185fc:	ldr	r3, [fp, #-8]
   18600:	sub	r3, r3, #97	; 0x61
   18604:	cmp	r3, #25
   18608:	bhi	18614 <__assert_fail@plt+0x7550>
   1860c:	mov	r3, #1
   18610:	b	18618 <__assert_fail@plt+0x7554>
   18614:	mov	r3, #0
   18618:	mov	r0, r3
   1861c:	add	sp, fp, #0
   18620:	pop	{fp}		; (ldr fp, [sp], #4)
   18624:	bx	lr
   18628:	push	{fp}		; (str fp, [sp, #-4]!)
   1862c:	add	fp, sp, #0
   18630:	sub	sp, sp, #12
   18634:	str	r0, [fp, #-8]
   18638:	ldr	r3, [fp, #-8]
   1863c:	cmp	r3, #65	; 0x41
   18640:	blt	18668 <__assert_fail@plt+0x75a4>
   18644:	ldr	r3, [fp, #-8]
   18648:	cmp	r3, #90	; 0x5a
   1864c:	ble	18660 <__assert_fail@plt+0x759c>
   18650:	ldr	r3, [fp, #-8]
   18654:	sub	r3, r3, #97	; 0x61
   18658:	cmp	r3, #25
   1865c:	bhi	18668 <__assert_fail@plt+0x75a4>
   18660:	mov	r3, #1
   18664:	b	1866c <__assert_fail@plt+0x75a8>
   18668:	mov	r3, #0
   1866c:	mov	r0, r3
   18670:	add	sp, fp, #0
   18674:	pop	{fp}		; (ldr fp, [sp], #4)
   18678:	bx	lr
   1867c:	push	{fp}		; (str fp, [sp, #-4]!)
   18680:	add	fp, sp, #0
   18684:	sub	sp, sp, #12
   18688:	str	r0, [fp, #-8]
   1868c:	ldr	r3, [fp, #-8]
   18690:	cmp	r3, #127	; 0x7f
   18694:	bhi	186a0 <__assert_fail@plt+0x75dc>
   18698:	mov	r3, #1
   1869c:	b	186a4 <__assert_fail@plt+0x75e0>
   186a0:	mov	r3, #0
   186a4:	mov	r0, r3
   186a8:	add	sp, fp, #0
   186ac:	pop	{fp}		; (ldr fp, [sp], #4)
   186b0:	bx	lr
   186b4:	push	{fp}		; (str fp, [sp, #-4]!)
   186b8:	add	fp, sp, #0
   186bc:	sub	sp, sp, #12
   186c0:	str	r0, [fp, #-8]
   186c4:	ldr	r3, [fp, #-8]
   186c8:	cmp	r3, #32
   186cc:	beq	186dc <__assert_fail@plt+0x7618>
   186d0:	ldr	r3, [fp, #-8]
   186d4:	cmp	r3, #9
   186d8:	bne	186e4 <__assert_fail@plt+0x7620>
   186dc:	mov	r3, #1
   186e0:	b	186e8 <__assert_fail@plt+0x7624>
   186e4:	mov	r3, #0
   186e8:	and	r3, r3, #1
   186ec:	uxtb	r3, r3
   186f0:	mov	r0, r3
   186f4:	add	sp, fp, #0
   186f8:	pop	{fp}		; (ldr fp, [sp], #4)
   186fc:	bx	lr
   18700:	push	{fp}		; (str fp, [sp, #-4]!)
   18704:	add	fp, sp, #0
   18708:	sub	sp, sp, #12
   1870c:	str	r0, [fp, #-8]
   18710:	ldr	r3, [fp, #-8]
   18714:	cmp	r3, #0
   18718:	blt	1873c <__assert_fail@plt+0x7678>
   1871c:	ldr	r3, [fp, #-8]
   18720:	cmp	r3, #31
   18724:	ble	18734 <__assert_fail@plt+0x7670>
   18728:	ldr	r3, [fp, #-8]
   1872c:	cmp	r3, #127	; 0x7f
   18730:	bne	1873c <__assert_fail@plt+0x7678>
   18734:	mov	r3, #1
   18738:	b	18740 <__assert_fail@plt+0x767c>
   1873c:	mov	r3, #0
   18740:	mov	r0, r3
   18744:	add	sp, fp, #0
   18748:	pop	{fp}		; (ldr fp, [sp], #4)
   1874c:	bx	lr
   18750:	push	{fp}		; (str fp, [sp, #-4]!)
   18754:	add	fp, sp, #0
   18758:	sub	sp, sp, #12
   1875c:	str	r0, [fp, #-8]
   18760:	ldr	r3, [fp, #-8]
   18764:	sub	r3, r3, #48	; 0x30
   18768:	cmp	r3, #9
   1876c:	bhi	18778 <__assert_fail@plt+0x76b4>
   18770:	mov	r3, #1
   18774:	b	1877c <__assert_fail@plt+0x76b8>
   18778:	mov	r3, #0
   1877c:	mov	r0, r3
   18780:	add	sp, fp, #0
   18784:	pop	{fp}		; (ldr fp, [sp], #4)
   18788:	bx	lr
   1878c:	push	{fp}		; (str fp, [sp, #-4]!)
   18790:	add	fp, sp, #0
   18794:	sub	sp, sp, #12
   18798:	str	r0, [fp, #-8]
   1879c:	ldr	r3, [fp, #-8]
   187a0:	sub	r3, r3, #33	; 0x21
   187a4:	cmp	r3, #93	; 0x5d
   187a8:	bhi	187b4 <__assert_fail@plt+0x76f0>
   187ac:	mov	r3, #1
   187b0:	b	187b8 <__assert_fail@plt+0x76f4>
   187b4:	mov	r3, #0
   187b8:	mov	r0, r3
   187bc:	add	sp, fp, #0
   187c0:	pop	{fp}		; (ldr fp, [sp], #4)
   187c4:	bx	lr
   187c8:	push	{fp}		; (str fp, [sp, #-4]!)
   187cc:	add	fp, sp, #0
   187d0:	sub	sp, sp, #12
   187d4:	str	r0, [fp, #-8]
   187d8:	ldr	r3, [fp, #-8]
   187dc:	sub	r3, r3, #97	; 0x61
   187e0:	cmp	r3, #25
   187e4:	bhi	187f0 <__assert_fail@plt+0x772c>
   187e8:	mov	r3, #1
   187ec:	b	187f4 <__assert_fail@plt+0x7730>
   187f0:	mov	r3, #0
   187f4:	mov	r0, r3
   187f8:	add	sp, fp, #0
   187fc:	pop	{fp}		; (ldr fp, [sp], #4)
   18800:	bx	lr
   18804:	push	{fp}		; (str fp, [sp, #-4]!)
   18808:	add	fp, sp, #0
   1880c:	sub	sp, sp, #12
   18810:	str	r0, [fp, #-8]
   18814:	ldr	r3, [fp, #-8]
   18818:	sub	r3, r3, #32
   1881c:	cmp	r3, #94	; 0x5e
   18820:	bhi	1882c <__assert_fail@plt+0x7768>
   18824:	mov	r3, #1
   18828:	b	18830 <__assert_fail@plt+0x776c>
   1882c:	mov	r3, #0
   18830:	mov	r0, r3
   18834:	add	sp, fp, #0
   18838:	pop	{fp}		; (ldr fp, [sp], #4)
   1883c:	bx	lr
   18840:	push	{fp}		; (str fp, [sp, #-4]!)
   18844:	add	fp, sp, #0
   18848:	sub	sp, sp, #12
   1884c:	str	r0, [fp, #-8]
   18850:	ldr	r3, [fp, #-8]
   18854:	cmp	r3, #64	; 0x40
   18858:	bgt	1887c <__assert_fail@plt+0x77b8>
   1885c:	ldr	r3, [fp, #-8]
   18860:	cmp	r3, #58	; 0x3a
   18864:	bge	188a4 <__assert_fail@plt+0x77e0>
   18868:	ldr	r3, [fp, #-8]
   1886c:	sub	r3, r3, #33	; 0x21
   18870:	cmp	r3, #14
   18874:	bhi	188ac <__assert_fail@plt+0x77e8>
   18878:	b	188a4 <__assert_fail@plt+0x77e0>
   1887c:	ldr	r3, [fp, #-8]
   18880:	cmp	r3, #91	; 0x5b
   18884:	blt	188ac <__assert_fail@plt+0x77e8>
   18888:	ldr	r3, [fp, #-8]
   1888c:	cmp	r3, #96	; 0x60
   18890:	ble	188a4 <__assert_fail@plt+0x77e0>
   18894:	ldr	r3, [fp, #-8]
   18898:	sub	r3, r3, #123	; 0x7b
   1889c:	cmp	r3, #3
   188a0:	bhi	188ac <__assert_fail@plt+0x77e8>
   188a4:	mov	r3, #1
   188a8:	b	188b0 <__assert_fail@plt+0x77ec>
   188ac:	mov	r3, #0
   188b0:	mov	r0, r3
   188b4:	add	sp, fp, #0
   188b8:	pop	{fp}		; (ldr fp, [sp], #4)
   188bc:	bx	lr
   188c0:	push	{fp}		; (str fp, [sp, #-4]!)
   188c4:	add	fp, sp, #0
   188c8:	sub	sp, sp, #12
   188cc:	str	r0, [fp, #-8]
   188d0:	ldr	r3, [fp, #-8]
   188d4:	cmp	r3, #9
   188d8:	blt	188fc <__assert_fail@plt+0x7838>
   188dc:	ldr	r3, [fp, #-8]
   188e0:	cmp	r3, #13
   188e4:	ble	188f4 <__assert_fail@plt+0x7830>
   188e8:	ldr	r3, [fp, #-8]
   188ec:	cmp	r3, #32
   188f0:	bne	188fc <__assert_fail@plt+0x7838>
   188f4:	mov	r3, #1
   188f8:	b	18900 <__assert_fail@plt+0x783c>
   188fc:	mov	r3, #0
   18900:	mov	r0, r3
   18904:	add	sp, fp, #0
   18908:	pop	{fp}		; (ldr fp, [sp], #4)
   1890c:	bx	lr
   18910:	push	{fp}		; (str fp, [sp, #-4]!)
   18914:	add	fp, sp, #0
   18918:	sub	sp, sp, #12
   1891c:	str	r0, [fp, #-8]
   18920:	ldr	r3, [fp, #-8]
   18924:	sub	r3, r3, #65	; 0x41
   18928:	cmp	r3, #25
   1892c:	bhi	18938 <__assert_fail@plt+0x7874>
   18930:	mov	r3, #1
   18934:	b	1893c <__assert_fail@plt+0x7878>
   18938:	mov	r3, #0
   1893c:	mov	r0, r3
   18940:	add	sp, fp, #0
   18944:	pop	{fp}		; (ldr fp, [sp], #4)
   18948:	bx	lr
   1894c:	push	{fp}		; (str fp, [sp, #-4]!)
   18950:	add	fp, sp, #0
   18954:	sub	sp, sp, #12
   18958:	str	r0, [fp, #-8]
   1895c:	ldr	r3, [fp, #-8]
   18960:	sub	r3, r3, #48	; 0x30
   18964:	cmp	r3, #54	; 0x36
   18968:	ldrls	pc, [pc, r3, lsl #2]
   1896c:	b	18a54 <__assert_fail@plt+0x7990>
   18970:	andeq	r8, r1, ip, asr #20
   18974:	andeq	r8, r1, ip, asr #20
   18978:	andeq	r8, r1, ip, asr #20
   1897c:	andeq	r8, r1, ip, asr #20
   18980:	andeq	r8, r1, ip, asr #20
   18984:	andeq	r8, r1, ip, asr #20
   18988:	andeq	r8, r1, ip, asr #20
   1898c:	andeq	r8, r1, ip, asr #20
   18990:	andeq	r8, r1, ip, asr #20
   18994:	andeq	r8, r1, ip, asr #20
   18998:	andeq	r8, r1, r4, asr sl
   1899c:	andeq	r8, r1, r4, asr sl
   189a0:	andeq	r8, r1, r4, asr sl
   189a4:	andeq	r8, r1, r4, asr sl
   189a8:	andeq	r8, r1, r4, asr sl
   189ac:	andeq	r8, r1, r4, asr sl
   189b0:	andeq	r8, r1, r4, asr sl
   189b4:	andeq	r8, r1, ip, asr #20
   189b8:	andeq	r8, r1, ip, asr #20
   189bc:	andeq	r8, r1, ip, asr #20
   189c0:	andeq	r8, r1, ip, asr #20
   189c4:	andeq	r8, r1, ip, asr #20
   189c8:	andeq	r8, r1, ip, asr #20
   189cc:	andeq	r8, r1, r4, asr sl
   189d0:	andeq	r8, r1, r4, asr sl
   189d4:	andeq	r8, r1, r4, asr sl
   189d8:	andeq	r8, r1, r4, asr sl
   189dc:	andeq	r8, r1, r4, asr sl
   189e0:	andeq	r8, r1, r4, asr sl
   189e4:	andeq	r8, r1, r4, asr sl
   189e8:	andeq	r8, r1, r4, asr sl
   189ec:	andeq	r8, r1, r4, asr sl
   189f0:	andeq	r8, r1, r4, asr sl
   189f4:	andeq	r8, r1, r4, asr sl
   189f8:	andeq	r8, r1, r4, asr sl
   189fc:	andeq	r8, r1, r4, asr sl
   18a00:	andeq	r8, r1, r4, asr sl
   18a04:	andeq	r8, r1, r4, asr sl
   18a08:	andeq	r8, r1, r4, asr sl
   18a0c:	andeq	r8, r1, r4, asr sl
   18a10:	andeq	r8, r1, r4, asr sl
   18a14:	andeq	r8, r1, r4, asr sl
   18a18:	andeq	r8, r1, r4, asr sl
   18a1c:	andeq	r8, r1, r4, asr sl
   18a20:	andeq	r8, r1, r4, asr sl
   18a24:	andeq	r8, r1, r4, asr sl
   18a28:	andeq	r8, r1, r4, asr sl
   18a2c:	andeq	r8, r1, r4, asr sl
   18a30:	andeq	r8, r1, r4, asr sl
   18a34:	andeq	r8, r1, ip, asr #20
   18a38:	andeq	r8, r1, ip, asr #20
   18a3c:	andeq	r8, r1, ip, asr #20
   18a40:	andeq	r8, r1, ip, asr #20
   18a44:	andeq	r8, r1, ip, asr #20
   18a48:	andeq	r8, r1, ip, asr #20
   18a4c:	mov	r3, #1
   18a50:	b	18a58 <__assert_fail@plt+0x7994>
   18a54:	mov	r3, #0
   18a58:	mov	r0, r3
   18a5c:	add	sp, fp, #0
   18a60:	pop	{fp}		; (ldr fp, [sp], #4)
   18a64:	bx	lr
   18a68:	push	{fp}		; (str fp, [sp, #-4]!)
   18a6c:	add	fp, sp, #0
   18a70:	sub	sp, sp, #12
   18a74:	str	r0, [fp, #-8]
   18a78:	ldr	r3, [fp, #-8]
   18a7c:	sub	r3, r3, #65	; 0x41
   18a80:	cmp	r3, #25
   18a84:	bhi	18a94 <__assert_fail@plt+0x79d0>
   18a88:	ldr	r3, [fp, #-8]
   18a8c:	add	r3, r3, #32
   18a90:	b	18a98 <__assert_fail@plt+0x79d4>
   18a94:	ldr	r3, [fp, #-8]
   18a98:	mov	r0, r3
   18a9c:	add	sp, fp, #0
   18aa0:	pop	{fp}		; (ldr fp, [sp], #4)
   18aa4:	bx	lr
   18aa8:	push	{fp}		; (str fp, [sp, #-4]!)
   18aac:	add	fp, sp, #0
   18ab0:	sub	sp, sp, #12
   18ab4:	str	r0, [fp, #-8]
   18ab8:	ldr	r3, [fp, #-8]
   18abc:	sub	r3, r3, #97	; 0x61
   18ac0:	cmp	r3, #25
   18ac4:	bhi	18ad4 <__assert_fail@plt+0x7a10>
   18ac8:	ldr	r3, [fp, #-8]
   18acc:	sub	r3, r3, #32
   18ad0:	b	18ad8 <__assert_fail@plt+0x7a14>
   18ad4:	ldr	r3, [fp, #-8]
   18ad8:	mov	r0, r3
   18adc:	add	sp, fp, #0
   18ae0:	pop	{fp}		; (ldr fp, [sp], #4)
   18ae4:	bx	lr
   18ae8:	push	{fp}		; (str fp, [sp, #-4]!)
   18aec:	add	fp, sp, #0
   18af0:	sub	sp, sp, #12
   18af4:	str	r0, [fp, #-8]
   18af8:	ldr	r3, [fp, #-8]
   18afc:	ldr	r2, [r3, #20]
   18b00:	ldr	r3, [fp, #-8]
   18b04:	ldr	r3, [r3, #16]
   18b08:	cmp	r2, r3
   18b0c:	bls	18b18 <__assert_fail@plt+0x7a54>
   18b10:	mov	r3, #0
   18b14:	b	18b60 <__assert_fail@plt+0x7a9c>
   18b18:	ldr	r3, [fp, #-8]
   18b1c:	ldr	r2, [r3, #8]
   18b20:	ldr	r3, [fp, #-8]
   18b24:	ldr	r3, [r3, #4]
   18b28:	sub	r2, r2, r3
   18b2c:	ldr	r3, [fp, #-8]
   18b30:	ldr	r3, [r3]
   18b34:	and	r3, r3, #256	; 0x100
   18b38:	cmp	r3, #0
   18b3c:	beq	18b58 <__assert_fail@plt+0x7a94>
   18b40:	ldr	r3, [fp, #-8]
   18b44:	ldr	r1, [r3, #44]	; 0x2c
   18b48:	ldr	r3, [fp, #-8]
   18b4c:	ldr	r3, [r3, #36]	; 0x24
   18b50:	sub	r3, r1, r3
   18b54:	b	18b5c <__assert_fail@plt+0x7a98>
   18b58:	mov	r3, #0
   18b5c:	add	r3, r3, r2
   18b60:	mov	r0, r3
   18b64:	add	sp, fp, #0
   18b68:	pop	{fp}		; (ldr fp, [sp], #4)
   18b6c:	bx	lr
   18b70:	str	fp, [sp, #-8]!
   18b74:	str	lr, [sp, #4]
   18b78:	add	fp, sp, #4
   18b7c:	sub	sp, sp, #272	; 0x110
   18b80:	str	r0, [fp, #-272]	; 0xfffffef0
   18b84:	sub	r3, fp, #264	; 0x108
   18b88:	movw	r2, #257	; 0x101
   18b8c:	mov	r1, r3
   18b90:	ldr	r0, [fp, #-272]	; 0xfffffef0
   18b94:	bl	18d34 <__assert_fail@plt+0x7c70>
   18b98:	mov	r3, r0
   18b9c:	cmp	r3, #0
   18ba0:	beq	18bac <__assert_fail@plt+0x7ae8>
   18ba4:	mov	r3, #0
   18ba8:	b	18c00 <__assert_fail@plt+0x7b3c>
   18bac:	sub	r3, fp, #264	; 0x108
   18bb0:	movw	r1, #40836	; 0x9f84
   18bb4:	movt	r1, #1
   18bb8:	mov	r0, r3
   18bbc:	bl	10e24 <strcmp@plt>
   18bc0:	mov	r3, r0
   18bc4:	cmp	r3, #0
   18bc8:	beq	18bf4 <__assert_fail@plt+0x7b30>
   18bcc:	sub	r3, fp, #264	; 0x108
   18bd0:	movw	r1, #40840	; 0x9f88
   18bd4:	movt	r1, #1
   18bd8:	mov	r0, r3
   18bdc:	bl	10e24 <strcmp@plt>
   18be0:	mov	r3, r0
   18be4:	cmp	r3, #0
   18be8:	beq	18bf4 <__assert_fail@plt+0x7b30>
   18bec:	mov	r3, #1
   18bf0:	b	18bf8 <__assert_fail@plt+0x7b34>
   18bf4:	mov	r3, #0
   18bf8:	and	r3, r3, #1
   18bfc:	uxtb	r3, r3
   18c00:	mov	r0, r3
   18c04:	sub	sp, fp, #4
   18c08:	ldr	fp, [sp]
   18c0c:	add	sp, sp, #4
   18c10:	pop	{pc}		; (ldr pc, [sp], #4)
   18c14:	str	fp, [sp, #-8]!
   18c18:	str	lr, [sp, #4]
   18c1c:	add	fp, sp, #4
   18c20:	sub	sp, sp, #16
   18c24:	str	r0, [fp, #-16]
   18c28:	mov	r1, #0
   18c2c:	ldr	r0, [fp, #-16]
   18c30:	bl	11034 <setlocale@plt>
   18c34:	str	r0, [fp, #-8]
   18c38:	ldr	r3, [fp, #-8]
   18c3c:	mov	r0, r3
   18c40:	sub	sp, fp, #4
   18c44:	ldr	fp, [sp]
   18c48:	add	sp, sp, #4
   18c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   18c50:	str	fp, [sp, #-8]!
   18c54:	str	lr, [sp, #4]
   18c58:	add	fp, sp, #4
   18c5c:	sub	sp, sp, #24
   18c60:	str	r0, [fp, #-16]
   18c64:	str	r1, [fp, #-20]	; 0xffffffec
   18c68:	str	r2, [fp, #-24]	; 0xffffffe8
   18c6c:	ldr	r0, [fp, #-16]
   18c70:	bl	18c14 <__assert_fail@plt+0x7b50>
   18c74:	str	r0, [fp, #-8]
   18c78:	ldr	r3, [fp, #-8]
   18c7c:	cmp	r3, #0
   18c80:	bne	18ca4 <__assert_fail@plt+0x7be0>
   18c84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c88:	cmp	r3, #0
   18c8c:	beq	18c9c <__assert_fail@plt+0x7bd8>
   18c90:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c94:	mov	r2, #0
   18c98:	strb	r2, [r3]
   18c9c:	mov	r3, #22
   18ca0:	b	18d20 <__assert_fail@plt+0x7c5c>
   18ca4:	ldr	r0, [fp, #-8]
   18ca8:	bl	10fb0 <strlen@plt>
   18cac:	str	r0, [fp, #-12]
   18cb0:	ldr	r2, [fp, #-12]
   18cb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18cb8:	cmp	r2, r3
   18cbc:	bcs	18ce0 <__assert_fail@plt+0x7c1c>
   18cc0:	ldr	r3, [fp, #-12]
   18cc4:	add	r3, r3, #1
   18cc8:	mov	r2, r3
   18ccc:	ldr	r1, [fp, #-8]
   18cd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   18cd4:	bl	10e84 <memcpy@plt>
   18cd8:	mov	r3, #0
   18cdc:	b	18d20 <__assert_fail@plt+0x7c5c>
   18ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ce4:	cmp	r3, #0
   18ce8:	beq	18d1c <__assert_fail@plt+0x7c58>
   18cec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18cf0:	sub	r3, r3, #1
   18cf4:	mov	r2, r3
   18cf8:	ldr	r1, [fp, #-8]
   18cfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18d00:	bl	10e84 <memcpy@plt>
   18d04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d08:	sub	r3, r3, #1
   18d0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18d10:	add	r3, r2, r3
   18d14:	mov	r2, #0
   18d18:	strb	r2, [r3]
   18d1c:	mov	r3, #34	; 0x22
   18d20:	mov	r0, r3
   18d24:	sub	sp, fp, #4
   18d28:	ldr	fp, [sp]
   18d2c:	add	sp, sp, #4
   18d30:	pop	{pc}		; (ldr pc, [sp], #4)
   18d34:	str	fp, [sp, #-8]!
   18d38:	str	lr, [sp, #4]
   18d3c:	add	fp, sp, #4
   18d40:	sub	sp, sp, #16
   18d44:	str	r0, [fp, #-8]
   18d48:	str	r1, [fp, #-12]
   18d4c:	str	r2, [fp, #-16]
   18d50:	ldr	r2, [fp, #-16]
   18d54:	ldr	r1, [fp, #-12]
   18d58:	ldr	r0, [fp, #-8]
   18d5c:	bl	18c50 <__assert_fail@plt+0x7b8c>
   18d60:	mov	r3, r0
   18d64:	mov	r0, r3
   18d68:	sub	sp, fp, #4
   18d6c:	ldr	fp, [sp]
   18d70:	add	sp, sp, #4
   18d74:	pop	{pc}		; (ldr pc, [sp], #4)
   18d78:	str	fp, [sp, #-8]!
   18d7c:	str	lr, [sp, #4]
   18d80:	add	fp, sp, #4
   18d84:	sub	sp, sp, #8
   18d88:	str	r0, [fp, #-8]
   18d8c:	ldr	r0, [fp, #-8]
   18d90:	bl	18c14 <__assert_fail@plt+0x7b50>
   18d94:	mov	r3, r0
   18d98:	mov	r0, r3
   18d9c:	sub	sp, fp, #4
   18da0:	ldr	fp, [sp]
   18da4:	add	sp, sp, #4
   18da8:	pop	{pc}		; (ldr pc, [sp], #4)
   18dac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18db0:	mov	r7, r0
   18db4:	ldr	r6, [pc, #72]	; 18e04 <__assert_fail@plt+0x7d40>
   18db8:	ldr	r5, [pc, #72]	; 18e08 <__assert_fail@plt+0x7d44>
   18dbc:	add	r6, pc, r6
   18dc0:	add	r5, pc, r5
   18dc4:	sub	r6, r6, r5
   18dc8:	mov	r8, r1
   18dcc:	mov	r9, r2
   18dd0:	bl	10dec <calloc@plt-0x20>
   18dd4:	asrs	r6, r6, #2
   18dd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18ddc:	mov	r4, #0
   18de0:	add	r4, r4, #1
   18de4:	ldr	r3, [r5], #4
   18de8:	mov	r2, r9
   18dec:	mov	r1, r8
   18df0:	mov	r0, r7
   18df4:	blx	r3
   18df8:	cmp	r6, r4
   18dfc:	bne	18de0 <__assert_fail@plt+0x7d1c>
   18e00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18e04:	andeq	r2, r1, r0, asr r1
   18e08:	andeq	r2, r1, r8, asr #2
   18e0c:	bx	lr
   18e10:	ldr	r3, [pc, #12]	; 18e24 <__assert_fail@plt+0x7d60>
   18e14:	mov	r1, #0
   18e18:	add	r3, pc, r3
   18e1c:	ldr	r2, [r3]
   18e20:	b	10fe0 <__cxa_atexit@plt>
   18e24:	andeq	r2, r1, r0, ror #5

Disassembly of section .fini:

00018e28 <.fini>:
   18e28:	push	{r3, lr}
   18e2c:	pop	{r3, pc}
