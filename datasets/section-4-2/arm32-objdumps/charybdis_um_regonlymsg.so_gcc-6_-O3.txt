
../repos/charybdis/modules/.libs/um_regonlymsg.so:     file format elf32-littlearm


Disassembly of section .init:

00000490 <_init>:
 490:	push	{r3, lr}
 494:	bl	510 <call_weak_fn>
 498:	pop	{r3, pc}

Disassembly of section .plt:

0000049c <.plt>:
 49c:	push	{lr}		; (str lr, [sp, #-4]!)
 4a0:	ldr	lr, [pc, #4]	; 4ac <.plt+0x10>
 4a4:	add	lr, pc, lr
 4a8:	ldr	pc, [lr, #8]!
 4ac:	.word	0x00010b54

000004b0 <__cxa_finalize@plt>:
 4b0:	add	ip, pc, #0, 12
 4b4:	add	ip, ip, #16, 20	; 0x10000
 4b8:	ldr	pc, [ip, #2900]!	; 0xb54

000004bc <ierror@plt>:
 4bc:	add	ip, pc, #0, 12
 4c0:	add	ip, ip, #16, 20	; 0x10000
 4c4:	ldr	pc, [ip, #2892]!	; 0xb4c

000004c8 <find_umode_slot@plt>:
 4c8:	add	ip, pc, #0, 12
 4cc:	add	ip, ip, #16, 20	; 0x10000
 4d0:	ldr	pc, [ip, #2884]!	; 0xb44

000004d4 <__gmon_start__@plt>:
 4d4:	add	ip, pc, #0, 12
 4d8:	add	ip, ip, #16, 20	; 0x10000
 4dc:	ldr	pc, [ip, #2876]!	; 0xb3c

000004e0 <sendto_one_numeric@plt>:
 4e0:	add	ip, pc, #0, 12
 4e4:	add	ip, ip, #16, 20	; 0x10000
 4e8:	ldr	pc, [ip, #2868]!	; 0xb34

000004ec <snprintf@plt>:
 4ec:	add	ip, pc, #0, 12
 4f0:	add	ip, ip, #16, 20	; 0x10000
 4f4:	ldr	pc, [ip, #2860]!	; 0xb2c

000004f8 <__assert_fail@plt>:
 4f8:	add	ip, pc, #0, 12
 4fc:	add	ip, ip, #16, 20	; 0x10000
 500:	ldr	pc, [ip, #2852]!	; 0xb24

00000504 <construct_umodebuf@plt>:
 504:	add	ip, pc, #0, 12
 508:	add	ip, ip, #16, 20	; 0x10000
 50c:	ldr	pc, [ip, #2844]!	; 0xb1c

Disassembly of section .text:

00000510 <call_weak_fn>:
 510:	ldr	r3, [pc, #20]	; 52c <call_weak_fn+0x1c>
 514:	ldr	r2, [pc, #20]	; 530 <call_weak_fn+0x20>
 518:	add	r3, pc, r3
 51c:	ldr	r2, [r3, r2]
 520:	cmp	r2, #0
 524:	bxeq	lr
 528:	b	4d4 <__gmon_start__@plt>
 52c:	.word	0x00010ae0
 530:	.word	0x00000038

00000534 <deregister_tm_clones>:
 534:	ldr	r3, [pc, #52]	; 570 <deregister_tm_clones+0x3c>
 538:	ldr	r0, [pc, #52]	; 574 <deregister_tm_clones+0x40>
 53c:	add	r3, pc, r3
 540:	add	r0, pc, r0
 544:	add	r3, r3, #3
 548:	sub	r3, r3, r0
 54c:	cmp	r3, #6
 550:	ldr	r3, [pc, #32]	; 578 <deregister_tm_clones+0x44>
 554:	add	r3, pc, r3
 558:	bxls	lr
 55c:	ldr	r2, [pc, #24]	; 57c <deregister_tm_clones+0x48>
 560:	ldr	r3, [r3, r2]
 564:	cmp	r3, #0
 568:	bxeq	lr
 56c:	bx	r3
 570:	.word	0x00010b50
 574:	.word	0x00010b4c
 578:	.word	0x00010aa4
 57c:	.word	0x00000030

00000580 <register_tm_clones>:
 580:	ldr	r1, [pc, #56]	; 5c0 <register_tm_clones+0x40>
 584:	ldr	r0, [pc, #56]	; 5c4 <register_tm_clones+0x44>
 588:	add	r1, pc, r1
 58c:	add	r0, pc, r0
 590:	sub	r1, r1, r0
 594:	ldr	r3, [pc, #44]	; 5c8 <register_tm_clones+0x48>
 598:	asr	r1, r1, #2
 59c:	add	r3, pc, r3
 5a0:	add	r1, r1, r1, lsr #31
 5a4:	asrs	r1, r1, #1
 5a8:	bxeq	lr
 5ac:	ldr	r2, [pc, #24]	; 5cc <register_tm_clones+0x4c>
 5b0:	ldr	r3, [r3, r2]
 5b4:	cmp	r3, #0
 5b8:	bxeq	lr
 5bc:	bx	r3
 5c0:	.word	0x00010b04
 5c4:	.word	0x00010b00
 5c8:	.word	0x00010a5c
 5cc:	.word	0x00000040

000005d0 <__do_global_dtors_aux>:
 5d0:	ldr	r3, [pc, #76]	; 624 <__do_global_dtors_aux+0x54>
 5d4:	ldr	r2, [pc, #76]	; 628 <__do_global_dtors_aux+0x58>
 5d8:	add	r3, pc, r3
 5dc:	add	r2, pc, r2
 5e0:	ldrb	r3, [r3]
 5e4:	cmp	r3, #0
 5e8:	bxne	lr
 5ec:	ldr	r3, [pc, #56]	; 62c <__do_global_dtors_aux+0x5c>
 5f0:	push	{r4, lr}
 5f4:	ldr	r3, [r2, r3]
 5f8:	cmp	r3, #0
 5fc:	beq	60c <__do_global_dtors_aux+0x3c>
 600:	ldr	r3, [pc, #40]	; 630 <__do_global_dtors_aux+0x60>
 604:	ldr	r0, [pc, r3]
 608:	bl	4b0 <__cxa_finalize@plt>
 60c:	bl	534 <deregister_tm_clones>
 610:	ldr	r3, [pc, #28]	; 634 <__do_global_dtors_aux+0x64>
 614:	mov	r2, #1
 618:	add	r3, pc, r3
 61c:	strb	r2, [r3]
 620:	pop	{r4, pc}
 624:	.word	0x00010ab4
 628:	.word	0x00010a1c
 62c:	.word	0x0000002c
 630:	.word	0x00010a38
 634:	.word	0x00010a74

00000638 <frame_dummy>:
 638:	ldr	r0, [pc, #56]	; 678 <frame_dummy+0x40>
 63c:	ldr	r3, [pc, #56]	; 67c <frame_dummy+0x44>
 640:	add	r0, pc, r0
 644:	ldr	r2, [r0]
 648:	add	r3, pc, r3
 64c:	cmp	r2, #0
 650:	bne	658 <frame_dummy+0x20>
 654:	b	580 <register_tm_clones>
 658:	ldr	r2, [pc, #32]	; 680 <frame_dummy+0x48>
 65c:	ldr	r3, [r3, r2]
 660:	cmp	r3, #0
 664:	beq	654 <frame_dummy+0x1c>
 668:	push	{r4, lr}
 66c:	blx	r3
 670:	pop	{r4, lr}
 674:	b	580 <register_tm_clones>
 678:	.word	0x000108b4
 67c:	.word	0x000109b0
 680:	.word	0x0000003c

00000684 <um_regonlymsg_moddeinit>:
 684:	ldr	r3, [pc, #20]	; 6a0 <um_regonlymsg_moddeinit+0x1c>
 688:	ldr	r2, [pc, #20]	; 6a4 <um_regonlymsg_moddeinit+0x20>
 68c:	add	r3, pc, r3
 690:	mov	r1, #0
 694:	ldr	r3, [r3, r2]
 698:	str	r1, [r3, #328]	; 0x148
 69c:	b	504 <construct_umodebuf@plt>
 6a0:	.word	0x0001096c
 6a4:	.word	0x00000034

000006a8 <um_regonlymsg_modinit>:
 6a8:	push	{r4, lr}
 6ac:	bl	4c8 <find_umode_slot@plt>
 6b0:	ldr	r3, [pc, #56]	; 6f0 <um_regonlymsg_modinit+0x48>
 6b4:	ldr	r2, [pc, #56]	; 6f4 <um_regonlymsg_modinit+0x4c>
 6b8:	add	r3, pc, r3
 6bc:	ldr	r4, [r3, r2]
 6c0:	str	r0, [r4, #328]	; 0x148
 6c4:	bl	504 <construct_umodebuf@plt>
 6c8:	ldr	r3, [r4, #328]	; 0x148
 6cc:	cmp	r3, #0
 6d0:	beq	6dc <um_regonlymsg_modinit+0x34>
 6d4:	mov	r0, #0
 6d8:	pop	{r4, pc}
 6dc:	ldr	r0, [pc, #20]	; 6f8 <um_regonlymsg_modinit+0x50>
 6e0:	add	r0, pc, r0
 6e4:	bl	4bc <ierror@plt>
 6e8:	mvn	r0, #0
 6ec:	pop	{r4, pc}
 6f0:	.word	0x00010940
 6f4:	.word	0x00000034
 6f8:	.word	0x00000308

000006fc <h_hdl_privmsg_user>:
 6fc:	ldr	r3, [r0, #16]
 700:	ldr	r2, [pc, #284]	; 824 <h_hdl_privmsg_user+0x128>
 704:	cmp	r3, #0
 708:	add	r2, pc, r2
 70c:	bxne	lr
 710:	ldr	r3, [r0, #8]
 714:	push	{r4, r5, r6, lr}
 718:	ldrd	r4, [r3, #64]	; 0x40
 71c:	mov	r5, #0
 720:	and	r4, r4, #8192	; 0x2000
 724:	orrs	r1, r4, r5
 728:	popeq	{r4, r5, r6, pc}
 72c:	ldrh	r1, [r3, #80]	; 0x50
 730:	cmp	r1, #64	; 0x40
 734:	popne	{r4, r5, r6, pc}
 738:	ldr	r1, [pc, #232]	; 828 <h_hdl_privmsg_user+0x12c>
 73c:	ldr	ip, [r3, #56]	; 0x38
 740:	ldr	r2, [r2, r1]
 744:	ldr	r2, [r2, #328]	; 0x148
 748:	bics	r2, r2, ip
 74c:	popne	{r4, r5, r6, pc}
 750:	ldr	r1, [r0, #4]
 754:	ldrh	r2, [r1, #80]	; 0x50
 758:	cmp	r2, #32
 75c:	popeq	{r4, r5, r6, pc}
 760:	ldr	r2, [r1, #56]	; 0x38
 764:	lsr	r2, r2, #12
 768:	cmp	r1, r3
 76c:	orreq	r2, r2, #1
 770:	tst	r2, #1
 774:	popne	{r4, r5, r6, pc}
 778:	ldr	r2, [r3, #432]	; 0x1b0
 77c:	mov	r4, r0
 780:	cmn	r2, #316	; 0x13c
 784:	beq	804 <h_hdl_privmsg_user+0x108>
 788:	ldr	r2, [r2, #316]	; 0x13c
 78c:	cmp	r2, #0
 790:	beq	7bc <h_hdl_privmsg_user+0xc0>
 794:	ldr	r0, [r2]
 798:	cmp	r1, r0
 79c:	bne	7b0 <h_hdl_privmsg_user+0xb4>
 7a0:	b	800 <h_hdl_privmsg_user+0x104>
 7a4:	ldr	r0, [r2]
 7a8:	cmp	r1, r0
 7ac:	popeq	{r4, r5, r6, pc}
 7b0:	ldr	r2, [r2, #8]
 7b4:	cmp	r2, #0
 7b8:	bne	7a4 <h_hdl_privmsg_user+0xa8>
 7bc:	ldr	r2, [r1, #24]
 7c0:	ldrb	r2, [r2, #40]	; 0x28
 7c4:	cmp	r2, #0
 7c8:	bne	7fc <h_hdl_privmsg_user+0x100>
 7cc:	ldr	r2, [r4]
 7d0:	cmp	r2, #0
 7d4:	popeq	{r4, r5, r6, pc}
 7d8:	ldr	r5, [pc, #76]	; 82c <h_hdl_privmsg_user+0x130>
 7dc:	ldr	r2, [pc, #76]	; 830 <h_hdl_privmsg_user+0x134>
 7e0:	mov	r0, r1
 7e4:	add	r3, r3, #88	; 0x58
 7e8:	mov	r1, r5
 7ec:	add	r2, pc, r2
 7f0:	bl	4e0 <sendto_one_numeric@plt>
 7f4:	str	r5, [r4, #16]
 7f8:	pop	{r4, r5, r6, pc}
 7fc:	pop	{r4, r5, r6, pc}
 800:	pop	{r4, r5, r6, pc}
 804:	ldr	r3, [pc, #40]	; 834 <h_hdl_privmsg_user+0x138>
 808:	ldr	r1, [pc, #40]	; 838 <h_hdl_privmsg_user+0x13c>
 80c:	ldr	r0, [pc, #40]	; 83c <h_hdl_privmsg_user+0x140>
 810:	add	r3, pc, r3
 814:	ldr	r2, [pc, #36]	; 840 <h_hdl_privmsg_user+0x144>
 818:	add	r1, pc, r1
 81c:	add	r0, pc, r0
 820:	bl	4f8 <__assert_fail@plt>
 824:	.word	0x000108f0
 828:	.word	0x00000034
 82c:	.word	0x000001e6
 830:	.word	0x00000274
 834:	.word	0x00000180
 838:	.word	0x0000021c
 83c:	.word	0x00000234
 840:	.word	0x00000136

00000844 <h_hdl_invite>:
 844:	ldr	r3, [r0, #16]
 848:	ldr	r2, [pc, #284]	; 96c <h_hdl_invite+0x128>
 84c:	cmp	r3, #0
 850:	add	r2, pc, r2
 854:	bxne	lr
 858:	ldr	r3, [r0, #12]
 85c:	push	{r4, r5, r6, lr}
 860:	ldrd	r4, [r3, #64]	; 0x40
 864:	mov	r5, #0
 868:	and	r4, r4, #8192	; 0x2000
 86c:	orrs	r1, r4, r5
 870:	popeq	{r4, r5, r6, pc}
 874:	ldrh	r1, [r3, #80]	; 0x50
 878:	cmp	r1, #64	; 0x40
 87c:	popne	{r4, r5, r6, pc}
 880:	ldr	r1, [pc, #232]	; 970 <h_hdl_invite+0x12c>
 884:	ldr	ip, [r3, #56]	; 0x38
 888:	ldr	r2, [r2, r1]
 88c:	ldr	r2, [r2, #328]	; 0x148
 890:	bics	r2, r2, ip
 894:	popne	{r4, r5, r6, pc}
 898:	ldr	r1, [r0]
 89c:	ldrh	r2, [r1, #80]	; 0x50
 8a0:	cmp	r2, #32
 8a4:	popeq	{r4, r5, r6, pc}
 8a8:	ldr	r2, [r1, #56]	; 0x38
 8ac:	lsr	r2, r2, #12
 8b0:	cmp	r1, r3
 8b4:	orreq	r2, r2, #1
 8b8:	tst	r2, #1
 8bc:	popne	{r4, r5, r6, pc}
 8c0:	ldr	r2, [r3, #432]	; 0x1b0
 8c4:	mov	r5, r0
 8c8:	cmn	r2, #316	; 0x13c
 8cc:	beq	94c <h_hdl_invite+0x108>
 8d0:	ldr	r2, [r2, #316]	; 0x13c
 8d4:	cmp	r2, #0
 8d8:	beq	904 <h_hdl_invite+0xc0>
 8dc:	ldr	r0, [r2]
 8e0:	cmp	r1, r0
 8e4:	bne	8f8 <h_hdl_invite+0xb4>
 8e8:	b	948 <h_hdl_invite+0x104>
 8ec:	ldr	r0, [r2]
 8f0:	cmp	r1, r0
 8f4:	popeq	{r4, r5, r6, pc}
 8f8:	ldr	r2, [r2, #8]
 8fc:	cmp	r2, #0
 900:	bne	8ec <h_hdl_invite+0xa8>
 904:	ldr	r2, [r1, #24]
 908:	ldrb	r2, [r2, #40]	; 0x28
 90c:	cmp	r2, #0
 910:	bne	944 <h_hdl_invite+0x100>
 914:	ldr	r4, [pc, #88]	; 974 <h_hdl_invite+0x130>
 918:	ldr	r2, [pc, #88]	; 978 <h_hdl_invite+0x134>
 91c:	add	r4, pc, r4
 920:	add	r3, r3, #88	; 0x58
 924:	mov	r0, r4
 928:	add	r2, pc, r2
 92c:	mov	r1, #512	; 0x200
 930:	bl	4ec <snprintf@plt>
 934:	ldr	r3, [pc, #64]	; 97c <h_hdl_invite+0x138>
 938:	str	r4, [r5, #28]
 93c:	str	r3, [r5, #16]
 940:	pop	{r4, r5, r6, pc}
 944:	pop	{r4, r5, r6, pc}
 948:	pop	{r4, r5, r6, pc}
 94c:	ldr	r3, [pc, #44]	; 980 <h_hdl_invite+0x13c>
 950:	ldr	r1, [pc, #44]	; 984 <h_hdl_invite+0x140>
 954:	ldr	r0, [pc, #44]	; 988 <h_hdl_invite+0x144>
 958:	add	r3, pc, r3
 95c:	ldr	r2, [pc, #40]	; 98c <h_hdl_invite+0x148>
 960:	add	r1, pc, r1
 964:	add	r0, pc, r0
 968:	bl	4f8 <__assert_fail@plt>
 96c:	.word	0x000107a8
 970:	.word	0x00000034
 974:	.word	0x00010774
 978:	.word	0x00000138
 97c:	.word	0x000001e6
 980:	.word	0x00000038
 984:	.word	0x000000d4
 988:	.word	0x000000ec
 98c:	.word	0x00000136

Disassembly of section .fini:

00000990 <_fini>:
 990:	push	{r3, lr}
 994:	pop	{r3, pc}
