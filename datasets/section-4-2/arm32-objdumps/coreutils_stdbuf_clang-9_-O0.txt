
../repos/coreutils/src/stdbuf:     file format elf32-littlearm


Disassembly of section .init:

00010e48 <.init>:
   10e48:	push	{r3, lr}
   10e4c:	bl	11138 <__assert_fail@plt+0x48>
   10e50:	pop	{r3, pc}

Disassembly of section .plt:

00010e54 <calloc@plt-0x14>:
   10e54:	push	{lr}		; (str lr, [sp, #-4]!)
   10e58:	ldr	lr, [pc, #4]	; 10e64 <calloc@plt-0x4>
   10e5c:	add	lr, pc, lr
   10e60:	ldr	pc, [lr, #8]!
   10e64:	muleq	r1, ip, r1

00010e68 <calloc@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #118784	; 0x1d000
   10e70:	ldr	pc, [ip, #412]!	; 0x19c

00010e74 <fputs_unlocked@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #118784	; 0x1d000
   10e7c:	ldr	pc, [ip, #404]!	; 0x194

00010e80 <raise@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #118784	; 0x1d000
   10e88:	ldr	pc, [ip, #396]!	; 0x18c

00010e8c <strcmp@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #118784	; 0x1d000
   10e94:	ldr	pc, [ip, #388]!	; 0x184

00010e98 <printf@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #118784	; 0x1d000
   10ea0:	ldr	pc, [ip, #380]!	; 0x17c

00010ea4 <fflush@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #118784	; 0x1d000
   10eac:	ldr	pc, [ip, #372]!	; 0x174

00010eb0 <free@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #118784	; 0x1d000
   10eb8:	ldr	pc, [ip, #364]!	; 0x16c

00010ebc <_exit@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #118784	; 0x1d000
   10ec4:	ldr	pc, [ip, #356]!	; 0x164

00010ec8 <memcpy@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #118784	; 0x1d000
   10ed0:	ldr	pc, [ip, #348]!	; 0x15c

00010ed4 <execvp@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #118784	; 0x1d000
   10edc:	ldr	pc, [ip, #340]!	; 0x154

00010ee0 <mbsinit@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #118784	; 0x1d000
   10ee8:	ldr	pc, [ip, #332]!	; 0x14c

00010eec <memcmp@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #118784	; 0x1d000
   10ef4:	ldr	pc, [ip, #324]!	; 0x144

00010ef8 <realloc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #118784	; 0x1d000
   10f00:	ldr	pc, [ip, #316]!	; 0x13c

00010f04 <textdomain@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #118784	; 0x1d000
   10f0c:	ldr	pc, [ip, #308]!	; 0x134

00010f10 <iswprint@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #118784	; 0x1d000
   10f18:	ldr	pc, [ip, #300]!	; 0x12c

00010f1c <readlink@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #118784	; 0x1d000
   10f24:	ldr	pc, [ip, #292]!	; 0x124

00010f28 <lseek64@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #118784	; 0x1d000
   10f30:	ldr	pc, [ip, #284]!	; 0x11c

00010f34 <__ctype_get_mb_cur_max@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #118784	; 0x1d000
   10f3c:	ldr	pc, [ip, #276]!	; 0x114

00010f40 <__fpending@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #118784	; 0x1d000
   10f48:	ldr	pc, [ip, #268]!	; 0x10c

00010f4c <ferror_unlocked@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #118784	; 0x1d000
   10f54:	ldr	pc, [ip, #260]!	; 0x104

00010f58 <mbrtowc@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #118784	; 0x1d000
   10f60:	ldr	pc, [ip, #252]!	; 0xfc

00010f64 <error@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #118784	; 0x1d000
   10f6c:	ldr	pc, [ip, #244]!	; 0xf4

00010f70 <getenv@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #118784	; 0x1d000
   10f78:	ldr	pc, [ip, #236]!	; 0xec

00010f7c <malloc@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #118784	; 0x1d000
   10f84:	ldr	pc, [ip, #228]!	; 0xe4

00010f88 <__libc_start_main@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #118784	; 0x1d000
   10f90:	ldr	pc, [ip, #220]!	; 0xdc

00010f94 <__freading@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #118784	; 0x1d000
   10f9c:	ldr	pc, [ip, #212]!	; 0xd4

00010fa0 <__gmon_start__@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #118784	; 0x1d000
   10fa8:	ldr	pc, [ip, #204]!	; 0xcc

00010fac <getopt_long@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #118784	; 0x1d000
   10fb4:	ldr	pc, [ip, #196]!	; 0xc4

00010fb8 <__ctype_b_loc@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #118784	; 0x1d000
   10fc0:	ldr	pc, [ip, #188]!	; 0xbc

00010fc4 <exit@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #118784	; 0x1d000
   10fcc:	ldr	pc, [ip, #180]!	; 0xb4

00010fd0 <gettext@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #118784	; 0x1d000
   10fd8:	ldr	pc, [ip, #172]!	; 0xac

00010fdc <strlen@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #118784	; 0x1d000
   10fe4:	ldr	pc, [ip, #164]!	; 0xa4

00010fe8 <strchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #118784	; 0x1d000
   10ff0:	ldr	pc, [ip, #156]!	; 0x9c

00010ff4 <fprintf@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #118784	; 0x1d000
   10ffc:	ldr	pc, [ip, #148]!	; 0x94

00011000 <__errno_location@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #118784	; 0x1d000
   11008:	ldr	pc, [ip, #140]!	; 0x8c

0001100c <__cxa_atexit@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #118784	; 0x1d000
   11014:	ldr	pc, [ip, #132]!	; 0x84

00011018 <memset@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #118784	; 0x1d000
   11020:	ldr	pc, [ip, #124]!	; 0x7c

00011024 <fileno@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #118784	; 0x1d000
   1102c:	ldr	pc, [ip, #116]!	; 0x74

00011030 <strtoumax@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #118784	; 0x1d000
   11038:	ldr	pc, [ip, #108]!	; 0x6c

0001103c <asprintf@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #118784	; 0x1d000
   11044:	ldr	pc, [ip, #100]!	; 0x64

00011048 <access@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #118784	; 0x1d000
   11050:	ldr	pc, [ip, #92]!	; 0x5c

00011054 <fclose@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #118784	; 0x1d000
   1105c:	ldr	pc, [ip, #84]!	; 0x54

00011060 <fseeko64@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #118784	; 0x1d000
   11068:	ldr	pc, [ip, #76]!	; 0x4c

0001106c <strtok@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #118784	; 0x1d000
   11074:	ldr	pc, [ip, #68]!	; 0x44

00011078 <setlocale@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #118784	; 0x1d000
   11080:	ldr	pc, [ip, #60]!	; 0x3c

00011084 <putenv@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #118784	; 0x1d000
   1108c:	ldr	pc, [ip, #52]!	; 0x34

00011090 <toupper@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #118784	; 0x1d000
   11098:	ldr	pc, [ip, #44]!	; 0x2c

0001109c <strrchr@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #118784	; 0x1d000
   110a4:	ldr	pc, [ip, #36]!	; 0x24

000110a8 <nl_langinfo@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #118784	; 0x1d000
   110b0:	ldr	pc, [ip, #28]!

000110b4 <bindtextdomain@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #118784	; 0x1d000
   110bc:	ldr	pc, [ip, #20]!

000110c0 <__xstat64@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #118784	; 0x1d000
   110c8:	ldr	pc, [ip, #12]!

000110cc <fputs@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #118784	; 0x1d000
   110d4:	ldr	pc, [ip, #4]!

000110d8 <strncmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #28, 20	; 0x1c000
   110e0:	ldr	pc, [ip, #4092]!	; 0xffc

000110e4 <abort@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #28, 20	; 0x1c000
   110ec:	ldr	pc, [ip, #4084]!	; 0xff4

000110f0 <__assert_fail@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #28, 20	; 0x1c000
   110f8:	ldr	pc, [ip, #4076]!	; 0xfec

Disassembly of section .text:

000110fc <.text>:
   110fc:	mov	fp, #0
   11100:	mov	lr, #0
   11104:	pop	{r1}		; (ldr r1, [sp], #4)
   11108:	mov	r2, sp
   1110c:	push	{r2}		; (str r2, [sp, #-4]!)
   11110:	push	{r0}		; (str r0, [sp, #-4]!)
   11114:	ldr	ip, [pc, #16]	; 1112c <__assert_fail@plt+0x3c>
   11118:	push	{ip}		; (str ip, [sp, #-4]!)
   1111c:	ldr	r0, [pc, #12]	; 11130 <__assert_fail@plt+0x40>
   11120:	ldr	r3, [pc, #12]	; 11134 <__assert_fail@plt+0x44>
   11124:	bl	10f88 <__libc_start_main@plt>
   11128:	bl	110e4 <abort@plt>
   1112c:	andeq	sp, r1, r4, lsl r0
   11130:	andeq	r1, r1, ip, ror r5
   11134:			; <UNDEFINED> instruction: 0x0001cfb4
   11138:	ldr	r3, [pc, #20]	; 11154 <__assert_fail@plt+0x64>
   1113c:	ldr	r2, [pc, #20]	; 11158 <__assert_fail@plt+0x68>
   11140:	add	r3, pc, r3
   11144:	ldr	r2, [r3, r2]
   11148:	cmp	r2, #0
   1114c:	bxeq	lr
   11150:	b	10fa0 <__gmon_start__@plt>
   11154:			; <UNDEFINED> instruction: 0x0001ceb8
   11158:	andeq	r0, r0, r8, ror #1
   1115c:	ldr	r0, [pc, #24]	; 1117c <__assert_fail@plt+0x8c>
   11160:	ldr	r3, [pc, #24]	; 11180 <__assert_fail@plt+0x90>
   11164:	cmp	r3, r0
   11168:	bxeq	lr
   1116c:	ldr	r3, [pc, #16]	; 11184 <__assert_fail@plt+0x94>
   11170:	cmp	r3, #0
   11174:	bxeq	lr
   11178:	bx	r3
   1117c:	andeq	lr, r2, ip, lsr r1
   11180:	andeq	lr, r2, ip, lsr r1
   11184:	andeq	r0, r0, r0
   11188:	ldr	r0, [pc, #36]	; 111b4 <__assert_fail@plt+0xc4>
   1118c:	ldr	r1, [pc, #36]	; 111b8 <__assert_fail@plt+0xc8>
   11190:	sub	r1, r1, r0
   11194:	asr	r1, r1, #2
   11198:	add	r1, r1, r1, lsr #31
   1119c:	asrs	r1, r1, #1
   111a0:	bxeq	lr
   111a4:	ldr	r3, [pc, #16]	; 111bc <__assert_fail@plt+0xcc>
   111a8:	cmp	r3, #0
   111ac:	bxeq	lr
   111b0:	bx	r3
   111b4:	andeq	lr, r2, ip, lsr r1
   111b8:	andeq	lr, r2, ip, lsr r1
   111bc:	andeq	r0, r0, r0
   111c0:	push	{r4, lr}
   111c4:	ldr	r4, [pc, #24]	; 111e4 <__assert_fail@plt+0xf4>
   111c8:	ldrb	r3, [r4]
   111cc:	cmp	r3, #0
   111d0:	popne	{r4, pc}
   111d4:	bl	1115c <__assert_fail@plt+0x6c>
   111d8:	mov	r3, #1
   111dc:	strb	r3, [r4]
   111e0:	pop	{r4, pc}
   111e4:	andeq	lr, r2, ip, asr r1
   111e8:	b	11188 <__assert_fail@plt+0x98>
   111ec:	push	{fp, lr}
   111f0:	mov	fp, sp
   111f4:	sub	sp, sp, #48	; 0x30
   111f8:	str	r0, [fp, #-4]
   111fc:	ldr	r0, [fp, #-4]
   11200:	cmp	r0, #0
   11204:	beq	11250 <__assert_fail@plt+0x160>
   11208:	b	1120c <__assert_fail@plt+0x11c>
   1120c:	movw	r0, #57680	; 0xe150
   11210:	movt	r0, #2
   11214:	ldr	r0, [r0]
   11218:	movw	r1, #53324	; 0xd04c
   1121c:	movt	r1, #1
   11220:	str	r0, [fp, #-8]
   11224:	mov	r0, r1
   11228:	bl	10fd0 <gettext@plt>
   1122c:	movw	r1, #57744	; 0xe190
   11230:	movt	r1, #2
   11234:	ldr	r2, [r1]
   11238:	ldr	r1, [fp, #-8]
   1123c:	str	r0, [fp, #-12]
   11240:	mov	r0, r1
   11244:	ldr	r1, [fp, #-12]
   11248:	bl	10ff4 <fprintf@plt>
   1124c:	b	113a0 <__assert_fail@plt+0x2b0>
   11250:	movw	r0, #53363	; 0xd073
   11254:	movt	r0, #1
   11258:	bl	10fd0 <gettext@plt>
   1125c:	movw	r1, #57744	; 0xe190
   11260:	movt	r1, #2
   11264:	ldr	r1, [r1]
   11268:	bl	10e98 <printf@plt>
   1126c:	movw	r1, #53392	; 0xd090
   11270:	movt	r1, #1
   11274:	str	r0, [fp, #-16]
   11278:	mov	r0, r1
   1127c:	bl	10fd0 <gettext@plt>
   11280:	movw	r1, #57684	; 0xe154
   11284:	movt	r1, #2
   11288:	ldr	r1, [r1]
   1128c:	bl	10e74 <fputs_unlocked@plt>
   11290:	str	r0, [fp, #-20]	; 0xffffffec
   11294:	bl	113a8 <__assert_fail@plt+0x2b8>
   11298:	movw	r0, #53467	; 0xd0db
   1129c:	movt	r0, #1
   112a0:	bl	10fd0 <gettext@plt>
   112a4:	movw	r1, #57684	; 0xe154
   112a8:	movt	r1, #2
   112ac:	ldr	r1, [r1]
   112b0:	bl	10e74 <fputs_unlocked@plt>
   112b4:	movw	r1, #53649	; 0xd191
   112b8:	movt	r1, #1
   112bc:	str	r0, [sp, #24]
   112c0:	mov	r0, r1
   112c4:	bl	10fd0 <gettext@plt>
   112c8:	movw	r1, #57684	; 0xe154
   112cc:	movt	r1, #2
   112d0:	ldr	r1, [r1]
   112d4:	bl	10e74 <fputs_unlocked@plt>
   112d8:	movw	r1, #53694	; 0xd1be
   112dc:	movt	r1, #1
   112e0:	str	r0, [sp, #20]
   112e4:	mov	r0, r1
   112e8:	bl	10fd0 <gettext@plt>
   112ec:	movw	r1, #57684	; 0xe154
   112f0:	movt	r1, #2
   112f4:	ldr	r1, [r1]
   112f8:	bl	10e74 <fputs_unlocked@plt>
   112fc:	movw	r1, #53748	; 0xd1f4
   11300:	movt	r1, #1
   11304:	str	r0, [sp, #16]
   11308:	mov	r0, r1
   1130c:	bl	10fd0 <gettext@plt>
   11310:	movw	r1, #57684	; 0xe154
   11314:	movt	r1, #2
   11318:	ldr	r1, [r1]
   1131c:	bl	10e74 <fputs_unlocked@plt>
   11320:	movw	r1, #53857	; 0xd261
   11324:	movt	r1, #1
   11328:	str	r0, [sp, #12]
   1132c:	mov	r0, r1
   11330:	bl	10fd0 <gettext@plt>
   11334:	movw	r1, #57684	; 0xe154
   11338:	movt	r1, #2
   1133c:	ldr	r1, [r1]
   11340:	bl	10e74 <fputs_unlocked@plt>
   11344:	movw	r1, #53919	; 0xd29f
   11348:	movt	r1, #1
   1134c:	str	r0, [sp, #8]
   11350:	mov	r0, r1
   11354:	bl	10fd0 <gettext@plt>
   11358:	movw	r1, #57684	; 0xe154
   1135c:	movt	r1, #2
   11360:	ldr	r1, [r1]
   11364:	bl	10e74 <fputs_unlocked@plt>
   11368:	movw	r1, #54231	; 0xd3d7
   1136c:	movt	r1, #1
   11370:	str	r0, [sp, #4]
   11374:	mov	r0, r1
   11378:	bl	10fd0 <gettext@plt>
   1137c:	movw	r1, #57684	; 0xe154
   11380:	movt	r1, #2
   11384:	ldr	r1, [r1]
   11388:	bl	10e74 <fputs_unlocked@plt>
   1138c:	movw	r1, #54498	; 0xd4e2
   11390:	movt	r1, #1
   11394:	str	r0, [sp]
   11398:	mov	r0, r1
   1139c:	bl	113d0 <__assert_fail@plt+0x2e0>
   113a0:	ldr	r0, [fp, #-4]
   113a4:	bl	10fc4 <exit@plt>
   113a8:	push	{fp, lr}
   113ac:	mov	fp, sp
   113b0:	movw	r0, #54819	; 0xd623
   113b4:	movt	r0, #1
   113b8:	bl	10fd0 <gettext@plt>
   113bc:	movw	r1, #57684	; 0xe154
   113c0:	movt	r1, #2
   113c4:	ldr	r1, [r1]
   113c8:	bl	10e74 <fputs_unlocked@plt>
   113cc:	pop	{fp, pc}
   113d0:	push	{fp, lr}
   113d4:	mov	fp, sp
   113d8:	sub	sp, sp, #88	; 0x58
   113dc:	add	r1, sp, #28
   113e0:	movw	r2, #55520	; 0xd8e0
   113e4:	movt	r2, #1
   113e8:	str	r0, [fp, #-4]
   113ec:	mov	r0, r1
   113f0:	str	r1, [sp, #12]
   113f4:	mov	r1, r2
   113f8:	movw	r2, #56	; 0x38
   113fc:	bl	10ec8 <memcpy@plt>
   11400:	ldr	r0, [fp, #-4]
   11404:	str	r0, [sp, #24]
   11408:	ldr	r0, [sp, #12]
   1140c:	str	r0, [sp, #20]
   11410:	ldr	r0, [sp, #20]
   11414:	ldr	r0, [r0]
   11418:	movw	r1, #0
   1141c:	cmp	r0, r1
   11420:	movw	r0, #0
   11424:	str	r0, [sp, #8]
   11428:	beq	11454 <__assert_fail@plt+0x364>
   1142c:	ldr	r0, [fp, #-4]
   11430:	ldr	r1, [sp, #20]
   11434:	ldr	r1, [r1]
   11438:	bl	10e8c <strcmp@plt>
   1143c:	cmp	r0, #0
   11440:	movw	r0, #0
   11444:	moveq	r0, #1
   11448:	mvn	r1, #0
   1144c:	eor	r0, r0, r1
   11450:	str	r0, [sp, #8]
   11454:	ldr	r0, [sp, #8]
   11458:	tst	r0, #1
   1145c:	beq	11470 <__assert_fail@plt+0x380>
   11460:	ldr	r0, [sp, #20]
   11464:	add	r0, r0, #8
   11468:	str	r0, [sp, #20]
   1146c:	b	11410 <__assert_fail@plt+0x320>
   11470:	ldr	r0, [sp, #20]
   11474:	ldr	r0, [r0, #4]
   11478:	movw	r1, #0
   1147c:	cmp	r0, r1
   11480:	beq	11490 <__assert_fail@plt+0x3a0>
   11484:	ldr	r0, [sp, #20]
   11488:	ldr	r0, [r0, #4]
   1148c:	str	r0, [sp, #24]
   11490:	movw	r0, #54989	; 0xd6cd
   11494:	movt	r0, #1
   11498:	bl	10fd0 <gettext@plt>
   1149c:	movw	r1, #54684	; 0xd59c
   114a0:	movt	r1, #1
   114a4:	movw	r2, #55012	; 0xd6e4
   114a8:	movt	r2, #1
   114ac:	bl	10e98 <printf@plt>
   114b0:	movw	r1, #5
   114b4:	str	r0, [sp, #4]
   114b8:	mov	r0, r1
   114bc:	movw	r1, #0
   114c0:	bl	11078 <setlocale@plt>
   114c4:	str	r0, [sp, #16]
   114c8:	ldr	r0, [sp, #16]
   114cc:	movw	r1, #0
   114d0:	cmp	r0, r1
   114d4:	beq	11510 <__assert_fail@plt+0x420>
   114d8:	ldr	r0, [sp, #16]
   114dc:	movw	r1, #55052	; 0xd70c
   114e0:	movt	r1, #1
   114e4:	movw	r2, #3
   114e8:	bl	110d8 <strncmp@plt>
   114ec:	cmp	r0, #0
   114f0:	beq	11510 <__assert_fail@plt+0x420>
   114f4:	movw	r0, #55056	; 0xd710
   114f8:	movt	r0, #1
   114fc:	bl	10fd0 <gettext@plt>
   11500:	movw	r1, #57684	; 0xe154
   11504:	movt	r1, #2
   11508:	ldr	r1, [r1]
   1150c:	bl	10e74 <fputs_unlocked@plt>
   11510:	movw	r0, #55127	; 0xd757
   11514:	movt	r0, #1
   11518:	bl	10fd0 <gettext@plt>
   1151c:	ldr	r2, [fp, #-4]
   11520:	movw	r1, #55012	; 0xd6e4
   11524:	movt	r1, #1
   11528:	bl	10e98 <printf@plt>
   1152c:	movw	r1, #55154	; 0xd772
   11530:	movt	r1, #1
   11534:	str	r0, [sp]
   11538:	mov	r0, r1
   1153c:	bl	10fd0 <gettext@plt>
   11540:	ldr	r1, [sp, #24]
   11544:	ldr	r2, [sp, #24]
   11548:	ldr	r3, [fp, #-4]
   1154c:	cmp	r2, r3
   11550:	movw	r2, #0
   11554:	moveq	r2, #1
   11558:	tst	r2, #1
   1155c:	movw	r2, #55204	; 0xd7a4
   11560:	movt	r2, #1
   11564:	movw	r3, #54922	; 0xd68a
   11568:	movt	r3, #1
   1156c:	movne	r2, r3
   11570:	bl	10e98 <printf@plt>
   11574:	mov	sp, fp
   11578:	pop	{fp, pc}
   1157c:	push	{fp, lr}
   11580:	mov	fp, sp
   11584:	sub	sp, sp, #88	; 0x58
   11588:	movw	r2, #0
   1158c:	str	r2, [fp, #-4]
   11590:	str	r0, [fp, #-8]
   11594:	str	r1, [fp, #-12]
   11598:	ldr	r0, [fp, #-12]
   1159c:	ldr	r0, [r0]
   115a0:	bl	12c64 <__assert_fail@plt+0x1b74>
   115a4:	movw	r0, #6
   115a8:	movw	r1, #55204	; 0xd7a4
   115ac:	movt	r1, #1
   115b0:	bl	11078 <setlocale@plt>
   115b4:	movw	r1, #54688	; 0xd5a0
   115b8:	movt	r1, #1
   115bc:	str	r0, [fp, #-28]	; 0xffffffe4
   115c0:	mov	r0, r1
   115c4:	movw	r1, #54505	; 0xd4e9
   115c8:	movt	r1, #1
   115cc:	bl	110b4 <bindtextdomain@plt>
   115d0:	movw	r1, #54688	; 0xd5a0
   115d4:	movt	r1, #1
   115d8:	str	r0, [fp, #-32]	; 0xffffffe0
   115dc:	mov	r0, r1
   115e0:	bl	10f04 <textdomain@plt>
   115e4:	movw	r1, #125	; 0x7d
   115e8:	str	r0, [fp, #-36]	; 0xffffffdc
   115ec:	mov	r0, r1
   115f0:	bl	11a0c <__assert_fail@plt+0x91c>
   115f4:	movw	r0, #10000	; 0x2710
   115f8:	movt	r0, #1
   115fc:	bl	1d018 <__assert_fail@plt+0xbf28>
   11600:	ldr	r0, [fp, #-8]
   11604:	ldr	r1, [fp, #-12]
   11608:	movw	r2, #54529	; 0xd501
   1160c:	movt	r2, #1
   11610:	movw	r3, #55424	; 0xd880
   11614:	movt	r3, #1
   11618:	movw	ip, #0
   1161c:	str	ip, [sp]
   11620:	bl	10fac <getopt_long@plt>
   11624:	str	r0, [fp, #-16]
   11628:	cmn	r0, #1
   1162c:	beq	11894 <__assert_fail@plt+0x7a4>
   11630:	ldr	r0, [fp, #-16]
   11634:	cmn	r0, #3
   11638:	str	r0, [fp, #-40]	; 0xffffffd8
   1163c:	beq	11840 <__assert_fail@plt+0x750>
   11640:	b	11644 <__assert_fail@plt+0x554>
   11644:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11648:	cmn	r0, #2
   1164c:	beq	11838 <__assert_fail@plt+0x748>
   11650:	b	11654 <__assert_fail@plt+0x564>
   11654:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11658:	cmp	r0, #101	; 0x65
   1165c:	beq	11684 <__assert_fail@plt+0x594>
   11660:	b	11664 <__assert_fail@plt+0x574>
   11664:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11668:	cmp	r0, #105	; 0x69
   1166c:	beq	11684 <__assert_fail@plt+0x594>
   11670:	b	11674 <__assert_fail@plt+0x584>
   11674:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11678:	cmp	r0, #111	; 0x6f
   1167c:	bne	11888 <__assert_fail@plt+0x798>
   11680:	b	11684 <__assert_fail@plt+0x594>
   11684:	ldr	r0, [fp, #-16]
   11688:	bl	11a38 <__assert_fail@plt+0x948>
   1168c:	str	r0, [fp, #-20]	; 0xffffffec
   11690:	ldr	r0, [fp, #-20]	; 0xffffffec
   11694:	movw	r1, #0
   11698:	cmp	r1, r0
   1169c:	bgt	116b0 <__assert_fail@plt+0x5c0>
   116a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   116a4:	cmp	r0, #3
   116a8:	bcs	116b0 <__assert_fail@plt+0x5c0>
   116ac:	b	116d0 <__assert_fail@plt+0x5e0>
   116b0:	movw	r0, #54537	; 0xd509
   116b4:	movt	r0, #1
   116b8:	movw	r1, #54596	; 0xd544
   116bc:	movt	r1, #1
   116c0:	movw	r2, #336	; 0x150
   116c4:	movw	r3, #54609	; 0xd551
   116c8:	movt	r3, #1
   116cc:	bl	110f0 <__assert_fail@plt>
   116d0:	ldr	r0, [fp, #-16]
   116d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   116d8:	movw	r2, #12
   116dc:	mul	r1, r1, r2
   116e0:	movw	r2, #57696	; 0xe160
   116e4:	movt	r2, #2
   116e8:	add	r1, r2, r1
   116ec:	str	r0, [r1, #4]
   116f0:	movw	r0, #57688	; 0xe158
   116f4:	movt	r0, #2
   116f8:	ldr	r0, [r0]
   116fc:	ldrb	r0, [r0]
   11700:	bl	12528 <__assert_fail@plt+0x1438>
   11704:	tst	r0, #1
   11708:	beq	11724 <__assert_fail@plt+0x634>
   1170c:	movw	r0, #57688	; 0xe158
   11710:	movt	r0, #2
   11714:	ldr	r1, [r0]
   11718:	add	r1, r1, #1
   1171c:	str	r1, [r0]
   11720:	b	116f0 <__assert_fail@plt+0x600>
   11724:	movw	r0, #57688	; 0xe158
   11728:	movt	r0, #2
   1172c:	ldr	r0, [r0]
   11730:	ldr	r1, [fp, #-20]	; 0xffffffec
   11734:	movw	r2, #12
   11738:	mul	r1, r1, r2
   1173c:	movw	r2, #57696	; 0xe160
   11740:	movt	r2, #2
   11744:	add	r1, r2, r1
   11748:	str	r0, [r1, #8]
   1174c:	ldr	r0, [fp, #-16]
   11750:	cmp	r0, #105	; 0x69
   11754:	bne	11798 <__assert_fail@plt+0x6a8>
   11758:	movw	r0, #57688	; 0xe158
   1175c:	movt	r0, #2
   11760:	ldr	r0, [r0]
   11764:	ldrb	r0, [r0]
   11768:	cmp	r0, #76	; 0x4c
   1176c:	bne	11798 <__assert_fail@plt+0x6a8>
   11770:	movw	r0, #54632	; 0xd568
   11774:	movt	r0, #1
   11778:	bl	10fd0 <gettext@plt>
   1177c:	movw	r1, #0
   11780:	str	r0, [sp, #44]	; 0x2c
   11784:	mov	r0, r1
   11788:	ldr	r2, [sp, #44]	; 0x2c
   1178c:	bl	10f64 <error@plt>
   11790:	movw	r0, #125	; 0x7d
   11794:	bl	111ec <__assert_fail@plt+0xfc>
   11798:	movw	r0, #57688	; 0xe158
   1179c:	movt	r0, #2
   117a0:	ldr	r0, [r0]
   117a4:	movw	r1, #55247	; 0xd7cf
   117a8:	movt	r1, #1
   117ac:	bl	10e8c <strcmp@plt>
   117b0:	cmp	r0, #0
   117b4:	beq	11834 <__assert_fail@plt+0x744>
   117b8:	movw	r0, #57688	; 0xe158
   117bc:	movt	r0, #2
   117c0:	ldr	r0, [r0]
   117c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   117c8:	movw	r2, #12
   117cc:	mul	r1, r1, r2
   117d0:	movw	r2, #57696	; 0xe160
   117d4:	movt	r2, #2
   117d8:	add	r1, r2, r1
   117dc:	bl	11aa8 <__assert_fail@plt+0x9b8>
   117e0:	cmn	r0, #1
   117e4:	bne	11834 <__assert_fail@plt+0x744>
   117e8:	bl	11000 <__errno_location@plt>
   117ec:	ldr	r1, [r0]
   117f0:	movw	r0, #54668	; 0xd58c
   117f4:	movt	r0, #1
   117f8:	str	r1, [sp, #40]	; 0x28
   117fc:	bl	10fd0 <gettext@plt>
   11800:	movw	r1, #57688	; 0xe158
   11804:	movt	r1, #2
   11808:	ldr	r1, [r1]
   1180c:	str	r0, [sp, #36]	; 0x24
   11810:	mov	r0, r1
   11814:	bl	152c0 <__assert_fail@plt+0x41d0>
   11818:	movw	r1, #125	; 0x7d
   1181c:	str	r0, [sp, #32]
   11820:	mov	r0, r1
   11824:	ldr	r1, [sp, #40]	; 0x28
   11828:	ldr	r2, [sp, #36]	; 0x24
   1182c:	ldr	r3, [sp, #32]
   11830:	bl	10f64 <error@plt>
   11834:	b	11890 <__assert_fail@plt+0x7a0>
   11838:	movw	r0, #0
   1183c:	bl	111ec <__assert_fail@plt+0xfc>
   11840:	movw	r0, #57684	; 0xe154
   11844:	movt	r0, #2
   11848:	ldr	r0, [r0]
   1184c:	movw	r1, #57588	; 0xe0f4
   11850:	movt	r1, #2
   11854:	ldr	r3, [r1]
   11858:	movw	r1, #54498	; 0xd4e2
   1185c:	movt	r1, #1
   11860:	movw	r2, #54684	; 0xd59c
   11864:	movt	r2, #1
   11868:	movw	ip, #54698	; 0xd5aa
   1186c:	movt	ip, #1
   11870:	str	ip, [sp]
   11874:	movw	ip, #0
   11878:	str	ip, [sp, #4]
   1187c:	bl	15b3c <__assert_fail@plt+0x4a4c>
   11880:	movw	r0, #0
   11884:	bl	10fc4 <exit@plt>
   11888:	movw	r0, #125	; 0x7d
   1188c:	bl	111ec <__assert_fail@plt+0xfc>
   11890:	b	11600 <__assert_fail@plt+0x510>
   11894:	movw	r0, #57672	; 0xe148
   11898:	movt	r0, #2
   1189c:	ldr	r0, [r0]
   118a0:	ldr	r1, [fp, #-12]
   118a4:	add	r0, r1, r0, lsl #2
   118a8:	str	r0, [fp, #-12]
   118ac:	movw	r0, #57672	; 0xe148
   118b0:	movt	r0, #2
   118b4:	ldr	r0, [r0]
   118b8:	ldr	r1, [fp, #-8]
   118bc:	sub	r0, r1, r0
   118c0:	str	r0, [fp, #-8]
   118c4:	ldr	r0, [fp, #-8]
   118c8:	cmp	r0, #1
   118cc:	bge	118f8 <__assert_fail@plt+0x808>
   118d0:	movw	r0, #54712	; 0xd5b8
   118d4:	movt	r0, #1
   118d8:	bl	10fd0 <gettext@plt>
   118dc:	movw	r1, #0
   118e0:	str	r0, [sp, #28]
   118e4:	mov	r0, r1
   118e8:	ldr	r2, [sp, #28]
   118ec:	bl	10f64 <error@plt>
   118f0:	movw	r0, #125	; 0x7d
   118f4:	bl	111ec <__assert_fail@plt+0xfc>
   118f8:	bl	11b80 <__assert_fail@plt+0xa90>
   118fc:	tst	r0, #1
   11900:	bne	1192c <__assert_fail@plt+0x83c>
   11904:	movw	r0, #54728	; 0xd5c8
   11908:	movt	r0, #1
   1190c:	bl	10fd0 <gettext@plt>
   11910:	movw	r1, #0
   11914:	str	r0, [sp, #24]
   11918:	mov	r0, r1
   1191c:	ldr	r2, [sp, #24]
   11920:	bl	10f64 <error@plt>
   11924:	movw	r0, #125	; 0x7d
   11928:	bl	111ec <__assert_fail@plt+0xfc>
   1192c:	movw	r0, #57744	; 0xe190
   11930:	movt	r0, #2
   11934:	ldr	r0, [r0]
   11938:	bl	11d3c <__assert_fail@plt+0xc4c>
   1193c:	movw	r0, #57732	; 0xe184
   11940:	movt	r0, #2
   11944:	ldr	r0, [r0]
   11948:	movw	r1, #0
   1194c:	cmp	r0, r1
   11950:	bne	1196c <__assert_fail@plt+0x87c>
   11954:	movw	r0, #54769	; 0xd5f1
   11958:	movt	r0, #1
   1195c:	bl	189c4 <__assert_fail@plt+0x78d4>
   11960:	movw	r1, #57732	; 0xe184
   11964:	movt	r1, #2
   11968:	str	r0, [r1]
   1196c:	bl	11e80 <__assert_fail@plt+0xd90>
   11970:	movw	r0, #57732	; 0xe184
   11974:	movt	r0, #2
   11978:	ldr	r0, [r0]
   1197c:	bl	12c24 <__assert_fail@plt+0x1b34>
   11980:	ldr	r0, [fp, #-12]
   11984:	ldr	r0, [r0]
   11988:	ldr	r1, [fp, #-12]
   1198c:	bl	10ed4 <execvp@plt>
   11990:	str	r0, [sp, #20]
   11994:	bl	11000 <__errno_location@plt>
   11998:	ldr	r0, [r0]
   1199c:	cmp	r0, #2
   119a0:	movw	r0, #0
   119a4:	moveq	r0, #1
   119a8:	tst	r0, #1
   119ac:	movw	r0, #127	; 0x7f
   119b0:	moveq	r0, #126	; 0x7e
   119b4:	str	r0, [fp, #-24]	; 0xffffffe8
   119b8:	bl	11000 <__errno_location@plt>
   119bc:	ldr	r1, [r0]
   119c0:	movw	r0, #54794	; 0xd60a
   119c4:	movt	r0, #1
   119c8:	str	r1, [sp, #16]
   119cc:	bl	10fd0 <gettext@plt>
   119d0:	ldr	r1, [fp, #-12]
   119d4:	ldr	r1, [r1]
   119d8:	str	r0, [sp, #12]
   119dc:	mov	r0, r1
   119e0:	bl	152c0 <__assert_fail@plt+0x41d0>
   119e4:	movw	r1, #0
   119e8:	str	r0, [sp, #8]
   119ec:	mov	r0, r1
   119f0:	ldr	r1, [sp, #16]
   119f4:	ldr	r2, [sp, #12]
   119f8:	ldr	r3, [sp, #8]
   119fc:	bl	10f64 <error@plt>
   11a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a04:	mov	sp, fp
   11a08:	pop	{fp, pc}
   11a0c:	sub	sp, sp, #4
   11a10:	str	r0, [sp]
   11a14:	ldr	r0, [sp]
   11a18:	cmp	r0, #1
   11a1c:	beq	11a30 <__assert_fail@plt+0x940>
   11a20:	ldr	r0, [sp]
   11a24:	movw	r1, #57592	; 0xe0f8
   11a28:	movt	r1, #2
   11a2c:	str	r0, [r1]
   11a30:	add	sp, sp, #4
   11a34:	bx	lr
   11a38:	sub	sp, sp, #12
   11a3c:	str	r0, [sp, #8]
   11a40:	mvn	r0, #0
   11a44:	str	r0, [sp, #4]
   11a48:	ldr	r0, [sp, #8]
   11a4c:	cmp	r0, #101	; 0x65
   11a50:	str	r0, [sp]
   11a54:	beq	11a7c <__assert_fail@plt+0x98c>
   11a58:	b	11a5c <__assert_fail@plt+0x96c>
   11a5c:	ldr	r0, [sp]
   11a60:	cmp	r0, #105	; 0x69
   11a64:	beq	11a88 <__assert_fail@plt+0x998>
   11a68:	b	11a6c <__assert_fail@plt+0x97c>
   11a6c:	ldr	r0, [sp]
   11a70:	cmp	r0, #111	; 0x6f
   11a74:	beq	11a94 <__assert_fail@plt+0x9a4>
   11a78:	b	11a9c <__assert_fail@plt+0x9ac>
   11a7c:	movw	r0, #2
   11a80:	str	r0, [sp, #4]
   11a84:	b	11a9c <__assert_fail@plt+0x9ac>
   11a88:	movw	r0, #0
   11a8c:	str	r0, [sp, #4]
   11a90:	b	11a9c <__assert_fail@plt+0x9ac>
   11a94:	movw	r0, #1
   11a98:	str	r0, [sp, #4]
   11a9c:	ldr	r0, [sp, #4]
   11aa0:	add	sp, sp, #12
   11aa4:	bx	lr
   11aa8:	push	{fp, lr}
   11aac:	mov	fp, sp
   11ab0:	sub	sp, sp, #40	; 0x28
   11ab4:	str	r0, [fp, #-8]
   11ab8:	str	r1, [fp, #-12]
   11abc:	ldr	r0, [fp, #-8]
   11ac0:	movw	r1, #0
   11ac4:	movw	r2, #10
   11ac8:	add	r3, sp, #16
   11acc:	movw	ip, #55231	; 0xd7bf
   11ad0:	movt	ip, #1
   11ad4:	str	ip, [sp]
   11ad8:	bl	18a98 <__assert_fail@plt+0x79a8>
   11adc:	str	r0, [sp, #12]
   11ae0:	ldr	r0, [sp, #12]
   11ae4:	cmp	r0, #0
   11ae8:	bne	11b04 <__assert_fail@plt+0xa14>
   11aec:	ldr	r0, [sp, #20]
   11af0:	cmp	r0, #0
   11af4:	beq	11b04 <__assert_fail@plt+0xa14>
   11af8:	b	11afc <__assert_fail@plt+0xa0c>
   11afc:	movw	r0, #1
   11b00:	str	r0, [sp, #12]
   11b04:	ldr	r0, [sp, #12]
   11b08:	cmp	r0, #0
   11b0c:	bne	11b34 <__assert_fail@plt+0xa44>
   11b10:	bl	11000 <__errno_location@plt>
   11b14:	mov	r1, #0
   11b18:	str	r1, [r0]
   11b1c:	ldr	r0, [sp, #16]
   11b20:	ldr	r1, [fp, #-12]
   11b24:	str	r0, [r1]
   11b28:	movw	r0, #0
   11b2c:	str	r0, [fp, #-4]
   11b30:	b	11b74 <__assert_fail@plt+0xa84>
   11b34:	ldr	r0, [sp, #12]
   11b38:	cmp	r0, #1
   11b3c:	bne	11b4c <__assert_fail@plt+0xa5c>
   11b40:	movw	r0, #75	; 0x4b
   11b44:	str	r0, [sp, #8]
   11b48:	b	11b58 <__assert_fail@plt+0xa68>
   11b4c:	bl	11000 <__errno_location@plt>
   11b50:	ldr	r0, [r0]
   11b54:	str	r0, [sp, #8]
   11b58:	ldr	r0, [sp, #8]
   11b5c:	str	r0, [sp, #4]
   11b60:	bl	11000 <__errno_location@plt>
   11b64:	ldr	r1, [sp, #4]
   11b68:	str	r1, [r0]
   11b6c:	mvn	r0, #0
   11b70:	str	r0, [fp, #-4]
   11b74:	ldr	r0, [fp, #-4]
   11b78:	mov	sp, fp
   11b7c:	pop	{fp, pc}
   11b80:	push	{fp, lr}
   11b84:	mov	fp, sp
   11b88:	sub	sp, sp, #48	; 0x30
   11b8c:	movw	r0, #0
   11b90:	strb	r0, [fp, #-1]
   11b94:	movw	r0, #0
   11b98:	str	r0, [fp, #-8]
   11b9c:	ldr	r0, [fp, #-8]
   11ba0:	cmp	r0, #3
   11ba4:	bcs	11d2c <__assert_fail@plt+0xc3c>
   11ba8:	ldr	r0, [fp, #-8]
   11bac:	movw	r1, #12
   11bb0:	mul	r0, r0, r1
   11bb4:	movw	r1, #57696	; 0xe160
   11bb8:	movt	r1, #2
   11bbc:	add	r0, r1, r0
   11bc0:	ldr	r0, [r0, #8]
   11bc4:	movw	r1, #0
   11bc8:	cmp	r0, r1
   11bcc:	beq	11d18 <__assert_fail@plt+0xc28>
   11bd0:	ldr	r0, [fp, #-8]
   11bd4:	movw	r1, #12
   11bd8:	mul	r0, r0, r1
   11bdc:	movw	r1, #57696	; 0xe160
   11be0:	movt	r1, #2
   11be4:	add	r0, r1, r0
   11be8:	ldr	r0, [r0, #8]
   11bec:	ldrb	r0, [r0]
   11bf0:	cmp	r0, #76	; 0x4c
   11bf4:	bne	11c44 <__assert_fail@plt+0xb54>
   11bf8:	ldr	r0, [fp, #-8]
   11bfc:	movw	r1, #12
   11c00:	mul	r0, r0, r1
   11c04:	movw	r1, #57696	; 0xe160
   11c08:	movt	r1, #2
   11c0c:	add	r0, r1, r0
   11c10:	ldr	r0, [r0, #4]
   11c14:	bl	11090 <toupper@plt>
   11c18:	sub	r1, fp, #12
   11c1c:	str	r0, [fp, #-20]	; 0xffffffec
   11c20:	mov	r0, r1
   11c24:	movw	r1, #55242	; 0xd7ca
   11c28:	movt	r1, #1
   11c2c:	movw	r2, #55249	; 0xd7d1
   11c30:	movt	r2, #1
   11c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c38:	bl	1103c <asprintf@plt>
   11c3c:	str	r0, [fp, #-16]
   11c40:	b	11cac <__assert_fail@plt+0xbbc>
   11c44:	ldr	r0, [fp, #-8]
   11c48:	add	r0, r0, r0, lsl #1
   11c4c:	movw	r1, #57696	; 0xe160
   11c50:	movt	r1, #2
   11c54:	add	r0, r1, r0, lsl #2
   11c58:	ldr	r0, [r0, #4]
   11c5c:	str	r1, [sp, #24]
   11c60:	bl	11090 <toupper@plt>
   11c64:	ldr	r1, [fp, #-8]
   11c68:	add	r1, r1, r1, lsl #1
   11c6c:	ldr	r2, [sp, #24]
   11c70:	ldr	r1, [r2, r1, lsl #2]
   11c74:	mov	r3, #0
   11c78:	mov	ip, sp
   11c7c:	str	r3, [ip, #4]
   11c80:	str	r1, [ip]
   11c84:	movw	r1, #55258	; 0xd7da
   11c88:	movt	r1, #1
   11c8c:	movw	r2, #55249	; 0xd7d1
   11c90:	movt	r2, #1
   11c94:	sub	r3, fp, #12
   11c98:	str	r0, [sp, #20]
   11c9c:	mov	r0, r3
   11ca0:	ldr	r3, [sp, #20]
   11ca4:	bl	1103c <asprintf@plt>
   11ca8:	str	r0, [fp, #-16]
   11cac:	ldr	r0, [fp, #-16]
   11cb0:	cmp	r0, #0
   11cb4:	bge	11cbc <__assert_fail@plt+0xbcc>
   11cb8:	bl	189fc <__assert_fail@plt+0x790c>
   11cbc:	ldr	r0, [fp, #-12]
   11cc0:	bl	11084 <putenv@plt>
   11cc4:	cmp	r0, #0
   11cc8:	beq	11d10 <__assert_fail@plt+0xc20>
   11ccc:	bl	11000 <__errno_location@plt>
   11cd0:	ldr	r1, [r0]
   11cd4:	movw	r0, #55268	; 0xd7e4
   11cd8:	movt	r0, #1
   11cdc:	str	r1, [sp, #16]
   11ce0:	bl	10fd0 <gettext@plt>
   11ce4:	ldr	r1, [fp, #-12]
   11ce8:	str	r0, [sp, #12]
   11cec:	mov	r0, r1
   11cf0:	bl	152c0 <__assert_fail@plt+0x41d0>
   11cf4:	movw	r1, #125	; 0x7d
   11cf8:	str	r0, [sp, #8]
   11cfc:	mov	r0, r1
   11d00:	ldr	r1, [sp, #16]
   11d04:	ldr	r2, [sp, #12]
   11d08:	ldr	r3, [sp, #8]
   11d0c:	bl	10f64 <error@plt>
   11d10:	movw	r0, #1
   11d14:	strb	r0, [fp, #-1]
   11d18:	b	11d1c <__assert_fail@plt+0xc2c>
   11d1c:	ldr	r0, [fp, #-8]
   11d20:	add	r0, r0, #1
   11d24:	str	r0, [fp, #-8]
   11d28:	b	11b9c <__assert_fail@plt+0xaac>
   11d2c:	ldrb	r0, [fp, #-1]
   11d30:	and	r0, r0, #1
   11d34:	mov	sp, fp
   11d38:	pop	{fp, pc}
   11d3c:	push	{fp, lr}
   11d40:	mov	fp, sp
   11d44:	sub	sp, sp, #16
   11d48:	str	r0, [fp, #-4]
   11d4c:	ldr	r0, [fp, #-4]
   11d50:	movw	r1, #47	; 0x2f
   11d54:	bl	10fe8 <strchr@plt>
   11d58:	movw	r1, #0
   11d5c:	cmp	r0, r1
   11d60:	beq	11d7c <__assert_fail@plt+0xc8c>
   11d64:	ldr	r0, [fp, #-4]
   11d68:	bl	12830 <__assert_fail@plt+0x1740>
   11d6c:	movw	r1, #57732	; 0xe184
   11d70:	movt	r1, #2
   11d74:	str	r0, [r1]
   11d78:	b	11e78 <__assert_fail@plt+0xd88>
   11d7c:	movw	r0, #55309	; 0xd80d
   11d80:	movt	r0, #1
   11d84:	bl	18a4c <__assert_fail@plt+0x795c>
   11d88:	str	r0, [sp, #8]
   11d8c:	ldr	r0, [sp, #8]
   11d90:	movw	r1, #0
   11d94:	cmp	r0, r1
   11d98:	beq	11db4 <__assert_fail@plt+0xcc4>
   11d9c:	ldr	r0, [sp, #8]
   11da0:	bl	12830 <__assert_fail@plt+0x1740>
   11da4:	movw	r1, #57732	; 0xe184
   11da8:	movt	r1, #2
   11dac:	str	r0, [r1]
   11db0:	b	11e70 <__assert_fail@plt+0xd80>
   11db4:	movw	r0, #55324	; 0xd81c
   11db8:	movt	r0, #1
   11dbc:	bl	10f70 <getenv@plt>
   11dc0:	str	r0, [sp, #8]
   11dc4:	movw	r1, #0
   11dc8:	cmp	r0, r1
   11dcc:	beq	11e6c <__assert_fail@plt+0xd7c>
   11dd0:	ldr	r0, [sp, #8]
   11dd4:	bl	189c4 <__assert_fail@plt+0x78d4>
   11dd8:	str	r0, [sp, #8]
   11ddc:	ldr	r0, [sp, #8]
   11de0:	movw	r1, #54535	; 0xd507
   11de4:	movt	r1, #1
   11de8:	bl	1106c <strtok@plt>
   11dec:	str	r0, [sp, #4]
   11df0:	ldr	r0, [sp, #4]
   11df4:	movw	r1, #0
   11df8:	cmp	r0, r1
   11dfc:	beq	11e68 <__assert_fail@plt+0xd78>
   11e00:	ldr	r0, [sp, #4]
   11e04:	ldr	r1, [fp, #-4]
   11e08:	movw	r2, #0
   11e0c:	bl	12a18 <__assert_fail@plt+0x1928>
   11e10:	str	r0, [sp]
   11e14:	ldr	r0, [sp]
   11e18:	movw	r1, #1
   11e1c:	bl	11048 <access@plt>
   11e20:	cmp	r0, #0
   11e24:	bne	11e48 <__assert_fail@plt+0xd58>
   11e28:	ldr	r0, [sp]
   11e2c:	bl	12830 <__assert_fail@plt+0x1740>
   11e30:	movw	r1, #57732	; 0xe184
   11e34:	movt	r1, #2
   11e38:	str	r0, [r1]
   11e3c:	ldr	r0, [sp]
   11e40:	bl	12c24 <__assert_fail@plt+0x1b34>
   11e44:	b	11e68 <__assert_fail@plt+0xd78>
   11e48:	ldr	r0, [sp]
   11e4c:	bl	12c24 <__assert_fail@plt+0x1b34>
   11e50:	movw	r0, #0
   11e54:	movw	r1, #54535	; 0xd507
   11e58:	movt	r1, #1
   11e5c:	bl	1106c <strtok@plt>
   11e60:	str	r0, [sp, #4]
   11e64:	b	11df0 <__assert_fail@plt+0xd00>
   11e68:	b	11e6c <__assert_fail@plt+0xd7c>
   11e6c:	b	11e70 <__assert_fail@plt+0xd80>
   11e70:	ldr	r0, [sp, #8]
   11e74:	bl	12c24 <__assert_fail@plt+0x1b34>
   11e78:	mov	sp, fp
   11e7c:	pop	{fp, pc}
   11e80:	push	{fp, lr}
   11e84:	mov	fp, sp
   11e88:	sub	sp, sp, #176	; 0xb0
   11e8c:	movw	r0, #55329	; 0xd821
   11e90:	movt	r0, #1
   11e94:	str	r0, [fp, #-8]
   11e98:	ldr	r0, [fp, #-8]
   11e9c:	bl	10f70 <getenv@plt>
   11ea0:	sub	r1, fp, #28
   11ea4:	str	r0, [fp, #-12]
   11ea8:	movw	r0, #57732	; 0xe184
   11eac:	movt	r0, #2
   11eb0:	ldr	r0, [r0]
   11eb4:	str	r0, [fp, #-28]	; 0xffffffe4
   11eb8:	movw	r0, #55340	; 0xd82c
   11ebc:	movt	r0, #1
   11ec0:	str	r0, [fp, #-24]	; 0xffffffe8
   11ec4:	movw	r0, #0
   11ec8:	str	r0, [fp, #-20]	; 0xffffffec
   11ecc:	str	r1, [fp, #-32]	; 0xffffffe0
   11ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ed4:	ldr	r0, [r0]
   11ed8:	ldrsb	r0, [r0]
   11edc:	cmp	r0, #0
   11ee0:	bne	11ef8 <__assert_fail@plt+0xe08>
   11ee4:	movw	r0, #55369	; 0xd849
   11ee8:	movt	r0, #1
   11eec:	bl	189c4 <__assert_fail@plt+0x78d4>
   11ef0:	str	r0, [fp, #-36]	; 0xffffffdc
   11ef4:	b	11fac <__assert_fail@plt+0xebc>
   11ef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11efc:	ldr	r2, [r0]
   11f00:	sub	r0, fp, #36	; 0x24
   11f04:	movw	r1, #55382	; 0xd856
   11f08:	movt	r1, #1
   11f0c:	movw	r3, #55369	; 0xd849
   11f10:	movt	r3, #1
   11f14:	bl	1103c <asprintf@plt>
   11f18:	str	r0, [fp, #-4]
   11f1c:	ldr	r0, [fp, #-4]
   11f20:	cmp	r0, #0
   11f24:	bge	11f2c <__assert_fail@plt+0xe3c>
   11f28:	bl	189fc <__assert_fail@plt+0x790c>
   11f2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11f30:	add	r1, sp, #32
   11f34:	bl	1d030 <__assert_fail@plt+0xbf40>
   11f38:	cmp	r0, #0
   11f3c:	bne	11f44 <__assert_fail@plt+0xe54>
   11f40:	b	11fac <__assert_fail@plt+0xebc>
   11f44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11f48:	bl	12c24 <__assert_fail@plt+0x1b34>
   11f4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f50:	add	r0, r0, #4
   11f54:	str	r0, [fp, #-32]	; 0xffffffe0
   11f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f5c:	ldr	r0, [r0]
   11f60:	movw	r1, #0
   11f64:	cmp	r0, r1
   11f68:	bne	11fa8 <__assert_fail@plt+0xeb8>
   11f6c:	movw	r0, #55388	; 0xd85c
   11f70:	movt	r0, #1
   11f74:	bl	10fd0 <gettext@plt>
   11f78:	movw	r1, #55369	; 0xd849
   11f7c:	movt	r1, #1
   11f80:	str	r0, [sp, #28]
   11f84:	mov	r0, r1
   11f88:	bl	152c0 <__assert_fail@plt+0x41d0>
   11f8c:	movw	r1, #125	; 0x7d
   11f90:	str	r0, [sp, #24]
   11f94:	mov	r0, r1
   11f98:	movw	r1, #0
   11f9c:	ldr	r2, [sp, #28]
   11fa0:	ldr	r3, [sp, #24]
   11fa4:	bl	10f64 <error@plt>
   11fa8:	b	11ed0 <__assert_fail@plt+0xde0>
   11fac:	ldr	r0, [fp, #-12]
   11fb0:	movw	r1, #0
   11fb4:	cmp	r0, r1
   11fb8:	beq	11ff0 <__assert_fail@plt+0xf00>
   11fbc:	ldr	r2, [fp, #-8]
   11fc0:	ldr	r3, [fp, #-12]
   11fc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11fc8:	sub	r1, fp, #16
   11fcc:	str	r0, [sp, #20]
   11fd0:	mov	r0, r1
   11fd4:	movw	r1, #55406	; 0xd86e
   11fd8:	movt	r1, #1
   11fdc:	ldr	ip, [sp, #20]
   11fe0:	str	ip, [sp]
   11fe4:	bl	1103c <asprintf@plt>
   11fe8:	str	r0, [fp, #-4]
   11fec:	b	1200c <__assert_fail@plt+0xf1c>
   11ff0:	ldr	r2, [fp, #-8]
   11ff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ff8:	sub	r0, fp, #16
   11ffc:	movw	r1, #55415	; 0xd877
   12000:	movt	r1, #1
   12004:	bl	1103c <asprintf@plt>
   12008:	str	r0, [fp, #-4]
   1200c:	ldr	r0, [fp, #-4]
   12010:	cmp	r0, #0
   12014:	bge	1201c <__assert_fail@plt+0xf2c>
   12018:	bl	189fc <__assert_fail@plt+0x790c>
   1201c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12020:	bl	12c24 <__assert_fail@plt+0x1b34>
   12024:	ldr	r0, [fp, #-16]
   12028:	bl	11084 <putenv@plt>
   1202c:	str	r0, [fp, #-4]
   12030:	ldr	r0, [fp, #-4]
   12034:	cmp	r0, #0
   12038:	beq	12080 <__assert_fail@plt+0xf90>
   1203c:	bl	11000 <__errno_location@plt>
   12040:	ldr	r1, [r0]
   12044:	movw	r0, #55268	; 0xd7e4
   12048:	movt	r0, #1
   1204c:	str	r1, [sp, #16]
   12050:	bl	10fd0 <gettext@plt>
   12054:	ldr	r1, [fp, #-16]
   12058:	str	r0, [sp, #12]
   1205c:	mov	r0, r1
   12060:	bl	152c0 <__assert_fail@plt+0x41d0>
   12064:	movw	r1, #125	; 0x7d
   12068:	str	r0, [sp, #8]
   1206c:	mov	r0, r1
   12070:	ldr	r1, [sp, #16]
   12074:	ldr	r2, [sp, #12]
   12078:	ldr	r3, [sp, #8]
   1207c:	bl	10f64 <error@plt>
   12080:	mov	sp, fp
   12084:	pop	{fp, pc}
   12088:	sub	sp, sp, #12
   1208c:	str	r0, [sp, #4]
   12090:	ldr	r0, [sp, #4]
   12094:	sub	r1, r0, #48	; 0x30
   12098:	cmp	r1, #10
   1209c:	str	r0, [sp]
   120a0:	bcc	120d0 <__assert_fail@plt+0xfe0>
   120a4:	b	120a8 <__assert_fail@plt+0xfb8>
   120a8:	ldr	r0, [sp]
   120ac:	sub	r1, r0, #65	; 0x41
   120b0:	cmp	r1, #26
   120b4:	bcc	120d0 <__assert_fail@plt+0xfe0>
   120b8:	b	120bc <__assert_fail@plt+0xfcc>
   120bc:	ldr	r0, [sp]
   120c0:	sub	r1, r0, #97	; 0x61
   120c4:	cmp	r1, #25
   120c8:	bhi	120e0 <__assert_fail@plt+0xff0>
   120cc:	b	120d0 <__assert_fail@plt+0xfe0>
   120d0:	movw	r0, #1
   120d4:	and	r0, r0, #1
   120d8:	strb	r0, [sp, #11]
   120dc:	b	120ec <__assert_fail@plt+0xffc>
   120e0:	movw	r0, #0
   120e4:	and	r0, r0, #1
   120e8:	strb	r0, [sp, #11]
   120ec:	ldrb	r0, [sp, #11]
   120f0:	and	r0, r0, #1
   120f4:	add	sp, sp, #12
   120f8:	bx	lr
   120fc:	sub	sp, sp, #12
   12100:	str	r0, [sp, #4]
   12104:	ldr	r0, [sp, #4]
   12108:	sub	r1, r0, #65	; 0x41
   1210c:	cmp	r1, #26
   12110:	str	r0, [sp]
   12114:	bcc	12130 <__assert_fail@plt+0x1040>
   12118:	b	1211c <__assert_fail@plt+0x102c>
   1211c:	ldr	r0, [sp]
   12120:	sub	r1, r0, #97	; 0x61
   12124:	cmp	r1, #25
   12128:	bhi	12140 <__assert_fail@plt+0x1050>
   1212c:	b	12130 <__assert_fail@plt+0x1040>
   12130:	movw	r0, #1
   12134:	and	r0, r0, #1
   12138:	strb	r0, [sp, #11]
   1213c:	b	1214c <__assert_fail@plt+0x105c>
   12140:	movw	r0, #0
   12144:	and	r0, r0, #1
   12148:	strb	r0, [sp, #11]
   1214c:	ldrb	r0, [sp, #11]
   12150:	and	r0, r0, #1
   12154:	add	sp, sp, #12
   12158:	bx	lr
   1215c:	sub	sp, sp, #8
   12160:	str	r0, [sp]
   12164:	ldr	r0, [sp]
   12168:	cmp	r0, #127	; 0x7f
   1216c:	bhi	12184 <__assert_fail@plt+0x1094>
   12170:	b	12174 <__assert_fail@plt+0x1084>
   12174:	movw	r0, #1
   12178:	and	r0, r0, #1
   1217c:	strb	r0, [sp, #7]
   12180:	b	12190 <__assert_fail@plt+0x10a0>
   12184:	movw	r0, #0
   12188:	and	r0, r0, #1
   1218c:	strb	r0, [sp, #7]
   12190:	ldrb	r0, [sp, #7]
   12194:	and	r0, r0, #1
   12198:	add	sp, sp, #8
   1219c:	bx	lr
   121a0:	sub	sp, sp, #8
   121a4:	str	r0, [sp, #4]
   121a8:	ldr	r0, [sp, #4]
   121ac:	cmp	r0, #32
   121b0:	movw	r0, #1
   121b4:	str	r0, [sp]
   121b8:	beq	121d0 <__assert_fail@plt+0x10e0>
   121bc:	ldr	r0, [sp, #4]
   121c0:	cmp	r0, #9
   121c4:	movw	r0, #0
   121c8:	moveq	r0, #1
   121cc:	str	r0, [sp]
   121d0:	ldr	r0, [sp]
   121d4:	and	r0, r0, #1
   121d8:	add	sp, sp, #8
   121dc:	bx	lr
   121e0:	sub	sp, sp, #12
   121e4:	str	r0, [sp, #4]
   121e8:	ldr	r0, [sp, #4]
   121ec:	cmp	r0, #32
   121f0:	str	r0, [sp]
   121f4:	bcc	1220c <__assert_fail@plt+0x111c>
   121f8:	b	121fc <__assert_fail@plt+0x110c>
   121fc:	ldr	r0, [sp]
   12200:	cmp	r0, #127	; 0x7f
   12204:	bne	1221c <__assert_fail@plt+0x112c>
   12208:	b	1220c <__assert_fail@plt+0x111c>
   1220c:	movw	r0, #1
   12210:	and	r0, r0, #1
   12214:	strb	r0, [sp, #11]
   12218:	b	12228 <__assert_fail@plt+0x1138>
   1221c:	movw	r0, #0
   12220:	and	r0, r0, #1
   12224:	strb	r0, [sp, #11]
   12228:	ldrb	r0, [sp, #11]
   1222c:	and	r0, r0, #1
   12230:	add	sp, sp, #12
   12234:	bx	lr
   12238:	sub	sp, sp, #8
   1223c:	str	r0, [sp]
   12240:	ldr	r0, [sp]
   12244:	sub	r0, r0, #48	; 0x30
   12248:	cmp	r0, #9
   1224c:	bhi	12264 <__assert_fail@plt+0x1174>
   12250:	b	12254 <__assert_fail@plt+0x1164>
   12254:	movw	r0, #1
   12258:	and	r0, r0, #1
   1225c:	strb	r0, [sp, #7]
   12260:	b	12270 <__assert_fail@plt+0x1180>
   12264:	movw	r0, #0
   12268:	and	r0, r0, #1
   1226c:	strb	r0, [sp, #7]
   12270:	ldrb	r0, [sp, #7]
   12274:	and	r0, r0, #1
   12278:	add	sp, sp, #8
   1227c:	bx	lr
   12280:	sub	sp, sp, #8
   12284:	str	r0, [sp]
   12288:	ldr	r0, [sp]
   1228c:	sub	r0, r0, #33	; 0x21
   12290:	cmp	r0, #93	; 0x5d
   12294:	bhi	122ac <__assert_fail@plt+0x11bc>
   12298:	b	1229c <__assert_fail@plt+0x11ac>
   1229c:	movw	r0, #1
   122a0:	and	r0, r0, #1
   122a4:	strb	r0, [sp, #7]
   122a8:	b	122b8 <__assert_fail@plt+0x11c8>
   122ac:	movw	r0, #0
   122b0:	and	r0, r0, #1
   122b4:	strb	r0, [sp, #7]
   122b8:	ldrb	r0, [sp, #7]
   122bc:	and	r0, r0, #1
   122c0:	add	sp, sp, #8
   122c4:	bx	lr
   122c8:	sub	sp, sp, #8
   122cc:	str	r0, [sp]
   122d0:	ldr	r0, [sp]
   122d4:	sub	r0, r0, #97	; 0x61
   122d8:	cmp	r0, #25
   122dc:	bhi	122f4 <__assert_fail@plt+0x1204>
   122e0:	b	122e4 <__assert_fail@plt+0x11f4>
   122e4:	movw	r0, #1
   122e8:	and	r0, r0, #1
   122ec:	strb	r0, [sp, #7]
   122f0:	b	12300 <__assert_fail@plt+0x1210>
   122f4:	movw	r0, #0
   122f8:	and	r0, r0, #1
   122fc:	strb	r0, [sp, #7]
   12300:	ldrb	r0, [sp, #7]
   12304:	and	r0, r0, #1
   12308:	add	sp, sp, #8
   1230c:	bx	lr
   12310:	sub	sp, sp, #8
   12314:	str	r0, [sp]
   12318:	ldr	r0, [sp]
   1231c:	sub	r0, r0, #32
   12320:	cmp	r0, #94	; 0x5e
   12324:	bhi	1233c <__assert_fail@plt+0x124c>
   12328:	b	1232c <__assert_fail@plt+0x123c>
   1232c:	movw	r0, #1
   12330:	and	r0, r0, #1
   12334:	strb	r0, [sp, #7]
   12338:	b	12348 <__assert_fail@plt+0x1258>
   1233c:	movw	r0, #0
   12340:	and	r0, r0, #1
   12344:	strb	r0, [sp, #7]
   12348:	ldrb	r0, [sp, #7]
   1234c:	and	r0, r0, #1
   12350:	add	sp, sp, #8
   12354:	bx	lr
   12358:	sub	sp, sp, #12
   1235c:	str	r0, [sp, #4]
   12360:	ldr	r0, [sp, #4]
   12364:	sub	r0, r0, #33	; 0x21
   12368:	cmp	r0, #93	; 0x5d
   1236c:	str	r0, [sp]
   12370:	bhi	1250c <__assert_fail@plt+0x141c>
   12374:	add	r0, pc, #8
   12378:	ldr	r1, [sp]
   1237c:	ldr	r0, [r0, r1, lsl #2]
   12380:	mov	pc, r0
   12384:	strdeq	r2, [r1], -ip
   12388:	strdeq	r2, [r1], -ip
   1238c:	strdeq	r2, [r1], -ip
   12390:	strdeq	r2, [r1], -ip
   12394:	strdeq	r2, [r1], -ip
   12398:	strdeq	r2, [r1], -ip
   1239c:	strdeq	r2, [r1], -ip
   123a0:	strdeq	r2, [r1], -ip
   123a4:	strdeq	r2, [r1], -ip
   123a8:	strdeq	r2, [r1], -ip
   123ac:	strdeq	r2, [r1], -ip
   123b0:	strdeq	r2, [r1], -ip
   123b4:	strdeq	r2, [r1], -ip
   123b8:	strdeq	r2, [r1], -ip
   123bc:	strdeq	r2, [r1], -ip
   123c0:	andeq	r2, r1, ip, lsl #10
   123c4:	andeq	r2, r1, ip, lsl #10
   123c8:	andeq	r2, r1, ip, lsl #10
   123cc:	andeq	r2, r1, ip, lsl #10
   123d0:	andeq	r2, r1, ip, lsl #10
   123d4:	andeq	r2, r1, ip, lsl #10
   123d8:	andeq	r2, r1, ip, lsl #10
   123dc:	andeq	r2, r1, ip, lsl #10
   123e0:	andeq	r2, r1, ip, lsl #10
   123e4:	andeq	r2, r1, ip, lsl #10
   123e8:	strdeq	r2, [r1], -ip
   123ec:	strdeq	r2, [r1], -ip
   123f0:	strdeq	r2, [r1], -ip
   123f4:	strdeq	r2, [r1], -ip
   123f8:	strdeq	r2, [r1], -ip
   123fc:	strdeq	r2, [r1], -ip
   12400:	strdeq	r2, [r1], -ip
   12404:	andeq	r2, r1, ip, lsl #10
   12408:	andeq	r2, r1, ip, lsl #10
   1240c:	andeq	r2, r1, ip, lsl #10
   12410:	andeq	r2, r1, ip, lsl #10
   12414:	andeq	r2, r1, ip, lsl #10
   12418:	andeq	r2, r1, ip, lsl #10
   1241c:	andeq	r2, r1, ip, lsl #10
   12420:	andeq	r2, r1, ip, lsl #10
   12424:	andeq	r2, r1, ip, lsl #10
   12428:	andeq	r2, r1, ip, lsl #10
   1242c:	andeq	r2, r1, ip, lsl #10
   12430:	andeq	r2, r1, ip, lsl #10
   12434:	andeq	r2, r1, ip, lsl #10
   12438:	andeq	r2, r1, ip, lsl #10
   1243c:	andeq	r2, r1, ip, lsl #10
   12440:	andeq	r2, r1, ip, lsl #10
   12444:	andeq	r2, r1, ip, lsl #10
   12448:	andeq	r2, r1, ip, lsl #10
   1244c:	andeq	r2, r1, ip, lsl #10
   12450:	andeq	r2, r1, ip, lsl #10
   12454:	andeq	r2, r1, ip, lsl #10
   12458:	andeq	r2, r1, ip, lsl #10
   1245c:	andeq	r2, r1, ip, lsl #10
   12460:	andeq	r2, r1, ip, lsl #10
   12464:	andeq	r2, r1, ip, lsl #10
   12468:	andeq	r2, r1, ip, lsl #10
   1246c:	strdeq	r2, [r1], -ip
   12470:	strdeq	r2, [r1], -ip
   12474:	strdeq	r2, [r1], -ip
   12478:	strdeq	r2, [r1], -ip
   1247c:	strdeq	r2, [r1], -ip
   12480:	strdeq	r2, [r1], -ip
   12484:	andeq	r2, r1, ip, lsl #10
   12488:	andeq	r2, r1, ip, lsl #10
   1248c:	andeq	r2, r1, ip, lsl #10
   12490:	andeq	r2, r1, ip, lsl #10
   12494:	andeq	r2, r1, ip, lsl #10
   12498:	andeq	r2, r1, ip, lsl #10
   1249c:	andeq	r2, r1, ip, lsl #10
   124a0:	andeq	r2, r1, ip, lsl #10
   124a4:	andeq	r2, r1, ip, lsl #10
   124a8:	andeq	r2, r1, ip, lsl #10
   124ac:	andeq	r2, r1, ip, lsl #10
   124b0:	andeq	r2, r1, ip, lsl #10
   124b4:	andeq	r2, r1, ip, lsl #10
   124b8:	andeq	r2, r1, ip, lsl #10
   124bc:	andeq	r2, r1, ip, lsl #10
   124c0:	andeq	r2, r1, ip, lsl #10
   124c4:	andeq	r2, r1, ip, lsl #10
   124c8:	andeq	r2, r1, ip, lsl #10
   124cc:	andeq	r2, r1, ip, lsl #10
   124d0:	andeq	r2, r1, ip, lsl #10
   124d4:	andeq	r2, r1, ip, lsl #10
   124d8:	andeq	r2, r1, ip, lsl #10
   124dc:	andeq	r2, r1, ip, lsl #10
   124e0:	andeq	r2, r1, ip, lsl #10
   124e4:	andeq	r2, r1, ip, lsl #10
   124e8:	andeq	r2, r1, ip, lsl #10
   124ec:	strdeq	r2, [r1], -ip
   124f0:	strdeq	r2, [r1], -ip
   124f4:	strdeq	r2, [r1], -ip
   124f8:	strdeq	r2, [r1], -ip
   124fc:	movw	r0, #1
   12500:	and	r0, r0, #1
   12504:	strb	r0, [sp, #11]
   12508:	b	12518 <__assert_fail@plt+0x1428>
   1250c:	movw	r0, #0
   12510:	and	r0, r0, #1
   12514:	strb	r0, [sp, #11]
   12518:	ldrb	r0, [sp, #11]
   1251c:	and	r0, r0, #1
   12520:	add	sp, sp, #12
   12524:	bx	lr
   12528:	sub	sp, sp, #12
   1252c:	str	r0, [sp, #4]
   12530:	ldr	r0, [sp, #4]
   12534:	sub	r1, r0, #9
   12538:	cmp	r1, #5
   1253c:	str	r0, [sp]
   12540:	bcc	12558 <__assert_fail@plt+0x1468>
   12544:	b	12548 <__assert_fail@plt+0x1458>
   12548:	ldr	r0, [sp]
   1254c:	cmp	r0, #32
   12550:	bne	12568 <__assert_fail@plt+0x1478>
   12554:	b	12558 <__assert_fail@plt+0x1468>
   12558:	movw	r0, #1
   1255c:	and	r0, r0, #1
   12560:	strb	r0, [sp, #11]
   12564:	b	12574 <__assert_fail@plt+0x1484>
   12568:	movw	r0, #0
   1256c:	and	r0, r0, #1
   12570:	strb	r0, [sp, #11]
   12574:	ldrb	r0, [sp, #11]
   12578:	and	r0, r0, #1
   1257c:	add	sp, sp, #12
   12580:	bx	lr
   12584:	sub	sp, sp, #8
   12588:	str	r0, [sp]
   1258c:	ldr	r0, [sp]
   12590:	sub	r0, r0, #65	; 0x41
   12594:	cmp	r0, #25
   12598:	bhi	125b0 <__assert_fail@plt+0x14c0>
   1259c:	b	125a0 <__assert_fail@plt+0x14b0>
   125a0:	movw	r0, #1
   125a4:	and	r0, r0, #1
   125a8:	strb	r0, [sp, #7]
   125ac:	b	125bc <__assert_fail@plt+0x14cc>
   125b0:	movw	r0, #0
   125b4:	and	r0, r0, #1
   125b8:	strb	r0, [sp, #7]
   125bc:	ldrb	r0, [sp, #7]
   125c0:	and	r0, r0, #1
   125c4:	add	sp, sp, #8
   125c8:	bx	lr
   125cc:	sub	sp, sp, #12
   125d0:	str	r0, [sp, #4]
   125d4:	ldr	r0, [sp, #4]
   125d8:	sub	r1, r0, #48	; 0x30
   125dc:	cmp	r1, #10
   125e0:	str	r0, [sp]
   125e4:	bcc	12614 <__assert_fail@plt+0x1524>
   125e8:	b	125ec <__assert_fail@plt+0x14fc>
   125ec:	ldr	r0, [sp]
   125f0:	sub	r1, r0, #65	; 0x41
   125f4:	cmp	r1, #6
   125f8:	bcc	12614 <__assert_fail@plt+0x1524>
   125fc:	b	12600 <__assert_fail@plt+0x1510>
   12600:	ldr	r0, [sp]
   12604:	sub	r1, r0, #97	; 0x61
   12608:	cmp	r1, #5
   1260c:	bhi	12624 <__assert_fail@plt+0x1534>
   12610:	b	12614 <__assert_fail@plt+0x1524>
   12614:	movw	r0, #1
   12618:	and	r0, r0, #1
   1261c:	strb	r0, [sp, #11]
   12620:	b	12630 <__assert_fail@plt+0x1540>
   12624:	movw	r0, #0
   12628:	and	r0, r0, #1
   1262c:	strb	r0, [sp, #11]
   12630:	ldrb	r0, [sp, #11]
   12634:	and	r0, r0, #1
   12638:	add	sp, sp, #12
   1263c:	bx	lr
   12640:	sub	sp, sp, #8
   12644:	str	r0, [sp]
   12648:	ldr	r0, [sp]
   1264c:	sub	r0, r0, #65	; 0x41
   12650:	cmp	r0, #25
   12654:	bhi	12670 <__assert_fail@plt+0x1580>
   12658:	b	1265c <__assert_fail@plt+0x156c>
   1265c:	ldr	r0, [sp]
   12660:	sub	r0, r0, #65	; 0x41
   12664:	add	r0, r0, #97	; 0x61
   12668:	str	r0, [sp, #4]
   1266c:	b	12678 <__assert_fail@plt+0x1588>
   12670:	ldr	r0, [sp]
   12674:	str	r0, [sp, #4]
   12678:	ldr	r0, [sp, #4]
   1267c:	add	sp, sp, #8
   12680:	bx	lr
   12684:	sub	sp, sp, #8
   12688:	str	r0, [sp]
   1268c:	ldr	r0, [sp]
   12690:	sub	r0, r0, #97	; 0x61
   12694:	cmp	r0, #25
   12698:	bhi	126b4 <__assert_fail@plt+0x15c4>
   1269c:	b	126a0 <__assert_fail@plt+0x15b0>
   126a0:	ldr	r0, [sp]
   126a4:	sub	r0, r0, #97	; 0x61
   126a8:	add	r0, r0, #65	; 0x41
   126ac:	str	r0, [sp, #4]
   126b0:	b	126bc <__assert_fail@plt+0x15cc>
   126b4:	ldr	r0, [sp]
   126b8:	str	r0, [sp, #4]
   126bc:	ldr	r0, [sp, #4]
   126c0:	add	sp, sp, #8
   126c4:	bx	lr
   126c8:	sub	sp, sp, #4
   126cc:	str	r0, [sp]
   126d0:	ldr	r0, [sp]
   126d4:	movw	r1, #57736	; 0xe188
   126d8:	movt	r1, #2
   126dc:	str	r0, [r1]
   126e0:	add	sp, sp, #4
   126e4:	bx	lr
   126e8:	sub	sp, sp, #4
   126ec:	and	r0, r0, #1
   126f0:	strb	r0, [sp, #3]
   126f4:	ldrb	r0, [sp, #3]
   126f8:	and	r0, r0, #1
   126fc:	movw	r1, #57740	; 0xe18c
   12700:	movt	r1, #2
   12704:	strb	r0, [r1]
   12708:	add	sp, sp, #4
   1270c:	bx	lr
   12710:	push	{fp, lr}
   12714:	mov	fp, sp
   12718:	sub	sp, sp, #24
   1271c:	movw	r0, #57684	; 0xe154
   12720:	movt	r0, #2
   12724:	ldr	r0, [r0]
   12728:	bl	1b1e4 <__assert_fail@plt+0xa0f4>
   1272c:	cmp	r0, #0
   12730:	beq	12800 <__assert_fail@plt+0x1710>
   12734:	movw	r0, #57740	; 0xe18c
   12738:	movt	r0, #2
   1273c:	ldrb	r0, [r0]
   12740:	tst	r0, #1
   12744:	beq	12758 <__assert_fail@plt+0x1668>
   12748:	bl	11000 <__errno_location@plt>
   1274c:	ldr	r0, [r0]
   12750:	cmp	r0, #32
   12754:	beq	12800 <__assert_fail@plt+0x1710>
   12758:	movw	r0, #55591	; 0xd927
   1275c:	movt	r0, #1
   12760:	bl	10fd0 <gettext@plt>
   12764:	str	r0, [fp, #-4]
   12768:	movw	r0, #57736	; 0xe188
   1276c:	movt	r0, #2
   12770:	ldr	r0, [r0]
   12774:	movw	r1, #0
   12778:	cmp	r0, r1
   1277c:	beq	127d4 <__assert_fail@plt+0x16e4>
   12780:	bl	11000 <__errno_location@plt>
   12784:	ldr	r1, [r0]
   12788:	movw	r0, #57736	; 0xe188
   1278c:	movt	r0, #2
   12790:	ldr	r0, [r0]
   12794:	str	r1, [fp, #-8]
   12798:	bl	15024 <__assert_fail@plt+0x3f34>
   1279c:	ldr	r1, [fp, #-4]
   127a0:	movw	r2, #0
   127a4:	str	r0, [sp, #12]
   127a8:	mov	r0, r2
   127ac:	ldr	r2, [fp, #-8]
   127b0:	str	r1, [sp, #8]
   127b4:	mov	r1, r2
   127b8:	movw	r2, #55603	; 0xd933
   127bc:	movt	r2, #1
   127c0:	ldr	r3, [sp, #12]
   127c4:	ldr	ip, [sp, #8]
   127c8:	str	ip, [sp]
   127cc:	bl	10f64 <error@plt>
   127d0:	b	127f0 <__assert_fail@plt+0x1700>
   127d4:	bl	11000 <__errno_location@plt>
   127d8:	ldr	r1, [r0]
   127dc:	ldr	r3, [fp, #-4]
   127e0:	movw	r0, #0
   127e4:	movw	r2, #55607	; 0xd937
   127e8:	movt	r2, #1
   127ec:	bl	10f64 <error@plt>
   127f0:	movw	r0, #57592	; 0xe0f8
   127f4:	movt	r0, #2
   127f8:	ldr	r0, [r0]
   127fc:	bl	10ebc <_exit@plt>
   12800:	movw	r0, #57680	; 0xe150
   12804:	movt	r0, #2
   12808:	ldr	r0, [r0]
   1280c:	bl	1b1e4 <__assert_fail@plt+0xa0f4>
   12810:	cmp	r0, #0
   12814:	beq	12828 <__assert_fail@plt+0x1738>
   12818:	movw	r0, #57592	; 0xe0f8
   1281c:	movt	r0, #2
   12820:	ldr	r0, [r0]
   12824:	bl	10ebc <_exit@plt>
   12828:	mov	sp, fp
   1282c:	pop	{fp, pc}
   12830:	push	{fp, lr}
   12834:	mov	fp, sp
   12838:	sub	sp, sp, #8
   1283c:	str	r0, [sp, #4]
   12840:	ldr	r0, [sp, #4]
   12844:	bl	12938 <__assert_fail@plt+0x1848>
   12848:	str	r0, [sp]
   1284c:	ldr	r0, [sp]
   12850:	movw	r1, #0
   12854:	cmp	r0, r1
   12858:	bne	12860 <__assert_fail@plt+0x1770>
   1285c:	bl	189fc <__assert_fail@plt+0x790c>
   12860:	ldr	r0, [sp]
   12864:	mov	sp, fp
   12868:	pop	{fp, pc}
   1286c:	push	{fp, lr}
   12870:	mov	fp, sp
   12874:	sub	sp, sp, #16
   12878:	str	r0, [fp, #-4]
   1287c:	movw	r0, #0
   12880:	str	r0, [sp, #8]
   12884:	ldr	r0, [sp, #8]
   12888:	cmp	r0, #0
   1288c:	beq	1289c <__assert_fail@plt+0x17ac>
   12890:	movw	r0, #0
   12894:	str	r0, [sp]
   12898:	b	128c0 <__assert_fail@plt+0x17d0>
   1289c:	ldr	r0, [fp, #-4]
   128a0:	ldrb	r0, [r0]
   128a4:	cmp	r0, #47	; 0x2f
   128a8:	movw	r0, #0
   128ac:	moveq	r0, #1
   128b0:	tst	r0, #1
   128b4:	movw	r0, #1
   128b8:	moveq	r0, #0
   128bc:	str	r0, [sp]
   128c0:	ldr	r0, [sp]
   128c4:	ldr	r1, [sp, #8]
   128c8:	add	r0, r1, r0
   128cc:	str	r0, [sp, #8]
   128d0:	ldr	r0, [fp, #-4]
   128d4:	bl	1ac38 <__assert_fail@plt+0x9b48>
   128d8:	ldr	r1, [fp, #-4]
   128dc:	sub	r0, r0, r1
   128e0:	str	r0, [sp, #4]
   128e4:	ldr	r0, [sp, #8]
   128e8:	ldr	r1, [sp, #4]
   128ec:	cmp	r0, r1
   128f0:	bcs	1292c <__assert_fail@plt+0x183c>
   128f4:	ldr	r0, [fp, #-4]
   128f8:	ldr	r1, [sp, #4]
   128fc:	sub	r1, r1, #1
   12900:	add	r0, r0, r1
   12904:	ldrb	r0, [r0]
   12908:	cmp	r0, #47	; 0x2f
   1290c:	beq	12914 <__assert_fail@plt+0x1824>
   12910:	b	1292c <__assert_fail@plt+0x183c>
   12914:	b	12918 <__assert_fail@plt+0x1828>
   12918:	ldr	r0, [sp, #4]
   1291c:	mvn	r1, #0
   12920:	add	r0, r0, r1
   12924:	str	r0, [sp, #4]
   12928:	b	128e4 <__assert_fail@plt+0x17f4>
   1292c:	ldr	r0, [sp, #4]
   12930:	mov	sp, fp
   12934:	pop	{fp, pc}
   12938:	push	{fp, lr}
   1293c:	mov	fp, sp
   12940:	sub	sp, sp, #24
   12944:	str	r0, [fp, #-8]
   12948:	ldr	r0, [fp, #-8]
   1294c:	bl	1286c <__assert_fail@plt+0x177c>
   12950:	str	r0, [sp, #12]
   12954:	ldr	r0, [sp, #12]
   12958:	cmp	r0, #0
   1295c:	movw	r0, #1
   12960:	str	r0, [sp]
   12964:	beq	12974 <__assert_fail@plt+0x1884>
   12968:	movw	r0, #0
   1296c:	str	r0, [sp]
   12970:	b	12974 <__assert_fail@plt+0x1884>
   12974:	ldr	r0, [sp]
   12978:	and	r0, r0, #1
   1297c:	strb	r0, [sp, #11]
   12980:	ldr	r0, [sp, #12]
   12984:	ldrb	r1, [sp, #11]
   12988:	and	r1, r1, #1
   1298c:	add	r0, r0, r1
   12990:	add	r0, r0, #1
   12994:	bl	1aa9c <__assert_fail@plt+0x99ac>
   12998:	str	r0, [sp, #4]
   1299c:	ldr	r0, [sp, #4]
   129a0:	movw	r1, #0
   129a4:	cmp	r0, r1
   129a8:	bne	129b8 <__assert_fail@plt+0x18c8>
   129ac:	movw	r0, #0
   129b0:	str	r0, [fp, #-4]
   129b4:	b	12a0c <__assert_fail@plt+0x191c>
   129b8:	ldr	r0, [sp, #4]
   129bc:	ldr	r1, [fp, #-8]
   129c0:	ldr	r2, [sp, #12]
   129c4:	bl	10ec8 <memcpy@plt>
   129c8:	ldrb	r0, [sp, #11]
   129cc:	tst	r0, #1
   129d0:	beq	129f0 <__assert_fail@plt+0x1900>
   129d4:	ldr	r0, [sp, #4]
   129d8:	ldr	r1, [sp, #12]
   129dc:	add	r2, r1, #1
   129e0:	str	r2, [sp, #12]
   129e4:	add	r0, r0, r1
   129e8:	movw	r1, #46	; 0x2e
   129ec:	strb	r1, [r0]
   129f0:	ldr	r0, [sp, #4]
   129f4:	ldr	r1, [sp, #12]
   129f8:	add	r0, r0, r1
   129fc:	movw	r1, #0
   12a00:	strb	r1, [r0]
   12a04:	ldr	r0, [sp, #4]
   12a08:	str	r0, [fp, #-4]
   12a0c:	ldr	r0, [fp, #-4]
   12a10:	mov	sp, fp
   12a14:	pop	{fp, pc}
   12a18:	push	{fp, lr}
   12a1c:	mov	fp, sp
   12a20:	sub	sp, sp, #16
   12a24:	str	r0, [fp, #-4]
   12a28:	str	r1, [sp, #8]
   12a2c:	str	r2, [sp, #4]
   12a30:	ldr	r0, [fp, #-4]
   12a34:	ldr	r1, [sp, #8]
   12a38:	ldr	r2, [sp, #4]
   12a3c:	bl	12a64 <__assert_fail@plt+0x1974>
   12a40:	str	r0, [sp]
   12a44:	ldr	r0, [sp]
   12a48:	movw	r1, #0
   12a4c:	cmp	r0, r1
   12a50:	bne	12a58 <__assert_fail@plt+0x1968>
   12a54:	bl	189fc <__assert_fail@plt+0x790c>
   12a58:	ldr	r0, [sp]
   12a5c:	mov	sp, fp
   12a60:	pop	{fp, pc}
   12a64:	push	{fp, lr}
   12a68:	mov	fp, sp
   12a6c:	sub	sp, sp, #64	; 0x40
   12a70:	str	r0, [fp, #-8]
   12a74:	str	r1, [fp, #-12]
   12a78:	str	r2, [fp, #-16]
   12a7c:	ldr	r0, [fp, #-8]
   12a80:	bl	1ac38 <__assert_fail@plt+0x9b48>
   12a84:	str	r0, [fp, #-20]	; 0xffffffec
   12a88:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a8c:	bl	1ace4 <__assert_fail@plt+0x9bf4>
   12a90:	str	r0, [fp, #-24]	; 0xffffffe8
   12a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a98:	ldr	r1, [fp, #-8]
   12a9c:	sub	r0, r0, r1
   12aa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12aa4:	add	r0, r0, r1
   12aa8:	str	r0, [fp, #-28]	; 0xffffffe4
   12aac:	ldr	r0, [fp, #-12]
   12ab0:	bl	10fdc <strlen@plt>
   12ab4:	str	r0, [sp, #32]
   12ab8:	movw	r0, #0
   12abc:	strb	r0, [sp, #31]
   12ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ac4:	cmp	r0, #0
   12ac8:	beq	12b04 <__assert_fail@plt+0x1a14>
   12acc:	ldr	r0, [fp, #-8]
   12ad0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ad4:	sub	r1, r1, #1
   12ad8:	add	r0, r0, r1
   12adc:	ldrb	r0, [r0]
   12ae0:	cmp	r0, #47	; 0x2f
   12ae4:	beq	12b00 <__assert_fail@plt+0x1a10>
   12ae8:	ldr	r0, [fp, #-12]
   12aec:	ldrb	r0, [r0]
   12af0:	cmp	r0, #47	; 0x2f
   12af4:	beq	12b00 <__assert_fail@plt+0x1a10>
   12af8:	movw	r0, #47	; 0x2f
   12afc:	strb	r0, [sp, #31]
   12b00:	b	12b20 <__assert_fail@plt+0x1a30>
   12b04:	ldr	r0, [fp, #-12]
   12b08:	ldrb	r0, [r0]
   12b0c:	cmp	r0, #47	; 0x2f
   12b10:	bne	12b1c <__assert_fail@plt+0x1a2c>
   12b14:	movw	r0, #46	; 0x2e
   12b18:	strb	r0, [sp, #31]
   12b1c:	b	12b20 <__assert_fail@plt+0x1a30>
   12b20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b24:	ldrb	r1, [sp, #31]
   12b28:	cmp	r1, #0
   12b2c:	movw	r1, #0
   12b30:	movne	r1, #1
   12b34:	and	r1, r1, #1
   12b38:	add	r0, r0, r1
   12b3c:	ldr	r1, [sp, #32]
   12b40:	add	r0, r0, r1
   12b44:	add	r0, r0, #1
   12b48:	bl	1aa9c <__assert_fail@plt+0x99ac>
   12b4c:	str	r0, [sp, #24]
   12b50:	ldr	r0, [sp, #24]
   12b54:	movw	r1, #0
   12b58:	cmp	r0, r1
   12b5c:	bne	12b6c <__assert_fail@plt+0x1a7c>
   12b60:	movw	r0, #0
   12b64:	str	r0, [fp, #-4]
   12b68:	b	12c18 <__assert_fail@plt+0x1b28>
   12b6c:	ldr	r0, [sp, #24]
   12b70:	ldr	r1, [fp, #-8]
   12b74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b78:	str	r0, [sp, #16]
   12b7c:	str	r2, [sp, #12]
   12b80:	bl	10ec8 <memcpy@plt>
   12b84:	ldr	r1, [sp, #16]
   12b88:	ldr	r2, [sp, #12]
   12b8c:	add	r3, r1, r2
   12b90:	str	r3, [sp, #20]
   12b94:	ldrb	r3, [sp, #31]
   12b98:	ldr	ip, [sp, #20]
   12b9c:	strb	r3, [ip]
   12ba0:	ldrb	r3, [sp, #31]
   12ba4:	cmp	r3, #0
   12ba8:	movw	r3, #0
   12bac:	movne	r3, #1
   12bb0:	and	r3, r3, #1
   12bb4:	ldr	ip, [sp, #20]
   12bb8:	add	r3, ip, r3
   12bbc:	str	r3, [sp, #20]
   12bc0:	ldr	r3, [fp, #-16]
   12bc4:	movw	ip, #0
   12bc8:	cmp	r3, ip
   12bcc:	beq	12bdc <__assert_fail@plt+0x1aec>
   12bd0:	ldr	r0, [sp, #20]
   12bd4:	ldr	r1, [fp, #-16]
   12bd8:	str	r0, [r1]
   12bdc:	ldr	r0, [sp, #20]
   12be0:	ldr	r1, [fp, #-12]
   12be4:	ldr	r2, [sp, #32]
   12be8:	str	r0, [sp, #8]
   12bec:	str	r2, [sp, #4]
   12bf0:	bl	10ec8 <memcpy@plt>
   12bf4:	ldr	r1, [sp, #8]
   12bf8:	ldr	r2, [sp, #4]
   12bfc:	add	r3, r1, r2
   12c00:	str	r3, [sp, #20]
   12c04:	ldr	r3, [sp, #20]
   12c08:	movw	ip, #0
   12c0c:	strb	ip, [r3]
   12c10:	ldr	r3, [sp, #24]
   12c14:	str	r3, [fp, #-4]
   12c18:	ldr	r0, [fp, #-4]
   12c1c:	mov	sp, fp
   12c20:	pop	{fp, pc}
   12c24:	push	{fp, lr}
   12c28:	mov	fp, sp
   12c2c:	sub	sp, sp, #16
   12c30:	str	r0, [fp, #-4]
   12c34:	bl	11000 <__errno_location@plt>
   12c38:	ldr	r0, [r0]
   12c3c:	str	r0, [sp, #8]
   12c40:	ldr	r0, [fp, #-4]
   12c44:	bl	10eb0 <free@plt>
   12c48:	ldr	r0, [sp, #8]
   12c4c:	str	r0, [sp, #4]
   12c50:	bl	11000 <__errno_location@plt>
   12c54:	ldr	r1, [sp, #4]
   12c58:	str	r1, [r0]
   12c5c:	mov	sp, fp
   12c60:	pop	{fp, pc}
   12c64:	push	{fp, lr}
   12c68:	mov	fp, sp
   12c6c:	sub	sp, sp, #24
   12c70:	str	r0, [fp, #-4]
   12c74:	ldr	r0, [fp, #-4]
   12c78:	movw	r1, #0
   12c7c:	cmp	r0, r1
   12c80:	bne	12ca4 <__assert_fail@plt+0x1bb4>
   12c84:	movw	r0, #57680	; 0xe150
   12c88:	movt	r0, #2
   12c8c:	ldr	r1, [r0]
   12c90:	movw	r0, #55610	; 0xd93a
   12c94:	movt	r0, #1
   12c98:	bl	110cc <fputs@plt>
   12c9c:	str	r0, [sp, #8]
   12ca0:	bl	110e4 <abort@plt>
   12ca4:	ldr	r0, [fp, #-4]
   12ca8:	movw	r1, #47	; 0x2f
   12cac:	bl	1109c <strrchr@plt>
   12cb0:	str	r0, [fp, #-8]
   12cb4:	ldr	r0, [fp, #-8]
   12cb8:	movw	r1, #0
   12cbc:	cmp	r0, r1
   12cc0:	beq	12cd4 <__assert_fail@plt+0x1be4>
   12cc4:	ldr	r0, [fp, #-8]
   12cc8:	add	r0, r0, #1
   12ccc:	str	r0, [sp, #4]
   12cd0:	b	12cdc <__assert_fail@plt+0x1bec>
   12cd4:	ldr	r0, [fp, #-4]
   12cd8:	str	r0, [sp, #4]
   12cdc:	ldr	r0, [sp, #4]
   12ce0:	str	r0, [sp, #12]
   12ce4:	ldr	r0, [sp, #12]
   12ce8:	ldr	r1, [fp, #-4]
   12cec:	sub	r0, r0, r1
   12cf0:	cmp	r0, #7
   12cf4:	blt	12d60 <__assert_fail@plt+0x1c70>
   12cf8:	ldr	r0, [sp, #12]
   12cfc:	mvn	r1, #6
   12d00:	add	r0, r0, r1
   12d04:	movw	r1, #55666	; 0xd972
   12d08:	movt	r1, #1
   12d0c:	movw	r2, #7
   12d10:	bl	110d8 <strncmp@plt>
   12d14:	cmp	r0, #0
   12d18:	bne	12d60 <__assert_fail@plt+0x1c70>
   12d1c:	ldr	r0, [sp, #12]
   12d20:	str	r0, [fp, #-4]
   12d24:	ldr	r0, [sp, #12]
   12d28:	movw	r1, #55674	; 0xd97a
   12d2c:	movt	r1, #1
   12d30:	movw	r2, #3
   12d34:	bl	110d8 <strncmp@plt>
   12d38:	cmp	r0, #0
   12d3c:	bne	12d5c <__assert_fail@plt+0x1c6c>
   12d40:	ldr	r0, [sp, #12]
   12d44:	add	r0, r0, #3
   12d48:	str	r0, [fp, #-4]
   12d4c:	ldr	r0, [fp, #-4]
   12d50:	movw	r1, #57664	; 0xe140
   12d54:	movt	r1, #2
   12d58:	str	r0, [r1]
   12d5c:	b	12d60 <__assert_fail@plt+0x1c70>
   12d60:	ldr	r0, [fp, #-4]
   12d64:	movw	r1, #57744	; 0xe190
   12d68:	movt	r1, #2
   12d6c:	str	r0, [r1]
   12d70:	ldr	r0, [fp, #-4]
   12d74:	movw	r1, #57668	; 0xe144
   12d78:	movt	r1, #2
   12d7c:	str	r0, [r1]
   12d80:	mov	sp, fp
   12d84:	pop	{fp, pc}
   12d88:	push	{fp, lr}
   12d8c:	mov	fp, sp
   12d90:	sub	sp, sp, #24
   12d94:	str	r0, [fp, #-4]
   12d98:	bl	11000 <__errno_location@plt>
   12d9c:	ldr	r0, [r0]
   12da0:	str	r0, [fp, #-8]
   12da4:	ldr	r0, [fp, #-4]
   12da8:	movw	r1, #0
   12dac:	cmp	r0, r1
   12db0:	beq	12dc0 <__assert_fail@plt+0x1cd0>
   12db4:	ldr	r0, [fp, #-4]
   12db8:	str	r0, [sp, #8]
   12dbc:	b	12dd0 <__assert_fail@plt+0x1ce0>
   12dc0:	movw	r0, #57748	; 0xe194
   12dc4:	movt	r0, #2
   12dc8:	str	r0, [sp, #8]
   12dcc:	b	12dd0 <__assert_fail@plt+0x1ce0>
   12dd0:	ldr	r0, [sp, #8]
   12dd4:	movw	r1, #48	; 0x30
   12dd8:	bl	188fc <__assert_fail@plt+0x780c>
   12ddc:	str	r0, [sp, #12]
   12de0:	ldr	r0, [fp, #-8]
   12de4:	str	r0, [sp, #4]
   12de8:	bl	11000 <__errno_location@plt>
   12dec:	ldr	r1, [sp, #4]
   12df0:	str	r1, [r0]
   12df4:	ldr	r0, [sp, #12]
   12df8:	mov	sp, fp
   12dfc:	pop	{fp, pc}
   12e00:	sub	sp, sp, #8
   12e04:	str	r0, [sp, #4]
   12e08:	ldr	r0, [sp, #4]
   12e0c:	movw	r1, #0
   12e10:	cmp	r0, r1
   12e14:	beq	12e24 <__assert_fail@plt+0x1d34>
   12e18:	ldr	r0, [sp, #4]
   12e1c:	str	r0, [sp]
   12e20:	b	12e34 <__assert_fail@plt+0x1d44>
   12e24:	movw	r0, #57748	; 0xe194
   12e28:	movt	r0, #2
   12e2c:	str	r0, [sp]
   12e30:	b	12e34 <__assert_fail@plt+0x1d44>
   12e34:	ldr	r0, [sp]
   12e38:	ldr	r0, [r0]
   12e3c:	add	sp, sp, #8
   12e40:	bx	lr
   12e44:	sub	sp, sp, #16
   12e48:	str	r0, [sp, #12]
   12e4c:	str	r1, [sp, #8]
   12e50:	ldr	r0, [sp, #8]
   12e54:	ldr	r1, [sp, #12]
   12e58:	movw	r2, #0
   12e5c:	cmp	r1, r2
   12e60:	str	r0, [sp, #4]
   12e64:	beq	12e74 <__assert_fail@plt+0x1d84>
   12e68:	ldr	r0, [sp, #12]
   12e6c:	str	r0, [sp]
   12e70:	b	12e84 <__assert_fail@plt+0x1d94>
   12e74:	movw	r0, #57748	; 0xe194
   12e78:	movt	r0, #2
   12e7c:	str	r0, [sp]
   12e80:	b	12e84 <__assert_fail@plt+0x1d94>
   12e84:	ldr	r0, [sp]
   12e88:	ldr	r1, [sp, #4]
   12e8c:	str	r1, [r0]
   12e90:	add	sp, sp, #16
   12e94:	bx	lr
   12e98:	sub	sp, sp, #32
   12e9c:	str	r0, [sp, #28]
   12ea0:	strb	r1, [sp, #27]
   12ea4:	str	r2, [sp, #20]
   12ea8:	ldrb	r0, [sp, #27]
   12eac:	strb	r0, [sp, #19]
   12eb0:	ldr	r0, [sp, #28]
   12eb4:	movw	r1, #0
   12eb8:	cmp	r0, r1
   12ebc:	beq	12ecc <__assert_fail@plt+0x1ddc>
   12ec0:	ldr	r0, [sp, #28]
   12ec4:	str	r0, [sp]
   12ec8:	b	12edc <__assert_fail@plt+0x1dec>
   12ecc:	movw	r0, #57748	; 0xe194
   12ed0:	movt	r0, #2
   12ed4:	str	r0, [sp]
   12ed8:	b	12edc <__assert_fail@plt+0x1dec>
   12edc:	ldr	r0, [sp]
   12ee0:	add	r0, r0, #8
   12ee4:	ldrb	r1, [sp, #19]
   12ee8:	lsr	r1, r1, #5
   12eec:	add	r0, r0, r1, lsl #2
   12ef0:	str	r0, [sp, #12]
   12ef4:	ldrb	r0, [sp, #19]
   12ef8:	and	r0, r0, #31
   12efc:	str	r0, [sp, #8]
   12f00:	ldr	r0, [sp, #12]
   12f04:	ldr	r0, [r0]
   12f08:	ldr	r1, [sp, #8]
   12f0c:	lsr	r0, r0, r1
   12f10:	and	r0, r0, #1
   12f14:	str	r0, [sp, #4]
   12f18:	ldr	r0, [sp, #20]
   12f1c:	and	r0, r0, #1
   12f20:	ldr	r1, [sp, #4]
   12f24:	eor	r0, r0, r1
   12f28:	ldr	r1, [sp, #8]
   12f2c:	lsl	r0, r0, r1
   12f30:	ldr	r1, [sp, #12]
   12f34:	ldr	r2, [r1]
   12f38:	eor	r0, r2, r0
   12f3c:	str	r0, [r1]
   12f40:	ldr	r0, [sp, #4]
   12f44:	add	sp, sp, #32
   12f48:	bx	lr
   12f4c:	sub	sp, sp, #12
   12f50:	str	r0, [sp, #8]
   12f54:	str	r1, [sp, #4]
   12f58:	ldr	r0, [sp, #8]
   12f5c:	movw	r1, #0
   12f60:	cmp	r0, r1
   12f64:	bne	12f74 <__assert_fail@plt+0x1e84>
   12f68:	movw	r0, #57748	; 0xe194
   12f6c:	movt	r0, #2
   12f70:	str	r0, [sp, #8]
   12f74:	ldr	r0, [sp, #8]
   12f78:	ldr	r0, [r0, #4]
   12f7c:	str	r0, [sp]
   12f80:	ldr	r0, [sp, #4]
   12f84:	ldr	r1, [sp, #8]
   12f88:	str	r0, [r1, #4]
   12f8c:	ldr	r0, [sp]
   12f90:	add	sp, sp, #12
   12f94:	bx	lr
   12f98:	push	{fp, lr}
   12f9c:	mov	fp, sp
   12fa0:	sub	sp, sp, #16
   12fa4:	str	r0, [fp, #-4]
   12fa8:	str	r1, [sp, #8]
   12fac:	str	r2, [sp, #4]
   12fb0:	ldr	r0, [fp, #-4]
   12fb4:	movw	r1, #0
   12fb8:	cmp	r0, r1
   12fbc:	bne	12fcc <__assert_fail@plt+0x1edc>
   12fc0:	movw	r0, #57748	; 0xe194
   12fc4:	movt	r0, #2
   12fc8:	str	r0, [fp, #-4]
   12fcc:	ldr	r0, [fp, #-4]
   12fd0:	movw	r1, #10
   12fd4:	str	r1, [r0]
   12fd8:	ldr	r0, [sp, #8]
   12fdc:	movw	r1, #0
   12fe0:	cmp	r0, r1
   12fe4:	beq	12ff8 <__assert_fail@plt+0x1f08>
   12fe8:	ldr	r0, [sp, #4]
   12fec:	movw	r1, #0
   12ff0:	cmp	r0, r1
   12ff4:	bne	12ffc <__assert_fail@plt+0x1f0c>
   12ff8:	bl	110e4 <abort@plt>
   12ffc:	ldr	r0, [sp, #8]
   13000:	ldr	r1, [fp, #-4]
   13004:	str	r0, [r1, #40]	; 0x28
   13008:	ldr	r0, [sp, #4]
   1300c:	ldr	r1, [fp, #-4]
   13010:	str	r0, [r1, #44]	; 0x2c
   13014:	mov	sp, fp
   13018:	pop	{fp, pc}
   1301c:	push	{r4, r5, r6, sl, fp, lr}
   13020:	add	fp, sp, #16
   13024:	sub	sp, sp, #56	; 0x38
   13028:	ldr	ip, [fp, #8]
   1302c:	str	r0, [fp, #-20]	; 0xffffffec
   13030:	str	r1, [fp, #-24]	; 0xffffffe8
   13034:	str	r2, [fp, #-28]	; 0xffffffe4
   13038:	str	r3, [fp, #-32]	; 0xffffffe0
   1303c:	ldr	r0, [fp, #8]
   13040:	movw	r1, #0
   13044:	cmp	r0, r1
   13048:	beq	13058 <__assert_fail@plt+0x1f68>
   1304c:	ldr	r0, [fp, #8]
   13050:	str	r0, [sp, #24]
   13054:	b	13068 <__assert_fail@plt+0x1f78>
   13058:	movw	r0, #57748	; 0xe194
   1305c:	movt	r0, #2
   13060:	str	r0, [sp, #24]
   13064:	b	13068 <__assert_fail@plt+0x1f78>
   13068:	ldr	r0, [sp, #24]
   1306c:	str	r0, [sp, #36]	; 0x24
   13070:	bl	11000 <__errno_location@plt>
   13074:	ldr	r0, [r0]
   13078:	str	r0, [sp, #32]
   1307c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13084:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13088:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1308c:	ldr	ip, [sp, #36]	; 0x24
   13090:	ldr	ip, [ip]
   13094:	ldr	lr, [sp, #36]	; 0x24
   13098:	ldr	lr, [lr, #4]
   1309c:	ldr	r4, [sp, #36]	; 0x24
   130a0:	add	r4, r4, #8
   130a4:	ldr	r5, [sp, #36]	; 0x24
   130a8:	ldr	r5, [r5, #40]	; 0x28
   130ac:	ldr	r6, [sp, #36]	; 0x24
   130b0:	ldr	r6, [r6, #44]	; 0x2c
   130b4:	str	ip, [sp]
   130b8:	str	lr, [sp, #4]
   130bc:	str	r4, [sp, #8]
   130c0:	str	r5, [sp, #12]
   130c4:	str	r6, [sp, #16]
   130c8:	bl	130f0 <__assert_fail@plt+0x2000>
   130cc:	str	r0, [sp, #28]
   130d0:	ldr	r0, [sp, #32]
   130d4:	str	r0, [sp, #20]
   130d8:	bl	11000 <__errno_location@plt>
   130dc:	ldr	r1, [sp, #20]
   130e0:	str	r1, [r0]
   130e4:	ldr	r0, [sp, #28]
   130e8:	sub	sp, fp, #16
   130ec:	pop	{r4, r5, r6, sl, fp, pc}
   130f0:	push	{r4, r5, r6, sl, fp, lr}
   130f4:	add	fp, sp, #16
   130f8:	sub	sp, sp, #160	; 0xa0
   130fc:	ldr	ip, [fp, #24]
   13100:	ldr	lr, [fp, #20]
   13104:	ldr	r4, [fp, #16]
   13108:	ldr	r5, [fp, #12]
   1310c:	ldr	r6, [fp, #8]
   13110:	str	r0, [fp, #-24]	; 0xffffffe8
   13114:	str	r1, [fp, #-28]	; 0xffffffe4
   13118:	str	r2, [fp, #-32]	; 0xffffffe0
   1311c:	str	r3, [fp, #-36]	; 0xffffffdc
   13120:	movw	r0, #0
   13124:	str	r0, [fp, #-44]	; 0xffffffd4
   13128:	str	r0, [fp, #-48]	; 0xffffffd0
   1312c:	str	r0, [fp, #-52]	; 0xffffffcc
   13130:	str	r0, [fp, #-56]	; 0xffffffc8
   13134:	movw	r0, #0
   13138:	strb	r0, [fp, #-57]	; 0xffffffc7
   1313c:	str	ip, [sp, #72]	; 0x48
   13140:	str	lr, [sp, #68]	; 0x44
   13144:	str	r4, [sp, #64]	; 0x40
   13148:	str	r5, [sp, #60]	; 0x3c
   1314c:	str	r6, [sp, #56]	; 0x38
   13150:	bl	10f34 <__ctype_get_mb_cur_max@plt>
   13154:	cmp	r0, #1
   13158:	movw	r0, #0
   1315c:	moveq	r0, #1
   13160:	and	r0, r0, #1
   13164:	strb	r0, [fp, #-58]	; 0xffffffc6
   13168:	ldr	r0, [fp, #12]
   1316c:	and	r0, r0, #2
   13170:	cmp	r0, #0
   13174:	movw	r0, #0
   13178:	movne	r0, #1
   1317c:	and	r0, r0, #1
   13180:	strb	r0, [fp, #-59]	; 0xffffffc5
   13184:	movw	r0, #0
   13188:	strb	r0, [fp, #-60]	; 0xffffffc4
   1318c:	strb	r0, [fp, #-61]	; 0xffffffc3
   13190:	movw	r0, #1
   13194:	strb	r0, [fp, #-62]	; 0xffffffc2
   13198:	ldr	r0, [fp, #8]
   1319c:	cmp	r0, #10
   131a0:	str	r0, [sp, #52]	; 0x34
   131a4:	bhi	133cc <__assert_fail@plt+0x22dc>
   131a8:	add	r0, pc, #8
   131ac:	ldr	r1, [sp, #52]	; 0x34
   131b0:	ldr	r0, [r0, r1, lsl #2]
   131b4:	mov	pc, r0
   131b8:	andeq	r3, r1, r0, asr #7
   131bc:	andeq	r3, r1, ip, lsr r3
   131c0:	andeq	r3, r1, ip, asr r3
   131c4:	andeq	r3, r1, r4, lsr r3
   131c8:	andeq	r3, r1, r4, asr #6
   131cc:	strdeq	r3, [r1], -r4
   131d0:	andeq	r3, r1, r4, ror #3
   131d4:	andeq	r3, r1, r8, asr r2
   131d8:	andeq	r3, r1, ip, ror #4
   131dc:	andeq	r3, r1, ip, ror #4
   131e0:	andeq	r3, r1, ip, ror #4
   131e4:	movw	r0, #5
   131e8:	str	r0, [fp, #8]
   131ec:	movw	r0, #1
   131f0:	strb	r0, [fp, #-59]	; 0xffffffc5
   131f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   131f8:	tst	r0, #1
   131fc:	bne	13238 <__assert_fail@plt+0x2148>
   13200:	b	13204 <__assert_fail@plt+0x2114>
   13204:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13208:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1320c:	cmp	r0, r1
   13210:	bcs	13228 <__assert_fail@plt+0x2138>
   13214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13218:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1321c:	add	r0, r0, r1
   13220:	movw	r1, #34	; 0x22
   13224:	strb	r1, [r0]
   13228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1322c:	add	r0, r0, #1
   13230:	str	r0, [fp, #-44]	; 0xffffffd4
   13234:	b	13238 <__assert_fail@plt+0x2148>
   13238:	movw	r0, #1
   1323c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13240:	movw	r0, #55754	; 0xd9ca
   13244:	movt	r0, #1
   13248:	str	r0, [fp, #-52]	; 0xffffffcc
   1324c:	movw	r0, #1
   13250:	str	r0, [fp, #-56]	; 0xffffffc8
   13254:	b	133d0 <__assert_fail@plt+0x22e0>
   13258:	movw	r0, #1
   1325c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13260:	movw	r0, #0
   13264:	strb	r0, [fp, #-59]	; 0xffffffc5
   13268:	b	133d0 <__assert_fail@plt+0x22e0>
   1326c:	ldr	r0, [fp, #8]
   13270:	cmp	r0, #10
   13274:	beq	132a0 <__assert_fail@plt+0x21b0>
   13278:	ldr	r1, [fp, #8]
   1327c:	movw	r0, #55756	; 0xd9cc
   13280:	movt	r0, #1
   13284:	bl	152e4 <__assert_fail@plt+0x41f4>
   13288:	str	r0, [fp, #20]
   1328c:	ldr	r1, [fp, #8]
   13290:	movw	r0, #55758	; 0xd9ce
   13294:	movt	r0, #1
   13298:	bl	152e4 <__assert_fail@plt+0x41f4>
   1329c:	str	r0, [fp, #24]
   132a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   132a4:	tst	r0, #1
   132a8:	bne	13314 <__assert_fail@plt+0x2224>
   132ac:	ldr	r0, [fp, #20]
   132b0:	str	r0, [fp, #-52]	; 0xffffffcc
   132b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   132b8:	ldrsb	r0, [r0]
   132bc:	cmp	r0, #0
   132c0:	beq	13310 <__assert_fail@plt+0x2220>
   132c4:	b	132c8 <__assert_fail@plt+0x21d8>
   132c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132d0:	cmp	r0, r1
   132d4:	bcs	132f0 <__assert_fail@plt+0x2200>
   132d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   132dc:	ldrb	r0, [r0]
   132e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   132e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   132e8:	add	r1, r1, r2
   132ec:	strb	r0, [r1]
   132f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132f4:	add	r0, r0, #1
   132f8:	str	r0, [fp, #-44]	; 0xffffffd4
   132fc:	b	13300 <__assert_fail@plt+0x2210>
   13300:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13304:	add	r0, r0, #1
   13308:	str	r0, [fp, #-52]	; 0xffffffcc
   1330c:	b	132b4 <__assert_fail@plt+0x21c4>
   13310:	b	13314 <__assert_fail@plt+0x2224>
   13314:	movw	r0, #1
   13318:	strb	r0, [fp, #-57]	; 0xffffffc7
   1331c:	ldr	r0, [fp, #24]
   13320:	str	r0, [fp, #-52]	; 0xffffffcc
   13324:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13328:	bl	10fdc <strlen@plt>
   1332c:	str	r0, [fp, #-56]	; 0xffffffc8
   13330:	b	133d0 <__assert_fail@plt+0x22e0>
   13334:	movw	r0, #1
   13338:	strb	r0, [fp, #-57]	; 0xffffffc7
   1333c:	movw	r0, #1
   13340:	strb	r0, [fp, #-59]	; 0xffffffc5
   13344:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13348:	tst	r0, #1
   1334c:	bne	13358 <__assert_fail@plt+0x2268>
   13350:	movw	r0, #1
   13354:	strb	r0, [fp, #-57]	; 0xffffffc7
   13358:	b	1335c <__assert_fail@plt+0x226c>
   1335c:	movw	r0, #2
   13360:	str	r0, [fp, #8]
   13364:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13368:	tst	r0, #1
   1336c:	bne	133a8 <__assert_fail@plt+0x22b8>
   13370:	b	13374 <__assert_fail@plt+0x2284>
   13374:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13378:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1337c:	cmp	r0, r1
   13380:	bcs	13398 <__assert_fail@plt+0x22a8>
   13384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13388:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1338c:	add	r0, r0, r1
   13390:	movw	r1, #39	; 0x27
   13394:	strb	r1, [r0]
   13398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1339c:	add	r0, r0, #1
   133a0:	str	r0, [fp, #-44]	; 0xffffffd4
   133a4:	b	133a8 <__assert_fail@plt+0x22b8>
   133a8:	movw	r0, #55758	; 0xd9ce
   133ac:	movt	r0, #1
   133b0:	str	r0, [fp, #-52]	; 0xffffffcc
   133b4:	movw	r0, #1
   133b8:	str	r0, [fp, #-56]	; 0xffffffc8
   133bc:	b	133d0 <__assert_fail@plt+0x22e0>
   133c0:	movw	r0, #0
   133c4:	strb	r0, [fp, #-59]	; 0xffffffc5
   133c8:	b	133d0 <__assert_fail@plt+0x22e0>
   133cc:	bl	110e4 <abort@plt>
   133d0:	movw	r0, #0
   133d4:	str	r0, [fp, #-40]	; 0xffffffd8
   133d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   133dc:	cmn	r0, #1
   133e0:	bne	1340c <__assert_fail@plt+0x231c>
   133e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   133ec:	add	r0, r0, r1
   133f0:	ldrb	r0, [r0]
   133f4:	cmp	r0, #0
   133f8:	movw	r0, #0
   133fc:	moveq	r0, #1
   13400:	and	r0, r0, #1
   13404:	str	r0, [sp, #48]	; 0x30
   13408:	b	13428 <__assert_fail@plt+0x2338>
   1340c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13410:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13414:	cmp	r0, r1
   13418:	movw	r0, #0
   1341c:	moveq	r0, #1
   13420:	and	r0, r0, #1
   13424:	str	r0, [sp, #48]	; 0x30
   13428:	ldr	r0, [sp, #48]	; 0x30
   1342c:	cmp	r0, #0
   13430:	movw	r0, #0
   13434:	movne	r0, #1
   13438:	mvn	r1, #0
   1343c:	eor	r0, r0, r1
   13440:	tst	r0, #1
   13444:	beq	14630 <__assert_fail@plt+0x3540>
   13448:	movw	r0, #0
   1344c:	strb	r0, [fp, #-65]	; 0xffffffbf
   13450:	strb	r0, [fp, #-66]	; 0xffffffbe
   13454:	strb	r0, [fp, #-67]	; 0xffffffbd
   13458:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1345c:	tst	r0, #1
   13460:	beq	1350c <__assert_fail@plt+0x241c>
   13464:	ldr	r0, [fp, #8]
   13468:	cmp	r0, #2
   1346c:	beq	1350c <__assert_fail@plt+0x241c>
   13470:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13474:	cmp	r0, #0
   13478:	beq	1350c <__assert_fail@plt+0x241c>
   1347c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13480:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13484:	add	r0, r0, r1
   13488:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1348c:	cmn	r1, #1
   13490:	str	r0, [sp, #44]	; 0x2c
   13494:	bne	134bc <__assert_fail@plt+0x23cc>
   13498:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1349c:	movw	r1, #1
   134a0:	cmp	r1, r0
   134a4:	bcs	134bc <__assert_fail@plt+0x23cc>
   134a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134ac:	bl	10fdc <strlen@plt>
   134b0:	str	r0, [fp, #-36]	; 0xffffffdc
   134b4:	str	r0, [sp, #40]	; 0x28
   134b8:	b	134c4 <__assert_fail@plt+0x23d4>
   134bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   134c0:	str	r0, [sp, #40]	; 0x28
   134c4:	ldr	r0, [sp, #40]	; 0x28
   134c8:	ldr	r1, [sp, #44]	; 0x2c
   134cc:	cmp	r1, r0
   134d0:	bhi	1350c <__assert_fail@plt+0x241c>
   134d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   134dc:	add	r0, r0, r1
   134e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   134e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   134e8:	bl	10eec <memcmp@plt>
   134ec:	cmp	r0, #0
   134f0:	bne	1350c <__assert_fail@plt+0x241c>
   134f4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   134f8:	tst	r0, #1
   134fc:	beq	13504 <__assert_fail@plt+0x2414>
   13500:	b	147b0 <__assert_fail@plt+0x36c0>
   13504:	movw	r0, #1
   13508:	strb	r0, [fp, #-65]	; 0xffffffbf
   1350c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13510:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13514:	ldrb	r0, [r0, r1]
   13518:	strb	r0, [fp, #-63]	; 0xffffffc1
   1351c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13520:	mov	r1, r0
   13524:	cmp	r0, #126	; 0x7e
   13528:	str	r1, [sp, #36]	; 0x24
   1352c:	bhi	13d9c <__assert_fail@plt+0x2cac>
   13530:	add	r0, pc, #8
   13534:	ldr	r1, [sp, #36]	; 0x24
   13538:	ldr	r0, [r0, r1, lsl #2]
   1353c:	mov	pc, r0
   13540:	andeq	r3, r1, ip, lsr r7
   13544:	muleq	r1, ip, sp
   13548:	muleq	r1, ip, sp
   1354c:	muleq	r1, ip, sp
   13550:	muleq	r1, ip, sp
   13554:	muleq	r1, ip, sp
   13558:	muleq	r1, ip, sp
   1355c:	andeq	r3, r1, r4, asr #22
   13560:	andeq	r3, r1, r0, asr fp
   13564:	andeq	r3, r1, r0, lsl #23
   13568:	andeq	r3, r1, r8, ror #22
   1356c:	andeq	r3, r1, ip, lsl #23
   13570:	andeq	r3, r1, ip, asr fp
   13574:	andeq	r3, r1, r4, ror fp
   13578:	muleq	r1, ip, sp
   1357c:	muleq	r1, ip, sp
   13580:	muleq	r1, ip, sp
   13584:	muleq	r1, ip, sp
   13588:	muleq	r1, ip, sp
   1358c:	muleq	r1, ip, sp
   13590:	muleq	r1, ip, sp
   13594:	muleq	r1, ip, sp
   13598:	muleq	r1, ip, sp
   1359c:	muleq	r1, ip, sp
   135a0:	muleq	r1, ip, sp
   135a4:	muleq	r1, ip, sp
   135a8:	muleq	r1, ip, sp
   135ac:	muleq	r1, ip, sp
   135b0:	muleq	r1, ip, sp
   135b4:	muleq	r1, ip, sp
   135b8:	muleq	r1, ip, sp
   135bc:	muleq	r1, ip, sp
   135c0:	andeq	r3, r1, r0, ror ip
   135c4:	andeq	r3, r1, r8, ror ip
   135c8:	andeq	r3, r1, r8, ror ip
   135cc:	andeq	r3, r1, ip, asr ip
   135d0:	andeq	r3, r1, r8, ror ip
   135d4:	muleq	r1, r0, sp
   135d8:	andeq	r3, r1, r8, ror ip
   135dc:	muleq	r1, r8, ip
   135e0:	andeq	r3, r1, r8, ror ip
   135e4:	andeq	r3, r1, r8, ror ip
   135e8:	andeq	r3, r1, r8, ror ip
   135ec:	muleq	r1, r0, sp
   135f0:	muleq	r1, r0, sp
   135f4:	muleq	r1, r0, sp
   135f8:	muleq	r1, r0, sp
   135fc:	muleq	r1, r0, sp
   13600:	muleq	r1, r0, sp
   13604:	muleq	r1, r0, sp
   13608:	muleq	r1, r0, sp
   1360c:	muleq	r1, r0, sp
   13610:	muleq	r1, r0, sp
   13614:	muleq	r1, r0, sp
   13618:	muleq	r1, r0, sp
   1361c:	muleq	r1, r0, sp
   13620:	muleq	r1, r0, sp
   13624:	muleq	r1, r0, sp
   13628:	muleq	r1, r0, sp
   1362c:	andeq	r3, r1, r8, ror ip
   13630:	andeq	r3, r1, r8, ror ip
   13634:	andeq	r3, r1, r8, ror ip
   13638:	andeq	r3, r1, r8, ror ip
   1363c:	andeq	r3, r1, r8, asr #18
   13640:	muleq	r1, ip, sp
   13644:	muleq	r1, r0, sp
   13648:	muleq	r1, r0, sp
   1364c:	muleq	r1, r0, sp
   13650:	muleq	r1, r0, sp
   13654:	muleq	r1, r0, sp
   13658:	muleq	r1, r0, sp
   1365c:	muleq	r1, r0, sp
   13660:	muleq	r1, r0, sp
   13664:	muleq	r1, r0, sp
   13668:	muleq	r1, r0, sp
   1366c:	muleq	r1, r0, sp
   13670:	muleq	r1, r0, sp
   13674:	muleq	r1, r0, sp
   13678:	muleq	r1, r0, sp
   1367c:	muleq	r1, r0, sp
   13680:	muleq	r1, r0, sp
   13684:	muleq	r1, r0, sp
   13688:	muleq	r1, r0, sp
   1368c:	muleq	r1, r0, sp
   13690:	muleq	r1, r0, sp
   13694:	muleq	r1, r0, sp
   13698:	muleq	r1, r0, sp
   1369c:	muleq	r1, r0, sp
   136a0:	muleq	r1, r0, sp
   136a4:	muleq	r1, r0, sp
   136a8:	muleq	r1, r0, sp
   136ac:	andeq	r3, r1, r8, ror ip
   136b0:	muleq	r1, r8, fp
   136b4:	muleq	r1, r0, sp
   136b8:	andeq	r3, r1, r8, ror ip
   136bc:	muleq	r1, r0, sp
   136c0:	andeq	r3, r1, r8, ror ip
   136c4:	muleq	r1, r0, sp
   136c8:	muleq	r1, r0, sp
   136cc:	muleq	r1, r0, sp
   136d0:	muleq	r1, r0, sp
   136d4:	muleq	r1, r0, sp
   136d8:	muleq	r1, r0, sp
   136dc:	muleq	r1, r0, sp
   136e0:	muleq	r1, r0, sp
   136e4:	muleq	r1, r0, sp
   136e8:	muleq	r1, r0, sp
   136ec:	muleq	r1, r0, sp
   136f0:	muleq	r1, r0, sp
   136f4:	muleq	r1, r0, sp
   136f8:	muleq	r1, r0, sp
   136fc:	muleq	r1, r0, sp
   13700:	muleq	r1, r0, sp
   13704:	muleq	r1, r0, sp
   13708:	muleq	r1, r0, sp
   1370c:	muleq	r1, r0, sp
   13710:	muleq	r1, r0, sp
   13714:	muleq	r1, r0, sp
   13718:	muleq	r1, r0, sp
   1371c:	muleq	r1, r0, sp
   13720:	muleq	r1, r0, sp
   13724:	muleq	r1, r0, sp
   13728:	muleq	r1, r0, sp
   1372c:	andeq	r3, r1, r8, lsr #24
   13730:	andeq	r3, r1, r8, ror ip
   13734:	andeq	r3, r1, r8, lsr #24
   13738:	andeq	r3, r1, ip, asr ip
   1373c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13740:	tst	r0, #1
   13744:	beq	1392c <__assert_fail@plt+0x283c>
   13748:	b	1374c <__assert_fail@plt+0x265c>
   1374c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13750:	tst	r0, #1
   13754:	beq	1375c <__assert_fail@plt+0x266c>
   13758:	b	147b0 <__assert_fail@plt+0x36c0>
   1375c:	movw	r0, #1
   13760:	strb	r0, [fp, #-66]	; 0xffffffbe
   13764:	ldr	r0, [fp, #8]
   13768:	cmp	r0, #2
   1376c:	bne	13820 <__assert_fail@plt+0x2730>
   13770:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13774:	tst	r0, #1
   13778:	bne	13820 <__assert_fail@plt+0x2730>
   1377c:	b	13780 <__assert_fail@plt+0x2690>
   13780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13784:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13788:	cmp	r0, r1
   1378c:	bcs	137a4 <__assert_fail@plt+0x26b4>
   13790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13794:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13798:	add	r0, r0, r1
   1379c:	movw	r1, #39	; 0x27
   137a0:	strb	r1, [r0]
   137a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137a8:	add	r0, r0, #1
   137ac:	str	r0, [fp, #-44]	; 0xffffffd4
   137b0:	b	137b4 <__assert_fail@plt+0x26c4>
   137b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137bc:	cmp	r0, r1
   137c0:	bcs	137d8 <__assert_fail@plt+0x26e8>
   137c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   137cc:	add	r0, r0, r1
   137d0:	movw	r1, #36	; 0x24
   137d4:	strb	r1, [r0]
   137d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137dc:	add	r0, r0, #1
   137e0:	str	r0, [fp, #-44]	; 0xffffffd4
   137e4:	b	137e8 <__assert_fail@plt+0x26f8>
   137e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137f0:	cmp	r0, r1
   137f4:	bcs	1380c <__assert_fail@plt+0x271c>
   137f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13800:	add	r0, r0, r1
   13804:	movw	r1, #39	; 0x27
   13808:	strb	r1, [r0]
   1380c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13810:	add	r0, r0, #1
   13814:	str	r0, [fp, #-44]	; 0xffffffd4
   13818:	movw	r0, #1
   1381c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13820:	b	13824 <__assert_fail@plt+0x2734>
   13824:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1382c:	cmp	r0, r1
   13830:	bcs	13848 <__assert_fail@plt+0x2758>
   13834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13838:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1383c:	add	r0, r0, r1
   13840:	movw	r1, #92	; 0x5c
   13844:	strb	r1, [r0]
   13848:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1384c:	add	r0, r0, #1
   13850:	str	r0, [fp, #-44]	; 0xffffffd4
   13854:	b	13858 <__assert_fail@plt+0x2768>
   13858:	ldr	r0, [fp, #8]
   1385c:	cmp	r0, #2
   13860:	beq	13920 <__assert_fail@plt+0x2830>
   13864:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13868:	add	r0, r0, #1
   1386c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13870:	cmp	r0, r1
   13874:	bcs	13920 <__assert_fail@plt+0x2830>
   13878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1387c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13880:	add	r1, r1, #1
   13884:	add	r0, r0, r1
   13888:	ldrb	r0, [r0]
   1388c:	movw	r1, #48	; 0x30
   13890:	cmp	r1, r0
   13894:	bgt	13920 <__assert_fail@plt+0x2830>
   13898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1389c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138a0:	add	r1, r1, #1
   138a4:	add	r0, r0, r1
   138a8:	ldrb	r0, [r0]
   138ac:	cmp	r0, #57	; 0x39
   138b0:	bgt	13920 <__assert_fail@plt+0x2830>
   138b4:	b	138b8 <__assert_fail@plt+0x27c8>
   138b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138c0:	cmp	r0, r1
   138c4:	bcs	138dc <__assert_fail@plt+0x27ec>
   138c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138d0:	add	r0, r0, r1
   138d4:	movw	r1, #48	; 0x30
   138d8:	strb	r1, [r0]
   138dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138e0:	add	r0, r0, #1
   138e4:	str	r0, [fp, #-44]	; 0xffffffd4
   138e8:	b	138ec <__assert_fail@plt+0x27fc>
   138ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138f4:	cmp	r0, r1
   138f8:	bcs	13910 <__assert_fail@plt+0x2820>
   138fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13900:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13904:	add	r0, r0, r1
   13908:	movw	r1, #48	; 0x30
   1390c:	strb	r1, [r0]
   13910:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13914:	add	r0, r0, #1
   13918:	str	r0, [fp, #-44]	; 0xffffffd4
   1391c:	b	13920 <__assert_fail@plt+0x2830>
   13920:	movw	r0, #48	; 0x30
   13924:	strb	r0, [fp, #-63]	; 0xffffffc1
   13928:	b	13944 <__assert_fail@plt+0x2854>
   1392c:	ldr	r0, [fp, #12]
   13930:	and	r0, r0, #1
   13934:	cmp	r0, #0
   13938:	beq	13940 <__assert_fail@plt+0x2850>
   1393c:	b	14620 <__assert_fail@plt+0x3530>
   13940:	b	13944 <__assert_fail@plt+0x2854>
   13944:	b	143bc <__assert_fail@plt+0x32cc>
   13948:	ldr	r0, [fp, #8]
   1394c:	cmp	r0, #2
   13950:	str	r0, [sp, #32]
   13954:	beq	1396c <__assert_fail@plt+0x287c>
   13958:	b	1395c <__assert_fail@plt+0x286c>
   1395c:	ldr	r0, [sp, #32]
   13960:	cmp	r0, #5
   13964:	beq	13980 <__assert_fail@plt+0x2890>
   13968:	b	13b3c <__assert_fail@plt+0x2a4c>
   1396c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13970:	tst	r0, #1
   13974:	beq	1397c <__assert_fail@plt+0x288c>
   13978:	b	147b0 <__assert_fail@plt+0x36c0>
   1397c:	b	13b40 <__assert_fail@plt+0x2a50>
   13980:	ldr	r0, [fp, #12]
   13984:	and	r0, r0, #4
   13988:	cmp	r0, #0
   1398c:	beq	13b38 <__assert_fail@plt+0x2a48>
   13990:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13994:	add	r0, r0, #2
   13998:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1399c:	cmp	r0, r1
   139a0:	bcs	13b38 <__assert_fail@plt+0x2a48>
   139a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139ac:	add	r1, r1, #1
   139b0:	add	r0, r0, r1
   139b4:	ldrb	r0, [r0]
   139b8:	cmp	r0, #63	; 0x3f
   139bc:	bne	13b38 <__assert_fail@plt+0x2a48>
   139c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139c8:	add	r0, r1, r0
   139cc:	ldrb	r0, [r0, #2]
   139d0:	mov	r1, r0
   139d4:	cmp	r0, #33	; 0x21
   139d8:	str	r1, [sp, #28]
   139dc:	beq	13a2c <__assert_fail@plt+0x293c>
   139e0:	b	139e4 <__assert_fail@plt+0x28f4>
   139e4:	ldr	r0, [sp, #28]
   139e8:	sub	r1, r0, #39	; 0x27
   139ec:	cmp	r1, #3
   139f0:	bcc	13a2c <__assert_fail@plt+0x293c>
   139f4:	b	139f8 <__assert_fail@plt+0x2908>
   139f8:	ldr	r0, [sp, #28]
   139fc:	cmp	r0, #45	; 0x2d
   13a00:	beq	13a2c <__assert_fail@plt+0x293c>
   13a04:	b	13a08 <__assert_fail@plt+0x2918>
   13a08:	ldr	r0, [sp, #28]
   13a0c:	cmp	r0, #47	; 0x2f
   13a10:	beq	13a2c <__assert_fail@plt+0x293c>
   13a14:	b	13a18 <__assert_fail@plt+0x2928>
   13a18:	ldr	r0, [sp, #28]
   13a1c:	sub	r1, r0, #60	; 0x3c
   13a20:	cmp	r1, #2
   13a24:	bhi	13b30 <__assert_fail@plt+0x2a40>
   13a28:	b	13a2c <__assert_fail@plt+0x293c>
   13a2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13a30:	tst	r0, #1
   13a34:	beq	13a3c <__assert_fail@plt+0x294c>
   13a38:	b	147b0 <__assert_fail@plt+0x36c0>
   13a3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a44:	add	r1, r1, #2
   13a48:	add	r0, r0, r1
   13a4c:	ldrb	r0, [r0]
   13a50:	strb	r0, [fp, #-63]	; 0xffffffc1
   13a54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a58:	add	r0, r0, #2
   13a5c:	str	r0, [fp, #-40]	; 0xffffffd8
   13a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a68:	cmp	r0, r1
   13a6c:	bcs	13a84 <__assert_fail@plt+0x2994>
   13a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a78:	add	r0, r0, r1
   13a7c:	movw	r1, #63	; 0x3f
   13a80:	strb	r1, [r0]
   13a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a88:	add	r0, r0, #1
   13a8c:	str	r0, [fp, #-44]	; 0xffffffd4
   13a90:	b	13a94 <__assert_fail@plt+0x29a4>
   13a94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a9c:	cmp	r0, r1
   13aa0:	bcs	13ab8 <__assert_fail@plt+0x29c8>
   13aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13aa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13aac:	add	r0, r0, r1
   13ab0:	movw	r1, #34	; 0x22
   13ab4:	strb	r1, [r0]
   13ab8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13abc:	add	r0, r0, #1
   13ac0:	str	r0, [fp, #-44]	; 0xffffffd4
   13ac4:	b	13ac8 <__assert_fail@plt+0x29d8>
   13ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ad0:	cmp	r0, r1
   13ad4:	bcs	13aec <__assert_fail@plt+0x29fc>
   13ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13adc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13ae0:	add	r0, r0, r1
   13ae4:	movw	r1, #34	; 0x22
   13ae8:	strb	r1, [r0]
   13aec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13af0:	add	r0, r0, #1
   13af4:	str	r0, [fp, #-44]	; 0xffffffd4
   13af8:	b	13afc <__assert_fail@plt+0x2a0c>
   13afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b04:	cmp	r0, r1
   13b08:	bcs	13b20 <__assert_fail@plt+0x2a30>
   13b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13b14:	add	r0, r0, r1
   13b18:	movw	r1, #63	; 0x3f
   13b1c:	strb	r1, [r0]
   13b20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b24:	add	r0, r0, #1
   13b28:	str	r0, [fp, #-44]	; 0xffffffd4
   13b2c:	b	13b34 <__assert_fail@plt+0x2a44>
   13b30:	b	13b34 <__assert_fail@plt+0x2a44>
   13b34:	b	13b38 <__assert_fail@plt+0x2a48>
   13b38:	b	13b40 <__assert_fail@plt+0x2a50>
   13b3c:	b	13b40 <__assert_fail@plt+0x2a50>
   13b40:	b	143bc <__assert_fail@plt+0x32cc>
   13b44:	movw	r0, #97	; 0x61
   13b48:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b4c:	b	13c0c <__assert_fail@plt+0x2b1c>
   13b50:	movw	r0, #98	; 0x62
   13b54:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b58:	b	13c0c <__assert_fail@plt+0x2b1c>
   13b5c:	movw	r0, #102	; 0x66
   13b60:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b64:	b	13c0c <__assert_fail@plt+0x2b1c>
   13b68:	movw	r0, #110	; 0x6e
   13b6c:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b70:	b	13bec <__assert_fail@plt+0x2afc>
   13b74:	movw	r0, #114	; 0x72
   13b78:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b7c:	b	13bec <__assert_fail@plt+0x2afc>
   13b80:	movw	r0, #116	; 0x74
   13b84:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b88:	b	13bec <__assert_fail@plt+0x2afc>
   13b8c:	movw	r0, #118	; 0x76
   13b90:	strb	r0, [fp, #-64]	; 0xffffffc0
   13b94:	b	13c0c <__assert_fail@plt+0x2b1c>
   13b98:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13b9c:	strb	r0, [fp, #-64]	; 0xffffffc0
   13ba0:	ldr	r0, [fp, #8]
   13ba4:	cmp	r0, #2
   13ba8:	bne	13bc0 <__assert_fail@plt+0x2ad0>
   13bac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13bb0:	tst	r0, #1
   13bb4:	beq	13bbc <__assert_fail@plt+0x2acc>
   13bb8:	b	147b0 <__assert_fail@plt+0x36c0>
   13bbc:	b	14544 <__assert_fail@plt+0x3454>
   13bc0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13bc4:	tst	r0, #1
   13bc8:	beq	13be8 <__assert_fail@plt+0x2af8>
   13bcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13bd0:	tst	r0, #1
   13bd4:	beq	13be8 <__assert_fail@plt+0x2af8>
   13bd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13bdc:	cmp	r0, #0
   13be0:	beq	13be8 <__assert_fail@plt+0x2af8>
   13be4:	b	14544 <__assert_fail@plt+0x3454>
   13be8:	b	13bec <__assert_fail@plt+0x2afc>
   13bec:	ldr	r0, [fp, #8]
   13bf0:	cmp	r0, #2
   13bf4:	bne	13c08 <__assert_fail@plt+0x2b18>
   13bf8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13bfc:	tst	r0, #1
   13c00:	beq	13c08 <__assert_fail@plt+0x2b18>
   13c04:	b	147b0 <__assert_fail@plt+0x36c0>
   13c08:	b	13c0c <__assert_fail@plt+0x2b1c>
   13c0c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c10:	tst	r0, #1
   13c14:	beq	13c24 <__assert_fail@plt+0x2b34>
   13c18:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13c1c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13c20:	b	14430 <__assert_fail@plt+0x3340>
   13c24:	b	143bc <__assert_fail@plt+0x32cc>
   13c28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c2c:	cmn	r0, #1
   13c30:	bne	13c48 <__assert_fail@plt+0x2b58>
   13c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c38:	ldrb	r0, [r0, #1]
   13c3c:	cmp	r0, #0
   13c40:	beq	13c58 <__assert_fail@plt+0x2b68>
   13c44:	b	13c54 <__assert_fail@plt+0x2b64>
   13c48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c4c:	cmp	r0, #1
   13c50:	beq	13c58 <__assert_fail@plt+0x2b68>
   13c54:	b	143bc <__assert_fail@plt+0x32cc>
   13c58:	b	13c5c <__assert_fail@plt+0x2b6c>
   13c5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c60:	cmp	r0, #0
   13c64:	beq	13c6c <__assert_fail@plt+0x2b7c>
   13c68:	b	143bc <__assert_fail@plt+0x32cc>
   13c6c:	b	13c70 <__assert_fail@plt+0x2b80>
   13c70:	movw	r0, #1
   13c74:	strb	r0, [fp, #-67]	; 0xffffffbd
   13c78:	ldr	r0, [fp, #8]
   13c7c:	cmp	r0, #2
   13c80:	bne	13c94 <__assert_fail@plt+0x2ba4>
   13c84:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c88:	tst	r0, #1
   13c8c:	beq	13c94 <__assert_fail@plt+0x2ba4>
   13c90:	b	147b0 <__assert_fail@plt+0x36c0>
   13c94:	b	143bc <__assert_fail@plt+0x32cc>
   13c98:	movw	r0, #1
   13c9c:	strb	r0, [fp, #-61]	; 0xffffffc3
   13ca0:	strb	r0, [fp, #-67]	; 0xffffffbd
   13ca4:	ldr	r0, [fp, #8]
   13ca8:	cmp	r0, #2
   13cac:	bne	13d8c <__assert_fail@plt+0x2c9c>
   13cb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13cb4:	tst	r0, #1
   13cb8:	beq	13cc0 <__assert_fail@plt+0x2bd0>
   13cbc:	b	147b0 <__assert_fail@plt+0x36c0>
   13cc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13cc4:	cmp	r0, #0
   13cc8:	beq	13ce8 <__assert_fail@plt+0x2bf8>
   13ccc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13cd0:	cmp	r0, #0
   13cd4:	bne	13ce8 <__assert_fail@plt+0x2bf8>
   13cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13cdc:	str	r0, [fp, #-48]	; 0xffffffd0
   13ce0:	movw	r0, #0
   13ce4:	str	r0, [fp, #-28]	; 0xffffffe4
   13ce8:	b	13cec <__assert_fail@plt+0x2bfc>
   13cec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cf4:	cmp	r0, r1
   13cf8:	bcs	13d10 <__assert_fail@plt+0x2c20>
   13cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d04:	add	r0, r0, r1
   13d08:	movw	r1, #39	; 0x27
   13d0c:	strb	r1, [r0]
   13d10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d14:	add	r0, r0, #1
   13d18:	str	r0, [fp, #-44]	; 0xffffffd4
   13d1c:	b	13d20 <__assert_fail@plt+0x2c30>
   13d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d28:	cmp	r0, r1
   13d2c:	bcs	13d44 <__assert_fail@plt+0x2c54>
   13d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d38:	add	r0, r0, r1
   13d3c:	movw	r1, #92	; 0x5c
   13d40:	strb	r1, [r0]
   13d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d48:	add	r0, r0, #1
   13d4c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d50:	b	13d54 <__assert_fail@plt+0x2c64>
   13d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d5c:	cmp	r0, r1
   13d60:	bcs	13d78 <__assert_fail@plt+0x2c88>
   13d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d6c:	add	r0, r0, r1
   13d70:	movw	r1, #39	; 0x27
   13d74:	strb	r1, [r0]
   13d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d7c:	add	r0, r0, #1
   13d80:	str	r0, [fp, #-44]	; 0xffffffd4
   13d84:	movw	r0, #0
   13d88:	strb	r0, [fp, #-60]	; 0xffffffc4
   13d8c:	b	143bc <__assert_fail@plt+0x32cc>
   13d90:	movw	r0, #1
   13d94:	strb	r0, [fp, #-67]	; 0xffffffbd
   13d98:	b	143bc <__assert_fail@plt+0x32cc>
   13d9c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   13da0:	tst	r0, #1
   13da4:	beq	13de4 <__assert_fail@plt+0x2cf4>
   13da8:	mov	r0, #1
   13dac:	str	r0, [fp, #-72]	; 0xffffffb8
   13db0:	bl	10fb8 <__ctype_b_loc@plt>
   13db4:	ldr	r0, [r0]
   13db8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13dbc:	mov	r2, r1
   13dc0:	add	r0, r0, r1, lsl #1
   13dc4:	ldrh	r0, [r0]
   13dc8:	and	r0, r0, #16384	; 0x4000
   13dcc:	cmp	r0, #0
   13dd0:	movw	r0, #0
   13dd4:	movne	r0, #1
   13dd8:	and	r0, r0, #1
   13ddc:	strb	r0, [fp, #-73]	; 0xffffffb7
   13de0:	b	14070 <__assert_fail@plt+0x2f80>
   13de4:	sub	r0, fp, #84	; 0x54
   13de8:	movw	r1, #0
   13dec:	and	r1, r1, #255	; 0xff
   13df0:	movw	r2, #8
   13df4:	bl	11018 <memset@plt>
   13df8:	movw	r0, #0
   13dfc:	str	r0, [fp, #-72]	; 0xffffffb8
   13e00:	movw	r0, #1
   13e04:	strb	r0, [fp, #-73]	; 0xffffffb7
   13e08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e0c:	cmn	r0, #1
   13e10:	bne	13e20 <__assert_fail@plt+0x2d30>
   13e14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e18:	bl	10fdc <strlen@plt>
   13e1c:	str	r0, [fp, #-36]	; 0xffffffdc
   13e20:	b	13e24 <__assert_fail@plt+0x2d34>
   13e24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e2c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13e30:	add	r1, r1, r2
   13e34:	add	r1, r0, r1
   13e38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13e40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13e44:	add	r2, r2, r3
   13e48:	sub	r2, r0, r2
   13e4c:	add	r0, sp, #88	; 0x58
   13e50:	sub	r3, fp, #84	; 0x54
   13e54:	bl	1b784 <__assert_fail@plt+0xa694>
   13e58:	str	r0, [sp, #84]	; 0x54
   13e5c:	ldr	r0, [sp, #84]	; 0x54
   13e60:	cmp	r0, #0
   13e64:	bne	13e6c <__assert_fail@plt+0x2d7c>
   13e68:	b	1406c <__assert_fail@plt+0x2f7c>
   13e6c:	ldr	r0, [sp, #84]	; 0x54
   13e70:	cmn	r0, #1
   13e74:	bne	13e84 <__assert_fail@plt+0x2d94>
   13e78:	movw	r0, #0
   13e7c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13e80:	b	1406c <__assert_fail@plt+0x2f7c>
   13e84:	ldr	r0, [sp, #84]	; 0x54
   13e88:	cmn	r0, #2
   13e8c:	bne	13f00 <__assert_fail@plt+0x2e10>
   13e90:	movw	r0, #0
   13e94:	strb	r0, [fp, #-73]	; 0xffffffb7
   13e98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e9c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13ea0:	add	r0, r0, r1
   13ea4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ea8:	cmp	r0, r1
   13eac:	movw	r0, #0
   13eb0:	str	r0, [sp, #24]
   13eb4:	bcs	13ee0 <__assert_fail@plt+0x2df0>
   13eb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ebc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ec0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13ec4:	add	r1, r1, r2
   13ec8:	add	r0, r0, r1
   13ecc:	ldrb	r0, [r0]
   13ed0:	cmp	r0, #0
   13ed4:	movw	r0, #0
   13ed8:	movne	r0, #1
   13edc:	str	r0, [sp, #24]
   13ee0:	ldr	r0, [sp, #24]
   13ee4:	tst	r0, #1
   13ee8:	beq	13efc <__assert_fail@plt+0x2e0c>
   13eec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13ef0:	add	r0, r0, #1
   13ef4:	str	r0, [fp, #-72]	; 0xffffffb8
   13ef8:	b	13e98 <__assert_fail@plt+0x2da8>
   13efc:	b	1406c <__assert_fail@plt+0x2f7c>
   13f00:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f04:	tst	r0, #1
   13f08:	beq	14014 <__assert_fail@plt+0x2f24>
   13f0c:	ldr	r0, [fp, #8]
   13f10:	cmp	r0, #2
   13f14:	bne	14014 <__assert_fail@plt+0x2f24>
   13f18:	movw	r0, #1
   13f1c:	str	r0, [sp, #80]	; 0x50
   13f20:	ldr	r0, [sp, #80]	; 0x50
   13f24:	ldr	r1, [sp, #84]	; 0x54
   13f28:	cmp	r0, r1
   13f2c:	bcs	14010 <__assert_fail@plt+0x2f20>
   13f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f38:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13f3c:	add	r1, r1, r2
   13f40:	ldr	r2, [sp, #80]	; 0x50
   13f44:	add	r1, r1, r2
   13f48:	ldrb	r0, [r0, r1]
   13f4c:	sub	r0, r0, #91	; 0x5b
   13f50:	cmp	r0, #33	; 0x21
   13f54:	str	r0, [sp, #20]
   13f58:	bhi	13ff8 <__assert_fail@plt+0x2f08>
   13f5c:	add	r0, pc, #8
   13f60:	ldr	r1, [sp, #20]
   13f64:	ldr	r0, [r0, r1, lsl #2]
   13f68:	mov	pc, r0
   13f6c:	strdeq	r3, [r1], -r4
   13f70:	strdeq	r3, [r1], -r4
   13f74:	strdeq	r3, [r1], -r8
   13f78:	strdeq	r3, [r1], -r4
   13f7c:	strdeq	r3, [r1], -r8
   13f80:	strdeq	r3, [r1], -r4
   13f84:	strdeq	r3, [r1], -r8
   13f88:	strdeq	r3, [r1], -r8
   13f8c:	strdeq	r3, [r1], -r8
   13f90:	strdeq	r3, [r1], -r8
   13f94:	strdeq	r3, [r1], -r8
   13f98:	strdeq	r3, [r1], -r8
   13f9c:	strdeq	r3, [r1], -r8
   13fa0:	strdeq	r3, [r1], -r8
   13fa4:	strdeq	r3, [r1], -r8
   13fa8:	strdeq	r3, [r1], -r8
   13fac:	strdeq	r3, [r1], -r8
   13fb0:	strdeq	r3, [r1], -r8
   13fb4:	strdeq	r3, [r1], -r8
   13fb8:	strdeq	r3, [r1], -r8
   13fbc:	strdeq	r3, [r1], -r8
   13fc0:	strdeq	r3, [r1], -r8
   13fc4:	strdeq	r3, [r1], -r8
   13fc8:	strdeq	r3, [r1], -r8
   13fcc:	strdeq	r3, [r1], -r8
   13fd0:	strdeq	r3, [r1], -r8
   13fd4:	strdeq	r3, [r1], -r8
   13fd8:	strdeq	r3, [r1], -r8
   13fdc:	strdeq	r3, [r1], -r8
   13fe0:	strdeq	r3, [r1], -r8
   13fe4:	strdeq	r3, [r1], -r8
   13fe8:	strdeq	r3, [r1], -r8
   13fec:	strdeq	r3, [r1], -r8
   13ff0:	strdeq	r3, [r1], -r4
   13ff4:	b	147b0 <__assert_fail@plt+0x36c0>
   13ff8:	b	13ffc <__assert_fail@plt+0x2f0c>
   13ffc:	b	14000 <__assert_fail@plt+0x2f10>
   14000:	ldr	r0, [sp, #80]	; 0x50
   14004:	add	r0, r0, #1
   14008:	str	r0, [sp, #80]	; 0x50
   1400c:	b	13f20 <__assert_fail@plt+0x2e30>
   14010:	b	14014 <__assert_fail@plt+0x2f24>
   14014:	ldr	r0, [sp, #88]	; 0x58
   14018:	bl	10f10 <iswprint@plt>
   1401c:	cmp	r0, #0
   14020:	bne	1402c <__assert_fail@plt+0x2f3c>
   14024:	movw	r0, #0
   14028:	strb	r0, [fp, #-73]	; 0xffffffb7
   1402c:	ldr	r0, [sp, #84]	; 0x54
   14030:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14034:	add	r0, r1, r0
   14038:	str	r0, [fp, #-72]	; 0xffffffb8
   1403c:	b	14040 <__assert_fail@plt+0x2f50>
   14040:	b	14044 <__assert_fail@plt+0x2f54>
   14044:	b	14048 <__assert_fail@plt+0x2f58>
   14048:	sub	r0, fp, #84	; 0x54
   1404c:	bl	10ee0 <mbsinit@plt>
   14050:	cmp	r0, #0
   14054:	movw	r0, #0
   14058:	movne	r0, #1
   1405c:	mvn	r1, #0
   14060:	eor	r0, r0, r1
   14064:	tst	r0, #1
   14068:	bne	13e24 <__assert_fail@plt+0x2d34>
   1406c:	b	14070 <__assert_fail@plt+0x2f80>
   14070:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14074:	and	r0, r0, #1
   14078:	strb	r0, [fp, #-67]	; 0xffffffbd
   1407c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14080:	movw	r1, #1
   14084:	cmp	r1, r0
   14088:	bcc	140a4 <__assert_fail@plt+0x2fb4>
   1408c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14090:	tst	r0, #1
   14094:	beq	143b8 <__assert_fail@plt+0x32c8>
   14098:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1409c:	tst	r0, #1
   140a0:	bne	143b8 <__assert_fail@plt+0x32c8>
   140a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   140a8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   140ac:	add	r0, r0, r1
   140b0:	str	r0, [sp, #76]	; 0x4c
   140b4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   140b8:	tst	r0, #1
   140bc:	beq	1426c <__assert_fail@plt+0x317c>
   140c0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   140c4:	tst	r0, #1
   140c8:	bne	1426c <__assert_fail@plt+0x317c>
   140cc:	b	140d0 <__assert_fail@plt+0x2fe0>
   140d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   140d4:	tst	r0, #1
   140d8:	beq	140e0 <__assert_fail@plt+0x2ff0>
   140dc:	b	147b0 <__assert_fail@plt+0x36c0>
   140e0:	movw	r0, #1
   140e4:	strb	r0, [fp, #-66]	; 0xffffffbe
   140e8:	ldr	r0, [fp, #8]
   140ec:	cmp	r0, #2
   140f0:	bne	141a4 <__assert_fail@plt+0x30b4>
   140f4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   140f8:	tst	r0, #1
   140fc:	bne	141a4 <__assert_fail@plt+0x30b4>
   14100:	b	14104 <__assert_fail@plt+0x3014>
   14104:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14108:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1410c:	cmp	r0, r1
   14110:	bcs	14128 <__assert_fail@plt+0x3038>
   14114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14118:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1411c:	add	r0, r0, r1
   14120:	movw	r1, #39	; 0x27
   14124:	strb	r1, [r0]
   14128:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1412c:	add	r0, r0, #1
   14130:	str	r0, [fp, #-44]	; 0xffffffd4
   14134:	b	14138 <__assert_fail@plt+0x3048>
   14138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1413c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14140:	cmp	r0, r1
   14144:	bcs	1415c <__assert_fail@plt+0x306c>
   14148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1414c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14150:	add	r0, r0, r1
   14154:	movw	r1, #36	; 0x24
   14158:	strb	r1, [r0]
   1415c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14160:	add	r0, r0, #1
   14164:	str	r0, [fp, #-44]	; 0xffffffd4
   14168:	b	1416c <__assert_fail@plt+0x307c>
   1416c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14170:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14174:	cmp	r0, r1
   14178:	bcs	14190 <__assert_fail@plt+0x30a0>
   1417c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14180:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14184:	add	r0, r0, r1
   14188:	movw	r1, #39	; 0x27
   1418c:	strb	r1, [r0]
   14190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14194:	add	r0, r0, #1
   14198:	str	r0, [fp, #-44]	; 0xffffffd4
   1419c:	movw	r0, #1
   141a0:	strb	r0, [fp, #-60]	; 0xffffffc4
   141a4:	b	141a8 <__assert_fail@plt+0x30b8>
   141a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141b0:	cmp	r0, r1
   141b4:	bcs	141cc <__assert_fail@plt+0x30dc>
   141b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141c0:	add	r0, r0, r1
   141c4:	movw	r1, #92	; 0x5c
   141c8:	strb	r1, [r0]
   141cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141d0:	add	r0, r0, #1
   141d4:	str	r0, [fp, #-44]	; 0xffffffd4
   141d8:	b	141dc <__assert_fail@plt+0x30ec>
   141dc:	b	141e0 <__assert_fail@plt+0x30f0>
   141e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141e8:	cmp	r0, r1
   141ec:	bcs	1420c <__assert_fail@plt+0x311c>
   141f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   141f4:	asr	r0, r0, #6
   141f8:	add	r0, r0, #48	; 0x30
   141fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14200:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14204:	add	r1, r1, r2
   14208:	strb	r0, [r1]
   1420c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14210:	add	r0, r0, #1
   14214:	str	r0, [fp, #-44]	; 0xffffffd4
   14218:	b	1421c <__assert_fail@plt+0x312c>
   1421c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14224:	cmp	r0, r1
   14228:	bcs	1424c <__assert_fail@plt+0x315c>
   1422c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14230:	asr	r0, r0, #3
   14234:	and	r0, r0, #7
   14238:	add	r0, r0, #48	; 0x30
   1423c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14240:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14244:	add	r1, r1, r2
   14248:	strb	r0, [r1]
   1424c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14250:	add	r0, r0, #1
   14254:	str	r0, [fp, #-44]	; 0xffffffd4
   14258:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1425c:	and	r0, r0, #7
   14260:	add	r0, r0, #48	; 0x30
   14264:	strb	r0, [fp, #-63]	; 0xffffffc1
   14268:	b	142b8 <__assert_fail@plt+0x31c8>
   1426c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14270:	tst	r0, #1
   14274:	beq	142b4 <__assert_fail@plt+0x31c4>
   14278:	b	1427c <__assert_fail@plt+0x318c>
   1427c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14280:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14284:	cmp	r0, r1
   14288:	bcs	142a0 <__assert_fail@plt+0x31b0>
   1428c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14290:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14294:	add	r0, r0, r1
   14298:	movw	r1, #92	; 0x5c
   1429c:	strb	r1, [r0]
   142a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142a4:	add	r0, r0, #1
   142a8:	str	r0, [fp, #-44]	; 0xffffffd4
   142ac:	movw	r0, #0
   142b0:	strb	r0, [fp, #-65]	; 0xffffffbf
   142b4:	b	142b8 <__assert_fail@plt+0x31c8>
   142b8:	ldr	r0, [sp, #76]	; 0x4c
   142bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   142c0:	add	r1, r1, #1
   142c4:	cmp	r0, r1
   142c8:	bhi	142d0 <__assert_fail@plt+0x31e0>
   142cc:	b	143b4 <__assert_fail@plt+0x32c4>
   142d0:	b	142d4 <__assert_fail@plt+0x31e4>
   142d4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   142d8:	tst	r0, #1
   142dc:	beq	1435c <__assert_fail@plt+0x326c>
   142e0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   142e4:	tst	r0, #1
   142e8:	bne	1435c <__assert_fail@plt+0x326c>
   142ec:	b	142f0 <__assert_fail@plt+0x3200>
   142f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142f8:	cmp	r0, r1
   142fc:	bcs	14314 <__assert_fail@plt+0x3224>
   14300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14304:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14308:	add	r0, r0, r1
   1430c:	movw	r1, #39	; 0x27
   14310:	strb	r1, [r0]
   14314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14318:	add	r0, r0, #1
   1431c:	str	r0, [fp, #-44]	; 0xffffffd4
   14320:	b	14324 <__assert_fail@plt+0x3234>
   14324:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14328:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1432c:	cmp	r0, r1
   14330:	bcs	14348 <__assert_fail@plt+0x3258>
   14334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14338:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1433c:	add	r0, r0, r1
   14340:	movw	r1, #39	; 0x27
   14344:	strb	r1, [r0]
   14348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1434c:	add	r0, r0, #1
   14350:	str	r0, [fp, #-44]	; 0xffffffd4
   14354:	movw	r0, #0
   14358:	strb	r0, [fp, #-60]	; 0xffffffc4
   1435c:	b	14360 <__assert_fail@plt+0x3270>
   14360:	b	14364 <__assert_fail@plt+0x3274>
   14364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1436c:	cmp	r0, r1
   14370:	bcs	14388 <__assert_fail@plt+0x3298>
   14374:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1437c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14380:	add	r1, r1, r2
   14384:	strb	r0, [r1]
   14388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1438c:	add	r0, r0, #1
   14390:	str	r0, [fp, #-44]	; 0xffffffd4
   14394:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14398:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1439c:	add	r1, r1, #1
   143a0:	str	r1, [fp, #-40]	; 0xffffffd8
   143a4:	add	r0, r0, r1
   143a8:	ldrb	r0, [r0]
   143ac:	strb	r0, [fp, #-63]	; 0xffffffc1
   143b0:	b	140b4 <__assert_fail@plt+0x2fc4>
   143b4:	b	14544 <__assert_fail@plt+0x3454>
   143b8:	b	143bc <__assert_fail@plt+0x32cc>
   143bc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   143c0:	tst	r0, #1
   143c4:	beq	143d4 <__assert_fail@plt+0x32e4>
   143c8:	ldr	r0, [fp, #8]
   143cc:	cmp	r0, #2
   143d0:	bne	143e0 <__assert_fail@plt+0x32f0>
   143d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   143d8:	tst	r0, #1
   143dc:	beq	1441c <__assert_fail@plt+0x332c>
   143e0:	ldr	r0, [fp, #16]
   143e4:	movw	r1, #0
   143e8:	cmp	r0, r1
   143ec:	beq	1441c <__assert_fail@plt+0x332c>
   143f0:	ldr	r0, [fp, #16]
   143f4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   143f8:	lsr	r1, r1, #5
   143fc:	add	r0, r0, r1, lsl #2
   14400:	ldr	r0, [r0]
   14404:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14408:	and	r1, r1, #31
   1440c:	lsr	r0, r0, r1
   14410:	and	r0, r0, #1
   14414:	cmp	r0, #0
   14418:	bne	1442c <__assert_fail@plt+0x333c>
   1441c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14420:	tst	r0, #1
   14424:	bne	1442c <__assert_fail@plt+0x333c>
   14428:	b	14544 <__assert_fail@plt+0x3454>
   1442c:	b	14430 <__assert_fail@plt+0x3340>
   14430:	b	14434 <__assert_fail@plt+0x3344>
   14434:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14438:	tst	r0, #1
   1443c:	beq	14444 <__assert_fail@plt+0x3354>
   14440:	b	147b0 <__assert_fail@plt+0x36c0>
   14444:	movw	r0, #1
   14448:	strb	r0, [fp, #-66]	; 0xffffffbe
   1444c:	ldr	r0, [fp, #8]
   14450:	cmp	r0, #2
   14454:	bne	14508 <__assert_fail@plt+0x3418>
   14458:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1445c:	tst	r0, #1
   14460:	bne	14508 <__assert_fail@plt+0x3418>
   14464:	b	14468 <__assert_fail@plt+0x3378>
   14468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1446c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14470:	cmp	r0, r1
   14474:	bcs	1448c <__assert_fail@plt+0x339c>
   14478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1447c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14480:	add	r0, r0, r1
   14484:	movw	r1, #39	; 0x27
   14488:	strb	r1, [r0]
   1448c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14490:	add	r0, r0, #1
   14494:	str	r0, [fp, #-44]	; 0xffffffd4
   14498:	b	1449c <__assert_fail@plt+0x33ac>
   1449c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144a4:	cmp	r0, r1
   144a8:	bcs	144c0 <__assert_fail@plt+0x33d0>
   144ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144b4:	add	r0, r0, r1
   144b8:	movw	r1, #36	; 0x24
   144bc:	strb	r1, [r0]
   144c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144c4:	add	r0, r0, #1
   144c8:	str	r0, [fp, #-44]	; 0xffffffd4
   144cc:	b	144d0 <__assert_fail@plt+0x33e0>
   144d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   144d8:	cmp	r0, r1
   144dc:	bcs	144f4 <__assert_fail@plt+0x3404>
   144e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   144e8:	add	r0, r0, r1
   144ec:	movw	r1, #39	; 0x27
   144f0:	strb	r1, [r0]
   144f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   144f8:	add	r0, r0, #1
   144fc:	str	r0, [fp, #-44]	; 0xffffffd4
   14500:	movw	r0, #1
   14504:	strb	r0, [fp, #-60]	; 0xffffffc4
   14508:	b	1450c <__assert_fail@plt+0x341c>
   1450c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14510:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14514:	cmp	r0, r1
   14518:	bcs	14530 <__assert_fail@plt+0x3440>
   1451c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14520:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14524:	add	r0, r0, r1
   14528:	movw	r1, #92	; 0x5c
   1452c:	strb	r1, [r0]
   14530:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14534:	add	r0, r0, #1
   14538:	str	r0, [fp, #-44]	; 0xffffffd4
   1453c:	b	14540 <__assert_fail@plt+0x3450>
   14540:	b	14544 <__assert_fail@plt+0x3454>
   14544:	b	14548 <__assert_fail@plt+0x3458>
   14548:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1454c:	tst	r0, #1
   14550:	beq	145d0 <__assert_fail@plt+0x34e0>
   14554:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14558:	tst	r0, #1
   1455c:	bne	145d0 <__assert_fail@plt+0x34e0>
   14560:	b	14564 <__assert_fail@plt+0x3474>
   14564:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14568:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1456c:	cmp	r0, r1
   14570:	bcs	14588 <__assert_fail@plt+0x3498>
   14574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14578:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1457c:	add	r0, r0, r1
   14580:	movw	r1, #39	; 0x27
   14584:	strb	r1, [r0]
   14588:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1458c:	add	r0, r0, #1
   14590:	str	r0, [fp, #-44]	; 0xffffffd4
   14594:	b	14598 <__assert_fail@plt+0x34a8>
   14598:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1459c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145a0:	cmp	r0, r1
   145a4:	bcs	145bc <__assert_fail@plt+0x34cc>
   145a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145b0:	add	r0, r0, r1
   145b4:	movw	r1, #39	; 0x27
   145b8:	strb	r1, [r0]
   145bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145c0:	add	r0, r0, #1
   145c4:	str	r0, [fp, #-44]	; 0xffffffd4
   145c8:	movw	r0, #0
   145cc:	strb	r0, [fp, #-60]	; 0xffffffc4
   145d0:	b	145d4 <__assert_fail@plt+0x34e4>
   145d4:	b	145d8 <__assert_fail@plt+0x34e8>
   145d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145e0:	cmp	r0, r1
   145e4:	bcs	145fc <__assert_fail@plt+0x350c>
   145e8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   145ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   145f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   145f4:	add	r1, r1, r2
   145f8:	strb	r0, [r1]
   145fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14600:	add	r0, r0, #1
   14604:	str	r0, [fp, #-44]	; 0xffffffd4
   14608:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1460c:	tst	r0, #1
   14610:	bne	1461c <__assert_fail@plt+0x352c>
   14614:	movw	r0, #0
   14618:	strb	r0, [fp, #-62]	; 0xffffffc2
   1461c:	b	14620 <__assert_fail@plt+0x3530>
   14620:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14624:	add	r0, r0, #1
   14628:	str	r0, [fp, #-40]	; 0xffffffd8
   1462c:	b	133d8 <__assert_fail@plt+0x22e8>
   14630:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14634:	cmp	r0, #0
   14638:	bne	14658 <__assert_fail@plt+0x3568>
   1463c:	ldr	r0, [fp, #8]
   14640:	cmp	r0, #2
   14644:	bne	14658 <__assert_fail@plt+0x3568>
   14648:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1464c:	tst	r0, #1
   14650:	beq	14658 <__assert_fail@plt+0x3568>
   14654:	b	147b0 <__assert_fail@plt+0x36c0>
   14658:	ldr	r0, [fp, #8]
   1465c:	cmp	r0, #2
   14660:	bne	14700 <__assert_fail@plt+0x3610>
   14664:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14668:	tst	r0, #1
   1466c:	bne	14700 <__assert_fail@plt+0x3610>
   14670:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   14674:	tst	r0, #1
   14678:	beq	14700 <__assert_fail@plt+0x3610>
   1467c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14680:	tst	r0, #1
   14684:	beq	146cc <__assert_fail@plt+0x35dc>
   14688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1468c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14690:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14694:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14698:	ldr	ip, [fp, #12]
   1469c:	ldr	lr, [fp, #16]
   146a0:	ldr	r4, [fp, #20]
   146a4:	ldr	r5, [fp, #24]
   146a8:	movw	r6, #5
   146ac:	str	r6, [sp]
   146b0:	str	ip, [sp, #4]
   146b4:	str	lr, [sp, #8]
   146b8:	str	r4, [sp, #12]
   146bc:	str	r5, [sp, #16]
   146c0:	bl	130f0 <__assert_fail@plt+0x2000>
   146c4:	str	r0, [fp, #-20]	; 0xffffffec
   146c8:	b	14818 <__assert_fail@plt+0x3728>
   146cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   146d0:	cmp	r0, #0
   146d4:	bne	146f8 <__assert_fail@plt+0x3608>
   146d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   146dc:	cmp	r0, #0
   146e0:	beq	146f8 <__assert_fail@plt+0x3608>
   146e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   146e8:	str	r0, [fp, #-28]	; 0xffffffe4
   146ec:	movw	r0, #0
   146f0:	str	r0, [fp, #-44]	; 0xffffffd4
   146f4:	b	13198 <__assert_fail@plt+0x20a8>
   146f8:	b	146fc <__assert_fail@plt+0x360c>
   146fc:	b	14700 <__assert_fail@plt+0x3610>
   14700:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14704:	movw	r1, #0
   14708:	cmp	r0, r1
   1470c:	beq	14780 <__assert_fail@plt+0x3690>
   14710:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14714:	tst	r0, #1
   14718:	bne	14780 <__assert_fail@plt+0x3690>
   1471c:	b	14720 <__assert_fail@plt+0x3630>
   14720:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14724:	ldrsb	r0, [r0]
   14728:	cmp	r0, #0
   1472c:	beq	1477c <__assert_fail@plt+0x368c>
   14730:	b	14734 <__assert_fail@plt+0x3644>
   14734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14738:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1473c:	cmp	r0, r1
   14740:	bcs	1475c <__assert_fail@plt+0x366c>
   14744:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14748:	ldrb	r0, [r0]
   1474c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14750:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14754:	add	r1, r1, r2
   14758:	strb	r0, [r1]
   1475c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14760:	add	r0, r0, #1
   14764:	str	r0, [fp, #-44]	; 0xffffffd4
   14768:	b	1476c <__assert_fail@plt+0x367c>
   1476c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14770:	add	r0, r0, #1
   14774:	str	r0, [fp, #-52]	; 0xffffffcc
   14778:	b	14720 <__assert_fail@plt+0x3630>
   1477c:	b	14780 <__assert_fail@plt+0x3690>
   14780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14784:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14788:	cmp	r0, r1
   1478c:	bcs	147a4 <__assert_fail@plt+0x36b4>
   14790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14794:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14798:	add	r0, r0, r1
   1479c:	movw	r1, #0
   147a0:	strb	r1, [r0]
   147a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147a8:	str	r0, [fp, #-20]	; 0xffffffec
   147ac:	b	14818 <__assert_fail@plt+0x3728>
   147b0:	ldr	r0, [fp, #8]
   147b4:	cmp	r0, #2
   147b8:	bne	147d0 <__assert_fail@plt+0x36e0>
   147bc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   147c0:	tst	r0, #1
   147c4:	beq	147d0 <__assert_fail@plt+0x36e0>
   147c8:	movw	r0, #4
   147cc:	str	r0, [fp, #8]
   147d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147e0:	ldr	ip, [fp, #8]
   147e4:	ldr	lr, [fp, #12]
   147e8:	mvn	r4, #2
   147ec:	and	lr, lr, r4
   147f0:	ldr	r4, [fp, #20]
   147f4:	ldr	r5, [fp, #24]
   147f8:	str	ip, [sp]
   147fc:	str	lr, [sp, #4]
   14800:	movw	ip, #0
   14804:	str	ip, [sp, #8]
   14808:	str	r4, [sp, #12]
   1480c:	str	r5, [sp, #16]
   14810:	bl	130f0 <__assert_fail@plt+0x2000>
   14814:	str	r0, [fp, #-20]	; 0xffffffec
   14818:	ldr	r0, [fp, #-20]	; 0xffffffec
   1481c:	sub	sp, fp, #16
   14820:	pop	{r4, r5, r6, sl, fp, pc}
   14824:	push	{fp, lr}
   14828:	mov	fp, sp
   1482c:	sub	sp, sp, #16
   14830:	str	r0, [fp, #-4]
   14834:	str	r1, [sp, #8]
   14838:	str	r2, [sp, #4]
   1483c:	ldr	r0, [fp, #-4]
   14840:	ldr	r1, [sp, #8]
   14844:	ldr	r3, [sp, #4]
   14848:	movw	r2, #0
   1484c:	bl	14858 <__assert_fail@plt+0x3768>
   14850:	mov	sp, fp
   14854:	pop	{fp, pc}
   14858:	push	{r4, r5, r6, sl, fp, lr}
   1485c:	add	fp, sp, #16
   14860:	sub	sp, sp, #80	; 0x50
   14864:	str	r0, [fp, #-20]	; 0xffffffec
   14868:	str	r1, [fp, #-24]	; 0xffffffe8
   1486c:	str	r2, [fp, #-28]	; 0xffffffe4
   14870:	str	r3, [fp, #-32]	; 0xffffffe0
   14874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14878:	movw	r1, #0
   1487c:	cmp	r0, r1
   14880:	beq	14890 <__assert_fail@plt+0x37a0>
   14884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14888:	str	r0, [sp, #40]	; 0x28
   1488c:	b	148a0 <__assert_fail@plt+0x37b0>
   14890:	movw	r0, #57748	; 0xe194
   14894:	movt	r0, #2
   14898:	str	r0, [sp, #40]	; 0x28
   1489c:	b	148a0 <__assert_fail@plt+0x37b0>
   148a0:	ldr	r0, [sp, #40]	; 0x28
   148a4:	str	r0, [fp, #-36]	; 0xffffffdc
   148a8:	bl	11000 <__errno_location@plt>
   148ac:	ldr	r0, [r0]
   148b0:	str	r0, [fp, #-40]	; 0xffffffd8
   148b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   148b8:	ldr	r0, [r0, #4]
   148bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   148c0:	movw	r2, #0
   148c4:	cmp	r1, r2
   148c8:	movw	r1, #0
   148cc:	movne	r1, #1
   148d0:	tst	r1, #1
   148d4:	mov	r1, r2
   148d8:	moveq	r1, #1
   148dc:	orr	r0, r0, r1
   148e0:	str	r0, [fp, #-44]	; 0xffffffd4
   148e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   148e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   148f0:	ldr	r1, [r1]
   148f4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   148f8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   148fc:	add	lr, lr, #8
   14900:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14904:	ldr	r4, [r4, #40]	; 0x28
   14908:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1490c:	ldr	r5, [r5, #44]	; 0x2c
   14910:	str	r0, [sp, #36]	; 0x24
   14914:	mov	r0, r2
   14918:	str	r1, [sp, #32]
   1491c:	mov	r1, r2
   14920:	ldr	r2, [sp, #36]	; 0x24
   14924:	ldr	r6, [sp, #32]
   14928:	str	r6, [sp]
   1492c:	str	ip, [sp, #4]
   14930:	str	lr, [sp, #8]
   14934:	str	r4, [sp, #12]
   14938:	str	r5, [sp, #16]
   1493c:	bl	130f0 <__assert_fail@plt+0x2000>
   14940:	add	r0, r0, #1
   14944:	str	r0, [sp, #48]	; 0x30
   14948:	ldr	r0, [sp, #48]	; 0x30
   1494c:	bl	15d3c <__assert_fail@plt+0x4c4c>
   14950:	str	r0, [sp, #44]	; 0x2c
   14954:	ldr	r0, [sp, #44]	; 0x2c
   14958:	ldr	r1, [sp, #48]	; 0x30
   1495c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14964:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14968:	ldr	ip, [ip]
   1496c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14970:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14974:	add	r4, r4, #8
   14978:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1497c:	ldr	r5, [r5, #40]	; 0x28
   14980:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14984:	ldr	r6, [r6, #44]	; 0x2c
   14988:	str	ip, [sp]
   1498c:	str	lr, [sp, #4]
   14990:	str	r4, [sp, #8]
   14994:	str	r5, [sp, #12]
   14998:	str	r6, [sp, #16]
   1499c:	bl	130f0 <__assert_fail@plt+0x2000>
   149a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   149a4:	str	r0, [sp, #28]
   149a8:	str	r1, [sp, #24]
   149ac:	bl	11000 <__errno_location@plt>
   149b0:	ldr	r1, [sp, #24]
   149b4:	str	r1, [r0]
   149b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   149bc:	movw	r2, #0
   149c0:	cmp	r0, r2
   149c4:	beq	149d8 <__assert_fail@plt+0x38e8>
   149c8:	ldr	r0, [sp, #48]	; 0x30
   149cc:	sub	r0, r0, #1
   149d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149d4:	str	r0, [r1]
   149d8:	ldr	r0, [sp, #44]	; 0x2c
   149dc:	sub	sp, fp, #16
   149e0:	pop	{r4, r5, r6, sl, fp, pc}
   149e4:	push	{fp, lr}
   149e8:	mov	fp, sp
   149ec:	sub	sp, sp, #8
   149f0:	movw	r0, #57596	; 0xe0fc
   149f4:	movt	r0, #2
   149f8:	ldr	r0, [r0]
   149fc:	str	r0, [sp, #4]
   14a00:	movw	r0, #1
   14a04:	str	r0, [sp]
   14a08:	ldr	r0, [sp]
   14a0c:	movw	r1, #57600	; 0xe100
   14a10:	movt	r1, #2
   14a14:	ldr	r1, [r1]
   14a18:	cmp	r0, r1
   14a1c:	bge	14a44 <__assert_fail@plt+0x3954>
   14a20:	ldr	r0, [sp, #4]
   14a24:	ldr	r1, [sp]
   14a28:	add	r0, r0, r1, lsl #3
   14a2c:	ldr	r0, [r0, #4]
   14a30:	bl	12c24 <__assert_fail@plt+0x1b34>
   14a34:	ldr	r0, [sp]
   14a38:	add	r0, r0, #1
   14a3c:	str	r0, [sp]
   14a40:	b	14a08 <__assert_fail@plt+0x3918>
   14a44:	ldr	r0, [sp, #4]
   14a48:	ldr	r0, [r0, #4]
   14a4c:	movw	r1, #57796	; 0xe1c4
   14a50:	movt	r1, #2
   14a54:	cmp	r0, r1
   14a58:	beq	14a84 <__assert_fail@plt+0x3994>
   14a5c:	ldr	r0, [sp, #4]
   14a60:	ldr	r0, [r0, #4]
   14a64:	bl	12c24 <__assert_fail@plt+0x1b34>
   14a68:	movw	r0, #256	; 0x100
   14a6c:	movw	r1, #57604	; 0xe104
   14a70:	movt	r1, #2
   14a74:	str	r0, [r1]
   14a78:	movw	r0, #57796	; 0xe1c4
   14a7c:	movt	r0, #2
   14a80:	str	r0, [r1, #4]
   14a84:	ldr	r0, [sp, #4]
   14a88:	movw	r1, #57604	; 0xe104
   14a8c:	movt	r1, #2
   14a90:	cmp	r0, r1
   14a94:	beq	14ab4 <__assert_fail@plt+0x39c4>
   14a98:	ldr	r0, [sp, #4]
   14a9c:	bl	12c24 <__assert_fail@plt+0x1b34>
   14aa0:	movw	r0, #57596	; 0xe0fc
   14aa4:	movt	r0, #2
   14aa8:	movw	r1, #57604	; 0xe104
   14aac:	movt	r1, #2
   14ab0:	str	r1, [r0]
   14ab4:	movw	r0, #57600	; 0xe100
   14ab8:	movt	r0, #2
   14abc:	movw	r1, #1
   14ac0:	str	r1, [r0]
   14ac4:	mov	sp, fp
   14ac8:	pop	{fp, pc}
   14acc:	push	{fp, lr}
   14ad0:	mov	fp, sp
   14ad4:	sub	sp, sp, #8
   14ad8:	str	r0, [sp, #4]
   14adc:	str	r1, [sp]
   14ae0:	ldr	r0, [sp, #4]
   14ae4:	ldr	r1, [sp]
   14ae8:	mvn	r2, #0
   14aec:	movw	r3, #57748	; 0xe194
   14af0:	movt	r3, #2
   14af4:	bl	14b00 <__assert_fail@plt+0x3a10>
   14af8:	mov	sp, fp
   14afc:	pop	{fp, pc}
   14b00:	push	{r4, r5, r6, sl, fp, lr}
   14b04:	add	fp, sp, #16
   14b08:	sub	sp, sp, #80	; 0x50
   14b0c:	str	r0, [fp, #-20]	; 0xffffffec
   14b10:	str	r1, [fp, #-24]	; 0xffffffe8
   14b14:	str	r2, [fp, #-28]	; 0xffffffe4
   14b18:	str	r3, [fp, #-32]	; 0xffffffe0
   14b1c:	bl	11000 <__errno_location@plt>
   14b20:	ldr	r1, [pc, #672]	; 14dc8 <__assert_fail@plt+0x3cd8>
   14b24:	ldr	r0, [r0]
   14b28:	str	r0, [fp, #-36]	; 0xffffffdc
   14b2c:	movw	r0, #57596	; 0xe0fc
   14b30:	movt	r0, #2
   14b34:	ldr	r0, [r0]
   14b38:	str	r0, [fp, #-40]	; 0xffffffd8
   14b3c:	str	r1, [fp, #-44]	; 0xffffffd4
   14b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b44:	movw	r1, #0
   14b48:	cmp	r1, r0
   14b4c:	bgt	14b60 <__assert_fail@plt+0x3a70>
   14b50:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b58:	cmp	r0, r1
   14b5c:	blt	14b64 <__assert_fail@plt+0x3a74>
   14b60:	bl	110e4 <abort@plt>
   14b64:	movw	r0, #57600	; 0xe100
   14b68:	movt	r0, #2
   14b6c:	ldr	r0, [r0]
   14b70:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b74:	cmp	r0, r1
   14b78:	bgt	14c70 <__assert_fail@plt+0x3b80>
   14b7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b80:	movw	r1, #57604	; 0xe104
   14b84:	movt	r1, #2
   14b88:	cmp	r0, r1
   14b8c:	movw	r0, #0
   14b90:	moveq	r0, #1
   14b94:	and	r0, r0, #1
   14b98:	strb	r0, [fp, #-45]	; 0xffffffd3
   14b9c:	movw	r0, #57600	; 0xe100
   14ba0:	movt	r0, #2
   14ba4:	ldr	r0, [r0]
   14ba8:	str	r0, [sp, #44]	; 0x2c
   14bac:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14bb0:	tst	r0, #1
   14bb4:	beq	14bc4 <__assert_fail@plt+0x3ad4>
   14bb8:	movw	r0, #0
   14bbc:	str	r0, [sp, #24]
   14bc0:	b	14bcc <__assert_fail@plt+0x3adc>
   14bc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14bc8:	str	r0, [sp, #24]
   14bcc:	ldr	r0, [sp, #24]
   14bd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14bd4:	movw	r2, #57600	; 0xe100
   14bd8:	movt	r2, #2
   14bdc:	ldr	r2, [r2]
   14be0:	sub	r1, r1, r2
   14be4:	add	r2, r1, #1
   14be8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14bec:	add	r1, sp, #44	; 0x2c
   14bf0:	movw	ip, #8
   14bf4:	str	ip, [sp]
   14bf8:	bl	15f78 <__assert_fail@plt+0x4e88>
   14bfc:	str	r0, [fp, #-40]	; 0xffffffd8
   14c00:	movw	r1, #57596	; 0xe0fc
   14c04:	movt	r1, #2
   14c08:	str	r0, [r1]
   14c0c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14c10:	tst	r0, #1
   14c14:	beq	14c34 <__assert_fail@plt+0x3b44>
   14c18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c1c:	movw	r1, #57604	; 0xe104
   14c20:	movt	r1, #2
   14c24:	ldr	r2, [r1]
   14c28:	str	r2, [r0]
   14c2c:	ldr	r1, [r1, #4]
   14c30:	str	r1, [r0, #4]
   14c34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c38:	movw	r1, #57600	; 0xe100
   14c3c:	movt	r1, #2
   14c40:	ldr	r1, [r1]
   14c44:	add	r0, r0, r1, lsl #3
   14c48:	ldr	r2, [sp, #44]	; 0x2c
   14c4c:	sub	r1, r2, r1
   14c50:	lsl	r2, r1, #3
   14c54:	movw	r1, #0
   14c58:	and	r1, r1, #255	; 0xff
   14c5c:	bl	11018 <memset@plt>
   14c60:	ldr	r0, [sp, #44]	; 0x2c
   14c64:	movw	r1, #57600	; 0xe100
   14c68:	movt	r1, #2
   14c6c:	str	r0, [r1]
   14c70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c74:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c78:	ldr	r0, [r0, r1, lsl #3]
   14c7c:	str	r0, [sp, #40]	; 0x28
   14c80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c84:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c88:	add	r0, r0, r1, lsl #3
   14c8c:	ldr	r0, [r0, #4]
   14c90:	str	r0, [sp, #36]	; 0x24
   14c94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c98:	ldr	r0, [r0, #4]
   14c9c:	orr	r0, r0, #1
   14ca0:	str	r0, [sp, #32]
   14ca4:	ldr	r0, [sp, #36]	; 0x24
   14ca8:	ldr	r1, [sp, #40]	; 0x28
   14cac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14cb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cb4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14cb8:	ldr	ip, [ip]
   14cbc:	ldr	lr, [sp, #32]
   14cc0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14cc4:	add	r4, r4, #8
   14cc8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14ccc:	ldr	r5, [r5, #40]	; 0x28
   14cd0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14cd4:	ldr	r6, [r6, #44]	; 0x2c
   14cd8:	str	ip, [sp]
   14cdc:	str	lr, [sp, #4]
   14ce0:	str	r4, [sp, #8]
   14ce4:	str	r5, [sp, #12]
   14ce8:	str	r6, [sp, #16]
   14cec:	bl	130f0 <__assert_fail@plt+0x2000>
   14cf0:	str	r0, [sp, #28]
   14cf4:	ldr	r0, [sp, #40]	; 0x28
   14cf8:	ldr	r1, [sp, #28]
   14cfc:	cmp	r0, r1
   14d00:	bhi	14da8 <__assert_fail@plt+0x3cb8>
   14d04:	ldr	r0, [sp, #28]
   14d08:	add	r0, r0, #1
   14d0c:	str	r0, [sp, #40]	; 0x28
   14d10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14d14:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d18:	add	r1, r1, r2, lsl #3
   14d1c:	str	r0, [r1]
   14d20:	ldr	r0, [sp, #36]	; 0x24
   14d24:	movw	r1, #57796	; 0xe1c4
   14d28:	movt	r1, #2
   14d2c:	cmp	r0, r1
   14d30:	beq	14d3c <__assert_fail@plt+0x3c4c>
   14d34:	ldr	r0, [sp, #36]	; 0x24
   14d38:	bl	12c24 <__assert_fail@plt+0x1b34>
   14d3c:	ldr	r0, [sp, #40]	; 0x28
   14d40:	bl	15d3c <__assert_fail@plt+0x4c4c>
   14d44:	mov	r1, r0
   14d48:	str	r0, [sp, #36]	; 0x24
   14d4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d50:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d54:	add	r0, r0, r2, lsl #3
   14d58:	str	r1, [r0, #4]
   14d5c:	ldr	r0, [sp, #36]	; 0x24
   14d60:	ldr	r1, [sp, #40]	; 0x28
   14d64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d6c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14d70:	ldr	ip, [ip]
   14d74:	ldr	lr, [sp, #32]
   14d78:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14d7c:	add	r4, r4, #8
   14d80:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14d84:	ldr	r5, [r5, #40]	; 0x28
   14d88:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14d8c:	ldr	r6, [r6, #44]	; 0x2c
   14d90:	str	ip, [sp]
   14d94:	str	lr, [sp, #4]
   14d98:	str	r4, [sp, #8]
   14d9c:	str	r5, [sp, #12]
   14da0:	str	r6, [sp, #16]
   14da4:	bl	130f0 <__assert_fail@plt+0x2000>
   14da8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14dac:	str	r0, [sp, #20]
   14db0:	bl	11000 <__errno_location@plt>
   14db4:	ldr	r1, [sp, #20]
   14db8:	str	r1, [r0]
   14dbc:	ldr	r0, [sp, #36]	; 0x24
   14dc0:	sub	sp, fp, #16
   14dc4:	pop	{r4, r5, r6, sl, fp, pc}
   14dc8:	svcvc	0x00ffffff
   14dcc:	push	{fp, lr}
   14dd0:	mov	fp, sp
   14dd4:	sub	sp, sp, #16
   14dd8:	str	r0, [fp, #-4]
   14ddc:	str	r1, [sp, #8]
   14de0:	str	r2, [sp, #4]
   14de4:	ldr	r0, [fp, #-4]
   14de8:	ldr	r1, [sp, #8]
   14dec:	ldr	r2, [sp, #4]
   14df0:	movw	r3, #57748	; 0xe194
   14df4:	movt	r3, #2
   14df8:	bl	14b00 <__assert_fail@plt+0x3a10>
   14dfc:	mov	sp, fp
   14e00:	pop	{fp, pc}
   14e04:	push	{fp, lr}
   14e08:	mov	fp, sp
   14e0c:	sub	sp, sp, #8
   14e10:	str	r0, [sp, #4]
   14e14:	ldr	r1, [sp, #4]
   14e18:	movw	r0, #0
   14e1c:	bl	14acc <__assert_fail@plt+0x39dc>
   14e20:	mov	sp, fp
   14e24:	pop	{fp, pc}
   14e28:	push	{fp, lr}
   14e2c:	mov	fp, sp
   14e30:	sub	sp, sp, #8
   14e34:	str	r0, [sp, #4]
   14e38:	str	r1, [sp]
   14e3c:	ldr	r1, [sp, #4]
   14e40:	ldr	r2, [sp]
   14e44:	movw	r0, #0
   14e48:	bl	14dcc <__assert_fail@plt+0x3cdc>
   14e4c:	mov	sp, fp
   14e50:	pop	{fp, pc}
   14e54:	push	{fp, lr}
   14e58:	mov	fp, sp
   14e5c:	sub	sp, sp, #64	; 0x40
   14e60:	str	r0, [fp, #-4]
   14e64:	str	r1, [fp, #-8]
   14e68:	str	r2, [fp, #-12]
   14e6c:	ldr	r1, [fp, #-8]
   14e70:	add	r0, sp, #4
   14e74:	bl	14e94 <__assert_fail@plt+0x3da4>
   14e78:	ldr	r0, [fp, #-4]
   14e7c:	ldr	r1, [fp, #-12]
   14e80:	mvn	r2, #0
   14e84:	add	r3, sp, #4
   14e88:	bl	14b00 <__assert_fail@plt+0x3a10>
   14e8c:	mov	sp, fp
   14e90:	pop	{fp, pc}
   14e94:	push	{fp, lr}
   14e98:	mov	fp, sp
   14e9c:	sub	sp, sp, #8
   14ea0:	str	r1, [sp, #4]
   14ea4:	mov	r1, r0
   14ea8:	str	r0, [sp]
   14eac:	mov	r0, r1
   14eb0:	movw	r1, #0
   14eb4:	and	r1, r1, #255	; 0xff
   14eb8:	movw	r2, #48	; 0x30
   14ebc:	bl	11018 <memset@plt>
   14ec0:	ldr	r0, [sp, #4]
   14ec4:	cmp	r0, #10
   14ec8:	bne	14ed0 <__assert_fail@plt+0x3de0>
   14ecc:	bl	110e4 <abort@plt>
   14ed0:	ldr	r0, [sp, #4]
   14ed4:	ldr	r1, [sp]
   14ed8:	str	r0, [r1]
   14edc:	mov	sp, fp
   14ee0:	pop	{fp, pc}
   14ee4:	push	{fp, lr}
   14ee8:	mov	fp, sp
   14eec:	sub	sp, sp, #64	; 0x40
   14ef0:	str	r0, [fp, #-4]
   14ef4:	str	r1, [fp, #-8]
   14ef8:	str	r2, [fp, #-12]
   14efc:	str	r3, [fp, #-16]
   14f00:	ldr	r1, [fp, #-8]
   14f04:	mov	r0, sp
   14f08:	bl	14e94 <__assert_fail@plt+0x3da4>
   14f0c:	ldr	r0, [fp, #-4]
   14f10:	ldr	r1, [fp, #-12]
   14f14:	ldr	r2, [fp, #-16]
   14f18:	mov	r3, sp
   14f1c:	bl	14b00 <__assert_fail@plt+0x3a10>
   14f20:	mov	sp, fp
   14f24:	pop	{fp, pc}
   14f28:	push	{fp, lr}
   14f2c:	mov	fp, sp
   14f30:	sub	sp, sp, #8
   14f34:	str	r0, [sp, #4]
   14f38:	str	r1, [sp]
   14f3c:	ldr	r1, [sp, #4]
   14f40:	ldr	r2, [sp]
   14f44:	movw	r0, #0
   14f48:	bl	14e54 <__assert_fail@plt+0x3d64>
   14f4c:	mov	sp, fp
   14f50:	pop	{fp, pc}
   14f54:	push	{fp, lr}
   14f58:	mov	fp, sp
   14f5c:	sub	sp, sp, #16
   14f60:	str	r0, [fp, #-4]
   14f64:	str	r1, [sp, #8]
   14f68:	str	r2, [sp, #4]
   14f6c:	ldr	r1, [fp, #-4]
   14f70:	ldr	r2, [sp, #8]
   14f74:	ldr	r3, [sp, #4]
   14f78:	movw	r0, #0
   14f7c:	bl	14ee4 <__assert_fail@plt+0x3df4>
   14f80:	mov	sp, fp
   14f84:	pop	{fp, pc}
   14f88:	push	{fp, lr}
   14f8c:	mov	fp, sp
   14f90:	sub	sp, sp, #72	; 0x48
   14f94:	movw	r3, #57748	; 0xe194
   14f98:	movt	r3, #2
   14f9c:	str	r0, [fp, #-4]
   14fa0:	str	r1, [fp, #-8]
   14fa4:	strb	r2, [fp, #-9]
   14fa8:	add	r0, sp, #12
   14fac:	mov	r1, r0
   14fb0:	str	r0, [sp, #8]
   14fb4:	mov	r0, r1
   14fb8:	mov	r1, r3
   14fbc:	movw	r2, #48	; 0x30
   14fc0:	bl	10ec8 <memcpy@plt>
   14fc4:	ldr	r0, [sp, #8]
   14fc8:	ldrb	r1, [fp, #-9]
   14fcc:	movw	r2, #1
   14fd0:	bl	12e98 <__assert_fail@plt+0x1da8>
   14fd4:	ldr	r1, [fp, #-4]
   14fd8:	ldr	r2, [fp, #-8]
   14fdc:	movw	r3, #0
   14fe0:	str	r0, [sp, #4]
   14fe4:	mov	r0, r3
   14fe8:	add	r3, sp, #12
   14fec:	bl	14b00 <__assert_fail@plt+0x3a10>
   14ff0:	mov	sp, fp
   14ff4:	pop	{fp, pc}
   14ff8:	push	{fp, lr}
   14ffc:	mov	fp, sp
   15000:	sub	sp, sp, #8
   15004:	str	r0, [sp, #4]
   15008:	strb	r1, [sp, #3]
   1500c:	ldr	r0, [sp, #4]
   15010:	mvn	r1, #0
   15014:	ldrb	r2, [sp, #3]
   15018:	bl	14f88 <__assert_fail@plt+0x3e98>
   1501c:	mov	sp, fp
   15020:	pop	{fp, pc}
   15024:	push	{fp, lr}
   15028:	mov	fp, sp
   1502c:	sub	sp, sp, #8
   15030:	str	r0, [sp, #4]
   15034:	ldr	r0, [sp, #4]
   15038:	movw	r1, #58	; 0x3a
   1503c:	and	r1, r1, #255	; 0xff
   15040:	bl	14ff8 <__assert_fail@plt+0x3f08>
   15044:	mov	sp, fp
   15048:	pop	{fp, pc}
   1504c:	push	{fp, lr}
   15050:	mov	fp, sp
   15054:	sub	sp, sp, #8
   15058:	str	r0, [sp, #4]
   1505c:	str	r1, [sp]
   15060:	ldr	r0, [sp, #4]
   15064:	ldr	r1, [sp]
   15068:	movw	r2, #58	; 0x3a
   1506c:	and	r2, r2, #255	; 0xff
   15070:	bl	14f88 <__assert_fail@plt+0x3e98>
   15074:	mov	sp, fp
   15078:	pop	{fp, pc}
   1507c:	push	{fp, lr}
   15080:	mov	fp, sp
   15084:	sub	sp, sp, #120	; 0x78
   15088:	str	r0, [fp, #-4]
   1508c:	str	r1, [fp, #-8]
   15090:	str	r2, [fp, #-12]
   15094:	ldr	r1, [fp, #-8]
   15098:	add	r0, sp, #12
   1509c:	bl	14e94 <__assert_fail@plt+0x3da4>
   150a0:	add	r0, sp, #60	; 0x3c
   150a4:	mov	r1, r0
   150a8:	add	r2, sp, #12
   150ac:	str	r0, [sp, #8]
   150b0:	mov	r0, r1
   150b4:	mov	r1, r2
   150b8:	movw	r2, #48	; 0x30
   150bc:	bl	10ec8 <memcpy@plt>
   150c0:	ldr	r0, [sp, #8]
   150c4:	movw	r1, #58	; 0x3a
   150c8:	and	r1, r1, #255	; 0xff
   150cc:	movw	r2, #1
   150d0:	bl	12e98 <__assert_fail@plt+0x1da8>
   150d4:	ldr	r1, [fp, #-4]
   150d8:	ldr	r2, [fp, #-12]
   150dc:	str	r0, [sp, #4]
   150e0:	mov	r0, r1
   150e4:	mov	r1, r2
   150e8:	mvn	r2, #0
   150ec:	add	r3, sp, #60	; 0x3c
   150f0:	bl	14b00 <__assert_fail@plt+0x3a10>
   150f4:	mov	sp, fp
   150f8:	pop	{fp, pc}
   150fc:	push	{fp, lr}
   15100:	mov	fp, sp
   15104:	sub	sp, sp, #24
   15108:	str	r0, [fp, #-4]
   1510c:	str	r1, [fp, #-8]
   15110:	str	r2, [sp, #12]
   15114:	str	r3, [sp, #8]
   15118:	ldr	r0, [fp, #-4]
   1511c:	ldr	r1, [fp, #-8]
   15120:	ldr	r2, [sp, #12]
   15124:	ldr	r3, [sp, #8]
   15128:	mvn	ip, #0
   1512c:	str	ip, [sp]
   15130:	bl	1513c <__assert_fail@plt+0x404c>
   15134:	mov	sp, fp
   15138:	pop	{fp, pc}
   1513c:	push	{fp, lr}
   15140:	mov	fp, sp
   15144:	sub	sp, sp, #72	; 0x48
   15148:	ldr	ip, [fp, #8]
   1514c:	movw	lr, #57748	; 0xe194
   15150:	movt	lr, #2
   15154:	str	r0, [fp, #-4]
   15158:	str	r1, [fp, #-8]
   1515c:	str	r2, [fp, #-12]
   15160:	str	r3, [fp, #-16]
   15164:	add	r0, sp, #8
   15168:	mov	r1, r0
   1516c:	str	r0, [sp, #4]
   15170:	mov	r0, r1
   15174:	mov	r1, lr
   15178:	movw	r2, #48	; 0x30
   1517c:	str	ip, [sp]
   15180:	bl	10ec8 <memcpy@plt>
   15184:	ldr	r1, [fp, #-8]
   15188:	ldr	r2, [fp, #-12]
   1518c:	ldr	r0, [sp, #4]
   15190:	bl	12f98 <__assert_fail@plt+0x1ea8>
   15194:	ldr	r0, [fp, #-4]
   15198:	ldr	r1, [fp, #-16]
   1519c:	ldr	r2, [fp, #8]
   151a0:	add	r3, sp, #8
   151a4:	bl	14b00 <__assert_fail@plt+0x3a10>
   151a8:	mov	sp, fp
   151ac:	pop	{fp, pc}
   151b0:	push	{fp, lr}
   151b4:	mov	fp, sp
   151b8:	sub	sp, sp, #16
   151bc:	str	r0, [fp, #-4]
   151c0:	str	r1, [sp, #8]
   151c4:	str	r2, [sp, #4]
   151c8:	ldr	r1, [fp, #-4]
   151cc:	ldr	r2, [sp, #8]
   151d0:	ldr	r3, [sp, #4]
   151d4:	movw	r0, #0
   151d8:	bl	150fc <__assert_fail@plt+0x400c>
   151dc:	mov	sp, fp
   151e0:	pop	{fp, pc}
   151e4:	push	{fp, lr}
   151e8:	mov	fp, sp
   151ec:	sub	sp, sp, #24
   151f0:	str	r0, [fp, #-4]
   151f4:	str	r1, [fp, #-8]
   151f8:	str	r2, [sp, #12]
   151fc:	str	r3, [sp, #8]
   15200:	ldr	r1, [fp, #-4]
   15204:	ldr	r2, [fp, #-8]
   15208:	ldr	r3, [sp, #12]
   1520c:	ldr	r0, [sp, #8]
   15210:	movw	ip, #0
   15214:	str	r0, [sp, #4]
   15218:	mov	r0, ip
   1521c:	ldr	ip, [sp, #4]
   15220:	str	ip, [sp]
   15224:	bl	1513c <__assert_fail@plt+0x404c>
   15228:	mov	sp, fp
   1522c:	pop	{fp, pc}
   15230:	push	{fp, lr}
   15234:	mov	fp, sp
   15238:	sub	sp, sp, #16
   1523c:	str	r0, [fp, #-4]
   15240:	str	r1, [sp, #8]
   15244:	str	r2, [sp, #4]
   15248:	ldr	r0, [fp, #-4]
   1524c:	ldr	r1, [sp, #8]
   15250:	ldr	r2, [sp, #4]
   15254:	movw	r3, #57612	; 0xe10c
   15258:	movt	r3, #2
   1525c:	bl	14b00 <__assert_fail@plt+0x3a10>
   15260:	mov	sp, fp
   15264:	pop	{fp, pc}
   15268:	push	{fp, lr}
   1526c:	mov	fp, sp
   15270:	sub	sp, sp, #8
   15274:	str	r0, [sp, #4]
   15278:	str	r1, [sp]
   1527c:	ldr	r1, [sp, #4]
   15280:	ldr	r2, [sp]
   15284:	movw	r0, #0
   15288:	bl	15230 <__assert_fail@plt+0x4140>
   1528c:	mov	sp, fp
   15290:	pop	{fp, pc}
   15294:	push	{fp, lr}
   15298:	mov	fp, sp
   1529c:	sub	sp, sp, #8
   152a0:	str	r0, [sp, #4]
   152a4:	str	r1, [sp]
   152a8:	ldr	r0, [sp, #4]
   152ac:	ldr	r1, [sp]
   152b0:	mvn	r2, #0
   152b4:	bl	15230 <__assert_fail@plt+0x4140>
   152b8:	mov	sp, fp
   152bc:	pop	{fp, pc}
   152c0:	push	{fp, lr}
   152c4:	mov	fp, sp
   152c8:	sub	sp, sp, #8
   152cc:	str	r0, [sp, #4]
   152d0:	ldr	r1, [sp, #4]
   152d4:	movw	r0, #0
   152d8:	bl	15294 <__assert_fail@plt+0x41a4>
   152dc:	mov	sp, fp
   152e0:	pop	{fp, pc}
   152e4:	push	{fp, lr}
   152e8:	mov	fp, sp
   152ec:	sub	sp, sp, #24
   152f0:	str	r0, [fp, #-8]
   152f4:	str	r1, [sp, #12]
   152f8:	ldr	r0, [fp, #-8]
   152fc:	bl	10fd0 <gettext@plt>
   15300:	str	r0, [sp, #8]
   15304:	ldr	r0, [sp, #8]
   15308:	ldr	r1, [fp, #-8]
   1530c:	cmp	r0, r1
   15310:	beq	15320 <__assert_fail@plt+0x4230>
   15314:	ldr	r0, [sp, #8]
   15318:	str	r0, [fp, #-4]
   1531c:	b	153ec <__assert_fail@plt+0x42fc>
   15320:	bl	1b728 <__assert_fail@plt+0xa638>
   15324:	str	r0, [sp, #4]
   15328:	ldr	r0, [sp, #4]
   1532c:	movw	r1, #55760	; 0xd9d0
   15330:	movt	r1, #1
   15334:	bl	1ad74 <__assert_fail@plt+0x9c84>
   15338:	cmp	r0, #0
   1533c:	bne	15374 <__assert_fail@plt+0x4284>
   15340:	ldr	r0, [fp, #-8]
   15344:	ldrb	r0, [r0]
   15348:	cmp	r0, #96	; 0x60
   1534c:	movw	r0, #0
   15350:	moveq	r0, #1
   15354:	tst	r0, #1
   15358:	movw	r0, #55770	; 0xd9da
   1535c:	movt	r0, #1
   15360:	movw	r1, #55766	; 0xd9d6
   15364:	movt	r1, #1
   15368:	movne	r0, r1
   1536c:	str	r0, [fp, #-4]
   15370:	b	153ec <__assert_fail@plt+0x42fc>
   15374:	ldr	r0, [sp, #4]
   15378:	movw	r1, #55774	; 0xd9de
   1537c:	movt	r1, #1
   15380:	bl	1ad74 <__assert_fail@plt+0x9c84>
   15384:	cmp	r0, #0
   15388:	bne	153c0 <__assert_fail@plt+0x42d0>
   1538c:	ldr	r0, [fp, #-8]
   15390:	ldrb	r0, [r0]
   15394:	cmp	r0, #96	; 0x60
   15398:	movw	r0, #0
   1539c:	moveq	r0, #1
   153a0:	tst	r0, #1
   153a4:	movw	r0, #55786	; 0xd9ea
   153a8:	movt	r0, #1
   153ac:	movw	r1, #55782	; 0xd9e6
   153b0:	movt	r1, #1
   153b4:	movne	r0, r1
   153b8:	str	r0, [fp, #-4]
   153bc:	b	153ec <__assert_fail@plt+0x42fc>
   153c0:	ldr	r0, [sp, #12]
   153c4:	cmp	r0, #9
   153c8:	movw	r0, #0
   153cc:	moveq	r0, #1
   153d0:	tst	r0, #1
   153d4:	movw	r0, #55758	; 0xd9ce
   153d8:	movt	r0, #1
   153dc:	movw	r1, #55754	; 0xd9ca
   153e0:	movt	r1, #1
   153e4:	movne	r0, r1
   153e8:	str	r0, [fp, #-4]
   153ec:	ldr	r0, [fp, #-4]
   153f0:	mov	sp, fp
   153f4:	pop	{fp, pc}
   153f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153fc:	add	fp, sp, #28
   15400:	sub	sp, sp, #196	; 0xc4
   15404:	ldr	ip, [fp, #12]
   15408:	ldr	lr, [fp, #8]
   1540c:	str	r0, [fp, #-32]	; 0xffffffe0
   15410:	str	r1, [fp, #-36]	; 0xffffffdc
   15414:	str	r2, [fp, #-40]	; 0xffffffd8
   15418:	str	r3, [fp, #-44]	; 0xffffffd4
   1541c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15420:	movw	r1, #0
   15424:	cmp	r0, r1
   15428:	beq	1545c <__assert_fail@plt+0x436c>
   1542c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15430:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15434:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15438:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1543c:	movw	ip, #55876	; 0xda44
   15440:	movt	ip, #1
   15444:	str	r1, [fp, #-48]	; 0xffffffd0
   15448:	mov	r1, ip
   1544c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15450:	str	ip, [sp]
   15454:	bl	10ff4 <fprintf@plt>
   15458:	b	15474 <__assert_fail@plt+0x4384>
   1545c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15460:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15464:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15468:	movw	r1, #55888	; 0xda50
   1546c:	movt	r1, #1
   15470:	bl	10ff4 <fprintf@plt>
   15474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15478:	movw	r1, #55895	; 0xda57
   1547c:	movt	r1, #1
   15480:	str	r0, [fp, #-52]	; 0xffffffcc
   15484:	mov	r0, r1
   15488:	bl	10fd0 <gettext@plt>
   1548c:	movw	r1, #56613	; 0xdd25
   15490:	movt	r1, #1
   15494:	movw	r3, #2022	; 0x7e6
   15498:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1549c:	str	r0, [fp, #-56]	; 0xffffffc8
   154a0:	mov	r0, r2
   154a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   154a8:	bl	10ff4 <fprintf@plt>
   154ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   154b0:	movw	r2, #55203	; 0xd7a3
   154b4:	movt	r2, #1
   154b8:	str	r0, [fp, #-60]	; 0xffffffc4
   154bc:	mov	r0, r2
   154c0:	str	r2, [fp, #-64]	; 0xffffffc0
   154c4:	bl	10e74 <fputs_unlocked@plt>
   154c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   154cc:	movw	r2, #55899	; 0xda5b
   154d0:	movt	r2, #1
   154d4:	str	r0, [fp, #-68]	; 0xffffffbc
   154d8:	mov	r0, r2
   154dc:	str	r1, [fp, #-72]	; 0xffffffb8
   154e0:	bl	10fd0 <gettext@plt>
   154e4:	movw	r2, #56070	; 0xdb06
   154e8:	movt	r2, #1
   154ec:	ldr	r1, [fp, #-72]	; 0xffffffb8
   154f0:	str	r0, [fp, #-76]	; 0xffffffb4
   154f4:	mov	r0, r1
   154f8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   154fc:	bl	10ff4 <fprintf@plt>
   15500:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15504:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15508:	str	r0, [fp, #-80]	; 0xffffffb0
   1550c:	mov	r0, r2
   15510:	bl	10e74 <fputs_unlocked@plt>
   15514:	ldr	r1, [fp, #12]
   15518:	cmp	r1, #9
   1551c:	str	r1, [fp, #-84]	; 0xffffffac
   15520:	bhi	1593c <__assert_fail@plt+0x484c>
   15524:	add	r0, pc, #8
   15528:	ldr	r1, [fp, #-84]	; 0xffffffac
   1552c:	ldr	r0, [r0, r1, lsl #2]
   15530:	mov	pc, r0
   15534:	andeq	r5, r1, ip, asr r5
   15538:	andeq	r5, r1, r0, ror #10
   1553c:	muleq	r1, r8, r5
   15540:	ldrdeq	r5, [r1], -r8
   15544:	andeq	r5, r1, r0, lsr r6
   15548:	muleq	r1, r4, r6
   1554c:	andeq	r5, r1, r4, lsl #14
   15550:	andeq	r5, r1, r0, lsl #15
   15554:	andeq	r5, r1, r8, lsl #16
   15558:	muleq	r1, ip, r8
   1555c:	b	159d8 <__assert_fail@plt+0x48e8>
   15560:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15564:	movw	r1, #56104	; 0xdb28
   15568:	movt	r1, #1
   1556c:	str	r0, [fp, #-88]	; 0xffffffa8
   15570:	mov	r0, r1
   15574:	bl	10fd0 <gettext@plt>
   15578:	ldr	r1, [fp, #8]
   1557c:	ldr	r2, [r1]
   15580:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15584:	str	r0, [fp, #-92]	; 0xffffffa4
   15588:	mov	r0, r1
   1558c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15590:	bl	10ff4 <fprintf@plt>
   15594:	b	159d8 <__assert_fail@plt+0x48e8>
   15598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1559c:	movw	r1, #56120	; 0xdb38
   155a0:	movt	r1, #1
   155a4:	str	r0, [fp, #-96]	; 0xffffffa0
   155a8:	mov	r0, r1
   155ac:	bl	10fd0 <gettext@plt>
   155b0:	ldr	r1, [fp, #8]
   155b4:	ldr	r2, [r1]
   155b8:	ldr	r1, [fp, #8]
   155bc:	ldr	r3, [r1, #4]
   155c0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   155c4:	str	r0, [fp, #-100]	; 0xffffff9c
   155c8:	mov	r0, r1
   155cc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   155d0:	bl	10ff4 <fprintf@plt>
   155d4:	b	159d8 <__assert_fail@plt+0x48e8>
   155d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155dc:	movw	r1, #56143	; 0xdb4f
   155e0:	movt	r1, #1
   155e4:	str	r0, [fp, #-104]	; 0xffffff98
   155e8:	mov	r0, r1
   155ec:	bl	10fd0 <gettext@plt>
   155f0:	ldr	r1, [fp, #8]
   155f4:	ldr	r2, [r1]
   155f8:	ldr	r1, [fp, #8]
   155fc:	ldr	r3, [r1, #4]
   15600:	ldr	r1, [fp, #8]
   15604:	ldr	r1, [r1, #8]
   15608:	ldr	ip, [fp, #-104]	; 0xffffff98
   1560c:	str	r0, [fp, #-108]	; 0xffffff94
   15610:	mov	r0, ip
   15614:	ldr	lr, [fp, #-108]	; 0xffffff94
   15618:	str	r1, [sp, #112]	; 0x70
   1561c:	mov	r1, lr
   15620:	ldr	r4, [sp, #112]	; 0x70
   15624:	str	r4, [sp]
   15628:	bl	10ff4 <fprintf@plt>
   1562c:	b	159d8 <__assert_fail@plt+0x48e8>
   15630:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15634:	movw	r1, #56171	; 0xdb6b
   15638:	movt	r1, #1
   1563c:	str	r0, [sp, #108]	; 0x6c
   15640:	mov	r0, r1
   15644:	bl	10fd0 <gettext@plt>
   15648:	ldr	r1, [fp, #8]
   1564c:	ldr	r2, [r1]
   15650:	ldr	r1, [fp, #8]
   15654:	ldr	r3, [r1, #4]
   15658:	ldr	r1, [fp, #8]
   1565c:	ldr	r1, [r1, #8]
   15660:	ldr	ip, [fp, #8]
   15664:	ldr	ip, [ip, #12]
   15668:	ldr	lr, [sp, #108]	; 0x6c
   1566c:	str	r0, [sp, #104]	; 0x68
   15670:	mov	r0, lr
   15674:	ldr	r4, [sp, #104]	; 0x68
   15678:	str	r1, [sp, #100]	; 0x64
   1567c:	mov	r1, r4
   15680:	ldr	r5, [sp, #100]	; 0x64
   15684:	str	r5, [sp]
   15688:	str	ip, [sp, #4]
   1568c:	bl	10ff4 <fprintf@plt>
   15690:	b	159d8 <__assert_fail@plt+0x48e8>
   15694:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15698:	movw	r1, #56203	; 0xdb8b
   1569c:	movt	r1, #1
   156a0:	str	r0, [sp, #96]	; 0x60
   156a4:	mov	r0, r1
   156a8:	bl	10fd0 <gettext@plt>
   156ac:	ldr	r1, [fp, #8]
   156b0:	ldr	r2, [r1]
   156b4:	ldr	r1, [fp, #8]
   156b8:	ldr	r3, [r1, #4]
   156bc:	ldr	r1, [fp, #8]
   156c0:	ldr	r1, [r1, #8]
   156c4:	ldr	ip, [fp, #8]
   156c8:	ldr	ip, [ip, #12]
   156cc:	ldr	lr, [fp, #8]
   156d0:	ldr	lr, [lr, #16]
   156d4:	ldr	r4, [sp, #96]	; 0x60
   156d8:	str	r0, [sp, #92]	; 0x5c
   156dc:	mov	r0, r4
   156e0:	ldr	r5, [sp, #92]	; 0x5c
   156e4:	str	r1, [sp, #88]	; 0x58
   156e8:	mov	r1, r5
   156ec:	ldr	r6, [sp, #88]	; 0x58
   156f0:	str	r6, [sp]
   156f4:	str	ip, [sp, #4]
   156f8:	str	lr, [sp, #8]
   156fc:	bl	10ff4 <fprintf@plt>
   15700:	b	159d8 <__assert_fail@plt+0x48e8>
   15704:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15708:	movw	r1, #56239	; 0xdbaf
   1570c:	movt	r1, #1
   15710:	str	r0, [sp, #84]	; 0x54
   15714:	mov	r0, r1
   15718:	bl	10fd0 <gettext@plt>
   1571c:	ldr	r1, [fp, #8]
   15720:	ldr	r2, [r1]
   15724:	ldr	r1, [fp, #8]
   15728:	ldr	r3, [r1, #4]
   1572c:	ldr	r1, [fp, #8]
   15730:	ldr	r1, [r1, #8]
   15734:	ldr	ip, [fp, #8]
   15738:	ldr	ip, [ip, #12]
   1573c:	ldr	lr, [fp, #8]
   15740:	ldr	lr, [lr, #16]
   15744:	ldr	r4, [fp, #8]
   15748:	ldr	r4, [r4, #20]
   1574c:	ldr	r5, [sp, #84]	; 0x54
   15750:	str	r0, [sp, #80]	; 0x50
   15754:	mov	r0, r5
   15758:	ldr	r6, [sp, #80]	; 0x50
   1575c:	str	r1, [sp, #76]	; 0x4c
   15760:	mov	r1, r6
   15764:	ldr	r7, [sp, #76]	; 0x4c
   15768:	str	r7, [sp]
   1576c:	str	ip, [sp, #4]
   15770:	str	lr, [sp, #8]
   15774:	str	r4, [sp, #12]
   15778:	bl	10ff4 <fprintf@plt>
   1577c:	b	159d8 <__assert_fail@plt+0x48e8>
   15780:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15784:	movw	r1, #56279	; 0xdbd7
   15788:	movt	r1, #1
   1578c:	str	r0, [sp, #72]	; 0x48
   15790:	mov	r0, r1
   15794:	bl	10fd0 <gettext@plt>
   15798:	ldr	r1, [fp, #8]
   1579c:	ldr	r2, [r1]
   157a0:	ldr	r1, [fp, #8]
   157a4:	ldr	r3, [r1, #4]
   157a8:	ldr	r1, [fp, #8]
   157ac:	ldr	r1, [r1, #8]
   157b0:	ldr	ip, [fp, #8]
   157b4:	ldr	ip, [ip, #12]
   157b8:	ldr	lr, [fp, #8]
   157bc:	ldr	lr, [lr, #16]
   157c0:	ldr	r4, [fp, #8]
   157c4:	ldr	r4, [r4, #20]
   157c8:	ldr	r5, [fp, #8]
   157cc:	ldr	r5, [r5, #24]
   157d0:	ldr	r6, [sp, #72]	; 0x48
   157d4:	str	r0, [sp, #68]	; 0x44
   157d8:	mov	r0, r6
   157dc:	ldr	r7, [sp, #68]	; 0x44
   157e0:	str	r1, [sp, #64]	; 0x40
   157e4:	mov	r1, r7
   157e8:	ldr	r8, [sp, #64]	; 0x40
   157ec:	str	r8, [sp]
   157f0:	str	ip, [sp, #4]
   157f4:	str	lr, [sp, #8]
   157f8:	str	r4, [sp, #12]
   157fc:	str	r5, [sp, #16]
   15800:	bl	10ff4 <fprintf@plt>
   15804:	b	159d8 <__assert_fail@plt+0x48e8>
   15808:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1580c:	movw	r1, #56323	; 0xdc03
   15810:	movt	r1, #1
   15814:	str	r0, [sp, #60]	; 0x3c
   15818:	mov	r0, r1
   1581c:	bl	10fd0 <gettext@plt>
   15820:	ldr	r1, [fp, #8]
   15824:	ldr	r2, [r1]
   15828:	ldr	r1, [fp, #8]
   1582c:	ldr	r3, [r1, #4]
   15830:	ldr	r1, [fp, #8]
   15834:	ldr	r1, [r1, #8]
   15838:	ldr	ip, [fp, #8]
   1583c:	ldr	ip, [ip, #12]
   15840:	ldr	lr, [fp, #8]
   15844:	ldr	lr, [lr, #16]
   15848:	ldr	r4, [fp, #8]
   1584c:	ldr	r4, [r4, #20]
   15850:	ldr	r5, [fp, #8]
   15854:	ldr	r5, [r5, #24]
   15858:	ldr	r6, [fp, #8]
   1585c:	ldr	r6, [r6, #28]
   15860:	ldr	r7, [sp, #60]	; 0x3c
   15864:	str	r0, [sp, #56]	; 0x38
   15868:	mov	r0, r7
   1586c:	ldr	r8, [sp, #56]	; 0x38
   15870:	str	r1, [sp, #52]	; 0x34
   15874:	mov	r1, r8
   15878:	ldr	r9, [sp, #52]	; 0x34
   1587c:	str	r9, [sp]
   15880:	str	ip, [sp, #4]
   15884:	str	lr, [sp, #8]
   15888:	str	r4, [sp, #12]
   1588c:	str	r5, [sp, #16]
   15890:	str	r6, [sp, #20]
   15894:	bl	10ff4 <fprintf@plt>
   15898:	b	159d8 <__assert_fail@plt+0x48e8>
   1589c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158a0:	movw	r1, #56371	; 0xdc33
   158a4:	movt	r1, #1
   158a8:	str	r0, [sp, #48]	; 0x30
   158ac:	mov	r0, r1
   158b0:	bl	10fd0 <gettext@plt>
   158b4:	ldr	r1, [fp, #8]
   158b8:	ldr	r2, [r1]
   158bc:	ldr	r1, [fp, #8]
   158c0:	ldr	r3, [r1, #4]
   158c4:	ldr	r1, [fp, #8]
   158c8:	ldr	r1, [r1, #8]
   158cc:	ldr	ip, [fp, #8]
   158d0:	ldr	ip, [ip, #12]
   158d4:	ldr	lr, [fp, #8]
   158d8:	ldr	lr, [lr, #16]
   158dc:	ldr	r4, [fp, #8]
   158e0:	ldr	r4, [r4, #20]
   158e4:	ldr	r5, [fp, #8]
   158e8:	ldr	r5, [r5, #24]
   158ec:	ldr	r6, [fp, #8]
   158f0:	ldr	r6, [r6, #28]
   158f4:	ldr	r7, [fp, #8]
   158f8:	ldr	r7, [r7, #32]
   158fc:	ldr	r8, [sp, #48]	; 0x30
   15900:	str	r0, [sp, #44]	; 0x2c
   15904:	mov	r0, r8
   15908:	ldr	r9, [sp, #44]	; 0x2c
   1590c:	str	r1, [sp, #40]	; 0x28
   15910:	mov	r1, r9
   15914:	ldr	sl, [sp, #40]	; 0x28
   15918:	str	sl, [sp]
   1591c:	str	ip, [sp, #4]
   15920:	str	lr, [sp, #8]
   15924:	str	r4, [sp, #12]
   15928:	str	r5, [sp, #16]
   1592c:	str	r6, [sp, #20]
   15930:	str	r7, [sp, #24]
   15934:	bl	10ff4 <fprintf@plt>
   15938:	b	159d8 <__assert_fail@plt+0x48e8>
   1593c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15940:	movw	r1, #56423	; 0xdc67
   15944:	movt	r1, #1
   15948:	str	r0, [sp, #36]	; 0x24
   1594c:	mov	r0, r1
   15950:	bl	10fd0 <gettext@plt>
   15954:	ldr	r1, [fp, #8]
   15958:	ldr	r2, [r1]
   1595c:	ldr	r1, [fp, #8]
   15960:	ldr	r3, [r1, #4]
   15964:	ldr	r1, [fp, #8]
   15968:	ldr	r1, [r1, #8]
   1596c:	ldr	ip, [fp, #8]
   15970:	ldr	ip, [ip, #12]
   15974:	ldr	lr, [fp, #8]
   15978:	ldr	lr, [lr, #16]
   1597c:	ldr	r4, [fp, #8]
   15980:	ldr	r4, [r4, #20]
   15984:	ldr	r5, [fp, #8]
   15988:	ldr	r5, [r5, #24]
   1598c:	ldr	r6, [fp, #8]
   15990:	ldr	r6, [r6, #28]
   15994:	ldr	r7, [fp, #8]
   15998:	ldr	r7, [r7, #32]
   1599c:	ldr	r8, [sp, #36]	; 0x24
   159a0:	str	r0, [sp, #32]
   159a4:	mov	r0, r8
   159a8:	ldr	r9, [sp, #32]
   159ac:	str	r1, [sp, #28]
   159b0:	mov	r1, r9
   159b4:	ldr	sl, [sp, #28]
   159b8:	str	sl, [sp]
   159bc:	str	ip, [sp, #4]
   159c0:	str	lr, [sp, #8]
   159c4:	str	r4, [sp, #12]
   159c8:	str	r5, [sp, #16]
   159cc:	str	r6, [sp, #20]
   159d0:	str	r7, [sp, #24]
   159d4:	bl	10ff4 <fprintf@plt>
   159d8:	sub	sp, fp, #28
   159dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159e0:	push	{fp, lr}
   159e4:	mov	fp, sp
   159e8:	sub	sp, sp, #32
   159ec:	ldr	ip, [fp, #8]
   159f0:	str	r0, [fp, #-4]
   159f4:	str	r1, [fp, #-8]
   159f8:	str	r2, [fp, #-12]
   159fc:	str	r3, [sp, #16]
   15a00:	movw	r0, #0
   15a04:	str	r0, [sp, #12]
   15a08:	ldr	r0, [fp, #8]
   15a0c:	ldr	r1, [sp, #12]
   15a10:	add	r0, r0, r1, lsl #2
   15a14:	ldr	r0, [r0]
   15a18:	movw	r1, #0
   15a1c:	cmp	r0, r1
   15a20:	beq	15a38 <__assert_fail@plt+0x4948>
   15a24:	b	15a28 <__assert_fail@plt+0x4938>
   15a28:	ldr	r0, [sp, #12]
   15a2c:	add	r0, r0, #1
   15a30:	str	r0, [sp, #12]
   15a34:	b	15a08 <__assert_fail@plt+0x4918>
   15a38:	ldr	r0, [fp, #-4]
   15a3c:	ldr	r1, [fp, #-8]
   15a40:	ldr	r2, [fp, #-12]
   15a44:	ldr	r3, [sp, #16]
   15a48:	ldr	ip, [fp, #8]
   15a4c:	ldr	lr, [sp, #12]
   15a50:	str	ip, [sp]
   15a54:	str	lr, [sp, #4]
   15a58:	bl	153f8 <__assert_fail@plt+0x4308>
   15a5c:	mov	sp, fp
   15a60:	pop	{fp, pc}
   15a64:	push	{fp, lr}
   15a68:	mov	fp, sp
   15a6c:	sub	sp, sp, #80	; 0x50
   15a70:	ldr	ip, [fp, #8]
   15a74:	str	ip, [fp, #-4]
   15a78:	str	r0, [fp, #-8]
   15a7c:	str	r1, [fp, #-12]
   15a80:	str	r2, [fp, #-16]
   15a84:	str	r3, [fp, #-20]	; 0xffffffec
   15a88:	movw	r0, #0
   15a8c:	str	r0, [fp, #-24]	; 0xffffffe8
   15a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a94:	cmp	r0, #10
   15a98:	movw	r0, #0
   15a9c:	str	r0, [sp, #12]
   15aa0:	bcs	15ad8 <__assert_fail@plt+0x49e8>
   15aa4:	ldr	r0, [fp, #-4]
   15aa8:	add	r1, r0, #4
   15aac:	str	r1, [fp, #-4]
   15ab0:	ldr	r0, [r0]
   15ab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ab8:	add	r2, sp, #16
   15abc:	add	r1, r2, r1, lsl #2
   15ac0:	str	r0, [r1]
   15ac4:	movw	r1, #0
   15ac8:	cmp	r0, r1
   15acc:	movw	r0, #0
   15ad0:	movne	r0, #1
   15ad4:	str	r0, [sp, #12]
   15ad8:	ldr	r0, [sp, #12]
   15adc:	tst	r0, #1
   15ae0:	beq	15af8 <__assert_fail@plt+0x4a08>
   15ae4:	b	15ae8 <__assert_fail@plt+0x49f8>
   15ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15aec:	add	r0, r0, #1
   15af0:	str	r0, [fp, #-24]	; 0xffffffe8
   15af4:	b	15a90 <__assert_fail@plt+0x49a0>
   15af8:	add	r0, sp, #16
   15afc:	ldr	r1, [fp, #-8]
   15b00:	ldr	r2, [fp, #-12]
   15b04:	ldr	r3, [fp, #-16]
   15b08:	ldr	ip, [fp, #-20]	; 0xffffffec
   15b0c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15b10:	str	r0, [sp, #8]
   15b14:	mov	r0, r1
   15b18:	mov	r1, r2
   15b1c:	mov	r2, r3
   15b20:	mov	r3, ip
   15b24:	ldr	ip, [sp, #8]
   15b28:	str	ip, [sp]
   15b2c:	str	lr, [sp, #4]
   15b30:	bl	153f8 <__assert_fail@plt+0x4308>
   15b34:	mov	sp, fp
   15b38:	pop	{fp, pc}
   15b3c:	push	{fp, lr}
   15b40:	mov	fp, sp
   15b44:	sub	sp, sp, #24
   15b48:	str	r0, [fp, #-4]
   15b4c:	str	r1, [fp, #-8]
   15b50:	str	r2, [sp, #12]
   15b54:	str	r3, [sp, #8]
   15b58:	add	r0, fp, #8
   15b5c:	str	r0, [sp, #4]
   15b60:	ldr	r0, [fp, #-4]
   15b64:	ldr	r1, [fp, #-8]
   15b68:	ldr	r2, [sp, #12]
   15b6c:	ldr	r3, [sp, #8]
   15b70:	ldr	ip, [sp, #4]
   15b74:	mov	lr, sp
   15b78:	str	ip, [lr]
   15b7c:	bl	15a64 <__assert_fail@plt+0x4974>
   15b80:	add	r0, sp, #4
   15b84:	mov	sp, fp
   15b88:	pop	{fp, pc}
   15b8c:	push	{fp, lr}
   15b90:	mov	fp, sp
   15b94:	sub	sp, sp, #16
   15b98:	movw	r0, #57684	; 0xe154
   15b9c:	movt	r0, #2
   15ba0:	ldr	r1, [r0]
   15ba4:	movw	r0, #55203	; 0xd7a3
   15ba8:	movt	r0, #1
   15bac:	bl	10e74 <fputs_unlocked@plt>
   15bb0:	movw	r1, #56483	; 0xdca3
   15bb4:	movt	r1, #1
   15bb8:	str	r0, [fp, #-4]
   15bbc:	mov	r0, r1
   15bc0:	bl	10fd0 <gettext@plt>
   15bc4:	movw	r1, #56503	; 0xdcb7
   15bc8:	movt	r1, #1
   15bcc:	bl	10e98 <printf@plt>
   15bd0:	movw	r1, #56525	; 0xdccd
   15bd4:	movt	r1, #1
   15bd8:	str	r0, [sp, #8]
   15bdc:	mov	r0, r1
   15be0:	bl	10fd0 <gettext@plt>
   15be4:	movw	r1, #54684	; 0xd59c
   15be8:	movt	r1, #1
   15bec:	movw	r2, #55012	; 0xd6e4
   15bf0:	movt	r2, #1
   15bf4:	bl	10e98 <printf@plt>
   15bf8:	movw	r1, #56545	; 0xdce1
   15bfc:	movt	r1, #1
   15c00:	str	r0, [sp, #4]
   15c04:	mov	r0, r1
   15c08:	bl	10fd0 <gettext@plt>
   15c0c:	movw	r1, #56584	; 0xdd08
   15c10:	movt	r1, #1
   15c14:	bl	10e98 <printf@plt>
   15c18:	mov	sp, fp
   15c1c:	pop	{fp, pc}
   15c20:	push	{fp, lr}
   15c24:	mov	fp, sp
   15c28:	sub	sp, sp, #16
   15c2c:	str	r0, [fp, #-4]
   15c30:	str	r1, [sp, #8]
   15c34:	str	r2, [sp, #4]
   15c38:	ldr	r0, [fp, #-4]
   15c3c:	ldr	r1, [sp, #8]
   15c40:	ldr	r2, [sp, #4]
   15c44:	bl	15c50 <__assert_fail@plt+0x4b60>
   15c48:	mov	sp, fp
   15c4c:	pop	{fp, pc}
   15c50:	push	{fp, lr}
   15c54:	mov	fp, sp
   15c58:	sub	sp, sp, #16
   15c5c:	str	r0, [fp, #-4]
   15c60:	str	r1, [sp, #8]
   15c64:	str	r2, [sp, #4]
   15c68:	ldr	r0, [fp, #-4]
   15c6c:	ldr	r1, [sp, #8]
   15c70:	ldr	r2, [sp, #4]
   15c74:	bl	1b834 <__assert_fail@plt+0xa744>
   15c78:	str	r0, [sp]
   15c7c:	ldr	r0, [sp]
   15c80:	movw	r1, #0
   15c84:	cmp	r0, r1
   15c88:	bne	15cb8 <__assert_fail@plt+0x4bc8>
   15c8c:	ldr	r0, [fp, #-4]
   15c90:	movw	r1, #0
   15c94:	cmp	r0, r1
   15c98:	beq	15cb4 <__assert_fail@plt+0x4bc4>
   15c9c:	ldr	r0, [sp, #8]
   15ca0:	cmp	r0, #0
   15ca4:	beq	15cb8 <__assert_fail@plt+0x4bc8>
   15ca8:	ldr	r0, [sp, #4]
   15cac:	cmp	r0, #0
   15cb0:	beq	15cb8 <__assert_fail@plt+0x4bc8>
   15cb4:	bl	189fc <__assert_fail@plt+0x790c>
   15cb8:	ldr	r0, [sp]
   15cbc:	mov	sp, fp
   15cc0:	pop	{fp, pc}
   15cc4:	push	{fp, lr}
   15cc8:	mov	fp, sp
   15ccc:	sub	sp, sp, #8
   15cd0:	str	r0, [sp, #4]
   15cd4:	ldr	r0, [sp, #4]
   15cd8:	bl	1aa9c <__assert_fail@plt+0x99ac>
   15cdc:	bl	15ce8 <__assert_fail@plt+0x4bf8>
   15ce0:	mov	sp, fp
   15ce4:	pop	{fp, pc}
   15ce8:	push	{fp, lr}
   15cec:	mov	fp, sp
   15cf0:	sub	sp, sp, #8
   15cf4:	str	r0, [sp, #4]
   15cf8:	ldr	r0, [sp, #4]
   15cfc:	movw	r1, #0
   15d00:	cmp	r0, r1
   15d04:	bne	15d0c <__assert_fail@plt+0x4c1c>
   15d08:	bl	189fc <__assert_fail@plt+0x790c>
   15d0c:	ldr	r0, [sp, #4]
   15d10:	mov	sp, fp
   15d14:	pop	{fp, pc}
   15d18:	push	{fp, lr}
   15d1c:	mov	fp, sp
   15d20:	sub	sp, sp, #8
   15d24:	str	r0, [sp, #4]
   15d28:	ldr	r0, [sp, #4]
   15d2c:	bl	1b570 <__assert_fail@plt+0xa480>
   15d30:	bl	15ce8 <__assert_fail@plt+0x4bf8>
   15d34:	mov	sp, fp
   15d38:	pop	{fp, pc}
   15d3c:	push	{fp, lr}
   15d40:	mov	fp, sp
   15d44:	sub	sp, sp, #8
   15d48:	str	r0, [sp, #4]
   15d4c:	ldr	r0, [sp, #4]
   15d50:	bl	15cc4 <__assert_fail@plt+0x4bd4>
   15d54:	mov	sp, fp
   15d58:	pop	{fp, pc}
   15d5c:	push	{fp, lr}
   15d60:	mov	fp, sp
   15d64:	sub	sp, sp, #16
   15d68:	str	r0, [fp, #-4]
   15d6c:	str	r1, [sp, #8]
   15d70:	ldr	r0, [fp, #-4]
   15d74:	ldr	r1, [sp, #8]
   15d78:	bl	1ab0c <__assert_fail@plt+0x9a1c>
   15d7c:	str	r0, [sp, #4]
   15d80:	ldr	r0, [sp, #4]
   15d84:	movw	r1, #0
   15d88:	cmp	r0, r1
   15d8c:	bne	15db0 <__assert_fail@plt+0x4cc0>
   15d90:	ldr	r0, [fp, #-4]
   15d94:	movw	r1, #0
   15d98:	cmp	r0, r1
   15d9c:	beq	15dac <__assert_fail@plt+0x4cbc>
   15da0:	ldr	r0, [sp, #8]
   15da4:	cmp	r0, #0
   15da8:	beq	15db0 <__assert_fail@plt+0x4cc0>
   15dac:	bl	189fc <__assert_fail@plt+0x790c>
   15db0:	ldr	r0, [sp, #4]
   15db4:	mov	sp, fp
   15db8:	pop	{fp, pc}
   15dbc:	push	{fp, lr}
   15dc0:	mov	fp, sp
   15dc4:	sub	sp, sp, #8
   15dc8:	str	r0, [sp, #4]
   15dcc:	str	r1, [sp]
   15dd0:	ldr	r0, [sp, #4]
   15dd4:	ldr	r1, [sp]
   15dd8:	bl	1b5b0 <__assert_fail@plt+0xa4c0>
   15ddc:	bl	15ce8 <__assert_fail@plt+0x4bf8>
   15de0:	mov	sp, fp
   15de4:	pop	{fp, pc}
   15de8:	push	{fp, lr}
   15dec:	mov	fp, sp
   15df0:	sub	sp, sp, #16
   15df4:	str	r0, [fp, #-4]
   15df8:	str	r1, [sp, #8]
   15dfc:	str	r2, [sp, #4]
   15e00:	ldr	r0, [fp, #-4]
   15e04:	ldr	r1, [sp, #8]
   15e08:	ldr	r2, [sp, #4]
   15e0c:	bl	1b6a8 <__assert_fail@plt+0xa5b8>
   15e10:	bl	15ce8 <__assert_fail@plt+0x4bf8>
   15e14:	mov	sp, fp
   15e18:	pop	{fp, pc}
   15e1c:	push	{fp, lr}
   15e20:	mov	fp, sp
   15e24:	sub	sp, sp, #8
   15e28:	str	r0, [sp, #4]
   15e2c:	str	r1, [sp]
   15e30:	ldr	r1, [sp, #4]
   15e34:	ldr	r2, [sp]
   15e38:	movw	r0, #0
   15e3c:	bl	15c50 <__assert_fail@plt+0x4b60>
   15e40:	mov	sp, fp
   15e44:	pop	{fp, pc}
   15e48:	push	{fp, lr}
   15e4c:	mov	fp, sp
   15e50:	sub	sp, sp, #8
   15e54:	str	r0, [sp, #4]
   15e58:	str	r1, [sp]
   15e5c:	ldr	r1, [sp, #4]
   15e60:	ldr	r2, [sp]
   15e64:	movw	r0, #0
   15e68:	bl	15de8 <__assert_fail@plt+0x4cf8>
   15e6c:	mov	sp, fp
   15e70:	pop	{fp, pc}
   15e74:	push	{fp, lr}
   15e78:	mov	fp, sp
   15e7c:	sub	sp, sp, #8
   15e80:	str	r0, [sp, #4]
   15e84:	str	r1, [sp]
   15e88:	ldr	r0, [sp, #4]
   15e8c:	ldr	r1, [sp]
   15e90:	movw	r2, #1
   15e94:	bl	15ea0 <__assert_fail@plt+0x4db0>
   15e98:	mov	sp, fp
   15e9c:	pop	{fp, pc}
   15ea0:	push	{fp, lr}
   15ea4:	mov	fp, sp
   15ea8:	sub	sp, sp, #16
   15eac:	str	r0, [fp, #-4]
   15eb0:	str	r1, [sp, #8]
   15eb4:	str	r2, [sp, #4]
   15eb8:	ldr	r0, [sp, #8]
   15ebc:	ldr	r0, [r0]
   15ec0:	str	r0, [sp]
   15ec4:	ldr	r0, [fp, #-4]
   15ec8:	movw	r1, #0
   15ecc:	cmp	r0, r1
   15ed0:	bne	15f1c <__assert_fail@plt+0x4e2c>
   15ed4:	ldr	r0, [sp]
   15ed8:	cmp	r0, #0
   15edc:	bne	15f18 <__assert_fail@plt+0x4e28>
   15ee0:	ldr	r0, [sp, #4]
   15ee4:	movw	r1, #64	; 0x40
   15ee8:	udiv	r0, r1, r0
   15eec:	str	r0, [sp]
   15ef0:	ldr	r0, [sp]
   15ef4:	cmp	r0, #0
   15ef8:	movw	r0, #0
   15efc:	movne	r0, #1
   15f00:	mvn	r1, #0
   15f04:	eor	r0, r0, r1
   15f08:	and	r0, r0, #1
   15f0c:	ldr	r1, [sp]
   15f10:	add	r0, r1, r0
   15f14:	str	r0, [sp]
   15f18:	b	15f4c <__assert_fail@plt+0x4e5c>
   15f1c:	ldr	r0, [sp]
   15f20:	ldr	r1, [sp]
   15f24:	lsr	r1, r1, #1
   15f28:	add	r1, r1, #1
   15f2c:	adds	r0, r0, r1
   15f30:	mov	r1, #0
   15f34:	adc	r1, r1, #0
   15f38:	str	r0, [sp]
   15f3c:	tst	r1, #1
   15f40:	beq	15f48 <__assert_fail@plt+0x4e58>
   15f44:	bl	189fc <__assert_fail@plt+0x790c>
   15f48:	b	15f4c <__assert_fail@plt+0x4e5c>
   15f4c:	ldr	r0, [fp, #-4]
   15f50:	ldr	r1, [sp]
   15f54:	ldr	r2, [sp, #4]
   15f58:	bl	15c50 <__assert_fail@plt+0x4b60>
   15f5c:	str	r0, [fp, #-4]
   15f60:	ldr	r0, [sp]
   15f64:	ldr	r1, [sp, #8]
   15f68:	str	r0, [r1]
   15f6c:	ldr	r0, [fp, #-4]
   15f70:	mov	sp, fp
   15f74:	pop	{fp, pc}
   15f78:	push	{fp, lr}
   15f7c:	mov	fp, sp
   15f80:	sub	sp, sp, #216	; 0xd8
   15f84:	ldr	ip, [fp, #8]
   15f88:	str	r0, [fp, #-4]
   15f8c:	str	r1, [fp, #-8]
   15f90:	str	r2, [fp, #-12]
   15f94:	str	r3, [fp, #-16]
   15f98:	ldr	r0, [fp, #-8]
   15f9c:	ldr	r0, [r0]
   15fa0:	str	r0, [fp, #-20]	; 0xffffffec
   15fa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fac:	asr	r1, r1, #1
   15fb0:	add	r1, r0, r1
   15fb4:	mov	r2, #1
   15fb8:	cmp	r1, r0
   15fbc:	movwvc	r2, #0
   15fc0:	str	r1, [fp, #-24]	; 0xffffffe8
   15fc4:	tst	r2, #1
   15fc8:	beq	15fd4 <__assert_fail@plt+0x4ee4>
   15fcc:	ldr	r0, [pc, #4036]	; 16f98 <__assert_fail@plt+0x5ea8>
   15fd0:	str	r0, [fp, #-24]	; 0xffffffe8
   15fd4:	ldr	r0, [fp, #-16]
   15fd8:	movw	r1, #0
   15fdc:	cmp	r1, r0
   15fe0:	bgt	15ffc <__assert_fail@plt+0x4f0c>
   15fe4:	ldr	r0, [fp, #-16]
   15fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fec:	cmp	r0, r1
   15ff0:	bge	15ffc <__assert_fail@plt+0x4f0c>
   15ff4:	ldr	r0, [fp, #-16]
   15ff8:	str	r0, [fp, #-24]	; 0xffffffe8
   15ffc:	b	163d4 <__assert_fail@plt+0x52e4>
   16000:	b	16004 <__assert_fail@plt+0x4f14>
   16004:	ldr	r0, [fp, #8]
   16008:	cmp	r0, #0
   1600c:	bge	16120 <__assert_fail@plt+0x5030>
   16010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16014:	cmp	r0, #0
   16018:	bge	160a4 <__assert_fail@plt+0x4fb4>
   1601c:	b	16020 <__assert_fail@plt+0x4f30>
   16020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16024:	ldr	r1, [fp, #8]
   16028:	movw	r2, #127	; 0x7f
   1602c:	sdiv	r1, r2, r1
   16030:	cmp	r0, r1
   16034:	blt	161c0 <__assert_fail@plt+0x50d0>
   16038:	b	161d8 <__assert_fail@plt+0x50e8>
   1603c:	b	16040 <__assert_fail@plt+0x4f50>
   16040:	ldr	r0, [pc, #4084]	; 1703c <__assert_fail@plt+0x5f4c>
   16044:	ldr	r1, [fp, #8]
   16048:	cmp	r1, r0
   1604c:	blt	16064 <__assert_fail@plt+0x4f74>
   16050:	b	16070 <__assert_fail@plt+0x4f80>
   16054:	ldr	r0, [fp, #8]
   16058:	movw	r1, #0
   1605c:	cmp	r1, r0
   16060:	bge	16070 <__assert_fail@plt+0x4f80>
   16064:	movw	r0, #0
   16068:	str	r0, [fp, #-36]	; 0xffffffdc
   1606c:	b	16088 <__assert_fail@plt+0x4f98>
   16070:	ldr	r0, [fp, #8]
   16074:	movw	r1, #0
   16078:	sub	r0, r1, r0
   1607c:	movw	r1, #127	; 0x7f
   16080:	sdiv	r0, r1, r0
   16084:	str	r0, [fp, #-36]	; 0xffffffdc
   16088:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1608c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16090:	mvn	r2, #0
   16094:	sub	r1, r2, r1
   16098:	cmp	r0, r1
   1609c:	ble	161c0 <__assert_fail@plt+0x50d0>
   160a0:	b	161d8 <__assert_fail@plt+0x50e8>
   160a4:	b	160a8 <__assert_fail@plt+0x4fb8>
   160a8:	b	16104 <__assert_fail@plt+0x5014>
   160ac:	b	16104 <__assert_fail@plt+0x5014>
   160b0:	ldr	r0, [fp, #8]
   160b4:	cmn	r0, #1
   160b8:	bne	16104 <__assert_fail@plt+0x5014>
   160bc:	b	160c0 <__assert_fail@plt+0x4fd0>
   160c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160c4:	mvn	r1, #127	; 0x7f
   160c8:	add	r0, r0, r1
   160cc:	movw	r1, #0
   160d0:	cmp	r1, r0
   160d4:	blt	161c0 <__assert_fail@plt+0x50d0>
   160d8:	b	161d8 <__assert_fail@plt+0x50e8>
   160dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160e0:	movw	r1, #0
   160e4:	cmp	r1, r0
   160e8:	bge	161d8 <__assert_fail@plt+0x50e8>
   160ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160f0:	sub	r0, r0, #1
   160f4:	movw	r1, #127	; 0x7f
   160f8:	cmp	r1, r0
   160fc:	blt	161c0 <__assert_fail@plt+0x50d0>
   16100:	b	161d8 <__assert_fail@plt+0x50e8>
   16104:	ldr	r0, [fp, #8]
   16108:	mvn	r1, #127	; 0x7f
   1610c:	sdiv	r0, r1, r0
   16110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16114:	cmp	r0, r1
   16118:	blt	161c0 <__assert_fail@plt+0x50d0>
   1611c:	b	161d8 <__assert_fail@plt+0x50e8>
   16120:	ldr	r0, [fp, #8]
   16124:	cmp	r0, #0
   16128:	bne	16130 <__assert_fail@plt+0x5040>
   1612c:	b	161d8 <__assert_fail@plt+0x50e8>
   16130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16134:	cmp	r0, #0
   16138:	bge	161a8 <__assert_fail@plt+0x50b8>
   1613c:	b	16140 <__assert_fail@plt+0x5050>
   16140:	b	1618c <__assert_fail@plt+0x509c>
   16144:	b	1618c <__assert_fail@plt+0x509c>
   16148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1614c:	cmn	r0, #1
   16150:	bne	1618c <__assert_fail@plt+0x509c>
   16154:	b	16158 <__assert_fail@plt+0x5068>
   16158:	ldr	r0, [fp, #8]
   1615c:	mvn	r1, #127	; 0x7f
   16160:	add	r0, r0, r1
   16164:	movw	r1, #0
   16168:	cmp	r1, r0
   1616c:	blt	161c0 <__assert_fail@plt+0x50d0>
   16170:	b	161d8 <__assert_fail@plt+0x50e8>
   16174:	ldr	r0, [fp, #8]
   16178:	sub	r0, r0, #1
   1617c:	movw	r1, #127	; 0x7f
   16180:	cmp	r1, r0
   16184:	blt	161c0 <__assert_fail@plt+0x50d0>
   16188:	b	161d8 <__assert_fail@plt+0x50e8>
   1618c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16190:	mvn	r1, #127	; 0x7f
   16194:	sdiv	r0, r1, r0
   16198:	ldr	r1, [fp, #8]
   1619c:	cmp	r0, r1
   161a0:	blt	161c0 <__assert_fail@plt+0x50d0>
   161a4:	b	161d8 <__assert_fail@plt+0x50e8>
   161a8:	ldr	r0, [fp, #8]
   161ac:	movw	r1, #127	; 0x7f
   161b0:	sdiv	r0, r1, r0
   161b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161b8:	cmp	r0, r1
   161bc:	bge	161d8 <__assert_fail@plt+0x50e8>
   161c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161c4:	ldr	r1, [fp, #8]
   161c8:	mul	r0, r0, r1
   161cc:	sxtb	r0, r0
   161d0:	str	r0, [fp, #-28]	; 0xffffffe4
   161d4:	b	1739c <__assert_fail@plt+0x62ac>
   161d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161dc:	ldr	r1, [fp, #8]
   161e0:	mul	r0, r0, r1
   161e4:	sxtb	r0, r0
   161e8:	str	r0, [fp, #-28]	; 0xffffffe4
   161ec:	b	173a8 <__assert_fail@plt+0x62b8>
   161f0:	ldr	r0, [fp, #8]
   161f4:	cmp	r0, #0
   161f8:	bge	16308 <__assert_fail@plt+0x5218>
   161fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16200:	cmp	r0, #0
   16204:	bge	16290 <__assert_fail@plt+0x51a0>
   16208:	b	1620c <__assert_fail@plt+0x511c>
   1620c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16210:	ldr	r1, [fp, #8]
   16214:	movw	r2, #255	; 0xff
   16218:	sdiv	r1, r2, r1
   1621c:	cmp	r0, r1
   16220:	blt	163a4 <__assert_fail@plt+0x52b4>
   16224:	b	163bc <__assert_fail@plt+0x52cc>
   16228:	b	1622c <__assert_fail@plt+0x513c>
   1622c:	ldr	r0, [pc, #3592]	; 1703c <__assert_fail@plt+0x5f4c>
   16230:	ldr	r1, [fp, #8]
   16234:	cmp	r1, r0
   16238:	blt	16250 <__assert_fail@plt+0x5160>
   1623c:	b	1625c <__assert_fail@plt+0x516c>
   16240:	ldr	r0, [fp, #8]
   16244:	movw	r1, #0
   16248:	cmp	r1, r0
   1624c:	bge	1625c <__assert_fail@plt+0x516c>
   16250:	movw	r0, #0
   16254:	str	r0, [fp, #-40]	; 0xffffffd8
   16258:	b	16274 <__assert_fail@plt+0x5184>
   1625c:	ldr	r0, [fp, #8]
   16260:	movw	r1, #0
   16264:	sub	r0, r1, r0
   16268:	movw	r1, #255	; 0xff
   1626c:	sdiv	r0, r1, r0
   16270:	str	r0, [fp, #-40]	; 0xffffffd8
   16274:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1627c:	mvn	r2, #0
   16280:	sub	r1, r2, r1
   16284:	cmp	r0, r1
   16288:	ble	163a4 <__assert_fail@plt+0x52b4>
   1628c:	b	163bc <__assert_fail@plt+0x52cc>
   16290:	b	16294 <__assert_fail@plt+0x51a4>
   16294:	b	162ec <__assert_fail@plt+0x51fc>
   16298:	b	162ec <__assert_fail@plt+0x51fc>
   1629c:	ldr	r0, [fp, #8]
   162a0:	cmn	r0, #1
   162a4:	bne	162ec <__assert_fail@plt+0x51fc>
   162a8:	b	162ac <__assert_fail@plt+0x51bc>
   162ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162b0:	add	r0, r0, #0
   162b4:	movw	r1, #0
   162b8:	cmp	r1, r0
   162bc:	blt	163a4 <__assert_fail@plt+0x52b4>
   162c0:	b	163bc <__assert_fail@plt+0x52cc>
   162c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162c8:	movw	r1, #0
   162cc:	cmp	r1, r0
   162d0:	bge	163bc <__assert_fail@plt+0x52cc>
   162d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162d8:	sub	r0, r0, #1
   162dc:	mvn	r1, #0
   162e0:	cmp	r1, r0
   162e4:	blt	163a4 <__assert_fail@plt+0x52b4>
   162e8:	b	163bc <__assert_fail@plt+0x52cc>
   162ec:	ldr	r0, [fp, #8]
   162f0:	movw	r1, #0
   162f4:	sdiv	r0, r1, r0
   162f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   162fc:	cmp	r0, r1
   16300:	blt	163a4 <__assert_fail@plt+0x52b4>
   16304:	b	163bc <__assert_fail@plt+0x52cc>
   16308:	ldr	r0, [fp, #8]
   1630c:	cmp	r0, #0
   16310:	bne	16318 <__assert_fail@plt+0x5228>
   16314:	b	163bc <__assert_fail@plt+0x52cc>
   16318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1631c:	cmp	r0, #0
   16320:	bge	1638c <__assert_fail@plt+0x529c>
   16324:	b	16328 <__assert_fail@plt+0x5238>
   16328:	b	16370 <__assert_fail@plt+0x5280>
   1632c:	b	16370 <__assert_fail@plt+0x5280>
   16330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16334:	cmn	r0, #1
   16338:	bne	16370 <__assert_fail@plt+0x5280>
   1633c:	b	16340 <__assert_fail@plt+0x5250>
   16340:	ldr	r0, [fp, #8]
   16344:	add	r0, r0, #0
   16348:	movw	r1, #0
   1634c:	cmp	r1, r0
   16350:	blt	163a4 <__assert_fail@plt+0x52b4>
   16354:	b	163bc <__assert_fail@plt+0x52cc>
   16358:	ldr	r0, [fp, #8]
   1635c:	sub	r0, r0, #1
   16360:	mvn	r1, #0
   16364:	cmp	r1, r0
   16368:	blt	163a4 <__assert_fail@plt+0x52b4>
   1636c:	b	163bc <__assert_fail@plt+0x52cc>
   16370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16374:	movw	r1, #0
   16378:	sdiv	r0, r1, r0
   1637c:	ldr	r1, [fp, #8]
   16380:	cmp	r0, r1
   16384:	blt	163a4 <__assert_fail@plt+0x52b4>
   16388:	b	163bc <__assert_fail@plt+0x52cc>
   1638c:	ldr	r0, [fp, #8]
   16390:	movw	r1, #255	; 0xff
   16394:	sdiv	r0, r1, r0
   16398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1639c:	cmp	r0, r1
   163a0:	bge	163bc <__assert_fail@plt+0x52cc>
   163a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163a8:	ldr	r1, [fp, #8]
   163ac:	mul	r0, r0, r1
   163b0:	and	r0, r0, #255	; 0xff
   163b4:	str	r0, [fp, #-28]	; 0xffffffe4
   163b8:	b	1739c <__assert_fail@plt+0x62ac>
   163bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163c0:	ldr	r1, [fp, #8]
   163c4:	mul	r0, r0, r1
   163c8:	and	r0, r0, #255	; 0xff
   163cc:	str	r0, [fp, #-28]	; 0xffffffe4
   163d0:	b	173a8 <__assert_fail@plt+0x62b8>
   163d4:	b	167ac <__assert_fail@plt+0x56bc>
   163d8:	b	163dc <__assert_fail@plt+0x52ec>
   163dc:	ldr	r0, [fp, #8]
   163e0:	cmp	r0, #0
   163e4:	bge	164f8 <__assert_fail@plt+0x5408>
   163e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163ec:	cmp	r0, #0
   163f0:	bge	1647c <__assert_fail@plt+0x538c>
   163f4:	b	163f8 <__assert_fail@plt+0x5308>
   163f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163fc:	ldr	r1, [fp, #8]
   16400:	movw	r2, #32767	; 0x7fff
   16404:	sdiv	r1, r2, r1
   16408:	cmp	r0, r1
   1640c:	blt	16598 <__assert_fail@plt+0x54a8>
   16410:	b	165b0 <__assert_fail@plt+0x54c0>
   16414:	b	16418 <__assert_fail@plt+0x5328>
   16418:	ldr	r0, [pc, #3100]	; 1703c <__assert_fail@plt+0x5f4c>
   1641c:	ldr	r1, [fp, #8]
   16420:	cmp	r1, r0
   16424:	blt	1643c <__assert_fail@plt+0x534c>
   16428:	b	16448 <__assert_fail@plt+0x5358>
   1642c:	ldr	r0, [fp, #8]
   16430:	movw	r1, #0
   16434:	cmp	r1, r0
   16438:	bge	16448 <__assert_fail@plt+0x5358>
   1643c:	movw	r0, #0
   16440:	str	r0, [fp, #-44]	; 0xffffffd4
   16444:	b	16460 <__assert_fail@plt+0x5370>
   16448:	ldr	r0, [fp, #8]
   1644c:	movw	r1, #0
   16450:	sub	r0, r1, r0
   16454:	movw	r1, #32767	; 0x7fff
   16458:	sdiv	r0, r1, r0
   1645c:	str	r0, [fp, #-44]	; 0xffffffd4
   16460:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16468:	mvn	r2, #0
   1646c:	sub	r1, r2, r1
   16470:	cmp	r0, r1
   16474:	ble	16598 <__assert_fail@plt+0x54a8>
   16478:	b	165b0 <__assert_fail@plt+0x54c0>
   1647c:	b	16480 <__assert_fail@plt+0x5390>
   16480:	b	164dc <__assert_fail@plt+0x53ec>
   16484:	b	164dc <__assert_fail@plt+0x53ec>
   16488:	ldr	r0, [fp, #8]
   1648c:	cmn	r0, #1
   16490:	bne	164dc <__assert_fail@plt+0x53ec>
   16494:	b	16498 <__assert_fail@plt+0x53a8>
   16498:	ldr	r0, [pc, #4068]	; 17484 <__assert_fail@plt+0x6394>
   1649c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164a0:	add	r0, r1, r0
   164a4:	movw	r1, #0
   164a8:	cmp	r1, r0
   164ac:	blt	16598 <__assert_fail@plt+0x54a8>
   164b0:	b	165b0 <__assert_fail@plt+0x54c0>
   164b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164b8:	movw	r1, #0
   164bc:	cmp	r1, r0
   164c0:	bge	165b0 <__assert_fail@plt+0x54c0>
   164c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164c8:	sub	r0, r0, #1
   164cc:	movw	r1, #32767	; 0x7fff
   164d0:	cmp	r1, r0
   164d4:	blt	16598 <__assert_fail@plt+0x54a8>
   164d8:	b	165b0 <__assert_fail@plt+0x54c0>
   164dc:	ldr	r0, [pc, #4000]	; 17484 <__assert_fail@plt+0x6394>
   164e0:	ldr	r1, [fp, #8]
   164e4:	sdiv	r0, r0, r1
   164e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164ec:	cmp	r0, r1
   164f0:	blt	16598 <__assert_fail@plt+0x54a8>
   164f4:	b	165b0 <__assert_fail@plt+0x54c0>
   164f8:	ldr	r0, [fp, #8]
   164fc:	cmp	r0, #0
   16500:	bne	16508 <__assert_fail@plt+0x5418>
   16504:	b	165b0 <__assert_fail@plt+0x54c0>
   16508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1650c:	cmp	r0, #0
   16510:	bge	16580 <__assert_fail@plt+0x5490>
   16514:	b	16518 <__assert_fail@plt+0x5428>
   16518:	b	16564 <__assert_fail@plt+0x5474>
   1651c:	b	16564 <__assert_fail@plt+0x5474>
   16520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16524:	cmn	r0, #1
   16528:	bne	16564 <__assert_fail@plt+0x5474>
   1652c:	b	16530 <__assert_fail@plt+0x5440>
   16530:	ldr	r0, [pc, #3916]	; 17484 <__assert_fail@plt+0x6394>
   16534:	ldr	r1, [fp, #8]
   16538:	add	r0, r1, r0
   1653c:	movw	r1, #0
   16540:	cmp	r1, r0
   16544:	blt	16598 <__assert_fail@plt+0x54a8>
   16548:	b	165b0 <__assert_fail@plt+0x54c0>
   1654c:	ldr	r0, [fp, #8]
   16550:	sub	r0, r0, #1
   16554:	movw	r1, #32767	; 0x7fff
   16558:	cmp	r1, r0
   1655c:	blt	16598 <__assert_fail@plt+0x54a8>
   16560:	b	165b0 <__assert_fail@plt+0x54c0>
   16564:	ldr	r0, [pc, #3864]	; 17484 <__assert_fail@plt+0x6394>
   16568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1656c:	sdiv	r0, r0, r1
   16570:	ldr	r1, [fp, #8]
   16574:	cmp	r0, r1
   16578:	blt	16598 <__assert_fail@plt+0x54a8>
   1657c:	b	165b0 <__assert_fail@plt+0x54c0>
   16580:	ldr	r0, [fp, #8]
   16584:	movw	r1, #32767	; 0x7fff
   16588:	sdiv	r0, r1, r0
   1658c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16590:	cmp	r0, r1
   16594:	bge	165b0 <__assert_fail@plt+0x54c0>
   16598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1659c:	ldr	r1, [fp, #8]
   165a0:	mul	r0, r0, r1
   165a4:	sxth	r0, r0
   165a8:	str	r0, [fp, #-28]	; 0xffffffe4
   165ac:	b	1739c <__assert_fail@plt+0x62ac>
   165b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165b4:	ldr	r1, [fp, #8]
   165b8:	mul	r0, r0, r1
   165bc:	sxth	r0, r0
   165c0:	str	r0, [fp, #-28]	; 0xffffffe4
   165c4:	b	173a8 <__assert_fail@plt+0x62b8>
   165c8:	ldr	r0, [fp, #8]
   165cc:	cmp	r0, #0
   165d0:	bge	166e0 <__assert_fail@plt+0x55f0>
   165d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d8:	cmp	r0, #0
   165dc:	bge	16668 <__assert_fail@plt+0x5578>
   165e0:	b	165e4 <__assert_fail@plt+0x54f4>
   165e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165e8:	ldr	r1, [fp, #8]
   165ec:	movw	r2, #65535	; 0xffff
   165f0:	sdiv	r1, r2, r1
   165f4:	cmp	r0, r1
   165f8:	blt	1677c <__assert_fail@plt+0x568c>
   165fc:	b	16794 <__assert_fail@plt+0x56a4>
   16600:	b	16604 <__assert_fail@plt+0x5514>
   16604:	ldr	r0, [pc, #2608]	; 1703c <__assert_fail@plt+0x5f4c>
   16608:	ldr	r1, [fp, #8]
   1660c:	cmp	r1, r0
   16610:	blt	16628 <__assert_fail@plt+0x5538>
   16614:	b	16634 <__assert_fail@plt+0x5544>
   16618:	ldr	r0, [fp, #8]
   1661c:	movw	r1, #0
   16620:	cmp	r1, r0
   16624:	bge	16634 <__assert_fail@plt+0x5544>
   16628:	movw	r0, #0
   1662c:	str	r0, [fp, #-48]	; 0xffffffd0
   16630:	b	1664c <__assert_fail@plt+0x555c>
   16634:	ldr	r0, [fp, #8]
   16638:	movw	r1, #0
   1663c:	sub	r0, r1, r0
   16640:	movw	r1, #65535	; 0xffff
   16644:	sdiv	r0, r1, r0
   16648:	str	r0, [fp, #-48]	; 0xffffffd0
   1664c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16654:	mvn	r2, #0
   16658:	sub	r1, r2, r1
   1665c:	cmp	r0, r1
   16660:	ble	1677c <__assert_fail@plt+0x568c>
   16664:	b	16794 <__assert_fail@plt+0x56a4>
   16668:	b	1666c <__assert_fail@plt+0x557c>
   1666c:	b	166c4 <__assert_fail@plt+0x55d4>
   16670:	b	166c4 <__assert_fail@plt+0x55d4>
   16674:	ldr	r0, [fp, #8]
   16678:	cmn	r0, #1
   1667c:	bne	166c4 <__assert_fail@plt+0x55d4>
   16680:	b	16684 <__assert_fail@plt+0x5594>
   16684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16688:	add	r0, r0, #0
   1668c:	movw	r1, #0
   16690:	cmp	r1, r0
   16694:	blt	1677c <__assert_fail@plt+0x568c>
   16698:	b	16794 <__assert_fail@plt+0x56a4>
   1669c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166a0:	movw	r1, #0
   166a4:	cmp	r1, r0
   166a8:	bge	16794 <__assert_fail@plt+0x56a4>
   166ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166b0:	sub	r0, r0, #1
   166b4:	mvn	r1, #0
   166b8:	cmp	r1, r0
   166bc:	blt	1677c <__assert_fail@plt+0x568c>
   166c0:	b	16794 <__assert_fail@plt+0x56a4>
   166c4:	ldr	r0, [fp, #8]
   166c8:	movw	r1, #0
   166cc:	sdiv	r0, r1, r0
   166d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166d4:	cmp	r0, r1
   166d8:	blt	1677c <__assert_fail@plt+0x568c>
   166dc:	b	16794 <__assert_fail@plt+0x56a4>
   166e0:	ldr	r0, [fp, #8]
   166e4:	cmp	r0, #0
   166e8:	bne	166f0 <__assert_fail@plt+0x5600>
   166ec:	b	16794 <__assert_fail@plt+0x56a4>
   166f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166f4:	cmp	r0, #0
   166f8:	bge	16764 <__assert_fail@plt+0x5674>
   166fc:	b	16700 <__assert_fail@plt+0x5610>
   16700:	b	16748 <__assert_fail@plt+0x5658>
   16704:	b	16748 <__assert_fail@plt+0x5658>
   16708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1670c:	cmn	r0, #1
   16710:	bne	16748 <__assert_fail@plt+0x5658>
   16714:	b	16718 <__assert_fail@plt+0x5628>
   16718:	ldr	r0, [fp, #8]
   1671c:	add	r0, r0, #0
   16720:	movw	r1, #0
   16724:	cmp	r1, r0
   16728:	blt	1677c <__assert_fail@plt+0x568c>
   1672c:	b	16794 <__assert_fail@plt+0x56a4>
   16730:	ldr	r0, [fp, #8]
   16734:	sub	r0, r0, #1
   16738:	mvn	r1, #0
   1673c:	cmp	r1, r0
   16740:	blt	1677c <__assert_fail@plt+0x568c>
   16744:	b	16794 <__assert_fail@plt+0x56a4>
   16748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1674c:	movw	r1, #0
   16750:	sdiv	r0, r1, r0
   16754:	ldr	r1, [fp, #8]
   16758:	cmp	r0, r1
   1675c:	blt	1677c <__assert_fail@plt+0x568c>
   16760:	b	16794 <__assert_fail@plt+0x56a4>
   16764:	ldr	r0, [fp, #8]
   16768:	movw	r1, #65535	; 0xffff
   1676c:	sdiv	r0, r1, r0
   16770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16774:	cmp	r0, r1
   16778:	bge	16794 <__assert_fail@plt+0x56a4>
   1677c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16780:	ldr	r1, [fp, #8]
   16784:	mul	r0, r0, r1
   16788:	uxth	r0, r0
   1678c:	str	r0, [fp, #-28]	; 0xffffffe4
   16790:	b	1739c <__assert_fail@plt+0x62ac>
   16794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16798:	ldr	r1, [fp, #8]
   1679c:	mul	r0, r0, r1
   167a0:	uxth	r0, r0
   167a4:	str	r0, [fp, #-28]	; 0xffffffe4
   167a8:	b	173a8 <__assert_fail@plt+0x62b8>
   167ac:	b	167b0 <__assert_fail@plt+0x56c0>
   167b0:	b	167b4 <__assert_fail@plt+0x56c4>
   167b4:	ldr	r0, [fp, #8]
   167b8:	cmp	r0, #0
   167bc:	bge	168c0 <__assert_fail@plt+0x57d0>
   167c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167c4:	cmp	r0, #0
   167c8:	bge	16854 <__assert_fail@plt+0x5764>
   167cc:	b	167d0 <__assert_fail@plt+0x56e0>
   167d0:	ldr	r0, [pc, #1984]	; 16f98 <__assert_fail@plt+0x5ea8>
   167d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167d8:	ldr	r2, [fp, #8]
   167dc:	sdiv	r0, r0, r2
   167e0:	cmp	r1, r0
   167e4:	blt	16950 <__assert_fail@plt+0x5860>
   167e8:	b	16964 <__assert_fail@plt+0x5874>
   167ec:	b	167f0 <__assert_fail@plt+0x5700>
   167f0:	ldr	r0, [pc, #2116]	; 1703c <__assert_fail@plt+0x5f4c>
   167f4:	ldr	r1, [fp, #8]
   167f8:	cmp	r1, r0
   167fc:	blt	16814 <__assert_fail@plt+0x5724>
   16800:	b	16820 <__assert_fail@plt+0x5730>
   16804:	ldr	r0, [fp, #8]
   16808:	movw	r1, #0
   1680c:	cmp	r1, r0
   16810:	bge	16820 <__assert_fail@plt+0x5730>
   16814:	movw	r0, #0
   16818:	str	r0, [fp, #-52]	; 0xffffffcc
   1681c:	b	16838 <__assert_fail@plt+0x5748>
   16820:	ldr	r0, [pc, #1904]	; 16f98 <__assert_fail@plt+0x5ea8>
   16824:	ldr	r1, [fp, #8]
   16828:	movw	r2, #0
   1682c:	sub	r1, r2, r1
   16830:	sdiv	r0, r0, r1
   16834:	str	r0, [fp, #-52]	; 0xffffffcc
   16838:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1683c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16840:	mvn	r2, #0
   16844:	sub	r1, r2, r1
   16848:	cmp	r0, r1
   1684c:	ble	16950 <__assert_fail@plt+0x5860>
   16850:	b	16964 <__assert_fail@plt+0x5874>
   16854:	ldr	r0, [fp, #8]
   16858:	cmn	r0, #1
   1685c:	bne	168a4 <__assert_fail@plt+0x57b4>
   16860:	b	16864 <__assert_fail@plt+0x5774>
   16864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16868:	add	r0, r0, #-2147483648	; 0x80000000
   1686c:	movw	r1, #0
   16870:	cmp	r1, r0
   16874:	blt	16950 <__assert_fail@plt+0x5860>
   16878:	b	16964 <__assert_fail@plt+0x5874>
   1687c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16880:	movw	r1, #0
   16884:	cmp	r1, r0
   16888:	bge	16964 <__assert_fail@plt+0x5874>
   1688c:	ldr	r0, [pc, #1796]	; 16f98 <__assert_fail@plt+0x5ea8>
   16890:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16894:	sub	r1, r1, #1
   16898:	cmp	r0, r1
   1689c:	blt	16950 <__assert_fail@plt+0x5860>
   168a0:	b	16964 <__assert_fail@plt+0x5874>
   168a4:	ldr	r0, [pc, #4080]	; 1789c <__assert_fail@plt+0x67ac>
   168a8:	ldr	r1, [fp, #8]
   168ac:	sdiv	r0, r0, r1
   168b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168b4:	cmp	r0, r1
   168b8:	blt	16950 <__assert_fail@plt+0x5860>
   168bc:	b	16964 <__assert_fail@plt+0x5874>
   168c0:	ldr	r0, [fp, #8]
   168c4:	cmp	r0, #0
   168c8:	bne	168d0 <__assert_fail@plt+0x57e0>
   168cc:	b	16964 <__assert_fail@plt+0x5874>
   168d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168d4:	cmp	r0, #0
   168d8:	bge	16938 <__assert_fail@plt+0x5848>
   168dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168e0:	cmn	r0, #1
   168e4:	bne	1691c <__assert_fail@plt+0x582c>
   168e8:	b	168ec <__assert_fail@plt+0x57fc>
   168ec:	ldr	r0, [fp, #8]
   168f0:	add	r0, r0, #-2147483648	; 0x80000000
   168f4:	movw	r1, #0
   168f8:	cmp	r1, r0
   168fc:	blt	16950 <__assert_fail@plt+0x5860>
   16900:	b	16964 <__assert_fail@plt+0x5874>
   16904:	ldr	r0, [pc, #1676]	; 16f98 <__assert_fail@plt+0x5ea8>
   16908:	ldr	r1, [fp, #8]
   1690c:	sub	r1, r1, #1
   16910:	cmp	r0, r1
   16914:	blt	16950 <__assert_fail@plt+0x5860>
   16918:	b	16964 <__assert_fail@plt+0x5874>
   1691c:	ldr	r0, [pc, #3960]	; 1789c <__assert_fail@plt+0x67ac>
   16920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16924:	sdiv	r0, r0, r1
   16928:	ldr	r1, [fp, #8]
   1692c:	cmp	r0, r1
   16930:	blt	16950 <__assert_fail@plt+0x5860>
   16934:	b	16964 <__assert_fail@plt+0x5874>
   16938:	ldr	r0, [pc, #1624]	; 16f98 <__assert_fail@plt+0x5ea8>
   1693c:	ldr	r1, [fp, #8]
   16940:	sdiv	r0, r0, r1
   16944:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16948:	cmp	r0, r1
   1694c:	bge	16964 <__assert_fail@plt+0x5874>
   16950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16954:	ldr	r1, [fp, #8]
   16958:	mul	r0, r0, r1
   1695c:	str	r0, [fp, #-28]	; 0xffffffe4
   16960:	b	1739c <__assert_fail@plt+0x62ac>
   16964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16968:	ldr	r1, [fp, #8]
   1696c:	mul	r0, r0, r1
   16970:	str	r0, [fp, #-28]	; 0xffffffe4
   16974:	b	173a8 <__assert_fail@plt+0x62b8>
   16978:	ldr	r0, [fp, #8]
   1697c:	cmp	r0, #0
   16980:	bge	16a90 <__assert_fail@plt+0x59a0>
   16984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16988:	cmp	r0, #0
   1698c:	bge	16a18 <__assert_fail@plt+0x5928>
   16990:	b	169b0 <__assert_fail@plt+0x58c0>
   16994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16998:	ldr	r1, [fp, #8]
   1699c:	mvn	r2, #0
   169a0:	udiv	r1, r2, r1
   169a4:	cmp	r0, r1
   169a8:	bcc	16b2c <__assert_fail@plt+0x5a3c>
   169ac:	b	16b40 <__assert_fail@plt+0x5a50>
   169b0:	b	169b4 <__assert_fail@plt+0x58c4>
   169b4:	ldr	r0, [pc, #1664]	; 1703c <__assert_fail@plt+0x5f4c>
   169b8:	ldr	r1, [fp, #8]
   169bc:	cmp	r1, r0
   169c0:	blt	169d8 <__assert_fail@plt+0x58e8>
   169c4:	b	169e4 <__assert_fail@plt+0x58f4>
   169c8:	ldr	r0, [fp, #8]
   169cc:	movw	r1, #0
   169d0:	cmp	r1, r0
   169d4:	bge	169e4 <__assert_fail@plt+0x58f4>
   169d8:	movw	r0, #1
   169dc:	str	r0, [fp, #-56]	; 0xffffffc8
   169e0:	b	169fc <__assert_fail@plt+0x590c>
   169e4:	ldr	r0, [fp, #8]
   169e8:	movw	r1, #0
   169ec:	sub	r0, r1, r0
   169f0:	mvn	r1, #0
   169f4:	udiv	r0, r1, r0
   169f8:	str	r0, [fp, #-56]	; 0xffffffc8
   169fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a04:	mvn	r2, #0
   16a08:	sub	r1, r2, r1
   16a0c:	cmp	r0, r1
   16a10:	bls	16b2c <__assert_fail@plt+0x5a3c>
   16a14:	b	16b40 <__assert_fail@plt+0x5a50>
   16a18:	b	16a1c <__assert_fail@plt+0x592c>
   16a1c:	b	16a74 <__assert_fail@plt+0x5984>
   16a20:	b	16a74 <__assert_fail@plt+0x5984>
   16a24:	ldr	r0, [fp, #8]
   16a28:	cmn	r0, #1
   16a2c:	bne	16a74 <__assert_fail@plt+0x5984>
   16a30:	b	16a34 <__assert_fail@plt+0x5944>
   16a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a38:	add	r0, r0, #0
   16a3c:	movw	r1, #0
   16a40:	cmp	r1, r0
   16a44:	blt	16b2c <__assert_fail@plt+0x5a3c>
   16a48:	b	16b40 <__assert_fail@plt+0x5a50>
   16a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a50:	movw	r1, #0
   16a54:	cmp	r1, r0
   16a58:	bge	16b40 <__assert_fail@plt+0x5a50>
   16a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a60:	sub	r0, r0, #1
   16a64:	mvn	r1, #0
   16a68:	cmp	r1, r0
   16a6c:	blt	16b2c <__assert_fail@plt+0x5a3c>
   16a70:	b	16b40 <__assert_fail@plt+0x5a50>
   16a74:	ldr	r0, [fp, #8]
   16a78:	movw	r1, #0
   16a7c:	sdiv	r0, r1, r0
   16a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a84:	cmp	r0, r1
   16a88:	blt	16b2c <__assert_fail@plt+0x5a3c>
   16a8c:	b	16b40 <__assert_fail@plt+0x5a50>
   16a90:	ldr	r0, [fp, #8]
   16a94:	cmp	r0, #0
   16a98:	bne	16aa0 <__assert_fail@plt+0x59b0>
   16a9c:	b	16b40 <__assert_fail@plt+0x5a50>
   16aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aa4:	cmp	r0, #0
   16aa8:	bge	16b14 <__assert_fail@plt+0x5a24>
   16aac:	b	16ab0 <__assert_fail@plt+0x59c0>
   16ab0:	b	16af8 <__assert_fail@plt+0x5a08>
   16ab4:	b	16af8 <__assert_fail@plt+0x5a08>
   16ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16abc:	cmn	r0, #1
   16ac0:	bne	16af8 <__assert_fail@plt+0x5a08>
   16ac4:	b	16ac8 <__assert_fail@plt+0x59d8>
   16ac8:	ldr	r0, [fp, #8]
   16acc:	add	r0, r0, #0
   16ad0:	movw	r1, #0
   16ad4:	cmp	r1, r0
   16ad8:	blt	16b2c <__assert_fail@plt+0x5a3c>
   16adc:	b	16b40 <__assert_fail@plt+0x5a50>
   16ae0:	ldr	r0, [fp, #8]
   16ae4:	sub	r0, r0, #1
   16ae8:	mvn	r1, #0
   16aec:	cmp	r1, r0
   16af0:	blt	16b2c <__assert_fail@plt+0x5a3c>
   16af4:	b	16b40 <__assert_fail@plt+0x5a50>
   16af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16afc:	movw	r1, #0
   16b00:	sdiv	r0, r1, r0
   16b04:	ldr	r1, [fp, #8]
   16b08:	cmp	r0, r1
   16b0c:	blt	16b2c <__assert_fail@plt+0x5a3c>
   16b10:	b	16b40 <__assert_fail@plt+0x5a50>
   16b14:	ldr	r0, [fp, #8]
   16b18:	mvn	r1, #0
   16b1c:	udiv	r0, r1, r0
   16b20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b24:	cmp	r0, r1
   16b28:	bcs	16b40 <__assert_fail@plt+0x5a50>
   16b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b30:	ldr	r1, [fp, #8]
   16b34:	mul	r0, r0, r1
   16b38:	str	r0, [fp, #-28]	; 0xffffffe4
   16b3c:	b	1739c <__assert_fail@plt+0x62ac>
   16b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b44:	ldr	r1, [fp, #8]
   16b48:	mul	r0, r0, r1
   16b4c:	str	r0, [fp, #-28]	; 0xffffffe4
   16b50:	b	173a8 <__assert_fail@plt+0x62b8>
   16b54:	b	16b58 <__assert_fail@plt+0x5a68>
   16b58:	b	16b5c <__assert_fail@plt+0x5a6c>
   16b5c:	ldr	r0, [fp, #8]
   16b60:	cmp	r0, #0
   16b64:	bge	16c68 <__assert_fail@plt+0x5b78>
   16b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b6c:	cmp	r0, #0
   16b70:	bge	16bfc <__assert_fail@plt+0x5b0c>
   16b74:	b	16b78 <__assert_fail@plt+0x5a88>
   16b78:	ldr	r0, [pc, #1048]	; 16f98 <__assert_fail@plt+0x5ea8>
   16b7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b80:	ldr	r2, [fp, #8]
   16b84:	sdiv	r0, r0, r2
   16b88:	cmp	r1, r0
   16b8c:	blt	16cf8 <__assert_fail@plt+0x5c08>
   16b90:	b	16d0c <__assert_fail@plt+0x5c1c>
   16b94:	b	16b98 <__assert_fail@plt+0x5aa8>
   16b98:	ldr	r0, [pc, #1180]	; 1703c <__assert_fail@plt+0x5f4c>
   16b9c:	ldr	r1, [fp, #8]
   16ba0:	cmp	r1, r0
   16ba4:	blt	16bbc <__assert_fail@plt+0x5acc>
   16ba8:	b	16bc8 <__assert_fail@plt+0x5ad8>
   16bac:	ldr	r0, [fp, #8]
   16bb0:	movw	r1, #0
   16bb4:	cmp	r1, r0
   16bb8:	bge	16bc8 <__assert_fail@plt+0x5ad8>
   16bbc:	movw	r0, #0
   16bc0:	str	r0, [fp, #-60]	; 0xffffffc4
   16bc4:	b	16be0 <__assert_fail@plt+0x5af0>
   16bc8:	ldr	r0, [pc, #968]	; 16f98 <__assert_fail@plt+0x5ea8>
   16bcc:	ldr	r1, [fp, #8]
   16bd0:	movw	r2, #0
   16bd4:	sub	r1, r2, r1
   16bd8:	sdiv	r0, r0, r1
   16bdc:	str	r0, [fp, #-60]	; 0xffffffc4
   16be0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16be4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16be8:	mvn	r2, #0
   16bec:	sub	r1, r2, r1
   16bf0:	cmp	r0, r1
   16bf4:	ble	16cf8 <__assert_fail@plt+0x5c08>
   16bf8:	b	16d0c <__assert_fail@plt+0x5c1c>
   16bfc:	ldr	r0, [fp, #8]
   16c00:	cmn	r0, #1
   16c04:	bne	16c4c <__assert_fail@plt+0x5b5c>
   16c08:	b	16c0c <__assert_fail@plt+0x5b1c>
   16c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c10:	add	r0, r0, #-2147483648	; 0x80000000
   16c14:	movw	r1, #0
   16c18:	cmp	r1, r0
   16c1c:	blt	16cf8 <__assert_fail@plt+0x5c08>
   16c20:	b	16d0c <__assert_fail@plt+0x5c1c>
   16c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c28:	movw	r1, #0
   16c2c:	cmp	r1, r0
   16c30:	bge	16d0c <__assert_fail@plt+0x5c1c>
   16c34:	ldr	r0, [pc, #860]	; 16f98 <__assert_fail@plt+0x5ea8>
   16c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c3c:	sub	r1, r1, #1
   16c40:	cmp	r0, r1
   16c44:	blt	16cf8 <__assert_fail@plt+0x5c08>
   16c48:	b	16d0c <__assert_fail@plt+0x5c1c>
   16c4c:	ldr	r0, [pc, #3144]	; 1789c <__assert_fail@plt+0x67ac>
   16c50:	ldr	r1, [fp, #8]
   16c54:	sdiv	r0, r0, r1
   16c58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c5c:	cmp	r0, r1
   16c60:	blt	16cf8 <__assert_fail@plt+0x5c08>
   16c64:	b	16d0c <__assert_fail@plt+0x5c1c>
   16c68:	ldr	r0, [fp, #8]
   16c6c:	cmp	r0, #0
   16c70:	bne	16c78 <__assert_fail@plt+0x5b88>
   16c74:	b	16d0c <__assert_fail@plt+0x5c1c>
   16c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c7c:	cmp	r0, #0
   16c80:	bge	16ce0 <__assert_fail@plt+0x5bf0>
   16c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c88:	cmn	r0, #1
   16c8c:	bne	16cc4 <__assert_fail@plt+0x5bd4>
   16c90:	b	16c94 <__assert_fail@plt+0x5ba4>
   16c94:	ldr	r0, [fp, #8]
   16c98:	add	r0, r0, #-2147483648	; 0x80000000
   16c9c:	movw	r1, #0
   16ca0:	cmp	r1, r0
   16ca4:	blt	16cf8 <__assert_fail@plt+0x5c08>
   16ca8:	b	16d0c <__assert_fail@plt+0x5c1c>
   16cac:	ldr	r0, [pc, #740]	; 16f98 <__assert_fail@plt+0x5ea8>
   16cb0:	ldr	r1, [fp, #8]
   16cb4:	sub	r1, r1, #1
   16cb8:	cmp	r0, r1
   16cbc:	blt	16cf8 <__assert_fail@plt+0x5c08>
   16cc0:	b	16d0c <__assert_fail@plt+0x5c1c>
   16cc4:	ldr	r0, [pc, #3024]	; 1789c <__assert_fail@plt+0x67ac>
   16cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ccc:	sdiv	r0, r0, r1
   16cd0:	ldr	r1, [fp, #8]
   16cd4:	cmp	r0, r1
   16cd8:	blt	16cf8 <__assert_fail@plt+0x5c08>
   16cdc:	b	16d0c <__assert_fail@plt+0x5c1c>
   16ce0:	ldr	r0, [pc, #688]	; 16f98 <__assert_fail@plt+0x5ea8>
   16ce4:	ldr	r1, [fp, #8]
   16ce8:	sdiv	r0, r0, r1
   16cec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cf0:	cmp	r0, r1
   16cf4:	bge	16d0c <__assert_fail@plt+0x5c1c>
   16cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cfc:	ldr	r1, [fp, #8]
   16d00:	mul	r0, r0, r1
   16d04:	str	r0, [fp, #-28]	; 0xffffffe4
   16d08:	b	1739c <__assert_fail@plt+0x62ac>
   16d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d10:	ldr	r1, [fp, #8]
   16d14:	mul	r0, r0, r1
   16d18:	str	r0, [fp, #-28]	; 0xffffffe4
   16d1c:	b	173a8 <__assert_fail@plt+0x62b8>
   16d20:	ldr	r0, [fp, #8]
   16d24:	cmp	r0, #0
   16d28:	bge	16e38 <__assert_fail@plt+0x5d48>
   16d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d30:	cmp	r0, #0
   16d34:	bge	16dc0 <__assert_fail@plt+0x5cd0>
   16d38:	b	16d58 <__assert_fail@plt+0x5c68>
   16d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d40:	ldr	r1, [fp, #8]
   16d44:	mvn	r2, #0
   16d48:	udiv	r1, r2, r1
   16d4c:	cmp	r0, r1
   16d50:	bcc	16ed4 <__assert_fail@plt+0x5de4>
   16d54:	b	16ee8 <__assert_fail@plt+0x5df8>
   16d58:	b	16d5c <__assert_fail@plt+0x5c6c>
   16d5c:	ldr	r0, [pc, #728]	; 1703c <__assert_fail@plt+0x5f4c>
   16d60:	ldr	r1, [fp, #8]
   16d64:	cmp	r1, r0
   16d68:	blt	16d80 <__assert_fail@plt+0x5c90>
   16d6c:	b	16d8c <__assert_fail@plt+0x5c9c>
   16d70:	ldr	r0, [fp, #8]
   16d74:	movw	r1, #0
   16d78:	cmp	r1, r0
   16d7c:	bge	16d8c <__assert_fail@plt+0x5c9c>
   16d80:	movw	r0, #1
   16d84:	str	r0, [fp, #-64]	; 0xffffffc0
   16d88:	b	16da4 <__assert_fail@plt+0x5cb4>
   16d8c:	ldr	r0, [fp, #8]
   16d90:	movw	r1, #0
   16d94:	sub	r0, r1, r0
   16d98:	mvn	r1, #0
   16d9c:	udiv	r0, r1, r0
   16da0:	str	r0, [fp, #-64]	; 0xffffffc0
   16da4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16da8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dac:	mvn	r2, #0
   16db0:	sub	r1, r2, r1
   16db4:	cmp	r0, r1
   16db8:	bls	16ed4 <__assert_fail@plt+0x5de4>
   16dbc:	b	16ee8 <__assert_fail@plt+0x5df8>
   16dc0:	b	16dc4 <__assert_fail@plt+0x5cd4>
   16dc4:	b	16e1c <__assert_fail@plt+0x5d2c>
   16dc8:	b	16e1c <__assert_fail@plt+0x5d2c>
   16dcc:	ldr	r0, [fp, #8]
   16dd0:	cmn	r0, #1
   16dd4:	bne	16e1c <__assert_fail@plt+0x5d2c>
   16dd8:	b	16ddc <__assert_fail@plt+0x5cec>
   16ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16de0:	add	r0, r0, #0
   16de4:	movw	r1, #0
   16de8:	cmp	r1, r0
   16dec:	blt	16ed4 <__assert_fail@plt+0x5de4>
   16df0:	b	16ee8 <__assert_fail@plt+0x5df8>
   16df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df8:	movw	r1, #0
   16dfc:	cmp	r1, r0
   16e00:	bge	16ee8 <__assert_fail@plt+0x5df8>
   16e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e08:	sub	r0, r0, #1
   16e0c:	mvn	r1, #0
   16e10:	cmp	r1, r0
   16e14:	blt	16ed4 <__assert_fail@plt+0x5de4>
   16e18:	b	16ee8 <__assert_fail@plt+0x5df8>
   16e1c:	ldr	r0, [fp, #8]
   16e20:	movw	r1, #0
   16e24:	sdiv	r0, r1, r0
   16e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e2c:	cmp	r0, r1
   16e30:	blt	16ed4 <__assert_fail@plt+0x5de4>
   16e34:	b	16ee8 <__assert_fail@plt+0x5df8>
   16e38:	ldr	r0, [fp, #8]
   16e3c:	cmp	r0, #0
   16e40:	bne	16e48 <__assert_fail@plt+0x5d58>
   16e44:	b	16ee8 <__assert_fail@plt+0x5df8>
   16e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e4c:	cmp	r0, #0
   16e50:	bge	16ebc <__assert_fail@plt+0x5dcc>
   16e54:	b	16e58 <__assert_fail@plt+0x5d68>
   16e58:	b	16ea0 <__assert_fail@plt+0x5db0>
   16e5c:	b	16ea0 <__assert_fail@plt+0x5db0>
   16e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e64:	cmn	r0, #1
   16e68:	bne	16ea0 <__assert_fail@plt+0x5db0>
   16e6c:	b	16e70 <__assert_fail@plt+0x5d80>
   16e70:	ldr	r0, [fp, #8]
   16e74:	add	r0, r0, #0
   16e78:	movw	r1, #0
   16e7c:	cmp	r1, r0
   16e80:	blt	16ed4 <__assert_fail@plt+0x5de4>
   16e84:	b	16ee8 <__assert_fail@plt+0x5df8>
   16e88:	ldr	r0, [fp, #8]
   16e8c:	sub	r0, r0, #1
   16e90:	mvn	r1, #0
   16e94:	cmp	r1, r0
   16e98:	blt	16ed4 <__assert_fail@plt+0x5de4>
   16e9c:	b	16ee8 <__assert_fail@plt+0x5df8>
   16ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ea4:	movw	r1, #0
   16ea8:	sdiv	r0, r1, r0
   16eac:	ldr	r1, [fp, #8]
   16eb0:	cmp	r0, r1
   16eb4:	blt	16ed4 <__assert_fail@plt+0x5de4>
   16eb8:	b	16ee8 <__assert_fail@plt+0x5df8>
   16ebc:	ldr	r0, [fp, #8]
   16ec0:	mvn	r1, #0
   16ec4:	udiv	r0, r1, r0
   16ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ecc:	cmp	r0, r1
   16ed0:	bcs	16ee8 <__assert_fail@plt+0x5df8>
   16ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ed8:	ldr	r1, [fp, #8]
   16edc:	mul	r0, r0, r1
   16ee0:	str	r0, [fp, #-28]	; 0xffffffe4
   16ee4:	b	1739c <__assert_fail@plt+0x62ac>
   16ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eec:	ldr	r1, [fp, #8]
   16ef0:	mul	r0, r0, r1
   16ef4:	str	r0, [fp, #-28]	; 0xffffffe4
   16ef8:	b	173a8 <__assert_fail@plt+0x62b8>
   16efc:	b	16f00 <__assert_fail@plt+0x5e10>
   16f00:	ldr	r0, [fp, #8]
   16f04:	cmp	r0, #0
   16f08:	bge	17078 <__assert_fail@plt+0x5f88>
   16f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f10:	cmp	r0, #0
   16f14:	bge	16ff0 <__assert_fail@plt+0x5f00>
   16f18:	b	16f1c <__assert_fail@plt+0x5e2c>
   16f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f20:	ldr	r1, [fp, #8]
   16f24:	asr	r3, r1, #31
   16f28:	mvn	r2, #0
   16f2c:	mvn	ip, #-2147483648	; 0x80000000
   16f30:	str	r0, [fp, #-68]	; 0xffffffbc
   16f34:	mov	r0, r2
   16f38:	str	r1, [fp, #-72]	; 0xffffffb8
   16f3c:	mov	r1, ip
   16f40:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16f44:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   16f48:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16f4c:	subs	r0, r2, r0
   16f50:	rscs	r1, r1, r2, asr #31
   16f54:	blt	17140 <__assert_fail@plt+0x6050>
   16f58:	b	17154 <__assert_fail@plt+0x6064>
   16f5c:	b	16f60 <__assert_fail@plt+0x5e70>
   16f60:	ldr	r0, [pc, #212]	; 1703c <__assert_fail@plt+0x5f4c>
   16f64:	ldr	r1, [fp, #8]
   16f68:	cmp	r1, r0
   16f6c:	blt	16f84 <__assert_fail@plt+0x5e94>
   16f70:	b	16f9c <__assert_fail@plt+0x5eac>
   16f74:	ldr	r0, [fp, #8]
   16f78:	movw	r1, #0
   16f7c:	cmp	r1, r0
   16f80:	bge	16f9c <__assert_fail@plt+0x5eac>
   16f84:	mov	r0, #0
   16f88:	mvn	r1, #0
   16f8c:	str	r1, [fp, #-76]	; 0xffffffb4
   16f90:	str	r0, [fp, #-80]	; 0xffffffb0
   16f94:	b	16fd0 <__assert_fail@plt+0x5ee0>
   16f98:	svcvc	0x00ffffff
   16f9c:	ldr	r0, [fp, #8]
   16fa0:	rsb	r0, r0, #0
   16fa4:	asr	r3, r0, #31
   16fa8:	mvn	r1, #0
   16fac:	mvn	r2, #-2147483648	; 0x80000000
   16fb0:	str	r0, [fp, #-84]	; 0xffffffac
   16fb4:	mov	r0, r1
   16fb8:	mov	r1, r2
   16fbc:	ldr	r2, [fp, #-84]	; 0xffffffac
   16fc0:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   16fc4:	str	r0, [fp, #-76]	; 0xffffffb4
   16fc8:	str	r1, [fp, #-80]	; 0xffffffb0
   16fcc:	b	16fd0 <__assert_fail@plt+0x5ee0>
   16fd0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   16fd4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16fd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16fdc:	mvn	r2, r2
   16fe0:	subs	r1, r2, r1
   16fe4:	rscs	r0, r0, r2, asr #31
   16fe8:	bge	17140 <__assert_fail@plt+0x6050>
   16fec:	b	17154 <__assert_fail@plt+0x6064>
   16ff0:	ldr	r0, [fp, #8]
   16ff4:	cmn	r0, #1
   16ff8:	bne	17040 <__assert_fail@plt+0x5f50>
   16ffc:	b	17000 <__assert_fail@plt+0x5f10>
   17000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17004:	mov	r1, #-2147483648	; 0x80000000
   17008:	add	r1, r1, r0, asr #31
   1700c:	rsbs	r0, r0, #0
   17010:	rscs	r1, r1, #0
   17014:	blt	17140 <__assert_fail@plt+0x6050>
   17018:	b	17154 <__assert_fail@plt+0x6064>
   1701c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17020:	movw	r1, #0
   17024:	cmp	r1, r0
   17028:	bge	17154 <__assert_fail@plt+0x6064>
   1702c:	mov	r0, #0
   17030:	cmp	r0, #0
   17034:	bne	17140 <__assert_fail@plt+0x6050>
   17038:	b	17154 <__assert_fail@plt+0x6064>
   1703c:	andhi	r0, r0, r1
   17040:	ldr	r0, [fp, #8]
   17044:	asr	r3, r0, #31
   17048:	mov	r1, #0
   1704c:	mov	r2, #-2147483648	; 0x80000000
   17050:	str	r0, [fp, #-88]	; 0xffffffa8
   17054:	mov	r0, r1
   17058:	mov	r1, r2
   1705c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17060:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   17064:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17068:	subs	r0, r0, r2
   1706c:	sbcs	r1, r1, r2, asr #31
   17070:	blt	17140 <__assert_fail@plt+0x6050>
   17074:	b	17154 <__assert_fail@plt+0x6064>
   17078:	ldr	r0, [fp, #8]
   1707c:	cmp	r0, #0
   17080:	bne	17088 <__assert_fail@plt+0x5f98>
   17084:	b	17154 <__assert_fail@plt+0x6064>
   17088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1708c:	cmp	r0, #0
   17090:	bge	17108 <__assert_fail@plt+0x6018>
   17094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17098:	cmn	r0, #1
   1709c:	bne	170d0 <__assert_fail@plt+0x5fe0>
   170a0:	b	170a4 <__assert_fail@plt+0x5fb4>
   170a4:	ldr	r0, [fp, #8]
   170a8:	mov	r1, #-2147483648	; 0x80000000
   170ac:	add	r1, r1, r0, asr #31
   170b0:	rsbs	r0, r0, #0
   170b4:	rscs	r1, r1, #0
   170b8:	blt	17140 <__assert_fail@plt+0x6050>
   170bc:	b	17154 <__assert_fail@plt+0x6064>
   170c0:	mov	r0, #0
   170c4:	cmp	r0, #0
   170c8:	bne	17140 <__assert_fail@plt+0x6050>
   170cc:	b	17154 <__assert_fail@plt+0x6064>
   170d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d4:	asr	r3, r0, #31
   170d8:	mov	r1, #0
   170dc:	mov	r2, #-2147483648	; 0x80000000
   170e0:	str	r0, [fp, #-92]	; 0xffffffa4
   170e4:	mov	r0, r1
   170e8:	mov	r1, r2
   170ec:	ldr	r2, [fp, #-92]	; 0xffffffa4
   170f0:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   170f4:	ldr	r2, [fp, #8]
   170f8:	subs	r0, r0, r2
   170fc:	sbcs	r1, r1, r2, asr #31
   17100:	blt	17140 <__assert_fail@plt+0x6050>
   17104:	b	17154 <__assert_fail@plt+0x6064>
   17108:	ldr	r0, [fp, #8]
   1710c:	asr	r3, r0, #31
   17110:	mvn	r1, #0
   17114:	mvn	r2, #-2147483648	; 0x80000000
   17118:	str	r0, [fp, #-96]	; 0xffffffa0
   1711c:	mov	r0, r1
   17120:	mov	r1, r2
   17124:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17128:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   1712c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17130:	subs	r0, r0, r2
   17134:	sbcs	r1, r1, r2, asr #31
   17138:	bge	17154 <__assert_fail@plt+0x6064>
   1713c:	b	17140 <__assert_fail@plt+0x6050>
   17140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17144:	ldr	r1, [fp, #8]
   17148:	mul	r0, r0, r1
   1714c:	str	r0, [fp, #-28]	; 0xffffffe4
   17150:	b	1739c <__assert_fail@plt+0x62ac>
   17154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17158:	ldr	r1, [fp, #8]
   1715c:	mul	r0, r0, r1
   17160:	str	r0, [fp, #-28]	; 0xffffffe4
   17164:	b	173a8 <__assert_fail@plt+0x62b8>
   17168:	ldr	r0, [fp, #8]
   1716c:	cmp	r0, #0
   17170:	bge	172c0 <__assert_fail@plt+0x61d0>
   17174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17178:	cmp	r0, #0
   1717c:	bge	17248 <__assert_fail@plt+0x6158>
   17180:	b	171c0 <__assert_fail@plt+0x60d0>
   17184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17188:	ldr	r1, [fp, #8]
   1718c:	asr	r3, r1, #31
   17190:	mvn	r2, #0
   17194:	str	r0, [fp, #-100]	; 0xffffff9c
   17198:	mov	r0, r2
   1719c:	str	r1, [fp, #-104]	; 0xffffff98
   171a0:	mov	r1, r2
   171a4:	ldr	r2, [fp, #-104]	; 0xffffff98
   171a8:	bl	1ce40 <__assert_fail@plt+0xbd50>
   171ac:	ldr	r2, [fp, #-100]	; 0xffffff9c
   171b0:	subs	r0, r2, r0
   171b4:	rscs	r1, r1, r2, asr #31
   171b8:	bcc	17374 <__assert_fail@plt+0x6284>
   171bc:	b	17388 <__assert_fail@plt+0x6298>
   171c0:	b	171c4 <__assert_fail@plt+0x60d4>
   171c4:	ldr	r0, [pc, #-400]	; 1703c <__assert_fail@plt+0x5f4c>
   171c8:	ldr	r1, [fp, #8]
   171cc:	cmp	r1, r0
   171d0:	blt	171e8 <__assert_fail@plt+0x60f8>
   171d4:	b	171fc <__assert_fail@plt+0x610c>
   171d8:	ldr	r0, [fp, #8]
   171dc:	movw	r1, #0
   171e0:	cmp	r1, r0
   171e4:	bge	171fc <__assert_fail@plt+0x610c>
   171e8:	mov	r0, #1
   171ec:	mvn	r1, #0
   171f0:	str	r1, [sp, #108]	; 0x6c
   171f4:	str	r0, [sp, #104]	; 0x68
   171f8:	b	17228 <__assert_fail@plt+0x6138>
   171fc:	ldr	r0, [fp, #8]
   17200:	rsb	r0, r0, #0
   17204:	asr	r3, r0, #31
   17208:	mvn	r1, #0
   1720c:	str	r0, [sp, #100]	; 0x64
   17210:	mov	r0, r1
   17214:	ldr	r2, [sp, #100]	; 0x64
   17218:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1721c:	str	r0, [sp, #108]	; 0x6c
   17220:	str	r1, [sp, #104]	; 0x68
   17224:	b	17228 <__assert_fail@plt+0x6138>
   17228:	ldr	r0, [sp, #104]	; 0x68
   1722c:	ldr	r1, [sp, #108]	; 0x6c
   17230:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17234:	mvn	r2, r2
   17238:	subs	r1, r2, r1
   1723c:	rscs	r0, r0, r2, asr #31
   17240:	bcs	17374 <__assert_fail@plt+0x6284>
   17244:	b	17388 <__assert_fail@plt+0x6298>
   17248:	b	1724c <__assert_fail@plt+0x615c>
   1724c:	b	172a4 <__assert_fail@plt+0x61b4>
   17250:	b	172a4 <__assert_fail@plt+0x61b4>
   17254:	ldr	r0, [fp, #8]
   17258:	cmn	r0, #1
   1725c:	bne	172a4 <__assert_fail@plt+0x61b4>
   17260:	b	17264 <__assert_fail@plt+0x6174>
   17264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17268:	add	r0, r0, #0
   1726c:	movw	r1, #0
   17270:	cmp	r1, r0
   17274:	blt	17374 <__assert_fail@plt+0x6284>
   17278:	b	17388 <__assert_fail@plt+0x6298>
   1727c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17280:	movw	r1, #0
   17284:	cmp	r1, r0
   17288:	bge	17388 <__assert_fail@plt+0x6298>
   1728c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17290:	sub	r0, r0, #1
   17294:	mvn	r1, #0
   17298:	cmp	r1, r0
   1729c:	blt	17374 <__assert_fail@plt+0x6284>
   172a0:	b	17388 <__assert_fail@plt+0x6298>
   172a4:	ldr	r0, [fp, #8]
   172a8:	movw	r1, #0
   172ac:	sdiv	r0, r1, r0
   172b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172b4:	cmp	r0, r1
   172b8:	blt	17374 <__assert_fail@plt+0x6284>
   172bc:	b	17388 <__assert_fail@plt+0x6298>
   172c0:	ldr	r0, [fp, #8]
   172c4:	cmp	r0, #0
   172c8:	bne	172d0 <__assert_fail@plt+0x61e0>
   172cc:	b	17388 <__assert_fail@plt+0x6298>
   172d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d4:	cmp	r0, #0
   172d8:	bge	17344 <__assert_fail@plt+0x6254>
   172dc:	b	172e0 <__assert_fail@plt+0x61f0>
   172e0:	b	17328 <__assert_fail@plt+0x6238>
   172e4:	b	17328 <__assert_fail@plt+0x6238>
   172e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172ec:	cmn	r0, #1
   172f0:	bne	17328 <__assert_fail@plt+0x6238>
   172f4:	b	172f8 <__assert_fail@plt+0x6208>
   172f8:	ldr	r0, [fp, #8]
   172fc:	add	r0, r0, #0
   17300:	movw	r1, #0
   17304:	cmp	r1, r0
   17308:	blt	17374 <__assert_fail@plt+0x6284>
   1730c:	b	17388 <__assert_fail@plt+0x6298>
   17310:	ldr	r0, [fp, #8]
   17314:	sub	r0, r0, #1
   17318:	mvn	r1, #0
   1731c:	cmp	r1, r0
   17320:	blt	17374 <__assert_fail@plt+0x6284>
   17324:	b	17388 <__assert_fail@plt+0x6298>
   17328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1732c:	movw	r1, #0
   17330:	sdiv	r0, r1, r0
   17334:	ldr	r1, [fp, #8]
   17338:	cmp	r0, r1
   1733c:	blt	17374 <__assert_fail@plt+0x6284>
   17340:	b	17388 <__assert_fail@plt+0x6298>
   17344:	ldr	r0, [fp, #8]
   17348:	asr	r3, r0, #31
   1734c:	mvn	r1, #0
   17350:	str	r0, [sp, #96]	; 0x60
   17354:	mov	r0, r1
   17358:	ldr	r2, [sp, #96]	; 0x60
   1735c:	bl	1ce40 <__assert_fail@plt+0xbd50>
   17360:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17364:	subs	r0, r0, r2
   17368:	sbcs	r1, r1, r2, asr #31
   1736c:	bcs	17388 <__assert_fail@plt+0x6298>
   17370:	b	17374 <__assert_fail@plt+0x6284>
   17374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17378:	ldr	r1, [fp, #8]
   1737c:	mul	r0, r0, r1
   17380:	str	r0, [fp, #-28]	; 0xffffffe4
   17384:	b	1739c <__assert_fail@plt+0x62ac>
   17388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1738c:	ldr	r1, [fp, #8]
   17390:	mul	r0, r0, r1
   17394:	str	r0, [fp, #-28]	; 0xffffffe4
   17398:	b	173a8 <__assert_fail@plt+0x62b8>
   1739c:	ldr	r0, [pc, #-1036]	; 16f98 <__assert_fail@plt+0x5ea8>
   173a0:	str	r0, [sp, #92]	; 0x5c
   173a4:	b	173c8 <__assert_fail@plt+0x62d8>
   173a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   173ac:	cmp	r0, #64	; 0x40
   173b0:	movw	r0, #0
   173b4:	movlt	r0, #1
   173b8:	tst	r0, #1
   173bc:	movw	r0, #64	; 0x40
   173c0:	moveq	r0, #0
   173c4:	str	r0, [sp, #92]	; 0x5c
   173c8:	ldr	r0, [sp, #92]	; 0x5c
   173cc:	str	r0, [fp, #-32]	; 0xffffffe0
   173d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173d4:	cmp	r0, #0
   173d8:	beq	17408 <__assert_fail@plt+0x6318>
   173dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173e0:	ldr	r1, [fp, #8]
   173e4:	sdiv	r0, r0, r1
   173e8:	str	r0, [fp, #-24]	; 0xffffffe8
   173ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173f0:	mov	r1, r0
   173f4:	ldr	r2, [fp, #8]
   173f8:	sdiv	r3, r0, r2
   173fc:	mls	r0, r3, r2, r0
   17400:	sub	r0, r1, r0
   17404:	str	r0, [fp, #-28]	; 0xffffffe4
   17408:	ldr	r0, [fp, #-4]
   1740c:	movw	r1, #0
   17410:	cmp	r0, r1
   17414:	bne	17424 <__assert_fail@plt+0x6334>
   17418:	ldr	r0, [fp, #-8]
   1741c:	movw	r1, #0
   17420:	str	r1, [r0]
   17424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17428:	ldr	r1, [fp, #-20]	; 0xffffffec
   1742c:	sub	r0, r0, r1
   17430:	ldr	r1, [fp, #-12]
   17434:	cmp	r0, r1
   17438:	bge	18824 <__assert_fail@plt+0x7734>
   1743c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17440:	ldr	r1, [fp, #-12]
   17444:	add	r1, r0, r1
   17448:	mov	r2, #1
   1744c:	cmp	r1, r0
   17450:	movwvc	r2, #0
   17454:	str	r1, [fp, #-24]	; 0xffffffe8
   17458:	tst	r2, #1
   1745c:	bne	18820 <__assert_fail@plt+0x7730>
   17460:	ldr	r0, [fp, #-16]
   17464:	movw	r1, #0
   17468:	cmp	r1, r0
   1746c:	bgt	17480 <__assert_fail@plt+0x6390>
   17470:	ldr	r0, [fp, #-16]
   17474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17478:	cmp	r0, r1
   1747c:	blt	18820 <__assert_fail@plt+0x7730>
   17480:	b	1785c <__assert_fail@plt+0x676c>
   17484:			; <UNDEFINED> instruction: 0xffff8000
   17488:	b	1748c <__assert_fail@plt+0x639c>
   1748c:	ldr	r0, [fp, #8]
   17490:	cmp	r0, #0
   17494:	bge	175a8 <__assert_fail@plt+0x64b8>
   17498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1749c:	cmp	r0, #0
   174a0:	bge	1752c <__assert_fail@plt+0x643c>
   174a4:	b	174a8 <__assert_fail@plt+0x63b8>
   174a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174ac:	ldr	r1, [fp, #8]
   174b0:	movw	r2, #127	; 0x7f
   174b4:	sdiv	r1, r2, r1
   174b8:	cmp	r0, r1
   174bc:	blt	17648 <__assert_fail@plt+0x6558>
   174c0:	b	17660 <__assert_fail@plt+0x6570>
   174c4:	b	174c8 <__assert_fail@plt+0x63d8>
   174c8:	ldr	r0, [pc, #-1172]	; 1703c <__assert_fail@plt+0x5f4c>
   174cc:	ldr	r1, [fp, #8]
   174d0:	cmp	r1, r0
   174d4:	blt	174ec <__assert_fail@plt+0x63fc>
   174d8:	b	174f8 <__assert_fail@plt+0x6408>
   174dc:	ldr	r0, [fp, #8]
   174e0:	movw	r1, #0
   174e4:	cmp	r1, r0
   174e8:	bge	174f8 <__assert_fail@plt+0x6408>
   174ec:	movw	r0, #0
   174f0:	str	r0, [sp, #88]	; 0x58
   174f4:	b	17510 <__assert_fail@plt+0x6420>
   174f8:	ldr	r0, [fp, #8]
   174fc:	movw	r1, #0
   17500:	sub	r0, r1, r0
   17504:	movw	r1, #127	; 0x7f
   17508:	sdiv	r0, r1, r0
   1750c:	str	r0, [sp, #88]	; 0x58
   17510:	ldr	r0, [sp, #88]	; 0x58
   17514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17518:	mvn	r2, #0
   1751c:	sub	r1, r2, r1
   17520:	cmp	r0, r1
   17524:	ble	17648 <__assert_fail@plt+0x6558>
   17528:	b	17660 <__assert_fail@plt+0x6570>
   1752c:	b	17530 <__assert_fail@plt+0x6440>
   17530:	b	1758c <__assert_fail@plt+0x649c>
   17534:	b	1758c <__assert_fail@plt+0x649c>
   17538:	ldr	r0, [fp, #8]
   1753c:	cmn	r0, #1
   17540:	bne	1758c <__assert_fail@plt+0x649c>
   17544:	b	17548 <__assert_fail@plt+0x6458>
   17548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1754c:	mvn	r1, #127	; 0x7f
   17550:	add	r0, r0, r1
   17554:	movw	r1, #0
   17558:	cmp	r1, r0
   1755c:	blt	17648 <__assert_fail@plt+0x6558>
   17560:	b	17660 <__assert_fail@plt+0x6570>
   17564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17568:	movw	r1, #0
   1756c:	cmp	r1, r0
   17570:	bge	17660 <__assert_fail@plt+0x6570>
   17574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17578:	sub	r0, r0, #1
   1757c:	movw	r1, #127	; 0x7f
   17580:	cmp	r1, r0
   17584:	blt	17648 <__assert_fail@plt+0x6558>
   17588:	b	17660 <__assert_fail@plt+0x6570>
   1758c:	ldr	r0, [fp, #8]
   17590:	mvn	r1, #127	; 0x7f
   17594:	sdiv	r0, r1, r0
   17598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1759c:	cmp	r0, r1
   175a0:	blt	17648 <__assert_fail@plt+0x6558>
   175a4:	b	17660 <__assert_fail@plt+0x6570>
   175a8:	ldr	r0, [fp, #8]
   175ac:	cmp	r0, #0
   175b0:	bne	175b8 <__assert_fail@plt+0x64c8>
   175b4:	b	17660 <__assert_fail@plt+0x6570>
   175b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175bc:	cmp	r0, #0
   175c0:	bge	17630 <__assert_fail@plt+0x6540>
   175c4:	b	175c8 <__assert_fail@plt+0x64d8>
   175c8:	b	17614 <__assert_fail@plt+0x6524>
   175cc:	b	17614 <__assert_fail@plt+0x6524>
   175d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175d4:	cmn	r0, #1
   175d8:	bne	17614 <__assert_fail@plt+0x6524>
   175dc:	b	175e0 <__assert_fail@plt+0x64f0>
   175e0:	ldr	r0, [fp, #8]
   175e4:	mvn	r1, #127	; 0x7f
   175e8:	add	r0, r0, r1
   175ec:	movw	r1, #0
   175f0:	cmp	r1, r0
   175f4:	blt	17648 <__assert_fail@plt+0x6558>
   175f8:	b	17660 <__assert_fail@plt+0x6570>
   175fc:	ldr	r0, [fp, #8]
   17600:	sub	r0, r0, #1
   17604:	movw	r1, #127	; 0x7f
   17608:	cmp	r1, r0
   1760c:	blt	17648 <__assert_fail@plt+0x6558>
   17610:	b	17660 <__assert_fail@plt+0x6570>
   17614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17618:	mvn	r1, #127	; 0x7f
   1761c:	sdiv	r0, r1, r0
   17620:	ldr	r1, [fp, #8]
   17624:	cmp	r0, r1
   17628:	blt	17648 <__assert_fail@plt+0x6558>
   1762c:	b	17660 <__assert_fail@plt+0x6570>
   17630:	ldr	r0, [fp, #8]
   17634:	movw	r1, #127	; 0x7f
   17638:	sdiv	r0, r1, r0
   1763c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17640:	cmp	r0, r1
   17644:	bge	17660 <__assert_fail@plt+0x6570>
   17648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1764c:	ldr	r1, [fp, #8]
   17650:	mul	r0, r0, r1
   17654:	sxtb	r0, r0
   17658:	str	r0, [fp, #-28]	; 0xffffffe4
   1765c:	b	18820 <__assert_fail@plt+0x7730>
   17660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17664:	ldr	r1, [fp, #8]
   17668:	mul	r0, r0, r1
   1766c:	sxtb	r0, r0
   17670:	str	r0, [fp, #-28]	; 0xffffffe4
   17674:	b	18824 <__assert_fail@plt+0x7734>
   17678:	ldr	r0, [fp, #8]
   1767c:	cmp	r0, #0
   17680:	bge	17790 <__assert_fail@plt+0x66a0>
   17684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17688:	cmp	r0, #0
   1768c:	bge	17718 <__assert_fail@plt+0x6628>
   17690:	b	17694 <__assert_fail@plt+0x65a4>
   17694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17698:	ldr	r1, [fp, #8]
   1769c:	movw	r2, #255	; 0xff
   176a0:	sdiv	r1, r2, r1
   176a4:	cmp	r0, r1
   176a8:	blt	1782c <__assert_fail@plt+0x673c>
   176ac:	b	17844 <__assert_fail@plt+0x6754>
   176b0:	b	176b4 <__assert_fail@plt+0x65c4>
   176b4:	ldr	r0, [pc, #-1664]	; 1703c <__assert_fail@plt+0x5f4c>
   176b8:	ldr	r1, [fp, #8]
   176bc:	cmp	r1, r0
   176c0:	blt	176d8 <__assert_fail@plt+0x65e8>
   176c4:	b	176e4 <__assert_fail@plt+0x65f4>
   176c8:	ldr	r0, [fp, #8]
   176cc:	movw	r1, #0
   176d0:	cmp	r1, r0
   176d4:	bge	176e4 <__assert_fail@plt+0x65f4>
   176d8:	movw	r0, #0
   176dc:	str	r0, [sp, #84]	; 0x54
   176e0:	b	176fc <__assert_fail@plt+0x660c>
   176e4:	ldr	r0, [fp, #8]
   176e8:	movw	r1, #0
   176ec:	sub	r0, r1, r0
   176f0:	movw	r1, #255	; 0xff
   176f4:	sdiv	r0, r1, r0
   176f8:	str	r0, [sp, #84]	; 0x54
   176fc:	ldr	r0, [sp, #84]	; 0x54
   17700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17704:	mvn	r2, #0
   17708:	sub	r1, r2, r1
   1770c:	cmp	r0, r1
   17710:	ble	1782c <__assert_fail@plt+0x673c>
   17714:	b	17844 <__assert_fail@plt+0x6754>
   17718:	b	1771c <__assert_fail@plt+0x662c>
   1771c:	b	17774 <__assert_fail@plt+0x6684>
   17720:	b	17774 <__assert_fail@plt+0x6684>
   17724:	ldr	r0, [fp, #8]
   17728:	cmn	r0, #1
   1772c:	bne	17774 <__assert_fail@plt+0x6684>
   17730:	b	17734 <__assert_fail@plt+0x6644>
   17734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17738:	add	r0, r0, #0
   1773c:	movw	r1, #0
   17740:	cmp	r1, r0
   17744:	blt	1782c <__assert_fail@plt+0x673c>
   17748:	b	17844 <__assert_fail@plt+0x6754>
   1774c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17750:	movw	r1, #0
   17754:	cmp	r1, r0
   17758:	bge	17844 <__assert_fail@plt+0x6754>
   1775c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17760:	sub	r0, r0, #1
   17764:	mvn	r1, #0
   17768:	cmp	r1, r0
   1776c:	blt	1782c <__assert_fail@plt+0x673c>
   17770:	b	17844 <__assert_fail@plt+0x6754>
   17774:	ldr	r0, [fp, #8]
   17778:	movw	r1, #0
   1777c:	sdiv	r0, r1, r0
   17780:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17784:	cmp	r0, r1
   17788:	blt	1782c <__assert_fail@plt+0x673c>
   1778c:	b	17844 <__assert_fail@plt+0x6754>
   17790:	ldr	r0, [fp, #8]
   17794:	cmp	r0, #0
   17798:	bne	177a0 <__assert_fail@plt+0x66b0>
   1779c:	b	17844 <__assert_fail@plt+0x6754>
   177a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177a4:	cmp	r0, #0
   177a8:	bge	17814 <__assert_fail@plt+0x6724>
   177ac:	b	177b0 <__assert_fail@plt+0x66c0>
   177b0:	b	177f8 <__assert_fail@plt+0x6708>
   177b4:	b	177f8 <__assert_fail@plt+0x6708>
   177b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177bc:	cmn	r0, #1
   177c0:	bne	177f8 <__assert_fail@plt+0x6708>
   177c4:	b	177c8 <__assert_fail@plt+0x66d8>
   177c8:	ldr	r0, [fp, #8]
   177cc:	add	r0, r0, #0
   177d0:	movw	r1, #0
   177d4:	cmp	r1, r0
   177d8:	blt	1782c <__assert_fail@plt+0x673c>
   177dc:	b	17844 <__assert_fail@plt+0x6754>
   177e0:	ldr	r0, [fp, #8]
   177e4:	sub	r0, r0, #1
   177e8:	mvn	r1, #0
   177ec:	cmp	r1, r0
   177f0:	blt	1782c <__assert_fail@plt+0x673c>
   177f4:	b	17844 <__assert_fail@plt+0x6754>
   177f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177fc:	movw	r1, #0
   17800:	sdiv	r0, r1, r0
   17804:	ldr	r1, [fp, #8]
   17808:	cmp	r0, r1
   1780c:	blt	1782c <__assert_fail@plt+0x673c>
   17810:	b	17844 <__assert_fail@plt+0x6754>
   17814:	ldr	r0, [fp, #8]
   17818:	movw	r1, #255	; 0xff
   1781c:	sdiv	r0, r1, r0
   17820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17824:	cmp	r0, r1
   17828:	bge	17844 <__assert_fail@plt+0x6754>
   1782c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17830:	ldr	r1, [fp, #8]
   17834:	mul	r0, r0, r1
   17838:	and	r0, r0, #255	; 0xff
   1783c:	str	r0, [fp, #-28]	; 0xffffffe4
   17840:	b	18820 <__assert_fail@plt+0x7730>
   17844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17848:	ldr	r1, [fp, #8]
   1784c:	mul	r0, r0, r1
   17850:	and	r0, r0, #255	; 0xff
   17854:	str	r0, [fp, #-28]	; 0xffffffe4
   17858:	b	18824 <__assert_fail@plt+0x7734>
   1785c:	b	17c38 <__assert_fail@plt+0x6b48>
   17860:	b	17864 <__assert_fail@plt+0x6774>
   17864:	ldr	r0, [fp, #8]
   17868:	cmp	r0, #0
   1786c:	bge	17984 <__assert_fail@plt+0x6894>
   17870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17874:	cmp	r0, #0
   17878:	bge	17908 <__assert_fail@plt+0x6818>
   1787c:	b	17880 <__assert_fail@plt+0x6790>
   17880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17884:	ldr	r1, [fp, #8]
   17888:	movw	r2, #32767	; 0x7fff
   1788c:	sdiv	r1, r2, r1
   17890:	cmp	r0, r1
   17894:	blt	17a24 <__assert_fail@plt+0x6934>
   17898:	b	17a3c <__assert_fail@plt+0x694c>
   1789c:	andhi	r0, r0, r0
   178a0:	b	178a4 <__assert_fail@plt+0x67b4>
   178a4:	ldr	r0, [pc, #4004]	; 18850 <__assert_fail@plt+0x7760>
   178a8:	ldr	r1, [fp, #8]
   178ac:	cmp	r1, r0
   178b0:	blt	178c8 <__assert_fail@plt+0x67d8>
   178b4:	b	178d4 <__assert_fail@plt+0x67e4>
   178b8:	ldr	r0, [fp, #8]
   178bc:	movw	r1, #0
   178c0:	cmp	r1, r0
   178c4:	bge	178d4 <__assert_fail@plt+0x67e4>
   178c8:	movw	r0, #0
   178cc:	str	r0, [sp, #80]	; 0x50
   178d0:	b	178ec <__assert_fail@plt+0x67fc>
   178d4:	ldr	r0, [fp, #8]
   178d8:	movw	r1, #0
   178dc:	sub	r0, r1, r0
   178e0:	movw	r1, #32767	; 0x7fff
   178e4:	sdiv	r0, r1, r0
   178e8:	str	r0, [sp, #80]	; 0x50
   178ec:	ldr	r0, [sp, #80]	; 0x50
   178f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178f4:	mvn	r2, #0
   178f8:	sub	r1, r2, r1
   178fc:	cmp	r0, r1
   17900:	ble	17a24 <__assert_fail@plt+0x6934>
   17904:	b	17a3c <__assert_fail@plt+0x694c>
   17908:	b	1790c <__assert_fail@plt+0x681c>
   1790c:	b	17968 <__assert_fail@plt+0x6878>
   17910:	b	17968 <__assert_fail@plt+0x6878>
   17914:	ldr	r0, [fp, #8]
   17918:	cmn	r0, #1
   1791c:	bne	17968 <__assert_fail@plt+0x6878>
   17920:	b	17924 <__assert_fail@plt+0x6834>
   17924:	ldr	r0, [pc, #3884]	; 18858 <__assert_fail@plt+0x7768>
   17928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1792c:	add	r0, r1, r0
   17930:	movw	r1, #0
   17934:	cmp	r1, r0
   17938:	blt	17a24 <__assert_fail@plt+0x6934>
   1793c:	b	17a3c <__assert_fail@plt+0x694c>
   17940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17944:	movw	r1, #0
   17948:	cmp	r1, r0
   1794c:	bge	17a3c <__assert_fail@plt+0x694c>
   17950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17954:	sub	r0, r0, #1
   17958:	movw	r1, #32767	; 0x7fff
   1795c:	cmp	r1, r0
   17960:	blt	17a24 <__assert_fail@plt+0x6934>
   17964:	b	17a3c <__assert_fail@plt+0x694c>
   17968:	ldr	r0, [pc, #3816]	; 18858 <__assert_fail@plt+0x7768>
   1796c:	ldr	r1, [fp, #8]
   17970:	sdiv	r0, r0, r1
   17974:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17978:	cmp	r0, r1
   1797c:	blt	17a24 <__assert_fail@plt+0x6934>
   17980:	b	17a3c <__assert_fail@plt+0x694c>
   17984:	ldr	r0, [fp, #8]
   17988:	cmp	r0, #0
   1798c:	bne	17994 <__assert_fail@plt+0x68a4>
   17990:	b	17a3c <__assert_fail@plt+0x694c>
   17994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17998:	cmp	r0, #0
   1799c:	bge	17a0c <__assert_fail@plt+0x691c>
   179a0:	b	179a4 <__assert_fail@plt+0x68b4>
   179a4:	b	179f0 <__assert_fail@plt+0x6900>
   179a8:	b	179f0 <__assert_fail@plt+0x6900>
   179ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b0:	cmn	r0, #1
   179b4:	bne	179f0 <__assert_fail@plt+0x6900>
   179b8:	b	179bc <__assert_fail@plt+0x68cc>
   179bc:	ldr	r0, [pc, #3732]	; 18858 <__assert_fail@plt+0x7768>
   179c0:	ldr	r1, [fp, #8]
   179c4:	add	r0, r1, r0
   179c8:	movw	r1, #0
   179cc:	cmp	r1, r0
   179d0:	blt	17a24 <__assert_fail@plt+0x6934>
   179d4:	b	17a3c <__assert_fail@plt+0x694c>
   179d8:	ldr	r0, [fp, #8]
   179dc:	sub	r0, r0, #1
   179e0:	movw	r1, #32767	; 0x7fff
   179e4:	cmp	r1, r0
   179e8:	blt	17a24 <__assert_fail@plt+0x6934>
   179ec:	b	17a3c <__assert_fail@plt+0x694c>
   179f0:	ldr	r0, [pc, #3680]	; 18858 <__assert_fail@plt+0x7768>
   179f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179f8:	sdiv	r0, r0, r1
   179fc:	ldr	r1, [fp, #8]
   17a00:	cmp	r0, r1
   17a04:	blt	17a24 <__assert_fail@plt+0x6934>
   17a08:	b	17a3c <__assert_fail@plt+0x694c>
   17a0c:	ldr	r0, [fp, #8]
   17a10:	movw	r1, #32767	; 0x7fff
   17a14:	sdiv	r0, r1, r0
   17a18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a1c:	cmp	r0, r1
   17a20:	bge	17a3c <__assert_fail@plt+0x694c>
   17a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a28:	ldr	r1, [fp, #8]
   17a2c:	mul	r0, r0, r1
   17a30:	sxth	r0, r0
   17a34:	str	r0, [fp, #-28]	; 0xffffffe4
   17a38:	b	18820 <__assert_fail@plt+0x7730>
   17a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a40:	ldr	r1, [fp, #8]
   17a44:	mul	r0, r0, r1
   17a48:	sxth	r0, r0
   17a4c:	str	r0, [fp, #-28]	; 0xffffffe4
   17a50:	b	18824 <__assert_fail@plt+0x7734>
   17a54:	ldr	r0, [fp, #8]
   17a58:	cmp	r0, #0
   17a5c:	bge	17b6c <__assert_fail@plt+0x6a7c>
   17a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a64:	cmp	r0, #0
   17a68:	bge	17af4 <__assert_fail@plt+0x6a04>
   17a6c:	b	17a70 <__assert_fail@plt+0x6980>
   17a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a74:	ldr	r1, [fp, #8]
   17a78:	movw	r2, #65535	; 0xffff
   17a7c:	sdiv	r1, r2, r1
   17a80:	cmp	r0, r1
   17a84:	blt	17c08 <__assert_fail@plt+0x6b18>
   17a88:	b	17c20 <__assert_fail@plt+0x6b30>
   17a8c:	b	17a90 <__assert_fail@plt+0x69a0>
   17a90:	ldr	r0, [pc, #3512]	; 18850 <__assert_fail@plt+0x7760>
   17a94:	ldr	r1, [fp, #8]
   17a98:	cmp	r1, r0
   17a9c:	blt	17ab4 <__assert_fail@plt+0x69c4>
   17aa0:	b	17ac0 <__assert_fail@plt+0x69d0>
   17aa4:	ldr	r0, [fp, #8]
   17aa8:	movw	r1, #0
   17aac:	cmp	r1, r0
   17ab0:	bge	17ac0 <__assert_fail@plt+0x69d0>
   17ab4:	movw	r0, #0
   17ab8:	str	r0, [sp, #76]	; 0x4c
   17abc:	b	17ad8 <__assert_fail@plt+0x69e8>
   17ac0:	ldr	r0, [fp, #8]
   17ac4:	movw	r1, #0
   17ac8:	sub	r0, r1, r0
   17acc:	movw	r1, #65535	; 0xffff
   17ad0:	sdiv	r0, r1, r0
   17ad4:	str	r0, [sp, #76]	; 0x4c
   17ad8:	ldr	r0, [sp, #76]	; 0x4c
   17adc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ae0:	mvn	r2, #0
   17ae4:	sub	r1, r2, r1
   17ae8:	cmp	r0, r1
   17aec:	ble	17c08 <__assert_fail@plt+0x6b18>
   17af0:	b	17c20 <__assert_fail@plt+0x6b30>
   17af4:	b	17af8 <__assert_fail@plt+0x6a08>
   17af8:	b	17b50 <__assert_fail@plt+0x6a60>
   17afc:	b	17b50 <__assert_fail@plt+0x6a60>
   17b00:	ldr	r0, [fp, #8]
   17b04:	cmn	r0, #1
   17b08:	bne	17b50 <__assert_fail@plt+0x6a60>
   17b0c:	b	17b10 <__assert_fail@plt+0x6a20>
   17b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b14:	add	r0, r0, #0
   17b18:	movw	r1, #0
   17b1c:	cmp	r1, r0
   17b20:	blt	17c08 <__assert_fail@plt+0x6b18>
   17b24:	b	17c20 <__assert_fail@plt+0x6b30>
   17b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b2c:	movw	r1, #0
   17b30:	cmp	r1, r0
   17b34:	bge	17c20 <__assert_fail@plt+0x6b30>
   17b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b3c:	sub	r0, r0, #1
   17b40:	mvn	r1, #0
   17b44:	cmp	r1, r0
   17b48:	blt	17c08 <__assert_fail@plt+0x6b18>
   17b4c:	b	17c20 <__assert_fail@plt+0x6b30>
   17b50:	ldr	r0, [fp, #8]
   17b54:	movw	r1, #0
   17b58:	sdiv	r0, r1, r0
   17b5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b60:	cmp	r0, r1
   17b64:	blt	17c08 <__assert_fail@plt+0x6b18>
   17b68:	b	17c20 <__assert_fail@plt+0x6b30>
   17b6c:	ldr	r0, [fp, #8]
   17b70:	cmp	r0, #0
   17b74:	bne	17b7c <__assert_fail@plt+0x6a8c>
   17b78:	b	17c20 <__assert_fail@plt+0x6b30>
   17b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b80:	cmp	r0, #0
   17b84:	bge	17bf0 <__assert_fail@plt+0x6b00>
   17b88:	b	17b8c <__assert_fail@plt+0x6a9c>
   17b8c:	b	17bd4 <__assert_fail@plt+0x6ae4>
   17b90:	b	17bd4 <__assert_fail@plt+0x6ae4>
   17b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b98:	cmn	r0, #1
   17b9c:	bne	17bd4 <__assert_fail@plt+0x6ae4>
   17ba0:	b	17ba4 <__assert_fail@plt+0x6ab4>
   17ba4:	ldr	r0, [fp, #8]
   17ba8:	add	r0, r0, #0
   17bac:	movw	r1, #0
   17bb0:	cmp	r1, r0
   17bb4:	blt	17c08 <__assert_fail@plt+0x6b18>
   17bb8:	b	17c20 <__assert_fail@plt+0x6b30>
   17bbc:	ldr	r0, [fp, #8]
   17bc0:	sub	r0, r0, #1
   17bc4:	mvn	r1, #0
   17bc8:	cmp	r1, r0
   17bcc:	blt	17c08 <__assert_fail@plt+0x6b18>
   17bd0:	b	17c20 <__assert_fail@plt+0x6b30>
   17bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd8:	movw	r1, #0
   17bdc:	sdiv	r0, r1, r0
   17be0:	ldr	r1, [fp, #8]
   17be4:	cmp	r0, r1
   17be8:	blt	17c08 <__assert_fail@plt+0x6b18>
   17bec:	b	17c20 <__assert_fail@plt+0x6b30>
   17bf0:	ldr	r0, [fp, #8]
   17bf4:	movw	r1, #65535	; 0xffff
   17bf8:	sdiv	r0, r1, r0
   17bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c00:	cmp	r0, r1
   17c04:	bge	17c20 <__assert_fail@plt+0x6b30>
   17c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c0c:	ldr	r1, [fp, #8]
   17c10:	mul	r0, r0, r1
   17c14:	uxth	r0, r0
   17c18:	str	r0, [fp, #-28]	; 0xffffffe4
   17c1c:	b	18820 <__assert_fail@plt+0x7730>
   17c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c24:	ldr	r1, [fp, #8]
   17c28:	mul	r0, r0, r1
   17c2c:	uxth	r0, r0
   17c30:	str	r0, [fp, #-28]	; 0xffffffe4
   17c34:	b	18824 <__assert_fail@plt+0x7734>
   17c38:	b	17c3c <__assert_fail@plt+0x6b4c>
   17c3c:	b	17c40 <__assert_fail@plt+0x6b50>
   17c40:	ldr	r0, [fp, #8]
   17c44:	cmp	r0, #0
   17c48:	bge	17d4c <__assert_fail@plt+0x6c5c>
   17c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c50:	cmp	r0, #0
   17c54:	bge	17ce0 <__assert_fail@plt+0x6bf0>
   17c58:	b	17c5c <__assert_fail@plt+0x6b6c>
   17c5c:	ldr	r0, [pc, #3048]	; 1884c <__assert_fail@plt+0x775c>
   17c60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c64:	ldr	r2, [fp, #8]
   17c68:	sdiv	r0, r0, r2
   17c6c:	cmp	r1, r0
   17c70:	blt	17ddc <__assert_fail@plt+0x6cec>
   17c74:	b	17df0 <__assert_fail@plt+0x6d00>
   17c78:	b	17c7c <__assert_fail@plt+0x6b8c>
   17c7c:	ldr	r0, [pc, #3020]	; 18850 <__assert_fail@plt+0x7760>
   17c80:	ldr	r1, [fp, #8]
   17c84:	cmp	r1, r0
   17c88:	blt	17ca0 <__assert_fail@plt+0x6bb0>
   17c8c:	b	17cac <__assert_fail@plt+0x6bbc>
   17c90:	ldr	r0, [fp, #8]
   17c94:	movw	r1, #0
   17c98:	cmp	r1, r0
   17c9c:	bge	17cac <__assert_fail@plt+0x6bbc>
   17ca0:	movw	r0, #0
   17ca4:	str	r0, [sp, #72]	; 0x48
   17ca8:	b	17cc4 <__assert_fail@plt+0x6bd4>
   17cac:	ldr	r0, [pc, #2968]	; 1884c <__assert_fail@plt+0x775c>
   17cb0:	ldr	r1, [fp, #8]
   17cb4:	movw	r2, #0
   17cb8:	sub	r1, r2, r1
   17cbc:	sdiv	r0, r0, r1
   17cc0:	str	r0, [sp, #72]	; 0x48
   17cc4:	ldr	r0, [sp, #72]	; 0x48
   17cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ccc:	mvn	r2, #0
   17cd0:	sub	r1, r2, r1
   17cd4:	cmp	r0, r1
   17cd8:	ble	17ddc <__assert_fail@plt+0x6cec>
   17cdc:	b	17df0 <__assert_fail@plt+0x6d00>
   17ce0:	ldr	r0, [fp, #8]
   17ce4:	cmn	r0, #1
   17ce8:	bne	17d30 <__assert_fail@plt+0x6c40>
   17cec:	b	17cf0 <__assert_fail@plt+0x6c00>
   17cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf4:	add	r0, r0, #-2147483648	; 0x80000000
   17cf8:	movw	r1, #0
   17cfc:	cmp	r1, r0
   17d00:	blt	17ddc <__assert_fail@plt+0x6cec>
   17d04:	b	17df0 <__assert_fail@plt+0x6d00>
   17d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d0c:	movw	r1, #0
   17d10:	cmp	r1, r0
   17d14:	bge	17df0 <__assert_fail@plt+0x6d00>
   17d18:	ldr	r0, [pc, #2860]	; 1884c <__assert_fail@plt+0x775c>
   17d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d20:	sub	r1, r1, #1
   17d24:	cmp	r0, r1
   17d28:	blt	17ddc <__assert_fail@plt+0x6cec>
   17d2c:	b	17df0 <__assert_fail@plt+0x6d00>
   17d30:	ldr	r0, [pc, #2844]	; 18854 <__assert_fail@plt+0x7764>
   17d34:	ldr	r1, [fp, #8]
   17d38:	sdiv	r0, r0, r1
   17d3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d40:	cmp	r0, r1
   17d44:	blt	17ddc <__assert_fail@plt+0x6cec>
   17d48:	b	17df0 <__assert_fail@plt+0x6d00>
   17d4c:	ldr	r0, [fp, #8]
   17d50:	cmp	r0, #0
   17d54:	bne	17d5c <__assert_fail@plt+0x6c6c>
   17d58:	b	17df0 <__assert_fail@plt+0x6d00>
   17d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d60:	cmp	r0, #0
   17d64:	bge	17dc4 <__assert_fail@plt+0x6cd4>
   17d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d6c:	cmn	r0, #1
   17d70:	bne	17da8 <__assert_fail@plt+0x6cb8>
   17d74:	b	17d78 <__assert_fail@plt+0x6c88>
   17d78:	ldr	r0, [fp, #8]
   17d7c:	add	r0, r0, #-2147483648	; 0x80000000
   17d80:	movw	r1, #0
   17d84:	cmp	r1, r0
   17d88:	blt	17ddc <__assert_fail@plt+0x6cec>
   17d8c:	b	17df0 <__assert_fail@plt+0x6d00>
   17d90:	ldr	r0, [pc, #2740]	; 1884c <__assert_fail@plt+0x775c>
   17d94:	ldr	r1, [fp, #8]
   17d98:	sub	r1, r1, #1
   17d9c:	cmp	r0, r1
   17da0:	blt	17ddc <__assert_fail@plt+0x6cec>
   17da4:	b	17df0 <__assert_fail@plt+0x6d00>
   17da8:	ldr	r0, [pc, #2724]	; 18854 <__assert_fail@plt+0x7764>
   17dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17db0:	sdiv	r0, r0, r1
   17db4:	ldr	r1, [fp, #8]
   17db8:	cmp	r0, r1
   17dbc:	blt	17ddc <__assert_fail@plt+0x6cec>
   17dc0:	b	17df0 <__assert_fail@plt+0x6d00>
   17dc4:	ldr	r0, [pc, #2688]	; 1884c <__assert_fail@plt+0x775c>
   17dc8:	ldr	r1, [fp, #8]
   17dcc:	sdiv	r0, r0, r1
   17dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dd4:	cmp	r0, r1
   17dd8:	bge	17df0 <__assert_fail@plt+0x6d00>
   17ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17de0:	ldr	r1, [fp, #8]
   17de4:	mul	r0, r0, r1
   17de8:	str	r0, [fp, #-28]	; 0xffffffe4
   17dec:	b	18820 <__assert_fail@plt+0x7730>
   17df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df4:	ldr	r1, [fp, #8]
   17df8:	mul	r0, r0, r1
   17dfc:	str	r0, [fp, #-28]	; 0xffffffe4
   17e00:	b	18824 <__assert_fail@plt+0x7734>
   17e04:	ldr	r0, [fp, #8]
   17e08:	cmp	r0, #0
   17e0c:	bge	17f1c <__assert_fail@plt+0x6e2c>
   17e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e14:	cmp	r0, #0
   17e18:	bge	17ea4 <__assert_fail@plt+0x6db4>
   17e1c:	b	17e3c <__assert_fail@plt+0x6d4c>
   17e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e24:	ldr	r1, [fp, #8]
   17e28:	mvn	r2, #0
   17e2c:	udiv	r1, r2, r1
   17e30:	cmp	r0, r1
   17e34:	bcc	17fb8 <__assert_fail@plt+0x6ec8>
   17e38:	b	17fcc <__assert_fail@plt+0x6edc>
   17e3c:	b	17e40 <__assert_fail@plt+0x6d50>
   17e40:	ldr	r0, [pc, #2568]	; 18850 <__assert_fail@plt+0x7760>
   17e44:	ldr	r1, [fp, #8]
   17e48:	cmp	r1, r0
   17e4c:	blt	17e64 <__assert_fail@plt+0x6d74>
   17e50:	b	17e70 <__assert_fail@plt+0x6d80>
   17e54:	ldr	r0, [fp, #8]
   17e58:	movw	r1, #0
   17e5c:	cmp	r1, r0
   17e60:	bge	17e70 <__assert_fail@plt+0x6d80>
   17e64:	movw	r0, #1
   17e68:	str	r0, [sp, #68]	; 0x44
   17e6c:	b	17e88 <__assert_fail@plt+0x6d98>
   17e70:	ldr	r0, [fp, #8]
   17e74:	movw	r1, #0
   17e78:	sub	r0, r1, r0
   17e7c:	mvn	r1, #0
   17e80:	udiv	r0, r1, r0
   17e84:	str	r0, [sp, #68]	; 0x44
   17e88:	ldr	r0, [sp, #68]	; 0x44
   17e8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e90:	mvn	r2, #0
   17e94:	sub	r1, r2, r1
   17e98:	cmp	r0, r1
   17e9c:	bls	17fb8 <__assert_fail@plt+0x6ec8>
   17ea0:	b	17fcc <__assert_fail@plt+0x6edc>
   17ea4:	b	17ea8 <__assert_fail@plt+0x6db8>
   17ea8:	b	17f00 <__assert_fail@plt+0x6e10>
   17eac:	b	17f00 <__assert_fail@plt+0x6e10>
   17eb0:	ldr	r0, [fp, #8]
   17eb4:	cmn	r0, #1
   17eb8:	bne	17f00 <__assert_fail@plt+0x6e10>
   17ebc:	b	17ec0 <__assert_fail@plt+0x6dd0>
   17ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ec4:	add	r0, r0, #0
   17ec8:	movw	r1, #0
   17ecc:	cmp	r1, r0
   17ed0:	blt	17fb8 <__assert_fail@plt+0x6ec8>
   17ed4:	b	17fcc <__assert_fail@plt+0x6edc>
   17ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17edc:	movw	r1, #0
   17ee0:	cmp	r1, r0
   17ee4:	bge	17fcc <__assert_fail@plt+0x6edc>
   17ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17eec:	sub	r0, r0, #1
   17ef0:	mvn	r1, #0
   17ef4:	cmp	r1, r0
   17ef8:	blt	17fb8 <__assert_fail@plt+0x6ec8>
   17efc:	b	17fcc <__assert_fail@plt+0x6edc>
   17f00:	ldr	r0, [fp, #8]
   17f04:	movw	r1, #0
   17f08:	sdiv	r0, r1, r0
   17f0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f10:	cmp	r0, r1
   17f14:	blt	17fb8 <__assert_fail@plt+0x6ec8>
   17f18:	b	17fcc <__assert_fail@plt+0x6edc>
   17f1c:	ldr	r0, [fp, #8]
   17f20:	cmp	r0, #0
   17f24:	bne	17f2c <__assert_fail@plt+0x6e3c>
   17f28:	b	17fcc <__assert_fail@plt+0x6edc>
   17f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f30:	cmp	r0, #0
   17f34:	bge	17fa0 <__assert_fail@plt+0x6eb0>
   17f38:	b	17f3c <__assert_fail@plt+0x6e4c>
   17f3c:	b	17f84 <__assert_fail@plt+0x6e94>
   17f40:	b	17f84 <__assert_fail@plt+0x6e94>
   17f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f48:	cmn	r0, #1
   17f4c:	bne	17f84 <__assert_fail@plt+0x6e94>
   17f50:	b	17f54 <__assert_fail@plt+0x6e64>
   17f54:	ldr	r0, [fp, #8]
   17f58:	add	r0, r0, #0
   17f5c:	movw	r1, #0
   17f60:	cmp	r1, r0
   17f64:	blt	17fb8 <__assert_fail@plt+0x6ec8>
   17f68:	b	17fcc <__assert_fail@plt+0x6edc>
   17f6c:	ldr	r0, [fp, #8]
   17f70:	sub	r0, r0, #1
   17f74:	mvn	r1, #0
   17f78:	cmp	r1, r0
   17f7c:	blt	17fb8 <__assert_fail@plt+0x6ec8>
   17f80:	b	17fcc <__assert_fail@plt+0x6edc>
   17f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f88:	movw	r1, #0
   17f8c:	sdiv	r0, r1, r0
   17f90:	ldr	r1, [fp, #8]
   17f94:	cmp	r0, r1
   17f98:	blt	17fb8 <__assert_fail@plt+0x6ec8>
   17f9c:	b	17fcc <__assert_fail@plt+0x6edc>
   17fa0:	ldr	r0, [fp, #8]
   17fa4:	mvn	r1, #0
   17fa8:	udiv	r0, r1, r0
   17fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fb0:	cmp	r0, r1
   17fb4:	bcs	17fcc <__assert_fail@plt+0x6edc>
   17fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fbc:	ldr	r1, [fp, #8]
   17fc0:	mul	r0, r0, r1
   17fc4:	str	r0, [fp, #-28]	; 0xffffffe4
   17fc8:	b	18820 <__assert_fail@plt+0x7730>
   17fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fd0:	ldr	r1, [fp, #8]
   17fd4:	mul	r0, r0, r1
   17fd8:	str	r0, [fp, #-28]	; 0xffffffe4
   17fdc:	b	18824 <__assert_fail@plt+0x7734>
   17fe0:	b	17fe4 <__assert_fail@plt+0x6ef4>
   17fe4:	b	17fe8 <__assert_fail@plt+0x6ef8>
   17fe8:	ldr	r0, [fp, #8]
   17fec:	cmp	r0, #0
   17ff0:	bge	180f4 <__assert_fail@plt+0x7004>
   17ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff8:	cmp	r0, #0
   17ffc:	bge	18088 <__assert_fail@plt+0x6f98>
   18000:	b	18004 <__assert_fail@plt+0x6f14>
   18004:	ldr	r0, [pc, #2112]	; 1884c <__assert_fail@plt+0x775c>
   18008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1800c:	ldr	r2, [fp, #8]
   18010:	sdiv	r0, r0, r2
   18014:	cmp	r1, r0
   18018:	blt	18184 <__assert_fail@plt+0x7094>
   1801c:	b	18198 <__assert_fail@plt+0x70a8>
   18020:	b	18024 <__assert_fail@plt+0x6f34>
   18024:	ldr	r0, [pc, #2084]	; 18850 <__assert_fail@plt+0x7760>
   18028:	ldr	r1, [fp, #8]
   1802c:	cmp	r1, r0
   18030:	blt	18048 <__assert_fail@plt+0x6f58>
   18034:	b	18054 <__assert_fail@plt+0x6f64>
   18038:	ldr	r0, [fp, #8]
   1803c:	movw	r1, #0
   18040:	cmp	r1, r0
   18044:	bge	18054 <__assert_fail@plt+0x6f64>
   18048:	movw	r0, #0
   1804c:	str	r0, [sp, #64]	; 0x40
   18050:	b	1806c <__assert_fail@plt+0x6f7c>
   18054:	ldr	r0, [pc, #2032]	; 1884c <__assert_fail@plt+0x775c>
   18058:	ldr	r1, [fp, #8]
   1805c:	movw	r2, #0
   18060:	sub	r1, r2, r1
   18064:	sdiv	r0, r0, r1
   18068:	str	r0, [sp, #64]	; 0x40
   1806c:	ldr	r0, [sp, #64]	; 0x40
   18070:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18074:	mvn	r2, #0
   18078:	sub	r1, r2, r1
   1807c:	cmp	r0, r1
   18080:	ble	18184 <__assert_fail@plt+0x7094>
   18084:	b	18198 <__assert_fail@plt+0x70a8>
   18088:	ldr	r0, [fp, #8]
   1808c:	cmn	r0, #1
   18090:	bne	180d8 <__assert_fail@plt+0x6fe8>
   18094:	b	18098 <__assert_fail@plt+0x6fa8>
   18098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1809c:	add	r0, r0, #-2147483648	; 0x80000000
   180a0:	movw	r1, #0
   180a4:	cmp	r1, r0
   180a8:	blt	18184 <__assert_fail@plt+0x7094>
   180ac:	b	18198 <__assert_fail@plt+0x70a8>
   180b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180b4:	movw	r1, #0
   180b8:	cmp	r1, r0
   180bc:	bge	18198 <__assert_fail@plt+0x70a8>
   180c0:	ldr	r0, [pc, #1924]	; 1884c <__assert_fail@plt+0x775c>
   180c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180c8:	sub	r1, r1, #1
   180cc:	cmp	r0, r1
   180d0:	blt	18184 <__assert_fail@plt+0x7094>
   180d4:	b	18198 <__assert_fail@plt+0x70a8>
   180d8:	ldr	r0, [pc, #1908]	; 18854 <__assert_fail@plt+0x7764>
   180dc:	ldr	r1, [fp, #8]
   180e0:	sdiv	r0, r0, r1
   180e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180e8:	cmp	r0, r1
   180ec:	blt	18184 <__assert_fail@plt+0x7094>
   180f0:	b	18198 <__assert_fail@plt+0x70a8>
   180f4:	ldr	r0, [fp, #8]
   180f8:	cmp	r0, #0
   180fc:	bne	18104 <__assert_fail@plt+0x7014>
   18100:	b	18198 <__assert_fail@plt+0x70a8>
   18104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18108:	cmp	r0, #0
   1810c:	bge	1816c <__assert_fail@plt+0x707c>
   18110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18114:	cmn	r0, #1
   18118:	bne	18150 <__assert_fail@plt+0x7060>
   1811c:	b	18120 <__assert_fail@plt+0x7030>
   18120:	ldr	r0, [fp, #8]
   18124:	add	r0, r0, #-2147483648	; 0x80000000
   18128:	movw	r1, #0
   1812c:	cmp	r1, r0
   18130:	blt	18184 <__assert_fail@plt+0x7094>
   18134:	b	18198 <__assert_fail@plt+0x70a8>
   18138:	ldr	r0, [pc, #1804]	; 1884c <__assert_fail@plt+0x775c>
   1813c:	ldr	r1, [fp, #8]
   18140:	sub	r1, r1, #1
   18144:	cmp	r0, r1
   18148:	blt	18184 <__assert_fail@plt+0x7094>
   1814c:	b	18198 <__assert_fail@plt+0x70a8>
   18150:	ldr	r0, [pc, #1788]	; 18854 <__assert_fail@plt+0x7764>
   18154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18158:	sdiv	r0, r0, r1
   1815c:	ldr	r1, [fp, #8]
   18160:	cmp	r0, r1
   18164:	blt	18184 <__assert_fail@plt+0x7094>
   18168:	b	18198 <__assert_fail@plt+0x70a8>
   1816c:	ldr	r0, [pc, #1752]	; 1884c <__assert_fail@plt+0x775c>
   18170:	ldr	r1, [fp, #8]
   18174:	sdiv	r0, r0, r1
   18178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1817c:	cmp	r0, r1
   18180:	bge	18198 <__assert_fail@plt+0x70a8>
   18184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18188:	ldr	r1, [fp, #8]
   1818c:	mul	r0, r0, r1
   18190:	str	r0, [fp, #-28]	; 0xffffffe4
   18194:	b	18820 <__assert_fail@plt+0x7730>
   18198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1819c:	ldr	r1, [fp, #8]
   181a0:	mul	r0, r0, r1
   181a4:	str	r0, [fp, #-28]	; 0xffffffe4
   181a8:	b	18824 <__assert_fail@plt+0x7734>
   181ac:	ldr	r0, [fp, #8]
   181b0:	cmp	r0, #0
   181b4:	bge	182c4 <__assert_fail@plt+0x71d4>
   181b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181bc:	cmp	r0, #0
   181c0:	bge	1824c <__assert_fail@plt+0x715c>
   181c4:	b	181e4 <__assert_fail@plt+0x70f4>
   181c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181cc:	ldr	r1, [fp, #8]
   181d0:	mvn	r2, #0
   181d4:	udiv	r1, r2, r1
   181d8:	cmp	r0, r1
   181dc:	bcc	18360 <__assert_fail@plt+0x7270>
   181e0:	b	18374 <__assert_fail@plt+0x7284>
   181e4:	b	181e8 <__assert_fail@plt+0x70f8>
   181e8:	ldr	r0, [pc, #1632]	; 18850 <__assert_fail@plt+0x7760>
   181ec:	ldr	r1, [fp, #8]
   181f0:	cmp	r1, r0
   181f4:	blt	1820c <__assert_fail@plt+0x711c>
   181f8:	b	18218 <__assert_fail@plt+0x7128>
   181fc:	ldr	r0, [fp, #8]
   18200:	movw	r1, #0
   18204:	cmp	r1, r0
   18208:	bge	18218 <__assert_fail@plt+0x7128>
   1820c:	movw	r0, #1
   18210:	str	r0, [sp, #60]	; 0x3c
   18214:	b	18230 <__assert_fail@plt+0x7140>
   18218:	ldr	r0, [fp, #8]
   1821c:	movw	r1, #0
   18220:	sub	r0, r1, r0
   18224:	mvn	r1, #0
   18228:	udiv	r0, r1, r0
   1822c:	str	r0, [sp, #60]	; 0x3c
   18230:	ldr	r0, [sp, #60]	; 0x3c
   18234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18238:	mvn	r2, #0
   1823c:	sub	r1, r2, r1
   18240:	cmp	r0, r1
   18244:	bls	18360 <__assert_fail@plt+0x7270>
   18248:	b	18374 <__assert_fail@plt+0x7284>
   1824c:	b	18250 <__assert_fail@plt+0x7160>
   18250:	b	182a8 <__assert_fail@plt+0x71b8>
   18254:	b	182a8 <__assert_fail@plt+0x71b8>
   18258:	ldr	r0, [fp, #8]
   1825c:	cmn	r0, #1
   18260:	bne	182a8 <__assert_fail@plt+0x71b8>
   18264:	b	18268 <__assert_fail@plt+0x7178>
   18268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1826c:	add	r0, r0, #0
   18270:	movw	r1, #0
   18274:	cmp	r1, r0
   18278:	blt	18360 <__assert_fail@plt+0x7270>
   1827c:	b	18374 <__assert_fail@plt+0x7284>
   18280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18284:	movw	r1, #0
   18288:	cmp	r1, r0
   1828c:	bge	18374 <__assert_fail@plt+0x7284>
   18290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18294:	sub	r0, r0, #1
   18298:	mvn	r1, #0
   1829c:	cmp	r1, r0
   182a0:	blt	18360 <__assert_fail@plt+0x7270>
   182a4:	b	18374 <__assert_fail@plt+0x7284>
   182a8:	ldr	r0, [fp, #8]
   182ac:	movw	r1, #0
   182b0:	sdiv	r0, r1, r0
   182b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182b8:	cmp	r0, r1
   182bc:	blt	18360 <__assert_fail@plt+0x7270>
   182c0:	b	18374 <__assert_fail@plt+0x7284>
   182c4:	ldr	r0, [fp, #8]
   182c8:	cmp	r0, #0
   182cc:	bne	182d4 <__assert_fail@plt+0x71e4>
   182d0:	b	18374 <__assert_fail@plt+0x7284>
   182d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d8:	cmp	r0, #0
   182dc:	bge	18348 <__assert_fail@plt+0x7258>
   182e0:	b	182e4 <__assert_fail@plt+0x71f4>
   182e4:	b	1832c <__assert_fail@plt+0x723c>
   182e8:	b	1832c <__assert_fail@plt+0x723c>
   182ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182f0:	cmn	r0, #1
   182f4:	bne	1832c <__assert_fail@plt+0x723c>
   182f8:	b	182fc <__assert_fail@plt+0x720c>
   182fc:	ldr	r0, [fp, #8]
   18300:	add	r0, r0, #0
   18304:	movw	r1, #0
   18308:	cmp	r1, r0
   1830c:	blt	18360 <__assert_fail@plt+0x7270>
   18310:	b	18374 <__assert_fail@plt+0x7284>
   18314:	ldr	r0, [fp, #8]
   18318:	sub	r0, r0, #1
   1831c:	mvn	r1, #0
   18320:	cmp	r1, r0
   18324:	blt	18360 <__assert_fail@plt+0x7270>
   18328:	b	18374 <__assert_fail@plt+0x7284>
   1832c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18330:	movw	r1, #0
   18334:	sdiv	r0, r1, r0
   18338:	ldr	r1, [fp, #8]
   1833c:	cmp	r0, r1
   18340:	blt	18360 <__assert_fail@plt+0x7270>
   18344:	b	18374 <__assert_fail@plt+0x7284>
   18348:	ldr	r0, [fp, #8]
   1834c:	mvn	r1, #0
   18350:	udiv	r0, r1, r0
   18354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18358:	cmp	r0, r1
   1835c:	bcs	18374 <__assert_fail@plt+0x7284>
   18360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18364:	ldr	r1, [fp, #8]
   18368:	mul	r0, r0, r1
   1836c:	str	r0, [fp, #-28]	; 0xffffffe4
   18370:	b	18820 <__assert_fail@plt+0x7730>
   18374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18378:	ldr	r1, [fp, #8]
   1837c:	mul	r0, r0, r1
   18380:	str	r0, [fp, #-28]	; 0xffffffe4
   18384:	b	18824 <__assert_fail@plt+0x7734>
   18388:	b	1838c <__assert_fail@plt+0x729c>
   1838c:	ldr	r0, [fp, #8]
   18390:	cmp	r0, #0
   18394:	bge	184fc <__assert_fail@plt+0x740c>
   18398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1839c:	cmp	r0, #0
   183a0:	bge	18478 <__assert_fail@plt+0x7388>
   183a4:	b	183a8 <__assert_fail@plt+0x72b8>
   183a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183ac:	ldr	r1, [fp, #8]
   183b0:	asr	r3, r1, #31
   183b4:	mvn	r2, #0
   183b8:	mvn	ip, #-2147483648	; 0x80000000
   183bc:	str	r0, [sp, #56]	; 0x38
   183c0:	mov	r0, r2
   183c4:	str	r1, [sp, #52]	; 0x34
   183c8:	mov	r1, ip
   183cc:	ldr	r2, [sp, #52]	; 0x34
   183d0:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   183d4:	ldr	r2, [sp, #56]	; 0x38
   183d8:	subs	r0, r2, r0
   183dc:	rscs	r1, r1, r2, asr #31
   183e0:	blt	185c4 <__assert_fail@plt+0x74d4>
   183e4:	b	185d8 <__assert_fail@plt+0x74e8>
   183e8:	b	183ec <__assert_fail@plt+0x72fc>
   183ec:	ldr	r0, [pc, #1116]	; 18850 <__assert_fail@plt+0x7760>
   183f0:	ldr	r1, [fp, #8]
   183f4:	cmp	r1, r0
   183f8:	blt	18410 <__assert_fail@plt+0x7320>
   183fc:	b	18424 <__assert_fail@plt+0x7334>
   18400:	ldr	r0, [fp, #8]
   18404:	movw	r1, #0
   18408:	cmp	r1, r0
   1840c:	bge	18424 <__assert_fail@plt+0x7334>
   18410:	mov	r0, #0
   18414:	mvn	r1, #0
   18418:	str	r1, [sp, #48]	; 0x30
   1841c:	str	r0, [sp, #44]	; 0x2c
   18420:	b	18458 <__assert_fail@plt+0x7368>
   18424:	ldr	r0, [fp, #8]
   18428:	rsb	r0, r0, #0
   1842c:	asr	r3, r0, #31
   18430:	mvn	r1, #0
   18434:	mvn	r2, #-2147483648	; 0x80000000
   18438:	str	r0, [sp, #40]	; 0x28
   1843c:	mov	r0, r1
   18440:	mov	r1, r2
   18444:	ldr	r2, [sp, #40]	; 0x28
   18448:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   1844c:	str	r0, [sp, #48]	; 0x30
   18450:	str	r1, [sp, #44]	; 0x2c
   18454:	b	18458 <__assert_fail@plt+0x7368>
   18458:	ldr	r0, [sp, #44]	; 0x2c
   1845c:	ldr	r1, [sp, #48]	; 0x30
   18460:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18464:	mvn	r2, r2
   18468:	subs	r1, r2, r1
   1846c:	rscs	r0, r0, r2, asr #31
   18470:	bge	185c4 <__assert_fail@plt+0x74d4>
   18474:	b	185d8 <__assert_fail@plt+0x74e8>
   18478:	ldr	r0, [fp, #8]
   1847c:	cmn	r0, #1
   18480:	bne	184c4 <__assert_fail@plt+0x73d4>
   18484:	b	18488 <__assert_fail@plt+0x7398>
   18488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1848c:	mov	r1, #-2147483648	; 0x80000000
   18490:	add	r1, r1, r0, asr #31
   18494:	rsbs	r0, r0, #0
   18498:	rscs	r1, r1, #0
   1849c:	blt	185c4 <__assert_fail@plt+0x74d4>
   184a0:	b	185d8 <__assert_fail@plt+0x74e8>
   184a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184a8:	movw	r1, #0
   184ac:	cmp	r1, r0
   184b0:	bge	185d8 <__assert_fail@plt+0x74e8>
   184b4:	mov	r0, #0
   184b8:	cmp	r0, #0
   184bc:	bne	185c4 <__assert_fail@plt+0x74d4>
   184c0:	b	185d8 <__assert_fail@plt+0x74e8>
   184c4:	ldr	r0, [fp, #8]
   184c8:	asr	r3, r0, #31
   184cc:	mov	r1, #0
   184d0:	mov	r2, #-2147483648	; 0x80000000
   184d4:	str	r0, [sp, #36]	; 0x24
   184d8:	mov	r0, r1
   184dc:	mov	r1, r2
   184e0:	ldr	r2, [sp, #36]	; 0x24
   184e4:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   184e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184ec:	subs	r0, r0, r2
   184f0:	sbcs	r1, r1, r2, asr #31
   184f4:	blt	185c4 <__assert_fail@plt+0x74d4>
   184f8:	b	185d8 <__assert_fail@plt+0x74e8>
   184fc:	ldr	r0, [fp, #8]
   18500:	cmp	r0, #0
   18504:	bne	1850c <__assert_fail@plt+0x741c>
   18508:	b	185d8 <__assert_fail@plt+0x74e8>
   1850c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18510:	cmp	r0, #0
   18514:	bge	1858c <__assert_fail@plt+0x749c>
   18518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1851c:	cmn	r0, #1
   18520:	bne	18554 <__assert_fail@plt+0x7464>
   18524:	b	18528 <__assert_fail@plt+0x7438>
   18528:	ldr	r0, [fp, #8]
   1852c:	mov	r1, #-2147483648	; 0x80000000
   18530:	add	r1, r1, r0, asr #31
   18534:	rsbs	r0, r0, #0
   18538:	rscs	r1, r1, #0
   1853c:	blt	185c4 <__assert_fail@plt+0x74d4>
   18540:	b	185d8 <__assert_fail@plt+0x74e8>
   18544:	mov	r0, #0
   18548:	cmp	r0, #0
   1854c:	bne	185c4 <__assert_fail@plt+0x74d4>
   18550:	b	185d8 <__assert_fail@plt+0x74e8>
   18554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18558:	asr	r3, r0, #31
   1855c:	mov	r1, #0
   18560:	mov	r2, #-2147483648	; 0x80000000
   18564:	str	r0, [sp, #32]
   18568:	mov	r0, r1
   1856c:	mov	r1, r2
   18570:	ldr	r2, [sp, #32]
   18574:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   18578:	ldr	r2, [fp, #8]
   1857c:	subs	r0, r0, r2
   18580:	sbcs	r1, r1, r2, asr #31
   18584:	blt	185c4 <__assert_fail@plt+0x74d4>
   18588:	b	185d8 <__assert_fail@plt+0x74e8>
   1858c:	ldr	r0, [fp, #8]
   18590:	asr	r3, r0, #31
   18594:	mvn	r1, #0
   18598:	mvn	r2, #-2147483648	; 0x80000000
   1859c:	str	r0, [sp, #28]
   185a0:	mov	r0, r1
   185a4:	mov	r1, r2
   185a8:	ldr	r2, [sp, #28]
   185ac:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   185b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185b4:	subs	r0, r0, r2
   185b8:	sbcs	r1, r1, r2, asr #31
   185bc:	bge	185d8 <__assert_fail@plt+0x74e8>
   185c0:	b	185c4 <__assert_fail@plt+0x74d4>
   185c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185c8:	ldr	r1, [fp, #8]
   185cc:	mul	r0, r0, r1
   185d0:	str	r0, [fp, #-28]	; 0xffffffe4
   185d4:	b	18820 <__assert_fail@plt+0x7730>
   185d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185dc:	ldr	r1, [fp, #8]
   185e0:	mul	r0, r0, r1
   185e4:	str	r0, [fp, #-28]	; 0xffffffe4
   185e8:	b	18824 <__assert_fail@plt+0x7734>
   185ec:	ldr	r0, [fp, #8]
   185f0:	cmp	r0, #0
   185f4:	bge	18744 <__assert_fail@plt+0x7654>
   185f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185fc:	cmp	r0, #0
   18600:	bge	186cc <__assert_fail@plt+0x75dc>
   18604:	b	18644 <__assert_fail@plt+0x7554>
   18608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1860c:	ldr	r1, [fp, #8]
   18610:	asr	r3, r1, #31
   18614:	mvn	r2, #0
   18618:	str	r0, [sp, #24]
   1861c:	mov	r0, r2
   18620:	str	r1, [sp, #20]
   18624:	mov	r1, r2
   18628:	ldr	r2, [sp, #20]
   1862c:	bl	1ce40 <__assert_fail@plt+0xbd50>
   18630:	ldr	r2, [sp, #24]
   18634:	subs	r0, r2, r0
   18638:	rscs	r1, r1, r2, asr #31
   1863c:	bcc	187f8 <__assert_fail@plt+0x7708>
   18640:	b	1880c <__assert_fail@plt+0x771c>
   18644:	b	18648 <__assert_fail@plt+0x7558>
   18648:	ldr	r0, [pc, #512]	; 18850 <__assert_fail@plt+0x7760>
   1864c:	ldr	r1, [fp, #8]
   18650:	cmp	r1, r0
   18654:	blt	1866c <__assert_fail@plt+0x757c>
   18658:	b	18680 <__assert_fail@plt+0x7590>
   1865c:	ldr	r0, [fp, #8]
   18660:	movw	r1, #0
   18664:	cmp	r1, r0
   18668:	bge	18680 <__assert_fail@plt+0x7590>
   1866c:	mov	r0, #1
   18670:	mvn	r1, #0
   18674:	str	r1, [sp, #16]
   18678:	str	r0, [sp, #12]
   1867c:	b	186ac <__assert_fail@plt+0x75bc>
   18680:	ldr	r0, [fp, #8]
   18684:	rsb	r0, r0, #0
   18688:	asr	r3, r0, #31
   1868c:	mvn	r1, #0
   18690:	str	r0, [sp, #8]
   18694:	mov	r0, r1
   18698:	ldr	r2, [sp, #8]
   1869c:	bl	1ce40 <__assert_fail@plt+0xbd50>
   186a0:	str	r0, [sp, #16]
   186a4:	str	r1, [sp, #12]
   186a8:	b	186ac <__assert_fail@plt+0x75bc>
   186ac:	ldr	r0, [sp, #12]
   186b0:	ldr	r1, [sp, #16]
   186b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186b8:	mvn	r2, r2
   186bc:	subs	r1, r2, r1
   186c0:	rscs	r0, r0, r2, asr #31
   186c4:	bcs	187f8 <__assert_fail@plt+0x7708>
   186c8:	b	1880c <__assert_fail@plt+0x771c>
   186cc:	b	186d0 <__assert_fail@plt+0x75e0>
   186d0:	b	18728 <__assert_fail@plt+0x7638>
   186d4:	b	18728 <__assert_fail@plt+0x7638>
   186d8:	ldr	r0, [fp, #8]
   186dc:	cmn	r0, #1
   186e0:	bne	18728 <__assert_fail@plt+0x7638>
   186e4:	b	186e8 <__assert_fail@plt+0x75f8>
   186e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186ec:	add	r0, r0, #0
   186f0:	movw	r1, #0
   186f4:	cmp	r1, r0
   186f8:	blt	187f8 <__assert_fail@plt+0x7708>
   186fc:	b	1880c <__assert_fail@plt+0x771c>
   18700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18704:	movw	r1, #0
   18708:	cmp	r1, r0
   1870c:	bge	1880c <__assert_fail@plt+0x771c>
   18710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18714:	sub	r0, r0, #1
   18718:	mvn	r1, #0
   1871c:	cmp	r1, r0
   18720:	blt	187f8 <__assert_fail@plt+0x7708>
   18724:	b	1880c <__assert_fail@plt+0x771c>
   18728:	ldr	r0, [fp, #8]
   1872c:	movw	r1, #0
   18730:	sdiv	r0, r1, r0
   18734:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18738:	cmp	r0, r1
   1873c:	blt	187f8 <__assert_fail@plt+0x7708>
   18740:	b	1880c <__assert_fail@plt+0x771c>
   18744:	ldr	r0, [fp, #8]
   18748:	cmp	r0, #0
   1874c:	bne	18754 <__assert_fail@plt+0x7664>
   18750:	b	1880c <__assert_fail@plt+0x771c>
   18754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18758:	cmp	r0, #0
   1875c:	bge	187c8 <__assert_fail@plt+0x76d8>
   18760:	b	18764 <__assert_fail@plt+0x7674>
   18764:	b	187ac <__assert_fail@plt+0x76bc>
   18768:	b	187ac <__assert_fail@plt+0x76bc>
   1876c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18770:	cmn	r0, #1
   18774:	bne	187ac <__assert_fail@plt+0x76bc>
   18778:	b	1877c <__assert_fail@plt+0x768c>
   1877c:	ldr	r0, [fp, #8]
   18780:	add	r0, r0, #0
   18784:	movw	r1, #0
   18788:	cmp	r1, r0
   1878c:	blt	187f8 <__assert_fail@plt+0x7708>
   18790:	b	1880c <__assert_fail@plt+0x771c>
   18794:	ldr	r0, [fp, #8]
   18798:	sub	r0, r0, #1
   1879c:	mvn	r1, #0
   187a0:	cmp	r1, r0
   187a4:	blt	187f8 <__assert_fail@plt+0x7708>
   187a8:	b	1880c <__assert_fail@plt+0x771c>
   187ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187b0:	movw	r1, #0
   187b4:	sdiv	r0, r1, r0
   187b8:	ldr	r1, [fp, #8]
   187bc:	cmp	r0, r1
   187c0:	blt	187f8 <__assert_fail@plt+0x7708>
   187c4:	b	1880c <__assert_fail@plt+0x771c>
   187c8:	ldr	r0, [fp, #8]
   187cc:	asr	r3, r0, #31
   187d0:	mvn	r1, #0
   187d4:	str	r0, [sp, #4]
   187d8:	mov	r0, r1
   187dc:	ldr	r2, [sp, #4]
   187e0:	bl	1ce40 <__assert_fail@plt+0xbd50>
   187e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187e8:	subs	r0, r0, r2
   187ec:	sbcs	r1, r1, r2, asr #31
   187f0:	bcs	1880c <__assert_fail@plt+0x771c>
   187f4:	b	187f8 <__assert_fail@plt+0x7708>
   187f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187fc:	ldr	r1, [fp, #8]
   18800:	mul	r0, r0, r1
   18804:	str	r0, [fp, #-28]	; 0xffffffe4
   18808:	b	18820 <__assert_fail@plt+0x7730>
   1880c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18810:	ldr	r1, [fp, #8]
   18814:	mul	r0, r0, r1
   18818:	str	r0, [fp, #-28]	; 0xffffffe4
   1881c:	b	18824 <__assert_fail@plt+0x7734>
   18820:	bl	189fc <__assert_fail@plt+0x790c>
   18824:	ldr	r0, [fp, #-4]
   18828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1882c:	bl	15d5c <__assert_fail@plt+0x4c6c>
   18830:	str	r0, [fp, #-4]
   18834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18838:	ldr	r1, [fp, #-8]
   1883c:	str	r0, [r1]
   18840:	ldr	r0, [fp, #-4]
   18844:	mov	sp, fp
   18848:	pop	{fp, pc}
   1884c:	svcvc	0x00ffffff
   18850:	andhi	r0, r0, r1
   18854:	andhi	r0, r0, r0
   18858:			; <UNDEFINED> instruction: 0xffff8000
   1885c:	push	{fp, lr}
   18860:	mov	fp, sp
   18864:	sub	sp, sp, #8
   18868:	str	r0, [sp, #4]
   1886c:	ldr	r0, [sp, #4]
   18870:	movw	r1, #1
   18874:	bl	18880 <__assert_fail@plt+0x7790>
   18878:	mov	sp, fp
   1887c:	pop	{fp, pc}
   18880:	push	{fp, lr}
   18884:	mov	fp, sp
   18888:	sub	sp, sp, #8
   1888c:	str	r0, [sp, #4]
   18890:	str	r1, [sp]
   18894:	ldr	r0, [sp, #4]
   18898:	ldr	r1, [sp]
   1889c:	bl	1aa00 <__assert_fail@plt+0x9910>
   188a0:	bl	15ce8 <__assert_fail@plt+0x4bf8>
   188a4:	mov	sp, fp
   188a8:	pop	{fp, pc}
   188ac:	push	{fp, lr}
   188b0:	mov	fp, sp
   188b4:	sub	sp, sp, #8
   188b8:	str	r0, [sp, #4]
   188bc:	ldr	r0, [sp, #4]
   188c0:	movw	r1, #1
   188c4:	bl	188d0 <__assert_fail@plt+0x77e0>
   188c8:	mov	sp, fp
   188cc:	pop	{fp, pc}
   188d0:	push	{fp, lr}
   188d4:	mov	fp, sp
   188d8:	sub	sp, sp, #8
   188dc:	str	r0, [sp, #4]
   188e0:	str	r1, [sp]
   188e4:	ldr	r0, [sp, #4]
   188e8:	ldr	r1, [sp]
   188ec:	bl	1b618 <__assert_fail@plt+0xa528>
   188f0:	bl	15ce8 <__assert_fail@plt+0x4bf8>
   188f4:	mov	sp, fp
   188f8:	pop	{fp, pc}
   188fc:	push	{fp, lr}
   18900:	mov	fp, sp
   18904:	sub	sp, sp, #16
   18908:	str	r0, [fp, #-4]
   1890c:	str	r1, [sp, #8]
   18910:	ldr	r0, [sp, #8]
   18914:	bl	15cc4 <__assert_fail@plt+0x4bd4>
   18918:	ldr	r1, [fp, #-4]
   1891c:	ldr	r2, [sp, #8]
   18920:	str	r0, [sp, #4]
   18924:	bl	10ec8 <memcpy@plt>
   18928:	ldr	r0, [sp, #4]
   1892c:	mov	sp, fp
   18930:	pop	{fp, pc}
   18934:	push	{fp, lr}
   18938:	mov	fp, sp
   1893c:	sub	sp, sp, #16
   18940:	str	r0, [fp, #-4]
   18944:	str	r1, [sp, #8]
   18948:	ldr	r0, [sp, #8]
   1894c:	bl	15d18 <__assert_fail@plt+0x4c28>
   18950:	ldr	r1, [fp, #-4]
   18954:	ldr	r2, [sp, #8]
   18958:	str	r0, [sp, #4]
   1895c:	bl	10ec8 <memcpy@plt>
   18960:	ldr	r0, [sp, #4]
   18964:	mov	sp, fp
   18968:	pop	{fp, pc}
   1896c:	push	{fp, lr}
   18970:	mov	fp, sp
   18974:	sub	sp, sp, #16
   18978:	str	r0, [fp, #-4]
   1897c:	str	r1, [sp, #8]
   18980:	ldr	r0, [sp, #8]
   18984:	add	r0, r0, #1
   18988:	bl	15d18 <__assert_fail@plt+0x4c28>
   1898c:	str	r0, [sp, #4]
   18990:	ldr	r0, [sp, #4]
   18994:	ldr	r1, [sp, #8]
   18998:	add	r0, r0, r1
   1899c:	movw	r1, #0
   189a0:	strb	r1, [r0]
   189a4:	ldr	r0, [sp, #4]
   189a8:	ldr	r1, [fp, #-4]
   189ac:	ldr	r2, [sp, #8]
   189b0:	str	r0, [sp]
   189b4:	bl	10ec8 <memcpy@plt>
   189b8:	ldr	r0, [sp]
   189bc:	mov	sp, fp
   189c0:	pop	{fp, pc}
   189c4:	push	{fp, lr}
   189c8:	mov	fp, sp
   189cc:	sub	sp, sp, #8
   189d0:	str	r0, [sp, #4]
   189d4:	ldr	r0, [sp, #4]
   189d8:	ldr	r1, [sp, #4]
   189dc:	str	r0, [sp]
   189e0:	mov	r0, r1
   189e4:	bl	10fdc <strlen@plt>
   189e8:	add	r1, r0, #1
   189ec:	ldr	r0, [sp]
   189f0:	bl	188fc <__assert_fail@plt+0x780c>
   189f4:	mov	sp, fp
   189f8:	pop	{fp, pc}
   189fc:	push	{fp, lr}
   18a00:	mov	fp, sp
   18a04:	sub	sp, sp, #8
   18a08:	movw	r0, #57592	; 0xe0f8
   18a0c:	movt	r0, #2
   18a10:	ldr	r0, [r0]
   18a14:	movw	r1, #56660	; 0xdd54
   18a18:	movt	r1, #1
   18a1c:	str	r0, [sp, #4]
   18a20:	mov	r0, r1
   18a24:	bl	10fd0 <gettext@plt>
   18a28:	ldr	r1, [sp, #4]
   18a2c:	str	r0, [sp]
   18a30:	mov	r0, r1
   18a34:	movw	r1, #0
   18a38:	movw	r2, #55607	; 0xd937
   18a3c:	movt	r2, #1
   18a40:	ldr	r3, [sp]
   18a44:	bl	10f64 <error@plt>
   18a48:	bl	110e4 <abort@plt>
   18a4c:	push	{fp, lr}
   18a50:	mov	fp, sp
   18a54:	sub	sp, sp, #8
   18a58:	str	r0, [sp, #4]
   18a5c:	ldr	r0, [sp, #4]
   18a60:	bl	1abb0 <__assert_fail@plt+0x9ac0>
   18a64:	str	r0, [sp]
   18a68:	ldr	r0, [sp]
   18a6c:	movw	r1, #0
   18a70:	cmp	r0, r1
   18a74:	bne	18a8c <__assert_fail@plt+0x799c>
   18a78:	bl	11000 <__errno_location@plt>
   18a7c:	ldr	r0, [r0]
   18a80:	cmp	r0, #12
   18a84:	bne	18a8c <__assert_fail@plt+0x799c>
   18a88:	bl	189fc <__assert_fail@plt+0x790c>
   18a8c:	ldr	r0, [sp]
   18a90:	mov	sp, fp
   18a94:	pop	{fp, pc}
   18a98:	push	{fp, lr}
   18a9c:	mov	fp, sp
   18aa0:	sub	sp, sp, #80	; 0x50
   18aa4:	ldr	ip, [fp, #8]
   18aa8:	str	r0, [fp, #-8]
   18aac:	str	r1, [fp, #-12]
   18ab0:	str	r2, [fp, #-16]
   18ab4:	str	r3, [fp, #-20]	; 0xffffffec
   18ab8:	movw	r0, #0
   18abc:	str	r0, [sp, #36]	; 0x24
   18ac0:	ldr	r1, [fp, #-16]
   18ac4:	cmp	r0, r1
   18ac8:	bgt	18adc <__assert_fail@plt+0x79ec>
   18acc:	ldr	r0, [fp, #-16]
   18ad0:	cmp	r0, #36	; 0x24
   18ad4:	bgt	18adc <__assert_fail@plt+0x79ec>
   18ad8:	b	18afc <__assert_fail@plt+0x7a0c>
   18adc:	movw	r0, #56677	; 0xdd65
   18ae0:	movt	r0, #1
   18ae4:	movw	r1, #56715	; 0xdd8b
   18ae8:	movt	r1, #1
   18aec:	movw	r2, #85	; 0x55
   18af0:	movw	r3, #56731	; 0xdd9b
   18af4:	movt	r3, #1
   18af8:	bl	110f0 <__assert_fail@plt>
   18afc:	ldr	r0, [fp, #-12]
   18b00:	movw	r1, #0
   18b04:	cmp	r0, r1
   18b08:	beq	18b18 <__assert_fail@plt+0x7a28>
   18b0c:	ldr	r0, [fp, #-12]
   18b10:	str	r0, [sp, #12]
   18b14:	b	18b24 <__assert_fail@plt+0x7a34>
   18b18:	sub	r0, fp, #24
   18b1c:	str	r0, [sp, #12]
   18b20:	b	18b24 <__assert_fail@plt+0x7a34>
   18b24:	ldr	r0, [sp, #12]
   18b28:	str	r0, [fp, #-28]	; 0xffffffe4
   18b2c:	bl	11000 <__errno_location@plt>
   18b30:	movw	r1, #0
   18b34:	str	r1, [r0]
   18b38:	ldr	r0, [fp, #-8]
   18b3c:	str	r0, [sp, #32]
   18b40:	ldr	r0, [sp, #32]
   18b44:	ldrb	r0, [r0]
   18b48:	strb	r0, [sp, #31]
   18b4c:	bl	10fb8 <__ctype_b_loc@plt>
   18b50:	ldr	r0, [r0]
   18b54:	ldrb	r1, [sp, #31]
   18b58:	mov	r2, r1
   18b5c:	add	r0, r0, r1, lsl #1
   18b60:	ldrh	r0, [r0]
   18b64:	and	r0, r0, #8192	; 0x2000
   18b68:	cmp	r0, #0
   18b6c:	beq	18b88 <__assert_fail@plt+0x7a98>
   18b70:	ldr	r0, [sp, #32]
   18b74:	add	r1, r0, #1
   18b78:	str	r1, [sp, #32]
   18b7c:	ldrb	r0, [r0, #1]
   18b80:	strb	r0, [sp, #31]
   18b84:	b	18b4c <__assert_fail@plt+0x7a5c>
   18b88:	ldrb	r0, [sp, #31]
   18b8c:	cmp	r0, #45	; 0x2d
   18b90:	bne	18ba0 <__assert_fail@plt+0x7ab0>
   18b94:	movw	r0, #4
   18b98:	str	r0, [fp, #-4]
   18b9c:	b	1911c <__assert_fail@plt+0x802c>
   18ba0:	ldr	r0, [fp, #-8]
   18ba4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ba8:	ldr	r2, [fp, #-16]
   18bac:	bl	11030 <strtoumax@plt>
   18bb0:	str	r1, [sp, #44]	; 0x2c
   18bb4:	str	r0, [sp, #40]	; 0x28
   18bb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18bbc:	ldr	r0, [r0]
   18bc0:	ldr	r1, [fp, #-8]
   18bc4:	cmp	r0, r1
   18bc8:	bne	18c34 <__assert_fail@plt+0x7b44>
   18bcc:	ldr	r0, [fp, #8]
   18bd0:	movw	r1, #0
   18bd4:	cmp	r0, r1
   18bd8:	beq	18c24 <__assert_fail@plt+0x7b34>
   18bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18be0:	ldr	r0, [r0]
   18be4:	ldrb	r0, [r0]
   18be8:	cmp	r0, #0
   18bec:	beq	18c24 <__assert_fail@plt+0x7b34>
   18bf0:	ldr	r0, [fp, #8]
   18bf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18bf8:	ldr	r1, [r1]
   18bfc:	ldrb	r1, [r1]
   18c00:	bl	10fe8 <strchr@plt>
   18c04:	movw	r1, #0
   18c08:	cmp	r0, r1
   18c0c:	beq	18c24 <__assert_fail@plt+0x7b34>
   18c10:	mov	r0, #0
   18c14:	str	r0, [sp, #44]	; 0x2c
   18c18:	mov	r0, #1
   18c1c:	str	r0, [sp, #40]	; 0x28
   18c20:	b	18c30 <__assert_fail@plt+0x7b40>
   18c24:	movw	r0, #4
   18c28:	str	r0, [fp, #-4]
   18c2c:	b	1911c <__assert_fail@plt+0x802c>
   18c30:	b	18c6c <__assert_fail@plt+0x7b7c>
   18c34:	bl	11000 <__errno_location@plt>
   18c38:	ldr	r0, [r0]
   18c3c:	cmp	r0, #0
   18c40:	beq	18c68 <__assert_fail@plt+0x7b78>
   18c44:	bl	11000 <__errno_location@plt>
   18c48:	ldr	r0, [r0]
   18c4c:	cmp	r0, #34	; 0x22
   18c50:	beq	18c60 <__assert_fail@plt+0x7b70>
   18c54:	movw	r0, #4
   18c58:	str	r0, [fp, #-4]
   18c5c:	b	1911c <__assert_fail@plt+0x802c>
   18c60:	movw	r0, #1
   18c64:	str	r0, [sp, #36]	; 0x24
   18c68:	b	18c6c <__assert_fail@plt+0x7b7c>
   18c6c:	ldr	r0, [fp, #8]
   18c70:	movw	r1, #0
   18c74:	cmp	r0, r1
   18c78:	bne	18c9c <__assert_fail@plt+0x7bac>
   18c7c:	ldr	r0, [sp, #40]	; 0x28
   18c80:	ldr	r1, [sp, #44]	; 0x2c
   18c84:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c88:	str	r1, [r2, #4]
   18c8c:	str	r0, [r2]
   18c90:	ldr	r0, [sp, #36]	; 0x24
   18c94:	str	r0, [fp, #-4]
   18c98:	b	1911c <__assert_fail@plt+0x802c>
   18c9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18ca0:	ldr	r0, [r0]
   18ca4:	ldrb	r0, [r0]
   18ca8:	cmp	r0, #0
   18cac:	beq	19100 <__assert_fail@plt+0x8010>
   18cb0:	movw	r0, #1024	; 0x400
   18cb4:	str	r0, [sp, #24]
   18cb8:	movw	r0, #1
   18cbc:	str	r0, [sp, #20]
   18cc0:	ldr	r0, [fp, #8]
   18cc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18cc8:	ldr	r1, [r1]
   18ccc:	ldrb	r1, [r1]
   18cd0:	bl	10fe8 <strchr@plt>
   18cd4:	movw	r1, #0
   18cd8:	cmp	r0, r1
   18cdc:	bne	18d04 <__assert_fail@plt+0x7c14>
   18ce0:	ldr	r0, [sp, #40]	; 0x28
   18ce4:	ldr	r1, [sp, #44]	; 0x2c
   18ce8:	ldr	r2, [fp, #-20]	; 0xffffffec
   18cec:	str	r1, [r2, #4]
   18cf0:	str	r0, [r2]
   18cf4:	ldr	r0, [sp, #36]	; 0x24
   18cf8:	orr	r0, r0, #2
   18cfc:	str	r0, [fp, #-4]
   18d00:	b	1911c <__assert_fail@plt+0x802c>
   18d04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d08:	ldr	r0, [r0]
   18d0c:	ldrb	r0, [r0]
   18d10:	sub	r0, r0, #69	; 0x45
   18d14:	cmp	r0, #47	; 0x2f
   18d18:	str	r0, [sp, #8]
   18d1c:	bhi	18e88 <__assert_fail@plt+0x7d98>
   18d20:	add	r0, pc, #8
   18d24:	ldr	r1, [sp, #8]
   18d28:	ldr	r0, [r0, r1, lsl #2]
   18d2c:	mov	pc, r0
   18d30:	strdeq	r8, [r1], -r0
   18d34:	andeq	r8, r1, r8, lsl #29
   18d38:	strdeq	r8, [r1], -r0
   18d3c:	andeq	r8, r1, r8, lsl #29
   18d40:	andeq	r8, r1, r8, lsl #29
   18d44:	andeq	r8, r1, r8, lsl #29
   18d48:	strdeq	r8, [r1], -r0
   18d4c:	andeq	r8, r1, r8, lsl #29
   18d50:	strdeq	r8, [r1], -r0
   18d54:	andeq	r8, r1, r8, lsl #29
   18d58:	andeq	r8, r1, r8, lsl #29
   18d5c:	strdeq	r8, [r1], -r0
   18d60:	andeq	r8, r1, r8, lsl #29
   18d64:	andeq	r8, r1, r8, lsl #29
   18d68:	andeq	r8, r1, r8, lsl #29
   18d6c:	strdeq	r8, [r1], -r0
   18d70:	andeq	r8, r1, r8, lsl #29
   18d74:	andeq	r8, r1, r8, lsl #29
   18d78:	andeq	r8, r1, r8, lsl #29
   18d7c:	andeq	r8, r1, r8, lsl #29
   18d80:	strdeq	r8, [r1], -r0
   18d84:	strdeq	r8, [r1], -r0
   18d88:	andeq	r8, r1, r8, lsl #29
   18d8c:	andeq	r8, r1, r8, lsl #29
   18d90:	andeq	r8, r1, r8, lsl #29
   18d94:	andeq	r8, r1, r8, lsl #29
   18d98:	andeq	r8, r1, r8, lsl #29
   18d9c:	andeq	r8, r1, r8, lsl #29
   18da0:	andeq	r8, r1, r8, lsl #29
   18da4:	andeq	r8, r1, r8, lsl #29
   18da8:	andeq	r8, r1, r8, lsl #29
   18dac:	andeq	r8, r1, r8, lsl #29
   18db0:	andeq	r8, r1, r8, lsl #29
   18db4:	andeq	r8, r1, r8, lsl #29
   18db8:	strdeq	r8, [r1], -r0
   18dbc:	andeq	r8, r1, r8, lsl #29
   18dc0:	andeq	r8, r1, r8, lsl #29
   18dc4:	andeq	r8, r1, r8, lsl #29
   18dc8:	strdeq	r8, [r1], -r0
   18dcc:	andeq	r8, r1, r8, lsl #29
   18dd0:	strdeq	r8, [r1], -r0
   18dd4:	andeq	r8, r1, r8, lsl #29
   18dd8:	andeq	r8, r1, r8, lsl #29
   18ddc:	andeq	r8, r1, r8, lsl #29
   18de0:	andeq	r8, r1, r8, lsl #29
   18de4:	andeq	r8, r1, r8, lsl #29
   18de8:	andeq	r8, r1, r8, lsl #29
   18dec:	strdeq	r8, [r1], -r0
   18df0:	ldr	r0, [fp, #8]
   18df4:	movw	r1, #48	; 0x30
   18df8:	bl	10fe8 <strchr@plt>
   18dfc:	movw	r1, #0
   18e00:	cmp	r0, r1
   18e04:	beq	18e84 <__assert_fail@plt+0x7d94>
   18e08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e0c:	ldr	r0, [r0]
   18e10:	ldrb	r0, [r0, #1]
   18e14:	mov	r1, r0
   18e18:	cmp	r0, #66	; 0x42
   18e1c:	str	r1, [sp, #4]
   18e20:	beq	18e6c <__assert_fail@plt+0x7d7c>
   18e24:	b	18e28 <__assert_fail@plt+0x7d38>
   18e28:	ldr	r0, [sp, #4]
   18e2c:	cmp	r0, #68	; 0x44
   18e30:	beq	18e6c <__assert_fail@plt+0x7d7c>
   18e34:	b	18e38 <__assert_fail@plt+0x7d48>
   18e38:	ldr	r0, [sp, #4]
   18e3c:	cmp	r0, #105	; 0x69
   18e40:	bne	18e80 <__assert_fail@plt+0x7d90>
   18e44:	b	18e48 <__assert_fail@plt+0x7d58>
   18e48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e4c:	ldr	r0, [r0]
   18e50:	ldrb	r0, [r0, #2]
   18e54:	cmp	r0, #66	; 0x42
   18e58:	bne	18e68 <__assert_fail@plt+0x7d78>
   18e5c:	ldr	r0, [sp, #20]
   18e60:	add	r0, r0, #2
   18e64:	str	r0, [sp, #20]
   18e68:	b	18e80 <__assert_fail@plt+0x7d90>
   18e6c:	movw	r0, #1000	; 0x3e8
   18e70:	str	r0, [sp, #24]
   18e74:	ldr	r0, [sp, #20]
   18e78:	add	r0, r0, #1
   18e7c:	str	r0, [sp, #20]
   18e80:	b	18e84 <__assert_fail@plt+0x7d94>
   18e84:	b	18e88 <__assert_fail@plt+0x7d98>
   18e88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e8c:	ldr	r0, [r0]
   18e90:	ldrb	r0, [r0]
   18e94:	sub	r0, r0, #66	; 0x42
   18e98:	cmp	r0, #53	; 0x35
   18e9c:	str	r0, [sp]
   18ea0:	bhi	19094 <__assert_fail@plt+0x7fa4>
   18ea4:	add	r0, pc, #8
   18ea8:	ldr	r1, [sp]
   18eac:	ldr	r0, [r0, r1, lsl #2]
   18eb0:	mov	pc, r0
   18eb4:	andeq	r8, r1, r0, lsr #31
   18eb8:	muleq	r1, r4, r0
   18ebc:	muleq	r1, r4, r0
   18ec0:	andeq	r8, r1, r0, asr #31
   18ec4:	muleq	r1, r4, r0
   18ec8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18ecc:	muleq	r1, r4, r0
   18ed0:	muleq	r1, r4, r0
   18ed4:	muleq	r1, r4, r0
   18ed8:	strdeq	r8, [r1], -r0
   18edc:	muleq	r1, r4, r0
   18ee0:	andeq	r9, r1, r8
   18ee4:	muleq	r1, r4, r0
   18ee8:	muleq	r1, r4, r0
   18eec:	andeq	r9, r1, r0, lsr #32
   18ef0:	muleq	r1, r4, r0
   18ef4:	muleq	r1, r4, r0
   18ef8:	muleq	r1, r4, r0
   18efc:	andeq	r9, r1, r8, lsr r0
   18f00:	muleq	r1, r4, r0
   18f04:	muleq	r1, r4, r0
   18f08:	muleq	r1, r4, r0
   18f0c:	muleq	r1, r4, r0
   18f10:	andeq	r9, r1, r4, rrx
   18f14:	andeq	r9, r1, ip, ror r0
   18f18:	muleq	r1, r4, r0
   18f1c:	muleq	r1, r4, r0
   18f20:	muleq	r1, r4, r0
   18f24:	muleq	r1, r4, r0
   18f28:	muleq	r1, r4, r0
   18f2c:	muleq	r1, r4, r0
   18f30:	muleq	r1, r4, r0
   18f34:	andeq	r8, r1, ip, lsl #31
   18f38:			; <UNDEFINED> instruction: 0x00018fb4
   18f3c:	muleq	r1, r4, r0
   18f40:	muleq	r1, r4, r0
   18f44:	muleq	r1, r4, r0
   18f48:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18f4c:	muleq	r1, r4, r0
   18f50:	muleq	r1, r4, r0
   18f54:	muleq	r1, r4, r0
   18f58:	strdeq	r8, [r1], -r0
   18f5c:	muleq	r1, r4, r0
   18f60:	andeq	r9, r1, r8
   18f64:	muleq	r1, r4, r0
   18f68:	muleq	r1, r4, r0
   18f6c:	muleq	r1, r4, r0
   18f70:	muleq	r1, r4, r0
   18f74:	muleq	r1, r4, r0
   18f78:	muleq	r1, r4, r0
   18f7c:	andeq	r9, r1, r8, lsr r0
   18f80:	muleq	r1, r4, r0
   18f84:	muleq	r1, r4, r0
   18f88:	andeq	r9, r1, r0, asr r0
   18f8c:	add	r0, sp, #40	; 0x28
   18f90:	movw	r1, #512	; 0x200
   18f94:	bl	19128 <__assert_fail@plt+0x8038>
   18f98:	str	r0, [sp, #16]
   18f9c:	b	190b8 <__assert_fail@plt+0x7fc8>
   18fa0:	add	r0, sp, #40	; 0x28
   18fa4:	movw	r1, #1024	; 0x400
   18fa8:	bl	19128 <__assert_fail@plt+0x8038>
   18fac:	str	r0, [sp, #16]
   18fb0:	b	190b8 <__assert_fail@plt+0x7fc8>
   18fb4:	movw	r0, #0
   18fb8:	str	r0, [sp, #16]
   18fbc:	b	190b8 <__assert_fail@plt+0x7fc8>
   18fc0:	ldr	r1, [sp, #24]
   18fc4:	add	r0, sp, #40	; 0x28
   18fc8:	movw	r2, #6
   18fcc:	bl	1a9a0 <__assert_fail@plt+0x98b0>
   18fd0:	str	r0, [sp, #16]
   18fd4:	b	190b8 <__assert_fail@plt+0x7fc8>
   18fd8:	ldr	r1, [sp, #24]
   18fdc:	add	r0, sp, #40	; 0x28
   18fe0:	movw	r2, #3
   18fe4:	bl	1a9a0 <__assert_fail@plt+0x98b0>
   18fe8:	str	r0, [sp, #16]
   18fec:	b	190b8 <__assert_fail@plt+0x7fc8>
   18ff0:	ldr	r1, [sp, #24]
   18ff4:	add	r0, sp, #40	; 0x28
   18ff8:	movw	r2, #1
   18ffc:	bl	1a9a0 <__assert_fail@plt+0x98b0>
   19000:	str	r0, [sp, #16]
   19004:	b	190b8 <__assert_fail@plt+0x7fc8>
   19008:	ldr	r1, [sp, #24]
   1900c:	add	r0, sp, #40	; 0x28
   19010:	movw	r2, #2
   19014:	bl	1a9a0 <__assert_fail@plt+0x98b0>
   19018:	str	r0, [sp, #16]
   1901c:	b	190b8 <__assert_fail@plt+0x7fc8>
   19020:	ldr	r1, [sp, #24]
   19024:	add	r0, sp, #40	; 0x28
   19028:	movw	r2, #5
   1902c:	bl	1a9a0 <__assert_fail@plt+0x98b0>
   19030:	str	r0, [sp, #16]
   19034:	b	190b8 <__assert_fail@plt+0x7fc8>
   19038:	ldr	r1, [sp, #24]
   1903c:	add	r0, sp, #40	; 0x28
   19040:	movw	r2, #4
   19044:	bl	1a9a0 <__assert_fail@plt+0x98b0>
   19048:	str	r0, [sp, #16]
   1904c:	b	190b8 <__assert_fail@plt+0x7fc8>
   19050:	add	r0, sp, #40	; 0x28
   19054:	movw	r1, #2
   19058:	bl	19128 <__assert_fail@plt+0x8038>
   1905c:	str	r0, [sp, #16]
   19060:	b	190b8 <__assert_fail@plt+0x7fc8>
   19064:	ldr	r1, [sp, #24]
   19068:	add	r0, sp, #40	; 0x28
   1906c:	movw	r2, #8
   19070:	bl	1a9a0 <__assert_fail@plt+0x98b0>
   19074:	str	r0, [sp, #16]
   19078:	b	190b8 <__assert_fail@plt+0x7fc8>
   1907c:	ldr	r1, [sp, #24]
   19080:	add	r0, sp, #40	; 0x28
   19084:	movw	r2, #7
   19088:	bl	1a9a0 <__assert_fail@plt+0x98b0>
   1908c:	str	r0, [sp, #16]
   19090:	b	190b8 <__assert_fail@plt+0x7fc8>
   19094:	ldr	r0, [sp, #40]	; 0x28
   19098:	ldr	r1, [sp, #44]	; 0x2c
   1909c:	ldr	r2, [fp, #-20]	; 0xffffffec
   190a0:	str	r1, [r2, #4]
   190a4:	str	r0, [r2]
   190a8:	ldr	r0, [sp, #36]	; 0x24
   190ac:	orr	r0, r0, #2
   190b0:	str	r0, [fp, #-4]
   190b4:	b	1911c <__assert_fail@plt+0x802c>
   190b8:	ldr	r0, [sp, #16]
   190bc:	ldr	r1, [sp, #36]	; 0x24
   190c0:	orr	r0, r1, r0
   190c4:	str	r0, [sp, #36]	; 0x24
   190c8:	ldr	r0, [sp, #20]
   190cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   190d0:	ldr	r2, [r1]
   190d4:	add	r0, r2, r0
   190d8:	str	r0, [r1]
   190dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   190e0:	ldr	r0, [r0]
   190e4:	ldrsb	r0, [r0]
   190e8:	cmp	r0, #0
   190ec:	beq	190fc <__assert_fail@plt+0x800c>
   190f0:	ldr	r0, [sp, #36]	; 0x24
   190f4:	orr	r0, r0, #2
   190f8:	str	r0, [sp, #36]	; 0x24
   190fc:	b	19100 <__assert_fail@plt+0x8010>
   19100:	ldr	r0, [sp, #40]	; 0x28
   19104:	ldr	r1, [sp, #44]	; 0x2c
   19108:	ldr	r2, [fp, #-20]	; 0xffffffec
   1910c:	str	r1, [r2, #4]
   19110:	str	r0, [r2]
   19114:	ldr	r0, [sp, #36]	; 0x24
   19118:	str	r0, [fp, #-4]
   1911c:	ldr	r0, [fp, #-4]
   19120:	mov	sp, fp
   19124:	pop	{fp, pc}
   19128:	push	{fp, lr}
   1912c:	mov	fp, sp
   19130:	sub	sp, sp, #112	; 0x70
   19134:	str	r0, [fp, #-8]
   19138:	str	r1, [fp, #-12]
   1913c:	b	195ec <__assert_fail@plt+0x84fc>
   19140:	b	193b4 <__assert_fail@plt+0x82c4>
   19144:	ldr	r0, [fp, #-12]
   19148:	cmp	r0, #0
   1914c:	bge	192a4 <__assert_fail@plt+0x81b4>
   19150:	mov	r0, #1
   19154:	cmp	r0, #0
   19158:	bne	19200 <__assert_fail@plt+0x8110>
   1915c:	b	19160 <__assert_fail@plt+0x8070>
   19160:	b	19164 <__assert_fail@plt+0x8074>
   19164:	ldr	r0, [fp, #-8]
   19168:	ldr	r1, [r0]
   1916c:	ldr	r0, [r0, #4]
   19170:	ldr	r2, [fp, #-12]
   19174:	mov	r3, #127	; 0x7f
   19178:	sdiv	r2, r3, r2
   1917c:	subs	r1, r1, r2
   19180:	sbcs	r0, r0, r2, asr #31
   19184:	bcc	1936c <__assert_fail@plt+0x827c>
   19188:	b	19390 <__assert_fail@plt+0x82a0>
   1918c:	b	19190 <__assert_fail@plt+0x80a0>
   19190:	ldr	r0, [pc, #4076]	; 1a184 <__assert_fail@plt+0x9094>
   19194:	ldr	r1, [fp, #-12]
   19198:	cmp	r1, r0
   1919c:	blt	191b4 <__assert_fail@plt+0x80c4>
   191a0:	b	191c0 <__assert_fail@plt+0x80d0>
   191a4:	ldr	r0, [fp, #-12]
   191a8:	movw	r1, #0
   191ac:	cmp	r1, r0
   191b0:	bge	191c0 <__assert_fail@plt+0x80d0>
   191b4:	movw	r0, #0
   191b8:	str	r0, [fp, #-28]	; 0xffffffe4
   191bc:	b	191d8 <__assert_fail@plt+0x80e8>
   191c0:	ldr	r0, [fp, #-12]
   191c4:	movw	r1, #0
   191c8:	sub	r0, r1, r0
   191cc:	movw	r1, #127	; 0x7f
   191d0:	sdiv	r0, r1, r0
   191d4:	str	r0, [fp, #-28]	; 0xffffffe4
   191d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   191dc:	ldr	r1, [fp, #-8]
   191e0:	ldr	r2, [r1]
   191e4:	ldr	r1, [r1, #4]
   191e8:	mvn	r1, r1
   191ec:	mvn	r2, r2
   191f0:	subs	r2, r2, r0
   191f4:	sbcs	r0, r1, r0, asr #31
   191f8:	bcs	1936c <__assert_fail@plt+0x827c>
   191fc:	b	19390 <__assert_fail@plt+0x82a0>
   19200:	b	19204 <__assert_fail@plt+0x8114>
   19204:	b	1927c <__assert_fail@plt+0x818c>
   19208:	b	1927c <__assert_fail@plt+0x818c>
   1920c:	ldr	r0, [fp, #-12]
   19210:	cmn	r0, #1
   19214:	bne	1927c <__assert_fail@plt+0x818c>
   19218:	b	1923c <__assert_fail@plt+0x814c>
   1921c:	ldr	r0, [fp, #-8]
   19220:	ldr	r1, [r0]
   19224:	ldr	r0, [r0, #4]
   19228:	eor	r1, r1, #128	; 0x80
   1922c:	orr	r0, r1, r0
   19230:	cmp	r0, #0
   19234:	bne	1936c <__assert_fail@plt+0x827c>
   19238:	b	19390 <__assert_fail@plt+0x82a0>
   1923c:	ldr	r0, [fp, #-8]
   19240:	ldr	r1, [r0]
   19244:	ldr	r0, [r0, #4]
   19248:	orr	r0, r1, r0
   1924c:	cmp	r0, #0
   19250:	beq	19390 <__assert_fail@plt+0x82a0>
   19254:	b	19258 <__assert_fail@plt+0x8168>
   19258:	ldr	r0, [fp, #-8]
   1925c:	ldr	r1, [r0]
   19260:	ldr	r0, [r0, #4]
   19264:	subs	r1, r1, #1
   19268:	sbc	r0, r0, #0
   1926c:	rsbs	r1, r1, #127	; 0x7f
   19270:	rscs	r0, r0, #0
   19274:	bcc	1936c <__assert_fail@plt+0x827c>
   19278:	b	19390 <__assert_fail@plt+0x82a0>
   1927c:	ldr	r0, [fp, #-12]
   19280:	mvn	r1, #127	; 0x7f
   19284:	sdiv	r0, r1, r0
   19288:	ldr	r1, [fp, #-8]
   1928c:	ldr	r2, [r1]
   19290:	ldr	r1, [r1, #4]
   19294:	subs	r2, r0, r2
   19298:	rscs	r0, r1, r0, asr #31
   1929c:	bcc	1936c <__assert_fail@plt+0x827c>
   192a0:	b	19390 <__assert_fail@plt+0x82a0>
   192a4:	ldr	r0, [fp, #-12]
   192a8:	cmp	r0, #0
   192ac:	bne	192b4 <__assert_fail@plt+0x81c4>
   192b0:	b	19390 <__assert_fail@plt+0x82a0>
   192b4:	mov	r0, #1
   192b8:	cmp	r0, #0
   192bc:	bne	19344 <__assert_fail@plt+0x8254>
   192c0:	b	192c4 <__assert_fail@plt+0x81d4>
   192c4:	ldr	r0, [fp, #-8]
   192c8:	ldr	r1, [r0]
   192cc:	ldr	r0, [r0, #4]
   192d0:	and	r0, r1, r0
   192d4:	cmn	r0, #1
   192d8:	bne	19318 <__assert_fail@plt+0x8228>
   192dc:	b	192e0 <__assert_fail@plt+0x81f0>
   192e0:	b	192e4 <__assert_fail@plt+0x81f4>
   192e4:	ldr	r0, [fp, #-12]
   192e8:	mvn	r1, #127	; 0x7f
   192ec:	add	r0, r0, r1
   192f0:	movw	r1, #0
   192f4:	cmp	r1, r0
   192f8:	blt	1936c <__assert_fail@plt+0x827c>
   192fc:	b	19390 <__assert_fail@plt+0x82a0>
   19300:	ldr	r0, [fp, #-12]
   19304:	sub	r0, r0, #1
   19308:	movw	r1, #127	; 0x7f
   1930c:	cmp	r1, r0
   19310:	blt	1936c <__assert_fail@plt+0x827c>
   19314:	b	19390 <__assert_fail@plt+0x82a0>
   19318:	ldr	r0, [fp, #-8]
   1931c:	ldr	r2, [r0]
   19320:	ldr	r3, [r0, #4]
   19324:	mvn	r0, #127	; 0x7f
   19328:	mvn	r1, #0
   1932c:	bl	1ce40 <__assert_fail@plt+0xbd50>
   19330:	ldr	r2, [fp, #-12]
   19334:	subs	r0, r0, r2
   19338:	sbcs	r1, r1, r2, asr #31
   1933c:	bcc	1936c <__assert_fail@plt+0x827c>
   19340:	b	19390 <__assert_fail@plt+0x82a0>
   19344:	ldr	r0, [fp, #-12]
   19348:	mov	r1, #127	; 0x7f
   1934c:	sdiv	r0, r1, r0
   19350:	ldr	r1, [fp, #-8]
   19354:	ldr	r2, [r1]
   19358:	ldr	r1, [r1, #4]
   1935c:	subs	r2, r0, r2
   19360:	rscs	r0, r1, r0, asr #31
   19364:	bcs	19390 <__assert_fail@plt+0x82a0>
   19368:	b	1936c <__assert_fail@plt+0x827c>
   1936c:	ldr	r0, [fp, #-8]
   19370:	ldr	r0, [r0]
   19374:	ldr	r1, [fp, #-12]
   19378:	mul	r0, r0, r1
   1937c:	sxtb	r0, r0
   19380:	asr	r1, r0, #31
   19384:	str	r0, [fp, #-24]	; 0xffffffe8
   19388:	str	r1, [fp, #-20]	; 0xffffffec
   1938c:	b	1a954 <__assert_fail@plt+0x9864>
   19390:	ldr	r0, [fp, #-8]
   19394:	ldr	r0, [r0]
   19398:	ldr	r1, [fp, #-12]
   1939c:	mul	r0, r0, r1
   193a0:	sxtb	r0, r0
   193a4:	asr	r1, r0, #31
   193a8:	str	r0, [fp, #-24]	; 0xffffffe8
   193ac:	str	r1, [fp, #-20]	; 0xffffffec
   193b0:	b	1a970 <__assert_fail@plt+0x9880>
   193b4:	ldr	r0, [fp, #-12]
   193b8:	cmp	r0, #0
   193bc:	bge	194f0 <__assert_fail@plt+0x8400>
   193c0:	mov	r0, #1
   193c4:	cmp	r0, #0
   193c8:	bne	19470 <__assert_fail@plt+0x8380>
   193cc:	b	193d0 <__assert_fail@plt+0x82e0>
   193d0:	b	193d4 <__assert_fail@plt+0x82e4>
   193d4:	ldr	r0, [fp, #-8]
   193d8:	ldr	r1, [r0]
   193dc:	ldr	r0, [r0, #4]
   193e0:	ldr	r2, [fp, #-12]
   193e4:	mov	r3, #255	; 0xff
   193e8:	sdiv	r2, r3, r2
   193ec:	subs	r1, r1, r2
   193f0:	sbcs	r0, r0, r2, asr #31
   193f4:	bcc	195a4 <__assert_fail@plt+0x84b4>
   193f8:	b	195c8 <__assert_fail@plt+0x84d8>
   193fc:	b	19400 <__assert_fail@plt+0x8310>
   19400:	ldr	r0, [pc, #3452]	; 1a184 <__assert_fail@plt+0x9094>
   19404:	ldr	r1, [fp, #-12]
   19408:	cmp	r1, r0
   1940c:	blt	19424 <__assert_fail@plt+0x8334>
   19410:	b	19430 <__assert_fail@plt+0x8340>
   19414:	ldr	r0, [fp, #-12]
   19418:	movw	r1, #0
   1941c:	cmp	r1, r0
   19420:	bge	19430 <__assert_fail@plt+0x8340>
   19424:	movw	r0, #0
   19428:	str	r0, [fp, #-32]	; 0xffffffe0
   1942c:	b	19448 <__assert_fail@plt+0x8358>
   19430:	ldr	r0, [fp, #-12]
   19434:	movw	r1, #0
   19438:	sub	r0, r1, r0
   1943c:	movw	r1, #255	; 0xff
   19440:	sdiv	r0, r1, r0
   19444:	str	r0, [fp, #-32]	; 0xffffffe0
   19448:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1944c:	ldr	r1, [fp, #-8]
   19450:	ldr	r2, [r1]
   19454:	ldr	r1, [r1, #4]
   19458:	mvn	r1, r1
   1945c:	mvn	r2, r2
   19460:	subs	r2, r2, r0
   19464:	sbcs	r0, r1, r0, asr #31
   19468:	bcs	195a4 <__assert_fail@plt+0x84b4>
   1946c:	b	195c8 <__assert_fail@plt+0x84d8>
   19470:	b	19474 <__assert_fail@plt+0x8384>
   19474:	b	194d4 <__assert_fail@plt+0x83e4>
   19478:	b	194d4 <__assert_fail@plt+0x83e4>
   1947c:	ldr	r0, [fp, #-12]
   19480:	cmn	r0, #1
   19484:	bne	194d4 <__assert_fail@plt+0x83e4>
   19488:	b	194a8 <__assert_fail@plt+0x83b8>
   1948c:	ldr	r0, [fp, #-8]
   19490:	ldr	r1, [r0]
   19494:	ldr	r0, [r0, #4]
   19498:	orr	r0, r1, r0
   1949c:	cmp	r0, #0
   194a0:	bne	195a4 <__assert_fail@plt+0x84b4>
   194a4:	b	195c8 <__assert_fail@plt+0x84d8>
   194a8:	ldr	r0, [fp, #-8]
   194ac:	ldr	r1, [r0]
   194b0:	ldr	r0, [r0, #4]
   194b4:	orr	r0, r1, r0
   194b8:	cmp	r0, #0
   194bc:	beq	195c8 <__assert_fail@plt+0x84d8>
   194c0:	b	194c4 <__assert_fail@plt+0x83d4>
   194c4:	mov	r0, #0
   194c8:	cmp	r0, #0
   194cc:	bne	195a4 <__assert_fail@plt+0x84b4>
   194d0:	b	195c8 <__assert_fail@plt+0x84d8>
   194d4:	ldr	r0, [fp, #-8]
   194d8:	ldr	r1, [r0]
   194dc:	ldr	r0, [r0, #4]
   194e0:	orr	r0, r1, r0
   194e4:	cmp	r0, #0
   194e8:	bne	195a4 <__assert_fail@plt+0x84b4>
   194ec:	b	195c8 <__assert_fail@plt+0x84d8>
   194f0:	ldr	r0, [fp, #-12]
   194f4:	cmp	r0, #0
   194f8:	bne	19500 <__assert_fail@plt+0x8410>
   194fc:	b	195c8 <__assert_fail@plt+0x84d8>
   19500:	mov	r0, #1
   19504:	cmp	r0, #0
   19508:	bne	1957c <__assert_fail@plt+0x848c>
   1950c:	b	19510 <__assert_fail@plt+0x8420>
   19510:	b	19518 <__assert_fail@plt+0x8428>
   19514:	b	1951c <__assert_fail@plt+0x842c>
   19518:	b	1956c <__assert_fail@plt+0x847c>
   1951c:	ldr	r0, [fp, #-8]
   19520:	ldr	r1, [r0]
   19524:	ldr	r0, [r0, #4]
   19528:	and	r0, r1, r0
   1952c:	cmn	r0, #1
   19530:	bne	1956c <__assert_fail@plt+0x847c>
   19534:	b	19538 <__assert_fail@plt+0x8448>
   19538:	b	1953c <__assert_fail@plt+0x844c>
   1953c:	ldr	r0, [fp, #-12]
   19540:	add	r0, r0, #0
   19544:	movw	r1, #0
   19548:	cmp	r1, r0
   1954c:	blt	195a4 <__assert_fail@plt+0x84b4>
   19550:	b	195c8 <__assert_fail@plt+0x84d8>
   19554:	ldr	r0, [fp, #-12]
   19558:	sub	r0, r0, #1
   1955c:	mvn	r1, #0
   19560:	cmp	r1, r0
   19564:	blt	195a4 <__assert_fail@plt+0x84b4>
   19568:	b	195c8 <__assert_fail@plt+0x84d8>
   1956c:	ldr	r0, [fp, #-12]
   19570:	cmp	r0, #0
   19574:	bne	195a4 <__assert_fail@plt+0x84b4>
   19578:	b	195c8 <__assert_fail@plt+0x84d8>
   1957c:	ldr	r0, [fp, #-12]
   19580:	mov	r1, #255	; 0xff
   19584:	sdiv	r0, r1, r0
   19588:	ldr	r1, [fp, #-8]
   1958c:	ldr	r2, [r1]
   19590:	ldr	r1, [r1, #4]
   19594:	subs	r2, r0, r2
   19598:	rscs	r0, r1, r0, asr #31
   1959c:	bcs	195c8 <__assert_fail@plt+0x84d8>
   195a0:	b	195a4 <__assert_fail@plt+0x84b4>
   195a4:	ldr	r0, [fp, #-8]
   195a8:	ldr	r0, [r0]
   195ac:	ldr	r1, [fp, #-12]
   195b0:	mul	r0, r0, r1
   195b4:	uxtb	r0, r0
   195b8:	mov	r1, #0
   195bc:	str	r1, [fp, #-20]	; 0xffffffec
   195c0:	str	r0, [fp, #-24]	; 0xffffffe8
   195c4:	b	1a954 <__assert_fail@plt+0x9864>
   195c8:	ldr	r0, [fp, #-8]
   195cc:	ldr	r0, [r0]
   195d0:	ldr	r1, [fp, #-12]
   195d4:	mul	r0, r0, r1
   195d8:	uxtb	r0, r0
   195dc:	mov	r1, #0
   195e0:	str	r1, [fp, #-20]	; 0xffffffec
   195e4:	str	r0, [fp, #-24]	; 0xffffffe8
   195e8:	b	1a970 <__assert_fail@plt+0x9880>
   195ec:	b	19aac <__assert_fail@plt+0x89bc>
   195f0:	b	19874 <__assert_fail@plt+0x8784>
   195f4:	ldr	r0, [fp, #-12]
   195f8:	cmp	r0, #0
   195fc:	bge	19760 <__assert_fail@plt+0x8670>
   19600:	mov	r0, #1
   19604:	cmp	r0, #0
   19608:	bne	196b0 <__assert_fail@plt+0x85c0>
   1960c:	b	19610 <__assert_fail@plt+0x8520>
   19610:	b	19614 <__assert_fail@plt+0x8524>
   19614:	ldr	r0, [fp, #-8]
   19618:	ldr	r1, [r0]
   1961c:	ldr	r0, [r0, #4]
   19620:	ldr	r2, [fp, #-12]
   19624:	movw	r3, #32767	; 0x7fff
   19628:	sdiv	r2, r3, r2
   1962c:	subs	r1, r1, r2
   19630:	sbcs	r0, r0, r2, asr #31
   19634:	bcc	1982c <__assert_fail@plt+0x873c>
   19638:	b	19850 <__assert_fail@plt+0x8760>
   1963c:	b	19640 <__assert_fail@plt+0x8550>
   19640:	ldr	r0, [pc, #2876]	; 1a184 <__assert_fail@plt+0x9094>
   19644:	ldr	r1, [fp, #-12]
   19648:	cmp	r1, r0
   1964c:	blt	19664 <__assert_fail@plt+0x8574>
   19650:	b	19670 <__assert_fail@plt+0x8580>
   19654:	ldr	r0, [fp, #-12]
   19658:	movw	r1, #0
   1965c:	cmp	r1, r0
   19660:	bge	19670 <__assert_fail@plt+0x8580>
   19664:	movw	r0, #0
   19668:	str	r0, [fp, #-36]	; 0xffffffdc
   1966c:	b	19688 <__assert_fail@plt+0x8598>
   19670:	ldr	r0, [fp, #-12]
   19674:	movw	r1, #0
   19678:	sub	r0, r1, r0
   1967c:	movw	r1, #32767	; 0x7fff
   19680:	sdiv	r0, r1, r0
   19684:	str	r0, [fp, #-36]	; 0xffffffdc
   19688:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1968c:	ldr	r1, [fp, #-8]
   19690:	ldr	r2, [r1]
   19694:	ldr	r1, [r1, #4]
   19698:	mvn	r1, r1
   1969c:	mvn	r2, r2
   196a0:	subs	r2, r2, r0
   196a4:	sbcs	r0, r1, r0, asr #31
   196a8:	bcs	1982c <__assert_fail@plt+0x873c>
   196ac:	b	19850 <__assert_fail@plt+0x8760>
   196b0:	b	196b4 <__assert_fail@plt+0x85c4>
   196b4:	b	19734 <__assert_fail@plt+0x8644>
   196b8:	b	19734 <__assert_fail@plt+0x8644>
   196bc:	ldr	r0, [fp, #-12]
   196c0:	cmn	r0, #1
   196c4:	bne	19734 <__assert_fail@plt+0x8644>
   196c8:	b	196ec <__assert_fail@plt+0x85fc>
   196cc:	ldr	r0, [fp, #-8]
   196d0:	ldr	r1, [r0]
   196d4:	ldr	r0, [r0, #4]
   196d8:	eor	r1, r1, #32768	; 0x8000
   196dc:	orr	r0, r1, r0
   196e0:	cmp	r0, #0
   196e4:	bne	1982c <__assert_fail@plt+0x873c>
   196e8:	b	19850 <__assert_fail@plt+0x8760>
   196ec:	ldr	r0, [fp, #-8]
   196f0:	ldr	r1, [r0]
   196f4:	ldr	r0, [r0, #4]
   196f8:	orr	r0, r1, r0
   196fc:	cmp	r0, #0
   19700:	beq	19850 <__assert_fail@plt+0x8760>
   19704:	b	19708 <__assert_fail@plt+0x8618>
   19708:	ldr	r0, [fp, #-8]
   1970c:	ldr	r1, [r0]
   19710:	ldr	r0, [r0, #4]
   19714:	subs	r1, r1, #1
   19718:	sbc	r0, r0, #0
   1971c:	lsr	r1, r1, #15
   19720:	orr	r1, r1, r0, lsl #17
   19724:	orr	r0, r1, r0, lsr #15
   19728:	cmp	r0, #0
   1972c:	bne	1982c <__assert_fail@plt+0x873c>
   19730:	b	19850 <__assert_fail@plt+0x8760>
   19734:	ldr	r0, [fp, #-12]
   19738:	movw	r1, #32768	; 0x8000
   1973c:	movt	r1, #65535	; 0xffff
   19740:	sdiv	r0, r1, r0
   19744:	ldr	r1, [fp, #-8]
   19748:	ldr	r2, [r1]
   1974c:	ldr	r1, [r1, #4]
   19750:	subs	r2, r0, r2
   19754:	rscs	r0, r1, r0, asr #31
   19758:	bcc	1982c <__assert_fail@plt+0x873c>
   1975c:	b	19850 <__assert_fail@plt+0x8760>
   19760:	ldr	r0, [fp, #-12]
   19764:	cmp	r0, #0
   19768:	bne	19770 <__assert_fail@plt+0x8680>
   1976c:	b	19850 <__assert_fail@plt+0x8760>
   19770:	mov	r0, #1
   19774:	cmp	r0, #0
   19778:	bne	19804 <__assert_fail@plt+0x8714>
   1977c:	b	19780 <__assert_fail@plt+0x8690>
   19780:	ldr	r0, [fp, #-8]
   19784:	ldr	r1, [r0]
   19788:	ldr	r0, [r0, #4]
   1978c:	and	r0, r1, r0
   19790:	cmn	r0, #1
   19794:	bne	197d4 <__assert_fail@plt+0x86e4>
   19798:	b	1979c <__assert_fail@plt+0x86ac>
   1979c:	b	197a0 <__assert_fail@plt+0x86b0>
   197a0:	ldr	r0, [pc, #4020]	; 1a75c <__assert_fail@plt+0x966c>
   197a4:	ldr	r1, [fp, #-12]
   197a8:	add	r0, r1, r0
   197ac:	movw	r1, #0
   197b0:	cmp	r1, r0
   197b4:	blt	1982c <__assert_fail@plt+0x873c>
   197b8:	b	19850 <__assert_fail@plt+0x8760>
   197bc:	ldr	r0, [fp, #-12]
   197c0:	sub	r0, r0, #1
   197c4:	movw	r1, #32767	; 0x7fff
   197c8:	cmp	r1, r0
   197cc:	blt	1982c <__assert_fail@plt+0x873c>
   197d0:	b	19850 <__assert_fail@plt+0x8760>
   197d4:	ldr	r0, [fp, #-8]
   197d8:	ldr	r2, [r0]
   197dc:	ldr	r3, [r0, #4]
   197e0:	movw	r0, #32768	; 0x8000
   197e4:	movt	r0, #65535	; 0xffff
   197e8:	mvn	r1, #0
   197ec:	bl	1ce40 <__assert_fail@plt+0xbd50>
   197f0:	ldr	r2, [fp, #-12]
   197f4:	subs	r0, r0, r2
   197f8:	sbcs	r1, r1, r2, asr #31
   197fc:	bcc	1982c <__assert_fail@plt+0x873c>
   19800:	b	19850 <__assert_fail@plt+0x8760>
   19804:	ldr	r0, [fp, #-12]
   19808:	movw	r1, #32767	; 0x7fff
   1980c:	sdiv	r0, r1, r0
   19810:	ldr	r1, [fp, #-8]
   19814:	ldr	r2, [r1]
   19818:	ldr	r1, [r1, #4]
   1981c:	subs	r2, r0, r2
   19820:	rscs	r0, r1, r0, asr #31
   19824:	bcs	19850 <__assert_fail@plt+0x8760>
   19828:	b	1982c <__assert_fail@plt+0x873c>
   1982c:	ldr	r0, [fp, #-8]
   19830:	ldr	r0, [r0]
   19834:	ldr	r1, [fp, #-12]
   19838:	mul	r0, r0, r1
   1983c:	sxth	r0, r0
   19840:	asr	r1, r0, #31
   19844:	str	r0, [fp, #-24]	; 0xffffffe8
   19848:	str	r1, [fp, #-20]	; 0xffffffec
   1984c:	b	1a954 <__assert_fail@plt+0x9864>
   19850:	ldr	r0, [fp, #-8]
   19854:	ldr	r0, [r0]
   19858:	ldr	r1, [fp, #-12]
   1985c:	mul	r0, r0, r1
   19860:	sxth	r0, r0
   19864:	asr	r1, r0, #31
   19868:	str	r0, [fp, #-24]	; 0xffffffe8
   1986c:	str	r1, [fp, #-20]	; 0xffffffec
   19870:	b	1a970 <__assert_fail@plt+0x9880>
   19874:	ldr	r0, [fp, #-12]
   19878:	cmp	r0, #0
   1987c:	bge	199b0 <__assert_fail@plt+0x88c0>
   19880:	mov	r0, #1
   19884:	cmp	r0, #0
   19888:	bne	19930 <__assert_fail@plt+0x8840>
   1988c:	b	19890 <__assert_fail@plt+0x87a0>
   19890:	b	19894 <__assert_fail@plt+0x87a4>
   19894:	ldr	r0, [fp, #-8]
   19898:	ldr	r1, [r0]
   1989c:	ldr	r0, [r0, #4]
   198a0:	ldr	r2, [fp, #-12]
   198a4:	movw	r3, #65535	; 0xffff
   198a8:	sdiv	r2, r3, r2
   198ac:	subs	r1, r1, r2
   198b0:	sbcs	r0, r0, r2, asr #31
   198b4:	bcc	19a64 <__assert_fail@plt+0x8974>
   198b8:	b	19a88 <__assert_fail@plt+0x8998>
   198bc:	b	198c0 <__assert_fail@plt+0x87d0>
   198c0:	ldr	r0, [pc, #2236]	; 1a184 <__assert_fail@plt+0x9094>
   198c4:	ldr	r1, [fp, #-12]
   198c8:	cmp	r1, r0
   198cc:	blt	198e4 <__assert_fail@plt+0x87f4>
   198d0:	b	198f0 <__assert_fail@plt+0x8800>
   198d4:	ldr	r0, [fp, #-12]
   198d8:	movw	r1, #0
   198dc:	cmp	r1, r0
   198e0:	bge	198f0 <__assert_fail@plt+0x8800>
   198e4:	movw	r0, #0
   198e8:	str	r0, [fp, #-40]	; 0xffffffd8
   198ec:	b	19908 <__assert_fail@plt+0x8818>
   198f0:	ldr	r0, [fp, #-12]
   198f4:	movw	r1, #0
   198f8:	sub	r0, r1, r0
   198fc:	movw	r1, #65535	; 0xffff
   19900:	sdiv	r0, r1, r0
   19904:	str	r0, [fp, #-40]	; 0xffffffd8
   19908:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1990c:	ldr	r1, [fp, #-8]
   19910:	ldr	r2, [r1]
   19914:	ldr	r1, [r1, #4]
   19918:	mvn	r1, r1
   1991c:	mvn	r2, r2
   19920:	subs	r2, r2, r0
   19924:	sbcs	r0, r1, r0, asr #31
   19928:	bcs	19a64 <__assert_fail@plt+0x8974>
   1992c:	b	19a88 <__assert_fail@plt+0x8998>
   19930:	b	19934 <__assert_fail@plt+0x8844>
   19934:	b	19994 <__assert_fail@plt+0x88a4>
   19938:	b	19994 <__assert_fail@plt+0x88a4>
   1993c:	ldr	r0, [fp, #-12]
   19940:	cmn	r0, #1
   19944:	bne	19994 <__assert_fail@plt+0x88a4>
   19948:	b	19968 <__assert_fail@plt+0x8878>
   1994c:	ldr	r0, [fp, #-8]
   19950:	ldr	r1, [r0]
   19954:	ldr	r0, [r0, #4]
   19958:	orr	r0, r1, r0
   1995c:	cmp	r0, #0
   19960:	bne	19a64 <__assert_fail@plt+0x8974>
   19964:	b	19a88 <__assert_fail@plt+0x8998>
   19968:	ldr	r0, [fp, #-8]
   1996c:	ldr	r1, [r0]
   19970:	ldr	r0, [r0, #4]
   19974:	orr	r0, r1, r0
   19978:	cmp	r0, #0
   1997c:	beq	19a88 <__assert_fail@plt+0x8998>
   19980:	b	19984 <__assert_fail@plt+0x8894>
   19984:	mov	r0, #0
   19988:	cmp	r0, #0
   1998c:	bne	19a64 <__assert_fail@plt+0x8974>
   19990:	b	19a88 <__assert_fail@plt+0x8998>
   19994:	ldr	r0, [fp, #-8]
   19998:	ldr	r1, [r0]
   1999c:	ldr	r0, [r0, #4]
   199a0:	orr	r0, r1, r0
   199a4:	cmp	r0, #0
   199a8:	bne	19a64 <__assert_fail@plt+0x8974>
   199ac:	b	19a88 <__assert_fail@plt+0x8998>
   199b0:	ldr	r0, [fp, #-12]
   199b4:	cmp	r0, #0
   199b8:	bne	199c0 <__assert_fail@plt+0x88d0>
   199bc:	b	19a88 <__assert_fail@plt+0x8998>
   199c0:	mov	r0, #1
   199c4:	cmp	r0, #0
   199c8:	bne	19a3c <__assert_fail@plt+0x894c>
   199cc:	b	199d0 <__assert_fail@plt+0x88e0>
   199d0:	b	199d8 <__assert_fail@plt+0x88e8>
   199d4:	b	199dc <__assert_fail@plt+0x88ec>
   199d8:	b	19a2c <__assert_fail@plt+0x893c>
   199dc:	ldr	r0, [fp, #-8]
   199e0:	ldr	r1, [r0]
   199e4:	ldr	r0, [r0, #4]
   199e8:	and	r0, r1, r0
   199ec:	cmn	r0, #1
   199f0:	bne	19a2c <__assert_fail@plt+0x893c>
   199f4:	b	199f8 <__assert_fail@plt+0x8908>
   199f8:	b	199fc <__assert_fail@plt+0x890c>
   199fc:	ldr	r0, [fp, #-12]
   19a00:	add	r0, r0, #0
   19a04:	movw	r1, #0
   19a08:	cmp	r1, r0
   19a0c:	blt	19a64 <__assert_fail@plt+0x8974>
   19a10:	b	19a88 <__assert_fail@plt+0x8998>
   19a14:	ldr	r0, [fp, #-12]
   19a18:	sub	r0, r0, #1
   19a1c:	mvn	r1, #0
   19a20:	cmp	r1, r0
   19a24:	blt	19a64 <__assert_fail@plt+0x8974>
   19a28:	b	19a88 <__assert_fail@plt+0x8998>
   19a2c:	ldr	r0, [fp, #-12]
   19a30:	cmp	r0, #0
   19a34:	bne	19a64 <__assert_fail@plt+0x8974>
   19a38:	b	19a88 <__assert_fail@plt+0x8998>
   19a3c:	ldr	r0, [fp, #-12]
   19a40:	movw	r1, #65535	; 0xffff
   19a44:	sdiv	r0, r1, r0
   19a48:	ldr	r1, [fp, #-8]
   19a4c:	ldr	r2, [r1]
   19a50:	ldr	r1, [r1, #4]
   19a54:	subs	r2, r0, r2
   19a58:	rscs	r0, r1, r0, asr #31
   19a5c:	bcs	19a88 <__assert_fail@plt+0x8998>
   19a60:	b	19a64 <__assert_fail@plt+0x8974>
   19a64:	ldr	r0, [fp, #-8]
   19a68:	ldr	r0, [r0]
   19a6c:	ldr	r1, [fp, #-12]
   19a70:	mul	r0, r0, r1
   19a74:	uxth	r0, r0
   19a78:	mov	r1, #0
   19a7c:	str	r1, [fp, #-20]	; 0xffffffec
   19a80:	str	r0, [fp, #-24]	; 0xffffffe8
   19a84:	b	1a954 <__assert_fail@plt+0x9864>
   19a88:	ldr	r0, [fp, #-8]
   19a8c:	ldr	r0, [r0]
   19a90:	ldr	r1, [fp, #-12]
   19a94:	mul	r0, r0, r1
   19a98:	uxth	r0, r0
   19a9c:	mov	r1, #0
   19aa0:	str	r1, [fp, #-20]	; 0xffffffec
   19aa4:	str	r0, [fp, #-24]	; 0xffffffe8
   19aa8:	b	1a970 <__assert_fail@plt+0x9880>
   19aac:	b	19f40 <__assert_fail@plt+0x8e50>
   19ab0:	b	19d10 <__assert_fail@plt+0x8c20>
   19ab4:	ldr	r0, [fp, #-12]
   19ab8:	cmp	r0, #0
   19abc:	bge	19c0c <__assert_fail@plt+0x8b1c>
   19ac0:	mov	r0, #1
   19ac4:	cmp	r0, #0
   19ac8:	bne	19b70 <__assert_fail@plt+0x8a80>
   19acc:	b	19ad0 <__assert_fail@plt+0x89e0>
   19ad0:	b	19ad4 <__assert_fail@plt+0x89e4>
   19ad4:	ldr	r0, [fp, #-8]
   19ad8:	ldr	r1, [r0]
   19adc:	ldr	r0, [r0, #4]
   19ae0:	ldr	r2, [fp, #-12]
   19ae4:	mvn	r3, #-2147483648	; 0x80000000
   19ae8:	sdiv	r2, r3, r2
   19aec:	subs	r1, r1, r2
   19af0:	sbcs	r0, r0, r2, asr #31
   19af4:	bcc	19cd0 <__assert_fail@plt+0x8be0>
   19af8:	b	19cf0 <__assert_fail@plt+0x8c00>
   19afc:	b	19b00 <__assert_fail@plt+0x8a10>
   19b00:	ldr	r0, [pc, #3728]	; 1a998 <__assert_fail@plt+0x98a8>
   19b04:	ldr	r1, [fp, #-12]
   19b08:	cmp	r1, r0
   19b0c:	blt	19b24 <__assert_fail@plt+0x8a34>
   19b10:	b	19b30 <__assert_fail@plt+0x8a40>
   19b14:	ldr	r0, [fp, #-12]
   19b18:	movw	r1, #0
   19b1c:	cmp	r1, r0
   19b20:	bge	19b30 <__assert_fail@plt+0x8a40>
   19b24:	movw	r0, #0
   19b28:	str	r0, [fp, #-44]	; 0xffffffd4
   19b2c:	b	19b48 <__assert_fail@plt+0x8a58>
   19b30:	ldr	r0, [pc, #3684]	; 1a99c <__assert_fail@plt+0x98ac>
   19b34:	ldr	r1, [fp, #-12]
   19b38:	movw	r2, #0
   19b3c:	sub	r1, r2, r1
   19b40:	sdiv	r0, r0, r1
   19b44:	str	r0, [fp, #-44]	; 0xffffffd4
   19b48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b4c:	ldr	r1, [fp, #-8]
   19b50:	ldr	r2, [r1]
   19b54:	ldr	r1, [r1, #4]
   19b58:	mvn	r1, r1
   19b5c:	mvn	r2, r2
   19b60:	subs	r2, r2, r0
   19b64:	sbcs	r0, r1, r0, asr #31
   19b68:	bcs	19cd0 <__assert_fail@plt+0x8be0>
   19b6c:	b	19cf0 <__assert_fail@plt+0x8c00>
   19b70:	ldr	r0, [fp, #-12]
   19b74:	cmn	r0, #1
   19b78:	bne	19be4 <__assert_fail@plt+0x8af4>
   19b7c:	b	19ba0 <__assert_fail@plt+0x8ab0>
   19b80:	ldr	r0, [fp, #-8]
   19b84:	ldr	r1, [r0]
   19b88:	ldr	r0, [r0, #4]
   19b8c:	eor	r1, r1, #-2147483648	; 0x80000000
   19b90:	orr	r0, r1, r0
   19b94:	cmp	r0, #0
   19b98:	bne	19cd0 <__assert_fail@plt+0x8be0>
   19b9c:	b	19cf0 <__assert_fail@plt+0x8c00>
   19ba0:	ldr	r0, [fp, #-8]
   19ba4:	ldr	r1, [r0]
   19ba8:	ldr	r0, [r0, #4]
   19bac:	orr	r0, r1, r0
   19bb0:	cmp	r0, #0
   19bb4:	beq	19cf0 <__assert_fail@plt+0x8c00>
   19bb8:	b	19bbc <__assert_fail@plt+0x8acc>
   19bbc:	ldr	r0, [fp, #-8]
   19bc0:	ldr	r1, [r0]
   19bc4:	ldr	r0, [r0, #4]
   19bc8:	subs	r1, r1, #1
   19bcc:	sbc	r0, r0, #0
   19bd0:	mvn	r2, #-2147483648	; 0x80000000
   19bd4:	subs	r1, r2, r1
   19bd8:	rscs	r0, r0, #0
   19bdc:	bcc	19cd0 <__assert_fail@plt+0x8be0>
   19be0:	b	19cf0 <__assert_fail@plt+0x8c00>
   19be4:	ldr	r0, [fp, #-12]
   19be8:	mov	r1, #-2147483648	; 0x80000000
   19bec:	sdiv	r0, r1, r0
   19bf0:	ldr	r1, [fp, #-8]
   19bf4:	ldr	r2, [r1]
   19bf8:	ldr	r1, [r1, #4]
   19bfc:	subs	r2, r0, r2
   19c00:	rscs	r0, r1, r0, asr #31
   19c04:	bcc	19cd0 <__assert_fail@plt+0x8be0>
   19c08:	b	19cf0 <__assert_fail@plt+0x8c00>
   19c0c:	ldr	r0, [fp, #-12]
   19c10:	cmp	r0, #0
   19c14:	bne	19c1c <__assert_fail@plt+0x8b2c>
   19c18:	b	19cf0 <__assert_fail@plt+0x8c00>
   19c1c:	mov	r0, #1
   19c20:	cmp	r0, #0
   19c24:	bne	19ca8 <__assert_fail@plt+0x8bb8>
   19c28:	b	19c2c <__assert_fail@plt+0x8b3c>
   19c2c:	ldr	r0, [fp, #-8]
   19c30:	ldr	r1, [r0]
   19c34:	ldr	r0, [r0, #4]
   19c38:	and	r0, r1, r0
   19c3c:	cmn	r0, #1
   19c40:	bne	19c7c <__assert_fail@plt+0x8b8c>
   19c44:	b	19c48 <__assert_fail@plt+0x8b58>
   19c48:	b	19c4c <__assert_fail@plt+0x8b5c>
   19c4c:	ldr	r0, [fp, #-12]
   19c50:	add	r0, r0, #-2147483648	; 0x80000000
   19c54:	movw	r1, #0
   19c58:	cmp	r1, r0
   19c5c:	blt	19cd0 <__assert_fail@plt+0x8be0>
   19c60:	b	19cf0 <__assert_fail@plt+0x8c00>
   19c64:	ldr	r0, [pc, #3376]	; 1a99c <__assert_fail@plt+0x98ac>
   19c68:	ldr	r1, [fp, #-12]
   19c6c:	sub	r1, r1, #1
   19c70:	cmp	r0, r1
   19c74:	blt	19cd0 <__assert_fail@plt+0x8be0>
   19c78:	b	19cf0 <__assert_fail@plt+0x8c00>
   19c7c:	ldr	r0, [fp, #-8]
   19c80:	ldr	r2, [r0]
   19c84:	ldr	r3, [r0, #4]
   19c88:	mov	r0, #-2147483648	; 0x80000000
   19c8c:	mvn	r1, #0
   19c90:	bl	1ce40 <__assert_fail@plt+0xbd50>
   19c94:	ldr	r2, [fp, #-12]
   19c98:	subs	r0, r0, r2
   19c9c:	sbcs	r1, r1, r2, asr #31
   19ca0:	bcc	19cd0 <__assert_fail@plt+0x8be0>
   19ca4:	b	19cf0 <__assert_fail@plt+0x8c00>
   19ca8:	ldr	r0, [fp, #-12]
   19cac:	mvn	r1, #-2147483648	; 0x80000000
   19cb0:	sdiv	r0, r1, r0
   19cb4:	ldr	r1, [fp, #-8]
   19cb8:	ldr	r2, [r1]
   19cbc:	ldr	r1, [r1, #4]
   19cc0:	subs	r2, r0, r2
   19cc4:	rscs	r0, r1, r0, asr #31
   19cc8:	bcs	19cf0 <__assert_fail@plt+0x8c00>
   19ccc:	b	19cd0 <__assert_fail@plt+0x8be0>
   19cd0:	ldr	r0, [fp, #-8]
   19cd4:	ldr	r0, [r0]
   19cd8:	ldr	r1, [fp, #-12]
   19cdc:	mul	r0, r0, r1
   19ce0:	asr	r1, r0, #31
   19ce4:	str	r0, [fp, #-24]	; 0xffffffe8
   19ce8:	str	r1, [fp, #-20]	; 0xffffffec
   19cec:	b	1a954 <__assert_fail@plt+0x9864>
   19cf0:	ldr	r0, [fp, #-8]
   19cf4:	ldr	r0, [r0]
   19cf8:	ldr	r1, [fp, #-12]
   19cfc:	mul	r0, r0, r1
   19d00:	asr	r1, r0, #31
   19d04:	str	r0, [fp, #-24]	; 0xffffffe8
   19d08:	str	r1, [fp, #-20]	; 0xffffffec
   19d0c:	b	1a970 <__assert_fail@plt+0x9880>
   19d10:	ldr	r0, [fp, #-12]
   19d14:	cmp	r0, #0
   19d18:	bge	19e4c <__assert_fail@plt+0x8d5c>
   19d1c:	mov	r0, #1
   19d20:	cmp	r0, #0
   19d24:	bne	19dcc <__assert_fail@plt+0x8cdc>
   19d28:	b	19d2c <__assert_fail@plt+0x8c3c>
   19d2c:	b	19d58 <__assert_fail@plt+0x8c68>
   19d30:	ldr	r0, [fp, #-8]
   19d34:	ldr	r1, [r0]
   19d38:	ldr	r0, [r0, #4]
   19d3c:	ldr	r2, [fp, #-12]
   19d40:	mvn	r3, #0
   19d44:	udiv	r2, r3, r2
   19d48:	subs	r1, r1, r2
   19d4c:	sbcs	r0, r0, #0
   19d50:	bcc	19f00 <__assert_fail@plt+0x8e10>
   19d54:	b	19f20 <__assert_fail@plt+0x8e30>
   19d58:	b	19d5c <__assert_fail@plt+0x8c6c>
   19d5c:	ldr	r0, [pc, #3124]	; 1a998 <__assert_fail@plt+0x98a8>
   19d60:	ldr	r1, [fp, #-12]
   19d64:	cmp	r1, r0
   19d68:	blt	19d80 <__assert_fail@plt+0x8c90>
   19d6c:	b	19d8c <__assert_fail@plt+0x8c9c>
   19d70:	ldr	r0, [fp, #-12]
   19d74:	movw	r1, #0
   19d78:	cmp	r1, r0
   19d7c:	bge	19d8c <__assert_fail@plt+0x8c9c>
   19d80:	movw	r0, #1
   19d84:	str	r0, [fp, #-48]	; 0xffffffd0
   19d88:	b	19da4 <__assert_fail@plt+0x8cb4>
   19d8c:	ldr	r0, [fp, #-12]
   19d90:	movw	r1, #0
   19d94:	sub	r0, r1, r0
   19d98:	mvn	r1, #0
   19d9c:	udiv	r0, r1, r0
   19da0:	str	r0, [fp, #-48]	; 0xffffffd0
   19da4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19da8:	ldr	r1, [fp, #-8]
   19dac:	ldr	r2, [r1]
   19db0:	ldr	r1, [r1, #4]
   19db4:	mvn	r1, r1
   19db8:	mvn	r2, r2
   19dbc:	subs	r0, r2, r0
   19dc0:	sbcs	r1, r1, #0
   19dc4:	bcs	19f00 <__assert_fail@plt+0x8e10>
   19dc8:	b	19f20 <__assert_fail@plt+0x8e30>
   19dcc:	b	19dd0 <__assert_fail@plt+0x8ce0>
   19dd0:	b	19e30 <__assert_fail@plt+0x8d40>
   19dd4:	b	19e30 <__assert_fail@plt+0x8d40>
   19dd8:	ldr	r0, [fp, #-12]
   19ddc:	cmn	r0, #1
   19de0:	bne	19e30 <__assert_fail@plt+0x8d40>
   19de4:	b	19e04 <__assert_fail@plt+0x8d14>
   19de8:	ldr	r0, [fp, #-8]
   19dec:	ldr	r1, [r0]
   19df0:	ldr	r0, [r0, #4]
   19df4:	orr	r0, r1, r0
   19df8:	cmp	r0, #0
   19dfc:	bne	19f00 <__assert_fail@plt+0x8e10>
   19e00:	b	19f20 <__assert_fail@plt+0x8e30>
   19e04:	ldr	r0, [fp, #-8]
   19e08:	ldr	r1, [r0]
   19e0c:	ldr	r0, [r0, #4]
   19e10:	orr	r0, r1, r0
   19e14:	cmp	r0, #0
   19e18:	beq	19f20 <__assert_fail@plt+0x8e30>
   19e1c:	b	19e20 <__assert_fail@plt+0x8d30>
   19e20:	mov	r0, #0
   19e24:	cmp	r0, #0
   19e28:	bne	19f00 <__assert_fail@plt+0x8e10>
   19e2c:	b	19f20 <__assert_fail@plt+0x8e30>
   19e30:	ldr	r0, [fp, #-8]
   19e34:	ldr	r1, [r0]
   19e38:	ldr	r0, [r0, #4]
   19e3c:	orr	r0, r1, r0
   19e40:	cmp	r0, #0
   19e44:	bne	19f00 <__assert_fail@plt+0x8e10>
   19e48:	b	19f20 <__assert_fail@plt+0x8e30>
   19e4c:	ldr	r0, [fp, #-12]
   19e50:	cmp	r0, #0
   19e54:	bne	19e5c <__assert_fail@plt+0x8d6c>
   19e58:	b	19f20 <__assert_fail@plt+0x8e30>
   19e5c:	mov	r0, #1
   19e60:	cmp	r0, #0
   19e64:	bne	19ed8 <__assert_fail@plt+0x8de8>
   19e68:	b	19e6c <__assert_fail@plt+0x8d7c>
   19e6c:	b	19e74 <__assert_fail@plt+0x8d84>
   19e70:	b	19e78 <__assert_fail@plt+0x8d88>
   19e74:	b	19ec8 <__assert_fail@plt+0x8dd8>
   19e78:	ldr	r0, [fp, #-8]
   19e7c:	ldr	r1, [r0]
   19e80:	ldr	r0, [r0, #4]
   19e84:	and	r0, r1, r0
   19e88:	cmn	r0, #1
   19e8c:	bne	19ec8 <__assert_fail@plt+0x8dd8>
   19e90:	b	19e94 <__assert_fail@plt+0x8da4>
   19e94:	b	19e98 <__assert_fail@plt+0x8da8>
   19e98:	ldr	r0, [fp, #-12]
   19e9c:	add	r0, r0, #0
   19ea0:	movw	r1, #0
   19ea4:	cmp	r1, r0
   19ea8:	blt	19f00 <__assert_fail@plt+0x8e10>
   19eac:	b	19f20 <__assert_fail@plt+0x8e30>
   19eb0:	ldr	r0, [fp, #-12]
   19eb4:	sub	r0, r0, #1
   19eb8:	mvn	r1, #0
   19ebc:	cmp	r1, r0
   19ec0:	blt	19f00 <__assert_fail@plt+0x8e10>
   19ec4:	b	19f20 <__assert_fail@plt+0x8e30>
   19ec8:	ldr	r0, [fp, #-12]
   19ecc:	cmp	r0, #0
   19ed0:	bne	19f00 <__assert_fail@plt+0x8e10>
   19ed4:	b	19f20 <__assert_fail@plt+0x8e30>
   19ed8:	ldr	r0, [fp, #-12]
   19edc:	mvn	r1, #0
   19ee0:	udiv	r0, r1, r0
   19ee4:	ldr	r1, [fp, #-8]
   19ee8:	ldr	r2, [r1]
   19eec:	ldr	r1, [r1, #4]
   19ef0:	subs	r0, r0, r2
   19ef4:	rscs	r1, r1, #0
   19ef8:	bcs	19f20 <__assert_fail@plt+0x8e30>
   19efc:	b	19f00 <__assert_fail@plt+0x8e10>
   19f00:	ldr	r0, [fp, #-8]
   19f04:	ldr	r0, [r0]
   19f08:	ldr	r1, [fp, #-12]
   19f0c:	mul	r0, r0, r1
   19f10:	mov	r1, #0
   19f14:	str	r1, [fp, #-20]	; 0xffffffec
   19f18:	str	r0, [fp, #-24]	; 0xffffffe8
   19f1c:	b	1a954 <__assert_fail@plt+0x9864>
   19f20:	ldr	r0, [fp, #-8]
   19f24:	ldr	r0, [r0]
   19f28:	ldr	r1, [fp, #-12]
   19f2c:	mul	r0, r0, r1
   19f30:	mov	r1, #0
   19f34:	str	r1, [fp, #-20]	; 0xffffffec
   19f38:	str	r0, [fp, #-24]	; 0xffffffe8
   19f3c:	b	1a970 <__assert_fail@plt+0x9880>
   19f40:	b	1a3d8 <__assert_fail@plt+0x92e8>
   19f44:	b	1a1a8 <__assert_fail@plt+0x90b8>
   19f48:	ldr	r0, [fp, #-12]
   19f4c:	cmp	r0, #0
   19f50:	bge	1a0a0 <__assert_fail@plt+0x8fb0>
   19f54:	mov	r0, #1
   19f58:	cmp	r0, #0
   19f5c:	bne	1a004 <__assert_fail@plt+0x8f14>
   19f60:	b	19f64 <__assert_fail@plt+0x8e74>
   19f64:	b	19f68 <__assert_fail@plt+0x8e78>
   19f68:	ldr	r0, [fp, #-8]
   19f6c:	ldr	r1, [r0]
   19f70:	ldr	r0, [r0, #4]
   19f74:	ldr	r2, [fp, #-12]
   19f78:	mvn	r3, #-2147483648	; 0x80000000
   19f7c:	sdiv	r2, r3, r2
   19f80:	subs	r1, r1, r2
   19f84:	sbcs	r0, r0, r2, asr #31
   19f88:	bcc	1a164 <__assert_fail@plt+0x9074>
   19f8c:	b	1a188 <__assert_fail@plt+0x9098>
   19f90:	b	19f94 <__assert_fail@plt+0x8ea4>
   19f94:	ldr	r0, [pc, #2556]	; 1a998 <__assert_fail@plt+0x98a8>
   19f98:	ldr	r1, [fp, #-12]
   19f9c:	cmp	r1, r0
   19fa0:	blt	19fb8 <__assert_fail@plt+0x8ec8>
   19fa4:	b	19fc4 <__assert_fail@plt+0x8ed4>
   19fa8:	ldr	r0, [fp, #-12]
   19fac:	movw	r1, #0
   19fb0:	cmp	r1, r0
   19fb4:	bge	19fc4 <__assert_fail@plt+0x8ed4>
   19fb8:	movw	r0, #0
   19fbc:	str	r0, [fp, #-52]	; 0xffffffcc
   19fc0:	b	19fdc <__assert_fail@plt+0x8eec>
   19fc4:	ldr	r0, [pc, #2512]	; 1a99c <__assert_fail@plt+0x98ac>
   19fc8:	ldr	r1, [fp, #-12]
   19fcc:	movw	r2, #0
   19fd0:	sub	r1, r2, r1
   19fd4:	sdiv	r0, r0, r1
   19fd8:	str	r0, [fp, #-52]	; 0xffffffcc
   19fdc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19fe0:	ldr	r1, [fp, #-8]
   19fe4:	ldr	r2, [r1]
   19fe8:	ldr	r1, [r1, #4]
   19fec:	mvn	r1, r1
   19ff0:	mvn	r2, r2
   19ff4:	subs	r2, r2, r0
   19ff8:	sbcs	r0, r1, r0, asr #31
   19ffc:	bcs	1a164 <__assert_fail@plt+0x9074>
   1a000:	b	1a188 <__assert_fail@plt+0x9098>
   1a004:	ldr	r0, [fp, #-12]
   1a008:	cmn	r0, #1
   1a00c:	bne	1a078 <__assert_fail@plt+0x8f88>
   1a010:	b	1a034 <__assert_fail@plt+0x8f44>
   1a014:	ldr	r0, [fp, #-8]
   1a018:	ldr	r1, [r0]
   1a01c:	ldr	r0, [r0, #4]
   1a020:	eor	r1, r1, #-2147483648	; 0x80000000
   1a024:	orr	r0, r1, r0
   1a028:	cmp	r0, #0
   1a02c:	bne	1a164 <__assert_fail@plt+0x9074>
   1a030:	b	1a188 <__assert_fail@plt+0x9098>
   1a034:	ldr	r0, [fp, #-8]
   1a038:	ldr	r1, [r0]
   1a03c:	ldr	r0, [r0, #4]
   1a040:	orr	r0, r1, r0
   1a044:	cmp	r0, #0
   1a048:	beq	1a188 <__assert_fail@plt+0x9098>
   1a04c:	b	1a050 <__assert_fail@plt+0x8f60>
   1a050:	ldr	r0, [fp, #-8]
   1a054:	ldr	r1, [r0]
   1a058:	ldr	r0, [r0, #4]
   1a05c:	subs	r1, r1, #1
   1a060:	sbc	r0, r0, #0
   1a064:	mvn	r2, #-2147483648	; 0x80000000
   1a068:	subs	r1, r2, r1
   1a06c:	rscs	r0, r0, #0
   1a070:	bcc	1a164 <__assert_fail@plt+0x9074>
   1a074:	b	1a188 <__assert_fail@plt+0x9098>
   1a078:	ldr	r0, [fp, #-12]
   1a07c:	mov	r1, #-2147483648	; 0x80000000
   1a080:	sdiv	r0, r1, r0
   1a084:	ldr	r1, [fp, #-8]
   1a088:	ldr	r2, [r1]
   1a08c:	ldr	r1, [r1, #4]
   1a090:	subs	r2, r0, r2
   1a094:	rscs	r0, r1, r0, asr #31
   1a098:	bcc	1a164 <__assert_fail@plt+0x9074>
   1a09c:	b	1a188 <__assert_fail@plt+0x9098>
   1a0a0:	ldr	r0, [fp, #-12]
   1a0a4:	cmp	r0, #0
   1a0a8:	bne	1a0b0 <__assert_fail@plt+0x8fc0>
   1a0ac:	b	1a188 <__assert_fail@plt+0x9098>
   1a0b0:	mov	r0, #1
   1a0b4:	cmp	r0, #0
   1a0b8:	bne	1a13c <__assert_fail@plt+0x904c>
   1a0bc:	b	1a0c0 <__assert_fail@plt+0x8fd0>
   1a0c0:	ldr	r0, [fp, #-8]
   1a0c4:	ldr	r1, [r0]
   1a0c8:	ldr	r0, [r0, #4]
   1a0cc:	and	r0, r1, r0
   1a0d0:	cmn	r0, #1
   1a0d4:	bne	1a110 <__assert_fail@plt+0x9020>
   1a0d8:	b	1a0dc <__assert_fail@plt+0x8fec>
   1a0dc:	b	1a0e0 <__assert_fail@plt+0x8ff0>
   1a0e0:	ldr	r0, [fp, #-12]
   1a0e4:	add	r0, r0, #-2147483648	; 0x80000000
   1a0e8:	movw	r1, #0
   1a0ec:	cmp	r1, r0
   1a0f0:	blt	1a164 <__assert_fail@plt+0x9074>
   1a0f4:	b	1a188 <__assert_fail@plt+0x9098>
   1a0f8:	ldr	r0, [pc, #2204]	; 1a99c <__assert_fail@plt+0x98ac>
   1a0fc:	ldr	r1, [fp, #-12]
   1a100:	sub	r1, r1, #1
   1a104:	cmp	r0, r1
   1a108:	blt	1a164 <__assert_fail@plt+0x9074>
   1a10c:	b	1a188 <__assert_fail@plt+0x9098>
   1a110:	ldr	r0, [fp, #-8]
   1a114:	ldr	r2, [r0]
   1a118:	ldr	r3, [r0, #4]
   1a11c:	mov	r0, #-2147483648	; 0x80000000
   1a120:	mvn	r1, #0
   1a124:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1a128:	ldr	r2, [fp, #-12]
   1a12c:	subs	r0, r0, r2
   1a130:	sbcs	r1, r1, r2, asr #31
   1a134:	bcc	1a164 <__assert_fail@plt+0x9074>
   1a138:	b	1a188 <__assert_fail@plt+0x9098>
   1a13c:	ldr	r0, [fp, #-12]
   1a140:	mvn	r1, #-2147483648	; 0x80000000
   1a144:	sdiv	r0, r1, r0
   1a148:	ldr	r1, [fp, #-8]
   1a14c:	ldr	r2, [r1]
   1a150:	ldr	r1, [r1, #4]
   1a154:	subs	r2, r0, r2
   1a158:	rscs	r0, r1, r0, asr #31
   1a15c:	bcs	1a188 <__assert_fail@plt+0x9098>
   1a160:	b	1a164 <__assert_fail@plt+0x9074>
   1a164:	ldr	r0, [fp, #-8]
   1a168:	ldr	r0, [r0]
   1a16c:	ldr	r1, [fp, #-12]
   1a170:	mul	r0, r0, r1
   1a174:	asr	r1, r0, #31
   1a178:	str	r0, [fp, #-24]	; 0xffffffe8
   1a17c:	str	r1, [fp, #-20]	; 0xffffffec
   1a180:	b	1a954 <__assert_fail@plt+0x9864>
   1a184:	andhi	r0, r0, r1
   1a188:	ldr	r0, [fp, #-8]
   1a18c:	ldr	r0, [r0]
   1a190:	ldr	r1, [fp, #-12]
   1a194:	mul	r0, r0, r1
   1a198:	asr	r1, r0, #31
   1a19c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a1a0:	str	r1, [fp, #-20]	; 0xffffffec
   1a1a4:	b	1a970 <__assert_fail@plt+0x9880>
   1a1a8:	ldr	r0, [fp, #-12]
   1a1ac:	cmp	r0, #0
   1a1b0:	bge	1a2e4 <__assert_fail@plt+0x91f4>
   1a1b4:	mov	r0, #1
   1a1b8:	cmp	r0, #0
   1a1bc:	bne	1a264 <__assert_fail@plt+0x9174>
   1a1c0:	b	1a1c4 <__assert_fail@plt+0x90d4>
   1a1c4:	b	1a1f0 <__assert_fail@plt+0x9100>
   1a1c8:	ldr	r0, [fp, #-8]
   1a1cc:	ldr	r1, [r0]
   1a1d0:	ldr	r0, [r0, #4]
   1a1d4:	ldr	r2, [fp, #-12]
   1a1d8:	mvn	r3, #0
   1a1dc:	udiv	r2, r3, r2
   1a1e0:	subs	r1, r1, r2
   1a1e4:	sbcs	r0, r0, #0
   1a1e8:	bcc	1a398 <__assert_fail@plt+0x92a8>
   1a1ec:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a1f0:	b	1a1f4 <__assert_fail@plt+0x9104>
   1a1f4:	ldr	r0, [pc, #1948]	; 1a998 <__assert_fail@plt+0x98a8>
   1a1f8:	ldr	r1, [fp, #-12]
   1a1fc:	cmp	r1, r0
   1a200:	blt	1a218 <__assert_fail@plt+0x9128>
   1a204:	b	1a224 <__assert_fail@plt+0x9134>
   1a208:	ldr	r0, [fp, #-12]
   1a20c:	movw	r1, #0
   1a210:	cmp	r1, r0
   1a214:	bge	1a224 <__assert_fail@plt+0x9134>
   1a218:	movw	r0, #1
   1a21c:	str	r0, [sp, #56]	; 0x38
   1a220:	b	1a23c <__assert_fail@plt+0x914c>
   1a224:	ldr	r0, [fp, #-12]
   1a228:	movw	r1, #0
   1a22c:	sub	r0, r1, r0
   1a230:	mvn	r1, #0
   1a234:	udiv	r0, r1, r0
   1a238:	str	r0, [sp, #56]	; 0x38
   1a23c:	ldr	r0, [sp, #56]	; 0x38
   1a240:	ldr	r1, [fp, #-8]
   1a244:	ldr	r2, [r1]
   1a248:	ldr	r1, [r1, #4]
   1a24c:	mvn	r1, r1
   1a250:	mvn	r2, r2
   1a254:	subs	r0, r2, r0
   1a258:	sbcs	r1, r1, #0
   1a25c:	bcs	1a398 <__assert_fail@plt+0x92a8>
   1a260:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a264:	b	1a268 <__assert_fail@plt+0x9178>
   1a268:	b	1a2c8 <__assert_fail@plt+0x91d8>
   1a26c:	b	1a2c8 <__assert_fail@plt+0x91d8>
   1a270:	ldr	r0, [fp, #-12]
   1a274:	cmn	r0, #1
   1a278:	bne	1a2c8 <__assert_fail@plt+0x91d8>
   1a27c:	b	1a29c <__assert_fail@plt+0x91ac>
   1a280:	ldr	r0, [fp, #-8]
   1a284:	ldr	r1, [r0]
   1a288:	ldr	r0, [r0, #4]
   1a28c:	orr	r0, r1, r0
   1a290:	cmp	r0, #0
   1a294:	bne	1a398 <__assert_fail@plt+0x92a8>
   1a298:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a29c:	ldr	r0, [fp, #-8]
   1a2a0:	ldr	r1, [r0]
   1a2a4:	ldr	r0, [r0, #4]
   1a2a8:	orr	r0, r1, r0
   1a2ac:	cmp	r0, #0
   1a2b0:	beq	1a3b8 <__assert_fail@plt+0x92c8>
   1a2b4:	b	1a2b8 <__assert_fail@plt+0x91c8>
   1a2b8:	mov	r0, #0
   1a2bc:	cmp	r0, #0
   1a2c0:	bne	1a398 <__assert_fail@plt+0x92a8>
   1a2c4:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a2c8:	ldr	r0, [fp, #-8]
   1a2cc:	ldr	r1, [r0]
   1a2d0:	ldr	r0, [r0, #4]
   1a2d4:	orr	r0, r1, r0
   1a2d8:	cmp	r0, #0
   1a2dc:	bne	1a398 <__assert_fail@plt+0x92a8>
   1a2e0:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a2e4:	ldr	r0, [fp, #-12]
   1a2e8:	cmp	r0, #0
   1a2ec:	bne	1a2f4 <__assert_fail@plt+0x9204>
   1a2f0:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a2f4:	mov	r0, #1
   1a2f8:	cmp	r0, #0
   1a2fc:	bne	1a370 <__assert_fail@plt+0x9280>
   1a300:	b	1a304 <__assert_fail@plt+0x9214>
   1a304:	b	1a30c <__assert_fail@plt+0x921c>
   1a308:	b	1a310 <__assert_fail@plt+0x9220>
   1a30c:	b	1a360 <__assert_fail@plt+0x9270>
   1a310:	ldr	r0, [fp, #-8]
   1a314:	ldr	r1, [r0]
   1a318:	ldr	r0, [r0, #4]
   1a31c:	and	r0, r1, r0
   1a320:	cmn	r0, #1
   1a324:	bne	1a360 <__assert_fail@plt+0x9270>
   1a328:	b	1a32c <__assert_fail@plt+0x923c>
   1a32c:	b	1a330 <__assert_fail@plt+0x9240>
   1a330:	ldr	r0, [fp, #-12]
   1a334:	add	r0, r0, #0
   1a338:	movw	r1, #0
   1a33c:	cmp	r1, r0
   1a340:	blt	1a398 <__assert_fail@plt+0x92a8>
   1a344:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a348:	ldr	r0, [fp, #-12]
   1a34c:	sub	r0, r0, #1
   1a350:	mvn	r1, #0
   1a354:	cmp	r1, r0
   1a358:	blt	1a398 <__assert_fail@plt+0x92a8>
   1a35c:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a360:	ldr	r0, [fp, #-12]
   1a364:	cmp	r0, #0
   1a368:	bne	1a398 <__assert_fail@plt+0x92a8>
   1a36c:	b	1a3b8 <__assert_fail@plt+0x92c8>
   1a370:	ldr	r0, [fp, #-12]
   1a374:	mvn	r1, #0
   1a378:	udiv	r0, r1, r0
   1a37c:	ldr	r1, [fp, #-8]
   1a380:	ldr	r2, [r1]
   1a384:	ldr	r1, [r1, #4]
   1a388:	subs	r0, r0, r2
   1a38c:	rscs	r1, r1, #0
   1a390:	bcs	1a3b8 <__assert_fail@plt+0x92c8>
   1a394:	b	1a398 <__assert_fail@plt+0x92a8>
   1a398:	ldr	r0, [fp, #-8]
   1a39c:	ldr	r0, [r0]
   1a3a0:	ldr	r1, [fp, #-12]
   1a3a4:	mul	r0, r0, r1
   1a3a8:	mov	r1, #0
   1a3ac:	str	r1, [fp, #-20]	; 0xffffffec
   1a3b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a3b4:	b	1a954 <__assert_fail@plt+0x9864>
   1a3b8:	ldr	r0, [fp, #-8]
   1a3bc:	ldr	r0, [r0]
   1a3c0:	ldr	r1, [fp, #-12]
   1a3c4:	mul	r0, r0, r1
   1a3c8:	mov	r1, #0
   1a3cc:	str	r1, [fp, #-20]	; 0xffffffec
   1a3d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a3d4:	b	1a970 <__assert_fail@plt+0x9880>
   1a3d8:	b	1a6bc <__assert_fail@plt+0x95cc>
   1a3dc:	ldr	r0, [fp, #-12]
   1a3e0:	cmp	r0, #0
   1a3e4:	bge	1a58c <__assert_fail@plt+0x949c>
   1a3e8:	mov	r0, #1
   1a3ec:	cmp	r0, #0
   1a3f0:	bne	1a4e0 <__assert_fail@plt+0x93f0>
   1a3f4:	b	1a3f8 <__assert_fail@plt+0x9308>
   1a3f8:	b	1a3fc <__assert_fail@plt+0x930c>
   1a3fc:	ldr	r0, [fp, #-8]
   1a400:	ldr	r1, [r0]
   1a404:	ldr	r0, [r0, #4]
   1a408:	ldr	r2, [fp, #-12]
   1a40c:	asr	r3, r2, #31
   1a410:	mvn	ip, #0
   1a414:	mvn	lr, #-2147483648	; 0x80000000
   1a418:	str	r0, [sp, #52]	; 0x34
   1a41c:	mov	r0, ip
   1a420:	str	r1, [sp, #48]	; 0x30
   1a424:	mov	r1, lr
   1a428:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   1a42c:	ldr	r2, [sp, #48]	; 0x30
   1a430:	subs	r0, r2, r0
   1a434:	ldr	r2, [sp, #52]	; 0x34
   1a438:	sbcs	r1, r2, r1
   1a43c:	bcc	1a664 <__assert_fail@plt+0x9574>
   1a440:	b	1a690 <__assert_fail@plt+0x95a0>
   1a444:	b	1a448 <__assert_fail@plt+0x9358>
   1a448:	ldr	r0, [pc, #1352]	; 1a998 <__assert_fail@plt+0x98a8>
   1a44c:	ldr	r1, [fp, #-12]
   1a450:	cmp	r1, r0
   1a454:	blt	1a46c <__assert_fail@plt+0x937c>
   1a458:	b	1a480 <__assert_fail@plt+0x9390>
   1a45c:	ldr	r0, [fp, #-12]
   1a460:	movw	r1, #0
   1a464:	cmp	r1, r0
   1a468:	bge	1a480 <__assert_fail@plt+0x9390>
   1a46c:	mov	r0, #0
   1a470:	mvn	r1, #0
   1a474:	str	r1, [sp, #44]	; 0x2c
   1a478:	str	r0, [sp, #40]	; 0x28
   1a47c:	b	1a4b4 <__assert_fail@plt+0x93c4>
   1a480:	ldr	r0, [fp, #-12]
   1a484:	rsb	r0, r0, #0
   1a488:	asr	r3, r0, #31
   1a48c:	mvn	r1, #0
   1a490:	mvn	r2, #-2147483648	; 0x80000000
   1a494:	str	r0, [sp, #36]	; 0x24
   1a498:	mov	r0, r1
   1a49c:	mov	r1, r2
   1a4a0:	ldr	r2, [sp, #36]	; 0x24
   1a4a4:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   1a4a8:	str	r0, [sp, #44]	; 0x2c
   1a4ac:	str	r1, [sp, #40]	; 0x28
   1a4b0:	b	1a4b4 <__assert_fail@plt+0x93c4>
   1a4b4:	ldr	r0, [sp, #40]	; 0x28
   1a4b8:	ldr	r1, [sp, #44]	; 0x2c
   1a4bc:	ldr	r2, [fp, #-8]
   1a4c0:	ldr	r3, [r2]
   1a4c4:	ldr	r2, [r2, #4]
   1a4c8:	mvn	r2, r2
   1a4cc:	mvn	r3, r3
   1a4d0:	subs	r1, r3, r1
   1a4d4:	sbcs	r0, r2, r0
   1a4d8:	bcs	1a664 <__assert_fail@plt+0x9574>
   1a4dc:	b	1a690 <__assert_fail@plt+0x95a0>
   1a4e0:	ldr	r0, [fp, #-12]
   1a4e4:	cmn	r0, #1
   1a4e8:	bne	1a54c <__assert_fail@plt+0x945c>
   1a4ec:	b	1a510 <__assert_fail@plt+0x9420>
   1a4f0:	ldr	r0, [fp, #-8]
   1a4f4:	ldr	r1, [r0]
   1a4f8:	ldr	r0, [r0, #4]
   1a4fc:	eor	r0, r0, #-2147483648	; 0x80000000
   1a500:	orr	r0, r1, r0
   1a504:	cmp	r0, #0
   1a508:	bne	1a664 <__assert_fail@plt+0x9574>
   1a50c:	b	1a690 <__assert_fail@plt+0x95a0>
   1a510:	ldr	r0, [fp, #-8]
   1a514:	ldr	r1, [r0]
   1a518:	ldr	r0, [r0, #4]
   1a51c:	orr	r0, r1, r0
   1a520:	cmp	r0, #0
   1a524:	beq	1a690 <__assert_fail@plt+0x95a0>
   1a528:	b	1a52c <__assert_fail@plt+0x943c>
   1a52c:	ldr	r0, [fp, #-8]
   1a530:	ldr	r1, [r0]
   1a534:	ldr	r0, [r0, #4]
   1a538:	subs	r1, r1, #1
   1a53c:	sbc	r0, r0, #0
   1a540:	cmp	r0, #0
   1a544:	bmi	1a664 <__assert_fail@plt+0x9574>
   1a548:	b	1a690 <__assert_fail@plt+0x95a0>
   1a54c:	ldr	r0, [fp, #-12]
   1a550:	asr	r3, r0, #31
   1a554:	mov	r1, #0
   1a558:	mov	r2, #-2147483648	; 0x80000000
   1a55c:	str	r0, [sp, #32]
   1a560:	mov	r0, r1
   1a564:	mov	r1, r2
   1a568:	ldr	r2, [sp, #32]
   1a56c:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   1a570:	ldr	r2, [fp, #-8]
   1a574:	ldr	r3, [r2]
   1a578:	ldr	r2, [r2, #4]
   1a57c:	subs	r0, r0, r3
   1a580:	sbcs	r1, r1, r2
   1a584:	bcc	1a664 <__assert_fail@plt+0x9574>
   1a588:	b	1a690 <__assert_fail@plt+0x95a0>
   1a58c:	ldr	r0, [fp, #-12]
   1a590:	cmp	r0, #0
   1a594:	bne	1a59c <__assert_fail@plt+0x94ac>
   1a598:	b	1a690 <__assert_fail@plt+0x95a0>
   1a59c:	mov	r0, #1
   1a5a0:	cmp	r0, #0
   1a5a4:	bne	1a624 <__assert_fail@plt+0x9534>
   1a5a8:	b	1a5ac <__assert_fail@plt+0x94bc>
   1a5ac:	ldr	r0, [fp, #-8]
   1a5b0:	ldr	r1, [r0]
   1a5b4:	ldr	r0, [r0, #4]
   1a5b8:	and	r0, r1, r0
   1a5bc:	cmn	r0, #1
   1a5c0:	bne	1a5f8 <__assert_fail@plt+0x9508>
   1a5c4:	b	1a5c8 <__assert_fail@plt+0x94d8>
   1a5c8:	b	1a5cc <__assert_fail@plt+0x94dc>
   1a5cc:	ldr	r0, [fp, #-12]
   1a5d0:	mov	r1, #-2147483648	; 0x80000000
   1a5d4:	add	r1, r1, r0, asr #31
   1a5d8:	rsbs	r0, r0, #0
   1a5dc:	rscs	r1, r1, #0
   1a5e0:	blt	1a664 <__assert_fail@plt+0x9574>
   1a5e4:	b	1a690 <__assert_fail@plt+0x95a0>
   1a5e8:	mov	r0, #0
   1a5ec:	cmp	r0, #0
   1a5f0:	bne	1a664 <__assert_fail@plt+0x9574>
   1a5f4:	b	1a690 <__assert_fail@plt+0x95a0>
   1a5f8:	ldr	r0, [fp, #-8]
   1a5fc:	ldr	r2, [r0]
   1a600:	ldr	r3, [r0, #4]
   1a604:	mov	r0, #0
   1a608:	mov	r1, #-2147483648	; 0x80000000
   1a60c:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1a610:	ldr	r2, [fp, #-12]
   1a614:	subs	r0, r0, r2
   1a618:	sbcs	r1, r1, r2, asr #31
   1a61c:	bcc	1a664 <__assert_fail@plt+0x9574>
   1a620:	b	1a690 <__assert_fail@plt+0x95a0>
   1a624:	ldr	r0, [fp, #-12]
   1a628:	asr	r3, r0, #31
   1a62c:	mvn	r1, #0
   1a630:	mvn	r2, #-2147483648	; 0x80000000
   1a634:	str	r0, [sp, #28]
   1a638:	mov	r0, r1
   1a63c:	mov	r1, r2
   1a640:	ldr	r2, [sp, #28]
   1a644:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   1a648:	ldr	r2, [fp, #-8]
   1a64c:	ldr	r3, [r2]
   1a650:	ldr	r2, [r2, #4]
   1a654:	subs	r0, r0, r3
   1a658:	sbcs	r1, r1, r2
   1a65c:	bcs	1a690 <__assert_fail@plt+0x95a0>
   1a660:	b	1a664 <__assert_fail@plt+0x9574>
   1a664:	ldr	r0, [fp, #-8]
   1a668:	ldr	r1, [r0]
   1a66c:	ldr	r0, [r0, #4]
   1a670:	ldr	r2, [fp, #-12]
   1a674:	asr	r3, r2, #31
   1a678:	umull	ip, lr, r1, r2
   1a67c:	mla	r1, r1, r3, lr
   1a680:	mla	r0, r0, r2, r1
   1a684:	str	ip, [fp, #-24]	; 0xffffffe8
   1a688:	str	r0, [fp, #-20]	; 0xffffffec
   1a68c:	b	1a954 <__assert_fail@plt+0x9864>
   1a690:	ldr	r0, [fp, #-8]
   1a694:	ldr	r1, [r0]
   1a698:	ldr	r0, [r0, #4]
   1a69c:	ldr	r2, [fp, #-12]
   1a6a0:	asr	r3, r2, #31
   1a6a4:	umull	ip, lr, r1, r2
   1a6a8:	mla	r1, r1, r3, lr
   1a6ac:	mla	r0, r0, r2, r1
   1a6b0:	str	ip, [fp, #-24]	; 0xffffffe8
   1a6b4:	str	r0, [fp, #-20]	; 0xffffffec
   1a6b8:	b	1a970 <__assert_fail@plt+0x9880>
   1a6bc:	ldr	r0, [fp, #-12]
   1a6c0:	cmp	r0, #0
   1a6c4:	bge	1a838 <__assert_fail@plt+0x9748>
   1a6c8:	mov	r0, #1
   1a6cc:	cmp	r0, #0
   1a6d0:	bne	1a7b8 <__assert_fail@plt+0x96c8>
   1a6d4:	b	1a6d8 <__assert_fail@plt+0x95e8>
   1a6d8:	b	1a720 <__assert_fail@plt+0x9630>
   1a6dc:	ldr	r0, [fp, #-8]
   1a6e0:	ldr	r1, [r0]
   1a6e4:	ldr	r0, [r0, #4]
   1a6e8:	ldr	r2, [fp, #-12]
   1a6ec:	asr	r3, r2, #31
   1a6f0:	mvn	ip, #0
   1a6f4:	str	r0, [sp, #24]
   1a6f8:	mov	r0, ip
   1a6fc:	str	r1, [sp, #20]
   1a700:	mov	r1, ip
   1a704:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1a708:	ldr	r2, [sp, #20]
   1a70c:	subs	r0, r2, r0
   1a710:	ldr	r2, [sp, #24]
   1a714:	sbcs	r1, r2, r1
   1a718:	bcc	1a8fc <__assert_fail@plt+0x980c>
   1a71c:	b	1a928 <__assert_fail@plt+0x9838>
   1a720:	b	1a724 <__assert_fail@plt+0x9634>
   1a724:	ldr	r0, [pc, #620]	; 1a998 <__assert_fail@plt+0x98a8>
   1a728:	ldr	r1, [fp, #-12]
   1a72c:	cmp	r1, r0
   1a730:	blt	1a748 <__assert_fail@plt+0x9658>
   1a734:	b	1a760 <__assert_fail@plt+0x9670>
   1a738:	ldr	r0, [fp, #-12]
   1a73c:	movw	r1, #0
   1a740:	cmp	r1, r0
   1a744:	bge	1a760 <__assert_fail@plt+0x9670>
   1a748:	mov	r0, #1
   1a74c:	mvn	r1, #0
   1a750:	str	r1, [sp, #16]
   1a754:	str	r0, [sp, #12]
   1a758:	b	1a78c <__assert_fail@plt+0x969c>
   1a75c:			; <UNDEFINED> instruction: 0xffff8000
   1a760:	ldr	r0, [fp, #-12]
   1a764:	rsb	r0, r0, #0
   1a768:	asr	r3, r0, #31
   1a76c:	mvn	r1, #0
   1a770:	str	r0, [sp, #8]
   1a774:	mov	r0, r1
   1a778:	ldr	r2, [sp, #8]
   1a77c:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1a780:	str	r0, [sp, #16]
   1a784:	str	r1, [sp, #12]
   1a788:	b	1a78c <__assert_fail@plt+0x969c>
   1a78c:	ldr	r0, [sp, #12]
   1a790:	ldr	r1, [sp, #16]
   1a794:	ldr	r2, [fp, #-8]
   1a798:	ldr	r3, [r2]
   1a79c:	ldr	r2, [r2, #4]
   1a7a0:	mvn	r2, r2
   1a7a4:	mvn	r3, r3
   1a7a8:	subs	r1, r3, r1
   1a7ac:	sbcs	r0, r2, r0
   1a7b0:	bcs	1a8fc <__assert_fail@plt+0x980c>
   1a7b4:	b	1a928 <__assert_fail@plt+0x9838>
   1a7b8:	b	1a7bc <__assert_fail@plt+0x96cc>
   1a7bc:	b	1a81c <__assert_fail@plt+0x972c>
   1a7c0:	b	1a81c <__assert_fail@plt+0x972c>
   1a7c4:	ldr	r0, [fp, #-12]
   1a7c8:	cmn	r0, #1
   1a7cc:	bne	1a81c <__assert_fail@plt+0x972c>
   1a7d0:	b	1a7f0 <__assert_fail@plt+0x9700>
   1a7d4:	ldr	r0, [fp, #-8]
   1a7d8:	ldr	r1, [r0]
   1a7dc:	ldr	r0, [r0, #4]
   1a7e0:	orr	r0, r1, r0
   1a7e4:	cmp	r0, #0
   1a7e8:	bne	1a8fc <__assert_fail@plt+0x980c>
   1a7ec:	b	1a928 <__assert_fail@plt+0x9838>
   1a7f0:	ldr	r0, [fp, #-8]
   1a7f4:	ldr	r1, [r0]
   1a7f8:	ldr	r0, [r0, #4]
   1a7fc:	orr	r0, r1, r0
   1a800:	cmp	r0, #0
   1a804:	beq	1a928 <__assert_fail@plt+0x9838>
   1a808:	b	1a80c <__assert_fail@plt+0x971c>
   1a80c:	mov	r0, #0
   1a810:	cmp	r0, #0
   1a814:	bne	1a8fc <__assert_fail@plt+0x980c>
   1a818:	b	1a928 <__assert_fail@plt+0x9838>
   1a81c:	ldr	r0, [fp, #-8]
   1a820:	ldr	r1, [r0]
   1a824:	ldr	r0, [r0, #4]
   1a828:	orr	r0, r1, r0
   1a82c:	cmp	r0, #0
   1a830:	bne	1a8fc <__assert_fail@plt+0x980c>
   1a834:	b	1a928 <__assert_fail@plt+0x9838>
   1a838:	ldr	r0, [fp, #-12]
   1a83c:	cmp	r0, #0
   1a840:	bne	1a848 <__assert_fail@plt+0x9758>
   1a844:	b	1a928 <__assert_fail@plt+0x9838>
   1a848:	mov	r0, #1
   1a84c:	cmp	r0, #0
   1a850:	bne	1a8c4 <__assert_fail@plt+0x97d4>
   1a854:	b	1a858 <__assert_fail@plt+0x9768>
   1a858:	b	1a860 <__assert_fail@plt+0x9770>
   1a85c:	b	1a864 <__assert_fail@plt+0x9774>
   1a860:	b	1a8b4 <__assert_fail@plt+0x97c4>
   1a864:	ldr	r0, [fp, #-8]
   1a868:	ldr	r1, [r0]
   1a86c:	ldr	r0, [r0, #4]
   1a870:	and	r0, r1, r0
   1a874:	cmn	r0, #1
   1a878:	bne	1a8b4 <__assert_fail@plt+0x97c4>
   1a87c:	b	1a880 <__assert_fail@plt+0x9790>
   1a880:	b	1a884 <__assert_fail@plt+0x9794>
   1a884:	ldr	r0, [fp, #-12]
   1a888:	add	r0, r0, #0
   1a88c:	movw	r1, #0
   1a890:	cmp	r1, r0
   1a894:	blt	1a8fc <__assert_fail@plt+0x980c>
   1a898:	b	1a928 <__assert_fail@plt+0x9838>
   1a89c:	ldr	r0, [fp, #-12]
   1a8a0:	sub	r0, r0, #1
   1a8a4:	mvn	r1, #0
   1a8a8:	cmp	r1, r0
   1a8ac:	blt	1a8fc <__assert_fail@plt+0x980c>
   1a8b0:	b	1a928 <__assert_fail@plt+0x9838>
   1a8b4:	ldr	r0, [fp, #-12]
   1a8b8:	cmp	r0, #0
   1a8bc:	bne	1a8fc <__assert_fail@plt+0x980c>
   1a8c0:	b	1a928 <__assert_fail@plt+0x9838>
   1a8c4:	ldr	r0, [fp, #-12]
   1a8c8:	asr	r3, r0, #31
   1a8cc:	mvn	r1, #0
   1a8d0:	str	r0, [sp, #4]
   1a8d4:	mov	r0, r1
   1a8d8:	ldr	r2, [sp, #4]
   1a8dc:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1a8e0:	ldr	r2, [fp, #-8]
   1a8e4:	ldr	r3, [r2]
   1a8e8:	ldr	r2, [r2, #4]
   1a8ec:	subs	r0, r0, r3
   1a8f0:	sbcs	r1, r1, r2
   1a8f4:	bcs	1a928 <__assert_fail@plt+0x9838>
   1a8f8:	b	1a8fc <__assert_fail@plt+0x980c>
   1a8fc:	ldr	r0, [fp, #-8]
   1a900:	ldr	r1, [r0]
   1a904:	ldr	r0, [r0, #4]
   1a908:	ldr	r2, [fp, #-12]
   1a90c:	asr	r3, r2, #31
   1a910:	umull	ip, lr, r1, r2
   1a914:	mla	r1, r1, r3, lr
   1a918:	mla	r0, r0, r2, r1
   1a91c:	str	ip, [fp, #-24]	; 0xffffffe8
   1a920:	str	r0, [fp, #-20]	; 0xffffffec
   1a924:	b	1a954 <__assert_fail@plt+0x9864>
   1a928:	ldr	r0, [fp, #-8]
   1a92c:	ldr	r1, [r0]
   1a930:	ldr	r0, [r0, #4]
   1a934:	ldr	r2, [fp, #-12]
   1a938:	asr	r3, r2, #31
   1a93c:	umull	ip, lr, r1, r2
   1a940:	mla	r1, r1, r3, lr
   1a944:	mla	r0, r0, r2, r1
   1a948:	str	ip, [fp, #-24]	; 0xffffffe8
   1a94c:	str	r0, [fp, #-20]	; 0xffffffec
   1a950:	b	1a970 <__assert_fail@plt+0x9880>
   1a954:	ldr	r0, [fp, #-8]
   1a958:	mvn	r1, #0
   1a95c:	str	r1, [r0, #4]
   1a960:	str	r1, [r0]
   1a964:	movw	r0, #1
   1a968:	str	r0, [fp, #-4]
   1a96c:	b	1a98c <__assert_fail@plt+0x989c>
   1a970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a974:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a978:	ldr	r2, [fp, #-8]
   1a97c:	str	r1, [r2, #4]
   1a980:	str	r0, [r2]
   1a984:	movw	r0, #0
   1a988:	str	r0, [fp, #-4]
   1a98c:	ldr	r0, [fp, #-4]
   1a990:	mov	sp, fp
   1a994:	pop	{fp, pc}
   1a998:	andhi	r0, r0, r1
   1a99c:	svcvc	0x00ffffff
   1a9a0:	push	{fp, lr}
   1a9a4:	mov	fp, sp
   1a9a8:	sub	sp, sp, #16
   1a9ac:	str	r0, [fp, #-4]
   1a9b0:	str	r1, [sp, #8]
   1a9b4:	str	r2, [sp, #4]
   1a9b8:	movw	r0, #0
   1a9bc:	str	r0, [sp]
   1a9c0:	ldr	r0, [sp, #4]
   1a9c4:	mvn	r1, #0
   1a9c8:	add	r1, r0, r1
   1a9cc:	str	r1, [sp, #4]
   1a9d0:	cmp	r0, #0
   1a9d4:	beq	1a9f4 <__assert_fail@plt+0x9904>
   1a9d8:	ldr	r0, [fp, #-4]
   1a9dc:	ldr	r1, [sp, #8]
   1a9e0:	bl	19128 <__assert_fail@plt+0x8038>
   1a9e4:	ldr	r1, [sp]
   1a9e8:	orr	r0, r1, r0
   1a9ec:	str	r0, [sp]
   1a9f0:	b	1a9c0 <__assert_fail@plt+0x98d0>
   1a9f4:	ldr	r0, [sp]
   1a9f8:	mov	sp, fp
   1a9fc:	pop	{fp, pc}
   1aa00:	push	{fp, lr}
   1aa04:	mov	fp, sp
   1aa08:	sub	sp, sp, #16
   1aa0c:	str	r0, [sp, #8]
   1aa10:	str	r1, [sp, #4]
   1aa14:	ldr	r0, [sp, #8]
   1aa18:	cmp	r0, #0
   1aa1c:	beq	1aa2c <__assert_fail@plt+0x993c>
   1aa20:	ldr	r0, [sp, #4]
   1aa24:	cmp	r0, #0
   1aa28:	bne	1aa38 <__assert_fail@plt+0x9948>
   1aa2c:	movw	r0, #1
   1aa30:	str	r0, [sp, #4]
   1aa34:	str	r0, [sp, #8]
   1aa38:	ldr	r0, [sp, #4]
   1aa3c:	cmp	r0, #0
   1aa40:	beq	1aa74 <__assert_fail@plt+0x9984>
   1aa44:	ldr	r0, [pc, #76]	; 1aa98 <__assert_fail@plt+0x99a8>
   1aa48:	ldr	r1, [sp, #4]
   1aa4c:	udiv	r0, r0, r1
   1aa50:	ldr	r1, [sp, #8]
   1aa54:	cmp	r0, r1
   1aa58:	bcs	1aa74 <__assert_fail@plt+0x9984>
   1aa5c:	bl	11000 <__errno_location@plt>
   1aa60:	movw	r1, #12
   1aa64:	str	r1, [r0]
   1aa68:	movw	r0, #0
   1aa6c:	str	r0, [fp, #-4]
   1aa70:	b	1aa8c <__assert_fail@plt+0x999c>
   1aa74:	ldr	r0, [sp, #8]
   1aa78:	ldr	r1, [sp, #4]
   1aa7c:	bl	10e68 <calloc@plt>
   1aa80:	str	r0, [sp]
   1aa84:	ldr	r0, [sp]
   1aa88:	str	r0, [fp, #-4]
   1aa8c:	ldr	r0, [fp, #-4]
   1aa90:	mov	sp, fp
   1aa94:	pop	{fp, pc}
   1aa98:	svcvc	0x00ffffff
   1aa9c:	push	{fp, lr}
   1aaa0:	mov	fp, sp
   1aaa4:	sub	sp, sp, #16
   1aaa8:	str	r0, [sp, #8]
   1aaac:	ldr	r0, [sp, #8]
   1aab0:	cmp	r0, #0
   1aab4:	bne	1aac0 <__assert_fail@plt+0x99d0>
   1aab8:	movw	r0, #1
   1aabc:	str	r0, [sp, #8]
   1aac0:	ldr	r0, [pc, #64]	; 1ab08 <__assert_fail@plt+0x9a18>
   1aac4:	ldr	r1, [sp, #8]
   1aac8:	cmp	r0, r1
   1aacc:	bcs	1aae8 <__assert_fail@plt+0x99f8>
   1aad0:	bl	11000 <__errno_location@plt>
   1aad4:	movw	r1, #12
   1aad8:	str	r1, [r0]
   1aadc:	movw	r0, #0
   1aae0:	str	r0, [fp, #-4]
   1aae4:	b	1aafc <__assert_fail@plt+0x9a0c>
   1aae8:	ldr	r0, [sp, #8]
   1aaec:	bl	10f7c <malloc@plt>
   1aaf0:	str	r0, [sp, #4]
   1aaf4:	ldr	r0, [sp, #4]
   1aaf8:	str	r0, [fp, #-4]
   1aafc:	ldr	r0, [fp, #-4]
   1ab00:	mov	sp, fp
   1ab04:	pop	{fp, pc}
   1ab08:	svcvc	0x00ffffff
   1ab0c:	push	{fp, lr}
   1ab10:	mov	fp, sp
   1ab14:	sub	sp, sp, #16
   1ab18:	str	r0, [sp, #8]
   1ab1c:	str	r1, [sp, #4]
   1ab20:	ldr	r0, [sp, #8]
   1ab24:	movw	r1, #0
   1ab28:	cmp	r0, r1
   1ab2c:	bne	1ab40 <__assert_fail@plt+0x9a50>
   1ab30:	ldr	r0, [sp, #4]
   1ab34:	bl	1aa9c <__assert_fail@plt+0x99ac>
   1ab38:	str	r0, [fp, #-4]
   1ab3c:	b	1aba0 <__assert_fail@plt+0x9ab0>
   1ab40:	ldr	r0, [sp, #4]
   1ab44:	cmp	r0, #0
   1ab48:	bne	1ab60 <__assert_fail@plt+0x9a70>
   1ab4c:	ldr	r0, [sp, #8]
   1ab50:	bl	12c24 <__assert_fail@plt+0x1b34>
   1ab54:	movw	r0, #0
   1ab58:	str	r0, [fp, #-4]
   1ab5c:	b	1aba0 <__assert_fail@plt+0x9ab0>
   1ab60:	ldr	r0, [pc, #68]	; 1abac <__assert_fail@plt+0x9abc>
   1ab64:	ldr	r1, [sp, #4]
   1ab68:	cmp	r0, r1
   1ab6c:	bcs	1ab88 <__assert_fail@plt+0x9a98>
   1ab70:	bl	11000 <__errno_location@plt>
   1ab74:	movw	r1, #12
   1ab78:	str	r1, [r0]
   1ab7c:	movw	r0, #0
   1ab80:	str	r0, [fp, #-4]
   1ab84:	b	1aba0 <__assert_fail@plt+0x9ab0>
   1ab88:	ldr	r0, [sp, #8]
   1ab8c:	ldr	r1, [sp, #4]
   1ab90:	bl	10ef8 <realloc@plt>
   1ab94:	str	r0, [sp]
   1ab98:	ldr	r0, [sp]
   1ab9c:	str	r0, [fp, #-4]
   1aba0:	ldr	r0, [fp, #-4]
   1aba4:	mov	sp, fp
   1aba8:	pop	{fp, pc}
   1abac:	svcvc	0x00ffffff
   1abb0:	push	{fp, lr}
   1abb4:	mov	fp, sp
   1abb8:	sub	sp, sp, #16
   1abbc:	str	r0, [fp, #-4]
   1abc0:	ldr	r1, [fp, #-4]
   1abc4:	mvn	r0, #99	; 0x63
   1abc8:	movw	r2, #0
   1abcc:	str	r2, [sp, #8]
   1abd0:	ldr	r3, [sp, #8]
   1abd4:	ldr	ip, [sp, #8]
   1abd8:	str	ip, [sp]
   1abdc:	movw	lr, #44020	; 0xabf4
   1abe0:	movt	lr, #1
   1abe4:	str	lr, [sp, #4]
   1abe8:	bl	1ae2c <__assert_fail@plt+0x9d3c>
   1abec:	mov	sp, fp
   1abf0:	pop	{fp, pc}
   1abf4:	push	{fp, lr}
   1abf8:	mov	fp, sp
   1abfc:	sub	sp, sp, #16
   1ac00:	str	r0, [fp, #-4]
   1ac04:	str	r1, [sp, #8]
   1ac08:	str	r2, [sp, #4]
   1ac0c:	str	r3, [sp]
   1ac10:	ldr	r0, [fp, #-4]
   1ac14:	cmn	r0, #100	; 0x64
   1ac18:	beq	1ac20 <__assert_fail@plt+0x9b30>
   1ac1c:	bl	110e4 <abort@plt>
   1ac20:	ldr	r0, [sp, #8]
   1ac24:	ldr	r1, [sp, #4]
   1ac28:	ldr	r2, [sp]
   1ac2c:	bl	10f1c <readlink@plt>
   1ac30:	mov	sp, fp
   1ac34:	pop	{fp, pc}
   1ac38:	sub	sp, sp, #16
   1ac3c:	str	r0, [sp, #12]
   1ac40:	ldr	r0, [sp, #12]
   1ac44:	str	r0, [sp, #8]
   1ac48:	movw	r0, #0
   1ac4c:	strb	r0, [sp, #3]
   1ac50:	ldr	r0, [sp, #8]
   1ac54:	ldrb	r0, [r0]
   1ac58:	cmp	r0, #47	; 0x2f
   1ac5c:	bne	1ac70 <__assert_fail@plt+0x9b80>
   1ac60:	ldr	r0, [sp, #8]
   1ac64:	add	r0, r0, #1
   1ac68:	str	r0, [sp, #8]
   1ac6c:	b	1ac50 <__assert_fail@plt+0x9b60>
   1ac70:	ldr	r0, [sp, #8]
   1ac74:	str	r0, [sp, #4]
   1ac78:	ldr	r0, [sp, #4]
   1ac7c:	ldrsb	r0, [r0]
   1ac80:	cmp	r0, #0
   1ac84:	beq	1acd8 <__assert_fail@plt+0x9be8>
   1ac88:	ldr	r0, [sp, #4]
   1ac8c:	ldrb	r0, [r0]
   1ac90:	cmp	r0, #47	; 0x2f
   1ac94:	bne	1aca4 <__assert_fail@plt+0x9bb4>
   1ac98:	movw	r0, #1
   1ac9c:	strb	r0, [sp, #3]
   1aca0:	b	1acc4 <__assert_fail@plt+0x9bd4>
   1aca4:	ldrb	r0, [sp, #3]
   1aca8:	tst	r0, #1
   1acac:	beq	1acc0 <__assert_fail@plt+0x9bd0>
   1acb0:	ldr	r0, [sp, #4]
   1acb4:	str	r0, [sp, #8]
   1acb8:	movw	r0, #0
   1acbc:	strb	r0, [sp, #3]
   1acc0:	b	1acc4 <__assert_fail@plt+0x9bd4>
   1acc4:	b	1acc8 <__assert_fail@plt+0x9bd8>
   1acc8:	ldr	r0, [sp, #4]
   1accc:	add	r0, r0, #1
   1acd0:	str	r0, [sp, #4]
   1acd4:	b	1ac78 <__assert_fail@plt+0x9b88>
   1acd8:	ldr	r0, [sp, #8]
   1acdc:	add	sp, sp, #16
   1ace0:	bx	lr
   1ace4:	push	{fp, lr}
   1ace8:	mov	fp, sp
   1acec:	sub	sp, sp, #16
   1acf0:	str	r0, [fp, #-4]
   1acf4:	movw	r0, #0
   1acf8:	str	r0, [sp, #4]
   1acfc:	ldr	r0, [fp, #-4]
   1ad00:	bl	10fdc <strlen@plt>
   1ad04:	str	r0, [sp, #8]
   1ad08:	ldr	r0, [sp, #8]
   1ad0c:	movw	r1, #1
   1ad10:	cmp	r1, r0
   1ad14:	movw	r0, #0
   1ad18:	str	r0, [sp]
   1ad1c:	bcs	1ad44 <__assert_fail@plt+0x9c54>
   1ad20:	ldr	r0, [fp, #-4]
   1ad24:	ldr	r1, [sp, #8]
   1ad28:	sub	r1, r1, #1
   1ad2c:	add	r0, r0, r1
   1ad30:	ldrb	r0, [r0]
   1ad34:	cmp	r0, #47	; 0x2f
   1ad38:	movw	r0, #0
   1ad3c:	moveq	r0, #1
   1ad40:	str	r0, [sp]
   1ad44:	ldr	r0, [sp]
   1ad48:	tst	r0, #1
   1ad4c:	beq	1ad68 <__assert_fail@plt+0x9c78>
   1ad50:	b	1ad54 <__assert_fail@plt+0x9c64>
   1ad54:	ldr	r0, [sp, #8]
   1ad58:	mvn	r1, #0
   1ad5c:	add	r0, r0, r1
   1ad60:	str	r0, [sp, #8]
   1ad64:	b	1ad08 <__assert_fail@plt+0x9c18>
   1ad68:	ldr	r0, [sp, #8]
   1ad6c:	mov	sp, fp
   1ad70:	pop	{fp, pc}
   1ad74:	push	{fp, lr}
   1ad78:	mov	fp, sp
   1ad7c:	sub	sp, sp, #24
   1ad80:	str	r0, [fp, #-8]
   1ad84:	str	r1, [sp, #12]
   1ad88:	ldr	r0, [fp, #-8]
   1ad8c:	str	r0, [sp, #8]
   1ad90:	ldr	r0, [sp, #12]
   1ad94:	str	r0, [sp, #4]
   1ad98:	ldr	r0, [sp, #8]
   1ad9c:	ldr	r1, [sp, #4]
   1ada0:	cmp	r0, r1
   1ada4:	bne	1adb4 <__assert_fail@plt+0x9cc4>
   1ada8:	movw	r0, #0
   1adac:	str	r0, [fp, #-4]
   1adb0:	b	1ae20 <__assert_fail@plt+0x9d30>
   1adb4:	b	1adb8 <__assert_fail@plt+0x9cc8>
   1adb8:	ldr	r0, [sp, #8]
   1adbc:	ldrb	r0, [r0]
   1adc0:	bl	12640 <__assert_fail@plt+0x1550>
   1adc4:	strb	r0, [sp, #3]
   1adc8:	ldr	r0, [sp, #4]
   1adcc:	ldrb	r0, [r0]
   1add0:	bl	12640 <__assert_fail@plt+0x1550>
   1add4:	strb	r0, [sp, #2]
   1add8:	ldrb	r0, [sp, #3]
   1addc:	cmp	r0, #0
   1ade0:	bne	1ade8 <__assert_fail@plt+0x9cf8>
   1ade4:	b	1ae10 <__assert_fail@plt+0x9d20>
   1ade8:	ldr	r0, [sp, #8]
   1adec:	add	r0, r0, #1
   1adf0:	str	r0, [sp, #8]
   1adf4:	ldr	r0, [sp, #4]
   1adf8:	add	r0, r0, #1
   1adfc:	str	r0, [sp, #4]
   1ae00:	ldrb	r0, [sp, #3]
   1ae04:	ldrb	r1, [sp, #2]
   1ae08:	cmp	r0, r1
   1ae0c:	beq	1adb8 <__assert_fail@plt+0x9cc8>
   1ae10:	ldrb	r0, [sp, #3]
   1ae14:	ldrb	r1, [sp, #2]
   1ae18:	sub	r0, r0, r1
   1ae1c:	str	r0, [fp, #-4]
   1ae20:	ldr	r0, [fp, #-4]
   1ae24:	mov	sp, fp
   1ae28:	pop	{fp, pc}
   1ae2c:	push	{r4, r5, r6, sl, fp, lr}
   1ae30:	add	fp, sp, #16
   1ae34:	sub	sp, sp, #40	; 0x28
   1ae38:	sub	sp, sp, #1024	; 0x400
   1ae3c:	ldr	ip, [fp, #12]
   1ae40:	ldr	lr, [fp, #8]
   1ae44:	add	r4, sp, #24
   1ae48:	str	r0, [fp, #-20]	; 0xffffffec
   1ae4c:	str	r1, [fp, #-24]	; 0xffffffe8
   1ae50:	str	r2, [fp, #-28]	; 0xffffffe4
   1ae54:	str	r3, [fp, #-32]	; 0xffffffe0
   1ae58:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ae5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ae64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ae68:	ldr	r5, [fp, #8]
   1ae6c:	ldr	r6, [fp, #12]
   1ae70:	str	r5, [sp]
   1ae74:	str	r6, [sp, #4]
   1ae78:	str	r4, [sp, #8]
   1ae7c:	str	ip, [sp, #20]
   1ae80:	str	lr, [sp, #16]
   1ae84:	bl	1ae90 <__assert_fail@plt+0x9da0>
   1ae88:	sub	sp, fp, #16
   1ae8c:	pop	{r4, r5, r6, sl, fp, pc}
   1ae90:	push	{r4, sl, fp, lr}
   1ae94:	add	fp, sp, #8
   1ae98:	sub	sp, sp, #96	; 0x60
   1ae9c:	ldr	ip, [fp, #16]
   1aea0:	ldr	lr, [fp, #12]
   1aea4:	ldr	r4, [fp, #8]
   1aea8:	str	r0, [fp, #-16]
   1aeac:	str	r1, [fp, #-20]	; 0xffffffec
   1aeb0:	str	r2, [fp, #-24]	; 0xffffffe8
   1aeb4:	str	r3, [fp, #-28]	; 0xffffffe4
   1aeb8:	ldr	r0, [fp, #8]
   1aebc:	movw	r1, #0
   1aec0:	cmp	r0, r1
   1aec4:	bne	1aed4 <__assert_fail@plt+0x9de4>
   1aec8:	movw	r0, #56816	; 0xddf0
   1aecc:	movt	r0, #1
   1aed0:	str	r0, [fp, #8]
   1aed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aed8:	movw	r1, #0
   1aedc:	cmp	r0, r1
   1aee0:	bne	1aef4 <__assert_fail@plt+0x9e04>
   1aee4:	ldr	r0, [fp, #16]
   1aee8:	str	r0, [fp, #-24]	; 0xffffffe8
   1aeec:	movw	r0, #1024	; 0x400
   1aef0:	str	r0, [fp, #-28]	; 0xffffffe4
   1aef4:	ldr	r0, [pc, #740]	; 1b1e0 <__assert_fail@plt+0xa0f0>
   1aef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aefc:	str	r1, [fp, #-32]	; 0xffffffe0
   1af00:	str	r0, [fp, #-36]	; 0xffffffdc
   1af04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1af08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1af0c:	cmp	r0, r1
   1af10:	bcs	1af20 <__assert_fail@plt+0x9e30>
   1af14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1af18:	str	r0, [sp, #40]	; 0x28
   1af1c:	b	1af28 <__assert_fail@plt+0x9e38>
   1af20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af24:	str	r0, [sp, #40]	; 0x28
   1af28:	ldr	r0, [sp, #40]	; 0x28
   1af2c:	str	r0, [fp, #-40]	; 0xffffffd8
   1af30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1af34:	movw	r1, #0
   1af38:	cmp	r0, r1
   1af3c:	beq	1b190 <__assert_fail@plt+0xa0a0>
   1af40:	ldr	r0, [fp, #12]
   1af44:	ldr	r1, [fp, #-16]
   1af48:	ldr	r2, [fp, #-20]	; 0xffffffec
   1af4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af50:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1af54:	str	r0, [sp, #36]	; 0x24
   1af58:	mov	r0, r1
   1af5c:	mov	r1, r2
   1af60:	mov	r2, r3
   1af64:	mov	r3, ip
   1af68:	ldr	ip, [sp, #36]	; 0x24
   1af6c:	blx	ip
   1af70:	str	r0, [fp, #-44]	; 0xffffffd4
   1af74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af78:	cmp	r0, #0
   1af7c:	bge	1afd8 <__assert_fail@plt+0x9ee8>
   1af80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1af84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1af88:	cmp	r0, r1
   1af8c:	beq	1afcc <__assert_fail@plt+0x9edc>
   1af90:	bl	11000 <__errno_location@plt>
   1af94:	ldr	r0, [r0]
   1af98:	str	r0, [fp, #-48]	; 0xffffffd0
   1af9c:	ldr	r0, [fp, #8]
   1afa0:	ldr	r0, [r0, #8]
   1afa4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1afa8:	str	r0, [sp, #32]
   1afac:	mov	r0, r1
   1afb0:	ldr	r1, [sp, #32]
   1afb4:	blx	r1
   1afb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1afbc:	str	r0, [sp, #28]
   1afc0:	bl	11000 <__errno_location@plt>
   1afc4:	ldr	r1, [sp, #28]
   1afc8:	str	r1, [r0]
   1afcc:	movw	r0, #0
   1afd0:	str	r0, [fp, #-12]
   1afd4:	b	1b1d4 <__assert_fail@plt+0xa0e4>
   1afd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1afdc:	str	r0, [sp, #52]	; 0x34
   1afe0:	ldr	r0, [sp, #52]	; 0x34
   1afe4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1afe8:	cmp	r0, r1
   1afec:	bge	1b100 <__assert_fail@plt+0xa010>
   1aff0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aff4:	ldr	r1, [sp, #52]	; 0x34
   1aff8:	add	r2, r1, #1
   1affc:	str	r2, [sp, #52]	; 0x34
   1b000:	add	r0, r0, r1
   1b004:	movw	r1, #0
   1b008:	strb	r1, [r0]
   1b00c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b010:	ldr	r1, [fp, #16]
   1b014:	cmp	r0, r1
   1b018:	bne	1b078 <__assert_fail@plt+0x9f88>
   1b01c:	ldr	r0, [fp, #8]
   1b020:	ldr	r0, [r0]
   1b024:	ldr	r1, [sp, #52]	; 0x34
   1b028:	str	r0, [sp, #24]
   1b02c:	mov	r0, r1
   1b030:	ldr	r1, [sp, #24]
   1b034:	blx	r1
   1b038:	str	r0, [sp, #48]	; 0x30
   1b03c:	ldr	r0, [sp, #52]	; 0x34
   1b040:	str	r0, [fp, #-40]	; 0xffffffd8
   1b044:	ldr	r0, [sp, #48]	; 0x30
   1b048:	movw	r1, #0
   1b04c:	cmp	r0, r1
   1b050:	bne	1b058 <__assert_fail@plt+0x9f68>
   1b054:	b	1b190 <__assert_fail@plt+0xa0a0>
   1b058:	ldr	r0, [sp, #48]	; 0x30
   1b05c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b060:	ldr	r2, [sp, #52]	; 0x34
   1b064:	str	r0, [sp, #20]
   1b068:	bl	10ec8 <memcpy@plt>
   1b06c:	ldr	r0, [sp, #20]
   1b070:	str	r0, [fp, #-12]
   1b074:	b	1b1d4 <__assert_fail@plt+0xa0e4>
   1b078:	ldr	r0, [sp, #52]	; 0x34
   1b07c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b080:	cmp	r0, r1
   1b084:	bge	1b0f4 <__assert_fail@plt+0xa004>
   1b088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b08c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b090:	cmp	r0, r1
   1b094:	beq	1b0f4 <__assert_fail@plt+0xa004>
   1b098:	ldr	r0, [fp, #8]
   1b09c:	ldr	r0, [r0, #4]
   1b0a0:	movw	r1, #0
   1b0a4:	cmp	r0, r1
   1b0a8:	beq	1b0f4 <__assert_fail@plt+0xa004>
   1b0ac:	ldr	r0, [fp, #8]
   1b0b0:	ldr	r0, [r0, #4]
   1b0b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b0b8:	ldr	r2, [sp, #52]	; 0x34
   1b0bc:	str	r0, [sp, #16]
   1b0c0:	mov	r0, r1
   1b0c4:	mov	r1, r2
   1b0c8:	ldr	r2, [sp, #16]
   1b0cc:	blx	r2
   1b0d0:	str	r0, [sp, #44]	; 0x2c
   1b0d4:	ldr	r0, [sp, #44]	; 0x2c
   1b0d8:	movw	r1, #0
   1b0dc:	cmp	r0, r1
   1b0e0:	beq	1b0f0 <__assert_fail@plt+0xa000>
   1b0e4:	ldr	r0, [sp, #44]	; 0x2c
   1b0e8:	str	r0, [fp, #-12]
   1b0ec:	b	1b1d4 <__assert_fail@plt+0xa0e4>
   1b0f0:	b	1b0f4 <__assert_fail@plt+0xa004>
   1b0f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b0f8:	str	r0, [fp, #-12]
   1b0fc:	b	1b1d4 <__assert_fail@plt+0xa0e4>
   1b100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b104:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b108:	cmp	r0, r1
   1b10c:	beq	1b12c <__assert_fail@plt+0xa03c>
   1b110:	ldr	r0, [fp, #8]
   1b114:	ldr	r0, [r0, #8]
   1b118:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b11c:	str	r0, [sp, #12]
   1b120:	mov	r0, r1
   1b124:	ldr	r1, [sp, #12]
   1b128:	blx	r1
   1b12c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b130:	movw	r1, #2
   1b134:	sdiv	r0, r0, r1
   1b138:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b13c:	cmp	r0, r1
   1b140:	bgt	1b15c <__assert_fail@plt+0xa06c>
   1b144:	bl	11000 <__errno_location@plt>
   1b148:	movw	r1, #36	; 0x24
   1b14c:	str	r1, [r0]
   1b150:	movw	r0, #0
   1b154:	str	r0, [fp, #-12]
   1b158:	b	1b1d4 <__assert_fail@plt+0xa0e4>
   1b15c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b160:	lsl	r0, r0, #1
   1b164:	add	r0, r0, #1
   1b168:	str	r0, [fp, #-40]	; 0xffffffd8
   1b16c:	ldr	r0, [fp, #8]
   1b170:	ldr	r0, [r0]
   1b174:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b178:	str	r0, [sp, #8]
   1b17c:	mov	r0, r1
   1b180:	ldr	r1, [sp, #8]
   1b184:	blx	r1
   1b188:	str	r0, [fp, #-32]	; 0xffffffe0
   1b18c:	b	1af30 <__assert_fail@plt+0x9e40>
   1b190:	ldr	r0, [fp, #8]
   1b194:	ldr	r0, [r0, #12]
   1b198:	movw	r1, #0
   1b19c:	cmp	r0, r1
   1b1a0:	beq	1b1c0 <__assert_fail@plt+0xa0d0>
   1b1a4:	ldr	r0, [fp, #8]
   1b1a8:	ldr	r0, [r0, #12]
   1b1ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b1b0:	str	r0, [sp, #4]
   1b1b4:	mov	r0, r1
   1b1b8:	ldr	r1, [sp, #4]
   1b1bc:	blx	r1
   1b1c0:	bl	11000 <__errno_location@plt>
   1b1c4:	movw	r1, #12
   1b1c8:	str	r1, [r0]
   1b1cc:	movw	r0, #0
   1b1d0:	str	r0, [fp, #-12]
   1b1d4:	ldr	r0, [fp, #-12]
   1b1d8:	sub	sp, fp, #8
   1b1dc:	pop	{r4, sl, fp, pc}
   1b1e0:	svcvc	0x00ffffff
   1b1e4:	push	{fp, lr}
   1b1e8:	mov	fp, sp
   1b1ec:	sub	sp, sp, #16
   1b1f0:	str	r0, [sp, #8]
   1b1f4:	ldr	r0, [sp, #8]
   1b1f8:	bl	10f40 <__fpending@plt>
   1b1fc:	cmp	r0, #0
   1b200:	movw	r0, #0
   1b204:	movne	r0, #1
   1b208:	and	r0, r0, #1
   1b20c:	strb	r0, [sp, #7]
   1b210:	ldr	r0, [sp, #8]
   1b214:	bl	10f4c <ferror_unlocked@plt>
   1b218:	cmp	r0, #0
   1b21c:	movw	r0, #0
   1b220:	movne	r0, #1
   1b224:	and	r0, r0, #1
   1b228:	strb	r0, [sp, #6]
   1b22c:	ldr	r0, [sp, #8]
   1b230:	bl	1b2b4 <__assert_fail@plt+0xa1c4>
   1b234:	cmp	r0, #0
   1b238:	movw	r0, #0
   1b23c:	movne	r0, #1
   1b240:	and	r0, r0, #1
   1b244:	strb	r0, [sp, #5]
   1b248:	ldrb	r0, [sp, #6]
   1b24c:	tst	r0, #1
   1b250:	bne	1b27c <__assert_fail@plt+0xa18c>
   1b254:	ldrb	r0, [sp, #5]
   1b258:	tst	r0, #1
   1b25c:	beq	1b2a0 <__assert_fail@plt+0xa1b0>
   1b260:	ldrb	r0, [sp, #7]
   1b264:	tst	r0, #1
   1b268:	bne	1b27c <__assert_fail@plt+0xa18c>
   1b26c:	bl	11000 <__errno_location@plt>
   1b270:	ldr	r0, [r0]
   1b274:	cmp	r0, #9
   1b278:	beq	1b2a0 <__assert_fail@plt+0xa1b0>
   1b27c:	ldrb	r0, [sp, #5]
   1b280:	tst	r0, #1
   1b284:	bne	1b294 <__assert_fail@plt+0xa1a4>
   1b288:	bl	11000 <__errno_location@plt>
   1b28c:	movw	r1, #0
   1b290:	str	r1, [r0]
   1b294:	mvn	r0, #0
   1b298:	str	r0, [fp, #-4]
   1b29c:	b	1b2a8 <__assert_fail@plt+0xa1b8>
   1b2a0:	movw	r0, #0
   1b2a4:	str	r0, [fp, #-4]
   1b2a8:	ldr	r0, [fp, #-4]
   1b2ac:	mov	sp, fp
   1b2b0:	pop	{fp, pc}
   1b2b4:	push	{fp, lr}
   1b2b8:	mov	fp, sp
   1b2bc:	sub	sp, sp, #32
   1b2c0:	str	r0, [fp, #-8]
   1b2c4:	movw	r0, #0
   1b2c8:	str	r0, [fp, #-12]
   1b2cc:	str	r0, [sp, #12]
   1b2d0:	ldr	r0, [fp, #-8]
   1b2d4:	bl	11024 <fileno@plt>
   1b2d8:	str	r0, [sp, #16]
   1b2dc:	ldr	r0, [sp, #16]
   1b2e0:	cmp	r0, #0
   1b2e4:	bge	1b2f8 <__assert_fail@plt+0xa208>
   1b2e8:	ldr	r0, [fp, #-8]
   1b2ec:	bl	11054 <fclose@plt>
   1b2f0:	str	r0, [fp, #-4]
   1b2f4:	b	1b394 <__assert_fail@plt+0xa2a4>
   1b2f8:	ldr	r0, [fp, #-8]
   1b2fc:	bl	10f94 <__freading@plt>
   1b300:	cmp	r0, #0
   1b304:	beq	1b33c <__assert_fail@plt+0xa24c>
   1b308:	ldr	r0, [fp, #-8]
   1b30c:	bl	11024 <fileno@plt>
   1b310:	mov	r1, sp
   1b314:	mov	r2, #1
   1b318:	str	r2, [r1]
   1b31c:	mov	r1, #0
   1b320:	mov	r2, r1
   1b324:	mov	r3, r1
   1b328:	bl	10f28 <lseek64@plt>
   1b32c:	and	r0, r0, r1
   1b330:	cmn	r0, #1
   1b334:	beq	1b358 <__assert_fail@plt+0xa268>
   1b338:	b	1b33c <__assert_fail@plt+0xa24c>
   1b33c:	ldr	r0, [fp, #-8]
   1b340:	bl	1b3a0 <__assert_fail@plt+0xa2b0>
   1b344:	cmp	r0, #0
   1b348:	beq	1b358 <__assert_fail@plt+0xa268>
   1b34c:	bl	11000 <__errno_location@plt>
   1b350:	ldr	r0, [r0]
   1b354:	str	r0, [fp, #-12]
   1b358:	ldr	r0, [fp, #-8]
   1b35c:	bl	11054 <fclose@plt>
   1b360:	str	r0, [sp, #12]
   1b364:	ldr	r0, [fp, #-12]
   1b368:	cmp	r0, #0
   1b36c:	beq	1b38c <__assert_fail@plt+0xa29c>
   1b370:	ldr	r0, [fp, #-12]
   1b374:	str	r0, [sp, #8]
   1b378:	bl	11000 <__errno_location@plt>
   1b37c:	ldr	r1, [sp, #8]
   1b380:	str	r1, [r0]
   1b384:	mvn	r0, #0
   1b388:	str	r0, [sp, #12]
   1b38c:	ldr	r0, [sp, #12]
   1b390:	str	r0, [fp, #-4]
   1b394:	ldr	r0, [fp, #-4]
   1b398:	mov	sp, fp
   1b39c:	pop	{fp, pc}
   1b3a0:	push	{fp, lr}
   1b3a4:	mov	fp, sp
   1b3a8:	sub	sp, sp, #8
   1b3ac:	str	r0, [sp]
   1b3b0:	ldr	r0, [sp]
   1b3b4:	movw	r1, #0
   1b3b8:	cmp	r0, r1
   1b3bc:	beq	1b3d0 <__assert_fail@plt+0xa2e0>
   1b3c0:	ldr	r0, [sp]
   1b3c4:	bl	10f94 <__freading@plt>
   1b3c8:	cmp	r0, #0
   1b3cc:	bne	1b3e0 <__assert_fail@plt+0xa2f0>
   1b3d0:	ldr	r0, [sp]
   1b3d4:	bl	10ea4 <fflush@plt>
   1b3d8:	str	r0, [sp, #4]
   1b3dc:	b	1b3f4 <__assert_fail@plt+0xa304>
   1b3e0:	ldr	r0, [sp]
   1b3e4:	bl	1b400 <__assert_fail@plt+0xa310>
   1b3e8:	ldr	r0, [sp]
   1b3ec:	bl	10ea4 <fflush@plt>
   1b3f0:	str	r0, [sp, #4]
   1b3f4:	ldr	r0, [sp, #4]
   1b3f8:	mov	sp, fp
   1b3fc:	pop	{fp, pc}
   1b400:	push	{fp, lr}
   1b404:	mov	fp, sp
   1b408:	sub	sp, sp, #8
   1b40c:	str	r0, [sp, #4]
   1b410:	ldr	r0, [sp, #4]
   1b414:	ldr	r0, [r0]
   1b418:	and	r0, r0, #256	; 0x100
   1b41c:	cmp	r0, #0
   1b420:	beq	1b444 <__assert_fail@plt+0xa354>
   1b424:	ldr	r0, [sp, #4]
   1b428:	mov	r1, sp
   1b42c:	mov	r2, #1
   1b430:	str	r2, [r1]
   1b434:	mov	r1, #0
   1b438:	mov	r2, r1
   1b43c:	mov	r3, r1
   1b440:	bl	1b44c <__assert_fail@plt+0xa35c>
   1b444:	mov	sp, fp
   1b448:	pop	{fp, pc}
   1b44c:	push	{fp, lr}
   1b450:	mov	fp, sp
   1b454:	sub	sp, sp, #32
   1b458:	ldr	r1, [fp, #8]
   1b45c:	str	r0, [fp, #-8]
   1b460:	str	r3, [sp, #20]
   1b464:	str	r2, [sp, #16]
   1b468:	ldr	r0, [fp, #-8]
   1b46c:	ldr	r0, [r0, #8]
   1b470:	ldr	r2, [fp, #-8]
   1b474:	ldr	r2, [r2, #4]
   1b478:	cmp	r0, r2
   1b47c:	bne	1b528 <__assert_fail@plt+0xa438>
   1b480:	ldr	r0, [fp, #-8]
   1b484:	ldr	r0, [r0, #20]
   1b488:	ldr	r1, [fp, #-8]
   1b48c:	ldr	r1, [r1, #16]
   1b490:	cmp	r0, r1
   1b494:	bne	1b528 <__assert_fail@plt+0xa438>
   1b498:	ldr	r0, [fp, #-8]
   1b49c:	ldr	r0, [r0, #36]	; 0x24
   1b4a0:	movw	r1, #0
   1b4a4:	cmp	r0, r1
   1b4a8:	bne	1b528 <__assert_fail@plt+0xa438>
   1b4ac:	ldr	r0, [fp, #-8]
   1b4b0:	bl	11024 <fileno@plt>
   1b4b4:	ldr	r2, [sp, #16]
   1b4b8:	ldr	r3, [sp, #20]
   1b4bc:	ldr	r1, [fp, #8]
   1b4c0:	mov	ip, sp
   1b4c4:	str	r1, [ip]
   1b4c8:	bl	10f28 <lseek64@plt>
   1b4cc:	str	r1, [sp, #12]
   1b4d0:	str	r0, [sp, #8]
   1b4d4:	ldr	r0, [sp, #8]
   1b4d8:	ldr	r1, [sp, #12]
   1b4dc:	and	r0, r0, r1
   1b4e0:	cmn	r0, #1
   1b4e4:	bne	1b4f8 <__assert_fail@plt+0xa408>
   1b4e8:	b	1b4ec <__assert_fail@plt+0xa3fc>
   1b4ec:	mvn	r0, #0
   1b4f0:	str	r0, [fp, #-4]
   1b4f4:	b	1b548 <__assert_fail@plt+0xa458>
   1b4f8:	ldr	r0, [fp, #-8]
   1b4fc:	ldr	r1, [r0]
   1b500:	bic	r1, r1, #16
   1b504:	str	r1, [r0]
   1b508:	ldr	r0, [sp, #8]
   1b50c:	ldr	r1, [sp, #12]
   1b510:	ldr	r2, [fp, #-8]
   1b514:	str	r1, [r2, #84]	; 0x54
   1b518:	str	r0, [r2, #80]	; 0x50
   1b51c:	movw	r0, #0
   1b520:	str	r0, [fp, #-4]
   1b524:	b	1b548 <__assert_fail@plt+0xa458>
   1b528:	ldr	r0, [fp, #-8]
   1b52c:	ldr	r2, [sp, #16]
   1b530:	ldr	r3, [sp, #20]
   1b534:	ldr	r1, [fp, #8]
   1b538:	mov	ip, sp
   1b53c:	str	r1, [ip]
   1b540:	bl	11060 <fseeko64@plt>
   1b544:	str	r0, [fp, #-4]
   1b548:	ldr	r0, [fp, #-4]
   1b54c:	mov	sp, fp
   1b550:	pop	{fp, pc}
   1b554:	push	{fp, lr}
   1b558:	mov	fp, sp
   1b55c:	bl	11000 <__errno_location@plt>
   1b560:	movw	r1, #12
   1b564:	str	r1, [r0]
   1b568:	movw	r0, #0
   1b56c:	pop	{fp, pc}
   1b570:	push	{fp, lr}
   1b574:	mov	fp, sp
   1b578:	sub	sp, sp, #8
   1b57c:	str	r0, [sp, #4]
   1b580:	ldr	r0, [sp, #4]
   1b584:	cmn	r0, #1
   1b588:	bhi	1b59c <__assert_fail@plt+0xa4ac>
   1b58c:	ldr	r0, [sp, #4]
   1b590:	bl	1aa9c <__assert_fail@plt+0x99ac>
   1b594:	str	r0, [sp]
   1b598:	b	1b5a4 <__assert_fail@plt+0xa4b4>
   1b59c:	bl	1b554 <__assert_fail@plt+0xa464>
   1b5a0:	str	r0, [sp]
   1b5a4:	ldr	r0, [sp]
   1b5a8:	mov	sp, fp
   1b5ac:	pop	{fp, pc}
   1b5b0:	push	{fp, lr}
   1b5b4:	mov	fp, sp
   1b5b8:	sub	sp, sp, #16
   1b5bc:	str	r0, [fp, #-4]
   1b5c0:	str	r1, [sp, #8]
   1b5c4:	ldr	r0, [sp, #8]
   1b5c8:	cmn	r0, #1
   1b5cc:	bhi	1b604 <__assert_fail@plt+0xa514>
   1b5d0:	ldr	r0, [fp, #-4]
   1b5d4:	ldr	r1, [sp, #8]
   1b5d8:	ldr	r2, [sp, #8]
   1b5dc:	cmp	r2, #0
   1b5e0:	movw	r2, #0
   1b5e4:	movne	r2, #1
   1b5e8:	mvn	r3, #0
   1b5ec:	eor	r2, r2, r3
   1b5f0:	and	r2, r2, #1
   1b5f4:	orr	r1, r1, r2
   1b5f8:	bl	1ab0c <__assert_fail@plt+0x9a1c>
   1b5fc:	str	r0, [sp, #4]
   1b600:	b	1b60c <__assert_fail@plt+0xa51c>
   1b604:	bl	1b554 <__assert_fail@plt+0xa464>
   1b608:	str	r0, [sp, #4]
   1b60c:	ldr	r0, [sp, #4]
   1b610:	mov	sp, fp
   1b614:	pop	{fp, pc}
   1b618:	push	{fp, lr}
   1b61c:	mov	fp, sp
   1b620:	sub	sp, sp, #16
   1b624:	str	r0, [sp, #8]
   1b628:	str	r1, [sp, #4]
   1b62c:	ldr	r0, [sp, #8]
   1b630:	mvn	r1, #0
   1b634:	cmp	r1, r0
   1b638:	bcs	1b65c <__assert_fail@plt+0xa56c>
   1b63c:	ldr	r0, [sp, #4]
   1b640:	cmp	r0, #0
   1b644:	beq	1b654 <__assert_fail@plt+0xa564>
   1b648:	bl	1b554 <__assert_fail@plt+0xa464>
   1b64c:	str	r0, [fp, #-4]
   1b650:	b	1b69c <__assert_fail@plt+0xa5ac>
   1b654:	movw	r0, #0
   1b658:	str	r0, [sp, #8]
   1b65c:	ldr	r0, [sp, #4]
   1b660:	mvn	r1, #0
   1b664:	cmp	r1, r0
   1b668:	bcs	1b68c <__assert_fail@plt+0xa59c>
   1b66c:	ldr	r0, [sp, #8]
   1b670:	cmp	r0, #0
   1b674:	beq	1b684 <__assert_fail@plt+0xa594>
   1b678:	bl	1b554 <__assert_fail@plt+0xa464>
   1b67c:	str	r0, [fp, #-4]
   1b680:	b	1b69c <__assert_fail@plt+0xa5ac>
   1b684:	movw	r0, #0
   1b688:	str	r0, [sp, #4]
   1b68c:	ldr	r0, [sp, #8]
   1b690:	ldr	r1, [sp, #4]
   1b694:	bl	1aa00 <__assert_fail@plt+0x9910>
   1b698:	str	r0, [fp, #-4]
   1b69c:	ldr	r0, [fp, #-4]
   1b6a0:	mov	sp, fp
   1b6a4:	pop	{fp, pc}
   1b6a8:	push	{fp, lr}
   1b6ac:	mov	fp, sp
   1b6b0:	sub	sp, sp, #16
   1b6b4:	str	r0, [fp, #-4]
   1b6b8:	str	r1, [sp, #8]
   1b6bc:	str	r2, [sp, #4]
   1b6c0:	ldr	r0, [sp, #8]
   1b6c4:	cmp	r0, #0
   1b6c8:	beq	1b6d8 <__assert_fail@plt+0xa5e8>
   1b6cc:	ldr	r0, [sp, #4]
   1b6d0:	cmp	r0, #0
   1b6d4:	bne	1b6e4 <__assert_fail@plt+0xa5f4>
   1b6d8:	movw	r0, #1
   1b6dc:	str	r0, [sp, #4]
   1b6e0:	str	r0, [sp, #8]
   1b6e4:	ldr	r0, [sp, #8]
   1b6e8:	cmn	r0, #1
   1b6ec:	bhi	1b714 <__assert_fail@plt+0xa624>
   1b6f0:	ldr	r0, [sp, #4]
   1b6f4:	cmn	r0, #1
   1b6f8:	bhi	1b714 <__assert_fail@plt+0xa624>
   1b6fc:	ldr	r0, [fp, #-4]
   1b700:	ldr	r1, [sp, #8]
   1b704:	ldr	r2, [sp, #4]
   1b708:	bl	1b834 <__assert_fail@plt+0xa744>
   1b70c:	str	r0, [sp]
   1b710:	b	1b71c <__assert_fail@plt+0xa62c>
   1b714:	bl	1b554 <__assert_fail@plt+0xa464>
   1b718:	str	r0, [sp]
   1b71c:	ldr	r0, [sp]
   1b720:	mov	sp, fp
   1b724:	pop	{fp, pc}
   1b728:	push	{fp, lr}
   1b72c:	mov	fp, sp
   1b730:	sub	sp, sp, #8
   1b734:	movw	r0, #14
   1b738:	bl	110a8 <nl_langinfo@plt>
   1b73c:	str	r0, [sp, #4]
   1b740:	ldr	r0, [sp, #4]
   1b744:	movw	r1, #0
   1b748:	cmp	r0, r1
   1b74c:	bne	1b75c <__assert_fail@plt+0xa66c>
   1b750:	movw	r0, #55204	; 0xd7a4
   1b754:	movt	r0, #1
   1b758:	str	r0, [sp, #4]
   1b75c:	ldr	r0, [sp, #4]
   1b760:	ldrb	r0, [r0]
   1b764:	cmp	r0, #0
   1b768:	bne	1b778 <__assert_fail@plt+0xa688>
   1b76c:	movw	r0, #56810	; 0xddea
   1b770:	movt	r0, #1
   1b774:	str	r0, [sp, #4]
   1b778:	ldr	r0, [sp, #4]
   1b77c:	mov	sp, fp
   1b780:	pop	{fp, pc}
   1b784:	push	{fp, lr}
   1b788:	mov	fp, sp
   1b78c:	sub	sp, sp, #32
   1b790:	str	r0, [fp, #-8]
   1b794:	str	r1, [fp, #-12]
   1b798:	str	r2, [sp, #16]
   1b79c:	str	r3, [sp, #12]
   1b7a0:	ldr	r0, [fp, #-8]
   1b7a4:	movw	r1, #0
   1b7a8:	cmp	r0, r1
   1b7ac:	bne	1b7b8 <__assert_fail@plt+0xa6c8>
   1b7b0:	add	r0, sp, #4
   1b7b4:	str	r0, [fp, #-8]
   1b7b8:	ldr	r0, [fp, #-8]
   1b7bc:	ldr	r1, [fp, #-12]
   1b7c0:	ldr	r2, [sp, #16]
   1b7c4:	ldr	r3, [sp, #12]
   1b7c8:	bl	10f58 <mbrtowc@plt>
   1b7cc:	str	r0, [sp, #8]
   1b7d0:	ldr	r0, [sp, #8]
   1b7d4:	mvn	r1, #1
   1b7d8:	cmp	r1, r0
   1b7dc:	bhi	1b820 <__assert_fail@plt+0xa730>
   1b7e0:	ldr	r0, [sp, #16]
   1b7e4:	cmp	r0, #0
   1b7e8:	beq	1b820 <__assert_fail@plt+0xa730>
   1b7ec:	movw	r0, #0
   1b7f0:	bl	1cb74 <__assert_fail@plt+0xba84>
   1b7f4:	tst	r0, #1
   1b7f8:	bne	1b820 <__assert_fail@plt+0xa730>
   1b7fc:	ldr	r0, [fp, #-12]
   1b800:	ldrb	r0, [r0]
   1b804:	strb	r0, [sp, #3]
   1b808:	ldrb	r0, [sp, #3]
   1b80c:	ldr	r1, [fp, #-8]
   1b810:	str	r0, [r1]
   1b814:	movw	r0, #1
   1b818:	str	r0, [fp, #-4]
   1b81c:	b	1b828 <__assert_fail@plt+0xa738>
   1b820:	ldr	r0, [sp, #8]
   1b824:	str	r0, [fp, #-4]
   1b828:	ldr	r0, [fp, #-4]
   1b82c:	mov	sp, fp
   1b830:	pop	{fp, pc}
   1b834:	push	{fp, lr}
   1b838:	mov	fp, sp
   1b83c:	sub	sp, sp, #96	; 0x60
   1b840:	str	r0, [fp, #-8]
   1b844:	str	r1, [fp, #-12]
   1b848:	str	r2, [fp, #-16]
   1b84c:	b	1bc04 <__assert_fail@plt+0xab14>
   1b850:	b	1ba24 <__assert_fail@plt+0xa934>
   1b854:	ldr	r0, [fp, #-16]
   1b858:	cmp	r0, #0
   1b85c:	bcs	1b960 <__assert_fail@plt+0xa870>
   1b860:	ldr	r0, [fp, #-12]
   1b864:	cmp	r0, #0
   1b868:	bcs	1b8f0 <__assert_fail@plt+0xa800>
   1b86c:	b	1b88c <__assert_fail@plt+0xa79c>
   1b870:	ldr	r0, [fp, #-12]
   1b874:	ldr	r1, [fp, #-16]
   1b878:	movw	r2, #127	; 0x7f
   1b87c:	udiv	r1, r2, r1
   1b880:	cmp	r0, r1
   1b884:	bcc	1b9f4 <__assert_fail@plt+0xa904>
   1b888:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b88c:	b	1b8a0 <__assert_fail@plt+0xa7b0>
   1b890:	ldr	r0, [fp, #-16]
   1b894:	cmp	r0, #1
   1b898:	bcc	1b8b0 <__assert_fail@plt+0xa7c0>
   1b89c:	b	1b8bc <__assert_fail@plt+0xa7cc>
   1b8a0:	ldr	r0, [fp, #-16]
   1b8a4:	movw	r1, #0
   1b8a8:	cmp	r1, r0
   1b8ac:	bcs	1b8bc <__assert_fail@plt+0xa7cc>
   1b8b0:	movw	r0, #0
   1b8b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1b8b8:	b	1b8d4 <__assert_fail@plt+0xa7e4>
   1b8bc:	ldr	r0, [fp, #-16]
   1b8c0:	movw	r1, #0
   1b8c4:	sub	r0, r1, r0
   1b8c8:	movw	r1, #127	; 0x7f
   1b8cc:	udiv	r0, r1, r0
   1b8d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b8d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8d8:	ldr	r1, [fp, #-12]
   1b8dc:	mvn	r2, #0
   1b8e0:	sub	r1, r2, r1
   1b8e4:	cmp	r0, r1
   1b8e8:	bls	1b9f4 <__assert_fail@plt+0xa904>
   1b8ec:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b8f0:	ldr	r0, [fp, #-16]
   1b8f4:	cmn	r0, #1
   1b8f8:	bne	1b944 <__assert_fail@plt+0xa854>
   1b8fc:	b	1b91c <__assert_fail@plt+0xa82c>
   1b900:	ldr	r0, [fp, #-12]
   1b904:	mvn	r1, #127	; 0x7f
   1b908:	add	r0, r0, r1
   1b90c:	movw	r1, #0
   1b910:	cmp	r1, r0
   1b914:	bcc	1b9f4 <__assert_fail@plt+0xa904>
   1b918:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b91c:	ldr	r0, [fp, #-12]
   1b920:	movw	r1, #0
   1b924:	cmp	r1, r0
   1b928:	bcs	1ba0c <__assert_fail@plt+0xa91c>
   1b92c:	ldr	r0, [fp, #-12]
   1b930:	sub	r0, r0, #1
   1b934:	movw	r1, #127	; 0x7f
   1b938:	cmp	r1, r0
   1b93c:	bcc	1b9f4 <__assert_fail@plt+0xa904>
   1b940:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b944:	ldr	r0, [fp, #-16]
   1b948:	mvn	r1, #127	; 0x7f
   1b94c:	udiv	r0, r1, r0
   1b950:	ldr	r1, [fp, #-12]
   1b954:	cmp	r0, r1
   1b958:	bcc	1b9f4 <__assert_fail@plt+0xa904>
   1b95c:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b960:	ldr	r0, [fp, #-16]
   1b964:	cmp	r0, #0
   1b968:	bne	1b970 <__assert_fail@plt+0xa880>
   1b96c:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b970:	ldr	r0, [fp, #-12]
   1b974:	cmp	r0, #0
   1b978:	bcs	1b9dc <__assert_fail@plt+0xa8ec>
   1b97c:	ldr	r0, [fp, #-12]
   1b980:	cmn	r0, #1
   1b984:	bne	1b9c0 <__assert_fail@plt+0xa8d0>
   1b988:	b	1b9a8 <__assert_fail@plt+0xa8b8>
   1b98c:	ldr	r0, [fp, #-16]
   1b990:	mvn	r1, #127	; 0x7f
   1b994:	add	r0, r0, r1
   1b998:	movw	r1, #0
   1b99c:	cmp	r1, r0
   1b9a0:	bcc	1b9f4 <__assert_fail@plt+0xa904>
   1b9a4:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b9a8:	ldr	r0, [fp, #-16]
   1b9ac:	sub	r0, r0, #1
   1b9b0:	movw	r1, #127	; 0x7f
   1b9b4:	cmp	r1, r0
   1b9b8:	bcc	1b9f4 <__assert_fail@plt+0xa904>
   1b9bc:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b9c0:	ldr	r0, [fp, #-12]
   1b9c4:	mvn	r1, #127	; 0x7f
   1b9c8:	udiv	r0, r1, r0
   1b9cc:	ldr	r1, [fp, #-16]
   1b9d0:	cmp	r0, r1
   1b9d4:	bcc	1b9f4 <__assert_fail@plt+0xa904>
   1b9d8:	b	1ba0c <__assert_fail@plt+0xa91c>
   1b9dc:	ldr	r0, [fp, #-16]
   1b9e0:	movw	r1, #127	; 0x7f
   1b9e4:	udiv	r0, r1, r0
   1b9e8:	ldr	r1, [fp, #-12]
   1b9ec:	cmp	r0, r1
   1b9f0:	bcs	1ba0c <__assert_fail@plt+0xa91c>
   1b9f4:	ldr	r0, [fp, #-12]
   1b9f8:	ldr	r1, [fp, #-16]
   1b9fc:	mul	r0, r0, r1
   1ba00:	sxtb	r0, r0
   1ba04:	str	r0, [fp, #-20]	; 0xffffffec
   1ba08:	b	1cb34 <__assert_fail@plt+0xba44>
   1ba0c:	ldr	r0, [fp, #-12]
   1ba10:	ldr	r1, [fp, #-16]
   1ba14:	mul	r0, r0, r1
   1ba18:	sxtb	r0, r0
   1ba1c:	str	r0, [fp, #-20]	; 0xffffffec
   1ba20:	b	1cb4c <__assert_fail@plt+0xba5c>
   1ba24:	ldr	r0, [fp, #-16]
   1ba28:	cmp	r0, #0
   1ba2c:	bcs	1bb38 <__assert_fail@plt+0xaa48>
   1ba30:	ldr	r0, [fp, #-12]
   1ba34:	cmp	r0, #0
   1ba38:	bcs	1bac0 <__assert_fail@plt+0xa9d0>
   1ba3c:	b	1ba5c <__assert_fail@plt+0xa96c>
   1ba40:	ldr	r0, [fp, #-12]
   1ba44:	ldr	r1, [fp, #-16]
   1ba48:	movw	r2, #255	; 0xff
   1ba4c:	udiv	r1, r2, r1
   1ba50:	cmp	r0, r1
   1ba54:	bcc	1bbd4 <__assert_fail@plt+0xaae4>
   1ba58:	b	1bbec <__assert_fail@plt+0xaafc>
   1ba5c:	b	1ba70 <__assert_fail@plt+0xa980>
   1ba60:	ldr	r0, [fp, #-16]
   1ba64:	cmp	r0, #1
   1ba68:	bcc	1ba80 <__assert_fail@plt+0xa990>
   1ba6c:	b	1ba8c <__assert_fail@plt+0xa99c>
   1ba70:	ldr	r0, [fp, #-16]
   1ba74:	movw	r1, #0
   1ba78:	cmp	r1, r0
   1ba7c:	bcs	1ba8c <__assert_fail@plt+0xa99c>
   1ba80:	movw	r0, #0
   1ba84:	str	r0, [fp, #-28]	; 0xffffffe4
   1ba88:	b	1baa4 <__assert_fail@plt+0xa9b4>
   1ba8c:	ldr	r0, [fp, #-16]
   1ba90:	movw	r1, #0
   1ba94:	sub	r0, r1, r0
   1ba98:	movw	r1, #255	; 0xff
   1ba9c:	udiv	r0, r1, r0
   1baa0:	str	r0, [fp, #-28]	; 0xffffffe4
   1baa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1baa8:	ldr	r1, [fp, #-12]
   1baac:	mvn	r2, #0
   1bab0:	sub	r1, r2, r1
   1bab4:	cmp	r0, r1
   1bab8:	bls	1bbd4 <__assert_fail@plt+0xaae4>
   1babc:	b	1bbec <__assert_fail@plt+0xaafc>
   1bac0:	b	1bac8 <__assert_fail@plt+0xa9d8>
   1bac4:	b	1bacc <__assert_fail@plt+0xa9dc>
   1bac8:	b	1bb1c <__assert_fail@plt+0xaa2c>
   1bacc:	ldr	r0, [fp, #-16]
   1bad0:	cmn	r0, #1
   1bad4:	bne	1bb1c <__assert_fail@plt+0xaa2c>
   1bad8:	b	1baf4 <__assert_fail@plt+0xaa04>
   1badc:	ldr	r0, [fp, #-12]
   1bae0:	add	r0, r0, #0
   1bae4:	movw	r1, #0
   1bae8:	cmp	r1, r0
   1baec:	bcc	1bbd4 <__assert_fail@plt+0xaae4>
   1baf0:	b	1bbec <__assert_fail@plt+0xaafc>
   1baf4:	ldr	r0, [fp, #-12]
   1baf8:	movw	r1, #0
   1bafc:	cmp	r1, r0
   1bb00:	bcs	1bbec <__assert_fail@plt+0xaafc>
   1bb04:	ldr	r0, [fp, #-12]
   1bb08:	sub	r0, r0, #1
   1bb0c:	mvn	r1, #0
   1bb10:	cmp	r1, r0
   1bb14:	bcc	1bbd4 <__assert_fail@plt+0xaae4>
   1bb18:	b	1bbec <__assert_fail@plt+0xaafc>
   1bb1c:	ldr	r0, [fp, #-16]
   1bb20:	movw	r1, #0
   1bb24:	udiv	r0, r1, r0
   1bb28:	ldr	r1, [fp, #-12]
   1bb2c:	cmp	r0, r1
   1bb30:	bcc	1bbd4 <__assert_fail@plt+0xaae4>
   1bb34:	b	1bbec <__assert_fail@plt+0xaafc>
   1bb38:	ldr	r0, [fp, #-16]
   1bb3c:	cmp	r0, #0
   1bb40:	bne	1bb48 <__assert_fail@plt+0xaa58>
   1bb44:	b	1bbec <__assert_fail@plt+0xaafc>
   1bb48:	ldr	r0, [fp, #-12]
   1bb4c:	cmp	r0, #0
   1bb50:	bcs	1bbbc <__assert_fail@plt+0xaacc>
   1bb54:	b	1bb5c <__assert_fail@plt+0xaa6c>
   1bb58:	b	1bb60 <__assert_fail@plt+0xaa70>
   1bb5c:	b	1bba0 <__assert_fail@plt+0xaab0>
   1bb60:	ldr	r0, [fp, #-12]
   1bb64:	cmn	r0, #1
   1bb68:	bne	1bba0 <__assert_fail@plt+0xaab0>
   1bb6c:	b	1bb88 <__assert_fail@plt+0xaa98>
   1bb70:	ldr	r0, [fp, #-16]
   1bb74:	add	r0, r0, #0
   1bb78:	movw	r1, #0
   1bb7c:	cmp	r1, r0
   1bb80:	bcc	1bbd4 <__assert_fail@plt+0xaae4>
   1bb84:	b	1bbec <__assert_fail@plt+0xaafc>
   1bb88:	ldr	r0, [fp, #-16]
   1bb8c:	sub	r0, r0, #1
   1bb90:	mvn	r1, #0
   1bb94:	cmp	r1, r0
   1bb98:	bcc	1bbd4 <__assert_fail@plt+0xaae4>
   1bb9c:	b	1bbec <__assert_fail@plt+0xaafc>
   1bba0:	ldr	r0, [fp, #-12]
   1bba4:	movw	r1, #0
   1bba8:	udiv	r0, r1, r0
   1bbac:	ldr	r1, [fp, #-16]
   1bbb0:	cmp	r0, r1
   1bbb4:	bcc	1bbd4 <__assert_fail@plt+0xaae4>
   1bbb8:	b	1bbec <__assert_fail@plt+0xaafc>
   1bbbc:	ldr	r0, [fp, #-16]
   1bbc0:	movw	r1, #255	; 0xff
   1bbc4:	udiv	r0, r1, r0
   1bbc8:	ldr	r1, [fp, #-12]
   1bbcc:	cmp	r0, r1
   1bbd0:	bcs	1bbec <__assert_fail@plt+0xaafc>
   1bbd4:	ldr	r0, [fp, #-12]
   1bbd8:	ldr	r1, [fp, #-16]
   1bbdc:	mul	r0, r0, r1
   1bbe0:	and	r0, r0, #255	; 0xff
   1bbe4:	str	r0, [fp, #-20]	; 0xffffffec
   1bbe8:	b	1cb34 <__assert_fail@plt+0xba44>
   1bbec:	ldr	r0, [fp, #-12]
   1bbf0:	ldr	r1, [fp, #-16]
   1bbf4:	mul	r0, r0, r1
   1bbf8:	and	r0, r0, #255	; 0xff
   1bbfc:	str	r0, [fp, #-20]	; 0xffffffec
   1bc00:	b	1cb4c <__assert_fail@plt+0xba5c>
   1bc04:	b	1bfbc <__assert_fail@plt+0xaecc>
   1bc08:	b	1bddc <__assert_fail@plt+0xacec>
   1bc0c:	ldr	r0, [fp, #-16]
   1bc10:	cmp	r0, #0
   1bc14:	bcs	1bd18 <__assert_fail@plt+0xac28>
   1bc18:	ldr	r0, [fp, #-12]
   1bc1c:	cmp	r0, #0
   1bc20:	bcs	1bca8 <__assert_fail@plt+0xabb8>
   1bc24:	b	1bc44 <__assert_fail@plt+0xab54>
   1bc28:	ldr	r0, [fp, #-12]
   1bc2c:	ldr	r1, [fp, #-16]
   1bc30:	movw	r2, #32767	; 0x7fff
   1bc34:	udiv	r1, r2, r1
   1bc38:	cmp	r0, r1
   1bc3c:	bcc	1bdac <__assert_fail@plt+0xacbc>
   1bc40:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bc44:	b	1bc58 <__assert_fail@plt+0xab68>
   1bc48:	ldr	r0, [fp, #-16]
   1bc4c:	cmp	r0, #1
   1bc50:	bcc	1bc68 <__assert_fail@plt+0xab78>
   1bc54:	b	1bc74 <__assert_fail@plt+0xab84>
   1bc58:	ldr	r0, [fp, #-16]
   1bc5c:	movw	r1, #0
   1bc60:	cmp	r1, r0
   1bc64:	bcs	1bc74 <__assert_fail@plt+0xab84>
   1bc68:	movw	r0, #0
   1bc6c:	str	r0, [fp, #-32]	; 0xffffffe0
   1bc70:	b	1bc8c <__assert_fail@plt+0xab9c>
   1bc74:	ldr	r0, [fp, #-16]
   1bc78:	movw	r1, #0
   1bc7c:	sub	r0, r1, r0
   1bc80:	movw	r1, #32767	; 0x7fff
   1bc84:	udiv	r0, r1, r0
   1bc88:	str	r0, [fp, #-32]	; 0xffffffe0
   1bc8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc90:	ldr	r1, [fp, #-12]
   1bc94:	mvn	r2, #0
   1bc98:	sub	r1, r2, r1
   1bc9c:	cmp	r0, r1
   1bca0:	bls	1bdac <__assert_fail@plt+0xacbc>
   1bca4:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bca8:	ldr	r0, [fp, #-16]
   1bcac:	cmn	r0, #1
   1bcb0:	bne	1bcfc <__assert_fail@plt+0xac0c>
   1bcb4:	b	1bcd4 <__assert_fail@plt+0xabe4>
   1bcb8:	ldr	r0, [pc, #3760]	; 1cb70 <__assert_fail@plt+0xba80>
   1bcbc:	ldr	r1, [fp, #-12]
   1bcc0:	add	r0, r1, r0
   1bcc4:	movw	r1, #0
   1bcc8:	cmp	r1, r0
   1bccc:	bcc	1bdac <__assert_fail@plt+0xacbc>
   1bcd0:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bcd4:	ldr	r0, [fp, #-12]
   1bcd8:	movw	r1, #0
   1bcdc:	cmp	r1, r0
   1bce0:	bcs	1bdc4 <__assert_fail@plt+0xacd4>
   1bce4:	ldr	r0, [fp, #-12]
   1bce8:	sub	r0, r0, #1
   1bcec:	movw	r1, #32767	; 0x7fff
   1bcf0:	cmp	r1, r0
   1bcf4:	bcc	1bdac <__assert_fail@plt+0xacbc>
   1bcf8:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bcfc:	ldr	r0, [pc, #3692]	; 1cb70 <__assert_fail@plt+0xba80>
   1bd00:	ldr	r1, [fp, #-16]
   1bd04:	udiv	r0, r0, r1
   1bd08:	ldr	r1, [fp, #-12]
   1bd0c:	cmp	r0, r1
   1bd10:	bcc	1bdac <__assert_fail@plt+0xacbc>
   1bd14:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bd18:	ldr	r0, [fp, #-16]
   1bd1c:	cmp	r0, #0
   1bd20:	bne	1bd28 <__assert_fail@plt+0xac38>
   1bd24:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bd28:	ldr	r0, [fp, #-12]
   1bd2c:	cmp	r0, #0
   1bd30:	bcs	1bd94 <__assert_fail@plt+0xaca4>
   1bd34:	ldr	r0, [fp, #-12]
   1bd38:	cmn	r0, #1
   1bd3c:	bne	1bd78 <__assert_fail@plt+0xac88>
   1bd40:	b	1bd60 <__assert_fail@plt+0xac70>
   1bd44:	ldr	r0, [pc, #3620]	; 1cb70 <__assert_fail@plt+0xba80>
   1bd48:	ldr	r1, [fp, #-16]
   1bd4c:	add	r0, r1, r0
   1bd50:	movw	r1, #0
   1bd54:	cmp	r1, r0
   1bd58:	bcc	1bdac <__assert_fail@plt+0xacbc>
   1bd5c:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bd60:	ldr	r0, [fp, #-16]
   1bd64:	sub	r0, r0, #1
   1bd68:	movw	r1, #32767	; 0x7fff
   1bd6c:	cmp	r1, r0
   1bd70:	bcc	1bdac <__assert_fail@plt+0xacbc>
   1bd74:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bd78:	ldr	r0, [pc, #3568]	; 1cb70 <__assert_fail@plt+0xba80>
   1bd7c:	ldr	r1, [fp, #-12]
   1bd80:	udiv	r0, r0, r1
   1bd84:	ldr	r1, [fp, #-16]
   1bd88:	cmp	r0, r1
   1bd8c:	bcc	1bdac <__assert_fail@plt+0xacbc>
   1bd90:	b	1bdc4 <__assert_fail@plt+0xacd4>
   1bd94:	ldr	r0, [fp, #-16]
   1bd98:	movw	r1, #32767	; 0x7fff
   1bd9c:	udiv	r0, r1, r0
   1bda0:	ldr	r1, [fp, #-12]
   1bda4:	cmp	r0, r1
   1bda8:	bcs	1bdc4 <__assert_fail@plt+0xacd4>
   1bdac:	ldr	r0, [fp, #-12]
   1bdb0:	ldr	r1, [fp, #-16]
   1bdb4:	mul	r0, r0, r1
   1bdb8:	sxth	r0, r0
   1bdbc:	str	r0, [fp, #-20]	; 0xffffffec
   1bdc0:	b	1cb34 <__assert_fail@plt+0xba44>
   1bdc4:	ldr	r0, [fp, #-12]
   1bdc8:	ldr	r1, [fp, #-16]
   1bdcc:	mul	r0, r0, r1
   1bdd0:	sxth	r0, r0
   1bdd4:	str	r0, [fp, #-20]	; 0xffffffec
   1bdd8:	b	1cb4c <__assert_fail@plt+0xba5c>
   1bddc:	ldr	r0, [fp, #-16]
   1bde0:	cmp	r0, #0
   1bde4:	bcs	1bef0 <__assert_fail@plt+0xae00>
   1bde8:	ldr	r0, [fp, #-12]
   1bdec:	cmp	r0, #0
   1bdf0:	bcs	1be78 <__assert_fail@plt+0xad88>
   1bdf4:	b	1be14 <__assert_fail@plt+0xad24>
   1bdf8:	ldr	r0, [fp, #-12]
   1bdfc:	ldr	r1, [fp, #-16]
   1be00:	movw	r2, #65535	; 0xffff
   1be04:	udiv	r1, r2, r1
   1be08:	cmp	r0, r1
   1be0c:	bcc	1bf8c <__assert_fail@plt+0xae9c>
   1be10:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1be14:	b	1be28 <__assert_fail@plt+0xad38>
   1be18:	ldr	r0, [fp, #-16]
   1be1c:	cmp	r0, #1
   1be20:	bcc	1be38 <__assert_fail@plt+0xad48>
   1be24:	b	1be44 <__assert_fail@plt+0xad54>
   1be28:	ldr	r0, [fp, #-16]
   1be2c:	movw	r1, #0
   1be30:	cmp	r1, r0
   1be34:	bcs	1be44 <__assert_fail@plt+0xad54>
   1be38:	movw	r0, #0
   1be3c:	str	r0, [fp, #-36]	; 0xffffffdc
   1be40:	b	1be5c <__assert_fail@plt+0xad6c>
   1be44:	ldr	r0, [fp, #-16]
   1be48:	movw	r1, #0
   1be4c:	sub	r0, r1, r0
   1be50:	movw	r1, #65535	; 0xffff
   1be54:	udiv	r0, r1, r0
   1be58:	str	r0, [fp, #-36]	; 0xffffffdc
   1be5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1be60:	ldr	r1, [fp, #-12]
   1be64:	mvn	r2, #0
   1be68:	sub	r1, r2, r1
   1be6c:	cmp	r0, r1
   1be70:	bls	1bf8c <__assert_fail@plt+0xae9c>
   1be74:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1be78:	b	1be80 <__assert_fail@plt+0xad90>
   1be7c:	b	1be84 <__assert_fail@plt+0xad94>
   1be80:	b	1bed4 <__assert_fail@plt+0xade4>
   1be84:	ldr	r0, [fp, #-16]
   1be88:	cmn	r0, #1
   1be8c:	bne	1bed4 <__assert_fail@plt+0xade4>
   1be90:	b	1beac <__assert_fail@plt+0xadbc>
   1be94:	ldr	r0, [fp, #-12]
   1be98:	add	r0, r0, #0
   1be9c:	movw	r1, #0
   1bea0:	cmp	r1, r0
   1bea4:	bcc	1bf8c <__assert_fail@plt+0xae9c>
   1bea8:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1beac:	ldr	r0, [fp, #-12]
   1beb0:	movw	r1, #0
   1beb4:	cmp	r1, r0
   1beb8:	bcs	1bfa4 <__assert_fail@plt+0xaeb4>
   1bebc:	ldr	r0, [fp, #-12]
   1bec0:	sub	r0, r0, #1
   1bec4:	mvn	r1, #0
   1bec8:	cmp	r1, r0
   1becc:	bcc	1bf8c <__assert_fail@plt+0xae9c>
   1bed0:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1bed4:	ldr	r0, [fp, #-16]
   1bed8:	movw	r1, #0
   1bedc:	udiv	r0, r1, r0
   1bee0:	ldr	r1, [fp, #-12]
   1bee4:	cmp	r0, r1
   1bee8:	bcc	1bf8c <__assert_fail@plt+0xae9c>
   1beec:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1bef0:	ldr	r0, [fp, #-16]
   1bef4:	cmp	r0, #0
   1bef8:	bne	1bf00 <__assert_fail@plt+0xae10>
   1befc:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1bf00:	ldr	r0, [fp, #-12]
   1bf04:	cmp	r0, #0
   1bf08:	bcs	1bf74 <__assert_fail@plt+0xae84>
   1bf0c:	b	1bf14 <__assert_fail@plt+0xae24>
   1bf10:	b	1bf18 <__assert_fail@plt+0xae28>
   1bf14:	b	1bf58 <__assert_fail@plt+0xae68>
   1bf18:	ldr	r0, [fp, #-12]
   1bf1c:	cmn	r0, #1
   1bf20:	bne	1bf58 <__assert_fail@plt+0xae68>
   1bf24:	b	1bf40 <__assert_fail@plt+0xae50>
   1bf28:	ldr	r0, [fp, #-16]
   1bf2c:	add	r0, r0, #0
   1bf30:	movw	r1, #0
   1bf34:	cmp	r1, r0
   1bf38:	bcc	1bf8c <__assert_fail@plt+0xae9c>
   1bf3c:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1bf40:	ldr	r0, [fp, #-16]
   1bf44:	sub	r0, r0, #1
   1bf48:	mvn	r1, #0
   1bf4c:	cmp	r1, r0
   1bf50:	bcc	1bf8c <__assert_fail@plt+0xae9c>
   1bf54:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1bf58:	ldr	r0, [fp, #-12]
   1bf5c:	movw	r1, #0
   1bf60:	udiv	r0, r1, r0
   1bf64:	ldr	r1, [fp, #-16]
   1bf68:	cmp	r0, r1
   1bf6c:	bcc	1bf8c <__assert_fail@plt+0xae9c>
   1bf70:	b	1bfa4 <__assert_fail@plt+0xaeb4>
   1bf74:	ldr	r0, [fp, #-16]
   1bf78:	movw	r1, #65535	; 0xffff
   1bf7c:	udiv	r0, r1, r0
   1bf80:	ldr	r1, [fp, #-12]
   1bf84:	cmp	r0, r1
   1bf88:	bcs	1bfa4 <__assert_fail@plt+0xaeb4>
   1bf8c:	ldr	r0, [fp, #-12]
   1bf90:	ldr	r1, [fp, #-16]
   1bf94:	mul	r0, r0, r1
   1bf98:	uxth	r0, r0
   1bf9c:	str	r0, [fp, #-20]	; 0xffffffec
   1bfa0:	b	1cb34 <__assert_fail@plt+0xba44>
   1bfa4:	ldr	r0, [fp, #-12]
   1bfa8:	ldr	r1, [fp, #-16]
   1bfac:	mul	r0, r0, r1
   1bfb0:	uxth	r0, r0
   1bfb4:	str	r0, [fp, #-20]	; 0xffffffec
   1bfb8:	b	1cb4c <__assert_fail@plt+0xba5c>
   1bfbc:	b	1bfc0 <__assert_fail@plt+0xaed0>
   1bfc0:	b	1c184 <__assert_fail@plt+0xb094>
   1bfc4:	ldr	r0, [fp, #-16]
   1bfc8:	cmp	r0, #0
   1bfcc:	bcs	1c0cc <__assert_fail@plt+0xafdc>
   1bfd0:	ldr	r0, [fp, #-12]
   1bfd4:	cmp	r0, #0
   1bfd8:	bcs	1c060 <__assert_fail@plt+0xaf70>
   1bfdc:	b	1bffc <__assert_fail@plt+0xaf0c>
   1bfe0:	ldr	r0, [pc, #2944]	; 1cb68 <__assert_fail@plt+0xba78>
   1bfe4:	ldr	r1, [fp, #-12]
   1bfe8:	ldr	r2, [fp, #-16]
   1bfec:	udiv	r0, r0, r2
   1bff0:	cmp	r1, r0
   1bff4:	bcc	1c15c <__assert_fail@plt+0xb06c>
   1bff8:	b	1c170 <__assert_fail@plt+0xb080>
   1bffc:	b	1c010 <__assert_fail@plt+0xaf20>
   1c000:	ldr	r0, [fp, #-16]
   1c004:	cmp	r0, #1
   1c008:	bcc	1c020 <__assert_fail@plt+0xaf30>
   1c00c:	b	1c02c <__assert_fail@plt+0xaf3c>
   1c010:	ldr	r0, [fp, #-16]
   1c014:	movw	r1, #0
   1c018:	cmp	r1, r0
   1c01c:	bcs	1c02c <__assert_fail@plt+0xaf3c>
   1c020:	movw	r0, #0
   1c024:	str	r0, [fp, #-40]	; 0xffffffd8
   1c028:	b	1c044 <__assert_fail@plt+0xaf54>
   1c02c:	ldr	r0, [pc, #2868]	; 1cb68 <__assert_fail@plt+0xba78>
   1c030:	ldr	r1, [fp, #-16]
   1c034:	movw	r2, #0
   1c038:	sub	r1, r2, r1
   1c03c:	udiv	r0, r0, r1
   1c040:	str	r0, [fp, #-40]	; 0xffffffd8
   1c044:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c048:	ldr	r1, [fp, #-12]
   1c04c:	mvn	r2, #0
   1c050:	sub	r1, r2, r1
   1c054:	cmp	r0, r1
   1c058:	bls	1c15c <__assert_fail@plt+0xb06c>
   1c05c:	b	1c170 <__assert_fail@plt+0xb080>
   1c060:	ldr	r0, [fp, #-16]
   1c064:	cmn	r0, #1
   1c068:	bne	1c0b0 <__assert_fail@plt+0xafc0>
   1c06c:	b	1c088 <__assert_fail@plt+0xaf98>
   1c070:	ldr	r0, [fp, #-12]
   1c074:	add	r0, r0, #-2147483648	; 0x80000000
   1c078:	movw	r1, #0
   1c07c:	cmp	r1, r0
   1c080:	bcc	1c15c <__assert_fail@plt+0xb06c>
   1c084:	b	1c170 <__assert_fail@plt+0xb080>
   1c088:	ldr	r0, [fp, #-12]
   1c08c:	movw	r1, #0
   1c090:	cmp	r1, r0
   1c094:	bcs	1c170 <__assert_fail@plt+0xb080>
   1c098:	ldr	r0, [pc, #2760]	; 1cb68 <__assert_fail@plt+0xba78>
   1c09c:	ldr	r1, [fp, #-12]
   1c0a0:	sub	r1, r1, #1
   1c0a4:	cmp	r0, r1
   1c0a8:	bcc	1c15c <__assert_fail@plt+0xb06c>
   1c0ac:	b	1c170 <__assert_fail@plt+0xb080>
   1c0b0:	ldr	r0, [pc, #2740]	; 1cb6c <__assert_fail@plt+0xba7c>
   1c0b4:	ldr	r1, [fp, #-16]
   1c0b8:	udiv	r0, r0, r1
   1c0bc:	ldr	r1, [fp, #-12]
   1c0c0:	cmp	r0, r1
   1c0c4:	bcc	1c15c <__assert_fail@plt+0xb06c>
   1c0c8:	b	1c170 <__assert_fail@plt+0xb080>
   1c0cc:	ldr	r0, [fp, #-16]
   1c0d0:	cmp	r0, #0
   1c0d4:	bne	1c0dc <__assert_fail@plt+0xafec>
   1c0d8:	b	1c170 <__assert_fail@plt+0xb080>
   1c0dc:	ldr	r0, [fp, #-12]
   1c0e0:	cmp	r0, #0
   1c0e4:	bcs	1c144 <__assert_fail@plt+0xb054>
   1c0e8:	ldr	r0, [fp, #-12]
   1c0ec:	cmn	r0, #1
   1c0f0:	bne	1c128 <__assert_fail@plt+0xb038>
   1c0f4:	b	1c110 <__assert_fail@plt+0xb020>
   1c0f8:	ldr	r0, [fp, #-16]
   1c0fc:	add	r0, r0, #-2147483648	; 0x80000000
   1c100:	movw	r1, #0
   1c104:	cmp	r1, r0
   1c108:	bcc	1c15c <__assert_fail@plt+0xb06c>
   1c10c:	b	1c170 <__assert_fail@plt+0xb080>
   1c110:	ldr	r0, [pc, #2640]	; 1cb68 <__assert_fail@plt+0xba78>
   1c114:	ldr	r1, [fp, #-16]
   1c118:	sub	r1, r1, #1
   1c11c:	cmp	r0, r1
   1c120:	bcc	1c15c <__assert_fail@plt+0xb06c>
   1c124:	b	1c170 <__assert_fail@plt+0xb080>
   1c128:	ldr	r0, [pc, #2620]	; 1cb6c <__assert_fail@plt+0xba7c>
   1c12c:	ldr	r1, [fp, #-12]
   1c130:	udiv	r0, r0, r1
   1c134:	ldr	r1, [fp, #-16]
   1c138:	cmp	r0, r1
   1c13c:	bcc	1c15c <__assert_fail@plt+0xb06c>
   1c140:	b	1c170 <__assert_fail@plt+0xb080>
   1c144:	ldr	r0, [pc, #2588]	; 1cb68 <__assert_fail@plt+0xba78>
   1c148:	ldr	r1, [fp, #-16]
   1c14c:	udiv	r0, r0, r1
   1c150:	ldr	r1, [fp, #-12]
   1c154:	cmp	r0, r1
   1c158:	bcs	1c170 <__assert_fail@plt+0xb080>
   1c15c:	ldr	r0, [fp, #-12]
   1c160:	ldr	r1, [fp, #-16]
   1c164:	mul	r0, r0, r1
   1c168:	str	r0, [fp, #-20]	; 0xffffffec
   1c16c:	b	1cb34 <__assert_fail@plt+0xba44>
   1c170:	ldr	r0, [fp, #-12]
   1c174:	ldr	r1, [fp, #-16]
   1c178:	mul	r0, r0, r1
   1c17c:	str	r0, [fp, #-20]	; 0xffffffec
   1c180:	b	1cb4c <__assert_fail@plt+0xba5c>
   1c184:	ldr	r0, [fp, #-16]
   1c188:	cmp	r0, #0
   1c18c:	bcs	1c298 <__assert_fail@plt+0xb1a8>
   1c190:	ldr	r0, [fp, #-12]
   1c194:	cmp	r0, #0
   1c198:	bcs	1c220 <__assert_fail@plt+0xb130>
   1c19c:	b	1c1bc <__assert_fail@plt+0xb0cc>
   1c1a0:	ldr	r0, [fp, #-12]
   1c1a4:	ldr	r1, [fp, #-16]
   1c1a8:	mvn	r2, #0
   1c1ac:	udiv	r1, r2, r1
   1c1b0:	cmp	r0, r1
   1c1b4:	bcc	1c334 <__assert_fail@plt+0xb244>
   1c1b8:	b	1c348 <__assert_fail@plt+0xb258>
   1c1bc:	b	1c1d0 <__assert_fail@plt+0xb0e0>
   1c1c0:	ldr	r0, [fp, #-16]
   1c1c4:	cmp	r0, #1
   1c1c8:	bcc	1c1e0 <__assert_fail@plt+0xb0f0>
   1c1cc:	b	1c1ec <__assert_fail@plt+0xb0fc>
   1c1d0:	ldr	r0, [fp, #-16]
   1c1d4:	movw	r1, #0
   1c1d8:	cmp	r1, r0
   1c1dc:	bcs	1c1ec <__assert_fail@plt+0xb0fc>
   1c1e0:	movw	r0, #1
   1c1e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1c1e8:	b	1c204 <__assert_fail@plt+0xb114>
   1c1ec:	ldr	r0, [fp, #-16]
   1c1f0:	movw	r1, #0
   1c1f4:	sub	r0, r1, r0
   1c1f8:	mvn	r1, #0
   1c1fc:	udiv	r0, r1, r0
   1c200:	str	r0, [fp, #-44]	; 0xffffffd4
   1c204:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c208:	ldr	r1, [fp, #-12]
   1c20c:	mvn	r2, #0
   1c210:	sub	r1, r2, r1
   1c214:	cmp	r0, r1
   1c218:	bls	1c334 <__assert_fail@plt+0xb244>
   1c21c:	b	1c348 <__assert_fail@plt+0xb258>
   1c220:	b	1c228 <__assert_fail@plt+0xb138>
   1c224:	b	1c22c <__assert_fail@plt+0xb13c>
   1c228:	b	1c27c <__assert_fail@plt+0xb18c>
   1c22c:	ldr	r0, [fp, #-16]
   1c230:	cmn	r0, #1
   1c234:	bne	1c27c <__assert_fail@plt+0xb18c>
   1c238:	b	1c254 <__assert_fail@plt+0xb164>
   1c23c:	ldr	r0, [fp, #-12]
   1c240:	add	r0, r0, #0
   1c244:	movw	r1, #0
   1c248:	cmp	r1, r0
   1c24c:	bcc	1c334 <__assert_fail@plt+0xb244>
   1c250:	b	1c348 <__assert_fail@plt+0xb258>
   1c254:	ldr	r0, [fp, #-12]
   1c258:	movw	r1, #0
   1c25c:	cmp	r1, r0
   1c260:	bcs	1c348 <__assert_fail@plt+0xb258>
   1c264:	ldr	r0, [fp, #-12]
   1c268:	sub	r0, r0, #1
   1c26c:	mvn	r1, #0
   1c270:	cmp	r1, r0
   1c274:	bcc	1c334 <__assert_fail@plt+0xb244>
   1c278:	b	1c348 <__assert_fail@plt+0xb258>
   1c27c:	ldr	r0, [fp, #-16]
   1c280:	movw	r1, #0
   1c284:	udiv	r0, r1, r0
   1c288:	ldr	r1, [fp, #-12]
   1c28c:	cmp	r0, r1
   1c290:	bcc	1c334 <__assert_fail@plt+0xb244>
   1c294:	b	1c348 <__assert_fail@plt+0xb258>
   1c298:	ldr	r0, [fp, #-16]
   1c29c:	cmp	r0, #0
   1c2a0:	bne	1c2a8 <__assert_fail@plt+0xb1b8>
   1c2a4:	b	1c348 <__assert_fail@plt+0xb258>
   1c2a8:	ldr	r0, [fp, #-12]
   1c2ac:	cmp	r0, #0
   1c2b0:	bcs	1c31c <__assert_fail@plt+0xb22c>
   1c2b4:	b	1c2bc <__assert_fail@plt+0xb1cc>
   1c2b8:	b	1c2c0 <__assert_fail@plt+0xb1d0>
   1c2bc:	b	1c300 <__assert_fail@plt+0xb210>
   1c2c0:	ldr	r0, [fp, #-12]
   1c2c4:	cmn	r0, #1
   1c2c8:	bne	1c300 <__assert_fail@plt+0xb210>
   1c2cc:	b	1c2e8 <__assert_fail@plt+0xb1f8>
   1c2d0:	ldr	r0, [fp, #-16]
   1c2d4:	add	r0, r0, #0
   1c2d8:	movw	r1, #0
   1c2dc:	cmp	r1, r0
   1c2e0:	bcc	1c334 <__assert_fail@plt+0xb244>
   1c2e4:	b	1c348 <__assert_fail@plt+0xb258>
   1c2e8:	ldr	r0, [fp, #-16]
   1c2ec:	sub	r0, r0, #1
   1c2f0:	mvn	r1, #0
   1c2f4:	cmp	r1, r0
   1c2f8:	bcc	1c334 <__assert_fail@plt+0xb244>
   1c2fc:	b	1c348 <__assert_fail@plt+0xb258>
   1c300:	ldr	r0, [fp, #-12]
   1c304:	movw	r1, #0
   1c308:	udiv	r0, r1, r0
   1c30c:	ldr	r1, [fp, #-16]
   1c310:	cmp	r0, r1
   1c314:	bcc	1c334 <__assert_fail@plt+0xb244>
   1c318:	b	1c348 <__assert_fail@plt+0xb258>
   1c31c:	ldr	r0, [fp, #-16]
   1c320:	mvn	r1, #0
   1c324:	udiv	r0, r1, r0
   1c328:	ldr	r1, [fp, #-12]
   1c32c:	cmp	r0, r1
   1c330:	bcs	1c348 <__assert_fail@plt+0xb258>
   1c334:	ldr	r0, [fp, #-12]
   1c338:	ldr	r1, [fp, #-16]
   1c33c:	mul	r0, r0, r1
   1c340:	str	r0, [fp, #-20]	; 0xffffffec
   1c344:	b	1cb34 <__assert_fail@plt+0xba44>
   1c348:	ldr	r0, [fp, #-12]
   1c34c:	ldr	r1, [fp, #-16]
   1c350:	mul	r0, r0, r1
   1c354:	str	r0, [fp, #-20]	; 0xffffffec
   1c358:	b	1cb4c <__assert_fail@plt+0xba5c>
   1c35c:	b	1c360 <__assert_fail@plt+0xb270>
   1c360:	b	1c524 <__assert_fail@plt+0xb434>
   1c364:	ldr	r0, [fp, #-16]
   1c368:	cmp	r0, #0
   1c36c:	bcs	1c46c <__assert_fail@plt+0xb37c>
   1c370:	ldr	r0, [fp, #-12]
   1c374:	cmp	r0, #0
   1c378:	bcs	1c400 <__assert_fail@plt+0xb310>
   1c37c:	b	1c39c <__assert_fail@plt+0xb2ac>
   1c380:	ldr	r0, [pc, #2016]	; 1cb68 <__assert_fail@plt+0xba78>
   1c384:	ldr	r1, [fp, #-12]
   1c388:	ldr	r2, [fp, #-16]
   1c38c:	udiv	r0, r0, r2
   1c390:	cmp	r1, r0
   1c394:	bcc	1c4fc <__assert_fail@plt+0xb40c>
   1c398:	b	1c510 <__assert_fail@plt+0xb420>
   1c39c:	b	1c3b0 <__assert_fail@plt+0xb2c0>
   1c3a0:	ldr	r0, [fp, #-16]
   1c3a4:	cmp	r0, #1
   1c3a8:	bcc	1c3c0 <__assert_fail@plt+0xb2d0>
   1c3ac:	b	1c3cc <__assert_fail@plt+0xb2dc>
   1c3b0:	ldr	r0, [fp, #-16]
   1c3b4:	movw	r1, #0
   1c3b8:	cmp	r1, r0
   1c3bc:	bcs	1c3cc <__assert_fail@plt+0xb2dc>
   1c3c0:	movw	r0, #0
   1c3c4:	str	r0, [sp, #48]	; 0x30
   1c3c8:	b	1c3e4 <__assert_fail@plt+0xb2f4>
   1c3cc:	ldr	r0, [pc, #1940]	; 1cb68 <__assert_fail@plt+0xba78>
   1c3d0:	ldr	r1, [fp, #-16]
   1c3d4:	movw	r2, #0
   1c3d8:	sub	r1, r2, r1
   1c3dc:	udiv	r0, r0, r1
   1c3e0:	str	r0, [sp, #48]	; 0x30
   1c3e4:	ldr	r0, [sp, #48]	; 0x30
   1c3e8:	ldr	r1, [fp, #-12]
   1c3ec:	mvn	r2, #0
   1c3f0:	sub	r1, r2, r1
   1c3f4:	cmp	r0, r1
   1c3f8:	bls	1c4fc <__assert_fail@plt+0xb40c>
   1c3fc:	b	1c510 <__assert_fail@plt+0xb420>
   1c400:	ldr	r0, [fp, #-16]
   1c404:	cmn	r0, #1
   1c408:	bne	1c450 <__assert_fail@plt+0xb360>
   1c40c:	b	1c428 <__assert_fail@plt+0xb338>
   1c410:	ldr	r0, [fp, #-12]
   1c414:	add	r0, r0, #-2147483648	; 0x80000000
   1c418:	movw	r1, #0
   1c41c:	cmp	r1, r0
   1c420:	bcc	1c4fc <__assert_fail@plt+0xb40c>
   1c424:	b	1c510 <__assert_fail@plt+0xb420>
   1c428:	ldr	r0, [fp, #-12]
   1c42c:	movw	r1, #0
   1c430:	cmp	r1, r0
   1c434:	bcs	1c510 <__assert_fail@plt+0xb420>
   1c438:	ldr	r0, [pc, #1832]	; 1cb68 <__assert_fail@plt+0xba78>
   1c43c:	ldr	r1, [fp, #-12]
   1c440:	sub	r1, r1, #1
   1c444:	cmp	r0, r1
   1c448:	bcc	1c4fc <__assert_fail@plt+0xb40c>
   1c44c:	b	1c510 <__assert_fail@plt+0xb420>
   1c450:	ldr	r0, [pc, #1812]	; 1cb6c <__assert_fail@plt+0xba7c>
   1c454:	ldr	r1, [fp, #-16]
   1c458:	udiv	r0, r0, r1
   1c45c:	ldr	r1, [fp, #-12]
   1c460:	cmp	r0, r1
   1c464:	bcc	1c4fc <__assert_fail@plt+0xb40c>
   1c468:	b	1c510 <__assert_fail@plt+0xb420>
   1c46c:	ldr	r0, [fp, #-16]
   1c470:	cmp	r0, #0
   1c474:	bne	1c47c <__assert_fail@plt+0xb38c>
   1c478:	b	1c510 <__assert_fail@plt+0xb420>
   1c47c:	ldr	r0, [fp, #-12]
   1c480:	cmp	r0, #0
   1c484:	bcs	1c4e4 <__assert_fail@plt+0xb3f4>
   1c488:	ldr	r0, [fp, #-12]
   1c48c:	cmn	r0, #1
   1c490:	bne	1c4c8 <__assert_fail@plt+0xb3d8>
   1c494:	b	1c4b0 <__assert_fail@plt+0xb3c0>
   1c498:	ldr	r0, [fp, #-16]
   1c49c:	add	r0, r0, #-2147483648	; 0x80000000
   1c4a0:	movw	r1, #0
   1c4a4:	cmp	r1, r0
   1c4a8:	bcc	1c4fc <__assert_fail@plt+0xb40c>
   1c4ac:	b	1c510 <__assert_fail@plt+0xb420>
   1c4b0:	ldr	r0, [pc, #1712]	; 1cb68 <__assert_fail@plt+0xba78>
   1c4b4:	ldr	r1, [fp, #-16]
   1c4b8:	sub	r1, r1, #1
   1c4bc:	cmp	r0, r1
   1c4c0:	bcc	1c4fc <__assert_fail@plt+0xb40c>
   1c4c4:	b	1c510 <__assert_fail@plt+0xb420>
   1c4c8:	ldr	r0, [pc, #1692]	; 1cb6c <__assert_fail@plt+0xba7c>
   1c4cc:	ldr	r1, [fp, #-12]
   1c4d0:	udiv	r0, r0, r1
   1c4d4:	ldr	r1, [fp, #-16]
   1c4d8:	cmp	r0, r1
   1c4dc:	bcc	1c4fc <__assert_fail@plt+0xb40c>
   1c4e0:	b	1c510 <__assert_fail@plt+0xb420>
   1c4e4:	ldr	r0, [pc, #1660]	; 1cb68 <__assert_fail@plt+0xba78>
   1c4e8:	ldr	r1, [fp, #-16]
   1c4ec:	udiv	r0, r0, r1
   1c4f0:	ldr	r1, [fp, #-12]
   1c4f4:	cmp	r0, r1
   1c4f8:	bcs	1c510 <__assert_fail@plt+0xb420>
   1c4fc:	ldr	r0, [fp, #-12]
   1c500:	ldr	r1, [fp, #-16]
   1c504:	mul	r0, r0, r1
   1c508:	str	r0, [fp, #-20]	; 0xffffffec
   1c50c:	b	1cb34 <__assert_fail@plt+0xba44>
   1c510:	ldr	r0, [fp, #-12]
   1c514:	ldr	r1, [fp, #-16]
   1c518:	mul	r0, r0, r1
   1c51c:	str	r0, [fp, #-20]	; 0xffffffec
   1c520:	b	1cb4c <__assert_fail@plt+0xba5c>
   1c524:	ldr	r0, [fp, #-16]
   1c528:	cmp	r0, #0
   1c52c:	bcs	1c638 <__assert_fail@plt+0xb548>
   1c530:	ldr	r0, [fp, #-12]
   1c534:	cmp	r0, #0
   1c538:	bcs	1c5c0 <__assert_fail@plt+0xb4d0>
   1c53c:	b	1c55c <__assert_fail@plt+0xb46c>
   1c540:	ldr	r0, [fp, #-12]
   1c544:	ldr	r1, [fp, #-16]
   1c548:	mvn	r2, #0
   1c54c:	udiv	r1, r2, r1
   1c550:	cmp	r0, r1
   1c554:	bcc	1c6d4 <__assert_fail@plt+0xb5e4>
   1c558:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c55c:	b	1c570 <__assert_fail@plt+0xb480>
   1c560:	ldr	r0, [fp, #-16]
   1c564:	cmp	r0, #1
   1c568:	bcc	1c580 <__assert_fail@plt+0xb490>
   1c56c:	b	1c58c <__assert_fail@plt+0xb49c>
   1c570:	ldr	r0, [fp, #-16]
   1c574:	movw	r1, #0
   1c578:	cmp	r1, r0
   1c57c:	bcs	1c58c <__assert_fail@plt+0xb49c>
   1c580:	movw	r0, #1
   1c584:	str	r0, [sp, #44]	; 0x2c
   1c588:	b	1c5a4 <__assert_fail@plt+0xb4b4>
   1c58c:	ldr	r0, [fp, #-16]
   1c590:	movw	r1, #0
   1c594:	sub	r0, r1, r0
   1c598:	mvn	r1, #0
   1c59c:	udiv	r0, r1, r0
   1c5a0:	str	r0, [sp, #44]	; 0x2c
   1c5a4:	ldr	r0, [sp, #44]	; 0x2c
   1c5a8:	ldr	r1, [fp, #-12]
   1c5ac:	mvn	r2, #0
   1c5b0:	sub	r1, r2, r1
   1c5b4:	cmp	r0, r1
   1c5b8:	bls	1c6d4 <__assert_fail@plt+0xb5e4>
   1c5bc:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c5c0:	b	1c5c8 <__assert_fail@plt+0xb4d8>
   1c5c4:	b	1c5cc <__assert_fail@plt+0xb4dc>
   1c5c8:	b	1c61c <__assert_fail@plt+0xb52c>
   1c5cc:	ldr	r0, [fp, #-16]
   1c5d0:	cmn	r0, #1
   1c5d4:	bne	1c61c <__assert_fail@plt+0xb52c>
   1c5d8:	b	1c5f4 <__assert_fail@plt+0xb504>
   1c5dc:	ldr	r0, [fp, #-12]
   1c5e0:	add	r0, r0, #0
   1c5e4:	movw	r1, #0
   1c5e8:	cmp	r1, r0
   1c5ec:	bcc	1c6d4 <__assert_fail@plt+0xb5e4>
   1c5f0:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c5f4:	ldr	r0, [fp, #-12]
   1c5f8:	movw	r1, #0
   1c5fc:	cmp	r1, r0
   1c600:	bcs	1c6e8 <__assert_fail@plt+0xb5f8>
   1c604:	ldr	r0, [fp, #-12]
   1c608:	sub	r0, r0, #1
   1c60c:	mvn	r1, #0
   1c610:	cmp	r1, r0
   1c614:	bcc	1c6d4 <__assert_fail@plt+0xb5e4>
   1c618:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c61c:	ldr	r0, [fp, #-16]
   1c620:	movw	r1, #0
   1c624:	udiv	r0, r1, r0
   1c628:	ldr	r1, [fp, #-12]
   1c62c:	cmp	r0, r1
   1c630:	bcc	1c6d4 <__assert_fail@plt+0xb5e4>
   1c634:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c638:	ldr	r0, [fp, #-16]
   1c63c:	cmp	r0, #0
   1c640:	bne	1c648 <__assert_fail@plt+0xb558>
   1c644:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c648:	ldr	r0, [fp, #-12]
   1c64c:	cmp	r0, #0
   1c650:	bcs	1c6bc <__assert_fail@plt+0xb5cc>
   1c654:	b	1c65c <__assert_fail@plt+0xb56c>
   1c658:	b	1c660 <__assert_fail@plt+0xb570>
   1c65c:	b	1c6a0 <__assert_fail@plt+0xb5b0>
   1c660:	ldr	r0, [fp, #-12]
   1c664:	cmn	r0, #1
   1c668:	bne	1c6a0 <__assert_fail@plt+0xb5b0>
   1c66c:	b	1c688 <__assert_fail@plt+0xb598>
   1c670:	ldr	r0, [fp, #-16]
   1c674:	add	r0, r0, #0
   1c678:	movw	r1, #0
   1c67c:	cmp	r1, r0
   1c680:	bcc	1c6d4 <__assert_fail@plt+0xb5e4>
   1c684:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c688:	ldr	r0, [fp, #-16]
   1c68c:	sub	r0, r0, #1
   1c690:	mvn	r1, #0
   1c694:	cmp	r1, r0
   1c698:	bcc	1c6d4 <__assert_fail@plt+0xb5e4>
   1c69c:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c6a0:	ldr	r0, [fp, #-12]
   1c6a4:	movw	r1, #0
   1c6a8:	udiv	r0, r1, r0
   1c6ac:	ldr	r1, [fp, #-16]
   1c6b0:	cmp	r0, r1
   1c6b4:	bcc	1c6d4 <__assert_fail@plt+0xb5e4>
   1c6b8:	b	1c6e8 <__assert_fail@plt+0xb5f8>
   1c6bc:	ldr	r0, [fp, #-16]
   1c6c0:	mvn	r1, #0
   1c6c4:	udiv	r0, r1, r0
   1c6c8:	ldr	r1, [fp, #-12]
   1c6cc:	cmp	r0, r1
   1c6d0:	bcs	1c6e8 <__assert_fail@plt+0xb5f8>
   1c6d4:	ldr	r0, [fp, #-12]
   1c6d8:	ldr	r1, [fp, #-16]
   1c6dc:	mul	r0, r0, r1
   1c6e0:	str	r0, [fp, #-20]	; 0xffffffec
   1c6e4:	b	1cb34 <__assert_fail@plt+0xba44>
   1c6e8:	ldr	r0, [fp, #-12]
   1c6ec:	ldr	r1, [fp, #-16]
   1c6f0:	mul	r0, r0, r1
   1c6f4:	str	r0, [fp, #-20]	; 0xffffffec
   1c6f8:	b	1cb4c <__assert_fail@plt+0xba5c>
   1c6fc:	b	1c918 <__assert_fail@plt+0xb828>
   1c700:	ldr	r0, [fp, #-16]
   1c704:	cmp	r0, #0
   1c708:	bcs	1c848 <__assert_fail@plt+0xb758>
   1c70c:	ldr	r0, [fp, #-12]
   1c710:	cmp	r0, #0
   1c714:	bcs	1c7d4 <__assert_fail@plt+0xb6e4>
   1c718:	b	1c71c <__assert_fail@plt+0xb62c>
   1c71c:	ldr	r0, [fp, #-12]
   1c720:	ldr	r2, [fp, #-16]
   1c724:	mvn	r1, #0
   1c728:	mvn	r3, #-2147483648	; 0x80000000
   1c72c:	mov	ip, #0
   1c730:	str	r0, [sp, #40]	; 0x28
   1c734:	mov	r0, r1
   1c738:	mov	r1, r3
   1c73c:	mov	r3, ip
   1c740:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1c744:	ldr	r2, [sp, #40]	; 0x28
   1c748:	subs	r0, r2, r0
   1c74c:	rscs	r1, r1, #0
   1c750:	blt	1c8f0 <__assert_fail@plt+0xb800>
   1c754:	b	1c904 <__assert_fail@plt+0xb814>
   1c758:	b	1c76c <__assert_fail@plt+0xb67c>
   1c75c:	ldr	r0, [fp, #-16]
   1c760:	cmp	r0, #1
   1c764:	bcc	1c77c <__assert_fail@plt+0xb68c>
   1c768:	b	1c790 <__assert_fail@plt+0xb6a0>
   1c76c:	ldr	r0, [fp, #-16]
   1c770:	movw	r1, #0
   1c774:	cmp	r1, r0
   1c778:	bcs	1c790 <__assert_fail@plt+0xb6a0>
   1c77c:	mov	r0, #0
   1c780:	mvn	r1, #0
   1c784:	str	r1, [sp, #36]	; 0x24
   1c788:	str	r0, [sp, #32]
   1c78c:	b	1c7b4 <__assert_fail@plt+0xb6c4>
   1c790:	ldr	r0, [fp, #-16]
   1c794:	rsb	r2, r0, #0
   1c798:	mvn	r0, #0
   1c79c:	mvn	r1, #-2147483648	; 0x80000000
   1c7a0:	mov	r3, #0
   1c7a4:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1c7a8:	str	r0, [sp, #36]	; 0x24
   1c7ac:	str	r1, [sp, #32]
   1c7b0:	b	1c7b4 <__assert_fail@plt+0xb6c4>
   1c7b4:	ldr	r0, [sp, #32]
   1c7b8:	ldr	r1, [sp, #36]	; 0x24
   1c7bc:	ldr	r2, [fp, #-12]
   1c7c0:	mvn	r2, r2
   1c7c4:	subs	r1, r2, r1
   1c7c8:	rscs	r0, r0, #0
   1c7cc:	bge	1c8f0 <__assert_fail@plt+0xb800>
   1c7d0:	b	1c904 <__assert_fail@plt+0xb814>
   1c7d4:	ldr	r0, [fp, #-16]
   1c7d8:	cmn	r0, #1
   1c7dc:	bne	1c81c <__assert_fail@plt+0xb72c>
   1c7e0:	b	1c7fc <__assert_fail@plt+0xb70c>
   1c7e4:	ldr	r0, [fp, #-12]
   1c7e8:	rsbs	r0, r0, #0
   1c7ec:	mov	r1, #0
   1c7f0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1c7f4:	blt	1c8f0 <__assert_fail@plt+0xb800>
   1c7f8:	b	1c904 <__assert_fail@plt+0xb814>
   1c7fc:	ldr	r0, [fp, #-12]
   1c800:	movw	r1, #0
   1c804:	cmp	r1, r0
   1c808:	bcs	1c904 <__assert_fail@plt+0xb814>
   1c80c:	mov	r0, #0
   1c810:	cmp	r0, #0
   1c814:	bne	1c8f0 <__assert_fail@plt+0xb800>
   1c818:	b	1c904 <__assert_fail@plt+0xb814>
   1c81c:	ldr	r2, [fp, #-16]
   1c820:	mov	r1, #-2147483648	; 0x80000000
   1c824:	mov	r0, #0
   1c828:	str	r0, [sp, #28]
   1c82c:	ldr	r3, [sp, #28]
   1c830:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   1c834:	ldr	r2, [fp, #-12]
   1c838:	subs	r0, r0, r2
   1c83c:	sbcs	r1, r1, #0
   1c840:	blt	1c8f0 <__assert_fail@plt+0xb800>
   1c844:	b	1c904 <__assert_fail@plt+0xb814>
   1c848:	ldr	r0, [fp, #-16]
   1c84c:	cmp	r0, #0
   1c850:	bne	1c858 <__assert_fail@plt+0xb768>
   1c854:	b	1c904 <__assert_fail@plt+0xb814>
   1c858:	ldr	r0, [fp, #-12]
   1c85c:	cmp	r0, #0
   1c860:	bcs	1c8c8 <__assert_fail@plt+0xb7d8>
   1c864:	ldr	r0, [fp, #-12]
   1c868:	cmn	r0, #1
   1c86c:	bne	1c89c <__assert_fail@plt+0xb7ac>
   1c870:	b	1c88c <__assert_fail@plt+0xb79c>
   1c874:	ldr	r0, [fp, #-16]
   1c878:	rsbs	r0, r0, #0
   1c87c:	mov	r1, #0
   1c880:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1c884:	blt	1c8f0 <__assert_fail@plt+0xb800>
   1c888:	b	1c904 <__assert_fail@plt+0xb814>
   1c88c:	mov	r0, #0
   1c890:	cmp	r0, #0
   1c894:	bne	1c8f0 <__assert_fail@plt+0xb800>
   1c898:	b	1c904 <__assert_fail@plt+0xb814>
   1c89c:	ldr	r2, [fp, #-12]
   1c8a0:	mov	r1, #-2147483648	; 0x80000000
   1c8a4:	mov	r0, #0
   1c8a8:	str	r0, [sp, #24]
   1c8ac:	ldr	r3, [sp, #24]
   1c8b0:	bl	1cd6c <__assert_fail@plt+0xbc7c>
   1c8b4:	ldr	r2, [fp, #-16]
   1c8b8:	subs	r0, r0, r2
   1c8bc:	sbcs	r1, r1, #0
   1c8c0:	blt	1c8f0 <__assert_fail@plt+0xb800>
   1c8c4:	b	1c904 <__assert_fail@plt+0xb814>
   1c8c8:	ldr	r2, [fp, #-16]
   1c8cc:	mvn	r0, #0
   1c8d0:	mvn	r1, #-2147483648	; 0x80000000
   1c8d4:	mov	r3, #0
   1c8d8:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1c8dc:	ldr	r2, [fp, #-12]
   1c8e0:	subs	r0, r0, r2
   1c8e4:	sbcs	r1, r1, #0
   1c8e8:	bge	1c904 <__assert_fail@plt+0xb814>
   1c8ec:	b	1c8f0 <__assert_fail@plt+0xb800>
   1c8f0:	ldr	r0, [fp, #-12]
   1c8f4:	ldr	r1, [fp, #-16]
   1c8f8:	mul	r0, r0, r1
   1c8fc:	str	r0, [fp, #-20]	; 0xffffffec
   1c900:	b	1cb34 <__assert_fail@plt+0xba44>
   1c904:	ldr	r0, [fp, #-12]
   1c908:	ldr	r1, [fp, #-16]
   1c90c:	mul	r0, r0, r1
   1c910:	str	r0, [fp, #-20]	; 0xffffffec
   1c914:	b	1cb4c <__assert_fail@plt+0xba5c>
   1c918:	ldr	r0, [fp, #-16]
   1c91c:	cmp	r0, #0
   1c920:	bcs	1ca5c <__assert_fail@plt+0xb96c>
   1c924:	ldr	r0, [fp, #-12]
   1c928:	cmp	r0, #0
   1c92c:	bcs	1c9e4 <__assert_fail@plt+0xb8f4>
   1c930:	b	1c964 <__assert_fail@plt+0xb874>
   1c934:	ldr	r0, [fp, #-12]
   1c938:	ldr	r2, [fp, #-16]
   1c93c:	mvn	r1, #0
   1c940:	mov	r3, #0
   1c944:	str	r0, [sp, #20]
   1c948:	mov	r0, r1
   1c94c:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1c950:	ldr	r2, [sp, #20]
   1c954:	subs	r0, r2, r0
   1c958:	rscs	r1, r1, #0
   1c95c:	bcc	1cb0c <__assert_fail@plt+0xba1c>
   1c960:	b	1cb20 <__assert_fail@plt+0xba30>
   1c964:	b	1c978 <__assert_fail@plt+0xb888>
   1c968:	ldr	r0, [fp, #-16]
   1c96c:	cmp	r0, #1
   1c970:	bcc	1c988 <__assert_fail@plt+0xb898>
   1c974:	b	1c99c <__assert_fail@plt+0xb8ac>
   1c978:	ldr	r0, [fp, #-16]
   1c97c:	movw	r1, #0
   1c980:	cmp	r1, r0
   1c984:	bcs	1c99c <__assert_fail@plt+0xb8ac>
   1c988:	mov	r0, #1
   1c98c:	mvn	r1, #0
   1c990:	str	r1, [sp, #16]
   1c994:	str	r0, [sp, #12]
   1c998:	b	1c9c4 <__assert_fail@plt+0xb8d4>
   1c99c:	ldr	r0, [fp, #-16]
   1c9a0:	rsb	r2, r0, #0
   1c9a4:	mvn	r0, #0
   1c9a8:	mov	r3, #0
   1c9ac:	str	r0, [sp, #8]
   1c9b0:	ldr	r1, [sp, #8]
   1c9b4:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1c9b8:	str	r0, [sp, #16]
   1c9bc:	str	r1, [sp, #12]
   1c9c0:	b	1c9c4 <__assert_fail@plt+0xb8d4>
   1c9c4:	ldr	r0, [sp, #12]
   1c9c8:	ldr	r1, [sp, #16]
   1c9cc:	ldr	r2, [fp, #-12]
   1c9d0:	mvn	r2, r2
   1c9d4:	subs	r1, r2, r1
   1c9d8:	rscs	r0, r0, #0
   1c9dc:	bcs	1cb0c <__assert_fail@plt+0xba1c>
   1c9e0:	b	1cb20 <__assert_fail@plt+0xba30>
   1c9e4:	b	1c9ec <__assert_fail@plt+0xb8fc>
   1c9e8:	b	1c9f0 <__assert_fail@plt+0xb900>
   1c9ec:	b	1ca40 <__assert_fail@plt+0xb950>
   1c9f0:	ldr	r0, [fp, #-16]
   1c9f4:	cmn	r0, #1
   1c9f8:	bne	1ca40 <__assert_fail@plt+0xb950>
   1c9fc:	b	1ca18 <__assert_fail@plt+0xb928>
   1ca00:	ldr	r0, [fp, #-12]
   1ca04:	add	r0, r0, #0
   1ca08:	movw	r1, #0
   1ca0c:	cmp	r1, r0
   1ca10:	bcc	1cb0c <__assert_fail@plt+0xba1c>
   1ca14:	b	1cb20 <__assert_fail@plt+0xba30>
   1ca18:	ldr	r0, [fp, #-12]
   1ca1c:	movw	r1, #0
   1ca20:	cmp	r1, r0
   1ca24:	bcs	1cb20 <__assert_fail@plt+0xba30>
   1ca28:	ldr	r0, [fp, #-12]
   1ca2c:	sub	r0, r0, #1
   1ca30:	mvn	r1, #0
   1ca34:	cmp	r1, r0
   1ca38:	bcc	1cb0c <__assert_fail@plt+0xba1c>
   1ca3c:	b	1cb20 <__assert_fail@plt+0xba30>
   1ca40:	ldr	r0, [fp, #-16]
   1ca44:	movw	r1, #0
   1ca48:	udiv	r0, r1, r0
   1ca4c:	ldr	r1, [fp, #-12]
   1ca50:	cmp	r0, r1
   1ca54:	bcc	1cb0c <__assert_fail@plt+0xba1c>
   1ca58:	b	1cb20 <__assert_fail@plt+0xba30>
   1ca5c:	ldr	r0, [fp, #-16]
   1ca60:	cmp	r0, #0
   1ca64:	bne	1ca6c <__assert_fail@plt+0xb97c>
   1ca68:	b	1cb20 <__assert_fail@plt+0xba30>
   1ca6c:	ldr	r0, [fp, #-12]
   1ca70:	cmp	r0, #0
   1ca74:	bcs	1cae0 <__assert_fail@plt+0xb9f0>
   1ca78:	b	1ca80 <__assert_fail@plt+0xb990>
   1ca7c:	b	1ca84 <__assert_fail@plt+0xb994>
   1ca80:	b	1cac4 <__assert_fail@plt+0xb9d4>
   1ca84:	ldr	r0, [fp, #-12]
   1ca88:	cmn	r0, #1
   1ca8c:	bne	1cac4 <__assert_fail@plt+0xb9d4>
   1ca90:	b	1caac <__assert_fail@plt+0xb9bc>
   1ca94:	ldr	r0, [fp, #-16]
   1ca98:	add	r0, r0, #0
   1ca9c:	movw	r1, #0
   1caa0:	cmp	r1, r0
   1caa4:	bcc	1cb0c <__assert_fail@plt+0xba1c>
   1caa8:	b	1cb20 <__assert_fail@plt+0xba30>
   1caac:	ldr	r0, [fp, #-16]
   1cab0:	sub	r0, r0, #1
   1cab4:	mvn	r1, #0
   1cab8:	cmp	r1, r0
   1cabc:	bcc	1cb0c <__assert_fail@plt+0xba1c>
   1cac0:	b	1cb20 <__assert_fail@plt+0xba30>
   1cac4:	ldr	r0, [fp, #-12]
   1cac8:	movw	r1, #0
   1cacc:	udiv	r0, r1, r0
   1cad0:	ldr	r1, [fp, #-16]
   1cad4:	cmp	r0, r1
   1cad8:	bcc	1cb0c <__assert_fail@plt+0xba1c>
   1cadc:	b	1cb20 <__assert_fail@plt+0xba30>
   1cae0:	ldr	r2, [fp, #-16]
   1cae4:	mvn	r0, #0
   1cae8:	mov	r3, #0
   1caec:	str	r0, [sp, #4]
   1caf0:	ldr	r1, [sp, #4]
   1caf4:	bl	1ce40 <__assert_fail@plt+0xbd50>
   1caf8:	ldr	r2, [fp, #-12]
   1cafc:	subs	r0, r0, r2
   1cb00:	sbcs	r1, r1, #0
   1cb04:	bcs	1cb20 <__assert_fail@plt+0xba30>
   1cb08:	b	1cb0c <__assert_fail@plt+0xba1c>
   1cb0c:	ldr	r0, [fp, #-12]
   1cb10:	ldr	r1, [fp, #-16]
   1cb14:	mul	r0, r0, r1
   1cb18:	str	r0, [fp, #-20]	; 0xffffffec
   1cb1c:	b	1cb34 <__assert_fail@plt+0xba44>
   1cb20:	ldr	r0, [fp, #-12]
   1cb24:	ldr	r1, [fp, #-16]
   1cb28:	mul	r0, r0, r1
   1cb2c:	str	r0, [fp, #-20]	; 0xffffffec
   1cb30:	b	1cb4c <__assert_fail@plt+0xba5c>
   1cb34:	bl	11000 <__errno_location@plt>
   1cb38:	movw	r1, #12
   1cb3c:	str	r1, [r0]
   1cb40:	movw	r0, #0
   1cb44:	str	r0, [fp, #-4]
   1cb48:	b	1cb5c <__assert_fail@plt+0xba6c>
   1cb4c:	ldr	r0, [fp, #-8]
   1cb50:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cb54:	bl	1ab0c <__assert_fail@plt+0x9a1c>
   1cb58:	str	r0, [fp, #-4]
   1cb5c:	ldr	r0, [fp, #-4]
   1cb60:	mov	sp, fp
   1cb64:	pop	{fp, pc}
   1cb68:	svcvc	0x00ffffff
   1cb6c:	andhi	r0, r0, r0
   1cb70:			; <UNDEFINED> instruction: 0xffff8000
   1cb74:	push	{r4, r5, fp, lr}
   1cb78:	add	fp, sp, #8
   1cb7c:	sub	sp, sp, #272	; 0x110
   1cb80:	add	r1, sp, #7
   1cb84:	str	r0, [fp, #-16]
   1cb88:	ldr	r0, [fp, #-16]
   1cb8c:	movw	r2, #257	; 0x101
   1cb90:	bl	1cc10 <__assert_fail@plt+0xbb20>
   1cb94:	cmp	r0, #0
   1cb98:	beq	1cbac <__assert_fail@plt+0xbabc>
   1cb9c:	movw	r0, #0
   1cba0:	and	r0, r0, #1
   1cba4:	strb	r0, [fp, #-9]
   1cba8:	b	1cc00 <__assert_fail@plt+0xbb10>
   1cbac:	add	r0, sp, #7
   1cbb0:	movw	r1, #56832	; 0xde00
   1cbb4:	movt	r1, #1
   1cbb8:	bl	10e8c <strcmp@plt>
   1cbbc:	cmp	r0, #0
   1cbc0:	movw	r0, #1
   1cbc4:	str	r0, [sp]
   1cbc8:	beq	1cbec <__assert_fail@plt+0xbafc>
   1cbcc:	add	r0, sp, #7
   1cbd0:	movw	r1, #56834	; 0xde02
   1cbd4:	movt	r1, #1
   1cbd8:	bl	10e8c <strcmp@plt>
   1cbdc:	cmp	r0, #0
   1cbe0:	movw	r0, #0
   1cbe4:	moveq	r0, #1
   1cbe8:	str	r0, [sp]
   1cbec:	ldr	r0, [sp]
   1cbf0:	mvn	r1, #0
   1cbf4:	eor	r0, r0, r1
   1cbf8:	and	r0, r0, #1
   1cbfc:	strb	r0, [fp, #-9]
   1cc00:	ldrb	r0, [fp, #-9]
   1cc04:	and	r0, r0, #1
   1cc08:	sub	sp, fp, #8
   1cc0c:	pop	{r4, r5, fp, pc}
   1cc10:	push	{fp, lr}
   1cc14:	mov	fp, sp
   1cc18:	sub	sp, sp, #16
   1cc1c:	str	r0, [fp, #-4]
   1cc20:	str	r1, [sp, #8]
   1cc24:	str	r2, [sp, #4]
   1cc28:	ldr	r0, [fp, #-4]
   1cc2c:	ldr	r1, [sp, #8]
   1cc30:	ldr	r2, [sp, #4]
   1cc34:	bl	1cc40 <__assert_fail@plt+0xbb50>
   1cc38:	mov	sp, fp
   1cc3c:	pop	{fp, pc}
   1cc40:	push	{fp, lr}
   1cc44:	mov	fp, sp
   1cc48:	sub	sp, sp, #24
   1cc4c:	str	r0, [fp, #-8]
   1cc50:	str	r1, [sp, #12]
   1cc54:	str	r2, [sp, #8]
   1cc58:	ldr	r0, [fp, #-8]
   1cc5c:	bl	1cd40 <__assert_fail@plt+0xbc50>
   1cc60:	str	r0, [sp, #4]
   1cc64:	ldr	r0, [sp, #4]
   1cc68:	movw	r1, #0
   1cc6c:	cmp	r0, r1
   1cc70:	bne	1cc98 <__assert_fail@plt+0xbba8>
   1cc74:	ldr	r0, [sp, #8]
   1cc78:	cmp	r0, #0
   1cc7c:	bls	1cc8c <__assert_fail@plt+0xbb9c>
   1cc80:	ldr	r0, [sp, #12]
   1cc84:	movw	r1, #0
   1cc88:	strb	r1, [r0]
   1cc8c:	movw	r0, #22
   1cc90:	str	r0, [fp, #-4]
   1cc94:	b	1cd14 <__assert_fail@plt+0xbc24>
   1cc98:	ldr	r0, [sp, #4]
   1cc9c:	bl	10fdc <strlen@plt>
   1cca0:	str	r0, [sp]
   1cca4:	ldr	r0, [sp]
   1cca8:	ldr	r1, [sp, #8]
   1ccac:	cmp	r0, r1
   1ccb0:	bcs	1ccd4 <__assert_fail@plt+0xbbe4>
   1ccb4:	ldr	r0, [sp, #12]
   1ccb8:	ldr	r1, [sp, #4]
   1ccbc:	ldr	r2, [sp]
   1ccc0:	add	r2, r2, #1
   1ccc4:	bl	10ec8 <memcpy@plt>
   1ccc8:	movw	r0, #0
   1cccc:	str	r0, [fp, #-4]
   1ccd0:	b	1cd14 <__assert_fail@plt+0xbc24>
   1ccd4:	ldr	r0, [sp, #8]
   1ccd8:	cmp	r0, #0
   1ccdc:	bls	1cd0c <__assert_fail@plt+0xbc1c>
   1cce0:	ldr	r0, [sp, #12]
   1cce4:	ldr	r1, [sp, #4]
   1cce8:	ldr	r2, [sp, #8]
   1ccec:	sub	r2, r2, #1
   1ccf0:	bl	10ec8 <memcpy@plt>
   1ccf4:	ldr	r0, [sp, #12]
   1ccf8:	ldr	r1, [sp, #8]
   1ccfc:	sub	r1, r1, #1
   1cd00:	add	r0, r0, r1
   1cd04:	movw	r1, #0
   1cd08:	strb	r1, [r0]
   1cd0c:	movw	r0, #34	; 0x22
   1cd10:	str	r0, [fp, #-4]
   1cd14:	ldr	r0, [fp, #-4]
   1cd18:	mov	sp, fp
   1cd1c:	pop	{fp, pc}
   1cd20:	push	{fp, lr}
   1cd24:	mov	fp, sp
   1cd28:	sub	sp, sp, #8
   1cd2c:	str	r0, [sp, #4]
   1cd30:	ldr	r0, [sp, #4]
   1cd34:	bl	1cd40 <__assert_fail@plt+0xbc50>
   1cd38:	mov	sp, fp
   1cd3c:	pop	{fp, pc}
   1cd40:	push	{fp, lr}
   1cd44:	mov	fp, sp
   1cd48:	sub	sp, sp, #8
   1cd4c:	str	r0, [sp, #4]
   1cd50:	ldr	r0, [sp, #4]
   1cd54:	movw	r1, #0
   1cd58:	bl	11078 <setlocale@plt>
   1cd5c:	str	r0, [sp]
   1cd60:	ldr	r0, [sp]
   1cd64:	mov	sp, fp
   1cd68:	pop	{fp, pc}
   1cd6c:	cmp	r3, #0
   1cd70:	cmpeq	r2, #0
   1cd74:	bne	1cd98 <__assert_fail@plt+0xbca8>
   1cd78:	cmp	r1, #0
   1cd7c:	movlt	r1, #-2147483648	; 0x80000000
   1cd80:	movlt	r0, #0
   1cd84:	blt	1cd94 <__assert_fail@plt+0xbca4>
   1cd88:	cmpeq	r0, #0
   1cd8c:	mvnne	r1, #-2147483648	; 0x80000000
   1cd90:	mvnne	r0, #0
   1cd94:	b	1ce7c <__assert_fail@plt+0xbd8c>
   1cd98:	sub	sp, sp, #8
   1cd9c:	push	{sp, lr}
   1cda0:	cmp	r1, #0
   1cda4:	blt	1cdc4 <__assert_fail@plt+0xbcd4>
   1cda8:	cmp	r3, #0
   1cdac:	blt	1cdf8 <__assert_fail@plt+0xbd08>
   1cdb0:	bl	1ce8c <__assert_fail@plt+0xbd9c>
   1cdb4:	ldr	lr, [sp, #4]
   1cdb8:	add	sp, sp, #8
   1cdbc:	pop	{r2, r3}
   1cdc0:	bx	lr
   1cdc4:	rsbs	r0, r0, #0
   1cdc8:	sbc	r1, r1, r1, lsl #1
   1cdcc:	cmp	r3, #0
   1cdd0:	blt	1ce1c <__assert_fail@plt+0xbd2c>
   1cdd4:	bl	1ce8c <__assert_fail@plt+0xbd9c>
   1cdd8:	ldr	lr, [sp, #4]
   1cddc:	add	sp, sp, #8
   1cde0:	pop	{r2, r3}
   1cde4:	rsbs	r0, r0, #0
   1cde8:	sbc	r1, r1, r1, lsl #1
   1cdec:	rsbs	r2, r2, #0
   1cdf0:	sbc	r3, r3, r3, lsl #1
   1cdf4:	bx	lr
   1cdf8:	rsbs	r2, r2, #0
   1cdfc:	sbc	r3, r3, r3, lsl #1
   1ce00:	bl	1ce8c <__assert_fail@plt+0xbd9c>
   1ce04:	ldr	lr, [sp, #4]
   1ce08:	add	sp, sp, #8
   1ce0c:	pop	{r2, r3}
   1ce10:	rsbs	r0, r0, #0
   1ce14:	sbc	r1, r1, r1, lsl #1
   1ce18:	bx	lr
   1ce1c:	rsbs	r2, r2, #0
   1ce20:	sbc	r3, r3, r3, lsl #1
   1ce24:	bl	1ce8c <__assert_fail@plt+0xbd9c>
   1ce28:	ldr	lr, [sp, #4]
   1ce2c:	add	sp, sp, #8
   1ce30:	pop	{r2, r3}
   1ce34:	rsbs	r2, r2, #0
   1ce38:	sbc	r3, r3, r3, lsl #1
   1ce3c:	bx	lr
   1ce40:	cmp	r3, #0
   1ce44:	cmpeq	r2, #0
   1ce48:	bne	1ce60 <__assert_fail@plt+0xbd70>
   1ce4c:	cmp	r1, #0
   1ce50:	cmpeq	r0, #0
   1ce54:	mvnne	r1, #0
   1ce58:	mvnne	r0, #0
   1ce5c:	b	1ce7c <__assert_fail@plt+0xbd8c>
   1ce60:	sub	sp, sp, #8
   1ce64:	push	{sp, lr}
   1ce68:	bl	1ce8c <__assert_fail@plt+0xbd9c>
   1ce6c:	ldr	lr, [sp, #4]
   1ce70:	add	sp, sp, #8
   1ce74:	pop	{r2, r3}
   1ce78:	bx	lr
   1ce7c:	push	{r1, lr}
   1ce80:	mov	r0, #8
   1ce84:	bl	10e80 <raise@plt>
   1ce88:	pop	{r1, pc}
   1ce8c:	cmp	r1, r3
   1ce90:	cmpeq	r0, r2
   1ce94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce98:	mov	r4, r0
   1ce9c:	movcc	r0, #0
   1cea0:	mov	r5, r1
   1cea4:	ldr	lr, [sp, #36]	; 0x24
   1cea8:	movcc	r1, r0
   1ceac:	bcc	1cfa8 <__assert_fail@plt+0xbeb8>
   1ceb0:	cmp	r3, #0
   1ceb4:	clzeq	ip, r2
   1ceb8:	clzne	ip, r3
   1cebc:	addeq	ip, ip, #32
   1cec0:	cmp	r5, #0
   1cec4:	clzeq	r1, r4
   1cec8:	addeq	r1, r1, #32
   1cecc:	clzne	r1, r5
   1ced0:	sub	ip, ip, r1
   1ced4:	sub	sl, ip, #32
   1ced8:	lsl	r9, r3, ip
   1cedc:	rsb	fp, ip, #32
   1cee0:	orr	r9, r9, r2, lsl sl
   1cee4:	orr	r9, r9, r2, lsr fp
   1cee8:	lsl	r8, r2, ip
   1ceec:	cmp	r5, r9
   1cef0:	cmpeq	r4, r8
   1cef4:	movcc	r0, #0
   1cef8:	movcc	r1, r0
   1cefc:	bcc	1cf18 <__assert_fail@plt+0xbe28>
   1cf00:	mov	r0, #1
   1cf04:	subs	r4, r4, r8
   1cf08:	lsl	r1, r0, sl
   1cf0c:	orr	r1, r1, r0, lsr fp
   1cf10:	lsl	r0, r0, ip
   1cf14:	sbc	r5, r5, r9
   1cf18:	cmp	ip, #0
   1cf1c:	beq	1cfa8 <__assert_fail@plt+0xbeb8>
   1cf20:	lsr	r6, r8, #1
   1cf24:	orr	r6, r6, r9, lsl #31
   1cf28:	lsr	r7, r9, #1
   1cf2c:	mov	r2, ip
   1cf30:	b	1cf54 <__assert_fail@plt+0xbe64>
   1cf34:	subs	r3, r4, r6
   1cf38:	sbc	r8, r5, r7
   1cf3c:	adds	r3, r3, r3
   1cf40:	adc	r8, r8, r8
   1cf44:	adds	r4, r3, #1
   1cf48:	adc	r5, r8, #0
   1cf4c:	subs	r2, r2, #1
   1cf50:	beq	1cf70 <__assert_fail@plt+0xbe80>
   1cf54:	cmp	r5, r7
   1cf58:	cmpeq	r4, r6
   1cf5c:	bcs	1cf34 <__assert_fail@plt+0xbe44>
   1cf60:	adds	r4, r4, r4
   1cf64:	adc	r5, r5, r5
   1cf68:	subs	r2, r2, #1
   1cf6c:	bne	1cf54 <__assert_fail@plt+0xbe64>
   1cf70:	lsr	r3, r4, ip
   1cf74:	orr	r3, r3, r5, lsl fp
   1cf78:	lsr	r2, r5, ip
   1cf7c:	orr	r3, r3, r5, lsr sl
   1cf80:	adds	r0, r0, r4
   1cf84:	mov	r4, r3
   1cf88:	lsl	r3, r2, ip
   1cf8c:	orr	r3, r3, r4, lsl sl
   1cf90:	lsl	ip, r4, ip
   1cf94:	orr	r3, r3, r4, lsr fp
   1cf98:	adc	r1, r1, r5
   1cf9c:	subs	r0, r0, ip
   1cfa0:	mov	r5, r2
   1cfa4:	sbc	r1, r1, r3
   1cfa8:	cmp	lr, #0
   1cfac:	strdne	r4, [lr]
   1cfb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cfb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cfb8:	mov	r7, r0
   1cfbc:	ldr	r6, [pc, #72]	; 1d00c <__assert_fail@plt+0xbf1c>
   1cfc0:	ldr	r5, [pc, #72]	; 1d010 <__assert_fail@plt+0xbf20>
   1cfc4:	add	r6, pc, r6
   1cfc8:	add	r5, pc, r5
   1cfcc:	sub	r6, r6, r5
   1cfd0:	mov	r8, r1
   1cfd4:	mov	r9, r2
   1cfd8:	bl	10e48 <calloc@plt-0x20>
   1cfdc:	asrs	r6, r6, #2
   1cfe0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cfe4:	mov	r4, #0
   1cfe8:	add	r4, r4, #1
   1cfec:	ldr	r3, [r5], #4
   1cff0:	mov	r2, r9
   1cff4:	mov	r1, r8
   1cff8:	mov	r0, r7
   1cffc:	blx	r3
   1d000:	cmp	r6, r4
   1d004:	bne	1cfe8 <__assert_fail@plt+0xbef8>
   1d008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d00c:	andeq	r0, r1, r0, asr #30
   1d010:	andeq	r0, r1, r8, lsr pc
   1d014:	bx	lr
   1d018:	ldr	r3, [pc, #12]	; 1d02c <__assert_fail@plt+0xbf3c>
   1d01c:	mov	r1, #0
   1d020:	add	r3, pc, r3
   1d024:	ldr	r2, [r3]
   1d028:	b	1100c <__cxa_atexit@plt>
   1d02c:	andeq	r1, r1, r8, asr #1
   1d030:	mov	r2, r1
   1d034:	mov	r1, r0
   1d038:	mov	r0, #3
   1d03c:	b	110c0 <__xstat64@plt>

Disassembly of section .fini:

0001d040 <.fini>:
   1d040:	push	{r3, lr}
   1d044:	pop	{r3, pc}
