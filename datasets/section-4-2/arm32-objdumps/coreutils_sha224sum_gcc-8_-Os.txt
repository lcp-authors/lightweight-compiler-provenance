
../repos/coreutils/src/sha224sum:     file format elf32-littlearm


Disassembly of section .init:

00010d5c <.init>:
   10d5c:	push	{r3, lr}
   10d60:	bl	11f18 <putchar_unlocked@plt+0xef0>
   10d64:	pop	{r3, pc}

Disassembly of section .plt:

00010d68 <fdopen@plt-0x14>:
   10d68:	push	{lr}		; (str lr, [sp, #-4]!)
   10d6c:	ldr	lr, [pc, #4]	; 10d78 <fdopen@plt-0x4>
   10d70:	add	lr, pc, lr
   10d74:	ldr	pc, [lr, #8]!
   10d78:	andeq	r8, r1, r8, lsl #5

00010d7c <fdopen@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #24, 20	; 0x18000
   10d84:	ldr	pc, [ip, #648]!	; 0x288

00010d88 <calloc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #24, 20	; 0x18000
   10d90:	ldr	pc, [ip, #640]!	; 0x280

00010d94 <fputs_unlocked@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #24, 20	; 0x18000
   10d9c:	ldr	pc, [ip, #632]!	; 0x278

00010da0 <raise@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #24, 20	; 0x18000
   10da8:	ldr	pc, [ip, #624]!	; 0x270

00010dac <strcmp@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #24, 20	; 0x18000
   10db4:	ldr	pc, [ip, #616]!	; 0x268

00010db8 <posix_fadvise64@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #24, 20	; 0x18000
   10dc0:	ldr	pc, [ip, #608]!	; 0x260

00010dc4 <fflush@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #24, 20	; 0x18000
   10dcc:	ldr	pc, [ip, #600]!	; 0x258

00010dd0 <free@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #24, 20	; 0x18000
   10dd8:	ldr	pc, [ip, #592]!	; 0x250

00010ddc <_exit@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #24, 20	; 0x18000
   10de4:	ldr	pc, [ip, #584]!	; 0x248

00010de8 <memcpy@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #24, 20	; 0x18000
   10df0:	ldr	pc, [ip, #576]!	; 0x240

00010df4 <mbsinit@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #24, 20	; 0x18000
   10dfc:	ldr	pc, [ip, #568]!	; 0x238

00010e00 <memcmp@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #24, 20	; 0x18000
   10e08:	ldr	pc, [ip, #560]!	; 0x230

00010e0c <fputc_unlocked@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #24, 20	; 0x18000
   10e14:	ldr	pc, [ip, #552]!	; 0x228

00010e18 <dcgettext@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #24, 20	; 0x18000
   10e20:	ldr	pc, [ip, #544]!	; 0x220

00010e24 <realloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #24, 20	; 0x18000
   10e2c:	ldr	pc, [ip, #536]!	; 0x218

00010e30 <textdomain@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #24, 20	; 0x18000
   10e38:	ldr	pc, [ip, #528]!	; 0x210

00010e3c <iswprint@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #24, 20	; 0x18000
   10e44:	ldr	pc, [ip, #520]!	; 0x208

00010e48 <lseek64@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #24, 20	; 0x18000
   10e50:	ldr	pc, [ip, #512]!	; 0x200

00010e54 <__ctype_get_mb_cur_max@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #24, 20	; 0x18000
   10e5c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e60 <__fpending@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #24, 20	; 0x18000
   10e68:	ldr	pc, [ip, #496]!	; 0x1f0

00010e6c <ferror_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #24, 20	; 0x18000
   10e74:	ldr	pc, [ip, #488]!	; 0x1e8

00010e78 <mbrtowc@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #24, 20	; 0x18000
   10e80:	ldr	pc, [ip, #480]!	; 0x1e0

00010e84 <error@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #24, 20	; 0x18000
   10e8c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e90 <malloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #24, 20	; 0x18000
   10e98:	ldr	pc, [ip, #464]!	; 0x1d0

00010e9c <__libc_start_main@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #24, 20	; 0x18000
   10ea4:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea8 <__freading@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #24, 20	; 0x18000
   10eb0:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb4 <__ctype_tolower_loc@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #24, 20	; 0x18000
   10ebc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ec0 <__gmon_start__@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #24, 20	; 0x18000
   10ec8:	ldr	pc, [ip, #432]!	; 0x1b0

00010ecc <getopt_long@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #24, 20	; 0x18000
   10ed4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed8 <__ctype_b_loc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #24, 20	; 0x18000
   10ee0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee4 <exit@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #24, 20	; 0x18000
   10eec:	ldr	pc, [ip, #408]!	; 0x198

00010ef0 <strlen@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #24, 20	; 0x18000
   10ef8:	ldr	pc, [ip, #400]!	; 0x190

00010efc <strchr@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #24, 20	; 0x18000
   10f04:	ldr	pc, [ip, #392]!	; 0x188

00010f08 <__errno_location@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #24, 20	; 0x18000
   10f10:	ldr	pc, [ip, #384]!	; 0x180

00010f14 <__cxa_atexit@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #24, 20	; 0x18000
   10f1c:	ldr	pc, [ip, #376]!	; 0x178

00010f20 <setvbuf@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #24, 20	; 0x18000
   10f28:	ldr	pc, [ip, #368]!	; 0x170

00010f2c <memset@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #24, 20	; 0x18000
   10f34:	ldr	pc, [ip, #360]!	; 0x168

00010f38 <__printf_chk@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #24, 20	; 0x18000
   10f40:	ldr	pc, [ip, #352]!	; 0x160

00010f44 <fileno@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #24, 20	; 0x18000
   10f4c:	ldr	pc, [ip, #344]!	; 0x158

00010f50 <__fprintf_chk@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #24, 20	; 0x18000
   10f58:	ldr	pc, [ip, #336]!	; 0x150

00010f5c <fclose@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #24, 20	; 0x18000
   10f64:	ldr	pc, [ip, #328]!	; 0x148

00010f68 <fseeko64@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #24, 20	; 0x18000
   10f70:	ldr	pc, [ip, #320]!	; 0x140

00010f74 <fcntl64@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #24, 20	; 0x18000
   10f7c:	ldr	pc, [ip, #312]!	; 0x138

00010f80 <setlocale@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #24, 20	; 0x18000
   10f88:	ldr	pc, [ip, #304]!	; 0x130

00010f8c <strrchr@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #24, 20	; 0x18000
   10f94:	ldr	pc, [ip, #296]!	; 0x128

00010f98 <nl_langinfo@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #24, 20	; 0x18000
   10fa0:	ldr	pc, [ip, #288]!	; 0x120

00010fa4 <clearerr_unlocked@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #24, 20	; 0x18000
   10fac:	ldr	pc, [ip, #280]!	; 0x118

00010fb0 <fopen64@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #24, 20	; 0x18000
   10fb8:	ldr	pc, [ip, #272]!	; 0x110

00010fbc <bindtextdomain@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #24, 20	; 0x18000
   10fc4:	ldr	pc, [ip, #264]!	; 0x108

00010fc8 <fread_unlocked@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #24, 20	; 0x18000
   10fd0:	ldr	pc, [ip, #256]!	; 0x100

00010fd4 <getline@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #24, 20	; 0x18000
   10fdc:	ldr	pc, [ip, #248]!	; 0xf8

00010fe0 <fputs@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #24, 20	; 0x18000
   10fe8:	ldr	pc, [ip, #240]!	; 0xf0

00010fec <strncmp@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #24, 20	; 0x18000
   10ff4:	ldr	pc, [ip, #232]!	; 0xe8

00010ff8 <abort@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #24, 20	; 0x18000
   11000:	ldr	pc, [ip, #224]!	; 0xe0

00011004 <feof_unlocked@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #24, 20	; 0x18000
   1100c:	ldr	pc, [ip, #216]!	; 0xd8

00011010 <close@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #24, 20	; 0x18000
   11018:	ldr	pc, [ip, #208]!	; 0xd0

0001101c <dcngettext@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #24, 20	; 0x18000
   11024:	ldr	pc, [ip, #200]!	; 0xc8

00011028 <putchar_unlocked@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #24, 20	; 0x18000
   11030:	ldr	pc, [ip, #192]!	; 0xc0

Disassembly of section .text:

00011034 <.text>:
   11034:	push	{r4, lr}
   11038:	bl	10f08 <__errno_location@plt>
   1103c:	mov	r3, #12
   11040:	str	r3, [r0]
   11044:	mov	r0, #0
   11048:	pop	{r4, pc}
   1104c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11050:	mov	r8, r0
   11054:	sub	sp, sp, #180	; 0xb4
   11058:	mov	r7, r1
   1105c:	mvn	r6, #0
   11060:	ldr	r0, [r1]
   11064:	bl	15090 <putchar_unlocked@plt+0x4068>
   11068:	ldr	r9, [pc, #3488]	; 11e10 <putchar_unlocked@plt+0xde8>
   1106c:	mov	r0, #6
   11070:	ldr	r1, [pc, #3484]	; 11e14 <putchar_unlocked@plt+0xdec>
   11074:	bl	10f80 <setlocale@plt>
   11078:	ldr	r1, [pc, #3480]	; 11e18 <putchar_unlocked@plt+0xdf0>
   1107c:	ldr	r0, [pc, #3480]	; 11e1c <putchar_unlocked@plt+0xdf4>
   11080:	bl	10fbc <bindtextdomain@plt>
   11084:	ldr	r0, [pc, #3472]	; 11e1c <putchar_unlocked@plt+0xdf4>
   11088:	bl	10e30 <textdomain@plt>
   1108c:	ldr	r0, [pc, #3468]	; 11e20 <putchar_unlocked@plt+0xdf8>
   11090:	bl	1751c <putchar_unlocked@plt+0x64f4>
   11094:	ldr	sl, [pc, #3464]	; 11e24 <putchar_unlocked@plt+0xdfc>
   11098:	mov	r3, #0
   1109c:	mov	r2, #1
   110a0:	mov	r1, r3
   110a4:	ldr	r5, [pc, #3452]	; 11e28 <putchar_unlocked@plt+0xe00>
   110a8:	ldr	r0, [r9]
   110ac:	bl	10f20 <setvbuf@plt>
   110b0:	mov	r3, #0
   110b4:	mov	fp, r3
   110b8:	str	r3, [sp, #56]	; 0x38
   110bc:	mov	r4, #0
   110c0:	ldr	r3, [pc, #3428]	; 11e2c <putchar_unlocked@plt+0xe04>
   110c4:	mov	r2, sl
   110c8:	mov	r1, r7
   110cc:	mov	r0, r8
   110d0:	str	r4, [sp]
   110d4:	bl	10ecc <getopt_long@plt>
   110d8:	cmn	r0, #1
   110dc:	bne	1114c <putchar_unlocked@plt+0x124>
   110e0:	ldr	r3, [pc, #3392]	; 11e28 <putchar_unlocked@plt+0xe00>
   110e4:	mov	r2, #58	; 0x3a
   110e8:	cmp	r6, r4
   110ec:	ldr	r5, [sp, #56]	; 0x38
   110f0:	movne	r5, r4
   110f4:	str	r2, [r3, #12]
   110f8:	mov	r2, #56	; 0x38
   110fc:	cmp	r5, r4
   11100:	str	r2, [r3]
   11104:	ldrne	r1, [pc, #3364]	; 11e30 <putchar_unlocked@plt+0xe08>
   11108:	movne	r2, #5
   1110c:	bne	1132c <putchar_unlocked@plt+0x304>
   11110:	ldr	r2, [pc, #3356]	; 11e34 <putchar_unlocked@plt+0xe0c>
   11114:	ldrb	r2, [r2]
   11118:	cmp	r2, #10
   1111c:	beq	11280 <putchar_unlocked@plt+0x258>
   11120:	cmp	fp, #0
   11124:	beq	112b0 <putchar_unlocked@plt+0x288>
   11128:	ldr	r1, [pc, #3336]	; 11e38 <putchar_unlocked@plt+0xe10>
   1112c:	mov	r2, #5
   11130:	mov	r0, r5
   11134:	bl	10e18 <dcgettext@plt>
   11138:	mov	r2, r0
   1113c:	mov	r1, r5
   11140:	mov	r0, r1
   11144:	bl	10e84 <error@plt>
   11148:	b	11178 <putchar_unlocked@plt+0x150>
   1114c:	cmp	r0, #119	; 0x77
   11150:	beq	11200 <putchar_unlocked@plt+0x1d8>
   11154:	bgt	11198 <putchar_unlocked@plt+0x170>
   11158:	cmp	r0, #98	; 0x62
   1115c:	beq	11270 <putchar_unlocked@plt+0x248>
   11160:	bgt	11180 <putchar_unlocked@plt+0x158>
   11164:	cmn	r0, #3
   11168:	beq	11234 <putchar_unlocked@plt+0x20c>
   1116c:	cmn	r0, #2
   11170:	moveq	r0, r4
   11174:	beq	1117c <putchar_unlocked@plt+0x154>
   11178:	mov	r0, #1
   1117c:	bl	1227c <putchar_unlocked@plt+0x1254>
   11180:	cmp	r0, #99	; 0x63
   11184:	beq	11278 <putchar_unlocked@plt+0x250>
   11188:	cmp	r0, #116	; 0x74
   1118c:	bne	11178 <putchar_unlocked@plt+0x150>
   11190:	mov	r6, r4
   11194:	b	110bc <putchar_unlocked@plt+0x94>
   11198:	movw	r3, #257	; 0x101
   1119c:	cmp	r0, r3
   111a0:	beq	111ec <putchar_unlocked@plt+0x1c4>
   111a4:	bgt	111c4 <putchar_unlocked@plt+0x19c>
   111a8:	cmp	r0, #122	; 0x7a
   111ac:	beq	11228 <putchar_unlocked@plt+0x200>
   111b0:	cmp	r0, #256	; 0x100
   111b4:	bne	11178 <putchar_unlocked@plt+0x150>
   111b8:	mov	r3, #1
   111bc:	strb	r3, [r5, #5]
   111c0:	b	110bc <putchar_unlocked@plt+0x94>
   111c4:	movw	r3, #259	; 0x103
   111c8:	cmp	r0, r3
   111cc:	mov	r3, #1
   111d0:	beq	11220 <putchar_unlocked@plt+0x1f8>
   111d4:	blt	11210 <putchar_unlocked@plt+0x1e8>
   111d8:	cmp	r0, #260	; 0x104
   111dc:	bne	11178 <putchar_unlocked@plt+0x150>
   111e0:	mov	r6, r3
   111e4:	str	r3, [sp, #56]	; 0x38
   111e8:	b	110bc <putchar_unlocked@plt+0x94>
   111ec:	mov	r3, #1
   111f0:	strb	r3, [r5, #6]
   111f4:	strb	r4, [r5, #7]
   111f8:	strb	r4, [r5, #8]
   111fc:	b	110bc <putchar_unlocked@plt+0x94>
   11200:	mov	r3, #1
   11204:	strb	r4, [r5, #6]
   11208:	strb	r3, [r5, #7]
   1120c:	b	111f8 <putchar_unlocked@plt+0x1d0>
   11210:	strb	r4, [r5, #6]
   11214:	strb	r4, [r5, #7]
   11218:	strb	r3, [r5, #8]
   1121c:	b	110bc <putchar_unlocked@plt+0x94>
   11220:	strb	r3, [r5, #9]
   11224:	b	110bc <putchar_unlocked@plt+0x94>
   11228:	ldr	r3, [pc, #3076]	; 11e34 <putchar_unlocked@plt+0xe0c>
   1122c:	strb	r4, [r3]
   11230:	b	110bc <putchar_unlocked@plt+0x94>
   11234:	ldr	r3, [pc, #3072]	; 11e3c <putchar_unlocked@plt+0xe14>
   11238:	ldr	r2, [pc, #3072]	; 11e40 <putchar_unlocked@plt+0xe18>
   1123c:	ldr	r1, [pc, #3072]	; 11e44 <putchar_unlocked@plt+0xe1c>
   11240:	str	r3, [sp, #8]
   11244:	ldr	r3, [pc, #3068]	; 11e48 <putchar_unlocked@plt+0xe20>
   11248:	str	r4, [sp, #12]
   1124c:	str	r3, [sp, #4]
   11250:	ldr	r3, [pc, #3060]	; 11e4c <putchar_unlocked@plt+0xe24>
   11254:	str	r3, [sp]
   11258:	ldr	r3, [pc, #3056]	; 11e50 <putchar_unlocked@plt+0xe28>
   1125c:	ldr	r0, [r9]
   11260:	ldr	r3, [r3]
   11264:	bl	16ae8 <putchar_unlocked@plt+0x5ac0>
   11268:	mov	r0, r4
   1126c:	bl	10ee4 <exit@plt>
   11270:	mov	r6, #1
   11274:	b	110bc <putchar_unlocked@plt+0x94>
   11278:	mov	fp, #1
   1127c:	b	110bc <putchar_unlocked@plt+0x94>
   11280:	ldr	r2, [sp, #56]	; 0x38
   11284:	ands	r4, fp, r2
   11288:	movne	r2, #5
   1128c:	ldrne	r1, [pc, #3008]	; 11e54 <putchar_unlocked@plt+0xe2c>
   11290:	bne	11130 <putchar_unlocked@plt+0x108>
   11294:	cmp	r6, #0
   11298:	movlt	r2, #0
   1129c:	andge	r2, fp, #1
   112a0:	cmp	r2, #0
   112a4:	movne	r2, #5
   112a8:	ldrne	r1, [pc, #2984]	; 11e58 <putchar_unlocked@plt+0xe30>
   112ac:	bne	1132c <putchar_unlocked@plt+0x304>
   112b0:	ldrb	r4, [r3, #5]
   112b4:	eor	r4, r4, #1
   112b8:	orrs	r4, fp, r4
   112bc:	moveq	r2, #5
   112c0:	ldreq	r1, [pc, #2964]	; 11e5c <putchar_unlocked@plt+0xe34>
   112c4:	beq	1132c <putchar_unlocked@plt+0x304>
   112c8:	ldrb	r4, [r3, #6]
   112cc:	eor	r4, r4, #1
   112d0:	orrs	r4, fp, r4
   112d4:	moveq	r2, #5
   112d8:	ldreq	r1, [pc, #2944]	; 11e60 <putchar_unlocked@plt+0xe38>
   112dc:	beq	1132c <putchar_unlocked@plt+0x304>
   112e0:	ldrb	r4, [r3, #7]
   112e4:	eor	r4, r4, #1
   112e8:	orrs	r4, fp, r4
   112ec:	moveq	r2, #5
   112f0:	ldreq	r1, [pc, #2924]	; 11e64 <putchar_unlocked@plt+0xe3c>
   112f4:	beq	1132c <putchar_unlocked@plt+0x304>
   112f8:	ldrb	r0, [r3, #8]
   112fc:	eor	r0, r0, #1
   11300:	orrs	r2, fp, r0
   11304:	ldreq	r1, [pc, #2908]	; 11e68 <putchar_unlocked@plt+0xe40>
   11308:	str	r2, [sp, #44]	; 0x2c
   1130c:	moveq	r2, #5
   11310:	beq	1132c <putchar_unlocked@plt+0x304>
   11314:	ldrb	r1, [r3, #9]
   11318:	eor	r2, fp, #1
   1131c:	tst	r1, r2
   11320:	beq	11340 <putchar_unlocked@plt+0x318>
   11324:	ldr	r1, [pc, #2880]	; 11e6c <putchar_unlocked@plt+0xe44>
   11328:	mov	r2, #5
   1132c:	mov	r0, #0
   11330:	bl	10e18 <dcgettext@plt>
   11334:	mov	r2, r0
   11338:	mov	r1, #0
   1133c:	b	11140 <putchar_unlocked@plt+0x118>
   11340:	add	r3, r7, r8, lsl #2
   11344:	cmn	r6, #1
   11348:	moveq	r6, #0
   1134c:	str	r3, [sp, #60]	; 0x3c
   11350:	ldr	r3, [pc, #2840]	; 11e70 <putchar_unlocked@plt+0xe48>
   11354:	ldr	r3, [r3]
   11358:	cmp	r3, r8
   1135c:	bne	11374 <putchar_unlocked@plt+0x34c>
   11360:	ldr	r2, [pc, #2828]	; 11e74 <putchar_unlocked@plt+0xe4c>
   11364:	str	r2, [r7, r8, lsl #2]
   11368:	ldr	r2, [sp, #60]	; 0x3c
   1136c:	add	r2, r2, #4
   11370:	str	r2, [sp, #60]	; 0x3c
   11374:	cmp	r6, #0
   11378:	add	r3, r7, r3, lsl #2
   1137c:	movne	r2, #42	; 0x2a
   11380:	moveq	r2, #32
   11384:	str	r3, [sp, #64]	; 0x40
   11388:	str	r2, [sp, #88]	; 0x58
   1138c:	ldr	r3, [sp, #60]	; 0x3c
   11390:	ldr	r2, [sp, #64]	; 0x40
   11394:	cmp	r3, r2
   11398:	bhi	113e8 <putchar_unlocked@plt+0x3c0>
   1139c:	ldr	r3, [pc, #2692]	; 11e28 <putchar_unlocked@plt+0xe00>
   113a0:	ldrb	r3, [r3, #4]
   113a4:	cmp	r3, #0
   113a8:	beq	11dfc <putchar_unlocked@plt+0xdd4>
   113ac:	ldr	r3, [pc, #2756]	; 11e78 <putchar_unlocked@plt+0xe50>
   113b0:	ldr	r0, [r3]
   113b4:	bl	14e1c <putchar_unlocked@plt+0x3df4>
   113b8:	cmn	r0, #1
   113bc:	bne	11dfc <putchar_unlocked@plt+0xdd4>
   113c0:	bl	10f08 <__errno_location@plt>
   113c4:	ldr	r4, [r0]
   113c8:	mov	r2, #5
   113cc:	mov	r0, #0
   113d0:	ldr	r1, [pc, #2724]	; 11e7c <putchar_unlocked@plt+0xe54>
   113d4:	bl	10e18 <dcgettext@plt>
   113d8:	mov	r2, r0
   113dc:	mov	r0, #1
   113e0:	mov	r1, r4
   113e4:	bl	10e84 <error@plt>
   113e8:	ldr	r3, [sp, #64]	; 0x40
   113ec:	cmp	fp, #0
   113f0:	ldr	r5, [r3], #4
   113f4:	str	r3, [sp, #64]	; 0x40
   113f8:	beq	11cd8 <putchar_unlocked@plt+0xcb0>
   113fc:	ldr	r1, [pc, #2672]	; 11e74 <putchar_unlocked@plt+0xe4c>
   11400:	mov	r0, r5
   11404:	bl	10dac <strcmp@plt>
   11408:	subs	r3, r0, #0
   1140c:	str	r3, [sp, #80]	; 0x50
   11410:	bne	114ac <putchar_unlocked@plt+0x484>
   11414:	ldr	r3, [pc, #2572]	; 11e28 <putchar_unlocked@plt+0xe00>
   11418:	mov	r2, #1
   1141c:	ldr	r1, [pc, #2648]	; 11e7c <putchar_unlocked@plt+0xe54>
   11420:	strb	r2, [r3, #4]
   11424:	mov	r2, #5
   11428:	bl	10e18 <dcgettext@plt>
   1142c:	ldr	r3, [pc, #2628]	; 11e78 <putchar_unlocked@plt+0xe50>
   11430:	mov	r5, r0
   11434:	ldr	sl, [r3]
   11438:	mov	r2, #1
   1143c:	mov	r3, #0
   11440:	mov	r9, #0
   11444:	strd	r2, [sp, #48]	; 0x30
   11448:	mov	r2, #0
   1144c:	mov	r3, #0
   11450:	strd	r2, [sp, #16]
   11454:	strd	r2, [sp, #24]
   11458:	strd	r2, [sp, #32]
   1145c:	str	r9, [sp, #40]	; 0x28
   11460:	str	r9, [sp, #104]	; 0x68
   11464:	str	r9, [sp, #108]	; 0x6c
   11468:	ldrd	r2, [sp, #48]	; 0x30
   1146c:	orrs	r3, r2, r3
   11470:	bne	11500 <putchar_unlocked@plt+0x4d8>
   11474:	mov	r2, #5
   11478:	ldr	r1, [pc, #2560]	; 11e80 <putchar_unlocked@plt+0xe58>
   1147c:	mov	r0, #0
   11480:	bl	10e18 <dcgettext@plt>
   11484:	mov	r4, r0
   11488:	mov	r2, r5
   1148c:	mov	r1, #3
   11490:	mov	r0, #0
   11494:	bl	16550 <putchar_unlocked@plt+0x5528>
   11498:	mov	r3, r0
   1149c:	mov	r2, r4
   114a0:	mov	r1, #0
   114a4:	mov	r0, #1
   114a8:	bl	10e84 <error@plt>
   114ac:	ldr	r1, [pc, #2512]	; 11e84 <putchar_unlocked@plt+0xe5c>
   114b0:	mov	r0, r5
   114b4:	bl	14f14 <putchar_unlocked@plt+0x3eec>
   114b8:	subs	sl, r0, #0
   114bc:	bne	11438 <putchar_unlocked@plt+0x410>
   114c0:	bl	10f08 <__errno_location@plt>
   114c4:	mov	r2, r5
   114c8:	mov	r1, #3
   114cc:	ldr	r4, [r0]
   114d0:	mov	r0, sl
   114d4:	bl	16550 <putchar_unlocked@plt+0x5528>
   114d8:	ldr	r2, [pc, #2472]	; 11e88 <putchar_unlocked@plt+0xe60>
   114dc:	mov	r3, r0
   114e0:	mov	r1, r4
   114e4:	mov	r0, #0
   114e8:	mov	r9, #0
   114ec:	bl	10e84 <error@plt>
   114f0:	ldr	r3, [sp, #44]	; 0x2c
   114f4:	and	r3, r3, r9
   114f8:	str	r3, [sp, #44]	; 0x2c
   114fc:	b	1138c <putchar_unlocked@plt+0x364>
   11500:	mov	r2, sl
   11504:	add	r1, sp, #108	; 0x6c
   11508:	add	r0, sp, #104	; 0x68
   1150c:	bl	10fd4 <getline@plt>
   11510:	subs	r6, r0, #0
   11514:	ble	1159c <putchar_unlocked@plt+0x574>
   11518:	ldr	r3, [sp, #104]	; 0x68
   1151c:	ldrb	r2, [r3]
   11520:	cmp	r2, #35	; 0x23
   11524:	beq	11564 <putchar_unlocked@plt+0x53c>
   11528:	add	r2, r3, r6
   1152c:	ldrb	r0, [r2, #-1]
   11530:	cmp	r0, #10
   11534:	subeq	r6, r6, #1
   11538:	cmp	r6, #0
   1153c:	movle	r2, r6
   11540:	subgt	r2, r6, #1
   11544:	ldrb	r0, [r3, r2]
   11548:	cmp	r0, #13
   1154c:	subeq	r6, r6, #1
   11550:	cmp	r6, #0
   11554:	movne	r8, #0
   11558:	strbne	r8, [r3, r6]
   1155c:	ldrne	r4, [sp, #104]	; 0x68
   11560:	bne	11618 <putchar_unlocked@plt+0x5f0>
   11564:	mov	r0, sl
   11568:	bl	11004 <feof_unlocked@plt>
   1156c:	cmp	r0, #0
   11570:	bne	1159c <putchar_unlocked@plt+0x574>
   11574:	mov	r0, sl
   11578:	bl	10e6c <ferror_unlocked@plt>
   1157c:	ldr	r3, [sp, #48]	; 0x30
   11580:	adds	r3, r3, #1
   11584:	str	r3, [sp, #48]	; 0x30
   11588:	ldr	r3, [sp, #52]	; 0x34
   1158c:	adc	r3, r3, #0
   11590:	cmp	r0, #0
   11594:	str	r3, [sp, #52]	; 0x34
   11598:	beq	11468 <putchar_unlocked@plt+0x440>
   1159c:	ldr	r0, [sp, #104]	; 0x68
   115a0:	bl	14fa8 <putchar_unlocked@plt+0x3f80>
   115a4:	mov	r0, sl
   115a8:	bl	10e6c <ferror_unlocked@plt>
   115ac:	ldr	r3, [sp, #80]	; 0x50
   115b0:	mov	r6, r0
   115b4:	clz	r0, r0
   115b8:	lsr	r0, r0, #5
   115bc:	rsb	r4, r0, #0
   115c0:	mov	r0, sl
   115c4:	cmp	r3, #0
   115c8:	bne	11a60 <putchar_unlocked@plt+0xa38>
   115cc:	bl	10fa4 <clearerr_unlocked@plt>
   115d0:	cmp	r4, #0
   115d4:	blt	11a80 <putchar_unlocked@plt+0xa58>
   115d8:	ldrne	r6, [pc, #2216]	; 11e88 <putchar_unlocked@plt+0xe60>
   115dc:	bne	115f8 <putchar_unlocked@plt+0x5d0>
   115e0:	mov	r2, #5
   115e4:	mov	r0, #0
   115e8:	ldr	r1, [pc, #2204]	; 11e8c <putchar_unlocked@plt+0xe64>
   115ec:	mov	r4, #0
   115f0:	bl	10e18 <dcgettext@plt>
   115f4:	mov	r6, r0
   115f8:	mov	r2, r5
   115fc:	mov	r1, #3
   11600:	mov	r0, #0
   11604:	bl	16550 <putchar_unlocked@plt+0x5528>
   11608:	mov	r3, r0
   1160c:	mov	r2, r6
   11610:	b	114e0 <putchar_unlocked@plt+0x4b8>
   11614:	add	r8, r8, #1
   11618:	ldrb	r3, [r4, r8]
   1161c:	cmp	r3, #9
   11620:	cmpne	r3, #32
   11624:	moveq	r2, #1
   11628:	movne	r2, #0
   1162c:	str	r2, [sp, #68]	; 0x44
   11630:	beq	11614 <putchar_unlocked@plt+0x5ec>
   11634:	cmp	r3, #92	; 0x5c
   11638:	mov	r2, #6
   1163c:	ldr	r1, [pc, #2124]	; 11e90 <putchar_unlocked@plt+0xe68>
   11640:	addeq	r8, r8, #1
   11644:	add	r7, r4, r8
   11648:	streq	fp, [sp, #68]	; 0x44
   1164c:	mov	r0, r7
   11650:	bl	10fec <strncmp@plt>
   11654:	cmp	r0, #0
   11658:	bne	11878 <putchar_unlocked@plt+0x850>
   1165c:	add	r3, r8, #6
   11660:	ldrb	r2, [r4, r3]
   11664:	cmp	r2, #32
   11668:	addeq	r3, r8, #7
   1166c:	ldrb	r2, [r4, r3]
   11670:	cmp	r2, #40	; 0x28
   11674:	beq	116ec <putchar_unlocked@plt+0x6c4>
   11678:	ldr	r3, [sp, #16]
   1167c:	adds	r3, r3, #1
   11680:	str	r3, [sp, #16]
   11684:	ldr	r3, [sp, #20]
   11688:	adc	r3, r3, #0
   1168c:	str	r3, [sp, #20]
   11690:	ldr	r3, [pc, #1936]	; 11e28 <putchar_unlocked@plt+0xe00>
   11694:	ldrb	r3, [r3, #7]
   11698:	cmp	r3, #0
   1169c:	beq	11564 <putchar_unlocked@plt+0x53c>
   116a0:	mov	r2, #5
   116a4:	ldr	r1, [pc, #2024]	; 11e94 <putchar_unlocked@plt+0xe6c>
   116a8:	mov	r0, #0
   116ac:	bl	10e18 <dcgettext@plt>
   116b0:	mov	r4, r0
   116b4:	mov	r2, r5
   116b8:	mov	r1, #3
   116bc:	mov	r0, #0
   116c0:	bl	16550 <putchar_unlocked@plt+0x5528>
   116c4:	ldr	r3, [pc, #1988]	; 11e90 <putchar_unlocked@plt+0xe68>
   116c8:	mov	r1, #0
   116cc:	str	r3, [sp, #8]
   116d0:	ldrd	r2, [sp, #48]	; 0x30
   116d4:	strd	r2, [sp]
   116d8:	mov	r3, r0
   116dc:	mov	r2, r4
   116e0:	mov	r0, r1
   116e4:	bl	10e84 <error@plt>
   116e8:	b	11564 <putchar_unlocked@plt+0x53c>
   116ec:	add	r3, r3, #1
   116f0:	subs	r6, r6, r3
   116f4:	beq	11678 <putchar_unlocked@plt+0x650>
   116f8:	add	r4, r4, r3
   116fc:	sub	r6, r6, #1
   11700:	cmp	r6, #0
   11704:	beq	11714 <putchar_unlocked@plt+0x6ec>
   11708:	ldrb	r3, [r4, r6]
   1170c:	cmp	r3, #41	; 0x29
   11710:	bne	116fc <putchar_unlocked@plt+0x6d4>
   11714:	ldrb	r3, [r4, r6]
   11718:	add	r7, r4, r6
   1171c:	cmp	r3, #41	; 0x29
   11720:	bne	11678 <putchar_unlocked@plt+0x650>
   11724:	ldr	r3, [sp, #68]	; 0x44
   11728:	cmp	r3, #0
   1172c:	bne	11858 <putchar_unlocked@plt+0x830>
   11730:	mov	r3, #0
   11734:	add	r6, r6, #1
   11738:	strb	r3, [r7]
   1173c:	ldrb	r3, [r4, r6]
   11740:	cmp	r3, #9
   11744:	cmpne	r3, #32
   11748:	beq	11870 <putchar_unlocked@plt+0x848>
   1174c:	cmp	r3, #61	; 0x3d
   11750:	bne	11678 <putchar_unlocked@plt+0x650>
   11754:	add	r6, r6, #1
   11758:	add	r6, r4, r6
   1175c:	ldrb	r3, [r6]
   11760:	mov	r7, r6
   11764:	add	r6, r6, #1
   11768:	cmp	r3, #9
   1176c:	cmpne	r3, #32
   11770:	beq	1175c <putchar_unlocked@plt+0x734>
   11774:	mov	r0, r7
   11778:	bl	12064 <putchar_unlocked@plt+0x103c>
   1177c:	cmp	r0, #0
   11780:	beq	11678 <putchar_unlocked@plt+0x650>
   11784:	ldr	r3, [sp, #80]	; 0x50
   11788:	cmp	r3, #0
   1178c:	bne	117a4 <putchar_unlocked@plt+0x77c>
   11790:	ldr	r1, [pc, #1756]	; 11e74 <putchar_unlocked@plt+0xe4c>
   11794:	mov	r0, r4
   11798:	bl	10dac <strcmp@plt>
   1179c:	cmp	r0, #0
   117a0:	beq	11678 <putchar_unlocked@plt+0x650>
   117a4:	ldr	r3, [pc, #1660]	; 11e28 <putchar_unlocked@plt+0xe00>
   117a8:	ldrb	r3, [r3, #6]
   117ac:	cmp	r3, #0
   117b0:	movne	r9, #0
   117b4:	bne	117cc <putchar_unlocked@plt+0x7a4>
   117b8:	mov	r1, #10
   117bc:	mov	r0, r4
   117c0:	bl	10efc <strchr@plt>
   117c4:	adds	r9, r0, #0
   117c8:	movne	r9, #1
   117cc:	add	r2, sp, #103	; 0x67
   117d0:	add	r1, sp, #144	; 0x90
   117d4:	str	r9, [sp, #68]	; 0x44
   117d8:	mov	r0, r4
   117dc:	bl	1213c <putchar_unlocked@plt+0x1114>
   117e0:	subs	r3, r0, #0
   117e4:	str	r3, [sp, #84]	; 0x54
   117e8:	ldr	r3, [pc, #1592]	; 11e28 <putchar_unlocked@plt+0xe00>
   117ec:	bne	11948 <putchar_unlocked@plt+0x920>
   117f0:	ldr	r2, [sp, #24]
   117f4:	ldrb	r3, [r3, #6]
   117f8:	adds	r2, r2, #1
   117fc:	str	r2, [sp, #24]
   11800:	ldr	r2, [sp, #28]
   11804:	adc	r2, r2, #0
   11808:	cmp	r3, #0
   1180c:	str	r2, [sp, #28]
   11810:	bne	11850 <putchar_unlocked@plt+0x828>
   11814:	cmp	r9, #0
   11818:	beq	11824 <putchar_unlocked@plt+0x7fc>
   1181c:	mov	r0, #92	; 0x5c
   11820:	bl	11028 <putchar_unlocked@plt>
   11824:	mov	r0, r4
   11828:	ldr	r1, [sp, #68]	; 0x44
   1182c:	bl	120b4 <putchar_unlocked@plt+0x108c>
   11830:	ldr	r1, [pc, #1632]	; 11e98 <putchar_unlocked@plt+0xe70>
   11834:	mov	r2, #5
   11838:	mov	r0, #0
   1183c:	bl	10e18 <dcgettext@plt>
   11840:	mov	r2, r0
   11844:	ldr	r1, [pc, #1616]	; 11e9c <putchar_unlocked@plt+0xe74>
   11848:	mov	r0, #1
   1184c:	bl	10f38 <__printf_chk@plt>
   11850:	mov	r9, fp
   11854:	b	11564 <putchar_unlocked@plt+0x53c>
   11858:	mov	r1, r6
   1185c:	mov	r0, r4
   11860:	bl	11fcc <putchar_unlocked@plt+0xfa4>
   11864:	cmp	r0, #0
   11868:	bne	11730 <putchar_unlocked@plt+0x708>
   1186c:	b	11678 <putchar_unlocked@plt+0x650>
   11870:	add	r6, r6, #1
   11874:	b	1173c <putchar_unlocked@plt+0x714>
   11878:	ldr	r1, [pc, #1448]	; 11e28 <putchar_unlocked@plt+0xe00>
   1187c:	sub	r2, r6, r8
   11880:	ldrb	r0, [r4, r8]
   11884:	ldr	r3, [r1, #12]
   11888:	cmp	r0, #92	; 0x5c
   1188c:	addeq	r3, r3, #1
   11890:	cmp	r2, r3
   11894:	bcc	11678 <putchar_unlocked@plt+0x650>
   11898:	ldr	r3, [r1]
   1189c:	add	r8, r8, r3
   118a0:	ldrb	r3, [r4, r8]
   118a4:	cmp	r3, #32
   118a8:	cmpne	r3, #9
   118ac:	movne	r3, #1
   118b0:	moveq	r3, #0
   118b4:	bne	11678 <putchar_unlocked@plt+0x650>
   118b8:	mov	r0, r7
   118bc:	strb	r3, [r4, r8]
   118c0:	bl	12064 <putchar_unlocked@plt+0x103c>
   118c4:	cmp	r0, #0
   118c8:	beq	11678 <putchar_unlocked@plt+0x650>
   118cc:	ldr	r2, [pc, #1376]	; 11e34 <putchar_unlocked@plt+0xe0c>
   118d0:	add	r1, r8, #1
   118d4:	sub	r3, r6, r1
   118d8:	cmp	r3, #1
   118dc:	ldr	r0, [r2, #4]
   118e0:	beq	118fc <putchar_unlocked@plt+0x8d4>
   118e4:	ldrb	r3, [r4, r1]
   118e8:	cmp	r3, #32
   118ec:	cmpne	r3, #42	; 0x2a
   118f0:	movne	r3, #1
   118f4:	moveq	r3, #0
   118f8:	beq	11938 <putchar_unlocked@plt+0x910>
   118fc:	cmp	r0, #0
   11900:	beq	11678 <putchar_unlocked@plt+0x650>
   11904:	ldr	r3, [pc, #1320]	; 11e34 <putchar_unlocked@plt+0xe0c>
   11908:	mov	r2, #1
   1190c:	str	r2, [r3, #4]
   11910:	ldr	r3, [sp, #68]	; 0x44
   11914:	add	r4, r4, r1
   11918:	cmp	r3, #0
   1191c:	beq	11784 <putchar_unlocked@plt+0x75c>
   11920:	sub	r1, r6, r1
   11924:	mov	r0, r4
   11928:	bl	11fcc <putchar_unlocked@plt+0xfa4>
   1192c:	adds	r0, r0, #0
   11930:	movne	r0, #1
   11934:	b	1177c <putchar_unlocked@plt+0x754>
   11938:	cmp	r0, #1
   1193c:	addne	r1, r8, #2
   11940:	strne	r3, [r2, #4]
   11944:	b	11910 <putchar_unlocked@plt+0x8e8>
   11948:	ldrb	r2, [r3, #5]
   1194c:	cmp	r2, #0
   11950:	beq	11960 <putchar_unlocked@plt+0x938>
   11954:	ldrb	r2, [sp, #103]	; 0x67
   11958:	cmp	r2, #0
   1195c:	bne	11850 <putchar_unlocked@plt+0x828>
   11960:	ldr	r8, [r3]
   11964:	mov	r6, #0
   11968:	add	r1, r7, #1
   1196c:	lsr	r8, r8, #1
   11970:	cmp	r8, r6
   11974:	bne	119d4 <putchar_unlocked@plt+0x9ac>
   11978:	ldr	r3, [sp, #84]	; 0x54
   1197c:	str	r3, [sp, #40]	; 0x28
   11980:	ldr	r3, [pc, #1184]	; 11e28 <putchar_unlocked@plt+0xe00>
   11984:	ldrb	r2, [r3, #6]
   11988:	cmp	r2, #0
   1198c:	bne	11850 <putchar_unlocked@plt+0x828>
   11990:	cmp	r8, r6
   11994:	bne	119a4 <putchar_unlocked@plt+0x97c>
   11998:	ldrb	r3, [r3, #8]
   1199c:	cmp	r3, #0
   119a0:	bne	11850 <putchar_unlocked@plt+0x828>
   119a4:	cmp	r9, #0
   119a8:	beq	119b4 <putchar_unlocked@plt+0x98c>
   119ac:	mov	r0, #92	; 0x5c
   119b0:	bl	11028 <putchar_unlocked@plt>
   119b4:	mov	r0, r4
   119b8:	ldr	r1, [sp, #68]	; 0x44
   119bc:	bl	120b4 <putchar_unlocked@plt+0x108c>
   119c0:	cmp	r8, r6
   119c4:	beq	11a44 <putchar_unlocked@plt+0xa1c>
   119c8:	mov	r2, #5
   119cc:	ldr	r1, [pc, #1228]	; 11ea0 <putchar_unlocked@plt+0xe78>
   119d0:	b	11838 <putchar_unlocked@plt+0x810>
   119d4:	str	r1, [sp, #92]	; 0x5c
   119d8:	bl	10eb4 <__ctype_tolower_loc@plt>
   119dc:	add	r2, sp, #144	; 0x90
   119e0:	ldr	r1, [pc, #1212]	; 11ea4 <putchar_unlocked@plt+0xe7c>
   119e4:	ldrb	r3, [r6, r2]
   119e8:	ldrb	lr, [r7, r6, lsl #1]
   119ec:	ldr	r0, [r0]
   119f0:	add	ip, r1, r3, lsr #4
   119f4:	ldrb	ip, [ip, #264]	; 0x108
   119f8:	ldr	lr, [r0, lr, lsl #2]
   119fc:	cmp	lr, ip
   11a00:	bne	11a28 <putchar_unlocked@plt+0xa00>
   11a04:	and	r3, r3, #15
   11a08:	add	r3, r1, r3
   11a0c:	ldr	r1, [sp, #92]	; 0x5c
   11a10:	ldrb	r3, [r3, #264]	; 0x108
   11a14:	ldrb	ip, [r1, r6, lsl #1]
   11a18:	ldr	r0, [r0, ip, lsl #2]
   11a1c:	cmp	r0, r3
   11a20:	addeq	r6, r6, #1
   11a24:	beq	11970 <putchar_unlocked@plt+0x948>
   11a28:	ldr	r3, [sp, #32]
   11a2c:	adds	r3, r3, #1
   11a30:	str	r3, [sp, #32]
   11a34:	ldr	r3, [sp, #36]	; 0x24
   11a38:	adc	r3, r3, #0
   11a3c:	str	r3, [sp, #36]	; 0x24
   11a40:	b	11980 <putchar_unlocked@plt+0x958>
   11a44:	ldr	r3, [pc, #988]	; 11e28 <putchar_unlocked@plt+0xe00>
   11a48:	ldrb	r0, [r3, #8]
   11a4c:	cmp	r0, #0
   11a50:	bne	11850 <putchar_unlocked@plt+0x828>
   11a54:	mov	r2, #5
   11a58:	ldr	r1, [pc, #1096]	; 11ea8 <putchar_unlocked@plt+0xe80>
   11a5c:	b	1183c <putchar_unlocked@plt+0x814>
   11a60:	bl	14e1c <putchar_unlocked@plt+0x3df4>
   11a64:	cmp	r0, #0
   11a68:	beq	115d0 <putchar_unlocked@plt+0x5a8>
   11a6c:	cmp	r6, #0
   11a70:	bne	115e0 <putchar_unlocked@plt+0x5b8>
   11a74:	bl	10f08 <__errno_location@plt>
   11a78:	ldr	r4, [r0]
   11a7c:	b	115d0 <putchar_unlocked@plt+0x5a8>
   11a80:	cmp	r9, #0
   11a84:	bne	11ac8 <putchar_unlocked@plt+0xaa0>
   11a88:	mov	r2, #5
   11a8c:	ldr	r1, [pc, #1048]	; 11eac <putchar_unlocked@plt+0xe84>
   11a90:	mov	r0, r9
   11a94:	bl	10e18 <dcgettext@plt>
   11a98:	mov	r4, r0
   11a9c:	mov	r2, r5
   11aa0:	mov	r1, #3
   11aa4:	mov	r0, r9
   11aa8:	bl	16550 <putchar_unlocked@plt+0x5528>
   11aac:	mov	r3, r0
   11ab0:	mov	r2, r4
   11ab4:	mov	r1, r9
   11ab8:	mov	r0, r9
   11abc:	bl	10e84 <error@plt>
   11ac0:	and	r9, r9, #1
   11ac4:	b	114f0 <putchar_unlocked@plt+0x4c8>
   11ac8:	ldr	r3, [pc, #856]	; 11e28 <putchar_unlocked@plt+0xe00>
   11acc:	ldrb	r3, [r3, #6]
   11ad0:	cmp	r3, #0
   11ad4:	bne	11ca8 <putchar_unlocked@plt+0xc80>
   11ad8:	ldrd	r2, [sp, #16]
   11adc:	orrs	r3, r2, r3
   11ae0:	beq	11b44 <putchar_unlocked@plt+0xb1c>
   11ae4:	ldrd	r0, [sp, #16]
   11ae8:	mov	r3, #0
   11aec:	mvn	r2, #0
   11af0:	cmp	r1, r3
   11af4:	cmpeq	r0, r2
   11af8:	ldrls	r3, [sp, #16]
   11afc:	bls	11b14 <putchar_unlocked@plt+0xaec>
   11b00:	mov	r3, #0
   11b04:	ldr	r2, [pc, #932]	; 11eb0 <putchar_unlocked@plt+0xe88>
   11b08:	bl	17344 <putchar_unlocked@plt+0x631c>
   11b0c:	add	r3, r2, #999424	; 0xf4000
   11b10:	add	r3, r3, #576	; 0x240
   11b14:	mov	r2, #5
   11b18:	ldr	r1, [pc, #916]	; 11eb4 <putchar_unlocked@plt+0xe8c>
   11b1c:	mov	r0, #0
   11b20:	str	r2, [sp]
   11b24:	ldr	r2, [pc, #908]	; 11eb8 <putchar_unlocked@plt+0xe90>
   11b28:	bl	1101c <dcngettext@plt>
   11b2c:	ldrd	r2, [sp, #16]
   11b30:	mov	r1, #0
   11b34:	strd	r2, [sp]
   11b38:	mov	r2, r0
   11b3c:	mov	r0, r1
   11b40:	bl	10e84 <error@plt>
   11b44:	ldrd	r2, [sp, #24]
   11b48:	orrs	r3, r2, r3
   11b4c:	beq	11bb0 <putchar_unlocked@plt+0xb88>
   11b50:	ldrd	r0, [sp, #24]
   11b54:	mov	r3, #0
   11b58:	mvn	r2, #0
   11b5c:	cmp	r1, r3
   11b60:	cmpeq	r0, r2
   11b64:	ldrls	r3, [sp, #24]
   11b68:	bls	11b80 <putchar_unlocked@plt+0xb58>
   11b6c:	mov	r3, #0
   11b70:	ldr	r2, [pc, #824]	; 11eb0 <putchar_unlocked@plt+0xe88>
   11b74:	bl	17344 <putchar_unlocked@plt+0x631c>
   11b78:	add	r3, r2, #999424	; 0xf4000
   11b7c:	add	r3, r3, #576	; 0x240
   11b80:	mov	r2, #5
   11b84:	ldr	r1, [pc, #816]	; 11ebc <putchar_unlocked@plt+0xe94>
   11b88:	mov	r0, #0
   11b8c:	str	r2, [sp]
   11b90:	ldr	r2, [pc, #808]	; 11ec0 <putchar_unlocked@plt+0xe98>
   11b94:	bl	1101c <dcngettext@plt>
   11b98:	ldrd	r2, [sp, #24]
   11b9c:	mov	r1, #0
   11ba0:	strd	r2, [sp]
   11ba4:	mov	r2, r0
   11ba8:	mov	r0, r1
   11bac:	bl	10e84 <error@plt>
   11bb0:	ldrd	r2, [sp, #32]
   11bb4:	orrs	r3, r2, r3
   11bb8:	beq	11c1c <putchar_unlocked@plt+0xbf4>
   11bbc:	ldrd	r0, [sp, #32]
   11bc0:	mov	r3, #0
   11bc4:	mvn	r2, #0
   11bc8:	cmp	r1, r3
   11bcc:	cmpeq	r0, r2
   11bd0:	ldrls	r3, [sp, #32]
   11bd4:	bls	11bec <putchar_unlocked@plt+0xbc4>
   11bd8:	mov	r3, #0
   11bdc:	ldr	r2, [pc, #716]	; 11eb0 <putchar_unlocked@plt+0xe88>
   11be0:	bl	17344 <putchar_unlocked@plt+0x631c>
   11be4:	add	r3, r2, #999424	; 0xf4000
   11be8:	add	r3, r3, #576	; 0x240
   11bec:	mov	r2, #5
   11bf0:	ldr	r1, [pc, #716]	; 11ec4 <putchar_unlocked@plt+0xe9c>
   11bf4:	mov	r0, #0
   11bf8:	str	r2, [sp]
   11bfc:	ldr	r2, [pc, #708]	; 11ec8 <putchar_unlocked@plt+0xea0>
   11c00:	bl	1101c <dcngettext@plt>
   11c04:	ldrd	r2, [sp, #32]
   11c08:	mov	r1, #0
   11c0c:	strd	r2, [sp]
   11c10:	mov	r2, r0
   11c14:	mov	r0, r1
   11c18:	bl	10e84 <error@plt>
   11c1c:	ldr	r3, [pc, #516]	; 11e28 <putchar_unlocked@plt+0xe00>
   11c20:	ldrb	r3, [r3, #5]
   11c24:	cmp	r3, #0
   11c28:	beq	11ca8 <putchar_unlocked@plt+0xc80>
   11c2c:	ldr	r3, [sp, #40]	; 0x28
   11c30:	cmp	r3, #0
   11c34:	beq	11c6c <putchar_unlocked@plt+0xc44>
   11c38:	ldr	r3, [sp, #24]
   11c3c:	ldr	r2, [sp, #32]
   11c40:	orr	r3, r3, r2
   11c44:	ldr	r2, [sp, #36]	; 0x24
   11c48:	str	r3, [sp, #72]	; 0x48
   11c4c:	ldr	r3, [sp, #28]
   11c50:	orr	r3, r3, r2
   11c54:	str	r3, [sp, #76]	; 0x4c
   11c58:	ldrd	r2, [sp, #72]	; 0x48
   11c5c:	orrs	r3, r2, r3
   11c60:	beq	11cb8 <putchar_unlocked@plt+0xc90>
   11c64:	mov	r9, #0
   11c68:	b	11ac0 <putchar_unlocked@plt+0xa98>
   11c6c:	mov	r2, #5
   11c70:	ldr	r1, [pc, #596]	; 11ecc <putchar_unlocked@plt+0xea4>
   11c74:	ldr	r0, [sp, #40]	; 0x28
   11c78:	bl	10e18 <dcgettext@plt>
   11c7c:	mov	r4, r0
   11c80:	mov	r2, r5
   11c84:	ldr	r0, [sp, #40]	; 0x28
   11c88:	mov	r1, #3
   11c8c:	bl	16550 <putchar_unlocked@plt+0x5528>
   11c90:	ldr	r1, [sp, #40]	; 0x28
   11c94:	mov	r3, r0
   11c98:	mov	r2, r4
   11c9c:	mov	r0, r1
   11ca0:	bl	10e84 <error@plt>
   11ca4:	b	11c64 <putchar_unlocked@plt+0xc3c>
   11ca8:	ldr	r3, [sp, #40]	; 0x28
   11cac:	cmp	r3, #0
   11cb0:	bne	11c38 <putchar_unlocked@plt+0xc10>
   11cb4:	b	11c64 <putchar_unlocked@plt+0xc3c>
   11cb8:	ldr	r3, [pc, #360]	; 11e28 <putchar_unlocked@plt+0xe00>
   11cbc:	ldr	r2, [sp, #20]
   11cc0:	ldrb	r9, [r3, #9]
   11cc4:	ldr	r3, [sp, #16]
   11cc8:	eor	r9, r9, #1
   11ccc:	orrs	r3, r3, r2
   11cd0:	orreq	r9, r9, #1
   11cd4:	b	11ac0 <putchar_unlocked@plt+0xa98>
   11cd8:	add	r2, sp, #144	; 0x90
   11cdc:	add	r1, sp, #112	; 0x70
   11ce0:	mov	r0, r5
   11ce4:	bl	1213c <putchar_unlocked@plt+0x1114>
   11ce8:	subs	r4, r0, #0
   11cec:	beq	11df4 <putchar_unlocked@plt+0xdcc>
   11cf0:	ldr	r3, [pc, #316]	; 11e34 <putchar_unlocked@plt+0xe0c>
   11cf4:	ldrb	r7, [r3]
   11cf8:	cmp	r7, #10
   11cfc:	bne	11d98 <putchar_unlocked@plt+0xd70>
   11d00:	mov	r1, #92	; 0x5c
   11d04:	mov	r0, r5
   11d08:	bl	10efc <strchr@plt>
   11d0c:	cmp	r0, #0
   11d10:	bne	11d3c <putchar_unlocked@plt+0xd14>
   11d14:	mov	r1, r7
   11d18:	mov	r0, r5
   11d1c:	bl	10efc <strchr@plt>
   11d20:	cmp	r0, #0
   11d24:	bne	11d3c <putchar_unlocked@plt+0xd14>
   11d28:	mov	r1, #13
   11d2c:	mov	r0, r5
   11d30:	bl	10efc <strchr@plt>
   11d34:	cmp	r0, #0
   11d38:	beq	11d98 <putchar_unlocked@plt+0xd70>
   11d3c:	mov	r0, #92	; 0x5c
   11d40:	bl	11028 <putchar_unlocked@plt>
   11d44:	ldr	r3, [sp, #56]	; 0x38
   11d48:	cmp	r3, #0
   11d4c:	beq	11d84 <putchar_unlocked@plt+0xd5c>
   11d50:	ldr	r6, [pc, #184]	; 11e10 <putchar_unlocked@plt+0xde8>
   11d54:	ldr	r0, [pc, #308]	; 11e90 <putchar_unlocked@plt+0xe68>
   11d58:	ldr	r1, [r6]
   11d5c:	bl	10d94 <fputs_unlocked@plt>
   11d60:	ldr	r0, [pc, #360]	; 11ed0 <putchar_unlocked@plt+0xea8>
   11d64:	ldr	r1, [r6]
   11d68:	bl	10d94 <fputs_unlocked@plt>
   11d6c:	mov	r1, r4
   11d70:	mov	r0, r5
   11d74:	bl	120b4 <putchar_unlocked@plt+0x108c>
   11d78:	ldr	r0, [pc, #340]	; 11ed4 <putchar_unlocked@plt+0xeac>
   11d7c:	ldr	r1, [r6]
   11d80:	bl	10d94 <fputs_unlocked@plt>
   11d84:	mov	r6, #0
   11d88:	ldr	r8, [pc, #152]	; 11e28 <putchar_unlocked@plt+0xe00>
   11d8c:	add	r9, sp, #112	; 0x70
   11d90:	ldr	sl, [pc, #320]	; 11ed8 <putchar_unlocked@plt+0xeb0>
   11d94:	b	11db4 <putchar_unlocked@plt+0xd8c>
   11d98:	mov	r4, fp
   11d9c:	b	11d44 <putchar_unlocked@plt+0xd1c>
   11da0:	ldrb	r2, [r9, r6]
   11da4:	mov	r1, sl
   11da8:	mov	r0, #1
   11dac:	add	r6, r6, #1
   11db0:	bl	10f38 <__printf_chk@plt>
   11db4:	ldr	r3, [r8]
   11db8:	cmp	r6, r3, lsr #1
   11dbc:	bcc	11da0 <putchar_unlocked@plt+0xd78>
   11dc0:	ldr	r3, [sp, #56]	; 0x38
   11dc4:	cmp	r3, #0
   11dc8:	bne	11de8 <putchar_unlocked@plt+0xdc0>
   11dcc:	mov	r0, #32
   11dd0:	bl	11028 <putchar_unlocked@plt>
   11dd4:	ldr	r0, [sp, #88]	; 0x58
   11dd8:	bl	11028 <putchar_unlocked@plt>
   11ddc:	mov	r1, r4
   11de0:	mov	r0, r5
   11de4:	bl	120b4 <putchar_unlocked@plt+0x108c>
   11de8:	mov	r0, r7
   11dec:	bl	11028 <putchar_unlocked@plt>
   11df0:	ldr	r4, [sp, #44]	; 0x2c
   11df4:	str	r4, [sp, #44]	; 0x2c
   11df8:	b	1138c <putchar_unlocked@plt+0x364>
   11dfc:	ldr	r3, [sp, #44]	; 0x2c
   11e00:	eor	r0, r3, #1
   11e04:	uxtb	r0, r0
   11e08:	add	sp, sp, #180	; 0xb4
   11e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e10:	andeq	r9, r2, ip, ror #2
   11e14:	andeq	r7, r1, sl, lsr #20
   11e18:	strdeq	r7, [r1], -r6
   11e1c:	andeq	r7, r1, r3, asr ip
   11e20:	ldrdeq	r2, [r1], -r4
   11e24:	andeq	r7, r1, r7, lsr sp
   11e28:	andeq	r9, r2, r4, ror r1
   11e2c:	andeq	r7, r1, r8, ror r5
   11e30:	andeq	r7, r1, sp, lsr sp
   11e34:	andeq	r9, r2, r0, lsl #2
   11e38:	andeq	r7, r1, r0, ror #26
   11e3c:	andeq	r7, r1, lr, lsl #26
   11e40:	andeq	r7, r1, pc, asr #24
   11e44:	andeq	r7, r1, r1, ror #12
   11e48:	andeq	r7, r1, fp, lsl sp
   11e4c:	andeq	r7, r1, r8, lsr #26
   11e50:	andeq	r9, r2, r8, lsl #2
   11e54:	muleq	r1, ip, sp
   11e58:	ldrdeq	r7, [r1], -r5
   11e5c:	andeq	r7, r1, lr, lsl lr
   11e60:	andeq	r7, r1, r6, ror #28
   11e64:	andeq	r7, r1, r6, lsr #29
   11e68:	andeq	r7, r1, r4, ror #29
   11e6c:	andeq	r7, r1, r3, lsr #30
   11e70:	andeq	r9, r2, r8, asr r1
   11e74:	muleq	r1, r7, r2
   11e78:	andeq	r9, r2, r8, ror #2
   11e7c:	andeq	r7, r1, r3, ror #30
   11e80:	andeq	r7, r1, r2, ror pc
   11e84:	andeq	r7, r1, ip, asr r6
   11e88:	andeq	r8, r1, r2, lsl r2
   11e8c:	ldrdeq	r7, [r1], -ip
   11e90:	ldrdeq	r7, [r1], -sl
   11e94:	andeq	r7, r1, lr, lsl #31
   11e98:			; <UNDEFINED> instruction: 0x00017fbe
   11e9c:	andeq	r8, r1, r0, asr #11
   11ea0:	ldrdeq	r7, [r1], -r2
   11ea4:	andeq	r7, r1, r0, asr #10
   11ea8:	ldrdeq	r7, [r1], -r9
   11eac:	andeq	r7, r1, fp, ror #31
   11eb0:	andeq	r4, pc, r0, asr #4
   11eb4:	andeq	r8, r1, r7, asr #32
   11eb8:	andeq	r8, r1, sl, lsl r0
   11ebc:	muleq	r1, pc, r0	; <UNPREDICTABLE>
   11ec0:	andeq	r8, r1, r2, ror r0
   11ec4:	strdeq	r8, [r1], -sl
   11ec8:	andeq	r8, r1, fp, asr #1
   11ecc:	andeq	r8, r1, r8, lsr #2
   11ed0:	andeq	r8, r1, r1, asr #2
   11ed4:	andeq	r8, r1, r4, asr #2
   11ed8:	andeq	r8, r1, r9, asr #2
   11edc:	mov	fp, #0
   11ee0:	mov	lr, #0
   11ee4:	pop	{r1}		; (ldr r1, [sp], #4)
   11ee8:	mov	r2, sp
   11eec:	push	{r2}		; (str r2, [sp, #-4]!)
   11ef0:	push	{r0}		; (str r0, [sp, #-4]!)
   11ef4:	ldr	ip, [pc, #16]	; 11f0c <putchar_unlocked@plt+0xee4>
   11ef8:	push	{ip}		; (str ip, [sp, #-4]!)
   11efc:	ldr	r0, [pc, #12]	; 11f10 <putchar_unlocked@plt+0xee8>
   11f00:	ldr	r3, [pc, #12]	; 11f14 <putchar_unlocked@plt+0xeec>
   11f04:	bl	10e9c <__libc_start_main@plt>
   11f08:	bl	10ff8 <abort@plt>
   11f0c:	andeq	r7, r1, r8, lsl r5
   11f10:	andeq	r1, r1, ip, asr #32
   11f14:			; <UNDEFINED> instruction: 0x000174b8
   11f18:	ldr	r3, [pc, #20]	; 11f34 <putchar_unlocked@plt+0xf0c>
   11f1c:	ldr	r2, [pc, #20]	; 11f38 <putchar_unlocked@plt+0xf10>
   11f20:	add	r3, pc, r3
   11f24:	ldr	r2, [r3, r2]
   11f28:	cmp	r2, #0
   11f2c:	bxeq	lr
   11f30:	b	10ec0 <__gmon_start__@plt>
   11f34:	ldrdeq	r7, [r1], -r8
   11f38:	strdeq	r0, [r0], -r4
   11f3c:	ldr	r0, [pc, #24]	; 11f5c <putchar_unlocked@plt+0xf34>
   11f40:	ldr	r3, [pc, #24]	; 11f60 <putchar_unlocked@plt+0xf38>
   11f44:	cmp	r3, r0
   11f48:	bxeq	lr
   11f4c:	ldr	r3, [pc, #16]	; 11f64 <putchar_unlocked@plt+0xf3c>
   11f50:	cmp	r3, #0
   11f54:	bxeq	lr
   11f58:	bx	r3
   11f5c:	andeq	r9, r2, r0, asr r1
   11f60:	andeq	r9, r2, r0, asr r1
   11f64:	andeq	r0, r0, r0
   11f68:	ldr	r0, [pc, #36]	; 11f94 <putchar_unlocked@plt+0xf6c>
   11f6c:	ldr	r1, [pc, #36]	; 11f98 <putchar_unlocked@plt+0xf70>
   11f70:	sub	r1, r1, r0
   11f74:	asr	r1, r1, #2
   11f78:	add	r1, r1, r1, lsr #31
   11f7c:	asrs	r1, r1, #1
   11f80:	bxeq	lr
   11f84:	ldr	r3, [pc, #16]	; 11f9c <putchar_unlocked@plt+0xf74>
   11f88:	cmp	r3, #0
   11f8c:	bxeq	lr
   11f90:	bx	r3
   11f94:	andeq	r9, r2, r0, asr r1
   11f98:	andeq	r9, r2, r0, asr r1
   11f9c:	andeq	r0, r0, r0
   11fa0:	push	{r4, lr}
   11fa4:	ldr	r4, [pc, #24]	; 11fc4 <putchar_unlocked@plt+0xf9c>
   11fa8:	ldrb	r3, [r4]
   11fac:	cmp	r3, #0
   11fb0:	popne	{r4, pc}
   11fb4:	bl	11f3c <putchar_unlocked@plt+0xf14>
   11fb8:	mov	r3, #1
   11fbc:	strb	r3, [r4]
   11fc0:	pop	{r4, pc}
   11fc4:	andeq	r9, r2, r0, ror r1
   11fc8:	b	11f68 <putchar_unlocked@plt+0xf40>
   11fcc:	push	{r4, r5, lr}
   11fd0:	mov	r3, r0
   11fd4:	mov	r2, #0
   11fd8:	sub	lr, r1, #1
   11fdc:	mov	r4, #10
   11fe0:	mov	r5, #13
   11fe4:	cmp	r2, r1
   11fe8:	bcc	12000 <putchar_unlocked@plt+0xfd8>
   11fec:	add	r1, r0, r1
   11ff0:	cmp	r3, r1
   11ff4:	movcc	r2, #0
   11ff8:	strbcc	r2, [r3]
   11ffc:	pop	{r4, r5, pc}
   12000:	ldrb	ip, [r0, r2]
   12004:	cmp	ip, #0
   12008:	beq	1203c <putchar_unlocked@plt+0x1014>
   1200c:	cmp	ip, #92	; 0x5c
   12010:	bne	1205c <putchar_unlocked@plt+0x1034>
   12014:	cmp	lr, r2
   12018:	beq	1203c <putchar_unlocked@plt+0x1014>
   1201c:	add	r2, r2, #1
   12020:	ldrb	ip, [r0, r2]
   12024:	cmp	ip, #110	; 0x6e
   12028:	beq	12044 <putchar_unlocked@plt+0x101c>
   1202c:	cmp	ip, #114	; 0x72
   12030:	beq	12054 <putchar_unlocked@plt+0x102c>
   12034:	cmp	ip, #92	; 0x5c
   12038:	beq	1205c <putchar_unlocked@plt+0x1034>
   1203c:	mov	r0, #0
   12040:	pop	{r4, r5, pc}
   12044:	strb	r4, [r3]
   12048:	add	r2, r2, #1
   1204c:	add	r3, r3, #1
   12050:	b	11fe4 <putchar_unlocked@plt+0xfbc>
   12054:	strb	r5, [r3]
   12058:	b	12048 <putchar_unlocked@plt+0x1020>
   1205c:	strb	ip, [r3]
   12060:	b	12048 <putchar_unlocked@plt+0x1020>
   12064:	ldr	r3, [pc, #68]	; 120b0 <putchar_unlocked@plt+0x1088>
   12068:	push	{r4, r5, r6, lr}
   1206c:	mov	r5, r0
   12070:	ldr	r6, [r3]
   12074:	add	r6, r0, r6
   12078:	cmp	r5, r6
   1207c:	ldrb	r4, [r5]
   12080:	bne	12090 <putchar_unlocked@plt+0x1068>
   12084:	clz	r0, r4
   12088:	lsr	r0, r0, #5
   1208c:	pop	{r4, r5, r6, pc}
   12090:	bl	10ed8 <__ctype_b_loc@plt>
   12094:	ldr	r3, [r0]
   12098:	lsl	r4, r4, #1
   1209c:	ldrh	r0, [r3, r4]
   120a0:	ands	r0, r0, #4096	; 0x1000
   120a4:	popeq	{r4, r5, r6, pc}
   120a8:	add	r5, r5, #1
   120ac:	b	12078 <putchar_unlocked@plt+0x1050>
   120b0:	andeq	r9, r2, r4, ror r1
   120b4:	cmp	r1, #0
   120b8:	beq	12104 <putchar_unlocked@plt+0x10dc>
   120bc:	push	{r4, r5, r6, r7, r8, lr}
   120c0:	sub	r4, r0, #1
   120c4:	ldr	r5, [pc, #96]	; 1212c <putchar_unlocked@plt+0x1104>
   120c8:	ldr	r6, [pc, #96]	; 12130 <putchar_unlocked@plt+0x1108>
   120cc:	ldr	r7, [pc, #96]	; 12134 <putchar_unlocked@plt+0x110c>
   120d0:	ldrb	r0, [r4, #1]!
   120d4:	cmp	r0, #0
   120d8:	popeq	{r4, r5, r6, r7, r8, pc}
   120dc:	cmp	r0, #13
   120e0:	beq	12110 <putchar_unlocked@plt+0x10e8>
   120e4:	cmp	r0, #92	; 0x5c
   120e8:	beq	12120 <putchar_unlocked@plt+0x10f8>
   120ec:	cmp	r0, #10
   120f0:	ldreq	r0, [pc, #64]	; 12138 <putchar_unlocked@plt+0x1110>
   120f4:	ldreq	r1, [r5]
   120f8:	beq	12118 <putchar_unlocked@plt+0x10f0>
   120fc:	bl	11028 <putchar_unlocked@plt>
   12100:	b	120d0 <putchar_unlocked@plt+0x10a8>
   12104:	ldr	r3, [pc, #32]	; 1212c <putchar_unlocked@plt+0x1104>
   12108:	ldr	r1, [r3]
   1210c:	b	10d94 <fputs_unlocked@plt>
   12110:	ldr	r1, [r5]
   12114:	mov	r0, r6
   12118:	bl	10d94 <fputs_unlocked@plt>
   1211c:	b	120d0 <putchar_unlocked@plt+0x10a8>
   12120:	mov	r0, r7
   12124:	ldr	r1, [r5]
   12128:	b	12118 <putchar_unlocked@plt+0x10f0>
   1212c:	andeq	r9, r2, ip, ror #2
   12130:	andeq	r7, r1, fp, asr r6
   12134:	andeq	r7, r1, lr, asr r6
   12138:	andeq	r7, r1, r8, asr r6
   1213c:	push	{r4, r5, r6, r7, r8, lr}
   12140:	mov	r4, r1
   12144:	mov	r7, r2
   12148:	mov	r6, r0
   1214c:	ldr	r1, [pc, #276]	; 12268 <putchar_unlocked@plt+0x1240>
   12150:	bl	10dac <strcmp@plt>
   12154:	mov	r3, #0
   12158:	subs	r8, r0, #0
   1215c:	strb	r3, [r7]
   12160:	bne	121dc <putchar_unlocked@plt+0x11b4>
   12164:	ldr	r3, [pc, #256]	; 1226c <putchar_unlocked@plt+0x1244>
   12168:	mov	r2, #1
   1216c:	strb	r2, [r3, #4]
   12170:	ldr	r3, [pc, #248]	; 12270 <putchar_unlocked@plt+0x1248>
   12174:	ldr	r5, [r3]
   12178:	mov	r1, #2
   1217c:	mov	r0, r5
   12180:	bl	14dec <putchar_unlocked@plt+0x3dc4>
   12184:	mov	r1, r4
   12188:	mov	r0, r5
   1218c:	bl	12794 <putchar_unlocked@plt+0x176c>
   12190:	subs	r4, r0, #0
   12194:	beq	121a0 <putchar_unlocked@plt+0x1178>
   12198:	bl	10f08 <__errno_location@plt>
   1219c:	ldr	r4, [r0]
   121a0:	cmp	r8, #0
   121a4:	mov	r0, r5
   121a8:	bne	12248 <putchar_unlocked@plt+0x1220>
   121ac:	bl	10fa4 <clearerr_unlocked@plt>
   121b0:	cmp	r4, #0
   121b4:	moveq	r4, #1
   121b8:	beq	12240 <putchar_unlocked@plt+0x1218>
   121bc:	mov	r2, r6
   121c0:	mov	r1, #3
   121c4:	mov	r0, #0
   121c8:	bl	16550 <putchar_unlocked@plt+0x5528>
   121cc:	mov	r3, r0
   121d0:	ldr	r2, [pc, #156]	; 12274 <putchar_unlocked@plt+0x124c>
   121d4:	mov	r1, r4
   121d8:	b	12234 <putchar_unlocked@plt+0x120c>
   121dc:	ldr	r1, [pc, #148]	; 12278 <putchar_unlocked@plt+0x1250>
   121e0:	mov	r0, r6
   121e4:	bl	14f14 <putchar_unlocked@plt+0x3eec>
   121e8:	subs	r5, r0, #0
   121ec:	bne	12178 <putchar_unlocked@plt+0x1150>
   121f0:	ldr	r3, [pc, #116]	; 1226c <putchar_unlocked@plt+0x1244>
   121f4:	ldrb	r4, [r3, #5]
   121f8:	bl	10f08 <__errno_location@plt>
   121fc:	ldr	r5, [r0]
   12200:	cmp	r4, #0
   12204:	beq	12218 <putchar_unlocked@plt+0x11f0>
   12208:	cmp	r5, #2
   1220c:	moveq	r3, #1
   12210:	strbeq	r3, [r7]
   12214:	beq	12240 <putchar_unlocked@plt+0x1218>
   12218:	mov	r2, r6
   1221c:	mov	r1, #3
   12220:	mov	r0, #0
   12224:	bl	16550 <putchar_unlocked@plt+0x5528>
   12228:	ldr	r2, [pc, #68]	; 12274 <putchar_unlocked@plt+0x124c>
   1222c:	mov	r3, r0
   12230:	mov	r1, r5
   12234:	mov	r0, #0
   12238:	mov	r4, #0
   1223c:	bl	10e84 <error@plt>
   12240:	mov	r0, r4
   12244:	pop	{r4, r5, r6, r7, r8, pc}
   12248:	bl	14e1c <putchar_unlocked@plt+0x3df4>
   1224c:	cmp	r0, #0
   12250:	beq	121b0 <putchar_unlocked@plt+0x1188>
   12254:	cmp	r4, #0
   12258:	bne	121bc <putchar_unlocked@plt+0x1194>
   1225c:	bl	10f08 <__errno_location@plt>
   12260:	ldr	r4, [r0]
   12264:	b	121b0 <putchar_unlocked@plt+0x1188>
   12268:	muleq	r1, r7, r2
   1226c:	andeq	r9, r2, r4, ror r1
   12270:	andeq	r9, r2, r8, ror #2
   12274:	andeq	r8, r1, r2, lsl r2
   12278:	andeq	r7, r1, ip, asr r6
   1227c:	subs	r4, r0, #0
   12280:	push	{r7, lr}
   12284:	sub	sp, sp, #56	; 0x38
   12288:	ldr	r5, [pc, #684]	; 1253c <putchar_unlocked@plt+0x1514>
   1228c:	beq	122c4 <putchar_unlocked@plt+0x129c>
   12290:	mov	r2, #5
   12294:	mov	r0, #0
   12298:	ldr	r3, [pc, #672]	; 12540 <putchar_unlocked@plt+0x1518>
   1229c:	ldr	r1, [pc, #672]	; 12544 <putchar_unlocked@plt+0x151c>
   122a0:	ldr	r6, [r3]
   122a4:	bl	10e18 <dcgettext@plt>
   122a8:	mov	r2, r0
   122ac:	mov	r1, #1
   122b0:	ldr	r3, [r5]
   122b4:	mov	r0, r6
   122b8:	bl	10f50 <__fprintf_chk@plt>
   122bc:	mov	r0, r4
   122c0:	bl	10ee4 <exit@plt>
   122c4:	mov	r2, #5
   122c8:	ldr	r1, [pc, #632]	; 12548 <putchar_unlocked@plt+0x1520>
   122cc:	mov	r6, sp
   122d0:	bl	10e18 <dcgettext@plt>
   122d4:	mov	r1, r0
   122d8:	mov	r0, #1
   122dc:	ldr	r2, [r5]
   122e0:	bl	10f38 <__printf_chk@plt>
   122e4:	ldr	r5, [pc, #608]	; 1254c <putchar_unlocked@plt+0x1524>
   122e8:	mov	r2, #5
   122ec:	mov	r0, r4
   122f0:	ldr	r1, [pc, #600]	; 12550 <putchar_unlocked@plt+0x1528>
   122f4:	bl	10e18 <dcgettext@plt>
   122f8:	mov	r1, r0
   122fc:	mov	r3, #224	; 0xe0
   12300:	ldr	r2, [pc, #588]	; 12554 <putchar_unlocked@plt+0x152c>
   12304:	mov	r0, #1
   12308:	bl	10f38 <__printf_chk@plt>
   1230c:	mov	r2, #5
   12310:	ldr	r1, [pc, #576]	; 12558 <putchar_unlocked@plt+0x1530>
   12314:	mov	r0, r4
   12318:	bl	10e18 <dcgettext@plt>
   1231c:	ldr	r1, [r5]
   12320:	bl	10d94 <fputs_unlocked@plt>
   12324:	mov	r2, #5
   12328:	ldr	r1, [pc, #556]	; 1255c <putchar_unlocked@plt+0x1534>
   1232c:	mov	r0, r4
   12330:	bl	10e18 <dcgettext@plt>
   12334:	ldr	r1, [r5]
   12338:	bl	10d94 <fputs_unlocked@plt>
   1233c:	mov	r2, #5
   12340:	ldr	r1, [pc, #536]	; 12560 <putchar_unlocked@plt+0x1538>
   12344:	mov	r0, r4
   12348:	bl	10e18 <dcgettext@plt>
   1234c:	ldr	r1, [r5]
   12350:	bl	10d94 <fputs_unlocked@plt>
   12354:	mov	r2, #5
   12358:	ldr	r1, [pc, #516]	; 12564 <putchar_unlocked@plt+0x153c>
   1235c:	mov	r0, r4
   12360:	bl	10e18 <dcgettext@plt>
   12364:	ldr	r1, [r5]
   12368:	bl	10d94 <fputs_unlocked@plt>
   1236c:	mov	r2, #5
   12370:	ldr	r1, [pc, #496]	; 12568 <putchar_unlocked@plt+0x1540>
   12374:	mov	r0, r4
   12378:	bl	10e18 <dcgettext@plt>
   1237c:	ldr	r1, [r5]
   12380:	bl	10d94 <fputs_unlocked@plt>
   12384:	mov	r2, #5
   12388:	ldr	r1, [pc, #476]	; 1256c <putchar_unlocked@plt+0x1544>
   1238c:	mov	r0, r4
   12390:	bl	10e18 <dcgettext@plt>
   12394:	ldr	r1, [r5]
   12398:	bl	10d94 <fputs_unlocked@plt>
   1239c:	mov	r2, #5
   123a0:	ldr	r1, [pc, #456]	; 12570 <putchar_unlocked@plt+0x1548>
   123a4:	mov	r0, r4
   123a8:	bl	10e18 <dcgettext@plt>
   123ac:	ldr	r1, [r5]
   123b0:	bl	10d94 <fputs_unlocked@plt>
   123b4:	mov	r2, #5
   123b8:	ldr	r1, [pc, #436]	; 12574 <putchar_unlocked@plt+0x154c>
   123bc:	mov	r0, r4
   123c0:	bl	10e18 <dcgettext@plt>
   123c4:	ldr	r1, [r5]
   123c8:	bl	10d94 <fputs_unlocked@plt>
   123cc:	mov	r2, #5
   123d0:	ldr	r1, [pc, #416]	; 12578 <putchar_unlocked@plt+0x1550>
   123d4:	mov	r0, r4
   123d8:	bl	10e18 <dcgettext@plt>
   123dc:	ldr	r1, [r5]
   123e0:	bl	10d94 <fputs_unlocked@plt>
   123e4:	mov	r2, #5
   123e8:	ldr	r1, [pc, #396]	; 1257c <putchar_unlocked@plt+0x1554>
   123ec:	mov	r0, r4
   123f0:	bl	10e18 <dcgettext@plt>
   123f4:	mov	r1, r0
   123f8:	ldr	r2, [pc, #384]	; 12580 <putchar_unlocked@plt+0x1558>
   123fc:	mov	r0, #1
   12400:	bl	10f38 <__printf_chk@plt>
   12404:	mov	r2, #5
   12408:	ldr	r1, [pc, #372]	; 12584 <putchar_unlocked@plt+0x155c>
   1240c:	mov	r0, r4
   12410:	bl	10e18 <dcgettext@plt>
   12414:	ldr	r1, [r5]
   12418:	bl	10d94 <fputs_unlocked@plt>
   1241c:	ldr	lr, [pc, #356]	; 12588 <putchar_unlocked@plt+0x1560>
   12420:	mov	ip, sp
   12424:	ldr	r7, [pc, #352]	; 1258c <putchar_unlocked@plt+0x1564>
   12428:	ldm	lr!, {r0, r1, r2, r3}
   1242c:	stmia	ip!, {r0, r1, r2, r3}
   12430:	ldm	lr!, {r0, r1, r2, r3}
   12434:	stmia	ip!, {r0, r1, r2, r3}
   12438:	ldm	lr!, {r0, r1, r2, r3}
   1243c:	stmia	ip!, {r0, r1, r2, r3}
   12440:	ldm	lr, {r0, r1}
   12444:	stm	ip, {r0, r1}
   12448:	ldr	r1, [r6]
   1244c:	cmp	r1, #0
   12450:	bne	124f4 <putchar_unlocked@plt+0x14cc>
   12454:	ldr	r6, [r6, #4]
   12458:	mov	r2, #5
   1245c:	mov	r0, #0
   12460:	ldr	r7, [pc, #292]	; 1258c <putchar_unlocked@plt+0x1564>
   12464:	ldr	r1, [pc, #292]	; 12590 <putchar_unlocked@plt+0x1568>
   12468:	cmp	r6, #0
   1246c:	moveq	r6, r7
   12470:	bl	10e18 <dcgettext@plt>
   12474:	mov	r1, r0
   12478:	ldr	r3, [pc, #276]	; 12594 <putchar_unlocked@plt+0x156c>
   1247c:	mov	r0, #1
   12480:	ldr	r2, [pc, #272]	; 12598 <putchar_unlocked@plt+0x1570>
   12484:	bl	10f38 <__printf_chk@plt>
   12488:	mov	r1, #0
   1248c:	mov	r0, #5
   12490:	bl	10f80 <setlocale@plt>
   12494:	cmp	r0, #0
   12498:	bne	1250c <putchar_unlocked@plt+0x14e4>
   1249c:	mov	r2, #5
   124a0:	ldr	r1, [pc, #244]	; 1259c <putchar_unlocked@plt+0x1574>
   124a4:	mov	r0, #0
   124a8:	bl	10e18 <dcgettext@plt>
   124ac:	mov	r1, r0
   124b0:	ldr	r3, [pc, #212]	; 1258c <putchar_unlocked@plt+0x1564>
   124b4:	mov	r0, #1
   124b8:	ldr	r2, [pc, #212]	; 12594 <putchar_unlocked@plt+0x156c>
   124bc:	bl	10f38 <__printf_chk@plt>
   124c0:	mov	r2, #5
   124c4:	ldr	r1, [pc, #212]	; 125a0 <putchar_unlocked@plt+0x1578>
   124c8:	mov	r0, #0
   124cc:	bl	10e18 <dcgettext@plt>
   124d0:	ldr	r2, [pc, #204]	; 125a4 <putchar_unlocked@plt+0x157c>
   124d4:	cmp	r6, r7
   124d8:	mov	r1, r0
   124dc:	mov	r0, #1
   124e0:	ldr	r3, [pc, #192]	; 125a8 <putchar_unlocked@plt+0x1580>
   124e4:	moveq	r3, r2
   124e8:	mov	r2, r6
   124ec:	bl	10f38 <__printf_chk@plt>
   124f0:	b	122bc <putchar_unlocked@plt+0x1294>
   124f4:	mov	r0, r7
   124f8:	bl	10dac <strcmp@plt>
   124fc:	cmp	r0, #0
   12500:	beq	12454 <putchar_unlocked@plt+0x142c>
   12504:	add	r6, r6, #8
   12508:	b	12448 <putchar_unlocked@plt+0x1420>
   1250c:	mov	r2, #3
   12510:	ldr	r1, [pc, #148]	; 125ac <putchar_unlocked@plt+0x1584>
   12514:	bl	10fec <strncmp@plt>
   12518:	cmp	r0, #0
   1251c:	beq	1249c <putchar_unlocked@plt+0x1474>
   12520:	mov	r2, #5
   12524:	ldr	r1, [pc, #132]	; 125b0 <putchar_unlocked@plt+0x1588>
   12528:	mov	r0, #0
   1252c:	bl	10e18 <dcgettext@plt>
   12530:	ldr	r1, [r5]
   12534:	bl	10d94 <fputs_unlocked@plt>
   12538:	b	1249c <putchar_unlocked@plt+0x1474>
   1253c:	andeq	r9, r2, ip, lsl #3
   12540:	andeq	r9, r2, r0, ror #2
   12544:	andeq	r7, r1, fp, ror #12
   12548:	muleq	r1, r2, r6
   1254c:	andeq	r9, r2, ip, ror #2
   12550:			; <UNDEFINED> instruction: 0x000176b3
   12554:	ldrdeq	r7, [r1], -sl
   12558:	andeq	r7, r1, r1, ror #13
   1255c:	andeq	r7, r1, r9, lsl r7
   12560:	andeq	r7, r1, r6, asr #14
   12564:	andeq	r7, r1, ip, lsl #15
   12568:	andeq	r7, r1, r1, asr #15
   1256c:	strdeq	r7, [r1], -r6
   12570:	andeq	r7, r1, r4, ror r8
   12574:	andeq	r7, r1, fp, lsr #20
   12578:	andeq	r7, r1, r8, asr sl
   1257c:	andeq	r7, r1, lr, lsl #21
   12580:			; <UNDEFINED> instruction: 0x00017aba
   12584:	andeq	r7, r1, r3, asr #21
   12588:	andeq	r7, r1, r0, asr #10
   1258c:	andeq	r7, r1, r1, ror #12
   12590:	andeq	r7, r1, r0, lsl ip
   12594:	andeq	r7, r1, r7, lsr #24
   12598:	andeq	r7, r1, pc, asr #24
   1259c:	andeq	r7, r1, r8, lsr #25
   125a0:	andeq	r7, r1, r3, asr #25
   125a4:	andeq	r8, r1, sl, ror #2
   125a8:	andeq	r7, r1, sl, lsr #20
   125ac:	andeq	r7, r1, sp, asr ip
   125b0:	andeq	r7, r1, r1, ror #24
   125b4:	ldr	r3, [pc, #4]	; 125c0 <putchar_unlocked@plt+0x1598>
   125b8:	str	r0, [r3]
   125bc:	bx	lr
   125c0:	andeq	r9, r2, r4, lsl #3
   125c4:	ldr	r3, [pc, #4]	; 125d0 <putchar_unlocked@plt+0x15a8>
   125c8:	strb	r0, [r3, #4]
   125cc:	bx	lr
   125d0:	andeq	r9, r2, r4, lsl #3
   125d4:	ldr	r3, [pc, #176]	; 1268c <putchar_unlocked@plt+0x1664>
   125d8:	push	{r0, r1, r4, r5, r6, lr}
   125dc:	ldr	r0, [r3]
   125e0:	bl	16f6c <putchar_unlocked@plt+0x5f44>
   125e4:	cmp	r0, #0
   125e8:	beq	12670 <putchar_unlocked@plt+0x1648>
   125ec:	ldr	r4, [pc, #156]	; 12690 <putchar_unlocked@plt+0x1668>
   125f0:	bl	10f08 <__errno_location@plt>
   125f4:	mov	r5, r0
   125f8:	ldrb	r6, [r4, #4]
   125fc:	cmp	r6, #0
   12600:	beq	12610 <putchar_unlocked@plt+0x15e8>
   12604:	ldr	r3, [r0]
   12608:	cmp	r3, #32
   1260c:	beq	12670 <putchar_unlocked@plt+0x1648>
   12610:	mov	r2, #5
   12614:	ldr	r1, [pc, #120]	; 12694 <putchar_unlocked@plt+0x166c>
   12618:	mov	r0, #0
   1261c:	bl	10e18 <dcgettext@plt>
   12620:	mov	r6, r0
   12624:	ldr	r0, [r4]
   12628:	cmp	r0, #0
   1262c:	beq	1265c <putchar_unlocked@plt+0x1634>
   12630:	ldr	r4, [r5]
   12634:	bl	16540 <putchar_unlocked@plt+0x5518>
   12638:	mov	r3, r0
   1263c:	ldr	r2, [pc, #84]	; 12698 <putchar_unlocked@plt+0x1670>
   12640:	mov	r0, #0
   12644:	str	r6, [sp]
   12648:	mov	r1, r4
   1264c:	bl	10e84 <error@plt>
   12650:	ldr	r3, [pc, #68]	; 1269c <putchar_unlocked@plt+0x1674>
   12654:	ldr	r0, [r3]
   12658:	bl	10ddc <_exit@plt>
   1265c:	mov	r3, r6
   12660:	ldr	r2, [pc, #56]	; 126a0 <putchar_unlocked@plt+0x1678>
   12664:	ldr	r1, [r5]
   12668:	bl	10e84 <error@plt>
   1266c:	b	12650 <putchar_unlocked@plt+0x1628>
   12670:	ldr	r3, [pc, #44]	; 126a4 <putchar_unlocked@plt+0x167c>
   12674:	ldr	r0, [r3]
   12678:	bl	16f6c <putchar_unlocked@plt+0x5f44>
   1267c:	cmp	r0, #0
   12680:	bne	12650 <putchar_unlocked@plt+0x1628>
   12684:	add	sp, sp, #8
   12688:	pop	{r4, r5, r6, pc}
   1268c:	andeq	r9, r2, ip, ror #2
   12690:	andeq	r9, r2, r4, lsl #3
   12694:	andeq	r8, r1, r2, lsl #4
   12698:	andeq	r8, r1, lr, lsl #4
   1269c:	andeq	r9, r2, ip, lsl #2
   126a0:	andeq	r8, r1, r2, lsl r2
   126a4:	andeq	r9, r2, r0, ror #2
   126a8:	push	{r4, r5, r6, r7, r8, lr}
   126ac:	mov	r6, r0
   126b0:	sub	sp, sp, #176	; 0xb0
   126b4:	movw	r0, #32840	; 0x8048
   126b8:	mov	r8, r1
   126bc:	mov	r4, r2
   126c0:	mov	r7, r3
   126c4:	bl	16efc <putchar_unlocked@plt+0x5ed4>
   126c8:	subs	r5, r0, #0
   126cc:	beq	1272c <putchar_unlocked@plt+0x1704>
   126d0:	add	r0, sp, #4
   126d4:	blx	r4
   126d8:	mov	r4, #0
   126dc:	mov	r0, r6
   126e0:	bl	11004 <feof_unlocked@plt>
   126e4:	cmp	r0, #0
   126e8:	bne	12748 <putchar_unlocked@plt+0x1720>
   126ec:	rsb	r2, r4, #32768	; 0x8000
   126f0:	add	r0, r5, r4
   126f4:	mov	r3, r6
   126f8:	mov	r1, #1
   126fc:	bl	10fc8 <fread_unlocked@plt>
   12700:	add	r4, r4, r0
   12704:	cmp	r4, #32768	; 0x8000
   12708:	beq	12734 <putchar_unlocked@plt+0x170c>
   1270c:	cmp	r0, #0
   12710:	bne	126dc <putchar_unlocked@plt+0x16b4>
   12714:	mov	r0, r6
   12718:	bl	10e6c <ferror_unlocked@plt>
   1271c:	cmp	r0, #0
   12720:	beq	12748 <putchar_unlocked@plt+0x1720>
   12724:	mov	r0, r5
   12728:	bl	14fa8 <putchar_unlocked@plt+0x3f80>
   1272c:	mov	r0, #1
   12730:	b	12778 <putchar_unlocked@plt+0x1750>
   12734:	add	r2, sp, #4
   12738:	mov	r1, r4
   1273c:	mov	r0, r5
   12740:	bl	128c4 <putchar_unlocked@plt+0x189c>
   12744:	b	126d8 <putchar_unlocked@plt+0x16b0>
   12748:	cmp	r4, #0
   1274c:	beq	12760 <putchar_unlocked@plt+0x1738>
   12750:	add	r2, sp, #4
   12754:	mov	r1, r4
   12758:	mov	r0, r5
   1275c:	bl	14c10 <putchar_unlocked@plt+0x3be8>
   12760:	mov	r1, r8
   12764:	add	r0, sp, #4
   12768:	blx	r7
   1276c:	mov	r0, r5
   12770:	bl	14fa8 <putchar_unlocked@plt+0x3f80>
   12774:	mov	r0, #0
   12778:	add	sp, sp, #176	; 0xb0
   1277c:	pop	{r4, r5, r6, r7, r8, pc}
   12780:	ldr	r3, [pc, #4]	; 1278c <putchar_unlocked@plt+0x1764>
   12784:	ldr	r2, [pc, #4]	; 12790 <putchar_unlocked@plt+0x1768>
   12788:	b	126a8 <putchar_unlocked@plt+0x1680>
   1278c:	ldrdeq	r4, [r1], -r0
   12790:	andeq	r2, r1, r8, lsr #15
   12794:	ldr	r3, [pc, #4]	; 127a0 <putchar_unlocked@plt+0x1778>
   12798:	ldr	r2, [pc, #4]	; 127a4 <putchar_unlocked@plt+0x177c>
   1279c:	b	126a8 <putchar_unlocked@plt+0x1680>
   127a0:	strdeq	r4, [r1], -r0
   127a4:	andeq	r2, r1, ip, lsl #16
   127a8:	ldr	r2, [pc, #60]	; 127ec <putchar_unlocked@plt+0x17c4>
   127ac:	ldr	r3, [pc, #60]	; 127f0 <putchar_unlocked@plt+0x17c8>
   127b0:	strd	r2, [r0]
   127b4:	ldr	r2, [pc, #56]	; 127f4 <putchar_unlocked@plt+0x17cc>
   127b8:	ldr	r3, [pc, #56]	; 127f8 <putchar_unlocked@plt+0x17d0>
   127bc:	strd	r2, [r0, #8]
   127c0:	ldr	r2, [pc, #52]	; 127fc <putchar_unlocked@plt+0x17d4>
   127c4:	ldr	r3, [pc, #52]	; 12800 <putchar_unlocked@plt+0x17d8>
   127c8:	strd	r2, [r0, #16]
   127cc:	ldr	r3, [pc, #48]	; 12804 <putchar_unlocked@plt+0x17dc>
   127d0:	ldr	r2, [pc, #48]	; 12808 <putchar_unlocked@plt+0x17e0>
   127d4:	strd	r2, [r0, #24]
   127d8:	mov	r3, #0
   127dc:	str	r3, [r0, #32]
   127e0:	str	r3, [r0, #36]	; 0x24
   127e4:	str	r3, [r0, #40]	; 0x28
   127e8:	bx	lr
   127ec:	bvs	28c190 <stdout@@GLIBC_2.4+0x263024>
   127f0:	bllt	19fe20c <stdout@@GLIBC_2.4+0x19d50a0>
   127f4:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   127f8:	strbge	pc, [pc, #-1338]	; 122c6 <putchar_unlocked@plt+0x129e>	; <UNPREDICTABLE>
   127fc:	tstpl	lr, pc, ror r2
   12800:	blls	16ca38 <stdout@@GLIBC_2.4+0x1438cc>
   12804:	blpl	ff845c70 <stdout@@GLIBC_2.4+0xff81cb04>
   12808:	svcne	0x0083d9ab
   1280c:	ldr	r2, [pc, #80]	; 12864 <putchar_unlocked@plt+0x183c>
   12810:	ldr	r3, [pc, #80]	; 12868 <putchar_unlocked@plt+0x1840>
   12814:	strd	r2, [r0]
   12818:	add	r3, r3, #-117440512	; 0xf9000000
   1281c:	add	r3, r3, #15990784	; 0xf40000
   12820:	ldr	r2, [pc, #68]	; 1286c <putchar_unlocked@plt+0x1844>
   12824:	add	r3, r3, #2064	; 0x810
   12828:	str	r3, [r0, #8]
   1282c:	ldr	r3, [pc, #60]	; 12870 <putchar_unlocked@plt+0x1848>
   12830:	strd	r2, [r0, #12]
   12834:	add	r3, r3, #1744830464	; 0x68000000
   12838:	add	r3, r3, #9961472	; 0x980000
   1283c:	ldr	r2, [pc, #48]	; 12874 <putchar_unlocked@plt+0x184c>
   12840:	add	r3, r3, #2528	; 0x9e0
   12844:	str	r3, [r0, #20]
   12848:	ldr	r3, [pc, #40]	; 12878 <putchar_unlocked@plt+0x1850>
   1284c:	strd	r2, [r0, #24]
   12850:	mov	r3, #0
   12854:	str	r3, [r0, #32]
   12858:	str	r3, [r0, #36]	; 0x24
   1285c:	str	r3, [r0, #40]	; 0x28
   12860:	bx	lr
   12864:	ldrdgt	r9, [r5, -r8]
   12868:	ldrbtcc	sp, [ip], -r7, lsl #10
   1286c:			; <UNDEFINED> instruction: 0xf70e5939
   12870:			; <UNDEFINED> instruction: 0xffc00b31
   12874:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   12878:	cdplt	15, 15, cr4, cr10, cr4, {5}
   1287c:	mov	r3, #0
   12880:	ldr	r2, [r0, r3]
   12884:	rev	r2, r2
   12888:	str	r2, [r1, r3]
   1288c:	add	r3, r3, #4
   12890:	cmp	r3, #32
   12894:	bne	12880 <putchar_unlocked@plt+0x1858>
   12898:	mov	r0, r1
   1289c:	bx	lr
   128a0:	mov	r3, #0
   128a4:	ldr	r2, [r0, r3]
   128a8:	rev	r2, r2
   128ac:	str	r2, [r1, r3]
   128b0:	add	r3, r3, #4
   128b4:	cmp	r3, #28
   128b8:	bne	128a4 <putchar_unlocked@plt+0x187c>
   128bc:	mov	r0, r1
   128c0:	bx	lr
   128c4:	bic	r3, r1, #3
   128c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128cc:	sub	sp, sp, #148	; 0x94
   128d0:	add	r3, r0, r3
   128d4:	str	r2, [sp, #4]
   128d8:	str	r3, [sp, #76]	; 0x4c
   128dc:	ldr	r7, [r2]
   128e0:	ldmib	r2, {r6, fp, lr}
   128e4:	ldr	sl, [r2, #16]
   128e8:	ldr	r3, [r2, #20]
   128ec:	ldr	r9, [r2, #24]
   128f0:	ldr	r5, [r2, #28]
   128f4:	ldr	r2, [r2, #32]
   128f8:	adds	r2, r2, r1
   128fc:	ldr	r1, [sp, #4]
   12900:	str	r2, [r1, #32]
   12904:	movcs	r1, #1
   12908:	movcc	r1, #0
   1290c:	ldr	r2, [sp, #4]
   12910:	ldr	r2, [r2, #36]	; 0x24
   12914:	add	r2, r2, r1
   12918:	ldr	r1, [sp, #4]
   1291c:	str	r2, [r1, #36]	; 0x24
   12920:	add	r2, r0, #60	; 0x3c
   12924:	str	r2, [sp, #72]	; 0x48
   12928:	ldr	r2, [sp, #72]	; 0x48
   1292c:	ldr	r1, [sp, #76]	; 0x4c
   12930:	sub	r2, r2, #60	; 0x3c
   12934:	cmp	r1, r2
   12938:	bhi	12944 <putchar_unlocked@plt+0x191c>
   1293c:	add	sp, sp, #148	; 0x94
   12940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12944:	ldr	r2, [sp, #72]	; 0x48
   12948:	add	r0, sp, #80	; 0x50
   1294c:	sub	r2, r2, #64	; 0x40
   12950:	ldr	r1, [r2, #4]!
   12954:	rev	r1, r1
   12958:	str	r1, [r0], #4
   1295c:	ldr	r1, [sp, #72]	; 0x48
   12960:	cmp	r2, r1
   12964:	bne	12950 <putchar_unlocked@plt+0x1928>
   12968:	ldr	r2, [sp, #80]	; 0x50
   1296c:	ror	r1, sl, #11
   12970:	eor	r1, r1, sl, ror #6
   12974:	ldr	r8, [sp, #84]	; 0x54
   12978:	eor	r1, r1, sl, ror #25
   1297c:	add	r2, r2, #1107296256	; 0x42000000
   12980:	add	r2, r2, #9043968	; 0x8a0000
   12984:	add	r2, r2, #12160	; 0x2f80
   12988:	add	r2, r2, #24
   1298c:	add	r5, r2, r5
   12990:	orr	r2, r7, r6
   12994:	add	r0, r1, r5
   12998:	and	r2, r2, fp
   1299c:	and	r1, r7, r6
   129a0:	eor	r5, r3, r9
   129a4:	orr	r2, r2, r1
   129a8:	ldr	r1, [pc, #4088]	; 139a8 <putchar_unlocked@plt+0x2980>
   129ac:	and	r5, r5, sl
   129b0:	eor	ip, r5, r9
   129b4:	add	r5, r0, ip
   129b8:	eor	ip, sl, r3
   129bc:	ror	r0, r7, #13
   129c0:	add	lr, lr, r5
   129c4:	and	ip, ip, lr
   129c8:	eor	r0, r0, r7, ror #2
   129cc:	add	r1, r8, r1
   129d0:	eor	ip, ip, r3
   129d4:	add	r9, r1, r9
   129d8:	eor	r0, r0, r7, ror #22
   129dc:	add	ip, ip, r9
   129e0:	ror	r9, lr, #11
   129e4:	add	r0, r0, r2
   129e8:	eor	r9, r9, lr, ror #6
   129ec:	add	r0, r0, r5
   129f0:	eor	r5, sl, lr
   129f4:	orr	r2, r7, r0
   129f8:	eor	r4, r9, lr, ror #25
   129fc:	and	r2, r2, r6
   12a00:	add	r9, ip, r4
   12a04:	ror	r4, r0, #13
   12a08:	and	ip, r7, r0
   12a0c:	orr	r2, r2, ip
   12a10:	ldr	ip, [sp, #88]	; 0x58
   12a14:	add	r1, fp, r9
   12a18:	eor	r4, r4, r0, ror #2
   12a1c:	and	r5, r5, r1
   12a20:	eor	r5, r5, sl
   12a24:	eor	r4, r4, r0, ror #22
   12a28:	add	r2, r4, r2
   12a2c:	ldr	r4, [pc, #3960]	; 139ac <putchar_unlocked@plt+0x2984>
   12a30:	add	r2, r2, r9
   12a34:	add	r4, ip, r4
   12a38:	ror	ip, r1, #11
   12a3c:	add	r4, r4, r3
   12a40:	orr	r3, r0, r2
   12a44:	eor	ip, ip, r1, ror #6
   12a48:	add	r4, r5, r4
   12a4c:	and	r3, r3, r7
   12a50:	and	r5, r0, r2
   12a54:	eor	ip, ip, r1, ror #25
   12a58:	orr	r3, r3, r5
   12a5c:	add	r4, r4, ip
   12a60:	ror	ip, r2, #13
   12a64:	add	r6, r6, r4
   12a68:	eor	ip, ip, r2, ror #2
   12a6c:	eor	ip, ip, r2, ror #22
   12a70:	add	ip, ip, r3
   12a74:	ldr	r3, [sp, #92]	; 0x5c
   12a78:	add	ip, ip, r4
   12a7c:	eor	r4, lr, r1
   12a80:	and	r4, r4, r6
   12a84:	ror	r5, ip, #13
   12a88:	eor	r4, r4, lr
   12a8c:	eor	r5, r5, ip, ror #2
   12a90:	add	r3, r3, #-385875968	; 0xe9000000
   12a94:	add	r3, r3, #11862016	; 0xb50000
   12a98:	eor	r5, r5, ip, ror #22
   12a9c:	add	r3, r3, #56064	; 0xdb00
   12aa0:	add	r3, r3, #165	; 0xa5
   12aa4:	add	sl, r3, sl
   12aa8:	orr	r3, r2, ip
   12aac:	add	r4, r4, sl
   12ab0:	ror	sl, r6, #11
   12ab4:	and	r3, r3, r0
   12ab8:	eor	sl, sl, r6, ror #6
   12abc:	eor	r9, sl, r6, ror #25
   12ac0:	add	sl, r4, r9
   12ac4:	and	r4, r2, ip
   12ac8:	orr	r3, r3, r4
   12acc:	ldr	r4, [pc, #3804]	; 139b0 <putchar_unlocked@plt+0x2988>
   12ad0:	add	r7, r7, sl
   12ad4:	add	r5, r5, r3
   12ad8:	eor	r9, r1, r6
   12adc:	ldr	r3, [sp, #96]	; 0x60
   12ae0:	and	r9, r9, r7
   12ae4:	add	r5, r5, sl
   12ae8:	eor	r9, r9, r1
   12aec:	add	r4, r3, r4
   12af0:	ror	r3, r7, #11
   12af4:	add	lr, r4, lr
   12af8:	orr	r4, ip, r5
   12afc:	eor	r3, r3, r7, ror #6
   12b00:	add	lr, r9, lr
   12b04:	and	r4, r4, r2
   12b08:	and	r9, ip, r5
   12b0c:	eor	sl, r3, r7, ror #25
   12b10:	orr	r4, r4, r9
   12b14:	eor	r9, r6, r7
   12b18:	add	r3, lr, sl
   12b1c:	ror	lr, r5, #13
   12b20:	add	r0, r0, r3
   12b24:	eor	lr, lr, r5, ror #2
   12b28:	and	r9, r9, r0
   12b2c:	eor	r9, r9, r6
   12b30:	eor	lr, lr, r5, ror #22
   12b34:	add	lr, lr, r4
   12b38:	ldr	r4, [pc, #3700]	; 139b4 <putchar_unlocked@plt+0x298c>
   12b3c:	add	lr, lr, r3
   12b40:	ldr	r3, [sp, #100]	; 0x64
   12b44:	add	r4, r3, r4
   12b48:	add	r1, r4, r1
   12b4c:	add	r3, r9, r1
   12b50:	ror	r1, r0, #11
   12b54:	and	r9, r5, lr
   12b58:	eor	r1, r1, r0, ror #6
   12b5c:	eor	sl, r1, r0, ror #25
   12b60:	add	r1, r3, sl
   12b64:	ror	r3, lr, #13
   12b68:	add	r4, r2, r1
   12b6c:	orr	r2, r5, lr
   12b70:	eor	r3, r3, lr, ror #2
   12b74:	and	r2, r2, ip
   12b78:	orr	r2, r2, r9
   12b7c:	ldr	r9, [sp, #104]	; 0x68
   12b80:	eor	r3, r3, lr, ror #22
   12b84:	add	r3, r3, r2
   12b88:	ldr	r2, [pc, #3624]	; 139b8 <putchar_unlocked@plt+0x2990>
   12b8c:	add	r3, r3, r1
   12b90:	eor	r1, r7, r0
   12b94:	and	r1, r1, r4
   12b98:	eor	r1, r1, r7
   12b9c:	add	r2, r9, r2
   12ba0:	add	r6, r2, r6
   12ba4:	orr	r2, lr, r3
   12ba8:	add	fp, r1, r6
   12bac:	ror	r6, r4, #11
   12bb0:	and	r1, lr, r3
   12bb4:	and	r2, r2, r5
   12bb8:	eor	r6, r6, r4, ror #6
   12bbc:	orr	r2, r2, r1
   12bc0:	ldr	r1, [pc, #3572]	; 139bc <putchar_unlocked@plt+0x2994>
   12bc4:	eor	r6, r6, r4, ror #25
   12bc8:	add	r6, fp, r6
   12bcc:	ror	fp, r3, #13
   12bd0:	add	ip, ip, r6
   12bd4:	eor	fp, fp, r3, ror #2
   12bd8:	eor	fp, fp, r3, ror #22
   12bdc:	add	fp, fp, r2
   12be0:	ldr	r2, [sp, #108]	; 0x6c
   12be4:	add	fp, fp, r6
   12be8:	eor	r6, r0, r4
   12bec:	and	r6, r6, ip
   12bf0:	eor	r6, r6, r0
   12bf4:	add	r1, r2, r1
   12bf8:	ror	r2, ip, #11
   12bfc:	add	r7, r1, r7
   12c00:	orr	r1, r3, fp
   12c04:	eor	r2, r2, ip, ror #6
   12c08:	add	r7, r6, r7
   12c0c:	and	r1, r1, lr
   12c10:	and	r6, r3, fp
   12c14:	eor	r9, r2, ip, ror #25
   12c18:	orr	r1, r1, r6
   12c1c:	add	r2, r7, r9
   12c20:	ror	r7, fp, #13
   12c24:	add	r5, r5, r2
   12c28:	eor	r7, r7, fp, ror #2
   12c2c:	eor	r7, r7, fp, ror #22
   12c30:	add	r7, r7, r1
   12c34:	eor	r1, r4, ip
   12c38:	add	r7, r7, r2
   12c3c:	ldr	r2, [sp, #112]	; 0x70
   12c40:	and	r1, r1, r5
   12c44:	eor	r1, r1, r4
   12c48:	add	r2, r2, #-671088640	; 0xd8000000
   12c4c:	add	r2, r2, #499712	; 0x7a000
   12c50:	add	r2, r2, #2704	; 0xa90
   12c54:	add	r2, r2, #8
   12c58:	add	r0, r2, r0
   12c5c:	orr	r2, fp, r7
   12c60:	add	r6, r1, r0
   12c64:	ror	r0, r5, #11
   12c68:	and	r1, fp, r7
   12c6c:	and	r2, r2, r3
   12c70:	eor	r0, r0, r5, ror #6
   12c74:	orr	r2, r2, r1
   12c78:	eor	r1, ip, r5
   12c7c:	eor	r9, r0, r5, ror #25
   12c80:	add	r0, r6, r9
   12c84:	ror	r6, r7, #13
   12c88:	add	lr, lr, r0
   12c8c:	eor	r6, r6, r7, ror #2
   12c90:	and	r1, r1, lr
   12c94:	eor	r1, r1, ip
   12c98:	eor	r6, r6, r7, ror #22
   12c9c:	add	r6, r6, r2
   12ca0:	ldr	r2, [sp, #116]	; 0x74
   12ca4:	add	r6, r6, r0
   12ca8:	add	r2, r2, #310378496	; 0x12800000
   12cac:	add	r2, r2, #219136	; 0x35800
   12cb0:	add	r2, r2, #768	; 0x300
   12cb4:	add	r2, r2, #1
   12cb8:	add	r2, r2, r4
   12cbc:	add	sl, r1, r2
   12cc0:	ror	r2, lr, #11
   12cc4:	orr	r1, r7, r6
   12cc8:	and	r1, r1, fp
   12ccc:	eor	r2, r2, lr, ror #6
   12cd0:	eor	r0, r2, lr, ror #25
   12cd4:	add	r2, sl, r0
   12cd8:	ror	sl, r6, #13
   12cdc:	and	r0, r7, r6
   12ce0:	orr	r1, r1, r0
   12ce4:	add	r3, r3, r2
   12ce8:	eor	sl, sl, r6, ror #2
   12cec:	eor	sl, sl, r6, ror #22
   12cf0:	add	sl, sl, r1
   12cf4:	eor	r1, r5, lr
   12cf8:	add	sl, sl, r2
   12cfc:	ldr	r2, [sp, #120]	; 0x78
   12d00:	and	r1, r1, r3
   12d04:	eor	r1, r1, r5
   12d08:	add	r2, r2, #603979776	; 0x24000000
   12d0c:	add	r2, r2, #3244032	; 0x318000
   12d10:	add	r2, r2, #1456	; 0x5b0
   12d14:	add	r2, r2, #14
   12d18:	add	r2, r2, ip
   12d1c:	ldr	ip, [sp, #128]	; 0x80
   12d20:	add	r9, r1, r2
   12d24:	ror	r2, r3, #11
   12d28:	orr	r1, r6, sl
   12d2c:	and	r1, r1, r7
   12d30:	eor	r2, r2, r3, ror #6
   12d34:	eor	r0, r2, r3, ror #25
   12d38:	add	r2, r9, r0
   12d3c:	ror	r9, sl, #13
   12d40:	and	r0, r6, sl
   12d44:	orr	r1, r1, r0
   12d48:	add	fp, fp, r2
   12d4c:	eor	r9, r9, sl, ror #2
   12d50:	eor	r0, lr, r3
   12d54:	and	r0, r0, fp
   12d58:	eor	r9, r9, sl, ror #22
   12d5c:	eor	r0, r0, lr
   12d60:	add	r9, r9, r1
   12d64:	ldr	r1, [pc, #3156]	; 139c0 <putchar_unlocked@plt+0x2998>
   12d68:	add	r9, r9, r2
   12d6c:	ldr	r2, [sp, #124]	; 0x7c
   12d70:	add	r1, r2, r1
   12d74:	add	r5, r1, r5
   12d78:	orr	r1, sl, r9
   12d7c:	add	r2, r0, r5
   12d80:	ror	r5, fp, #11
   12d84:	and	r0, sl, r9
   12d88:	and	r1, r1, r6
   12d8c:	eor	r5, r5, fp, ror #6
   12d90:	orr	r1, r1, r0
   12d94:	eor	r0, r3, fp
   12d98:	eor	r5, r5, fp, ror #25
   12d9c:	add	r5, r2, r5
   12da0:	ror	r2, r9, #13
   12da4:	add	r7, r7, r5
   12da8:	eor	r2, r2, r9, ror #2
   12dac:	and	r0, r0, r7
   12db0:	eor	r0, r0, r3
   12db4:	eor	r2, r2, r9, ror #22
   12db8:	add	r2, r2, r1
   12dbc:	ldr	r1, [pc, #3072]	; 139c4 <putchar_unlocked@plt+0x299c>
   12dc0:	add	r2, r2, r5
   12dc4:	add	r1, ip, r1
   12dc8:	ldr	ip, [sp, #132]	; 0x84
   12dcc:	add	lr, r1, lr
   12dd0:	orr	r1, r9, r2
   12dd4:	add	r5, r0, lr
   12dd8:	ror	lr, r7, #11
   12ddc:	and	r0, r9, r2
   12de0:	and	r1, r1, sl
   12de4:	eor	lr, lr, r7, ror #6
   12de8:	orr	r1, r1, r0
   12dec:	eor	r0, fp, r7
   12df0:	eor	lr, lr, r7, ror #25
   12df4:	add	lr, r5, lr
   12df8:	ror	r5, r2, #13
   12dfc:	add	r6, r6, lr
   12e00:	eor	r5, r5, r2, ror #2
   12e04:	and	r0, r0, r6
   12e08:	eor	r0, r0, fp
   12e0c:	eor	r5, r5, r2, ror #22
   12e10:	add	r5, r5, r1
   12e14:	ldr	r1, [pc, #2988]	; 139c8 <putchar_unlocked@plt+0x29a0>
   12e18:	add	r5, r5, lr
   12e1c:	add	r1, ip, r1
   12e20:	add	r3, r1, r3
   12e24:	orr	r1, r2, r5
   12e28:	add	lr, r0, r3
   12e2c:	ror	r3, r6, #11
   12e30:	and	r0, r2, r5
   12e34:	and	r1, r1, r9
   12e38:	eor	r3, r3, r6, ror #6
   12e3c:	orr	r1, r1, r0
   12e40:	ldr	r0, [pc, #2948]	; 139cc <putchar_unlocked@plt+0x29a4>
   12e44:	eor	r3, r3, r6, ror #25
   12e48:	add	r3, lr, r3
   12e4c:	ror	lr, r5, #13
   12e50:	add	sl, sl, r3
   12e54:	eor	lr, lr, r5, ror #2
   12e58:	eor	lr, lr, r5, ror #22
   12e5c:	add	lr, lr, r1
   12e60:	eor	r1, r7, r6
   12e64:	add	lr, lr, r3
   12e68:	ldr	r3, [sp, #136]	; 0x88
   12e6c:	and	r1, r1, sl
   12e70:	eor	r1, r1, r7
   12e74:	and	ip, r5, lr
   12e78:	add	r0, r3, r0
   12e7c:	ror	r3, sl, #11
   12e80:	add	r0, r0, fp
   12e84:	eor	r3, r3, sl, ror #6
   12e88:	add	r0, r1, r0
   12e8c:	orr	r1, r5, lr
   12e90:	and	r1, r1, r2
   12e94:	eor	r3, r3, sl, ror #25
   12e98:	orr	r1, r1, ip
   12e9c:	ldr	ip, [sp, #140]	; 0x8c
   12ea0:	add	r0, r0, r3
   12ea4:	ror	r3, lr, #13
   12ea8:	add	r9, r9, r0
   12eac:	eor	r3, r3, lr, ror #2
   12eb0:	ror	r4, r9, #11
   12eb4:	eor	r3, r3, lr, ror #22
   12eb8:	eor	r4, r4, r9, ror #6
   12ebc:	add	r3, r3, r1
   12ec0:	ldr	r1, [pc, #2824]	; 139d0 <putchar_unlocked@plt+0x29a8>
   12ec4:	add	r3, r3, r0
   12ec8:	eor	r0, r6, sl
   12ecc:	eor	r4, r4, r9, ror #25
   12ed0:	and	r0, r0, r9
   12ed4:	eor	r0, r0, r6
   12ed8:	add	r1, ip, r1
   12edc:	and	ip, lr, r3
   12ee0:	add	r1, r1, r7
   12ee4:	add	r1, r0, r1
   12ee8:	orr	r0, lr, r3
   12eec:	add	r1, r1, r4
   12ef0:	ror	r4, r3, #13
   12ef4:	and	r0, r0, r5
   12ef8:	orr	r0, r0, ip
   12efc:	add	r2, r2, r1
   12f00:	eor	r4, r4, r3, ror #2
   12f04:	ror	ip, r2, #11
   12f08:	eor	r4, r4, r3, ror #22
   12f0c:	eor	ip, ip, r2, ror #6
   12f10:	add	r4, r4, r0
   12f14:	ldr	r0, [sp, #116]	; 0x74
   12f18:	add	r4, r4, r1
   12f1c:	eor	ip, ip, r2, ror #25
   12f20:	ldr	r1, [sp, #136]	; 0x88
   12f24:	ror	r7, r1, #19
   12f28:	eor	r7, r7, r1, ror #17
   12f2c:	eor	r7, r7, r1, lsr #10
   12f30:	ldr	r1, [sp, #80]	; 0x50
   12f34:	add	r1, r1, r0
   12f38:	eor	r0, sl, r9
   12f3c:	add	r7, r7, r1
   12f40:	ror	r1, r8, #18
   12f44:	and	r0, r0, r2
   12f48:	eor	r0, r0, sl
   12f4c:	eor	r1, r1, r8, ror #7
   12f50:	eor	r1, r1, r8, lsr #3
   12f54:	add	r7, r7, r1
   12f58:	ldr	r1, [pc, #2676]	; 139d4 <putchar_unlocked@plt+0x29ac>
   12f5c:	ror	fp, r7, #19
   12f60:	eor	fp, fp, r7, ror #17
   12f64:	add	r1, r7, r1
   12f68:	add	r1, r1, r6
   12f6c:	and	r6, r3, r4
   12f70:	add	r1, r0, r1
   12f74:	orr	r0, r3, r4
   12f78:	add	r1, r1, ip
   12f7c:	ror	ip, r4, #13
   12f80:	and	r0, r0, lr
   12f84:	orr	r0, r0, r6
   12f88:	add	r5, r5, r1
   12f8c:	eor	ip, ip, r4, ror #2
   12f90:	eor	ip, ip, r4, ror #22
   12f94:	add	ip, ip, r0
   12f98:	ldr	r0, [sp, #88]	; 0x58
   12f9c:	add	ip, ip, r1
   12fa0:	ldr	r1, [sp, #140]	; 0x8c
   12fa4:	ror	r6, r1, #19
   12fa8:	eor	r6, r6, r1, ror #17
   12fac:	eor	r6, r6, r1, lsr #10
   12fb0:	ldr	r1, [sp, #120]	; 0x78
   12fb4:	add	r1, r8, r1
   12fb8:	eor	r8, r9, r2
   12fbc:	add	r6, r6, r1
   12fc0:	ldr	r1, [sp, #88]	; 0x58
   12fc4:	and	r8, r8, r5
   12fc8:	eor	r8, r8, r9
   12fcc:	ror	r1, r1, #18
   12fd0:	eor	r1, r1, r0, ror #7
   12fd4:	eor	r1, r1, r0, lsr #3
   12fd8:	ror	r0, r5, #11
   12fdc:	add	r6, r6, r1
   12fe0:	ldr	r1, [pc, #2544]	; 139d8 <putchar_unlocked@plt+0x29b0>
   12fe4:	eor	r0, r0, r5, ror #6
   12fe8:	eor	r0, r0, r5, ror #25
   12fec:	add	r1, r6, r1
   12ff0:	add	r1, r1, sl
   12ff4:	and	sl, r4, ip
   12ff8:	add	r1, r8, r1
   12ffc:	orr	r8, r4, ip
   13000:	add	r1, r1, r0
   13004:	ror	r0, ip, #13
   13008:	and	r8, r8, r3
   1300c:	orr	r8, r8, sl
   13010:	add	lr, lr, r1
   13014:	ldr	sl, [sp, #92]	; 0x5c
   13018:	eor	r0, r0, ip, ror #2
   1301c:	eor	r0, r0, ip, ror #22
   13020:	add	r0, r0, r8
   13024:	eor	r8, fp, r7, lsr #10
   13028:	ldr	fp, [sp, #124]	; 0x7c
   1302c:	add	r0, r0, r1
   13030:	ldr	r1, [sp, #92]	; 0x5c
   13034:	ror	r1, r1, #18
   13038:	eor	r1, r1, sl, ror #7
   1303c:	eor	r1, r1, sl, lsr #3
   13040:	ldr	sl, [sp, #88]	; 0x58
   13044:	add	fp, sl, fp
   13048:	eor	sl, r2, r5
   1304c:	add	fp, r1, fp
   13050:	ror	r1, lr, #11
   13054:	and	sl, sl, lr
   13058:	add	fp, fp, r8
   1305c:	ldr	r8, [pc, #2424]	; 139dc <putchar_unlocked@plt+0x29b4>
   13060:	eor	sl, sl, r2
   13064:	eor	r1, r1, lr, ror #6
   13068:	eor	r1, r1, lr, ror #25
   1306c:	add	r8, fp, r8
   13070:	add	r8, r8, r9
   13074:	orr	r9, ip, r0
   13078:	add	r8, sl, r8
   1307c:	and	r9, r9, r4
   13080:	add	r8, r8, r1
   13084:	ror	r1, r0, #13
   13088:	and	sl, ip, r0
   1308c:	orr	r9, r9, sl
   13090:	add	r3, r3, r8
   13094:	ror	sl, r6, #19
   13098:	eor	r1, r1, r0, ror #2
   1309c:	eor	sl, sl, r6, ror #17
   130a0:	eor	r1, r1, r0, ror #22
   130a4:	eor	sl, sl, r6, lsr #10
   130a8:	add	r1, r1, r9
   130ac:	ldr	r9, [sp, #96]	; 0x60
   130b0:	add	r1, r1, r8
   130b4:	ldr	r8, [sp, #96]	; 0x60
   130b8:	ror	r8, r8, #18
   130bc:	eor	r8, r8, r9, ror #7
   130c0:	eor	r8, r8, r9, lsr #3
   130c4:	ldr	r9, [sp, #92]	; 0x5c
   130c8:	str	r8, [sp, #8]
   130cc:	ldr	r8, [sp, #128]	; 0x80
   130d0:	add	r9, r9, r8
   130d4:	ldr	r8, [sp, #8]
   130d8:	add	r8, r8, r9
   130dc:	ldr	r9, [pc, #2300]	; 139e0 <putchar_unlocked@plt+0x29b8>
   130e0:	add	r8, r8, sl
   130e4:	eor	sl, r5, lr
   130e8:	and	sl, sl, r3
   130ec:	str	r8, [sp, #8]
   130f0:	eor	sl, sl, r5
   130f4:	add	r9, r8, r9
   130f8:	ror	r8, r3, #11
   130fc:	add	r2, r9, r2
   13100:	orr	r9, r0, r1
   13104:	eor	r8, r8, r3, ror #6
   13108:	add	r2, sl, r2
   1310c:	and	r9, r9, ip
   13110:	and	sl, r0, r1
   13114:	eor	r8, r8, r3, ror #25
   13118:	orr	r9, r9, sl
   1311c:	ror	sl, fp, #19
   13120:	add	r8, r2, r8
   13124:	ror	r2, r1, #13
   13128:	add	r4, r4, r8
   1312c:	eor	sl, sl, fp, ror #17
   13130:	eor	r2, r2, r1, ror #2
   13134:	eor	sl, sl, fp, lsr #10
   13138:	eor	r2, r2, r1, ror #22
   1313c:	add	r2, r2, r9
   13140:	ldr	r9, [sp, #100]	; 0x64
   13144:	add	r2, r2, r8
   13148:	ldr	r8, [sp, #100]	; 0x64
   1314c:	ror	r8, r8, #18
   13150:	eor	r8, r8, r9, ror #7
   13154:	eor	r8, r8, r9, lsr #3
   13158:	ldr	r9, [sp, #96]	; 0x60
   1315c:	str	r8, [sp, #12]
   13160:	ldr	r8, [sp, #132]	; 0x84
   13164:	add	r9, r9, r8
   13168:	ldr	r8, [sp, #12]
   1316c:	add	r8, r8, r9
   13170:	ldr	r9, [pc, #2156]	; 139e4 <putchar_unlocked@plt+0x29bc>
   13174:	add	r8, r8, sl
   13178:	eor	sl, lr, r3
   1317c:	and	sl, sl, r4
   13180:	str	r8, [sp, #12]
   13184:	eor	sl, sl, lr
   13188:	add	r9, r8, r9
   1318c:	ror	r8, r4, #11
   13190:	add	r5, r9, r5
   13194:	orr	r9, r1, r2
   13198:	eor	r8, r8, r4, ror #6
   1319c:	add	r5, sl, r5
   131a0:	and	r9, r9, r0
   131a4:	and	sl, r1, r2
   131a8:	eor	r8, r8, r4, ror #25
   131ac:	orr	r9, r9, sl
   131b0:	add	r8, r5, r8
   131b4:	ror	r5, r2, #13
   131b8:	add	ip, ip, r8
   131bc:	eor	r5, r5, r2, ror #2
   131c0:	eor	r5, r5, r2, ror #22
   131c4:	add	r5, r5, r9
   131c8:	ldr	r9, [sp, #104]	; 0x68
   131cc:	add	r5, r5, r8
   131d0:	ldr	r8, [sp, #8]
   131d4:	ror	sl, r8, #19
   131d8:	eor	sl, sl, r8, ror #17
   131dc:	eor	sl, sl, r8, lsr #10
   131e0:	ldr	r8, [sp, #104]	; 0x68
   131e4:	ror	r8, r8, #18
   131e8:	eor	r8, r8, r9, ror #7
   131ec:	eor	r8, r8, r9, lsr #3
   131f0:	ldr	r9, [sp, #100]	; 0x64
   131f4:	str	r8, [sp, #16]
   131f8:	ldr	r8, [sp, #136]	; 0x88
   131fc:	add	r9, r9, r8
   13200:	ldr	r8, [sp, #16]
   13204:	add	r8, r8, r9
   13208:	ldr	r9, [pc, #2008]	; 139e8 <putchar_unlocked@plt+0x29c0>
   1320c:	add	r8, r8, sl
   13210:	eor	sl, r3, r4
   13214:	and	sl, sl, ip
   13218:	str	r8, [sp, #16]
   1321c:	eor	sl, sl, r3
   13220:	add	r9, r8, r9
   13224:	ror	r8, ip, #11
   13228:	add	lr, r9, lr
   1322c:	orr	r9, r2, r5
   13230:	eor	r8, r8, ip, ror #6
   13234:	add	lr, sl, lr
   13238:	and	r9, r9, r1
   1323c:	and	sl, r2, r5
   13240:	eor	r8, r8, ip, ror #25
   13244:	orr	r9, r9, sl
   13248:	add	r8, lr, r8
   1324c:	ror	lr, r5, #13
   13250:	add	r0, r0, r8
   13254:	eor	lr, lr, r5, ror #2
   13258:	eor	lr, lr, r5, ror #22
   1325c:	add	lr, lr, r9
   13260:	ldr	r9, [sp, #108]	; 0x6c
   13264:	add	lr, lr, r8
   13268:	ldr	r8, [sp, #12]
   1326c:	ror	sl, r8, #19
   13270:	eor	sl, sl, r8, ror #17
   13274:	eor	sl, sl, r8, lsr #10
   13278:	ldr	r8, [sp, #108]	; 0x6c
   1327c:	ror	r8, r8, #18
   13280:	eor	r8, r8, r9, ror #7
   13284:	eor	r8, r8, r9, lsr #3
   13288:	ldr	r9, [sp, #104]	; 0x68
   1328c:	str	r8, [sp, #20]
   13290:	ldr	r8, [sp, #140]	; 0x8c
   13294:	add	r9, r9, r8
   13298:	ldr	r8, [sp, #20]
   1329c:	add	r8, r8, r9
   132a0:	ldr	r9, [pc, #1860]	; 139ec <putchar_unlocked@plt+0x29c4>
   132a4:	add	r8, r8, sl
   132a8:	eor	sl, r4, ip
   132ac:	and	sl, sl, r0
   132b0:	str	r8, [sp, #20]
   132b4:	eor	sl, sl, r4
   132b8:	add	r9, r8, r9
   132bc:	ror	r8, r0, #11
   132c0:	add	r3, r9, r3
   132c4:	orr	r9, r5, lr
   132c8:	eor	r8, r8, r0, ror #6
   132cc:	add	r3, sl, r3
   132d0:	and	r9, r9, r2
   132d4:	and	sl, r5, lr
   132d8:	eor	r8, r8, r0, ror #25
   132dc:	orr	r9, r9, sl
   132e0:	ldr	sl, [sp, #112]	; 0x70
   132e4:	add	r8, r3, r8
   132e8:	ror	r3, lr, #13
   132ec:	add	r1, r1, r8
   132f0:	eor	r3, r3, lr, ror #2
   132f4:	eor	r3, r3, lr, ror #22
   132f8:	add	r3, r3, r9
   132fc:	add	r3, r3, r8
   13300:	ldr	r8, [sp, #16]
   13304:	ror	r9, r8, #19
   13308:	eor	r9, r9, r8, ror #17
   1330c:	eor	r9, r9, r8, lsr #10
   13310:	ldr	r8, [sp, #112]	; 0x70
   13314:	ror	r8, r8, #18
   13318:	eor	r8, r8, sl, ror #7
   1331c:	eor	r8, r8, sl, lsr #3
   13320:	ldr	sl, [sp, #108]	; 0x6c
   13324:	add	r8, r8, sl
   13328:	eor	sl, ip, r0
   1332c:	add	r8, r8, r7
   13330:	and	sl, sl, r1
   13334:	add	r8, r9, r8
   13338:	ldr	r9, [pc, #1712]	; 139f0 <putchar_unlocked@plt+0x29c8>
   1333c:	eor	sl, sl, ip
   13340:	str	r8, [sp, #24]
   13344:	add	r9, r8, r9
   13348:	ror	r8, r1, #11
   1334c:	add	r4, r9, r4
   13350:	orr	r9, lr, r3
   13354:	eor	r8, r8, r1, ror #6
   13358:	add	r4, sl, r4
   1335c:	and	r9, r9, r5
   13360:	and	sl, lr, r3
   13364:	eor	r8, r8, r1, ror #25
   13368:	orr	r9, r9, sl
   1336c:	add	r8, r4, r8
   13370:	ror	r4, r3, #13
   13374:	add	r2, r2, r8
   13378:	eor	r4, r4, r3, ror #2
   1337c:	eor	r4, r4, r3, ror #22
   13380:	add	r4, r4, r9
   13384:	add	r4, r4, r8
   13388:	ldr	r8, [sp, #20]
   1338c:	ror	r9, r8, #19
   13390:	eor	r9, r9, r8, ror #17
   13394:	eor	r9, r9, r8, lsr #10
   13398:	ldr	r8, [sp, #116]	; 0x74
   1339c:	ldr	sl, [sp, #116]	; 0x74
   133a0:	ror	r8, r8, #18
   133a4:	eor	r8, r8, sl, ror #7
   133a8:	eor	r8, r8, sl, lsr #3
   133ac:	ldr	sl, [sp, #112]	; 0x70
   133b0:	add	r8, r8, sl
   133b4:	eor	sl, r0, r1
   133b8:	add	r8, r8, r6
   133bc:	and	sl, sl, r2
   133c0:	add	r8, r9, r8
   133c4:	ldr	r9, [pc, #1576]	; 139f4 <putchar_unlocked@plt+0x29cc>
   133c8:	eor	sl, sl, r0
   133cc:	str	r8, [sp, #28]
   133d0:	add	r9, r8, r9
   133d4:	ror	r8, r2, #11
   133d8:	add	ip, r9, ip
   133dc:	orr	r9, r3, r4
   133e0:	eor	r8, r8, r2, ror #6
   133e4:	add	ip, sl, ip
   133e8:	and	r9, r9, lr
   133ec:	and	sl, r3, r4
   133f0:	eor	r8, r8, r2, ror #25
   133f4:	orr	r9, r9, sl
   133f8:	ldr	sl, [sp, #120]	; 0x78
   133fc:	add	r8, ip, r8
   13400:	ror	ip, r4, #13
   13404:	add	r5, r5, r8
   13408:	eor	ip, ip, r4, ror #2
   1340c:	eor	ip, ip, r4, ror #22
   13410:	add	ip, ip, r9
   13414:	add	ip, ip, r8
   13418:	ldr	r8, [sp, #24]
   1341c:	ror	r9, r8, #19
   13420:	eor	r9, r9, r8, ror #17
   13424:	eor	r9, r9, r8, lsr #10
   13428:	ldr	r8, [sp, #120]	; 0x78
   1342c:	ror	r8, r8, #18
   13430:	eor	r8, r8, sl, ror #7
   13434:	eor	r8, r8, sl, lsr #3
   13438:	ldr	sl, [sp, #116]	; 0x74
   1343c:	add	r8, r8, sl
   13440:	eor	sl, r1, r2
   13444:	add	r8, r8, fp
   13448:	and	sl, sl, r5
   1344c:	add	r8, r9, r8
   13450:	ldr	r9, [pc, #1440]	; 139f8 <putchar_unlocked@plt+0x29d0>
   13454:	eor	sl, sl, r1
   13458:	str	r8, [sp, #32]
   1345c:	add	r9, r8, r9
   13460:	ror	r8, r5, #11
   13464:	add	r0, r9, r0
   13468:	orr	r9, r4, ip
   1346c:	eor	r8, r8, r5, ror #6
   13470:	add	r0, sl, r0
   13474:	and	r9, r9, r3
   13478:	and	sl, r4, ip
   1347c:	eor	r8, r8, r5, ror #25
   13480:	orr	r9, r9, sl
   13484:	ldr	sl, [sp, #124]	; 0x7c
   13488:	add	r8, r0, r8
   1348c:	ror	r0, ip, #13
   13490:	add	lr, lr, r8
   13494:	eor	r0, r0, ip, ror #2
   13498:	eor	r0, r0, ip, ror #22
   1349c:	add	r0, r0, r9
   134a0:	add	r0, r0, r8
   134a4:	ldr	r8, [sp, #28]
   134a8:	ror	r9, r8, #19
   134ac:	eor	r9, r9, r8, ror #17
   134b0:	eor	r9, r9, r8, lsr #10
   134b4:	ldr	r8, [sp, #124]	; 0x7c
   134b8:	ror	r8, r8, #18
   134bc:	eor	r8, r8, sl, ror #7
   134c0:	eor	r8, r8, sl, lsr #3
   134c4:	ldr	sl, [sp, #120]	; 0x78
   134c8:	add	r8, r8, sl
   134cc:	ldr	sl, [sp, #8]
   134d0:	add	r8, r8, sl
   134d4:	eor	sl, r2, r5
   134d8:	add	r8, r9, r8
   134dc:	ldr	r9, [pc, #1304]	; 139fc <putchar_unlocked@plt+0x29d4>
   134e0:	and	sl, sl, lr
   134e4:	eor	sl, sl, r2
   134e8:	str	r8, [sp, #36]	; 0x24
   134ec:	add	r9, r8, r9
   134f0:	ror	r8, lr, #11
   134f4:	add	r1, r9, r1
   134f8:	orr	r9, ip, r0
   134fc:	eor	r8, r8, lr, ror #6
   13500:	add	r1, sl, r1
   13504:	and	r9, r9, r4
   13508:	and	sl, ip, r0
   1350c:	eor	r8, r8, lr, ror #25
   13510:	orr	r9, r9, sl
   13514:	ldr	sl, [sp, #128]	; 0x80
   13518:	add	r8, r1, r8
   1351c:	ror	r1, r0, #13
   13520:	add	r3, r3, r8
   13524:	eor	r1, r1, r0, ror #2
   13528:	eor	r1, r1, r0, ror #22
   1352c:	add	r1, r1, r9
   13530:	add	r1, r1, r8
   13534:	ldr	r8, [sp, #32]
   13538:	ror	r9, r8, #19
   1353c:	eor	r9, r9, r8, ror #17
   13540:	eor	r9, r9, r8, lsr #10
   13544:	ldr	r8, [sp, #128]	; 0x80
   13548:	ror	r8, r8, #18
   1354c:	eor	r8, r8, sl, ror #7
   13550:	eor	r8, r8, sl, lsr #3
   13554:	ldr	sl, [sp, #124]	; 0x7c
   13558:	add	r8, r8, sl
   1355c:	ldr	sl, [sp, #12]
   13560:	add	r8, r8, sl
   13564:	eor	sl, r5, lr
   13568:	add	r8, r9, r8
   1356c:	ldr	r9, [pc, #1164]	; 13a00 <putchar_unlocked@plt+0x29d8>
   13570:	and	sl, sl, r3
   13574:	eor	sl, sl, r5
   13578:	str	r8, [sp, #40]	; 0x28
   1357c:	add	r9, r8, r9
   13580:	ror	r8, r3, #11
   13584:	add	r2, r9, r2
   13588:	orr	r9, r0, r1
   1358c:	eor	r8, r8, r3, ror #6
   13590:	add	r2, sl, r2
   13594:	and	r9, r9, ip
   13598:	and	sl, r0, r1
   1359c:	eor	r8, r8, r3, ror #25
   135a0:	orr	r9, r9, sl
   135a4:	ldr	sl, [sp, #132]	; 0x84
   135a8:	add	r8, r2, r8
   135ac:	ror	r2, r1, #13
   135b0:	add	r4, r4, r8
   135b4:	eor	r2, r2, r1, ror #2
   135b8:	eor	r2, r2, r1, ror #22
   135bc:	add	r2, r2, r9
   135c0:	add	r2, r2, r8
   135c4:	ldr	r8, [sp, #36]	; 0x24
   135c8:	ror	r9, r8, #19
   135cc:	eor	r9, r9, r8, ror #17
   135d0:	eor	r9, r9, r8, lsr #10
   135d4:	ldr	r8, [sp, #132]	; 0x84
   135d8:	ror	r8, r8, #18
   135dc:	eor	r8, r8, sl, ror #7
   135e0:	eor	r8, r8, sl, lsr #3
   135e4:	ldr	sl, [sp, #128]	; 0x80
   135e8:	add	r8, r8, sl
   135ec:	ldr	sl, [sp, #16]
   135f0:	add	r8, r8, sl
   135f4:	eor	sl, lr, r3
   135f8:	add	r8, r9, r8
   135fc:	ldr	r9, [pc, #1024]	; 13a04 <putchar_unlocked@plt+0x29dc>
   13600:	and	sl, sl, r4
   13604:	eor	sl, sl, lr
   13608:	str	r8, [sp, #44]	; 0x2c
   1360c:	add	r9, r8, r9
   13610:	ror	r8, r4, #11
   13614:	add	r5, r9, r5
   13618:	orr	r9, r1, r2
   1361c:	eor	r8, r8, r4, ror #6
   13620:	add	r5, sl, r5
   13624:	and	r9, r9, r0
   13628:	and	sl, r1, r2
   1362c:	eor	r8, r8, r4, ror #25
   13630:	orr	r9, r9, sl
   13634:	ldr	sl, [sp, #136]	; 0x88
   13638:	add	r8, r5, r8
   1363c:	ror	r5, r2, #13
   13640:	add	ip, ip, r8
   13644:	eor	r5, r5, r2, ror #2
   13648:	eor	r5, r5, r2, ror #22
   1364c:	add	r5, r5, r9
   13650:	add	r5, r5, r8
   13654:	ldr	r8, [sp, #40]	; 0x28
   13658:	ror	r9, r8, #19
   1365c:	eor	r9, r9, r8, ror #17
   13660:	eor	r9, r9, r8, lsr #10
   13664:	ldr	r8, [sp, #136]	; 0x88
   13668:	ror	r8, r8, #18
   1366c:	eor	r8, r8, sl, ror #7
   13670:	eor	r8, r8, sl, lsr #3
   13674:	ldr	sl, [sp, #132]	; 0x84
   13678:	add	r8, r8, sl
   1367c:	ldr	sl, [sp, #20]
   13680:	add	r8, r8, sl
   13684:	eor	sl, r3, r4
   13688:	add	r8, r9, r8
   1368c:	ldr	r9, [pc, #884]	; 13a08 <putchar_unlocked@plt+0x29e0>
   13690:	and	sl, sl, ip
   13694:	eor	sl, sl, r3
   13698:	str	r8, [sp, #48]	; 0x30
   1369c:	add	r9, r8, r9
   136a0:	ror	r8, ip, #11
   136a4:	add	lr, r9, lr
   136a8:	orr	r9, r2, r5
   136ac:	eor	r8, r8, ip, ror #6
   136b0:	add	lr, sl, lr
   136b4:	and	r9, r9, r1
   136b8:	and	sl, r2, r5
   136bc:	eor	r8, r8, ip, ror #25
   136c0:	orr	r9, r9, sl
   136c4:	add	r8, lr, r8
   136c8:	ror	lr, r5, #13
   136cc:	add	r0, r0, r8
   136d0:	eor	lr, lr, r5, ror #2
   136d4:	eor	lr, lr, r5, ror #22
   136d8:	add	lr, lr, r9
   136dc:	add	lr, lr, r8
   136e0:	ldr	r8, [sp, #44]	; 0x2c
   136e4:	ldr	sl, [sp, #140]	; 0x8c
   136e8:	ror	r9, r8, #19
   136ec:	eor	r9, r9, r8, ror #17
   136f0:	eor	r9, r9, r8, lsr #10
   136f4:	ldr	r8, [sp, #140]	; 0x8c
   136f8:	ror	r8, r8, #18
   136fc:	eor	r8, r8, sl, ror #7
   13700:	eor	r8, r8, sl, lsr #3
   13704:	ldr	sl, [sp, #136]	; 0x88
   13708:	add	r8, r8, sl
   1370c:	ldr	sl, [sp, #24]
   13710:	add	r8, r8, sl
   13714:	eor	sl, r4, ip
   13718:	add	r8, r9, r8
   1371c:	ldr	r9, [pc, #744]	; 13a0c <putchar_unlocked@plt+0x29e4>
   13720:	and	sl, sl, r0
   13724:	eor	sl, sl, r4
   13728:	str	r8, [sp, #52]	; 0x34
   1372c:	add	r9, r8, r9
   13730:	ror	r8, r0, #11
   13734:	add	r3, r9, r3
   13738:	orr	r9, r5, lr
   1373c:	eor	r8, r8, r0, ror #6
   13740:	add	r3, sl, r3
   13744:	and	r9, r9, r2
   13748:	and	sl, r5, lr
   1374c:	eor	r8, r8, r0, ror #25
   13750:	orr	r9, r9, sl
   13754:	ldr	sl, [sp, #140]	; 0x8c
   13758:	add	r8, r3, r8
   1375c:	ror	r3, lr, #13
   13760:	add	r1, r1, r8
   13764:	eor	r3, r3, lr, ror #2
   13768:	eor	r3, r3, lr, ror #22
   1376c:	add	r3, r3, r9
   13770:	add	r3, r3, r8
   13774:	ldr	r8, [sp, #48]	; 0x30
   13778:	ror	r9, r8, #19
   1377c:	eor	r9, r9, r8, ror #17
   13780:	eor	r9, r9, r8, lsr #10
   13784:	ror	r8, r7, #18
   13788:	eor	r8, r8, r7, ror #7
   1378c:	eor	r8, r8, r7, lsr #3
   13790:	add	r8, r8, sl
   13794:	ldr	sl, [sp, #28]
   13798:	add	r8, r8, sl
   1379c:	eor	sl, ip, r0
   137a0:	add	r8, r9, r8
   137a4:	ldr	r9, [pc, #612]	; 13a10 <putchar_unlocked@plt+0x29e8>
   137a8:	and	sl, sl, r1
   137ac:	eor	sl, sl, ip
   137b0:	str	r8, [sp, #56]	; 0x38
   137b4:	add	r9, r8, r9
   137b8:	ror	r8, r1, #11
   137bc:	add	r4, r9, r4
   137c0:	orr	r9, lr, r3
   137c4:	eor	r8, r8, r1, ror #6
   137c8:	add	r4, sl, r4
   137cc:	and	r9, r9, r5
   137d0:	and	sl, lr, r3
   137d4:	eor	r8, r8, r1, ror #25
   137d8:	orr	r9, r9, sl
   137dc:	add	r8, r4, r8
   137e0:	ror	r4, r3, #13
   137e4:	add	r2, r2, r8
   137e8:	eor	r4, r4, r3, ror #2
   137ec:	eor	r4, r4, r3, ror #22
   137f0:	add	r4, r4, r9
   137f4:	add	r4, r4, r8
   137f8:	ldr	r8, [sp, #52]	; 0x34
   137fc:	ror	r9, r8, #19
   13800:	eor	r9, r9, r8, ror #17
   13804:	eor	r9, r9, r8, lsr #10
   13808:	ror	r8, r6, #18
   1380c:	eor	r8, r8, r6, ror #7
   13810:	eor	r8, r8, r6, lsr #3
   13814:	add	r7, r8, r7
   13818:	ldr	r8, [sp, #32]
   1381c:	add	r7, r7, r8
   13820:	ldr	r8, [pc, #492]	; 13a14 <putchar_unlocked@plt+0x29ec>
   13824:	add	r7, r9, r7
   13828:	eor	r9, r0, r1
   1382c:	and	r9, r9, r2
   13830:	str	r7, [sp, #60]	; 0x3c
   13834:	eor	r9, r9, r0
   13838:	add	r8, r7, r8
   1383c:	ror	r7, r2, #11
   13840:	add	ip, r8, ip
   13844:	orr	r8, r3, r4
   13848:	eor	r7, r7, r2, ror #6
   1384c:	add	ip, r9, ip
   13850:	and	r8, r8, lr
   13854:	and	r9, r3, r4
   13858:	eor	r7, r7, r2, ror #25
   1385c:	orr	r8, r8, r9
   13860:	add	r7, ip, r7
   13864:	ror	ip, r4, #13
   13868:	add	r5, r5, r7
   1386c:	eor	ip, ip, r4, ror #2
   13870:	eor	ip, ip, r4, ror #22
   13874:	add	ip, ip, r8
   13878:	add	ip, ip, r7
   1387c:	ldr	r7, [sp, #56]	; 0x38
   13880:	ror	r8, r7, #19
   13884:	eor	r8, r8, r7, ror #17
   13888:	eor	r8, r8, r7, lsr #10
   1388c:	ror	r7, fp, #18
   13890:	eor	r7, r7, fp, ror #7
   13894:	eor	r7, r7, fp, lsr #3
   13898:	add	r6, r7, r6
   1389c:	ldr	r7, [sp, #36]	; 0x24
   138a0:	add	r6, r6, r7
   138a4:	ldr	r7, [pc, #364]	; 13a18 <putchar_unlocked@plt+0x29f0>
   138a8:	add	r6, r8, r6
   138ac:	eor	r8, r1, r2
   138b0:	and	r8, r8, r5
   138b4:	str	r6, [sp, #64]	; 0x40
   138b8:	eor	r8, r8, r1
   138bc:	add	r7, r6, r7
   138c0:	ror	r6, r5, #11
   138c4:	add	r0, r7, r0
   138c8:	orr	r7, r4, ip
   138cc:	eor	r6, r6, r5, ror #6
   138d0:	add	r0, r8, r0
   138d4:	and	r7, r7, r3
   138d8:	and	r8, r4, ip
   138dc:	eor	r6, r6, r5, ror #25
   138e0:	orr	r7, r7, r8
   138e4:	ldr	r8, [sp, #8]
   138e8:	add	r6, r0, r6
   138ec:	ror	r0, ip, #13
   138f0:	add	lr, lr, r6
   138f4:	eor	r0, r0, ip, ror #2
   138f8:	eor	r9, r5, lr
   138fc:	eor	r0, r0, ip, ror #22
   13900:	add	r0, r0, r7
   13904:	add	r0, r0, r6
   13908:	ldr	r6, [sp, #60]	; 0x3c
   1390c:	ror	r7, r6, #19
   13910:	eor	r7, r7, r6, ror #17
   13914:	eor	r7, r7, r6, lsr #10
   13918:	ldr	r6, [sp, #8]
   1391c:	ror	r6, r6, #18
   13920:	eor	r6, r6, r8, ror #7
   13924:	eor	r6, r6, r8, lsr #3
   13928:	eor	r8, r2, r5
   1392c:	and	r8, r8, lr
   13930:	add	fp, r6, fp
   13934:	ldr	r6, [sp, #40]	; 0x28
   13938:	eor	r8, r8, r2
   1393c:	add	fp, fp, r6
   13940:	add	r6, r7, fp
   13944:	ldr	r7, [pc, #208]	; 13a1c <putchar_unlocked@plt+0x29f4>
   13948:	str	r6, [sp, #68]	; 0x44
   1394c:	add	r7, r6, r7
   13950:	ror	r6, lr, #11
   13954:	add	r1, r7, r1
   13958:	orr	r7, ip, r0
   1395c:	eor	r6, r6, lr, ror #6
   13960:	add	r1, r8, r1
   13964:	and	r7, r7, r4
   13968:	and	r8, ip, r0
   1396c:	eor	r6, r6, lr, ror #25
   13970:	orr	r7, r7, r8
   13974:	ldr	r8, [pc, #164]	; 13a20 <putchar_unlocked@plt+0x29f8>
   13978:	add	r6, r1, r6
   1397c:	ror	r1, r0, #13
   13980:	add	r3, r3, r6
   13984:	eor	r1, r1, r0, ror #2
   13988:	and	r9, r9, r3
   1398c:	eor	r9, r9, r5
   13990:	eor	r1, r1, r0, ror #22
   13994:	add	r1, r1, r7
   13998:	ldr	r7, [sp, #64]	; 0x40
   1399c:	add	r1, r1, r6
   139a0:	ldr	r6, [sp, #64]	; 0x40
   139a4:	b	13a90 <putchar_unlocked@plt+0x2a68>
   139a8:	teqvc	r7, r1	; <illegal shifter operand>
   139ac:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   139b0:	ldmdbcc	r6, {r0, r1, r3, r4, r6, r9, lr, pc}^
   139b4:	ldmibpl	r1!, {r0, r4, r5, r6, r7, r8, ip}^
   139b8:	eorsls	r8, pc, #164, 4	; 0x4000000a
   139bc:	blge	72b518 <stdout@@GLIBC_2.4+0x7023ac>
   139c0:	strpl	r7, [ip, #-3523]	; 0xfffff23d
   139c4:	adcsvc	r5, lr, #116, 26	; 0x1d00
   139c8:	ldrshhi	fp, [lr], #30
   139cc:	blls	ff715470 <stdout@@GLIBC_2.4+0xff6ec304>
   139d0:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   139d4:	ldr	r6, [fp], #2497	; 0x9c1
   139d8:	svc	0x00be4786
   139dc:	svceq	0x00c19dc6
   139e0:	strcs	sl, [ip], #-460	; 0xfffffe34
   139e4:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   139e8:	bmi	1d34c98 <stdout@@GLIBC_2.4+0x1d0bb2c>
   139ec:			; <UNDEFINED> instruction: 0x5cb0a9dc
   139f0:	usatvc	r8, #25, sl, asr #17
   139f4:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   139f8:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   139fc:	andlt	r2, r3, r8, asr #15
   13a00:	svclt	0x00597fc7
   13a04:			; <UNDEFINED> instruction: 0xc6e00bf3
   13a08:	strle	r9, [r7, #327]!	; 0x147
   13a0c:			; <UNDEFINED> instruction: 0x06ca6351
   13a10:	strtne	r2, [r9], #-2407	; 0xfffff699
   13a14:	ldrcs	r0, [r7, r5, lsl #21]!
   13a18:	mrccs	1, 0, r2, cr11, cr8, {1}
   13a1c:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   13a20:	teqpl	r8, #1216	; 0x4c0
   13a24:	strvs	r7, [sl, #-852]	; 0xfffffcac
   13a28:			; <UNDEFINED> instruction: 0x766a0abb
   13a2c:	bichi	ip, r2, lr, lsr #18
   13a30:	rsbsls	r2, r2, #34048	; 0x8500
   13a34:	adcsge	lr, pc, #10551296	; 0xa10000
   13a38:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   13a3c:	subgt	r8, fp, #112, 22	; 0x1c000
   13a40:	strbgt	r5, [ip, -r3, lsr #3]!
   13a44:	orrsle	lr, r2, r9, lsl r8
   13a48:	ldrle	r0, [r9], r4, lsr #12
   13a4c:	vst3.32	{d3,d5,d7}, [lr], r5
   13a50:	rsbne	sl, sl, r0, ror r0
   13a54:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   13a58:	cdpne	12, 3, cr6, cr7, cr8, {0}
   13a5c:	strbcs	r7, [r8, -ip, asr #14]
   13a60:	ldrtcc	fp, [r0], #3253	; 0xcb5
   13a64:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   13a68:	vfnmami.f32	s21, s16, s20
   13a6c:	blpl	fe7463b0 <stdout@@GLIBC_2.4+0xfe71d244>
   13a70:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   13a74:	strvc	r8, [pc], #750	; 13a7c <putchar_unlocked@plt+0x2a54>
   13a78:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   13a7c:	strbhi	r7, [r8], #2068	; 0x814
   13a80:	sfmhi	f0, 2, [r7], {8}
   13a84:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   13a88:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   13a8c:	mrclt	3, 7, sl, cr9, cr7, {7}
   13a90:	ror	r6, r6, #19
   13a94:	eor	r6, r6, r7, ror #17
   13a98:	eor	r6, r6, r7, lsr #10
   13a9c:	ldr	r7, [sp, #12]
   13aa0:	ror	sl, r7, #18
   13aa4:	eor	sl, sl, r7, ror #7
   13aa8:	eor	sl, sl, r7, lsr #3
   13aac:	ldr	r7, [sp, #8]
   13ab0:	add	sl, sl, r7
   13ab4:	ldr	r7, [sp, #44]	; 0x2c
   13ab8:	add	sl, sl, r7
   13abc:	add	r6, r6, sl
   13ac0:	add	r8, r6, r8
   13ac4:	str	r6, [sp, #8]
   13ac8:	ror	r6, r3, #11
   13acc:	add	r2, r8, r2
   13ad0:	add	r9, r9, r2
   13ad4:	orr	r2, r0, r1
   13ad8:	eor	r6, r6, r3, ror #6
   13adc:	and	r8, r0, r1
   13ae0:	and	r2, r2, ip
   13ae4:	orr	r2, r2, r8
   13ae8:	eor	r6, r6, r3, ror #25
   13aec:	add	r7, r9, r6
   13af0:	ror	r6, r1, #13
   13af4:	add	r4, r4, r7
   13af8:	eor	r6, r6, r1, ror #2
   13afc:	ror	fp, r4, #11
   13b00:	eor	r6, r6, r1, ror #22
   13b04:	eor	fp, fp, r4, ror #6
   13b08:	add	r2, r6, r2
   13b0c:	add	r6, r2, r7
   13b10:	ldr	r2, [sp, #68]	; 0x44
   13b14:	eor	fp, fp, r4, ror #25
   13b18:	ldr	r7, [sp, #68]	; 0x44
   13b1c:	ror	r2, r2, #19
   13b20:	eor	r2, r2, r7, ror #17
   13b24:	eor	r2, r2, r7, lsr #10
   13b28:	ldr	r7, [sp, #16]
   13b2c:	ror	r8, r7, #18
   13b30:	eor	r8, r8, r7, ror #7
   13b34:	eor	r8, r8, r7, lsr #3
   13b38:	ldr	r7, [sp, #12]
   13b3c:	add	r8, r8, r7
   13b40:	ldr	r7, [sp, #48]	; 0x30
   13b44:	add	r8, r8, r7
   13b48:	eor	r7, lr, r3
   13b4c:	add	r2, r2, r8
   13b50:	and	r7, r7, r4
   13b54:	eor	r7, r7, lr
   13b58:	str	r2, [sp, #12]
   13b5c:	ldr	r2, [pc, #-320]	; 13a24 <putchar_unlocked@plt+0x29fc>
   13b60:	ldr	r8, [sp, #12]
   13b64:	add	r2, r8, r2
   13b68:	add	r5, r2, r5
   13b6c:	orr	r2, r1, r6
   13b70:	add	r5, r7, r5
   13b74:	and	r2, r2, r0
   13b78:	add	r5, r5, fp
   13b7c:	ror	fp, r6, #13
   13b80:	and	r7, r1, r6
   13b84:	orr	r2, r2, r7
   13b88:	add	ip, ip, r5
   13b8c:	eor	fp, fp, r6, ror #2
   13b90:	eor	r7, r3, r4
   13b94:	and	r7, r7, ip
   13b98:	eor	fp, fp, r6, ror #22
   13b9c:	eor	r7, r7, r3
   13ba0:	add	fp, fp, r2
   13ba4:	ldr	r2, [sp, #8]
   13ba8:	add	fp, fp, r5
   13bac:	ldr	r5, [sp, #8]
   13bb0:	ror	r2, r2, #19
   13bb4:	eor	r2, r2, r5, ror #17
   13bb8:	eor	r2, r2, r5, lsr #10
   13bbc:	ldr	r5, [sp, #20]
   13bc0:	ror	r8, r5, #18
   13bc4:	eor	r8, r8, r5, ror #7
   13bc8:	eor	r8, r8, r5, lsr #3
   13bcc:	ldr	r5, [sp, #16]
   13bd0:	add	r8, r8, r5
   13bd4:	ldr	r5, [sp, #52]	; 0x34
   13bd8:	add	r8, r8, r5
   13bdc:	ldr	r5, [pc, #-444]	; 13a28 <putchar_unlocked@plt+0x2a00>
   13be0:	add	r2, r2, r8
   13be4:	str	r2, [sp, #16]
   13be8:	add	r5, r2, r5
   13bec:	ror	r2, ip, #11
   13bf0:	add	lr, r5, lr
   13bf4:	orr	r5, r6, fp
   13bf8:	eor	r2, r2, ip, ror #6
   13bfc:	add	lr, r7, lr
   13c00:	and	r5, r5, r1
   13c04:	and	r7, r6, fp
   13c08:	eor	r2, r2, ip, ror #25
   13c0c:	orr	r5, r5, r7
   13c10:	add	r2, lr, r2
   13c14:	ror	lr, fp, #13
   13c18:	add	r0, r0, r2
   13c1c:	eor	lr, lr, fp, ror #2
   13c20:	ror	r9, r0, #11
   13c24:	eor	lr, lr, fp, ror #22
   13c28:	eor	r9, r9, r0, ror #6
   13c2c:	add	lr, lr, r5
   13c30:	ldr	r5, [sp, #12]
   13c34:	add	lr, lr, r2
   13c38:	eor	r9, r9, r0, ror #25
   13c3c:	ldr	r2, [sp, #12]
   13c40:	ror	r2, r2, #19
   13c44:	eor	r2, r2, r5, ror #17
   13c48:	eor	r2, r2, r5, lsr #10
   13c4c:	ldr	r5, [sp, #24]
   13c50:	ror	r8, r5, #18
   13c54:	eor	r8, r8, r5, ror #7
   13c58:	eor	r8, r8, r5, lsr #3
   13c5c:	ldr	r5, [sp, #20]
   13c60:	add	r8, r8, r5
   13c64:	ldr	r5, [sp, #56]	; 0x38
   13c68:	add	r8, r8, r5
   13c6c:	eor	r5, r4, ip
   13c70:	add	r2, r2, r8
   13c74:	and	r5, r5, r0
   13c78:	eor	r5, r5, r4
   13c7c:	str	r2, [sp, #20]
   13c80:	ldr	r2, [pc, #-604]	; 13a2c <putchar_unlocked@plt+0x2a04>
   13c84:	ldr	r7, [sp, #20]
   13c88:	add	r2, r7, r2
   13c8c:	add	r3, r2, r3
   13c90:	orr	r2, fp, lr
   13c94:	add	r3, r5, r3
   13c98:	and	r2, r2, r6
   13c9c:	add	r3, r3, r9
   13ca0:	ror	r9, lr, #13
   13ca4:	and	r5, fp, lr
   13ca8:	orr	r2, r2, r5
   13cac:	add	r1, r1, r3
   13cb0:	eor	r9, r9, lr, ror #2
   13cb4:	eor	r9, r9, lr, ror #22
   13cb8:	add	r9, r9, r2
   13cbc:	ldr	r2, [sp, #16]
   13cc0:	add	r9, r9, r3
   13cc4:	ldr	r3, [sp, #16]
   13cc8:	ror	r3, r3, #19
   13ccc:	eor	r3, r3, r2, ror #17
   13cd0:	eor	r3, r3, r2, lsr #10
   13cd4:	ldr	r2, [sp, #28]
   13cd8:	ror	r8, r2, #18
   13cdc:	eor	r8, r8, r2, ror #7
   13ce0:	eor	r8, r8, r2, lsr #3
   13ce4:	ldr	r2, [sp, #24]
   13ce8:	add	r8, r8, r2
   13cec:	ldr	r2, [sp, #60]	; 0x3c
   13cf0:	add	r8, r8, r2
   13cf4:	eor	r2, ip, r0
   13cf8:	add	r3, r3, r8
   13cfc:	and	r2, r2, r1
   13d00:	eor	r2, r2, ip
   13d04:	str	r3, [sp, #24]
   13d08:	ldr	r3, [pc, #-736]	; 13a30 <putchar_unlocked@plt+0x2a08>
   13d0c:	ldr	r5, [sp, #24]
   13d10:	add	r3, r5, r3
   13d14:	ror	r5, r1, #11
   13d18:	add	r4, r3, r4
   13d1c:	orr	r3, lr, r9
   13d20:	eor	r5, r5, r1, ror #6
   13d24:	add	r4, r2, r4
   13d28:	and	r3, r3, fp
   13d2c:	eor	r5, r5, r1, ror #25
   13d30:	add	r4, r4, r5
   13d34:	ror	r5, r9, #13
   13d38:	add	r2, r6, r4
   13d3c:	and	r6, lr, r9
   13d40:	eor	r5, r5, r9, ror #2
   13d44:	orr	r3, r3, r6
   13d48:	eor	r5, r5, r9, ror #22
   13d4c:	add	r5, r5, r3
   13d50:	ror	r3, r7, #19
   13d54:	add	r5, r5, r4
   13d58:	ldr	r4, [sp, #32]
   13d5c:	eor	r3, r3, r7, ror #17
   13d60:	eor	r3, r3, r7, lsr #10
   13d64:	ror	r8, r4, #18
   13d68:	eor	r8, r8, r4, ror #7
   13d6c:	eor	r8, r8, r4, lsr #3
   13d70:	ldr	r4, [sp, #28]
   13d74:	add	r8, r8, r4
   13d78:	ldr	r4, [sp, #64]	; 0x40
   13d7c:	add	r8, r8, r4
   13d80:	eor	r4, r0, r1
   13d84:	add	r3, r3, r8
   13d88:	ror	r8, r2, #11
   13d8c:	and	r4, r4, r2
   13d90:	eor	r4, r4, r0
   13d94:	str	r3, [sp, #28]
   13d98:	eor	r8, r8, r2, ror #6
   13d9c:	ldr	r3, [pc, #-880]	; 13a34 <putchar_unlocked@plt+0x2a0c>
   13da0:	eor	r8, r8, r2, ror #25
   13da4:	ldr	r6, [sp, #28]
   13da8:	add	r3, r6, r3
   13dac:	add	ip, r3, ip
   13db0:	orr	r3, r9, r5
   13db4:	add	ip, r4, ip
   13db8:	and	r3, r3, lr
   13dbc:	add	ip, ip, r8
   13dc0:	ror	r8, r5, #13
   13dc4:	and	r4, r9, r5
   13dc8:	orr	r3, r3, r4
   13dcc:	add	fp, fp, ip
   13dd0:	ldr	r4, [sp, #36]	; 0x24
   13dd4:	eor	r8, r8, r5, ror #2
   13dd8:	ror	r7, fp, #11
   13ddc:	eor	r8, r8, r5, ror #22
   13de0:	eor	r7, r7, fp, ror #6
   13de4:	add	r8, r8, r3
   13de8:	ldr	r3, [sp, #24]
   13dec:	add	r8, r8, ip
   13df0:	eor	r7, r7, fp, ror #25
   13df4:	ldr	ip, [sp, #24]
   13df8:	ror	r3, r3, #19
   13dfc:	eor	r3, r3, ip, ror #17
   13e00:	eor	r3, r3, ip, lsr #10
   13e04:	ldr	ip, [sp, #36]	; 0x24
   13e08:	ror	ip, ip, #18
   13e0c:	eor	ip, ip, r4, ror #7
   13e10:	eor	ip, ip, r4, lsr #3
   13e14:	ldr	r4, [sp, #32]
   13e18:	add	ip, ip, r4
   13e1c:	ldr	r4, [sp, #68]	; 0x44
   13e20:	add	ip, ip, r4
   13e24:	add	r3, r3, ip
   13e28:	eor	ip, r1, r2
   13e2c:	and	ip, ip, fp
   13e30:	str	r3, [sp, #32]
   13e34:	eor	ip, ip, r1
   13e38:	ldr	r3, [pc, #-1032]	; 13a38 <putchar_unlocked@plt+0x2a10>
   13e3c:	ldr	r4, [sp, #32]
   13e40:	add	r3, r4, r3
   13e44:	add	r0, r3, r0
   13e48:	orr	r3, r5, r8
   13e4c:	add	r0, ip, r0
   13e50:	and	r3, r3, r9
   13e54:	add	r0, r0, r7
   13e58:	ror	r7, r8, #13
   13e5c:	and	ip, r5, r8
   13e60:	orr	r3, r3, ip
   13e64:	add	lr, lr, r0
   13e68:	ldr	ip, [sp, #40]	; 0x28
   13e6c:	eor	r7, r7, r8, ror #2
   13e70:	eor	r7, r7, r8, ror #22
   13e74:	add	r7, r7, r3
   13e78:	ror	r3, r6, #19
   13e7c:	add	r7, r7, r0
   13e80:	ldr	r0, [sp, #40]	; 0x28
   13e84:	eor	r3, r3, r6, ror #17
   13e88:	eor	r3, r3, r6, lsr #10
   13e8c:	ror	r6, lr, #11
   13e90:	ror	r0, r0, #18
   13e94:	eor	r6, r6, lr, ror #6
   13e98:	eor	r0, r0, ip, ror #7
   13e9c:	eor	r6, r6, lr, ror #25
   13ea0:	eor	r0, r0, ip, lsr #3
   13ea4:	ldr	ip, [sp, #36]	; 0x24
   13ea8:	add	r0, r0, ip
   13eac:	ldr	ip, [sp, #8]
   13eb0:	add	r0, r0, ip
   13eb4:	add	r3, r3, r0
   13eb8:	eor	r0, r2, fp
   13ebc:	and	r0, r0, lr
   13ec0:	str	r3, [sp, #36]	; 0x24
   13ec4:	eor	r0, r0, r2
   13ec8:	ldr	r3, [pc, #-1172]	; 13a3c <putchar_unlocked@plt+0x2a14>
   13ecc:	ldr	ip, [sp, #36]	; 0x24
   13ed0:	add	r3, ip, r3
   13ed4:	add	r1, r3, r1
   13ed8:	orr	r3, r8, r7
   13edc:	add	r1, r0, r1
   13ee0:	and	r3, r3, r5
   13ee4:	add	r1, r1, r6
   13ee8:	ror	r6, r7, #13
   13eec:	and	r0, r8, r7
   13ef0:	orr	r3, r3, r0
   13ef4:	add	r9, r9, r1
   13ef8:	ldr	r0, [sp, #44]	; 0x2c
   13efc:	eor	r6, r6, r7, ror #2
   13f00:	eor	r6, r6, r7, ror #22
   13f04:	add	r6, r6, r3
   13f08:	ror	r3, r4, #19
   13f0c:	add	r6, r6, r1
   13f10:	ldr	r1, [sp, #44]	; 0x2c
   13f14:	eor	r3, r3, r4, ror #17
   13f18:	eor	r3, r3, r4, lsr #10
   13f1c:	ror	r1, r1, #18
   13f20:	eor	r1, r1, r0, ror #7
   13f24:	eor	r1, r1, r0, lsr #3
   13f28:	ldr	r0, [sp, #40]	; 0x28
   13f2c:	add	r1, r1, r0
   13f30:	ldr	r0, [sp, #12]
   13f34:	add	r1, r1, r0
   13f38:	eor	r0, fp, lr
   13f3c:	add	r3, r3, r1
   13f40:	and	r0, r0, r9
   13f44:	eor	r0, r0, fp
   13f48:	str	r3, [sp, #40]	; 0x28
   13f4c:	ldr	r3, [pc, #-1300]	; 13a40 <putchar_unlocked@plt+0x2a18>
   13f50:	ldr	r1, [sp, #40]	; 0x28
   13f54:	add	r3, r1, r3
   13f58:	ror	r1, r9, #11
   13f5c:	add	r2, r3, r2
   13f60:	orr	r3, r7, r6
   13f64:	eor	r1, r1, r9, ror #6
   13f68:	add	r2, r0, r2
   13f6c:	and	r3, r3, r8
   13f70:	and	r0, r7, r6
   13f74:	eor	r1, r1, r9, ror #25
   13f78:	orr	r3, r3, r0
   13f7c:	ldr	r0, [sp, #48]	; 0x30
   13f80:	add	r2, r2, r1
   13f84:	ror	r1, r6, #13
   13f88:	add	r5, r5, r2
   13f8c:	eor	r1, r1, r6, ror #2
   13f90:	eor	r1, r1, r6, ror #22
   13f94:	add	r1, r1, r3
   13f98:	ror	r3, ip, #19
   13f9c:	add	r1, r1, r2
   13fa0:	ldr	r2, [sp, #48]	; 0x30
   13fa4:	eor	r3, r3, ip, ror #17
   13fa8:	eor	r3, r3, ip, lsr #10
   13fac:	ror	r2, r2, #18
   13fb0:	eor	r2, r2, r0, ror #7
   13fb4:	eor	r2, r2, r0, lsr #3
   13fb8:	ldr	r0, [sp, #44]	; 0x2c
   13fbc:	add	r2, r2, r0
   13fc0:	ldr	r0, [sp, #16]
   13fc4:	add	r2, r2, r0
   13fc8:	eor	r0, lr, r9
   13fcc:	add	r3, r3, r2
   13fd0:	ldr	r2, [pc, #-1428]	; 13a44 <putchar_unlocked@plt+0x2a1c>
   13fd4:	and	r0, r0, r5
   13fd8:	eor	r0, r0, lr
   13fdc:	str	r3, [sp, #44]	; 0x2c
   13fe0:	add	r2, r3, r2
   13fe4:	ror	r3, r5, #11
   13fe8:	add	fp, r2, fp
   13fec:	orr	r2, r6, r1
   13ff0:	eor	r3, r3, r5, ror #6
   13ff4:	add	fp, r0, fp
   13ff8:	and	r2, r2, r7
   13ffc:	and	r0, r6, r1
   14000:	eor	r3, r3, r5, ror #25
   14004:	orr	r2, r2, r0
   14008:	ldr	r0, [sp, #52]	; 0x34
   1400c:	add	r3, fp, r3
   14010:	ror	fp, r1, #13
   14014:	add	r8, r8, r3
   14018:	eor	fp, fp, r1, ror #2
   1401c:	eor	fp, fp, r1, ror #22
   14020:	add	fp, fp, r2
   14024:	ldr	r2, [sp, #40]	; 0x28
   14028:	add	fp, fp, r3
   1402c:	ldr	r3, [sp, #40]	; 0x28
   14030:	ror	r3, r3, #19
   14034:	eor	r3, r3, r2, ror #17
   14038:	eor	r3, r3, r2, lsr #10
   1403c:	ldr	r2, [sp, #52]	; 0x34
   14040:	ror	r2, r2, #18
   14044:	eor	r2, r2, r0, ror #7
   14048:	eor	r2, r2, r0, lsr #3
   1404c:	ldr	r0, [sp, #48]	; 0x30
   14050:	add	r2, r2, r0
   14054:	ldr	r0, [sp, #20]
   14058:	add	r2, r2, r0
   1405c:	eor	r0, r9, r5
   14060:	add	r3, r3, r2
   14064:	ldr	r2, [pc, #-1572]	; 13a48 <putchar_unlocked@plt+0x2a20>
   14068:	and	r0, r0, r8
   1406c:	eor	r0, r0, r9
   14070:	str	r3, [sp, #48]	; 0x30
   14074:	add	r2, r3, r2
   14078:	ror	r3, r8, #11
   1407c:	add	lr, r2, lr
   14080:	orr	r2, r1, fp
   14084:	eor	r3, r3, r8, ror #6
   14088:	add	lr, r0, lr
   1408c:	and	r2, r2, r6
   14090:	and	r0, r1, fp
   14094:	eor	r3, r3, r8, ror #25
   14098:	orr	r2, r2, r0
   1409c:	ldr	r0, [sp, #56]	; 0x38
   140a0:	add	r3, lr, r3
   140a4:	ror	lr, fp, #13
   140a8:	add	r7, r7, r3
   140ac:	eor	lr, lr, fp, ror #2
   140b0:	eor	lr, lr, fp, ror #22
   140b4:	add	lr, lr, r2
   140b8:	ldr	r2, [sp, #44]	; 0x2c
   140bc:	add	lr, lr, r3
   140c0:	ldr	r3, [sp, #44]	; 0x2c
   140c4:	ror	r3, r3, #19
   140c8:	eor	r3, r3, r2, ror #17
   140cc:	eor	r3, r3, r2, lsr #10
   140d0:	ldr	r2, [sp, #56]	; 0x38
   140d4:	ror	r2, r2, #18
   140d8:	eor	r2, r2, r0, ror #7
   140dc:	eor	r2, r2, r0, lsr #3
   140e0:	ldr	r0, [sp, #52]	; 0x34
   140e4:	add	r2, r2, r0
   140e8:	ldr	r0, [sp, #24]
   140ec:	add	r2, r2, r0
   140f0:	eor	r0, r5, r8
   140f4:	add	r3, r3, r2
   140f8:	ldr	r2, [pc, #-1716]	; 13a4c <putchar_unlocked@plt+0x2a24>
   140fc:	and	r0, r0, r7
   14100:	eor	r0, r0, r5
   14104:	str	r3, [sp, #52]	; 0x34
   14108:	add	r2, r3, r2
   1410c:	add	r9, r2, r9
   14110:	orr	r2, fp, lr
   14114:	add	r3, r0, r9
   14118:	ror	r9, r7, #11
   1411c:	and	r0, fp, lr
   14120:	and	r2, r2, r1
   14124:	eor	r9, r9, r7, ror #6
   14128:	orr	r2, r2, r0
   1412c:	eor	r9, r9, r7, ror #25
   14130:	add	r9, r3, r9
   14134:	ror	r3, lr, #13
   14138:	add	r6, r6, r9
   1413c:	eor	r3, r3, lr, ror #2
   14140:	eor	r3, r3, lr, ror #22
   14144:	add	r3, r3, r2
   14148:	ldr	r2, [sp, #48]	; 0x30
   1414c:	add	r3, r3, r9
   14150:	ldr	r0, [sp, #48]	; 0x30
   14154:	ror	r2, r2, #19
   14158:	eor	r2, r2, r0, ror #17
   1415c:	eor	r2, r2, r0, lsr #10
   14160:	ldr	r0, [sp, #60]	; 0x3c
   14164:	ror	r9, r0, #18
   14168:	eor	r9, r9, r0, ror #7
   1416c:	eor	r9, r9, r0, lsr #3
   14170:	ldr	r0, [sp, #56]	; 0x38
   14174:	add	r9, r9, r0
   14178:	ldr	r0, [sp, #28]
   1417c:	add	r9, r9, r0
   14180:	eor	r0, r8, r7
   14184:	add	r2, r2, r9
   14188:	and	r0, r0, r6
   1418c:	eor	r0, r0, r8
   14190:	str	r2, [sp, #56]	; 0x38
   14194:	ldr	r2, [pc, #-1868]	; 13a50 <putchar_unlocked@plt+0x2a28>
   14198:	ldr	ip, [sp, #56]	; 0x38
   1419c:	add	r2, ip, r2
   141a0:	add	r5, r2, r5
   141a4:	orr	r2, lr, r3
   141a8:	add	sl, r0, r5
   141ac:	ror	r5, r6, #11
   141b0:	and	r0, lr, r3
   141b4:	and	r2, r2, fp
   141b8:	eor	r5, r5, r6, ror #6
   141bc:	orr	r2, r2, r0
   141c0:	ldr	r0, [sp, #52]	; 0x34
   141c4:	eor	r5, r5, r6, ror #25
   141c8:	add	r5, sl, r5
   141cc:	ror	sl, r3, #13
   141d0:	add	r1, r1, r5
   141d4:	eor	sl, sl, r3, ror #2
   141d8:	eor	sl, sl, r3, ror #22
   141dc:	add	sl, sl, r2
   141e0:	ldr	r2, [sp, #52]	; 0x34
   141e4:	add	sl, sl, r5
   141e8:	ror	r2, r2, #19
   141ec:	eor	r2, r2, r0, ror #17
   141f0:	eor	r2, r2, r0, lsr #10
   141f4:	ldr	r0, [sp, #64]	; 0x40
   141f8:	ror	r9, r0, #18
   141fc:	eor	r9, r9, r0, ror #7
   14200:	eor	r9, r9, r0, lsr #3
   14204:	ldr	r0, [sp, #60]	; 0x3c
   14208:	add	r9, r9, r0
   1420c:	eor	r0, r7, r6
   14210:	add	r9, r9, r4
   14214:	and	r0, r0, r1
   14218:	add	r2, r2, r9
   1421c:	eor	r0, r0, r7
   14220:	str	r2, [sp, #60]	; 0x3c
   14224:	str	r2, [sp, #80]	; 0x50
   14228:	ldr	r2, [pc, #-2012]	; 13a54 <putchar_unlocked@plt+0x2a2c>
   1422c:	ldr	ip, [sp, #60]	; 0x3c
   14230:	add	r2, ip, r2
   14234:	ldr	ip, [sp, #68]	; 0x44
   14238:	add	r8, r2, r8
   1423c:	orr	r2, r3, sl
   14240:	add	r5, r0, r8
   14244:	ror	r8, r1, #11
   14248:	and	r0, r3, sl
   1424c:	and	r2, r2, lr
   14250:	eor	r8, r8, r1, ror #6
   14254:	orr	r2, r2, r0
   14258:	eor	r8, r8, r1, ror #25
   1425c:	add	r8, r5, r8
   14260:	ror	r5, sl, #13
   14264:	add	fp, fp, r8
   14268:	eor	r5, r5, sl, ror #2
   1426c:	eor	r5, r5, sl, ror #22
   14270:	add	r5, r5, r2
   14274:	ldr	r2, [sp, #56]	; 0x38
   14278:	add	r5, r5, r8
   1427c:	ror	r8, r2, #19
   14280:	eor	r8, r8, r2, ror #17
   14284:	eor	r0, r8, r2, lsr #10
   14288:	ldr	r2, [sp, #68]	; 0x44
   1428c:	ror	r2, r2, #18
   14290:	eor	r2, r2, ip, ror #7
   14294:	eor	r2, r2, ip, lsr #3
   14298:	ldr	ip, [sp, #64]	; 0x40
   1429c:	add	r8, r2, ip
   142a0:	ldr	ip, [sp, #8]
   142a4:	ldr	r2, [sp, #36]	; 0x24
   142a8:	add	r8, r8, r2
   142ac:	ldr	r2, [pc, #-2140]	; 13a58 <putchar_unlocked@plt+0x2a30>
   142b0:	add	r8, r0, r8
   142b4:	eor	r0, r6, r1
   142b8:	and	r0, r0, fp
   142bc:	eor	r0, r0, r6
   142c0:	str	r8, [sp, #84]	; 0x54
   142c4:	add	r2, r8, r2
   142c8:	add	r7, r2, r7
   142cc:	orr	r2, sl, r5
   142d0:	add	r9, r0, r7
   142d4:	ror	r7, fp, #11
   142d8:	and	r0, sl, r5
   142dc:	and	r2, r2, r3
   142e0:	eor	r7, r7, fp, ror #6
   142e4:	orr	r2, r2, r0
   142e8:	eor	r7, r7, fp, ror #25
   142ec:	add	r7, r9, r7
   142f0:	ror	r9, r5, #13
   142f4:	add	lr, lr, r7
   142f8:	eor	r9, r9, r5, ror #2
   142fc:	ror	r4, lr, #11
   14300:	eor	r9, r9, r5, ror #22
   14304:	eor	r4, r4, lr, ror #6
   14308:	add	r9, r9, r2
   1430c:	ldr	r2, [sp, #60]	; 0x3c
   14310:	add	r9, r9, r7
   14314:	eor	r4, r4, lr, ror #25
   14318:	ror	r7, r2, #19
   1431c:	eor	r7, r7, r2, ror #17
   14320:	eor	r0, r7, r2, lsr #10
   14324:	ldr	r2, [sp, #8]
   14328:	ror	r2, r2, #18
   1432c:	eor	r2, r2, ip, ror #7
   14330:	eor	r2, r2, ip, lsr #3
   14334:	ldr	ip, [sp, #68]	; 0x44
   14338:	add	r7, r2, ip
   1433c:	ldr	r2, [sp, #40]	; 0x28
   14340:	and	ip, r5, r9
   14344:	add	r7, r7, r2
   14348:	eor	r2, r1, fp
   1434c:	add	r7, r0, r7
   14350:	ldr	r0, [pc, #-2300]	; 13a5c <putchar_unlocked@plt+0x2a34>
   14354:	and	r2, r2, lr
   14358:	eor	r2, r2, r1
   1435c:	str	r7, [sp, #88]	; 0x58
   14360:	add	r0, r7, r0
   14364:	add	r0, r0, r6
   14368:	ror	r6, r8, #19
   1436c:	add	r0, r2, r0
   14370:	orr	r2, r5, r9
   14374:	add	r0, r0, r4
   14378:	ror	r4, r9, #13
   1437c:	and	r2, r2, sl
   14380:	orr	r2, r2, ip
   14384:	add	r3, r3, r0
   14388:	eor	r6, r6, r8, ror #17
   1438c:	eor	r4, r4, r9, ror #2
   14390:	eor	r6, r6, r8, lsr #10
   14394:	eor	r4, r4, r9, ror #22
   14398:	ror	ip, r3, #11
   1439c:	add	r4, r4, r2
   143a0:	ldr	r2, [sp, #12]
   143a4:	add	r4, r4, r0
   143a8:	eor	ip, ip, r3, ror #6
   143ac:	ldr	r0, [sp, #12]
   143b0:	eor	ip, ip, r3, ror #25
   143b4:	ror	r2, r2, #18
   143b8:	eor	r2, r2, r0, ror #7
   143bc:	eor	r2, r2, r0, lsr #3
   143c0:	ldr	r0, [sp, #8]
   143c4:	add	r2, r2, r0
   143c8:	ldr	r0, [sp, #44]	; 0x2c
   143cc:	add	r2, r2, r0
   143d0:	eor	r0, fp, lr
   143d4:	add	r6, r6, r2
   143d8:	ldr	r2, [pc, #-2432]	; 13a60 <putchar_unlocked@plt+0x2a38>
   143dc:	and	r0, r0, r3
   143e0:	eor	r0, r0, fp
   143e4:	str	r6, [sp, #92]	; 0x5c
   143e8:	add	r2, r6, r2
   143ec:	add	r2, r2, r1
   143f0:	orr	r1, r9, r4
   143f4:	add	r2, r0, r2
   143f8:	and	r1, r1, r5
   143fc:	add	r2, r2, ip
   14400:	ror	ip, r4, #13
   14404:	and	r0, r9, r4
   14408:	orr	r1, r1, r0
   1440c:	add	sl, sl, r2
   14410:	eor	ip, ip, r4, ror #2
   14414:	eor	ip, ip, r4, ror #22
   14418:	add	ip, ip, r1
   1441c:	ror	r1, r7, #19
   14420:	add	ip, ip, r2
   14424:	ldr	r2, [sp, #16]
   14428:	eor	r1, r1, r7, ror #17
   1442c:	ldr	r0, [sp, #16]
   14430:	eor	r1, r1, r7, lsr #10
   14434:	ror	r2, r2, #18
   14438:	eor	r2, r2, r0, ror #7
   1443c:	eor	r2, r2, r0, lsr #3
   14440:	ldr	r0, [sp, #12]
   14444:	add	r2, r2, r0
   14448:	ldr	r0, [sp, #48]	; 0x30
   1444c:	add	r2, r2, r0
   14450:	add	r2, r1, r2
   14454:	eor	r1, lr, r3
   14458:	and	r1, r1, sl
   1445c:	str	r2, [sp, #8]
   14460:	eor	r1, r1, lr
   14464:	str	r2, [sp, #96]	; 0x60
   14468:	ldr	r2, [pc, #-2572]	; 13a64 <putchar_unlocked@plt+0x2a3c>
   1446c:	ldr	r0, [sp, #8]
   14470:	add	r2, r0, r2
   14474:	ror	r0, sl, #11
   14478:	add	r2, r2, fp
   1447c:	and	fp, r4, ip
   14480:	eor	r0, r0, sl, ror #6
   14484:	add	r2, r1, r2
   14488:	orr	r1, r4, ip
   1448c:	and	r1, r1, r9
   14490:	eor	r0, r0, sl, ror #25
   14494:	orr	r1, r1, fp
   14498:	ldr	fp, [sp, #20]
   1449c:	add	r2, r2, r0
   144a0:	ror	r0, ip, #13
   144a4:	add	r5, r5, r2
   144a8:	eor	r0, r0, ip, ror #2
   144ac:	eor	r0, r0, ip, ror #22
   144b0:	add	r0, r0, r1
   144b4:	ror	r1, r6, #19
   144b8:	add	r0, r0, r2
   144bc:	ldr	r2, [sp, #20]
   144c0:	eor	r1, r1, r6, ror #17
   144c4:	eor	r1, r1, r6, lsr #10
   144c8:	ror	r2, r2, #18
   144cc:	eor	r2, r2, fp, ror #7
   144d0:	eor	r2, r2, fp, lsr #3
   144d4:	ldr	fp, [sp, #16]
   144d8:	add	r2, r2, fp
   144dc:	ldr	fp, [sp, #52]	; 0x34
   144e0:	add	r2, r2, fp
   144e4:	eor	fp, r3, sl
   144e8:	add	r2, r1, r2
   144ec:	and	fp, fp, r5
   144f0:	eor	fp, fp, r3
   144f4:	str	r2, [sp, #12]
   144f8:	str	r2, [sp, #100]	; 0x64
   144fc:	ldr	r2, [pc, #-2716]	; 13a68 <putchar_unlocked@plt+0x2a40>
   14500:	ldr	r1, [sp, #12]
   14504:	add	r2, r1, r2
   14508:	ror	r1, r5, #11
   1450c:	add	lr, r2, lr
   14510:	orr	r2, ip, r0
   14514:	eor	r1, r1, r5, ror #6
   14518:	add	lr, fp, lr
   1451c:	and	r2, r2, r4
   14520:	and	fp, ip, r0
   14524:	eor	r1, r1, r5, ror #25
   14528:	orr	r2, r2, fp
   1452c:	ldr	fp, [sp, #24]
   14530:	add	lr, lr, r1
   14534:	ror	r1, r0, #13
   14538:	add	r9, r9, lr
   1453c:	eor	r1, r1, r0, ror #2
   14540:	eor	r1, r1, r0, ror #22
   14544:	add	r1, r1, r2
   14548:	ldr	r2, [sp, #8]
   1454c:	add	r1, r1, lr
   14550:	ror	lr, r2, #19
   14554:	eor	lr, lr, r2, ror #17
   14558:	eor	lr, lr, r2, lsr #10
   1455c:	ldr	r2, [sp, #24]
   14560:	ror	r2, r2, #18
   14564:	eor	r2, r2, fp, ror #7
   14568:	eor	r2, r2, fp, lsr #3
   1456c:	ldr	fp, [sp, #20]
   14570:	add	r2, r2, fp
   14574:	ldr	fp, [sp, #56]	; 0x38
   14578:	add	r2, r2, fp
   1457c:	eor	fp, sl, r5
   14580:	add	r2, lr, r2
   14584:	ldr	lr, [pc, #-2848]	; 13a6c <putchar_unlocked@plt+0x2a44>
   14588:	and	fp, fp, r9
   1458c:	eor	fp, fp, sl
   14590:	str	r2, [sp, #16]
   14594:	str	r2, [sp, #104]	; 0x68
   14598:	add	lr, r2, lr
   1459c:	ror	r2, r9, #11
   145a0:	add	r3, lr, r3
   145a4:	orr	lr, r0, r1
   145a8:	eor	r2, r2, r9, ror #6
   145ac:	add	r3, fp, r3
   145b0:	and	lr, lr, ip
   145b4:	and	fp, r0, r1
   145b8:	eor	r2, r2, r9, ror #25
   145bc:	orr	lr, lr, fp
   145c0:	ldr	fp, [sp, #28]
   145c4:	add	r3, r3, r2
   145c8:	ror	r2, r1, #13
   145cc:	add	r4, r4, r3
   145d0:	eor	r2, r2, r1, ror #2
   145d4:	eor	r2, r2, r1, ror #22
   145d8:	add	r2, r2, lr
   145dc:	add	r2, r2, r3
   145e0:	ldr	r3, [sp, #12]
   145e4:	ror	lr, r3, #19
   145e8:	eor	lr, lr, r3, ror #17
   145ec:	eor	lr, lr, r3, lsr #10
   145f0:	ldr	r3, [sp, #28]
   145f4:	ror	r3, r3, #18
   145f8:	eor	r3, r3, fp, ror #7
   145fc:	eor	r3, r3, fp, lsr #3
   14600:	ldr	fp, [sp, #24]
   14604:	add	r3, r3, fp
   14608:	ldr	fp, [sp, #60]	; 0x3c
   1460c:	add	r3, r3, fp
   14610:	add	r3, lr, r3
   14614:	eor	lr, r5, r9
   14618:	and	lr, lr, r4
   1461c:	str	r3, [sp, #20]
   14620:	eor	lr, lr, r5
   14624:	str	r3, [sp, #108]	; 0x6c
   14628:	ldr	r3, [pc, #-3008]	; 13a70 <putchar_unlocked@plt+0x2a48>
   1462c:	ldr	fp, [sp, #20]
   14630:	add	r3, fp, r3
   14634:	and	fp, r1, r2
   14638:	add	sl, r3, sl
   1463c:	ror	r3, r4, #11
   14640:	add	sl, lr, sl
   14644:	orr	lr, r1, r2
   14648:	eor	r3, r3, r4, ror #6
   1464c:	and	lr, lr, r0
   14650:	orr	lr, lr, fp
   14654:	ldr	fp, [sp, #32]
   14658:	eor	r3, r3, r4, ror #25
   1465c:	add	sl, sl, r3
   14660:	ror	r3, r2, #13
   14664:	add	ip, ip, sl
   14668:	eor	r3, r3, r2, ror #2
   1466c:	eor	r3, r3, r2, ror #22
   14670:	add	lr, r3, lr
   14674:	ldr	r3, [sp, #16]
   14678:	add	sl, lr, sl
   1467c:	ror	lr, r3, #19
   14680:	eor	lr, lr, r3, ror #17
   14684:	eor	lr, lr, r3, lsr #10
   14688:	ldr	r3, [sp, #32]
   1468c:	ror	r3, r3, #18
   14690:	eor	r3, r3, fp, ror #7
   14694:	eor	r3, r3, fp, lsr #3
   14698:	ldr	fp, [sp, #28]
   1469c:	add	r3, r3, fp
   146a0:	add	r8, r3, r8
   146a4:	add	r3, lr, r8
   146a8:	ldr	lr, [pc, #-3132]	; 13a74 <putchar_unlocked@plt+0x2a4c>
   146ac:	eor	r8, r9, r4
   146b0:	and	r8, r8, ip
   146b4:	eor	r8, r8, r9
   146b8:	str	r3, [sp, #24]
   146bc:	str	r3, [sp, #112]	; 0x70
   146c0:	add	lr, r3, lr
   146c4:	add	r5, lr, r5
   146c8:	orr	lr, r2, sl
   146cc:	add	r8, r8, r5
   146d0:	ror	r5, ip, #11
   146d4:	and	lr, lr, r1
   146d8:	eor	r5, r5, ip, ror #6
   146dc:	eor	r5, r5, ip, ror #25
   146e0:	add	r3, r8, r5
   146e4:	ror	r5, sl, #13
   146e8:	and	r8, r2, sl
   146ec:	orr	lr, lr, r8
   146f0:	add	r0, r0, r3
   146f4:	ldr	r8, [sp, #36]	; 0x24
   146f8:	eor	r5, r5, sl, ror #2
   146fc:	eor	r5, r5, sl, ror #22
   14700:	add	r5, r5, lr
   14704:	add	r5, r5, r3
   14708:	ldr	r3, [sp, #20]
   1470c:	ror	lr, r3, #19
   14710:	eor	lr, lr, r3, ror #17
   14714:	eor	lr, lr, r3, lsr #10
   14718:	ldr	r3, [sp, #36]	; 0x24
   1471c:	ror	r3, r3, #18
   14720:	eor	r3, r3, r8, ror #7
   14724:	eor	r3, r3, r8, lsr #3
   14728:	ldr	r8, [sp, #32]
   1472c:	add	r3, r3, r8
   14730:	eor	r8, r4, ip
   14734:	add	r7, r3, r7
   14738:	and	r8, r8, r0
   1473c:	add	r7, lr, r7
   14740:	ldr	lr, [pc, #-3280]	; 13a78 <putchar_unlocked@plt+0x2a50>
   14744:	eor	r8, r8, r4
   14748:	str	r7, [sp, #116]	; 0x74
   1474c:	add	lr, r7, lr
   14750:	add	r9, lr, r9
   14754:	orr	lr, sl, r5
   14758:	add	r8, r8, r9
   1475c:	ror	r9, r0, #11
   14760:	and	lr, lr, r2
   14764:	eor	r9, r9, r0, ror #6
   14768:	eor	r9, r9, r0, ror #25
   1476c:	add	r3, r8, r9
   14770:	ror	r9, r5, #13
   14774:	and	r8, sl, r5
   14778:	orr	lr, lr, r8
   1477c:	add	r1, r1, r3
   14780:	ldr	r8, [sp, #40]	; 0x28
   14784:	eor	r9, r9, r5, ror #2
   14788:	eor	r9, r9, r5, ror #22
   1478c:	add	r9, r9, lr
   14790:	add	r9, r9, r3
   14794:	ldr	r3, [sp, #24]
   14798:	ror	lr, r3, #19
   1479c:	eor	lr, lr, r3, ror #17
   147a0:	eor	lr, lr, r3, lsr #10
   147a4:	ldr	r3, [sp, #40]	; 0x28
   147a8:	ror	r3, r3, #18
   147ac:	eor	r3, r3, r8, ror #7
   147b0:	eor	r3, r3, r8, lsr #3
   147b4:	ldr	r8, [sp, #36]	; 0x24
   147b8:	add	r3, r3, r8
   147bc:	and	r8, r5, r9
   147c0:	add	r6, r3, r6
   147c4:	ldr	r3, [pc, #-3408]	; 13a7c <putchar_unlocked@plt+0x2a54>
   147c8:	add	r6, lr, r6
   147cc:	eor	lr, ip, r0
   147d0:	and	lr, lr, r1
   147d4:	eor	lr, lr, ip
   147d8:	str	r6, [sp, #120]	; 0x78
   147dc:	add	r3, r6, r3
   147e0:	add	r4, r3, r4
   147e4:	ror	r3, r1, #11
   147e8:	add	r4, lr, r4
   147ec:	orr	lr, r5, r9
   147f0:	eor	r3, r3, r1, ror #6
   147f4:	and	lr, lr, sl
   147f8:	orr	lr, lr, r8
   147fc:	eor	r3, r3, r1, ror #25
   14800:	add	r4, r4, r3
   14804:	ror	r3, r9, #13
   14808:	add	r2, r2, r4
   1480c:	eor	r3, r3, r9, ror #2
   14810:	ror	r8, r2, #11
   14814:	eor	r3, r3, r9, ror #22
   14818:	eor	r8, r8, r2, ror #6
   1481c:	add	lr, r3, lr
   14820:	ror	r3, r7, #19
   14824:	add	r4, lr, r4
   14828:	ldr	lr, [sp, #44]	; 0x2c
   1482c:	eor	r8, r8, r2, ror #25
   14830:	eor	r3, r3, r7, ror #17
   14834:	eor	r7, r3, r7, lsr #10
   14838:	ldr	r3, [sp, #44]	; 0x2c
   1483c:	ror	r3, r3, #18
   14840:	eor	r3, r3, lr, ror #7
   14844:	eor	r3, r3, lr, lsr #3
   14848:	ldr	lr, [sp, #40]	; 0x28
   1484c:	add	r3, r3, lr
   14850:	ldr	lr, [sp, #8]
   14854:	add	r3, r3, lr
   14858:	eor	lr, r0, r1
   1485c:	add	r7, r7, r3
   14860:	ldr	r3, [pc, #-3560]	; 13a80 <putchar_unlocked@plt+0x2a58>
   14864:	and	lr, lr, r2
   14868:	eor	lr, lr, r0
   1486c:	str	r7, [sp, #124]	; 0x7c
   14870:	add	r3, r7, r3
   14874:	add	ip, r3, ip
   14878:	orr	r3, r9, r4
   1487c:	add	ip, lr, ip
   14880:	and	r3, r3, r5
   14884:	add	ip, ip, r8
   14888:	ror	r8, r4, #13
   1488c:	and	lr, r9, r4
   14890:	orr	r3, r3, lr
   14894:	add	sl, sl, ip
   14898:	ldr	lr, [sp, #48]	; 0x30
   1489c:	eor	r8, r8, r4, ror #2
   148a0:	eor	r8, r8, r4, ror #22
   148a4:	add	r3, r8, r3
   148a8:	add	ip, r3, ip
   148ac:	ror	r3, r6, #19
   148b0:	and	r8, r4, ip
   148b4:	eor	r3, r3, r6, ror #17
   148b8:	eor	r6, r3, r6, lsr #10
   148bc:	ldr	r3, [sp, #48]	; 0x30
   148c0:	ror	r3, r3, #18
   148c4:	eor	r3, r3, lr, ror #7
   148c8:	eor	r3, r3, lr, lsr #3
   148cc:	ldr	lr, [sp, #44]	; 0x2c
   148d0:	add	r3, r3, lr
   148d4:	ldr	lr, [sp, #12]
   148d8:	add	r3, r3, lr
   148dc:	eor	lr, r1, r2
   148e0:	add	r6, r6, r3
   148e4:	ldr	r3, [pc, #-3688]	; 13a84 <putchar_unlocked@plt+0x2a5c>
   148e8:	and	lr, lr, sl
   148ec:	eor	lr, lr, r1
   148f0:	str	r6, [sp, #128]	; 0x80
   148f4:	add	r3, r6, r3
   148f8:	add	r0, r3, r0
   148fc:	ror	r3, sl, #11
   14900:	add	r0, lr, r0
   14904:	orr	lr, r4, ip
   14908:	eor	r3, r3, sl, ror #6
   1490c:	and	lr, lr, r9
   14910:	orr	lr, lr, r8
   14914:	eor	r3, r3, sl, ror #25
   14918:	add	r0, r0, r3
   1491c:	ror	r3, ip, #13
   14920:	add	r5, r5, r0
   14924:	eor	r3, r3, ip, ror #2
   14928:	ror	fp, r5, #11
   1492c:	eor	r3, r3, ip, ror #22
   14930:	eor	fp, fp, r5, ror #6
   14934:	add	lr, r3, lr
   14938:	ldr	r3, [sp, #52]	; 0x34
   1493c:	add	r0, lr, r0
   14940:	ror	lr, r7, #19
   14944:	eor	fp, fp, r5, ror #25
   14948:	eor	lr, lr, r7, ror #17
   1494c:	eor	r7, lr, r7, lsr #10
   14950:	ldr	lr, [sp, #52]	; 0x34
   14954:	ror	r3, r3, #18
   14958:	eor	r3, r3, lr, ror #7
   1495c:	eor	r3, r3, lr, lsr #3
   14960:	ldr	lr, [sp, #48]	; 0x30
   14964:	add	r3, r3, lr
   14968:	ldr	lr, [sp, #16]
   1496c:	add	lr, r3, lr
   14970:	ldr	r3, [pc, #-3824]	; 13a88 <putchar_unlocked@plt+0x2a60>
   14974:	add	r7, r7, lr
   14978:	eor	lr, r2, sl
   1497c:	and	lr, lr, r5
   14980:	eor	lr, lr, r2
   14984:	str	r7, [sp, #132]	; 0x84
   14988:	add	r3, r7, r3
   1498c:	add	r1, r3, r1
   14990:	orr	r3, ip, r0
   14994:	add	r1, lr, r1
   14998:	and	r3, r3, r4
   1499c:	add	r1, r1, fp
   149a0:	ror	fp, r0, #13
   149a4:	and	lr, ip, r0
   149a8:	orr	r3, r3, lr
   149ac:	add	r9, r9, r1
   149b0:	ldr	lr, [sp, #56]	; 0x38
   149b4:	eor	fp, fp, r0, ror #2
   149b8:	eor	fp, fp, r0, ror #22
   149bc:	add	r3, fp, r3
   149c0:	add	r1, r3, r1
   149c4:	ror	r3, r6, #19
   149c8:	eor	r3, r3, r6, ror #17
   149cc:	eor	r6, r3, r6, lsr #10
   149d0:	ldr	r3, [sp, #56]	; 0x38
   149d4:	ror	r3, r3, #18
   149d8:	eor	r3, r3, lr, ror #7
   149dc:	eor	r3, r3, lr, lsr #3
   149e0:	ldr	lr, [sp, #52]	; 0x34
   149e4:	add	r3, r3, lr
   149e8:	ldr	lr, [sp, #20]
   149ec:	add	r3, r3, lr
   149f0:	eor	lr, sl, r5
   149f4:	add	r6, r6, r3
   149f8:	ldr	r3, [pc, #-3956]	; 13a8c <putchar_unlocked@plt+0x2a64>
   149fc:	and	lr, lr, r9
   14a00:	eor	lr, lr, sl
   14a04:	str	r6, [sp, #136]	; 0x88
   14a08:	add	r3, r6, r3
   14a0c:	ror	r6, r1, #13
   14a10:	add	r2, r3, r2
   14a14:	ror	r3, r9, #11
   14a18:	add	r2, lr, r2
   14a1c:	eor	r6, r6, r1, ror #2
   14a20:	and	lr, r0, r1
   14a24:	eor	r3, r3, r9, ror #6
   14a28:	eor	r6, r6, r1, ror #22
   14a2c:	eor	r3, r3, r9, ror #25
   14a30:	add	r2, r2, r3
   14a34:	orr	r3, r0, r1
   14a38:	and	r3, r3, ip
   14a3c:	add	r4, r4, r2
   14a40:	orr	r3, r3, lr
   14a44:	ror	lr, r7, #19
   14a48:	add	r6, r6, r3
   14a4c:	ldr	r3, [sp, #60]	; 0x3c
   14a50:	add	r6, r6, r2
   14a54:	eor	lr, lr, r7, ror #17
   14a58:	ldr	r2, [sp, #60]	; 0x3c
   14a5c:	eor	r7, lr, r7, lsr #10
   14a60:	ror	r3, r3, #18
   14a64:	eor	r3, r3, r2, ror #7
   14a68:	eor	r3, r3, r2, lsr #3
   14a6c:	ldr	r2, [sp, #56]	; 0x38
   14a70:	add	r3, r3, r2
   14a74:	ldr	r2, [sp, #24]
   14a78:	add	r3, r3, r2
   14a7c:	eor	r2, r5, r9
   14a80:	add	r7, r7, r3
   14a84:	ldr	r3, [pc, #188]	; 14b48 <putchar_unlocked@plt+0x3b20>
   14a88:	and	r2, r2, r4
   14a8c:	eor	r2, r2, r5
   14a90:	str	r7, [sp, #140]	; 0x8c
   14a94:	add	r3, r7, r3
   14a98:	and	r7, r1, r6
   14a9c:	add	sl, r3, sl
   14aa0:	ror	r3, r4, #11
   14aa4:	add	sl, r2, sl
   14aa8:	ror	r2, r6, #13
   14aac:	eor	r3, r3, r4, ror #6
   14ab0:	eor	r2, r2, r6, ror #2
   14ab4:	eor	r3, r3, r4, ror #25
   14ab8:	eor	r2, r2, r6, ror #22
   14abc:	add	sl, sl, r3
   14ac0:	orr	r3, r1, r6
   14ac4:	and	r3, r3, r0
   14ac8:	orr	r7, r3, r7
   14acc:	ldr	r3, [sp, #4]
   14ad0:	add	r2, r2, r7
   14ad4:	ldr	r7, [r3]
   14ad8:	ldr	fp, [r3, #8]
   14adc:	ldr	r8, [r3, #16]
   14ae0:	add	r7, r2, r7
   14ae4:	ldr	r2, [r3, #4]
   14ae8:	add	r7, r7, sl
   14aec:	add	fp, r1, fp
   14af0:	ldr	lr, [r3, #12]
   14af4:	add	ip, ip, r8
   14af8:	str	r7, [r3]
   14afc:	add	sl, ip, sl
   14b00:	add	r6, r6, r2
   14b04:	ldr	r2, [sp, #4]
   14b08:	str	sl, [r3, #16]
   14b0c:	add	lr, r0, lr
   14b10:	stmib	r3, {r6, fp, lr}
   14b14:	ldr	r3, [r3, #20]
   14b18:	add	r3, r4, r3
   14b1c:	str	r3, [r2, #20]
   14b20:	ldr	r2, [r2, #24]
   14b24:	add	r9, r9, r2
   14b28:	ldr	r2, [sp, #4]
   14b2c:	ldr	r0, [r2, #28]
   14b30:	str	r9, [r2, #24]
   14b34:	add	r5, r5, r0
   14b38:	str	r5, [r2, #28]
   14b3c:	ldr	r2, [sp, #72]	; 0x48
   14b40:	add	r2, r2, #64	; 0x40
   14b44:	b	12924 <putchar_unlocked@plt+0x18fc>
   14b48:			; <UNDEFINED> instruction: 0xc67178f2
   14b4c:	push	{r4, r5, r6, lr}
   14b50:	mov	r4, r0
   14b54:	add	r6, r4, #44	; 0x2c
   14b58:	ldr	r0, [r0, #40]	; 0x28
   14b5c:	ldr	r3, [r4, #32]
   14b60:	cmp	r0, #56	; 0x38
   14b64:	movcc	r5, #16
   14b68:	movcs	r5, #32
   14b6c:	adds	r3, r3, r0
   14b70:	ldrcs	r2, [r4, #36]	; 0x24
   14b74:	str	r3, [r4, #32]
   14b78:	addcs	r2, r2, #1
   14b7c:	strcs	r2, [r4, #36]	; 0x24
   14b80:	lsr	r2, r3, #29
   14b84:	ldr	r1, [r4, #36]	; 0x24
   14b88:	lsl	r3, r3, #3
   14b8c:	rev	r3, r3
   14b90:	orr	r2, r2, r1, lsl #3
   14b94:	add	r1, r4, r5, lsl #2
   14b98:	sub	r5, r5, #-1073741822	; 0xc0000002
   14b9c:	lsl	r5, r5, #2
   14ba0:	rev	r2, r2
   14ba4:	strd	r2, [r1, #36]	; 0x24
   14ba8:	sub	r2, r5, r0
   14bac:	add	r0, r6, r0
   14bb0:	ldr	r1, [pc, #20]	; 14bcc <putchar_unlocked@plt+0x3ba4>
   14bb4:	bl	10de8 <memcpy@plt>
   14bb8:	mov	r2, r4
   14bbc:	add	r1, r5, #8
   14bc0:	mov	r0, r6
   14bc4:	pop	{r4, r5, r6, lr}
   14bc8:	b	128c4 <putchar_unlocked@plt+0x189c>
   14bcc:	andeq	r8, r1, r5, lsl r2
   14bd0:	push	{r4, r5, r6, lr}
   14bd4:	mov	r4, r0
   14bd8:	mov	r5, r1
   14bdc:	bl	14b4c <putchar_unlocked@plt+0x3b24>
   14be0:	mov	r1, r5
   14be4:	mov	r0, r4
   14be8:	pop	{r4, r5, r6, lr}
   14bec:	b	1287c <putchar_unlocked@plt+0x1854>
   14bf0:	push	{r4, r5, r6, lr}
   14bf4:	mov	r4, r0
   14bf8:	mov	r5, r1
   14bfc:	bl	14b4c <putchar_unlocked@plt+0x3b24>
   14c00:	mov	r1, r5
   14c04:	mov	r0, r4
   14c08:	pop	{r4, r5, r6, lr}
   14c0c:	b	128a0 <putchar_unlocked@plt+0x1878>
   14c10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c14:	mov	r6, r0
   14c18:	mov	r4, r1
   14c1c:	mov	r5, r2
   14c20:	ldr	r8, [r2, #40]	; 0x28
   14c24:	cmp	r8, #0
   14c28:	beq	14c98 <putchar_unlocked@plt+0x3c70>
   14c2c:	rsb	r7, r8, #128	; 0x80
   14c30:	add	r9, r2, #44	; 0x2c
   14c34:	cmp	r7, r1
   14c38:	movcs	r7, r1
   14c3c:	mov	r1, r0
   14c40:	mov	r2, r7
   14c44:	add	r0, r9, r8
   14c48:	bl	10de8 <memcpy@plt>
   14c4c:	ldr	r1, [r5, #40]	; 0x28
   14c50:	add	r1, r7, r1
   14c54:	cmp	r1, #64	; 0x40
   14c58:	str	r1, [r5, #40]	; 0x28
   14c5c:	bls	14c90 <putchar_unlocked@plt+0x3c68>
   14c60:	mov	r2, r5
   14c64:	bic	r1, r1, #63	; 0x3f
   14c68:	mov	r0, r9
   14c6c:	bl	128c4 <putchar_unlocked@plt+0x189c>
   14c70:	ldr	r2, [r5, #40]	; 0x28
   14c74:	add	r1, r8, r7
   14c78:	mov	r0, r9
   14c7c:	bic	r1, r1, #63	; 0x3f
   14c80:	add	r1, r9, r1
   14c84:	and	r2, r2, #63	; 0x3f
   14c88:	str	r2, [r5, #40]	; 0x28
   14c8c:	bl	10de8 <memcpy@plt>
   14c90:	add	r6, r6, r7
   14c94:	sub	r4, r4, r7
   14c98:	cmp	r4, #63	; 0x3f
   14c9c:	bls	14cd0 <putchar_unlocked@plt+0x3ca8>
   14ca0:	tst	r6, #3
   14ca4:	movne	r7, r4
   14ca8:	addne	r9, r6, r4
   14cac:	addne	r8, r5, #44	; 0x2c
   14cb0:	bne	14d08 <putchar_unlocked@plt+0x3ce0>
   14cb4:	bic	r7, r4, #63	; 0x3f
   14cb8:	mov	r0, r6
   14cbc:	mov	r2, r5
   14cc0:	mov	r1, r7
   14cc4:	add	r6, r6, r7
   14cc8:	and	r4, r4, #63	; 0x3f
   14ccc:	bl	128c4 <putchar_unlocked@plt+0x189c>
   14cd0:	cmp	r4, #0
   14cd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cd8:	b	14d28 <putchar_unlocked@plt+0x3d00>
   14cdc:	mov	r2, r8
   14ce0:	add	r1, r3, #64	; 0x40
   14ce4:	ldr	r0, [r3], #4
   14ce8:	cmp	r3, r1
   14cec:	str	r0, [r2], #4
   14cf0:	bne	14ce4 <putchar_unlocked@plt+0x3cbc>
   14cf4:	mov	r2, r5
   14cf8:	mov	r1, #64	; 0x40
   14cfc:	mov	r0, r8
   14d00:	sub	r7, r7, #64	; 0x40
   14d04:	bl	128c4 <putchar_unlocked@plt+0x189c>
   14d08:	cmp	r7, #64	; 0x40
   14d0c:	sub	r3, r9, r7
   14d10:	bhi	14cdc <putchar_unlocked@plt+0x3cb4>
   14d14:	sub	r3, r4, #1
   14d18:	mvn	r2, #63	; 0x3f
   14d1c:	lsr	r3, r3, #6
   14d20:	add	r6, r6, r3, lsl #6
   14d24:	mla	r4, r2, r3, r4
   14d28:	ldr	r7, [r5, #40]	; 0x28
   14d2c:	add	r8, r5, #44	; 0x2c
   14d30:	mov	r2, r4
   14d34:	mov	r1, r6
   14d38:	add	r0, r8, r7
   14d3c:	add	r4, r7, r4
   14d40:	bl	10de8 <memcpy@plt>
   14d44:	cmp	r4, #63	; 0x3f
   14d48:	bls	14d70 <putchar_unlocked@plt+0x3d48>
   14d4c:	mov	r2, r5
   14d50:	mov	r1, #64	; 0x40
   14d54:	mov	r0, r8
   14d58:	sub	r4, r4, #64	; 0x40
   14d5c:	bl	128c4 <putchar_unlocked@plt+0x189c>
   14d60:	mov	r2, r4
   14d64:	add	r1, r5, #108	; 0x6c
   14d68:	mov	r0, r8
   14d6c:	bl	10de8 <memcpy@plt>
   14d70:	str	r4, [r5, #40]	; 0x28
   14d74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d78:	push	{r4, r5, lr}
   14d7c:	sub	sp, sp, #180	; 0xb4
   14d80:	mov	r5, r0
   14d84:	add	r0, sp, #4
   14d88:	mov	r4, r2
   14d8c:	bl	127a8 <putchar_unlocked@plt+0x1780>
   14d90:	add	r2, sp, #4
   14d94:	mov	r0, r5
   14d98:	bl	14c10 <putchar_unlocked@plt+0x3be8>
   14d9c:	mov	r1, r4
   14da0:	add	r0, sp, #4
   14da4:	bl	14bd0 <putchar_unlocked@plt+0x3ba8>
   14da8:	add	sp, sp, #180	; 0xb4
   14dac:	pop	{r4, r5, pc}
   14db0:	push	{r4, r5, lr}
   14db4:	sub	sp, sp, #180	; 0xb4
   14db8:	mov	r5, r0
   14dbc:	add	r0, sp, #4
   14dc0:	mov	r4, r2
   14dc4:	bl	1280c <putchar_unlocked@plt+0x17e4>
   14dc8:	add	r2, sp, #4
   14dcc:	mov	r0, r5
   14dd0:	bl	14c10 <putchar_unlocked@plt+0x3be8>
   14dd4:	mov	r1, r4
   14dd8:	add	r0, sp, #4
   14ddc:	bl	14bf0 <putchar_unlocked@plt+0x3bc8>
   14de0:	add	sp, sp, #180	; 0xb4
   14de4:	pop	{r4, r5, pc}
   14de8:	b	10db8 <posix_fadvise64@plt>
   14dec:	cmp	r0, #0
   14df0:	bxeq	lr
   14df4:	push	{r0, r1, r2, r3, r4, lr}
   14df8:	mov	r4, r1
   14dfc:	bl	10f44 <fileno@plt>
   14e00:	mov	r2, #0
   14e04:	mov	r3, #0
   14e08:	strd	r2, [sp]
   14e0c:	str	r4, [sp, #8]
   14e10:	bl	10db8 <posix_fadvise64@plt>
   14e14:	add	sp, sp, #16
   14e18:	pop	{r4, pc}
   14e1c:	push	{r0, r1, r2, r4, r5, lr}
   14e20:	mov	r4, r0
   14e24:	bl	10f44 <fileno@plt>
   14e28:	cmp	r0, #0
   14e2c:	mov	r0, r4
   14e30:	bge	14e40 <putchar_unlocked@plt+0x3e18>
   14e34:	add	sp, sp, #12
   14e38:	pop	{r4, r5, lr}
   14e3c:	b	10f5c <fclose@plt>
   14e40:	bl	10ea8 <__freading@plt>
   14e44:	cmp	r0, #0
   14e48:	bne	14e84 <putchar_unlocked@plt+0x3e5c>
   14e4c:	mov	r0, r4
   14e50:	bl	14ec4 <putchar_unlocked@plt+0x3e9c>
   14e54:	cmp	r0, #0
   14e58:	bne	14eb8 <putchar_unlocked@plt+0x3e90>
   14e5c:	mov	r5, #0
   14e60:	mov	r0, r4
   14e64:	bl	10f5c <fclose@plt>
   14e68:	cmp	r5, #0
   14e6c:	beq	14e7c <putchar_unlocked@plt+0x3e54>
   14e70:	bl	10f08 <__errno_location@plt>
   14e74:	str	r5, [r0]
   14e78:	mvn	r0, #0
   14e7c:	add	sp, sp, #12
   14e80:	pop	{r4, r5, pc}
   14e84:	mov	r0, r4
   14e88:	bl	10f44 <fileno@plt>
   14e8c:	mov	r3, #1
   14e90:	mov	r2, #0
   14e94:	str	r3, [sp]
   14e98:	mov	r3, #0
   14e9c:	bl	10e48 <lseek64@plt>
   14ea0:	mvn	r3, #0
   14ea4:	mvn	r2, #0
   14ea8:	cmp	r1, r3
   14eac:	cmpeq	r0, r2
   14eb0:	bne	14e4c <putchar_unlocked@plt+0x3e24>
   14eb4:	b	14e5c <putchar_unlocked@plt+0x3e34>
   14eb8:	bl	10f08 <__errno_location@plt>
   14ebc:	ldr	r5, [r0]
   14ec0:	b	14e60 <putchar_unlocked@plt+0x3e38>
   14ec4:	push	{r0, r1, r4, lr}
   14ec8:	subs	r4, r0, #0
   14ecc:	bne	14ee0 <putchar_unlocked@plt+0x3eb8>
   14ed0:	mov	r0, r4
   14ed4:	add	sp, sp, #8
   14ed8:	pop	{r4, lr}
   14edc:	b	10dc4 <fflush@plt>
   14ee0:	bl	10ea8 <__freading@plt>
   14ee4:	cmp	r0, #0
   14ee8:	beq	14ed0 <putchar_unlocked@plt+0x3ea8>
   14eec:	ldr	r3, [r4]
   14ef0:	tst	r3, #256	; 0x100
   14ef4:	beq	14ed0 <putchar_unlocked@plt+0x3ea8>
   14ef8:	mov	r3, #1
   14efc:	mov	r2, #0
   14f00:	mov	r0, r4
   14f04:	str	r3, [sp]
   14f08:	mov	r3, #0
   14f0c:	bl	14ff8 <putchar_unlocked@plt+0x3fd0>
   14f10:	b	14ed0 <putchar_unlocked@plt+0x3ea8>
   14f14:	push	{r4, r5, r6, lr}
   14f18:	mov	r6, r1
   14f1c:	bl	10fb0 <fopen64@plt>
   14f20:	subs	r4, r0, #0
   14f24:	beq	14f5c <putchar_unlocked@plt+0x3f34>
   14f28:	bl	10f44 <fileno@plt>
   14f2c:	cmp	r0, #2
   14f30:	bhi	14f5c <putchar_unlocked@plt+0x3f34>
   14f34:	bl	1669c <putchar_unlocked@plt+0x5674>
   14f38:	subs	r5, r0, #0
   14f3c:	bge	14f64 <putchar_unlocked@plt+0x3f3c>
   14f40:	bl	10f08 <__errno_location@plt>
   14f44:	mov	r5, r0
   14f48:	mov	r0, r4
   14f4c:	ldr	r6, [r5]
   14f50:	bl	14e1c <putchar_unlocked@plt+0x3df4>
   14f54:	str	r6, [r5]
   14f58:	mov	r4, #0
   14f5c:	mov	r0, r4
   14f60:	pop	{r4, r5, r6, pc}
   14f64:	mov	r0, r4
   14f68:	bl	14e1c <putchar_unlocked@plt+0x3df4>
   14f6c:	cmp	r0, #0
   14f70:	beq	14f90 <putchar_unlocked@plt+0x3f68>
   14f74:	bl	10f08 <__errno_location@plt>
   14f78:	mov	r4, r0
   14f7c:	mov	r0, r5
   14f80:	ldr	r6, [r4]
   14f84:	bl	11010 <close@plt>
   14f88:	str	r6, [r4]
   14f8c:	b	14f58 <putchar_unlocked@plt+0x3f30>
   14f90:	mov	r1, r6
   14f94:	mov	r0, r5
   14f98:	bl	10d7c <fdopen@plt>
   14f9c:	subs	r4, r0, #0
   14fa0:	bne	14f5c <putchar_unlocked@plt+0x3f34>
   14fa4:	b	14f74 <putchar_unlocked@plt+0x3f4c>
   14fa8:	push	{r0, r1, r2, r4, r5, lr}
   14fac:	mov	r5, r0
   14fb0:	bl	10f08 <__errno_location@plt>
   14fb4:	mov	r4, r0
   14fb8:	mov	r0, r5
   14fbc:	ldr	r3, [r4]
   14fc0:	str	r3, [sp]
   14fc4:	str	r3, [sp, #4]
   14fc8:	mov	r3, #0
   14fcc:	str	r3, [r4]
   14fd0:	bl	10dd0 <free@plt>
   14fd4:	ldr	r3, [r4]
   14fd8:	add	r2, sp, #8
   14fdc:	clz	r3, r3
   14fe0:	lsr	r3, r3, #5
   14fe4:	add	r3, r2, r3, lsl #2
   14fe8:	ldr	r3, [r3, #-8]
   14fec:	str	r3, [r4]
   14ff0:	add	sp, sp, #12
   14ff4:	pop	{r4, r5, pc}
   14ff8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14ffc:	mov	r4, r0
   15000:	ldmib	r0, {ip, lr}
   15004:	ldr	r8, [sp, #32]
   15008:	cmp	lr, ip
   1500c:	bne	1507c <putchar_unlocked@plt+0x4054>
   15010:	ldr	ip, [r0, #16]
   15014:	ldr	lr, [r0, #20]
   15018:	cmp	lr, ip
   1501c:	bne	1507c <putchar_unlocked@plt+0x4054>
   15020:	ldr	r5, [r0, #36]	; 0x24
   15024:	cmp	r5, #0
   15028:	bne	1507c <putchar_unlocked@plt+0x4054>
   1502c:	mov	r6, r2
   15030:	mov	r7, r3
   15034:	bl	10f44 <fileno@plt>
   15038:	mov	r2, r6
   1503c:	mov	r3, r7
   15040:	str	r8, [sp]
   15044:	bl	10e48 <lseek64@plt>
   15048:	mvn	r3, #0
   1504c:	mvn	r2, #0
   15050:	cmp	r1, r3
   15054:	cmpeq	r0, r2
   15058:	mvneq	r0, #0
   1505c:	beq	15074 <putchar_unlocked@plt+0x404c>
   15060:	ldr	r3, [r4]
   15064:	strd	r0, [r4, #80]	; 0x50
   15068:	mov	r0, r5
   1506c:	bic	r3, r3, #16
   15070:	str	r3, [r4]
   15074:	add	sp, sp, #8
   15078:	pop	{r4, r5, r6, r7, r8, pc}
   1507c:	mov	r0, r4
   15080:	str	r8, [sp, #32]
   15084:	add	sp, sp, #8
   15088:	pop	{r4, r5, r6, r7, r8, lr}
   1508c:	b	10f68 <fseeko64@plt>
   15090:	push	{r4, r5, r6, lr}
   15094:	subs	r4, r0, #0
   15098:	bne	150b0 <putchar_unlocked@plt+0x4088>
   1509c:	ldr	r3, [pc, #124]	; 15120 <putchar_unlocked@plt+0x40f8>
   150a0:	ldr	r0, [pc, #124]	; 15124 <putchar_unlocked@plt+0x40fc>
   150a4:	ldr	r1, [r3]
   150a8:	bl	10fe0 <fputs@plt>
   150ac:	bl	10ff8 <abort@plt>
   150b0:	mov	r1, #47	; 0x2f
   150b4:	bl	10f8c <strrchr@plt>
   150b8:	subs	r6, r0, #0
   150bc:	beq	1510c <putchar_unlocked@plt+0x40e4>
   150c0:	add	r5, r6, #1
   150c4:	sub	r3, r5, r4
   150c8:	cmp	r3, #6
   150cc:	ble	1510c <putchar_unlocked@plt+0x40e4>
   150d0:	mov	r2, #7
   150d4:	ldr	r1, [pc, #76]	; 15128 <putchar_unlocked@plt+0x4100>
   150d8:	sub	r0, r6, #6
   150dc:	bl	10fec <strncmp@plt>
   150e0:	cmp	r0, #0
   150e4:	bne	1510c <putchar_unlocked@plt+0x40e4>
   150e8:	mov	r2, #3
   150ec:	ldr	r1, [pc, #56]	; 1512c <putchar_unlocked@plt+0x4104>
   150f0:	mov	r0, r5
   150f4:	bl	10fec <strncmp@plt>
   150f8:	cmp	r0, #0
   150fc:	ldreq	r3, [pc, #44]	; 15130 <putchar_unlocked@plt+0x4108>
   15100:	addeq	r4, r6, #4
   15104:	movne	r4, r5
   15108:	streq	r4, [r3]
   1510c:	ldr	r3, [pc, #32]	; 15134 <putchar_unlocked@plt+0x410c>
   15110:	str	r4, [r3]
   15114:	ldr	r3, [pc, #28]	; 15138 <putchar_unlocked@plt+0x4110>
   15118:	str	r4, [r3]
   1511c:	pop	{r4, r5, r6, pc}
   15120:	andeq	r9, r2, r0, ror #2
   15124:	andeq	r8, r1, r5, asr r2
   15128:	andeq	r8, r1, sp, lsl #5
   1512c:	muleq	r1, r5, r2
   15130:	andeq	r9, r2, r0, asr r1
   15134:	andeq	r9, r2, ip, lsl #3
   15138:	andeq	r9, r2, r4, asr r1
   1513c:	push	{r4, lr}
   15140:	mov	r2, #48	; 0x30
   15144:	mov	r4, r1
   15148:	mov	r1, #0
   1514c:	bl	10f2c <memset@plt>
   15150:	cmp	r4, #10
   15154:	bne	1515c <putchar_unlocked@plt+0x4134>
   15158:	bl	10ff8 <abort@plt>
   1515c:	str	r4, [r0]
   15160:	pop	{r4, pc}
   15164:	push	{r4, r5, r6, lr}
   15168:	mov	r2, #5
   1516c:	mov	r6, r0
   15170:	mov	r5, r1
   15174:	mov	r1, r0
   15178:	mov	r0, #0
   1517c:	bl	10e18 <dcgettext@plt>
   15180:	cmp	r6, r0
   15184:	mov	r4, r0
   15188:	bne	151f8 <putchar_unlocked@plt+0x41d0>
   1518c:	bl	171b4 <putchar_unlocked@plt+0x618c>
   15190:	ldrb	r3, [r0]
   15194:	bic	r3, r3, #32
   15198:	cmp	r3, #85	; 0x55
   1519c:	bne	15200 <putchar_unlocked@plt+0x41d8>
   151a0:	ldrb	r3, [r0, #1]
   151a4:	bic	r3, r3, #32
   151a8:	cmp	r3, #84	; 0x54
   151ac:	bne	15270 <putchar_unlocked@plt+0x4248>
   151b0:	ldrb	r3, [r0, #2]
   151b4:	bic	r3, r3, #32
   151b8:	cmp	r3, #70	; 0x46
   151bc:	bne	15270 <putchar_unlocked@plt+0x4248>
   151c0:	ldrb	r3, [r0, #3]
   151c4:	cmp	r3, #45	; 0x2d
   151c8:	bne	15270 <putchar_unlocked@plt+0x4248>
   151cc:	ldrb	r3, [r0, #4]
   151d0:	cmp	r3, #56	; 0x38
   151d4:	bne	15270 <putchar_unlocked@plt+0x4248>
   151d8:	ldrb	r3, [r0, #5]
   151dc:	cmp	r3, #0
   151e0:	bne	15270 <putchar_unlocked@plt+0x4248>
   151e4:	ldrb	r2, [r4]
   151e8:	ldr	r3, [pc, #144]	; 15280 <putchar_unlocked@plt+0x4258>
   151ec:	ldr	r4, [pc, #144]	; 15284 <putchar_unlocked@plt+0x425c>
   151f0:	cmp	r2, #96	; 0x60
   151f4:	movne	r4, r3
   151f8:	mov	r0, r4
   151fc:	pop	{r4, r5, r6, pc}
   15200:	cmp	r3, #71	; 0x47
   15204:	bne	15270 <putchar_unlocked@plt+0x4248>
   15208:	ldrb	r3, [r0, #1]
   1520c:	bic	r3, r3, #32
   15210:	cmp	r3, #66	; 0x42
   15214:	bne	15270 <putchar_unlocked@plt+0x4248>
   15218:	ldrb	r3, [r0, #2]
   1521c:	cmp	r3, #49	; 0x31
   15220:	bne	15270 <putchar_unlocked@plt+0x4248>
   15224:	ldrb	r3, [r0, #3]
   15228:	cmp	r3, #56	; 0x38
   1522c:	bne	15270 <putchar_unlocked@plt+0x4248>
   15230:	ldrb	r3, [r0, #4]
   15234:	cmp	r3, #48	; 0x30
   15238:	bne	15270 <putchar_unlocked@plt+0x4248>
   1523c:	ldrb	r3, [r0, #5]
   15240:	cmp	r3, #51	; 0x33
   15244:	bne	15270 <putchar_unlocked@plt+0x4248>
   15248:	ldrb	r3, [r0, #6]
   1524c:	cmp	r3, #48	; 0x30
   15250:	bne	15270 <putchar_unlocked@plt+0x4248>
   15254:	ldrb	r3, [r0, #7]
   15258:	cmp	r3, #0
   1525c:	bne	15270 <putchar_unlocked@plt+0x4248>
   15260:	ldrb	r2, [r4]
   15264:	ldr	r3, [pc, #28]	; 15288 <putchar_unlocked@plt+0x4260>
   15268:	ldr	r4, [pc, #28]	; 1528c <putchar_unlocked@plt+0x4264>
   1526c:	b	151f0 <putchar_unlocked@plt+0x41c8>
   15270:	ldr	r4, [pc, #24]	; 15290 <putchar_unlocked@plt+0x4268>
   15274:	cmp	r5, #9
   15278:	ldr	r3, [pc, #20]	; 15294 <putchar_unlocked@plt+0x426c>
   1527c:	b	151f4 <putchar_unlocked@plt+0x41cc>
   15280:	strdeq	r8, [r1], -r2
   15284:	strdeq	r8, [r1], -sp
   15288:	strdeq	r8, [r1], -r6
   1528c:	strdeq	r8, [r1], -r9
   15290:	strdeq	r8, [r1], -r0
   15294:	andeq	r8, r1, r1, lsl #6
   15298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1529c:	sub	sp, sp, #108	; 0x6c
   152a0:	mov	r8, r0
   152a4:	mov	r5, r1
   152a8:	mov	r6, #0
   152ac:	str	r3, [sp, #40]	; 0x28
   152b0:	str	r2, [sp, #48]	; 0x30
   152b4:	ldr	sl, [sp, #144]	; 0x90
   152b8:	bl	10e54 <__ctype_get_mb_cur_max@plt>
   152bc:	ldr	r3, [sp, #148]	; 0x94
   152c0:	str	r6, [sp, #24]
   152c4:	str	r6, [sp, #32]
   152c8:	str	r6, [sp, #44]	; 0x2c
   152cc:	str	r6, [sp, #52]	; 0x34
   152d0:	ubfx	r7, r3, #1, #1
   152d4:	mov	r3, #1
   152d8:	str	r6, [sp, #60]	; 0x3c
   152dc:	str	r3, [sp, #72]	; 0x48
   152e0:	str	r0, [sp, #76]	; 0x4c
   152e4:	cmp	sl, #10
   152e8:	ldrls	pc, [pc, sl, lsl #2]
   152ec:	b	15530 <putchar_unlocked@plt+0x4508>
   152f0:	andeq	r5, r1, ip, lsl r3
   152f4:	andeq	r5, r1, r8, asr #10
   152f8:	andeq	r5, r1, ip, asr #9
   152fc:	andeq	r5, r1, r4, ror #9
   15300:			; <UNDEFINED> instruction: 0x000154b4
   15304:	andeq	r5, r1, ip, lsl #8
   15308:	andeq	r5, r1, ip, ror #7
   1530c:	andeq	r5, r1, r4, lsr r5
   15310:	andeq	r5, r1, ip, lsr r4
   15314:	andeq	r5, r1, ip, lsr r4
   15318:	andeq	r5, r1, ip, lsr r4
   1531c:	mov	r4, sl
   15320:	mov	r7, #0
   15324:	mov	r9, r5
   15328:	mov	r3, #0
   1532c:	str	r6, [sp, #68]	; 0x44
   15330:	str	r3, [sp, #28]
   15334:	ldr	r3, [sp, #40]	; 0x28
   15338:	cmn	r3, #1
   1533c:	bne	15edc <putchar_unlocked@plt+0x4eb4>
   15340:	ldr	r2, [sp, #28]
   15344:	ldr	r3, [sp, #48]	; 0x30
   15348:	ldrb	r3, [r3, r2]
   1534c:	adds	r3, r3, #0
   15350:	movne	r3, #1
   15354:	str	r3, [sp, #36]	; 0x24
   15358:	ldr	r3, [sp, #36]	; 0x24
   1535c:	cmp	r3, #0
   15360:	bne	1556c <putchar_unlocked@plt+0x4544>
   15364:	sub	r3, sl, #2
   15368:	cmp	r4, #0
   1536c:	clz	r3, r3
   15370:	movne	r2, #0
   15374:	lsr	r3, r3, #5
   15378:	andeq	r2, r3, r7
   1537c:	cmp	r2, #0
   15380:	bne	15730 <putchar_unlocked@plt+0x4708>
   15384:	eor	r7, r7, #1
   15388:	ands	r3, r3, r7
   1538c:	beq	15f54 <putchar_unlocked@plt+0x4f2c>
   15390:	ldr	r2, [sp, #68]	; 0x44
   15394:	cmp	r2, #0
   15398:	beq	15f1c <putchar_unlocked@plt+0x4ef4>
   1539c:	ldr	r3, [sp, #72]	; 0x48
   153a0:	cmp	r3, #0
   153a4:	beq	15ef0 <putchar_unlocked@plt+0x4ec8>
   153a8:	ldr	r2, [sp, #48]	; 0x30
   153ac:	ldr	r3, [sp, #160]	; 0xa0
   153b0:	ldr	r1, [sp, #60]	; 0x3c
   153b4:	str	r3, [sp, #16]
   153b8:	ldr	r3, [sp, #156]	; 0x9c
   153bc:	str	r3, [sp, #12]
   153c0:	ldr	r3, [sp, #152]	; 0x98
   153c4:	str	r3, [sp, #8]
   153c8:	ldr	r3, [sp, #148]	; 0x94
   153cc:	str	r3, [sp, #4]
   153d0:	mov	r3, #5
   153d4:	str	r3, [sp]
   153d8:	ldr	r3, [sp, #40]	; 0x28
   153dc:	mov	r0, r8
   153e0:	bl	15298 <putchar_unlocked@plt+0x4270>
   153e4:	mov	r4, r0
   153e8:	b	15f48 <putchar_unlocked@plt+0x4f20>
   153ec:	ldr	r3, [pc, #2948]	; 15f78 <putchar_unlocked@plt+0x4f50>
   153f0:	mov	r7, #1
   153f4:	mov	r4, #0
   153f8:	mov	sl, #5
   153fc:	str	r7, [sp, #24]
   15400:	str	r7, [sp, #32]
   15404:	str	r3, [sp, #44]	; 0x2c
   15408:	b	15324 <putchar_unlocked@plt+0x42fc>
   1540c:	cmp	r7, #0
   15410:	bne	15554 <putchar_unlocked@plt+0x452c>
   15414:	cmp	r5, #0
   15418:	mov	r4, #1
   1541c:	movne	r3, #34	; 0x22
   15420:	strbne	r3, [r8]
   15424:	mov	r3, #1
   15428:	str	r3, [sp, #24]
   1542c:	str	r3, [sp, #32]
   15430:	ldr	r3, [pc, #2880]	; 15f78 <putchar_unlocked@plt+0x4f50>
   15434:	str	r3, [sp, #44]	; 0x2c
   15438:	b	15324 <putchar_unlocked@plt+0x42fc>
   1543c:	cmp	sl, #10
   15440:	beq	15464 <putchar_unlocked@plt+0x443c>
   15444:	mov	r1, sl
   15448:	ldr	r0, [pc, #2860]	; 15f7c <putchar_unlocked@plt+0x4f54>
   1544c:	bl	15164 <putchar_unlocked@plt+0x413c>
   15450:	mov	r1, sl
   15454:	str	r0, [sp, #156]	; 0x9c
   15458:	ldr	r0, [pc, #2848]	; 15f80 <putchar_unlocked@plt+0x4f58>
   1545c:	bl	15164 <putchar_unlocked@plt+0x413c>
   15460:	str	r0, [sp, #160]	; 0xa0
   15464:	cmp	r7, #0
   15468:	moveq	r4, r7
   1546c:	beq	15484 <putchar_unlocked@plt+0x445c>
   15470:	mov	r4, #0
   15474:	b	15494 <putchar_unlocked@plt+0x446c>
   15478:	cmp	r5, r4
   1547c:	strbhi	r3, [r8, r4]
   15480:	add	r4, r4, #1
   15484:	ldr	r3, [sp, #156]	; 0x9c
   15488:	ldrb	r3, [r3, r4]
   1548c:	cmp	r3, #0
   15490:	bne	15478 <putchar_unlocked@plt+0x4450>
   15494:	ldr	r0, [sp, #160]	; 0xa0
   15498:	bl	10ef0 <strlen@plt>
   1549c:	ldr	r3, [sp, #160]	; 0xa0
   154a0:	str	r0, [sp, #32]
   154a4:	str	r3, [sp, #44]	; 0x2c
   154a8:	mov	r3, #1
   154ac:	str	r3, [sp, #24]
   154b0:	b	15324 <putchar_unlocked@plt+0x42fc>
   154b4:	mov	r3, #1
   154b8:	cmp	r7, #0
   154bc:	streq	r3, [sp, #24]
   154c0:	beq	15504 <putchar_unlocked@plt+0x44dc>
   154c4:	str	r3, [sp, #32]
   154c8:	b	154f0 <putchar_unlocked@plt+0x44c8>
   154cc:	cmp	r7, #0
   154d0:	beq	15504 <putchar_unlocked@plt+0x44dc>
   154d4:	mov	r3, #1
   154d8:	str	r3, [sp, #32]
   154dc:	ldr	r3, [pc, #2716]	; 15f80 <putchar_unlocked@plt+0x4f58>
   154e0:	b	15564 <putchar_unlocked@plt+0x453c>
   154e4:	mov	r7, #1
   154e8:	str	r7, [sp, #24]
   154ec:	str	r7, [sp, #32]
   154f0:	ldr	r3, [pc, #2696]	; 15f80 <putchar_unlocked@plt+0x4f58>
   154f4:	mov	r4, #0
   154f8:	str	r3, [sp, #44]	; 0x2c
   154fc:	mov	sl, #2
   15500:	b	15324 <putchar_unlocked@plt+0x42fc>
   15504:	cmp	r5, #0
   15508:	movne	r3, #39	; 0x27
   1550c:	movne	r7, #0
   15510:	strbne	r3, [r8]
   15514:	moveq	r7, r5
   15518:	mov	r3, #1
   1551c:	mov	r4, #1
   15520:	str	r3, [sp, #32]
   15524:	ldr	r3, [pc, #2644]	; 15f80 <putchar_unlocked@plt+0x4f58>
   15528:	str	r3, [sp, #44]	; 0x2c
   1552c:	b	154fc <putchar_unlocked@plt+0x44d4>
   15530:	bl	10ff8 <abort@plt>
   15534:	mov	r3, #1
   15538:	mov	r7, #0
   1553c:	str	r3, [sp, #24]
   15540:	mov	r4, #0
   15544:	b	15324 <putchar_unlocked@plt+0x42fc>
   15548:	mov	r7, #1
   1554c:	str	sl, [sp, #32]
   15550:	b	154f0 <putchar_unlocked@plt+0x44c8>
   15554:	mov	r3, #1
   15558:	str	r7, [sp, #24]
   1555c:	str	r3, [sp, #32]
   15560:	ldr	r3, [pc, #2576]	; 15f78 <putchar_unlocked@plt+0x4f50>
   15564:	str	r3, [sp, #44]	; 0x2c
   15568:	b	15540 <putchar_unlocked@plt+0x4518>
   1556c:	ldr	fp, [sp, #24]
   15570:	ldr	r3, [sp, #32]
   15574:	cmp	sl, #2
   15578:	moveq	fp, #0
   1557c:	andne	fp, fp, #1
   15580:	adds	r5, r3, #0
   15584:	movne	r5, #1
   15588:	ands	r3, fp, r5
   1558c:	str	r3, [sp, #64]	; 0x40
   15590:	beq	15660 <putchar_unlocked@plt+0x4638>
   15594:	ldr	r3, [sp, #28]
   15598:	ldr	r2, [sp, #32]
   1559c:	cmp	r2, #1
   155a0:	add	r6, r3, r2
   155a4:	mov	r3, r2
   155a8:	ldr	r2, [sp, #40]	; 0x28
   155ac:	movls	r3, #0
   155b0:	movhi	r3, #1
   155b4:	cmn	r2, #1
   155b8:	movne	r3, #0
   155bc:	cmp	r3, #0
   155c0:	beq	155d0 <putchar_unlocked@plt+0x45a8>
   155c4:	ldr	r0, [sp, #48]	; 0x30
   155c8:	bl	10ef0 <strlen@plt>
   155cc:	str	r0, [sp, #40]	; 0x28
   155d0:	ldr	r3, [sp, #40]	; 0x28
   155d4:	cmp	r6, r3
   155d8:	bhi	15658 <putchar_unlocked@plt+0x4630>
   155dc:	ldr	r0, [sp, #28]
   155e0:	ldr	r2, [sp, #32]
   155e4:	ldr	r3, [sp, #48]	; 0x30
   155e8:	ldr	r1, [sp, #44]	; 0x2c
   155ec:	add	r0, r3, r0
   155f0:	bl	10e00 <memcmp@plt>
   155f4:	cmp	r0, #0
   155f8:	bne	15658 <putchar_unlocked@plt+0x4630>
   155fc:	cmp	r7, #0
   15600:	beq	15660 <putchar_unlocked@plt+0x4638>
   15604:	str	r7, [sp, #24]
   15608:	ldr	r3, [sp, #24]
   1560c:	mov	r1, r9
   15610:	ldr	r2, [sp, #48]	; 0x30
   15614:	cmp	sl, #2
   15618:	movne	r3, #0
   1561c:	andeq	r3, r3, #1
   15620:	cmp	r3, #0
   15624:	ldr	r3, [sp, #160]	; 0xa0
   15628:	movne	sl, #4
   1562c:	str	sl, [sp]
   15630:	str	r3, [sp, #16]
   15634:	ldr	r3, [sp, #156]	; 0x9c
   15638:	str	r3, [sp, #12]
   1563c:	mov	r3, #0
   15640:	str	r3, [sp, #8]
   15644:	ldr	r3, [sp, #148]	; 0x94
   15648:	bic	r3, r3, #2
   1564c:	str	r3, [sp, #4]
   15650:	ldr	r3, [sp, #40]	; 0x28
   15654:	b	153dc <putchar_unlocked@plt+0x43b4>
   15658:	mov	r3, #0
   1565c:	str	r3, [sp, #64]	; 0x40
   15660:	ldr	r2, [sp, #28]
   15664:	ldr	r3, [sp, #48]	; 0x30
   15668:	add	r3, r3, r2
   1566c:	str	r3, [sp, #80]	; 0x50
   15670:	ldr	r3, [sp, #48]	; 0x30
   15674:	ldrb	r6, [r3, r2]
   15678:	cmp	r6, #58	; 0x3a
   1567c:	bhi	157e0 <putchar_unlocked@plt+0x47b8>
   15680:	cmp	r6, #43	; 0x2b
   15684:	bcs	159a0 <putchar_unlocked@plt+0x4978>
   15688:	cmp	r6, #32
   1568c:	beq	159f4 <putchar_unlocked@plt+0x49cc>
   15690:	bhi	15738 <putchar_unlocked@plt+0x4710>
   15694:	cmp	r6, #9
   15698:	beq	15b9c <putchar_unlocked@plt+0x4b74>
   1569c:	bhi	156fc <putchar_unlocked@plt+0x46d4>
   156a0:	cmp	r6, #7
   156a4:	beq	15bac <putchar_unlocked@plt+0x4b84>
   156a8:	bhi	15bc8 <putchar_unlocked@plt+0x4ba0>
   156ac:	cmp	r6, #0
   156b0:	beq	15a10 <putchar_unlocked@plt+0x49e8>
   156b4:	ldr	r3, [sp, #76]	; 0x4c
   156b8:	cmp	r3, #1
   156bc:	bne	15c14 <putchar_unlocked@plt+0x4bec>
   156c0:	bl	10ed8 <__ctype_b_loc@plt>
   156c4:	ldr	r2, [r0]
   156c8:	sxth	r3, r6
   156cc:	lsl	r3, r3, #1
   156d0:	ldrh	r5, [r2, r3]
   156d4:	ldr	r3, [sp, #76]	; 0x4c
   156d8:	ubfx	r5, r5, #14, #1
   156dc:	str	r3, [sp, #56]	; 0x38
   156e0:	ldr	r3, [sp, #24]
   156e4:	eor	fp, r5, #1
   156e8:	and	fp, fp, r3
   156ec:	ands	fp, fp, #255	; 0xff
   156f0:	beq	158d0 <putchar_unlocked@plt+0x48a8>
   156f4:	mov	r5, #0
   156f8:	b	15cc0 <putchar_unlocked@plt+0x4c98>
   156fc:	cmp	r6, #11
   15700:	beq	15bd0 <putchar_unlocked@plt+0x4ba8>
   15704:	bcc	15ba4 <putchar_unlocked@plt+0x4b7c>
   15708:	cmp	r6, #12
   1570c:	beq	15bd8 <putchar_unlocked@plt+0x4bb0>
   15710:	cmp	r6, #13
   15714:	moveq	r3, #114	; 0x72
   15718:	bne	156b4 <putchar_unlocked@plt+0x468c>
   1571c:	cmp	sl, #2
   15720:	movne	r2, #0
   15724:	andeq	r2, r7, #1
   15728:	cmp	r2, #0
   1572c:	beq	15bb0 <putchar_unlocked@plt+0x4b88>
   15730:	mov	sl, #2
   15734:	b	15608 <putchar_unlocked@plt+0x45e0>
   15738:	cmp	r6, #37	; 0x25
   1573c:	beq	159a0 <putchar_unlocked@plt+0x4978>
   15740:	bhi	15754 <putchar_unlocked@plt+0x472c>
   15744:	cmp	r6, #35	; 0x23
   15748:	beq	159e8 <putchar_unlocked@plt+0x49c0>
   1574c:	mov	r5, #0
   15750:	b	159f8 <putchar_unlocked@plt+0x49d0>
   15754:	cmp	r6, #39	; 0x27
   15758:	bne	1574c <putchar_unlocked@plt+0x4724>
   1575c:	cmp	sl, #2
   15760:	ldrne	r5, [sp, #36]	; 0x24
   15764:	movne	r3, r5
   15768:	strne	r3, [sp, #68]	; 0x44
   1576c:	bne	15aec <putchar_unlocked@plt+0x4ac4>
   15770:	cmp	r7, #0
   15774:	bne	15608 <putchar_unlocked@plt+0x45e0>
   15778:	ldr	r3, [sp, #60]	; 0x3c
   1577c:	cmp	r9, #0
   15780:	clz	r3, r3
   15784:	lsr	r3, r3, #5
   15788:	moveq	r3, #0
   1578c:	cmp	r3, #0
   15790:	strne	r9, [sp, #60]	; 0x3c
   15794:	movne	r9, #0
   15798:	bne	157a8 <putchar_unlocked@plt+0x4780>
   1579c:	cmp	r9, r4
   157a0:	movhi	r3, #39	; 0x27
   157a4:	strbhi	r3, [r8, r4]
   157a8:	add	r3, r4, #1
   157ac:	ldr	r5, [sp, #36]	; 0x24
   157b0:	mov	fp, #0
   157b4:	cmp	r3, r9
   157b8:	movcc	r2, #92	; 0x5c
   157bc:	str	fp, [sp, #52]	; 0x34
   157c0:	strbcc	r2, [r8, r3]
   157c4:	add	r3, r4, #2
   157c8:	add	r4, r4, #3
   157cc:	cmp	r3, r9
   157d0:	str	r5, [sp, #68]	; 0x44
   157d4:	movcc	r2, #39	; 0x27
   157d8:	strbcc	r2, [r8, r3]
   157dc:	b	158d0 <putchar_unlocked@plt+0x48a8>
   157e0:	cmp	r6, #94	; 0x5e
   157e4:	beq	1574c <putchar_unlocked@plt+0x4724>
   157e8:	bhi	159a8 <putchar_unlocked@plt+0x4980>
   157ec:	cmp	r6, #90	; 0x5a
   157f0:	bhi	15994 <putchar_unlocked@plt+0x496c>
   157f4:	cmp	r6, #65	; 0x41
   157f8:	bcs	159a0 <putchar_unlocked@plt+0x4978>
   157fc:	cmp	r6, #62	; 0x3e
   15800:	bls	1574c <putchar_unlocked@plt+0x4724>
   15804:	cmp	r6, #63	; 0x3f
   15808:	bne	156b4 <putchar_unlocked@plt+0x468c>
   1580c:	cmp	sl, #2
   15810:	beq	15af4 <putchar_unlocked@plt+0x4acc>
   15814:	cmp	sl, #5
   15818:	movne	fp, #0
   1581c:	bne	15ec4 <putchar_unlocked@plt+0x4e9c>
   15820:	ldr	r3, [sp, #148]	; 0x94
   15824:	tst	r3, #4
   15828:	beq	15afc <putchar_unlocked@plt+0x4ad4>
   1582c:	ldr	r3, [sp, #28]
   15830:	add	r2, r3, #2
   15834:	ldr	r3, [sp, #40]	; 0x28
   15838:	cmp	r2, r3
   1583c:	bcs	15afc <putchar_unlocked@plt+0x4ad4>
   15840:	ldr	r1, [sp, #28]
   15844:	ldr	r3, [sp, #48]	; 0x30
   15848:	add	r3, r3, r1
   1584c:	ldrb	r1, [r3, #1]
   15850:	cmp	r1, #63	; 0x3f
   15854:	bne	15afc <putchar_unlocked@plt+0x4ad4>
   15858:	ldr	r3, [sp, #48]	; 0x30
   1585c:	ldrb	r6, [r3, r2]
   15860:	sub	r3, r6, #33	; 0x21
   15864:	uxtb	r3, r3
   15868:	cmp	r3, #29
   1586c:	bhi	15ecc <putchar_unlocked@plt+0x4ea4>
   15870:	ldr	r0, [pc, #1804]	; 15f84 <putchar_unlocked@plt+0x4f5c>
   15874:	mov	r5, #1
   15878:	ands	r5, r0, r5, lsl r3
   1587c:	beq	15ed4 <putchar_unlocked@plt+0x4eac>
   15880:	cmp	r7, #0
   15884:	bne	15608 <putchar_unlocked@plt+0x45e0>
   15888:	cmp	r9, r4
   1588c:	add	r3, r4, #1
   15890:	str	r2, [sp, #28]
   15894:	mov	r5, #0
   15898:	strbhi	r1, [r8, r4]
   1589c:	cmp	r9, r3
   158a0:	mov	fp, r5
   158a4:	movhi	r1, #34	; 0x22
   158a8:	strbhi	r1, [r8, r3]
   158ac:	add	r3, r4, #2
   158b0:	cmp	r9, r3
   158b4:	movhi	r1, #34	; 0x22
   158b8:	strbhi	r1, [r8, r3]
   158bc:	add	r3, r4, #3
   158c0:	add	r4, r4, #4
   158c4:	cmp	r9, r3
   158c8:	movhi	r1, #63	; 0x3f
   158cc:	strbhi	r1, [r8, r3]
   158d0:	ldr	r3, [sp, #24]
   158d4:	eor	r3, r3, #1
   158d8:	cmp	sl, #2
   158dc:	orreq	r3, r3, #1
   158e0:	eor	r3, r3, #1
   158e4:	orr	r3, r7, r3
   158e8:	tst	r3, #255	; 0xff
   158ec:	beq	15918 <putchar_unlocked@plt+0x48f0>
   158f0:	ldr	r3, [sp, #152]	; 0x98
   158f4:	cmp	r3, #0
   158f8:	beq	15918 <putchar_unlocked@plt+0x48f0>
   158fc:	ldr	r1, [sp, #152]	; 0x98
   15900:	ubfx	r2, r6, #5, #8
   15904:	and	r3, r6, #31
   15908:	ldr	r2, [r1, r2, lsl #2]
   1590c:	lsr	r3, r2, r3
   15910:	tst	r3, #1
   15914:	bne	15924 <putchar_unlocked@plt+0x48fc>
   15918:	ldr	r3, [sp, #64]	; 0x40
   1591c:	cmp	r3, #0
   15920:	beq	15b1c <putchar_unlocked@plt+0x4af4>
   15924:	sub	r3, sl, #2
   15928:	cmp	r7, #0
   1592c:	clz	r3, r3
   15930:	lsr	r3, r3, #5
   15934:	bne	15608 <putchar_unlocked@plt+0x45e0>
   15938:	ldr	r2, [sp, #52]	; 0x34
   1593c:	eor	r2, r2, #1
   15940:	ands	r3, r3, r2
   15944:	beq	1597c <putchar_unlocked@plt+0x4954>
   15948:	cmp	r9, r4
   1594c:	str	r3, [sp, #52]	; 0x34
   15950:	movhi	r2, #39	; 0x27
   15954:	strbhi	r2, [r8, r4]
   15958:	add	r2, r4, #1
   1595c:	cmp	r9, r2
   15960:	movhi	r1, #36	; 0x24
   15964:	strbhi	r1, [r8, r2]
   15968:	add	r2, r4, #2
   1596c:	add	r4, r4, #3
   15970:	cmp	r9, r2
   15974:	movhi	r1, #39	; 0x27
   15978:	strbhi	r1, [r8, r2]
   1597c:	cmp	r9, r4
   15980:	ldr	fp, [sp, #36]	; 0x24
   15984:	movhi	r3, #92	; 0x5c
   15988:	strbhi	r3, [r8, r4]
   1598c:	add	r4, r4, #1
   15990:	b	15b1c <putchar_unlocked@plt+0x4af4>
   15994:	cmp	r6, #92	; 0x5c
   15998:	beq	15b04 <putchar_unlocked@plt+0x4adc>
   1599c:	bls	1574c <putchar_unlocked@plt+0x4724>
   159a0:	ldr	r5, [sp, #36]	; 0x24
   159a4:	b	15aec <putchar_unlocked@plt+0x4ac4>
   159a8:	cmp	r6, #122	; 0x7a
   159ac:	bhi	159cc <putchar_unlocked@plt+0x49a4>
   159b0:	cmp	r6, #97	; 0x61
   159b4:	bcs	159a0 <putchar_unlocked@plt+0x4978>
   159b8:	cmp	r6, #95	; 0x5f
   159bc:	beq	159a0 <putchar_unlocked@plt+0x4978>
   159c0:	cmp	r6, #96	; 0x60
   159c4:	bne	156b4 <putchar_unlocked@plt+0x468c>
   159c8:	b	1574c <putchar_unlocked@plt+0x4724>
   159cc:	cmp	r6, #124	; 0x7c
   159d0:	beq	1574c <putchar_unlocked@plt+0x4724>
   159d4:	bcc	15be0 <putchar_unlocked@plt+0x4bb8>
   159d8:	cmp	r6, #125	; 0x7d
   159dc:	beq	15be0 <putchar_unlocked@plt+0x4bb8>
   159e0:	cmp	r6, #126	; 0x7e
   159e4:	bne	156b4 <putchar_unlocked@plt+0x468c>
   159e8:	ldr	r3, [sp, #28]
   159ec:	cmp	r3, #0
   159f0:	bne	15afc <putchar_unlocked@plt+0x4ad4>
   159f4:	ldr	r5, [sp, #36]	; 0x24
   159f8:	cmp	sl, #2
   159fc:	movne	fp, #0
   15a00:	andeq	fp, r7, #1
   15a04:	cmp	fp, #0
   15a08:	beq	158d0 <putchar_unlocked@plt+0x48a8>
   15a0c:	b	15730 <putchar_unlocked@plt+0x4708>
   15a10:	ldr	r3, [sp, #24]
   15a14:	cmp	r3, #0
   15a18:	beq	15ae0 <putchar_unlocked@plt+0x4ab8>
   15a1c:	sub	r2, sl, #2
   15a20:	cmp	r7, #0
   15a24:	clz	r2, r2
   15a28:	lsr	r2, r2, #5
   15a2c:	bne	15604 <putchar_unlocked@plt+0x45dc>
   15a30:	ldr	r3, [sp, #52]	; 0x34
   15a34:	eor	r3, r3, #1
   15a38:	ands	r2, r2, r3
   15a3c:	moveq	r3, r4
   15a40:	beq	15a78 <putchar_unlocked@plt+0x4a50>
   15a44:	cmp	r9, r4
   15a48:	str	r2, [sp, #52]	; 0x34
   15a4c:	movhi	r3, #39	; 0x27
   15a50:	strbhi	r3, [r8, r4]
   15a54:	add	r3, r4, #1
   15a58:	cmp	r9, r3
   15a5c:	movhi	r1, #36	; 0x24
   15a60:	strbhi	r1, [r8, r3]
   15a64:	add	r3, r4, #2
   15a68:	cmp	r9, r3
   15a6c:	movhi	r1, #39	; 0x27
   15a70:	strbhi	r1, [r8, r3]
   15a74:	add	r3, r4, #3
   15a78:	cmp	r9, r3
   15a7c:	add	r4, r3, #1
   15a80:	movhi	r2, #92	; 0x5c
   15a84:	strbhi	r2, [r8, r3]
   15a88:	cmp	fp, #0
   15a8c:	beq	15eb4 <putchar_unlocked@plt+0x4e8c>
   15a90:	ldr	r2, [sp, #28]
   15a94:	ldr	r1, [sp, #40]	; 0x28
   15a98:	add	r2, r2, #1
   15a9c:	cmp	r2, r1
   15aa0:	bcs	15ad8 <putchar_unlocked@plt+0x4ab0>
   15aa4:	ldr	r1, [sp, #48]	; 0x30
   15aa8:	mov	r6, #48	; 0x30
   15aac:	ldrb	r2, [r1, r2]
   15ab0:	sub	r2, r2, #48	; 0x30
   15ab4:	cmp	r2, #9
   15ab8:	bhi	15ec4 <putchar_unlocked@plt+0x4e9c>
   15abc:	cmp	r9, r4
   15ac0:	add	r2, r3, #2
   15ac4:	strbhi	r6, [r8, r4]
   15ac8:	cmp	r9, r2
   15acc:	add	r4, r3, #3
   15ad0:	movhi	r1, #48	; 0x30
   15ad4:	strbhi	r1, [r8, r2]
   15ad8:	mov	r5, #0
   15adc:	b	15ebc <putchar_unlocked@plt+0x4e94>
   15ae0:	ldr	r3, [sp, #148]	; 0x94
   15ae4:	ands	r5, r3, #1
   15ae8:	bne	15b70 <putchar_unlocked@plt+0x4b48>
   15aec:	mov	fp, #0
   15af0:	b	158d0 <putchar_unlocked@plt+0x48a8>
   15af4:	cmp	r7, #0
   15af8:	bne	15608 <putchar_unlocked@plt+0x45e0>
   15afc:	mov	r5, #0
   15b00:	b	15aec <putchar_unlocked@plt+0x4ac4>
   15b04:	cmp	sl, #2
   15b08:	bne	15b7c <putchar_unlocked@plt+0x4b54>
   15b0c:	cmp	r7, #0
   15b10:	bne	15608 <putchar_unlocked@plt+0x45e0>
   15b14:	mov	r5, r7
   15b18:	mov	fp, r7
   15b1c:	ldr	r3, [sp, #52]	; 0x34
   15b20:	eor	fp, fp, #1
   15b24:	tst	r3, fp
   15b28:	beq	15b54 <putchar_unlocked@plt+0x4b2c>
   15b2c:	cmp	r9, r4
   15b30:	movhi	r3, #39	; 0x27
   15b34:	strbhi	r3, [r8, r4]
   15b38:	add	r3, r4, #1
   15b3c:	add	r4, r4, #2
   15b40:	cmp	r9, r3
   15b44:	movhi	r2, #39	; 0x27
   15b48:	strbhi	r2, [r8, r3]
   15b4c:	mov	r3, #0
   15b50:	str	r3, [sp, #52]	; 0x34
   15b54:	cmp	r9, r4
   15b58:	ldr	r3, [sp, #72]	; 0x48
   15b5c:	strbhi	r6, [r8, r4]
   15b60:	cmp	r5, #0
   15b64:	add	r4, r4, #1
   15b68:	moveq	r3, #0
   15b6c:	str	r3, [sp, #72]	; 0x48
   15b70:	ldr	r3, [sp, #28]
   15b74:	add	r3, r3, #1
   15b78:	b	15330 <putchar_unlocked@plt+0x4308>
   15b7c:	ldr	r3, [sp, #24]
   15b80:	and	r3, r3, r7
   15b84:	tst	r5, r3
   15b88:	moveq	r3, r6
   15b8c:	beq	1571c <putchar_unlocked@plt+0x46f4>
   15b90:	mov	fp, #0
   15b94:	mov	r5, fp
   15b98:	b	15b1c <putchar_unlocked@plt+0x4af4>
   15b9c:	mov	r3, #116	; 0x74
   15ba0:	b	1571c <putchar_unlocked@plt+0x46f4>
   15ba4:	mov	r3, #110	; 0x6e
   15ba8:	b	1571c <putchar_unlocked@plt+0x46f4>
   15bac:	mov	r3, #97	; 0x61
   15bb0:	ldr	r2, [sp, #24]
   15bb4:	cmp	r2, #0
   15bb8:	beq	15afc <putchar_unlocked@plt+0x4ad4>
   15bbc:	mov	r6, r3
   15bc0:	mov	r5, #0
   15bc4:	b	15924 <putchar_unlocked@plt+0x48fc>
   15bc8:	mov	r3, #98	; 0x62
   15bcc:	b	15bb0 <putchar_unlocked@plt+0x4b88>
   15bd0:	mov	r3, #118	; 0x76
   15bd4:	b	15bb0 <putchar_unlocked@plt+0x4b88>
   15bd8:	mov	r3, #102	; 0x66
   15bdc:	b	15bb0 <putchar_unlocked@plt+0x4b88>
   15be0:	ldr	r3, [sp, #40]	; 0x28
   15be4:	cmn	r3, #1
   15be8:	bne	15c08 <putchar_unlocked@plt+0x4be0>
   15bec:	ldr	r3, [sp, #48]	; 0x30
   15bf0:	ldrb	r3, [r3, #1]
   15bf4:	adds	r3, r3, #0
   15bf8:	movne	r3, #1
   15bfc:	cmp	r3, #0
   15c00:	bne	15afc <putchar_unlocked@plt+0x4ad4>
   15c04:	b	159e8 <putchar_unlocked@plt+0x49c0>
   15c08:	ldr	r3, [sp, #40]	; 0x28
   15c0c:	subs	r3, r3, #1
   15c10:	b	15bf8 <putchar_unlocked@plt+0x4bd0>
   15c14:	mov	r3, #0
   15c18:	mov	r2, #0
   15c1c:	strd	r2, [sp, #96]	; 0x60
   15c20:	ldr	r3, [sp, #40]	; 0x28
   15c24:	cmn	r3, #1
   15c28:	bne	15c38 <putchar_unlocked@plt+0x4c10>
   15c2c:	ldr	r0, [sp, #48]	; 0x30
   15c30:	bl	10ef0 <strlen@plt>
   15c34:	str	r0, [sp, #40]	; 0x28
   15c38:	ldr	r5, [sp, #36]	; 0x24
   15c3c:	mov	r3, #0
   15c40:	str	r3, [sp, #56]	; 0x38
   15c44:	ldr	r3, [sp, #28]
   15c48:	add	r0, sp, #92	; 0x5c
   15c4c:	ldr	r1, [sp, #40]	; 0x28
   15c50:	ldr	r2, [sp, #56]	; 0x38
   15c54:	add	r2, r3, r2
   15c58:	ldr	r3, [sp, #48]	; 0x30
   15c5c:	add	fp, r3, r2
   15c60:	sub	r2, r1, r2
   15c64:	add	r3, sp, #96	; 0x60
   15c68:	mov	r1, fp
   15c6c:	bl	171e8 <putchar_unlocked@plt+0x61c0>
   15c70:	subs	r2, r0, #0
   15c74:	beq	15cb4 <putchar_unlocked@plt+0x4c8c>
   15c78:	cmn	r2, #1
   15c7c:	beq	15e88 <putchar_unlocked@plt+0x4e60>
   15c80:	cmn	r2, #2
   15c84:	bne	15df8 <putchar_unlocked@plt+0x4dd0>
   15c88:	ldr	r3, [sp, #28]
   15c8c:	ldr	r2, [sp, #56]	; 0x38
   15c90:	add	r3, r3, r2
   15c94:	ldr	r2, [sp, #40]	; 0x28
   15c98:	cmp	r2, r3
   15c9c:	bls	15e88 <putchar_unlocked@plt+0x4e60>
   15ca0:	ldr	r2, [sp, #56]	; 0x38
   15ca4:	ldr	r3, [sp, #80]	; 0x50
   15ca8:	ldrb	r5, [r3, r2]
   15cac:	cmp	r5, #0
   15cb0:	bne	15de8 <putchar_unlocked@plt+0x4dc0>
   15cb4:	ldr	r3, [sp, #56]	; 0x38
   15cb8:	cmp	r3, #1
   15cbc:	bls	156e0 <putchar_unlocked@plt+0x46b8>
   15cc0:	ldr	r3, [sp, #28]
   15cc4:	mov	fp, #0
   15cc8:	mov	ip, #92	; 0x5c
   15ccc:	ldr	r2, [sp, #56]	; 0x38
   15cd0:	add	r3, r3, r2
   15cd4:	ldr	r2, [sp, #24]
   15cd8:	str	r3, [sp, #36]	; 0x24
   15cdc:	eor	r3, r5, #1
   15ce0:	and	r3, r3, r2
   15ce4:	mov	r2, #39	; 0x27
   15ce8:	uxtb	r3, r3
   15cec:	cmp	r3, #0
   15cf0:	beq	15e90 <putchar_unlocked@plt+0x4e68>
   15cf4:	sub	r0, sl, #2
   15cf8:	cmp	r7, #0
   15cfc:	clz	r0, r0
   15d00:	lsr	r0, r0, #5
   15d04:	bne	15604 <putchar_unlocked@plt+0x45dc>
   15d08:	ldr	r1, [sp, #52]	; 0x34
   15d0c:	eor	r1, r1, #1
   15d10:	ands	r1, r0, r1
   15d14:	beq	15d44 <putchar_unlocked@plt+0x4d1c>
   15d18:	cmp	r9, r4
   15d1c:	add	r0, r4, #1
   15d20:	str	r1, [sp, #52]	; 0x34
   15d24:	strbhi	r2, [r8, r4]
   15d28:	cmp	r9, r0
   15d2c:	movhi	lr, #36	; 0x24
   15d30:	strbhi	lr, [r8, r0]
   15d34:	add	r0, r4, #2
   15d38:	add	r4, r4, #3
   15d3c:	cmp	r9, r0
   15d40:	strbhi	r2, [r8, r0]
   15d44:	cmp	r9, r4
   15d48:	add	r0, r4, #1
   15d4c:	mov	fp, r3
   15d50:	strbhi	ip, [r8, r4]
   15d54:	cmp	r9, r0
   15d58:	lsrhi	r1, r6, #6
   15d5c:	addhi	r1, r1, #48	; 0x30
   15d60:	strbhi	r1, [r8, r0]
   15d64:	add	r0, r4, #2
   15d68:	add	r4, r4, #3
   15d6c:	cmp	r9, r0
   15d70:	ubfxhi	r1, r6, #3, #3
   15d74:	and	r6, r6, #7
   15d78:	add	r6, r6, #48	; 0x30
   15d7c:	addhi	r1, r1, #48	; 0x30
   15d80:	strbhi	r1, [r8, r0]
   15d84:	eor	r0, fp, #1
   15d88:	ldr	r1, [sp, #28]
   15d8c:	ldr	lr, [sp, #52]	; 0x34
   15d90:	add	r1, r1, #1
   15d94:	and	r0, r0, lr
   15d98:	ldr	lr, [sp, #36]	; 0x24
   15d9c:	cmp	r1, lr
   15da0:	bcs	15b1c <putchar_unlocked@plt+0x4af4>
   15da4:	cmp	r0, #0
   15da8:	beq	15dcc <putchar_unlocked@plt+0x4da4>
   15dac:	cmp	r9, r4
   15db0:	add	r0, r4, #1
   15db4:	strbhi	r2, [r8, r4]
   15db8:	cmp	r9, r0
   15dbc:	add	r4, r4, #2
   15dc0:	strbhi	r2, [r8, r0]
   15dc4:	mov	r0, #0
   15dc8:	str	r0, [sp, #52]	; 0x34
   15dcc:	ldr	r0, [sp, #48]	; 0x30
   15dd0:	cmp	r9, r4
   15dd4:	str	r1, [sp, #28]
   15dd8:	strbhi	r6, [r8, r4]
   15ddc:	add	r4, r4, #1
   15de0:	ldrb	r6, [r0, r1]
   15de4:	b	15cec <putchar_unlocked@plt+0x4cc4>
   15de8:	ldr	r3, [sp, #56]	; 0x38
   15dec:	add	r3, r3, #1
   15df0:	str	r3, [sp, #56]	; 0x38
   15df4:	b	15c88 <putchar_unlocked@plt+0x4c60>
   15df8:	cmp	sl, #2
   15dfc:	movne	r3, #0
   15e00:	andeq	r3, r7, #1
   15e04:	cmp	r3, #0
   15e08:	movne	r1, #1
   15e0c:	bne	15e68 <putchar_unlocked@plt+0x4e40>
   15e10:	ldr	r0, [sp, #92]	; 0x5c
   15e14:	str	r2, [sp, #84]	; 0x54
   15e18:	bl	10e3c <iswprint@plt>
   15e1c:	ldr	r3, [sp, #56]	; 0x38
   15e20:	cmp	r0, #0
   15e24:	add	r0, sp, #96	; 0x60
   15e28:	moveq	r5, #0
   15e2c:	ldr	r2, [sp, #84]	; 0x54
   15e30:	add	r3, r3, r2
   15e34:	str	r3, [sp, #56]	; 0x38
   15e38:	bl	10df4 <mbsinit@plt>
   15e3c:	cmp	r0, #0
   15e40:	beq	15c44 <putchar_unlocked@plt+0x4c1c>
   15e44:	b	15cb4 <putchar_unlocked@plt+0x4c8c>
   15e48:	ldrb	r3, [fp, #1]!
   15e4c:	cmp	r3, #94	; 0x5e
   15e50:	beq	15730 <putchar_unlocked@plt+0x4708>
   15e54:	bhi	15e74 <putchar_unlocked@plt+0x4e4c>
   15e58:	sub	r3, r3, #91	; 0x5b
   15e5c:	cmp	r3, #1
   15e60:	bls	15730 <putchar_unlocked@plt+0x4708>
   15e64:	add	r1, r1, #1
   15e68:	cmp	r1, r2
   15e6c:	bne	15e48 <putchar_unlocked@plt+0x4e20>
   15e70:	b	15e10 <putchar_unlocked@plt+0x4de8>
   15e74:	cmp	r3, #96	; 0x60
   15e78:	beq	15730 <putchar_unlocked@plt+0x4708>
   15e7c:	cmp	r3, #124	; 0x7c
   15e80:	bne	15e64 <putchar_unlocked@plt+0x4e3c>
   15e84:	b	15730 <putchar_unlocked@plt+0x4708>
   15e88:	mov	r5, #0
   15e8c:	b	15cb4 <putchar_unlocked@plt+0x4c8c>
   15e90:	ldr	r1, [sp, #64]	; 0x40
   15e94:	cmp	r1, #0
   15e98:	beq	15d84 <putchar_unlocked@plt+0x4d5c>
   15e9c:	cmp	r9, r4
   15ea0:	mov	r1, #0
   15ea4:	strbhi	ip, [r8, r4]
   15ea8:	add	r4, r4, #1
   15eac:	str	r1, [sp, #64]	; 0x40
   15eb0:	b	15d84 <putchar_unlocked@plt+0x4d5c>
   15eb4:	mov	r5, fp
   15eb8:	ldr	fp, [sp, #24]
   15ebc:	mov	r6, #48	; 0x30
   15ec0:	b	158d0 <putchar_unlocked@plt+0x48a8>
   15ec4:	mov	r5, #0
   15ec8:	b	158d0 <putchar_unlocked@plt+0x48a8>
   15ecc:	mov	r6, r1
   15ed0:	b	15afc <putchar_unlocked@plt+0x4ad4>
   15ed4:	mov	r6, r1
   15ed8:	b	15aec <putchar_unlocked@plt+0x4ac4>
   15edc:	ldr	r2, [sp, #28]
   15ee0:	ldr	r3, [sp, #40]	; 0x28
   15ee4:	subs	r3, r3, r2
   15ee8:	movne	r3, #1
   15eec:	b	15354 <putchar_unlocked@plt+0x432c>
   15ef0:	ldr	r3, [sp, #60]	; 0x3c
   15ef4:	mov	sl, #2
   15ef8:	ldr	r7, [sp, #72]	; 0x48
   15efc:	adds	r6, r3, #0
   15f00:	mov	r5, r3
   15f04:	movne	r6, #1
   15f08:	cmp	r9, #0
   15f0c:	movne	r6, #0
   15f10:	cmp	r6, #0
   15f14:	bne	152e4 <putchar_unlocked@plt+0x42bc>
   15f18:	ldr	r3, [sp, #68]	; 0x44
   15f1c:	ldr	r2, [sp, #44]	; 0x2c
   15f20:	cmp	r2, #0
   15f24:	moveq	r3, #0
   15f28:	andne	r3, r3, #1
   15f2c:	cmp	r3, #0
   15f30:	movne	r3, r2
   15f34:	subne	r3, r3, #1
   15f38:	bne	15f68 <putchar_unlocked@plt+0x4f40>
   15f3c:	cmp	r9, r4
   15f40:	movhi	r3, #0
   15f44:	strbhi	r3, [r8, r4]
   15f48:	mov	r0, r4
   15f4c:	add	sp, sp, #108	; 0x6c
   15f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f54:	mov	r3, r7
   15f58:	b	15f1c <putchar_unlocked@plt+0x4ef4>
   15f5c:	cmp	r9, r4
   15f60:	strbhi	r2, [r8, r4]
   15f64:	add	r4, r4, #1
   15f68:	ldrb	r2, [r3, #1]!
   15f6c:	cmp	r2, #0
   15f70:	bne	15f5c <putchar_unlocked@plt+0x4f34>
   15f74:	b	15f3c <putchar_unlocked@plt+0x4f14>
   15f78:	strdeq	r8, [r1], -r0
   15f7c:	andeq	r8, r1, r3, lsl #6
   15f80:	andeq	r8, r1, r1, lsl #6
   15f84:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   15f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f8c:	sub	sp, sp, #52	; 0x34
   15f90:	mov	r6, r0
   15f94:	mov	r5, r3
   15f98:	mov	r8, r1
   15f9c:	mov	r9, r2
   15fa0:	bl	10f08 <__errno_location@plt>
   15fa4:	ldr	r3, [r0]
   15fa8:	cmn	r6, #-2147483647	; 0x80000001
   15fac:	str	r0, [sp, #24]
   15fb0:	ldr	r7, [pc, #368]	; 16128 <putchar_unlocked@plt+0x5100>
   15fb4:	str	r3, [sp, #32]
   15fb8:	movne	r3, #0
   15fbc:	moveq	r3, #1
   15fc0:	orrs	r3, r3, r6, lsr #31
   15fc4:	ldr	r4, [r7]
   15fc8:	beq	15fd0 <putchar_unlocked@plt+0x4fa8>
   15fcc:	bl	10ff8 <abort@plt>
   15fd0:	ldr	r2, [r7, #4]
   15fd4:	cmp	r2, r6
   15fd8:	bgt	16048 <putchar_unlocked@plt+0x5020>
   15fdc:	add	sl, r7, #8
   15fe0:	mov	r3, #8
   15fe4:	cmp	r4, sl
   15fe8:	add	r1, sp, #44	; 0x2c
   15fec:	str	r2, [sp, #44]	; 0x2c
   15ff0:	sub	r2, r6, r2
   15ff4:	movne	r0, r4
   15ff8:	moveq	r0, #0
   15ffc:	add	r2, r2, #1
   16000:	str	r3, [sp]
   16004:	mvn	r3, #-2147483648	; 0x80000000
   16008:	bl	16ce8 <putchar_unlocked@plt+0x5cc0>
   1600c:	cmp	r4, sl
   16010:	mov	fp, r0
   16014:	str	r0, [r7]
   16018:	ldmeq	r4, {r0, r1}
   1601c:	mov	r4, fp
   16020:	ldr	r2, [sp, #44]	; 0x2c
   16024:	stmeq	fp, {r0, r1}
   16028:	mov	r1, #0
   1602c:	ldr	r0, [r7, #4]
   16030:	sub	r2, r2, r0
   16034:	add	r0, fp, r0, lsl #3
   16038:	lsl	r2, r2, #3
   1603c:	bl	10f2c <memset@plt>
   16040:	ldr	r3, [sp, #44]	; 0x2c
   16044:	str	r3, [r7, #4]
   16048:	ldr	r3, [r5, #4]
   1604c:	add	sl, r4, r6, lsl #3
   16050:	mov	r2, r8
   16054:	ldr	fp, [r4, r6, lsl #3]
   16058:	ldr	r7, [sl, #4]
   1605c:	orr	r3, r3, #1
   16060:	str	r3, [sp, #28]
   16064:	add	r3, r5, #8
   16068:	mov	r1, fp
   1606c:	str	r3, [sp, #36]	; 0x24
   16070:	mov	r0, r7
   16074:	ldr	r3, [r5, #44]	; 0x2c
   16078:	str	r3, [sp, #16]
   1607c:	ldr	r3, [r5, #40]	; 0x28
   16080:	str	r3, [sp, #12]
   16084:	add	r3, r5, #8
   16088:	str	r3, [sp, #8]
   1608c:	ldr	r3, [sp, #28]
   16090:	str	r3, [sp, #4]
   16094:	ldr	r3, [r5]
   16098:	str	r3, [sp]
   1609c:	mov	r3, r9
   160a0:	bl	15298 <putchar_unlocked@plt+0x4270>
   160a4:	cmp	fp, r0
   160a8:	bhi	16110 <putchar_unlocked@plt+0x50e8>
   160ac:	ldr	r3, [pc, #120]	; 1612c <putchar_unlocked@plt+0x5104>
   160b0:	add	fp, r0, #1
   160b4:	str	fp, [r4, r6, lsl #3]
   160b8:	cmp	r7, r3
   160bc:	beq	160c8 <putchar_unlocked@plt+0x50a0>
   160c0:	mov	r0, r7
   160c4:	bl	14fa8 <putchar_unlocked@plt+0x3f80>
   160c8:	mov	r0, fp
   160cc:	bl	16bd8 <putchar_unlocked@plt+0x5bb0>
   160d0:	ldr	r3, [r5, #44]	; 0x2c
   160d4:	mov	r2, r8
   160d8:	mov	r1, fp
   160dc:	str	r0, [sl, #4]
   160e0:	mov	r7, r0
   160e4:	str	r3, [sp, #16]
   160e8:	ldr	r3, [r5, #40]	; 0x28
   160ec:	str	r3, [sp, #12]
   160f0:	add	r3, r5, #8
   160f4:	str	r3, [sp, #8]
   160f8:	ldr	r3, [sp, #28]
   160fc:	str	r3, [sp, #4]
   16100:	ldr	r3, [r5]
   16104:	str	r3, [sp]
   16108:	mov	r3, r9
   1610c:	bl	15298 <putchar_unlocked@plt+0x4270>
   16110:	ldr	r3, [sp, #24]
   16114:	mov	r0, r7
   16118:	ldr	r2, [sp, #32]
   1611c:	str	r2, [r3]
   16120:	add	sp, sp, #52	; 0x34
   16124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16128:	andeq	r9, r2, r0, lsl r1
   1612c:	muleq	r2, r0, r1
   16130:	push	{r4, r5, r6, lr}
   16134:	mov	r5, r0
   16138:	bl	10f08 <__errno_location@plt>
   1613c:	mov	r4, r0
   16140:	cmp	r5, #0
   16144:	ldr	r0, [pc, #20]	; 16160 <putchar_unlocked@plt+0x5138>
   16148:	mov	r1, #48	; 0x30
   1614c:	movne	r0, r5
   16150:	ldr	r6, [r4]
   16154:	bl	16dd8 <putchar_unlocked@plt+0x5db0>
   16158:	str	r6, [r4]
   1615c:	pop	{r4, r5, r6, pc}
   16160:	muleq	r2, r0, r2
   16164:	ldr	r3, [pc, #12]	; 16178 <putchar_unlocked@plt+0x5150>
   16168:	cmp	r0, #0
   1616c:	moveq	r0, r3
   16170:	ldr	r0, [r0]
   16174:	bx	lr
   16178:	muleq	r2, r0, r2
   1617c:	ldr	r3, [pc, #12]	; 16190 <putchar_unlocked@plt+0x5168>
   16180:	cmp	r0, #0
   16184:	moveq	r0, r3
   16188:	str	r1, [r0]
   1618c:	bx	lr
   16190:	muleq	r2, r0, r2
   16194:	ldr	r3, [pc, #52]	; 161d0 <putchar_unlocked@plt+0x51a8>
   16198:	cmp	r0, #0
   1619c:	push	{lr}		; (str lr, [sp, #-4]!)
   161a0:	lsr	lr, r1, #5
   161a4:	and	r1, r1, #31
   161a8:	moveq	r0, r3
   161ac:	add	r3, r0, #8
   161b0:	ldr	ip, [r3, lr, lsl #2]
   161b4:	lsr	r0, ip, r1
   161b8:	eor	r2, r2, r0
   161bc:	and	r0, r0, #1
   161c0:	and	r2, r2, #1
   161c4:	eor	r1, ip, r2, lsl r1
   161c8:	str	r1, [r3, lr, lsl #2]
   161cc:	pop	{pc}		; (ldr pc, [sp], #4)
   161d0:	muleq	r2, r0, r2
   161d4:	ldr	r3, [pc, #16]	; 161ec <putchar_unlocked@plt+0x51c4>
   161d8:	cmp	r0, #0
   161dc:	movne	r3, r0
   161e0:	ldr	r0, [r3, #4]
   161e4:	str	r1, [r3, #4]
   161e8:	bx	lr
   161ec:	muleq	r2, r0, r2
   161f0:	ldr	r3, [pc, #44]	; 16224 <putchar_unlocked@plt+0x51fc>
   161f4:	cmp	r0, #0
   161f8:	moveq	r0, r3
   161fc:	mov	r3, #10
   16200:	cmp	r2, #0
   16204:	cmpne	r1, #0
   16208:	str	r3, [r0]
   1620c:	bne	16218 <putchar_unlocked@plt+0x51f0>
   16210:	push	{r4, lr}
   16214:	bl	10ff8 <abort@plt>
   16218:	str	r1, [r0, #40]	; 0x28
   1621c:	str	r2, [r0, #44]	; 0x2c
   16220:	bx	lr
   16224:	muleq	r2, r0, r2
   16228:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1622c:	sub	sp, sp, #24
   16230:	mov	sl, r3
   16234:	mov	r7, r0
   16238:	mov	r8, r1
   1623c:	mov	r9, r2
   16240:	ldr	r4, [sp, #56]	; 0x38
   16244:	ldr	r3, [pc, #88]	; 162a4 <putchar_unlocked@plt+0x527c>
   16248:	cmp	r4, #0
   1624c:	moveq	r4, r3
   16250:	bl	10f08 <__errno_location@plt>
   16254:	ldr	r3, [r4, #44]	; 0x2c
   16258:	mov	r5, r0
   1625c:	mov	r2, r9
   16260:	mov	r1, r8
   16264:	mov	r0, r7
   16268:	ldr	r6, [r5]
   1626c:	str	r3, [sp, #16]
   16270:	ldr	r3, [r4, #40]	; 0x28
   16274:	str	r3, [sp, #12]
   16278:	add	r3, r4, #8
   1627c:	str	r3, [sp, #8]
   16280:	ldr	r3, [r4, #4]
   16284:	str	r3, [sp, #4]
   16288:	ldr	r3, [r4]
   1628c:	str	r3, [sp]
   16290:	mov	r3, sl
   16294:	bl	15298 <putchar_unlocked@plt+0x4270>
   16298:	str	r6, [r5]
   1629c:	add	sp, sp, #24
   162a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   162a4:	muleq	r2, r0, r2
   162a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162ac:	cmp	r3, #0
   162b0:	sub	sp, sp, #44	; 0x2c
   162b4:	mov	r6, r2
   162b8:	mov	sl, r1
   162bc:	mov	r9, r0
   162c0:	ldr	r4, [pc, #176]	; 16378 <putchar_unlocked@plt+0x5350>
   162c4:	movne	r4, r3
   162c8:	bl	10f08 <__errno_location@plt>
   162cc:	ldr	r3, [r0]
   162d0:	mov	r1, #0
   162d4:	mov	r2, r9
   162d8:	mov	r8, r0
   162dc:	mov	r0, r1
   162e0:	ldr	r5, [r4, #4]
   162e4:	add	fp, r4, #8
   162e8:	str	r3, [sp, #28]
   162ec:	ldr	r3, [r4, #44]	; 0x2c
   162f0:	cmp	r6, #0
   162f4:	orreq	r5, r5, #1
   162f8:	str	r3, [sp, #16]
   162fc:	ldr	r3, [r4, #40]	; 0x28
   16300:	stmib	sp, {r5, fp}
   16304:	str	r3, [sp, #12]
   16308:	ldr	r3, [r4]
   1630c:	str	r3, [sp]
   16310:	mov	r3, sl
   16314:	bl	15298 <putchar_unlocked@plt+0x4270>
   16318:	add	r1, r0, #1
   1631c:	mov	r7, r0
   16320:	mov	r0, r1
   16324:	str	r1, [sp, #36]	; 0x24
   16328:	bl	16bd8 <putchar_unlocked@plt+0x5bb0>
   1632c:	ldr	r3, [r4, #44]	; 0x2c
   16330:	mov	r2, r9
   16334:	ldr	r1, [sp, #36]	; 0x24
   16338:	str	r3, [sp, #16]
   1633c:	ldr	r3, [r4, #40]	; 0x28
   16340:	stmib	sp, {r5, fp}
   16344:	str	r0, [sp, #32]
   16348:	str	r3, [sp, #12]
   1634c:	ldr	r3, [r4]
   16350:	str	r3, [sp]
   16354:	mov	r3, sl
   16358:	bl	15298 <putchar_unlocked@plt+0x4270>
   1635c:	ldr	r3, [sp, #28]
   16360:	cmp	r6, #0
   16364:	ldr	r0, [sp, #32]
   16368:	str	r3, [r8]
   1636c:	strne	r7, [r6]
   16370:	add	sp, sp, #44	; 0x2c
   16374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16378:	muleq	r2, r0, r2
   1637c:	mov	r3, r2
   16380:	mov	r2, #0
   16384:	b	162a8 <putchar_unlocked@plt+0x5280>
   16388:	push	{r4, r5, r6, r7, r8, lr}
   1638c:	mov	r6, #1
   16390:	ldr	r4, [pc, #100]	; 163fc <putchar_unlocked@plt+0x53d4>
   16394:	ldr	r5, [r4]
   16398:	add	r7, r5, #4
   1639c:	ldr	r3, [r4, #4]
   163a0:	cmp	r3, r6
   163a4:	bgt	163ec <putchar_unlocked@plt+0x53c4>
   163a8:	ldr	r6, [pc, #80]	; 16400 <putchar_unlocked@plt+0x53d8>
   163ac:	ldr	r0, [r5, #4]
   163b0:	cmp	r0, r6
   163b4:	beq	163c8 <putchar_unlocked@plt+0x53a0>
   163b8:	bl	14fa8 <putchar_unlocked@plt+0x3f80>
   163bc:	mov	r3, #256	; 0x100
   163c0:	str	r3, [r4, #8]
   163c4:	str	r6, [r4, #12]
   163c8:	ldr	r6, [pc, #52]	; 16404 <putchar_unlocked@plt+0x53dc>
   163cc:	cmp	r5, r6
   163d0:	beq	163e0 <putchar_unlocked@plt+0x53b8>
   163d4:	mov	r0, r5
   163d8:	bl	14fa8 <putchar_unlocked@plt+0x3f80>
   163dc:	str	r6, [r4]
   163e0:	mov	r3, #1
   163e4:	str	r3, [r4, #4]
   163e8:	pop	{r4, r5, r6, r7, r8, pc}
   163ec:	ldr	r0, [r7, r6, lsl #3]
   163f0:	add	r6, r6, #1
   163f4:	bl	14fa8 <putchar_unlocked@plt+0x3f80>
   163f8:	b	1639c <putchar_unlocked@plt+0x5374>
   163fc:	andeq	r9, r2, r0, lsl r1
   16400:	muleq	r2, r0, r1
   16404:	andeq	r9, r2, r8, lsl r1
   16408:	ldr	r3, [pc, #4]	; 16414 <putchar_unlocked@plt+0x53ec>
   1640c:	mvn	r2, #0
   16410:	b	15f88 <putchar_unlocked@plt+0x4f60>
   16414:	muleq	r2, r0, r2
   16418:	ldr	r3, [pc]	; 16420 <putchar_unlocked@plt+0x53f8>
   1641c:	b	15f88 <putchar_unlocked@plt+0x4f60>
   16420:	muleq	r2, r0, r2
   16424:	mov	r1, r0
   16428:	mov	r0, #0
   1642c:	b	16408 <putchar_unlocked@plt+0x53e0>
   16430:	mov	r2, r1
   16434:	mov	r1, r0
   16438:	mov	r0, #0
   1643c:	b	16418 <putchar_unlocked@plt+0x53f0>
   16440:	push	{r4, r5, lr}
   16444:	sub	sp, sp, #52	; 0x34
   16448:	mov	r5, r2
   1644c:	mov	r4, r0
   16450:	mov	r0, sp
   16454:	bl	1513c <putchar_unlocked@plt+0x4114>
   16458:	mov	r3, sp
   1645c:	mvn	r2, #0
   16460:	mov	r1, r5
   16464:	mov	r0, r4
   16468:	bl	15f88 <putchar_unlocked@plt+0x4f60>
   1646c:	add	sp, sp, #52	; 0x34
   16470:	pop	{r4, r5, pc}
   16474:	push	{r4, r5, r6, lr}
   16478:	sub	sp, sp, #48	; 0x30
   1647c:	mov	r5, r2
   16480:	mov	r6, r3
   16484:	mov	r4, r0
   16488:	mov	r0, sp
   1648c:	bl	1513c <putchar_unlocked@plt+0x4114>
   16490:	mov	r3, sp
   16494:	mov	r2, r6
   16498:	mov	r1, r5
   1649c:	mov	r0, r4
   164a0:	bl	15f88 <putchar_unlocked@plt+0x4f60>
   164a4:	add	sp, sp, #48	; 0x30
   164a8:	pop	{r4, r5, r6, pc}
   164ac:	mov	r2, r1
   164b0:	mov	r1, r0
   164b4:	mov	r0, #0
   164b8:	b	16440 <putchar_unlocked@plt+0x5418>
   164bc:	mov	r3, r2
   164c0:	mov	r2, r1
   164c4:	mov	r1, r0
   164c8:	mov	r0, #0
   164cc:	b	16474 <putchar_unlocked@plt+0x544c>
   164d0:	push	{r4, r5, r6, lr}
   164d4:	mov	r4, r0
   164d8:	mov	r5, r1
   164dc:	mov	r6, r2
   164e0:	sub	sp, sp, #48	; 0x30
   164e4:	mov	ip, sp
   164e8:	ldr	lr, [pc, #64]	; 16530 <putchar_unlocked@plt+0x5508>
   164ec:	ldm	lr!, {r0, r1, r2, r3}
   164f0:	stmia	ip!, {r0, r1, r2, r3}
   164f4:	ldm	lr!, {r0, r1, r2, r3}
   164f8:	stmia	ip!, {r0, r1, r2, r3}
   164fc:	ldm	lr, {r0, r1, r2, r3}
   16500:	stm	ip, {r0, r1, r2, r3}
   16504:	mov	r1, r6
   16508:	mov	r2, #1
   1650c:	mov	r0, sp
   16510:	bl	16194 <putchar_unlocked@plt+0x516c>
   16514:	mov	r3, sp
   16518:	mov	r2, r5
   1651c:	mov	r1, r4
   16520:	mov	r0, #0
   16524:	bl	15f88 <putchar_unlocked@plt+0x4f60>
   16528:	add	sp, sp, #48	; 0x30
   1652c:	pop	{r4, r5, r6, pc}
   16530:	muleq	r2, r0, r2
   16534:	mov	r2, r1
   16538:	mvn	r1, #0
   1653c:	b	164d0 <putchar_unlocked@plt+0x54a8>
   16540:	mov	r1, #58	; 0x3a
   16544:	b	16534 <putchar_unlocked@plt+0x550c>
   16548:	mov	r2, #58	; 0x3a
   1654c:	b	164d0 <putchar_unlocked@plt+0x54a8>
   16550:	push	{r4, r5, lr}
   16554:	sub	sp, sp, #100	; 0x64
   16558:	mov	r4, r0
   1655c:	mov	r0, sp
   16560:	mov	r5, r2
   16564:	bl	1513c <putchar_unlocked@plt+0x4114>
   16568:	mov	ip, sp
   1656c:	add	lr, sp, #48	; 0x30
   16570:	ldm	ip!, {r0, r1, r2, r3}
   16574:	stmia	lr!, {r0, r1, r2, r3}
   16578:	ldm	ip!, {r0, r1, r2, r3}
   1657c:	stmia	lr!, {r0, r1, r2, r3}
   16580:	ldm	ip, {r0, r1, r2, r3}
   16584:	stm	lr, {r0, r1, r2, r3}
   16588:	mov	r2, #1
   1658c:	mov	r1, #58	; 0x3a
   16590:	add	r0, sp, #48	; 0x30
   16594:	bl	16194 <putchar_unlocked@plt+0x516c>
   16598:	add	r3, sp, #48	; 0x30
   1659c:	mvn	r2, #0
   165a0:	mov	r1, r5
   165a4:	mov	r0, r4
   165a8:	bl	15f88 <putchar_unlocked@plt+0x4f60>
   165ac:	add	sp, sp, #100	; 0x64
   165b0:	pop	{r4, r5, pc}
   165b4:	push	{r4, r5, r6, r7, lr}
   165b8:	mov	r4, r0
   165bc:	mov	r6, r1
   165c0:	mov	r7, r2
   165c4:	mov	r5, r3
   165c8:	sub	sp, sp, #52	; 0x34
   165cc:	ldr	lr, [pc, #68]	; 16618 <putchar_unlocked@plt+0x55f0>
   165d0:	mov	ip, sp
   165d4:	ldm	lr!, {r0, r1, r2, r3}
   165d8:	stmia	ip!, {r0, r1, r2, r3}
   165dc:	ldm	lr!, {r0, r1, r2, r3}
   165e0:	stmia	ip!, {r0, r1, r2, r3}
   165e4:	ldm	lr, {r0, r1, r2, r3}
   165e8:	stm	ip, {r0, r1, r2, r3}
   165ec:	mov	r2, r7
   165f0:	mov	r1, r6
   165f4:	mov	r0, sp
   165f8:	bl	161f0 <putchar_unlocked@plt+0x51c8>
   165fc:	ldr	r2, [sp, #72]	; 0x48
   16600:	mov	r3, sp
   16604:	mov	r1, r5
   16608:	mov	r0, r4
   1660c:	bl	15f88 <putchar_unlocked@plt+0x4f60>
   16610:	add	sp, sp, #52	; 0x34
   16614:	pop	{r4, r5, r6, r7, pc}
   16618:	muleq	r2, r0, r2
   1661c:	mvn	ip, #0
   16620:	push	{r0, r1, r2, lr}
   16624:	str	ip, [sp]
   16628:	bl	165b4 <putchar_unlocked@plt+0x558c>
   1662c:	add	sp, sp, #12
   16630:	pop	{pc}		; (ldr pc, [sp], #4)
   16634:	mov	r3, r2
   16638:	mov	r2, r1
   1663c:	mov	r1, r0
   16640:	mov	r0, #0
   16644:	b	1661c <putchar_unlocked@plt+0x55f4>
   16648:	push	{r0, r1, r2, lr}
   1664c:	str	r3, [sp]
   16650:	mov	r3, r2
   16654:	mov	r2, r1
   16658:	mov	r1, r0
   1665c:	mov	r0, #0
   16660:	bl	165b4 <putchar_unlocked@plt+0x558c>
   16664:	add	sp, sp, #12
   16668:	pop	{pc}		; (ldr pc, [sp], #4)
   1666c:	ldr	r3, [pc]	; 16674 <putchar_unlocked@plt+0x564c>
   16670:	b	15f88 <putchar_unlocked@plt+0x4f60>
   16674:	andeq	r9, r2, r0, lsr #2
   16678:	mov	r2, r1
   1667c:	mov	r1, r0
   16680:	mov	r0, #0
   16684:	b	1666c <putchar_unlocked@plt+0x5644>
   16688:	mvn	r2, #0
   1668c:	b	1666c <putchar_unlocked@plt+0x5644>
   16690:	mov	r1, r0
   16694:	mov	r0, #0
   16698:	b	16688 <putchar_unlocked@plt+0x5660>
   1669c:	mov	r2, #3
   166a0:	mov	r1, #0
   166a4:	b	16fdc <putchar_unlocked@plt+0x5fb4>
   166a8:	push	{r4, r5, r6, lr}
   166ac:	cmp	r1, #0
   166b0:	sub	sp, sp, #32
   166b4:	mov	r5, r0
   166b8:	ldr	r4, [sp, #48]	; 0x30
   166bc:	ldr	r6, [sp, #52]	; 0x34
   166c0:	beq	16774 <putchar_unlocked@plt+0x574c>
   166c4:	strd	r2, [sp]
   166c8:	mov	r3, r1
   166cc:	mov	r1, #1
   166d0:	ldr	r2, [pc, #856]	; 16a30 <putchar_unlocked@plt+0x5a08>
   166d4:	bl	10f50 <__fprintf_chk@plt>
   166d8:	mov	r2, #5
   166dc:	ldr	r1, [pc, #848]	; 16a34 <putchar_unlocked@plt+0x5a0c>
   166e0:	mov	r0, #0
   166e4:	bl	10e18 <dcgettext@plt>
   166e8:	movw	r3, #2022	; 0x7e6
   166ec:	ldr	r2, [pc, #836]	; 16a38 <putchar_unlocked@plt+0x5a10>
   166f0:	mov	r1, #1
   166f4:	str	r3, [sp]
   166f8:	mov	r3, r0
   166fc:	mov	r0, r5
   16700:	bl	10f50 <__fprintf_chk@plt>
   16704:	mov	r1, r5
   16708:	mov	r0, #10
   1670c:	bl	10e0c <fputc_unlocked@plt>
   16710:	mov	r2, #5
   16714:	ldr	r1, [pc, #800]	; 16a3c <putchar_unlocked@plt+0x5a14>
   16718:	mov	r0, #0
   1671c:	bl	10e18 <dcgettext@plt>
   16720:	mov	r2, r0
   16724:	mov	r1, #1
   16728:	ldr	r3, [pc, #784]	; 16a40 <putchar_unlocked@plt+0x5a18>
   1672c:	mov	r0, r5
   16730:	bl	10f50 <__fprintf_chk@plt>
   16734:	mov	r1, r5
   16738:	mov	r0, #10
   1673c:	bl	10e0c <fputc_unlocked@plt>
   16740:	cmp	r6, #9
   16744:	ldrls	pc, [pc, r6, lsl #2]
   16748:	b	16a24 <putchar_unlocked@plt+0x59fc>
   1674c:	andeq	r6, r1, r4, ror #16
   16750:	andeq	r6, r1, ip, lsl #15
   16754:			; <UNDEFINED> instruction: 0x000167b8
   16758:	andeq	r6, r1, ip, ror #15
   1675c:	andeq	r6, r1, r8, lsr #16
   16760:	andeq	r6, r1, ip, ror #16
   16764:			; <UNDEFINED> instruction: 0x000168b4
   16768:	andeq	r6, r1, r4, lsl #18
   1676c:	andeq	r6, r1, ip, asr r9
   16770:			; <UNDEFINED> instruction: 0x000169bc
   16774:	mov	r1, #1
   16778:	str	r3, [sp]
   1677c:	mov	r3, r2
   16780:	ldr	r2, [pc, #700]	; 16a44 <putchar_unlocked@plt+0x5a1c>
   16784:	bl	10f50 <__fprintf_chk@plt>
   16788:	b	166d8 <putchar_unlocked@plt+0x56b0>
   1678c:	mov	r2, #5
   16790:	ldr	r1, [pc, #688]	; 16a48 <putchar_unlocked@plt+0x5a20>
   16794:	mov	r0, #0
   16798:	bl	10e18 <dcgettext@plt>
   1679c:	ldr	r3, [r4]
   167a0:	mov	r2, r0
   167a4:	mov	r1, #1
   167a8:	mov	r0, r5
   167ac:	add	sp, sp, #32
   167b0:	pop	{r4, r5, r6, lr}
   167b4:	b	10f50 <__fprintf_chk@plt>
   167b8:	mov	r2, #5
   167bc:	ldr	r1, [pc, #648]	; 16a4c <putchar_unlocked@plt+0x5a24>
   167c0:	mov	r0, #0
   167c4:	bl	10e18 <dcgettext@plt>
   167c8:	ldr	r3, [r4, #4]
   167cc:	mov	r2, r0
   167d0:	mov	r1, #1
   167d4:	mov	r0, r5
   167d8:	str	r3, [sp, #48]	; 0x30
   167dc:	ldr	r3, [r4]
   167e0:	add	sp, sp, #32
   167e4:	pop	{r4, r5, r6, lr}
   167e8:	b	10f50 <__fprintf_chk@plt>
   167ec:	mov	r2, #5
   167f0:	ldr	r1, [pc, #600]	; 16a50 <putchar_unlocked@plt+0x5a28>
   167f4:	mov	r0, #0
   167f8:	bl	10e18 <dcgettext@plt>
   167fc:	ldr	r3, [r4, #8]
   16800:	mov	r2, r0
   16804:	mov	r1, #1
   16808:	mov	r0, r5
   1680c:	str	r3, [sp, #52]	; 0x34
   16810:	ldr	r3, [r4, #4]
   16814:	str	r3, [sp, #48]	; 0x30
   16818:	ldr	r3, [r4]
   1681c:	add	sp, sp, #32
   16820:	pop	{r4, r5, r6, lr}
   16824:	b	10f50 <__fprintf_chk@plt>
   16828:	mov	r2, #5
   1682c:	ldr	r1, [pc, #544]	; 16a54 <putchar_unlocked@plt+0x5a2c>
   16830:	mov	r0, #0
   16834:	bl	10e18 <dcgettext@plt>
   16838:	ldr	r3, [r4, #12]
   1683c:	mov	r2, r0
   16840:	mov	r1, #1
   16844:	mov	r0, r5
   16848:	str	r3, [sp, #8]
   1684c:	ldr	r3, [r4, #8]
   16850:	str	r3, [sp, #4]
   16854:	ldr	r3, [r4, #4]
   16858:	str	r3, [sp]
   1685c:	ldr	r3, [r4]
   16860:	bl	10f50 <__fprintf_chk@plt>
   16864:	add	sp, sp, #32
   16868:	pop	{r4, r5, r6, pc}
   1686c:	mov	r2, #5
   16870:	ldr	r1, [pc, #480]	; 16a58 <putchar_unlocked@plt+0x5a30>
   16874:	mov	r0, #0
   16878:	bl	10e18 <dcgettext@plt>
   1687c:	ldr	r3, [r4, #16]
   16880:	mov	r2, r0
   16884:	mov	r1, #1
   16888:	mov	r0, r5
   1688c:	str	r3, [sp, #12]
   16890:	ldr	r3, [r4, #12]
   16894:	str	r3, [sp, #8]
   16898:	ldr	r3, [r4, #8]
   1689c:	str	r3, [sp, #4]
   168a0:	ldr	r3, [r4, #4]
   168a4:	str	r3, [sp]
   168a8:	ldr	r3, [r4]
   168ac:	bl	10f50 <__fprintf_chk@plt>
   168b0:	b	16864 <putchar_unlocked@plt+0x583c>
   168b4:	mov	r2, #5
   168b8:	ldr	r1, [pc, #412]	; 16a5c <putchar_unlocked@plt+0x5a34>
   168bc:	mov	r0, #0
   168c0:	bl	10e18 <dcgettext@plt>
   168c4:	ldr	r3, [r4, #20]
   168c8:	mov	r2, r0
   168cc:	mov	r1, #1
   168d0:	mov	r0, r5
   168d4:	str	r3, [sp, #16]
   168d8:	ldr	r3, [r4, #16]
   168dc:	str	r3, [sp, #12]
   168e0:	ldr	r3, [r4, #12]
   168e4:	str	r3, [sp, #8]
   168e8:	ldr	r3, [r4, #8]
   168ec:	str	r3, [sp, #4]
   168f0:	ldr	r3, [r4, #4]
   168f4:	str	r3, [sp]
   168f8:	ldr	r3, [r4]
   168fc:	bl	10f50 <__fprintf_chk@plt>
   16900:	b	16864 <putchar_unlocked@plt+0x583c>
   16904:	mov	r2, #5
   16908:	ldr	r1, [pc, #336]	; 16a60 <putchar_unlocked@plt+0x5a38>
   1690c:	mov	r0, #0
   16910:	bl	10e18 <dcgettext@plt>
   16914:	ldr	r3, [r4, #24]
   16918:	mov	r2, r0
   1691c:	mov	r1, #1
   16920:	mov	r0, r5
   16924:	str	r3, [sp, #20]
   16928:	ldr	r3, [r4, #20]
   1692c:	str	r3, [sp, #16]
   16930:	ldr	r3, [r4, #16]
   16934:	str	r3, [sp, #12]
   16938:	ldr	r3, [r4, #12]
   1693c:	str	r3, [sp, #8]
   16940:	ldr	r3, [r4, #8]
   16944:	str	r3, [sp, #4]
   16948:	ldr	r3, [r4, #4]
   1694c:	str	r3, [sp]
   16950:	ldr	r3, [r4]
   16954:	bl	10f50 <__fprintf_chk@plt>
   16958:	b	16864 <putchar_unlocked@plt+0x583c>
   1695c:	mov	r2, #5
   16960:	ldr	r1, [pc, #252]	; 16a64 <putchar_unlocked@plt+0x5a3c>
   16964:	mov	r0, #0
   16968:	bl	10e18 <dcgettext@plt>
   1696c:	ldr	r3, [r4, #28]
   16970:	mov	r2, r0
   16974:	mov	r1, #1
   16978:	mov	r0, r5
   1697c:	str	r3, [sp, #24]
   16980:	ldr	r3, [r4, #24]
   16984:	str	r3, [sp, #20]
   16988:	ldr	r3, [r4, #20]
   1698c:	str	r3, [sp, #16]
   16990:	ldr	r3, [r4, #16]
   16994:	str	r3, [sp, #12]
   16998:	ldr	r3, [r4, #12]
   1699c:	str	r3, [sp, #8]
   169a0:	ldr	r3, [r4, #8]
   169a4:	str	r3, [sp, #4]
   169a8:	ldr	r3, [r4, #4]
   169ac:	str	r3, [sp]
   169b0:	ldr	r3, [r4]
   169b4:	bl	10f50 <__fprintf_chk@plt>
   169b8:	b	16864 <putchar_unlocked@plt+0x583c>
   169bc:	ldr	r1, [pc, #164]	; 16a68 <putchar_unlocked@plt+0x5a40>
   169c0:	mov	r2, #5
   169c4:	mov	r0, #0
   169c8:	bl	10e18 <dcgettext@plt>
   169cc:	ldr	r3, [r4, #32]
   169d0:	mov	r2, r0
   169d4:	mov	r1, #1
   169d8:	mov	r0, r5
   169dc:	str	r3, [sp, #28]
   169e0:	ldr	r3, [r4, #28]
   169e4:	str	r3, [sp, #24]
   169e8:	ldr	r3, [r4, #24]
   169ec:	str	r3, [sp, #20]
   169f0:	ldr	r3, [r4, #20]
   169f4:	str	r3, [sp, #16]
   169f8:	ldr	r3, [r4, #16]
   169fc:	str	r3, [sp, #12]
   16a00:	ldr	r3, [r4, #12]
   16a04:	str	r3, [sp, #8]
   16a08:	ldr	r3, [r4, #8]
   16a0c:	str	r3, [sp, #4]
   16a10:	ldr	r3, [r4, #4]
   16a14:	str	r3, [sp]
   16a18:	ldr	r3, [r4]
   16a1c:	bl	10f50 <__fprintf_chk@plt>
   16a20:	b	16864 <putchar_unlocked@plt+0x583c>
   16a24:	mov	r2, #5
   16a28:	ldr	r1, [pc, #60]	; 16a6c <putchar_unlocked@plt+0x5a44>
   16a2c:	b	169c4 <putchar_unlocked@plt+0x599c>
   16a30:	andeq	r8, r1, r3, asr r3
   16a34:	andeq	r8, r1, r6, ror #6
   16a38:	andeq	r8, r1, r4, lsr r6
   16a3c:	andeq	r8, r1, sl, ror #6
   16a40:	andeq	r8, r1, r5, lsl r4
   16a44:	andeq	r8, r1, pc, asr r3
   16a48:	andeq	r8, r1, r7, lsr r4
   16a4c:	andeq	r8, r1, r7, asr #8
   16a50:	andeq	r8, r1, lr, asr r4
   16a54:	andeq	r8, r1, sl, ror r4
   16a58:	muleq	r1, sl, r4
   16a5c:			; <UNDEFINED> instruction: 0x000184be
   16a60:	andeq	r8, r1, r6, ror #9
   16a64:	andeq	r8, r1, r2, lsl r5
   16a68:	andeq	r8, r1, r2, asr #10
   16a6c:	andeq	r8, r1, r6, ror r5
   16a70:	push	{r0, r1, r4, lr}
   16a74:	mov	ip, #0
   16a78:	ldr	lr, [sp, #16]
   16a7c:	ldr	r4, [lr, ip, lsl #2]
   16a80:	cmp	r4, #0
   16a84:	bne	16a9c <putchar_unlocked@plt+0x5a74>
   16a88:	str	lr, [sp]
   16a8c:	str	ip, [sp, #4]
   16a90:	bl	166a8 <putchar_unlocked@plt+0x5680>
   16a94:	add	sp, sp, #8
   16a98:	pop	{r4, pc}
   16a9c:	add	ip, ip, #1
   16aa0:	b	16a7c <putchar_unlocked@plt+0x5a54>
   16aa4:	push	{r4, r5, r6, lr}
   16aa8:	sub	sp, sp, #48	; 0x30
   16aac:	mov	ip, #0
   16ab0:	add	lr, sp, #8
   16ab4:	mov	r5, lr
   16ab8:	ldr	r6, [sp, #64]	; 0x40
   16abc:	ldr	r4, [r6, ip, lsl #2]
   16ac0:	cmp	r4, #0
   16ac4:	str	r4, [lr], #4
   16ac8:	beq	16ad8 <putchar_unlocked@plt+0x5ab0>
   16acc:	add	ip, ip, #1
   16ad0:	cmp	ip, #10
   16ad4:	bne	16abc <putchar_unlocked@plt+0x5a94>
   16ad8:	stm	sp, {r5, ip}
   16adc:	bl	166a8 <putchar_unlocked@plt+0x5680>
   16ae0:	add	sp, sp, #48	; 0x30
   16ae4:	pop	{r4, r5, r6, pc}
   16ae8:	push	{r3}		; (str r3, [sp, #-4]!)
   16aec:	push	{r0, r1, r2, r3, lr}
   16af0:	add	r3, sp, #24
   16af4:	str	r3, [sp]
   16af8:	str	r3, [sp, #12]
   16afc:	ldr	r3, [sp, #20]
   16b00:	bl	16aa4 <putchar_unlocked@plt+0x5a7c>
   16b04:	add	sp, sp, #16
   16b08:	pop	{lr}		; (ldr lr, [sp], #4)
   16b0c:	add	sp, sp, #4
   16b10:	bx	lr
   16b14:	ldr	r3, [pc, #116]	; 16b90 <putchar_unlocked@plt+0x5b68>
   16b18:	mov	r0, #10
   16b1c:	push	{r4, lr}
   16b20:	ldr	r1, [r3]
   16b24:	bl	10e0c <fputc_unlocked@plt>
   16b28:	mov	r2, #5
   16b2c:	ldr	r1, [pc, #96]	; 16b94 <putchar_unlocked@plt+0x5b6c>
   16b30:	mov	r0, #0
   16b34:	bl	10e18 <dcgettext@plt>
   16b38:	mov	r1, r0
   16b3c:	ldr	r2, [pc, #84]	; 16b98 <putchar_unlocked@plt+0x5b70>
   16b40:	mov	r0, #1
   16b44:	bl	10f38 <__printf_chk@plt>
   16b48:	mov	r2, #5
   16b4c:	ldr	r1, [pc, #72]	; 16b9c <putchar_unlocked@plt+0x5b74>
   16b50:	mov	r0, #0
   16b54:	bl	10e18 <dcgettext@plt>
   16b58:	mov	r1, r0
   16b5c:	ldr	r3, [pc, #60]	; 16ba0 <putchar_unlocked@plt+0x5b78>
   16b60:	mov	r0, #1
   16b64:	ldr	r2, [pc, #56]	; 16ba4 <putchar_unlocked@plt+0x5b7c>
   16b68:	bl	10f38 <__printf_chk@plt>
   16b6c:	mov	r2, #5
   16b70:	ldr	r1, [pc, #48]	; 16ba8 <putchar_unlocked@plt+0x5b80>
   16b74:	mov	r0, #0
   16b78:	bl	10e18 <dcgettext@plt>
   16b7c:	mov	r1, r0
   16b80:	ldr	r2, [pc, #36]	; 16bac <putchar_unlocked@plt+0x5b84>
   16b84:	mov	r0, #1
   16b88:	pop	{r4, lr}
   16b8c:	b	10f38 <__printf_chk@plt>
   16b90:	andeq	r9, r2, ip, ror #2
   16b94:			; <UNDEFINED> instruction: 0x000185b2
   16b98:	andeq	r8, r1, r6, asr #11
   16b9c:	ldrdeq	r8, [r1], -ip
   16ba0:	andeq	r7, r1, r7, lsr #24
   16ba4:	andeq	r7, r1, pc, asr #24
   16ba8:	strdeq	r8, [r1], -r0
   16bac:	andeq	r8, r1, r7, lsl r6
   16bb0:	push	{r4, lr}
   16bb4:	bl	16efc <putchar_unlocked@plt+0x5ed4>
   16bb8:	cmp	r0, #0
   16bbc:	popne	{r4, pc}
   16bc0:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16bc4:	push	{r4, lr}
   16bc8:	bl	16efc <putchar_unlocked@plt+0x5ed4>
   16bcc:	cmp	r0, #0
   16bd0:	popne	{r4, pc}
   16bd4:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16bd8:	b	16bb0 <putchar_unlocked@plt+0x5b88>
   16bdc:	push	{r4, r5, r6, lr}
   16be0:	mov	r5, r0
   16be4:	mov	r4, r1
   16be8:	bl	16f28 <putchar_unlocked@plt+0x5f00>
   16bec:	cmp	r0, #0
   16bf0:	popne	{r4, r5, r6, pc}
   16bf4:	adds	r4, r4, #0
   16bf8:	movne	r4, #1
   16bfc:	cmp	r5, #0
   16c00:	moveq	r4, #1
   16c04:	cmp	r4, #0
   16c08:	popeq	{r4, r5, r6, pc}
   16c0c:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16c10:	push	{r4, lr}
   16c14:	bl	17190 <putchar_unlocked@plt+0x6168>
   16c18:	cmp	r0, #0
   16c1c:	popne	{r4, pc}
   16c20:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16c24:	push	{r4, r5, r6, lr}
   16c28:	mov	r6, r0
   16c2c:	mov	r5, r1
   16c30:	mov	r4, r2
   16c34:	bl	17238 <putchar_unlocked@plt+0x6210>
   16c38:	cmp	r0, #0
   16c3c:	popne	{r4, r5, r6, pc}
   16c40:	cmp	r6, #0
   16c44:	beq	16c54 <putchar_unlocked@plt+0x5c2c>
   16c48:	cmp	r5, #0
   16c4c:	cmpne	r4, #0
   16c50:	popeq	{r4, r5, r6, pc}
   16c54:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16c58:	b	16c24 <putchar_unlocked@plt+0x5bfc>
   16c5c:	push	{r4, lr}
   16c60:	bl	171a0 <putchar_unlocked@plt+0x6178>
   16c64:	cmp	r0, #0
   16c68:	popne	{r4, pc}
   16c6c:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16c70:	mov	r2, r1
   16c74:	mov	r1, r0
   16c78:	mov	r0, #0
   16c7c:	b	16c24 <putchar_unlocked@plt+0x5bfc>
   16c80:	mov	r2, r1
   16c84:	mov	r1, r0
   16c88:	mov	r0, #0
   16c8c:	b	16c5c <putchar_unlocked@plt+0x5c34>
   16c90:	cmp	r0, #0
   16c94:	push	{r4, r5, r6, lr}
   16c98:	mov	r5, r1
   16c9c:	ldr	r4, [r1]
   16ca0:	bne	16ccc <putchar_unlocked@plt+0x5ca4>
   16ca4:	cmp	r4, #0
   16ca8:	bne	16cbc <putchar_unlocked@plt+0x5c94>
   16cac:	mov	r4, #64	; 0x40
   16cb0:	udiv	r4, r4, r2
   16cb4:	cmp	r2, #64	; 0x40
   16cb8:	addhi	r4, r4, #1
   16cbc:	mov	r1, r4
   16cc0:	bl	16c24 <putchar_unlocked@plt+0x5bfc>
   16cc4:	str	r4, [r5]
   16cc8:	pop	{r4, r5, r6, pc}
   16ccc:	lsr	r3, r4, #1
   16cd0:	add	r3, r3, #1
   16cd4:	adds	r4, r4, r3
   16cd8:	bcc	16cbc <putchar_unlocked@plt+0x5c94>
   16cdc:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16ce0:	mov	r2, #1
   16ce4:	b	16c90 <putchar_unlocked@plt+0x5c68>
   16ce8:	ldr	ip, [r1]
   16cec:	push	{r4, r5, r6, r7, r8, lr}
   16cf0:	mov	r5, r1
   16cf4:	mvn	r8, r3
   16cf8:	lsr	r8, r8, #31
   16cfc:	ldr	lr, [sp, #24]
   16d00:	asr	r1, ip, #1
   16d04:	adds	r4, ip, r1
   16d08:	mvnvs	r4, #-2147483648	; 0x80000000
   16d0c:	cmp	r3, r4
   16d10:	movge	r1, #0
   16d14:	andlt	r1, r8, #1
   16d18:	cmp	r1, #0
   16d1c:	movne	r4, r3
   16d20:	smull	r6, r7, r4, lr
   16d24:	cmp	r7, r6, asr #31
   16d28:	bne	16d40 <putchar_unlocked@plt+0x5d18>
   16d2c:	cmp	r6, #63	; 0x3f
   16d30:	mov	r1, r6
   16d34:	bgt	16d50 <putchar_unlocked@plt+0x5d28>
   16d38:	mov	r1, #64	; 0x40
   16d3c:	b	16d44 <putchar_unlocked@plt+0x5d1c>
   16d40:	mvn	r1, #-2147483648	; 0x80000000
   16d44:	sdiv	r4, r1, lr
   16d48:	mls	r6, lr, r4, r1
   16d4c:	sub	r1, r1, r6
   16d50:	cmp	r0, #0
   16d54:	sub	r6, r4, ip
   16d58:	streq	r0, [r5]
   16d5c:	cmp	r6, r2
   16d60:	bge	16d94 <putchar_unlocked@plt+0x5d6c>
   16d64:	adds	r4, ip, r2
   16d68:	bvs	16d90 <putchar_unlocked@plt+0x5d68>
   16d6c:	cmp	r4, r3
   16d70:	movle	r3, #0
   16d74:	andgt	r3, r8, #1
   16d78:	cmp	r3, #0
   16d7c:	bne	16d90 <putchar_unlocked@plt+0x5d68>
   16d80:	smull	r2, r3, r4, lr
   16d84:	cmp	r3, r2, asr #31
   16d88:	mov	r1, r2
   16d8c:	beq	16d94 <putchar_unlocked@plt+0x5d6c>
   16d90:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16d94:	bl	16bdc <putchar_unlocked@plt+0x5bb4>
   16d98:	str	r4, [r5]
   16d9c:	pop	{r4, r5, r6, r7, r8, pc}
   16da0:	push	{r4, lr}
   16da4:	bl	16ea8 <putchar_unlocked@plt+0x5e80>
   16da8:	cmp	r0, #0
   16dac:	popne	{r4, pc}
   16db0:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16db4:	mov	r1, #1
   16db8:	b	16da0 <putchar_unlocked@plt+0x5d78>
   16dbc:	push	{r4, lr}
   16dc0:	bl	16ea8 <putchar_unlocked@plt+0x5e80>
   16dc4:	cmp	r0, #0
   16dc8:	popne	{r4, pc}
   16dcc:	bl	16e68 <putchar_unlocked@plt+0x5e40>
   16dd0:	mov	r1, #1
   16dd4:	b	16dbc <putchar_unlocked@plt+0x5d94>
   16dd8:	push	{r4, r5, r6, lr}
   16ddc:	mov	r4, r1
   16de0:	mov	r5, r0
   16de4:	mov	r0, r1
   16de8:	bl	16bb0 <putchar_unlocked@plt+0x5b88>
   16dec:	mov	r2, r4
   16df0:	mov	r1, r5
   16df4:	pop	{r4, r5, r6, lr}
   16df8:	b	10de8 <memcpy@plt>
   16dfc:	push	{r4, r5, r6, lr}
   16e00:	mov	r4, r1
   16e04:	mov	r5, r0
   16e08:	mov	r0, r1
   16e0c:	bl	16bc4 <putchar_unlocked@plt+0x5b9c>
   16e10:	mov	r2, r4
   16e14:	mov	r1, r5
   16e18:	pop	{r4, r5, r6, lr}
   16e1c:	b	10de8 <memcpy@plt>
   16e20:	push	{r4, r5, r6, lr}
   16e24:	mov	r5, r0
   16e28:	add	r0, r1, #1
   16e2c:	mov	r4, r1
   16e30:	bl	16bc4 <putchar_unlocked@plt+0x5b9c>
   16e34:	mov	r2, #0
   16e38:	mov	r1, r5
   16e3c:	strb	r2, [r0, r4]
   16e40:	mov	r2, r4
   16e44:	pop	{r4, r5, r6, lr}
   16e48:	b	10de8 <memcpy@plt>
   16e4c:	push	{r4, lr}
   16e50:	mov	r4, r0
   16e54:	bl	10ef0 <strlen@plt>
   16e58:	add	r1, r0, #1
   16e5c:	mov	r0, r4
   16e60:	pop	{r4, lr}
   16e64:	b	16dd8 <putchar_unlocked@plt+0x5db0>
   16e68:	ldr	r3, [pc, #44]	; 16e9c <putchar_unlocked@plt+0x5e74>
   16e6c:	mov	r2, #5
   16e70:	mov	r0, #0
   16e74:	push	{r4, lr}
   16e78:	ldr	r1, [pc, #32]	; 16ea0 <putchar_unlocked@plt+0x5e78>
   16e7c:	ldr	r4, [r3]
   16e80:	bl	10e18 <dcgettext@plt>
   16e84:	mov	r3, r0
   16e88:	ldr	r2, [pc, #20]	; 16ea4 <putchar_unlocked@plt+0x5e7c>
   16e8c:	mov	r1, #0
   16e90:	mov	r0, r4
   16e94:	bl	10e84 <error@plt>
   16e98:	bl	10ff8 <abort@plt>
   16e9c:	andeq	r9, r2, ip, lsl #2
   16ea0:	andeq	r8, r1, r3, ror #12
   16ea4:	andeq	r8, r1, r2, lsl r2
   16ea8:	cmp	r1, #0
   16eac:	cmpne	r0, #0
   16eb0:	beq	16ee8 <putchar_unlocked@plt+0x5ec0>
   16eb4:	push	{r4, r5, r6, lr}
   16eb8:	umull	r4, r5, r0, r1
   16ebc:	adds	r3, r5, #0
   16ec0:	movne	r3, #1
   16ec4:	cmp	r4, #0
   16ec8:	blt	16ed4 <putchar_unlocked@plt+0x5eac>
   16ecc:	cmp	r3, #0
   16ed0:	beq	16ef4 <putchar_unlocked@plt+0x5ecc>
   16ed4:	bl	10f08 <__errno_location@plt>
   16ed8:	mov	r3, #12
   16edc:	str	r3, [r0]
   16ee0:	mov	r0, #0
   16ee4:	pop	{r4, r5, r6, pc}
   16ee8:	mov	r1, #1
   16eec:	mov	r0, r1
   16ef0:	b	10d88 <calloc@plt>
   16ef4:	pop	{r4, r5, r6, lr}
   16ef8:	b	16ef0 <putchar_unlocked@plt+0x5ec8>
   16efc:	cmp	r0, #0
   16f00:	beq	16f20 <putchar_unlocked@plt+0x5ef8>
   16f04:	bge	16f24 <putchar_unlocked@plt+0x5efc>
   16f08:	push	{r4, lr}
   16f0c:	bl	10f08 <__errno_location@plt>
   16f10:	mov	r3, #12
   16f14:	str	r3, [r0]
   16f18:	mov	r0, #0
   16f1c:	pop	{r4, pc}
   16f20:	mov	r0, #1
   16f24:	b	10e90 <malloc@plt>
   16f28:	cmp	r0, #0
   16f2c:	bne	16f38 <putchar_unlocked@plt+0x5f10>
   16f30:	mov	r0, r1
   16f34:	b	16efc <putchar_unlocked@plt+0x5ed4>
   16f38:	cmp	r1, #0
   16f3c:	push	{r4, lr}
   16f40:	bne	16f50 <putchar_unlocked@plt+0x5f28>
   16f44:	bl	14fa8 <putchar_unlocked@plt+0x3f80>
   16f48:	mov	r0, #0
   16f4c:	pop	{r4, pc}
   16f50:	blt	16f5c <putchar_unlocked@plt+0x5f34>
   16f54:	pop	{r4, lr}
   16f58:	b	10e24 <realloc@plt>
   16f5c:	bl	10f08 <__errno_location@plt>
   16f60:	mov	r3, #12
   16f64:	str	r3, [r0]
   16f68:	b	16f48 <putchar_unlocked@plt+0x5f20>
   16f6c:	push	{r4, r5, r6, lr}
   16f70:	mov	r4, r0
   16f74:	bl	10e60 <__fpending@plt>
   16f78:	mov	r5, r0
   16f7c:	mov	r0, r4
   16f80:	bl	10e6c <ferror_unlocked@plt>
   16f84:	mov	r6, r0
   16f88:	mov	r0, r4
   16f8c:	bl	14e1c <putchar_unlocked@plt+0x3df4>
   16f90:	cmp	r6, #0
   16f94:	mov	r4, r0
   16f98:	bne	16fc4 <putchar_unlocked@plt+0x5f9c>
   16f9c:	cmp	r0, #0
   16fa0:	beq	16fbc <putchar_unlocked@plt+0x5f94>
   16fa4:	cmp	r5, #0
   16fa8:	bne	16fd4 <putchar_unlocked@plt+0x5fac>
   16fac:	bl	10f08 <__errno_location@plt>
   16fb0:	ldr	r4, [r0]
   16fb4:	subs	r4, r4, #9
   16fb8:	mvnne	r4, #0
   16fbc:	mov	r0, r4
   16fc0:	pop	{r4, r5, r6, pc}
   16fc4:	cmp	r0, #0
   16fc8:	bne	16fd4 <putchar_unlocked@plt+0x5fac>
   16fcc:	bl	10f08 <__errno_location@plt>
   16fd0:	str	r4, [r0]
   16fd4:	mvn	r4, #0
   16fd8:	b	16fbc <putchar_unlocked@plt+0x5f94>
   16fdc:	push	{r1, r2, r3}
   16fe0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, lr}
   16fe4:	add	r2, sp, #40	; 0x28
   16fe8:	ldr	r1, [sp, #36]	; 0x24
   16fec:	str	r2, [sp, #4]
   16ff0:	cmp	r1, #0
   16ff4:	beq	17044 <putchar_unlocked@plt+0x601c>
   16ff8:	movw	r3, #1030	; 0x406
   16ffc:	mov	r5, r0
   17000:	cmp	r1, r3
   17004:	beq	17050 <putchar_unlocked@plt+0x6028>
   17008:	cmp	r1, #11
   1700c:	beq	17034 <putchar_unlocked@plt+0x600c>
   17010:	bgt	17144 <putchar_unlocked@plt+0x611c>
   17014:	cmp	r1, #4
   17018:	beq	1715c <putchar_unlocked@plt+0x6134>
   1701c:	bgt	1713c <putchar_unlocked@plt+0x6114>
   17020:	cmp	r1, #2
   17024:	beq	1715c <putchar_unlocked@plt+0x6134>
   17028:	bgt	17034 <putchar_unlocked@plt+0x600c>
   1702c:	cmp	r1, #1
   17030:	bne	1715c <putchar_unlocked@plt+0x6134>
   17034:	mov	r0, r5
   17038:	bl	10f74 <fcntl64@plt>
   1703c:	mov	r4, r0
   17040:	b	17098 <putchar_unlocked@plt+0x6070>
   17044:	ldr	r2, [sp, #40]	; 0x28
   17048:	bl	10f74 <fcntl64@plt>
   1704c:	b	1703c <putchar_unlocked@plt+0x6014>
   17050:	ldr	r6, [pc, #304]	; 17188 <putchar_unlocked@plt+0x6160>
   17054:	add	r3, sp, #44	; 0x2c
   17058:	str	r3, [sp, #4]
   1705c:	ldr	r7, [r2]
   17060:	ldr	r3, [r6]
   17064:	mov	r8, r6
   17068:	mov	r2, r7
   1706c:	cmp	r3, #0
   17070:	blt	17100 <putchar_unlocked@plt+0x60d8>
   17074:	bl	10f74 <fcntl64@plt>
   17078:	subs	r4, r0, #0
   1707c:	bge	17090 <putchar_unlocked@plt+0x6068>
   17080:	bl	10f08 <__errno_location@plt>
   17084:	ldr	r3, [r0]
   17088:	cmp	r3, #22
   1708c:	beq	170ac <putchar_unlocked@plt+0x6084>
   17090:	mov	r3, #1
   17094:	str	r3, [r8]
   17098:	mov	r0, r4
   1709c:	add	sp, sp, #12
   170a0:	pop	{r4, r5, r6, r7, r8, lr}
   170a4:	add	sp, sp, #12
   170a8:	bx	lr
   170ac:	mov	r2, r7
   170b0:	mov	r1, #0
   170b4:	mov	r0, r5
   170b8:	bl	10f74 <fcntl64@plt>
   170bc:	subs	r4, r0, #0
   170c0:	mvnge	r3, #0
   170c4:	strge	r3, [r6]
   170c8:	blt	17098 <putchar_unlocked@plt+0x6070>
   170cc:	mov	r1, #1
   170d0:	mov	r0, r4
   170d4:	bl	10f74 <fcntl64@plt>
   170d8:	subs	r2, r0, #0
   170dc:	bge	17120 <putchar_unlocked@plt+0x60f8>
   170e0:	bl	10f08 <__errno_location@plt>
   170e4:	mov	r5, r0
   170e8:	mov	r0, r4
   170ec:	ldr	r6, [r5]
   170f0:	mvn	r4, #0
   170f4:	bl	11010 <close@plt>
   170f8:	str	r6, [r5]
   170fc:	b	17098 <putchar_unlocked@plt+0x6070>
   17100:	mov	r1, #0
   17104:	bl	10f74 <fcntl64@plt>
   17108:	subs	r4, r0, #0
   1710c:	blt	17098 <putchar_unlocked@plt+0x6070>
   17110:	ldr	r3, [r6]
   17114:	cmn	r3, #1
   17118:	bne	17098 <putchar_unlocked@plt+0x6070>
   1711c:	b	170cc <putchar_unlocked@plt+0x60a4>
   17120:	orr	r2, r2, #1
   17124:	mov	r1, #2
   17128:	mov	r0, r4
   1712c:	bl	10f74 <fcntl64@plt>
   17130:	cmn	r0, #1
   17134:	bne	17098 <putchar_unlocked@plt+0x6070>
   17138:	b	170e0 <putchar_unlocked@plt+0x60b8>
   1713c:	cmp	r1, #9
   17140:	b	17030 <putchar_unlocked@plt+0x6008>
   17144:	movw	r2, #1031	; 0x407
   17148:	cmp	r1, r2
   1714c:	bgt	1716c <putchar_unlocked@plt+0x6144>
   17150:	cmp	r1, r3
   17154:	movwlt	r3, #1025	; 0x401
   17158:	blt	17180 <putchar_unlocked@plt+0x6158>
   1715c:	ldr	r3, [sp, #4]
   17160:	mov	r0, r5
   17164:	ldr	r2, [r3]
   17168:	b	17048 <putchar_unlocked@plt+0x6020>
   1716c:	movw	r3, #1033	; 0x409
   17170:	cmp	r1, r3
   17174:	beq	1715c <putchar_unlocked@plt+0x6134>
   17178:	blt	17034 <putchar_unlocked@plt+0x600c>
   1717c:	movw	r3, #1034	; 0x40a
   17180:	cmp	r1, r3
   17184:	b	17030 <putchar_unlocked@plt+0x6008>
   17188:	andeq	r9, r2, r0, asr #5
   1718c:	b	16efc <putchar_unlocked@plt+0x5ed4>
   17190:	cmp	r1, #0
   17194:	orreq	r1, r1, #1
   17198:	b	16f28 <putchar_unlocked@plt+0x5f00>
   1719c:	b	16ea8 <putchar_unlocked@plt+0x5e80>
   171a0:	cmp	r2, #0
   171a4:	cmpne	r1, #0
   171a8:	moveq	r2, #1
   171ac:	moveq	r1, r2
   171b0:	b	17238 <putchar_unlocked@plt+0x6210>
   171b4:	push	{r4, lr}
   171b8:	mov	r0, #14
   171bc:	bl	10f98 <nl_langinfo@plt>
   171c0:	cmp	r0, #0
   171c4:	beq	171dc <putchar_unlocked@plt+0x61b4>
   171c8:	ldrb	r2, [r0]
   171cc:	ldr	r3, [pc, #16]	; 171e4 <putchar_unlocked@plt+0x61bc>
   171d0:	cmp	r2, #0
   171d4:	moveq	r0, r3
   171d8:	pop	{r4, pc}
   171dc:	ldr	r0, [pc]	; 171e4 <putchar_unlocked@plt+0x61bc>
   171e0:	pop	{r4, pc}
   171e4:	andeq	r8, r1, r4, ror r6
   171e8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   171ec:	subs	r5, r0, #0
   171f0:	mov	r7, r2
   171f4:	addeq	r5, sp, #4
   171f8:	mov	r6, r1
   171fc:	mov	r0, r5
   17200:	bl	10e78 <mbrtowc@plt>
   17204:	cmp	r7, #0
   17208:	cmnne	r0, #3
   1720c:	mov	r4, r0
   17210:	bls	1722c <putchar_unlocked@plt+0x6204>
   17214:	mov	r0, #0
   17218:	bl	17264 <putchar_unlocked@plt+0x623c>
   1721c:	cmp	r0, #0
   17220:	ldrbeq	r3, [r6]
   17224:	moveq	r4, #1
   17228:	streq	r3, [r5]
   1722c:	mov	r0, r4
   17230:	add	sp, sp, #12
   17234:	pop	{r4, r5, r6, r7, pc}
   17238:	umull	r2, r3, r1, r2
   1723c:	cmp	r3, #0
   17240:	bne	1724c <putchar_unlocked@plt+0x6224>
   17244:	mov	r1, r2
   17248:	b	16f28 <putchar_unlocked@plt+0x5f00>
   1724c:	push	{r4, lr}
   17250:	bl	10f08 <__errno_location@plt>
   17254:	mov	r3, #12
   17258:	str	r3, [r0]
   1725c:	mov	r0, #0
   17260:	pop	{r4, pc}
   17264:	push	{lr}		; (str lr, [sp, #-4]!)
   17268:	sub	sp, sp, #268	; 0x10c
   1726c:	movw	r2, #257	; 0x101
   17270:	add	r1, sp, #4
   17274:	bl	172c0 <putchar_unlocked@plt+0x6298>
   17278:	cmp	r0, #0
   1727c:	movne	r0, #0
   17280:	bne	172b0 <putchar_unlocked@plt+0x6288>
   17284:	ldr	r1, [pc, #44]	; 172b8 <putchar_unlocked@plt+0x6290>
   17288:	add	r0, sp, #4
   1728c:	bl	10dac <strcmp@plt>
   17290:	cmp	r0, #0
   17294:	beq	172ac <putchar_unlocked@plt+0x6284>
   17298:	ldr	r1, [pc, #28]	; 172bc <putchar_unlocked@plt+0x6294>
   1729c:	add	r0, sp, #4
   172a0:	bl	10dac <strcmp@plt>
   172a4:	adds	r0, r0, #0
   172a8:	movne	r0, #1
   172ac:	and	r0, r0, #1
   172b0:	add	sp, sp, #268	; 0x10c
   172b4:	pop	{pc}		; (ldr pc, [sp], #4)
   172b8:	andeq	r8, r1, sl, ror r6
   172bc:	andeq	r8, r1, ip, ror r6
   172c0:	push	{r4, r5, r6, lr}
   172c4:	mov	r5, r1
   172c8:	mov	r1, #0
   172cc:	mov	r4, r2
   172d0:	bl	10f80 <setlocale@plt>
   172d4:	subs	r6, r0, #0
   172d8:	bne	172ec <putchar_unlocked@plt+0x62c4>
   172dc:	cmp	r4, #0
   172e0:	mov	r0, #22
   172e4:	strbne	r6, [r5]
   172e8:	pop	{r4, r5, r6, pc}
   172ec:	bl	10ef0 <strlen@plt>
   172f0:	cmp	r4, r0
   172f4:	bls	17310 <putchar_unlocked@plt+0x62e8>
   172f8:	add	r2, r0, #1
   172fc:	mov	r1, r6
   17300:	mov	r0, r5
   17304:	bl	10de8 <memcpy@plt>
   17308:	mov	r0, #0
   1730c:	pop	{r4, r5, r6, pc}
   17310:	cmp	r4, #0
   17314:	beq	17334 <putchar_unlocked@plt+0x630c>
   17318:	sub	r4, r4, #1
   1731c:	mov	r1, r6
   17320:	mov	r2, r4
   17324:	mov	r0, r5
   17328:	bl	10de8 <memcpy@plt>
   1732c:	mov	r3, #0
   17330:	strb	r3, [r5, r4]
   17334:	mov	r0, #34	; 0x22
   17338:	pop	{r4, r5, r6, pc}
   1733c:	mov	r1, #0
   17340:	b	10f80 <setlocale@plt>
   17344:	cmp	r3, #0
   17348:	cmpeq	r2, #0
   1734c:	bne	17364 <putchar_unlocked@plt+0x633c>
   17350:	cmp	r1, #0
   17354:	cmpeq	r0, #0
   17358:	mvnne	r1, #0
   1735c:	mvnne	r0, #0
   17360:	b	17380 <putchar_unlocked@plt+0x6358>
   17364:	sub	sp, sp, #8
   17368:	push	{sp, lr}
   1736c:	bl	17390 <putchar_unlocked@plt+0x6368>
   17370:	ldr	lr, [sp, #4]
   17374:	add	sp, sp, #8
   17378:	pop	{r2, r3}
   1737c:	bx	lr
   17380:	push	{r1, lr}
   17384:	mov	r0, #8
   17388:	bl	10da0 <raise@plt>
   1738c:	pop	{r1, pc}
   17390:	cmp	r1, r3
   17394:	cmpeq	r0, r2
   17398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1739c:	mov	r4, r0
   173a0:	movcc	r0, #0
   173a4:	mov	r5, r1
   173a8:	ldr	lr, [sp, #36]	; 0x24
   173ac:	movcc	r1, r0
   173b0:	bcc	174ac <putchar_unlocked@plt+0x6484>
   173b4:	cmp	r3, #0
   173b8:	clzeq	ip, r2
   173bc:	clzne	ip, r3
   173c0:	addeq	ip, ip, #32
   173c4:	cmp	r5, #0
   173c8:	clzeq	r1, r4
   173cc:	addeq	r1, r1, #32
   173d0:	clzne	r1, r5
   173d4:	sub	ip, ip, r1
   173d8:	sub	sl, ip, #32
   173dc:	lsl	r9, r3, ip
   173e0:	rsb	fp, ip, #32
   173e4:	orr	r9, r9, r2, lsl sl
   173e8:	orr	r9, r9, r2, lsr fp
   173ec:	lsl	r8, r2, ip
   173f0:	cmp	r5, r9
   173f4:	cmpeq	r4, r8
   173f8:	movcc	r0, #0
   173fc:	movcc	r1, r0
   17400:	bcc	1741c <putchar_unlocked@plt+0x63f4>
   17404:	mov	r0, #1
   17408:	subs	r4, r4, r8
   1740c:	lsl	r1, r0, sl
   17410:	orr	r1, r1, r0, lsr fp
   17414:	lsl	r0, r0, ip
   17418:	sbc	r5, r5, r9
   1741c:	cmp	ip, #0
   17420:	beq	174ac <putchar_unlocked@plt+0x6484>
   17424:	lsr	r6, r8, #1
   17428:	orr	r6, r6, r9, lsl #31
   1742c:	lsr	r7, r9, #1
   17430:	mov	r2, ip
   17434:	b	17458 <putchar_unlocked@plt+0x6430>
   17438:	subs	r3, r4, r6
   1743c:	sbc	r8, r5, r7
   17440:	adds	r3, r3, r3
   17444:	adc	r8, r8, r8
   17448:	adds	r4, r3, #1
   1744c:	adc	r5, r8, #0
   17450:	subs	r2, r2, #1
   17454:	beq	17474 <putchar_unlocked@plt+0x644c>
   17458:	cmp	r5, r7
   1745c:	cmpeq	r4, r6
   17460:	bcs	17438 <putchar_unlocked@plt+0x6410>
   17464:	adds	r4, r4, r4
   17468:	adc	r5, r5, r5
   1746c:	subs	r2, r2, #1
   17470:	bne	17458 <putchar_unlocked@plt+0x6430>
   17474:	lsr	r3, r4, ip
   17478:	orr	r3, r3, r5, lsl fp
   1747c:	lsr	r2, r5, ip
   17480:	orr	r3, r3, r5, lsr sl
   17484:	adds	r0, r0, r4
   17488:	mov	r4, r3
   1748c:	lsl	r3, r2, ip
   17490:	orr	r3, r3, r4, lsl sl
   17494:	lsl	ip, r4, ip
   17498:	orr	r3, r3, r4, lsr fp
   1749c:	adc	r1, r1, r5
   174a0:	subs	r0, r0, ip
   174a4:	mov	r5, r2
   174a8:	sbc	r1, r1, r3
   174ac:	cmp	lr, #0
   174b0:	strdne	r4, [lr]
   174b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   174bc:	mov	r7, r0
   174c0:	ldr	r6, [pc, #72]	; 17510 <putchar_unlocked@plt+0x64e8>
   174c4:	ldr	r5, [pc, #72]	; 17514 <putchar_unlocked@plt+0x64ec>
   174c8:	add	r6, pc, r6
   174cc:	add	r5, pc, r5
   174d0:	sub	r6, r6, r5
   174d4:	mov	r8, r1
   174d8:	mov	r9, r2
   174dc:	bl	10d5c <fdopen@plt-0x20>
   174e0:	asrs	r6, r6, #2
   174e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   174e8:	mov	r4, #0
   174ec:	add	r4, r4, #1
   174f0:	ldr	r3, [r5], #4
   174f4:	mov	r2, r9
   174f8:	mov	r1, r8
   174fc:	mov	r0, r7
   17500:	blx	r3
   17504:	cmp	r6, r4
   17508:	bne	174ec <putchar_unlocked@plt+0x64c4>
   1750c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17510:	andeq	r1, r1, r4, asr #20
   17514:	andeq	r1, r1, ip, lsr sl
   17518:	bx	lr
   1751c:	ldr	r3, [pc, #12]	; 17530 <putchar_unlocked@plt+0x6508>
   17520:	mov	r1, #0
   17524:	add	r3, pc, r3
   17528:	ldr	r2, [r3]
   1752c:	b	10f14 <__cxa_atexit@plt>
   17530:	ldrdeq	r1, [r1], -r0

Disassembly of section .fini:

00017534 <.fini>:
   17534:	push	{r3, lr}
   17538:	pop	{r3, pc}
