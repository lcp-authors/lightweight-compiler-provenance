
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010c70 <.init>:
   10c70:	push	{r3, lr}
   10c74:	bl	10d74 <_start@@Base+0x3c>
   10c78:	pop	{r3, pc}

Disassembly of section .plt:

00010c7c <calloc@plt-0x14>:
   10c7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c80:	ldr	lr, [pc, #4]	; 10c8c <calloc@plt-0x4>
   10c84:	add	lr, pc, lr
   10c88:	ldr	pc, [lr, #8]!
   10c8c:	andeq	r1, r1, r4, ror r3

00010c90 <calloc@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #884]!	; 0x374

00010c9c <strcmp@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #876]!	; 0x36c

00010ca8 <free@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #868]!	; 0x364

00010cb4 <realloc@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #860]!	; 0x35c

00010cc0 <fwrite@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #852]!	; 0x354

00010ccc <strcpy@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #844]!	; 0x34c

00010cd8 <puts@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #836]!	; 0x344

00010ce4 <malloc@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #828]!	; 0x33c

00010cf0 <__libc_start_main@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #820]!	; 0x334

00010cfc <__gmon_start__@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #812]!	; 0x32c

00010d08 <strlen@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #804]!	; 0x324

00010d14 <fprintf@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #796]!	; 0x31c

00010d20 <putchar@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #788]!	; 0x314

00010d2c <abort@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #780]!	; 0x30c

Disassembly of section .text:

00010d38 <_start@@Base>:
   10d38:	mov	fp, #0
   10d3c:	mov	lr, #0
   10d40:	pop	{r1}		; (ldr r1, [sp], #4)
   10d44:	mov	r2, sp
   10d48:	push	{r2}		; (str r2, [sp, #-4]!)
   10d4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d50:	ldr	ip, [pc, #16]	; 10d68 <_start@@Base+0x30>
   10d54:	push	{ip}		; (str ip, [sp, #-4]!)
   10d58:	ldr	r0, [pc, #12]	; 10d6c <_start@@Base+0x34>
   10d5c:	ldr	r3, [pc, #12]	; 10d70 <_start@@Base+0x38>
   10d60:	bl	10cf0 <__libc_start_main@plt>
   10d64:	bl	10d2c <abort@plt>
   10d68:	andeq	r1, r1, r4, asr #21
   10d6c:	andeq	r1, r1, r4
   10d70:	andeq	r1, r1, r4, ror #20
   10d74:	ldr	r3, [pc, #20]	; 10d90 <_start@@Base+0x58>
   10d78:	ldr	r2, [pc, #20]	; 10d94 <_start@@Base+0x5c>
   10d7c:	add	r3, pc, r3
   10d80:	ldr	r2, [r3, r2]
   10d84:	cmp	r2, #0
   10d88:	bxeq	lr
   10d8c:	b	10cfc <__gmon_start__@plt>
   10d90:	andeq	r1, r1, ip, ror r2
   10d94:	andeq	r0, r0, r4, asr #32
   10d98:	ldr	r0, [pc, #24]	; 10db8 <_start@@Base+0x80>
   10d9c:	ldr	r3, [pc, #24]	; 10dbc <_start@@Base+0x84>
   10da0:	cmp	r3, r0
   10da4:	bxeq	lr
   10da8:	ldr	r3, [pc, #16]	; 10dc0 <_start@@Base+0x88>
   10dac:	cmp	r3, #0
   10db0:	bxeq	lr
   10db4:	bx	r3
   10db8:	muleq	r2, r8, r1
   10dbc:	muleq	r2, r8, r1
   10dc0:	andeq	r0, r0, r0
   10dc4:	ldr	r0, [pc, #36]	; 10df0 <_start@@Base+0xb8>
   10dc8:	ldr	r1, [pc, #36]	; 10df4 <_start@@Base+0xbc>
   10dcc:	sub	r1, r1, r0
   10dd0:	asr	r1, r1, #2
   10dd4:	add	r1, r1, r1, lsr #31
   10dd8:	asrs	r1, r1, #1
   10ddc:	bxeq	lr
   10de0:	ldr	r3, [pc, #16]	; 10df8 <_start@@Base+0xc0>
   10de4:	cmp	r3, #0
   10de8:	bxeq	lr
   10dec:	bx	r3
   10df0:	muleq	r2, r8, r1
   10df4:	muleq	r2, r8, r1
   10df8:	andeq	r0, r0, r0
   10dfc:	push	{r4, lr}
   10e00:	ldr	r4, [pc, #24]	; 10e20 <_start@@Base+0xe8>
   10e04:	ldrb	r3, [r4]
   10e08:	cmp	r3, #0
   10e0c:	popne	{r4, pc}
   10e10:	bl	10d98 <_start@@Base+0x60>
   10e14:	mov	r3, #1
   10e18:	strb	r3, [r4]
   10e1c:	pop	{r4, pc}
   10e20:	muleq	r2, ip, r1
   10e24:	b	10dc4 <_start@@Base+0x8c>

00010e28 <tira_carta@@Base>:
   10e28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e2c:	add	fp, sp, #24
   10e30:	ldr	r8, [r0]
   10e34:	ldr	r4, [r1]
   10e38:	mov	r5, r0
   10e3c:	ldr	r6, [r8]
   10e40:	ldr	r0, [r4]
   10e44:	mov	r1, r6
   10e48:	bl	10c9c <strcmp@plt>
   10e4c:	mov	r7, #0
   10e50:	b	10e68 <tira_carta@@Base+0x40>
   10e54:	ldr	r4, [r4, #4]
   10e58:	mov	r1, r6
   10e5c:	ldr	r0, [r4]
   10e60:	bl	10c9c <strcmp@plt>
   10e64:	add	r7, r7, #1
   10e68:	cmp	r0, #0
   10e6c:	bne	10e54 <tira_carta@@Base+0x2c>
   10e70:	mov	r0, r5
   10e74:	mov	r1, r8
   10e78:	bl	1183c <lista_remove@@Base>
   10e7c:	mov	r0, r7
   10e80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010e84 <faz_jogada@@Base>:
   10e84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10e88:	add	fp, sp, #24
   10e8c:	ldr	r6, [r0]
   10e90:	mov	r8, r0
   10e94:	mov	r9, r2
   10e98:	mov	r7, r1
   10e9c:	lsl	r0, r6, #2
   10ea0:	bl	10ce4 <malloc@plt>
   10ea4:	mov	r5, r0
   10ea8:	mvn	r4, #0
   10eac:	cmp	r6, #1
   10eb0:	blt	10f08 <faz_jogada@@Base+0x84>
   10eb4:	mov	r6, #0
   10eb8:	mov	r0, r7
   10ebc:	mov	r1, r9
   10ec0:	bl	10e28 <tira_carta@@Base>
   10ec4:	str	r0, [r5, r6, lsl #2]
   10ec8:	add	r6, r6, #1
   10ecc:	ldr	r0, [r8]
   10ed0:	cmp	r6, r0
   10ed4:	blt	10eb8 <faz_jogada@@Base+0x34>
   10ed8:	cmp	r0, #1
   10edc:	blt	10f08 <faz_jogada@@Base+0x84>
   10ee0:	mov	r1, #0
   10ee4:	mvn	r4, #0
   10ee8:	mvn	r2, #0
   10eec:	ldr	r3, [r5, r1, lsl #2]
   10ef0:	cmp	r3, r2
   10ef4:	movgt	r4, r1
   10ef8:	add	r1, r1, #1
   10efc:	movgt	r2, r3
   10f00:	cmp	r0, r1
   10f04:	bne	10eec <faz_jogada@@Base+0x68>
   10f08:	mov	r0, r5
   10f0c:	bl	10ca8 <free@plt>
   10f10:	ldr	r0, [r8, #8]
   10f14:	ldr	r0, [r0, r4, lsl #2]
   10f18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00010f1c <numero_vitorias@@Base>:
   10f1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f20:	add	fp, sp, #24
   10f24:	ldr	r6, [r0]
   10f28:	cmp	r6, #1
   10f2c:	blt	10f64 <numero_vitorias@@Base+0x48>
   10f30:	ldr	r7, [r0, #8]
   10f34:	mov	r8, r1
   10f38:	mov	r5, #0
   10f3c:	mov	r4, #0
   10f40:	ldr	r1, [r7, r4, lsl #2]
   10f44:	mov	r0, r8
   10f48:	bl	10c9c <strcmp@plt>
   10f4c:	cmp	r0, #0
   10f50:	add	r4, r4, #1
   10f54:	addeq	r5, r5, #1
   10f58:	cmp	r4, r6
   10f5c:	blt	10f40 <numero_vitorias@@Base+0x24>
   10f60:	b	10f68 <numero_vitorias@@Base+0x4c>
   10f64:	mov	r5, #0
   10f68:	mov	r0, r5
   10f6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010f70 <insere_carta@@Base>:
   10f70:	push	{fp, lr}
   10f74:	mov	fp, sp
   10f78:	sub	sp, sp, #8
   10f7c:	cmp	r1, #7
   10f80:	bgt	10f98 <insere_carta@@Base+0x28>
   10f84:	mov	r2, #0
   10f88:	add	r1, r1, #50	; 0x32
   10f8c:	strb	r2, [sp, #5]
   10f90:	strb	r1, [sp, #4]
   10f94:	b	10ff0 <insere_carta@@Base+0x80>
   10f98:	sub	r1, r1, #8
   10f9c:	cmp	r1, #4
   10fa0:	bhi	10ff0 <insere_carta@@Base+0x80>
   10fa4:	add	r2, pc, #0
   10fa8:	ldr	pc, [r2, r1, lsl #2]
   10fac:	andeq	r0, r1, r0, asr #31
   10fb0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fb4:	ldrdeq	r0, [r1], -r8
   10fb8:	andeq	r0, r1, r0, ror #31
   10fbc:	andeq	r0, r1, r8, ror #31
   10fc0:	mov	r1, #0
   10fc4:	strb	r1, [sp, #6]
   10fc8:	movw	r1, #12337	; 0x3031
   10fcc:	b	10fec <insere_carta@@Base+0x7c>
   10fd0:	mov	r1, #74	; 0x4a
   10fd4:	b	10fec <insere_carta@@Base+0x7c>
   10fd8:	mov	r1, #81	; 0x51
   10fdc:	b	10fec <insere_carta@@Base+0x7c>
   10fe0:	mov	r1, #75	; 0x4b
   10fe4:	b	10fec <insere_carta@@Base+0x7c>
   10fe8:	mov	r1, #65	; 0x41
   10fec:	strh	r1, [sp, #4]
   10ff0:	ldr	r2, [r0]
   10ff4:	add	r1, sp, #4
   10ff8:	bl	11794 <lista_insere@@Base>
   10ffc:	mov	sp, fp
   11000:	pop	{fp, pc}

00011004 <main@@Base>:
   11004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11008:	add	fp, sp, #28
   1100c:	sub	sp, sp, #4
   11010:	mov	r5, #0
   11014:	bl	112c8 <vetor_novo@@Base>
   11018:	movw	r6, #8272	; 0x2050
   1101c:	mov	r4, r0
   11020:	movt	r6, #2
   11024:	ldr	r1, [r6, r5, lsl #2]
   11028:	mov	r0, r4
   1102c:	mov	r2, r5
   11030:	bl	11414 <vetor_insere@@Base>
   11034:	add	r5, r5, #1
   11038:	cmp	r5, #4
   1103c:	bne	11024 <main@@Base+0x20>
   11040:	mov	r6, #0
   11044:	bl	116ec <lista_nova@@Base>
   11048:	movw	r8, #8340	; 0x2094
   1104c:	mov	r5, r0
   11050:	movt	r8, #2
   11054:	ldr	r1, [r8, r6, lsl #2]
   11058:	mov	r0, r5
   1105c:	bl	10f70 <insere_carta@@Base>
   11060:	add	r6, r6, #1
   11064:	cmp	r6, #52	; 0x34
   11068:	bne	11054 <main@@Base+0x50>
   1106c:	mov	r6, #0
   11070:	bl	116ec <lista_nova@@Base>
   11074:	movw	r7, #8288	; 0x2060
   11078:	mov	sl, r0
   1107c:	movt	r7, #2
   11080:	ldr	r1, [r7, r6, lsl #2]
   11084:	mov	r0, sl
   11088:	mov	r2, #0
   1108c:	bl	11794 <lista_insere@@Base>
   11090:	add	r6, r6, #1
   11094:	cmp	r6, #13
   11098:	bne	11080 <main@@Base+0x7c>
   1109c:	movw	r7, #8600	; 0x2198
   110a0:	mov	r0, r5
   110a4:	mov	r1, sl
   110a8:	movt	r7, #2
   110ac:	ldr	r6, [r7]
   110b0:	bl	10e28 <tira_carta@@Base>
   110b4:	movw	r1, #6915	; 0x1b03
   110b8:	mov	r2, r0
   110bc:	mov	r0, r6
   110c0:	movt	r1, #1
   110c4:	bl	10d14 <fprintf@plt>
   110c8:	ldr	r6, [r7]
   110cc:	mov	r0, r5
   110d0:	mov	r1, sl
   110d4:	bl	10e28 <tira_carta@@Base>
   110d8:	movw	r1, #6944	; 0x1b20
   110dc:	mov	r2, r0
   110e0:	mov	r0, r6
   110e4:	movt	r1, #1
   110e8:	bl	10d14 <fprintf@plt>
   110ec:	ldr	r6, [r7]
   110f0:	mov	r0, r5
   110f4:	mov	r1, sl
   110f8:	bl	10e28 <tira_carta@@Base>
   110fc:	movw	r1, #6972	; 0x1b3c
   11100:	mov	r2, r0
   11104:	mov	r0, r6
   11108:	mov	r6, r7
   1110c:	movt	r1, #1
   11110:	bl	10d14 <fprintf@plt>
   11114:	ldr	r1, [r8, #196]	; 0xc4
   11118:	mov	r0, r5
   1111c:	bl	10f70 <insere_carta@@Base>
   11120:	ldr	r1, [r8, #200]	; 0xc8
   11124:	mov	r0, r5
   11128:	bl	10f70 <insere_carta@@Base>
   1112c:	ldr	r1, [r8, #204]	; 0xcc
   11130:	mov	r0, r5
   11134:	bl	10f70 <insere_carta@@Base>
   11138:	mov	r7, #0
   1113c:	bl	112c8 <vetor_novo@@Base>
   11140:	movw	r9, #7001	; 0x1b59
   11144:	mov	r8, r0
   11148:	movt	r9, #1
   1114c:	b	11168 <main@@Base+0x164>
   11150:	ldr	r3, [r6]
   11154:	mov	r0, r9
   11158:	mov	r1, #44	; 0x2c
   1115c:	mov	r2, #1
   11160:	bl	10cc0 <fwrite@plt>
   11164:	b	111a0 <main@@Base+0x19c>
   11168:	mov	r0, r4
   1116c:	mov	r1, r5
   11170:	mov	r2, sl
   11174:	bl	10e84 <faz_jogada@@Base>
   11178:	cmp	r0, #0
   1117c:	beq	11190 <main@@Base+0x18c>
   11180:	mov	r1, r0
   11184:	mov	r0, r8
   11188:	mov	r2, r7
   1118c:	bl	11414 <vetor_insere@@Base>
   11190:	mov	r0, r4
   11194:	bl	113dc <vetor_tamanho@@Base>
   11198:	cmp	r0, #4
   1119c:	bne	11150 <main@@Base+0x14c>
   111a0:	add	r7, r7, #1
   111a4:	cmp	r7, #13
   111a8:	bne	11168 <main@@Base+0x164>
   111ac:	movw	r0, #7104	; 0x1bc0
   111b0:	movt	r0, #1
   111b4:	bl	10cd8 <puts@plt>
   111b8:	ldr	r0, [r8]
   111bc:	cmp	r0, #1
   111c0:	bge	1127c <main@@Base+0x278>
   111c4:	mov	r0, r8
   111c8:	bl	112f8 <vetor_apaga@@Base>
   111cc:	mov	r6, #0
   111d0:	bl	112c8 <vetor_novo@@Base>
   111d4:	movw	r8, #8548	; 0x2164
   111d8:	mov	r7, r0
   111dc:	movt	r8, #2
   111e0:	ldr	r1, [r8, r6, lsl #2]
   111e4:	mov	r0, r7
   111e8:	mov	r2, r6
   111ec:	bl	11414 <vetor_insere@@Base>
   111f0:	add	r6, r6, #1
   111f4:	cmp	r6, #13
   111f8:	bne	111e0 <main@@Base+0x1dc>
   111fc:	mov	r0, #10
   11200:	bl	10d20 <putchar@plt>
   11204:	mov	r8, #0
   11208:	movw	r0, #8272	; 0x2050
   1120c:	movt	r0, #2
   11210:	ldr	r6, [r0, r8, lsl #2]
   11214:	movw	r0, #8600	; 0x2198
   11218:	movt	r0, #2
   1121c:	ldr	r9, [r0]
   11220:	mov	r0, r7
   11224:	mov	r1, r6
   11228:	bl	10f1c <numero_vitorias@@Base>
   1122c:	movw	r1, #7061	; 0x1b95
   11230:	mov	r3, r0
   11234:	mov	r0, r9
   11238:	mov	r2, r6
   1123c:	movt	r1, #1
   11240:	bl	10d14 <fprintf@plt>
   11244:	add	r8, r8, #1
   11248:	cmp	r8, #4
   1124c:	bne	11208 <main@@Base+0x204>
   11250:	mov	r0, r4
   11254:	bl	112f8 <vetor_apaga@@Base>
   11258:	mov	r0, r5
   1125c:	bl	1171c <lista_apaga@@Base>
   11260:	mov	r0, sl
   11264:	bl	1171c <lista_apaga@@Base>
   11268:	mov	r0, r7
   1126c:	bl	112f8 <vetor_apaga@@Base>
   11270:	mov	r0, #0
   11274:	sub	sp, fp, #28
   11278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1127c:	mov	r7, #1
   11280:	ldr	r9, [r6]
   11284:	sub	r1, r7, #1
   11288:	mov	r0, r8
   1128c:	bl	113ec <vetor_elemento@@Base>
   11290:	movw	r1, #7046	; 0x1b86
   11294:	mov	r3, r0
   11298:	mov	r0, r9
   1129c:	mov	r2, r7
   112a0:	movt	r1, #1
   112a4:	bl	10d14 <fprintf@plt>
   112a8:	cmp	r7, #2
   112ac:	bhi	111c4 <main@@Base+0x1c0>
   112b0:	ldr	r1, [r8]
   112b4:	add	r0, r7, #1
   112b8:	cmp	r7, r1
   112bc:	mov	r7, r0
   112c0:	bge	111c4 <main@@Base+0x1c0>
   112c4:	b	11280 <main@@Base+0x27c>

000112c8 <vetor_novo@@Base>:
   112c8:	push	{fp, lr}
   112cc:	mov	fp, sp
   112d0:	mov	r0, #12
   112d4:	bl	10ce4 <malloc@plt>
   112d8:	cmp	r0, #0
   112dc:	movne	r1, #0
   112e0:	strne	r1, [r0]
   112e4:	strne	r1, [r0, #4]
   112e8:	strne	r1, [r0, #8]
   112ec:	popne	{fp, pc}
   112f0:	mov	r0, #0
   112f4:	pop	{fp, pc}

000112f8 <vetor_apaga@@Base>:
   112f8:	cmp	r0, #0
   112fc:	bxeq	lr
   11300:	push	{r4, r5, fp, lr}
   11304:	add	fp, sp, #8
   11308:	ldr	r1, [r0]
   1130c:	mov	r4, r0
   11310:	ldr	r0, [r0, #8]
   11314:	cmp	r1, #1
   11318:	blt	1133c <vetor_apaga@@Base+0x44>
   1131c:	mov	r5, #0
   11320:	ldr	r0, [r0, r5, lsl #2]
   11324:	bl	10ca8 <free@plt>
   11328:	ldr	r1, [r4]
   1132c:	ldr	r0, [r4, #8]
   11330:	add	r5, r5, #1
   11334:	cmp	r5, r1
   11338:	blt	11320 <vetor_apaga@@Base+0x28>
   1133c:	bl	10ca8 <free@plt>
   11340:	mov	r0, r4
   11344:	pop	{r4, r5, fp, lr}
   11348:	b	10ca8 <free@plt>

0001134c <vetor_atribui@@Base>:
   1134c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11350:	add	fp, sp, #24
   11354:	mvn	r5, #0
   11358:	cmp	r0, #0
   1135c:	beq	113d4 <vetor_atribui@@Base+0x88>
   11360:	mov	r4, r1
   11364:	cmp	r1, #0
   11368:	blt	113d4 <vetor_atribui@@Base+0x88>
   1136c:	mov	r7, r0
   11370:	ldr	r0, [r0]
   11374:	cmp	r0, r4
   11378:	ble	113d4 <vetor_atribui@@Base+0x88>
   1137c:	mov	r0, r2
   11380:	mov	r8, r2
   11384:	bl	10d08 <strlen@plt>
   11388:	mov	r9, r0
   1138c:	ldr	r0, [r7, #8]
   11390:	ldr	r6, [r0, r4, lsl #2]
   11394:	mov	r0, r6
   11398:	bl	10d08 <strlen@plt>
   1139c:	cmp	r9, r0
   113a0:	bls	113c4 <vetor_atribui@@Base+0x78>
   113a4:	add	r1, r9, #1
   113a8:	mov	r0, r6
   113ac:	bl	10cb4 <realloc@plt>
   113b0:	mov	r6, r0
   113b4:	ldr	r0, [r7, #8]
   113b8:	cmp	r6, #0
   113bc:	str	r6, [r0, r4, lsl #2]
   113c0:	beq	113d4 <vetor_atribui@@Base+0x88>
   113c4:	mov	r0, r6
   113c8:	mov	r1, r8
   113cc:	bl	10ccc <strcpy@plt>
   113d0:	mov	r5, r4
   113d4:	mov	r0, r5
   113d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000113dc <vetor_tamanho@@Base>:
   113dc:	cmp	r0, #0
   113e0:	ldrne	r0, [r0]
   113e4:	mvneq	r0, #0
   113e8:	bx	lr

000113ec <vetor_elemento@@Base>:
   113ec:	mov	r2, r0
   113f0:	mov	r0, #0
   113f4:	cmp	r2, #0
   113f8:	bxeq	lr
   113fc:	cmp	r1, #0
   11400:	ldrge	r3, [r2]
   11404:	cmpge	r3, r1
   11408:	ldrgt	r0, [r2, #8]
   1140c:	ldrgt	r0, [r0, r1, lsl #2]
   11410:	bx	lr

00011414 <vetor_insere@@Base>:
   11414:	push	{r4, r5, r6, r7, fp, lr}
   11418:	add	fp, sp, #16
   1141c:	mvn	r4, #0
   11420:	cmp	r0, #0
   11424:	beq	114dc <vetor_insere@@Base+0xc8>
   11428:	mov	r5, r2
   1142c:	cmp	r2, #0
   11430:	blt	114dc <vetor_insere@@Base+0xc8>
   11434:	mov	r6, r0
   11438:	ldr	r0, [r0]
   1143c:	cmp	r0, r5
   11440:	blt	114dc <vetor_insere@@Base+0xc8>
   11444:	mov	r7, r1
   11448:	ldr	r1, [r6, #4]
   1144c:	cmp	r0, r1
   11450:	bne	11498 <vetor_insere@@Base+0x84>
   11454:	lsl	r1, r0, #1
   11458:	cmp	r0, #0
   1145c:	movweq	r1, #1
   11460:	str	r1, [r6, #4]
   11464:	lsl	r1, r1, #2
   11468:	ldr	r0, [r6, #8]
   1146c:	bl	10cb4 <realloc@plt>
   11470:	cmp	r0, #0
   11474:	str	r0, [r6, #8]
   11478:	beq	114dc <vetor_insere@@Base+0xc8>
   1147c:	ldr	r0, [r6]
   11480:	b	11498 <vetor_insere@@Base+0x84>
   11484:	ldr	r1, [r6, #8]
   11488:	add	r2, r1, r0, lsl #2
   1148c:	ldr	r2, [r2, #-4]
   11490:	str	r2, [r1, r0, lsl #2]
   11494:	sub	r0, r0, #1
   11498:	cmp	r0, r5
   1149c:	bgt	11484 <vetor_insere@@Base+0x70>
   114a0:	mov	r0, r7
   114a4:	bl	10d08 <strlen@plt>
   114a8:	add	r0, r0, #1
   114ac:	mov	r1, #1
   114b0:	bl	10c90 <calloc@plt>
   114b4:	ldr	r1, [r6, #8]
   114b8:	cmp	r0, #0
   114bc:	str	r0, [r1, r5, lsl #2]
   114c0:	beq	114dc <vetor_insere@@Base+0xc8>
   114c4:	mov	r1, r7
   114c8:	bl	10ccc <strcpy@plt>
   114cc:	ldr	r0, [r6]
   114d0:	mov	r4, r5
   114d4:	add	r0, r0, #1
   114d8:	str	r0, [r6]
   114dc:	mov	r0, r4
   114e0:	pop	{r4, r5, r6, r7, fp, pc}

000114e4 <vetor_remove@@Base>:
   114e4:	push	{r4, r5, fp, lr}
   114e8:	add	fp, sp, #8
   114ec:	mov	r4, r0
   114f0:	mvn	r0, #0
   114f4:	cmp	r4, #0
   114f8:	popeq	{r4, r5, fp, pc}
   114fc:	cmp	r1, #0
   11500:	mov	r5, r1
   11504:	ldrge	r1, [r4]
   11508:	cmpge	r1, r5
   1150c:	bgt	11514 <vetor_remove@@Base+0x30>
   11510:	pop	{r4, r5, fp, pc}
   11514:	ldr	r0, [r4, #8]
   11518:	ldr	r0, [r0, r5, lsl #2]
   1151c:	bl	10ca8 <free@plt>
   11520:	ldr	r0, [r4]
   11524:	add	r1, r5, #1
   11528:	cmp	r1, r0
   1152c:	bge	11554 <vetor_remove@@Base+0x70>
   11530:	ldr	r1, [r4, #8]
   11534:	add	r2, r1, r5, lsl #2
   11538:	ldr	r2, [r2, #4]
   1153c:	str	r2, [r1, r5, lsl #2]
   11540:	add	r2, r5, #2
   11544:	add	r1, r5, #1
   11548:	cmp	r2, r0
   1154c:	mov	r5, r1
   11550:	blt	11530 <vetor_remove@@Base+0x4c>
   11554:	sub	r0, r0, #1
   11558:	str	r0, [r4]
   1155c:	mov	r0, #0
   11560:	pop	{r4, r5, fp, pc}

00011564 <vetor_pesquisa@@Base>:
   11564:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11568:	add	fp, sp, #24
   1156c:	mvn	r8, #0
   11570:	cmp	r0, #0
   11574:	beq	115b8 <vetor_pesquisa@@Base+0x54>
   11578:	ldr	r6, [r0]
   1157c:	cmp	r6, #1
   11580:	blt	115b8 <vetor_pesquisa@@Base+0x54>
   11584:	ldr	r4, [r0, #8]
   11588:	mov	r5, r1
   1158c:	mov	r7, #0
   11590:	ldr	r0, [r4, r7, lsl #2]
   11594:	mov	r1, r5
   11598:	bl	10c9c <strcmp@plt>
   1159c:	cmp	r0, #0
   115a0:	beq	115b4 <vetor_pesquisa@@Base+0x50>
   115a4:	add	r7, r7, #1
   115a8:	cmp	r7, r6
   115ac:	blt	11590 <vetor_pesquisa@@Base+0x2c>
   115b0:	b	115b8 <vetor_pesquisa@@Base+0x54>
   115b4:	mov	r8, r7
   115b8:	mov	r0, r8
   115bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115c0 <vetor_ordena@@Base>:
   115c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115c4:	add	fp, sp, #28
   115c8:	sub	sp, sp, #4
   115cc:	cmp	r0, #0
   115d0:	beq	11674 <vetor_ordena@@Base+0xb4>
   115d4:	ldr	r1, [r0]
   115d8:	mov	sl, r0
   115dc:	mov	r0, #0
   115e0:	cmp	r1, #2
   115e4:	str	r1, [sp]
   115e8:	blt	11678 <vetor_ordena@@Base+0xb8>
   115ec:	ldr	r5, [sl, #8]
   115f0:	mov	r8, #1
   115f4:	sub	r9, r8, #1
   115f8:	ldr	r6, [r5, r8, lsl #2]
   115fc:	ldr	r7, [r5, r9, lsl #2]
   11600:	mov	r0, r6
   11604:	mov	r1, r7
   11608:	bl	10c9c <strcmp@plt>
   1160c:	cmn	r0, #1
   11610:	bgt	11654 <vetor_ordena@@Base+0x94>
   11614:	add	r0, r5, r9, lsl #2
   11618:	mov	r4, r9
   1161c:	str	r7, [r0, #4]
   11620:	add	r0, r9, #1
   11624:	ldr	r5, [sl, #8]
   11628:	cmp	r0, #2
   1162c:	blt	11658 <vetor_ordena@@Base+0x98>
   11630:	add	r0, r5, r4, lsl #2
   11634:	ldr	r7, [r0, #-4]
   11638:	mov	r0, r6
   1163c:	mov	r1, r7
   11640:	bl	10c9c <strcmp@plt>
   11644:	sub	r9, r4, #1
   11648:	cmp	r0, #0
   1164c:	blt	11614 <vetor_ordena@@Base+0x54>
   11650:	b	11658 <vetor_ordena@@Base+0x98>
   11654:	mov	r4, r8
   11658:	ldr	r0, [sp]
   1165c:	add	r8, r8, #1
   11660:	str	r6, [r5, r4, lsl #2]
   11664:	cmp	r8, r0
   11668:	blt	115f4 <vetor_ordena@@Base+0x34>
   1166c:	mov	r0, #0
   11670:	b	11678 <vetor_ordena@@Base+0xb8>
   11674:	mvn	r0, #0
   11678:	sub	sp, fp, #28
   1167c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011680 <novo_str@@Base>:
   11680:	push	{r4, r5, r6, sl, fp, lr}
   11684:	add	fp, sp, #16
   11688:	mov	r6, r0
   1168c:	mov	r0, #12
   11690:	bl	10ce4 <malloc@plt>
   11694:	mov	r5, #0
   11698:	cmp	r0, #0
   1169c:	beq	116e4 <novo_str@@Base+0x64>
   116a0:	mov	r4, r0
   116a4:	mov	r0, r6
   116a8:	bl	10d08 <strlen@plt>
   116ac:	add	r0, r0, #1
   116b0:	bl	10ce4 <malloc@plt>
   116b4:	cmp	r0, #0
   116b8:	str	r0, [r4]
   116bc:	beq	116dc <novo_str@@Base+0x5c>
   116c0:	mov	r1, r6
   116c4:	bl	10ccc <strcpy@plt>
   116c8:	mov	r0, #0
   116cc:	mov	r5, r4
   116d0:	str	r0, [r4, #4]
   116d4:	str	r0, [r4, #8]
   116d8:	b	116e4 <novo_str@@Base+0x64>
   116dc:	mov	r0, r4
   116e0:	bl	10ca8 <free@plt>
   116e4:	mov	r0, r5
   116e8:	pop	{r4, r5, r6, sl, fp, pc}

000116ec <lista_nova@@Base>:
   116ec:	push	{fp, lr}
   116f0:	mov	fp, sp
   116f4:	mov	r0, #12
   116f8:	bl	10ce4 <malloc@plt>
   116fc:	cmp	r0, #0
   11700:	movne	r1, #0
   11704:	strne	r1, [r0]
   11708:	strne	r1, [r0, #4]
   1170c:	strne	r1, [r0, #8]
   11710:	popne	{fp, pc}
   11714:	mov	r0, #0
   11718:	pop	{fp, pc}

0001171c <lista_apaga@@Base>:
   1171c:	cmp	r0, #0
   11720:	bxeq	lr
   11724:	push	{r4, r5, fp, lr}
   11728:	add	fp, sp, #8
   1172c:	mov	r4, r0
   11730:	b	1174c <lista_apaga@@Base+0x30>
   11734:	ldr	r0, [r5, #4]
   11738:	str	r0, [r4]
   1173c:	ldr	r0, [r5]
   11740:	bl	10ca8 <free@plt>
   11744:	mov	r0, r5
   11748:	bl	10ca8 <free@plt>
   1174c:	ldr	r5, [r4]
   11750:	cmp	r5, #0
   11754:	bne	11734 <lista_apaga@@Base+0x18>
   11758:	mov	r0, r4
   1175c:	pop	{r4, r5, fp, lr}
   11760:	b	10ca8 <free@plt>

00011764 <lista_tamanho@@Base>:
   11764:	cmp	r0, #0
   11768:	ldrne	r0, [r0, #8]
   1176c:	mvneq	r0, #0
   11770:	bx	lr

00011774 <lista_inicio@@Base>:
   11774:	cmp	r0, #0
   11778:	ldrne	r0, [r0]
   1177c:	moveq	r0, #0
   11780:	bx	lr

00011784 <lista_fim@@Base>:
   11784:	cmp	r0, #0
   11788:	ldrne	r0, [r0, #4]
   1178c:	moveq	r0, #0
   11790:	bx	lr

00011794 <lista_insere@@Base>:
   11794:	push	{r4, r5, r6, sl, fp, lr}
   11798:	add	fp, sp, #16
   1179c:	cmp	r0, #0
   117a0:	mov	r6, #0
   117a4:	cmpne	r1, #0
   117a8:	bne	117b4 <lista_insere@@Base+0x20>
   117ac:	mov	r0, r6
   117b0:	pop	{r4, r5, r6, sl, fp, pc}
   117b4:	mov	r4, r0
   117b8:	mov	r0, r1
   117bc:	mov	r5, r2
   117c0:	bl	11680 <novo_str@@Base>
   117c4:	cmp	r0, #0
   117c8:	beq	117ac <lista_insere@@Base+0x18>
   117cc:	ldr	r2, [r4, #8]
   117d0:	ldr	r1, [r4]
   117d4:	cmp	r5, #0
   117d8:	add	r2, r2, #1
   117dc:	str	r2, [r4, #8]
   117e0:	beq	11804 <lista_insere@@Base+0x70>
   117e4:	cmp	r1, r5
   117e8:	beq	1181c <lista_insere@@Base+0x88>
   117ec:	ldr	r1, [r5, #8]
   117f0:	str	r5, [r0, #4]
   117f4:	str	r1, [r0, #8]
   117f8:	str	r0, [r1, #4]
   117fc:	str	r0, [r5, #8]
   11800:	b	11834 <lista_insere@@Base+0xa0>
   11804:	cmp	r1, #0
   11808:	beq	1182c <lista_insere@@Base+0x98>
   1180c:	ldr	r1, [r4, #4]
   11810:	str	r1, [r0, #8]
   11814:	str	r0, [r1, #4]
   11818:	b	11830 <lista_insere@@Base+0x9c>
   1181c:	str	r5, [r0, #4]
   11820:	str	r0, [r5, #8]
   11824:	str	r0, [r4]
   11828:	b	11834 <lista_insere@@Base+0xa0>
   1182c:	str	r0, [r4]
   11830:	str	r0, [r4, #4]
   11834:	mov	r6, r0
   11838:	b	117ac <lista_insere@@Base+0x18>

0001183c <lista_remove@@Base>:
   1183c:	push	{r4, r5, fp, lr}
   11840:	add	fp, sp, #8
   11844:	cmp	r0, #0
   11848:	mov	r4, #0
   1184c:	movne	r5, r1
   11850:	cmpne	r1, #0
   11854:	beq	1189c <lista_remove@@Base+0x60>
   11858:	ldr	r1, [r0, #8]
   1185c:	sub	r1, r1, #1
   11860:	str	r1, [r0, #8]
   11864:	ldr	r1, [r5, #8]
   11868:	ldr	r4, [r5, #4]
   1186c:	cmp	r1, #0
   11870:	streq	r4, [r0]
   11874:	strne	r4, [r1, #4]
   11878:	ldrne	r4, [r5, #4]
   1187c:	add	r2, r4, #8
   11880:	cmp	r4, #0
   11884:	addeq	r2, r0, #4
   11888:	str	r1, [r2]
   1188c:	ldr	r0, [r5]
   11890:	bl	10ca8 <free@plt>
   11894:	mov	r0, r5
   11898:	bl	10ca8 <free@plt>
   1189c:	mov	r0, r4
   118a0:	pop	{r4, r5, fp, pc}

000118a4 <lista_pesquisa@@Base>:
   118a4:	push	{r4, r5, r6, sl, fp, lr}
   118a8:	add	fp, sp, #16
   118ac:	cmp	r0, #0
   118b0:	mov	r4, #0
   118b4:	movne	r5, r1
   118b8:	cmpne	r1, #0
   118bc:	bne	118c8 <lista_pesquisa@@Base+0x24>
   118c0:	mov	r0, r4
   118c4:	pop	{r4, r5, r6, sl, fp, pc}
   118c8:	cmp	r2, #1
   118cc:	bhi	118c0 <lista_pesquisa@@Base+0x1c>
   118d0:	cmp	r2, #0
   118d4:	beq	11904 <lista_pesquisa@@Base+0x60>
   118d8:	ldr	r6, [r0, #4]
   118dc:	b	118f8 <lista_pesquisa@@Base+0x54>
   118e0:	ldr	r0, [r6]
   118e4:	mov	r1, r5
   118e8:	bl	10c9c <strcmp@plt>
   118ec:	cmp	r0, #0
   118f0:	beq	11930 <lista_pesquisa@@Base+0x8c>
   118f4:	ldr	r6, [r6, #8]
   118f8:	cmp	r6, #0
   118fc:	bne	118e0 <lista_pesquisa@@Base+0x3c>
   11900:	b	118c0 <lista_pesquisa@@Base+0x1c>
   11904:	ldr	r6, [r0]
   11908:	b	11924 <lista_pesquisa@@Base+0x80>
   1190c:	ldr	r0, [r6]
   11910:	mov	r1, r5
   11914:	bl	10c9c <strcmp@plt>
   11918:	cmp	r0, #0
   1191c:	beq	11930 <lista_pesquisa@@Base+0x8c>
   11920:	ldr	r6, [r6, #4]
   11924:	cmp	r6, #0
   11928:	bne	1190c <lista_pesquisa@@Base+0x68>
   1192c:	b	118c0 <lista_pesquisa@@Base+0x1c>
   11930:	mov	r4, r6
   11934:	b	118c0 <lista_pesquisa@@Base+0x1c>

00011938 <lista_ordena@@Base>:
   11938:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1193c:	add	fp, sp, #24
   11940:	cmp	r0, #0
   11944:	beq	119b8 <lista_ordena@@Base+0x80>
   11948:	ldr	r0, [r0]
   1194c:	mov	r8, #0
   11950:	mov	r5, r0
   11954:	ldr	r4, [r5, #4]!
   11958:	b	119ac <lista_ordena@@Base+0x74>
   1195c:	mov	r9, r0
   11960:	mov	r7, r0
   11964:	mov	r6, r4
   11968:	ldr	r1, [r7]
   1196c:	ldr	r0, [r6]
   11970:	bl	10c9c <strcmp@plt>
   11974:	cmp	r0, #0
   11978:	movlt	r7, r6
   1197c:	ldr	r6, [r6, #4]
   11980:	cmp	r6, #0
   11984:	bne	11968 <lista_ordena@@Base+0x30>
   11988:	cmp	r7, r9
   1198c:	mov	r0, r4
   11990:	ldrne	r0, [r9]
   11994:	ldrne	r1, [r7]
   11998:	strne	r1, [r9]
   1199c:	strne	r0, [r7]
   119a0:	ldrne	r0, [r5]
   119a4:	mov	r5, r0
   119a8:	ldr	r4, [r5, #4]!
   119ac:	cmp	r4, #0
   119b0:	bne	1195c <lista_ordena@@Base+0x24>
   119b4:	b	119bc <lista_ordena@@Base+0x84>
   119b8:	mvn	r8, #0
   119bc:	mov	r0, r8
   119c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000119c4 <lista_inverte@@Base>:
   119c4:	cmp	r0, #0
   119c8:	beq	119e8 <lista_inverte@@Base+0x24>
   119cc:	ldr	r2, [r0, #8]
   119d0:	mov	r1, #0
   119d4:	cmp	r2, #2
   119d8:	blt	11a5c <lista_inverte@@Base+0x98>
   119dc:	bne	119f0 <lista_inverte@@Base+0x2c>
   119e0:	ldr	r2, [r0]
   119e4:	b	11a38 <lista_inverte@@Base+0x74>
   119e8:	mvn	r1, #0
   119ec:	b	11a5c <lista_inverte@@Base+0x98>
   119f0:	push	{fp, lr}
   119f4:	mov	fp, sp
   119f8:	ldr	ip, [r0]
   119fc:	sub	r1, r2, #2
   11a00:	ldr	r3, [ip, #4]
   11a04:	mov	r2, r3
   11a08:	ldr	r3, [r3, #4]
   11a0c:	subs	r1, r1, #1
   11a10:	ldr	lr, [r2, #8]
   11a14:	str	r3, [lr, #4]
   11a18:	ldr	r3, [r2, #4]
   11a1c:	str	lr, [r3, #8]
   11a20:	str	ip, [r2, #4]
   11a24:	str	r2, [ip, #8]
   11a28:	mov	ip, r2
   11a2c:	bne	11a04 <lista_inverte@@Base+0x40>
   11a30:	str	r2, [r0]
   11a34:	pop	{fp, lr}
   11a38:	ldr	r3, [r0, #4]
   11a3c:	mov	r1, #0
   11a40:	ldr	ip, [r3, #8]
   11a44:	str	ip, [r0, #4]
   11a48:	str	r1, [ip, #4]
   11a4c:	str	r2, [r3, #4]
   11a50:	str	r1, [r3, #8]
   11a54:	str	r3, [r2, #8]
   11a58:	str	r3, [r0]
   11a5c:	mov	r0, r1
   11a60:	bx	lr

00011a64 <__libc_csu_init@@Base>:
   11a64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a68:	mov	r7, r0
   11a6c:	ldr	r6, [pc, #72]	; 11abc <__libc_csu_init@@Base+0x58>
   11a70:	ldr	r5, [pc, #72]	; 11ac0 <__libc_csu_init@@Base+0x5c>
   11a74:	add	r6, pc, r6
   11a78:	add	r5, pc, r5
   11a7c:	sub	r6, r6, r5
   11a80:	mov	r8, r1
   11a84:	mov	r9, r2
   11a88:	bl	10c70 <calloc@plt-0x20>
   11a8c:	asrs	r6, r6, #2
   11a90:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a94:	mov	r4, #0
   11a98:	add	r4, r4, #1
   11a9c:	ldr	r3, [r5], #4
   11aa0:	mov	r2, r9
   11aa4:	mov	r1, r8
   11aa8:	mov	r0, r7
   11aac:	blx	r3
   11ab0:	cmp	r6, r4
   11ab4:	bne	11a98 <__libc_csu_init@@Base+0x34>
   11ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11abc:	muleq	r1, r0, r4
   11ac0:	andeq	r0, r1, r8, lsl #9

00011ac4 <__libc_csu_fini@@Base>:
   11ac4:	bx	lr

Disassembly of section .fini:

00011ac8 <.fini>:
   11ac8:	push	{r3, lr}
   11acc:	pop	{r3, pc}
