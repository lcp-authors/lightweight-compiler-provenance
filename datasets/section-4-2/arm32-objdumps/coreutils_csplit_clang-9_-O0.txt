
../repos/coreutils/src/csplit:     file format elf32-littlearm


Disassembly of section .init:

00011380 <.init>:
   11380:	push	{r3, lr}
   11384:	bl	1179c <__assert_fail@plt+0x48>
   11388:	pop	{r3, pc}

Disassembly of section .plt:

0001138c <pthread_mutex_unlock@plt-0x14>:
   1138c:	push	{lr}		; (str lr, [sp, #-4]!)
   11390:	ldr	lr, [pc, #4]	; 1139c <pthread_mutex_unlock@plt-0x4>
   11394:	add	lr, pc, lr
   11398:	ldr	pc, [lr, #8]!
   1139c:	andeq	ip, r3, r4, ror #24

000113a0 <pthread_mutex_unlock@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #60, 20	; 0x3c000
   113a8:	ldr	pc, [ip, #3172]!	; 0xc64

000113ac <fdopen@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #60, 20	; 0x3c000
   113b4:	ldr	pc, [ip, #3164]!	; 0xc5c

000113b8 <calloc@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #60, 20	; 0x3c000
   113c0:	ldr	pc, [ip, #3156]!	; 0xc54

000113c4 <fputs_unlocked@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #60, 20	; 0x3c000
   113cc:	ldr	pc, [ip, #3148]!	; 0xc4c

000113d0 <wctype@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #60, 20	; 0x3c000
   113d8:	ldr	pc, [ip, #3140]!	; 0xc44

000113dc <raise@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #60, 20	; 0x3c000
   113e4:	ldr	pc, [ip, #3132]!	; 0xc3c

000113e8 <wcrtomb@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #60, 20	; 0x3c000
   113f0:	ldr	pc, [ip, #3124]!	; 0xc34

000113f4 <iswctype@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #60, 20	; 0x3c000
   113fc:	ldr	pc, [ip, #3116]!	; 0xc2c

00011400 <strcmp@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #60, 20	; 0x3c000
   11408:	ldr	pc, [ip, #3108]!	; 0xc24

0001140c <printf@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #60, 20	; 0x3c000
   11414:	ldr	pc, [ip, #3100]!	; 0xc1c

00011418 <read@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #60, 20	; 0x3c000
   11420:	ldr	pc, [ip, #3092]!	; 0xc14

00011424 <pthread_mutex_destroy@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #60, 20	; 0x3c000
   1142c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011430 <fflush@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #60, 20	; 0x3c000
   11438:	ldr	pc, [ip, #3076]!	; 0xc04

0001143c <sigprocmask@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #60, 20	; 0x3c000
   11444:	ldr	pc, [ip, #3068]!	; 0xbfc

00011448 <memmove@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #60, 20	; 0x3c000
   11450:	ldr	pc, [ip, #3060]!	; 0xbf4

00011454 <free@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #60, 20	; 0x3c000
   1145c:	ldr	pc, [ip, #3052]!	; 0xbec

00011460 <pthread_mutex_lock@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #60, 20	; 0x3c000
   11468:	ldr	pc, [ip, #3044]!	; 0xbe4

0001146c <_exit@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #60, 20	; 0x3c000
   11474:	ldr	pc, [ip, #3036]!	; 0xbdc

00011478 <memcpy@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #60, 20	; 0x3c000
   11480:	ldr	pc, [ip, #3028]!	; 0xbd4

00011484 <tolower@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #60, 20	; 0x3c000
   1148c:	ldr	pc, [ip, #3020]!	; 0xbcc

00011490 <pthread_mutex_init@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #60, 20	; 0x3c000
   11498:	ldr	pc, [ip, #3012]!	; 0xbc4

0001149c <towlower@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #60, 20	; 0x3c000
   114a4:	ldr	pc, [ip, #3004]!	; 0xbbc

000114a8 <mbsinit@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #60, 20	; 0x3c000
   114b0:	ldr	pc, [ip, #2996]!	; 0xbb4

000114b4 <signal@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #60, 20	; 0x3c000
   114bc:	ldr	pc, [ip, #2988]!	; 0xbac

000114c0 <fwrite_unlocked@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #60, 20	; 0x3c000
   114c8:	ldr	pc, [ip, #2980]!	; 0xba4

000114cc <memcmp@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #60, 20	; 0x3c000
   114d4:	ldr	pc, [ip, #2972]!	; 0xb9c

000114d8 <unlink@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #60, 20	; 0x3c000
   114e0:	ldr	pc, [ip, #2964]!	; 0xb94

000114e4 <dup2@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #60, 20	; 0x3c000
   114ec:	ldr	pc, [ip, #2956]!	; 0xb8c

000114f0 <realloc@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #60, 20	; 0x3c000
   114f8:	ldr	pc, [ip, #2948]!	; 0xb84

000114fc <sigismember@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #60, 20	; 0x3c000
   11504:	ldr	pc, [ip, #2940]!	; 0xb7c

00011508 <textdomain@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #60, 20	; 0x3c000
   11510:	ldr	pc, [ip, #2932]!	; 0xb74

00011514 <rawmemchr@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #60, 20	; 0x3c000
   1151c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011520 <iswprint@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #60, 20	; 0x3c000
   11528:	ldr	pc, [ip, #2916]!	; 0xb64

0001152c <sigaction@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #60, 20	; 0x3c000
   11534:	ldr	pc, [ip, #2908]!	; 0xb5c

00011538 <lseek64@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #60, 20	; 0x3c000
   11540:	ldr	pc, [ip, #2900]!	; 0xb54

00011544 <__ctype_get_mb_cur_max@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #60, 20	; 0x3c000
   1154c:	ldr	pc, [ip, #2892]!	; 0xb4c

00011550 <strcpy@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #60, 20	; 0x3c000
   11558:	ldr	pc, [ip, #2884]!	; 0xb44

0001155c <__fpending@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #60, 20	; 0x3c000
   11564:	ldr	pc, [ip, #2876]!	; 0xb3c

00011568 <ferror_unlocked@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #60, 20	; 0x3c000
   11570:	ldr	pc, [ip, #2868]!	; 0xb34

00011574 <mbrtowc@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #60, 20	; 0x3c000
   1157c:	ldr	pc, [ip, #2860]!	; 0xb2c

00011580 <error@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #60, 20	; 0x3c000
   11588:	ldr	pc, [ip, #2852]!	; 0xb24

0001158c <open64@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #60, 20	; 0x3c000
   11594:	ldr	pc, [ip, #2844]!	; 0xb1c

00011598 <malloc@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #60, 20	; 0x3c000
   115a0:	ldr	pc, [ip, #2836]!	; 0xb14

000115a4 <sigaddset@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #60, 20	; 0x3c000
   115ac:	ldr	pc, [ip, #2828]!	; 0xb0c

000115b0 <__libc_start_main@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #60, 20	; 0x3c000
   115b8:	ldr	pc, [ip, #2820]!	; 0xb04

000115bc <__freading@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #60, 20	; 0x3c000
   115c4:	ldr	pc, [ip, #2812]!	; 0xafc

000115c8 <__gmon_start__@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #60, 20	; 0x3c000
   115d0:	ldr	pc, [ip, #2804]!	; 0xaf4

000115d4 <getopt_long@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #60, 20	; 0x3c000
   115dc:	ldr	pc, [ip, #2796]!	; 0xaec

000115e0 <__ctype_b_loc@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #60, 20	; 0x3c000
   115e8:	ldr	pc, [ip, #2788]!	; 0xae4

000115ec <exit@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #60, 20	; 0x3c000
   115f4:	ldr	pc, [ip, #2780]!	; 0xadc

000115f8 <gettext@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #60, 20	; 0x3c000
   11600:	ldr	pc, [ip, #2772]!	; 0xad4

00011604 <strlen@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #60, 20	; 0x3c000
   1160c:	ldr	pc, [ip, #2764]!	; 0xacc

00011610 <strchr@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #60, 20	; 0x3c000
   11618:	ldr	pc, [ip, #2756]!	; 0xac4

0001161c <fprintf@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #60, 20	; 0x3c000
   11624:	ldr	pc, [ip, #2748]!	; 0xabc

00011628 <__errno_location@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #60, 20	; 0x3c000
   11630:	ldr	pc, [ip, #2740]!	; 0xab4

00011634 <iswalnum@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #60, 20	; 0x3c000
   1163c:	ldr	pc, [ip, #2732]!	; 0xaac

00011640 <snprintf@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #60, 20	; 0x3c000
   11648:	ldr	pc, [ip, #2724]!	; 0xaa4

0001164c <__cxa_atexit@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #60, 20	; 0x3c000
   11654:	ldr	pc, [ip, #2716]!	; 0xa9c

00011658 <memset@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #60, 20	; 0x3c000
   11660:	ldr	pc, [ip, #2708]!	; 0xa94

00011664 <btowc@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #60, 20	; 0x3c000
   1166c:	ldr	pc, [ip, #2700]!	; 0xa8c

00011670 <fileno@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #60, 20	; 0x3c000
   11678:	ldr	pc, [ip, #2692]!	; 0xa84

0001167c <strtoumax@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #60, 20	; 0x3c000
   11684:	ldr	pc, [ip, #2684]!	; 0xa7c

00011688 <strtoimax@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #60, 20	; 0x3c000
   11690:	ldr	pc, [ip, #2676]!	; 0xa74

00011694 <fclose@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #60, 20	; 0x3c000
   1169c:	ldr	pc, [ip, #2668]!	; 0xa6c

000116a0 <fseeko64@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #60, 20	; 0x3c000
   116a8:	ldr	pc, [ip, #2660]!	; 0xa64

000116ac <fcntl64@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #60, 20	; 0x3c000
   116b4:	ldr	pc, [ip, #2652]!	; 0xa5c

000116b8 <setlocale@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #60, 20	; 0x3c000
   116c0:	ldr	pc, [ip, #2644]!	; 0xa54

000116c4 <sigemptyset@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #60, 20	; 0x3c000
   116cc:	ldr	pc, [ip, #2636]!	; 0xa4c

000116d0 <toupper@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #60, 20	; 0x3c000
   116d8:	ldr	pc, [ip, #2628]!	; 0xa44

000116dc <strrchr@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #60, 20	; 0x3c000
   116e4:	ldr	pc, [ip, #2620]!	; 0xa3c

000116e8 <nl_langinfo@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #60, 20	; 0x3c000
   116f0:	ldr	pc, [ip, #2612]!	; 0xa34

000116f4 <sprintf@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #60, 20	; 0x3c000
   116fc:	ldr	pc, [ip, #2604]!	; 0xa2c

00011700 <fopen64@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #60, 20	; 0x3c000
   11708:	ldr	pc, [ip, #2596]!	; 0xa24

0001170c <bindtextdomain@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #60, 20	; 0x3c000
   11714:	ldr	pc, [ip, #2588]!	; 0xa1c

00011718 <towupper@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #60, 20	; 0x3c000
   11720:	ldr	pc, [ip, #2580]!	; 0xa14

00011724 <fputs@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #60, 20	; 0x3c000
   1172c:	ldr	pc, [ip, #2572]!	; 0xa0c

00011730 <strncmp@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #60, 20	; 0x3c000
   11738:	ldr	pc, [ip, #2564]!	; 0xa04

0001173c <abort@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #60, 20	; 0x3c000
   11744:	ldr	pc, [ip, #2556]!	; 0x9fc

00011748 <close@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #60, 20	; 0x3c000
   11750:	ldr	pc, [ip, #2548]!	; 0x9f4

00011754 <__assert_fail@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #60, 20	; 0x3c000
   1175c:	ldr	pc, [ip, #2540]!	; 0x9ec

Disassembly of section .text:

00011760 <.text>:
   11760:	mov	fp, #0
   11764:	mov	lr, #0
   11768:	pop	{r1}		; (ldr r1, [sp], #4)
   1176c:	mov	r2, sp
   11770:	push	{r2}		; (str r2, [sp, #-4]!)
   11774:	push	{r0}		; (str r0, [sp, #-4]!)
   11778:	ldr	ip, [pc, #16]	; 11790 <__assert_fail@plt+0x3c>
   1177c:	push	{ip}		; (str ip, [sp, #-4]!)
   11780:	ldr	r0, [pc, #12]	; 11794 <__assert_fail@plt+0x40>
   11784:	ldr	r3, [pc, #12]	; 11798 <__assert_fail@plt+0x44>
   11788:	bl	115b0 <__libc_start_main@plt>
   1178c:	bl	1173c <abort@plt>
   11790:	andeq	fp, r3, r0, lsr #26
   11794:	muleq	r1, ip, r8
   11798:	andeq	fp, r3, r0, asr #25
   1179c:	ldr	r3, [pc, #20]	; 117b8 <__assert_fail@plt+0x64>
   117a0:	ldr	r2, [pc, #20]	; 117bc <__assert_fail@plt+0x68>
   117a4:	add	r3, pc, r3
   117a8:	ldr	r2, [r3, r2]
   117ac:	cmp	r2, #0
   117b0:	bxeq	lr
   117b4:	b	115c8 <__gmon_start__@plt>
   117b8:	andeq	ip, r3, r4, asr r8
   117bc:	andeq	r0, r0, ip, asr #2
   117c0:	ldr	r0, [pc, #24]	; 117e0 <__assert_fail@plt+0x8c>
   117c4:	ldr	r3, [pc, #24]	; 117e4 <__assert_fail@plt+0x90>
   117c8:	cmp	r3, r0
   117cc:	bxeq	lr
   117d0:	ldr	r3, [pc, #16]	; 117e8 <__assert_fail@plt+0x94>
   117d4:	cmp	r3, #0
   117d8:	bxeq	lr
   117dc:	bx	r3
   117e0:	andeq	lr, r4, r4, lsr #3
   117e4:	andeq	lr, r4, r4, lsr #3
   117e8:	andeq	r0, r0, r0
   117ec:	ldr	r0, [pc, #36]	; 11818 <__assert_fail@plt+0xc4>
   117f0:	ldr	r1, [pc, #36]	; 1181c <__assert_fail@plt+0xc8>
   117f4:	sub	r1, r1, r0
   117f8:	asr	r1, r1, #2
   117fc:	add	r1, r1, r1, lsr #31
   11800:	asrs	r1, r1, #1
   11804:	bxeq	lr
   11808:	ldr	r3, [pc, #16]	; 11820 <__assert_fail@plt+0xcc>
   1180c:	cmp	r3, #0
   11810:	bxeq	lr
   11814:	bx	r3
   11818:	andeq	lr, r4, r4, lsr #3
   1181c:	andeq	lr, r4, r4, lsr #3
   11820:	andeq	r0, r0, r0
   11824:	push	{r4, lr}
   11828:	ldr	r4, [pc, #24]	; 11848 <__assert_fail@plt+0xf4>
   1182c:	ldrb	r3, [r4]
   11830:	cmp	r3, #0
   11834:	popne	{r4, pc}
   11838:	bl	117c0 <__assert_fail@plt+0x6c>
   1183c:	mov	r3, #1
   11840:	strb	r3, [r4]
   11844:	pop	{r4, pc}
   11848:	andeq	lr, r4, r4, asr #3
   1184c:	b	117ec <__assert_fail@plt+0x98>
   11850:	push	{fp, lr}
   11854:	mov	fp, sp
   11858:	sub	sp, sp, #8
   1185c:	movw	r0, #48456	; 0xbd48
   11860:	movt	r0, #3
   11864:	bl	115f8 <gettext@plt>
   11868:	movw	r1, #0
   1186c:	str	r0, [sp, #4]
   11870:	mov	r0, r1
   11874:	movw	r2, #50403	; 0xc4e3
   11878:	movt	r2, #3
   1187c:	ldr	r3, [sp, #4]
   11880:	bl	11580 <error@plt>
   11884:	bl	11888 <__assert_fail@plt+0x134>
   11888:	push	{fp, lr}
   1188c:	mov	fp, sp
   11890:	bl	129fc <__assert_fail@plt+0x12a8>
   11894:	movw	r0, #1
   11898:	bl	115ec <exit@plt>
   1189c:	push	{r4, r5, fp, lr}
   118a0:	add	fp, sp, #8
   118a4:	sub	sp, sp, #248	; 0xf8
   118a8:	movw	r2, #0
   118ac:	str	r2, [fp, #-12]
   118b0:	str	r0, [fp, #-16]
   118b4:	str	r1, [fp, #-20]	; 0xffffffec
   118b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   118bc:	ldr	r0, [r0]
   118c0:	bl	161e0 <__assert_fail@plt+0x4a8c>
   118c4:	movw	r0, #6
   118c8:	movw	r1, #49863	; 0xc2c7
   118cc:	movt	r1, #3
   118d0:	bl	116b8 <setlocale@plt>
   118d4:	movw	r1, #48537	; 0xbd99
   118d8:	movt	r1, #3
   118dc:	str	r0, [sp, #72]	; 0x48
   118e0:	mov	r0, r1
   118e4:	movw	r1, #48473	; 0xbd59
   118e8:	movt	r1, #3
   118ec:	bl	1170c <bindtextdomain@plt>
   118f0:	movw	r1, #48537	; 0xbd99
   118f4:	movt	r1, #3
   118f8:	str	r0, [sp, #68]	; 0x44
   118fc:	mov	r0, r1
   11900:	bl	11508 <textdomain@plt>
   11904:	movw	r1, #23260	; 0x5adc
   11908:	movt	r1, #1
   1190c:	str	r0, [sp, #64]	; 0x40
   11910:	mov	r0, r1
   11914:	bl	3bd24 <__assert_fail@plt+0x2a5d0>
   11918:	ldr	r1, [fp, #-20]	; 0xffffffec
   1191c:	movw	r2, #57800	; 0xe1c8
   11920:	movt	r2, #4
   11924:	str	r1, [r2]
   11928:	movw	r1, #57804	; 0xe1cc
   1192c:	movt	r1, #4
   11930:	movw	r2, #0
   11934:	str	r2, [r1]
   11938:	movw	r1, #57808	; 0xe1d0
   1193c:	movt	r1, #4
   11940:	str	r2, [r1]
   11944:	movw	r1, #57812	; 0xe1d4
   11948:	movt	r1, #4
   1194c:	movw	r2, #0
   11950:	strb	r2, [r1]
   11954:	movw	r1, #57813	; 0xe1d5
   11958:	movt	r1, #4
   1195c:	movw	r3, #1
   11960:	strb	r3, [r1]
   11964:	movw	r1, #57814	; 0xe1d6
   11968:	movt	r1, #4
   1196c:	strb	r2, [r1]
   11970:	movw	r1, #57816	; 0xe1d8
   11974:	movt	r1, #4
   11978:	movw	r2, #48497	; 0xbd71
   1197c:	movt	r2, #3
   11980:	str	r2, [r1]
   11984:	ldr	r0, [fp, #-16]
   11988:	ldr	r1, [fp, #-20]	; 0xffffffec
   1198c:	movw	r2, #48500	; 0xbd74
   11990:	movt	r2, #3
   11994:	movw	r3, #51220	; 0xc814
   11998:	movt	r3, #3
   1199c:	movw	ip, #0
   119a0:	str	ip, [sp]
   119a4:	bl	115d4 <getopt_long@plt>
   119a8:	str	r0, [fp, #-24]	; 0xffffffe8
   119ac:	cmn	r0, #1
   119b0:	beq	11bb0 <__assert_fail@plt+0x45c>
   119b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119b8:	cmn	r0, #3
   119bc:	str	r0, [sp, #60]	; 0x3c
   119c0:	beq	11b50 <__assert_fail@plt+0x3fc>
   119c4:	b	119c8 <__assert_fail@plt+0x274>
   119c8:	ldr	r0, [sp, #60]	; 0x3c
   119cc:	cmn	r0, #2
   119d0:	beq	11b48 <__assert_fail@plt+0x3f4>
   119d4:	b	119d8 <__assert_fail@plt+0x284>
   119d8:	ldr	r0, [sp, #60]	; 0x3c
   119dc:	cmp	r0, #98	; 0x62
   119e0:	beq	11a74 <__assert_fail@plt+0x320>
   119e4:	b	119e8 <__assert_fail@plt+0x294>
   119e8:	ldr	r0, [sp, #60]	; 0x3c
   119ec:	cmp	r0, #102	; 0x66
   119f0:	beq	11a58 <__assert_fail@plt+0x304>
   119f4:	b	119f8 <__assert_fail@plt+0x2a4>
   119f8:	ldr	r0, [sp, #60]	; 0x3c
   119fc:	cmp	r0, #107	; 0x6b
   11a00:	beq	11a90 <__assert_fail@plt+0x33c>
   11a04:	b	11a08 <__assert_fail@plt+0x2b4>
   11a08:	ldr	r0, [sp, #60]	; 0x3c
   11a0c:	cmp	r0, #110	; 0x6e
   11a10:	beq	11aa4 <__assert_fail@plt+0x350>
   11a14:	b	11a18 <__assert_fail@plt+0x2c4>
   11a18:	ldr	r0, [sp, #60]	; 0x3c
   11a1c:	cmp	r0, #113	; 0x71
   11a20:	beq	11b0c <__assert_fail@plt+0x3b8>
   11a24:	b	11a28 <__assert_fail@plt+0x2d4>
   11a28:	ldr	r0, [sp, #60]	; 0x3c
   11a2c:	cmp	r0, #115	; 0x73
   11a30:	beq	11b0c <__assert_fail@plt+0x3b8>
   11a34:	b	11a38 <__assert_fail@plt+0x2e4>
   11a38:	ldr	r0, [sp, #60]	; 0x3c
   11a3c:	cmp	r0, #122	; 0x7a
   11a40:	beq	11b20 <__assert_fail@plt+0x3cc>
   11a44:	b	11a48 <__assert_fail@plt+0x2f4>
   11a48:	ldr	r0, [sp, #60]	; 0x3c
   11a4c:	cmp	r0, #256	; 0x100
   11a50:	beq	11b34 <__assert_fail@plt+0x3e0>
   11a54:	b	11ba4 <__assert_fail@plt+0x450>
   11a58:	movw	r0, #57792	; 0xe1c0
   11a5c:	movt	r0, #4
   11a60:	ldr	r0, [r0]
   11a64:	movw	r1, #57816	; 0xe1d8
   11a68:	movt	r1, #4
   11a6c:	str	r0, [r1]
   11a70:	b	11bac <__assert_fail@plt+0x458>
   11a74:	movw	r0, #57792	; 0xe1c0
   11a78:	movt	r0, #4
   11a7c:	ldr	r0, [r0]
   11a80:	movw	r1, #57820	; 0xe1dc
   11a84:	movt	r1, #4
   11a88:	str	r0, [r1]
   11a8c:	b	11bac <__assert_fail@plt+0x458>
   11a90:	movw	r0, #57813	; 0xe1d5
   11a94:	movt	r0, #4
   11a98:	movw	r1, #0
   11a9c:	strb	r1, [r0]
   11aa0:	b	11bac <__assert_fail@plt+0x458>
   11aa4:	movw	r0, #57792	; 0xe1c0
   11aa8:	movt	r0, #4
   11aac:	ldr	r0, [r0]
   11ab0:	movw	r1, #48511	; 0xbd7f
   11ab4:	movt	r1, #3
   11ab8:	str	r0, [sp, #56]	; 0x38
   11abc:	mov	r0, r1
   11ac0:	bl	115f8 <gettext@plt>
   11ac4:	mov	r1, sp
   11ac8:	mov	r2, #0
   11acc:	str	r2, [r1, #16]
   11ad0:	str	r0, [r1, #12]
   11ad4:	movw	r0, #49863	; 0xc2c7
   11ad8:	movt	r0, #3
   11adc:	str	r0, [r1, #8]
   11ae0:	str	r2, [r1, #4]
   11ae4:	mvn	r0, #-2147483648	; 0x80000000
   11ae8:	str	r0, [r1]
   11aec:	ldr	r0, [sp, #56]	; 0x38
   11af0:	str	r2, [sp, #52]	; 0x34
   11af4:	ldr	r3, [sp, #52]	; 0x34
   11af8:	bl	340d4 <__assert_fail@plt+0x22980>
   11afc:	movw	r2, #57688	; 0xe158
   11b00:	movt	r2, #4
   11b04:	str	r0, [r2]
   11b08:	b	11bac <__assert_fail@plt+0x458>
   11b0c:	movw	r0, #57812	; 0xe1d4
   11b10:	movt	r0, #4
   11b14:	movw	r1, #1
   11b18:	strb	r1, [r0]
   11b1c:	b	11bac <__assert_fail@plt+0x458>
   11b20:	movw	r0, #57824	; 0xe1e0
   11b24:	movt	r0, #4
   11b28:	movw	r1, #1
   11b2c:	strb	r1, [r0]
   11b30:	b	11bac <__assert_fail@plt+0x458>
   11b34:	movw	r0, #57814	; 0xe1d6
   11b38:	movt	r0, #4
   11b3c:	movw	r1, #1
   11b40:	strb	r1, [r0]
   11b44:	b	11bac <__assert_fail@plt+0x458>
   11b48:	movw	r0, #0
   11b4c:	bl	11ed4 <__assert_fail@plt+0x780>
   11b50:	movw	r0, #57788	; 0xe1bc
   11b54:	movt	r0, #4
   11b58:	ldr	r0, [r0]
   11b5c:	movw	r1, #57692	; 0xe15c
   11b60:	movt	r1, #4
   11b64:	ldr	r3, [r1]
   11b68:	movw	r1, #48526	; 0xbd8e
   11b6c:	movt	r1, #3
   11b70:	movw	r2, #48533	; 0xbd95
   11b74:	movt	r2, #3
   11b78:	movw	ip, #48547	; 0xbda3
   11b7c:	movt	ip, #3
   11b80:	str	ip, [sp]
   11b84:	movw	ip, #48559	; 0xbdaf
   11b88:	movt	ip, #3
   11b8c:	str	ip, [sp, #4]
   11b90:	movw	ip, #0
   11b94:	str	ip, [sp, #8]
   11b98:	bl	30ff0 <__assert_fail@plt+0x1f89c>
   11b9c:	movw	r0, #0
   11ba0:	bl	115ec <exit@plt>
   11ba4:	movw	r0, #1
   11ba8:	bl	11ed4 <__assert_fail@plt+0x780>
   11bac:	b	11984 <__assert_fail@plt+0x230>
   11bb0:	ldr	r0, [fp, #-16]
   11bb4:	movw	r1, #57776	; 0xe1b0
   11bb8:	movt	r1, #4
   11bbc:	ldr	r1, [r1]
   11bc0:	sub	r0, r0, r1
   11bc4:	cmp	r0, #2
   11bc8:	bge	11c54 <__assert_fail@plt+0x500>
   11bcc:	ldr	r0, [fp, #-16]
   11bd0:	movw	r1, #57776	; 0xe1b0
   11bd4:	movt	r1, #4
   11bd8:	ldr	r1, [r1]
   11bdc:	cmp	r0, r1
   11be0:	bgt	11c08 <__assert_fail@plt+0x4b4>
   11be4:	movw	r0, #48575	; 0xbdbf
   11be8:	movt	r0, #3
   11bec:	bl	115f8 <gettext@plt>
   11bf0:	movw	r1, #0
   11bf4:	str	r0, [sp, #48]	; 0x30
   11bf8:	mov	r0, r1
   11bfc:	ldr	r2, [sp, #48]	; 0x30
   11c00:	bl	11580 <error@plt>
   11c04:	b	11c4c <__assert_fail@plt+0x4f8>
   11c08:	movw	r0, #48591	; 0xbdcf
   11c0c:	movt	r0, #3
   11c10:	bl	115f8 <gettext@plt>
   11c14:	ldr	r1, [fp, #-20]	; 0xffffffec
   11c18:	ldr	r2, [fp, #-16]
   11c1c:	sub	r2, r2, #1
   11c20:	add	r1, r1, r2, lsl #2
   11c24:	ldr	r1, [r1]
   11c28:	str	r0, [sp, #44]	; 0x2c
   11c2c:	mov	r0, r1
   11c30:	bl	1883c <__assert_fail@plt+0x70e8>
   11c34:	movw	r1, #0
   11c38:	str	r0, [sp, #40]	; 0x28
   11c3c:	mov	r0, r1
   11c40:	ldr	r2, [sp, #44]	; 0x2c
   11c44:	ldr	r3, [sp, #40]	; 0x28
   11c48:	bl	11580 <error@plt>
   11c4c:	movw	r0, #1
   11c50:	bl	11ed4 <__assert_fail@plt+0x780>
   11c54:	movw	r0, #57816	; 0xe1d8
   11c58:	movt	r0, #4
   11c5c:	ldr	r0, [r0]
   11c60:	bl	11604 <strlen@plt>
   11c64:	str	r0, [fp, #-28]	; 0xffffffe4
   11c68:	movw	r0, #57820	; 0xe1dc
   11c6c:	movt	r0, #4
   11c70:	ldr	r0, [r0]
   11c74:	movw	r1, #0
   11c78:	cmp	r0, r1
   11c7c:	beq	11c98 <__assert_fail@plt+0x544>
   11c80:	movw	r0, #57820	; 0xe1dc
   11c84:	movt	r0, #4
   11c88:	ldr	r0, [r0]
   11c8c:	bl	12090 <__assert_fail@plt+0x93c>
   11c90:	str	r0, [sp, #36]	; 0x24
   11c94:	b	11cd4 <__assert_fail@plt+0x580>
   11c98:	movw	r0, #57688	; 0xe158
   11c9c:	movt	r0, #4
   11ca0:	ldr	r0, [r0]
   11ca4:	movw	r1, #11
   11ca8:	cmp	r1, r0
   11cac:	bls	11cbc <__assert_fail@plt+0x568>
   11cb0:	movw	r0, #11
   11cb4:	str	r0, [sp, #32]
   11cb8:	b	11ccc <__assert_fail@plt+0x578>
   11cbc:	movw	r0, #57688	; 0xe158
   11cc0:	movt	r0, #4
   11cc4:	ldr	r0, [r0]
   11cc8:	str	r0, [sp, #32]
   11ccc:	ldr	r0, [sp, #32]
   11cd0:	str	r0, [sp, #36]	; 0x24
   11cd4:	ldr	r0, [sp, #36]	; 0x24
   11cd8:	str	r0, [fp, #-32]	; 0xffffffe0
   11cdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ce0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11ce4:	add	r1, r1, #1
   11ce8:	add	r1, r0, r1
   11cec:	mov	r2, #1
   11cf0:	cmp	r1, r0
   11cf4:	movwvc	r2, #0
   11cf8:	str	r1, [fp, #-36]	; 0xffffffdc
   11cfc:	tst	r2, #1
   11d00:	beq	11d08 <__assert_fail@plt+0x5b4>
   11d04:	bl	11850 <__assert_fail@plt+0xfc>
   11d08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11d0c:	bl	311cc <__assert_fail@plt+0x1fa78>
   11d10:	movw	r1, #57828	; 0xe1e4
   11d14:	movt	r1, #4
   11d18:	str	r0, [r1]
   11d1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d20:	movw	r1, #57776	; 0xe1b0
   11d24:	movt	r1, #4
   11d28:	ldr	r2, [r1]
   11d2c:	add	r3, r2, #1
   11d30:	str	r3, [r1]
   11d34:	add	r0, r0, r2, lsl #2
   11d38:	ldr	r0, [r0]
   11d3c:	bl	12220 <__assert_fail@plt+0xacc>
   11d40:	ldr	r0, [fp, #-16]
   11d44:	movw	r1, #57776	; 0xe1b0
   11d48:	movt	r1, #4
   11d4c:	ldr	r1, [r1]
   11d50:	ldr	r2, [fp, #-20]	; 0xffffffec
   11d54:	bl	122b8 <__assert_fail@plt+0xb64>
   11d58:	movw	r0, #57832	; 0xe1e8
   11d5c:	movt	r0, #4
   11d60:	bl	116c4 <sigemptyset@plt>
   11d64:	movw	r1, #0
   11d68:	str	r1, [fp, #-40]	; 0xffffffd8
   11d6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11d70:	cmp	r0, #11
   11d74:	bge	11ddc <__assert_fail@plt+0x688>
   11d78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11d7c:	movw	r1, #51396	; 0xc8c4
   11d80:	movt	r1, #3
   11d84:	add	r0, r1, r0, lsl #2
   11d88:	ldr	r0, [r0]
   11d8c:	movw	r1, #0
   11d90:	add	r2, sp, #76	; 0x4c
   11d94:	bl	1152c <sigaction@plt>
   11d98:	ldr	r1, [sp, #76]	; 0x4c
   11d9c:	movw	r2, #1
   11da0:	cmp	r1, r2
   11da4:	beq	11dc8 <__assert_fail@plt+0x674>
   11da8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11dac:	movw	r1, #51396	; 0xc8c4
   11db0:	movt	r1, #3
   11db4:	add	r0, r1, r0, lsl #2
   11db8:	ldr	r1, [r0]
   11dbc:	movw	r0, #57832	; 0xe1e8
   11dc0:	movt	r0, #4
   11dc4:	bl	115a4 <sigaddset@plt>
   11dc8:	b	11dcc <__assert_fail@plt+0x678>
   11dcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11dd0:	add	r0, r0, #1
   11dd4:	str	r0, [fp, #-40]	; 0xffffffd8
   11dd8:	b	11d6c <__assert_fail@plt+0x618>
   11ddc:	movw	r0, #57832	; 0xe1e8
   11de0:	movt	r0, #4
   11de4:	movw	r1, #9732	; 0x2604
   11de8:	movt	r1, #1
   11dec:	str	r1, [sp, #76]	; 0x4c
   11df0:	add	r1, sp, #76	; 0x4c
   11df4:	add	r1, r1, #4
   11df8:	str	r0, [sp, #28]
   11dfc:	mov	r0, r1
   11e00:	ldr	r1, [sp, #28]
   11e04:	movw	r2, #128	; 0x80
   11e08:	bl	11478 <memcpy@plt>
   11e0c:	movw	r0, #0
   11e10:	str	r0, [sp, #208]	; 0xd0
   11e14:	str	r0, [fp, #-40]	; 0xffffffd8
   11e18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e1c:	cmp	r0, #11
   11e20:	bge	11e80 <__assert_fail@plt+0x72c>
   11e24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e28:	movw	r1, #51396	; 0xc8c4
   11e2c:	movt	r1, #3
   11e30:	add	r0, r1, r0, lsl #2
   11e34:	ldr	r1, [r0]
   11e38:	movw	r0, #57832	; 0xe1e8
   11e3c:	movt	r0, #4
   11e40:	bl	114fc <sigismember@plt>
   11e44:	cmp	r0, #0
   11e48:	beq	11e6c <__assert_fail@plt+0x718>
   11e4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e50:	movw	r1, #51396	; 0xc8c4
   11e54:	movt	r1, #3
   11e58:	add	r0, r1, r0, lsl #2
   11e5c:	ldr	r0, [r0]
   11e60:	add	r1, sp, #76	; 0x4c
   11e64:	movw	r2, #0
   11e68:	bl	1152c <sigaction@plt>
   11e6c:	b	11e70 <__assert_fail@plt+0x71c>
   11e70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e74:	add	r0, r0, #1
   11e78:	str	r0, [fp, #-40]	; 0xffffffd8
   11e7c:	b	11e18 <__assert_fail@plt+0x6c4>
   11e80:	bl	12644 <__assert_fail@plt+0xef0>
   11e84:	movw	r0, #0
   11e88:	bl	11748 <close@plt>
   11e8c:	cmp	r0, #0
   11e90:	beq	11ec8 <__assert_fail@plt+0x774>
   11e94:	bl	11628 <__errno_location@plt>
   11e98:	ldr	r1, [r0]
   11e9c:	movw	r0, #48616	; 0xbde8
   11ea0:	movt	r0, #3
   11ea4:	str	r1, [sp, #24]
   11ea8:	bl	115f8 <gettext@plt>
   11eac:	movw	r1, #0
   11eb0:	str	r0, [sp, #20]
   11eb4:	mov	r0, r1
   11eb8:	ldr	r1, [sp, #24]
   11ebc:	ldr	r2, [sp, #20]
   11ec0:	bl	11580 <error@plt>
   11ec4:	bl	11888 <__assert_fail@plt+0x134>
   11ec8:	movw	r0, #0
   11ecc:	sub	sp, fp, #8
   11ed0:	pop	{r4, r5, fp, pc}
   11ed4:	push	{fp, lr}
   11ed8:	mov	fp, sp
   11edc:	sub	sp, sp, #48	; 0x30
   11ee0:	str	r0, [fp, #-4]
   11ee4:	ldr	r0, [fp, #-4]
   11ee8:	cmp	r0, #0
   11eec:	beq	11f38 <__assert_fail@plt+0x7e4>
   11ef0:	b	11ef4 <__assert_fail@plt+0x7a0>
   11ef4:	movw	r0, #57784	; 0xe1b8
   11ef8:	movt	r0, #4
   11efc:	ldr	r0, [r0]
   11f00:	movw	r1, #48627	; 0xbdf3
   11f04:	movt	r1, #3
   11f08:	str	r0, [fp, #-8]
   11f0c:	mov	r0, r1
   11f10:	bl	115f8 <gettext@plt>
   11f14:	movw	r1, #58044	; 0xe2bc
   11f18:	movt	r1, #4
   11f1c:	ldr	r2, [r1]
   11f20:	ldr	r1, [fp, #-8]
   11f24:	str	r0, [fp, #-12]
   11f28:	mov	r0, r1
   11f2c:	ldr	r1, [fp, #-12]
   11f30:	bl	1161c <fprintf@plt>
   11f34:	b	12088 <__assert_fail@plt+0x934>
   11f38:	movw	r0, #48666	; 0xbe1a
   11f3c:	movt	r0, #3
   11f40:	bl	115f8 <gettext@plt>
   11f44:	movw	r1, #58044	; 0xe2bc
   11f48:	movt	r1, #4
   11f4c:	ldr	r1, [r1]
   11f50:	bl	1140c <printf@plt>
   11f54:	movw	r1, #48705	; 0xbe41
   11f58:	movt	r1, #3
   11f5c:	str	r0, [fp, #-16]
   11f60:	mov	r0, r1
   11f64:	bl	115f8 <gettext@plt>
   11f68:	movw	r1, #57788	; 0xe1bc
   11f6c:	movt	r1, #4
   11f70:	ldr	r1, [r1]
   11f74:	bl	113c4 <fputs_unlocked@plt>
   11f78:	movw	r1, #48839	; 0xbec7
   11f7c:	movt	r1, #3
   11f80:	str	r0, [fp, #-20]	; 0xffffffec
   11f84:	mov	r0, r1
   11f88:	bl	115f8 <gettext@plt>
   11f8c:	movw	r1, #57788	; 0xe1bc
   11f90:	movt	r1, #4
   11f94:	ldr	r1, [r1]
   11f98:	bl	113c4 <fputs_unlocked@plt>
   11f9c:	str	r0, [sp, #24]
   11fa0:	bl	12828 <__assert_fail@plt+0x10d4>
   11fa4:	movw	r0, #48874	; 0xbeea
   11fa8:	movt	r0, #3
   11fac:	bl	115f8 <gettext@plt>
   11fb0:	movw	r1, #57788	; 0xe1bc
   11fb4:	movt	r1, #4
   11fb8:	ldr	r1, [r1]
   11fbc:	bl	113c4 <fputs_unlocked@plt>
   11fc0:	movw	r1, #49062	; 0xbfa6
   11fc4:	movt	r1, #3
   11fc8:	str	r0, [sp, #20]
   11fcc:	mov	r0, r1
   11fd0:	bl	115f8 <gettext@plt>
   11fd4:	movw	r1, #57788	; 0xe1bc
   11fd8:	movt	r1, #4
   11fdc:	ldr	r1, [r1]
   11fe0:	bl	113c4 <fputs_unlocked@plt>
   11fe4:	movw	r1, #49128	; 0xbfe8
   11fe8:	movt	r1, #3
   11fec:	str	r0, [sp, #16]
   11ff0:	mov	r0, r1
   11ff4:	bl	115f8 <gettext@plt>
   11ff8:	movw	r1, #57788	; 0xe1bc
   11ffc:	movt	r1, #4
   12000:	ldr	r1, [r1]
   12004:	bl	113c4 <fputs_unlocked@plt>
   12008:	movw	r1, #49327	; 0xc0af
   1200c:	movt	r1, #3
   12010:	str	r0, [sp, #12]
   12014:	mov	r0, r1
   12018:	bl	115f8 <gettext@plt>
   1201c:	movw	r1, #57788	; 0xe1bc
   12020:	movt	r1, #4
   12024:	ldr	r1, [r1]
   12028:	bl	113c4 <fputs_unlocked@plt>
   1202c:	movw	r1, #49372	; 0xc0dc
   12030:	movt	r1, #3
   12034:	str	r0, [sp, #8]
   12038:	mov	r0, r1
   1203c:	bl	115f8 <gettext@plt>
   12040:	movw	r1, #57788	; 0xe1bc
   12044:	movt	r1, #4
   12048:	ldr	r1, [r1]
   1204c:	bl	113c4 <fputs_unlocked@plt>
   12050:	movw	r1, #49426	; 0xc112
   12054:	movt	r1, #3
   12058:	str	r0, [sp, #4]
   1205c:	mov	r0, r1
   12060:	bl	115f8 <gettext@plt>
   12064:	movw	r1, #57788	; 0xe1bc
   12068:	movt	r1, #4
   1206c:	ldr	r1, [r1]
   12070:	bl	113c4 <fputs_unlocked@plt>
   12074:	movw	r1, #48526	; 0xbd8e
   12078:	movt	r1, #3
   1207c:	str	r0, [sp]
   12080:	mov	r0, r1
   12084:	bl	12850 <__assert_fail@plt+0x10fc>
   12088:	ldr	r0, [fp, #-4]
   1208c:	bl	115ec <exit@plt>
   12090:	push	{fp, lr}
   12094:	mov	fp, sp
   12098:	sub	sp, sp, #32
   1209c:	str	r0, [fp, #-4]
   120a0:	movw	r0, #0
   120a4:	strb	r0, [fp, #-5]
   120a8:	ldr	r0, [fp, #-4]
   120ac:	str	r0, [fp, #-12]
   120b0:	ldr	r0, [fp, #-12]
   120b4:	ldrsb	r0, [r0]
   120b8:	cmp	r0, #0
   120bc:	beq	121b4 <__assert_fail@plt+0xa60>
   120c0:	ldr	r0, [fp, #-12]
   120c4:	ldrb	r0, [r0]
   120c8:	cmp	r0, #37	; 0x25
   120cc:	bne	121a0 <__assert_fail@plt+0xa4c>
   120d0:	ldr	r0, [fp, #-12]
   120d4:	add	r1, r0, #1
   120d8:	str	r1, [fp, #-12]
   120dc:	ldrb	r0, [r0, #1]
   120e0:	cmp	r0, #37	; 0x25
   120e4:	beq	121a0 <__assert_fail@plt+0xa4c>
   120e8:	ldrb	r0, [fp, #-5]
   120ec:	tst	r0, #1
   120f0:	beq	12118 <__assert_fail@plt+0x9c4>
   120f4:	movw	r0, #49988	; 0xc344
   120f8:	movt	r0, #3
   120fc:	bl	115f8 <gettext@plt>
   12100:	movw	r1, #1
   12104:	str	r0, [sp, #8]
   12108:	mov	r0, r1
   1210c:	movw	r1, #0
   12110:	ldr	r2, [sp, #8]
   12114:	bl	11580 <error@plt>
   12118:	movw	r0, #1
   1211c:	strb	r0, [fp, #-5]
   12120:	ldr	r0, [fp, #-12]
   12124:	add	r1, sp, #16
   12128:	bl	12ea0 <__assert_fail@plt+0x174c>
   1212c:	ldr	r1, [fp, #-12]
   12130:	add	r0, r1, r0
   12134:	str	r0, [fp, #-12]
   12138:	ldr	r0, [fp, #-12]
   1213c:	ldrb	r0, [r0]
   12140:	sub	r0, r0, #48	; 0x30
   12144:	cmp	r0, #9
   12148:	bhi	1215c <__assert_fail@plt+0xa08>
   1214c:	ldr	r0, [fp, #-12]
   12150:	add	r0, r0, #1
   12154:	str	r0, [fp, #-12]
   12158:	b	12138 <__assert_fail@plt+0x9e4>
   1215c:	ldr	r0, [fp, #-12]
   12160:	ldrb	r0, [r0]
   12164:	cmp	r0, #46	; 0x2e
   12168:	bne	12194 <__assert_fail@plt+0xa40>
   1216c:	b	12170 <__assert_fail@plt+0xa1c>
   12170:	ldr	r0, [fp, #-12]
   12174:	add	r1, r0, #1
   12178:	str	r1, [fp, #-12]
   1217c:	ldrb	r0, [r0, #1]
   12180:	sub	r0, r0, #48	; 0x30
   12184:	cmp	r0, #9
   12188:	bhi	12190 <__assert_fail@plt+0xa3c>
   1218c:	b	12170 <__assert_fail@plt+0xa1c>
   12190:	b	12194 <__assert_fail@plt+0xa40>
   12194:	ldr	r0, [fp, #-12]
   12198:	ldr	r1, [sp, #16]
   1219c:	bl	12f6c <__assert_fail@plt+0x1818>
   121a0:	b	121a4 <__assert_fail@plt+0xa50>
   121a4:	ldr	r0, [fp, #-12]
   121a8:	add	r0, r0, #1
   121ac:	str	r0, [fp, #-12]
   121b0:	b	120b0 <__assert_fail@plt+0x95c>
   121b4:	ldrb	r0, [fp, #-5]
   121b8:	tst	r0, #1
   121bc:	bne	121e4 <__assert_fail@plt+0xa90>
   121c0:	movw	r0, #50036	; 0xc374
   121c4:	movt	r0, #3
   121c8:	bl	115f8 <gettext@plt>
   121cc:	movw	r1, #1
   121d0:	str	r0, [sp, #4]
   121d4:	mov	r0, r1
   121d8:	movw	r1, #0
   121dc:	ldr	r2, [sp, #4]
   121e0:	bl	11580 <error@plt>
   121e4:	ldr	r3, [pc, #48]	; 1221c <__assert_fail@plt+0xac8>
   121e8:	ldr	r2, [fp, #-4]
   121ec:	movw	r0, #0
   121f0:	str	r0, [sp]
   121f4:	ldr	r1, [sp]
   121f8:	bl	11640 <snprintf@plt>
   121fc:	str	r0, [sp, #12]
   12200:	ldr	r0, [sp, #12]
   12204:	cmp	r0, #0
   12208:	bge	12210 <__assert_fail@plt+0xabc>
   1220c:	bl	11850 <__assert_fail@plt+0xfc>
   12210:	ldr	r0, [sp, #12]
   12214:	mov	sp, fp
   12218:	pop	{fp, pc}
   1221c:	svcvc	0x00ffffff
   12220:	push	{fp, lr}
   12224:	mov	fp, sp
   12228:	sub	sp, sp, #24
   1222c:	str	r0, [fp, #-4]
   12230:	ldr	r0, [fp, #-4]
   12234:	movw	r1, #51596	; 0xc98c
   12238:	movt	r1, #3
   1223c:	bl	11400 <strcmp@plt>
   12240:	cmp	r0, #0
   12244:	beq	122b0 <__assert_fail@plt+0xb5c>
   12248:	ldr	r1, [fp, #-4]
   1224c:	movw	r0, #0
   12250:	str	r0, [fp, #-8]
   12254:	ldr	r2, [fp, #-8]
   12258:	ldr	r3, [fp, #-8]
   1225c:	bl	15ce8 <__assert_fail@plt+0x4594>
   12260:	cmp	r0, #0
   12264:	bge	122b0 <__assert_fail@plt+0xb5c>
   12268:	bl	11628 <__errno_location@plt>
   1226c:	ldr	r1, [r0]
   12270:	movw	r0, #50260	; 0xc454
   12274:	movt	r0, #3
   12278:	str	r1, [sp, #12]
   1227c:	bl	115f8 <gettext@plt>
   12280:	ldr	r1, [fp, #-4]
   12284:	movw	r2, #4
   12288:	str	r0, [sp, #8]
   1228c:	mov	r0, r2
   12290:	bl	184a4 <__assert_fail@plt+0x6d50>
   12294:	movw	r1, #1
   12298:	str	r0, [sp, #4]
   1229c:	mov	r0, r1
   122a0:	ldr	r1, [sp, #12]
   122a4:	ldr	r2, [sp, #8]
   122a8:	ldr	r3, [sp, #4]
   122ac:	bl	11580 <error@plt>
   122b0:	mov	sp, fp
   122b4:	pop	{fp, pc}
   122b8:	push	{fp, lr}
   122bc:	mov	fp, sp
   122c0:	sub	sp, sp, #104	; 0x68
   122c4:	str	r0, [fp, #-4]
   122c8:	str	r1, [fp, #-8]
   122cc:	str	r2, [fp, #-12]
   122d0:	ldr	r0, [fp, #-8]
   122d4:	str	r0, [fp, #-20]	; 0xffffffec
   122d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   122dc:	ldr	r1, [fp, #-4]
   122e0:	cmp	r0, r1
   122e4:	bge	125fc <__assert_fail@plt+0xea8>
   122e8:	ldr	r0, [fp, #-12]
   122ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   122f0:	add	r0, r0, r1, lsl #2
   122f4:	ldr	r0, [r0]
   122f8:	ldrb	r0, [r0]
   122fc:	cmp	r0, #47	; 0x2f
   12300:	beq	12320 <__assert_fail@plt+0xbcc>
   12304:	ldr	r0, [fp, #-12]
   12308:	ldr	r1, [fp, #-20]	; 0xffffffec
   1230c:	add	r0, r0, r1, lsl #2
   12310:	ldr	r0, [r0]
   12314:	ldrb	r0, [r0]
   12318:	cmp	r0, #37	; 0x25
   1231c:	bne	12360 <__assert_fail@plt+0xc0c>
   12320:	ldr	r0, [fp, #-20]	; 0xffffffec
   12324:	mov	r1, r0
   12328:	ldr	r2, [fp, #-12]
   1232c:	ldr	r0, [r2, r0, lsl #2]!
   12330:	ldrb	r0, [r0]
   12334:	sub	r0, r0, #37	; 0x25
   12338:	clz	r0, r0
   1233c:	lsr	r0, r0, #5
   12340:	ldr	r2, [r2]
   12344:	str	r0, [sp, #44]	; 0x2c
   12348:	mov	r0, r1
   1234c:	ldr	r1, [sp, #44]	; 0x2c
   12350:	and	r1, r1, #1
   12354:	bl	1315c <__assert_fail@plt+0x1a08>
   12358:	str	r0, [fp, #-16]
   1235c:	b	1257c <__assert_fail@plt+0xe28>
   12360:	bl	13310 <__assert_fail@plt+0x1bbc>
   12364:	str	r0, [fp, #-16]
   12368:	ldr	r0, [fp, #-20]	; 0xffffffec
   1236c:	ldr	r1, [fp, #-16]
   12370:	str	r0, [r1, #24]
   12374:	ldr	r0, [fp, #-12]
   12378:	ldr	r1, [fp, #-20]	; 0xffffffec
   1237c:	add	r0, r0, r1, lsl #2
   12380:	ldr	r0, [r0]
   12384:	movw	r1, #0
   12388:	movw	r2, #10
   1238c:	sub	r3, fp, #32
   12390:	movw	ip, #49863	; 0xc2c7
   12394:	movt	ip, #3
   12398:	str	ip, [sp]
   1239c:	bl	36168 <__assert_fail@plt+0x24a14>
   123a0:	cmp	r0, #0
   123a4:	bne	123b8 <__assert_fail@plt+0xc64>
   123a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   123ac:	cmn	r0, #1
   123b0:	bgt	123fc <__assert_fail@plt+0xca8>
   123b4:	b	123b8 <__assert_fail@plt+0xc64>
   123b8:	movw	r0, #50287	; 0xc46f
   123bc:	movt	r0, #3
   123c0:	bl	115f8 <gettext@plt>
   123c4:	ldr	r1, [fp, #-12]
   123c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   123cc:	add	r1, r1, r2, lsl #2
   123d0:	ldr	r1, [r1]
   123d4:	str	r0, [sp, #40]	; 0x28
   123d8:	mov	r0, r1
   123dc:	bl	1883c <__assert_fail@plt+0x70e8>
   123e0:	movw	r1, #1
   123e4:	str	r0, [sp, #36]	; 0x24
   123e8:	mov	r0, r1
   123ec:	movw	r1, #0
   123f0:	ldr	r2, [sp, #40]	; 0x28
   123f4:	ldr	r3, [sp, #36]	; 0x24
   123f8:	bl	11580 <error@plt>
   123fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12400:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12404:	orr	r0, r0, r1
   12408:	cmp	r0, #0
   1240c:	bne	12448 <__assert_fail@plt+0xcf4>
   12410:	b	12414 <__assert_fail@plt+0xcc0>
   12414:	movw	r0, #50307	; 0xc483
   12418:	movt	r0, #3
   1241c:	bl	115f8 <gettext@plt>
   12420:	ldr	r1, [fp, #-12]
   12424:	ldr	r2, [fp, #-20]	; 0xffffffec
   12428:	add	r1, r1, r2, lsl #2
   1242c:	ldr	r3, [r1]
   12430:	movw	r1, #1
   12434:	str	r0, [sp, #32]
   12438:	mov	r0, r1
   1243c:	movw	r1, #0
   12440:	ldr	r2, [sp, #32]
   12444:	bl	11580 <error@plt>
   12448:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1244c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12450:	movw	r2, #57984	; 0xe280
   12454:	movt	r2, #4
   12458:	ldr	r3, [r2]
   1245c:	ldr	r2, [r2, #4]
   12460:	subs	r0, r0, r3
   12464:	sbcs	r1, r1, r2
   12468:	bcs	124e0 <__assert_fail@plt+0xd8c>
   1246c:	b	12470 <__assert_fail@plt+0xd1c>
   12470:	add	r2, sp, #51	; 0x33
   12474:	movw	r0, #50349	; 0xc4ad
   12478:	movt	r0, #3
   1247c:	str	r2, [sp, #28]
   12480:	bl	115f8 <gettext@plt>
   12484:	ldr	r1, [fp, #-12]
   12488:	ldr	r2, [fp, #-20]	; 0xffffffec
   1248c:	ldr	r1, [r1, r2, lsl #2]
   12490:	str	r0, [sp, #24]
   12494:	mov	r0, r1
   12498:	bl	1883c <__assert_fail@plt+0x70e8>
   1249c:	movw	r1, #57984	; 0xe280
   124a0:	movt	r1, #4
   124a4:	ldr	r2, [r1]
   124a8:	ldr	r1, [r1, #4]
   124ac:	str	r0, [sp, #20]
   124b0:	mov	r0, r2
   124b4:	ldr	r2, [sp, #28]
   124b8:	bl	160b0 <__assert_fail@plt+0x495c>
   124bc:	movw	r1, #1
   124c0:	str	r0, [sp, #16]
   124c4:	mov	r0, r1
   124c8:	movw	r1, #0
   124cc:	ldr	r2, [sp, #24]
   124d0:	ldr	r3, [sp, #20]
   124d4:	ldr	ip, [sp, #16]
   124d8:	str	ip, [sp]
   124dc:	bl	11580 <error@plt>
   124e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   124e8:	movw	r2, #57984	; 0xe280
   124ec:	movt	r2, #4
   124f0:	ldr	r3, [r2]
   124f4:	ldr	r2, [r2, #4]
   124f8:	eor	r1, r1, r2
   124fc:	eor	r0, r0, r3
   12500:	orr	r0, r0, r1
   12504:	cmp	r0, #0
   12508:	bne	12550 <__assert_fail@plt+0xdfc>
   1250c:	b	12510 <__assert_fail@plt+0xdbc>
   12510:	movw	r0, #50406	; 0xc4e6
   12514:	movt	r0, #3
   12518:	bl	115f8 <gettext@plt>
   1251c:	ldr	r1, [fp, #-12]
   12520:	ldr	r2, [fp, #-20]	; 0xffffffec
   12524:	add	r1, r1, r2, lsl #2
   12528:	ldr	r1, [r1]
   1252c:	str	r0, [sp, #12]
   12530:	mov	r0, r1
   12534:	bl	1883c <__assert_fail@plt+0x70e8>
   12538:	movw	r1, #0
   1253c:	str	r0, [sp, #8]
   12540:	mov	r0, r1
   12544:	ldr	r2, [sp, #12]
   12548:	ldr	r3, [sp, #8]
   1254c:	bl	11580 <error@plt>
   12550:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12554:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12558:	movw	r2, #57984	; 0xe280
   1255c:	movt	r2, #4
   12560:	str	r1, [r2, #4]
   12564:	str	r0, [r2]
   12568:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1256c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12570:	ldr	r2, [fp, #-16]
   12574:	str	r1, [r2, #12]
   12578:	str	r0, [r2, #8]
   1257c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12580:	add	r0, r0, #1
   12584:	ldr	r1, [fp, #-4]
   12588:	cmp	r0, r1
   1258c:	bge	125e8 <__assert_fail@plt+0xe94>
   12590:	ldr	r0, [fp, #-12]
   12594:	ldr	r1, [fp, #-20]	; 0xffffffec
   12598:	add	r1, r1, #1
   1259c:	add	r0, r0, r1, lsl #2
   125a0:	ldr	r0, [r0]
   125a4:	ldrb	r0, [r0]
   125a8:	cmp	r0, #123	; 0x7b
   125ac:	bne	125e8 <__assert_fail@plt+0xe94>
   125b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   125b4:	add	r0, r0, #1
   125b8:	str	r0, [fp, #-20]	; 0xffffffec
   125bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   125c0:	mov	r1, r0
   125c4:	ldr	r2, [fp, #-16]
   125c8:	ldr	r3, [fp, #-12]
   125cc:	add	r0, r3, r0, lsl #2
   125d0:	ldr	r0, [r0]
   125d4:	str	r0, [sp, #4]
   125d8:	mov	r0, r1
   125dc:	mov	r1, r2
   125e0:	ldr	r2, [sp, #4]
   125e4:	bl	133dc <__assert_fail@plt+0x1c88>
   125e8:	b	125ec <__assert_fail@plt+0xe98>
   125ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   125f0:	add	r0, r0, #1
   125f4:	str	r0, [fp, #-20]	; 0xffffffec
   125f8:	b	122d8 <__assert_fail@plt+0xb84>
   125fc:	mov	sp, fp
   12600:	pop	{fp, pc}
   12604:	push	{fp, lr}
   12608:	mov	fp, sp
   1260c:	sub	sp, sp, #8
   12610:	str	r0, [sp, #4]
   12614:	movw	r0, #1
   12618:	and	r0, r0, #1
   1261c:	bl	12cd0 <__assert_fail@plt+0x157c>
   12620:	ldr	r0, [sp, #4]
   12624:	movw	r1, #0
   12628:	bl	114b4 <signal@plt>
   1262c:	ldr	r1, [sp, #4]
   12630:	str	r0, [sp]
   12634:	mov	r0, r1
   12638:	bl	113dc <raise@plt>
   1263c:	mov	sp, fp
   12640:	pop	{fp, pc}
   12644:	push	{fp, lr}
   12648:	mov	fp, sp
   1264c:	sub	sp, sp, #24
   12650:	movw	r0, #0
   12654:	str	r0, [fp, #-4]
   12658:	ldr	r0, [fp, #-4]
   1265c:	movw	r1, #57808	; 0xe1d0
   12660:	movt	r1, #4
   12664:	ldr	r1, [r1]
   12668:	cmp	r0, r1
   1266c:	bge	12814 <__assert_fail@plt+0x10c0>
   12670:	movw	r0, #57804	; 0xe1cc
   12674:	movt	r0, #4
   12678:	ldr	r0, [r0]
   1267c:	ldr	r1, [fp, #-4]
   12680:	add	r0, r0, r1, lsl #6
   12684:	ldrb	r0, [r0, #30]
   12688:	tst	r0, #1
   1268c:	beq	12748 <__assert_fail@plt+0xff4>
   12690:	mov	r0, #0
   12694:	str	r0, [sp, #12]
   12698:	str	r0, [sp, #8]
   1269c:	movw	r0, #57804	; 0xe1cc
   126a0:	movt	r0, #4
   126a4:	ldr	r0, [r0]
   126a8:	ldr	r1, [fp, #-4]
   126ac:	add	r0, r0, r1, lsl #6
   126b0:	ldrb	r0, [r0, #28]
   126b4:	tst	r0, #1
   126b8:	movw	r0, #1
   126bc:	str	r0, [sp, #4]
   126c0:	bne	126fc <__assert_fail@plt+0xfa8>
   126c4:	ldr	r0, [sp, #8]
   126c8:	ldr	r1, [sp, #12]
   126cc:	movw	r2, #57804	; 0xe1cc
   126d0:	movt	r2, #4
   126d4:	ldr	r2, [r2]
   126d8:	ldr	r3, [fp, #-4]
   126dc:	add	r2, r2, r3, lsl #6
   126e0:	ldr	r3, [r2, #16]
   126e4:	ldr	r2, [r2, #20]
   126e8:	subs	r0, r3, r0
   126ec:	sbcs	r1, r2, r1
   126f0:	mov	r2, #0
   126f4:	movwge	r2, #1
   126f8:	str	r2, [sp, #4]
   126fc:	ldr	r0, [sp, #4]
   12700:	tst	r0, #1
   12704:	beq	12744 <__assert_fail@plt+0xff0>
   12708:	movw	r0, #57804	; 0xe1cc
   1270c:	movt	r0, #4
   12710:	ldr	r0, [r0]
   12714:	ldr	r1, [fp, #-4]
   12718:	add	r0, r0, r1, lsl #6
   1271c:	ldr	r2, [sp, #8]
   12720:	ldr	r3, [sp, #12]
   12724:	bl	135dc <__assert_fail@plt+0x1e88>
   12728:	ldr	r0, [sp, #8]
   1272c:	ldr	r1, [sp, #12]
   12730:	adds	r0, r0, #1
   12734:	adc	r1, r1, #0
   12738:	str	r0, [sp, #8]
   1273c:	str	r1, [sp, #12]
   12740:	b	1269c <__assert_fail@plt+0xf48>
   12744:	b	12800 <__assert_fail@plt+0x10ac>
   12748:	mov	r0, #0
   1274c:	str	r0, [sp, #12]
   12750:	str	r0, [sp, #8]
   12754:	movw	r0, #57804	; 0xe1cc
   12758:	movt	r0, #4
   1275c:	ldr	r0, [r0]
   12760:	ldr	r1, [fp, #-4]
   12764:	add	r0, r0, r1, lsl #6
   12768:	ldrb	r0, [r0, #28]
   1276c:	tst	r0, #1
   12770:	movw	r0, #1
   12774:	str	r0, [sp]
   12778:	bne	127b4 <__assert_fail@plt+0x1060>
   1277c:	ldr	r0, [sp, #8]
   12780:	ldr	r1, [sp, #12]
   12784:	movw	r2, #57804	; 0xe1cc
   12788:	movt	r2, #4
   1278c:	ldr	r2, [r2]
   12790:	ldr	r3, [fp, #-4]
   12794:	add	r2, r2, r3, lsl #6
   12798:	ldr	r3, [r2, #16]
   1279c:	ldr	r2, [r2, #20]
   127a0:	subs	r0, r3, r0
   127a4:	sbcs	r1, r2, r1
   127a8:	mov	r2, #0
   127ac:	movwge	r2, #1
   127b0:	str	r2, [sp]
   127b4:	ldr	r0, [sp]
   127b8:	tst	r0, #1
   127bc:	beq	127fc <__assert_fail@plt+0x10a8>
   127c0:	movw	r0, #57804	; 0xe1cc
   127c4:	movt	r0, #4
   127c8:	ldr	r0, [r0]
   127cc:	ldr	r1, [fp, #-4]
   127d0:	add	r0, r0, r1, lsl #6
   127d4:	ldr	r2, [sp, #8]
   127d8:	ldr	r3, [sp, #12]
   127dc:	bl	13994 <__assert_fail@plt+0x2240>
   127e0:	ldr	r0, [sp, #8]
   127e4:	ldr	r1, [sp, #12]
   127e8:	adds	r0, r0, #1
   127ec:	adc	r1, r1, #0
   127f0:	str	r0, [sp, #8]
   127f4:	str	r1, [sp, #12]
   127f8:	b	12754 <__assert_fail@plt+0x1000>
   127fc:	b	12800 <__assert_fail@plt+0x10ac>
   12800:	b	12804 <__assert_fail@plt+0x10b0>
   12804:	ldr	r0, [fp, #-4]
   12808:	add	r0, r0, #1
   1280c:	str	r0, [fp, #-4]
   12810:	b	12658 <__assert_fail@plt+0xf04>
   12814:	bl	13ad4 <__assert_fail@plt+0x2380>
   12818:	bl	13c30 <__assert_fail@plt+0x24dc>
   1281c:	bl	12a4c <__assert_fail@plt+0x12f8>
   12820:	mov	sp, fp
   12824:	pop	{fp, pc}
   12828:	push	{fp, lr}
   1282c:	mov	fp, sp
   12830:	movw	r0, #50834	; 0xc692
   12834:	movt	r0, #3
   12838:	bl	115f8 <gettext@plt>
   1283c:	movw	r1, #57788	; 0xe1bc
   12840:	movt	r1, #4
   12844:	ldr	r1, [r1]
   12848:	bl	113c4 <fputs_unlocked@plt>
   1284c:	pop	{fp, pc}
   12850:	push	{fp, lr}
   12854:	mov	fp, sp
   12858:	sub	sp, sp, #88	; 0x58
   1285c:	add	r1, sp, #28
   12860:	movw	r2, #51440	; 0xc8f0
   12864:	movt	r2, #3
   12868:	str	r0, [fp, #-4]
   1286c:	mov	r0, r1
   12870:	str	r1, [sp, #12]
   12874:	mov	r1, r2
   12878:	movw	r2, #56	; 0x38
   1287c:	bl	11478 <memcpy@plt>
   12880:	ldr	r0, [fp, #-4]
   12884:	str	r0, [sp, #24]
   12888:	ldr	r0, [sp, #12]
   1288c:	str	r0, [sp, #20]
   12890:	ldr	r0, [sp, #20]
   12894:	ldr	r0, [r0]
   12898:	movw	r1, #0
   1289c:	cmp	r0, r1
   128a0:	movw	r0, #0
   128a4:	str	r0, [sp, #8]
   128a8:	beq	128d4 <__assert_fail@plt+0x1180>
   128ac:	ldr	r0, [fp, #-4]
   128b0:	ldr	r1, [sp, #20]
   128b4:	ldr	r1, [r1]
   128b8:	bl	11400 <strcmp@plt>
   128bc:	cmp	r0, #0
   128c0:	movw	r0, #0
   128c4:	moveq	r0, #1
   128c8:	mvn	r1, #0
   128cc:	eor	r0, r0, r1
   128d0:	str	r0, [sp, #8]
   128d4:	ldr	r0, [sp, #8]
   128d8:	tst	r0, #1
   128dc:	beq	128f0 <__assert_fail@plt+0x119c>
   128e0:	ldr	r0, [sp, #20]
   128e4:	add	r0, r0, #8
   128e8:	str	r0, [sp, #20]
   128ec:	b	12890 <__assert_fail@plt+0x113c>
   128f0:	ldr	r0, [sp, #20]
   128f4:	ldr	r0, [r0, #4]
   128f8:	movw	r1, #0
   128fc:	cmp	r0, r1
   12900:	beq	12910 <__assert_fail@plt+0x11bc>
   12904:	ldr	r0, [sp, #20]
   12908:	ldr	r0, [r0, #4]
   1290c:	str	r0, [sp, #24]
   12910:	movw	r0, #51004	; 0xc73c
   12914:	movt	r0, #3
   12918:	bl	115f8 <gettext@plt>
   1291c:	movw	r1, #48533	; 0xbd95
   12920:	movt	r1, #3
   12924:	movw	r2, #51027	; 0xc753
   12928:	movt	r2, #3
   1292c:	bl	1140c <printf@plt>
   12930:	movw	r1, #5
   12934:	str	r0, [sp, #4]
   12938:	mov	r0, r1
   1293c:	movw	r1, #0
   12940:	bl	116b8 <setlocale@plt>
   12944:	str	r0, [sp, #16]
   12948:	ldr	r0, [sp, #16]
   1294c:	movw	r1, #0
   12950:	cmp	r0, r1
   12954:	beq	12990 <__assert_fail@plt+0x123c>
   12958:	ldr	r0, [sp, #16]
   1295c:	movw	r1, #51067	; 0xc77b
   12960:	movt	r1, #3
   12964:	movw	r2, #3
   12968:	bl	11730 <strncmp@plt>
   1296c:	cmp	r0, #0
   12970:	beq	12990 <__assert_fail@plt+0x123c>
   12974:	movw	r0, #51071	; 0xc77f
   12978:	movt	r0, #3
   1297c:	bl	115f8 <gettext@plt>
   12980:	movw	r1, #57788	; 0xe1bc
   12984:	movt	r1, #4
   12988:	ldr	r1, [r1]
   1298c:	bl	113c4 <fputs_unlocked@plt>
   12990:	movw	r0, #51142	; 0xc7c6
   12994:	movt	r0, #3
   12998:	bl	115f8 <gettext@plt>
   1299c:	ldr	r2, [fp, #-4]
   129a0:	movw	r1, #51027	; 0xc753
   129a4:	movt	r1, #3
   129a8:	bl	1140c <printf@plt>
   129ac:	movw	r1, #51169	; 0xc7e1
   129b0:	movt	r1, #3
   129b4:	str	r0, [sp]
   129b8:	mov	r0, r1
   129bc:	bl	115f8 <gettext@plt>
   129c0:	ldr	r1, [sp, #24]
   129c4:	ldr	r2, [sp, #24]
   129c8:	ldr	r3, [fp, #-4]
   129cc:	cmp	r2, r3
   129d0:	movw	r2, #0
   129d4:	moveq	r2, #1
   129d8:	tst	r2, #1
   129dc:	movw	r2, #49863	; 0xc2c7
   129e0:	movt	r2, #3
   129e4:	movw	r3, #50937	; 0xc6f9
   129e8:	movt	r3, #3
   129ec:	movne	r2, r3
   129f0:	bl	1140c <printf@plt>
   129f4:	mov	sp, fp
   129f8:	pop	{fp, pc}
   129fc:	push	{fp, lr}
   12a00:	mov	fp, sp
   12a04:	sub	sp, sp, #136	; 0x88
   12a08:	bl	12a4c <__assert_fail@plt+0x12f8>
   12a0c:	movw	r0, #0
   12a10:	movw	r1, #57832	; 0xe1e8
   12a14:	movt	r1, #4
   12a18:	add	r2, sp, #8
   12a1c:	bl	1143c <sigprocmask@plt>
   12a20:	movw	r1, #0
   12a24:	and	r1, r1, #1
   12a28:	str	r0, [sp, #4]
   12a2c:	mov	r0, r1
   12a30:	bl	12cd0 <__assert_fail@plt+0x157c>
   12a34:	movw	r0, #2
   12a38:	add	r1, sp, #8
   12a3c:	movw	r2, #0
   12a40:	bl	1143c <sigprocmask@plt>
   12a44:	mov	sp, fp
   12a48:	pop	{fp, pc}
   12a4c:	push	{fp, lr}
   12a50:	mov	fp, sp
   12a54:	sub	sp, sp, #200	; 0xc8
   12a58:	movw	r0, #57960	; 0xe268
   12a5c:	movt	r0, #4
   12a60:	ldr	r0, [r0]
   12a64:	movw	r1, #0
   12a68:	cmp	r0, r1
   12a6c:	beq	12cc8 <__assert_fail@plt+0x1574>
   12a70:	movw	r0, #57960	; 0xe268
   12a74:	movt	r0, #4
   12a78:	ldr	r0, [r0]
   12a7c:	bl	11568 <ferror_unlocked@plt>
   12a80:	cmp	r0, #0
   12a84:	beq	12adc <__assert_fail@plt+0x1388>
   12a88:	movw	r0, #49864	; 0xc2c8
   12a8c:	movt	r0, #3
   12a90:	bl	115f8 <gettext@plt>
   12a94:	movw	r1, #57964	; 0xe26c
   12a98:	movt	r1, #4
   12a9c:	ldr	r1, [r1]
   12aa0:	movw	r2, #4
   12aa4:	str	r0, [sp, #36]	; 0x24
   12aa8:	mov	r0, r2
   12aac:	bl	184a4 <__assert_fail@plt+0x6d50>
   12ab0:	movw	r1, #0
   12ab4:	str	r0, [sp, #32]
   12ab8:	mov	r0, r1
   12abc:	ldr	r2, [sp, #36]	; 0x24
   12ac0:	ldr	r3, [sp, #32]
   12ac4:	bl	11580 <error@plt>
   12ac8:	movw	r0, #57960	; 0xe268
   12acc:	movt	r0, #4
   12ad0:	movw	r1, #0
   12ad4:	str	r1, [r0]
   12ad8:	bl	11888 <__assert_fail@plt+0x134>
   12adc:	movw	r0, #57960	; 0xe268
   12ae0:	movt	r0, #4
   12ae4:	ldr	r0, [r0]
   12ae8:	bl	15bfc <__assert_fail@plt+0x44a8>
   12aec:	cmp	r0, #0
   12af0:	beq	12b50 <__assert_fail@plt+0x13fc>
   12af4:	bl	11628 <__errno_location@plt>
   12af8:	ldr	r1, [r0]
   12afc:	movw	r0, #57964	; 0xe26c
   12b00:	movt	r0, #4
   12b04:	ldr	r2, [r0]
   12b08:	movw	r0, #0
   12b0c:	movw	r3, #3
   12b10:	str	r1, [sp, #28]
   12b14:	mov	r1, r3
   12b18:	bl	185f8 <__assert_fail@plt+0x6ea4>
   12b1c:	movw	r1, #0
   12b20:	str	r0, [sp, #24]
   12b24:	mov	r0, r1
   12b28:	ldr	r1, [sp, #28]
   12b2c:	movw	r2, #50403	; 0xc4e3
   12b30:	movt	r2, #3
   12b34:	ldr	r3, [sp, #24]
   12b38:	bl	11580 <error@plt>
   12b3c:	movw	r0, #57960	; 0xe268
   12b40:	movt	r0, #4
   12b44:	movw	r1, #0
   12b48:	str	r1, [r0]
   12b4c:	bl	11888 <__assert_fail@plt+0x134>
   12b50:	movw	r0, #57968	; 0xe270
   12b54:	movt	r0, #4
   12b58:	ldr	r1, [r0]
   12b5c:	ldr	r0, [r0, #4]
   12b60:	orr	r0, r1, r0
   12b64:	cmp	r0, #0
   12b68:	bne	12c58 <__assert_fail@plt+0x1504>
   12b6c:	b	12b70 <__assert_fail@plt+0x141c>
   12b70:	movw	r0, #57824	; 0xe1e0
   12b74:	movt	r0, #4
   12b78:	ldrb	r0, [r0]
   12b7c:	tst	r0, #1
   12b80:	beq	12c58 <__assert_fail@plt+0x1504>
   12b84:	movw	r0, #0
   12b88:	movw	r1, #57832	; 0xe1e8
   12b8c:	movt	r1, #4
   12b90:	add	r2, sp, #72	; 0x48
   12b94:	bl	1143c <sigprocmask@plt>
   12b98:	movw	r1, #57964	; 0xe26c
   12b9c:	movt	r1, #4
   12ba0:	ldr	r1, [r1]
   12ba4:	str	r0, [sp, #20]
   12ba8:	mov	r0, r1
   12bac:	bl	114d8 <unlink@plt>
   12bb0:	cmp	r0, #0
   12bb4:	movw	r0, #0
   12bb8:	moveq	r0, #1
   12bbc:	and	r0, r0, #1
   12bc0:	strb	r0, [sp, #71]	; 0x47
   12bc4:	bl	11628 <__errno_location@plt>
   12bc8:	ldr	r0, [r0]
   12bcc:	str	r0, [sp, #64]	; 0x40
   12bd0:	movw	r0, #57976	; 0xe278
   12bd4:	movt	r0, #4
   12bd8:	ldr	r1, [r0]
   12bdc:	mvn	r2, #0
   12be0:	add	r1, r1, r2
   12be4:	str	r1, [r0]
   12be8:	movw	r0, #2
   12bec:	add	r1, sp, #72	; 0x48
   12bf0:	movw	r2, #0
   12bf4:	bl	1143c <sigprocmask@plt>
   12bf8:	ldrb	r1, [sp, #71]	; 0x47
   12bfc:	tst	r1, #1
   12c00:	bne	12c54 <__assert_fail@plt+0x1500>
   12c04:	ldr	r0, [sp, #64]	; 0x40
   12c08:	cmp	r0, #2
   12c0c:	beq	12c54 <__assert_fail@plt+0x1500>
   12c10:	ldr	r1, [sp, #64]	; 0x40
   12c14:	movw	r0, #57964	; 0xe26c
   12c18:	movt	r0, #4
   12c1c:	ldr	r2, [r0]
   12c20:	movw	r0, #0
   12c24:	movw	r3, #3
   12c28:	str	r1, [sp, #16]
   12c2c:	mov	r1, r3
   12c30:	bl	185f8 <__assert_fail@plt+0x6ea4>
   12c34:	movw	r1, #0
   12c38:	str	r0, [sp, #12]
   12c3c:	mov	r0, r1
   12c40:	ldr	r1, [sp, #16]
   12c44:	movw	r2, #50403	; 0xc4e3
   12c48:	movt	r2, #3
   12c4c:	ldr	r3, [sp, #12]
   12c50:	bl	11580 <error@plt>
   12c54:	b	12cb8 <__assert_fail@plt+0x1564>
   12c58:	movw	r0, #57812	; 0xe1d4
   12c5c:	movt	r0, #4
   12c60:	ldrb	r0, [r0]
   12c64:	tst	r0, #1
   12c68:	bne	12cb4 <__assert_fail@plt+0x1560>
   12c6c:	add	r2, sp, #43	; 0x2b
   12c70:	movw	r0, #57788	; 0xe1bc
   12c74:	movt	r0, #4
   12c78:	ldr	r0, [r0]
   12c7c:	movw	r1, #57968	; 0xe270
   12c80:	movt	r1, #4
   12c84:	ldr	r3, [r1]
   12c88:	ldr	r1, [r1, #4]
   12c8c:	str	r0, [sp, #8]
   12c90:	mov	r0, r3
   12c94:	bl	160b0 <__assert_fail@plt+0x495c>
   12c98:	ldr	r1, [sp, #8]
   12c9c:	str	r0, [sp, #4]
   12ca0:	mov	r0, r1
   12ca4:	movw	r1, #52363	; 0xcc8b
   12ca8:	movt	r1, #3
   12cac:	ldr	r2, [sp, #4]
   12cb0:	bl	1161c <fprintf@plt>
   12cb4:	b	12cb8 <__assert_fail@plt+0x1564>
   12cb8:	movw	r0, #57960	; 0xe268
   12cbc:	movt	r0, #4
   12cc0:	movw	r1, #0
   12cc4:	str	r1, [r0]
   12cc8:	mov	sp, fp
   12ccc:	pop	{fp, pc}
   12cd0:	push	{fp, lr}
   12cd4:	mov	fp, sp
   12cd8:	sub	sp, sp, #24
   12cdc:	and	r0, r0, #1
   12ce0:	strb	r0, [fp, #-1]
   12ce4:	movw	r0, #57813	; 0xe1d5
   12ce8:	movt	r0, #4
   12cec:	ldrb	r0, [r0]
   12cf0:	tst	r0, #1
   12cf4:	bne	12cfc <__assert_fail@plt+0x15a8>
   12cf8:	b	12db4 <__assert_fail@plt+0x1660>
   12cfc:	movw	r0, #57976	; 0xe278
   12d00:	movt	r0, #4
   12d04:	ldr	r0, [r0]
   12d08:	str	r0, [fp, #-8]
   12d0c:	ldr	r0, [fp, #-8]
   12d10:	mvn	r1, #0
   12d14:	add	r0, r0, r1
   12d18:	str	r0, [fp, #-8]
   12d1c:	movw	r1, #0
   12d20:	cmp	r1, r0
   12d24:	bgt	12da4 <__assert_fail@plt+0x1650>
   12d28:	ldr	r0, [fp, #-8]
   12d2c:	bl	12dbc <__assert_fail@plt+0x1668>
   12d30:	str	r0, [sp, #12]
   12d34:	ldr	r0, [sp, #12]
   12d38:	bl	114d8 <unlink@plt>
   12d3c:	cmp	r0, #0
   12d40:	beq	12da0 <__assert_fail@plt+0x164c>
   12d44:	bl	11628 <__errno_location@plt>
   12d48:	ldr	r0, [r0]
   12d4c:	cmp	r0, #2
   12d50:	beq	12da0 <__assert_fail@plt+0x164c>
   12d54:	ldrb	r0, [fp, #-1]
   12d58:	tst	r0, #1
   12d5c:	bne	12da0 <__assert_fail@plt+0x164c>
   12d60:	bl	11628 <__errno_location@plt>
   12d64:	ldr	r1, [r0]
   12d68:	ldr	r2, [sp, #12]
   12d6c:	movw	r0, #0
   12d70:	movw	r3, #3
   12d74:	str	r1, [sp, #8]
   12d78:	mov	r1, r3
   12d7c:	bl	185f8 <__assert_fail@plt+0x6ea4>
   12d80:	movw	r1, #0
   12d84:	str	r0, [sp, #4]
   12d88:	mov	r0, r1
   12d8c:	ldr	r1, [sp, #8]
   12d90:	movw	r2, #50403	; 0xc4e3
   12d94:	movt	r2, #3
   12d98:	ldr	r3, [sp, #4]
   12d9c:	bl	11580 <error@plt>
   12da0:	b	12d0c <__assert_fail@plt+0x15b8>
   12da4:	movw	r0, #57976	; 0xe278
   12da8:	movt	r0, #4
   12dac:	movw	r1, #0
   12db0:	str	r1, [r0]
   12db4:	mov	sp, fp
   12db8:	pop	{fp, pc}
   12dbc:	push	{fp, lr}
   12dc0:	mov	fp, sp
   12dc4:	sub	sp, sp, #16
   12dc8:	str	r0, [fp, #-4]
   12dcc:	movw	r0, #57828	; 0xe1e4
   12dd0:	movt	r0, #4
   12dd4:	ldr	r0, [r0]
   12dd8:	movw	r1, #57816	; 0xe1d8
   12ddc:	movt	r1, #4
   12de0:	ldr	r1, [r1]
   12de4:	bl	11550 <strcpy@plt>
   12de8:	movw	r1, #57820	; 0xe1dc
   12dec:	movt	r1, #4
   12df0:	ldr	r1, [r1]
   12df4:	movw	r2, #0
   12df8:	cmp	r1, r2
   12dfc:	beq	12e44 <__assert_fail@plt+0x16f0>
   12e00:	movw	r0, #57828	; 0xe1e4
   12e04:	movt	r0, #4
   12e08:	ldr	r0, [r0]
   12e0c:	movw	r1, #57816	; 0xe1d8
   12e10:	movt	r1, #4
   12e14:	ldr	r1, [r1]
   12e18:	str	r0, [sp, #8]
   12e1c:	mov	r0, r1
   12e20:	bl	11604 <strlen@plt>
   12e24:	ldr	r1, [sp, #8]
   12e28:	add	r0, r1, r0
   12e2c:	movw	r1, #57820	; 0xe1dc
   12e30:	movt	r1, #4
   12e34:	ldr	r1, [r1]
   12e38:	ldr	r2, [fp, #-4]
   12e3c:	bl	116f4 <sprintf@plt>
   12e40:	b	12e8c <__assert_fail@plt+0x1738>
   12e44:	movw	r0, #57828	; 0xe1e4
   12e48:	movt	r0, #4
   12e4c:	ldr	r0, [r0]
   12e50:	movw	r1, #57816	; 0xe1d8
   12e54:	movt	r1, #4
   12e58:	ldr	r1, [r1]
   12e5c:	str	r0, [sp, #4]
   12e60:	mov	r0, r1
   12e64:	bl	11604 <strlen@plt>
   12e68:	ldr	r1, [sp, #4]
   12e6c:	add	r0, r1, r0
   12e70:	movw	r1, #57688	; 0xe158
   12e74:	movt	r1, #4
   12e78:	ldr	r2, [r1]
   12e7c:	ldr	r3, [fp, #-4]
   12e80:	movw	r1, #49883	; 0xc2db
   12e84:	movt	r1, #3
   12e88:	bl	116f4 <sprintf@plt>
   12e8c:	movw	r0, #57828	; 0xe1e4
   12e90:	movt	r0, #4
   12e94:	ldr	r0, [r0]
   12e98:	mov	sp, fp
   12e9c:	pop	{fp, pc}
   12ea0:	sub	sp, sp, #20
   12ea4:	str	r0, [sp, #16]
   12ea8:	str	r1, [sp, #12]
   12eac:	movw	r0, #0
   12eb0:	str	r0, [sp, #8]
   12eb4:	str	r0, [sp, #4]
   12eb8:	ldr	r0, [sp, #16]
   12ebc:	ldr	r1, [sp, #4]
   12ec0:	ldrb	r0, [r0, r1]
   12ec4:	sub	r0, r0, #35	; 0x23
   12ec8:	cmp	r0, #13
   12ecc:	str	r0, [sp]
   12ed0:	bhi	12f40 <__assert_fail@plt+0x17ec>
   12ed4:	add	r0, pc, #8
   12ed8:	ldr	r1, [sp]
   12edc:	ldr	r0, [r0, r1, lsl #2]
   12ee0:	mov	pc, r0
   12ee4:	andeq	r2, r1, r0, lsr pc
   12ee8:	andeq	r2, r1, r0, asr #30
   12eec:	andeq	r2, r1, r0, asr #30
   12ef0:	andeq	r2, r1, r0, asr #30
   12ef4:	andeq	r2, r1, r0, lsr #30
   12ef8:	andeq	r2, r1, r0, asr #30
   12efc:	andeq	r2, r1, r0, asr #30
   12f00:	andeq	r2, r1, r0, asr #30
   12f04:	andeq	r2, r1, r0, asr #30
   12f08:	andeq	r2, r1, r0, asr #30
   12f0c:	andeq	r2, r1, ip, lsl pc
   12f10:	andeq	r2, r1, r0, asr #30
   12f14:	andeq	r2, r1, r0, asr #30
   12f18:	andeq	r2, r1, ip, lsl pc
   12f1c:	b	12f58 <__assert_fail@plt+0x1804>
   12f20:	ldr	r0, [sp, #8]
   12f24:	orr	r0, r0, #1
   12f28:	str	r0, [sp, #8]
   12f2c:	b	12f58 <__assert_fail@plt+0x1804>
   12f30:	ldr	r0, [sp, #8]
   12f34:	orr	r0, r0, #2
   12f38:	str	r0, [sp, #8]
   12f3c:	b	12f58 <__assert_fail@plt+0x1804>
   12f40:	ldr	r0, [sp, #8]
   12f44:	ldr	r1, [sp, #12]
   12f48:	str	r0, [r1]
   12f4c:	ldr	r0, [sp, #4]
   12f50:	add	sp, sp, #20
   12f54:	bx	lr
   12f58:	b	12f5c <__assert_fail@plt+0x1808>
   12f5c:	ldr	r0, [sp, #4]
   12f60:	add	r0, r0, #1
   12f64:	str	r0, [sp, #4]
   12f68:	b	12eb8 <__assert_fail@plt+0x1764>
   12f6c:	push	{fp, lr}
   12f70:	mov	fp, sp
   12f74:	sub	sp, sp, #48	; 0x30
   12f78:	str	r0, [fp, #-4]
   12f7c:	str	r1, [fp, #-8]
   12f80:	ldr	r0, [fp, #-4]
   12f84:	ldrb	r0, [r0]
   12f88:	strb	r0, [fp, #-9]
   12f8c:	mov	r0, #1
   12f90:	str	r0, [fp, #-16]
   12f94:	ldrb	r0, [fp, #-9]
   12f98:	mov	r1, r0
   12f9c:	cmp	r0, #0
   12fa0:	str	r1, [fp, #-20]	; 0xffffffec
   12fa4:	beq	1302c <__assert_fail@plt+0x18d8>
   12fa8:	b	12fac <__assert_fail@plt+0x1858>
   12fac:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fb0:	cmp	r0, #88	; 0x58
   12fb4:	beq	13020 <__assert_fail@plt+0x18cc>
   12fb8:	b	12fbc <__assert_fail@plt+0x1868>
   12fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fc0:	cmp	r0, #100	; 0x64
   12fc4:	beq	1300c <__assert_fail@plt+0x18b8>
   12fc8:	b	12fcc <__assert_fail@plt+0x1878>
   12fcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fd0:	cmp	r0, #105	; 0x69
   12fd4:	beq	1300c <__assert_fail@plt+0x18b8>
   12fd8:	b	12fdc <__assert_fail@plt+0x1888>
   12fdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fe0:	cmp	r0, #111	; 0x6f
   12fe4:	beq	13020 <__assert_fail@plt+0x18cc>
   12fe8:	b	12fec <__assert_fail@plt+0x1898>
   12fec:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ff0:	cmp	r0, #117	; 0x75
   12ff4:	beq	13010 <__assert_fail@plt+0x18bc>
   12ff8:	b	12ffc <__assert_fail@plt+0x18a8>
   12ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13000:	cmp	r0, #120	; 0x78
   13004:	beq	13020 <__assert_fail@plt+0x18cc>
   13008:	b	13050 <__assert_fail@plt+0x18fc>
   1300c:	b	130c4 <__assert_fail@plt+0x1970>
   13010:	ldr	r0, [fp, #-4]
   13014:	movw	r1, #100	; 0x64
   13018:	strb	r1, [r0]
   1301c:	b	130c4 <__assert_fail@plt+0x1970>
   13020:	movw	r0, #2
   13024:	str	r0, [fp, #-16]
   13028:	b	130c4 <__assert_fail@plt+0x1970>
   1302c:	movw	r0, #50082	; 0xc3a2
   13030:	movt	r0, #3
   13034:	bl	115f8 <gettext@plt>
   13038:	movw	r1, #1
   1303c:	str	r0, [sp, #24]
   13040:	mov	r0, r1
   13044:	movw	r1, #0
   13048:	ldr	r2, [sp, #24]
   1304c:	bl	11580 <error@plt>
   13050:	bl	115e0 <__ctype_b_loc@plt>
   13054:	ldr	r0, [r0]
   13058:	ldrb	r1, [fp, #-9]
   1305c:	mov	r2, r1
   13060:	add	r0, r0, r1, lsl #1
   13064:	ldrh	r0, [r0]
   13068:	and	r0, r0, #16384	; 0x4000
   1306c:	cmp	r0, #0
   13070:	beq	1309c <__assert_fail@plt+0x1948>
   13074:	movw	r0, #50121	; 0xc3c9
   13078:	movt	r0, #3
   1307c:	bl	115f8 <gettext@plt>
   13080:	ldrb	r3, [fp, #-9]
   13084:	movw	r1, #1
   13088:	str	r0, [sp, #20]
   1308c:	mov	r0, r1
   13090:	movw	r1, #0
   13094:	ldr	r2, [sp, #20]
   13098:	bl	11580 <error@plt>
   1309c:	movw	r0, #50164	; 0xc3f4
   130a0:	movt	r0, #3
   130a4:	bl	115f8 <gettext@plt>
   130a8:	ldrb	r3, [fp, #-9]
   130ac:	movw	r1, #1
   130b0:	str	r0, [sp, #16]
   130b4:	mov	r0, r1
   130b8:	movw	r1, #0
   130bc:	ldr	r2, [sp, #16]
   130c0:	bl	11580 <error@plt>
   130c4:	ldr	r0, [fp, #-8]
   130c8:	ldr	r1, [fp, #-16]
   130cc:	mvn	r2, #0
   130d0:	eor	r1, r1, r2
   130d4:	and	r0, r0, r1
   130d8:	cmp	r0, #0
   130dc:	beq	13154 <__assert_fail@plt+0x1a00>
   130e0:	movw	r0, #50210	; 0xc422
   130e4:	movt	r0, #3
   130e8:	bl	115f8 <gettext@plt>
   130ec:	ldr	r1, [fp, #-8]
   130f0:	ldr	r2, [fp, #-16]
   130f4:	mvn	r3, #0
   130f8:	eor	r2, r2, r3
   130fc:	and	r1, r1, r2
   13100:	and	r1, r1, #2
   13104:	cmp	r1, #0
   13108:	movw	r1, #0
   1310c:	movne	r1, #1
   13110:	tst	r1, #1
   13114:	movw	r1, #35	; 0x23
   13118:	moveq	r1, #39	; 0x27
   1311c:	ldrb	r2, [fp, #-9]
   13120:	movw	r3, #1
   13124:	str	r0, [sp, #12]
   13128:	mov	r0, r3
   1312c:	movw	r3, #0
   13130:	str	r1, [sp, #8]
   13134:	mov	r1, r3
   13138:	ldr	r3, [sp, #12]
   1313c:	str	r2, [sp, #4]
   13140:	mov	r2, r3
   13144:	ldr	r3, [sp, #8]
   13148:	ldr	ip, [sp, #4]
   1314c:	str	ip, [sp]
   13150:	bl	11580 <error@plt>
   13154:	mov	sp, fp
   13158:	pop	{fp, pc}
   1315c:	push	{fp, lr}
   13160:	mov	fp, sp
   13164:	sub	sp, sp, #56	; 0x38
   13168:	str	r0, [fp, #-4]
   1316c:	and	r0, r1, #1
   13170:	strb	r0, [fp, #-5]
   13174:	str	r2, [fp, #-12]
   13178:	ldr	r0, [fp, #-12]
   1317c:	ldrb	r0, [r0]
   13180:	strb	r0, [fp, #-17]	; 0xffffffef
   13184:	ldr	r0, [fp, #-12]
   13188:	add	r0, r0, #1
   1318c:	ldrb	r1, [fp, #-17]	; 0xffffffef
   13190:	bl	116dc <strrchr@plt>
   13194:	str	r0, [fp, #-24]	; 0xffffffe8
   13198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1319c:	movw	r1, #0
   131a0:	cmp	r0, r1
   131a4:	bne	131e4 <__assert_fail@plt+0x1a90>
   131a8:	movw	r0, #50467	; 0xc523
   131ac:	movt	r0, #3
   131b0:	bl	115f8 <gettext@plt>
   131b4:	ldr	r3, [fp, #-12]
   131b8:	ldrb	r1, [fp, #-17]	; 0xffffffef
   131bc:	movw	r2, #1
   131c0:	str	r0, [sp, #20]
   131c4:	mov	r0, r2
   131c8:	movw	r2, #0
   131cc:	str	r1, [sp, #16]
   131d0:	mov	r1, r2
   131d4:	ldr	r2, [sp, #20]
   131d8:	ldr	ip, [sp, #16]
   131dc:	str	ip, [sp]
   131e0:	bl	11580 <error@plt>
   131e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131e8:	ldr	r1, [fp, #-12]
   131ec:	sub	r0, r0, r1
   131f0:	sub	r0, r0, #1
   131f4:	str	r0, [fp, #-16]
   131f8:	bl	13310 <__assert_fail@plt+0x1bbc>
   131fc:	str	r0, [sp, #28]
   13200:	ldr	r0, [fp, #-4]
   13204:	ldr	r1, [sp, #28]
   13208:	str	r0, [r1, #24]
   1320c:	ldrb	r0, [fp, #-5]
   13210:	ldr	r1, [sp, #28]
   13214:	and	r0, r0, #1
   13218:	strb	r0, [r1, #29]
   1321c:	ldr	r0, [sp, #28]
   13220:	movw	r1, #1
   13224:	strb	r1, [r0, #30]
   13228:	ldr	r0, [sp, #28]
   1322c:	movw	r1, #0
   13230:	str	r1, [r0, #32]
   13234:	ldr	r0, [sp, #28]
   13238:	str	r1, [r0, #36]	; 0x24
   1323c:	movw	r0, #256	; 0x100
   13240:	bl	31178 <__assert_fail@plt+0x1fa24>
   13244:	ldr	r1, [sp, #28]
   13248:	str	r0, [r1, #48]	; 0x30
   1324c:	ldr	r0, [sp, #28]
   13250:	movw	r1, #0
   13254:	str	r1, [r0, #52]	; 0x34
   13258:	movw	r0, #58356	; 0xe3f4
   1325c:	movt	r0, #4
   13260:	movw	r1, #710	; 0x2c6
   13264:	str	r1, [r0]
   13268:	ldr	r0, [fp, #-12]
   1326c:	add	r0, r0, #1
   13270:	ldr	r1, [fp, #-16]
   13274:	ldr	r2, [sp, #28]
   13278:	add	r2, r2, #32
   1327c:	bl	18974 <__assert_fail@plt+0x7220>
   13280:	str	r0, [sp, #24]
   13284:	ldr	r0, [sp, #24]
   13288:	movw	r1, #0
   1328c:	cmp	r0, r1
   13290:	beq	132e0 <__assert_fail@plt+0x1b8c>
   13294:	movw	r0, #50502	; 0xc546
   13298:	movt	r0, #3
   1329c:	bl	115f8 <gettext@plt>
   132a0:	ldr	r1, [fp, #-12]
   132a4:	str	r0, [sp, #12]
   132a8:	mov	r0, r1
   132ac:	bl	1883c <__assert_fail@plt+0x70e8>
   132b0:	ldr	r1, [sp, #24]
   132b4:	movw	r2, #0
   132b8:	str	r0, [sp, #8]
   132bc:	mov	r0, r2
   132c0:	str	r1, [sp, #4]
   132c4:	mov	r1, r2
   132c8:	ldr	r2, [sp, #12]
   132cc:	ldr	r3, [sp, #8]
   132d0:	ldr	ip, [sp, #4]
   132d4:	str	ip, [sp]
   132d8:	bl	11580 <error@plt>
   132dc:	bl	11888 <__assert_fail@plt+0x134>
   132e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132e4:	ldrsb	r0, [r0, #1]
   132e8:	cmp	r0, #0
   132ec:	beq	13304 <__assert_fail@plt+0x1bb0>
   132f0:	ldr	r0, [sp, #28]
   132f4:	ldr	r1, [fp, #-12]
   132f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   132fc:	add	r2, r2, #1
   13300:	bl	1355c <__assert_fail@plt+0x1e08>
   13304:	ldr	r0, [sp, #28]
   13308:	mov	sp, fp
   1330c:	pop	{fp, pc}
   13310:	push	{fp, lr}
   13314:	mov	fp, sp
   13318:	sub	sp, sp, #8
   1331c:	movw	r0, #57808	; 0xe1d0
   13320:	movt	r0, #4
   13324:	ldr	r0, [r0]
   13328:	movw	r1, #57992	; 0xe288
   1332c:	movt	r1, #4
   13330:	ldr	r1, [r1]
   13334:	cmp	r0, r1
   13338:	bne	13370 <__assert_fail@plt+0x1c1c>
   1333c:	movw	r0, #57804	; 0xe1cc
   13340:	movt	r0, #4
   13344:	ldr	r0, [r0]
   13348:	movw	r1, #57992	; 0xe288
   1334c:	movt	r1, #4
   13350:	movw	r2, #1
   13354:	mvn	r3, #0
   13358:	movw	ip, #64	; 0x40
   1335c:	str	ip, [sp]
   13360:	bl	3142c <__assert_fail@plt+0x1fcd8>
   13364:	movw	r1, #57804	; 0xe1cc
   13368:	movt	r1, #4
   1336c:	str	r0, [r1]
   13370:	movw	r0, #57804	; 0xe1cc
   13374:	movt	r0, #4
   13378:	ldr	r0, [r0]
   1337c:	movw	r1, #57808	; 0xe1d0
   13380:	movt	r1, #4
   13384:	ldr	r2, [r1]
   13388:	add	r3, r2, #1
   1338c:	str	r3, [r1]
   13390:	add	r0, r0, r2, lsl #6
   13394:	str	r0, [sp, #4]
   13398:	ldr	r0, [sp, #4]
   1339c:	mov	r1, #0
   133a0:	strb	r1, [r0, #30]
   133a4:	ldr	r0, [sp, #4]
   133a8:	str	r1, [r0, #20]
   133ac:	str	r1, [r0, #16]
   133b0:	ldr	r0, [sp, #4]
   133b4:	strb	r1, [r0, #28]
   133b8:	ldr	r0, [sp, #4]
   133bc:	str	r1, [r0, #12]
   133c0:	str	r1, [r0, #8]
   133c4:	ldr	r0, [sp, #4]
   133c8:	str	r1, [r0, #4]
   133cc:	str	r1, [r0]
   133d0:	ldr	r0, [sp, #4]
   133d4:	mov	sp, fp
   133d8:	pop	{fp, pc}
   133dc:	push	{fp, lr}
   133e0:	mov	fp, sp
   133e4:	sub	sp, sp, #48	; 0x30
   133e8:	str	r0, [fp, #-4]
   133ec:	str	r1, [fp, #-8]
   133f0:	str	r2, [fp, #-12]
   133f4:	ldr	r0, [fp, #-12]
   133f8:	ldr	r1, [fp, #-12]
   133fc:	str	r0, [sp, #20]
   13400:	mov	r0, r1
   13404:	bl	11604 <strlen@plt>
   13408:	ldr	r1, [sp, #20]
   1340c:	add	r0, r1, r0
   13410:	mvn	r1, #0
   13414:	add	r0, r0, r1
   13418:	str	r0, [fp, #-16]
   1341c:	ldr	r0, [fp, #-16]
   13420:	ldrb	r0, [r0]
   13424:	cmp	r0, #125	; 0x7d
   13428:	beq	13464 <__assert_fail@plt+0x1d10>
   1342c:	movw	r0, #50574	; 0xc58e
   13430:	movt	r0, #3
   13434:	bl	115f8 <gettext@plt>
   13438:	ldr	r1, [fp, #-12]
   1343c:	str	r0, [sp, #16]
   13440:	mov	r0, r1
   13444:	bl	1883c <__assert_fail@plt+0x70e8>
   13448:	movw	r1, #1
   1344c:	str	r0, [sp, #12]
   13450:	mov	r0, r1
   13454:	movw	r1, #0
   13458:	ldr	r2, [sp, #16]
   1345c:	ldr	r3, [sp, #12]
   13460:	bl	11580 <error@plt>
   13464:	ldr	r0, [fp, #-16]
   13468:	movw	r1, #0
   1346c:	strb	r1, [r0]
   13470:	ldr	r0, [fp, #-12]
   13474:	add	r0, r0, #1
   13478:	ldr	r1, [fp, #-16]
   1347c:	mvn	r2, #0
   13480:	add	r1, r1, r2
   13484:	cmp	r0, r1
   13488:	bne	134ac <__assert_fail@plt+0x1d58>
   1348c:	ldr	r0, [fp, #-12]
   13490:	ldrb	r0, [r0, #1]
   13494:	cmp	r0, #42	; 0x2a
   13498:	bne	134ac <__assert_fail@plt+0x1d58>
   1349c:	ldr	r0, [fp, #-8]
   134a0:	movw	r1, #1
   134a4:	strb	r1, [r0, #28]
   134a8:	b	13548 <__assert_fail@plt+0x1df4>
   134ac:	ldr	r0, [fp, #-12]
   134b0:	add	r0, r0, #1
   134b4:	movw	r1, #0
   134b8:	movw	r2, #10
   134bc:	add	r3, sp, #24
   134c0:	movw	ip, #49863	; 0xc2c7
   134c4:	movt	ip, #3
   134c8:	str	ip, [sp]
   134cc:	bl	36168 <__assert_fail@plt+0x24a14>
   134d0:	cmp	r0, #0
   134d4:	bne	134e8 <__assert_fail@plt+0x1d94>
   134d8:	ldr	r0, [sp, #28]
   134dc:	cmn	r0, #1
   134e0:	bgt	13534 <__assert_fail@plt+0x1de0>
   134e4:	b	134e8 <__assert_fail@plt+0x1d94>
   134e8:	movw	r0, #50610	; 0xc5b2
   134ec:	movt	r0, #3
   134f0:	bl	115f8 <gettext@plt>
   134f4:	movw	r1, #57800	; 0xe1c8
   134f8:	movt	r1, #4
   134fc:	ldr	r1, [r1]
   13500:	ldr	r2, [fp, #-4]
   13504:	add	r1, r1, r2, lsl #2
   13508:	ldr	r1, [r1]
   1350c:	str	r0, [sp, #8]
   13510:	mov	r0, r1
   13514:	bl	1883c <__assert_fail@plt+0x70e8>
   13518:	movw	r1, #1
   1351c:	str	r0, [sp, #4]
   13520:	mov	r0, r1
   13524:	movw	r1, #0
   13528:	ldr	r2, [sp, #8]
   1352c:	ldr	r3, [sp, #4]
   13530:	bl	11580 <error@plt>
   13534:	ldr	r0, [sp, #24]
   13538:	ldr	r1, [sp, #28]
   1353c:	ldr	r2, [fp, #-8]
   13540:	str	r1, [r2, #20]
   13544:	str	r0, [r2, #16]
   13548:	ldr	r0, [fp, #-16]
   1354c:	movw	r1, #125	; 0x7d
   13550:	strb	r1, [r0]
   13554:	mov	sp, fp
   13558:	pop	{fp, pc}
   1355c:	push	{fp, lr}
   13560:	mov	fp, sp
   13564:	sub	sp, sp, #24
   13568:	str	r0, [fp, #-4]
   1356c:	str	r1, [fp, #-8]
   13570:	str	r2, [sp, #12]
   13574:	ldr	r0, [sp, #12]
   13578:	ldr	r3, [fp, #-4]
   1357c:	movw	r1, #0
   13580:	movw	r2, #10
   13584:	movw	ip, #49863	; 0xc2c7
   13588:	movt	ip, #3
   1358c:	str	ip, [sp]
   13590:	bl	3415c <__assert_fail@plt+0x22a08>
   13594:	cmp	r0, #0
   13598:	beq	135d4 <__assert_fail@plt+0x1e80>
   1359c:	movw	r0, #50537	; 0xc569
   135a0:	movt	r0, #3
   135a4:	bl	115f8 <gettext@plt>
   135a8:	ldr	r1, [fp, #-8]
   135ac:	str	r0, [sp, #8]
   135b0:	mov	r0, r1
   135b4:	bl	1883c <__assert_fail@plt+0x70e8>
   135b8:	movw	r1, #1
   135bc:	str	r0, [sp, #4]
   135c0:	mov	r0, r1
   135c4:	movw	r1, #0
   135c8:	ldr	r2, [sp, #8]
   135cc:	ldr	r3, [sp, #4]
   135d0:	bl	11580 <error@plt>
   135d4:	mov	sp, fp
   135d8:	pop	{fp, pc}
   135dc:	push	{fp, lr}
   135e0:	mov	fp, sp
   135e4:	sub	sp, sp, #64	; 0x40
   135e8:	str	r0, [fp, #-4]
   135ec:	str	r3, [fp, #-12]
   135f0:	str	r2, [fp, #-16]
   135f4:	ldr	r0, [fp, #-4]
   135f8:	ldrb	r0, [r0, #29]
   135fc:	and	r0, r0, #1
   13600:	strb	r0, [sp, #31]
   13604:	ldrb	r0, [sp, #31]
   13608:	tst	r0, #1
   1360c:	bne	13614 <__assert_fail@plt+0x1ec0>
   13610:	bl	13ad4 <__assert_fail@plt+0x2380>
   13614:	ldr	r0, [fp, #-4]
   13618:	ldr	r0, [r0, #4]
   1361c:	cmp	r0, #0
   13620:	bmi	13798 <__assert_fail@plt+0x2044>
   13624:	b	13628 <__assert_fail@plt+0x1ed4>
   13628:	b	1362c <__assert_fail@plt+0x1ed8>
   1362c:	movw	r0, #58000	; 0xe290
   13630:	movt	r0, #4
   13634:	ldr	r1, [r0]
   13638:	ldr	r2, [r0, #4]
   1363c:	adds	r1, r1, #1
   13640:	adc	r2, r2, #0
   13644:	str	r1, [r0]
   13648:	str	r2, [r0, #4]
   1364c:	mov	r0, r1
   13650:	mov	r1, r2
   13654:	bl	13c64 <__assert_fail@plt+0x2510>
   13658:	str	r0, [fp, #-20]	; 0xffffffec
   1365c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13660:	movw	r1, #0
   13664:	cmp	r0, r1
   13668:	bne	136bc <__assert_fail@plt+0x1f68>
   1366c:	ldr	r0, [fp, #-4]
   13670:	ldrb	r0, [r0, #28]
   13674:	tst	r0, #1
   13678:	beq	13698 <__assert_fail@plt+0x1f44>
   1367c:	ldrb	r0, [sp, #31]
   13680:	tst	r0, #1
   13684:	bne	13690 <__assert_fail@plt+0x1f3c>
   13688:	bl	13c30 <__assert_fail@plt+0x24dc>
   1368c:	bl	12a4c <__assert_fail@plt+0x12f8>
   13690:	movw	r0, #0
   13694:	bl	115ec <exit@plt>
   13698:	ldr	r0, [fp, #-4]
   1369c:	ldr	r2, [fp, #-16]
   136a0:	ldr	r3, [fp, #-12]
   136a4:	ldrb	r1, [sp, #31]
   136a8:	and	r1, r1, #1
   136ac:	mov	ip, sp
   136b0:	str	r1, [ip]
   136b4:	bl	13dfc <__assert_fail@plt+0x26a8>
   136b8:	b	136bc <__assert_fail@plt+0x1f68>
   136bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   136c0:	ldr	r0, [r0]
   136c4:	str	r0, [fp, #-24]	; 0xffffffe8
   136c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   136cc:	ldr	r0, [r0, #4]
   136d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   136d4:	sub	r1, r1, #1
   136d8:	add	r0, r0, r1
   136dc:	ldrb	r0, [r0]
   136e0:	cmp	r0, #10
   136e4:	bne	136f8 <__assert_fail@plt+0x1fa4>
   136e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136ec:	mvn	r1, #0
   136f0:	add	r0, r0, r1
   136f4:	str	r0, [fp, #-24]	; 0xffffffe8
   136f8:	ldr	r0, [fp, #-4]
   136fc:	add	r0, r0, #32
   13700:	ldr	r1, [fp, #-20]	; 0xffffffec
   13704:	ldr	r1, [r1, #4]
   13708:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1370c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13710:	movw	ip, #0
   13714:	str	r3, [sp, #20]
   13718:	mov	r3, ip
   1371c:	ldr	lr, [sp, #20]
   13720:	str	lr, [sp]
   13724:	str	ip, [sp, #4]
   13728:	bl	1b2a4 <__assert_fail@plt+0x9b50>
   1372c:	str	r0, [sp, #24]
   13730:	ldr	r0, [sp, #24]
   13734:	cmn	r0, #2
   13738:	bne	13760 <__assert_fail@plt+0x200c>
   1373c:	movw	r0, #50652	; 0xc5dc
   13740:	movt	r0, #3
   13744:	bl	115f8 <gettext@plt>
   13748:	movw	r1, #0
   1374c:	str	r0, [sp, #16]
   13750:	mov	r0, r1
   13754:	ldr	r2, [sp, #16]
   13758:	bl	11580 <error@plt>
   1375c:	bl	11888 <__assert_fail@plt+0x134>
   13760:	ldr	r0, [sp, #24]
   13764:	cmn	r0, #1
   13768:	bne	1378c <__assert_fail@plt+0x2038>
   1376c:	bl	13f38 <__assert_fail@plt+0x27e4>
   13770:	str	r0, [fp, #-20]	; 0xffffffec
   13774:	ldrb	r0, [sp, #31]
   13778:	tst	r0, #1
   1377c:	bne	13788 <__assert_fail@plt+0x2034>
   13780:	ldr	r0, [fp, #-20]	; 0xffffffec
   13784:	bl	140ec <__assert_fail@plt+0x2998>
   13788:	b	13790 <__assert_fail@plt+0x203c>
   1378c:	b	13794 <__assert_fail@plt+0x2040>
   13790:	b	1362c <__assert_fail@plt+0x1ed8>
   13794:	b	138e8 <__assert_fail@plt+0x2194>
   13798:	b	1379c <__assert_fail@plt+0x2048>
   1379c:	movw	r0, #58000	; 0xe290
   137a0:	movt	r0, #4
   137a4:	ldr	r1, [r0]
   137a8:	ldr	r2, [r0, #4]
   137ac:	adds	r1, r1, #1
   137b0:	adc	r2, r2, #0
   137b4:	str	r1, [r0]
   137b8:	str	r2, [r0, #4]
   137bc:	mov	r0, r1
   137c0:	mov	r1, r2
   137c4:	bl	13c64 <__assert_fail@plt+0x2510>
   137c8:	str	r0, [fp, #-20]	; 0xffffffec
   137cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   137d0:	movw	r1, #0
   137d4:	cmp	r0, r1
   137d8:	bne	1382c <__assert_fail@plt+0x20d8>
   137dc:	ldr	r0, [fp, #-4]
   137e0:	ldrb	r0, [r0, #28]
   137e4:	tst	r0, #1
   137e8:	beq	13808 <__assert_fail@plt+0x20b4>
   137ec:	ldrb	r0, [sp, #31]
   137f0:	tst	r0, #1
   137f4:	bne	13800 <__assert_fail@plt+0x20ac>
   137f8:	bl	13c30 <__assert_fail@plt+0x24dc>
   137fc:	bl	12a4c <__assert_fail@plt+0x12f8>
   13800:	movw	r0, #0
   13804:	bl	115ec <exit@plt>
   13808:	ldr	r0, [fp, #-4]
   1380c:	ldr	r2, [fp, #-16]
   13810:	ldr	r3, [fp, #-12]
   13814:	ldrb	r1, [sp, #31]
   13818:	and	r1, r1, #1
   1381c:	mov	ip, sp
   13820:	str	r1, [ip]
   13824:	bl	13dfc <__assert_fail@plt+0x26a8>
   13828:	b	1382c <__assert_fail@plt+0x20d8>
   1382c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13830:	ldr	r0, [r0]
   13834:	str	r0, [fp, #-24]	; 0xffffffe8
   13838:	ldr	r0, [fp, #-20]	; 0xffffffec
   1383c:	ldr	r0, [r0, #4]
   13840:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13844:	sub	r1, r1, #1
   13848:	add	r0, r0, r1
   1384c:	ldrb	r0, [r0]
   13850:	cmp	r0, #10
   13854:	bne	13868 <__assert_fail@plt+0x2114>
   13858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1385c:	mvn	r1, #0
   13860:	add	r0, r0, r1
   13864:	str	r0, [fp, #-24]	; 0xffffffe8
   13868:	ldr	r0, [fp, #-4]
   1386c:	add	r0, r0, #32
   13870:	ldr	r1, [fp, #-20]	; 0xffffffec
   13874:	ldr	r1, [r1, #4]
   13878:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1387c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13880:	movw	ip, #0
   13884:	str	r3, [sp, #12]
   13888:	mov	r3, ip
   1388c:	ldr	lr, [sp, #12]
   13890:	str	lr, [sp]
   13894:	str	ip, [sp, #4]
   13898:	bl	1b2a4 <__assert_fail@plt+0x9b50>
   1389c:	str	r0, [sp, #24]
   138a0:	ldr	r0, [sp, #24]
   138a4:	cmn	r0, #2
   138a8:	bne	138d0 <__assert_fail@plt+0x217c>
   138ac:	movw	r0, #50652	; 0xc5dc
   138b0:	movt	r0, #3
   138b4:	bl	115f8 <gettext@plt>
   138b8:	movw	r1, #0
   138bc:	str	r0, [sp, #8]
   138c0:	mov	r0, r1
   138c4:	ldr	r2, [sp, #8]
   138c8:	bl	11580 <error@plt>
   138cc:	bl	11888 <__assert_fail@plt+0x134>
   138d0:	ldr	r0, [sp, #24]
   138d4:	cmn	r0, #1
   138d8:	beq	138e0 <__assert_fail@plt+0x218c>
   138dc:	b	138e4 <__assert_fail@plt+0x2190>
   138e0:	b	1379c <__assert_fail@plt+0x2048>
   138e4:	b	138e8 <__assert_fail@plt+0x2194>
   138e8:	movw	r0, #58000	; 0xe290
   138ec:	movt	r0, #4
   138f0:	ldr	r1, [r0]
   138f4:	ldr	r0, [r0, #4]
   138f8:	ldr	r2, [fp, #-4]
   138fc:	ldr	r3, [r2]
   13900:	ldr	r2, [r2, #4]
   13904:	adds	r1, r1, r3
   13908:	adc	r0, r0, r2
   1390c:	str	r1, [sp, #32]
   13910:	str	r0, [sp, #36]	; 0x24
   13914:	ldr	r0, [sp, #32]
   13918:	ldr	r1, [sp, #36]	; 0x24
   1391c:	ldrb	r2, [sp, #31]
   13920:	ldr	r3, [fp, #-4]
   13924:	ldr	r3, [r3, #24]
   13928:	and	r2, r2, #1
   1392c:	bl	141cc <__assert_fail@plt+0x2a78>
   13930:	ldrb	r0, [sp, #31]
   13934:	tst	r0, #1
   13938:	bne	13940 <__assert_fail@plt+0x21ec>
   1393c:	bl	12a4c <__assert_fail@plt+0x12f8>
   13940:	ldr	r0, [fp, #-4]
   13944:	ldr	r1, [r0]
   13948:	ldr	r0, [r0, #4]
   1394c:	subs	r1, r1, #1
   13950:	sbcs	r0, r0, #0
   13954:	blt	13974 <__assert_fail@plt+0x2220>
   13958:	b	1395c <__assert_fail@plt+0x2208>
   1395c:	ldr	r0, [sp, #32]
   13960:	ldr	r1, [sp, #36]	; 0x24
   13964:	movw	r2, #58000	; 0xe290
   13968:	movt	r2, #4
   1396c:	str	r1, [r2, #4]
   13970:	str	r0, [r2]
   13974:	movw	r0, #57814	; 0xe1d6
   13978:	movt	r0, #4
   1397c:	ldrb	r0, [r0]
   13980:	tst	r0, #1
   13984:	beq	1398c <__assert_fail@plt+0x2238>
   13988:	bl	13f38 <__assert_fail@plt+0x27e4>
   1398c:	mov	sp, fp
   13990:	pop	{fp, pc}
   13994:	push	{fp, lr}
   13998:	mov	fp, sp
   1399c:	sub	sp, sp, #40	; 0x28
   139a0:	str	r0, [fp, #-4]
   139a4:	str	r3, [fp, #-12]
   139a8:	str	r2, [fp, #-16]
   139ac:	ldr	r0, [fp, #-4]
   139b0:	ldr	r1, [r0, #8]
   139b4:	ldr	r0, [r0, #12]
   139b8:	ldr	r2, [fp, #-16]
   139bc:	ldr	r3, [fp, #-12]
   139c0:	adds	r2, r2, #1
   139c4:	adc	r3, r3, #0
   139c8:	umull	ip, lr, r1, r2
   139cc:	mla	r1, r1, r3, lr
   139d0:	mla	r0, r0, r2, r1
   139d4:	str	ip, [sp, #8]
   139d8:	str	r0, [sp, #12]
   139dc:	bl	13ad4 <__assert_fail@plt+0x2380>
   139e0:	bl	15928 <__assert_fail@plt+0x41d4>
   139e4:	tst	r0, #1
   139e8:	beq	13a10 <__assert_fail@plt+0x22bc>
   139ec:	movw	r0, #57814	; 0xe1d6
   139f0:	movt	r0, #4
   139f4:	ldrb	r0, [r0]
   139f8:	tst	r0, #1
   139fc:	beq	13a10 <__assert_fail@plt+0x22bc>
   13a00:	ldr	r0, [fp, #-4]
   13a04:	ldr	r2, [fp, #-16]
   13a08:	ldr	r3, [fp, #-12]
   13a0c:	bl	15978 <__assert_fail@plt+0x4224>
   13a10:	bl	158a0 <__assert_fail@plt+0x414c>
   13a14:	str	r1, [sp, #20]
   13a18:	str	r0, [sp, #16]
   13a1c:	ldr	r0, [sp, #16]
   13a20:	ldr	r1, [sp, #20]
   13a24:	adds	r2, r0, #1
   13a28:	adc	r3, r1, #0
   13a2c:	str	r2, [sp, #16]
   13a30:	str	r3, [sp, #20]
   13a34:	ldr	r2, [sp, #8]
   13a38:	ldr	r3, [sp, #12]
   13a3c:	subs	r0, r0, r2
   13a40:	sbcs	r1, r1, r3
   13a44:	bge	13a80 <__assert_fail@plt+0x232c>
   13a48:	b	13a4c <__assert_fail@plt+0x22f8>
   13a4c:	bl	13f38 <__assert_fail@plt+0x27e4>
   13a50:	str	r0, [sp, #4]
   13a54:	ldr	r0, [sp, #4]
   13a58:	movw	r1, #0
   13a5c:	cmp	r0, r1
   13a60:	bne	13a74 <__assert_fail@plt+0x2320>
   13a64:	ldr	r0, [fp, #-4]
   13a68:	ldr	r2, [fp, #-16]
   13a6c:	ldr	r3, [fp, #-12]
   13a70:	bl	15978 <__assert_fail@plt+0x4224>
   13a74:	ldr	r0, [sp, #4]
   13a78:	bl	140ec <__assert_fail@plt+0x2998>
   13a7c:	b	13a1c <__assert_fail@plt+0x22c8>
   13a80:	bl	12a4c <__assert_fail@plt+0x12f8>
   13a84:	movw	r0, #57814	; 0xe1d6
   13a88:	movt	r0, #4
   13a8c:	ldrb	r0, [r0]
   13a90:	tst	r0, #1
   13a94:	beq	13a9c <__assert_fail@plt+0x2348>
   13a98:	bl	13f38 <__assert_fail@plt+0x27e4>
   13a9c:	bl	15928 <__assert_fail@plt+0x41d4>
   13aa0:	tst	r0, #1
   13aa4:	beq	13acc <__assert_fail@plt+0x2378>
   13aa8:	movw	r0, #57814	; 0xe1d6
   13aac:	movt	r0, #4
   13ab0:	ldrb	r0, [r0]
   13ab4:	tst	r0, #1
   13ab8:	bne	13acc <__assert_fail@plt+0x2378>
   13abc:	ldr	r0, [fp, #-4]
   13ac0:	ldr	r2, [fp, #-16]
   13ac4:	ldr	r3, [fp, #-12]
   13ac8:	bl	15978 <__assert_fail@plt+0x4224>
   13acc:	mov	sp, fp
   13ad0:	pop	{fp, pc}
   13ad4:	push	{fp, lr}
   13ad8:	mov	fp, sp
   13adc:	sub	sp, sp, #152	; 0x98
   13ae0:	movw	r0, #57976	; 0xe278
   13ae4:	movt	r0, #4
   13ae8:	ldr	r0, [r0]
   13aec:	str	r0, [fp, #-4]
   13af0:	ldr	r0, [fp, #-4]
   13af4:	bl	12dbc <__assert_fail@plt+0x1668>
   13af8:	ldr	r1, [pc, #300]	; 13c2c <__assert_fail@plt+0x24d8>
   13afc:	movw	r2, #57964	; 0xe26c
   13b00:	movt	r2, #4
   13b04:	str	r0, [r2]
   13b08:	ldr	r0, [fp, #-4]
   13b0c:	cmp	r0, r1
   13b10:	bne	13b28 <__assert_fail@plt+0x23d4>
   13b14:	movw	r0, #0
   13b18:	strb	r0, [fp, #-5]
   13b1c:	movw	r0, #75	; 0x4b
   13b20:	str	r0, [fp, #-12]
   13b24:	b	13bbc <__assert_fail@plt+0x2468>
   13b28:	movw	r0, #0
   13b2c:	movw	r1, #57832	; 0xe1e8
   13b30:	movt	r1, #4
   13b34:	add	r2, sp, #12
   13b38:	bl	1143c <sigprocmask@plt>
   13b3c:	movw	r1, #57964	; 0xe26c
   13b40:	movt	r1, #4
   13b44:	ldr	r1, [r1]
   13b48:	str	r0, [sp, #8]
   13b4c:	mov	r0, r1
   13b50:	movw	r1, #50832	; 0xc690
   13b54:	movt	r1, #3
   13b58:	bl	15e3c <__assert_fail@plt+0x46e8>
   13b5c:	movw	r1, #57960	; 0xe268
   13b60:	movt	r1, #4
   13b64:	str	r0, [r1]
   13b68:	ldr	r0, [r1]
   13b6c:	movw	r1, #0
   13b70:	cmp	r0, r1
   13b74:	movw	r0, #0
   13b78:	movne	r0, #1
   13b7c:	and	r0, r0, #1
   13b80:	strb	r0, [fp, #-5]
   13b84:	bl	11628 <__errno_location@plt>
   13b88:	ldr	r0, [r0]
   13b8c:	str	r0, [fp, #-12]
   13b90:	ldr	r0, [fp, #-4]
   13b94:	ldrb	r1, [fp, #-5]
   13b98:	and	r1, r1, #1
   13b9c:	add	r0, r0, r1
   13ba0:	movw	r1, #57976	; 0xe278
   13ba4:	movt	r1, #4
   13ba8:	str	r0, [r1]
   13bac:	movw	r0, #2
   13bb0:	add	r1, sp, #12
   13bb4:	movw	r2, #0
   13bb8:	bl	1143c <sigprocmask@plt>
   13bbc:	ldrb	r0, [fp, #-5]
   13bc0:	tst	r0, #1
   13bc4:	bne	13c10 <__assert_fail@plt+0x24bc>
   13bc8:	ldr	r1, [fp, #-12]
   13bcc:	movw	r0, #57964	; 0xe26c
   13bd0:	movt	r0, #4
   13bd4:	ldr	r2, [r0]
   13bd8:	movw	r0, #0
   13bdc:	movw	r3, #3
   13be0:	str	r1, [sp, #4]
   13be4:	mov	r1, r3
   13be8:	bl	185f8 <__assert_fail@plt+0x6ea4>
   13bec:	movw	r1, #0
   13bf0:	str	r0, [sp]
   13bf4:	mov	r0, r1
   13bf8:	ldr	r1, [sp, #4]
   13bfc:	movw	r2, #50403	; 0xc4e3
   13c00:	movt	r2, #3
   13c04:	ldr	r3, [sp]
   13c08:	bl	11580 <error@plt>
   13c0c:	bl	11888 <__assert_fail@plt+0x134>
   13c10:	movw	r0, #57968	; 0xe270
   13c14:	movt	r0, #4
   13c18:	mov	r1, #0
   13c1c:	str	r1, [r0, #4]
   13c20:	str	r1, [r0]
   13c24:	mov	sp, fp
   13c28:	pop	{fp, pc}
   13c2c:	svcvc	0x00ffffff
   13c30:	push	{fp, lr}
   13c34:	mov	fp, sp
   13c38:	sub	sp, sp, #8
   13c3c:	bl	13f38 <__assert_fail@plt+0x27e4>
   13c40:	str	r0, [sp, #4]
   13c44:	movw	r1, #0
   13c48:	cmp	r0, r1
   13c4c:	beq	13c5c <__assert_fail@plt+0x2508>
   13c50:	ldr	r0, [sp, #4]
   13c54:	bl	140ec <__assert_fail@plt+0x2998>
   13c58:	b	13c3c <__assert_fail@plt+0x24e8>
   13c5c:	mov	sp, fp
   13c60:	pop	{fp, pc}
   13c64:	push	{fp, lr}
   13c68:	mov	fp, sp
   13c6c:	sub	sp, sp, #32
   13c70:	str	r0, [sp, #16]
   13c74:	str	r1, [sp, #20]
   13c78:	movw	r0, #58008	; 0xe298
   13c7c:	movt	r0, #4
   13c80:	ldr	r0, [r0]
   13c84:	movw	r1, #0
   13c88:	cmp	r0, r1
   13c8c:	bne	13ca8 <__assert_fail@plt+0x2554>
   13c90:	bl	14350 <__assert_fail@plt+0x2bfc>
   13c94:	tst	r0, #1
   13c98:	bne	13ca8 <__assert_fail@plt+0x2554>
   13c9c:	movw	r0, #0
   13ca0:	str	r0, [fp, #-4]
   13ca4:	b	13df0 <__assert_fail@plt+0x269c>
   13ca8:	ldr	r0, [sp, #16]
   13cac:	ldr	r1, [sp, #20]
   13cb0:	movw	r2, #58008	; 0xe298
   13cb4:	movt	r2, #4
   13cb8:	ldr	r2, [r2]
   13cbc:	ldr	r3, [r2, #8]
   13cc0:	ldr	r2, [r2, #12]
   13cc4:	subs	r0, r0, r3
   13cc8:	sbcs	r1, r1, r2
   13ccc:	bge	13ce0 <__assert_fail@plt+0x258c>
   13cd0:	b	13cd4 <__assert_fail@plt+0x2580>
   13cd4:	movw	r0, #0
   13cd8:	str	r0, [fp, #-4]
   13cdc:	b	13df0 <__assert_fail@plt+0x269c>
   13ce0:	movw	r0, #58008	; 0xe298
   13ce4:	movt	r0, #4
   13ce8:	ldr	r0, [r0]
   13cec:	str	r0, [sp, #12]
   13cf0:	ldr	r0, [sp, #12]
   13cf4:	movw	r1, #0
   13cf8:	cmp	r0, r1
   13cfc:	beq	13d04 <__assert_fail@plt+0x25b0>
   13d00:	b	13d24 <__assert_fail@plt+0x25d0>
   13d04:	movw	r0, #50687	; 0xc5ff
   13d08:	movt	r0, #3
   13d0c:	movw	r1, #50689	; 0xc601
   13d10:	movt	r1, #3
   13d14:	movw	r2, #583	; 0x247
   13d18:	movw	r3, #50702	; 0xc60e
   13d1c:	movt	r3, #3
   13d20:	bl	11754 <__assert_fail@plt>
   13d24:	ldr	r0, [sp, #16]
   13d28:	ldr	r1, [sp, #20]
   13d2c:	ldr	r2, [sp, #12]
   13d30:	ldr	r3, [r2, #8]
   13d34:	ldr	ip, [r2, #12]
   13d38:	ldr	r2, [r2, #24]
   13d3c:	adds	r3, r3, r2
   13d40:	adc	r2, ip, r2, asr #31
   13d44:	subs	r0, r0, r3
   13d48:	sbcs	r1, r1, r2
   13d4c:	bge	13db4 <__assert_fail@plt+0x2660>
   13d50:	b	13d54 <__assert_fail@plt+0x2600>
   13d54:	ldr	r0, [sp, #12]
   13d58:	ldr	r0, [r0, #32]
   13d5c:	str	r0, [sp, #8]
   13d60:	ldr	r0, [sp, #16]
   13d64:	ldr	r1, [sp, #12]
   13d68:	ldr	r1, [r1, #8]
   13d6c:	sub	r0, r0, r1
   13d70:	str	r0, [sp, #4]
   13d74:	ldr	r0, [sp, #4]
   13d78:	cmp	r0, #80	; 0x50
   13d7c:	blt	13d9c <__assert_fail@plt+0x2648>
   13d80:	ldr	r0, [sp, #8]
   13d84:	ldr	r0, [r0, #652]	; 0x28c
   13d88:	str	r0, [sp, #8]
   13d8c:	ldr	r0, [sp, #4]
   13d90:	sub	r0, r0, #80	; 0x50
   13d94:	str	r0, [sp, #4]
   13d98:	b	13d74 <__assert_fail@plt+0x2620>
   13d9c:	ldr	r0, [sp, #8]
   13da0:	add	r0, r0, #12
   13da4:	ldr	r1, [sp, #4]
   13da8:	add	r0, r0, r1, lsl #3
   13dac:	str	r0, [fp, #-4]
   13db0:	b	13df0 <__assert_fail@plt+0x269c>
   13db4:	ldr	r0, [sp, #12]
   13db8:	ldr	r0, [r0, #40]	; 0x28
   13dbc:	movw	r1, #0
   13dc0:	cmp	r0, r1
   13dc4:	bne	13de0 <__assert_fail@plt+0x268c>
   13dc8:	bl	14350 <__assert_fail@plt+0x2bfc>
   13dcc:	tst	r0, #1
   13dd0:	bne	13de0 <__assert_fail@plt+0x268c>
   13dd4:	movw	r0, #0
   13dd8:	str	r0, [fp, #-4]
   13ddc:	b	13df0 <__assert_fail@plt+0x269c>
   13de0:	ldr	r0, [sp, #12]
   13de4:	ldr	r0, [r0, #40]	; 0x28
   13de8:	str	r0, [sp, #12]
   13dec:	b	13cf0 <__assert_fail@plt+0x259c>
   13df0:	ldr	r0, [fp, #-4]
   13df4:	mov	sp, fp
   13df8:	pop	{fp, pc}
   13dfc:	push	{fp, lr}
   13e00:	mov	fp, sp
   13e04:	sub	sp, sp, #72	; 0x48
   13e08:	ldr	r1, [fp, #8]
   13e0c:	str	r0, [fp, #-4]
   13e10:	str	r3, [fp, #-12]
   13e14:	str	r2, [fp, #-16]
   13e18:	and	r0, r1, #1
   13e1c:	strb	r0, [fp, #-17]	; 0xffffffef
   13e20:	movw	r0, #57784	; 0xe1b8
   13e24:	movt	r0, #4
   13e28:	ldr	r0, [r0]
   13e2c:	movw	r1, #50738	; 0xc632
   13e30:	movt	r1, #3
   13e34:	str	r0, [sp, #28]
   13e38:	mov	r0, r1
   13e3c:	bl	115f8 <gettext@plt>
   13e40:	movw	r1, #58044	; 0xe2bc
   13e44:	movt	r1, #4
   13e48:	ldr	r2, [r1]
   13e4c:	movw	r1, #57800	; 0xe1c8
   13e50:	movt	r1, #4
   13e54:	ldr	r1, [r1]
   13e58:	ldr	r3, [fp, #-4]
   13e5c:	ldr	r3, [r3, #24]
   13e60:	ldr	r1, [r1, r3, lsl #2]
   13e64:	str	r0, [sp, #24]
   13e68:	mov	r0, r1
   13e6c:	str	r2, [sp, #20]
   13e70:	bl	1883c <__assert_fail@plt+0x70e8>
   13e74:	ldr	r1, [sp, #28]
   13e78:	str	r0, [sp, #16]
   13e7c:	mov	r0, r1
   13e80:	ldr	r1, [sp, #24]
   13e84:	ldr	r2, [sp, #20]
   13e88:	ldr	r3, [sp, #16]
   13e8c:	bl	1161c <fprintf@plt>
   13e90:	ldr	r1, [fp, #-16]
   13e94:	ldr	r2, [fp, #-12]
   13e98:	orr	r1, r1, r2
   13e9c:	cmp	r1, #0
   13ea0:	beq	13f08 <__assert_fail@plt+0x27b4>
   13ea4:	b	13ea8 <__assert_fail@plt+0x2754>
   13ea8:	add	r2, sp, #34	; 0x22
   13eac:	movw	r0, #57784	; 0xe1b8
   13eb0:	movt	r0, #4
   13eb4:	ldr	r0, [r0]
   13eb8:	movw	r1, #50762	; 0xc64a
   13ebc:	movt	r1, #3
   13ec0:	str	r0, [sp, #12]
   13ec4:	mov	r0, r1
   13ec8:	str	r2, [sp, #8]
   13ecc:	bl	115f8 <gettext@plt>
   13ed0:	ldr	r1, [fp, #-16]
   13ed4:	ldr	r2, [fp, #-12]
   13ed8:	str	r0, [sp, #4]
   13edc:	mov	r0, r1
   13ee0:	mov	r1, r2
   13ee4:	ldr	r2, [sp, #8]
   13ee8:	bl	160b0 <__assert_fail@plt+0x495c>
   13eec:	ldr	r1, [sp, #12]
   13ef0:	str	r0, [sp]
   13ef4:	mov	r0, r1
   13ef8:	ldr	r1, [sp, #4]
   13efc:	ldr	r2, [sp]
   13f00:	bl	1161c <fprintf@plt>
   13f04:	b	13f20 <__assert_fail@plt+0x27cc>
   13f08:	movw	r0, #57784	; 0xe1b8
   13f0c:	movt	r0, #4
   13f10:	ldr	r0, [r0]
   13f14:	movw	r1, #49862	; 0xc2c6
   13f18:	movt	r1, #3
   13f1c:	bl	1161c <fprintf@plt>
   13f20:	ldrb	r0, [fp, #-17]	; 0xffffffef
   13f24:	tst	r0, #1
   13f28:	bne	13f34 <__assert_fail@plt+0x27e0>
   13f2c:	bl	13c30 <__assert_fail@plt+0x24dc>
   13f30:	bl	12a4c <__assert_fail@plt+0x12f8>
   13f34:	bl	11888 <__assert_fail@plt+0x134>
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	sub	sp, sp, #16
   13f44:	movw	r0, #58032	; 0xe2b0
   13f48:	movt	r0, #4
   13f4c:	ldr	r0, [r0]
   13f50:	movw	r1, #0
   13f54:	cmp	r0, r1
   13f58:	beq	13f7c <__assert_fail@plt+0x2828>
   13f5c:	movw	r0, #58032	; 0xe2b0
   13f60:	movt	r0, #4
   13f64:	ldr	r0, [r0]
   13f68:	bl	15618 <__assert_fail@plt+0x3ec4>
   13f6c:	movw	r0, #58032	; 0xe2b0
   13f70:	movt	r0, #4
   13f74:	movw	r1, #0
   13f78:	str	r1, [r0]
   13f7c:	movw	r0, #58008	; 0xe298
   13f80:	movt	r0, #4
   13f84:	ldr	r0, [r0]
   13f88:	movw	r1, #0
   13f8c:	cmp	r0, r1
   13f90:	bne	13fac <__assert_fail@plt+0x2858>
   13f94:	bl	14350 <__assert_fail@plt+0x2bfc>
   13f98:	tst	r0, #1
   13f9c:	bne	13fac <__assert_fail@plt+0x2858>
   13fa0:	movw	r0, #0
   13fa4:	str	r0, [fp, #-4]
   13fa8:	b	140e0 <__assert_fail@plt+0x298c>
   13fac:	movw	r0, #58000	; 0xe290
   13fb0:	movt	r0, #4
   13fb4:	ldr	r1, [r0]
   13fb8:	ldr	r0, [r0, #4]
   13fbc:	movw	r2, #58008	; 0xe298
   13fc0:	movt	r2, #4
   13fc4:	ldr	r2, [r2]
   13fc8:	ldr	r3, [r2, #16]
   13fcc:	ldr	r2, [r2, #20]
   13fd0:	subs	r1, r1, r3
   13fd4:	sbcs	r0, r0, r2
   13fd8:	bge	14004 <__assert_fail@plt+0x28b0>
   13fdc:	b	13fe0 <__assert_fail@plt+0x288c>
   13fe0:	movw	r0, #58008	; 0xe298
   13fe4:	movt	r0, #4
   13fe8:	ldr	r0, [r0]
   13fec:	ldr	r1, [r0, #16]
   13ff0:	ldr	r0, [r0, #20]
   13ff4:	movw	r2, #58000	; 0xe290
   13ff8:	movt	r2, #4
   13ffc:	str	r0, [r2, #4]
   14000:	str	r1, [r2]
   14004:	movw	r0, #58008	; 0xe298
   14008:	movt	r0, #4
   1400c:	ldr	r1, [r0]
   14010:	ldr	r2, [r1, #16]
   14014:	ldr	r3, [r1, #20]
   14018:	adds	r2, r2, #1
   1401c:	adc	r3, r3, #0
   14020:	str	r2, [r1, #16]
   14024:	str	r3, [r1, #20]
   14028:	ldr	r0, [r0]
   1402c:	ldr	r0, [r0, #36]	; 0x24
   14030:	str	r0, [sp, #4]
   14034:	ldr	r0, [sp, #4]
   14038:	add	r1, r0, #12
   1403c:	ldr	r0, [r0, #8]
   14040:	add	r0, r1, r0, lsl #3
   14044:	str	r0, [sp, #8]
   14048:	ldr	r0, [sp, #4]
   1404c:	ldr	r1, [r0, #8]
   14050:	add	r1, r1, #1
   14054:	str	r1, [r0, #8]
   14058:	ldr	r0, [sp, #4]
   1405c:	ldr	r0, [r0]
   14060:	cmp	r1, r0
   14064:	bne	140d8 <__assert_fail@plt+0x2984>
   14068:	ldr	r0, [sp, #4]
   1406c:	ldr	r0, [r0, #652]	; 0x28c
   14070:	movw	r1, #58008	; 0xe298
   14074:	movt	r1, #4
   14078:	ldr	r2, [r1]
   1407c:	str	r0, [r2, #36]	; 0x24
   14080:	ldr	r0, [r1]
   14084:	ldr	r0, [r0, #36]	; 0x24
   14088:	movw	r1, #0
   1408c:	cmp	r0, r1
   14090:	beq	140b0 <__assert_fail@plt+0x295c>
   14094:	movw	r0, #58008	; 0xe298
   14098:	movt	r0, #4
   1409c:	ldr	r0, [r0]
   140a0:	ldr	r0, [r0, #36]	; 0x24
   140a4:	ldr	r0, [r0]
   140a8:	cmp	r0, #0
   140ac:	bne	140d4 <__assert_fail@plt+0x2980>
   140b0:	movw	r0, #58008	; 0xe298
   140b4:	movt	r0, #4
   140b8:	ldr	r1, [r0]
   140bc:	movw	r2, #58032	; 0xe2b0
   140c0:	movt	r2, #4
   140c4:	str	r1, [r2]
   140c8:	ldr	r1, [r0]
   140cc:	ldr	r1, [r1, #40]	; 0x28
   140d0:	str	r1, [r0]
   140d4:	b	140d8 <__assert_fail@plt+0x2984>
   140d8:	ldr	r0, [sp, #8]
   140dc:	str	r0, [fp, #-4]
   140e0:	ldr	r0, [fp, #-4]
   140e4:	mov	sp, fp
   140e8:	pop	{fp, pc}
   140ec:	push	{fp, lr}
   140f0:	mov	fp, sp
   140f4:	sub	sp, sp, #24
   140f8:	str	r0, [fp, #-4]
   140fc:	ldr	r0, [fp, #-4]
   14100:	ldr	r0, [r0, #4]
   14104:	ldr	r1, [fp, #-4]
   14108:	ldr	r2, [r1]
   1410c:	movw	r1, #57960	; 0xe268
   14110:	movt	r1, #4
   14114:	ldr	r3, [r1]
   14118:	movw	r1, #1
   1411c:	bl	114c0 <fwrite_unlocked@plt>
   14120:	str	r0, [fp, #-8]
   14124:	ldr	r0, [fp, #-8]
   14128:	ldr	r1, [fp, #-4]
   1412c:	ldr	r1, [r1]
   14130:	cmp	r0, r1
   14134:	beq	1419c <__assert_fail@plt+0x2a48>
   14138:	bl	11628 <__errno_location@plt>
   1413c:	ldr	r1, [r0]
   14140:	movw	r0, #49864	; 0xc2c8
   14144:	movt	r0, #3
   14148:	str	r1, [sp, #12]
   1414c:	bl	115f8 <gettext@plt>
   14150:	movw	r1, #57964	; 0xe26c
   14154:	movt	r1, #4
   14158:	ldr	r1, [r1]
   1415c:	movw	r2, #4
   14160:	str	r0, [sp, #8]
   14164:	mov	r0, r2
   14168:	bl	184a4 <__assert_fail@plt+0x6d50>
   1416c:	movw	r1, #0
   14170:	str	r0, [sp, #4]
   14174:	mov	r0, r1
   14178:	ldr	r1, [sp, #12]
   1417c:	ldr	r2, [sp, #8]
   14180:	ldr	r3, [sp, #4]
   14184:	bl	11580 <error@plt>
   14188:	movw	r0, #57960	; 0xe268
   1418c:	movt	r0, #4
   14190:	movw	r1, #0
   14194:	str	r1, [r0]
   14198:	bl	11888 <__assert_fail@plt+0x134>
   1419c:	ldr	r0, [fp, #-4]
   141a0:	ldr	r0, [r0]
   141a4:	movw	r1, #57968	; 0xe270
   141a8:	movt	r1, #4
   141ac:	ldr	r2, [r1]
   141b0:	ldr	r3, [r1, #4]
   141b4:	adds	r2, r2, r0
   141b8:	adc	r0, r3, r0, asr #31
   141bc:	str	r2, [r1]
   141c0:	str	r0, [r1, #4]
   141c4:	mov	sp, fp
   141c8:	pop	{fp, pc}
   141cc:	push	{fp, lr}
   141d0:	mov	fp, sp
   141d4:	sub	sp, sp, #64	; 0x40
   141d8:	str	r0, [fp, #-8]
   141dc:	str	r1, [fp, #-4]
   141e0:	and	r0, r2, #1
   141e4:	strb	r0, [fp, #-9]
   141e8:	str	r3, [fp, #-16]
   141ec:	bl	158a0 <__assert_fail@plt+0x414c>
   141f0:	str	r1, [sp, #36]	; 0x24
   141f4:	str	r0, [sp, #32]
   141f8:	ldr	r0, [sp, #32]
   141fc:	ldr	r1, [sp, #36]	; 0x24
   14200:	ldr	r2, [fp, #-8]
   14204:	ldr	r3, [fp, #-4]
   14208:	subs	r0, r2, r0
   1420c:	sbcs	r1, r3, r1
   14210:	bge	14264 <__assert_fail@plt+0x2b10>
   14214:	b	14218 <__assert_fail@plt+0x2ac4>
   14218:	movw	r0, #50803	; 0xc673
   1421c:	movt	r0, #3
   14220:	bl	115f8 <gettext@plt>
   14224:	movw	r1, #57800	; 0xe1c8
   14228:	movt	r1, #4
   1422c:	ldr	r1, [r1]
   14230:	ldr	r2, [fp, #-16]
   14234:	add	r1, r1, r2, lsl #2
   14238:	ldr	r1, [r1]
   1423c:	str	r0, [sp, #12]
   14240:	mov	r0, r1
   14244:	bl	1883c <__assert_fail@plt+0x70e8>
   14248:	movw	r1, #0
   1424c:	str	r0, [sp, #8]
   14250:	mov	r0, r1
   14254:	ldr	r2, [sp, #12]
   14258:	ldr	r3, [sp, #8]
   1425c:	bl	11580 <error@plt>
   14260:	bl	11888 <__assert_fail@plt+0x134>
   14264:	ldr	r0, [fp, #-8]
   14268:	ldr	r1, [fp, #-4]
   1426c:	ldr	r2, [sp, #32]
   14270:	ldr	r3, [sp, #36]	; 0x24
   14274:	subs	r0, r0, r2
   14278:	sbc	r1, r1, r3
   1427c:	str	r0, [sp, #24]
   14280:	str	r1, [sp, #28]
   14284:	mov	r0, #0
   14288:	str	r0, [sp, #20]
   1428c:	str	r0, [sp, #16]
   14290:	ldr	r0, [sp, #16]
   14294:	ldr	r1, [sp, #20]
   14298:	ldr	r2, [sp, #24]
   1429c:	ldr	r3, [sp, #28]
   142a0:	subs	r0, r0, r2
   142a4:	sbcs	r1, r1, r3
   142a8:	bge	14348 <__assert_fail@plt+0x2bf4>
   142ac:	b	142b0 <__assert_fail@plt+0x2b5c>
   142b0:	bl	13f38 <__assert_fail@plt+0x27e4>
   142b4:	str	r0, [fp, #-20]	; 0xffffffec
   142b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   142bc:	movw	r1, #0
   142c0:	cmp	r0, r1
   142c4:	bne	14314 <__assert_fail@plt+0x2bc0>
   142c8:	movw	r0, #50803	; 0xc673
   142cc:	movt	r0, #3
   142d0:	bl	115f8 <gettext@plt>
   142d4:	movw	r1, #57800	; 0xe1c8
   142d8:	movt	r1, #4
   142dc:	ldr	r1, [r1]
   142e0:	ldr	r2, [fp, #-16]
   142e4:	add	r1, r1, r2, lsl #2
   142e8:	ldr	r1, [r1]
   142ec:	str	r0, [sp, #4]
   142f0:	mov	r0, r1
   142f4:	bl	1883c <__assert_fail@plt+0x70e8>
   142f8:	movw	r1, #0
   142fc:	str	r0, [sp]
   14300:	mov	r0, r1
   14304:	ldr	r2, [sp, #4]
   14308:	ldr	r3, [sp]
   1430c:	bl	11580 <error@plt>
   14310:	bl	11888 <__assert_fail@plt+0x134>
   14314:	ldrb	r0, [fp, #-9]
   14318:	tst	r0, #1
   1431c:	bne	14328 <__assert_fail@plt+0x2bd4>
   14320:	ldr	r0, [fp, #-20]	; 0xffffffec
   14324:	bl	140ec <__assert_fail@plt+0x2998>
   14328:	b	1432c <__assert_fail@plt+0x2bd8>
   1432c:	ldr	r0, [sp, #16]
   14330:	ldr	r1, [sp, #20]
   14334:	adds	r0, r0, #1
   14338:	adc	r1, r1, #0
   1433c:	str	r0, [sp, #16]
   14340:	str	r1, [sp, #20]
   14344:	b	14290 <__assert_fail@plt+0x2b3c>
   14348:	mov	sp, fp
   1434c:	pop	{fp, pc}
   14350:	push	{fp, lr}
   14354:	mov	fp, sp
   14358:	sub	sp, sp, #32
   1435c:	movw	r0, #8191	; 0x1fff
   14360:	str	r0, [fp, #-12]
   14364:	movw	r0, #58012	; 0xe29c
   14368:	movt	r0, #4
   1436c:	ldrb	r0, [r0]
   14370:	tst	r0, #1
   14374:	beq	14388 <__assert_fail@plt+0x2c34>
   14378:	movw	r0, #0
   1437c:	and	r0, r0, #1
   14380:	strb	r0, [fp, #-1]
   14384:	b	152d0 <__assert_fail@plt+0x3b7c>
   14388:	ldr	r0, [fp, #-12]
   1438c:	movw	r1, #58016	; 0xe2a0
   14390:	movt	r1, #4
   14394:	ldr	r1, [r1]
   14398:	cmp	r0, r1
   1439c:	bgt	143b4 <__assert_fail@plt+0x2c60>
   143a0:	movw	r0, #58016	; 0xe2a0
   143a4:	movt	r0, #4
   143a8:	ldr	r0, [r0]
   143ac:	add	r0, r0, #1
   143b0:	str	r0, [fp, #-12]
   143b4:	b	143b8 <__assert_fail@plt+0x2c64>
   143b8:	ldr	r0, [fp, #-12]
   143bc:	bl	15304 <__assert_fail@plt+0x3bb0>
   143c0:	str	r0, [fp, #-8]
   143c4:	ldr	r0, [fp, #-8]
   143c8:	ldr	r0, [r0]
   143cc:	str	r0, [sp, #16]
   143d0:	ldr	r0, [fp, #-8]
   143d4:	ldr	r0, [r0, #28]
   143d8:	str	r0, [sp, #8]
   143dc:	movw	r0, #58016	; 0xe2a0
   143e0:	movt	r0, #4
   143e4:	ldr	r0, [r0]
   143e8:	cmp	r0, #0
   143ec:	beq	14458 <__assert_fail@plt+0x2d04>
   143f0:	ldr	r0, [sp, #8]
   143f4:	movw	r1, #58020	; 0xe2a4
   143f8:	movt	r1, #4
   143fc:	ldr	r1, [r1]
   14400:	movw	r2, #58016	; 0xe2a0
   14404:	movt	r2, #4
   14408:	ldr	r3, [r2]
   1440c:	str	r2, [sp, #4]
   14410:	mov	r2, r3
   14414:	bl	11478 <memcpy@plt>
   14418:	ldr	r0, [sp, #4]
   1441c:	ldr	r1, [r0]
   14420:	ldr	r2, [sp, #8]
   14424:	add	r1, r2, r1
   14428:	str	r1, [sp, #8]
   1442c:	ldr	r1, [r0]
   14430:	ldr	r2, [fp, #-8]
   14434:	ldr	r3, [r2, #4]
   14438:	add	r1, r3, r1
   1443c:	str	r1, [r2, #4]
   14440:	ldr	r1, [r0]
   14444:	ldr	r2, [sp, #16]
   14448:	sub	r1, r2, r1
   1444c:	str	r1, [sp, #16]
   14450:	movw	r1, #0
   14454:	str	r1, [r0]
   14458:	ldr	r0, [sp, #8]
   1445c:	ldr	r1, [sp, #16]
   14460:	sub	r1, r1, #1
   14464:	bl	153d0 <__assert_fail@plt+0x3c7c>
   14468:	ldr	r1, [fp, #-8]
   1446c:	ldr	r2, [r1, #4]
   14470:	add	r0, r2, r0
   14474:	str	r0, [r1, #4]
   14478:	ldr	r0, [fp, #-8]
   1447c:	bl	15480 <__assert_fail@plt+0x3d2c>
   14480:	str	r0, [sp, #12]
   14484:	ldr	r0, [sp, #12]
   14488:	cmp	r0, #0
   1448c:	bne	144a4 <__assert_fail@plt+0x2d50>
   14490:	movw	r0, #58012	; 0xe29c
   14494:	movt	r0, #4
   14498:	ldrb	r0, [r0]
   1449c:	tst	r0, #1
   144a0:	beq	144a8 <__assert_fail@plt+0x2d54>
   144a4:	b	15298 <__assert_fail@plt+0x3b44>
   144a8:	b	1477c <__assert_fail@plt+0x3028>
   144ac:	b	144b0 <__assert_fail@plt+0x2d5c>
   144b0:	b	14578 <__assert_fail@plt+0x2e24>
   144b4:	ldr	r0, [fp, #-8]
   144b8:	ldr	r0, [r0]
   144bc:	cmp	r0, #0
   144c0:	bge	144fc <__assert_fail@plt+0x2da8>
   144c4:	b	144c8 <__assert_fail@plt+0x2d74>
   144c8:	ldr	r0, [fp, #-8]
   144cc:	ldr	r0, [r0]
   144d0:	cmp	r0, #63	; 0x3f
   144d4:	blt	145e8 <__assert_fail@plt+0x2e94>
   144d8:	b	14600 <__assert_fail@plt+0x2eac>
   144dc:	ldr	r0, [fp, #-8]
   144e0:	ldr	r0, [r0]
   144e4:	mvn	r1, #0
   144e8:	sub	r0, r1, r0
   144ec:	mvn	r1, #62	; 0x3e
   144f0:	cmp	r1, r0
   144f4:	ble	145e8 <__assert_fail@plt+0x2e94>
   144f8:	b	14600 <__assert_fail@plt+0x2eac>
   144fc:	b	14500 <__assert_fail@plt+0x2dac>
   14500:	b	14560 <__assert_fail@plt+0x2e0c>
   14504:	b	14560 <__assert_fail@plt+0x2e0c>
   14508:	b	14560 <__assert_fail@plt+0x2e0c>
   1450c:	b	14510 <__assert_fail@plt+0x2dbc>
   14510:	ldr	r0, [fp, #-8]
   14514:	ldr	r0, [r0]
   14518:	mvn	r1, #127	; 0x7f
   1451c:	add	r0, r0, r1
   14520:	movw	r1, #0
   14524:	cmp	r1, r0
   14528:	blt	145e8 <__assert_fail@plt+0x2e94>
   1452c:	b	14600 <__assert_fail@plt+0x2eac>
   14530:	ldr	r0, [fp, #-8]
   14534:	ldr	r0, [r0]
   14538:	movw	r1, #0
   1453c:	cmp	r1, r0
   14540:	bge	14600 <__assert_fail@plt+0x2eac>
   14544:	ldr	r0, [fp, #-8]
   14548:	ldr	r0, [r0]
   1454c:	sub	r0, r0, #1
   14550:	movw	r1, #127	; 0x7f
   14554:	cmp	r1, r0
   14558:	blt	145e8 <__assert_fail@plt+0x2e94>
   1455c:	b	14600 <__assert_fail@plt+0x2eac>
   14560:	ldr	r0, [fp, #-8]
   14564:	ldr	r0, [r0]
   14568:	mvn	r1, #63	; 0x3f
   1456c:	cmp	r1, r0
   14570:	blt	145e8 <__assert_fail@plt+0x2e94>
   14574:	b	14600 <__assert_fail@plt+0x2eac>
   14578:	b	14580 <__assert_fail@plt+0x2e2c>
   1457c:	b	14600 <__assert_fail@plt+0x2eac>
   14580:	ldr	r0, [fp, #-8]
   14584:	ldr	r0, [r0]
   14588:	cmp	r0, #0
   1458c:	bge	145d4 <__assert_fail@plt+0x2e80>
   14590:	b	14594 <__assert_fail@plt+0x2e40>
   14594:	b	145b8 <__assert_fail@plt+0x2e64>
   14598:	b	145b8 <__assert_fail@plt+0x2e64>
   1459c:	ldr	r0, [fp, #-8]
   145a0:	ldr	r0, [r0]
   145a4:	cmn	r0, #1
   145a8:	bne	145b8 <__assert_fail@plt+0x2e64>
   145ac:	b	145b0 <__assert_fail@plt+0x2e5c>
   145b0:	b	14600 <__assert_fail@plt+0x2eac>
   145b4:	b	14600 <__assert_fail@plt+0x2eac>
   145b8:	ldr	r0, [fp, #-8]
   145bc:	ldr	r0, [r0]
   145c0:	mvn	r1, #127	; 0x7f
   145c4:	sdiv	r0, r1, r0
   145c8:	cmp	r0, #2
   145cc:	blt	145e8 <__assert_fail@plt+0x2e94>
   145d0:	b	14600 <__assert_fail@plt+0x2eac>
   145d4:	ldr	r0, [fp, #-8]
   145d8:	ldr	r0, [r0]
   145dc:	movw	r1, #63	; 0x3f
   145e0:	cmp	r1, r0
   145e4:	bge	14600 <__assert_fail@plt+0x2eac>
   145e8:	ldr	r0, [fp, #-8]
   145ec:	ldr	r0, [r0]
   145f0:	lsl	r0, r0, #1
   145f4:	sxtb	r0, r0
   145f8:	str	r0, [fp, #-12]
   145fc:	b	15288 <__assert_fail@plt+0x3b34>
   14600:	ldr	r0, [fp, #-8]
   14604:	ldr	r0, [r0]
   14608:	lsl	r0, r0, #1
   1460c:	sxtb	r0, r0
   14610:	str	r0, [fp, #-12]
   14614:	b	1528c <__assert_fail@plt+0x3b38>
   14618:	b	146dc <__assert_fail@plt+0x2f88>
   1461c:	ldr	r0, [fp, #-8]
   14620:	ldr	r0, [r0]
   14624:	cmp	r0, #0
   14628:	bge	14664 <__assert_fail@plt+0x2f10>
   1462c:	b	14630 <__assert_fail@plt+0x2edc>
   14630:	ldr	r0, [fp, #-8]
   14634:	ldr	r0, [r0]
   14638:	cmp	r0, #127	; 0x7f
   1463c:	blt	1474c <__assert_fail@plt+0x2ff8>
   14640:	b	14764 <__assert_fail@plt+0x3010>
   14644:	ldr	r0, [fp, #-8]
   14648:	ldr	r0, [r0]
   1464c:	mvn	r1, #0
   14650:	sub	r0, r1, r0
   14654:	mvn	r1, #126	; 0x7e
   14658:	cmp	r1, r0
   1465c:	ble	1474c <__assert_fail@plt+0x2ff8>
   14660:	b	14764 <__assert_fail@plt+0x3010>
   14664:	b	14668 <__assert_fail@plt+0x2f14>
   14668:	b	146c4 <__assert_fail@plt+0x2f70>
   1466c:	b	146c4 <__assert_fail@plt+0x2f70>
   14670:	b	146c4 <__assert_fail@plt+0x2f70>
   14674:	b	14678 <__assert_fail@plt+0x2f24>
   14678:	ldr	r0, [fp, #-8]
   1467c:	ldr	r0, [r0]
   14680:	add	r0, r0, #0
   14684:	movw	r1, #0
   14688:	cmp	r1, r0
   1468c:	blt	1474c <__assert_fail@plt+0x2ff8>
   14690:	b	14764 <__assert_fail@plt+0x3010>
   14694:	ldr	r0, [fp, #-8]
   14698:	ldr	r0, [r0]
   1469c:	movw	r1, #0
   146a0:	cmp	r1, r0
   146a4:	bge	14764 <__assert_fail@plt+0x3010>
   146a8:	ldr	r0, [fp, #-8]
   146ac:	ldr	r0, [r0]
   146b0:	sub	r0, r0, #1
   146b4:	mvn	r1, #0
   146b8:	cmp	r1, r0
   146bc:	blt	1474c <__assert_fail@plt+0x2ff8>
   146c0:	b	14764 <__assert_fail@plt+0x3010>
   146c4:	ldr	r0, [fp, #-8]
   146c8:	ldr	r0, [r0]
   146cc:	movw	r1, #0
   146d0:	cmp	r1, r0
   146d4:	blt	1474c <__assert_fail@plt+0x2ff8>
   146d8:	b	14764 <__assert_fail@plt+0x3010>
   146dc:	b	146e4 <__assert_fail@plt+0x2f90>
   146e0:	b	14764 <__assert_fail@plt+0x3010>
   146e4:	ldr	r0, [fp, #-8]
   146e8:	ldr	r0, [r0]
   146ec:	cmp	r0, #0
   146f0:	bge	14738 <__assert_fail@plt+0x2fe4>
   146f4:	b	146f8 <__assert_fail@plt+0x2fa4>
   146f8:	b	1471c <__assert_fail@plt+0x2fc8>
   146fc:	b	1471c <__assert_fail@plt+0x2fc8>
   14700:	ldr	r0, [fp, #-8]
   14704:	ldr	r0, [r0]
   14708:	cmn	r0, #1
   1470c:	bne	1471c <__assert_fail@plt+0x2fc8>
   14710:	b	14714 <__assert_fail@plt+0x2fc0>
   14714:	b	1474c <__assert_fail@plt+0x2ff8>
   14718:	b	1474c <__assert_fail@plt+0x2ff8>
   1471c:	ldr	r0, [fp, #-8]
   14720:	ldr	r0, [r0]
   14724:	movw	r1, #0
   14728:	sdiv	r0, r1, r0
   1472c:	cmp	r0, #2
   14730:	blt	1474c <__assert_fail@plt+0x2ff8>
   14734:	b	14764 <__assert_fail@plt+0x3010>
   14738:	ldr	r0, [fp, #-8]
   1473c:	ldr	r0, [r0]
   14740:	movw	r1, #127	; 0x7f
   14744:	cmp	r1, r0
   14748:	bge	14764 <__assert_fail@plt+0x3010>
   1474c:	ldr	r0, [fp, #-8]
   14750:	ldr	r0, [r0]
   14754:	lsl	r0, r0, #1
   14758:	and	r0, r0, #255	; 0xff
   1475c:	str	r0, [fp, #-12]
   14760:	b	15288 <__assert_fail@plt+0x3b34>
   14764:	ldr	r0, [fp, #-8]
   14768:	ldr	r0, [r0]
   1476c:	lsl	r0, r0, #1
   14770:	and	r0, r0, #255	; 0xff
   14774:	str	r0, [fp, #-12]
   14778:	b	1528c <__assert_fail@plt+0x3b38>
   1477c:	b	14a58 <__assert_fail@plt+0x3304>
   14780:	b	14784 <__assert_fail@plt+0x3030>
   14784:	b	14850 <__assert_fail@plt+0x30fc>
   14788:	ldr	r0, [fp, #-8]
   1478c:	ldr	r0, [r0]
   14790:	cmp	r0, #0
   14794:	bge	147d4 <__assert_fail@plt+0x3080>
   14798:	b	1479c <__assert_fail@plt+0x3048>
   1479c:	ldr	r0, [fp, #-8]
   147a0:	ldr	r0, [r0]
   147a4:	movw	r1, #16383	; 0x3fff
   147a8:	cmp	r0, r1
   147ac:	blt	148c0 <__assert_fail@plt+0x316c>
   147b0:	b	148d8 <__assert_fail@plt+0x3184>
   147b4:	ldr	r0, [pc, #2880]	; 152fc <__assert_fail@plt+0x3ba8>
   147b8:	ldr	r1, [fp, #-8]
   147bc:	ldr	r1, [r1]
   147c0:	mvn	r2, #0
   147c4:	sub	r1, r2, r1
   147c8:	cmp	r0, r1
   147cc:	ble	148c0 <__assert_fail@plt+0x316c>
   147d0:	b	148d8 <__assert_fail@plt+0x3184>
   147d4:	b	147d8 <__assert_fail@plt+0x3084>
   147d8:	b	14838 <__assert_fail@plt+0x30e4>
   147dc:	b	14838 <__assert_fail@plt+0x30e4>
   147e0:	b	14838 <__assert_fail@plt+0x30e4>
   147e4:	b	147e8 <__assert_fail@plt+0x3094>
   147e8:	ldr	r0, [pc, #2820]	; 152f4 <__assert_fail@plt+0x3ba0>
   147ec:	ldr	r1, [fp, #-8]
   147f0:	ldr	r1, [r1]
   147f4:	add	r0, r1, r0
   147f8:	movw	r1, #0
   147fc:	cmp	r1, r0
   14800:	blt	148c0 <__assert_fail@plt+0x316c>
   14804:	b	148d8 <__assert_fail@plt+0x3184>
   14808:	ldr	r0, [fp, #-8]
   1480c:	ldr	r0, [r0]
   14810:	movw	r1, #0
   14814:	cmp	r1, r0
   14818:	bge	148d8 <__assert_fail@plt+0x3184>
   1481c:	ldr	r0, [fp, #-8]
   14820:	ldr	r0, [r0]
   14824:	sub	r0, r0, #1
   14828:	movw	r1, #32767	; 0x7fff
   1482c:	cmp	r1, r0
   14830:	blt	148c0 <__assert_fail@plt+0x316c>
   14834:	b	148d8 <__assert_fail@plt+0x3184>
   14838:	ldr	r0, [pc, #2744]	; 152f8 <__assert_fail@plt+0x3ba4>
   1483c:	ldr	r1, [fp, #-8]
   14840:	ldr	r1, [r1]
   14844:	cmp	r0, r1
   14848:	blt	148c0 <__assert_fail@plt+0x316c>
   1484c:	b	148d8 <__assert_fail@plt+0x3184>
   14850:	b	14858 <__assert_fail@plt+0x3104>
   14854:	b	148d8 <__assert_fail@plt+0x3184>
   14858:	ldr	r0, [fp, #-8]
   1485c:	ldr	r0, [r0]
   14860:	cmp	r0, #0
   14864:	bge	148ac <__assert_fail@plt+0x3158>
   14868:	b	1486c <__assert_fail@plt+0x3118>
   1486c:	b	14890 <__assert_fail@plt+0x313c>
   14870:	b	14890 <__assert_fail@plt+0x313c>
   14874:	ldr	r0, [fp, #-8]
   14878:	ldr	r0, [r0]
   1487c:	cmn	r0, #1
   14880:	bne	14890 <__assert_fail@plt+0x313c>
   14884:	b	14888 <__assert_fail@plt+0x3134>
   14888:	b	148d8 <__assert_fail@plt+0x3184>
   1488c:	b	148d8 <__assert_fail@plt+0x3184>
   14890:	ldr	r0, [pc, #2652]	; 152f4 <__assert_fail@plt+0x3ba0>
   14894:	ldr	r1, [fp, #-8]
   14898:	ldr	r1, [r1]
   1489c:	sdiv	r0, r0, r1
   148a0:	cmp	r0, #2
   148a4:	blt	148c0 <__assert_fail@plt+0x316c>
   148a8:	b	148d8 <__assert_fail@plt+0x3184>
   148ac:	ldr	r0, [fp, #-8]
   148b0:	ldr	r0, [r0]
   148b4:	movw	r1, #16383	; 0x3fff
   148b8:	cmp	r1, r0
   148bc:	bge	148d8 <__assert_fail@plt+0x3184>
   148c0:	ldr	r0, [fp, #-8]
   148c4:	ldr	r0, [r0]
   148c8:	lsl	r0, r0, #1
   148cc:	sxth	r0, r0
   148d0:	str	r0, [fp, #-12]
   148d4:	b	15288 <__assert_fail@plt+0x3b34>
   148d8:	ldr	r0, [fp, #-8]
   148dc:	ldr	r0, [r0]
   148e0:	lsl	r0, r0, #1
   148e4:	sxth	r0, r0
   148e8:	str	r0, [fp, #-12]
   148ec:	b	1528c <__assert_fail@plt+0x3b38>
   148f0:	b	149b8 <__assert_fail@plt+0x3264>
   148f4:	ldr	r0, [fp, #-8]
   148f8:	ldr	r0, [r0]
   148fc:	cmp	r0, #0
   14900:	bge	14940 <__assert_fail@plt+0x31ec>
   14904:	b	14908 <__assert_fail@plt+0x31b4>
   14908:	ldr	r0, [fp, #-8]
   1490c:	ldr	r0, [r0]
   14910:	movw	r1, #32767	; 0x7fff
   14914:	cmp	r0, r1
   14918:	blt	14a28 <__assert_fail@plt+0x32d4>
   1491c:	b	14a40 <__assert_fail@plt+0x32ec>
   14920:	ldr	r0, [pc, #2520]	; 15300 <__assert_fail@plt+0x3bac>
   14924:	ldr	r1, [fp, #-8]
   14928:	ldr	r1, [r1]
   1492c:	mvn	r2, #0
   14930:	sub	r1, r2, r1
   14934:	cmp	r0, r1
   14938:	ble	14a28 <__assert_fail@plt+0x32d4>
   1493c:	b	14a40 <__assert_fail@plt+0x32ec>
   14940:	b	14944 <__assert_fail@plt+0x31f0>
   14944:	b	149a0 <__assert_fail@plt+0x324c>
   14948:	b	149a0 <__assert_fail@plt+0x324c>
   1494c:	b	149a0 <__assert_fail@plt+0x324c>
   14950:	b	14954 <__assert_fail@plt+0x3200>
   14954:	ldr	r0, [fp, #-8]
   14958:	ldr	r0, [r0]
   1495c:	add	r0, r0, #0
   14960:	movw	r1, #0
   14964:	cmp	r1, r0
   14968:	blt	14a28 <__assert_fail@plt+0x32d4>
   1496c:	b	14a40 <__assert_fail@plt+0x32ec>
   14970:	ldr	r0, [fp, #-8]
   14974:	ldr	r0, [r0]
   14978:	movw	r1, #0
   1497c:	cmp	r1, r0
   14980:	bge	14a40 <__assert_fail@plt+0x32ec>
   14984:	ldr	r0, [fp, #-8]
   14988:	ldr	r0, [r0]
   1498c:	sub	r0, r0, #1
   14990:	mvn	r1, #0
   14994:	cmp	r1, r0
   14998:	blt	14a28 <__assert_fail@plt+0x32d4>
   1499c:	b	14a40 <__assert_fail@plt+0x32ec>
   149a0:	ldr	r0, [fp, #-8]
   149a4:	ldr	r0, [r0]
   149a8:	movw	r1, #0
   149ac:	cmp	r1, r0
   149b0:	blt	14a28 <__assert_fail@plt+0x32d4>
   149b4:	b	14a40 <__assert_fail@plt+0x32ec>
   149b8:	b	149c0 <__assert_fail@plt+0x326c>
   149bc:	b	14a40 <__assert_fail@plt+0x32ec>
   149c0:	ldr	r0, [fp, #-8]
   149c4:	ldr	r0, [r0]
   149c8:	cmp	r0, #0
   149cc:	bge	14a14 <__assert_fail@plt+0x32c0>
   149d0:	b	149d4 <__assert_fail@plt+0x3280>
   149d4:	b	149f8 <__assert_fail@plt+0x32a4>
   149d8:	b	149f8 <__assert_fail@plt+0x32a4>
   149dc:	ldr	r0, [fp, #-8]
   149e0:	ldr	r0, [r0]
   149e4:	cmn	r0, #1
   149e8:	bne	149f8 <__assert_fail@plt+0x32a4>
   149ec:	b	149f0 <__assert_fail@plt+0x329c>
   149f0:	b	14a28 <__assert_fail@plt+0x32d4>
   149f4:	b	14a28 <__assert_fail@plt+0x32d4>
   149f8:	ldr	r0, [fp, #-8]
   149fc:	ldr	r0, [r0]
   14a00:	movw	r1, #0
   14a04:	sdiv	r0, r1, r0
   14a08:	cmp	r0, #2
   14a0c:	blt	14a28 <__assert_fail@plt+0x32d4>
   14a10:	b	14a40 <__assert_fail@plt+0x32ec>
   14a14:	ldr	r0, [fp, #-8]
   14a18:	ldr	r0, [r0]
   14a1c:	movw	r1, #32767	; 0x7fff
   14a20:	cmp	r1, r0
   14a24:	bge	14a40 <__assert_fail@plt+0x32ec>
   14a28:	ldr	r0, [fp, #-8]
   14a2c:	ldr	r0, [r0]
   14a30:	lsl	r0, r0, #1
   14a34:	uxth	r0, r0
   14a38:	str	r0, [fp, #-12]
   14a3c:	b	15288 <__assert_fail@plt+0x3b34>
   14a40:	ldr	r0, [fp, #-8]
   14a44:	ldr	r0, [r0]
   14a48:	lsl	r0, r0, #1
   14a4c:	uxth	r0, r0
   14a50:	str	r0, [fp, #-12]
   14a54:	b	1528c <__assert_fail@plt+0x3b38>
   14a58:	b	14a5c <__assert_fail@plt+0x3308>
   14a5c:	b	14a60 <__assert_fail@plt+0x330c>
   14a60:	b	14b1c <__assert_fail@plt+0x33c8>
   14a64:	ldr	r0, [fp, #-8]
   14a68:	ldr	r0, [r0]
   14a6c:	cmp	r0, #0
   14a70:	bge	14ab0 <__assert_fail@plt+0x335c>
   14a74:	b	14a78 <__assert_fail@plt+0x3324>
   14a78:	ldr	r0, [pc, #2148]	; 152e4 <__assert_fail@plt+0x3b90>
   14a7c:	ldr	r1, [fp, #-8]
   14a80:	ldr	r1, [r1]
   14a84:	cmp	r1, r0
   14a88:	blt	14b80 <__assert_fail@plt+0x342c>
   14a8c:	b	14b94 <__assert_fail@plt+0x3440>
   14a90:	ldr	r0, [pc, #2136]	; 152f0 <__assert_fail@plt+0x3b9c>
   14a94:	ldr	r1, [fp, #-8]
   14a98:	ldr	r1, [r1]
   14a9c:	mvn	r2, #0
   14aa0:	sub	r1, r2, r1
   14aa4:	cmp	r0, r1
   14aa8:	ble	14b80 <__assert_fail@plt+0x342c>
   14aac:	b	14b94 <__assert_fail@plt+0x3440>
   14ab0:	b	14b04 <__assert_fail@plt+0x33b0>
   14ab4:	b	14ab8 <__assert_fail@plt+0x3364>
   14ab8:	ldr	r0, [fp, #-8]
   14abc:	ldr	r0, [r0]
   14ac0:	add	r0, r0, #-2147483648	; 0x80000000
   14ac4:	movw	r1, #0
   14ac8:	cmp	r1, r0
   14acc:	blt	14b80 <__assert_fail@plt+0x342c>
   14ad0:	b	14b94 <__assert_fail@plt+0x3440>
   14ad4:	ldr	r0, [fp, #-8]
   14ad8:	ldr	r0, [r0]
   14adc:	movw	r1, #0
   14ae0:	cmp	r1, r0
   14ae4:	bge	14b94 <__assert_fail@plt+0x3440>
   14ae8:	ldr	r0, [pc, #2032]	; 152e0 <__assert_fail@plt+0x3b8c>
   14aec:	ldr	r1, [fp, #-8]
   14af0:	ldr	r1, [r1]
   14af4:	sub	r1, r1, #1
   14af8:	cmp	r0, r1
   14afc:	blt	14b80 <__assert_fail@plt+0x342c>
   14b00:	b	14b94 <__assert_fail@plt+0x3440>
   14b04:	ldr	r0, [pc, #2016]	; 152ec <__assert_fail@plt+0x3b98>
   14b08:	ldr	r1, [fp, #-8]
   14b0c:	ldr	r1, [r1]
   14b10:	cmp	r0, r1
   14b14:	blt	14b80 <__assert_fail@plt+0x342c>
   14b18:	b	14b94 <__assert_fail@plt+0x3440>
   14b1c:	b	14b24 <__assert_fail@plt+0x33d0>
   14b20:	b	14b94 <__assert_fail@plt+0x3440>
   14b24:	ldr	r0, [fp, #-8]
   14b28:	ldr	r0, [r0]
   14b2c:	cmp	r0, #0
   14b30:	bge	14b6c <__assert_fail@plt+0x3418>
   14b34:	ldr	r0, [fp, #-8]
   14b38:	ldr	r0, [r0]
   14b3c:	cmn	r0, #1
   14b40:	bne	14b50 <__assert_fail@plt+0x33fc>
   14b44:	b	14b48 <__assert_fail@plt+0x33f4>
   14b48:	b	14b94 <__assert_fail@plt+0x3440>
   14b4c:	b	14b94 <__assert_fail@plt+0x3440>
   14b50:	ldr	r0, [pc, #1936]	; 152e8 <__assert_fail@plt+0x3b94>
   14b54:	ldr	r1, [fp, #-8]
   14b58:	ldr	r1, [r1]
   14b5c:	sdiv	r0, r0, r1
   14b60:	cmp	r0, #2
   14b64:	blt	14b80 <__assert_fail@plt+0x342c>
   14b68:	b	14b94 <__assert_fail@plt+0x3440>
   14b6c:	ldr	r0, [pc, #1904]	; 152e4 <__assert_fail@plt+0x3b90>
   14b70:	ldr	r1, [fp, #-8]
   14b74:	ldr	r1, [r1]
   14b78:	cmp	r0, r1
   14b7c:	bge	14b94 <__assert_fail@plt+0x3440>
   14b80:	ldr	r0, [fp, #-8]
   14b84:	ldr	r0, [r0]
   14b88:	lsl	r0, r0, #1
   14b8c:	str	r0, [fp, #-12]
   14b90:	b	15288 <__assert_fail@plt+0x3b34>
   14b94:	ldr	r0, [fp, #-8]
   14b98:	ldr	r0, [r0]
   14b9c:	lsl	r0, r0, #1
   14ba0:	str	r0, [fp, #-12]
   14ba4:	b	1528c <__assert_fail@plt+0x3b38>
   14ba8:	b	14c70 <__assert_fail@plt+0x351c>
   14bac:	ldr	r0, [fp, #-8]
   14bb0:	ldr	r0, [r0]
   14bb4:	cmp	r0, #0
   14bb8:	bge	14bf8 <__assert_fail@plt+0x34a4>
   14bbc:	b	14bd8 <__assert_fail@plt+0x3484>
   14bc0:	ldr	r0, [pc, #1816]	; 152e0 <__assert_fail@plt+0x3b8c>
   14bc4:	ldr	r1, [fp, #-8]
   14bc8:	ldr	r1, [r1]
   14bcc:	cmp	r1, r0
   14bd0:	bcc	14ce0 <__assert_fail@plt+0x358c>
   14bd4:	b	14cf4 <__assert_fail@plt+0x35a0>
   14bd8:	ldr	r0, [fp, #-8]
   14bdc:	ldr	r0, [r0]
   14be0:	mvn	r1, #0
   14be4:	sub	r0, r1, r0
   14be8:	movw	r1, #1
   14bec:	cmp	r1, r0
   14bf0:	bls	14ce0 <__assert_fail@plt+0x358c>
   14bf4:	b	14cf4 <__assert_fail@plt+0x35a0>
   14bf8:	b	14bfc <__assert_fail@plt+0x34a8>
   14bfc:	b	14c58 <__assert_fail@plt+0x3504>
   14c00:	b	14c58 <__assert_fail@plt+0x3504>
   14c04:	b	14c58 <__assert_fail@plt+0x3504>
   14c08:	b	14c0c <__assert_fail@plt+0x34b8>
   14c0c:	ldr	r0, [fp, #-8]
   14c10:	ldr	r0, [r0]
   14c14:	add	r0, r0, #0
   14c18:	movw	r1, #0
   14c1c:	cmp	r1, r0
   14c20:	blt	14ce0 <__assert_fail@plt+0x358c>
   14c24:	b	14cf4 <__assert_fail@plt+0x35a0>
   14c28:	ldr	r0, [fp, #-8]
   14c2c:	ldr	r0, [r0]
   14c30:	movw	r1, #0
   14c34:	cmp	r1, r0
   14c38:	bge	14cf4 <__assert_fail@plt+0x35a0>
   14c3c:	ldr	r0, [fp, #-8]
   14c40:	ldr	r0, [r0]
   14c44:	sub	r0, r0, #1
   14c48:	mvn	r1, #0
   14c4c:	cmp	r1, r0
   14c50:	blt	14ce0 <__assert_fail@plt+0x358c>
   14c54:	b	14cf4 <__assert_fail@plt+0x35a0>
   14c58:	ldr	r0, [fp, #-8]
   14c5c:	ldr	r0, [r0]
   14c60:	movw	r1, #0
   14c64:	cmp	r1, r0
   14c68:	blt	14ce0 <__assert_fail@plt+0x358c>
   14c6c:	b	14cf4 <__assert_fail@plt+0x35a0>
   14c70:	b	14c78 <__assert_fail@plt+0x3524>
   14c74:	b	14cf4 <__assert_fail@plt+0x35a0>
   14c78:	ldr	r0, [fp, #-8]
   14c7c:	ldr	r0, [r0]
   14c80:	cmp	r0, #0
   14c84:	bge	14ccc <__assert_fail@plt+0x3578>
   14c88:	b	14c8c <__assert_fail@plt+0x3538>
   14c8c:	b	14cb0 <__assert_fail@plt+0x355c>
   14c90:	b	14cb0 <__assert_fail@plt+0x355c>
   14c94:	ldr	r0, [fp, #-8]
   14c98:	ldr	r0, [r0]
   14c9c:	cmn	r0, #1
   14ca0:	bne	14cb0 <__assert_fail@plt+0x355c>
   14ca4:	b	14ca8 <__assert_fail@plt+0x3554>
   14ca8:	b	14ce0 <__assert_fail@plt+0x358c>
   14cac:	b	14ce0 <__assert_fail@plt+0x358c>
   14cb0:	ldr	r0, [fp, #-8]
   14cb4:	ldr	r0, [r0]
   14cb8:	movw	r1, #0
   14cbc:	sdiv	r0, r1, r0
   14cc0:	cmp	r0, #2
   14cc4:	blt	14ce0 <__assert_fail@plt+0x358c>
   14cc8:	b	14cf4 <__assert_fail@plt+0x35a0>
   14ccc:	ldr	r0, [pc, #1548]	; 152e0 <__assert_fail@plt+0x3b8c>
   14cd0:	ldr	r1, [fp, #-8]
   14cd4:	ldr	r1, [r1]
   14cd8:	cmp	r0, r1
   14cdc:	bcs	14cf4 <__assert_fail@plt+0x35a0>
   14ce0:	ldr	r0, [fp, #-8]
   14ce4:	ldr	r0, [r0]
   14ce8:	lsl	r0, r0, #1
   14cec:	str	r0, [fp, #-12]
   14cf0:	b	15288 <__assert_fail@plt+0x3b34>
   14cf4:	ldr	r0, [fp, #-8]
   14cf8:	ldr	r0, [r0]
   14cfc:	lsl	r0, r0, #1
   14d00:	str	r0, [fp, #-12]
   14d04:	b	1528c <__assert_fail@plt+0x3b38>
   14d08:	b	14d0c <__assert_fail@plt+0x35b8>
   14d0c:	b	14d10 <__assert_fail@plt+0x35bc>
   14d10:	b	14dcc <__assert_fail@plt+0x3678>
   14d14:	ldr	r0, [fp, #-8]
   14d18:	ldr	r0, [r0]
   14d1c:	cmp	r0, #0
   14d20:	bge	14d60 <__assert_fail@plt+0x360c>
   14d24:	b	14d28 <__assert_fail@plt+0x35d4>
   14d28:	ldr	r0, [pc, #1460]	; 152e4 <__assert_fail@plt+0x3b90>
   14d2c:	ldr	r1, [fp, #-8]
   14d30:	ldr	r1, [r1]
   14d34:	cmp	r1, r0
   14d38:	blt	14e30 <__assert_fail@plt+0x36dc>
   14d3c:	b	14e44 <__assert_fail@plt+0x36f0>
   14d40:	ldr	r0, [pc, #1448]	; 152f0 <__assert_fail@plt+0x3b9c>
   14d44:	ldr	r1, [fp, #-8]
   14d48:	ldr	r1, [r1]
   14d4c:	mvn	r2, #0
   14d50:	sub	r1, r2, r1
   14d54:	cmp	r0, r1
   14d58:	ble	14e30 <__assert_fail@plt+0x36dc>
   14d5c:	b	14e44 <__assert_fail@plt+0x36f0>
   14d60:	b	14db4 <__assert_fail@plt+0x3660>
   14d64:	b	14d68 <__assert_fail@plt+0x3614>
   14d68:	ldr	r0, [fp, #-8]
   14d6c:	ldr	r0, [r0]
   14d70:	add	r0, r0, #-2147483648	; 0x80000000
   14d74:	movw	r1, #0
   14d78:	cmp	r1, r0
   14d7c:	blt	14e30 <__assert_fail@plt+0x36dc>
   14d80:	b	14e44 <__assert_fail@plt+0x36f0>
   14d84:	ldr	r0, [fp, #-8]
   14d88:	ldr	r0, [r0]
   14d8c:	movw	r1, #0
   14d90:	cmp	r1, r0
   14d94:	bge	14e44 <__assert_fail@plt+0x36f0>
   14d98:	ldr	r0, [pc, #1344]	; 152e0 <__assert_fail@plt+0x3b8c>
   14d9c:	ldr	r1, [fp, #-8]
   14da0:	ldr	r1, [r1]
   14da4:	sub	r1, r1, #1
   14da8:	cmp	r0, r1
   14dac:	blt	14e30 <__assert_fail@plt+0x36dc>
   14db0:	b	14e44 <__assert_fail@plt+0x36f0>
   14db4:	ldr	r0, [pc, #1328]	; 152ec <__assert_fail@plt+0x3b98>
   14db8:	ldr	r1, [fp, #-8]
   14dbc:	ldr	r1, [r1]
   14dc0:	cmp	r0, r1
   14dc4:	blt	14e30 <__assert_fail@plt+0x36dc>
   14dc8:	b	14e44 <__assert_fail@plt+0x36f0>
   14dcc:	b	14dd4 <__assert_fail@plt+0x3680>
   14dd0:	b	14e44 <__assert_fail@plt+0x36f0>
   14dd4:	ldr	r0, [fp, #-8]
   14dd8:	ldr	r0, [r0]
   14ddc:	cmp	r0, #0
   14de0:	bge	14e1c <__assert_fail@plt+0x36c8>
   14de4:	ldr	r0, [fp, #-8]
   14de8:	ldr	r0, [r0]
   14dec:	cmn	r0, #1
   14df0:	bne	14e00 <__assert_fail@plt+0x36ac>
   14df4:	b	14df8 <__assert_fail@plt+0x36a4>
   14df8:	b	14e44 <__assert_fail@plt+0x36f0>
   14dfc:	b	14e44 <__assert_fail@plt+0x36f0>
   14e00:	ldr	r0, [pc, #1248]	; 152e8 <__assert_fail@plt+0x3b94>
   14e04:	ldr	r1, [fp, #-8]
   14e08:	ldr	r1, [r1]
   14e0c:	sdiv	r0, r0, r1
   14e10:	cmp	r0, #2
   14e14:	blt	14e30 <__assert_fail@plt+0x36dc>
   14e18:	b	14e44 <__assert_fail@plt+0x36f0>
   14e1c:	ldr	r0, [pc, #1216]	; 152e4 <__assert_fail@plt+0x3b90>
   14e20:	ldr	r1, [fp, #-8]
   14e24:	ldr	r1, [r1]
   14e28:	cmp	r0, r1
   14e2c:	bge	14e44 <__assert_fail@plt+0x36f0>
   14e30:	ldr	r0, [fp, #-8]
   14e34:	ldr	r0, [r0]
   14e38:	lsl	r0, r0, #1
   14e3c:	str	r0, [fp, #-12]
   14e40:	b	15288 <__assert_fail@plt+0x3b34>
   14e44:	ldr	r0, [fp, #-8]
   14e48:	ldr	r0, [r0]
   14e4c:	lsl	r0, r0, #1
   14e50:	str	r0, [fp, #-12]
   14e54:	b	1528c <__assert_fail@plt+0x3b38>
   14e58:	b	14f20 <__assert_fail@plt+0x37cc>
   14e5c:	ldr	r0, [fp, #-8]
   14e60:	ldr	r0, [r0]
   14e64:	cmp	r0, #0
   14e68:	bge	14ea8 <__assert_fail@plt+0x3754>
   14e6c:	b	14e88 <__assert_fail@plt+0x3734>
   14e70:	ldr	r0, [pc, #1128]	; 152e0 <__assert_fail@plt+0x3b8c>
   14e74:	ldr	r1, [fp, #-8]
   14e78:	ldr	r1, [r1]
   14e7c:	cmp	r1, r0
   14e80:	bcc	14f90 <__assert_fail@plt+0x383c>
   14e84:	b	14fa4 <__assert_fail@plt+0x3850>
   14e88:	ldr	r0, [fp, #-8]
   14e8c:	ldr	r0, [r0]
   14e90:	mvn	r1, #0
   14e94:	sub	r0, r1, r0
   14e98:	movw	r1, #1
   14e9c:	cmp	r1, r0
   14ea0:	bls	14f90 <__assert_fail@plt+0x383c>
   14ea4:	b	14fa4 <__assert_fail@plt+0x3850>
   14ea8:	b	14eac <__assert_fail@plt+0x3758>
   14eac:	b	14f08 <__assert_fail@plt+0x37b4>
   14eb0:	b	14f08 <__assert_fail@plt+0x37b4>
   14eb4:	b	14f08 <__assert_fail@plt+0x37b4>
   14eb8:	b	14ebc <__assert_fail@plt+0x3768>
   14ebc:	ldr	r0, [fp, #-8]
   14ec0:	ldr	r0, [r0]
   14ec4:	add	r0, r0, #0
   14ec8:	movw	r1, #0
   14ecc:	cmp	r1, r0
   14ed0:	blt	14f90 <__assert_fail@plt+0x383c>
   14ed4:	b	14fa4 <__assert_fail@plt+0x3850>
   14ed8:	ldr	r0, [fp, #-8]
   14edc:	ldr	r0, [r0]
   14ee0:	movw	r1, #0
   14ee4:	cmp	r1, r0
   14ee8:	bge	14fa4 <__assert_fail@plt+0x3850>
   14eec:	ldr	r0, [fp, #-8]
   14ef0:	ldr	r0, [r0]
   14ef4:	sub	r0, r0, #1
   14ef8:	mvn	r1, #0
   14efc:	cmp	r1, r0
   14f00:	blt	14f90 <__assert_fail@plt+0x383c>
   14f04:	b	14fa4 <__assert_fail@plt+0x3850>
   14f08:	ldr	r0, [fp, #-8]
   14f0c:	ldr	r0, [r0]
   14f10:	movw	r1, #0
   14f14:	cmp	r1, r0
   14f18:	blt	14f90 <__assert_fail@plt+0x383c>
   14f1c:	b	14fa4 <__assert_fail@plt+0x3850>
   14f20:	b	14f28 <__assert_fail@plt+0x37d4>
   14f24:	b	14fa4 <__assert_fail@plt+0x3850>
   14f28:	ldr	r0, [fp, #-8]
   14f2c:	ldr	r0, [r0]
   14f30:	cmp	r0, #0
   14f34:	bge	14f7c <__assert_fail@plt+0x3828>
   14f38:	b	14f3c <__assert_fail@plt+0x37e8>
   14f3c:	b	14f60 <__assert_fail@plt+0x380c>
   14f40:	b	14f60 <__assert_fail@plt+0x380c>
   14f44:	ldr	r0, [fp, #-8]
   14f48:	ldr	r0, [r0]
   14f4c:	cmn	r0, #1
   14f50:	bne	14f60 <__assert_fail@plt+0x380c>
   14f54:	b	14f58 <__assert_fail@plt+0x3804>
   14f58:	b	14f90 <__assert_fail@plt+0x383c>
   14f5c:	b	14f90 <__assert_fail@plt+0x383c>
   14f60:	ldr	r0, [fp, #-8]
   14f64:	ldr	r0, [r0]
   14f68:	movw	r1, #0
   14f6c:	sdiv	r0, r1, r0
   14f70:	cmp	r0, #2
   14f74:	blt	14f90 <__assert_fail@plt+0x383c>
   14f78:	b	14fa4 <__assert_fail@plt+0x3850>
   14f7c:	ldr	r0, [pc, #860]	; 152e0 <__assert_fail@plt+0x3b8c>
   14f80:	ldr	r1, [fp, #-8]
   14f84:	ldr	r1, [r1]
   14f88:	cmp	r0, r1
   14f8c:	bcs	14fa4 <__assert_fail@plt+0x3850>
   14f90:	ldr	r0, [fp, #-8]
   14f94:	ldr	r0, [r0]
   14f98:	lsl	r0, r0, #1
   14f9c:	str	r0, [fp, #-12]
   14fa0:	b	15288 <__assert_fail@plt+0x3b34>
   14fa4:	ldr	r0, [fp, #-8]
   14fa8:	ldr	r0, [r0]
   14fac:	lsl	r0, r0, #1
   14fb0:	str	r0, [fp, #-12]
   14fb4:	b	1528c <__assert_fail@plt+0x3b38>
   14fb8:	b	14fbc <__assert_fail@plt+0x3868>
   14fbc:	b	1507c <__assert_fail@plt+0x3928>
   14fc0:	ldr	r0, [fp, #-8]
   14fc4:	ldr	r0, [r0]
   14fc8:	cmp	r0, #0
   14fcc:	bge	15014 <__assert_fail@plt+0x38c0>
   14fd0:	b	14fd4 <__assert_fail@plt+0x3880>
   14fd4:	ldr	r0, [fp, #-8]
   14fd8:	ldr	r0, [r0]
   14fdc:	mvn	r1, #0
   14fe0:	subs	r1, r0, r1
   14fe4:	mvn	r2, #-1073741824	; 0xc0000000
   14fe8:	rscs	r0, r2, r0, asr #31
   14fec:	blt	15100 <__assert_fail@plt+0x39ac>
   14ff0:	b	15114 <__assert_fail@plt+0x39c0>
   14ff4:	ldr	r0, [fp, #-8]
   14ff8:	ldr	r0, [r0]
   14ffc:	mvn	r0, r0
   15000:	rsbs	r1, r0, #0
   15004:	mov	r2, #-1073741824	; 0xc0000000
   15008:	sbcs	r0, r2, r0, asr #31
   1500c:	blt	15100 <__assert_fail@plt+0x39ac>
   15010:	b	15114 <__assert_fail@plt+0x39c0>
   15014:	b	15060 <__assert_fail@plt+0x390c>
   15018:	b	1501c <__assert_fail@plt+0x38c8>
   1501c:	ldr	r0, [fp, #-8]
   15020:	ldr	r0, [r0]
   15024:	mov	r1, #-2147483648	; 0x80000000
   15028:	add	r1, r1, r0, asr #31
   1502c:	rsbs	r0, r0, #0
   15030:	rscs	r1, r1, #0
   15034:	blt	15100 <__assert_fail@plt+0x39ac>
   15038:	b	15114 <__assert_fail@plt+0x39c0>
   1503c:	ldr	r0, [fp, #-8]
   15040:	ldr	r0, [r0]
   15044:	movw	r1, #0
   15048:	cmp	r1, r0
   1504c:	bge	15114 <__assert_fail@plt+0x39c0>
   15050:	mov	r0, #0
   15054:	cmp	r0, #0
   15058:	bne	15100 <__assert_fail@plt+0x39ac>
   1505c:	b	15114 <__assert_fail@plt+0x39c0>
   15060:	ldr	r0, [fp, #-8]
   15064:	ldr	r0, [r0]
   15068:	rsbs	r1, r0, #0
   1506c:	mov	r2, #-1073741824	; 0xc0000000
   15070:	sbcs	r0, r2, r0, asr #31
   15074:	blt	15100 <__assert_fail@plt+0x39ac>
   15078:	b	15114 <__assert_fail@plt+0x39c0>
   1507c:	b	15084 <__assert_fail@plt+0x3930>
   15080:	b	15114 <__assert_fail@plt+0x39c0>
   15084:	ldr	r0, [fp, #-8]
   15088:	ldr	r0, [r0]
   1508c:	cmp	r0, #0
   15090:	bge	150e8 <__assert_fail@plt+0x3994>
   15094:	ldr	r0, [fp, #-8]
   15098:	ldr	r0, [r0]
   1509c:	cmn	r0, #1
   150a0:	bne	150b0 <__assert_fail@plt+0x395c>
   150a4:	b	150a8 <__assert_fail@plt+0x3954>
   150a8:	b	15114 <__assert_fail@plt+0x39c0>
   150ac:	b	15114 <__assert_fail@plt+0x39c0>
   150b0:	ldr	r0, [fp, #-8]
   150b4:	ldr	r0, [r0]
   150b8:	asr	r3, r0, #31
   150bc:	mov	r1, #0
   150c0:	mov	r2, #-2147483648	; 0x80000000
   150c4:	str	r0, [sp]
   150c8:	mov	r0, r1
   150cc:	mov	r1, r2
   150d0:	ldr	r2, [sp]
   150d4:	bl	3ba78 <__assert_fail@plt+0x2a324>
   150d8:	subs	r0, r0, #2
   150dc:	sbcs	r1, r1, #0
   150e0:	blt	15100 <__assert_fail@plt+0x39ac>
   150e4:	b	15114 <__assert_fail@plt+0x39c0>
   150e8:	ldr	r0, [fp, #-8]
   150ec:	ldr	r0, [r0]
   150f0:	asr	r0, r0, #31
   150f4:	cmp	r0, #1073741824	; 0x40000000
   150f8:	blt	15114 <__assert_fail@plt+0x39c0>
   150fc:	b	15100 <__assert_fail@plt+0x39ac>
   15100:	ldr	r0, [fp, #-8]
   15104:	ldr	r0, [r0]
   15108:	lsl	r0, r0, #1
   1510c:	str	r0, [fp, #-12]
   15110:	b	15288 <__assert_fail@plt+0x3b34>
   15114:	ldr	r0, [fp, #-8]
   15118:	ldr	r0, [r0]
   1511c:	lsl	r0, r0, #1
   15120:	str	r0, [fp, #-12]
   15124:	b	1528c <__assert_fail@plt+0x3b38>
   15128:	b	151ec <__assert_fail@plt+0x3a98>
   1512c:	ldr	r0, [fp, #-8]
   15130:	ldr	r0, [r0]
   15134:	cmp	r0, #0
   15138:	bge	15174 <__assert_fail@plt+0x3a20>
   1513c:	b	15160 <__assert_fail@plt+0x3a0c>
   15140:	ldr	r0, [fp, #-8]
   15144:	ldr	r0, [r0]
   15148:	mvn	r1, #0
   1514c:	subs	r1, r0, r1
   15150:	mvn	r2, #-2147483648	; 0x80000000
   15154:	rscs	r0, r2, r0, asr #31
   15158:	bcc	15260 <__assert_fail@plt+0x3b0c>
   1515c:	b	15274 <__assert_fail@plt+0x3b20>
   15160:	ldr	r0, [fp, #-8]
   15164:	ldr	r0, [r0]
   15168:	cmn	r0, #1
   1516c:	bne	15260 <__assert_fail@plt+0x3b0c>
   15170:	b	15274 <__assert_fail@plt+0x3b20>
   15174:	b	15178 <__assert_fail@plt+0x3a24>
   15178:	b	151d4 <__assert_fail@plt+0x3a80>
   1517c:	b	151d4 <__assert_fail@plt+0x3a80>
   15180:	b	151d4 <__assert_fail@plt+0x3a80>
   15184:	b	15188 <__assert_fail@plt+0x3a34>
   15188:	ldr	r0, [fp, #-8]
   1518c:	ldr	r0, [r0]
   15190:	add	r0, r0, #0
   15194:	movw	r1, #0
   15198:	cmp	r1, r0
   1519c:	blt	15260 <__assert_fail@plt+0x3b0c>
   151a0:	b	15274 <__assert_fail@plt+0x3b20>
   151a4:	ldr	r0, [fp, #-8]
   151a8:	ldr	r0, [r0]
   151ac:	movw	r1, #0
   151b0:	cmp	r1, r0
   151b4:	bge	15274 <__assert_fail@plt+0x3b20>
   151b8:	ldr	r0, [fp, #-8]
   151bc:	ldr	r0, [r0]
   151c0:	sub	r0, r0, #1
   151c4:	mvn	r1, #0
   151c8:	cmp	r1, r0
   151cc:	blt	15260 <__assert_fail@plt+0x3b0c>
   151d0:	b	15274 <__assert_fail@plt+0x3b20>
   151d4:	ldr	r0, [fp, #-8]
   151d8:	ldr	r0, [r0]
   151dc:	movw	r1, #0
   151e0:	cmp	r1, r0
   151e4:	blt	15260 <__assert_fail@plt+0x3b0c>
   151e8:	b	15274 <__assert_fail@plt+0x3b20>
   151ec:	b	151f4 <__assert_fail@plt+0x3aa0>
   151f0:	b	15274 <__assert_fail@plt+0x3b20>
   151f4:	ldr	r0, [fp, #-8]
   151f8:	ldr	r0, [r0]
   151fc:	cmp	r0, #0
   15200:	bge	15248 <__assert_fail@plt+0x3af4>
   15204:	b	15208 <__assert_fail@plt+0x3ab4>
   15208:	b	1522c <__assert_fail@plt+0x3ad8>
   1520c:	b	1522c <__assert_fail@plt+0x3ad8>
   15210:	ldr	r0, [fp, #-8]
   15214:	ldr	r0, [r0]
   15218:	cmn	r0, #1
   1521c:	bne	1522c <__assert_fail@plt+0x3ad8>
   15220:	b	15224 <__assert_fail@plt+0x3ad0>
   15224:	b	15260 <__assert_fail@plt+0x3b0c>
   15228:	b	15260 <__assert_fail@plt+0x3b0c>
   1522c:	ldr	r0, [fp, #-8]
   15230:	ldr	r0, [r0]
   15234:	movw	r1, #0
   15238:	sdiv	r0, r1, r0
   1523c:	cmp	r0, #2
   15240:	blt	15260 <__assert_fail@plt+0x3b0c>
   15244:	b	15274 <__assert_fail@plt+0x3b20>
   15248:	ldr	r0, [fp, #-8]
   1524c:	ldr	r0, [r0]
   15250:	asr	r0, r0, #31
   15254:	cmn	r0, #1
   15258:	bgt	15274 <__assert_fail@plt+0x3b20>
   1525c:	b	15260 <__assert_fail@plt+0x3b0c>
   15260:	ldr	r0, [fp, #-8]
   15264:	ldr	r0, [r0]
   15268:	lsl	r0, r0, #1
   1526c:	str	r0, [fp, #-12]
   15270:	b	15288 <__assert_fail@plt+0x3b34>
   15274:	ldr	r0, [fp, #-8]
   15278:	ldr	r0, [r0]
   1527c:	lsl	r0, r0, #1
   15280:	str	r0, [fp, #-12]
   15284:	b	1528c <__assert_fail@plt+0x3b38>
   15288:	bl	11850 <__assert_fail@plt+0xfc>
   1528c:	ldr	r0, [fp, #-8]
   15290:	bl	15618 <__assert_fail@plt+0x3ec4>
   15294:	b	143b8 <__assert_fail@plt+0x2c64>
   15298:	ldr	r0, [sp, #12]
   1529c:	cmp	r0, #0
   152a0:	beq	152b0 <__assert_fail@plt+0x3b5c>
   152a4:	ldr	r0, [fp, #-8]
   152a8:	bl	15680 <__assert_fail@plt+0x3f2c>
   152ac:	b	152b8 <__assert_fail@plt+0x3b64>
   152b0:	ldr	r0, [fp, #-8]
   152b4:	bl	15618 <__assert_fail@plt+0x3ec4>
   152b8:	ldr	r0, [sp, #12]
   152bc:	cmp	r0, #0
   152c0:	movw	r0, #0
   152c4:	movne	r0, #1
   152c8:	and	r0, r0, #1
   152cc:	strb	r0, [fp, #-1]
   152d0:	ldrb	r0, [fp, #-1]
   152d4:	and	r0, r0, #1
   152d8:	mov	sp, fp
   152dc:	pop	{fp, pc}
   152e0:	svcvc	0x00ffffff
   152e4:	svccc	0x00ffffff
   152e8:	andhi	r0, r0, r0
   152ec:	andgt	r0, r0, r0
   152f0:	andgt	r0, r0, r1
   152f4:			; <UNDEFINED> instruction: 0xffff8000
   152f8:			; <UNDEFINED> instruction: 0xffffc000
   152fc:			; <UNDEFINED> instruction: 0xffffc001
   15300:			; <UNDEFINED> instruction: 0xffff8001
   15304:	push	{fp, lr}
   15308:	mov	fp, sp
   1530c:	sub	sp, sp, #24
   15310:	str	r0, [fp, #-4]
   15314:	mov	r0, #48	; 0x30
   15318:	bl	31178 <__assert_fail@plt+0x1fa24>
   1531c:	str	r0, [fp, #-8]
   15320:	ldr	r0, [fp, #-8]
   15324:	mov	r1, #0
   15328:	str	r1, [r0]
   1532c:	ldr	r0, [fp, #-8]
   15330:	ldr	r2, [fp, #-4]
   15334:	mov	r3, sp
   15338:	mov	ip, #1
   1533c:	str	ip, [r3]
   15340:	mvn	r3, #0
   15344:	str	r0, [sp, #12]
   15348:	mov	r0, r1
   1534c:	ldr	ip, [sp, #12]
   15350:	str	r1, [sp, #8]
   15354:	mov	r1, ip
   15358:	bl	3142c <__assert_fail@plt+0x1fcd8>
   1535c:	ldr	r1, [fp, #-8]
   15360:	str	r0, [r1, #28]
   15364:	ldr	r0, [fp, #-8]
   15368:	ldr	r1, [sp, #8]
   1536c:	str	r1, [r0, #4]
   15370:	movw	r0, #58024	; 0xe2a8
   15374:	movt	r0, #4
   15378:	ldr	r2, [r0]
   1537c:	ldr	r0, [r0, #4]
   15380:	adds	r2, r2, #1
   15384:	adc	r0, r0, #0
   15388:	ldr	r3, [fp, #-8]
   1538c:	str	r2, [r3, #16]
   15390:	str	r0, [r3, #20]
   15394:	ldr	r3, [fp, #-8]
   15398:	str	r0, [r3, #12]
   1539c:	str	r2, [r3, #8]
   153a0:	ldr	r0, [fp, #-8]
   153a4:	movw	r2, #0
   153a8:	str	r2, [r0, #24]
   153ac:	ldr	r0, [fp, #-8]
   153b0:	str	r2, [r0, #36]	; 0x24
   153b4:	ldr	r0, [fp, #-8]
   153b8:	str	r2, [r0, #32]
   153bc:	ldr	r0, [fp, #-8]
   153c0:	str	r2, [r0, #40]	; 0x28
   153c4:	ldr	r0, [fp, #-8]
   153c8:	mov	sp, fp
   153cc:	pop	{fp, pc}
   153d0:	push	{fp, lr}
   153d4:	mov	fp, sp
   153d8:	sub	sp, sp, #24
   153dc:	str	r0, [fp, #-8]
   153e0:	str	r1, [sp, #12]
   153e4:	ldr	r0, [sp, #12]
   153e8:	cmp	r0, #0
   153ec:	bne	153fc <__assert_fail@plt+0x3ca8>
   153f0:	movw	r0, #0
   153f4:	str	r0, [fp, #-4]
   153f8:	b	15474 <__assert_fail@plt+0x3d20>
   153fc:	ldr	r1, [fp, #-8]
   15400:	ldr	r2, [sp, #12]
   15404:	movw	r0, #0
   15408:	bl	307d4 <__assert_fail@plt+0x1f080>
   1540c:	str	r0, [sp, #8]
   15410:	ldr	r0, [sp, #8]
   15414:	cmp	r0, #0
   15418:	bne	1542c <__assert_fail@plt+0x3cd8>
   1541c:	movw	r0, #58012	; 0xe29c
   15420:	movt	r0, #4
   15424:	movw	r1, #1
   15428:	strb	r1, [r0]
   1542c:	ldr	r0, [sp, #8]
   15430:	cmn	r0, #1
   15434:	bne	1546c <__assert_fail@plt+0x3d18>
   15438:	bl	11628 <__errno_location@plt>
   1543c:	ldr	r1, [r0]
   15440:	movw	r0, #48616	; 0xbde8
   15444:	movt	r0, #3
   15448:	str	r1, [sp, #4]
   1544c:	bl	115f8 <gettext@plt>
   15450:	movw	r1, #0
   15454:	str	r0, [sp]
   15458:	mov	r0, r1
   1545c:	ldr	r1, [sp, #4]
   15460:	ldr	r2, [sp]
   15464:	bl	11580 <error@plt>
   15468:	bl	11888 <__assert_fail@plt+0x134>
   1546c:	ldr	r0, [sp, #8]
   15470:	str	r0, [fp, #-4]
   15474:	ldr	r0, [fp, #-4]
   15478:	mov	sp, fp
   1547c:	pop	{fp, pc}
   15480:	push	{fp, lr}
   15484:	mov	fp, sp
   15488:	sub	sp, sp, #32
   1548c:	str	r0, [fp, #-8]
   15490:	ldr	r0, [fp, #-8]
   15494:	ldr	r0, [r0, #4]
   15498:	cmp	r0, #0
   1549c:	bne	154ac <__assert_fail@plt+0x3d58>
   154a0:	movw	r0, #0
   154a4:	str	r0, [fp, #-4]
   154a8:	b	1560c <__assert_fail@plt+0x3eb8>
   154ac:	movw	r0, #0
   154b0:	str	r0, [sp, #16]
   154b4:	ldr	r0, [fp, #-8]
   154b8:	ldr	r0, [r0, #28]
   154bc:	str	r0, [fp, #-12]
   154c0:	ldr	r0, [fp, #-12]
   154c4:	ldr	r1, [fp, #-8]
   154c8:	ldr	r1, [r1, #4]
   154cc:	add	r0, r0, r1
   154d0:	str	r0, [sp, #8]
   154d4:	ldr	r0, [sp, #8]
   154d8:	movw	r1, #10
   154dc:	strb	r1, [r0]
   154e0:	ldr	r0, [fp, #-12]
   154e4:	movw	r1, #10
   154e8:	bl	11514 <rawmemchr@plt>
   154ec:	str	r0, [sp, #4]
   154f0:	ldr	r0, [sp, #4]
   154f4:	ldr	r1, [sp, #8]
   154f8:	cmp	r0, r1
   154fc:	bne	15504 <__assert_fail@plt+0x3db0>
   15500:	b	15544 <__assert_fail@plt+0x3df0>
   15504:	ldr	r0, [sp, #4]
   15508:	ldr	r1, [fp, #-12]
   1550c:	sub	r0, r0, r1
   15510:	add	r0, r0, #1
   15514:	str	r0, [sp, #12]
   15518:	ldr	r0, [fp, #-8]
   1551c:	ldr	r1, [fp, #-12]
   15520:	ldr	r2, [sp, #12]
   15524:	bl	15718 <__assert_fail@plt+0x3fc4>
   15528:	ldr	r0, [sp, #4]
   1552c:	add	r0, r0, #1
   15530:	str	r0, [fp, #-12]
   15534:	ldr	r0, [sp, #16]
   15538:	add	r0, r0, #1
   1553c:	str	r0, [sp, #16]
   15540:	b	154e0 <__assert_fail@plt+0x3d8c>
   15544:	ldr	r0, [sp, #8]
   15548:	ldr	r1, [fp, #-12]
   1554c:	sub	r0, r0, r1
   15550:	str	r0, [sp]
   15554:	ldr	r0, [sp]
   15558:	cmp	r0, #0
   1555c:	beq	155ac <__assert_fail@plt+0x3e58>
   15560:	movw	r0, #58012	; 0xe29c
   15564:	movt	r0, #4
   15568:	ldrb	r0, [r0]
   1556c:	tst	r0, #1
   15570:	beq	15594 <__assert_fail@plt+0x3e40>
   15574:	ldr	r0, [fp, #-8]
   15578:	ldr	r1, [fp, #-12]
   1557c:	ldr	r2, [sp]
   15580:	bl	15718 <__assert_fail@plt+0x3fc4>
   15584:	ldr	r0, [sp, #16]
   15588:	add	r0, r0, #1
   1558c:	str	r0, [sp, #16]
   15590:	b	155a8 <__assert_fail@plt+0x3e54>
   15594:	ldr	r0, [fp, #-12]
   15598:	ldr	r1, [sp]
   1559c:	bl	33de8 <__assert_fail@plt+0x22694>
   155a0:	ldr	r1, [sp]
   155a4:	bl	157f0 <__assert_fail@plt+0x409c>
   155a8:	b	155ac <__assert_fail@plt+0x3e58>
   155ac:	ldr	r0, [sp, #16]
   155b0:	ldr	r1, [fp, #-8]
   155b4:	str	r0, [r1, #24]
   155b8:	movw	r0, #58024	; 0xe2a8
   155bc:	movt	r0, #4
   155c0:	ldr	r1, [r0]
   155c4:	ldr	r2, [r0, #4]
   155c8:	adds	r1, r1, #1
   155cc:	adc	r2, r2, #0
   155d0:	ldr	r3, [fp, #-8]
   155d4:	str	r1, [r3, #8]
   155d8:	str	r2, [r3, #12]
   155dc:	ldr	r3, [fp, #-8]
   155e0:	str	r2, [r3, #20]
   155e4:	str	r1, [r3, #16]
   155e8:	ldr	r1, [sp, #16]
   155ec:	ldr	r2, [r0]
   155f0:	ldr	r3, [r0, #4]
   155f4:	adds	r2, r2, r1
   155f8:	adc	r1, r3, r1, asr #31
   155fc:	str	r2, [r0]
   15600:	str	r1, [r0, #4]
   15604:	ldr	r0, [sp, #16]
   15608:	str	r0, [fp, #-4]
   1560c:	ldr	r0, [fp, #-4]
   15610:	mov	sp, fp
   15614:	pop	{fp, pc}
   15618:	push	{fp, lr}
   1561c:	mov	fp, sp
   15620:	sub	sp, sp, #16
   15624:	str	r0, [fp, #-4]
   15628:	ldr	r0, [fp, #-4]
   1562c:	ldr	r0, [r0, #32]
   15630:	str	r0, [sp, #8]
   15634:	ldr	r0, [sp, #8]
   15638:	movw	r1, #0
   1563c:	cmp	r0, r1
   15640:	beq	15664 <__assert_fail@plt+0x3f10>
   15644:	ldr	r0, [sp, #8]
   15648:	ldr	r0, [r0, #652]	; 0x28c
   1564c:	str	r0, [sp, #4]
   15650:	ldr	r0, [sp, #8]
   15654:	bl	15f68 <__assert_fail@plt+0x4814>
   15658:	ldr	r0, [sp, #4]
   1565c:	str	r0, [sp, #8]
   15660:	b	15634 <__assert_fail@plt+0x3ee0>
   15664:	ldr	r0, [fp, #-4]
   15668:	ldr	r0, [r0, #28]
   1566c:	bl	15f68 <__assert_fail@plt+0x4814>
   15670:	ldr	r0, [fp, #-4]
   15674:	bl	15f68 <__assert_fail@plt+0x4814>
   15678:	mov	sp, fp
   1567c:	pop	{fp, pc}
   15680:	sub	sp, sp, #8
   15684:	str	r0, [sp, #4]
   15688:	ldr	r0, [sp, #4]
   1568c:	movw	r1, #0
   15690:	str	r1, [r0, #40]	; 0x28
   15694:	ldr	r0, [sp, #4]
   15698:	ldr	r0, [r0, #32]
   1569c:	ldr	r2, [sp, #4]
   156a0:	str	r0, [r2, #36]	; 0x24
   156a4:	movw	r0, #58008	; 0xe298
   156a8:	movt	r0, #4
   156ac:	ldr	r0, [r0]
   156b0:	cmp	r0, r1
   156b4:	bne	156cc <__assert_fail@plt+0x3f78>
   156b8:	ldr	r0, [sp, #4]
   156bc:	movw	r1, #58008	; 0xe298
   156c0:	movt	r1, #4
   156c4:	str	r0, [r1]
   156c8:	b	15710 <__assert_fail@plt+0x3fbc>
   156cc:	movw	r0, #58008	; 0xe298
   156d0:	movt	r0, #4
   156d4:	ldr	r0, [r0]
   156d8:	str	r0, [sp]
   156dc:	ldr	r0, [sp]
   156e0:	ldr	r0, [r0, #40]	; 0x28
   156e4:	movw	r1, #0
   156e8:	cmp	r0, r1
   156ec:	beq	15704 <__assert_fail@plt+0x3fb0>
   156f0:	b	156f4 <__assert_fail@plt+0x3fa0>
   156f4:	ldr	r0, [sp]
   156f8:	ldr	r0, [r0, #40]	; 0x28
   156fc:	str	r0, [sp]
   15700:	b	156dc <__assert_fail@plt+0x3f88>
   15704:	ldr	r0, [sp, #4]
   15708:	ldr	r1, [sp]
   1570c:	str	r0, [r1, #40]	; 0x28
   15710:	add	sp, sp, #8
   15714:	bx	lr
   15718:	push	{fp, lr}
   1571c:	mov	fp, sp
   15720:	sub	sp, sp, #16
   15724:	str	r0, [fp, #-4]
   15728:	str	r1, [sp, #8]
   1572c:	str	r2, [sp, #4]
   15730:	ldr	r0, [fp, #-4]
   15734:	ldr	r0, [r0, #32]
   15738:	movw	r1, #0
   1573c:	cmp	r0, r1
   15740:	bne	15758 <__assert_fail@plt+0x4004>
   15744:	bl	1583c <__assert_fail@plt+0x40e8>
   15748:	ldr	r1, [fp, #-4]
   1574c:	str	r0, [r1, #36]	; 0x24
   15750:	ldr	r1, [fp, #-4]
   15754:	str	r0, [r1, #32]
   15758:	ldr	r0, [fp, #-4]
   1575c:	ldr	r0, [r0, #36]	; 0x24
   15760:	ldr	r0, [r0]
   15764:	cmp	r0, #80	; 0x50
   15768:	bne	15790 <__assert_fail@plt+0x403c>
   1576c:	bl	1583c <__assert_fail@plt+0x40e8>
   15770:	ldr	r1, [fp, #-4]
   15774:	ldr	r1, [r1, #36]	; 0x24
   15778:	str	r0, [r1, #652]	; 0x28c
   1577c:	ldr	r0, [fp, #-4]
   15780:	ldr	r0, [r0, #36]	; 0x24
   15784:	ldr	r0, [r0, #652]	; 0x28c
   15788:	ldr	r1, [fp, #-4]
   1578c:	str	r0, [r1, #36]	; 0x24
   15790:	ldr	r0, [fp, #-4]
   15794:	ldr	r0, [r0, #36]	; 0x24
   15798:	str	r0, [sp]
   1579c:	ldr	r0, [sp, #8]
   157a0:	ldr	r1, [sp]
   157a4:	ldr	r2, [r1, #4]
   157a8:	add	r1, r1, r2, lsl #3
   157ac:	str	r0, [r1, #16]
   157b0:	ldr	r0, [sp, #4]
   157b4:	ldr	r1, [sp]
   157b8:	add	r2, r1, #12
   157bc:	ldr	r1, [r1, #4]
   157c0:	add	r1, r2, r1, lsl #3
   157c4:	str	r0, [r1]
   157c8:	ldr	r0, [sp]
   157cc:	ldr	r1, [r0]
   157d0:	add	r1, r1, #1
   157d4:	str	r1, [r0]
   157d8:	ldr	r0, [sp]
   157dc:	ldr	r1, [r0, #4]
   157e0:	add	r1, r1, #1
   157e4:	str	r1, [r0, #4]
   157e8:	mov	sp, fp
   157ec:	pop	{fp, pc}
   157f0:	push	{fp, lr}
   157f4:	mov	fp, sp
   157f8:	sub	sp, sp, #8
   157fc:	str	r0, [sp, #4]
   15800:	str	r1, [sp]
   15804:	movw	r0, #58020	; 0xe2a4
   15808:	movt	r0, #4
   1580c:	ldr	r0, [r0]
   15810:	bl	15f68 <__assert_fail@plt+0x4814>
   15814:	ldr	r0, [sp, #4]
   15818:	movw	r1, #58020	; 0xe2a4
   1581c:	movt	r1, #4
   15820:	str	r0, [r1]
   15824:	ldr	r0, [sp]
   15828:	movw	r1, #58016	; 0xe2a0
   1582c:	movt	r1, #4
   15830:	str	r0, [r1]
   15834:	mov	sp, fp
   15838:	pop	{fp, pc}
   1583c:	push	{fp, lr}
   15840:	mov	fp, sp
   15844:	sub	sp, sp, #8
   15848:	movw	r0, #656	; 0x290
   1584c:	bl	31178 <__assert_fail@plt+0x1fa24>
   15850:	str	r0, [sp, #4]
   15854:	ldr	r0, [sp, #4]
   15858:	movw	r1, #0
   1585c:	str	r1, [r0, #652]	; 0x28c
   15860:	ldr	r0, [sp, #4]
   15864:	bl	15874 <__assert_fail@plt+0x4120>
   15868:	ldr	r0, [sp, #4]
   1586c:	mov	sp, fp
   15870:	pop	{fp, pc}
   15874:	sub	sp, sp, #4
   15878:	str	r0, [sp]
   1587c:	ldr	r0, [sp]
   15880:	movw	r1, #0
   15884:	str	r1, [r0]
   15888:	ldr	r0, [sp]
   1588c:	str	r1, [r0, #4]
   15890:	ldr	r0, [sp]
   15894:	str	r1, [r0, #8]
   15898:	add	sp, sp, #4
   1589c:	bx	lr
   158a0:	push	{fp, lr}
   158a4:	mov	fp, sp
   158a8:	sub	sp, sp, #16
   158ac:	movw	r0, #58008	; 0xe298
   158b0:	movt	r0, #4
   158b4:	ldr	r0, [r0]
   158b8:	movw	r1, #0
   158bc:	cmp	r0, r1
   158c0:	bne	15900 <__assert_fail@plt+0x41ac>
   158c4:	bl	14350 <__assert_fail@plt+0x2bfc>
   158c8:	tst	r0, #1
   158cc:	bne	15900 <__assert_fail@plt+0x41ac>
   158d0:	bl	11628 <__errno_location@plt>
   158d4:	ldr	r1, [r0]
   158d8:	movw	r0, #50781	; 0xc65d
   158dc:	movt	r0, #3
   158e0:	str	r1, [fp, #-4]
   158e4:	bl	115f8 <gettext@plt>
   158e8:	movw	r1, #1
   158ec:	str	r0, [sp, #8]
   158f0:	mov	r0, r1
   158f4:	ldr	r1, [fp, #-4]
   158f8:	ldr	r2, [sp, #8]
   158fc:	bl	11580 <error@plt>
   15900:	movw	r0, #58008	; 0xe298
   15904:	movt	r0, #4
   15908:	ldr	r0, [r0]
   1590c:	ldr	r1, [r0, #16]
   15910:	ldr	r0, [r0, #20]
   15914:	str	r0, [sp, #4]
   15918:	mov	r0, r1
   1591c:	ldr	r1, [sp, #4]
   15920:	mov	sp, fp
   15924:	pop	{fp, pc}
   15928:	push	{fp, lr}
   1592c:	mov	fp, sp
   15930:	sub	sp, sp, #8
   15934:	movw	r0, #58000	; 0xe290
   15938:	movt	r0, #4
   1593c:	ldr	r1, [r0]
   15940:	ldr	r0, [r0, #4]
   15944:	adds	r1, r1, #1
   15948:	adc	r0, r0, #0
   1594c:	str	r0, [sp, #4]
   15950:	mov	r0, r1
   15954:	ldr	r1, [sp, #4]
   15958:	bl	13c64 <__assert_fail@plt+0x2510>
   1595c:	movw	r1, #0
   15960:	cmp	r0, r1
   15964:	movw	r0, #0
   15968:	moveq	r0, #1
   1596c:	and	r0, r0, #1
   15970:	mov	sp, fp
   15974:	pop	{fp, pc}
   15978:	push	{fp, lr}
   1597c:	mov	fp, sp
   15980:	sub	sp, sp, #72	; 0x48
   15984:	str	r0, [fp, #-4]
   15988:	str	r3, [fp, #-12]
   1598c:	str	r2, [fp, #-16]
   15990:	movw	r0, #57784	; 0xe1b8
   15994:	movt	r0, #4
   15998:	ldr	r0, [r0]
   1599c:	movw	r1, #50799	; 0xc66f
   159a0:	movt	r1, #3
   159a4:	str	r0, [sp, #28]
   159a8:	mov	r0, r1
   159ac:	bl	115f8 <gettext@plt>
   159b0:	movw	r1, #58044	; 0xe2bc
   159b4:	movt	r1, #4
   159b8:	ldr	r2, [r1]
   159bc:	ldr	r1, [fp, #-4]
   159c0:	ldr	r3, [r1, #8]
   159c4:	ldr	r1, [r1, #12]
   159c8:	add	ip, sp, #35	; 0x23
   159cc:	str	r0, [sp, #24]
   159d0:	mov	r0, r3
   159d4:	str	r2, [sp, #20]
   159d8:	mov	r2, ip
   159dc:	bl	160b0 <__assert_fail@plt+0x495c>
   159e0:	bl	1883c <__assert_fail@plt+0x70e8>
   159e4:	ldr	r1, [sp, #28]
   159e8:	str	r0, [sp, #16]
   159ec:	mov	r0, r1
   159f0:	ldr	r1, [sp, #24]
   159f4:	ldr	r2, [sp, #20]
   159f8:	ldr	r3, [sp, #16]
   159fc:	bl	1161c <fprintf@plt>
   15a00:	ldr	r1, [fp, #-16]
   15a04:	ldr	r2, [fp, #-12]
   15a08:	orr	r1, r1, r2
   15a0c:	cmp	r1, #0
   15a10:	beq	15a78 <__assert_fail@plt+0x4324>
   15a14:	b	15a18 <__assert_fail@plt+0x42c4>
   15a18:	add	r2, sp, #35	; 0x23
   15a1c:	movw	r0, #57784	; 0xe1b8
   15a20:	movt	r0, #4
   15a24:	ldr	r0, [r0]
   15a28:	movw	r1, #50762	; 0xc64a
   15a2c:	movt	r1, #3
   15a30:	str	r0, [sp, #12]
   15a34:	mov	r0, r1
   15a38:	str	r2, [sp, #8]
   15a3c:	bl	115f8 <gettext@plt>
   15a40:	ldr	r1, [fp, #-16]
   15a44:	ldr	r2, [fp, #-12]
   15a48:	str	r0, [sp, #4]
   15a4c:	mov	r0, r1
   15a50:	mov	r1, r2
   15a54:	ldr	r2, [sp, #8]
   15a58:	bl	160b0 <__assert_fail@plt+0x495c>
   15a5c:	ldr	r1, [sp, #12]
   15a60:	str	r0, [sp]
   15a64:	mov	r0, r1
   15a68:	ldr	r1, [sp, #4]
   15a6c:	ldr	r2, [sp]
   15a70:	bl	1161c <fprintf@plt>
   15a74:	b	15a90 <__assert_fail@plt+0x433c>
   15a78:	movw	r0, #57784	; 0xe1b8
   15a7c:	movt	r0, #4
   15a80:	ldr	r0, [r0]
   15a84:	movw	r1, #49862	; 0xc2c6
   15a88:	movt	r1, #3
   15a8c:	bl	1161c <fprintf@plt>
   15a90:	bl	11888 <__assert_fail@plt+0x134>
   15a94:	sub	sp, sp, #4
   15a98:	str	r0, [sp]
   15a9c:	ldr	r0, [sp]
   15aa0:	movw	r1, #58036	; 0xe2b4
   15aa4:	movt	r1, #4
   15aa8:	str	r0, [r1]
   15aac:	add	sp, sp, #4
   15ab0:	bx	lr
   15ab4:	sub	sp, sp, #4
   15ab8:	and	r0, r0, #1
   15abc:	strb	r0, [sp, #3]
   15ac0:	ldrb	r0, [sp, #3]
   15ac4:	and	r0, r0, #1
   15ac8:	movw	r1, #58040	; 0xe2b8
   15acc:	movt	r1, #4
   15ad0:	strb	r0, [r1]
   15ad4:	add	sp, sp, #4
   15ad8:	bx	lr
   15adc:	push	{fp, lr}
   15ae0:	mov	fp, sp
   15ae4:	sub	sp, sp, #24
   15ae8:	movw	r0, #57788	; 0xe1bc
   15aec:	movt	r0, #4
   15af0:	ldr	r0, [r0]
   15af4:	bl	38338 <__assert_fail@plt+0x26be4>
   15af8:	cmp	r0, #0
   15afc:	beq	15bcc <__assert_fail@plt+0x4478>
   15b00:	movw	r0, #58040	; 0xe2b8
   15b04:	movt	r0, #4
   15b08:	ldrb	r0, [r0]
   15b0c:	tst	r0, #1
   15b10:	beq	15b24 <__assert_fail@plt+0x43d0>
   15b14:	bl	11628 <__errno_location@plt>
   15b18:	ldr	r0, [r0]
   15b1c:	cmp	r0, #32
   15b20:	beq	15bcc <__assert_fail@plt+0x4478>
   15b24:	movw	r0, #51511	; 0xc937
   15b28:	movt	r0, #3
   15b2c:	bl	115f8 <gettext@plt>
   15b30:	str	r0, [fp, #-4]
   15b34:	movw	r0, #58036	; 0xe2b4
   15b38:	movt	r0, #4
   15b3c:	ldr	r0, [r0]
   15b40:	movw	r1, #0
   15b44:	cmp	r0, r1
   15b48:	beq	15ba0 <__assert_fail@plt+0x444c>
   15b4c:	bl	11628 <__errno_location@plt>
   15b50:	ldr	r1, [r0]
   15b54:	movw	r0, #58036	; 0xe2b4
   15b58:	movt	r0, #4
   15b5c:	ldr	r0, [r0]
   15b60:	str	r1, [fp, #-8]
   15b64:	bl	185a0 <__assert_fail@plt+0x6e4c>
   15b68:	ldr	r1, [fp, #-4]
   15b6c:	movw	r2, #0
   15b70:	str	r0, [sp, #12]
   15b74:	mov	r0, r2
   15b78:	ldr	r2, [fp, #-8]
   15b7c:	str	r1, [sp, #8]
   15b80:	mov	r1, r2
   15b84:	movw	r2, #51523	; 0xc943
   15b88:	movt	r2, #3
   15b8c:	ldr	r3, [sp, #12]
   15b90:	ldr	ip, [sp, #8]
   15b94:	str	ip, [sp]
   15b98:	bl	11580 <error@plt>
   15b9c:	b	15bbc <__assert_fail@plt+0x4468>
   15ba0:	bl	11628 <__errno_location@plt>
   15ba4:	ldr	r1, [r0]
   15ba8:	ldr	r3, [fp, #-4]
   15bac:	movw	r0, #0
   15bb0:	movw	r2, #50403	; 0xc4e3
   15bb4:	movt	r2, #3
   15bb8:	bl	11580 <error@plt>
   15bbc:	movw	r0, #57696	; 0xe160
   15bc0:	movt	r0, #4
   15bc4:	ldr	r0, [r0]
   15bc8:	bl	1146c <_exit@plt>
   15bcc:	movw	r0, #57784	; 0xe1b8
   15bd0:	movt	r0, #4
   15bd4:	ldr	r0, [r0]
   15bd8:	bl	38338 <__assert_fail@plt+0x26be4>
   15bdc:	cmp	r0, #0
   15be0:	beq	15bf4 <__assert_fail@plt+0x44a0>
   15be4:	movw	r0, #57696	; 0xe160
   15be8:	movt	r0, #4
   15bec:	ldr	r0, [r0]
   15bf0:	bl	1146c <_exit@plt>
   15bf4:	mov	sp, fp
   15bf8:	pop	{fp, pc}
   15bfc:	push	{fp, lr}
   15c00:	mov	fp, sp
   15c04:	sub	sp, sp, #32
   15c08:	str	r0, [fp, #-8]
   15c0c:	movw	r0, #0
   15c10:	str	r0, [fp, #-12]
   15c14:	str	r0, [sp, #12]
   15c18:	ldr	r0, [fp, #-8]
   15c1c:	bl	11670 <fileno@plt>
   15c20:	str	r0, [sp, #16]
   15c24:	ldr	r0, [sp, #16]
   15c28:	cmp	r0, #0
   15c2c:	bge	15c40 <__assert_fail@plt+0x44ec>
   15c30:	ldr	r0, [fp, #-8]
   15c34:	bl	11694 <fclose@plt>
   15c38:	str	r0, [fp, #-4]
   15c3c:	b	15cdc <__assert_fail@plt+0x4588>
   15c40:	ldr	r0, [fp, #-8]
   15c44:	bl	115bc <__freading@plt>
   15c48:	cmp	r0, #0
   15c4c:	beq	15c84 <__assert_fail@plt+0x4530>
   15c50:	ldr	r0, [fp, #-8]
   15c54:	bl	11670 <fileno@plt>
   15c58:	mov	r1, sp
   15c5c:	mov	r2, #1
   15c60:	str	r2, [r1]
   15c64:	mov	r1, #0
   15c68:	mov	r2, r1
   15c6c:	mov	r3, r1
   15c70:	bl	11538 <lseek64@plt>
   15c74:	and	r0, r0, r1
   15c78:	cmn	r0, #1
   15c7c:	beq	15ca0 <__assert_fail@plt+0x454c>
   15c80:	b	15c84 <__assert_fail@plt+0x4530>
   15c84:	ldr	r0, [fp, #-8]
   15c88:	bl	15d90 <__assert_fail@plt+0x463c>
   15c8c:	cmp	r0, #0
   15c90:	beq	15ca0 <__assert_fail@plt+0x454c>
   15c94:	bl	11628 <__errno_location@plt>
   15c98:	ldr	r0, [r0]
   15c9c:	str	r0, [fp, #-12]
   15ca0:	ldr	r0, [fp, #-8]
   15ca4:	bl	11694 <fclose@plt>
   15ca8:	str	r0, [sp, #12]
   15cac:	ldr	r0, [fp, #-12]
   15cb0:	cmp	r0, #0
   15cb4:	beq	15cd4 <__assert_fail@plt+0x4580>
   15cb8:	ldr	r0, [fp, #-12]
   15cbc:	str	r0, [sp, #8]
   15cc0:	bl	11628 <__errno_location@plt>
   15cc4:	ldr	r1, [sp, #8]
   15cc8:	str	r1, [r0]
   15ccc:	mvn	r0, #0
   15cd0:	str	r0, [sp, #12]
   15cd4:	ldr	r0, [sp, #12]
   15cd8:	str	r0, [fp, #-4]
   15cdc:	ldr	r0, [fp, #-4]
   15ce0:	mov	sp, fp
   15ce4:	pop	{fp, pc}
   15ce8:	push	{fp, lr}
   15cec:	mov	fp, sp
   15cf0:	sub	sp, sp, #40	; 0x28
   15cf4:	str	r0, [fp, #-8]
   15cf8:	str	r1, [fp, #-12]
   15cfc:	str	r2, [fp, #-16]
   15d00:	str	r3, [sp, #20]
   15d04:	ldr	r0, [fp, #-12]
   15d08:	ldr	r1, [fp, #-16]
   15d0c:	ldr	r2, [sp, #20]
   15d10:	bl	1158c <open64@plt>
   15d14:	str	r0, [sp, #16]
   15d18:	ldr	r0, [sp, #16]
   15d1c:	ldr	r1, [fp, #-8]
   15d20:	cmp	r0, r1
   15d24:	beq	15d34 <__assert_fail@plt+0x45e0>
   15d28:	ldr	r0, [sp, #16]
   15d2c:	cmp	r0, #0
   15d30:	bge	15d40 <__assert_fail@plt+0x45ec>
   15d34:	ldr	r0, [sp, #16]
   15d38:	str	r0, [fp, #-4]
   15d3c:	b	15d84 <__assert_fail@plt+0x4630>
   15d40:	ldr	r0, [sp, #16]
   15d44:	ldr	r1, [fp, #-8]
   15d48:	bl	114e4 <dup2@plt>
   15d4c:	str	r0, [sp, #12]
   15d50:	bl	11628 <__errno_location@plt>
   15d54:	ldr	r0, [r0]
   15d58:	str	r0, [sp, #8]
   15d5c:	ldr	r0, [sp, #16]
   15d60:	bl	11748 <close@plt>
   15d64:	ldr	r1, [sp, #8]
   15d68:	str	r0, [sp, #4]
   15d6c:	str	r1, [sp]
   15d70:	bl	11628 <__errno_location@plt>
   15d74:	ldr	r1, [sp]
   15d78:	str	r1, [r0]
   15d7c:	ldr	r0, [sp, #12]
   15d80:	str	r0, [fp, #-4]
   15d84:	ldr	r0, [fp, #-4]
   15d88:	mov	sp, fp
   15d8c:	pop	{fp, pc}
   15d90:	push	{fp, lr}
   15d94:	mov	fp, sp
   15d98:	sub	sp, sp, #8
   15d9c:	str	r0, [sp]
   15da0:	ldr	r0, [sp]
   15da4:	movw	r1, #0
   15da8:	cmp	r0, r1
   15dac:	beq	15dc0 <__assert_fail@plt+0x466c>
   15db0:	ldr	r0, [sp]
   15db4:	bl	115bc <__freading@plt>
   15db8:	cmp	r0, #0
   15dbc:	bne	15dd0 <__assert_fail@plt+0x467c>
   15dc0:	ldr	r0, [sp]
   15dc4:	bl	11430 <fflush@plt>
   15dc8:	str	r0, [sp, #4]
   15dcc:	b	15de4 <__assert_fail@plt+0x4690>
   15dd0:	ldr	r0, [sp]
   15dd4:	bl	15df0 <__assert_fail@plt+0x469c>
   15dd8:	ldr	r0, [sp]
   15ddc:	bl	11430 <fflush@plt>
   15de0:	str	r0, [sp, #4]
   15de4:	ldr	r0, [sp, #4]
   15de8:	mov	sp, fp
   15dec:	pop	{fp, pc}
   15df0:	push	{fp, lr}
   15df4:	mov	fp, sp
   15df8:	sub	sp, sp, #8
   15dfc:	str	r0, [sp, #4]
   15e00:	ldr	r0, [sp, #4]
   15e04:	ldr	r0, [r0]
   15e08:	and	r0, r0, #256	; 0x100
   15e0c:	cmp	r0, #0
   15e10:	beq	15e34 <__assert_fail@plt+0x46e0>
   15e14:	ldr	r0, [sp, #4]
   15e18:	mov	r1, sp
   15e1c:	mov	r2, #1
   15e20:	str	r2, [r1]
   15e24:	mov	r1, #0
   15e28:	mov	r2, r1
   15e2c:	mov	r3, r1
   15e30:	bl	15fa8 <__assert_fail@plt+0x4854>
   15e34:	mov	sp, fp
   15e38:	pop	{fp, pc}
   15e3c:	push	{fp, lr}
   15e40:	mov	fp, sp
   15e44:	sub	sp, sp, #48	; 0x30
   15e48:	str	r0, [fp, #-8]
   15e4c:	str	r1, [fp, #-12]
   15e50:	ldr	r0, [fp, #-8]
   15e54:	ldr	r1, [fp, #-12]
   15e58:	bl	11700 <fopen64@plt>
   15e5c:	str	r0, [fp, #-16]
   15e60:	ldr	r0, [fp, #-16]
   15e64:	movw	r1, #0
   15e68:	cmp	r0, r1
   15e6c:	beq	15f54 <__assert_fail@plt+0x4800>
   15e70:	ldr	r0, [fp, #-16]
   15e74:	bl	11670 <fileno@plt>
   15e78:	str	r0, [fp, #-20]	; 0xffffffec
   15e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e80:	movw	r1, #0
   15e84:	cmp	r1, r0
   15e88:	bgt	15f50 <__assert_fail@plt+0x47fc>
   15e8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e90:	cmp	r0, #2
   15e94:	bgt	15f50 <__assert_fail@plt+0x47fc>
   15e98:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e9c:	bl	30884 <__assert_fail@plt+0x1f130>
   15ea0:	str	r0, [sp, #24]
   15ea4:	ldr	r0, [sp, #24]
   15ea8:	cmp	r0, #0
   15eac:	bge	15ee8 <__assert_fail@plt+0x4794>
   15eb0:	bl	11628 <__errno_location@plt>
   15eb4:	ldr	r0, [r0]
   15eb8:	str	r0, [sp, #20]
   15ebc:	ldr	r0, [fp, #-16]
   15ec0:	bl	15bfc <__assert_fail@plt+0x44a8>
   15ec4:	ldr	r1, [sp, #20]
   15ec8:	str	r0, [sp, #12]
   15ecc:	str	r1, [sp, #8]
   15ed0:	bl	11628 <__errno_location@plt>
   15ed4:	ldr	r1, [sp, #8]
   15ed8:	str	r1, [r0]
   15edc:	movw	r0, #0
   15ee0:	str	r0, [fp, #-4]
   15ee4:	b	15f5c <__assert_fail@plt+0x4808>
   15ee8:	ldr	r0, [fp, #-16]
   15eec:	bl	15bfc <__assert_fail@plt+0x44a8>
   15ef0:	cmp	r0, #0
   15ef4:	bne	15f14 <__assert_fail@plt+0x47c0>
   15ef8:	ldr	r0, [sp, #24]
   15efc:	ldr	r1, [fp, #-12]
   15f00:	bl	113ac <fdopen@plt>
   15f04:	str	r0, [fp, #-16]
   15f08:	movw	r1, #0
   15f0c:	cmp	r0, r1
   15f10:	bne	15f4c <__assert_fail@plt+0x47f8>
   15f14:	bl	11628 <__errno_location@plt>
   15f18:	ldr	r0, [r0]
   15f1c:	str	r0, [sp, #16]
   15f20:	ldr	r0, [sp, #24]
   15f24:	bl	11748 <close@plt>
   15f28:	ldr	r1, [sp, #16]
   15f2c:	str	r0, [sp, #4]
   15f30:	str	r1, [sp]
   15f34:	bl	11628 <__errno_location@plt>
   15f38:	ldr	r1, [sp]
   15f3c:	str	r1, [r0]
   15f40:	movw	r0, #0
   15f44:	str	r0, [fp, #-4]
   15f48:	b	15f5c <__assert_fail@plt+0x4808>
   15f4c:	b	15f50 <__assert_fail@plt+0x47fc>
   15f50:	b	15f54 <__assert_fail@plt+0x4800>
   15f54:	ldr	r0, [fp, #-16]
   15f58:	str	r0, [fp, #-4]
   15f5c:	ldr	r0, [fp, #-4]
   15f60:	mov	sp, fp
   15f64:	pop	{fp, pc}
   15f68:	push	{fp, lr}
   15f6c:	mov	fp, sp
   15f70:	sub	sp, sp, #16
   15f74:	str	r0, [fp, #-4]
   15f78:	bl	11628 <__errno_location@plt>
   15f7c:	ldr	r0, [r0]
   15f80:	str	r0, [sp, #8]
   15f84:	ldr	r0, [fp, #-4]
   15f88:	bl	11454 <free@plt>
   15f8c:	ldr	r0, [sp, #8]
   15f90:	str	r0, [sp, #4]
   15f94:	bl	11628 <__errno_location@plt>
   15f98:	ldr	r1, [sp, #4]
   15f9c:	str	r1, [r0]
   15fa0:	mov	sp, fp
   15fa4:	pop	{fp, pc}
   15fa8:	push	{fp, lr}
   15fac:	mov	fp, sp
   15fb0:	sub	sp, sp, #32
   15fb4:	ldr	r1, [fp, #8]
   15fb8:	str	r0, [fp, #-8]
   15fbc:	str	r3, [sp, #20]
   15fc0:	str	r2, [sp, #16]
   15fc4:	ldr	r0, [fp, #-8]
   15fc8:	ldr	r0, [r0, #8]
   15fcc:	ldr	r2, [fp, #-8]
   15fd0:	ldr	r2, [r2, #4]
   15fd4:	cmp	r0, r2
   15fd8:	bne	16084 <__assert_fail@plt+0x4930>
   15fdc:	ldr	r0, [fp, #-8]
   15fe0:	ldr	r0, [r0, #20]
   15fe4:	ldr	r1, [fp, #-8]
   15fe8:	ldr	r1, [r1, #16]
   15fec:	cmp	r0, r1
   15ff0:	bne	16084 <__assert_fail@plt+0x4930>
   15ff4:	ldr	r0, [fp, #-8]
   15ff8:	ldr	r0, [r0, #36]	; 0x24
   15ffc:	movw	r1, #0
   16000:	cmp	r0, r1
   16004:	bne	16084 <__assert_fail@plt+0x4930>
   16008:	ldr	r0, [fp, #-8]
   1600c:	bl	11670 <fileno@plt>
   16010:	ldr	r2, [sp, #16]
   16014:	ldr	r3, [sp, #20]
   16018:	ldr	r1, [fp, #8]
   1601c:	mov	ip, sp
   16020:	str	r1, [ip]
   16024:	bl	11538 <lseek64@plt>
   16028:	str	r1, [sp, #12]
   1602c:	str	r0, [sp, #8]
   16030:	ldr	r0, [sp, #8]
   16034:	ldr	r1, [sp, #12]
   16038:	and	r0, r0, r1
   1603c:	cmn	r0, #1
   16040:	bne	16054 <__assert_fail@plt+0x4900>
   16044:	b	16048 <__assert_fail@plt+0x48f4>
   16048:	mvn	r0, #0
   1604c:	str	r0, [fp, #-4]
   16050:	b	160a4 <__assert_fail@plt+0x4950>
   16054:	ldr	r0, [fp, #-8]
   16058:	ldr	r1, [r0]
   1605c:	bic	r1, r1, #16
   16060:	str	r1, [r0]
   16064:	ldr	r0, [sp, #8]
   16068:	ldr	r1, [sp, #12]
   1606c:	ldr	r2, [fp, #-8]
   16070:	str	r1, [r2, #84]	; 0x54
   16074:	str	r0, [r2, #80]	; 0x50
   16078:	movw	r0, #0
   1607c:	str	r0, [fp, #-4]
   16080:	b	160a4 <__assert_fail@plt+0x4950>
   16084:	ldr	r0, [fp, #-8]
   16088:	ldr	r2, [sp, #16]
   1608c:	ldr	r3, [sp, #20]
   16090:	ldr	r1, [fp, #8]
   16094:	mov	ip, sp
   16098:	str	r1, [ip]
   1609c:	bl	116a0 <fseeko64@plt>
   160a0:	str	r0, [fp, #-4]
   160a4:	ldr	r0, [fp, #-4]
   160a8:	mov	sp, fp
   160ac:	pop	{fp, pc}
   160b0:	push	{fp, lr}
   160b4:	mov	fp, sp
   160b8:	sub	sp, sp, #16
   160bc:	str	r0, [sp, #8]
   160c0:	str	r1, [sp, #12]
   160c4:	str	r2, [sp, #4]
   160c8:	ldr	r0, [sp, #4]
   160cc:	add	r0, r0, #20
   160d0:	str	r0, [sp]
   160d4:	ldr	r0, [sp]
   160d8:	mov	r1, #0
   160dc:	strb	r1, [r0]
   160e0:	ldr	r0, [sp, #12]
   160e4:	cmn	r0, #1
   160e8:	bgt	16170 <__assert_fail@plt+0x4a1c>
   160ec:	b	160f0 <__assert_fail@plt+0x499c>
   160f0:	b	160f4 <__assert_fail@plt+0x49a0>
   160f4:	ldr	r0, [sp, #8]
   160f8:	ldr	r1, [sp, #12]
   160fc:	mov	r2, #10
   16100:	mov	r3, #0
   16104:	bl	3ba78 <__assert_fail@plt+0x2a324>
   16108:	rsb	r2, r2, #48	; 0x30
   1610c:	ldr	r3, [sp]
   16110:	mvn	ip, #0
   16114:	add	lr, r3, ip
   16118:	str	lr, [sp]
   1611c:	add	r3, r3, ip
   16120:	strb	r2, [r3]
   16124:	ldr	r0, [sp, #8]
   16128:	ldr	r1, [sp, #12]
   1612c:	mov	r2, #10
   16130:	mov	r3, #0
   16134:	bl	3ba78 <__assert_fail@plt+0x2a324>
   16138:	str	r1, [sp, #12]
   1613c:	str	r0, [sp, #8]
   16140:	orr	r0, r0, r1
   16144:	cmp	r0, #0
   16148:	bne	160f4 <__assert_fail@plt+0x49a0>
   1614c:	b	16150 <__assert_fail@plt+0x49fc>
   16150:	ldr	r0, [sp]
   16154:	mvn	r1, #0
   16158:	add	r2, r0, r1
   1615c:	str	r2, [sp]
   16160:	add	r0, r0, r1
   16164:	movw	r1, #45	; 0x2d
   16168:	strb	r1, [r0]
   1616c:	b	161d4 <__assert_fail@plt+0x4a80>
   16170:	b	16174 <__assert_fail@plt+0x4a20>
   16174:	ldr	r0, [sp, #8]
   16178:	ldr	r1, [sp, #12]
   1617c:	mov	r2, #10
   16180:	mov	r3, #0
   16184:	bl	3ba78 <__assert_fail@plt+0x2a324>
   16188:	add	r2, r2, #48	; 0x30
   1618c:	ldr	r3, [sp]
   16190:	mvn	ip, #0
   16194:	add	lr, r3, ip
   16198:	str	lr, [sp]
   1619c:	add	r3, r3, ip
   161a0:	strb	r2, [r3]
   161a4:	ldr	r0, [sp, #8]
   161a8:	ldr	r1, [sp, #12]
   161ac:	mov	r2, #10
   161b0:	mov	r3, #0
   161b4:	bl	3ba78 <__assert_fail@plt+0x2a324>
   161b8:	str	r1, [sp, #12]
   161bc:	str	r0, [sp, #8]
   161c0:	orr	r0, r0, r1
   161c4:	cmp	r0, #0
   161c8:	bne	16174 <__assert_fail@plt+0x4a20>
   161cc:	b	161d0 <__assert_fail@plt+0x4a7c>
   161d0:	b	161d4 <__assert_fail@plt+0x4a80>
   161d4:	ldr	r0, [sp]
   161d8:	mov	sp, fp
   161dc:	pop	{fp, pc}
   161e0:	push	{fp, lr}
   161e4:	mov	fp, sp
   161e8:	sub	sp, sp, #24
   161ec:	str	r0, [fp, #-4]
   161f0:	ldr	r0, [fp, #-4]
   161f4:	movw	r1, #0
   161f8:	cmp	r0, r1
   161fc:	bne	16220 <__assert_fail@plt+0x4acc>
   16200:	movw	r0, #57784	; 0xe1b8
   16204:	movt	r0, #4
   16208:	ldr	r1, [r0]
   1620c:	movw	r0, #51530	; 0xc94a
   16210:	movt	r0, #3
   16214:	bl	11724 <fputs@plt>
   16218:	str	r0, [sp, #8]
   1621c:	bl	1173c <abort@plt>
   16220:	ldr	r0, [fp, #-4]
   16224:	movw	r1, #47	; 0x2f
   16228:	bl	116dc <strrchr@plt>
   1622c:	str	r0, [fp, #-8]
   16230:	ldr	r0, [fp, #-8]
   16234:	movw	r1, #0
   16238:	cmp	r0, r1
   1623c:	beq	16250 <__assert_fail@plt+0x4afc>
   16240:	ldr	r0, [fp, #-8]
   16244:	add	r0, r0, #1
   16248:	str	r0, [sp, #4]
   1624c:	b	16258 <__assert_fail@plt+0x4b04>
   16250:	ldr	r0, [fp, #-4]
   16254:	str	r0, [sp, #4]
   16258:	ldr	r0, [sp, #4]
   1625c:	str	r0, [sp, #12]
   16260:	ldr	r0, [sp, #12]
   16264:	ldr	r1, [fp, #-4]
   16268:	sub	r0, r0, r1
   1626c:	cmp	r0, #7
   16270:	blt	162dc <__assert_fail@plt+0x4b88>
   16274:	ldr	r0, [sp, #12]
   16278:	mvn	r1, #6
   1627c:	add	r0, r0, r1
   16280:	movw	r1, #51586	; 0xc982
   16284:	movt	r1, #3
   16288:	movw	r2, #7
   1628c:	bl	11730 <strncmp@plt>
   16290:	cmp	r0, #0
   16294:	bne	162dc <__assert_fail@plt+0x4b88>
   16298:	ldr	r0, [sp, #12]
   1629c:	str	r0, [fp, #-4]
   162a0:	ldr	r0, [sp, #12]
   162a4:	movw	r1, #51594	; 0xc98a
   162a8:	movt	r1, #3
   162ac:	movw	r2, #3
   162b0:	bl	11730 <strncmp@plt>
   162b4:	cmp	r0, #0
   162b8:	bne	162d8 <__assert_fail@plt+0x4b84>
   162bc:	ldr	r0, [sp, #12]
   162c0:	add	r0, r0, #3
   162c4:	str	r0, [fp, #-4]
   162c8:	ldr	r0, [fp, #-4]
   162cc:	movw	r1, #57768	; 0xe1a8
   162d0:	movt	r1, #4
   162d4:	str	r0, [r1]
   162d8:	b	162dc <__assert_fail@plt+0x4b88>
   162dc:	ldr	r0, [fp, #-4]
   162e0:	movw	r1, #58044	; 0xe2bc
   162e4:	movt	r1, #4
   162e8:	str	r0, [r1]
   162ec:	ldr	r0, [fp, #-4]
   162f0:	movw	r1, #57772	; 0xe1ac
   162f4:	movt	r1, #4
   162f8:	str	r0, [r1]
   162fc:	mov	sp, fp
   16300:	pop	{fp, pc}
   16304:	push	{fp, lr}
   16308:	mov	fp, sp
   1630c:	sub	sp, sp, #24
   16310:	str	r0, [fp, #-4]
   16314:	bl	11628 <__errno_location@plt>
   16318:	ldr	r0, [r0]
   1631c:	str	r0, [fp, #-8]
   16320:	ldr	r0, [fp, #-4]
   16324:	movw	r1, #0
   16328:	cmp	r0, r1
   1632c:	beq	1633c <__assert_fail@plt+0x4be8>
   16330:	ldr	r0, [fp, #-4]
   16334:	str	r0, [sp, #8]
   16338:	b	1634c <__assert_fail@plt+0x4bf8>
   1633c:	movw	r0, #58048	; 0xe2c0
   16340:	movt	r0, #4
   16344:	str	r0, [sp, #8]
   16348:	b	1634c <__assert_fail@plt+0x4bf8>
   1634c:	ldr	r0, [sp, #8]
   16350:	movw	r1, #48	; 0x30
   16354:	bl	33db0 <__assert_fail@plt+0x2265c>
   16358:	str	r0, [sp, #12]
   1635c:	ldr	r0, [fp, #-8]
   16360:	str	r0, [sp, #4]
   16364:	bl	11628 <__errno_location@plt>
   16368:	ldr	r1, [sp, #4]
   1636c:	str	r1, [r0]
   16370:	ldr	r0, [sp, #12]
   16374:	mov	sp, fp
   16378:	pop	{fp, pc}
   1637c:	sub	sp, sp, #8
   16380:	str	r0, [sp, #4]
   16384:	ldr	r0, [sp, #4]
   16388:	movw	r1, #0
   1638c:	cmp	r0, r1
   16390:	beq	163a0 <__assert_fail@plt+0x4c4c>
   16394:	ldr	r0, [sp, #4]
   16398:	str	r0, [sp]
   1639c:	b	163b0 <__assert_fail@plt+0x4c5c>
   163a0:	movw	r0, #58048	; 0xe2c0
   163a4:	movt	r0, #4
   163a8:	str	r0, [sp]
   163ac:	b	163b0 <__assert_fail@plt+0x4c5c>
   163b0:	ldr	r0, [sp]
   163b4:	ldr	r0, [r0]
   163b8:	add	sp, sp, #8
   163bc:	bx	lr
   163c0:	sub	sp, sp, #16
   163c4:	str	r0, [sp, #12]
   163c8:	str	r1, [sp, #8]
   163cc:	ldr	r0, [sp, #8]
   163d0:	ldr	r1, [sp, #12]
   163d4:	movw	r2, #0
   163d8:	cmp	r1, r2
   163dc:	str	r0, [sp, #4]
   163e0:	beq	163f0 <__assert_fail@plt+0x4c9c>
   163e4:	ldr	r0, [sp, #12]
   163e8:	str	r0, [sp]
   163ec:	b	16400 <__assert_fail@plt+0x4cac>
   163f0:	movw	r0, #58048	; 0xe2c0
   163f4:	movt	r0, #4
   163f8:	str	r0, [sp]
   163fc:	b	16400 <__assert_fail@plt+0x4cac>
   16400:	ldr	r0, [sp]
   16404:	ldr	r1, [sp, #4]
   16408:	str	r1, [r0]
   1640c:	add	sp, sp, #16
   16410:	bx	lr
   16414:	sub	sp, sp, #32
   16418:	str	r0, [sp, #28]
   1641c:	strb	r1, [sp, #27]
   16420:	str	r2, [sp, #20]
   16424:	ldrb	r0, [sp, #27]
   16428:	strb	r0, [sp, #19]
   1642c:	ldr	r0, [sp, #28]
   16430:	movw	r1, #0
   16434:	cmp	r0, r1
   16438:	beq	16448 <__assert_fail@plt+0x4cf4>
   1643c:	ldr	r0, [sp, #28]
   16440:	str	r0, [sp]
   16444:	b	16458 <__assert_fail@plt+0x4d04>
   16448:	movw	r0, #58048	; 0xe2c0
   1644c:	movt	r0, #4
   16450:	str	r0, [sp]
   16454:	b	16458 <__assert_fail@plt+0x4d04>
   16458:	ldr	r0, [sp]
   1645c:	add	r0, r0, #8
   16460:	ldrb	r1, [sp, #19]
   16464:	lsr	r1, r1, #5
   16468:	add	r0, r0, r1, lsl #2
   1646c:	str	r0, [sp, #12]
   16470:	ldrb	r0, [sp, #19]
   16474:	and	r0, r0, #31
   16478:	str	r0, [sp, #8]
   1647c:	ldr	r0, [sp, #12]
   16480:	ldr	r0, [r0]
   16484:	ldr	r1, [sp, #8]
   16488:	lsr	r0, r0, r1
   1648c:	and	r0, r0, #1
   16490:	str	r0, [sp, #4]
   16494:	ldr	r0, [sp, #20]
   16498:	and	r0, r0, #1
   1649c:	ldr	r1, [sp, #4]
   164a0:	eor	r0, r0, r1
   164a4:	ldr	r1, [sp, #8]
   164a8:	lsl	r0, r0, r1
   164ac:	ldr	r1, [sp, #12]
   164b0:	ldr	r2, [r1]
   164b4:	eor	r0, r2, r0
   164b8:	str	r0, [r1]
   164bc:	ldr	r0, [sp, #4]
   164c0:	add	sp, sp, #32
   164c4:	bx	lr
   164c8:	sub	sp, sp, #12
   164cc:	str	r0, [sp, #8]
   164d0:	str	r1, [sp, #4]
   164d4:	ldr	r0, [sp, #8]
   164d8:	movw	r1, #0
   164dc:	cmp	r0, r1
   164e0:	bne	164f0 <__assert_fail@plt+0x4d9c>
   164e4:	movw	r0, #58048	; 0xe2c0
   164e8:	movt	r0, #4
   164ec:	str	r0, [sp, #8]
   164f0:	ldr	r0, [sp, #8]
   164f4:	ldr	r0, [r0, #4]
   164f8:	str	r0, [sp]
   164fc:	ldr	r0, [sp, #4]
   16500:	ldr	r1, [sp, #8]
   16504:	str	r0, [r1, #4]
   16508:	ldr	r0, [sp]
   1650c:	add	sp, sp, #12
   16510:	bx	lr
   16514:	push	{fp, lr}
   16518:	mov	fp, sp
   1651c:	sub	sp, sp, #16
   16520:	str	r0, [fp, #-4]
   16524:	str	r1, [sp, #8]
   16528:	str	r2, [sp, #4]
   1652c:	ldr	r0, [fp, #-4]
   16530:	movw	r1, #0
   16534:	cmp	r0, r1
   16538:	bne	16548 <__assert_fail@plt+0x4df4>
   1653c:	movw	r0, #58048	; 0xe2c0
   16540:	movt	r0, #4
   16544:	str	r0, [fp, #-4]
   16548:	ldr	r0, [fp, #-4]
   1654c:	movw	r1, #10
   16550:	str	r1, [r0]
   16554:	ldr	r0, [sp, #8]
   16558:	movw	r1, #0
   1655c:	cmp	r0, r1
   16560:	beq	16574 <__assert_fail@plt+0x4e20>
   16564:	ldr	r0, [sp, #4]
   16568:	movw	r1, #0
   1656c:	cmp	r0, r1
   16570:	bne	16578 <__assert_fail@plt+0x4e24>
   16574:	bl	1173c <abort@plt>
   16578:	ldr	r0, [sp, #8]
   1657c:	ldr	r1, [fp, #-4]
   16580:	str	r0, [r1, #40]	; 0x28
   16584:	ldr	r0, [sp, #4]
   16588:	ldr	r1, [fp, #-4]
   1658c:	str	r0, [r1, #44]	; 0x2c
   16590:	mov	sp, fp
   16594:	pop	{fp, pc}
   16598:	push	{r4, r5, r6, sl, fp, lr}
   1659c:	add	fp, sp, #16
   165a0:	sub	sp, sp, #56	; 0x38
   165a4:	ldr	ip, [fp, #8]
   165a8:	str	r0, [fp, #-20]	; 0xffffffec
   165ac:	str	r1, [fp, #-24]	; 0xffffffe8
   165b0:	str	r2, [fp, #-28]	; 0xffffffe4
   165b4:	str	r3, [fp, #-32]	; 0xffffffe0
   165b8:	ldr	r0, [fp, #8]
   165bc:	movw	r1, #0
   165c0:	cmp	r0, r1
   165c4:	beq	165d4 <__assert_fail@plt+0x4e80>
   165c8:	ldr	r0, [fp, #8]
   165cc:	str	r0, [sp, #24]
   165d0:	b	165e4 <__assert_fail@plt+0x4e90>
   165d4:	movw	r0, #58048	; 0xe2c0
   165d8:	movt	r0, #4
   165dc:	str	r0, [sp, #24]
   165e0:	b	165e4 <__assert_fail@plt+0x4e90>
   165e4:	ldr	r0, [sp, #24]
   165e8:	str	r0, [sp, #36]	; 0x24
   165ec:	bl	11628 <__errno_location@plt>
   165f0:	ldr	r0, [r0]
   165f4:	str	r0, [sp, #32]
   165f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   165fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16600:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16608:	ldr	ip, [sp, #36]	; 0x24
   1660c:	ldr	ip, [ip]
   16610:	ldr	lr, [sp, #36]	; 0x24
   16614:	ldr	lr, [lr, #4]
   16618:	ldr	r4, [sp, #36]	; 0x24
   1661c:	add	r4, r4, #8
   16620:	ldr	r5, [sp, #36]	; 0x24
   16624:	ldr	r5, [r5, #40]	; 0x28
   16628:	ldr	r6, [sp, #36]	; 0x24
   1662c:	ldr	r6, [r6, #44]	; 0x2c
   16630:	str	ip, [sp]
   16634:	str	lr, [sp, #4]
   16638:	str	r4, [sp, #8]
   1663c:	str	r5, [sp, #12]
   16640:	str	r6, [sp, #16]
   16644:	bl	1666c <__assert_fail@plt+0x4f18>
   16648:	str	r0, [sp, #28]
   1664c:	ldr	r0, [sp, #32]
   16650:	str	r0, [sp, #20]
   16654:	bl	11628 <__errno_location@plt>
   16658:	ldr	r1, [sp, #20]
   1665c:	str	r1, [r0]
   16660:	ldr	r0, [sp, #28]
   16664:	sub	sp, fp, #16
   16668:	pop	{r4, r5, r6, sl, fp, pc}
   1666c:	push	{r4, r5, r6, sl, fp, lr}
   16670:	add	fp, sp, #16
   16674:	sub	sp, sp, #160	; 0xa0
   16678:	ldr	ip, [fp, #24]
   1667c:	ldr	lr, [fp, #20]
   16680:	ldr	r4, [fp, #16]
   16684:	ldr	r5, [fp, #12]
   16688:	ldr	r6, [fp, #8]
   1668c:	str	r0, [fp, #-24]	; 0xffffffe8
   16690:	str	r1, [fp, #-28]	; 0xffffffe4
   16694:	str	r2, [fp, #-32]	; 0xffffffe0
   16698:	str	r3, [fp, #-36]	; 0xffffffdc
   1669c:	movw	r0, #0
   166a0:	str	r0, [fp, #-44]	; 0xffffffd4
   166a4:	str	r0, [fp, #-48]	; 0xffffffd0
   166a8:	str	r0, [fp, #-52]	; 0xffffffcc
   166ac:	str	r0, [fp, #-56]	; 0xffffffc8
   166b0:	movw	r0, #0
   166b4:	strb	r0, [fp, #-57]	; 0xffffffc7
   166b8:	str	ip, [sp, #72]	; 0x48
   166bc:	str	lr, [sp, #68]	; 0x44
   166c0:	str	r4, [sp, #64]	; 0x40
   166c4:	str	r5, [sp, #60]	; 0x3c
   166c8:	str	r6, [sp, #56]	; 0x38
   166cc:	bl	11544 <__ctype_get_mb_cur_max@plt>
   166d0:	cmp	r0, #1
   166d4:	movw	r0, #0
   166d8:	moveq	r0, #1
   166dc:	and	r0, r0, #1
   166e0:	strb	r0, [fp, #-58]	; 0xffffffc6
   166e4:	ldr	r0, [fp, #12]
   166e8:	and	r0, r0, #2
   166ec:	cmp	r0, #0
   166f0:	movw	r0, #0
   166f4:	movne	r0, #1
   166f8:	and	r0, r0, #1
   166fc:	strb	r0, [fp, #-59]	; 0xffffffc5
   16700:	movw	r0, #0
   16704:	strb	r0, [fp, #-60]	; 0xffffffc4
   16708:	strb	r0, [fp, #-61]	; 0xffffffc3
   1670c:	movw	r0, #1
   16710:	strb	r0, [fp, #-62]	; 0xffffffc2
   16714:	ldr	r0, [fp, #8]
   16718:	cmp	r0, #10
   1671c:	str	r0, [sp, #52]	; 0x34
   16720:	bhi	16948 <__assert_fail@plt+0x51f4>
   16724:	add	r0, pc, #8
   16728:	ldr	r1, [sp, #52]	; 0x34
   1672c:	ldr	r0, [r0, r1, lsl #2]
   16730:	mov	pc, r0
   16734:	andeq	r6, r1, ip, lsr r9
   16738:			; <UNDEFINED> instruction: 0x000168b8
   1673c:	ldrdeq	r6, [r1], -r8
   16740:			; <UNDEFINED> instruction: 0x000168b0
   16744:	andeq	r6, r1, r0, asr #17
   16748:	andeq	r6, r1, r0, ror r7
   1674c:	andeq	r6, r1, r0, ror #14
   16750:	ldrdeq	r6, [r1], -r4
   16754:	andeq	r6, r1, r8, ror #15
   16758:	andeq	r6, r1, r8, ror #15
   1675c:	andeq	r6, r1, r8, ror #15
   16760:	movw	r0, #5
   16764:	str	r0, [fp, #8]
   16768:	movw	r0, #1
   1676c:	strb	r0, [fp, #-59]	; 0xffffffc5
   16770:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16774:	tst	r0, #1
   16778:	bne	167b4 <__assert_fail@plt+0x5060>
   1677c:	b	16780 <__assert_fail@plt+0x502c>
   16780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16784:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16788:	cmp	r0, r1
   1678c:	bcs	167a4 <__assert_fail@plt+0x5050>
   16790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16794:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16798:	add	r0, r0, r1
   1679c:	movw	r1, #34	; 0x22
   167a0:	strb	r1, [r0]
   167a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   167a8:	add	r0, r0, #1
   167ac:	str	r0, [fp, #-44]	; 0xffffffd4
   167b0:	b	167b4 <__assert_fail@plt+0x5060>
   167b4:	movw	r0, #1
   167b8:	strb	r0, [fp, #-57]	; 0xffffffc7
   167bc:	movw	r0, #51674	; 0xc9da
   167c0:	movt	r0, #3
   167c4:	str	r0, [fp, #-52]	; 0xffffffcc
   167c8:	movw	r0, #1
   167cc:	str	r0, [fp, #-56]	; 0xffffffc8
   167d0:	b	1694c <__assert_fail@plt+0x51f8>
   167d4:	movw	r0, #1
   167d8:	strb	r0, [fp, #-57]	; 0xffffffc7
   167dc:	movw	r0, #0
   167e0:	strb	r0, [fp, #-59]	; 0xffffffc5
   167e4:	b	1694c <__assert_fail@plt+0x51f8>
   167e8:	ldr	r0, [fp, #8]
   167ec:	cmp	r0, #10
   167f0:	beq	1681c <__assert_fail@plt+0x50c8>
   167f4:	ldr	r1, [fp, #8]
   167f8:	movw	r0, #51676	; 0xc9dc
   167fc:	movt	r0, #3
   16800:	bl	18860 <__assert_fail@plt+0x710c>
   16804:	str	r0, [fp, #20]
   16808:	ldr	r1, [fp, #8]
   1680c:	movw	r0, #50650	; 0xc5da
   16810:	movt	r0, #3
   16814:	bl	18860 <__assert_fail@plt+0x710c>
   16818:	str	r0, [fp, #24]
   1681c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16820:	tst	r0, #1
   16824:	bne	16890 <__assert_fail@plt+0x513c>
   16828:	ldr	r0, [fp, #20]
   1682c:	str	r0, [fp, #-52]	; 0xffffffcc
   16830:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16834:	ldrsb	r0, [r0]
   16838:	cmp	r0, #0
   1683c:	beq	1688c <__assert_fail@plt+0x5138>
   16840:	b	16844 <__assert_fail@plt+0x50f0>
   16844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1684c:	cmp	r0, r1
   16850:	bcs	1686c <__assert_fail@plt+0x5118>
   16854:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16858:	ldrb	r0, [r0]
   1685c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16860:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16864:	add	r1, r1, r2
   16868:	strb	r0, [r1]
   1686c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16870:	add	r0, r0, #1
   16874:	str	r0, [fp, #-44]	; 0xffffffd4
   16878:	b	1687c <__assert_fail@plt+0x5128>
   1687c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16880:	add	r0, r0, #1
   16884:	str	r0, [fp, #-52]	; 0xffffffcc
   16888:	b	16830 <__assert_fail@plt+0x50dc>
   1688c:	b	16890 <__assert_fail@plt+0x513c>
   16890:	movw	r0, #1
   16894:	strb	r0, [fp, #-57]	; 0xffffffc7
   16898:	ldr	r0, [fp, #24]
   1689c:	str	r0, [fp, #-52]	; 0xffffffcc
   168a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   168a4:	bl	11604 <strlen@plt>
   168a8:	str	r0, [fp, #-56]	; 0xffffffc8
   168ac:	b	1694c <__assert_fail@plt+0x51f8>
   168b0:	movw	r0, #1
   168b4:	strb	r0, [fp, #-57]	; 0xffffffc7
   168b8:	movw	r0, #1
   168bc:	strb	r0, [fp, #-59]	; 0xffffffc5
   168c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   168c4:	tst	r0, #1
   168c8:	bne	168d4 <__assert_fail@plt+0x5180>
   168cc:	movw	r0, #1
   168d0:	strb	r0, [fp, #-57]	; 0xffffffc7
   168d4:	b	168d8 <__assert_fail@plt+0x5184>
   168d8:	movw	r0, #2
   168dc:	str	r0, [fp, #8]
   168e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   168e4:	tst	r0, #1
   168e8:	bne	16924 <__assert_fail@plt+0x51d0>
   168ec:	b	168f0 <__assert_fail@plt+0x519c>
   168f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   168f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   168f8:	cmp	r0, r1
   168fc:	bcs	16914 <__assert_fail@plt+0x51c0>
   16900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16904:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16908:	add	r0, r0, r1
   1690c:	movw	r1, #39	; 0x27
   16910:	strb	r1, [r0]
   16914:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16918:	add	r0, r0, #1
   1691c:	str	r0, [fp, #-44]	; 0xffffffd4
   16920:	b	16924 <__assert_fail@plt+0x51d0>
   16924:	movw	r0, #50650	; 0xc5da
   16928:	movt	r0, #3
   1692c:	str	r0, [fp, #-52]	; 0xffffffcc
   16930:	movw	r0, #1
   16934:	str	r0, [fp, #-56]	; 0xffffffc8
   16938:	b	1694c <__assert_fail@plt+0x51f8>
   1693c:	movw	r0, #0
   16940:	strb	r0, [fp, #-59]	; 0xffffffc5
   16944:	b	1694c <__assert_fail@plt+0x51f8>
   16948:	bl	1173c <abort@plt>
   1694c:	movw	r0, #0
   16950:	str	r0, [fp, #-40]	; 0xffffffd8
   16954:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16958:	cmn	r0, #1
   1695c:	bne	16988 <__assert_fail@plt+0x5234>
   16960:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16964:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16968:	add	r0, r0, r1
   1696c:	ldrb	r0, [r0]
   16970:	cmp	r0, #0
   16974:	movw	r0, #0
   16978:	moveq	r0, #1
   1697c:	and	r0, r0, #1
   16980:	str	r0, [sp, #48]	; 0x30
   16984:	b	169a4 <__assert_fail@plt+0x5250>
   16988:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1698c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16990:	cmp	r0, r1
   16994:	movw	r0, #0
   16998:	moveq	r0, #1
   1699c:	and	r0, r0, #1
   169a0:	str	r0, [sp, #48]	; 0x30
   169a4:	ldr	r0, [sp, #48]	; 0x30
   169a8:	cmp	r0, #0
   169ac:	movw	r0, #0
   169b0:	movne	r0, #1
   169b4:	mvn	r1, #0
   169b8:	eor	r0, r0, r1
   169bc:	tst	r0, #1
   169c0:	beq	17bac <__assert_fail@plt+0x6458>
   169c4:	movw	r0, #0
   169c8:	strb	r0, [fp, #-65]	; 0xffffffbf
   169cc:	strb	r0, [fp, #-66]	; 0xffffffbe
   169d0:	strb	r0, [fp, #-67]	; 0xffffffbd
   169d4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   169d8:	tst	r0, #1
   169dc:	beq	16a88 <__assert_fail@plt+0x5334>
   169e0:	ldr	r0, [fp, #8]
   169e4:	cmp	r0, #2
   169e8:	beq	16a88 <__assert_fail@plt+0x5334>
   169ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   169f0:	cmp	r0, #0
   169f4:	beq	16a88 <__assert_fail@plt+0x5334>
   169f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   169fc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16a00:	add	r0, r0, r1
   16a04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16a08:	cmn	r1, #1
   16a0c:	str	r0, [sp, #44]	; 0x2c
   16a10:	bne	16a38 <__assert_fail@plt+0x52e4>
   16a14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16a18:	movw	r1, #1
   16a1c:	cmp	r1, r0
   16a20:	bcs	16a38 <__assert_fail@plt+0x52e4>
   16a24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a28:	bl	11604 <strlen@plt>
   16a2c:	str	r0, [fp, #-36]	; 0xffffffdc
   16a30:	str	r0, [sp, #40]	; 0x28
   16a34:	b	16a40 <__assert_fail@plt+0x52ec>
   16a38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a3c:	str	r0, [sp, #40]	; 0x28
   16a40:	ldr	r0, [sp, #40]	; 0x28
   16a44:	ldr	r1, [sp, #44]	; 0x2c
   16a48:	cmp	r1, r0
   16a4c:	bhi	16a88 <__assert_fail@plt+0x5334>
   16a50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16a58:	add	r0, r0, r1
   16a5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16a60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16a64:	bl	114cc <memcmp@plt>
   16a68:	cmp	r0, #0
   16a6c:	bne	16a88 <__assert_fail@plt+0x5334>
   16a70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16a74:	tst	r0, #1
   16a78:	beq	16a80 <__assert_fail@plt+0x532c>
   16a7c:	b	17d2c <__assert_fail@plt+0x65d8>
   16a80:	movw	r0, #1
   16a84:	strb	r0, [fp, #-65]	; 0xffffffbf
   16a88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16a90:	ldrb	r0, [r0, r1]
   16a94:	strb	r0, [fp, #-63]	; 0xffffffc1
   16a98:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16a9c:	mov	r1, r0
   16aa0:	cmp	r0, #126	; 0x7e
   16aa4:	str	r1, [sp, #36]	; 0x24
   16aa8:	bhi	17318 <__assert_fail@plt+0x5bc4>
   16aac:	add	r0, pc, #8
   16ab0:	ldr	r1, [sp, #36]	; 0x24
   16ab4:	ldr	r0, [r0, r1, lsl #2]
   16ab8:	mov	pc, r0
   16abc:			; <UNDEFINED> instruction: 0x00016cb8
   16ac0:	andeq	r7, r1, r8, lsl r3
   16ac4:	andeq	r7, r1, r8, lsl r3
   16ac8:	andeq	r7, r1, r8, lsl r3
   16acc:	andeq	r7, r1, r8, lsl r3
   16ad0:	andeq	r7, r1, r8, lsl r3
   16ad4:	andeq	r7, r1, r8, lsl r3
   16ad8:	andeq	r7, r1, r0, asr #1
   16adc:	andeq	r7, r1, ip, asr #1
   16ae0:	strdeq	r7, [r1], -ip
   16ae4:	andeq	r7, r1, r4, ror #1
   16ae8:	andeq	r7, r1, r8, lsl #2
   16aec:	ldrdeq	r7, [r1], -r8
   16af0:	strdeq	r7, [r1], -r0
   16af4:	andeq	r7, r1, r8, lsl r3
   16af8:	andeq	r7, r1, r8, lsl r3
   16afc:	andeq	r7, r1, r8, lsl r3
   16b00:	andeq	r7, r1, r8, lsl r3
   16b04:	andeq	r7, r1, r8, lsl r3
   16b08:	andeq	r7, r1, r8, lsl r3
   16b0c:	andeq	r7, r1, r8, lsl r3
   16b10:	andeq	r7, r1, r8, lsl r3
   16b14:	andeq	r7, r1, r8, lsl r3
   16b18:	andeq	r7, r1, r8, lsl r3
   16b1c:	andeq	r7, r1, r8, lsl r3
   16b20:	andeq	r7, r1, r8, lsl r3
   16b24:	andeq	r7, r1, r8, lsl r3
   16b28:	andeq	r7, r1, r8, lsl r3
   16b2c:	andeq	r7, r1, r8, lsl r3
   16b30:	andeq	r7, r1, r8, lsl r3
   16b34:	andeq	r7, r1, r8, lsl r3
   16b38:	andeq	r7, r1, r8, lsl r3
   16b3c:	andeq	r7, r1, ip, ror #3
   16b40:	strdeq	r7, [r1], -r4
   16b44:	strdeq	r7, [r1], -r4
   16b48:	ldrdeq	r7, [r1], -r8
   16b4c:	strdeq	r7, [r1], -r4
   16b50:	andeq	r7, r1, ip, lsl #6
   16b54:	strdeq	r7, [r1], -r4
   16b58:	andeq	r7, r1, r4, lsl r2
   16b5c:	strdeq	r7, [r1], -r4
   16b60:	strdeq	r7, [r1], -r4
   16b64:	strdeq	r7, [r1], -r4
   16b68:	andeq	r7, r1, ip, lsl #6
   16b6c:	andeq	r7, r1, ip, lsl #6
   16b70:	andeq	r7, r1, ip, lsl #6
   16b74:	andeq	r7, r1, ip, lsl #6
   16b78:	andeq	r7, r1, ip, lsl #6
   16b7c:	andeq	r7, r1, ip, lsl #6
   16b80:	andeq	r7, r1, ip, lsl #6
   16b84:	andeq	r7, r1, ip, lsl #6
   16b88:	andeq	r7, r1, ip, lsl #6
   16b8c:	andeq	r7, r1, ip, lsl #6
   16b90:	andeq	r7, r1, ip, lsl #6
   16b94:	andeq	r7, r1, ip, lsl #6
   16b98:	andeq	r7, r1, ip, lsl #6
   16b9c:	andeq	r7, r1, ip, lsl #6
   16ba0:	andeq	r7, r1, ip, lsl #6
   16ba4:	andeq	r7, r1, ip, lsl #6
   16ba8:	strdeq	r7, [r1], -r4
   16bac:	strdeq	r7, [r1], -r4
   16bb0:	strdeq	r7, [r1], -r4
   16bb4:	strdeq	r7, [r1], -r4
   16bb8:	andeq	r6, r1, r4, asr #29
   16bbc:	andeq	r7, r1, r8, lsl r3
   16bc0:	andeq	r7, r1, ip, lsl #6
   16bc4:	andeq	r7, r1, ip, lsl #6
   16bc8:	andeq	r7, r1, ip, lsl #6
   16bcc:	andeq	r7, r1, ip, lsl #6
   16bd0:	andeq	r7, r1, ip, lsl #6
   16bd4:	andeq	r7, r1, ip, lsl #6
   16bd8:	andeq	r7, r1, ip, lsl #6
   16bdc:	andeq	r7, r1, ip, lsl #6
   16be0:	andeq	r7, r1, ip, lsl #6
   16be4:	andeq	r7, r1, ip, lsl #6
   16be8:	andeq	r7, r1, ip, lsl #6
   16bec:	andeq	r7, r1, ip, lsl #6
   16bf0:	andeq	r7, r1, ip, lsl #6
   16bf4:	andeq	r7, r1, ip, lsl #6
   16bf8:	andeq	r7, r1, ip, lsl #6
   16bfc:	andeq	r7, r1, ip, lsl #6
   16c00:	andeq	r7, r1, ip, lsl #6
   16c04:	andeq	r7, r1, ip, lsl #6
   16c08:	andeq	r7, r1, ip, lsl #6
   16c0c:	andeq	r7, r1, ip, lsl #6
   16c10:	andeq	r7, r1, ip, lsl #6
   16c14:	andeq	r7, r1, ip, lsl #6
   16c18:	andeq	r7, r1, ip, lsl #6
   16c1c:	andeq	r7, r1, ip, lsl #6
   16c20:	andeq	r7, r1, ip, lsl #6
   16c24:	andeq	r7, r1, ip, lsl #6
   16c28:	strdeq	r7, [r1], -r4
   16c2c:	andeq	r7, r1, r4, lsl r1
   16c30:	andeq	r7, r1, ip, lsl #6
   16c34:	strdeq	r7, [r1], -r4
   16c38:	andeq	r7, r1, ip, lsl #6
   16c3c:	strdeq	r7, [r1], -r4
   16c40:	andeq	r7, r1, ip, lsl #6
   16c44:	andeq	r7, r1, ip, lsl #6
   16c48:	andeq	r7, r1, ip, lsl #6
   16c4c:	andeq	r7, r1, ip, lsl #6
   16c50:	andeq	r7, r1, ip, lsl #6
   16c54:	andeq	r7, r1, ip, lsl #6
   16c58:	andeq	r7, r1, ip, lsl #6
   16c5c:	andeq	r7, r1, ip, lsl #6
   16c60:	andeq	r7, r1, ip, lsl #6
   16c64:	andeq	r7, r1, ip, lsl #6
   16c68:	andeq	r7, r1, ip, lsl #6
   16c6c:	andeq	r7, r1, ip, lsl #6
   16c70:	andeq	r7, r1, ip, lsl #6
   16c74:	andeq	r7, r1, ip, lsl #6
   16c78:	andeq	r7, r1, ip, lsl #6
   16c7c:	andeq	r7, r1, ip, lsl #6
   16c80:	andeq	r7, r1, ip, lsl #6
   16c84:	andeq	r7, r1, ip, lsl #6
   16c88:	andeq	r7, r1, ip, lsl #6
   16c8c:	andeq	r7, r1, ip, lsl #6
   16c90:	andeq	r7, r1, ip, lsl #6
   16c94:	andeq	r7, r1, ip, lsl #6
   16c98:	andeq	r7, r1, ip, lsl #6
   16c9c:	andeq	r7, r1, ip, lsl #6
   16ca0:	andeq	r7, r1, ip, lsl #6
   16ca4:	andeq	r7, r1, ip, lsl #6
   16ca8:	andeq	r7, r1, r4, lsr #3
   16cac:	strdeq	r7, [r1], -r4
   16cb0:	andeq	r7, r1, r4, lsr #3
   16cb4:	ldrdeq	r7, [r1], -r8
   16cb8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16cbc:	tst	r0, #1
   16cc0:	beq	16ea8 <__assert_fail@plt+0x5754>
   16cc4:	b	16cc8 <__assert_fail@plt+0x5574>
   16cc8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16ccc:	tst	r0, #1
   16cd0:	beq	16cd8 <__assert_fail@plt+0x5584>
   16cd4:	b	17d2c <__assert_fail@plt+0x65d8>
   16cd8:	movw	r0, #1
   16cdc:	strb	r0, [fp, #-66]	; 0xffffffbe
   16ce0:	ldr	r0, [fp, #8]
   16ce4:	cmp	r0, #2
   16ce8:	bne	16d9c <__assert_fail@plt+0x5648>
   16cec:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16cf0:	tst	r0, #1
   16cf4:	bne	16d9c <__assert_fail@plt+0x5648>
   16cf8:	b	16cfc <__assert_fail@plt+0x55a8>
   16cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d04:	cmp	r0, r1
   16d08:	bcs	16d20 <__assert_fail@plt+0x55cc>
   16d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16d14:	add	r0, r0, r1
   16d18:	movw	r1, #39	; 0x27
   16d1c:	strb	r1, [r0]
   16d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d24:	add	r0, r0, #1
   16d28:	str	r0, [fp, #-44]	; 0xffffffd4
   16d2c:	b	16d30 <__assert_fail@plt+0x55dc>
   16d30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d38:	cmp	r0, r1
   16d3c:	bcs	16d54 <__assert_fail@plt+0x5600>
   16d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16d48:	add	r0, r0, r1
   16d4c:	movw	r1, #36	; 0x24
   16d50:	strb	r1, [r0]
   16d54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d58:	add	r0, r0, #1
   16d5c:	str	r0, [fp, #-44]	; 0xffffffd4
   16d60:	b	16d64 <__assert_fail@plt+0x5610>
   16d64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d6c:	cmp	r0, r1
   16d70:	bcs	16d88 <__assert_fail@plt+0x5634>
   16d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16d7c:	add	r0, r0, r1
   16d80:	movw	r1, #39	; 0x27
   16d84:	strb	r1, [r0]
   16d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d8c:	add	r0, r0, #1
   16d90:	str	r0, [fp, #-44]	; 0xffffffd4
   16d94:	movw	r0, #1
   16d98:	strb	r0, [fp, #-60]	; 0xffffffc4
   16d9c:	b	16da0 <__assert_fail@plt+0x564c>
   16da0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16da4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16da8:	cmp	r0, r1
   16dac:	bcs	16dc4 <__assert_fail@plt+0x5670>
   16db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16db4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16db8:	add	r0, r0, r1
   16dbc:	movw	r1, #92	; 0x5c
   16dc0:	strb	r1, [r0]
   16dc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16dc8:	add	r0, r0, #1
   16dcc:	str	r0, [fp, #-44]	; 0xffffffd4
   16dd0:	b	16dd4 <__assert_fail@plt+0x5680>
   16dd4:	ldr	r0, [fp, #8]
   16dd8:	cmp	r0, #2
   16ddc:	beq	16e9c <__assert_fail@plt+0x5748>
   16de0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16de4:	add	r0, r0, #1
   16de8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16dec:	cmp	r0, r1
   16df0:	bcs	16e9c <__assert_fail@plt+0x5748>
   16df4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16df8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16dfc:	add	r1, r1, #1
   16e00:	add	r0, r0, r1
   16e04:	ldrb	r0, [r0]
   16e08:	movw	r1, #48	; 0x30
   16e0c:	cmp	r1, r0
   16e10:	bgt	16e9c <__assert_fail@plt+0x5748>
   16e14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16e1c:	add	r1, r1, #1
   16e20:	add	r0, r0, r1
   16e24:	ldrb	r0, [r0]
   16e28:	cmp	r0, #57	; 0x39
   16e2c:	bgt	16e9c <__assert_fail@plt+0x5748>
   16e30:	b	16e34 <__assert_fail@plt+0x56e0>
   16e34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e3c:	cmp	r0, r1
   16e40:	bcs	16e58 <__assert_fail@plt+0x5704>
   16e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e4c:	add	r0, r0, r1
   16e50:	movw	r1, #48	; 0x30
   16e54:	strb	r1, [r0]
   16e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e5c:	add	r0, r0, #1
   16e60:	str	r0, [fp, #-44]	; 0xffffffd4
   16e64:	b	16e68 <__assert_fail@plt+0x5714>
   16e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e70:	cmp	r0, r1
   16e74:	bcs	16e8c <__assert_fail@plt+0x5738>
   16e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e80:	add	r0, r0, r1
   16e84:	movw	r1, #48	; 0x30
   16e88:	strb	r1, [r0]
   16e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e90:	add	r0, r0, #1
   16e94:	str	r0, [fp, #-44]	; 0xffffffd4
   16e98:	b	16e9c <__assert_fail@plt+0x5748>
   16e9c:	movw	r0, #48	; 0x30
   16ea0:	strb	r0, [fp, #-63]	; 0xffffffc1
   16ea4:	b	16ec0 <__assert_fail@plt+0x576c>
   16ea8:	ldr	r0, [fp, #12]
   16eac:	and	r0, r0, #1
   16eb0:	cmp	r0, #0
   16eb4:	beq	16ebc <__assert_fail@plt+0x5768>
   16eb8:	b	17b9c <__assert_fail@plt+0x6448>
   16ebc:	b	16ec0 <__assert_fail@plt+0x576c>
   16ec0:	b	17938 <__assert_fail@plt+0x61e4>
   16ec4:	ldr	r0, [fp, #8]
   16ec8:	cmp	r0, #2
   16ecc:	str	r0, [sp, #32]
   16ed0:	beq	16ee8 <__assert_fail@plt+0x5794>
   16ed4:	b	16ed8 <__assert_fail@plt+0x5784>
   16ed8:	ldr	r0, [sp, #32]
   16edc:	cmp	r0, #5
   16ee0:	beq	16efc <__assert_fail@plt+0x57a8>
   16ee4:	b	170b8 <__assert_fail@plt+0x5964>
   16ee8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16eec:	tst	r0, #1
   16ef0:	beq	16ef8 <__assert_fail@plt+0x57a4>
   16ef4:	b	17d2c <__assert_fail@plt+0x65d8>
   16ef8:	b	170bc <__assert_fail@plt+0x5968>
   16efc:	ldr	r0, [fp, #12]
   16f00:	and	r0, r0, #4
   16f04:	cmp	r0, #0
   16f08:	beq	170b4 <__assert_fail@plt+0x5960>
   16f0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16f10:	add	r0, r0, #2
   16f14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16f18:	cmp	r0, r1
   16f1c:	bcs	170b4 <__assert_fail@plt+0x5960>
   16f20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16f28:	add	r1, r1, #1
   16f2c:	add	r0, r0, r1
   16f30:	ldrb	r0, [r0]
   16f34:	cmp	r0, #63	; 0x3f
   16f38:	bne	170b4 <__assert_fail@plt+0x5960>
   16f3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16f44:	add	r0, r1, r0
   16f48:	ldrb	r0, [r0, #2]
   16f4c:	mov	r1, r0
   16f50:	cmp	r0, #33	; 0x21
   16f54:	str	r1, [sp, #28]
   16f58:	beq	16fa8 <__assert_fail@plt+0x5854>
   16f5c:	b	16f60 <__assert_fail@plt+0x580c>
   16f60:	ldr	r0, [sp, #28]
   16f64:	sub	r1, r0, #39	; 0x27
   16f68:	cmp	r1, #3
   16f6c:	bcc	16fa8 <__assert_fail@plt+0x5854>
   16f70:	b	16f74 <__assert_fail@plt+0x5820>
   16f74:	ldr	r0, [sp, #28]
   16f78:	cmp	r0, #45	; 0x2d
   16f7c:	beq	16fa8 <__assert_fail@plt+0x5854>
   16f80:	b	16f84 <__assert_fail@plt+0x5830>
   16f84:	ldr	r0, [sp, #28]
   16f88:	cmp	r0, #47	; 0x2f
   16f8c:	beq	16fa8 <__assert_fail@plt+0x5854>
   16f90:	b	16f94 <__assert_fail@plt+0x5840>
   16f94:	ldr	r0, [sp, #28]
   16f98:	sub	r1, r0, #60	; 0x3c
   16f9c:	cmp	r1, #2
   16fa0:	bhi	170ac <__assert_fail@plt+0x5958>
   16fa4:	b	16fa8 <__assert_fail@plt+0x5854>
   16fa8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16fac:	tst	r0, #1
   16fb0:	beq	16fb8 <__assert_fail@plt+0x5864>
   16fb4:	b	17d2c <__assert_fail@plt+0x65d8>
   16fb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16fbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16fc0:	add	r1, r1, #2
   16fc4:	add	r0, r0, r1
   16fc8:	ldrb	r0, [r0]
   16fcc:	strb	r0, [fp, #-63]	; 0xffffffc1
   16fd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16fd4:	add	r0, r0, #2
   16fd8:	str	r0, [fp, #-40]	; 0xffffffd8
   16fdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16fe0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16fe4:	cmp	r0, r1
   16fe8:	bcs	17000 <__assert_fail@plt+0x58ac>
   16fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16ff4:	add	r0, r0, r1
   16ff8:	movw	r1, #63	; 0x3f
   16ffc:	strb	r1, [r0]
   17000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17004:	add	r0, r0, #1
   17008:	str	r0, [fp, #-44]	; 0xffffffd4
   1700c:	b	17010 <__assert_fail@plt+0x58bc>
   17010:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17014:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17018:	cmp	r0, r1
   1701c:	bcs	17034 <__assert_fail@plt+0x58e0>
   17020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17024:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17028:	add	r0, r0, r1
   1702c:	movw	r1, #34	; 0x22
   17030:	strb	r1, [r0]
   17034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17038:	add	r0, r0, #1
   1703c:	str	r0, [fp, #-44]	; 0xffffffd4
   17040:	b	17044 <__assert_fail@plt+0x58f0>
   17044:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17048:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1704c:	cmp	r0, r1
   17050:	bcs	17068 <__assert_fail@plt+0x5914>
   17054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17058:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1705c:	add	r0, r0, r1
   17060:	movw	r1, #34	; 0x22
   17064:	strb	r1, [r0]
   17068:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1706c:	add	r0, r0, #1
   17070:	str	r0, [fp, #-44]	; 0xffffffd4
   17074:	b	17078 <__assert_fail@plt+0x5924>
   17078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1707c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17080:	cmp	r0, r1
   17084:	bcs	1709c <__assert_fail@plt+0x5948>
   17088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1708c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17090:	add	r0, r0, r1
   17094:	movw	r1, #63	; 0x3f
   17098:	strb	r1, [r0]
   1709c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   170a0:	add	r0, r0, #1
   170a4:	str	r0, [fp, #-44]	; 0xffffffd4
   170a8:	b	170b0 <__assert_fail@plt+0x595c>
   170ac:	b	170b0 <__assert_fail@plt+0x595c>
   170b0:	b	170b4 <__assert_fail@plt+0x5960>
   170b4:	b	170bc <__assert_fail@plt+0x5968>
   170b8:	b	170bc <__assert_fail@plt+0x5968>
   170bc:	b	17938 <__assert_fail@plt+0x61e4>
   170c0:	movw	r0, #97	; 0x61
   170c4:	strb	r0, [fp, #-64]	; 0xffffffc0
   170c8:	b	17188 <__assert_fail@plt+0x5a34>
   170cc:	movw	r0, #98	; 0x62
   170d0:	strb	r0, [fp, #-64]	; 0xffffffc0
   170d4:	b	17188 <__assert_fail@plt+0x5a34>
   170d8:	movw	r0, #102	; 0x66
   170dc:	strb	r0, [fp, #-64]	; 0xffffffc0
   170e0:	b	17188 <__assert_fail@plt+0x5a34>
   170e4:	movw	r0, #110	; 0x6e
   170e8:	strb	r0, [fp, #-64]	; 0xffffffc0
   170ec:	b	17168 <__assert_fail@plt+0x5a14>
   170f0:	movw	r0, #114	; 0x72
   170f4:	strb	r0, [fp, #-64]	; 0xffffffc0
   170f8:	b	17168 <__assert_fail@plt+0x5a14>
   170fc:	movw	r0, #116	; 0x74
   17100:	strb	r0, [fp, #-64]	; 0xffffffc0
   17104:	b	17168 <__assert_fail@plt+0x5a14>
   17108:	movw	r0, #118	; 0x76
   1710c:	strb	r0, [fp, #-64]	; 0xffffffc0
   17110:	b	17188 <__assert_fail@plt+0x5a34>
   17114:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   17118:	strb	r0, [fp, #-64]	; 0xffffffc0
   1711c:	ldr	r0, [fp, #8]
   17120:	cmp	r0, #2
   17124:	bne	1713c <__assert_fail@plt+0x59e8>
   17128:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1712c:	tst	r0, #1
   17130:	beq	17138 <__assert_fail@plt+0x59e4>
   17134:	b	17d2c <__assert_fail@plt+0x65d8>
   17138:	b	17ac0 <__assert_fail@plt+0x636c>
   1713c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17140:	tst	r0, #1
   17144:	beq	17164 <__assert_fail@plt+0x5a10>
   17148:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1714c:	tst	r0, #1
   17150:	beq	17164 <__assert_fail@plt+0x5a10>
   17154:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17158:	cmp	r0, #0
   1715c:	beq	17164 <__assert_fail@plt+0x5a10>
   17160:	b	17ac0 <__assert_fail@plt+0x636c>
   17164:	b	17168 <__assert_fail@plt+0x5a14>
   17168:	ldr	r0, [fp, #8]
   1716c:	cmp	r0, #2
   17170:	bne	17184 <__assert_fail@plt+0x5a30>
   17174:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17178:	tst	r0, #1
   1717c:	beq	17184 <__assert_fail@plt+0x5a30>
   17180:	b	17d2c <__assert_fail@plt+0x65d8>
   17184:	b	17188 <__assert_fail@plt+0x5a34>
   17188:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1718c:	tst	r0, #1
   17190:	beq	171a0 <__assert_fail@plt+0x5a4c>
   17194:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   17198:	strb	r0, [fp, #-63]	; 0xffffffc1
   1719c:	b	179ac <__assert_fail@plt+0x6258>
   171a0:	b	17938 <__assert_fail@plt+0x61e4>
   171a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   171a8:	cmn	r0, #1
   171ac:	bne	171c4 <__assert_fail@plt+0x5a70>
   171b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   171b4:	ldrb	r0, [r0, #1]
   171b8:	cmp	r0, #0
   171bc:	beq	171d4 <__assert_fail@plt+0x5a80>
   171c0:	b	171d0 <__assert_fail@plt+0x5a7c>
   171c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   171c8:	cmp	r0, #1
   171cc:	beq	171d4 <__assert_fail@plt+0x5a80>
   171d0:	b	17938 <__assert_fail@plt+0x61e4>
   171d4:	b	171d8 <__assert_fail@plt+0x5a84>
   171d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   171dc:	cmp	r0, #0
   171e0:	beq	171e8 <__assert_fail@plt+0x5a94>
   171e4:	b	17938 <__assert_fail@plt+0x61e4>
   171e8:	b	171ec <__assert_fail@plt+0x5a98>
   171ec:	movw	r0, #1
   171f0:	strb	r0, [fp, #-67]	; 0xffffffbd
   171f4:	ldr	r0, [fp, #8]
   171f8:	cmp	r0, #2
   171fc:	bne	17210 <__assert_fail@plt+0x5abc>
   17200:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17204:	tst	r0, #1
   17208:	beq	17210 <__assert_fail@plt+0x5abc>
   1720c:	b	17d2c <__assert_fail@plt+0x65d8>
   17210:	b	17938 <__assert_fail@plt+0x61e4>
   17214:	movw	r0, #1
   17218:	strb	r0, [fp, #-61]	; 0xffffffc3
   1721c:	strb	r0, [fp, #-67]	; 0xffffffbd
   17220:	ldr	r0, [fp, #8]
   17224:	cmp	r0, #2
   17228:	bne	17308 <__assert_fail@plt+0x5bb4>
   1722c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17230:	tst	r0, #1
   17234:	beq	1723c <__assert_fail@plt+0x5ae8>
   17238:	b	17d2c <__assert_fail@plt+0x65d8>
   1723c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17240:	cmp	r0, #0
   17244:	beq	17264 <__assert_fail@plt+0x5b10>
   17248:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1724c:	cmp	r0, #0
   17250:	bne	17264 <__assert_fail@plt+0x5b10>
   17254:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17258:	str	r0, [fp, #-48]	; 0xffffffd0
   1725c:	movw	r0, #0
   17260:	str	r0, [fp, #-28]	; 0xffffffe4
   17264:	b	17268 <__assert_fail@plt+0x5b14>
   17268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1726c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17270:	cmp	r0, r1
   17274:	bcs	1728c <__assert_fail@plt+0x5b38>
   17278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1727c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17280:	add	r0, r0, r1
   17284:	movw	r1, #39	; 0x27
   17288:	strb	r1, [r0]
   1728c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17290:	add	r0, r0, #1
   17294:	str	r0, [fp, #-44]	; 0xffffffd4
   17298:	b	1729c <__assert_fail@plt+0x5b48>
   1729c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   172a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   172a4:	cmp	r0, r1
   172a8:	bcs	172c0 <__assert_fail@plt+0x5b6c>
   172ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   172b4:	add	r0, r0, r1
   172b8:	movw	r1, #92	; 0x5c
   172bc:	strb	r1, [r0]
   172c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   172c4:	add	r0, r0, #1
   172c8:	str	r0, [fp, #-44]	; 0xffffffd4
   172cc:	b	172d0 <__assert_fail@plt+0x5b7c>
   172d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   172d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   172d8:	cmp	r0, r1
   172dc:	bcs	172f4 <__assert_fail@plt+0x5ba0>
   172e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   172e8:	add	r0, r0, r1
   172ec:	movw	r1, #39	; 0x27
   172f0:	strb	r1, [r0]
   172f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   172f8:	add	r0, r0, #1
   172fc:	str	r0, [fp, #-44]	; 0xffffffd4
   17300:	movw	r0, #0
   17304:	strb	r0, [fp, #-60]	; 0xffffffc4
   17308:	b	17938 <__assert_fail@plt+0x61e4>
   1730c:	movw	r0, #1
   17310:	strb	r0, [fp, #-67]	; 0xffffffbd
   17314:	b	17938 <__assert_fail@plt+0x61e4>
   17318:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   1731c:	tst	r0, #1
   17320:	beq	17360 <__assert_fail@plt+0x5c0c>
   17324:	mov	r0, #1
   17328:	str	r0, [fp, #-72]	; 0xffffffb8
   1732c:	bl	115e0 <__ctype_b_loc@plt>
   17330:	ldr	r0, [r0]
   17334:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   17338:	mov	r2, r1
   1733c:	add	r0, r0, r1, lsl #1
   17340:	ldrh	r0, [r0]
   17344:	and	r0, r0, #16384	; 0x4000
   17348:	cmp	r0, #0
   1734c:	movw	r0, #0
   17350:	movne	r0, #1
   17354:	and	r0, r0, #1
   17358:	strb	r0, [fp, #-73]	; 0xffffffb7
   1735c:	b	175ec <__assert_fail@plt+0x5e98>
   17360:	sub	r0, fp, #84	; 0x54
   17364:	movw	r1, #0
   17368:	and	r1, r1, #255	; 0xff
   1736c:	movw	r2, #8
   17370:	bl	11658 <memset@plt>
   17374:	movw	r0, #0
   17378:	str	r0, [fp, #-72]	; 0xffffffb8
   1737c:	movw	r0, #1
   17380:	strb	r0, [fp, #-73]	; 0xffffffb7
   17384:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17388:	cmn	r0, #1
   1738c:	bne	1739c <__assert_fail@plt+0x5c48>
   17390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17394:	bl	11604 <strlen@plt>
   17398:	str	r0, [fp, #-36]	; 0xffffffdc
   1739c:	b	173a0 <__assert_fail@plt+0x5c4c>
   173a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   173a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   173ac:	add	r1, r1, r2
   173b0:	add	r1, r0, r1
   173b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   173b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   173bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   173c0:	add	r2, r2, r3
   173c4:	sub	r2, r0, r2
   173c8:	add	r0, sp, #88	; 0x58
   173cc:	sub	r3, fp, #84	; 0x54
   173d0:	bl	39e50 <__assert_fail@plt+0x286fc>
   173d4:	str	r0, [sp, #84]	; 0x54
   173d8:	ldr	r0, [sp, #84]	; 0x54
   173dc:	cmp	r0, #0
   173e0:	bne	173e8 <__assert_fail@plt+0x5c94>
   173e4:	b	175e8 <__assert_fail@plt+0x5e94>
   173e8:	ldr	r0, [sp, #84]	; 0x54
   173ec:	cmn	r0, #1
   173f0:	bne	17400 <__assert_fail@plt+0x5cac>
   173f4:	movw	r0, #0
   173f8:	strb	r0, [fp, #-73]	; 0xffffffb7
   173fc:	b	175e8 <__assert_fail@plt+0x5e94>
   17400:	ldr	r0, [sp, #84]	; 0x54
   17404:	cmn	r0, #2
   17408:	bne	1747c <__assert_fail@plt+0x5d28>
   1740c:	movw	r0, #0
   17410:	strb	r0, [fp, #-73]	; 0xffffffb7
   17414:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17418:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1741c:	add	r0, r0, r1
   17420:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17424:	cmp	r0, r1
   17428:	movw	r0, #0
   1742c:	str	r0, [sp, #24]
   17430:	bcs	1745c <__assert_fail@plt+0x5d08>
   17434:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17438:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1743c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17440:	add	r1, r1, r2
   17444:	add	r0, r0, r1
   17448:	ldrb	r0, [r0]
   1744c:	cmp	r0, #0
   17450:	movw	r0, #0
   17454:	movne	r0, #1
   17458:	str	r0, [sp, #24]
   1745c:	ldr	r0, [sp, #24]
   17460:	tst	r0, #1
   17464:	beq	17478 <__assert_fail@plt+0x5d24>
   17468:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1746c:	add	r0, r0, #1
   17470:	str	r0, [fp, #-72]	; 0xffffffb8
   17474:	b	17414 <__assert_fail@plt+0x5cc0>
   17478:	b	175e8 <__assert_fail@plt+0x5e94>
   1747c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17480:	tst	r0, #1
   17484:	beq	17590 <__assert_fail@plt+0x5e3c>
   17488:	ldr	r0, [fp, #8]
   1748c:	cmp	r0, #2
   17490:	bne	17590 <__assert_fail@plt+0x5e3c>
   17494:	movw	r0, #1
   17498:	str	r0, [sp, #80]	; 0x50
   1749c:	ldr	r0, [sp, #80]	; 0x50
   174a0:	ldr	r1, [sp, #84]	; 0x54
   174a4:	cmp	r0, r1
   174a8:	bcs	1758c <__assert_fail@plt+0x5e38>
   174ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   174b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   174b8:	add	r1, r1, r2
   174bc:	ldr	r2, [sp, #80]	; 0x50
   174c0:	add	r1, r1, r2
   174c4:	ldrb	r0, [r0, r1]
   174c8:	sub	r0, r0, #91	; 0x5b
   174cc:	cmp	r0, #33	; 0x21
   174d0:	str	r0, [sp, #20]
   174d4:	bhi	17574 <__assert_fail@plt+0x5e20>
   174d8:	add	r0, pc, #8
   174dc:	ldr	r1, [sp, #20]
   174e0:	ldr	r0, [r0, r1, lsl #2]
   174e4:	mov	pc, r0
   174e8:	andeq	r7, r1, r0, ror r5
   174ec:	andeq	r7, r1, r0, ror r5
   174f0:	andeq	r7, r1, r4, ror r5
   174f4:	andeq	r7, r1, r0, ror r5
   174f8:	andeq	r7, r1, r4, ror r5
   174fc:	andeq	r7, r1, r0, ror r5
   17500:	andeq	r7, r1, r4, ror r5
   17504:	andeq	r7, r1, r4, ror r5
   17508:	andeq	r7, r1, r4, ror r5
   1750c:	andeq	r7, r1, r4, ror r5
   17510:	andeq	r7, r1, r4, ror r5
   17514:	andeq	r7, r1, r4, ror r5
   17518:	andeq	r7, r1, r4, ror r5
   1751c:	andeq	r7, r1, r4, ror r5
   17520:	andeq	r7, r1, r4, ror r5
   17524:	andeq	r7, r1, r4, ror r5
   17528:	andeq	r7, r1, r4, ror r5
   1752c:	andeq	r7, r1, r4, ror r5
   17530:	andeq	r7, r1, r4, ror r5
   17534:	andeq	r7, r1, r4, ror r5
   17538:	andeq	r7, r1, r4, ror r5
   1753c:	andeq	r7, r1, r4, ror r5
   17540:	andeq	r7, r1, r4, ror r5
   17544:	andeq	r7, r1, r4, ror r5
   17548:	andeq	r7, r1, r4, ror r5
   1754c:	andeq	r7, r1, r4, ror r5
   17550:	andeq	r7, r1, r4, ror r5
   17554:	andeq	r7, r1, r4, ror r5
   17558:	andeq	r7, r1, r4, ror r5
   1755c:	andeq	r7, r1, r4, ror r5
   17560:	andeq	r7, r1, r4, ror r5
   17564:	andeq	r7, r1, r4, ror r5
   17568:	andeq	r7, r1, r4, ror r5
   1756c:	andeq	r7, r1, r0, ror r5
   17570:	b	17d2c <__assert_fail@plt+0x65d8>
   17574:	b	17578 <__assert_fail@plt+0x5e24>
   17578:	b	1757c <__assert_fail@plt+0x5e28>
   1757c:	ldr	r0, [sp, #80]	; 0x50
   17580:	add	r0, r0, #1
   17584:	str	r0, [sp, #80]	; 0x50
   17588:	b	1749c <__assert_fail@plt+0x5d48>
   1758c:	b	17590 <__assert_fail@plt+0x5e3c>
   17590:	ldr	r0, [sp, #88]	; 0x58
   17594:	bl	11520 <iswprint@plt>
   17598:	cmp	r0, #0
   1759c:	bne	175a8 <__assert_fail@plt+0x5e54>
   175a0:	movw	r0, #0
   175a4:	strb	r0, [fp, #-73]	; 0xffffffb7
   175a8:	ldr	r0, [sp, #84]	; 0x54
   175ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   175b0:	add	r0, r1, r0
   175b4:	str	r0, [fp, #-72]	; 0xffffffb8
   175b8:	b	175bc <__assert_fail@plt+0x5e68>
   175bc:	b	175c0 <__assert_fail@plt+0x5e6c>
   175c0:	b	175c4 <__assert_fail@plt+0x5e70>
   175c4:	sub	r0, fp, #84	; 0x54
   175c8:	bl	114a8 <mbsinit@plt>
   175cc:	cmp	r0, #0
   175d0:	movw	r0, #0
   175d4:	movne	r0, #1
   175d8:	mvn	r1, #0
   175dc:	eor	r0, r0, r1
   175e0:	tst	r0, #1
   175e4:	bne	173a0 <__assert_fail@plt+0x5c4c>
   175e8:	b	175ec <__assert_fail@plt+0x5e98>
   175ec:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   175f0:	and	r0, r0, #1
   175f4:	strb	r0, [fp, #-67]	; 0xffffffbd
   175f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   175fc:	movw	r1, #1
   17600:	cmp	r1, r0
   17604:	bcc	17620 <__assert_fail@plt+0x5ecc>
   17608:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1760c:	tst	r0, #1
   17610:	beq	17934 <__assert_fail@plt+0x61e0>
   17614:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   17618:	tst	r0, #1
   1761c:	bne	17934 <__assert_fail@plt+0x61e0>
   17620:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17624:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17628:	add	r0, r0, r1
   1762c:	str	r0, [sp, #76]	; 0x4c
   17630:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17634:	tst	r0, #1
   17638:	beq	177e8 <__assert_fail@plt+0x6094>
   1763c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   17640:	tst	r0, #1
   17644:	bne	177e8 <__assert_fail@plt+0x6094>
   17648:	b	1764c <__assert_fail@plt+0x5ef8>
   1764c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17650:	tst	r0, #1
   17654:	beq	1765c <__assert_fail@plt+0x5f08>
   17658:	b	17d2c <__assert_fail@plt+0x65d8>
   1765c:	movw	r0, #1
   17660:	strb	r0, [fp, #-66]	; 0xffffffbe
   17664:	ldr	r0, [fp, #8]
   17668:	cmp	r0, #2
   1766c:	bne	17720 <__assert_fail@plt+0x5fcc>
   17670:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17674:	tst	r0, #1
   17678:	bne	17720 <__assert_fail@plt+0x5fcc>
   1767c:	b	17680 <__assert_fail@plt+0x5f2c>
   17680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17684:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17688:	cmp	r0, r1
   1768c:	bcs	176a4 <__assert_fail@plt+0x5f50>
   17690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17694:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17698:	add	r0, r0, r1
   1769c:	movw	r1, #39	; 0x27
   176a0:	strb	r1, [r0]
   176a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   176a8:	add	r0, r0, #1
   176ac:	str	r0, [fp, #-44]	; 0xffffffd4
   176b0:	b	176b4 <__assert_fail@plt+0x5f60>
   176b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   176b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   176bc:	cmp	r0, r1
   176c0:	bcs	176d8 <__assert_fail@plt+0x5f84>
   176c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   176cc:	add	r0, r0, r1
   176d0:	movw	r1, #36	; 0x24
   176d4:	strb	r1, [r0]
   176d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   176dc:	add	r0, r0, #1
   176e0:	str	r0, [fp, #-44]	; 0xffffffd4
   176e4:	b	176e8 <__assert_fail@plt+0x5f94>
   176e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   176ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   176f0:	cmp	r0, r1
   176f4:	bcs	1770c <__assert_fail@plt+0x5fb8>
   176f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17700:	add	r0, r0, r1
   17704:	movw	r1, #39	; 0x27
   17708:	strb	r1, [r0]
   1770c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17710:	add	r0, r0, #1
   17714:	str	r0, [fp, #-44]	; 0xffffffd4
   17718:	movw	r0, #1
   1771c:	strb	r0, [fp, #-60]	; 0xffffffc4
   17720:	b	17724 <__assert_fail@plt+0x5fd0>
   17724:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1772c:	cmp	r0, r1
   17730:	bcs	17748 <__assert_fail@plt+0x5ff4>
   17734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17738:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1773c:	add	r0, r0, r1
   17740:	movw	r1, #92	; 0x5c
   17744:	strb	r1, [r0]
   17748:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1774c:	add	r0, r0, #1
   17750:	str	r0, [fp, #-44]	; 0xffffffd4
   17754:	b	17758 <__assert_fail@plt+0x6004>
   17758:	b	1775c <__assert_fail@plt+0x6008>
   1775c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17764:	cmp	r0, r1
   17768:	bcs	17788 <__assert_fail@plt+0x6034>
   1776c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   17770:	asr	r0, r0, #6
   17774:	add	r0, r0, #48	; 0x30
   17778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1777c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17780:	add	r1, r1, r2
   17784:	strb	r0, [r1]
   17788:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1778c:	add	r0, r0, #1
   17790:	str	r0, [fp, #-44]	; 0xffffffd4
   17794:	b	17798 <__assert_fail@plt+0x6044>
   17798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1779c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   177a0:	cmp	r0, r1
   177a4:	bcs	177c8 <__assert_fail@plt+0x6074>
   177a8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   177ac:	asr	r0, r0, #3
   177b0:	and	r0, r0, #7
   177b4:	add	r0, r0, #48	; 0x30
   177b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   177c0:	add	r1, r1, r2
   177c4:	strb	r0, [r1]
   177c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177cc:	add	r0, r0, #1
   177d0:	str	r0, [fp, #-44]	; 0xffffffd4
   177d4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   177d8:	and	r0, r0, #7
   177dc:	add	r0, r0, #48	; 0x30
   177e0:	strb	r0, [fp, #-63]	; 0xffffffc1
   177e4:	b	17834 <__assert_fail@plt+0x60e0>
   177e8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   177ec:	tst	r0, #1
   177f0:	beq	17830 <__assert_fail@plt+0x60dc>
   177f4:	b	177f8 <__assert_fail@plt+0x60a4>
   177f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17800:	cmp	r0, r1
   17804:	bcs	1781c <__assert_fail@plt+0x60c8>
   17808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1780c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17810:	add	r0, r0, r1
   17814:	movw	r1, #92	; 0x5c
   17818:	strb	r1, [r0]
   1781c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17820:	add	r0, r0, #1
   17824:	str	r0, [fp, #-44]	; 0xffffffd4
   17828:	movw	r0, #0
   1782c:	strb	r0, [fp, #-65]	; 0xffffffbf
   17830:	b	17834 <__assert_fail@plt+0x60e0>
   17834:	ldr	r0, [sp, #76]	; 0x4c
   17838:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1783c:	add	r1, r1, #1
   17840:	cmp	r0, r1
   17844:	bhi	1784c <__assert_fail@plt+0x60f8>
   17848:	b	17930 <__assert_fail@plt+0x61dc>
   1784c:	b	17850 <__assert_fail@plt+0x60fc>
   17850:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17854:	tst	r0, #1
   17858:	beq	178d8 <__assert_fail@plt+0x6184>
   1785c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   17860:	tst	r0, #1
   17864:	bne	178d8 <__assert_fail@plt+0x6184>
   17868:	b	1786c <__assert_fail@plt+0x6118>
   1786c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17870:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17874:	cmp	r0, r1
   17878:	bcs	17890 <__assert_fail@plt+0x613c>
   1787c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17880:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17884:	add	r0, r0, r1
   17888:	movw	r1, #39	; 0x27
   1788c:	strb	r1, [r0]
   17890:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17894:	add	r0, r0, #1
   17898:	str	r0, [fp, #-44]	; 0xffffffd4
   1789c:	b	178a0 <__assert_fail@plt+0x614c>
   178a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   178a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   178a8:	cmp	r0, r1
   178ac:	bcs	178c4 <__assert_fail@plt+0x6170>
   178b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   178b8:	add	r0, r0, r1
   178bc:	movw	r1, #39	; 0x27
   178c0:	strb	r1, [r0]
   178c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   178c8:	add	r0, r0, #1
   178cc:	str	r0, [fp, #-44]	; 0xffffffd4
   178d0:	movw	r0, #0
   178d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   178d8:	b	178dc <__assert_fail@plt+0x6188>
   178dc:	b	178e0 <__assert_fail@plt+0x618c>
   178e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   178e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   178e8:	cmp	r0, r1
   178ec:	bcs	17904 <__assert_fail@plt+0x61b0>
   178f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   178f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   178fc:	add	r1, r1, r2
   17900:	strb	r0, [r1]
   17904:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17908:	add	r0, r0, #1
   1790c:	str	r0, [fp, #-44]	; 0xffffffd4
   17910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17914:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17918:	add	r1, r1, #1
   1791c:	str	r1, [fp, #-40]	; 0xffffffd8
   17920:	add	r0, r0, r1
   17924:	ldrb	r0, [r0]
   17928:	strb	r0, [fp, #-63]	; 0xffffffc1
   1792c:	b	17630 <__assert_fail@plt+0x5edc>
   17930:	b	17ac0 <__assert_fail@plt+0x636c>
   17934:	b	17938 <__assert_fail@plt+0x61e4>
   17938:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1793c:	tst	r0, #1
   17940:	beq	17950 <__assert_fail@plt+0x61fc>
   17944:	ldr	r0, [fp, #8]
   17948:	cmp	r0, #2
   1794c:	bne	1795c <__assert_fail@plt+0x6208>
   17950:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17954:	tst	r0, #1
   17958:	beq	17998 <__assert_fail@plt+0x6244>
   1795c:	ldr	r0, [fp, #16]
   17960:	movw	r1, #0
   17964:	cmp	r0, r1
   17968:	beq	17998 <__assert_fail@plt+0x6244>
   1796c:	ldr	r0, [fp, #16]
   17970:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   17974:	lsr	r1, r1, #5
   17978:	add	r0, r0, r1, lsl #2
   1797c:	ldr	r0, [r0]
   17980:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   17984:	and	r1, r1, #31
   17988:	lsr	r0, r0, r1
   1798c:	and	r0, r0, #1
   17990:	cmp	r0, #0
   17994:	bne	179a8 <__assert_fail@plt+0x6254>
   17998:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1799c:	tst	r0, #1
   179a0:	bne	179a8 <__assert_fail@plt+0x6254>
   179a4:	b	17ac0 <__assert_fail@plt+0x636c>
   179a8:	b	179ac <__assert_fail@plt+0x6258>
   179ac:	b	179b0 <__assert_fail@plt+0x625c>
   179b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   179b4:	tst	r0, #1
   179b8:	beq	179c0 <__assert_fail@plt+0x626c>
   179bc:	b	17d2c <__assert_fail@plt+0x65d8>
   179c0:	movw	r0, #1
   179c4:	strb	r0, [fp, #-66]	; 0xffffffbe
   179c8:	ldr	r0, [fp, #8]
   179cc:	cmp	r0, #2
   179d0:	bne	17a84 <__assert_fail@plt+0x6330>
   179d4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   179d8:	tst	r0, #1
   179dc:	bne	17a84 <__assert_fail@plt+0x6330>
   179e0:	b	179e4 <__assert_fail@plt+0x6290>
   179e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   179ec:	cmp	r0, r1
   179f0:	bcs	17a08 <__assert_fail@plt+0x62b4>
   179f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   179fc:	add	r0, r0, r1
   17a00:	movw	r1, #39	; 0x27
   17a04:	strb	r1, [r0]
   17a08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a0c:	add	r0, r0, #1
   17a10:	str	r0, [fp, #-44]	; 0xffffffd4
   17a14:	b	17a18 <__assert_fail@plt+0x62c4>
   17a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a20:	cmp	r0, r1
   17a24:	bcs	17a3c <__assert_fail@plt+0x62e8>
   17a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17a30:	add	r0, r0, r1
   17a34:	movw	r1, #36	; 0x24
   17a38:	strb	r1, [r0]
   17a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a40:	add	r0, r0, #1
   17a44:	str	r0, [fp, #-44]	; 0xffffffd4
   17a48:	b	17a4c <__assert_fail@plt+0x62f8>
   17a4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a54:	cmp	r0, r1
   17a58:	bcs	17a70 <__assert_fail@plt+0x631c>
   17a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17a64:	add	r0, r0, r1
   17a68:	movw	r1, #39	; 0x27
   17a6c:	strb	r1, [r0]
   17a70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a74:	add	r0, r0, #1
   17a78:	str	r0, [fp, #-44]	; 0xffffffd4
   17a7c:	movw	r0, #1
   17a80:	strb	r0, [fp, #-60]	; 0xffffffc4
   17a84:	b	17a88 <__assert_fail@plt+0x6334>
   17a88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a90:	cmp	r0, r1
   17a94:	bcs	17aac <__assert_fail@plt+0x6358>
   17a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17aa0:	add	r0, r0, r1
   17aa4:	movw	r1, #92	; 0x5c
   17aa8:	strb	r1, [r0]
   17aac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ab0:	add	r0, r0, #1
   17ab4:	str	r0, [fp, #-44]	; 0xffffffd4
   17ab8:	b	17abc <__assert_fail@plt+0x6368>
   17abc:	b	17ac0 <__assert_fail@plt+0x636c>
   17ac0:	b	17ac4 <__assert_fail@plt+0x6370>
   17ac4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17ac8:	tst	r0, #1
   17acc:	beq	17b4c <__assert_fail@plt+0x63f8>
   17ad0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   17ad4:	tst	r0, #1
   17ad8:	bne	17b4c <__assert_fail@plt+0x63f8>
   17adc:	b	17ae0 <__assert_fail@plt+0x638c>
   17ae0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ae8:	cmp	r0, r1
   17aec:	bcs	17b04 <__assert_fail@plt+0x63b0>
   17af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17af4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17af8:	add	r0, r0, r1
   17afc:	movw	r1, #39	; 0x27
   17b00:	strb	r1, [r0]
   17b04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b08:	add	r0, r0, #1
   17b0c:	str	r0, [fp, #-44]	; 0xffffffd4
   17b10:	b	17b14 <__assert_fail@plt+0x63c0>
   17b14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b1c:	cmp	r0, r1
   17b20:	bcs	17b38 <__assert_fail@plt+0x63e4>
   17b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17b2c:	add	r0, r0, r1
   17b30:	movw	r1, #39	; 0x27
   17b34:	strb	r1, [r0]
   17b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b3c:	add	r0, r0, #1
   17b40:	str	r0, [fp, #-44]	; 0xffffffd4
   17b44:	movw	r0, #0
   17b48:	strb	r0, [fp, #-60]	; 0xffffffc4
   17b4c:	b	17b50 <__assert_fail@plt+0x63fc>
   17b50:	b	17b54 <__assert_fail@plt+0x6400>
   17b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b5c:	cmp	r0, r1
   17b60:	bcs	17b78 <__assert_fail@plt+0x6424>
   17b64:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   17b68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17b70:	add	r1, r1, r2
   17b74:	strb	r0, [r1]
   17b78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b7c:	add	r0, r0, #1
   17b80:	str	r0, [fp, #-44]	; 0xffffffd4
   17b84:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   17b88:	tst	r0, #1
   17b8c:	bne	17b98 <__assert_fail@plt+0x6444>
   17b90:	movw	r0, #0
   17b94:	strb	r0, [fp, #-62]	; 0xffffffc2
   17b98:	b	17b9c <__assert_fail@plt+0x6448>
   17b9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ba0:	add	r0, r0, #1
   17ba4:	str	r0, [fp, #-40]	; 0xffffffd8
   17ba8:	b	16954 <__assert_fail@plt+0x5200>
   17bac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17bb0:	cmp	r0, #0
   17bb4:	bne	17bd4 <__assert_fail@plt+0x6480>
   17bb8:	ldr	r0, [fp, #8]
   17bbc:	cmp	r0, #2
   17bc0:	bne	17bd4 <__assert_fail@plt+0x6480>
   17bc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17bc8:	tst	r0, #1
   17bcc:	beq	17bd4 <__assert_fail@plt+0x6480>
   17bd0:	b	17d2c <__assert_fail@plt+0x65d8>
   17bd4:	ldr	r0, [fp, #8]
   17bd8:	cmp	r0, #2
   17bdc:	bne	17c7c <__assert_fail@plt+0x6528>
   17be0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17be4:	tst	r0, #1
   17be8:	bne	17c7c <__assert_fail@plt+0x6528>
   17bec:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   17bf0:	tst	r0, #1
   17bf4:	beq	17c7c <__assert_fail@plt+0x6528>
   17bf8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   17bfc:	tst	r0, #1
   17c00:	beq	17c48 <__assert_fail@plt+0x64f4>
   17c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c08:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17c0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17c10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c14:	ldr	ip, [fp, #12]
   17c18:	ldr	lr, [fp, #16]
   17c1c:	ldr	r4, [fp, #20]
   17c20:	ldr	r5, [fp, #24]
   17c24:	movw	r6, #5
   17c28:	str	r6, [sp]
   17c2c:	str	ip, [sp, #4]
   17c30:	str	lr, [sp, #8]
   17c34:	str	r4, [sp, #12]
   17c38:	str	r5, [sp, #16]
   17c3c:	bl	1666c <__assert_fail@plt+0x4f18>
   17c40:	str	r0, [fp, #-20]	; 0xffffffec
   17c44:	b	17d94 <__assert_fail@plt+0x6640>
   17c48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c4c:	cmp	r0, #0
   17c50:	bne	17c74 <__assert_fail@plt+0x6520>
   17c54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17c58:	cmp	r0, #0
   17c5c:	beq	17c74 <__assert_fail@plt+0x6520>
   17c60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17c64:	str	r0, [fp, #-28]	; 0xffffffe4
   17c68:	movw	r0, #0
   17c6c:	str	r0, [fp, #-44]	; 0xffffffd4
   17c70:	b	16714 <__assert_fail@plt+0x4fc0>
   17c74:	b	17c78 <__assert_fail@plt+0x6524>
   17c78:	b	17c7c <__assert_fail@plt+0x6528>
   17c7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17c80:	movw	r1, #0
   17c84:	cmp	r0, r1
   17c88:	beq	17cfc <__assert_fail@plt+0x65a8>
   17c8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   17c90:	tst	r0, #1
   17c94:	bne	17cfc <__assert_fail@plt+0x65a8>
   17c98:	b	17c9c <__assert_fail@plt+0x6548>
   17c9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17ca0:	ldrsb	r0, [r0]
   17ca4:	cmp	r0, #0
   17ca8:	beq	17cf8 <__assert_fail@plt+0x65a4>
   17cac:	b	17cb0 <__assert_fail@plt+0x655c>
   17cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17cb8:	cmp	r0, r1
   17cbc:	bcs	17cd8 <__assert_fail@plt+0x6584>
   17cc0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17cc4:	ldrb	r0, [r0]
   17cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ccc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17cd0:	add	r1, r1, r2
   17cd4:	strb	r0, [r1]
   17cd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17cdc:	add	r0, r0, #1
   17ce0:	str	r0, [fp, #-44]	; 0xffffffd4
   17ce4:	b	17ce8 <__assert_fail@plt+0x6594>
   17ce8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17cec:	add	r0, r0, #1
   17cf0:	str	r0, [fp, #-52]	; 0xffffffcc
   17cf4:	b	17c9c <__assert_fail@plt+0x6548>
   17cf8:	b	17cfc <__assert_fail@plt+0x65a8>
   17cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17d00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17d04:	cmp	r0, r1
   17d08:	bcs	17d20 <__assert_fail@plt+0x65cc>
   17d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d14:	add	r0, r0, r1
   17d18:	movw	r1, #0
   17d1c:	strb	r1, [r0]
   17d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17d24:	str	r0, [fp, #-20]	; 0xffffffec
   17d28:	b	17d94 <__assert_fail@plt+0x6640>
   17d2c:	ldr	r0, [fp, #8]
   17d30:	cmp	r0, #2
   17d34:	bne	17d4c <__assert_fail@plt+0x65f8>
   17d38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17d3c:	tst	r0, #1
   17d40:	beq	17d4c <__assert_fail@plt+0x65f8>
   17d44:	movw	r0, #4
   17d48:	str	r0, [fp, #8]
   17d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17d54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17d58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d5c:	ldr	ip, [fp, #8]
   17d60:	ldr	lr, [fp, #12]
   17d64:	mvn	r4, #2
   17d68:	and	lr, lr, r4
   17d6c:	ldr	r4, [fp, #20]
   17d70:	ldr	r5, [fp, #24]
   17d74:	str	ip, [sp]
   17d78:	str	lr, [sp, #4]
   17d7c:	movw	ip, #0
   17d80:	str	ip, [sp, #8]
   17d84:	str	r4, [sp, #12]
   17d88:	str	r5, [sp, #16]
   17d8c:	bl	1666c <__assert_fail@plt+0x4f18>
   17d90:	str	r0, [fp, #-20]	; 0xffffffec
   17d94:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d98:	sub	sp, fp, #16
   17d9c:	pop	{r4, r5, r6, sl, fp, pc}
   17da0:	push	{fp, lr}
   17da4:	mov	fp, sp
   17da8:	sub	sp, sp, #16
   17dac:	str	r0, [fp, #-4]
   17db0:	str	r1, [sp, #8]
   17db4:	str	r2, [sp, #4]
   17db8:	ldr	r0, [fp, #-4]
   17dbc:	ldr	r1, [sp, #8]
   17dc0:	ldr	r3, [sp, #4]
   17dc4:	movw	r2, #0
   17dc8:	bl	17dd4 <__assert_fail@plt+0x6680>
   17dcc:	mov	sp, fp
   17dd0:	pop	{fp, pc}
   17dd4:	push	{r4, r5, r6, sl, fp, lr}
   17dd8:	add	fp, sp, #16
   17ddc:	sub	sp, sp, #80	; 0x50
   17de0:	str	r0, [fp, #-20]	; 0xffffffec
   17de4:	str	r1, [fp, #-24]	; 0xffffffe8
   17de8:	str	r2, [fp, #-28]	; 0xffffffe4
   17dec:	str	r3, [fp, #-32]	; 0xffffffe0
   17df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17df4:	movw	r1, #0
   17df8:	cmp	r0, r1
   17dfc:	beq	17e0c <__assert_fail@plt+0x66b8>
   17e00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e04:	str	r0, [sp, #40]	; 0x28
   17e08:	b	17e1c <__assert_fail@plt+0x66c8>
   17e0c:	movw	r0, #58048	; 0xe2c0
   17e10:	movt	r0, #4
   17e14:	str	r0, [sp, #40]	; 0x28
   17e18:	b	17e1c <__assert_fail@plt+0x66c8>
   17e1c:	ldr	r0, [sp, #40]	; 0x28
   17e20:	str	r0, [fp, #-36]	; 0xffffffdc
   17e24:	bl	11628 <__errno_location@plt>
   17e28:	ldr	r0, [r0]
   17e2c:	str	r0, [fp, #-40]	; 0xffffffd8
   17e30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17e34:	ldr	r0, [r0, #4]
   17e38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e3c:	movw	r2, #0
   17e40:	cmp	r1, r2
   17e44:	movw	r1, #0
   17e48:	movne	r1, #1
   17e4c:	tst	r1, #1
   17e50:	mov	r1, r2
   17e54:	moveq	r1, #1
   17e58:	orr	r0, r0, r1
   17e5c:	str	r0, [fp, #-44]	; 0xffffffd4
   17e60:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17e6c:	ldr	r1, [r1]
   17e70:	ldr	ip, [fp, #-44]	; 0xffffffd4
   17e74:	ldr	lr, [fp, #-36]	; 0xffffffdc
   17e78:	add	lr, lr, #8
   17e7c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17e80:	ldr	r4, [r4, #40]	; 0x28
   17e84:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17e88:	ldr	r5, [r5, #44]	; 0x2c
   17e8c:	str	r0, [sp, #36]	; 0x24
   17e90:	mov	r0, r2
   17e94:	str	r1, [sp, #32]
   17e98:	mov	r1, r2
   17e9c:	ldr	r2, [sp, #36]	; 0x24
   17ea0:	ldr	r6, [sp, #32]
   17ea4:	str	r6, [sp]
   17ea8:	str	ip, [sp, #4]
   17eac:	str	lr, [sp, #8]
   17eb0:	str	r4, [sp, #12]
   17eb4:	str	r5, [sp, #16]
   17eb8:	bl	1666c <__assert_fail@plt+0x4f18>
   17ebc:	add	r0, r0, #1
   17ec0:	str	r0, [sp, #48]	; 0x30
   17ec4:	ldr	r0, [sp, #48]	; 0x30
   17ec8:	bl	311f0 <__assert_fail@plt+0x1fa9c>
   17ecc:	str	r0, [sp, #44]	; 0x2c
   17ed0:	ldr	r0, [sp, #44]	; 0x2c
   17ed4:	ldr	r1, [sp, #48]	; 0x30
   17ed8:	ldr	r2, [fp, #-20]	; 0xffffffec
   17edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ee0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   17ee4:	ldr	ip, [ip]
   17ee8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   17eec:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17ef0:	add	r4, r4, #8
   17ef4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17ef8:	ldr	r5, [r5, #40]	; 0x28
   17efc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17f00:	ldr	r6, [r6, #44]	; 0x2c
   17f04:	str	ip, [sp]
   17f08:	str	lr, [sp, #4]
   17f0c:	str	r4, [sp, #8]
   17f10:	str	r5, [sp, #12]
   17f14:	str	r6, [sp, #16]
   17f18:	bl	1666c <__assert_fail@plt+0x4f18>
   17f1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f20:	str	r0, [sp, #28]
   17f24:	str	r1, [sp, #24]
   17f28:	bl	11628 <__errno_location@plt>
   17f2c:	ldr	r1, [sp, #24]
   17f30:	str	r1, [r0]
   17f34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f38:	movw	r2, #0
   17f3c:	cmp	r0, r2
   17f40:	beq	17f54 <__assert_fail@plt+0x6800>
   17f44:	ldr	r0, [sp, #48]	; 0x30
   17f48:	sub	r0, r0, #1
   17f4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17f50:	str	r0, [r1]
   17f54:	ldr	r0, [sp, #44]	; 0x2c
   17f58:	sub	sp, fp, #16
   17f5c:	pop	{r4, r5, r6, sl, fp, pc}
   17f60:	push	{fp, lr}
   17f64:	mov	fp, sp
   17f68:	sub	sp, sp, #8
   17f6c:	movw	r0, #57700	; 0xe164
   17f70:	movt	r0, #4
   17f74:	ldr	r0, [r0]
   17f78:	str	r0, [sp, #4]
   17f7c:	movw	r0, #1
   17f80:	str	r0, [sp]
   17f84:	ldr	r0, [sp]
   17f88:	movw	r1, #57704	; 0xe168
   17f8c:	movt	r1, #4
   17f90:	ldr	r1, [r1]
   17f94:	cmp	r0, r1
   17f98:	bge	17fc0 <__assert_fail@plt+0x686c>
   17f9c:	ldr	r0, [sp, #4]
   17fa0:	ldr	r1, [sp]
   17fa4:	add	r0, r0, r1, lsl #3
   17fa8:	ldr	r0, [r0, #4]
   17fac:	bl	15f68 <__assert_fail@plt+0x4814>
   17fb0:	ldr	r0, [sp]
   17fb4:	add	r0, r0, #1
   17fb8:	str	r0, [sp]
   17fbc:	b	17f84 <__assert_fail@plt+0x6830>
   17fc0:	ldr	r0, [sp, #4]
   17fc4:	ldr	r0, [r0, #4]
   17fc8:	movw	r1, #58096	; 0xe2f0
   17fcc:	movt	r1, #4
   17fd0:	cmp	r0, r1
   17fd4:	beq	18000 <__assert_fail@plt+0x68ac>
   17fd8:	ldr	r0, [sp, #4]
   17fdc:	ldr	r0, [r0, #4]
   17fe0:	bl	15f68 <__assert_fail@plt+0x4814>
   17fe4:	movw	r0, #256	; 0x100
   17fe8:	movw	r1, #57708	; 0xe16c
   17fec:	movt	r1, #4
   17ff0:	str	r0, [r1]
   17ff4:	movw	r0, #58096	; 0xe2f0
   17ff8:	movt	r0, #4
   17ffc:	str	r0, [r1, #4]
   18000:	ldr	r0, [sp, #4]
   18004:	movw	r1, #57708	; 0xe16c
   18008:	movt	r1, #4
   1800c:	cmp	r0, r1
   18010:	beq	18030 <__assert_fail@plt+0x68dc>
   18014:	ldr	r0, [sp, #4]
   18018:	bl	15f68 <__assert_fail@plt+0x4814>
   1801c:	movw	r0, #57700	; 0xe164
   18020:	movt	r0, #4
   18024:	movw	r1, #57708	; 0xe16c
   18028:	movt	r1, #4
   1802c:	str	r1, [r0]
   18030:	movw	r0, #57704	; 0xe168
   18034:	movt	r0, #4
   18038:	movw	r1, #1
   1803c:	str	r1, [r0]
   18040:	mov	sp, fp
   18044:	pop	{fp, pc}
   18048:	push	{fp, lr}
   1804c:	mov	fp, sp
   18050:	sub	sp, sp, #8
   18054:	str	r0, [sp, #4]
   18058:	str	r1, [sp]
   1805c:	ldr	r0, [sp, #4]
   18060:	ldr	r1, [sp]
   18064:	mvn	r2, #0
   18068:	movw	r3, #58048	; 0xe2c0
   1806c:	movt	r3, #4
   18070:	bl	1807c <__assert_fail@plt+0x6928>
   18074:	mov	sp, fp
   18078:	pop	{fp, pc}
   1807c:	push	{r4, r5, r6, sl, fp, lr}
   18080:	add	fp, sp, #16
   18084:	sub	sp, sp, #80	; 0x50
   18088:	str	r0, [fp, #-20]	; 0xffffffec
   1808c:	str	r1, [fp, #-24]	; 0xffffffe8
   18090:	str	r2, [fp, #-28]	; 0xffffffe4
   18094:	str	r3, [fp, #-32]	; 0xffffffe0
   18098:	bl	11628 <__errno_location@plt>
   1809c:	ldr	r1, [pc, #672]	; 18344 <__assert_fail@plt+0x6bf0>
   180a0:	ldr	r0, [r0]
   180a4:	str	r0, [fp, #-36]	; 0xffffffdc
   180a8:	movw	r0, #57700	; 0xe164
   180ac:	movt	r0, #4
   180b0:	ldr	r0, [r0]
   180b4:	str	r0, [fp, #-40]	; 0xffffffd8
   180b8:	str	r1, [fp, #-44]	; 0xffffffd4
   180bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   180c0:	movw	r1, #0
   180c4:	cmp	r1, r0
   180c8:	bgt	180dc <__assert_fail@plt+0x6988>
   180cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   180d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   180d4:	cmp	r0, r1
   180d8:	blt	180e0 <__assert_fail@plt+0x698c>
   180dc:	bl	1173c <abort@plt>
   180e0:	movw	r0, #57704	; 0xe168
   180e4:	movt	r0, #4
   180e8:	ldr	r0, [r0]
   180ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   180f0:	cmp	r0, r1
   180f4:	bgt	181ec <__assert_fail@plt+0x6a98>
   180f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   180fc:	movw	r1, #57708	; 0xe16c
   18100:	movt	r1, #4
   18104:	cmp	r0, r1
   18108:	movw	r0, #0
   1810c:	moveq	r0, #1
   18110:	and	r0, r0, #1
   18114:	strb	r0, [fp, #-45]	; 0xffffffd3
   18118:	movw	r0, #57704	; 0xe168
   1811c:	movt	r0, #4
   18120:	ldr	r0, [r0]
   18124:	str	r0, [sp, #44]	; 0x2c
   18128:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1812c:	tst	r0, #1
   18130:	beq	18140 <__assert_fail@plt+0x69ec>
   18134:	movw	r0, #0
   18138:	str	r0, [sp, #24]
   1813c:	b	18148 <__assert_fail@plt+0x69f4>
   18140:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18144:	str	r0, [sp, #24]
   18148:	ldr	r0, [sp, #24]
   1814c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18150:	movw	r2, #57704	; 0xe168
   18154:	movt	r2, #4
   18158:	ldr	r2, [r2]
   1815c:	sub	r1, r1, r2
   18160:	add	r2, r1, #1
   18164:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18168:	add	r1, sp, #44	; 0x2c
   1816c:	movw	ip, #8
   18170:	str	ip, [sp]
   18174:	bl	3142c <__assert_fail@plt+0x1fcd8>
   18178:	str	r0, [fp, #-40]	; 0xffffffd8
   1817c:	movw	r1, #57700	; 0xe164
   18180:	movt	r1, #4
   18184:	str	r0, [r1]
   18188:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1818c:	tst	r0, #1
   18190:	beq	181b0 <__assert_fail@plt+0x6a5c>
   18194:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18198:	movw	r1, #57708	; 0xe16c
   1819c:	movt	r1, #4
   181a0:	ldr	r2, [r1]
   181a4:	str	r2, [r0]
   181a8:	ldr	r1, [r1, #4]
   181ac:	str	r1, [r0, #4]
   181b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   181b4:	movw	r1, #57704	; 0xe168
   181b8:	movt	r1, #4
   181bc:	ldr	r1, [r1]
   181c0:	add	r0, r0, r1, lsl #3
   181c4:	ldr	r2, [sp, #44]	; 0x2c
   181c8:	sub	r1, r2, r1
   181cc:	lsl	r2, r1, #3
   181d0:	movw	r1, #0
   181d4:	and	r1, r1, #255	; 0xff
   181d8:	bl	11658 <memset@plt>
   181dc:	ldr	r0, [sp, #44]	; 0x2c
   181e0:	movw	r1, #57704	; 0xe168
   181e4:	movt	r1, #4
   181e8:	str	r0, [r1]
   181ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   181f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   181f4:	ldr	r0, [r0, r1, lsl #3]
   181f8:	str	r0, [sp, #40]	; 0x28
   181fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18200:	ldr	r1, [fp, #-20]	; 0xffffffec
   18204:	add	r0, r0, r1, lsl #3
   18208:	ldr	r0, [r0, #4]
   1820c:	str	r0, [sp, #36]	; 0x24
   18210:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18214:	ldr	r0, [r0, #4]
   18218:	orr	r0, r0, #1
   1821c:	str	r0, [sp, #32]
   18220:	ldr	r0, [sp, #36]	; 0x24
   18224:	ldr	r1, [sp, #40]	; 0x28
   18228:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1822c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18230:	ldr	ip, [fp, #-32]	; 0xffffffe0
   18234:	ldr	ip, [ip]
   18238:	ldr	lr, [sp, #32]
   1823c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   18240:	add	r4, r4, #8
   18244:	ldr	r5, [fp, #-32]	; 0xffffffe0
   18248:	ldr	r5, [r5, #40]	; 0x28
   1824c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   18250:	ldr	r6, [r6, #44]	; 0x2c
   18254:	str	ip, [sp]
   18258:	str	lr, [sp, #4]
   1825c:	str	r4, [sp, #8]
   18260:	str	r5, [sp, #12]
   18264:	str	r6, [sp, #16]
   18268:	bl	1666c <__assert_fail@plt+0x4f18>
   1826c:	str	r0, [sp, #28]
   18270:	ldr	r0, [sp, #40]	; 0x28
   18274:	ldr	r1, [sp, #28]
   18278:	cmp	r0, r1
   1827c:	bhi	18324 <__assert_fail@plt+0x6bd0>
   18280:	ldr	r0, [sp, #28]
   18284:	add	r0, r0, #1
   18288:	str	r0, [sp, #40]	; 0x28
   1828c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18290:	ldr	r2, [fp, #-20]	; 0xffffffec
   18294:	add	r1, r1, r2, lsl #3
   18298:	str	r0, [r1]
   1829c:	ldr	r0, [sp, #36]	; 0x24
   182a0:	movw	r1, #58096	; 0xe2f0
   182a4:	movt	r1, #4
   182a8:	cmp	r0, r1
   182ac:	beq	182b8 <__assert_fail@plt+0x6b64>
   182b0:	ldr	r0, [sp, #36]	; 0x24
   182b4:	bl	15f68 <__assert_fail@plt+0x4814>
   182b8:	ldr	r0, [sp, #40]	; 0x28
   182bc:	bl	311f0 <__assert_fail@plt+0x1fa9c>
   182c0:	mov	r1, r0
   182c4:	str	r0, [sp, #36]	; 0x24
   182c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   182cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   182d0:	add	r0, r0, r2, lsl #3
   182d4:	str	r1, [r0, #4]
   182d8:	ldr	r0, [sp, #36]	; 0x24
   182dc:	ldr	r1, [sp, #40]	; 0x28
   182e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   182e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   182e8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   182ec:	ldr	ip, [ip]
   182f0:	ldr	lr, [sp, #32]
   182f4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   182f8:	add	r4, r4, #8
   182fc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   18300:	ldr	r5, [r5, #40]	; 0x28
   18304:	ldr	r6, [fp, #-32]	; 0xffffffe0
   18308:	ldr	r6, [r6, #44]	; 0x2c
   1830c:	str	ip, [sp]
   18310:	str	lr, [sp, #4]
   18314:	str	r4, [sp, #8]
   18318:	str	r5, [sp, #12]
   1831c:	str	r6, [sp, #16]
   18320:	bl	1666c <__assert_fail@plt+0x4f18>
   18324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18328:	str	r0, [sp, #20]
   1832c:	bl	11628 <__errno_location@plt>
   18330:	ldr	r1, [sp, #20]
   18334:	str	r1, [r0]
   18338:	ldr	r0, [sp, #36]	; 0x24
   1833c:	sub	sp, fp, #16
   18340:	pop	{r4, r5, r6, sl, fp, pc}
   18344:	svcvc	0x00ffffff
   18348:	push	{fp, lr}
   1834c:	mov	fp, sp
   18350:	sub	sp, sp, #16
   18354:	str	r0, [fp, #-4]
   18358:	str	r1, [sp, #8]
   1835c:	str	r2, [sp, #4]
   18360:	ldr	r0, [fp, #-4]
   18364:	ldr	r1, [sp, #8]
   18368:	ldr	r2, [sp, #4]
   1836c:	movw	r3, #58048	; 0xe2c0
   18370:	movt	r3, #4
   18374:	bl	1807c <__assert_fail@plt+0x6928>
   18378:	mov	sp, fp
   1837c:	pop	{fp, pc}
   18380:	push	{fp, lr}
   18384:	mov	fp, sp
   18388:	sub	sp, sp, #8
   1838c:	str	r0, [sp, #4]
   18390:	ldr	r1, [sp, #4]
   18394:	movw	r0, #0
   18398:	bl	18048 <__assert_fail@plt+0x68f4>
   1839c:	mov	sp, fp
   183a0:	pop	{fp, pc}
   183a4:	push	{fp, lr}
   183a8:	mov	fp, sp
   183ac:	sub	sp, sp, #8
   183b0:	str	r0, [sp, #4]
   183b4:	str	r1, [sp]
   183b8:	ldr	r1, [sp, #4]
   183bc:	ldr	r2, [sp]
   183c0:	movw	r0, #0
   183c4:	bl	18348 <__assert_fail@plt+0x6bf4>
   183c8:	mov	sp, fp
   183cc:	pop	{fp, pc}
   183d0:	push	{fp, lr}
   183d4:	mov	fp, sp
   183d8:	sub	sp, sp, #64	; 0x40
   183dc:	str	r0, [fp, #-4]
   183e0:	str	r1, [fp, #-8]
   183e4:	str	r2, [fp, #-12]
   183e8:	ldr	r1, [fp, #-8]
   183ec:	add	r0, sp, #4
   183f0:	bl	18410 <__assert_fail@plt+0x6cbc>
   183f4:	ldr	r0, [fp, #-4]
   183f8:	ldr	r1, [fp, #-12]
   183fc:	mvn	r2, #0
   18400:	add	r3, sp, #4
   18404:	bl	1807c <__assert_fail@plt+0x6928>
   18408:	mov	sp, fp
   1840c:	pop	{fp, pc}
   18410:	push	{fp, lr}
   18414:	mov	fp, sp
   18418:	sub	sp, sp, #8
   1841c:	str	r1, [sp, #4]
   18420:	mov	r1, r0
   18424:	str	r0, [sp]
   18428:	mov	r0, r1
   1842c:	movw	r1, #0
   18430:	and	r1, r1, #255	; 0xff
   18434:	movw	r2, #48	; 0x30
   18438:	bl	11658 <memset@plt>
   1843c:	ldr	r0, [sp, #4]
   18440:	cmp	r0, #10
   18444:	bne	1844c <__assert_fail@plt+0x6cf8>
   18448:	bl	1173c <abort@plt>
   1844c:	ldr	r0, [sp, #4]
   18450:	ldr	r1, [sp]
   18454:	str	r0, [r1]
   18458:	mov	sp, fp
   1845c:	pop	{fp, pc}
   18460:	push	{fp, lr}
   18464:	mov	fp, sp
   18468:	sub	sp, sp, #64	; 0x40
   1846c:	str	r0, [fp, #-4]
   18470:	str	r1, [fp, #-8]
   18474:	str	r2, [fp, #-12]
   18478:	str	r3, [fp, #-16]
   1847c:	ldr	r1, [fp, #-8]
   18480:	mov	r0, sp
   18484:	bl	18410 <__assert_fail@plt+0x6cbc>
   18488:	ldr	r0, [fp, #-4]
   1848c:	ldr	r1, [fp, #-12]
   18490:	ldr	r2, [fp, #-16]
   18494:	mov	r3, sp
   18498:	bl	1807c <__assert_fail@plt+0x6928>
   1849c:	mov	sp, fp
   184a0:	pop	{fp, pc}
   184a4:	push	{fp, lr}
   184a8:	mov	fp, sp
   184ac:	sub	sp, sp, #8
   184b0:	str	r0, [sp, #4]
   184b4:	str	r1, [sp]
   184b8:	ldr	r1, [sp, #4]
   184bc:	ldr	r2, [sp]
   184c0:	movw	r0, #0
   184c4:	bl	183d0 <__assert_fail@plt+0x6c7c>
   184c8:	mov	sp, fp
   184cc:	pop	{fp, pc}
   184d0:	push	{fp, lr}
   184d4:	mov	fp, sp
   184d8:	sub	sp, sp, #16
   184dc:	str	r0, [fp, #-4]
   184e0:	str	r1, [sp, #8]
   184e4:	str	r2, [sp, #4]
   184e8:	ldr	r1, [fp, #-4]
   184ec:	ldr	r2, [sp, #8]
   184f0:	ldr	r3, [sp, #4]
   184f4:	movw	r0, #0
   184f8:	bl	18460 <__assert_fail@plt+0x6d0c>
   184fc:	mov	sp, fp
   18500:	pop	{fp, pc}
   18504:	push	{fp, lr}
   18508:	mov	fp, sp
   1850c:	sub	sp, sp, #72	; 0x48
   18510:	movw	r3, #58048	; 0xe2c0
   18514:	movt	r3, #4
   18518:	str	r0, [fp, #-4]
   1851c:	str	r1, [fp, #-8]
   18520:	strb	r2, [fp, #-9]
   18524:	add	r0, sp, #12
   18528:	mov	r1, r0
   1852c:	str	r0, [sp, #8]
   18530:	mov	r0, r1
   18534:	mov	r1, r3
   18538:	movw	r2, #48	; 0x30
   1853c:	bl	11478 <memcpy@plt>
   18540:	ldr	r0, [sp, #8]
   18544:	ldrb	r1, [fp, #-9]
   18548:	movw	r2, #1
   1854c:	bl	16414 <__assert_fail@plt+0x4cc0>
   18550:	ldr	r1, [fp, #-4]
   18554:	ldr	r2, [fp, #-8]
   18558:	movw	r3, #0
   1855c:	str	r0, [sp, #4]
   18560:	mov	r0, r3
   18564:	add	r3, sp, #12
   18568:	bl	1807c <__assert_fail@plt+0x6928>
   1856c:	mov	sp, fp
   18570:	pop	{fp, pc}
   18574:	push	{fp, lr}
   18578:	mov	fp, sp
   1857c:	sub	sp, sp, #8
   18580:	str	r0, [sp, #4]
   18584:	strb	r1, [sp, #3]
   18588:	ldr	r0, [sp, #4]
   1858c:	mvn	r1, #0
   18590:	ldrb	r2, [sp, #3]
   18594:	bl	18504 <__assert_fail@plt+0x6db0>
   18598:	mov	sp, fp
   1859c:	pop	{fp, pc}
   185a0:	push	{fp, lr}
   185a4:	mov	fp, sp
   185a8:	sub	sp, sp, #8
   185ac:	str	r0, [sp, #4]
   185b0:	ldr	r0, [sp, #4]
   185b4:	movw	r1, #58	; 0x3a
   185b8:	and	r1, r1, #255	; 0xff
   185bc:	bl	18574 <__assert_fail@plt+0x6e20>
   185c0:	mov	sp, fp
   185c4:	pop	{fp, pc}
   185c8:	push	{fp, lr}
   185cc:	mov	fp, sp
   185d0:	sub	sp, sp, #8
   185d4:	str	r0, [sp, #4]
   185d8:	str	r1, [sp]
   185dc:	ldr	r0, [sp, #4]
   185e0:	ldr	r1, [sp]
   185e4:	movw	r2, #58	; 0x3a
   185e8:	and	r2, r2, #255	; 0xff
   185ec:	bl	18504 <__assert_fail@plt+0x6db0>
   185f0:	mov	sp, fp
   185f4:	pop	{fp, pc}
   185f8:	push	{fp, lr}
   185fc:	mov	fp, sp
   18600:	sub	sp, sp, #120	; 0x78
   18604:	str	r0, [fp, #-4]
   18608:	str	r1, [fp, #-8]
   1860c:	str	r2, [fp, #-12]
   18610:	ldr	r1, [fp, #-8]
   18614:	add	r0, sp, #12
   18618:	bl	18410 <__assert_fail@plt+0x6cbc>
   1861c:	add	r0, sp, #60	; 0x3c
   18620:	mov	r1, r0
   18624:	add	r2, sp, #12
   18628:	str	r0, [sp, #8]
   1862c:	mov	r0, r1
   18630:	mov	r1, r2
   18634:	movw	r2, #48	; 0x30
   18638:	bl	11478 <memcpy@plt>
   1863c:	ldr	r0, [sp, #8]
   18640:	movw	r1, #58	; 0x3a
   18644:	and	r1, r1, #255	; 0xff
   18648:	movw	r2, #1
   1864c:	bl	16414 <__assert_fail@plt+0x4cc0>
   18650:	ldr	r1, [fp, #-4]
   18654:	ldr	r2, [fp, #-12]
   18658:	str	r0, [sp, #4]
   1865c:	mov	r0, r1
   18660:	mov	r1, r2
   18664:	mvn	r2, #0
   18668:	add	r3, sp, #60	; 0x3c
   1866c:	bl	1807c <__assert_fail@plt+0x6928>
   18670:	mov	sp, fp
   18674:	pop	{fp, pc}
   18678:	push	{fp, lr}
   1867c:	mov	fp, sp
   18680:	sub	sp, sp, #24
   18684:	str	r0, [fp, #-4]
   18688:	str	r1, [fp, #-8]
   1868c:	str	r2, [sp, #12]
   18690:	str	r3, [sp, #8]
   18694:	ldr	r0, [fp, #-4]
   18698:	ldr	r1, [fp, #-8]
   1869c:	ldr	r2, [sp, #12]
   186a0:	ldr	r3, [sp, #8]
   186a4:	mvn	ip, #0
   186a8:	str	ip, [sp]
   186ac:	bl	186b8 <__assert_fail@plt+0x6f64>
   186b0:	mov	sp, fp
   186b4:	pop	{fp, pc}
   186b8:	push	{fp, lr}
   186bc:	mov	fp, sp
   186c0:	sub	sp, sp, #72	; 0x48
   186c4:	ldr	ip, [fp, #8]
   186c8:	movw	lr, #58048	; 0xe2c0
   186cc:	movt	lr, #4
   186d0:	str	r0, [fp, #-4]
   186d4:	str	r1, [fp, #-8]
   186d8:	str	r2, [fp, #-12]
   186dc:	str	r3, [fp, #-16]
   186e0:	add	r0, sp, #8
   186e4:	mov	r1, r0
   186e8:	str	r0, [sp, #4]
   186ec:	mov	r0, r1
   186f0:	mov	r1, lr
   186f4:	movw	r2, #48	; 0x30
   186f8:	str	ip, [sp]
   186fc:	bl	11478 <memcpy@plt>
   18700:	ldr	r1, [fp, #-8]
   18704:	ldr	r2, [fp, #-12]
   18708:	ldr	r0, [sp, #4]
   1870c:	bl	16514 <__assert_fail@plt+0x4dc0>
   18710:	ldr	r0, [fp, #-4]
   18714:	ldr	r1, [fp, #-16]
   18718:	ldr	r2, [fp, #8]
   1871c:	add	r3, sp, #8
   18720:	bl	1807c <__assert_fail@plt+0x6928>
   18724:	mov	sp, fp
   18728:	pop	{fp, pc}
   1872c:	push	{fp, lr}
   18730:	mov	fp, sp
   18734:	sub	sp, sp, #16
   18738:	str	r0, [fp, #-4]
   1873c:	str	r1, [sp, #8]
   18740:	str	r2, [sp, #4]
   18744:	ldr	r1, [fp, #-4]
   18748:	ldr	r2, [sp, #8]
   1874c:	ldr	r3, [sp, #4]
   18750:	movw	r0, #0
   18754:	bl	18678 <__assert_fail@plt+0x6f24>
   18758:	mov	sp, fp
   1875c:	pop	{fp, pc}
   18760:	push	{fp, lr}
   18764:	mov	fp, sp
   18768:	sub	sp, sp, #24
   1876c:	str	r0, [fp, #-4]
   18770:	str	r1, [fp, #-8]
   18774:	str	r2, [sp, #12]
   18778:	str	r3, [sp, #8]
   1877c:	ldr	r1, [fp, #-4]
   18780:	ldr	r2, [fp, #-8]
   18784:	ldr	r3, [sp, #12]
   18788:	ldr	r0, [sp, #8]
   1878c:	movw	ip, #0
   18790:	str	r0, [sp, #4]
   18794:	mov	r0, ip
   18798:	ldr	ip, [sp, #4]
   1879c:	str	ip, [sp]
   187a0:	bl	186b8 <__assert_fail@plt+0x6f64>
   187a4:	mov	sp, fp
   187a8:	pop	{fp, pc}
   187ac:	push	{fp, lr}
   187b0:	mov	fp, sp
   187b4:	sub	sp, sp, #16
   187b8:	str	r0, [fp, #-4]
   187bc:	str	r1, [sp, #8]
   187c0:	str	r2, [sp, #4]
   187c4:	ldr	r0, [fp, #-4]
   187c8:	ldr	r1, [sp, #8]
   187cc:	ldr	r2, [sp, #4]
   187d0:	movw	r3, #57716	; 0xe174
   187d4:	movt	r3, #4
   187d8:	bl	1807c <__assert_fail@plt+0x6928>
   187dc:	mov	sp, fp
   187e0:	pop	{fp, pc}
   187e4:	push	{fp, lr}
   187e8:	mov	fp, sp
   187ec:	sub	sp, sp, #8
   187f0:	str	r0, [sp, #4]
   187f4:	str	r1, [sp]
   187f8:	ldr	r1, [sp, #4]
   187fc:	ldr	r2, [sp]
   18800:	movw	r0, #0
   18804:	bl	187ac <__assert_fail@plt+0x7058>
   18808:	mov	sp, fp
   1880c:	pop	{fp, pc}
   18810:	push	{fp, lr}
   18814:	mov	fp, sp
   18818:	sub	sp, sp, #8
   1881c:	str	r0, [sp, #4]
   18820:	str	r1, [sp]
   18824:	ldr	r0, [sp, #4]
   18828:	ldr	r1, [sp]
   1882c:	mvn	r2, #0
   18830:	bl	187ac <__assert_fail@plt+0x7058>
   18834:	mov	sp, fp
   18838:	pop	{fp, pc}
   1883c:	push	{fp, lr}
   18840:	mov	fp, sp
   18844:	sub	sp, sp, #8
   18848:	str	r0, [sp, #4]
   1884c:	ldr	r1, [sp, #4]
   18850:	movw	r0, #0
   18854:	bl	18810 <__assert_fail@plt+0x70bc>
   18858:	mov	sp, fp
   1885c:	pop	{fp, pc}
   18860:	push	{fp, lr}
   18864:	mov	fp, sp
   18868:	sub	sp, sp, #24
   1886c:	str	r0, [fp, #-8]
   18870:	str	r1, [sp, #12]
   18874:	ldr	r0, [fp, #-8]
   18878:	bl	115f8 <gettext@plt>
   1887c:	str	r0, [sp, #8]
   18880:	ldr	r0, [sp, #8]
   18884:	ldr	r1, [fp, #-8]
   18888:	cmp	r0, r1
   1888c:	beq	1889c <__assert_fail@plt+0x7148>
   18890:	ldr	r0, [sp, #8]
   18894:	str	r0, [fp, #-4]
   18898:	b	18968 <__assert_fail@plt+0x7214>
   1889c:	bl	39df4 <__assert_fail@plt+0x286a0>
   188a0:	str	r0, [sp, #4]
   188a4:	ldr	r0, [sp, #4]
   188a8:	movw	r1, #51678	; 0xc9de
   188ac:	movt	r1, #3
   188b0:	bl	38280 <__assert_fail@plt+0x26b2c>
   188b4:	cmp	r0, #0
   188b8:	bne	188f0 <__assert_fail@plt+0x719c>
   188bc:	ldr	r0, [fp, #-8]
   188c0:	ldrb	r0, [r0]
   188c4:	cmp	r0, #96	; 0x60
   188c8:	movw	r0, #0
   188cc:	moveq	r0, #1
   188d0:	tst	r0, #1
   188d4:	movw	r0, #51688	; 0xc9e8
   188d8:	movt	r0, #3
   188dc:	movw	r1, #51684	; 0xc9e4
   188e0:	movt	r1, #3
   188e4:	movne	r0, r1
   188e8:	str	r0, [fp, #-4]
   188ec:	b	18968 <__assert_fail@plt+0x7214>
   188f0:	ldr	r0, [sp, #4]
   188f4:	movw	r1, #51692	; 0xc9ec
   188f8:	movt	r1, #3
   188fc:	bl	38280 <__assert_fail@plt+0x26b2c>
   18900:	cmp	r0, #0
   18904:	bne	1893c <__assert_fail@plt+0x71e8>
   18908:	ldr	r0, [fp, #-8]
   1890c:	ldrb	r0, [r0]
   18910:	cmp	r0, #96	; 0x60
   18914:	movw	r0, #0
   18918:	moveq	r0, #1
   1891c:	tst	r0, #1
   18920:	movw	r0, #51704	; 0xc9f8
   18924:	movt	r0, #3
   18928:	movw	r1, #51700	; 0xc9f4
   1892c:	movt	r1, #3
   18930:	movne	r0, r1
   18934:	str	r0, [fp, #-4]
   18938:	b	18968 <__assert_fail@plt+0x7214>
   1893c:	ldr	r0, [sp, #12]
   18940:	cmp	r0, #9
   18944:	movw	r0, #0
   18948:	moveq	r0, #1
   1894c:	tst	r0, #1
   18950:	movw	r0, #50650	; 0xc5da
   18954:	movt	r0, #3
   18958:	movw	r1, #51674	; 0xc9da
   1895c:	movt	r1, #3
   18960:	movne	r0, r1
   18964:	str	r0, [fp, #-4]
   18968:	ldr	r0, [fp, #-4]
   1896c:	mov	sp, fp
   18970:	pop	{fp, pc}
   18974:	push	{fp, lr}
   18978:	mov	fp, sp
   1897c:	sub	sp, sp, #24
   18980:	str	r0, [fp, #-8]
   18984:	str	r1, [sp, #12]
   18988:	str	r2, [sp, #8]
   1898c:	movw	r0, #58356	; 0xe3f4
   18990:	movt	r0, #4
   18994:	ldr	r0, [r0]
   18998:	and	r0, r0, #33554432	; 0x2000000
   1899c:	ldr	r1, [sp, #8]
   189a0:	ldrb	r2, [r1, #28]
   189a4:	and	r2, r2, #239	; 0xef
   189a8:	orr	r0, r2, r0, lsr #21
   189ac:	strb	r0, [r1, #28]
   189b0:	ldr	r0, [sp, #8]
   189b4:	ldrb	r1, [r0, #28]
   189b8:	and	r1, r1, #127	; 0x7f
   189bc:	movw	r2, #128	; 0x80
   189c0:	orr	r1, r1, r2
   189c4:	strb	r1, [r0, #28]
   189c8:	ldr	r0, [sp, #8]
   189cc:	ldr	r1, [fp, #-8]
   189d0:	ldr	r2, [sp, #12]
   189d4:	movw	r3, #58356	; 0xe3f4
   189d8:	movt	r3, #4
   189dc:	ldr	r3, [r3]
   189e0:	bl	18a34 <__assert_fail@plt+0x72e0>
   189e4:	str	r0, [sp, #4]
   189e8:	ldr	r0, [sp, #4]
   189ec:	cmp	r0, #0
   189f0:	bne	18a00 <__assert_fail@plt+0x72ac>
   189f4:	movw	r0, #0
   189f8:	str	r0, [fp, #-4]
   189fc:	b	18a28 <__assert_fail@plt+0x72d4>
   18a00:	ldr	r0, [sp, #4]
   18a04:	movw	r1, #52176	; 0xcbd0
   18a08:	movt	r1, #3
   18a0c:	add	r0, r1, r0, lsl #2
   18a10:	ldr	r0, [r0]
   18a14:	movw	r1, #51792	; 0xca50
   18a18:	movt	r1, #3
   18a1c:	add	r0, r1, r0
   18a20:	bl	115f8 <gettext@plt>
   18a24:	str	r0, [fp, #-4]
   18a28:	ldr	r0, [fp, #-4]
   18a2c:	mov	sp, fp
   18a30:	pop	{fp, pc}
   18a34:	push	{r4, sl, fp, lr}
   18a38:	add	fp, sp, #8
   18a3c:	sub	sp, sp, #136	; 0x88
   18a40:	str	r0, [fp, #-16]
   18a44:	str	r1, [fp, #-20]	; 0xffffffec
   18a48:	str	r2, [fp, #-24]	; 0xffffffe8
   18a4c:	str	r3, [fp, #-28]	; 0xffffffe4
   18a50:	mov	r0, #0
   18a54:	str	r0, [fp, #-32]	; 0xffffffe0
   18a58:	ldr	r1, [fp, #-16]
   18a5c:	ldrb	r2, [r1, #28]
   18a60:	and	r2, r2, #247	; 0xf7
   18a64:	strb	r2, [r1, #28]
   18a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18a6c:	ldr	r2, [fp, #-16]
   18a70:	str	r1, [r2, #12]
   18a74:	ldr	r1, [fp, #-16]
   18a78:	ldrb	r2, [r1, #28]
   18a7c:	and	r2, r2, #191	; 0xbf
   18a80:	strb	r2, [r1, #28]
   18a84:	ldr	r1, [fp, #-16]
   18a88:	ldrb	r2, [r1, #28]
   18a8c:	and	r2, r2, #223	; 0xdf
   18a90:	strb	r2, [r1, #28]
   18a94:	ldr	r1, [fp, #-16]
   18a98:	str	r0, [r1, #8]
   18a9c:	ldr	r1, [fp, #-16]
   18aa0:	str	r0, [r1, #24]
   18aa4:	ldr	r0, [fp, #-16]
   18aa8:	ldrb	r1, [r0, #28]
   18aac:	and	r1, r1, #254	; 0xfe
   18ab0:	strb	r1, [r0, #28]
   18ab4:	ldr	r0, [fp, #-16]
   18ab8:	ldrb	r1, [r0, #28]
   18abc:	bic	r1, r1, #6
   18ac0:	strb	r1, [r0, #28]
   18ac4:	ldr	r0, [fp, #-16]
   18ac8:	ldr	r0, [r0]
   18acc:	str	r0, [fp, #-36]	; 0xffffffdc
   18ad0:	ldr	r0, [fp, #-16]
   18ad4:	ldr	r0, [r0, #4]
   18ad8:	cmp	r0, #160	; 0xa0
   18adc:	bcs	18b28 <__assert_fail@plt+0x73d4>
   18ae0:	ldr	r0, [fp, #-16]
   18ae4:	ldr	r0, [r0]
   18ae8:	movw	r1, #160	; 0xa0
   18aec:	bl	381dc <__assert_fail@plt+0x26a88>
   18af0:	str	r0, [fp, #-36]	; 0xffffffdc
   18af4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18af8:	movw	r1, #0
   18afc:	cmp	r0, r1
   18b00:	bne	18b10 <__assert_fail@plt+0x73bc>
   18b04:	movw	r0, #12
   18b08:	str	r0, [fp, #-12]
   18b0c:	b	18df8 <__assert_fail@plt+0x76a4>
   18b10:	ldr	r0, [fp, #-16]
   18b14:	movw	r1, #160	; 0xa0
   18b18:	str	r1, [r0, #4]
   18b1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b20:	ldr	r1, [fp, #-16]
   18b24:	str	r0, [r1]
   18b28:	ldr	r0, [fp, #-16]
   18b2c:	movw	r1, #160	; 0xa0
   18b30:	str	r1, [r0, #8]
   18b34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b3c:	bl	1b7e8 <__assert_fail@plt+0xa094>
   18b40:	str	r0, [fp, #-32]	; 0xffffffe0
   18b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b48:	cmp	r0, #0
   18b4c:	movw	r0, #0
   18b50:	str	r0, [sp, #20]
   18b54:	bne	18bb8 <__assert_fail@plt+0x7464>
   18b58:	movw	r0, #0
   18b5c:	movt	r0, #0
   18b60:	cmp	r0, #0
   18b64:	bne	18b80 <__assert_fail@plt+0x742c>
   18b68:	b	18b6c <__assert_fail@plt+0x7418>
   18b6c:	movw	r0, #0
   18b70:	movt	r0, #0
   18b74:	cmp	r0, #0
   18b78:	beq	18b98 <__assert_fail@plt+0x7444>
   18b7c:	b	18b80 <__assert_fail@plt+0x742c>
   18b80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b84:	add	r0, r0, #136	; 0x88
   18b88:	movw	r1, #0
   18b8c:	bl	11490 <pthread_mutex_init@plt>
   18b90:	str	r0, [sp, #16]
   18b94:	b	18ba4 <__assert_fail@plt+0x7450>
   18b98:	movw	r0, #0
   18b9c:	str	r0, [sp, #16]
   18ba0:	b	18ba4 <__assert_fail@plt+0x7450>
   18ba4:	ldr	r0, [sp, #16]
   18ba8:	cmp	r0, #0
   18bac:	movw	r0, #0
   18bb0:	movne	r0, #1
   18bb4:	str	r0, [sp, #20]
   18bb8:	ldr	r0, [sp, #20]
   18bbc:	tst	r0, #1
   18bc0:	beq	18bcc <__assert_fail@plt+0x7478>
   18bc4:	movw	r0, #12
   18bc8:	str	r0, [fp, #-32]	; 0xffffffe0
   18bcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18bd0:	cmp	r0, #0
   18bd4:	beq	18c00 <__assert_fail@plt+0x74ac>
   18bd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18bdc:	bl	19a38 <__assert_fail@plt+0x82e4>
   18be0:	ldr	r0, [fp, #-16]
   18be4:	movw	r1, #0
   18be8:	str	r1, [r0]
   18bec:	ldr	r0, [fp, #-16]
   18bf0:	str	r1, [r0, #4]
   18bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18bf8:	str	r0, [fp, #-12]
   18bfc:	b	18df8 <__assert_fail@plt+0x76a4>
   18c00:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c08:	ldr	r0, [fp, #-16]
   18c0c:	ldr	r3, [r0, #20]
   18c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18c14:	and	r0, r0, #4194304	; 0x400000
   18c18:	cmp	r0, #0
   18c1c:	movw	r0, #0
   18c20:	movne	r0, #1
   18c24:	ldr	ip, [fp, #-36]	; 0xffffffdc
   18c28:	add	lr, sp, #24
   18c2c:	str	r0, [sp, #12]
   18c30:	mov	r0, lr
   18c34:	ldr	lr, [sp, #12]
   18c38:	and	r4, lr, #1
   18c3c:	str	r4, [sp]
   18c40:	str	ip, [sp, #4]
   18c44:	bl	1bdf4 <__assert_fail@plt+0xa6a0>
   18c48:	str	r0, [fp, #-32]	; 0xffffffe0
   18c4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c50:	cmp	r0, #0
   18c54:	beq	18cd0 <__assert_fail@plt+0x757c>
   18c58:	b	18c5c <__assert_fail@plt+0x7508>
   18c5c:	ldr	r0, [fp, #-16]
   18c60:	bl	1c008 <__assert_fail@plt+0xa8b4>
   18c64:	add	r0, sp, #24
   18c68:	bl	1c0a0 <__assert_fail@plt+0xa94c>
   18c6c:	movw	r0, #0
   18c70:	movt	r0, #0
   18c74:	cmp	r0, #0
   18c78:	bne	18c94 <__assert_fail@plt+0x7540>
   18c7c:	b	18c80 <__assert_fail@plt+0x752c>
   18c80:	movw	r0, #0
   18c84:	movt	r0, #0
   18c88:	cmp	r0, #0
   18c8c:	beq	18ca4 <__assert_fail@plt+0x7550>
   18c90:	b	18c94 <__assert_fail@plt+0x7540>
   18c94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18c98:	add	r0, r0, #136	; 0x88
   18c9c:	bl	11424 <pthread_mutex_destroy@plt>
   18ca0:	b	18ca8 <__assert_fail@plt+0x7554>
   18ca4:	b	18ca8 <__assert_fail@plt+0x7554>
   18ca8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18cac:	bl	19a38 <__assert_fail@plt+0x82e4>
   18cb0:	ldr	r0, [fp, #-16]
   18cb4:	movw	r1, #0
   18cb8:	str	r1, [r0]
   18cbc:	ldr	r0, [fp, #-16]
   18cc0:	str	r1, [r0, #4]
   18cc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18cc8:	str	r0, [fp, #-12]
   18ccc:	b	18df8 <__assert_fail@plt+0x76a4>
   18cd0:	ldr	r0, [fp, #-16]
   18cd4:	movw	r1, #0
   18cd8:	str	r1, [r0, #24]
   18cdc:	ldr	r1, [fp, #-16]
   18ce0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18ce4:	add	r0, sp, #24
   18ce8:	sub	r3, fp, #32
   18cec:	bl	1c0ec <__assert_fail@plt+0xa998>
   18cf0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18cf4:	str	r0, [r1, #52]	; 0x34
   18cf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18cfc:	ldr	r0, [r0, #52]	; 0x34
   18d00:	movw	r1, #0
   18d04:	cmp	r0, r1
   18d08:	bne	18d10 <__assert_fail@plt+0x75bc>
   18d0c:	b	18c5c <__assert_fail@plt+0x7508>
   18d10:	ldr	r0, [fp, #-16]
   18d14:	bl	1c268 <__assert_fail@plt+0xab14>
   18d18:	str	r0, [fp, #-32]	; 0xffffffe0
   18d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d20:	cmp	r0, #0
   18d24:	beq	18d2c <__assert_fail@plt+0x75d8>
   18d28:	b	18c5c <__assert_fail@plt+0x7508>
   18d2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18d30:	ldrb	r0, [r0, #88]	; 0x58
   18d34:	ubfx	r0, r0, #2, #1
   18d38:	and	r0, r0, #255	; 0xff
   18d3c:	cmp	r0, #0
   18d40:	beq	18d70 <__assert_fail@plt+0x761c>
   18d44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d48:	and	r0, r0, #4194304	; 0x400000
   18d4c:	cmp	r0, #0
   18d50:	bne	18d70 <__assert_fail@plt+0x761c>
   18d54:	ldr	r0, [fp, #-16]
   18d58:	ldr	r0, [r0, #20]
   18d5c:	movw	r1, #0
   18d60:	cmp	r0, r1
   18d64:	bne	18d70 <__assert_fail@plt+0x761c>
   18d68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18d6c:	bl	1c63c <__assert_fail@plt+0xaee8>
   18d70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18d74:	bl	1c948 <__assert_fail@plt+0xb1f4>
   18d78:	str	r0, [fp, #-32]	; 0xffffffe0
   18d7c:	ldr	r0, [fp, #-16]
   18d80:	bl	1c008 <__assert_fail@plt+0xa8b4>
   18d84:	add	r0, sp, #24
   18d88:	bl	1c0a0 <__assert_fail@plt+0xa94c>
   18d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d90:	cmp	r0, #0
   18d94:	beq	18df0 <__assert_fail@plt+0x769c>
   18d98:	movw	r0, #0
   18d9c:	movt	r0, #0
   18da0:	cmp	r0, #0
   18da4:	bne	18dc0 <__assert_fail@plt+0x766c>
   18da8:	b	18dac <__assert_fail@plt+0x7658>
   18dac:	movw	r0, #0
   18db0:	movt	r0, #0
   18db4:	cmp	r0, #0
   18db8:	beq	18dd0 <__assert_fail@plt+0x767c>
   18dbc:	b	18dc0 <__assert_fail@plt+0x766c>
   18dc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18dc4:	add	r0, r0, #136	; 0x88
   18dc8:	bl	11424 <pthread_mutex_destroy@plt>
   18dcc:	b	18dd4 <__assert_fail@plt+0x7680>
   18dd0:	b	18dd4 <__assert_fail@plt+0x7680>
   18dd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18dd8:	bl	19a38 <__assert_fail@plt+0x82e4>
   18ddc:	ldr	r0, [fp, #-16]
   18de0:	movw	r1, #0
   18de4:	str	r1, [r0]
   18de8:	ldr	r0, [fp, #-16]
   18dec:	str	r1, [r0, #4]
   18df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18df4:	str	r0, [fp, #-12]
   18df8:	ldr	r0, [fp, #-12]
   18dfc:	sub	sp, fp, #8
   18e00:	pop	{r4, sl, fp, pc}
   18e04:	sub	sp, sp, #8
   18e08:	str	r0, [sp, #4]
   18e0c:	movw	r0, #58356	; 0xe3f4
   18e10:	movt	r0, #4
   18e14:	ldr	r1, [r0]
   18e18:	str	r1, [sp]
   18e1c:	ldr	r1, [sp, #4]
   18e20:	str	r1, [r0]
   18e24:	ldr	r0, [sp]
   18e28:	add	sp, sp, #8
   18e2c:	bx	lr
   18e30:	push	{fp, lr}
   18e34:	mov	fp, sp
   18e38:	sub	sp, sp, #16
   18e3c:	str	r0, [fp, #-4]
   18e40:	ldr	r0, [fp, #-4]
   18e44:	ldr	r0, [r0]
   18e48:	str	r0, [sp, #8]
   18e4c:	ldr	r0, [fp, #-4]
   18e50:	ldr	r0, [r0, #16]
   18e54:	str	r0, [sp, #4]
   18e58:	ldr	r0, [sp, #4]
   18e5c:	movw	r1, #0
   18e60:	and	r1, r1, #255	; 0xff
   18e64:	movw	r2, #256	; 0x100
   18e68:	bl	11658 <memset@plt>
   18e6c:	ldr	r0, [fp, #-4]
   18e70:	ldr	r1, [sp, #8]
   18e74:	ldr	r1, [r1, #36]	; 0x24
   18e78:	ldr	r2, [sp, #4]
   18e7c:	bl	18f28 <__assert_fail@plt+0x77d4>
   18e80:	ldr	r0, [sp, #8]
   18e84:	ldr	r0, [r0, #36]	; 0x24
   18e88:	ldr	r1, [sp, #8]
   18e8c:	ldr	r1, [r1, #40]	; 0x28
   18e90:	cmp	r0, r1
   18e94:	beq	18eac <__assert_fail@plt+0x7758>
   18e98:	ldr	r0, [fp, #-4]
   18e9c:	ldr	r1, [sp, #8]
   18ea0:	ldr	r1, [r1, #40]	; 0x28
   18ea4:	ldr	r2, [sp, #4]
   18ea8:	bl	18f28 <__assert_fail@plt+0x77d4>
   18eac:	ldr	r0, [sp, #8]
   18eb0:	ldr	r0, [r0, #36]	; 0x24
   18eb4:	ldr	r1, [sp, #8]
   18eb8:	ldr	r1, [r1, #44]	; 0x2c
   18ebc:	cmp	r0, r1
   18ec0:	beq	18ed8 <__assert_fail@plt+0x7784>
   18ec4:	ldr	r0, [fp, #-4]
   18ec8:	ldr	r1, [sp, #8]
   18ecc:	ldr	r1, [r1, #44]	; 0x2c
   18ed0:	ldr	r2, [sp, #4]
   18ed4:	bl	18f28 <__assert_fail@plt+0x77d4>
   18ed8:	ldr	r0, [sp, #8]
   18edc:	ldr	r0, [r0, #36]	; 0x24
   18ee0:	ldr	r1, [sp, #8]
   18ee4:	ldr	r1, [r1, #48]	; 0x30
   18ee8:	cmp	r0, r1
   18eec:	beq	18f04 <__assert_fail@plt+0x77b0>
   18ef0:	ldr	r0, [fp, #-4]
   18ef4:	ldr	r1, [sp, #8]
   18ef8:	ldr	r1, [r1, #48]	; 0x30
   18efc:	ldr	r2, [sp, #4]
   18f00:	bl	18f28 <__assert_fail@plt+0x77d4>
   18f04:	ldr	r0, [fp, #-4]
   18f08:	ldrb	r1, [r0, #28]
   18f0c:	bic	r1, r1, #8
   18f10:	movw	r2, #8
   18f14:	orr	r1, r1, r2
   18f18:	strb	r1, [r0, #28]
   18f1c:	movw	r0, #0
   18f20:	mov	sp, fp
   18f24:	pop	{fp, pc}
   18f28:	push	{r4, r5, fp, lr}
   18f2c:	add	fp, sp, #8
   18f30:	sub	sp, sp, #504	; 0x1f8
   18f34:	str	r0, [fp, #-84]	; 0xffffffac
   18f38:	str	r1, [fp, #-88]	; 0xffffffa8
   18f3c:	str	r2, [fp, #-92]	; 0xffffffa4
   18f40:	ldr	r0, [fp, #-84]	; 0xffffffac
   18f44:	ldr	r0, [r0]
   18f48:	str	r0, [fp, #-96]	; 0xffffffa0
   18f4c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18f50:	ldr	r0, [r0, #92]	; 0x5c
   18f54:	cmp	r0, #1
   18f58:	movw	r0, #0
   18f5c:	str	r0, [sp, #60]	; 0x3c
   18f60:	bne	18f80 <__assert_fail@plt+0x782c>
   18f64:	ldr	r0, [fp, #-84]	; 0xffffffac
   18f68:	ldr	r0, [r0, #12]
   18f6c:	and	r0, r0, #4194304	; 0x400000
   18f70:	cmp	r0, #0
   18f74:	movw	r0, #0
   18f78:	movne	r0, #1
   18f7c:	str	r0, [sp, #60]	; 0x3c
   18f80:	ldr	r0, [sp, #60]	; 0x3c
   18f84:	and	r0, r0, #1
   18f88:	strb	r0, [fp, #-101]	; 0xffffff9b
   18f8c:	movw	r0, #0
   18f90:	str	r0, [fp, #-100]	; 0xffffff9c
   18f94:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18f98:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18f9c:	ldr	r1, [r1, #8]
   18fa0:	cmp	r0, r1
   18fa4:	bge	196a4 <__assert_fail@plt+0x7f50>
   18fa8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18fac:	ldr	r0, [r0, #12]
   18fb0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18fb4:	ldr	r0, [r0, r1, lsl #2]
   18fb8:	str	r0, [fp, #-108]	; 0xffffff94
   18fbc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18fc0:	ldr	r0, [r0]
   18fc4:	ldr	r1, [fp, #-108]	; 0xffffff94
   18fc8:	add	r0, r0, r1, lsl #3
   18fcc:	ldr	r0, [r0, #4]
   18fd0:	and	r0, r0, #255	; 0xff
   18fd4:	str	r0, [fp, #-112]	; 0xffffff90
   18fd8:	ldr	r0, [fp, #-112]	; 0xffffff90
   18fdc:	cmp	r0, #1
   18fe0:	bne	19244 <__assert_fail@plt+0x7af0>
   18fe4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18fe8:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   18fec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18ff0:	ldr	r2, [r2]
   18ff4:	ldr	r3, [fp, #-108]	; 0xffffff94
   18ff8:	add	r2, r2, r3, lsl #3
   18ffc:	ldrb	r2, [r2]
   19000:	str	r0, [fp, #-72]	; 0xffffffb8
   19004:	and	r0, r1, #1
   19008:	strb	r0, [fp, #-73]	; 0xffffffb7
   1900c:	str	r2, [fp, #-80]	; 0xffffffb0
   19010:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19014:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19018:	add	r0, r0, r1
   1901c:	movw	r1, #1
   19020:	strb	r1, [r0]
   19024:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   19028:	tst	r0, #1
   1902c:	beq	19054 <__assert_fail@plt+0x7900>
   19030:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19034:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19038:	str	r0, [sp, #56]	; 0x38
   1903c:	mov	r0, r1
   19040:	bl	11484 <tolower@plt>
   19044:	ldr	r1, [sp, #56]	; 0x38
   19048:	add	r0, r1, r0
   1904c:	movw	r1, #1
   19050:	strb	r1, [r0]
   19054:	ldr	r0, [fp, #-84]	; 0xffffffac
   19058:	ldr	r0, [r0, #12]
   1905c:	and	r0, r0, #4194304	; 0x400000
   19060:	cmp	r0, #0
   19064:	beq	19240 <__assert_fail@plt+0x7aec>
   19068:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1906c:	ldr	r0, [r0, #92]	; 0x5c
   19070:	cmp	r0, #1
   19074:	ble	19240 <__assert_fail@plt+0x7aec>
   19078:	sub	r0, fp, #128	; 0x80
   1907c:	str	r0, [fp, #-132]	; 0xffffff7c
   19080:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19084:	ldr	r0, [r0]
   19088:	ldr	r1, [fp, #-108]	; 0xffffff94
   1908c:	add	r0, r0, r1, lsl #3
   19090:	ldrb	r0, [r0]
   19094:	ldr	r1, [fp, #-132]	; 0xffffff7c
   19098:	add	r2, r1, #1
   1909c:	str	r2, [fp, #-132]	; 0xffffff7c
   190a0:	strb	r0, [r1]
   190a4:	ldr	r0, [fp, #-108]	; 0xffffff94
   190a8:	add	r0, r0, #1
   190ac:	str	r0, [fp, #-108]	; 0xffffff94
   190b0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   190b4:	ldr	r1, [r1, #8]
   190b8:	cmp	r0, r1
   190bc:	movw	r0, #0
   190c0:	str	r0, [sp, #52]	; 0x34
   190c4:	bcs	1911c <__assert_fail@plt+0x79c8>
   190c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   190cc:	ldr	r0, [r0]
   190d0:	ldr	r1, [fp, #-108]	; 0xffffff94
   190d4:	add	r0, r0, r1, lsl #3
   190d8:	ldr	r0, [r0, #4]
   190dc:	and	r0, r0, #255	; 0xff
   190e0:	cmp	r0, #1
   190e4:	movw	r0, #0
   190e8:	str	r0, [sp, #52]	; 0x34
   190ec:	bne	1911c <__assert_fail@plt+0x79c8>
   190f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   190f4:	ldr	r0, [r0]
   190f8:	ldr	r1, [fp, #-108]	; 0xffffff94
   190fc:	add	r0, r0, r1, lsl #3
   19100:	ldr	r0, [r0, #4]
   19104:	lsr	r0, r0, #21
   19108:	and	r0, r0, #1
   1910c:	cmp	r0, #0
   19110:	movw	r0, #0
   19114:	movne	r0, #1
   19118:	str	r0, [sp, #52]	; 0x34
   1911c:	ldr	r0, [sp, #52]	; 0x34
   19120:	tst	r0, #1
   19124:	beq	19150 <__assert_fail@plt+0x79fc>
   19128:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1912c:	ldr	r0, [r0]
   19130:	ldr	r1, [fp, #-108]	; 0xffffff94
   19134:	add	r0, r0, r1, lsl #3
   19138:	ldrb	r0, [r0]
   1913c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   19140:	add	r2, r1, #1
   19144:	str	r2, [fp, #-132]	; 0xffffff7c
   19148:	strb	r0, [r1]
   1914c:	b	190a4 <__assert_fail@plt+0x7950>
   19150:	sub	r0, fp, #128	; 0x80
   19154:	sub	r1, fp, #144	; 0x90
   19158:	mov	r2, r1
   1915c:	str	r0, [sp, #48]	; 0x30
   19160:	mov	r0, r2
   19164:	movw	r2, #0
   19168:	and	r2, r2, #255	; 0xff
   1916c:	str	r1, [sp, #44]	; 0x2c
   19170:	mov	r1, r2
   19174:	movw	r2, #8
   19178:	bl	11658 <memset@plt>
   1917c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19180:	ldr	r1, [sp, #48]	; 0x30
   19184:	sub	r2, r0, r1
   19188:	sub	r0, fp, #136	; 0x88
   1918c:	ldr	r3, [sp, #44]	; 0x2c
   19190:	bl	39e50 <__assert_fail@plt+0x286fc>
   19194:	sub	r1, fp, #128	; 0x80
   19198:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1919c:	sub	r1, r2, r1
   191a0:	cmp	r0, r1
   191a4:	bne	1923c <__assert_fail@plt+0x7ae8>
   191a8:	sub	r0, fp, #128	; 0x80
   191ac:	ldr	r1, [fp, #-136]	; 0xffffff78
   191b0:	str	r0, [sp, #40]	; 0x28
   191b4:	mov	r0, r1
   191b8:	bl	1149c <towlower@plt>
   191bc:	ldr	r1, [sp, #40]	; 0x28
   191c0:	str	r0, [sp, #36]	; 0x24
   191c4:	mov	r0, r1
   191c8:	ldr	r1, [sp, #36]	; 0x24
   191cc:	sub	r2, fp, #144	; 0x90
   191d0:	bl	113e8 <wcrtomb@plt>
   191d4:	cmn	r0, #1
   191d8:	beq	1923c <__assert_fail@plt+0x7ae8>
   191dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   191e0:	ldrb	r1, [fp, #-128]	; 0xffffff80
   191e4:	str	r0, [fp, #-60]	; 0xffffffc4
   191e8:	movw	r0, #0
   191ec:	strb	r0, [fp, #-61]	; 0xffffffc3
   191f0:	str	r1, [fp, #-68]	; 0xffffffbc
   191f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   191f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   191fc:	add	r0, r0, r1
   19200:	movw	r1, #1
   19204:	strb	r1, [r0]
   19208:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1920c:	tst	r0, #1
   19210:	beq	19238 <__assert_fail@plt+0x7ae4>
   19214:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19218:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1921c:	str	r0, [sp, #32]
   19220:	mov	r0, r1
   19224:	bl	11484 <tolower@plt>
   19228:	ldr	r1, [sp, #32]
   1922c:	add	r0, r1, r0
   19230:	movw	r1, #1
   19234:	strb	r1, [r0]
   19238:	b	1923c <__assert_fail@plt+0x7ae8>
   1923c:	b	19240 <__assert_fail@plt+0x7aec>
   19240:	b	19690 <__assert_fail@plt+0x7f3c>
   19244:	ldr	r0, [fp, #-112]	; 0xffffff90
   19248:	cmp	r0, #3
   1924c:	bne	19354 <__assert_fail@plt+0x7c00>
   19250:	movw	r0, #0
   19254:	str	r0, [fp, #-148]	; 0xffffff6c
   19258:	str	r0, [fp, #-152]	; 0xffffff68
   1925c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19260:	cmp	r0, #8
   19264:	bge	19350 <__assert_fail@plt+0x7bfc>
   19268:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1926c:	ldr	r0, [r0]
   19270:	ldr	r1, [fp, #-108]	; 0xffffff94
   19274:	ldr	r0, [r0, r1, lsl #3]
   19278:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1927c:	add	r0, r0, r1, lsl #2
   19280:	ldr	r0, [r0]
   19284:	str	r0, [fp, #-160]	; 0xffffff60
   19288:	movw	r0, #0
   1928c:	str	r0, [fp, #-156]	; 0xffffff64
   19290:	ldr	r0, [fp, #-156]	; 0xffffff64
   19294:	cmp	r0, #32
   19298:	bge	1933c <__assert_fail@plt+0x7be8>
   1929c:	ldr	r0, [fp, #-160]	; 0xffffff60
   192a0:	ldr	r1, [fp, #-156]	; 0xffffff64
   192a4:	movw	r2, #1
   192a8:	lsl	r1, r2, r1
   192ac:	and	r0, r0, r1
   192b0:	cmp	r0, #0
   192b4:	beq	1931c <__assert_fail@plt+0x7bc8>
   192b8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   192bc:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   192c0:	ldr	r2, [fp, #-152]	; 0xffffff68
   192c4:	str	r0, [fp, #-48]	; 0xffffffd0
   192c8:	and	r0, r1, #1
   192cc:	strb	r0, [fp, #-49]	; 0xffffffcf
   192d0:	str	r2, [fp, #-56]	; 0xffffffc8
   192d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   192d8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   192dc:	add	r0, r0, r1
   192e0:	movw	r1, #1
   192e4:	strb	r1, [r0]
   192e8:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   192ec:	tst	r0, #1
   192f0:	beq	19318 <__assert_fail@plt+0x7bc4>
   192f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   192f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   192fc:	str	r0, [sp, #28]
   19300:	mov	r0, r1
   19304:	bl	11484 <tolower@plt>
   19308:	ldr	r1, [sp, #28]
   1930c:	add	r0, r1, r0
   19310:	movw	r1, #1
   19314:	strb	r1, [r0]
   19318:	b	1931c <__assert_fail@plt+0x7bc8>
   1931c:	b	19320 <__assert_fail@plt+0x7bcc>
   19320:	ldr	r0, [fp, #-156]	; 0xffffff64
   19324:	add	r0, r0, #1
   19328:	str	r0, [fp, #-156]	; 0xffffff64
   1932c:	ldr	r0, [fp, #-152]	; 0xffffff68
   19330:	add	r0, r0, #1
   19334:	str	r0, [fp, #-152]	; 0xffffff68
   19338:	b	19290 <__assert_fail@plt+0x7b3c>
   1933c:	b	19340 <__assert_fail@plt+0x7bec>
   19340:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19344:	add	r0, r0, #1
   19348:	str	r0, [fp, #-148]	; 0xffffff6c
   1934c:	b	1925c <__assert_fail@plt+0x7b08>
   19350:	b	1968c <__assert_fail@plt+0x7f38>
   19354:	ldr	r0, [fp, #-112]	; 0xffffff90
   19358:	cmp	r0, #6
   1935c:	bne	19624 <__assert_fail@plt+0x7ed0>
   19360:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19364:	ldr	r0, [r0]
   19368:	ldr	r1, [fp, #-108]	; 0xffffff94
   1936c:	add	r0, r0, r1, lsl #3
   19370:	ldr	r0, [r0]
   19374:	str	r0, [fp, #-164]	; 0xffffff5c
   19378:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1937c:	ldr	r0, [r0, #92]	; 0x5c
   19380:	cmp	r0, #1
   19384:	ble	19488 <__assert_fail@plt+0x7d34>
   19388:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1938c:	ldr	r0, [r0, #36]	; 0x24
   19390:	cmp	r0, #0
   19394:	bne	193c0 <__assert_fail@plt+0x7c6c>
   19398:	ldr	r0, [fp, #-164]	; 0xffffff5c
   1939c:	ldrb	r0, [r0, #16]
   193a0:	and	r0, r0, #1
   193a4:	and	r0, r0, #255	; 0xff
   193a8:	cmp	r0, #0
   193ac:	bne	193c0 <__assert_fail@plt+0x7c6c>
   193b0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   193b4:	ldr	r0, [r0, #32]
   193b8:	cmp	r0, #0
   193bc:	beq	19488 <__assert_fail@plt+0x7d34>
   193c0:	movw	r0, #0
   193c4:	strb	r0, [fp, #-169]	; 0xffffff57
   193c8:	sub	r0, fp, #180	; 0xb4
   193cc:	mov	r1, r0
   193d0:	str	r0, [sp, #24]
   193d4:	mov	r0, r1
   193d8:	movw	r1, #0
   193dc:	and	r1, r1, #255	; 0xff
   193e0:	movw	r2, #8
   193e4:	bl	11658 <memset@plt>
   193e8:	movw	r0, #0
   193ec:	sub	r1, fp, #169	; 0xa9
   193f0:	movw	r2, #1
   193f4:	ldr	r3, [sp, #24]
   193f8:	bl	39e50 <__assert_fail@plt+0x286fc>
   193fc:	cmn	r0, #2
   19400:	bne	19464 <__assert_fail@plt+0x7d10>
   19404:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19408:	ldrb	r1, [fp, #-169]	; 0xffffff57
   1940c:	str	r0, [fp, #-36]	; 0xffffffdc
   19410:	movw	r0, #0
   19414:	strb	r0, [fp, #-37]	; 0xffffffdb
   19418:	str	r1, [fp, #-44]	; 0xffffffd4
   1941c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19420:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19424:	add	r0, r0, r1
   19428:	movw	r1, #1
   1942c:	strb	r1, [r0]
   19430:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   19434:	tst	r0, #1
   19438:	beq	19460 <__assert_fail@plt+0x7d0c>
   1943c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19440:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19444:	str	r0, [sp, #20]
   19448:	mov	r0, r1
   1944c:	bl	11484 <tolower@plt>
   19450:	ldr	r1, [sp, #20]
   19454:	add	r0, r1, r0
   19458:	movw	r1, #1
   1945c:	strb	r1, [r0]
   19460:	b	19464 <__assert_fail@plt+0x7d10>
   19464:	b	19468 <__assert_fail@plt+0x7d14>
   19468:	ldrb	r0, [fp, #-169]	; 0xffffff57
   1946c:	movw	r1, #1
   19470:	add	r0, r0, r1
   19474:	strb	r0, [fp, #-169]	; 0xffffff57
   19478:	and	r0, r0, #255	; 0xff
   1947c:	cmp	r0, #0
   19480:	bne	193c8 <__assert_fail@plt+0x7c74>
   19484:	b	19620 <__assert_fail@plt+0x7ecc>
   19488:	movw	r0, #0
   1948c:	str	r0, [fp, #-168]	; 0xffffff58
   19490:	ldr	r0, [fp, #-168]	; 0xffffff58
   19494:	ldr	r1, [fp, #-164]	; 0xffffff5c
   19498:	ldr	r1, [r1, #20]
   1949c:	cmp	r0, r1
   194a0:	bge	1961c <__assert_fail@plt+0x7ec8>
   194a4:	mov	r0, #0
   194a8:	str	r0, [sp, #68]	; 0x44
   194ac:	str	r0, [sp, #64]	; 0x40
   194b0:	add	r0, sp, #76	; 0x4c
   194b4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   194b8:	ldr	r1, [r1]
   194bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   194c0:	add	r1, r1, r2, lsl #2
   194c4:	ldr	r1, [r1]
   194c8:	add	r2, sp, #64	; 0x40
   194cc:	bl	113e8 <wcrtomb@plt>
   194d0:	cmn	r0, #1
   194d4:	beq	1953c <__assert_fail@plt+0x7de8>
   194d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   194dc:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   194e0:	ldrb	r2, [sp, #76]	; 0x4c
   194e4:	str	r0, [fp, #-24]	; 0xffffffe8
   194e8:	and	r0, r1, #1
   194ec:	strb	r0, [fp, #-25]	; 0xffffffe7
   194f0:	str	r2, [fp, #-32]	; 0xffffffe0
   194f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   194fc:	add	r0, r0, r1
   19500:	movw	r1, #1
   19504:	strb	r1, [r0]
   19508:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   1950c:	tst	r0, #1
   19510:	beq	19538 <__assert_fail@plt+0x7de4>
   19514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19518:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1951c:	str	r0, [sp, #16]
   19520:	mov	r0, r1
   19524:	bl	11484 <tolower@plt>
   19528:	ldr	r1, [sp, #16]
   1952c:	add	r0, r1, r0
   19530:	movw	r1, #1
   19534:	strb	r1, [r0]
   19538:	b	1953c <__assert_fail@plt+0x7de8>
   1953c:	ldr	r0, [fp, #-84]	; 0xffffffac
   19540:	ldr	r0, [r0, #12]
   19544:	and	r0, r0, #4194304	; 0x400000
   19548:	cmp	r0, #0
   1954c:	beq	19608 <__assert_fail@plt+0x7eb4>
   19550:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19554:	ldr	r0, [r0, #92]	; 0x5c
   19558:	cmp	r0, #1
   1955c:	ble	19608 <__assert_fail@plt+0x7eb4>
   19560:	add	r0, sp, #76	; 0x4c
   19564:	ldr	r1, [fp, #-164]	; 0xffffff5c
   19568:	ldr	r1, [r1]
   1956c:	ldr	r2, [fp, #-168]	; 0xffffff58
   19570:	add	r1, r1, r2, lsl #2
   19574:	ldr	r1, [r1]
   19578:	str	r0, [sp, #12]
   1957c:	mov	r0, r1
   19580:	bl	1149c <towlower@plt>
   19584:	ldr	r1, [sp, #12]
   19588:	str	r0, [sp, #8]
   1958c:	mov	r0, r1
   19590:	ldr	r1, [sp, #8]
   19594:	add	r2, sp, #64	; 0x40
   19598:	bl	113e8 <wcrtomb@plt>
   1959c:	cmn	r0, #1
   195a0:	beq	19604 <__assert_fail@plt+0x7eb0>
   195a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   195a8:	ldrb	r1, [sp, #76]	; 0x4c
   195ac:	str	r0, [fp, #-12]
   195b0:	movw	r0, #0
   195b4:	strb	r0, [fp, #-13]
   195b8:	str	r1, [fp, #-20]	; 0xffffffec
   195bc:	ldr	r0, [fp, #-12]
   195c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   195c4:	add	r0, r0, r1
   195c8:	movw	r1, #1
   195cc:	strb	r1, [r0]
   195d0:	ldrb	r0, [fp, #-13]
   195d4:	tst	r0, #1
   195d8:	beq	19600 <__assert_fail@plt+0x7eac>
   195dc:	ldr	r0, [fp, #-12]
   195e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   195e4:	str	r0, [sp, #4]
   195e8:	mov	r0, r1
   195ec:	bl	11484 <tolower@plt>
   195f0:	ldr	r1, [sp, #4]
   195f4:	add	r0, r1, r0
   195f8:	movw	r1, #1
   195fc:	strb	r1, [r0]
   19600:	b	19604 <__assert_fail@plt+0x7eb0>
   19604:	b	19608 <__assert_fail@plt+0x7eb4>
   19608:	b	1960c <__assert_fail@plt+0x7eb8>
   1960c:	ldr	r0, [fp, #-168]	; 0xffffff58
   19610:	add	r0, r0, #1
   19614:	str	r0, [fp, #-168]	; 0xffffff58
   19618:	b	19490 <__assert_fail@plt+0x7d3c>
   1961c:	b	19620 <__assert_fail@plt+0x7ecc>
   19620:	b	19688 <__assert_fail@plt+0x7f34>
   19624:	ldr	r0, [fp, #-112]	; 0xffffff90
   19628:	cmp	r0, #5
   1962c:	beq	19648 <__assert_fail@plt+0x7ef4>
   19630:	ldr	r0, [fp, #-112]	; 0xffffff90
   19634:	cmp	r0, #7
   19638:	beq	19648 <__assert_fail@plt+0x7ef4>
   1963c:	ldr	r0, [fp, #-112]	; 0xffffff90
   19640:	cmp	r0, #2
   19644:	bne	19684 <__assert_fail@plt+0x7f30>
   19648:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1964c:	movw	r1, #1
   19650:	and	r1, r1, #255	; 0xff
   19654:	movw	r2, #256	; 0x100
   19658:	bl	11658 <memset@plt>
   1965c:	ldr	r0, [fp, #-112]	; 0xffffff90
   19660:	cmp	r0, #2
   19664:	bne	19680 <__assert_fail@plt+0x7f2c>
   19668:	ldr	r0, [fp, #-84]	; 0xffffffac
   1966c:	ldrb	r1, [r0, #28]
   19670:	bic	r1, r1, #1
   19674:	movw	r2, #1
   19678:	orr	r1, r1, r2
   1967c:	strb	r1, [r0, #28]
   19680:	b	196a4 <__assert_fail@plt+0x7f50>
   19684:	b	19688 <__assert_fail@plt+0x7f34>
   19688:	b	1968c <__assert_fail@plt+0x7f38>
   1968c:	b	19690 <__assert_fail@plt+0x7f3c>
   19690:	b	19694 <__assert_fail@plt+0x7f40>
   19694:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19698:	add	r0, r0, #1
   1969c:	str	r0, [fp, #-100]	; 0xffffff9c
   196a0:	b	18f94 <__assert_fail@plt+0x7840>
   196a4:	sub	sp, fp, #8
   196a8:	pop	{r4, r5, fp, pc}
   196ac:	push	{fp, lr}
   196b0:	mov	fp, sp
   196b4:	sub	sp, sp, #40	; 0x28
   196b8:	ldr	r3, [pc, #440]	; 19878 <__assert_fail@plt+0x8124>
   196bc:	ldr	ip, [pc, #440]	; 1987c <__assert_fail@plt+0x8128>
   196c0:	str	r0, [fp, #-8]
   196c4:	str	r1, [fp, #-12]
   196c8:	str	r2, [fp, #-16]
   196cc:	ldr	r0, [fp, #-16]
   196d0:	and	r0, r0, #1
   196d4:	cmp	r0, #0
   196d8:	movw	r0, #0
   196dc:	movne	r0, #1
   196e0:	tst	r0, #1
   196e4:	movne	ip, r3
   196e8:	str	ip, [sp, #16]
   196ec:	ldr	r0, [fp, #-8]
   196f0:	movw	r1, #0
   196f4:	str	r1, [r0]
   196f8:	ldr	r0, [fp, #-8]
   196fc:	str	r1, [r0, #4]
   19700:	ldr	r0, [fp, #-8]
   19704:	str	r1, [r0, #8]
   19708:	movw	r0, #256	; 0x100
   1970c:	bl	3816c <__assert_fail@plt+0x26a18>
   19710:	ldr	r1, [fp, #-8]
   19714:	str	r0, [r1, #16]
   19718:	ldr	r0, [fp, #-8]
   1971c:	ldr	r0, [r0, #16]
   19720:	movw	r1, #0
   19724:	cmp	r0, r1
   19728:	bne	19738 <__assert_fail@plt+0x7fe4>
   1972c:	movw	r0, #12
   19730:	str	r0, [fp, #-4]
   19734:	b	1986c <__assert_fail@plt+0x8118>
   19738:	ldr	r0, [pc, #320]	; 19880 <__assert_fail@plt+0x812c>
   1973c:	ldr	r1, [fp, #-16]
   19740:	and	r1, r1, #2
   19744:	cmp	r1, #0
   19748:	movw	r1, #0
   1974c:	movne	r1, #1
   19750:	tst	r1, #1
   19754:	moveq	r0, #0
   19758:	ldr	r1, [sp, #16]
   1975c:	orr	r0, r1, r0
   19760:	str	r0, [sp, #16]
   19764:	ldr	r0, [fp, #-16]
   19768:	and	r0, r0, #4
   1976c:	cmp	r0, #0
   19770:	beq	197a8 <__assert_fail@plt+0x8054>
   19774:	ldr	r0, [sp, #16]
   19778:	bic	r0, r0, #64	; 0x40
   1977c:	str	r0, [sp, #16]
   19780:	ldr	r0, [sp, #16]
   19784:	orr	r0, r0, #256	; 0x100
   19788:	str	r0, [sp, #16]
   1978c:	ldr	r0, [fp, #-8]
   19790:	ldrb	r1, [r0, #28]
   19794:	and	r1, r1, #127	; 0x7f
   19798:	movw	r2, #128	; 0x80
   1979c:	orr	r1, r1, r2
   197a0:	strb	r1, [r0, #28]
   197a4:	b	197b8 <__assert_fail@plt+0x8064>
   197a8:	ldr	r0, [fp, #-8]
   197ac:	ldrb	r1, [r0, #28]
   197b0:	and	r1, r1, #127	; 0x7f
   197b4:	strb	r1, [r0, #28]
   197b8:	ldrb	r0, [fp, #-16]
   197bc:	and	r0, r0, #8
   197c0:	ldr	r1, [fp, #-8]
   197c4:	ldrb	r2, [r1, #28]
   197c8:	lsl	r0, r0, #1
   197cc:	bic	r2, r2, #16
   197d0:	orr	r0, r2, r0
   197d4:	strb	r0, [r1, #28]
   197d8:	ldr	r0, [fp, #-8]
   197dc:	movw	r1, #0
   197e0:	str	r1, [r0, #20]
   197e4:	ldr	r0, [fp, #-8]
   197e8:	ldr	r1, [fp, #-12]
   197ec:	ldr	r2, [fp, #-12]
   197f0:	str	r0, [sp, #12]
   197f4:	mov	r0, r2
   197f8:	str	r1, [sp, #8]
   197fc:	bl	11604 <strlen@plt>
   19800:	ldr	r3, [sp, #16]
   19804:	ldr	r1, [sp, #12]
   19808:	str	r0, [sp, #4]
   1980c:	mov	r0, r1
   19810:	ldr	r1, [sp, #8]
   19814:	ldr	r2, [sp, #4]
   19818:	bl	18a34 <__assert_fail@plt+0x72e0>
   1981c:	str	r0, [sp, #20]
   19820:	ldr	r0, [sp, #20]
   19824:	cmp	r0, #16
   19828:	bne	19834 <__assert_fail@plt+0x80e0>
   1982c:	movw	r0, #8
   19830:	str	r0, [sp, #20]
   19834:	ldr	r0, [sp, #20]
   19838:	cmp	r0, #0
   1983c:	bne	1984c <__assert_fail@plt+0x80f8>
   19840:	ldr	r0, [fp, #-8]
   19844:	bl	18e30 <__assert_fail@plt+0x76dc>
   19848:	b	19864 <__assert_fail@plt+0x8110>
   1984c:	ldr	r0, [fp, #-8]
   19850:	ldr	r0, [r0, #16]
   19854:	bl	15f68 <__assert_fail@plt+0x4814>
   19858:	ldr	r0, [fp, #-8]
   1985c:	movw	r1, #0
   19860:	str	r1, [r0, #16]
   19864:	ldr	r0, [sp, #20]
   19868:	str	r0, [fp, #-4]
   1986c:	ldr	r0, [fp, #-4]
   19870:	mov	sp, fp
   19874:	pop	{fp, pc}
   19878:	strdeq	fp, [r3], -ip
   1987c:	smlabteq	r1, r6, r2, r0
   19880:	subeq	r0, r0, r0
   19884:	push	{fp, lr}
   19888:	mov	fp, sp
   1988c:	sub	sp, sp, #40	; 0x28
   19890:	str	r0, [fp, #-4]
   19894:	str	r1, [fp, #-8]
   19898:	str	r2, [fp, #-12]
   1989c:	str	r3, [fp, #-16]
   198a0:	movw	r0, #17
   198a4:	str	r0, [sp, #12]
   198a8:	ldr	r0, [fp, #-4]
   198ac:	cmp	r0, #0
   198b0:	movw	r0, #1
   198b4:	str	r0, [sp, #4]
   198b8:	blt	198d4 <__assert_fail@plt+0x8180>
   198bc:	ldr	r0, [fp, #-4]
   198c0:	ldr	r1, [sp, #12]
   198c4:	cmp	r0, r1
   198c8:	movw	r0, #0
   198cc:	movge	r0, #1
   198d0:	str	r0, [sp, #4]
   198d4:	ldr	r0, [sp, #4]
   198d8:	tst	r0, #1
   198dc:	beq	198e4 <__assert_fail@plt+0x8190>
   198e0:	bl	1173c <abort@plt>
   198e4:	ldr	r0, [fp, #-4]
   198e8:	movw	r1, #52176	; 0xcbd0
   198ec:	movt	r1, #3
   198f0:	add	r0, r1, r0, lsl #2
   198f4:	ldr	r0, [r0]
   198f8:	movw	r1, #51792	; 0xca50
   198fc:	movt	r1, #3
   19900:	add	r0, r1, r0
   19904:	bl	115f8 <gettext@plt>
   19908:	str	r0, [sp, #20]
   1990c:	ldr	r0, [sp, #20]
   19910:	bl	11604 <strlen@plt>
   19914:	add	r0, r0, #1
   19918:	str	r0, [sp, #16]
   1991c:	ldr	r0, [fp, #-16]
   19920:	cmp	r0, #0
   19924:	beq	19970 <__assert_fail@plt+0x821c>
   19928:	ldr	r0, [sp, #16]
   1992c:	str	r0, [sp, #8]
   19930:	ldr	r0, [sp, #16]
   19934:	ldr	r1, [fp, #-16]
   19938:	cmp	r0, r1
   1993c:	bls	19960 <__assert_fail@plt+0x820c>
   19940:	ldr	r0, [fp, #-16]
   19944:	sub	r0, r0, #1
   19948:	str	r0, [sp, #8]
   1994c:	ldr	r0, [fp, #-12]
   19950:	ldr	r1, [sp, #8]
   19954:	add	r0, r0, r1
   19958:	movw	r1, #0
   1995c:	strb	r1, [r0]
   19960:	ldr	r0, [fp, #-12]
   19964:	ldr	r1, [sp, #20]
   19968:	ldr	r2, [sp, #8]
   1996c:	bl	11478 <memcpy@plt>
   19970:	ldr	r0, [sp, #16]
   19974:	mov	sp, fp
   19978:	pop	{fp, pc}
   1997c:	push	{fp, lr}
   19980:	mov	fp, sp
   19984:	sub	sp, sp, #8
   19988:	str	r0, [sp, #4]
   1998c:	ldr	r0, [sp, #4]
   19990:	ldr	r0, [r0]
   19994:	str	r0, [sp]
   19998:	ldr	r0, [sp]
   1999c:	movw	r1, #0
   199a0:	cmp	r0, r1
   199a4:	beq	199ec <__assert_fail@plt+0x8298>
   199a8:	movw	r0, #0
   199ac:	movt	r0, #0
   199b0:	cmp	r0, #0
   199b4:	bne	199d0 <__assert_fail@plt+0x827c>
   199b8:	b	199bc <__assert_fail@plt+0x8268>
   199bc:	movw	r0, #0
   199c0:	movt	r0, #0
   199c4:	cmp	r0, #0
   199c8:	beq	199e0 <__assert_fail@plt+0x828c>
   199cc:	b	199d0 <__assert_fail@plt+0x827c>
   199d0:	ldr	r0, [sp]
   199d4:	add	r0, r0, #136	; 0x88
   199d8:	bl	11424 <pthread_mutex_destroy@plt>
   199dc:	b	199e4 <__assert_fail@plt+0x8290>
   199e0:	b	199e4 <__assert_fail@plt+0x8290>
   199e4:	ldr	r0, [sp]
   199e8:	bl	19a38 <__assert_fail@plt+0x82e4>
   199ec:	ldr	r0, [sp, #4]
   199f0:	movw	r1, #0
   199f4:	str	r1, [r0]
   199f8:	ldr	r0, [sp, #4]
   199fc:	str	r1, [r0, #4]
   19a00:	ldr	r0, [sp, #4]
   19a04:	ldr	r0, [r0, #16]
   19a08:	bl	15f68 <__assert_fail@plt+0x4814>
   19a0c:	ldr	r0, [sp, #4]
   19a10:	movw	r1, #0
   19a14:	str	r1, [r0, #16]
   19a18:	ldr	r0, [sp, #4]
   19a1c:	ldr	r0, [r0, #20]
   19a20:	bl	15f68 <__assert_fail@plt+0x4814>
   19a24:	ldr	r0, [sp, #4]
   19a28:	movw	r1, #0
   19a2c:	str	r1, [r0, #20]
   19a30:	mov	sp, fp
   19a34:	pop	{fp, pc}
   19a38:	push	{fp, lr}
   19a3c:	mov	fp, sp
   19a40:	sub	sp, sp, #24
   19a44:	str	r0, [fp, #-4]
   19a48:	ldr	r0, [fp, #-4]
   19a4c:	ldr	r0, [r0]
   19a50:	movw	r1, #0
   19a54:	cmp	r0, r1
   19a58:	beq	19aa0 <__assert_fail@plt+0x834c>
   19a5c:	movw	r0, #0
   19a60:	str	r0, [fp, #-8]
   19a64:	ldr	r0, [fp, #-8]
   19a68:	ldr	r1, [fp, #-4]
   19a6c:	ldr	r1, [r1, #8]
   19a70:	cmp	r0, r1
   19a74:	bcs	19a9c <__assert_fail@plt+0x8348>
   19a78:	ldr	r0, [fp, #-4]
   19a7c:	ldr	r0, [r0]
   19a80:	ldr	r1, [fp, #-8]
   19a84:	add	r0, r0, r1, lsl #3
   19a88:	bl	1b678 <__assert_fail@plt+0x9f24>
   19a8c:	ldr	r0, [fp, #-8]
   19a90:	add	r0, r0, #1
   19a94:	str	r0, [fp, #-8]
   19a98:	b	19a64 <__assert_fail@plt+0x8310>
   19a9c:	b	19aa0 <__assert_fail@plt+0x834c>
   19aa0:	ldr	r0, [fp, #-4]
   19aa4:	ldr	r0, [r0, #12]
   19aa8:	bl	15f68 <__assert_fail@plt+0x4814>
   19aac:	movw	r0, #0
   19ab0:	str	r0, [fp, #-8]
   19ab4:	ldr	r0, [fp, #-8]
   19ab8:	ldr	r1, [fp, #-4]
   19abc:	ldr	r1, [r1, #8]
   19ac0:	cmp	r0, r1
   19ac4:	bcs	19b78 <__assert_fail@plt+0x8424>
   19ac8:	ldr	r0, [fp, #-4]
   19acc:	ldr	r0, [r0, #24]
   19ad0:	movw	r1, #0
   19ad4:	cmp	r0, r1
   19ad8:	beq	19afc <__assert_fail@plt+0x83a8>
   19adc:	ldr	r0, [fp, #-4]
   19ae0:	ldr	r0, [r0, #24]
   19ae4:	ldr	r1, [fp, #-8]
   19ae8:	movw	r2, #12
   19aec:	mul	r1, r1, r2
   19af0:	add	r0, r0, r1
   19af4:	ldr	r0, [r0, #8]
   19af8:	bl	15f68 <__assert_fail@plt+0x4814>
   19afc:	ldr	r0, [fp, #-4]
   19b00:	ldr	r0, [r0, #28]
   19b04:	movw	r1, #0
   19b08:	cmp	r0, r1
   19b0c:	beq	19b30 <__assert_fail@plt+0x83dc>
   19b10:	ldr	r0, [fp, #-4]
   19b14:	ldr	r0, [r0, #28]
   19b18:	ldr	r1, [fp, #-8]
   19b1c:	movw	r2, #12
   19b20:	mul	r1, r1, r2
   19b24:	add	r0, r0, r1
   19b28:	ldr	r0, [r0, #8]
   19b2c:	bl	15f68 <__assert_fail@plt+0x4814>
   19b30:	ldr	r0, [fp, #-4]
   19b34:	ldr	r0, [r0, #20]
   19b38:	movw	r1, #0
   19b3c:	cmp	r0, r1
   19b40:	beq	19b64 <__assert_fail@plt+0x8410>
   19b44:	ldr	r0, [fp, #-4]
   19b48:	ldr	r0, [r0, #20]
   19b4c:	ldr	r1, [fp, #-8]
   19b50:	movw	r2, #12
   19b54:	mul	r1, r1, r2
   19b58:	add	r0, r0, r1
   19b5c:	ldr	r0, [r0, #8]
   19b60:	bl	15f68 <__assert_fail@plt+0x4814>
   19b64:	b	19b68 <__assert_fail@plt+0x8414>
   19b68:	ldr	r0, [fp, #-8]
   19b6c:	add	r0, r0, #1
   19b70:	str	r0, [fp, #-8]
   19b74:	b	19ab4 <__assert_fail@plt+0x8360>
   19b78:	ldr	r0, [fp, #-4]
   19b7c:	ldr	r0, [r0, #20]
   19b80:	bl	15f68 <__assert_fail@plt+0x4814>
   19b84:	ldr	r0, [fp, #-4]
   19b88:	ldr	r0, [r0, #24]
   19b8c:	bl	15f68 <__assert_fail@plt+0x4814>
   19b90:	ldr	r0, [fp, #-4]
   19b94:	ldr	r0, [r0, #28]
   19b98:	bl	15f68 <__assert_fail@plt+0x4814>
   19b9c:	ldr	r0, [fp, #-4]
   19ba0:	ldr	r0, [r0]
   19ba4:	bl	15f68 <__assert_fail@plt+0x4814>
   19ba8:	ldr	r0, [fp, #-4]
   19bac:	ldr	r0, [r0, #32]
   19bb0:	movw	r1, #0
   19bb4:	cmp	r0, r1
   19bb8:	beq	19c60 <__assert_fail@plt+0x850c>
   19bbc:	movw	r0, #0
   19bc0:	str	r0, [fp, #-8]
   19bc4:	ldr	r0, [fp, #-8]
   19bc8:	ldr	r1, [fp, #-4]
   19bcc:	ldr	r1, [r1, #68]	; 0x44
   19bd0:	cmp	r0, r1
   19bd4:	bhi	19c5c <__assert_fail@plt+0x8508>
   19bd8:	ldr	r0, [fp, #-4]
   19bdc:	ldr	r0, [r0, #32]
   19be0:	ldr	r1, [fp, #-8]
   19be4:	movw	r2, #12
   19be8:	mul	r1, r1, r2
   19bec:	add	r0, r0, r1
   19bf0:	str	r0, [sp, #8]
   19bf4:	movw	r0, #0
   19bf8:	str	r0, [sp, #12]
   19bfc:	ldr	r0, [sp, #12]
   19c00:	ldr	r1, [sp, #8]
   19c04:	ldr	r1, [r1]
   19c08:	cmp	r0, r1
   19c0c:	bge	19c40 <__assert_fail@plt+0x84ec>
   19c10:	ldr	r0, [sp, #8]
   19c14:	ldr	r0, [r0, #8]
   19c18:	ldr	r1, [sp, #12]
   19c1c:	add	r0, r0, r1, lsl #2
   19c20:	ldr	r0, [r0]
   19c24:	str	r0, [sp, #4]
   19c28:	ldr	r0, [sp, #4]
   19c2c:	bl	1b708 <__assert_fail@plt+0x9fb4>
   19c30:	ldr	r0, [sp, #12]
   19c34:	add	r0, r0, #1
   19c38:	str	r0, [sp, #12]
   19c3c:	b	19bfc <__assert_fail@plt+0x84a8>
   19c40:	ldr	r0, [sp, #8]
   19c44:	ldr	r0, [r0, #8]
   19c48:	bl	15f68 <__assert_fail@plt+0x4814>
   19c4c:	ldr	r0, [fp, #-8]
   19c50:	add	r0, r0, #1
   19c54:	str	r0, [fp, #-8]
   19c58:	b	19bc4 <__assert_fail@plt+0x8470>
   19c5c:	b	19c60 <__assert_fail@plt+0x850c>
   19c60:	ldr	r0, [fp, #-4]
   19c64:	ldr	r0, [r0, #32]
   19c68:	bl	15f68 <__assert_fail@plt+0x4814>
   19c6c:	ldr	r0, [fp, #-4]
   19c70:	ldr	r0, [r0, #60]	; 0x3c
   19c74:	movw	r1, #52244	; 0xcc14
   19c78:	movt	r1, #3
   19c7c:	cmp	r0, r1
   19c80:	beq	19c90 <__assert_fail@plt+0x853c>
   19c84:	ldr	r0, [fp, #-4]
   19c88:	ldr	r0, [r0, #60]	; 0x3c
   19c8c:	bl	15f68 <__assert_fail@plt+0x4814>
   19c90:	ldr	r0, [fp, #-4]
   19c94:	ldr	r0, [r0, #132]	; 0x84
   19c98:	bl	15f68 <__assert_fail@plt+0x4814>
   19c9c:	ldr	r0, [fp, #-4]
   19ca0:	bl	15f68 <__assert_fail@plt+0x4814>
   19ca4:	mov	sp, fp
   19ca8:	pop	{fp, pc}
   19cac:	push	{r4, r5, r6, sl, fp, lr}
   19cb0:	add	fp, sp, #16
   19cb4:	sub	sp, sp, #56	; 0x38
   19cb8:	ldr	ip, [fp, #8]
   19cbc:	str	r0, [fp, #-24]	; 0xffffffe8
   19cc0:	str	r1, [fp, #-28]	; 0xffffffe4
   19cc4:	str	r2, [fp, #-32]	; 0xffffffe0
   19cc8:	str	r3, [sp, #36]	; 0x24
   19ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cd0:	ldr	r0, [r0]
   19cd4:	str	r0, [sp, #20]
   19cd8:	ldr	r0, [fp, #8]
   19cdc:	mvn	r1, #7
   19ce0:	and	r0, r0, r1
   19ce4:	cmp	r0, #0
   19ce8:	beq	19cf8 <__assert_fail@plt+0x85a4>
   19cec:	movw	r0, #2
   19cf0:	str	r0, [fp, #-20]	; 0xffffffec
   19cf4:	b	19e60 <__assert_fail@plt+0x870c>
   19cf8:	ldr	r0, [fp, #8]
   19cfc:	and	r0, r0, #4
   19d00:	cmp	r0, #0
   19d04:	beq	19d24 <__assert_fail@plt+0x85d0>
   19d08:	ldr	r0, [sp, #36]	; 0x24
   19d0c:	ldr	r0, [r0]
   19d10:	str	r0, [sp, #28]
   19d14:	ldr	r0, [sp, #36]	; 0x24
   19d18:	ldr	r0, [r0, #4]
   19d1c:	str	r0, [sp, #24]
   19d20:	b	19d38 <__assert_fail@plt+0x85e4>
   19d24:	movw	r0, #0
   19d28:	str	r0, [sp, #28]
   19d2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19d30:	bl	11604 <strlen@plt>
   19d34:	str	r0, [sp, #24]
   19d38:	movw	r0, #0
   19d3c:	movt	r0, #0
   19d40:	cmp	r0, #0
   19d44:	bne	19d60 <__assert_fail@plt+0x860c>
   19d48:	b	19d4c <__assert_fail@plt+0x85f8>
   19d4c:	movw	r0, #0
   19d50:	movt	r0, #0
   19d54:	cmp	r0, #0
   19d58:	beq	19d70 <__assert_fail@plt+0x861c>
   19d5c:	b	19d60 <__assert_fail@plt+0x860c>
   19d60:	ldr	r0, [sp, #20]
   19d64:	add	r0, r0, #136	; 0x88
   19d68:	bl	11460 <pthread_mutex_lock@plt>
   19d6c:	b	19d74 <__assert_fail@plt+0x8620>
   19d70:	b	19d74 <__assert_fail@plt+0x8620>
   19d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d78:	ldrb	r0, [r0, #28]
   19d7c:	ubfx	r0, r0, #4, #1
   19d80:	and	r0, r0, #255	; 0xff
   19d84:	cmp	r0, #0
   19d88:	beq	19dcc <__assert_fail@plt+0x8678>
   19d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d94:	ldr	r2, [sp, #24]
   19d98:	ldr	r3, [sp, #28]
   19d9c:	ldr	ip, [sp, #24]
   19da0:	ldr	lr, [sp, #24]
   19da4:	ldr	r4, [fp, #8]
   19da8:	str	ip, [sp]
   19dac:	str	lr, [sp, #4]
   19db0:	movw	ip, #0
   19db4:	str	ip, [sp, #8]
   19db8:	str	ip, [sp, #12]
   19dbc:	str	r4, [sp, #16]
   19dc0:	bl	19e6c <__assert_fail@plt+0x8718>
   19dc4:	str	r0, [sp, #32]
   19dc8:	b	19e0c <__assert_fail@plt+0x86b8>
   19dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19dd4:	ldr	r2, [sp, #24]
   19dd8:	ldr	r3, [sp, #28]
   19ddc:	ldr	ip, [sp, #24]
   19de0:	ldr	lr, [sp, #24]
   19de4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   19de8:	ldr	r5, [sp, #36]	; 0x24
   19dec:	ldr	r6, [fp, #8]
   19df0:	str	ip, [sp]
   19df4:	str	lr, [sp, #4]
   19df8:	str	r4, [sp, #8]
   19dfc:	str	r5, [sp, #12]
   19e00:	str	r6, [sp, #16]
   19e04:	bl	19e6c <__assert_fail@plt+0x8718>
   19e08:	str	r0, [sp, #32]
   19e0c:	movw	r0, #0
   19e10:	movt	r0, #0
   19e14:	cmp	r0, #0
   19e18:	bne	19e34 <__assert_fail@plt+0x86e0>
   19e1c:	b	19e20 <__assert_fail@plt+0x86cc>
   19e20:	movw	r0, #0
   19e24:	movt	r0, #0
   19e28:	cmp	r0, #0
   19e2c:	beq	19e44 <__assert_fail@plt+0x86f0>
   19e30:	b	19e34 <__assert_fail@plt+0x86e0>
   19e34:	ldr	r0, [sp, #20]
   19e38:	add	r0, r0, #136	; 0x88
   19e3c:	bl	113a0 <pthread_mutex_unlock@plt>
   19e40:	b	19e48 <__assert_fail@plt+0x86f4>
   19e44:	b	19e48 <__assert_fail@plt+0x86f4>
   19e48:	ldr	r0, [sp, #32]
   19e4c:	cmp	r0, #0
   19e50:	movw	r0, #0
   19e54:	movne	r0, #1
   19e58:	and	r0, r0, #1
   19e5c:	str	r0, [fp, #-20]	; 0xffffffec
   19e60:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e64:	sub	sp, fp, #16
   19e68:	pop	{r4, r5, r6, sl, fp, pc}
   19e6c:	push	{r4, r5, r6, sl, fp, lr}
   19e70:	add	fp, sp, #16
   19e74:	sub	sp, sp, #376	; 0x178
   19e78:	ldr	ip, [fp, #24]
   19e7c:	ldr	lr, [fp, #20]
   19e80:	ldr	r4, [fp, #16]
   19e84:	ldr	r5, [fp, #12]
   19e88:	ldr	r6, [fp, #8]
   19e8c:	str	r0, [fp, #-24]	; 0xffffffe8
   19e90:	str	r1, [fp, #-28]	; 0xffffffe4
   19e94:	str	r2, [fp, #-32]	; 0xffffffe0
   19e98:	str	r3, [fp, #-36]	; 0xffffffdc
   19e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ea0:	ldr	r0, [r0]
   19ea4:	str	r0, [fp, #-44]	; 0xffffffd4
   19ea8:	mvn	r0, #0
   19eac:	str	r0, [fp, #-72]	; 0xffffffb8
   19eb0:	add	r0, sp, #172	; 0xac
   19eb4:	mov	r1, #0
   19eb8:	mov	r2, #136	; 0x88
   19ebc:	str	ip, [sp, #148]	; 0x94
   19ec0:	str	lr, [sp, #144]	; 0x90
   19ec4:	str	r4, [sp, #140]	; 0x8c
   19ec8:	str	r5, [sp, #136]	; 0x88
   19ecc:	str	r6, [sp, #132]	; 0x84
   19ed0:	bl	11658 <memset@plt>
   19ed4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ed8:	str	r1, [sp, #256]	; 0x100
   19edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ee0:	ldr	r1, [r1, #16]
   19ee4:	movw	r2, #0
   19ee8:	cmp	r1, r2
   19eec:	beq	19f40 <__assert_fail@plt+0x87ec>
   19ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ef4:	ldrb	r0, [r0, #28]
   19ef8:	ubfx	r0, r0, #3, #1
   19efc:	and	r0, r0, #255	; 0xff
   19f00:	cmp	r0, #0
   19f04:	beq	19f40 <__assert_fail@plt+0x87ec>
   19f08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f0c:	ldr	r1, [fp, #8]
   19f10:	cmp	r0, r1
   19f14:	beq	19f40 <__assert_fail@plt+0x87ec>
   19f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f1c:	ldrb	r0, [r0, #28]
   19f20:	and	r0, r0, #1
   19f24:	and	r0, r0, #255	; 0xff
   19f28:	cmp	r0, #0
   19f2c:	bne	19f40 <__assert_fail@plt+0x87ec>
   19f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f34:	ldr	r0, [r0, #16]
   19f38:	str	r0, [sp, #128]	; 0x80
   19f3c:	b	19f4c <__assert_fail@plt+0x87f8>
   19f40:	movw	r0, #0
   19f44:	str	r0, [sp, #128]	; 0x80
   19f48:	b	19f4c <__assert_fail@plt+0x87f8>
   19f4c:	ldr	r0, [sp, #128]	; 0x80
   19f50:	str	r0, [sp, #168]	; 0xa8
   19f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f58:	ldr	r0, [r0, #20]
   19f5c:	str	r0, [sp, #164]	; 0xa4
   19f60:	ldr	r0, [fp, #16]
   19f64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f68:	ldr	r1, [r1, #24]
   19f6c:	cmp	r0, r1
   19f70:	bls	19f90 <__assert_fail@plt+0x883c>
   19f74:	ldr	r0, [fp, #16]
   19f78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f7c:	ldr	r1, [r1, #24]
   19f80:	add	r1, r1, #1
   19f84:	sub	r0, r0, r1
   19f88:	str	r0, [sp, #124]	; 0x7c
   19f8c:	b	19f9c <__assert_fail@plt+0x8848>
   19f90:	movw	r0, #0
   19f94:	str	r0, [sp, #124]	; 0x7c
   19f98:	b	19f9c <__assert_fail@plt+0x8848>
   19f9c:	ldr	r0, [sp, #124]	; 0x7c
   19fa0:	str	r0, [fp, #-76]	; 0xffffffb4
   19fa4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19fa8:	ldr	r1, [fp, #16]
   19fac:	sub	r0, r1, r0
   19fb0:	str	r0, [fp, #16]
   19fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fb8:	ldr	r0, [r0, #8]
   19fbc:	cmp	r0, #0
   19fc0:	movw	r0, #1
   19fc4:	str	r0, [sp, #120]	; 0x78
   19fc8:	beq	1a03c <__assert_fail@plt+0x88e8>
   19fcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19fd0:	ldr	r0, [r0, #36]	; 0x24
   19fd4:	movw	r1, #0
   19fd8:	cmp	r0, r1
   19fdc:	movw	r0, #1
   19fe0:	str	r0, [sp, #120]	; 0x78
   19fe4:	beq	1a03c <__assert_fail@plt+0x88e8>
   19fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19fec:	ldr	r0, [r0, #40]	; 0x28
   19ff0:	movw	r1, #0
   19ff4:	cmp	r0, r1
   19ff8:	movw	r0, #1
   19ffc:	str	r0, [sp, #120]	; 0x78
   1a000:	beq	1a03c <__assert_fail@plt+0x88e8>
   1a004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a008:	ldr	r0, [r0, #44]	; 0x2c
   1a00c:	movw	r1, #0
   1a010:	cmp	r0, r1
   1a014:	movw	r0, #1
   1a018:	str	r0, [sp, #120]	; 0x78
   1a01c:	beq	1a03c <__assert_fail@plt+0x88e8>
   1a020:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a024:	ldr	r0, [r0, #48]	; 0x30
   1a028:	movw	r1, #0
   1a02c:	cmp	r0, r1
   1a030:	movw	r0, #0
   1a034:	moveq	r0, #1
   1a038:	str	r0, [sp, #120]	; 0x78
   1a03c:	ldr	r0, [sp, #120]	; 0x78
   1a040:	tst	r0, #1
   1a044:	beq	1a054 <__assert_fail@plt+0x8900>
   1a048:	movw	r0, #1
   1a04c:	str	r0, [fp, #-20]	; 0xffffffec
   1a050:	b	1ad70 <__assert_fail@plt+0x961c>
   1a054:	ldr	r0, [fp, #8]
   1a058:	movw	r1, #0
   1a05c:	cmp	r1, r0
   1a060:	bgt	1a078 <__assert_fail@plt+0x8924>
   1a064:	ldr	r0, [fp, #8]
   1a068:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a06c:	cmp	r0, r1
   1a070:	bgt	1a078 <__assert_fail@plt+0x8924>
   1a074:	b	1a078 <__assert_fail@plt+0x8924>
   1a078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a07c:	ldr	r0, [r0, #36]	; 0x24
   1a080:	ldr	r0, [r0, #8]
   1a084:	cmp	r0, #0
   1a088:	bne	1a0fc <__assert_fail@plt+0x89a8>
   1a08c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a090:	ldr	r0, [r0, #40]	; 0x28
   1a094:	ldr	r0, [r0, #8]
   1a098:	cmp	r0, #0
   1a09c:	bne	1a0fc <__assert_fail@plt+0x89a8>
   1a0a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a0a4:	ldr	r0, [r0, #44]	; 0x2c
   1a0a8:	ldr	r0, [r0, #8]
   1a0ac:	cmp	r0, #0
   1a0b0:	beq	1a0cc <__assert_fail@plt+0x8978>
   1a0b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0b8:	ldrb	r0, [r0, #28]
   1a0bc:	lsr	r0, r0, #7
   1a0c0:	and	r0, r0, #255	; 0xff
   1a0c4:	cmp	r0, #0
   1a0c8:	bne	1a0fc <__assert_fail@plt+0x89a8>
   1a0cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a0d0:	cmp	r0, #0
   1a0d4:	beq	1a0f0 <__assert_fail@plt+0x899c>
   1a0d8:	ldr	r0, [fp, #8]
   1a0dc:	cmp	r0, #0
   1a0e0:	beq	1a0f0 <__assert_fail@plt+0x899c>
   1a0e4:	movw	r0, #1
   1a0e8:	str	r0, [fp, #-20]	; 0xffffffec
   1a0ec:	b	1ad70 <__assert_fail@plt+0x961c>
   1a0f0:	movw	r0, #0
   1a0f4:	str	r0, [fp, #8]
   1a0f8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a0fc:	ldr	r0, [fp, #16]
   1a100:	cmp	r0, #0
   1a104:	movw	r0, #1
   1a108:	str	r0, [sp, #116]	; 0x74
   1a10c:	bne	1a128 <__assert_fail@plt+0x89d4>
   1a110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a114:	ldr	r0, [r0, #76]	; 0x4c
   1a118:	cmp	r0, #0
   1a11c:	movw	r0, #0
   1a120:	movne	r0, #1
   1a124:	str	r0, [sp, #116]	; 0x74
   1a128:	ldr	r0, [sp, #116]	; 0x74
   1a12c:	add	r1, sp, #172	; 0xac
   1a130:	and	r0, r0, #1
   1a134:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a138:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a13c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a144:	ldr	r3, [r3, #8]
   1a148:	add	r3, r3, #1
   1a14c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1a150:	ldr	ip, [ip, #20]
   1a154:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1a158:	ldr	lr, [lr, #12]
   1a15c:	and	lr, lr, #4194304	; 0x400000
   1a160:	cmp	lr, #0
   1a164:	movw	lr, #0
   1a168:	movne	lr, #1
   1a16c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   1a170:	str	r0, [sp, #112]	; 0x70
   1a174:	mov	r0, r1
   1a178:	ldr	r1, [sp, #112]	; 0x70
   1a17c:	str	ip, [sp]
   1a180:	and	ip, lr, #1
   1a184:	str	ip, [sp, #4]
   1a188:	str	r4, [sp, #8]
   1a18c:	bl	268d4 <__assert_fail@plt+0x15180>
   1a190:	str	r0, [fp, #-40]	; 0xffffffd8
   1a194:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a198:	cmp	r0, #0
   1a19c:	beq	1a1a4 <__assert_fail@plt+0x8a50>
   1a1a0:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a1a4:	ldr	r0, [fp, #12]
   1a1a8:	str	r0, [sp, #228]	; 0xe4
   1a1ac:	ldr	r0, [fp, #12]
   1a1b0:	str	r0, [sp, #224]	; 0xe0
   1a1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1b8:	ldrb	r0, [r0, #28]
   1a1bc:	lsr	r0, r0, #7
   1a1c0:	strb	r0, [sp, #249]	; 0xf9
   1a1c4:	ldr	r1, [fp, #24]
   1a1c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1cc:	ldr	r0, [r0, #76]	; 0x4c
   1a1d0:	lsl	r2, r0, #1
   1a1d4:	add	r0, sp, #172	; 0xac
   1a1d8:	bl	26a68 <__assert_fail@plt+0x15314>
   1a1dc:	str	r0, [fp, #-40]	; 0xffffffd8
   1a1e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a1e4:	cmp	r0, #0
   1a1e8:	beq	1a1f0 <__assert_fail@plt+0x8a9c>
   1a1ec:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a1f0:	ldr	r0, [fp, #16]
   1a1f4:	cmp	r0, #1
   1a1f8:	bhi	1a214 <__assert_fail@plt+0x8ac0>
   1a1fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a200:	ldrb	r0, [r0, #88]	; 0x58
   1a204:	ubfx	r0, r0, #1, #1
   1a208:	and	r0, r0, #255	; 0xff
   1a20c:	cmp	r0, #0
   1a210:	beq	1a264 <__assert_fail@plt+0x8b10>
   1a214:	ldr	r0, [pc, #2912]	; 1ad7c <__assert_fail@plt+0x9628>
   1a218:	ldr	r1, [sp, #208]	; 0xd0
   1a21c:	cmp	r0, r1
   1a220:	bhi	1a230 <__assert_fail@plt+0x8adc>
   1a224:	movw	r0, #12
   1a228:	str	r0, [fp, #-40]	; 0xffffffd8
   1a22c:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a230:	ldr	r0, [sp, #208]	; 0xd0
   1a234:	add	r0, r0, #1
   1a238:	lsl	r0, r0, #2
   1a23c:	bl	3816c <__assert_fail@plt+0x26a18>
   1a240:	str	r0, [sp, #272]	; 0x110
   1a244:	ldr	r0, [sp, #272]	; 0x110
   1a248:	movw	r1, #0
   1a24c:	cmp	r0, r1
   1a250:	bne	1a260 <__assert_fail@plt+0x8b0c>
   1a254:	movw	r0, #12
   1a258:	str	r0, [fp, #-40]	; 0xffffffd8
   1a25c:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a260:	b	1a264 <__assert_fail@plt+0x8b10>
   1a264:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a268:	str	r0, [fp, #-68]	; 0xffffffbc
   1a26c:	ldr	r0, [fp, #24]
   1a270:	and	r0, r0, #1
   1a274:	cmp	r0, #0
   1a278:	movw	r0, #0
   1a27c:	movne	r0, #1
   1a280:	tst	r0, #1
   1a284:	movw	r0, #4
   1a288:	moveq	r0, #6
   1a28c:	str	r0, [sp, #232]	; 0xe8
   1a290:	ldr	r0, [fp, #8]
   1a294:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a298:	cmp	r0, r1
   1a29c:	movw	r0, #0
   1a2a0:	movlt	r0, #1
   1a2a4:	tst	r0, #1
   1a2a8:	mvn	r0, #0
   1a2ac:	moveq	r0, #1
   1a2b0:	str	r0, [fp, #-56]	; 0xffffffc8
   1a2b4:	ldr	r0, [fp, #8]
   1a2b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a2bc:	cmp	r0, r1
   1a2c0:	bge	1a2d0 <__assert_fail@plt+0x8b7c>
   1a2c4:	ldr	r0, [fp, #8]
   1a2c8:	str	r0, [sp, #108]	; 0x6c
   1a2cc:	b	1a2d8 <__assert_fail@plt+0x8b84>
   1a2d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a2d4:	str	r0, [sp, #108]	; 0x6c
   1a2d8:	ldr	r0, [sp, #108]	; 0x6c
   1a2dc:	str	r0, [fp, #-48]	; 0xffffffd0
   1a2e0:	ldr	r0, [fp, #8]
   1a2e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a2e8:	cmp	r0, r1
   1a2ec:	bge	1a2fc <__assert_fail@plt+0x8ba8>
   1a2f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a2f4:	str	r0, [sp, #104]	; 0x68
   1a2f8:	b	1a304 <__assert_fail@plt+0x8bb0>
   1a2fc:	ldr	r0, [fp, #8]
   1a300:	str	r0, [sp, #104]	; 0x68
   1a304:	ldr	r0, [sp, #104]	; 0x68
   1a308:	str	r0, [fp, #-52]	; 0xffffffcc
   1a30c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a310:	ldr	r0, [r0, #92]	; 0x5c
   1a314:	cmp	r0, #1
   1a318:	movw	r0, #0
   1a31c:	moveq	r0, #1
   1a320:	and	r0, r0, #1
   1a324:	strb	r0, [fp, #-77]	; 0xffffffb3
   1a328:	ldr	r0, [sp, #168]	; 0xa8
   1a32c:	movw	r1, #0
   1a330:	cmp	r0, r1
   1a334:	beq	1a3f0 <__assert_fail@plt+0x8c9c>
   1a338:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   1a33c:	tst	r0, #1
   1a340:	movw	r0, #1
   1a344:	str	r0, [sp, #100]	; 0x64
   1a348:	bne	1a390 <__assert_fail@plt+0x8c3c>
   1a34c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a350:	ldr	r0, [r0, #12]
   1a354:	and	r0, r0, #4194304	; 0x400000
   1a358:	cmp	r0, #0
   1a35c:	movw	r0, #1
   1a360:	str	r0, [sp, #96]	; 0x60
   1a364:	bne	1a380 <__assert_fail@plt+0x8c2c>
   1a368:	ldr	r0, [sp, #164]	; 0xa4
   1a36c:	movw	r1, #0
   1a370:	cmp	r0, r1
   1a374:	movw	r0, #0
   1a378:	movne	r0, #1
   1a37c:	str	r0, [sp, #96]	; 0x60
   1a380:	ldr	r0, [sp, #96]	; 0x60
   1a384:	mvn	r1, #0
   1a388:	eor	r0, r0, r1
   1a38c:	str	r0, [sp, #100]	; 0x64
   1a390:	ldr	r0, [sp, #100]	; 0x64
   1a394:	tst	r0, #1
   1a398:	movw	r0, #4
   1a39c:	moveq	r0, #0
   1a3a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a3a4:	ldr	r2, [fp, #8]
   1a3a8:	cmp	r1, r2
   1a3ac:	movw	r1, #0
   1a3b0:	movle	r1, #1
   1a3b4:	tst	r1, #1
   1a3b8:	movw	r1, #2
   1a3bc:	moveq	r1, #0
   1a3c0:	orr	r0, r0, r1
   1a3c4:	ldr	r1, [sp, #164]	; 0xa4
   1a3c8:	movw	r2, #0
   1a3cc:	cmp	r1, r2
   1a3d0:	movw	r1, #0
   1a3d4:	movne	r1, #1
   1a3d8:	tst	r1, #1
   1a3dc:	movw	r1, #1
   1a3e0:	moveq	r1, #0
   1a3e4:	orr	r0, r0, r1
   1a3e8:	str	r0, [sp, #92]	; 0x5c
   1a3ec:	b	1a3fc <__assert_fail@plt+0x8ca8>
   1a3f0:	movw	r0, #8
   1a3f4:	str	r0, [sp, #92]	; 0x5c
   1a3f8:	b	1a3fc <__assert_fail@plt+0x8ca8>
   1a3fc:	ldr	r0, [sp, #92]	; 0x5c
   1a400:	str	r0, [fp, #-64]	; 0xffffffc0
   1a404:	movw	r0, #1
   1a408:	str	r0, [fp, #-40]	; 0xffffffd8
   1a40c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a410:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a414:	cmp	r0, r1
   1a418:	blt	1a42c <__assert_fail@plt+0x8cd8>
   1a41c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a420:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a424:	cmp	r0, r1
   1a428:	bge	1a430 <__assert_fail@plt+0x8cdc>
   1a42c:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a430:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a434:	sub	r0, r0, #4
   1a438:	cmp	r0, #4
   1a43c:	str	r0, [sp, #88]	; 0x58
   1a440:	bhi	1a6c8 <__assert_fail@plt+0x8f74>
   1a444:	add	r0, pc, #8
   1a448:	ldr	r1, [sp, #88]	; 0x58
   1a44c:	ldr	r0, [r0, r1, lsl #2]
   1a450:	mov	pc, r0
   1a454:	strdeq	sl, [r1], -ip
   1a458:	strdeq	sl, [r1], -ip
   1a45c:	andeq	sl, r1, r8, ror #9
   1a460:	andeq	sl, r1, ip, ror #8
   1a464:	andeq	sl, r1, r8, ror #8
   1a468:	b	1a7bc <__assert_fail@plt+0x9068>
   1a46c:	b	1a470 <__assert_fail@plt+0x8d1c>
   1a470:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a474:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a478:	cmp	r0, r1
   1a47c:	movw	r0, #0
   1a480:	str	r0, [sp, #84]	; 0x54
   1a484:	bge	1a4c8 <__assert_fail@plt+0x8d74>
   1a488:	ldr	r0, [sp, #168]	; 0xa8
   1a48c:	ldr	r1, [sp, #164]	; 0xa4
   1a490:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a494:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a498:	add	r2, r2, r3
   1a49c:	ldrb	r2, [r2]
   1a4a0:	add	r1, r1, r2
   1a4a4:	ldrb	r1, [r1]
   1a4a8:	add	r0, r0, r1
   1a4ac:	ldrsb	r0, [r0]
   1a4b0:	cmp	r0, #0
   1a4b4:	movw	r0, #0
   1a4b8:	movne	r0, #1
   1a4bc:	mvn	r1, #0
   1a4c0:	eor	r0, r0, r1
   1a4c4:	str	r0, [sp, #84]	; 0x54
   1a4c8:	ldr	r0, [sp, #84]	; 0x54
   1a4cc:	tst	r0, #1
   1a4d0:	beq	1a4e4 <__assert_fail@plt+0x8d90>
   1a4d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a4d8:	add	r0, r0, #1
   1a4dc:	str	r0, [fp, #-68]	; 0xffffffbc
   1a4e0:	b	1a470 <__assert_fail@plt+0x8d1c>
   1a4e4:	b	1a558 <__assert_fail@plt+0x8e04>
   1a4e8:	b	1a4ec <__assert_fail@plt+0x8d98>
   1a4ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a4f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a4f4:	cmp	r0, r1
   1a4f8:	movw	r0, #0
   1a4fc:	str	r0, [sp, #80]	; 0x50
   1a500:	bge	1a538 <__assert_fail@plt+0x8de4>
   1a504:	ldr	r0, [sp, #168]	; 0xa8
   1a508:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a50c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a510:	add	r1, r1, r2
   1a514:	ldrb	r1, [r1]
   1a518:	add	r0, r0, r1
   1a51c:	ldrsb	r0, [r0]
   1a520:	cmp	r0, #0
   1a524:	movw	r0, #0
   1a528:	movne	r0, #1
   1a52c:	mvn	r1, #0
   1a530:	eor	r0, r0, r1
   1a534:	str	r0, [sp, #80]	; 0x50
   1a538:	ldr	r0, [sp, #80]	; 0x50
   1a53c:	tst	r0, #1
   1a540:	beq	1a554 <__assert_fail@plt+0x8e00>
   1a544:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a548:	add	r0, r0, #1
   1a54c:	str	r0, [fp, #-68]	; 0xffffffbc
   1a550:	b	1a4ec <__assert_fail@plt+0x8d98>
   1a554:	b	1a558 <__assert_fail@plt+0x8e04>
   1a558:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a55c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a560:	cmp	r0, r1
   1a564:	bne	1a5f8 <__assert_fail@plt+0x8ea4>
   1a568:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a56c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a570:	cmp	r0, r1
   1a574:	blt	1a584 <__assert_fail@plt+0x8e30>
   1a578:	movw	r0, #0
   1a57c:	str	r0, [sp, #76]	; 0x4c
   1a580:	b	1a598 <__assert_fail@plt+0x8e44>
   1a584:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a588:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a58c:	add	r0, r0, r1
   1a590:	ldrb	r0, [r0]
   1a594:	str	r0, [sp, #76]	; 0x4c
   1a598:	ldr	r0, [sp, #76]	; 0x4c
   1a59c:	str	r0, [fp, #-84]	; 0xffffffac
   1a5a0:	ldr	r0, [sp, #168]	; 0xa8
   1a5a4:	ldr	r1, [sp, #164]	; 0xa4
   1a5a8:	movw	r2, #0
   1a5ac:	cmp	r1, r2
   1a5b0:	str	r0, [sp, #72]	; 0x48
   1a5b4:	beq	1a5d0 <__assert_fail@plt+0x8e7c>
   1a5b8:	ldr	r0, [sp, #164]	; 0xa4
   1a5bc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a5c0:	add	r0, r0, r1
   1a5c4:	ldrb	r0, [r0]
   1a5c8:	str	r0, [sp, #68]	; 0x44
   1a5cc:	b	1a5d8 <__assert_fail@plt+0x8e84>
   1a5d0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1a5d4:	str	r0, [sp, #68]	; 0x44
   1a5d8:	ldr	r0, [sp, #68]	; 0x44
   1a5dc:	ldr	r1, [sp, #72]	; 0x48
   1a5e0:	add	r0, r1, r0
   1a5e4:	ldrsb	r0, [r0]
   1a5e8:	cmp	r0, #0
   1a5ec:	bne	1a5f4 <__assert_fail@plt+0x8ea0>
   1a5f0:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a5f4:	b	1a5f8 <__assert_fail@plt+0x8ea4>
   1a5f8:	b	1a7bc <__assert_fail@plt+0x9068>
   1a5fc:	b	1a600 <__assert_fail@plt+0x8eac>
   1a600:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a604:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a608:	cmp	r0, r1
   1a60c:	blt	1a6b0 <__assert_fail@plt+0x8f5c>
   1a610:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a614:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a618:	cmp	r0, r1
   1a61c:	blt	1a62c <__assert_fail@plt+0x8ed8>
   1a620:	movw	r0, #0
   1a624:	str	r0, [sp, #64]	; 0x40
   1a628:	b	1a640 <__assert_fail@plt+0x8eec>
   1a62c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a630:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a634:	add	r0, r0, r1
   1a638:	ldrb	r0, [r0]
   1a63c:	str	r0, [sp, #64]	; 0x40
   1a640:	ldr	r0, [sp, #64]	; 0x40
   1a644:	str	r0, [fp, #-84]	; 0xffffffac
   1a648:	ldr	r0, [sp, #168]	; 0xa8
   1a64c:	ldr	r1, [sp, #164]	; 0xa4
   1a650:	movw	r2, #0
   1a654:	cmp	r1, r2
   1a658:	str	r0, [sp, #60]	; 0x3c
   1a65c:	beq	1a678 <__assert_fail@plt+0x8f24>
   1a660:	ldr	r0, [sp, #164]	; 0xa4
   1a664:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a668:	add	r0, r0, r1
   1a66c:	ldrb	r0, [r0]
   1a670:	str	r0, [sp, #56]	; 0x38
   1a674:	b	1a680 <__assert_fail@plt+0x8f2c>
   1a678:	ldr	r0, [fp, #-84]	; 0xffffffac
   1a67c:	str	r0, [sp, #56]	; 0x38
   1a680:	ldr	r0, [sp, #56]	; 0x38
   1a684:	ldr	r1, [sp, #60]	; 0x3c
   1a688:	add	r0, r1, r0
   1a68c:	ldrsb	r0, [r0]
   1a690:	cmp	r0, #0
   1a694:	beq	1a69c <__assert_fail@plt+0x8f48>
   1a698:	b	1a6b0 <__assert_fail@plt+0x8f5c>
   1a69c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a6a0:	mvn	r1, #0
   1a6a4:	add	r0, r0, r1
   1a6a8:	str	r0, [fp, #-68]	; 0xffffffbc
   1a6ac:	b	1a600 <__assert_fail@plt+0x8eac>
   1a6b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a6b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a6b8:	cmp	r0, r1
   1a6bc:	bge	1a6c4 <__assert_fail@plt+0x8f70>
   1a6c0:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a6c4:	b	1a7bc <__assert_fail@plt+0x9068>
   1a6c8:	b	1a6cc <__assert_fail@plt+0x8f78>
   1a6cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a6d0:	ldr	r1, [sp, #196]	; 0xc4
   1a6d4:	sub	r0, r0, r1
   1a6d8:	str	r0, [sp, #160]	; 0xa0
   1a6dc:	ldr	r0, [sp, #160]	; 0xa0
   1a6e0:	ldr	r1, [sp, #204]	; 0xcc
   1a6e4:	cmp	r0, r1
   1a6e8:	bcc	1a720 <__assert_fail@plt+0x8fcc>
   1a6ec:	add	r0, sp, #172	; 0xac
   1a6f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a6f4:	ldr	r2, [fp, #24]
   1a6f8:	bl	26bb8 <__assert_fail@plt+0x15464>
   1a6fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1a700:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a704:	cmp	r0, #0
   1a708:	beq	1a710 <__assert_fail@plt+0x8fbc>
   1a70c:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a710:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a714:	ldr	r1, [sp, #196]	; 0xc4
   1a718:	sub	r0, r0, r1
   1a71c:	str	r0, [sp, #160]	; 0xa0
   1a720:	ldr	r0, [sp, #160]	; 0xa0
   1a724:	ldr	r1, [sp, #200]	; 0xc8
   1a728:	cmp	r0, r1
   1a72c:	bcs	1a748 <__assert_fail@plt+0x8ff4>
   1a730:	ldr	r0, [sp, #176]	; 0xb0
   1a734:	ldr	r1, [sp, #160]	; 0xa0
   1a738:	add	r0, r0, r1
   1a73c:	ldrb	r0, [r0]
   1a740:	str	r0, [sp, #52]	; 0x34
   1a744:	b	1a754 <__assert_fail@plt+0x9000>
   1a748:	movw	r0, #0
   1a74c:	str	r0, [sp, #52]	; 0x34
   1a750:	b	1a754 <__assert_fail@plt+0x9000>
   1a754:	ldr	r0, [sp, #52]	; 0x34
   1a758:	str	r0, [fp, #-84]	; 0xffffffac
   1a75c:	ldr	r0, [sp, #168]	; 0xa8
   1a760:	ldr	r1, [fp, #-84]	; 0xffffffac
   1a764:	add	r0, r0, r1
   1a768:	ldrsb	r0, [r0]
   1a76c:	cmp	r0, #0
   1a770:	beq	1a778 <__assert_fail@plt+0x9024>
   1a774:	b	1a7b8 <__assert_fail@plt+0x9064>
   1a778:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a77c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a780:	add	r0, r1, r0
   1a784:	str	r0, [fp, #-68]	; 0xffffffbc
   1a788:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a78c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a790:	cmp	r0, r1
   1a794:	blt	1a7a8 <__assert_fail@plt+0x9054>
   1a798:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a79c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a7a0:	cmp	r0, r1
   1a7a4:	ble	1a7b4 <__assert_fail@plt+0x9060>
   1a7a8:	movw	r0, #1
   1a7ac:	str	r0, [fp, #-40]	; 0xffffffd8
   1a7b0:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a7b4:	b	1a6cc <__assert_fail@plt+0x8f78>
   1a7b8:	b	1a7bc <__assert_fail@plt+0x9068>
   1a7bc:	add	r0, sp, #172	; 0xac
   1a7c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a7c4:	ldr	r2, [fp, #24]
   1a7c8:	bl	26bb8 <__assert_fail@plt+0x15464>
   1a7cc:	str	r0, [fp, #-40]	; 0xffffffd8
   1a7d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7d4:	cmp	r0, #0
   1a7d8:	beq	1a7e0 <__assert_fail@plt+0x908c>
   1a7dc:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a7e0:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   1a7e4:	tst	r0, #1
   1a7e8:	bne	1a810 <__assert_fail@plt+0x90bc>
   1a7ec:	ldr	r0, [sp, #200]	; 0xc8
   1a7f0:	movw	r1, #0
   1a7f4:	cmp	r1, r0
   1a7f8:	beq	1a810 <__assert_fail@plt+0x90bc>
   1a7fc:	ldr	r0, [sp, #180]	; 0xb4
   1a800:	ldr	r0, [r0]
   1a804:	cmn	r0, #1
   1a808:	bne	1a810 <__assert_fail@plt+0x90bc>
   1a80c:	b	1a994 <__assert_fail@plt+0x9240>
   1a810:	movw	r0, #0
   1a814:	str	r0, [sp, #292]	; 0x124
   1a818:	str	r0, [sp, #280]	; 0x118
   1a81c:	str	r0, [sp, #276]	; 0x114
   1a820:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a824:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a828:	ldr	r2, [fp, #8]
   1a82c:	cmp	r1, r2
   1a830:	str	r0, [sp, #48]	; 0x30
   1a834:	bgt	1a844 <__assert_fail@plt+0x90f0>
   1a838:	sub	r0, fp, #68	; 0x44
   1a83c:	str	r0, [sp, #44]	; 0x2c
   1a840:	b	1a850 <__assert_fail@plt+0x90fc>
   1a844:	movw	r0, #0
   1a848:	str	r0, [sp, #44]	; 0x2c
   1a84c:	b	1a850 <__assert_fail@plt+0x90fc>
   1a850:	ldr	r0, [sp, #44]	; 0x2c
   1a854:	add	r1, sp, #172	; 0xac
   1a858:	str	r0, [sp, #40]	; 0x28
   1a85c:	mov	r0, r1
   1a860:	ldr	r1, [sp, #48]	; 0x30
   1a864:	and	r1, r1, #1
   1a868:	ldr	r2, [sp, #40]	; 0x28
   1a86c:	bl	277a4 <__assert_fail@plt+0x16050>
   1a870:	str	r0, [fp, #-72]	; 0xffffffb8
   1a874:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a878:	cmn	r0, #1
   1a87c:	beq	1a98c <__assert_fail@plt+0x9238>
   1a880:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a884:	cmn	r0, #2
   1a888:	bne	1a898 <__assert_fail@plt+0x9144>
   1a88c:	movw	r0, #12
   1a890:	str	r0, [fp, #-40]	; 0xffffffd8
   1a894:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a898:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a89c:	str	r0, [sp, #264]	; 0x108
   1a8a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8a4:	ldrb	r0, [r0, #28]
   1a8a8:	ubfx	r0, r0, #4, #1
   1a8ac:	and	r0, r0, #255	; 0xff
   1a8b0:	cmp	r0, #0
   1a8b4:	bne	1a8c4 <__assert_fail@plt+0x9170>
   1a8b8:	ldr	r0, [fp, #16]
   1a8bc:	cmp	r0, #1
   1a8c0:	bhi	1a8d4 <__assert_fail@plt+0x9180>
   1a8c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8c8:	ldr	r0, [r0, #76]	; 0x4c
   1a8cc:	cmp	r0, #0
   1a8d0:	beq	1a8fc <__assert_fail@plt+0x91a8>
   1a8d4:	ldr	r0, [sp, #272]	; 0x110
   1a8d8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a8dc:	add	r0, r0, r1, lsl #2
   1a8e0:	ldr	r0, [r0]
   1a8e4:	str	r0, [sp, #156]	; 0x9c
   1a8e8:	ldr	r1, [sp, #156]	; 0x9c
   1a8ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a8f0:	add	r0, sp, #172	; 0xac
   1a8f4:	bl	27d30 <__assert_fail@plt+0x165dc>
   1a8f8:	str	r0, [sp, #268]	; 0x10c
   1a8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a900:	ldrb	r0, [r0, #28]
   1a904:	ubfx	r0, r0, #4, #1
   1a908:	and	r0, r0, #255	; 0xff
   1a90c:	cmp	r0, #0
   1a910:	bne	1a938 <__assert_fail@plt+0x91e4>
   1a914:	ldr	r0, [fp, #16]
   1a918:	cmp	r0, #1
   1a91c:	bls	1a938 <__assert_fail@plt+0x91e4>
   1a920:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a924:	ldrb	r0, [r0, #88]	; 0x58
   1a928:	and	r0, r0, #1
   1a92c:	and	r0, r0, #255	; 0xff
   1a930:	cmp	r0, #0
   1a934:	bne	1a948 <__assert_fail@plt+0x91f4>
   1a938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a93c:	ldr	r0, [r0, #76]	; 0x4c
   1a940:	cmp	r0, #0
   1a944:	beq	1a980 <__assert_fail@plt+0x922c>
   1a948:	add	r0, sp, #172	; 0xac
   1a94c:	bl	27e08 <__assert_fail@plt+0x166b4>
   1a950:	str	r0, [fp, #-40]	; 0xffffffd8
   1a954:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a958:	cmp	r0, #0
   1a95c:	bne	1a964 <__assert_fail@plt+0x9210>
   1a960:	b	1a9a8 <__assert_fail@plt+0x9254>
   1a964:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a968:	cmp	r0, #1
   1a96c:	beq	1a974 <__assert_fail@plt+0x9220>
   1a970:	b	1ad40 <__assert_fail@plt+0x95ec>
   1a974:	mvn	r0, #0
   1a978:	str	r0, [fp, #-72]	; 0xffffffb8
   1a97c:	b	1a984 <__assert_fail@plt+0x9230>
   1a980:	b	1a9a8 <__assert_fail@plt+0x9254>
   1a984:	b	1a988 <__assert_fail@plt+0x9234>
   1a988:	b	1a98c <__assert_fail@plt+0x9238>
   1a98c:	add	r0, sp, #172	; 0xac
   1a990:	bl	28154 <__assert_fail@plt+0x16a00>
   1a994:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a998:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a99c:	add	r0, r1, r0
   1a9a0:	str	r0, [fp, #-68]	; 0xffffffbc
   1a9a4:	b	1a404 <__assert_fail@plt+0x8cb0>
   1a9a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a9ac:	cmn	r0, #1
   1a9b0:	beq	1a9b8 <__assert_fail@plt+0x9264>
   1a9b4:	b	1a9b8 <__assert_fail@plt+0x9264>
   1a9b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a9bc:	cmp	r0, #0
   1a9c0:	bne	1a9c8 <__assert_fail@plt+0x9274>
   1a9c4:	b	1a9c8 <__assert_fail@plt+0x9274>
   1a9c8:	ldr	r0, [fp, #16]
   1a9cc:	cmp	r0, #0
   1a9d0:	bls	1ad3c <__assert_fail@plt+0x95e8>
   1a9d4:	movw	r0, #1
   1a9d8:	str	r0, [sp, #152]	; 0x98
   1a9dc:	ldr	r0, [sp, #152]	; 0x98
   1a9e0:	ldr	r1, [fp, #16]
   1a9e4:	cmp	r0, r1
   1a9e8:	bcs	1aa24 <__assert_fail@plt+0x92d0>
   1a9ec:	ldr	r0, [fp, #20]
   1a9f0:	ldr	r1, [sp, #152]	; 0x98
   1a9f4:	add	r0, r0, r1, lsl #3
   1a9f8:	mvn	r1, #0
   1a9fc:	str	r1, [r0, #4]
   1aa00:	ldr	r0, [fp, #20]
   1aa04:	ldr	r1, [sp, #152]	; 0x98
   1aa08:	add	r0, r0, r1, lsl #3
   1aa0c:	mvn	r1, #0
   1aa10:	str	r1, [r0]
   1aa14:	ldr	r0, [sp, #152]	; 0x98
   1aa18:	add	r0, r0, #1
   1aa1c:	str	r0, [sp, #152]	; 0x98
   1aa20:	b	1a9dc <__assert_fail@plt+0x9288>
   1aa24:	ldr	r0, [fp, #20]
   1aa28:	mov	r1, #0
   1aa2c:	str	r1, [r0]
   1aa30:	ldr	r0, [sp, #264]	; 0x108
   1aa34:	ldr	r1, [fp, #20]
   1aa38:	str	r0, [r1, #4]
   1aa3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa40:	ldrb	r0, [r0, #28]
   1aa44:	ubfx	r0, r0, #4, #1
   1aa48:	and	r0, r0, #255	; 0xff
   1aa4c:	cmp	r0, #0
   1aa50:	bne	1aaf4 <__assert_fail@plt+0x93a0>
   1aa54:	ldr	r0, [fp, #16]
   1aa58:	cmp	r0, #1
   1aa5c:	bls	1aaf4 <__assert_fail@plt+0x93a0>
   1aa60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa64:	ldr	r2, [fp, #16]
   1aa68:	ldr	r3, [fp, #20]
   1aa6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa70:	ldrb	r1, [r1, #88]	; 0x58
   1aa74:	and	r1, r1, #1
   1aa78:	and	r1, r1, #255	; 0xff
   1aa7c:	cmp	r1, #0
   1aa80:	movw	r1, #0
   1aa84:	str	r0, [sp, #36]	; 0x24
   1aa88:	str	r2, [sp, #32]
   1aa8c:	str	r3, [sp, #28]
   1aa90:	str	r1, [sp, #24]
   1aa94:	beq	1aab0 <__assert_fail@plt+0x935c>
   1aa98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa9c:	ldr	r0, [r0, #76]	; 0x4c
   1aaa0:	cmp	r0, #0
   1aaa4:	movw	r0, #0
   1aaa8:	movgt	r0, #1
   1aaac:	str	r0, [sp, #24]
   1aab0:	ldr	r0, [sp, #24]
   1aab4:	ldr	r1, [sp, #36]	; 0x24
   1aab8:	str	r0, [sp, #20]
   1aabc:	mov	r0, r1
   1aac0:	add	r1, sp, #172	; 0xac
   1aac4:	ldr	r2, [sp, #32]
   1aac8:	ldr	r3, [sp, #28]
   1aacc:	ldr	ip, [sp, #20]
   1aad0:	and	lr, ip, #1
   1aad4:	str	lr, [sp]
   1aad8:	bl	28260 <__assert_fail@plt+0x16b0c>
   1aadc:	str	r0, [fp, #-40]	; 0xffffffd8
   1aae0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aae4:	cmp	r0, #0
   1aae8:	beq	1aaf0 <__assert_fail@plt+0x939c>
   1aaec:	b	1ad40 <__assert_fail@plt+0x95ec>
   1aaf0:	b	1aaf4 <__assert_fail@plt+0x93a0>
   1aaf4:	movw	r0, #0
   1aaf8:	str	r0, [sp, #152]	; 0x98
   1aafc:	ldr	r0, [sp, #152]	; 0x98
   1ab00:	ldr	r1, [fp, #16]
   1ab04:	cmp	r0, r1
   1ab08:	bcs	1ac28 <__assert_fail@plt+0x94d4>
   1ab0c:	ldr	r0, [fp, #20]
   1ab10:	ldr	r1, [sp, #152]	; 0x98
   1ab14:	add	r0, r0, r1, lsl #3
   1ab18:	ldr	r0, [r0]
   1ab1c:	cmn	r0, #1
   1ab20:	beq	1ac14 <__assert_fail@plt+0x94c0>
   1ab24:	ldrb	r0, [sp, #248]	; 0xf8
   1ab28:	cmp	r0, #0
   1ab2c:	beq	1abe0 <__assert_fail@plt+0x948c>
   1ab30:	ldr	r0, [fp, #20]
   1ab34:	ldr	r1, [sp, #152]	; 0x98
   1ab38:	add	r0, r0, r1, lsl #3
   1ab3c:	ldr	r0, [r0]
   1ab40:	ldr	r1, [sp, #200]	; 0xc8
   1ab44:	cmp	r0, r1
   1ab48:	bne	1ab58 <__assert_fail@plt+0x9404>
   1ab4c:	ldr	r0, [sp, #204]	; 0xcc
   1ab50:	str	r0, [sp, #16]
   1ab54:	b	1ab74 <__assert_fail@plt+0x9420>
   1ab58:	ldr	r0, [sp, #184]	; 0xb8
   1ab5c:	ldr	r1, [fp, #20]
   1ab60:	ldr	r2, [sp, #152]	; 0x98
   1ab64:	ldr	r1, [r1, r2, lsl #3]
   1ab68:	add	r0, r0, r1, lsl #2
   1ab6c:	ldr	r0, [r0]
   1ab70:	str	r0, [sp, #16]
   1ab74:	ldr	r0, [sp, #16]
   1ab78:	ldr	r1, [fp, #20]
   1ab7c:	ldr	r2, [sp, #152]	; 0x98
   1ab80:	str	r0, [r1, r2, lsl #3]
   1ab84:	ldr	r0, [fp, #20]
   1ab88:	ldr	r1, [sp, #152]	; 0x98
   1ab8c:	add	r0, r0, r1, lsl #3
   1ab90:	ldr	r0, [r0, #4]
   1ab94:	ldr	r1, [sp, #200]	; 0xc8
   1ab98:	cmp	r0, r1
   1ab9c:	bne	1abac <__assert_fail@plt+0x9458>
   1aba0:	ldr	r0, [sp, #204]	; 0xcc
   1aba4:	str	r0, [sp, #12]
   1aba8:	b	1abcc <__assert_fail@plt+0x9478>
   1abac:	ldr	r0, [sp, #184]	; 0xb8
   1abb0:	ldr	r1, [fp, #20]
   1abb4:	ldr	r2, [sp, #152]	; 0x98
   1abb8:	add	r1, r1, r2, lsl #3
   1abbc:	ldr	r1, [r1, #4]
   1abc0:	add	r0, r0, r1, lsl #2
   1abc4:	ldr	r0, [r0]
   1abc8:	str	r0, [sp, #12]
   1abcc:	ldr	r0, [sp, #12]
   1abd0:	ldr	r1, [fp, #20]
   1abd4:	ldr	r2, [sp, #152]	; 0x98
   1abd8:	add	r1, r1, r2, lsl #3
   1abdc:	str	r0, [r1, #4]
   1abe0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1abe4:	ldr	r1, [fp, #20]
   1abe8:	ldr	r2, [sp, #152]	; 0x98
   1abec:	ldr	r3, [r1, r2, lsl #3]
   1abf0:	add	r0, r3, r0
   1abf4:	str	r0, [r1, r2, lsl #3]
   1abf8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1abfc:	ldr	r1, [fp, #20]
   1ac00:	ldr	r2, [sp, #152]	; 0x98
   1ac04:	add	r1, r1, r2, lsl #3
   1ac08:	ldr	r2, [r1, #4]
   1ac0c:	add	r0, r2, r0
   1ac10:	str	r0, [r1, #4]
   1ac14:	b	1ac18 <__assert_fail@plt+0x94c4>
   1ac18:	ldr	r0, [sp, #152]	; 0x98
   1ac1c:	add	r0, r0, #1
   1ac20:	str	r0, [sp, #152]	; 0x98
   1ac24:	b	1aafc <__assert_fail@plt+0x93a8>
   1ac28:	movw	r0, #0
   1ac2c:	str	r0, [sp, #152]	; 0x98
   1ac30:	ldr	r0, [sp, #152]	; 0x98
   1ac34:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ac38:	cmp	r0, r1
   1ac3c:	bge	1ac84 <__assert_fail@plt+0x9530>
   1ac40:	ldr	r0, [fp, #20]
   1ac44:	ldr	r1, [fp, #16]
   1ac48:	ldr	r2, [sp, #152]	; 0x98
   1ac4c:	add	r1, r1, r2
   1ac50:	mvn	r2, #0
   1ac54:	str	r2, [r0, r1, lsl #3]
   1ac58:	ldr	r0, [fp, #20]
   1ac5c:	ldr	r1, [fp, #16]
   1ac60:	ldr	r2, [sp, #152]	; 0x98
   1ac64:	add	r1, r1, r2
   1ac68:	add	r0, r0, r1, lsl #3
   1ac6c:	mvn	r1, #0
   1ac70:	str	r1, [r0, #4]
   1ac74:	ldr	r0, [sp, #152]	; 0x98
   1ac78:	add	r0, r0, #1
   1ac7c:	str	r0, [sp, #152]	; 0x98
   1ac80:	b	1ac30 <__assert_fail@plt+0x94dc>
   1ac84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac88:	ldr	r0, [r0, #132]	; 0x84
   1ac8c:	movw	r1, #0
   1ac90:	cmp	r0, r1
   1ac94:	beq	1ad38 <__assert_fail@plt+0x95e4>
   1ac98:	movw	r0, #0
   1ac9c:	str	r0, [sp, #152]	; 0x98
   1aca0:	ldr	r0, [sp, #152]	; 0x98
   1aca4:	add	r0, r0, #1
   1aca8:	ldr	r1, [fp, #16]
   1acac:	cmp	r0, r1
   1acb0:	bcs	1ad34 <__assert_fail@plt+0x95e0>
   1acb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acb8:	ldr	r0, [r0, #132]	; 0x84
   1acbc:	ldr	r1, [sp, #152]	; 0x98
   1acc0:	add	r0, r0, r1, lsl #2
   1acc4:	ldr	r0, [r0]
   1acc8:	ldr	r1, [sp, #152]	; 0x98
   1accc:	cmp	r0, r1
   1acd0:	beq	1ad20 <__assert_fail@plt+0x95cc>
   1acd4:	ldr	r0, [fp, #20]
   1acd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1acdc:	ldr	r1, [r1, #132]	; 0x84
   1ace0:	ldr	r2, [sp, #152]	; 0x98
   1ace4:	ldr	r1, [r1, r2, lsl #2]
   1ace8:	add	r1, r0, r1, lsl #3
   1acec:	ldr	r1, [r1, #8]
   1acf0:	add	r0, r0, r2, lsl #3
   1acf4:	str	r1, [r0, #8]
   1acf8:	ldr	r0, [fp, #20]
   1acfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad00:	ldr	r1, [r1, #132]	; 0x84
   1ad04:	ldr	r2, [sp, #152]	; 0x98
   1ad08:	ldr	r1, [r1, r2, lsl #2]
   1ad0c:	add	r1, r0, r1, lsl #3
   1ad10:	ldr	r1, [r1, #12]
   1ad14:	add	r2, r2, #1
   1ad18:	add	r0, r0, r2, lsl #3
   1ad1c:	str	r1, [r0, #4]
   1ad20:	b	1ad24 <__assert_fail@plt+0x95d0>
   1ad24:	ldr	r0, [sp, #152]	; 0x98
   1ad28:	add	r0, r0, #1
   1ad2c:	str	r0, [sp, #152]	; 0x98
   1ad30:	b	1aca0 <__assert_fail@plt+0x954c>
   1ad34:	b	1ad38 <__assert_fail@plt+0x95e4>
   1ad38:	b	1ad3c <__assert_fail@plt+0x95e8>
   1ad3c:	b	1ad40 <__assert_fail@plt+0x95ec>
   1ad40:	ldr	r0, [sp, #272]	; 0x110
   1ad44:	bl	15f68 <__assert_fail@plt+0x4814>
   1ad48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad4c:	ldr	r0, [r0, #76]	; 0x4c
   1ad50:	cmp	r0, #0
   1ad54:	beq	1ad60 <__assert_fail@plt+0x960c>
   1ad58:	add	r0, sp, #172	; 0xac
   1ad5c:	bl	28628 <__assert_fail@plt+0x16ed4>
   1ad60:	add	r0, sp, #172	; 0xac
   1ad64:	bl	1c0a0 <__assert_fail@plt+0xa94c>
   1ad68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad6c:	str	r0, [fp, #-20]	; 0xffffffec
   1ad70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad74:	sub	sp, fp, #16
   1ad78:	pop	{r4, r5, r6, sl, fp, pc}
   1ad7c:	svccc	0x00ffffff
   1ad80:	push	{r4, r5, fp, lr}
   1ad84:	add	fp, sp, #8
   1ad88:	sub	sp, sp, #40	; 0x28
   1ad8c:	ldr	ip, [fp, #8]
   1ad90:	str	r0, [fp, #-12]
   1ad94:	str	r1, [fp, #-16]
   1ad98:	str	r2, [fp, #-20]	; 0xffffffec
   1ad9c:	str	r3, [sp, #24]
   1ada0:	ldr	r0, [fp, #-12]
   1ada4:	ldr	r1, [fp, #-16]
   1ada8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1adac:	ldr	r3, [sp, #24]
   1adb0:	ldr	lr, [fp, #-20]	; 0xffffffec
   1adb4:	ldr	r4, [fp, #8]
   1adb8:	movw	r5, #0
   1adbc:	str	r5, [sp]
   1adc0:	str	lr, [sp, #4]
   1adc4:	str	r4, [sp, #8]
   1adc8:	movw	lr, #1
   1adcc:	and	lr, lr, #1
   1add0:	str	lr, [sp, #12]
   1add4:	str	ip, [sp, #20]
   1add8:	bl	1ade4 <__assert_fail@plt+0x9690>
   1addc:	sub	sp, fp, #8
   1ade0:	pop	{r4, r5, fp, pc}
   1ade4:	push	{r4, r5, r6, sl, fp, lr}
   1ade8:	add	fp, sp, #16
   1adec:	sub	sp, sp, #96	; 0x60
   1adf0:	ldr	ip, [fp, #20]
   1adf4:	ldr	lr, [fp, #16]
   1adf8:	ldr	r4, [fp, #12]
   1adfc:	ldr	r5, [fp, #8]
   1ae00:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae04:	str	r1, [fp, #-28]	; 0xffffffe4
   1ae08:	str	r2, [fp, #-32]	; 0xffffffe0
   1ae0c:	str	r3, [fp, #-36]	; 0xffffffdc
   1ae10:	and	r0, ip, #1
   1ae14:	strb	r0, [fp, #-37]	; 0xffffffdb
   1ae18:	movw	r0, #0
   1ae1c:	str	r0, [sp, #52]	; 0x34
   1ae20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae24:	ldr	r0, [r0]
   1ae28:	str	r0, [sp, #48]	; 0x30
   1ae2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ae30:	ldr	r1, [fp, #8]
   1ae34:	add	r0, r0, r1
   1ae38:	str	r0, [sp, #44]	; 0x2c
   1ae3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ae40:	cmp	r0, #0
   1ae44:	movw	r0, #1
   1ae48:	str	r0, [sp, #40]	; 0x28
   1ae4c:	blt	1ae68 <__assert_fail@plt+0x9714>
   1ae50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ae54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ae58:	cmp	r0, r1
   1ae5c:	movw	r0, #0
   1ae60:	movgt	r0, #1
   1ae64:	str	r0, [sp, #40]	; 0x28
   1ae68:	ldr	r0, [sp, #40]	; 0x28
   1ae6c:	tst	r0, #1
   1ae70:	beq	1ae80 <__assert_fail@plt+0x972c>
   1ae74:	mvn	r0, #0
   1ae78:	str	r0, [fp, #-20]	; 0xffffffec
   1ae7c:	b	1b298 <__assert_fail@plt+0x9b44>
   1ae80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae84:	ldr	r1, [sp, #44]	; 0x2c
   1ae88:	cmp	r0, r1
   1ae8c:	movw	r0, #1
   1ae90:	str	r0, [sp, #36]	; 0x24
   1ae94:	blt	1aed0 <__assert_fail@plt+0x977c>
   1ae98:	ldr	r0, [fp, #8]
   1ae9c:	movw	r1, #0
   1aea0:	cmp	r1, r0
   1aea4:	movw	r0, #0
   1aea8:	str	r0, [sp, #32]
   1aeac:	bgt	1aec8 <__assert_fail@plt+0x9774>
   1aeb0:	ldr	r0, [sp, #44]	; 0x2c
   1aeb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aeb8:	cmp	r0, r1
   1aebc:	movw	r0, #0
   1aec0:	movlt	r0, #1
   1aec4:	str	r0, [sp, #32]
   1aec8:	ldr	r0, [sp, #32]
   1aecc:	str	r0, [sp, #36]	; 0x24
   1aed0:	ldr	r0, [sp, #36]	; 0x24
   1aed4:	tst	r0, #1
   1aed8:	beq	1aee8 <__assert_fail@plt+0x9794>
   1aedc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aee0:	str	r0, [sp, #44]	; 0x2c
   1aee4:	b	1af48 <__assert_fail@plt+0x97f4>
   1aee8:	ldr	r0, [sp, #44]	; 0x2c
   1aeec:	cmp	r0, #0
   1aef0:	movw	r0, #1
   1aef4:	str	r0, [sp, #28]
   1aef8:	blt	1af30 <__assert_fail@plt+0x97dc>
   1aefc:	ldr	r0, [fp, #8]
   1af00:	cmp	r0, #0
   1af04:	movw	r0, #0
   1af08:	str	r0, [sp, #24]
   1af0c:	bge	1af28 <__assert_fail@plt+0x97d4>
   1af10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af14:	ldr	r1, [sp, #44]	; 0x2c
   1af18:	cmp	r0, r1
   1af1c:	movw	r0, #0
   1af20:	movle	r0, #1
   1af24:	str	r0, [sp, #24]
   1af28:	ldr	r0, [sp, #24]
   1af2c:	str	r0, [sp, #28]
   1af30:	ldr	r0, [sp, #28]
   1af34:	tst	r0, #1
   1af38:	beq	1af44 <__assert_fail@plt+0x97f0>
   1af3c:	movw	r0, #0
   1af40:	str	r0, [sp, #44]	; 0x2c
   1af44:	b	1af48 <__assert_fail@plt+0x97f4>
   1af48:	movw	r0, #0
   1af4c:	movt	r0, #0
   1af50:	cmp	r0, #0
   1af54:	bne	1af70 <__assert_fail@plt+0x981c>
   1af58:	b	1af5c <__assert_fail@plt+0x9808>
   1af5c:	movw	r0, #0
   1af60:	movt	r0, #0
   1af64:	cmp	r0, #0
   1af68:	beq	1af80 <__assert_fail@plt+0x982c>
   1af6c:	b	1af70 <__assert_fail@plt+0x981c>
   1af70:	ldr	r0, [sp, #48]	; 0x30
   1af74:	add	r0, r0, #136	; 0x88
   1af78:	bl	11460 <pthread_mutex_lock@plt>
   1af7c:	b	1af84 <__assert_fail@plt+0x9830>
   1af80:	b	1af84 <__assert_fail@plt+0x9830>
   1af84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af88:	ldrb	r0, [r0, #28]
   1af8c:	ldr	r1, [sp, #52]	; 0x34
   1af90:	orr	r2, r1, #1
   1af94:	mov	r3, #1
   1af98:	tst	r3, r0, lsr #5
   1af9c:	movne	r1, r2
   1afa0:	str	r1, [sp, #52]	; 0x34
   1afa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afa8:	ldrb	r0, [r0, #28]
   1afac:	ubfx	r0, r0, #6, #1
   1afb0:	and	r0, r0, #255	; 0xff
   1afb4:	cmp	r0, #0
   1afb8:	movw	r0, #0
   1afbc:	movne	r0, #1
   1afc0:	tst	r0, #1
   1afc4:	movw	r0, #2
   1afc8:	moveq	r0, #0
   1afcc:	ldr	r1, [sp, #52]	; 0x34
   1afd0:	orr	r0, r1, r0
   1afd4:	str	r0, [sp, #52]	; 0x34
   1afd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1afdc:	ldr	r1, [sp, #44]	; 0x2c
   1afe0:	cmp	r0, r1
   1afe4:	bge	1b01c <__assert_fail@plt+0x98c8>
   1afe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afec:	ldr	r0, [r0, #16]
   1aff0:	movw	r1, #0
   1aff4:	cmp	r0, r1
   1aff8:	beq	1b01c <__assert_fail@plt+0x98c8>
   1affc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b000:	ldrb	r0, [r0, #28]
   1b004:	ubfx	r0, r0, #3, #1
   1b008:	and	r0, r0, #255	; 0xff
   1b00c:	cmp	r0, #0
   1b010:	bne	1b01c <__assert_fail@plt+0x98c8>
   1b014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b018:	bl	18e30 <__assert_fail@plt+0x76dc>
   1b01c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b020:	ldrb	r0, [r0, #28]
   1b024:	ubfx	r0, r0, #4, #1
   1b028:	and	r0, r0, #255	; 0xff
   1b02c:	cmp	r0, #0
   1b030:	beq	1b03c <__assert_fail@plt+0x98e8>
   1b034:	movw	r0, #0
   1b038:	str	r0, [fp, #16]
   1b03c:	ldr	r0, [fp, #16]
   1b040:	movw	r1, #0
   1b044:	cmp	r0, r1
   1b048:	bne	1b058 <__assert_fail@plt+0x9904>
   1b04c:	movw	r0, #1
   1b050:	str	r0, [fp, #-52]	; 0xffffffcc
   1b054:	b	1b0e4 <__assert_fail@plt+0x9990>
   1b058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b05c:	ldrb	r0, [r0, #28]
   1b060:	ubfx	r0, r0, #1, #2
   1b064:	and	r0, r0, #255	; 0xff
   1b068:	cmp	r0, #2
   1b06c:	movw	r0, #0
   1b070:	str	r0, [sp, #20]
   1b074:	bne	1b098 <__assert_fail@plt+0x9944>
   1b078:	ldr	r0, [fp, #16]
   1b07c:	ldr	r0, [r0]
   1b080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b084:	ldr	r1, [r1, #24]
   1b088:	cmp	r0, r1
   1b08c:	movw	r0, #0
   1b090:	movls	r0, #1
   1b094:	str	r0, [sp, #20]
   1b098:	ldr	r0, [sp, #20]
   1b09c:	tst	r0, #1
   1b0a0:	beq	1b0d0 <__assert_fail@plt+0x997c>
   1b0a4:	ldr	r0, [fp, #16]
   1b0a8:	ldr	r0, [r0]
   1b0ac:	str	r0, [fp, #-52]	; 0xffffffcc
   1b0b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b0b4:	cmp	r0, #1
   1b0b8:	bge	1b0cc <__assert_fail@plt+0x9978>
   1b0bc:	movw	r0, #0
   1b0c0:	str	r0, [fp, #16]
   1b0c4:	movw	r0, #1
   1b0c8:	str	r0, [fp, #-52]	; 0xffffffcc
   1b0cc:	b	1b0e0 <__assert_fail@plt+0x998c>
   1b0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0d4:	ldr	r0, [r0, #24]
   1b0d8:	add	r0, r0, #1
   1b0dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1b0e0:	b	1b0e4 <__assert_fail@plt+0x9990>
   1b0e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b0e8:	lsl	r0, r0, #3
   1b0ec:	bl	3816c <__assert_fail@plt+0x26a18>
   1b0f0:	str	r0, [fp, #-48]	; 0xffffffd0
   1b0f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b0f8:	movw	r1, #0
   1b0fc:	cmp	r0, r1
   1b100:	bne	1b110 <__assert_fail@plt+0x99bc>
   1b104:	mvn	r0, #1
   1b108:	str	r0, [sp, #56]	; 0x38
   1b10c:	b	1b254 <__assert_fail@plt+0x9b00>
   1b110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b114:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b118:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b11c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b120:	ldr	ip, [sp, #44]	; 0x2c
   1b124:	ldr	lr, [fp, #12]
   1b128:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1b12c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1b130:	ldr	r6, [sp, #52]	; 0x34
   1b134:	str	ip, [sp]
   1b138:	str	lr, [sp, #4]
   1b13c:	str	r4, [sp, #8]
   1b140:	str	r5, [sp, #12]
   1b144:	str	r6, [sp, #16]
   1b148:	bl	19e6c <__assert_fail@plt+0x8718>
   1b14c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b150:	movw	r0, #0
   1b154:	str	r0, [sp, #56]	; 0x38
   1b158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b15c:	cmp	r0, #0
   1b160:	beq	1b188 <__assert_fail@plt+0x9a34>
   1b164:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b168:	cmp	r0, #1
   1b16c:	movw	r0, #0
   1b170:	moveq	r0, #1
   1b174:	tst	r0, #1
   1b178:	mvn	r0, #0
   1b17c:	mvneq	r0, #1
   1b180:	str	r0, [sp, #56]	; 0x38
   1b184:	b	1b1f4 <__assert_fail@plt+0x9aa0>
   1b188:	ldr	r0, [fp, #16]
   1b18c:	movw	r1, #0
   1b190:	cmp	r0, r1
   1b194:	beq	1b1f0 <__assert_fail@plt+0x9a9c>
   1b198:	ldr	r0, [fp, #16]
   1b19c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b1a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b1a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b1a8:	ldrb	r3, [r3, #28]
   1b1ac:	ubfx	r3, r3, #1, #2
   1b1b0:	bl	26660 <__assert_fail@plt+0x14f0c>
   1b1b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b1b8:	ldrb	r2, [r1, #28]
   1b1bc:	and	r0, r0, #3
   1b1c0:	and	r2, r2, #249	; 0xf9
   1b1c4:	orr	r0, r2, r0, lsl #1
   1b1c8:	strb	r0, [r1, #28]
   1b1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1d0:	ldrb	r0, [r0, #28]
   1b1d4:	ubfx	r0, r0, #1, #2
   1b1d8:	and	r0, r0, #255	; 0xff
   1b1dc:	cmp	r0, #0
   1b1e0:	bne	1b1ec <__assert_fail@plt+0x9a98>
   1b1e4:	mvn	r0, #1
   1b1e8:	str	r0, [sp, #56]	; 0x38
   1b1ec:	b	1b1f0 <__assert_fail@plt+0x9a9c>
   1b1f0:	b	1b1f4 <__assert_fail@plt+0x9aa0>
   1b1f4:	ldr	r0, [sp, #56]	; 0x38
   1b1f8:	cmp	r0, #0
   1b1fc:	bne	1b24c <__assert_fail@plt+0x9af8>
   1b200:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1b204:	tst	r0, #1
   1b208:	beq	1b23c <__assert_fail@plt+0x9ae8>
   1b20c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b210:	ldr	r0, [r0]
   1b214:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b218:	cmp	r0, r1
   1b21c:	bne	1b224 <__assert_fail@plt+0x9ad0>
   1b220:	b	1b224 <__assert_fail@plt+0x9ad0>
   1b224:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b228:	ldr	r0, [r0, #4]
   1b22c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b230:	sub	r0, r0, r1
   1b234:	str	r0, [sp, #56]	; 0x38
   1b238:	b	1b248 <__assert_fail@plt+0x9af4>
   1b23c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b240:	ldr	r0, [r0]
   1b244:	str	r0, [sp, #56]	; 0x38
   1b248:	b	1b24c <__assert_fail@plt+0x9af8>
   1b24c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b250:	bl	15f68 <__assert_fail@plt+0x4814>
   1b254:	movw	r0, #0
   1b258:	movt	r0, #0
   1b25c:	cmp	r0, #0
   1b260:	bne	1b27c <__assert_fail@plt+0x9b28>
   1b264:	b	1b268 <__assert_fail@plt+0x9b14>
   1b268:	movw	r0, #0
   1b26c:	movt	r0, #0
   1b270:	cmp	r0, #0
   1b274:	beq	1b28c <__assert_fail@plt+0x9b38>
   1b278:	b	1b27c <__assert_fail@plt+0x9b28>
   1b27c:	ldr	r0, [sp, #48]	; 0x30
   1b280:	add	r0, r0, #136	; 0x88
   1b284:	bl	113a0 <pthread_mutex_unlock@plt>
   1b288:	b	1b290 <__assert_fail@plt+0x9b3c>
   1b28c:	b	1b290 <__assert_fail@plt+0x9b3c>
   1b290:	ldr	r0, [sp, #56]	; 0x38
   1b294:	str	r0, [fp, #-20]	; 0xffffffec
   1b298:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b29c:	sub	sp, fp, #16
   1b2a0:	pop	{r4, r5, r6, sl, fp, pc}
   1b2a4:	push	{r4, r5, r6, sl, fp, lr}
   1b2a8:	add	fp, sp, #16
   1b2ac:	sub	sp, sp, #40	; 0x28
   1b2b0:	ldr	ip, [fp, #12]
   1b2b4:	ldr	lr, [fp, #8]
   1b2b8:	str	r0, [fp, #-20]	; 0xffffffec
   1b2bc:	str	r1, [fp, #-24]	; 0xffffffe8
   1b2c0:	str	r2, [sp, #28]
   1b2c4:	str	r3, [sp, #24]
   1b2c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b2cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b2d0:	ldr	r2, [sp, #28]
   1b2d4:	ldr	r3, [sp, #24]
   1b2d8:	ldr	r4, [fp, #8]
   1b2dc:	ldr	r5, [sp, #28]
   1b2e0:	ldr	r6, [fp, #12]
   1b2e4:	str	r4, [sp]
   1b2e8:	str	r5, [sp, #4]
   1b2ec:	str	r6, [sp, #8]
   1b2f0:	movw	r4, #0
   1b2f4:	and	r4, r4, #1
   1b2f8:	str	r4, [sp, #12]
   1b2fc:	str	ip, [sp, #20]
   1b300:	str	lr, [sp, #16]
   1b304:	bl	1ade4 <__assert_fail@plt+0x9690>
   1b308:	sub	sp, fp, #16
   1b30c:	pop	{r4, r5, r6, sl, fp, pc}
   1b310:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b314:	add	fp, sp, #24
   1b318:	sub	sp, sp, #56	; 0x38
   1b31c:	ldr	ip, [fp, #20]
   1b320:	ldr	lr, [fp, #16]
   1b324:	ldr	r4, [fp, #12]
   1b328:	ldr	r5, [fp, #8]
   1b32c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b330:	str	r1, [fp, #-32]	; 0xffffffe0
   1b334:	str	r2, [fp, #-36]	; 0xffffffdc
   1b338:	str	r3, [sp, #40]	; 0x28
   1b33c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b340:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b344:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b348:	ldr	r3, [sp, #40]	; 0x28
   1b34c:	ldr	r6, [fp, #8]
   1b350:	ldr	r7, [fp, #12]
   1b354:	ldr	r8, [fp, #16]
   1b358:	ldr	r9, [fp, #20]
   1b35c:	str	r6, [sp]
   1b360:	str	r7, [sp, #4]
   1b364:	movw	r6, #0
   1b368:	str	r6, [sp, #8]
   1b36c:	str	r8, [sp, #12]
   1b370:	str	r9, [sp, #16]
   1b374:	movw	r6, #1
   1b378:	and	r6, r6, #1
   1b37c:	str	r6, [sp, #20]
   1b380:	str	ip, [sp, #36]	; 0x24
   1b384:	str	lr, [sp, #32]
   1b388:	str	r4, [sp, #28]
   1b38c:	str	r5, [sp, #24]
   1b390:	bl	1b39c <__assert_fail@plt+0x9c48>
   1b394:	sub	sp, fp, #24
   1b398:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b39c:	push	{r4, r5, r6, r7, fp, lr}
   1b3a0:	add	fp, sp, #16
   1b3a4:	sub	sp, sp, #64	; 0x40
   1b3a8:	ldr	ip, [fp, #28]
   1b3ac:	ldr	lr, [fp, #24]
   1b3b0:	ldr	r4, [fp, #20]
   1b3b4:	ldr	r5, [fp, #16]
   1b3b8:	ldr	r6, [fp, #12]
   1b3bc:	ldr	r7, [fp, #8]
   1b3c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b3c4:	str	r1, [fp, #-28]	; 0xffffffe4
   1b3c8:	str	r2, [fp, #-32]	; 0xffffffe0
   1b3cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1b3d0:	and	r0, ip, #1
   1b3d4:	strb	r0, [fp, #-37]	; 0xffffffdb
   1b3d8:	movw	r0, #0
   1b3dc:	str	r0, [sp, #24]
   1b3e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3e4:	cmp	r0, #0
   1b3e8:	movw	r0, #1
   1b3ec:	str	r0, [sp, #20]
   1b3f0:	blt	1b43c <__assert_fail@plt+0x9ce8>
   1b3f4:	ldr	r0, [fp, #8]
   1b3f8:	cmp	r0, #0
   1b3fc:	movw	r0, #1
   1b400:	str	r0, [sp, #20]
   1b404:	blt	1b43c <__assert_fail@plt+0x9ce8>
   1b408:	ldr	r0, [fp, #24]
   1b40c:	cmp	r0, #0
   1b410:	movw	r0, #1
   1b414:	str	r0, [sp, #20]
   1b418:	blt	1b43c <__assert_fail@plt+0x9ce8>
   1b41c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b420:	ldr	r1, [fp, #8]
   1b424:	add	r1, r0, r1
   1b428:	mov	r2, #1
   1b42c:	cmp	r1, r0
   1b430:	movwvc	r2, #0
   1b434:	str	r1, [sp, #28]
   1b438:	str	r2, [sp, #20]
   1b43c:	ldr	r0, [sp, #20]
   1b440:	tst	r0, #1
   1b444:	beq	1b454 <__assert_fail@plt+0x9d00>
   1b448:	mvn	r0, #1
   1b44c:	str	r0, [fp, #-20]	; 0xffffffec
   1b450:	b	1b530 <__assert_fail@plt+0x9ddc>
   1b454:	ldr	r0, [fp, #8]
   1b458:	cmp	r0, #0
   1b45c:	ble	1b4dc <__assert_fail@plt+0x9d88>
   1b460:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b464:	cmp	r0, #0
   1b468:	ble	1b4d0 <__assert_fail@plt+0x9d7c>
   1b46c:	ldr	r0, [sp, #28]
   1b470:	mov	r1, r0
   1b474:	str	r1, [sp, #16]
   1b478:	bl	3816c <__assert_fail@plt+0x26a18>
   1b47c:	str	r0, [sp, #24]
   1b480:	ldr	r0, [sp, #24]
   1b484:	movw	r1, #0
   1b488:	cmp	r0, r1
   1b48c:	bne	1b49c <__assert_fail@plt+0x9d48>
   1b490:	mvn	r0, #1
   1b494:	str	r0, [fp, #-20]	; 0xffffffec
   1b498:	b	1b530 <__assert_fail@plt+0x9ddc>
   1b49c:	ldr	r0, [sp, #24]
   1b4a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b4a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b4a8:	bl	11478 <memcpy@plt>
   1b4ac:	ldr	r0, [sp, #24]
   1b4b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b4b4:	add	r0, r0, r1
   1b4b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b4bc:	ldr	r2, [fp, #8]
   1b4c0:	bl	11478 <memcpy@plt>
   1b4c4:	ldr	r0, [sp, #24]
   1b4c8:	str	r0, [sp, #36]	; 0x24
   1b4cc:	b	1b4d8 <__assert_fail@plt+0x9d84>
   1b4d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b4d4:	str	r0, [sp, #36]	; 0x24
   1b4d8:	b	1b4e4 <__assert_fail@plt+0x9d90>
   1b4dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b4e0:	str	r0, [sp, #36]	; 0x24
   1b4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4e8:	ldr	r1, [sp, #36]	; 0x24
   1b4ec:	ldr	r2, [sp, #28]
   1b4f0:	ldr	r3, [fp, #12]
   1b4f4:	ldr	ip, [fp, #16]
   1b4f8:	ldr	lr, [fp, #24]
   1b4fc:	ldr	r4, [fp, #20]
   1b500:	ldrb	r5, [fp, #-37]	; 0xffffffdb
   1b504:	str	ip, [sp]
   1b508:	str	lr, [sp, #4]
   1b50c:	str	r4, [sp, #8]
   1b510:	and	ip, r5, #1
   1b514:	str	ip, [sp, #12]
   1b518:	bl	1ade4 <__assert_fail@plt+0x9690>
   1b51c:	str	r0, [sp, #32]
   1b520:	ldr	r0, [sp, #24]
   1b524:	bl	15f68 <__assert_fail@plt+0x4814>
   1b528:	ldr	r0, [sp, #32]
   1b52c:	str	r0, [fp, #-20]	; 0xffffffec
   1b530:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b534:	sub	sp, fp, #16
   1b538:	pop	{r4, r5, r6, r7, fp, pc}
   1b53c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b540:	add	fp, sp, #28
   1b544:	sub	sp, sp, #68	; 0x44
   1b548:	ldr	ip, [fp, #24]
   1b54c:	ldr	lr, [fp, #20]
   1b550:	ldr	r4, [fp, #16]
   1b554:	ldr	r5, [fp, #12]
   1b558:	ldr	r6, [fp, #8]
   1b55c:	str	r0, [fp, #-32]	; 0xffffffe0
   1b560:	str	r1, [fp, #-36]	; 0xffffffdc
   1b564:	str	r2, [fp, #-40]	; 0xffffffd8
   1b568:	str	r3, [fp, #-44]	; 0xffffffd4
   1b56c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b570:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b574:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b578:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b57c:	ldr	r7, [fp, #8]
   1b580:	ldr	r8, [fp, #12]
   1b584:	ldr	r9, [fp, #16]
   1b588:	ldr	sl, [fp, #20]
   1b58c:	str	r0, [sp, #48]	; 0x30
   1b590:	ldr	r0, [fp, #24]
   1b594:	str	r0, [sp, #44]	; 0x2c
   1b598:	ldr	r0, [sp, #48]	; 0x30
   1b59c:	str	r7, [sp]
   1b5a0:	str	r8, [sp, #4]
   1b5a4:	str	r9, [sp, #8]
   1b5a8:	str	sl, [sp, #12]
   1b5ac:	ldr	r7, [sp, #44]	; 0x2c
   1b5b0:	str	r7, [sp, #16]
   1b5b4:	movw	r8, #0
   1b5b8:	and	r8, r8, #1
   1b5bc:	str	r8, [sp, #20]
   1b5c0:	str	ip, [sp, #40]	; 0x28
   1b5c4:	str	lr, [sp, #36]	; 0x24
   1b5c8:	str	r4, [sp, #32]
   1b5cc:	str	r5, [sp, #28]
   1b5d0:	str	r6, [sp, #24]
   1b5d4:	bl	1b39c <__assert_fail@plt+0x9c48>
   1b5d8:	sub	sp, fp, #28
   1b5dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5e0:	sub	sp, sp, #16
   1b5e4:	ldr	ip, [sp, #16]
   1b5e8:	str	r0, [sp, #12]
   1b5ec:	str	r1, [sp, #8]
   1b5f0:	str	r2, [sp, #4]
   1b5f4:	str	r3, [sp]
   1b5f8:	ldr	r0, [sp, #4]
   1b5fc:	cmp	r0, #0
   1b600:	beq	1b644 <__assert_fail@plt+0x9ef0>
   1b604:	ldr	r0, [sp, #12]
   1b608:	ldrb	r1, [r0, #28]
   1b60c:	bic	r1, r1, #6
   1b610:	movw	r2, #2
   1b614:	orr	r1, r1, r2
   1b618:	strb	r1, [r0, #28]
   1b61c:	ldr	r0, [sp, #4]
   1b620:	ldr	r1, [sp, #8]
   1b624:	str	r0, [r1]
   1b628:	ldr	r0, [sp]
   1b62c:	ldr	r1, [sp, #8]
   1b630:	str	r0, [r1, #4]
   1b634:	ldr	r0, [sp, #16]
   1b638:	ldr	r1, [sp, #8]
   1b63c:	str	r0, [r1, #8]
   1b640:	b	1b670 <__assert_fail@plt+0x9f1c>
   1b644:	ldr	r0, [sp, #12]
   1b648:	ldrb	r1, [r0, #28]
   1b64c:	bic	r1, r1, #6
   1b650:	strb	r1, [r0, #28]
   1b654:	ldr	r0, [sp, #8]
   1b658:	movw	r1, #0
   1b65c:	str	r1, [r0]
   1b660:	ldr	r0, [sp, #8]
   1b664:	str	r1, [r0, #8]
   1b668:	ldr	r0, [sp, #8]
   1b66c:	str	r1, [r0, #4]
   1b670:	add	sp, sp, #16
   1b674:	bx	lr
   1b678:	push	{fp, lr}
   1b67c:	mov	fp, sp
   1b680:	sub	sp, sp, #8
   1b684:	str	r0, [sp, #4]
   1b688:	ldr	r0, [sp, #4]
   1b68c:	ldr	r0, [r0, #4]
   1b690:	and	r0, r0, #255	; 0xff
   1b694:	cmp	r0, #6
   1b698:	bne	1b6c4 <__assert_fail@plt+0x9f70>
   1b69c:	ldr	r0, [sp, #4]
   1b6a0:	ldr	r0, [r0, #4]
   1b6a4:	lsr	r0, r0, #18
   1b6a8:	and	r0, r0, #1
   1b6ac:	cmp	r0, #0
   1b6b0:	bne	1b6c4 <__assert_fail@plt+0x9f70>
   1b6b4:	ldr	r0, [sp, #4]
   1b6b8:	ldr	r0, [r0]
   1b6bc:	bl	1b798 <__assert_fail@plt+0xa044>
   1b6c0:	b	1b700 <__assert_fail@plt+0x9fac>
   1b6c4:	ldr	r0, [sp, #4]
   1b6c8:	ldr	r0, [r0, #4]
   1b6cc:	and	r0, r0, #255	; 0xff
   1b6d0:	cmp	r0, #3
   1b6d4:	bne	1b6fc <__assert_fail@plt+0x9fa8>
   1b6d8:	ldr	r0, [sp, #4]
   1b6dc:	ldr	r0, [r0, #4]
   1b6e0:	lsr	r0, r0, #18
   1b6e4:	and	r0, r0, #1
   1b6e8:	cmp	r0, #0
   1b6ec:	bne	1b6fc <__assert_fail@plt+0x9fa8>
   1b6f0:	ldr	r0, [sp, #4]
   1b6f4:	ldr	r0, [r0]
   1b6f8:	bl	15f68 <__assert_fail@plt+0x4814>
   1b6fc:	b	1b700 <__assert_fail@plt+0x9fac>
   1b700:	mov	sp, fp
   1b704:	pop	{fp, pc}
   1b708:	push	{fp, lr}
   1b70c:	mov	fp, sp
   1b710:	sub	sp, sp, #8
   1b714:	str	r0, [sp, #4]
   1b718:	ldr	r0, [sp, #4]
   1b71c:	ldr	r0, [r0, #24]
   1b720:	bl	15f68 <__assert_fail@plt+0x4814>
   1b724:	ldr	r0, [sp, #4]
   1b728:	ldr	r0, [r0, #36]	; 0x24
   1b72c:	bl	15f68 <__assert_fail@plt+0x4814>
   1b730:	ldr	r0, [sp, #4]
   1b734:	ldr	r0, [r0, #40]	; 0x28
   1b738:	ldr	r1, [sp, #4]
   1b73c:	add	r1, r1, #4
   1b740:	cmp	r0, r1
   1b744:	beq	1b764 <__assert_fail@plt+0xa010>
   1b748:	ldr	r0, [sp, #4]
   1b74c:	ldr	r0, [r0, #40]	; 0x28
   1b750:	ldr	r0, [r0, #8]
   1b754:	bl	15f68 <__assert_fail@plt+0x4814>
   1b758:	ldr	r0, [sp, #4]
   1b75c:	ldr	r0, [r0, #40]	; 0x28
   1b760:	bl	15f68 <__assert_fail@plt+0x4814>
   1b764:	ldr	r0, [sp, #4]
   1b768:	ldr	r0, [r0, #12]
   1b76c:	bl	15f68 <__assert_fail@plt+0x4814>
   1b770:	ldr	r0, [sp, #4]
   1b774:	ldr	r0, [r0, #48]	; 0x30
   1b778:	bl	15f68 <__assert_fail@plt+0x4814>
   1b77c:	ldr	r0, [sp, #4]
   1b780:	ldr	r0, [r0, #44]	; 0x2c
   1b784:	bl	15f68 <__assert_fail@plt+0x4814>
   1b788:	ldr	r0, [sp, #4]
   1b78c:	bl	15f68 <__assert_fail@plt+0x4814>
   1b790:	mov	sp, fp
   1b794:	pop	{fp, pc}
   1b798:	push	{fp, lr}
   1b79c:	mov	fp, sp
   1b7a0:	sub	sp, sp, #8
   1b7a4:	str	r0, [sp, #4]
   1b7a8:	ldr	r0, [sp, #4]
   1b7ac:	ldr	r0, [r0]
   1b7b0:	bl	15f68 <__assert_fail@plt+0x4814>
   1b7b4:	ldr	r0, [sp, #4]
   1b7b8:	ldr	r0, [r0, #4]
   1b7bc:	bl	15f68 <__assert_fail@plt+0x4814>
   1b7c0:	ldr	r0, [sp, #4]
   1b7c4:	ldr	r0, [r0, #8]
   1b7c8:	bl	15f68 <__assert_fail@plt+0x4814>
   1b7cc:	ldr	r0, [sp, #4]
   1b7d0:	ldr	r0, [r0, #12]
   1b7d4:	bl	15f68 <__assert_fail@plt+0x4814>
   1b7d8:	ldr	r0, [sp, #4]
   1b7dc:	bl	15f68 <__assert_fail@plt+0x4814>
   1b7e0:	mov	sp, fp
   1b7e4:	pop	{fp, pc}
   1b7e8:	push	{fp, lr}
   1b7ec:	mov	fp, sp
   1b7f0:	sub	sp, sp, #120	; 0x78
   1b7f4:	str	r0, [fp, #-8]
   1b7f8:	str	r1, [fp, #-12]
   1b7fc:	movw	r0, #4
   1b800:	str	r0, [fp, #-24]	; 0xffffffe8
   1b804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b808:	movw	r1, #8
   1b80c:	cmp	r1, r0
   1b810:	bcs	1b820 <__assert_fail@plt+0xa0cc>
   1b814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b818:	str	r0, [fp, #-48]	; 0xffffffd0
   1b81c:	b	1b82c <__assert_fail@plt+0xa0d8>
   1b820:	movw	r0, #8
   1b824:	str	r0, [fp, #-48]	; 0xffffffd0
   1b828:	b	1b82c <__assert_fail@plt+0xa0d8>
   1b82c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b830:	movw	r1, #12
   1b834:	cmp	r1, r0
   1b838:	bcs	1b870 <__assert_fail@plt+0xa11c>
   1b83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b840:	movw	r1, #8
   1b844:	cmp	r1, r0
   1b848:	bcs	1b858 <__assert_fail@plt+0xa104>
   1b84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b850:	str	r0, [fp, #-52]	; 0xffffffcc
   1b854:	b	1b864 <__assert_fail@plt+0xa110>
   1b858:	movw	r0, #8
   1b85c:	str	r0, [fp, #-52]	; 0xffffffcc
   1b860:	b	1b864 <__assert_fail@plt+0xa110>
   1b864:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b868:	str	r0, [fp, #-56]	; 0xffffffc8
   1b86c:	b	1b87c <__assert_fail@plt+0xa128>
   1b870:	movw	r0, #12
   1b874:	str	r0, [fp, #-56]	; 0xffffffc8
   1b878:	b	1b87c <__assert_fail@plt+0xa128>
   1b87c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b880:	movw	r1, #8
   1b884:	cmp	r1, r0
   1b888:	bcs	1b910 <__assert_fail@plt+0xa1bc>
   1b88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b890:	movw	r1, #8
   1b894:	cmp	r1, r0
   1b898:	bcs	1b8a8 <__assert_fail@plt+0xa154>
   1b89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8a0:	str	r0, [sp, #60]	; 0x3c
   1b8a4:	b	1b8b4 <__assert_fail@plt+0xa160>
   1b8a8:	movw	r0, #8
   1b8ac:	str	r0, [sp, #60]	; 0x3c
   1b8b0:	b	1b8b4 <__assert_fail@plt+0xa160>
   1b8b4:	ldr	r0, [sp, #60]	; 0x3c
   1b8b8:	movw	r1, #12
   1b8bc:	cmp	r1, r0
   1b8c0:	bcs	1b8f8 <__assert_fail@plt+0xa1a4>
   1b8c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8c8:	movw	r1, #8
   1b8cc:	cmp	r1, r0
   1b8d0:	bcs	1b8e0 <__assert_fail@plt+0xa18c>
   1b8d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8d8:	str	r0, [sp, #56]	; 0x38
   1b8dc:	b	1b8ec <__assert_fail@plt+0xa198>
   1b8e0:	movw	r0, #8
   1b8e4:	str	r0, [sp, #56]	; 0x38
   1b8e8:	b	1b8ec <__assert_fail@plt+0xa198>
   1b8ec:	ldr	r0, [sp, #56]	; 0x38
   1b8f0:	str	r0, [sp, #52]	; 0x34
   1b8f4:	b	1b904 <__assert_fail@plt+0xa1b0>
   1b8f8:	movw	r0, #12
   1b8fc:	str	r0, [sp, #52]	; 0x34
   1b900:	b	1b904 <__assert_fail@plt+0xa1b0>
   1b904:	ldr	r0, [sp, #52]	; 0x34
   1b908:	str	r0, [sp, #48]	; 0x30
   1b90c:	b	1b91c <__assert_fail@plt+0xa1c8>
   1b910:	movw	r0, #8
   1b914:	str	r0, [sp, #48]	; 0x30
   1b918:	b	1b91c <__assert_fail@plt+0xa1c8>
   1b91c:	ldr	r0, [sp, #48]	; 0x30
   1b920:	movw	r1, #12
   1b924:	cmp	r1, r0
   1b928:	bcs	1ba50 <__assert_fail@plt+0xa2fc>
   1b92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b930:	movw	r1, #8
   1b934:	cmp	r1, r0
   1b938:	bcs	1b948 <__assert_fail@plt+0xa1f4>
   1b93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b940:	str	r0, [sp, #44]	; 0x2c
   1b944:	b	1b954 <__assert_fail@plt+0xa200>
   1b948:	movw	r0, #8
   1b94c:	str	r0, [sp, #44]	; 0x2c
   1b950:	b	1b954 <__assert_fail@plt+0xa200>
   1b954:	ldr	r0, [sp, #44]	; 0x2c
   1b958:	movw	r1, #12
   1b95c:	cmp	r1, r0
   1b960:	bcs	1b998 <__assert_fail@plt+0xa244>
   1b964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b968:	movw	r1, #8
   1b96c:	cmp	r1, r0
   1b970:	bcs	1b980 <__assert_fail@plt+0xa22c>
   1b974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b978:	str	r0, [sp, #40]	; 0x28
   1b97c:	b	1b98c <__assert_fail@plt+0xa238>
   1b980:	movw	r0, #8
   1b984:	str	r0, [sp, #40]	; 0x28
   1b988:	b	1b98c <__assert_fail@plt+0xa238>
   1b98c:	ldr	r0, [sp, #40]	; 0x28
   1b990:	str	r0, [sp, #36]	; 0x24
   1b994:	b	1b9a4 <__assert_fail@plt+0xa250>
   1b998:	movw	r0, #12
   1b99c:	str	r0, [sp, #36]	; 0x24
   1b9a0:	b	1b9a4 <__assert_fail@plt+0xa250>
   1b9a4:	ldr	r0, [sp, #36]	; 0x24
   1b9a8:	movw	r1, #8
   1b9ac:	cmp	r1, r0
   1b9b0:	bcs	1ba38 <__assert_fail@plt+0xa2e4>
   1b9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9b8:	movw	r1, #8
   1b9bc:	cmp	r1, r0
   1b9c0:	bcs	1b9d0 <__assert_fail@plt+0xa27c>
   1b9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9c8:	str	r0, [sp, #32]
   1b9cc:	b	1b9dc <__assert_fail@plt+0xa288>
   1b9d0:	movw	r0, #8
   1b9d4:	str	r0, [sp, #32]
   1b9d8:	b	1b9dc <__assert_fail@plt+0xa288>
   1b9dc:	ldr	r0, [sp, #32]
   1b9e0:	movw	r1, #12
   1b9e4:	cmp	r1, r0
   1b9e8:	bcs	1ba20 <__assert_fail@plt+0xa2cc>
   1b9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9f0:	movw	r1, #8
   1b9f4:	cmp	r1, r0
   1b9f8:	bcs	1ba08 <__assert_fail@plt+0xa2b4>
   1b9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba00:	str	r0, [sp, #28]
   1ba04:	b	1ba14 <__assert_fail@plt+0xa2c0>
   1ba08:	movw	r0, #8
   1ba0c:	str	r0, [sp, #28]
   1ba10:	b	1ba14 <__assert_fail@plt+0xa2c0>
   1ba14:	ldr	r0, [sp, #28]
   1ba18:	str	r0, [sp, #24]
   1ba1c:	b	1ba2c <__assert_fail@plt+0xa2d8>
   1ba20:	movw	r0, #12
   1ba24:	str	r0, [sp, #24]
   1ba28:	b	1ba2c <__assert_fail@plt+0xa2d8>
   1ba2c:	ldr	r0, [sp, #24]
   1ba30:	str	r0, [sp, #20]
   1ba34:	b	1ba44 <__assert_fail@plt+0xa2f0>
   1ba38:	movw	r0, #8
   1ba3c:	str	r0, [sp, #20]
   1ba40:	b	1ba44 <__assert_fail@plt+0xa2f0>
   1ba44:	ldr	r0, [sp, #20]
   1ba48:	str	r0, [sp, #16]
   1ba4c:	b	1ba5c <__assert_fail@plt+0xa308>
   1ba50:	movw	r0, #12
   1ba54:	str	r0, [sp, #16]
   1ba58:	b	1ba5c <__assert_fail@plt+0xa308>
   1ba5c:	ldr	r0, [sp, #16]
   1ba60:	ldr	r1, [pc, #904]	; 1bdf0 <__assert_fail@plt+0xa69c>
   1ba64:	str	r0, [fp, #-28]	; 0xffffffe4
   1ba68:	ldr	r0, [fp, #-8]
   1ba6c:	movw	r2, #0
   1ba70:	and	r2, r2, #255	; 0xff
   1ba74:	str	r1, [sp, #12]
   1ba78:	mov	r1, r2
   1ba7c:	movw	r2, #160	; 0xa0
   1ba80:	bl	11658 <memset@plt>
   1ba84:	ldr	r0, [fp, #-8]
   1ba88:	movw	r1, #31
   1ba8c:	str	r1, [r0, #64]	; 0x40
   1ba90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ba94:	mvn	r1, #0
   1ba98:	udiv	r0, r1, r0
   1ba9c:	ldr	r1, [sp, #12]
   1baa0:	cmp	r1, r0
   1baa4:	bcs	1bab4 <__assert_fail@plt+0xa360>
   1baa8:	ldr	r0, [pc, #832]	; 1bdf0 <__assert_fail@plt+0xa69c>
   1baac:	str	r0, [sp, #8]
   1bab0:	b	1bac4 <__assert_fail@plt+0xa370>
   1bab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bab8:	mvn	r1, #0
   1babc:	udiv	r0, r1, r0
   1bac0:	str	r0, [sp, #8]
   1bac4:	ldr	r0, [sp, #8]
   1bac8:	lsr	r0, r0, #1
   1bacc:	ldr	r1, [fp, #-12]
   1bad0:	cmp	r0, r1
   1bad4:	bhi	1bae4 <__assert_fail@plt+0xa390>
   1bad8:	movw	r0, #12
   1badc:	str	r0, [fp, #-4]
   1bae0:	b	1bde4 <__assert_fail@plt+0xa690>
   1bae4:	ldr	r0, [fp, #-12]
   1bae8:	add	r0, r0, #1
   1baec:	ldr	r1, [fp, #-8]
   1baf0:	str	r0, [r1, #4]
   1baf4:	ldr	r0, [fp, #-8]
   1baf8:	ldr	r0, [r0, #4]
   1bafc:	lsl	r0, r0, #3
   1bb00:	bl	3816c <__assert_fail@plt+0x26a18>
   1bb04:	ldr	r1, [fp, #-8]
   1bb08:	str	r0, [r1]
   1bb0c:	movw	r0, #1
   1bb10:	str	r0, [fp, #-16]
   1bb14:	ldr	r0, [fp, #-16]
   1bb18:	ldr	r1, [fp, #-12]
   1bb1c:	cmp	r0, r1
   1bb20:	bls	1bb28 <__assert_fail@plt+0xa3d4>
   1bb24:	b	1bb3c <__assert_fail@plt+0xa3e8>
   1bb28:	b	1bb2c <__assert_fail@plt+0xa3d8>
   1bb2c:	ldr	r0, [fp, #-16]
   1bb30:	lsl	r0, r0, #1
   1bb34:	str	r0, [fp, #-16]
   1bb38:	b	1bb14 <__assert_fail@plt+0xa3c0>
   1bb3c:	ldr	r1, [fp, #-16]
   1bb40:	movw	r0, #12
   1bb44:	bl	380d0 <__assert_fail@plt+0x2697c>
   1bb48:	ldr	r1, [fp, #-8]
   1bb4c:	str	r0, [r1, #32]
   1bb50:	ldr	r0, [fp, #-16]
   1bb54:	sub	r0, r0, #1
   1bb58:	ldr	r1, [fp, #-8]
   1bb5c:	str	r0, [r1, #68]	; 0x44
   1bb60:	bl	11544 <__ctype_get_mb_cur_max@plt>
   1bb64:	ldr	r1, [fp, #-8]
   1bb68:	str	r0, [r1, #92]	; 0x5c
   1bb6c:	movw	r0, #14
   1bb70:	bl	116e8 <nl_langinfo@plt>
   1bb74:	str	r0, [fp, #-20]	; 0xffffffec
   1bb78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb7c:	ldrb	r0, [r0]
   1bb80:	cmp	r0, #85	; 0x55
   1bb84:	beq	1bb98 <__assert_fail@plt+0xa444>
   1bb88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb8c:	ldrb	r0, [r0]
   1bb90:	cmp	r0, #117	; 0x75
   1bb94:	bne	1bc28 <__assert_fail@plt+0xa4d4>
   1bb98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb9c:	ldrb	r0, [r0, #1]
   1bba0:	cmp	r0, #84	; 0x54
   1bba4:	beq	1bbb8 <__assert_fail@plt+0xa464>
   1bba8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bbac:	ldrb	r0, [r0, #1]
   1bbb0:	cmp	r0, #116	; 0x74
   1bbb4:	bne	1bc28 <__assert_fail@plt+0xa4d4>
   1bbb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bbbc:	ldrb	r0, [r0, #2]
   1bbc0:	cmp	r0, #70	; 0x46
   1bbc4:	beq	1bbd8 <__assert_fail@plt+0xa484>
   1bbc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bbcc:	ldrb	r0, [r0, #2]
   1bbd0:	cmp	r0, #102	; 0x66
   1bbd4:	bne	1bc28 <__assert_fail@plt+0xa4d4>
   1bbd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bbdc:	add	r0, r0, #3
   1bbe0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bbe4:	ldrb	r1, [r1, #3]
   1bbe8:	cmp	r1, #45	; 0x2d
   1bbec:	movw	r1, #0
   1bbf0:	moveq	r1, #1
   1bbf4:	and	r1, r1, #1
   1bbf8:	add	r0, r0, r1
   1bbfc:	movw	r1, #51682	; 0xc9e2
   1bc00:	movt	r1, #3
   1bc04:	bl	11400 <strcmp@plt>
   1bc08:	cmp	r0, #0
   1bc0c:	bne	1bc28 <__assert_fail@plt+0xa4d4>
   1bc10:	ldr	r0, [fp, #-8]
   1bc14:	ldrb	r1, [r0, #88]	; 0x58
   1bc18:	bic	r1, r1, #4
   1bc1c:	movw	r2, #4
   1bc20:	orr	r1, r1, r2
   1bc24:	strb	r1, [r0, #88]	; 0x58
   1bc28:	ldr	r0, [fp, #-8]
   1bc2c:	ldrb	r1, [r0, #88]	; 0x58
   1bc30:	bic	r1, r1, #8
   1bc34:	strb	r1, [r0, #88]	; 0x58
   1bc38:	ldr	r0, [fp, #-8]
   1bc3c:	ldr	r0, [r0, #92]	; 0x5c
   1bc40:	cmp	r0, #1
   1bc44:	ble	1bd8c <__assert_fail@plt+0xa638>
   1bc48:	ldr	r0, [fp, #-8]
   1bc4c:	ldrb	r0, [r0, #88]	; 0x58
   1bc50:	ubfx	r0, r0, #2, #1
   1bc54:	and	r0, r0, #255	; 0xff
   1bc58:	cmp	r0, #0
   1bc5c:	beq	1bc74 <__assert_fail@plt+0xa520>
   1bc60:	ldr	r0, [fp, #-8]
   1bc64:	movw	r1, #52244	; 0xcc14
   1bc68:	movt	r1, #3
   1bc6c:	str	r1, [r0, #60]	; 0x3c
   1bc70:	b	1bd88 <__assert_fail@plt+0xa634>
   1bc74:	movw	r0, #32
   1bc78:	movw	r1, #1
   1bc7c:	bl	380d0 <__assert_fail@plt+0x2697c>
   1bc80:	ldr	r1, [fp, #-8]
   1bc84:	str	r0, [r1, #60]	; 0x3c
   1bc88:	ldr	r0, [fp, #-8]
   1bc8c:	ldr	r0, [r0, #60]	; 0x3c
   1bc90:	movw	r1, #0
   1bc94:	cmp	r0, r1
   1bc98:	bne	1bca8 <__assert_fail@plt+0xa554>
   1bc9c:	movw	r0, #12
   1bca0:	str	r0, [fp, #-4]
   1bca4:	b	1bde4 <__assert_fail@plt+0xa690>
   1bca8:	movw	r0, #0
   1bcac:	str	r0, [fp, #-32]	; 0xffffffe0
   1bcb0:	str	r0, [fp, #-40]	; 0xffffffd8
   1bcb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bcb8:	cmp	r0, #8
   1bcbc:	bge	1bd84 <__assert_fail@plt+0xa630>
   1bcc0:	movw	r0, #0
   1bcc4:	str	r0, [fp, #-36]	; 0xffffffdc
   1bcc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bccc:	cmp	r0, #32
   1bcd0:	bge	1bd70 <__assert_fail@plt+0xa61c>
   1bcd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bcd8:	bl	11664 <btowc@plt>
   1bcdc:	str	r0, [fp, #-44]	; 0xffffffd4
   1bce0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bce4:	cmn	r0, #1
   1bce8:	beq	1bd14 <__assert_fail@plt+0xa5c0>
   1bcec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bcf0:	mov	r1, #1
   1bcf4:	lsl	r0, r1, r0
   1bcf8:	ldr	r1, [fp, #-8]
   1bcfc:	ldr	r1, [r1, #60]	; 0x3c
   1bd00:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bd04:	add	r1, r1, r2, lsl #2
   1bd08:	ldr	r2, [r1]
   1bd0c:	orr	r0, r2, r0
   1bd10:	str	r0, [r1]
   1bd14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bd18:	mvn	r1, #127	; 0x7f
   1bd1c:	and	r0, r0, r1
   1bd20:	cmp	r0, #0
   1bd24:	bne	1bd50 <__assert_fail@plt+0xa5fc>
   1bd28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bd2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd30:	cmp	r0, r1
   1bd34:	beq	1bd50 <__assert_fail@plt+0xa5fc>
   1bd38:	ldr	r0, [fp, #-8]
   1bd3c:	ldrb	r1, [r0, #88]	; 0x58
   1bd40:	bic	r1, r1, #8
   1bd44:	movw	r2, #8
   1bd48:	orr	r1, r1, r2
   1bd4c:	strb	r1, [r0, #88]	; 0x58
   1bd50:	b	1bd54 <__assert_fail@plt+0xa600>
   1bd54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bd58:	add	r0, r0, #1
   1bd5c:	str	r0, [fp, #-36]	; 0xffffffdc
   1bd60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bd64:	add	r0, r0, #1
   1bd68:	str	r0, [fp, #-40]	; 0xffffffd8
   1bd6c:	b	1bcc8 <__assert_fail@plt+0xa574>
   1bd70:	b	1bd74 <__assert_fail@plt+0xa620>
   1bd74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd78:	add	r0, r0, #1
   1bd7c:	str	r0, [fp, #-32]	; 0xffffffe0
   1bd80:	b	1bcb4 <__assert_fail@plt+0xa560>
   1bd84:	b	1bd88 <__assert_fail@plt+0xa634>
   1bd88:	b	1bd8c <__assert_fail@plt+0xa638>
   1bd8c:	ldr	r0, [fp, #-8]
   1bd90:	ldr	r0, [r0]
   1bd94:	movw	r1, #0
   1bd98:	cmp	r0, r1
   1bd9c:	movw	r0, #1
   1bda0:	str	r0, [sp, #4]
   1bda4:	beq	1bdc4 <__assert_fail@plt+0xa670>
   1bda8:	ldr	r0, [fp, #-8]
   1bdac:	ldr	r0, [r0, #32]
   1bdb0:	movw	r1, #0
   1bdb4:	cmp	r0, r1
   1bdb8:	movw	r0, #0
   1bdbc:	moveq	r0, #1
   1bdc0:	str	r0, [sp, #4]
   1bdc4:	ldr	r0, [sp, #4]
   1bdc8:	tst	r0, #1
   1bdcc:	beq	1bddc <__assert_fail@plt+0xa688>
   1bdd0:	movw	r0, #12
   1bdd4:	str	r0, [fp, #-4]
   1bdd8:	b	1bde4 <__assert_fail@plt+0xa690>
   1bddc:	movw	r0, #0
   1bde0:	str	r0, [fp, #-4]
   1bde4:	ldr	r0, [fp, #-4]
   1bde8:	mov	sp, fp
   1bdec:	pop	{fp, pc}
   1bdf0:	svcvc	0x00ffffff
   1bdf4:	push	{fp, lr}
   1bdf8:	mov	fp, sp
   1bdfc:	sub	sp, sp, #48	; 0x30
   1be00:	ldr	ip, [fp, #12]
   1be04:	ldr	lr, [fp, #8]
   1be08:	str	r0, [fp, #-8]
   1be0c:	str	r1, [fp, #-12]
   1be10:	str	r2, [fp, #-16]
   1be14:	str	r3, [fp, #-20]	; 0xffffffec
   1be18:	and	r0, lr, #1
   1be1c:	strb	r0, [fp, #-21]	; 0xffffffeb
   1be20:	ldr	r0, [fp, #-8]
   1be24:	movw	r1, #0
   1be28:	and	r1, r1, #255	; 0xff
   1be2c:	movw	r2, #84	; 0x54
   1be30:	str	ip, [sp, #16]
   1be34:	bl	11658 <memset@plt>
   1be38:	ldr	r0, [fp, #-12]
   1be3c:	ldr	r1, [fp, #-16]
   1be40:	ldr	r2, [fp, #-8]
   1be44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1be48:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   1be4c:	ldr	lr, [fp, #12]
   1be50:	and	ip, ip, #1
   1be54:	str	ip, [sp]
   1be58:	str	lr, [sp, #4]
   1be5c:	bl	1ccac <__assert_fail@plt+0xb558>
   1be60:	ldr	r0, [fp, #-16]
   1be64:	cmp	r0, #0
   1be68:	ble	1be9c <__assert_fail@plt+0xa748>
   1be6c:	ldr	r0, [fp, #-8]
   1be70:	ldr	r1, [fp, #-16]
   1be74:	add	r1, r1, #1
   1be78:	bl	1cdac <__assert_fail@plt+0xb658>
   1be7c:	str	r0, [sp, #20]
   1be80:	ldr	r0, [sp, #20]
   1be84:	cmp	r0, #0
   1be88:	beq	1be98 <__assert_fail@plt+0xa744>
   1be8c:	ldr	r0, [sp, #20]
   1be90:	str	r0, [fp, #-4]
   1be94:	b	1bffc <__assert_fail@plt+0xa8a8>
   1be98:	b	1be9c <__assert_fail@plt+0xa748>
   1be9c:	ldr	r0, [fp, #-8]
   1bea0:	ldrb	r0, [r0, #75]	; 0x4b
   1bea4:	cmp	r0, #0
   1bea8:	beq	1bebc <__assert_fail@plt+0xa768>
   1beac:	ldr	r0, [fp, #-8]
   1beb0:	ldr	r0, [r0, #4]
   1beb4:	str	r0, [sp, #12]
   1beb8:	b	1bec4 <__assert_fail@plt+0xa770>
   1bebc:	ldr	r0, [fp, #-12]
   1bec0:	str	r0, [sp, #12]
   1bec4:	ldr	r0, [sp, #12]
   1bec8:	ldr	r1, [fp, #-8]
   1becc:	str	r0, [r1, #4]
   1bed0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1bed4:	tst	r0, #1
   1bed8:	beq	1bf94 <__assert_fail@plt+0xa840>
   1bedc:	ldr	r0, [fp, #12]
   1bee0:	ldr	r0, [r0, #92]	; 0x5c
   1bee4:	cmp	r0, #1
   1bee8:	ble	1bf88 <__assert_fail@plt+0xa834>
   1beec:	b	1bef0 <__assert_fail@plt+0xa79c>
   1bef0:	ldr	r0, [fp, #-8]
   1bef4:	bl	1cf04 <__assert_fail@plt+0xb7b0>
   1bef8:	str	r0, [sp, #20]
   1befc:	ldr	r0, [sp, #20]
   1bf00:	cmp	r0, #0
   1bf04:	beq	1bf14 <__assert_fail@plt+0xa7c0>
   1bf08:	ldr	r0, [sp, #20]
   1bf0c:	str	r0, [fp, #-4]
   1bf10:	b	1bffc <__assert_fail@plt+0xa8a8>
   1bf14:	ldr	r0, [fp, #-8]
   1bf18:	ldr	r0, [r0, #32]
   1bf1c:	ldr	r1, [fp, #-16]
   1bf20:	cmp	r0, r1
   1bf24:	blt	1bf2c <__assert_fail@plt+0xa7d8>
   1bf28:	b	1bf84 <__assert_fail@plt+0xa830>
   1bf2c:	ldr	r0, [fp, #-8]
   1bf30:	ldr	r0, [r0, #36]	; 0x24
   1bf34:	ldr	r1, [fp, #-8]
   1bf38:	ldr	r1, [r1, #28]
   1bf3c:	ldr	r2, [fp, #12]
   1bf40:	ldr	r2, [r2, #92]	; 0x5c
   1bf44:	add	r1, r1, r2
   1bf48:	cmp	r0, r1
   1bf4c:	ble	1bf54 <__assert_fail@plt+0xa800>
   1bf50:	b	1bf84 <__assert_fail@plt+0xa830>
   1bf54:	ldr	r0, [fp, #-8]
   1bf58:	ldr	r1, [r0, #36]	; 0x24
   1bf5c:	lsl	r1, r1, #1
   1bf60:	bl	1cdac <__assert_fail@plt+0xb658>
   1bf64:	str	r0, [sp, #20]
   1bf68:	ldr	r0, [sp, #20]
   1bf6c:	cmp	r0, #0
   1bf70:	beq	1bf80 <__assert_fail@plt+0xa82c>
   1bf74:	ldr	r0, [sp, #20]
   1bf78:	str	r0, [fp, #-4]
   1bf7c:	b	1bffc <__assert_fail@plt+0xa8a8>
   1bf80:	b	1bef0 <__assert_fail@plt+0xa79c>
   1bf84:	b	1bf90 <__assert_fail@plt+0xa83c>
   1bf88:	ldr	r0, [fp, #-8]
   1bf8c:	bl	1d9ac <__assert_fail@plt+0xc258>
   1bf90:	b	1bff4 <__assert_fail@plt+0xa8a0>
   1bf94:	ldr	r0, [fp, #12]
   1bf98:	ldr	r0, [r0, #92]	; 0x5c
   1bf9c:	cmp	r0, #1
   1bfa0:	ble	1bfb0 <__assert_fail@plt+0xa85c>
   1bfa4:	ldr	r0, [fp, #-8]
   1bfa8:	bl	1dab0 <__assert_fail@plt+0xc35c>
   1bfac:	b	1bff0 <__assert_fail@plt+0xa89c>
   1bfb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bfb4:	movw	r1, #0
   1bfb8:	cmp	r0, r1
   1bfbc:	beq	1bfcc <__assert_fail@plt+0xa878>
   1bfc0:	ldr	r0, [fp, #-8]
   1bfc4:	bl	1ddf0 <__assert_fail@plt+0xc69c>
   1bfc8:	b	1bfec <__assert_fail@plt+0xa898>
   1bfcc:	ldr	r0, [fp, #-8]
   1bfd0:	ldr	r0, [r0, #36]	; 0x24
   1bfd4:	ldr	r1, [fp, #-8]
   1bfd8:	str	r0, [r1, #28]
   1bfdc:	ldr	r0, [fp, #-8]
   1bfe0:	ldr	r0, [r0, #36]	; 0x24
   1bfe4:	ldr	r1, [fp, #-8]
   1bfe8:	str	r0, [r1, #32]
   1bfec:	b	1bff0 <__assert_fail@plt+0xa89c>
   1bff0:	b	1bff4 <__assert_fail@plt+0xa8a0>
   1bff4:	movw	r0, #0
   1bff8:	str	r0, [fp, #-4]
   1bffc:	ldr	r0, [fp, #-4]
   1c000:	mov	sp, fp
   1c004:	pop	{fp, pc}
   1c008:	push	{fp, lr}
   1c00c:	mov	fp, sp
   1c010:	sub	sp, sp, #16
   1c014:	str	r0, [fp, #-4]
   1c018:	ldr	r0, [fp, #-4]
   1c01c:	ldr	r0, [r0]
   1c020:	str	r0, [sp, #8]
   1c024:	ldr	r0, [sp, #8]
   1c028:	ldr	r0, [r0, #56]	; 0x38
   1c02c:	str	r0, [sp, #4]
   1c030:	ldr	r0, [sp, #4]
   1c034:	movw	r1, #0
   1c038:	cmp	r0, r1
   1c03c:	beq	1c060 <__assert_fail@plt+0xa90c>
   1c040:	ldr	r0, [sp, #4]
   1c044:	ldr	r0, [r0]
   1c048:	str	r0, [sp]
   1c04c:	ldr	r0, [sp, #4]
   1c050:	bl	15f68 <__assert_fail@plt+0x4814>
   1c054:	ldr	r0, [sp]
   1c058:	str	r0, [sp, #4]
   1c05c:	b	1c030 <__assert_fail@plt+0xa8dc>
   1c060:	ldr	r0, [sp, #8]
   1c064:	movw	r1, #0
   1c068:	str	r1, [r0, #56]	; 0x38
   1c06c:	ldr	r0, [sp, #8]
   1c070:	movw	r2, #31
   1c074:	str	r2, [r0, #64]	; 0x40
   1c078:	ldr	r0, [sp, #8]
   1c07c:	str	r1, [r0, #52]	; 0x34
   1c080:	ldr	r0, [sp, #8]
   1c084:	ldr	r0, [r0, #16]
   1c088:	bl	15f68 <__assert_fail@plt+0x4814>
   1c08c:	ldr	r0, [sp, #8]
   1c090:	movw	r1, #0
   1c094:	str	r1, [r0, #16]
   1c098:	mov	sp, fp
   1c09c:	pop	{fp, pc}
   1c0a0:	push	{fp, lr}
   1c0a4:	mov	fp, sp
   1c0a8:	sub	sp, sp, #8
   1c0ac:	str	r0, [sp, #4]
   1c0b0:	ldr	r0, [sp, #4]
   1c0b4:	ldr	r0, [r0, #8]
   1c0b8:	bl	15f68 <__assert_fail@plt+0x4814>
   1c0bc:	ldr	r0, [sp, #4]
   1c0c0:	ldr	r0, [r0, #12]
   1c0c4:	bl	15f68 <__assert_fail@plt+0x4814>
   1c0c8:	ldr	r0, [sp, #4]
   1c0cc:	ldrsb	r0, [r0, #75]	; 0x4b
   1c0d0:	cmp	r0, #0
   1c0d4:	beq	1c0e4 <__assert_fail@plt+0xa990>
   1c0d8:	ldr	r0, [sp, #4]
   1c0dc:	ldr	r0, [r0, #4]
   1c0e0:	bl	15f68 <__assert_fail@plt+0x4814>
   1c0e4:	mov	sp, fp
   1c0e8:	pop	{fp, pc}
   1c0ec:	push	{fp, lr}
   1c0f0:	mov	fp, sp
   1c0f4:	sub	sp, sp, #72	; 0x48
   1c0f8:	str	r0, [fp, #-8]
   1c0fc:	str	r1, [fp, #-12]
   1c100:	str	r2, [fp, #-16]
   1c104:	str	r3, [fp, #-20]	; 0xffffffec
   1c108:	ldr	r0, [fp, #-12]
   1c10c:	ldr	r0, [r0]
   1c110:	str	r0, [fp, #-24]	; 0xffffffe8
   1c114:	ldr	r0, [fp, #-16]
   1c118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c11c:	str	r0, [r1, #128]	; 0x80
   1c120:	ldr	r1, [fp, #-8]
   1c124:	ldr	r0, [fp, #-16]
   1c128:	orr	r2, r0, #8388608	; 0x800000
   1c12c:	add	r0, sp, #28
   1c130:	bl	1decc <__assert_fail@plt+0xc778>
   1c134:	ldr	r0, [fp, #-8]
   1c138:	ldr	r1, [fp, #-12]
   1c13c:	ldr	r3, [fp, #-16]
   1c140:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c144:	add	ip, sp, #28
   1c148:	str	r2, [sp, #24]
   1c14c:	mov	r2, ip
   1c150:	movw	ip, #0
   1c154:	str	ip, [sp]
   1c158:	ldr	ip, [sp, #24]
   1c15c:	str	ip, [sp, #4]
   1c160:	bl	1df0c <__assert_fail@plt+0xc7b8>
   1c164:	str	r0, [fp, #-28]	; 0xffffffe4
   1c168:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c16c:	ldr	r0, [r0]
   1c170:	cmp	r0, #0
   1c174:	movw	r0, #0
   1c178:	str	r0, [sp, #20]
   1c17c:	beq	1c198 <__assert_fail@plt+0xaa44>
   1c180:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c184:	movw	r1, #0
   1c188:	cmp	r0, r1
   1c18c:	movw	r0, #0
   1c190:	moveq	r0, #1
   1c194:	str	r0, [sp, #20]
   1c198:	ldr	r0, [sp, #20]
   1c19c:	tst	r0, #1
   1c1a0:	beq	1c1b0 <__assert_fail@plt+0xaa5c>
   1c1a4:	movw	r0, #0
   1c1a8:	str	r0, [fp, #-4]
   1c1ac:	b	1c25c <__assert_fail@plt+0xab08>
   1c1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1b4:	movw	r1, #0
   1c1b8:	str	r1, [sp, #16]
   1c1bc:	ldr	r2, [sp, #16]
   1c1c0:	movw	r3, #2
   1c1c4:	bl	1e160 <__assert_fail@plt+0xca0c>
   1c1c8:	str	r0, [fp, #-32]	; 0xffffffe0
   1c1cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c1d0:	movw	r1, #0
   1c1d4:	cmp	r0, r1
   1c1d8:	beq	1c1f8 <__assert_fail@plt+0xaaa4>
   1c1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c1e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c1e8:	movw	r3, #16
   1c1ec:	bl	1e160 <__assert_fail@plt+0xca0c>
   1c1f0:	str	r0, [sp, #36]	; 0x24
   1c1f4:	b	1c200 <__assert_fail@plt+0xaaac>
   1c1f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c1fc:	str	r0, [sp, #36]	; 0x24
   1c200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c204:	movw	r1, #0
   1c208:	cmp	r0, r1
   1c20c:	movw	r0, #1
   1c210:	str	r0, [sp, #12]
   1c214:	beq	1c230 <__assert_fail@plt+0xaadc>
   1c218:	ldr	r0, [sp, #36]	; 0x24
   1c21c:	movw	r1, #0
   1c220:	cmp	r0, r1
   1c224:	movw	r0, #0
   1c228:	moveq	r0, #1
   1c22c:	str	r0, [sp, #12]
   1c230:	ldr	r0, [sp, #12]
   1c234:	tst	r0, #1
   1c238:	beq	1c254 <__assert_fail@plt+0xab00>
   1c23c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c240:	movw	r1, #12
   1c244:	str	r1, [r0]
   1c248:	movw	r0, #0
   1c24c:	str	r0, [fp, #-4]
   1c250:	b	1c25c <__assert_fail@plt+0xab08>
   1c254:	ldr	r0, [sp, #36]	; 0x24
   1c258:	str	r0, [fp, #-4]
   1c25c:	ldr	r0, [fp, #-4]
   1c260:	mov	sp, fp
   1c264:	pop	{fp, pc}
   1c268:	push	{fp, lr}
   1c26c:	mov	fp, sp
   1c270:	sub	sp, sp, #48	; 0x30
   1c274:	str	r0, [fp, #-8]
   1c278:	ldr	r0, [fp, #-8]
   1c27c:	ldr	r0, [r0]
   1c280:	str	r0, [fp, #-12]
   1c284:	ldr	r0, [fp, #-12]
   1c288:	ldr	r0, [r0, #4]
   1c28c:	lsl	r0, r0, #2
   1c290:	bl	3816c <__assert_fail@plt+0x26a18>
   1c294:	ldr	r1, [fp, #-12]
   1c298:	str	r0, [r1, #12]
   1c29c:	ldr	r0, [fp, #-12]
   1c2a0:	ldr	r0, [r0, #4]
   1c2a4:	lsl	r0, r0, #2
   1c2a8:	bl	3816c <__assert_fail@plt+0x26a18>
   1c2ac:	ldr	r1, [fp, #-12]
   1c2b0:	str	r0, [r1, #16]
   1c2b4:	ldr	r0, [fp, #-12]
   1c2b8:	ldr	r0, [r0, #4]
   1c2bc:	movw	r1, #12
   1c2c0:	mul	r0, r0, r1
   1c2c4:	bl	3816c <__assert_fail@plt+0x26a18>
   1c2c8:	ldr	r1, [fp, #-12]
   1c2cc:	str	r0, [r1, #20]
   1c2d0:	ldr	r0, [fp, #-12]
   1c2d4:	ldr	r0, [r0, #4]
   1c2d8:	movw	r1, #12
   1c2dc:	mul	r0, r0, r1
   1c2e0:	bl	3816c <__assert_fail@plt+0x26a18>
   1c2e4:	ldr	r1, [fp, #-12]
   1c2e8:	str	r0, [r1, #24]
   1c2ec:	ldr	r0, [fp, #-12]
   1c2f0:	ldr	r0, [r0, #12]
   1c2f4:	movw	r1, #0
   1c2f8:	cmp	r0, r1
   1c2fc:	movw	r0, #1
   1c300:	str	r0, [sp, #24]
   1c304:	beq	1c35c <__assert_fail@plt+0xac08>
   1c308:	ldr	r0, [fp, #-12]
   1c30c:	ldr	r0, [r0, #16]
   1c310:	movw	r1, #0
   1c314:	cmp	r0, r1
   1c318:	movw	r0, #1
   1c31c:	str	r0, [sp, #24]
   1c320:	beq	1c35c <__assert_fail@plt+0xac08>
   1c324:	ldr	r0, [fp, #-12]
   1c328:	ldr	r0, [r0, #20]
   1c32c:	movw	r1, #0
   1c330:	cmp	r0, r1
   1c334:	movw	r0, #1
   1c338:	str	r0, [sp, #24]
   1c33c:	beq	1c35c <__assert_fail@plt+0xac08>
   1c340:	ldr	r0, [fp, #-12]
   1c344:	ldr	r0, [r0, #24]
   1c348:	movw	r1, #0
   1c34c:	cmp	r0, r1
   1c350:	movw	r0, #0
   1c354:	moveq	r0, #1
   1c358:	str	r0, [sp, #24]
   1c35c:	ldr	r0, [sp, #24]
   1c360:	tst	r0, #1
   1c364:	beq	1c374 <__assert_fail@plt+0xac20>
   1c368:	movw	r0, #12
   1c36c:	str	r0, [fp, #-4]
   1c370:	b	1c630 <__assert_fail@plt+0xaedc>
   1c374:	ldr	r0, [fp, #-8]
   1c378:	ldr	r0, [r0, #24]
   1c37c:	lsl	r0, r0, #2
   1c380:	bl	3816c <__assert_fail@plt+0x26a18>
   1c384:	ldr	r1, [fp, #-12]
   1c388:	str	r0, [r1, #132]	; 0x84
   1c38c:	ldr	r0, [fp, #-12]
   1c390:	ldr	r0, [r0, #132]	; 0x84
   1c394:	movw	r1, #0
   1c398:	cmp	r0, r1
   1c39c:	beq	1c48c <__assert_fail@plt+0xad38>
   1c3a0:	movw	r0, #0
   1c3a4:	str	r0, [fp, #-20]	; 0xffffffec
   1c3a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c3ac:	ldr	r1, [fp, #-8]
   1c3b0:	ldr	r1, [r1, #24]
   1c3b4:	cmp	r0, r1
   1c3b8:	bcs	1c3e4 <__assert_fail@plt+0xac90>
   1c3bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c3c0:	mov	r1, r0
   1c3c4:	ldr	r2, [fp, #-12]
   1c3c8:	ldr	r2, [r2, #132]	; 0x84
   1c3cc:	add	r0, r2, r0, lsl #2
   1c3d0:	str	r1, [r0]
   1c3d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c3d8:	add	r0, r0, #1
   1c3dc:	str	r0, [fp, #-20]	; 0xffffffec
   1c3e0:	b	1c3a8 <__assert_fail@plt+0xac54>
   1c3e4:	ldr	r0, [fp, #-12]
   1c3e8:	ldr	r0, [r0, #52]	; 0x34
   1c3ec:	ldr	r1, [fp, #-12]
   1c3f0:	movw	r2, #14836	; 0x39f4
   1c3f4:	movt	r2, #2
   1c3f8:	str	r1, [sp, #20]
   1c3fc:	mov	r1, r2
   1c400:	ldr	r2, [sp, #20]
   1c404:	bl	238d8 <__assert_fail@plt+0x12184>
   1c408:	movw	r1, #0
   1c40c:	str	r1, [fp, #-20]	; 0xffffffec
   1c410:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c414:	ldr	r1, [fp, #-8]
   1c418:	ldr	r1, [r1, #24]
   1c41c:	cmp	r0, r1
   1c420:	bcs	1c45c <__assert_fail@plt+0xad08>
   1c424:	ldr	r0, [fp, #-12]
   1c428:	ldr	r0, [r0, #132]	; 0x84
   1c42c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c430:	add	r0, r0, r1, lsl #2
   1c434:	ldr	r0, [r0]
   1c438:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c43c:	cmp	r0, r1
   1c440:	beq	1c448 <__assert_fail@plt+0xacf4>
   1c444:	b	1c45c <__assert_fail@plt+0xad08>
   1c448:	b	1c44c <__assert_fail@plt+0xacf8>
   1c44c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c450:	add	r0, r0, #1
   1c454:	str	r0, [fp, #-20]	; 0xffffffec
   1c458:	b	1c410 <__assert_fail@plt+0xacbc>
   1c45c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c460:	ldr	r1, [fp, #-8]
   1c464:	ldr	r1, [r1, #24]
   1c468:	cmp	r0, r1
   1c46c:	bne	1c488 <__assert_fail@plt+0xad34>
   1c470:	ldr	r0, [fp, #-12]
   1c474:	ldr	r0, [r0, #132]	; 0x84
   1c478:	bl	15f68 <__assert_fail@plt+0x4814>
   1c47c:	ldr	r0, [fp, #-12]
   1c480:	movw	r1, #0
   1c484:	str	r1, [r0, #132]	; 0x84
   1c488:	b	1c48c <__assert_fail@plt+0xad38>
   1c48c:	ldr	r0, [fp, #-12]
   1c490:	ldr	r0, [r0, #52]	; 0x34
   1c494:	ldr	r1, [fp, #-8]
   1c498:	movw	r2, #15208	; 0x3b68
   1c49c:	movt	r2, #2
   1c4a0:	str	r1, [sp, #16]
   1c4a4:	mov	r1, r2
   1c4a8:	ldr	r2, [sp, #16]
   1c4ac:	bl	1f550 <__assert_fail@plt+0xddfc>
   1c4b0:	str	r0, [fp, #-16]
   1c4b4:	ldr	r0, [fp, #-16]
   1c4b8:	cmp	r0, #0
   1c4bc:	beq	1c4cc <__assert_fail@plt+0xad78>
   1c4c0:	ldr	r0, [fp, #-16]
   1c4c4:	str	r0, [fp, #-4]
   1c4c8:	b	1c630 <__assert_fail@plt+0xaedc>
   1c4cc:	ldr	r0, [fp, #-12]
   1c4d0:	ldr	r0, [r0, #52]	; 0x34
   1c4d4:	ldr	r1, [fp, #-12]
   1c4d8:	movw	r2, #15476	; 0x3c74
   1c4dc:	movt	r2, #2
   1c4e0:	str	r1, [sp, #12]
   1c4e4:	mov	r1, r2
   1c4e8:	ldr	r2, [sp, #12]
   1c4ec:	bl	1f550 <__assert_fail@plt+0xddfc>
   1c4f0:	str	r0, [fp, #-16]
   1c4f4:	ldr	r0, [fp, #-16]
   1c4f8:	cmp	r0, #0
   1c4fc:	beq	1c50c <__assert_fail@plt+0xadb8>
   1c500:	ldr	r0, [fp, #-16]
   1c504:	str	r0, [fp, #-4]
   1c508:	b	1c630 <__assert_fail@plt+0xaedc>
   1c50c:	ldr	r0, [fp, #-12]
   1c510:	ldr	r0, [r0, #52]	; 0x34
   1c514:	ldr	r1, [fp, #-12]
   1c518:	movw	r2, #15748	; 0x3d84
   1c51c:	movt	r2, #2
   1c520:	str	r1, [sp, #8]
   1c524:	mov	r1, r2
   1c528:	ldr	r2, [sp, #8]
   1c52c:	bl	238d8 <__assert_fail@plt+0x12184>
   1c530:	ldr	r1, [fp, #-12]
   1c534:	ldr	r1, [r1, #52]	; 0x34
   1c538:	ldr	r2, [fp, #-12]
   1c53c:	str	r0, [sp, #4]
   1c540:	mov	r0, r1
   1c544:	movw	r1, #15968	; 0x3e60
   1c548:	movt	r1, #2
   1c54c:	bl	238d8 <__assert_fail@plt+0x12184>
   1c550:	str	r0, [fp, #-16]
   1c554:	ldr	r0, [fp, #-16]
   1c558:	cmp	r0, #0
   1c55c:	beq	1c56c <__assert_fail@plt+0xae18>
   1c560:	ldr	r0, [fp, #-16]
   1c564:	str	r0, [fp, #-4]
   1c568:	b	1c630 <__assert_fail@plt+0xaedc>
   1c56c:	ldr	r0, [fp, #-12]
   1c570:	bl	240c8 <__assert_fail@plt+0x12974>
   1c574:	str	r0, [fp, #-16]
   1c578:	ldr	r0, [fp, #-16]
   1c57c:	cmp	r0, #0
   1c580:	beq	1c590 <__assert_fail@plt+0xae3c>
   1c584:	ldr	r0, [fp, #-16]
   1c588:	str	r0, [fp, #-4]
   1c58c:	b	1c630 <__assert_fail@plt+0xaedc>
   1c590:	ldr	r0, [fp, #-8]
   1c594:	ldrb	r0, [r0, #28]
   1c598:	ubfx	r0, r0, #4, #1
   1c59c:	and	r0, r0, #255	; 0xff
   1c5a0:	cmp	r0, #0
   1c5a4:	bne	1c5d0 <__assert_fail@plt+0xae7c>
   1c5a8:	ldr	r0, [fp, #-8]
   1c5ac:	ldr	r0, [r0, #24]
   1c5b0:	cmp	r0, #0
   1c5b4:	bls	1c5d0 <__assert_fail@plt+0xae7c>
   1c5b8:	ldr	r0, [fp, #-12]
   1c5bc:	ldrb	r0, [r0, #88]	; 0x58
   1c5c0:	and	r0, r0, #1
   1c5c4:	and	r0, r0, #255	; 0xff
   1c5c8:	cmp	r0, #0
   1c5cc:	bne	1c5e0 <__assert_fail@plt+0xae8c>
   1c5d0:	ldr	r0, [fp, #-12]
   1c5d4:	ldr	r0, [r0, #76]	; 0x4c
   1c5d8:	cmp	r0, #0
   1c5dc:	beq	1c628 <__assert_fail@plt+0xaed4>
   1c5e0:	ldr	r0, [fp, #-12]
   1c5e4:	ldr	r0, [r0, #8]
   1c5e8:	movw	r1, #12
   1c5ec:	mul	r0, r0, r1
   1c5f0:	bl	3816c <__assert_fail@plt+0x26a18>
   1c5f4:	ldr	r1, [fp, #-12]
   1c5f8:	str	r0, [r1, #28]
   1c5fc:	ldr	r0, [fp, #-12]
   1c600:	ldr	r0, [r0, #28]
   1c604:	movw	r1, #0
   1c608:	cmp	r0, r1
   1c60c:	bne	1c61c <__assert_fail@plt+0xaec8>
   1c610:	movw	r0, #12
   1c614:	str	r0, [fp, #-4]
   1c618:	b	1c630 <__assert_fail@plt+0xaedc>
   1c61c:	ldr	r0, [fp, #-12]
   1c620:	bl	24210 <__assert_fail@plt+0x12abc>
   1c624:	str	r0, [fp, #-16]
   1c628:	ldr	r0, [fp, #-16]
   1c62c:	str	r0, [fp, #-4]
   1c630:	ldr	r0, [fp, #-4]
   1c634:	mov	sp, fp
   1c638:	pop	{fp, pc}
   1c63c:	push	{fp, lr}
   1c640:	mov	fp, sp
   1c644:	sub	sp, sp, #32
   1c648:	str	r0, [fp, #-4]
   1c64c:	movw	r0, #0
   1c650:	strb	r0, [fp, #-13]
   1c654:	strb	r0, [fp, #-14]
   1c658:	movw	r0, #0
   1c65c:	str	r0, [fp, #-8]
   1c660:	ldr	r0, [fp, #-8]
   1c664:	ldr	r1, [fp, #-4]
   1c668:	ldr	r1, [r1, #8]
   1c66c:	cmp	r0, r1
   1c670:	bcs	1c7f0 <__assert_fail@plt+0xb09c>
   1c674:	ldr	r0, [fp, #-4]
   1c678:	ldr	r0, [r0]
   1c67c:	ldr	r1, [fp, #-8]
   1c680:	add	r0, r0, r1, lsl #3
   1c684:	ldrb	r0, [r0, #4]
   1c688:	sub	r0, r0, #1
   1c68c:	cmp	r0, #11
   1c690:	str	r0, [sp, #8]
   1c694:	bhi	1c7d8 <__assert_fail@plt+0xb084>
   1c698:	add	r0, pc, #8
   1c69c:	ldr	r1, [sp, #8]
   1c6a0:	ldr	r0, [r0, r1, lsl #2]
   1c6a4:	mov	pc, r0
   1c6a8:	ldrdeq	ip, [r1], -r8
   1c6ac:	andeq	ip, r1, r8, ror #14
   1c6b0:	andeq	ip, r1, r0, ror r7
   1c6b4:	andeq	ip, r1, r8, ror #14
   1c6b8:	andeq	ip, r1, ip, asr r7
   1c6bc:	andeq	ip, r1, ip, ror #14
   1c6c0:	ldrdeq	ip, [r1], -r8
   1c6c4:	andeq	ip, r1, r8, ror #14
   1c6c8:	andeq	ip, r1, r8, ror #14
   1c6cc:	andeq	ip, r1, r8, ror #14
   1c6d0:	andeq	ip, r1, r8, ror #14
   1c6d4:	andeq	ip, r1, r0, lsl #14
   1c6d8:	ldr	r0, [fp, #-4]
   1c6dc:	ldr	r0, [r0]
   1c6e0:	ldr	r1, [fp, #-8]
   1c6e4:	add	r0, r0, r1, lsl #3
   1c6e8:	ldrb	r0, [r0]
   1c6ec:	cmp	r0, #128	; 0x80
   1c6f0:	blt	1c6fc <__assert_fail@plt+0xafa8>
   1c6f4:	movw	r0, #1
   1c6f8:	strb	r0, [fp, #-13]
   1c6fc:	b	1c7dc <__assert_fail@plt+0xb088>
   1c700:	ldr	r0, [fp, #-4]
   1c704:	ldr	r0, [r0]
   1c708:	ldr	r1, [fp, #-8]
   1c70c:	ldr	r0, [r0, r1, lsl #3]
   1c710:	cmp	r0, #16
   1c714:	str	r0, [sp, #4]
   1c718:	beq	1c750 <__assert_fail@plt+0xaffc>
   1c71c:	b	1c720 <__assert_fail@plt+0xafcc>
   1c720:	ldr	r0, [sp, #4]
   1c724:	cmp	r0, #32
   1c728:	beq	1c750 <__assert_fail@plt+0xaffc>
   1c72c:	b	1c730 <__assert_fail@plt+0xafdc>
   1c730:	ldr	r0, [sp, #4]
   1c734:	cmp	r0, #64	; 0x40
   1c738:	beq	1c750 <__assert_fail@plt+0xaffc>
   1c73c:	b	1c740 <__assert_fail@plt+0xafec>
   1c740:	ldr	r0, [sp, #4]
   1c744:	cmp	r0, #128	; 0x80
   1c748:	bne	1c754 <__assert_fail@plt+0xb000>
   1c74c:	b	1c750 <__assert_fail@plt+0xaffc>
   1c750:	b	1c758 <__assert_fail@plt+0xb004>
   1c754:	b	1c940 <__assert_fail@plt+0xb1ec>
   1c758:	b	1c7dc <__assert_fail@plt+0xb088>
   1c75c:	movw	r0, #1
   1c760:	strb	r0, [fp, #-14]
   1c764:	b	1c7dc <__assert_fail@plt+0xb088>
   1c768:	b	1c7dc <__assert_fail@plt+0xb088>
   1c76c:	b	1c940 <__assert_fail@plt+0xb1ec>
   1c770:	movw	r0, #0
   1c774:	str	r0, [sp, #12]
   1c778:	movw	r0, #4
   1c77c:	str	r0, [fp, #-12]
   1c780:	ldr	r0, [fp, #-12]
   1c784:	cmp	r0, #8
   1c788:	bge	1c7d4 <__assert_fail@plt+0xb080>
   1c78c:	ldr	r0, [fp, #-4]
   1c790:	ldr	r0, [r0]
   1c794:	ldr	r1, [fp, #-8]
   1c798:	ldr	r0, [r0, r1, lsl #3]
   1c79c:	ldr	r1, [fp, #-12]
   1c7a0:	add	r0, r0, r1, lsl #2
   1c7a4:	ldr	r0, [r0]
   1c7a8:	ldr	r1, [sp, #12]
   1c7ac:	lsr	r0, r0, r1
   1c7b0:	cmp	r0, #0
   1c7b4:	beq	1c7bc <__assert_fail@plt+0xb068>
   1c7b8:	b	1c940 <__assert_fail@plt+0xb1ec>
   1c7bc:	movw	r0, #0
   1c7c0:	str	r0, [sp, #12]
   1c7c4:	ldr	r0, [fp, #-12]
   1c7c8:	add	r0, r0, #1
   1c7cc:	str	r0, [fp, #-12]
   1c7d0:	b	1c780 <__assert_fail@plt+0xb02c>
   1c7d4:	b	1c7dc <__assert_fail@plt+0xb088>
   1c7d8:	bl	1173c <abort@plt>
   1c7dc:	b	1c7e0 <__assert_fail@plt+0xb08c>
   1c7e0:	ldr	r0, [fp, #-8]
   1c7e4:	add	r0, r0, #1
   1c7e8:	str	r0, [fp, #-8]
   1c7ec:	b	1c660 <__assert_fail@plt+0xaf0c>
   1c7f0:	ldrb	r0, [fp, #-13]
   1c7f4:	tst	r0, #1
   1c7f8:	bne	1c808 <__assert_fail@plt+0xb0b4>
   1c7fc:	ldrb	r0, [fp, #-14]
   1c800:	tst	r0, #1
   1c804:	beq	1c8e4 <__assert_fail@plt+0xb190>
   1c808:	movw	r0, #0
   1c80c:	str	r0, [fp, #-8]
   1c810:	ldr	r0, [fp, #-8]
   1c814:	ldr	r1, [fp, #-4]
   1c818:	ldr	r1, [r1, #8]
   1c81c:	cmp	r0, r1
   1c820:	bcs	1c8e0 <__assert_fail@plt+0xb18c>
   1c824:	ldr	r0, [fp, #-4]
   1c828:	ldr	r0, [r0]
   1c82c:	ldr	r1, [fp, #-8]
   1c830:	add	r0, r0, r1, lsl #3
   1c834:	ldr	r0, [r0, #4]
   1c838:	and	r0, r0, #255	; 0xff
   1c83c:	cmp	r0, #1
   1c840:	bne	1c884 <__assert_fail@plt+0xb130>
   1c844:	ldr	r0, [fp, #-4]
   1c848:	ldr	r0, [r0]
   1c84c:	ldr	r1, [fp, #-8]
   1c850:	add	r0, r0, r1, lsl #3
   1c854:	ldrb	r0, [r0]
   1c858:	cmp	r0, #128	; 0x80
   1c85c:	blt	1c884 <__assert_fail@plt+0xb130>
   1c860:	ldr	r0, [fp, #-4]
   1c864:	ldr	r0, [r0]
   1c868:	ldr	r1, [fp, #-8]
   1c86c:	add	r0, r0, r1, lsl #3
   1c870:	ldr	r1, [r0, #4]
   1c874:	mvn	r2, #2097152	; 0x200000
   1c878:	and	r1, r1, r2
   1c87c:	str	r1, [r0, #4]
   1c880:	b	1c8cc <__assert_fail@plt+0xb178>
   1c884:	ldr	r0, [fp, #-4]
   1c888:	ldr	r0, [r0]
   1c88c:	ldr	r1, [fp, #-8]
   1c890:	add	r0, r0, r1, lsl #3
   1c894:	ldr	r0, [r0, #4]
   1c898:	and	r0, r0, #255	; 0xff
   1c89c:	cmp	r0, #5
   1c8a0:	bne	1c8c8 <__assert_fail@plt+0xb174>
   1c8a4:	ldr	r0, [fp, #-4]
   1c8a8:	ldr	r0, [r0]
   1c8ac:	ldr	r1, [fp, #-8]
   1c8b0:	add	r0, r0, r1, lsl #3
   1c8b4:	ldr	r1, [r0, #4]
   1c8b8:	mvn	r2, #255	; 0xff
   1c8bc:	and	r1, r1, r2
   1c8c0:	orr	r1, r1, #7
   1c8c4:	str	r1, [r0, #4]
   1c8c8:	b	1c8cc <__assert_fail@plt+0xb178>
   1c8cc:	b	1c8d0 <__assert_fail@plt+0xb17c>
   1c8d0:	ldr	r0, [fp, #-8]
   1c8d4:	add	r0, r0, #1
   1c8d8:	str	r0, [fp, #-8]
   1c8dc:	b	1c810 <__assert_fail@plt+0xb0bc>
   1c8e0:	b	1c8e4 <__assert_fail@plt+0xb190>
   1c8e4:	ldr	r0, [fp, #-4]
   1c8e8:	mov	r1, #1
   1c8ec:	str	r1, [r0, #92]	; 0x5c
   1c8f0:	ldr	r0, [fp, #-4]
   1c8f4:	ldrb	r1, [r0, #88]	; 0x58
   1c8f8:	bic	r1, r1, #4
   1c8fc:	strb	r1, [r0, #88]	; 0x58
   1c900:	ldr	r0, [fp, #-4]
   1c904:	ldr	r0, [r0, #76]	; 0x4c
   1c908:	cmp	r0, #0
   1c90c:	movw	r0, #1
   1c910:	str	r0, [sp]
   1c914:	bgt	1c920 <__assert_fail@plt+0xb1cc>
   1c918:	ldrb	r0, [fp, #-14]
   1c91c:	str	r0, [sp]
   1c920:	ldr	r0, [sp]
   1c924:	ldr	r1, [fp, #-4]
   1c928:	and	r0, r0, #1
   1c92c:	ldrb	r2, [r1, #88]	; 0x58
   1c930:	lsl	r0, r0, #1
   1c934:	bic	r2, r2, #2
   1c938:	orr	r0, r2, r0
   1c93c:	strb	r0, [r1, #88]	; 0x58
   1c940:	mov	sp, fp
   1c944:	pop	{fp, pc}
   1c948:	push	{fp, lr}
   1c94c:	mov	fp, sp
   1c950:	sub	sp, sp, #64	; 0x40
   1c954:	str	r0, [fp, #-8]
   1c958:	ldr	r0, [fp, #-8]
   1c95c:	ldr	r0, [r0, #52]	; 0x34
   1c960:	ldr	r0, [r0, #12]
   1c964:	ldr	r0, [r0, #28]
   1c968:	str	r0, [fp, #-12]
   1c96c:	ldr	r0, [fp, #-12]
   1c970:	ldr	r1, [fp, #-8]
   1c974:	str	r0, [r1, #72]	; 0x48
   1c978:	ldr	r0, [fp, #-8]
   1c97c:	ldr	r0, [r0, #24]
   1c980:	ldr	r1, [fp, #-12]
   1c984:	movw	r2, #12
   1c988:	mul	r1, r1, r2
   1c98c:	add	r1, r0, r1
   1c990:	add	r0, sp, #32
   1c994:	bl	25c60 <__assert_fail@plt+0x1450c>
   1c998:	str	r0, [fp, #-20]	; 0xffffffec
   1c99c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c9a0:	cmp	r0, #0
   1c9a4:	beq	1c9b4 <__assert_fail@plt+0xb260>
   1c9a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c9ac:	str	r0, [fp, #-4]
   1c9b0:	b	1cca0 <__assert_fail@plt+0xb54c>
   1c9b4:	ldr	r0, [fp, #-8]
   1c9b8:	ldr	r0, [r0, #76]	; 0x4c
   1c9bc:	cmp	r0, #0
   1c9c0:	ble	1cb54 <__assert_fail@plt+0xb400>
   1c9c4:	movw	r0, #0
   1c9c8:	str	r0, [fp, #-16]
   1c9cc:	ldr	r0, [fp, #-16]
   1c9d0:	ldr	r1, [sp, #36]	; 0x24
   1c9d4:	cmp	r0, r1
   1c9d8:	bge	1cb50 <__assert_fail@plt+0xb3fc>
   1c9dc:	ldr	r0, [sp, #40]	; 0x28
   1c9e0:	ldr	r1, [fp, #-16]
   1c9e4:	ldr	r0, [r0, r1, lsl #2]
   1c9e8:	str	r0, [sp, #28]
   1c9ec:	ldr	r0, [fp, #-8]
   1c9f0:	ldr	r0, [r0]
   1c9f4:	ldr	r1, [sp, #28]
   1c9f8:	add	r0, r0, r1, lsl #3
   1c9fc:	ldr	r0, [r0, #4]
   1ca00:	and	r0, r0, #255	; 0xff
   1ca04:	str	r0, [sp, #24]
   1ca08:	ldr	r0, [sp, #24]
   1ca0c:	cmp	r0, #4
   1ca10:	beq	1ca18 <__assert_fail@plt+0xb2c4>
   1ca14:	b	1cb40 <__assert_fail@plt+0xb3ec>
   1ca18:	movw	r0, #0
   1ca1c:	str	r0, [sp, #20]
   1ca20:	ldr	r0, [sp, #20]
   1ca24:	ldr	r1, [sp, #36]	; 0x24
   1ca28:	cmp	r0, r1
   1ca2c:	bge	1ca9c <__assert_fail@plt+0xb348>
   1ca30:	ldr	r0, [fp, #-8]
   1ca34:	ldr	r0, [r0]
   1ca38:	ldr	r1, [sp, #40]	; 0x28
   1ca3c:	ldr	r2, [sp, #20]
   1ca40:	ldr	r1, [r1, r2, lsl #2]
   1ca44:	add	r0, r0, r1, lsl #3
   1ca48:	str	r0, [sp, #16]
   1ca4c:	ldr	r0, [sp, #16]
   1ca50:	ldr	r0, [r0, #4]
   1ca54:	and	r0, r0, #255	; 0xff
   1ca58:	cmp	r0, #9
   1ca5c:	bne	1ca88 <__assert_fail@plt+0xb334>
   1ca60:	ldr	r0, [sp, #16]
   1ca64:	ldr	r0, [r0]
   1ca68:	ldr	r1, [fp, #-8]
   1ca6c:	ldr	r1, [r1]
   1ca70:	ldr	r2, [sp, #28]
   1ca74:	add	r1, r1, r2, lsl #3
   1ca78:	ldr	r1, [r1]
   1ca7c:	cmp	r0, r1
   1ca80:	bne	1ca88 <__assert_fail@plt+0xb334>
   1ca84:	b	1ca9c <__assert_fail@plt+0xb348>
   1ca88:	b	1ca8c <__assert_fail@plt+0xb338>
   1ca8c:	ldr	r0, [sp, #20]
   1ca90:	add	r0, r0, #1
   1ca94:	str	r0, [sp, #20]
   1ca98:	b	1ca20 <__assert_fail@plt+0xb2cc>
   1ca9c:	ldr	r0, [sp, #20]
   1caa0:	ldr	r1, [sp, #36]	; 0x24
   1caa4:	cmp	r0, r1
   1caa8:	bne	1cab0 <__assert_fail@plt+0xb35c>
   1caac:	b	1cb40 <__assert_fail@plt+0xb3ec>
   1cab0:	ldr	r0, [sp, #24]
   1cab4:	cmp	r0, #4
   1cab8:	bne	1cb3c <__assert_fail@plt+0xb3e8>
   1cabc:	ldr	r0, [fp, #-8]
   1cac0:	ldr	r0, [r0, #20]
   1cac4:	ldr	r1, [sp, #28]
   1cac8:	movw	r2, #12
   1cacc:	mul	r1, r1, r2
   1cad0:	add	r0, r0, r1
   1cad4:	ldr	r0, [r0, #8]
   1cad8:	ldr	r0, [r0]
   1cadc:	str	r0, [sp, #12]
   1cae0:	ldr	r1, [sp, #12]
   1cae4:	add	r0, sp, #32
   1cae8:	bl	25d34 <__assert_fail@plt+0x145e0>
   1caec:	cmp	r0, #0
   1caf0:	bne	1cb38 <__assert_fail@plt+0xb3e4>
   1caf4:	ldr	r0, [fp, #-8]
   1caf8:	ldr	r0, [r0, #24]
   1cafc:	ldr	r1, [sp, #12]
   1cb00:	movw	r2, #12
   1cb04:	mul	r1, r1, r2
   1cb08:	add	r1, r0, r1
   1cb0c:	add	r0, sp, #32
   1cb10:	bl	25388 <__assert_fail@plt+0x13c34>
   1cb14:	str	r0, [sp, #8]
   1cb18:	ldr	r0, [sp, #8]
   1cb1c:	cmp	r0, #0
   1cb20:	beq	1cb30 <__assert_fail@plt+0xb3dc>
   1cb24:	ldr	r0, [sp, #8]
   1cb28:	str	r0, [fp, #-4]
   1cb2c:	b	1cca0 <__assert_fail@plt+0xb54c>
   1cb30:	movw	r0, #0
   1cb34:	str	r0, [fp, #-16]
   1cb38:	b	1cb3c <__assert_fail@plt+0xb3e8>
   1cb3c:	b	1cb40 <__assert_fail@plt+0xb3ec>
   1cb40:	ldr	r0, [fp, #-16]
   1cb44:	add	r0, r0, #1
   1cb48:	str	r0, [fp, #-16]
   1cb4c:	b	1c9cc <__assert_fail@plt+0xb278>
   1cb50:	b	1cb54 <__assert_fail@plt+0xb400>
   1cb54:	ldr	r1, [fp, #-8]
   1cb58:	sub	r0, fp, #20
   1cb5c:	add	r2, sp, #32
   1cb60:	movw	r3, #0
   1cb64:	bl	25e24 <__assert_fail@plt+0x146d0>
   1cb68:	ldr	r1, [fp, #-8]
   1cb6c:	str	r0, [r1, #36]	; 0x24
   1cb70:	ldr	r0, [fp, #-8]
   1cb74:	ldr	r0, [r0, #36]	; 0x24
   1cb78:	movw	r1, #0
   1cb7c:	cmp	r0, r1
   1cb80:	bne	1cb90 <__assert_fail@plt+0xb43c>
   1cb84:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cb88:	str	r0, [fp, #-4]
   1cb8c:	b	1cca0 <__assert_fail@plt+0xb54c>
   1cb90:	ldr	r0, [fp, #-8]
   1cb94:	ldr	r0, [r0, #36]	; 0x24
   1cb98:	ldrb	r0, [r0, #52]	; 0x34
   1cb9c:	lsr	r0, r0, #7
   1cba0:	and	r0, r0, #255	; 0xff
   1cba4:	cmp	r0, #0
   1cba8:	beq	1cc70 <__assert_fail@plt+0xb51c>
   1cbac:	ldr	r1, [fp, #-8]
   1cbb0:	sub	r0, fp, #20
   1cbb4:	add	r2, sp, #32
   1cbb8:	movw	r3, #1
   1cbbc:	bl	25e24 <__assert_fail@plt+0x146d0>
   1cbc0:	ldr	r1, [fp, #-8]
   1cbc4:	str	r0, [r1, #40]	; 0x28
   1cbc8:	ldr	r1, [fp, #-8]
   1cbcc:	sub	r0, fp, #20
   1cbd0:	add	r2, sp, #32
   1cbd4:	movw	r3, #2
   1cbd8:	bl	25e24 <__assert_fail@plt+0x146d0>
   1cbdc:	ldr	r1, [fp, #-8]
   1cbe0:	str	r0, [r1, #44]	; 0x2c
   1cbe4:	ldr	r1, [fp, #-8]
   1cbe8:	sub	r0, fp, #20
   1cbec:	add	r2, sp, #32
   1cbf0:	movw	r3, #6
   1cbf4:	bl	25e24 <__assert_fail@plt+0x146d0>
   1cbf8:	ldr	r1, [fp, #-8]
   1cbfc:	str	r0, [r1, #48]	; 0x30
   1cc00:	ldr	r0, [fp, #-8]
   1cc04:	ldr	r0, [r0, #40]	; 0x28
   1cc08:	movw	r1, #0
   1cc0c:	cmp	r0, r1
   1cc10:	movw	r0, #1
   1cc14:	str	r0, [sp, #4]
   1cc18:	beq	1cc54 <__assert_fail@plt+0xb500>
   1cc1c:	ldr	r0, [fp, #-8]
   1cc20:	ldr	r0, [r0, #44]	; 0x2c
   1cc24:	movw	r1, #0
   1cc28:	cmp	r0, r1
   1cc2c:	movw	r0, #1
   1cc30:	str	r0, [sp, #4]
   1cc34:	beq	1cc54 <__assert_fail@plt+0xb500>
   1cc38:	ldr	r0, [fp, #-8]
   1cc3c:	ldr	r0, [r0, #48]	; 0x30
   1cc40:	movw	r1, #0
   1cc44:	cmp	r0, r1
   1cc48:	movw	r0, #0
   1cc4c:	moveq	r0, #1
   1cc50:	str	r0, [sp, #4]
   1cc54:	ldr	r0, [sp, #4]
   1cc58:	tst	r0, #1
   1cc5c:	beq	1cc6c <__assert_fail@plt+0xb518>
   1cc60:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc64:	str	r0, [fp, #-4]
   1cc68:	b	1cca0 <__assert_fail@plt+0xb54c>
   1cc6c:	b	1cc90 <__assert_fail@plt+0xb53c>
   1cc70:	ldr	r0, [fp, #-8]
   1cc74:	ldr	r0, [r0, #36]	; 0x24
   1cc78:	ldr	r1, [fp, #-8]
   1cc7c:	str	r0, [r1, #48]	; 0x30
   1cc80:	ldr	r1, [fp, #-8]
   1cc84:	str	r0, [r1, #44]	; 0x2c
   1cc88:	ldr	r1, [fp, #-8]
   1cc8c:	str	r0, [r1, #40]	; 0x28
   1cc90:	ldr	r0, [sp, #40]	; 0x28
   1cc94:	bl	15f68 <__assert_fail@plt+0x4814>
   1cc98:	movw	r0, #0
   1cc9c:	str	r0, [fp, #-4]
   1cca0:	ldr	r0, [fp, #-4]
   1cca4:	mov	sp, fp
   1cca8:	pop	{fp, pc}
   1ccac:	push	{fp, lr}
   1ccb0:	mov	fp, sp
   1ccb4:	sub	sp, sp, #24
   1ccb8:	ldr	ip, [fp, #12]
   1ccbc:	ldr	lr, [fp, #8]
   1ccc0:	str	r0, [fp, #-4]
   1ccc4:	str	r1, [fp, #-8]
   1ccc8:	str	r2, [sp, #12]
   1cccc:	str	r3, [sp, #8]
   1ccd0:	and	r0, lr, #1
   1ccd4:	strb	r0, [sp, #7]
   1ccd8:	ldr	r0, [fp, #-4]
   1ccdc:	ldr	r1, [sp, #12]
   1cce0:	str	r0, [r1]
   1cce4:	ldr	r0, [fp, #-8]
   1cce8:	ldr	r1, [sp, #12]
   1ccec:	str	r0, [r1, #48]	; 0x30
   1ccf0:	ldr	r0, [fp, #-8]
   1ccf4:	ldr	r1, [sp, #12]
   1ccf8:	str	r0, [r1, #44]	; 0x2c
   1ccfc:	ldr	r0, [sp, #8]
   1cd00:	ldr	r1, [sp, #12]
   1cd04:	str	r0, [r1, #64]	; 0x40
   1cd08:	ldrb	r0, [sp, #7]
   1cd0c:	and	r0, r0, #1
   1cd10:	ldr	r1, [sp, #12]
   1cd14:	strb	r0, [r1, #72]	; 0x48
   1cd18:	ldr	r0, [sp, #8]
   1cd1c:	movw	r1, #0
   1cd20:	cmp	r0, r1
   1cd24:	movw	r0, #1
   1cd28:	str	r0, [sp]
   1cd2c:	bne	1cd38 <__assert_fail@plt+0xb5e4>
   1cd30:	ldrb	r0, [sp, #7]
   1cd34:	str	r0, [sp]
   1cd38:	ldr	r0, [sp]
   1cd3c:	and	r0, r0, #1
   1cd40:	ldr	r1, [sp, #12]
   1cd44:	strb	r0, [r1, #75]	; 0x4b
   1cd48:	ldr	r0, [fp, #12]
   1cd4c:	ldr	r0, [r0, #92]	; 0x5c
   1cd50:	ldr	r1, [sp, #12]
   1cd54:	str	r0, [r1, #80]	; 0x50
   1cd58:	ldr	r0, [fp, #12]
   1cd5c:	ldrb	r0, [r0, #88]	; 0x58
   1cd60:	ubfx	r0, r0, #2, #1
   1cd64:	ldr	r1, [sp, #12]
   1cd68:	strb	r0, [r1, #73]	; 0x49
   1cd6c:	ldr	r0, [fp, #12]
   1cd70:	ldrb	r0, [r0, #88]	; 0x58
   1cd74:	ubfx	r0, r0, #3, #1
   1cd78:	and	r0, r0, #255	; 0xff
   1cd7c:	ldr	r1, [sp, #12]
   1cd80:	strb	r0, [r1, #74]	; 0x4a
   1cd84:	ldr	r0, [sp, #12]
   1cd88:	ldr	r0, [r0, #48]	; 0x30
   1cd8c:	ldr	r1, [sp, #12]
   1cd90:	str	r0, [r1, #56]	; 0x38
   1cd94:	ldr	r0, [sp, #12]
   1cd98:	ldr	r0, [r0, #56]	; 0x38
   1cd9c:	ldr	r1, [sp, #12]
   1cda0:	str	r0, [r1, #52]	; 0x34
   1cda4:	mov	sp, fp
   1cda8:	pop	{fp, pc}
   1cdac:	push	{fp, lr}
   1cdb0:	mov	fp, sp
   1cdb4:	sub	sp, sp, #32
   1cdb8:	str	r0, [fp, #-8]
   1cdbc:	str	r1, [fp, #-12]
   1cdc0:	ldr	r0, [fp, #-8]
   1cdc4:	ldr	r0, [r0, #80]	; 0x50
   1cdc8:	cmp	r0, #1
   1cdcc:	ble	1ce8c <__assert_fail@plt+0xb738>
   1cdd0:	ldr	r0, [pc, #296]	; 1cf00 <__assert_fail@plt+0xb7ac>
   1cdd4:	movw	r1, #4
   1cdd8:	str	r1, [sp, #12]
   1cddc:	ldr	r1, [fp, #-12]
   1cde0:	cmp	r0, r1
   1cde4:	bcs	1cdf4 <__assert_fail@plt+0xb6a0>
   1cde8:	movw	r0, #12
   1cdec:	str	r0, [fp, #-4]
   1cdf0:	b	1cef4 <__assert_fail@plt+0xb7a0>
   1cdf4:	ldr	r0, [fp, #-8]
   1cdf8:	ldr	r0, [r0, #8]
   1cdfc:	ldr	r1, [fp, #-12]
   1ce00:	lsl	r1, r1, #2
   1ce04:	bl	381dc <__assert_fail@plt+0x26a88>
   1ce08:	str	r0, [sp, #16]
   1ce0c:	ldr	r0, [sp, #16]
   1ce10:	movw	r1, #0
   1ce14:	cmp	r0, r1
   1ce18:	bne	1ce28 <__assert_fail@plt+0xb6d4>
   1ce1c:	movw	r0, #12
   1ce20:	str	r0, [fp, #-4]
   1ce24:	b	1cef4 <__assert_fail@plt+0xb7a0>
   1ce28:	ldr	r0, [sp, #16]
   1ce2c:	ldr	r1, [fp, #-8]
   1ce30:	str	r0, [r1, #8]
   1ce34:	ldr	r0, [fp, #-8]
   1ce38:	ldr	r0, [r0, #12]
   1ce3c:	movw	r1, #0
   1ce40:	cmp	r0, r1
   1ce44:	beq	1ce88 <__assert_fail@plt+0xb734>
   1ce48:	ldr	r0, [fp, #-8]
   1ce4c:	ldr	r0, [r0, #12]
   1ce50:	ldr	r1, [fp, #-12]
   1ce54:	lsl	r1, r1, #2
   1ce58:	bl	381dc <__assert_fail@plt+0x26a88>
   1ce5c:	str	r0, [sp, #8]
   1ce60:	ldr	r0, [sp, #8]
   1ce64:	movw	r1, #0
   1ce68:	cmp	r0, r1
   1ce6c:	bne	1ce7c <__assert_fail@plt+0xb728>
   1ce70:	movw	r0, #12
   1ce74:	str	r0, [fp, #-4]
   1ce78:	b	1cef4 <__assert_fail@plt+0xb7a0>
   1ce7c:	ldr	r0, [sp, #8]
   1ce80:	ldr	r1, [fp, #-8]
   1ce84:	str	r0, [r1, #12]
   1ce88:	b	1ce8c <__assert_fail@plt+0xb738>
   1ce8c:	ldr	r0, [fp, #-8]
   1ce90:	ldrsb	r0, [r0, #75]	; 0x4b
   1ce94:	cmp	r0, #0
   1ce98:	beq	1cee0 <__assert_fail@plt+0xb78c>
   1ce9c:	ldr	r0, [fp, #-8]
   1cea0:	ldr	r0, [r0, #4]
   1cea4:	ldr	r1, [fp, #-12]
   1cea8:	mov	r2, r1
   1ceac:	str	r2, [sp]
   1ceb0:	bl	381dc <__assert_fail@plt+0x26a88>
   1ceb4:	str	r0, [sp, #4]
   1ceb8:	ldr	r0, [sp, #4]
   1cebc:	movw	r1, #0
   1cec0:	cmp	r0, r1
   1cec4:	bne	1ced4 <__assert_fail@plt+0xb780>
   1cec8:	movw	r0, #12
   1cecc:	str	r0, [fp, #-4]
   1ced0:	b	1cef4 <__assert_fail@plt+0xb7a0>
   1ced4:	ldr	r0, [sp, #4]
   1ced8:	ldr	r1, [fp, #-8]
   1cedc:	str	r0, [r1, #4]
   1cee0:	ldr	r0, [fp, #-12]
   1cee4:	ldr	r1, [fp, #-8]
   1cee8:	str	r0, [r1, #36]	; 0x24
   1ceec:	movw	r0, #0
   1cef0:	str	r0, [fp, #-4]
   1cef4:	ldr	r0, [fp, #-4]
   1cef8:	mov	sp, fp
   1cefc:	pop	{fp, pc}
   1cf00:	svccc	0x00ffffff
   1cf04:	push	{fp, lr}
   1cf08:	mov	fp, sp
   1cf0c:	sub	sp, sp, #184	; 0xb8
   1cf10:	str	r0, [fp, #-8]
   1cf14:	ldr	r0, [fp, #-8]
   1cf18:	ldr	r0, [r0, #28]
   1cf1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cf20:	ldr	r0, [fp, #-8]
   1cf24:	ldr	r0, [r0, #36]	; 0x24
   1cf28:	ldr	r1, [fp, #-8]
   1cf2c:	ldr	r1, [r1, #48]	; 0x30
   1cf30:	cmp	r0, r1
   1cf34:	ble	1cf48 <__assert_fail@plt+0xb7f4>
   1cf38:	ldr	r0, [fp, #-8]
   1cf3c:	ldr	r0, [r0, #48]	; 0x30
   1cf40:	str	r0, [sp, #24]
   1cf44:	b	1cf54 <__assert_fail@plt+0xb800>
   1cf48:	ldr	r0, [fp, #-8]
   1cf4c:	ldr	r0, [r0, #36]	; 0x24
   1cf50:	str	r0, [sp, #24]
   1cf54:	ldr	r0, [sp, #24]
   1cf58:	str	r0, [fp, #-28]	; 0xffffffe4
   1cf5c:	ldr	r0, [fp, #-8]
   1cf60:	ldrsb	r0, [r0, #74]	; 0x4a
   1cf64:	cmp	r0, #0
   1cf68:	bne	1d2c8 <__assert_fail@plt+0xbb74>
   1cf6c:	ldr	r0, [fp, #-8]
   1cf70:	ldr	r0, [r0, #64]	; 0x40
   1cf74:	movw	r1, #0
   1cf78:	cmp	r0, r1
   1cf7c:	bne	1d2c8 <__assert_fail@plt+0xbb74>
   1cf80:	ldr	r0, [fp, #-8]
   1cf84:	ldrsb	r0, [r0, #76]	; 0x4c
   1cf88:	cmp	r0, #0
   1cf8c:	bne	1d2c8 <__assert_fail@plt+0xbb74>
   1cf90:	b	1cf94 <__assert_fail@plt+0xb840>
   1cf94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cf9c:	cmp	r0, r1
   1cfa0:	bge	1d2a4 <__assert_fail@plt+0xbb50>
   1cfa4:	ldr	r0, [fp, #-8]
   1cfa8:	ldr	r0, [r0]
   1cfac:	ldr	r1, [fp, #-8]
   1cfb0:	ldr	r1, [r1, #24]
   1cfb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cfb8:	add	r1, r1, r2
   1cfbc:	add	r0, r0, r1
   1cfc0:	ldrb	r0, [r0]
   1cfc4:	strb	r0, [sp, #79]	; 0x4f
   1cfc8:	ldrb	r0, [sp, #79]	; 0x4f
   1cfcc:	mvn	r1, #127	; 0x7f
   1cfd0:	and	r0, r0, r1
   1cfd4:	cmp	r0, #0
   1cfd8:	bne	1d050 <__assert_fail@plt+0xb8fc>
   1cfdc:	ldr	r0, [fp, #-8]
   1cfe0:	add	r0, r0, #16
   1cfe4:	bl	114a8 <mbsinit@plt>
   1cfe8:	cmp	r0, #0
   1cfec:	beq	1d050 <__assert_fail@plt+0xb8fc>
   1cff0:	ldrb	r0, [sp, #79]	; 0x4f
   1cff4:	bl	11718 <towupper@plt>
   1cff8:	str	r0, [sp, #72]	; 0x48
   1cffc:	ldr	r0, [sp, #72]	; 0x48
   1d000:	mvn	r1, #127	; 0x7f
   1d004:	and	r0, r0, r1
   1d008:	cmp	r0, #0
   1d00c:	bne	1d04c <__assert_fail@plt+0xb8f8>
   1d010:	ldr	r0, [sp, #72]	; 0x48
   1d014:	ldr	r1, [fp, #-8]
   1d018:	ldr	r1, [r1, #4]
   1d01c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d020:	strb	r0, [r1, r2]
   1d024:	ldr	r0, [sp, #72]	; 0x48
   1d028:	ldr	r1, [fp, #-8]
   1d02c:	ldr	r1, [r1, #8]
   1d030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d034:	add	r1, r1, r2, lsl #2
   1d038:	str	r0, [r1]
   1d03c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d040:	add	r0, r0, #1
   1d044:	str	r0, [fp, #-24]	; 0xffffffe8
   1d048:	b	1cf94 <__assert_fail@plt+0xb840>
   1d04c:	b	1d050 <__assert_fail@plt+0xb8fc>
   1d050:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d058:	sub	r0, r0, r1
   1d05c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d060:	ldr	r0, [fp, #-8]
   1d064:	ldr	r1, [r0, #16]
   1d068:	str	r1, [fp, #-16]
   1d06c:	ldr	r0, [r0, #20]
   1d070:	str	r0, [fp, #-12]
   1d074:	ldr	r0, [fp, #-8]
   1d078:	ldr	r0, [r0]
   1d07c:	ldr	r1, [fp, #-8]
   1d080:	ldr	r1, [r1, #24]
   1d084:	add	r0, r0, r1
   1d088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d08c:	add	r1, r0, r1
   1d090:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d094:	ldr	r0, [fp, #-8]
   1d098:	add	r3, r0, #16
   1d09c:	add	r0, sp, #80	; 0x50
   1d0a0:	bl	39e50 <__assert_fail@plt+0x286fc>
   1d0a4:	str	r0, [fp, #-36]	; 0xffffffdc
   1d0a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d0ac:	movw	r1, #0
   1d0b0:	cmp	r1, r0
   1d0b4:	movw	r0, #0
   1d0b8:	str	r0, [sp, #20]
   1d0bc:	bcs	1d0d4 <__assert_fail@plt+0xb980>
   1d0c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d0c4:	cmn	r0, #2
   1d0c8:	movw	r0, #0
   1d0cc:	movcc	r0, #1
   1d0d0:	str	r0, [sp, #20]
   1d0d4:	ldr	r0, [sp, #20]
   1d0d8:	tst	r0, #1
   1d0dc:	beq	1d1f0 <__assert_fail@plt+0xba9c>
   1d0e0:	ldr	r0, [sp, #80]	; 0x50
   1d0e4:	bl	11718 <towupper@plt>
   1d0e8:	str	r0, [sp, #68]	; 0x44
   1d0ec:	ldr	r0, [sp, #68]	; 0x44
   1d0f0:	ldr	r1, [sp, #80]	; 0x50
   1d0f4:	cmp	r0, r1
   1d0f8:	beq	1d150 <__assert_fail@plt+0xb9fc>
   1d0fc:	add	r0, sp, #84	; 0x54
   1d100:	ldr	r1, [sp, #68]	; 0x44
   1d104:	sub	r2, fp, #16
   1d108:	bl	113e8 <wcrtomb@plt>
   1d10c:	str	r0, [sp, #64]	; 0x40
   1d110:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d114:	ldr	r1, [sp, #64]	; 0x40
   1d118:	cmp	r0, r1
   1d11c:	bne	1d140 <__assert_fail@plt+0xb9ec>
   1d120:	add	r1, sp, #84	; 0x54
   1d124:	ldr	r0, [fp, #-8]
   1d128:	ldr	r0, [r0, #4]
   1d12c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d130:	add	r0, r0, r2
   1d134:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d138:	bl	11478 <memcpy@plt>
   1d13c:	b	1d14c <__assert_fail@plt+0xb9f8>
   1d140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d144:	str	r0, [fp, #-20]	; 0xffffffec
   1d148:	b	1d2e8 <__assert_fail@plt+0xbb94>
   1d14c:	b	1d184 <__assert_fail@plt+0xba30>
   1d150:	ldr	r0, [fp, #-8]
   1d154:	ldr	r0, [r0, #4]
   1d158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d15c:	add	r0, r0, r1
   1d160:	ldr	r1, [fp, #-8]
   1d164:	ldr	r1, [r1]
   1d168:	ldr	r2, [fp, #-8]
   1d16c:	ldr	r2, [r2, #24]
   1d170:	add	r1, r1, r2
   1d174:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d178:	add	r1, r1, r2
   1d17c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d180:	bl	11478 <memcpy@plt>
   1d184:	ldr	r0, [sp, #68]	; 0x44
   1d188:	ldr	r1, [fp, #-8]
   1d18c:	ldr	r1, [r1, #8]
   1d190:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d194:	add	r3, r2, #1
   1d198:	str	r3, [fp, #-24]	; 0xffffffe8
   1d19c:	add	r1, r1, r2, lsl #2
   1d1a0:	str	r0, [r1]
   1d1a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d1ac:	add	r0, r0, r1
   1d1b0:	sub	r0, r0, #1
   1d1b4:	str	r0, [fp, #-32]	; 0xffffffe0
   1d1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d1c0:	cmp	r0, r1
   1d1c4:	bge	1d1ec <__assert_fail@plt+0xba98>
   1d1c8:	ldr	r0, [fp, #-8]
   1d1cc:	ldr	r0, [r0, #8]
   1d1d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1d4:	add	r2, r1, #1
   1d1d8:	str	r2, [fp, #-24]	; 0xffffffe8
   1d1dc:	add	r0, r0, r1, lsl #2
   1d1e0:	mvn	r1, #0
   1d1e4:	str	r1, [r0]
   1d1e8:	b	1d1b8 <__assert_fail@plt+0xba64>
   1d1ec:	b	1d2a0 <__assert_fail@plt+0xbb4c>
   1d1f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d1f4:	cmn	r0, #1
   1d1f8:	beq	1d22c <__assert_fail@plt+0xbad8>
   1d1fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d200:	cmp	r0, #0
   1d204:	beq	1d22c <__assert_fail@plt+0xbad8>
   1d208:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d20c:	cmn	r0, #2
   1d210:	bne	1d284 <__assert_fail@plt+0xbb30>
   1d214:	ldr	r0, [fp, #-8]
   1d218:	ldr	r0, [r0, #36]	; 0x24
   1d21c:	ldr	r1, [fp, #-8]
   1d220:	ldr	r1, [r1, #48]	; 0x30
   1d224:	cmp	r0, r1
   1d228:	blt	1d284 <__assert_fail@plt+0xbb30>
   1d22c:	ldrb	r0, [sp, #79]	; 0x4f
   1d230:	ldr	r1, [fp, #-8]
   1d234:	ldr	r1, [r1, #4]
   1d238:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d23c:	strb	r0, [r1, r2]
   1d240:	ldrb	r0, [sp, #79]	; 0x4f
   1d244:	ldr	r1, [fp, #-8]
   1d248:	ldr	r1, [r1, #8]
   1d24c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d250:	add	r3, r2, #1
   1d254:	str	r3, [fp, #-24]	; 0xffffffe8
   1d258:	add	r1, r1, r2, lsl #2
   1d25c:	str	r0, [r1]
   1d260:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d264:	cmn	r0, #1
   1d268:	bne	1d280 <__assert_fail@plt+0xbb2c>
   1d26c:	ldr	r0, [fp, #-8]
   1d270:	ldr	r1, [fp, #-16]
   1d274:	str	r1, [r0, #16]
   1d278:	ldr	r1, [fp, #-12]
   1d27c:	str	r1, [r0, #20]
   1d280:	b	1d29c <__assert_fail@plt+0xbb48>
   1d284:	ldr	r0, [fp, #-8]
   1d288:	ldr	r1, [fp, #-16]
   1d28c:	str	r1, [r0, #16]
   1d290:	ldr	r1, [fp, #-12]
   1d294:	str	r1, [r0, #20]
   1d298:	b	1d2a4 <__assert_fail@plt+0xbb50>
   1d29c:	b	1d2a0 <__assert_fail@plt+0xbb4c>
   1d2a0:	b	1cf94 <__assert_fail@plt+0xb840>
   1d2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2a8:	ldr	r1, [fp, #-8]
   1d2ac:	str	r0, [r1, #28]
   1d2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2b4:	ldr	r1, [fp, #-8]
   1d2b8:	str	r0, [r1, #32]
   1d2bc:	movw	r0, #0
   1d2c0:	str	r0, [fp, #-4]
   1d2c4:	b	1d9a0 <__assert_fail@plt+0xc24c>
   1d2c8:	ldr	r0, [fp, #-8]
   1d2cc:	ldr	r0, [r0, #32]
   1d2d0:	str	r0, [fp, #-20]	; 0xffffffec
   1d2d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d2dc:	cmp	r0, r1
   1d2e0:	bge	1d97c <__assert_fail@plt+0xc228>
   1d2e4:	b	1d2e8 <__assert_fail@plt+0xbb94>
   1d2e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d2ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2f0:	sub	r0, r0, r1
   1d2f4:	str	r0, [fp, #-32]	; 0xffffffe0
   1d2f8:	ldr	r0, [fp, #-8]
   1d2fc:	ldr	r1, [r0, #16]
   1d300:	str	r1, [fp, #-16]
   1d304:	ldr	r0, [r0, #20]
   1d308:	str	r0, [fp, #-12]
   1d30c:	ldr	r0, [fp, #-8]
   1d310:	ldr	r0, [r0, #64]	; 0x40
   1d314:	movw	r1, #0
   1d318:	cmp	r0, r1
   1d31c:	beq	1d3d4 <__assert_fail@plt+0xbc80>
   1d320:	movw	r0, #0
   1d324:	str	r0, [sp, #52]	; 0x34
   1d328:	ldr	r0, [sp, #52]	; 0x34
   1d32c:	ldr	r1, [fp, #-8]
   1d330:	ldr	r1, [r1, #80]	; 0x50
   1d334:	cmp	r0, r1
   1d338:	movw	r0, #0
   1d33c:	str	r0, [sp, #16]
   1d340:	bge	1d35c <__assert_fail@plt+0xbc08>
   1d344:	ldr	r0, [sp, #52]	; 0x34
   1d348:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d34c:	cmp	r0, r1
   1d350:	movw	r0, #0
   1d354:	movlt	r0, #1
   1d358:	str	r0, [sp, #16]
   1d35c:	ldr	r0, [sp, #16]
   1d360:	tst	r0, #1
   1d364:	beq	1d3c8 <__assert_fail@plt+0xbc74>
   1d368:	ldr	r0, [fp, #-8]
   1d36c:	ldr	r0, [r0]
   1d370:	ldr	r1, [fp, #-8]
   1d374:	ldr	r1, [r1, #24]
   1d378:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d37c:	add	r1, r1, r2
   1d380:	ldr	r2, [sp, #52]	; 0x34
   1d384:	add	r1, r1, r2
   1d388:	add	r0, r0, r1
   1d38c:	ldrb	r0, [r0]
   1d390:	str	r0, [sp, #48]	; 0x30
   1d394:	ldr	r0, [fp, #-8]
   1d398:	ldr	r0, [r0, #64]	; 0x40
   1d39c:	ldr	r1, [sp, #48]	; 0x30
   1d3a0:	add	r0, r0, r1
   1d3a4:	ldrb	r0, [r0]
   1d3a8:	ldr	r1, [sp, #52]	; 0x34
   1d3ac:	add	r2, sp, #84	; 0x54
   1d3b0:	add	r1, r2, r1
   1d3b4:	strb	r0, [r1]
   1d3b8:	ldr	r0, [sp, #52]	; 0x34
   1d3bc:	add	r0, r0, #1
   1d3c0:	str	r0, [sp, #52]	; 0x34
   1d3c4:	b	1d328 <__assert_fail@plt+0xbbd4>
   1d3c8:	add	r0, sp, #84	; 0x54
   1d3cc:	str	r0, [sp, #56]	; 0x38
   1d3d0:	b	1d3f4 <__assert_fail@plt+0xbca0>
   1d3d4:	ldr	r0, [fp, #-8]
   1d3d8:	ldr	r0, [r0]
   1d3dc:	ldr	r1, [fp, #-8]
   1d3e0:	ldr	r1, [r1, #24]
   1d3e4:	add	r0, r0, r1
   1d3e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d3ec:	add	r0, r0, r1
   1d3f0:	str	r0, [sp, #56]	; 0x38
   1d3f4:	ldr	r1, [sp, #56]	; 0x38
   1d3f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d3fc:	ldr	r0, [fp, #-8]
   1d400:	add	r3, r0, #16
   1d404:	add	r0, sp, #60	; 0x3c
   1d408:	bl	39e50 <__assert_fail@plt+0x286fc>
   1d40c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d410:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d414:	movw	r1, #0
   1d418:	cmp	r1, r0
   1d41c:	movw	r0, #0
   1d420:	str	r0, [sp, #12]
   1d424:	bcs	1d43c <__assert_fail@plt+0xbce8>
   1d428:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d42c:	cmn	r0, #2
   1d430:	movw	r0, #0
   1d434:	movcc	r0, #1
   1d438:	str	r0, [sp, #12]
   1d43c:	ldr	r0, [sp, #12]
   1d440:	tst	r0, #1
   1d444:	beq	1d840 <__assert_fail@plt+0xc0ec>
   1d448:	ldr	r0, [sp, #60]	; 0x3c
   1d44c:	bl	11718 <towupper@plt>
   1d450:	str	r0, [sp, #44]	; 0x2c
   1d454:	ldr	r0, [sp, #44]	; 0x2c
   1d458:	ldr	r1, [sp, #60]	; 0x3c
   1d45c:	cmp	r0, r1
   1d460:	beq	1d748 <__assert_fail@plt+0xbff4>
   1d464:	add	r0, sp, #84	; 0x54
   1d468:	ldr	r1, [sp, #44]	; 0x2c
   1d46c:	sub	r2, fp, #16
   1d470:	bl	113e8 <wcrtomb@plt>
   1d474:	str	r0, [sp, #40]	; 0x28
   1d478:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d47c:	ldr	r1, [sp, #40]	; 0x28
   1d480:	cmp	r0, r1
   1d484:	bne	1d4a8 <__assert_fail@plt+0xbd54>
   1d488:	add	r1, sp, #84	; 0x54
   1d48c:	ldr	r0, [fp, #-8]
   1d490:	ldr	r0, [r0, #4]
   1d494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d498:	add	r0, r0, r2
   1d49c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d4a0:	bl	11478 <memcpy@plt>
   1d4a4:	b	1d744 <__assert_fail@plt+0xbff0>
   1d4a8:	ldr	r0, [sp, #40]	; 0x28
   1d4ac:	cmn	r0, #1
   1d4b0:	beq	1d724 <__assert_fail@plt+0xbfd0>
   1d4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4b8:	ldr	r1, [sp, #40]	; 0x28
   1d4bc:	add	r0, r0, r1
   1d4c0:	ldr	r1, [fp, #-8]
   1d4c4:	ldr	r1, [r1, #36]	; 0x24
   1d4c8:	cmp	r0, r1
   1d4cc:	bls	1d4e8 <__assert_fail@plt+0xbd94>
   1d4d0:	ldr	r0, [fp, #-8]
   1d4d4:	ldr	r1, [fp, #-16]
   1d4d8:	str	r1, [r0, #16]
   1d4dc:	ldr	r1, [fp, #-12]
   1d4e0:	str	r1, [r0, #20]
   1d4e4:	b	1d97c <__assert_fail@plt+0xc228>
   1d4e8:	ldr	r0, [fp, #-8]
   1d4ec:	ldr	r0, [r0, #12]
   1d4f0:	movw	r1, #0
   1d4f4:	cmp	r0, r1
   1d4f8:	bne	1d538 <__assert_fail@plt+0xbde4>
   1d4fc:	ldr	r0, [fp, #-8]
   1d500:	ldr	r0, [r0, #36]	; 0x24
   1d504:	lsl	r0, r0, #2
   1d508:	bl	3816c <__assert_fail@plt+0x26a18>
   1d50c:	ldr	r1, [fp, #-8]
   1d510:	str	r0, [r1, #12]
   1d514:	ldr	r0, [fp, #-8]
   1d518:	ldr	r0, [r0, #12]
   1d51c:	movw	r1, #0
   1d520:	cmp	r0, r1
   1d524:	bne	1d534 <__assert_fail@plt+0xbde0>
   1d528:	movw	r0, #12
   1d52c:	str	r0, [fp, #-4]
   1d530:	b	1d9a0 <__assert_fail@plt+0xc24c>
   1d534:	b	1d538 <__assert_fail@plt+0xbde4>
   1d538:	ldr	r0, [fp, #-8]
   1d53c:	ldrsb	r0, [r0, #76]	; 0x4c
   1d540:	cmp	r0, #0
   1d544:	bne	1d594 <__assert_fail@plt+0xbe40>
   1d548:	movw	r0, #0
   1d54c:	str	r0, [sp, #36]	; 0x24
   1d550:	ldr	r0, [sp, #36]	; 0x24
   1d554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d558:	cmp	r0, r1
   1d55c:	bcs	1d588 <__assert_fail@plt+0xbe34>
   1d560:	ldr	r0, [sp, #36]	; 0x24
   1d564:	mov	r1, r0
   1d568:	ldr	r2, [fp, #-8]
   1d56c:	ldr	r2, [r2, #12]
   1d570:	add	r0, r2, r0, lsl #2
   1d574:	str	r1, [r0]
   1d578:	ldr	r0, [sp, #36]	; 0x24
   1d57c:	add	r0, r0, #1
   1d580:	str	r0, [sp, #36]	; 0x24
   1d584:	b	1d550 <__assert_fail@plt+0xbdfc>
   1d588:	ldr	r0, [fp, #-8]
   1d58c:	movw	r1, #1
   1d590:	strb	r1, [r0, #76]	; 0x4c
   1d594:	ldr	r0, [fp, #-8]
   1d598:	ldr	r0, [r0, #4]
   1d59c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5a0:	add	r0, r0, r1
   1d5a4:	ldr	r2, [sp, #40]	; 0x28
   1d5a8:	add	r1, sp, #84	; 0x54
   1d5ac:	bl	11478 <memcpy@plt>
   1d5b0:	ldr	r1, [sp, #44]	; 0x2c
   1d5b4:	ldr	r2, [fp, #-8]
   1d5b8:	ldr	r2, [r2, #8]
   1d5bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d5c0:	str	r1, [r2, r3, lsl #2]
   1d5c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d5c8:	ldr	r2, [fp, #-8]
   1d5cc:	ldr	r2, [r2, #12]
   1d5d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d5d4:	add	r2, r2, r3, lsl #2
   1d5d8:	str	r1, [r2]
   1d5dc:	movw	r1, #1
   1d5e0:	str	r1, [sp, #36]	; 0x24
   1d5e4:	ldr	r0, [sp, #36]	; 0x24
   1d5e8:	ldr	r1, [sp, #40]	; 0x28
   1d5ec:	cmp	r0, r1
   1d5f0:	bcs	1d678 <__assert_fail@plt+0xbf24>
   1d5f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d5f8:	ldr	r1, [sp, #36]	; 0x24
   1d5fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d600:	cmp	r1, r2
   1d604:	str	r0, [sp, #8]
   1d608:	bcs	1d618 <__assert_fail@plt+0xbec4>
   1d60c:	ldr	r0, [sp, #36]	; 0x24
   1d610:	str	r0, [sp, #4]
   1d614:	b	1d624 <__assert_fail@plt+0xbed0>
   1d618:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d61c:	sub	r0, r0, #1
   1d620:	str	r0, [sp, #4]
   1d624:	ldr	r0, [sp, #4]
   1d628:	ldr	r1, [sp, #8]
   1d62c:	add	r0, r1, r0
   1d630:	ldr	r2, [fp, #-8]
   1d634:	ldr	r2, [r2, #12]
   1d638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d63c:	ldr	ip, [sp, #36]	; 0x24
   1d640:	add	r3, r3, ip
   1d644:	str	r0, [r2, r3, lsl #2]
   1d648:	ldr	r0, [fp, #-8]
   1d64c:	ldr	r0, [r0, #8]
   1d650:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d654:	ldr	r3, [sp, #36]	; 0x24
   1d658:	add	r2, r2, r3
   1d65c:	add	r0, r0, r2, lsl #2
   1d660:	mvn	r2, #0
   1d664:	str	r2, [r0]
   1d668:	ldr	r0, [sp, #36]	; 0x24
   1d66c:	add	r0, r0, #1
   1d670:	str	r0, [sp, #36]	; 0x24
   1d674:	b	1d5e4 <__assert_fail@plt+0xbe90>
   1d678:	ldr	r0, [sp, #40]	; 0x28
   1d67c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d680:	sub	r0, r0, r1
   1d684:	ldr	r1, [fp, #-8]
   1d688:	ldr	r2, [r1, #48]	; 0x30
   1d68c:	add	r0, r2, r0
   1d690:	str	r0, [r1, #48]	; 0x30
   1d694:	ldr	r0, [fp, #-8]
   1d698:	ldr	r0, [r0, #52]	; 0x34
   1d69c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d6a0:	cmp	r0, r1
   1d6a4:	ble	1d6c4 <__assert_fail@plt+0xbf70>
   1d6a8:	ldr	r0, [sp, #40]	; 0x28
   1d6ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d6b0:	sub	r0, r0, r1
   1d6b4:	ldr	r1, [fp, #-8]
   1d6b8:	ldr	r2, [r1, #56]	; 0x38
   1d6bc:	add	r0, r2, r0
   1d6c0:	str	r0, [r1, #56]	; 0x38
   1d6c4:	ldr	r0, [fp, #-8]
   1d6c8:	ldr	r0, [r0, #36]	; 0x24
   1d6cc:	ldr	r1, [fp, #-8]
   1d6d0:	ldr	r1, [r1, #48]	; 0x30
   1d6d4:	cmp	r0, r1
   1d6d8:	ble	1d6ec <__assert_fail@plt+0xbf98>
   1d6dc:	ldr	r0, [fp, #-8]
   1d6e0:	ldr	r0, [r0, #48]	; 0x30
   1d6e4:	str	r0, [sp]
   1d6e8:	b	1d6f8 <__assert_fail@plt+0xbfa4>
   1d6ec:	ldr	r0, [fp, #-8]
   1d6f0:	ldr	r0, [r0, #36]	; 0x24
   1d6f4:	str	r0, [sp]
   1d6f8:	ldr	r0, [sp]
   1d6fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d700:	ldr	r0, [sp, #40]	; 0x28
   1d704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d708:	add	r0, r1, r0
   1d70c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d710:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d714:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d718:	add	r0, r1, r0
   1d71c:	str	r0, [fp, #-20]	; 0xffffffec
   1d720:	b	1d2d4 <__assert_fail@plt+0xbb80>
   1d724:	ldr	r0, [fp, #-8]
   1d728:	ldr	r0, [r0, #4]
   1d72c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d730:	add	r0, r0, r1
   1d734:	ldr	r1, [sp, #56]	; 0x38
   1d738:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d73c:	bl	11478 <memcpy@plt>
   1d740:	b	1d744 <__assert_fail@plt+0xbff0>
   1d744:	b	1d764 <__assert_fail@plt+0xc010>
   1d748:	ldr	r0, [fp, #-8]
   1d74c:	ldr	r0, [r0, #4]
   1d750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d754:	add	r0, r0, r1
   1d758:	ldr	r1, [sp, #56]	; 0x38
   1d75c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d760:	bl	11478 <memcpy@plt>
   1d764:	ldr	r0, [fp, #-8]
   1d768:	ldrb	r0, [r0, #76]	; 0x4c
   1d76c:	cmp	r0, #0
   1d770:	beq	1d7c4 <__assert_fail@plt+0xc070>
   1d774:	movw	r0, #0
   1d778:	str	r0, [sp, #32]
   1d77c:	ldr	r0, [sp, #32]
   1d780:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d784:	cmp	r0, r1
   1d788:	bcs	1d7c0 <__assert_fail@plt+0xc06c>
   1d78c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d790:	ldr	r1, [sp, #32]
   1d794:	add	r0, r0, r1
   1d798:	ldr	r2, [fp, #-8]
   1d79c:	ldr	r2, [r2, #12]
   1d7a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d7a4:	add	r1, r3, r1
   1d7a8:	add	r1, r2, r1, lsl #2
   1d7ac:	str	r0, [r1]
   1d7b0:	ldr	r0, [sp, #32]
   1d7b4:	add	r0, r0, #1
   1d7b8:	str	r0, [sp, #32]
   1d7bc:	b	1d77c <__assert_fail@plt+0xc028>
   1d7c0:	b	1d7c4 <__assert_fail@plt+0xc070>
   1d7c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d7c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d7cc:	add	r0, r1, r0
   1d7d0:	str	r0, [fp, #-20]	; 0xffffffec
   1d7d4:	ldr	r0, [sp, #44]	; 0x2c
   1d7d8:	ldr	r1, [fp, #-8]
   1d7dc:	ldr	r1, [r1, #8]
   1d7e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d7e4:	add	r3, r2, #1
   1d7e8:	str	r3, [fp, #-24]	; 0xffffffe8
   1d7ec:	add	r1, r1, r2, lsl #2
   1d7f0:	str	r0, [r1]
   1d7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d7fc:	add	r0, r0, r1
   1d800:	sub	r0, r0, #1
   1d804:	str	r0, [fp, #-32]	; 0xffffffe0
   1d808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d80c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d810:	cmp	r0, r1
   1d814:	bge	1d83c <__assert_fail@plt+0xc0e8>
   1d818:	ldr	r0, [fp, #-8]
   1d81c:	ldr	r0, [r0, #8]
   1d820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d824:	add	r2, r1, #1
   1d828:	str	r2, [fp, #-24]	; 0xffffffe8
   1d82c:	add	r0, r0, r1, lsl #2
   1d830:	mvn	r1, #0
   1d834:	str	r1, [r0]
   1d838:	b	1d808 <__assert_fail@plt+0xc0b4>
   1d83c:	b	1d978 <__assert_fail@plt+0xc224>
   1d840:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d844:	cmn	r0, #1
   1d848:	beq	1d87c <__assert_fail@plt+0xc128>
   1d84c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d850:	cmp	r0, #0
   1d854:	beq	1d87c <__assert_fail@plt+0xc128>
   1d858:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d85c:	cmn	r0, #2
   1d860:	bne	1d95c <__assert_fail@plt+0xc208>
   1d864:	ldr	r0, [fp, #-8]
   1d868:	ldr	r0, [r0, #36]	; 0x24
   1d86c:	ldr	r1, [fp, #-8]
   1d870:	ldr	r1, [r1, #48]	; 0x30
   1d874:	cmp	r0, r1
   1d878:	blt	1d95c <__assert_fail@plt+0xc208>
   1d87c:	ldr	r0, [fp, #-8]
   1d880:	ldr	r0, [r0]
   1d884:	ldr	r1, [fp, #-8]
   1d888:	ldr	r1, [r1, #24]
   1d88c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d890:	add	r1, r1, r2
   1d894:	add	r0, r0, r1
   1d898:	ldrb	r0, [r0]
   1d89c:	str	r0, [sp, #28]
   1d8a0:	ldr	r0, [fp, #-8]
   1d8a4:	ldr	r0, [r0, #64]	; 0x40
   1d8a8:	movw	r1, #0
   1d8ac:	cmp	r0, r1
   1d8b0:	beq	1d8cc <__assert_fail@plt+0xc178>
   1d8b4:	ldr	r0, [fp, #-8]
   1d8b8:	ldr	r0, [r0, #64]	; 0x40
   1d8bc:	ldr	r1, [sp, #28]
   1d8c0:	add	r0, r0, r1
   1d8c4:	ldrb	r0, [r0]
   1d8c8:	str	r0, [sp, #28]
   1d8cc:	ldr	r0, [sp, #28]
   1d8d0:	ldr	r1, [fp, #-8]
   1d8d4:	ldr	r1, [r1, #4]
   1d8d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d8dc:	add	r1, r1, r2
   1d8e0:	strb	r0, [r1]
   1d8e4:	ldr	r0, [fp, #-8]
   1d8e8:	ldrb	r0, [r0, #76]	; 0x4c
   1d8ec:	cmp	r0, #0
   1d8f0:	beq	1d90c <__assert_fail@plt+0xc1b8>
   1d8f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d8f8:	ldr	r1, [fp, #-8]
   1d8fc:	ldr	r1, [r1, #12]
   1d900:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d904:	add	r1, r1, r2, lsl #2
   1d908:	str	r0, [r1]
   1d90c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d910:	add	r0, r0, #1
   1d914:	str	r0, [fp, #-20]	; 0xffffffec
   1d918:	ldr	r0, [sp, #28]
   1d91c:	ldr	r1, [fp, #-8]
   1d920:	ldr	r1, [r1, #8]
   1d924:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d928:	add	r3, r2, #1
   1d92c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d930:	add	r1, r1, r2, lsl #2
   1d934:	str	r0, [r1]
   1d938:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d93c:	cmn	r0, #1
   1d940:	bne	1d958 <__assert_fail@plt+0xc204>
   1d944:	ldr	r0, [fp, #-8]
   1d948:	ldr	r1, [fp, #-16]
   1d94c:	str	r1, [r0, #16]
   1d950:	ldr	r1, [fp, #-12]
   1d954:	str	r1, [r0, #20]
   1d958:	b	1d974 <__assert_fail@plt+0xc220>
   1d95c:	ldr	r0, [fp, #-8]
   1d960:	ldr	r1, [fp, #-16]
   1d964:	str	r1, [r0, #16]
   1d968:	ldr	r1, [fp, #-12]
   1d96c:	str	r1, [r0, #20]
   1d970:	b	1d97c <__assert_fail@plt+0xc228>
   1d974:	b	1d978 <__assert_fail@plt+0xc224>
   1d978:	b	1d2d4 <__assert_fail@plt+0xbb80>
   1d97c:	b	1d980 <__assert_fail@plt+0xc22c>
   1d980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d984:	ldr	r1, [fp, #-8]
   1d988:	str	r0, [r1, #28]
   1d98c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d990:	ldr	r1, [fp, #-8]
   1d994:	str	r0, [r1, #32]
   1d998:	movw	r0, #0
   1d99c:	str	r0, [fp, #-4]
   1d9a0:	ldr	r0, [fp, #-4]
   1d9a4:	mov	sp, fp
   1d9a8:	pop	{fp, pc}
   1d9ac:	push	{fp, lr}
   1d9b0:	mov	fp, sp
   1d9b4:	sub	sp, sp, #24
   1d9b8:	str	r0, [fp, #-4]
   1d9bc:	ldr	r0, [fp, #-4]
   1d9c0:	ldr	r0, [r0, #36]	; 0x24
   1d9c4:	ldr	r1, [fp, #-4]
   1d9c8:	ldr	r1, [r1, #48]	; 0x30
   1d9cc:	cmp	r0, r1
   1d9d0:	ble	1d9e4 <__assert_fail@plt+0xc290>
   1d9d4:	ldr	r0, [fp, #-4]
   1d9d8:	ldr	r0, [r0, #48]	; 0x30
   1d9dc:	str	r0, [sp, #4]
   1d9e0:	b	1d9f0 <__assert_fail@plt+0xc29c>
   1d9e4:	ldr	r0, [fp, #-4]
   1d9e8:	ldr	r0, [r0, #36]	; 0x24
   1d9ec:	str	r0, [sp, #4]
   1d9f0:	ldr	r0, [sp, #4]
   1d9f4:	str	r0, [sp, #12]
   1d9f8:	ldr	r0, [fp, #-4]
   1d9fc:	ldr	r0, [r0, #28]
   1da00:	str	r0, [fp, #-8]
   1da04:	ldr	r0, [fp, #-8]
   1da08:	ldr	r1, [sp, #12]
   1da0c:	cmp	r0, r1
   1da10:	bge	1da90 <__assert_fail@plt+0xc33c>
   1da14:	ldr	r0, [fp, #-4]
   1da18:	ldr	r0, [r0]
   1da1c:	ldr	r1, [fp, #-4]
   1da20:	ldr	r1, [r1, #24]
   1da24:	ldr	r2, [fp, #-8]
   1da28:	add	r1, r1, r2
   1da2c:	add	r0, r0, r1
   1da30:	ldrb	r0, [r0]
   1da34:	str	r0, [sp, #8]
   1da38:	ldr	r0, [fp, #-4]
   1da3c:	ldr	r0, [r0, #64]	; 0x40
   1da40:	movw	r1, #0
   1da44:	cmp	r0, r1
   1da48:	beq	1da64 <__assert_fail@plt+0xc310>
   1da4c:	ldr	r0, [fp, #-4]
   1da50:	ldr	r0, [r0, #64]	; 0x40
   1da54:	ldr	r1, [sp, #8]
   1da58:	add	r0, r0, r1
   1da5c:	ldrb	r0, [r0]
   1da60:	str	r0, [sp, #8]
   1da64:	ldr	r0, [sp, #8]
   1da68:	bl	116d0 <toupper@plt>
   1da6c:	ldr	r1, [fp, #-4]
   1da70:	ldr	r1, [r1, #4]
   1da74:	ldr	r2, [fp, #-8]
   1da78:	add	r1, r1, r2
   1da7c:	strb	r0, [r1]
   1da80:	ldr	r0, [fp, #-8]
   1da84:	add	r0, r0, #1
   1da88:	str	r0, [fp, #-8]
   1da8c:	b	1da04 <__assert_fail@plt+0xc2b0>
   1da90:	ldr	r0, [fp, #-8]
   1da94:	ldr	r1, [fp, #-4]
   1da98:	str	r0, [r1, #28]
   1da9c:	ldr	r0, [fp, #-8]
   1daa0:	ldr	r1, [fp, #-4]
   1daa4:	str	r0, [r1, #32]
   1daa8:	mov	sp, fp
   1daac:	pop	{fp, pc}
   1dab0:	push	{fp, lr}
   1dab4:	mov	fp, sp
   1dab8:	sub	sp, sp, #128	; 0x80
   1dabc:	str	r0, [fp, #-4]
   1dac0:	ldr	r0, [fp, #-4]
   1dac4:	ldr	r0, [r0, #36]	; 0x24
   1dac8:	ldr	r1, [fp, #-4]
   1dacc:	ldr	r1, [r1, #48]	; 0x30
   1dad0:	cmp	r0, r1
   1dad4:	ble	1dae8 <__assert_fail@plt+0xc394>
   1dad8:	ldr	r0, [fp, #-4]
   1dadc:	ldr	r0, [r0, #48]	; 0x30
   1dae0:	str	r0, [sp, #16]
   1dae4:	b	1daf4 <__assert_fail@plt+0xc3a0>
   1dae8:	ldr	r0, [fp, #-4]
   1daec:	ldr	r0, [r0, #36]	; 0x24
   1daf0:	str	r0, [sp, #16]
   1daf4:	ldr	r0, [sp, #16]
   1daf8:	str	r0, [sp, #44]	; 0x2c
   1dafc:	ldr	r0, [fp, #-4]
   1db00:	ldr	r0, [r0, #28]
   1db04:	str	r0, [sp, #48]	; 0x30
   1db08:	ldr	r0, [sp, #48]	; 0x30
   1db0c:	ldr	r1, [sp, #44]	; 0x2c
   1db10:	cmp	r0, r1
   1db14:	bge	1ddd0 <__assert_fail@plt+0xc67c>
   1db18:	ldr	r0, [sp, #44]	; 0x2c
   1db1c:	ldr	r1, [sp, #48]	; 0x30
   1db20:	sub	r0, r0, r1
   1db24:	str	r0, [sp, #40]	; 0x28
   1db28:	ldr	r0, [fp, #-4]
   1db2c:	ldr	r1, [r0, #16]
   1db30:	str	r1, [sp, #52]	; 0x34
   1db34:	ldr	r0, [r0, #20]
   1db38:	str	r0, [sp, #56]	; 0x38
   1db3c:	ldr	r0, [fp, #-4]
   1db40:	ldr	r0, [r0, #64]	; 0x40
   1db44:	movw	r1, #0
   1db48:	cmp	r0, r1
   1db4c:	beq	1dc20 <__assert_fail@plt+0xc4cc>
   1db50:	movw	r0, #0
   1db54:	str	r0, [sp, #24]
   1db58:	ldr	r0, [sp, #24]
   1db5c:	ldr	r1, [fp, #-4]
   1db60:	ldr	r1, [r1, #80]	; 0x50
   1db64:	cmp	r0, r1
   1db68:	movw	r0, #0
   1db6c:	str	r0, [sp, #12]
   1db70:	bge	1db8c <__assert_fail@plt+0xc438>
   1db74:	ldr	r0, [sp, #24]
   1db78:	ldr	r1, [sp, #40]	; 0x28
   1db7c:	cmp	r0, r1
   1db80:	movw	r0, #0
   1db84:	movlt	r0, #1
   1db88:	str	r0, [sp, #12]
   1db8c:	ldr	r0, [sp, #12]
   1db90:	tst	r0, #1
   1db94:	beq	1dc14 <__assert_fail@plt+0xc4c0>
   1db98:	ldr	r0, [fp, #-4]
   1db9c:	ldr	r0, [r0]
   1dba0:	ldr	r1, [fp, #-4]
   1dba4:	ldr	r1, [r1, #24]
   1dba8:	ldr	r2, [sp, #48]	; 0x30
   1dbac:	add	r1, r1, r2
   1dbb0:	ldr	r2, [sp, #24]
   1dbb4:	add	r1, r1, r2
   1dbb8:	add	r0, r0, r1
   1dbbc:	ldrb	r0, [r0]
   1dbc0:	str	r0, [sp, #20]
   1dbc4:	ldr	r0, [fp, #-4]
   1dbc8:	ldr	r0, [r0, #64]	; 0x40
   1dbcc:	ldr	r1, [sp, #20]
   1dbd0:	add	r0, r0, r1
   1dbd4:	ldrb	r0, [r0]
   1dbd8:	ldr	r1, [fp, #-4]
   1dbdc:	ldr	r1, [r1, #4]
   1dbe0:	ldr	r2, [sp, #48]	; 0x30
   1dbe4:	ldr	r3, [sp, #24]
   1dbe8:	add	r2, r2, r3
   1dbec:	add	r1, r1, r2
   1dbf0:	strb	r0, [r1]
   1dbf4:	ldr	r1, [sp, #24]
   1dbf8:	add	r2, sp, #60	; 0x3c
   1dbfc:	add	r1, r2, r1
   1dc00:	strb	r0, [r1]
   1dc04:	ldr	r0, [sp, #24]
   1dc08:	add	r0, r0, #1
   1dc0c:	str	r0, [sp, #24]
   1dc10:	b	1db58 <__assert_fail@plt+0xc404>
   1dc14:	add	r0, sp, #60	; 0x3c
   1dc18:	str	r0, [sp, #28]
   1dc1c:	b	1dc40 <__assert_fail@plt+0xc4ec>
   1dc20:	ldr	r0, [fp, #-4]
   1dc24:	ldr	r0, [r0]
   1dc28:	ldr	r1, [fp, #-4]
   1dc2c:	ldr	r1, [r1, #24]
   1dc30:	add	r0, r0, r1
   1dc34:	ldr	r1, [sp, #48]	; 0x30
   1dc38:	add	r0, r0, r1
   1dc3c:	str	r0, [sp, #28]
   1dc40:	ldr	r1, [sp, #28]
   1dc44:	ldr	r2, [sp, #40]	; 0x28
   1dc48:	ldr	r0, [fp, #-4]
   1dc4c:	add	r3, r0, #16
   1dc50:	add	r0, sp, #32
   1dc54:	bl	39e50 <__assert_fail@plt+0x286fc>
   1dc58:	str	r0, [sp, #36]	; 0x24
   1dc5c:	ldr	r0, [sp, #36]	; 0x24
   1dc60:	cmn	r0, #1
   1dc64:	movw	r0, #1
   1dc68:	str	r0, [sp, #8]
   1dc6c:	beq	1dcc0 <__assert_fail@plt+0xc56c>
   1dc70:	ldr	r0, [sp, #36]	; 0x24
   1dc74:	cmp	r0, #0
   1dc78:	movw	r0, #1
   1dc7c:	str	r0, [sp, #8]
   1dc80:	beq	1dcc0 <__assert_fail@plt+0xc56c>
   1dc84:	ldr	r0, [sp, #36]	; 0x24
   1dc88:	cmn	r0, #2
   1dc8c:	movw	r0, #0
   1dc90:	str	r0, [sp, #4]
   1dc94:	bne	1dcb8 <__assert_fail@plt+0xc564>
   1dc98:	ldr	r0, [fp, #-4]
   1dc9c:	ldr	r0, [r0, #36]	; 0x24
   1dca0:	ldr	r1, [fp, #-4]
   1dca4:	ldr	r1, [r1, #48]	; 0x30
   1dca8:	cmp	r0, r1
   1dcac:	movw	r0, #0
   1dcb0:	movge	r0, #1
   1dcb4:	str	r0, [sp, #4]
   1dcb8:	ldr	r0, [sp, #4]
   1dcbc:	str	r0, [sp, #8]
   1dcc0:	ldr	r0, [sp, #8]
   1dcc4:	tst	r0, #1
   1dcc8:	beq	1dd3c <__assert_fail@plt+0xc5e8>
   1dccc:	movw	r0, #1
   1dcd0:	str	r0, [sp, #36]	; 0x24
   1dcd4:	ldr	r0, [fp, #-4]
   1dcd8:	ldr	r0, [r0]
   1dcdc:	ldr	r1, [fp, #-4]
   1dce0:	ldr	r1, [r1, #24]
   1dce4:	ldr	r2, [sp, #48]	; 0x30
   1dce8:	add	r1, r1, r2
   1dcec:	add	r0, r0, r1
   1dcf0:	ldrb	r0, [r0]
   1dcf4:	str	r0, [sp, #32]
   1dcf8:	ldr	r0, [fp, #-4]
   1dcfc:	ldr	r0, [r0, #64]	; 0x40
   1dd00:	movw	r1, #0
   1dd04:	cmp	r0, r1
   1dd08:	beq	1dd24 <__assert_fail@plt+0xc5d0>
   1dd0c:	ldr	r0, [fp, #-4]
   1dd10:	ldr	r0, [r0, #64]	; 0x40
   1dd14:	ldr	r1, [sp, #32]
   1dd18:	add	r0, r0, r1
   1dd1c:	ldrb	r0, [r0]
   1dd20:	str	r0, [sp, #32]
   1dd24:	ldr	r0, [fp, #-4]
   1dd28:	ldr	r1, [sp, #52]	; 0x34
   1dd2c:	str	r1, [r0, #16]
   1dd30:	ldr	r1, [sp, #56]	; 0x38
   1dd34:	str	r1, [r0, #20]
   1dd38:	b	1dd64 <__assert_fail@plt+0xc610>
   1dd3c:	ldr	r0, [sp, #36]	; 0x24
   1dd40:	cmn	r0, #2
   1dd44:	bne	1dd60 <__assert_fail@plt+0xc60c>
   1dd48:	ldr	r0, [fp, #-4]
   1dd4c:	ldr	r1, [sp, #52]	; 0x34
   1dd50:	str	r1, [r0, #16]
   1dd54:	ldr	r1, [sp, #56]	; 0x38
   1dd58:	str	r1, [r0, #20]
   1dd5c:	b	1ddd0 <__assert_fail@plt+0xc67c>
   1dd60:	b	1dd64 <__assert_fail@plt+0xc610>
   1dd64:	ldr	r0, [sp, #32]
   1dd68:	ldr	r1, [fp, #-4]
   1dd6c:	ldr	r1, [r1, #8]
   1dd70:	ldr	r2, [sp, #48]	; 0x30
   1dd74:	add	r3, r2, #1
   1dd78:	str	r3, [sp, #48]	; 0x30
   1dd7c:	add	r1, r1, r2, lsl #2
   1dd80:	str	r0, [r1]
   1dd84:	ldr	r0, [sp, #48]	; 0x30
   1dd88:	ldr	r1, [sp, #36]	; 0x24
   1dd8c:	add	r0, r0, r1
   1dd90:	sub	r0, r0, #1
   1dd94:	str	r0, [sp, #40]	; 0x28
   1dd98:	ldr	r0, [sp, #48]	; 0x30
   1dd9c:	ldr	r1, [sp, #40]	; 0x28
   1dda0:	cmp	r0, r1
   1dda4:	bge	1ddcc <__assert_fail@plt+0xc678>
   1dda8:	ldr	r0, [fp, #-4]
   1ddac:	ldr	r0, [r0, #8]
   1ddb0:	ldr	r1, [sp, #48]	; 0x30
   1ddb4:	add	r2, r1, #1
   1ddb8:	str	r2, [sp, #48]	; 0x30
   1ddbc:	add	r0, r0, r1, lsl #2
   1ddc0:	mvn	r1, #0
   1ddc4:	str	r1, [r0]
   1ddc8:	b	1dd98 <__assert_fail@plt+0xc644>
   1ddcc:	b	1db08 <__assert_fail@plt+0xc3b4>
   1ddd0:	ldr	r0, [sp, #48]	; 0x30
   1ddd4:	ldr	r1, [fp, #-4]
   1ddd8:	str	r0, [r1, #28]
   1dddc:	ldr	r0, [sp, #48]	; 0x30
   1dde0:	ldr	r1, [fp, #-4]
   1dde4:	str	r0, [r1, #32]
   1dde8:	mov	sp, fp
   1ddec:	pop	{fp, pc}
   1ddf0:	sub	sp, sp, #20
   1ddf4:	str	r0, [sp, #16]
   1ddf8:	ldr	r0, [sp, #16]
   1ddfc:	ldr	r0, [r0, #36]	; 0x24
   1de00:	ldr	r1, [sp, #16]
   1de04:	ldr	r1, [r1, #48]	; 0x30
   1de08:	cmp	r0, r1
   1de0c:	ble	1de20 <__assert_fail@plt+0xc6cc>
   1de10:	ldr	r0, [sp, #16]
   1de14:	ldr	r0, [r0, #48]	; 0x30
   1de18:	str	r0, [sp]
   1de1c:	b	1de2c <__assert_fail@plt+0xc6d8>
   1de20:	ldr	r0, [sp, #16]
   1de24:	ldr	r0, [r0, #36]	; 0x24
   1de28:	str	r0, [sp]
   1de2c:	ldr	r0, [sp]
   1de30:	str	r0, [sp, #8]
   1de34:	ldr	r0, [sp, #16]
   1de38:	ldr	r0, [r0, #28]
   1de3c:	str	r0, [sp, #12]
   1de40:	ldr	r0, [sp, #12]
   1de44:	ldr	r1, [sp, #8]
   1de48:	cmp	r0, r1
   1de4c:	bge	1deac <__assert_fail@plt+0xc758>
   1de50:	ldr	r0, [sp, #16]
   1de54:	ldr	r0, [r0]
   1de58:	ldr	r1, [sp, #16]
   1de5c:	ldr	r1, [r1, #24]
   1de60:	ldr	r2, [sp, #12]
   1de64:	add	r1, r1, r2
   1de68:	add	r0, r0, r1
   1de6c:	ldrb	r0, [r0]
   1de70:	str	r0, [sp, #4]
   1de74:	ldr	r0, [sp, #16]
   1de78:	ldr	r0, [r0, #64]	; 0x40
   1de7c:	ldr	r1, [sp, #4]
   1de80:	add	r0, r0, r1
   1de84:	ldrb	r0, [r0]
   1de88:	ldr	r1, [sp, #16]
   1de8c:	ldr	r1, [r1, #4]
   1de90:	ldr	r2, [sp, #12]
   1de94:	add	r1, r1, r2
   1de98:	strb	r0, [r1]
   1de9c:	ldr	r0, [sp, #12]
   1dea0:	add	r0, r0, #1
   1dea4:	str	r0, [sp, #12]
   1dea8:	b	1de40 <__assert_fail@plt+0xc6ec>
   1deac:	ldr	r0, [sp, #12]
   1deb0:	ldr	r1, [sp, #16]
   1deb4:	str	r0, [r1, #28]
   1deb8:	ldr	r0, [sp, #12]
   1debc:	ldr	r1, [sp, #16]
   1dec0:	str	r0, [r1, #32]
   1dec4:	add	sp, sp, #20
   1dec8:	bx	lr
   1decc:	push	{fp, lr}
   1ded0:	mov	fp, sp
   1ded4:	sub	sp, sp, #16
   1ded8:	str	r0, [fp, #-4]
   1dedc:	str	r1, [sp, #8]
   1dee0:	str	r2, [sp, #4]
   1dee4:	ldr	r0, [fp, #-4]
   1dee8:	ldr	r1, [sp, #8]
   1deec:	ldr	r2, [sp, #4]
   1def0:	bl	1e23c <__assert_fail@plt+0xcae8>
   1def4:	ldr	r1, [sp, #8]
   1def8:	ldr	r2, [r1, #40]	; 0x28
   1defc:	add	r0, r2, r0
   1df00:	str	r0, [r1, #40]	; 0x28
   1df04:	mov	sp, fp
   1df08:	pop	{fp, pc}
   1df0c:	push	{r4, r5, fp, lr}
   1df10:	add	fp, sp, #8
   1df14:	sub	sp, sp, #64	; 0x40
   1df18:	ldr	ip, [fp, #12]
   1df1c:	ldr	lr, [fp, #8]
   1df20:	str	r0, [fp, #-16]
   1df24:	str	r1, [fp, #-20]	; 0xffffffec
   1df28:	str	r2, [fp, #-24]	; 0xffffffe8
   1df2c:	str	r3, [fp, #-28]	; 0xffffffe4
   1df30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df34:	ldr	r0, [r0]
   1df38:	str	r0, [fp, #-32]	; 0xffffffe0
   1df3c:	movw	r0, #0
   1df40:	str	r0, [sp, #32]
   1df44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1df48:	ldr	r0, [r0, #84]	; 0x54
   1df4c:	str	r0, [sp, #28]
   1df50:	ldr	r0, [fp, #-16]
   1df54:	ldr	r1, [fp, #-20]	; 0xffffffec
   1df58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1df5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1df60:	ldr	r4, [fp, #8]
   1df64:	ldr	r5, [fp, #12]
   1df68:	str	r4, [sp]
   1df6c:	str	r5, [sp, #4]
   1df70:	str	ip, [sp, #20]
   1df74:	str	lr, [sp, #16]
   1df78:	bl	1f2c4 <__assert_fail@plt+0xdb70>
   1df7c:	str	r0, [sp, #36]	; 0x24
   1df80:	ldr	r0, [fp, #12]
   1df84:	ldr	r0, [r0]
   1df88:	cmp	r0, #0
   1df8c:	movw	r0, #0
   1df90:	str	r0, [sp, #12]
   1df94:	beq	1dfb0 <__assert_fail@plt+0xc85c>
   1df98:	ldr	r0, [sp, #36]	; 0x24
   1df9c:	movw	r1, #0
   1dfa0:	cmp	r0, r1
   1dfa4:	movw	r0, #0
   1dfa8:	moveq	r0, #1
   1dfac:	str	r0, [sp, #12]
   1dfb0:	ldr	r0, [sp, #12]
   1dfb4:	tst	r0, #1
   1dfb8:	beq	1dfc8 <__assert_fail@plt+0xc874>
   1dfbc:	movw	r0, #0
   1dfc0:	str	r0, [fp, #-12]
   1dfc4:	b	1e154 <__assert_fail@plt+0xca00>
   1dfc8:	b	1dfcc <__assert_fail@plt+0xc878>
   1dfcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfd0:	ldr	r0, [r0, #4]
   1dfd4:	and	r0, r0, #255	; 0xff
   1dfd8:	cmp	r0, #10
   1dfdc:	bne	1e14c <__assert_fail@plt+0xc9f8>
   1dfe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfe4:	ldr	r1, [fp, #-16]
   1dfe8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dfec:	orr	r2, r2, #8388608	; 0x800000
   1dff0:	bl	1decc <__assert_fail@plt+0xc778>
   1dff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dff8:	ldr	r0, [r0, #4]
   1dffc:	and	r0, r0, #255	; 0xff
   1e000:	cmp	r0, #10
   1e004:	beq	1e100 <__assert_fail@plt+0xc9ac>
   1e008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e00c:	ldr	r0, [r0, #4]
   1e010:	and	r0, r0, #255	; 0xff
   1e014:	cmp	r0, #2
   1e018:	beq	1e100 <__assert_fail@plt+0xc9ac>
   1e01c:	ldr	r0, [fp, #8]
   1e020:	cmp	r0, #0
   1e024:	beq	1e03c <__assert_fail@plt+0xc8e8>
   1e028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e02c:	ldr	r0, [r0, #4]
   1e030:	and	r0, r0, #255	; 0xff
   1e034:	cmp	r0, #9
   1e038:	beq	1e100 <__assert_fail@plt+0xc9ac>
   1e03c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e040:	ldr	r0, [r0, #84]	; 0x54
   1e044:	str	r0, [sp, #24]
   1e048:	ldr	r0, [sp, #28]
   1e04c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e050:	str	r0, [r1, #84]	; 0x54
   1e054:	ldr	r0, [fp, #-16]
   1e058:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e05c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e064:	ldr	ip, [fp, #8]
   1e068:	ldr	lr, [fp, #12]
   1e06c:	str	ip, [sp]
   1e070:	str	lr, [sp, #4]
   1e074:	bl	1f2c4 <__assert_fail@plt+0xdb70>
   1e078:	str	r0, [sp, #32]
   1e07c:	ldr	r0, [fp, #12]
   1e080:	ldr	r0, [r0]
   1e084:	cmp	r0, #0
   1e088:	movw	r0, #0
   1e08c:	str	r0, [sp, #8]
   1e090:	beq	1e0ac <__assert_fail@plt+0xc958>
   1e094:	ldr	r0, [sp, #32]
   1e098:	movw	r1, #0
   1e09c:	cmp	r0, r1
   1e0a0:	movw	r0, #0
   1e0a4:	moveq	r0, #1
   1e0a8:	str	r0, [sp, #8]
   1e0ac:	ldr	r0, [sp, #8]
   1e0b0:	tst	r0, #1
   1e0b4:	beq	1e0e8 <__assert_fail@plt+0xc994>
   1e0b8:	ldr	r0, [sp, #36]	; 0x24
   1e0bc:	movw	r1, #0
   1e0c0:	cmp	r0, r1
   1e0c4:	beq	1e0dc <__assert_fail@plt+0xc988>
   1e0c8:	ldr	r0, [sp, #36]	; 0x24
   1e0cc:	movw	r1, #63168	; 0xf6c0
   1e0d0:	movt	r1, #1
   1e0d4:	movw	r2, #0
   1e0d8:	bl	1f550 <__assert_fail@plt+0xddfc>
   1e0dc:	movw	r0, #0
   1e0e0:	str	r0, [fp, #-12]
   1e0e4:	b	1e154 <__assert_fail@plt+0xca00>
   1e0e8:	ldr	r0, [sp, #24]
   1e0ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e0f0:	ldr	r2, [r1, #84]	; 0x54
   1e0f4:	orr	r0, r2, r0
   1e0f8:	str	r0, [r1, #84]	; 0x54
   1e0fc:	b	1e108 <__assert_fail@plt+0xc9b4>
   1e100:	movw	r0, #0
   1e104:	str	r0, [sp, #32]
   1e108:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e10c:	ldr	r1, [sp, #36]	; 0x24
   1e110:	ldr	r2, [sp, #32]
   1e114:	movw	r3, #10
   1e118:	bl	1e160 <__assert_fail@plt+0xca0c>
   1e11c:	str	r0, [sp, #36]	; 0x24
   1e120:	ldr	r0, [sp, #36]	; 0x24
   1e124:	movw	r1, #0
   1e128:	cmp	r0, r1
   1e12c:	bne	1e148 <__assert_fail@plt+0xc9f4>
   1e130:	ldr	r0, [fp, #12]
   1e134:	movw	r1, #12
   1e138:	str	r1, [r0]
   1e13c:	movw	r0, #0
   1e140:	str	r0, [fp, #-12]
   1e144:	b	1e154 <__assert_fail@plt+0xca00>
   1e148:	b	1dfcc <__assert_fail@plt+0xc878>
   1e14c:	ldr	r0, [sp, #36]	; 0x24
   1e150:	str	r0, [fp, #-12]
   1e154:	ldr	r0, [fp, #-12]
   1e158:	sub	sp, fp, #8
   1e15c:	pop	{r4, r5, fp, pc}
   1e160:	push	{fp, lr}
   1e164:	mov	fp, sp
   1e168:	sub	sp, sp, #32
   1e16c:	add	ip, sp, #8
   1e170:	ldr	lr, [pc, #192]	; 1e238 <__assert_fail@plt+0xcae4>
   1e174:	str	r0, [fp, #-4]
   1e178:	str	r1, [fp, #-8]
   1e17c:	str	r2, [fp, #-12]
   1e180:	str	r3, [sp, #16]
   1e184:	mov	r0, ip
   1e188:	movw	r1, #0
   1e18c:	and	r1, r1, #255	; 0xff
   1e190:	movw	r2, #4
   1e194:	str	ip, [sp, #4]
   1e198:	str	lr, [sp]
   1e19c:	bl	11658 <memset@plt>
   1e1a0:	ldr	r0, [sp, #16]
   1e1a4:	ldr	r1, [sp, #12]
   1e1a8:	and	r0, r0, #255	; 0xff
   1e1ac:	mvn	r2, #255	; 0xff
   1e1b0:	and	r1, r1, r2
   1e1b4:	orr	r0, r1, r0
   1e1b8:	str	r0, [sp, #12]
   1e1bc:	ldr	r0, [sp, #12]
   1e1c0:	ldr	r1, [sp]
   1e1c4:	and	r0, r0, r1
   1e1c8:	str	r0, [sp, #12]
   1e1cc:	ldr	r0, [sp, #12]
   1e1d0:	mvn	r2, #262144	; 0x40000
   1e1d4:	and	r0, r0, r2
   1e1d8:	str	r0, [sp, #12]
   1e1dc:	ldr	r0, [sp, #12]
   1e1e0:	mvn	r2, #524288	; 0x80000
   1e1e4:	and	r0, r0, r2
   1e1e8:	str	r0, [sp, #12]
   1e1ec:	ldr	r0, [sp, #12]
   1e1f0:	mvn	r2, #1048576	; 0x100000
   1e1f4:	and	r0, r0, r2
   1e1f8:	str	r0, [sp, #12]
   1e1fc:	ldr	r0, [sp, #12]
   1e200:	mvn	r2, #2097152	; 0x200000
   1e204:	and	r0, r0, r2
   1e208:	str	r0, [sp, #12]
   1e20c:	ldr	r0, [sp, #12]
   1e210:	mvn	r2, #4194304	; 0x400000
   1e214:	and	r0, r0, r2
   1e218:	str	r0, [sp, #12]
   1e21c:	ldr	r0, [fp, #-4]
   1e220:	ldr	r1, [fp, #-8]
   1e224:	ldr	r2, [fp, #-12]
   1e228:	ldr	r3, [sp, #4]
   1e22c:	bl	201c4 <__assert_fail@plt+0xea70>
   1e230:	mov	sp, fp
   1e234:	pop	{fp, pc}
   1e238:			; <UNDEFINED> instruction: 0xfffc00ff
   1e23c:	push	{fp, lr}
   1e240:	mov	fp, sp
   1e244:	sub	sp, sp, #64	; 0x40
   1e248:	str	r0, [fp, #-8]
   1e24c:	str	r1, [fp, #-12]
   1e250:	str	r2, [fp, #-16]
   1e254:	ldr	r0, [fp, #-12]
   1e258:	ldr	r0, [r0, #56]	; 0x38
   1e25c:	ldr	r1, [fp, #-12]
   1e260:	ldr	r1, [r1, #40]	; 0x28
   1e264:	cmp	r0, r1
   1e268:	bgt	1e290 <__assert_fail@plt+0xcb3c>
   1e26c:	ldr	r0, [fp, #-8]
   1e270:	ldr	r1, [r0, #4]
   1e274:	mvn	r2, #255	; 0xff
   1e278:	and	r1, r1, r2
   1e27c:	orr	r1, r1, #2
   1e280:	str	r1, [r0, #4]
   1e284:	movw	r0, #0
   1e288:	str	r0, [fp, #-4]
   1e28c:	b	1f098 <__assert_fail@plt+0xd944>
   1e290:	ldr	r0, [fp, #-12]
   1e294:	ldr	r0, [r0, #4]
   1e298:	ldr	r1, [fp, #-12]
   1e29c:	ldr	r1, [r1, #40]	; 0x28
   1e2a0:	add	r1, r1, #0
   1e2a4:	add	r0, r0, r1
   1e2a8:	ldrb	r0, [r0]
   1e2ac:	strb	r0, [fp, #-17]	; 0xffffffef
   1e2b0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1e2b4:	ldr	r1, [fp, #-8]
   1e2b8:	strb	r0, [r1]
   1e2bc:	ldr	r0, [fp, #-8]
   1e2c0:	ldr	r1, [r0, #4]
   1e2c4:	mvn	r2, #4194304	; 0x400000
   1e2c8:	and	r1, r1, r2
   1e2cc:	str	r1, [r0, #4]
   1e2d0:	ldr	r0, [fp, #-8]
   1e2d4:	ldr	r1, [r0, #4]
   1e2d8:	mvn	r2, #2097152	; 0x200000
   1e2dc:	and	r1, r1, r2
   1e2e0:	str	r1, [r0, #4]
   1e2e4:	ldr	r0, [fp, #-12]
   1e2e8:	ldr	r0, [r0, #80]	; 0x50
   1e2ec:	cmp	r0, #1
   1e2f0:	ble	1e364 <__assert_fail@plt+0xcc10>
   1e2f4:	ldr	r0, [fp, #-12]
   1e2f8:	ldr	r0, [r0, #40]	; 0x28
   1e2fc:	ldr	r1, [fp, #-12]
   1e300:	ldr	r1, [r1, #28]
   1e304:	cmp	r0, r1
   1e308:	beq	1e364 <__assert_fail@plt+0xcc10>
   1e30c:	ldr	r0, [fp, #-12]
   1e310:	ldr	r1, [r0, #8]
   1e314:	ldr	r0, [r0, #40]	; 0x28
   1e318:	add	r0, r1, r0, lsl #2
   1e31c:	ldr	r0, [r0]
   1e320:	cmn	r0, #1
   1e324:	bne	1e364 <__assert_fail@plt+0xcc10>
   1e328:	ldr	r0, [fp, #-8]
   1e32c:	ldr	r1, [r0, #4]
   1e330:	mvn	r2, #255	; 0xff
   1e334:	and	r1, r1, r2
   1e338:	orr	r1, r1, #1
   1e33c:	str	r1, [r0, #4]
   1e340:	ldr	r0, [fp, #-8]
   1e344:	ldr	r1, [r0, #4]
   1e348:	mvn	r2, #2097152	; 0x200000
   1e34c:	and	r1, r1, r2
   1e350:	orr	r1, r1, #2097152	; 0x200000
   1e354:	str	r1, [r0, #4]
   1e358:	movw	r0, #1
   1e35c:	str	r0, [fp, #-4]
   1e360:	b	1f098 <__assert_fail@plt+0xd944>
   1e364:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1e368:	cmp	r0, #92	; 0x5c
   1e36c:	bne	1ea3c <__assert_fail@plt+0xd2e8>
   1e370:	ldr	r0, [fp, #-12]
   1e374:	ldr	r0, [r0, #40]	; 0x28
   1e378:	add	r0, r0, #1
   1e37c:	ldr	r1, [fp, #-12]
   1e380:	ldr	r1, [r1, #48]	; 0x30
   1e384:	cmp	r0, r1
   1e388:	blt	1e3b0 <__assert_fail@plt+0xcc5c>
   1e38c:	ldr	r0, [fp, #-8]
   1e390:	ldr	r1, [r0, #4]
   1e394:	mvn	r2, #255	; 0xff
   1e398:	and	r1, r1, r2
   1e39c:	orr	r1, r1, #36	; 0x24
   1e3a0:	str	r1, [r0, #4]
   1e3a4:	movw	r0, #1
   1e3a8:	str	r0, [fp, #-4]
   1e3ac:	b	1f098 <__assert_fail@plt+0xd944>
   1e3b0:	ldr	r0, [fp, #-12]
   1e3b4:	movw	r1, #1
   1e3b8:	bl	1f0a8 <__assert_fail@plt+0xd954>
   1e3bc:	strb	r0, [fp, #-18]	; 0xffffffee
   1e3c0:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1e3c4:	ldr	r1, [fp, #-8]
   1e3c8:	strb	r0, [r1]
   1e3cc:	ldr	r0, [fp, #-8]
   1e3d0:	ldr	r1, [r0, #4]
   1e3d4:	mvn	r2, #255	; 0xff
   1e3d8:	and	r1, r1, r2
   1e3dc:	orr	r1, r1, #1
   1e3e0:	str	r1, [r0, #4]
   1e3e4:	ldr	r0, [fp, #-12]
   1e3e8:	ldr	r0, [r0, #80]	; 0x50
   1e3ec:	cmp	r0, #1
   1e3f0:	ble	1e474 <__assert_fail@plt+0xcd20>
   1e3f4:	ldr	r0, [fp, #-12]
   1e3f8:	ldr	r1, [fp, #-12]
   1e3fc:	ldr	r1, [r1, #40]	; 0x28
   1e400:	add	r1, r1, #1
   1e404:	bl	1f268 <__assert_fail@plt+0xdb14>
   1e408:	str	r0, [fp, #-24]	; 0xffffffe8
   1e40c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e410:	bl	11634 <iswalnum@plt>
   1e414:	cmp	r0, #0
   1e418:	movw	r0, #1
   1e41c:	str	r0, [sp, #20]
   1e420:	bne	1e438 <__assert_fail@plt+0xcce4>
   1e424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e428:	cmp	r0, #95	; 0x5f
   1e42c:	movw	r0, #0
   1e430:	moveq	r0, #1
   1e434:	str	r0, [sp, #20]
   1e438:	ldr	r0, [sp, #20]
   1e43c:	and	r0, r0, #1
   1e440:	cmp	r0, #0
   1e444:	movw	r0, #0
   1e448:	movne	r0, #1
   1e44c:	and	r0, r0, #1
   1e450:	ldr	r1, [fp, #-8]
   1e454:	ldr	r2, [r1, #4]
   1e458:	and	r0, r0, #1
   1e45c:	lsl	r0, r0, #22
   1e460:	mvn	r3, #4194304	; 0x400000
   1e464:	and	r2, r2, r3
   1e468:	orr	r0, r2, r0
   1e46c:	str	r0, [r1, #4]
   1e470:	b	1e4ec <__assert_fail@plt+0xcd98>
   1e474:	bl	115e0 <__ctype_b_loc@plt>
   1e478:	ldr	r0, [r0]
   1e47c:	ldrb	r1, [fp, #-18]	; 0xffffffee
   1e480:	mov	r2, r1
   1e484:	add	r0, r0, r1, lsl #1
   1e488:	ldrh	r0, [r0]
   1e48c:	and	r0, r0, #8
   1e490:	cmp	r0, #0
   1e494:	movw	r0, #1
   1e498:	str	r0, [sp, #16]
   1e49c:	bne	1e4b4 <__assert_fail@plt+0xcd60>
   1e4a0:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1e4a4:	cmp	r0, #95	; 0x5f
   1e4a8:	movw	r0, #0
   1e4ac:	moveq	r0, #1
   1e4b0:	str	r0, [sp, #16]
   1e4b4:	ldr	r0, [sp, #16]
   1e4b8:	and	r0, r0, #1
   1e4bc:	cmp	r0, #0
   1e4c0:	movw	r0, #0
   1e4c4:	movne	r0, #1
   1e4c8:	and	r0, r0, #1
   1e4cc:	ldr	r1, [fp, #-8]
   1e4d0:	ldr	r2, [r1, #4]
   1e4d4:	and	r0, r0, #1
   1e4d8:	lsl	r0, r0, #22
   1e4dc:	mvn	r3, #4194304	; 0x400000
   1e4e0:	and	r2, r2, r3
   1e4e4:	orr	r0, r2, r0
   1e4e8:	str	r0, [r1, #4]
   1e4ec:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1e4f0:	sub	r0, r0, #39	; 0x27
   1e4f4:	cmp	r0, #86	; 0x56
   1e4f8:	str	r0, [sp, #12]
   1e4fc:	bhi	1ea2c <__assert_fail@plt+0xd2d8>
   1e500:	add	r0, pc, #8
   1e504:	ldr	r1, [sp, #12]
   1e508:	ldr	r0, [r0, r1, lsl #2]
   1e50c:	mov	pc, r0
   1e510:	andeq	lr, r1, ip, lsr #17
   1e514:	andeq	lr, r1, r4, ror #17
   1e518:	andeq	lr, r1, r0, lsl r9
   1e51c:	andeq	lr, r1, ip, lsr #20
   1e520:	andeq	lr, r1, ip, lsr r9
   1e524:	andeq	lr, r1, ip, lsr #20
   1e528:	andeq	lr, r1, ip, lsr #20
   1e52c:	andeq	lr, r1, ip, lsr #20
   1e530:	andeq	lr, r1, ip, lsr #20
   1e534:	andeq	lr, r1, ip, lsr #20
   1e538:	andeq	lr, r1, r8, lsr #13
   1e53c:	andeq	lr, r1, r8, lsr #13
   1e540:	andeq	lr, r1, r8, lsr #13
   1e544:	andeq	lr, r1, r8, lsr #13
   1e548:	andeq	lr, r1, r8, lsr #13
   1e54c:	andeq	lr, r1, r8, lsr #13
   1e550:	andeq	lr, r1, r8, lsr #13
   1e554:	andeq	lr, r1, r8, lsr #13
   1e558:	andeq	lr, r1, r8, lsr #13
   1e55c:	andeq	lr, r1, ip, lsr #20
   1e560:	andeq	lr, r1, ip, lsr #20
   1e564:	andeq	lr, r1, r4, ror #13
   1e568:	andeq	lr, r1, ip, lsr #20
   1e56c:	andeq	lr, r1, ip, lsl r7
   1e570:	andeq	lr, r1, r8, ror r9
   1e574:	andeq	lr, r1, ip, lsr #20
   1e578:	andeq	lr, r1, ip, lsr #20
   1e57c:	andeq	lr, r1, ip, lsl #15
   1e580:	andeq	lr, r1, ip, lsr #20
   1e584:	andeq	lr, r1, ip, lsr #20
   1e588:	andeq	lr, r1, ip, lsr #20
   1e58c:	andeq	lr, r1, ip, lsr #20
   1e590:	andeq	lr, r1, ip, lsr #20
   1e594:	andeq	lr, r1, ip, lsr #20
   1e598:	andeq	lr, r1, ip, lsr #20
   1e59c:	andeq	lr, r1, ip, lsr #20
   1e5a0:	andeq	lr, r1, ip, lsr #20
   1e5a4:	andeq	lr, r1, ip, lsr #20
   1e5a8:	andeq	lr, r1, ip, lsr #20
   1e5ac:	andeq	lr, r1, ip, lsr #20
   1e5b0:	andeq	lr, r1, ip, lsr #20
   1e5b4:	andeq	lr, r1, ip, lsr #20
   1e5b8:	andeq	lr, r1, ip, lsr #20
   1e5bc:	andeq	lr, r1, ip, lsr #20
   1e5c0:	andeq	lr, r1, r8, asr #16
   1e5c4:	andeq	lr, r1, ip, lsr #20
   1e5c8:	andeq	lr, r1, ip, lsr #20
   1e5cc:	andeq	lr, r1, ip, lsr #20
   1e5d0:	strdeq	lr, [r1], -r0
   1e5d4:	andeq	lr, r1, ip, lsr #20
   1e5d8:	andeq	lr, r1, ip, lsr #20
   1e5dc:	andeq	lr, r1, ip, lsr #20
   1e5e0:	andeq	lr, r1, ip, lsr #20
   1e5e4:	andeq	lr, r1, ip, lsr #20
   1e5e8:	andeq	lr, r1, ip, lsr #20
   1e5ec:	andeq	lr, r1, ip, lsr #20
   1e5f0:	andeq	lr, r1, ip, lsr #20
   1e5f4:	andeq	lr, r1, r4, ror r8
   1e5f8:	andeq	lr, r1, ip, lsr #20
   1e5fc:	andeq	lr, r1, r4, asr r7
   1e600:	andeq	lr, r1, ip, lsr #20
   1e604:	andeq	lr, r1, ip, lsr #20
   1e608:	andeq	lr, r1, ip, lsr #20
   1e60c:	andeq	lr, r1, ip, lsr #20
   1e610:	andeq	lr, r1, ip, lsr #20
   1e614:	andeq	lr, r1, ip, lsr #20
   1e618:	andeq	lr, r1, ip, lsr #20
   1e61c:	andeq	lr, r1, ip, lsr #20
   1e620:	andeq	lr, r1, ip, lsr #20
   1e624:	andeq	lr, r1, ip, lsr #20
   1e628:	andeq	lr, r1, ip, lsr #20
   1e62c:	andeq	lr, r1, ip, lsr #20
   1e630:	andeq	lr, r1, ip, lsr #20
   1e634:	andeq	lr, r1, ip, lsr #20
   1e638:	andeq	lr, r1, ip, lsr #20
   1e63c:	andeq	lr, r1, ip, lsr #20
   1e640:	andeq	lr, r1, ip, lsl r8
   1e644:	andeq	lr, r1, ip, lsr #20
   1e648:	andeq	lr, r1, ip, lsr #20
   1e64c:	andeq	lr, r1, ip, lsr #20
   1e650:	andeq	lr, r1, r4, asr #15
   1e654:	andeq	lr, r1, ip, lsr #20
   1e658:	andeq	lr, r1, ip, lsr #20
   1e65c:	andeq	lr, r1, ip, lsr #20
   1e660:			; <UNDEFINED> instruction: 0x0001e9b4
   1e664:	andeq	lr, r1, ip, ror #12
   1e668:	strdeq	lr, [r1], -r0
   1e66c:	ldr	r0, [fp, #-16]
   1e670:	and	r0, r0, #1024	; 0x400
   1e674:	cmp	r0, #0
   1e678:	bne	1e6a4 <__assert_fail@plt+0xcf50>
   1e67c:	ldr	r0, [fp, #-16]
   1e680:	and	r0, r0, #32768	; 0x8000
   1e684:	cmp	r0, #0
   1e688:	bne	1e6a4 <__assert_fail@plt+0xcf50>
   1e68c:	ldr	r0, [fp, #-8]
   1e690:	ldr	r1, [r0, #4]
   1e694:	mvn	r2, #255	; 0xff
   1e698:	and	r1, r1, r2
   1e69c:	orr	r1, r1, #10
   1e6a0:	str	r1, [r0, #4]
   1e6a4:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e6a8:	ldr	r0, [fp, #-16]
   1e6ac:	and	r0, r0, #16384	; 0x4000
   1e6b0:	cmp	r0, #0
   1e6b4:	bne	1e6e0 <__assert_fail@plt+0xcf8c>
   1e6b8:	ldr	r0, [fp, #-8]
   1e6bc:	ldr	r1, [r0, #4]
   1e6c0:	mvn	r2, #255	; 0xff
   1e6c4:	and	r1, r1, r2
   1e6c8:	orr	r1, r1, #4
   1e6cc:	str	r1, [r0, #4]
   1e6d0:	ldrb	r0, [fp, #-18]	; 0xffffffee
   1e6d4:	sub	r0, r0, #49	; 0x31
   1e6d8:	ldr	r1, [fp, #-8]
   1e6dc:	str	r0, [r1]
   1e6e0:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e6e4:	ldr	r0, [fp, #-16]
   1e6e8:	and	r0, r0, #524288	; 0x80000
   1e6ec:	cmp	r0, #0
   1e6f0:	bne	1e718 <__assert_fail@plt+0xcfc4>
   1e6f4:	ldr	r0, [fp, #-8]
   1e6f8:	ldr	r1, [r0, #4]
   1e6fc:	mvn	r2, #255	; 0xff
   1e700:	and	r1, r1, r2
   1e704:	orr	r1, r1, #12
   1e708:	str	r1, [r0, #4]
   1e70c:	ldr	r0, [fp, #-8]
   1e710:	movw	r1, #6
   1e714:	str	r1, [r0]
   1e718:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e71c:	ldr	r0, [fp, #-16]
   1e720:	and	r0, r0, #524288	; 0x80000
   1e724:	cmp	r0, #0
   1e728:	bne	1e750 <__assert_fail@plt+0xcffc>
   1e72c:	ldr	r0, [fp, #-8]
   1e730:	ldr	r1, [r0, #4]
   1e734:	mvn	r2, #255	; 0xff
   1e738:	and	r1, r1, r2
   1e73c:	orr	r1, r1, #12
   1e740:	str	r1, [r0, #4]
   1e744:	ldr	r0, [fp, #-8]
   1e748:	movw	r1, #9
   1e74c:	str	r1, [r0]
   1e750:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e754:	ldr	r0, [fp, #-16]
   1e758:	and	r0, r0, #524288	; 0x80000
   1e75c:	cmp	r0, #0
   1e760:	bne	1e788 <__assert_fail@plt+0xd034>
   1e764:	ldr	r0, [fp, #-8]
   1e768:	ldr	r1, [r0, #4]
   1e76c:	mvn	r2, #255	; 0xff
   1e770:	and	r1, r1, r2
   1e774:	orr	r1, r1, #12
   1e778:	str	r1, [r0, #4]
   1e77c:	ldr	r0, [fp, #-8]
   1e780:	movw	r1, #256	; 0x100
   1e784:	str	r1, [r0]
   1e788:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e78c:	ldr	r0, [fp, #-16]
   1e790:	and	r0, r0, #524288	; 0x80000
   1e794:	cmp	r0, #0
   1e798:	bne	1e7c0 <__assert_fail@plt+0xd06c>
   1e79c:	ldr	r0, [fp, #-8]
   1e7a0:	ldr	r1, [r0, #4]
   1e7a4:	mvn	r2, #255	; 0xff
   1e7a8:	and	r1, r1, r2
   1e7ac:	orr	r1, r1, #12
   1e7b0:	str	r1, [r0, #4]
   1e7b4:	ldr	r0, [fp, #-8]
   1e7b8:	movw	r1, #512	; 0x200
   1e7bc:	str	r1, [r0]
   1e7c0:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e7c4:	ldr	r0, [fp, #-16]
   1e7c8:	and	r0, r0, #524288	; 0x80000
   1e7cc:	cmp	r0, #0
   1e7d0:	bne	1e7ec <__assert_fail@plt+0xd098>
   1e7d4:	ldr	r0, [fp, #-8]
   1e7d8:	ldr	r1, [r0, #4]
   1e7dc:	mvn	r2, #255	; 0xff
   1e7e0:	and	r1, r1, r2
   1e7e4:	orr	r1, r1, #32
   1e7e8:	str	r1, [r0, #4]
   1e7ec:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e7f0:	ldr	r0, [fp, #-16]
   1e7f4:	and	r0, r0, #524288	; 0x80000
   1e7f8:	cmp	r0, #0
   1e7fc:	bne	1e818 <__assert_fail@plt+0xd0c4>
   1e800:	ldr	r0, [fp, #-8]
   1e804:	ldr	r1, [r0, #4]
   1e808:	mvn	r2, #255	; 0xff
   1e80c:	and	r1, r1, r2
   1e810:	orr	r1, r1, #33	; 0x21
   1e814:	str	r1, [r0, #4]
   1e818:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e81c:	ldr	r0, [fp, #-16]
   1e820:	and	r0, r0, #524288	; 0x80000
   1e824:	cmp	r0, #0
   1e828:	bne	1e844 <__assert_fail@plt+0xd0f0>
   1e82c:	ldr	r0, [fp, #-8]
   1e830:	ldr	r1, [r0, #4]
   1e834:	mvn	r2, #255	; 0xff
   1e838:	and	r1, r1, r2
   1e83c:	orr	r1, r1, #34	; 0x22
   1e840:	str	r1, [r0, #4]
   1e844:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e848:	ldr	r0, [fp, #-16]
   1e84c:	and	r0, r0, #524288	; 0x80000
   1e850:	cmp	r0, #0
   1e854:	bne	1e870 <__assert_fail@plt+0xd11c>
   1e858:	ldr	r0, [fp, #-8]
   1e85c:	ldr	r1, [r0, #4]
   1e860:	mvn	r2, #255	; 0xff
   1e864:	and	r1, r1, r2
   1e868:	orr	r1, r1, #35	; 0x23
   1e86c:	str	r1, [r0, #4]
   1e870:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e874:	ldr	r0, [fp, #-16]
   1e878:	and	r0, r0, #524288	; 0x80000
   1e87c:	cmp	r0, #0
   1e880:	bne	1e8a8 <__assert_fail@plt+0xd154>
   1e884:	ldr	r0, [fp, #-8]
   1e888:	ldr	r1, [r0, #4]
   1e88c:	mvn	r2, #255	; 0xff
   1e890:	and	r1, r1, r2
   1e894:	orr	r1, r1, #12
   1e898:	str	r1, [r0, #4]
   1e89c:	ldr	r0, [fp, #-8]
   1e8a0:	movw	r1, #64	; 0x40
   1e8a4:	str	r1, [r0]
   1e8a8:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e8ac:	ldr	r0, [fp, #-16]
   1e8b0:	and	r0, r0, #524288	; 0x80000
   1e8b4:	cmp	r0, #0
   1e8b8:	bne	1e8e0 <__assert_fail@plt+0xd18c>
   1e8bc:	ldr	r0, [fp, #-8]
   1e8c0:	ldr	r1, [r0, #4]
   1e8c4:	mvn	r2, #255	; 0xff
   1e8c8:	and	r1, r1, r2
   1e8cc:	orr	r1, r1, #12
   1e8d0:	str	r1, [r0, #4]
   1e8d4:	ldr	r0, [fp, #-8]
   1e8d8:	movw	r1, #128	; 0x80
   1e8dc:	str	r1, [r0]
   1e8e0:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e8e4:	ldr	r0, [fp, #-16]
   1e8e8:	and	r0, r0, #8192	; 0x2000
   1e8ec:	cmp	r0, #0
   1e8f0:	bne	1e90c <__assert_fail@plt+0xd1b8>
   1e8f4:	ldr	r0, [fp, #-8]
   1e8f8:	ldr	r1, [r0, #4]
   1e8fc:	mvn	r2, #255	; 0xff
   1e900:	and	r1, r1, r2
   1e904:	orr	r1, r1, #8
   1e908:	str	r1, [r0, #4]
   1e90c:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e910:	ldr	r0, [fp, #-16]
   1e914:	and	r0, r0, #8192	; 0x2000
   1e918:	cmp	r0, #0
   1e91c:	bne	1e938 <__assert_fail@plt+0xd1e4>
   1e920:	ldr	r0, [fp, #-8]
   1e924:	ldr	r1, [r0, #4]
   1e928:	mvn	r2, #255	; 0xff
   1e92c:	and	r1, r1, r2
   1e930:	orr	r1, r1, #9
   1e934:	str	r1, [r0, #4]
   1e938:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e93c:	ldr	r0, [fp, #-16]
   1e940:	and	r0, r0, #1024	; 0x400
   1e944:	cmp	r0, #0
   1e948:	bne	1e974 <__assert_fail@plt+0xd220>
   1e94c:	ldr	r0, [fp, #-16]
   1e950:	and	r0, r0, #2
   1e954:	cmp	r0, #0
   1e958:	beq	1e974 <__assert_fail@plt+0xd220>
   1e95c:	ldr	r0, [fp, #-8]
   1e960:	ldr	r1, [r0, #4]
   1e964:	mvn	r2, #255	; 0xff
   1e968:	and	r1, r1, r2
   1e96c:	orr	r1, r1, #18
   1e970:	str	r1, [r0, #4]
   1e974:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e978:	ldr	r0, [fp, #-16]
   1e97c:	and	r0, r0, #1024	; 0x400
   1e980:	cmp	r0, #0
   1e984:	bne	1e9b0 <__assert_fail@plt+0xd25c>
   1e988:	ldr	r0, [fp, #-16]
   1e98c:	and	r0, r0, #2
   1e990:	cmp	r0, #0
   1e994:	beq	1e9b0 <__assert_fail@plt+0xd25c>
   1e998:	ldr	r0, [fp, #-8]
   1e99c:	ldr	r1, [r0, #4]
   1e9a0:	mvn	r2, #255	; 0xff
   1e9a4:	and	r1, r1, r2
   1e9a8:	orr	r1, r1, #19
   1e9ac:	str	r1, [r0, #4]
   1e9b0:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e9b4:	ldr	r0, [fp, #-16]
   1e9b8:	and	r0, r0, #512	; 0x200
   1e9bc:	cmp	r0, #0
   1e9c0:	beq	1e9ec <__assert_fail@plt+0xd298>
   1e9c4:	ldr	r0, [fp, #-16]
   1e9c8:	and	r0, r0, #4096	; 0x1000
   1e9cc:	cmp	r0, #0
   1e9d0:	bne	1e9ec <__assert_fail@plt+0xd298>
   1e9d4:	ldr	r0, [fp, #-8]
   1e9d8:	ldr	r1, [r0, #4]
   1e9dc:	mvn	r2, #255	; 0xff
   1e9e0:	and	r1, r1, r2
   1e9e4:	orr	r1, r1, #23
   1e9e8:	str	r1, [r0, #4]
   1e9ec:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1e9f0:	ldr	r0, [fp, #-16]
   1e9f4:	and	r0, r0, #512	; 0x200
   1e9f8:	cmp	r0, #0
   1e9fc:	beq	1ea28 <__assert_fail@plt+0xd2d4>
   1ea00:	ldr	r0, [fp, #-16]
   1ea04:	and	r0, r0, #4096	; 0x1000
   1ea08:	cmp	r0, #0
   1ea0c:	bne	1ea28 <__assert_fail@plt+0xd2d4>
   1ea10:	ldr	r0, [fp, #-8]
   1ea14:	ldr	r1, [r0, #4]
   1ea18:	mvn	r2, #255	; 0xff
   1ea1c:	and	r1, r1, r2
   1ea20:	orr	r1, r1, #24
   1ea24:	str	r1, [r0, #4]
   1ea28:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1ea2c:	b	1ea30 <__assert_fail@plt+0xd2dc>
   1ea30:	movw	r0, #2
   1ea34:	str	r0, [fp, #-4]
   1ea38:	b	1f098 <__assert_fail@plt+0xd944>
   1ea3c:	ldr	r0, [fp, #-8]
   1ea40:	ldr	r1, [r0, #4]
   1ea44:	mvn	r2, #255	; 0xff
   1ea48:	and	r1, r1, r2
   1ea4c:	orr	r1, r1, #1
   1ea50:	str	r1, [r0, #4]
   1ea54:	ldr	r0, [fp, #-12]
   1ea58:	ldr	r0, [r0, #80]	; 0x50
   1ea5c:	cmp	r0, #1
   1ea60:	ble	1eae0 <__assert_fail@plt+0xd38c>
   1ea64:	ldr	r0, [fp, #-12]
   1ea68:	ldr	r1, [fp, #-12]
   1ea6c:	ldr	r1, [r1, #40]	; 0x28
   1ea70:	bl	1f268 <__assert_fail@plt+0xdb14>
   1ea74:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ea7c:	bl	11634 <iswalnum@plt>
   1ea80:	cmp	r0, #0
   1ea84:	movw	r0, #1
   1ea88:	str	r0, [sp, #8]
   1ea8c:	bne	1eaa4 <__assert_fail@plt+0xd350>
   1ea90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ea94:	cmp	r0, #95	; 0x5f
   1ea98:	movw	r0, #0
   1ea9c:	moveq	r0, #1
   1eaa0:	str	r0, [sp, #8]
   1eaa4:	ldr	r0, [sp, #8]
   1eaa8:	and	r0, r0, #1
   1eaac:	cmp	r0, #0
   1eab0:	movw	r0, #0
   1eab4:	movne	r0, #1
   1eab8:	and	r0, r0, #1
   1eabc:	ldr	r1, [fp, #-8]
   1eac0:	ldr	r2, [r1, #4]
   1eac4:	and	r0, r0, #1
   1eac8:	lsl	r0, r0, #22
   1eacc:	mvn	r3, #4194304	; 0x400000
   1ead0:	and	r2, r2, r3
   1ead4:	orr	r0, r2, r0
   1ead8:	str	r0, [r1, #4]
   1eadc:	b	1eb50 <__assert_fail@plt+0xd3fc>
   1eae0:	bl	115e0 <__ctype_b_loc@plt>
   1eae4:	ldr	r0, [r0]
   1eae8:	ldr	r1, [fp, #-8]
   1eaec:	ldrb	r1, [r1]
   1eaf0:	mov	r2, r1
   1eaf4:	add	r0, r0, r1, lsl #1
   1eaf8:	ldrh	r0, [r0]
   1eafc:	and	r0, r0, #8
   1eb00:	cmp	r0, #0
   1eb04:	movw	r0, #1
   1eb08:	str	r0, [sp, #4]
   1eb0c:	bne	1eb28 <__assert_fail@plt+0xd3d4>
   1eb10:	ldr	r0, [fp, #-8]
   1eb14:	ldrb	r0, [r0]
   1eb18:	cmp	r0, #95	; 0x5f
   1eb1c:	movw	r0, #0
   1eb20:	moveq	r0, #1
   1eb24:	str	r0, [sp, #4]
   1eb28:	ldr	r0, [sp, #4]
   1eb2c:	and	r0, r0, #1
   1eb30:	ldr	r1, [fp, #-8]
   1eb34:	ldr	r2, [r1, #4]
   1eb38:	and	r0, r0, #1
   1eb3c:	lsl	r0, r0, #22
   1eb40:	mvn	r3, #4194304	; 0x400000
   1eb44:	and	r2, r2, r3
   1eb48:	orr	r0, r2, r0
   1eb4c:	str	r0, [r1, #4]
   1eb50:	ldrb	r0, [fp, #-17]	; 0xffffffef
   1eb54:	sub	r0, r0, #10
   1eb58:	cmp	r0, #115	; 0x73
   1eb5c:	str	r0, [sp]
   1eb60:	bhi	1f08c <__assert_fail@plt+0xd938>
   1eb64:	add	r0, pc, #8
   1eb68:	ldr	r1, [sp]
   1eb6c:	ldr	r0, [r0, r1, lsl #2]
   1eb70:	mov	pc, r0
   1eb74:	andeq	lr, r1, r4, asr #26
   1eb78:	andeq	pc, r1, ip, lsl #1
   1eb7c:	andeq	pc, r1, ip, lsl #1
   1eb80:	andeq	pc, r1, ip, lsl #1
   1eb84:	andeq	pc, r1, ip, lsl #1
   1eb88:	andeq	pc, r1, ip, lsl #1
   1eb8c:	andeq	pc, r1, ip, lsl #1
   1eb90:	andeq	pc, r1, ip, lsl #1
   1eb94:	andeq	pc, r1, ip, lsl #1
   1eb98:	andeq	pc, r1, ip, lsl #1
   1eb9c:	andeq	pc, r1, ip, lsl #1
   1eba0:	andeq	pc, r1, ip, lsl #1
   1eba4:	andeq	pc, r1, ip, lsl #1
   1eba8:	andeq	pc, r1, ip, lsl #1
   1ebac:	andeq	pc, r1, ip, lsl #1
   1ebb0:	andeq	pc, r1, ip, lsl #1
   1ebb4:	andeq	pc, r1, ip, lsl #1
   1ebb8:	andeq	pc, r1, ip, lsl #1
   1ebbc:	andeq	pc, r1, ip, lsl #1
   1ebc0:	andeq	pc, r1, ip, lsl #1
   1ebc4:	andeq	pc, r1, ip, lsl #1
   1ebc8:	andeq	pc, r1, ip, lsl #1
   1ebcc:	andeq	pc, r1, ip, lsl #1
   1ebd0:	andeq	pc, r1, ip, lsl #1
   1ebd4:	andeq	pc, r1, ip, lsl #1
   1ebd8:	andeq	pc, r1, ip, lsl #1
   1ebdc:	ldrdeq	lr, [r1], -ip
   1ebe0:	andeq	pc, r1, ip, lsl #1
   1ebe4:	andeq	pc, r1, ip, lsl #1
   1ebe8:	andeq	pc, r1, ip, lsl #1
   1ebec:			; <UNDEFINED> instruction: 0x0001eeb8
   1ebf0:	andeq	lr, r1, r4, ror #29
   1ebf4:	andeq	lr, r1, ip, lsr #27
   1ebf8:	andeq	lr, r1, r8, asr #27
   1ebfc:	andeq	pc, r1, ip, lsl #1
   1ec00:	andeq	pc, r1, ip, lsl #1
   1ec04:	andeq	lr, r1, ip, lsr #30
   1ec08:	andeq	pc, r1, ip, lsl #1
   1ec0c:	andeq	pc, r1, ip, lsl #1
   1ec10:	andeq	pc, r1, ip, lsl #1
   1ec14:	andeq	pc, r1, ip, lsl #1
   1ec18:	andeq	pc, r1, ip, lsl #1
   1ec1c:	andeq	pc, r1, ip, lsl #1
   1ec20:	andeq	pc, r1, ip, lsl #1
   1ec24:	andeq	pc, r1, ip, lsl #1
   1ec28:	andeq	pc, r1, ip, lsl #1
   1ec2c:	andeq	pc, r1, ip, lsl #1
   1ec30:	andeq	pc, r1, ip, lsl #1
   1ec34:	andeq	pc, r1, ip, lsl #1
   1ec38:	andeq	pc, r1, ip, lsl #1
   1ec3c:	andeq	pc, r1, ip, lsl #1
   1ec40:	andeq	pc, r1, ip, lsl #1
   1ec44:	andeq	pc, r1, ip, lsl #1
   1ec48:	andeq	lr, r1, r4, lsl #28
   1ec4c:	andeq	pc, r1, ip, lsl #1
   1ec50:	andeq	pc, r1, ip, lsl #1
   1ec54:	andeq	pc, r1, ip, lsl #1
   1ec58:	andeq	pc, r1, ip, lsl #1
   1ec5c:	andeq	pc, r1, ip, lsl #1
   1ec60:	andeq	pc, r1, ip, lsl #1
   1ec64:	andeq	pc, r1, ip, lsl #1
   1ec68:	andeq	pc, r1, ip, lsl #1
   1ec6c:	andeq	pc, r1, ip, lsl #1
   1ec70:	andeq	pc, r1, ip, lsl #1
   1ec74:	andeq	pc, r1, ip, lsl #1
   1ec78:	andeq	pc, r1, ip, lsl #1
   1ec7c:	andeq	pc, r1, ip, lsl #1
   1ec80:	andeq	pc, r1, ip, lsl #1
   1ec84:	andeq	pc, r1, ip, lsl #1
   1ec88:	andeq	pc, r1, ip, lsl #1
   1ec8c:	andeq	pc, r1, ip, lsl #1
   1ec90:	andeq	pc, r1, ip, lsl #1
   1ec94:	andeq	pc, r1, ip, lsl #1
   1ec98:	andeq	pc, r1, ip, lsl #1
   1ec9c:	andeq	pc, r1, ip, lsl #1
   1eca0:	andeq	pc, r1, ip, lsl #1
   1eca4:	andeq	pc, r1, ip, lsl #1
   1eca8:	andeq	pc, r1, ip, lsl #1
   1ecac:	andeq	pc, r1, ip, lsl #1
   1ecb0:	andeq	pc, r1, ip, lsl #1
   1ecb4:	andeq	pc, r1, ip, lsl #1
   1ecb8:	andeq	lr, r1, r0, lsl pc
   1ecbc:	andeq	pc, r1, ip, lsl #1
   1ecc0:	andeq	pc, r1, ip, lsl #1
   1ecc4:	andeq	lr, r1, r8, asr #30
   1ecc8:	andeq	pc, r1, ip, lsl #1
   1eccc:	andeq	pc, r1, ip, lsl #1
   1ecd0:	andeq	pc, r1, ip, lsl #1
   1ecd4:	andeq	pc, r1, ip, lsl #1
   1ecd8:	andeq	pc, r1, ip, lsl #1
   1ecdc:	andeq	pc, r1, ip, lsl #1
   1ece0:	andeq	pc, r1, ip, lsl #1
   1ece4:	andeq	pc, r1, ip, lsl #1
   1ece8:	andeq	pc, r1, ip, lsl #1
   1ecec:	andeq	pc, r1, ip, lsl #1
   1ecf0:	andeq	pc, r1, ip, lsl #1
   1ecf4:	andeq	pc, r1, ip, lsl #1
   1ecf8:	andeq	pc, r1, ip, lsl #1
   1ecfc:	andeq	pc, r1, ip, lsl #1
   1ed00:	andeq	pc, r1, ip, lsl #1
   1ed04:	andeq	pc, r1, ip, lsl #1
   1ed08:	andeq	pc, r1, ip, lsl #1
   1ed0c:	andeq	pc, r1, ip, lsl #1
   1ed10:	andeq	pc, r1, ip, lsl #1
   1ed14:	andeq	pc, r1, ip, lsl #1
   1ed18:	andeq	pc, r1, ip, lsl #1
   1ed1c:	andeq	pc, r1, ip, lsl #1
   1ed20:	andeq	pc, r1, ip, lsl #1
   1ed24:	andeq	pc, r1, ip, lsl #1
   1ed28:	andeq	pc, r1, ip, lsl #1
   1ed2c:	andeq	pc, r1, ip, lsl #1
   1ed30:	andeq	pc, r1, ip, lsl #1
   1ed34:	andeq	pc, r1, ip, lsl #1
   1ed38:	andeq	lr, r1, r0, asr #28
   1ed3c:	andeq	lr, r1, r0, ror sp
   1ed40:	andeq	lr, r1, ip, ror lr
   1ed44:	ldr	r0, [fp, #-16]
   1ed48:	and	r0, r0, #2048	; 0x800
   1ed4c:	cmp	r0, #0
   1ed50:	beq	1ed6c <__assert_fail@plt+0xd618>
   1ed54:	ldr	r0, [fp, #-8]
   1ed58:	ldr	r1, [r0, #4]
   1ed5c:	mvn	r2, #255	; 0xff
   1ed60:	and	r1, r1, r2
   1ed64:	orr	r1, r1, #10
   1ed68:	str	r1, [r0, #4]
   1ed6c:	b	1f090 <__assert_fail@plt+0xd93c>
   1ed70:	ldr	r0, [fp, #-16]
   1ed74:	and	r0, r0, #1024	; 0x400
   1ed78:	cmp	r0, #0
   1ed7c:	bne	1eda8 <__assert_fail@plt+0xd654>
   1ed80:	ldr	r0, [fp, #-16]
   1ed84:	and	r0, r0, #32768	; 0x8000
   1ed88:	cmp	r0, #0
   1ed8c:	beq	1eda8 <__assert_fail@plt+0xd654>
   1ed90:	ldr	r0, [fp, #-8]
   1ed94:	ldr	r1, [r0, #4]
   1ed98:	mvn	r2, #255	; 0xff
   1ed9c:	and	r1, r1, r2
   1eda0:	orr	r1, r1, #10
   1eda4:	str	r1, [r0, #4]
   1eda8:	b	1f090 <__assert_fail@plt+0xd93c>
   1edac:	ldr	r0, [fp, #-8]
   1edb0:	ldr	r1, [r0, #4]
   1edb4:	mvn	r2, #255	; 0xff
   1edb8:	and	r1, r1, r2
   1edbc:	orr	r1, r1, #11
   1edc0:	str	r1, [r0, #4]
   1edc4:	b	1f090 <__assert_fail@plt+0xd93c>
   1edc8:	ldr	r0, [fp, #-16]
   1edcc:	and	r0, r0, #1024	; 0x400
   1edd0:	cmp	r0, #0
   1edd4:	bne	1ee00 <__assert_fail@plt+0xd6ac>
   1edd8:	ldr	r0, [fp, #-16]
   1eddc:	and	r0, r0, #2
   1ede0:	cmp	r0, #0
   1ede4:	bne	1ee00 <__assert_fail@plt+0xd6ac>
   1ede8:	ldr	r0, [fp, #-8]
   1edec:	ldr	r1, [r0, #4]
   1edf0:	mvn	r2, #255	; 0xff
   1edf4:	and	r1, r1, r2
   1edf8:	orr	r1, r1, #18
   1edfc:	str	r1, [r0, #4]
   1ee00:	b	1f090 <__assert_fail@plt+0xd93c>
   1ee04:	ldr	r0, [fp, #-16]
   1ee08:	and	r0, r0, #1024	; 0x400
   1ee0c:	cmp	r0, #0
   1ee10:	bne	1ee3c <__assert_fail@plt+0xd6e8>
   1ee14:	ldr	r0, [fp, #-16]
   1ee18:	and	r0, r0, #2
   1ee1c:	cmp	r0, #0
   1ee20:	bne	1ee3c <__assert_fail@plt+0xd6e8>
   1ee24:	ldr	r0, [fp, #-8]
   1ee28:	ldr	r1, [r0, #4]
   1ee2c:	mvn	r2, #255	; 0xff
   1ee30:	and	r1, r1, r2
   1ee34:	orr	r1, r1, #19
   1ee38:	str	r1, [r0, #4]
   1ee3c:	b	1f090 <__assert_fail@plt+0xd93c>
   1ee40:	ldr	r0, [fp, #-16]
   1ee44:	and	r0, r0, #512	; 0x200
   1ee48:	cmp	r0, #0
   1ee4c:	beq	1ee78 <__assert_fail@plt+0xd724>
   1ee50:	ldr	r0, [fp, #-16]
   1ee54:	and	r0, r0, #4096	; 0x1000
   1ee58:	cmp	r0, #0
   1ee5c:	beq	1ee78 <__assert_fail@plt+0xd724>
   1ee60:	ldr	r0, [fp, #-8]
   1ee64:	ldr	r1, [r0, #4]
   1ee68:	mvn	r2, #255	; 0xff
   1ee6c:	and	r1, r1, r2
   1ee70:	orr	r1, r1, #23
   1ee74:	str	r1, [r0, #4]
   1ee78:	b	1f090 <__assert_fail@plt+0xd93c>
   1ee7c:	ldr	r0, [fp, #-16]
   1ee80:	and	r0, r0, #512	; 0x200
   1ee84:	cmp	r0, #0
   1ee88:	beq	1eeb4 <__assert_fail@plt+0xd760>
   1ee8c:	ldr	r0, [fp, #-16]
   1ee90:	and	r0, r0, #4096	; 0x1000
   1ee94:	cmp	r0, #0
   1ee98:	beq	1eeb4 <__assert_fail@plt+0xd760>
   1ee9c:	ldr	r0, [fp, #-8]
   1eea0:	ldr	r1, [r0, #4]
   1eea4:	mvn	r2, #255	; 0xff
   1eea8:	and	r1, r1, r2
   1eeac:	orr	r1, r1, #24
   1eeb0:	str	r1, [r0, #4]
   1eeb4:	b	1f090 <__assert_fail@plt+0xd93c>
   1eeb8:	ldr	r0, [fp, #-16]
   1eebc:	and	r0, r0, #8192	; 0x2000
   1eec0:	cmp	r0, #0
   1eec4:	beq	1eee0 <__assert_fail@plt+0xd78c>
   1eec8:	ldr	r0, [fp, #-8]
   1eecc:	ldr	r1, [r0, #4]
   1eed0:	mvn	r2, #255	; 0xff
   1eed4:	and	r1, r1, r2
   1eed8:	orr	r1, r1, #8
   1eedc:	str	r1, [r0, #4]
   1eee0:	b	1f090 <__assert_fail@plt+0xd93c>
   1eee4:	ldr	r0, [fp, #-16]
   1eee8:	and	r0, r0, #8192	; 0x2000
   1eeec:	cmp	r0, #0
   1eef0:	beq	1ef0c <__assert_fail@plt+0xd7b8>
   1eef4:	ldr	r0, [fp, #-8]
   1eef8:	ldr	r1, [r0, #4]
   1eefc:	mvn	r2, #255	; 0xff
   1ef00:	and	r1, r1, r2
   1ef04:	orr	r1, r1, #9
   1ef08:	str	r1, [r0, #4]
   1ef0c:	b	1f090 <__assert_fail@plt+0xd93c>
   1ef10:	ldr	r0, [fp, #-8]
   1ef14:	ldr	r1, [r0, #4]
   1ef18:	mvn	r2, #255	; 0xff
   1ef1c:	and	r1, r1, r2
   1ef20:	orr	r1, r1, #20
   1ef24:	str	r1, [r0, #4]
   1ef28:	b	1f090 <__assert_fail@plt+0xd93c>
   1ef2c:	ldr	r0, [fp, #-8]
   1ef30:	ldr	r1, [r0, #4]
   1ef34:	mvn	r2, #255	; 0xff
   1ef38:	and	r1, r1, r2
   1ef3c:	orr	r1, r1, #5
   1ef40:	str	r1, [r0, #4]
   1ef44:	b	1f090 <__assert_fail@plt+0xd93c>
   1ef48:	ldr	r0, [pc, #340]	; 1f0a4 <__assert_fail@plt+0xd950>
   1ef4c:	ldr	r1, [fp, #-16]
   1ef50:	and	r0, r1, r0
   1ef54:	cmp	r0, #0
   1ef58:	bne	1efb4 <__assert_fail@plt+0xd860>
   1ef5c:	ldr	r0, [fp, #-12]
   1ef60:	ldr	r0, [r0, #40]	; 0x28
   1ef64:	cmp	r0, #0
   1ef68:	beq	1efb4 <__assert_fail@plt+0xd860>
   1ef6c:	ldr	r0, [fp, #-12]
   1ef70:	ldr	r0, [r0, #4]
   1ef74:	ldr	r1, [fp, #-12]
   1ef78:	ldr	r1, [r1, #40]	; 0x28
   1ef7c:	mvn	r2, #0
   1ef80:	add	r1, r1, r2
   1ef84:	add	r0, r0, r1
   1ef88:	ldrb	r0, [r0]
   1ef8c:	strb	r0, [fp, #-29]	; 0xffffffe3
   1ef90:	ldr	r0, [fp, #-16]
   1ef94:	and	r0, r0, #2048	; 0x800
   1ef98:	cmp	r0, #0
   1ef9c:	beq	1efac <__assert_fail@plt+0xd858>
   1efa0:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1efa4:	cmp	r0, #10
   1efa8:	beq	1efb0 <__assert_fail@plt+0xd85c>
   1efac:	b	1f090 <__assert_fail@plt+0xd93c>
   1efb0:	b	1efb4 <__assert_fail@plt+0xd860>
   1efb4:	ldr	r0, [fp, #-8]
   1efb8:	ldr	r1, [r0, #4]
   1efbc:	mvn	r2, #255	; 0xff
   1efc0:	and	r1, r1, r2
   1efc4:	orr	r1, r1, #12
   1efc8:	str	r1, [r0, #4]
   1efcc:	ldr	r0, [fp, #-8]
   1efd0:	movw	r1, #16
   1efd4:	str	r1, [r0]
   1efd8:	b	1f090 <__assert_fail@plt+0xd93c>
   1efdc:	ldr	r0, [fp, #-16]
   1efe0:	and	r0, r0, #8
   1efe4:	cmp	r0, #0
   1efe8:	bne	1f064 <__assert_fail@plt+0xd910>
   1efec:	ldr	r0, [fp, #-12]
   1eff0:	ldr	r0, [r0, #40]	; 0x28
   1eff4:	add	r0, r0, #1
   1eff8:	ldr	r1, [fp, #-12]
   1effc:	ldr	r1, [r1, #48]	; 0x30
   1f000:	cmp	r0, r1
   1f004:	beq	1f064 <__assert_fail@plt+0xd910>
   1f008:	ldr	r0, [fp, #-12]
   1f00c:	ldr	r1, [r0, #40]	; 0x28
   1f010:	add	r1, r1, #1
   1f014:	str	r1, [r0, #40]	; 0x28
   1f018:	ldr	r1, [fp, #-12]
   1f01c:	ldr	r2, [fp, #-16]
   1f020:	add	r0, sp, #24
   1f024:	bl	1e23c <__assert_fail@plt+0xcae8>
   1f028:	ldr	r1, [fp, #-12]
   1f02c:	ldr	r2, [r1, #40]	; 0x28
   1f030:	mvn	r3, #0
   1f034:	add	r2, r2, r3
   1f038:	str	r2, [r1, #40]	; 0x28
   1f03c:	ldr	r1, [sp, #28]
   1f040:	and	r1, r1, #255	; 0xff
   1f044:	cmp	r1, #10
   1f048:	beq	1f060 <__assert_fail@plt+0xd90c>
   1f04c:	ldr	r0, [sp, #28]
   1f050:	and	r0, r0, #255	; 0xff
   1f054:	cmp	r0, #9
   1f058:	beq	1f060 <__assert_fail@plt+0xd90c>
   1f05c:	b	1f090 <__assert_fail@plt+0xd93c>
   1f060:	b	1f064 <__assert_fail@plt+0xd910>
   1f064:	ldr	r0, [fp, #-8]
   1f068:	ldr	r1, [r0, #4]
   1f06c:	mvn	r2, #255	; 0xff
   1f070:	and	r1, r1, r2
   1f074:	orr	r1, r1, #12
   1f078:	str	r1, [r0, #4]
   1f07c:	ldr	r0, [fp, #-8]
   1f080:	movw	r1, #32
   1f084:	str	r1, [r0]
   1f088:	b	1f090 <__assert_fail@plt+0xd93c>
   1f08c:	b	1f090 <__assert_fail@plt+0xd93c>
   1f090:	movw	r0, #1
   1f094:	str	r0, [fp, #-4]
   1f098:	ldr	r0, [fp, #-4]
   1f09c:	mov	sp, fp
   1f0a0:	pop	{fp, pc}
   1f0a4:	addeq	r0, r0, r8
   1f0a8:	sub	sp, sp, #20
   1f0ac:	str	r0, [sp, #12]
   1f0b0:	str	r1, [sp, #8]
   1f0b4:	ldr	r0, [sp, #12]
   1f0b8:	ldrsb	r0, [r0, #75]	; 0x4b
   1f0bc:	cmp	r0, #0
   1f0c0:	movw	r0, #0
   1f0c4:	movne	r0, #1
   1f0c8:	mvn	r1, #0
   1f0cc:	eor	r0, r0, r1
   1f0d0:	tst	r0, #1
   1f0d4:	beq	1f100 <__assert_fail@plt+0xd9ac>
   1f0d8:	ldr	r0, [sp, #12]
   1f0dc:	ldr	r0, [r0, #4]
   1f0e0:	ldr	r1, [sp, #12]
   1f0e4:	ldr	r1, [r1, #40]	; 0x28
   1f0e8:	ldr	r2, [sp, #8]
   1f0ec:	add	r1, r1, r2
   1f0f0:	add	r0, r0, r1
   1f0f4:	ldrb	r0, [r0]
   1f0f8:	strb	r0, [sp, #19]
   1f0fc:	b	1f25c <__assert_fail@plt+0xdb08>
   1f100:	ldr	r0, [sp, #12]
   1f104:	ldr	r0, [r0, #80]	; 0x50
   1f108:	cmp	r0, #1
   1f10c:	ble	1f1a8 <__assert_fail@plt+0xda54>
   1f110:	ldr	r0, [sp, #12]
   1f114:	ldr	r1, [r0, #8]
   1f118:	ldr	r0, [r0, #40]	; 0x28
   1f11c:	ldr	r2, [sp, #8]
   1f120:	add	r0, r0, r2
   1f124:	add	r0, r1, r0, lsl #2
   1f128:	ldr	r0, [r0]
   1f12c:	cmn	r0, #1
   1f130:	beq	1f180 <__assert_fail@plt+0xda2c>
   1f134:	ldr	r0, [sp, #12]
   1f138:	ldr	r0, [r0, #28]
   1f13c:	ldr	r1, [sp, #12]
   1f140:	ldr	r1, [r1, #40]	; 0x28
   1f144:	ldr	r2, [sp, #8]
   1f148:	add	r1, r1, r2
   1f14c:	add	r1, r1, #1
   1f150:	cmp	r0, r1
   1f154:	beq	1f1a8 <__assert_fail@plt+0xda54>
   1f158:	ldr	r0, [sp, #12]
   1f15c:	ldr	r1, [r0, #8]
   1f160:	ldr	r0, [r0, #40]	; 0x28
   1f164:	ldr	r2, [sp, #8]
   1f168:	add	r0, r0, r2
   1f16c:	add	r0, r0, #1
   1f170:	add	r0, r1, r0, lsl #2
   1f174:	ldr	r0, [r0]
   1f178:	cmn	r0, #1
   1f17c:	bne	1f1a8 <__assert_fail@plt+0xda54>
   1f180:	ldr	r0, [sp, #12]
   1f184:	ldr	r0, [r0, #4]
   1f188:	ldr	r1, [sp, #12]
   1f18c:	ldr	r1, [r1, #40]	; 0x28
   1f190:	ldr	r2, [sp, #8]
   1f194:	add	r1, r1, r2
   1f198:	add	r0, r0, r1
   1f19c:	ldrb	r0, [r0]
   1f1a0:	strb	r0, [sp, #19]
   1f1a4:	b	1f25c <__assert_fail@plt+0xdb08>
   1f1a8:	ldr	r0, [sp, #12]
   1f1ac:	ldr	r0, [r0, #40]	; 0x28
   1f1b0:	ldr	r1, [sp, #8]
   1f1b4:	add	r0, r0, r1
   1f1b8:	str	r0, [sp]
   1f1bc:	ldr	r0, [sp, #12]
   1f1c0:	ldrsb	r0, [r0, #76]	; 0x4c
   1f1c4:	cmp	r0, #0
   1f1c8:	beq	1f1e4 <__assert_fail@plt+0xda90>
   1f1cc:	ldr	r0, [sp, #12]
   1f1d0:	ldr	r0, [r0, #12]
   1f1d4:	ldr	r1, [sp]
   1f1d8:	add	r0, r0, r1, lsl #2
   1f1dc:	ldr	r0, [r0]
   1f1e0:	str	r0, [sp]
   1f1e4:	ldr	r0, [sp, #12]
   1f1e8:	ldr	r0, [r0]
   1f1ec:	ldr	r1, [sp, #12]
   1f1f0:	ldr	r1, [r1, #24]
   1f1f4:	ldr	r2, [sp]
   1f1f8:	add	r1, r1, r2
   1f1fc:	add	r0, r0, r1
   1f200:	ldrb	r0, [r0]
   1f204:	str	r0, [sp, #4]
   1f208:	ldr	r0, [sp, #12]
   1f20c:	ldrb	r0, [r0, #76]	; 0x4c
   1f210:	cmp	r0, #0
   1f214:	beq	1f254 <__assert_fail@plt+0xdb00>
   1f218:	ldr	r0, [sp, #4]
   1f21c:	mvn	r1, #127	; 0x7f
   1f220:	and	r0, r0, r1
   1f224:	cmp	r0, #0
   1f228:	beq	1f254 <__assert_fail@plt+0xdb00>
   1f22c:	ldr	r0, [sp, #12]
   1f230:	ldr	r0, [r0, #4]
   1f234:	ldr	r1, [sp, #12]
   1f238:	ldr	r1, [r1, #40]	; 0x28
   1f23c:	ldr	r2, [sp, #8]
   1f240:	add	r1, r1, r2
   1f244:	add	r0, r0, r1
   1f248:	ldrb	r0, [r0]
   1f24c:	strb	r0, [sp, #19]
   1f250:	b	1f25c <__assert_fail@plt+0xdb08>
   1f254:	ldr	r0, [sp, #4]
   1f258:	strb	r0, [sp, #19]
   1f25c:	ldrb	r0, [sp, #19]
   1f260:	add	sp, sp, #20
   1f264:	bx	lr
   1f268:	sub	sp, sp, #12
   1f26c:	str	r0, [sp, #4]
   1f270:	str	r1, [sp]
   1f274:	ldr	r0, [sp, #4]
   1f278:	ldr	r0, [r0, #80]	; 0x50
   1f27c:	cmp	r0, #1
   1f280:	bne	1f2a0 <__assert_fail@plt+0xdb4c>
   1f284:	ldr	r0, [sp, #4]
   1f288:	ldr	r0, [r0, #4]
   1f28c:	ldr	r1, [sp]
   1f290:	add	r0, r0, r1
   1f294:	ldrb	r0, [r0]
   1f298:	str	r0, [sp, #8]
   1f29c:	b	1f2b8 <__assert_fail@plt+0xdb64>
   1f2a0:	ldr	r0, [sp, #4]
   1f2a4:	ldr	r0, [r0, #8]
   1f2a8:	ldr	r1, [sp]
   1f2ac:	add	r0, r0, r1, lsl #2
   1f2b0:	ldr	r0, [r0]
   1f2b4:	str	r0, [sp, #8]
   1f2b8:	ldr	r0, [sp, #8]
   1f2bc:	add	sp, sp, #12
   1f2c0:	bx	lr
   1f2c4:	push	{r4, r5, fp, lr}
   1f2c8:	add	fp, sp, #8
   1f2cc:	sub	sp, sp, #72	; 0x48
   1f2d0:	ldr	ip, [fp, #12]
   1f2d4:	ldr	lr, [fp, #8]
   1f2d8:	str	r0, [fp, #-16]
   1f2dc:	str	r1, [fp, #-20]	; 0xffffffec
   1f2e0:	str	r2, [fp, #-24]	; 0xffffffe8
   1f2e4:	str	r3, [fp, #-28]	; 0xffffffe4
   1f2e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f2ec:	ldr	r0, [r0]
   1f2f0:	str	r0, [sp, #40]	; 0x28
   1f2f4:	ldr	r0, [fp, #-16]
   1f2f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f2fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f300:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f304:	ldr	r4, [fp, #8]
   1f308:	ldr	r5, [fp, #12]
   1f30c:	str	r4, [sp]
   1f310:	str	r5, [sp, #4]
   1f314:	str	ip, [sp, #32]
   1f318:	str	lr, [sp, #28]
   1f31c:	bl	1f6ec <__assert_fail@plt+0xdf98>
   1f320:	str	r0, [fp, #-32]	; 0xffffffe0
   1f324:	ldr	r0, [fp, #12]
   1f328:	ldr	r0, [r0]
   1f32c:	cmp	r0, #0
   1f330:	movw	r0, #0
   1f334:	str	r0, [sp, #24]
   1f338:	beq	1f354 <__assert_fail@plt+0xdc00>
   1f33c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f340:	movw	r1, #0
   1f344:	cmp	r0, r1
   1f348:	movw	r0, #0
   1f34c:	moveq	r0, #1
   1f350:	str	r0, [sp, #24]
   1f354:	ldr	r0, [sp, #24]
   1f358:	tst	r0, #1
   1f35c:	beq	1f36c <__assert_fail@plt+0xdc18>
   1f360:	movw	r0, #0
   1f364:	str	r0, [fp, #-12]
   1f368:	b	1f544 <__assert_fail@plt+0xddf0>
   1f36c:	b	1f370 <__assert_fail@plt+0xdc1c>
   1f370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f374:	ldr	r0, [r0, #4]
   1f378:	and	r0, r0, #255	; 0xff
   1f37c:	cmp	r0, #10
   1f380:	movw	r0, #0
   1f384:	str	r0, [sp, #20]
   1f388:	beq	1f3e0 <__assert_fail@plt+0xdc8c>
   1f38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f390:	ldr	r0, [r0, #4]
   1f394:	and	r0, r0, #255	; 0xff
   1f398:	cmp	r0, #2
   1f39c:	movw	r0, #0
   1f3a0:	str	r0, [sp, #20]
   1f3a4:	beq	1f3e0 <__assert_fail@plt+0xdc8c>
   1f3a8:	ldr	r0, [fp, #8]
   1f3ac:	cmp	r0, #0
   1f3b0:	movw	r0, #1
   1f3b4:	str	r0, [sp, #16]
   1f3b8:	beq	1f3d8 <__assert_fail@plt+0xdc84>
   1f3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3c0:	ldr	r0, [r0, #4]
   1f3c4:	and	r0, r0, #255	; 0xff
   1f3c8:	cmp	r0, #9
   1f3cc:	movw	r0, #0
   1f3d0:	movne	r0, #1
   1f3d4:	str	r0, [sp, #16]
   1f3d8:	ldr	r0, [sp, #16]
   1f3dc:	str	r0, [sp, #20]
   1f3e0:	ldr	r0, [sp, #20]
   1f3e4:	tst	r0, #1
   1f3e8:	beq	1f53c <__assert_fail@plt+0xdde8>
   1f3ec:	ldr	r0, [fp, #-16]
   1f3f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f3f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f3f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f3fc:	ldr	ip, [fp, #8]
   1f400:	ldr	lr, [fp, #12]
   1f404:	str	ip, [sp]
   1f408:	str	lr, [sp, #4]
   1f40c:	bl	1f6ec <__assert_fail@plt+0xdf98>
   1f410:	str	r0, [fp, #-36]	; 0xffffffdc
   1f414:	ldr	r0, [fp, #12]
   1f418:	ldr	r0, [r0]
   1f41c:	cmp	r0, #0
   1f420:	movw	r0, #0
   1f424:	str	r0, [sp, #12]
   1f428:	beq	1f444 <__assert_fail@plt+0xdcf0>
   1f42c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f430:	movw	r1, #0
   1f434:	cmp	r0, r1
   1f438:	movw	r0, #0
   1f43c:	moveq	r0, #1
   1f440:	str	r0, [sp, #12]
   1f444:	ldr	r0, [sp, #12]
   1f448:	tst	r0, #1
   1f44c:	beq	1f480 <__assert_fail@plt+0xdd2c>
   1f450:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f454:	movw	r1, #0
   1f458:	cmp	r0, r1
   1f45c:	beq	1f474 <__assert_fail@plt+0xdd20>
   1f460:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f464:	movw	r1, #63168	; 0xf6c0
   1f468:	movt	r1, #1
   1f46c:	movw	r2, #0
   1f470:	bl	1f550 <__assert_fail@plt+0xddfc>
   1f474:	movw	r0, #0
   1f478:	str	r0, [fp, #-12]
   1f47c:	b	1f544 <__assert_fail@plt+0xddf0>
   1f480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f484:	movw	r1, #0
   1f488:	cmp	r0, r1
   1f48c:	beq	1f51c <__assert_fail@plt+0xddc8>
   1f490:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f494:	movw	r1, #0
   1f498:	cmp	r0, r1
   1f49c:	beq	1f51c <__assert_fail@plt+0xddc8>
   1f4a0:	ldr	r0, [sp, #40]	; 0x28
   1f4a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f4a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f4ac:	movw	r3, #16
   1f4b0:	bl	1e160 <__assert_fail@plt+0xca0c>
   1f4b4:	str	r0, [sp, #36]	; 0x24
   1f4b8:	ldr	r0, [sp, #36]	; 0x24
   1f4bc:	movw	r1, #0
   1f4c0:	cmp	r0, r1
   1f4c4:	bne	1f510 <__assert_fail@plt+0xddbc>
   1f4c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f4cc:	movw	r1, #63168	; 0xf6c0
   1f4d0:	movt	r1, #1
   1f4d4:	movw	r2, #0
   1f4d8:	bl	1f550 <__assert_fail@plt+0xddfc>
   1f4dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f4e0:	str	r0, [sp, #8]
   1f4e4:	mov	r0, r1
   1f4e8:	movw	r1, #63168	; 0xf6c0
   1f4ec:	movt	r1, #1
   1f4f0:	movw	r2, #0
   1f4f4:	bl	1f550 <__assert_fail@plt+0xddfc>
   1f4f8:	ldr	r1, [fp, #12]
   1f4fc:	movw	r2, #12
   1f500:	str	r2, [r1]
   1f504:	movw	r1, #0
   1f508:	str	r1, [fp, #-12]
   1f50c:	b	1f544 <__assert_fail@plt+0xddf0>
   1f510:	ldr	r0, [sp, #36]	; 0x24
   1f514:	str	r0, [fp, #-32]	; 0xffffffe0
   1f518:	b	1f538 <__assert_fail@plt+0xdde4>
   1f51c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f520:	movw	r1, #0
   1f524:	cmp	r0, r1
   1f528:	bne	1f534 <__assert_fail@plt+0xdde0>
   1f52c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f530:	str	r0, [fp, #-32]	; 0xffffffe0
   1f534:	b	1f538 <__assert_fail@plt+0xdde4>
   1f538:	b	1f370 <__assert_fail@plt+0xdc1c>
   1f53c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f540:	str	r0, [fp, #-12]
   1f544:	ldr	r0, [fp, #-12]
   1f548:	sub	sp, fp, #8
   1f54c:	pop	{r4, r5, fp, pc}
   1f550:	push	{fp, lr}
   1f554:	mov	fp, sp
   1f558:	sub	sp, sp, #40	; 0x28
   1f55c:	str	r0, [fp, #-8]
   1f560:	str	r1, [fp, #-12]
   1f564:	str	r2, [fp, #-16]
   1f568:	ldr	r0, [fp, #-8]
   1f56c:	str	r0, [sp, #20]
   1f570:	b	1f574 <__assert_fail@plt+0xde20>
   1f574:	ldr	r0, [sp, #20]
   1f578:	ldr	r0, [r0, #4]
   1f57c:	movw	r1, #0
   1f580:	cmp	r0, r1
   1f584:	movw	r0, #1
   1f588:	str	r0, [sp, #8]
   1f58c:	bne	1f5ac <__assert_fail@plt+0xde58>
   1f590:	ldr	r0, [sp, #20]
   1f594:	ldr	r0, [r0, #8]
   1f598:	movw	r1, #0
   1f59c:	cmp	r0, r1
   1f5a0:	movw	r0, #0
   1f5a4:	movne	r0, #1
   1f5a8:	str	r0, [sp, #8]
   1f5ac:	ldr	r0, [sp, #8]
   1f5b0:	tst	r0, #1
   1f5b4:	beq	1f5ec <__assert_fail@plt+0xde98>
   1f5b8:	ldr	r0, [sp, #20]
   1f5bc:	ldr	r0, [r0, #4]
   1f5c0:	movw	r1, #0
   1f5c4:	cmp	r0, r1
   1f5c8:	beq	1f5dc <__assert_fail@plt+0xde88>
   1f5cc:	ldr	r0, [sp, #20]
   1f5d0:	ldr	r0, [r0, #4]
   1f5d4:	str	r0, [sp, #20]
   1f5d8:	b	1f5e8 <__assert_fail@plt+0xde94>
   1f5dc:	ldr	r0, [sp, #20]
   1f5e0:	ldr	r0, [r0, #8]
   1f5e4:	str	r0, [sp, #20]
   1f5e8:	b	1f574 <__assert_fail@plt+0xde20>
   1f5ec:	b	1f5f0 <__assert_fail@plt+0xde9c>
   1f5f0:	ldr	r0, [fp, #-12]
   1f5f4:	ldr	r1, [fp, #-16]
   1f5f8:	ldr	r2, [sp, #20]
   1f5fc:	str	r0, [sp, #4]
   1f600:	mov	r0, r1
   1f604:	mov	r1, r2
   1f608:	ldr	r2, [sp, #4]
   1f60c:	blx	r2
   1f610:	str	r0, [sp, #12]
   1f614:	ldr	r0, [sp, #12]
   1f618:	cmp	r0, #0
   1f61c:	beq	1f62c <__assert_fail@plt+0xded8>
   1f620:	ldr	r0, [sp, #12]
   1f624:	str	r0, [fp, #-4]
   1f628:	b	1f6b4 <__assert_fail@plt+0xdf60>
   1f62c:	ldr	r0, [sp, #20]
   1f630:	ldr	r0, [r0]
   1f634:	movw	r1, #0
   1f638:	cmp	r0, r1
   1f63c:	bne	1f64c <__assert_fail@plt+0xdef8>
   1f640:	movw	r0, #0
   1f644:	str	r0, [fp, #-4]
   1f648:	b	1f6b4 <__assert_fail@plt+0xdf60>
   1f64c:	ldr	r0, [sp, #20]
   1f650:	str	r0, [sp, #16]
   1f654:	ldr	r0, [sp, #20]
   1f658:	ldr	r0, [r0]
   1f65c:	str	r0, [sp, #20]
   1f660:	ldr	r0, [sp, #20]
   1f664:	ldr	r0, [r0, #8]
   1f668:	ldr	r1, [sp, #16]
   1f66c:	cmp	r0, r1
   1f670:	movw	r0, #1
   1f674:	str	r0, [sp]
   1f678:	beq	1f698 <__assert_fail@plt+0xdf44>
   1f67c:	ldr	r0, [sp, #20]
   1f680:	ldr	r0, [r0, #8]
   1f684:	movw	r1, #0
   1f688:	cmp	r0, r1
   1f68c:	movw	r0, #0
   1f690:	moveq	r0, #1
   1f694:	str	r0, [sp]
   1f698:	ldr	r0, [sp]
   1f69c:	tst	r0, #1
   1f6a0:	bne	1f5f0 <__assert_fail@plt+0xde9c>
   1f6a4:	ldr	r0, [sp, #20]
   1f6a8:	ldr	r0, [r0, #8]
   1f6ac:	str	r0, [sp, #20]
   1f6b0:	b	1f570 <__assert_fail@plt+0xde1c>
   1f6b4:	ldr	r0, [fp, #-4]
   1f6b8:	mov	sp, fp
   1f6bc:	pop	{fp, pc}
   1f6c0:	push	{fp, lr}
   1f6c4:	mov	fp, sp
   1f6c8:	sub	sp, sp, #8
   1f6cc:	str	r0, [sp, #4]
   1f6d0:	str	r1, [sp]
   1f6d4:	ldr	r0, [sp]
   1f6d8:	add	r0, r0, #20
   1f6dc:	bl	1b678 <__assert_fail@plt+0x9f24>
   1f6e0:	movw	r0, #0
   1f6e4:	mov	sp, fp
   1f6e8:	pop	{fp, pc}
   1f6ec:	push	{fp, lr}
   1f6f0:	mov	fp, sp
   1f6f4:	sub	sp, sp, #152	; 0x98
   1f6f8:	ldr	ip, [fp, #12]
   1f6fc:	ldr	lr, [fp, #8]
   1f700:	str	r0, [fp, #-8]
   1f704:	str	r1, [fp, #-12]
   1f708:	str	r2, [fp, #-16]
   1f70c:	str	r3, [fp, #-20]	; 0xffffffec
   1f710:	ldr	r0, [fp, #-12]
   1f714:	ldr	r0, [r0]
   1f718:	str	r0, [fp, #-24]	; 0xffffffe8
   1f71c:	ldr	r0, [fp, #-16]
   1f720:	ldrb	r0, [r0, #4]
   1f724:	sub	r0, r0, #1
   1f728:	str	r0, [fp, #-48]	; 0xffffffd0
   1f72c:	add	r0, pc, #8
   1f730:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1f734:	ldr	r0, [r0, r1, lsl #2]
   1f738:	mov	pc, r0
   1f73c:	andeq	pc, r1, ip, asr #15
   1f740:	andeq	pc, r1, ip, ror #31
   1f744:	andeq	r0, r2, r0, lsl r0
   1f748:	andeq	pc, r1, ip, lsr #20
   1f74c:	andeq	pc, r1, ip, lsl lr	; <UNPREDICTABLE>
   1f750:	andeq	r0, r2, r0, lsl r0
   1f754:	andeq	r0, r2, r0, lsl r0
   1f758:	andeq	pc, r1, r8, asr #18
   1f75c:	andeq	pc, r1, r0, lsr #23
   1f760:	andeq	pc, r1, ip, ror #31
   1f764:	andeq	pc, r1, r4, lsr #22
   1f768:	andeq	pc, r1, r0, asr #24
   1f76c:	andeq	r0, r2, r0, lsl r0
   1f770:	andeq	r0, r2, r0, lsl r0
   1f774:	andeq	r0, r2, r0, lsl r0
   1f778:	andeq	r0, r2, r0, lsl r0
   1f77c:	andeq	r0, r2, r0, lsl r0
   1f780:	andeq	pc, r1, r4, lsr #22
   1f784:	andeq	pc, r1, r4, lsr #22
   1f788:	andeq	pc, r1, r0, asr #19
   1f78c:	andeq	r0, r2, r0, lsl r0
   1f790:	andeq	r0, r2, r0, lsl r0
   1f794:	strdeq	pc, [r1], -r8
   1f798:	andeq	pc, r1, r0, ror #23
   1f79c:	andeq	r0, r2, r0, lsl r0
   1f7a0:	andeq	r0, r2, r0, lsl r0
   1f7a4:	andeq	r0, r2, r0, lsl r0
   1f7a8:	andeq	r0, r2, r0, lsl r0
   1f7ac:	andeq	r0, r2, r0, lsl r0
   1f7b0:	andeq	r0, r2, r0, lsl r0
   1f7b4:	andeq	r0, r2, r0, lsl r0
   1f7b8:	andeq	pc, r1, ip, lsl #29
   1f7bc:	andeq	pc, r1, ip, lsl #29
   1f7c0:	andeq	pc, r1, ip, lsr pc	; <UNPREDICTABLE>
   1f7c4:	andeq	pc, r1, ip, lsr pc	; <UNPREDICTABLE>
   1f7c8:	strdeq	pc, [r1], -r8
   1f7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f7d0:	ldr	r3, [fp, #-16]
   1f7d4:	movw	r1, #0
   1f7d8:	str	r1, [fp, #-52]	; 0xffffffcc
   1f7dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f7e0:	bl	201c4 <__assert_fail@plt+0xea70>
   1f7e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f7e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f7ec:	movw	r1, #0
   1f7f0:	cmp	r0, r1
   1f7f4:	bne	1f810 <__assert_fail@plt+0xe0bc>
   1f7f8:	ldr	r0, [fp, #12]
   1f7fc:	movw	r1, #12
   1f800:	str	r1, [r0]
   1f804:	movw	r0, #0
   1f808:	str	r0, [fp, #-4]
   1f80c:	b	201b8 <__assert_fail@plt+0xea64>
   1f810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f814:	ldr	r0, [r0, #92]	; 0x5c
   1f818:	cmp	r0, #1
   1f81c:	ble	1f944 <__assert_fail@plt+0xe1f0>
   1f820:	b	1f824 <__assert_fail@plt+0xe0d0>
   1f824:	ldr	r0, [fp, #-8]
   1f828:	ldr	r0, [r0, #56]	; 0x38
   1f82c:	ldr	r1, [fp, #-8]
   1f830:	ldr	r1, [r1, #40]	; 0x28
   1f834:	cmp	r0, r1
   1f838:	movw	r0, #0
   1f83c:	str	r0, [fp, #-56]	; 0xffffffc8
   1f840:	ble	1f898 <__assert_fail@plt+0xe144>
   1f844:	ldr	r0, [fp, #-8]
   1f848:	ldr	r0, [r0, #40]	; 0x28
   1f84c:	ldr	r1, [fp, #-8]
   1f850:	ldr	r1, [r1, #28]
   1f854:	cmp	r0, r1
   1f858:	movw	r0, #1
   1f85c:	str	r0, [fp, #-60]	; 0xffffffc4
   1f860:	beq	1f888 <__assert_fail@plt+0xe134>
   1f864:	ldr	r0, [fp, #-8]
   1f868:	ldr	r1, [r0, #8]
   1f86c:	ldr	r0, [r0, #40]	; 0x28
   1f870:	add	r0, r1, r0, lsl #2
   1f874:	ldr	r0, [r0]
   1f878:	cmn	r0, #1
   1f87c:	movw	r0, #0
   1f880:	movne	r0, #1
   1f884:	str	r0, [fp, #-60]	; 0xffffffc4
   1f888:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f88c:	mvn	r1, #0
   1f890:	eor	r0, r0, r1
   1f894:	str	r0, [fp, #-56]	; 0xffffffc8
   1f898:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f89c:	tst	r0, #1
   1f8a0:	beq	1f940 <__assert_fail@plt+0xe1ec>
   1f8a4:	ldr	r0, [fp, #-16]
   1f8a8:	ldr	r1, [fp, #-8]
   1f8ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f8b0:	bl	1decc <__assert_fail@plt+0xc778>
   1f8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f8b8:	ldr	r3, [fp, #-16]
   1f8bc:	movw	r1, #0
   1f8c0:	str	r1, [fp, #-64]	; 0xffffffc0
   1f8c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1f8c8:	bl	201c4 <__assert_fail@plt+0xea70>
   1f8cc:	str	r0, [fp, #-32]	; 0xffffffe0
   1f8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f8d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f8d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f8dc:	movw	r3, #16
   1f8e0:	bl	1e160 <__assert_fail@plt+0xca0c>
   1f8e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f8e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f8ec:	movw	r1, #0
   1f8f0:	cmp	r0, r1
   1f8f4:	movw	r0, #1
   1f8f8:	str	r0, [fp, #-68]	; 0xffffffbc
   1f8fc:	beq	1f918 <__assert_fail@plt+0xe1c4>
   1f900:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f904:	movw	r1, #0
   1f908:	cmp	r0, r1
   1f90c:	movw	r0, #0
   1f910:	moveq	r0, #1
   1f914:	str	r0, [fp, #-68]	; 0xffffffbc
   1f918:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1f91c:	tst	r0, #1
   1f920:	beq	1f93c <__assert_fail@plt+0xe1e8>
   1f924:	ldr	r0, [fp, #12]
   1f928:	movw	r1, #12
   1f92c:	str	r1, [r0]
   1f930:	movw	r0, #0
   1f934:	str	r0, [fp, #-4]
   1f938:	b	201b8 <__assert_fail@plt+0xea64>
   1f93c:	b	1f824 <__assert_fail@plt+0xe0d0>
   1f940:	b	1f944 <__assert_fail@plt+0xe1f0>
   1f944:	b	20010 <__assert_fail@plt+0xe8bc>
   1f948:	ldr	r0, [fp, #-8]
   1f94c:	ldr	r1, [fp, #-12]
   1f950:	ldr	r2, [fp, #-16]
   1f954:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f958:	ldr	ip, [fp, #8]
   1f95c:	add	ip, ip, #1
   1f960:	ldr	lr, [fp, #12]
   1f964:	str	ip, [sp]
   1f968:	str	lr, [sp, #4]
   1f96c:	bl	20328 <__assert_fail@plt+0xebd4>
   1f970:	str	r0, [fp, #-28]	; 0xffffffe4
   1f974:	ldr	r0, [fp, #12]
   1f978:	ldr	r0, [r0]
   1f97c:	cmp	r0, #0
   1f980:	movw	r0, #0
   1f984:	str	r0, [fp, #-72]	; 0xffffffb8
   1f988:	beq	1f9a4 <__assert_fail@plt+0xe250>
   1f98c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f990:	movw	r1, #0
   1f994:	cmp	r0, r1
   1f998:	movw	r0, #0
   1f99c:	moveq	r0, #1
   1f9a0:	str	r0, [fp, #-72]	; 0xffffffb8
   1f9a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1f9a8:	tst	r0, #1
   1f9ac:	beq	1f9bc <__assert_fail@plt+0xe268>
   1f9b0:	movw	r0, #0
   1f9b4:	str	r0, [fp, #-4]
   1f9b8:	b	201b8 <__assert_fail@plt+0xea64>
   1f9bc:	b	20010 <__assert_fail@plt+0xe8bc>
   1f9c0:	ldr	r0, [fp, #-8]
   1f9c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f9c8:	ldr	r2, [fp, #-16]
   1f9cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f9d0:	ldr	ip, [fp, #12]
   1f9d4:	str	ip, [sp]
   1f9d8:	bl	204e8 <__assert_fail@plt+0xed94>
   1f9dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1f9e0:	ldr	r0, [fp, #12]
   1f9e4:	ldr	r0, [r0]
   1f9e8:	cmp	r0, #0
   1f9ec:	movw	r0, #0
   1f9f0:	str	r0, [sp, #76]	; 0x4c
   1f9f4:	beq	1fa10 <__assert_fail@plt+0xe2bc>
   1f9f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f9fc:	movw	r1, #0
   1fa00:	cmp	r0, r1
   1fa04:	movw	r0, #0
   1fa08:	moveq	r0, #1
   1fa0c:	str	r0, [sp, #76]	; 0x4c
   1fa10:	ldr	r0, [sp, #76]	; 0x4c
   1fa14:	tst	r0, #1
   1fa18:	beq	1fa28 <__assert_fail@plt+0xe2d4>
   1fa1c:	movw	r0, #0
   1fa20:	str	r0, [fp, #-4]
   1fa24:	b	201b8 <__assert_fail@plt+0xea64>
   1fa28:	b	20010 <__assert_fail@plt+0xe8bc>
   1fa2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa30:	ldr	r0, [r0, #84]	; 0x54
   1fa34:	ldr	r1, [fp, #-16]
   1fa38:	ldr	r1, [r1]
   1fa3c:	movw	r2, #1
   1fa40:	lsl	r1, r2, r1
   1fa44:	and	r0, r0, r1
   1fa48:	cmp	r0, #0
   1fa4c:	bne	1fa68 <__assert_fail@plt+0xe314>
   1fa50:	ldr	r0, [fp, #12]
   1fa54:	movw	r1, #6
   1fa58:	str	r1, [r0]
   1fa5c:	movw	r0, #0
   1fa60:	str	r0, [fp, #-4]
   1fa64:	b	201b8 <__assert_fail@plt+0xea64>
   1fa68:	ldr	r0, [fp, #-16]
   1fa6c:	ldr	r0, [r0]
   1fa70:	movw	r1, #1
   1fa74:	lsl	r0, r1, r0
   1fa78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fa7c:	ldr	r2, [r1, #80]	; 0x50
   1fa80:	orr	r0, r2, r0
   1fa84:	str	r0, [r1, #80]	; 0x50
   1fa88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa8c:	ldr	r3, [fp, #-16]
   1fa90:	movw	r1, #0
   1fa94:	str	r1, [sp, #72]	; 0x48
   1fa98:	ldr	r2, [sp, #72]	; 0x48
   1fa9c:	bl	201c4 <__assert_fail@plt+0xea70>
   1faa0:	str	r0, [fp, #-28]	; 0xffffffe4
   1faa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1faa8:	movw	r1, #0
   1faac:	cmp	r0, r1
   1fab0:	bne	1facc <__assert_fail@plt+0xe378>
   1fab4:	ldr	r0, [fp, #12]
   1fab8:	movw	r1, #12
   1fabc:	str	r1, [r0]
   1fac0:	movw	r0, #0
   1fac4:	str	r0, [fp, #-4]
   1fac8:	b	201b8 <__assert_fail@plt+0xea64>
   1facc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fad0:	ldr	r1, [r0, #76]	; 0x4c
   1fad4:	add	r1, r1, #1
   1fad8:	str	r1, [r0, #76]	; 0x4c
   1fadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fae0:	ldrb	r1, [r0, #88]	; 0x58
   1fae4:	bic	r1, r1, #2
   1fae8:	movw	r2, #2
   1faec:	orr	r1, r1, r2
   1faf0:	strb	r1, [r0, #88]	; 0x58
   1faf4:	b	20010 <__assert_fail@plt+0xe8bc>
   1faf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fafc:	and	r0, r0, #16777216	; 0x1000000
   1fb00:	cmp	r0, #0
   1fb04:	beq	1fb20 <__assert_fail@plt+0xe3cc>
   1fb08:	ldr	r0, [fp, #12]
   1fb0c:	movw	r1, #13
   1fb10:	str	r1, [r0]
   1fb14:	movw	r0, #0
   1fb18:	str	r0, [fp, #-4]
   1fb1c:	b	201b8 <__assert_fail@plt+0xea64>
   1fb20:	b	1fb24 <__assert_fail@plt+0xe3d0>
   1fb24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb28:	and	r0, r0, #32
   1fb2c:	cmp	r0, #0
   1fb30:	beq	1fb4c <__assert_fail@plt+0xe3f8>
   1fb34:	ldr	r0, [fp, #12]
   1fb38:	movw	r1, #13
   1fb3c:	str	r1, [r0]
   1fb40:	movw	r0, #0
   1fb44:	str	r0, [fp, #-4]
   1fb48:	b	201b8 <__assert_fail@plt+0xea64>
   1fb4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb50:	and	r0, r0, #16
   1fb54:	cmp	r0, #0
   1fb58:	beq	1fb98 <__assert_fail@plt+0xe444>
   1fb5c:	ldr	r0, [fp, #-16]
   1fb60:	ldr	r1, [fp, #-8]
   1fb64:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fb68:	bl	1decc <__assert_fail@plt+0xc778>
   1fb6c:	ldr	r0, [fp, #-8]
   1fb70:	ldr	r1, [fp, #-12]
   1fb74:	ldr	r2, [fp, #-16]
   1fb78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fb7c:	ldr	ip, [fp, #8]
   1fb80:	ldr	lr, [fp, #12]
   1fb84:	str	ip, [sp]
   1fb88:	str	lr, [sp, #4]
   1fb8c:	bl	1f6ec <__assert_fail@plt+0xdf98>
   1fb90:	str	r0, [fp, #-4]
   1fb94:	b	201b8 <__assert_fail@plt+0xea64>
   1fb98:	b	1fb9c <__assert_fail@plt+0xe448>
   1fb9c:	b	1fba0 <__assert_fail@plt+0xe44c>
   1fba0:	ldr	r0, [fp, #-16]
   1fba4:	ldr	r0, [r0, #4]
   1fba8:	and	r0, r0, #255	; 0xff
   1fbac:	cmp	r0, #9
   1fbb0:	bne	1fbdc <__assert_fail@plt+0xe488>
   1fbb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fbb8:	and	r0, r0, #131072	; 0x20000
   1fbbc:	cmp	r0, #0
   1fbc0:	bne	1fbdc <__assert_fail@plt+0xe488>
   1fbc4:	ldr	r0, [fp, #12]
   1fbc8:	movw	r1, #16
   1fbcc:	str	r1, [r0]
   1fbd0:	movw	r0, #0
   1fbd4:	str	r0, [fp, #-4]
   1fbd8:	b	201b8 <__assert_fail@plt+0xea64>
   1fbdc:	b	1fbe0 <__assert_fail@plt+0xe48c>
   1fbe0:	ldr	r0, [fp, #-16]
   1fbe4:	ldr	r1, [r0, #4]
   1fbe8:	mvn	r2, #255	; 0xff
   1fbec:	and	r1, r1, r2
   1fbf0:	orr	r1, r1, #1
   1fbf4:	str	r1, [r0, #4]
   1fbf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fbfc:	ldr	r3, [fp, #-16]
   1fc00:	movw	r1, #0
   1fc04:	str	r1, [sp, #68]	; 0x44
   1fc08:	ldr	r2, [sp, #68]	; 0x44
   1fc0c:	bl	201c4 <__assert_fail@plt+0xea70>
   1fc10:	str	r0, [fp, #-28]	; 0xffffffe4
   1fc14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc18:	movw	r1, #0
   1fc1c:	cmp	r0, r1
   1fc20:	bne	1fc3c <__assert_fail@plt+0xe4e8>
   1fc24:	ldr	r0, [fp, #12]
   1fc28:	movw	r1, #12
   1fc2c:	str	r1, [r0]
   1fc30:	movw	r0, #0
   1fc34:	str	r0, [fp, #-4]
   1fc38:	b	201b8 <__assert_fail@plt+0xea64>
   1fc3c:	b	20010 <__assert_fail@plt+0xe8bc>
   1fc40:	ldr	r0, [fp, #-16]
   1fc44:	ldr	r0, [r0]
   1fc48:	movw	r1, #783	; 0x30f
   1fc4c:	and	r0, r0, r1
   1fc50:	cmp	r0, #0
   1fc54:	beq	1fc78 <__assert_fail@plt+0xe524>
   1fc58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc5c:	ldrb	r0, [r0, #88]	; 0x58
   1fc60:	ubfx	r0, r0, #4, #1
   1fc64:	and	r0, r0, #255	; 0xff
   1fc68:	cmp	r0, #0
   1fc6c:	bne	1fc78 <__assert_fail@plt+0xe524>
   1fc70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc74:	bl	20e10 <__assert_fail@plt+0xf6bc>
   1fc78:	ldr	r0, [fp, #-16]
   1fc7c:	ldr	r0, [r0]
   1fc80:	cmp	r0, #256	; 0x100
   1fc84:	beq	1fc98 <__assert_fail@plt+0xe544>
   1fc88:	ldr	r0, [fp, #-16]
   1fc8c:	ldr	r0, [r0]
   1fc90:	cmp	r0, #512	; 0x200
   1fc94:	bne	1fdb8 <__assert_fail@plt+0xe664>
   1fc98:	ldr	r0, [fp, #-16]
   1fc9c:	ldr	r0, [r0]
   1fca0:	cmp	r0, #256	; 0x100
   1fca4:	bne	1fce0 <__assert_fail@plt+0xe58c>
   1fca8:	ldr	r0, [fp, #-16]
   1fcac:	movw	r1, #6
   1fcb0:	str	r1, [r0]
   1fcb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fcb8:	ldr	r3, [fp, #-16]
   1fcbc:	movw	r1, #0
   1fcc0:	str	r1, [sp, #64]	; 0x40
   1fcc4:	ldr	r2, [sp, #64]	; 0x40
   1fcc8:	bl	201c4 <__assert_fail@plt+0xea70>
   1fccc:	str	r0, [fp, #-36]	; 0xffffffdc
   1fcd0:	ldr	r0, [fp, #-16]
   1fcd4:	movw	r1, #9
   1fcd8:	str	r1, [r0]
   1fcdc:	b	1fd14 <__assert_fail@plt+0xe5c0>
   1fce0:	ldr	r0, [fp, #-16]
   1fce4:	movw	r1, #5
   1fce8:	str	r1, [r0]
   1fcec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fcf0:	ldr	r3, [fp, #-16]
   1fcf4:	movw	r1, #0
   1fcf8:	str	r1, [sp, #60]	; 0x3c
   1fcfc:	ldr	r2, [sp, #60]	; 0x3c
   1fd00:	bl	201c4 <__assert_fail@plt+0xea70>
   1fd04:	str	r0, [fp, #-36]	; 0xffffffdc
   1fd08:	ldr	r0, [fp, #-16]
   1fd0c:	movw	r1, #10
   1fd10:	str	r1, [r0]
   1fd14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd18:	ldr	r3, [fp, #-16]
   1fd1c:	movw	r1, #0
   1fd20:	str	r1, [sp, #56]	; 0x38
   1fd24:	ldr	r2, [sp, #56]	; 0x38
   1fd28:	bl	201c4 <__assert_fail@plt+0xea70>
   1fd2c:	str	r0, [fp, #-40]	; 0xffffffd8
   1fd30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fd38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fd3c:	movw	r3, #10
   1fd40:	bl	1e160 <__assert_fail@plt+0xca0c>
   1fd44:	str	r0, [fp, #-28]	; 0xffffffe4
   1fd48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fd4c:	movw	r1, #0
   1fd50:	cmp	r0, r1
   1fd54:	movw	r0, #1
   1fd58:	str	r0, [sp, #52]	; 0x34
   1fd5c:	beq	1fd90 <__assert_fail@plt+0xe63c>
   1fd60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fd64:	movw	r1, #0
   1fd68:	cmp	r0, r1
   1fd6c:	movw	r0, #1
   1fd70:	str	r0, [sp, #52]	; 0x34
   1fd74:	beq	1fd90 <__assert_fail@plt+0xe63c>
   1fd78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fd7c:	movw	r1, #0
   1fd80:	cmp	r0, r1
   1fd84:	movw	r0, #0
   1fd88:	moveq	r0, #1
   1fd8c:	str	r0, [sp, #52]	; 0x34
   1fd90:	ldr	r0, [sp, #52]	; 0x34
   1fd94:	tst	r0, #1
   1fd98:	beq	1fdb4 <__assert_fail@plt+0xe660>
   1fd9c:	ldr	r0, [fp, #12]
   1fda0:	movw	r1, #12
   1fda4:	str	r1, [r0]
   1fda8:	movw	r0, #0
   1fdac:	str	r0, [fp, #-4]
   1fdb0:	b	201b8 <__assert_fail@plt+0xea64>
   1fdb4:	b	1fe00 <__assert_fail@plt+0xe6ac>
   1fdb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fdbc:	ldr	r3, [fp, #-16]
   1fdc0:	movw	r1, #0
   1fdc4:	str	r1, [sp, #48]	; 0x30
   1fdc8:	ldr	r2, [sp, #48]	; 0x30
   1fdcc:	bl	201c4 <__assert_fail@plt+0xea70>
   1fdd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1fdd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fdd8:	movw	r1, #0
   1fddc:	cmp	r0, r1
   1fde0:	bne	1fdfc <__assert_fail@plt+0xe6a8>
   1fde4:	ldr	r0, [fp, #12]
   1fde8:	movw	r1, #12
   1fdec:	str	r1, [r0]
   1fdf0:	movw	r0, #0
   1fdf4:	str	r0, [fp, #-4]
   1fdf8:	b	201b8 <__assert_fail@plt+0xea64>
   1fdfc:	b	1fe00 <__assert_fail@plt+0xe6ac>
   1fe00:	ldr	r0, [fp, #-16]
   1fe04:	ldr	r1, [fp, #-8]
   1fe08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fe0c:	bl	1decc <__assert_fail@plt+0xc778>
   1fe10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fe14:	str	r0, [fp, #-4]
   1fe18:	b	201b8 <__assert_fail@plt+0xea64>
   1fe1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe20:	ldr	r3, [fp, #-16]
   1fe24:	movw	r1, #0
   1fe28:	str	r1, [sp, #44]	; 0x2c
   1fe2c:	ldr	r2, [sp, #44]	; 0x2c
   1fe30:	bl	201c4 <__assert_fail@plt+0xea70>
   1fe34:	str	r0, [fp, #-28]	; 0xffffffe4
   1fe38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fe3c:	movw	r1, #0
   1fe40:	cmp	r0, r1
   1fe44:	bne	1fe60 <__assert_fail@plt+0xe70c>
   1fe48:	ldr	r0, [fp, #12]
   1fe4c:	movw	r1, #12
   1fe50:	str	r1, [r0]
   1fe54:	movw	r0, #0
   1fe58:	str	r0, [fp, #-4]
   1fe5c:	b	201b8 <__assert_fail@plt+0xea64>
   1fe60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe64:	ldr	r0, [r0, #92]	; 0x5c
   1fe68:	cmp	r0, #1
   1fe6c:	ble	1fe88 <__assert_fail@plt+0xe734>
   1fe70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe74:	ldrb	r1, [r0, #88]	; 0x58
   1fe78:	bic	r1, r1, #2
   1fe7c:	movw	r2, #2
   1fe80:	orr	r1, r1, r2
   1fe84:	strb	r1, [r0, #88]	; 0x58
   1fe88:	b	20010 <__assert_fail@plt+0xe8bc>
   1fe8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fe90:	ldr	r1, [fp, #-8]
   1fe94:	ldr	r1, [r1, #64]	; 0x40
   1fe98:	ldr	r2, [fp, #-16]
   1fe9c:	ldr	r2, [r2, #4]
   1fea0:	and	r2, r2, #255	; 0xff
   1fea4:	cmp	r2, #33	; 0x21
   1fea8:	movw	r2, #0
   1feac:	moveq	r2, #1
   1feb0:	ldr	r3, [fp, #12]
   1feb4:	movw	ip, #52288	; 0xcc40
   1feb8:	movt	ip, #3
   1febc:	str	r2, [sp, #40]	; 0x28
   1fec0:	mov	r2, ip
   1fec4:	movw	ip, #51069	; 0xc77d
   1fec8:	movt	ip, #3
   1fecc:	str	r3, [sp, #36]	; 0x24
   1fed0:	mov	r3, ip
   1fed4:	ldr	ip, [sp, #40]	; 0x28
   1fed8:	and	lr, ip, #1
   1fedc:	str	lr, [sp]
   1fee0:	ldr	lr, [sp, #36]	; 0x24
   1fee4:	str	lr, [sp, #4]
   1fee8:	bl	20fc0 <__assert_fail@plt+0xf86c>
   1feec:	str	r0, [fp, #-28]	; 0xffffffe4
   1fef0:	ldr	r0, [fp, #12]
   1fef4:	ldr	r0, [r0]
   1fef8:	cmp	r0, #0
   1fefc:	movw	r0, #0
   1ff00:	str	r0, [sp, #32]
   1ff04:	beq	1ff20 <__assert_fail@plt+0xe7cc>
   1ff08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ff0c:	movw	r1, #0
   1ff10:	cmp	r0, r1
   1ff14:	movw	r0, #0
   1ff18:	moveq	r0, #1
   1ff1c:	str	r0, [sp, #32]
   1ff20:	ldr	r0, [sp, #32]
   1ff24:	tst	r0, #1
   1ff28:	beq	1ff38 <__assert_fail@plt+0xe7e4>
   1ff2c:	movw	r0, #0
   1ff30:	str	r0, [fp, #-4]
   1ff34:	b	201b8 <__assert_fail@plt+0xea64>
   1ff38:	b	20010 <__assert_fail@plt+0xe8bc>
   1ff3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ff40:	ldr	r1, [fp, #-8]
   1ff44:	ldr	r1, [r1, #64]	; 0x40
   1ff48:	ldr	r2, [fp, #-16]
   1ff4c:	ldr	r2, [r2, #4]
   1ff50:	and	r2, r2, #255	; 0xff
   1ff54:	cmp	r2, #35	; 0x23
   1ff58:	movw	r2, #0
   1ff5c:	moveq	r2, #1
   1ff60:	ldr	r3, [fp, #12]
   1ff64:	movw	ip, #52294	; 0xcc46
   1ff68:	movt	ip, #3
   1ff6c:	str	r2, [sp, #28]
   1ff70:	mov	r2, ip
   1ff74:	movw	ip, #49863	; 0xc2c7
   1ff78:	movt	ip, #3
   1ff7c:	str	r3, [sp, #24]
   1ff80:	mov	r3, ip
   1ff84:	ldr	ip, [sp, #28]
   1ff88:	and	lr, ip, #1
   1ff8c:	str	lr, [sp]
   1ff90:	ldr	lr, [sp, #24]
   1ff94:	str	lr, [sp, #4]
   1ff98:	bl	20fc0 <__assert_fail@plt+0xf86c>
   1ff9c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ffa0:	ldr	r0, [fp, #12]
   1ffa4:	ldr	r0, [r0]
   1ffa8:	cmp	r0, #0
   1ffac:	movw	r0, #0
   1ffb0:	str	r0, [sp, #20]
   1ffb4:	beq	1ffd0 <__assert_fail@plt+0xe87c>
   1ffb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ffbc:	movw	r1, #0
   1ffc0:	cmp	r0, r1
   1ffc4:	movw	r0, #0
   1ffc8:	moveq	r0, #1
   1ffcc:	str	r0, [sp, #20]
   1ffd0:	ldr	r0, [sp, #20]
   1ffd4:	tst	r0, #1
   1ffd8:	beq	1ffe8 <__assert_fail@plt+0xe894>
   1ffdc:	movw	r0, #0
   1ffe0:	str	r0, [fp, #-4]
   1ffe4:	b	201b8 <__assert_fail@plt+0xea64>
   1ffe8:	b	20010 <__assert_fail@plt+0xe8bc>
   1ffec:	movw	r0, #0
   1fff0:	str	r0, [fp, #-4]
   1fff4:	b	201b8 <__assert_fail@plt+0xea64>
   1fff8:	ldr	r0, [fp, #12]
   1fffc:	movw	r1, #5
   20000:	str	r1, [r0]
   20004:	movw	r0, #0
   20008:	str	r0, [fp, #-4]
   2000c:	b	201b8 <__assert_fail@plt+0xea64>
   20010:	ldr	r0, [fp, #-16]
   20014:	ldr	r1, [fp, #-8]
   20018:	ldr	r2, [fp, #-20]	; 0xffffffec
   2001c:	bl	1decc <__assert_fail@plt+0xc778>
   20020:	ldr	r0, [fp, #-16]
   20024:	ldr	r0, [r0, #4]
   20028:	and	r0, r0, #255	; 0xff
   2002c:	cmp	r0, #11
   20030:	movw	r0, #1
   20034:	str	r0, [sp, #16]
   20038:	beq	20090 <__assert_fail@plt+0xe93c>
   2003c:	ldr	r0, [fp, #-16]
   20040:	ldr	r0, [r0, #4]
   20044:	and	r0, r0, #255	; 0xff
   20048:	cmp	r0, #18
   2004c:	movw	r0, #1
   20050:	str	r0, [sp, #16]
   20054:	beq	20090 <__assert_fail@plt+0xe93c>
   20058:	ldr	r0, [fp, #-16]
   2005c:	ldr	r0, [r0, #4]
   20060:	and	r0, r0, #255	; 0xff
   20064:	cmp	r0, #19
   20068:	movw	r0, #1
   2006c:	str	r0, [sp, #16]
   20070:	beq	20090 <__assert_fail@plt+0xe93c>
   20074:	ldr	r0, [fp, #-16]
   20078:	ldr	r0, [r0, #4]
   2007c:	and	r0, r0, #255	; 0xff
   20080:	cmp	r0, #23
   20084:	movw	r0, #0
   20088:	moveq	r0, #1
   2008c:	str	r0, [sp, #16]
   20090:	ldr	r0, [sp, #16]
   20094:	tst	r0, #1
   20098:	beq	201b0 <__assert_fail@plt+0xea5c>
   2009c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   200a0:	ldr	r1, [fp, #-8]
   200a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   200a8:	ldr	r3, [fp, #-16]
   200ac:	ldr	ip, [fp, #-20]	; 0xffffffec
   200b0:	ldr	lr, [fp, #12]
   200b4:	str	ip, [sp]
   200b8:	str	lr, [sp, #4]
   200bc:	bl	212f4 <__assert_fail@plt+0xfba0>
   200c0:	str	r0, [fp, #-44]	; 0xffffffd4
   200c4:	ldr	r0, [fp, #12]
   200c8:	ldr	r0, [r0]
   200cc:	cmp	r0, #0
   200d0:	movw	r0, #0
   200d4:	str	r0, [sp, #12]
   200d8:	beq	200f4 <__assert_fail@plt+0xe9a0>
   200dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   200e0:	movw	r1, #0
   200e4:	cmp	r0, r1
   200e8:	movw	r0, #0
   200ec:	moveq	r0, #1
   200f0:	str	r0, [sp, #12]
   200f4:	ldr	r0, [sp, #12]
   200f8:	tst	r0, #1
   200fc:	beq	20130 <__assert_fail@plt+0xe9dc>
   20100:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20104:	movw	r1, #0
   20108:	cmp	r0, r1
   2010c:	beq	20124 <__assert_fail@plt+0xe9d0>
   20110:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20114:	movw	r1, #63168	; 0xf6c0
   20118:	movt	r1, #1
   2011c:	movw	r2, #0
   20120:	bl	1f550 <__assert_fail@plt+0xddfc>
   20124:	movw	r0, #0
   20128:	str	r0, [fp, #-4]
   2012c:	b	201b8 <__assert_fail@plt+0xea64>
   20130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20134:	str	r0, [fp, #-28]	; 0xffffffe4
   20138:	ldr	r0, [fp, #-20]	; 0xffffffec
   2013c:	and	r0, r0, #16777216	; 0x1000000
   20140:	cmp	r0, #0
   20144:	beq	201ac <__assert_fail@plt+0xea58>
   20148:	ldr	r0, [fp, #-16]
   2014c:	ldr	r0, [r0, #4]
   20150:	and	r0, r0, #255	; 0xff
   20154:	cmp	r0, #11
   20158:	beq	20170 <__assert_fail@plt+0xea1c>
   2015c:	ldr	r0, [fp, #-16]
   20160:	ldr	r0, [r0, #4]
   20164:	and	r0, r0, #255	; 0xff
   20168:	cmp	r0, #23
   2016c:	bne	201ac <__assert_fail@plt+0xea58>
   20170:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20174:	movw	r1, #0
   20178:	cmp	r0, r1
   2017c:	beq	20194 <__assert_fail@plt+0xea40>
   20180:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20184:	movw	r1, #63168	; 0xf6c0
   20188:	movt	r1, #1
   2018c:	movw	r2, #0
   20190:	bl	1f550 <__assert_fail@plt+0xddfc>
   20194:	ldr	r0, [fp, #12]
   20198:	movw	r1, #13
   2019c:	str	r1, [r0]
   201a0:	movw	r0, #0
   201a4:	str	r0, [fp, #-4]
   201a8:	b	201b8 <__assert_fail@plt+0xea64>
   201ac:	b	20020 <__assert_fail@plt+0xe8cc>
   201b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   201b4:	str	r0, [fp, #-4]
   201b8:	ldr	r0, [fp, #-4]
   201bc:	mov	sp, fp
   201c0:	pop	{fp, pc}
   201c4:	push	{fp, lr}
   201c8:	mov	fp, sp
   201cc:	sub	sp, sp, #32
   201d0:	str	r0, [fp, #-8]
   201d4:	str	r1, [fp, #-12]
   201d8:	str	r2, [sp, #16]
   201dc:	str	r3, [sp, #12]
   201e0:	ldr	r0, [fp, #-8]
   201e4:	ldr	r0, [r0, #64]	; 0x40
   201e8:	cmp	r0, #31
   201ec:	bne	20240 <__assert_fail@plt+0xeaec>
   201f0:	movw	r0, #996	; 0x3e4
   201f4:	bl	3816c <__assert_fail@plt+0x26a18>
   201f8:	str	r0, [sp, #4]
   201fc:	ldr	r0, [sp, #4]
   20200:	movw	r1, #0
   20204:	cmp	r0, r1
   20208:	bne	20218 <__assert_fail@plt+0xeac4>
   2020c:	movw	r0, #0
   20210:	str	r0, [fp, #-4]
   20214:	b	2031c <__assert_fail@plt+0xebc8>
   20218:	ldr	r0, [fp, #-8]
   2021c:	ldr	r0, [r0, #56]	; 0x38
   20220:	ldr	r1, [sp, #4]
   20224:	str	r0, [r1]
   20228:	ldr	r0, [sp, #4]
   2022c:	ldr	r1, [fp, #-8]
   20230:	str	r0, [r1, #56]	; 0x38
   20234:	ldr	r0, [fp, #-8]
   20238:	movw	r1, #0
   2023c:	str	r1, [r0, #64]	; 0x40
   20240:	ldr	r0, [fp, #-8]
   20244:	ldr	r1, [r0, #56]	; 0x38
   20248:	ldr	r2, [r0, #64]	; 0x40
   2024c:	add	r1, r1, #4
   20250:	add	r3, r2, #1
   20254:	str	r3, [r0, #64]	; 0x40
   20258:	add	r0, r1, r2, lsl #5
   2025c:	str	r0, [sp, #8]
   20260:	ldr	r0, [sp, #8]
   20264:	movw	r1, #0
   20268:	str	r1, [r0]
   2026c:	ldr	r0, [fp, #-12]
   20270:	ldr	r2, [sp, #8]
   20274:	str	r0, [r2, #4]
   20278:	ldr	r0, [sp, #16]
   2027c:	ldr	r2, [sp, #8]
   20280:	str	r0, [r2, #8]
   20284:	ldr	r0, [sp, #8]
   20288:	ldr	r2, [sp, #12]
   2028c:	ldr	r3, [r2]
   20290:	str	r3, [r0, #20]
   20294:	ldr	r2, [r2, #4]
   20298:	str	r2, [r0, #24]
   2029c:	ldr	r0, [sp, #8]
   202a0:	ldr	r2, [r0, #24]
   202a4:	mvn	r3, #262144	; 0x40000
   202a8:	and	r2, r2, r3
   202ac:	str	r2, [r0, #24]
   202b0:	ldr	r0, [sp, #8]
   202b4:	ldr	r2, [r0, #24]
   202b8:	mvn	r3, #524288	; 0x80000
   202bc:	and	r2, r2, r3
   202c0:	str	r2, [r0, #24]
   202c4:	ldr	r0, [sp, #8]
   202c8:	str	r1, [r0, #12]
   202cc:	ldr	r0, [sp, #8]
   202d0:	str	r1, [r0, #16]
   202d4:	ldr	r0, [sp, #8]
   202d8:	mvn	r2, #0
   202dc:	str	r2, [r0, #28]
   202e0:	ldr	r0, [fp, #-12]
   202e4:	cmp	r0, r1
   202e8:	beq	202f8 <__assert_fail@plt+0xeba4>
   202ec:	ldr	r0, [sp, #8]
   202f0:	ldr	r1, [fp, #-12]
   202f4:	str	r0, [r1]
   202f8:	ldr	r0, [sp, #16]
   202fc:	movw	r1, #0
   20300:	cmp	r0, r1
   20304:	beq	20314 <__assert_fail@plt+0xebc0>
   20308:	ldr	r0, [sp, #8]
   2030c:	ldr	r1, [sp, #16]
   20310:	str	r0, [r1]
   20314:	ldr	r0, [sp, #8]
   20318:	str	r0, [fp, #-4]
   2031c:	ldr	r0, [fp, #-4]
   20320:	mov	sp, fp
   20324:	pop	{fp, pc}
   20328:	push	{fp, lr}
   2032c:	mov	fp, sp
   20330:	sub	sp, sp, #56	; 0x38
   20334:	ldr	ip, [fp, #12]
   20338:	ldr	lr, [fp, #8]
   2033c:	str	r0, [fp, #-8]
   20340:	str	r1, [fp, #-12]
   20344:	str	r2, [fp, #-16]
   20348:	str	r3, [fp, #-20]	; 0xffffffec
   2034c:	ldr	r0, [fp, #-12]
   20350:	ldr	r0, [r0]
   20354:	str	r0, [fp, #-24]	; 0xffffffe8
   20358:	ldr	r0, [fp, #-12]
   2035c:	ldr	r1, [r0, #24]
   20360:	add	r2, r1, #1
   20364:	str	r2, [r0, #24]
   20368:	str	r1, [sp, #24]
   2036c:	ldr	r0, [fp, #-16]
   20370:	ldr	r1, [fp, #-8]
   20374:	ldr	r2, [fp, #-20]	; 0xffffffec
   20378:	orr	r2, r2, #8388608	; 0x800000
   2037c:	str	ip, [sp, #20]
   20380:	str	lr, [sp, #16]
   20384:	bl	1decc <__assert_fail@plt+0xc778>
   20388:	ldr	r0, [fp, #-16]
   2038c:	ldr	r0, [r0, #4]
   20390:	and	r0, r0, #255	; 0xff
   20394:	cmp	r0, #9
   20398:	bne	203a8 <__assert_fail@plt+0xec54>
   2039c:	movw	r0, #0
   203a0:	str	r0, [sp, #28]
   203a4:	b	20460 <__assert_fail@plt+0xed0c>
   203a8:	ldr	r0, [fp, #-8]
   203ac:	ldr	r1, [fp, #-12]
   203b0:	ldr	r2, [fp, #-16]
   203b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   203b8:	ldr	ip, [fp, #8]
   203bc:	ldr	lr, [fp, #12]
   203c0:	str	ip, [sp]
   203c4:	str	lr, [sp, #4]
   203c8:	bl	1df0c <__assert_fail@plt+0xc7b8>
   203cc:	str	r0, [sp, #28]
   203d0:	ldr	r0, [fp, #12]
   203d4:	ldr	r0, [r0]
   203d8:	cmp	r0, #0
   203dc:	movw	r0, #0
   203e0:	str	r0, [sp, #12]
   203e4:	bne	20404 <__assert_fail@plt+0xecb0>
   203e8:	ldr	r0, [fp, #-16]
   203ec:	ldr	r0, [r0, #4]
   203f0:	and	r0, r0, #255	; 0xff
   203f4:	cmp	r0, #9
   203f8:	movw	r0, #0
   203fc:	movne	r0, #1
   20400:	str	r0, [sp, #12]
   20404:	ldr	r0, [sp, #12]
   20408:	tst	r0, #1
   2040c:	beq	20440 <__assert_fail@plt+0xecec>
   20410:	ldr	r0, [sp, #28]
   20414:	movw	r1, #0
   20418:	cmp	r0, r1
   2041c:	beq	20434 <__assert_fail@plt+0xece0>
   20420:	ldr	r0, [sp, #28]
   20424:	movw	r1, #63168	; 0xf6c0
   20428:	movt	r1, #1
   2042c:	movw	r2, #0
   20430:	bl	1f550 <__assert_fail@plt+0xddfc>
   20434:	ldr	r0, [fp, #12]
   20438:	movw	r1, #8
   2043c:	str	r1, [r0]
   20440:	ldr	r0, [fp, #12]
   20444:	ldr	r0, [r0]
   20448:	cmp	r0, #0
   2044c:	beq	2045c <__assert_fail@plt+0xed08>
   20450:	movw	r0, #0
   20454:	str	r0, [fp, #-4]
   20458:	b	204dc <__assert_fail@plt+0xed88>
   2045c:	b	20460 <__assert_fail@plt+0xed0c>
   20460:	ldr	r0, [sp, #24]
   20464:	cmp	r0, #8
   20468:	bhi	20488 <__assert_fail@plt+0xed34>
   2046c:	ldr	r0, [sp, #24]
   20470:	movw	r1, #1
   20474:	lsl	r0, r1, r0
   20478:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2047c:	ldr	r2, [r1, #84]	; 0x54
   20480:	orr	r0, r2, r0
   20484:	str	r0, [r1, #84]	; 0x54
   20488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2048c:	ldr	r1, [sp, #28]
   20490:	movw	r2, #0
   20494:	movw	r3, #17
   20498:	bl	1e160 <__assert_fail@plt+0xca0c>
   2049c:	str	r0, [sp, #28]
   204a0:	ldr	r0, [sp, #28]
   204a4:	movw	r1, #0
   204a8:	cmp	r0, r1
   204ac:	bne	204c8 <__assert_fail@plt+0xed74>
   204b0:	ldr	r0, [fp, #12]
   204b4:	movw	r1, #12
   204b8:	str	r1, [r0]
   204bc:	movw	r0, #0
   204c0:	str	r0, [fp, #-4]
   204c4:	b	204dc <__assert_fail@plt+0xed88>
   204c8:	ldr	r0, [sp, #24]
   204cc:	ldr	r1, [sp, #28]
   204d0:	str	r0, [r1, #20]
   204d4:	ldr	r0, [sp, #28]
   204d8:	str	r0, [fp, #-4]
   204dc:	ldr	r0, [fp, #-4]
   204e0:	mov	sp, fp
   204e4:	pop	{fp, pc}
   204e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   204ec:	add	fp, sp, #24
   204f0:	sub	sp, sp, #304	; 0x130
   204f4:	ldr	ip, [fp, #8]
   204f8:	str	r0, [fp, #-36]	; 0xffffffdc
   204fc:	str	r1, [fp, #-40]	; 0xffffffd8
   20500:	str	r2, [fp, #-44]	; 0xffffffd4
   20504:	str	r3, [fp, #-48]	; 0xffffffd0
   20508:	movw	r0, #0
   2050c:	str	r0, [fp, #-52]	; 0xffffffcc
   20510:	str	r0, [fp, #-56]	; 0xffffffc8
   20514:	str	r0, [fp, #-60]	; 0xffffffc4
   20518:	str	r0, [fp, #-64]	; 0xffffffc0
   2051c:	str	r0, [fp, #-68]	; 0xffffffbc
   20520:	str	r0, [fp, #-72]	; 0xffffffb8
   20524:	str	r0, [fp, #-92]	; 0xffffffa4
   20528:	str	r0, [fp, #-96]	; 0xffffffa0
   2052c:	str	r0, [fp, #-100]	; 0xffffff9c
   20530:	str	r0, [fp, #-104]	; 0xffffff98
   20534:	str	r0, [fp, #-108]	; 0xffffff94
   20538:	movw	r0, #0
   2053c:	strb	r0, [fp, #-109]	; 0xffffff93
   20540:	movw	r0, #1
   20544:	strb	r0, [fp, #-121]	; 0xffffff87
   20548:	movw	r0, #32
   2054c:	movw	r1, #1
   20550:	str	ip, [sp, #88]	; 0x58
   20554:	bl	380d0 <__assert_fail@plt+0x2697c>
   20558:	str	r0, [fp, #-84]	; 0xffffffac
   2055c:	movw	r0, #40	; 0x28
   20560:	movw	r1, #1
   20564:	bl	380d0 <__assert_fail@plt+0x2697c>
   20568:	str	r0, [fp, #-88]	; 0xffffffa8
   2056c:	ldr	r0, [fp, #-84]	; 0xffffffac
   20570:	movw	r1, #0
   20574:	cmp	r0, r1
   20578:	movw	r0, #1
   2057c:	str	r0, [sp, #84]	; 0x54
   20580:	beq	2059c <__assert_fail@plt+0xee48>
   20584:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20588:	movw	r1, #0
   2058c:	cmp	r0, r1
   20590:	movw	r0, #0
   20594:	moveq	r0, #1
   20598:	str	r0, [sp, #84]	; 0x54
   2059c:	ldr	r0, [sp, #84]	; 0x54
   205a0:	tst	r0, #1
   205a4:	beq	205d0 <__assert_fail@plt+0xee7c>
   205a8:	ldr	r0, [fp, #-84]	; 0xffffffac
   205ac:	bl	15f68 <__assert_fail@plt+0x4814>
   205b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   205b4:	bl	15f68 <__assert_fail@plt+0x4814>
   205b8:	ldr	r0, [fp, #8]
   205bc:	movw	r1, #12
   205c0:	str	r1, [r0]
   205c4:	movw	r0, #0
   205c8:	str	r0, [fp, #-32]	; 0xffffffe0
   205cc:	b	20e04 <__assert_fail@plt+0xf6b0>
   205d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   205d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   205d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   205dc:	bl	21940 <__assert_fail@plt+0x101ec>
   205e0:	str	r0, [fp, #-120]	; 0xffffff88
   205e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   205e8:	ldr	r0, [r0, #4]
   205ec:	and	r0, r0, #255	; 0xff
   205f0:	cmp	r0, #2
   205f4:	bne	20608 <__assert_fail@plt+0xeeb4>
   205f8:	ldr	r0, [fp, #8]
   205fc:	movw	r1, #2
   20600:	str	r1, [r0]
   20604:	b	20dec <__assert_fail@plt+0xf698>
   20608:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2060c:	ldr	r0, [r0, #4]
   20610:	and	r0, r0, #255	; 0xff
   20614:	cmp	r0, #25
   20618:	bne	206a4 <__assert_fail@plt+0xef50>
   2061c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20620:	ldrb	r1, [r0, #16]
   20624:	bic	r1, r1, #1
   20628:	movw	r2, #1
   2062c:	orr	r1, r1, r2
   20630:	strb	r1, [r0, #16]
   20634:	strb	r2, [fp, #-109]	; 0xffffff93
   20638:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2063c:	and	r0, r0, #256	; 0x100
   20640:	cmp	r0, #0
   20644:	beq	20654 <__assert_fail@plt+0xef00>
   20648:	ldr	r0, [fp, #-84]	; 0xffffffac
   2064c:	movw	r1, #10
   20650:	bl	21cb0 <__assert_fail@plt+0x1055c>
   20654:	ldr	r0, [fp, #-120]	; 0xffffff88
   20658:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2065c:	ldr	r2, [r1, #40]	; 0x28
   20660:	add	r0, r2, r0
   20664:	str	r0, [r1, #40]	; 0x28
   20668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2066c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20670:	ldr	r2, [fp, #-48]	; 0xffffffd0
   20674:	bl	21940 <__assert_fail@plt+0x101ec>
   20678:	str	r0, [fp, #-120]	; 0xffffff88
   2067c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20680:	ldr	r0, [r0, #4]
   20684:	and	r0, r0, #255	; 0xff
   20688:	cmp	r0, #2
   2068c:	bne	206a0 <__assert_fail@plt+0xef4c>
   20690:	ldr	r0, [fp, #8]
   20694:	movw	r1, #2
   20698:	str	r1, [r0]
   2069c:	b	20dec <__assert_fail@plt+0xf698>
   206a0:	b	206a4 <__assert_fail@plt+0xef50>
   206a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   206a8:	ldr	r0, [r0, #4]
   206ac:	and	r0, r0, #255	; 0xff
   206b0:	cmp	r0, #21
   206b4:	bne	206d0 <__assert_fail@plt+0xef7c>
   206b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   206bc:	ldr	r1, [r0, #4]
   206c0:	mvn	r2, #255	; 0xff
   206c4:	and	r1, r1, r2
   206c8:	orr	r1, r1, #1
   206cc:	str	r1, [r0, #4]
   206d0:	b	206d4 <__assert_fail@plt+0xef80>
   206d4:	add	r0, sp, #156	; 0x9c
   206d8:	movw	r1, #0
   206dc:	str	r1, [sp, #116]	; 0x74
   206e0:	movw	r1, #0
   206e4:	strb	r1, [sp, #115]	; 0x73
   206e8:	str	r0, [fp, #-128]	; 0xffffff80
   206ec:	movw	r0, #3
   206f0:	str	r0, [fp, #-132]	; 0xffffff7c
   206f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   206f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   206fc:	ldr	r3, [fp, #-120]	; 0xffffff88
   20700:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20704:	ldr	ip, [fp, #-48]	; 0xffffffd0
   20708:	ldrb	lr, [fp, #-121]	; 0xffffff87
   2070c:	sub	r4, fp, #132	; 0x84
   20710:	str	r0, [sp, #80]	; 0x50
   20714:	mov	r0, r4
   20718:	ldr	r4, [sp, #80]	; 0x50
   2071c:	str	r4, [sp]
   20720:	str	ip, [sp, #4]
   20724:	and	ip, lr, #1
   20728:	str	ip, [sp, #8]
   2072c:	bl	21cf8 <__assert_fail@plt+0x105a4>
   20730:	str	r0, [sp, #120]	; 0x78
   20734:	ldr	r0, [sp, #120]	; 0x78
   20738:	cmp	r0, #0
   2073c:	beq	20750 <__assert_fail@plt+0xeffc>
   20740:	ldr	r0, [sp, #120]	; 0x78
   20744:	ldr	r1, [fp, #8]
   20748:	str	r0, [r1]
   2074c:	b	20dec <__assert_fail@plt+0xf698>
   20750:	movw	r0, #0
   20754:	strb	r0, [fp, #-121]	; 0xffffff87
   20758:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2075c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20760:	ldr	r2, [fp, #-48]	; 0xffffffd0
   20764:	bl	21940 <__assert_fail@plt+0x101ec>
   20768:	str	r0, [fp, #-120]	; 0xffffff88
   2076c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   20770:	cmp	r0, #4
   20774:	beq	2085c <__assert_fail@plt+0xf108>
   20778:	ldr	r0, [fp, #-132]	; 0xffffff7c
   2077c:	cmp	r0, #2
   20780:	beq	2085c <__assert_fail@plt+0xf108>
   20784:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20788:	ldr	r0, [r0, #4]
   2078c:	and	r0, r0, #255	; 0xff
   20790:	cmp	r0, #2
   20794:	bne	207a8 <__assert_fail@plt+0xf054>
   20798:	ldr	r0, [fp, #8]
   2079c:	movw	r1, #7
   207a0:	str	r1, [r0]
   207a4:	b	20dec <__assert_fail@plt+0xf698>
   207a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   207ac:	ldr	r0, [r0, #4]
   207b0:	and	r0, r0, #255	; 0xff
   207b4:	cmp	r0, #22
   207b8:	bne	20858 <__assert_fail@plt+0xf104>
   207bc:	ldr	r0, [fp, #-120]	; 0xffffff88
   207c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   207c4:	ldr	r2, [r1, #40]	; 0x28
   207c8:	add	r0, r2, r0
   207cc:	str	r0, [r1, #40]	; 0x28
   207d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   207d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   207d8:	add	r0, sp, #104	; 0x68
   207dc:	bl	21940 <__assert_fail@plt+0x101ec>
   207e0:	str	r0, [sp, #116]	; 0x74
   207e4:	ldr	r0, [sp, #108]	; 0x6c
   207e8:	and	r0, r0, #255	; 0xff
   207ec:	cmp	r0, #2
   207f0:	bne	20804 <__assert_fail@plt+0xf0b0>
   207f4:	ldr	r0, [fp, #8]
   207f8:	movw	r1, #7
   207fc:	str	r1, [r0]
   20800:	b	20dec <__assert_fail@plt+0xf698>
   20804:	ldr	r0, [sp, #108]	; 0x6c
   20808:	and	r0, r0, #255	; 0xff
   2080c:	cmp	r0, #21
   20810:	bne	2084c <__assert_fail@plt+0xf0f8>
   20814:	ldr	r0, [fp, #-120]	; 0xffffff88
   20818:	movw	r1, #0
   2081c:	sub	r0, r1, r0
   20820:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20824:	ldr	r2, [r1, #40]	; 0x28
   20828:	add	r0, r2, r0
   2082c:	str	r0, [r1, #40]	; 0x28
   20830:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20834:	ldr	r1, [r0, #4]
   20838:	mvn	r2, #255	; 0xff
   2083c:	and	r1, r1, r2
   20840:	orr	r1, r1, #1
   20844:	str	r1, [r0, #4]
   20848:	b	20854 <__assert_fail@plt+0xf100>
   2084c:	movw	r0, #1
   20850:	strb	r0, [sp, #115]	; 0x73
   20854:	b	20858 <__assert_fail@plt+0xf104>
   20858:	b	2085c <__assert_fail@plt+0xf108>
   2085c:	ldrb	r0, [sp, #115]	; 0x73
   20860:	and	r0, r0, #1
   20864:	cmp	r0, #1
   20868:	bne	2098c <__assert_fail@plt+0xf238>
   2086c:	add	r0, sp, #124	; 0x7c
   20870:	str	r0, [fp, #-136]	; 0xffffff78
   20874:	movw	r0, #3
   20878:	str	r0, [fp, #-140]	; 0xffffff74
   2087c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20880:	ldr	r3, [sp, #116]	; 0x74
   20884:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20888:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2088c:	sub	ip, fp, #140	; 0x8c
   20890:	str	r0, [sp, #76]	; 0x4c
   20894:	mov	r0, ip
   20898:	add	ip, sp, #104	; 0x68
   2089c:	str	r2, [sp, #72]	; 0x48
   208a0:	mov	r2, ip
   208a4:	ldr	ip, [sp, #76]	; 0x4c
   208a8:	str	ip, [sp]
   208ac:	ldr	lr, [sp, #72]	; 0x48
   208b0:	str	lr, [sp, #4]
   208b4:	movw	r4, #1
   208b8:	and	r4, r4, #1
   208bc:	str	r4, [sp, #8]
   208c0:	bl	21cf8 <__assert_fail@plt+0x105a4>
   208c4:	str	r0, [sp, #120]	; 0x78
   208c8:	ldr	r0, [sp, #120]	; 0x78
   208cc:	cmp	r0, #0
   208d0:	beq	208e4 <__assert_fail@plt+0xf190>
   208d4:	ldr	r0, [sp, #120]	; 0x78
   208d8:	ldr	r1, [fp, #8]
   208dc:	str	r0, [r1]
   208e0:	b	20dec <__assert_fail@plt+0xf698>
   208e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   208e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   208ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   208f0:	bl	21940 <__assert_fail@plt+0x101ec>
   208f4:	str	r0, [fp, #-120]	; 0xffffff88
   208f8:	ldr	r0, [fp, #-84]	; 0xffffffac
   208fc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   20900:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20904:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20908:	ldr	ip, [fp, #-60]	; 0xffffffc4
   2090c:	ldr	lr, [fp, #-52]	; 0xffffffcc
   20910:	ldr	r4, [fp, #-56]	; 0xffffffc8
   20914:	ldr	r5, [fp, #-64]	; 0xffffffc0
   20918:	ldr	r6, [fp, #-68]	; 0xffffffbc
   2091c:	ldr	r7, [fp, #-72]	; 0xffffffb8
   20920:	sub	r8, fp, #96	; 0x60
   20924:	str	r2, [sp, #68]	; 0x44
   20928:	mov	r2, r8
   2092c:	sub	r8, fp, #132	; 0x84
   20930:	str	r3, [sp, #64]	; 0x40
   20934:	mov	r3, r8
   20938:	sub	r8, fp, #140	; 0x8c
   2093c:	str	r8, [sp]
   20940:	ldr	r8, [sp, #68]	; 0x44
   20944:	str	r8, [sp, #4]
   20948:	ldr	r9, [sp, #64]	; 0x40
   2094c:	str	r9, [sp, #8]
   20950:	str	ip, [sp, #12]
   20954:	str	lr, [sp, #16]
   20958:	str	r4, [sp, #20]
   2095c:	str	r5, [sp, #24]
   20960:	str	r6, [sp, #28]
   20964:	str	r7, [sp, #32]
   20968:	bl	21e78 <__assert_fail@plt+0x10724>
   2096c:	ldr	r1, [fp, #8]
   20970:	str	r0, [r1]
   20974:	ldr	r0, [fp, #8]
   20978:	ldr	r0, [r0]
   2097c:	cmp	r0, #0
   20980:	beq	20988 <__assert_fail@plt+0xf234>
   20984:	b	20dec <__assert_fail@plt+0xf698>
   20988:	b	20b38 <__assert_fail@plt+0xf3e4>
   2098c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   20990:	str	r0, [sp, #60]	; 0x3c
   20994:	add	r0, pc, #8
   20998:	ldr	r1, [sp, #60]	; 0x3c
   2099c:	ldr	r0, [r0, r1, lsl #2]
   209a0:	mov	pc, r0
   209a4:			; <UNDEFINED> instruction: 0x000209b8
   209a8:	andeq	r0, r2, r8, asr #19
   209ac:	andeq	r0, r2, ip, asr #20
   209b0:	andeq	r0, r2, r0, lsl #21
   209b4:	andeq	r0, r2, r0, ror #21
   209b8:	ldr	r0, [fp, #-84]	; 0xffffffac
   209bc:	ldrb	r1, [fp, #-128]	; 0xffffff80
   209c0:	bl	21cb0 <__assert_fail@plt+0x1055c>
   209c4:	b	20b34 <__assert_fail@plt+0xf3e0>
   209c8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   209cc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   209d0:	ldr	r1, [r1, #20]
   209d4:	cmp	r0, r1
   209d8:	bne	20a28 <__assert_fail@plt+0xf2d4>
   209dc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   209e0:	ldr	r0, [r0, #20]
   209e4:	mov	r1, #1
   209e8:	orr	r0, r1, r0, lsl #1
   209ec:	str	r0, [fp, #-100]	; 0xffffff9c
   209f0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   209f4:	ldr	r0, [r0]
   209f8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   209fc:	lsl	r1, r1, #2
   20a00:	bl	381dc <__assert_fail@plt+0x26a88>
   20a04:	str	r0, [sp, #100]	; 0x64
   20a08:	ldr	r0, [sp, #100]	; 0x64
   20a0c:	movw	r1, #0
   20a10:	cmp	r0, r1
   20a14:	bne	20a1c <__assert_fail@plt+0xf2c8>
   20a18:	b	20de0 <__assert_fail@plt+0xf68c>
   20a1c:	ldr	r0, [sp, #100]	; 0x64
   20a20:	ldr	r1, [fp, #-88]	; 0xffffffa8
   20a24:	str	r0, [r1]
   20a28:	ldr	r0, [fp, #-128]	; 0xffffff80
   20a2c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   20a30:	ldr	r2, [r1]
   20a34:	ldr	r3, [r1, #20]
   20a38:	add	ip, r3, #1
   20a3c:	str	ip, [r1, #20]
   20a40:	add	r1, r2, r3, lsl #2
   20a44:	str	r0, [r1]
   20a48:	b	20b34 <__assert_fail@plt+0xf3e0>
   20a4c:	ldr	r0, [fp, #-84]	; 0xffffffac
   20a50:	ldr	r1, [fp, #-88]	; 0xffffffa8
   20a54:	ldr	r3, [fp, #-128]	; 0xffffff80
   20a58:	sub	r2, fp, #104	; 0x68
   20a5c:	bl	222fc <__assert_fail@plt+0x10ba8>
   20a60:	ldr	r1, [fp, #8]
   20a64:	str	r0, [r1]
   20a68:	ldr	r0, [fp, #8]
   20a6c:	ldr	r0, [r0]
   20a70:	cmp	r0, #0
   20a74:	beq	20a7c <__assert_fail@plt+0xf328>
   20a78:	b	20dec <__assert_fail@plt+0xf698>
   20a7c:	b	20b34 <__assert_fail@plt+0xf3e0>
   20a80:	ldr	r0, [fp, #-84]	; 0xffffffac
   20a84:	ldr	r1, [fp, #-88]	; 0xffffffa8
   20a88:	ldr	r3, [fp, #-128]	; 0xffffff80
   20a8c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   20a90:	ldr	ip, [fp, #-64]	; 0xffffffc0
   20a94:	ldr	lr, [fp, #-68]	; 0xffffffbc
   20a98:	ldr	r4, [fp, #-72]	; 0xffffffb8
   20a9c:	sub	r5, fp, #92	; 0x5c
   20aa0:	str	r2, [sp, #56]	; 0x38
   20aa4:	mov	r2, r5
   20aa8:	ldr	r5, [sp, #56]	; 0x38
   20aac:	str	r5, [sp]
   20ab0:	str	ip, [sp, #4]
   20ab4:	str	lr, [sp, #8]
   20ab8:	str	r4, [sp, #12]
   20abc:	bl	22358 <__assert_fail@plt+0x10c04>
   20ac0:	ldr	r1, [fp, #8]
   20ac4:	str	r0, [r1]
   20ac8:	ldr	r0, [fp, #8]
   20acc:	ldr	r0, [r0]
   20ad0:	cmp	r0, #0
   20ad4:	beq	20adc <__assert_fail@plt+0xf388>
   20ad8:	b	20dec <__assert_fail@plt+0xf698>
   20adc:	b	20b34 <__assert_fail@plt+0xf3e0>
   20ae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20ae4:	ldr	r0, [r0, #64]	; 0x40
   20ae8:	ldr	r1, [fp, #-84]	; 0xffffffac
   20aec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   20af0:	ldr	r3, [fp, #-128]	; 0xffffff80
   20af4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   20af8:	sub	lr, fp, #108	; 0x6c
   20afc:	str	r3, [sp, #52]	; 0x34
   20b00:	mov	r3, lr
   20b04:	ldr	lr, [sp, #52]	; 0x34
   20b08:	str	lr, [sp]
   20b0c:	str	ip, [sp, #4]
   20b10:	bl	223dc <__assert_fail@plt+0x10c88>
   20b14:	ldr	r1, [fp, #8]
   20b18:	str	r0, [r1]
   20b1c:	ldr	r0, [fp, #8]
   20b20:	ldr	r0, [r0]
   20b24:	cmp	r0, #0
   20b28:	beq	20b30 <__assert_fail@plt+0xf3dc>
   20b2c:	b	20dec <__assert_fail@plt+0xf698>
   20b30:	b	20b34 <__assert_fail@plt+0xf3e0>
   20b34:	b	20b38 <__assert_fail@plt+0xf3e4>
   20b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20b3c:	ldr	r0, [r0, #4]
   20b40:	and	r0, r0, #255	; 0xff
   20b44:	cmp	r0, #2
   20b48:	bne	20b5c <__assert_fail@plt+0xf408>
   20b4c:	ldr	r0, [fp, #8]
   20b50:	movw	r1, #7
   20b54:	str	r1, [r0]
   20b58:	b	20dec <__assert_fail@plt+0xf698>
   20b5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20b60:	ldr	r0, [r0, #4]
   20b64:	and	r0, r0, #255	; 0xff
   20b68:	cmp	r0, #21
   20b6c:	bne	20b74 <__assert_fail@plt+0xf420>
   20b70:	b	20b78 <__assert_fail@plt+0xf424>
   20b74:	b	206d4 <__assert_fail@plt+0xef80>
   20b78:	ldr	r0, [fp, #-120]	; 0xffffff88
   20b7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20b80:	ldr	r2, [r1, #40]	; 0x28
   20b84:	add	r0, r2, r0
   20b88:	str	r0, [r1, #40]	; 0x28
   20b8c:	ldrb	r0, [fp, #-109]	; 0xffffff93
   20b90:	tst	r0, #1
   20b94:	beq	20ba0 <__assert_fail@plt+0xf44c>
   20b98:	ldr	r0, [fp, #-84]	; 0xffffffac
   20b9c:	bl	2307c <__assert_fail@plt+0x11928>
   20ba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20ba4:	ldr	r0, [r0, #92]	; 0x5c
   20ba8:	cmp	r0, #1
   20bac:	ble	20bc0 <__assert_fail@plt+0xf46c>
   20bb0:	ldr	r0, [fp, #-84]	; 0xffffffac
   20bb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20bb8:	ldr	r1, [r1, #60]	; 0x3c
   20bbc:	bl	230c4 <__assert_fail@plt+0x11970>
   20bc0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20bc4:	ldr	r0, [r0, #20]
   20bc8:	cmp	r0, #0
   20bcc:	bne	20c38 <__assert_fail@plt+0xf4e4>
   20bd0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20bd4:	ldr	r0, [r0, #24]
   20bd8:	cmp	r0, #0
   20bdc:	bne	20c38 <__assert_fail@plt+0xf4e4>
   20be0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20be4:	ldr	r0, [r0, #28]
   20be8:	cmp	r0, #0
   20bec:	bne	20c38 <__assert_fail@plt+0xf4e4>
   20bf0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20bf4:	ldr	r0, [r0, #32]
   20bf8:	cmp	r0, #0
   20bfc:	bne	20c38 <__assert_fail@plt+0xf4e4>
   20c00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20c04:	ldr	r0, [r0, #92]	; 0x5c
   20c08:	cmp	r0, #1
   20c0c:	ble	20d7c <__assert_fail@plt+0xf628>
   20c10:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20c14:	ldr	r0, [r0, #36]	; 0x24
   20c18:	cmp	r0, #0
   20c1c:	bne	20c38 <__assert_fail@plt+0xf4e4>
   20c20:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20c24:	ldrb	r0, [r0, #16]
   20c28:	and	r0, r0, #1
   20c2c:	and	r0, r0, #255	; 0xff
   20c30:	cmp	r0, #0
   20c34:	beq	20d7c <__assert_fail@plt+0xf628>
   20c38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20c3c:	ldrb	r1, [r0, #88]	; 0x58
   20c40:	bic	r1, r1, #2
   20c44:	movw	r2, #2
   20c48:	orr	r1, r1, r2
   20c4c:	strb	r1, [r0, #88]	; 0x58
   20c50:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20c54:	mvn	r1, #255	; 0xff
   20c58:	and	r0, r0, r1
   20c5c:	orr	r0, r0, #6
   20c60:	str	r0, [fp, #-76]	; 0xffffffb4
   20c64:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20c68:	str	r0, [fp, #-80]	; 0xffffffb0
   20c6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20c70:	movw	r1, #0
   20c74:	str	r1, [sp, #48]	; 0x30
   20c78:	ldr	r2, [sp, #48]	; 0x30
   20c7c:	sub	r3, fp, #80	; 0x50
   20c80:	bl	201c4 <__assert_fail@plt+0xea70>
   20c84:	str	r0, [sp, #96]	; 0x60
   20c88:	ldr	r0, [sp, #96]	; 0x60
   20c8c:	movw	r1, #0
   20c90:	cmp	r0, r1
   20c94:	bne	20c9c <__assert_fail@plt+0xf548>
   20c98:	b	20de0 <__assert_fail@plt+0xf68c>
   20c9c:	movw	r0, #0
   20ca0:	str	r0, [sp, #92]	; 0x5c
   20ca4:	ldr	r0, [sp, #92]	; 0x5c
   20ca8:	cmp	r0, #8
   20cac:	bge	20ce0 <__assert_fail@plt+0xf58c>
   20cb0:	ldr	r0, [fp, #-84]	; 0xffffffac
   20cb4:	ldr	r1, [sp, #92]	; 0x5c
   20cb8:	add	r0, r0, r1, lsl #2
   20cbc:	ldr	r0, [r0]
   20cc0:	cmp	r0, #0
   20cc4:	beq	20ccc <__assert_fail@plt+0xf578>
   20cc8:	b	20ce0 <__assert_fail@plt+0xf58c>
   20ccc:	b	20cd0 <__assert_fail@plt+0xf57c>
   20cd0:	ldr	r0, [sp, #92]	; 0x5c
   20cd4:	add	r0, r0, #1
   20cd8:	str	r0, [sp, #92]	; 0x5c
   20cdc:	b	20ca4 <__assert_fail@plt+0xf550>
   20ce0:	ldr	r0, [sp, #92]	; 0x5c
   20ce4:	cmp	r0, #8
   20ce8:	bge	20d68 <__assert_fail@plt+0xf614>
   20cec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20cf0:	mvn	r1, #255	; 0xff
   20cf4:	and	r0, r0, r1
   20cf8:	orr	r0, r0, #3
   20cfc:	str	r0, [fp, #-76]	; 0xffffffb4
   20d00:	ldr	r0, [fp, #-84]	; 0xffffffac
   20d04:	str	r0, [fp, #-80]	; 0xffffffb0
   20d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d0c:	movw	r1, #0
   20d10:	str	r1, [sp, #44]	; 0x2c
   20d14:	ldr	r2, [sp, #44]	; 0x2c
   20d18:	sub	r3, fp, #80	; 0x50
   20d1c:	bl	201c4 <__assert_fail@plt+0xea70>
   20d20:	str	r0, [fp, #-116]	; 0xffffff8c
   20d24:	ldr	r0, [fp, #-116]	; 0xffffff8c
   20d28:	movw	r1, #0
   20d2c:	cmp	r0, r1
   20d30:	bne	20d38 <__assert_fail@plt+0xf5e4>
   20d34:	b	20de0 <__assert_fail@plt+0xf68c>
   20d38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d3c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   20d40:	ldr	r2, [sp, #96]	; 0x60
   20d44:	movw	r3, #10
   20d48:	bl	1e160 <__assert_fail@plt+0xca0c>
   20d4c:	str	r0, [fp, #-116]	; 0xffffff8c
   20d50:	ldr	r0, [fp, #-116]	; 0xffffff8c
   20d54:	movw	r1, #0
   20d58:	cmp	r0, r1
   20d5c:	bne	20d64 <__assert_fail@plt+0xf610>
   20d60:	b	20de0 <__assert_fail@plt+0xf68c>
   20d64:	b	20d78 <__assert_fail@plt+0xf624>
   20d68:	ldr	r0, [fp, #-84]	; 0xffffffac
   20d6c:	bl	15f68 <__assert_fail@plt+0x4814>
   20d70:	ldr	r0, [sp, #96]	; 0x60
   20d74:	str	r0, [fp, #-116]	; 0xffffff8c
   20d78:	b	20dd4 <__assert_fail@plt+0xf680>
   20d7c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20d80:	bl	1b798 <__assert_fail@plt+0xa044>
   20d84:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20d88:	mvn	r1, #255	; 0xff
   20d8c:	and	r0, r0, r1
   20d90:	orr	r0, r0, #3
   20d94:	str	r0, [fp, #-76]	; 0xffffffb4
   20d98:	ldr	r0, [fp, #-84]	; 0xffffffac
   20d9c:	str	r0, [fp, #-80]	; 0xffffffb0
   20da0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20da4:	movw	r1, #0
   20da8:	str	r1, [sp, #40]	; 0x28
   20dac:	ldr	r2, [sp, #40]	; 0x28
   20db0:	sub	r3, fp, #80	; 0x50
   20db4:	bl	201c4 <__assert_fail@plt+0xea70>
   20db8:	str	r0, [fp, #-116]	; 0xffffff8c
   20dbc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   20dc0:	movw	r1, #0
   20dc4:	cmp	r0, r1
   20dc8:	bne	20dd0 <__assert_fail@plt+0xf67c>
   20dcc:	b	20de0 <__assert_fail@plt+0xf68c>
   20dd0:	b	20dd4 <__assert_fail@plt+0xf680>
   20dd4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   20dd8:	str	r0, [fp, #-32]	; 0xffffffe0
   20ddc:	b	20e04 <__assert_fail@plt+0xf6b0>
   20de0:	ldr	r0, [fp, #8]
   20de4:	movw	r1, #12
   20de8:	str	r1, [r0]
   20dec:	ldr	r0, [fp, #-84]	; 0xffffffac
   20df0:	bl	15f68 <__assert_fail@plt+0x4814>
   20df4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20df8:	bl	1b798 <__assert_fail@plt+0xa044>
   20dfc:	movw	r0, #0
   20e00:	str	r0, [fp, #-32]	; 0xffffffe0
   20e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20e08:	sub	sp, fp, #24
   20e0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20e10:	push	{fp, lr}
   20e14:	mov	fp, sp
   20e18:	sub	sp, sp, #32
   20e1c:	str	r0, [fp, #-4]
   20e20:	mov	r0, #0
   20e24:	str	r0, [fp, #-8]
   20e28:	str	r0, [sp, #16]
   20e2c:	ldr	r0, [fp, #-4]
   20e30:	ldrb	r1, [r0, #88]	; 0x58
   20e34:	orr	r1, r1, #16
   20e38:	strb	r1, [r0, #88]	; 0x58
   20e3c:	ldr	r0, [fp, #-4]
   20e40:	ldrb	r0, [r0, #88]	; 0x58
   20e44:	ubfx	r0, r0, #3, #1
   20e48:	and	r0, r0, #255	; 0xff
   20e4c:	cmp	r0, #0
   20e50:	bne	20f08 <__assert_fail@plt+0xf7b4>
   20e54:	mov	r0, #0
   20e58:	str	r0, [sp, #12]
   20e5c:	movw	r0, #0
   20e60:	movt	r0, #1023	; 0x3ff
   20e64:	str	r0, [sp, #8]
   20e68:	mvn	r0, #2013265921	; 0x78000001
   20e6c:	str	r0, [sp, #4]
   20e70:	mvn	r0, #-134217727	; 0xf8000001
   20e74:	str	r0, [sp]
   20e78:	ldr	r0, [sp, #12]
   20e7c:	ldr	r1, [fp, #-4]
   20e80:	str	r0, [r1, #96]	; 0x60
   20e84:	ldr	r0, [sp, #8]
   20e88:	ldr	r1, [fp, #-4]
   20e8c:	str	r0, [r1, #100]	; 0x64
   20e90:	ldr	r0, [sp, #4]
   20e94:	ldr	r1, [fp, #-4]
   20e98:	str	r0, [r1, #104]	; 0x68
   20e9c:	ldr	r0, [sp]
   20ea0:	ldr	r1, [fp, #-4]
   20ea4:	str	r0, [r1, #108]	; 0x6c
   20ea8:	mov	r0, #4
   20eac:	str	r0, [fp, #-8]
   20eb0:	mov	r0, #128	; 0x80
   20eb4:	str	r0, [sp, #16]
   20eb8:	ldr	r0, [fp, #-4]
   20ebc:	ldrb	r0, [r0, #88]	; 0x58
   20ec0:	ubfx	r0, r0, #2, #1
   20ec4:	and	r0, r0, #255	; 0xff
   20ec8:	cmp	r0, #0
   20ecc:	beq	20f04 <__assert_fail@plt+0xf7b0>
   20ed0:	ldr	r0, [fp, #-4]
   20ed4:	add	r0, r0, #96	; 0x60
   20ed8:	ldr	r1, [fp, #-8]
   20edc:	add	r0, r0, r1, lsl #2
   20ee0:	ldr	r1, [sp, #16]
   20ee4:	movw	r2, #256	; 0x100
   20ee8:	sub	r1, r2, r1
   20eec:	movw	r2, #8
   20ef0:	sdiv	r2, r1, r2
   20ef4:	movw	r1, #0
   20ef8:	and	r1, r1, #255	; 0xff
   20efc:	bl	11658 <memset@plt>
   20f00:	b	20fb8 <__assert_fail@plt+0xf864>
   20f04:	b	20f08 <__assert_fail@plt+0xf7b4>
   20f08:	b	20f0c <__assert_fail@plt+0xf7b8>
   20f0c:	b	20f10 <__assert_fail@plt+0xf7bc>
   20f10:	ldr	r0, [fp, #-8]
   20f14:	cmp	r0, #8
   20f18:	bge	20fb8 <__assert_fail@plt+0xf864>
   20f1c:	movw	r0, #0
   20f20:	str	r0, [fp, #-12]
   20f24:	ldr	r0, [fp, #-12]
   20f28:	cmp	r0, #32
   20f2c:	bge	20fa4 <__assert_fail@plt+0xf850>
   20f30:	bl	115e0 <__ctype_b_loc@plt>
   20f34:	ldr	r0, [r0]
   20f38:	ldr	r1, [sp, #16]
   20f3c:	add	r0, r0, r1, lsl #1
   20f40:	ldrh	r0, [r0]
   20f44:	and	r0, r0, #8
   20f48:	cmp	r0, #0
   20f4c:	bne	20f5c <__assert_fail@plt+0xf808>
   20f50:	ldr	r0, [sp, #16]
   20f54:	cmp	r0, #95	; 0x5f
   20f58:	bne	20f84 <__assert_fail@plt+0xf830>
   20f5c:	ldr	r0, [fp, #-12]
   20f60:	mov	r1, #1
   20f64:	lsl	r0, r1, r0
   20f68:	ldr	r1, [fp, #-4]
   20f6c:	add	r1, r1, #96	; 0x60
   20f70:	ldr	r2, [fp, #-8]
   20f74:	add	r1, r1, r2, lsl #2
   20f78:	ldr	r2, [r1]
   20f7c:	orr	r0, r2, r0
   20f80:	str	r0, [r1]
   20f84:	b	20f88 <__assert_fail@plt+0xf834>
   20f88:	ldr	r0, [fp, #-12]
   20f8c:	add	r0, r0, #1
   20f90:	str	r0, [fp, #-12]
   20f94:	ldr	r0, [sp, #16]
   20f98:	add	r0, r0, #1
   20f9c:	str	r0, [sp, #16]
   20fa0:	b	20f24 <__assert_fail@plt+0xf7d0>
   20fa4:	b	20fa8 <__assert_fail@plt+0xf854>
   20fa8:	ldr	r0, [fp, #-8]
   20fac:	add	r0, r0, #1
   20fb0:	str	r0, [fp, #-8]
   20fb4:	b	20f10 <__assert_fail@plt+0xf7bc>
   20fb8:	mov	sp, fp
   20fbc:	pop	{fp, pc}
   20fc0:	push	{fp, lr}
   20fc4:	mov	fp, sp
   20fc8:	sub	sp, sp, #80	; 0x50
   20fcc:	ldr	ip, [fp, #12]
   20fd0:	ldr	lr, [fp, #8]
   20fd4:	str	r0, [fp, #-8]
   20fd8:	str	r1, [fp, #-12]
   20fdc:	str	r2, [fp, #-16]
   20fe0:	str	r3, [fp, #-20]	; 0xffffffec
   20fe4:	and	r0, lr, #1
   20fe8:	strb	r0, [fp, #-21]	; 0xffffffeb
   20fec:	movw	r0, #0
   20ff0:	str	r0, [fp, #-36]	; 0xffffffdc
   20ff4:	movw	r0, #32
   20ff8:	movw	r1, #1
   20ffc:	str	ip, [sp, #20]
   21000:	bl	380d0 <__assert_fail@plt+0x2697c>
   21004:	str	r0, [fp, #-28]	; 0xffffffe4
   21008:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2100c:	movw	r1, #0
   21010:	cmp	r0, r1
   21014:	bne	21030 <__assert_fail@plt+0xf8dc>
   21018:	ldr	r0, [fp, #12]
   2101c:	movw	r1, #12
   21020:	str	r1, [r0]
   21024:	movw	r0, #0
   21028:	str	r0, [fp, #-4]
   2102c:	b	212e4 <__assert_fail@plt+0xfb90>
   21030:	movw	r0, #40	; 0x28
   21034:	movw	r1, #1
   21038:	bl	380d0 <__assert_fail@plt+0x2697c>
   2103c:	str	r0, [fp, #-32]	; 0xffffffe0
   21040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21044:	movw	r1, #0
   21048:	cmp	r0, r1
   2104c:	bne	21070 <__assert_fail@plt+0xf91c>
   21050:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21054:	bl	15f68 <__assert_fail@plt+0x4814>
   21058:	ldr	r0, [fp, #12]
   2105c:	movw	r1, #12
   21060:	str	r1, [r0]
   21064:	movw	r0, #0
   21068:	str	r0, [fp, #-4]
   2106c:	b	212e4 <__assert_fail@plt+0xfb90>
   21070:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21074:	ldrb	r1, [r0, #16]
   21078:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   2107c:	and	r2, r2, #1
   21080:	bic	r1, r1, #1
   21084:	orr	r1, r1, r2
   21088:	strb	r1, [r0, #16]
   2108c:	ldr	r0, [fp, #-12]
   21090:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21094:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21098:	ldr	r3, [fp, #-16]
   2109c:	sub	ip, fp, #36	; 0x24
   210a0:	str	r3, [sp, #16]
   210a4:	mov	r3, ip
   210a8:	ldr	ip, [sp, #16]
   210ac:	str	ip, [sp]
   210b0:	movw	lr, #0
   210b4:	str	lr, [sp, #4]
   210b8:	bl	223dc <__assert_fail@plt+0x10c88>
   210bc:	str	r0, [sp, #40]	; 0x28
   210c0:	ldr	r0, [sp, #40]	; 0x28
   210c4:	cmp	r0, #0
   210c8:	beq	210f4 <__assert_fail@plt+0xf9a0>
   210cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   210d0:	bl	15f68 <__assert_fail@plt+0x4814>
   210d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   210d8:	bl	1b798 <__assert_fail@plt+0xa044>
   210dc:	ldr	r0, [sp, #40]	; 0x28
   210e0:	ldr	r1, [fp, #12]
   210e4:	str	r0, [r1]
   210e8:	movw	r0, #0
   210ec:	str	r0, [fp, #-4]
   210f0:	b	212e4 <__assert_fail@plt+0xfb90>
   210f4:	b	210f8 <__assert_fail@plt+0xf9a4>
   210f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   210fc:	ldrsb	r0, [r0]
   21100:	cmp	r0, #0
   21104:	beq	21128 <__assert_fail@plt+0xf9d4>
   21108:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2110c:	ldr	r1, [fp, #-20]	; 0xffffffec
   21110:	ldrb	r1, [r1]
   21114:	bl	21cb0 <__assert_fail@plt+0x1055c>
   21118:	ldr	r0, [fp, #-20]	; 0xffffffec
   2111c:	add	r0, r0, #1
   21120:	str	r0, [fp, #-20]	; 0xffffffec
   21124:	b	210f8 <__assert_fail@plt+0xf9a4>
   21128:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   2112c:	tst	r0, #1
   21130:	beq	2113c <__assert_fail@plt+0xf9e8>
   21134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21138:	bl	2307c <__assert_fail@plt+0x11928>
   2113c:	ldr	r0, [fp, #-8]
   21140:	ldr	r0, [r0, #92]	; 0x5c
   21144:	cmp	r0, #1
   21148:	ble	2115c <__assert_fail@plt+0xfa08>
   2114c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21150:	ldr	r1, [fp, #-8]
   21154:	ldr	r1, [r1, #60]	; 0x3c
   21158:	bl	230c4 <__assert_fail@plt+0x11970>
   2115c:	ldr	r0, [pc, #396]	; 212f0 <__assert_fail@plt+0xfb9c>
   21160:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21164:	str	r1, [sp, #28]
   21168:	ldr	r1, [sp, #32]
   2116c:	mvn	r2, #255	; 0xff
   21170:	and	r1, r1, r2
   21174:	orr	r1, r1, #3
   21178:	str	r1, [sp, #32]
   2117c:	ldr	r1, [sp, #32]
   21180:	and	r0, r1, r0
   21184:	str	r0, [sp, #32]
   21188:	ldr	r0, [sp, #32]
   2118c:	mvn	r1, #262144	; 0x40000
   21190:	and	r0, r0, r1
   21194:	str	r0, [sp, #32]
   21198:	ldr	r0, [sp, #32]
   2119c:	mvn	r1, #524288	; 0x80000
   211a0:	and	r0, r0, r1
   211a4:	str	r0, [sp, #32]
   211a8:	ldr	r0, [sp, #32]
   211ac:	mvn	r1, #1048576	; 0x100000
   211b0:	and	r0, r0, r1
   211b4:	str	r0, [sp, #32]
   211b8:	ldr	r0, [sp, #32]
   211bc:	mvn	r1, #2097152	; 0x200000
   211c0:	and	r0, r0, r1
   211c4:	str	r0, [sp, #32]
   211c8:	ldr	r0, [sp, #32]
   211cc:	mvn	r1, #4194304	; 0x400000
   211d0:	and	r0, r0, r1
   211d4:	str	r0, [sp, #32]
   211d8:	ldr	r0, [fp, #-8]
   211dc:	movw	r1, #0
   211e0:	str	r1, [sp, #12]
   211e4:	ldr	r2, [sp, #12]
   211e8:	add	r3, sp, #28
   211ec:	bl	201c4 <__assert_fail@plt+0xea70>
   211f0:	str	r0, [sp, #36]	; 0x24
   211f4:	ldr	r0, [sp, #36]	; 0x24
   211f8:	movw	r1, #0
   211fc:	cmp	r0, r1
   21200:	bne	21208 <__assert_fail@plt+0xfab4>
   21204:	b	212c0 <__assert_fail@plt+0xfb6c>
   21208:	ldr	r0, [fp, #-8]
   2120c:	ldr	r0, [r0, #92]	; 0x5c
   21210:	cmp	r0, #1
   21214:	ble	212a8 <__assert_fail@plt+0xfb54>
   21218:	mov	r0, #6
   2121c:	strb	r0, [sp, #32]
   21220:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21224:	str	r0, [sp, #28]
   21228:	ldr	r0, [fp, #-8]
   2122c:	ldrb	r1, [r0, #88]	; 0x58
   21230:	bic	r1, r1, #2
   21234:	movw	r2, #2
   21238:	orr	r1, r1, r2
   2123c:	strb	r1, [r0, #88]	; 0x58
   21240:	ldr	r0, [fp, #-8]
   21244:	movw	r1, #0
   21248:	str	r1, [sp, #8]
   2124c:	ldr	r2, [sp, #8]
   21250:	add	r3, sp, #28
   21254:	bl	201c4 <__assert_fail@plt+0xea70>
   21258:	str	r0, [sp, #24]
   2125c:	ldr	r0, [sp, #24]
   21260:	movw	r1, #0
   21264:	cmp	r0, r1
   21268:	bne	21270 <__assert_fail@plt+0xfb1c>
   2126c:	b	212c0 <__assert_fail@plt+0xfb6c>
   21270:	ldr	r0, [fp, #-8]
   21274:	ldr	r1, [sp, #36]	; 0x24
   21278:	ldr	r2, [sp, #24]
   2127c:	movw	r3, #10
   21280:	bl	1e160 <__assert_fail@plt+0xca0c>
   21284:	str	r0, [sp, #36]	; 0x24
   21288:	ldr	r0, [sp, #24]
   2128c:	movw	r1, #0
   21290:	cmp	r0, r1
   21294:	beq	212a4 <__assert_fail@plt+0xfb50>
   21298:	ldr	r0, [sp, #36]	; 0x24
   2129c:	str	r0, [fp, #-4]
   212a0:	b	212e4 <__assert_fail@plt+0xfb90>
   212a4:	b	212bc <__assert_fail@plt+0xfb68>
   212a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   212ac:	bl	1b798 <__assert_fail@plt+0xa044>
   212b0:	ldr	r0, [sp, #36]	; 0x24
   212b4:	str	r0, [fp, #-4]
   212b8:	b	212e4 <__assert_fail@plt+0xfb90>
   212bc:	b	212c0 <__assert_fail@plt+0xfb6c>
   212c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   212c4:	bl	15f68 <__assert_fail@plt+0x4814>
   212c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   212cc:	bl	1b798 <__assert_fail@plt+0xa044>
   212d0:	ldr	r0, [fp, #12]
   212d4:	movw	r1, #12
   212d8:	str	r1, [r0]
   212dc:	movw	r0, #0
   212e0:	str	r0, [fp, #-4]
   212e4:	ldr	r0, [fp, #-4]
   212e8:	mov	sp, fp
   212ec:	pop	{fp, pc}
   212f0:			; <UNDEFINED> instruction: 0xfffc00ff
   212f4:	push	{fp, lr}
   212f8:	mov	fp, sp
   212fc:	sub	sp, sp, #96	; 0x60
   21300:	ldr	ip, [fp, #12]
   21304:	ldr	lr, [fp, #8]
   21308:	str	r0, [fp, #-8]
   2130c:	str	r1, [fp, #-12]
   21310:	str	r2, [fp, #-16]
   21314:	str	r3, [fp, #-20]	; 0xffffffec
   21318:	movw	r0, #0
   2131c:	str	r0, [fp, #-24]	; 0xffffffe8
   21320:	str	r0, [fp, #-28]	; 0xffffffe4
   21324:	ldr	r0, [fp, #-12]
   21328:	ldr	r0, [r0, #40]	; 0x28
   2132c:	str	r0, [fp, #-44]	; 0xffffffd4
   21330:	ldr	r0, [fp, #-20]	; 0xffffffec
   21334:	ldr	r1, [r0]
   21338:	str	r1, [sp, #44]	; 0x2c
   2133c:	ldr	r0, [r0, #4]
   21340:	str	r0, [sp, #48]	; 0x30
   21344:	ldr	r0, [fp, #-20]	; 0xffffffec
   21348:	ldr	r0, [r0, #4]
   2134c:	and	r0, r0, #255	; 0xff
   21350:	cmp	r0, #23
   21354:	bne	215d8 <__assert_fail@plt+0xfe84>
   21358:	movw	r0, #0
   2135c:	str	r0, [fp, #-40]	; 0xffffffd8
   21360:	ldr	r0, [fp, #-12]
   21364:	ldr	r1, [fp, #-20]	; 0xffffffec
   21368:	ldr	r2, [fp, #8]
   2136c:	bl	23588 <__assert_fail@plt+0x11e34>
   21370:	str	r0, [fp, #-36]	; 0xffffffdc
   21374:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21378:	cmn	r0, #1
   2137c:	bne	213cc <__assert_fail@plt+0xfc78>
   21380:	ldr	r0, [fp, #-20]	; 0xffffffec
   21384:	ldr	r0, [r0, #4]
   21388:	and	r0, r0, #255	; 0xff
   2138c:	cmp	r0, #1
   21390:	bne	213b0 <__assert_fail@plt+0xfc5c>
   21394:	ldr	r0, [fp, #-20]	; 0xffffffec
   21398:	ldrb	r0, [r0]
   2139c:	cmp	r0, #44	; 0x2c
   213a0:	bne	213b0 <__assert_fail@plt+0xfc5c>
   213a4:	movw	r0, #0
   213a8:	str	r0, [fp, #-36]	; 0xffffffdc
   213ac:	b	213c8 <__assert_fail@plt+0xfc74>
   213b0:	ldr	r0, [fp, #12]
   213b4:	movw	r1, #10
   213b8:	str	r1, [r0]
   213bc:	movw	r0, #0
   213c0:	str	r0, [fp, #-4]
   213c4:	b	21934 <__assert_fail@plt+0x101e0>
   213c8:	b	213cc <__assert_fail@plt+0xfc78>
   213cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   213d0:	cmn	r0, #2
   213d4:	beq	21450 <__assert_fail@plt+0xfcfc>
   213d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   213dc:	ldr	r0, [r0, #4]
   213e0:	and	r0, r0, #255	; 0xff
   213e4:	cmp	r0, #24
   213e8:	bne	213f8 <__assert_fail@plt+0xfca4>
   213ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   213f0:	str	r0, [sp, #36]	; 0x24
   213f4:	b	21448 <__assert_fail@plt+0xfcf4>
   213f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   213fc:	ldr	r0, [r0, #4]
   21400:	and	r0, r0, #255	; 0xff
   21404:	cmp	r0, #1
   21408:	bne	21434 <__assert_fail@plt+0xfce0>
   2140c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21410:	ldrb	r0, [r0]
   21414:	cmp	r0, #44	; 0x2c
   21418:	bne	21434 <__assert_fail@plt+0xfce0>
   2141c:	ldr	r0, [fp, #-12]
   21420:	ldr	r1, [fp, #-20]	; 0xffffffec
   21424:	ldr	r2, [fp, #8]
   21428:	bl	23588 <__assert_fail@plt+0x11e34>
   2142c:	str	r0, [sp, #32]
   21430:	b	21440 <__assert_fail@plt+0xfcec>
   21434:	mvn	r0, #1
   21438:	str	r0, [sp, #32]
   2143c:	b	21440 <__assert_fail@plt+0xfcec>
   21440:	ldr	r0, [sp, #32]
   21444:	str	r0, [sp, #36]	; 0x24
   21448:	ldr	r0, [sp, #36]	; 0x24
   2144c:	str	r0, [fp, #-40]	; 0xffffffd8
   21450:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21454:	cmn	r0, #2
   21458:	movw	r0, #1
   2145c:	str	r0, [sp, #28]
   21460:	beq	21478 <__assert_fail@plt+0xfd24>
   21464:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21468:	cmn	r0, #2
   2146c:	movw	r0, #0
   21470:	moveq	r0, #1
   21474:	str	r0, [sp, #28]
   21478:	ldr	r0, [sp, #28]
   2147c:	tst	r0, #1
   21480:	beq	21528 <__assert_fail@plt+0xfdd4>
   21484:	ldr	r0, [fp, #8]
   21488:	and	r0, r0, #2097152	; 0x200000
   2148c:	cmp	r0, #0
   21490:	movw	r0, #0
   21494:	movne	r0, #1
   21498:	mvn	r1, #0
   2149c:	eor	r0, r0, r1
   214a0:	tst	r0, #1
   214a4:	beq	214e4 <__assert_fail@plt+0xfd90>
   214a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   214ac:	ldr	r0, [r0, #4]
   214b0:	and	r0, r0, #255	; 0xff
   214b4:	cmp	r0, #2
   214b8:	bne	214cc <__assert_fail@plt+0xfd78>
   214bc:	ldr	r0, [fp, #12]
   214c0:	movw	r1, #9
   214c4:	str	r1, [r0]
   214c8:	b	214d8 <__assert_fail@plt+0xfd84>
   214cc:	ldr	r0, [fp, #12]
   214d0:	movw	r1, #10
   214d4:	str	r1, [r0]
   214d8:	movw	r0, #0
   214dc:	str	r0, [fp, #-4]
   214e0:	b	21934 <__assert_fail@plt+0x101e0>
   214e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   214e8:	ldr	r1, [fp, #-12]
   214ec:	str	r0, [r1, #40]	; 0x28
   214f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   214f4:	ldr	r1, [sp, #44]	; 0x2c
   214f8:	str	r1, [r0]
   214fc:	ldr	r1, [sp, #48]	; 0x30
   21500:	str	r1, [r0, #4]
   21504:	ldr	r0, [fp, #-20]	; 0xffffffec
   21508:	ldr	r1, [r0, #4]
   2150c:	mvn	r2, #255	; 0xff
   21510:	and	r1, r1, r2
   21514:	orr	r1, r1, #1
   21518:	str	r1, [r0, #4]
   2151c:	ldr	r0, [fp, #-8]
   21520:	str	r0, [fp, #-4]
   21524:	b	21934 <__assert_fail@plt+0x101e0>
   21528:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2152c:	cmn	r0, #1
   21530:	beq	2154c <__assert_fail@plt+0xfdf8>
   21534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21538:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2153c:	cmp	r0, r1
   21540:	movw	r0, #1
   21544:	str	r0, [sp, #24]
   21548:	bgt	21568 <__assert_fail@plt+0xfe14>
   2154c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21550:	ldr	r0, [r0, #4]
   21554:	and	r0, r0, #255	; 0xff
   21558:	cmp	r0, #24
   2155c:	movw	r0, #0
   21560:	movne	r0, #1
   21564:	str	r0, [sp, #24]
   21568:	ldr	r0, [sp, #24]
   2156c:	tst	r0, #1
   21570:	beq	2158c <__assert_fail@plt+0xfe38>
   21574:	ldr	r0, [fp, #12]
   21578:	movw	r1, #10
   2157c:	str	r1, [r0]
   21580:	movw	r0, #0
   21584:	str	r0, [fp, #-4]
   21588:	b	21934 <__assert_fail@plt+0x101e0>
   2158c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21590:	cmn	r0, #1
   21594:	bne	215a4 <__assert_fail@plt+0xfe50>
   21598:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2159c:	str	r0, [sp, #20]
   215a0:	b	215ac <__assert_fail@plt+0xfe58>
   215a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   215a8:	str	r0, [sp, #20]
   215ac:	ldr	r0, [sp, #20]
   215b0:	movw	r1, #32767	; 0x7fff
   215b4:	cmp	r1, r0
   215b8:	bge	215d4 <__assert_fail@plt+0xfe80>
   215bc:	ldr	r0, [fp, #12]
   215c0:	movw	r1, #15
   215c4:	str	r1, [r0]
   215c8:	movw	r0, #0
   215cc:	str	r0, [fp, #-4]
   215d0:	b	21934 <__assert_fail@plt+0x101e0>
   215d4:	b	21628 <__assert_fail@plt+0xfed4>
   215d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   215dc:	ldr	r0, [r0, #4]
   215e0:	and	r0, r0, #255	; 0xff
   215e4:	cmp	r0, #18
   215e8:	movw	r0, #0
   215ec:	moveq	r0, #1
   215f0:	tst	r0, #1
   215f4:	movw	r0, #1
   215f8:	mov	r1, r0
   215fc:	moveq	r1, #0
   21600:	str	r1, [fp, #-36]	; 0xffffffdc
   21604:	ldr	r1, [fp, #-20]	; 0xffffffec
   21608:	ldr	r1, [r1, #4]
   2160c:	and	r1, r1, #255	; 0xff
   21610:	cmp	r1, #19
   21614:	movw	r1, #0
   21618:	moveq	r1, #1
   2161c:	tst	r1, #1
   21620:	mvneq	r0, #0
   21624:	str	r0, [fp, #-40]	; 0xffffffd8
   21628:	ldr	r0, [fp, #-20]	; 0xffffffec
   2162c:	ldr	r1, [fp, #-12]
   21630:	ldr	r2, [fp, #8]
   21634:	bl	1decc <__assert_fail@plt+0xc778>
   21638:	ldr	r0, [fp, #-8]
   2163c:	movw	r1, #0
   21640:	cmp	r0, r1
   21644:	bne	21654 <__assert_fail@plt+0xff00>
   21648:	movw	r0, #0
   2164c:	str	r0, [fp, #-4]
   21650:	b	21934 <__assert_fail@plt+0x101e0>
   21654:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21658:	cmp	r0, #0
   2165c:	movw	r0, #0
   21660:	str	r0, [sp, #16]
   21664:	bne	2167c <__assert_fail@plt+0xff28>
   21668:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2166c:	cmp	r0, #0
   21670:	movw	r0, #0
   21674:	moveq	r0, #1
   21678:	str	r0, [sp, #16]
   2167c:	ldr	r0, [sp, #16]
   21680:	tst	r0, #1
   21684:	beq	216a8 <__assert_fail@plt+0xff54>
   21688:	ldr	r0, [fp, #-8]
   2168c:	movw	r1, #63168	; 0xf6c0
   21690:	movt	r1, #1
   21694:	movw	r2, #0
   21698:	bl	1f550 <__assert_fail@plt+0xddfc>
   2169c:	movw	r1, #0
   216a0:	str	r1, [fp, #-4]
   216a4:	b	21934 <__assert_fail@plt+0x101e0>
   216a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   216ac:	cmp	r0, #0
   216b0:	ble	2179c <__assert_fail@plt+0x10048>
   216b4:	ldr	r0, [fp, #-8]
   216b8:	str	r0, [fp, #-24]	; 0xffffffe8
   216bc:	movw	r0, #2
   216c0:	str	r0, [fp, #-32]	; 0xffffffe0
   216c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   216c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   216cc:	cmp	r0, r1
   216d0:	bgt	21750 <__assert_fail@plt+0xfffc>
   216d4:	ldr	r0, [fp, #-8]
   216d8:	ldr	r1, [fp, #-16]
   216dc:	bl	236e8 <__assert_fail@plt+0x11f94>
   216e0:	str	r0, [fp, #-8]
   216e4:	ldr	r0, [fp, #-16]
   216e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   216ec:	ldr	r2, [fp, #-8]
   216f0:	movw	r3, #16
   216f4:	bl	1e160 <__assert_fail@plt+0xca0c>
   216f8:	str	r0, [fp, #-24]	; 0xffffffe8
   216fc:	ldr	r0, [fp, #-8]
   21700:	movw	r1, #0
   21704:	cmp	r0, r1
   21708:	movw	r0, #1
   2170c:	str	r0, [sp, #12]
   21710:	beq	2172c <__assert_fail@plt+0xffd8>
   21714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21718:	movw	r1, #0
   2171c:	cmp	r0, r1
   21720:	movw	r0, #0
   21724:	moveq	r0, #1
   21728:	str	r0, [sp, #12]
   2172c:	ldr	r0, [sp, #12]
   21730:	tst	r0, #1
   21734:	beq	2173c <__assert_fail@plt+0xffe8>
   21738:	b	21920 <__assert_fail@plt+0x101cc>
   2173c:	b	21740 <__assert_fail@plt+0xffec>
   21740:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21744:	add	r0, r0, #1
   21748:	str	r0, [fp, #-32]	; 0xffffffe0
   2174c:	b	216c4 <__assert_fail@plt+0xff70>
   21750:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21754:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21758:	cmp	r0, r1
   2175c:	bne	2176c <__assert_fail@plt+0x10018>
   21760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21764:	str	r0, [fp, #-4]
   21768:	b	21934 <__assert_fail@plt+0x101e0>
   2176c:	ldr	r0, [fp, #-8]
   21770:	ldr	r1, [fp, #-16]
   21774:	bl	236e8 <__assert_fail@plt+0x11f94>
   21778:	str	r0, [fp, #-8]
   2177c:	ldr	r0, [fp, #-8]
   21780:	movw	r1, #0
   21784:	cmp	r0, r1
   21788:	bne	21790 <__assert_fail@plt+0x1003c>
   2178c:	b	21920 <__assert_fail@plt+0x101cc>
   21790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21794:	str	r0, [fp, #-28]	; 0xffffffe4
   21798:	b	217a4 <__assert_fail@plt+0x10050>
   2179c:	movw	r0, #0
   217a0:	str	r0, [fp, #-28]	; 0xffffffe4
   217a4:	ldr	r0, [fp, #-8]
   217a8:	ldr	r0, [r0, #24]
   217ac:	and	r0, r0, #255	; 0xff
   217b0:	cmp	r0, #17
   217b4:	bne	217d8 <__assert_fail@plt+0x10084>
   217b8:	ldr	r0, [fp, #-8]
   217bc:	ldr	r0, [r0, #20]
   217c0:	str	r0, [sp, #40]	; 0x28
   217c4:	ldr	r0, [fp, #-8]
   217c8:	ldr	r2, [sp, #40]	; 0x28
   217cc:	movw	r1, #14456	; 0x3878
   217d0:	movt	r1, #2
   217d4:	bl	1f550 <__assert_fail@plt+0xddfc>
   217d8:	ldr	r0, [fp, #-16]
   217dc:	ldr	r1, [fp, #-8]
   217e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   217e4:	cmn	r2, #1
   217e8:	movw	r2, #0
   217ec:	moveq	r2, #1
   217f0:	tst	r2, #1
   217f4:	movw	r2, #11
   217f8:	moveq	r2, #10
   217fc:	movw	r3, #0
   21800:	str	r2, [sp, #8]
   21804:	mov	r2, r3
   21808:	ldr	r3, [sp, #8]
   2180c:	bl	1e160 <__assert_fail@plt+0xca0c>
   21810:	str	r0, [fp, #-24]	; 0xffffffe8
   21814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21818:	movw	r1, #0
   2181c:	cmp	r0, r1
   21820:	bne	21828 <__assert_fail@plt+0x100d4>
   21824:	b	21920 <__assert_fail@plt+0x101cc>
   21828:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2182c:	add	r0, r0, #2
   21830:	str	r0, [fp, #-32]	; 0xffffffe0
   21834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21838:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2183c:	cmp	r0, r1
   21840:	bgt	218ec <__assert_fail@plt+0x10198>
   21844:	ldr	r0, [fp, #-8]
   21848:	ldr	r1, [fp, #-16]
   2184c:	bl	236e8 <__assert_fail@plt+0x11f94>
   21850:	str	r0, [fp, #-8]
   21854:	ldr	r0, [fp, #-16]
   21858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2185c:	ldr	r2, [fp, #-8]
   21860:	movw	r3, #16
   21864:	bl	1e160 <__assert_fail@plt+0xca0c>
   21868:	str	r0, [fp, #-24]	; 0xffffffe8
   2186c:	ldr	r0, [fp, #-8]
   21870:	movw	r1, #0
   21874:	cmp	r0, r1
   21878:	movw	r0, #1
   2187c:	str	r0, [sp, #4]
   21880:	beq	2189c <__assert_fail@plt+0x10148>
   21884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21888:	movw	r1, #0
   2188c:	cmp	r0, r1
   21890:	movw	r0, #0
   21894:	moveq	r0, #1
   21898:	str	r0, [sp, #4]
   2189c:	ldr	r0, [sp, #4]
   218a0:	tst	r0, #1
   218a4:	beq	218ac <__assert_fail@plt+0x10158>
   218a8:	b	21920 <__assert_fail@plt+0x101cc>
   218ac:	ldr	r0, [fp, #-16]
   218b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   218b4:	movw	r2, #0
   218b8:	movw	r3, #10
   218bc:	bl	1e160 <__assert_fail@plt+0xca0c>
   218c0:	str	r0, [fp, #-24]	; 0xffffffe8
   218c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   218c8:	movw	r1, #0
   218cc:	cmp	r0, r1
   218d0:	bne	218d8 <__assert_fail@plt+0x10184>
   218d4:	b	21920 <__assert_fail@plt+0x101cc>
   218d8:	b	218dc <__assert_fail@plt+0x10188>
   218dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   218e0:	add	r0, r0, #1
   218e4:	str	r0, [fp, #-32]	; 0xffffffe0
   218e8:	b	21834 <__assert_fail@plt+0x100e0>
   218ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   218f0:	movw	r1, #0
   218f4:	cmp	r0, r1
   218f8:	beq	21914 <__assert_fail@plt+0x101c0>
   218fc:	ldr	r0, [fp, #-16]
   21900:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21908:	movw	r3, #16
   2190c:	bl	1e160 <__assert_fail@plt+0xca0c>
   21910:	str	r0, [fp, #-24]	; 0xffffffe8
   21914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21918:	str	r0, [fp, #-4]
   2191c:	b	21934 <__assert_fail@plt+0x101e0>
   21920:	ldr	r0, [fp, #12]
   21924:	movw	r1, #12
   21928:	str	r1, [r0]
   2192c:	movw	r0, #0
   21930:	str	r0, [fp, #-4]
   21934:	ldr	r0, [fp, #-4]
   21938:	mov	sp, fp
   2193c:	pop	{fp, pc}
   21940:	sub	sp, sp, #32
   21944:	str	r0, [sp, #24]
   21948:	str	r1, [sp, #20]
   2194c:	str	r2, [sp, #16]
   21950:	ldr	r0, [sp, #20]
   21954:	ldr	r0, [r0, #56]	; 0x38
   21958:	ldr	r1, [sp, #20]
   2195c:	ldr	r1, [r1, #40]	; 0x28
   21960:	cmp	r0, r1
   21964:	bgt	2198c <__assert_fail@plt+0x10238>
   21968:	ldr	r0, [sp, #24]
   2196c:	ldr	r1, [r0, #4]
   21970:	mvn	r2, #255	; 0xff
   21974:	and	r1, r1, r2
   21978:	orr	r1, r1, #2
   2197c:	str	r1, [r0, #4]
   21980:	movw	r0, #0
   21984:	str	r0, [sp, #28]
   21988:	b	21ca4 <__assert_fail@plt+0x10550>
   2198c:	ldr	r0, [sp, #20]
   21990:	ldr	r0, [r0, #4]
   21994:	ldr	r1, [sp, #20]
   21998:	ldr	r1, [r1, #40]	; 0x28
   2199c:	add	r1, r1, #0
   219a0:	add	r0, r0, r1
   219a4:	ldrb	r0, [r0]
   219a8:	strb	r0, [sp, #15]
   219ac:	ldrb	r0, [sp, #15]
   219b0:	ldr	r1, [sp, #24]
   219b4:	strb	r0, [r1]
   219b8:	ldr	r0, [sp, #20]
   219bc:	ldr	r0, [r0, #80]	; 0x50
   219c0:	cmp	r0, #1
   219c4:	ble	21a20 <__assert_fail@plt+0x102cc>
   219c8:	ldr	r0, [sp, #20]
   219cc:	ldr	r0, [r0, #40]	; 0x28
   219d0:	ldr	r1, [sp, #20]
   219d4:	ldr	r1, [r1, #28]
   219d8:	cmp	r0, r1
   219dc:	beq	21a20 <__assert_fail@plt+0x102cc>
   219e0:	ldr	r0, [sp, #20]
   219e4:	ldr	r1, [r0, #8]
   219e8:	ldr	r0, [r0, #40]	; 0x28
   219ec:	add	r0, r1, r0, lsl #2
   219f0:	ldr	r0, [r0]
   219f4:	cmn	r0, #1
   219f8:	bne	21a20 <__assert_fail@plt+0x102cc>
   219fc:	ldr	r0, [sp, #24]
   21a00:	ldr	r1, [r0, #4]
   21a04:	mvn	r2, #255	; 0xff
   21a08:	and	r1, r1, r2
   21a0c:	orr	r1, r1, #1
   21a10:	str	r1, [r0, #4]
   21a14:	movw	r0, #1
   21a18:	str	r0, [sp, #28]
   21a1c:	b	21ca4 <__assert_fail@plt+0x10550>
   21a20:	ldrb	r0, [sp, #15]
   21a24:	cmp	r0, #92	; 0x5c
   21a28:	bne	21ab8 <__assert_fail@plt+0x10364>
   21a2c:	ldr	r0, [sp, #16]
   21a30:	and	r0, r0, #1
   21a34:	cmp	r0, #0
   21a38:	beq	21ab8 <__assert_fail@plt+0x10364>
   21a3c:	ldr	r0, [sp, #20]
   21a40:	ldr	r0, [r0, #40]	; 0x28
   21a44:	add	r0, r0, #1
   21a48:	ldr	r1, [sp, #20]
   21a4c:	ldr	r1, [r1, #48]	; 0x30
   21a50:	cmp	r0, r1
   21a54:	bge	21ab8 <__assert_fail@plt+0x10364>
   21a58:	ldr	r0, [sp, #20]
   21a5c:	ldr	r1, [r0, #40]	; 0x28
   21a60:	add	r1, r1, #1
   21a64:	str	r1, [r0, #40]	; 0x28
   21a68:	ldr	r0, [sp, #20]
   21a6c:	ldr	r0, [r0, #4]
   21a70:	ldr	r1, [sp, #20]
   21a74:	ldr	r1, [r1, #40]	; 0x28
   21a78:	add	r1, r1, #0
   21a7c:	add	r0, r0, r1
   21a80:	ldrb	r0, [r0]
   21a84:	strb	r0, [sp, #14]
   21a88:	ldrb	r0, [sp, #14]
   21a8c:	ldr	r1, [sp, #24]
   21a90:	strb	r0, [r1]
   21a94:	ldr	r0, [sp, #24]
   21a98:	ldr	r1, [r0, #4]
   21a9c:	mvn	r2, #255	; 0xff
   21aa0:	and	r1, r1, r2
   21aa4:	orr	r1, r1, #1
   21aa8:	str	r1, [r0, #4]
   21aac:	movw	r0, #1
   21ab0:	str	r0, [sp, #28]
   21ab4:	b	21ca4 <__assert_fail@plt+0x10550>
   21ab8:	ldrb	r0, [sp, #15]
   21abc:	cmp	r0, #91	; 0x5b
   21ac0:	bne	21bf8 <__assert_fail@plt+0x104a4>
   21ac4:	ldr	r0, [sp, #20]
   21ac8:	ldr	r0, [r0, #40]	; 0x28
   21acc:	add	r0, r0, #1
   21ad0:	ldr	r1, [sp, #20]
   21ad4:	ldr	r1, [r1, #48]	; 0x30
   21ad8:	cmp	r0, r1
   21adc:	bge	21b04 <__assert_fail@plt+0x103b0>
   21ae0:	ldr	r0, [sp, #20]
   21ae4:	ldr	r0, [r0, #4]
   21ae8:	ldr	r1, [sp, #20]
   21aec:	ldr	r1, [r1, #40]	; 0x28
   21af0:	add	r1, r1, #1
   21af4:	add	r0, r0, r1
   21af8:	ldrb	r0, [r0]
   21afc:	strb	r0, [sp, #13]
   21b00:	b	21b0c <__assert_fail@plt+0x103b8>
   21b04:	movw	r0, #0
   21b08:	strb	r0, [sp, #13]
   21b0c:	ldrb	r0, [sp, #13]
   21b10:	ldr	r1, [sp, #24]
   21b14:	strb	r0, [r1]
   21b18:	mov	r0, #2
   21b1c:	str	r0, [sp, #8]
   21b20:	ldrb	r0, [sp, #13]
   21b24:	mov	r1, r0
   21b28:	cmp	r0, #46	; 0x2e
   21b2c:	str	r1, [sp, #4]
   21b30:	beq	21b58 <__assert_fail@plt+0x10404>
   21b34:	b	21b38 <__assert_fail@plt+0x103e4>
   21b38:	ldr	r0, [sp, #4]
   21b3c:	cmp	r0, #58	; 0x3a
   21b40:	beq	21b90 <__assert_fail@plt+0x1043c>
   21b44:	b	21b48 <__assert_fail@plt+0x103f4>
   21b48:	ldr	r0, [sp, #4]
   21b4c:	cmp	r0, #61	; 0x3d
   21b50:	beq	21b74 <__assert_fail@plt+0x10420>
   21b54:	b	21bc0 <__assert_fail@plt+0x1046c>
   21b58:	ldr	r0, [sp, #24]
   21b5c:	ldr	r1, [r0, #4]
   21b60:	mvn	r2, #255	; 0xff
   21b64:	and	r1, r1, r2
   21b68:	orr	r1, r1, #26
   21b6c:	str	r1, [r0, #4]
   21b70:	b	21bec <__assert_fail@plt+0x10498>
   21b74:	ldr	r0, [sp, #24]
   21b78:	ldr	r1, [r0, #4]
   21b7c:	mvn	r2, #255	; 0xff
   21b80:	and	r1, r1, r2
   21b84:	orr	r1, r1, #28
   21b88:	str	r1, [r0, #4]
   21b8c:	b	21bec <__assert_fail@plt+0x10498>
   21b90:	ldr	r0, [sp, #16]
   21b94:	and	r0, r0, #4
   21b98:	cmp	r0, #0
   21b9c:	beq	21bbc <__assert_fail@plt+0x10468>
   21ba0:	ldr	r0, [sp, #24]
   21ba4:	ldr	r1, [r0, #4]
   21ba8:	mvn	r2, #255	; 0xff
   21bac:	and	r1, r1, r2
   21bb0:	orr	r1, r1, #30
   21bb4:	str	r1, [r0, #4]
   21bb8:	b	21bec <__assert_fail@plt+0x10498>
   21bbc:	b	21bc0 <__assert_fail@plt+0x1046c>
   21bc0:	ldr	r0, [sp, #24]
   21bc4:	ldr	r1, [r0, #4]
   21bc8:	mvn	r2, #255	; 0xff
   21bcc:	and	r1, r1, r2
   21bd0:	orr	r1, r1, #1
   21bd4:	str	r1, [r0, #4]
   21bd8:	ldrb	r0, [sp, #15]
   21bdc:	ldr	r1, [sp, #24]
   21be0:	strb	r0, [r1]
   21be4:	movw	r0, #1
   21be8:	str	r0, [sp, #8]
   21bec:	ldr	r0, [sp, #8]
   21bf0:	str	r0, [sp, #28]
   21bf4:	b	21ca4 <__assert_fail@plt+0x10550>
   21bf8:	ldrb	r0, [sp, #15]
   21bfc:	mov	r1, r0
   21c00:	cmp	r0, #45	; 0x2d
   21c04:	str	r1, [sp]
   21c08:	beq	21c30 <__assert_fail@plt+0x104dc>
   21c0c:	b	21c10 <__assert_fail@plt+0x104bc>
   21c10:	ldr	r0, [sp]
   21c14:	cmp	r0, #93	; 0x5d
   21c18:	beq	21c4c <__assert_fail@plt+0x104f8>
   21c1c:	b	21c20 <__assert_fail@plt+0x104cc>
   21c20:	ldr	r0, [sp]
   21c24:	cmp	r0, #94	; 0x5e
   21c28:	beq	21c68 <__assert_fail@plt+0x10514>
   21c2c:	b	21c84 <__assert_fail@plt+0x10530>
   21c30:	ldr	r0, [sp, #24]
   21c34:	ldr	r1, [r0, #4]
   21c38:	mvn	r2, #255	; 0xff
   21c3c:	and	r1, r1, r2
   21c40:	orr	r1, r1, #22
   21c44:	str	r1, [r0, #4]
   21c48:	b	21c9c <__assert_fail@plt+0x10548>
   21c4c:	ldr	r0, [sp, #24]
   21c50:	ldr	r1, [r0, #4]
   21c54:	mvn	r2, #255	; 0xff
   21c58:	and	r1, r1, r2
   21c5c:	orr	r1, r1, #21
   21c60:	str	r1, [r0, #4]
   21c64:	b	21c9c <__assert_fail@plt+0x10548>
   21c68:	ldr	r0, [sp, #24]
   21c6c:	ldr	r1, [r0, #4]
   21c70:	mvn	r2, #255	; 0xff
   21c74:	and	r1, r1, r2
   21c78:	orr	r1, r1, #25
   21c7c:	str	r1, [r0, #4]
   21c80:	b	21c9c <__assert_fail@plt+0x10548>
   21c84:	ldr	r0, [sp, #24]
   21c88:	ldr	r1, [r0, #4]
   21c8c:	mvn	r2, #255	; 0xff
   21c90:	and	r1, r1, r2
   21c94:	orr	r1, r1, #1
   21c98:	str	r1, [r0, #4]
   21c9c:	movw	r0, #1
   21ca0:	str	r0, [sp, #28]
   21ca4:	ldr	r0, [sp, #28]
   21ca8:	add	sp, sp, #32
   21cac:	bx	lr
   21cb0:	sub	sp, sp, #8
   21cb4:	str	r0, [sp, #4]
   21cb8:	str	r1, [sp]
   21cbc:	ldr	r0, [sp]
   21cc0:	asr	r1, r0, #31
   21cc4:	add	r1, r0, r1, lsr #27
   21cc8:	bic	r2, r1, #31
   21ccc:	sub	r0, r0, r2
   21cd0:	mov	r2, #1
   21cd4:	lsl	r0, r2, r0
   21cd8:	ldr	r2, [sp, #4]
   21cdc:	asr	r1, r1, #5
   21ce0:	add	r1, r2, r1, lsl #2
   21ce4:	ldr	r2, [r1]
   21ce8:	orr	r0, r2, r0
   21cec:	str	r0, [r1]
   21cf0:	add	sp, sp, #8
   21cf4:	bx	lr
   21cf8:	push	{r4, sl, fp, lr}
   21cfc:	add	fp, sp, #8
   21d00:	sub	sp, sp, #48	; 0x30
   21d04:	ldr	ip, [fp, #16]
   21d08:	ldr	lr, [fp, #12]
   21d0c:	ldr	r4, [fp, #8]
   21d10:	str	r0, [fp, #-16]
   21d14:	str	r1, [fp, #-20]	; 0xffffffec
   21d18:	str	r2, [fp, #-24]	; 0xffffffe8
   21d1c:	str	r3, [sp, #28]
   21d20:	and	r0, ip, #1
   21d24:	strb	r0, [sp, #27]
   21d28:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   21d30:	ldr	r1, [r1, #40]	; 0x28
   21d34:	str	lr, [sp, #8]
   21d38:	str	r4, [sp, #4]
   21d3c:	bl	2311c <__assert_fail@plt+0x119c8>
   21d40:	str	r0, [sp, #20]
   21d44:	ldr	r0, [sp, #20]
   21d48:	cmp	r0, #1
   21d4c:	ble	21d94 <__assert_fail@plt+0x10640>
   21d50:	ldr	r0, [fp, #-16]
   21d54:	movw	r1, #1
   21d58:	str	r1, [r0]
   21d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d60:	ldr	r1, [fp, #-20]	; 0xffffffec
   21d64:	ldr	r1, [r1, #40]	; 0x28
   21d68:	bl	1f268 <__assert_fail@plt+0xdb14>
   21d6c:	ldr	r1, [fp, #-16]
   21d70:	str	r0, [r1, #4]
   21d74:	ldr	r0, [sp, #20]
   21d78:	ldr	r1, [fp, #-20]	; 0xffffffec
   21d7c:	ldr	r2, [r1, #40]	; 0x28
   21d80:	add	r0, r2, r0
   21d84:	str	r0, [r1, #40]	; 0x28
   21d88:	movw	r0, #0
   21d8c:	str	r0, [fp, #-12]
   21d90:	b	21e6c <__assert_fail@plt+0x10718>
   21d94:	ldr	r0, [sp, #28]
   21d98:	ldr	r1, [fp, #-20]	; 0xffffffec
   21d9c:	ldr	r2, [r1, #40]	; 0x28
   21da0:	add	r0, r2, r0
   21da4:	str	r0, [r1, #40]	; 0x28
   21da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21dac:	ldr	r0, [r0, #4]
   21db0:	and	r0, r0, #255	; 0xff
   21db4:	cmp	r0, #26
   21db8:	beq	21de4 <__assert_fail@plt+0x10690>
   21dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21dc0:	ldr	r0, [r0, #4]
   21dc4:	and	r0, r0, #255	; 0xff
   21dc8:	cmp	r0, #30
   21dcc:	beq	21de4 <__assert_fail@plt+0x10690>
   21dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21dd4:	ldr	r0, [r0, #4]
   21dd8:	and	r0, r0, #255	; 0xff
   21ddc:	cmp	r0, #28
   21de0:	bne	21dfc <__assert_fail@plt+0x106a8>
   21de4:	ldr	r0, [fp, #-16]
   21de8:	ldr	r1, [fp, #-20]	; 0xffffffec
   21dec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21df0:	bl	231b8 <__assert_fail@plt+0x11a64>
   21df4:	str	r0, [fp, #-12]
   21df8:	b	21e6c <__assert_fail@plt+0x10718>
   21dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e00:	ldr	r0, [r0, #4]
   21e04:	and	r0, r0, #255	; 0xff
   21e08:	cmp	r0, #22
   21e0c:	bne	21e4c <__assert_fail@plt+0x106f8>
   21e10:	ldrb	r0, [sp, #27]
   21e14:	tst	r0, #1
   21e18:	bne	21e4c <__assert_fail@plt+0x106f8>
   21e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   21e20:	ldr	r2, [fp, #12]
   21e24:	add	r0, sp, #12
   21e28:	bl	21940 <__assert_fail@plt+0x101ec>
   21e2c:	ldr	r1, [sp, #16]
   21e30:	and	r1, r1, #255	; 0xff
   21e34:	cmp	r1, #21
   21e38:	beq	21e48 <__assert_fail@plt+0x106f4>
   21e3c:	movw	r0, #11
   21e40:	str	r0, [fp, #-12]
   21e44:	b	21e6c <__assert_fail@plt+0x10718>
   21e48:	b	21e4c <__assert_fail@plt+0x106f8>
   21e4c:	ldr	r0, [fp, #-16]
   21e50:	movw	r1, #0
   21e54:	str	r1, [r0]
   21e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e5c:	ldrb	r0, [r0]
   21e60:	ldr	r2, [fp, #-16]
   21e64:	strb	r0, [r2, #4]
   21e68:	str	r1, [fp, #-12]
   21e6c:	ldr	r0, [fp, #-12]
   21e70:	sub	sp, fp, #8
   21e74:	pop	{r4, sl, fp, pc}
   21e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e7c:	add	fp, sp, #28
   21e80:	sub	sp, sp, #100	; 0x64
   21e84:	ldr	ip, [fp, #40]	; 0x28
   21e88:	ldr	lr, [fp, #36]	; 0x24
   21e8c:	ldr	r4, [fp, #32]
   21e90:	ldr	r5, [fp, #28]
   21e94:	ldr	r6, [fp, #24]
   21e98:	ldr	r7, [fp, #20]
   21e9c:	ldr	r8, [fp, #16]
   21ea0:	ldr	r9, [fp, #12]
   21ea4:	ldr	sl, [fp, #8]
   21ea8:	str	r0, [fp, #-36]	; 0xffffffdc
   21eac:	str	r1, [fp, #-40]	; 0xffffffd8
   21eb0:	str	r2, [fp, #-44]	; 0xffffffd4
   21eb4:	str	r3, [fp, #-48]	; 0xffffffd0
   21eb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21ebc:	ldr	r0, [r0]
   21ec0:	cmp	r0, #2
   21ec4:	movw	r0, #1
   21ec8:	str	r0, [sp, #44]	; 0x2c
   21ecc:	beq	21f18 <__assert_fail@plt+0x107c4>
   21ed0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21ed4:	ldr	r0, [r0]
   21ed8:	cmp	r0, #4
   21edc:	movw	r0, #1
   21ee0:	str	r0, [sp, #44]	; 0x2c
   21ee4:	beq	21f18 <__assert_fail@plt+0x107c4>
   21ee8:	ldr	r0, [fp, #8]
   21eec:	ldr	r0, [r0]
   21ef0:	cmp	r0, #2
   21ef4:	movw	r0, #1
   21ef8:	str	r0, [sp, #44]	; 0x2c
   21efc:	beq	21f18 <__assert_fail@plt+0x107c4>
   21f00:	ldr	r0, [fp, #8]
   21f04:	ldr	r0, [r0]
   21f08:	cmp	r0, #4
   21f0c:	movw	r0, #0
   21f10:	moveq	r0, #1
   21f14:	str	r0, [sp, #44]	; 0x2c
   21f18:	ldr	r0, [sp, #44]	; 0x2c
   21f1c:	tst	r0, #1
   21f20:	beq	21f30 <__assert_fail@plt+0x107dc>
   21f24:	movw	r0, #11
   21f28:	str	r0, [fp, #-32]	; 0xffffffe0
   21f2c:	b	222f0 <__assert_fail@plt+0x10b9c>
   21f30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21f34:	ldr	r0, [r0]
   21f38:	cmp	r0, #3
   21f3c:	bne	21f5c <__assert_fail@plt+0x10808>
   21f40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21f44:	ldr	r0, [r0, #4]
   21f48:	bl	11604 <strlen@plt>
   21f4c:	cmp	r0, #1
   21f50:	movw	r0, #1
   21f54:	str	r0, [sp, #40]	; 0x28
   21f58:	bhi	21f98 <__assert_fail@plt+0x10844>
   21f5c:	ldr	r0, [fp, #8]
   21f60:	ldr	r0, [r0]
   21f64:	cmp	r0, #3
   21f68:	movw	r0, #0
   21f6c:	str	r0, [sp, #36]	; 0x24
   21f70:	bne	21f90 <__assert_fail@plt+0x1083c>
   21f74:	ldr	r0, [fp, #8]
   21f78:	ldr	r0, [r0, #4]
   21f7c:	bl	11604 <strlen@plt>
   21f80:	cmp	r0, #1
   21f84:	movw	r0, #0
   21f88:	movhi	r0, #1
   21f8c:	str	r0, [sp, #36]	; 0x24
   21f90:	ldr	r0, [sp, #36]	; 0x24
   21f94:	str	r0, [sp, #40]	; 0x28
   21f98:	ldr	r0, [sp, #40]	; 0x28
   21f9c:	tst	r0, #1
   21fa0:	beq	21fb0 <__assert_fail@plt+0x1085c>
   21fa4:	movw	r0, #3
   21fa8:	str	r0, [fp, #-32]	; 0xffffffe0
   21fac:	b	222f0 <__assert_fail@plt+0x10b9c>
   21fb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21fb4:	ldr	r0, [r0]
   21fb8:	cmp	r0, #0
   21fbc:	bne	21fd0 <__assert_fail@plt+0x1087c>
   21fc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21fc4:	ldrb	r0, [r0, #4]
   21fc8:	str	r0, [sp, #32]
   21fcc:	b	22008 <__assert_fail@plt+0x108b4>
   21fd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21fd4:	ldr	r0, [r0]
   21fd8:	cmp	r0, #3
   21fdc:	bne	21ff4 <__assert_fail@plt+0x108a0>
   21fe0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21fe4:	ldr	r0, [r0, #4]
   21fe8:	ldrb	r0, [r0]
   21fec:	str	r0, [sp, #28]
   21ff0:	b	22000 <__assert_fail@plt+0x108ac>
   21ff4:	movw	r0, #0
   21ff8:	str	r0, [sp, #28]
   21ffc:	b	22000 <__assert_fail@plt+0x108ac>
   22000:	ldr	r0, [sp, #28]
   22004:	str	r0, [sp, #32]
   22008:	ldr	r0, [sp, #32]
   2200c:	str	r0, [fp, #-52]	; 0xffffffcc
   22010:	ldr	r0, [fp, #8]
   22014:	ldr	r0, [r0]
   22018:	cmp	r0, #0
   2201c:	bne	22030 <__assert_fail@plt+0x108dc>
   22020:	ldr	r0, [fp, #8]
   22024:	ldrb	r0, [r0, #4]
   22028:	str	r0, [sp, #24]
   2202c:	b	22068 <__assert_fail@plt+0x10914>
   22030:	ldr	r0, [fp, #8]
   22034:	ldr	r0, [r0]
   22038:	cmp	r0, #3
   2203c:	bne	22054 <__assert_fail@plt+0x10900>
   22040:	ldr	r0, [fp, #8]
   22044:	ldr	r0, [r0, #4]
   22048:	ldrb	r0, [r0]
   2204c:	str	r0, [sp, #20]
   22050:	b	22060 <__assert_fail@plt+0x1090c>
   22054:	movw	r0, #0
   22058:	str	r0, [sp, #20]
   2205c:	b	22060 <__assert_fail@plt+0x1090c>
   22060:	ldr	r0, [sp, #20]
   22064:	str	r0, [sp, #24]
   22068:	ldr	r0, [sp, #24]
   2206c:	str	r0, [fp, #-56]	; 0xffffffc8
   22070:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22074:	ldr	r0, [r0]
   22078:	cmp	r0, #0
   2207c:	beq	22090 <__assert_fail@plt+0x1093c>
   22080:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22084:	ldr	r0, [r0]
   22088:	cmp	r0, #3
   2208c:	bne	220a8 <__assert_fail@plt+0x10954>
   22090:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22094:	ldr	r1, [fp, #12]
   22098:	and	r0, r0, #255	; 0xff
   2209c:	bl	23540 <__assert_fail@plt+0x11dec>
   220a0:	str	r0, [sp, #16]
   220a4:	b	220b4 <__assert_fail@plt+0x10960>
   220a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   220ac:	ldr	r0, [r0, #4]
   220b0:	str	r0, [sp, #16]
   220b4:	ldr	r0, [sp, #16]
   220b8:	str	r0, [fp, #-60]	; 0xffffffc4
   220bc:	ldr	r0, [fp, #8]
   220c0:	ldr	r0, [r0]
   220c4:	cmp	r0, #0
   220c8:	beq	220dc <__assert_fail@plt+0x10988>
   220cc:	ldr	r0, [fp, #8]
   220d0:	ldr	r0, [r0]
   220d4:	cmp	r0, #3
   220d8:	bne	220f4 <__assert_fail@plt+0x109a0>
   220dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   220e0:	ldr	r1, [fp, #12]
   220e4:	and	r0, r0, #255	; 0xff
   220e8:	bl	23540 <__assert_fail@plt+0x11dec>
   220ec:	str	r0, [sp, #12]
   220f0:	b	22100 <__assert_fail@plt+0x109ac>
   220f4:	ldr	r0, [fp, #8]
   220f8:	ldr	r0, [r0, #4]
   220fc:	str	r0, [sp, #12]
   22100:	ldr	r0, [sp, #12]
   22104:	str	r0, [sp, #64]	; 0x40
   22108:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2210c:	cmn	r0, #1
   22110:	beq	22120 <__assert_fail@plt+0x109cc>
   22114:	ldr	r0, [sp, #64]	; 0x40
   22118:	cmn	r0, #1
   2211c:	bne	2212c <__assert_fail@plt+0x109d8>
   22120:	movw	r0, #3
   22124:	str	r0, [fp, #-32]	; 0xffffffe0
   22128:	b	222f0 <__assert_fail@plt+0x10b9c>
   2212c:	ldr	r0, [fp, #16]
   22130:	and	r0, r0, #65536	; 0x10000
   22134:	cmp	r0, #0
   22138:	movw	r0, #0
   2213c:	str	r0, [sp, #8]
   22140:	beq	2215c <__assert_fail@plt+0x10a08>
   22144:	ldr	r0, [fp, #-60]	; 0xffffffc4
   22148:	ldr	r1, [sp, #64]	; 0x40
   2214c:	cmp	r0, r1
   22150:	movw	r0, #0
   22154:	movhi	r0, #1
   22158:	str	r0, [sp, #8]
   2215c:	ldr	r0, [sp, #8]
   22160:	tst	r0, #1
   22164:	beq	22174 <__assert_fail@plt+0x10a20>
   22168:	movw	r0, #11
   2216c:	str	r0, [fp, #-32]	; 0xffffffe0
   22170:	b	222f0 <__assert_fail@plt+0x10b9c>
   22174:	b	22178 <__assert_fail@plt+0x10a24>
   22178:	ldr	r0, [fp, #12]
   2217c:	ldr	r0, [r0, #92]	; 0x5c
   22180:	cmp	r0, #1
   22184:	ble	22294 <__assert_fail@plt+0x10b40>
   22188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2218c:	ldr	r0, [r0]
   22190:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22194:	ldr	r1, [r1, #32]
   22198:	cmp	r0, r1
   2219c:	bne	22260 <__assert_fail@plt+0x10b0c>
   221a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   221a4:	ldr	r0, [r0, #32]
   221a8:	mov	r1, #1
   221ac:	orr	r0, r1, r0, lsl #1
   221b0:	str	r0, [sp, #52]	; 0x34
   221b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   221b8:	ldr	r0, [r0, #4]
   221bc:	ldr	r1, [sp, #52]	; 0x34
   221c0:	lsl	r1, r1, #2
   221c4:	bl	381dc <__assert_fail@plt+0x26a88>
   221c8:	str	r0, [sp, #60]	; 0x3c
   221cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   221d0:	ldr	r0, [r0, #8]
   221d4:	ldr	r1, [sp, #52]	; 0x34
   221d8:	lsl	r1, r1, #2
   221dc:	bl	381dc <__assert_fail@plt+0x26a88>
   221e0:	str	r0, [sp, #56]	; 0x38
   221e4:	ldr	r0, [sp, #60]	; 0x3c
   221e8:	movw	r1, #0
   221ec:	cmp	r0, r1
   221f0:	movw	r0, #1
   221f4:	str	r0, [sp, #4]
   221f8:	beq	22214 <__assert_fail@plt+0x10ac0>
   221fc:	ldr	r0, [sp, #56]	; 0x38
   22200:	movw	r1, #0
   22204:	cmp	r0, r1
   22208:	movw	r0, #0
   2220c:	moveq	r0, #1
   22210:	str	r0, [sp, #4]
   22214:	ldr	r0, [sp, #4]
   22218:	tst	r0, #1
   2221c:	beq	2223c <__assert_fail@plt+0x10ae8>
   22220:	ldr	r0, [sp, #60]	; 0x3c
   22224:	bl	15f68 <__assert_fail@plt+0x4814>
   22228:	ldr	r0, [sp, #56]	; 0x38
   2222c:	bl	15f68 <__assert_fail@plt+0x4814>
   22230:	movw	r0, #12
   22234:	str	r0, [fp, #-32]	; 0xffffffe0
   22238:	b	222f0 <__assert_fail@plt+0x10b9c>
   2223c:	ldr	r0, [sp, #60]	; 0x3c
   22240:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22244:	str	r0, [r1, #4]
   22248:	ldr	r0, [sp, #56]	; 0x38
   2224c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22250:	str	r0, [r1, #8]
   22254:	ldr	r0, [sp, #52]	; 0x34
   22258:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2225c:	str	r0, [r1]
   22260:	ldr	r0, [fp, #-60]	; 0xffffffc4
   22264:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22268:	ldr	r2, [r1, #4]
   2226c:	ldr	r1, [r1, #32]
   22270:	str	r0, [r2, r1, lsl #2]
   22274:	ldr	r0, [sp, #64]	; 0x40
   22278:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2227c:	ldr	r2, [r1, #8]
   22280:	ldr	r3, [r1, #32]
   22284:	add	ip, r3, #1
   22288:	str	ip, [r1, #32]
   2228c:	add	r1, r2, r3, lsl #2
   22290:	str	r0, [r1]
   22294:	movw	r0, #0
   22298:	str	r0, [sp, #48]	; 0x30
   2229c:	ldr	r0, [sp, #48]	; 0x30
   222a0:	cmp	r0, #256	; 0x100
   222a4:	bcs	222e8 <__assert_fail@plt+0x10b94>
   222a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   222ac:	ldr	r1, [sp, #48]	; 0x30
   222b0:	cmp	r0, r1
   222b4:	bhi	222d4 <__assert_fail@plt+0x10b80>
   222b8:	ldr	r0, [sp, #48]	; 0x30
   222bc:	ldr	r1, [sp, #64]	; 0x40
   222c0:	cmp	r0, r1
   222c4:	bhi	222d4 <__assert_fail@plt+0x10b80>
   222c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   222cc:	ldr	r1, [sp, #48]	; 0x30
   222d0:	bl	21cb0 <__assert_fail@plt+0x1055c>
   222d4:	b	222d8 <__assert_fail@plt+0x10b84>
   222d8:	ldr	r0, [sp, #48]	; 0x30
   222dc:	add	r0, r0, #1
   222e0:	str	r0, [sp, #48]	; 0x30
   222e4:	b	2229c <__assert_fail@plt+0x10b48>
   222e8:	movw	r0, #0
   222ec:	str	r0, [fp, #-32]	; 0xffffffe0
   222f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   222f4:	sub	sp, fp, #28
   222f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   222fc:	push	{fp, lr}
   22300:	mov	fp, sp
   22304:	sub	sp, sp, #24
   22308:	str	r0, [fp, #-8]
   2230c:	str	r1, [sp, #12]
   22310:	str	r2, [sp, #8]
   22314:	str	r3, [sp, #4]
   22318:	ldr	r0, [sp, #4]
   2231c:	bl	11604 <strlen@plt>
   22320:	cmp	r0, #1
   22324:	beq	22334 <__assert_fail@plt+0x10be0>
   22328:	movw	r0, #3
   2232c:	str	r0, [fp, #-4]
   22330:	b	2234c <__assert_fail@plt+0x10bf8>
   22334:	ldr	r0, [fp, #-8]
   22338:	ldr	r1, [sp, #4]
   2233c:	ldrb	r1, [r1]
   22340:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22344:	movw	r0, #0
   22348:	str	r0, [fp, #-4]
   2234c:	ldr	r0, [fp, #-4]
   22350:	mov	sp, fp
   22354:	pop	{fp, pc}
   22358:	push	{r4, r5, fp, lr}
   2235c:	add	fp, sp, #8
   22360:	sub	sp, sp, #40	; 0x28
   22364:	ldr	ip, [fp, #20]
   22368:	ldr	lr, [fp, #16]
   2236c:	ldr	r4, [fp, #12]
   22370:	ldr	r5, [fp, #8]
   22374:	str	r0, [fp, #-16]
   22378:	str	r1, [fp, #-20]	; 0xffffffec
   2237c:	str	r2, [sp, #24]
   22380:	str	r3, [sp, #20]
   22384:	ldr	r0, [sp, #20]
   22388:	str	ip, [sp, #12]
   2238c:	str	lr, [sp, #8]
   22390:	str	r4, [sp, #4]
   22394:	str	r5, [sp]
   22398:	bl	11604 <strlen@plt>
   2239c:	str	r0, [sp, #16]
   223a0:	ldr	r0, [sp, #16]
   223a4:	cmp	r0, #1
   223a8:	beq	223b8 <__assert_fail@plt+0x10c64>
   223ac:	movw	r0, #3
   223b0:	str	r0, [fp, #-12]
   223b4:	b	223d0 <__assert_fail@plt+0x10c7c>
   223b8:	ldr	r0, [fp, #-16]
   223bc:	ldr	r1, [sp, #20]
   223c0:	ldrb	r1, [r1]
   223c4:	bl	21cb0 <__assert_fail@plt+0x1055c>
   223c8:	movw	r0, #0
   223cc:	str	r0, [fp, #-12]
   223d0:	ldr	r0, [fp, #-12]
   223d4:	sub	sp, fp, #8
   223d8:	pop	{r4, r5, fp, pc}
   223dc:	push	{fp, lr}
   223e0:	mov	fp, sp
   223e4:	sub	sp, sp, #40	; 0x28
   223e8:	ldr	ip, [fp, #12]
   223ec:	ldr	lr, [fp, #8]
   223f0:	str	r0, [fp, #-8]
   223f4:	str	r1, [fp, #-12]
   223f8:	str	r2, [fp, #-16]
   223fc:	str	r3, [sp, #20]
   22400:	ldr	r0, [fp, #8]
   22404:	str	r0, [sp, #12]
   22408:	ldr	r0, [fp, #12]
   2240c:	and	r0, r0, #4194304	; 0x400000
   22410:	cmp	r0, #0
   22414:	beq	22454 <__assert_fail@plt+0x10d00>
   22418:	ldr	r0, [sp, #12]
   2241c:	movw	r1, #52300	; 0xcc4c
   22420:	movt	r1, #3
   22424:	bl	11400 <strcmp@plt>
   22428:	cmp	r0, #0
   2242c:	beq	22448 <__assert_fail@plt+0x10cf4>
   22430:	ldr	r0, [sp, #12]
   22434:	movw	r1, #52306	; 0xcc52
   22438:	movt	r1, #3
   2243c:	bl	11400 <strcmp@plt>
   22440:	cmp	r0, #0
   22444:	bne	22454 <__assert_fail@plt+0x10d00>
   22448:	movw	r0, #52312	; 0xcc58
   2244c:	movt	r0, #3
   22450:	str	r0, [sp, #12]
   22454:	ldr	r0, [sp, #20]
   22458:	ldr	r0, [r0]
   2245c:	ldr	r1, [fp, #-16]
   22460:	ldr	r1, [r1, #36]	; 0x24
   22464:	cmp	r0, r1
   22468:	bne	224cc <__assert_fail@plt+0x10d78>
   2246c:	ldr	r0, [fp, #-16]
   22470:	ldr	r0, [r0, #36]	; 0x24
   22474:	mov	r1, #1
   22478:	orr	r0, r1, r0, lsl #1
   2247c:	str	r0, [sp, #8]
   22480:	ldr	r0, [fp, #-16]
   22484:	ldr	r0, [r0, #12]
   22488:	ldr	r1, [sp, #8]
   2248c:	lsl	r1, r1, #2
   22490:	bl	381dc <__assert_fail@plt+0x26a88>
   22494:	str	r0, [sp, #4]
   22498:	ldr	r0, [sp, #4]
   2249c:	movw	r1, #0
   224a0:	cmp	r0, r1
   224a4:	bne	224b4 <__assert_fail@plt+0x10d60>
   224a8:	movw	r0, #12
   224ac:	str	r0, [fp, #-4]
   224b0:	b	23070 <__assert_fail@plt+0x1191c>
   224b4:	ldr	r0, [sp, #4]
   224b8:	ldr	r1, [fp, #-16]
   224bc:	str	r0, [r1, #12]
   224c0:	ldr	r0, [sp, #8]
   224c4:	ldr	r1, [sp, #20]
   224c8:	str	r0, [r1]
   224cc:	ldr	r0, [sp, #12]
   224d0:	bl	113d0 <wctype@plt>
   224d4:	ldr	r1, [fp, #-16]
   224d8:	ldr	r2, [r1, #12]
   224dc:	ldr	r3, [r1, #36]	; 0x24
   224e0:	add	ip, r3, #1
   224e4:	str	ip, [r1, #36]	; 0x24
   224e8:	add	r1, r2, r3, lsl #2
   224ec:	str	r0, [r1]
   224f0:	ldr	r0, [sp, #12]
   224f4:	movw	r1, #52288	; 0xcc40
   224f8:	movt	r1, #3
   224fc:	bl	11400 <strcmp@plt>
   22500:	cmp	r0, #0
   22504:	bne	225e0 <__assert_fail@plt+0x10e8c>
   22508:	b	2250c <__assert_fail@plt+0x10db8>
   2250c:	ldr	r0, [fp, #-8]
   22510:	movw	r1, #0
   22514:	cmp	r0, r1
   22518:	beq	22580 <__assert_fail@plt+0x10e2c>
   2251c:	movw	r0, #0
   22520:	str	r0, [sp, #16]
   22524:	ldr	r0, [sp, #16]
   22528:	cmp	r0, #256	; 0x100
   2252c:	bge	2257c <__assert_fail@plt+0x10e28>
   22530:	bl	115e0 <__ctype_b_loc@plt>
   22534:	ldr	r0, [r0]
   22538:	ldr	r1, [sp, #16]
   2253c:	add	r0, r0, r1, lsl #1
   22540:	ldrh	r0, [r0]
   22544:	and	r0, r0, #8
   22548:	cmp	r0, #0
   2254c:	beq	22568 <__assert_fail@plt+0x10e14>
   22550:	ldr	r0, [fp, #-12]
   22554:	ldr	r1, [fp, #-8]
   22558:	ldr	r2, [sp, #16]
   2255c:	add	r1, r1, r2
   22560:	ldrb	r1, [r1]
   22564:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22568:	b	2256c <__assert_fail@plt+0x10e18>
   2256c:	ldr	r0, [sp, #16]
   22570:	add	r0, r0, #1
   22574:	str	r0, [sp, #16]
   22578:	b	22524 <__assert_fail@plt+0x10dd0>
   2257c:	b	225d8 <__assert_fail@plt+0x10e84>
   22580:	movw	r0, #0
   22584:	str	r0, [sp, #16]
   22588:	ldr	r0, [sp, #16]
   2258c:	cmp	r0, #256	; 0x100
   22590:	bge	225d4 <__assert_fail@plt+0x10e80>
   22594:	bl	115e0 <__ctype_b_loc@plt>
   22598:	ldr	r0, [r0]
   2259c:	ldr	r1, [sp, #16]
   225a0:	add	r0, r0, r1, lsl #1
   225a4:	ldrh	r0, [r0]
   225a8:	and	r0, r0, #8
   225ac:	cmp	r0, #0
   225b0:	beq	225c0 <__assert_fail@plt+0x10e6c>
   225b4:	ldr	r0, [fp, #-12]
   225b8:	ldr	r1, [sp, #16]
   225bc:	bl	21cb0 <__assert_fail@plt+0x1055c>
   225c0:	b	225c4 <__assert_fail@plt+0x10e70>
   225c4:	ldr	r0, [sp, #16]
   225c8:	add	r0, r0, #1
   225cc:	str	r0, [sp, #16]
   225d0:	b	22588 <__assert_fail@plt+0x10e34>
   225d4:	b	225d8 <__assert_fail@plt+0x10e84>
   225d8:	b	225dc <__assert_fail@plt+0x10e88>
   225dc:	b	23068 <__assert_fail@plt+0x11914>
   225e0:	ldr	r0, [sp, #12]
   225e4:	movw	r1, #52318	; 0xcc5e
   225e8:	movt	r1, #3
   225ec:	bl	11400 <strcmp@plt>
   225f0:	cmp	r0, #0
   225f4:	bne	226d0 <__assert_fail@plt+0x10f7c>
   225f8:	b	225fc <__assert_fail@plt+0x10ea8>
   225fc:	ldr	r0, [fp, #-8]
   22600:	movw	r1, #0
   22604:	cmp	r0, r1
   22608:	beq	22670 <__assert_fail@plt+0x10f1c>
   2260c:	movw	r0, #0
   22610:	str	r0, [sp, #16]
   22614:	ldr	r0, [sp, #16]
   22618:	cmp	r0, #256	; 0x100
   2261c:	bge	2266c <__assert_fail@plt+0x10f18>
   22620:	bl	115e0 <__ctype_b_loc@plt>
   22624:	ldr	r0, [r0]
   22628:	ldr	r1, [sp, #16]
   2262c:	add	r0, r0, r1, lsl #1
   22630:	ldrh	r0, [r0]
   22634:	and	r0, r0, #2
   22638:	cmp	r0, #0
   2263c:	beq	22658 <__assert_fail@plt+0x10f04>
   22640:	ldr	r0, [fp, #-12]
   22644:	ldr	r1, [fp, #-8]
   22648:	ldr	r2, [sp, #16]
   2264c:	add	r1, r1, r2
   22650:	ldrb	r1, [r1]
   22654:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22658:	b	2265c <__assert_fail@plt+0x10f08>
   2265c:	ldr	r0, [sp, #16]
   22660:	add	r0, r0, #1
   22664:	str	r0, [sp, #16]
   22668:	b	22614 <__assert_fail@plt+0x10ec0>
   2266c:	b	226c8 <__assert_fail@plt+0x10f74>
   22670:	movw	r0, #0
   22674:	str	r0, [sp, #16]
   22678:	ldr	r0, [sp, #16]
   2267c:	cmp	r0, #256	; 0x100
   22680:	bge	226c4 <__assert_fail@plt+0x10f70>
   22684:	bl	115e0 <__ctype_b_loc@plt>
   22688:	ldr	r0, [r0]
   2268c:	ldr	r1, [sp, #16]
   22690:	add	r0, r0, r1, lsl #1
   22694:	ldrh	r0, [r0]
   22698:	and	r0, r0, #2
   2269c:	cmp	r0, #0
   226a0:	beq	226b0 <__assert_fail@plt+0x10f5c>
   226a4:	ldr	r0, [fp, #-12]
   226a8:	ldr	r1, [sp, #16]
   226ac:	bl	21cb0 <__assert_fail@plt+0x1055c>
   226b0:	b	226b4 <__assert_fail@plt+0x10f60>
   226b4:	ldr	r0, [sp, #16]
   226b8:	add	r0, r0, #1
   226bc:	str	r0, [sp, #16]
   226c0:	b	22678 <__assert_fail@plt+0x10f24>
   226c4:	b	226c8 <__assert_fail@plt+0x10f74>
   226c8:	b	226cc <__assert_fail@plt+0x10f78>
   226cc:	b	23064 <__assert_fail@plt+0x11910>
   226d0:	ldr	r0, [sp, #12]
   226d4:	movw	r1, #52306	; 0xcc52
   226d8:	movt	r1, #3
   226dc:	bl	11400 <strcmp@plt>
   226e0:	cmp	r0, #0
   226e4:	bne	227c0 <__assert_fail@plt+0x1106c>
   226e8:	b	226ec <__assert_fail@plt+0x10f98>
   226ec:	ldr	r0, [fp, #-8]
   226f0:	movw	r1, #0
   226f4:	cmp	r0, r1
   226f8:	beq	22760 <__assert_fail@plt+0x1100c>
   226fc:	movw	r0, #0
   22700:	str	r0, [sp, #16]
   22704:	ldr	r0, [sp, #16]
   22708:	cmp	r0, #256	; 0x100
   2270c:	bge	2275c <__assert_fail@plt+0x11008>
   22710:	bl	115e0 <__ctype_b_loc@plt>
   22714:	ldr	r0, [r0]
   22718:	ldr	r1, [sp, #16]
   2271c:	add	r0, r0, r1, lsl #1
   22720:	ldrh	r0, [r0]
   22724:	and	r0, r0, #512	; 0x200
   22728:	cmp	r0, #0
   2272c:	beq	22748 <__assert_fail@plt+0x10ff4>
   22730:	ldr	r0, [fp, #-12]
   22734:	ldr	r1, [fp, #-8]
   22738:	ldr	r2, [sp, #16]
   2273c:	add	r1, r1, r2
   22740:	ldrb	r1, [r1]
   22744:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22748:	b	2274c <__assert_fail@plt+0x10ff8>
   2274c:	ldr	r0, [sp, #16]
   22750:	add	r0, r0, #1
   22754:	str	r0, [sp, #16]
   22758:	b	22704 <__assert_fail@plt+0x10fb0>
   2275c:	b	227b8 <__assert_fail@plt+0x11064>
   22760:	movw	r0, #0
   22764:	str	r0, [sp, #16]
   22768:	ldr	r0, [sp, #16]
   2276c:	cmp	r0, #256	; 0x100
   22770:	bge	227b4 <__assert_fail@plt+0x11060>
   22774:	bl	115e0 <__ctype_b_loc@plt>
   22778:	ldr	r0, [r0]
   2277c:	ldr	r1, [sp, #16]
   22780:	add	r0, r0, r1, lsl #1
   22784:	ldrh	r0, [r0]
   22788:	and	r0, r0, #512	; 0x200
   2278c:	cmp	r0, #0
   22790:	beq	227a0 <__assert_fail@plt+0x1104c>
   22794:	ldr	r0, [fp, #-12]
   22798:	ldr	r1, [sp, #16]
   2279c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   227a0:	b	227a4 <__assert_fail@plt+0x11050>
   227a4:	ldr	r0, [sp, #16]
   227a8:	add	r0, r0, #1
   227ac:	str	r0, [sp, #16]
   227b0:	b	22768 <__assert_fail@plt+0x11014>
   227b4:	b	227b8 <__assert_fail@plt+0x11064>
   227b8:	b	227bc <__assert_fail@plt+0x11068>
   227bc:	b	23060 <__assert_fail@plt+0x1190c>
   227c0:	ldr	r0, [sp, #12]
   227c4:	movw	r1, #52294	; 0xcc46
   227c8:	movt	r1, #3
   227cc:	bl	11400 <strcmp@plt>
   227d0:	cmp	r0, #0
   227d4:	bne	228b0 <__assert_fail@plt+0x1115c>
   227d8:	b	227dc <__assert_fail@plt+0x11088>
   227dc:	ldr	r0, [fp, #-8]
   227e0:	movw	r1, #0
   227e4:	cmp	r0, r1
   227e8:	beq	22850 <__assert_fail@plt+0x110fc>
   227ec:	movw	r0, #0
   227f0:	str	r0, [sp, #16]
   227f4:	ldr	r0, [sp, #16]
   227f8:	cmp	r0, #256	; 0x100
   227fc:	bge	2284c <__assert_fail@plt+0x110f8>
   22800:	bl	115e0 <__ctype_b_loc@plt>
   22804:	ldr	r0, [r0]
   22808:	ldr	r1, [sp, #16]
   2280c:	add	r0, r0, r1, lsl #1
   22810:	ldrh	r0, [r0]
   22814:	and	r0, r0, #8192	; 0x2000
   22818:	cmp	r0, #0
   2281c:	beq	22838 <__assert_fail@plt+0x110e4>
   22820:	ldr	r0, [fp, #-12]
   22824:	ldr	r1, [fp, #-8]
   22828:	ldr	r2, [sp, #16]
   2282c:	add	r1, r1, r2
   22830:	ldrb	r1, [r1]
   22834:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22838:	b	2283c <__assert_fail@plt+0x110e8>
   2283c:	ldr	r0, [sp, #16]
   22840:	add	r0, r0, #1
   22844:	str	r0, [sp, #16]
   22848:	b	227f4 <__assert_fail@plt+0x110a0>
   2284c:	b	228a8 <__assert_fail@plt+0x11154>
   22850:	movw	r0, #0
   22854:	str	r0, [sp, #16]
   22858:	ldr	r0, [sp, #16]
   2285c:	cmp	r0, #256	; 0x100
   22860:	bge	228a4 <__assert_fail@plt+0x11150>
   22864:	bl	115e0 <__ctype_b_loc@plt>
   22868:	ldr	r0, [r0]
   2286c:	ldr	r1, [sp, #16]
   22870:	add	r0, r0, r1, lsl #1
   22874:	ldrh	r0, [r0]
   22878:	and	r0, r0, #8192	; 0x2000
   2287c:	cmp	r0, #0
   22880:	beq	22890 <__assert_fail@plt+0x1113c>
   22884:	ldr	r0, [fp, #-12]
   22888:	ldr	r1, [sp, #16]
   2288c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22890:	b	22894 <__assert_fail@plt+0x11140>
   22894:	ldr	r0, [sp, #16]
   22898:	add	r0, r0, #1
   2289c:	str	r0, [sp, #16]
   228a0:	b	22858 <__assert_fail@plt+0x11104>
   228a4:	b	228a8 <__assert_fail@plt+0x11154>
   228a8:	b	228ac <__assert_fail@plt+0x11158>
   228ac:	b	2305c <__assert_fail@plt+0x11908>
   228b0:	ldr	r0, [sp, #12]
   228b4:	movw	r1, #52312	; 0xcc58
   228b8:	movt	r1, #3
   228bc:	bl	11400 <strcmp@plt>
   228c0:	cmp	r0, #0
   228c4:	bne	229a0 <__assert_fail@plt+0x1124c>
   228c8:	b	228cc <__assert_fail@plt+0x11178>
   228cc:	ldr	r0, [fp, #-8]
   228d0:	movw	r1, #0
   228d4:	cmp	r0, r1
   228d8:	beq	22940 <__assert_fail@plt+0x111ec>
   228dc:	movw	r0, #0
   228e0:	str	r0, [sp, #16]
   228e4:	ldr	r0, [sp, #16]
   228e8:	cmp	r0, #256	; 0x100
   228ec:	bge	2293c <__assert_fail@plt+0x111e8>
   228f0:	bl	115e0 <__ctype_b_loc@plt>
   228f4:	ldr	r0, [r0]
   228f8:	ldr	r1, [sp, #16]
   228fc:	add	r0, r0, r1, lsl #1
   22900:	ldrh	r0, [r0]
   22904:	and	r0, r0, #1024	; 0x400
   22908:	cmp	r0, #0
   2290c:	beq	22928 <__assert_fail@plt+0x111d4>
   22910:	ldr	r0, [fp, #-12]
   22914:	ldr	r1, [fp, #-8]
   22918:	ldr	r2, [sp, #16]
   2291c:	add	r1, r1, r2
   22920:	ldrb	r1, [r1]
   22924:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22928:	b	2292c <__assert_fail@plt+0x111d8>
   2292c:	ldr	r0, [sp, #16]
   22930:	add	r0, r0, #1
   22934:	str	r0, [sp, #16]
   22938:	b	228e4 <__assert_fail@plt+0x11190>
   2293c:	b	22998 <__assert_fail@plt+0x11244>
   22940:	movw	r0, #0
   22944:	str	r0, [sp, #16]
   22948:	ldr	r0, [sp, #16]
   2294c:	cmp	r0, #256	; 0x100
   22950:	bge	22994 <__assert_fail@plt+0x11240>
   22954:	bl	115e0 <__ctype_b_loc@plt>
   22958:	ldr	r0, [r0]
   2295c:	ldr	r1, [sp, #16]
   22960:	add	r0, r0, r1, lsl #1
   22964:	ldrh	r0, [r0]
   22968:	and	r0, r0, #1024	; 0x400
   2296c:	cmp	r0, #0
   22970:	beq	22980 <__assert_fail@plt+0x1122c>
   22974:	ldr	r0, [fp, #-12]
   22978:	ldr	r1, [sp, #16]
   2297c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22980:	b	22984 <__assert_fail@plt+0x11230>
   22984:	ldr	r0, [sp, #16]
   22988:	add	r0, r0, #1
   2298c:	str	r0, [sp, #16]
   22990:	b	22948 <__assert_fail@plt+0x111f4>
   22994:	b	22998 <__assert_fail@plt+0x11244>
   22998:	b	2299c <__assert_fail@plt+0x11248>
   2299c:	b	23058 <__assert_fail@plt+0x11904>
   229a0:	ldr	r0, [sp, #12]
   229a4:	movw	r1, #52349	; 0xcc7d
   229a8:	movt	r1, #3
   229ac:	bl	11400 <strcmp@plt>
   229b0:	cmp	r0, #0
   229b4:	bne	22a90 <__assert_fail@plt+0x1133c>
   229b8:	b	229bc <__assert_fail@plt+0x11268>
   229bc:	ldr	r0, [fp, #-8]
   229c0:	movw	r1, #0
   229c4:	cmp	r0, r1
   229c8:	beq	22a30 <__assert_fail@plt+0x112dc>
   229cc:	movw	r0, #0
   229d0:	str	r0, [sp, #16]
   229d4:	ldr	r0, [sp, #16]
   229d8:	cmp	r0, #256	; 0x100
   229dc:	bge	22a2c <__assert_fail@plt+0x112d8>
   229e0:	bl	115e0 <__ctype_b_loc@plt>
   229e4:	ldr	r0, [r0]
   229e8:	ldr	r1, [sp, #16]
   229ec:	add	r0, r0, r1, lsl #1
   229f0:	ldrh	r0, [r0]
   229f4:	and	r0, r0, #2048	; 0x800
   229f8:	cmp	r0, #0
   229fc:	beq	22a18 <__assert_fail@plt+0x112c4>
   22a00:	ldr	r0, [fp, #-12]
   22a04:	ldr	r1, [fp, #-8]
   22a08:	ldr	r2, [sp, #16]
   22a0c:	add	r1, r1, r2
   22a10:	ldrb	r1, [r1]
   22a14:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22a18:	b	22a1c <__assert_fail@plt+0x112c8>
   22a1c:	ldr	r0, [sp, #16]
   22a20:	add	r0, r0, #1
   22a24:	str	r0, [sp, #16]
   22a28:	b	229d4 <__assert_fail@plt+0x11280>
   22a2c:	b	22a88 <__assert_fail@plt+0x11334>
   22a30:	movw	r0, #0
   22a34:	str	r0, [sp, #16]
   22a38:	ldr	r0, [sp, #16]
   22a3c:	cmp	r0, #256	; 0x100
   22a40:	bge	22a84 <__assert_fail@plt+0x11330>
   22a44:	bl	115e0 <__ctype_b_loc@plt>
   22a48:	ldr	r0, [r0]
   22a4c:	ldr	r1, [sp, #16]
   22a50:	add	r0, r0, r1, lsl #1
   22a54:	ldrh	r0, [r0]
   22a58:	and	r0, r0, #2048	; 0x800
   22a5c:	cmp	r0, #0
   22a60:	beq	22a70 <__assert_fail@plt+0x1131c>
   22a64:	ldr	r0, [fp, #-12]
   22a68:	ldr	r1, [sp, #16]
   22a6c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22a70:	b	22a74 <__assert_fail@plt+0x11320>
   22a74:	ldr	r0, [sp, #16]
   22a78:	add	r0, r0, #1
   22a7c:	str	r0, [sp, #16]
   22a80:	b	22a38 <__assert_fail@plt+0x112e4>
   22a84:	b	22a88 <__assert_fail@plt+0x11334>
   22a88:	b	22a8c <__assert_fail@plt+0x11338>
   22a8c:	b	23054 <__assert_fail@plt+0x11900>
   22a90:	ldr	r0, [sp, #12]
   22a94:	movw	r1, #52324	; 0xcc64
   22a98:	movt	r1, #3
   22a9c:	bl	11400 <strcmp@plt>
   22aa0:	cmp	r0, #0
   22aa4:	bne	22b80 <__assert_fail@plt+0x1142c>
   22aa8:	b	22aac <__assert_fail@plt+0x11358>
   22aac:	ldr	r0, [fp, #-8]
   22ab0:	movw	r1, #0
   22ab4:	cmp	r0, r1
   22ab8:	beq	22b20 <__assert_fail@plt+0x113cc>
   22abc:	movw	r0, #0
   22ac0:	str	r0, [sp, #16]
   22ac4:	ldr	r0, [sp, #16]
   22ac8:	cmp	r0, #256	; 0x100
   22acc:	bge	22b1c <__assert_fail@plt+0x113c8>
   22ad0:	bl	115e0 <__ctype_b_loc@plt>
   22ad4:	ldr	r0, [r0]
   22ad8:	ldr	r1, [sp, #16]
   22adc:	add	r0, r0, r1, lsl #1
   22ae0:	ldrh	r0, [r0]
   22ae4:	and	r0, r0, #16384	; 0x4000
   22ae8:	cmp	r0, #0
   22aec:	beq	22b08 <__assert_fail@plt+0x113b4>
   22af0:	ldr	r0, [fp, #-12]
   22af4:	ldr	r1, [fp, #-8]
   22af8:	ldr	r2, [sp, #16]
   22afc:	add	r1, r1, r2
   22b00:	ldrb	r1, [r1]
   22b04:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22b08:	b	22b0c <__assert_fail@plt+0x113b8>
   22b0c:	ldr	r0, [sp, #16]
   22b10:	add	r0, r0, #1
   22b14:	str	r0, [sp, #16]
   22b18:	b	22ac4 <__assert_fail@plt+0x11370>
   22b1c:	b	22b78 <__assert_fail@plt+0x11424>
   22b20:	movw	r0, #0
   22b24:	str	r0, [sp, #16]
   22b28:	ldr	r0, [sp, #16]
   22b2c:	cmp	r0, #256	; 0x100
   22b30:	bge	22b74 <__assert_fail@plt+0x11420>
   22b34:	bl	115e0 <__ctype_b_loc@plt>
   22b38:	ldr	r0, [r0]
   22b3c:	ldr	r1, [sp, #16]
   22b40:	add	r0, r0, r1, lsl #1
   22b44:	ldrh	r0, [r0]
   22b48:	and	r0, r0, #16384	; 0x4000
   22b4c:	cmp	r0, #0
   22b50:	beq	22b60 <__assert_fail@plt+0x1140c>
   22b54:	ldr	r0, [fp, #-12]
   22b58:	ldr	r1, [sp, #16]
   22b5c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22b60:	b	22b64 <__assert_fail@plt+0x11410>
   22b64:	ldr	r0, [sp, #16]
   22b68:	add	r0, r0, #1
   22b6c:	str	r0, [sp, #16]
   22b70:	b	22b28 <__assert_fail@plt+0x113d4>
   22b74:	b	22b78 <__assert_fail@plt+0x11424>
   22b78:	b	22b7c <__assert_fail@plt+0x11428>
   22b7c:	b	23050 <__assert_fail@plt+0x118fc>
   22b80:	ldr	r0, [sp, #12]
   22b84:	movw	r1, #52300	; 0xcc4c
   22b88:	movt	r1, #3
   22b8c:	bl	11400 <strcmp@plt>
   22b90:	cmp	r0, #0
   22b94:	bne	22c70 <__assert_fail@plt+0x1151c>
   22b98:	b	22b9c <__assert_fail@plt+0x11448>
   22b9c:	ldr	r0, [fp, #-8]
   22ba0:	movw	r1, #0
   22ba4:	cmp	r0, r1
   22ba8:	beq	22c10 <__assert_fail@plt+0x114bc>
   22bac:	movw	r0, #0
   22bb0:	str	r0, [sp, #16]
   22bb4:	ldr	r0, [sp, #16]
   22bb8:	cmp	r0, #256	; 0x100
   22bbc:	bge	22c0c <__assert_fail@plt+0x114b8>
   22bc0:	bl	115e0 <__ctype_b_loc@plt>
   22bc4:	ldr	r0, [r0]
   22bc8:	ldr	r1, [sp, #16]
   22bcc:	add	r0, r0, r1, lsl #1
   22bd0:	ldrh	r0, [r0]
   22bd4:	and	r0, r0, #256	; 0x100
   22bd8:	cmp	r0, #0
   22bdc:	beq	22bf8 <__assert_fail@plt+0x114a4>
   22be0:	ldr	r0, [fp, #-12]
   22be4:	ldr	r1, [fp, #-8]
   22be8:	ldr	r2, [sp, #16]
   22bec:	add	r1, r1, r2
   22bf0:	ldrb	r1, [r1]
   22bf4:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22bf8:	b	22bfc <__assert_fail@plt+0x114a8>
   22bfc:	ldr	r0, [sp, #16]
   22c00:	add	r0, r0, #1
   22c04:	str	r0, [sp, #16]
   22c08:	b	22bb4 <__assert_fail@plt+0x11460>
   22c0c:	b	22c68 <__assert_fail@plt+0x11514>
   22c10:	movw	r0, #0
   22c14:	str	r0, [sp, #16]
   22c18:	ldr	r0, [sp, #16]
   22c1c:	cmp	r0, #256	; 0x100
   22c20:	bge	22c64 <__assert_fail@plt+0x11510>
   22c24:	bl	115e0 <__ctype_b_loc@plt>
   22c28:	ldr	r0, [r0]
   22c2c:	ldr	r1, [sp, #16]
   22c30:	add	r0, r0, r1, lsl #1
   22c34:	ldrh	r0, [r0]
   22c38:	and	r0, r0, #256	; 0x100
   22c3c:	cmp	r0, #0
   22c40:	beq	22c50 <__assert_fail@plt+0x114fc>
   22c44:	ldr	r0, [fp, #-12]
   22c48:	ldr	r1, [sp, #16]
   22c4c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22c50:	b	22c54 <__assert_fail@plt+0x11500>
   22c54:	ldr	r0, [sp, #16]
   22c58:	add	r0, r0, #1
   22c5c:	str	r0, [sp, #16]
   22c60:	b	22c18 <__assert_fail@plt+0x114c4>
   22c64:	b	22c68 <__assert_fail@plt+0x11514>
   22c68:	b	22c6c <__assert_fail@plt+0x11518>
   22c6c:	b	2304c <__assert_fail@plt+0x118f8>
   22c70:	ldr	r0, [sp, #12]
   22c74:	movw	r1, #52330	; 0xcc6a
   22c78:	movt	r1, #3
   22c7c:	bl	11400 <strcmp@plt>
   22c80:	cmp	r0, #0
   22c84:	bne	22d60 <__assert_fail@plt+0x1160c>
   22c88:	b	22c8c <__assert_fail@plt+0x11538>
   22c8c:	ldr	r0, [fp, #-8]
   22c90:	movw	r1, #0
   22c94:	cmp	r0, r1
   22c98:	beq	22d00 <__assert_fail@plt+0x115ac>
   22c9c:	movw	r0, #0
   22ca0:	str	r0, [sp, #16]
   22ca4:	ldr	r0, [sp, #16]
   22ca8:	cmp	r0, #256	; 0x100
   22cac:	bge	22cfc <__assert_fail@plt+0x115a8>
   22cb0:	bl	115e0 <__ctype_b_loc@plt>
   22cb4:	ldr	r0, [r0]
   22cb8:	ldr	r1, [sp, #16]
   22cbc:	add	r0, r0, r1, lsl #1
   22cc0:	ldrh	r0, [r0]
   22cc4:	and	r0, r0, #1
   22cc8:	cmp	r0, #0
   22ccc:	beq	22ce8 <__assert_fail@plt+0x11594>
   22cd0:	ldr	r0, [fp, #-12]
   22cd4:	ldr	r1, [fp, #-8]
   22cd8:	ldr	r2, [sp, #16]
   22cdc:	add	r1, r1, r2
   22ce0:	ldrb	r1, [r1]
   22ce4:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22ce8:	b	22cec <__assert_fail@plt+0x11598>
   22cec:	ldr	r0, [sp, #16]
   22cf0:	add	r0, r0, #1
   22cf4:	str	r0, [sp, #16]
   22cf8:	b	22ca4 <__assert_fail@plt+0x11550>
   22cfc:	b	22d58 <__assert_fail@plt+0x11604>
   22d00:	movw	r0, #0
   22d04:	str	r0, [sp, #16]
   22d08:	ldr	r0, [sp, #16]
   22d0c:	cmp	r0, #256	; 0x100
   22d10:	bge	22d54 <__assert_fail@plt+0x11600>
   22d14:	bl	115e0 <__ctype_b_loc@plt>
   22d18:	ldr	r0, [r0]
   22d1c:	ldr	r1, [sp, #16]
   22d20:	add	r0, r0, r1, lsl #1
   22d24:	ldrh	r0, [r0]
   22d28:	and	r0, r0, #1
   22d2c:	cmp	r0, #0
   22d30:	beq	22d40 <__assert_fail@plt+0x115ec>
   22d34:	ldr	r0, [fp, #-12]
   22d38:	ldr	r1, [sp, #16]
   22d3c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22d40:	b	22d44 <__assert_fail@plt+0x115f0>
   22d44:	ldr	r0, [sp, #16]
   22d48:	add	r0, r0, #1
   22d4c:	str	r0, [sp, #16]
   22d50:	b	22d08 <__assert_fail@plt+0x115b4>
   22d54:	b	22d58 <__assert_fail@plt+0x11604>
   22d58:	b	22d5c <__assert_fail@plt+0x11608>
   22d5c:	b	23048 <__assert_fail@plt+0x118f4>
   22d60:	ldr	r0, [sp, #12]
   22d64:	movw	r1, #52336	; 0xcc70
   22d68:	movt	r1, #3
   22d6c:	bl	11400 <strcmp@plt>
   22d70:	cmp	r0, #0
   22d74:	bne	22e50 <__assert_fail@plt+0x116fc>
   22d78:	b	22d7c <__assert_fail@plt+0x11628>
   22d7c:	ldr	r0, [fp, #-8]
   22d80:	movw	r1, #0
   22d84:	cmp	r0, r1
   22d88:	beq	22df0 <__assert_fail@plt+0x1169c>
   22d8c:	movw	r0, #0
   22d90:	str	r0, [sp, #16]
   22d94:	ldr	r0, [sp, #16]
   22d98:	cmp	r0, #256	; 0x100
   22d9c:	bge	22dec <__assert_fail@plt+0x11698>
   22da0:	bl	115e0 <__ctype_b_loc@plt>
   22da4:	ldr	r0, [r0]
   22da8:	ldr	r1, [sp, #16]
   22dac:	add	r0, r0, r1, lsl #1
   22db0:	ldrh	r0, [r0]
   22db4:	and	r0, r0, #32768	; 0x8000
   22db8:	cmp	r0, #0
   22dbc:	beq	22dd8 <__assert_fail@plt+0x11684>
   22dc0:	ldr	r0, [fp, #-12]
   22dc4:	ldr	r1, [fp, #-8]
   22dc8:	ldr	r2, [sp, #16]
   22dcc:	add	r1, r1, r2
   22dd0:	ldrb	r1, [r1]
   22dd4:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22dd8:	b	22ddc <__assert_fail@plt+0x11688>
   22ddc:	ldr	r0, [sp, #16]
   22de0:	add	r0, r0, #1
   22de4:	str	r0, [sp, #16]
   22de8:	b	22d94 <__assert_fail@plt+0x11640>
   22dec:	b	22e48 <__assert_fail@plt+0x116f4>
   22df0:	movw	r0, #0
   22df4:	str	r0, [sp, #16]
   22df8:	ldr	r0, [sp, #16]
   22dfc:	cmp	r0, #256	; 0x100
   22e00:	bge	22e44 <__assert_fail@plt+0x116f0>
   22e04:	bl	115e0 <__ctype_b_loc@plt>
   22e08:	ldr	r0, [r0]
   22e0c:	ldr	r1, [sp, #16]
   22e10:	add	r0, r0, r1, lsl #1
   22e14:	ldrh	r0, [r0]
   22e18:	and	r0, r0, #32768	; 0x8000
   22e1c:	cmp	r0, #0
   22e20:	beq	22e30 <__assert_fail@plt+0x116dc>
   22e24:	ldr	r0, [fp, #-12]
   22e28:	ldr	r1, [sp, #16]
   22e2c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22e30:	b	22e34 <__assert_fail@plt+0x116e0>
   22e34:	ldr	r0, [sp, #16]
   22e38:	add	r0, r0, #1
   22e3c:	str	r0, [sp, #16]
   22e40:	b	22df8 <__assert_fail@plt+0x116a4>
   22e44:	b	22e48 <__assert_fail@plt+0x116f4>
   22e48:	b	22e4c <__assert_fail@plt+0x116f8>
   22e4c:	b	23044 <__assert_fail@plt+0x118f0>
   22e50:	ldr	r0, [sp, #12]
   22e54:	movw	r1, #52342	; 0xcc76
   22e58:	movt	r1, #3
   22e5c:	bl	11400 <strcmp@plt>
   22e60:	cmp	r0, #0
   22e64:	bne	22f40 <__assert_fail@plt+0x117ec>
   22e68:	b	22e6c <__assert_fail@plt+0x11718>
   22e6c:	ldr	r0, [fp, #-8]
   22e70:	movw	r1, #0
   22e74:	cmp	r0, r1
   22e78:	beq	22ee0 <__assert_fail@plt+0x1178c>
   22e7c:	movw	r0, #0
   22e80:	str	r0, [sp, #16]
   22e84:	ldr	r0, [sp, #16]
   22e88:	cmp	r0, #256	; 0x100
   22e8c:	bge	22edc <__assert_fail@plt+0x11788>
   22e90:	bl	115e0 <__ctype_b_loc@plt>
   22e94:	ldr	r0, [r0]
   22e98:	ldr	r1, [sp, #16]
   22e9c:	add	r0, r0, r1, lsl #1
   22ea0:	ldrh	r0, [r0]
   22ea4:	and	r0, r0, #4
   22ea8:	cmp	r0, #0
   22eac:	beq	22ec8 <__assert_fail@plt+0x11774>
   22eb0:	ldr	r0, [fp, #-12]
   22eb4:	ldr	r1, [fp, #-8]
   22eb8:	ldr	r2, [sp, #16]
   22ebc:	add	r1, r1, r2
   22ec0:	ldrb	r1, [r1]
   22ec4:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22ec8:	b	22ecc <__assert_fail@plt+0x11778>
   22ecc:	ldr	r0, [sp, #16]
   22ed0:	add	r0, r0, #1
   22ed4:	str	r0, [sp, #16]
   22ed8:	b	22e84 <__assert_fail@plt+0x11730>
   22edc:	b	22f38 <__assert_fail@plt+0x117e4>
   22ee0:	movw	r0, #0
   22ee4:	str	r0, [sp, #16]
   22ee8:	ldr	r0, [sp, #16]
   22eec:	cmp	r0, #256	; 0x100
   22ef0:	bge	22f34 <__assert_fail@plt+0x117e0>
   22ef4:	bl	115e0 <__ctype_b_loc@plt>
   22ef8:	ldr	r0, [r0]
   22efc:	ldr	r1, [sp, #16]
   22f00:	add	r0, r0, r1, lsl #1
   22f04:	ldrh	r0, [r0]
   22f08:	and	r0, r0, #4
   22f0c:	cmp	r0, #0
   22f10:	beq	22f20 <__assert_fail@plt+0x117cc>
   22f14:	ldr	r0, [fp, #-12]
   22f18:	ldr	r1, [sp, #16]
   22f1c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22f20:	b	22f24 <__assert_fail@plt+0x117d0>
   22f24:	ldr	r0, [sp, #16]
   22f28:	add	r0, r0, #1
   22f2c:	str	r0, [sp, #16]
   22f30:	b	22ee8 <__assert_fail@plt+0x11794>
   22f34:	b	22f38 <__assert_fail@plt+0x117e4>
   22f38:	b	22f3c <__assert_fail@plt+0x117e8>
   22f3c:	b	23040 <__assert_fail@plt+0x118ec>
   22f40:	ldr	r0, [sp, #12]
   22f44:	movw	r1, #52348	; 0xcc7c
   22f48:	movt	r1, #3
   22f4c:	bl	11400 <strcmp@plt>
   22f50:	cmp	r0, #0
   22f54:	bne	23030 <__assert_fail@plt+0x118dc>
   22f58:	b	22f5c <__assert_fail@plt+0x11808>
   22f5c:	ldr	r0, [fp, #-8]
   22f60:	movw	r1, #0
   22f64:	cmp	r0, r1
   22f68:	beq	22fd0 <__assert_fail@plt+0x1187c>
   22f6c:	movw	r0, #0
   22f70:	str	r0, [sp, #16]
   22f74:	ldr	r0, [sp, #16]
   22f78:	cmp	r0, #256	; 0x100
   22f7c:	bge	22fcc <__assert_fail@plt+0x11878>
   22f80:	bl	115e0 <__ctype_b_loc@plt>
   22f84:	ldr	r0, [r0]
   22f88:	ldr	r1, [sp, #16]
   22f8c:	add	r0, r0, r1, lsl #1
   22f90:	ldrh	r0, [r0]
   22f94:	and	r0, r0, #4096	; 0x1000
   22f98:	cmp	r0, #0
   22f9c:	beq	22fb8 <__assert_fail@plt+0x11864>
   22fa0:	ldr	r0, [fp, #-12]
   22fa4:	ldr	r1, [fp, #-8]
   22fa8:	ldr	r2, [sp, #16]
   22fac:	add	r1, r1, r2
   22fb0:	ldrb	r1, [r1]
   22fb4:	bl	21cb0 <__assert_fail@plt+0x1055c>
   22fb8:	b	22fbc <__assert_fail@plt+0x11868>
   22fbc:	ldr	r0, [sp, #16]
   22fc0:	add	r0, r0, #1
   22fc4:	str	r0, [sp, #16]
   22fc8:	b	22f74 <__assert_fail@plt+0x11820>
   22fcc:	b	23028 <__assert_fail@plt+0x118d4>
   22fd0:	movw	r0, #0
   22fd4:	str	r0, [sp, #16]
   22fd8:	ldr	r0, [sp, #16]
   22fdc:	cmp	r0, #256	; 0x100
   22fe0:	bge	23024 <__assert_fail@plt+0x118d0>
   22fe4:	bl	115e0 <__ctype_b_loc@plt>
   22fe8:	ldr	r0, [r0]
   22fec:	ldr	r1, [sp, #16]
   22ff0:	add	r0, r0, r1, lsl #1
   22ff4:	ldrh	r0, [r0]
   22ff8:	and	r0, r0, #4096	; 0x1000
   22ffc:	cmp	r0, #0
   23000:	beq	23010 <__assert_fail@plt+0x118bc>
   23004:	ldr	r0, [fp, #-12]
   23008:	ldr	r1, [sp, #16]
   2300c:	bl	21cb0 <__assert_fail@plt+0x1055c>
   23010:	b	23014 <__assert_fail@plt+0x118c0>
   23014:	ldr	r0, [sp, #16]
   23018:	add	r0, r0, #1
   2301c:	str	r0, [sp, #16]
   23020:	b	22fd8 <__assert_fail@plt+0x11884>
   23024:	b	23028 <__assert_fail@plt+0x118d4>
   23028:	b	2302c <__assert_fail@plt+0x118d8>
   2302c:	b	2303c <__assert_fail@plt+0x118e8>
   23030:	movw	r0, #4
   23034:	str	r0, [fp, #-4]
   23038:	b	23070 <__assert_fail@plt+0x1191c>
   2303c:	b	23040 <__assert_fail@plt+0x118ec>
   23040:	b	23044 <__assert_fail@plt+0x118f0>
   23044:	b	23048 <__assert_fail@plt+0x118f4>
   23048:	b	2304c <__assert_fail@plt+0x118f8>
   2304c:	b	23050 <__assert_fail@plt+0x118fc>
   23050:	b	23054 <__assert_fail@plt+0x11900>
   23054:	b	23058 <__assert_fail@plt+0x11904>
   23058:	b	2305c <__assert_fail@plt+0x11908>
   2305c:	b	23060 <__assert_fail@plt+0x1190c>
   23060:	b	23064 <__assert_fail@plt+0x11910>
   23064:	b	23068 <__assert_fail@plt+0x11914>
   23068:	movw	r0, #0
   2306c:	str	r0, [fp, #-4]
   23070:	ldr	r0, [fp, #-4]
   23074:	mov	sp, fp
   23078:	pop	{fp, pc}
   2307c:	sub	sp, sp, #8
   23080:	str	r0, [sp, #4]
   23084:	movw	r0, #0
   23088:	str	r0, [sp]
   2308c:	ldr	r0, [sp]
   23090:	cmp	r0, #8
   23094:	bge	230bc <__assert_fail@plt+0x11968>
   23098:	ldr	r0, [sp, #4]
   2309c:	ldr	r1, [sp]
   230a0:	ldr	r1, [r0, r1, lsl #2]!
   230a4:	mvn	r1, r1
   230a8:	str	r1, [r0]
   230ac:	ldr	r0, [sp]
   230b0:	add	r0, r0, #1
   230b4:	str	r0, [sp]
   230b8:	b	2308c <__assert_fail@plt+0x11938>
   230bc:	add	sp, sp, #8
   230c0:	bx	lr
   230c4:	sub	sp, sp, #12
   230c8:	str	r0, [sp, #8]
   230cc:	str	r1, [sp, #4]
   230d0:	movw	r0, #0
   230d4:	str	r0, [sp]
   230d8:	ldr	r0, [sp]
   230dc:	cmp	r0, #8
   230e0:	bge	23114 <__assert_fail@plt+0x119c0>
   230e4:	ldr	r0, [sp, #4]
   230e8:	ldr	r1, [sp]
   230ec:	ldr	r0, [r0, r1, lsl #2]
   230f0:	ldr	r2, [sp, #8]
   230f4:	add	r1, r2, r1, lsl #2
   230f8:	ldr	r2, [r1]
   230fc:	and	r0, r2, r0
   23100:	str	r0, [r1]
   23104:	ldr	r0, [sp]
   23108:	add	r0, r0, #1
   2310c:	str	r0, [sp]
   23110:	b	230d8 <__assert_fail@plt+0x11984>
   23114:	add	sp, sp, #12
   23118:	bx	lr
   2311c:	sub	sp, sp, #16
   23120:	str	r0, [sp, #8]
   23124:	str	r1, [sp, #4]
   23128:	ldr	r0, [sp, #8]
   2312c:	ldr	r0, [r0, #80]	; 0x50
   23130:	cmp	r0, #1
   23134:	bne	23144 <__assert_fail@plt+0x119f0>
   23138:	movw	r0, #1
   2313c:	str	r0, [sp, #12]
   23140:	b	231ac <__assert_fail@plt+0x11a58>
   23144:	movw	r0, #1
   23148:	str	r0, [sp]
   2314c:	ldr	r0, [sp, #4]
   23150:	ldr	r1, [sp]
   23154:	add	r0, r0, r1
   23158:	ldr	r1, [sp, #8]
   2315c:	ldr	r1, [r1, #28]
   23160:	cmp	r0, r1
   23164:	bge	231a4 <__assert_fail@plt+0x11a50>
   23168:	ldr	r0, [sp, #8]
   2316c:	ldr	r0, [r0, #8]
   23170:	ldr	r1, [sp, #4]
   23174:	ldr	r2, [sp]
   23178:	add	r1, r1, r2
   2317c:	add	r0, r0, r1, lsl #2
   23180:	ldr	r0, [r0]
   23184:	cmn	r0, #1
   23188:	beq	23190 <__assert_fail@plt+0x11a3c>
   2318c:	b	231a4 <__assert_fail@plt+0x11a50>
   23190:	b	23194 <__assert_fail@plt+0x11a40>
   23194:	ldr	r0, [sp]
   23198:	add	r0, r0, #1
   2319c:	str	r0, [sp]
   231a0:	b	2314c <__assert_fail@plt+0x119f8>
   231a4:	ldr	r0, [sp]
   231a8:	str	r0, [sp, #12]
   231ac:	ldr	r0, [sp, #12]
   231b0:	add	sp, sp, #16
   231b4:	bx	lr
   231b8:	push	{fp, lr}
   231bc:	mov	fp, sp
   231c0:	sub	sp, sp, #32
   231c4:	str	r0, [fp, #-8]
   231c8:	str	r1, [fp, #-12]
   231cc:	str	r2, [sp, #16]
   231d0:	ldr	r0, [sp, #16]
   231d4:	ldrb	r0, [r0]
   231d8:	strb	r0, [sp, #14]
   231dc:	movw	r0, #0
   231e0:	str	r0, [sp, #8]
   231e4:	ldr	r0, [fp, #-12]
   231e8:	ldr	r0, [r0, #56]	; 0x38
   231ec:	ldr	r1, [fp, #-12]
   231f0:	ldr	r1, [r1, #40]	; 0x28
   231f4:	cmp	r0, r1
   231f8:	bgt	23208 <__assert_fail@plt+0x11ab4>
   231fc:	movw	r0, #7
   23200:	str	r0, [fp, #-4]
   23204:	b	2338c <__assert_fail@plt+0x11c38>
   23208:	b	2320c <__assert_fail@plt+0x11ab8>
   2320c:	ldr	r0, [sp, #8]
   23210:	cmp	r0, #32
   23214:	blt	23224 <__assert_fail@plt+0x11ad0>
   23218:	movw	r0, #7
   2321c:	str	r0, [fp, #-4]
   23220:	b	2338c <__assert_fail@plt+0x11c38>
   23224:	ldr	r0, [sp, #16]
   23228:	ldr	r0, [r0, #4]
   2322c:	and	r0, r0, #255	; 0xff
   23230:	cmp	r0, #30
   23234:	bne	23248 <__assert_fail@plt+0x11af4>
   23238:	ldr	r0, [fp, #-12]
   2323c:	bl	23398 <__assert_fail@plt+0x11c44>
   23240:	strb	r0, [sp, #15]
   23244:	b	2326c <__assert_fail@plt+0x11b18>
   23248:	ldr	r0, [fp, #-12]
   2324c:	ldr	r0, [r0, #4]
   23250:	ldr	r1, [fp, #-12]
   23254:	ldr	r2, [r1, #40]	; 0x28
   23258:	add	r3, r2, #1
   2325c:	str	r3, [r1, #40]	; 0x28
   23260:	add	r0, r0, r2
   23264:	ldrb	r0, [r0]
   23268:	strb	r0, [sp, #15]
   2326c:	ldr	r0, [fp, #-12]
   23270:	ldr	r0, [r0, #56]	; 0x38
   23274:	ldr	r1, [fp, #-12]
   23278:	ldr	r1, [r1, #40]	; 0x28
   2327c:	cmp	r0, r1
   23280:	bgt	23290 <__assert_fail@plt+0x11b3c>
   23284:	movw	r0, #7
   23288:	str	r0, [fp, #-4]
   2328c:	b	2338c <__assert_fail@plt+0x11c38>
   23290:	ldrb	r0, [sp, #15]
   23294:	ldrb	r1, [sp, #14]
   23298:	cmp	r0, r1
   2329c:	bne	232c8 <__assert_fail@plt+0x11b74>
   232a0:	ldr	r0, [fp, #-12]
   232a4:	ldr	r0, [r0, #4]
   232a8:	ldr	r1, [fp, #-12]
   232ac:	ldr	r1, [r1, #40]	; 0x28
   232b0:	add	r1, r1, #0
   232b4:	add	r0, r0, r1
   232b8:	ldrb	r0, [r0]
   232bc:	cmp	r0, #93	; 0x5d
   232c0:	bne	232c8 <__assert_fail@plt+0x11b74>
   232c4:	b	232f0 <__assert_fail@plt+0x11b9c>
   232c8:	ldrb	r0, [sp, #15]
   232cc:	ldr	r1, [fp, #-8]
   232d0:	ldr	r1, [r1, #4]
   232d4:	ldr	r2, [sp, #8]
   232d8:	add	r1, r1, r2
   232dc:	strb	r0, [r1]
   232e0:	ldr	r0, [sp, #8]
   232e4:	add	r0, r0, #1
   232e8:	str	r0, [sp, #8]
   232ec:	b	2320c <__assert_fail@plt+0x11ab8>
   232f0:	ldr	r0, [fp, #-12]
   232f4:	ldr	r1, [r0, #40]	; 0x28
   232f8:	add	r1, r1, #1
   232fc:	str	r1, [r0, #40]	; 0x28
   23300:	ldr	r0, [fp, #-8]
   23304:	ldr	r0, [r0, #4]
   23308:	ldr	r1, [sp, #8]
   2330c:	mov	r2, #0
   23310:	strb	r2, [r0, r1]
   23314:	ldr	r0, [sp, #16]
   23318:	ldrb	r0, [r0, #4]
   2331c:	mov	r1, r0
   23320:	cmp	r0, #26
   23324:	str	r1, [sp, #4]
   23328:	beq	23350 <__assert_fail@plt+0x11bfc>
   2332c:	b	23330 <__assert_fail@plt+0x11bdc>
   23330:	ldr	r0, [sp, #4]
   23334:	cmp	r0, #28
   23338:	beq	23360 <__assert_fail@plt+0x11c0c>
   2333c:	b	23340 <__assert_fail@plt+0x11bec>
   23340:	ldr	r0, [sp, #4]
   23344:	cmp	r0, #30
   23348:	beq	23370 <__assert_fail@plt+0x11c1c>
   2334c:	b	23380 <__assert_fail@plt+0x11c2c>
   23350:	ldr	r0, [fp, #-8]
   23354:	movw	r1, #3
   23358:	str	r1, [r0]
   2335c:	b	23384 <__assert_fail@plt+0x11c30>
   23360:	ldr	r0, [fp, #-8]
   23364:	movw	r1, #2
   23368:	str	r1, [r0]
   2336c:	b	23384 <__assert_fail@plt+0x11c30>
   23370:	ldr	r0, [fp, #-8]
   23374:	movw	r1, #4
   23378:	str	r1, [r0]
   2337c:	b	23384 <__assert_fail@plt+0x11c30>
   23380:	b	23384 <__assert_fail@plt+0x11c30>
   23384:	movw	r0, #0
   23388:	str	r0, [fp, #-4]
   2338c:	ldr	r0, [fp, #-4]
   23390:	mov	sp, fp
   23394:	pop	{fp, pc}
   23398:	push	{fp, lr}
   2339c:	mov	fp, sp
   233a0:	sub	sp, sp, #16
   233a4:	str	r0, [sp, #8]
   233a8:	ldr	r0, [sp, #8]
   233ac:	ldrsb	r0, [r0, #75]	; 0x4b
   233b0:	cmp	r0, #0
   233b4:	movw	r0, #0
   233b8:	movne	r0, #1
   233bc:	mvn	r1, #0
   233c0:	eor	r0, r0, r1
   233c4:	tst	r0, #1
   233c8:	beq	233f4 <__assert_fail@plt+0x11ca0>
   233cc:	ldr	r0, [sp, #8]
   233d0:	ldr	r0, [r0, #4]
   233d4:	ldr	r1, [sp, #8]
   233d8:	ldr	r2, [r1, #40]	; 0x28
   233dc:	add	r3, r2, #1
   233e0:	str	r3, [r1, #40]	; 0x28
   233e4:	add	r0, r0, r2
   233e8:	ldrb	r0, [r0]
   233ec:	strb	r0, [fp, #-1]
   233f0:	b	23534 <__assert_fail@plt+0x11de0>
   233f4:	ldr	r0, [sp, #8]
   233f8:	ldrsb	r0, [r0, #76]	; 0x4c
   233fc:	cmp	r0, #0
   23400:	beq	23504 <__assert_fail@plt+0x11db0>
   23404:	ldr	r0, [sp, #8]
   23408:	ldr	r0, [r0, #40]	; 0x28
   2340c:	ldr	r1, [sp, #8]
   23410:	ldr	r1, [r1, #28]
   23414:	cmp	r0, r1
   23418:	beq	23460 <__assert_fail@plt+0x11d0c>
   2341c:	ldr	r0, [sp, #8]
   23420:	ldr	r1, [r0, #8]
   23424:	ldr	r0, [r0, #40]	; 0x28
   23428:	add	r0, r1, r0, lsl #2
   2342c:	ldr	r0, [r0]
   23430:	cmn	r0, #1
   23434:	bne	23460 <__assert_fail@plt+0x11d0c>
   23438:	ldr	r0, [sp, #8]
   2343c:	ldr	r0, [r0, #4]
   23440:	ldr	r1, [sp, #8]
   23444:	ldr	r2, [r1, #40]	; 0x28
   23448:	add	r3, r2, #1
   2344c:	str	r3, [r1, #40]	; 0x28
   23450:	add	r0, r0, r2
   23454:	ldrb	r0, [r0]
   23458:	strb	r0, [fp, #-1]
   2345c:	b	23534 <__assert_fail@plt+0x11de0>
   23460:	ldr	r0, [sp, #8]
   23464:	ldr	r1, [r0, #12]
   23468:	ldr	r0, [r0, #40]	; 0x28
   2346c:	add	r0, r1, r0, lsl #2
   23470:	ldr	r0, [r0]
   23474:	str	r0, [sp, #4]
   23478:	ldr	r0, [sp, #8]
   2347c:	ldr	r0, [r0]
   23480:	ldr	r1, [sp, #8]
   23484:	ldr	r1, [r1, #24]
   23488:	ldr	r2, [sp, #4]
   2348c:	add	r1, r1, r2
   23490:	add	r0, r0, r1
   23494:	ldrb	r0, [r0]
   23498:	str	r0, [sp]
   2349c:	ldr	r0, [sp]
   234a0:	mvn	r1, #127	; 0x7f
   234a4:	and	r0, r0, r1
   234a8:	cmp	r0, #0
   234ac:	beq	234d8 <__assert_fail@plt+0x11d84>
   234b0:	ldr	r0, [sp, #8]
   234b4:	ldr	r0, [r0, #4]
   234b8:	ldr	r1, [sp, #8]
   234bc:	ldr	r2, [r1, #40]	; 0x28
   234c0:	add	r3, r2, #1
   234c4:	str	r3, [r1, #40]	; 0x28
   234c8:	add	r0, r0, r2
   234cc:	ldrb	r0, [r0]
   234d0:	strb	r0, [fp, #-1]
   234d4:	b	23534 <__assert_fail@plt+0x11de0>
   234d8:	ldr	r0, [sp, #8]
   234dc:	ldr	r1, [sp, #8]
   234e0:	ldr	r1, [r1, #40]	; 0x28
   234e4:	bl	2311c <__assert_fail@plt+0x119c8>
   234e8:	ldr	r1, [sp, #8]
   234ec:	ldr	r2, [r1, #40]	; 0x28
   234f0:	add	r0, r2, r0
   234f4:	str	r0, [r1, #40]	; 0x28
   234f8:	ldr	r0, [sp]
   234fc:	strb	r0, [fp, #-1]
   23500:	b	23534 <__assert_fail@plt+0x11de0>
   23504:	ldr	r0, [sp, #8]
   23508:	ldr	r0, [r0]
   2350c:	ldr	r1, [sp, #8]
   23510:	ldr	r1, [r1, #24]
   23514:	ldr	r2, [sp, #8]
   23518:	ldr	r3, [r2, #40]	; 0x28
   2351c:	add	ip, r3, #1
   23520:	str	ip, [r2, #40]	; 0x28
   23524:	add	r1, r1, r3
   23528:	add	r0, r0, r1
   2352c:	ldrb	r0, [r0]
   23530:	strb	r0, [fp, #-1]
   23534:	ldrb	r0, [fp, #-1]
   23538:	mov	sp, fp
   2353c:	pop	{fp, pc}
   23540:	push	{fp, lr}
   23544:	mov	fp, sp
   23548:	sub	sp, sp, #16
   2354c:	strb	r0, [fp, #-1]
   23550:	str	r1, [sp, #8]
   23554:	ldr	r0, [sp, #8]
   23558:	ldr	r0, [r0, #92]	; 0x5c
   2355c:	cmp	r0, #1
   23560:	ble	23574 <__assert_fail@plt+0x11e20>
   23564:	ldrb	r0, [fp, #-1]
   23568:	bl	11664 <btowc@plt>
   2356c:	str	r0, [sp, #4]
   23570:	b	2357c <__assert_fail@plt+0x11e28>
   23574:	ldrb	r0, [fp, #-1]
   23578:	str	r0, [sp, #4]
   2357c:	ldr	r0, [sp, #4]
   23580:	mov	sp, fp
   23584:	pop	{fp, pc}
   23588:	push	{fp, lr}
   2358c:	mov	fp, sp
   23590:	sub	sp, sp, #40	; 0x28
   23594:	str	r0, [fp, #-8]
   23598:	str	r1, [fp, #-12]
   2359c:	str	r2, [fp, #-16]
   235a0:	mvn	r0, #0
   235a4:	str	r0, [sp, #20]
   235a8:	ldr	r0, [fp, #-12]
   235ac:	ldr	r1, [fp, #-8]
   235b0:	ldr	r2, [fp, #-16]
   235b4:	bl	1decc <__assert_fail@plt+0xc778>
   235b8:	ldr	r0, [fp, #-12]
   235bc:	ldrb	r0, [r0]
   235c0:	strb	r0, [sp, #19]
   235c4:	ldr	r0, [fp, #-12]
   235c8:	ldr	r0, [r0, #4]
   235cc:	and	r0, r0, #255	; 0xff
   235d0:	cmp	r0, #2
   235d4:	bne	235e4 <__assert_fail@plt+0x11e90>
   235d8:	mvn	r0, #1
   235dc:	str	r0, [fp, #-4]
   235e0:	b	236dc <__assert_fail@plt+0x11f88>
   235e4:	ldr	r0, [fp, #-12]
   235e8:	ldr	r0, [r0, #4]
   235ec:	and	r0, r0, #255	; 0xff
   235f0:	cmp	r0, #24
   235f4:	beq	23604 <__assert_fail@plt+0x11eb0>
   235f8:	ldrb	r0, [sp, #19]
   235fc:	cmp	r0, #44	; 0x2c
   23600:	bne	23608 <__assert_fail@plt+0x11eb4>
   23604:	b	236d4 <__assert_fail@plt+0x11f80>
   23608:	ldr	r0, [fp, #-12]
   2360c:	ldr	r0, [r0, #4]
   23610:	and	r0, r0, #255	; 0xff
   23614:	cmp	r0, #1
   23618:	bne	23644 <__assert_fail@plt+0x11ef0>
   2361c:	ldrb	r0, [sp, #19]
   23620:	cmp	r0, #48	; 0x30
   23624:	blt	23644 <__assert_fail@plt+0x11ef0>
   23628:	ldrb	r0, [sp, #19]
   2362c:	movw	r1, #57	; 0x39
   23630:	cmp	r1, r0
   23634:	blt	23644 <__assert_fail@plt+0x11ef0>
   23638:	ldr	r0, [sp, #20]
   2363c:	cmn	r0, #2
   23640:	bne	23650 <__assert_fail@plt+0x11efc>
   23644:	mvn	r0, #1
   23648:	str	r0, [sp, #12]
   2364c:	b	236c8 <__assert_fail@plt+0x11f74>
   23650:	ldr	r0, [sp, #20]
   23654:	cmn	r0, #1
   23658:	bne	2366c <__assert_fail@plt+0x11f18>
   2365c:	ldrb	r0, [sp, #19]
   23660:	sub	r0, r0, #48	; 0x30
   23664:	str	r0, [sp, #8]
   23668:	b	236c0 <__assert_fail@plt+0x11f6c>
   2366c:	ldr	r0, [sp, #20]
   23670:	movw	r1, #10
   23674:	mul	r0, r0, r1
   23678:	ldrb	r1, [sp, #19]
   2367c:	add	r0, r0, r1
   23680:	sub	r0, r0, #48	; 0x30
   23684:	movw	r1, #32768	; 0x8000
   23688:	cmp	r1, r0
   2368c:	bge	2369c <__assert_fail@plt+0x11f48>
   23690:	movw	r0, #32768	; 0x8000
   23694:	str	r0, [sp, #4]
   23698:	b	236b8 <__assert_fail@plt+0x11f64>
   2369c:	ldr	r0, [sp, #20]
   236a0:	movw	r1, #10
   236a4:	mul	r0, r0, r1
   236a8:	ldrb	r1, [sp, #19]
   236ac:	add	r0, r0, r1
   236b0:	sub	r0, r0, #48	; 0x30
   236b4:	str	r0, [sp, #4]
   236b8:	ldr	r0, [sp, #4]
   236bc:	str	r0, [sp, #8]
   236c0:	ldr	r0, [sp, #8]
   236c4:	str	r0, [sp, #12]
   236c8:	ldr	r0, [sp, #12]
   236cc:	str	r0, [sp, #20]
   236d0:	b	235a8 <__assert_fail@plt+0x11e54>
   236d4:	ldr	r0, [sp, #20]
   236d8:	str	r0, [fp, #-4]
   236dc:	ldr	r0, [fp, #-4]
   236e0:	mov	sp, fp
   236e4:	pop	{fp, pc}
   236e8:	push	{fp, lr}
   236ec:	mov	fp, sp
   236f0:	sub	sp, sp, #40	; 0x28
   236f4:	str	r0, [fp, #-8]
   236f8:	str	r1, [fp, #-12]
   236fc:	add	r0, sp, #20
   23700:	str	r0, [sp, #16]
   23704:	ldr	r0, [fp, #-8]
   23708:	ldr	r0, [r0]
   2370c:	str	r0, [sp, #12]
   23710:	ldr	r0, [fp, #-8]
   23714:	str	r0, [fp, #-16]
   23718:	ldr	r0, [fp, #-12]
   2371c:	ldr	r1, [fp, #-16]
   23720:	add	r3, r1, #20
   23724:	movw	r1, #0
   23728:	str	r1, [sp, #4]
   2372c:	ldr	r2, [sp, #4]
   23730:	bl	201c4 <__assert_fail@plt+0xea70>
   23734:	ldr	r1, [sp, #16]
   23738:	str	r0, [r1]
   2373c:	ldr	r0, [sp, #16]
   23740:	ldr	r0, [r0]
   23744:	movw	r1, #0
   23748:	cmp	r0, r1
   2374c:	bne	2375c <__assert_fail@plt+0x12008>
   23750:	movw	r0, #0
   23754:	str	r0, [fp, #-4]
   23758:	b	2386c <__assert_fail@plt+0x12118>
   2375c:	ldr	r0, [sp, #12]
   23760:	ldr	r1, [sp, #16]
   23764:	ldr	r1, [r1]
   23768:	str	r0, [r1]
   2376c:	ldr	r0, [sp, #16]
   23770:	ldr	r0, [r0]
   23774:	ldr	r1, [r0, #24]
   23778:	mvn	r2, #262144	; 0x40000
   2377c:	and	r1, r1, r2
   23780:	orr	r1, r1, #262144	; 0x40000
   23784:	str	r1, [r0, #24]
   23788:	ldr	r0, [sp, #16]
   2378c:	ldr	r0, [r0]
   23790:	str	r0, [sp, #12]
   23794:	ldr	r0, [fp, #-16]
   23798:	ldr	r0, [r0, #4]
   2379c:	movw	r1, #0
   237a0:	cmp	r0, r1
   237a4:	beq	237c4 <__assert_fail@plt+0x12070>
   237a8:	ldr	r0, [fp, #-16]
   237ac:	ldr	r0, [r0, #4]
   237b0:	str	r0, [fp, #-16]
   237b4:	ldr	r0, [sp, #12]
   237b8:	add	r0, r0, #4
   237bc:	str	r0, [sp, #16]
   237c0:	b	23868 <__assert_fail@plt+0x12114>
   237c4:	movw	r0, #0
   237c8:	str	r0, [sp, #8]
   237cc:	ldr	r0, [fp, #-16]
   237d0:	ldr	r0, [r0, #8]
   237d4:	ldr	r1, [sp, #8]
   237d8:	cmp	r0, r1
   237dc:	movw	r0, #1
   237e0:	str	r0, [sp]
   237e4:	beq	23804 <__assert_fail@plt+0x120b0>
   237e8:	ldr	r0, [fp, #-16]
   237ec:	ldr	r0, [r0, #8]
   237f0:	movw	r1, #0
   237f4:	cmp	r0, r1
   237f8:	movw	r0, #0
   237fc:	moveq	r0, #1
   23800:	str	r0, [sp]
   23804:	ldr	r0, [sp]
   23808:	tst	r0, #1
   2380c:	beq	23850 <__assert_fail@plt+0x120fc>
   23810:	ldr	r0, [fp, #-16]
   23814:	str	r0, [sp, #8]
   23818:	ldr	r0, [fp, #-16]
   2381c:	ldr	r0, [r0]
   23820:	str	r0, [fp, #-16]
   23824:	ldr	r0, [sp, #12]
   23828:	ldr	r0, [r0]
   2382c:	str	r0, [sp, #12]
   23830:	ldr	r0, [fp, #-16]
   23834:	movw	r1, #0
   23838:	cmp	r0, r1
   2383c:	bne	2384c <__assert_fail@plt+0x120f8>
   23840:	ldr	r0, [sp, #20]
   23844:	str	r0, [fp, #-4]
   23848:	b	2386c <__assert_fail@plt+0x12118>
   2384c:	b	237cc <__assert_fail@plt+0x12078>
   23850:	ldr	r0, [fp, #-16]
   23854:	ldr	r0, [r0, #8]
   23858:	str	r0, [fp, #-16]
   2385c:	ldr	r0, [sp, #12]
   23860:	add	r0, r0, #8
   23864:	str	r0, [sp, #16]
   23868:	b	23718 <__assert_fail@plt+0x11fc4>
   2386c:	ldr	r0, [fp, #-4]
   23870:	mov	sp, fp
   23874:	pop	{fp, pc}
   23878:	sub	sp, sp, #12
   2387c:	str	r0, [sp, #8]
   23880:	str	r1, [sp, #4]
   23884:	ldr	r0, [sp, #8]
   23888:	str	r0, [sp]
   2388c:	ldr	r0, [sp, #4]
   23890:	ldr	r0, [r0, #24]
   23894:	and	r0, r0, #255	; 0xff
   23898:	cmp	r0, #17
   2389c:	bne	238cc <__assert_fail@plt+0x12178>
   238a0:	ldr	r0, [sp, #4]
   238a4:	ldr	r0, [r0, #20]
   238a8:	ldr	r1, [sp]
   238ac:	cmp	r0, r1
   238b0:	bne	238cc <__assert_fail@plt+0x12178>
   238b4:	ldr	r0, [sp, #4]
   238b8:	ldr	r1, [r0, #24]
   238bc:	mvn	r2, #524288	; 0x80000
   238c0:	and	r1, r1, r2
   238c4:	orr	r1, r1, #524288	; 0x80000
   238c8:	str	r1, [r0, #24]
   238cc:	movw	r0, #0
   238d0:	add	sp, sp, #12
   238d4:	bx	lr
   238d8:	push	{fp, lr}
   238dc:	mov	fp, sp
   238e0:	sub	sp, sp, #40	; 0x28
   238e4:	str	r0, [fp, #-8]
   238e8:	str	r1, [fp, #-12]
   238ec:	str	r2, [fp, #-16]
   238f0:	ldr	r0, [fp, #-8]
   238f4:	str	r0, [sp, #20]
   238f8:	ldr	r0, [fp, #-12]
   238fc:	ldr	r1, [fp, #-16]
   23900:	ldr	r2, [sp, #20]
   23904:	str	r0, [sp, #8]
   23908:	mov	r0, r1
   2390c:	mov	r1, r2
   23910:	ldr	r2, [sp, #8]
   23914:	blx	r2
   23918:	str	r0, [sp, #16]
   2391c:	ldr	r0, [sp, #16]
   23920:	cmp	r0, #0
   23924:	beq	23934 <__assert_fail@plt+0x121e0>
   23928:	ldr	r0, [sp, #16]
   2392c:	str	r0, [fp, #-4]
   23930:	b	239e8 <__assert_fail@plt+0x12294>
   23934:	ldr	r0, [sp, #20]
   23938:	ldr	r0, [r0, #4]
   2393c:	movw	r1, #0
   23940:	cmp	r0, r1
   23944:	beq	23958 <__assert_fail@plt+0x12204>
   23948:	ldr	r0, [sp, #20]
   2394c:	ldr	r0, [r0, #4]
   23950:	str	r0, [sp, #20]
   23954:	b	239e4 <__assert_fail@plt+0x12290>
   23958:	movw	r0, #0
   2395c:	str	r0, [sp, #12]
   23960:	ldr	r0, [sp, #20]
   23964:	ldr	r0, [r0, #8]
   23968:	ldr	r1, [sp, #12]
   2396c:	cmp	r0, r1
   23970:	movw	r0, #1
   23974:	str	r0, [sp, #4]
   23978:	beq	23998 <__assert_fail@plt+0x12244>
   2397c:	ldr	r0, [sp, #20]
   23980:	ldr	r0, [r0, #8]
   23984:	movw	r1, #0
   23988:	cmp	r0, r1
   2398c:	movw	r0, #0
   23990:	moveq	r0, #1
   23994:	str	r0, [sp, #4]
   23998:	ldr	r0, [sp, #4]
   2399c:	tst	r0, #1
   239a0:	beq	239d8 <__assert_fail@plt+0x12284>
   239a4:	ldr	r0, [sp, #20]
   239a8:	str	r0, [sp, #12]
   239ac:	ldr	r0, [sp, #20]
   239b0:	ldr	r0, [r0]
   239b4:	str	r0, [sp, #20]
   239b8:	ldr	r0, [sp, #20]
   239bc:	movw	r1, #0
   239c0:	cmp	r0, r1
   239c4:	bne	239d4 <__assert_fail@plt+0x12280>
   239c8:	movw	r0, #0
   239cc:	str	r0, [fp, #-4]
   239d0:	b	239e8 <__assert_fail@plt+0x12294>
   239d4:	b	23960 <__assert_fail@plt+0x1220c>
   239d8:	ldr	r0, [sp, #20]
   239dc:	ldr	r0, [r0, #8]
   239e0:	str	r0, [sp, #20]
   239e4:	b	238f8 <__assert_fail@plt+0x121a4>
   239e8:	ldr	r0, [fp, #-4]
   239ec:	mov	sp, fp
   239f0:	pop	{fp, pc}
   239f4:	sub	sp, sp, #20
   239f8:	str	r0, [sp, #16]
   239fc:	str	r1, [sp, #12]
   23a00:	ldr	r0, [sp, #16]
   23a04:	str	r0, [sp, #8]
   23a08:	ldr	r0, [sp, #12]
   23a0c:	ldr	r0, [r0, #24]
   23a10:	and	r0, r0, #255	; 0xff
   23a14:	cmp	r0, #4
   23a18:	bne	23a7c <__assert_fail@plt+0x12328>
   23a1c:	ldr	r0, [sp, #8]
   23a20:	ldr	r0, [r0, #132]	; 0x84
   23a24:	movw	r1, #0
   23a28:	cmp	r0, r1
   23a2c:	beq	23a7c <__assert_fail@plt+0x12328>
   23a30:	ldr	r0, [sp, #12]
   23a34:	ldr	r0, [r0, #20]
   23a38:	str	r0, [sp, #4]
   23a3c:	ldr	r0, [sp, #8]
   23a40:	ldr	r0, [r0, #132]	; 0x84
   23a44:	ldr	r1, [sp, #4]
   23a48:	add	r0, r0, r1, lsl #2
   23a4c:	ldr	r0, [r0]
   23a50:	ldr	r1, [sp, #12]
   23a54:	str	r0, [r1, #20]
   23a58:	ldr	r0, [sp, #12]
   23a5c:	ldr	r0, [r0, #20]
   23a60:	movw	r1, #1
   23a64:	lsl	r0, r1, r0
   23a68:	ldr	r1, [sp, #8]
   23a6c:	ldr	r2, [r1, #80]	; 0x50
   23a70:	orr	r0, r2, r0
   23a74:	str	r0, [r1, #80]	; 0x50
   23a78:	b	23b5c <__assert_fail@plt+0x12408>
   23a7c:	ldr	r0, [sp, #12]
   23a80:	ldr	r0, [r0, #24]
   23a84:	and	r0, r0, #255	; 0xff
   23a88:	cmp	r0, #17
   23a8c:	bne	23b58 <__assert_fail@plt+0x12404>
   23a90:	ldr	r0, [sp, #12]
   23a94:	ldr	r0, [r0, #4]
   23a98:	movw	r1, #0
   23a9c:	cmp	r0, r1
   23aa0:	beq	23b58 <__assert_fail@plt+0x12404>
   23aa4:	ldr	r0, [sp, #12]
   23aa8:	ldr	r0, [r0, #4]
   23aac:	ldr	r0, [r0, #24]
   23ab0:	and	r0, r0, #255	; 0xff
   23ab4:	cmp	r0, #17
   23ab8:	bne	23b58 <__assert_fail@plt+0x12404>
   23abc:	ldr	r0, [sp, #12]
   23ac0:	ldr	r0, [r0, #4]
   23ac4:	ldr	r0, [r0, #20]
   23ac8:	str	r0, [sp]
   23acc:	ldr	r0, [sp, #12]
   23ad0:	ldr	r0, [r0, #4]
   23ad4:	ldr	r0, [r0, #4]
   23ad8:	ldr	r1, [sp, #12]
   23adc:	str	r0, [r1, #4]
   23ae0:	ldr	r0, [sp, #12]
   23ae4:	ldr	r0, [r0, #4]
   23ae8:	movw	r1, #0
   23aec:	cmp	r0, r1
   23af0:	beq	23b04 <__assert_fail@plt+0x123b0>
   23af4:	ldr	r0, [sp, #12]
   23af8:	ldr	r1, [sp, #12]
   23afc:	ldr	r1, [r1, #4]
   23b00:	str	r0, [r1]
   23b04:	ldr	r0, [sp, #8]
   23b08:	ldr	r0, [r0, #132]	; 0x84
   23b0c:	ldr	r1, [sp, #12]
   23b10:	ldr	r1, [r1, #20]
   23b14:	ldr	r1, [r0, r1, lsl #2]
   23b18:	ldr	r2, [sp]
   23b1c:	add	r0, r0, r2, lsl #2
   23b20:	str	r1, [r0]
   23b24:	ldr	r0, [sp]
   23b28:	cmp	r0, #32
   23b2c:	bge	23b54 <__assert_fail@plt+0x12400>
   23b30:	ldr	r0, [sp]
   23b34:	movw	r1, #1
   23b38:	lsl	r0, r1, r0
   23b3c:	mvn	r1, #0
   23b40:	eor	r0, r0, r1
   23b44:	ldr	r1, [sp, #8]
   23b48:	ldr	r2, [r1, #80]	; 0x50
   23b4c:	and	r0, r2, r0
   23b50:	str	r0, [r1, #80]	; 0x50
   23b54:	b	23b58 <__assert_fail@plt+0x12404>
   23b58:	b	23b5c <__assert_fail@plt+0x12408>
   23b5c:	movw	r0, #0
   23b60:	add	sp, sp, #20
   23b64:	bx	lr
   23b68:	push	{fp, lr}
   23b6c:	mov	fp, sp
   23b70:	sub	sp, sp, #16
   23b74:	str	r0, [fp, #-4]
   23b78:	str	r1, [sp, #8]
   23b7c:	ldr	r0, [fp, #-4]
   23b80:	str	r0, [sp, #4]
   23b84:	movw	r0, #0
   23b88:	str	r0, [sp]
   23b8c:	ldr	r1, [sp, #8]
   23b90:	ldr	r1, [r1, #4]
   23b94:	cmp	r1, r0
   23b98:	beq	23bf8 <__assert_fail@plt+0x124a4>
   23b9c:	ldr	r0, [sp, #8]
   23ba0:	ldr	r0, [r0, #4]
   23ba4:	ldr	r0, [r0, #24]
   23ba8:	and	r0, r0, #255	; 0xff
   23bac:	cmp	r0, #17
   23bb0:	bne	23bf8 <__assert_fail@plt+0x124a4>
   23bb4:	ldr	r1, [sp, #4]
   23bb8:	ldr	r0, [sp, #8]
   23bbc:	ldr	r2, [r0, #4]
   23bc0:	mov	r0, sp
   23bc4:	bl	2436c <__assert_fail@plt+0x12c18>
   23bc8:	ldr	r1, [sp, #8]
   23bcc:	str	r0, [r1, #4]
   23bd0:	ldr	r0, [sp, #8]
   23bd4:	ldr	r0, [r0, #4]
   23bd8:	movw	r1, #0
   23bdc:	cmp	r0, r1
   23be0:	beq	23bf4 <__assert_fail@plt+0x124a0>
   23be4:	ldr	r0, [sp, #8]
   23be8:	ldr	r1, [sp, #8]
   23bec:	ldr	r1, [r1, #4]
   23bf0:	str	r0, [r1]
   23bf4:	b	23bf8 <__assert_fail@plt+0x124a4>
   23bf8:	ldr	r0, [sp, #8]
   23bfc:	ldr	r0, [r0, #8]
   23c00:	movw	r1, #0
   23c04:	cmp	r0, r1
   23c08:	beq	23c68 <__assert_fail@plt+0x12514>
   23c0c:	ldr	r0, [sp, #8]
   23c10:	ldr	r0, [r0, #8]
   23c14:	ldr	r0, [r0, #24]
   23c18:	and	r0, r0, #255	; 0xff
   23c1c:	cmp	r0, #17
   23c20:	bne	23c68 <__assert_fail@plt+0x12514>
   23c24:	ldr	r1, [sp, #4]
   23c28:	ldr	r0, [sp, #8]
   23c2c:	ldr	r2, [r0, #8]
   23c30:	mov	r0, sp
   23c34:	bl	2436c <__assert_fail@plt+0x12c18>
   23c38:	ldr	r1, [sp, #8]
   23c3c:	str	r0, [r1, #8]
   23c40:	ldr	r0, [sp, #8]
   23c44:	ldr	r0, [r0, #8]
   23c48:	movw	r1, #0
   23c4c:	cmp	r0, r1
   23c50:	beq	23c64 <__assert_fail@plt+0x12510>
   23c54:	ldr	r0, [sp, #8]
   23c58:	ldr	r1, [sp, #8]
   23c5c:	ldr	r1, [r1, #8]
   23c60:	str	r0, [r1]
   23c64:	b	23c68 <__assert_fail@plt+0x12514>
   23c68:	ldr	r0, [sp]
   23c6c:	mov	sp, fp
   23c70:	pop	{fp, pc}
   23c74:	push	{fp, lr}
   23c78:	mov	fp, sp
   23c7c:	sub	sp, sp, #24
   23c80:	str	r0, [fp, #-8]
   23c84:	str	r1, [sp, #12]
   23c88:	ldr	r0, [fp, #-8]
   23c8c:	str	r0, [sp, #8]
   23c90:	ldr	r0, [sp, #12]
   23c94:	ldr	r0, [r0, #24]
   23c98:	and	r0, r0, #255	; 0xff
   23c9c:	cmp	r0, #16
   23ca0:	bne	23cd0 <__assert_fail@plt+0x1257c>
   23ca4:	ldr	r0, [sp, #12]
   23ca8:	ldr	r0, [r0, #4]
   23cac:	ldr	r0, [r0, #12]
   23cb0:	ldr	r1, [sp, #12]
   23cb4:	str	r0, [r1, #12]
   23cb8:	ldr	r0, [sp, #12]
   23cbc:	ldr	r0, [r0, #4]
   23cc0:	ldr	r0, [r0, #28]
   23cc4:	ldr	r1, [sp, #12]
   23cc8:	str	r0, [r1, #28]
   23ccc:	b	23d6c <__assert_fail@plt+0x12618>
   23cd0:	ldr	r0, [sp, #12]
   23cd4:	str	r0, [r0, #12]
   23cd8:	ldr	r0, [sp, #8]
   23cdc:	ldr	r1, [sp, #12]
   23ce0:	ldr	r2, [r1, #20]
   23ce4:	ldr	r1, [r1, #24]
   23ce8:	str	r1, [sp, #4]
   23cec:	mov	r1, r2
   23cf0:	ldr	r2, [sp, #4]
   23cf4:	bl	24594 <__assert_fail@plt+0x12e40>
   23cf8:	ldr	r1, [sp, #12]
   23cfc:	str	r0, [r1, #28]
   23d00:	ldr	r0, [sp, #12]
   23d04:	ldr	r0, [r0, #28]
   23d08:	cmn	r0, #1
   23d0c:	bne	23d1c <__assert_fail@plt+0x125c8>
   23d10:	movw	r0, #12
   23d14:	str	r0, [fp, #-4]
   23d18:	b	23d74 <__assert_fail@plt+0x12620>
   23d1c:	ldr	r0, [sp, #12]
   23d20:	ldr	r0, [r0, #24]
   23d24:	and	r0, r0, #255	; 0xff
   23d28:	cmp	r0, #12
   23d2c:	bne	23d68 <__assert_fail@plt+0x12614>
   23d30:	ldr	r0, [pc, #72]	; 23d80 <__assert_fail@plt+0x1262c>
   23d34:	ldr	r1, [sp, #12]
   23d38:	ldr	r2, [r1, #20]
   23d3c:	ldr	r1, [r1, #28]
   23d40:	ldr	r3, [sp, #8]
   23d44:	ldr	r3, [r3]
   23d48:	add	r1, r3, r1, lsl #3
   23d4c:	ldr	r3, [r1, #4]
   23d50:	movw	ip, #1023	; 0x3ff
   23d54:	and	r2, r2, ip
   23d58:	lsl	r2, r2, #8
   23d5c:	and	r0, r3, r0
   23d60:	orr	r0, r0, r2
   23d64:	str	r0, [r1, #4]
   23d68:	b	23d6c <__assert_fail@plt+0x12618>
   23d6c:	movw	r0, #0
   23d70:	str	r0, [fp, #-4]
   23d74:	ldr	r0, [fp, #-4]
   23d78:	mov	sp, fp
   23d7c:	pop	{fp, pc}
   23d80:			; <UNDEFINED> instruction: 0xfffc00ff
   23d84:	sub	sp, sp, #12
   23d88:	str	r0, [sp, #8]
   23d8c:	str	r1, [sp, #4]
   23d90:	ldr	r0, [sp, #4]
   23d94:	ldrb	r0, [r0, #24]
   23d98:	mov	r1, r0
   23d9c:	cmp	r0, #11
   23da0:	str	r1, [sp]
   23da4:	beq	23dbc <__assert_fail@plt+0x12668>
   23da8:	b	23dac <__assert_fail@plt+0x12658>
   23dac:	ldr	r0, [sp]
   23db0:	cmp	r0, #16
   23db4:	beq	23dd0 <__assert_fail@plt+0x1267c>
   23db8:	b	23e00 <__assert_fail@plt+0x126ac>
   23dbc:	ldr	r0, [sp, #4]
   23dc0:	ldr	r1, [sp, #4]
   23dc4:	ldr	r1, [r1, #4]
   23dc8:	str	r0, [r1, #16]
   23dcc:	b	23e54 <__assert_fail@plt+0x12700>
   23dd0:	ldr	r0, [sp, #4]
   23dd4:	ldr	r0, [r0, #8]
   23dd8:	ldr	r0, [r0, #12]
   23ddc:	ldr	r1, [sp, #4]
   23de0:	ldr	r1, [r1, #4]
   23de4:	str	r0, [r1, #16]
   23de8:	ldr	r0, [sp, #4]
   23dec:	ldr	r0, [r0, #16]
   23df0:	ldr	r1, [sp, #4]
   23df4:	ldr	r1, [r1, #8]
   23df8:	str	r0, [r1, #16]
   23dfc:	b	23e54 <__assert_fail@plt+0x12700>
   23e00:	ldr	r0, [sp, #4]
   23e04:	ldr	r0, [r0, #4]
   23e08:	movw	r1, #0
   23e0c:	cmp	r0, r1
   23e10:	beq	23e28 <__assert_fail@plt+0x126d4>
   23e14:	ldr	r0, [sp, #4]
   23e18:	ldr	r0, [r0, #16]
   23e1c:	ldr	r1, [sp, #4]
   23e20:	ldr	r1, [r1, #4]
   23e24:	str	r0, [r1, #16]
   23e28:	ldr	r0, [sp, #4]
   23e2c:	ldr	r0, [r0, #8]
   23e30:	movw	r1, #0
   23e34:	cmp	r0, r1
   23e38:	beq	23e50 <__assert_fail@plt+0x126fc>
   23e3c:	ldr	r0, [sp, #4]
   23e40:	ldr	r0, [r0, #16]
   23e44:	ldr	r1, [sp, #4]
   23e48:	ldr	r1, [r1, #8]
   23e4c:	str	r0, [r1, #16]
   23e50:	b	23e54 <__assert_fail@plt+0x12700>
   23e54:	movw	r0, #0
   23e58:	add	sp, sp, #12
   23e5c:	bx	lr
   23e60:	push	{fp, lr}
   23e64:	mov	fp, sp
   23e68:	sub	sp, sp, #32
   23e6c:	str	r0, [fp, #-4]
   23e70:	str	r1, [fp, #-8]
   23e74:	ldr	r0, [fp, #-4]
   23e78:	str	r0, [fp, #-12]
   23e7c:	ldr	r0, [fp, #-8]
   23e80:	ldr	r0, [r0, #28]
   23e84:	str	r0, [sp, #16]
   23e88:	mov	r0, #0
   23e8c:	str	r0, [sp, #12]
   23e90:	ldr	r0, [fp, #-8]
   23e94:	ldrb	r0, [r0, #24]
   23e98:	sub	r0, r0, #2
   23e9c:	cmp	r0, #14
   23ea0:	str	r0, [sp]
   23ea4:	bhi	24080 <__assert_fail@plt+0x1292c>
   23ea8:	add	r0, pc, #8
   23eac:	ldr	r1, [sp]
   23eb0:	ldr	r0, [r0, r1, lsl #2]
   23eb4:	mov	pc, r0
   23eb8:	strdeq	r3, [r2], -r8
   23ebc:	andeq	r4, r2, r0, lsl #1
   23ec0:	andeq	r4, r2, r0, lsr #32
   23ec4:	andeq	r4, r2, r0, lsl #1
   23ec8:	andeq	r4, r2, r0, lsl #1
   23ecc:	andeq	r4, r2, r0, lsl #1
   23ed0:	strdeq	r3, [r2], -r0
   23ed4:	strdeq	r3, [r2], -r0
   23ed8:	andeq	r3, r2, r4, lsl pc
   23edc:	andeq	r3, r2, r4, lsl pc
   23ee0:	strdeq	r3, [r2], -r0
   23ee4:	andeq	r4, r2, r0, lsl #1
   23ee8:	andeq	r4, r2, r0, lsl #1
   23eec:	andeq	r4, r2, r0, lsl #1
   23ef0:	strdeq	r3, [r2], -r4
   23ef4:	b	240bc <__assert_fail@plt+0x12968>
   23ef8:	ldr	r0, [fp, #-8]
   23efc:	ldr	r0, [r0, #16]
   23f00:	movw	r1, #0
   23f04:	cmp	r0, r1
   23f08:	bne	23f10 <__assert_fail@plt+0x127bc>
   23f0c:	b	23f10 <__assert_fail@plt+0x127bc>
   23f10:	b	240bc <__assert_fail@plt+0x12968>
   23f14:	ldr	r0, [fp, #-12]
   23f18:	ldrb	r1, [r0, #88]	; 0x58
   23f1c:	bic	r1, r1, #1
   23f20:	movw	r2, #1
   23f24:	orr	r1, r1, r2
   23f28:	strb	r1, [r0, #88]	; 0x58
   23f2c:	ldr	r0, [fp, #-8]
   23f30:	ldr	r0, [r0, #4]
   23f34:	movw	r1, #0
   23f38:	cmp	r0, r1
   23f3c:	beq	23f58 <__assert_fail@plt+0x12804>
   23f40:	ldr	r0, [fp, #-8]
   23f44:	ldr	r0, [r0, #4]
   23f48:	ldr	r0, [r0, #12]
   23f4c:	ldr	r0, [r0, #28]
   23f50:	str	r0, [sp, #8]
   23f54:	b	23f68 <__assert_fail@plt+0x12814>
   23f58:	ldr	r0, [fp, #-8]
   23f5c:	ldr	r0, [r0, #16]
   23f60:	ldr	r0, [r0, #28]
   23f64:	str	r0, [sp, #8]
   23f68:	ldr	r0, [fp, #-8]
   23f6c:	ldr	r0, [r0, #8]
   23f70:	movw	r1, #0
   23f74:	cmp	r0, r1
   23f78:	beq	23f94 <__assert_fail@plt+0x12840>
   23f7c:	ldr	r0, [fp, #-8]
   23f80:	ldr	r0, [r0, #8]
   23f84:	ldr	r0, [r0, #12]
   23f88:	ldr	r0, [r0, #28]
   23f8c:	str	r0, [sp, #4]
   23f90:	b	23fa4 <__assert_fail@plt+0x12850>
   23f94:	ldr	r0, [fp, #-8]
   23f98:	ldr	r0, [r0, #16]
   23f9c:	ldr	r0, [r0, #28]
   23fa0:	str	r0, [sp, #4]
   23fa4:	ldr	r0, [sp, #8]
   23fa8:	cmn	r0, #1
   23fac:	ble	23fb4 <__assert_fail@plt+0x12860>
   23fb0:	b	23fb4 <__assert_fail@plt+0x12860>
   23fb4:	ldr	r0, [sp, #4]
   23fb8:	cmn	r0, #1
   23fbc:	ble	23fc4 <__assert_fail@plt+0x12870>
   23fc0:	b	23fc4 <__assert_fail@plt+0x12870>
   23fc4:	ldr	r0, [fp, #-12]
   23fc8:	ldr	r0, [r0, #20]
   23fcc:	ldr	r1, [sp, #16]
   23fd0:	movw	r2, #12
   23fd4:	mul	r1, r1, r2
   23fd8:	add	r0, r0, r1
   23fdc:	ldr	r1, [sp, #8]
   23fe0:	ldr	r2, [sp, #4]
   23fe4:	bl	248b0 <__assert_fail@plt+0x1315c>
   23fe8:	str	r0, [sp, #12]
   23fec:	b	240bc <__assert_fail@plt+0x12968>
   23ff0:	ldr	r0, [fp, #-12]
   23ff4:	ldr	r0, [r0, #20]
   23ff8:	ldr	r1, [sp, #16]
   23ffc:	movw	r2, #12
   24000:	mul	r1, r1, r2
   24004:	add	r0, r0, r1
   24008:	ldr	r1, [fp, #-8]
   2400c:	ldr	r1, [r1, #16]
   24010:	ldr	r1, [r1, #28]
   24014:	bl	249ac <__assert_fail@plt+0x13258>
   24018:	str	r0, [sp, #12]
   2401c:	b	240bc <__assert_fail@plt+0x12968>
   24020:	ldr	r0, [fp, #-8]
   24024:	ldr	r0, [r0, #16]
   24028:	ldr	r0, [r0, #28]
   2402c:	ldr	r1, [fp, #-12]
   24030:	ldr	r1, [r1, #12]
   24034:	ldr	r2, [sp, #16]
   24038:	add	r1, r1, r2, lsl #2
   2403c:	str	r0, [r1]
   24040:	ldr	r0, [fp, #-8]
   24044:	ldr	r0, [r0, #24]
   24048:	and	r0, r0, #255	; 0xff
   2404c:	cmp	r0, #4
   24050:	bne	2407c <__assert_fail@plt+0x12928>
   24054:	ldr	r0, [fp, #-12]
   24058:	ldr	r1, [r0, #12]
   2405c:	ldr	r0, [r0, #20]
   24060:	ldr	r2, [sp, #16]
   24064:	add	r3, r2, r2, lsl #1
   24068:	add	r0, r0, r3, lsl #2
   2406c:	add	r1, r1, r2, lsl #2
   24070:	ldr	r1, [r1]
   24074:	bl	249ac <__assert_fail@plt+0x13258>
   24078:	str	r0, [sp, #12]
   2407c:	b	240bc <__assert_fail@plt+0x12968>
   24080:	ldr	r0, [fp, #-8]
   24084:	ldr	r0, [r0, #24]
   24088:	and	r0, r0, #255	; 0xff
   2408c:	and	r0, r0, #8
   24090:	cmp	r0, #0
   24094:	bne	2409c <__assert_fail@plt+0x12948>
   24098:	b	2409c <__assert_fail@plt+0x12948>
   2409c:	ldr	r0, [fp, #-8]
   240a0:	ldr	r0, [r0, #16]
   240a4:	ldr	r0, [r0, #28]
   240a8:	ldr	r1, [fp, #-12]
   240ac:	ldr	r1, [r1, #12]
   240b0:	ldr	r2, [sp, #16]
   240b4:	add	r1, r1, r2, lsl #2
   240b8:	str	r0, [r1]
   240bc:	ldr	r0, [sp, #12]
   240c0:	mov	sp, fp
   240c4:	pop	{fp, pc}
   240c8:	push	{fp, lr}
   240cc:	mov	fp, sp
   240d0:	sub	sp, sp, #32
   240d4:	str	r0, [fp, #-8]
   240d8:	ldr	r0, [fp, #-8]
   240dc:	ldr	r0, [r0, #8]
   240e0:	cmp	r0, #0
   240e4:	bls	240ec <__assert_fail@plt+0x12998>
   240e8:	b	240ec <__assert_fail@plt+0x12998>
   240ec:	movw	r0, #0
   240f0:	strb	r0, [fp, #-13]
   240f4:	movw	r0, #0
   240f8:	str	r0, [fp, #-12]
   240fc:	ldr	r0, [fp, #-12]
   24100:	ldr	r1, [fp, #-8]
   24104:	ldr	r1, [r1, #8]
   24108:	cmp	r0, r1
   2410c:	bne	24130 <__assert_fail@plt+0x129dc>
   24110:	ldrb	r0, [fp, #-13]
   24114:	tst	r0, #1
   24118:	bne	24120 <__assert_fail@plt+0x129cc>
   2411c:	b	241fc <__assert_fail@plt+0x12aa8>
   24120:	movw	r0, #0
   24124:	strb	r0, [fp, #-13]
   24128:	movw	r0, #0
   2412c:	str	r0, [fp, #-12]
   24130:	ldr	r0, [fp, #-8]
   24134:	ldr	r0, [r0, #24]
   24138:	ldr	r1, [fp, #-12]
   2413c:	movw	r2, #12
   24140:	mul	r1, r1, r2
   24144:	add	r0, r0, r1
   24148:	ldr	r0, [r0, #4]
   2414c:	cmn	r0, #1
   24150:	beq	24158 <__assert_fail@plt+0x12a04>
   24154:	b	24158 <__assert_fail@plt+0x12a04>
   24158:	ldr	r0, [fp, #-8]
   2415c:	ldr	r0, [r0, #24]
   24160:	ldr	r1, [fp, #-12]
   24164:	movw	r2, #12
   24168:	mul	r1, r1, r2
   2416c:	add	r0, r0, r1
   24170:	ldr	r0, [r0, #4]
   24174:	cmp	r0, #0
   24178:	beq	24180 <__assert_fail@plt+0x12a2c>
   2417c:	b	241ec <__assert_fail@plt+0x12a98>
   24180:	ldr	r1, [fp, #-8]
   24184:	ldr	r2, [fp, #-12]
   24188:	mov	r0, sp
   2418c:	movw	r3, #1
   24190:	and	r3, r3, #1
   24194:	bl	24a3c <__assert_fail@plt+0x132e8>
   24198:	str	r0, [sp, #12]
   2419c:	ldr	r0, [sp, #12]
   241a0:	cmp	r0, #0
   241a4:	beq	241b4 <__assert_fail@plt+0x12a60>
   241a8:	ldr	r0, [sp, #12]
   241ac:	str	r0, [fp, #-4]
   241b0:	b	24204 <__assert_fail@plt+0x12ab0>
   241b4:	ldr	r0, [fp, #-8]
   241b8:	ldr	r0, [r0, #24]
   241bc:	ldr	r1, [fp, #-12]
   241c0:	movw	r2, #12
   241c4:	mul	r1, r1, r2
   241c8:	add	r0, r0, r1
   241cc:	ldr	r0, [r0, #4]
   241d0:	cmp	r0, #0
   241d4:	bne	241e8 <__assert_fail@plt+0x12a94>
   241d8:	movw	r0, #1
   241dc:	strb	r0, [fp, #-13]
   241e0:	ldr	r0, [sp, #8]
   241e4:	bl	15f68 <__assert_fail@plt+0x4814>
   241e8:	b	241ec <__assert_fail@plt+0x12a98>
   241ec:	ldr	r0, [fp, #-12]
   241f0:	add	r0, r0, #1
   241f4:	str	r0, [fp, #-12]
   241f8:	b	240fc <__assert_fail@plt+0x129a8>
   241fc:	movw	r0, #0
   24200:	str	r0, [fp, #-4]
   24204:	ldr	r0, [fp, #-4]
   24208:	mov	sp, fp
   2420c:	pop	{fp, pc}
   24210:	push	{fp, lr}
   24214:	mov	fp, sp
   24218:	sub	sp, sp, #24
   2421c:	str	r0, [fp, #-8]
   24220:	movw	r0, #0
   24224:	str	r0, [sp, #8]
   24228:	ldr	r0, [sp, #8]
   2422c:	ldr	r1, [fp, #-8]
   24230:	ldr	r1, [r1, #8]
   24234:	cmp	r0, r1
   24238:	bcs	24270 <__assert_fail@plt+0x12b1c>
   2423c:	ldr	r0, [fp, #-8]
   24240:	ldr	r0, [r0, #28]
   24244:	ldr	r1, [sp, #8]
   24248:	movw	r2, #12
   2424c:	mul	r1, r1, r2
   24250:	add	r0, r0, r1
   24254:	movw	r1, #0
   24258:	and	r1, r1, #255	; 0xff
   2425c:	bl	11658 <memset@plt>
   24260:	ldr	r0, [sp, #8]
   24264:	add	r0, r0, #1
   24268:	str	r0, [sp, #8]
   2426c:	b	24228 <__assert_fail@plt+0x12ad4>
   24270:	movw	r0, #0
   24274:	str	r0, [sp, #12]
   24278:	ldr	r0, [sp, #12]
   2427c:	ldr	r1, [fp, #-8]
   24280:	ldr	r1, [r1, #8]
   24284:	cmp	r0, r1
   24288:	bcs	24358 <__assert_fail@plt+0x12c04>
   2428c:	ldr	r0, [fp, #-8]
   24290:	ldr	r0, [r0, #24]
   24294:	ldr	r1, [sp, #12]
   24298:	movw	r2, #12
   2429c:	mul	r1, r1, r2
   242a0:	add	r0, r0, r1
   242a4:	ldr	r0, [r0, #8]
   242a8:	str	r0, [sp]
   242ac:	movw	r0, #0
   242b0:	str	r0, [sp, #8]
   242b4:	ldr	r0, [sp, #8]
   242b8:	ldr	r1, [fp, #-8]
   242bc:	ldr	r1, [r1, #24]
   242c0:	ldr	r2, [sp, #12]
   242c4:	movw	r3, #12
   242c8:	mul	r2, r2, r3
   242cc:	add	r1, r1, r2
   242d0:	ldr	r1, [r1, #4]
   242d4:	cmp	r0, r1
   242d8:	bge	24344 <__assert_fail@plt+0x12bf0>
   242dc:	ldr	r0, [fp, #-8]
   242e0:	ldr	r0, [r0, #28]
   242e4:	ldr	r1, [sp]
   242e8:	ldr	r2, [sp, #8]
   242ec:	add	r1, r1, r2, lsl #2
   242f0:	ldr	r1, [r1]
   242f4:	movw	r2, #12
   242f8:	mul	r1, r1, r2
   242fc:	add	r0, r0, r1
   24300:	ldr	r1, [sp, #12]
   24304:	bl	25ba0 <__assert_fail@plt+0x1444c>
   24308:	and	r0, r0, #1
   2430c:	strb	r0, [sp, #7]
   24310:	ldrb	r0, [sp, #7]
   24314:	mvn	r1, #0
   24318:	eor	r0, r0, r1
   2431c:	tst	r0, #1
   24320:	beq	24330 <__assert_fail@plt+0x12bdc>
   24324:	movw	r0, #12
   24328:	str	r0, [fp, #-4]
   2432c:	b	24360 <__assert_fail@plt+0x12c0c>
   24330:	b	24334 <__assert_fail@plt+0x12be0>
   24334:	ldr	r0, [sp, #8]
   24338:	add	r0, r0, #1
   2433c:	str	r0, [sp, #8]
   24340:	b	242b4 <__assert_fail@plt+0x12b60>
   24344:	b	24348 <__assert_fail@plt+0x12bf4>
   24348:	ldr	r0, [sp, #12]
   2434c:	add	r0, r0, #1
   24350:	str	r0, [sp, #12]
   24354:	b	24278 <__assert_fail@plt+0x12b24>
   24358:	movw	r0, #0
   2435c:	str	r0, [fp, #-4]
   24360:	ldr	r0, [fp, #-4]
   24364:	mov	sp, fp
   24368:	pop	{fp, pc}
   2436c:	push	{fp, lr}
   24370:	mov	fp, sp
   24374:	sub	sp, sp, #56	; 0x38
   24378:	str	r0, [fp, #-8]
   2437c:	str	r1, [fp, #-12]
   24380:	str	r2, [fp, #-16]
   24384:	ldr	r0, [fp, #-12]
   24388:	ldr	r0, [r0]
   2438c:	str	r0, [fp, #-20]	; 0xffffffec
   24390:	ldr	r0, [fp, #-16]
   24394:	ldr	r0, [r0, #4]
   24398:	str	r0, [fp, #-24]	; 0xffffffe8
   2439c:	ldr	r0, [fp, #-12]
   243a0:	ldrb	r0, [r0, #28]
   243a4:	ubfx	r0, r0, #4, #1
   243a8:	and	r0, r0, #255	; 0xff
   243ac:	cmp	r0, #0
   243b0:	beq	2440c <__assert_fail@plt+0x12cb8>
   243b4:	ldr	r0, [fp, #-16]
   243b8:	ldr	r0, [r0, #4]
   243bc:	movw	r1, #0
   243c0:	cmp	r0, r1
   243c4:	beq	2440c <__assert_fail@plt+0x12cb8>
   243c8:	ldr	r0, [fp, #-16]
   243cc:	ldr	r0, [r0, #20]
   243d0:	cmp	r0, #32
   243d4:	bge	243fc <__assert_fail@plt+0x12ca8>
   243d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   243dc:	ldr	r0, [r0, #80]	; 0x50
   243e0:	ldr	r1, [fp, #-16]
   243e4:	ldr	r1, [r1, #20]
   243e8:	movw	r2, #1
   243ec:	lsl	r1, r2, r1
   243f0:	and	r0, r0, r1
   243f4:	cmp	r0, #0
   243f8:	bne	2440c <__assert_fail@plt+0x12cb8>
   243fc:	ldr	r0, [fp, #-16]
   24400:	ldr	r0, [r0, #4]
   24404:	str	r0, [fp, #-4]
   24408:	b	24588 <__assert_fail@plt+0x12e34>
   2440c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24410:	movw	r1, #0
   24414:	str	r1, [sp, #12]
   24418:	ldr	r2, [sp, #12]
   2441c:	movw	r3, #8
   24420:	bl	1e160 <__assert_fail@plt+0xca0c>
   24424:	str	r0, [sp, #28]
   24428:	ldr	r0, [fp, #-20]	; 0xffffffec
   2442c:	movw	r1, #0
   24430:	str	r1, [sp, #8]
   24434:	ldr	r2, [sp, #8]
   24438:	movw	r3, #9
   2443c:	bl	1e160 <__assert_fail@plt+0xca0c>
   24440:	str	r0, [sp, #24]
   24444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24448:	movw	r1, #0
   2444c:	cmp	r0, r1
   24450:	beq	24470 <__assert_fail@plt+0x12d1c>
   24454:	ldr	r0, [fp, #-20]	; 0xffffffec
   24458:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2445c:	ldr	r2, [sp, #24]
   24460:	movw	r3, #16
   24464:	bl	1e160 <__assert_fail@plt+0xca0c>
   24468:	str	r0, [sp, #4]
   2446c:	b	24478 <__assert_fail@plt+0x12d24>
   24470:	ldr	r0, [sp, #24]
   24474:	str	r0, [sp, #4]
   24478:	ldr	r0, [sp, #4]
   2447c:	str	r0, [sp, #20]
   24480:	ldr	r0, [fp, #-20]	; 0xffffffec
   24484:	ldr	r1, [sp, #28]
   24488:	ldr	r2, [sp, #20]
   2448c:	movw	r3, #16
   24490:	bl	1e160 <__assert_fail@plt+0xca0c>
   24494:	str	r0, [sp, #16]
   24498:	ldr	r0, [sp, #16]
   2449c:	movw	r1, #0
   244a0:	cmp	r0, r1
   244a4:	movw	r0, #1
   244a8:	str	r0, [sp]
   244ac:	beq	244f8 <__assert_fail@plt+0x12da4>
   244b0:	ldr	r0, [sp, #20]
   244b4:	movw	r1, #0
   244b8:	cmp	r0, r1
   244bc:	movw	r0, #1
   244c0:	str	r0, [sp]
   244c4:	beq	244f8 <__assert_fail@plt+0x12da4>
   244c8:	ldr	r0, [sp, #28]
   244cc:	movw	r1, #0
   244d0:	cmp	r0, r1
   244d4:	movw	r0, #1
   244d8:	str	r0, [sp]
   244dc:	beq	244f8 <__assert_fail@plt+0x12da4>
   244e0:	ldr	r0, [sp, #24]
   244e4:	movw	r1, #0
   244e8:	cmp	r0, r1
   244ec:	movw	r0, #0
   244f0:	moveq	r0, #1
   244f4:	str	r0, [sp]
   244f8:	ldr	r0, [sp]
   244fc:	tst	r0, #1
   24500:	beq	2451c <__assert_fail@plt+0x12dc8>
   24504:	ldr	r0, [fp, #-8]
   24508:	movw	r1, #12
   2450c:	str	r1, [r0]
   24510:	movw	r0, #0
   24514:	str	r0, [fp, #-4]
   24518:	b	24588 <__assert_fail@plt+0x12e34>
   2451c:	ldr	r0, [fp, #-16]
   24520:	ldr	r0, [r0, #20]
   24524:	ldr	r1, [sp, #24]
   24528:	str	r0, [r1, #20]
   2452c:	ldr	r1, [sp, #28]
   24530:	str	r0, [r1, #20]
   24534:	ldr	r0, [fp, #-16]
   24538:	ldr	r0, [r0, #24]
   2453c:	lsr	r0, r0, #19
   24540:	and	r0, r0, #1
   24544:	ldr	r1, [sp, #24]
   24548:	ldr	r2, [r1, #24]
   2454c:	and	r0, r0, #1
   24550:	lsl	r3, r0, #19
   24554:	mvn	ip, #524288	; 0x80000
   24558:	and	r2, r2, ip
   2455c:	orr	r2, r2, r3
   24560:	str	r2, [r1, #24]
   24564:	ldr	r1, [sp, #28]
   24568:	ldr	r2, [r1, #24]
   2456c:	and	r0, r0, #1
   24570:	lsl	r0, r0, #19
   24574:	and	r2, r2, ip
   24578:	orr	r0, r2, r0
   2457c:	str	r0, [r1, #24]
   24580:	ldr	r0, [sp, #16]
   24584:	str	r0, [fp, #-4]
   24588:	ldr	r0, [fp, #-4]
   2458c:	mov	sp, fp
   24590:	pop	{fp, pc}
   24594:	push	{fp, lr}
   24598:	mov	fp, sp
   2459c:	sub	sp, sp, #64	; 0x40
   245a0:	str	r1, [fp, #-12]
   245a4:	str	r2, [fp, #-8]
   245a8:	str	r0, [fp, #-16]
   245ac:	ldr	r0, [fp, #-16]
   245b0:	ldr	r0, [r0, #8]
   245b4:	ldr	r1, [fp, #-16]
   245b8:	ldr	r1, [r1, #4]
   245bc:	cmp	r0, r1
   245c0:	bcc	24774 <__assert_fail@plt+0x13020>
   245c4:	ldr	r0, [pc, #732]	; 248a8 <__assert_fail@plt+0x13154>
   245c8:	ldr	r1, [fp, #-16]
   245cc:	ldr	r1, [r1, #4]
   245d0:	lsl	r1, r1, #1
   245d4:	str	r1, [fp, #-20]	; 0xffffffec
   245d8:	movw	r1, #12
   245dc:	str	r1, [sp, #20]
   245e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   245e4:	cmp	r0, r1
   245e8:	bcs	245f8 <__assert_fail@plt+0x12ea4>
   245ec:	mvn	r0, #0
   245f0:	str	r0, [fp, #-4]
   245f4:	b	2489c <__assert_fail@plt+0x13148>
   245f8:	ldr	r0, [fp, #-16]
   245fc:	ldr	r0, [r0]
   24600:	ldr	r1, [fp, #-20]	; 0xffffffec
   24604:	lsl	r1, r1, #3
   24608:	bl	381dc <__assert_fail@plt+0x26a88>
   2460c:	str	r0, [sp, #24]
   24610:	ldr	r0, [sp, #24]
   24614:	movw	r1, #0
   24618:	cmp	r0, r1
   2461c:	bne	2462c <__assert_fail@plt+0x12ed8>
   24620:	mvn	r0, #0
   24624:	str	r0, [fp, #-4]
   24628:	b	2489c <__assert_fail@plt+0x13148>
   2462c:	ldr	r0, [sp, #24]
   24630:	ldr	r1, [fp, #-16]
   24634:	str	r0, [r1]
   24638:	ldr	r0, [fp, #-16]
   2463c:	ldr	r0, [r0, #12]
   24640:	ldr	r1, [fp, #-20]	; 0xffffffec
   24644:	lsl	r1, r1, #2
   24648:	bl	381dc <__assert_fail@plt+0x26a88>
   2464c:	str	r0, [fp, #-24]	; 0xffffffe8
   24650:	ldr	r0, [fp, #-16]
   24654:	ldr	r0, [r0, #16]
   24658:	ldr	r1, [fp, #-20]	; 0xffffffec
   2465c:	lsl	r1, r1, #2
   24660:	bl	381dc <__assert_fail@plt+0x26a88>
   24664:	str	r0, [fp, #-28]	; 0xffffffe4
   24668:	ldr	r0, [fp, #-16]
   2466c:	ldr	r0, [r0, #20]
   24670:	ldr	r1, [fp, #-20]	; 0xffffffec
   24674:	movw	r2, #12
   24678:	mul	r1, r1, r2
   2467c:	bl	381dc <__assert_fail@plt+0x26a88>
   24680:	str	r0, [sp, #32]
   24684:	ldr	r0, [fp, #-16]
   24688:	ldr	r0, [r0, #24]
   2468c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24690:	movw	r2, #12
   24694:	mul	r1, r1, r2
   24698:	bl	381dc <__assert_fail@plt+0x26a88>
   2469c:	str	r0, [sp, #28]
   246a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   246a4:	movw	r1, #0
   246a8:	cmp	r0, r1
   246ac:	movw	r0, #1
   246b0:	str	r0, [sp, #16]
   246b4:	beq	24700 <__assert_fail@plt+0x12fac>
   246b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   246bc:	movw	r1, #0
   246c0:	cmp	r0, r1
   246c4:	movw	r0, #1
   246c8:	str	r0, [sp, #16]
   246cc:	beq	24700 <__assert_fail@plt+0x12fac>
   246d0:	ldr	r0, [sp, #32]
   246d4:	movw	r1, #0
   246d8:	cmp	r0, r1
   246dc:	movw	r0, #1
   246e0:	str	r0, [sp, #16]
   246e4:	beq	24700 <__assert_fail@plt+0x12fac>
   246e8:	ldr	r0, [sp, #28]
   246ec:	movw	r1, #0
   246f0:	cmp	r0, r1
   246f4:	movw	r0, #0
   246f8:	moveq	r0, #1
   246fc:	str	r0, [sp, #16]
   24700:	ldr	r0, [sp, #16]
   24704:	tst	r0, #1
   24708:	beq	24738 <__assert_fail@plt+0x12fe4>
   2470c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24710:	bl	15f68 <__assert_fail@plt+0x4814>
   24714:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24718:	bl	15f68 <__assert_fail@plt+0x4814>
   2471c:	ldr	r0, [sp, #32]
   24720:	bl	15f68 <__assert_fail@plt+0x4814>
   24724:	ldr	r0, [sp, #28]
   24728:	bl	15f68 <__assert_fail@plt+0x4814>
   2472c:	mvn	r0, #0
   24730:	str	r0, [fp, #-4]
   24734:	b	2489c <__assert_fail@plt+0x13148>
   24738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2473c:	ldr	r1, [fp, #-16]
   24740:	str	r0, [r1, #12]
   24744:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24748:	ldr	r1, [fp, #-16]
   2474c:	str	r0, [r1, #16]
   24750:	ldr	r0, [sp, #32]
   24754:	ldr	r1, [fp, #-16]
   24758:	str	r0, [r1, #20]
   2475c:	ldr	r0, [sp, #28]
   24760:	ldr	r1, [fp, #-16]
   24764:	str	r0, [r1, #24]
   24768:	ldr	r0, [fp, #-20]	; 0xffffffec
   2476c:	ldr	r1, [fp, #-16]
   24770:	str	r0, [r1, #4]
   24774:	ldr	r0, [pc, #304]	; 248ac <__assert_fail@plt+0x13158>
   24778:	ldr	r1, [fp, #-16]
   2477c:	ldr	r2, [r1]
   24780:	ldr	r1, [r1, #8]
   24784:	add	r1, r2, r1, lsl #3
   24788:	vldr	d16, [fp, #-12]
   2478c:	vstr	d16, [r1]
   24790:	ldr	r1, [fp, #-16]
   24794:	ldr	r2, [r1]
   24798:	ldr	r1, [r1, #8]
   2479c:	add	r1, r2, r1, lsl #3
   247a0:	ldr	r2, [r1, #4]
   247a4:	and	r0, r2, r0
   247a8:	str	r0, [r1, #4]
   247ac:	ldr	r0, [fp, #-8]
   247b0:	and	r0, r0, #255	; 0xff
   247b4:	cmp	r0, #5
   247b8:	bne	247d4 <__assert_fail@plt+0x13080>
   247bc:	ldr	r0, [fp, #-16]
   247c0:	ldr	r0, [r0, #92]	; 0x5c
   247c4:	cmp	r0, #1
   247c8:	movw	r0, #1
   247cc:	str	r0, [sp, #12]
   247d0:	bgt	247ec <__assert_fail@plt+0x13098>
   247d4:	ldr	r0, [fp, #-8]
   247d8:	and	r0, r0, #255	; 0xff
   247dc:	cmp	r0, #6
   247e0:	movw	r0, #0
   247e4:	moveq	r0, #1
   247e8:	str	r0, [sp, #12]
   247ec:	ldr	r0, [sp, #12]
   247f0:	and	r0, r0, #1
   247f4:	ldr	r1, [fp, #-16]
   247f8:	ldr	r2, [r1]
   247fc:	ldr	r1, [r1, #8]
   24800:	add	r1, r2, r1, lsl #3
   24804:	ldr	r2, [r1, #4]
   24808:	bic	r2, r2, #1048576	; 0x100000
   2480c:	orr	r0, r2, r0, lsl #20
   24810:	str	r0, [r1, #4]
   24814:	ldr	r0, [fp, #-16]
   24818:	ldr	r1, [r0, #8]
   2481c:	ldr	r0, [r0, #12]
   24820:	add	r0, r0, r1, lsl #2
   24824:	mvn	r1, #0
   24828:	str	r1, [r0]
   2482c:	ldr	r0, [fp, #-16]
   24830:	ldr	r0, [r0, #20]
   24834:	ldr	r1, [fp, #-16]
   24838:	ldr	r1, [r1, #8]
   2483c:	movw	r2, #12
   24840:	mul	r1, r1, r2
   24844:	add	r0, r0, r1
   24848:	movw	r1, #0
   2484c:	and	r3, r1, #255	; 0xff
   24850:	str	r1, [sp, #8]
   24854:	mov	r1, r3
   24858:	str	r2, [sp, #4]
   2485c:	bl	11658 <memset@plt>
   24860:	ldr	r0, [fp, #-16]
   24864:	ldr	r0, [r0, #24]
   24868:	ldr	r1, [fp, #-16]
   2486c:	ldr	r1, [r1, #8]
   24870:	ldr	r2, [sp, #4]
   24874:	mul	r1, r1, r2
   24878:	add	r0, r0, r1
   2487c:	ldr	r1, [sp, #8]
   24880:	and	r1, r1, #255	; 0xff
   24884:	bl	11658 <memset@plt>
   24888:	ldr	r0, [fp, #-16]
   2488c:	ldr	r1, [r0, #8]
   24890:	add	r2, r1, #1
   24894:	str	r2, [r0, #8]
   24898:	str	r1, [fp, #-4]
   2489c:	ldr	r0, [fp, #-4]
   248a0:	mov	sp, fp
   248a4:	pop	{fp, pc}
   248a8:	ldrbne	r5, [r5, #-1365]	; 0xfffffaab
   248ac:			; <UNDEFINED> instruction: 0xfffc00ff
   248b0:	push	{fp, lr}
   248b4:	mov	fp, sp
   248b8:	sub	sp, sp, #16
   248bc:	str	r0, [sp, #8]
   248c0:	str	r1, [sp, #4]
   248c4:	str	r2, [sp]
   248c8:	ldr	r0, [sp, #8]
   248cc:	movw	r1, #2
   248d0:	str	r1, [r0]
   248d4:	movw	r0, #8
   248d8:	bl	3816c <__assert_fail@plt+0x26a18>
   248dc:	ldr	r1, [sp, #8]
   248e0:	str	r0, [r1, #8]
   248e4:	ldr	r0, [sp, #8]
   248e8:	ldr	r0, [r0, #8]
   248ec:	movw	r1, #0
   248f0:	cmp	r0, r1
   248f4:	bne	24904 <__assert_fail@plt+0x131b0>
   248f8:	movw	r0, #12
   248fc:	str	r0, [fp, #-4]
   24900:	b	249a0 <__assert_fail@plt+0x1324c>
   24904:	ldr	r0, [sp, #4]
   24908:	ldr	r1, [sp]
   2490c:	cmp	r0, r1
   24910:	bne	24934 <__assert_fail@plt+0x131e0>
   24914:	ldr	r0, [sp, #8]
   24918:	movw	r1, #1
   2491c:	str	r1, [r0, #4]
   24920:	ldr	r0, [sp, #4]
   24924:	ldr	r1, [sp, #8]
   24928:	ldr	r1, [r1, #8]
   2492c:	str	r0, [r1]
   24930:	b	24998 <__assert_fail@plt+0x13244>
   24934:	ldr	r0, [sp, #8]
   24938:	movw	r1, #2
   2493c:	str	r1, [r0, #4]
   24940:	ldr	r0, [sp, #4]
   24944:	ldr	r1, [sp]
   24948:	cmp	r0, r1
   2494c:	bge	24974 <__assert_fail@plt+0x13220>
   24950:	ldr	r0, [sp, #4]
   24954:	ldr	r1, [sp, #8]
   24958:	ldr	r1, [r1, #8]
   2495c:	str	r0, [r1]
   24960:	ldr	r0, [sp]
   24964:	ldr	r1, [sp, #8]
   24968:	ldr	r1, [r1, #8]
   2496c:	str	r0, [r1, #4]
   24970:	b	24994 <__assert_fail@plt+0x13240>
   24974:	ldr	r0, [sp]
   24978:	ldr	r1, [sp, #8]
   2497c:	ldr	r1, [r1, #8]
   24980:	str	r0, [r1]
   24984:	ldr	r0, [sp, #4]
   24988:	ldr	r1, [sp, #8]
   2498c:	ldr	r1, [r1, #8]
   24990:	str	r0, [r1, #4]
   24994:	b	24998 <__assert_fail@plt+0x13244>
   24998:	movw	r0, #0
   2499c:	str	r0, [fp, #-4]
   249a0:	ldr	r0, [fp, #-4]
   249a4:	mov	sp, fp
   249a8:	pop	{fp, pc}
   249ac:	push	{fp, lr}
   249b0:	mov	fp, sp
   249b4:	sub	sp, sp, #16
   249b8:	str	r0, [sp, #8]
   249bc:	str	r1, [sp, #4]
   249c0:	ldr	r0, [sp, #8]
   249c4:	movw	r1, #1
   249c8:	str	r1, [r0]
   249cc:	ldr	r0, [sp, #8]
   249d0:	str	r1, [r0, #4]
   249d4:	movw	r0, #4
   249d8:	bl	3816c <__assert_fail@plt+0x26a18>
   249dc:	ldr	r1, [sp, #8]
   249e0:	str	r0, [r1, #8]
   249e4:	ldr	r0, [sp, #8]
   249e8:	ldr	r0, [r0, #8]
   249ec:	movw	r1, #0
   249f0:	cmp	r0, r1
   249f4:	bne	24a18 <__assert_fail@plt+0x132c4>
   249f8:	ldr	r0, [sp, #8]
   249fc:	movw	r1, #0
   24a00:	str	r1, [r0, #4]
   24a04:	ldr	r0, [sp, #8]
   24a08:	str	r1, [r0]
   24a0c:	movw	r0, #12
   24a10:	str	r0, [fp, #-4]
   24a14:	b	24a30 <__assert_fail@plt+0x132dc>
   24a18:	ldr	r0, [sp, #4]
   24a1c:	ldr	r1, [sp, #8]
   24a20:	ldr	r1, [r1, #8]
   24a24:	str	r0, [r1]
   24a28:	movw	r0, #0
   24a2c:	str	r0, [fp, #-4]
   24a30:	ldr	r0, [fp, #-4]
   24a34:	mov	sp, fp
   24a38:	pop	{fp, pc}
   24a3c:	push	{fp, lr}
   24a40:	mov	fp, sp
   24a44:	sub	sp, sp, #72	; 0x48
   24a48:	str	r0, [fp, #-8]
   24a4c:	str	r1, [fp, #-12]
   24a50:	str	r2, [fp, #-16]
   24a54:	and	r0, r3, #1
   24a58:	strb	r0, [fp, #-17]	; 0xffffffef
   24a5c:	movw	r0, #0
   24a60:	strb	r0, [sp, #31]
   24a64:	ldr	r0, [fp, #-12]
   24a68:	ldr	r0, [r0, #20]
   24a6c:	ldr	r1, [fp, #-16]
   24a70:	movw	r2, #12
   24a74:	mul	r1, r1, r2
   24a78:	add	r0, r0, r1
   24a7c:	ldr	r0, [r0, #4]
   24a80:	add	r1, r0, #1
   24a84:	add	r0, sp, #32
   24a88:	bl	24e10 <__assert_fail@plt+0x136bc>
   24a8c:	str	r0, [fp, #-24]	; 0xffffffe8
   24a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24a94:	cmp	r0, #0
   24a98:	beq	24aa8 <__assert_fail@plt+0x13354>
   24a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24aa0:	str	r0, [fp, #-4]
   24aa4:	b	24e04 <__assert_fail@plt+0x136b0>
   24aa8:	ldr	r0, [fp, #-16]
   24aac:	ldr	r1, [sp, #36]	; 0x24
   24ab0:	ldr	r2, [sp, #40]	; 0x28
   24ab4:	add	r3, r1, #1
   24ab8:	str	r3, [sp, #36]	; 0x24
   24abc:	str	r0, [r2, r1, lsl #2]
   24ac0:	ldr	r0, [fp, #-12]
   24ac4:	ldr	r0, [r0, #24]
   24ac8:	ldr	r1, [fp, #-16]
   24acc:	add	r1, r1, r1, lsl #1
   24ad0:	add	r0, r0, r1, lsl #2
   24ad4:	mvn	r1, #0
   24ad8:	str	r1, [r0, #4]
   24adc:	ldr	r0, [fp, #-12]
   24ae0:	ldr	r0, [r0]
   24ae4:	ldr	r1, [fp, #-16]
   24ae8:	add	r0, r0, r1, lsl #3
   24aec:	ldr	r0, [r0, #4]
   24af0:	lsr	r0, r0, #8
   24af4:	movw	r1, #1023	; 0x3ff
   24af8:	and	r0, r0, r1
   24afc:	cmp	r0, #0
   24b00:	beq	24bc8 <__assert_fail@plt+0x13474>
   24b04:	ldr	r0, [fp, #-12]
   24b08:	ldr	r0, [r0, #20]
   24b0c:	ldr	r1, [fp, #-16]
   24b10:	movw	r2, #12
   24b14:	mul	r1, r1, r2
   24b18:	add	r0, r0, r1
   24b1c:	ldr	r0, [r0, #4]
   24b20:	cmp	r0, #0
   24b24:	beq	24bc8 <__assert_fail@plt+0x13474>
   24b28:	ldr	r0, [fp, #-12]
   24b2c:	ldr	r1, [r0]
   24b30:	ldr	r0, [r0, #20]
   24b34:	ldr	r2, [fp, #-16]
   24b38:	add	r2, r2, r2, lsl #1
   24b3c:	add	r0, r0, r2, lsl #2
   24b40:	ldr	r0, [r0, #8]
   24b44:	ldr	r0, [r0]
   24b48:	add	r0, r1, r0, lsl #3
   24b4c:	ldr	r0, [r0, #4]
   24b50:	lsr	r0, r0, #18
   24b54:	and	r0, r0, #1
   24b58:	cmp	r0, #0
   24b5c:	bne	24bc8 <__assert_fail@plt+0x13474>
   24b60:	ldr	r0, [fp, #-12]
   24b64:	ldr	r1, [fp, #-16]
   24b68:	mov	r2, r1
   24b6c:	mov	r3, r1
   24b70:	mov	ip, r1
   24b74:	ldr	lr, [r0]
   24b78:	add	r1, lr, r1, lsl #3
   24b7c:	ldr	r1, [r1, #4]
   24b80:	lsr	r1, r1, #8
   24b84:	movw	lr, #1023	; 0x3ff
   24b88:	and	r1, r1, lr
   24b8c:	str	r1, [sp, #8]
   24b90:	mov	r1, r2
   24b94:	mov	r2, r3
   24b98:	mov	r3, ip
   24b9c:	ldr	ip, [sp, #8]
   24ba0:	str	ip, [sp]
   24ba4:	bl	24e84 <__assert_fail@plt+0x13730>
   24ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   24bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24bb0:	cmp	r0, #0
   24bb4:	beq	24bc4 <__assert_fail@plt+0x13470>
   24bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24bbc:	str	r0, [fp, #-4]
   24bc0:	b	24e04 <__assert_fail@plt+0x136b0>
   24bc4:	b	24bc8 <__assert_fail@plt+0x13474>
   24bc8:	ldr	r0, [fp, #-12]
   24bcc:	ldr	r0, [r0]
   24bd0:	ldr	r1, [fp, #-16]
   24bd4:	add	r0, r0, r1, lsl #3
   24bd8:	ldr	r0, [r0, #4]
   24bdc:	and	r0, r0, #255	; 0xff
   24be0:	and	r0, r0, #8
   24be4:	cmp	r0, #0
   24be8:	beq	24d74 <__assert_fail@plt+0x13620>
   24bec:	movw	r0, #0
   24bf0:	str	r0, [fp, #-28]	; 0xffffffe4
   24bf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24bf8:	ldr	r1, [fp, #-12]
   24bfc:	ldr	r1, [r1, #20]
   24c00:	ldr	r2, [fp, #-16]
   24c04:	movw	r3, #12
   24c08:	mul	r2, r2, r3
   24c0c:	add	r1, r1, r2
   24c10:	ldr	r1, [r1, #4]
   24c14:	cmp	r0, r1
   24c18:	bge	24d70 <__assert_fail@plt+0x1361c>
   24c1c:	ldr	r0, [fp, #-12]
   24c20:	ldr	r0, [r0, #20]
   24c24:	ldr	r1, [fp, #-16]
   24c28:	add	r1, r1, r1, lsl #1
   24c2c:	add	r0, r0, r1, lsl #2
   24c30:	ldr	r0, [r0, #8]
   24c34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24c38:	add	r0, r0, r1, lsl #2
   24c3c:	ldr	r0, [r0]
   24c40:	str	r0, [sp, #12]
   24c44:	ldr	r0, [fp, #-12]
   24c48:	ldr	r0, [r0, #24]
   24c4c:	ldr	r1, [sp, #12]
   24c50:	movw	r2, #12
   24c54:	mul	r1, r1, r2
   24c58:	add	r0, r0, r1
   24c5c:	ldr	r0, [r0, #4]
   24c60:	cmn	r0, #1
   24c64:	bne	24c74 <__assert_fail@plt+0x13520>
   24c68:	movw	r0, #1
   24c6c:	strb	r0, [sp, #31]
   24c70:	b	24d60 <__assert_fail@plt+0x1360c>
   24c74:	ldr	r0, [fp, #-12]
   24c78:	ldr	r0, [r0, #24]
   24c7c:	ldr	r1, [sp, #12]
   24c80:	movw	r2, #12
   24c84:	mul	r1, r1, r2
   24c88:	add	r0, r0, r1
   24c8c:	ldr	r0, [r0, #4]
   24c90:	cmp	r0, #0
   24c94:	bne	24cd0 <__assert_fail@plt+0x1357c>
   24c98:	ldr	r1, [fp, #-12]
   24c9c:	ldr	r2, [sp, #12]
   24ca0:	add	r0, sp, #16
   24ca4:	movw	r3, #0
   24ca8:	and	r3, r3, #1
   24cac:	bl	24a3c <__assert_fail@plt+0x132e8>
   24cb0:	str	r0, [fp, #-24]	; 0xffffffe8
   24cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24cb8:	cmp	r0, #0
   24cbc:	beq	24ccc <__assert_fail@plt+0x13578>
   24cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24cc4:	str	r0, [fp, #-4]
   24cc8:	b	24e04 <__assert_fail@plt+0x136b0>
   24ccc:	b	24d00 <__assert_fail@plt+0x135ac>
   24cd0:	ldr	r0, [fp, #-12]
   24cd4:	ldr	r0, [r0, #24]
   24cd8:	ldr	r1, [sp, #12]
   24cdc:	movw	r2, #12
   24ce0:	mul	r1, r1, r2
   24ce4:	add	r0, r0, r1
   24ce8:	ldr	r1, [r0]
   24cec:	str	r1, [sp, #16]
   24cf0:	ldr	r1, [r0, #4]
   24cf4:	str	r1, [sp, #20]
   24cf8:	ldr	r0, [r0, #8]
   24cfc:	str	r0, [sp, #24]
   24d00:	add	r0, sp, #32
   24d04:	add	r1, sp, #16
   24d08:	bl	25388 <__assert_fail@plt+0x13c34>
   24d0c:	str	r0, [fp, #-24]	; 0xffffffe8
   24d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d14:	cmp	r0, #0
   24d18:	beq	24d28 <__assert_fail@plt+0x135d4>
   24d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24d20:	str	r0, [fp, #-4]
   24d24:	b	24e04 <__assert_fail@plt+0x136b0>
   24d28:	ldr	r0, [fp, #-12]
   24d2c:	ldr	r0, [r0, #24]
   24d30:	ldr	r1, [sp, #12]
   24d34:	movw	r2, #12
   24d38:	mul	r1, r1, r2
   24d3c:	add	r0, r0, r1
   24d40:	ldr	r0, [r0, #4]
   24d44:	cmp	r0, #0
   24d48:	bne	24d5c <__assert_fail@plt+0x13608>
   24d4c:	movw	r0, #1
   24d50:	strb	r0, [sp, #31]
   24d54:	ldr	r0, [sp, #24]
   24d58:	bl	15f68 <__assert_fail@plt+0x4814>
   24d5c:	b	24d60 <__assert_fail@plt+0x1360c>
   24d60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24d64:	add	r0, r0, #1
   24d68:	str	r0, [fp, #-28]	; 0xffffffe4
   24d6c:	b	24bf4 <__assert_fail@plt+0x134a0>
   24d70:	b	24d74 <__assert_fail@plt+0x13620>
   24d74:	ldrb	r0, [sp, #31]
   24d78:	tst	r0, #1
   24d7c:	beq	24db0 <__assert_fail@plt+0x1365c>
   24d80:	ldrb	r0, [fp, #-17]	; 0xffffffef
   24d84:	tst	r0, #1
   24d88:	bne	24db0 <__assert_fail@plt+0x1365c>
   24d8c:	ldr	r0, [fp, #-12]
   24d90:	ldr	r0, [r0, #24]
   24d94:	ldr	r1, [fp, #-16]
   24d98:	movw	r2, #12
   24d9c:	mul	r1, r1, r2
   24da0:	add	r0, r0, r1
   24da4:	movw	r1, #0
   24da8:	str	r1, [r0, #4]
   24dac:	b	24de0 <__assert_fail@plt+0x1368c>
   24db0:	ldr	r0, [fp, #-12]
   24db4:	ldr	r0, [r0, #24]
   24db8:	ldr	r1, [fp, #-16]
   24dbc:	movw	r2, #12
   24dc0:	mul	r1, r1, r2
   24dc4:	add	r0, r0, r1
   24dc8:	ldr	r1, [sp, #32]
   24dcc:	str	r1, [r0]
   24dd0:	ldr	r1, [sp, #36]	; 0x24
   24dd4:	str	r1, [r0, #4]
   24dd8:	ldr	r1, [sp, #40]	; 0x28
   24ddc:	str	r1, [r0, #8]
   24de0:	ldr	r0, [fp, #-8]
   24de4:	ldr	r1, [sp, #32]
   24de8:	str	r1, [r0]
   24dec:	ldr	r1, [sp, #36]	; 0x24
   24df0:	str	r1, [r0, #4]
   24df4:	ldr	r1, [sp, #40]	; 0x28
   24df8:	str	r1, [r0, #8]
   24dfc:	movw	r0, #0
   24e00:	str	r0, [fp, #-4]
   24e04:	ldr	r0, [fp, #-4]
   24e08:	mov	sp, fp
   24e0c:	pop	{fp, pc}
   24e10:	push	{fp, lr}
   24e14:	mov	fp, sp
   24e18:	sub	sp, sp, #16
   24e1c:	str	r0, [sp, #8]
   24e20:	str	r1, [sp, #4]
   24e24:	ldr	r0, [sp, #4]
   24e28:	ldr	r1, [sp, #8]
   24e2c:	str	r0, [r1]
   24e30:	ldr	r0, [sp, #8]
   24e34:	mov	r1, #0
   24e38:	str	r1, [r0, #4]
   24e3c:	ldr	r0, [sp, #4]
   24e40:	lsl	r0, r0, #2
   24e44:	bl	3816c <__assert_fail@plt+0x26a18>
   24e48:	ldr	r1, [sp, #8]
   24e4c:	str	r0, [r1, #8]
   24e50:	ldr	r0, [sp, #8]
   24e54:	ldr	r0, [r0, #8]
   24e58:	movw	r1, #0
   24e5c:	cmp	r0, r1
   24e60:	bne	24e70 <__assert_fail@plt+0x1371c>
   24e64:	movw	r0, #12
   24e68:	str	r0, [fp, #-4]
   24e6c:	b	24e78 <__assert_fail@plt+0x13724>
   24e70:	movw	r0, #0
   24e74:	str	r0, [fp, #-4]
   24e78:	ldr	r0, [fp, #-4]
   24e7c:	mov	sp, fp
   24e80:	pop	{fp, pc}
   24e84:	push	{fp, lr}
   24e88:	mov	fp, sp
   24e8c:	sub	sp, sp, #56	; 0x38
   24e90:	ldr	ip, [fp, #8]
   24e94:	str	r0, [fp, #-8]
   24e98:	str	r1, [fp, #-12]
   24e9c:	str	r2, [fp, #-16]
   24ea0:	str	r3, [fp, #-20]	; 0xffffffec
   24ea4:	ldr	r0, [fp, #8]
   24ea8:	str	r0, [sp, #20]
   24eac:	ldr	r0, [fp, #-12]
   24eb0:	str	r0, [fp, #-24]	; 0xffffffe8
   24eb4:	ldr	r0, [fp, #-16]
   24eb8:	str	r0, [sp, #28]
   24ebc:	ldr	r0, [fp, #-8]
   24ec0:	ldr	r0, [r0]
   24ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24ec8:	add	r0, r0, r1, lsl #3
   24ecc:	ldr	r0, [r0, #4]
   24ed0:	and	r0, r0, #255	; 0xff
   24ed4:	cmp	r0, #4
   24ed8:	bne	24fa8 <__assert_fail@plt+0x13854>
   24edc:	ldr	r0, [fp, #-8]
   24ee0:	ldr	r0, [r0, #12]
   24ee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24ee8:	add	r0, r0, r1, lsl #2
   24eec:	ldr	r0, [r0]
   24ef0:	str	r0, [sp, #16]
   24ef4:	ldr	r0, [fp, #-8]
   24ef8:	ldr	r0, [r0, #20]
   24efc:	ldr	r1, [sp, #28]
   24f00:	movw	r2, #12
   24f04:	mul	r1, r1, r2
   24f08:	add	r0, r0, r1
   24f0c:	movw	r1, #0
   24f10:	str	r1, [r0, #4]
   24f14:	ldr	r0, [fp, #-8]
   24f18:	ldr	r1, [sp, #16]
   24f1c:	ldr	r2, [sp, #20]
   24f20:	bl	25790 <__assert_fail@plt+0x1403c>
   24f24:	str	r0, [sp, #12]
   24f28:	ldr	r0, [sp, #12]
   24f2c:	cmn	r0, #1
   24f30:	bne	24f40 <__assert_fail@plt+0x137ec>
   24f34:	movw	r0, #12
   24f38:	str	r0, [fp, #-4]
   24f3c:	b	2537c <__assert_fail@plt+0x13c28>
   24f40:	ldr	r0, [fp, #-8]
   24f44:	ldr	r0, [r0, #12]
   24f48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24f4c:	ldr	r1, [r0, r1, lsl #2]
   24f50:	ldr	r2, [sp, #28]
   24f54:	add	r0, r0, r2, lsl #2
   24f58:	str	r1, [r0]
   24f5c:	ldr	r0, [fp, #-8]
   24f60:	ldr	r0, [r0, #20]
   24f64:	ldr	r1, [sp, #28]
   24f68:	movw	r2, #12
   24f6c:	mul	r1, r1, r2
   24f70:	add	r0, r0, r1
   24f74:	ldr	r1, [sp, #12]
   24f78:	bl	25878 <__assert_fail@plt+0x14124>
   24f7c:	and	r0, r0, #1
   24f80:	strb	r0, [sp, #27]
   24f84:	ldrb	r0, [sp, #27]
   24f88:	mvn	r1, #0
   24f8c:	eor	r0, r0, r1
   24f90:	tst	r0, #1
   24f94:	beq	24fa4 <__assert_fail@plt+0x13850>
   24f98:	movw	r0, #12
   24f9c:	str	r0, [fp, #-4]
   24fa0:	b	2537c <__assert_fail@plt+0x13c28>
   24fa4:	b	25360 <__assert_fail@plt+0x13c0c>
   24fa8:	ldr	r0, [fp, #-8]
   24fac:	ldr	r0, [r0, #20]
   24fb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24fb4:	movw	r2, #12
   24fb8:	mul	r1, r1, r2
   24fbc:	add	r0, r0, r1
   24fc0:	ldr	r0, [r0, #4]
   24fc4:	cmp	r0, #0
   24fc8:	bne	24fec <__assert_fail@plt+0x13898>
   24fcc:	ldr	r0, [fp, #-8]
   24fd0:	ldr	r0, [r0, #12]
   24fd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24fd8:	ldr	r1, [r0, r1, lsl #2]
   24fdc:	ldr	r2, [sp, #28]
   24fe0:	add	r0, r0, r2, lsl #2
   24fe4:	str	r1, [r0]
   24fe8:	b	25374 <__assert_fail@plt+0x13c20>
   24fec:	ldr	r0, [fp, #-8]
   24ff0:	ldr	r0, [r0, #20]
   24ff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24ff8:	movw	r2, #12
   24ffc:	mul	r1, r1, r2
   25000:	add	r0, r0, r1
   25004:	ldr	r0, [r0, #4]
   25008:	cmp	r0, #1
   2500c:	bne	25160 <__assert_fail@plt+0x13a0c>
   25010:	ldr	r0, [fp, #-8]
   25014:	ldr	r0, [r0, #20]
   25018:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2501c:	movw	r2, #12
   25020:	mul	r1, r1, r2
   25024:	add	r0, r0, r1
   25028:	ldr	r0, [r0, #8]
   2502c:	ldr	r0, [r0]
   25030:	str	r0, [sp, #16]
   25034:	ldr	r0, [fp, #-8]
   25038:	ldr	r0, [r0, #20]
   2503c:	ldr	r1, [sp, #28]
   25040:	mul	r1, r1, r2
   25044:	add	r0, r0, r1
   25048:	movw	r1, #0
   2504c:	str	r1, [r0, #4]
   25050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25054:	ldr	r1, [fp, #-20]	; 0xffffffec
   25058:	cmp	r0, r1
   2505c:	bne	250bc <__assert_fail@plt+0x13968>
   25060:	ldr	r0, [sp, #28]
   25064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25068:	cmp	r0, r1
   2506c:	beq	250bc <__assert_fail@plt+0x13968>
   25070:	ldr	r0, [fp, #-8]
   25074:	ldr	r0, [r0, #20]
   25078:	ldr	r1, [sp, #28]
   2507c:	movw	r2, #12
   25080:	mul	r1, r1, r2
   25084:	add	r0, r0, r1
   25088:	ldr	r1, [sp, #16]
   2508c:	bl	25878 <__assert_fail@plt+0x14124>
   25090:	and	r0, r0, #1
   25094:	strb	r0, [sp, #27]
   25098:	ldrb	r0, [sp, #27]
   2509c:	mvn	r1, #0
   250a0:	eor	r0, r0, r1
   250a4:	tst	r0, #1
   250a8:	beq	250b8 <__assert_fail@plt+0x13964>
   250ac:	movw	r0, #12
   250b0:	str	r0, [fp, #-4]
   250b4:	b	2537c <__assert_fail@plt+0x13c28>
   250b8:	b	25374 <__assert_fail@plt+0x13c20>
   250bc:	ldr	r0, [fp, #-8]
   250c0:	ldr	r0, [r0]
   250c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   250c8:	add	r0, r0, r1, lsl #3
   250cc:	ldr	r0, [r0, #4]
   250d0:	lsr	r0, r0, #8
   250d4:	movw	r1, #1023	; 0x3ff
   250d8:	and	r0, r0, r1
   250dc:	ldr	r1, [sp, #20]
   250e0:	orr	r0, r1, r0
   250e4:	str	r0, [sp, #20]
   250e8:	ldr	r0, [fp, #-8]
   250ec:	ldr	r1, [sp, #16]
   250f0:	ldr	r2, [sp, #20]
   250f4:	bl	25790 <__assert_fail@plt+0x1403c>
   250f8:	str	r0, [sp, #12]
   250fc:	ldr	r0, [sp, #12]
   25100:	cmn	r0, #1
   25104:	bne	25114 <__assert_fail@plt+0x139c0>
   25108:	movw	r0, #12
   2510c:	str	r0, [fp, #-4]
   25110:	b	2537c <__assert_fail@plt+0x13c28>
   25114:	ldr	r0, [fp, #-8]
   25118:	ldr	r0, [r0, #20]
   2511c:	ldr	r1, [sp, #28]
   25120:	movw	r2, #12
   25124:	mul	r1, r1, r2
   25128:	add	r0, r0, r1
   2512c:	ldr	r1, [sp, #12]
   25130:	bl	25878 <__assert_fail@plt+0x14124>
   25134:	and	r0, r0, #1
   25138:	strb	r0, [sp, #27]
   2513c:	ldrb	r0, [sp, #27]
   25140:	mvn	r1, #0
   25144:	eor	r0, r0, r1
   25148:	tst	r0, #1
   2514c:	beq	2515c <__assert_fail@plt+0x13a08>
   25150:	movw	r0, #12
   25154:	str	r0, [fp, #-4]
   25158:	b	2537c <__assert_fail@plt+0x13c28>
   2515c:	b	25358 <__assert_fail@plt+0x13c04>
   25160:	ldr	r0, [fp, #-8]
   25164:	ldr	r0, [r0, #20]
   25168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2516c:	movw	r2, #12
   25170:	mul	r1, r1, r2
   25174:	add	r0, r0, r1
   25178:	ldr	r0, [r0, #8]
   2517c:	ldr	r0, [r0]
   25180:	str	r0, [sp, #16]
   25184:	ldr	r0, [fp, #-8]
   25188:	ldr	r0, [r0, #20]
   2518c:	ldr	r1, [sp, #28]
   25190:	mul	r1, r1, r2
   25194:	add	r0, r0, r1
   25198:	movw	r1, #0
   2519c:	str	r1, [r0, #4]
   251a0:	ldr	r0, [fp, #-8]
   251a4:	ldr	r1, [sp, #16]
   251a8:	ldr	r2, [sp, #20]
   251ac:	bl	25ab0 <__assert_fail@plt+0x1435c>
   251b0:	str	r0, [sp, #12]
   251b4:	ldr	r0, [sp, #12]
   251b8:	cmn	r0, #1
   251bc:	bne	25270 <__assert_fail@plt+0x13b1c>
   251c0:	ldr	r0, [fp, #-8]
   251c4:	ldr	r1, [sp, #16]
   251c8:	ldr	r2, [sp, #20]
   251cc:	bl	25790 <__assert_fail@plt+0x1403c>
   251d0:	str	r0, [sp, #12]
   251d4:	ldr	r0, [sp, #12]
   251d8:	cmn	r0, #1
   251dc:	bne	251ec <__assert_fail@plt+0x13a98>
   251e0:	movw	r0, #12
   251e4:	str	r0, [fp, #-4]
   251e8:	b	2537c <__assert_fail@plt+0x13c28>
   251ec:	ldr	r0, [fp, #-8]
   251f0:	ldr	r0, [r0, #20]
   251f4:	ldr	r1, [sp, #28]
   251f8:	movw	r2, #12
   251fc:	mul	r1, r1, r2
   25200:	add	r0, r0, r1
   25204:	ldr	r1, [sp, #12]
   25208:	bl	25878 <__assert_fail@plt+0x14124>
   2520c:	and	r0, r0, #1
   25210:	strb	r0, [sp, #27]
   25214:	ldrb	r0, [sp, #27]
   25218:	mvn	r1, #0
   2521c:	eor	r0, r0, r1
   25220:	tst	r0, #1
   25224:	beq	25234 <__assert_fail@plt+0x13ae0>
   25228:	movw	r0, #12
   2522c:	str	r0, [fp, #-4]
   25230:	b	2537c <__assert_fail@plt+0x13c28>
   25234:	ldr	r0, [fp, #-8]
   25238:	ldr	r1, [sp, #16]
   2523c:	ldr	r2, [sp, #12]
   25240:	ldr	r3, [fp, #-20]	; 0xffffffec
   25244:	ldr	ip, [sp, #20]
   25248:	str	ip, [sp]
   2524c:	bl	24e84 <__assert_fail@plt+0x13730>
   25250:	str	r0, [sp, #8]
   25254:	ldr	r0, [sp, #8]
   25258:	cmp	r0, #0
   2525c:	beq	2526c <__assert_fail@plt+0x13b18>
   25260:	ldr	r0, [sp, #8]
   25264:	str	r0, [fp, #-4]
   25268:	b	2537c <__assert_fail@plt+0x13c28>
   2526c:	b	252bc <__assert_fail@plt+0x13b68>
   25270:	ldr	r0, [fp, #-8]
   25274:	ldr	r0, [r0, #20]
   25278:	ldr	r1, [sp, #28]
   2527c:	movw	r2, #12
   25280:	mul	r1, r1, r2
   25284:	add	r0, r0, r1
   25288:	ldr	r1, [sp, #12]
   2528c:	bl	25878 <__assert_fail@plt+0x14124>
   25290:	and	r0, r0, #1
   25294:	strb	r0, [sp, #27]
   25298:	ldrb	r0, [sp, #27]
   2529c:	mvn	r1, #0
   252a0:	eor	r0, r0, r1
   252a4:	tst	r0, #1
   252a8:	beq	252b8 <__assert_fail@plt+0x13b64>
   252ac:	movw	r0, #12
   252b0:	str	r0, [fp, #-4]
   252b4:	b	2537c <__assert_fail@plt+0x13c28>
   252b8:	b	252bc <__assert_fail@plt+0x13b68>
   252bc:	ldr	r0, [fp, #-8]
   252c0:	ldr	r0, [r0, #20]
   252c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   252c8:	movw	r2, #12
   252cc:	mul	r1, r1, r2
   252d0:	add	r0, r0, r1
   252d4:	ldr	r0, [r0, #8]
   252d8:	ldr	r0, [r0, #4]
   252dc:	str	r0, [sp, #16]
   252e0:	ldr	r0, [fp, #-8]
   252e4:	ldr	r1, [sp, #16]
   252e8:	ldr	r2, [sp, #20]
   252ec:	bl	25790 <__assert_fail@plt+0x1403c>
   252f0:	str	r0, [sp, #12]
   252f4:	ldr	r0, [sp, #12]
   252f8:	cmn	r0, #1
   252fc:	bne	2530c <__assert_fail@plt+0x13bb8>
   25300:	movw	r0, #12
   25304:	str	r0, [fp, #-4]
   25308:	b	2537c <__assert_fail@plt+0x13c28>
   2530c:	ldr	r0, [fp, #-8]
   25310:	ldr	r0, [r0, #20]
   25314:	ldr	r1, [sp, #28]
   25318:	movw	r2, #12
   2531c:	mul	r1, r1, r2
   25320:	add	r0, r0, r1
   25324:	ldr	r1, [sp, #12]
   25328:	bl	25878 <__assert_fail@plt+0x14124>
   2532c:	and	r0, r0, #1
   25330:	strb	r0, [sp, #27]
   25334:	ldrb	r0, [sp, #27]
   25338:	mvn	r1, #0
   2533c:	eor	r0, r0, r1
   25340:	tst	r0, #1
   25344:	beq	25354 <__assert_fail@plt+0x13c00>
   25348:	movw	r0, #12
   2534c:	str	r0, [fp, #-4]
   25350:	b	2537c <__assert_fail@plt+0x13c28>
   25354:	b	25358 <__assert_fail@plt+0x13c04>
   25358:	b	2535c <__assert_fail@plt+0x13c08>
   2535c:	b	25360 <__assert_fail@plt+0x13c0c>
   25360:	ldr	r0, [sp, #16]
   25364:	str	r0, [fp, #-24]	; 0xffffffe8
   25368:	ldr	r0, [sp, #12]
   2536c:	str	r0, [sp, #28]
   25370:	b	24ebc <__assert_fail@plt+0x13768>
   25374:	movw	r0, #0
   25378:	str	r0, [fp, #-4]
   2537c:	ldr	r0, [fp, #-4]
   25380:	mov	sp, fp
   25384:	pop	{fp, pc}
   25388:	push	{fp, lr}
   2538c:	mov	fp, sp
   25390:	sub	sp, sp, #40	; 0x28
   25394:	str	r0, [fp, #-8]
   25398:	str	r1, [fp, #-12]
   2539c:	ldr	r0, [fp, #-12]
   253a0:	movw	r1, #0
   253a4:	cmp	r0, r1
   253a8:	beq	253bc <__assert_fail@plt+0x13c68>
   253ac:	ldr	r0, [fp, #-12]
   253b0:	ldr	r0, [r0, #4]
   253b4:	cmp	r0, #0
   253b8:	bne	253c8 <__assert_fail@plt+0x13c74>
   253bc:	movw	r0, #0
   253c0:	str	r0, [fp, #-4]
   253c4:	b	25784 <__assert_fail@plt+0x14030>
   253c8:	ldr	r0, [fp, #-8]
   253cc:	ldr	r0, [r0]
   253d0:	ldr	r1, [fp, #-12]
   253d4:	ldr	r1, [r1, #4]
   253d8:	lsl	r1, r1, #1
   253dc:	ldr	r2, [fp, #-8]
   253e0:	ldr	r2, [r2, #4]
   253e4:	add	r1, r1, r2
   253e8:	cmp	r0, r1
   253ec:	bge	25458 <__assert_fail@plt+0x13d04>
   253f0:	ldr	r0, [fp, #-12]
   253f4:	ldr	r0, [r0, #4]
   253f8:	ldr	r1, [fp, #-8]
   253fc:	ldr	r1, [r1]
   25400:	add	r0, r0, r1
   25404:	lsl	r0, r0, #1
   25408:	str	r0, [sp, #8]
   2540c:	ldr	r0, [fp, #-8]
   25410:	ldr	r0, [r0, #8]
   25414:	ldr	r1, [sp, #8]
   25418:	lsl	r1, r1, #2
   2541c:	bl	381dc <__assert_fail@plt+0x26a88>
   25420:	str	r0, [sp, #4]
   25424:	ldr	r0, [sp, #4]
   25428:	movw	r1, #0
   2542c:	cmp	r0, r1
   25430:	bne	25440 <__assert_fail@plt+0x13cec>
   25434:	movw	r0, #12
   25438:	str	r0, [fp, #-4]
   2543c:	b	25784 <__assert_fail@plt+0x14030>
   25440:	ldr	r0, [sp, #4]
   25444:	ldr	r1, [fp, #-8]
   25448:	str	r0, [r1, #8]
   2544c:	ldr	r0, [sp, #8]
   25450:	ldr	r1, [fp, #-8]
   25454:	str	r0, [r1]
   25458:	ldr	r0, [fp, #-8]
   2545c:	ldr	r0, [r0, #4]
   25460:	cmp	r0, #0
   25464:	bne	254b8 <__assert_fail@plt+0x13d64>
   25468:	ldr	r0, [fp, #-8]
   2546c:	ldr	r0, [r0, #8]
   25470:	movw	r1, #0
   25474:	cmp	r0, r1
   25478:	beq	25480 <__assert_fail@plt+0x13d2c>
   2547c:	b	25480 <__assert_fail@plt+0x13d2c>
   25480:	ldr	r0, [fp, #-12]
   25484:	ldr	r0, [r0, #4]
   25488:	ldr	r1, [fp, #-8]
   2548c:	str	r0, [r1, #4]
   25490:	ldr	r0, [fp, #-8]
   25494:	ldr	r0, [r0, #8]
   25498:	ldr	r1, [fp, #-12]
   2549c:	ldr	r2, [r1, #4]
   254a0:	ldr	r1, [r1, #8]
   254a4:	lsl	r2, r2, #2
   254a8:	bl	11478 <memcpy@plt>
   254ac:	movw	r0, #0
   254b0:	str	r0, [fp, #-4]
   254b4:	b	25784 <__assert_fail@plt+0x14030>
   254b8:	ldr	r0, [fp, #-8]
   254bc:	ldr	r0, [r0, #4]
   254c0:	ldr	r1, [fp, #-12]
   254c4:	ldr	r1, [r1, #4]
   254c8:	lsl	r1, r1, #1
   254cc:	add	r0, r0, r1
   254d0:	str	r0, [sp, #16]
   254d4:	ldr	r0, [fp, #-12]
   254d8:	ldr	r0, [r0, #4]
   254dc:	sub	r0, r0, #1
   254e0:	str	r0, [fp, #-16]
   254e4:	ldr	r0, [fp, #-8]
   254e8:	ldr	r0, [r0, #4]
   254ec:	sub	r0, r0, #1
   254f0:	str	r0, [sp, #20]
   254f4:	ldr	r0, [fp, #-16]
   254f8:	cmp	r0, #0
   254fc:	movw	r0, #0
   25500:	str	r0, [sp]
   25504:	blt	2551c <__assert_fail@plt+0x13dc8>
   25508:	ldr	r0, [sp, #20]
   2550c:	cmp	r0, #0
   25510:	movw	r0, #0
   25514:	movge	r0, #1
   25518:	str	r0, [sp]
   2551c:	ldr	r0, [sp]
   25520:	tst	r0, #1
   25524:	beq	255f0 <__assert_fail@plt+0x13e9c>
   25528:	ldr	r0, [fp, #-8]
   2552c:	ldr	r0, [r0, #8]
   25530:	ldr	r1, [sp, #20]
   25534:	ldr	r0, [r0, r1, lsl #2]
   25538:	ldr	r1, [fp, #-12]
   2553c:	ldr	r1, [r1, #8]
   25540:	ldr	r2, [fp, #-16]
   25544:	add	r1, r1, r2, lsl #2
   25548:	ldr	r1, [r1]
   2554c:	cmp	r0, r1
   25550:	bne	25574 <__assert_fail@plt+0x13e20>
   25554:	ldr	r0, [fp, #-16]
   25558:	mvn	r1, #0
   2555c:	add	r0, r0, r1
   25560:	str	r0, [fp, #-16]
   25564:	ldr	r0, [sp, #20]
   25568:	add	r0, r0, r1
   2556c:	str	r0, [sp, #20]
   25570:	b	255ec <__assert_fail@plt+0x13e98>
   25574:	ldr	r0, [fp, #-8]
   25578:	ldr	r0, [r0, #8]
   2557c:	ldr	r1, [sp, #20]
   25580:	ldr	r0, [r0, r1, lsl #2]
   25584:	ldr	r1, [fp, #-12]
   25588:	ldr	r1, [r1, #8]
   2558c:	ldr	r2, [fp, #-16]
   25590:	add	r1, r1, r2, lsl #2
   25594:	ldr	r1, [r1]
   25598:	cmp	r0, r1
   2559c:	bge	255d8 <__assert_fail@plt+0x13e84>
   255a0:	ldr	r0, [fp, #-12]
   255a4:	ldr	r0, [r0, #8]
   255a8:	ldr	r1, [fp, #-16]
   255ac:	sub	r2, r1, #1
   255b0:	str	r2, [fp, #-16]
   255b4:	ldr	r0, [r0, r1, lsl #2]
   255b8:	ldr	r1, [fp, #-8]
   255bc:	ldr	r1, [r1, #8]
   255c0:	ldr	r2, [sp, #16]
   255c4:	sub	r2, r2, #1
   255c8:	str	r2, [sp, #16]
   255cc:	add	r1, r1, r2, lsl #2
   255d0:	str	r0, [r1]
   255d4:	b	255e8 <__assert_fail@plt+0x13e94>
   255d8:	ldr	r0, [sp, #20]
   255dc:	mvn	r1, #0
   255e0:	add	r0, r0, r1
   255e4:	str	r0, [sp, #20]
   255e8:	b	255ec <__assert_fail@plt+0x13e98>
   255ec:	b	254f4 <__assert_fail@plt+0x13da0>
   255f0:	ldr	r0, [fp, #-16]
   255f4:	cmp	r0, #0
   255f8:	blt	25638 <__assert_fail@plt+0x13ee4>
   255fc:	ldr	r0, [fp, #-16]
   25600:	ldr	r1, [sp, #16]
   25604:	mvn	r0, r0
   25608:	add	r0, r0, r1
   2560c:	str	r0, [sp, #16]
   25610:	ldr	r0, [fp, #-8]
   25614:	ldr	r0, [r0, #8]
   25618:	ldr	r1, [sp, #16]
   2561c:	add	r0, r0, r1, lsl #2
   25620:	ldr	r1, [fp, #-12]
   25624:	ldr	r1, [r1, #8]
   25628:	ldr	r2, [fp, #-16]
   2562c:	add	r2, r2, #1
   25630:	lsl	r2, r2, #2
   25634:	bl	11478 <memcpy@plt>
   25638:	ldr	r0, [fp, #-8]
   2563c:	ldr	r0, [r0, #4]
   25640:	sub	r0, r0, #1
   25644:	str	r0, [sp, #20]
   25648:	ldr	r0, [fp, #-8]
   2564c:	ldr	r0, [r0, #4]
   25650:	ldr	r1, [fp, #-12]
   25654:	ldr	r1, [r1, #4]
   25658:	lsl	r1, r1, #1
   2565c:	add	r0, r0, r1
   25660:	sub	r0, r0, #1
   25664:	str	r0, [fp, #-16]
   25668:	ldr	r0, [fp, #-16]
   2566c:	ldr	r1, [sp, #16]
   25670:	sub	r0, r0, r1
   25674:	add	r0, r0, #1
   25678:	str	r0, [sp, #12]
   2567c:	ldr	r0, [sp, #12]
   25680:	cmp	r0, #0
   25684:	bne	25694 <__assert_fail@plt+0x13f40>
   25688:	movw	r0, #0
   2568c:	str	r0, [fp, #-4]
   25690:	b	25784 <__assert_fail@plt+0x14030>
   25694:	ldr	r0, [sp, #12]
   25698:	ldr	r1, [fp, #-8]
   2569c:	ldr	r2, [r1, #4]
   256a0:	add	r0, r2, r0
   256a4:	str	r0, [r1, #4]
   256a8:	ldr	r0, [fp, #-8]
   256ac:	ldr	r0, [r0, #8]
   256b0:	ldr	r1, [fp, #-16]
   256b4:	ldr	r1, [r0, r1, lsl #2]
   256b8:	ldr	r2, [sp, #20]
   256bc:	add	r0, r0, r2, lsl #2
   256c0:	ldr	r0, [r0]
   256c4:	cmp	r1, r0
   256c8:	ble	2571c <__assert_fail@plt+0x13fc8>
   256cc:	ldr	r0, [fp, #-8]
   256d0:	ldr	r0, [r0, #8]
   256d4:	ldr	r1, [fp, #-16]
   256d8:	sub	r2, r1, #1
   256dc:	str	r2, [fp, #-16]
   256e0:	ldr	r0, [r0, r1, lsl #2]
   256e4:	ldr	r1, [fp, #-8]
   256e8:	ldr	r1, [r1, #8]
   256ec:	ldr	r2, [sp, #20]
   256f0:	ldr	r3, [sp, #12]
   256f4:	sub	ip, r3, #1
   256f8:	str	ip, [sp, #12]
   256fc:	add	r2, r2, r3
   25700:	add	r1, r1, r2, lsl #2
   25704:	str	r0, [r1]
   25708:	ldr	r0, [sp, #12]
   2570c:	cmp	r0, #0
   25710:	bne	25718 <__assert_fail@plt+0x13fc4>
   25714:	b	2577c <__assert_fail@plt+0x14028>
   25718:	b	25778 <__assert_fail@plt+0x14024>
   2571c:	ldr	r0, [fp, #-8]
   25720:	ldr	r0, [r0, #8]
   25724:	ldr	r1, [sp, #20]
   25728:	ldr	r2, [r0, r1, lsl #2]
   2572c:	ldr	r3, [sp, #12]
   25730:	add	r1, r1, r3
   25734:	add	r0, r0, r1, lsl #2
   25738:	str	r2, [r0]
   2573c:	ldr	r0, [sp, #20]
   25740:	mvn	r1, #0
   25744:	add	r0, r0, r1
   25748:	str	r0, [sp, #20]
   2574c:	cmp	r0, #0
   25750:	bge	25774 <__assert_fail@plt+0x14020>
   25754:	ldr	r0, [fp, #-8]
   25758:	ldr	r0, [r0, #8]
   2575c:	ldr	r1, [sp, #16]
   25760:	add	r1, r0, r1, lsl #2
   25764:	ldr	r2, [sp, #12]
   25768:	lsl	r2, r2, #2
   2576c:	bl	11478 <memcpy@plt>
   25770:	b	2577c <__assert_fail@plt+0x14028>
   25774:	b	25778 <__assert_fail@plt+0x14024>
   25778:	b	256a8 <__assert_fail@plt+0x13f54>
   2577c:	movw	r0, #0
   25780:	str	r0, [fp, #-4]
   25784:	ldr	r0, [fp, #-4]
   25788:	mov	sp, fp
   2578c:	pop	{fp, pc}
   25790:	push	{fp, lr}
   25794:	mov	fp, sp
   25798:	sub	sp, sp, #24
   2579c:	str	r0, [fp, #-4]
   257a0:	str	r1, [fp, #-8]
   257a4:	str	r2, [sp, #12]
   257a8:	ldr	r0, [fp, #-4]
   257ac:	ldr	r1, [r0]
   257b0:	ldr	r2, [fp, #-8]
   257b4:	ldr	r2, [r1, r2, lsl #3]!
   257b8:	ldr	r1, [r1, #4]
   257bc:	str	r1, [sp, #4]
   257c0:	mov	r1, r2
   257c4:	ldr	r2, [sp, #4]
   257c8:	bl	24594 <__assert_fail@plt+0x12e40>
   257cc:	str	r0, [sp, #8]
   257d0:	ldr	r0, [sp, #8]
   257d4:	cmn	r0, #1
   257d8:	beq	2586c <__assert_fail@plt+0x14118>
   257dc:	ldr	r0, [sp, #12]
   257e0:	ldr	r1, [fp, #-4]
   257e4:	ldr	r1, [r1]
   257e8:	ldr	r2, [sp, #8]
   257ec:	add	r1, r1, r2, lsl #3
   257f0:	ldr	r2, [r1, #4]
   257f4:	bfc	r0, #10, #22
   257f8:	bfc	r2, #8, #10
   257fc:	orr	r0, r2, r0, lsl #8
   25800:	str	r0, [r1, #4]
   25804:	ldr	r0, [fp, #-4]
   25808:	ldr	r0, [r0]
   2580c:	ldr	r1, [fp, #-8]
   25810:	add	r1, r0, r1, lsl #3
   25814:	ldr	r1, [r1, #4]
   25818:	ldr	r2, [sp, #8]
   2581c:	add	r0, r0, r2, lsl #3
   25820:	ldr	r2, [r0, #4]
   25824:	orr	r1, r2, r1
   25828:	ubfx	r1, r1, #8, #10
   2582c:	bfc	r2, #8, #10
   25830:	orr	r1, r2, r1, lsl #8
   25834:	str	r1, [r0, #4]
   25838:	ldr	r0, [fp, #-4]
   2583c:	ldr	r0, [r0]
   25840:	ldr	r1, [sp, #8]
   25844:	add	r0, r0, r1, lsl #3
   25848:	ldr	r1, [r0, #4]
   2584c:	orr	r1, r1, #262144	; 0x40000
   25850:	str	r1, [r0, #4]
   25854:	ldr	r0, [fp, #-8]
   25858:	ldr	r1, [fp, #-4]
   2585c:	ldr	r1, [r1, #16]
   25860:	ldr	r2, [sp, #8]
   25864:	add	r1, r1, r2, lsl #2
   25868:	str	r0, [r1]
   2586c:	ldr	r0, [sp, #8]
   25870:	mov	sp, fp
   25874:	pop	{fp, pc}
   25878:	push	{fp, lr}
   2587c:	mov	fp, sp
   25880:	sub	sp, sp, #24
   25884:	str	r0, [fp, #-8]
   25888:	str	r1, [sp, #12]
   2588c:	ldr	r0, [fp, #-8]
   25890:	ldr	r0, [r0]
   25894:	cmp	r0, #0
   25898:	bne	258c0 <__assert_fail@plt+0x1416c>
   2589c:	ldr	r0, [fp, #-8]
   258a0:	ldr	r1, [sp, #12]
   258a4:	bl	249ac <__assert_fail@plt+0x13258>
   258a8:	cmp	r0, #0
   258ac:	movw	r0, #0
   258b0:	moveq	r0, #1
   258b4:	and	r0, r0, #1
   258b8:	strb	r0, [fp, #-1]
   258bc:	b	25aa0 <__assert_fail@plt+0x1434c>
   258c0:	ldr	r0, [fp, #-8]
   258c4:	ldr	r0, [r0, #4]
   258c8:	cmp	r0, #0
   258cc:	bne	25918 <__assert_fail@plt+0x141c4>
   258d0:	ldr	r0, [fp, #-8]
   258d4:	ldr	r0, [r0, #8]
   258d8:	movw	r1, #0
   258dc:	cmp	r0, r1
   258e0:	beq	258e8 <__assert_fail@plt+0x14194>
   258e4:	b	258e8 <__assert_fail@plt+0x14194>
   258e8:	ldr	r0, [sp, #12]
   258ec:	ldr	r1, [fp, #-8]
   258f0:	ldr	r1, [r1, #8]
   258f4:	str	r0, [r1]
   258f8:	ldr	r0, [fp, #-8]
   258fc:	ldr	r1, [r0, #4]
   25900:	add	r1, r1, #1
   25904:	str	r1, [r0, #4]
   25908:	movw	r0, #1
   2590c:	and	r0, r0, #1
   25910:	strb	r0, [fp, #-1]
   25914:	b	25aa0 <__assert_fail@plt+0x1434c>
   25918:	ldr	r0, [fp, #-8]
   2591c:	ldr	r0, [r0]
   25920:	ldr	r1, [fp, #-8]
   25924:	ldr	r1, [r1, #4]
   25928:	cmp	r0, r1
   2592c:	bne	25984 <__assert_fail@plt+0x14230>
   25930:	ldr	r0, [fp, #-8]
   25934:	ldr	r1, [r0]
   25938:	lsl	r1, r1, #1
   2593c:	str	r1, [r0]
   25940:	ldr	r0, [fp, #-8]
   25944:	ldr	r1, [r0]
   25948:	ldr	r0, [r0, #8]
   2594c:	lsl	r1, r1, #2
   25950:	bl	381dc <__assert_fail@plt+0x26a88>
   25954:	str	r0, [sp, #4]
   25958:	ldr	r0, [sp, #4]
   2595c:	movw	r1, #0
   25960:	cmp	r0, r1
   25964:	bne	25978 <__assert_fail@plt+0x14224>
   25968:	movw	r0, #0
   2596c:	and	r0, r0, #1
   25970:	strb	r0, [fp, #-1]
   25974:	b	25aa0 <__assert_fail@plt+0x1434c>
   25978:	ldr	r0, [sp, #4]
   2597c:	ldr	r1, [fp, #-8]
   25980:	str	r0, [r1, #8]
   25984:	ldr	r0, [sp, #12]
   25988:	ldr	r1, [fp, #-8]
   2598c:	ldr	r1, [r1, #8]
   25990:	ldr	r1, [r1]
   25994:	cmp	r0, r1
   25998:	bge	259e4 <__assert_fail@plt+0x14290>
   2599c:	ldr	r0, [fp, #-8]
   259a0:	ldr	r0, [r0, #4]
   259a4:	str	r0, [sp, #8]
   259a8:	ldr	r0, [sp, #8]
   259ac:	cmp	r0, #0
   259b0:	ble	259e0 <__assert_fail@plt+0x1428c>
   259b4:	ldr	r0, [fp, #-8]
   259b8:	ldr	r0, [r0, #8]
   259bc:	ldr	r1, [sp, #8]
   259c0:	add	r0, r0, r1, lsl #2
   259c4:	ldr	r1, [r0, #-4]
   259c8:	str	r1, [r0]
   259cc:	ldr	r0, [sp, #8]
   259d0:	mvn	r1, #0
   259d4:	add	r0, r0, r1
   259d8:	str	r0, [sp, #8]
   259dc:	b	259a8 <__assert_fail@plt+0x14254>
   259e0:	b	25a6c <__assert_fail@plt+0x14318>
   259e4:	ldr	r0, [fp, #-8]
   259e8:	ldr	r0, [r0, #4]
   259ec:	str	r0, [sp, #8]
   259f0:	ldr	r0, [fp, #-8]
   259f4:	ldr	r0, [r0, #8]
   259f8:	ldr	r1, [sp, #8]
   259fc:	sub	r1, r1, #1
   25a00:	add	r0, r0, r1, lsl #2
   25a04:	ldr	r0, [r0]
   25a08:	ldr	r1, [sp, #12]
   25a0c:	cmp	r0, r1
   25a10:	ble	25a40 <__assert_fail@plt+0x142ec>
   25a14:	ldr	r0, [fp, #-8]
   25a18:	ldr	r0, [r0, #8]
   25a1c:	ldr	r1, [sp, #8]
   25a20:	add	r0, r0, r1, lsl #2
   25a24:	ldr	r1, [r0, #-4]
   25a28:	str	r1, [r0]
   25a2c:	ldr	r0, [sp, #8]
   25a30:	mvn	r1, #0
   25a34:	add	r0, r0, r1
   25a38:	str	r0, [sp, #8]
   25a3c:	b	259f0 <__assert_fail@plt+0x1429c>
   25a40:	ldr	r0, [fp, #-8]
   25a44:	ldr	r0, [r0, #8]
   25a48:	ldr	r1, [sp, #8]
   25a4c:	sub	r1, r1, #1
   25a50:	add	r0, r0, r1, lsl #2
   25a54:	ldr	r0, [r0]
   25a58:	ldr	r1, [sp, #12]
   25a5c:	cmp	r0, r1
   25a60:	bge	25a68 <__assert_fail@plt+0x14314>
   25a64:	b	25a68 <__assert_fail@plt+0x14314>
   25a68:	b	25a6c <__assert_fail@plt+0x14318>
   25a6c:	ldr	r0, [sp, #12]
   25a70:	ldr	r1, [fp, #-8]
   25a74:	ldr	r1, [r1, #8]
   25a78:	ldr	r2, [sp, #8]
   25a7c:	add	r1, r1, r2, lsl #2
   25a80:	str	r0, [r1]
   25a84:	ldr	r0, [fp, #-8]
   25a88:	ldr	r1, [r0, #4]
   25a8c:	add	r1, r1, #1
   25a90:	str	r1, [r0, #4]
   25a94:	movw	r0, #1
   25a98:	and	r0, r0, #1
   25a9c:	strb	r0, [fp, #-1]
   25aa0:	ldrb	r0, [fp, #-1]
   25aa4:	and	r0, r0, #1
   25aa8:	mov	sp, fp
   25aac:	pop	{fp, pc}
   25ab0:	sub	sp, sp, #24
   25ab4:	str	r0, [sp, #16]
   25ab8:	str	r1, [sp, #12]
   25abc:	str	r2, [sp, #8]
   25ac0:	ldr	r0, [sp, #16]
   25ac4:	ldr	r0, [r0, #8]
   25ac8:	sub	r0, r0, #1
   25acc:	str	r0, [sp, #4]
   25ad0:	ldr	r0, [sp, #16]
   25ad4:	ldr	r0, [r0]
   25ad8:	ldr	r1, [sp, #4]
   25adc:	add	r0, r0, r1, lsl #3
   25ae0:	ldr	r0, [r0, #4]
   25ae4:	lsr	r0, r0, #18
   25ae8:	and	r0, r0, #1
   25aec:	cmp	r0, #0
   25af0:	movw	r0, #0
   25af4:	str	r0, [sp]
   25af8:	beq	25b10 <__assert_fail@plt+0x143bc>
   25afc:	ldr	r0, [sp, #4]
   25b00:	cmp	r0, #0
   25b04:	movw	r0, #0
   25b08:	movgt	r0, #1
   25b0c:	str	r0, [sp]
   25b10:	ldr	r0, [sp]
   25b14:	tst	r0, #1
   25b18:	beq	25b8c <__assert_fail@plt+0x14438>
   25b1c:	ldr	r0, [sp, #12]
   25b20:	ldr	r1, [sp, #16]
   25b24:	ldr	r1, [r1, #16]
   25b28:	ldr	r2, [sp, #4]
   25b2c:	add	r1, r1, r2, lsl #2
   25b30:	ldr	r1, [r1]
   25b34:	cmp	r0, r1
   25b38:	bne	25b74 <__assert_fail@plt+0x14420>
   25b3c:	ldr	r0, [sp, #8]
   25b40:	ldr	r1, [sp, #16]
   25b44:	ldr	r1, [r1]
   25b48:	ldr	r2, [sp, #4]
   25b4c:	add	r1, r1, r2, lsl #3
   25b50:	ldr	r1, [r1, #4]
   25b54:	lsr	r1, r1, #8
   25b58:	movw	r2, #1023	; 0x3ff
   25b5c:	and	r1, r1, r2
   25b60:	cmp	r0, r1
   25b64:	bne	25b74 <__assert_fail@plt+0x14420>
   25b68:	ldr	r0, [sp, #4]
   25b6c:	str	r0, [sp, #20]
   25b70:	b	25b94 <__assert_fail@plt+0x14440>
   25b74:	b	25b78 <__assert_fail@plt+0x14424>
   25b78:	ldr	r0, [sp, #4]
   25b7c:	mvn	r1, #0
   25b80:	add	r0, r0, r1
   25b84:	str	r0, [sp, #4]
   25b88:	b	25ad0 <__assert_fail@plt+0x1437c>
   25b8c:	mvn	r0, #0
   25b90:	str	r0, [sp, #20]
   25b94:	ldr	r0, [sp, #20]
   25b98:	add	sp, sp, #24
   25b9c:	bx	lr
   25ba0:	push	{fp, lr}
   25ba4:	mov	fp, sp
   25ba8:	sub	sp, sp, #16
   25bac:	str	r0, [sp, #8]
   25bb0:	str	r1, [sp, #4]
   25bb4:	ldr	r0, [sp, #8]
   25bb8:	ldr	r0, [r0]
   25bbc:	ldr	r1, [sp, #8]
   25bc0:	ldr	r1, [r1, #4]
   25bc4:	cmp	r0, r1
   25bc8:	bne	25c24 <__assert_fail@plt+0x144d0>
   25bcc:	ldr	r0, [sp, #8]
   25bd0:	ldr	r1, [r0]
   25bd4:	mov	r2, #2
   25bd8:	add	r1, r2, r1, lsl #1
   25bdc:	str	r1, [r0]
   25be0:	ldr	r0, [sp, #8]
   25be4:	ldr	r1, [r0]
   25be8:	ldr	r0, [r0, #8]
   25bec:	lsl	r1, r1, #2
   25bf0:	bl	381dc <__assert_fail@plt+0x26a88>
   25bf4:	str	r0, [sp]
   25bf8:	ldr	r0, [sp]
   25bfc:	movw	r1, #0
   25c00:	cmp	r0, r1
   25c04:	bne	25c18 <__assert_fail@plt+0x144c4>
   25c08:	movw	r0, #0
   25c0c:	and	r0, r0, #1
   25c10:	strb	r0, [fp, #-1]
   25c14:	b	25c50 <__assert_fail@plt+0x144fc>
   25c18:	ldr	r0, [sp]
   25c1c:	ldr	r1, [sp, #8]
   25c20:	str	r0, [r1, #8]
   25c24:	ldr	r0, [sp, #4]
   25c28:	ldr	r1, [sp, #8]
   25c2c:	ldr	r2, [r1, #4]
   25c30:	ldr	r3, [r1, #8]
   25c34:	add	ip, r2, #1
   25c38:	str	ip, [r1, #4]
   25c3c:	add	r1, r3, r2, lsl #2
   25c40:	str	r0, [r1]
   25c44:	movw	r0, #1
   25c48:	and	r0, r0, #1
   25c4c:	strb	r0, [fp, #-1]
   25c50:	ldrb	r0, [fp, #-1]
   25c54:	and	r0, r0, #1
   25c58:	mov	sp, fp
   25c5c:	pop	{fp, pc}
   25c60:	push	{fp, lr}
   25c64:	mov	fp, sp
   25c68:	sub	sp, sp, #16
   25c6c:	str	r0, [sp, #8]
   25c70:	str	r1, [sp, #4]
   25c74:	ldr	r0, [sp, #4]
   25c78:	ldr	r0, [r0, #4]
   25c7c:	ldr	r1, [sp, #8]
   25c80:	str	r0, [r1, #4]
   25c84:	ldr	r0, [sp, #4]
   25c88:	ldr	r0, [r0, #4]
   25c8c:	cmp	r0, #0
   25c90:	ble	25d0c <__assert_fail@plt+0x145b8>
   25c94:	ldr	r0, [sp, #8]
   25c98:	ldr	r1, [r0, #4]
   25c9c:	str	r1, [r0]
   25ca0:	ldr	r0, [sp, #8]
   25ca4:	ldr	r0, [r0]
   25ca8:	lsl	r0, r0, #2
   25cac:	bl	3816c <__assert_fail@plt+0x26a18>
   25cb0:	ldr	r1, [sp, #8]
   25cb4:	str	r0, [r1, #8]
   25cb8:	ldr	r0, [sp, #8]
   25cbc:	ldr	r0, [r0, #8]
   25cc0:	movw	r1, #0
   25cc4:	cmp	r0, r1
   25cc8:	bne	25cec <__assert_fail@plt+0x14598>
   25ccc:	ldr	r0, [sp, #8]
   25cd0:	movw	r1, #0
   25cd4:	str	r1, [r0, #4]
   25cd8:	ldr	r0, [sp, #8]
   25cdc:	str	r1, [r0]
   25ce0:	movw	r0, #12
   25ce4:	str	r0, [fp, #-4]
   25ce8:	b	25d28 <__assert_fail@plt+0x145d4>
   25cec:	ldr	r0, [sp, #8]
   25cf0:	ldr	r0, [r0, #8]
   25cf4:	ldr	r1, [sp, #4]
   25cf8:	ldr	r2, [r1, #4]
   25cfc:	ldr	r1, [r1, #8]
   25d00:	lsl	r2, r2, #2
   25d04:	bl	11478 <memcpy@plt>
   25d08:	b	25d20 <__assert_fail@plt+0x145cc>
   25d0c:	ldr	r0, [sp, #8]
   25d10:	movw	r1, #0
   25d14:	and	r1, r1, #255	; 0xff
   25d18:	movw	r2, #12
   25d1c:	bl	11658 <memset@plt>
   25d20:	movw	r0, #0
   25d24:	str	r0, [fp, #-4]
   25d28:	ldr	r0, [fp, #-4]
   25d2c:	mov	sp, fp
   25d30:	pop	{fp, pc}
   25d34:	sub	sp, sp, #28
   25d38:	str	r0, [sp, #20]
   25d3c:	str	r1, [sp, #16]
   25d40:	ldr	r0, [sp, #20]
   25d44:	ldr	r0, [r0, #4]
   25d48:	cmp	r0, #0
   25d4c:	bgt	25d5c <__assert_fail@plt+0x14608>
   25d50:	movw	r0, #0
   25d54:	str	r0, [sp, #24]
   25d58:	b	25e18 <__assert_fail@plt+0x146c4>
   25d5c:	movw	r0, #0
   25d60:	str	r0, [sp, #12]
   25d64:	ldr	r0, [sp, #20]
   25d68:	ldr	r0, [r0, #4]
   25d6c:	sub	r0, r0, #1
   25d70:	str	r0, [sp, #8]
   25d74:	ldr	r0, [sp, #12]
   25d78:	ldr	r1, [sp, #8]
   25d7c:	cmp	r0, r1
   25d80:	bcs	25dd4 <__assert_fail@plt+0x14680>
   25d84:	ldr	r0, [sp, #12]
   25d88:	ldr	r1, [sp, #8]
   25d8c:	add	r0, r0, r1
   25d90:	lsr	r0, r0, #1
   25d94:	str	r0, [sp, #4]
   25d98:	ldr	r0, [sp, #20]
   25d9c:	ldr	r0, [r0, #8]
   25da0:	ldr	r1, [sp, #4]
   25da4:	add	r0, r0, r1, lsl #2
   25da8:	ldr	r0, [r0]
   25dac:	ldr	r1, [sp, #16]
   25db0:	cmp	r0, r1
   25db4:	bge	25dc8 <__assert_fail@plt+0x14674>
   25db8:	ldr	r0, [sp, #4]
   25dbc:	add	r0, r0, #1
   25dc0:	str	r0, [sp, #12]
   25dc4:	b	25dd0 <__assert_fail@plt+0x1467c>
   25dc8:	ldr	r0, [sp, #4]
   25dcc:	str	r0, [sp, #8]
   25dd0:	b	25d74 <__assert_fail@plt+0x14620>
   25dd4:	ldr	r0, [sp, #20]
   25dd8:	ldr	r0, [r0, #8]
   25ddc:	ldr	r1, [sp, #12]
   25de0:	add	r0, r0, r1, lsl #2
   25de4:	ldr	r0, [r0]
   25de8:	ldr	r1, [sp, #16]
   25dec:	cmp	r0, r1
   25df0:	bne	25e04 <__assert_fail@plt+0x146b0>
   25df4:	ldr	r0, [sp, #12]
   25df8:	add	r0, r0, #1
   25dfc:	str	r0, [sp]
   25e00:	b	25e10 <__assert_fail@plt+0x146bc>
   25e04:	movw	r0, #0
   25e08:	str	r0, [sp]
   25e0c:	b	25e10 <__assert_fail@plt+0x146bc>
   25e10:	ldr	r0, [sp]
   25e14:	str	r0, [sp, #24]
   25e18:	ldr	r0, [sp, #24]
   25e1c:	add	sp, sp, #28
   25e20:	bx	lr
   25e24:	push	{fp, lr}
   25e28:	mov	fp, sp
   25e2c:	sub	sp, sp, #40	; 0x28
   25e30:	str	r0, [fp, #-8]
   25e34:	str	r1, [fp, #-12]
   25e38:	str	r2, [fp, #-16]
   25e3c:	str	r3, [sp, #20]
   25e40:	ldr	r0, [fp, #-16]
   25e44:	ldr	r0, [r0, #4]
   25e48:	cmp	r0, #0
   25e4c:	bne	25e64 <__assert_fail@plt+0x14710>
   25e50:	ldr	r0, [fp, #-8]
   25e54:	movw	r1, #0
   25e58:	str	r1, [r0]
   25e5c:	str	r1, [fp, #-4]
   25e60:	b	25f74 <__assert_fail@plt+0x14820>
   25e64:	ldr	r0, [fp, #-16]
   25e68:	ldr	r1, [sp, #20]
   25e6c:	bl	25f80 <__assert_fail@plt+0x1482c>
   25e70:	str	r0, [sp, #16]
   25e74:	ldr	r0, [fp, #-12]
   25e78:	ldr	r0, [r0, #32]
   25e7c:	ldr	r1, [sp, #16]
   25e80:	ldr	r2, [fp, #-12]
   25e84:	ldr	r2, [r2, #68]	; 0x44
   25e88:	and	r1, r1, r2
   25e8c:	movw	r2, #12
   25e90:	mul	r1, r1, r2
   25e94:	add	r0, r0, r1
   25e98:	str	r0, [sp, #8]
   25e9c:	movw	r0, #0
   25ea0:	str	r0, [sp, #4]
   25ea4:	ldr	r0, [sp, #4]
   25ea8:	ldr	r1, [sp, #8]
   25eac:	ldr	r1, [r1]
   25eb0:	cmp	r0, r1
   25eb4:	bge	25f38 <__assert_fail@plt+0x147e4>
   25eb8:	ldr	r0, [sp, #8]
   25ebc:	ldr	r0, [r0, #8]
   25ec0:	ldr	r1, [sp, #4]
   25ec4:	add	r0, r0, r1, lsl #2
   25ec8:	ldr	r0, [r0]
   25ecc:	str	r0, [sp]
   25ed0:	ldr	r0, [sp]
   25ed4:	ldr	r0, [r0]
   25ed8:	ldr	r1, [sp, #16]
   25edc:	cmp	r0, r1
   25ee0:	bne	25f24 <__assert_fail@plt+0x147d0>
   25ee4:	ldr	r0, [sp]
   25ee8:	ldrb	r0, [r0, #52]	; 0x34
   25eec:	and	r0, r0, #15
   25ef0:	and	r0, r0, #255	; 0xff
   25ef4:	ldr	r1, [sp, #20]
   25ef8:	cmp	r0, r1
   25efc:	bne	25f24 <__assert_fail@plt+0x147d0>
   25f00:	ldr	r0, [sp]
   25f04:	ldr	r0, [r0, #40]	; 0x28
   25f08:	ldr	r1, [fp, #-16]
   25f0c:	bl	25ff8 <__assert_fail@plt+0x148a4>
   25f10:	tst	r0, #1
   25f14:	beq	25f24 <__assert_fail@plt+0x147d0>
   25f18:	ldr	r0, [sp]
   25f1c:	str	r0, [fp, #-4]
   25f20:	b	25f74 <__assert_fail@plt+0x14820>
   25f24:	b	25f28 <__assert_fail@plt+0x147d4>
   25f28:	ldr	r0, [sp, #4]
   25f2c:	add	r0, r0, #1
   25f30:	str	r0, [sp, #4]
   25f34:	b	25ea4 <__assert_fail@plt+0x14750>
   25f38:	ldr	r0, [fp, #-12]
   25f3c:	ldr	r1, [fp, #-16]
   25f40:	ldr	r2, [sp, #20]
   25f44:	ldr	r3, [sp, #16]
   25f48:	bl	260c8 <__assert_fail@plt+0x14974>
   25f4c:	str	r0, [sp, #12]
   25f50:	ldr	r0, [sp, #12]
   25f54:	movw	r1, #0
   25f58:	cmp	r0, r1
   25f5c:	bne	25f6c <__assert_fail@plt+0x14818>
   25f60:	ldr	r0, [fp, #-8]
   25f64:	movw	r1, #12
   25f68:	str	r1, [r0]
   25f6c:	ldr	r0, [sp, #12]
   25f70:	str	r0, [fp, #-4]
   25f74:	ldr	r0, [fp, #-4]
   25f78:	mov	sp, fp
   25f7c:	pop	{fp, pc}
   25f80:	sub	sp, sp, #16
   25f84:	str	r0, [sp, #12]
   25f88:	str	r1, [sp, #8]
   25f8c:	ldr	r0, [sp, #12]
   25f90:	ldr	r0, [r0, #4]
   25f94:	ldr	r1, [sp, #8]
   25f98:	add	r0, r0, r1
   25f9c:	str	r0, [sp, #4]
   25fa0:	movw	r0, #0
   25fa4:	str	r0, [sp]
   25fa8:	ldr	r0, [sp]
   25fac:	ldr	r1, [sp, #12]
   25fb0:	ldr	r1, [r1, #4]
   25fb4:	cmp	r0, r1
   25fb8:	bge	25fec <__assert_fail@plt+0x14898>
   25fbc:	ldr	r0, [sp, #12]
   25fc0:	ldr	r0, [r0, #8]
   25fc4:	ldr	r1, [sp]
   25fc8:	add	r0, r0, r1, lsl #2
   25fcc:	ldr	r0, [r0]
   25fd0:	ldr	r1, [sp, #4]
   25fd4:	add	r0, r1, r0
   25fd8:	str	r0, [sp, #4]
   25fdc:	ldr	r0, [sp]
   25fe0:	add	r0, r0, #1
   25fe4:	str	r0, [sp]
   25fe8:	b	25fa8 <__assert_fail@plt+0x14854>
   25fec:	ldr	r0, [sp, #4]
   25ff0:	add	sp, sp, #16
   25ff4:	bx	lr
   25ff8:	sub	sp, sp, #16
   25ffc:	str	r0, [sp, #8]
   26000:	str	r1, [sp, #4]
   26004:	ldr	r0, [sp, #8]
   26008:	movw	r1, #0
   2600c:	cmp	r0, r1
   26010:	beq	2603c <__assert_fail@plt+0x148e8>
   26014:	ldr	r0, [sp, #4]
   26018:	movw	r1, #0
   2601c:	cmp	r0, r1
   26020:	beq	2603c <__assert_fail@plt+0x148e8>
   26024:	ldr	r0, [sp, #8]
   26028:	ldr	r0, [r0, #4]
   2602c:	ldr	r1, [sp, #4]
   26030:	ldr	r1, [r1, #4]
   26034:	cmp	r0, r1
   26038:	beq	2604c <__assert_fail@plt+0x148f8>
   2603c:	movw	r0, #0
   26040:	and	r0, r0, #1
   26044:	strb	r0, [sp, #15]
   26048:	b	260b8 <__assert_fail@plt+0x14964>
   2604c:	ldr	r0, [sp, #8]
   26050:	ldr	r0, [r0, #4]
   26054:	str	r0, [sp]
   26058:	ldr	r0, [sp]
   2605c:	mvn	r1, #0
   26060:	add	r0, r0, r1
   26064:	str	r0, [sp]
   26068:	cmp	r0, #0
   2606c:	blt	260ac <__assert_fail@plt+0x14958>
   26070:	ldr	r0, [sp, #8]
   26074:	ldr	r0, [r0, #8]
   26078:	ldr	r1, [sp]
   2607c:	ldr	r0, [r0, r1, lsl #2]
   26080:	ldr	r2, [sp, #4]
   26084:	ldr	r2, [r2, #8]
   26088:	add	r1, r2, r1, lsl #2
   2608c:	ldr	r1, [r1]
   26090:	cmp	r0, r1
   26094:	beq	260a8 <__assert_fail@plt+0x14954>
   26098:	movw	r0, #0
   2609c:	and	r0, r0, #1
   260a0:	strb	r0, [sp, #15]
   260a4:	b	260b8 <__assert_fail@plt+0x14964>
   260a8:	b	26058 <__assert_fail@plt+0x14904>
   260ac:	movw	r0, #1
   260b0:	and	r0, r0, #1
   260b4:	strb	r0, [sp, #15]
   260b8:	ldrb	r0, [sp, #15]
   260bc:	and	r0, r0, #1
   260c0:	add	sp, sp, #16
   260c4:	bx	lr
   260c8:	push	{fp, lr}
   260cc:	mov	fp, sp
   260d0:	sub	sp, sp, #56	; 0x38
   260d4:	str	r0, [fp, #-8]
   260d8:	str	r1, [fp, #-12]
   260dc:	str	r2, [fp, #-16]
   260e0:	str	r3, [fp, #-20]	; 0xffffffec
   260e4:	movw	r0, #0
   260e8:	str	r0, [sp, #28]
   260ec:	movw	r0, #56	; 0x38
   260f0:	movw	r1, #1
   260f4:	bl	380d0 <__assert_fail@plt+0x2697c>
   260f8:	str	r0, [sp, #20]
   260fc:	ldr	r0, [sp, #20]
   26100:	movw	r1, #0
   26104:	cmp	r0, r1
   26108:	bne	26118 <__assert_fail@plt+0x149c4>
   2610c:	movw	r0, #0
   26110:	str	r0, [fp, #-4]
   26114:	b	26414 <__assert_fail@plt+0x14cc0>
   26118:	ldr	r0, [sp, #20]
   2611c:	add	r0, r0, #4
   26120:	ldr	r1, [fp, #-12]
   26124:	bl	25c60 <__assert_fail@plt+0x1450c>
   26128:	str	r0, [sp, #24]
   2612c:	ldr	r0, [sp, #24]
   26130:	cmp	r0, #0
   26134:	beq	2614c <__assert_fail@plt+0x149f8>
   26138:	ldr	r0, [sp, #20]
   2613c:	bl	15f68 <__assert_fail@plt+0x4814>
   26140:	movw	r0, #0
   26144:	str	r0, [fp, #-4]
   26148:	b	26414 <__assert_fail@plt+0x14cc0>
   2614c:	ldr	r0, [fp, #-16]
   26150:	ldr	r1, [sp, #20]
   26154:	ldrb	r2, [r1, #52]	; 0x34
   26158:	and	r0, r0, #15
   2615c:	bic	r2, r2, #15
   26160:	orr	r0, r2, r0
   26164:	strb	r0, [r1, #52]	; 0x34
   26168:	ldr	r0, [sp, #20]
   2616c:	add	r0, r0, #4
   26170:	ldr	r1, [sp, #20]
   26174:	str	r0, [r1, #40]	; 0x28
   26178:	movw	r0, #0
   2617c:	str	r0, [fp, #-24]	; 0xffffffe8
   26180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26184:	ldr	r1, [fp, #-12]
   26188:	ldr	r1, [r1, #4]
   2618c:	cmp	r0, r1
   26190:	bge	263dc <__assert_fail@plt+0x14c88>
   26194:	ldr	r0, [fp, #-8]
   26198:	ldr	r0, [r0]
   2619c:	ldr	r1, [fp, #-12]
   261a0:	ldr	r1, [r1, #8]
   261a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   261a8:	ldr	r1, [r1, r2, lsl #2]
   261ac:	add	r0, r0, r1, lsl #3
   261b0:	str	r0, [sp, #16]
   261b4:	ldr	r0, [sp, #16]
   261b8:	ldr	r0, [r0, #4]
   261bc:	and	r0, r0, #255	; 0xff
   261c0:	str	r0, [sp, #12]
   261c4:	ldr	r0, [sp, #16]
   261c8:	ldr	r0, [r0, #4]
   261cc:	lsr	r0, r0, #8
   261d0:	movw	r1, #1023	; 0x3ff
   261d4:	and	r0, r0, r1
   261d8:	str	r0, [sp, #8]
   261dc:	ldr	r0, [sp, #12]
   261e0:	cmp	r0, #1
   261e4:	bne	261f8 <__assert_fail@plt+0x14aa4>
   261e8:	ldr	r0, [sp, #8]
   261ec:	cmp	r0, #0
   261f0:	bne	261f8 <__assert_fail@plt+0x14aa4>
   261f4:	b	263cc <__assert_fail@plt+0x14c78>
   261f8:	ldr	r0, [sp, #16]
   261fc:	ldr	r0, [r0, #4]
   26200:	ldr	r1, [sp, #20]
   26204:	ldrb	r2, [r1, #52]	; 0x34
   26208:	lsr	r3, r2, #5
   2620c:	orr	r0, r3, r0, lsr #20
   26210:	and	r0, r0, #1
   26214:	lsl	r0, r0, #5
   26218:	bic	r2, r2, #32
   2621c:	orr	r0, r2, r0
   26220:	strb	r0, [r1, #52]	; 0x34
   26224:	ldr	r0, [sp, #12]
   26228:	cmp	r0, #2
   2622c:	bne	2624c <__assert_fail@plt+0x14af8>
   26230:	ldr	r0, [sp, #20]
   26234:	ldrb	r1, [r0, #52]	; 0x34
   26238:	bic	r1, r1, #16
   2623c:	movw	r2, #16
   26240:	orr	r1, r1, r2
   26244:	strb	r1, [r0, #52]	; 0x34
   26248:	b	26274 <__assert_fail@plt+0x14b20>
   2624c:	ldr	r0, [sp, #12]
   26250:	cmp	r0, #4
   26254:	bne	26270 <__assert_fail@plt+0x14b1c>
   26258:	ldr	r0, [sp, #20]
   2625c:	ldrb	r1, [r0, #52]	; 0x34
   26260:	bic	r1, r1, #64	; 0x40
   26264:	movw	r2, #64	; 0x40
   26268:	orr	r1, r1, r2
   2626c:	strb	r1, [r0, #52]	; 0x34
   26270:	b	26274 <__assert_fail@plt+0x14b20>
   26274:	ldr	r0, [sp, #8]
   26278:	cmp	r0, #0
   2627c:	beq	263c8 <__assert_fail@plt+0x14c74>
   26280:	ldr	r0, [sp, #20]
   26284:	ldr	r0, [r0, #40]	; 0x28
   26288:	ldr	r1, [sp, #20]
   2628c:	add	r1, r1, #4
   26290:	cmp	r0, r1
   26294:	bne	26320 <__assert_fail@plt+0x14bcc>
   26298:	movw	r0, #12
   2629c:	bl	3816c <__assert_fail@plt+0x26a18>
   262a0:	str	r0, [sp, #4]
   262a4:	ldr	r0, [sp, #4]
   262a8:	movw	r1, #0
   262ac:	cmp	r0, r1
   262b0:	bne	262c8 <__assert_fail@plt+0x14b74>
   262b4:	ldr	r0, [sp, #20]
   262b8:	bl	1b708 <__assert_fail@plt+0x9fb4>
   262bc:	movw	r0, #0
   262c0:	str	r0, [fp, #-4]
   262c4:	b	26414 <__assert_fail@plt+0x14cc0>
   262c8:	ldr	r0, [sp, #4]
   262cc:	ldr	r1, [sp, #20]
   262d0:	str	r0, [r1, #40]	; 0x28
   262d4:	ldr	r0, [sp, #20]
   262d8:	ldr	r0, [r0, #40]	; 0x28
   262dc:	ldr	r1, [fp, #-12]
   262e0:	bl	25c60 <__assert_fail@plt+0x1450c>
   262e4:	cmp	r0, #0
   262e8:	beq	26300 <__assert_fail@plt+0x14bac>
   262ec:	ldr	r0, [sp, #20]
   262f0:	bl	1b708 <__assert_fail@plt+0x9fb4>
   262f4:	movw	r0, #0
   262f8:	str	r0, [fp, #-4]
   262fc:	b	26414 <__assert_fail@plt+0x14cc0>
   26300:	mov	r0, #0
   26304:	str	r0, [sp, #28]
   26308:	ldr	r0, [sp, #20]
   2630c:	ldrb	r1, [r0, #52]	; 0x34
   26310:	and	r1, r1, #127	; 0x7f
   26314:	movw	r2, #128	; 0x80
   26318:	orr	r1, r1, r2
   2631c:	strb	r1, [r0, #52]	; 0x34
   26320:	ldr	r0, [sp, #8]
   26324:	and	r0, r0, #1
   26328:	cmp	r0, #0
   2632c:	beq	26340 <__assert_fail@plt+0x14bec>
   26330:	ldr	r0, [fp, #-16]
   26334:	and	r0, r0, #1
   26338:	cmp	r0, #0
   2633c:	beq	263a0 <__assert_fail@plt+0x14c4c>
   26340:	ldr	r0, [sp, #8]
   26344:	and	r0, r0, #2
   26348:	cmp	r0, #0
   2634c:	beq	26360 <__assert_fail@plt+0x14c0c>
   26350:	ldr	r0, [fp, #-16]
   26354:	and	r0, r0, #1
   26358:	cmp	r0, #0
   2635c:	bne	263a0 <__assert_fail@plt+0x14c4c>
   26360:	ldr	r0, [sp, #8]
   26364:	and	r0, r0, #16
   26368:	cmp	r0, #0
   2636c:	beq	26380 <__assert_fail@plt+0x14c2c>
   26370:	ldr	r0, [fp, #-16]
   26374:	and	r0, r0, #2
   26378:	cmp	r0, #0
   2637c:	beq	263a0 <__assert_fail@plt+0x14c4c>
   26380:	ldr	r0, [sp, #8]
   26384:	and	r0, r0, #64	; 0x40
   26388:	cmp	r0, #0
   2638c:	beq	263c4 <__assert_fail@plt+0x14c70>
   26390:	ldr	r0, [fp, #-16]
   26394:	and	r0, r0, #4
   26398:	cmp	r0, #0
   2639c:	bne	263c4 <__assert_fail@plt+0x14c70>
   263a0:	ldr	r0, [sp, #20]
   263a4:	add	r0, r0, #4
   263a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   263ac:	ldr	r2, [sp, #28]
   263b0:	sub	r1, r1, r2
   263b4:	bl	26420 <__assert_fail@plt+0x14ccc>
   263b8:	ldr	r0, [sp, #28]
   263bc:	add	r0, r0, #1
   263c0:	str	r0, [sp, #28]
   263c4:	b	263c8 <__assert_fail@plt+0x14c74>
   263c8:	b	263cc <__assert_fail@plt+0x14c78>
   263cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   263d0:	add	r0, r0, #1
   263d4:	str	r0, [fp, #-24]	; 0xffffffe8
   263d8:	b	26180 <__assert_fail@plt+0x14a2c>
   263dc:	ldr	r0, [fp, #-8]
   263e0:	ldr	r1, [sp, #20]
   263e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   263e8:	bl	264a8 <__assert_fail@plt+0x14d54>
   263ec:	str	r0, [sp, #24]
   263f0:	ldr	r0, [sp, #24]
   263f4:	cmp	r0, #0
   263f8:	beq	2640c <__assert_fail@plt+0x14cb8>
   263fc:	ldr	r0, [sp, #20]
   26400:	bl	1b708 <__assert_fail@plt+0x9fb4>
   26404:	movw	r0, #0
   26408:	str	r0, [sp, #20]
   2640c:	ldr	r0, [sp, #20]
   26410:	str	r0, [fp, #-4]
   26414:	ldr	r0, [fp, #-4]
   26418:	mov	sp, fp
   2641c:	pop	{fp, pc}
   26420:	sub	sp, sp, #8
   26424:	str	r0, [sp, #4]
   26428:	str	r1, [sp]
   2642c:	ldr	r0, [sp]
   26430:	cmp	r0, #0
   26434:	blt	2644c <__assert_fail@plt+0x14cf8>
   26438:	ldr	r0, [sp]
   2643c:	ldr	r1, [sp, #4]
   26440:	ldr	r1, [r1, #4]
   26444:	cmp	r0, r1
   26448:	blt	26450 <__assert_fail@plt+0x14cfc>
   2644c:	b	264a0 <__assert_fail@plt+0x14d4c>
   26450:	ldr	r0, [sp, #4]
   26454:	ldr	r1, [r0, #4]
   26458:	mvn	r2, #0
   2645c:	add	r1, r1, r2
   26460:	str	r1, [r0, #4]
   26464:	ldr	r0, [sp]
   26468:	ldr	r1, [sp, #4]
   2646c:	ldr	r1, [r1, #4]
   26470:	cmp	r0, r1
   26474:	bge	264a0 <__assert_fail@plt+0x14d4c>
   26478:	ldr	r0, [sp, #4]
   2647c:	ldr	r0, [r0, #8]
   26480:	ldr	r1, [sp]
   26484:	add	r0, r0, r1, lsl #2
   26488:	ldr	r1, [r0, #4]
   2648c:	str	r1, [r0]
   26490:	ldr	r0, [sp]
   26494:	add	r0, r0, #1
   26498:	str	r0, [sp]
   2649c:	b	26464 <__assert_fail@plt+0x14d10>
   264a0:	add	sp, sp, #8
   264a4:	bx	lr
   264a8:	push	{fp, lr}
   264ac:	mov	fp, sp
   264b0:	sub	sp, sp, #40	; 0x28
   264b4:	str	r0, [fp, #-8]
   264b8:	str	r1, [fp, #-12]
   264bc:	str	r2, [fp, #-16]
   264c0:	ldr	r0, [fp, #-16]
   264c4:	ldr	r1, [fp, #-12]
   264c8:	str	r0, [r1]
   264cc:	ldr	r0, [fp, #-12]
   264d0:	add	r0, r0, #16
   264d4:	ldr	r1, [fp, #-12]
   264d8:	ldr	r1, [r1, #8]
   264dc:	bl	24e10 <__assert_fail@plt+0x136bc>
   264e0:	str	r0, [sp, #16]
   264e4:	ldr	r0, [sp, #16]
   264e8:	cmp	r0, #0
   264ec:	beq	264fc <__assert_fail@plt+0x14da8>
   264f0:	movw	r0, #12
   264f4:	str	r0, [fp, #-4]
   264f8:	b	26654 <__assert_fail@plt+0x14f00>
   264fc:	movw	r0, #0
   26500:	str	r0, [sp, #12]
   26504:	ldr	r0, [sp, #12]
   26508:	ldr	r1, [fp, #-12]
   2650c:	ldr	r1, [r1, #8]
   26510:	cmp	r0, r1
   26514:	bge	2658c <__assert_fail@plt+0x14e38>
   26518:	ldr	r0, [fp, #-12]
   2651c:	ldr	r0, [r0, #12]
   26520:	ldr	r1, [sp, #12]
   26524:	ldr	r0, [r0, r1, lsl #2]
   26528:	str	r0, [sp, #8]
   2652c:	ldr	r0, [fp, #-8]
   26530:	ldr	r0, [r0]
   26534:	ldr	r1, [sp, #8]
   26538:	add	r0, r0, r1, lsl #3
   2653c:	ldr	r0, [r0, #4]
   26540:	and	r0, r0, #255	; 0xff
   26544:	and	r0, r0, #8
   26548:	cmp	r0, #0
   2654c:	bne	26578 <__assert_fail@plt+0x14e24>
   26550:	ldr	r0, [fp, #-12]
   26554:	add	r0, r0, #16
   26558:	ldr	r1, [sp, #8]
   2655c:	bl	25ba0 <__assert_fail@plt+0x1444c>
   26560:	tst	r0, #1
   26564:	bne	26574 <__assert_fail@plt+0x14e20>
   26568:	movw	r0, #12
   2656c:	str	r0, [fp, #-4]
   26570:	b	26654 <__assert_fail@plt+0x14f00>
   26574:	b	26578 <__assert_fail@plt+0x14e24>
   26578:	b	2657c <__assert_fail@plt+0x14e28>
   2657c:	ldr	r0, [sp, #12]
   26580:	add	r0, r0, #1
   26584:	str	r0, [sp, #12]
   26588:	b	26504 <__assert_fail@plt+0x14db0>
   2658c:	ldr	r0, [fp, #-8]
   26590:	ldr	r0, [r0, #32]
   26594:	ldr	r1, [fp, #-16]
   26598:	ldr	r2, [fp, #-8]
   2659c:	ldr	r2, [r2, #68]	; 0x44
   265a0:	and	r1, r1, r2
   265a4:	movw	r2, #12
   265a8:	mul	r1, r1, r2
   265ac:	add	r0, r0, r1
   265b0:	str	r0, [sp, #20]
   265b4:	ldr	r0, [sp, #20]
   265b8:	ldr	r0, [r0, #4]
   265bc:	ldr	r1, [sp, #20]
   265c0:	ldr	r1, [r1]
   265c4:	cmp	r0, r1
   265c8:	bgt	2662c <__assert_fail@plt+0x14ed8>
   265cc:	ldr	r0, [sp, #20]
   265d0:	ldr	r0, [r0]
   265d4:	mov	r1, #2
   265d8:	add	r0, r1, r0, lsl #1
   265dc:	str	r0, [sp, #4]
   265e0:	ldr	r0, [sp, #20]
   265e4:	ldr	r0, [r0, #8]
   265e8:	ldr	r1, [sp, #4]
   265ec:	lsl	r1, r1, #2
   265f0:	bl	381dc <__assert_fail@plt+0x26a88>
   265f4:	str	r0, [sp]
   265f8:	ldr	r0, [sp]
   265fc:	movw	r1, #0
   26600:	cmp	r0, r1
   26604:	bne	26614 <__assert_fail@plt+0x14ec0>
   26608:	movw	r0, #12
   2660c:	str	r0, [fp, #-4]
   26610:	b	26654 <__assert_fail@plt+0x14f00>
   26614:	ldr	r0, [sp]
   26618:	ldr	r1, [sp, #20]
   2661c:	str	r0, [r1, #8]
   26620:	ldr	r0, [sp, #4]
   26624:	ldr	r1, [sp, #20]
   26628:	str	r0, [r1, #4]
   2662c:	ldr	r0, [fp, #-12]
   26630:	ldr	r1, [sp, #20]
   26634:	ldr	r2, [r1]
   26638:	ldr	r3, [r1, #8]
   2663c:	add	ip, r2, #1
   26640:	str	ip, [r1]
   26644:	add	r1, r3, r2, lsl #2
   26648:	str	r0, [r1]
   2664c:	movw	r0, #0
   26650:	str	r0, [fp, #-4]
   26654:	ldr	r0, [fp, #-4]
   26658:	mov	sp, fp
   2665c:	pop	{fp, pc}
   26660:	push	{fp, lr}
   26664:	mov	fp, sp
   26668:	sub	sp, sp, #40	; 0x28
   2666c:	str	r0, [fp, #-8]
   26670:	str	r1, [fp, #-12]
   26674:	str	r2, [fp, #-16]
   26678:	str	r3, [sp, #20]
   2667c:	movw	r0, #1
   26680:	str	r0, [sp, #16]
   26684:	ldr	r0, [fp, #-16]
   26688:	add	r0, r0, #1
   2668c:	str	r0, [sp, #8]
   26690:	ldr	r0, [sp, #20]
   26694:	cmp	r0, #0
   26698:	bne	26720 <__assert_fail@plt+0x14fcc>
   2669c:	ldr	r0, [sp, #8]
   266a0:	lsl	r0, r0, #2
   266a4:	bl	3816c <__assert_fail@plt+0x26a18>
   266a8:	ldr	r1, [fp, #-8]
   266ac:	str	r0, [r1, #4]
   266b0:	ldr	r0, [fp, #-8]
   266b4:	ldr	r0, [r0, #4]
   266b8:	movw	r1, #0
   266bc:	cmp	r0, r1
   266c0:	bne	266d0 <__assert_fail@plt+0x14f7c>
   266c4:	movw	r0, #0
   266c8:	str	r0, [fp, #-4]
   266cc:	b	268c8 <__assert_fail@plt+0x15174>
   266d0:	ldr	r0, [sp, #8]
   266d4:	lsl	r0, r0, #2
   266d8:	bl	3816c <__assert_fail@plt+0x26a18>
   266dc:	ldr	r1, [fp, #-8]
   266e0:	str	r0, [r1, #8]
   266e4:	ldr	r0, [fp, #-8]
   266e8:	ldr	r0, [r0, #8]
   266ec:	movw	r1, #0
   266f0:	cmp	r0, r1
   266f4:	bne	26710 <__assert_fail@plt+0x14fbc>
   266f8:	ldr	r0, [fp, #-8]
   266fc:	ldr	r0, [r0, #4]
   26700:	bl	15f68 <__assert_fail@plt+0x4814>
   26704:	movw	r0, #0
   26708:	str	r0, [fp, #-4]
   2670c:	b	268c8 <__assert_fail@plt+0x15174>
   26710:	ldr	r0, [sp, #8]
   26714:	ldr	r1, [fp, #-8]
   26718:	str	r0, [r1]
   2671c:	b	2680c <__assert_fail@plt+0x150b8>
   26720:	ldr	r0, [sp, #20]
   26724:	cmp	r0, #1
   26728:	bne	267d8 <__assert_fail@plt+0x15084>
   2672c:	ldr	r0, [sp, #8]
   26730:	ldr	r1, [fp, #-8]
   26734:	ldr	r1, [r1]
   26738:	cmp	r0, r1
   2673c:	bls	267d4 <__assert_fail@plt+0x15080>
   26740:	ldr	r0, [fp, #-8]
   26744:	ldr	r0, [r0, #4]
   26748:	ldr	r1, [sp, #8]
   2674c:	lsl	r1, r1, #2
   26750:	bl	381dc <__assert_fail@plt+0x26a88>
   26754:	str	r0, [sp, #4]
   26758:	ldr	r0, [sp, #4]
   2675c:	movw	r1, #0
   26760:	cmp	r0, r1
   26764:	bne	26774 <__assert_fail@plt+0x15020>
   26768:	movw	r0, #0
   2676c:	str	r0, [fp, #-4]
   26770:	b	268c8 <__assert_fail@plt+0x15174>
   26774:	ldr	r0, [fp, #-8]
   26778:	ldr	r0, [r0, #8]
   2677c:	ldr	r1, [sp, #8]
   26780:	lsl	r1, r1, #2
   26784:	bl	381dc <__assert_fail@plt+0x26a88>
   26788:	str	r0, [sp]
   2678c:	ldr	r0, [sp]
   26790:	movw	r1, #0
   26794:	cmp	r0, r1
   26798:	bne	267b0 <__assert_fail@plt+0x1505c>
   2679c:	ldr	r0, [sp, #4]
   267a0:	bl	15f68 <__assert_fail@plt+0x4814>
   267a4:	movw	r0, #0
   267a8:	str	r0, [fp, #-4]
   267ac:	b	268c8 <__assert_fail@plt+0x15174>
   267b0:	ldr	r0, [sp, #4]
   267b4:	ldr	r1, [fp, #-8]
   267b8:	str	r0, [r1, #4]
   267bc:	ldr	r0, [sp]
   267c0:	ldr	r1, [fp, #-8]
   267c4:	str	r0, [r1, #8]
   267c8:	ldr	r0, [sp, #8]
   267cc:	ldr	r1, [fp, #-8]
   267d0:	str	r0, [r1]
   267d4:	b	26808 <__assert_fail@plt+0x150b4>
   267d8:	ldr	r0, [sp, #20]
   267dc:	cmp	r0, #2
   267e0:	bne	267e8 <__assert_fail@plt+0x15094>
   267e4:	b	267e8 <__assert_fail@plt+0x15094>
   267e8:	ldr	r0, [fp, #-16]
   267ec:	ldr	r1, [fp, #-8]
   267f0:	ldr	r1, [r1]
   267f4:	cmp	r0, r1
   267f8:	bhi	26800 <__assert_fail@plt+0x150ac>
   267fc:	b	26800 <__assert_fail@plt+0x150ac>
   26800:	movw	r0, #2
   26804:	str	r0, [sp, #16]
   26808:	b	2680c <__assert_fail@plt+0x150b8>
   2680c:	movw	r0, #0
   26810:	str	r0, [sp, #12]
   26814:	ldr	r0, [sp, #12]
   26818:	ldr	r1, [fp, #-16]
   2681c:	cmp	r0, r1
   26820:	bge	2686c <__assert_fail@plt+0x15118>
   26824:	ldr	r0, [fp, #-12]
   26828:	ldr	r1, [sp, #12]
   2682c:	ldr	r0, [r0, r1, lsl #3]
   26830:	ldr	r2, [fp, #-8]
   26834:	ldr	r2, [r2, #4]
   26838:	str	r0, [r2, r1, lsl #2]
   2683c:	ldr	r0, [fp, #-12]
   26840:	ldr	r1, [sp, #12]
   26844:	add	r0, r0, r1, lsl #3
   26848:	ldr	r0, [r0, #4]
   2684c:	ldr	r2, [fp, #-8]
   26850:	ldr	r2, [r2, #8]
   26854:	add	r1, r2, r1, lsl #2
   26858:	str	r0, [r1]
   2685c:	ldr	r0, [sp, #12]
   26860:	add	r0, r0, #1
   26864:	str	r0, [sp, #12]
   26868:	b	26814 <__assert_fail@plt+0x150c0>
   2686c:	b	26870 <__assert_fail@plt+0x1511c>
   26870:	ldr	r0, [sp, #12]
   26874:	ldr	r1, [fp, #-8]
   26878:	ldr	r1, [r1]
   2687c:	cmp	r0, r1
   26880:	bcs	268c0 <__assert_fail@plt+0x1516c>
   26884:	ldr	r0, [fp, #-8]
   26888:	ldr	r0, [r0, #8]
   2688c:	ldr	r1, [sp, #12]
   26890:	mvn	r2, #0
   26894:	str	r2, [r0, r1, lsl #2]
   26898:	ldr	r0, [fp, #-8]
   2689c:	ldr	r0, [r0, #4]
   268a0:	ldr	r1, [sp, #12]
   268a4:	add	r0, r0, r1, lsl #2
   268a8:	mvn	r1, #0
   268ac:	str	r1, [r0]
   268b0:	ldr	r0, [sp, #12]
   268b4:	add	r0, r0, #1
   268b8:	str	r0, [sp, #12]
   268bc:	b	26870 <__assert_fail@plt+0x1511c>
   268c0:	ldr	r0, [sp, #16]
   268c4:	str	r0, [fp, #-4]
   268c8:	ldr	r0, [fp, #-4]
   268cc:	mov	sp, fp
   268d0:	pop	{fp, pc}
   268d4:	push	{r4, sl, fp, lr}
   268d8:	add	fp, sp, #8
   268dc:	sub	sp, sp, #56	; 0x38
   268e0:	ldr	ip, [fp, #16]
   268e4:	ldr	lr, [fp, #12]
   268e8:	ldr	r4, [fp, #8]
   268ec:	str	r0, [fp, #-16]
   268f0:	str	r1, [fp, #-20]	; 0xffffffec
   268f4:	str	r2, [fp, #-24]	; 0xffffffe8
   268f8:	str	r3, [fp, #-28]	; 0xffffffe4
   268fc:	and	r0, lr, #1
   26900:	strb	r0, [fp, #-29]	; 0xffffffe3
   26904:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26908:	ldr	r1, [fp, #16]
   2690c:	ldr	r1, [r1, #92]	; 0x5c
   26910:	cmp	r0, r1
   26914:	bge	26924 <__assert_fail@plt+0x151d0>
   26918:	ldr	r0, [fp, #16]
   2691c:	ldr	r0, [r0, #92]	; 0x5c
   26920:	str	r0, [fp, #-28]	; 0xffffffe4
   26924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26928:	add	r0, r0, #1
   2692c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26930:	cmp	r0, r1
   26934:	bge	26948 <__assert_fail@plt+0x151f4>
   26938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2693c:	add	r0, r0, #1
   26940:	str	r0, [sp, #20]
   26944:	b	26950 <__assert_fail@plt+0x151fc>
   26948:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2694c:	str	r0, [sp, #20]
   26950:	ldr	r0, [sp, #20]
   26954:	str	r0, [sp, #24]
   26958:	ldr	r0, [fp, #-20]	; 0xffffffec
   2695c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26960:	ldr	r2, [fp, #-16]
   26964:	ldr	r3, [fp, #8]
   26968:	ldrb	ip, [fp, #-29]	; 0xffffffe3
   2696c:	ldr	lr, [fp, #16]
   26970:	and	ip, ip, #1
   26974:	str	ip, [sp]
   26978:	str	lr, [sp, #4]
   2697c:	bl	1ccac <__assert_fail@plt+0xb558>
   26980:	ldr	r0, [fp, #-16]
   26984:	ldr	r1, [sp, #24]
   26988:	bl	1cdac <__assert_fail@plt+0xb658>
   2698c:	str	r0, [sp, #28]
   26990:	ldr	r0, [sp, #28]
   26994:	cmp	r0, #0
   26998:	beq	269a8 <__assert_fail@plt+0x15254>
   2699c:	ldr	r0, [sp, #28]
   269a0:	str	r0, [fp, #-12]
   269a4:	b	26a5c <__assert_fail@plt+0x15308>
   269a8:	ldr	r0, [fp, #16]
   269ac:	add	r0, r0, #96	; 0x60
   269b0:	ldr	r1, [fp, #-16]
   269b4:	str	r0, [r1, #68]	; 0x44
   269b8:	ldr	r0, [fp, #16]
   269bc:	ldrb	r0, [r0, #88]	; 0x58
   269c0:	ubfx	r0, r0, #4, #1
   269c4:	and	r0, r0, #255	; 0xff
   269c8:	ldr	r1, [fp, #-16]
   269cc:	strb	r0, [r1, #78]	; 0x4e
   269d0:	ldr	r0, [fp, #-16]
   269d4:	ldrb	r0, [r0, #75]	; 0x4b
   269d8:	cmp	r0, #0
   269dc:	beq	269f0 <__assert_fail@plt+0x1529c>
   269e0:	ldr	r0, [fp, #-16]
   269e4:	ldr	r0, [r0, #4]
   269e8:	str	r0, [sp, #16]
   269ec:	b	269f8 <__assert_fail@plt+0x152a4>
   269f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   269f4:	str	r0, [sp, #16]
   269f8:	ldr	r0, [sp, #16]
   269fc:	ldr	r1, [fp, #-16]
   26a00:	str	r0, [r1, #4]
   26a04:	ldr	r0, [fp, #-16]
   26a08:	ldrb	r0, [r0, #75]	; 0x4b
   26a0c:	cmp	r0, #0
   26a10:	bne	26a24 <__assert_fail@plt+0x152d0>
   26a14:	ldr	r0, [fp, #16]
   26a18:	ldr	r0, [r0, #92]	; 0x5c
   26a1c:	cmp	r0, #1
   26a20:	ble	26a30 <__assert_fail@plt+0x152dc>
   26a24:	movw	r0, #0
   26a28:	str	r0, [sp, #12]
   26a2c:	b	26a38 <__assert_fail@plt+0x152e4>
   26a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26a34:	str	r0, [sp, #12]
   26a38:	ldr	r0, [sp, #12]
   26a3c:	ldr	r1, [fp, #-16]
   26a40:	str	r0, [r1, #28]
   26a44:	ldr	r0, [fp, #-16]
   26a48:	ldr	r0, [r0, #28]
   26a4c:	ldr	r1, [fp, #-16]
   26a50:	str	r0, [r1, #32]
   26a54:	movw	r0, #0
   26a58:	str	r0, [fp, #-12]
   26a5c:	ldr	r0, [fp, #-12]
   26a60:	sub	sp, fp, #8
   26a64:	pop	{r4, sl, fp, pc}
   26a68:	push	{fp, lr}
   26a6c:	mov	fp, sp
   26a70:	sub	sp, sp, #32
   26a74:	str	r0, [fp, #-8]
   26a78:	str	r1, [fp, #-12]
   26a7c:	str	r2, [sp, #16]
   26a80:	ldr	r0, [fp, #-12]
   26a84:	ldr	r1, [fp, #-8]
   26a88:	str	r0, [r1, #88]	; 0x58
   26a8c:	ldr	r0, [fp, #-8]
   26a90:	mvn	r1, #0
   26a94:	str	r1, [r0, #92]	; 0x5c
   26a98:	ldr	r0, [sp, #16]
   26a9c:	cmp	r0, #0
   26aa0:	ble	26b7c <__assert_fail@plt+0x15428>
   26aa4:	ldr	r0, [pc, #264]	; 26bb4 <__assert_fail@plt+0x15460>
   26aa8:	movw	r1, #24
   26aac:	str	r1, [sp, #12]
   26ab0:	ldr	r1, [sp, #12]
   26ab4:	mvn	r2, #0
   26ab8:	udiv	r1, r2, r1
   26abc:	cmp	r0, r1
   26ac0:	bcs	26ad0 <__assert_fail@plt+0x1537c>
   26ac4:	ldr	r0, [pc, #232]	; 26bb4 <__assert_fail@plt+0x15460>
   26ac8:	str	r0, [sp, #8]
   26acc:	b	26ae0 <__assert_fail@plt+0x1538c>
   26ad0:	ldr	r0, [sp, #12]
   26ad4:	mvn	r1, #0
   26ad8:	udiv	r0, r1, r0
   26adc:	str	r0, [sp, #8]
   26ae0:	ldr	r0, [sp, #8]
   26ae4:	ldr	r1, [sp, #16]
   26ae8:	cmp	r0, r1
   26aec:	bcs	26afc <__assert_fail@plt+0x153a8>
   26af0:	movw	r0, #12
   26af4:	str	r0, [fp, #-4]
   26af8:	b	26ba8 <__assert_fail@plt+0x15454>
   26afc:	ldr	r0, [sp, #16]
   26b00:	add	r0, r0, r0, lsl #1
   26b04:	lsl	r0, r0, #3
   26b08:	bl	3816c <__assert_fail@plt+0x26a18>
   26b0c:	ldr	r1, [fp, #-8]
   26b10:	str	r0, [r1, #116]	; 0x74
   26b14:	ldr	r0, [sp, #16]
   26b18:	lsl	r0, r0, #2
   26b1c:	bl	3816c <__assert_fail@plt+0x26a18>
   26b20:	ldr	r1, [fp, #-8]
   26b24:	str	r0, [r1, #132]	; 0x84
   26b28:	ldr	r0, [fp, #-8]
   26b2c:	ldr	r0, [r0, #116]	; 0x74
   26b30:	movw	r1, #0
   26b34:	cmp	r0, r1
   26b38:	movw	r0, #1
   26b3c:	str	r0, [sp, #4]
   26b40:	beq	26b60 <__assert_fail@plt+0x1540c>
   26b44:	ldr	r0, [fp, #-8]
   26b48:	ldr	r0, [r0, #132]	; 0x84
   26b4c:	movw	r1, #0
   26b50:	cmp	r0, r1
   26b54:	movw	r0, #0
   26b58:	moveq	r0, #1
   26b5c:	str	r0, [sp, #4]
   26b60:	ldr	r0, [sp, #4]
   26b64:	tst	r0, #1
   26b68:	beq	26b78 <__assert_fail@plt+0x15424>
   26b6c:	movw	r0, #12
   26b70:	str	r0, [fp, #-4]
   26b74:	b	26ba8 <__assert_fail@plt+0x15454>
   26b78:	b	26b7c <__assert_fail@plt+0x15428>
   26b7c:	ldr	r0, [sp, #16]
   26b80:	ldr	r1, [fp, #-8]
   26b84:	str	r0, [r1, #112]	; 0x70
   26b88:	ldr	r0, [fp, #-8]
   26b8c:	movw	r1, #1
   26b90:	str	r1, [r0, #120]	; 0x78
   26b94:	ldr	r0, [sp, #16]
   26b98:	ldr	r1, [fp, #-8]
   26b9c:	str	r0, [r1, #128]	; 0x80
   26ba0:	movw	r0, #0
   26ba4:	str	r0, [fp, #-4]
   26ba8:	ldr	r0, [fp, #-4]
   26bac:	mov	sp, fp
   26bb0:	pop	{fp, pc}
   26bb4:	svcvc	0x00ffffff
   26bb8:	push	{fp, lr}
   26bbc:	mov	fp, sp
   26bc0:	sub	sp, sp, #128	; 0x80
   26bc4:	str	r0, [fp, #-8]
   26bc8:	str	r1, [fp, #-12]
   26bcc:	str	r2, [fp, #-16]
   26bd0:	ldr	r0, [fp, #-8]
   26bd4:	ldr	r0, [r0, #24]
   26bd8:	ldr	r1, [fp, #-12]
   26bdc:	cmp	r0, r1
   26be0:	bgt	26bfc <__assert_fail@plt+0x154a8>
   26be4:	ldr	r0, [fp, #-12]
   26be8:	ldr	r1, [fp, #-8]
   26bec:	ldr	r1, [r1, #24]
   26bf0:	sub	r0, r0, r1
   26bf4:	str	r0, [fp, #-20]	; 0xffffffec
   26bf8:	b	26cbc <__assert_fail@plt+0x15568>
   26bfc:	ldr	r0, [fp, #-8]
   26c00:	ldr	r0, [r0, #80]	; 0x50
   26c04:	cmp	r0, #1
   26c08:	ble	26c24 <__assert_fail@plt+0x154d0>
   26c0c:	ldr	r0, [fp, #-8]
   26c10:	add	r0, r0, #16
   26c14:	movw	r1, #0
   26c18:	and	r1, r1, #255	; 0xff
   26c1c:	movw	r2, #8
   26c20:	bl	11658 <memset@plt>
   26c24:	ldr	r0, [fp, #-8]
   26c28:	ldr	r0, [r0, #44]	; 0x2c
   26c2c:	ldr	r1, [fp, #-8]
   26c30:	str	r0, [r1, #48]	; 0x30
   26c34:	ldr	r0, [fp, #-8]
   26c38:	ldr	r0, [r0, #52]	; 0x34
   26c3c:	ldr	r1, [fp, #-8]
   26c40:	str	r0, [r1, #56]	; 0x38
   26c44:	ldr	r0, [fp, #-8]
   26c48:	movw	r1, #0
   26c4c:	str	r1, [r0, #28]
   26c50:	ldr	r0, [fp, #-8]
   26c54:	str	r1, [r0, #24]
   26c58:	ldr	r0, [fp, #-8]
   26c5c:	str	r1, [r0, #32]
   26c60:	ldr	r0, [fp, #-8]
   26c64:	movw	r1, #0
   26c68:	strb	r1, [r0, #76]	; 0x4c
   26c6c:	ldr	r0, [fp, #-16]
   26c70:	and	r0, r0, #1
   26c74:	cmp	r0, #0
   26c78:	movw	r0, #0
   26c7c:	movne	r0, #1
   26c80:	tst	r0, #1
   26c84:	movw	r0, #4
   26c88:	moveq	r0, #6
   26c8c:	ldr	r1, [fp, #-8]
   26c90:	str	r0, [r1, #60]	; 0x3c
   26c94:	ldr	r0, [fp, #-8]
   26c98:	ldrsb	r0, [r0, #75]	; 0x4b
   26c9c:	cmp	r0, #0
   26ca0:	bne	26cb4 <__assert_fail@plt+0x15560>
   26ca4:	ldr	r0, [fp, #-8]
   26ca8:	ldr	r0, [r0]
   26cac:	ldr	r1, [fp, #-8]
   26cb0:	str	r0, [r1, #4]
   26cb4:	ldr	r0, [fp, #-12]
   26cb8:	str	r0, [fp, #-20]	; 0xffffffec
   26cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   26cc0:	cmp	r0, #0
   26cc4:	beq	2769c <__assert_fail@plt+0x15f48>
   26cc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   26ccc:	ldr	r1, [fp, #-8]
   26cd0:	ldr	r1, [r1, #32]
   26cd4:	cmp	r0, r1
   26cd8:	bge	27184 <__assert_fail@plt+0x15a30>
   26cdc:	ldr	r0, [fp, #-8]
   26ce0:	ldrb	r0, [r0, #76]	; 0x4c
   26ce4:	cmp	r0, #0
   26ce8:	beq	270b0 <__assert_fail@plt+0x1595c>
   26cec:	movw	r0, #0
   26cf0:	str	r0, [fp, #-24]	; 0xffffffe8
   26cf4:	ldr	r0, [fp, #-8]
   26cf8:	ldr	r0, [r0, #28]
   26cfc:	str	r0, [fp, #-28]	; 0xffffffe4
   26d00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26d08:	add	r0, r0, r1
   26d0c:	add	r0, r0, r0, lsr #31
   26d10:	asr	r0, r0, #1
   26d14:	str	r0, [fp, #-32]	; 0xffffffe0
   26d18:	ldr	r0, [fp, #-8]
   26d1c:	ldr	r0, [r0, #12]
   26d20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26d24:	add	r0, r0, r1, lsl #2
   26d28:	ldr	r0, [r0]
   26d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   26d30:	cmp	r0, r1
   26d34:	ble	26d44 <__assert_fail@plt+0x155f0>
   26d38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26d3c:	str	r0, [fp, #-28]	; 0xffffffe4
   26d40:	b	26d7c <__assert_fail@plt+0x15628>
   26d44:	ldr	r0, [fp, #-8]
   26d48:	ldr	r0, [r0, #12]
   26d4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26d50:	add	r0, r0, r1, lsl #2
   26d54:	ldr	r0, [r0]
   26d58:	ldr	r1, [fp, #-20]	; 0xffffffec
   26d5c:	cmp	r0, r1
   26d60:	bge	26d74 <__assert_fail@plt+0x15620>
   26d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26d68:	add	r0, r0, #1
   26d6c:	str	r0, [fp, #-24]	; 0xffffffe8
   26d70:	b	26d78 <__assert_fail@plt+0x15624>
   26d74:	b	26d90 <__assert_fail@plt+0x1563c>
   26d78:	b	26d7c <__assert_fail@plt+0x15628>
   26d7c:	b	26d80 <__assert_fail@plt+0x1562c>
   26d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26d84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26d88:	cmp	r0, r1
   26d8c:	blt	26d00 <__assert_fail@plt+0x155ac>
   26d90:	ldr	r0, [fp, #-8]
   26d94:	ldr	r0, [r0, #12]
   26d98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26d9c:	add	r0, r0, r1, lsl #2
   26da0:	ldr	r0, [r0]
   26da4:	ldr	r1, [fp, #-20]	; 0xffffffec
   26da8:	cmp	r0, r1
   26dac:	bge	26dbc <__assert_fail@plt+0x15668>
   26db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26db4:	add	r0, r0, #1
   26db8:	str	r0, [fp, #-32]	; 0xffffffe0
   26dbc:	ldr	r0, [fp, #-8]
   26dc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26dc4:	sub	r1, r1, #1
   26dc8:	ldr	r2, [fp, #-16]
   26dcc:	bl	28660 <__assert_fail@plt+0x16f0c>
   26dd0:	ldr	r1, [fp, #-8]
   26dd4:	str	r0, [r1, #60]	; 0x3c
   26dd8:	ldr	r0, [fp, #-8]
   26ddc:	ldr	r0, [r0, #28]
   26de0:	ldr	r1, [fp, #-20]	; 0xffffffec
   26de4:	cmp	r0, r1
   26de8:	ble	26eec <__assert_fail@plt+0x15798>
   26dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26df0:	ldr	r1, [fp, #-20]	; 0xffffffec
   26df4:	cmp	r0, r1
   26df8:	bne	26eec <__assert_fail@plt+0x15798>
   26dfc:	ldr	r0, [fp, #-8]
   26e00:	ldr	r0, [r0, #12]
   26e04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26e08:	add	r0, r0, r1, lsl #2
   26e0c:	ldr	r0, [r0]
   26e10:	ldr	r1, [fp, #-20]	; 0xffffffec
   26e14:	cmp	r0, r1
   26e18:	bne	26eec <__assert_fail@plt+0x15798>
   26e1c:	ldr	r0, [fp, #-8]
   26e20:	ldr	r1, [r0, #8]
   26e24:	ldr	r0, [r0, #28]
   26e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   26e2c:	add	r3, r1, r2, lsl #2
   26e30:	sub	r0, r0, r2
   26e34:	lsl	r2, r0, #2
   26e38:	mov	r0, r1
   26e3c:	mov	r1, r3
   26e40:	bl	11448 <memmove@plt>
   26e44:	ldr	r0, [fp, #-8]
   26e48:	ldr	r0, [r0, #4]
   26e4c:	ldr	r1, [fp, #-8]
   26e50:	ldr	r1, [r1, #4]
   26e54:	ldr	r2, [fp, #-20]	; 0xffffffec
   26e58:	add	r1, r1, r2
   26e5c:	ldr	r2, [fp, #-8]
   26e60:	ldr	r2, [r2, #28]
   26e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   26e68:	sub	r2, r2, r3
   26e6c:	bl	11448 <memmove@plt>
   26e70:	ldr	r0, [fp, #-20]	; 0xffffffec
   26e74:	ldr	r1, [fp, #-8]
   26e78:	ldr	r2, [r1, #28]
   26e7c:	sub	r0, r2, r0
   26e80:	str	r0, [r1, #28]
   26e84:	ldr	r0, [fp, #-20]	; 0xffffffec
   26e88:	ldr	r1, [fp, #-8]
   26e8c:	ldr	r2, [r1, #32]
   26e90:	sub	r0, r2, r0
   26e94:	str	r0, [r1, #32]
   26e98:	movw	r0, #0
   26e9c:	str	r0, [fp, #-24]	; 0xffffffe8
   26ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26ea4:	ldr	r1, [fp, #-8]
   26ea8:	ldr	r1, [r1, #28]
   26eac:	cmp	r0, r1
   26eb0:	bge	26ee8 <__assert_fail@plt+0x15794>
   26eb4:	ldr	r0, [fp, #-8]
   26eb8:	ldr	r0, [r0, #12]
   26ebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26ec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   26ec4:	add	r3, r1, r2
   26ec8:	ldr	r3, [r0, r3, lsl #2]
   26ecc:	sub	r2, r3, r2
   26ed0:	add	r0, r0, r1, lsl #2
   26ed4:	str	r2, [r0]
   26ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26edc:	add	r0, r0, #1
   26ee0:	str	r0, [fp, #-24]	; 0xffffffe8
   26ee4:	b	26ea0 <__assert_fail@plt+0x1574c>
   26ee8:	b	270ac <__assert_fail@plt+0x15958>
   26eec:	ldr	r0, [fp, #-8]
   26ef0:	ldr	r0, [r0, #44]	; 0x2c
   26ef4:	ldr	r1, [fp, #-12]
   26ef8:	sub	r0, r0, r1
   26efc:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f00:	add	r0, r0, r1
   26f04:	ldr	r1, [fp, #-8]
   26f08:	str	r0, [r1, #48]	; 0x30
   26f0c:	ldr	r0, [fp, #-8]
   26f10:	ldr	r0, [r0, #52]	; 0x34
   26f14:	ldr	r1, [fp, #-12]
   26f18:	sub	r0, r0, r1
   26f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f20:	add	r0, r0, r1
   26f24:	ldr	r1, [fp, #-8]
   26f28:	str	r0, [r1, #56]	; 0x38
   26f2c:	ldr	r0, [fp, #-8]
   26f30:	movw	r1, #0
   26f34:	strb	r1, [r0, #76]	; 0x4c
   26f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26f3c:	cmp	r0, #0
   26f40:	movw	r0, #0
   26f44:	str	r0, [sp, #24]
   26f48:	ble	26f78 <__assert_fail@plt+0x15824>
   26f4c:	ldr	r0, [fp, #-8]
   26f50:	ldr	r0, [r0, #12]
   26f54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26f58:	sub	r1, r1, #1
   26f5c:	add	r0, r0, r1, lsl #2
   26f60:	ldr	r0, [r0]
   26f64:	ldr	r1, [fp, #-20]	; 0xffffffec
   26f68:	cmp	r0, r1
   26f6c:	movw	r0, #0
   26f70:	moveq	r0, #1
   26f74:	str	r0, [sp, #24]
   26f78:	ldr	r0, [sp, #24]
   26f7c:	tst	r0, #1
   26f80:	beq	26f98 <__assert_fail@plt+0x15844>
   26f84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26f88:	mvn	r1, #0
   26f8c:	add	r0, r0, r1
   26f90:	str	r0, [fp, #-32]	; 0xffffffe0
   26f94:	b	26f38 <__assert_fail@plt+0x157e4>
   26f98:	b	26f9c <__assert_fail@plt+0x15848>
   26f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26fa0:	ldr	r1, [fp, #-8]
   26fa4:	ldr	r1, [r1, #28]
   26fa8:	cmp	r0, r1
   26fac:	bge	26fe0 <__assert_fail@plt+0x1588c>
   26fb0:	ldr	r0, [fp, #-8]
   26fb4:	ldr	r0, [r0, #8]
   26fb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26fbc:	add	r0, r0, r1, lsl #2
   26fc0:	ldr	r0, [r0]
   26fc4:	cmn	r0, #1
   26fc8:	beq	26fd0 <__assert_fail@plt+0x1587c>
   26fcc:	b	26fe0 <__assert_fail@plt+0x1588c>
   26fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26fd4:	add	r0, r0, #1
   26fd8:	str	r0, [fp, #-32]	; 0xffffffe0
   26fdc:	b	26f9c <__assert_fail@plt+0x15848>
   26fe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26fe4:	ldr	r1, [fp, #-8]
   26fe8:	ldr	r1, [r1, #28]
   26fec:	cmp	r0, r1
   26ff0:	bne	27004 <__assert_fail@plt+0x158b0>
   26ff4:	ldr	r0, [fp, #-8]
   26ff8:	movw	r1, #0
   26ffc:	str	r1, [r0, #28]
   27000:	b	2709c <__assert_fail@plt+0x15948>
   27004:	ldr	r0, [fp, #-8]
   27008:	ldr	r0, [r0, #12]
   2700c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27010:	add	r0, r0, r1, lsl #2
   27014:	ldr	r0, [r0]
   27018:	ldr	r1, [fp, #-20]	; 0xffffffec
   2701c:	sub	r0, r0, r1
   27020:	ldr	r1, [fp, #-8]
   27024:	str	r0, [r1, #28]
   27028:	ldr	r0, [fp, #-8]
   2702c:	ldr	r0, [r0, #28]
   27030:	cmp	r0, #0
   27034:	beq	27098 <__assert_fail@plt+0x15944>
   27038:	movw	r0, #0
   2703c:	str	r0, [fp, #-24]	; 0xffffffe8
   27040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27044:	ldr	r1, [fp, #-8]
   27048:	ldr	r1, [r1, #28]
   2704c:	cmp	r0, r1
   27050:	bge	2707c <__assert_fail@plt+0x15928>
   27054:	ldr	r0, [fp, #-8]
   27058:	ldr	r0, [r0, #8]
   2705c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27060:	add	r0, r0, r1, lsl #2
   27064:	mvn	r1, #0
   27068:	str	r1, [r0]
   2706c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27070:	add	r0, r0, #1
   27074:	str	r0, [fp, #-24]	; 0xffffffe8
   27078:	b	27040 <__assert_fail@plt+0x158ec>
   2707c:	ldr	r0, [fp, #-8]
   27080:	ldr	r0, [r0, #4]
   27084:	ldr	r1, [fp, #-8]
   27088:	ldr	r2, [r1, #28]
   2708c:	movw	r1, #255	; 0xff
   27090:	and	r1, r1, #255	; 0xff
   27094:	bl	11658 <memset@plt>
   27098:	b	2709c <__assert_fail@plt+0x15948>
   2709c:	ldr	r0, [fp, #-8]
   270a0:	ldr	r0, [r0, #28]
   270a4:	ldr	r1, [fp, #-8]
   270a8:	str	r0, [r1, #32]
   270ac:	b	27180 <__assert_fail@plt+0x15a2c>
   270b0:	ldr	r0, [fp, #-8]
   270b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   270b8:	sub	r1, r1, #1
   270bc:	ldr	r2, [fp, #-16]
   270c0:	bl	28660 <__assert_fail@plt+0x16f0c>
   270c4:	ldr	r1, [fp, #-8]
   270c8:	str	r0, [r1, #60]	; 0x3c
   270cc:	ldr	r0, [fp, #-8]
   270d0:	ldr	r0, [r0, #80]	; 0x50
   270d4:	cmp	r0, #1
   270d8:	ble	27104 <__assert_fail@plt+0x159b0>
   270dc:	ldr	r0, [fp, #-8]
   270e0:	ldr	r1, [r0, #8]
   270e4:	ldr	r0, [r0, #28]
   270e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   270ec:	add	r3, r1, r2, lsl #2
   270f0:	sub	r0, r0, r2
   270f4:	lsl	r2, r0, #2
   270f8:	mov	r0, r1
   270fc:	mov	r1, r3
   27100:	bl	11448 <memmove@plt>
   27104:	ldr	r0, [fp, #-8]
   27108:	ldrb	r0, [r0, #75]	; 0x4b
   2710c:	cmp	r0, #0
   27110:	beq	27140 <__assert_fail@plt+0x159ec>
   27114:	ldr	r0, [fp, #-8]
   27118:	ldr	r0, [r0, #4]
   2711c:	ldr	r1, [fp, #-8]
   27120:	ldr	r1, [r1, #4]
   27124:	ldr	r2, [fp, #-20]	; 0xffffffec
   27128:	add	r1, r1, r2
   2712c:	ldr	r2, [fp, #-8]
   27130:	ldr	r2, [r2, #28]
   27134:	ldr	r3, [fp, #-20]	; 0xffffffec
   27138:	sub	r2, r2, r3
   2713c:	bl	11448 <memmove@plt>
   27140:	ldr	r0, [fp, #-20]	; 0xffffffec
   27144:	ldr	r1, [fp, #-8]
   27148:	ldr	r2, [r1, #28]
   2714c:	sub	r0, r2, r0
   27150:	str	r0, [r1, #28]
   27154:	ldr	r0, [fp, #-20]	; 0xffffffec
   27158:	ldr	r1, [fp, #-8]
   2715c:	ldr	r2, [r1, #32]
   27160:	sub	r0, r2, r0
   27164:	str	r0, [r1, #32]
   27168:	ldr	r0, [fp, #-8]
   2716c:	ldr	r0, [r0, #28]
   27170:	cmp	r0, #0
   27174:	ble	2717c <__assert_fail@plt+0x15a28>
   27178:	b	2717c <__assert_fail@plt+0x15a28>
   2717c:	b	27180 <__assert_fail@plt+0x15a2c>
   27180:	b	27674 <__assert_fail@plt+0x15f20>
   27184:	ldr	r0, [fp, #-8]
   27188:	ldr	r0, [r0, #28]
   2718c:	str	r0, [fp, #-36]	; 0xffffffdc
   27190:	ldr	r0, [fp, #-8]
   27194:	ldrb	r0, [r0, #76]	; 0x4c
   27198:	cmp	r0, #0
   2719c:	beq	271ec <__assert_fail@plt+0x15a98>
   271a0:	ldr	r0, [fp, #-8]
   271a4:	ldr	r0, [r0, #44]	; 0x2c
   271a8:	ldr	r1, [fp, #-12]
   271ac:	sub	r0, r0, r1
   271b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   271b4:	add	r0, r0, r1
   271b8:	ldr	r1, [fp, #-8]
   271bc:	str	r0, [r1, #48]	; 0x30
   271c0:	ldr	r0, [fp, #-8]
   271c4:	ldr	r0, [r0, #52]	; 0x34
   271c8:	ldr	r1, [fp, #-12]
   271cc:	sub	r0, r0, r1
   271d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   271d4:	add	r0, r0, r1
   271d8:	ldr	r1, [fp, #-8]
   271dc:	str	r0, [r1, #56]	; 0x38
   271e0:	ldr	r0, [fp, #-8]
   271e4:	movw	r1, #0
   271e8:	strb	r1, [r0, #76]	; 0x4c
   271ec:	ldr	r0, [fp, #-8]
   271f0:	movw	r1, #0
   271f4:	str	r1, [r0, #28]
   271f8:	ldr	r0, [fp, #-8]
   271fc:	ldr	r0, [r0, #80]	; 0x50
   27200:	cmp	r0, #1
   27204:	ble	275a4 <__assert_fail@plt+0x15e50>
   27208:	mvn	r0, #0
   2720c:	str	r0, [fp, #-44]	; 0xffffffd4
   27210:	ldr	r0, [fp, #-8]
   27214:	ldrsb	r0, [r0, #73]	; 0x49
   27218:	cmp	r0, #0
   2721c:	beq	27430 <__assert_fail@plt+0x15cdc>
   27220:	ldr	r0, [fp, #-8]
   27224:	ldr	r0, [r0]
   27228:	ldr	r1, [fp, #-8]
   2722c:	ldr	r1, [r1, #24]
   27230:	add	r0, r0, r1
   27234:	str	r0, [fp, #-48]	; 0xffffffd0
   27238:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2723c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27240:	ldr	r2, [fp, #-8]
   27244:	ldr	r2, [r2, #80]	; 0x50
   27248:	sub	r1, r1, r2
   2724c:	add	r0, r0, r1
   27250:	str	r0, [fp, #-56]	; 0xffffffc8
   27254:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27258:	ldr	r1, [fp, #-8]
   2725c:	ldr	r1, [r1]
   27260:	cmp	r0, r1
   27264:	bcs	27274 <__assert_fail@plt+0x15b20>
   27268:	ldr	r0, [fp, #-8]
   2726c:	ldr	r0, [r0]
   27270:	str	r0, [fp, #-56]	; 0xffffffc8
   27274:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27278:	ldr	r1, [fp, #-20]	; 0xffffffec
   2727c:	add	r0, r0, r1
   27280:	mvn	r1, #0
   27284:	add	r0, r0, r1
   27288:	str	r0, [fp, #-52]	; 0xffffffcc
   2728c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27290:	ldr	r1, [fp, #-56]	; 0xffffffc8
   27294:	cmp	r0, r1
   27298:	bcc	2742c <__assert_fail@plt+0x15cd8>
   2729c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   272a0:	ldrb	r0, [r0]
   272a4:	and	r0, r0, #192	; 0xc0
   272a8:	cmp	r0, #128	; 0x80
   272ac:	beq	27414 <__assert_fail@plt+0x15cc0>
   272b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   272b4:	ldr	r1, [fp, #-8]
   272b8:	ldr	r1, [r1, #48]	; 0x30
   272bc:	add	r0, r0, r1
   272c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   272c4:	sub	r0, r0, r1
   272c8:	str	r0, [sp, #56]	; 0x38
   272cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   272d0:	str	r0, [sp, #40]	; 0x28
   272d4:	ldr	r0, [fp, #-8]
   272d8:	ldr	r0, [r0, #64]	; 0x40
   272dc:	movw	r1, #0
   272e0:	cmp	r0, r1
   272e4:	beq	27368 <__assert_fail@plt+0x15c14>
   272e8:	ldr	r0, [sp, #56]	; 0x38
   272ec:	cmp	r0, #6
   272f0:	bge	27300 <__assert_fail@plt+0x15bac>
   272f4:	ldr	r0, [sp, #56]	; 0x38
   272f8:	str	r0, [sp, #20]
   272fc:	b	2730c <__assert_fail@plt+0x15bb8>
   27300:	movw	r0, #6
   27304:	str	r0, [sp, #20]
   27308:	b	2730c <__assert_fail@plt+0x15bb8>
   2730c:	ldr	r0, [sp, #20]
   27310:	str	r0, [sp, #36]	; 0x24
   27314:	ldr	r0, [sp, #36]	; 0x24
   27318:	mvn	r1, #0
   2731c:	add	r0, r0, r1
   27320:	str	r0, [sp, #36]	; 0x24
   27324:	cmp	r0, #0
   27328:	blt	27360 <__assert_fail@plt+0x15c0c>
   2732c:	ldr	r0, [fp, #-8]
   27330:	ldr	r0, [r0, #64]	; 0x40
   27334:	ldr	r1, [fp, #-52]	; 0xffffffcc
   27338:	ldr	r2, [sp, #36]	; 0x24
   2733c:	add	r1, r1, r2
   27340:	ldrb	r1, [r1]
   27344:	add	r0, r0, r1
   27348:	ldrb	r0, [r0]
   2734c:	ldr	r1, [sp, #36]	; 0x24
   27350:	add	r2, sp, #50	; 0x32
   27354:	add	r1, r2, r1
   27358:	strb	r0, [r1]
   2735c:	b	27314 <__assert_fail@plt+0x15bc0>
   27360:	add	r0, sp, #50	; 0x32
   27364:	str	r0, [sp, #40]	; 0x28
   27368:	add	r0, sp, #64	; 0x40
   2736c:	mov	r1, r0
   27370:	str	r0, [sp, #16]
   27374:	mov	r0, r1
   27378:	movw	r1, #0
   2737c:	and	r1, r1, #255	; 0xff
   27380:	movw	r2, #8
   27384:	bl	11658 <memset@plt>
   27388:	ldr	r1, [sp, #40]	; 0x28
   2738c:	ldr	r2, [sp, #56]	; 0x38
   27390:	add	r0, sp, #60	; 0x3c
   27394:	ldr	r3, [sp, #16]
   27398:	bl	39e50 <__assert_fail@plt+0x286fc>
   2739c:	str	r0, [sp, #44]	; 0x2c
   273a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   273a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   273a8:	add	r0, r0, r1
   273ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   273b0:	sub	r0, r0, r1
   273b4:	ldr	r1, [sp, #44]	; 0x2c
   273b8:	cmp	r0, r1
   273bc:	bhi	27410 <__assert_fail@plt+0x15cbc>
   273c0:	ldr	r0, [sp, #44]	; 0x2c
   273c4:	cmn	r0, #2
   273c8:	bcs	27410 <__assert_fail@plt+0x15cbc>
   273cc:	ldr	r0, [fp, #-8]
   273d0:	add	r0, r0, #16
   273d4:	movw	r1, #0
   273d8:	and	r1, r1, #255	; 0xff
   273dc:	movw	r2, #8
   273e0:	bl	11658 <memset@plt>
   273e4:	ldr	r0, [sp, #44]	; 0x2c
   273e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   273ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   273f0:	add	r1, r1, r2
   273f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   273f8:	sub	r1, r1, r2
   273fc:	sub	r0, r0, r1
   27400:	ldr	r1, [fp, #-8]
   27404:	str	r0, [r1, #28]
   27408:	ldr	r0, [sp, #60]	; 0x3c
   2740c:	str	r0, [fp, #-44]	; 0xffffffd4
   27410:	b	2742c <__assert_fail@plt+0x15cd8>
   27414:	b	27418 <__assert_fail@plt+0x15cc4>
   27418:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2741c:	mvn	r1, #0
   27420:	add	r0, r0, r1
   27424:	str	r0, [fp, #-52]	; 0xffffffcc
   27428:	b	2728c <__assert_fail@plt+0x15b38>
   2742c:	b	27430 <__assert_fail@plt+0x15cdc>
   27430:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27434:	cmn	r0, #1
   27438:	bne	2745c <__assert_fail@plt+0x15d08>
   2743c:	ldr	r0, [fp, #-8]
   27440:	ldr	r1, [fp, #-12]
   27444:	sub	r2, fp, #44	; 0x2c
   27448:	bl	28860 <__assert_fail@plt+0x1710c>
   2744c:	ldr	r1, [fp, #-12]
   27450:	sub	r0, r0, r1
   27454:	ldr	r1, [fp, #-8]
   27458:	str	r0, [r1, #28]
   2745c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27460:	cmn	r0, #1
   27464:	bne	27488 <__assert_fail@plt+0x15d34>
   27468:	ldr	r0, [fp, #-8]
   2746c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27470:	sub	r1, r1, #1
   27474:	ldr	r2, [fp, #-16]
   27478:	bl	28660 <__assert_fail@plt+0x16f0c>
   2747c:	ldr	r1, [fp, #-8]
   27480:	str	r0, [r1, #60]	; 0x3c
   27484:	b	2750c <__assert_fail@plt+0x15db8>
   27488:	ldr	r0, [fp, #-8]
   2748c:	ldrb	r0, [r0, #78]	; 0x4e
   27490:	cmp	r0, #0
   27494:	beq	274c0 <__assert_fail@plt+0x15d6c>
   27498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2749c:	bl	11634 <iswalnum@plt>
   274a0:	cmp	r0, #0
   274a4:	bne	274b4 <__assert_fail@plt+0x15d60>
   274a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   274ac:	cmp	r0, #95	; 0x5f
   274b0:	bne	274c0 <__assert_fail@plt+0x15d6c>
   274b4:	movw	r0, #1
   274b8:	str	r0, [sp, #12]
   274bc:	b	27500 <__assert_fail@plt+0x15dac>
   274c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   274c4:	cmp	r0, #10
   274c8:	movw	r0, #0
   274cc:	str	r0, [sp, #8]
   274d0:	bne	274ec <__assert_fail@plt+0x15d98>
   274d4:	ldr	r0, [fp, #-8]
   274d8:	ldrb	r0, [r0, #77]	; 0x4d
   274dc:	cmp	r0, #0
   274e0:	movw	r0, #0
   274e4:	movne	r0, #1
   274e8:	str	r0, [sp, #8]
   274ec:	ldr	r0, [sp, #8]
   274f0:	tst	r0, #1
   274f4:	movw	r0, #2
   274f8:	moveq	r0, #0
   274fc:	str	r0, [sp, #12]
   27500:	ldr	r0, [sp, #12]
   27504:	ldr	r1, [fp, #-8]
   27508:	str	r0, [r1, #60]	; 0x3c
   2750c:	ldr	r0, [fp, #-8]
   27510:	ldr	r0, [r0, #28]
   27514:	cmp	r0, #0
   27518:	beq	27590 <__assert_fail@plt+0x15e3c>
   2751c:	movw	r0, #0
   27520:	str	r0, [fp, #-40]	; 0xffffffd8
   27524:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27528:	ldr	r1, [fp, #-8]
   2752c:	ldr	r1, [r1, #28]
   27530:	cmp	r0, r1
   27534:	bge	27560 <__assert_fail@plt+0x15e0c>
   27538:	ldr	r0, [fp, #-8]
   2753c:	ldr	r0, [r0, #8]
   27540:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27544:	add	r0, r0, r1, lsl #2
   27548:	mvn	r1, #0
   2754c:	str	r1, [r0]
   27550:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27554:	add	r0, r0, #1
   27558:	str	r0, [fp, #-40]	; 0xffffffd8
   2755c:	b	27524 <__assert_fail@plt+0x15dd0>
   27560:	ldr	r0, [fp, #-8]
   27564:	ldrsb	r0, [r0, #75]	; 0x4b
   27568:	cmp	r0, #0
   2756c:	beq	2758c <__assert_fail@plt+0x15e38>
   27570:	ldr	r0, [fp, #-8]
   27574:	ldr	r0, [r0, #4]
   27578:	ldr	r1, [fp, #-8]
   2757c:	ldr	r2, [r1, #28]
   27580:	movw	r1, #255	; 0xff
   27584:	and	r1, r1, #255	; 0xff
   27588:	bl	11658 <memset@plt>
   2758c:	b	27590 <__assert_fail@plt+0x15e3c>
   27590:	ldr	r0, [fp, #-8]
   27594:	ldr	r0, [r0, #28]
   27598:	ldr	r1, [fp, #-8]
   2759c:	str	r0, [r1, #32]
   275a0:	b	27670 <__assert_fail@plt+0x15f1c>
   275a4:	ldr	r0, [fp, #-8]
   275a8:	ldr	r0, [r0]
   275ac:	ldr	r1, [fp, #-8]
   275b0:	ldr	r1, [r1, #24]
   275b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   275b8:	add	r1, r1, r2
   275bc:	sub	r1, r1, #1
   275c0:	add	r0, r0, r1
   275c4:	ldrb	r0, [r0]
   275c8:	str	r0, [sp, #32]
   275cc:	ldr	r0, [fp, #-8]
   275d0:	movw	r1, #0
   275d4:	str	r1, [r0, #32]
   275d8:	ldr	r0, [fp, #-8]
   275dc:	ldr	r0, [r0, #64]	; 0x40
   275e0:	cmp	r0, r1
   275e4:	beq	27600 <__assert_fail@plt+0x15eac>
   275e8:	ldr	r0, [fp, #-8]
   275ec:	ldr	r0, [r0, #64]	; 0x40
   275f0:	ldr	r1, [sp, #32]
   275f4:	add	r0, r0, r1
   275f8:	ldrb	r0, [r0]
   275fc:	str	r0, [sp, #32]
   27600:	ldr	r0, [fp, #-8]
   27604:	ldr	r0, [r0, #68]	; 0x44
   27608:	ldr	r1, [sp, #32]
   2760c:	bl	289d0 <__assert_fail@plt+0x1727c>
   27610:	tst	r0, #1
   27614:	beq	27624 <__assert_fail@plt+0x15ed0>
   27618:	movw	r0, #1
   2761c:	str	r0, [sp, #4]
   27620:	b	27664 <__assert_fail@plt+0x15f10>
   27624:	ldr	r0, [sp, #32]
   27628:	cmp	r0, #10
   2762c:	movw	r0, #0
   27630:	str	r0, [sp]
   27634:	bne	27650 <__assert_fail@plt+0x15efc>
   27638:	ldr	r0, [fp, #-8]
   2763c:	ldrb	r0, [r0, #77]	; 0x4d
   27640:	cmp	r0, #0
   27644:	movw	r0, #0
   27648:	movne	r0, #1
   2764c:	str	r0, [sp]
   27650:	ldr	r0, [sp]
   27654:	tst	r0, #1
   27658:	movw	r0, #2
   2765c:	moveq	r0, #0
   27660:	str	r0, [sp, #4]
   27664:	ldr	r0, [sp, #4]
   27668:	ldr	r1, [fp, #-8]
   2766c:	str	r0, [r1, #60]	; 0x3c
   27670:	b	27674 <__assert_fail@plt+0x15f20>
   27674:	ldr	r0, [fp, #-8]
   27678:	ldrb	r0, [r0, #75]	; 0x4b
   2767c:	cmp	r0, #0
   27680:	bne	27698 <__assert_fail@plt+0x15f44>
   27684:	ldr	r0, [fp, #-20]	; 0xffffffec
   27688:	ldr	r1, [fp, #-8]
   2768c:	ldr	r2, [r1, #4]
   27690:	add	r0, r2, r0
   27694:	str	r0, [r1, #4]
   27698:	b	2769c <__assert_fail@plt+0x15f48>
   2769c:	ldr	r0, [fp, #-12]
   276a0:	ldr	r1, [fp, #-8]
   276a4:	str	r0, [r1, #24]
   276a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   276ac:	ldr	r1, [fp, #-8]
   276b0:	ldr	r2, [r1, #48]	; 0x30
   276b4:	sub	r0, r2, r0
   276b8:	str	r0, [r1, #48]	; 0x30
   276bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   276c0:	ldr	r1, [fp, #-8]
   276c4:	ldr	r2, [r1, #56]	; 0x38
   276c8:	sub	r0, r2, r0
   276cc:	str	r0, [r1, #56]	; 0x38
   276d0:	ldr	r0, [fp, #-8]
   276d4:	ldr	r0, [r0, #80]	; 0x50
   276d8:	cmp	r0, #1
   276dc:	ble	27724 <__assert_fail@plt+0x15fd0>
   276e0:	ldr	r0, [fp, #-8]
   276e4:	ldrsb	r0, [r0, #72]	; 0x48
   276e8:	cmp	r0, #0
   276ec:	beq	27718 <__assert_fail@plt+0x15fc4>
   276f0:	ldr	r0, [fp, #-8]
   276f4:	bl	1cf04 <__assert_fail@plt+0xb7b0>
   276f8:	str	r0, [sp, #28]
   276fc:	ldr	r0, [sp, #28]
   27700:	cmp	r0, #0
   27704:	beq	27714 <__assert_fail@plt+0x15fc0>
   27708:	ldr	r0, [sp, #28]
   2770c:	str	r0, [fp, #-4]
   27710:	b	27798 <__assert_fail@plt+0x16044>
   27714:	b	27720 <__assert_fail@plt+0x15fcc>
   27718:	ldr	r0, [fp, #-8]
   2771c:	bl	1dab0 <__assert_fail@plt+0xc35c>
   27720:	b	27788 <__assert_fail@plt+0x16034>
   27724:	ldr	r0, [fp, #-8]
   27728:	ldrb	r0, [r0, #75]	; 0x4b
   2772c:	cmp	r0, #0
   27730:	beq	27774 <__assert_fail@plt+0x16020>
   27734:	ldr	r0, [fp, #-8]
   27738:	ldrsb	r0, [r0, #72]	; 0x48
   2773c:	cmp	r0, #0
   27740:	beq	27750 <__assert_fail@plt+0x15ffc>
   27744:	ldr	r0, [fp, #-8]
   27748:	bl	1d9ac <__assert_fail@plt+0xc258>
   2774c:	b	27770 <__assert_fail@plt+0x1601c>
   27750:	ldr	r0, [fp, #-8]
   27754:	ldr	r0, [r0, #64]	; 0x40
   27758:	movw	r1, #0
   2775c:	cmp	r0, r1
   27760:	beq	2776c <__assert_fail@plt+0x16018>
   27764:	ldr	r0, [fp, #-8]
   27768:	bl	1ddf0 <__assert_fail@plt+0xc69c>
   2776c:	b	27770 <__assert_fail@plt+0x1601c>
   27770:	b	27784 <__assert_fail@plt+0x16030>
   27774:	ldr	r0, [fp, #-8]
   27778:	ldr	r0, [r0, #48]	; 0x30
   2777c:	ldr	r1, [fp, #-8]
   27780:	str	r0, [r1, #28]
   27784:	b	27788 <__assert_fail@plt+0x16034>
   27788:	ldr	r0, [fp, #-8]
   2778c:	movw	r1, #0
   27790:	str	r1, [r0, #40]	; 0x28
   27794:	str	r1, [fp, #-4]
   27798:	ldr	r0, [fp, #-4]
   2779c:	mov	sp, fp
   277a0:	pop	{fp, pc}
   277a4:	push	{fp, lr}
   277a8:	mov	fp, sp
   277ac:	sub	sp, sp, #80	; 0x50
   277b0:	str	r0, [fp, #-32]	; 0xffffffe0
   277b4:	and	r0, r1, #1
   277b8:	strb	r0, [fp, #-33]	; 0xffffffdf
   277bc:	str	r2, [sp, #40]	; 0x28
   277c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   277c4:	ldr	r0, [r0, #84]	; 0x54
   277c8:	str	r0, [sp, #36]	; 0x24
   277cc:	mov	r0, #0
   277d0:	str	r0, [sp, #28]
   277d4:	mvn	r1, #0
   277d8:	str	r1, [sp, #24]
   277dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   277e0:	ldr	r1, [r1, #40]	; 0x28
   277e4:	str	r1, [sp, #20]
   277e8:	ldr	r1, [sp, #40]	; 0x28
   277ec:	cmp	r1, #0
   277f0:	movwne	r1, #1
   277f4:	strb	r1, [sp, #15]
   277f8:	ldr	r1, [sp, #20]
   277fc:	str	r1, [sp, #8]
   27800:	str	r0, [sp, #32]
   27804:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27808:	ldr	r1, [sp, #20]
   2780c:	add	r2, sp, #32
   27810:	str	r2, [fp, #-8]
   27814:	str	r0, [fp, #-12]
   27818:	str	r1, [fp, #-16]
   2781c:	ldr	r0, [fp, #-12]
   27820:	ldr	r0, [r0, #84]	; 0x54
   27824:	str	r0, [fp, #-20]	; 0xffffffec
   27828:	ldr	r0, [fp, #-20]	; 0xffffffec
   2782c:	ldr	r0, [r0, #36]	; 0x24
   27830:	ldrb	r0, [r0, #52]	; 0x34
   27834:	lsr	r0, r0, #7
   27838:	and	r0, r0, #255	; 0xff
   2783c:	cmp	r0, #0
   27840:	beq	27930 <__assert_fail@plt+0x161dc>
   27844:	ldr	r0, [fp, #-12]
   27848:	ldr	r1, [fp, #-16]
   2784c:	sub	r1, r1, #1
   27850:	ldr	r2, [fp, #-12]
   27854:	ldr	r2, [r2, #88]	; 0x58
   27858:	bl	28660 <__assert_fail@plt+0x16f0c>
   2785c:	str	r0, [fp, #-24]	; 0xffffffe8
   27860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27864:	and	r0, r0, #1
   27868:	cmp	r0, #0
   2786c:	beq	27880 <__assert_fail@plt+0x1612c>
   27870:	ldr	r0, [fp, #-20]	; 0xffffffec
   27874:	ldr	r0, [r0, #40]	; 0x28
   27878:	str	r0, [fp, #-4]
   2787c:	b	2793c <__assert_fail@plt+0x161e8>
   27880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27884:	cmp	r0, #0
   27888:	bne	2789c <__assert_fail@plt+0x16148>
   2788c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27890:	ldr	r0, [r0, #36]	; 0x24
   27894:	str	r0, [fp, #-4]
   27898:	b	2793c <__assert_fail@plt+0x161e8>
   2789c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   278a0:	and	r0, r0, #4
   278a4:	cmp	r0, #0
   278a8:	beq	278cc <__assert_fail@plt+0x16178>
   278ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   278b0:	and	r0, r0, #2
   278b4:	cmp	r0, #0
   278b8:	beq	278cc <__assert_fail@plt+0x16178>
   278bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   278c0:	ldr	r0, [r0, #48]	; 0x30
   278c4:	str	r0, [fp, #-4]
   278c8:	b	2793c <__assert_fail@plt+0x161e8>
   278cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   278d0:	and	r0, r0, #2
   278d4:	cmp	r0, #0
   278d8:	beq	278ec <__assert_fail@plt+0x16198>
   278dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   278e0:	ldr	r0, [r0, #44]	; 0x2c
   278e4:	str	r0, [fp, #-4]
   278e8:	b	2793c <__assert_fail@plt+0x161e8>
   278ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   278f0:	and	r0, r0, #4
   278f4:	cmp	r0, #0
   278f8:	beq	27920 <__assert_fail@plt+0x161cc>
   278fc:	ldr	r0, [fp, #-8]
   27900:	ldr	r1, [fp, #-20]	; 0xffffffec
   27904:	ldr	r2, [fp, #-20]	; 0xffffffec
   27908:	ldr	r2, [r2, #36]	; 0x24
   2790c:	ldr	r2, [r2, #40]	; 0x28
   27910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27914:	bl	25e24 <__assert_fail@plt+0x146d0>
   27918:	str	r0, [fp, #-4]
   2791c:	b	2793c <__assert_fail@plt+0x161e8>
   27920:	ldr	r0, [fp, #-20]	; 0xffffffec
   27924:	ldr	r0, [r0, #36]	; 0x24
   27928:	str	r0, [fp, #-4]
   2792c:	b	2793c <__assert_fail@plt+0x161e8>
   27930:	ldr	r0, [fp, #-20]	; 0xffffffec
   27934:	ldr	r0, [r0, #36]	; 0x24
   27938:	str	r0, [fp, #-4]
   2793c:	ldr	r0, [fp, #-4]
   27940:	str	r0, [sp, #16]
   27944:	ldr	r0, [sp, #16]
   27948:	movw	r1, #0
   2794c:	cmp	r0, r1
   27950:	bne	27970 <__assert_fail@plt+0x1621c>
   27954:	ldr	r0, [sp, #32]
   27958:	cmp	r0, #12
   2795c:	bne	27964 <__assert_fail@plt+0x16210>
   27960:	b	27964 <__assert_fail@plt+0x16210>
   27964:	mvn	r0, #1
   27968:	str	r0, [fp, #-28]	; 0xffffffe4
   2796c:	b	27d24 <__assert_fail@plt+0x165d0>
   27970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27974:	ldr	r0, [r0, #100]	; 0x64
   27978:	movw	r1, #0
   2797c:	cmp	r0, r1
   27980:	beq	27a34 <__assert_fail@plt+0x162e0>
   27984:	ldr	r0, [sp, #16]
   27988:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2798c:	ldr	r1, [r1, #100]	; 0x64
   27990:	ldr	r2, [sp, #20]
   27994:	add	r1, r1, r2, lsl #2
   27998:	str	r0, [r1]
   2799c:	ldr	r0, [sp, #36]	; 0x24
   279a0:	ldr	r0, [r0, #76]	; 0x4c
   279a4:	cmp	r0, #0
   279a8:	beq	27a30 <__assert_fail@plt+0x162dc>
   279ac:	movw	r0, #0
   279b0:	strb	r0, [sp, #15]
   279b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   279b8:	ldr	r1, [sp, #16]
   279bc:	add	r1, r1, #4
   279c0:	movw	r2, #0
   279c4:	bl	28a1c <__assert_fail@plt+0x172c8>
   279c8:	str	r0, [sp, #32]
   279cc:	ldr	r0, [sp, #32]
   279d0:	cmp	r0, #0
   279d4:	beq	279e4 <__assert_fail@plt+0x16290>
   279d8:	ldr	r0, [sp, #32]
   279dc:	str	r0, [fp, #-28]	; 0xffffffe4
   279e0:	b	27d24 <__assert_fail@plt+0x165d0>
   279e4:	ldr	r0, [sp, #16]
   279e8:	ldrb	r0, [r0, #52]	; 0x34
   279ec:	ubfx	r0, r0, #6, #1
   279f0:	and	r0, r0, #255	; 0xff
   279f4:	cmp	r0, #0
   279f8:	beq	27a2c <__assert_fail@plt+0x162d8>
   279fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27a00:	ldr	r1, [sp, #16]
   27a04:	add	r1, r1, #4
   27a08:	bl	28b30 <__assert_fail@plt+0x173dc>
   27a0c:	str	r0, [sp, #32]
   27a10:	ldr	r0, [sp, #32]
   27a14:	cmp	r0, #0
   27a18:	beq	27a28 <__assert_fail@plt+0x162d4>
   27a1c:	ldr	r0, [sp, #32]
   27a20:	str	r0, [fp, #-28]	; 0xffffffe4
   27a24:	b	27d24 <__assert_fail@plt+0x165d0>
   27a28:	b	27a2c <__assert_fail@plt+0x162d8>
   27a2c:	b	27a30 <__assert_fail@plt+0x162dc>
   27a30:	b	27a34 <__assert_fail@plt+0x162e0>
   27a34:	ldr	r0, [sp, #16]
   27a38:	ldrb	r0, [r0, #52]	; 0x34
   27a3c:	ubfx	r0, r0, #4, #1
   27a40:	and	r0, r0, #255	; 0xff
   27a44:	cmp	r0, #0
   27a48:	beq	27aac <__assert_fail@plt+0x16358>
   27a4c:	ldr	r0, [sp, #16]
   27a50:	ldrb	r0, [r0, #52]	; 0x34
   27a54:	lsr	r0, r0, #7
   27a58:	and	r0, r0, #255	; 0xff
   27a5c:	cmp	r0, #0
   27a60:	beq	27a7c <__assert_fail@plt+0x16328>
   27a64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27a68:	ldr	r1, [sp, #16]
   27a6c:	ldr	r2, [sp, #20]
   27a70:	bl	27d30 <__assert_fail@plt+0x165dc>
   27a74:	cmp	r0, #0
   27a78:	beq	27aa8 <__assert_fail@plt+0x16354>
   27a7c:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   27a80:	tst	r0, #1
   27a84:	bne	27a94 <__assert_fail@plt+0x16340>
   27a88:	ldr	r0, [sp, #20]
   27a8c:	str	r0, [fp, #-28]	; 0xffffffe4
   27a90:	b	27d24 <__assert_fail@plt+0x165d0>
   27a94:	ldr	r0, [sp, #20]
   27a98:	str	r0, [sp, #24]
   27a9c:	movw	r0, #1
   27aa0:	str	r0, [sp, #28]
   27aa4:	b	27aa8 <__assert_fail@plt+0x16354>
   27aa8:	b	27aac <__assert_fail@plt+0x16358>
   27aac:	b	27ab0 <__assert_fail@plt+0x1635c>
   27ab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27ab4:	ldr	r0, [r0, #56]	; 0x38
   27ab8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27abc:	ldr	r1, [r1, #40]	; 0x28
   27ac0:	cmp	r0, r1
   27ac4:	movw	r0, #0
   27ac8:	movle	r0, #1
   27acc:	mvn	r1, #0
   27ad0:	eor	r0, r0, r1
   27ad4:	tst	r0, #1
   27ad8:	beq	27cf8 <__assert_fail@plt+0x165a4>
   27adc:	ldr	r0, [sp, #16]
   27ae0:	str	r0, [sp, #4]
   27ae4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27ae8:	ldr	r0, [r0, #40]	; 0x28
   27aec:	add	r0, r0, #1
   27af0:	str	r0, [sp]
   27af4:	ldr	r0, [sp]
   27af8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27afc:	ldr	r1, [r1, #36]	; 0x24
   27b00:	cmp	r0, r1
   27b04:	blt	27b20 <__assert_fail@plt+0x163cc>
   27b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27b0c:	ldr	r0, [r0, #36]	; 0x24
   27b10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27b14:	ldr	r1, [r1, #48]	; 0x30
   27b18:	cmp	r0, r1
   27b1c:	blt	27b4c <__assert_fail@plt+0x163f8>
   27b20:	ldr	r0, [sp]
   27b24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27b28:	ldr	r1, [r1, #28]
   27b2c:	cmp	r0, r1
   27b30:	blt	27b8c <__assert_fail@plt+0x16438>
   27b34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27b38:	ldr	r0, [r0, #28]
   27b3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27b40:	ldr	r1, [r1, #48]	; 0x30
   27b44:	cmp	r0, r1
   27b48:	bge	27b8c <__assert_fail@plt+0x16438>
   27b4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27b50:	ldr	r1, [sp]
   27b54:	add	r1, r1, #1
   27b58:	bl	2906c <__assert_fail@plt+0x17918>
   27b5c:	str	r0, [sp, #32]
   27b60:	ldr	r0, [sp, #32]
   27b64:	cmp	r0, #0
   27b68:	beq	27b88 <__assert_fail@plt+0x16434>
   27b6c:	ldr	r0, [sp, #32]
   27b70:	cmp	r0, #12
   27b74:	bne	27b7c <__assert_fail@plt+0x16428>
   27b78:	b	27b7c <__assert_fail@plt+0x16428>
   27b7c:	mvn	r0, #1
   27b80:	str	r0, [fp, #-28]	; 0xffffffe4
   27b84:	b	27d24 <__assert_fail@plt+0x165d0>
   27b88:	b	27b8c <__assert_fail@plt+0x16438>
   27b8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27b90:	ldr	r2, [sp, #16]
   27b94:	add	r0, sp, #32
   27b98:	bl	29284 <__assert_fail@plt+0x17b30>
   27b9c:	str	r0, [sp, #16]
   27ba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27ba4:	ldr	r0, [r0, #100]	; 0x64
   27ba8:	movw	r1, #0
   27bac:	cmp	r0, r1
   27bb0:	beq	27bc8 <__assert_fail@plt+0x16474>
   27bb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27bb8:	ldr	r2, [sp, #16]
   27bbc:	add	r0, sp, #32
   27bc0:	bl	29408 <__assert_fail@plt+0x17cb4>
   27bc4:	str	r0, [sp, #16]
   27bc8:	ldr	r0, [sp, #16]
   27bcc:	movw	r1, #0
   27bd0:	cmp	r0, r1
   27bd4:	bne	27c40 <__assert_fail@plt+0x164ec>
   27bd8:	ldr	r0, [sp, #32]
   27bdc:	cmp	r0, #0
   27be0:	beq	27bf0 <__assert_fail@plt+0x1649c>
   27be4:	mvn	r0, #1
   27be8:	str	r0, [fp, #-28]	; 0xffffffe4
   27bec:	b	27d24 <__assert_fail@plt+0x165d0>
   27bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27bf4:	ldr	r0, [r0, #100]	; 0x64
   27bf8:	movw	r1, #0
   27bfc:	cmp	r0, r1
   27c00:	beq	27c38 <__assert_fail@plt+0x164e4>
   27c04:	ldr	r0, [sp, #28]
   27c08:	cmp	r0, #0
   27c0c:	beq	27c1c <__assert_fail@plt+0x164c8>
   27c10:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   27c14:	tst	r0, #1
   27c18:	beq	27c38 <__assert_fail@plt+0x164e4>
   27c1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27c20:	add	r0, sp, #32
   27c24:	bl	29684 <__assert_fail@plt+0x17f30>
   27c28:	str	r0, [sp, #16]
   27c2c:	movw	r1, #0
   27c30:	cmp	r0, r1
   27c34:	bne	27c3c <__assert_fail@plt+0x164e8>
   27c38:	b	27cf8 <__assert_fail@plt+0x165a4>
   27c3c:	b	27c40 <__assert_fail@plt+0x164ec>
   27c40:	ldrb	r0, [sp, #15]
   27c44:	tst	r0, #1
   27c48:	beq	27c74 <__assert_fail@plt+0x16520>
   27c4c:	ldr	r0, [sp, #4]
   27c50:	ldr	r1, [sp, #16]
   27c54:	cmp	r0, r1
   27c58:	bne	27c68 <__assert_fail@plt+0x16514>
   27c5c:	ldr	r0, [sp]
   27c60:	str	r0, [sp, #8]
   27c64:	b	27c70 <__assert_fail@plt+0x1651c>
   27c68:	movw	r0, #0
   27c6c:	strb	r0, [sp, #15]
   27c70:	b	27c74 <__assert_fail@plt+0x16520>
   27c74:	ldr	r0, [sp, #16]
   27c78:	ldrb	r0, [r0, #52]	; 0x34
   27c7c:	ubfx	r0, r0, #4, #1
   27c80:	and	r0, r0, #255	; 0xff
   27c84:	cmp	r0, #0
   27c88:	beq	27cf4 <__assert_fail@plt+0x165a0>
   27c8c:	ldr	r0, [sp, #16]
   27c90:	ldrb	r0, [r0, #52]	; 0x34
   27c94:	lsr	r0, r0, #7
   27c98:	and	r0, r0, #255	; 0xff
   27c9c:	cmp	r0, #0
   27ca0:	beq	27cc0 <__assert_fail@plt+0x1656c>
   27ca4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27ca8:	ldr	r1, [sp, #16]
   27cac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27cb0:	ldr	r2, [r2, #40]	; 0x28
   27cb4:	bl	27d30 <__assert_fail@plt+0x165dc>
   27cb8:	cmp	r0, #0
   27cbc:	beq	27cf0 <__assert_fail@plt+0x1659c>
   27cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27cc4:	ldr	r0, [r0, #40]	; 0x28
   27cc8:	str	r0, [sp, #24]
   27ccc:	movw	r0, #1
   27cd0:	str	r0, [sp, #28]
   27cd4:	movw	r0, #0
   27cd8:	str	r0, [sp, #40]	; 0x28
   27cdc:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   27ce0:	tst	r0, #1
   27ce4:	bne	27cec <__assert_fail@plt+0x16598>
   27ce8:	b	27cf8 <__assert_fail@plt+0x165a4>
   27cec:	b	27cf0 <__assert_fail@plt+0x1659c>
   27cf0:	b	27cf4 <__assert_fail@plt+0x165a0>
   27cf4:	b	27ab0 <__assert_fail@plt+0x1635c>
   27cf8:	ldr	r0, [sp, #40]	; 0x28
   27cfc:	movw	r1, #0
   27d00:	cmp	r0, r1
   27d04:	beq	27d1c <__assert_fail@plt+0x165c8>
   27d08:	ldr	r0, [sp, #8]
   27d0c:	ldr	r1, [sp, #40]	; 0x28
   27d10:	ldr	r2, [r1]
   27d14:	add	r0, r2, r0
   27d18:	str	r0, [r1]
   27d1c:	ldr	r0, [sp, #24]
   27d20:	str	r0, [fp, #-28]	; 0xffffffe4
   27d24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27d28:	mov	sp, fp
   27d2c:	pop	{fp, pc}
   27d30:	push	{fp, lr}
   27d34:	mov	fp, sp
   27d38:	sub	sp, sp, #24
   27d3c:	str	r0, [fp, #-8]
   27d40:	str	r1, [sp, #12]
   27d44:	str	r2, [sp, #8]
   27d48:	ldr	r0, [sp, #12]
   27d4c:	ldrb	r0, [r0, #52]	; 0x34
   27d50:	ubfx	r0, r0, #4, #1
   27d54:	and	r0, r0, #255	; 0xff
   27d58:	cmp	r0, #0
   27d5c:	beq	27d64 <__assert_fail@plt+0x16610>
   27d60:	b	27d64 <__assert_fail@plt+0x16610>
   27d64:	ldr	r0, [fp, #-8]
   27d68:	ldr	r1, [sp, #8]
   27d6c:	ldr	r2, [fp, #-8]
   27d70:	ldr	r2, [r2, #88]	; 0x58
   27d74:	bl	28660 <__assert_fail@plt+0x16f0c>
   27d78:	str	r0, [sp]
   27d7c:	movw	r0, #0
   27d80:	str	r0, [sp, #4]
   27d84:	ldr	r0, [sp, #4]
   27d88:	ldr	r1, [sp, #12]
   27d8c:	ldr	r1, [r1, #8]
   27d90:	cmp	r0, r1
   27d94:	bge	27df4 <__assert_fail@plt+0x166a0>
   27d98:	ldr	r0, [fp, #-8]
   27d9c:	ldr	r0, [r0, #84]	; 0x54
   27da0:	ldr	r1, [sp, #12]
   27da4:	ldr	r1, [r1, #12]
   27da8:	ldr	r2, [sp, #4]
   27dac:	add	r1, r1, r2, lsl #2
   27db0:	ldr	r1, [r1]
   27db4:	ldr	r2, [sp]
   27db8:	bl	2db08 <__assert_fail@plt+0x1c3b4>
   27dbc:	tst	r0, #1
   27dc0:	beq	27de0 <__assert_fail@plt+0x1668c>
   27dc4:	ldr	r0, [sp, #12]
   27dc8:	ldr	r0, [r0, #12]
   27dcc:	ldr	r1, [sp, #4]
   27dd0:	add	r0, r0, r1, lsl #2
   27dd4:	ldr	r0, [r0]
   27dd8:	str	r0, [fp, #-4]
   27ddc:	b	27dfc <__assert_fail@plt+0x166a8>
   27de0:	b	27de4 <__assert_fail@plt+0x16690>
   27de4:	ldr	r0, [sp, #4]
   27de8:	add	r0, r0, #1
   27dec:	str	r0, [sp, #4]
   27df0:	b	27d84 <__assert_fail@plt+0x16630>
   27df4:	movw	r0, #0
   27df8:	str	r0, [fp, #-4]
   27dfc:	ldr	r0, [fp, #-4]
   27e00:	mov	sp, fp
   27e04:	pop	{fp, pc}
   27e08:	push	{fp, lr}
   27e0c:	mov	fp, sp
   27e10:	sub	sp, sp, #80	; 0x50
   27e14:	str	r0, [fp, #-8]
   27e18:	ldr	r0, [fp, #-8]
   27e1c:	ldr	r0, [r0, #84]	; 0x54
   27e20:	str	r0, [fp, #-12]
   27e24:	movw	r0, #0
   27e28:	str	r0, [fp, #-32]	; 0xffffffe0
   27e2c:	ldr	r1, [fp, #-8]
   27e30:	ldr	r1, [r1, #100]	; 0x64
   27e34:	cmp	r1, r0
   27e38:	beq	27e40 <__assert_fail@plt+0x166ec>
   27e3c:	b	27e40 <__assert_fail@plt+0x166ec>
   27e40:	ldr	r0, [pc, #776]	; 28150 <__assert_fail@plt+0x169fc>
   27e44:	ldr	r1, [fp, #-8]
   27e48:	ldr	r1, [r1, #92]	; 0x5c
   27e4c:	str	r1, [fp, #-20]	; 0xffffffec
   27e50:	ldr	r1, [fp, #-8]
   27e54:	ldr	r1, [r1, #96]	; 0x60
   27e58:	str	r1, [fp, #-16]
   27e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27e60:	cmp	r0, r1
   27e64:	bhi	27e74 <__assert_fail@plt+0x16720>
   27e68:	movw	r0, #12
   27e6c:	str	r0, [fp, #-4]
   27e70:	b	28144 <__assert_fail@plt+0x169f0>
   27e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   27e78:	add	r0, r0, #1
   27e7c:	lsl	r0, r0, #2
   27e80:	bl	3816c <__assert_fail@plt+0x26a18>
   27e84:	str	r0, [fp, #-28]	; 0xffffffe4
   27e88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27e8c:	movw	r1, #0
   27e90:	cmp	r0, r1
   27e94:	bne	27ea4 <__assert_fail@plt+0x16750>
   27e98:	movw	r0, #12
   27e9c:	str	r0, [fp, #-24]	; 0xffffffe8
   27ea0:	b	2812c <__assert_fail@plt+0x169d8>
   27ea4:	ldr	r0, [fp, #-12]
   27ea8:	ldr	r0, [r0, #76]	; 0x4c
   27eac:	cmp	r0, #0
   27eb0:	beq	2807c <__assert_fail@plt+0x16928>
   27eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   27eb8:	add	r0, r0, #1
   27ebc:	lsl	r0, r0, #2
   27ec0:	bl	3816c <__assert_fail@plt+0x26a18>
   27ec4:	str	r0, [fp, #-32]	; 0xffffffe0
   27ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27ecc:	movw	r1, #0
   27ed0:	cmp	r0, r1
   27ed4:	bne	27ee4 <__assert_fail@plt+0x16790>
   27ed8:	movw	r0, #12
   27edc:	str	r0, [fp, #-24]	; 0xffffffe8
   27ee0:	b	2812c <__assert_fail@plt+0x169d8>
   27ee4:	b	27ee8 <__assert_fail@plt+0x16794>
   27ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27eec:	ldr	r1, [fp, #-20]	; 0xffffffec
   27ef0:	add	r1, r1, #1
   27ef4:	lsl	r2, r1, #2
   27ef8:	movw	r1, #0
   27efc:	and	r1, r1, #255	; 0xff
   27f00:	bl	11658 <memset@plt>
   27f04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27f08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27f0c:	ldr	r3, [fp, #-16]
   27f10:	ldr	r0, [fp, #-20]	; 0xffffffec
   27f14:	add	ip, sp, #20
   27f18:	str	r0, [sp, #16]
   27f1c:	mov	r0, ip
   27f20:	ldr	ip, [sp, #16]
   27f24:	str	ip, [sp]
   27f28:	bl	2dc38 <__assert_fail@plt+0x1c4e4>
   27f2c:	ldr	r0, [fp, #-8]
   27f30:	add	r1, sp, #20
   27f34:	bl	2dcac <__assert_fail@plt+0x1c558>
   27f38:	str	r0, [fp, #-24]	; 0xffffffe8
   27f3c:	ldr	r0, [sp, #44]	; 0x2c
   27f40:	bl	15f68 <__assert_fail@plt+0x4814>
   27f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27f48:	cmp	r0, #0
   27f4c:	beq	27f54 <__assert_fail@plt+0x16800>
   27f50:	b	2812c <__assert_fail@plt+0x169d8>
   27f54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27f58:	ldr	r0, [r0]
   27f5c:	movw	r1, #0
   27f60:	cmp	r0, r1
   27f64:	bne	27f7c <__assert_fail@plt+0x16828>
   27f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27f6c:	ldr	r0, [r0]
   27f70:	movw	r1, #0
   27f74:	cmp	r0, r1
   27f78:	beq	27f80 <__assert_fail@plt+0x1682c>
   27f7c:	b	2803c <__assert_fail@plt+0x168e8>
   27f80:	b	27f84 <__assert_fail@plt+0x16830>
   27f84:	ldr	r0, [fp, #-20]	; 0xffffffec
   27f88:	mvn	r1, #0
   27f8c:	add	r0, r0, r1
   27f90:	str	r0, [fp, #-20]	; 0xffffffec
   27f94:	ldr	r0, [fp, #-20]	; 0xffffffec
   27f98:	cmp	r0, #0
   27f9c:	bge	27fac <__assert_fail@plt+0x16858>
   27fa0:	movw	r0, #1
   27fa4:	str	r0, [fp, #-24]	; 0xffffffe8
   27fa8:	b	2812c <__assert_fail@plt+0x169d8>
   27fac:	b	27fb0 <__assert_fail@plt+0x1685c>
   27fb0:	ldr	r0, [fp, #-8]
   27fb4:	ldr	r0, [r0, #100]	; 0x64
   27fb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   27fbc:	add	r0, r0, r1, lsl #2
   27fc0:	ldr	r0, [r0]
   27fc4:	movw	r1, #0
   27fc8:	cmp	r0, r1
   27fcc:	movw	r0, #1
   27fd0:	str	r0, [sp, #12]
   27fd4:	beq	2800c <__assert_fail@plt+0x168b8>
   27fd8:	ldr	r0, [fp, #-8]
   27fdc:	ldr	r0, [r0, #100]	; 0x64
   27fe0:	ldr	r1, [fp, #-20]	; 0xffffffec
   27fe4:	ldr	r0, [r0, r1, lsl #2]
   27fe8:	ldrb	r0, [r0, #52]	; 0x34
   27fec:	ubfx	r0, r0, #4, #1
   27ff0:	and	r0, r0, #255	; 0xff
   27ff4:	cmp	r0, #0
   27ff8:	movw	r0, #0
   27ffc:	movne	r0, #1
   28000:	mvn	r1, #0
   28004:	eor	r0, r0, r1
   28008:	str	r0, [sp, #12]
   2800c:	ldr	r0, [sp, #12]
   28010:	tst	r0, #1
   28014:	bne	27f84 <__assert_fail@plt+0x16830>
   28018:	ldr	r0, [fp, #-8]
   2801c:	ldr	r1, [r0, #100]	; 0x64
   28020:	ldr	r2, [fp, #-20]	; 0xffffffec
   28024:	add	r1, r1, r2, lsl #2
   28028:	ldr	r1, [r1]
   2802c:	ldr	r2, [fp, #-20]	; 0xffffffec
   28030:	bl	27d30 <__assert_fail@plt+0x165dc>
   28034:	str	r0, [fp, #-16]
   28038:	b	27ee8 <__assert_fail@plt+0x16794>
   2803c:	ldr	r0, [fp, #-12]
   28040:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28044:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28048:	ldr	r3, [fp, #-20]	; 0xffffffec
   2804c:	add	r3, r3, #1
   28050:	bl	2dea4 <__assert_fail@plt+0x1c750>
   28054:	str	r0, [fp, #-24]	; 0xffffffe8
   28058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2805c:	bl	15f68 <__assert_fail@plt+0x4814>
   28060:	movw	r0, #0
   28064:	str	r0, [fp, #-32]	; 0xffffffe0
   28068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2806c:	cmp	r0, #0
   28070:	beq	28078 <__assert_fail@plt+0x16924>
   28074:	b	2812c <__assert_fail@plt+0x169d8>
   28078:	b	280f0 <__assert_fail@plt+0x1699c>
   2807c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28080:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28084:	ldr	r3, [fp, #-16]
   28088:	ldr	r0, [fp, #-20]	; 0xffffffec
   2808c:	add	ip, sp, #20
   28090:	str	r0, [sp, #8]
   28094:	mov	r0, ip
   28098:	ldr	ip, [sp, #8]
   2809c:	str	ip, [sp]
   280a0:	bl	2dc38 <__assert_fail@plt+0x1c4e4>
   280a4:	ldr	r0, [fp, #-8]
   280a8:	add	r1, sp, #20
   280ac:	bl	2dcac <__assert_fail@plt+0x1c558>
   280b0:	str	r0, [fp, #-24]	; 0xffffffe8
   280b4:	ldr	r0, [sp, #44]	; 0x2c
   280b8:	bl	15f68 <__assert_fail@plt+0x4814>
   280bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   280c0:	cmp	r0, #0
   280c4:	beq	280cc <__assert_fail@plt+0x16978>
   280c8:	b	2812c <__assert_fail@plt+0x169d8>
   280cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   280d0:	ldr	r0, [r0]
   280d4:	movw	r1, #0
   280d8:	cmp	r0, r1
   280dc:	bne	280ec <__assert_fail@plt+0x16998>
   280e0:	movw	r0, #1
   280e4:	str	r0, [fp, #-24]	; 0xffffffe8
   280e8:	b	2812c <__assert_fail@plt+0x169d8>
   280ec:	b	280f0 <__assert_fail@plt+0x1699c>
   280f0:	ldr	r0, [fp, #-8]
   280f4:	ldr	r0, [r0, #100]	; 0x64
   280f8:	bl	15f68 <__assert_fail@plt+0x4814>
   280fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28100:	ldr	r1, [fp, #-8]
   28104:	str	r0, [r1, #100]	; 0x64
   28108:	movw	r0, #0
   2810c:	str	r0, [fp, #-28]	; 0xffffffe4
   28110:	ldr	r1, [fp, #-16]
   28114:	ldr	r2, [fp, #-8]
   28118:	str	r1, [r2, #96]	; 0x60
   2811c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28120:	ldr	r2, [fp, #-8]
   28124:	str	r1, [r2, #92]	; 0x5c
   28128:	str	r0, [fp, #-24]	; 0xffffffe8
   2812c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28130:	bl	15f68 <__assert_fail@plt+0x4814>
   28134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28138:	bl	15f68 <__assert_fail@plt+0x4814>
   2813c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28140:	str	r0, [fp, #-4]
   28144:	ldr	r0, [fp, #-4]
   28148:	mov	sp, fp
   2814c:	pop	{fp, pc}
   28150:	svccc	0x00ffffff
   28154:	push	{fp, lr}
   28158:	mov	fp, sp
   2815c:	sub	sp, sp, #24
   28160:	str	r0, [fp, #-4]
   28164:	movw	r0, #0
   28168:	str	r0, [fp, #-8]
   2816c:	ldr	r0, [fp, #-8]
   28170:	ldr	r1, [fp, #-4]
   28174:	ldr	r1, [r1, #124]	; 0x7c
   28178:	cmp	r0, r1
   2817c:	bge	28244 <__assert_fail@plt+0x16af0>
   28180:	ldr	r0, [fp, #-4]
   28184:	ldr	r0, [r0, #132]	; 0x84
   28188:	ldr	r1, [fp, #-8]
   2818c:	add	r0, r0, r1, lsl #2
   28190:	ldr	r0, [r0]
   28194:	str	r0, [sp, #8]
   28198:	movw	r0, #0
   2819c:	str	r0, [sp, #12]
   281a0:	ldr	r0, [sp, #12]
   281a4:	ldr	r1, [sp, #8]
   281a8:	ldr	r1, [r1, #16]
   281ac:	cmp	r0, r1
   281b0:	bge	281f0 <__assert_fail@plt+0x16a9c>
   281b4:	ldr	r0, [sp, #8]
   281b8:	ldr	r0, [r0, #20]
   281bc:	ldr	r1, [sp, #12]
   281c0:	add	r0, r0, r1, lsl #2
   281c4:	ldr	r0, [r0]
   281c8:	str	r0, [sp, #4]
   281cc:	ldr	r0, [sp, #4]
   281d0:	ldr	r0, [r0, #16]
   281d4:	bl	15f68 <__assert_fail@plt+0x4814>
   281d8:	ldr	r0, [sp, #4]
   281dc:	bl	15f68 <__assert_fail@plt+0x4814>
   281e0:	ldr	r0, [sp, #12]
   281e4:	add	r0, r0, #1
   281e8:	str	r0, [sp, #12]
   281ec:	b	281a0 <__assert_fail@plt+0x16a4c>
   281f0:	ldr	r0, [sp, #8]
   281f4:	ldr	r0, [r0, #20]
   281f8:	bl	15f68 <__assert_fail@plt+0x4814>
   281fc:	ldr	r0, [sp, #8]
   28200:	ldr	r0, [r0, #8]
   28204:	movw	r1, #0
   28208:	cmp	r0, r1
   2820c:	beq	2822c <__assert_fail@plt+0x16ad8>
   28210:	ldr	r0, [sp, #8]
   28214:	ldr	r0, [r0, #8]
   28218:	ldr	r0, [r0, #8]
   2821c:	bl	15f68 <__assert_fail@plt+0x4814>
   28220:	ldr	r0, [sp, #8]
   28224:	ldr	r0, [r0, #8]
   28228:	bl	15f68 <__assert_fail@plt+0x4814>
   2822c:	ldr	r0, [sp, #8]
   28230:	bl	15f68 <__assert_fail@plt+0x4814>
   28234:	ldr	r0, [fp, #-8]
   28238:	add	r0, r0, #1
   2823c:	str	r0, [fp, #-8]
   28240:	b	2816c <__assert_fail@plt+0x16a18>
   28244:	ldr	r0, [fp, #-4]
   28248:	movw	r1, #0
   2824c:	str	r1, [r0, #124]	; 0x7c
   28250:	ldr	r0, [fp, #-4]
   28254:	str	r1, [r0, #108]	; 0x6c
   28258:	mov	sp, fp
   2825c:	pop	{fp, pc}
   28260:	push	{r4, sl, fp, lr}
   28264:	add	fp, sp, #8
   28268:	sub	sp, sp, #240	; 0xf0
   2826c:	ldr	ip, [fp, #8]
   28270:	str	r0, [fp, #-16]
   28274:	str	r1, [fp, #-20]	; 0xffffffec
   28278:	str	r2, [fp, #-24]	; 0xffffffe8
   2827c:	str	r3, [fp, #-28]	; 0xffffffe4
   28280:	and	r0, ip, #1
   28284:	strb	r0, [fp, #-29]	; 0xffffffe3
   28288:	ldr	r0, [fp, #-16]
   2828c:	ldr	r0, [r0]
   28290:	str	r0, [fp, #-36]	; 0xffffffdc
   28294:	movw	r0, #52276	; 0xcc34
   28298:	movt	r0, #3
   2829c:	ldr	r1, [r0]
   282a0:	str	r1, [fp, #-72]	; 0xffffffb8
   282a4:	ldr	r1, [r0, #4]
   282a8:	str	r1, [fp, #-68]	; 0xffffffbc
   282ac:	ldr	r0, [r0, #8]
   282b0:	str	r0, [fp, #-64]	; 0xffffffc0
   282b4:	add	r0, sp, #36	; 0x24
   282b8:	bl	2fab0 <__assert_fail@plt+0x1e35c>
   282bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   282c0:	cmp	r0, #1
   282c4:	bls	282cc <__assert_fail@plt+0x16b78>
   282c8:	b	282cc <__assert_fail@plt+0x16b78>
   282cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   282d0:	ldr	r0, [r0, #100]	; 0x64
   282d4:	movw	r1, #0
   282d8:	cmp	r0, r1
   282dc:	beq	282e4 <__assert_fail@plt+0x16b90>
   282e0:	b	282e4 <__assert_fail@plt+0x16b90>
   282e4:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   282e8:	tst	r0, #1
   282ec:	beq	28338 <__assert_fail@plt+0x16be4>
   282f0:	sub	r0, fp, #72	; 0x48
   282f4:	str	r0, [fp, #-60]	; 0xffffffc4
   282f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   282fc:	ldr	r0, [r0, #4]
   28300:	movw	r1, #24
   28304:	mul	r0, r0, r1
   28308:	bl	3816c <__assert_fail@plt+0x26a18>
   2830c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   28310:	str	r0, [r1, #8]
   28314:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28318:	ldr	r0, [r0, #8]
   2831c:	movw	r1, #0
   28320:	cmp	r0, r1
   28324:	bne	28334 <__assert_fail@plt+0x16be0>
   28328:	movw	r0, #12
   2832c:	str	r0, [fp, #-12]
   28330:	b	2861c <__assert_fail@plt+0x16ec8>
   28334:	b	28340 <__assert_fail@plt+0x16bec>
   28338:	movw	r0, #0
   2833c:	str	r0, [fp, #-60]	; 0xffffffc4
   28340:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28344:	ldr	r0, [r0, #72]	; 0x48
   28348:	str	r0, [fp, #-44]	; 0xffffffd4
   2834c:	sub	r0, fp, #56	; 0x38
   28350:	movw	r1, #0
   28354:	and	r1, r1, #255	; 0xff
   28358:	movw	r2, #12
   2835c:	bl	11658 <memset@plt>
   28360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28364:	add	r0, sp, #36	; 0x24
   28368:	bl	2fae8 <__assert_fail@plt+0x1e394>
   2836c:	tst	r0, #1
   28370:	bne	28390 <__assert_fail@plt+0x16c3c>
   28374:	add	r0, sp, #36	; 0x24
   28378:	bl	2fba8 <__assert_fail@plt+0x1e454>
   2837c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28380:	bl	2fbe4 <__assert_fail@plt+0x1e490>
   28384:	movw	r1, #12
   28388:	str	r1, [fp, #-12]
   2838c:	b	2861c <__assert_fail@plt+0x16ec8>
   28390:	add	r0, sp, #36	; 0x24
   28394:	bl	2fc88 <__assert_fail@plt+0x1e534>
   28398:	str	r0, [sp, #32]
   2839c:	ldr	r0, [sp, #32]
   283a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   283a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   283a8:	lsl	r2, r2, #3
   283ac:	bl	11478 <memcpy@plt>
   283b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   283b4:	ldr	r0, [r0]
   283b8:	str	r0, [fp, #-40]	; 0xffffffd8
   283bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   283c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   283c4:	ldr	r1, [r1, #4]
   283c8:	cmp	r0, r1
   283cc:	bgt	28600 <__assert_fail@plt+0x16eac>
   283d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   283d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   283d8:	ldr	r2, [sp, #32]
   283dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   283e0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   283e4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   283e8:	str	ip, [sp]
   283ec:	str	lr, [sp, #4]
   283f0:	bl	2fca0 <__assert_fail@plt+0x1e54c>
   283f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   283f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   283fc:	ldr	r1, [r1, #4]
   28400:	cmp	r0, r1
   28404:	bne	2841c <__assert_fail@plt+0x16cc8>
   28408:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2840c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28410:	ldr	r1, [r1, #96]	; 0x60
   28414:	cmp	r0, r1
   28418:	beq	28440 <__assert_fail@plt+0x16cec>
   2841c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28420:	movw	r1, #0
   28424:	cmp	r0, r1
   28428:	beq	28520 <__assert_fail@plt+0x16dcc>
   2842c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28430:	sub	r0, fp, #56	; 0x38
   28434:	bl	25d34 <__assert_fail@plt+0x145e0>
   28438:	cmp	r0, #0
   2843c:	beq	28520 <__assert_fail@plt+0x16dcc>
   28440:	mvn	r0, #0
   28444:	str	r0, [fp, #-44]	; 0xffffffd4
   28448:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2844c:	movw	r1, #0
   28450:	cmp	r0, r1
   28454:	beq	284f0 <__assert_fail@plt+0x16d9c>
   28458:	movw	r0, #0
   2845c:	str	r0, [sp, #28]
   28460:	ldr	r0, [sp, #28]
   28464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28468:	cmp	r0, r1
   2846c:	bcs	284ec <__assert_fail@plt+0x16d98>
   28470:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28474:	ldr	r1, [sp, #28]
   28478:	add	r0, r0, r1, lsl #3
   2847c:	ldr	r0, [r0]
   28480:	cmn	r0, #1
   28484:	ble	284d8 <__assert_fail@plt+0x16d84>
   28488:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2848c:	ldr	r1, [sp, #28]
   28490:	add	r0, r0, r1, lsl #3
   28494:	ldr	r0, [r0, #4]
   28498:	cmn	r0, #1
   2849c:	bne	284d8 <__assert_fail@plt+0x16d84>
   284a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   284a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   284a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   284ac:	ldr	r1, [sp, #32]
   284b0:	sub	ip, fp, #40	; 0x28
   284b4:	str	r1, [sp, #24]
   284b8:	mov	r1, ip
   284bc:	ldr	ip, [sp, #24]
   284c0:	str	ip, [sp]
   284c4:	sub	lr, fp, #56	; 0x38
   284c8:	str	lr, [sp, #4]
   284cc:	bl	2fe40 <__assert_fail@plt+0x1e6ec>
   284d0:	str	r0, [fp, #-44]	; 0xffffffd4
   284d4:	b	284ec <__assert_fail@plt+0x16d98>
   284d8:	b	284dc <__assert_fail@plt+0x16d88>
   284dc:	ldr	r0, [sp, #28]
   284e0:	add	r0, r0, #1
   284e4:	str	r0, [sp, #28]
   284e8:	b	28460 <__assert_fail@plt+0x16d0c>
   284ec:	b	284f0 <__assert_fail@plt+0x16d9c>
   284f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   284f4:	cmp	r0, #0
   284f8:	bge	2851c <__assert_fail@plt+0x16dc8>
   284fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   28500:	bl	15f68 <__assert_fail@plt+0x4814>
   28504:	add	r0, sp, #36	; 0x24
   28508:	bl	2fba8 <__assert_fail@plt+0x1e454>
   2850c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28510:	bl	2fbe4 <__assert_fail@plt+0x1e490>
   28514:	str	r0, [fp, #-12]
   28518:	b	2861c <__assert_fail@plt+0x16ec8>
   2851c:	b	28520 <__assert_fail@plt+0x16dcc>
   28520:	ldr	r0, [fp, #-20]	; 0xffffffec
   28524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28528:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2852c:	ldr	r3, [sp, #32]
   28530:	ldr	ip, [fp, #-44]	; 0xffffffd4
   28534:	ldr	lr, [fp, #-60]	; 0xffffffc4
   28538:	sub	r4, fp, #40	; 0x28
   2853c:	str	r4, [sp]
   28540:	str	ip, [sp, #4]
   28544:	sub	ip, fp, #56	; 0x38
   28548:	str	ip, [sp, #8]
   2854c:	str	lr, [sp, #12]
   28550:	bl	2ffd8 <__assert_fail@plt+0x1e884>
   28554:	str	r0, [fp, #-44]	; 0xffffffd4
   28558:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2855c:	cmp	r0, #0
   28560:	bge	285fc <__assert_fail@plt+0x16ea8>
   28564:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28568:	cmn	r0, #2
   2856c:	bne	28594 <__assert_fail@plt+0x16e40>
   28570:	ldr	r0, [fp, #-48]	; 0xffffffd0
   28574:	bl	15f68 <__assert_fail@plt+0x4814>
   28578:	add	r0, sp, #36	; 0x24
   2857c:	bl	2fba8 <__assert_fail@plt+0x1e454>
   28580:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28584:	bl	2fbe4 <__assert_fail@plt+0x1e490>
   28588:	movw	r1, #12
   2858c:	str	r1, [fp, #-12]
   28590:	b	2861c <__assert_fail@plt+0x16ec8>
   28594:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28598:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2859c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   285a0:	ldr	r1, [sp, #32]
   285a4:	sub	ip, fp, #40	; 0x28
   285a8:	str	r1, [sp, #20]
   285ac:	mov	r1, ip
   285b0:	ldr	ip, [sp, #20]
   285b4:	str	ip, [sp]
   285b8:	sub	lr, fp, #56	; 0x38
   285bc:	str	lr, [sp, #4]
   285c0:	bl	2fe40 <__assert_fail@plt+0x1e6ec>
   285c4:	str	r0, [fp, #-44]	; 0xffffffd4
   285c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   285cc:	cmp	r0, #0
   285d0:	bge	285f8 <__assert_fail@plt+0x16ea4>
   285d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   285d8:	bl	15f68 <__assert_fail@plt+0x4814>
   285dc:	add	r0, sp, #36	; 0x24
   285e0:	bl	2fba8 <__assert_fail@plt+0x1e454>
   285e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   285e8:	bl	2fbe4 <__assert_fail@plt+0x1e490>
   285ec:	movw	r1, #1
   285f0:	str	r1, [fp, #-12]
   285f4:	b	2861c <__assert_fail@plt+0x16ec8>
   285f8:	b	285fc <__assert_fail@plt+0x16ea8>
   285fc:	b	283bc <__assert_fail@plt+0x16c68>
   28600:	ldr	r0, [fp, #-48]	; 0xffffffd0
   28604:	bl	15f68 <__assert_fail@plt+0x4814>
   28608:	add	r0, sp, #36	; 0x24
   2860c:	bl	2fba8 <__assert_fail@plt+0x1e454>
   28610:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28614:	bl	2fbe4 <__assert_fail@plt+0x1e490>
   28618:	str	r0, [fp, #-12]
   2861c:	ldr	r0, [fp, #-12]
   28620:	sub	sp, fp, #8
   28624:	pop	{r4, sl, fp, pc}
   28628:	push	{fp, lr}
   2862c:	mov	fp, sp
   28630:	sub	sp, sp, #8
   28634:	str	r0, [sp, #4]
   28638:	ldr	r0, [sp, #4]
   2863c:	bl	28154 <__assert_fail@plt+0x16a00>
   28640:	ldr	r0, [sp, #4]
   28644:	ldr	r0, [r0, #132]	; 0x84
   28648:	bl	15f68 <__assert_fail@plt+0x4814>
   2864c:	ldr	r0, [sp, #4]
   28650:	ldr	r0, [r0, #116]	; 0x74
   28654:	bl	15f68 <__assert_fail@plt+0x4814>
   28658:	mov	sp, fp
   2865c:	pop	{fp, pc}
   28660:	push	{fp, lr}
   28664:	mov	fp, sp
   28668:	sub	sp, sp, #40	; 0x28
   2866c:	str	r0, [fp, #-8]
   28670:	str	r1, [fp, #-12]
   28674:	str	r2, [fp, #-16]
   28678:	ldr	r0, [fp, #-12]
   2867c:	cmp	r0, #0
   28680:	bge	28694 <__assert_fail@plt+0x16f40>
   28684:	ldr	r0, [fp, #-8]
   28688:	ldr	r0, [r0, #60]	; 0x3c
   2868c:	str	r0, [fp, #-4]
   28690:	b	28854 <__assert_fail@plt+0x17100>
   28694:	ldr	r0, [fp, #-12]
   28698:	ldr	r1, [fp, #-8]
   2869c:	ldr	r1, [r1, #48]	; 0x30
   286a0:	cmp	r0, r1
   286a4:	bne	286d0 <__assert_fail@plt+0x16f7c>
   286a8:	ldr	r0, [fp, #-16]
   286ac:	and	r0, r0, #2
   286b0:	cmp	r0, #0
   286b4:	movw	r0, #0
   286b8:	movne	r0, #1
   286bc:	tst	r0, #1
   286c0:	movw	r0, #8
   286c4:	moveq	r0, #10
   286c8:	str	r0, [fp, #-4]
   286cc:	b	28854 <__assert_fail@plt+0x17100>
   286d0:	ldr	r0, [fp, #-8]
   286d4:	ldr	r0, [r0, #80]	; 0x50
   286d8:	cmp	r0, #1
   286dc:	ble	287d8 <__assert_fail@plt+0x17084>
   286e0:	ldr	r0, [fp, #-12]
   286e4:	str	r0, [sp, #12]
   286e8:	ldr	r0, [fp, #-8]
   286ec:	ldr	r0, [r0, #8]
   286f0:	ldr	r1, [sp, #12]
   286f4:	add	r0, r0, r1, lsl #2
   286f8:	ldr	r0, [r0]
   286fc:	cmn	r0, #1
   28700:	bne	28744 <__assert_fail@plt+0x16ff0>
   28704:	ldr	r0, [sp, #12]
   28708:	cmp	r0, #0
   2870c:	blt	28714 <__assert_fail@plt+0x16fc0>
   28710:	b	28714 <__assert_fail@plt+0x16fc0>
   28714:	ldr	r0, [sp, #12]
   28718:	mvn	r1, #0
   2871c:	add	r0, r0, r1
   28720:	str	r0, [sp, #12]
   28724:	ldr	r0, [sp, #12]
   28728:	cmp	r0, #0
   2872c:	bge	28740 <__assert_fail@plt+0x16fec>
   28730:	ldr	r0, [fp, #-8]
   28734:	ldr	r0, [r0, #60]	; 0x3c
   28738:	str	r0, [fp, #-4]
   2873c:	b	28854 <__assert_fail@plt+0x17100>
   28740:	b	286e8 <__assert_fail@plt+0x16f94>
   28744:	ldr	r0, [fp, #-8]
   28748:	ldr	r0, [r0, #8]
   2874c:	ldr	r1, [sp, #12]
   28750:	add	r0, r0, r1, lsl #2
   28754:	ldr	r0, [r0]
   28758:	str	r0, [sp, #16]
   2875c:	ldr	r0, [fp, #-8]
   28760:	ldrb	r0, [r0, #78]	; 0x4e
   28764:	cmp	r0, #0
   28768:	beq	28794 <__assert_fail@plt+0x17040>
   2876c:	ldr	r0, [sp, #16]
   28770:	bl	11634 <iswalnum@plt>
   28774:	cmp	r0, #0
   28778:	bne	28788 <__assert_fail@plt+0x17034>
   2877c:	ldr	r0, [sp, #16]
   28780:	cmp	r0, #95	; 0x5f
   28784:	bne	28794 <__assert_fail@plt+0x17040>
   28788:	movw	r0, #1
   2878c:	str	r0, [fp, #-4]
   28790:	b	28854 <__assert_fail@plt+0x17100>
   28794:	ldr	r0, [sp, #16]
   28798:	cmp	r0, #10
   2879c:	movw	r0, #0
   287a0:	str	r0, [sp, #8]
   287a4:	bne	287c0 <__assert_fail@plt+0x1706c>
   287a8:	ldr	r0, [fp, #-8]
   287ac:	ldrb	r0, [r0, #77]	; 0x4d
   287b0:	cmp	r0, #0
   287b4:	movw	r0, #0
   287b8:	movne	r0, #1
   287bc:	str	r0, [sp, #8]
   287c0:	ldr	r0, [sp, #8]
   287c4:	tst	r0, #1
   287c8:	movw	r0, #2
   287cc:	moveq	r0, #0
   287d0:	str	r0, [fp, #-4]
   287d4:	b	28854 <__assert_fail@plt+0x17100>
   287d8:	ldr	r0, [fp, #-8]
   287dc:	ldr	r0, [r0, #4]
   287e0:	ldr	r1, [fp, #-12]
   287e4:	add	r0, r0, r1
   287e8:	ldrb	r0, [r0]
   287ec:	str	r0, [sp, #20]
   287f0:	ldr	r0, [fp, #-8]
   287f4:	ldr	r0, [r0, #68]	; 0x44
   287f8:	ldr	r1, [sp, #20]
   287fc:	bl	289d0 <__assert_fail@plt+0x1727c>
   28800:	tst	r0, #1
   28804:	beq	28814 <__assert_fail@plt+0x170c0>
   28808:	movw	r0, #1
   2880c:	str	r0, [fp, #-4]
   28810:	b	28854 <__assert_fail@plt+0x17100>
   28814:	ldr	r0, [sp, #20]
   28818:	cmp	r0, #10
   2881c:	movw	r0, #0
   28820:	str	r0, [sp, #4]
   28824:	bne	28840 <__assert_fail@plt+0x170ec>
   28828:	ldr	r0, [fp, #-8]
   2882c:	ldrb	r0, [r0, #77]	; 0x4d
   28830:	cmp	r0, #0
   28834:	movw	r0, #0
   28838:	movne	r0, #1
   2883c:	str	r0, [sp, #4]
   28840:	ldr	r0, [sp, #4]
   28844:	tst	r0, #1
   28848:	movw	r0, #2
   2884c:	moveq	r0, #0
   28850:	str	r0, [fp, #-4]
   28854:	ldr	r0, [fp, #-4]
   28858:	mov	sp, fp
   2885c:	pop	{fp, pc}
   28860:	push	{fp, lr}
   28864:	mov	fp, sp
   28868:	sub	sp, sp, #48	; 0x30
   2886c:	str	r0, [fp, #-4]
   28870:	str	r1, [fp, #-8]
   28874:	str	r2, [fp, #-12]
   28878:	mvn	r0, #0
   2887c:	str	r0, [sp, #16]
   28880:	ldr	r0, [fp, #-4]
   28884:	ldr	r0, [r0, #24]
   28888:	ldr	r1, [fp, #-4]
   2888c:	ldr	r1, [r1, #32]
   28890:	add	r0, r0, r1
   28894:	str	r0, [sp, #24]
   28898:	ldr	r0, [sp, #24]
   2889c:	ldr	r1, [fp, #-8]
   288a0:	cmp	r0, r1
   288a4:	bge	289b8 <__assert_fail@plt+0x17264>
   288a8:	ldr	r0, [fp, #-4]
   288ac:	ldr	r0, [r0, #44]	; 0x2c
   288b0:	ldr	r1, [sp, #24]
   288b4:	sub	r0, r0, r1
   288b8:	str	r0, [sp, #8]
   288bc:	ldr	r0, [fp, #-4]
   288c0:	ldr	r1, [r0, #16]
   288c4:	str	r1, [fp, #-20]	; 0xffffffec
   288c8:	ldr	r0, [r0, #20]
   288cc:	str	r0, [fp, #-16]
   288d0:	ldr	r0, [fp, #-4]
   288d4:	ldr	r0, [r0]
   288d8:	ldr	r1, [sp, #24]
   288dc:	add	r1, r0, r1
   288e0:	ldr	r2, [sp, #8]
   288e4:	ldr	r0, [fp, #-4]
   288e8:	add	r3, r0, #16
   288ec:	add	r0, sp, #12
   288f0:	bl	39e50 <__assert_fail@plt+0x286fc>
   288f4:	str	r0, [sp, #20]
   288f8:	ldr	r0, [sp, #20]
   288fc:	cmn	r0, #2
   28900:	movw	r0, #1
   28904:	str	r0, [sp, #4]
   28908:	beq	28934 <__assert_fail@plt+0x171e0>
   2890c:	ldr	r0, [sp, #20]
   28910:	cmn	r0, #1
   28914:	movw	r0, #1
   28918:	str	r0, [sp, #4]
   2891c:	beq	28934 <__assert_fail@plt+0x171e0>
   28920:	ldr	r0, [sp, #20]
   28924:	cmp	r0, #0
   28928:	movw	r0, #0
   2892c:	moveq	r0, #1
   28930:	str	r0, [sp, #4]
   28934:	ldr	r0, [sp, #4]
   28938:	tst	r0, #1
   2893c:	beq	2899c <__assert_fail@plt+0x17248>
   28940:	ldr	r0, [sp, #20]
   28944:	cmp	r0, #0
   28948:	beq	28958 <__assert_fail@plt+0x17204>
   2894c:	ldr	r0, [sp, #8]
   28950:	cmp	r0, #0
   28954:	bne	28964 <__assert_fail@plt+0x17210>
   28958:	movw	r0, #0
   2895c:	str	r0, [sp, #16]
   28960:	b	2897c <__assert_fail@plt+0x17228>
   28964:	ldr	r0, [fp, #-4]
   28968:	ldr	r0, [r0]
   2896c:	ldr	r1, [sp, #24]
   28970:	add	r0, r0, r1
   28974:	ldrb	r0, [r0]
   28978:	str	r0, [sp, #16]
   2897c:	movw	r0, #1
   28980:	str	r0, [sp, #20]
   28984:	ldr	r0, [fp, #-4]
   28988:	ldr	r1, [fp, #-20]	; 0xffffffec
   2898c:	str	r1, [r0, #16]
   28990:	ldr	r1, [fp, #-16]
   28994:	str	r1, [r0, #20]
   28998:	b	289a4 <__assert_fail@plt+0x17250>
   2899c:	ldr	r0, [sp, #12]
   289a0:	str	r0, [sp, #16]
   289a4:	ldr	r0, [sp, #20]
   289a8:	ldr	r1, [sp, #24]
   289ac:	add	r0, r1, r0
   289b0:	str	r0, [sp, #24]
   289b4:	b	28898 <__assert_fail@plt+0x17144>
   289b8:	ldr	r0, [sp, #16]
   289bc:	ldr	r1, [fp, #-12]
   289c0:	str	r0, [r1]
   289c4:	ldr	r0, [sp, #24]
   289c8:	mov	sp, fp
   289cc:	pop	{fp, pc}
   289d0:	sub	sp, sp, #8
   289d4:	str	r0, [sp, #4]
   289d8:	str	r1, [sp]
   289dc:	ldr	r0, [sp, #4]
   289e0:	ldr	r1, [sp]
   289e4:	asr	r2, r1, #31
   289e8:	add	r2, r1, r2, lsr #27
   289ec:	asr	r3, r2, #5
   289f0:	ldr	r0, [r0, r3, lsl #2]
   289f4:	bic	r2, r2, #31
   289f8:	sub	r1, r1, r2
   289fc:	lsr	r0, r0, r1
   28a00:	and	r0, r0, #1
   28a04:	cmp	r0, #0
   28a08:	movw	r0, #0
   28a0c:	movne	r0, #1
   28a10:	and	r0, r0, #1
   28a14:	add	sp, sp, #8
   28a18:	bx	lr
   28a1c:	push	{fp, lr}
   28a20:	mov	fp, sp
   28a24:	sub	sp, sp, #32
   28a28:	str	r0, [fp, #-8]
   28a2c:	str	r1, [fp, #-12]
   28a30:	str	r2, [sp, #16]
   28a34:	ldr	r0, [fp, #-8]
   28a38:	ldr	r0, [r0, #84]	; 0x54
   28a3c:	str	r0, [sp, #12]
   28a40:	movw	r0, #0
   28a44:	str	r0, [sp, #8]
   28a48:	ldr	r0, [sp, #8]
   28a4c:	ldr	r1, [fp, #-12]
   28a50:	ldr	r1, [r1, #4]
   28a54:	cmp	r0, r1
   28a58:	bge	28b1c <__assert_fail@plt+0x173c8>
   28a5c:	ldr	r0, [fp, #-12]
   28a60:	ldr	r0, [r0, #8]
   28a64:	ldr	r1, [sp, #8]
   28a68:	ldr	r0, [r0, r1, lsl #2]
   28a6c:	str	r0, [sp]
   28a70:	ldr	r0, [sp, #12]
   28a74:	ldr	r0, [r0]
   28a78:	ldr	r1, [sp]
   28a7c:	add	r0, r0, r1, lsl #3
   28a80:	ldr	r0, [r0, #4]
   28a84:	and	r0, r0, #255	; 0xff
   28a88:	cmp	r0, #8
   28a8c:	bne	28b08 <__assert_fail@plt+0x173b4>
   28a90:	ldr	r0, [sp, #12]
   28a94:	ldr	r0, [r0]
   28a98:	ldr	r1, [sp]
   28a9c:	add	r0, r0, r1, lsl #3
   28aa0:	ldr	r0, [r0]
   28aa4:	cmp	r0, #32
   28aa8:	bge	28b08 <__assert_fail@plt+0x173b4>
   28aac:	ldr	r0, [sp, #12]
   28ab0:	ldr	r1, [r0]
   28ab4:	ldr	r0, [r0, #80]	; 0x50
   28ab8:	ldr	r2, [sp]
   28abc:	add	r1, r1, r2, lsl #3
   28ac0:	ldr	r1, [r1]
   28ac4:	movw	r2, #1
   28ac8:	lsl	r1, r2, r1
   28acc:	and	r0, r0, r1
   28ad0:	cmp	r0, #0
   28ad4:	beq	28b08 <__assert_fail@plt+0x173b4>
   28ad8:	ldr	r0, [fp, #-8]
   28adc:	ldr	r1, [sp]
   28ae0:	ldr	r2, [sp, #16]
   28ae4:	bl	29768 <__assert_fail@plt+0x18014>
   28ae8:	str	r0, [sp, #4]
   28aec:	ldr	r0, [sp, #4]
   28af0:	cmp	r0, #0
   28af4:	beq	28b04 <__assert_fail@plt+0x173b0>
   28af8:	ldr	r0, [sp, #4]
   28afc:	str	r0, [fp, #-4]
   28b00:	b	28b24 <__assert_fail@plt+0x173d0>
   28b04:	b	28b08 <__assert_fail@plt+0x173b4>
   28b08:	b	28b0c <__assert_fail@plt+0x173b8>
   28b0c:	ldr	r0, [sp, #8]
   28b10:	add	r0, r0, #1
   28b14:	str	r0, [sp, #8]
   28b18:	b	28a48 <__assert_fail@plt+0x172f4>
   28b1c:	movw	r0, #0
   28b20:	str	r0, [fp, #-4]
   28b24:	ldr	r0, [fp, #-4]
   28b28:	mov	sp, fp
   28b2c:	pop	{fp, pc}
   28b30:	push	{fp, lr}
   28b34:	mov	fp, sp
   28b38:	sub	sp, sp, #96	; 0x60
   28b3c:	str	r0, [fp, #-4]
   28b40:	str	r1, [fp, #-8]
   28b44:	ldr	r0, [fp, #-4]
   28b48:	ldr	r0, [r0, #84]	; 0x54
   28b4c:	str	r0, [fp, #-12]
   28b50:	ldr	r0, [fp, #-4]
   28b54:	ldr	r0, [r0, #40]	; 0x28
   28b58:	str	r0, [fp, #-24]	; 0xffffffe8
   28b5c:	movw	r0, #0
   28b60:	str	r0, [fp, #-20]	; 0xffffffec
   28b64:	ldr	r0, [fp, #-20]	; 0xffffffec
   28b68:	ldr	r1, [fp, #-8]
   28b6c:	ldr	r1, [r1, #4]
   28b70:	cmp	r0, r1
   28b74:	bge	29058 <__assert_fail@plt+0x17904>
   28b78:	ldr	r0, [fp, #-8]
   28b7c:	ldr	r0, [r0, #8]
   28b80:	ldr	r1, [fp, #-20]	; 0xffffffec
   28b84:	ldr	r0, [r0, r1, lsl #2]
   28b88:	str	r0, [fp, #-40]	; 0xffffffd8
   28b8c:	ldr	r0, [fp, #-12]
   28b90:	ldr	r0, [r0]
   28b94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28b98:	add	r0, r0, r1, lsl #3
   28b9c:	str	r0, [sp, #48]	; 0x30
   28ba0:	ldr	r0, [sp, #48]	; 0x30
   28ba4:	ldr	r0, [r0, #4]
   28ba8:	and	r0, r0, #255	; 0xff
   28bac:	cmp	r0, #4
   28bb0:	beq	28bb8 <__assert_fail@plt+0x17464>
   28bb4:	b	29048 <__assert_fail@plt+0x178f4>
   28bb8:	ldr	r0, [sp, #48]	; 0x30
   28bbc:	ldr	r0, [r0, #4]
   28bc0:	lsr	r0, r0, #8
   28bc4:	movw	r1, #1023	; 0x3ff
   28bc8:	and	r0, r0, r1
   28bcc:	cmp	r0, #0
   28bd0:	beq	28cb4 <__assert_fail@plt+0x17560>
   28bd4:	ldr	r0, [fp, #-4]
   28bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28bdc:	ldr	r2, [fp, #-4]
   28be0:	ldr	r2, [r2, #88]	; 0x58
   28be4:	bl	28660 <__assert_fail@plt+0x16f0c>
   28be8:	str	r0, [fp, #-44]	; 0xffffffd4
   28bec:	ldr	r0, [sp, #48]	; 0x30
   28bf0:	ldr	r0, [r0, #4]
   28bf4:	lsr	r0, r0, #8
   28bf8:	movw	r1, #1023	; 0x3ff
   28bfc:	and	r0, r0, r1
   28c00:	and	r0, r0, #4
   28c04:	cmp	r0, #0
   28c08:	beq	28c1c <__assert_fail@plt+0x174c8>
   28c0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28c10:	and	r0, r0, #1
   28c14:	cmp	r0, #0
   28c18:	beq	28cac <__assert_fail@plt+0x17558>
   28c1c:	ldr	r0, [sp, #48]	; 0x30
   28c20:	ldr	r0, [r0, #4]
   28c24:	lsr	r0, r0, #8
   28c28:	movw	r1, #1023	; 0x3ff
   28c2c:	and	r0, r0, r1
   28c30:	and	r0, r0, #8
   28c34:	cmp	r0, #0
   28c38:	beq	28c4c <__assert_fail@plt+0x174f8>
   28c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28c40:	and	r0, r0, #1
   28c44:	cmp	r0, #0
   28c48:	bne	28cac <__assert_fail@plt+0x17558>
   28c4c:	ldr	r0, [sp, #48]	; 0x30
   28c50:	ldr	r0, [r0, #4]
   28c54:	lsr	r0, r0, #8
   28c58:	movw	r1, #1023	; 0x3ff
   28c5c:	and	r0, r0, r1
   28c60:	and	r0, r0, #32
   28c64:	cmp	r0, #0
   28c68:	beq	28c7c <__assert_fail@plt+0x17528>
   28c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28c70:	and	r0, r0, #2
   28c74:	cmp	r0, #0
   28c78:	beq	28cac <__assert_fail@plt+0x17558>
   28c7c:	ldr	r0, [sp, #48]	; 0x30
   28c80:	ldr	r0, [r0, #4]
   28c84:	lsr	r0, r0, #8
   28c88:	movw	r1, #1023	; 0x3ff
   28c8c:	and	r0, r0, r1
   28c90:	and	r0, r0, #128	; 0x80
   28c94:	cmp	r0, #0
   28c98:	beq	28cb0 <__assert_fail@plt+0x1755c>
   28c9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28ca0:	and	r0, r0, #8
   28ca4:	cmp	r0, #0
   28ca8:	bne	28cb0 <__assert_fail@plt+0x1755c>
   28cac:	b	29048 <__assert_fail@plt+0x178f4>
   28cb0:	b	28cb4 <__assert_fail@plt+0x17560>
   28cb4:	ldr	r0, [fp, #-4]
   28cb8:	ldr	r0, [r0, #108]	; 0x6c
   28cbc:	str	r0, [fp, #-36]	; 0xffffffdc
   28cc0:	ldr	r0, [fp, #-4]
   28cc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28ccc:	bl	298b8 <__assert_fail@plt+0x18164>
   28cd0:	str	r0, [fp, #-16]
   28cd4:	ldr	r0, [fp, #-16]
   28cd8:	cmp	r0, #0
   28cdc:	beq	28ce4 <__assert_fail@plt+0x17590>
   28ce0:	b	29060 <__assert_fail@plt+0x1790c>
   28ce4:	ldr	r0, [fp, #-12]
   28ce8:	ldr	r0, [r0, #12]
   28cec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28cf0:	add	r0, r0, r1, lsl #2
   28cf4:	ldr	r0, [r0]
   28cf8:	cmn	r0, #1
   28cfc:	beq	28d04 <__assert_fail@plt+0x175b0>
   28d00:	b	28d04 <__assert_fail@plt+0x175b0>
   28d04:	b	28d08 <__assert_fail@plt+0x175b4>
   28d08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28d0c:	ldr	r1, [fp, #-4]
   28d10:	ldr	r1, [r1, #108]	; 0x6c
   28d14:	cmp	r0, r1
   28d18:	bge	29044 <__assert_fail@plt+0x178f0>
   28d1c:	ldr	r0, [fp, #-4]
   28d20:	ldr	r0, [r0, #116]	; 0x74
   28d24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28d28:	movw	r2, #24
   28d2c:	mul	r1, r1, r2
   28d30:	add	r0, r0, r1
   28d34:	str	r0, [sp, #32]
   28d38:	ldr	r0, [sp, #32]
   28d3c:	ldr	r0, [r0]
   28d40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28d44:	cmp	r0, r1
   28d48:	bne	28d60 <__assert_fail@plt+0x1760c>
   28d4c:	ldr	r0, [sp, #32]
   28d50:	ldr	r0, [r0, #4]
   28d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28d58:	cmp	r0, r1
   28d5c:	beq	28d64 <__assert_fail@plt+0x17610>
   28d60:	b	29034 <__assert_fail@plt+0x178e0>
   28d64:	ldr	r0, [sp, #32]
   28d68:	ldr	r0, [r0, #12]
   28d6c:	ldr	r1, [sp, #32]
   28d70:	ldr	r1, [r1, #8]
   28d74:	sub	r0, r0, r1
   28d78:	str	r0, [sp, #40]	; 0x28
   28d7c:	ldr	r0, [sp, #40]	; 0x28
   28d80:	cmp	r0, #0
   28d84:	bne	28dc0 <__assert_fail@plt+0x1766c>
   28d88:	ldr	r0, [fp, #-12]
   28d8c:	ldr	r0, [r0, #24]
   28d90:	ldr	r1, [fp, #-12]
   28d94:	ldr	r1, [r1, #20]
   28d98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28d9c:	movw	r3, #12
   28da0:	mul	r2, r2, r3
   28da4:	add	r1, r1, r2
   28da8:	ldr	r1, [r1, #8]
   28dac:	ldr	r1, [r1]
   28db0:	mul	r1, r1, r3
   28db4:	add	r0, r0, r1
   28db8:	str	r0, [sp, #16]
   28dbc:	b	28de8 <__assert_fail@plt+0x17694>
   28dc0:	ldr	r0, [fp, #-12]
   28dc4:	ldr	r1, [r0, #12]
   28dc8:	ldr	r0, [r0, #24]
   28dcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28dd0:	add	r1, r1, r2, lsl #2
   28dd4:	ldr	r1, [r1]
   28dd8:	movw	r2, #12
   28ddc:	mul	r1, r1, r2
   28de0:	add	r0, r0, r1
   28de4:	str	r0, [sp, #16]
   28de8:	ldr	r0, [sp, #16]
   28dec:	str	r0, [sp, #44]	; 0x2c
   28df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28df4:	ldr	r1, [sp, #32]
   28df8:	ldr	r2, [r1, #8]
   28dfc:	ldr	r1, [r1, #12]
   28e00:	add	r0, r0, r1
   28e04:	sub	r0, r0, r2
   28e08:	str	r0, [fp, #-28]	; 0xffffffe4
   28e0c:	ldr	r0, [fp, #-4]
   28e10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28e14:	sub	r1, r1, #1
   28e18:	ldr	r2, [r0, #88]	; 0x58
   28e1c:	bl	28660 <__assert_fail@plt+0x16f0c>
   28e20:	str	r0, [fp, #-44]	; 0xffffffd4
   28e24:	ldr	r0, [fp, #-4]
   28e28:	ldr	r0, [r0, #100]	; 0x64
   28e2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28e30:	ldr	r0, [r0, r1, lsl #2]
   28e34:	str	r0, [sp, #36]	; 0x24
   28e38:	ldr	r0, [fp, #-4]
   28e3c:	ldr	r0, [r0, #100]	; 0x64
   28e40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28e44:	add	r0, r0, r1, lsl #2
   28e48:	ldr	r0, [r0]
   28e4c:	movw	r1, #0
   28e50:	cmp	r0, r1
   28e54:	bne	28e64 <__assert_fail@plt+0x17710>
   28e58:	movw	r0, #0
   28e5c:	str	r0, [sp, #12]
   28e60:	b	28e80 <__assert_fail@plt+0x1772c>
   28e64:	ldr	r0, [fp, #-4]
   28e68:	ldr	r0, [r0, #100]	; 0x64
   28e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28e70:	add	r0, r0, r1, lsl #2
   28e74:	ldr	r0, [r0]
   28e78:	ldr	r0, [r0, #8]
   28e7c:	str	r0, [sp, #12]
   28e80:	ldr	r0, [sp, #12]
   28e84:	str	r0, [fp, #-32]	; 0xffffffe0
   28e88:	ldr	r0, [sp, #36]	; 0x24
   28e8c:	movw	r1, #0
   28e90:	cmp	r0, r1
   28e94:	bne	28f0c <__assert_fail@plt+0x177b8>
   28e98:	ldr	r1, [fp, #-12]
   28e9c:	ldr	r2, [sp, #44]	; 0x2c
   28ea0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28ea4:	sub	r0, fp, #16
   28ea8:	bl	25e24 <__assert_fail@plt+0x146d0>
   28eac:	ldr	r1, [fp, #-4]
   28eb0:	ldr	r1, [r1, #100]	; 0x64
   28eb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28eb8:	str	r0, [r1, r2, lsl #2]
   28ebc:	ldr	r0, [fp, #-4]
   28ec0:	ldr	r0, [r0, #100]	; 0x64
   28ec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28ec8:	add	r0, r0, r1, lsl #2
   28ecc:	ldr	r0, [r0]
   28ed0:	movw	r1, #0
   28ed4:	cmp	r0, r1
   28ed8:	movw	r0, #0
   28edc:	str	r0, [sp, #8]
   28ee0:	bne	28ef8 <__assert_fail@plt+0x177a4>
   28ee4:	ldr	r0, [fp, #-16]
   28ee8:	cmp	r0, #0
   28eec:	movw	r0, #0
   28ef0:	movne	r0, #1
   28ef4:	str	r0, [sp, #8]
   28ef8:	ldr	r0, [sp, #8]
   28efc:	tst	r0, #1
   28f00:	beq	28f08 <__assert_fail@plt+0x177b4>
   28f04:	b	29060 <__assert_fail@plt+0x1790c>
   28f08:	b	28fb8 <__assert_fail@plt+0x17864>
   28f0c:	ldr	r0, [sp, #36]	; 0x24
   28f10:	ldr	r1, [r0, #40]	; 0x28
   28f14:	ldr	r2, [sp, #44]	; 0x2c
   28f18:	add	r0, sp, #20
   28f1c:	bl	29e54 <__assert_fail@plt+0x18700>
   28f20:	str	r0, [fp, #-16]
   28f24:	ldr	r0, [fp, #-16]
   28f28:	cmp	r0, #0
   28f2c:	beq	28f3c <__assert_fail@plt+0x177e8>
   28f30:	ldr	r0, [sp, #28]
   28f34:	bl	15f68 <__assert_fail@plt+0x4814>
   28f38:	b	29060 <__assert_fail@plt+0x1790c>
   28f3c:	ldr	r1, [fp, #-12]
   28f40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28f44:	sub	r0, fp, #16
   28f48:	add	r2, sp, #20
   28f4c:	bl	25e24 <__assert_fail@plt+0x146d0>
   28f50:	ldr	r1, [fp, #-4]
   28f54:	ldr	r1, [r1, #100]	; 0x64
   28f58:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28f5c:	str	r0, [r1, r2, lsl #2]
   28f60:	ldr	r0, [sp, #28]
   28f64:	bl	15f68 <__assert_fail@plt+0x4814>
   28f68:	ldr	r0, [fp, #-4]
   28f6c:	ldr	r0, [r0, #100]	; 0x64
   28f70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28f74:	add	r0, r0, r1, lsl #2
   28f78:	ldr	r0, [r0]
   28f7c:	movw	r1, #0
   28f80:	cmp	r0, r1
   28f84:	movw	r0, #0
   28f88:	str	r0, [sp, #4]
   28f8c:	bne	28fa4 <__assert_fail@plt+0x17850>
   28f90:	ldr	r0, [fp, #-16]
   28f94:	cmp	r0, #0
   28f98:	movw	r0, #0
   28f9c:	movne	r0, #1
   28fa0:	str	r0, [sp, #4]
   28fa4:	ldr	r0, [sp, #4]
   28fa8:	tst	r0, #1
   28fac:	beq	28fb4 <__assert_fail@plt+0x17860>
   28fb0:	b	29060 <__assert_fail@plt+0x1790c>
   28fb4:	b	28fb8 <__assert_fail@plt+0x17864>
   28fb8:	ldr	r0, [sp, #40]	; 0x28
   28fbc:	cmp	r0, #0
   28fc0:	bne	29030 <__assert_fail@plt+0x178dc>
   28fc4:	ldr	r0, [fp, #-4]
   28fc8:	ldr	r0, [r0, #100]	; 0x64
   28fcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28fd0:	add	r0, r0, r1, lsl #2
   28fd4:	ldr	r0, [r0]
   28fd8:	ldr	r0, [r0, #8]
   28fdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28fe0:	cmp	r0, r1
   28fe4:	ble	29030 <__assert_fail@plt+0x178dc>
   28fe8:	ldr	r0, [fp, #-4]
   28fec:	ldr	r1, [sp, #44]	; 0x2c
   28ff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28ff4:	bl	28a1c <__assert_fail@plt+0x172c8>
   28ff8:	str	r0, [fp, #-16]
   28ffc:	ldr	r0, [fp, #-16]
   29000:	cmp	r0, #0
   29004:	beq	2900c <__assert_fail@plt+0x178b8>
   29008:	b	29060 <__assert_fail@plt+0x1790c>
   2900c:	ldr	r0, [fp, #-4]
   29010:	ldr	r1, [sp, #44]	; 0x2c
   29014:	bl	28b30 <__assert_fail@plt+0x173dc>
   29018:	str	r0, [fp, #-16]
   2901c:	ldr	r0, [fp, #-16]
   29020:	cmp	r0, #0
   29024:	beq	2902c <__assert_fail@plt+0x178d8>
   29028:	b	29060 <__assert_fail@plt+0x1790c>
   2902c:	b	29030 <__assert_fail@plt+0x178dc>
   29030:	b	29034 <__assert_fail@plt+0x178e0>
   29034:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29038:	add	r0, r0, #1
   2903c:	str	r0, [fp, #-36]	; 0xffffffdc
   29040:	b	28d08 <__assert_fail@plt+0x175b4>
   29044:	b	29048 <__assert_fail@plt+0x178f4>
   29048:	ldr	r0, [fp, #-20]	; 0xffffffec
   2904c:	add	r0, r0, #1
   29050:	str	r0, [fp, #-20]	; 0xffffffec
   29054:	b	28b64 <__assert_fail@plt+0x17410>
   29058:	movw	r0, #0
   2905c:	str	r0, [fp, #-16]
   29060:	ldr	r0, [fp, #-16]
   29064:	mov	sp, fp
   29068:	pop	{fp, pc}
   2906c:	push	{fp, lr}
   29070:	mov	fp, sp
   29074:	sub	sp, sp, #48	; 0x30
   29078:	ldr	r2, [pc, #512]	; 29280 <__assert_fail@plt+0x17b2c>
   2907c:	str	r0, [fp, #-8]
   29080:	str	r1, [fp, #-12]
   29084:	ldr	r0, [fp, #-8]
   29088:	str	r0, [fp, #-20]	; 0xffffffec
   2908c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29090:	ldr	r0, [r0, #36]	; 0x24
   29094:	cmp	r2, r0
   29098:	bhi	290a8 <__assert_fail@plt+0x17954>
   2909c:	movw	r0, #12
   290a0:	str	r0, [fp, #-4]
   290a4:	b	29274 <__assert_fail@plt+0x17b20>
   290a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   290ac:	ldr	r1, [fp, #-12]
   290b0:	ldr	r2, [r0, #36]	; 0x24
   290b4:	ldr	r3, [r0, #48]	; 0x30
   290b8:	lsl	r2, r2, #1
   290bc:	cmp	r3, r2
   290c0:	str	r0, [sp, #20]
   290c4:	str	r1, [sp, #16]
   290c8:	bge	290dc <__assert_fail@plt+0x17988>
   290cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   290d0:	ldr	r0, [r0, #48]	; 0x30
   290d4:	str	r0, [sp, #12]
   290d8:	b	290ec <__assert_fail@plt+0x17998>
   290dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   290e0:	ldr	r0, [r0, #36]	; 0x24
   290e4:	lsl	r0, r0, #1
   290e8:	str	r0, [sp, #12]
   290ec:	ldr	r0, [sp, #12]
   290f0:	ldr	r1, [sp, #16]
   290f4:	cmp	r1, r0
   290f8:	bge	29140 <__assert_fail@plt+0x179ec>
   290fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   29100:	ldr	r1, [r0, #36]	; 0x24
   29104:	ldr	r0, [r0, #48]	; 0x30
   29108:	lsl	r1, r1, #1
   2910c:	cmp	r0, r1
   29110:	bge	29124 <__assert_fail@plt+0x179d0>
   29114:	ldr	r0, [fp, #-20]	; 0xffffffec
   29118:	ldr	r0, [r0, #48]	; 0x30
   2911c:	str	r0, [sp, #8]
   29120:	b	29134 <__assert_fail@plt+0x179e0>
   29124:	ldr	r0, [fp, #-20]	; 0xffffffec
   29128:	ldr	r0, [r0, #36]	; 0x24
   2912c:	lsl	r0, r0, #1
   29130:	str	r0, [sp, #8]
   29134:	ldr	r0, [sp, #8]
   29138:	str	r0, [sp, #4]
   2913c:	b	29148 <__assert_fail@plt+0x179f4>
   29140:	ldr	r0, [fp, #-12]
   29144:	str	r0, [sp, #4]
   29148:	ldr	r0, [sp, #4]
   2914c:	ldr	r1, [sp, #20]
   29150:	str	r0, [sp]
   29154:	mov	r0, r1
   29158:	ldr	r1, [sp]
   2915c:	bl	1cdac <__assert_fail@plt+0xb658>
   29160:	str	r0, [fp, #-16]
   29164:	ldr	r0, [fp, #-16]
   29168:	cmp	r0, #0
   2916c:	beq	2917c <__assert_fail@plt+0x17a28>
   29170:	ldr	r0, [fp, #-16]
   29174:	str	r0, [fp, #-4]
   29178:	b	29274 <__assert_fail@plt+0x17b20>
   2917c:	ldr	r0, [fp, #-8]
   29180:	ldr	r0, [r0, #100]	; 0x64
   29184:	movw	r1, #0
   29188:	cmp	r0, r1
   2918c:	beq	291d8 <__assert_fail@plt+0x17a84>
   29190:	ldr	r0, [fp, #-8]
   29194:	ldr	r0, [r0, #100]	; 0x64
   29198:	ldr	r1, [fp, #-20]	; 0xffffffec
   2919c:	ldr	r1, [r1, #36]	; 0x24
   291a0:	add	r1, r1, #1
   291a4:	lsl	r1, r1, #2
   291a8:	bl	381dc <__assert_fail@plt+0x26a88>
   291ac:	str	r0, [sp, #24]
   291b0:	ldr	r0, [sp, #24]
   291b4:	movw	r1, #0
   291b8:	cmp	r0, r1
   291bc:	bne	291cc <__assert_fail@plt+0x17a78>
   291c0:	movw	r0, #12
   291c4:	str	r0, [fp, #-4]
   291c8:	b	29274 <__assert_fail@plt+0x17b20>
   291cc:	ldr	r0, [sp, #24]
   291d0:	ldr	r1, [fp, #-8]
   291d4:	str	r0, [r1, #100]	; 0x64
   291d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   291dc:	ldrsb	r0, [r0, #72]	; 0x48
   291e0:	cmp	r0, #0
   291e4:	beq	2922c <__assert_fail@plt+0x17ad8>
   291e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   291ec:	ldr	r0, [r0, #80]	; 0x50
   291f0:	cmp	r0, #1
   291f4:	ble	29220 <__assert_fail@plt+0x17acc>
   291f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   291fc:	bl	1cf04 <__assert_fail@plt+0xb7b0>
   29200:	str	r0, [fp, #-16]
   29204:	ldr	r0, [fp, #-16]
   29208:	cmp	r0, #0
   2920c:	beq	2921c <__assert_fail@plt+0x17ac8>
   29210:	ldr	r0, [fp, #-16]
   29214:	str	r0, [fp, #-4]
   29218:	b	29274 <__assert_fail@plt+0x17b20>
   2921c:	b	29228 <__assert_fail@plt+0x17ad4>
   29220:	ldr	r0, [fp, #-20]	; 0xffffffec
   29224:	bl	1d9ac <__assert_fail@plt+0xc258>
   29228:	b	2926c <__assert_fail@plt+0x17b18>
   2922c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29230:	ldr	r0, [r0, #80]	; 0x50
   29234:	cmp	r0, #1
   29238:	ble	29248 <__assert_fail@plt+0x17af4>
   2923c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29240:	bl	1dab0 <__assert_fail@plt+0xc35c>
   29244:	b	29268 <__assert_fail@plt+0x17b14>
   29248:	ldr	r0, [fp, #-20]	; 0xffffffec
   2924c:	ldr	r0, [r0, #64]	; 0x40
   29250:	movw	r1, #0
   29254:	cmp	r0, r1
   29258:	beq	29264 <__assert_fail@plt+0x17b10>
   2925c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29260:	bl	1ddf0 <__assert_fail@plt+0xc69c>
   29264:	b	29268 <__assert_fail@plt+0x17b14>
   29268:	b	2926c <__assert_fail@plt+0x17b18>
   2926c:	movw	r0, #0
   29270:	str	r0, [fp, #-4]
   29274:	ldr	r0, [fp, #-4]
   29278:	mov	sp, fp
   2927c:	pop	{fp, pc}
   29280:	svcne	0x00ffffff
   29284:	push	{fp, lr}
   29288:	mov	fp, sp
   2928c:	sub	sp, sp, #32
   29290:	str	r0, [fp, #-8]
   29294:	str	r1, [fp, #-12]
   29298:	str	r2, [sp, #16]
   2929c:	ldr	r0, [sp, #16]
   292a0:	ldrb	r0, [r0, #52]	; 0x34
   292a4:	ubfx	r0, r0, #5, #1
   292a8:	and	r0, r0, #255	; 0xff
   292ac:	cmp	r0, #0
   292b0:	beq	292e8 <__assert_fail@plt+0x17b94>
   292b4:	ldr	r0, [fp, #-12]
   292b8:	ldr	r1, [sp, #16]
   292bc:	bl	2c600 <__assert_fail@plt+0x1aeac>
   292c0:	ldr	r1, [fp, #-8]
   292c4:	str	r0, [r1]
   292c8:	ldr	r0, [fp, #-8]
   292cc:	ldr	r0, [r0]
   292d0:	cmp	r0, #0
   292d4:	beq	292e4 <__assert_fail@plt+0x17b90>
   292d8:	movw	r0, #0
   292dc:	str	r0, [fp, #-4]
   292e0:	b	293fc <__assert_fail@plt+0x17ca8>
   292e4:	b	292e8 <__assert_fail@plt+0x17b94>
   292e8:	ldr	r0, [fp, #-12]
   292ec:	ldr	r0, [r0, #4]
   292f0:	ldr	r1, [fp, #-12]
   292f4:	ldr	r2, [r1, #40]	; 0x28
   292f8:	add	r3, r2, #1
   292fc:	str	r3, [r1, #40]	; 0x28
   29300:	add	r0, r0, r2
   29304:	ldrb	r0, [r0]
   29308:	strb	r0, [sp, #11]
   2930c:	ldr	r0, [sp, #16]
   29310:	ldr	r0, [r0, #44]	; 0x2c
   29314:	str	r0, [sp, #12]
   29318:	ldr	r0, [sp, #12]
   2931c:	movw	r1, #0
   29320:	cmp	r0, r1
   29324:	beq	29344 <__assert_fail@plt+0x17bf0>
   29328:	ldr	r0, [sp, #12]
   2932c:	ldrb	r1, [sp, #11]
   29330:	mov	r2, r1
   29334:	add	r0, r0, r1, lsl #2
   29338:	ldr	r0, [r0]
   2933c:	str	r0, [fp, #-4]
   29340:	b	293fc <__assert_fail@plt+0x17ca8>
   29344:	ldr	r0, [sp, #16]
   29348:	ldr	r0, [r0, #48]	; 0x30
   2934c:	str	r0, [sp, #12]
   29350:	ldr	r0, [sp, #12]
   29354:	movw	r1, #0
   29358:	cmp	r0, r1
   2935c:	beq	293c8 <__assert_fail@plt+0x17c74>
   29360:	ldr	r0, [fp, #-12]
   29364:	ldr	r1, [fp, #-12]
   29368:	ldr	r1, [r1, #40]	; 0x28
   2936c:	sub	r1, r1, #1
   29370:	ldr	r2, [fp, #-12]
   29374:	ldr	r2, [r2, #88]	; 0x58
   29378:	bl	28660 <__assert_fail@plt+0x16f0c>
   2937c:	str	r0, [sp, #4]
   29380:	ldr	r0, [sp, #4]
   29384:	and	r0, r0, #1
   29388:	cmp	r0, #0
   2938c:	beq	293ac <__assert_fail@plt+0x17c58>
   29390:	ldr	r0, [sp, #12]
   29394:	ldrb	r1, [sp, #11]
   29398:	orr	r1, r1, #256	; 0x100
   2939c:	add	r0, r0, r1, lsl #2
   293a0:	ldr	r0, [r0]
   293a4:	str	r0, [fp, #-4]
   293a8:	b	293fc <__assert_fail@plt+0x17ca8>
   293ac:	ldr	r0, [sp, #12]
   293b0:	ldrb	r1, [sp, #11]
   293b4:	mov	r2, r1
   293b8:	add	r0, r0, r1, lsl #2
   293bc:	ldr	r0, [r0]
   293c0:	str	r0, [fp, #-4]
   293c4:	b	293fc <__assert_fail@plt+0x17ca8>
   293c8:	ldr	r0, [fp, #-12]
   293cc:	ldr	r0, [r0, #84]	; 0x54
   293d0:	ldr	r1, [sp, #16]
   293d4:	bl	2c9dc <__assert_fail@plt+0x1b288>
   293d8:	tst	r0, #1
   293dc:	bne	293f8 <__assert_fail@plt+0x17ca4>
   293e0:	ldr	r0, [fp, #-8]
   293e4:	movw	r1, #12
   293e8:	str	r1, [r0]
   293ec:	movw	r0, #0
   293f0:	str	r0, [fp, #-4]
   293f4:	b	293fc <__assert_fail@plt+0x17ca8>
   293f8:	b	2930c <__assert_fail@plt+0x17bb8>
   293fc:	ldr	r0, [fp, #-4]
   29400:	mov	sp, fp
   29404:	pop	{fp, pc}
   29408:	push	{fp, lr}
   2940c:	mov	fp, sp
   29410:	sub	sp, sp, #56	; 0x38
   29414:	str	r0, [fp, #-8]
   29418:	str	r1, [fp, #-12]
   2941c:	str	r2, [fp, #-16]
   29420:	ldr	r0, [fp, #-12]
   29424:	ldr	r0, [r0, #84]	; 0x54
   29428:	str	r0, [fp, #-20]	; 0xffffffec
   2942c:	ldr	r0, [fp, #-12]
   29430:	ldr	r0, [r0, #40]	; 0x28
   29434:	str	r0, [fp, #-24]	; 0xffffffe8
   29438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2943c:	ldr	r1, [fp, #-12]
   29440:	ldr	r1, [r1, #104]	; 0x68
   29444:	cmp	r0, r1
   29448:	ble	29474 <__assert_fail@plt+0x17d20>
   2944c:	ldr	r0, [fp, #-16]
   29450:	ldr	r1, [fp, #-12]
   29454:	ldr	r1, [r1, #100]	; 0x64
   29458:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2945c:	add	r1, r1, r2, lsl #2
   29460:	str	r0, [r1]
   29464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29468:	ldr	r1, [fp, #-12]
   2946c:	str	r0, [r1, #104]	; 0x68
   29470:	b	295b0 <__assert_fail@plt+0x17e5c>
   29474:	ldr	r0, [fp, #-12]
   29478:	ldr	r0, [r0, #100]	; 0x64
   2947c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29480:	add	r0, r0, r1, lsl #2
   29484:	ldr	r0, [r0]
   29488:	movw	r1, #0
   2948c:	cmp	r0, r1
   29490:	bne	294b0 <__assert_fail@plt+0x17d5c>
   29494:	ldr	r0, [fp, #-16]
   29498:	ldr	r1, [fp, #-12]
   2949c:	ldr	r1, [r1, #100]	; 0x64
   294a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   294a4:	add	r1, r1, r2, lsl #2
   294a8:	str	r0, [r1]
   294ac:	b	295ac <__assert_fail@plt+0x17e58>
   294b0:	mov	r0, #0
   294b4:	str	r0, [sp, #4]
   294b8:	ldr	r0, [fp, #-12]
   294bc:	ldr	r0, [r0, #100]	; 0x64
   294c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   294c4:	add	r0, r0, r1, lsl #2
   294c8:	ldr	r0, [r0]
   294cc:	str	r0, [sp, #28]
   294d0:	ldr	r0, [sp, #28]
   294d4:	ldr	r0, [r0, #40]	; 0x28
   294d8:	str	r0, [sp, #8]
   294dc:	ldr	r0, [fp, #-16]
   294e0:	movw	r1, #0
   294e4:	cmp	r0, r1
   294e8:	beq	29530 <__assert_fail@plt+0x17ddc>
   294ec:	ldr	r0, [fp, #-16]
   294f0:	ldr	r0, [r0, #40]	; 0x28
   294f4:	str	r0, [sp, #4]
   294f8:	ldr	r1, [sp, #4]
   294fc:	ldr	r2, [sp, #8]
   29500:	add	r0, sp, #12
   29504:	bl	29e54 <__assert_fail@plt+0x18700>
   29508:	ldr	r1, [fp, #-8]
   2950c:	str	r0, [r1]
   29510:	ldr	r0, [fp, #-8]
   29514:	ldr	r0, [r0]
   29518:	cmp	r0, #0
   2951c:	beq	2952c <__assert_fail@plt+0x17dd8>
   29520:	movw	r0, #0
   29524:	str	r0, [fp, #-4]
   29528:	b	29678 <__assert_fail@plt+0x17f24>
   2952c:	b	2954c <__assert_fail@plt+0x17df8>
   29530:	ldr	r0, [sp, #8]
   29534:	ldr	r1, [r0]
   29538:	str	r1, [sp, #12]
   2953c:	ldr	r1, [r0, #4]
   29540:	str	r1, [sp, #16]
   29544:	ldr	r0, [r0, #8]
   29548:	str	r0, [sp, #20]
   2954c:	ldr	r0, [fp, #-12]
   29550:	ldr	r1, [r0, #40]	; 0x28
   29554:	ldr	r2, [r0, #88]	; 0x58
   29558:	sub	r1, r1, #1
   2955c:	bl	28660 <__assert_fail@plt+0x16f0c>
   29560:	str	r0, [sp, #24]
   29564:	ldr	r0, [fp, #-8]
   29568:	ldr	r1, [fp, #-20]	; 0xffffffec
   2956c:	ldr	r3, [sp, #24]
   29570:	add	r2, sp, #12
   29574:	bl	25e24 <__assert_fail@plt+0x146d0>
   29578:	ldr	r1, [fp, #-12]
   2957c:	ldr	r1, [r1, #100]	; 0x64
   29580:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29584:	add	r1, r1, r2, lsl #2
   29588:	str	r0, [r1]
   2958c:	str	r0, [fp, #-16]
   29590:	ldr	r0, [sp, #4]
   29594:	movw	r1, #0
   29598:	cmp	r0, r1
   2959c:	beq	295a8 <__assert_fail@plt+0x17e54>
   295a0:	ldr	r0, [sp, #20]
   295a4:	bl	15f68 <__assert_fail@plt+0x4814>
   295a8:	b	295ac <__assert_fail@plt+0x17e58>
   295ac:	b	295b0 <__assert_fail@plt+0x17e5c>
   295b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   295b4:	ldr	r0, [r0, #76]	; 0x4c
   295b8:	cmp	r0, #0
   295bc:	beq	29670 <__assert_fail@plt+0x17f1c>
   295c0:	ldr	r0, [fp, #-16]
   295c4:	movw	r1, #0
   295c8:	cmp	r0, r1
   295cc:	beq	29670 <__assert_fail@plt+0x17f1c>
   295d0:	ldr	r0, [fp, #-12]
   295d4:	ldr	r1, [fp, #-16]
   295d8:	add	r1, r1, #4
   295dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   295e0:	bl	28a1c <__assert_fail@plt+0x172c8>
   295e4:	ldr	r1, [fp, #-8]
   295e8:	str	r0, [r1]
   295ec:	ldr	r0, [fp, #-8]
   295f0:	ldr	r0, [r0]
   295f4:	cmp	r0, #0
   295f8:	beq	29608 <__assert_fail@plt+0x17eb4>
   295fc:	movw	r0, #0
   29600:	str	r0, [fp, #-4]
   29604:	b	29678 <__assert_fail@plt+0x17f24>
   29608:	ldr	r0, [fp, #-16]
   2960c:	ldrb	r0, [r0, #52]	; 0x34
   29610:	ubfx	r0, r0, #6, #1
   29614:	and	r0, r0, #255	; 0xff
   29618:	cmp	r0, #0
   2961c:	beq	2966c <__assert_fail@plt+0x17f18>
   29620:	ldr	r0, [fp, #-12]
   29624:	ldr	r1, [fp, #-16]
   29628:	add	r1, r1, #4
   2962c:	bl	28b30 <__assert_fail@plt+0x173dc>
   29630:	ldr	r1, [fp, #-8]
   29634:	str	r0, [r1]
   29638:	ldr	r0, [fp, #-8]
   2963c:	ldr	r0, [r0]
   29640:	cmp	r0, #0
   29644:	beq	29654 <__assert_fail@plt+0x17f00>
   29648:	movw	r0, #0
   2964c:	str	r0, [fp, #-4]
   29650:	b	29678 <__assert_fail@plt+0x17f24>
   29654:	ldr	r0, [fp, #-12]
   29658:	ldr	r0, [r0, #100]	; 0x64
   2965c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29660:	add	r0, r0, r1, lsl #2
   29664:	ldr	r0, [r0]
   29668:	str	r0, [fp, #-16]
   2966c:	b	29670 <__assert_fail@plt+0x17f1c>
   29670:	ldr	r0, [fp, #-16]
   29674:	str	r0, [fp, #-4]
   29678:	ldr	r0, [fp, #-4]
   2967c:	mov	sp, fp
   29680:	pop	{fp, pc}
   29684:	push	{fp, lr}
   29688:	mov	fp, sp
   2968c:	sub	sp, sp, #32
   29690:	str	r0, [fp, #-8]
   29694:	str	r1, [fp, #-12]
   29698:	ldr	r0, [fp, #-12]
   2969c:	ldr	r0, [r0, #104]	; 0x68
   296a0:	str	r0, [sp, #12]
   296a4:	ldr	r0, [fp, #-12]
   296a8:	ldr	r0, [r0, #40]	; 0x28
   296ac:	str	r0, [sp, #8]
   296b0:	ldr	r0, [sp, #8]
   296b4:	add	r0, r0, #1
   296b8:	str	r0, [sp, #8]
   296bc:	ldr	r1, [sp, #12]
   296c0:	cmp	r0, r1
   296c4:	ble	296d4 <__assert_fail@plt+0x17f80>
   296c8:	movw	r0, #0
   296cc:	str	r0, [fp, #-4]
   296d0:	b	2975c <__assert_fail@plt+0x18008>
   296d4:	ldr	r0, [fp, #-12]
   296d8:	ldr	r1, [r0, #40]	; 0x28
   296dc:	add	r1, r1, #1
   296e0:	str	r1, [r0, #40]	; 0x28
   296e4:	ldr	r0, [fp, #-12]
   296e8:	ldr	r0, [r0, #100]	; 0x64
   296ec:	ldr	r1, [sp, #8]
   296f0:	add	r0, r0, r1, lsl #2
   296f4:	ldr	r0, [r0]
   296f8:	movw	r1, #0
   296fc:	cmp	r0, r1
   29700:	beq	296b0 <__assert_fail@plt+0x17f5c>
   29704:	ldr	r0, [fp, #-8]
   29708:	ldr	r1, [fp, #-12]
   2970c:	movw	r2, #0
   29710:	bl	29408 <__assert_fail@plt+0x17cb4>
   29714:	str	r0, [sp, #16]
   29718:	ldr	r0, [fp, #-8]
   2971c:	ldr	r0, [r0]
   29720:	cmp	r0, #0
   29724:	movw	r0, #0
   29728:	str	r0, [sp, #4]
   2972c:	bne	29748 <__assert_fail@plt+0x17ff4>
   29730:	ldr	r0, [sp, #16]
   29734:	movw	r1, #0
   29738:	cmp	r0, r1
   2973c:	movw	r0, #0
   29740:	moveq	r0, #1
   29744:	str	r0, [sp, #4]
   29748:	ldr	r0, [sp, #4]
   2974c:	tst	r0, #1
   29750:	bne	29698 <__assert_fail@plt+0x17f44>
   29754:	ldr	r0, [sp, #16]
   29758:	str	r0, [fp, #-4]
   2975c:	ldr	r0, [fp, #-4]
   29760:	mov	sp, fp
   29764:	pop	{fp, pc}
   29768:	push	{fp, lr}
   2976c:	mov	fp, sp
   29770:	sub	sp, sp, #24
   29774:	str	r0, [fp, #-8]
   29778:	str	r1, [sp, #12]
   2977c:	str	r2, [sp, #8]
   29780:	ldr	r0, [fp, #-8]
   29784:	ldr	r0, [r0, #132]	; 0x84
   29788:	movw	r1, #0
   2978c:	cmp	r0, r1
   29790:	beq	29798 <__assert_fail@plt+0x18044>
   29794:	b	29798 <__assert_fail@plt+0x18044>
   29798:	ldr	r0, [fp, #-8]
   2979c:	ldr	r0, [r0, #128]	; 0x80
   297a0:	cmp	r0, #0
   297a4:	ble	297ac <__assert_fail@plt+0x18058>
   297a8:	b	297ac <__assert_fail@plt+0x18058>
   297ac:	ldr	r0, [fp, #-8]
   297b0:	ldr	r0, [r0, #124]	; 0x7c
   297b4:	ldr	r1, [fp, #-8]
   297b8:	ldr	r1, [r1, #128]	; 0x80
   297bc:	cmp	r0, r1
   297c0:	bne	29820 <__assert_fail@plt+0x180cc>
   297c4:	ldr	r0, [fp, #-8]
   297c8:	ldr	r0, [r0, #128]	; 0x80
   297cc:	lsl	r0, r0, #1
   297d0:	str	r0, [sp, #4]
   297d4:	ldr	r0, [fp, #-8]
   297d8:	ldr	r0, [r0, #132]	; 0x84
   297dc:	ldr	r1, [sp, #4]
   297e0:	lsl	r1, r1, #2
   297e4:	bl	381dc <__assert_fail@plt+0x26a88>
   297e8:	str	r0, [sp]
   297ec:	ldr	r0, [sp]
   297f0:	movw	r1, #0
   297f4:	cmp	r0, r1
   297f8:	bne	29808 <__assert_fail@plt+0x180b4>
   297fc:	movw	r0, #12
   29800:	str	r0, [fp, #-4]
   29804:	b	298ac <__assert_fail@plt+0x18158>
   29808:	ldr	r0, [sp]
   2980c:	ldr	r1, [fp, #-8]
   29810:	str	r0, [r1, #132]	; 0x84
   29814:	ldr	r0, [sp, #4]
   29818:	ldr	r1, [fp, #-8]
   2981c:	str	r0, [r1, #128]	; 0x80
   29820:	mov	r0, #1
   29824:	mov	r1, #24
   29828:	bl	380d0 <__assert_fail@plt+0x2697c>
   2982c:	ldr	r1, [fp, #-8]
   29830:	ldr	r2, [r1, #124]	; 0x7c
   29834:	ldr	r1, [r1, #132]	; 0x84
   29838:	str	r0, [r1, r2, lsl #2]
   2983c:	ldr	r0, [fp, #-8]
   29840:	ldr	r1, [r0, #124]	; 0x7c
   29844:	ldr	r0, [r0, #132]	; 0x84
   29848:	add	r0, r0, r1, lsl #2
   2984c:	ldr	r0, [r0]
   29850:	movw	r1, #0
   29854:	cmp	r0, r1
   29858:	bne	29868 <__assert_fail@plt+0x18114>
   2985c:	movw	r0, #12
   29860:	str	r0, [fp, #-4]
   29864:	b	298ac <__assert_fail@plt+0x18158>
   29868:	ldr	r0, [sp, #12]
   2986c:	ldr	r1, [fp, #-8]
   29870:	ldr	r2, [r1, #124]	; 0x7c
   29874:	ldr	r1, [r1, #132]	; 0x84
   29878:	ldr	r1, [r1, r2, lsl #2]
   2987c:	str	r0, [r1, #4]
   29880:	ldr	r0, [sp, #8]
   29884:	ldr	r1, [fp, #-8]
   29888:	ldr	r2, [r1, #124]	; 0x7c
   2988c:	ldr	r3, [r1, #132]	; 0x84
   29890:	add	ip, r2, #1
   29894:	str	ip, [r1, #124]	; 0x7c
   29898:	add	r1, r3, r2, lsl #2
   2989c:	ldr	r1, [r1]
   298a0:	str	r0, [r1]
   298a4:	movw	r0, #0
   298a8:	str	r0, [fp, #-4]
   298ac:	ldr	r0, [fp, #-4]
   298b0:	mov	sp, fp
   298b4:	pop	{fp, pc}
   298b8:	push	{fp, lr}
   298bc:	mov	fp, sp
   298c0:	sub	sp, sp, #96	; 0x60
   298c4:	str	r0, [fp, #-8]
   298c8:	str	r1, [fp, #-12]
   298cc:	str	r2, [fp, #-16]
   298d0:	ldr	r0, [fp, #-8]
   298d4:	ldr	r0, [r0, #84]	; 0x54
   298d8:	str	r0, [fp, #-20]	; 0xffffffec
   298dc:	ldr	r0, [fp, #-8]
   298e0:	ldr	r0, [r0, #4]
   298e4:	str	r0, [fp, #-32]	; 0xffffffe0
   298e8:	ldr	r0, [fp, #-8]
   298ec:	ldr	r1, [fp, #-16]
   298f0:	bl	2a1a0 <__assert_fail@plt+0x18a4c>
   298f4:	str	r0, [fp, #-36]	; 0xffffffdc
   298f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   298fc:	cmn	r0, #1
   29900:	beq	29960 <__assert_fail@plt+0x1820c>
   29904:	ldr	r0, [fp, #-8]
   29908:	ldr	r0, [r0, #116]	; 0x74
   2990c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29910:	movw	r2, #24
   29914:	mul	r1, r1, r2
   29918:	add	r0, r0, r1
   2991c:	str	r0, [fp, #-40]	; 0xffffffd8
   29920:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29924:	ldr	r0, [r0]
   29928:	ldr	r1, [fp, #-12]
   2992c:	cmp	r0, r1
   29930:	bne	29940 <__assert_fail@plt+0x181ec>
   29934:	movw	r0, #0
   29938:	str	r0, [fp, #-4]
   2993c:	b	29e48 <__assert_fail@plt+0x186f4>
   29940:	b	29944 <__assert_fail@plt+0x181f0>
   29944:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29948:	add	r1, r0, #24
   2994c:	str	r1, [fp, #-40]	; 0xffffffd8
   29950:	ldrsb	r0, [r0, #20]
   29954:	cmp	r0, #0
   29958:	bne	29920 <__assert_fail@plt+0x181cc>
   2995c:	b	29960 <__assert_fail@plt+0x1820c>
   29960:	ldr	r0, [fp, #-20]	; 0xffffffec
   29964:	ldr	r0, [r0]
   29968:	ldr	r1, [fp, #-12]
   2996c:	add	r0, r0, r1, lsl #3
   29970:	ldr	r0, [r0]
   29974:	str	r0, [fp, #-24]	; 0xffffffe8
   29978:	movw	r0, #0
   2997c:	str	r0, [fp, #-28]	; 0xffffffe4
   29980:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29984:	ldr	r1, [fp, #-8]
   29988:	ldr	r1, [r1, #124]	; 0x7c
   2998c:	cmp	r0, r1
   29990:	bge	29e40 <__assert_fail@plt+0x186ec>
   29994:	ldr	r0, [fp, #-8]
   29998:	ldr	r0, [r0, #132]	; 0x84
   2999c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   299a0:	ldr	r0, [r0, r1, lsl #2]
   299a4:	str	r0, [sp, #48]	; 0x30
   299a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   299ac:	ldr	r0, [r0]
   299b0:	ldr	r1, [sp, #48]	; 0x30
   299b4:	ldr	r1, [r1, #4]
   299b8:	add	r0, r0, r1, lsl #3
   299bc:	ldr	r0, [r0]
   299c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   299c4:	cmp	r0, r1
   299c8:	beq	299d0 <__assert_fail@plt+0x1827c>
   299cc:	b	29e30 <__assert_fail@plt+0x186dc>
   299d0:	ldr	r0, [sp, #48]	; 0x30
   299d4:	ldr	r0, [r0]
   299d8:	str	r0, [sp, #36]	; 0x24
   299dc:	ldr	r0, [fp, #-16]
   299e0:	str	r0, [sp, #32]
   299e4:	movw	r0, #0
   299e8:	str	r0, [sp, #40]	; 0x28
   299ec:	ldr	r0, [sp, #40]	; 0x28
   299f0:	ldr	r1, [sp, #48]	; 0x30
   299f4:	ldr	r1, [r1, #16]
   299f8:	cmp	r0, r1
   299fc:	bge	29b68 <__assert_fail@plt+0x18414>
   29a00:	ldr	r0, [sp, #48]	; 0x30
   29a04:	ldr	r0, [r0, #20]
   29a08:	ldr	r1, [sp, #40]	; 0x28
   29a0c:	add	r0, r0, r1, lsl #2
   29a10:	ldr	r0, [r0]
   29a14:	str	r0, [sp, #44]	; 0x2c
   29a18:	ldr	r0, [sp, #44]	; 0x2c
   29a1c:	ldr	r0, [r0, #4]
   29a20:	ldr	r1, [sp, #36]	; 0x24
   29a24:	sub	r0, r0, r1
   29a28:	str	r0, [sp, #28]
   29a2c:	ldr	r0, [sp, #28]
   29a30:	cmp	r0, #0
   29a34:	ble	29ae0 <__assert_fail@plt+0x1838c>
   29a38:	ldr	r0, [sp, #32]
   29a3c:	ldr	r1, [sp, #28]
   29a40:	add	r0, r0, r1
   29a44:	ldr	r1, [fp, #-8]
   29a48:	ldr	r1, [r1, #28]
   29a4c:	cmp	r0, r1
   29a50:	ble	29ab0 <__assert_fail@plt+0x1835c>
   29a54:	ldr	r0, [sp, #32]
   29a58:	ldr	r1, [sp, #28]
   29a5c:	add	r0, r0, r1
   29a60:	ldr	r1, [fp, #-8]
   29a64:	ldr	r1, [r1, #48]	; 0x30
   29a68:	cmp	r0, r1
   29a6c:	ble	29a74 <__assert_fail@plt+0x18320>
   29a70:	b	29b68 <__assert_fail@plt+0x18414>
   29a74:	ldr	r0, [fp, #-8]
   29a78:	ldr	r1, [sp, #32]
   29a7c:	ldr	r2, [sp, #28]
   29a80:	add	r1, r1, r2
   29a84:	bl	2a288 <__assert_fail@plt+0x18b34>
   29a88:	str	r0, [fp, #-44]	; 0xffffffd4
   29a8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29a90:	cmp	r0, #0
   29a94:	beq	29aa4 <__assert_fail@plt+0x18350>
   29a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29a9c:	str	r0, [fp, #-4]
   29aa0:	b	29e48 <__assert_fail@plt+0x186f4>
   29aa4:	ldr	r0, [fp, #-8]
   29aa8:	ldr	r0, [r0, #4]
   29aac:	str	r0, [fp, #-32]	; 0xffffffe0
   29ab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29ab4:	ldr	r1, [sp, #32]
   29ab8:	add	r0, r0, r1
   29abc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29ac0:	ldr	r2, [sp, #36]	; 0x24
   29ac4:	add	r1, r1, r2
   29ac8:	ldr	r2, [sp, #28]
   29acc:	bl	114cc <memcmp@plt>
   29ad0:	cmp	r0, #0
   29ad4:	beq	29adc <__assert_fail@plt+0x18388>
   29ad8:	b	29b68 <__assert_fail@plt+0x18414>
   29adc:	b	29ae0 <__assert_fail@plt+0x1838c>
   29ae0:	ldr	r0, [sp, #28]
   29ae4:	ldr	r1, [sp, #32]
   29ae8:	add	r0, r1, r0
   29aec:	str	r0, [sp, #32]
   29af0:	ldr	r0, [sp, #28]
   29af4:	ldr	r1, [sp, #36]	; 0x24
   29af8:	add	r0, r1, r0
   29afc:	str	r0, [sp, #36]	; 0x24
   29b00:	ldr	r0, [fp, #-8]
   29b04:	ldr	r1, [sp, #48]	; 0x30
   29b08:	ldr	r2, [sp, #44]	; 0x2c
   29b0c:	ldr	r3, [fp, #-12]
   29b10:	ldr	ip, [fp, #-16]
   29b14:	str	ip, [sp]
   29b18:	bl	2a3a4 <__assert_fail@plt+0x18c50>
   29b1c:	str	r0, [fp, #-44]	; 0xffffffd4
   29b20:	ldr	r0, [fp, #-8]
   29b24:	ldr	r0, [r0, #4]
   29b28:	str	r0, [fp, #-32]	; 0xffffffe0
   29b2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29b30:	cmp	r0, #1
   29b34:	bne	29b3c <__assert_fail@plt+0x183e8>
   29b38:	b	29b58 <__assert_fail@plt+0x18404>
   29b3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29b40:	cmp	r0, #0
   29b44:	beq	29b54 <__assert_fail@plt+0x18400>
   29b48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29b4c:	str	r0, [fp, #-4]
   29b50:	b	29e48 <__assert_fail@plt+0x186f4>
   29b54:	b	29b58 <__assert_fail@plt+0x18404>
   29b58:	ldr	r0, [sp, #40]	; 0x28
   29b5c:	add	r0, r0, #1
   29b60:	str	r0, [sp, #40]	; 0x28
   29b64:	b	299ec <__assert_fail@plt+0x18298>
   29b68:	ldr	r0, [sp, #40]	; 0x28
   29b6c:	ldr	r1, [sp, #48]	; 0x30
   29b70:	ldr	r1, [r1, #16]
   29b74:	cmp	r0, r1
   29b78:	bge	29b80 <__assert_fail@plt+0x1842c>
   29b7c:	b	29e30 <__assert_fail@plt+0x186dc>
   29b80:	ldr	r0, [sp, #40]	; 0x28
   29b84:	cmp	r0, #0
   29b88:	ble	29b98 <__assert_fail@plt+0x18444>
   29b8c:	ldr	r0, [sp, #36]	; 0x24
   29b90:	add	r0, r0, #1
   29b94:	str	r0, [sp, #36]	; 0x24
   29b98:	b	29b9c <__assert_fail@plt+0x18448>
   29b9c:	ldr	r0, [sp, #36]	; 0x24
   29ba0:	ldr	r1, [fp, #-16]
   29ba4:	cmp	r0, r1
   29ba8:	bgt	29e2c <__assert_fail@plt+0x186d8>
   29bac:	ldr	r0, [sp, #36]	; 0x24
   29bb0:	ldr	r1, [sp, #48]	; 0x30
   29bb4:	ldr	r1, [r1]
   29bb8:	sub	r0, r0, r1
   29bbc:	str	r0, [sp, #20]
   29bc0:	ldr	r0, [sp, #20]
   29bc4:	cmp	r0, #0
   29bc8:	ble	29c6c <__assert_fail@plt+0x18518>
   29bcc:	ldr	r0, [sp, #32]
   29bd0:	ldr	r1, [fp, #-8]
   29bd4:	ldr	r1, [r1, #28]
   29bd8:	cmp	r0, r1
   29bdc:	blt	29c30 <__assert_fail@plt+0x184dc>
   29be0:	ldr	r0, [sp, #32]
   29be4:	ldr	r1, [fp, #-8]
   29be8:	ldr	r1, [r1, #48]	; 0x30
   29bec:	cmp	r0, r1
   29bf0:	blt	29bf8 <__assert_fail@plt+0x184a4>
   29bf4:	b	29e2c <__assert_fail@plt+0x186d8>
   29bf8:	ldr	r0, [fp, #-8]
   29bfc:	ldr	r1, [sp, #32]
   29c00:	add	r1, r1, #1
   29c04:	bl	2906c <__assert_fail@plt+0x17918>
   29c08:	str	r0, [fp, #-44]	; 0xffffffd4
   29c0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c10:	cmp	r0, #0
   29c14:	beq	29c24 <__assert_fail@plt+0x184d0>
   29c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29c1c:	str	r0, [fp, #-4]
   29c20:	b	29e48 <__assert_fail@plt+0x186f4>
   29c24:	ldr	r0, [fp, #-8]
   29c28:	ldr	r0, [r0, #4]
   29c2c:	str	r0, [fp, #-32]	; 0xffffffe0
   29c30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29c34:	ldr	r1, [sp, #32]
   29c38:	add	r2, r1, #1
   29c3c:	str	r2, [sp, #32]
   29c40:	add	r0, r0, r1
   29c44:	ldrb	r0, [r0]
   29c48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29c4c:	ldr	r2, [sp, #36]	; 0x24
   29c50:	sub	r2, r2, #1
   29c54:	add	r1, r1, r2
   29c58:	ldrb	r1, [r1]
   29c5c:	cmp	r0, r1
   29c60:	beq	29c68 <__assert_fail@plt+0x18514>
   29c64:	b	29e2c <__assert_fail@plt+0x186d8>
   29c68:	b	29c6c <__assert_fail@plt+0x18518>
   29c6c:	ldr	r0, [fp, #-8]
   29c70:	ldr	r0, [r0, #100]	; 0x64
   29c74:	ldr	r1, [sp, #36]	; 0x24
   29c78:	add	r0, r0, r1, lsl #2
   29c7c:	ldr	r0, [r0]
   29c80:	movw	r1, #0
   29c84:	cmp	r0, r1
   29c88:	bne	29c90 <__assert_fail@plt+0x1853c>
   29c8c:	b	29e1c <__assert_fail@plt+0x186c8>
   29c90:	ldr	r0, [fp, #-8]
   29c94:	ldr	r0, [r0, #100]	; 0x64
   29c98:	ldr	r1, [sp, #36]	; 0x24
   29c9c:	add	r0, r0, r1, lsl #2
   29ca0:	ldr	r0, [r0]
   29ca4:	add	r0, r0, #4
   29ca8:	str	r0, [sp, #16]
   29cac:	ldr	r0, [fp, #-20]	; 0xffffffec
   29cb0:	ldr	r1, [sp, #16]
   29cb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29cb8:	movw	r3, #9
   29cbc:	bl	2a498 <__assert_fail@plt+0x18d44>
   29cc0:	str	r0, [sp, #24]
   29cc4:	ldr	r0, [sp, #24]
   29cc8:	cmn	r0, #1
   29ccc:	bne	29cd4 <__assert_fail@plt+0x18580>
   29cd0:	b	29e1c <__assert_fail@plt+0x186c8>
   29cd4:	ldr	r0, [sp, #48]	; 0x30
   29cd8:	ldr	r0, [r0, #8]
   29cdc:	movw	r1, #0
   29ce0:	cmp	r0, r1
   29ce4:	bne	29d30 <__assert_fail@plt+0x185dc>
   29ce8:	ldr	r0, [sp, #36]	; 0x24
   29cec:	ldr	r1, [sp, #48]	; 0x30
   29cf0:	ldr	r1, [r1]
   29cf4:	sub	r0, r0, r1
   29cf8:	add	r1, r0, #1
   29cfc:	movw	r0, #12
   29d00:	bl	380d0 <__assert_fail@plt+0x2697c>
   29d04:	ldr	r1, [sp, #48]	; 0x30
   29d08:	str	r0, [r1, #8]
   29d0c:	ldr	r0, [sp, #48]	; 0x30
   29d10:	ldr	r0, [r0, #8]
   29d14:	movw	r1, #0
   29d18:	cmp	r0, r1
   29d1c:	bne	29d2c <__assert_fail@plt+0x185d8>
   29d20:	movw	r0, #12
   29d24:	str	r0, [fp, #-4]
   29d28:	b	29e48 <__assert_fail@plt+0x186f4>
   29d2c:	b	29d30 <__assert_fail@plt+0x185dc>
   29d30:	ldr	r0, [fp, #-8]
   29d34:	ldr	r1, [sp, #48]	; 0x30
   29d38:	ldr	r1, [r1, #8]
   29d3c:	ldr	r2, [sp, #48]	; 0x30
   29d40:	ldr	r2, [r2, #4]
   29d44:	ldr	r3, [sp, #48]	; 0x30
   29d48:	ldr	r3, [r3]
   29d4c:	ldr	ip, [sp, #24]
   29d50:	ldr	lr, [sp, #36]	; 0x24
   29d54:	str	ip, [sp]
   29d58:	str	lr, [sp, #4]
   29d5c:	movw	ip, #9
   29d60:	str	ip, [sp, #8]
   29d64:	bl	2a550 <__assert_fail@plt+0x18dfc>
   29d68:	str	r0, [fp, #-44]	; 0xffffffd4
   29d6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d70:	cmp	r0, #1
   29d74:	bne	29d7c <__assert_fail@plt+0x18628>
   29d78:	b	29e1c <__assert_fail@plt+0x186c8>
   29d7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d80:	cmp	r0, #0
   29d84:	beq	29d94 <__assert_fail@plt+0x18640>
   29d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29d8c:	str	r0, [fp, #-4]
   29d90:	b	29e48 <__assert_fail@plt+0x186f4>
   29d94:	ldr	r0, [sp, #48]	; 0x30
   29d98:	ldr	r1, [sp, #24]
   29d9c:	ldr	r2, [sp, #36]	; 0x24
   29da0:	bl	2ac88 <__assert_fail@plt+0x19534>
   29da4:	str	r0, [sp, #44]	; 0x2c
   29da8:	ldr	r0, [sp, #44]	; 0x2c
   29dac:	movw	r1, #0
   29db0:	cmp	r0, r1
   29db4:	bne	29dc4 <__assert_fail@plt+0x18670>
   29db8:	movw	r0, #12
   29dbc:	str	r0, [fp, #-4]
   29dc0:	b	29e48 <__assert_fail@plt+0x186f4>
   29dc4:	ldr	r0, [fp, #-8]
   29dc8:	ldr	r1, [sp, #48]	; 0x30
   29dcc:	ldr	r2, [sp, #44]	; 0x2c
   29dd0:	ldr	r3, [fp, #-12]
   29dd4:	ldr	ip, [fp, #-16]
   29dd8:	str	ip, [sp]
   29ddc:	bl	2a3a4 <__assert_fail@plt+0x18c50>
   29de0:	str	r0, [fp, #-44]	; 0xffffffd4
   29de4:	ldr	r0, [fp, #-8]
   29de8:	ldr	r0, [r0, #4]
   29dec:	str	r0, [fp, #-32]	; 0xffffffe0
   29df0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29df4:	cmp	r0, #1
   29df8:	bne	29e00 <__assert_fail@plt+0x186ac>
   29dfc:	b	29e1c <__assert_fail@plt+0x186c8>
   29e00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e04:	cmp	r0, #0
   29e08:	beq	29e18 <__assert_fail@plt+0x186c4>
   29e0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29e10:	str	r0, [fp, #-4]
   29e14:	b	29e48 <__assert_fail@plt+0x186f4>
   29e18:	b	29e1c <__assert_fail@plt+0x186c8>
   29e1c:	ldr	r0, [sp, #36]	; 0x24
   29e20:	add	r0, r0, #1
   29e24:	str	r0, [sp, #36]	; 0x24
   29e28:	b	29b9c <__assert_fail@plt+0x18448>
   29e2c:	b	29e30 <__assert_fail@plt+0x186dc>
   29e30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29e34:	add	r0, r0, #1
   29e38:	str	r0, [fp, #-28]	; 0xffffffe4
   29e3c:	b	29980 <__assert_fail@plt+0x1822c>
   29e40:	movw	r0, #0
   29e44:	str	r0, [fp, #-4]
   29e48:	ldr	r0, [fp, #-4]
   29e4c:	mov	sp, fp
   29e50:	pop	{fp, pc}
   29e54:	push	{fp, lr}
   29e58:	mov	fp, sp
   29e5c:	sub	sp, sp, #32
   29e60:	str	r0, [fp, #-8]
   29e64:	str	r1, [fp, #-12]
   29e68:	str	r2, [sp, #16]
   29e6c:	ldr	r0, [fp, #-12]
   29e70:	movw	r1, #0
   29e74:	cmp	r0, r1
   29e78:	beq	29f04 <__assert_fail@plt+0x187b0>
   29e7c:	ldr	r0, [fp, #-12]
   29e80:	ldr	r0, [r0, #4]
   29e84:	cmp	r0, #0
   29e88:	ble	29f04 <__assert_fail@plt+0x187b0>
   29e8c:	ldr	r0, [sp, #16]
   29e90:	movw	r1, #0
   29e94:	cmp	r0, r1
   29e98:	beq	29f04 <__assert_fail@plt+0x187b0>
   29e9c:	ldr	r0, [sp, #16]
   29ea0:	ldr	r0, [r0, #4]
   29ea4:	cmp	r0, #0
   29ea8:	ble	29f04 <__assert_fail@plt+0x187b0>
   29eac:	ldr	r0, [fp, #-12]
   29eb0:	ldr	r0, [r0, #4]
   29eb4:	ldr	r1, [sp, #16]
   29eb8:	ldr	r1, [r1, #4]
   29ebc:	add	r0, r0, r1
   29ec0:	ldr	r1, [fp, #-8]
   29ec4:	str	r0, [r1]
   29ec8:	ldr	r0, [fp, #-8]
   29ecc:	ldr	r0, [r0]
   29ed0:	lsl	r0, r0, #2
   29ed4:	bl	3816c <__assert_fail@plt+0x26a18>
   29ed8:	ldr	r1, [fp, #-8]
   29edc:	str	r0, [r1, #8]
   29ee0:	ldr	r0, [fp, #-8]
   29ee4:	ldr	r0, [r0, #8]
   29ee8:	movw	r1, #0
   29eec:	cmp	r0, r1
   29ef0:	bne	29f00 <__assert_fail@plt+0x187ac>
   29ef4:	movw	r0, #12
   29ef8:	str	r0, [fp, #-4]
   29efc:	b	2a194 <__assert_fail@plt+0x18a40>
   29f00:	b	29f90 <__assert_fail@plt+0x1883c>
   29f04:	ldr	r0, [fp, #-12]
   29f08:	movw	r1, #0
   29f0c:	cmp	r0, r1
   29f10:	beq	29f38 <__assert_fail@plt+0x187e4>
   29f14:	ldr	r0, [fp, #-12]
   29f18:	ldr	r0, [r0, #4]
   29f1c:	cmp	r0, #0
   29f20:	ble	29f38 <__assert_fail@plt+0x187e4>
   29f24:	ldr	r0, [fp, #-8]
   29f28:	ldr	r1, [fp, #-12]
   29f2c:	bl	25c60 <__assert_fail@plt+0x1450c>
   29f30:	str	r0, [fp, #-4]
   29f34:	b	2a194 <__assert_fail@plt+0x18a40>
   29f38:	ldr	r0, [sp, #16]
   29f3c:	movw	r1, #0
   29f40:	cmp	r0, r1
   29f44:	beq	29f6c <__assert_fail@plt+0x18818>
   29f48:	ldr	r0, [sp, #16]
   29f4c:	ldr	r0, [r0, #4]
   29f50:	cmp	r0, #0
   29f54:	ble	29f6c <__assert_fail@plt+0x18818>
   29f58:	ldr	r0, [fp, #-8]
   29f5c:	ldr	r1, [sp, #16]
   29f60:	bl	25c60 <__assert_fail@plt+0x1450c>
   29f64:	str	r0, [fp, #-4]
   29f68:	b	2a194 <__assert_fail@plt+0x18a40>
   29f6c:	ldr	r0, [fp, #-8]
   29f70:	movw	r1, #0
   29f74:	and	r1, r1, #255	; 0xff
   29f78:	movw	r2, #12
   29f7c:	bl	11658 <memset@plt>
   29f80:	b	29f84 <__assert_fail@plt+0x18830>
   29f84:	movw	r0, #0
   29f88:	str	r0, [fp, #-4]
   29f8c:	b	2a194 <__assert_fail@plt+0x18a40>
   29f90:	movw	r0, #0
   29f94:	str	r0, [sp, #4]
   29f98:	str	r0, [sp, #8]
   29f9c:	str	r0, [sp, #12]
   29fa0:	ldr	r0, [sp, #12]
   29fa4:	ldr	r1, [fp, #-12]
   29fa8:	ldr	r1, [r1, #4]
   29fac:	cmp	r0, r1
   29fb0:	movw	r0, #0
   29fb4:	str	r0, [sp]
   29fb8:	bge	29fd8 <__assert_fail@plt+0x18884>
   29fbc:	ldr	r0, [sp, #8]
   29fc0:	ldr	r1, [sp, #16]
   29fc4:	ldr	r1, [r1, #4]
   29fc8:	cmp	r0, r1
   29fcc:	movw	r0, #0
   29fd0:	movlt	r0, #1
   29fd4:	str	r0, [sp]
   29fd8:	ldr	r0, [sp]
   29fdc:	tst	r0, #1
   29fe0:	beq	2a0b8 <__assert_fail@plt+0x18964>
   29fe4:	ldr	r0, [fp, #-12]
   29fe8:	ldr	r0, [r0, #8]
   29fec:	ldr	r1, [sp, #12]
   29ff0:	ldr	r0, [r0, r1, lsl #2]
   29ff4:	ldr	r1, [sp, #16]
   29ff8:	ldr	r1, [r1, #8]
   29ffc:	ldr	r2, [sp, #8]
   2a000:	add	r1, r1, r2, lsl #2
   2a004:	ldr	r1, [r1]
   2a008:	cmp	r0, r1
   2a00c:	ble	2a048 <__assert_fail@plt+0x188f4>
   2a010:	ldr	r0, [sp, #16]
   2a014:	ldr	r0, [r0, #8]
   2a018:	ldr	r1, [sp, #8]
   2a01c:	add	r2, r1, #1
   2a020:	str	r2, [sp, #8]
   2a024:	ldr	r0, [r0, r1, lsl #2]
   2a028:	ldr	r1, [fp, #-8]
   2a02c:	ldr	r1, [r1, #8]
   2a030:	ldr	r2, [sp, #4]
   2a034:	add	r3, r2, #1
   2a038:	str	r3, [sp, #4]
   2a03c:	add	r1, r1, r2, lsl #2
   2a040:	str	r0, [r1]
   2a044:	b	29fa0 <__assert_fail@plt+0x1884c>
   2a048:	ldr	r0, [fp, #-12]
   2a04c:	ldr	r0, [r0, #8]
   2a050:	ldr	r1, [sp, #12]
   2a054:	ldr	r0, [r0, r1, lsl #2]
   2a058:	ldr	r1, [sp, #16]
   2a05c:	ldr	r1, [r1, #8]
   2a060:	ldr	r2, [sp, #8]
   2a064:	add	r1, r1, r2, lsl #2
   2a068:	ldr	r1, [r1]
   2a06c:	cmp	r0, r1
   2a070:	bne	2a080 <__assert_fail@plt+0x1892c>
   2a074:	ldr	r0, [sp, #8]
   2a078:	add	r0, r0, #1
   2a07c:	str	r0, [sp, #8]
   2a080:	ldr	r0, [fp, #-12]
   2a084:	ldr	r0, [r0, #8]
   2a088:	ldr	r1, [sp, #12]
   2a08c:	add	r2, r1, #1
   2a090:	str	r2, [sp, #12]
   2a094:	ldr	r0, [r0, r1, lsl #2]
   2a098:	ldr	r1, [fp, #-8]
   2a09c:	ldr	r1, [r1, #8]
   2a0a0:	ldr	r2, [sp, #4]
   2a0a4:	add	r3, r2, #1
   2a0a8:	str	r3, [sp, #4]
   2a0ac:	add	r1, r1, r2, lsl #2
   2a0b0:	str	r0, [r1]
   2a0b4:	b	29fa0 <__assert_fail@plt+0x1884c>
   2a0b8:	ldr	r0, [sp, #12]
   2a0bc:	ldr	r1, [fp, #-12]
   2a0c0:	ldr	r1, [r1, #4]
   2a0c4:	cmp	r0, r1
   2a0c8:	bge	2a11c <__assert_fail@plt+0x189c8>
   2a0cc:	ldr	r0, [fp, #-8]
   2a0d0:	ldr	r0, [r0, #8]
   2a0d4:	ldr	r1, [sp, #4]
   2a0d8:	add	r0, r0, r1, lsl #2
   2a0dc:	ldr	r1, [fp, #-12]
   2a0e0:	ldr	r2, [r1, #4]
   2a0e4:	ldr	r1, [r1, #8]
   2a0e8:	ldr	r3, [sp, #12]
   2a0ec:	add	r1, r1, r3, lsl #2
   2a0f0:	sub	r2, r2, r3
   2a0f4:	lsl	r2, r2, #2
   2a0f8:	bl	11478 <memcpy@plt>
   2a0fc:	ldr	r0, [fp, #-12]
   2a100:	ldr	r0, [r0, #4]
   2a104:	ldr	r1, [sp, #12]
   2a108:	sub	r0, r0, r1
   2a10c:	ldr	r1, [sp, #4]
   2a110:	add	r0, r1, r0
   2a114:	str	r0, [sp, #4]
   2a118:	b	2a180 <__assert_fail@plt+0x18a2c>
   2a11c:	ldr	r0, [sp, #8]
   2a120:	ldr	r1, [sp, #16]
   2a124:	ldr	r1, [r1, #4]
   2a128:	cmp	r0, r1
   2a12c:	bge	2a17c <__assert_fail@plt+0x18a28>
   2a130:	ldr	r0, [fp, #-8]
   2a134:	ldr	r0, [r0, #8]
   2a138:	ldr	r1, [sp, #4]
   2a13c:	add	r0, r0, r1, lsl #2
   2a140:	ldr	r1, [sp, #16]
   2a144:	ldr	r2, [r1, #4]
   2a148:	ldr	r1, [r1, #8]
   2a14c:	ldr	r3, [sp, #8]
   2a150:	add	r1, r1, r3, lsl #2
   2a154:	sub	r2, r2, r3
   2a158:	lsl	r2, r2, #2
   2a15c:	bl	11478 <memcpy@plt>
   2a160:	ldr	r0, [sp, #16]
   2a164:	ldr	r0, [r0, #4]
   2a168:	ldr	r1, [sp, #8]
   2a16c:	sub	r0, r0, r1
   2a170:	ldr	r1, [sp, #4]
   2a174:	add	r0, r1, r0
   2a178:	str	r0, [sp, #4]
   2a17c:	b	2a180 <__assert_fail@plt+0x18a2c>
   2a180:	ldr	r0, [sp, #4]
   2a184:	ldr	r1, [fp, #-8]
   2a188:	str	r0, [r1, #4]
   2a18c:	movw	r0, #0
   2a190:	str	r0, [fp, #-4]
   2a194:	ldr	r0, [fp, #-4]
   2a198:	mov	sp, fp
   2a19c:	pop	{fp, pc}
   2a1a0:	sub	sp, sp, #28
   2a1a4:	str	r0, [sp, #20]
   2a1a8:	str	r1, [sp, #16]
   2a1ac:	ldr	r0, [sp, #20]
   2a1b0:	ldr	r0, [r0, #108]	; 0x6c
   2a1b4:	str	r0, [sp, #8]
   2a1b8:	str	r0, [sp]
   2a1bc:	movw	r0, #0
   2a1c0:	str	r0, [sp, #12]
   2a1c4:	ldr	r0, [sp, #12]
   2a1c8:	ldr	r1, [sp, #8]
   2a1cc:	cmp	r0, r1
   2a1d0:	bge	2a230 <__assert_fail@plt+0x18adc>
   2a1d4:	ldr	r0, [sp, #12]
   2a1d8:	ldr	r1, [sp, #8]
   2a1dc:	add	r0, r0, r1
   2a1e0:	movw	r1, #2
   2a1e4:	sdiv	r0, r0, r1
   2a1e8:	str	r0, [sp, #4]
   2a1ec:	ldr	r0, [sp, #20]
   2a1f0:	ldr	r0, [r0, #116]	; 0x74
   2a1f4:	ldr	r1, [sp, #4]
   2a1f8:	movw	r2, #24
   2a1fc:	mul	r1, r1, r2
   2a200:	add	r0, r0, r1
   2a204:	ldr	r0, [r0, #4]
   2a208:	ldr	r1, [sp, #16]
   2a20c:	cmp	r0, r1
   2a210:	bge	2a224 <__assert_fail@plt+0x18ad0>
   2a214:	ldr	r0, [sp, #4]
   2a218:	add	r0, r0, #1
   2a21c:	str	r0, [sp, #12]
   2a220:	b	2a22c <__assert_fail@plt+0x18ad8>
   2a224:	ldr	r0, [sp, #4]
   2a228:	str	r0, [sp, #8]
   2a22c:	b	2a1c4 <__assert_fail@plt+0x18a70>
   2a230:	ldr	r0, [sp, #12]
   2a234:	ldr	r1, [sp]
   2a238:	cmp	r0, r1
   2a23c:	bge	2a274 <__assert_fail@plt+0x18b20>
   2a240:	ldr	r0, [sp, #20]
   2a244:	ldr	r0, [r0, #116]	; 0x74
   2a248:	ldr	r1, [sp, #12]
   2a24c:	movw	r2, #24
   2a250:	mul	r1, r1, r2
   2a254:	add	r0, r0, r1
   2a258:	ldr	r0, [r0, #4]
   2a25c:	ldr	r1, [sp, #16]
   2a260:	cmp	r0, r1
   2a264:	bne	2a274 <__assert_fail@plt+0x18b20>
   2a268:	ldr	r0, [sp, #12]
   2a26c:	str	r0, [sp, #24]
   2a270:	b	2a27c <__assert_fail@plt+0x18b28>
   2a274:	mvn	r0, #0
   2a278:	str	r0, [sp, #24]
   2a27c:	ldr	r0, [sp, #24]
   2a280:	add	sp, sp, #28
   2a284:	bx	lr
   2a288:	push	{fp, lr}
   2a28c:	mov	fp, sp
   2a290:	sub	sp, sp, #24
   2a294:	str	r0, [fp, #-8]
   2a298:	str	r1, [sp, #12]
   2a29c:	ldr	r0, [fp, #-8]
   2a2a0:	ldr	r0, [r0, #104]	; 0x68
   2a2a4:	str	r0, [sp, #8]
   2a2a8:	ldr	r0, [sp, #12]
   2a2ac:	ldr	r1, [fp, #-8]
   2a2b0:	ldr	r1, [r1, #36]	; 0x24
   2a2b4:	cmp	r0, r1
   2a2b8:	blt	2a2d4 <__assert_fail@plt+0x18b80>
   2a2bc:	ldr	r0, [fp, #-8]
   2a2c0:	ldr	r0, [r0, #36]	; 0x24
   2a2c4:	ldr	r1, [fp, #-8]
   2a2c8:	ldr	r1, [r1, #48]	; 0x30
   2a2cc:	cmp	r0, r1
   2a2d0:	blt	2a300 <__assert_fail@plt+0x18bac>
   2a2d4:	ldr	r0, [sp, #12]
   2a2d8:	ldr	r1, [fp, #-8]
   2a2dc:	ldr	r1, [r1, #28]
   2a2e0:	cmp	r0, r1
   2a2e4:	blt	2a330 <__assert_fail@plt+0x18bdc>
   2a2e8:	ldr	r0, [fp, #-8]
   2a2ec:	ldr	r0, [r0, #28]
   2a2f0:	ldr	r1, [fp, #-8]
   2a2f4:	ldr	r1, [r1, #48]	; 0x30
   2a2f8:	cmp	r0, r1
   2a2fc:	bge	2a330 <__assert_fail@plt+0x18bdc>
   2a300:	ldr	r0, [fp, #-8]
   2a304:	ldr	r1, [sp, #12]
   2a308:	add	r1, r1, #1
   2a30c:	bl	2906c <__assert_fail@plt+0x17918>
   2a310:	str	r0, [sp, #4]
   2a314:	ldr	r0, [sp, #4]
   2a318:	cmp	r0, #0
   2a31c:	beq	2a32c <__assert_fail@plt+0x18bd8>
   2a320:	ldr	r0, [sp, #4]
   2a324:	str	r0, [fp, #-4]
   2a328:	b	2a398 <__assert_fail@plt+0x18c44>
   2a32c:	b	2a330 <__assert_fail@plt+0x18bdc>
   2a330:	ldr	r0, [sp, #8]
   2a334:	ldr	r1, [sp, #12]
   2a338:	cmp	r0, r1
   2a33c:	bge	2a390 <__assert_fail@plt+0x18c3c>
   2a340:	ldr	r0, [fp, #-8]
   2a344:	ldr	r0, [r0, #100]	; 0x64
   2a348:	movw	r1, #0
   2a34c:	cmp	r0, r1
   2a350:	beq	2a358 <__assert_fail@plt+0x18c04>
   2a354:	b	2a358 <__assert_fail@plt+0x18c04>
   2a358:	ldr	r0, [fp, #-8]
   2a35c:	ldr	r0, [r0, #100]	; 0x64
   2a360:	ldr	r1, [sp, #8]
   2a364:	add	r0, r0, r1, lsl #2
   2a368:	add	r0, r0, #4
   2a36c:	ldr	r2, [sp, #12]
   2a370:	sub	r1, r2, r1
   2a374:	lsl	r2, r1, #2
   2a378:	movw	r1, #0
   2a37c:	and	r1, r1, #255	; 0xff
   2a380:	bl	11658 <memset@plt>
   2a384:	ldr	r0, [sp, #12]
   2a388:	ldr	r1, [fp, #-8]
   2a38c:	str	r0, [r1, #104]	; 0x68
   2a390:	movw	r0, #0
   2a394:	str	r0, [fp, #-4]
   2a398:	ldr	r0, [fp, #-4]
   2a39c:	mov	sp, fp
   2a3a0:	pop	{fp, pc}
   2a3a4:	push	{r4, sl, fp, lr}
   2a3a8:	add	fp, sp, #8
   2a3ac:	sub	sp, sp, #48	; 0x30
   2a3b0:	ldr	ip, [fp, #8]
   2a3b4:	str	r0, [fp, #-16]
   2a3b8:	str	r1, [fp, #-20]	; 0xffffffec
   2a3bc:	str	r2, [fp, #-24]	; 0xffffffe8
   2a3c0:	str	r3, [sp, #28]
   2a3c4:	ldr	r0, [fp, #-16]
   2a3c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a3cc:	add	r1, r1, #8
   2a3d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a3d4:	ldr	r2, [r2]
   2a3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a3dc:	ldr	r3, [r3, #4]
   2a3e0:	ldr	lr, [sp, #28]
   2a3e4:	ldr	r4, [fp, #8]
   2a3e8:	str	lr, [sp]
   2a3ec:	str	r4, [sp, #4]
   2a3f0:	movw	lr, #8
   2a3f4:	str	lr, [sp, #8]
   2a3f8:	str	ip, [sp, #16]
   2a3fc:	bl	2a550 <__assert_fail@plt+0x18dfc>
   2a400:	str	r0, [sp, #24]
   2a404:	ldr	r0, [sp, #24]
   2a408:	cmp	r0, #0
   2a40c:	beq	2a41c <__assert_fail@plt+0x18cc8>
   2a410:	ldr	r0, [sp, #24]
   2a414:	str	r0, [fp, #-12]
   2a418:	b	2a48c <__assert_fail@plt+0x18d38>
   2a41c:	ldr	r0, [fp, #-16]
   2a420:	ldr	r1, [sp, #28]
   2a424:	ldr	r2, [fp, #8]
   2a428:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a42c:	ldr	r3, [r3]
   2a430:	ldr	ip, [fp, #-24]	; 0xffffffe8
   2a434:	ldr	ip, [ip, #4]
   2a438:	str	ip, [sp]
   2a43c:	bl	2ad8c <__assert_fail@plt+0x19638>
   2a440:	str	r0, [sp, #24]
   2a444:	ldr	r0, [sp, #24]
   2a448:	cmp	r0, #0
   2a44c:	beq	2a45c <__assert_fail@plt+0x18d08>
   2a450:	ldr	r0, [sp, #24]
   2a454:	str	r0, [fp, #-12]
   2a458:	b	2a48c <__assert_fail@plt+0x18d38>
   2a45c:	ldr	r0, [fp, #8]
   2a460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a464:	ldr	r1, [r1, #4]
   2a468:	add	r0, r0, r1
   2a46c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a470:	ldr	r1, [r1]
   2a474:	sub	r0, r0, r1
   2a478:	str	r0, [sp, #20]
   2a47c:	ldr	r0, [fp, #-16]
   2a480:	ldr	r1, [sp, #20]
   2a484:	bl	2a288 <__assert_fail@plt+0x18b34>
   2a488:	str	r0, [fp, #-12]
   2a48c:	ldr	r0, [fp, #-12]
   2a490:	sub	sp, fp, #8
   2a494:	pop	{r4, sl, fp, pc}
   2a498:	sub	sp, sp, #32
   2a49c:	str	r0, [sp, #24]
   2a4a0:	str	r1, [sp, #20]
   2a4a4:	str	r2, [sp, #16]
   2a4a8:	str	r3, [sp, #12]
   2a4ac:	movw	r0, #0
   2a4b0:	str	r0, [sp, #8]
   2a4b4:	ldr	r0, [sp, #8]
   2a4b8:	ldr	r1, [sp, #20]
   2a4bc:	ldr	r1, [r1, #4]
   2a4c0:	cmp	r0, r1
   2a4c4:	bge	2a53c <__assert_fail@plt+0x18de8>
   2a4c8:	ldr	r0, [sp, #20]
   2a4cc:	ldr	r0, [r0, #8]
   2a4d0:	ldr	r1, [sp, #8]
   2a4d4:	ldr	r0, [r0, r1, lsl #2]
   2a4d8:	str	r0, [sp, #4]
   2a4dc:	ldr	r0, [sp, #24]
   2a4e0:	ldr	r0, [r0]
   2a4e4:	ldr	r1, [sp, #4]
   2a4e8:	add	r0, r0, r1, lsl #3
   2a4ec:	str	r0, [sp]
   2a4f0:	ldr	r0, [sp]
   2a4f4:	ldr	r0, [r0, #4]
   2a4f8:	and	r0, r0, #255	; 0xff
   2a4fc:	ldr	r1, [sp, #12]
   2a500:	cmp	r0, r1
   2a504:	bne	2a528 <__assert_fail@plt+0x18dd4>
   2a508:	ldr	r0, [sp]
   2a50c:	ldr	r0, [r0]
   2a510:	ldr	r1, [sp, #16]
   2a514:	cmp	r0, r1
   2a518:	bne	2a528 <__assert_fail@plt+0x18dd4>
   2a51c:	ldr	r0, [sp, #4]
   2a520:	str	r0, [sp, #28]
   2a524:	b	2a544 <__assert_fail@plt+0x18df0>
   2a528:	b	2a52c <__assert_fail@plt+0x18dd8>
   2a52c:	ldr	r0, [sp, #8]
   2a530:	add	r0, r0, #1
   2a534:	str	r0, [sp, #8]
   2a538:	b	2a4b4 <__assert_fail@plt+0x18d60>
   2a53c:	mvn	r0, #0
   2a540:	str	r0, [sp, #28]
   2a544:	ldr	r0, [sp, #28]
   2a548:	add	sp, sp, #32
   2a54c:	bx	lr
   2a550:	push	{r4, sl, fp, lr}
   2a554:	add	fp, sp, #8
   2a558:	sub	sp, sp, #128	; 0x80
   2a55c:	ldr	ip, [fp, #16]
   2a560:	ldr	lr, [fp, #12]
   2a564:	ldr	r4, [fp, #8]
   2a568:	str	r0, [fp, #-16]
   2a56c:	str	r1, [fp, #-20]	; 0xffffffec
   2a570:	str	r2, [fp, #-24]	; 0xffffffe8
   2a574:	str	r3, [fp, #-28]	; 0xffffffe4
   2a578:	ldr	r0, [fp, #-16]
   2a57c:	ldr	r0, [r0, #84]	; 0x54
   2a580:	str	r0, [fp, #-32]	; 0xffffffe0
   2a584:	mov	r0, #0
   2a588:	str	r0, [fp, #-36]	; 0xffffffdc
   2a58c:	str	r0, [fp, #-56]	; 0xffffffc8
   2a590:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a594:	ldr	r0, [r0]
   2a598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a59c:	add	r0, r0, r1, lsl #3
   2a5a0:	ldr	r0, [r0]
   2a5a4:	str	r0, [fp, #-40]	; 0xffffffd8
   2a5a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a5ac:	ldr	r0, [r0, #4]
   2a5b0:	ldr	r1, [fp, #12]
   2a5b4:	ldr	r2, [fp, #-16]
   2a5b8:	ldr	r2, [r2, #120]	; 0x78
   2a5bc:	add	r1, r1, r2
   2a5c0:	add	r1, r1, #1
   2a5c4:	cmp	r0, r1
   2a5c8:	bge	2a6b4 <__assert_fail@plt+0x18f60>
   2a5cc:	ldr	r0, [pc, #1708]	; 2ac80 <__assert_fail@plt+0x1952c>
   2a5d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a5d4:	ldr	r1, [r1, #4]
   2a5d8:	str	r1, [sp, #48]	; 0x30
   2a5dc:	ldr	r1, [fp, #12]
   2a5e0:	ldr	r2, [fp, #-16]
   2a5e4:	ldr	r2, [r2, #120]	; 0x78
   2a5e8:	add	r1, r1, r2
   2a5ec:	add	r1, r1, #1
   2a5f0:	str	r1, [sp, #44]	; 0x2c
   2a5f4:	ldr	r1, [sp, #48]	; 0x30
   2a5f8:	sub	r0, r0, r1
   2a5fc:	ldr	r1, [sp, #44]	; 0x2c
   2a600:	cmp	r0, r1
   2a604:	bge	2a614 <__assert_fail@plt+0x18ec0>
   2a608:	movw	r0, #12
   2a60c:	str	r0, [fp, #-12]
   2a610:	b	2ac74 <__assert_fail@plt+0x19520>
   2a614:	ldr	r0, [pc, #1640]	; 2ac84 <__assert_fail@plt+0x19530>
   2a618:	ldr	r1, [sp, #48]	; 0x30
   2a61c:	ldr	r2, [sp, #44]	; 0x2c
   2a620:	add	r1, r1, r2
   2a624:	str	r1, [sp, #40]	; 0x28
   2a628:	ldr	r1, [sp, #40]	; 0x28
   2a62c:	cmp	r0, r1
   2a630:	bcs	2a640 <__assert_fail@plt+0x18eec>
   2a634:	movw	r0, #12
   2a638:	str	r0, [fp, #-12]
   2a63c:	b	2ac74 <__assert_fail@plt+0x19520>
   2a640:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a644:	ldr	r0, [r0, #8]
   2a648:	ldr	r1, [sp, #40]	; 0x28
   2a64c:	lsl	r1, r1, #2
   2a650:	bl	381dc <__assert_fail@plt+0x26a88>
   2a654:	str	r0, [sp, #52]	; 0x34
   2a658:	ldr	r0, [sp, #52]	; 0x34
   2a65c:	movw	r1, #0
   2a660:	cmp	r0, r1
   2a664:	bne	2a674 <__assert_fail@plt+0x18f20>
   2a668:	movw	r0, #12
   2a66c:	str	r0, [fp, #-12]
   2a670:	b	2ac74 <__assert_fail@plt+0x19520>
   2a674:	ldr	r0, [sp, #52]	; 0x34
   2a678:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a67c:	str	r0, [r1, #8]
   2a680:	ldr	r0, [sp, #40]	; 0x28
   2a684:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a688:	str	r0, [r1, #4]
   2a68c:	ldr	r0, [sp, #52]	; 0x34
   2a690:	ldr	r1, [sp, #48]	; 0x30
   2a694:	add	r0, r0, r1, lsl #2
   2a698:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a69c:	ldr	r2, [r2, #4]
   2a6a0:	sub	r1, r2, r1
   2a6a4:	lsl	r2, r1, #2
   2a6a8:	movw	r1, #0
   2a6ac:	and	r1, r1, #255	; 0xff
   2a6b0:	bl	11658 <memset@plt>
   2a6b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a6b8:	ldr	r0, [r0]
   2a6bc:	cmp	r0, #0
   2a6c0:	beq	2a6d4 <__assert_fail@plt+0x18f80>
   2a6c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a6c8:	ldr	r0, [r0]
   2a6cc:	str	r0, [sp, #36]	; 0x24
   2a6d0:	b	2a6dc <__assert_fail@plt+0x18f88>
   2a6d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a6d8:	str	r0, [sp, #36]	; 0x24
   2a6dc:	ldr	r0, [sp, #36]	; 0x24
   2a6e0:	str	r0, [fp, #-48]	; 0xffffffd0
   2a6e4:	ldr	r0, [fp, #-16]
   2a6e8:	ldr	r0, [r0, #100]	; 0x64
   2a6ec:	str	r0, [sp, #60]	; 0x3c
   2a6f0:	ldr	r0, [fp, #-16]
   2a6f4:	ldr	r0, [r0, #40]	; 0x28
   2a6f8:	str	r0, [fp, #-44]	; 0xffffffd4
   2a6fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a700:	ldr	r0, [r0, #8]
   2a704:	ldr	r1, [fp, #-16]
   2a708:	str	r0, [r1, #100]	; 0x64
   2a70c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a710:	ldr	r1, [fp, #-16]
   2a714:	str	r0, [r1, #40]	; 0x28
   2a718:	ldr	r0, [fp, #-16]
   2a71c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a720:	sub	r1, r1, #1
   2a724:	ldr	r2, [fp, #-16]
   2a728:	ldr	r2, [r2, #88]	; 0x58
   2a72c:	bl	28660 <__assert_fail@plt+0x16f0c>
   2a730:	str	r0, [sp, #56]	; 0x38
   2a734:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a738:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a73c:	cmp	r0, r1
   2a740:	bne	2a7a8 <__assert_fail@plt+0x19054>
   2a744:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a748:	add	r0, sp, #64	; 0x40
   2a74c:	bl	249ac <__assert_fail@plt+0x13258>
   2a750:	str	r0, [fp, #-36]	; 0xffffffdc
   2a754:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a758:	cmp	r0, #0
   2a75c:	beq	2a76c <__assert_fail@plt+0x19018>
   2a760:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a764:	str	r0, [fp, #-12]
   2a768:	b	2ac74 <__assert_fail@plt+0x19520>
   2a76c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a770:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a774:	ldr	r3, [fp, #16]
   2a778:	add	r1, sp, #64	; 0x40
   2a77c:	bl	2afe4 <__assert_fail@plt+0x19890>
   2a780:	str	r0, [fp, #-36]	; 0xffffffdc
   2a784:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a788:	cmp	r0, #0
   2a78c:	beq	2a7a4 <__assert_fail@plt+0x19050>
   2a790:	ldr	r0, [sp, #72]	; 0x48
   2a794:	bl	15f68 <__assert_fail@plt+0x4814>
   2a798:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a79c:	str	r0, [fp, #-12]
   2a7a0:	b	2ac74 <__assert_fail@plt+0x19520>
   2a7a4:	b	2a830 <__assert_fail@plt+0x190dc>
   2a7a8:	ldr	r0, [fp, #-16]
   2a7ac:	ldr	r0, [r0, #100]	; 0x64
   2a7b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a7b4:	add	r0, r0, r1, lsl #2
   2a7b8:	ldr	r0, [r0]
   2a7bc:	str	r0, [fp, #-56]	; 0xffffffc8
   2a7c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a7c4:	movw	r1, #0
   2a7c8:	cmp	r0, r1
   2a7cc:	beq	2a818 <__assert_fail@plt+0x190c4>
   2a7d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a7d4:	ldrb	r0, [r0, #52]	; 0x34
   2a7d8:	ubfx	r0, r0, #6, #1
   2a7dc:	and	r0, r0, #255	; 0xff
   2a7e0:	cmp	r0, #0
   2a7e4:	beq	2a818 <__assert_fail@plt+0x190c4>
   2a7e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a7ec:	add	r1, r0, #4
   2a7f0:	add	r0, sp, #64	; 0x40
   2a7f4:	bl	25c60 <__assert_fail@plt+0x1450c>
   2a7f8:	str	r0, [fp, #-36]	; 0xffffffdc
   2a7fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a800:	cmp	r0, #0
   2a804:	beq	2a814 <__assert_fail@plt+0x190c0>
   2a808:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a80c:	str	r0, [fp, #-12]
   2a810:	b	2ac74 <__assert_fail@plt+0x19520>
   2a814:	b	2a82c <__assert_fail@plt+0x190d8>
   2a818:	add	r0, sp, #64	; 0x40
   2a81c:	movw	r1, #0
   2a820:	and	r1, r1, #255	; 0xff
   2a824:	movw	r2, #12
   2a828:	bl	11658 <memset@plt>
   2a82c:	b	2a830 <__assert_fail@plt+0x190dc>
   2a830:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a834:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a838:	cmp	r0, r1
   2a83c:	beq	2a868 <__assert_fail@plt+0x19114>
   2a840:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a844:	movw	r1, #0
   2a848:	cmp	r0, r1
   2a84c:	beq	2a940 <__assert_fail@plt+0x191ec>
   2a850:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a854:	ldrb	r0, [r0, #52]	; 0x34
   2a858:	ubfx	r0, r0, #6, #1
   2a85c:	and	r0, r0, #255	; 0xff
   2a860:	cmp	r0, #0
   2a864:	beq	2a940 <__assert_fail@plt+0x191ec>
   2a868:	ldr	r0, [sp, #68]	; 0x44
   2a86c:	cmp	r0, #0
   2a870:	beq	2a8c4 <__assert_fail@plt+0x19170>
   2a874:	ldr	r0, [fp, #-16]
   2a878:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a87c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a880:	ldr	r1, [fp, #16]
   2a884:	add	ip, sp, #64	; 0x40
   2a888:	str	r1, [sp, #32]
   2a88c:	mov	r1, ip
   2a890:	ldr	ip, [sp, #32]
   2a894:	str	ip, [sp]
   2a898:	bl	2b188 <__assert_fail@plt+0x19a34>
   2a89c:	str	r0, [fp, #-36]	; 0xffffffdc
   2a8a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a8a4:	cmp	r0, #0
   2a8a8:	beq	2a8c0 <__assert_fail@plt+0x1916c>
   2a8ac:	ldr	r0, [sp, #72]	; 0x48
   2a8b0:	bl	15f68 <__assert_fail@plt+0x4814>
   2a8b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a8b8:	str	r0, [fp, #-12]
   2a8bc:	b	2ac74 <__assert_fail@plt+0x19520>
   2a8c0:	b	2a8c4 <__assert_fail@plt+0x19170>
   2a8c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a8c8:	ldr	r3, [sp, #56]	; 0x38
   2a8cc:	sub	r0, fp, #36	; 0x24
   2a8d0:	add	r2, sp, #64	; 0x40
   2a8d4:	bl	25e24 <__assert_fail@plt+0x146d0>
   2a8d8:	str	r0, [fp, #-56]	; 0xffffffc8
   2a8dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a8e0:	movw	r1, #0
   2a8e4:	cmp	r0, r1
   2a8e8:	movw	r0, #0
   2a8ec:	str	r0, [sp, #28]
   2a8f0:	bne	2a908 <__assert_fail@plt+0x191b4>
   2a8f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a8f8:	cmp	r0, #0
   2a8fc:	movw	r0, #0
   2a900:	movne	r0, #1
   2a904:	str	r0, [sp, #28]
   2a908:	ldr	r0, [sp, #28]
   2a90c:	tst	r0, #1
   2a910:	beq	2a928 <__assert_fail@plt+0x191d4>
   2a914:	ldr	r0, [sp, #72]	; 0x48
   2a918:	bl	15f68 <__assert_fail@plt+0x4814>
   2a91c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a920:	str	r0, [fp, #-12]
   2a924:	b	2ac74 <__assert_fail@plt+0x19520>
   2a928:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a92c:	ldr	r1, [fp, #-16]
   2a930:	ldr	r1, [r1, #100]	; 0x64
   2a934:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a938:	add	r1, r1, r2, lsl #2
   2a93c:	str	r0, [r1]
   2a940:	movw	r0, #0
   2a944:	str	r0, [fp, #-52]	; 0xffffffcc
   2a948:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a94c:	ldr	r1, [fp, #12]
   2a950:	cmp	r0, r1
   2a954:	movw	r0, #0
   2a958:	str	r0, [sp, #24]
   2a95c:	bge	2a97c <__assert_fail@plt+0x19228>
   2a960:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a964:	ldr	r1, [fp, #-16]
   2a968:	ldr	r1, [r1, #120]	; 0x78
   2a96c:	cmp	r0, r1
   2a970:	movw	r0, #0
   2a974:	movle	r0, #1
   2a978:	str	r0, [sp, #24]
   2a97c:	ldr	r0, [sp, #24]
   2a980:	tst	r0, #1
   2a984:	beq	2abc0 <__assert_fail@plt+0x1946c>
   2a988:	mov	r0, #0
   2a98c:	str	r0, [sp, #68]	; 0x44
   2a990:	ldr	r0, [fp, #-16]
   2a994:	ldr	r0, [r0, #100]	; 0x64
   2a998:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a99c:	add	r1, r1, #1
   2a9a0:	add	r0, r0, r1, lsl #2
   2a9a4:	ldr	r0, [r0]
   2a9a8:	movw	r1, #0
   2a9ac:	cmp	r0, r1
   2a9b0:	beq	2aa00 <__assert_fail@plt+0x192ac>
   2a9b4:	ldr	r0, [fp, #-16]
   2a9b8:	ldr	r0, [r0, #100]	; 0x64
   2a9bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a9c0:	add	r1, r1, #1
   2a9c4:	add	r0, r0, r1, lsl #2
   2a9c8:	ldr	r0, [r0]
   2a9cc:	add	r1, r0, #4
   2a9d0:	add	r0, sp, #64	; 0x40
   2a9d4:	bl	25388 <__assert_fail@plt+0x13c34>
   2a9d8:	str	r0, [fp, #-36]	; 0xffffffdc
   2a9dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a9e0:	cmp	r0, #0
   2a9e4:	beq	2a9fc <__assert_fail@plt+0x192a8>
   2a9e8:	ldr	r0, [sp, #72]	; 0x48
   2a9ec:	bl	15f68 <__assert_fail@plt+0x4814>
   2a9f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a9f4:	str	r0, [fp, #-12]
   2a9f8:	b	2ac74 <__assert_fail@plt+0x19520>
   2a9fc:	b	2aa00 <__assert_fail@plt+0x192ac>
   2aa00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2aa04:	movw	r1, #0
   2aa08:	cmp	r0, r1
   2aa0c:	beq	2aa50 <__assert_fail@plt+0x192fc>
   2aa10:	ldr	r0, [fp, #-16]
   2aa14:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2aa18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2aa1c:	add	r2, r2, #16
   2aa20:	add	r3, sp, #64	; 0x40
   2aa24:	bl	2b558 <__assert_fail@plt+0x19e04>
   2aa28:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa30:	cmp	r0, #0
   2aa34:	beq	2aa4c <__assert_fail@plt+0x192f8>
   2aa38:	ldr	r0, [sp, #72]	; 0x48
   2aa3c:	bl	15f68 <__assert_fail@plt+0x4814>
   2aa40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa44:	str	r0, [fp, #-12]
   2aa48:	b	2ac74 <__assert_fail@plt+0x19520>
   2aa4c:	b	2aa50 <__assert_fail@plt+0x192fc>
   2aa50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2aa54:	add	r0, r0, #1
   2aa58:	str	r0, [fp, #-48]	; 0xffffffd0
   2aa5c:	ldr	r0, [sp, #68]	; 0x44
   2aa60:	cmp	r0, #0
   2aa64:	beq	2aaf0 <__assert_fail@plt+0x1939c>
   2aa68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2aa6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2aa70:	ldr	r3, [fp, #16]
   2aa74:	add	r1, sp, #64	; 0x40
   2aa78:	bl	2afe4 <__assert_fail@plt+0x19890>
   2aa7c:	str	r0, [fp, #-36]	; 0xffffffdc
   2aa80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa84:	cmp	r0, #0
   2aa88:	beq	2aaa0 <__assert_fail@plt+0x1934c>
   2aa8c:	ldr	r0, [sp, #72]	; 0x48
   2aa90:	bl	15f68 <__assert_fail@plt+0x4814>
   2aa94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aa98:	str	r0, [fp, #-12]
   2aa9c:	b	2ac74 <__assert_fail@plt+0x19520>
   2aaa0:	ldr	r0, [fp, #-16]
   2aaa4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2aaa8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aaac:	ldr	r1, [fp, #16]
   2aab0:	add	ip, sp, #64	; 0x40
   2aab4:	str	r1, [sp, #20]
   2aab8:	mov	r1, ip
   2aabc:	ldr	ip, [sp, #20]
   2aac0:	str	ip, [sp]
   2aac4:	bl	2b188 <__assert_fail@plt+0x19a34>
   2aac8:	str	r0, [fp, #-36]	; 0xffffffdc
   2aacc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aad0:	cmp	r0, #0
   2aad4:	beq	2aaec <__assert_fail@plt+0x19398>
   2aad8:	ldr	r0, [sp, #72]	; 0x48
   2aadc:	bl	15f68 <__assert_fail@plt+0x4814>
   2aae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2aae4:	str	r0, [fp, #-12]
   2aae8:	b	2ac74 <__assert_fail@plt+0x19520>
   2aaec:	b	2aaf0 <__assert_fail@plt+0x1939c>
   2aaf0:	ldr	r0, [fp, #-16]
   2aaf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2aaf8:	sub	r1, r1, #1
   2aafc:	ldr	r2, [fp, #-16]
   2ab00:	ldr	r2, [r2, #88]	; 0x58
   2ab04:	bl	28660 <__assert_fail@plt+0x16f0c>
   2ab08:	str	r0, [sp, #56]	; 0x38
   2ab0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ab10:	ldr	r3, [sp, #56]	; 0x38
   2ab14:	sub	r0, fp, #36	; 0x24
   2ab18:	add	r2, sp, #64	; 0x40
   2ab1c:	bl	25e24 <__assert_fail@plt+0x146d0>
   2ab20:	str	r0, [fp, #-56]	; 0xffffffc8
   2ab24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ab28:	movw	r1, #0
   2ab2c:	cmp	r0, r1
   2ab30:	movw	r0, #0
   2ab34:	str	r0, [sp, #16]
   2ab38:	bne	2ab50 <__assert_fail@plt+0x193fc>
   2ab3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ab40:	cmp	r0, #0
   2ab44:	movw	r0, #0
   2ab48:	movne	r0, #1
   2ab4c:	str	r0, [sp, #16]
   2ab50:	ldr	r0, [sp, #16]
   2ab54:	tst	r0, #1
   2ab58:	beq	2ab70 <__assert_fail@plt+0x1941c>
   2ab5c:	ldr	r0, [sp, #72]	; 0x48
   2ab60:	bl	15f68 <__assert_fail@plt+0x4814>
   2ab64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ab68:	str	r0, [fp, #-12]
   2ab6c:	b	2ac74 <__assert_fail@plt+0x19520>
   2ab70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ab74:	ldr	r1, [fp, #-16]
   2ab78:	ldr	r1, [r1, #100]	; 0x64
   2ab7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ab80:	add	r1, r1, r2, lsl #2
   2ab84:	str	r0, [r1]
   2ab88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ab8c:	movw	r1, #0
   2ab90:	cmp	r0, r1
   2ab94:	bne	2aba8 <__assert_fail@plt+0x19454>
   2ab98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ab9c:	add	r0, r0, #1
   2aba0:	str	r0, [sp, #12]
   2aba4:	b	2abb4 <__assert_fail@plt+0x19460>
   2aba8:	movw	r0, #0
   2abac:	str	r0, [sp, #12]
   2abb0:	b	2abb4 <__assert_fail@plt+0x19460>
   2abb4:	ldr	r0, [sp, #12]
   2abb8:	str	r0, [fp, #-52]	; 0xffffffcc
   2abbc:	b	2a948 <__assert_fail@plt+0x191f4>
   2abc0:	ldr	r0, [sp, #72]	; 0x48
   2abc4:	bl	15f68 <__assert_fail@plt+0x4814>
   2abc8:	ldr	r0, [fp, #-16]
   2abcc:	ldr	r0, [r0, #100]	; 0x64
   2abd0:	ldr	r1, [fp, #12]
   2abd4:	add	r0, r0, r1, lsl #2
   2abd8:	ldr	r0, [r0]
   2abdc:	movw	r1, #0
   2abe0:	cmp	r0, r1
   2abe4:	bne	2abf4 <__assert_fail@plt+0x194a0>
   2abe8:	movw	r0, #0
   2abec:	str	r0, [sp, #8]
   2abf0:	b	2ac10 <__assert_fail@plt+0x194bc>
   2abf4:	ldr	r0, [fp, #-16]
   2abf8:	ldr	r0, [r0, #100]	; 0x64
   2abfc:	ldr	r1, [fp, #12]
   2ac00:	add	r0, r0, r1, lsl #2
   2ac04:	ldr	r0, [r0]
   2ac08:	add	r0, r0, #4
   2ac0c:	str	r0, [sp, #8]
   2ac10:	ldr	r0, [sp, #8]
   2ac14:	str	r0, [fp, #-60]	; 0xffffffc4
   2ac18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ac1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ac20:	str	r0, [r1]
   2ac24:	ldr	r0, [sp, #60]	; 0x3c
   2ac28:	ldr	r1, [fp, #-16]
   2ac2c:	str	r0, [r1, #100]	; 0x64
   2ac30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ac34:	ldr	r1, [fp, #-16]
   2ac38:	str	r0, [r1, #40]	; 0x28
   2ac3c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2ac40:	movw	r1, #0
   2ac44:	cmp	r0, r1
   2ac48:	beq	2ac6c <__assert_fail@plt+0x19518>
   2ac4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2ac50:	ldr	r1, [fp, #8]
   2ac54:	bl	25d34 <__assert_fail@plt+0x145e0>
   2ac58:	cmp	r0, #0
   2ac5c:	beq	2ac6c <__assert_fail@plt+0x19518>
   2ac60:	movw	r0, #0
   2ac64:	str	r0, [fp, #-12]
   2ac68:	b	2ac74 <__assert_fail@plt+0x19520>
   2ac6c:	movw	r0, #1
   2ac70:	str	r0, [fp, #-12]
   2ac74:	ldr	r0, [fp, #-12]
   2ac78:	sub	sp, fp, #8
   2ac7c:	pop	{r4, sl, fp, pc}
   2ac80:	svcvc	0x00ffffff
   2ac84:	svccc	0x00ffffff
   2ac88:	push	{fp, lr}
   2ac8c:	mov	fp, sp
   2ac90:	sub	sp, sp, #32
   2ac94:	str	r0, [fp, #-8]
   2ac98:	str	r1, [fp, #-12]
   2ac9c:	str	r2, [sp, #16]
   2aca0:	ldr	r0, [fp, #-8]
   2aca4:	ldr	r0, [r0, #16]
   2aca8:	ldr	r1, [fp, #-8]
   2acac:	ldr	r1, [r1, #12]
   2acb0:	cmp	r0, r1
   2acb4:	bne	2ad18 <__assert_fail@plt+0x195c4>
   2acb8:	ldr	r0, [fp, #-8]
   2acbc:	ldr	r0, [r0, #12]
   2acc0:	mov	r1, #1
   2acc4:	orr	r0, r1, r0, lsl #1
   2acc8:	str	r0, [sp, #8]
   2accc:	ldr	r0, [fp, #-8]
   2acd0:	ldr	r0, [r0, #20]
   2acd4:	ldr	r1, [sp, #8]
   2acd8:	lsl	r1, r1, #2
   2acdc:	bl	381dc <__assert_fail@plt+0x26a88>
   2ace0:	str	r0, [sp, #4]
   2ace4:	ldr	r0, [sp, #4]
   2ace8:	movw	r1, #0
   2acec:	cmp	r0, r1
   2acf0:	bne	2ad00 <__assert_fail@plt+0x195ac>
   2acf4:	movw	r0, #0
   2acf8:	str	r0, [fp, #-4]
   2acfc:	b	2ad80 <__assert_fail@plt+0x1962c>
   2ad00:	ldr	r0, [sp, #4]
   2ad04:	ldr	r1, [fp, #-8]
   2ad08:	str	r0, [r1, #20]
   2ad0c:	ldr	r0, [sp, #8]
   2ad10:	ldr	r1, [fp, #-8]
   2ad14:	str	r0, [r1, #12]
   2ad18:	movw	r0, #1
   2ad1c:	movw	r1, #20
   2ad20:	bl	380d0 <__assert_fail@plt+0x2697c>
   2ad24:	str	r0, [sp, #12]
   2ad28:	ldr	r0, [sp, #12]
   2ad2c:	movw	r1, #0
   2ad30:	cmp	r0, r1
   2ad34:	beq	2ad78 <__assert_fail@plt+0x19624>
   2ad38:	ldr	r0, [sp, #12]
   2ad3c:	ldr	r1, [fp, #-8]
   2ad40:	ldr	r2, [r1, #16]
   2ad44:	ldr	r1, [r1, #20]
   2ad48:	add	r1, r1, r2, lsl #2
   2ad4c:	str	r0, [r1]
   2ad50:	ldr	r0, [fp, #-12]
   2ad54:	ldr	r1, [sp, #12]
   2ad58:	str	r0, [r1]
   2ad5c:	ldr	r0, [sp, #16]
   2ad60:	ldr	r1, [sp, #12]
   2ad64:	str	r0, [r1, #4]
   2ad68:	ldr	r0, [fp, #-8]
   2ad6c:	ldr	r1, [r0, #16]
   2ad70:	add	r1, r1, #1
   2ad74:	str	r1, [r0, #16]
   2ad78:	ldr	r0, [sp, #12]
   2ad7c:	str	r0, [fp, #-4]
   2ad80:	ldr	r0, [fp, #-4]
   2ad84:	mov	sp, fp
   2ad88:	pop	{fp, pc}
   2ad8c:	push	{fp, lr}
   2ad90:	mov	fp, sp
   2ad94:	sub	sp, sp, #24
   2ad98:	ldr	ip, [fp, #8]
   2ad9c:	str	r0, [fp, #-8]
   2ada0:	str	r1, [sp, #12]
   2ada4:	str	r2, [sp, #8]
   2ada8:	str	r3, [sp, #4]
   2adac:	ldr	r0, [fp, #-8]
   2adb0:	ldr	r0, [r0, #108]	; 0x6c
   2adb4:	ldr	r1, [fp, #-8]
   2adb8:	ldr	r1, [r1, #112]	; 0x70
   2adbc:	cmp	r0, r1
   2adc0:	blt	2ae50 <__assert_fail@plt+0x196fc>
   2adc4:	ldr	r0, [fp, #-8]
   2adc8:	ldr	r1, [r0, #112]	; 0x70
   2adcc:	ldr	r0, [r0, #116]	; 0x74
   2add0:	lsl	r1, r1, #1
   2add4:	movw	r2, #24
   2add8:	mul	r1, r1, r2
   2addc:	bl	381dc <__assert_fail@plt+0x26a88>
   2ade0:	str	r0, [sp]
   2ade4:	ldr	r0, [sp]
   2ade8:	movw	r1, #0
   2adec:	cmp	r0, r1
   2adf0:	bne	2ae0c <__assert_fail@plt+0x196b8>
   2adf4:	ldr	r0, [fp, #-8]
   2adf8:	ldr	r0, [r0, #116]	; 0x74
   2adfc:	bl	15f68 <__assert_fail@plt+0x4814>
   2ae00:	movw	r0, #12
   2ae04:	str	r0, [fp, #-4]
   2ae08:	b	2afd8 <__assert_fail@plt+0x19884>
   2ae0c:	ldr	r0, [sp]
   2ae10:	ldr	r1, [fp, #-8]
   2ae14:	str	r0, [r1, #116]	; 0x74
   2ae18:	ldr	r0, [fp, #-8]
   2ae1c:	ldr	r1, [r0, #108]	; 0x6c
   2ae20:	ldr	r2, [r0, #112]	; 0x70
   2ae24:	ldr	r0, [r0, #116]	; 0x74
   2ae28:	add	r1, r1, r1, lsl #1
   2ae2c:	add	r0, r0, r1, lsl #3
   2ae30:	add	r1, r2, r2, lsl #1
   2ae34:	lsl	r2, r1, #3
   2ae38:	mov	r1, #0
   2ae3c:	bl	11658 <memset@plt>
   2ae40:	ldr	r1, [fp, #-8]
   2ae44:	ldr	r2, [r1, #112]	; 0x70
   2ae48:	lsl	r2, r2, #1
   2ae4c:	str	r2, [r1, #112]	; 0x70
   2ae50:	ldr	r0, [fp, #-8]
   2ae54:	ldr	r0, [r0, #108]	; 0x6c
   2ae58:	cmp	r0, #0
   2ae5c:	ble	2aeb8 <__assert_fail@plt+0x19764>
   2ae60:	ldr	r0, [fp, #-8]
   2ae64:	ldr	r0, [r0, #116]	; 0x74
   2ae68:	ldr	r1, [fp, #-8]
   2ae6c:	ldr	r1, [r1, #108]	; 0x6c
   2ae70:	sub	r1, r1, #1
   2ae74:	movw	r2, #24
   2ae78:	mul	r1, r1, r2
   2ae7c:	add	r0, r0, r1
   2ae80:	ldr	r0, [r0, #4]
   2ae84:	ldr	r1, [sp, #8]
   2ae88:	cmp	r0, r1
   2ae8c:	bne	2aeb8 <__assert_fail@plt+0x19764>
   2ae90:	ldr	r0, [fp, #-8]
   2ae94:	ldr	r0, [r0, #116]	; 0x74
   2ae98:	ldr	r1, [fp, #-8]
   2ae9c:	ldr	r1, [r1, #108]	; 0x6c
   2aea0:	sub	r1, r1, #1
   2aea4:	movw	r2, #24
   2aea8:	mul	r1, r1, r2
   2aeac:	add	r0, r0, r1
   2aeb0:	movw	r1, #1
   2aeb4:	strb	r1, [r0, #20]
   2aeb8:	ldr	r0, [sp, #12]
   2aebc:	ldr	r1, [fp, #-8]
   2aec0:	ldr	r1, [r1, #116]	; 0x74
   2aec4:	ldr	r2, [fp, #-8]
   2aec8:	ldr	r2, [r2, #108]	; 0x6c
   2aecc:	movw	r3, #24
   2aed0:	mul	r2, r2, r3
   2aed4:	add	r1, r1, r2
   2aed8:	str	r0, [r1]
   2aedc:	ldr	r0, [sp, #8]
   2aee0:	ldr	r1, [fp, #-8]
   2aee4:	ldr	r1, [r1, #116]	; 0x74
   2aee8:	ldr	r2, [fp, #-8]
   2aeec:	ldr	r2, [r2, #108]	; 0x6c
   2aef0:	mul	r2, r2, r3
   2aef4:	add	r1, r1, r2
   2aef8:	str	r0, [r1, #4]
   2aefc:	ldr	r0, [sp, #4]
   2af00:	ldr	r1, [fp, #-8]
   2af04:	ldr	r1, [r1, #116]	; 0x74
   2af08:	ldr	r2, [fp, #-8]
   2af0c:	ldr	r2, [r2, #108]	; 0x6c
   2af10:	mul	r2, r2, r3
   2af14:	add	r1, r1, r2
   2af18:	str	r0, [r1, #8]
   2af1c:	ldr	r0, [fp, #8]
   2af20:	ldr	r1, [fp, #-8]
   2af24:	ldr	r1, [r1, #116]	; 0x74
   2af28:	ldr	r2, [fp, #-8]
   2af2c:	ldr	r2, [r2, #108]	; 0x6c
   2af30:	mul	r2, r2, r3
   2af34:	add	r1, r1, r2
   2af38:	str	r0, [r1, #12]
   2af3c:	ldr	r0, [sp, #4]
   2af40:	ldr	r1, [fp, #8]
   2af44:	cmp	r0, r1
   2af48:	movw	r0, #0
   2af4c:	moveq	r0, #1
   2af50:	tst	r0, #1
   2af54:	mvn	r0, #0
   2af58:	moveq	r0, #0
   2af5c:	ldr	r1, [fp, #-8]
   2af60:	ldr	r1, [r1, #116]	; 0x74
   2af64:	ldr	r2, [fp, #-8]
   2af68:	ldr	r2, [r2, #108]	; 0x6c
   2af6c:	mul	r2, r2, r3
   2af70:	add	r1, r1, r2
   2af74:	str	r0, [r1, #16]
   2af78:	ldr	r0, [fp, #-8]
   2af7c:	ldr	r0, [r0, #116]	; 0x74
   2af80:	ldr	r1, [fp, #-8]
   2af84:	ldr	r2, [r1, #108]	; 0x6c
   2af88:	add	ip, r2, #1
   2af8c:	str	ip, [r1, #108]	; 0x6c
   2af90:	mul	r1, r2, r3
   2af94:	add	r0, r0, r1
   2af98:	movw	r1, #0
   2af9c:	strb	r1, [r0, #20]
   2afa0:	ldr	r0, [fp, #-8]
   2afa4:	ldr	r0, [r0, #120]	; 0x78
   2afa8:	ldr	r1, [fp, #8]
   2afac:	ldr	r2, [sp, #4]
   2afb0:	sub	r1, r1, r2
   2afb4:	cmp	r0, r1
   2afb8:	bge	2afd0 <__assert_fail@plt+0x1987c>
   2afbc:	ldr	r0, [fp, #8]
   2afc0:	ldr	r1, [sp, #4]
   2afc4:	sub	r0, r0, r1
   2afc8:	ldr	r1, [fp, #-8]
   2afcc:	str	r0, [r1, #120]	; 0x78
   2afd0:	movw	r0, #0
   2afd4:	str	r0, [fp, #-4]
   2afd8:	ldr	r0, [fp, #-4]
   2afdc:	mov	sp, fp
   2afe0:	pop	{fp, pc}
   2afe4:	push	{fp, lr}
   2afe8:	mov	fp, sp
   2afec:	sub	sp, sp, #64	; 0x40
   2aff0:	str	r0, [fp, #-8]
   2aff4:	str	r1, [fp, #-12]
   2aff8:	str	r2, [fp, #-16]
   2affc:	str	r3, [fp, #-20]	; 0xffffffec
   2b000:	ldr	r0, [fp, #-12]
   2b004:	ldr	r0, [r0, #4]
   2b008:	cmp	r0, #0
   2b00c:	beq	2b014 <__assert_fail@plt+0x198c0>
   2b010:	b	2b014 <__assert_fail@plt+0x198c0>
   2b014:	ldr	r0, [fp, #-12]
   2b018:	ldr	r1, [r0, #4]
   2b01c:	add	r0, sp, #20
   2b020:	bl	24e10 <__assert_fail@plt+0x136bc>
   2b024:	str	r0, [fp, #-24]	; 0xffffffe8
   2b028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b02c:	cmp	r0, #0
   2b030:	beq	2b040 <__assert_fail@plt+0x198ec>
   2b034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b038:	str	r0, [fp, #-4]
   2b03c:	b	2b17c <__assert_fail@plt+0x19a28>
   2b040:	movw	r0, #0
   2b044:	str	r0, [fp, #-28]	; 0xffffffe4
   2b048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b04c:	ldr	r1, [fp, #-12]
   2b050:	ldr	r1, [r1, #4]
   2b054:	cmp	r0, r1
   2b058:	bge	2b14c <__assert_fail@plt+0x199f8>
   2b05c:	ldr	r0, [fp, #-12]
   2b060:	ldr	r0, [r0, #8]
   2b064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b068:	add	r0, r0, r1, lsl #2
   2b06c:	ldr	r0, [r0]
   2b070:	str	r0, [sp, #16]
   2b074:	ldr	r0, [fp, #-8]
   2b078:	ldr	r0, [r0, #24]
   2b07c:	ldr	r1, [sp, #16]
   2b080:	movw	r2, #12
   2b084:	mul	r1, r1, r2
   2b088:	add	r0, r0, r1
   2b08c:	str	r0, [sp, #12]
   2b090:	ldr	r0, [fp, #-8]
   2b094:	ldr	r1, [sp, #12]
   2b098:	ldr	r2, [fp, #-16]
   2b09c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b0a0:	bl	2a498 <__assert_fail@plt+0x18d44>
   2b0a4:	str	r0, [sp, #32]
   2b0a8:	ldr	r0, [sp, #32]
   2b0ac:	cmn	r0, #1
   2b0b0:	bne	2b0e8 <__assert_fail@plt+0x19994>
   2b0b4:	ldr	r1, [sp, #12]
   2b0b8:	add	r0, sp, #20
   2b0bc:	bl	25388 <__assert_fail@plt+0x13c34>
   2b0c0:	str	r0, [fp, #-24]	; 0xffffffe8
   2b0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b0c8:	cmp	r0, #0
   2b0cc:	beq	2b0e4 <__assert_fail@plt+0x19990>
   2b0d0:	ldr	r0, [sp, #28]
   2b0d4:	bl	15f68 <__assert_fail@plt+0x4814>
   2b0d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b0dc:	str	r0, [fp, #-4]
   2b0e0:	b	2b17c <__assert_fail@plt+0x19a28>
   2b0e4:	b	2b138 <__assert_fail@plt+0x199e4>
   2b0e8:	ldr	r0, [fp, #-8]
   2b0ec:	ldr	r2, [sp, #16]
   2b0f0:	ldr	r3, [fp, #-16]
   2b0f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b0f8:	add	ip, sp, #20
   2b0fc:	str	r1, [sp, #8]
   2b100:	mov	r1, ip
   2b104:	ldr	ip, [sp, #8]
   2b108:	str	ip, [sp]
   2b10c:	bl	2b844 <__assert_fail@plt+0x1a0f0>
   2b110:	str	r0, [fp, #-24]	; 0xffffffe8
   2b114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b118:	cmp	r0, #0
   2b11c:	beq	2b134 <__assert_fail@plt+0x199e0>
   2b120:	ldr	r0, [sp, #28]
   2b124:	bl	15f68 <__assert_fail@plt+0x4814>
   2b128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b12c:	str	r0, [fp, #-4]
   2b130:	b	2b17c <__assert_fail@plt+0x19a28>
   2b134:	b	2b138 <__assert_fail@plt+0x199e4>
   2b138:	b	2b13c <__assert_fail@plt+0x199e8>
   2b13c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b140:	add	r0, r0, #1
   2b144:	str	r0, [fp, #-28]	; 0xffffffe4
   2b148:	b	2b048 <__assert_fail@plt+0x198f4>
   2b14c:	ldr	r0, [fp, #-12]
   2b150:	ldr	r0, [r0, #8]
   2b154:	bl	15f68 <__assert_fail@plt+0x4814>
   2b158:	ldr	r0, [fp, #-12]
   2b15c:	ldr	r1, [sp, #20]
   2b160:	str	r1, [r0]
   2b164:	ldr	r1, [sp, #24]
   2b168:	str	r1, [r0, #4]
   2b16c:	ldr	r1, [sp, #28]
   2b170:	str	r1, [r0, #8]
   2b174:	movw	r0, #0
   2b178:	str	r0, [fp, #-4]
   2b17c:	ldr	r0, [fp, #-4]
   2b180:	mov	sp, fp
   2b184:	pop	{fp, pc}
   2b188:	push	{fp, lr}
   2b18c:	mov	fp, sp
   2b190:	sub	sp, sp, #112	; 0x70
   2b194:	ldr	ip, [fp, #8]
   2b198:	str	r0, [fp, #-8]
   2b19c:	str	r1, [fp, #-12]
   2b1a0:	str	r2, [fp, #-16]
   2b1a4:	str	r3, [fp, #-20]	; 0xffffffec
   2b1a8:	ldr	r0, [fp, #-8]
   2b1ac:	ldr	r0, [r0, #84]	; 0x54
   2b1b0:	str	r0, [fp, #-24]	; 0xffffffe8
   2b1b4:	ldr	r0, [fp, #-8]
   2b1b8:	ldr	r1, [fp, #-16]
   2b1bc:	str	ip, [sp, #28]
   2b1c0:	bl	2a1a0 <__assert_fail@plt+0x18a4c>
   2b1c4:	str	r0, [fp, #-32]	; 0xffffffe0
   2b1c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b1cc:	cmn	r0, #1
   2b1d0:	bne	2b1e0 <__assert_fail@plt+0x19a8c>
   2b1d4:	movw	r0, #0
   2b1d8:	str	r0, [fp, #-4]
   2b1dc:	b	2b54c <__assert_fail@plt+0x19df8>
   2b1e0:	b	2b1e4 <__assert_fail@plt+0x19a90>
   2b1e4:	ldr	r0, [fp, #-8]
   2b1e8:	ldr	r0, [r0, #116]	; 0x74
   2b1ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b1f0:	movw	r2, #24
   2b1f4:	mul	r1, r1, r2
   2b1f8:	add	r0, r0, r1
   2b1fc:	str	r0, [fp, #-36]	; 0xffffffdc
   2b200:	ldr	r0, [fp, #-12]
   2b204:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b208:	ldr	r1, [r1]
   2b20c:	bl	25d34 <__assert_fail@plt+0x145e0>
   2b210:	cmp	r0, #0
   2b214:	bne	2b21c <__assert_fail@plt+0x19ac8>
   2b218:	b	2b52c <__assert_fail@plt+0x19dd8>
   2b21c:	ldr	r0, [fp, #-16]
   2b220:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b224:	ldr	r1, [r1, #12]
   2b228:	add	r0, r0, r1
   2b22c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b230:	ldr	r1, [r1, #8]
   2b234:	sub	r0, r0, r1
   2b238:	str	r0, [fp, #-40]	; 0xffffffd8
   2b23c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b240:	ldr	r1, [fp, #-16]
   2b244:	cmp	r0, r1
   2b248:	bne	2b36c <__assert_fail@plt+0x19c18>
   2b24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b250:	ldr	r0, [r0, #20]
   2b254:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b258:	ldr	r1, [r1]
   2b25c:	movw	r2, #12
   2b260:	mul	r1, r1, r2
   2b264:	add	r0, r0, r1
   2b268:	ldr	r0, [r0, #8]
   2b26c:	ldr	r0, [r0]
   2b270:	str	r0, [fp, #-44]	; 0xffffffd4
   2b274:	ldr	r0, [fp, #-12]
   2b278:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b27c:	bl	25d34 <__assert_fail@plt+0x145e0>
   2b280:	cmp	r0, #0
   2b284:	beq	2b28c <__assert_fail@plt+0x19b38>
   2b288:	b	2b52c <__assert_fail@plt+0x19dd8>
   2b28c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b290:	add	r0, sp, #56	; 0x38
   2b294:	bl	249ac <__assert_fail@plt+0x13258>
   2b298:	str	r0, [fp, #-28]	; 0xffffffe4
   2b29c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b2a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b2a4:	ldr	r3, [fp, #8]
   2b2a8:	add	r1, sp, #56	; 0x38
   2b2ac:	bl	2afe4 <__assert_fail@plt+0x19890>
   2b2b0:	str	r0, [sp, #52]	; 0x34
   2b2b4:	ldr	r0, [fp, #-12]
   2b2b8:	add	r1, sp, #56	; 0x38
   2b2bc:	bl	25388 <__assert_fail@plt+0x13c34>
   2b2c0:	str	r0, [sp, #48]	; 0x30
   2b2c4:	ldr	r0, [sp, #64]	; 0x40
   2b2c8:	bl	15f68 <__assert_fail@plt+0x4814>
   2b2cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b2d0:	cmp	r0, #0
   2b2d4:	movw	r0, #1
   2b2d8:	str	r0, [sp, #24]
   2b2dc:	bne	2b308 <__assert_fail@plt+0x19bb4>
   2b2e0:	ldr	r0, [sp, #52]	; 0x34
   2b2e4:	cmp	r0, #0
   2b2e8:	movw	r0, #1
   2b2ec:	str	r0, [sp, #24]
   2b2f0:	bne	2b308 <__assert_fail@plt+0x19bb4>
   2b2f4:	ldr	r0, [sp, #48]	; 0x30
   2b2f8:	cmp	r0, #0
   2b2fc:	movw	r0, #0
   2b300:	movne	r0, #1
   2b304:	str	r0, [sp, #24]
   2b308:	ldr	r0, [sp, #24]
   2b30c:	tst	r0, #1
   2b310:	beq	2b368 <__assert_fail@plt+0x19c14>
   2b314:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b318:	cmp	r0, #0
   2b31c:	beq	2b32c <__assert_fail@plt+0x19bd8>
   2b320:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b324:	str	r0, [sp, #20]
   2b328:	b	2b354 <__assert_fail@plt+0x19c00>
   2b32c:	ldr	r0, [sp, #52]	; 0x34
   2b330:	cmp	r0, #0
   2b334:	beq	2b344 <__assert_fail@plt+0x19bf0>
   2b338:	ldr	r0, [sp, #52]	; 0x34
   2b33c:	str	r0, [sp, #16]
   2b340:	b	2b34c <__assert_fail@plt+0x19bf8>
   2b344:	ldr	r0, [sp, #48]	; 0x30
   2b348:	str	r0, [sp, #16]
   2b34c:	ldr	r0, [sp, #16]
   2b350:	str	r0, [sp, #20]
   2b354:	ldr	r0, [sp, #20]
   2b358:	str	r0, [fp, #-28]	; 0xffffffe4
   2b35c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b360:	str	r0, [fp, #-4]
   2b364:	b	2b54c <__assert_fail@plt+0x19df8>
   2b368:	b	2b1e4 <__assert_fail@plt+0x19a90>
   2b36c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b370:	ldr	r0, [r0, #12]
   2b374:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b378:	ldr	r1, [r1]
   2b37c:	ldr	r0, [r0, r1, lsl #2]
   2b380:	str	r0, [fp, #-44]	; 0xffffffd4
   2b384:	ldr	r0, [fp, #-8]
   2b388:	ldr	r0, [r0, #100]	; 0x64
   2b38c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b390:	add	r0, r0, r1, lsl #2
   2b394:	ldr	r0, [r0]
   2b398:	movw	r1, #0
   2b39c:	cmp	r0, r1
   2b3a0:	beq	2b47c <__assert_fail@plt+0x19d28>
   2b3a4:	ldr	r0, [fp, #-8]
   2b3a8:	ldr	r0, [r0, #100]	; 0x64
   2b3ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b3b0:	add	r0, r0, r1, lsl #2
   2b3b4:	ldr	r0, [r0]
   2b3b8:	add	r0, r0, #4
   2b3bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b3c0:	bl	25d34 <__assert_fail@plt+0x145e0>
   2b3c4:	cmp	r0, #0
   2b3c8:	beq	2b3d0 <__assert_fail@plt+0x19c7c>
   2b3cc:	b	2b52c <__assert_fail@plt+0x19dd8>
   2b3d0:	ldr	r0, [fp, #-8]
   2b3d4:	ldr	r0, [r0, #100]	; 0x64
   2b3d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b3dc:	add	r0, r0, r1, lsl #2
   2b3e0:	ldr	r0, [r0]
   2b3e4:	add	r1, r0, #4
   2b3e8:	add	r0, sp, #36	; 0x24
   2b3ec:	bl	25c60 <__assert_fail@plt+0x1450c>
   2b3f0:	str	r0, [fp, #-28]	; 0xffffffe4
   2b3f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b3f8:	add	r0, sp, #36	; 0x24
   2b3fc:	bl	25878 <__assert_fail@plt+0x14124>
   2b400:	and	r0, r0, #1
   2b404:	strb	r0, [sp, #35]	; 0x23
   2b408:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b40c:	cmp	r0, #0
   2b410:	movw	r0, #1
   2b414:	str	r0, [sp, #12]
   2b418:	bne	2b42c <__assert_fail@plt+0x19cd8>
   2b41c:	ldrb	r0, [sp, #35]	; 0x23
   2b420:	mvn	r1, #0
   2b424:	eor	r0, r0, r1
   2b428:	str	r0, [sp, #12]
   2b42c:	ldr	r0, [sp, #12]
   2b430:	tst	r0, #1
   2b434:	beq	2b478 <__assert_fail@plt+0x19d24>
   2b438:	ldr	r0, [sp, #44]	; 0x2c
   2b43c:	bl	15f68 <__assert_fail@plt+0x4814>
   2b440:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b444:	cmp	r0, #0
   2b448:	beq	2b458 <__assert_fail@plt+0x19d04>
   2b44c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b450:	str	r0, [sp, #8]
   2b454:	b	2b464 <__assert_fail@plt+0x19d10>
   2b458:	movw	r0, #12
   2b45c:	str	r0, [sp, #8]
   2b460:	b	2b464 <__assert_fail@plt+0x19d10>
   2b464:	ldr	r0, [sp, #8]
   2b468:	str	r0, [fp, #-28]	; 0xffffffe4
   2b46c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b470:	str	r0, [fp, #-4]
   2b474:	b	2b54c <__assert_fail@plt+0x19df8>
   2b478:	b	2b4a8 <__assert_fail@plt+0x19d54>
   2b47c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b480:	add	r0, sp, #36	; 0x24
   2b484:	bl	249ac <__assert_fail@plt+0x13258>
   2b488:	str	r0, [fp, #-28]	; 0xffffffe4
   2b48c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b490:	cmp	r0, #0
   2b494:	beq	2b4a4 <__assert_fail@plt+0x19d50>
   2b498:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b49c:	str	r0, [fp, #-4]
   2b4a0:	b	2b54c <__assert_fail@plt+0x19df8>
   2b4a4:	b	2b4a8 <__assert_fail@plt+0x19d54>
   2b4a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b4ac:	sub	r0, fp, #28
   2b4b0:	add	r2, sp, #36	; 0x24
   2b4b4:	bl	2ba34 <__assert_fail@plt+0x1a2e0>
   2b4b8:	ldr	r1, [fp, #-8]
   2b4bc:	ldr	r1, [r1, #100]	; 0x64
   2b4c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b4c4:	str	r0, [r1, r2, lsl #2]
   2b4c8:	ldr	r0, [sp, #44]	; 0x2c
   2b4cc:	bl	15f68 <__assert_fail@plt+0x4814>
   2b4d0:	ldr	r0, [fp, #-8]
   2b4d4:	ldr	r0, [r0, #100]	; 0x64
   2b4d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b4dc:	add	r0, r0, r1, lsl #2
   2b4e0:	ldr	r0, [r0]
   2b4e4:	movw	r1, #0
   2b4e8:	cmp	r0, r1
   2b4ec:	movw	r0, #0
   2b4f0:	str	r0, [sp, #4]
   2b4f4:	bne	2b50c <__assert_fail@plt+0x19db8>
   2b4f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b4fc:	cmp	r0, #0
   2b500:	movw	r0, #0
   2b504:	movne	r0, #1
   2b508:	str	r0, [sp, #4]
   2b50c:	ldr	r0, [sp, #4]
   2b510:	tst	r0, #1
   2b514:	beq	2b524 <__assert_fail@plt+0x19dd0>
   2b518:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b51c:	str	r0, [fp, #-4]
   2b520:	b	2b54c <__assert_fail@plt+0x19df8>
   2b524:	b	2b528 <__assert_fail@plt+0x19dd4>
   2b528:	b	2b52c <__assert_fail@plt+0x19dd8>
   2b52c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b530:	add	r1, r0, #24
   2b534:	str	r1, [fp, #-36]	; 0xffffffdc
   2b538:	ldrsb	r0, [r0, #20]
   2b53c:	cmp	r0, #0
   2b540:	bne	2b200 <__assert_fail@plt+0x19aac>
   2b544:	movw	r0, #0
   2b548:	str	r0, [fp, #-4]
   2b54c:	ldr	r0, [fp, #-4]
   2b550:	mov	sp, fp
   2b554:	pop	{fp, pc}
   2b558:	push	{fp, lr}
   2b55c:	mov	fp, sp
   2b560:	sub	sp, sp, #80	; 0x50
   2b564:	str	r0, [fp, #-8]
   2b568:	str	r1, [fp, #-12]
   2b56c:	str	r2, [fp, #-16]
   2b570:	str	r3, [fp, #-20]	; 0xffffffec
   2b574:	ldr	r0, [fp, #-8]
   2b578:	ldr	r0, [r0, #84]	; 0x54
   2b57c:	str	r0, [fp, #-24]	; 0xffffffe8
   2b580:	movw	r0, #0
   2b584:	str	r0, [fp, #-36]	; 0xffffffdc
   2b588:	add	r1, sp, #32
   2b58c:	str	r0, [sp, #8]
   2b590:	mov	r0, r1
   2b594:	movw	r1, #0
   2b598:	and	r1, r1, #255	; 0xff
   2b59c:	movw	r2, #12
   2b5a0:	bl	11658 <memset@plt>
   2b5a4:	ldr	r0, [sp, #8]
   2b5a8:	str	r0, [fp, #-32]	; 0xffffffe0
   2b5ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b5b0:	ldr	r1, [fp, #-16]
   2b5b4:	ldr	r1, [r1, #4]
   2b5b8:	cmp	r0, r1
   2b5bc:	bge	2b828 <__assert_fail@plt+0x1a0d4>
   2b5c0:	mov	r0, #0
   2b5c4:	str	r0, [sp, #28]
   2b5c8:	ldr	r0, [fp, #-16]
   2b5cc:	ldr	r0, [r0, #8]
   2b5d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b5d4:	ldr	r0, [r0, r1, lsl #2]
   2b5d8:	str	r0, [sp, #24]
   2b5dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b5e0:	ldr	r0, [r0]
   2b5e4:	ldr	r1, [sp, #24]
   2b5e8:	add	r0, r0, r1, lsl #3
   2b5ec:	ldr	r0, [r0, #4]
   2b5f0:	and	r0, r0, #255	; 0xff
   2b5f4:	and	r0, r0, #8
   2b5f8:	cmp	r0, #0
   2b5fc:	bne	2b604 <__assert_fail@plt+0x19eb0>
   2b600:	b	2b604 <__assert_fail@plt+0x19eb0>
   2b604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b608:	ldr	r0, [r0]
   2b60c:	ldr	r1, [sp, #24]
   2b610:	add	r0, r0, r1, lsl #3
   2b614:	ldr	r0, [r0, #4]
   2b618:	lsr	r0, r0, #20
   2b61c:	and	r0, r0, #1
   2b620:	cmp	r0, #0
   2b624:	beq	2b794 <__assert_fail@plt+0x1a040>
   2b628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b62c:	ldr	r1, [sp, #24]
   2b630:	ldr	r2, [fp, #-8]
   2b634:	ldr	r3, [fp, #-12]
   2b638:	bl	2bd8c <__assert_fail@plt+0x1a638>
   2b63c:	str	r0, [sp, #28]
   2b640:	ldr	r0, [sp, #28]
   2b644:	cmp	r0, #1
   2b648:	ble	2b790 <__assert_fail@plt+0x1a03c>
   2b64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b650:	ldr	r0, [r0, #12]
   2b654:	ldr	r1, [sp, #24]
   2b658:	ldr	r0, [r0, r1, lsl #2]
   2b65c:	str	r0, [sp, #16]
   2b660:	ldr	r0, [fp, #-12]
   2b664:	ldr	r1, [sp, #28]
   2b668:	add	r0, r0, r1
   2b66c:	str	r0, [sp, #12]
   2b670:	ldr	r0, [fp, #-8]
   2b674:	ldr	r0, [r0, #100]	; 0x64
   2b678:	ldr	r1, [sp, #12]
   2b67c:	add	r0, r0, r1, lsl #2
   2b680:	ldr	r0, [r0]
   2b684:	str	r0, [sp, #20]
   2b688:	movw	r0, #0
   2b68c:	str	r0, [sp, #36]	; 0x24
   2b690:	ldr	r1, [sp, #20]
   2b694:	cmp	r1, r0
   2b698:	beq	2b6d4 <__assert_fail@plt+0x19f80>
   2b69c:	ldr	r0, [sp, #20]
   2b6a0:	add	r1, r0, #4
   2b6a4:	add	r0, sp, #32
   2b6a8:	bl	25388 <__assert_fail@plt+0x13c34>
   2b6ac:	str	r0, [fp, #-36]	; 0xffffffdc
   2b6b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b6b4:	cmp	r0, #0
   2b6b8:	beq	2b6d0 <__assert_fail@plt+0x19f7c>
   2b6bc:	ldr	r0, [sp, #40]	; 0x28
   2b6c0:	bl	15f68 <__assert_fail@plt+0x4814>
   2b6c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b6c8:	str	r0, [fp, #-4]
   2b6cc:	b	2b838 <__assert_fail@plt+0x1a0e4>
   2b6d0:	b	2b6d4 <__assert_fail@plt+0x19f80>
   2b6d4:	ldr	r1, [sp, #16]
   2b6d8:	add	r0, sp, #32
   2b6dc:	bl	25878 <__assert_fail@plt+0x14124>
   2b6e0:	and	r0, r0, #1
   2b6e4:	strb	r0, [fp, #-25]	; 0xffffffe7
   2b6e8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   2b6ec:	mvn	r1, #0
   2b6f0:	eor	r0, r0, r1
   2b6f4:	tst	r0, #1
   2b6f8:	beq	2b710 <__assert_fail@plt+0x19fbc>
   2b6fc:	ldr	r0, [sp, #40]	; 0x28
   2b700:	bl	15f68 <__assert_fail@plt+0x4814>
   2b704:	movw	r0, #12
   2b708:	str	r0, [fp, #-4]
   2b70c:	b	2b838 <__assert_fail@plt+0x1a0e4>
   2b710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b714:	sub	r0, fp, #36	; 0x24
   2b718:	add	r2, sp, #32
   2b71c:	bl	2ba34 <__assert_fail@plt+0x1a2e0>
   2b720:	ldr	r1, [fp, #-8]
   2b724:	ldr	r1, [r1, #100]	; 0x64
   2b728:	ldr	r2, [sp, #12]
   2b72c:	str	r0, [r1, r2, lsl #2]
   2b730:	ldr	r0, [fp, #-8]
   2b734:	ldr	r0, [r0, #100]	; 0x64
   2b738:	ldr	r1, [sp, #12]
   2b73c:	add	r0, r0, r1, lsl #2
   2b740:	ldr	r0, [r0]
   2b744:	movw	r1, #0
   2b748:	cmp	r0, r1
   2b74c:	movw	r0, #0
   2b750:	str	r0, [sp, #4]
   2b754:	bne	2b76c <__assert_fail@plt+0x1a018>
   2b758:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b75c:	cmp	r0, #0
   2b760:	movw	r0, #0
   2b764:	movne	r0, #1
   2b768:	str	r0, [sp, #4]
   2b76c:	ldr	r0, [sp, #4]
   2b770:	tst	r0, #1
   2b774:	beq	2b78c <__assert_fail@plt+0x1a038>
   2b778:	ldr	r0, [sp, #40]	; 0x28
   2b77c:	bl	15f68 <__assert_fail@plt+0x4814>
   2b780:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b784:	str	r0, [fp, #-4]
   2b788:	b	2b838 <__assert_fail@plt+0x1a0e4>
   2b78c:	b	2b790 <__assert_fail@plt+0x1a03c>
   2b790:	b	2b794 <__assert_fail@plt+0x1a040>
   2b794:	ldr	r0, [sp, #28]
   2b798:	cmp	r0, #0
   2b79c:	bne	2b7c4 <__assert_fail@plt+0x1a070>
   2b7a0:	ldr	r0, [fp, #-8]
   2b7a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b7a8:	ldr	r1, [r1]
   2b7ac:	ldr	r2, [sp, #24]
   2b7b0:	add	r1, r1, r2, lsl #3
   2b7b4:	ldr	r2, [fp, #-12]
   2b7b8:	bl	2c374 <__assert_fail@plt+0x1ac20>
   2b7bc:	tst	r0, #1
   2b7c0:	beq	2b814 <__assert_fail@plt+0x1a0c0>
   2b7c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b7c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b7cc:	ldr	r1, [r1, #12]
   2b7d0:	ldr	r2, [sp, #24]
   2b7d4:	add	r1, r1, r2, lsl #2
   2b7d8:	ldr	r1, [r1]
   2b7dc:	bl	25878 <__assert_fail@plt+0x14124>
   2b7e0:	and	r0, r0, #1
   2b7e4:	strb	r0, [fp, #-25]	; 0xffffffe7
   2b7e8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   2b7ec:	mvn	r1, #0
   2b7f0:	eor	r0, r0, r1
   2b7f4:	tst	r0, #1
   2b7f8:	beq	2b810 <__assert_fail@plt+0x1a0bc>
   2b7fc:	ldr	r0, [sp, #40]	; 0x28
   2b800:	bl	15f68 <__assert_fail@plt+0x4814>
   2b804:	movw	r0, #12
   2b808:	str	r0, [fp, #-4]
   2b80c:	b	2b838 <__assert_fail@plt+0x1a0e4>
   2b810:	b	2b814 <__assert_fail@plt+0x1a0c0>
   2b814:	b	2b818 <__assert_fail@plt+0x1a0c4>
   2b818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b81c:	add	r0, r0, #1
   2b820:	str	r0, [fp, #-32]	; 0xffffffe0
   2b824:	b	2b5ac <__assert_fail@plt+0x19e58>
   2b828:	ldr	r0, [sp, #40]	; 0x28
   2b82c:	bl	15f68 <__assert_fail@plt+0x4814>
   2b830:	movw	r0, #0
   2b834:	str	r0, [fp, #-4]
   2b838:	ldr	r0, [fp, #-4]
   2b83c:	mov	sp, fp
   2b840:	pop	{fp, pc}
   2b844:	push	{fp, lr}
   2b848:	mov	fp, sp
   2b84c:	sub	sp, sp, #40	; 0x28
   2b850:	ldr	ip, [fp, #8]
   2b854:	str	r0, [fp, #-8]
   2b858:	str	r1, [fp, #-12]
   2b85c:	str	r2, [fp, #-16]
   2b860:	str	r3, [sp, #20]
   2b864:	ldr	r0, [fp, #-16]
   2b868:	str	r0, [sp, #16]
   2b86c:	ldr	r0, [fp, #-12]
   2b870:	ldr	r1, [sp, #16]
   2b874:	bl	25d34 <__assert_fail@plt+0x145e0>
   2b878:	cmp	r0, #0
   2b87c:	movw	r0, #0
   2b880:	movne	r0, #1
   2b884:	mvn	r1, #0
   2b888:	eor	r0, r0, r1
   2b88c:	tst	r0, #1
   2b890:	beq	2ba20 <__assert_fail@plt+0x1a2cc>
   2b894:	ldr	r0, [fp, #-8]
   2b898:	ldr	r0, [r0]
   2b89c:	ldr	r1, [sp, #16]
   2b8a0:	add	r0, r0, r1, lsl #3
   2b8a4:	ldr	r0, [r0, #4]
   2b8a8:	and	r0, r0, #255	; 0xff
   2b8ac:	ldr	r1, [fp, #8]
   2b8b0:	cmp	r0, r1
   2b8b4:	bne	2b920 <__assert_fail@plt+0x1a1cc>
   2b8b8:	ldr	r0, [fp, #-8]
   2b8bc:	ldr	r0, [r0]
   2b8c0:	ldr	r1, [sp, #16]
   2b8c4:	add	r0, r0, r1, lsl #3
   2b8c8:	ldr	r0, [r0]
   2b8cc:	ldr	r1, [sp, #20]
   2b8d0:	cmp	r0, r1
   2b8d4:	bne	2b920 <__assert_fail@plt+0x1a1cc>
   2b8d8:	ldr	r0, [fp, #8]
   2b8dc:	cmp	r0, #9
   2b8e0:	bne	2b91c <__assert_fail@plt+0x1a1c8>
   2b8e4:	ldr	r0, [fp, #-12]
   2b8e8:	ldr	r1, [sp, #16]
   2b8ec:	bl	25878 <__assert_fail@plt+0x14124>
   2b8f0:	and	r0, r0, #1
   2b8f4:	strb	r0, [sp, #15]
   2b8f8:	ldrb	r0, [sp, #15]
   2b8fc:	mvn	r1, #0
   2b900:	eor	r0, r0, r1
   2b904:	tst	r0, #1
   2b908:	beq	2b918 <__assert_fail@plt+0x1a1c4>
   2b90c:	movw	r0, #12
   2b910:	str	r0, [fp, #-4]
   2b914:	b	2ba28 <__assert_fail@plt+0x1a2d4>
   2b918:	b	2b91c <__assert_fail@plt+0x1a1c8>
   2b91c:	b	2ba20 <__assert_fail@plt+0x1a2cc>
   2b920:	ldr	r0, [fp, #-12]
   2b924:	ldr	r1, [sp, #16]
   2b928:	bl	25878 <__assert_fail@plt+0x14124>
   2b92c:	and	r0, r0, #1
   2b930:	strb	r0, [sp, #15]
   2b934:	ldrb	r0, [sp, #15]
   2b938:	mvn	r1, #0
   2b93c:	eor	r0, r0, r1
   2b940:	tst	r0, #1
   2b944:	beq	2b954 <__assert_fail@plt+0x1a200>
   2b948:	movw	r0, #12
   2b94c:	str	r0, [fp, #-4]
   2b950:	b	2ba28 <__assert_fail@plt+0x1a2d4>
   2b954:	ldr	r0, [fp, #-8]
   2b958:	ldr	r0, [r0, #20]
   2b95c:	ldr	r1, [sp, #16]
   2b960:	movw	r2, #12
   2b964:	mul	r1, r1, r2
   2b968:	add	r0, r0, r1
   2b96c:	ldr	r0, [r0, #4]
   2b970:	cmp	r0, #0
   2b974:	bne	2b97c <__assert_fail@plt+0x1a228>
   2b978:	b	2ba20 <__assert_fail@plt+0x1a2cc>
   2b97c:	ldr	r0, [fp, #-8]
   2b980:	ldr	r0, [r0, #20]
   2b984:	ldr	r1, [sp, #16]
   2b988:	movw	r2, #12
   2b98c:	mul	r1, r1, r2
   2b990:	add	r0, r0, r1
   2b994:	ldr	r0, [r0, #4]
   2b998:	cmp	r0, #2
   2b99c:	bne	2b9f8 <__assert_fail@plt+0x1a2a4>
   2b9a0:	ldr	r0, [fp, #-8]
   2b9a4:	ldr	r1, [fp, #-12]
   2b9a8:	ldr	r2, [fp, #-8]
   2b9ac:	ldr	r2, [r2, #20]
   2b9b0:	ldr	r3, [sp, #16]
   2b9b4:	movw	ip, #12
   2b9b8:	mul	r3, r3, ip
   2b9bc:	add	r2, r2, r3
   2b9c0:	ldr	r2, [r2, #8]
   2b9c4:	ldr	r2, [r2, #4]
   2b9c8:	ldr	r3, [sp, #20]
   2b9cc:	ldr	ip, [fp, #8]
   2b9d0:	str	ip, [sp]
   2b9d4:	bl	2b844 <__assert_fail@plt+0x1a0f0>
   2b9d8:	str	r0, [sp, #8]
   2b9dc:	ldr	r0, [sp, #8]
   2b9e0:	cmp	r0, #0
   2b9e4:	beq	2b9f4 <__assert_fail@plt+0x1a2a0>
   2b9e8:	ldr	r0, [sp, #8]
   2b9ec:	str	r0, [fp, #-4]
   2b9f0:	b	2ba28 <__assert_fail@plt+0x1a2d4>
   2b9f4:	b	2b9f8 <__assert_fail@plt+0x1a2a4>
   2b9f8:	ldr	r0, [fp, #-8]
   2b9fc:	ldr	r0, [r0, #20]
   2ba00:	ldr	r1, [sp, #16]
   2ba04:	movw	r2, #12
   2ba08:	mul	r1, r1, r2
   2ba0c:	add	r0, r0, r1
   2ba10:	ldr	r0, [r0, #8]
   2ba14:	ldr	r0, [r0]
   2ba18:	str	r0, [sp, #16]
   2ba1c:	b	2b86c <__assert_fail@plt+0x1a118>
   2ba20:	movw	r0, #0
   2ba24:	str	r0, [fp, #-4]
   2ba28:	ldr	r0, [fp, #-4]
   2ba2c:	mov	sp, fp
   2ba30:	pop	{fp, pc}
   2ba34:	push	{fp, lr}
   2ba38:	mov	fp, sp
   2ba3c:	sub	sp, sp, #40	; 0x28
   2ba40:	str	r0, [fp, #-8]
   2ba44:	str	r1, [fp, #-12]
   2ba48:	str	r2, [fp, #-16]
   2ba4c:	ldr	r0, [fp, #-16]
   2ba50:	ldr	r0, [r0, #4]
   2ba54:	cmp	r0, #0
   2ba58:	bne	2ba70 <__assert_fail@plt+0x1a31c>
   2ba5c:	ldr	r0, [fp, #-8]
   2ba60:	movw	r1, #0
   2ba64:	str	r1, [r0]
   2ba68:	str	r1, [fp, #-4]
   2ba6c:	b	2bb64 <__assert_fail@plt+0x1a410>
   2ba70:	ldr	r0, [fp, #-16]
   2ba74:	movw	r1, #0
   2ba78:	bl	25f80 <__assert_fail@plt+0x1482c>
   2ba7c:	str	r0, [sp, #20]
   2ba80:	ldr	r0, [fp, #-12]
   2ba84:	ldr	r0, [r0, #32]
   2ba88:	ldr	r1, [sp, #20]
   2ba8c:	ldr	r2, [fp, #-12]
   2ba90:	ldr	r2, [r2, #68]	; 0x44
   2ba94:	and	r1, r1, r2
   2ba98:	movw	r2, #12
   2ba9c:	mul	r1, r1, r2
   2baa0:	add	r0, r0, r1
   2baa4:	str	r0, [sp, #12]
   2baa8:	movw	r0, #0
   2baac:	str	r0, [sp, #8]
   2bab0:	ldr	r0, [sp, #8]
   2bab4:	ldr	r1, [sp, #12]
   2bab8:	ldr	r1, [r1]
   2babc:	cmp	r0, r1
   2bac0:	bge	2bb2c <__assert_fail@plt+0x1a3d8>
   2bac4:	ldr	r0, [sp, #12]
   2bac8:	ldr	r0, [r0, #8]
   2bacc:	ldr	r1, [sp, #8]
   2bad0:	add	r0, r0, r1, lsl #2
   2bad4:	ldr	r0, [r0]
   2bad8:	str	r0, [sp, #4]
   2badc:	ldr	r0, [sp, #20]
   2bae0:	ldr	r1, [sp, #4]
   2bae4:	ldr	r1, [r1]
   2bae8:	cmp	r0, r1
   2baec:	beq	2baf4 <__assert_fail@plt+0x1a3a0>
   2baf0:	b	2bb1c <__assert_fail@plt+0x1a3c8>
   2baf4:	ldr	r0, [sp, #4]
   2baf8:	add	r0, r0, #4
   2bafc:	ldr	r1, [fp, #-16]
   2bb00:	bl	25ff8 <__assert_fail@plt+0x148a4>
   2bb04:	tst	r0, #1
   2bb08:	beq	2bb18 <__assert_fail@plt+0x1a3c4>
   2bb0c:	ldr	r0, [sp, #4]
   2bb10:	str	r0, [fp, #-4]
   2bb14:	b	2bb64 <__assert_fail@plt+0x1a410>
   2bb18:	b	2bb1c <__assert_fail@plt+0x1a3c8>
   2bb1c:	ldr	r0, [sp, #8]
   2bb20:	add	r0, r0, #1
   2bb24:	str	r0, [sp, #8]
   2bb28:	b	2bab0 <__assert_fail@plt+0x1a35c>
   2bb2c:	ldr	r0, [fp, #-12]
   2bb30:	ldr	r1, [fp, #-16]
   2bb34:	ldr	r2, [sp, #20]
   2bb38:	bl	2bb70 <__assert_fail@plt+0x1a41c>
   2bb3c:	str	r0, [sp, #16]
   2bb40:	ldr	r0, [sp, #16]
   2bb44:	movw	r1, #0
   2bb48:	cmp	r0, r1
   2bb4c:	bne	2bb5c <__assert_fail@plt+0x1a408>
   2bb50:	ldr	r0, [fp, #-8]
   2bb54:	movw	r1, #12
   2bb58:	str	r1, [r0]
   2bb5c:	ldr	r0, [sp, #16]
   2bb60:	str	r0, [fp, #-4]
   2bb64:	ldr	r0, [fp, #-4]
   2bb68:	mov	sp, fp
   2bb6c:	pop	{fp, pc}
   2bb70:	push	{fp, lr}
   2bb74:	mov	fp, sp
   2bb78:	sub	sp, sp, #40	; 0x28
   2bb7c:	str	r0, [fp, #-8]
   2bb80:	str	r1, [fp, #-12]
   2bb84:	str	r2, [fp, #-16]
   2bb88:	movw	r0, #56	; 0x38
   2bb8c:	movw	r1, #1
   2bb90:	bl	380d0 <__assert_fail@plt+0x2697c>
   2bb94:	str	r0, [sp, #12]
   2bb98:	ldr	r0, [sp, #12]
   2bb9c:	movw	r1, #0
   2bba0:	cmp	r0, r1
   2bba4:	bne	2bbb4 <__assert_fail@plt+0x1a460>
   2bba8:	movw	r0, #0
   2bbac:	str	r0, [fp, #-4]
   2bbb0:	b	2bd80 <__assert_fail@plt+0x1a62c>
   2bbb4:	ldr	r0, [sp, #12]
   2bbb8:	add	r0, r0, #4
   2bbbc:	ldr	r1, [fp, #-12]
   2bbc0:	bl	25c60 <__assert_fail@plt+0x1450c>
   2bbc4:	str	r0, [sp, #16]
   2bbc8:	ldr	r0, [sp, #16]
   2bbcc:	cmp	r0, #0
   2bbd0:	beq	2bbe8 <__assert_fail@plt+0x1a494>
   2bbd4:	ldr	r0, [sp, #12]
   2bbd8:	bl	15f68 <__assert_fail@plt+0x4814>
   2bbdc:	movw	r0, #0
   2bbe0:	str	r0, [fp, #-4]
   2bbe4:	b	2bd80 <__assert_fail@plt+0x1a62c>
   2bbe8:	ldr	r0, [sp, #12]
   2bbec:	add	r0, r0, #4
   2bbf0:	ldr	r1, [sp, #12]
   2bbf4:	str	r0, [r1, #40]	; 0x28
   2bbf8:	movw	r0, #0
   2bbfc:	str	r0, [sp, #20]
   2bc00:	ldr	r0, [sp, #20]
   2bc04:	ldr	r1, [fp, #-12]
   2bc08:	ldr	r1, [r1, #4]
   2bc0c:	cmp	r0, r1
   2bc10:	bge	2bd48 <__assert_fail@plt+0x1a5f4>
   2bc14:	ldr	r0, [fp, #-8]
   2bc18:	ldr	r0, [r0]
   2bc1c:	ldr	r1, [fp, #-12]
   2bc20:	ldr	r1, [r1, #8]
   2bc24:	ldr	r2, [sp, #20]
   2bc28:	ldr	r1, [r1, r2, lsl #2]
   2bc2c:	add	r0, r0, r1, lsl #3
   2bc30:	str	r0, [sp, #8]
   2bc34:	ldr	r0, [sp, #8]
   2bc38:	ldr	r0, [r0, #4]
   2bc3c:	and	r0, r0, #255	; 0xff
   2bc40:	str	r0, [sp, #4]
   2bc44:	ldr	r0, [sp, #4]
   2bc48:	cmp	r0, #1
   2bc4c:	bne	2bc70 <__assert_fail@plt+0x1a51c>
   2bc50:	ldr	r0, [sp, #8]
   2bc54:	ldr	r0, [r0, #4]
   2bc58:	lsr	r0, r0, #8
   2bc5c:	movw	r1, #1023	; 0x3ff
   2bc60:	and	r0, r0, r1
   2bc64:	cmp	r0, #0
   2bc68:	bne	2bc70 <__assert_fail@plt+0x1a51c>
   2bc6c:	b	2bd38 <__assert_fail@plt+0x1a5e4>
   2bc70:	ldr	r0, [sp, #8]
   2bc74:	ldr	r0, [r0, #4]
   2bc78:	ldr	r1, [sp, #12]
   2bc7c:	ldrb	r2, [r1, #52]	; 0x34
   2bc80:	lsr	r3, r2, #5
   2bc84:	orr	r0, r3, r0, lsr #20
   2bc88:	and	r0, r0, #1
   2bc8c:	lsl	r0, r0, #5
   2bc90:	bic	r2, r2, #32
   2bc94:	orr	r0, r2, r0
   2bc98:	strb	r0, [r1, #52]	; 0x34
   2bc9c:	ldr	r0, [sp, #4]
   2bca0:	cmp	r0, #2
   2bca4:	bne	2bcc4 <__assert_fail@plt+0x1a570>
   2bca8:	ldr	r0, [sp, #12]
   2bcac:	ldrb	r1, [r0, #52]	; 0x34
   2bcb0:	bic	r1, r1, #16
   2bcb4:	movw	r2, #16
   2bcb8:	orr	r1, r1, r2
   2bcbc:	strb	r1, [r0, #52]	; 0x34
   2bcc0:	b	2bd34 <__assert_fail@plt+0x1a5e0>
   2bcc4:	ldr	r0, [sp, #4]
   2bcc8:	cmp	r0, #4
   2bccc:	bne	2bcec <__assert_fail@plt+0x1a598>
   2bcd0:	ldr	r0, [sp, #12]
   2bcd4:	ldrb	r1, [r0, #52]	; 0x34
   2bcd8:	bic	r1, r1, #64	; 0x40
   2bcdc:	movw	r2, #64	; 0x40
   2bce0:	orr	r1, r1, r2
   2bce4:	strb	r1, [r0, #52]	; 0x34
   2bce8:	b	2bd30 <__assert_fail@plt+0x1a5dc>
   2bcec:	ldr	r0, [sp, #4]
   2bcf0:	cmp	r0, #12
   2bcf4:	beq	2bd14 <__assert_fail@plt+0x1a5c0>
   2bcf8:	ldr	r0, [sp, #8]
   2bcfc:	ldr	r0, [r0, #4]
   2bd00:	lsr	r0, r0, #8
   2bd04:	movw	r1, #1023	; 0x3ff
   2bd08:	and	r0, r0, r1
   2bd0c:	cmp	r0, #0
   2bd10:	beq	2bd2c <__assert_fail@plt+0x1a5d8>
   2bd14:	ldr	r0, [sp, #12]
   2bd18:	ldrb	r1, [r0, #52]	; 0x34
   2bd1c:	and	r1, r1, #127	; 0x7f
   2bd20:	movw	r2, #128	; 0x80
   2bd24:	orr	r1, r1, r2
   2bd28:	strb	r1, [r0, #52]	; 0x34
   2bd2c:	b	2bd30 <__assert_fail@plt+0x1a5dc>
   2bd30:	b	2bd34 <__assert_fail@plt+0x1a5e0>
   2bd34:	b	2bd38 <__assert_fail@plt+0x1a5e4>
   2bd38:	ldr	r0, [sp, #20]
   2bd3c:	add	r0, r0, #1
   2bd40:	str	r0, [sp, #20]
   2bd44:	b	2bc00 <__assert_fail@plt+0x1a4ac>
   2bd48:	ldr	r0, [fp, #-8]
   2bd4c:	ldr	r1, [sp, #12]
   2bd50:	ldr	r2, [fp, #-16]
   2bd54:	bl	264a8 <__assert_fail@plt+0x14d54>
   2bd58:	str	r0, [sp, #16]
   2bd5c:	ldr	r0, [sp, #16]
   2bd60:	cmp	r0, #0
   2bd64:	beq	2bd78 <__assert_fail@plt+0x1a624>
   2bd68:	ldr	r0, [sp, #12]
   2bd6c:	bl	1b708 <__assert_fail@plt+0x9fb4>
   2bd70:	movw	r0, #0
   2bd74:	str	r0, [sp, #12]
   2bd78:	ldr	r0, [sp, #12]
   2bd7c:	str	r0, [fp, #-4]
   2bd80:	ldr	r0, [fp, #-4]
   2bd84:	mov	sp, fp
   2bd88:	pop	{fp, pc}
   2bd8c:	push	{fp, lr}
   2bd90:	mov	fp, sp
   2bd94:	sub	sp, sp, #72	; 0x48
   2bd98:	str	r0, [fp, #-8]
   2bd9c:	str	r1, [fp, #-12]
   2bda0:	str	r2, [fp, #-16]
   2bda4:	str	r3, [fp, #-20]	; 0xffffffec
   2bda8:	ldr	r0, [fp, #-8]
   2bdac:	ldr	r0, [r0]
   2bdb0:	ldr	r1, [fp, #-12]
   2bdb4:	add	r0, r0, r1, lsl #3
   2bdb8:	str	r0, [fp, #-24]	; 0xffffffe8
   2bdbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bdc0:	ldr	r0, [r0, #4]
   2bdc4:	and	r0, r0, #255	; 0xff
   2bdc8:	cmp	r0, #7
   2bdcc:	bne	2c03c <__assert_fail@plt+0x1a8e8>
   2bdd0:	ldr	r0, [fp, #-16]
   2bdd4:	ldr	r0, [r0, #4]
   2bdd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bddc:	add	r0, r0, r1
   2bde0:	ldrb	r0, [r0]
   2bde4:	strb	r0, [sp, #35]	; 0x23
   2bde8:	ldrb	r0, [sp, #35]	; 0x23
   2bdec:	cmp	r0, #194	; 0xc2
   2bdf0:	bge	2be00 <__assert_fail@plt+0x1a6ac>
   2bdf4:	movw	r0, #0
   2bdf8:	str	r0, [fp, #-4]
   2bdfc:	b	2c368 <__assert_fail@plt+0x1ac14>
   2be00:	ldr	r0, [fp, #-20]	; 0xffffffec
   2be04:	add	r0, r0, #2
   2be08:	ldr	r1, [fp, #-16]
   2be0c:	ldr	r1, [r1, #48]	; 0x30
   2be10:	cmp	r0, r1
   2be14:	ble	2be24 <__assert_fail@plt+0x1a6d0>
   2be18:	movw	r0, #0
   2be1c:	str	r0, [fp, #-4]
   2be20:	b	2c368 <__assert_fail@plt+0x1ac14>
   2be24:	ldr	r0, [fp, #-16]
   2be28:	ldr	r0, [r0, #4]
   2be2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2be30:	add	r1, r1, #1
   2be34:	add	r0, r0, r1
   2be38:	ldrb	r0, [r0]
   2be3c:	strb	r0, [sp, #34]	; 0x22
   2be40:	ldrb	r0, [sp, #35]	; 0x23
   2be44:	cmp	r0, #224	; 0xe0
   2be48:	bge	2be8c <__assert_fail@plt+0x1a738>
   2be4c:	ldrb	r0, [sp, #34]	; 0x22
   2be50:	cmp	r0, #128	; 0x80
   2be54:	movw	r0, #1
   2be58:	str	r0, [sp, #12]
   2be5c:	blt	2be74 <__assert_fail@plt+0x1a720>
   2be60:	ldrb	r0, [sp, #34]	; 0x22
   2be64:	cmp	r0, #191	; 0xbf
   2be68:	movw	r0, #0
   2be6c:	movgt	r0, #1
   2be70:	str	r0, [sp, #12]
   2be74:	ldr	r0, [sp, #12]
   2be78:	tst	r0, #1
   2be7c:	movw	r0, #0
   2be80:	moveq	r0, #2
   2be84:	str	r0, [fp, #-4]
   2be88:	b	2c368 <__assert_fail@plt+0x1ac14>
   2be8c:	ldrb	r0, [sp, #35]	; 0x23
   2be90:	cmp	r0, #240	; 0xf0
   2be94:	bge	2bec8 <__assert_fail@plt+0x1a774>
   2be98:	movw	r0, #3
   2be9c:	str	r0, [fp, #-28]	; 0xffffffe4
   2bea0:	ldrb	r0, [sp, #35]	; 0x23
   2bea4:	cmp	r0, #224	; 0xe0
   2bea8:	bne	2bec4 <__assert_fail@plt+0x1a770>
   2beac:	ldrb	r0, [sp, #34]	; 0x22
   2beb0:	cmp	r0, #160	; 0xa0
   2beb4:	bge	2bec4 <__assert_fail@plt+0x1a770>
   2beb8:	movw	r0, #0
   2bebc:	str	r0, [fp, #-4]
   2bec0:	b	2c368 <__assert_fail@plt+0x1ac14>
   2bec4:	b	2bf94 <__assert_fail@plt+0x1a840>
   2bec8:	ldrb	r0, [sp, #35]	; 0x23
   2becc:	cmp	r0, #248	; 0xf8
   2bed0:	bge	2bf04 <__assert_fail@plt+0x1a7b0>
   2bed4:	movw	r0, #4
   2bed8:	str	r0, [fp, #-28]	; 0xffffffe4
   2bedc:	ldrb	r0, [sp, #35]	; 0x23
   2bee0:	cmp	r0, #240	; 0xf0
   2bee4:	bne	2bf00 <__assert_fail@plt+0x1a7ac>
   2bee8:	ldrb	r0, [sp, #34]	; 0x22
   2beec:	cmp	r0, #144	; 0x90
   2bef0:	bge	2bf00 <__assert_fail@plt+0x1a7ac>
   2bef4:	movw	r0, #0
   2bef8:	str	r0, [fp, #-4]
   2befc:	b	2c368 <__assert_fail@plt+0x1ac14>
   2bf00:	b	2bf90 <__assert_fail@plt+0x1a83c>
   2bf04:	ldrb	r0, [sp, #35]	; 0x23
   2bf08:	cmp	r0, #252	; 0xfc
   2bf0c:	bge	2bf40 <__assert_fail@plt+0x1a7ec>
   2bf10:	movw	r0, #5
   2bf14:	str	r0, [fp, #-28]	; 0xffffffe4
   2bf18:	ldrb	r0, [sp, #35]	; 0x23
   2bf1c:	cmp	r0, #248	; 0xf8
   2bf20:	bne	2bf3c <__assert_fail@plt+0x1a7e8>
   2bf24:	ldrb	r0, [sp, #34]	; 0x22
   2bf28:	cmp	r0, #136	; 0x88
   2bf2c:	bge	2bf3c <__assert_fail@plt+0x1a7e8>
   2bf30:	movw	r0, #0
   2bf34:	str	r0, [fp, #-4]
   2bf38:	b	2c368 <__assert_fail@plt+0x1ac14>
   2bf3c:	b	2bf8c <__assert_fail@plt+0x1a838>
   2bf40:	ldrb	r0, [sp, #35]	; 0x23
   2bf44:	cmp	r0, #254	; 0xfe
   2bf48:	bge	2bf7c <__assert_fail@plt+0x1a828>
   2bf4c:	movw	r0, #6
   2bf50:	str	r0, [fp, #-28]	; 0xffffffe4
   2bf54:	ldrb	r0, [sp, #35]	; 0x23
   2bf58:	cmp	r0, #252	; 0xfc
   2bf5c:	bne	2bf78 <__assert_fail@plt+0x1a824>
   2bf60:	ldrb	r0, [sp, #34]	; 0x22
   2bf64:	cmp	r0, #132	; 0x84
   2bf68:	bge	2bf78 <__assert_fail@plt+0x1a824>
   2bf6c:	movw	r0, #0
   2bf70:	str	r0, [fp, #-4]
   2bf74:	b	2c368 <__assert_fail@plt+0x1ac14>
   2bf78:	b	2bf88 <__assert_fail@plt+0x1a834>
   2bf7c:	movw	r0, #0
   2bf80:	str	r0, [fp, #-4]
   2bf84:	b	2c368 <__assert_fail@plt+0x1ac14>
   2bf88:	b	2bf8c <__assert_fail@plt+0x1a838>
   2bf8c:	b	2bf90 <__assert_fail@plt+0x1a83c>
   2bf90:	b	2bf94 <__assert_fail@plt+0x1a840>
   2bf94:	b	2bf98 <__assert_fail@plt+0x1a844>
   2bf98:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bf9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bfa0:	add	r0, r0, r1
   2bfa4:	ldr	r1, [fp, #-16]
   2bfa8:	ldr	r1, [r1, #48]	; 0x30
   2bfac:	cmp	r0, r1
   2bfb0:	ble	2bfc0 <__assert_fail@plt+0x1a86c>
   2bfb4:	movw	r0, #0
   2bfb8:	str	r0, [fp, #-4]
   2bfbc:	b	2c368 <__assert_fail@plt+0x1ac14>
   2bfc0:	movw	r0, #1
   2bfc4:	str	r0, [sp, #36]	; 0x24
   2bfc8:	ldr	r0, [sp, #36]	; 0x24
   2bfcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bfd0:	cmp	r0, r1
   2bfd4:	bge	2c030 <__assert_fail@plt+0x1a8dc>
   2bfd8:	ldr	r0, [fp, #-16]
   2bfdc:	ldr	r0, [r0, #4]
   2bfe0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bfe4:	ldr	r2, [sp, #36]	; 0x24
   2bfe8:	add	r1, r1, r2
   2bfec:	add	r0, r0, r1
   2bff0:	ldrb	r0, [r0]
   2bff4:	strb	r0, [sp, #34]	; 0x22
   2bff8:	ldrb	r0, [sp, #34]	; 0x22
   2bffc:	cmp	r0, #128	; 0x80
   2c000:	blt	2c010 <__assert_fail@plt+0x1a8bc>
   2c004:	ldrb	r0, [sp, #34]	; 0x22
   2c008:	cmp	r0, #191	; 0xbf
   2c00c:	ble	2c01c <__assert_fail@plt+0x1a8c8>
   2c010:	movw	r0, #0
   2c014:	str	r0, [fp, #-4]
   2c018:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c01c:	b	2c020 <__assert_fail@plt+0x1a8cc>
   2c020:	ldr	r0, [sp, #36]	; 0x24
   2c024:	add	r0, r0, #1
   2c028:	str	r0, [sp, #36]	; 0x24
   2c02c:	b	2bfc8 <__assert_fail@plt+0x1a874>
   2c030:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c034:	str	r0, [fp, #-4]
   2c038:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c03c:	ldr	r0, [fp, #-16]
   2c040:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c044:	bl	2311c <__assert_fail@plt+0x119c8>
   2c048:	str	r0, [fp, #-28]	; 0xffffffe4
   2c04c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c050:	ldr	r0, [r0, #4]
   2c054:	and	r0, r0, #255	; 0xff
   2c058:	cmp	r0, #5
   2c05c:	bne	2c0f0 <__assert_fail@plt+0x1a99c>
   2c060:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c064:	cmp	r0, #1
   2c068:	bgt	2c078 <__assert_fail@plt+0x1a924>
   2c06c:	movw	r0, #0
   2c070:	str	r0, [fp, #-4]
   2c074:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c078:	ldr	r0, [fp, #-8]
   2c07c:	ldr	r0, [r0, #128]	; 0x80
   2c080:	and	r0, r0, #64	; 0x40
   2c084:	cmp	r0, #0
   2c088:	bne	2c0a8 <__assert_fail@plt+0x1a954>
   2c08c:	ldr	r0, [fp, #-16]
   2c090:	ldr	r0, [r0, #4]
   2c094:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c098:	add	r0, r0, r1
   2c09c:	ldrb	r0, [r0]
   2c0a0:	cmp	r0, #10
   2c0a4:	beq	2c0d8 <__assert_fail@plt+0x1a984>
   2c0a8:	ldr	r0, [fp, #-8]
   2c0ac:	ldr	r0, [r0, #128]	; 0x80
   2c0b0:	and	r0, r0, #128	; 0x80
   2c0b4:	cmp	r0, #0
   2c0b8:	beq	2c0e4 <__assert_fail@plt+0x1a990>
   2c0bc:	ldr	r0, [fp, #-16]
   2c0c0:	ldr	r0, [r0, #4]
   2c0c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0c8:	add	r0, r0, r1
   2c0cc:	ldrb	r0, [r0]
   2c0d0:	cmp	r0, #0
   2c0d4:	bne	2c0e4 <__assert_fail@plt+0x1a990>
   2c0d8:	movw	r0, #0
   2c0dc:	str	r0, [fp, #-4]
   2c0e0:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c0e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c0e8:	str	r0, [fp, #-4]
   2c0ec:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c0f0:	ldr	r0, [fp, #-16]
   2c0f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0f8:	bl	2c5e8 <__assert_fail@plt+0x1ae94>
   2c0fc:	str	r0, [fp, #-32]	; 0xffffffe0
   2c100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c104:	cmp	r0, #1
   2c108:	bgt	2c118 <__assert_fail@plt+0x1a9c4>
   2c10c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c110:	cmp	r0, #1
   2c114:	ble	2c124 <__assert_fail@plt+0x1a9d0>
   2c118:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c11c:	cmp	r0, #0
   2c120:	bne	2c130 <__assert_fail@plt+0x1a9dc>
   2c124:	movw	r0, #0
   2c128:	str	r0, [fp, #-4]
   2c12c:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c134:	ldr	r0, [r0, #4]
   2c138:	and	r0, r0, #255	; 0xff
   2c13c:	cmp	r0, #6
   2c140:	bne	2c360 <__assert_fail@plt+0x1ac0c>
   2c144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c148:	ldr	r0, [r0]
   2c14c:	str	r0, [sp, #28]
   2c150:	movw	r0, #0
   2c154:	str	r0, [sp, #24]
   2c158:	ldr	r0, [sp, #28]
   2c15c:	ldr	r0, [r0, #32]
   2c160:	cmp	r0, #0
   2c164:	bne	2c188 <__assert_fail@plt+0x1aa34>
   2c168:	ldr	r0, [sp, #28]
   2c16c:	ldr	r0, [r0, #36]	; 0x24
   2c170:	cmp	r0, #0
   2c174:	bne	2c188 <__assert_fail@plt+0x1aa34>
   2c178:	ldr	r0, [sp, #28]
   2c17c:	ldr	r0, [r0, #20]
   2c180:	cmp	r0, #0
   2c184:	beq	2c19c <__assert_fail@plt+0x1aa48>
   2c188:	ldr	r0, [fp, #-16]
   2c18c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c190:	bl	1f268 <__assert_fail@plt+0xdb14>
   2c194:	str	r0, [sp, #8]
   2c198:	b	2c1a8 <__assert_fail@plt+0x1aa54>
   2c19c:	movw	r0, #0
   2c1a0:	str	r0, [sp, #8]
   2c1a4:	b	2c1a8 <__assert_fail@plt+0x1aa54>
   2c1a8:	ldr	r0, [sp, #8]
   2c1ac:	str	r0, [sp, #20]
   2c1b0:	movw	r0, #0
   2c1b4:	str	r0, [sp, #36]	; 0x24
   2c1b8:	ldr	r0, [sp, #36]	; 0x24
   2c1bc:	ldr	r1, [sp, #28]
   2c1c0:	ldr	r1, [r1, #20]
   2c1c4:	cmp	r0, r1
   2c1c8:	bge	2c20c <__assert_fail@plt+0x1aab8>
   2c1cc:	ldr	r0, [sp, #20]
   2c1d0:	ldr	r1, [sp, #28]
   2c1d4:	ldr	r1, [r1]
   2c1d8:	ldr	r2, [sp, #36]	; 0x24
   2c1dc:	add	r1, r1, r2, lsl #2
   2c1e0:	ldr	r1, [r1]
   2c1e4:	cmp	r0, r1
   2c1e8:	bne	2c1f8 <__assert_fail@plt+0x1aaa4>
   2c1ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c1f0:	str	r0, [sp, #24]
   2c1f4:	b	2c2f4 <__assert_fail@plt+0x1aba0>
   2c1f8:	b	2c1fc <__assert_fail@plt+0x1aaa8>
   2c1fc:	ldr	r0, [sp, #36]	; 0x24
   2c200:	add	r0, r0, #1
   2c204:	str	r0, [sp, #36]	; 0x24
   2c208:	b	2c1b8 <__assert_fail@plt+0x1aa64>
   2c20c:	movw	r0, #0
   2c210:	str	r0, [sp, #36]	; 0x24
   2c214:	ldr	r0, [sp, #36]	; 0x24
   2c218:	ldr	r1, [sp, #28]
   2c21c:	ldr	r1, [r1, #36]	; 0x24
   2c220:	cmp	r0, r1
   2c224:	bge	2c274 <__assert_fail@plt+0x1ab20>
   2c228:	ldr	r0, [sp, #28]
   2c22c:	ldr	r0, [r0, #12]
   2c230:	ldr	r1, [sp, #36]	; 0x24
   2c234:	add	r0, r0, r1, lsl #2
   2c238:	ldr	r0, [r0]
   2c23c:	str	r0, [sp, #16]
   2c240:	ldr	r0, [sp, #20]
   2c244:	ldr	r1, [sp, #16]
   2c248:	bl	113f4 <iswctype@plt>
   2c24c:	cmp	r0, #0
   2c250:	beq	2c260 <__assert_fail@plt+0x1ab0c>
   2c254:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c258:	str	r0, [sp, #24]
   2c25c:	b	2c2f4 <__assert_fail@plt+0x1aba0>
   2c260:	b	2c264 <__assert_fail@plt+0x1ab10>
   2c264:	ldr	r0, [sp, #36]	; 0x24
   2c268:	add	r0, r0, #1
   2c26c:	str	r0, [sp, #36]	; 0x24
   2c270:	b	2c214 <__assert_fail@plt+0x1aac0>
   2c274:	movw	r0, #0
   2c278:	str	r0, [sp, #36]	; 0x24
   2c27c:	ldr	r0, [sp, #36]	; 0x24
   2c280:	ldr	r1, [sp, #28]
   2c284:	ldr	r1, [r1, #32]
   2c288:	cmp	r0, r1
   2c28c:	bge	2c2f0 <__assert_fail@plt+0x1ab9c>
   2c290:	ldr	r0, [sp, #28]
   2c294:	ldr	r0, [r0, #4]
   2c298:	ldr	r1, [sp, #36]	; 0x24
   2c29c:	add	r0, r0, r1, lsl #2
   2c2a0:	ldr	r0, [r0]
   2c2a4:	ldr	r1, [sp, #20]
   2c2a8:	cmp	r0, r1
   2c2ac:	bhi	2c2dc <__assert_fail@plt+0x1ab88>
   2c2b0:	ldr	r0, [sp, #20]
   2c2b4:	ldr	r1, [sp, #28]
   2c2b8:	ldr	r1, [r1, #8]
   2c2bc:	ldr	r2, [sp, #36]	; 0x24
   2c2c0:	add	r1, r1, r2, lsl #2
   2c2c4:	ldr	r1, [r1]
   2c2c8:	cmp	r0, r1
   2c2cc:	bhi	2c2dc <__assert_fail@plt+0x1ab88>
   2c2d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c2d4:	str	r0, [sp, #24]
   2c2d8:	b	2c2f4 <__assert_fail@plt+0x1aba0>
   2c2dc:	b	2c2e0 <__assert_fail@plt+0x1ab8c>
   2c2e0:	ldr	r0, [sp, #36]	; 0x24
   2c2e4:	add	r0, r0, #1
   2c2e8:	str	r0, [sp, #36]	; 0x24
   2c2ec:	b	2c27c <__assert_fail@plt+0x1ab28>
   2c2f0:	b	2c2f4 <__assert_fail@plt+0x1aba0>
   2c2f4:	ldr	r0, [sp, #28]
   2c2f8:	ldrb	r0, [r0, #16]
   2c2fc:	and	r0, r0, #1
   2c300:	and	r0, r0, #255	; 0xff
   2c304:	cmp	r0, #0
   2c308:	bne	2c318 <__assert_fail@plt+0x1abc4>
   2c30c:	ldr	r0, [sp, #24]
   2c310:	str	r0, [fp, #-4]
   2c314:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c318:	ldr	r0, [sp, #24]
   2c31c:	cmp	r0, #0
   2c320:	ble	2c330 <__assert_fail@plt+0x1abdc>
   2c324:	movw	r0, #0
   2c328:	str	r0, [fp, #-4]
   2c32c:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c330:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c338:	cmp	r0, r1
   2c33c:	ble	2c34c <__assert_fail@plt+0x1abf8>
   2c340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c344:	str	r0, [sp, #4]
   2c348:	b	2c354 <__assert_fail@plt+0x1ac00>
   2c34c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c350:	str	r0, [sp, #4]
   2c354:	ldr	r0, [sp, #4]
   2c358:	str	r0, [fp, #-4]
   2c35c:	b	2c368 <__assert_fail@plt+0x1ac14>
   2c360:	movw	r0, #0
   2c364:	str	r0, [fp, #-4]
   2c368:	ldr	r0, [fp, #-4]
   2c36c:	mov	sp, fp
   2c370:	pop	{fp, pc}
   2c374:	push	{fp, lr}
   2c378:	mov	fp, sp
   2c37c:	sub	sp, sp, #32
   2c380:	str	r0, [fp, #-8]
   2c384:	str	r1, [fp, #-12]
   2c388:	str	r2, [sp, #16]
   2c38c:	ldr	r0, [fp, #-8]
   2c390:	ldr	r0, [r0, #4]
   2c394:	ldr	r1, [sp, #16]
   2c398:	ldrb	r0, [r0, r1]
   2c39c:	strb	r0, [sp, #15]
   2c3a0:	ldr	r0, [fp, #-12]
   2c3a4:	ldrb	r0, [r0, #4]
   2c3a8:	sub	r0, r0, #1
   2c3ac:	cmp	r0, #6
   2c3b0:	str	r0, [sp, #4]
   2c3b4:	bhi	2c4b4 <__assert_fail@plt+0x1ad60>
   2c3b8:	add	r0, pc, #8
   2c3bc:	ldr	r1, [sp, #4]
   2c3c0:	ldr	r0, [r0, r1, lsl #2]
   2c3c4:	mov	pc, r0
   2c3c8:	andeq	ip, r2, r4, ror #7
   2c3cc:			; <UNDEFINED> instruction: 0x0002c4b4
   2c3d0:	andeq	ip, r2, ip, lsl #8
   2c3d4:			; <UNDEFINED> instruction: 0x0002c4b4
   2c3d8:	andeq	ip, r2, r8, asr r4
   2c3dc:			; <UNDEFINED> instruction: 0x0002c4b4
   2c3e0:	andeq	ip, r2, r8, lsr r4
   2c3e4:	ldr	r0, [fp, #-12]
   2c3e8:	ldrb	r0, [r0]
   2c3ec:	ldrb	r1, [sp, #15]
   2c3f0:	cmp	r0, r1
   2c3f4:	beq	2c408 <__assert_fail@plt+0x1acb4>
   2c3f8:	movw	r0, #0
   2c3fc:	and	r0, r0, #1
   2c400:	strb	r0, [fp, #-1]
   2c404:	b	2c5d8 <__assert_fail@plt+0x1ae84>
   2c408:	b	2c4c4 <__assert_fail@plt+0x1ad70>
   2c40c:	ldr	r0, [fp, #-12]
   2c410:	ldr	r0, [r0]
   2c414:	ldrb	r1, [sp, #15]
   2c418:	bl	289d0 <__assert_fail@plt+0x1727c>
   2c41c:	tst	r0, #1
   2c420:	bne	2c434 <__assert_fail@plt+0x1ace0>
   2c424:	movw	r0, #0
   2c428:	and	r0, r0, #1
   2c42c:	strb	r0, [fp, #-1]
   2c430:	b	2c5d8 <__assert_fail@plt+0x1ae84>
   2c434:	b	2c4c4 <__assert_fail@plt+0x1ad70>
   2c438:	ldrb	r0, [sp, #15]
   2c43c:	cmp	r0, #128	; 0x80
   2c440:	blt	2c454 <__assert_fail@plt+0x1ad00>
   2c444:	movw	r0, #0
   2c448:	and	r0, r0, #1
   2c44c:	strb	r0, [fp, #-1]
   2c450:	b	2c5d8 <__assert_fail@plt+0x1ae84>
   2c454:	b	2c458 <__assert_fail@plt+0x1ad04>
   2c458:	ldrb	r0, [sp, #15]
   2c45c:	cmp	r0, #10
   2c460:	bne	2c47c <__assert_fail@plt+0x1ad28>
   2c464:	ldr	r0, [fp, #-8]
   2c468:	ldr	r0, [r0, #84]	; 0x54
   2c46c:	ldr	r0, [r0, #128]	; 0x80
   2c470:	and	r0, r0, #64	; 0x40
   2c474:	cmp	r0, #0
   2c478:	beq	2c4a0 <__assert_fail@plt+0x1ad4c>
   2c47c:	ldrb	r0, [sp, #15]
   2c480:	cmp	r0, #0
   2c484:	bne	2c4b0 <__assert_fail@plt+0x1ad5c>
   2c488:	ldr	r0, [fp, #-8]
   2c48c:	ldr	r0, [r0, #84]	; 0x54
   2c490:	ldr	r0, [r0, #128]	; 0x80
   2c494:	and	r0, r0, #128	; 0x80
   2c498:	cmp	r0, #0
   2c49c:	beq	2c4b0 <__assert_fail@plt+0x1ad5c>
   2c4a0:	movw	r0, #0
   2c4a4:	and	r0, r0, #1
   2c4a8:	strb	r0, [fp, #-1]
   2c4ac:	b	2c5d8 <__assert_fail@plt+0x1ae84>
   2c4b0:	b	2c4c4 <__assert_fail@plt+0x1ad70>
   2c4b4:	movw	r0, #0
   2c4b8:	and	r0, r0, #1
   2c4bc:	strb	r0, [fp, #-1]
   2c4c0:	b	2c5d8 <__assert_fail@plt+0x1ae84>
   2c4c4:	ldr	r0, [fp, #-12]
   2c4c8:	ldr	r0, [r0, #4]
   2c4cc:	lsr	r0, r0, #8
   2c4d0:	movw	r1, #1023	; 0x3ff
   2c4d4:	and	r0, r0, r1
   2c4d8:	cmp	r0, #0
   2c4dc:	beq	2c5cc <__assert_fail@plt+0x1ae78>
   2c4e0:	ldr	r0, [fp, #-8]
   2c4e4:	ldr	r1, [sp, #16]
   2c4e8:	ldr	r2, [fp, #-8]
   2c4ec:	ldr	r2, [r2, #88]	; 0x58
   2c4f0:	bl	28660 <__assert_fail@plt+0x16f0c>
   2c4f4:	str	r0, [sp, #8]
   2c4f8:	ldr	r0, [fp, #-12]
   2c4fc:	ldr	r0, [r0, #4]
   2c500:	lsr	r0, r0, #8
   2c504:	movw	r1, #1023	; 0x3ff
   2c508:	and	r0, r0, r1
   2c50c:	and	r0, r0, #4
   2c510:	cmp	r0, #0
   2c514:	beq	2c528 <__assert_fail@plt+0x1add4>
   2c518:	ldr	r0, [sp, #8]
   2c51c:	and	r0, r0, #1
   2c520:	cmp	r0, #0
   2c524:	beq	2c5b8 <__assert_fail@plt+0x1ae64>
   2c528:	ldr	r0, [fp, #-12]
   2c52c:	ldr	r0, [r0, #4]
   2c530:	lsr	r0, r0, #8
   2c534:	movw	r1, #1023	; 0x3ff
   2c538:	and	r0, r0, r1
   2c53c:	and	r0, r0, #8
   2c540:	cmp	r0, #0
   2c544:	beq	2c558 <__assert_fail@plt+0x1ae04>
   2c548:	ldr	r0, [sp, #8]
   2c54c:	and	r0, r0, #1
   2c550:	cmp	r0, #0
   2c554:	bne	2c5b8 <__assert_fail@plt+0x1ae64>
   2c558:	ldr	r0, [fp, #-12]
   2c55c:	ldr	r0, [r0, #4]
   2c560:	lsr	r0, r0, #8
   2c564:	movw	r1, #1023	; 0x3ff
   2c568:	and	r0, r0, r1
   2c56c:	and	r0, r0, #32
   2c570:	cmp	r0, #0
   2c574:	beq	2c588 <__assert_fail@plt+0x1ae34>
   2c578:	ldr	r0, [sp, #8]
   2c57c:	and	r0, r0, #2
   2c580:	cmp	r0, #0
   2c584:	beq	2c5b8 <__assert_fail@plt+0x1ae64>
   2c588:	ldr	r0, [fp, #-12]
   2c58c:	ldr	r0, [r0, #4]
   2c590:	lsr	r0, r0, #8
   2c594:	movw	r1, #1023	; 0x3ff
   2c598:	and	r0, r0, r1
   2c59c:	and	r0, r0, #128	; 0x80
   2c5a0:	cmp	r0, #0
   2c5a4:	beq	2c5c8 <__assert_fail@plt+0x1ae74>
   2c5a8:	ldr	r0, [sp, #8]
   2c5ac:	and	r0, r0, #8
   2c5b0:	cmp	r0, #0
   2c5b4:	bne	2c5c8 <__assert_fail@plt+0x1ae74>
   2c5b8:	movw	r0, #0
   2c5bc:	and	r0, r0, #1
   2c5c0:	strb	r0, [fp, #-1]
   2c5c4:	b	2c5d8 <__assert_fail@plt+0x1ae84>
   2c5c8:	b	2c5cc <__assert_fail@plt+0x1ae78>
   2c5cc:	movw	r0, #1
   2c5d0:	and	r0, r0, #1
   2c5d4:	strb	r0, [fp, #-1]
   2c5d8:	ldrb	r0, [fp, #-1]
   2c5dc:	and	r0, r0, #1
   2c5e0:	mov	sp, fp
   2c5e4:	pop	{fp, pc}
   2c5e8:	sub	sp, sp, #8
   2c5ec:	str	r0, [sp, #4]
   2c5f0:	str	r1, [sp]
   2c5f4:	movw	r0, #1
   2c5f8:	add	sp, sp, #8
   2c5fc:	bx	lr
   2c600:	push	{fp, lr}
   2c604:	mov	fp, sp
   2c608:	sub	sp, sp, #72	; 0x48
   2c60c:	str	r0, [fp, #-8]
   2c610:	str	r1, [fp, #-12]
   2c614:	ldr	r0, [fp, #-8]
   2c618:	ldr	r0, [r0, #84]	; 0x54
   2c61c:	str	r0, [fp, #-16]
   2c620:	movw	r0, #0
   2c624:	str	r0, [fp, #-24]	; 0xffffffe8
   2c628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c62c:	ldr	r1, [fp, #-12]
   2c630:	ldr	r1, [r1, #8]
   2c634:	cmp	r0, r1
   2c638:	bge	2c9c8 <__assert_fail@plt+0x1b274>
   2c63c:	ldr	r0, [fp, #-12]
   2c640:	ldr	r0, [r0, #12]
   2c644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c648:	ldr	r0, [r0, r1, lsl #2]
   2c64c:	str	r0, [sp, #28]
   2c650:	ldr	r0, [fp, #-16]
   2c654:	ldr	r0, [r0]
   2c658:	ldr	r1, [sp, #28]
   2c65c:	add	r0, r0, r1, lsl #3
   2c660:	ldr	r0, [r0, #4]
   2c664:	lsr	r0, r0, #20
   2c668:	and	r0, r0, #1
   2c66c:	cmp	r0, #0
   2c670:	bne	2c678 <__assert_fail@plt+0x1af24>
   2c674:	b	2c9b8 <__assert_fail@plt+0x1b264>
   2c678:	ldr	r0, [fp, #-16]
   2c67c:	ldr	r0, [r0]
   2c680:	ldr	r1, [sp, #28]
   2c684:	add	r0, r0, r1, lsl #3
   2c688:	ldr	r0, [r0, #4]
   2c68c:	lsr	r0, r0, #8
   2c690:	movw	r1, #1023	; 0x3ff
   2c694:	and	r0, r0, r1
   2c698:	cmp	r0, #0
   2c69c:	beq	2c7ac <__assert_fail@plt+0x1b058>
   2c6a0:	ldr	r0, [fp, #-8]
   2c6a4:	ldr	r1, [r0, #40]	; 0x28
   2c6a8:	ldr	r2, [r0, #88]	; 0x58
   2c6ac:	bl	28660 <__assert_fail@plt+0x16f0c>
   2c6b0:	str	r0, [sp, #16]
   2c6b4:	ldr	r0, [fp, #-16]
   2c6b8:	ldr	r0, [r0]
   2c6bc:	ldr	r1, [sp, #28]
   2c6c0:	add	r0, r0, r1, lsl #3
   2c6c4:	ldr	r0, [r0, #4]
   2c6c8:	lsr	r0, r0, #8
   2c6cc:	movw	r1, #1023	; 0x3ff
   2c6d0:	and	r0, r0, r1
   2c6d4:	and	r0, r0, #4
   2c6d8:	cmp	r0, #0
   2c6dc:	beq	2c6f0 <__assert_fail@plt+0x1af9c>
   2c6e0:	ldr	r0, [sp, #16]
   2c6e4:	and	r0, r0, #1
   2c6e8:	cmp	r0, #0
   2c6ec:	beq	2c7a4 <__assert_fail@plt+0x1b050>
   2c6f0:	ldr	r0, [fp, #-16]
   2c6f4:	ldr	r0, [r0]
   2c6f8:	ldr	r1, [sp, #28]
   2c6fc:	add	r0, r0, r1, lsl #3
   2c700:	ldr	r0, [r0, #4]
   2c704:	lsr	r0, r0, #8
   2c708:	movw	r1, #1023	; 0x3ff
   2c70c:	and	r0, r0, r1
   2c710:	and	r0, r0, #8
   2c714:	cmp	r0, #0
   2c718:	beq	2c72c <__assert_fail@plt+0x1afd8>
   2c71c:	ldr	r0, [sp, #16]
   2c720:	and	r0, r0, #1
   2c724:	cmp	r0, #0
   2c728:	bne	2c7a4 <__assert_fail@plt+0x1b050>
   2c72c:	ldr	r0, [fp, #-16]
   2c730:	ldr	r0, [r0]
   2c734:	ldr	r1, [sp, #28]
   2c738:	add	r0, r0, r1, lsl #3
   2c73c:	ldr	r0, [r0, #4]
   2c740:	lsr	r0, r0, #8
   2c744:	movw	r1, #1023	; 0x3ff
   2c748:	and	r0, r0, r1
   2c74c:	and	r0, r0, #32
   2c750:	cmp	r0, #0
   2c754:	beq	2c768 <__assert_fail@plt+0x1b014>
   2c758:	ldr	r0, [sp, #16]
   2c75c:	and	r0, r0, #2
   2c760:	cmp	r0, #0
   2c764:	beq	2c7a4 <__assert_fail@plt+0x1b050>
   2c768:	ldr	r0, [fp, #-16]
   2c76c:	ldr	r0, [r0]
   2c770:	ldr	r1, [sp, #28]
   2c774:	add	r0, r0, r1, lsl #3
   2c778:	ldr	r0, [r0, #4]
   2c77c:	lsr	r0, r0, #8
   2c780:	movw	r1, #1023	; 0x3ff
   2c784:	and	r0, r0, r1
   2c788:	and	r0, r0, #128	; 0x80
   2c78c:	cmp	r0, #0
   2c790:	beq	2c7a8 <__assert_fail@plt+0x1b054>
   2c794:	ldr	r0, [sp, #16]
   2c798:	and	r0, r0, #8
   2c79c:	cmp	r0, #0
   2c7a0:	bne	2c7a8 <__assert_fail@plt+0x1b054>
   2c7a4:	b	2c9b8 <__assert_fail@plt+0x1b264>
   2c7a8:	b	2c7ac <__assert_fail@plt+0x1b058>
   2c7ac:	ldr	r0, [fp, #-16]
   2c7b0:	ldr	r1, [sp, #28]
   2c7b4:	ldr	r2, [fp, #-8]
   2c7b8:	ldr	r3, [fp, #-8]
   2c7bc:	ldr	r3, [r3, #40]	; 0x28
   2c7c0:	bl	2bd8c <__assert_fail@plt+0x1a638>
   2c7c4:	str	r0, [sp, #24]
   2c7c8:	ldr	r0, [sp, #24]
   2c7cc:	cmp	r0, #0
   2c7d0:	bne	2c7d8 <__assert_fail@plt+0x1b084>
   2c7d4:	b	2c9b8 <__assert_fail@plt+0x1b264>
   2c7d8:	ldr	r0, [fp, #-8]
   2c7dc:	ldr	r0, [r0, #40]	; 0x28
   2c7e0:	ldr	r1, [sp, #24]
   2c7e4:	add	r0, r0, r1
   2c7e8:	str	r0, [sp, #20]
   2c7ec:	ldr	r0, [fp, #-8]
   2c7f0:	ldr	r0, [r0, #120]	; 0x78
   2c7f4:	ldr	r1, [sp, #24]
   2c7f8:	cmp	r0, r1
   2c7fc:	bge	2c80c <__assert_fail@plt+0x1b0b8>
   2c800:	ldr	r0, [sp, #24]
   2c804:	str	r0, [sp, #8]
   2c808:	b	2c818 <__assert_fail@plt+0x1b0c4>
   2c80c:	ldr	r0, [fp, #-8]
   2c810:	ldr	r0, [r0, #120]	; 0x78
   2c814:	str	r0, [sp, #8]
   2c818:	ldr	r0, [sp, #8]
   2c81c:	ldr	r1, [fp, #-8]
   2c820:	str	r0, [r1, #120]	; 0x78
   2c824:	ldr	r0, [fp, #-8]
   2c828:	ldr	r1, [sp, #20]
   2c82c:	bl	2a288 <__assert_fail@plt+0x18b34>
   2c830:	str	r0, [fp, #-20]	; 0xffffffec
   2c834:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c838:	cmp	r0, #0
   2c83c:	beq	2c84c <__assert_fail@plt+0x1b0f8>
   2c840:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c844:	str	r0, [fp, #-4]
   2c848:	b	2c9d0 <__assert_fail@plt+0x1b27c>
   2c84c:	ldr	r0, [fp, #-16]
   2c850:	ldr	r0, [r0, #12]
   2c854:	ldr	r1, [sp, #28]
   2c858:	add	r0, r0, r1, lsl #2
   2c85c:	ldr	r0, [r0]
   2c860:	cmn	r0, #1
   2c864:	beq	2c86c <__assert_fail@plt+0x1b118>
   2c868:	b	2c86c <__assert_fail@plt+0x1b118>
   2c86c:	ldr	r0, [fp, #-16]
   2c870:	ldr	r1, [r0, #12]
   2c874:	ldr	r0, [r0, #24]
   2c878:	ldr	r2, [sp, #28]
   2c87c:	ldr	r1, [r1, r2, lsl #2]
   2c880:	add	r1, r1, r1, lsl #1
   2c884:	add	r0, r0, r1, lsl #2
   2c888:	str	r0, [sp, #32]
   2c88c:	ldr	r0, [fp, #-8]
   2c890:	ldr	r0, [r0, #100]	; 0x64
   2c894:	ldr	r1, [sp, #20]
   2c898:	add	r0, r0, r1, lsl #2
   2c89c:	ldr	r0, [r0]
   2c8a0:	str	r0, [sp, #12]
   2c8a4:	ldr	r0, [sp, #12]
   2c8a8:	movw	r1, #0
   2c8ac:	cmp	r0, r1
   2c8b0:	bne	2c8d4 <__assert_fail@plt+0x1b180>
   2c8b4:	ldr	r0, [sp, #32]
   2c8b8:	ldr	r1, [r0]
   2c8bc:	str	r1, [sp, #36]	; 0x24
   2c8c0:	ldr	r1, [r0, #4]
   2c8c4:	str	r1, [sp, #40]	; 0x28
   2c8c8:	ldr	r0, [r0, #8]
   2c8cc:	str	r0, [sp, #44]	; 0x2c
   2c8d0:	b	2c908 <__assert_fail@plt+0x1b1b4>
   2c8d4:	ldr	r0, [sp, #12]
   2c8d8:	ldr	r1, [r0, #40]	; 0x28
   2c8dc:	ldr	r2, [sp, #32]
   2c8e0:	add	r0, sp, #36	; 0x24
   2c8e4:	bl	29e54 <__assert_fail@plt+0x18700>
   2c8e8:	str	r0, [fp, #-20]	; 0xffffffec
   2c8ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c8f0:	cmp	r0, #0
   2c8f4:	beq	2c904 <__assert_fail@plt+0x1b1b0>
   2c8f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c8fc:	str	r0, [fp, #-4]
   2c900:	b	2c9d0 <__assert_fail@plt+0x1b27c>
   2c904:	b	2c908 <__assert_fail@plt+0x1b1b4>
   2c908:	ldr	r0, [fp, #-8]
   2c90c:	ldr	r1, [sp, #20]
   2c910:	sub	r1, r1, #1
   2c914:	ldr	r2, [r0, #88]	; 0x58
   2c918:	bl	28660 <__assert_fail@plt+0x16f0c>
   2c91c:	str	r0, [sp, #16]
   2c920:	ldr	r1, [fp, #-16]
   2c924:	ldr	r3, [sp, #16]
   2c928:	sub	r0, fp, #20
   2c92c:	add	r2, sp, #36	; 0x24
   2c930:	bl	25e24 <__assert_fail@plt+0x146d0>
   2c934:	ldr	r1, [fp, #-8]
   2c938:	ldr	r1, [r1, #100]	; 0x64
   2c93c:	ldr	r2, [sp, #20]
   2c940:	add	r1, r1, r2, lsl #2
   2c944:	str	r0, [r1]
   2c948:	ldr	r0, [sp, #12]
   2c94c:	movw	r1, #0
   2c950:	cmp	r0, r1
   2c954:	beq	2c960 <__assert_fail@plt+0x1b20c>
   2c958:	ldr	r0, [sp, #44]	; 0x2c
   2c95c:	bl	15f68 <__assert_fail@plt+0x4814>
   2c960:	ldr	r0, [fp, #-8]
   2c964:	ldr	r0, [r0, #100]	; 0x64
   2c968:	ldr	r1, [sp, #20]
   2c96c:	add	r0, r0, r1, lsl #2
   2c970:	ldr	r0, [r0]
   2c974:	movw	r1, #0
   2c978:	cmp	r0, r1
   2c97c:	movw	r0, #0
   2c980:	str	r0, [sp, #4]
   2c984:	bne	2c99c <__assert_fail@plt+0x1b248>
   2c988:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c98c:	cmp	r0, #0
   2c990:	movw	r0, #0
   2c994:	movne	r0, #1
   2c998:	str	r0, [sp, #4]
   2c99c:	ldr	r0, [sp, #4]
   2c9a0:	tst	r0, #1
   2c9a4:	beq	2c9b4 <__assert_fail@plt+0x1b260>
   2c9a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c9ac:	str	r0, [fp, #-4]
   2c9b0:	b	2c9d0 <__assert_fail@plt+0x1b27c>
   2c9b4:	b	2c9b8 <__assert_fail@plt+0x1b264>
   2c9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c9bc:	add	r0, r0, #1
   2c9c0:	str	r0, [fp, #-24]	; 0xffffffe8
   2c9c4:	b	2c628 <__assert_fail@plt+0x1aed4>
   2c9c8:	movw	r0, #0
   2c9cc:	str	r0, [fp, #-4]
   2c9d0:	ldr	r0, [fp, #-4]
   2c9d4:	mov	sp, fp
   2c9d8:	pop	{fp, pc}
   2c9dc:	push	{r4, r5, fp, lr}
   2c9e0:	add	fp, sp, #8
   2c9e4:	sub	sp, sp, #2160	; 0x870
   2c9e8:	sub	sp, sp, #12288	; 0x3000
   2c9ec:	add	r3, sp, #20
   2c9f0:	sub	lr, fp, #6144	; 0x1800
   2c9f4:	sub	r2, lr, #100	; 0x64
   2c9f8:	str	r0, [fp, #-16]
   2c9fc:	str	r1, [fp, #-20]	; 0xffffffec
   2ca00:	movw	r0, #0
   2ca04:	strb	r0, [fp, #-37]	; 0xffffffdb
   2ca08:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ca0c:	movw	r1, #0
   2ca10:	str	r1, [r0, #44]	; 0x2c
   2ca14:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ca18:	str	r1, [r0, #48]	; 0x30
   2ca1c:	ldr	r0, [fp, #-16]
   2ca20:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ca24:	bl	2d204 <__assert_fail@plt+0x1bab0>
   2ca28:	str	r0, [fp, #-52]	; 0xffffffcc
   2ca2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ca30:	cmp	r0, #0
   2ca34:	bgt	2ca9c <__assert_fail@plt+0x1b348>
   2ca38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ca3c:	cmp	r0, #0
   2ca40:	bne	2ca8c <__assert_fail@plt+0x1b338>
   2ca44:	movw	r0, #4
   2ca48:	movw	r1, #256	; 0x100
   2ca4c:	bl	380d0 <__assert_fail@plt+0x2697c>
   2ca50:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ca54:	str	r0, [r1, #44]	; 0x2c
   2ca58:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ca5c:	ldr	r0, [r0, #44]	; 0x2c
   2ca60:	movw	r1, #0
   2ca64:	cmp	r0, r1
   2ca68:	bne	2ca7c <__assert_fail@plt+0x1b328>
   2ca6c:	movw	r0, #0
   2ca70:	and	r0, r0, #1
   2ca74:	strb	r0, [fp, #-9]
   2ca78:	b	2d1f4 <__assert_fail@plt+0x1baa0>
   2ca7c:	movw	r0, #1
   2ca80:	and	r0, r0, #1
   2ca84:	strb	r0, [fp, #-9]
   2ca88:	b	2d1f4 <__assert_fail@plt+0x1baa0>
   2ca8c:	movw	r0, #0
   2ca90:	and	r0, r0, #1
   2ca94:	strb	r0, [fp, #-9]
   2ca98:	b	2d1f4 <__assert_fail@plt+0x1baa0>
   2ca9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2caa0:	add	r1, r0, #1
   2caa4:	sub	lr, fp, #3072	; 0xc00
   2caa8:	sub	r0, lr, #68	; 0x44
   2caac:	bl	24e10 <__assert_fail@plt+0x136bc>
   2cab0:	str	r0, [fp, #-24]	; 0xffffffe8
   2cab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cab8:	cmp	r0, #0
   2cabc:	beq	2cb24 <__assert_fail@plt+0x1b3d0>
   2cac0:	b	2cac4 <__assert_fail@plt+0x1b370>
   2cac4:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   2cac8:	bl	15f68 <__assert_fail@plt+0x4814>
   2cacc:	movw	r0, #0
   2cad0:	str	r0, [fp, #-28]	; 0xffffffe4
   2cad4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cad8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2cadc:	cmp	r0, r1
   2cae0:	bge	2cb14 <__assert_fail@plt+0x1b3c0>
   2cae4:	sub	lr, fp, #6144	; 0x1800
   2cae8:	sub	r0, lr, #100	; 0x64
   2caec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2caf0:	movw	r2, #12
   2caf4:	mul	r1, r1, r2
   2caf8:	add	r0, r0, r1
   2cafc:	ldr	r0, [r0, #8]
   2cb00:	bl	15f68 <__assert_fail@plt+0x4814>
   2cb04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cb08:	add	r0, r0, #1
   2cb0c:	str	r0, [fp, #-28]	; 0xffffffe4
   2cb10:	b	2cad4 <__assert_fail@plt+0x1b380>
   2cb14:	movw	r0, #0
   2cb18:	and	r0, r0, #1
   2cb1c:	strb	r0, [fp, #-9]
   2cb20:	b	2d1f4 <__assert_fail@plt+0x1baa0>
   2cb24:	sub	lr, fp, #3072	; 0xc00
   2cb28:	sub	r0, lr, #100	; 0x64
   2cb2c:	bl	2d9e4 <__assert_fail@plt+0x1c290>
   2cb30:	movw	r0, #0
   2cb34:	str	r0, [fp, #-28]	; 0xffffffe4
   2cb38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cb3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2cb40:	cmp	r0, r1
   2cb44:	bge	2ce14 <__assert_fail@plt+0x1b6c0>
   2cb48:	movw	r0, #0
   2cb4c:	str	r0, [fp, #-3136]	; 0xfffff3c0
   2cb50:	str	r0, [fp, #-32]	; 0xffffffe0
   2cb54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cb58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cb5c:	movw	r2, #12
   2cb60:	mul	r1, r1, r2
   2cb64:	sub	lr, fp, #6144	; 0x1800
   2cb68:	sub	r2, lr, #100	; 0x64
   2cb6c:	add	r1, r2, r1
   2cb70:	ldr	r1, [r1, #4]
   2cb74:	cmp	r0, r1
   2cb78:	bge	2cc0c <__assert_fail@plt+0x1b4b8>
   2cb7c:	ldr	r0, [fp, #-16]
   2cb80:	ldr	r0, [r0, #12]
   2cb84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cb88:	add	r1, r1, r1, lsl #1
   2cb8c:	sub	lr, fp, #6144	; 0x1800
   2cb90:	sub	r2, lr, #100	; 0x64
   2cb94:	add	r1, r2, r1, lsl #2
   2cb98:	ldr	r1, [r1, #8]
   2cb9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2cba0:	ldr	r1, [r1, r2, lsl #2]
   2cba4:	add	r0, r0, r1, lsl #2
   2cba8:	ldr	r0, [r0]
   2cbac:	str	r0, [sp, #16]
   2cbb0:	ldr	r0, [sp, #16]
   2cbb4:	cmn	r0, #1
   2cbb8:	beq	2cbf8 <__assert_fail@plt+0x1b4a4>
   2cbbc:	ldr	r0, [fp, #-16]
   2cbc0:	ldr	r0, [r0, #24]
   2cbc4:	ldr	r1, [sp, #16]
   2cbc8:	movw	r2, #12
   2cbcc:	mul	r1, r1, r2
   2cbd0:	add	r1, r0, r1
   2cbd4:	sub	lr, fp, #3072	; 0xc00
   2cbd8:	sub	r0, lr, #68	; 0x44
   2cbdc:	bl	25388 <__assert_fail@plt+0x13c34>
   2cbe0:	str	r0, [fp, #-24]	; 0xffffffe8
   2cbe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbe8:	cmp	r0, #0
   2cbec:	beq	2cbf4 <__assert_fail@plt+0x1b4a0>
   2cbf0:	b	2cac4 <__assert_fail@plt+0x1b370>
   2cbf4:	b	2cbf8 <__assert_fail@plt+0x1b4a4>
   2cbf8:	b	2cbfc <__assert_fail@plt+0x1b4a8>
   2cbfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cc00:	add	r0, r0, #1
   2cc04:	str	r0, [fp, #-32]	; 0xffffffe0
   2cc08:	b	2cb54 <__assert_fail@plt+0x1b400>
   2cc0c:	ldr	r1, [fp, #-16]
   2cc10:	sub	r0, fp, #24
   2cc14:	sub	lr, fp, #3072	; 0xc00
   2cc18:	sub	r2, lr, #68	; 0x44
   2cc1c:	mov	r3, #0
   2cc20:	bl	25e24 <__assert_fail@plt+0x146d0>
   2cc24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cc28:	sub	lr, fp, #1024	; 0x400
   2cc2c:	sub	r2, lr, #56	; 0x38
   2cc30:	str	r0, [r2, r1, lsl #2]
   2cc34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cc38:	add	r0, r2, r0, lsl #2
   2cc3c:	ldr	r0, [r0]
   2cc40:	movw	r1, #0
   2cc44:	cmp	r0, r1
   2cc48:	movw	r0, #0
   2cc4c:	str	r0, [sp, #12]
   2cc50:	bne	2cc68 <__assert_fail@plt+0x1b514>
   2cc54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cc58:	cmp	r0, #0
   2cc5c:	movw	r0, #0
   2cc60:	movne	r0, #1
   2cc64:	str	r0, [sp, #12]
   2cc68:	ldr	r0, [sp, #12]
   2cc6c:	tst	r0, #1
   2cc70:	beq	2cc78 <__assert_fail@plt+0x1b524>
   2cc74:	b	2cac4 <__assert_fail@plt+0x1b370>
   2cc78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cc7c:	sub	lr, fp, #1024	; 0x400
   2cc80:	sub	r1, lr, #56	; 0x38
   2cc84:	ldr	r0, [r1, r0, lsl #2]
   2cc88:	ldrb	r0, [r0, #52]	; 0x34
   2cc8c:	lsr	r0, r0, #7
   2cc90:	and	r0, r0, #255	; 0xff
   2cc94:	cmp	r0, #0
   2cc98:	beq	2cdb8 <__assert_fail@plt+0x1b664>
   2cc9c:	ldr	r1, [fp, #-16]
   2cca0:	sub	r0, fp, #24
   2cca4:	sub	lr, fp, #3072	; 0xc00
   2cca8:	sub	r2, lr, #68	; 0x44
   2ccac:	mov	r3, #1
   2ccb0:	bl	25e24 <__assert_fail@plt+0x146d0>
   2ccb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ccb8:	sub	lr, fp, #2048	; 0x800
   2ccbc:	sub	r2, lr, #56	; 0x38
   2ccc0:	str	r0, [r2, r1, lsl #2]
   2ccc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ccc8:	add	r0, r2, r0, lsl #2
   2cccc:	ldr	r0, [r0]
   2ccd0:	movw	r1, #0
   2ccd4:	cmp	r0, r1
   2ccd8:	movw	r0, #0
   2ccdc:	str	r0, [sp, #8]
   2cce0:	bne	2ccf8 <__assert_fail@plt+0x1b5a4>
   2cce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cce8:	cmp	r0, #0
   2ccec:	movw	r0, #0
   2ccf0:	movne	r0, #1
   2ccf4:	str	r0, [sp, #8]
   2ccf8:	ldr	r0, [sp, #8]
   2ccfc:	tst	r0, #1
   2cd00:	beq	2cd08 <__assert_fail@plt+0x1b5b4>
   2cd04:	b	2cac4 <__assert_fail@plt+0x1b370>
   2cd08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cd0c:	sub	lr, fp, #1024	; 0x400
   2cd10:	sub	r1, lr, #56	; 0x38
   2cd14:	ldr	r1, [r1, r0, lsl #2]
   2cd18:	sub	lr, fp, #2048	; 0x800
   2cd1c:	sub	r2, lr, #56	; 0x38
   2cd20:	add	r0, r2, r0, lsl #2
   2cd24:	ldr	r0, [r0]
   2cd28:	cmp	r1, r0
   2cd2c:	beq	2cd48 <__assert_fail@plt+0x1b5f4>
   2cd30:	ldr	r0, [fp, #-16]
   2cd34:	ldr	r0, [r0, #92]	; 0x5c
   2cd38:	cmp	r0, #1
   2cd3c:	ble	2cd48 <__assert_fail@plt+0x1b5f4>
   2cd40:	movw	r0, #1
   2cd44:	strb	r0, [fp, #-37]	; 0xffffffdb
   2cd48:	ldr	r1, [fp, #-16]
   2cd4c:	sub	r0, fp, #24
   2cd50:	sub	lr, fp, #3072	; 0xc00
   2cd54:	sub	r2, lr, #68	; 0x44
   2cd58:	mov	r3, #2
   2cd5c:	bl	25e24 <__assert_fail@plt+0x146d0>
   2cd60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cd64:	sub	lr, fp, #3072	; 0xc00
   2cd68:	sub	r2, lr, #56	; 0x38
   2cd6c:	str	r0, [r2, r1, lsl #2]
   2cd70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cd74:	add	r0, r2, r0, lsl #2
   2cd78:	ldr	r0, [r0]
   2cd7c:	movw	r1, #0
   2cd80:	cmp	r0, r1
   2cd84:	movw	r0, #0
   2cd88:	str	r0, [sp, #4]
   2cd8c:	bne	2cda4 <__assert_fail@plt+0x1b650>
   2cd90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cd94:	cmp	r0, #0
   2cd98:	movw	r0, #0
   2cd9c:	movne	r0, #1
   2cda0:	str	r0, [sp, #4]
   2cda4:	ldr	r0, [sp, #4]
   2cda8:	tst	r0, #1
   2cdac:	beq	2cdb4 <__assert_fail@plt+0x1b660>
   2cdb0:	b	2cac4 <__assert_fail@plt+0x1b370>
   2cdb4:	b	2cdec <__assert_fail@plt+0x1b698>
   2cdb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cdbc:	sub	lr, fp, #1024	; 0x400
   2cdc0:	sub	r1, lr, #56	; 0x38
   2cdc4:	ldr	r2, [r1, r0, lsl #2]
   2cdc8:	sub	lr, fp, #2048	; 0x800
   2cdcc:	sub	r3, lr, #56	; 0x38
   2cdd0:	str	r2, [r3, r0, lsl #2]
   2cdd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cdd8:	ldr	r1, [r1, r0, lsl #2]
   2cddc:	sub	lr, fp, #3072	; 0xc00
   2cde0:	sub	r2, lr, #56	; 0x38
   2cde4:	add	r0, r2, r0, lsl #2
   2cde8:	str	r1, [r0]
   2cdec:	sub	lr, fp, #3072	; 0xc00
   2cdf0:	sub	r0, lr, #100	; 0x64
   2cdf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cdf8:	add	r2, sp, #20
   2cdfc:	add	r1, r2, r1, lsl #5
   2ce00:	bl	2da10 <__assert_fail@plt+0x1c2bc>
   2ce04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ce08:	add	r0, r0, #1
   2ce0c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ce10:	b	2cb38 <__assert_fail@plt+0x1b3e4>
   2ce14:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2ce18:	tst	r0, #1
   2ce1c:	bne	2cf9c <__assert_fail@plt+0x1b848>
   2ce20:	movw	r0, #4
   2ce24:	movw	r1, #256	; 0x100
   2ce28:	bl	380d0 <__assert_fail@plt+0x2697c>
   2ce2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ce30:	str	r0, [r1, #44]	; 0x2c
   2ce34:	str	r0, [fp, #-56]	; 0xffffffc8
   2ce38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ce3c:	movw	r1, #0
   2ce40:	cmp	r0, r1
   2ce44:	bne	2ce4c <__assert_fail@plt+0x1b6f8>
   2ce48:	b	2cac4 <__assert_fail@plt+0x1b370>
   2ce4c:	movw	r0, #0
   2ce50:	str	r0, [fp, #-28]	; 0xffffffe4
   2ce54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ce58:	cmp	r0, #8
   2ce5c:	bge	2cf98 <__assert_fail@plt+0x1b844>
   2ce60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ce64:	lsl	r0, r0, #5
   2ce68:	str	r0, [fp, #-36]	; 0xffffffdc
   2ce6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ce70:	sub	lr, fp, #3072	; 0xc00
   2ce74:	sub	r1, lr, #100	; 0x64
   2ce78:	add	r0, r1, r0, lsl #2
   2ce7c:	ldr	r0, [r0]
   2ce80:	str	r0, [fp, #-44]	; 0xffffffd4
   2ce84:	movw	r0, #1
   2ce88:	str	r0, [fp, #-48]	; 0xffffffd0
   2ce8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ce90:	cmp	r0, #0
   2ce94:	beq	2cf84 <__assert_fail@plt+0x1b830>
   2ce98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ce9c:	and	r0, r0, #1
   2cea0:	cmp	r0, #0
   2cea4:	beq	2cf58 <__assert_fail@plt+0x1b804>
   2cea8:	movw	r0, #0
   2ceac:	str	r0, [fp, #-32]	; 0xffffffe0
   2ceb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ceb4:	add	r1, sp, #20
   2ceb8:	add	r0, r1, r0, lsl #5
   2cebc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cec0:	add	r0, r0, r1, lsl #2
   2cec4:	ldr	r0, [r0]
   2cec8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2cecc:	and	r0, r0, r1
   2ced0:	cmp	r0, #0
   2ced4:	bne	2ceec <__assert_fail@plt+0x1b798>
   2ced8:	b	2cedc <__assert_fail@plt+0x1b788>
   2cedc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cee0:	add	r0, r0, #1
   2cee4:	str	r0, [fp, #-32]	; 0xffffffe0
   2cee8:	b	2ceb0 <__assert_fail@plt+0x1b75c>
   2ceec:	ldr	r0, [fp, #-16]
   2cef0:	add	r0, r0, #96	; 0x60
   2cef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cef8:	add	r0, r0, r1, lsl #2
   2cefc:	ldr	r0, [r0]
   2cf00:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2cf04:	and	r0, r0, r1
   2cf08:	cmp	r0, #0
   2cf0c:	beq	2cf34 <__assert_fail@plt+0x1b7e0>
   2cf10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cf14:	sub	lr, fp, #2048	; 0x800
   2cf18:	sub	r1, lr, #56	; 0x38
   2cf1c:	ldr	r0, [r1, r0, lsl #2]
   2cf20:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2cf24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2cf28:	add	r1, r1, r2, lsl #2
   2cf2c:	str	r0, [r1]
   2cf30:	b	2cf54 <__assert_fail@plt+0x1b800>
   2cf34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cf38:	sub	lr, fp, #1024	; 0x400
   2cf3c:	sub	r1, lr, #56	; 0x38
   2cf40:	ldr	r0, [r1, r0, lsl #2]
   2cf44:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2cf48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2cf4c:	add	r1, r1, r2, lsl #2
   2cf50:	str	r0, [r1]
   2cf54:	b	2cf58 <__assert_fail@plt+0x1b804>
   2cf58:	b	2cf5c <__assert_fail@plt+0x1b808>
   2cf5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2cf60:	lsl	r0, r0, #1
   2cf64:	str	r0, [fp, #-48]	; 0xffffffd0
   2cf68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2cf6c:	lsr	r0, r0, #1
   2cf70:	str	r0, [fp, #-44]	; 0xffffffd4
   2cf74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2cf78:	add	r0, r0, #1
   2cf7c:	str	r0, [fp, #-36]	; 0xffffffdc
   2cf80:	b	2ce8c <__assert_fail@plt+0x1b738>
   2cf84:	b	2cf88 <__assert_fail@plt+0x1b834>
   2cf88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cf8c:	add	r0, r0, #1
   2cf90:	str	r0, [fp, #-28]	; 0xffffffe4
   2cf94:	b	2ce54 <__assert_fail@plt+0x1b700>
   2cf98:	b	2d0ec <__assert_fail@plt+0x1b998>
   2cf9c:	movw	r0, #4
   2cfa0:	movw	r1, #512	; 0x200
   2cfa4:	bl	380d0 <__assert_fail@plt+0x2697c>
   2cfa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cfac:	str	r0, [r1, #48]	; 0x30
   2cfb0:	str	r0, [fp, #-56]	; 0xffffffc8
   2cfb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2cfb8:	movw	r1, #0
   2cfbc:	cmp	r0, r1
   2cfc0:	bne	2cfc8 <__assert_fail@plt+0x1b874>
   2cfc4:	b	2cac4 <__assert_fail@plt+0x1b370>
   2cfc8:	movw	r0, #0
   2cfcc:	str	r0, [fp, #-28]	; 0xffffffe4
   2cfd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cfd4:	cmp	r0, #8
   2cfd8:	bge	2d0e8 <__assert_fail@plt+0x1b994>
   2cfdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cfe0:	lsl	r0, r0, #5
   2cfe4:	str	r0, [fp, #-36]	; 0xffffffdc
   2cfe8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cfec:	sub	lr, fp, #3072	; 0xc00
   2cff0:	sub	r1, lr, #100	; 0x64
   2cff4:	add	r0, r1, r0, lsl #2
   2cff8:	ldr	r0, [r0]
   2cffc:	str	r0, [fp, #-44]	; 0xffffffd4
   2d000:	movw	r0, #1
   2d004:	str	r0, [fp, #-48]	; 0xffffffd0
   2d008:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d00c:	cmp	r0, #0
   2d010:	beq	2d0d4 <__assert_fail@plt+0x1b980>
   2d014:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d018:	and	r0, r0, #1
   2d01c:	cmp	r0, #0
   2d020:	beq	2d0a8 <__assert_fail@plt+0x1b954>
   2d024:	movw	r0, #0
   2d028:	str	r0, [fp, #-32]	; 0xffffffe0
   2d02c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d030:	add	r1, sp, #20
   2d034:	add	r0, r1, r0, lsl #5
   2d038:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d03c:	add	r0, r0, r1, lsl #2
   2d040:	ldr	r0, [r0]
   2d044:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d048:	and	r0, r0, r1
   2d04c:	cmp	r0, #0
   2d050:	bne	2d068 <__assert_fail@plt+0x1b914>
   2d054:	b	2d058 <__assert_fail@plt+0x1b904>
   2d058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d05c:	add	r0, r0, #1
   2d060:	str	r0, [fp, #-32]	; 0xffffffe0
   2d064:	b	2d02c <__assert_fail@plt+0x1b8d8>
   2d068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d06c:	sub	lr, fp, #1024	; 0x400
   2d070:	sub	r1, lr, #56	; 0x38
   2d074:	ldr	r0, [r1, r0, lsl #2]
   2d078:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d07c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d080:	str	r0, [r1, r2, lsl #2]
   2d084:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d088:	sub	lr, fp, #2048	; 0x800
   2d08c:	sub	r1, lr, #56	; 0x38
   2d090:	ldr	r0, [r1, r0, lsl #2]
   2d094:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d098:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d09c:	add	r2, r2, #256	; 0x100
   2d0a0:	add	r1, r1, r2, lsl #2
   2d0a4:	str	r0, [r1]
   2d0a8:	b	2d0ac <__assert_fail@plt+0x1b958>
   2d0ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d0b0:	lsl	r0, r0, #1
   2d0b4:	str	r0, [fp, #-48]	; 0xffffffd0
   2d0b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d0bc:	lsr	r0, r0, #1
   2d0c0:	str	r0, [fp, #-44]	; 0xffffffd4
   2d0c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d0c8:	add	r0, r0, #1
   2d0cc:	str	r0, [fp, #-36]	; 0xffffffdc
   2d0d0:	b	2d008 <__assert_fail@plt+0x1b8b4>
   2d0d4:	b	2d0d8 <__assert_fail@plt+0x1b984>
   2d0d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d0dc:	add	r0, r0, #1
   2d0e0:	str	r0, [fp, #-28]	; 0xffffffe4
   2d0e4:	b	2cfd0 <__assert_fail@plt+0x1b87c>
   2d0e8:	b	2d0ec <__assert_fail@plt+0x1b998>
   2d0ec:	sub	lr, fp, #3072	; 0xc00
   2d0f0:	sub	r0, lr, #100	; 0x64
   2d0f4:	movw	r1, #10
   2d0f8:	bl	289d0 <__assert_fail@plt+0x1727c>
   2d0fc:	tst	r0, #1
   2d100:	beq	2d198 <__assert_fail@plt+0x1ba44>
   2d104:	movw	r0, #0
   2d108:	str	r0, [fp, #-32]	; 0xffffffe0
   2d10c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d110:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d114:	cmp	r0, r1
   2d118:	bge	2d194 <__assert_fail@plt+0x1ba40>
   2d11c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d120:	add	r1, sp, #20
   2d124:	add	r0, r1, r0, lsl #5
   2d128:	movw	r1, #10
   2d12c:	bl	289d0 <__assert_fail@plt+0x1727c>
   2d130:	tst	r0, #1
   2d134:	beq	2d180 <__assert_fail@plt+0x1ba2c>
   2d138:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d13c:	sub	lr, fp, #3072	; 0xc00
   2d140:	sub	r1, lr, #56	; 0x38
   2d144:	add	r0, r1, r0, lsl #2
   2d148:	ldr	r0, [r0]
   2d14c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d150:	str	r0, [r1, #40]	; 0x28
   2d154:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2d158:	tst	r0, #1
   2d15c:	beq	2d17c <__assert_fail@plt+0x1ba28>
   2d160:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d164:	sub	lr, fp, #3072	; 0xc00
   2d168:	sub	r1, lr, #56	; 0x38
   2d16c:	add	r0, r1, r0, lsl #2
   2d170:	ldr	r0, [r0]
   2d174:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2d178:	str	r0, [r1, #1064]	; 0x428
   2d17c:	b	2d194 <__assert_fail@plt+0x1ba40>
   2d180:	b	2d184 <__assert_fail@plt+0x1ba30>
   2d184:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d188:	add	r0, r0, #1
   2d18c:	str	r0, [fp, #-32]	; 0xffffffe0
   2d190:	b	2d10c <__assert_fail@plt+0x1b9b8>
   2d194:	b	2d198 <__assert_fail@plt+0x1ba44>
   2d198:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   2d19c:	bl	15f68 <__assert_fail@plt+0x4814>
   2d1a0:	movw	r0, #0
   2d1a4:	str	r0, [fp, #-28]	; 0xffffffe4
   2d1a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d1ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2d1b0:	cmp	r0, r1
   2d1b4:	bge	2d1e8 <__assert_fail@plt+0x1ba94>
   2d1b8:	sub	lr, fp, #6144	; 0x1800
   2d1bc:	sub	r0, lr, #100	; 0x64
   2d1c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d1c4:	movw	r2, #12
   2d1c8:	mul	r1, r1, r2
   2d1cc:	add	r0, r0, r1
   2d1d0:	ldr	r0, [r0, #8]
   2d1d4:	bl	15f68 <__assert_fail@plt+0x4814>
   2d1d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d1dc:	add	r0, r0, #1
   2d1e0:	str	r0, [fp, #-28]	; 0xffffffe4
   2d1e4:	b	2d1a8 <__assert_fail@plt+0x1ba54>
   2d1e8:	movw	r0, #1
   2d1ec:	and	r0, r0, #1
   2d1f0:	strb	r0, [fp, #-9]
   2d1f4:	ldrb	r0, [fp, #-9]
   2d1f8:	and	r0, r0, #1
   2d1fc:	sub	sp, fp, #8
   2d200:	pop	{r4, r5, fp, pc}
   2d204:	push	{fp, lr}
   2d208:	mov	fp, sp
   2d20c:	sub	sp, sp, #184	; 0xb8
   2d210:	sub	ip, fp, #76	; 0x4c
   2d214:	str	r0, [fp, #-8]
   2d218:	str	r1, [fp, #-12]
   2d21c:	str	r2, [fp, #-16]
   2d220:	str	r3, [fp, #-20]	; 0xffffffec
   2d224:	ldr	r0, [fp, #-12]
   2d228:	add	r0, r0, #4
   2d22c:	str	r0, [fp, #-80]	; 0xffffffb0
   2d230:	mov	r0, ip
   2d234:	bl	2d9e4 <__assert_fail@plt+0x1c290>
   2d238:	movw	r0, #0
   2d23c:	str	r0, [fp, #-44]	; 0xffffffd4
   2d240:	str	r0, [fp, #-32]	; 0xffffffe0
   2d244:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d248:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2d24c:	ldr	r1, [r1, #4]
   2d250:	cmp	r0, r1
   2d254:	bge	2d970 <__assert_fail@plt+0x1c21c>
   2d258:	ldr	r0, [fp, #-8]
   2d25c:	ldr	r0, [r0]
   2d260:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2d264:	ldr	r1, [r1, #8]
   2d268:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d26c:	ldr	r1, [r1, r2, lsl #2]
   2d270:	add	r0, r0, r1, lsl #3
   2d274:	str	r0, [fp, #-84]	; 0xffffffac
   2d278:	ldr	r0, [fp, #-84]	; 0xffffffac
   2d27c:	ldr	r0, [r0, #4]
   2d280:	and	r0, r0, #255	; 0xff
   2d284:	str	r0, [fp, #-88]	; 0xffffffa8
   2d288:	ldr	r0, [fp, #-84]	; 0xffffffac
   2d28c:	ldr	r0, [r0, #4]
   2d290:	lsr	r0, r0, #8
   2d294:	movw	r1, #1023	; 0x3ff
   2d298:	and	r0, r0, r1
   2d29c:	str	r0, [sp, #92]	; 0x5c
   2d2a0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d2a4:	cmp	r0, #1
   2d2a8:	bne	2d2c0 <__assert_fail@plt+0x1bb6c>
   2d2ac:	sub	r0, fp, #76	; 0x4c
   2d2b0:	ldr	r1, [fp, #-84]	; 0xffffffac
   2d2b4:	ldrb	r1, [r1]
   2d2b8:	bl	21cb0 <__assert_fail@plt+0x1055c>
   2d2bc:	b	2d3d0 <__assert_fail@plt+0x1bc7c>
   2d2c0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d2c4:	cmp	r0, #3
   2d2c8:	bne	2d2e0 <__assert_fail@plt+0x1bb8c>
   2d2cc:	sub	r0, fp, #76	; 0x4c
   2d2d0:	ldr	r1, [fp, #-84]	; 0xffffffac
   2d2d4:	ldr	r1, [r1]
   2d2d8:	bl	2da10 <__assert_fail@plt+0x1c2bc>
   2d2dc:	b	2d3cc <__assert_fail@plt+0x1bc78>
   2d2e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d2e4:	cmp	r0, #5
   2d2e8:	bne	2d35c <__assert_fail@plt+0x1bc08>
   2d2ec:	ldr	r0, [fp, #-8]
   2d2f0:	ldr	r0, [r0, #92]	; 0x5c
   2d2f4:	cmp	r0, #1
   2d2f8:	ble	2d310 <__assert_fail@plt+0x1bbbc>
   2d2fc:	sub	r0, fp, #76	; 0x4c
   2d300:	ldr	r1, [fp, #-8]
   2d304:	ldr	r1, [r1, #60]	; 0x3c
   2d308:	bl	2da10 <__assert_fail@plt+0x1c2bc>
   2d30c:	b	2d318 <__assert_fail@plt+0x1bbc4>
   2d310:	sub	r0, fp, #76	; 0x4c
   2d314:	bl	2da68 <__assert_fail@plt+0x1c314>
   2d318:	ldr	r0, [fp, #-8]
   2d31c:	ldr	r0, [r0, #128]	; 0x80
   2d320:	and	r0, r0, #64	; 0x40
   2d324:	cmp	r0, #0
   2d328:	bne	2d338 <__assert_fail@plt+0x1bbe4>
   2d32c:	sub	r0, fp, #76	; 0x4c
   2d330:	movw	r1, #10
   2d334:	bl	2da94 <__assert_fail@plt+0x1c340>
   2d338:	ldr	r0, [fp, #-8]
   2d33c:	ldr	r0, [r0, #128]	; 0x80
   2d340:	and	r0, r0, #128	; 0x80
   2d344:	cmp	r0, #0
   2d348:	beq	2d358 <__assert_fail@plt+0x1bc04>
   2d34c:	sub	r0, fp, #76	; 0x4c
   2d350:	movw	r1, #0
   2d354:	bl	2da94 <__assert_fail@plt+0x1c340>
   2d358:	b	2d3c8 <__assert_fail@plt+0x1bc74>
   2d35c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d360:	cmp	r0, #7
   2d364:	bne	2d3c0 <__assert_fail@plt+0x1bc6c>
   2d368:	sub	r0, fp, #76	; 0x4c
   2d36c:	movw	r1, #255	; 0xff
   2d370:	and	r1, r1, #255	; 0xff
   2d374:	movw	r2, #16
   2d378:	bl	11658 <memset@plt>
   2d37c:	ldr	r0, [fp, #-8]
   2d380:	ldr	r0, [r0, #128]	; 0x80
   2d384:	and	r0, r0, #64	; 0x40
   2d388:	cmp	r0, #0
   2d38c:	bne	2d39c <__assert_fail@plt+0x1bc48>
   2d390:	sub	r0, fp, #76	; 0x4c
   2d394:	movw	r1, #10
   2d398:	bl	2da94 <__assert_fail@plt+0x1c340>
   2d39c:	ldr	r0, [fp, #-8]
   2d3a0:	ldr	r0, [r0, #128]	; 0x80
   2d3a4:	and	r0, r0, #128	; 0x80
   2d3a8:	cmp	r0, #0
   2d3ac:	beq	2d3bc <__assert_fail@plt+0x1bc68>
   2d3b0:	sub	r0, fp, #76	; 0x4c
   2d3b4:	movw	r1, #0
   2d3b8:	bl	2da94 <__assert_fail@plt+0x1c340>
   2d3bc:	b	2d3c4 <__assert_fail@plt+0x1bc70>
   2d3c0:	b	2d960 <__assert_fail@plt+0x1c20c>
   2d3c4:	b	2d3c8 <__assert_fail@plt+0x1bc74>
   2d3c8:	b	2d3cc <__assert_fail@plt+0x1bc78>
   2d3cc:	b	2d3d0 <__assert_fail@plt+0x1bc7c>
   2d3d0:	ldr	r0, [sp, #92]	; 0x5c
   2d3d4:	cmp	r0, #0
   2d3d8:	beq	2d6ac <__assert_fail@plt+0x1bf58>
   2d3dc:	ldr	r0, [sp, #92]	; 0x5c
   2d3e0:	and	r0, r0, #32
   2d3e4:	cmp	r0, #0
   2d3e8:	beq	2d430 <__assert_fail@plt+0x1bcdc>
   2d3ec:	sub	r0, fp, #76	; 0x4c
   2d3f0:	movw	r1, #10
   2d3f4:	bl	289d0 <__assert_fail@plt+0x1727c>
   2d3f8:	sub	r1, fp, #76	; 0x4c
   2d3fc:	and	r0, r0, #1
   2d400:	strb	r0, [sp, #91]	; 0x5b
   2d404:	mov	r0, r1
   2d408:	bl	2d9e4 <__assert_fail@plt+0x1c290>
   2d40c:	ldrb	r0, [sp, #91]	; 0x5b
   2d410:	tst	r0, #1
   2d414:	beq	2d428 <__assert_fail@plt+0x1bcd4>
   2d418:	sub	r0, fp, #76	; 0x4c
   2d41c:	movw	r1, #10
   2d420:	bl	21cb0 <__assert_fail@plt+0x1055c>
   2d424:	b	2d42c <__assert_fail@plt+0x1bcd8>
   2d428:	b	2d960 <__assert_fail@plt+0x1c20c>
   2d42c:	b	2d430 <__assert_fail@plt+0x1bcdc>
   2d430:	ldr	r0, [sp, #92]	; 0x5c
   2d434:	and	r0, r0, #128	; 0x80
   2d438:	cmp	r0, #0
   2d43c:	beq	2d44c <__assert_fail@plt+0x1bcf8>
   2d440:	sub	r0, fp, #76	; 0x4c
   2d444:	bl	2d9e4 <__assert_fail@plt+0x1c290>
   2d448:	b	2d960 <__assert_fail@plt+0x1c20c>
   2d44c:	ldr	r0, [sp, #92]	; 0x5c
   2d450:	and	r0, r0, #4
   2d454:	cmp	r0, #0
   2d458:	beq	2d578 <__assert_fail@plt+0x1be24>
   2d45c:	movw	r0, #0
   2d460:	str	r0, [sp, #84]	; 0x54
   2d464:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d468:	cmp	r0, #1
   2d46c:	bne	2d494 <__assert_fail@plt+0x1bd40>
   2d470:	ldr	r0, [fp, #-84]	; 0xffffffac
   2d474:	ldr	r0, [r0, #4]
   2d478:	lsr	r0, r0, #22
   2d47c:	and	r0, r0, #1
   2d480:	cmp	r0, #0
   2d484:	bne	2d494 <__assert_fail@plt+0x1bd40>
   2d488:	sub	r0, fp, #76	; 0x4c
   2d48c:	bl	2d9e4 <__assert_fail@plt+0x1c290>
   2d490:	b	2d960 <__assert_fail@plt+0x1c20c>
   2d494:	ldr	r0, [fp, #-8]
   2d498:	ldr	r0, [r0, #92]	; 0x5c
   2d49c:	cmp	r0, #1
   2d4a0:	ble	2d50c <__assert_fail@plt+0x1bdb8>
   2d4a4:	movw	r0, #0
   2d4a8:	str	r0, [fp, #-36]	; 0xffffffdc
   2d4ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d4b0:	cmp	r0, #8
   2d4b4:	bge	2d508 <__assert_fail@plt+0x1bdb4>
   2d4b8:	ldr	r0, [fp, #-8]
   2d4bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d4c0:	add	r2, r0, r1, lsl #2
   2d4c4:	ldr	r2, [r2, #96]	; 0x60
   2d4c8:	ldr	r0, [r0, #60]	; 0x3c
   2d4cc:	ldr	r0, [r0, r1, lsl #2]
   2d4d0:	mvn	r0, r0
   2d4d4:	orr	r0, r2, r0
   2d4d8:	sub	r2, fp, #76	; 0x4c
   2d4dc:	add	r1, r2, r1, lsl #2
   2d4e0:	ldr	r2, [r1]
   2d4e4:	and	r0, r2, r0
   2d4e8:	str	r0, [r1]
   2d4ec:	ldr	r1, [sp, #84]	; 0x54
   2d4f0:	orr	r0, r1, r0
   2d4f4:	str	r0, [sp, #84]	; 0x54
   2d4f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d4fc:	add	r0, r0, #1
   2d500:	str	r0, [fp, #-36]	; 0xffffffdc
   2d504:	b	2d4ac <__assert_fail@plt+0x1bd58>
   2d508:	b	2d564 <__assert_fail@plt+0x1be10>
   2d50c:	movw	r0, #0
   2d510:	str	r0, [fp, #-36]	; 0xffffffdc
   2d514:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d518:	cmp	r0, #8
   2d51c:	bge	2d560 <__assert_fail@plt+0x1be0c>
   2d520:	ldr	r0, [fp, #-8]
   2d524:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d528:	add	r0, r0, r1, lsl #2
   2d52c:	ldr	r0, [r0, #96]	; 0x60
   2d530:	sub	r2, fp, #76	; 0x4c
   2d534:	add	r1, r2, r1, lsl #2
   2d538:	ldr	r2, [r1]
   2d53c:	and	r0, r2, r0
   2d540:	str	r0, [r1]
   2d544:	ldr	r1, [sp, #84]	; 0x54
   2d548:	orr	r0, r1, r0
   2d54c:	str	r0, [sp, #84]	; 0x54
   2d550:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d554:	add	r0, r0, #1
   2d558:	str	r0, [fp, #-36]	; 0xffffffdc
   2d55c:	b	2d514 <__assert_fail@plt+0x1bdc0>
   2d560:	b	2d564 <__assert_fail@plt+0x1be10>
   2d564:	ldr	r0, [sp, #84]	; 0x54
   2d568:	cmp	r0, #0
   2d56c:	bne	2d574 <__assert_fail@plt+0x1be20>
   2d570:	b	2d960 <__assert_fail@plt+0x1c20c>
   2d574:	b	2d578 <__assert_fail@plt+0x1be24>
   2d578:	ldr	r0, [sp, #92]	; 0x5c
   2d57c:	and	r0, r0, #8
   2d580:	cmp	r0, #0
   2d584:	beq	2d6a8 <__assert_fail@plt+0x1bf54>
   2d588:	movw	r0, #0
   2d58c:	str	r0, [sp, #80]	; 0x50
   2d590:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d594:	cmp	r0, #1
   2d598:	bne	2d5c0 <__assert_fail@plt+0x1be6c>
   2d59c:	ldr	r0, [fp, #-84]	; 0xffffffac
   2d5a0:	ldr	r0, [r0, #4]
   2d5a4:	lsr	r0, r0, #22
   2d5a8:	and	r0, r0, #1
   2d5ac:	cmp	r0, #0
   2d5b0:	beq	2d5c0 <__assert_fail@plt+0x1be6c>
   2d5b4:	sub	r0, fp, #76	; 0x4c
   2d5b8:	bl	2d9e4 <__assert_fail@plt+0x1c290>
   2d5bc:	b	2d960 <__assert_fail@plt+0x1c20c>
   2d5c0:	ldr	r0, [fp, #-8]
   2d5c4:	ldr	r0, [r0, #92]	; 0x5c
   2d5c8:	cmp	r0, #1
   2d5cc:	ble	2d638 <__assert_fail@plt+0x1bee4>
   2d5d0:	movw	r0, #0
   2d5d4:	str	r0, [fp, #-36]	; 0xffffffdc
   2d5d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d5dc:	cmp	r0, #8
   2d5e0:	bge	2d634 <__assert_fail@plt+0x1bee0>
   2d5e4:	ldr	r0, [fp, #-8]
   2d5e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d5ec:	add	r2, r0, r1, lsl #2
   2d5f0:	ldr	r2, [r2, #96]	; 0x60
   2d5f4:	ldr	r0, [r0, #60]	; 0x3c
   2d5f8:	ldr	r0, [r0, r1, lsl #2]
   2d5fc:	and	r0, r2, r0
   2d600:	mvn	r0, r0
   2d604:	sub	r2, fp, #76	; 0x4c
   2d608:	add	r1, r2, r1, lsl #2
   2d60c:	ldr	r2, [r1]
   2d610:	and	r0, r2, r0
   2d614:	str	r0, [r1]
   2d618:	ldr	r1, [sp, #80]	; 0x50
   2d61c:	orr	r0, r1, r0
   2d620:	str	r0, [sp, #80]	; 0x50
   2d624:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d628:	add	r0, r0, #1
   2d62c:	str	r0, [fp, #-36]	; 0xffffffdc
   2d630:	b	2d5d8 <__assert_fail@plt+0x1be84>
   2d634:	b	2d694 <__assert_fail@plt+0x1bf40>
   2d638:	movw	r0, #0
   2d63c:	str	r0, [fp, #-36]	; 0xffffffdc
   2d640:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d644:	cmp	r0, #8
   2d648:	bge	2d690 <__assert_fail@plt+0x1bf3c>
   2d64c:	ldr	r0, [fp, #-8]
   2d650:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d654:	add	r0, r0, r1, lsl #2
   2d658:	ldr	r0, [r0, #96]	; 0x60
   2d65c:	mvn	r0, r0
   2d660:	sub	r2, fp, #76	; 0x4c
   2d664:	add	r1, r2, r1, lsl #2
   2d668:	ldr	r2, [r1]
   2d66c:	and	r0, r2, r0
   2d670:	str	r0, [r1]
   2d674:	ldr	r1, [sp, #80]	; 0x50
   2d678:	orr	r0, r1, r0
   2d67c:	str	r0, [sp, #80]	; 0x50
   2d680:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d684:	add	r0, r0, #1
   2d688:	str	r0, [fp, #-36]	; 0xffffffdc
   2d68c:	b	2d640 <__assert_fail@plt+0x1beec>
   2d690:	b	2d694 <__assert_fail@plt+0x1bf40>
   2d694:	ldr	r0, [sp, #80]	; 0x50
   2d698:	cmp	r0, #0
   2d69c:	bne	2d6a4 <__assert_fail@plt+0x1bf50>
   2d6a0:	b	2d960 <__assert_fail@plt+0x1c20c>
   2d6a4:	b	2d6a8 <__assert_fail@plt+0x1bf54>
   2d6a8:	b	2d6ac <__assert_fail@plt+0x1bf58>
   2d6ac:	movw	r0, #0
   2d6b0:	str	r0, [fp, #-36]	; 0xffffffdc
   2d6b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d6b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d6bc:	cmp	r0, r1
   2d6c0:	bge	2d8e8 <__assert_fail@plt+0x1c194>
   2d6c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2d6c8:	cmp	r0, #1
   2d6cc:	bne	2d6f4 <__assert_fail@plt+0x1bfa0>
   2d6d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d6d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d6d8:	add	r0, r0, r1, lsl #5
   2d6dc:	ldr	r1, [fp, #-84]	; 0xffffffac
   2d6e0:	ldrb	r1, [r1]
   2d6e4:	bl	289d0 <__assert_fail@plt+0x1727c>
   2d6e8:	tst	r0, #1
   2d6ec:	bne	2d6f4 <__assert_fail@plt+0x1bfa0>
   2d6f0:	b	2d8d8 <__assert_fail@plt+0x1c184>
   2d6f4:	movw	r0, #0
   2d6f8:	str	r0, [sp, #12]
   2d6fc:	str	r0, [fp, #-40]	; 0xffffffd8
   2d700:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d704:	cmp	r0, #8
   2d708:	bge	2d754 <__assert_fail@plt+0x1c000>
   2d70c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d710:	sub	r1, fp, #76	; 0x4c
   2d714:	ldr	r1, [r1, r0, lsl #2]
   2d718:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d71c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d720:	add	r2, r2, r3, lsl #5
   2d724:	ldr	r2, [r2, r0, lsl #2]
   2d728:	and	r1, r1, r2
   2d72c:	add	r2, sp, #48	; 0x30
   2d730:	add	r0, r2, r0, lsl #2
   2d734:	str	r1, [r0]
   2d738:	ldr	r0, [sp, #12]
   2d73c:	orr	r0, r0, r1
   2d740:	str	r0, [sp, #12]
   2d744:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d748:	add	r0, r0, #1
   2d74c:	str	r0, [fp, #-40]	; 0xffffffd8
   2d750:	b	2d700 <__assert_fail@plt+0x1bfac>
   2d754:	ldr	r0, [sp, #12]
   2d758:	cmp	r0, #0
   2d75c:	bne	2d764 <__assert_fail@plt+0x1c010>
   2d760:	b	2d8d8 <__assert_fail@plt+0x1c184>
   2d764:	movw	r0, #0
   2d768:	str	r0, [sp, #4]
   2d76c:	str	r0, [sp, #8]
   2d770:	str	r0, [fp, #-40]	; 0xffffffd8
   2d774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d778:	cmp	r0, #8
   2d77c:	bge	2d7f4 <__assert_fail@plt+0x1c0a0>
   2d780:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d784:	sub	r1, fp, #76	; 0x4c
   2d788:	ldr	r2, [r1, r0, lsl #2]
   2d78c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d790:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2d794:	add	r3, r3, ip, lsl #5
   2d798:	ldr	r3, [r3, r0, lsl #2]
   2d79c:	bic	r2, r3, r2
   2d7a0:	add	r3, sp, #16
   2d7a4:	str	r2, [r3, r0, lsl #2]
   2d7a8:	ldr	r0, [sp, #8]
   2d7ac:	orr	r0, r0, r2
   2d7b0:	str	r0, [sp, #8]
   2d7b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d7b8:	add	r2, r1, r0, lsl #2
   2d7bc:	ldr	r1, [r1, r0, lsl #2]
   2d7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d7c4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2d7c8:	add	r3, r3, ip, lsl #5
   2d7cc:	ldr	r0, [r3, r0, lsl #2]
   2d7d0:	bic	r0, r1, r0
   2d7d4:	str	r0, [r2]
   2d7d8:	ldr	r1, [sp, #4]
   2d7dc:	orr	r0, r1, r0
   2d7e0:	str	r0, [sp, #4]
   2d7e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d7e8:	add	r0, r0, #1
   2d7ec:	str	r0, [fp, #-40]	; 0xffffffd8
   2d7f0:	b	2d774 <__assert_fail@plt+0x1c020>
   2d7f4:	ldr	r0, [sp, #8]
   2d7f8:	cmp	r0, #0
   2d7fc:	beq	2d87c <__assert_fail@plt+0x1c128>
   2d800:	add	r1, sp, #48	; 0x30
   2d804:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d808:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2d80c:	add	r0, r0, r2, lsl #5
   2d810:	add	r2, sp, #16
   2d814:	str	r1, [sp]
   2d818:	mov	r1, r2
   2d81c:	bl	2dadc <__assert_fail@plt+0x1c388>
   2d820:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d824:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d828:	add	r0, r0, r1, lsl #5
   2d82c:	ldr	r1, [sp]
   2d830:	bl	2dadc <__assert_fail@plt+0x1c388>
   2d834:	ldr	r0, [fp, #-16]
   2d838:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d83c:	movw	r2, #12
   2d840:	mul	r1, r1, r2
   2d844:	add	r0, r0, r1
   2d848:	ldr	r1, [fp, #-16]
   2d84c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d850:	mul	r2, r3, r2
   2d854:	add	r1, r1, r2
   2d858:	bl	25c60 <__assert_fail@plt+0x1450c>
   2d85c:	str	r0, [fp, #-24]	; 0xffffffe8
   2d860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d864:	cmp	r0, #0
   2d868:	beq	2d870 <__assert_fail@plt+0x1c11c>
   2d86c:	b	2d98c <__assert_fail@plt+0x1c238>
   2d870:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d874:	add	r0, r0, #1
   2d878:	str	r0, [fp, #-44]	; 0xffffffd4
   2d87c:	ldr	r0, [fp, #-16]
   2d880:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d884:	add	r1, r1, r1, lsl #1
   2d888:	add	r0, r0, r1, lsl #2
   2d88c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2d890:	ldr	r1, [r1, #8]
   2d894:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d898:	add	r1, r1, r2, lsl #2
   2d89c:	ldr	r1, [r1]
   2d8a0:	bl	25878 <__assert_fail@plt+0x14124>
   2d8a4:	and	r0, r0, #1
   2d8a8:	strb	r0, [fp, #-25]	; 0xffffffe7
   2d8ac:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   2d8b0:	mvn	r1, #0
   2d8b4:	eor	r0, r0, r1
   2d8b8:	tst	r0, #1
   2d8bc:	beq	2d8c4 <__assert_fail@plt+0x1c170>
   2d8c0:	b	2d98c <__assert_fail@plt+0x1c238>
   2d8c4:	ldr	r0, [sp, #4]
   2d8c8:	cmp	r0, #0
   2d8cc:	bne	2d8d4 <__assert_fail@plt+0x1c180>
   2d8d0:	b	2d8e8 <__assert_fail@plt+0x1c194>
   2d8d4:	b	2d8d8 <__assert_fail@plt+0x1c184>
   2d8d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d8dc:	add	r0, r0, #1
   2d8e0:	str	r0, [fp, #-36]	; 0xffffffdc
   2d8e4:	b	2d6b4 <__assert_fail@plt+0x1bf60>
   2d8e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d8ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d8f0:	cmp	r0, r1
   2d8f4:	bne	2d95c <__assert_fail@plt+0x1c208>
   2d8f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d8fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d900:	add	r0, r0, r1, lsl #5
   2d904:	sub	r1, fp, #76	; 0x4c
   2d908:	bl	2dadc <__assert_fail@plt+0x1c388>
   2d90c:	ldr	r0, [fp, #-16]
   2d910:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d914:	add	r1, r1, r1, lsl #1
   2d918:	add	r0, r0, r1, lsl #2
   2d91c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2d920:	ldr	r1, [r1, #8]
   2d924:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d928:	add	r1, r1, r2, lsl #2
   2d92c:	ldr	r1, [r1]
   2d930:	bl	249ac <__assert_fail@plt+0x13258>
   2d934:	str	r0, [fp, #-24]	; 0xffffffe8
   2d938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d93c:	cmp	r0, #0
   2d940:	beq	2d948 <__assert_fail@plt+0x1c1f4>
   2d944:	b	2d98c <__assert_fail@plt+0x1c238>
   2d948:	sub	r0, fp, #76	; 0x4c
   2d94c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d950:	add	r1, r1, #1
   2d954:	str	r1, [fp, #-44]	; 0xffffffd4
   2d958:	bl	2d9e4 <__assert_fail@plt+0x1c290>
   2d95c:	b	2d960 <__assert_fail@plt+0x1c20c>
   2d960:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d964:	add	r0, r0, #1
   2d968:	str	r0, [fp, #-32]	; 0xffffffe0
   2d96c:	b	2d244 <__assert_fail@plt+0x1baf0>
   2d970:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d974:	cmp	r0, #256	; 0x100
   2d978:	bgt	2d980 <__assert_fail@plt+0x1c22c>
   2d97c:	b	2d980 <__assert_fail@plt+0x1c22c>
   2d980:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d984:	str	r0, [fp, #-4]
   2d988:	b	2d9d8 <__assert_fail@plt+0x1c284>
   2d98c:	movw	r0, #0
   2d990:	str	r0, [fp, #-36]	; 0xffffffdc
   2d994:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d998:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d99c:	cmp	r0, r1
   2d9a0:	bge	2d9d0 <__assert_fail@plt+0x1c27c>
   2d9a4:	ldr	r0, [fp, #-16]
   2d9a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d9ac:	movw	r2, #12
   2d9b0:	mul	r1, r1, r2
   2d9b4:	add	r0, r0, r1
   2d9b8:	ldr	r0, [r0, #8]
   2d9bc:	bl	15f68 <__assert_fail@plt+0x4814>
   2d9c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d9c4:	add	r0, r0, #1
   2d9c8:	str	r0, [fp, #-36]	; 0xffffffdc
   2d9cc:	b	2d994 <__assert_fail@plt+0x1c240>
   2d9d0:	mvn	r0, #0
   2d9d4:	str	r0, [fp, #-4]
   2d9d8:	ldr	r0, [fp, #-4]
   2d9dc:	mov	sp, fp
   2d9e0:	pop	{fp, pc}
   2d9e4:	push	{fp, lr}
   2d9e8:	mov	fp, sp
   2d9ec:	sub	sp, sp, #8
   2d9f0:	str	r0, [sp, #4]
   2d9f4:	ldr	r0, [sp, #4]
   2d9f8:	movw	r1, #0
   2d9fc:	and	r1, r1, #255	; 0xff
   2da00:	movw	r2, #32
   2da04:	bl	11658 <memset@plt>
   2da08:	mov	sp, fp
   2da0c:	pop	{fp, pc}
   2da10:	sub	sp, sp, #12
   2da14:	str	r0, [sp, #8]
   2da18:	str	r1, [sp, #4]
   2da1c:	movw	r0, #0
   2da20:	str	r0, [sp]
   2da24:	ldr	r0, [sp]
   2da28:	cmp	r0, #8
   2da2c:	bge	2da60 <__assert_fail@plt+0x1c30c>
   2da30:	ldr	r0, [sp, #4]
   2da34:	ldr	r1, [sp]
   2da38:	ldr	r0, [r0, r1, lsl #2]
   2da3c:	ldr	r2, [sp, #8]
   2da40:	add	r1, r2, r1, lsl #2
   2da44:	ldr	r2, [r1]
   2da48:	orr	r0, r2, r0
   2da4c:	str	r0, [r1]
   2da50:	ldr	r0, [sp]
   2da54:	add	r0, r0, #1
   2da58:	str	r0, [sp]
   2da5c:	b	2da24 <__assert_fail@plt+0x1c2d0>
   2da60:	add	sp, sp, #12
   2da64:	bx	lr
   2da68:	push	{fp, lr}
   2da6c:	mov	fp, sp
   2da70:	sub	sp, sp, #8
   2da74:	str	r0, [sp, #4]
   2da78:	ldr	r0, [sp, #4]
   2da7c:	movw	r1, #255	; 0xff
   2da80:	and	r1, r1, #255	; 0xff
   2da84:	movw	r2, #32
   2da88:	bl	11658 <memset@plt>
   2da8c:	mov	sp, fp
   2da90:	pop	{fp, pc}
   2da94:	sub	sp, sp, #8
   2da98:	str	r0, [sp, #4]
   2da9c:	str	r1, [sp]
   2daa0:	ldr	r0, [sp]
   2daa4:	asr	r1, r0, #31
   2daa8:	add	r1, r0, r1, lsr #27
   2daac:	bic	r2, r1, #31
   2dab0:	sub	r0, r0, r2
   2dab4:	mov	r2, #1
   2dab8:	mvn	r0, r2, lsl r0
   2dabc:	ldr	r2, [sp, #4]
   2dac0:	asr	r1, r1, #5
   2dac4:	add	r1, r2, r1, lsl #2
   2dac8:	ldr	r2, [r1]
   2dacc:	and	r0, r2, r0
   2dad0:	str	r0, [r1]
   2dad4:	add	sp, sp, #8
   2dad8:	bx	lr
   2dadc:	push	{fp, lr}
   2dae0:	mov	fp, sp
   2dae4:	sub	sp, sp, #8
   2dae8:	str	r0, [sp, #4]
   2daec:	str	r1, [sp]
   2daf0:	ldr	r0, [sp, #4]
   2daf4:	ldr	r1, [sp]
   2daf8:	movw	r2, #32
   2dafc:	bl	11478 <memcpy@plt>
   2db00:	mov	sp, fp
   2db04:	pop	{fp, pc}
   2db08:	sub	sp, sp, #24
   2db0c:	str	r0, [sp, #16]
   2db10:	str	r1, [sp, #12]
   2db14:	str	r2, [sp, #8]
   2db18:	ldr	r0, [sp, #16]
   2db1c:	ldr	r0, [r0]
   2db20:	ldr	r1, [sp, #12]
   2db24:	add	r0, r0, r1, lsl #3
   2db28:	ldrb	r0, [r0, #4]
   2db2c:	str	r0, [sp, #4]
   2db30:	ldr	r0, [sp, #16]
   2db34:	ldr	r0, [r0]
   2db38:	ldr	r1, [sp, #12]
   2db3c:	add	r0, r0, r1, lsl #3
   2db40:	ldr	r0, [r0, #4]
   2db44:	lsr	r0, r0, #8
   2db48:	movw	r1, #1023	; 0x3ff
   2db4c:	and	r0, r0, r1
   2db50:	str	r0, [sp]
   2db54:	ldr	r0, [sp, #4]
   2db58:	cmp	r0, #2
   2db5c:	beq	2db70 <__assert_fail@plt+0x1c41c>
   2db60:	movw	r0, #0
   2db64:	and	r0, r0, #1
   2db68:	strb	r0, [sp, #23]
   2db6c:	b	2dc28 <__assert_fail@plt+0x1c4d4>
   2db70:	ldr	r0, [sp]
   2db74:	cmp	r0, #0
   2db78:	bne	2db8c <__assert_fail@plt+0x1c438>
   2db7c:	movw	r0, #1
   2db80:	and	r0, r0, #1
   2db84:	strb	r0, [sp, #23]
   2db88:	b	2dc28 <__assert_fail@plt+0x1c4d4>
   2db8c:	ldr	r0, [sp]
   2db90:	and	r0, r0, #4
   2db94:	cmp	r0, #0
   2db98:	beq	2dbac <__assert_fail@plt+0x1c458>
   2db9c:	ldr	r0, [sp, #8]
   2dba0:	and	r0, r0, #1
   2dba4:	cmp	r0, #0
   2dba8:	beq	2dc0c <__assert_fail@plt+0x1c4b8>
   2dbac:	ldr	r0, [sp]
   2dbb0:	and	r0, r0, #8
   2dbb4:	cmp	r0, #0
   2dbb8:	beq	2dbcc <__assert_fail@plt+0x1c478>
   2dbbc:	ldr	r0, [sp, #8]
   2dbc0:	and	r0, r0, #1
   2dbc4:	cmp	r0, #0
   2dbc8:	bne	2dc0c <__assert_fail@plt+0x1c4b8>
   2dbcc:	ldr	r0, [sp]
   2dbd0:	and	r0, r0, #32
   2dbd4:	cmp	r0, #0
   2dbd8:	beq	2dbec <__assert_fail@plt+0x1c498>
   2dbdc:	ldr	r0, [sp, #8]
   2dbe0:	and	r0, r0, #2
   2dbe4:	cmp	r0, #0
   2dbe8:	beq	2dc0c <__assert_fail@plt+0x1c4b8>
   2dbec:	ldr	r0, [sp]
   2dbf0:	and	r0, r0, #128	; 0x80
   2dbf4:	cmp	r0, #0
   2dbf8:	beq	2dc1c <__assert_fail@plt+0x1c4c8>
   2dbfc:	ldr	r0, [sp, #8]
   2dc00:	and	r0, r0, #8
   2dc04:	cmp	r0, #0
   2dc08:	bne	2dc1c <__assert_fail@plt+0x1c4c8>
   2dc0c:	movw	r0, #0
   2dc10:	and	r0, r0, #1
   2dc14:	strb	r0, [sp, #23]
   2dc18:	b	2dc28 <__assert_fail@plt+0x1c4d4>
   2dc1c:	movw	r0, #1
   2dc20:	and	r0, r0, #1
   2dc24:	strb	r0, [sp, #23]
   2dc28:	ldrb	r0, [sp, #23]
   2dc2c:	and	r0, r0, #1
   2dc30:	add	sp, sp, #24
   2dc34:	bx	lr
   2dc38:	push	{fp, lr}
   2dc3c:	mov	fp, sp
   2dc40:	sub	sp, sp, #24
   2dc44:	ldr	ip, [fp, #8]
   2dc48:	str	r0, [fp, #-4]
   2dc4c:	str	r1, [fp, #-8]
   2dc50:	str	r2, [sp, #12]
   2dc54:	str	r3, [sp, #8]
   2dc58:	ldr	r0, [fp, #-8]
   2dc5c:	ldr	r1, [fp, #-4]
   2dc60:	str	r0, [r1]
   2dc64:	ldr	r0, [sp, #12]
   2dc68:	ldr	r1, [fp, #-4]
   2dc6c:	str	r0, [r1, #4]
   2dc70:	ldr	r0, [sp, #8]
   2dc74:	ldr	r1, [fp, #-4]
   2dc78:	str	r0, [r1, #8]
   2dc7c:	ldr	r0, [fp, #8]
   2dc80:	ldr	r1, [fp, #-4]
   2dc84:	str	r0, [r1, #12]
   2dc88:	ldr	r0, [fp, #-4]
   2dc8c:	add	r0, r0, #16
   2dc90:	movw	r1, #0
   2dc94:	and	r1, r1, #255	; 0xff
   2dc98:	movw	r2, #12
   2dc9c:	str	ip, [sp, #4]
   2dca0:	bl	11658 <memset@plt>
   2dca4:	mov	sp, fp
   2dca8:	pop	{fp, pc}
   2dcac:	push	{fp, lr}
   2dcb0:	mov	fp, sp
   2dcb4:	sub	sp, sp, #40	; 0x28
   2dcb8:	str	r0, [fp, #-8]
   2dcbc:	str	r1, [fp, #-12]
   2dcc0:	movw	r0, #0
   2dcc4:	str	r0, [sp, #20]
   2dcc8:	ldr	r1, [fp, #-12]
   2dccc:	ldr	r1, [r1, #12]
   2dcd0:	str	r1, [sp, #16]
   2dcd4:	ldr	r1, [fp, #-8]
   2dcd8:	ldr	r1, [r1, #100]	; 0x64
   2dcdc:	cmp	r1, r0
   2dce0:	beq	2dd08 <__assert_fail@plt+0x1c5b4>
   2dce4:	ldr	r0, [fp, #-8]
   2dce8:	ldr	r0, [r0, #100]	; 0x64
   2dcec:	ldr	r1, [sp, #16]
   2dcf0:	add	r0, r0, r1, lsl #2
   2dcf4:	ldr	r0, [r0]
   2dcf8:	movw	r1, #0
   2dcfc:	cmp	r0, r1
   2dd00:	beq	2dd08 <__assert_fail@plt+0x1c5b4>
   2dd04:	b	2dd08 <__assert_fail@plt+0x1c5b4>
   2dd08:	ldr	r0, [fp, #-12]
   2dd0c:	ldr	r1, [r0, #8]
   2dd10:	add	r0, sp, #4
   2dd14:	bl	249ac <__assert_fail@plt+0x13258>
   2dd18:	str	r0, [fp, #-16]
   2dd1c:	ldr	r0, [fp, #-16]
   2dd20:	cmp	r0, #0
   2dd24:	beq	2dd34 <__assert_fail@plt+0x1c5e0>
   2dd28:	ldr	r0, [fp, #-16]
   2dd2c:	str	r0, [fp, #-4]
   2dd30:	b	2de98 <__assert_fail@plt+0x1c744>
   2dd34:	ldr	r0, [fp, #-8]
   2dd38:	ldr	r1, [fp, #-12]
   2dd3c:	ldr	r2, [sp, #16]
   2dd40:	add	r3, sp, #4
   2dd44:	bl	2dfec <__assert_fail@plt+0x1c898>
   2dd48:	str	r0, [fp, #-16]
   2dd4c:	ldr	r0, [fp, #-16]
   2dd50:	cmp	r0, #0
   2dd54:	beq	2dd5c <__assert_fail@plt+0x1c608>
   2dd58:	b	2de88 <__assert_fail@plt+0x1c734>
   2dd5c:	b	2dd60 <__assert_fail@plt+0x1c60c>
   2dd60:	ldr	r0, [sp, #16]
   2dd64:	cmp	r0, #0
   2dd68:	ble	2de80 <__assert_fail@plt+0x1c72c>
   2dd6c:	ldr	r0, [fp, #-12]
   2dd70:	ldr	r0, [r0]
   2dd74:	ldr	r1, [sp, #16]
   2dd78:	add	r0, r0, r1, lsl #2
   2dd7c:	ldr	r0, [r0]
   2dd80:	movw	r1, #0
   2dd84:	cmp	r0, r1
   2dd88:	bne	2dd9c <__assert_fail@plt+0x1c648>
   2dd8c:	ldr	r0, [sp, #20]
   2dd90:	add	r0, r0, #1
   2dd94:	str	r0, [sp]
   2dd98:	b	2dda8 <__assert_fail@plt+0x1c654>
   2dd9c:	movw	r0, #0
   2dda0:	str	r0, [sp]
   2dda4:	b	2dda8 <__assert_fail@plt+0x1c654>
   2dda8:	ldr	r0, [sp]
   2ddac:	str	r0, [sp, #20]
   2ddb0:	ldr	r0, [sp, #20]
   2ddb4:	ldr	r1, [fp, #-8]
   2ddb8:	ldr	r1, [r1, #120]	; 0x78
   2ddbc:	cmp	r0, r1
   2ddc0:	ble	2ddf4 <__assert_fail@plt+0x1c6a0>
   2ddc4:	ldr	r0, [fp, #-12]
   2ddc8:	ldr	r0, [r0]
   2ddcc:	ldr	r1, [sp, #16]
   2ddd0:	lsl	r2, r1, #2
   2ddd4:	movw	r1, #0
   2ddd8:	and	r1, r1, #255	; 0xff
   2dddc:	bl	11658 <memset@plt>
   2dde0:	ldr	r0, [sp, #12]
   2dde4:	bl	15f68 <__assert_fail@plt+0x4814>
   2dde8:	movw	r0, #0
   2ddec:	str	r0, [fp, #-4]
   2ddf0:	b	2de98 <__assert_fail@plt+0x1c744>
   2ddf4:	mov	r0, #0
   2ddf8:	str	r0, [sp, #8]
   2ddfc:	ldr	r0, [sp, #16]
   2de00:	sub	r0, r0, #1
   2de04:	str	r0, [sp, #16]
   2de08:	ldr	r0, [fp, #-8]
   2de0c:	ldr	r0, [r0, #100]	; 0x64
   2de10:	ldr	r1, [sp, #16]
   2de14:	add	r0, r0, r1, lsl #2
   2de18:	ldr	r0, [r0]
   2de1c:	movw	r1, #0
   2de20:	cmp	r0, r1
   2de24:	beq	2de54 <__assert_fail@plt+0x1c700>
   2de28:	ldr	r0, [fp, #-8]
   2de2c:	ldr	r1, [fp, #-12]
   2de30:	ldr	r2, [sp, #16]
   2de34:	add	r3, sp, #4
   2de38:	bl	2e1f0 <__assert_fail@plt+0x1ca9c>
   2de3c:	str	r0, [fp, #-16]
   2de40:	ldr	r0, [fp, #-16]
   2de44:	cmp	r0, #0
   2de48:	beq	2de50 <__assert_fail@plt+0x1c6fc>
   2de4c:	b	2de88 <__assert_fail@plt+0x1c734>
   2de50:	b	2de54 <__assert_fail@plt+0x1c700>
   2de54:	ldr	r0, [fp, #-8]
   2de58:	ldr	r1, [fp, #-12]
   2de5c:	ldr	r2, [sp, #16]
   2de60:	add	r3, sp, #4
   2de64:	bl	2dfec <__assert_fail@plt+0x1c898>
   2de68:	str	r0, [fp, #-16]
   2de6c:	ldr	r0, [fp, #-16]
   2de70:	cmp	r0, #0
   2de74:	beq	2de7c <__assert_fail@plt+0x1c728>
   2de78:	b	2de88 <__assert_fail@plt+0x1c734>
   2de7c:	b	2dd60 <__assert_fail@plt+0x1c60c>
   2de80:	movw	r0, #0
   2de84:	str	r0, [fp, #-16]
   2de88:	ldr	r0, [sp, #12]
   2de8c:	bl	15f68 <__assert_fail@plt+0x4814>
   2de90:	ldr	r0, [fp, #-16]
   2de94:	str	r0, [fp, #-4]
   2de98:	ldr	r0, [fp, #-4]
   2de9c:	mov	sp, fp
   2dea0:	pop	{fp, pc}
   2dea4:	push	{fp, lr}
   2dea8:	mov	fp, sp
   2deac:	sub	sp, sp, #48	; 0x30
   2deb0:	str	r0, [fp, #-8]
   2deb4:	str	r1, [fp, #-12]
   2deb8:	str	r2, [fp, #-16]
   2debc:	str	r3, [fp, #-20]	; 0xffffffec
   2dec0:	movw	r0, #0
   2dec4:	str	r0, [sp, #24]
   2dec8:	ldr	r0, [sp, #24]
   2decc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ded0:	cmp	r0, r1
   2ded4:	bge	2dfd8 <__assert_fail@plt+0x1c884>
   2ded8:	ldr	r0, [fp, #-12]
   2dedc:	ldr	r1, [sp, #24]
   2dee0:	add	r0, r0, r1, lsl #2
   2dee4:	ldr	r0, [r0]
   2dee8:	movw	r1, #0
   2deec:	cmp	r0, r1
   2def0:	bne	2df10 <__assert_fail@plt+0x1c7bc>
   2def4:	ldr	r0, [fp, #-16]
   2def8:	ldr	r1, [sp, #24]
   2defc:	ldr	r0, [r0, r1, lsl #2]
   2df00:	ldr	r2, [fp, #-12]
   2df04:	add	r1, r2, r1, lsl #2
   2df08:	str	r0, [r1]
   2df0c:	b	2dfc4 <__assert_fail@plt+0x1c870>
   2df10:	ldr	r0, [fp, #-16]
   2df14:	ldr	r1, [sp, #24]
   2df18:	add	r0, r0, r1, lsl #2
   2df1c:	ldr	r0, [r0]
   2df20:	movw	r1, #0
   2df24:	cmp	r0, r1
   2df28:	beq	2dfc0 <__assert_fail@plt+0x1c86c>
   2df2c:	ldr	r0, [fp, #-12]
   2df30:	ldr	r1, [sp, #24]
   2df34:	ldr	r0, [r0, r1, lsl #2]
   2df38:	add	r0, r0, #4
   2df3c:	ldr	r2, [fp, #-16]
   2df40:	add	r1, r2, r1, lsl #2
   2df44:	ldr	r1, [r1]
   2df48:	add	r2, r1, #4
   2df4c:	add	r1, sp, #8
   2df50:	str	r0, [sp, #4]
   2df54:	mov	r0, r1
   2df58:	ldr	r1, [sp, #4]
   2df5c:	bl	29e54 <__assert_fail@plt+0x18700>
   2df60:	str	r0, [sp, #20]
   2df64:	ldr	r0, [sp, #20]
   2df68:	cmp	r0, #0
   2df6c:	beq	2df7c <__assert_fail@plt+0x1c828>
   2df70:	ldr	r0, [sp, #20]
   2df74:	str	r0, [fp, #-4]
   2df78:	b	2dfe0 <__assert_fail@plt+0x1c88c>
   2df7c:	ldr	r1, [fp, #-8]
   2df80:	add	r0, sp, #20
   2df84:	add	r2, sp, #8
   2df88:	bl	2ba34 <__assert_fail@plt+0x1a2e0>
   2df8c:	ldr	r1, [fp, #-12]
   2df90:	ldr	r2, [sp, #24]
   2df94:	add	r1, r1, r2, lsl #2
   2df98:	str	r0, [r1]
   2df9c:	ldr	r0, [sp, #16]
   2dfa0:	bl	15f68 <__assert_fail@plt+0x4814>
   2dfa4:	ldr	r0, [sp, #20]
   2dfa8:	cmp	r0, #0
   2dfac:	beq	2dfbc <__assert_fail@plt+0x1c868>
   2dfb0:	ldr	r0, [sp, #20]
   2dfb4:	str	r0, [fp, #-4]
   2dfb8:	b	2dfe0 <__assert_fail@plt+0x1c88c>
   2dfbc:	b	2dfc0 <__assert_fail@plt+0x1c86c>
   2dfc0:	b	2dfc4 <__assert_fail@plt+0x1c870>
   2dfc4:	b	2dfc8 <__assert_fail@plt+0x1c874>
   2dfc8:	ldr	r0, [sp, #24]
   2dfcc:	add	r0, r0, #1
   2dfd0:	str	r0, [sp, #24]
   2dfd4:	b	2dec8 <__assert_fail@plt+0x1c774>
   2dfd8:	movw	r0, #0
   2dfdc:	str	r0, [fp, #-4]
   2dfe0:	ldr	r0, [fp, #-4]
   2dfe4:	mov	sp, fp
   2dfe8:	pop	{fp, pc}
   2dfec:	push	{fp, lr}
   2dff0:	mov	fp, sp
   2dff4:	sub	sp, sp, #48	; 0x30
   2dff8:	str	r0, [fp, #-8]
   2dffc:	str	r1, [fp, #-12]
   2e000:	str	r2, [fp, #-16]
   2e004:	str	r3, [fp, #-20]	; 0xffffffec
   2e008:	ldr	r0, [fp, #-8]
   2e00c:	ldr	r0, [r0, #84]	; 0x54
   2e010:	str	r0, [sp, #24]
   2e014:	mov	r0, #0
   2e018:	str	r0, [sp, #20]
   2e01c:	ldr	r0, [fp, #-8]
   2e020:	ldr	r0, [r0, #100]	; 0x64
   2e024:	ldr	r1, [fp, #-16]
   2e028:	add	r0, r0, r1, lsl #2
   2e02c:	ldr	r0, [r0]
   2e030:	movw	r1, #0
   2e034:	cmp	r0, r1
   2e038:	bne	2e048 <__assert_fail@plt+0x1c8f4>
   2e03c:	movw	r0, #0
   2e040:	str	r0, [sp, #12]
   2e044:	b	2e064 <__assert_fail@plt+0x1c910>
   2e048:	ldr	r0, [fp, #-8]
   2e04c:	ldr	r0, [r0, #100]	; 0x64
   2e050:	ldr	r1, [fp, #-16]
   2e054:	add	r0, r0, r1, lsl #2
   2e058:	ldr	r0, [r0]
   2e05c:	add	r0, r0, #4
   2e060:	str	r0, [sp, #12]
   2e064:	ldr	r0, [sp, #12]
   2e068:	str	r0, [sp, #16]
   2e06c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e070:	ldr	r0, [r0, #4]
   2e074:	cmp	r0, #0
   2e078:	bne	2e098 <__assert_fail@plt+0x1c944>
   2e07c:	ldr	r0, [fp, #-12]
   2e080:	ldr	r0, [r0]
   2e084:	ldr	r1, [fp, #-16]
   2e088:	add	r0, r0, r1, lsl #2
   2e08c:	movw	r1, #0
   2e090:	str	r1, [r0]
   2e094:	b	2e174 <__assert_fail@plt+0x1ca20>
   2e098:	ldr	r0, [sp, #16]
   2e09c:	movw	r1, #0
   2e0a0:	cmp	r0, r1
   2e0a4:	beq	2e134 <__assert_fail@plt+0x1c9e0>
   2e0a8:	ldr	r0, [sp, #24]
   2e0ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e0b0:	ldr	r2, [sp, #16]
   2e0b4:	bl	2e444 <__assert_fail@plt+0x1ccf0>
   2e0b8:	str	r0, [sp, #20]
   2e0bc:	ldr	r0, [sp, #20]
   2e0c0:	cmp	r0, #0
   2e0c4:	beq	2e0d4 <__assert_fail@plt+0x1c980>
   2e0c8:	ldr	r0, [sp, #20]
   2e0cc:	str	r0, [fp, #-4]
   2e0d0:	b	2e1e4 <__assert_fail@plt+0x1ca90>
   2e0d4:	ldr	r0, [fp, #-12]
   2e0d8:	ldr	r0, [r0, #20]
   2e0dc:	cmp	r0, #0
   2e0e0:	beq	2e130 <__assert_fail@plt+0x1c9dc>
   2e0e4:	ldr	r0, [sp, #24]
   2e0e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e0ec:	ldr	r2, [sp, #16]
   2e0f0:	ldr	r3, [fp, #-12]
   2e0f4:	add	r3, r3, #16
   2e0f8:	ldr	ip, [fp, #-8]
   2e0fc:	ldr	ip, [ip, #116]	; 0x74
   2e100:	ldr	lr, [fp, #-16]
   2e104:	str	ip, [sp]
   2e108:	str	lr, [sp, #4]
   2e10c:	bl	2e578 <__assert_fail@plt+0x1ce24>
   2e110:	str	r0, [sp, #20]
   2e114:	ldr	r0, [sp, #20]
   2e118:	cmp	r0, #0
   2e11c:	beq	2e12c <__assert_fail@plt+0x1c9d8>
   2e120:	ldr	r0, [sp, #20]
   2e124:	str	r0, [fp, #-4]
   2e128:	b	2e1e4 <__assert_fail@plt+0x1ca90>
   2e12c:	b	2e130 <__assert_fail@plt+0x1c9dc>
   2e130:	b	2e134 <__assert_fail@plt+0x1c9e0>
   2e134:	ldr	r1, [sp, #24]
   2e138:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e13c:	add	r0, sp, #20
   2e140:	bl	2ba34 <__assert_fail@plt+0x1a2e0>
   2e144:	ldr	r1, [fp, #-12]
   2e148:	ldr	r1, [r1]
   2e14c:	ldr	r2, [fp, #-16]
   2e150:	add	r1, r1, r2, lsl #2
   2e154:	str	r0, [r1]
   2e158:	ldr	r0, [sp, #20]
   2e15c:	cmp	r0, #0
   2e160:	beq	2e170 <__assert_fail@plt+0x1ca1c>
   2e164:	ldr	r0, [sp, #20]
   2e168:	str	r0, [fp, #-4]
   2e16c:	b	2e1e4 <__assert_fail@plt+0x1ca90>
   2e170:	b	2e174 <__assert_fail@plt+0x1ca20>
   2e174:	ldr	r0, [sp, #16]
   2e178:	movw	r1, #0
   2e17c:	cmp	r0, r1
   2e180:	beq	2e1dc <__assert_fail@plt+0x1ca88>
   2e184:	ldr	r0, [fp, #-8]
   2e188:	ldr	r0, [r0, #100]	; 0x64
   2e18c:	ldr	r1, [fp, #-16]
   2e190:	ldr	r0, [r0, r1, lsl #2]
   2e194:	ldrb	r0, [r0, #52]	; 0x34
   2e198:	ubfx	r0, r0, #6, #1
   2e19c:	and	r0, r0, #255	; 0xff
   2e1a0:	cmp	r0, #0
   2e1a4:	beq	2e1dc <__assert_fail@plt+0x1ca88>
   2e1a8:	ldr	r0, [fp, #-8]
   2e1ac:	ldr	r1, [fp, #-12]
   2e1b0:	ldr	r2, [fp, #-16]
   2e1b4:	ldr	r3, [sp, #16]
   2e1b8:	bl	2e940 <__assert_fail@plt+0x1d1ec>
   2e1bc:	str	r0, [sp, #20]
   2e1c0:	ldr	r0, [sp, #20]
   2e1c4:	cmp	r0, #0
   2e1c8:	beq	2e1d8 <__assert_fail@plt+0x1ca84>
   2e1cc:	ldr	r0, [sp, #20]
   2e1d0:	str	r0, [fp, #-4]
   2e1d4:	b	2e1e4 <__assert_fail@plt+0x1ca90>
   2e1d8:	b	2e1dc <__assert_fail@plt+0x1ca88>
   2e1dc:	movw	r0, #0
   2e1e0:	str	r0, [fp, #-4]
   2e1e4:	ldr	r0, [fp, #-4]
   2e1e8:	mov	sp, fp
   2e1ec:	pop	{fp, pc}
   2e1f0:	push	{fp, lr}
   2e1f4:	mov	fp, sp
   2e1f8:	sub	sp, sp, #56	; 0x38
   2e1fc:	str	r0, [fp, #-8]
   2e200:	str	r1, [fp, #-12]
   2e204:	str	r2, [fp, #-16]
   2e208:	str	r3, [fp, #-20]	; 0xffffffec
   2e20c:	ldr	r0, [fp, #-8]
   2e210:	ldr	r0, [r0, #84]	; 0x54
   2e214:	str	r0, [fp, #-24]	; 0xffffffe8
   2e218:	ldr	r0, [fp, #-8]
   2e21c:	ldr	r0, [r0, #100]	; 0x64
   2e220:	ldr	r1, [fp, #-16]
   2e224:	add	r0, r0, r1, lsl #2
   2e228:	ldr	r0, [r0]
   2e22c:	add	r0, r0, #16
   2e230:	str	r0, [sp, #28]
   2e234:	movw	r0, #0
   2e238:	str	r0, [sp, #24]
   2e23c:	ldr	r0, [sp, #24]
   2e240:	ldr	r1, [sp, #28]
   2e244:	ldr	r1, [r1, #4]
   2e248:	cmp	r0, r1
   2e24c:	bge	2e430 <__assert_fail@plt+0x1ccdc>
   2e250:	ldr	r0, [sp, #28]
   2e254:	ldr	r0, [r0, #8]
   2e258:	ldr	r1, [sp, #24]
   2e25c:	ldr	r0, [r0, r1, lsl #2]
   2e260:	str	r0, [sp, #20]
   2e264:	mov	r0, #0
   2e268:	str	r0, [sp, #16]
   2e26c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e270:	ldr	r0, [r0]
   2e274:	ldr	r1, [sp, #20]
   2e278:	add	r0, r0, r1, lsl #3
   2e27c:	ldr	r0, [r0, #4]
   2e280:	and	r0, r0, #255	; 0xff
   2e284:	and	r0, r0, #8
   2e288:	cmp	r0, #0
   2e28c:	bne	2e294 <__assert_fail@plt+0x1cb40>
   2e290:	b	2e294 <__assert_fail@plt+0x1cb40>
   2e294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e298:	ldr	r0, [r0]
   2e29c:	ldr	r1, [sp, #20]
   2e2a0:	add	r0, r0, r1, lsl #3
   2e2a4:	ldr	r0, [r0, #4]
   2e2a8:	lsr	r0, r0, #20
   2e2ac:	and	r0, r0, #1
   2e2b0:	cmp	r0, #0
   2e2b4:	beq	2e2dc <__assert_fail@plt+0x1cb88>
   2e2b8:	ldr	r0, [fp, #-8]
   2e2bc:	ldr	r1, [fp, #-12]
   2e2c0:	ldr	r2, [sp, #20]
   2e2c4:	ldr	r3, [fp, #-16]
   2e2c8:	ldr	ip, [fp, #-12]
   2e2cc:	ldr	ip, [ip, #12]
   2e2d0:	str	ip, [sp]
   2e2d4:	bl	2f9cc <__assert_fail@plt+0x1e278>
   2e2d8:	str	r0, [sp, #16]
   2e2dc:	ldr	r0, [sp, #16]
   2e2e0:	cmp	r0, #0
   2e2e4:	bne	2e370 <__assert_fail@plt+0x1cc1c>
   2e2e8:	ldr	r0, [fp, #-8]
   2e2ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e2f0:	ldr	r1, [r1]
   2e2f4:	ldr	r2, [sp, #20]
   2e2f8:	add	r1, r1, r2, lsl #3
   2e2fc:	ldr	r2, [fp, #-16]
   2e300:	bl	2c374 <__assert_fail@plt+0x1ac20>
   2e304:	tst	r0, #1
   2e308:	beq	2e370 <__assert_fail@plt+0x1cc1c>
   2e30c:	ldr	r0, [fp, #-12]
   2e310:	ldr	r0, [r0]
   2e314:	ldr	r1, [fp, #-16]
   2e318:	add	r1, r1, #1
   2e31c:	add	r0, r0, r1, lsl #2
   2e320:	ldr	r0, [r0]
   2e324:	movw	r1, #0
   2e328:	cmp	r0, r1
   2e32c:	beq	2e370 <__assert_fail@plt+0x1cc1c>
   2e330:	ldr	r0, [fp, #-12]
   2e334:	ldr	r0, [r0]
   2e338:	ldr	r1, [fp, #-16]
   2e33c:	add	r0, r0, r1, lsl #2
   2e340:	ldr	r0, [r0, #4]
   2e344:	add	r0, r0, #4
   2e348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e34c:	ldr	r1, [r1, #12]
   2e350:	ldr	r2, [sp, #20]
   2e354:	add	r1, r1, r2, lsl #2
   2e358:	ldr	r1, [r1]
   2e35c:	bl	25d34 <__assert_fail@plt+0x145e0>
   2e360:	cmp	r0, #0
   2e364:	beq	2e370 <__assert_fail@plt+0x1cc1c>
   2e368:	movw	r0, #1
   2e36c:	str	r0, [sp, #16]
   2e370:	ldr	r0, [sp, #16]
   2e374:	cmp	r0, #0
   2e378:	bne	2e380 <__assert_fail@plt+0x1cc2c>
   2e37c:	b	2e420 <__assert_fail@plt+0x1cccc>
   2e380:	ldr	r0, [fp, #-12]
   2e384:	ldr	r0, [r0, #20]
   2e388:	cmp	r0, #0
   2e38c:	beq	2e3e8 <__assert_fail@plt+0x1cc94>
   2e390:	ldr	r0, [fp, #-16]
   2e394:	ldr	r1, [sp, #16]
   2e398:	add	r0, r0, r1
   2e39c:	str	r0, [sp, #8]
   2e3a0:	ldr	r0, [fp, #-8]
   2e3a4:	ldr	r1, [fp, #-12]
   2e3a8:	add	r1, r1, #16
   2e3ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e3b0:	ldr	r2, [r2, #12]
   2e3b4:	ldr	r3, [sp, #20]
   2e3b8:	add	r2, r2, r3, lsl #2
   2e3bc:	ldr	r2, [r2]
   2e3c0:	ldr	r3, [sp, #8]
   2e3c4:	ldr	ip, [sp, #20]
   2e3c8:	ldr	lr, [fp, #-16]
   2e3cc:	str	ip, [sp]
   2e3d0:	str	lr, [sp, #4]
   2e3d4:	bl	2f444 <__assert_fail@plt+0x1dcf0>
   2e3d8:	tst	r0, #1
   2e3dc:	beq	2e3e4 <__assert_fail@plt+0x1cc90>
   2e3e0:	b	2e420 <__assert_fail@plt+0x1cccc>
   2e3e4:	b	2e3e8 <__assert_fail@plt+0x1cc94>
   2e3e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e3ec:	ldr	r1, [sp, #20]
   2e3f0:	bl	25878 <__assert_fail@plt+0x14124>
   2e3f4:	and	r0, r0, #1
   2e3f8:	strb	r0, [sp, #15]
   2e3fc:	ldrb	r0, [sp, #15]
   2e400:	mvn	r1, #0
   2e404:	eor	r0, r0, r1
   2e408:	tst	r0, #1
   2e40c:	beq	2e41c <__assert_fail@plt+0x1ccc8>
   2e410:	movw	r0, #12
   2e414:	str	r0, [fp, #-4]
   2e418:	b	2e438 <__assert_fail@plt+0x1cce4>
   2e41c:	b	2e420 <__assert_fail@plt+0x1cccc>
   2e420:	ldr	r0, [sp, #24]
   2e424:	add	r0, r0, #1
   2e428:	str	r0, [sp, #24]
   2e42c:	b	2e23c <__assert_fail@plt+0x1cae8>
   2e430:	movw	r0, #0
   2e434:	str	r0, [fp, #-4]
   2e438:	ldr	r0, [fp, #-4]
   2e43c:	mov	sp, fp
   2e440:	pop	{fp, pc}
   2e444:	push	{fp, lr}
   2e448:	mov	fp, sp
   2e44c:	sub	sp, sp, #32
   2e450:	str	r0, [fp, #-8]
   2e454:	str	r1, [fp, #-12]
   2e458:	str	r2, [sp, #16]
   2e45c:	movw	r0, #0
   2e460:	str	r0, [sp, #12]
   2e464:	ldr	r1, [fp, #-8]
   2e468:	ldr	r2, [fp, #-12]
   2e46c:	add	r0, sp, #12
   2e470:	bl	2ba34 <__assert_fail@plt+0x1a2e0>
   2e474:	str	r0, [sp, #4]
   2e478:	ldr	r0, [sp, #12]
   2e47c:	cmp	r0, #0
   2e480:	beq	2e490 <__assert_fail@plt+0x1cd3c>
   2e484:	ldr	r0, [sp, #12]
   2e488:	str	r0, [fp, #-4]
   2e48c:	b	2e56c <__assert_fail@plt+0x1ce18>
   2e490:	ldr	r0, [sp, #4]
   2e494:	ldr	r0, [r0, #28]
   2e498:	cmp	r0, #0
   2e49c:	bne	2e554 <__assert_fail@plt+0x1ce00>
   2e4a0:	ldr	r0, [sp, #4]
   2e4a4:	add	r0, r0, #28
   2e4a8:	ldr	r1, [fp, #-12]
   2e4ac:	ldr	r1, [r1, #4]
   2e4b0:	bl	24e10 <__assert_fail@plt+0x136bc>
   2e4b4:	str	r0, [sp, #12]
   2e4b8:	ldr	r0, [sp, #12]
   2e4bc:	cmp	r0, #0
   2e4c0:	beq	2e4d0 <__assert_fail@plt+0x1cd7c>
   2e4c4:	movw	r0, #12
   2e4c8:	str	r0, [fp, #-4]
   2e4cc:	b	2e56c <__assert_fail@plt+0x1ce18>
   2e4d0:	movw	r0, #0
   2e4d4:	str	r0, [sp, #8]
   2e4d8:	ldr	r0, [sp, #8]
   2e4dc:	ldr	r1, [fp, #-12]
   2e4e0:	ldr	r1, [r1, #4]
   2e4e4:	cmp	r0, r1
   2e4e8:	bge	2e550 <__assert_fail@plt+0x1cdfc>
   2e4ec:	ldr	r0, [sp, #4]
   2e4f0:	add	r0, r0, #28
   2e4f4:	ldr	r1, [fp, #-8]
   2e4f8:	ldr	r1, [r1, #28]
   2e4fc:	ldr	r2, [fp, #-12]
   2e500:	ldr	r2, [r2, #8]
   2e504:	ldr	r3, [sp, #8]
   2e508:	add	r2, r2, r3, lsl #2
   2e50c:	ldr	r2, [r2]
   2e510:	movw	r3, #12
   2e514:	mul	r2, r2, r3
   2e518:	add	r1, r1, r2
   2e51c:	bl	25388 <__assert_fail@plt+0x13c34>
   2e520:	str	r0, [sp, #12]
   2e524:	ldr	r0, [sp, #12]
   2e528:	cmp	r0, #0
   2e52c:	beq	2e53c <__assert_fail@plt+0x1cde8>
   2e530:	movw	r0, #12
   2e534:	str	r0, [fp, #-4]
   2e538:	b	2e56c <__assert_fail@plt+0x1ce18>
   2e53c:	b	2e540 <__assert_fail@plt+0x1cdec>
   2e540:	ldr	r0, [sp, #8]
   2e544:	add	r0, r0, #1
   2e548:	str	r0, [sp, #8]
   2e54c:	b	2e4d8 <__assert_fail@plt+0x1cd84>
   2e550:	b	2e554 <__assert_fail@plt+0x1ce00>
   2e554:	ldr	r0, [fp, #-12]
   2e558:	ldr	r1, [sp, #16]
   2e55c:	ldr	r2, [sp, #4]
   2e560:	add	r2, r2, #28
   2e564:	bl	2ed70 <__assert_fail@plt+0x1d61c>
   2e568:	str	r0, [fp, #-4]
   2e56c:	ldr	r0, [fp, #-4]
   2e570:	mov	sp, fp
   2e574:	pop	{fp, pc}
   2e578:	push	{fp, lr}
   2e57c:	mov	fp, sp
   2e580:	sub	sp, sp, #72	; 0x48
   2e584:	ldr	ip, [fp, #12]
   2e588:	ldr	lr, [fp, #8]
   2e58c:	str	r0, [fp, #-8]
   2e590:	str	r1, [fp, #-12]
   2e594:	str	r2, [fp, #-16]
   2e598:	str	r3, [fp, #-20]	; 0xffffffec
   2e59c:	movw	r0, #0
   2e5a0:	str	r0, [fp, #-32]	; 0xffffffe0
   2e5a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e5a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e5ac:	ldr	r1, [r1, #4]
   2e5b0:	cmp	r0, r1
   2e5b4:	bge	2e92c <__assert_fail@plt+0x1d1d8>
   2e5b8:	ldr	r0, [fp, #8]
   2e5bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e5c0:	ldr	r1, [r1, #8]
   2e5c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e5c8:	add	r1, r1, r2, lsl #2
   2e5cc:	ldr	r1, [r1]
   2e5d0:	movw	r2, #24
   2e5d4:	mul	r1, r1, r2
   2e5d8:	add	r0, r0, r1
   2e5dc:	str	r0, [sp, #32]
   2e5e0:	ldr	r0, [fp, #12]
   2e5e4:	ldr	r1, [sp, #32]
   2e5e8:	ldr	r1, [r1, #8]
   2e5ec:	cmp	r0, r1
   2e5f0:	ble	2e608 <__assert_fail@plt+0x1ceb4>
   2e5f4:	ldr	r0, [sp, #32]
   2e5f8:	ldr	r0, [r0, #4]
   2e5fc:	ldr	r1, [fp, #12]
   2e600:	cmp	r0, r1
   2e604:	bge	2e60c <__assert_fail@plt+0x1ceb8>
   2e608:	b	2e91c <__assert_fail@plt+0x1d1c8>
   2e60c:	ldr	r0, [fp, #-8]
   2e610:	ldr	r0, [r0]
   2e614:	ldr	r1, [sp, #32]
   2e618:	ldr	r1, [r1]
   2e61c:	add	r0, r0, r1, lsl #3
   2e620:	ldr	r0, [r0]
   2e624:	str	r0, [sp, #36]	; 0x24
   2e628:	ldr	r0, [sp, #32]
   2e62c:	ldr	r0, [r0, #12]
   2e630:	ldr	r1, [fp, #12]
   2e634:	cmp	r0, r1
   2e638:	bne	2e844 <__assert_fail@plt+0x1d0f0>
   2e63c:	mvn	r0, #0
   2e640:	str	r0, [sp, #28]
   2e644:	str	r0, [sp, #24]
   2e648:	movw	r0, #0
   2e64c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e650:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e654:	ldr	r1, [fp, #-12]
   2e658:	ldr	r1, [r1, #4]
   2e65c:	cmp	r0, r1
   2e660:	bge	2e718 <__assert_fail@plt+0x1cfc4>
   2e664:	ldr	r0, [fp, #-12]
   2e668:	ldr	r0, [r0, #8]
   2e66c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e670:	ldr	r0, [r0, r1, lsl #2]
   2e674:	str	r0, [sp, #20]
   2e678:	ldr	r0, [fp, #-8]
   2e67c:	ldr	r0, [r0]
   2e680:	ldr	r1, [sp, #20]
   2e684:	add	r0, r0, r1, lsl #3
   2e688:	ldr	r0, [r0, #4]
   2e68c:	and	r0, r0, #255	; 0xff
   2e690:	str	r0, [sp, #16]
   2e694:	ldr	r0, [sp, #16]
   2e698:	cmp	r0, #8
   2e69c:	bne	2e6cc <__assert_fail@plt+0x1cf78>
   2e6a0:	ldr	r0, [sp, #36]	; 0x24
   2e6a4:	ldr	r1, [fp, #-8]
   2e6a8:	ldr	r1, [r1]
   2e6ac:	ldr	r2, [sp, #20]
   2e6b0:	add	r1, r1, r2, lsl #3
   2e6b4:	ldr	r1, [r1]
   2e6b8:	cmp	r0, r1
   2e6bc:	bne	2e6cc <__assert_fail@plt+0x1cf78>
   2e6c0:	ldr	r0, [sp, #20]
   2e6c4:	str	r0, [sp, #28]
   2e6c8:	b	2e704 <__assert_fail@plt+0x1cfb0>
   2e6cc:	ldr	r0, [sp, #16]
   2e6d0:	cmp	r0, #9
   2e6d4:	bne	2e700 <__assert_fail@plt+0x1cfac>
   2e6d8:	ldr	r0, [sp, #36]	; 0x24
   2e6dc:	ldr	r1, [fp, #-8]
   2e6e0:	ldr	r1, [r1]
   2e6e4:	ldr	r2, [sp, #20]
   2e6e8:	add	r1, r1, r2, lsl #3
   2e6ec:	ldr	r1, [r1]
   2e6f0:	cmp	r0, r1
   2e6f4:	bne	2e700 <__assert_fail@plt+0x1cfac>
   2e6f8:	ldr	r0, [sp, #20]
   2e6fc:	str	r0, [sp, #24]
   2e700:	b	2e704 <__assert_fail@plt+0x1cfb0>
   2e704:	b	2e708 <__assert_fail@plt+0x1cfb4>
   2e708:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e70c:	add	r0, r0, #1
   2e710:	str	r0, [fp, #-28]	; 0xffffffe4
   2e714:	b	2e650 <__assert_fail@plt+0x1cefc>
   2e718:	ldr	r0, [sp, #28]
   2e71c:	cmp	r0, #0
   2e720:	blt	2e758 <__assert_fail@plt+0x1d004>
   2e724:	ldr	r0, [fp, #-8]
   2e728:	ldr	r1, [sp, #28]
   2e72c:	ldr	r2, [fp, #-12]
   2e730:	ldr	r3, [fp, #-16]
   2e734:	bl	2f1b8 <__assert_fail@plt+0x1da64>
   2e738:	str	r0, [fp, #-24]	; 0xffffffe8
   2e73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e740:	cmp	r0, #0
   2e744:	beq	2e754 <__assert_fail@plt+0x1d000>
   2e748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e74c:	str	r0, [fp, #-4]
   2e750:	b	2e934 <__assert_fail@plt+0x1d1e0>
   2e754:	b	2e758 <__assert_fail@plt+0x1d004>
   2e758:	ldr	r0, [sp, #24]
   2e75c:	cmp	r0, #0
   2e760:	blt	2e840 <__assert_fail@plt+0x1d0ec>
   2e764:	movw	r0, #0
   2e768:	str	r0, [fp, #-28]	; 0xffffffe4
   2e76c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e770:	ldr	r1, [fp, #-12]
   2e774:	ldr	r1, [r1, #4]
   2e778:	cmp	r0, r1
   2e77c:	bge	2e83c <__assert_fail@plt+0x1d0e8>
   2e780:	ldr	r0, [fp, #-12]
   2e784:	ldr	r0, [r0, #8]
   2e788:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e78c:	add	r0, r0, r1, lsl #2
   2e790:	ldr	r0, [r0]
   2e794:	str	r0, [sp, #12]
   2e798:	ldr	r0, [fp, #-8]
   2e79c:	ldr	r0, [r0, #28]
   2e7a0:	ldr	r1, [sp, #12]
   2e7a4:	movw	r2, #12
   2e7a8:	mul	r1, r1, r2
   2e7ac:	add	r0, r0, r1
   2e7b0:	ldr	r1, [sp, #24]
   2e7b4:	bl	25d34 <__assert_fail@plt+0x145e0>
   2e7b8:	cmp	r0, #0
   2e7bc:	bne	2e828 <__assert_fail@plt+0x1d0d4>
   2e7c0:	ldr	r0, [fp, #-8]
   2e7c4:	ldr	r0, [r0, #24]
   2e7c8:	ldr	r1, [sp, #12]
   2e7cc:	movw	r2, #12
   2e7d0:	mul	r1, r1, r2
   2e7d4:	add	r0, r0, r1
   2e7d8:	ldr	r1, [sp, #24]
   2e7dc:	bl	25d34 <__assert_fail@plt+0x145e0>
   2e7e0:	cmp	r0, #0
   2e7e4:	bne	2e828 <__assert_fail@plt+0x1d0d4>
   2e7e8:	ldr	r0, [fp, #-8]
   2e7ec:	ldr	r1, [sp, #12]
   2e7f0:	ldr	r2, [fp, #-12]
   2e7f4:	ldr	r3, [fp, #-16]
   2e7f8:	bl	2f1b8 <__assert_fail@plt+0x1da64>
   2e7fc:	str	r0, [fp, #-24]	; 0xffffffe8
   2e800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e804:	cmp	r0, #0
   2e808:	beq	2e818 <__assert_fail@plt+0x1d0c4>
   2e80c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e810:	str	r0, [fp, #-4]
   2e814:	b	2e934 <__assert_fail@plt+0x1d1e0>
   2e818:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e81c:	mvn	r1, #0
   2e820:	add	r0, r0, r1
   2e824:	str	r0, [fp, #-28]	; 0xffffffe4
   2e828:	b	2e82c <__assert_fail@plt+0x1d0d8>
   2e82c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e830:	add	r0, r0, #1
   2e834:	str	r0, [fp, #-28]	; 0xffffffe4
   2e838:	b	2e76c <__assert_fail@plt+0x1d018>
   2e83c:	b	2e840 <__assert_fail@plt+0x1d0ec>
   2e840:	b	2e918 <__assert_fail@plt+0x1d1c4>
   2e844:	movw	r0, #0
   2e848:	str	r0, [fp, #-28]	; 0xffffffe4
   2e84c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e850:	ldr	r1, [fp, #-12]
   2e854:	ldr	r1, [r1, #4]
   2e858:	cmp	r0, r1
   2e85c:	bge	2e914 <__assert_fail@plt+0x1d1c0>
   2e860:	ldr	r0, [fp, #-12]
   2e864:	ldr	r0, [r0, #8]
   2e868:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e86c:	ldr	r0, [r0, r1, lsl #2]
   2e870:	str	r0, [sp, #8]
   2e874:	ldr	r0, [fp, #-8]
   2e878:	ldr	r0, [r0]
   2e87c:	ldr	r1, [sp, #8]
   2e880:	add	r0, r0, r1, lsl #3
   2e884:	ldr	r0, [r0, #4]
   2e888:	and	r0, r0, #255	; 0xff
   2e88c:	str	r0, [sp, #4]
   2e890:	ldr	r0, [sp, #4]
   2e894:	cmp	r0, #9
   2e898:	beq	2e8a8 <__assert_fail@plt+0x1d154>
   2e89c:	ldr	r0, [sp, #4]
   2e8a0:	cmp	r0, #8
   2e8a4:	bne	2e900 <__assert_fail@plt+0x1d1ac>
   2e8a8:	ldr	r0, [sp, #36]	; 0x24
   2e8ac:	ldr	r1, [fp, #-8]
   2e8b0:	ldr	r1, [r1]
   2e8b4:	ldr	r2, [sp, #8]
   2e8b8:	add	r1, r1, r2, lsl #3
   2e8bc:	ldr	r1, [r1]
   2e8c0:	cmp	r0, r1
   2e8c4:	beq	2e8cc <__assert_fail@plt+0x1d178>
   2e8c8:	b	2e904 <__assert_fail@plt+0x1d1b0>
   2e8cc:	ldr	r0, [fp, #-8]
   2e8d0:	ldr	r1, [sp, #8]
   2e8d4:	ldr	r2, [fp, #-12]
   2e8d8:	ldr	r3, [fp, #-16]
   2e8dc:	bl	2f1b8 <__assert_fail@plt+0x1da64>
   2e8e0:	str	r0, [fp, #-24]	; 0xffffffe8
   2e8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e8e8:	cmp	r0, #0
   2e8ec:	beq	2e8fc <__assert_fail@plt+0x1d1a8>
   2e8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e8f4:	str	r0, [fp, #-4]
   2e8f8:	b	2e934 <__assert_fail@plt+0x1d1e0>
   2e8fc:	b	2e900 <__assert_fail@plt+0x1d1ac>
   2e900:	b	2e904 <__assert_fail@plt+0x1d1b0>
   2e904:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e908:	add	r0, r0, #1
   2e90c:	str	r0, [fp, #-28]	; 0xffffffe4
   2e910:	b	2e84c <__assert_fail@plt+0x1d0f8>
   2e914:	b	2e918 <__assert_fail@plt+0x1d1c4>
   2e918:	b	2e91c <__assert_fail@plt+0x1d1c8>
   2e91c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e920:	add	r0, r0, #1
   2e924:	str	r0, [fp, #-32]	; 0xffffffe0
   2e928:	b	2e5a4 <__assert_fail@plt+0x1ce50>
   2e92c:	movw	r0, #0
   2e930:	str	r0, [fp, #-4]
   2e934:	ldr	r0, [fp, #-4]
   2e938:	mov	sp, fp
   2e93c:	pop	{fp, pc}
   2e940:	push	{fp, lr}
   2e944:	mov	fp, sp
   2e948:	sub	sp, sp, #128	; 0x80
   2e94c:	str	r0, [fp, #-8]
   2e950:	str	r1, [fp, #-12]
   2e954:	str	r2, [fp, #-16]
   2e958:	str	r3, [fp, #-20]	; 0xffffffec
   2e95c:	ldr	r0, [fp, #-8]
   2e960:	ldr	r0, [r0, #84]	; 0x54
   2e964:	str	r0, [fp, #-24]	; 0xffffffe8
   2e968:	ldr	r0, [fp, #-8]
   2e96c:	ldr	r1, [fp, #-16]
   2e970:	bl	2a1a0 <__assert_fail@plt+0x18a4c>
   2e974:	str	r0, [sp, #60]	; 0x3c
   2e978:	ldr	r0, [sp, #60]	; 0x3c
   2e97c:	cmn	r0, #1
   2e980:	bne	2e990 <__assert_fail@plt+0x1d23c>
   2e984:	movw	r0, #0
   2e988:	str	r0, [fp, #-4]
   2e98c:	b	2ed64 <__assert_fail@plt+0x1d610>
   2e990:	movw	r0, #0
   2e994:	str	r0, [sp, #64]	; 0x40
   2e998:	str	r0, [fp, #-32]	; 0xffffffe0
   2e99c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e9a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e9a4:	ldr	r1, [r1, #4]
   2e9a8:	cmp	r0, r1
   2e9ac:	bge	2ed3c <__assert_fail@plt+0x1d5e8>
   2e9b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e9b4:	ldr	r0, [r0, #8]
   2e9b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e9bc:	ldr	r0, [r0, r1, lsl #2]
   2e9c0:	str	r0, [fp, #-36]	; 0xffffffdc
   2e9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9c8:	ldr	r0, [r0]
   2e9cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e9d0:	add	r0, r0, r1, lsl #3
   2e9d4:	ldr	r0, [r0, #4]
   2e9d8:	and	r0, r0, #255	; 0xff
   2e9dc:	str	r0, [sp, #52]	; 0x34
   2e9e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e9e4:	ldr	r1, [fp, #-12]
   2e9e8:	ldr	r1, [r1, #8]
   2e9ec:	cmp	r0, r1
   2e9f0:	bne	2ea0c <__assert_fail@plt+0x1d2b8>
   2e9f4:	ldr	r0, [fp, #-16]
   2e9f8:	ldr	r1, [fp, #-12]
   2e9fc:	ldr	r1, [r1, #12]
   2ea00:	cmp	r0, r1
   2ea04:	bne	2ea0c <__assert_fail@plt+0x1d2b8>
   2ea08:	b	2ed2c <__assert_fail@plt+0x1d5d8>
   2ea0c:	ldr	r0, [sp, #52]	; 0x34
   2ea10:	cmp	r0, #4
   2ea14:	beq	2ea1c <__assert_fail@plt+0x1d2c8>
   2ea18:	b	2ed2c <__assert_fail@plt+0x1d5d8>
   2ea1c:	ldr	r0, [fp, #-8]
   2ea20:	ldr	r0, [r0, #116]	; 0x74
   2ea24:	ldr	r1, [sp, #60]	; 0x3c
   2ea28:	movw	r2, #24
   2ea2c:	mul	r1, r1, r2
   2ea30:	add	r0, r0, r1
   2ea34:	str	r0, [sp, #48]	; 0x30
   2ea38:	ldr	r0, [sp, #60]	; 0x3c
   2ea3c:	str	r0, [sp, #56]	; 0x38
   2ea40:	ldr	r0, [sp, #48]	; 0x30
   2ea44:	ldr	r0, [r0]
   2ea48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ea4c:	cmp	r0, r1
   2ea50:	beq	2ea58 <__assert_fail@plt+0x1d304>
   2ea54:	b	2ed04 <__assert_fail@plt+0x1d5b0>
   2ea58:	ldr	r0, [sp, #48]	; 0x30
   2ea5c:	ldr	r0, [r0, #12]
   2ea60:	ldr	r1, [sp, #48]	; 0x30
   2ea64:	ldr	r1, [r1, #8]
   2ea68:	sub	r0, r0, r1
   2ea6c:	str	r0, [sp, #44]	; 0x2c
   2ea70:	ldr	r0, [fp, #-16]
   2ea74:	ldr	r1, [sp, #44]	; 0x2c
   2ea78:	add	r0, r0, r1
   2ea7c:	str	r0, [sp, #40]	; 0x28
   2ea80:	ldr	r0, [sp, #44]	; 0x2c
   2ea84:	cmp	r0, #0
   2ea88:	beq	2eaa8 <__assert_fail@plt+0x1d354>
   2ea8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ea90:	ldr	r0, [r0, #12]
   2ea94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ea98:	add	r0, r0, r1, lsl #2
   2ea9c:	ldr	r0, [r0]
   2eaa0:	str	r0, [sp, #24]
   2eaa4:	b	2eacc <__assert_fail@plt+0x1d378>
   2eaa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eaac:	ldr	r0, [r0, #20]
   2eab0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eab4:	movw	r2, #12
   2eab8:	mul	r1, r1, r2
   2eabc:	add	r0, r0, r1
   2eac0:	ldr	r0, [r0, #8]
   2eac4:	ldr	r0, [r0]
   2eac8:	str	r0, [sp, #24]
   2eacc:	ldr	r0, [sp, #24]
   2ead0:	str	r0, [sp, #36]	; 0x24
   2ead4:	ldr	r0, [sp, #40]	; 0x28
   2ead8:	ldr	r1, [fp, #-12]
   2eadc:	ldr	r1, [r1, #12]
   2eae0:	cmp	r0, r1
   2eae4:	bgt	2eb80 <__assert_fail@plt+0x1d42c>
   2eae8:	ldr	r0, [fp, #-12]
   2eaec:	ldr	r0, [r0]
   2eaf0:	ldr	r1, [sp, #40]	; 0x28
   2eaf4:	add	r0, r0, r1, lsl #2
   2eaf8:	ldr	r0, [r0]
   2eafc:	movw	r1, #0
   2eb00:	cmp	r0, r1
   2eb04:	beq	2eb80 <__assert_fail@plt+0x1d42c>
   2eb08:	ldr	r0, [fp, #-12]
   2eb0c:	ldr	r0, [r0]
   2eb10:	ldr	r1, [sp, #40]	; 0x28
   2eb14:	add	r0, r0, r1, lsl #2
   2eb18:	ldr	r0, [r0]
   2eb1c:	movw	r1, #0
   2eb20:	cmp	r0, r1
   2eb24:	beq	2eb80 <__assert_fail@plt+0x1d42c>
   2eb28:	ldr	r0, [fp, #-12]
   2eb2c:	ldr	r0, [r0]
   2eb30:	ldr	r1, [sp, #40]	; 0x28
   2eb34:	add	r0, r0, r1, lsl #2
   2eb38:	ldr	r0, [r0]
   2eb3c:	add	r0, r0, #4
   2eb40:	ldr	r1, [sp, #36]	; 0x24
   2eb44:	bl	25d34 <__assert_fail@plt+0x145e0>
   2eb48:	cmp	r0, #0
   2eb4c:	beq	2eb80 <__assert_fail@plt+0x1d42c>
   2eb50:	ldr	r0, [fp, #-8]
   2eb54:	ldr	r1, [fp, #-12]
   2eb58:	add	r1, r1, #16
   2eb5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2eb60:	ldr	r3, [fp, #-16]
   2eb64:	ldr	ip, [sp, #36]	; 0x24
   2eb68:	ldr	lr, [sp, #40]	; 0x28
   2eb6c:	str	ip, [sp]
   2eb70:	str	lr, [sp, #4]
   2eb74:	bl	2f444 <__assert_fail@plt+0x1dcf0>
   2eb78:	tst	r0, #1
   2eb7c:	beq	2eb84 <__assert_fail@plt+0x1d430>
   2eb80:	b	2ed04 <__assert_fail@plt+0x1d5b0>
   2eb84:	ldr	r0, [sp, #64]	; 0x40
   2eb88:	movw	r1, #0
   2eb8c:	cmp	r0, r1
   2eb90:	bne	2ebe8 <__assert_fail@plt+0x1d494>
   2eb94:	ldr	r0, [fp, #-12]
   2eb98:	add	r1, sp, #64	; 0x40
   2eb9c:	mov	r2, r1
   2eba0:	str	r0, [sp, #20]
   2eba4:	mov	r0, r2
   2eba8:	ldr	r2, [sp, #20]
   2ebac:	str	r1, [sp, #16]
   2ebb0:	mov	r1, r2
   2ebb4:	movw	r2, #28
   2ebb8:	bl	11478 <memcpy@plt>
   2ebbc:	ldr	r0, [sp, #16]
   2ebc0:	add	r0, r0, #16
   2ebc4:	ldr	r1, [fp, #-12]
   2ebc8:	add	r1, r1, #16
   2ebcc:	bl	25c60 <__assert_fail@plt+0x1450c>
   2ebd0:	str	r0, [fp, #-28]	; 0xffffffe4
   2ebd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ebd8:	cmp	r0, #0
   2ebdc:	beq	2ebe4 <__assert_fail@plt+0x1d490>
   2ebe0:	b	2ed44 <__assert_fail@plt+0x1d5f0>
   2ebe4:	b	2ebe8 <__assert_fail@plt+0x1d494>
   2ebe8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ebec:	str	r0, [sp, #72]	; 0x48
   2ebf0:	ldr	r0, [fp, #-16]
   2ebf4:	str	r0, [sp, #76]	; 0x4c
   2ebf8:	add	r0, sp, #64	; 0x40
   2ebfc:	add	r0, r0, #16
   2ec00:	ldr	r1, [sp, #56]	; 0x38
   2ec04:	bl	25878 <__assert_fail@plt+0x14124>
   2ec08:	and	r0, r0, #1
   2ec0c:	strb	r0, [sp, #35]	; 0x23
   2ec10:	ldrb	r0, [sp, #35]	; 0x23
   2ec14:	mvn	r1, #0
   2ec18:	eor	r0, r0, r1
   2ec1c:	tst	r0, #1
   2ec20:	beq	2ec30 <__assert_fail@plt+0x1d4dc>
   2ec24:	movw	r0, #12
   2ec28:	str	r0, [fp, #-28]	; 0xffffffe4
   2ec2c:	b	2ed44 <__assert_fail@plt+0x1d5f0>
   2ec30:	ldr	r0, [sp, #64]	; 0x40
   2ec34:	ldr	r1, [fp, #-16]
   2ec38:	add	r0, r0, r1, lsl #2
   2ec3c:	ldr	r0, [r0]
   2ec40:	str	r0, [sp, #28]
   2ec44:	ldr	r0, [fp, #-8]
   2ec48:	add	r1, sp, #64	; 0x40
   2ec4c:	bl	2dcac <__assert_fail@plt+0x1c558>
   2ec50:	str	r0, [fp, #-28]	; 0xffffffe4
   2ec54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ec58:	cmp	r0, #0
   2ec5c:	beq	2ec64 <__assert_fail@plt+0x1d510>
   2ec60:	b	2ed44 <__assert_fail@plt+0x1d5f0>
   2ec64:	ldr	r0, [fp, #-12]
   2ec68:	ldr	r0, [r0, #4]
   2ec6c:	movw	r1, #0
   2ec70:	cmp	r0, r1
   2ec74:	beq	2ecac <__assert_fail@plt+0x1d558>
   2ec78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec7c:	ldr	r1, [fp, #-12]
   2ec80:	ldr	r1, [r1, #4]
   2ec84:	ldr	r2, [sp, #64]	; 0x40
   2ec88:	ldr	r3, [fp, #-16]
   2ec8c:	add	r3, r3, #1
   2ec90:	bl	2dea4 <__assert_fail@plt+0x1c750>
   2ec94:	str	r0, [fp, #-28]	; 0xffffffe4
   2ec98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ec9c:	cmp	r0, #0
   2eca0:	beq	2eca8 <__assert_fail@plt+0x1d554>
   2eca4:	b	2ed44 <__assert_fail@plt+0x1d5f0>
   2eca8:	b	2ecac <__assert_fail@plt+0x1d558>
   2ecac:	ldr	r0, [sp, #28]
   2ecb0:	ldr	r1, [sp, #64]	; 0x40
   2ecb4:	ldr	r2, [fp, #-16]
   2ecb8:	add	r1, r1, r2, lsl #2
   2ecbc:	str	r0, [r1]
   2ecc0:	add	r0, sp, #64	; 0x40
   2ecc4:	add	r1, r0, #16
   2ecc8:	add	r0, r0, #16
   2eccc:	ldr	r2, [sp, #56]	; 0x38
   2ecd0:	str	r1, [sp, #12]
   2ecd4:	mov	r1, r2
   2ecd8:	bl	25d34 <__assert_fail@plt+0x145e0>
   2ecdc:	sub	r1, r0, #1
   2ece0:	ldr	r0, [sp, #12]
   2ece4:	bl	26420 <__assert_fail@plt+0x14ccc>
   2ece8:	ldr	r0, [fp, #-8]
   2ecec:	ldr	r0, [r0, #116]	; 0x74
   2ecf0:	ldr	r1, [sp, #56]	; 0x38
   2ecf4:	movw	r2, #24
   2ecf8:	mul	r1, r1, r2
   2ecfc:	add	r0, r0, r1
   2ed00:	str	r0, [sp, #48]	; 0x30
   2ed04:	ldr	r0, [sp, #56]	; 0x38
   2ed08:	add	r0, r0, #1
   2ed0c:	str	r0, [sp, #56]	; 0x38
   2ed10:	ldr	r0, [sp, #48]	; 0x30
   2ed14:	add	r1, r0, #24
   2ed18:	str	r1, [sp, #48]	; 0x30
   2ed1c:	ldrsb	r0, [r0, #20]
   2ed20:	cmp	r0, #0
   2ed24:	bne	2ea40 <__assert_fail@plt+0x1d2ec>
   2ed28:	b	2ed2c <__assert_fail@plt+0x1d5d8>
   2ed2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ed30:	add	r0, r0, #1
   2ed34:	str	r0, [fp, #-32]	; 0xffffffe0
   2ed38:	b	2e99c <__assert_fail@plt+0x1d248>
   2ed3c:	movw	r0, #0
   2ed40:	str	r0, [fp, #-28]	; 0xffffffe4
   2ed44:	ldr	r0, [sp, #64]	; 0x40
   2ed48:	movw	r1, #0
   2ed4c:	cmp	r0, r1
   2ed50:	beq	2ed5c <__assert_fail@plt+0x1d608>
   2ed54:	ldr	r0, [sp, #88]	; 0x58
   2ed58:	bl	15f68 <__assert_fail@plt+0x4814>
   2ed5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ed60:	str	r0, [fp, #-4]
   2ed64:	ldr	r0, [fp, #-4]
   2ed68:	mov	sp, fp
   2ed6c:	pop	{fp, pc}
   2ed70:	push	{fp, lr}
   2ed74:	mov	fp, sp
   2ed78:	sub	sp, sp, #56	; 0x38
   2ed7c:	str	r0, [fp, #-8]
   2ed80:	str	r1, [fp, #-12]
   2ed84:	str	r2, [fp, #-16]
   2ed88:	ldr	r0, [fp, #-12]
   2ed8c:	ldr	r0, [r0, #4]
   2ed90:	cmp	r0, #0
   2ed94:	beq	2eda8 <__assert_fail@plt+0x1d654>
   2ed98:	ldr	r0, [fp, #-16]
   2ed9c:	ldr	r0, [r0, #4]
   2eda0:	cmp	r0, #0
   2eda4:	bne	2edb4 <__assert_fail@plt+0x1d660>
   2eda8:	movw	r0, #0
   2edac:	str	r0, [fp, #-4]
   2edb0:	b	2f1ac <__assert_fail@plt+0x1da58>
   2edb4:	ldr	r0, [fp, #-12]
   2edb8:	ldr	r0, [r0, #4]
   2edbc:	ldr	r1, [fp, #-16]
   2edc0:	ldr	r1, [r1, #4]
   2edc4:	add	r0, r0, r1
   2edc8:	ldr	r1, [fp, #-8]
   2edcc:	ldr	r1, [r1, #4]
   2edd0:	add	r0, r0, r1
   2edd4:	ldr	r1, [fp, #-8]
   2edd8:	ldr	r1, [r1]
   2eddc:	cmp	r0, r1
   2ede0:	ble	2ee54 <__assert_fail@plt+0x1d700>
   2ede4:	ldr	r0, [fp, #-12]
   2ede8:	ldr	r0, [r0, #4]
   2edec:	ldr	r1, [fp, #-16]
   2edf0:	ldr	r1, [r1, #4]
   2edf4:	add	r0, r0, r1
   2edf8:	ldr	r1, [fp, #-8]
   2edfc:	ldr	r1, [r1]
   2ee00:	add	r0, r0, r1
   2ee04:	str	r0, [sp, #12]
   2ee08:	ldr	r0, [fp, #-8]
   2ee0c:	ldr	r0, [r0, #8]
   2ee10:	ldr	r1, [sp, #12]
   2ee14:	lsl	r1, r1, #2
   2ee18:	bl	381dc <__assert_fail@plt+0x26a88>
   2ee1c:	str	r0, [sp, #8]
   2ee20:	ldr	r0, [sp, #8]
   2ee24:	movw	r1, #0
   2ee28:	cmp	r0, r1
   2ee2c:	bne	2ee3c <__assert_fail@plt+0x1d6e8>
   2ee30:	movw	r0, #12
   2ee34:	str	r0, [fp, #-4]
   2ee38:	b	2f1ac <__assert_fail@plt+0x1da58>
   2ee3c:	ldr	r0, [sp, #8]
   2ee40:	ldr	r1, [fp, #-8]
   2ee44:	str	r0, [r1, #8]
   2ee48:	ldr	r0, [sp, #12]
   2ee4c:	ldr	r1, [fp, #-8]
   2ee50:	str	r0, [r1]
   2ee54:	ldr	r0, [fp, #-8]
   2ee58:	ldr	r0, [r0, #4]
   2ee5c:	ldr	r1, [fp, #-12]
   2ee60:	ldr	r1, [r1, #4]
   2ee64:	add	r0, r0, r1
   2ee68:	ldr	r1, [fp, #-16]
   2ee6c:	ldr	r1, [r1, #4]
   2ee70:	add	r0, r0, r1
   2ee74:	str	r0, [sp, #16]
   2ee78:	ldr	r0, [fp, #-12]
   2ee7c:	ldr	r0, [r0, #4]
   2ee80:	sub	r0, r0, #1
   2ee84:	str	r0, [fp, #-20]	; 0xffffffec
   2ee88:	ldr	r0, [fp, #-16]
   2ee8c:	ldr	r0, [r0, #4]
   2ee90:	sub	r0, r0, #1
   2ee94:	str	r0, [fp, #-24]	; 0xffffffe8
   2ee98:	ldr	r0, [fp, #-8]
   2ee9c:	ldr	r0, [r0, #4]
   2eea0:	sub	r0, r0, #1
   2eea4:	str	r0, [sp, #24]
   2eea8:	ldr	r0, [fp, #-12]
   2eeac:	ldr	r0, [r0, #8]
   2eeb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eeb4:	ldr	r0, [r0, r1, lsl #2]
   2eeb8:	ldr	r1, [fp, #-16]
   2eebc:	ldr	r1, [r1, #8]
   2eec0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eec4:	add	r1, r1, r2, lsl #2
   2eec8:	ldr	r1, [r1]
   2eecc:	cmp	r0, r1
   2eed0:	bne	2efdc <__assert_fail@plt+0x1d888>
   2eed4:	b	2eed8 <__assert_fail@plt+0x1d784>
   2eed8:	ldr	r0, [sp, #24]
   2eedc:	cmp	r0, #0
   2eee0:	movw	r0, #0
   2eee4:	str	r0, [sp, #4]
   2eee8:	blt	2ef20 <__assert_fail@plt+0x1d7cc>
   2eeec:	ldr	r0, [fp, #-8]
   2eef0:	ldr	r0, [r0, #8]
   2eef4:	ldr	r1, [sp, #24]
   2eef8:	ldr	r0, [r0, r1, lsl #2]
   2eefc:	ldr	r1, [fp, #-12]
   2ef00:	ldr	r1, [r1, #8]
   2ef04:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ef08:	add	r1, r1, r2, lsl #2
   2ef0c:	ldr	r1, [r1]
   2ef10:	cmp	r0, r1
   2ef14:	movw	r0, #0
   2ef18:	movgt	r0, #1
   2ef1c:	str	r0, [sp, #4]
   2ef20:	ldr	r0, [sp, #4]
   2ef24:	tst	r0, #1
   2ef28:	beq	2ef40 <__assert_fail@plt+0x1d7ec>
   2ef2c:	ldr	r0, [sp, #24]
   2ef30:	mvn	r1, #0
   2ef34:	add	r0, r0, r1
   2ef38:	str	r0, [sp, #24]
   2ef3c:	b	2eed8 <__assert_fail@plt+0x1d784>
   2ef40:	ldr	r0, [sp, #24]
   2ef44:	cmp	r0, #0
   2ef48:	blt	2ef78 <__assert_fail@plt+0x1d824>
   2ef4c:	ldr	r0, [fp, #-8]
   2ef50:	ldr	r0, [r0, #8]
   2ef54:	ldr	r1, [sp, #24]
   2ef58:	ldr	r0, [r0, r1, lsl #2]
   2ef5c:	ldr	r1, [fp, #-12]
   2ef60:	ldr	r1, [r1, #8]
   2ef64:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ef68:	add	r1, r1, r2, lsl #2
   2ef6c:	ldr	r1, [r1]
   2ef70:	cmp	r0, r1
   2ef74:	beq	2efa4 <__assert_fail@plt+0x1d850>
   2ef78:	ldr	r0, [fp, #-12]
   2ef7c:	ldr	r0, [r0, #8]
   2ef80:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ef84:	ldr	r0, [r0, r1, lsl #2]
   2ef88:	ldr	r1, [fp, #-8]
   2ef8c:	ldr	r1, [r1, #8]
   2ef90:	ldr	r2, [sp, #16]
   2ef94:	sub	r2, r2, #1
   2ef98:	str	r2, [sp, #16]
   2ef9c:	add	r1, r1, r2, lsl #2
   2efa0:	str	r0, [r1]
   2efa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2efa8:	mvn	r1, #0
   2efac:	add	r0, r0, r1
   2efb0:	str	r0, [fp, #-20]	; 0xffffffec
   2efb4:	cmp	r0, #0
   2efb8:	blt	2efd4 <__assert_fail@plt+0x1d880>
   2efbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efc0:	mvn	r1, #0
   2efc4:	add	r0, r0, r1
   2efc8:	str	r0, [fp, #-24]	; 0xffffffe8
   2efcc:	cmp	r0, #0
   2efd0:	bge	2efd8 <__assert_fail@plt+0x1d884>
   2efd4:	b	2f050 <__assert_fail@plt+0x1d8fc>
   2efd8:	b	2f04c <__assert_fail@plt+0x1d8f8>
   2efdc:	ldr	r0, [fp, #-12]
   2efe0:	ldr	r0, [r0, #8]
   2efe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2efe8:	ldr	r0, [r0, r1, lsl #2]
   2efec:	ldr	r1, [fp, #-16]
   2eff0:	ldr	r1, [r1, #8]
   2eff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eff8:	add	r1, r1, r2, lsl #2
   2effc:	ldr	r1, [r1]
   2f000:	cmp	r0, r1
   2f004:	bge	2f028 <__assert_fail@plt+0x1d8d4>
   2f008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f00c:	mvn	r1, #0
   2f010:	add	r0, r0, r1
   2f014:	str	r0, [fp, #-24]	; 0xffffffe8
   2f018:	cmp	r0, #0
   2f01c:	bge	2f024 <__assert_fail@plt+0x1d8d0>
   2f020:	b	2f050 <__assert_fail@plt+0x1d8fc>
   2f024:	b	2f048 <__assert_fail@plt+0x1d8f4>
   2f028:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f02c:	mvn	r1, #0
   2f030:	add	r0, r0, r1
   2f034:	str	r0, [fp, #-20]	; 0xffffffec
   2f038:	cmp	r0, #0
   2f03c:	bge	2f044 <__assert_fail@plt+0x1d8f0>
   2f040:	b	2f050 <__assert_fail@plt+0x1d8fc>
   2f044:	b	2f048 <__assert_fail@plt+0x1d8f4>
   2f048:	b	2f04c <__assert_fail@plt+0x1d8f8>
   2f04c:	b	2eea8 <__assert_fail@plt+0x1d754>
   2f050:	ldr	r0, [fp, #-8]
   2f054:	ldr	r0, [r0, #4]
   2f058:	sub	r0, r0, #1
   2f05c:	str	r0, [sp, #24]
   2f060:	ldr	r0, [fp, #-8]
   2f064:	ldr	r0, [r0, #4]
   2f068:	ldr	r1, [fp, #-12]
   2f06c:	ldr	r1, [r1, #4]
   2f070:	add	r0, r0, r1
   2f074:	ldr	r1, [fp, #-16]
   2f078:	ldr	r1, [r1, #4]
   2f07c:	add	r0, r0, r1
   2f080:	sub	r0, r0, #1
   2f084:	str	r0, [sp, #28]
   2f088:	ldr	r0, [sp, #28]
   2f08c:	ldr	r1, [sp, #16]
   2f090:	sub	r0, r0, r1
   2f094:	add	r0, r0, #1
   2f098:	str	r0, [sp, #20]
   2f09c:	ldr	r0, [sp, #20]
   2f0a0:	ldr	r1, [fp, #-8]
   2f0a4:	ldr	r2, [r1, #4]
   2f0a8:	add	r0, r2, r0
   2f0ac:	str	r0, [r1, #4]
   2f0b0:	ldr	r0, [sp, #20]
   2f0b4:	cmp	r0, #0
   2f0b8:	ble	2f188 <__assert_fail@plt+0x1da34>
   2f0bc:	ldr	r0, [sp, #24]
   2f0c0:	cmp	r0, #0
   2f0c4:	blt	2f188 <__assert_fail@plt+0x1da34>
   2f0c8:	b	2f0cc <__assert_fail@plt+0x1d978>
   2f0cc:	ldr	r0, [fp, #-8]
   2f0d0:	ldr	r0, [r0, #8]
   2f0d4:	ldr	r1, [sp, #28]
   2f0d8:	ldr	r1, [r0, r1, lsl #2]
   2f0dc:	ldr	r2, [sp, #24]
   2f0e0:	add	r0, r0, r2, lsl #2
   2f0e4:	ldr	r0, [r0]
   2f0e8:	cmp	r1, r0
   2f0ec:	ble	2f140 <__assert_fail@plt+0x1d9ec>
   2f0f0:	ldr	r0, [fp, #-8]
   2f0f4:	ldr	r0, [r0, #8]
   2f0f8:	ldr	r1, [sp, #28]
   2f0fc:	sub	r2, r1, #1
   2f100:	str	r2, [sp, #28]
   2f104:	ldr	r0, [r0, r1, lsl #2]
   2f108:	ldr	r1, [fp, #-8]
   2f10c:	ldr	r1, [r1, #8]
   2f110:	ldr	r2, [sp, #24]
   2f114:	ldr	r3, [sp, #20]
   2f118:	sub	ip, r3, #1
   2f11c:	str	ip, [sp, #20]
   2f120:	add	r2, r2, r3
   2f124:	add	r1, r1, r2, lsl #2
   2f128:	str	r0, [r1]
   2f12c:	ldr	r0, [sp, #20]
   2f130:	cmp	r0, #0
   2f134:	bne	2f13c <__assert_fail@plt+0x1d9e8>
   2f138:	b	2f184 <__assert_fail@plt+0x1da30>
   2f13c:	b	2f180 <__assert_fail@plt+0x1da2c>
   2f140:	ldr	r0, [fp, #-8]
   2f144:	ldr	r0, [r0, #8]
   2f148:	ldr	r1, [sp, #24]
   2f14c:	ldr	r2, [r0, r1, lsl #2]
   2f150:	ldr	r3, [sp, #20]
   2f154:	add	r1, r1, r3
   2f158:	add	r0, r0, r1, lsl #2
   2f15c:	str	r2, [r0]
   2f160:	ldr	r0, [sp, #24]
   2f164:	mvn	r1, #0
   2f168:	add	r0, r0, r1
   2f16c:	str	r0, [sp, #24]
   2f170:	cmp	r0, #0
   2f174:	bge	2f17c <__assert_fail@plt+0x1da28>
   2f178:	b	2f184 <__assert_fail@plt+0x1da30>
   2f17c:	b	2f180 <__assert_fail@plt+0x1da2c>
   2f180:	b	2f0cc <__assert_fail@plt+0x1d978>
   2f184:	b	2f188 <__assert_fail@plt+0x1da34>
   2f188:	ldr	r0, [fp, #-8]
   2f18c:	ldr	r0, [r0, #8]
   2f190:	ldr	r1, [sp, #16]
   2f194:	add	r1, r0, r1, lsl #2
   2f198:	ldr	r2, [sp, #20]
   2f19c:	lsl	r2, r2, #2
   2f1a0:	bl	11478 <memcpy@plt>
   2f1a4:	movw	r0, #0
   2f1a8:	str	r0, [fp, #-4]
   2f1ac:	ldr	r0, [fp, #-4]
   2f1b0:	mov	sp, fp
   2f1b4:	pop	{fp, pc}
   2f1b8:	push	{fp, lr}
   2f1bc:	mov	fp, sp
   2f1c0:	sub	sp, sp, #72	; 0x48
   2f1c4:	str	r0, [fp, #-8]
   2f1c8:	str	r1, [fp, #-12]
   2f1cc:	str	r2, [fp, #-16]
   2f1d0:	str	r3, [fp, #-20]	; 0xffffffec
   2f1d4:	ldr	r0, [fp, #-8]
   2f1d8:	ldr	r0, [r0, #28]
   2f1dc:	ldr	r1, [fp, #-12]
   2f1e0:	movw	r2, #12
   2f1e4:	mul	r1, r1, r2
   2f1e8:	add	r0, r0, r1
   2f1ec:	str	r0, [fp, #-32]	; 0xffffffe0
   2f1f0:	add	r0, sp, #28
   2f1f4:	movw	r1, #0
   2f1f8:	and	r1, r1, #255	; 0xff
   2f1fc:	bl	11658 <memset@plt>
   2f200:	movw	r0, #0
   2f204:	str	r0, [fp, #-24]	; 0xffffffe8
   2f208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f20c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f210:	ldr	r1, [r1, #4]
   2f214:	cmp	r0, r1
   2f218:	bge	2f3ac <__assert_fail@plt+0x1dc58>
   2f21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f220:	ldr	r0, [r0, #8]
   2f224:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f228:	add	r0, r0, r1, lsl #2
   2f22c:	ldr	r0, [r0]
   2f230:	str	r0, [sp, #24]
   2f234:	ldr	r0, [sp, #24]
   2f238:	ldr	r1, [fp, #-12]
   2f23c:	cmp	r0, r1
   2f240:	bne	2f248 <__assert_fail@plt+0x1daf4>
   2f244:	b	2f39c <__assert_fail@plt+0x1dc48>
   2f248:	ldr	r0, [fp, #-8]
   2f24c:	ldr	r0, [r0]
   2f250:	ldr	r1, [sp, #24]
   2f254:	add	r0, r0, r1, lsl #3
   2f258:	ldr	r0, [r0, #4]
   2f25c:	and	r0, r0, #255	; 0xff
   2f260:	and	r0, r0, #8
   2f264:	cmp	r0, #0
   2f268:	beq	2f398 <__assert_fail@plt+0x1dc44>
   2f26c:	ldr	r0, [fp, #-8]
   2f270:	ldr	r0, [r0, #20]
   2f274:	ldr	r1, [sp, #24]
   2f278:	movw	r2, #12
   2f27c:	mul	r1, r1, r2
   2f280:	add	r0, r0, r1
   2f284:	ldr	r0, [r0, #8]
   2f288:	ldr	r0, [r0]
   2f28c:	str	r0, [sp, #20]
   2f290:	ldr	r0, [fp, #-8]
   2f294:	ldr	r0, [r0, #20]
   2f298:	ldr	r1, [sp, #24]
   2f29c:	mul	r1, r1, r2
   2f2a0:	add	r0, r0, r1
   2f2a4:	ldr	r0, [r0, #4]
   2f2a8:	cmp	r0, #1
   2f2ac:	ble	2f2d8 <__assert_fail@plt+0x1db84>
   2f2b0:	ldr	r0, [fp, #-8]
   2f2b4:	ldr	r0, [r0, #20]
   2f2b8:	ldr	r1, [sp, #24]
   2f2bc:	movw	r2, #12
   2f2c0:	mul	r1, r1, r2
   2f2c4:	add	r0, r0, r1
   2f2c8:	ldr	r0, [r0, #8]
   2f2cc:	ldr	r0, [r0, #4]
   2f2d0:	str	r0, [sp, #4]
   2f2d4:	b	2f2e4 <__assert_fail@plt+0x1db90>
   2f2d8:	mvn	r0, #0
   2f2dc:	str	r0, [sp, #4]
   2f2e0:	b	2f2e4 <__assert_fail@plt+0x1db90>
   2f2e4:	ldr	r0, [sp, #4]
   2f2e8:	str	r0, [sp, #16]
   2f2ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f2f0:	ldr	r1, [sp, #20]
   2f2f4:	bl	25d34 <__assert_fail@plt+0x145e0>
   2f2f8:	cmp	r0, #0
   2f2fc:	bne	2f314 <__assert_fail@plt+0x1dbc0>
   2f300:	ldr	r0, [fp, #-16]
   2f304:	ldr	r1, [sp, #20]
   2f308:	bl	25d34 <__assert_fail@plt+0x145e0>
   2f30c:	cmp	r0, #0
   2f310:	bne	2f348 <__assert_fail@plt+0x1dbf4>
   2f314:	ldr	r0, [sp, #16]
   2f318:	cmp	r0, #0
   2f31c:	ble	2f394 <__assert_fail@plt+0x1dc40>
   2f320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f324:	ldr	r1, [sp, #16]
   2f328:	bl	25d34 <__assert_fail@plt+0x145e0>
   2f32c:	cmp	r0, #0
   2f330:	bne	2f394 <__assert_fail@plt+0x1dc40>
   2f334:	ldr	r0, [fp, #-16]
   2f338:	ldr	r1, [sp, #16]
   2f33c:	bl	25d34 <__assert_fail@plt+0x145e0>
   2f340:	cmp	r0, #0
   2f344:	beq	2f394 <__assert_fail@plt+0x1dc40>
   2f348:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f34c:	ldr	r0, [fp, #-8]
   2f350:	ldr	r0, [r0, #28]
   2f354:	ldr	r2, [sp, #24]
   2f358:	movw	r3, #12
   2f35c:	mul	r2, r2, r3
   2f360:	add	r2, r0, r2
   2f364:	add	r0, sp, #28
   2f368:	bl	2ed70 <__assert_fail@plt+0x1d61c>
   2f36c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f370:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f374:	cmp	r0, #0
   2f378:	beq	2f390 <__assert_fail@plt+0x1dc3c>
   2f37c:	ldr	r0, [sp, #36]	; 0x24
   2f380:	bl	15f68 <__assert_fail@plt+0x4814>
   2f384:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f388:	str	r0, [fp, #-4]
   2f38c:	b	2f438 <__assert_fail@plt+0x1dce4>
   2f390:	b	2f394 <__assert_fail@plt+0x1dc40>
   2f394:	b	2f398 <__assert_fail@plt+0x1dc44>
   2f398:	b	2f39c <__assert_fail@plt+0x1dc48>
   2f39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f3a0:	add	r0, r0, #1
   2f3a4:	str	r0, [fp, #-24]	; 0xffffffe8
   2f3a8:	b	2f208 <__assert_fail@plt+0x1dab4>
   2f3ac:	movw	r0, #0
   2f3b0:	str	r0, [fp, #-24]	; 0xffffffe8
   2f3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f3b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f3bc:	ldr	r1, [r1, #4]
   2f3c0:	cmp	r0, r1
   2f3c4:	bge	2f428 <__assert_fail@plt+0x1dcd4>
   2f3c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f3cc:	ldr	r0, [r0, #8]
   2f3d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f3d4:	add	r0, r0, r1, lsl #2
   2f3d8:	ldr	r0, [r0]
   2f3dc:	str	r0, [sp, #12]
   2f3e0:	ldr	r1, [sp, #12]
   2f3e4:	add	r0, sp, #28
   2f3e8:	bl	25d34 <__assert_fail@plt+0x145e0>
   2f3ec:	cmp	r0, #0
   2f3f0:	bne	2f414 <__assert_fail@plt+0x1dcc0>
   2f3f4:	ldr	r0, [fp, #-16]
   2f3f8:	ldr	r1, [sp, #12]
   2f3fc:	bl	25d34 <__assert_fail@plt+0x145e0>
   2f400:	sub	r0, r0, #1
   2f404:	str	r0, [sp, #8]
   2f408:	ldr	r0, [fp, #-16]
   2f40c:	ldr	r1, [sp, #8]
   2f410:	bl	26420 <__assert_fail@plt+0x14ccc>
   2f414:	b	2f418 <__assert_fail@plt+0x1dcc4>
   2f418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f41c:	add	r0, r0, #1
   2f420:	str	r0, [fp, #-24]	; 0xffffffe8
   2f424:	b	2f3b4 <__assert_fail@plt+0x1dc60>
   2f428:	ldr	r0, [sp, #36]	; 0x24
   2f42c:	bl	15f68 <__assert_fail@plt+0x4814>
   2f430:	movw	r0, #0
   2f434:	str	r0, [fp, #-4]
   2f438:	ldr	r0, [fp, #-4]
   2f43c:	mov	sp, fp
   2f440:	pop	{fp, pc}
   2f444:	push	{r4, sl, fp, lr}
   2f448:	add	fp, sp, #8
   2f44c:	sub	sp, sp, #72	; 0x48
   2f450:	ldr	ip, [fp, #12]
   2f454:	ldr	lr, [fp, #8]
   2f458:	str	r0, [fp, #-16]
   2f45c:	str	r1, [fp, #-20]	; 0xffffffec
   2f460:	str	r2, [fp, #-24]	; 0xffffffe8
   2f464:	str	r3, [fp, #-28]	; 0xffffffe4
   2f468:	ldr	r0, [fp, #-16]
   2f46c:	ldr	r0, [r0, #84]	; 0x54
   2f470:	str	r0, [fp, #-32]	; 0xffffffe0
   2f474:	ldr	r0, [fp, #-16]
   2f478:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f47c:	str	ip, [sp, #16]
   2f480:	str	lr, [sp, #12]
   2f484:	bl	2a1a0 <__assert_fail@plt+0x18a4c>
   2f488:	str	r0, [sp, #32]
   2f48c:	ldr	r0, [fp, #-16]
   2f490:	ldr	r1, [fp, #12]
   2f494:	bl	2a1a0 <__assert_fail@plt+0x18a4c>
   2f498:	str	r0, [sp, #28]
   2f49c:	movw	r0, #0
   2f4a0:	str	r0, [fp, #-36]	; 0xffffffdc
   2f4a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f4a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f4ac:	ldr	r1, [r1, #4]
   2f4b0:	cmp	r0, r1
   2f4b4:	bge	2f598 <__assert_fail@plt+0x1de44>
   2f4b8:	ldr	r0, [fp, #-16]
   2f4bc:	ldr	r0, [r0, #116]	; 0x74
   2f4c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f4c4:	ldr	r1, [r1, #8]
   2f4c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f4cc:	ldr	r1, [r1, r2, lsl #2]
   2f4d0:	add	r1, r1, r1, lsl #1
   2f4d4:	add	r0, r0, r1, lsl #3
   2f4d8:	str	r0, [sp, #20]
   2f4dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f4e0:	ldr	r0, [r0]
   2f4e4:	ldr	r1, [sp, #20]
   2f4e8:	ldr	r1, [r1]
   2f4ec:	ldr	r0, [r0, r1, lsl #3]
   2f4f0:	str	r0, [sp, #24]
   2f4f4:	ldr	r0, [fp, #-16]
   2f4f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f4fc:	ldr	r1, [r1, #8]
   2f500:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f504:	ldr	r1, [r1, r2, lsl #2]
   2f508:	ldr	r2, [sp, #24]
   2f50c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f510:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f514:	ldr	lr, [sp, #32]
   2f518:	mov	r4, sp
   2f51c:	str	lr, [r4, #4]
   2f520:	str	ip, [r4]
   2f524:	bl	2f5b4 <__assert_fail@plt+0x1de60>
   2f528:	str	r0, [sp, #36]	; 0x24
   2f52c:	ldr	r0, [fp, #-16]
   2f530:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f534:	ldr	r1, [r1, #8]
   2f538:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f53c:	add	r1, r1, r2, lsl #2
   2f540:	ldr	r1, [r1]
   2f544:	ldr	r2, [sp, #24]
   2f548:	ldr	r3, [fp, #8]
   2f54c:	ldr	ip, [fp, #12]
   2f550:	ldr	lr, [sp, #28]
   2f554:	str	ip, [sp]
   2f558:	str	lr, [sp, #4]
   2f55c:	bl	2f5b4 <__assert_fail@plt+0x1de60>
   2f560:	str	r0, [sp, #40]	; 0x28
   2f564:	ldr	r0, [sp, #40]	; 0x28
   2f568:	ldr	r1, [sp, #36]	; 0x24
   2f56c:	cmp	r0, r1
   2f570:	bne	2f578 <__assert_fail@plt+0x1de24>
   2f574:	b	2f588 <__assert_fail@plt+0x1de34>
   2f578:	movw	r0, #1
   2f57c:	and	r0, r0, #1
   2f580:	strb	r0, [fp, #-9]
   2f584:	b	2f5a4 <__assert_fail@plt+0x1de50>
   2f588:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f58c:	add	r0, r0, #1
   2f590:	str	r0, [fp, #-36]	; 0xffffffdc
   2f594:	b	2f4a4 <__assert_fail@plt+0x1dd50>
   2f598:	movw	r0, #0
   2f59c:	and	r0, r0, #1
   2f5a0:	strb	r0, [fp, #-9]
   2f5a4:	ldrb	r0, [fp, #-9]
   2f5a8:	and	r0, r0, #1
   2f5ac:	sub	sp, fp, #8
   2f5b0:	pop	{r4, sl, fp, pc}
   2f5b4:	push	{fp, lr}
   2f5b8:	mov	fp, sp
   2f5bc:	sub	sp, sp, #32
   2f5c0:	ldr	ip, [fp, #12]
   2f5c4:	ldr	lr, [fp, #8]
   2f5c8:	str	r0, [fp, #-8]
   2f5cc:	str	r1, [fp, #-12]
   2f5d0:	str	r2, [sp, #16]
   2f5d4:	str	r3, [sp, #12]
   2f5d8:	ldr	r0, [fp, #-8]
   2f5dc:	ldr	r0, [r0, #116]	; 0x74
   2f5e0:	ldr	r1, [fp, #-12]
   2f5e4:	movw	r2, #24
   2f5e8:	mul	r1, r1, r2
   2f5ec:	add	r0, r0, r1
   2f5f0:	str	r0, [sp, #8]
   2f5f4:	ldr	r0, [fp, #8]
   2f5f8:	ldr	r1, [sp, #8]
   2f5fc:	ldr	r1, [r1, #8]
   2f600:	cmp	r0, r1
   2f604:	bge	2f614 <__assert_fail@plt+0x1dec0>
   2f608:	mvn	r0, #0
   2f60c:	str	r0, [fp, #-4]
   2f610:	b	2f6b8 <__assert_fail@plt+0x1df64>
   2f614:	ldr	r0, [sp, #8]
   2f618:	ldr	r0, [r0, #12]
   2f61c:	ldr	r1, [fp, #8]
   2f620:	cmp	r0, r1
   2f624:	bge	2f634 <__assert_fail@plt+0x1dee0>
   2f628:	movw	r0, #1
   2f62c:	str	r0, [fp, #-4]
   2f630:	b	2f6b8 <__assert_fail@plt+0x1df64>
   2f634:	ldr	r0, [fp, #8]
   2f638:	ldr	r1, [sp, #8]
   2f63c:	ldr	r1, [r1, #8]
   2f640:	cmp	r0, r1
   2f644:	movw	r0, #0
   2f648:	moveq	r0, #1
   2f64c:	and	r0, r0, #1
   2f650:	str	r0, [sp, #4]
   2f654:	ldr	r0, [fp, #8]
   2f658:	ldr	r1, [sp, #8]
   2f65c:	ldr	r1, [r1, #12]
   2f660:	cmp	r0, r1
   2f664:	movw	r0, #0
   2f668:	moveq	r0, #1
   2f66c:	and	r0, r0, #1
   2f670:	lsl	r0, r0, #1
   2f674:	ldr	r1, [sp, #4]
   2f678:	orr	r0, r1, r0
   2f67c:	str	r0, [sp, #4]
   2f680:	ldr	r0, [sp, #4]
   2f684:	cmp	r0, #0
   2f688:	bne	2f698 <__assert_fail@plt+0x1df44>
   2f68c:	movw	r0, #0
   2f690:	str	r0, [fp, #-4]
   2f694:	b	2f6b8 <__assert_fail@plt+0x1df64>
   2f698:	ldr	r0, [fp, #-8]
   2f69c:	ldr	r1, [sp, #4]
   2f6a0:	ldr	r2, [sp, #16]
   2f6a4:	ldr	r3, [sp, #12]
   2f6a8:	ldr	ip, [fp, #12]
   2f6ac:	str	ip, [sp]
   2f6b0:	bl	2f6c4 <__assert_fail@plt+0x1df70>
   2f6b4:	str	r0, [fp, #-4]
   2f6b8:	ldr	r0, [fp, #-4]
   2f6bc:	mov	sp, fp
   2f6c0:	pop	{fp, pc}
   2f6c4:	push	{fp, lr}
   2f6c8:	mov	fp, sp
   2f6cc:	sub	sp, sp, #56	; 0x38
   2f6d0:	ldr	ip, [fp, #8]
   2f6d4:	str	r0, [fp, #-8]
   2f6d8:	str	r1, [fp, #-12]
   2f6dc:	str	r2, [fp, #-16]
   2f6e0:	str	r3, [fp, #-20]	; 0xffffffec
   2f6e4:	ldr	r0, [fp, #-8]
   2f6e8:	ldr	r0, [r0, #84]	; 0x54
   2f6ec:	str	r0, [fp, #-24]	; 0xffffffe8
   2f6f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6f4:	ldr	r0, [r0, #24]
   2f6f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f6fc:	movw	r2, #12
   2f700:	mul	r1, r1, r2
   2f704:	add	r0, r0, r1
   2f708:	str	r0, [sp, #28]
   2f70c:	movw	r0, #0
   2f710:	str	r0, [sp, #24]
   2f714:	ldr	r0, [sp, #24]
   2f718:	ldr	r1, [sp, #28]
   2f71c:	ldr	r1, [r1, #4]
   2f720:	cmp	r0, r1
   2f724:	bge	2f99c <__assert_fail@plt+0x1e248>
   2f728:	ldr	r0, [sp, #28]
   2f72c:	ldr	r0, [r0, #8]
   2f730:	ldr	r1, [sp, #24]
   2f734:	ldr	r0, [r0, r1, lsl #2]
   2f738:	str	r0, [sp, #20]
   2f73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f740:	ldr	r0, [r0]
   2f744:	ldr	r1, [sp, #20]
   2f748:	add	r0, r0, r1, lsl #3
   2f74c:	ldrb	r0, [r0, #4]
   2f750:	mov	r1, r0
   2f754:	cmp	r0, #4
   2f758:	str	r1, [sp, #4]
   2f75c:	beq	2f784 <__assert_fail@plt+0x1e030>
   2f760:	b	2f764 <__assert_fail@plt+0x1e010>
   2f764:	ldr	r0, [sp, #4]
   2f768:	cmp	r0, #8
   2f76c:	beq	2f904 <__assert_fail@plt+0x1e1b0>
   2f770:	b	2f774 <__assert_fail@plt+0x1e020>
   2f774:	ldr	r0, [sp, #4]
   2f778:	cmp	r0, #9
   2f77c:	beq	2f944 <__assert_fail@plt+0x1e1f0>
   2f780:	b	2f984 <__assert_fail@plt+0x1e230>
   2f784:	ldr	r0, [fp, #8]
   2f788:	cmn	r0, #1
   2f78c:	beq	2f900 <__assert_fail@plt+0x1e1ac>
   2f790:	ldr	r0, [fp, #-8]
   2f794:	ldr	r0, [r0, #116]	; 0x74
   2f798:	ldr	r1, [fp, #8]
   2f79c:	movw	r2, #24
   2f7a0:	mul	r1, r1, r2
   2f7a4:	add	r0, r0, r1
   2f7a8:	str	r0, [sp, #16]
   2f7ac:	ldr	r0, [sp, #16]
   2f7b0:	ldr	r0, [r0]
   2f7b4:	ldr	r1, [sp, #20]
   2f7b8:	cmp	r0, r1
   2f7bc:	beq	2f7c4 <__assert_fail@plt+0x1e070>
   2f7c0:	b	2f8e4 <__assert_fail@plt+0x1e190>
   2f7c4:	ldr	r0, [fp, #-16]
   2f7c8:	cmp	r0, #32
   2f7cc:	bge	2f7f4 <__assert_fail@plt+0x1e0a0>
   2f7d0:	ldr	r0, [sp, #16]
   2f7d4:	ldr	r0, [r0, #16]
   2f7d8:	ldr	r1, [fp, #-16]
   2f7dc:	movw	r2, #1
   2f7e0:	lsl	r1, r2, r1
   2f7e4:	and	r0, r0, r1
   2f7e8:	cmp	r0, #0
   2f7ec:	bne	2f7f4 <__assert_fail@plt+0x1e0a0>
   2f7f0:	b	2f8e4 <__assert_fail@plt+0x1e190>
   2f7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7f8:	ldr	r0, [r0, #20]
   2f7fc:	ldr	r1, [sp, #20]
   2f800:	movw	r2, #12
   2f804:	mul	r1, r1, r2
   2f808:	add	r0, r0, r1
   2f80c:	ldr	r0, [r0, #8]
   2f810:	ldr	r0, [r0]
   2f814:	str	r0, [sp, #12]
   2f818:	ldr	r0, [sp, #12]
   2f81c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f820:	cmp	r0, r1
   2f824:	bne	2f850 <__assert_fail@plt+0x1e0fc>
   2f828:	ldr	r0, [fp, #-12]
   2f82c:	and	r0, r0, #1
   2f830:	cmp	r0, #0
   2f834:	beq	2f844 <__assert_fail@plt+0x1e0f0>
   2f838:	mvn	r0, #0
   2f83c:	str	r0, [fp, #-4]
   2f840:	b	2f9c0 <__assert_fail@plt+0x1e26c>
   2f844:	movw	r0, #0
   2f848:	str	r0, [fp, #-4]
   2f84c:	b	2f9c0 <__assert_fail@plt+0x1e26c>
   2f850:	ldr	r0, [fp, #-8]
   2f854:	ldr	r1, [fp, #-12]
   2f858:	ldr	r2, [fp, #-16]
   2f85c:	ldr	r3, [sp, #12]
   2f860:	ldr	ip, [fp, #8]
   2f864:	str	ip, [sp]
   2f868:	bl	2f6c4 <__assert_fail@plt+0x1df70>
   2f86c:	str	r0, [sp, #8]
   2f870:	ldr	r0, [sp, #8]
   2f874:	cmn	r0, #1
   2f878:	bne	2f888 <__assert_fail@plt+0x1e134>
   2f87c:	mvn	r0, #0
   2f880:	str	r0, [fp, #-4]
   2f884:	b	2f9c0 <__assert_fail@plt+0x1e26c>
   2f888:	ldr	r0, [sp, #8]
   2f88c:	cmp	r0, #0
   2f890:	bne	2f8b0 <__assert_fail@plt+0x1e15c>
   2f894:	ldr	r0, [fp, #-12]
   2f898:	and	r0, r0, #2
   2f89c:	cmp	r0, #0
   2f8a0:	beq	2f8b0 <__assert_fail@plt+0x1e15c>
   2f8a4:	movw	r0, #0
   2f8a8:	str	r0, [fp, #-4]
   2f8ac:	b	2f9c0 <__assert_fail@plt+0x1e26c>
   2f8b0:	ldr	r0, [fp, #-16]
   2f8b4:	cmp	r0, #32
   2f8b8:	bge	2f8e0 <__assert_fail@plt+0x1e18c>
   2f8bc:	ldr	r0, [fp, #-16]
   2f8c0:	movw	r1, #1
   2f8c4:	lsl	r0, r1, r0
   2f8c8:	mvn	r1, #0
   2f8cc:	eor	r0, r0, r1
   2f8d0:	ldr	r1, [sp, #16]
   2f8d4:	ldr	r2, [r1, #16]
   2f8d8:	and	r0, r2, r0
   2f8dc:	str	r0, [r1, #16]
   2f8e0:	b	2f8e4 <__assert_fail@plt+0x1e190>
   2f8e4:	ldr	r0, [sp, #16]
   2f8e8:	add	r1, r0, #24
   2f8ec:	str	r1, [sp, #16]
   2f8f0:	ldrsb	r0, [r0, #20]
   2f8f4:	cmp	r0, #0
   2f8f8:	bne	2f7ac <__assert_fail@plt+0x1e058>
   2f8fc:	b	2f900 <__assert_fail@plt+0x1e1ac>
   2f900:	b	2f988 <__assert_fail@plt+0x1e234>
   2f904:	ldr	r0, [fp, #-12]
   2f908:	and	r0, r0, #1
   2f90c:	cmp	r0, #0
   2f910:	beq	2f940 <__assert_fail@plt+0x1e1ec>
   2f914:	ldr	r0, [fp, #-16]
   2f918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f91c:	ldr	r1, [r1]
   2f920:	ldr	r2, [sp, #20]
   2f924:	add	r1, r1, r2, lsl #3
   2f928:	ldr	r1, [r1]
   2f92c:	cmp	r0, r1
   2f930:	bne	2f940 <__assert_fail@plt+0x1e1ec>
   2f934:	mvn	r0, #0
   2f938:	str	r0, [fp, #-4]
   2f93c:	b	2f9c0 <__assert_fail@plt+0x1e26c>
   2f940:	b	2f988 <__assert_fail@plt+0x1e234>
   2f944:	ldr	r0, [fp, #-12]
   2f948:	and	r0, r0, #2
   2f94c:	cmp	r0, #0
   2f950:	beq	2f980 <__assert_fail@plt+0x1e22c>
   2f954:	ldr	r0, [fp, #-16]
   2f958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f95c:	ldr	r1, [r1]
   2f960:	ldr	r2, [sp, #20]
   2f964:	add	r1, r1, r2, lsl #3
   2f968:	ldr	r1, [r1]
   2f96c:	cmp	r0, r1
   2f970:	bne	2f980 <__assert_fail@plt+0x1e22c>
   2f974:	movw	r0, #0
   2f978:	str	r0, [fp, #-4]
   2f97c:	b	2f9c0 <__assert_fail@plt+0x1e26c>
   2f980:	b	2f988 <__assert_fail@plt+0x1e234>
   2f984:	b	2f988 <__assert_fail@plt+0x1e234>
   2f988:	b	2f98c <__assert_fail@plt+0x1e238>
   2f98c:	ldr	r0, [sp, #24]
   2f990:	add	r0, r0, #1
   2f994:	str	r0, [sp, #24]
   2f998:	b	2f714 <__assert_fail@plt+0x1dfc0>
   2f99c:	ldr	r0, [fp, #-12]
   2f9a0:	and	r0, r0, #2
   2f9a4:	cmp	r0, #0
   2f9a8:	movw	r0, #0
   2f9ac:	movne	r0, #1
   2f9b0:	tst	r0, #1
   2f9b4:	movw	r0, #1
   2f9b8:	moveq	r0, #0
   2f9bc:	str	r0, [fp, #-4]
   2f9c0:	ldr	r0, [fp, #-4]
   2f9c4:	mov	sp, fp
   2f9c8:	pop	{fp, pc}
   2f9cc:	push	{fp, lr}
   2f9d0:	mov	fp, sp
   2f9d4:	sub	sp, sp, #32
   2f9d8:	ldr	ip, [fp, #8]
   2f9dc:	str	r0, [fp, #-4]
   2f9e0:	str	r1, [fp, #-8]
   2f9e4:	str	r2, [fp, #-12]
   2f9e8:	str	r3, [sp, #16]
   2f9ec:	ldr	r0, [fp, #-4]
   2f9f0:	ldr	r0, [r0, #84]	; 0x54
   2f9f4:	str	r0, [sp, #12]
   2f9f8:	ldr	r0, [sp, #12]
   2f9fc:	ldr	r1, [fp, #-12]
   2fa00:	ldr	r2, [fp, #-4]
   2fa04:	ldr	r3, [sp, #16]
   2fa08:	str	ip, [sp, #4]
   2fa0c:	bl	2bd8c <__assert_fail@plt+0x1a638>
   2fa10:	str	r0, [sp, #8]
   2fa14:	ldr	r0, [sp, #8]
   2fa18:	cmp	r0, #0
   2fa1c:	ble	2faa4 <__assert_fail@plt+0x1e350>
   2fa20:	ldr	r0, [sp, #16]
   2fa24:	ldr	r1, [sp, #8]
   2fa28:	add	r0, r0, r1
   2fa2c:	ldr	r1, [fp, #8]
   2fa30:	cmp	r0, r1
   2fa34:	bgt	2faa4 <__assert_fail@plt+0x1e350>
   2fa38:	ldr	r0, [fp, #-8]
   2fa3c:	ldr	r0, [r0]
   2fa40:	ldr	r1, [sp, #16]
   2fa44:	ldr	r2, [sp, #8]
   2fa48:	add	r1, r1, r2
   2fa4c:	add	r0, r0, r1, lsl #2
   2fa50:	ldr	r0, [r0]
   2fa54:	movw	r1, #0
   2fa58:	cmp	r0, r1
   2fa5c:	beq	2fa9c <__assert_fail@plt+0x1e348>
   2fa60:	ldr	r0, [fp, #-8]
   2fa64:	ldr	r0, [r0]
   2fa68:	ldr	r1, [sp, #16]
   2fa6c:	ldr	r2, [sp, #8]
   2fa70:	add	r1, r1, r2
   2fa74:	ldr	r0, [r0, r1, lsl #2]
   2fa78:	add	r0, r0, #4
   2fa7c:	ldr	r1, [sp, #12]
   2fa80:	ldr	r1, [r1, #12]
   2fa84:	ldr	r2, [fp, #-12]
   2fa88:	add	r1, r1, r2, lsl #2
   2fa8c:	ldr	r1, [r1]
   2fa90:	bl	25d34 <__assert_fail@plt+0x145e0>
   2fa94:	cmp	r0, #0
   2fa98:	bne	2faa4 <__assert_fail@plt+0x1e350>
   2fa9c:	movw	r0, #0
   2faa0:	str	r0, [sp, #8]
   2faa4:	ldr	r0, [sp, #8]
   2faa8:	mov	sp, fp
   2faac:	pop	{fp, pc}
   2fab0:	sub	sp, sp, #4
   2fab4:	str	r0, [sp]
   2fab8:	ldr	r0, [sp]
   2fabc:	movw	r1, #0
   2fac0:	str	r1, [r0]
   2fac4:	ldr	r0, [sp]
   2fac8:	movw	r1, #16
   2facc:	str	r1, [r0, #4]
   2fad0:	ldr	r0, [sp]
   2fad4:	add	r0, r0, #12
   2fad8:	ldr	r1, [sp]
   2fadc:	str	r0, [r1, #8]
   2fae0:	add	sp, sp, #4
   2fae4:	bx	lr
   2fae8:	push	{fp, lr}
   2faec:	mov	fp, sp
   2faf0:	sub	sp, sp, #16
   2faf4:	str	r0, [sp, #8]
   2faf8:	str	r1, [sp, #4]
   2fafc:	ldr	r0, [sp, #4]
   2fb00:	ldr	r1, [sp, #8]
   2fb04:	ldr	r1, [r1]
   2fb08:	cmp	r0, r1
   2fb0c:	bls	2fb5c <__assert_fail@plt+0x1e408>
   2fb10:	ldr	r0, [sp, #8]
   2fb14:	ldr	r1, [sp, #4]
   2fb18:	ldr	r2, [sp, #8]
   2fb1c:	add	r2, r2, #12
   2fb20:	movw	r3, #8
   2fb24:	bl	38408 <__assert_fail@plt+0x26cb4>
   2fb28:	and	r0, r0, #1
   2fb2c:	strb	r0, [sp, #3]
   2fb30:	ldrb	r0, [sp, #3]
   2fb34:	mvn	r1, #0
   2fb38:	eor	r0, r0, r1
   2fb3c:	tst	r0, #1
   2fb40:	beq	2fb4c <__assert_fail@plt+0x1e3f8>
   2fb44:	ldr	r0, [sp, #8]
   2fb48:	bl	30544 <__assert_fail@plt+0x1edf0>
   2fb4c:	ldrb	r0, [sp, #3]
   2fb50:	and	r0, r0, #1
   2fb54:	strb	r0, [fp, #-1]
   2fb58:	b	2fb98 <__assert_fail@plt+0x1e444>
   2fb5c:	ldr	r0, [sp, #8]
   2fb60:	ldr	r0, [r0, #8]
   2fb64:	ldr	r1, [sp, #4]
   2fb68:	add	r0, r0, r1, lsl #3
   2fb6c:	ldr	r1, [sp, #8]
   2fb70:	ldr	r1, [r1]
   2fb74:	ldr	r2, [sp, #4]
   2fb78:	sub	r1, r1, r2
   2fb7c:	bl	305a0 <__assert_fail@plt+0x1ee4c>
   2fb80:	ldr	r0, [sp, #4]
   2fb84:	ldr	r1, [sp, #8]
   2fb88:	str	r0, [r1]
   2fb8c:	movw	r0, #1
   2fb90:	and	r0, r0, #1
   2fb94:	strb	r0, [fp, #-1]
   2fb98:	ldrb	r0, [fp, #-1]
   2fb9c:	and	r0, r0, #1
   2fba0:	mov	sp, fp
   2fba4:	pop	{fp, pc}
   2fba8:	push	{fp, lr}
   2fbac:	mov	fp, sp
   2fbb0:	sub	sp, sp, #8
   2fbb4:	str	r0, [sp, #4]
   2fbb8:	ldr	r0, [sp, #4]
   2fbbc:	ldr	r0, [r0, #8]
   2fbc0:	ldr	r1, [sp, #4]
   2fbc4:	ldr	r1, [r1]
   2fbc8:	bl	305a0 <__assert_fail@plt+0x1ee4c>
   2fbcc:	ldr	r0, [sp, #4]
   2fbd0:	bl	305b4 <__assert_fail@plt+0x1ee60>
   2fbd4:	ldr	r0, [sp, #4]
   2fbd8:	bl	2fab0 <__assert_fail@plt+0x1e35c>
   2fbdc:	mov	sp, fp
   2fbe0:	pop	{fp, pc}
   2fbe4:	push	{fp, lr}
   2fbe8:	mov	fp, sp
   2fbec:	sub	sp, sp, #8
   2fbf0:	str	r0, [sp, #4]
   2fbf4:	ldr	r0, [sp, #4]
   2fbf8:	movw	r1, #0
   2fbfc:	cmp	r0, r1
   2fc00:	beq	2fc7c <__assert_fail@plt+0x1e528>
   2fc04:	movw	r0, #0
   2fc08:	str	r0, [sp]
   2fc0c:	ldr	r0, [sp]
   2fc10:	ldr	r1, [sp, #4]
   2fc14:	ldr	r1, [r1]
   2fc18:	cmp	r0, r1
   2fc1c:	bge	2fc70 <__assert_fail@plt+0x1e51c>
   2fc20:	ldr	r0, [sp, #4]
   2fc24:	ldr	r0, [r0, #8]
   2fc28:	ldr	r1, [sp]
   2fc2c:	movw	r2, #24
   2fc30:	mul	r1, r1, r2
   2fc34:	add	r0, r0, r1
   2fc38:	ldr	r0, [r0, #20]
   2fc3c:	bl	15f68 <__assert_fail@plt+0x4814>
   2fc40:	ldr	r0, [sp, #4]
   2fc44:	ldr	r0, [r0, #8]
   2fc48:	ldr	r1, [sp]
   2fc4c:	movw	r2, #24
   2fc50:	mul	r1, r1, r2
   2fc54:	add	r0, r0, r1
   2fc58:	ldr	r0, [r0, #8]
   2fc5c:	bl	15f68 <__assert_fail@plt+0x4814>
   2fc60:	ldr	r0, [sp]
   2fc64:	add	r0, r0, #1
   2fc68:	str	r0, [sp]
   2fc6c:	b	2fc0c <__assert_fail@plt+0x1e4b8>
   2fc70:	ldr	r0, [sp, #4]
   2fc74:	ldr	r0, [r0, #8]
   2fc78:	bl	15f68 <__assert_fail@plt+0x4814>
   2fc7c:	movw	r0, #0
   2fc80:	mov	sp, fp
   2fc84:	pop	{fp, pc}
   2fc88:	sub	sp, sp, #4
   2fc8c:	str	r0, [sp]
   2fc90:	ldr	r0, [sp]
   2fc94:	ldr	r0, [r0, #8]
   2fc98:	add	sp, sp, #4
   2fc9c:	bx	lr
   2fca0:	push	{fp, lr}
   2fca4:	mov	fp, sp
   2fca8:	sub	sp, sp, #32
   2fcac:	ldr	ip, [fp, #12]
   2fcb0:	ldr	lr, [fp, #8]
   2fcb4:	str	r0, [fp, #-4]
   2fcb8:	str	r1, [fp, #-8]
   2fcbc:	str	r2, [fp, #-12]
   2fcc0:	str	r3, [sp, #16]
   2fcc4:	ldr	r0, [fp, #-4]
   2fcc8:	ldr	r0, [r0]
   2fccc:	ldr	r1, [sp, #16]
   2fcd0:	add	r0, r0, r1, lsl #3
   2fcd4:	ldr	r0, [r0, #4]
   2fcd8:	and	r0, r0, #255	; 0xff
   2fcdc:	str	r0, [sp, #12]
   2fce0:	ldr	r0, [sp, #12]
   2fce4:	cmp	r0, #8
   2fce8:	bne	2fd40 <__assert_fail@plt+0x1e5ec>
   2fcec:	ldr	r0, [fp, #-4]
   2fcf0:	ldr	r0, [r0]
   2fcf4:	ldr	r1, [sp, #16]
   2fcf8:	add	r0, r0, r1, lsl #3
   2fcfc:	ldr	r0, [r0]
   2fd00:	add	r0, r0, #1
   2fd04:	str	r0, [sp, #8]
   2fd08:	ldr	r0, [sp, #8]
   2fd0c:	ldr	r1, [fp, #12]
   2fd10:	cmp	r0, r1
   2fd14:	bge	2fd3c <__assert_fail@plt+0x1e5e8>
   2fd18:	ldr	r0, [fp, #8]
   2fd1c:	ldr	r1, [fp, #-8]
   2fd20:	ldr	r2, [sp, #8]
   2fd24:	str	r0, [r1, r2, lsl #3]
   2fd28:	ldr	r0, [fp, #-8]
   2fd2c:	ldr	r1, [sp, #8]
   2fd30:	add	r0, r0, r1, lsl #3
   2fd34:	mvn	r1, #0
   2fd38:	str	r1, [r0, #4]
   2fd3c:	b	2fe38 <__assert_fail@plt+0x1e6e4>
   2fd40:	ldr	r0, [sp, #12]
   2fd44:	cmp	r0, #9
   2fd48:	bne	2fe34 <__assert_fail@plt+0x1e6e0>
   2fd4c:	ldr	r0, [fp, #-4]
   2fd50:	ldr	r0, [r0]
   2fd54:	ldr	r1, [sp, #16]
   2fd58:	add	r0, r0, r1, lsl #3
   2fd5c:	ldr	r0, [r0]
   2fd60:	add	r0, r0, #1
   2fd64:	str	r0, [sp, #4]
   2fd68:	ldr	r0, [sp, #4]
   2fd6c:	ldr	r1, [fp, #12]
   2fd70:	cmp	r0, r1
   2fd74:	bge	2fe30 <__assert_fail@plt+0x1e6dc>
   2fd78:	ldr	r0, [fp, #-8]
   2fd7c:	ldr	r1, [sp, #4]
   2fd80:	add	r0, r0, r1, lsl #3
   2fd84:	ldr	r0, [r0]
   2fd88:	ldr	r1, [fp, #8]
   2fd8c:	cmp	r0, r1
   2fd90:	bge	2fdc0 <__assert_fail@plt+0x1e66c>
   2fd94:	ldr	r0, [fp, #8]
   2fd98:	ldr	r1, [fp, #-8]
   2fd9c:	ldr	r2, [sp, #4]
   2fda0:	add	r1, r1, r2, lsl #3
   2fda4:	str	r0, [r1, #4]
   2fda8:	ldr	r0, [fp, #-12]
   2fdac:	ldr	r1, [fp, #-8]
   2fdb0:	ldr	r2, [fp, #12]
   2fdb4:	lsl	r2, r2, #3
   2fdb8:	bl	11478 <memcpy@plt>
   2fdbc:	b	2fe2c <__assert_fail@plt+0x1e6d8>
   2fdc0:	ldr	r0, [fp, #-4]
   2fdc4:	ldr	r0, [r0]
   2fdc8:	ldr	r1, [sp, #16]
   2fdcc:	add	r0, r0, r1, lsl #3
   2fdd0:	ldr	r0, [r0, #4]
   2fdd4:	lsr	r0, r0, #19
   2fdd8:	and	r0, r0, #1
   2fddc:	cmp	r0, #0
   2fde0:	beq	2fe14 <__assert_fail@plt+0x1e6c0>
   2fde4:	ldr	r0, [fp, #-12]
   2fde8:	ldr	r1, [sp, #4]
   2fdec:	add	r0, r0, r1, lsl #3
   2fdf0:	ldr	r0, [r0]
   2fdf4:	cmn	r0, #1
   2fdf8:	beq	2fe14 <__assert_fail@plt+0x1e6c0>
   2fdfc:	ldr	r0, [fp, #-8]
   2fe00:	ldr	r1, [fp, #-12]
   2fe04:	ldr	r2, [fp, #12]
   2fe08:	lsl	r2, r2, #3
   2fe0c:	bl	11478 <memcpy@plt>
   2fe10:	b	2fe28 <__assert_fail@plt+0x1e6d4>
   2fe14:	ldr	r0, [fp, #8]
   2fe18:	ldr	r1, [fp, #-8]
   2fe1c:	ldr	r2, [sp, #4]
   2fe20:	add	r1, r1, r2, lsl #3
   2fe24:	str	r0, [r1, #4]
   2fe28:	b	2fe2c <__assert_fail@plt+0x1e6d8>
   2fe2c:	b	2fe30 <__assert_fail@plt+0x1e6dc>
   2fe30:	b	2fe34 <__assert_fail@plt+0x1e6e0>
   2fe34:	b	2fe38 <__assert_fail@plt+0x1e6e4>
   2fe38:	mov	sp, fp
   2fe3c:	pop	{fp, pc}
   2fe40:	push	{fp, lr}
   2fe44:	mov	fp, sp
   2fe48:	sub	sp, sp, #32
   2fe4c:	ldr	ip, [fp, #12]
   2fe50:	ldr	lr, [fp, #8]
   2fe54:	str	r0, [fp, #-8]
   2fe58:	str	r1, [fp, #-12]
   2fe5c:	str	r2, [sp, #16]
   2fe60:	str	r3, [sp, #12]
   2fe64:	ldr	r0, [fp, #-8]
   2fe68:	movw	r1, #0
   2fe6c:	cmp	r0, r1
   2fe70:	beq	2fe84 <__assert_fail@plt+0x1e730>
   2fe74:	ldr	r0, [fp, #-8]
   2fe78:	ldr	r0, [r0]
   2fe7c:	cmp	r0, #0
   2fe80:	bne	2fe90 <__assert_fail@plt+0x1e73c>
   2fe84:	mvn	r0, #0
   2fe88:	str	r0, [fp, #-4]
   2fe8c:	b	2ffcc <__assert_fail@plt+0x1e878>
   2fe90:	ldr	r0, [fp, #-8]
   2fe94:	ldr	r1, [r0]
   2fe98:	sub	r1, r1, #1
   2fe9c:	str	r1, [r0]
   2fea0:	str	r1, [sp, #8]
   2fea4:	ldr	r0, [fp, #-8]
   2fea8:	ldr	r0, [r0, #8]
   2feac:	ldr	r1, [sp, #8]
   2feb0:	add	r1, r1, r1, lsl #1
   2feb4:	ldr	r0, [r0, r1, lsl #3]
   2feb8:	ldr	r1, [fp, #-12]
   2febc:	str	r0, [r1]
   2fec0:	ldr	r0, [sp, #12]
   2fec4:	ldr	r1, [fp, #-8]
   2fec8:	ldr	r1, [r1, #8]
   2fecc:	ldr	r2, [sp, #8]
   2fed0:	add	r2, r2, r2, lsl #1
   2fed4:	add	r1, r1, r2, lsl #3
   2fed8:	ldr	r1, [r1, #8]
   2fedc:	ldr	r2, [sp, #16]
   2fee0:	lsl	r2, r2, #3
   2fee4:	bl	11478 <memcpy@plt>
   2fee8:	ldr	r1, [fp, #8]
   2feec:	ldr	r2, [fp, #-8]
   2fef0:	ldr	r2, [r2, #8]
   2fef4:	ldr	r3, [sp, #8]
   2fef8:	add	r3, r3, r3, lsl #1
   2fefc:	add	r2, r2, r3, lsl #3
   2ff00:	ldr	r2, [r2, #8]
   2ff04:	ldr	r3, [sp, #16]
   2ff08:	add	r2, r2, r3, lsl #3
   2ff0c:	lsl	r3, r3, #3
   2ff10:	str	r0, [sp, #4]
   2ff14:	mov	r0, r1
   2ff18:	mov	r1, r2
   2ff1c:	mov	r2, r3
   2ff20:	bl	11478 <memcpy@plt>
   2ff24:	ldr	r0, [fp, #12]
   2ff28:	ldr	r0, [r0, #8]
   2ff2c:	bl	15f68 <__assert_fail@plt+0x4814>
   2ff30:	ldr	r0, [fp, #-8]
   2ff34:	ldr	r0, [r0, #8]
   2ff38:	ldr	r1, [sp, #8]
   2ff3c:	movw	r2, #24
   2ff40:	mul	r1, r1, r2
   2ff44:	add	r0, r0, r1
   2ff48:	ldr	r0, [r0, #8]
   2ff4c:	bl	15f68 <__assert_fail@plt+0x4814>
   2ff50:	ldr	r0, [fp, #12]
   2ff54:	ldr	r1, [fp, #-8]
   2ff58:	ldr	r1, [r1, #8]
   2ff5c:	ldr	r2, [sp, #8]
   2ff60:	movw	r3, #24
   2ff64:	mul	r2, r2, r3
   2ff68:	add	r1, r1, r2
   2ff6c:	ldr	r2, [r1, #12]
   2ff70:	str	r2, [r0]
   2ff74:	ldr	r2, [r1, #16]
   2ff78:	str	r2, [r0, #4]
   2ff7c:	ldr	r1, [r1, #20]
   2ff80:	str	r1, [r0, #8]
   2ff84:	ldr	r0, [fp, #-8]
   2ff88:	ldr	r0, [r0, #8]
   2ff8c:	ldr	r1, [sp, #8]
   2ff90:	mul	r1, r1, r3
   2ff94:	add	r0, r0, r1
   2ff98:	ldr	r0, [r0, #4]
   2ff9c:	movw	r1, #0
   2ffa0:	cmp	r1, r0
   2ffa4:	bgt	2ffac <__assert_fail@plt+0x1e858>
   2ffa8:	b	2ffac <__assert_fail@plt+0x1e858>
   2ffac:	ldr	r0, [fp, #-8]
   2ffb0:	ldr	r0, [r0, #8]
   2ffb4:	ldr	r1, [sp, #8]
   2ffb8:	movw	r2, #24
   2ffbc:	mul	r1, r1, r2
   2ffc0:	add	r0, r0, r1
   2ffc4:	ldr	r0, [r0, #4]
   2ffc8:	str	r0, [fp, #-4]
   2ffcc:	ldr	r0, [fp, #-4]
   2ffd0:	mov	sp, fp
   2ffd4:	pop	{fp, pc}
   2ffd8:	push	{r4, r5, fp, lr}
   2ffdc:	add	fp, sp, #8
   2ffe0:	sub	sp, sp, #96	; 0x60
   2ffe4:	ldr	ip, [fp, #20]
   2ffe8:	ldr	lr, [fp, #16]
   2ffec:	ldr	r4, [fp, #12]
   2fff0:	ldr	r5, [fp, #8]
   2fff4:	str	r0, [fp, #-16]
   2fff8:	str	r1, [fp, #-20]	; 0xffffffec
   2fffc:	str	r2, [fp, #-24]	; 0xffffffe8
   30000:	str	r3, [fp, #-28]	; 0xffffffe4
   30004:	ldr	r0, [fp, #-16]
   30008:	ldr	r0, [r0, #84]	; 0x54
   3000c:	str	r0, [fp, #-32]	; 0xffffffe0
   30010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30014:	ldr	r0, [r0]
   30018:	ldr	r1, [fp, #12]
   3001c:	add	r0, r0, r1, lsl #3
   30020:	ldr	r0, [r0, #4]
   30024:	and	r0, r0, #255	; 0xff
   30028:	and	r0, r0, #8
   3002c:	cmp	r0, #0
   30030:	beq	301c4 <__assert_fail@plt+0x1ea70>
   30034:	ldr	r0, [fp, #-16]
   30038:	ldr	r0, [r0, #100]	; 0x64
   3003c:	ldr	r1, [fp, #8]
   30040:	ldr	r1, [r1]
   30044:	add	r0, r0, r1, lsl #2
   30048:	ldr	r0, [r0]
   3004c:	add	r0, r0, #4
   30050:	str	r0, [fp, #-36]	; 0xffffffdc
   30054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30058:	ldr	r0, [r0, #20]
   3005c:	ldr	r1, [fp, #12]
   30060:	movw	r2, #12
   30064:	mul	r1, r1, r2
   30068:	add	r0, r0, r1
   3006c:	str	r0, [fp, #-40]	; 0xffffffd8
   30070:	ldr	r0, [fp, #16]
   30074:	ldr	r1, [fp, #12]
   30078:	bl	25d34 <__assert_fail@plt+0x145e0>
   3007c:	cmp	r0, #0
   30080:	bne	300bc <__assert_fail@plt+0x1e968>
   30084:	ldr	r0, [fp, #16]
   30088:	ldr	r1, [fp, #12]
   3008c:	bl	25878 <__assert_fail@plt+0x14124>
   30090:	and	r0, r0, #1
   30094:	strb	r0, [fp, #-41]	; 0xffffffd7
   30098:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   3009c:	mvn	r1, #0
   300a0:	eor	r0, r0, r1
   300a4:	tst	r0, #1
   300a8:	beq	300b8 <__assert_fail@plt+0x1e964>
   300ac:	mvn	r0, #1
   300b0:	str	r0, [fp, #-12]
   300b4:	b	30538 <__assert_fail@plt+0x1ede4>
   300b8:	b	300bc <__assert_fail@plt+0x1e968>
   300bc:	mvn	r0, #0
   300c0:	str	r0, [fp, #-48]	; 0xffffffd0
   300c4:	movw	r0, #0
   300c8:	str	r0, [sp, #52]	; 0x34
   300cc:	ldr	r0, [sp, #52]	; 0x34
   300d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   300d4:	ldr	r1, [r1, #4]
   300d8:	cmp	r0, r1
   300dc:	bge	301b8 <__assert_fail@plt+0x1ea64>
   300e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   300e4:	ldr	r0, [r0, #8]
   300e8:	ldr	r1, [sp, #52]	; 0x34
   300ec:	add	r0, r0, r1, lsl #2
   300f0:	ldr	r0, [r0]
   300f4:	str	r0, [sp, #48]	; 0x30
   300f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   300fc:	ldr	r1, [sp, #48]	; 0x30
   30100:	bl	25d34 <__assert_fail@plt+0x145e0>
   30104:	cmp	r0, #0
   30108:	bne	30110 <__assert_fail@plt+0x1e9bc>
   3010c:	b	301a8 <__assert_fail@plt+0x1ea54>
   30110:	ldr	r0, [fp, #-48]	; 0xffffffd0
   30114:	cmn	r0, #1
   30118:	bne	30128 <__assert_fail@plt+0x1e9d4>
   3011c:	ldr	r0, [sp, #48]	; 0x30
   30120:	str	r0, [fp, #-48]	; 0xffffffd0
   30124:	b	301a4 <__assert_fail@plt+0x1ea50>
   30128:	ldr	r0, [fp, #16]
   3012c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   30130:	bl	25d34 <__assert_fail@plt+0x145e0>
   30134:	cmp	r0, #0
   30138:	beq	30148 <__assert_fail@plt+0x1e9f4>
   3013c:	ldr	r0, [sp, #48]	; 0x30
   30140:	str	r0, [fp, #-12]
   30144:	b	30538 <__assert_fail@plt+0x1ede4>
   30148:	ldr	r0, [fp, #20]
   3014c:	movw	r1, #0
   30150:	cmp	r0, r1
   30154:	beq	3019c <__assert_fail@plt+0x1ea48>
   30158:	ldr	r0, [fp, #20]
   3015c:	ldr	r1, [fp, #8]
   30160:	ldr	r1, [r1]
   30164:	ldr	r2, [sp, #48]	; 0x30
   30168:	ldr	r3, [fp, #-20]	; 0xffffffec
   3016c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   30170:	ldr	lr, [fp, #-28]	; 0xffffffe4
   30174:	ldr	r4, [fp, #16]
   30178:	str	ip, [sp]
   3017c:	str	lr, [sp, #4]
   30180:	str	r4, [sp, #8]
   30184:	bl	305f8 <__assert_fail@plt+0x1eea4>
   30188:	cmp	r0, #0
   3018c:	beq	3019c <__assert_fail@plt+0x1ea48>
   30190:	mvn	r0, #1
   30194:	str	r0, [fp, #-12]
   30198:	b	30538 <__assert_fail@plt+0x1ede4>
   3019c:	b	301a0 <__assert_fail@plt+0x1ea4c>
   301a0:	b	301b8 <__assert_fail@plt+0x1ea64>
   301a4:	b	301a8 <__assert_fail@plt+0x1ea54>
   301a8:	ldr	r0, [sp, #52]	; 0x34
   301ac:	add	r0, r0, #1
   301b0:	str	r0, [sp, #52]	; 0x34
   301b4:	b	300cc <__assert_fail@plt+0x1e978>
   301b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   301bc:	str	r0, [fp, #-12]
   301c0:	b	30538 <__assert_fail@plt+0x1ede4>
   301c4:	mov	r0, #0
   301c8:	str	r0, [sp, #44]	; 0x2c
   301cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   301d0:	ldr	r0, [r0]
   301d4:	ldr	r1, [fp, #12]
   301d8:	add	r0, r0, r1, lsl #3
   301dc:	ldrb	r0, [r0, #4]
   301e0:	str	r0, [sp, #40]	; 0x28
   301e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   301e8:	ldr	r0, [r0]
   301ec:	ldr	r1, [fp, #12]
   301f0:	add	r0, r0, r1, lsl #3
   301f4:	ldr	r0, [r0, #4]
   301f8:	lsr	r0, r0, #20
   301fc:	and	r0, r0, #1
   30200:	cmp	r0, #0
   30204:	beq	30228 <__assert_fail@plt+0x1ead4>
   30208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3020c:	ldr	r1, [fp, #12]
   30210:	ldr	r2, [fp, #-16]
   30214:	ldr	r3, [fp, #8]
   30218:	ldr	r3, [r3]
   3021c:	bl	2bd8c <__assert_fail@plt+0x1a638>
   30220:	str	r0, [sp, #44]	; 0x2c
   30224:	b	30404 <__assert_fail@plt+0x1ecb0>
   30228:	ldr	r0, [sp, #40]	; 0x28
   3022c:	cmp	r0, #4
   30230:	bne	30400 <__assert_fail@plt+0x1ecac>
   30234:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30238:	ldr	r0, [r0]
   3023c:	ldr	r1, [fp, #12]
   30240:	add	r0, r0, r1, lsl #3
   30244:	ldr	r0, [r0]
   30248:	add	r0, r0, #1
   3024c:	str	r0, [sp, #36]	; 0x24
   30250:	ldr	r0, [sp, #36]	; 0x24
   30254:	ldr	r1, [fp, #-20]	; 0xffffffec
   30258:	cmp	r0, r1
   3025c:	bge	3027c <__assert_fail@plt+0x1eb28>
   30260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30264:	ldr	r1, [sp, #36]	; 0x24
   30268:	add	r0, r0, r1, lsl #3
   3026c:	ldr	r1, [r0, #4]
   30270:	ldr	r0, [r0]
   30274:	sub	r0, r1, r0
   30278:	str	r0, [sp, #44]	; 0x2c
   3027c:	ldr	r0, [fp, #20]
   30280:	movw	r1, #0
   30284:	cmp	r0, r1
   30288:	beq	30360 <__assert_fail@plt+0x1ec0c>
   3028c:	ldr	r0, [sp, #36]	; 0x24
   30290:	ldr	r1, [fp, #-20]	; 0xffffffec
   30294:	cmp	r0, r1
   30298:	bge	302cc <__assert_fail@plt+0x1eb78>
   3029c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   302a0:	ldr	r1, [sp, #36]	; 0x24
   302a4:	add	r0, r0, r1, lsl #3
   302a8:	ldr	r0, [r0]
   302ac:	cmn	r0, #1
   302b0:	beq	302cc <__assert_fail@plt+0x1eb78>
   302b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   302b8:	ldr	r1, [sp, #36]	; 0x24
   302bc:	add	r0, r0, r1, lsl #3
   302c0:	ldr	r0, [r0, #4]
   302c4:	cmn	r0, #1
   302c8:	bne	302d8 <__assert_fail@plt+0x1eb84>
   302cc:	mvn	r0, #0
   302d0:	str	r0, [fp, #-12]
   302d4:	b	30538 <__assert_fail@plt+0x1ede4>
   302d8:	ldr	r0, [sp, #44]	; 0x2c
   302dc:	cmp	r0, #0
   302e0:	beq	30358 <__assert_fail@plt+0x1ec04>
   302e4:	ldr	r0, [fp, #-16]
   302e8:	ldr	r0, [r0, #4]
   302ec:	str	r0, [sp, #32]
   302f0:	ldr	r0, [fp, #-16]
   302f4:	ldr	r0, [r0, #28]
   302f8:	ldr	r1, [fp, #8]
   302fc:	ldr	r1, [r1]
   30300:	sub	r0, r0, r1
   30304:	ldr	r1, [sp, #44]	; 0x2c
   30308:	cmp	r0, r1
   3030c:	blt	30348 <__assert_fail@plt+0x1ebf4>
   30310:	ldr	r0, [sp, #32]
   30314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30318:	ldr	r2, [sp, #36]	; 0x24
   3031c:	add	r1, r1, r2, lsl #3
   30320:	ldr	r1, [r1]
   30324:	add	r0, r0, r1
   30328:	ldr	r1, [sp, #32]
   3032c:	ldr	r2, [fp, #8]
   30330:	ldr	r2, [r2]
   30334:	add	r1, r1, r2
   30338:	ldr	r2, [sp, #44]	; 0x2c
   3033c:	bl	114cc <memcmp@plt>
   30340:	cmp	r0, #0
   30344:	beq	30354 <__assert_fail@plt+0x1ec00>
   30348:	mvn	r0, #0
   3034c:	str	r0, [fp, #-12]
   30350:	b	30538 <__assert_fail@plt+0x1ede4>
   30354:	b	30358 <__assert_fail@plt+0x1ec04>
   30358:	b	3035c <__assert_fail@plt+0x1ec08>
   3035c:	b	30360 <__assert_fail@plt+0x1ec0c>
   30360:	ldr	r0, [sp, #44]	; 0x2c
   30364:	cmp	r0, #0
   30368:	bne	303fc <__assert_fail@plt+0x1eca8>
   3036c:	ldr	r0, [fp, #16]
   30370:	ldr	r1, [fp, #12]
   30374:	bl	25878 <__assert_fail@plt+0x14124>
   30378:	and	r0, r0, #1
   3037c:	strb	r0, [sp, #27]
   30380:	ldrb	r0, [sp, #27]
   30384:	mvn	r1, #0
   30388:	eor	r0, r0, r1
   3038c:	tst	r0, #1
   30390:	beq	303a0 <__assert_fail@plt+0x1ec4c>
   30394:	mvn	r0, #1
   30398:	str	r0, [fp, #-12]
   3039c:	b	30538 <__assert_fail@plt+0x1ede4>
   303a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   303a4:	ldr	r0, [r0, #20]
   303a8:	ldr	r1, [fp, #12]
   303ac:	add	r1, r1, r1, lsl #1
   303b0:	add	r0, r0, r1, lsl #2
   303b4:	ldr	r0, [r0, #8]
   303b8:	ldr	r0, [r0]
   303bc:	str	r0, [sp, #28]
   303c0:	ldr	r0, [fp, #-16]
   303c4:	ldr	r0, [r0, #100]	; 0x64
   303c8:	ldr	r1, [fp, #8]
   303cc:	ldr	r1, [r1]
   303d0:	add	r0, r0, r1, lsl #2
   303d4:	ldr	r0, [r0]
   303d8:	add	r0, r0, #4
   303dc:	ldr	r1, [sp, #28]
   303e0:	bl	25d34 <__assert_fail@plt+0x145e0>
   303e4:	cmp	r0, #0
   303e8:	beq	303f8 <__assert_fail@plt+0x1eca4>
   303ec:	ldr	r0, [sp, #28]
   303f0:	str	r0, [fp, #-12]
   303f4:	b	30538 <__assert_fail@plt+0x1ede4>
   303f8:	b	303fc <__assert_fail@plt+0x1eca8>
   303fc:	b	30400 <__assert_fail@plt+0x1ecac>
   30400:	b	30404 <__assert_fail@plt+0x1ecb0>
   30404:	ldr	r0, [sp, #44]	; 0x2c
   30408:	cmp	r0, #0
   3040c:	bne	30438 <__assert_fail@plt+0x1ece4>
   30410:	ldr	r0, [fp, #-16]
   30414:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30418:	ldr	r1, [r1]
   3041c:	ldr	r2, [fp, #12]
   30420:	add	r1, r1, r2, lsl #3
   30424:	ldr	r2, [fp, #8]
   30428:	ldr	r2, [r2]
   3042c:	bl	2c374 <__assert_fail@plt+0x1ac20>
   30430:	tst	r0, #1
   30434:	beq	3052c <__assert_fail@plt+0x1edd8>
   30438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3043c:	ldr	r0, [r0, #12]
   30440:	ldr	r1, [fp, #12]
   30444:	add	r0, r0, r1, lsl #2
   30448:	ldr	r0, [r0]
   3044c:	str	r0, [sp, #20]
   30450:	ldr	r0, [sp, #44]	; 0x2c
   30454:	cmp	r0, #0
   30458:	bne	30470 <__assert_fail@plt+0x1ed1c>
   3045c:	ldr	r0, [fp, #8]
   30460:	ldr	r0, [r0]
   30464:	add	r0, r0, #1
   30468:	str	r0, [sp, #16]
   3046c:	b	30484 <__assert_fail@plt+0x1ed30>
   30470:	ldr	r0, [fp, #8]
   30474:	ldr	r0, [r0]
   30478:	ldr	r1, [sp, #44]	; 0x2c
   3047c:	add	r0, r0, r1
   30480:	str	r0, [sp, #16]
   30484:	ldr	r0, [sp, #16]
   30488:	ldr	r1, [fp, #8]
   3048c:	str	r0, [r1]
   30490:	ldr	r0, [fp, #20]
   30494:	movw	r1, #0
   30498:	cmp	r0, r1
   3049c:	beq	30514 <__assert_fail@plt+0x1edc0>
   304a0:	ldr	r0, [fp, #8]
   304a4:	ldr	r0, [r0]
   304a8:	ldr	r1, [fp, #-16]
   304ac:	ldr	r1, [r1, #92]	; 0x5c
   304b0:	cmp	r0, r1
   304b4:	bgt	30508 <__assert_fail@plt+0x1edb4>
   304b8:	ldr	r0, [fp, #-16]
   304bc:	ldr	r0, [r0, #100]	; 0x64
   304c0:	ldr	r1, [fp, #8]
   304c4:	ldr	r1, [r1]
   304c8:	add	r0, r0, r1, lsl #2
   304cc:	ldr	r0, [r0]
   304d0:	movw	r1, #0
   304d4:	cmp	r0, r1
   304d8:	beq	30508 <__assert_fail@plt+0x1edb4>
   304dc:	ldr	r0, [fp, #-16]
   304e0:	ldr	r0, [r0, #100]	; 0x64
   304e4:	ldr	r1, [fp, #8]
   304e8:	ldr	r1, [r1]
   304ec:	add	r0, r0, r1, lsl #2
   304f0:	ldr	r0, [r0]
   304f4:	add	r0, r0, #4
   304f8:	ldr	r1, [sp, #20]
   304fc:	bl	25d34 <__assert_fail@plt+0x145e0>
   30500:	cmp	r0, #0
   30504:	bne	30514 <__assert_fail@plt+0x1edc0>
   30508:	mvn	r0, #0
   3050c:	str	r0, [fp, #-12]
   30510:	b	30538 <__assert_fail@plt+0x1ede4>
   30514:	ldr	r0, [fp, #16]
   30518:	movw	r1, #0
   3051c:	str	r1, [r0, #4]
   30520:	ldr	r0, [sp, #20]
   30524:	str	r0, [fp, #-12]
   30528:	b	30538 <__assert_fail@plt+0x1ede4>
   3052c:	b	30530 <__assert_fail@plt+0x1eddc>
   30530:	mvn	r0, #0
   30534:	str	r0, [fp, #-12]
   30538:	ldr	r0, [fp, #-12]
   3053c:	sub	sp, fp, #8
   30540:	pop	{r4, r5, fp, pc}
   30544:	push	{fp, lr}
   30548:	mov	fp, sp
   3054c:	sub	sp, sp, #8
   30550:	str	r0, [sp, #4]
   30554:	ldr	r0, [sp, #4]
   30558:	ldr	r0, [r0, #8]
   3055c:	ldr	r1, [sp, #4]
   30560:	ldr	r1, [r1]
   30564:	bl	305a0 <__assert_fail@plt+0x1ee4c>
   30568:	ldr	r0, [sp, #4]
   3056c:	bl	305b4 <__assert_fail@plt+0x1ee60>
   30570:	ldr	r0, [sp, #4]
   30574:	add	r0, r0, #12
   30578:	ldr	r1, [sp, #4]
   3057c:	str	r0, [r1, #8]
   30580:	ldr	r0, [sp, #4]
   30584:	movw	r1, #0
   30588:	str	r1, [r0]
   3058c:	bl	305f0 <__assert_fail@plt+0x1ee9c>
   30590:	ldr	r1, [sp, #4]
   30594:	str	r0, [r1, #4]
   30598:	mov	sp, fp
   3059c:	pop	{fp, pc}
   305a0:	sub	sp, sp, #8
   305a4:	str	r0, [sp, #4]
   305a8:	str	r1, [sp]
   305ac:	add	sp, sp, #8
   305b0:	bx	lr
   305b4:	push	{fp, lr}
   305b8:	mov	fp, sp
   305bc:	sub	sp, sp, #8
   305c0:	str	r0, [sp, #4]
   305c4:	ldr	r0, [sp, #4]
   305c8:	ldr	r0, [r0, #8]
   305cc:	ldr	r1, [sp, #4]
   305d0:	add	r1, r1, #12
   305d4:	cmp	r0, r1
   305d8:	beq	305e8 <__assert_fail@plt+0x1ee94>
   305dc:	ldr	r0, [sp, #4]
   305e0:	ldr	r0, [r0, #8]
   305e4:	bl	15f68 <__assert_fail@plt+0x4814>
   305e8:	mov	sp, fp
   305ec:	pop	{fp, pc}
   305f0:	mvn	r0, #0
   305f4:	bx	lr
   305f8:	push	{r4, sl, fp, lr}
   305fc:	add	fp, sp, #8
   30600:	sub	sp, sp, #40	; 0x28
   30604:	ldr	ip, [fp, #16]
   30608:	ldr	lr, [fp, #12]
   3060c:	ldr	r4, [fp, #8]
   30610:	str	r0, [fp, #-16]
   30614:	str	r1, [fp, #-20]	; 0xffffffec
   30618:	str	r2, [sp, #24]
   3061c:	str	r3, [sp, #20]
   30620:	ldr	r0, [fp, #-16]
   30624:	ldr	r1, [r0]
   30628:	add	r2, r1, #1
   3062c:	str	r2, [r0]
   30630:	str	r1, [sp, #12]
   30634:	ldr	r0, [fp, #-16]
   30638:	ldr	r0, [r0]
   3063c:	ldr	r1, [fp, #-16]
   30640:	ldr	r1, [r1, #4]
   30644:	cmp	r0, r1
   30648:	bne	306a4 <__assert_fail@plt+0x1ef50>
   3064c:	ldr	r0, [fp, #-16]
   30650:	ldr	r1, [r0, #4]
   30654:	ldr	r0, [r0, #8]
   30658:	lsl	r1, r1, #1
   3065c:	movw	r2, #24
   30660:	mul	r1, r1, r2
   30664:	bl	381dc <__assert_fail@plt+0x26a88>
   30668:	str	r0, [sp, #8]
   3066c:	ldr	r0, [sp, #8]
   30670:	movw	r1, #0
   30674:	cmp	r0, r1
   30678:	bne	30688 <__assert_fail@plt+0x1ef34>
   3067c:	movw	r0, #12
   30680:	str	r0, [fp, #-12]
   30684:	b	307c8 <__assert_fail@plt+0x1f074>
   30688:	ldr	r0, [fp, #-16]
   3068c:	ldr	r1, [r0, #4]
   30690:	lsl	r1, r1, #1
   30694:	str	r1, [r0, #4]
   30698:	ldr	r0, [sp, #8]
   3069c:	ldr	r1, [fp, #-16]
   306a0:	str	r0, [r1, #8]
   306a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   306a8:	ldr	r1, [fp, #-16]
   306ac:	ldr	r1, [r1, #8]
   306b0:	ldr	r2, [sp, #12]
   306b4:	add	r2, r2, r2, lsl #1
   306b8:	str	r0, [r1, r2, lsl #3]
   306bc:	ldr	r0, [sp, #24]
   306c0:	ldr	r1, [fp, #-16]
   306c4:	ldr	r1, [r1, #8]
   306c8:	ldr	r2, [sp, #12]
   306cc:	add	r2, r2, r2, lsl #1
   306d0:	add	r1, r1, r2, lsl #3
   306d4:	str	r0, [r1, #4]
   306d8:	ldr	r0, [sp, #20]
   306dc:	lsl	r1, r0, #1
   306e0:	lsl	r0, r0, #4
   306e4:	str	r1, [sp, #4]
   306e8:	bl	3816c <__assert_fail@plt+0x26a18>
   306ec:	ldr	r1, [fp, #-16]
   306f0:	ldr	r1, [r1, #8]
   306f4:	ldr	r2, [sp, #12]
   306f8:	movw	r3, #24
   306fc:	mul	r2, r2, r3
   30700:	add	r1, r1, r2
   30704:	str	r0, [r1, #8]
   30708:	ldr	r0, [fp, #-16]
   3070c:	ldr	r0, [r0, #8]
   30710:	ldr	r1, [sp, #12]
   30714:	mul	r1, r1, r3
   30718:	add	r0, r0, r1
   3071c:	ldr	r0, [r0, #8]
   30720:	movw	r1, #0
   30724:	cmp	r0, r1
   30728:	bne	30738 <__assert_fail@plt+0x1efe4>
   3072c:	movw	r0, #12
   30730:	str	r0, [fp, #-12]
   30734:	b	307c8 <__assert_fail@plt+0x1f074>
   30738:	ldr	r0, [fp, #-16]
   3073c:	ldr	r0, [r0, #8]
   30740:	ldr	r1, [sp, #12]
   30744:	add	r1, r1, r1, lsl #1
   30748:	add	r0, r0, r1, lsl #3
   3074c:	ldr	r0, [r0, #8]
   30750:	ldr	r1, [fp, #8]
   30754:	ldr	r2, [sp, #20]
   30758:	lsl	r2, r2, #3
   3075c:	bl	11478 <memcpy@plt>
   30760:	ldr	r1, [fp, #-16]
   30764:	ldr	r1, [r1, #8]
   30768:	ldr	r2, [sp, #12]
   3076c:	add	r2, r2, r2, lsl #1
   30770:	add	r1, r1, r2, lsl #3
   30774:	ldr	r1, [r1, #8]
   30778:	ldr	r2, [sp, #20]
   3077c:	add	r1, r1, r2, lsl #3
   30780:	lsl	r2, r2, #3
   30784:	ldr	r3, [fp, #12]
   30788:	str	r0, [sp]
   3078c:	mov	r0, r1
   30790:	mov	r1, r3
   30794:	bl	11478 <memcpy@plt>
   30798:	ldr	r0, [fp, #-16]
   3079c:	ldr	r0, [r0, #8]
   307a0:	ldr	r1, [sp, #12]
   307a4:	movw	r2, #24
   307a8:	mul	r1, r1, r2
   307ac:	add	r0, r0, r1
   307b0:	add	r0, r0, #12
   307b4:	ldr	r1, [fp, #16]
   307b8:	bl	25c60 <__assert_fail@plt+0x1450c>
   307bc:	str	r0, [sp, #16]
   307c0:	ldr	r0, [sp, #16]
   307c4:	str	r0, [fp, #-12]
   307c8:	ldr	r0, [fp, #-12]
   307cc:	sub	sp, fp, #8
   307d0:	pop	{r4, sl, fp, pc}
   307d4:	push	{fp, lr}
   307d8:	mov	fp, sp
   307dc:	sub	sp, sp, #24
   307e0:	str	r0, [fp, #-8]
   307e4:	str	r1, [sp, #12]
   307e8:	str	r2, [sp, #8]
   307ec:	ldr	r0, [fp, #-8]
   307f0:	ldr	r1, [sp, #12]
   307f4:	ldr	r2, [sp, #8]
   307f8:	bl	11418 <read@plt>
   307fc:	str	r0, [sp, #4]
   30800:	ldr	r0, [sp, #4]
   30804:	movw	r1, #0
   30808:	cmp	r1, r0
   3080c:	bgt	3081c <__assert_fail@plt+0x1f0c8>
   30810:	ldr	r0, [sp, #4]
   30814:	str	r0, [fp, #-4]
   30818:	b	30874 <__assert_fail@plt+0x1f120>
   3081c:	bl	11628 <__errno_location@plt>
   30820:	ldr	r0, [r0]
   30824:	cmp	r0, #4
   30828:	bne	30830 <__assert_fail@plt+0x1f0dc>
   3082c:	b	307ec <__assert_fail@plt+0x1f098>
   30830:	bl	11628 <__errno_location@plt>
   30834:	ldr	r0, [r0]
   30838:	cmp	r0, #22
   3083c:	bne	3085c <__assert_fail@plt+0x1f108>
   30840:	ldr	r0, [pc, #56]	; 30880 <__assert_fail@plt+0x1f12c>
   30844:	ldr	r1, [sp, #8]
   30848:	cmp	r0, r1
   3084c:	bcs	3085c <__assert_fail@plt+0x1f108>
   30850:	ldr	r0, [pc, #40]	; 30880 <__assert_fail@plt+0x1f12c>
   30854:	str	r0, [sp, #8]
   30858:	b	30868 <__assert_fail@plt+0x1f114>
   3085c:	ldr	r0, [sp, #4]
   30860:	str	r0, [fp, #-4]
   30864:	b	30874 <__assert_fail@plt+0x1f120>
   30868:	b	3086c <__assert_fail@plt+0x1f118>
   3086c:	b	30870 <__assert_fail@plt+0x1f11c>
   30870:	b	307ec <__assert_fail@plt+0x1f098>
   30874:	ldr	r0, [fp, #-4]
   30878:	mov	sp, fp
   3087c:	pop	{fp, pc}
   30880:	svcvc	0x00f00000	; IMB
   30884:	push	{fp, lr}
   30888:	mov	fp, sp
   3088c:	sub	sp, sp, #8
   30890:	str	r0, [sp, #4]
   30894:	ldr	r0, [sp, #4]
   30898:	movw	r1, #0
   3089c:	movw	r2, #3
   308a0:	bl	39840 <__assert_fail@plt+0x280ec>
   308a4:	mov	sp, fp
   308a8:	pop	{fp, pc}
   308ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   308b0:	add	fp, sp, #28
   308b4:	sub	sp, sp, #196	; 0xc4
   308b8:	ldr	ip, [fp, #12]
   308bc:	ldr	lr, [fp, #8]
   308c0:	str	r0, [fp, #-32]	; 0xffffffe0
   308c4:	str	r1, [fp, #-36]	; 0xffffffdc
   308c8:	str	r2, [fp, #-40]	; 0xffffffd8
   308cc:	str	r3, [fp, #-44]	; 0xffffffd4
   308d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   308d4:	movw	r1, #0
   308d8:	cmp	r0, r1
   308dc:	beq	30910 <__assert_fail@plt+0x1f1bc>
   308e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   308e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   308e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   308ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   308f0:	movw	ip, #52355	; 0xcc83
   308f4:	movt	ip, #3
   308f8:	str	r1, [fp, #-48]	; 0xffffffd0
   308fc:	mov	r1, ip
   30900:	ldr	ip, [fp, #-48]	; 0xffffffd0
   30904:	str	ip, [sp]
   30908:	bl	1161c <fprintf@plt>
   3090c:	b	30928 <__assert_fail@plt+0x1f1d4>
   30910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30914:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30918:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3091c:	movw	r1, #52367	; 0xcc8f
   30920:	movt	r1, #3
   30924:	bl	1161c <fprintf@plt>
   30928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3092c:	movw	r1, #52374	; 0xcc96
   30930:	movt	r1, #3
   30934:	str	r0, [fp, #-52]	; 0xffffffcc
   30938:	mov	r0, r1
   3093c:	bl	115f8 <gettext@plt>
   30940:	movw	r1, #53092	; 0xcf64
   30944:	movt	r1, #3
   30948:	movw	r3, #2022	; 0x7e6
   3094c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   30950:	str	r0, [fp, #-56]	; 0xffffffc8
   30954:	mov	r0, r2
   30958:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3095c:	bl	1161c <fprintf@plt>
   30960:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30964:	movw	r2, #49862	; 0xc2c6
   30968:	movt	r2, #3
   3096c:	str	r0, [fp, #-60]	; 0xffffffc4
   30970:	mov	r0, r2
   30974:	str	r2, [fp, #-64]	; 0xffffffc0
   30978:	bl	113c4 <fputs_unlocked@plt>
   3097c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30980:	movw	r2, #52378	; 0xcc9a
   30984:	movt	r2, #3
   30988:	str	r0, [fp, #-68]	; 0xffffffbc
   3098c:	mov	r0, r2
   30990:	str	r1, [fp, #-72]	; 0xffffffb8
   30994:	bl	115f8 <gettext@plt>
   30998:	movw	r2, #52549	; 0xcd45
   3099c:	movt	r2, #3
   309a0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   309a4:	str	r0, [fp, #-76]	; 0xffffffb4
   309a8:	mov	r0, r1
   309ac:	ldr	r1, [fp, #-76]	; 0xffffffb4
   309b0:	bl	1161c <fprintf@plt>
   309b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   309b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   309bc:	str	r0, [fp, #-80]	; 0xffffffb0
   309c0:	mov	r0, r2
   309c4:	bl	113c4 <fputs_unlocked@plt>
   309c8:	ldr	r1, [fp, #12]
   309cc:	cmp	r1, #9
   309d0:	str	r1, [fp, #-84]	; 0xffffffac
   309d4:	bhi	30df0 <__assert_fail@plt+0x1f69c>
   309d8:	add	r0, pc, #8
   309dc:	ldr	r1, [fp, #-84]	; 0xffffffac
   309e0:	ldr	r0, [r0, r1, lsl #2]
   309e4:	mov	pc, r0
   309e8:	andeq	r0, r3, r0, lsl sl
   309ec:	andeq	r0, r3, r4, lsl sl
   309f0:	andeq	r0, r3, ip, asr #20
   309f4:	andeq	r0, r3, ip, lsl #21
   309f8:	andeq	r0, r3, r4, ror #21
   309fc:	andeq	r0, r3, r8, asr #22
   30a00:			; <UNDEFINED> instruction: 0x00030bb8
   30a04:	andeq	r0, r3, r4, lsr ip
   30a08:			; <UNDEFINED> instruction: 0x00030cbc
   30a0c:	andeq	r0, r3, r0, asr sp
   30a10:	b	30e8c <__assert_fail@plt+0x1f738>
   30a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a18:	movw	r1, #52583	; 0xcd67
   30a1c:	movt	r1, #3
   30a20:	str	r0, [fp, #-88]	; 0xffffffa8
   30a24:	mov	r0, r1
   30a28:	bl	115f8 <gettext@plt>
   30a2c:	ldr	r1, [fp, #8]
   30a30:	ldr	r2, [r1]
   30a34:	ldr	r1, [fp, #-88]	; 0xffffffa8
   30a38:	str	r0, [fp, #-92]	; 0xffffffa4
   30a3c:	mov	r0, r1
   30a40:	ldr	r1, [fp, #-92]	; 0xffffffa4
   30a44:	bl	1161c <fprintf@plt>
   30a48:	b	30e8c <__assert_fail@plt+0x1f738>
   30a4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a50:	movw	r1, #52599	; 0xcd77
   30a54:	movt	r1, #3
   30a58:	str	r0, [fp, #-96]	; 0xffffffa0
   30a5c:	mov	r0, r1
   30a60:	bl	115f8 <gettext@plt>
   30a64:	ldr	r1, [fp, #8]
   30a68:	ldr	r2, [r1]
   30a6c:	ldr	r1, [fp, #8]
   30a70:	ldr	r3, [r1, #4]
   30a74:	ldr	r1, [fp, #-96]	; 0xffffffa0
   30a78:	str	r0, [fp, #-100]	; 0xffffff9c
   30a7c:	mov	r0, r1
   30a80:	ldr	r1, [fp, #-100]	; 0xffffff9c
   30a84:	bl	1161c <fprintf@plt>
   30a88:	b	30e8c <__assert_fail@plt+0x1f738>
   30a8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a90:	movw	r1, #52622	; 0xcd8e
   30a94:	movt	r1, #3
   30a98:	str	r0, [fp, #-104]	; 0xffffff98
   30a9c:	mov	r0, r1
   30aa0:	bl	115f8 <gettext@plt>
   30aa4:	ldr	r1, [fp, #8]
   30aa8:	ldr	r2, [r1]
   30aac:	ldr	r1, [fp, #8]
   30ab0:	ldr	r3, [r1, #4]
   30ab4:	ldr	r1, [fp, #8]
   30ab8:	ldr	r1, [r1, #8]
   30abc:	ldr	ip, [fp, #-104]	; 0xffffff98
   30ac0:	str	r0, [fp, #-108]	; 0xffffff94
   30ac4:	mov	r0, ip
   30ac8:	ldr	lr, [fp, #-108]	; 0xffffff94
   30acc:	str	r1, [sp, #112]	; 0x70
   30ad0:	mov	r1, lr
   30ad4:	ldr	r4, [sp, #112]	; 0x70
   30ad8:	str	r4, [sp]
   30adc:	bl	1161c <fprintf@plt>
   30ae0:	b	30e8c <__assert_fail@plt+0x1f738>
   30ae4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30ae8:	movw	r1, #52650	; 0xcdaa
   30aec:	movt	r1, #3
   30af0:	str	r0, [sp, #108]	; 0x6c
   30af4:	mov	r0, r1
   30af8:	bl	115f8 <gettext@plt>
   30afc:	ldr	r1, [fp, #8]
   30b00:	ldr	r2, [r1]
   30b04:	ldr	r1, [fp, #8]
   30b08:	ldr	r3, [r1, #4]
   30b0c:	ldr	r1, [fp, #8]
   30b10:	ldr	r1, [r1, #8]
   30b14:	ldr	ip, [fp, #8]
   30b18:	ldr	ip, [ip, #12]
   30b1c:	ldr	lr, [sp, #108]	; 0x6c
   30b20:	str	r0, [sp, #104]	; 0x68
   30b24:	mov	r0, lr
   30b28:	ldr	r4, [sp, #104]	; 0x68
   30b2c:	str	r1, [sp, #100]	; 0x64
   30b30:	mov	r1, r4
   30b34:	ldr	r5, [sp, #100]	; 0x64
   30b38:	str	r5, [sp]
   30b3c:	str	ip, [sp, #4]
   30b40:	bl	1161c <fprintf@plt>
   30b44:	b	30e8c <__assert_fail@plt+0x1f738>
   30b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b4c:	movw	r1, #52682	; 0xcdca
   30b50:	movt	r1, #3
   30b54:	str	r0, [sp, #96]	; 0x60
   30b58:	mov	r0, r1
   30b5c:	bl	115f8 <gettext@plt>
   30b60:	ldr	r1, [fp, #8]
   30b64:	ldr	r2, [r1]
   30b68:	ldr	r1, [fp, #8]
   30b6c:	ldr	r3, [r1, #4]
   30b70:	ldr	r1, [fp, #8]
   30b74:	ldr	r1, [r1, #8]
   30b78:	ldr	ip, [fp, #8]
   30b7c:	ldr	ip, [ip, #12]
   30b80:	ldr	lr, [fp, #8]
   30b84:	ldr	lr, [lr, #16]
   30b88:	ldr	r4, [sp, #96]	; 0x60
   30b8c:	str	r0, [sp, #92]	; 0x5c
   30b90:	mov	r0, r4
   30b94:	ldr	r5, [sp, #92]	; 0x5c
   30b98:	str	r1, [sp, #88]	; 0x58
   30b9c:	mov	r1, r5
   30ba0:	ldr	r6, [sp, #88]	; 0x58
   30ba4:	str	r6, [sp]
   30ba8:	str	ip, [sp, #4]
   30bac:	str	lr, [sp, #8]
   30bb0:	bl	1161c <fprintf@plt>
   30bb4:	b	30e8c <__assert_fail@plt+0x1f738>
   30bb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30bbc:	movw	r1, #52718	; 0xcdee
   30bc0:	movt	r1, #3
   30bc4:	str	r0, [sp, #84]	; 0x54
   30bc8:	mov	r0, r1
   30bcc:	bl	115f8 <gettext@plt>
   30bd0:	ldr	r1, [fp, #8]
   30bd4:	ldr	r2, [r1]
   30bd8:	ldr	r1, [fp, #8]
   30bdc:	ldr	r3, [r1, #4]
   30be0:	ldr	r1, [fp, #8]
   30be4:	ldr	r1, [r1, #8]
   30be8:	ldr	ip, [fp, #8]
   30bec:	ldr	ip, [ip, #12]
   30bf0:	ldr	lr, [fp, #8]
   30bf4:	ldr	lr, [lr, #16]
   30bf8:	ldr	r4, [fp, #8]
   30bfc:	ldr	r4, [r4, #20]
   30c00:	ldr	r5, [sp, #84]	; 0x54
   30c04:	str	r0, [sp, #80]	; 0x50
   30c08:	mov	r0, r5
   30c0c:	ldr	r6, [sp, #80]	; 0x50
   30c10:	str	r1, [sp, #76]	; 0x4c
   30c14:	mov	r1, r6
   30c18:	ldr	r7, [sp, #76]	; 0x4c
   30c1c:	str	r7, [sp]
   30c20:	str	ip, [sp, #4]
   30c24:	str	lr, [sp, #8]
   30c28:	str	r4, [sp, #12]
   30c2c:	bl	1161c <fprintf@plt>
   30c30:	b	30e8c <__assert_fail@plt+0x1f738>
   30c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30c38:	movw	r1, #52758	; 0xce16
   30c3c:	movt	r1, #3
   30c40:	str	r0, [sp, #72]	; 0x48
   30c44:	mov	r0, r1
   30c48:	bl	115f8 <gettext@plt>
   30c4c:	ldr	r1, [fp, #8]
   30c50:	ldr	r2, [r1]
   30c54:	ldr	r1, [fp, #8]
   30c58:	ldr	r3, [r1, #4]
   30c5c:	ldr	r1, [fp, #8]
   30c60:	ldr	r1, [r1, #8]
   30c64:	ldr	ip, [fp, #8]
   30c68:	ldr	ip, [ip, #12]
   30c6c:	ldr	lr, [fp, #8]
   30c70:	ldr	lr, [lr, #16]
   30c74:	ldr	r4, [fp, #8]
   30c78:	ldr	r4, [r4, #20]
   30c7c:	ldr	r5, [fp, #8]
   30c80:	ldr	r5, [r5, #24]
   30c84:	ldr	r6, [sp, #72]	; 0x48
   30c88:	str	r0, [sp, #68]	; 0x44
   30c8c:	mov	r0, r6
   30c90:	ldr	r7, [sp, #68]	; 0x44
   30c94:	str	r1, [sp, #64]	; 0x40
   30c98:	mov	r1, r7
   30c9c:	ldr	r8, [sp, #64]	; 0x40
   30ca0:	str	r8, [sp]
   30ca4:	str	ip, [sp, #4]
   30ca8:	str	lr, [sp, #8]
   30cac:	str	r4, [sp, #12]
   30cb0:	str	r5, [sp, #16]
   30cb4:	bl	1161c <fprintf@plt>
   30cb8:	b	30e8c <__assert_fail@plt+0x1f738>
   30cbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30cc0:	movw	r1, #52802	; 0xce42
   30cc4:	movt	r1, #3
   30cc8:	str	r0, [sp, #60]	; 0x3c
   30ccc:	mov	r0, r1
   30cd0:	bl	115f8 <gettext@plt>
   30cd4:	ldr	r1, [fp, #8]
   30cd8:	ldr	r2, [r1]
   30cdc:	ldr	r1, [fp, #8]
   30ce0:	ldr	r3, [r1, #4]
   30ce4:	ldr	r1, [fp, #8]
   30ce8:	ldr	r1, [r1, #8]
   30cec:	ldr	ip, [fp, #8]
   30cf0:	ldr	ip, [ip, #12]
   30cf4:	ldr	lr, [fp, #8]
   30cf8:	ldr	lr, [lr, #16]
   30cfc:	ldr	r4, [fp, #8]
   30d00:	ldr	r4, [r4, #20]
   30d04:	ldr	r5, [fp, #8]
   30d08:	ldr	r5, [r5, #24]
   30d0c:	ldr	r6, [fp, #8]
   30d10:	ldr	r6, [r6, #28]
   30d14:	ldr	r7, [sp, #60]	; 0x3c
   30d18:	str	r0, [sp, #56]	; 0x38
   30d1c:	mov	r0, r7
   30d20:	ldr	r8, [sp, #56]	; 0x38
   30d24:	str	r1, [sp, #52]	; 0x34
   30d28:	mov	r1, r8
   30d2c:	ldr	r9, [sp, #52]	; 0x34
   30d30:	str	r9, [sp]
   30d34:	str	ip, [sp, #4]
   30d38:	str	lr, [sp, #8]
   30d3c:	str	r4, [sp, #12]
   30d40:	str	r5, [sp, #16]
   30d44:	str	r6, [sp, #20]
   30d48:	bl	1161c <fprintf@plt>
   30d4c:	b	30e8c <__assert_fail@plt+0x1f738>
   30d50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d54:	movw	r1, #52850	; 0xce72
   30d58:	movt	r1, #3
   30d5c:	str	r0, [sp, #48]	; 0x30
   30d60:	mov	r0, r1
   30d64:	bl	115f8 <gettext@plt>
   30d68:	ldr	r1, [fp, #8]
   30d6c:	ldr	r2, [r1]
   30d70:	ldr	r1, [fp, #8]
   30d74:	ldr	r3, [r1, #4]
   30d78:	ldr	r1, [fp, #8]
   30d7c:	ldr	r1, [r1, #8]
   30d80:	ldr	ip, [fp, #8]
   30d84:	ldr	ip, [ip, #12]
   30d88:	ldr	lr, [fp, #8]
   30d8c:	ldr	lr, [lr, #16]
   30d90:	ldr	r4, [fp, #8]
   30d94:	ldr	r4, [r4, #20]
   30d98:	ldr	r5, [fp, #8]
   30d9c:	ldr	r5, [r5, #24]
   30da0:	ldr	r6, [fp, #8]
   30da4:	ldr	r6, [r6, #28]
   30da8:	ldr	r7, [fp, #8]
   30dac:	ldr	r7, [r7, #32]
   30db0:	ldr	r8, [sp, #48]	; 0x30
   30db4:	str	r0, [sp, #44]	; 0x2c
   30db8:	mov	r0, r8
   30dbc:	ldr	r9, [sp, #44]	; 0x2c
   30dc0:	str	r1, [sp, #40]	; 0x28
   30dc4:	mov	r1, r9
   30dc8:	ldr	sl, [sp, #40]	; 0x28
   30dcc:	str	sl, [sp]
   30dd0:	str	ip, [sp, #4]
   30dd4:	str	lr, [sp, #8]
   30dd8:	str	r4, [sp, #12]
   30ddc:	str	r5, [sp, #16]
   30de0:	str	r6, [sp, #20]
   30de4:	str	r7, [sp, #24]
   30de8:	bl	1161c <fprintf@plt>
   30dec:	b	30e8c <__assert_fail@plt+0x1f738>
   30df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30df4:	movw	r1, #52902	; 0xcea6
   30df8:	movt	r1, #3
   30dfc:	str	r0, [sp, #36]	; 0x24
   30e00:	mov	r0, r1
   30e04:	bl	115f8 <gettext@plt>
   30e08:	ldr	r1, [fp, #8]
   30e0c:	ldr	r2, [r1]
   30e10:	ldr	r1, [fp, #8]
   30e14:	ldr	r3, [r1, #4]
   30e18:	ldr	r1, [fp, #8]
   30e1c:	ldr	r1, [r1, #8]
   30e20:	ldr	ip, [fp, #8]
   30e24:	ldr	ip, [ip, #12]
   30e28:	ldr	lr, [fp, #8]
   30e2c:	ldr	lr, [lr, #16]
   30e30:	ldr	r4, [fp, #8]
   30e34:	ldr	r4, [r4, #20]
   30e38:	ldr	r5, [fp, #8]
   30e3c:	ldr	r5, [r5, #24]
   30e40:	ldr	r6, [fp, #8]
   30e44:	ldr	r6, [r6, #28]
   30e48:	ldr	r7, [fp, #8]
   30e4c:	ldr	r7, [r7, #32]
   30e50:	ldr	r8, [sp, #36]	; 0x24
   30e54:	str	r0, [sp, #32]
   30e58:	mov	r0, r8
   30e5c:	ldr	r9, [sp, #32]
   30e60:	str	r1, [sp, #28]
   30e64:	mov	r1, r9
   30e68:	ldr	sl, [sp, #28]
   30e6c:	str	sl, [sp]
   30e70:	str	ip, [sp, #4]
   30e74:	str	lr, [sp, #8]
   30e78:	str	r4, [sp, #12]
   30e7c:	str	r5, [sp, #16]
   30e80:	str	r6, [sp, #20]
   30e84:	str	r7, [sp, #24]
   30e88:	bl	1161c <fprintf@plt>
   30e8c:	sub	sp, fp, #28
   30e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e94:	push	{fp, lr}
   30e98:	mov	fp, sp
   30e9c:	sub	sp, sp, #32
   30ea0:	ldr	ip, [fp, #8]
   30ea4:	str	r0, [fp, #-4]
   30ea8:	str	r1, [fp, #-8]
   30eac:	str	r2, [fp, #-12]
   30eb0:	str	r3, [sp, #16]
   30eb4:	movw	r0, #0
   30eb8:	str	r0, [sp, #12]
   30ebc:	ldr	r0, [fp, #8]
   30ec0:	ldr	r1, [sp, #12]
   30ec4:	add	r0, r0, r1, lsl #2
   30ec8:	ldr	r0, [r0]
   30ecc:	movw	r1, #0
   30ed0:	cmp	r0, r1
   30ed4:	beq	30eec <__assert_fail@plt+0x1f798>
   30ed8:	b	30edc <__assert_fail@plt+0x1f788>
   30edc:	ldr	r0, [sp, #12]
   30ee0:	add	r0, r0, #1
   30ee4:	str	r0, [sp, #12]
   30ee8:	b	30ebc <__assert_fail@plt+0x1f768>
   30eec:	ldr	r0, [fp, #-4]
   30ef0:	ldr	r1, [fp, #-8]
   30ef4:	ldr	r2, [fp, #-12]
   30ef8:	ldr	r3, [sp, #16]
   30efc:	ldr	ip, [fp, #8]
   30f00:	ldr	lr, [sp, #12]
   30f04:	str	ip, [sp]
   30f08:	str	lr, [sp, #4]
   30f0c:	bl	308ac <__assert_fail@plt+0x1f158>
   30f10:	mov	sp, fp
   30f14:	pop	{fp, pc}
   30f18:	push	{fp, lr}
   30f1c:	mov	fp, sp
   30f20:	sub	sp, sp, #80	; 0x50
   30f24:	ldr	ip, [fp, #8]
   30f28:	str	ip, [fp, #-4]
   30f2c:	str	r0, [fp, #-8]
   30f30:	str	r1, [fp, #-12]
   30f34:	str	r2, [fp, #-16]
   30f38:	str	r3, [fp, #-20]	; 0xffffffec
   30f3c:	movw	r0, #0
   30f40:	str	r0, [fp, #-24]	; 0xffffffe8
   30f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f48:	cmp	r0, #10
   30f4c:	movw	r0, #0
   30f50:	str	r0, [sp, #12]
   30f54:	bcs	30f8c <__assert_fail@plt+0x1f838>
   30f58:	ldr	r0, [fp, #-4]
   30f5c:	add	r1, r0, #4
   30f60:	str	r1, [fp, #-4]
   30f64:	ldr	r0, [r0]
   30f68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30f6c:	add	r2, sp, #16
   30f70:	add	r1, r2, r1, lsl #2
   30f74:	str	r0, [r1]
   30f78:	movw	r1, #0
   30f7c:	cmp	r0, r1
   30f80:	movw	r0, #0
   30f84:	movne	r0, #1
   30f88:	str	r0, [sp, #12]
   30f8c:	ldr	r0, [sp, #12]
   30f90:	tst	r0, #1
   30f94:	beq	30fac <__assert_fail@plt+0x1f858>
   30f98:	b	30f9c <__assert_fail@plt+0x1f848>
   30f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30fa0:	add	r0, r0, #1
   30fa4:	str	r0, [fp, #-24]	; 0xffffffe8
   30fa8:	b	30f44 <__assert_fail@plt+0x1f7f0>
   30fac:	add	r0, sp, #16
   30fb0:	ldr	r1, [fp, #-8]
   30fb4:	ldr	r2, [fp, #-12]
   30fb8:	ldr	r3, [fp, #-16]
   30fbc:	ldr	ip, [fp, #-20]	; 0xffffffec
   30fc0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   30fc4:	str	r0, [sp, #8]
   30fc8:	mov	r0, r1
   30fcc:	mov	r1, r2
   30fd0:	mov	r2, r3
   30fd4:	mov	r3, ip
   30fd8:	ldr	ip, [sp, #8]
   30fdc:	str	ip, [sp]
   30fe0:	str	lr, [sp, #4]
   30fe4:	bl	308ac <__assert_fail@plt+0x1f158>
   30fe8:	mov	sp, fp
   30fec:	pop	{fp, pc}
   30ff0:	push	{fp, lr}
   30ff4:	mov	fp, sp
   30ff8:	sub	sp, sp, #24
   30ffc:	str	r0, [fp, #-4]
   31000:	str	r1, [fp, #-8]
   31004:	str	r2, [sp, #12]
   31008:	str	r3, [sp, #8]
   3100c:	add	r0, fp, #8
   31010:	str	r0, [sp, #4]
   31014:	ldr	r0, [fp, #-4]
   31018:	ldr	r1, [fp, #-8]
   3101c:	ldr	r2, [sp, #12]
   31020:	ldr	r3, [sp, #8]
   31024:	ldr	ip, [sp, #4]
   31028:	mov	lr, sp
   3102c:	str	ip, [lr]
   31030:	bl	30f18 <__assert_fail@plt+0x1f7c4>
   31034:	add	r0, sp, #4
   31038:	mov	sp, fp
   3103c:	pop	{fp, pc}
   31040:	push	{fp, lr}
   31044:	mov	fp, sp
   31048:	sub	sp, sp, #16
   3104c:	movw	r0, #57788	; 0xe1bc
   31050:	movt	r0, #4
   31054:	ldr	r1, [r0]
   31058:	movw	r0, #49862	; 0xc2c6
   3105c:	movt	r0, #3
   31060:	bl	113c4 <fputs_unlocked@plt>
   31064:	movw	r1, #52962	; 0xcee2
   31068:	movt	r1, #3
   3106c:	str	r0, [fp, #-4]
   31070:	mov	r0, r1
   31074:	bl	115f8 <gettext@plt>
   31078:	movw	r1, #52982	; 0xcef6
   3107c:	movt	r1, #3
   31080:	bl	1140c <printf@plt>
   31084:	movw	r1, #53004	; 0xcf0c
   31088:	movt	r1, #3
   3108c:	str	r0, [sp, #8]
   31090:	mov	r0, r1
   31094:	bl	115f8 <gettext@plt>
   31098:	movw	r1, #48533	; 0xbd95
   3109c:	movt	r1, #3
   310a0:	movw	r2, #51027	; 0xc753
   310a4:	movt	r2, #3
   310a8:	bl	1140c <printf@plt>
   310ac:	movw	r1, #53024	; 0xcf20
   310b0:	movt	r1, #3
   310b4:	str	r0, [sp, #4]
   310b8:	mov	r0, r1
   310bc:	bl	115f8 <gettext@plt>
   310c0:	movw	r1, #53063	; 0xcf47
   310c4:	movt	r1, #3
   310c8:	bl	1140c <printf@plt>
   310cc:	mov	sp, fp
   310d0:	pop	{fp, pc}
   310d4:	push	{fp, lr}
   310d8:	mov	fp, sp
   310dc:	sub	sp, sp, #16
   310e0:	str	r0, [fp, #-4]
   310e4:	str	r1, [sp, #8]
   310e8:	str	r2, [sp, #4]
   310ec:	ldr	r0, [fp, #-4]
   310f0:	ldr	r1, [sp, #8]
   310f4:	ldr	r2, [sp, #4]
   310f8:	bl	31104 <__assert_fail@plt+0x1f9b0>
   310fc:	mov	sp, fp
   31100:	pop	{fp, pc}
   31104:	push	{fp, lr}
   31108:	mov	fp, sp
   3110c:	sub	sp, sp, #16
   31110:	str	r0, [fp, #-4]
   31114:	str	r1, [sp, #8]
   31118:	str	r2, [sp, #4]
   3111c:	ldr	r0, [fp, #-4]
   31120:	ldr	r1, [sp, #8]
   31124:	ldr	r2, [sp, #4]
   31128:	bl	39f00 <__assert_fail@plt+0x287ac>
   3112c:	str	r0, [sp]
   31130:	ldr	r0, [sp]
   31134:	movw	r1, #0
   31138:	cmp	r0, r1
   3113c:	bne	3116c <__assert_fail@plt+0x1fa18>
   31140:	ldr	r0, [fp, #-4]
   31144:	movw	r1, #0
   31148:	cmp	r0, r1
   3114c:	beq	31168 <__assert_fail@plt+0x1fa14>
   31150:	ldr	r0, [sp, #8]
   31154:	cmp	r0, #0
   31158:	beq	3116c <__assert_fail@plt+0x1fa18>
   3115c:	ldr	r0, [sp, #4]
   31160:	cmp	r0, #0
   31164:	beq	3116c <__assert_fail@plt+0x1fa18>
   31168:	bl	11850 <__assert_fail@plt+0xfc>
   3116c:	ldr	r0, [sp]
   31170:	mov	sp, fp
   31174:	pop	{fp, pc}
   31178:	push	{fp, lr}
   3117c:	mov	fp, sp
   31180:	sub	sp, sp, #8
   31184:	str	r0, [sp, #4]
   31188:	ldr	r0, [sp, #4]
   3118c:	bl	3816c <__assert_fail@plt+0x26a18>
   31190:	bl	3119c <__assert_fail@plt+0x1fa48>
   31194:	mov	sp, fp
   31198:	pop	{fp, pc}
   3119c:	push	{fp, lr}
   311a0:	mov	fp, sp
   311a4:	sub	sp, sp, #8
   311a8:	str	r0, [sp, #4]
   311ac:	ldr	r0, [sp, #4]
   311b0:	movw	r1, #0
   311b4:	cmp	r0, r1
   311b8:	bne	311c0 <__assert_fail@plt+0x1fa6c>
   311bc:	bl	11850 <__assert_fail@plt+0xfc>
   311c0:	ldr	r0, [sp, #4]
   311c4:	mov	sp, fp
   311c8:	pop	{fp, pc}
   311cc:	push	{fp, lr}
   311d0:	mov	fp, sp
   311d4:	sub	sp, sp, #8
   311d8:	str	r0, [sp, #4]
   311dc:	ldr	r0, [sp, #4]
   311e0:	bl	39c3c <__assert_fail@plt+0x284e8>
   311e4:	bl	3119c <__assert_fail@plt+0x1fa48>
   311e8:	mov	sp, fp
   311ec:	pop	{fp, pc}
   311f0:	push	{fp, lr}
   311f4:	mov	fp, sp
   311f8:	sub	sp, sp, #8
   311fc:	str	r0, [sp, #4]
   31200:	ldr	r0, [sp, #4]
   31204:	bl	31178 <__assert_fail@plt+0x1fa24>
   31208:	mov	sp, fp
   3120c:	pop	{fp, pc}
   31210:	push	{fp, lr}
   31214:	mov	fp, sp
   31218:	sub	sp, sp, #16
   3121c:	str	r0, [fp, #-4]
   31220:	str	r1, [sp, #8]
   31224:	ldr	r0, [fp, #-4]
   31228:	ldr	r1, [sp, #8]
   3122c:	bl	381dc <__assert_fail@plt+0x26a88>
   31230:	str	r0, [sp, #4]
   31234:	ldr	r0, [sp, #4]
   31238:	movw	r1, #0
   3123c:	cmp	r0, r1
   31240:	bne	31264 <__assert_fail@plt+0x1fb10>
   31244:	ldr	r0, [fp, #-4]
   31248:	movw	r1, #0
   3124c:	cmp	r0, r1
   31250:	beq	31260 <__assert_fail@plt+0x1fb0c>
   31254:	ldr	r0, [sp, #8]
   31258:	cmp	r0, #0
   3125c:	beq	31264 <__assert_fail@plt+0x1fb10>
   31260:	bl	11850 <__assert_fail@plt+0xfc>
   31264:	ldr	r0, [sp, #4]
   31268:	mov	sp, fp
   3126c:	pop	{fp, pc}
   31270:	push	{fp, lr}
   31274:	mov	fp, sp
   31278:	sub	sp, sp, #8
   3127c:	str	r0, [sp, #4]
   31280:	str	r1, [sp]
   31284:	ldr	r0, [sp, #4]
   31288:	ldr	r1, [sp]
   3128c:	bl	39c7c <__assert_fail@plt+0x28528>
   31290:	bl	3119c <__assert_fail@plt+0x1fa48>
   31294:	mov	sp, fp
   31298:	pop	{fp, pc}
   3129c:	push	{fp, lr}
   312a0:	mov	fp, sp
   312a4:	sub	sp, sp, #16
   312a8:	str	r0, [fp, #-4]
   312ac:	str	r1, [sp, #8]
   312b0:	str	r2, [sp, #4]
   312b4:	ldr	r0, [fp, #-4]
   312b8:	ldr	r1, [sp, #8]
   312bc:	ldr	r2, [sp, #4]
   312c0:	bl	39d74 <__assert_fail@plt+0x28620>
   312c4:	bl	3119c <__assert_fail@plt+0x1fa48>
   312c8:	mov	sp, fp
   312cc:	pop	{fp, pc}
   312d0:	push	{fp, lr}
   312d4:	mov	fp, sp
   312d8:	sub	sp, sp, #8
   312dc:	str	r0, [sp, #4]
   312e0:	str	r1, [sp]
   312e4:	ldr	r1, [sp, #4]
   312e8:	ldr	r2, [sp]
   312ec:	movw	r0, #0
   312f0:	bl	31104 <__assert_fail@plt+0x1f9b0>
   312f4:	mov	sp, fp
   312f8:	pop	{fp, pc}
   312fc:	push	{fp, lr}
   31300:	mov	fp, sp
   31304:	sub	sp, sp, #8
   31308:	str	r0, [sp, #4]
   3130c:	str	r1, [sp]
   31310:	ldr	r1, [sp, #4]
   31314:	ldr	r2, [sp]
   31318:	movw	r0, #0
   3131c:	bl	3129c <__assert_fail@plt+0x1fb48>
   31320:	mov	sp, fp
   31324:	pop	{fp, pc}
   31328:	push	{fp, lr}
   3132c:	mov	fp, sp
   31330:	sub	sp, sp, #8
   31334:	str	r0, [sp, #4]
   31338:	str	r1, [sp]
   3133c:	ldr	r0, [sp, #4]
   31340:	ldr	r1, [sp]
   31344:	movw	r2, #1
   31348:	bl	31354 <__assert_fail@plt+0x1fc00>
   3134c:	mov	sp, fp
   31350:	pop	{fp, pc}
   31354:	push	{fp, lr}
   31358:	mov	fp, sp
   3135c:	sub	sp, sp, #16
   31360:	str	r0, [fp, #-4]
   31364:	str	r1, [sp, #8]
   31368:	str	r2, [sp, #4]
   3136c:	ldr	r0, [sp, #8]
   31370:	ldr	r0, [r0]
   31374:	str	r0, [sp]
   31378:	ldr	r0, [fp, #-4]
   3137c:	movw	r1, #0
   31380:	cmp	r0, r1
   31384:	bne	313d0 <__assert_fail@plt+0x1fc7c>
   31388:	ldr	r0, [sp]
   3138c:	cmp	r0, #0
   31390:	bne	313cc <__assert_fail@plt+0x1fc78>
   31394:	ldr	r0, [sp, #4]
   31398:	movw	r1, #64	; 0x40
   3139c:	udiv	r0, r1, r0
   313a0:	str	r0, [sp]
   313a4:	ldr	r0, [sp]
   313a8:	cmp	r0, #0
   313ac:	movw	r0, #0
   313b0:	movne	r0, #1
   313b4:	mvn	r1, #0
   313b8:	eor	r0, r0, r1
   313bc:	and	r0, r0, #1
   313c0:	ldr	r1, [sp]
   313c4:	add	r0, r1, r0
   313c8:	str	r0, [sp]
   313cc:	b	31400 <__assert_fail@plt+0x1fcac>
   313d0:	ldr	r0, [sp]
   313d4:	ldr	r1, [sp]
   313d8:	lsr	r1, r1, #1
   313dc:	add	r1, r1, #1
   313e0:	adds	r0, r0, r1
   313e4:	mov	r1, #0
   313e8:	adc	r1, r1, #0
   313ec:	str	r0, [sp]
   313f0:	tst	r1, #1
   313f4:	beq	313fc <__assert_fail@plt+0x1fca8>
   313f8:	bl	11850 <__assert_fail@plt+0xfc>
   313fc:	b	31400 <__assert_fail@plt+0x1fcac>
   31400:	ldr	r0, [fp, #-4]
   31404:	ldr	r1, [sp]
   31408:	ldr	r2, [sp, #4]
   3140c:	bl	31104 <__assert_fail@plt+0x1f9b0>
   31410:	str	r0, [fp, #-4]
   31414:	ldr	r0, [sp]
   31418:	ldr	r1, [sp, #8]
   3141c:	str	r0, [r1]
   31420:	ldr	r0, [fp, #-4]
   31424:	mov	sp, fp
   31428:	pop	{fp, pc}
   3142c:	push	{fp, lr}
   31430:	mov	fp, sp
   31434:	sub	sp, sp, #216	; 0xd8
   31438:	ldr	ip, [fp, #8]
   3143c:	str	r0, [fp, #-4]
   31440:	str	r1, [fp, #-8]
   31444:	str	r2, [fp, #-12]
   31448:	str	r3, [fp, #-16]
   3144c:	ldr	r0, [fp, #-8]
   31450:	ldr	r0, [r0]
   31454:	str	r0, [fp, #-20]	; 0xffffffec
   31458:	ldr	r0, [fp, #-20]	; 0xffffffec
   3145c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31460:	asr	r1, r1, #1
   31464:	add	r1, r0, r1
   31468:	mov	r2, #1
   3146c:	cmp	r1, r0
   31470:	movwvc	r2, #0
   31474:	str	r1, [fp, #-24]	; 0xffffffe8
   31478:	tst	r2, #1
   3147c:	beq	31488 <__assert_fail@plt+0x1fd34>
   31480:	ldr	r0, [pc, #4036]	; 3244c <__assert_fail@plt+0x20cf8>
   31484:	str	r0, [fp, #-24]	; 0xffffffe8
   31488:	ldr	r0, [fp, #-16]
   3148c:	movw	r1, #0
   31490:	cmp	r1, r0
   31494:	bgt	314b0 <__assert_fail@plt+0x1fd5c>
   31498:	ldr	r0, [fp, #-16]
   3149c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   314a0:	cmp	r0, r1
   314a4:	bge	314b0 <__assert_fail@plt+0x1fd5c>
   314a8:	ldr	r0, [fp, #-16]
   314ac:	str	r0, [fp, #-24]	; 0xffffffe8
   314b0:	b	31888 <__assert_fail@plt+0x20134>
   314b4:	b	314b8 <__assert_fail@plt+0x1fd64>
   314b8:	ldr	r0, [fp, #8]
   314bc:	cmp	r0, #0
   314c0:	bge	315d4 <__assert_fail@plt+0x1fe80>
   314c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   314c8:	cmp	r0, #0
   314cc:	bge	31558 <__assert_fail@plt+0x1fe04>
   314d0:	b	314d4 <__assert_fail@plt+0x1fd80>
   314d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   314d8:	ldr	r1, [fp, #8]
   314dc:	movw	r2, #127	; 0x7f
   314e0:	sdiv	r1, r2, r1
   314e4:	cmp	r0, r1
   314e8:	blt	31674 <__assert_fail@plt+0x1ff20>
   314ec:	b	3168c <__assert_fail@plt+0x1ff38>
   314f0:	b	314f4 <__assert_fail@plt+0x1fda0>
   314f4:	ldr	r0, [pc, #4084]	; 324f0 <__assert_fail@plt+0x20d9c>
   314f8:	ldr	r1, [fp, #8]
   314fc:	cmp	r1, r0
   31500:	blt	31518 <__assert_fail@plt+0x1fdc4>
   31504:	b	31524 <__assert_fail@plt+0x1fdd0>
   31508:	ldr	r0, [fp, #8]
   3150c:	movw	r1, #0
   31510:	cmp	r1, r0
   31514:	bge	31524 <__assert_fail@plt+0x1fdd0>
   31518:	movw	r0, #0
   3151c:	str	r0, [fp, #-36]	; 0xffffffdc
   31520:	b	3153c <__assert_fail@plt+0x1fde8>
   31524:	ldr	r0, [fp, #8]
   31528:	movw	r1, #0
   3152c:	sub	r0, r1, r0
   31530:	movw	r1, #127	; 0x7f
   31534:	sdiv	r0, r1, r0
   31538:	str	r0, [fp, #-36]	; 0xffffffdc
   3153c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31544:	mvn	r2, #0
   31548:	sub	r1, r2, r1
   3154c:	cmp	r0, r1
   31550:	ble	31674 <__assert_fail@plt+0x1ff20>
   31554:	b	3168c <__assert_fail@plt+0x1ff38>
   31558:	b	3155c <__assert_fail@plt+0x1fe08>
   3155c:	b	315b8 <__assert_fail@plt+0x1fe64>
   31560:	b	315b8 <__assert_fail@plt+0x1fe64>
   31564:	ldr	r0, [fp, #8]
   31568:	cmn	r0, #1
   3156c:	bne	315b8 <__assert_fail@plt+0x1fe64>
   31570:	b	31574 <__assert_fail@plt+0x1fe20>
   31574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31578:	mvn	r1, #127	; 0x7f
   3157c:	add	r0, r0, r1
   31580:	movw	r1, #0
   31584:	cmp	r1, r0
   31588:	blt	31674 <__assert_fail@plt+0x1ff20>
   3158c:	b	3168c <__assert_fail@plt+0x1ff38>
   31590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31594:	movw	r1, #0
   31598:	cmp	r1, r0
   3159c:	bge	3168c <__assert_fail@plt+0x1ff38>
   315a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   315a4:	sub	r0, r0, #1
   315a8:	movw	r1, #127	; 0x7f
   315ac:	cmp	r1, r0
   315b0:	blt	31674 <__assert_fail@plt+0x1ff20>
   315b4:	b	3168c <__assert_fail@plt+0x1ff38>
   315b8:	ldr	r0, [fp, #8]
   315bc:	mvn	r1, #127	; 0x7f
   315c0:	sdiv	r0, r1, r0
   315c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   315c8:	cmp	r0, r1
   315cc:	blt	31674 <__assert_fail@plt+0x1ff20>
   315d0:	b	3168c <__assert_fail@plt+0x1ff38>
   315d4:	ldr	r0, [fp, #8]
   315d8:	cmp	r0, #0
   315dc:	bne	315e4 <__assert_fail@plt+0x1fe90>
   315e0:	b	3168c <__assert_fail@plt+0x1ff38>
   315e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   315e8:	cmp	r0, #0
   315ec:	bge	3165c <__assert_fail@plt+0x1ff08>
   315f0:	b	315f4 <__assert_fail@plt+0x1fea0>
   315f4:	b	31640 <__assert_fail@plt+0x1feec>
   315f8:	b	31640 <__assert_fail@plt+0x1feec>
   315fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31600:	cmn	r0, #1
   31604:	bne	31640 <__assert_fail@plt+0x1feec>
   31608:	b	3160c <__assert_fail@plt+0x1feb8>
   3160c:	ldr	r0, [fp, #8]
   31610:	mvn	r1, #127	; 0x7f
   31614:	add	r0, r0, r1
   31618:	movw	r1, #0
   3161c:	cmp	r1, r0
   31620:	blt	31674 <__assert_fail@plt+0x1ff20>
   31624:	b	3168c <__assert_fail@plt+0x1ff38>
   31628:	ldr	r0, [fp, #8]
   3162c:	sub	r0, r0, #1
   31630:	movw	r1, #127	; 0x7f
   31634:	cmp	r1, r0
   31638:	blt	31674 <__assert_fail@plt+0x1ff20>
   3163c:	b	3168c <__assert_fail@plt+0x1ff38>
   31640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31644:	mvn	r1, #127	; 0x7f
   31648:	sdiv	r0, r1, r0
   3164c:	ldr	r1, [fp, #8]
   31650:	cmp	r0, r1
   31654:	blt	31674 <__assert_fail@plt+0x1ff20>
   31658:	b	3168c <__assert_fail@plt+0x1ff38>
   3165c:	ldr	r0, [fp, #8]
   31660:	movw	r1, #127	; 0x7f
   31664:	sdiv	r0, r1, r0
   31668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3166c:	cmp	r0, r1
   31670:	bge	3168c <__assert_fail@plt+0x1ff38>
   31674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31678:	ldr	r1, [fp, #8]
   3167c:	mul	r0, r0, r1
   31680:	sxtb	r0, r0
   31684:	str	r0, [fp, #-28]	; 0xffffffe4
   31688:	b	32850 <__assert_fail@plt+0x210fc>
   3168c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31690:	ldr	r1, [fp, #8]
   31694:	mul	r0, r0, r1
   31698:	sxtb	r0, r0
   3169c:	str	r0, [fp, #-28]	; 0xffffffe4
   316a0:	b	3285c <__assert_fail@plt+0x21108>
   316a4:	ldr	r0, [fp, #8]
   316a8:	cmp	r0, #0
   316ac:	bge	317bc <__assert_fail@plt+0x20068>
   316b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   316b4:	cmp	r0, #0
   316b8:	bge	31744 <__assert_fail@plt+0x1fff0>
   316bc:	b	316c0 <__assert_fail@plt+0x1ff6c>
   316c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   316c4:	ldr	r1, [fp, #8]
   316c8:	movw	r2, #255	; 0xff
   316cc:	sdiv	r1, r2, r1
   316d0:	cmp	r0, r1
   316d4:	blt	31858 <__assert_fail@plt+0x20104>
   316d8:	b	31870 <__assert_fail@plt+0x2011c>
   316dc:	b	316e0 <__assert_fail@plt+0x1ff8c>
   316e0:	ldr	r0, [pc, #3592]	; 324f0 <__assert_fail@plt+0x20d9c>
   316e4:	ldr	r1, [fp, #8]
   316e8:	cmp	r1, r0
   316ec:	blt	31704 <__assert_fail@plt+0x1ffb0>
   316f0:	b	31710 <__assert_fail@plt+0x1ffbc>
   316f4:	ldr	r0, [fp, #8]
   316f8:	movw	r1, #0
   316fc:	cmp	r1, r0
   31700:	bge	31710 <__assert_fail@plt+0x1ffbc>
   31704:	movw	r0, #0
   31708:	str	r0, [fp, #-40]	; 0xffffffd8
   3170c:	b	31728 <__assert_fail@plt+0x1ffd4>
   31710:	ldr	r0, [fp, #8]
   31714:	movw	r1, #0
   31718:	sub	r0, r1, r0
   3171c:	movw	r1, #255	; 0xff
   31720:	sdiv	r0, r1, r0
   31724:	str	r0, [fp, #-40]	; 0xffffffd8
   31728:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3172c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31730:	mvn	r2, #0
   31734:	sub	r1, r2, r1
   31738:	cmp	r0, r1
   3173c:	ble	31858 <__assert_fail@plt+0x20104>
   31740:	b	31870 <__assert_fail@plt+0x2011c>
   31744:	b	31748 <__assert_fail@plt+0x1fff4>
   31748:	b	317a0 <__assert_fail@plt+0x2004c>
   3174c:	b	317a0 <__assert_fail@plt+0x2004c>
   31750:	ldr	r0, [fp, #8]
   31754:	cmn	r0, #1
   31758:	bne	317a0 <__assert_fail@plt+0x2004c>
   3175c:	b	31760 <__assert_fail@plt+0x2000c>
   31760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31764:	add	r0, r0, #0
   31768:	movw	r1, #0
   3176c:	cmp	r1, r0
   31770:	blt	31858 <__assert_fail@plt+0x20104>
   31774:	b	31870 <__assert_fail@plt+0x2011c>
   31778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3177c:	movw	r1, #0
   31780:	cmp	r1, r0
   31784:	bge	31870 <__assert_fail@plt+0x2011c>
   31788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3178c:	sub	r0, r0, #1
   31790:	mvn	r1, #0
   31794:	cmp	r1, r0
   31798:	blt	31858 <__assert_fail@plt+0x20104>
   3179c:	b	31870 <__assert_fail@plt+0x2011c>
   317a0:	ldr	r0, [fp, #8]
   317a4:	movw	r1, #0
   317a8:	sdiv	r0, r1, r0
   317ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   317b0:	cmp	r0, r1
   317b4:	blt	31858 <__assert_fail@plt+0x20104>
   317b8:	b	31870 <__assert_fail@plt+0x2011c>
   317bc:	ldr	r0, [fp, #8]
   317c0:	cmp	r0, #0
   317c4:	bne	317cc <__assert_fail@plt+0x20078>
   317c8:	b	31870 <__assert_fail@plt+0x2011c>
   317cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   317d0:	cmp	r0, #0
   317d4:	bge	31840 <__assert_fail@plt+0x200ec>
   317d8:	b	317dc <__assert_fail@plt+0x20088>
   317dc:	b	31824 <__assert_fail@plt+0x200d0>
   317e0:	b	31824 <__assert_fail@plt+0x200d0>
   317e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   317e8:	cmn	r0, #1
   317ec:	bne	31824 <__assert_fail@plt+0x200d0>
   317f0:	b	317f4 <__assert_fail@plt+0x200a0>
   317f4:	ldr	r0, [fp, #8]
   317f8:	add	r0, r0, #0
   317fc:	movw	r1, #0
   31800:	cmp	r1, r0
   31804:	blt	31858 <__assert_fail@plt+0x20104>
   31808:	b	31870 <__assert_fail@plt+0x2011c>
   3180c:	ldr	r0, [fp, #8]
   31810:	sub	r0, r0, #1
   31814:	mvn	r1, #0
   31818:	cmp	r1, r0
   3181c:	blt	31858 <__assert_fail@plt+0x20104>
   31820:	b	31870 <__assert_fail@plt+0x2011c>
   31824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31828:	movw	r1, #0
   3182c:	sdiv	r0, r1, r0
   31830:	ldr	r1, [fp, #8]
   31834:	cmp	r0, r1
   31838:	blt	31858 <__assert_fail@plt+0x20104>
   3183c:	b	31870 <__assert_fail@plt+0x2011c>
   31840:	ldr	r0, [fp, #8]
   31844:	movw	r1, #255	; 0xff
   31848:	sdiv	r0, r1, r0
   3184c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31850:	cmp	r0, r1
   31854:	bge	31870 <__assert_fail@plt+0x2011c>
   31858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3185c:	ldr	r1, [fp, #8]
   31860:	mul	r0, r0, r1
   31864:	and	r0, r0, #255	; 0xff
   31868:	str	r0, [fp, #-28]	; 0xffffffe4
   3186c:	b	32850 <__assert_fail@plt+0x210fc>
   31870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31874:	ldr	r1, [fp, #8]
   31878:	mul	r0, r0, r1
   3187c:	and	r0, r0, #255	; 0xff
   31880:	str	r0, [fp, #-28]	; 0xffffffe4
   31884:	b	3285c <__assert_fail@plt+0x21108>
   31888:	b	31c60 <__assert_fail@plt+0x2050c>
   3188c:	b	31890 <__assert_fail@plt+0x2013c>
   31890:	ldr	r0, [fp, #8]
   31894:	cmp	r0, #0
   31898:	bge	319ac <__assert_fail@plt+0x20258>
   3189c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   318a0:	cmp	r0, #0
   318a4:	bge	31930 <__assert_fail@plt+0x201dc>
   318a8:	b	318ac <__assert_fail@plt+0x20158>
   318ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   318b0:	ldr	r1, [fp, #8]
   318b4:	movw	r2, #32767	; 0x7fff
   318b8:	sdiv	r1, r2, r1
   318bc:	cmp	r0, r1
   318c0:	blt	31a4c <__assert_fail@plt+0x202f8>
   318c4:	b	31a64 <__assert_fail@plt+0x20310>
   318c8:	b	318cc <__assert_fail@plt+0x20178>
   318cc:	ldr	r0, [pc, #3100]	; 324f0 <__assert_fail@plt+0x20d9c>
   318d0:	ldr	r1, [fp, #8]
   318d4:	cmp	r1, r0
   318d8:	blt	318f0 <__assert_fail@plt+0x2019c>
   318dc:	b	318fc <__assert_fail@plt+0x201a8>
   318e0:	ldr	r0, [fp, #8]
   318e4:	movw	r1, #0
   318e8:	cmp	r1, r0
   318ec:	bge	318fc <__assert_fail@plt+0x201a8>
   318f0:	movw	r0, #0
   318f4:	str	r0, [fp, #-44]	; 0xffffffd4
   318f8:	b	31914 <__assert_fail@plt+0x201c0>
   318fc:	ldr	r0, [fp, #8]
   31900:	movw	r1, #0
   31904:	sub	r0, r1, r0
   31908:	movw	r1, #32767	; 0x7fff
   3190c:	sdiv	r0, r1, r0
   31910:	str	r0, [fp, #-44]	; 0xffffffd4
   31914:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3191c:	mvn	r2, #0
   31920:	sub	r1, r2, r1
   31924:	cmp	r0, r1
   31928:	ble	31a4c <__assert_fail@plt+0x202f8>
   3192c:	b	31a64 <__assert_fail@plt+0x20310>
   31930:	b	31934 <__assert_fail@plt+0x201e0>
   31934:	b	31990 <__assert_fail@plt+0x2023c>
   31938:	b	31990 <__assert_fail@plt+0x2023c>
   3193c:	ldr	r0, [fp, #8]
   31940:	cmn	r0, #1
   31944:	bne	31990 <__assert_fail@plt+0x2023c>
   31948:	b	3194c <__assert_fail@plt+0x201f8>
   3194c:	ldr	r0, [pc, #4068]	; 32938 <__assert_fail@plt+0x211e4>
   31950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31954:	add	r0, r1, r0
   31958:	movw	r1, #0
   3195c:	cmp	r1, r0
   31960:	blt	31a4c <__assert_fail@plt+0x202f8>
   31964:	b	31a64 <__assert_fail@plt+0x20310>
   31968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3196c:	movw	r1, #0
   31970:	cmp	r1, r0
   31974:	bge	31a64 <__assert_fail@plt+0x20310>
   31978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3197c:	sub	r0, r0, #1
   31980:	movw	r1, #32767	; 0x7fff
   31984:	cmp	r1, r0
   31988:	blt	31a4c <__assert_fail@plt+0x202f8>
   3198c:	b	31a64 <__assert_fail@plt+0x20310>
   31990:	ldr	r0, [pc, #4000]	; 32938 <__assert_fail@plt+0x211e4>
   31994:	ldr	r1, [fp, #8]
   31998:	sdiv	r0, r0, r1
   3199c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   319a0:	cmp	r0, r1
   319a4:	blt	31a4c <__assert_fail@plt+0x202f8>
   319a8:	b	31a64 <__assert_fail@plt+0x20310>
   319ac:	ldr	r0, [fp, #8]
   319b0:	cmp	r0, #0
   319b4:	bne	319bc <__assert_fail@plt+0x20268>
   319b8:	b	31a64 <__assert_fail@plt+0x20310>
   319bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   319c0:	cmp	r0, #0
   319c4:	bge	31a34 <__assert_fail@plt+0x202e0>
   319c8:	b	319cc <__assert_fail@plt+0x20278>
   319cc:	b	31a18 <__assert_fail@plt+0x202c4>
   319d0:	b	31a18 <__assert_fail@plt+0x202c4>
   319d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   319d8:	cmn	r0, #1
   319dc:	bne	31a18 <__assert_fail@plt+0x202c4>
   319e0:	b	319e4 <__assert_fail@plt+0x20290>
   319e4:	ldr	r0, [pc, #3916]	; 32938 <__assert_fail@plt+0x211e4>
   319e8:	ldr	r1, [fp, #8]
   319ec:	add	r0, r1, r0
   319f0:	movw	r1, #0
   319f4:	cmp	r1, r0
   319f8:	blt	31a4c <__assert_fail@plt+0x202f8>
   319fc:	b	31a64 <__assert_fail@plt+0x20310>
   31a00:	ldr	r0, [fp, #8]
   31a04:	sub	r0, r0, #1
   31a08:	movw	r1, #32767	; 0x7fff
   31a0c:	cmp	r1, r0
   31a10:	blt	31a4c <__assert_fail@plt+0x202f8>
   31a14:	b	31a64 <__assert_fail@plt+0x20310>
   31a18:	ldr	r0, [pc, #3864]	; 32938 <__assert_fail@plt+0x211e4>
   31a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31a20:	sdiv	r0, r0, r1
   31a24:	ldr	r1, [fp, #8]
   31a28:	cmp	r0, r1
   31a2c:	blt	31a4c <__assert_fail@plt+0x202f8>
   31a30:	b	31a64 <__assert_fail@plt+0x20310>
   31a34:	ldr	r0, [fp, #8]
   31a38:	movw	r1, #32767	; 0x7fff
   31a3c:	sdiv	r0, r1, r0
   31a40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31a44:	cmp	r0, r1
   31a48:	bge	31a64 <__assert_fail@plt+0x20310>
   31a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a50:	ldr	r1, [fp, #8]
   31a54:	mul	r0, r0, r1
   31a58:	sxth	r0, r0
   31a5c:	str	r0, [fp, #-28]	; 0xffffffe4
   31a60:	b	32850 <__assert_fail@plt+0x210fc>
   31a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a68:	ldr	r1, [fp, #8]
   31a6c:	mul	r0, r0, r1
   31a70:	sxth	r0, r0
   31a74:	str	r0, [fp, #-28]	; 0xffffffe4
   31a78:	b	3285c <__assert_fail@plt+0x21108>
   31a7c:	ldr	r0, [fp, #8]
   31a80:	cmp	r0, #0
   31a84:	bge	31b94 <__assert_fail@plt+0x20440>
   31a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a8c:	cmp	r0, #0
   31a90:	bge	31b1c <__assert_fail@plt+0x203c8>
   31a94:	b	31a98 <__assert_fail@plt+0x20344>
   31a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a9c:	ldr	r1, [fp, #8]
   31aa0:	movw	r2, #65535	; 0xffff
   31aa4:	sdiv	r1, r2, r1
   31aa8:	cmp	r0, r1
   31aac:	blt	31c30 <__assert_fail@plt+0x204dc>
   31ab0:	b	31c48 <__assert_fail@plt+0x204f4>
   31ab4:	b	31ab8 <__assert_fail@plt+0x20364>
   31ab8:	ldr	r0, [pc, #2608]	; 324f0 <__assert_fail@plt+0x20d9c>
   31abc:	ldr	r1, [fp, #8]
   31ac0:	cmp	r1, r0
   31ac4:	blt	31adc <__assert_fail@plt+0x20388>
   31ac8:	b	31ae8 <__assert_fail@plt+0x20394>
   31acc:	ldr	r0, [fp, #8]
   31ad0:	movw	r1, #0
   31ad4:	cmp	r1, r0
   31ad8:	bge	31ae8 <__assert_fail@plt+0x20394>
   31adc:	movw	r0, #0
   31ae0:	str	r0, [fp, #-48]	; 0xffffffd0
   31ae4:	b	31b00 <__assert_fail@plt+0x203ac>
   31ae8:	ldr	r0, [fp, #8]
   31aec:	movw	r1, #0
   31af0:	sub	r0, r1, r0
   31af4:	movw	r1, #65535	; 0xffff
   31af8:	sdiv	r0, r1, r0
   31afc:	str	r0, [fp, #-48]	; 0xffffffd0
   31b00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31b04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31b08:	mvn	r2, #0
   31b0c:	sub	r1, r2, r1
   31b10:	cmp	r0, r1
   31b14:	ble	31c30 <__assert_fail@plt+0x204dc>
   31b18:	b	31c48 <__assert_fail@plt+0x204f4>
   31b1c:	b	31b20 <__assert_fail@plt+0x203cc>
   31b20:	b	31b78 <__assert_fail@plt+0x20424>
   31b24:	b	31b78 <__assert_fail@plt+0x20424>
   31b28:	ldr	r0, [fp, #8]
   31b2c:	cmn	r0, #1
   31b30:	bne	31b78 <__assert_fail@plt+0x20424>
   31b34:	b	31b38 <__assert_fail@plt+0x203e4>
   31b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b3c:	add	r0, r0, #0
   31b40:	movw	r1, #0
   31b44:	cmp	r1, r0
   31b48:	blt	31c30 <__assert_fail@plt+0x204dc>
   31b4c:	b	31c48 <__assert_fail@plt+0x204f4>
   31b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b54:	movw	r1, #0
   31b58:	cmp	r1, r0
   31b5c:	bge	31c48 <__assert_fail@plt+0x204f4>
   31b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b64:	sub	r0, r0, #1
   31b68:	mvn	r1, #0
   31b6c:	cmp	r1, r0
   31b70:	blt	31c30 <__assert_fail@plt+0x204dc>
   31b74:	b	31c48 <__assert_fail@plt+0x204f4>
   31b78:	ldr	r0, [fp, #8]
   31b7c:	movw	r1, #0
   31b80:	sdiv	r0, r1, r0
   31b84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31b88:	cmp	r0, r1
   31b8c:	blt	31c30 <__assert_fail@plt+0x204dc>
   31b90:	b	31c48 <__assert_fail@plt+0x204f4>
   31b94:	ldr	r0, [fp, #8]
   31b98:	cmp	r0, #0
   31b9c:	bne	31ba4 <__assert_fail@plt+0x20450>
   31ba0:	b	31c48 <__assert_fail@plt+0x204f4>
   31ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ba8:	cmp	r0, #0
   31bac:	bge	31c18 <__assert_fail@plt+0x204c4>
   31bb0:	b	31bb4 <__assert_fail@plt+0x20460>
   31bb4:	b	31bfc <__assert_fail@plt+0x204a8>
   31bb8:	b	31bfc <__assert_fail@plt+0x204a8>
   31bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31bc0:	cmn	r0, #1
   31bc4:	bne	31bfc <__assert_fail@plt+0x204a8>
   31bc8:	b	31bcc <__assert_fail@plt+0x20478>
   31bcc:	ldr	r0, [fp, #8]
   31bd0:	add	r0, r0, #0
   31bd4:	movw	r1, #0
   31bd8:	cmp	r1, r0
   31bdc:	blt	31c30 <__assert_fail@plt+0x204dc>
   31be0:	b	31c48 <__assert_fail@plt+0x204f4>
   31be4:	ldr	r0, [fp, #8]
   31be8:	sub	r0, r0, #1
   31bec:	mvn	r1, #0
   31bf0:	cmp	r1, r0
   31bf4:	blt	31c30 <__assert_fail@plt+0x204dc>
   31bf8:	b	31c48 <__assert_fail@plt+0x204f4>
   31bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c00:	movw	r1, #0
   31c04:	sdiv	r0, r1, r0
   31c08:	ldr	r1, [fp, #8]
   31c0c:	cmp	r0, r1
   31c10:	blt	31c30 <__assert_fail@plt+0x204dc>
   31c14:	b	31c48 <__assert_fail@plt+0x204f4>
   31c18:	ldr	r0, [fp, #8]
   31c1c:	movw	r1, #65535	; 0xffff
   31c20:	sdiv	r0, r1, r0
   31c24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31c28:	cmp	r0, r1
   31c2c:	bge	31c48 <__assert_fail@plt+0x204f4>
   31c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c34:	ldr	r1, [fp, #8]
   31c38:	mul	r0, r0, r1
   31c3c:	uxth	r0, r0
   31c40:	str	r0, [fp, #-28]	; 0xffffffe4
   31c44:	b	32850 <__assert_fail@plt+0x210fc>
   31c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c4c:	ldr	r1, [fp, #8]
   31c50:	mul	r0, r0, r1
   31c54:	uxth	r0, r0
   31c58:	str	r0, [fp, #-28]	; 0xffffffe4
   31c5c:	b	3285c <__assert_fail@plt+0x21108>
   31c60:	b	31c64 <__assert_fail@plt+0x20510>
   31c64:	b	31c68 <__assert_fail@plt+0x20514>
   31c68:	ldr	r0, [fp, #8]
   31c6c:	cmp	r0, #0
   31c70:	bge	31d74 <__assert_fail@plt+0x20620>
   31c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c78:	cmp	r0, #0
   31c7c:	bge	31d08 <__assert_fail@plt+0x205b4>
   31c80:	b	31c84 <__assert_fail@plt+0x20530>
   31c84:	ldr	r0, [pc, #1984]	; 3244c <__assert_fail@plt+0x20cf8>
   31c88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31c8c:	ldr	r2, [fp, #8]
   31c90:	sdiv	r0, r0, r2
   31c94:	cmp	r1, r0
   31c98:	blt	31e04 <__assert_fail@plt+0x206b0>
   31c9c:	b	31e18 <__assert_fail@plt+0x206c4>
   31ca0:	b	31ca4 <__assert_fail@plt+0x20550>
   31ca4:	ldr	r0, [pc, #2116]	; 324f0 <__assert_fail@plt+0x20d9c>
   31ca8:	ldr	r1, [fp, #8]
   31cac:	cmp	r1, r0
   31cb0:	blt	31cc8 <__assert_fail@plt+0x20574>
   31cb4:	b	31cd4 <__assert_fail@plt+0x20580>
   31cb8:	ldr	r0, [fp, #8]
   31cbc:	movw	r1, #0
   31cc0:	cmp	r1, r0
   31cc4:	bge	31cd4 <__assert_fail@plt+0x20580>
   31cc8:	movw	r0, #0
   31ccc:	str	r0, [fp, #-52]	; 0xffffffcc
   31cd0:	b	31cec <__assert_fail@plt+0x20598>
   31cd4:	ldr	r0, [pc, #1904]	; 3244c <__assert_fail@plt+0x20cf8>
   31cd8:	ldr	r1, [fp, #8]
   31cdc:	movw	r2, #0
   31ce0:	sub	r1, r2, r1
   31ce4:	sdiv	r0, r0, r1
   31ce8:	str	r0, [fp, #-52]	; 0xffffffcc
   31cec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31cf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31cf4:	mvn	r2, #0
   31cf8:	sub	r1, r2, r1
   31cfc:	cmp	r0, r1
   31d00:	ble	31e04 <__assert_fail@plt+0x206b0>
   31d04:	b	31e18 <__assert_fail@plt+0x206c4>
   31d08:	ldr	r0, [fp, #8]
   31d0c:	cmn	r0, #1
   31d10:	bne	31d58 <__assert_fail@plt+0x20604>
   31d14:	b	31d18 <__assert_fail@plt+0x205c4>
   31d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31d1c:	add	r0, r0, #-2147483648	; 0x80000000
   31d20:	movw	r1, #0
   31d24:	cmp	r1, r0
   31d28:	blt	31e04 <__assert_fail@plt+0x206b0>
   31d2c:	b	31e18 <__assert_fail@plt+0x206c4>
   31d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31d34:	movw	r1, #0
   31d38:	cmp	r1, r0
   31d3c:	bge	31e18 <__assert_fail@plt+0x206c4>
   31d40:	ldr	r0, [pc, #1796]	; 3244c <__assert_fail@plt+0x20cf8>
   31d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31d48:	sub	r1, r1, #1
   31d4c:	cmp	r0, r1
   31d50:	blt	31e04 <__assert_fail@plt+0x206b0>
   31d54:	b	31e18 <__assert_fail@plt+0x206c4>
   31d58:	ldr	r0, [pc, #4080]	; 32d50 <__assert_fail@plt+0x215fc>
   31d5c:	ldr	r1, [fp, #8]
   31d60:	sdiv	r0, r0, r1
   31d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31d68:	cmp	r0, r1
   31d6c:	blt	31e04 <__assert_fail@plt+0x206b0>
   31d70:	b	31e18 <__assert_fail@plt+0x206c4>
   31d74:	ldr	r0, [fp, #8]
   31d78:	cmp	r0, #0
   31d7c:	bne	31d84 <__assert_fail@plt+0x20630>
   31d80:	b	31e18 <__assert_fail@plt+0x206c4>
   31d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31d88:	cmp	r0, #0
   31d8c:	bge	31dec <__assert_fail@plt+0x20698>
   31d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31d94:	cmn	r0, #1
   31d98:	bne	31dd0 <__assert_fail@plt+0x2067c>
   31d9c:	b	31da0 <__assert_fail@plt+0x2064c>
   31da0:	ldr	r0, [fp, #8]
   31da4:	add	r0, r0, #-2147483648	; 0x80000000
   31da8:	movw	r1, #0
   31dac:	cmp	r1, r0
   31db0:	blt	31e04 <__assert_fail@plt+0x206b0>
   31db4:	b	31e18 <__assert_fail@plt+0x206c4>
   31db8:	ldr	r0, [pc, #1676]	; 3244c <__assert_fail@plt+0x20cf8>
   31dbc:	ldr	r1, [fp, #8]
   31dc0:	sub	r1, r1, #1
   31dc4:	cmp	r0, r1
   31dc8:	blt	31e04 <__assert_fail@plt+0x206b0>
   31dcc:	b	31e18 <__assert_fail@plt+0x206c4>
   31dd0:	ldr	r0, [pc, #3960]	; 32d50 <__assert_fail@plt+0x215fc>
   31dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31dd8:	sdiv	r0, r0, r1
   31ddc:	ldr	r1, [fp, #8]
   31de0:	cmp	r0, r1
   31de4:	blt	31e04 <__assert_fail@plt+0x206b0>
   31de8:	b	31e18 <__assert_fail@plt+0x206c4>
   31dec:	ldr	r0, [pc, #1624]	; 3244c <__assert_fail@plt+0x20cf8>
   31df0:	ldr	r1, [fp, #8]
   31df4:	sdiv	r0, r0, r1
   31df8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31dfc:	cmp	r0, r1
   31e00:	bge	31e18 <__assert_fail@plt+0x206c4>
   31e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e08:	ldr	r1, [fp, #8]
   31e0c:	mul	r0, r0, r1
   31e10:	str	r0, [fp, #-28]	; 0xffffffe4
   31e14:	b	32850 <__assert_fail@plt+0x210fc>
   31e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e1c:	ldr	r1, [fp, #8]
   31e20:	mul	r0, r0, r1
   31e24:	str	r0, [fp, #-28]	; 0xffffffe4
   31e28:	b	3285c <__assert_fail@plt+0x21108>
   31e2c:	ldr	r0, [fp, #8]
   31e30:	cmp	r0, #0
   31e34:	bge	31f44 <__assert_fail@plt+0x207f0>
   31e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e3c:	cmp	r0, #0
   31e40:	bge	31ecc <__assert_fail@plt+0x20778>
   31e44:	b	31e64 <__assert_fail@plt+0x20710>
   31e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e4c:	ldr	r1, [fp, #8]
   31e50:	mvn	r2, #0
   31e54:	udiv	r1, r2, r1
   31e58:	cmp	r0, r1
   31e5c:	bcc	31fe0 <__assert_fail@plt+0x2088c>
   31e60:	b	31ff4 <__assert_fail@plt+0x208a0>
   31e64:	b	31e68 <__assert_fail@plt+0x20714>
   31e68:	ldr	r0, [pc, #1664]	; 324f0 <__assert_fail@plt+0x20d9c>
   31e6c:	ldr	r1, [fp, #8]
   31e70:	cmp	r1, r0
   31e74:	blt	31e8c <__assert_fail@plt+0x20738>
   31e78:	b	31e98 <__assert_fail@plt+0x20744>
   31e7c:	ldr	r0, [fp, #8]
   31e80:	movw	r1, #0
   31e84:	cmp	r1, r0
   31e88:	bge	31e98 <__assert_fail@plt+0x20744>
   31e8c:	movw	r0, #1
   31e90:	str	r0, [fp, #-56]	; 0xffffffc8
   31e94:	b	31eb0 <__assert_fail@plt+0x2075c>
   31e98:	ldr	r0, [fp, #8]
   31e9c:	movw	r1, #0
   31ea0:	sub	r0, r1, r0
   31ea4:	mvn	r1, #0
   31ea8:	udiv	r0, r1, r0
   31eac:	str	r0, [fp, #-56]	; 0xffffffc8
   31eb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   31eb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31eb8:	mvn	r2, #0
   31ebc:	sub	r1, r2, r1
   31ec0:	cmp	r0, r1
   31ec4:	bls	31fe0 <__assert_fail@plt+0x2088c>
   31ec8:	b	31ff4 <__assert_fail@plt+0x208a0>
   31ecc:	b	31ed0 <__assert_fail@plt+0x2077c>
   31ed0:	b	31f28 <__assert_fail@plt+0x207d4>
   31ed4:	b	31f28 <__assert_fail@plt+0x207d4>
   31ed8:	ldr	r0, [fp, #8]
   31edc:	cmn	r0, #1
   31ee0:	bne	31f28 <__assert_fail@plt+0x207d4>
   31ee4:	b	31ee8 <__assert_fail@plt+0x20794>
   31ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31eec:	add	r0, r0, #0
   31ef0:	movw	r1, #0
   31ef4:	cmp	r1, r0
   31ef8:	blt	31fe0 <__assert_fail@plt+0x2088c>
   31efc:	b	31ff4 <__assert_fail@plt+0x208a0>
   31f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31f04:	movw	r1, #0
   31f08:	cmp	r1, r0
   31f0c:	bge	31ff4 <__assert_fail@plt+0x208a0>
   31f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31f14:	sub	r0, r0, #1
   31f18:	mvn	r1, #0
   31f1c:	cmp	r1, r0
   31f20:	blt	31fe0 <__assert_fail@plt+0x2088c>
   31f24:	b	31ff4 <__assert_fail@plt+0x208a0>
   31f28:	ldr	r0, [fp, #8]
   31f2c:	movw	r1, #0
   31f30:	sdiv	r0, r1, r0
   31f34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31f38:	cmp	r0, r1
   31f3c:	blt	31fe0 <__assert_fail@plt+0x2088c>
   31f40:	b	31ff4 <__assert_fail@plt+0x208a0>
   31f44:	ldr	r0, [fp, #8]
   31f48:	cmp	r0, #0
   31f4c:	bne	31f54 <__assert_fail@plt+0x20800>
   31f50:	b	31ff4 <__assert_fail@plt+0x208a0>
   31f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31f58:	cmp	r0, #0
   31f5c:	bge	31fc8 <__assert_fail@plt+0x20874>
   31f60:	b	31f64 <__assert_fail@plt+0x20810>
   31f64:	b	31fac <__assert_fail@plt+0x20858>
   31f68:	b	31fac <__assert_fail@plt+0x20858>
   31f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31f70:	cmn	r0, #1
   31f74:	bne	31fac <__assert_fail@plt+0x20858>
   31f78:	b	31f7c <__assert_fail@plt+0x20828>
   31f7c:	ldr	r0, [fp, #8]
   31f80:	add	r0, r0, #0
   31f84:	movw	r1, #0
   31f88:	cmp	r1, r0
   31f8c:	blt	31fe0 <__assert_fail@plt+0x2088c>
   31f90:	b	31ff4 <__assert_fail@plt+0x208a0>
   31f94:	ldr	r0, [fp, #8]
   31f98:	sub	r0, r0, #1
   31f9c:	mvn	r1, #0
   31fa0:	cmp	r1, r0
   31fa4:	blt	31fe0 <__assert_fail@plt+0x2088c>
   31fa8:	b	31ff4 <__assert_fail@plt+0x208a0>
   31fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31fb0:	movw	r1, #0
   31fb4:	sdiv	r0, r1, r0
   31fb8:	ldr	r1, [fp, #8]
   31fbc:	cmp	r0, r1
   31fc0:	blt	31fe0 <__assert_fail@plt+0x2088c>
   31fc4:	b	31ff4 <__assert_fail@plt+0x208a0>
   31fc8:	ldr	r0, [fp, #8]
   31fcc:	mvn	r1, #0
   31fd0:	udiv	r0, r1, r0
   31fd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31fd8:	cmp	r0, r1
   31fdc:	bcs	31ff4 <__assert_fail@plt+0x208a0>
   31fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31fe4:	ldr	r1, [fp, #8]
   31fe8:	mul	r0, r0, r1
   31fec:	str	r0, [fp, #-28]	; 0xffffffe4
   31ff0:	b	32850 <__assert_fail@plt+0x210fc>
   31ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ff8:	ldr	r1, [fp, #8]
   31ffc:	mul	r0, r0, r1
   32000:	str	r0, [fp, #-28]	; 0xffffffe4
   32004:	b	3285c <__assert_fail@plt+0x21108>
   32008:	b	3200c <__assert_fail@plt+0x208b8>
   3200c:	b	32010 <__assert_fail@plt+0x208bc>
   32010:	ldr	r0, [fp, #8]
   32014:	cmp	r0, #0
   32018:	bge	3211c <__assert_fail@plt+0x209c8>
   3201c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32020:	cmp	r0, #0
   32024:	bge	320b0 <__assert_fail@plt+0x2095c>
   32028:	b	3202c <__assert_fail@plt+0x208d8>
   3202c:	ldr	r0, [pc, #1048]	; 3244c <__assert_fail@plt+0x20cf8>
   32030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32034:	ldr	r2, [fp, #8]
   32038:	sdiv	r0, r0, r2
   3203c:	cmp	r1, r0
   32040:	blt	321ac <__assert_fail@plt+0x20a58>
   32044:	b	321c0 <__assert_fail@plt+0x20a6c>
   32048:	b	3204c <__assert_fail@plt+0x208f8>
   3204c:	ldr	r0, [pc, #1180]	; 324f0 <__assert_fail@plt+0x20d9c>
   32050:	ldr	r1, [fp, #8]
   32054:	cmp	r1, r0
   32058:	blt	32070 <__assert_fail@plt+0x2091c>
   3205c:	b	3207c <__assert_fail@plt+0x20928>
   32060:	ldr	r0, [fp, #8]
   32064:	movw	r1, #0
   32068:	cmp	r1, r0
   3206c:	bge	3207c <__assert_fail@plt+0x20928>
   32070:	movw	r0, #0
   32074:	str	r0, [fp, #-60]	; 0xffffffc4
   32078:	b	32094 <__assert_fail@plt+0x20940>
   3207c:	ldr	r0, [pc, #968]	; 3244c <__assert_fail@plt+0x20cf8>
   32080:	ldr	r1, [fp, #8]
   32084:	movw	r2, #0
   32088:	sub	r1, r2, r1
   3208c:	sdiv	r0, r0, r1
   32090:	str	r0, [fp, #-60]	; 0xffffffc4
   32094:	ldr	r0, [fp, #-60]	; 0xffffffc4
   32098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3209c:	mvn	r2, #0
   320a0:	sub	r1, r2, r1
   320a4:	cmp	r0, r1
   320a8:	ble	321ac <__assert_fail@plt+0x20a58>
   320ac:	b	321c0 <__assert_fail@plt+0x20a6c>
   320b0:	ldr	r0, [fp, #8]
   320b4:	cmn	r0, #1
   320b8:	bne	32100 <__assert_fail@plt+0x209ac>
   320bc:	b	320c0 <__assert_fail@plt+0x2096c>
   320c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   320c4:	add	r0, r0, #-2147483648	; 0x80000000
   320c8:	movw	r1, #0
   320cc:	cmp	r1, r0
   320d0:	blt	321ac <__assert_fail@plt+0x20a58>
   320d4:	b	321c0 <__assert_fail@plt+0x20a6c>
   320d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   320dc:	movw	r1, #0
   320e0:	cmp	r1, r0
   320e4:	bge	321c0 <__assert_fail@plt+0x20a6c>
   320e8:	ldr	r0, [pc, #860]	; 3244c <__assert_fail@plt+0x20cf8>
   320ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   320f0:	sub	r1, r1, #1
   320f4:	cmp	r0, r1
   320f8:	blt	321ac <__assert_fail@plt+0x20a58>
   320fc:	b	321c0 <__assert_fail@plt+0x20a6c>
   32100:	ldr	r0, [pc, #3144]	; 32d50 <__assert_fail@plt+0x215fc>
   32104:	ldr	r1, [fp, #8]
   32108:	sdiv	r0, r0, r1
   3210c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32110:	cmp	r0, r1
   32114:	blt	321ac <__assert_fail@plt+0x20a58>
   32118:	b	321c0 <__assert_fail@plt+0x20a6c>
   3211c:	ldr	r0, [fp, #8]
   32120:	cmp	r0, #0
   32124:	bne	3212c <__assert_fail@plt+0x209d8>
   32128:	b	321c0 <__assert_fail@plt+0x20a6c>
   3212c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32130:	cmp	r0, #0
   32134:	bge	32194 <__assert_fail@plt+0x20a40>
   32138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3213c:	cmn	r0, #1
   32140:	bne	32178 <__assert_fail@plt+0x20a24>
   32144:	b	32148 <__assert_fail@plt+0x209f4>
   32148:	ldr	r0, [fp, #8]
   3214c:	add	r0, r0, #-2147483648	; 0x80000000
   32150:	movw	r1, #0
   32154:	cmp	r1, r0
   32158:	blt	321ac <__assert_fail@plt+0x20a58>
   3215c:	b	321c0 <__assert_fail@plt+0x20a6c>
   32160:	ldr	r0, [pc, #740]	; 3244c <__assert_fail@plt+0x20cf8>
   32164:	ldr	r1, [fp, #8]
   32168:	sub	r1, r1, #1
   3216c:	cmp	r0, r1
   32170:	blt	321ac <__assert_fail@plt+0x20a58>
   32174:	b	321c0 <__assert_fail@plt+0x20a6c>
   32178:	ldr	r0, [pc, #3024]	; 32d50 <__assert_fail@plt+0x215fc>
   3217c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32180:	sdiv	r0, r0, r1
   32184:	ldr	r1, [fp, #8]
   32188:	cmp	r0, r1
   3218c:	blt	321ac <__assert_fail@plt+0x20a58>
   32190:	b	321c0 <__assert_fail@plt+0x20a6c>
   32194:	ldr	r0, [pc, #688]	; 3244c <__assert_fail@plt+0x20cf8>
   32198:	ldr	r1, [fp, #8]
   3219c:	sdiv	r0, r0, r1
   321a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   321a4:	cmp	r0, r1
   321a8:	bge	321c0 <__assert_fail@plt+0x20a6c>
   321ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   321b0:	ldr	r1, [fp, #8]
   321b4:	mul	r0, r0, r1
   321b8:	str	r0, [fp, #-28]	; 0xffffffe4
   321bc:	b	32850 <__assert_fail@plt+0x210fc>
   321c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   321c4:	ldr	r1, [fp, #8]
   321c8:	mul	r0, r0, r1
   321cc:	str	r0, [fp, #-28]	; 0xffffffe4
   321d0:	b	3285c <__assert_fail@plt+0x21108>
   321d4:	ldr	r0, [fp, #8]
   321d8:	cmp	r0, #0
   321dc:	bge	322ec <__assert_fail@plt+0x20b98>
   321e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   321e4:	cmp	r0, #0
   321e8:	bge	32274 <__assert_fail@plt+0x20b20>
   321ec:	b	3220c <__assert_fail@plt+0x20ab8>
   321f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   321f4:	ldr	r1, [fp, #8]
   321f8:	mvn	r2, #0
   321fc:	udiv	r1, r2, r1
   32200:	cmp	r0, r1
   32204:	bcc	32388 <__assert_fail@plt+0x20c34>
   32208:	b	3239c <__assert_fail@plt+0x20c48>
   3220c:	b	32210 <__assert_fail@plt+0x20abc>
   32210:	ldr	r0, [pc, #728]	; 324f0 <__assert_fail@plt+0x20d9c>
   32214:	ldr	r1, [fp, #8]
   32218:	cmp	r1, r0
   3221c:	blt	32234 <__assert_fail@plt+0x20ae0>
   32220:	b	32240 <__assert_fail@plt+0x20aec>
   32224:	ldr	r0, [fp, #8]
   32228:	movw	r1, #0
   3222c:	cmp	r1, r0
   32230:	bge	32240 <__assert_fail@plt+0x20aec>
   32234:	movw	r0, #1
   32238:	str	r0, [fp, #-64]	; 0xffffffc0
   3223c:	b	32258 <__assert_fail@plt+0x20b04>
   32240:	ldr	r0, [fp, #8]
   32244:	movw	r1, #0
   32248:	sub	r0, r1, r0
   3224c:	mvn	r1, #0
   32250:	udiv	r0, r1, r0
   32254:	str	r0, [fp, #-64]	; 0xffffffc0
   32258:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3225c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32260:	mvn	r2, #0
   32264:	sub	r1, r2, r1
   32268:	cmp	r0, r1
   3226c:	bls	32388 <__assert_fail@plt+0x20c34>
   32270:	b	3239c <__assert_fail@plt+0x20c48>
   32274:	b	32278 <__assert_fail@plt+0x20b24>
   32278:	b	322d0 <__assert_fail@plt+0x20b7c>
   3227c:	b	322d0 <__assert_fail@plt+0x20b7c>
   32280:	ldr	r0, [fp, #8]
   32284:	cmn	r0, #1
   32288:	bne	322d0 <__assert_fail@plt+0x20b7c>
   3228c:	b	32290 <__assert_fail@plt+0x20b3c>
   32290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32294:	add	r0, r0, #0
   32298:	movw	r1, #0
   3229c:	cmp	r1, r0
   322a0:	blt	32388 <__assert_fail@plt+0x20c34>
   322a4:	b	3239c <__assert_fail@plt+0x20c48>
   322a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   322ac:	movw	r1, #0
   322b0:	cmp	r1, r0
   322b4:	bge	3239c <__assert_fail@plt+0x20c48>
   322b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   322bc:	sub	r0, r0, #1
   322c0:	mvn	r1, #0
   322c4:	cmp	r1, r0
   322c8:	blt	32388 <__assert_fail@plt+0x20c34>
   322cc:	b	3239c <__assert_fail@plt+0x20c48>
   322d0:	ldr	r0, [fp, #8]
   322d4:	movw	r1, #0
   322d8:	sdiv	r0, r1, r0
   322dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   322e0:	cmp	r0, r1
   322e4:	blt	32388 <__assert_fail@plt+0x20c34>
   322e8:	b	3239c <__assert_fail@plt+0x20c48>
   322ec:	ldr	r0, [fp, #8]
   322f0:	cmp	r0, #0
   322f4:	bne	322fc <__assert_fail@plt+0x20ba8>
   322f8:	b	3239c <__assert_fail@plt+0x20c48>
   322fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32300:	cmp	r0, #0
   32304:	bge	32370 <__assert_fail@plt+0x20c1c>
   32308:	b	3230c <__assert_fail@plt+0x20bb8>
   3230c:	b	32354 <__assert_fail@plt+0x20c00>
   32310:	b	32354 <__assert_fail@plt+0x20c00>
   32314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32318:	cmn	r0, #1
   3231c:	bne	32354 <__assert_fail@plt+0x20c00>
   32320:	b	32324 <__assert_fail@plt+0x20bd0>
   32324:	ldr	r0, [fp, #8]
   32328:	add	r0, r0, #0
   3232c:	movw	r1, #0
   32330:	cmp	r1, r0
   32334:	blt	32388 <__assert_fail@plt+0x20c34>
   32338:	b	3239c <__assert_fail@plt+0x20c48>
   3233c:	ldr	r0, [fp, #8]
   32340:	sub	r0, r0, #1
   32344:	mvn	r1, #0
   32348:	cmp	r1, r0
   3234c:	blt	32388 <__assert_fail@plt+0x20c34>
   32350:	b	3239c <__assert_fail@plt+0x20c48>
   32354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32358:	movw	r1, #0
   3235c:	sdiv	r0, r1, r0
   32360:	ldr	r1, [fp, #8]
   32364:	cmp	r0, r1
   32368:	blt	32388 <__assert_fail@plt+0x20c34>
   3236c:	b	3239c <__assert_fail@plt+0x20c48>
   32370:	ldr	r0, [fp, #8]
   32374:	mvn	r1, #0
   32378:	udiv	r0, r1, r0
   3237c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32380:	cmp	r0, r1
   32384:	bcs	3239c <__assert_fail@plt+0x20c48>
   32388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3238c:	ldr	r1, [fp, #8]
   32390:	mul	r0, r0, r1
   32394:	str	r0, [fp, #-28]	; 0xffffffe4
   32398:	b	32850 <__assert_fail@plt+0x210fc>
   3239c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   323a0:	ldr	r1, [fp, #8]
   323a4:	mul	r0, r0, r1
   323a8:	str	r0, [fp, #-28]	; 0xffffffe4
   323ac:	b	3285c <__assert_fail@plt+0x21108>
   323b0:	b	323b4 <__assert_fail@plt+0x20c60>
   323b4:	ldr	r0, [fp, #8]
   323b8:	cmp	r0, #0
   323bc:	bge	3252c <__assert_fail@plt+0x20dd8>
   323c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   323c4:	cmp	r0, #0
   323c8:	bge	324a4 <__assert_fail@plt+0x20d50>
   323cc:	b	323d0 <__assert_fail@plt+0x20c7c>
   323d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   323d4:	ldr	r1, [fp, #8]
   323d8:	asr	r3, r1, #31
   323dc:	mvn	r2, #0
   323e0:	mvn	ip, #-2147483648	; 0x80000000
   323e4:	str	r0, [fp, #-68]	; 0xffffffbc
   323e8:	mov	r0, r2
   323ec:	str	r1, [fp, #-72]	; 0xffffffb8
   323f0:	mov	r1, ip
   323f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   323f8:	bl	3ba78 <__assert_fail@plt+0x2a324>
   323fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   32400:	subs	r0, r2, r0
   32404:	rscs	r1, r1, r2, asr #31
   32408:	blt	325f4 <__assert_fail@plt+0x20ea0>
   3240c:	b	32608 <__assert_fail@plt+0x20eb4>
   32410:	b	32414 <__assert_fail@plt+0x20cc0>
   32414:	ldr	r0, [pc, #212]	; 324f0 <__assert_fail@plt+0x20d9c>
   32418:	ldr	r1, [fp, #8]
   3241c:	cmp	r1, r0
   32420:	blt	32438 <__assert_fail@plt+0x20ce4>
   32424:	b	32450 <__assert_fail@plt+0x20cfc>
   32428:	ldr	r0, [fp, #8]
   3242c:	movw	r1, #0
   32430:	cmp	r1, r0
   32434:	bge	32450 <__assert_fail@plt+0x20cfc>
   32438:	mov	r0, #0
   3243c:	mvn	r1, #0
   32440:	str	r1, [fp, #-76]	; 0xffffffb4
   32444:	str	r0, [fp, #-80]	; 0xffffffb0
   32448:	b	32484 <__assert_fail@plt+0x20d30>
   3244c:	svcvc	0x00ffffff
   32450:	ldr	r0, [fp, #8]
   32454:	rsb	r0, r0, #0
   32458:	asr	r3, r0, #31
   3245c:	mvn	r1, #0
   32460:	mvn	r2, #-2147483648	; 0x80000000
   32464:	str	r0, [fp, #-84]	; 0xffffffac
   32468:	mov	r0, r1
   3246c:	mov	r1, r2
   32470:	ldr	r2, [fp, #-84]	; 0xffffffac
   32474:	bl	3ba78 <__assert_fail@plt+0x2a324>
   32478:	str	r0, [fp, #-76]	; 0xffffffb4
   3247c:	str	r1, [fp, #-80]	; 0xffffffb0
   32480:	b	32484 <__assert_fail@plt+0x20d30>
   32484:	ldr	r0, [fp, #-80]	; 0xffffffb0
   32488:	ldr	r1, [fp, #-76]	; 0xffffffb4
   3248c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32490:	mvn	r2, r2
   32494:	subs	r1, r2, r1
   32498:	rscs	r0, r0, r2, asr #31
   3249c:	bge	325f4 <__assert_fail@plt+0x20ea0>
   324a0:	b	32608 <__assert_fail@plt+0x20eb4>
   324a4:	ldr	r0, [fp, #8]
   324a8:	cmn	r0, #1
   324ac:	bne	324f4 <__assert_fail@plt+0x20da0>
   324b0:	b	324b4 <__assert_fail@plt+0x20d60>
   324b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   324b8:	mov	r1, #-2147483648	; 0x80000000
   324bc:	add	r1, r1, r0, asr #31
   324c0:	rsbs	r0, r0, #0
   324c4:	rscs	r1, r1, #0
   324c8:	blt	325f4 <__assert_fail@plt+0x20ea0>
   324cc:	b	32608 <__assert_fail@plt+0x20eb4>
   324d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   324d4:	movw	r1, #0
   324d8:	cmp	r1, r0
   324dc:	bge	32608 <__assert_fail@plt+0x20eb4>
   324e0:	mov	r0, #0
   324e4:	cmp	r0, #0
   324e8:	bne	325f4 <__assert_fail@plt+0x20ea0>
   324ec:	b	32608 <__assert_fail@plt+0x20eb4>
   324f0:	andhi	r0, r0, r1
   324f4:	ldr	r0, [fp, #8]
   324f8:	asr	r3, r0, #31
   324fc:	mov	r1, #0
   32500:	mov	r2, #-2147483648	; 0x80000000
   32504:	str	r0, [fp, #-88]	; 0xffffffa8
   32508:	mov	r0, r1
   3250c:	mov	r1, r2
   32510:	ldr	r2, [fp, #-88]	; 0xffffffa8
   32514:	bl	3ba78 <__assert_fail@plt+0x2a324>
   32518:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3251c:	subs	r0, r0, r2
   32520:	sbcs	r1, r1, r2, asr #31
   32524:	blt	325f4 <__assert_fail@plt+0x20ea0>
   32528:	b	32608 <__assert_fail@plt+0x20eb4>
   3252c:	ldr	r0, [fp, #8]
   32530:	cmp	r0, #0
   32534:	bne	3253c <__assert_fail@plt+0x20de8>
   32538:	b	32608 <__assert_fail@plt+0x20eb4>
   3253c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32540:	cmp	r0, #0
   32544:	bge	325bc <__assert_fail@plt+0x20e68>
   32548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3254c:	cmn	r0, #1
   32550:	bne	32584 <__assert_fail@plt+0x20e30>
   32554:	b	32558 <__assert_fail@plt+0x20e04>
   32558:	ldr	r0, [fp, #8]
   3255c:	mov	r1, #-2147483648	; 0x80000000
   32560:	add	r1, r1, r0, asr #31
   32564:	rsbs	r0, r0, #0
   32568:	rscs	r1, r1, #0
   3256c:	blt	325f4 <__assert_fail@plt+0x20ea0>
   32570:	b	32608 <__assert_fail@plt+0x20eb4>
   32574:	mov	r0, #0
   32578:	cmp	r0, #0
   3257c:	bne	325f4 <__assert_fail@plt+0x20ea0>
   32580:	b	32608 <__assert_fail@plt+0x20eb4>
   32584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32588:	asr	r3, r0, #31
   3258c:	mov	r1, #0
   32590:	mov	r2, #-2147483648	; 0x80000000
   32594:	str	r0, [fp, #-92]	; 0xffffffa4
   32598:	mov	r0, r1
   3259c:	mov	r1, r2
   325a0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   325a4:	bl	3ba78 <__assert_fail@plt+0x2a324>
   325a8:	ldr	r2, [fp, #8]
   325ac:	subs	r0, r0, r2
   325b0:	sbcs	r1, r1, r2, asr #31
   325b4:	blt	325f4 <__assert_fail@plt+0x20ea0>
   325b8:	b	32608 <__assert_fail@plt+0x20eb4>
   325bc:	ldr	r0, [fp, #8]
   325c0:	asr	r3, r0, #31
   325c4:	mvn	r1, #0
   325c8:	mvn	r2, #-2147483648	; 0x80000000
   325cc:	str	r0, [fp, #-96]	; 0xffffffa0
   325d0:	mov	r0, r1
   325d4:	mov	r1, r2
   325d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   325dc:	bl	3ba78 <__assert_fail@plt+0x2a324>
   325e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   325e4:	subs	r0, r0, r2
   325e8:	sbcs	r1, r1, r2, asr #31
   325ec:	bge	32608 <__assert_fail@plt+0x20eb4>
   325f0:	b	325f4 <__assert_fail@plt+0x20ea0>
   325f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   325f8:	ldr	r1, [fp, #8]
   325fc:	mul	r0, r0, r1
   32600:	str	r0, [fp, #-28]	; 0xffffffe4
   32604:	b	32850 <__assert_fail@plt+0x210fc>
   32608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3260c:	ldr	r1, [fp, #8]
   32610:	mul	r0, r0, r1
   32614:	str	r0, [fp, #-28]	; 0xffffffe4
   32618:	b	3285c <__assert_fail@plt+0x21108>
   3261c:	ldr	r0, [fp, #8]
   32620:	cmp	r0, #0
   32624:	bge	32774 <__assert_fail@plt+0x21020>
   32628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3262c:	cmp	r0, #0
   32630:	bge	326fc <__assert_fail@plt+0x20fa8>
   32634:	b	32674 <__assert_fail@plt+0x20f20>
   32638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3263c:	ldr	r1, [fp, #8]
   32640:	asr	r3, r1, #31
   32644:	mvn	r2, #0
   32648:	str	r0, [fp, #-100]	; 0xffffff9c
   3264c:	mov	r0, r2
   32650:	str	r1, [fp, #-104]	; 0xffffff98
   32654:	mov	r1, r2
   32658:	ldr	r2, [fp, #-104]	; 0xffffff98
   3265c:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   32660:	ldr	r2, [fp, #-100]	; 0xffffff9c
   32664:	subs	r0, r2, r0
   32668:	rscs	r1, r1, r2, asr #31
   3266c:	bcc	32828 <__assert_fail@plt+0x210d4>
   32670:	b	3283c <__assert_fail@plt+0x210e8>
   32674:	b	32678 <__assert_fail@plt+0x20f24>
   32678:	ldr	r0, [pc, #-400]	; 324f0 <__assert_fail@plt+0x20d9c>
   3267c:	ldr	r1, [fp, #8]
   32680:	cmp	r1, r0
   32684:	blt	3269c <__assert_fail@plt+0x20f48>
   32688:	b	326b0 <__assert_fail@plt+0x20f5c>
   3268c:	ldr	r0, [fp, #8]
   32690:	movw	r1, #0
   32694:	cmp	r1, r0
   32698:	bge	326b0 <__assert_fail@plt+0x20f5c>
   3269c:	mov	r0, #1
   326a0:	mvn	r1, #0
   326a4:	str	r1, [sp, #108]	; 0x6c
   326a8:	str	r0, [sp, #104]	; 0x68
   326ac:	b	326dc <__assert_fail@plt+0x20f88>
   326b0:	ldr	r0, [fp, #8]
   326b4:	rsb	r0, r0, #0
   326b8:	asr	r3, r0, #31
   326bc:	mvn	r1, #0
   326c0:	str	r0, [sp, #100]	; 0x64
   326c4:	mov	r0, r1
   326c8:	ldr	r2, [sp, #100]	; 0x64
   326cc:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   326d0:	str	r0, [sp, #108]	; 0x6c
   326d4:	str	r1, [sp, #104]	; 0x68
   326d8:	b	326dc <__assert_fail@plt+0x20f88>
   326dc:	ldr	r0, [sp, #104]	; 0x68
   326e0:	ldr	r1, [sp, #108]	; 0x6c
   326e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   326e8:	mvn	r2, r2
   326ec:	subs	r1, r2, r1
   326f0:	rscs	r0, r0, r2, asr #31
   326f4:	bcs	32828 <__assert_fail@plt+0x210d4>
   326f8:	b	3283c <__assert_fail@plt+0x210e8>
   326fc:	b	32700 <__assert_fail@plt+0x20fac>
   32700:	b	32758 <__assert_fail@plt+0x21004>
   32704:	b	32758 <__assert_fail@plt+0x21004>
   32708:	ldr	r0, [fp, #8]
   3270c:	cmn	r0, #1
   32710:	bne	32758 <__assert_fail@plt+0x21004>
   32714:	b	32718 <__assert_fail@plt+0x20fc4>
   32718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3271c:	add	r0, r0, #0
   32720:	movw	r1, #0
   32724:	cmp	r1, r0
   32728:	blt	32828 <__assert_fail@plt+0x210d4>
   3272c:	b	3283c <__assert_fail@plt+0x210e8>
   32730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32734:	movw	r1, #0
   32738:	cmp	r1, r0
   3273c:	bge	3283c <__assert_fail@plt+0x210e8>
   32740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32744:	sub	r0, r0, #1
   32748:	mvn	r1, #0
   3274c:	cmp	r1, r0
   32750:	blt	32828 <__assert_fail@plt+0x210d4>
   32754:	b	3283c <__assert_fail@plt+0x210e8>
   32758:	ldr	r0, [fp, #8]
   3275c:	movw	r1, #0
   32760:	sdiv	r0, r1, r0
   32764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32768:	cmp	r0, r1
   3276c:	blt	32828 <__assert_fail@plt+0x210d4>
   32770:	b	3283c <__assert_fail@plt+0x210e8>
   32774:	ldr	r0, [fp, #8]
   32778:	cmp	r0, #0
   3277c:	bne	32784 <__assert_fail@plt+0x21030>
   32780:	b	3283c <__assert_fail@plt+0x210e8>
   32784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32788:	cmp	r0, #0
   3278c:	bge	327f8 <__assert_fail@plt+0x210a4>
   32790:	b	32794 <__assert_fail@plt+0x21040>
   32794:	b	327dc <__assert_fail@plt+0x21088>
   32798:	b	327dc <__assert_fail@plt+0x21088>
   3279c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   327a0:	cmn	r0, #1
   327a4:	bne	327dc <__assert_fail@plt+0x21088>
   327a8:	b	327ac <__assert_fail@plt+0x21058>
   327ac:	ldr	r0, [fp, #8]
   327b0:	add	r0, r0, #0
   327b4:	movw	r1, #0
   327b8:	cmp	r1, r0
   327bc:	blt	32828 <__assert_fail@plt+0x210d4>
   327c0:	b	3283c <__assert_fail@plt+0x210e8>
   327c4:	ldr	r0, [fp, #8]
   327c8:	sub	r0, r0, #1
   327cc:	mvn	r1, #0
   327d0:	cmp	r1, r0
   327d4:	blt	32828 <__assert_fail@plt+0x210d4>
   327d8:	b	3283c <__assert_fail@plt+0x210e8>
   327dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   327e0:	movw	r1, #0
   327e4:	sdiv	r0, r1, r0
   327e8:	ldr	r1, [fp, #8]
   327ec:	cmp	r0, r1
   327f0:	blt	32828 <__assert_fail@plt+0x210d4>
   327f4:	b	3283c <__assert_fail@plt+0x210e8>
   327f8:	ldr	r0, [fp, #8]
   327fc:	asr	r3, r0, #31
   32800:	mvn	r1, #0
   32804:	str	r0, [sp, #96]	; 0x60
   32808:	mov	r0, r1
   3280c:	ldr	r2, [sp, #96]	; 0x60
   32810:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   32814:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32818:	subs	r0, r0, r2
   3281c:	sbcs	r1, r1, r2, asr #31
   32820:	bcs	3283c <__assert_fail@plt+0x210e8>
   32824:	b	32828 <__assert_fail@plt+0x210d4>
   32828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3282c:	ldr	r1, [fp, #8]
   32830:	mul	r0, r0, r1
   32834:	str	r0, [fp, #-28]	; 0xffffffe4
   32838:	b	32850 <__assert_fail@plt+0x210fc>
   3283c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32840:	ldr	r1, [fp, #8]
   32844:	mul	r0, r0, r1
   32848:	str	r0, [fp, #-28]	; 0xffffffe4
   3284c:	b	3285c <__assert_fail@plt+0x21108>
   32850:	ldr	r0, [pc, #-1036]	; 3244c <__assert_fail@plt+0x20cf8>
   32854:	str	r0, [sp, #92]	; 0x5c
   32858:	b	3287c <__assert_fail@plt+0x21128>
   3285c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32860:	cmp	r0, #64	; 0x40
   32864:	movw	r0, #0
   32868:	movlt	r0, #1
   3286c:	tst	r0, #1
   32870:	movw	r0, #64	; 0x40
   32874:	moveq	r0, #0
   32878:	str	r0, [sp, #92]	; 0x5c
   3287c:	ldr	r0, [sp, #92]	; 0x5c
   32880:	str	r0, [fp, #-32]	; 0xffffffe0
   32884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32888:	cmp	r0, #0
   3288c:	beq	328bc <__assert_fail@plt+0x21168>
   32890:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32894:	ldr	r1, [fp, #8]
   32898:	sdiv	r0, r0, r1
   3289c:	str	r0, [fp, #-24]	; 0xffffffe8
   328a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   328a4:	mov	r1, r0
   328a8:	ldr	r2, [fp, #8]
   328ac:	sdiv	r3, r0, r2
   328b0:	mls	r0, r3, r2, r0
   328b4:	sub	r0, r1, r0
   328b8:	str	r0, [fp, #-28]	; 0xffffffe4
   328bc:	ldr	r0, [fp, #-4]
   328c0:	movw	r1, #0
   328c4:	cmp	r0, r1
   328c8:	bne	328d8 <__assert_fail@plt+0x21184>
   328cc:	ldr	r0, [fp, #-8]
   328d0:	movw	r1, #0
   328d4:	str	r1, [r0]
   328d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   328dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   328e0:	sub	r0, r0, r1
   328e4:	ldr	r1, [fp, #-12]
   328e8:	cmp	r0, r1
   328ec:	bge	33cd8 <__assert_fail@plt+0x22584>
   328f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   328f4:	ldr	r1, [fp, #-12]
   328f8:	add	r1, r0, r1
   328fc:	mov	r2, #1
   32900:	cmp	r1, r0
   32904:	movwvc	r2, #0
   32908:	str	r1, [fp, #-24]	; 0xffffffe8
   3290c:	tst	r2, #1
   32910:	bne	33cd4 <__assert_fail@plt+0x22580>
   32914:	ldr	r0, [fp, #-16]
   32918:	movw	r1, #0
   3291c:	cmp	r1, r0
   32920:	bgt	32934 <__assert_fail@plt+0x211e0>
   32924:	ldr	r0, [fp, #-16]
   32928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3292c:	cmp	r0, r1
   32930:	blt	33cd4 <__assert_fail@plt+0x22580>
   32934:	b	32d10 <__assert_fail@plt+0x215bc>
   32938:			; <UNDEFINED> instruction: 0xffff8000
   3293c:	b	32940 <__assert_fail@plt+0x211ec>
   32940:	ldr	r0, [fp, #8]
   32944:	cmp	r0, #0
   32948:	bge	32a5c <__assert_fail@plt+0x21308>
   3294c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32950:	cmp	r0, #0
   32954:	bge	329e0 <__assert_fail@plt+0x2128c>
   32958:	b	3295c <__assert_fail@plt+0x21208>
   3295c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32960:	ldr	r1, [fp, #8]
   32964:	movw	r2, #127	; 0x7f
   32968:	sdiv	r1, r2, r1
   3296c:	cmp	r0, r1
   32970:	blt	32afc <__assert_fail@plt+0x213a8>
   32974:	b	32b14 <__assert_fail@plt+0x213c0>
   32978:	b	3297c <__assert_fail@plt+0x21228>
   3297c:	ldr	r0, [pc, #-1172]	; 324f0 <__assert_fail@plt+0x20d9c>
   32980:	ldr	r1, [fp, #8]
   32984:	cmp	r1, r0
   32988:	blt	329a0 <__assert_fail@plt+0x2124c>
   3298c:	b	329ac <__assert_fail@plt+0x21258>
   32990:	ldr	r0, [fp, #8]
   32994:	movw	r1, #0
   32998:	cmp	r1, r0
   3299c:	bge	329ac <__assert_fail@plt+0x21258>
   329a0:	movw	r0, #0
   329a4:	str	r0, [sp, #88]	; 0x58
   329a8:	b	329c4 <__assert_fail@plt+0x21270>
   329ac:	ldr	r0, [fp, #8]
   329b0:	movw	r1, #0
   329b4:	sub	r0, r1, r0
   329b8:	movw	r1, #127	; 0x7f
   329bc:	sdiv	r0, r1, r0
   329c0:	str	r0, [sp, #88]	; 0x58
   329c4:	ldr	r0, [sp, #88]	; 0x58
   329c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   329cc:	mvn	r2, #0
   329d0:	sub	r1, r2, r1
   329d4:	cmp	r0, r1
   329d8:	ble	32afc <__assert_fail@plt+0x213a8>
   329dc:	b	32b14 <__assert_fail@plt+0x213c0>
   329e0:	b	329e4 <__assert_fail@plt+0x21290>
   329e4:	b	32a40 <__assert_fail@plt+0x212ec>
   329e8:	b	32a40 <__assert_fail@plt+0x212ec>
   329ec:	ldr	r0, [fp, #8]
   329f0:	cmn	r0, #1
   329f4:	bne	32a40 <__assert_fail@plt+0x212ec>
   329f8:	b	329fc <__assert_fail@plt+0x212a8>
   329fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a00:	mvn	r1, #127	; 0x7f
   32a04:	add	r0, r0, r1
   32a08:	movw	r1, #0
   32a0c:	cmp	r1, r0
   32a10:	blt	32afc <__assert_fail@plt+0x213a8>
   32a14:	b	32b14 <__assert_fail@plt+0x213c0>
   32a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a1c:	movw	r1, #0
   32a20:	cmp	r1, r0
   32a24:	bge	32b14 <__assert_fail@plt+0x213c0>
   32a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a2c:	sub	r0, r0, #1
   32a30:	movw	r1, #127	; 0x7f
   32a34:	cmp	r1, r0
   32a38:	blt	32afc <__assert_fail@plt+0x213a8>
   32a3c:	b	32b14 <__assert_fail@plt+0x213c0>
   32a40:	ldr	r0, [fp, #8]
   32a44:	mvn	r1, #127	; 0x7f
   32a48:	sdiv	r0, r1, r0
   32a4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32a50:	cmp	r0, r1
   32a54:	blt	32afc <__assert_fail@plt+0x213a8>
   32a58:	b	32b14 <__assert_fail@plt+0x213c0>
   32a5c:	ldr	r0, [fp, #8]
   32a60:	cmp	r0, #0
   32a64:	bne	32a6c <__assert_fail@plt+0x21318>
   32a68:	b	32b14 <__assert_fail@plt+0x213c0>
   32a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a70:	cmp	r0, #0
   32a74:	bge	32ae4 <__assert_fail@plt+0x21390>
   32a78:	b	32a7c <__assert_fail@plt+0x21328>
   32a7c:	b	32ac8 <__assert_fail@plt+0x21374>
   32a80:	b	32ac8 <__assert_fail@plt+0x21374>
   32a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32a88:	cmn	r0, #1
   32a8c:	bne	32ac8 <__assert_fail@plt+0x21374>
   32a90:	b	32a94 <__assert_fail@plt+0x21340>
   32a94:	ldr	r0, [fp, #8]
   32a98:	mvn	r1, #127	; 0x7f
   32a9c:	add	r0, r0, r1
   32aa0:	movw	r1, #0
   32aa4:	cmp	r1, r0
   32aa8:	blt	32afc <__assert_fail@plt+0x213a8>
   32aac:	b	32b14 <__assert_fail@plt+0x213c0>
   32ab0:	ldr	r0, [fp, #8]
   32ab4:	sub	r0, r0, #1
   32ab8:	movw	r1, #127	; 0x7f
   32abc:	cmp	r1, r0
   32ac0:	blt	32afc <__assert_fail@plt+0x213a8>
   32ac4:	b	32b14 <__assert_fail@plt+0x213c0>
   32ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32acc:	mvn	r1, #127	; 0x7f
   32ad0:	sdiv	r0, r1, r0
   32ad4:	ldr	r1, [fp, #8]
   32ad8:	cmp	r0, r1
   32adc:	blt	32afc <__assert_fail@plt+0x213a8>
   32ae0:	b	32b14 <__assert_fail@plt+0x213c0>
   32ae4:	ldr	r0, [fp, #8]
   32ae8:	movw	r1, #127	; 0x7f
   32aec:	sdiv	r0, r1, r0
   32af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32af4:	cmp	r0, r1
   32af8:	bge	32b14 <__assert_fail@plt+0x213c0>
   32afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32b00:	ldr	r1, [fp, #8]
   32b04:	mul	r0, r0, r1
   32b08:	sxtb	r0, r0
   32b0c:	str	r0, [fp, #-28]	; 0xffffffe4
   32b10:	b	33cd4 <__assert_fail@plt+0x22580>
   32b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32b18:	ldr	r1, [fp, #8]
   32b1c:	mul	r0, r0, r1
   32b20:	sxtb	r0, r0
   32b24:	str	r0, [fp, #-28]	; 0xffffffe4
   32b28:	b	33cd8 <__assert_fail@plt+0x22584>
   32b2c:	ldr	r0, [fp, #8]
   32b30:	cmp	r0, #0
   32b34:	bge	32c44 <__assert_fail@plt+0x214f0>
   32b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32b3c:	cmp	r0, #0
   32b40:	bge	32bcc <__assert_fail@plt+0x21478>
   32b44:	b	32b48 <__assert_fail@plt+0x213f4>
   32b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32b4c:	ldr	r1, [fp, #8]
   32b50:	movw	r2, #255	; 0xff
   32b54:	sdiv	r1, r2, r1
   32b58:	cmp	r0, r1
   32b5c:	blt	32ce0 <__assert_fail@plt+0x2158c>
   32b60:	b	32cf8 <__assert_fail@plt+0x215a4>
   32b64:	b	32b68 <__assert_fail@plt+0x21414>
   32b68:	ldr	r0, [pc, #-1664]	; 324f0 <__assert_fail@plt+0x20d9c>
   32b6c:	ldr	r1, [fp, #8]
   32b70:	cmp	r1, r0
   32b74:	blt	32b8c <__assert_fail@plt+0x21438>
   32b78:	b	32b98 <__assert_fail@plt+0x21444>
   32b7c:	ldr	r0, [fp, #8]
   32b80:	movw	r1, #0
   32b84:	cmp	r1, r0
   32b88:	bge	32b98 <__assert_fail@plt+0x21444>
   32b8c:	movw	r0, #0
   32b90:	str	r0, [sp, #84]	; 0x54
   32b94:	b	32bb0 <__assert_fail@plt+0x2145c>
   32b98:	ldr	r0, [fp, #8]
   32b9c:	movw	r1, #0
   32ba0:	sub	r0, r1, r0
   32ba4:	movw	r1, #255	; 0xff
   32ba8:	sdiv	r0, r1, r0
   32bac:	str	r0, [sp, #84]	; 0x54
   32bb0:	ldr	r0, [sp, #84]	; 0x54
   32bb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32bb8:	mvn	r2, #0
   32bbc:	sub	r1, r2, r1
   32bc0:	cmp	r0, r1
   32bc4:	ble	32ce0 <__assert_fail@plt+0x2158c>
   32bc8:	b	32cf8 <__assert_fail@plt+0x215a4>
   32bcc:	b	32bd0 <__assert_fail@plt+0x2147c>
   32bd0:	b	32c28 <__assert_fail@plt+0x214d4>
   32bd4:	b	32c28 <__assert_fail@plt+0x214d4>
   32bd8:	ldr	r0, [fp, #8]
   32bdc:	cmn	r0, #1
   32be0:	bne	32c28 <__assert_fail@plt+0x214d4>
   32be4:	b	32be8 <__assert_fail@plt+0x21494>
   32be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32bec:	add	r0, r0, #0
   32bf0:	movw	r1, #0
   32bf4:	cmp	r1, r0
   32bf8:	blt	32ce0 <__assert_fail@plt+0x2158c>
   32bfc:	b	32cf8 <__assert_fail@plt+0x215a4>
   32c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32c04:	movw	r1, #0
   32c08:	cmp	r1, r0
   32c0c:	bge	32cf8 <__assert_fail@plt+0x215a4>
   32c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32c14:	sub	r0, r0, #1
   32c18:	mvn	r1, #0
   32c1c:	cmp	r1, r0
   32c20:	blt	32ce0 <__assert_fail@plt+0x2158c>
   32c24:	b	32cf8 <__assert_fail@plt+0x215a4>
   32c28:	ldr	r0, [fp, #8]
   32c2c:	movw	r1, #0
   32c30:	sdiv	r0, r1, r0
   32c34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32c38:	cmp	r0, r1
   32c3c:	blt	32ce0 <__assert_fail@plt+0x2158c>
   32c40:	b	32cf8 <__assert_fail@plt+0x215a4>
   32c44:	ldr	r0, [fp, #8]
   32c48:	cmp	r0, #0
   32c4c:	bne	32c54 <__assert_fail@plt+0x21500>
   32c50:	b	32cf8 <__assert_fail@plt+0x215a4>
   32c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32c58:	cmp	r0, #0
   32c5c:	bge	32cc8 <__assert_fail@plt+0x21574>
   32c60:	b	32c64 <__assert_fail@plt+0x21510>
   32c64:	b	32cac <__assert_fail@plt+0x21558>
   32c68:	b	32cac <__assert_fail@plt+0x21558>
   32c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32c70:	cmn	r0, #1
   32c74:	bne	32cac <__assert_fail@plt+0x21558>
   32c78:	b	32c7c <__assert_fail@plt+0x21528>
   32c7c:	ldr	r0, [fp, #8]
   32c80:	add	r0, r0, #0
   32c84:	movw	r1, #0
   32c88:	cmp	r1, r0
   32c8c:	blt	32ce0 <__assert_fail@plt+0x2158c>
   32c90:	b	32cf8 <__assert_fail@plt+0x215a4>
   32c94:	ldr	r0, [fp, #8]
   32c98:	sub	r0, r0, #1
   32c9c:	mvn	r1, #0
   32ca0:	cmp	r1, r0
   32ca4:	blt	32ce0 <__assert_fail@plt+0x2158c>
   32ca8:	b	32cf8 <__assert_fail@plt+0x215a4>
   32cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32cb0:	movw	r1, #0
   32cb4:	sdiv	r0, r1, r0
   32cb8:	ldr	r1, [fp, #8]
   32cbc:	cmp	r0, r1
   32cc0:	blt	32ce0 <__assert_fail@plt+0x2158c>
   32cc4:	b	32cf8 <__assert_fail@plt+0x215a4>
   32cc8:	ldr	r0, [fp, #8]
   32ccc:	movw	r1, #255	; 0xff
   32cd0:	sdiv	r0, r1, r0
   32cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32cd8:	cmp	r0, r1
   32cdc:	bge	32cf8 <__assert_fail@plt+0x215a4>
   32ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ce4:	ldr	r1, [fp, #8]
   32ce8:	mul	r0, r0, r1
   32cec:	and	r0, r0, #255	; 0xff
   32cf0:	str	r0, [fp, #-28]	; 0xffffffe4
   32cf4:	b	33cd4 <__assert_fail@plt+0x22580>
   32cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32cfc:	ldr	r1, [fp, #8]
   32d00:	mul	r0, r0, r1
   32d04:	and	r0, r0, #255	; 0xff
   32d08:	str	r0, [fp, #-28]	; 0xffffffe4
   32d0c:	b	33cd8 <__assert_fail@plt+0x22584>
   32d10:	b	330ec <__assert_fail@plt+0x21998>
   32d14:	b	32d18 <__assert_fail@plt+0x215c4>
   32d18:	ldr	r0, [fp, #8]
   32d1c:	cmp	r0, #0
   32d20:	bge	32e38 <__assert_fail@plt+0x216e4>
   32d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32d28:	cmp	r0, #0
   32d2c:	bge	32dbc <__assert_fail@plt+0x21668>
   32d30:	b	32d34 <__assert_fail@plt+0x215e0>
   32d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32d38:	ldr	r1, [fp, #8]
   32d3c:	movw	r2, #32767	; 0x7fff
   32d40:	sdiv	r1, r2, r1
   32d44:	cmp	r0, r1
   32d48:	blt	32ed8 <__assert_fail@plt+0x21784>
   32d4c:	b	32ef0 <__assert_fail@plt+0x2179c>
   32d50:	andhi	r0, r0, r0
   32d54:	b	32d58 <__assert_fail@plt+0x21604>
   32d58:	ldr	r0, [pc, #4004]	; 33d04 <__assert_fail@plt+0x225b0>
   32d5c:	ldr	r1, [fp, #8]
   32d60:	cmp	r1, r0
   32d64:	blt	32d7c <__assert_fail@plt+0x21628>
   32d68:	b	32d88 <__assert_fail@plt+0x21634>
   32d6c:	ldr	r0, [fp, #8]
   32d70:	movw	r1, #0
   32d74:	cmp	r1, r0
   32d78:	bge	32d88 <__assert_fail@plt+0x21634>
   32d7c:	movw	r0, #0
   32d80:	str	r0, [sp, #80]	; 0x50
   32d84:	b	32da0 <__assert_fail@plt+0x2164c>
   32d88:	ldr	r0, [fp, #8]
   32d8c:	movw	r1, #0
   32d90:	sub	r0, r1, r0
   32d94:	movw	r1, #32767	; 0x7fff
   32d98:	sdiv	r0, r1, r0
   32d9c:	str	r0, [sp, #80]	; 0x50
   32da0:	ldr	r0, [sp, #80]	; 0x50
   32da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32da8:	mvn	r2, #0
   32dac:	sub	r1, r2, r1
   32db0:	cmp	r0, r1
   32db4:	ble	32ed8 <__assert_fail@plt+0x21784>
   32db8:	b	32ef0 <__assert_fail@plt+0x2179c>
   32dbc:	b	32dc0 <__assert_fail@plt+0x2166c>
   32dc0:	b	32e1c <__assert_fail@plt+0x216c8>
   32dc4:	b	32e1c <__assert_fail@plt+0x216c8>
   32dc8:	ldr	r0, [fp, #8]
   32dcc:	cmn	r0, #1
   32dd0:	bne	32e1c <__assert_fail@plt+0x216c8>
   32dd4:	b	32dd8 <__assert_fail@plt+0x21684>
   32dd8:	ldr	r0, [pc, #3884]	; 33d0c <__assert_fail@plt+0x225b8>
   32ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32de0:	add	r0, r1, r0
   32de4:	movw	r1, #0
   32de8:	cmp	r1, r0
   32dec:	blt	32ed8 <__assert_fail@plt+0x21784>
   32df0:	b	32ef0 <__assert_fail@plt+0x2179c>
   32df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32df8:	movw	r1, #0
   32dfc:	cmp	r1, r0
   32e00:	bge	32ef0 <__assert_fail@plt+0x2179c>
   32e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32e08:	sub	r0, r0, #1
   32e0c:	movw	r1, #32767	; 0x7fff
   32e10:	cmp	r1, r0
   32e14:	blt	32ed8 <__assert_fail@plt+0x21784>
   32e18:	b	32ef0 <__assert_fail@plt+0x2179c>
   32e1c:	ldr	r0, [pc, #3816]	; 33d0c <__assert_fail@plt+0x225b8>
   32e20:	ldr	r1, [fp, #8]
   32e24:	sdiv	r0, r0, r1
   32e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32e2c:	cmp	r0, r1
   32e30:	blt	32ed8 <__assert_fail@plt+0x21784>
   32e34:	b	32ef0 <__assert_fail@plt+0x2179c>
   32e38:	ldr	r0, [fp, #8]
   32e3c:	cmp	r0, #0
   32e40:	bne	32e48 <__assert_fail@plt+0x216f4>
   32e44:	b	32ef0 <__assert_fail@plt+0x2179c>
   32e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32e4c:	cmp	r0, #0
   32e50:	bge	32ec0 <__assert_fail@plt+0x2176c>
   32e54:	b	32e58 <__assert_fail@plt+0x21704>
   32e58:	b	32ea4 <__assert_fail@plt+0x21750>
   32e5c:	b	32ea4 <__assert_fail@plt+0x21750>
   32e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32e64:	cmn	r0, #1
   32e68:	bne	32ea4 <__assert_fail@plt+0x21750>
   32e6c:	b	32e70 <__assert_fail@plt+0x2171c>
   32e70:	ldr	r0, [pc, #3732]	; 33d0c <__assert_fail@plt+0x225b8>
   32e74:	ldr	r1, [fp, #8]
   32e78:	add	r0, r1, r0
   32e7c:	movw	r1, #0
   32e80:	cmp	r1, r0
   32e84:	blt	32ed8 <__assert_fail@plt+0x21784>
   32e88:	b	32ef0 <__assert_fail@plt+0x2179c>
   32e8c:	ldr	r0, [fp, #8]
   32e90:	sub	r0, r0, #1
   32e94:	movw	r1, #32767	; 0x7fff
   32e98:	cmp	r1, r0
   32e9c:	blt	32ed8 <__assert_fail@plt+0x21784>
   32ea0:	b	32ef0 <__assert_fail@plt+0x2179c>
   32ea4:	ldr	r0, [pc, #3680]	; 33d0c <__assert_fail@plt+0x225b8>
   32ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32eac:	sdiv	r0, r0, r1
   32eb0:	ldr	r1, [fp, #8]
   32eb4:	cmp	r0, r1
   32eb8:	blt	32ed8 <__assert_fail@plt+0x21784>
   32ebc:	b	32ef0 <__assert_fail@plt+0x2179c>
   32ec0:	ldr	r0, [fp, #8]
   32ec4:	movw	r1, #32767	; 0x7fff
   32ec8:	sdiv	r0, r1, r0
   32ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32ed0:	cmp	r0, r1
   32ed4:	bge	32ef0 <__assert_fail@plt+0x2179c>
   32ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32edc:	ldr	r1, [fp, #8]
   32ee0:	mul	r0, r0, r1
   32ee4:	sxth	r0, r0
   32ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   32eec:	b	33cd4 <__assert_fail@plt+0x22580>
   32ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ef4:	ldr	r1, [fp, #8]
   32ef8:	mul	r0, r0, r1
   32efc:	sxth	r0, r0
   32f00:	str	r0, [fp, #-28]	; 0xffffffe4
   32f04:	b	33cd8 <__assert_fail@plt+0x22584>
   32f08:	ldr	r0, [fp, #8]
   32f0c:	cmp	r0, #0
   32f10:	bge	33020 <__assert_fail@plt+0x218cc>
   32f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32f18:	cmp	r0, #0
   32f1c:	bge	32fa8 <__assert_fail@plt+0x21854>
   32f20:	b	32f24 <__assert_fail@plt+0x217d0>
   32f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32f28:	ldr	r1, [fp, #8]
   32f2c:	movw	r2, #65535	; 0xffff
   32f30:	sdiv	r1, r2, r1
   32f34:	cmp	r0, r1
   32f38:	blt	330bc <__assert_fail@plt+0x21968>
   32f3c:	b	330d4 <__assert_fail@plt+0x21980>
   32f40:	b	32f44 <__assert_fail@plt+0x217f0>
   32f44:	ldr	r0, [pc, #3512]	; 33d04 <__assert_fail@plt+0x225b0>
   32f48:	ldr	r1, [fp, #8]
   32f4c:	cmp	r1, r0
   32f50:	blt	32f68 <__assert_fail@plt+0x21814>
   32f54:	b	32f74 <__assert_fail@plt+0x21820>
   32f58:	ldr	r0, [fp, #8]
   32f5c:	movw	r1, #0
   32f60:	cmp	r1, r0
   32f64:	bge	32f74 <__assert_fail@plt+0x21820>
   32f68:	movw	r0, #0
   32f6c:	str	r0, [sp, #76]	; 0x4c
   32f70:	b	32f8c <__assert_fail@plt+0x21838>
   32f74:	ldr	r0, [fp, #8]
   32f78:	movw	r1, #0
   32f7c:	sub	r0, r1, r0
   32f80:	movw	r1, #65535	; 0xffff
   32f84:	sdiv	r0, r1, r0
   32f88:	str	r0, [sp, #76]	; 0x4c
   32f8c:	ldr	r0, [sp, #76]	; 0x4c
   32f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32f94:	mvn	r2, #0
   32f98:	sub	r1, r2, r1
   32f9c:	cmp	r0, r1
   32fa0:	ble	330bc <__assert_fail@plt+0x21968>
   32fa4:	b	330d4 <__assert_fail@plt+0x21980>
   32fa8:	b	32fac <__assert_fail@plt+0x21858>
   32fac:	b	33004 <__assert_fail@plt+0x218b0>
   32fb0:	b	33004 <__assert_fail@plt+0x218b0>
   32fb4:	ldr	r0, [fp, #8]
   32fb8:	cmn	r0, #1
   32fbc:	bne	33004 <__assert_fail@plt+0x218b0>
   32fc0:	b	32fc4 <__assert_fail@plt+0x21870>
   32fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32fc8:	add	r0, r0, #0
   32fcc:	movw	r1, #0
   32fd0:	cmp	r1, r0
   32fd4:	blt	330bc <__assert_fail@plt+0x21968>
   32fd8:	b	330d4 <__assert_fail@plt+0x21980>
   32fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32fe0:	movw	r1, #0
   32fe4:	cmp	r1, r0
   32fe8:	bge	330d4 <__assert_fail@plt+0x21980>
   32fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32ff0:	sub	r0, r0, #1
   32ff4:	mvn	r1, #0
   32ff8:	cmp	r1, r0
   32ffc:	blt	330bc <__assert_fail@plt+0x21968>
   33000:	b	330d4 <__assert_fail@plt+0x21980>
   33004:	ldr	r0, [fp, #8]
   33008:	movw	r1, #0
   3300c:	sdiv	r0, r1, r0
   33010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33014:	cmp	r0, r1
   33018:	blt	330bc <__assert_fail@plt+0x21968>
   3301c:	b	330d4 <__assert_fail@plt+0x21980>
   33020:	ldr	r0, [fp, #8]
   33024:	cmp	r0, #0
   33028:	bne	33030 <__assert_fail@plt+0x218dc>
   3302c:	b	330d4 <__assert_fail@plt+0x21980>
   33030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33034:	cmp	r0, #0
   33038:	bge	330a4 <__assert_fail@plt+0x21950>
   3303c:	b	33040 <__assert_fail@plt+0x218ec>
   33040:	b	33088 <__assert_fail@plt+0x21934>
   33044:	b	33088 <__assert_fail@plt+0x21934>
   33048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3304c:	cmn	r0, #1
   33050:	bne	33088 <__assert_fail@plt+0x21934>
   33054:	b	33058 <__assert_fail@plt+0x21904>
   33058:	ldr	r0, [fp, #8]
   3305c:	add	r0, r0, #0
   33060:	movw	r1, #0
   33064:	cmp	r1, r0
   33068:	blt	330bc <__assert_fail@plt+0x21968>
   3306c:	b	330d4 <__assert_fail@plt+0x21980>
   33070:	ldr	r0, [fp, #8]
   33074:	sub	r0, r0, #1
   33078:	mvn	r1, #0
   3307c:	cmp	r1, r0
   33080:	blt	330bc <__assert_fail@plt+0x21968>
   33084:	b	330d4 <__assert_fail@plt+0x21980>
   33088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3308c:	movw	r1, #0
   33090:	sdiv	r0, r1, r0
   33094:	ldr	r1, [fp, #8]
   33098:	cmp	r0, r1
   3309c:	blt	330bc <__assert_fail@plt+0x21968>
   330a0:	b	330d4 <__assert_fail@plt+0x21980>
   330a4:	ldr	r0, [fp, #8]
   330a8:	movw	r1, #65535	; 0xffff
   330ac:	sdiv	r0, r1, r0
   330b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   330b4:	cmp	r0, r1
   330b8:	bge	330d4 <__assert_fail@plt+0x21980>
   330bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   330c0:	ldr	r1, [fp, #8]
   330c4:	mul	r0, r0, r1
   330c8:	uxth	r0, r0
   330cc:	str	r0, [fp, #-28]	; 0xffffffe4
   330d0:	b	33cd4 <__assert_fail@plt+0x22580>
   330d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   330d8:	ldr	r1, [fp, #8]
   330dc:	mul	r0, r0, r1
   330e0:	uxth	r0, r0
   330e4:	str	r0, [fp, #-28]	; 0xffffffe4
   330e8:	b	33cd8 <__assert_fail@plt+0x22584>
   330ec:	b	330f0 <__assert_fail@plt+0x2199c>
   330f0:	b	330f4 <__assert_fail@plt+0x219a0>
   330f4:	ldr	r0, [fp, #8]
   330f8:	cmp	r0, #0
   330fc:	bge	33200 <__assert_fail@plt+0x21aac>
   33100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33104:	cmp	r0, #0
   33108:	bge	33194 <__assert_fail@plt+0x21a40>
   3310c:	b	33110 <__assert_fail@plt+0x219bc>
   33110:	ldr	r0, [pc, #3048]	; 33d00 <__assert_fail@plt+0x225ac>
   33114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33118:	ldr	r2, [fp, #8]
   3311c:	sdiv	r0, r0, r2
   33120:	cmp	r1, r0
   33124:	blt	33290 <__assert_fail@plt+0x21b3c>
   33128:	b	332a4 <__assert_fail@plt+0x21b50>
   3312c:	b	33130 <__assert_fail@plt+0x219dc>
   33130:	ldr	r0, [pc, #3020]	; 33d04 <__assert_fail@plt+0x225b0>
   33134:	ldr	r1, [fp, #8]
   33138:	cmp	r1, r0
   3313c:	blt	33154 <__assert_fail@plt+0x21a00>
   33140:	b	33160 <__assert_fail@plt+0x21a0c>
   33144:	ldr	r0, [fp, #8]
   33148:	movw	r1, #0
   3314c:	cmp	r1, r0
   33150:	bge	33160 <__assert_fail@plt+0x21a0c>
   33154:	movw	r0, #0
   33158:	str	r0, [sp, #72]	; 0x48
   3315c:	b	33178 <__assert_fail@plt+0x21a24>
   33160:	ldr	r0, [pc, #2968]	; 33d00 <__assert_fail@plt+0x225ac>
   33164:	ldr	r1, [fp, #8]
   33168:	movw	r2, #0
   3316c:	sub	r1, r2, r1
   33170:	sdiv	r0, r0, r1
   33174:	str	r0, [sp, #72]	; 0x48
   33178:	ldr	r0, [sp, #72]	; 0x48
   3317c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33180:	mvn	r2, #0
   33184:	sub	r1, r2, r1
   33188:	cmp	r0, r1
   3318c:	ble	33290 <__assert_fail@plt+0x21b3c>
   33190:	b	332a4 <__assert_fail@plt+0x21b50>
   33194:	ldr	r0, [fp, #8]
   33198:	cmn	r0, #1
   3319c:	bne	331e4 <__assert_fail@plt+0x21a90>
   331a0:	b	331a4 <__assert_fail@plt+0x21a50>
   331a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   331a8:	add	r0, r0, #-2147483648	; 0x80000000
   331ac:	movw	r1, #0
   331b0:	cmp	r1, r0
   331b4:	blt	33290 <__assert_fail@plt+0x21b3c>
   331b8:	b	332a4 <__assert_fail@plt+0x21b50>
   331bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   331c0:	movw	r1, #0
   331c4:	cmp	r1, r0
   331c8:	bge	332a4 <__assert_fail@plt+0x21b50>
   331cc:	ldr	r0, [pc, #2860]	; 33d00 <__assert_fail@plt+0x225ac>
   331d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   331d4:	sub	r1, r1, #1
   331d8:	cmp	r0, r1
   331dc:	blt	33290 <__assert_fail@plt+0x21b3c>
   331e0:	b	332a4 <__assert_fail@plt+0x21b50>
   331e4:	ldr	r0, [pc, #2844]	; 33d08 <__assert_fail@plt+0x225b4>
   331e8:	ldr	r1, [fp, #8]
   331ec:	sdiv	r0, r0, r1
   331f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   331f4:	cmp	r0, r1
   331f8:	blt	33290 <__assert_fail@plt+0x21b3c>
   331fc:	b	332a4 <__assert_fail@plt+0x21b50>
   33200:	ldr	r0, [fp, #8]
   33204:	cmp	r0, #0
   33208:	bne	33210 <__assert_fail@plt+0x21abc>
   3320c:	b	332a4 <__assert_fail@plt+0x21b50>
   33210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33214:	cmp	r0, #0
   33218:	bge	33278 <__assert_fail@plt+0x21b24>
   3321c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33220:	cmn	r0, #1
   33224:	bne	3325c <__assert_fail@plt+0x21b08>
   33228:	b	3322c <__assert_fail@plt+0x21ad8>
   3322c:	ldr	r0, [fp, #8]
   33230:	add	r0, r0, #-2147483648	; 0x80000000
   33234:	movw	r1, #0
   33238:	cmp	r1, r0
   3323c:	blt	33290 <__assert_fail@plt+0x21b3c>
   33240:	b	332a4 <__assert_fail@plt+0x21b50>
   33244:	ldr	r0, [pc, #2740]	; 33d00 <__assert_fail@plt+0x225ac>
   33248:	ldr	r1, [fp, #8]
   3324c:	sub	r1, r1, #1
   33250:	cmp	r0, r1
   33254:	blt	33290 <__assert_fail@plt+0x21b3c>
   33258:	b	332a4 <__assert_fail@plt+0x21b50>
   3325c:	ldr	r0, [pc, #2724]	; 33d08 <__assert_fail@plt+0x225b4>
   33260:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33264:	sdiv	r0, r0, r1
   33268:	ldr	r1, [fp, #8]
   3326c:	cmp	r0, r1
   33270:	blt	33290 <__assert_fail@plt+0x21b3c>
   33274:	b	332a4 <__assert_fail@plt+0x21b50>
   33278:	ldr	r0, [pc, #2688]	; 33d00 <__assert_fail@plt+0x225ac>
   3327c:	ldr	r1, [fp, #8]
   33280:	sdiv	r0, r0, r1
   33284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33288:	cmp	r0, r1
   3328c:	bge	332a4 <__assert_fail@plt+0x21b50>
   33290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33294:	ldr	r1, [fp, #8]
   33298:	mul	r0, r0, r1
   3329c:	str	r0, [fp, #-28]	; 0xffffffe4
   332a0:	b	33cd4 <__assert_fail@plt+0x22580>
   332a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   332a8:	ldr	r1, [fp, #8]
   332ac:	mul	r0, r0, r1
   332b0:	str	r0, [fp, #-28]	; 0xffffffe4
   332b4:	b	33cd8 <__assert_fail@plt+0x22584>
   332b8:	ldr	r0, [fp, #8]
   332bc:	cmp	r0, #0
   332c0:	bge	333d0 <__assert_fail@plt+0x21c7c>
   332c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   332c8:	cmp	r0, #0
   332cc:	bge	33358 <__assert_fail@plt+0x21c04>
   332d0:	b	332f0 <__assert_fail@plt+0x21b9c>
   332d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   332d8:	ldr	r1, [fp, #8]
   332dc:	mvn	r2, #0
   332e0:	udiv	r1, r2, r1
   332e4:	cmp	r0, r1
   332e8:	bcc	3346c <__assert_fail@plt+0x21d18>
   332ec:	b	33480 <__assert_fail@plt+0x21d2c>
   332f0:	b	332f4 <__assert_fail@plt+0x21ba0>
   332f4:	ldr	r0, [pc, #2568]	; 33d04 <__assert_fail@plt+0x225b0>
   332f8:	ldr	r1, [fp, #8]
   332fc:	cmp	r1, r0
   33300:	blt	33318 <__assert_fail@plt+0x21bc4>
   33304:	b	33324 <__assert_fail@plt+0x21bd0>
   33308:	ldr	r0, [fp, #8]
   3330c:	movw	r1, #0
   33310:	cmp	r1, r0
   33314:	bge	33324 <__assert_fail@plt+0x21bd0>
   33318:	movw	r0, #1
   3331c:	str	r0, [sp, #68]	; 0x44
   33320:	b	3333c <__assert_fail@plt+0x21be8>
   33324:	ldr	r0, [fp, #8]
   33328:	movw	r1, #0
   3332c:	sub	r0, r1, r0
   33330:	mvn	r1, #0
   33334:	udiv	r0, r1, r0
   33338:	str	r0, [sp, #68]	; 0x44
   3333c:	ldr	r0, [sp, #68]	; 0x44
   33340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33344:	mvn	r2, #0
   33348:	sub	r1, r2, r1
   3334c:	cmp	r0, r1
   33350:	bls	3346c <__assert_fail@plt+0x21d18>
   33354:	b	33480 <__assert_fail@plt+0x21d2c>
   33358:	b	3335c <__assert_fail@plt+0x21c08>
   3335c:	b	333b4 <__assert_fail@plt+0x21c60>
   33360:	b	333b4 <__assert_fail@plt+0x21c60>
   33364:	ldr	r0, [fp, #8]
   33368:	cmn	r0, #1
   3336c:	bne	333b4 <__assert_fail@plt+0x21c60>
   33370:	b	33374 <__assert_fail@plt+0x21c20>
   33374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33378:	add	r0, r0, #0
   3337c:	movw	r1, #0
   33380:	cmp	r1, r0
   33384:	blt	3346c <__assert_fail@plt+0x21d18>
   33388:	b	33480 <__assert_fail@plt+0x21d2c>
   3338c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33390:	movw	r1, #0
   33394:	cmp	r1, r0
   33398:	bge	33480 <__assert_fail@plt+0x21d2c>
   3339c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333a0:	sub	r0, r0, #1
   333a4:	mvn	r1, #0
   333a8:	cmp	r1, r0
   333ac:	blt	3346c <__assert_fail@plt+0x21d18>
   333b0:	b	33480 <__assert_fail@plt+0x21d2c>
   333b4:	ldr	r0, [fp, #8]
   333b8:	movw	r1, #0
   333bc:	sdiv	r0, r1, r0
   333c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   333c4:	cmp	r0, r1
   333c8:	blt	3346c <__assert_fail@plt+0x21d18>
   333cc:	b	33480 <__assert_fail@plt+0x21d2c>
   333d0:	ldr	r0, [fp, #8]
   333d4:	cmp	r0, #0
   333d8:	bne	333e0 <__assert_fail@plt+0x21c8c>
   333dc:	b	33480 <__assert_fail@plt+0x21d2c>
   333e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333e4:	cmp	r0, #0
   333e8:	bge	33454 <__assert_fail@plt+0x21d00>
   333ec:	b	333f0 <__assert_fail@plt+0x21c9c>
   333f0:	b	33438 <__assert_fail@plt+0x21ce4>
   333f4:	b	33438 <__assert_fail@plt+0x21ce4>
   333f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333fc:	cmn	r0, #1
   33400:	bne	33438 <__assert_fail@plt+0x21ce4>
   33404:	b	33408 <__assert_fail@plt+0x21cb4>
   33408:	ldr	r0, [fp, #8]
   3340c:	add	r0, r0, #0
   33410:	movw	r1, #0
   33414:	cmp	r1, r0
   33418:	blt	3346c <__assert_fail@plt+0x21d18>
   3341c:	b	33480 <__assert_fail@plt+0x21d2c>
   33420:	ldr	r0, [fp, #8]
   33424:	sub	r0, r0, #1
   33428:	mvn	r1, #0
   3342c:	cmp	r1, r0
   33430:	blt	3346c <__assert_fail@plt+0x21d18>
   33434:	b	33480 <__assert_fail@plt+0x21d2c>
   33438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3343c:	movw	r1, #0
   33440:	sdiv	r0, r1, r0
   33444:	ldr	r1, [fp, #8]
   33448:	cmp	r0, r1
   3344c:	blt	3346c <__assert_fail@plt+0x21d18>
   33450:	b	33480 <__assert_fail@plt+0x21d2c>
   33454:	ldr	r0, [fp, #8]
   33458:	mvn	r1, #0
   3345c:	udiv	r0, r1, r0
   33460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33464:	cmp	r0, r1
   33468:	bcs	33480 <__assert_fail@plt+0x21d2c>
   3346c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33470:	ldr	r1, [fp, #8]
   33474:	mul	r0, r0, r1
   33478:	str	r0, [fp, #-28]	; 0xffffffe4
   3347c:	b	33cd4 <__assert_fail@plt+0x22580>
   33480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33484:	ldr	r1, [fp, #8]
   33488:	mul	r0, r0, r1
   3348c:	str	r0, [fp, #-28]	; 0xffffffe4
   33490:	b	33cd8 <__assert_fail@plt+0x22584>
   33494:	b	33498 <__assert_fail@plt+0x21d44>
   33498:	b	3349c <__assert_fail@plt+0x21d48>
   3349c:	ldr	r0, [fp, #8]
   334a0:	cmp	r0, #0
   334a4:	bge	335a8 <__assert_fail@plt+0x21e54>
   334a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   334ac:	cmp	r0, #0
   334b0:	bge	3353c <__assert_fail@plt+0x21de8>
   334b4:	b	334b8 <__assert_fail@plt+0x21d64>
   334b8:	ldr	r0, [pc, #2112]	; 33d00 <__assert_fail@plt+0x225ac>
   334bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   334c0:	ldr	r2, [fp, #8]
   334c4:	sdiv	r0, r0, r2
   334c8:	cmp	r1, r0
   334cc:	blt	33638 <__assert_fail@plt+0x21ee4>
   334d0:	b	3364c <__assert_fail@plt+0x21ef8>
   334d4:	b	334d8 <__assert_fail@plt+0x21d84>
   334d8:	ldr	r0, [pc, #2084]	; 33d04 <__assert_fail@plt+0x225b0>
   334dc:	ldr	r1, [fp, #8]
   334e0:	cmp	r1, r0
   334e4:	blt	334fc <__assert_fail@plt+0x21da8>
   334e8:	b	33508 <__assert_fail@plt+0x21db4>
   334ec:	ldr	r0, [fp, #8]
   334f0:	movw	r1, #0
   334f4:	cmp	r1, r0
   334f8:	bge	33508 <__assert_fail@plt+0x21db4>
   334fc:	movw	r0, #0
   33500:	str	r0, [sp, #64]	; 0x40
   33504:	b	33520 <__assert_fail@plt+0x21dcc>
   33508:	ldr	r0, [pc, #2032]	; 33d00 <__assert_fail@plt+0x225ac>
   3350c:	ldr	r1, [fp, #8]
   33510:	movw	r2, #0
   33514:	sub	r1, r2, r1
   33518:	sdiv	r0, r0, r1
   3351c:	str	r0, [sp, #64]	; 0x40
   33520:	ldr	r0, [sp, #64]	; 0x40
   33524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33528:	mvn	r2, #0
   3352c:	sub	r1, r2, r1
   33530:	cmp	r0, r1
   33534:	ble	33638 <__assert_fail@plt+0x21ee4>
   33538:	b	3364c <__assert_fail@plt+0x21ef8>
   3353c:	ldr	r0, [fp, #8]
   33540:	cmn	r0, #1
   33544:	bne	3358c <__assert_fail@plt+0x21e38>
   33548:	b	3354c <__assert_fail@plt+0x21df8>
   3354c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33550:	add	r0, r0, #-2147483648	; 0x80000000
   33554:	movw	r1, #0
   33558:	cmp	r1, r0
   3355c:	blt	33638 <__assert_fail@plt+0x21ee4>
   33560:	b	3364c <__assert_fail@plt+0x21ef8>
   33564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33568:	movw	r1, #0
   3356c:	cmp	r1, r0
   33570:	bge	3364c <__assert_fail@plt+0x21ef8>
   33574:	ldr	r0, [pc, #1924]	; 33d00 <__assert_fail@plt+0x225ac>
   33578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3357c:	sub	r1, r1, #1
   33580:	cmp	r0, r1
   33584:	blt	33638 <__assert_fail@plt+0x21ee4>
   33588:	b	3364c <__assert_fail@plt+0x21ef8>
   3358c:	ldr	r0, [pc, #1908]	; 33d08 <__assert_fail@plt+0x225b4>
   33590:	ldr	r1, [fp, #8]
   33594:	sdiv	r0, r0, r1
   33598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3359c:	cmp	r0, r1
   335a0:	blt	33638 <__assert_fail@plt+0x21ee4>
   335a4:	b	3364c <__assert_fail@plt+0x21ef8>
   335a8:	ldr	r0, [fp, #8]
   335ac:	cmp	r0, #0
   335b0:	bne	335b8 <__assert_fail@plt+0x21e64>
   335b4:	b	3364c <__assert_fail@plt+0x21ef8>
   335b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   335bc:	cmp	r0, #0
   335c0:	bge	33620 <__assert_fail@plt+0x21ecc>
   335c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   335c8:	cmn	r0, #1
   335cc:	bne	33604 <__assert_fail@plt+0x21eb0>
   335d0:	b	335d4 <__assert_fail@plt+0x21e80>
   335d4:	ldr	r0, [fp, #8]
   335d8:	add	r0, r0, #-2147483648	; 0x80000000
   335dc:	movw	r1, #0
   335e0:	cmp	r1, r0
   335e4:	blt	33638 <__assert_fail@plt+0x21ee4>
   335e8:	b	3364c <__assert_fail@plt+0x21ef8>
   335ec:	ldr	r0, [pc, #1804]	; 33d00 <__assert_fail@plt+0x225ac>
   335f0:	ldr	r1, [fp, #8]
   335f4:	sub	r1, r1, #1
   335f8:	cmp	r0, r1
   335fc:	blt	33638 <__assert_fail@plt+0x21ee4>
   33600:	b	3364c <__assert_fail@plt+0x21ef8>
   33604:	ldr	r0, [pc, #1788]	; 33d08 <__assert_fail@plt+0x225b4>
   33608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3360c:	sdiv	r0, r0, r1
   33610:	ldr	r1, [fp, #8]
   33614:	cmp	r0, r1
   33618:	blt	33638 <__assert_fail@plt+0x21ee4>
   3361c:	b	3364c <__assert_fail@plt+0x21ef8>
   33620:	ldr	r0, [pc, #1752]	; 33d00 <__assert_fail@plt+0x225ac>
   33624:	ldr	r1, [fp, #8]
   33628:	sdiv	r0, r0, r1
   3362c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33630:	cmp	r0, r1
   33634:	bge	3364c <__assert_fail@plt+0x21ef8>
   33638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3363c:	ldr	r1, [fp, #8]
   33640:	mul	r0, r0, r1
   33644:	str	r0, [fp, #-28]	; 0xffffffe4
   33648:	b	33cd4 <__assert_fail@plt+0x22580>
   3364c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33650:	ldr	r1, [fp, #8]
   33654:	mul	r0, r0, r1
   33658:	str	r0, [fp, #-28]	; 0xffffffe4
   3365c:	b	33cd8 <__assert_fail@plt+0x22584>
   33660:	ldr	r0, [fp, #8]
   33664:	cmp	r0, #0
   33668:	bge	33778 <__assert_fail@plt+0x22024>
   3366c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33670:	cmp	r0, #0
   33674:	bge	33700 <__assert_fail@plt+0x21fac>
   33678:	b	33698 <__assert_fail@plt+0x21f44>
   3367c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33680:	ldr	r1, [fp, #8]
   33684:	mvn	r2, #0
   33688:	udiv	r1, r2, r1
   3368c:	cmp	r0, r1
   33690:	bcc	33814 <__assert_fail@plt+0x220c0>
   33694:	b	33828 <__assert_fail@plt+0x220d4>
   33698:	b	3369c <__assert_fail@plt+0x21f48>
   3369c:	ldr	r0, [pc, #1632]	; 33d04 <__assert_fail@plt+0x225b0>
   336a0:	ldr	r1, [fp, #8]
   336a4:	cmp	r1, r0
   336a8:	blt	336c0 <__assert_fail@plt+0x21f6c>
   336ac:	b	336cc <__assert_fail@plt+0x21f78>
   336b0:	ldr	r0, [fp, #8]
   336b4:	movw	r1, #0
   336b8:	cmp	r1, r0
   336bc:	bge	336cc <__assert_fail@plt+0x21f78>
   336c0:	movw	r0, #1
   336c4:	str	r0, [sp, #60]	; 0x3c
   336c8:	b	336e4 <__assert_fail@plt+0x21f90>
   336cc:	ldr	r0, [fp, #8]
   336d0:	movw	r1, #0
   336d4:	sub	r0, r1, r0
   336d8:	mvn	r1, #0
   336dc:	udiv	r0, r1, r0
   336e0:	str	r0, [sp, #60]	; 0x3c
   336e4:	ldr	r0, [sp, #60]	; 0x3c
   336e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   336ec:	mvn	r2, #0
   336f0:	sub	r1, r2, r1
   336f4:	cmp	r0, r1
   336f8:	bls	33814 <__assert_fail@plt+0x220c0>
   336fc:	b	33828 <__assert_fail@plt+0x220d4>
   33700:	b	33704 <__assert_fail@plt+0x21fb0>
   33704:	b	3375c <__assert_fail@plt+0x22008>
   33708:	b	3375c <__assert_fail@plt+0x22008>
   3370c:	ldr	r0, [fp, #8]
   33710:	cmn	r0, #1
   33714:	bne	3375c <__assert_fail@plt+0x22008>
   33718:	b	3371c <__assert_fail@plt+0x21fc8>
   3371c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33720:	add	r0, r0, #0
   33724:	movw	r1, #0
   33728:	cmp	r1, r0
   3372c:	blt	33814 <__assert_fail@plt+0x220c0>
   33730:	b	33828 <__assert_fail@plt+0x220d4>
   33734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33738:	movw	r1, #0
   3373c:	cmp	r1, r0
   33740:	bge	33828 <__assert_fail@plt+0x220d4>
   33744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33748:	sub	r0, r0, #1
   3374c:	mvn	r1, #0
   33750:	cmp	r1, r0
   33754:	blt	33814 <__assert_fail@plt+0x220c0>
   33758:	b	33828 <__assert_fail@plt+0x220d4>
   3375c:	ldr	r0, [fp, #8]
   33760:	movw	r1, #0
   33764:	sdiv	r0, r1, r0
   33768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3376c:	cmp	r0, r1
   33770:	blt	33814 <__assert_fail@plt+0x220c0>
   33774:	b	33828 <__assert_fail@plt+0x220d4>
   33778:	ldr	r0, [fp, #8]
   3377c:	cmp	r0, #0
   33780:	bne	33788 <__assert_fail@plt+0x22034>
   33784:	b	33828 <__assert_fail@plt+0x220d4>
   33788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3378c:	cmp	r0, #0
   33790:	bge	337fc <__assert_fail@plt+0x220a8>
   33794:	b	33798 <__assert_fail@plt+0x22044>
   33798:	b	337e0 <__assert_fail@plt+0x2208c>
   3379c:	b	337e0 <__assert_fail@plt+0x2208c>
   337a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   337a4:	cmn	r0, #1
   337a8:	bne	337e0 <__assert_fail@plt+0x2208c>
   337ac:	b	337b0 <__assert_fail@plt+0x2205c>
   337b0:	ldr	r0, [fp, #8]
   337b4:	add	r0, r0, #0
   337b8:	movw	r1, #0
   337bc:	cmp	r1, r0
   337c0:	blt	33814 <__assert_fail@plt+0x220c0>
   337c4:	b	33828 <__assert_fail@plt+0x220d4>
   337c8:	ldr	r0, [fp, #8]
   337cc:	sub	r0, r0, #1
   337d0:	mvn	r1, #0
   337d4:	cmp	r1, r0
   337d8:	blt	33814 <__assert_fail@plt+0x220c0>
   337dc:	b	33828 <__assert_fail@plt+0x220d4>
   337e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   337e4:	movw	r1, #0
   337e8:	sdiv	r0, r1, r0
   337ec:	ldr	r1, [fp, #8]
   337f0:	cmp	r0, r1
   337f4:	blt	33814 <__assert_fail@plt+0x220c0>
   337f8:	b	33828 <__assert_fail@plt+0x220d4>
   337fc:	ldr	r0, [fp, #8]
   33800:	mvn	r1, #0
   33804:	udiv	r0, r1, r0
   33808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3380c:	cmp	r0, r1
   33810:	bcs	33828 <__assert_fail@plt+0x220d4>
   33814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33818:	ldr	r1, [fp, #8]
   3381c:	mul	r0, r0, r1
   33820:	str	r0, [fp, #-28]	; 0xffffffe4
   33824:	b	33cd4 <__assert_fail@plt+0x22580>
   33828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3382c:	ldr	r1, [fp, #8]
   33830:	mul	r0, r0, r1
   33834:	str	r0, [fp, #-28]	; 0xffffffe4
   33838:	b	33cd8 <__assert_fail@plt+0x22584>
   3383c:	b	33840 <__assert_fail@plt+0x220ec>
   33840:	ldr	r0, [fp, #8]
   33844:	cmp	r0, #0
   33848:	bge	339b0 <__assert_fail@plt+0x2225c>
   3384c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33850:	cmp	r0, #0
   33854:	bge	3392c <__assert_fail@plt+0x221d8>
   33858:	b	3385c <__assert_fail@plt+0x22108>
   3385c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33860:	ldr	r1, [fp, #8]
   33864:	asr	r3, r1, #31
   33868:	mvn	r2, #0
   3386c:	mvn	ip, #-2147483648	; 0x80000000
   33870:	str	r0, [sp, #56]	; 0x38
   33874:	mov	r0, r2
   33878:	str	r1, [sp, #52]	; 0x34
   3387c:	mov	r1, ip
   33880:	ldr	r2, [sp, #52]	; 0x34
   33884:	bl	3ba78 <__assert_fail@plt+0x2a324>
   33888:	ldr	r2, [sp, #56]	; 0x38
   3388c:	subs	r0, r2, r0
   33890:	rscs	r1, r1, r2, asr #31
   33894:	blt	33a78 <__assert_fail@plt+0x22324>
   33898:	b	33a8c <__assert_fail@plt+0x22338>
   3389c:	b	338a0 <__assert_fail@plt+0x2214c>
   338a0:	ldr	r0, [pc, #1116]	; 33d04 <__assert_fail@plt+0x225b0>
   338a4:	ldr	r1, [fp, #8]
   338a8:	cmp	r1, r0
   338ac:	blt	338c4 <__assert_fail@plt+0x22170>
   338b0:	b	338d8 <__assert_fail@plt+0x22184>
   338b4:	ldr	r0, [fp, #8]
   338b8:	movw	r1, #0
   338bc:	cmp	r1, r0
   338c0:	bge	338d8 <__assert_fail@plt+0x22184>
   338c4:	mov	r0, #0
   338c8:	mvn	r1, #0
   338cc:	str	r1, [sp, #48]	; 0x30
   338d0:	str	r0, [sp, #44]	; 0x2c
   338d4:	b	3390c <__assert_fail@plt+0x221b8>
   338d8:	ldr	r0, [fp, #8]
   338dc:	rsb	r0, r0, #0
   338e0:	asr	r3, r0, #31
   338e4:	mvn	r1, #0
   338e8:	mvn	r2, #-2147483648	; 0x80000000
   338ec:	str	r0, [sp, #40]	; 0x28
   338f0:	mov	r0, r1
   338f4:	mov	r1, r2
   338f8:	ldr	r2, [sp, #40]	; 0x28
   338fc:	bl	3ba78 <__assert_fail@plt+0x2a324>
   33900:	str	r0, [sp, #48]	; 0x30
   33904:	str	r1, [sp, #44]	; 0x2c
   33908:	b	3390c <__assert_fail@plt+0x221b8>
   3390c:	ldr	r0, [sp, #44]	; 0x2c
   33910:	ldr	r1, [sp, #48]	; 0x30
   33914:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33918:	mvn	r2, r2
   3391c:	subs	r1, r2, r1
   33920:	rscs	r0, r0, r2, asr #31
   33924:	bge	33a78 <__assert_fail@plt+0x22324>
   33928:	b	33a8c <__assert_fail@plt+0x22338>
   3392c:	ldr	r0, [fp, #8]
   33930:	cmn	r0, #1
   33934:	bne	33978 <__assert_fail@plt+0x22224>
   33938:	b	3393c <__assert_fail@plt+0x221e8>
   3393c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33940:	mov	r1, #-2147483648	; 0x80000000
   33944:	add	r1, r1, r0, asr #31
   33948:	rsbs	r0, r0, #0
   3394c:	rscs	r1, r1, #0
   33950:	blt	33a78 <__assert_fail@plt+0x22324>
   33954:	b	33a8c <__assert_fail@plt+0x22338>
   33958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3395c:	movw	r1, #0
   33960:	cmp	r1, r0
   33964:	bge	33a8c <__assert_fail@plt+0x22338>
   33968:	mov	r0, #0
   3396c:	cmp	r0, #0
   33970:	bne	33a78 <__assert_fail@plt+0x22324>
   33974:	b	33a8c <__assert_fail@plt+0x22338>
   33978:	ldr	r0, [fp, #8]
   3397c:	asr	r3, r0, #31
   33980:	mov	r1, #0
   33984:	mov	r2, #-2147483648	; 0x80000000
   33988:	str	r0, [sp, #36]	; 0x24
   3398c:	mov	r0, r1
   33990:	mov	r1, r2
   33994:	ldr	r2, [sp, #36]	; 0x24
   33998:	bl	3ba78 <__assert_fail@plt+0x2a324>
   3399c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   339a0:	subs	r0, r0, r2
   339a4:	sbcs	r1, r1, r2, asr #31
   339a8:	blt	33a78 <__assert_fail@plt+0x22324>
   339ac:	b	33a8c <__assert_fail@plt+0x22338>
   339b0:	ldr	r0, [fp, #8]
   339b4:	cmp	r0, #0
   339b8:	bne	339c0 <__assert_fail@plt+0x2226c>
   339bc:	b	33a8c <__assert_fail@plt+0x22338>
   339c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   339c4:	cmp	r0, #0
   339c8:	bge	33a40 <__assert_fail@plt+0x222ec>
   339cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   339d0:	cmn	r0, #1
   339d4:	bne	33a08 <__assert_fail@plt+0x222b4>
   339d8:	b	339dc <__assert_fail@plt+0x22288>
   339dc:	ldr	r0, [fp, #8]
   339e0:	mov	r1, #-2147483648	; 0x80000000
   339e4:	add	r1, r1, r0, asr #31
   339e8:	rsbs	r0, r0, #0
   339ec:	rscs	r1, r1, #0
   339f0:	blt	33a78 <__assert_fail@plt+0x22324>
   339f4:	b	33a8c <__assert_fail@plt+0x22338>
   339f8:	mov	r0, #0
   339fc:	cmp	r0, #0
   33a00:	bne	33a78 <__assert_fail@plt+0x22324>
   33a04:	b	33a8c <__assert_fail@plt+0x22338>
   33a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a0c:	asr	r3, r0, #31
   33a10:	mov	r1, #0
   33a14:	mov	r2, #-2147483648	; 0x80000000
   33a18:	str	r0, [sp, #32]
   33a1c:	mov	r0, r1
   33a20:	mov	r1, r2
   33a24:	ldr	r2, [sp, #32]
   33a28:	bl	3ba78 <__assert_fail@plt+0x2a324>
   33a2c:	ldr	r2, [fp, #8]
   33a30:	subs	r0, r0, r2
   33a34:	sbcs	r1, r1, r2, asr #31
   33a38:	blt	33a78 <__assert_fail@plt+0x22324>
   33a3c:	b	33a8c <__assert_fail@plt+0x22338>
   33a40:	ldr	r0, [fp, #8]
   33a44:	asr	r3, r0, #31
   33a48:	mvn	r1, #0
   33a4c:	mvn	r2, #-2147483648	; 0x80000000
   33a50:	str	r0, [sp, #28]
   33a54:	mov	r0, r1
   33a58:	mov	r1, r2
   33a5c:	ldr	r2, [sp, #28]
   33a60:	bl	3ba78 <__assert_fail@plt+0x2a324>
   33a64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33a68:	subs	r0, r0, r2
   33a6c:	sbcs	r1, r1, r2, asr #31
   33a70:	bge	33a8c <__assert_fail@plt+0x22338>
   33a74:	b	33a78 <__assert_fail@plt+0x22324>
   33a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a7c:	ldr	r1, [fp, #8]
   33a80:	mul	r0, r0, r1
   33a84:	str	r0, [fp, #-28]	; 0xffffffe4
   33a88:	b	33cd4 <__assert_fail@plt+0x22580>
   33a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33a90:	ldr	r1, [fp, #8]
   33a94:	mul	r0, r0, r1
   33a98:	str	r0, [fp, #-28]	; 0xffffffe4
   33a9c:	b	33cd8 <__assert_fail@plt+0x22584>
   33aa0:	ldr	r0, [fp, #8]
   33aa4:	cmp	r0, #0
   33aa8:	bge	33bf8 <__assert_fail@plt+0x224a4>
   33aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ab0:	cmp	r0, #0
   33ab4:	bge	33b80 <__assert_fail@plt+0x2242c>
   33ab8:	b	33af8 <__assert_fail@plt+0x223a4>
   33abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ac0:	ldr	r1, [fp, #8]
   33ac4:	asr	r3, r1, #31
   33ac8:	mvn	r2, #0
   33acc:	str	r0, [sp, #24]
   33ad0:	mov	r0, r2
   33ad4:	str	r1, [sp, #20]
   33ad8:	mov	r1, r2
   33adc:	ldr	r2, [sp, #20]
   33ae0:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   33ae4:	ldr	r2, [sp, #24]
   33ae8:	subs	r0, r2, r0
   33aec:	rscs	r1, r1, r2, asr #31
   33af0:	bcc	33cac <__assert_fail@plt+0x22558>
   33af4:	b	33cc0 <__assert_fail@plt+0x2256c>
   33af8:	b	33afc <__assert_fail@plt+0x223a8>
   33afc:	ldr	r0, [pc, #512]	; 33d04 <__assert_fail@plt+0x225b0>
   33b00:	ldr	r1, [fp, #8]
   33b04:	cmp	r1, r0
   33b08:	blt	33b20 <__assert_fail@plt+0x223cc>
   33b0c:	b	33b34 <__assert_fail@plt+0x223e0>
   33b10:	ldr	r0, [fp, #8]
   33b14:	movw	r1, #0
   33b18:	cmp	r1, r0
   33b1c:	bge	33b34 <__assert_fail@plt+0x223e0>
   33b20:	mov	r0, #1
   33b24:	mvn	r1, #0
   33b28:	str	r1, [sp, #16]
   33b2c:	str	r0, [sp, #12]
   33b30:	b	33b60 <__assert_fail@plt+0x2240c>
   33b34:	ldr	r0, [fp, #8]
   33b38:	rsb	r0, r0, #0
   33b3c:	asr	r3, r0, #31
   33b40:	mvn	r1, #0
   33b44:	str	r0, [sp, #8]
   33b48:	mov	r0, r1
   33b4c:	ldr	r2, [sp, #8]
   33b50:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   33b54:	str	r0, [sp, #16]
   33b58:	str	r1, [sp, #12]
   33b5c:	b	33b60 <__assert_fail@plt+0x2240c>
   33b60:	ldr	r0, [sp, #12]
   33b64:	ldr	r1, [sp, #16]
   33b68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33b6c:	mvn	r2, r2
   33b70:	subs	r1, r2, r1
   33b74:	rscs	r0, r0, r2, asr #31
   33b78:	bcs	33cac <__assert_fail@plt+0x22558>
   33b7c:	b	33cc0 <__assert_fail@plt+0x2256c>
   33b80:	b	33b84 <__assert_fail@plt+0x22430>
   33b84:	b	33bdc <__assert_fail@plt+0x22488>
   33b88:	b	33bdc <__assert_fail@plt+0x22488>
   33b8c:	ldr	r0, [fp, #8]
   33b90:	cmn	r0, #1
   33b94:	bne	33bdc <__assert_fail@plt+0x22488>
   33b98:	b	33b9c <__assert_fail@plt+0x22448>
   33b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ba0:	add	r0, r0, #0
   33ba4:	movw	r1, #0
   33ba8:	cmp	r1, r0
   33bac:	blt	33cac <__assert_fail@plt+0x22558>
   33bb0:	b	33cc0 <__assert_fail@plt+0x2256c>
   33bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33bb8:	movw	r1, #0
   33bbc:	cmp	r1, r0
   33bc0:	bge	33cc0 <__assert_fail@plt+0x2256c>
   33bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33bc8:	sub	r0, r0, #1
   33bcc:	mvn	r1, #0
   33bd0:	cmp	r1, r0
   33bd4:	blt	33cac <__assert_fail@plt+0x22558>
   33bd8:	b	33cc0 <__assert_fail@plt+0x2256c>
   33bdc:	ldr	r0, [fp, #8]
   33be0:	movw	r1, #0
   33be4:	sdiv	r0, r1, r0
   33be8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33bec:	cmp	r0, r1
   33bf0:	blt	33cac <__assert_fail@plt+0x22558>
   33bf4:	b	33cc0 <__assert_fail@plt+0x2256c>
   33bf8:	ldr	r0, [fp, #8]
   33bfc:	cmp	r0, #0
   33c00:	bne	33c08 <__assert_fail@plt+0x224b4>
   33c04:	b	33cc0 <__assert_fail@plt+0x2256c>
   33c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33c0c:	cmp	r0, #0
   33c10:	bge	33c7c <__assert_fail@plt+0x22528>
   33c14:	b	33c18 <__assert_fail@plt+0x224c4>
   33c18:	b	33c60 <__assert_fail@plt+0x2250c>
   33c1c:	b	33c60 <__assert_fail@plt+0x2250c>
   33c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33c24:	cmn	r0, #1
   33c28:	bne	33c60 <__assert_fail@plt+0x2250c>
   33c2c:	b	33c30 <__assert_fail@plt+0x224dc>
   33c30:	ldr	r0, [fp, #8]
   33c34:	add	r0, r0, #0
   33c38:	movw	r1, #0
   33c3c:	cmp	r1, r0
   33c40:	blt	33cac <__assert_fail@plt+0x22558>
   33c44:	b	33cc0 <__assert_fail@plt+0x2256c>
   33c48:	ldr	r0, [fp, #8]
   33c4c:	sub	r0, r0, #1
   33c50:	mvn	r1, #0
   33c54:	cmp	r1, r0
   33c58:	blt	33cac <__assert_fail@plt+0x22558>
   33c5c:	b	33cc0 <__assert_fail@plt+0x2256c>
   33c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33c64:	movw	r1, #0
   33c68:	sdiv	r0, r1, r0
   33c6c:	ldr	r1, [fp, #8]
   33c70:	cmp	r0, r1
   33c74:	blt	33cac <__assert_fail@plt+0x22558>
   33c78:	b	33cc0 <__assert_fail@plt+0x2256c>
   33c7c:	ldr	r0, [fp, #8]
   33c80:	asr	r3, r0, #31
   33c84:	mvn	r1, #0
   33c88:	str	r0, [sp, #4]
   33c8c:	mov	r0, r1
   33c90:	ldr	r2, [sp, #4]
   33c94:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   33c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33c9c:	subs	r0, r0, r2
   33ca0:	sbcs	r1, r1, r2, asr #31
   33ca4:	bcs	33cc0 <__assert_fail@plt+0x2256c>
   33ca8:	b	33cac <__assert_fail@plt+0x22558>
   33cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33cb0:	ldr	r1, [fp, #8]
   33cb4:	mul	r0, r0, r1
   33cb8:	str	r0, [fp, #-28]	; 0xffffffe4
   33cbc:	b	33cd4 <__assert_fail@plt+0x22580>
   33cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33cc4:	ldr	r1, [fp, #8]
   33cc8:	mul	r0, r0, r1
   33ccc:	str	r0, [fp, #-28]	; 0xffffffe4
   33cd0:	b	33cd8 <__assert_fail@plt+0x22584>
   33cd4:	bl	11850 <__assert_fail@plt+0xfc>
   33cd8:	ldr	r0, [fp, #-4]
   33cdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33ce0:	bl	31210 <__assert_fail@plt+0x1fabc>
   33ce4:	str	r0, [fp, #-4]
   33ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33cec:	ldr	r1, [fp, #-8]
   33cf0:	str	r0, [r1]
   33cf4:	ldr	r0, [fp, #-4]
   33cf8:	mov	sp, fp
   33cfc:	pop	{fp, pc}
   33d00:	svcvc	0x00ffffff
   33d04:	andhi	r0, r0, r1
   33d08:	andhi	r0, r0, r0
   33d0c:			; <UNDEFINED> instruction: 0xffff8000
   33d10:	push	{fp, lr}
   33d14:	mov	fp, sp
   33d18:	sub	sp, sp, #8
   33d1c:	str	r0, [sp, #4]
   33d20:	ldr	r0, [sp, #4]
   33d24:	movw	r1, #1
   33d28:	bl	33d34 <__assert_fail@plt+0x225e0>
   33d2c:	mov	sp, fp
   33d30:	pop	{fp, pc}
   33d34:	push	{fp, lr}
   33d38:	mov	fp, sp
   33d3c:	sub	sp, sp, #8
   33d40:	str	r0, [sp, #4]
   33d44:	str	r1, [sp]
   33d48:	ldr	r0, [sp, #4]
   33d4c:	ldr	r1, [sp]
   33d50:	bl	380d0 <__assert_fail@plt+0x2697c>
   33d54:	bl	3119c <__assert_fail@plt+0x1fa48>
   33d58:	mov	sp, fp
   33d5c:	pop	{fp, pc}
   33d60:	push	{fp, lr}
   33d64:	mov	fp, sp
   33d68:	sub	sp, sp, #8
   33d6c:	str	r0, [sp, #4]
   33d70:	ldr	r0, [sp, #4]
   33d74:	movw	r1, #1
   33d78:	bl	33d84 <__assert_fail@plt+0x22630>
   33d7c:	mov	sp, fp
   33d80:	pop	{fp, pc}
   33d84:	push	{fp, lr}
   33d88:	mov	fp, sp
   33d8c:	sub	sp, sp, #8
   33d90:	str	r0, [sp, #4]
   33d94:	str	r1, [sp]
   33d98:	ldr	r0, [sp, #4]
   33d9c:	ldr	r1, [sp]
   33da0:	bl	39ce4 <__assert_fail@plt+0x28590>
   33da4:	bl	3119c <__assert_fail@plt+0x1fa48>
   33da8:	mov	sp, fp
   33dac:	pop	{fp, pc}
   33db0:	push	{fp, lr}
   33db4:	mov	fp, sp
   33db8:	sub	sp, sp, #16
   33dbc:	str	r0, [fp, #-4]
   33dc0:	str	r1, [sp, #8]
   33dc4:	ldr	r0, [sp, #8]
   33dc8:	bl	31178 <__assert_fail@plt+0x1fa24>
   33dcc:	ldr	r1, [fp, #-4]
   33dd0:	ldr	r2, [sp, #8]
   33dd4:	str	r0, [sp, #4]
   33dd8:	bl	11478 <memcpy@plt>
   33ddc:	ldr	r0, [sp, #4]
   33de0:	mov	sp, fp
   33de4:	pop	{fp, pc}
   33de8:	push	{fp, lr}
   33dec:	mov	fp, sp
   33df0:	sub	sp, sp, #16
   33df4:	str	r0, [fp, #-4]
   33df8:	str	r1, [sp, #8]
   33dfc:	ldr	r0, [sp, #8]
   33e00:	bl	311cc <__assert_fail@plt+0x1fa78>
   33e04:	ldr	r1, [fp, #-4]
   33e08:	ldr	r2, [sp, #8]
   33e0c:	str	r0, [sp, #4]
   33e10:	bl	11478 <memcpy@plt>
   33e14:	ldr	r0, [sp, #4]
   33e18:	mov	sp, fp
   33e1c:	pop	{fp, pc}
   33e20:	push	{fp, lr}
   33e24:	mov	fp, sp
   33e28:	sub	sp, sp, #16
   33e2c:	str	r0, [fp, #-4]
   33e30:	str	r1, [sp, #8]
   33e34:	ldr	r0, [sp, #8]
   33e38:	add	r0, r0, #1
   33e3c:	bl	311cc <__assert_fail@plt+0x1fa78>
   33e40:	str	r0, [sp, #4]
   33e44:	ldr	r0, [sp, #4]
   33e48:	ldr	r1, [sp, #8]
   33e4c:	add	r0, r0, r1
   33e50:	movw	r1, #0
   33e54:	strb	r1, [r0]
   33e58:	ldr	r0, [sp, #4]
   33e5c:	ldr	r1, [fp, #-4]
   33e60:	ldr	r2, [sp, #8]
   33e64:	str	r0, [sp]
   33e68:	bl	11478 <memcpy@plt>
   33e6c:	ldr	r0, [sp]
   33e70:	mov	sp, fp
   33e74:	pop	{fp, pc}
   33e78:	push	{fp, lr}
   33e7c:	mov	fp, sp
   33e80:	sub	sp, sp, #8
   33e84:	str	r0, [sp, #4]
   33e88:	ldr	r0, [sp, #4]
   33e8c:	ldr	r1, [sp, #4]
   33e90:	str	r0, [sp]
   33e94:	mov	r0, r1
   33e98:	bl	11604 <strlen@plt>
   33e9c:	add	r1, r0, #1
   33ea0:	ldr	r0, [sp]
   33ea4:	bl	33db0 <__assert_fail@plt+0x2265c>
   33ea8:	mov	sp, fp
   33eac:	pop	{fp, pc}
   33eb0:	push	{r4, r5, r6, sl, fp, lr}
   33eb4:	add	fp, sp, #16
   33eb8:	sub	sp, sp, #88	; 0x58
   33ebc:	ldr	ip, [fp, #12]
   33ec0:	ldr	lr, [fp, #8]
   33ec4:	ldr	r4, [fp, #24]
   33ec8:	ldr	r5, [fp, #20]
   33ecc:	ldr	r6, [fp, #16]
   33ed0:	str	r0, [fp, #-20]	; 0xffffffec
   33ed4:	str	r1, [fp, #-24]	; 0xffffffe8
   33ed8:	str	r3, [fp, #-28]	; 0xffffffe4
   33edc:	str	r2, [fp, #-32]	; 0xffffffe0
   33ee0:	str	ip, [fp, #-36]	; 0xffffffdc
   33ee4:	str	lr, [fp, #-40]	; 0xffffffd8
   33ee8:	ldr	r0, [fp, #-20]	; 0xffffffec
   33eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33ef0:	ldr	r1, [fp, #16]
   33ef4:	movw	r3, #0
   33ef8:	str	r1, [sp, #44]	; 0x2c
   33efc:	mov	r1, r3
   33f00:	add	r3, sp, #48	; 0x30
   33f04:	ldr	ip, [sp, #44]	; 0x2c
   33f08:	str	ip, [sp]
   33f0c:	str	r4, [sp, #40]	; 0x28
   33f10:	str	r5, [sp, #36]	; 0x24
   33f14:	str	r6, [sp, #32]
   33f18:	bl	3415c <__assert_fail@plt+0x22a08>
   33f1c:	str	r0, [fp, #-44]	; 0xffffffd4
   33f20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33f24:	cmp	r0, #0
   33f28:	bne	33fe4 <__assert_fail@plt+0x22890>
   33f2c:	ldr	r0, [sp, #48]	; 0x30
   33f30:	ldr	r1, [sp, #52]	; 0x34
   33f34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33f3c:	subs	r0, r0, r2
   33f40:	sbcs	r1, r1, r3
   33f44:	blt	33f6c <__assert_fail@plt+0x22818>
   33f48:	b	33f4c <__assert_fail@plt+0x227f8>
   33f4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33f50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33f54:	ldr	r2, [sp, #48]	; 0x30
   33f58:	ldr	r3, [sp, #52]	; 0x34
   33f5c:	subs	r0, r0, r2
   33f60:	sbcs	r1, r1, r3
   33f64:	bge	33fe0 <__assert_fail@plt+0x2288c>
   33f68:	b	33f6c <__assert_fail@plt+0x22818>
   33f6c:	mov	r0, #1
   33f70:	str	r0, [fp, #-44]	; 0xffffffd4
   33f74:	ldr	r0, [sp, #48]	; 0x30
   33f78:	ldr	r1, [sp, #52]	; 0x34
   33f7c:	subs	r0, r0, #1073741824	; 0x40000000
   33f80:	sbcs	r1, r1, #0
   33f84:	blt	33f9c <__assert_fail@plt+0x22848>
   33f88:	b	33f8c <__assert_fail@plt+0x22838>
   33f8c:	bl	11628 <__errno_location@plt>
   33f90:	movw	r1, #75	; 0x4b
   33f94:	str	r1, [r0]
   33f98:	b	33fdc <__assert_fail@plt+0x22888>
   33f9c:	ldr	r0, [sp, #48]	; 0x30
   33fa0:	ldr	r1, [sp, #52]	; 0x34
   33fa4:	mvn	r2, #1073741824	; 0x40000000
   33fa8:	subs	r0, r2, r0
   33fac:	mvn	r2, #0
   33fb0:	sbcs	r1, r2, r1
   33fb4:	blt	33fcc <__assert_fail@plt+0x22878>
   33fb8:	b	33fbc <__assert_fail@plt+0x22868>
   33fbc:	bl	11628 <__errno_location@plt>
   33fc0:	movw	r1, #75	; 0x4b
   33fc4:	str	r1, [r0]
   33fc8:	b	33fd8 <__assert_fail@plt+0x22884>
   33fcc:	bl	11628 <__errno_location@plt>
   33fd0:	movw	r1, #34	; 0x22
   33fd4:	str	r1, [r0]
   33fd8:	b	33fdc <__assert_fail@plt+0x22888>
   33fdc:	b	33fe0 <__assert_fail@plt+0x2288c>
   33fe0:	b	34020 <__assert_fail@plt+0x228cc>
   33fe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33fe8:	cmp	r0, #1
   33fec:	bne	34000 <__assert_fail@plt+0x228ac>
   33ff0:	bl	11628 <__errno_location@plt>
   33ff4:	movw	r1, #75	; 0x4b
   33ff8:	str	r1, [r0]
   33ffc:	b	3401c <__assert_fail@plt+0x228c8>
   34000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34004:	cmp	r0, #3
   34008:	bne	34018 <__assert_fail@plt+0x228c4>
   3400c:	bl	11628 <__errno_location@plt>
   34010:	movw	r1, #0
   34014:	str	r1, [r0]
   34018:	b	3401c <__assert_fail@plt+0x228c8>
   3401c:	b	34020 <__assert_fail@plt+0x228cc>
   34020:	ldr	r0, [fp, #-44]	; 0xffffffd4
   34024:	cmp	r0, #0
   34028:	beq	340c4 <__assert_fail@plt+0x22970>
   3402c:	ldr	r0, [fp, #24]
   34030:	cmp	r0, #0
   34034:	beq	34044 <__assert_fail@plt+0x228f0>
   34038:	ldr	r0, [fp, #24]
   3403c:	str	r0, [sp, #28]
   34040:	b	34050 <__assert_fail@plt+0x228fc>
   34044:	movw	r0, #1
   34048:	str	r0, [sp, #28]
   3404c:	b	34050 <__assert_fail@plt+0x228fc>
   34050:	ldr	r0, [sp, #28]
   34054:	str	r0, [sp, #24]
   34058:	bl	11628 <__errno_location@plt>
   3405c:	ldr	r0, [r0]
   34060:	cmp	r0, #22
   34064:	bne	34074 <__assert_fail@plt+0x22920>
   34068:	movw	r0, #0
   3406c:	str	r0, [sp, #20]
   34070:	b	34080 <__assert_fail@plt+0x2292c>
   34074:	bl	11628 <__errno_location@plt>
   34078:	ldr	r0, [r0]
   3407c:	str	r0, [sp, #20]
   34080:	ldr	r0, [sp, #20]
   34084:	ldr	r3, [fp, #20]
   34088:	ldr	r1, [fp, #-20]	; 0xffffffec
   3408c:	str	r0, [sp, #16]
   34090:	mov	r0, r1
   34094:	str	r3, [sp, #12]
   34098:	bl	1883c <__assert_fail@plt+0x70e8>
   3409c:	ldr	r1, [sp, #24]
   340a0:	str	r0, [sp, #8]
   340a4:	mov	r0, r1
   340a8:	ldr	r1, [sp, #16]
   340ac:	movw	r2, #51523	; 0xc943
   340b0:	movt	r2, #3
   340b4:	ldr	r3, [sp, #12]
   340b8:	ldr	ip, [sp, #8]
   340bc:	str	ip, [sp]
   340c0:	bl	11580 <error@plt>
   340c4:	ldr	r0, [sp, #48]	; 0x30
   340c8:	ldr	r1, [sp, #52]	; 0x34
   340cc:	sub	sp, fp, #16
   340d0:	pop	{r4, r5, r6, sl, fp, pc}
   340d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   340d8:	add	fp, sp, #24
   340dc:	sub	sp, sp, #56	; 0x38
   340e0:	ldr	r1, [fp, #12]
   340e4:	ldr	ip, [fp, #8]
   340e8:	ldr	lr, [fp, #24]
   340ec:	ldr	r4, [fp, #20]
   340f0:	ldr	r5, [fp, #16]
   340f4:	str	r0, [fp, #-28]	; 0xffffffe4
   340f8:	str	r3, [sp, #44]	; 0x2c
   340fc:	str	r2, [sp, #40]	; 0x28
   34100:	str	r1, [sp, #36]	; 0x24
   34104:	str	ip, [sp, #32]
   34108:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3410c:	ldr	r2, [sp, #40]	; 0x28
   34110:	ldr	r3, [sp, #44]	; 0x2c
   34114:	ldr	r1, [sp, #32]
   34118:	ldr	ip, [sp, #36]	; 0x24
   3411c:	ldr	r6, [fp, #16]
   34120:	ldr	r7, [fp, #20]
   34124:	ldr	r8, [fp, #24]
   34128:	mov	r9, sp
   3412c:	str	r8, [r9, #16]
   34130:	str	r7, [r9, #12]
   34134:	str	r6, [r9, #8]
   34138:	str	ip, [r9, #4]
   3413c:	str	r1, [r9]
   34140:	mov	r1, #10
   34144:	str	lr, [sp, #28]
   34148:	str	r4, [sp, #24]
   3414c:	str	r5, [sp, #20]
   34150:	bl	33eb0 <__assert_fail@plt+0x2275c>
   34154:	sub	sp, fp, #24
   34158:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3415c:	push	{fp, lr}
   34160:	mov	fp, sp
   34164:	sub	sp, sp, #72	; 0x48
   34168:	ldr	ip, [fp, #8]
   3416c:	str	r0, [fp, #-8]
   34170:	str	r1, [fp, #-12]
   34174:	str	r2, [fp, #-16]
   34178:	str	r3, [fp, #-20]	; 0xffffffec
   3417c:	movw	r0, #0
   34180:	str	r0, [sp, #28]
   34184:	ldr	r1, [fp, #-16]
   34188:	cmp	r0, r1
   3418c:	bgt	341a0 <__assert_fail@plt+0x22a4c>
   34190:	ldr	r0, [fp, #-16]
   34194:	cmp	r0, #36	; 0x24
   34198:	bgt	341a0 <__assert_fail@plt+0x22a4c>
   3419c:	b	341c0 <__assert_fail@plt+0x22a6c>
   341a0:	movw	r0, #53139	; 0xcf93
   341a4:	movt	r0, #3
   341a8:	movw	r1, #53177	; 0xcfb9
   341ac:	movt	r1, #3
   341b0:	movw	r2, #85	; 0x55
   341b4:	movw	r3, #53193	; 0xcfc9
   341b8:	movt	r3, #3
   341bc:	bl	11754 <__assert_fail@plt>
   341c0:	ldr	r0, [fp, #-12]
   341c4:	movw	r1, #0
   341c8:	cmp	r0, r1
   341cc:	beq	341dc <__assert_fail@plt+0x22a88>
   341d0:	ldr	r0, [fp, #-12]
   341d4:	str	r0, [sp, #12]
   341d8:	b	341e8 <__assert_fail@plt+0x22a94>
   341dc:	sub	r0, fp, #24
   341e0:	str	r0, [sp, #12]
   341e4:	b	341e8 <__assert_fail@plt+0x22a94>
   341e8:	ldr	r0, [sp, #12]
   341ec:	str	r0, [fp, #-28]	; 0xffffffe4
   341f0:	bl	11628 <__errno_location@plt>
   341f4:	mov	r1, #0
   341f8:	str	r1, [r0]
   341fc:	ldr	r0, [fp, #-8]
   34200:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34204:	ldr	r2, [fp, #-16]
   34208:	bl	11688 <strtoimax@plt>
   3420c:	str	r1, [sp, #36]	; 0x24
   34210:	str	r0, [sp, #32]
   34214:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34218:	ldr	r0, [r0]
   3421c:	ldr	r1, [fp, #-8]
   34220:	cmp	r0, r1
   34224:	bne	34290 <__assert_fail@plt+0x22b3c>
   34228:	ldr	r0, [fp, #8]
   3422c:	movw	r1, #0
   34230:	cmp	r0, r1
   34234:	beq	34280 <__assert_fail@plt+0x22b2c>
   34238:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3423c:	ldr	r0, [r0]
   34240:	ldrb	r0, [r0]
   34244:	cmp	r0, #0
   34248:	beq	34280 <__assert_fail@plt+0x22b2c>
   3424c:	ldr	r0, [fp, #8]
   34250:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34254:	ldr	r1, [r1]
   34258:	ldrb	r1, [r1]
   3425c:	bl	11610 <strchr@plt>
   34260:	movw	r1, #0
   34264:	cmp	r0, r1
   34268:	beq	34280 <__assert_fail@plt+0x22b2c>
   3426c:	mov	r0, #0
   34270:	str	r0, [sp, #36]	; 0x24
   34274:	mov	r0, #1
   34278:	str	r0, [sp, #32]
   3427c:	b	3428c <__assert_fail@plt+0x22b38>
   34280:	movw	r0, #4
   34284:	str	r0, [fp, #-4]
   34288:	b	34778 <__assert_fail@plt+0x23024>
   3428c:	b	342c8 <__assert_fail@plt+0x22b74>
   34290:	bl	11628 <__errno_location@plt>
   34294:	ldr	r0, [r0]
   34298:	cmp	r0, #0
   3429c:	beq	342c4 <__assert_fail@plt+0x22b70>
   342a0:	bl	11628 <__errno_location@plt>
   342a4:	ldr	r0, [r0]
   342a8:	cmp	r0, #34	; 0x22
   342ac:	beq	342bc <__assert_fail@plt+0x22b68>
   342b0:	movw	r0, #4
   342b4:	str	r0, [fp, #-4]
   342b8:	b	34778 <__assert_fail@plt+0x23024>
   342bc:	movw	r0, #1
   342c0:	str	r0, [sp, #28]
   342c4:	b	342c8 <__assert_fail@plt+0x22b74>
   342c8:	ldr	r0, [fp, #8]
   342cc:	movw	r1, #0
   342d0:	cmp	r0, r1
   342d4:	bne	342f8 <__assert_fail@plt+0x22ba4>
   342d8:	ldr	r0, [sp, #32]
   342dc:	ldr	r1, [sp, #36]	; 0x24
   342e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   342e4:	str	r1, [r2, #4]
   342e8:	str	r0, [r2]
   342ec:	ldr	r0, [sp, #28]
   342f0:	str	r0, [fp, #-4]
   342f4:	b	34778 <__assert_fail@plt+0x23024>
   342f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   342fc:	ldr	r0, [r0]
   34300:	ldrb	r0, [r0]
   34304:	cmp	r0, #0
   34308:	beq	3475c <__assert_fail@plt+0x23008>
   3430c:	movw	r0, #1024	; 0x400
   34310:	str	r0, [sp, #24]
   34314:	movw	r0, #1
   34318:	str	r0, [sp, #20]
   3431c:	ldr	r0, [fp, #8]
   34320:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34324:	ldr	r1, [r1]
   34328:	ldrb	r1, [r1]
   3432c:	bl	11610 <strchr@plt>
   34330:	movw	r1, #0
   34334:	cmp	r0, r1
   34338:	bne	34360 <__assert_fail@plt+0x22c0c>
   3433c:	ldr	r0, [sp, #32]
   34340:	ldr	r1, [sp, #36]	; 0x24
   34344:	ldr	r2, [fp, #-20]	; 0xffffffec
   34348:	str	r1, [r2, #4]
   3434c:	str	r0, [r2]
   34350:	ldr	r0, [sp, #28]
   34354:	orr	r0, r0, #2
   34358:	str	r0, [fp, #-4]
   3435c:	b	34778 <__assert_fail@plt+0x23024>
   34360:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34364:	ldr	r0, [r0]
   34368:	ldrb	r0, [r0]
   3436c:	sub	r0, r0, #69	; 0x45
   34370:	cmp	r0, #47	; 0x2f
   34374:	str	r0, [sp, #8]
   34378:	bhi	344e4 <__assert_fail@plt+0x22d90>
   3437c:	add	r0, pc, #8
   34380:	ldr	r1, [sp, #8]
   34384:	ldr	r0, [r0, r1, lsl #2]
   34388:	mov	pc, r0
   3438c:	andeq	r4, r3, ip, asr #8
   34390:	andeq	r4, r3, r4, ror #9
   34394:	andeq	r4, r3, ip, asr #8
   34398:	andeq	r4, r3, r4, ror #9
   3439c:	andeq	r4, r3, r4, ror #9
   343a0:	andeq	r4, r3, r4, ror #9
   343a4:	andeq	r4, r3, ip, asr #8
   343a8:	andeq	r4, r3, r4, ror #9
   343ac:	andeq	r4, r3, ip, asr #8
   343b0:	andeq	r4, r3, r4, ror #9
   343b4:	andeq	r4, r3, r4, ror #9
   343b8:	andeq	r4, r3, ip, asr #8
   343bc:	andeq	r4, r3, r4, ror #9
   343c0:	andeq	r4, r3, r4, ror #9
   343c4:	andeq	r4, r3, r4, ror #9
   343c8:	andeq	r4, r3, ip, asr #8
   343cc:	andeq	r4, r3, r4, ror #9
   343d0:	andeq	r4, r3, r4, ror #9
   343d4:	andeq	r4, r3, r4, ror #9
   343d8:	andeq	r4, r3, r4, ror #9
   343dc:	andeq	r4, r3, ip, asr #8
   343e0:	andeq	r4, r3, ip, asr #8
   343e4:	andeq	r4, r3, r4, ror #9
   343e8:	andeq	r4, r3, r4, ror #9
   343ec:	andeq	r4, r3, r4, ror #9
   343f0:	andeq	r4, r3, r4, ror #9
   343f4:	andeq	r4, r3, r4, ror #9
   343f8:	andeq	r4, r3, r4, ror #9
   343fc:	andeq	r4, r3, r4, ror #9
   34400:	andeq	r4, r3, r4, ror #9
   34404:	andeq	r4, r3, r4, ror #9
   34408:	andeq	r4, r3, r4, ror #9
   3440c:	andeq	r4, r3, r4, ror #9
   34410:	andeq	r4, r3, r4, ror #9
   34414:	andeq	r4, r3, ip, asr #8
   34418:	andeq	r4, r3, r4, ror #9
   3441c:	andeq	r4, r3, r4, ror #9
   34420:	andeq	r4, r3, r4, ror #9
   34424:	andeq	r4, r3, ip, asr #8
   34428:	andeq	r4, r3, r4, ror #9
   3442c:	andeq	r4, r3, ip, asr #8
   34430:	andeq	r4, r3, r4, ror #9
   34434:	andeq	r4, r3, r4, ror #9
   34438:	andeq	r4, r3, r4, ror #9
   3443c:	andeq	r4, r3, r4, ror #9
   34440:	andeq	r4, r3, r4, ror #9
   34444:	andeq	r4, r3, r4, ror #9
   34448:	andeq	r4, r3, ip, asr #8
   3444c:	ldr	r0, [fp, #8]
   34450:	movw	r1, #48	; 0x30
   34454:	bl	11610 <strchr@plt>
   34458:	movw	r1, #0
   3445c:	cmp	r0, r1
   34460:	beq	344e0 <__assert_fail@plt+0x22d8c>
   34464:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34468:	ldr	r0, [r0]
   3446c:	ldrb	r0, [r0, #1]
   34470:	mov	r1, r0
   34474:	cmp	r0, #66	; 0x42
   34478:	str	r1, [sp, #4]
   3447c:	beq	344c8 <__assert_fail@plt+0x22d74>
   34480:	b	34484 <__assert_fail@plt+0x22d30>
   34484:	ldr	r0, [sp, #4]
   34488:	cmp	r0, #68	; 0x44
   3448c:	beq	344c8 <__assert_fail@plt+0x22d74>
   34490:	b	34494 <__assert_fail@plt+0x22d40>
   34494:	ldr	r0, [sp, #4]
   34498:	cmp	r0, #105	; 0x69
   3449c:	bne	344dc <__assert_fail@plt+0x22d88>
   344a0:	b	344a4 <__assert_fail@plt+0x22d50>
   344a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   344a8:	ldr	r0, [r0]
   344ac:	ldrb	r0, [r0, #2]
   344b0:	cmp	r0, #66	; 0x42
   344b4:	bne	344c4 <__assert_fail@plt+0x22d70>
   344b8:	ldr	r0, [sp, #20]
   344bc:	add	r0, r0, #2
   344c0:	str	r0, [sp, #20]
   344c4:	b	344dc <__assert_fail@plt+0x22d88>
   344c8:	movw	r0, #1000	; 0x3e8
   344cc:	str	r0, [sp, #24]
   344d0:	ldr	r0, [sp, #20]
   344d4:	add	r0, r0, #1
   344d8:	str	r0, [sp, #20]
   344dc:	b	344e0 <__assert_fail@plt+0x22d8c>
   344e0:	b	344e4 <__assert_fail@plt+0x22d90>
   344e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   344e8:	ldr	r0, [r0]
   344ec:	ldrb	r0, [r0]
   344f0:	sub	r0, r0, #66	; 0x42
   344f4:	cmp	r0, #53	; 0x35
   344f8:	str	r0, [sp]
   344fc:	bhi	346f0 <__assert_fail@plt+0x22f9c>
   34500:	add	r0, pc, #8
   34504:	ldr	r1, [sp]
   34508:	ldr	r0, [r0, r1, lsl #2]
   3450c:	mov	pc, r0
   34510:	strdeq	r4, [r3], -ip
   34514:	strdeq	r4, [r3], -r0
   34518:	strdeq	r4, [r3], -r0
   3451c:	andeq	r4, r3, ip, lsl r6
   34520:	strdeq	r4, [r3], -r0
   34524:	andeq	r4, r3, r4, lsr r6
   34528:	strdeq	r4, [r3], -r0
   3452c:	strdeq	r4, [r3], -r0
   34530:	strdeq	r4, [r3], -r0
   34534:	andeq	r4, r3, ip, asr #12
   34538:	strdeq	r4, [r3], -r0
   3453c:	andeq	r4, r3, r4, ror #12
   34540:	strdeq	r4, [r3], -r0
   34544:	strdeq	r4, [r3], -r0
   34548:	andeq	r4, r3, ip, ror r6
   3454c:	strdeq	r4, [r3], -r0
   34550:	strdeq	r4, [r3], -r0
   34554:	strdeq	r4, [r3], -r0
   34558:	muleq	r3, r4, r6
   3455c:	strdeq	r4, [r3], -r0
   34560:	strdeq	r4, [r3], -r0
   34564:	strdeq	r4, [r3], -r0
   34568:	strdeq	r4, [r3], -r0
   3456c:	andeq	r4, r3, r0, asr #13
   34570:	ldrdeq	r4, [r3], -r8
   34574:	strdeq	r4, [r3], -r0
   34578:	strdeq	r4, [r3], -r0
   3457c:	strdeq	r4, [r3], -r0
   34580:	strdeq	r4, [r3], -r0
   34584:	strdeq	r4, [r3], -r0
   34588:	strdeq	r4, [r3], -r0
   3458c:	strdeq	r4, [r3], -r0
   34590:	andeq	r4, r3, r8, ror #11
   34594:	andeq	r4, r3, r0, lsl r6
   34598:	strdeq	r4, [r3], -r0
   3459c:	strdeq	r4, [r3], -r0
   345a0:	strdeq	r4, [r3], -r0
   345a4:	andeq	r4, r3, r4, lsr r6
   345a8:	strdeq	r4, [r3], -r0
   345ac:	strdeq	r4, [r3], -r0
   345b0:	strdeq	r4, [r3], -r0
   345b4:	andeq	r4, r3, ip, asr #12
   345b8:	strdeq	r4, [r3], -r0
   345bc:	andeq	r4, r3, r4, ror #12
   345c0:	strdeq	r4, [r3], -r0
   345c4:	strdeq	r4, [r3], -r0
   345c8:	strdeq	r4, [r3], -r0
   345cc:	strdeq	r4, [r3], -r0
   345d0:	strdeq	r4, [r3], -r0
   345d4:	strdeq	r4, [r3], -r0
   345d8:	muleq	r3, r4, r6
   345dc:	strdeq	r4, [r3], -r0
   345e0:	strdeq	r4, [r3], -r0
   345e4:	andeq	r4, r3, ip, lsr #13
   345e8:	add	r0, sp, #32
   345ec:	movw	r1, #512	; 0x200
   345f0:	bl	34784 <__assert_fail@plt+0x23030>
   345f4:	str	r0, [sp, #16]
   345f8:	b	34714 <__assert_fail@plt+0x22fc0>
   345fc:	add	r0, sp, #32
   34600:	movw	r1, #1024	; 0x400
   34604:	bl	34784 <__assert_fail@plt+0x23030>
   34608:	str	r0, [sp, #16]
   3460c:	b	34714 <__assert_fail@plt+0x22fc0>
   34610:	movw	r0, #0
   34614:	str	r0, [sp, #16]
   34618:	b	34714 <__assert_fail@plt+0x22fc0>
   3461c:	ldr	r1, [sp, #24]
   34620:	add	r0, sp, #32
   34624:	movw	r2, #6
   34628:	bl	36108 <__assert_fail@plt+0x249b4>
   3462c:	str	r0, [sp, #16]
   34630:	b	34714 <__assert_fail@plt+0x22fc0>
   34634:	ldr	r1, [sp, #24]
   34638:	add	r0, sp, #32
   3463c:	movw	r2, #3
   34640:	bl	36108 <__assert_fail@plt+0x249b4>
   34644:	str	r0, [sp, #16]
   34648:	b	34714 <__assert_fail@plt+0x22fc0>
   3464c:	ldr	r1, [sp, #24]
   34650:	add	r0, sp, #32
   34654:	movw	r2, #1
   34658:	bl	36108 <__assert_fail@plt+0x249b4>
   3465c:	str	r0, [sp, #16]
   34660:	b	34714 <__assert_fail@plt+0x22fc0>
   34664:	ldr	r1, [sp, #24]
   34668:	add	r0, sp, #32
   3466c:	movw	r2, #2
   34670:	bl	36108 <__assert_fail@plt+0x249b4>
   34674:	str	r0, [sp, #16]
   34678:	b	34714 <__assert_fail@plt+0x22fc0>
   3467c:	ldr	r1, [sp, #24]
   34680:	add	r0, sp, #32
   34684:	movw	r2, #5
   34688:	bl	36108 <__assert_fail@plt+0x249b4>
   3468c:	str	r0, [sp, #16]
   34690:	b	34714 <__assert_fail@plt+0x22fc0>
   34694:	ldr	r1, [sp, #24]
   34698:	add	r0, sp, #32
   3469c:	movw	r2, #4
   346a0:	bl	36108 <__assert_fail@plt+0x249b4>
   346a4:	str	r0, [sp, #16]
   346a8:	b	34714 <__assert_fail@plt+0x22fc0>
   346ac:	add	r0, sp, #32
   346b0:	movw	r1, #2
   346b4:	bl	34784 <__assert_fail@plt+0x23030>
   346b8:	str	r0, [sp, #16]
   346bc:	b	34714 <__assert_fail@plt+0x22fc0>
   346c0:	ldr	r1, [sp, #24]
   346c4:	add	r0, sp, #32
   346c8:	movw	r2, #8
   346cc:	bl	36108 <__assert_fail@plt+0x249b4>
   346d0:	str	r0, [sp, #16]
   346d4:	b	34714 <__assert_fail@plt+0x22fc0>
   346d8:	ldr	r1, [sp, #24]
   346dc:	add	r0, sp, #32
   346e0:	movw	r2, #7
   346e4:	bl	36108 <__assert_fail@plt+0x249b4>
   346e8:	str	r0, [sp, #16]
   346ec:	b	34714 <__assert_fail@plt+0x22fc0>
   346f0:	ldr	r0, [sp, #32]
   346f4:	ldr	r1, [sp, #36]	; 0x24
   346f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   346fc:	str	r1, [r2, #4]
   34700:	str	r0, [r2]
   34704:	ldr	r0, [sp, #28]
   34708:	orr	r0, r0, #2
   3470c:	str	r0, [fp, #-4]
   34710:	b	34778 <__assert_fail@plt+0x23024>
   34714:	ldr	r0, [sp, #16]
   34718:	ldr	r1, [sp, #28]
   3471c:	orr	r0, r1, r0
   34720:	str	r0, [sp, #28]
   34724:	ldr	r0, [sp, #20]
   34728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3472c:	ldr	r2, [r1]
   34730:	add	r0, r2, r0
   34734:	str	r0, [r1]
   34738:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3473c:	ldr	r0, [r0]
   34740:	ldrsb	r0, [r0]
   34744:	cmp	r0, #0
   34748:	beq	34758 <__assert_fail@plt+0x23004>
   3474c:	ldr	r0, [sp, #28]
   34750:	orr	r0, r0, #2
   34754:	str	r0, [sp, #28]
   34758:	b	3475c <__assert_fail@plt+0x23008>
   3475c:	ldr	r0, [sp, #32]
   34760:	ldr	r1, [sp, #36]	; 0x24
   34764:	ldr	r2, [fp, #-20]	; 0xffffffec
   34768:	str	r1, [r2, #4]
   3476c:	str	r0, [r2]
   34770:	ldr	r0, [sp, #28]
   34774:	str	r0, [fp, #-4]
   34778:	ldr	r0, [fp, #-4]
   3477c:	mov	sp, fp
   34780:	pop	{fp, pc}
   34784:	push	{fp, lr}
   34788:	mov	fp, sp
   3478c:	sub	sp, sp, #112	; 0x70
   34790:	str	r0, [fp, #-8]
   34794:	str	r1, [fp, #-12]
   34798:	b	34c80 <__assert_fail@plt+0x2352c>
   3479c:	b	347a0 <__assert_fail@plt+0x2304c>
   347a0:	ldr	r0, [fp, #-12]
   347a4:	cmp	r0, #0
   347a8:	bge	34908 <__assert_fail@plt+0x231b4>
   347ac:	ldr	r0, [fp, #-8]
   347b0:	ldr	r0, [r0, #4]
   347b4:	cmn	r0, #1
   347b8:	bgt	34860 <__assert_fail@plt+0x2310c>
   347bc:	b	347c0 <__assert_fail@plt+0x2306c>
   347c0:	b	347c4 <__assert_fail@plt+0x23070>
   347c4:	ldr	r0, [fp, #-8]
   347c8:	ldr	r1, [r0]
   347cc:	ldr	r0, [r0, #4]
   347d0:	ldr	r2, [fp, #-12]
   347d4:	mov	r3, #127	; 0x7f
   347d8:	sdiv	r2, r3, r2
   347dc:	subs	r1, r1, r2
   347e0:	sbcs	r0, r0, r2, asr #31
   347e4:	blt	349e0 <__assert_fail@plt+0x2328c>
   347e8:	b	34a04 <__assert_fail@plt+0x232b0>
   347ec:	b	347f0 <__assert_fail@plt+0x2309c>
   347f0:	ldr	r0, [pc, #4092]	; 357f4 <__assert_fail@plt+0x240a0>
   347f4:	ldr	r1, [fp, #-12]
   347f8:	cmp	r1, r0
   347fc:	blt	34814 <__assert_fail@plt+0x230c0>
   34800:	b	34820 <__assert_fail@plt+0x230cc>
   34804:	ldr	r0, [fp, #-12]
   34808:	movw	r1, #0
   3480c:	cmp	r1, r0
   34810:	bge	34820 <__assert_fail@plt+0x230cc>
   34814:	movw	r0, #0
   34818:	str	r0, [fp, #-28]	; 0xffffffe4
   3481c:	b	34838 <__assert_fail@plt+0x230e4>
   34820:	ldr	r0, [fp, #-12]
   34824:	movw	r1, #0
   34828:	sub	r0, r1, r0
   3482c:	movw	r1, #127	; 0x7f
   34830:	sdiv	r0, r1, r0
   34834:	str	r0, [fp, #-28]	; 0xffffffe4
   34838:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3483c:	ldr	r1, [fp, #-8]
   34840:	ldr	r2, [r1]
   34844:	ldr	r1, [r1, #4]
   34848:	mvn	r1, r1
   3484c:	mvn	r2, r2
   34850:	subs	r2, r2, r0
   34854:	sbcs	r0, r1, r0, asr #31
   34858:	bge	349e0 <__assert_fail@plt+0x2328c>
   3485c:	b	34a04 <__assert_fail@plt+0x232b0>
   34860:	b	34864 <__assert_fail@plt+0x23110>
   34864:	b	348e0 <__assert_fail@plt+0x2318c>
   34868:	b	348e0 <__assert_fail@plt+0x2318c>
   3486c:	ldr	r0, [fp, #-12]
   34870:	cmn	r0, #1
   34874:	bne	348e0 <__assert_fail@plt+0x2318c>
   34878:	b	3487c <__assert_fail@plt+0x23128>
   3487c:	ldr	r0, [fp, #-8]
   34880:	ldr	r1, [r0]
   34884:	ldr	r0, [r0, #4]
   34888:	subs	r1, r1, #128	; 0x80
   3488c:	sbc	r0, r0, #0
   34890:	rsbs	r1, r1, #0
   34894:	rscs	r0, r0, #0
   34898:	blt	349e0 <__assert_fail@plt+0x2328c>
   3489c:	b	34a04 <__assert_fail@plt+0x232b0>
   348a0:	ldr	r0, [fp, #-8]
   348a4:	ldr	r1, [r0]
   348a8:	ldr	r0, [r0, #4]
   348ac:	subs	r1, r1, #1
   348b0:	sbcs	r0, r0, #0
   348b4:	blt	34a04 <__assert_fail@plt+0x232b0>
   348b8:	b	348bc <__assert_fail@plt+0x23168>
   348bc:	ldr	r0, [fp, #-8]
   348c0:	ldr	r1, [r0]
   348c4:	ldr	r0, [r0, #4]
   348c8:	subs	r1, r1, #1
   348cc:	sbc	r0, r0, #0
   348d0:	rsbs	r1, r1, #127	; 0x7f
   348d4:	rscs	r0, r0, #0
   348d8:	blt	349e0 <__assert_fail@plt+0x2328c>
   348dc:	b	34a04 <__assert_fail@plt+0x232b0>
   348e0:	ldr	r0, [fp, #-12]
   348e4:	mvn	r1, #127	; 0x7f
   348e8:	sdiv	r0, r1, r0
   348ec:	ldr	r1, [fp, #-8]
   348f0:	ldr	r2, [r1]
   348f4:	ldr	r1, [r1, #4]
   348f8:	subs	r2, r0, r2
   348fc:	rscs	r0, r1, r0, asr #31
   34900:	blt	349e0 <__assert_fail@plt+0x2328c>
   34904:	b	34a04 <__assert_fail@plt+0x232b0>
   34908:	ldr	r0, [fp, #-12]
   3490c:	cmp	r0, #0
   34910:	bne	34918 <__assert_fail@plt+0x231c4>
   34914:	b	34a04 <__assert_fail@plt+0x232b0>
   34918:	ldr	r0, [fp, #-8]
   3491c:	ldr	r0, [r0, #4]
   34920:	cmn	r0, #1
   34924:	bgt	349b8 <__assert_fail@plt+0x23264>
   34928:	b	3492c <__assert_fail@plt+0x231d8>
   3492c:	b	34930 <__assert_fail@plt+0x231dc>
   34930:	b	3498c <__assert_fail@plt+0x23238>
   34934:	b	3498c <__assert_fail@plt+0x23238>
   34938:	ldr	r0, [fp, #-8]
   3493c:	ldr	r1, [r0]
   34940:	ldr	r0, [r0, #4]
   34944:	and	r0, r1, r0
   34948:	cmn	r0, #1
   3494c:	bne	3498c <__assert_fail@plt+0x23238>
   34950:	b	34954 <__assert_fail@plt+0x23200>
   34954:	b	34958 <__assert_fail@plt+0x23204>
   34958:	ldr	r0, [fp, #-12]
   3495c:	mvn	r1, #127	; 0x7f
   34960:	add	r0, r0, r1
   34964:	movw	r1, #0
   34968:	cmp	r1, r0
   3496c:	blt	349e0 <__assert_fail@plt+0x2328c>
   34970:	b	34a04 <__assert_fail@plt+0x232b0>
   34974:	ldr	r0, [fp, #-12]
   34978:	sub	r0, r0, #1
   3497c:	movw	r1, #127	; 0x7f
   34980:	cmp	r1, r0
   34984:	blt	349e0 <__assert_fail@plt+0x2328c>
   34988:	b	34a04 <__assert_fail@plt+0x232b0>
   3498c:	ldr	r0, [fp, #-8]
   34990:	ldr	r2, [r0]
   34994:	ldr	r3, [r0, #4]
   34998:	mvn	r0, #127	; 0x7f
   3499c:	mvn	r1, #0
   349a0:	bl	3ba78 <__assert_fail@plt+0x2a324>
   349a4:	ldr	r2, [fp, #-12]
   349a8:	subs	r0, r0, r2
   349ac:	sbcs	r1, r1, r2, asr #31
   349b0:	blt	349e0 <__assert_fail@plt+0x2328c>
   349b4:	b	34a04 <__assert_fail@plt+0x232b0>
   349b8:	ldr	r0, [fp, #-12]
   349bc:	mov	r1, #127	; 0x7f
   349c0:	sdiv	r0, r1, r0
   349c4:	ldr	r1, [fp, #-8]
   349c8:	ldr	r2, [r1]
   349cc:	ldr	r1, [r1, #4]
   349d0:	subs	r2, r0, r2
   349d4:	rscs	r0, r1, r0, asr #31
   349d8:	bge	34a04 <__assert_fail@plt+0x232b0>
   349dc:	b	349e0 <__assert_fail@plt+0x2328c>
   349e0:	ldr	r0, [fp, #-8]
   349e4:	ldr	r0, [r0]
   349e8:	ldr	r1, [fp, #-12]
   349ec:	mul	r0, r0, r1
   349f0:	sxtb	r0, r0
   349f4:	asr	r1, r0, #31
   349f8:	str	r0, [fp, #-24]	; 0xffffffe8
   349fc:	str	r1, [fp, #-20]	; 0xffffffec
   34a00:	b	360a4 <__assert_fail@plt+0x24950>
   34a04:	ldr	r0, [fp, #-8]
   34a08:	ldr	r0, [r0]
   34a0c:	ldr	r1, [fp, #-12]
   34a10:	mul	r0, r0, r1
   34a14:	sxtb	r0, r0
   34a18:	asr	r1, r0, #31
   34a1c:	str	r0, [fp, #-24]	; 0xffffffe8
   34a20:	str	r1, [fp, #-20]	; 0xffffffec
   34a24:	b	360d8 <__assert_fail@plt+0x24984>
   34a28:	ldr	r0, [fp, #-12]
   34a2c:	cmp	r0, #0
   34a30:	bge	34b78 <__assert_fail@plt+0x23424>
   34a34:	ldr	r0, [fp, #-8]
   34a38:	ldr	r0, [r0, #4]
   34a3c:	cmn	r0, #1
   34a40:	bgt	34ae8 <__assert_fail@plt+0x23394>
   34a44:	b	34a48 <__assert_fail@plt+0x232f4>
   34a48:	b	34a4c <__assert_fail@plt+0x232f8>
   34a4c:	ldr	r0, [fp, #-8]
   34a50:	ldr	r1, [r0]
   34a54:	ldr	r0, [r0, #4]
   34a58:	ldr	r2, [fp, #-12]
   34a5c:	mov	r3, #255	; 0xff
   34a60:	sdiv	r2, r3, r2
   34a64:	subs	r1, r1, r2
   34a68:	sbcs	r0, r0, r2, asr #31
   34a6c:	blt	34c38 <__assert_fail@plt+0x234e4>
   34a70:	b	34c5c <__assert_fail@plt+0x23508>
   34a74:	b	34a78 <__assert_fail@plt+0x23324>
   34a78:	ldr	r0, [pc, #3444]	; 357f4 <__assert_fail@plt+0x240a0>
   34a7c:	ldr	r1, [fp, #-12]
   34a80:	cmp	r1, r0
   34a84:	blt	34a9c <__assert_fail@plt+0x23348>
   34a88:	b	34aa8 <__assert_fail@plt+0x23354>
   34a8c:	ldr	r0, [fp, #-12]
   34a90:	movw	r1, #0
   34a94:	cmp	r1, r0
   34a98:	bge	34aa8 <__assert_fail@plt+0x23354>
   34a9c:	movw	r0, #0
   34aa0:	str	r0, [fp, #-32]	; 0xffffffe0
   34aa4:	b	34ac0 <__assert_fail@plt+0x2336c>
   34aa8:	ldr	r0, [fp, #-12]
   34aac:	movw	r1, #0
   34ab0:	sub	r0, r1, r0
   34ab4:	movw	r1, #255	; 0xff
   34ab8:	sdiv	r0, r1, r0
   34abc:	str	r0, [fp, #-32]	; 0xffffffe0
   34ac0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34ac4:	ldr	r1, [fp, #-8]
   34ac8:	ldr	r2, [r1]
   34acc:	ldr	r1, [r1, #4]
   34ad0:	mvn	r1, r1
   34ad4:	mvn	r2, r2
   34ad8:	subs	r2, r2, r0
   34adc:	sbcs	r0, r1, r0, asr #31
   34ae0:	bge	34c38 <__assert_fail@plt+0x234e4>
   34ae4:	b	34c5c <__assert_fail@plt+0x23508>
   34ae8:	b	34aec <__assert_fail@plt+0x23398>
   34aec:	b	34b5c <__assert_fail@plt+0x23408>
   34af0:	b	34b5c <__assert_fail@plt+0x23408>
   34af4:	ldr	r0, [fp, #-12]
   34af8:	cmn	r0, #1
   34afc:	bne	34b5c <__assert_fail@plt+0x23408>
   34b00:	b	34b04 <__assert_fail@plt+0x233b0>
   34b04:	ldr	r0, [fp, #-8]
   34b08:	ldr	r1, [r0]
   34b0c:	ldr	r0, [r0, #4]
   34b10:	rsbs	r1, r1, #0
   34b14:	rscs	r0, r0, #0
   34b18:	blt	34c38 <__assert_fail@plt+0x234e4>
   34b1c:	b	34c5c <__assert_fail@plt+0x23508>
   34b20:	ldr	r0, [fp, #-8]
   34b24:	ldr	r1, [r0]
   34b28:	ldr	r0, [r0, #4]
   34b2c:	subs	r1, r1, #1
   34b30:	sbcs	r0, r0, #0
   34b34:	blt	34c5c <__assert_fail@plt+0x23508>
   34b38:	b	34b3c <__assert_fail@plt+0x233e8>
   34b3c:	ldr	r0, [fp, #-8]
   34b40:	ldr	r1, [r0]
   34b44:	ldr	r0, [r0, #4]
   34b48:	subs	r1, r1, #1
   34b4c:	sbc	r0, r0, #0
   34b50:	cmn	r0, #1
   34b54:	bgt	34c38 <__assert_fail@plt+0x234e4>
   34b58:	b	34c5c <__assert_fail@plt+0x23508>
   34b5c:	ldr	r0, [fp, #-8]
   34b60:	ldr	r1, [r0]
   34b64:	ldr	r0, [r0, #4]
   34b68:	rsbs	r1, r1, #0
   34b6c:	rscs	r0, r0, #0
   34b70:	blt	34c38 <__assert_fail@plt+0x234e4>
   34b74:	b	34c5c <__assert_fail@plt+0x23508>
   34b78:	ldr	r0, [fp, #-12]
   34b7c:	cmp	r0, #0
   34b80:	bne	34b88 <__assert_fail@plt+0x23434>
   34b84:	b	34c5c <__assert_fail@plt+0x23508>
   34b88:	ldr	r0, [fp, #-8]
   34b8c:	ldr	r0, [r0, #4]
   34b90:	cmn	r0, #1
   34b94:	bgt	34c10 <__assert_fail@plt+0x234bc>
   34b98:	b	34b9c <__assert_fail@plt+0x23448>
   34b9c:	b	34ba0 <__assert_fail@plt+0x2344c>
   34ba0:	b	34bf8 <__assert_fail@plt+0x234a4>
   34ba4:	b	34bf8 <__assert_fail@plt+0x234a4>
   34ba8:	ldr	r0, [fp, #-8]
   34bac:	ldr	r1, [r0]
   34bb0:	ldr	r0, [r0, #4]
   34bb4:	and	r0, r1, r0
   34bb8:	cmn	r0, #1
   34bbc:	bne	34bf8 <__assert_fail@plt+0x234a4>
   34bc0:	b	34bc4 <__assert_fail@plt+0x23470>
   34bc4:	b	34bc8 <__assert_fail@plt+0x23474>
   34bc8:	ldr	r0, [fp, #-12]
   34bcc:	add	r0, r0, #0
   34bd0:	movw	r1, #0
   34bd4:	cmp	r1, r0
   34bd8:	blt	34c38 <__assert_fail@plt+0x234e4>
   34bdc:	b	34c5c <__assert_fail@plt+0x23508>
   34be0:	ldr	r0, [fp, #-12]
   34be4:	sub	r0, r0, #1
   34be8:	mvn	r1, #0
   34bec:	cmp	r1, r0
   34bf0:	blt	34c38 <__assert_fail@plt+0x234e4>
   34bf4:	b	34c5c <__assert_fail@plt+0x23508>
   34bf8:	ldr	r0, [fp, #-12]
   34bfc:	rsbs	r1, r0, #0
   34c00:	mov	r2, #0
   34c04:	sbcs	r0, r2, r0, asr #31
   34c08:	blt	34c38 <__assert_fail@plt+0x234e4>
   34c0c:	b	34c5c <__assert_fail@plt+0x23508>
   34c10:	ldr	r0, [fp, #-12]
   34c14:	mov	r1, #255	; 0xff
   34c18:	sdiv	r0, r1, r0
   34c1c:	ldr	r1, [fp, #-8]
   34c20:	ldr	r2, [r1]
   34c24:	ldr	r1, [r1, #4]
   34c28:	subs	r2, r0, r2
   34c2c:	rscs	r0, r1, r0, asr #31
   34c30:	bge	34c5c <__assert_fail@plt+0x23508>
   34c34:	b	34c38 <__assert_fail@plt+0x234e4>
   34c38:	ldr	r0, [fp, #-8]
   34c3c:	ldr	r0, [r0]
   34c40:	ldr	r1, [fp, #-12]
   34c44:	mul	r0, r0, r1
   34c48:	uxtb	r0, r0
   34c4c:	mov	r1, #0
   34c50:	str	r1, [fp, #-20]	; 0xffffffec
   34c54:	str	r0, [fp, #-24]	; 0xffffffe8
   34c58:	b	360a4 <__assert_fail@plt+0x24950>
   34c5c:	ldr	r0, [fp, #-8]
   34c60:	ldr	r0, [r0]
   34c64:	ldr	r1, [fp, #-12]
   34c68:	mul	r0, r0, r1
   34c6c:	uxtb	r0, r0
   34c70:	mov	r1, #0
   34c74:	str	r1, [fp, #-20]	; 0xffffffec
   34c78:	str	r0, [fp, #-24]	; 0xffffffe8
   34c7c:	b	360d8 <__assert_fail@plt+0x24984>
   34c80:	b	35174 <__assert_fail@plt+0x23a20>
   34c84:	b	34c88 <__assert_fail@plt+0x23534>
   34c88:	ldr	r0, [fp, #-12]
   34c8c:	cmp	r0, #0
   34c90:	bge	34df8 <__assert_fail@plt+0x236a4>
   34c94:	ldr	r0, [fp, #-8]
   34c98:	ldr	r0, [r0, #4]
   34c9c:	cmn	r0, #1
   34ca0:	bgt	34d48 <__assert_fail@plt+0x235f4>
   34ca4:	b	34ca8 <__assert_fail@plt+0x23554>
   34ca8:	b	34cac <__assert_fail@plt+0x23558>
   34cac:	ldr	r0, [fp, #-8]
   34cb0:	ldr	r1, [r0]
   34cb4:	ldr	r0, [r0, #4]
   34cb8:	ldr	r2, [fp, #-12]
   34cbc:	movw	r3, #32767	; 0x7fff
   34cc0:	sdiv	r2, r3, r2
   34cc4:	subs	r1, r1, r2
   34cc8:	sbcs	r0, r0, r2, asr #31
   34ccc:	blt	34ed4 <__assert_fail@plt+0x23780>
   34cd0:	b	34ef8 <__assert_fail@plt+0x237a4>
   34cd4:	b	34cd8 <__assert_fail@plt+0x23584>
   34cd8:	ldr	r0, [pc, #2836]	; 357f4 <__assert_fail@plt+0x240a0>
   34cdc:	ldr	r1, [fp, #-12]
   34ce0:	cmp	r1, r0
   34ce4:	blt	34cfc <__assert_fail@plt+0x235a8>
   34ce8:	b	34d08 <__assert_fail@plt+0x235b4>
   34cec:	ldr	r0, [fp, #-12]
   34cf0:	movw	r1, #0
   34cf4:	cmp	r1, r0
   34cf8:	bge	34d08 <__assert_fail@plt+0x235b4>
   34cfc:	movw	r0, #0
   34d00:	str	r0, [fp, #-36]	; 0xffffffdc
   34d04:	b	34d20 <__assert_fail@plt+0x235cc>
   34d08:	ldr	r0, [fp, #-12]
   34d0c:	movw	r1, #0
   34d10:	sub	r0, r1, r0
   34d14:	movw	r1, #32767	; 0x7fff
   34d18:	sdiv	r0, r1, r0
   34d1c:	str	r0, [fp, #-36]	; 0xffffffdc
   34d20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   34d24:	ldr	r1, [fp, #-8]
   34d28:	ldr	r2, [r1]
   34d2c:	ldr	r1, [r1, #4]
   34d30:	mvn	r1, r1
   34d34:	mvn	r2, r2
   34d38:	subs	r2, r2, r0
   34d3c:	sbcs	r0, r1, r0, asr #31
   34d40:	bge	34ed4 <__assert_fail@plt+0x23780>
   34d44:	b	34ef8 <__assert_fail@plt+0x237a4>
   34d48:	b	34d4c <__assert_fail@plt+0x235f8>
   34d4c:	b	34dcc <__assert_fail@plt+0x23678>
   34d50:	b	34dcc <__assert_fail@plt+0x23678>
   34d54:	ldr	r0, [fp, #-12]
   34d58:	cmn	r0, #1
   34d5c:	bne	34dcc <__assert_fail@plt+0x23678>
   34d60:	b	34d64 <__assert_fail@plt+0x23610>
   34d64:	ldr	r0, [fp, #-8]
   34d68:	ldr	r1, [r0]
   34d6c:	ldr	r0, [r0, #4]
   34d70:	subs	r1, r1, #32768	; 0x8000
   34d74:	sbc	r0, r0, #0
   34d78:	rsbs	r1, r1, #0
   34d7c:	rscs	r0, r0, #0
   34d80:	blt	34ed4 <__assert_fail@plt+0x23780>
   34d84:	b	34ef8 <__assert_fail@plt+0x237a4>
   34d88:	ldr	r0, [fp, #-8]
   34d8c:	ldr	r1, [r0]
   34d90:	ldr	r0, [r0, #4]
   34d94:	subs	r1, r1, #1
   34d98:	sbcs	r0, r0, #0
   34d9c:	blt	34ef8 <__assert_fail@plt+0x237a4>
   34da0:	b	34da4 <__assert_fail@plt+0x23650>
   34da4:	ldr	r0, [fp, #-8]
   34da8:	ldr	r1, [r0]
   34dac:	ldr	r0, [r0, #4]
   34db0:	subs	r1, r1, #1
   34db4:	sbc	r0, r0, #0
   34db8:	movw	r2, #32767	; 0x7fff
   34dbc:	subs	r1, r2, r1
   34dc0:	rscs	r0, r0, #0
   34dc4:	blt	34ed4 <__assert_fail@plt+0x23780>
   34dc8:	b	34ef8 <__assert_fail@plt+0x237a4>
   34dcc:	ldr	r0, [fp, #-12]
   34dd0:	movw	r1, #32768	; 0x8000
   34dd4:	movt	r1, #65535	; 0xffff
   34dd8:	sdiv	r0, r1, r0
   34ddc:	ldr	r1, [fp, #-8]
   34de0:	ldr	r2, [r1]
   34de4:	ldr	r1, [r1, #4]
   34de8:	subs	r2, r0, r2
   34dec:	rscs	r0, r1, r0, asr #31
   34df0:	blt	34ed4 <__assert_fail@plt+0x23780>
   34df4:	b	34ef8 <__assert_fail@plt+0x237a4>
   34df8:	ldr	r0, [fp, #-12]
   34dfc:	cmp	r0, #0
   34e00:	bne	34e08 <__assert_fail@plt+0x236b4>
   34e04:	b	34ef8 <__assert_fail@plt+0x237a4>
   34e08:	ldr	r0, [fp, #-8]
   34e0c:	ldr	r0, [r0, #4]
   34e10:	cmn	r0, #1
   34e14:	bgt	34eac <__assert_fail@plt+0x23758>
   34e18:	b	34e1c <__assert_fail@plt+0x236c8>
   34e1c:	b	34e20 <__assert_fail@plt+0x236cc>
   34e20:	b	34e7c <__assert_fail@plt+0x23728>
   34e24:	b	34e7c <__assert_fail@plt+0x23728>
   34e28:	ldr	r0, [fp, #-8]
   34e2c:	ldr	r1, [r0]
   34e30:	ldr	r0, [r0, #4]
   34e34:	and	r0, r1, r0
   34e38:	cmn	r0, #1
   34e3c:	bne	34e7c <__assert_fail@plt+0x23728>
   34e40:	b	34e44 <__assert_fail@plt+0x236f0>
   34e44:	b	34e48 <__assert_fail@plt+0x236f4>
   34e48:	ldr	r0, [pc, #4032]	; 35e10 <__assert_fail@plt+0x246bc>
   34e4c:	ldr	r1, [fp, #-12]
   34e50:	add	r0, r1, r0
   34e54:	movw	r1, #0
   34e58:	cmp	r1, r0
   34e5c:	blt	34ed4 <__assert_fail@plt+0x23780>
   34e60:	b	34ef8 <__assert_fail@plt+0x237a4>
   34e64:	ldr	r0, [fp, #-12]
   34e68:	sub	r0, r0, #1
   34e6c:	movw	r1, #32767	; 0x7fff
   34e70:	cmp	r1, r0
   34e74:	blt	34ed4 <__assert_fail@plt+0x23780>
   34e78:	b	34ef8 <__assert_fail@plt+0x237a4>
   34e7c:	ldr	r0, [fp, #-8]
   34e80:	ldr	r2, [r0]
   34e84:	ldr	r3, [r0, #4]
   34e88:	movw	r0, #32768	; 0x8000
   34e8c:	movt	r0, #65535	; 0xffff
   34e90:	mvn	r1, #0
   34e94:	bl	3ba78 <__assert_fail@plt+0x2a324>
   34e98:	ldr	r2, [fp, #-12]
   34e9c:	subs	r0, r0, r2
   34ea0:	sbcs	r1, r1, r2, asr #31
   34ea4:	blt	34ed4 <__assert_fail@plt+0x23780>
   34ea8:	b	34ef8 <__assert_fail@plt+0x237a4>
   34eac:	ldr	r0, [fp, #-12]
   34eb0:	movw	r1, #32767	; 0x7fff
   34eb4:	sdiv	r0, r1, r0
   34eb8:	ldr	r1, [fp, #-8]
   34ebc:	ldr	r2, [r1]
   34ec0:	ldr	r1, [r1, #4]
   34ec4:	subs	r2, r0, r2
   34ec8:	rscs	r0, r1, r0, asr #31
   34ecc:	bge	34ef8 <__assert_fail@plt+0x237a4>
   34ed0:	b	34ed4 <__assert_fail@plt+0x23780>
   34ed4:	ldr	r0, [fp, #-8]
   34ed8:	ldr	r0, [r0]
   34edc:	ldr	r1, [fp, #-12]
   34ee0:	mul	r0, r0, r1
   34ee4:	sxth	r0, r0
   34ee8:	asr	r1, r0, #31
   34eec:	str	r0, [fp, #-24]	; 0xffffffe8
   34ef0:	str	r1, [fp, #-20]	; 0xffffffec
   34ef4:	b	360a4 <__assert_fail@plt+0x24950>
   34ef8:	ldr	r0, [fp, #-8]
   34efc:	ldr	r0, [r0]
   34f00:	ldr	r1, [fp, #-12]
   34f04:	mul	r0, r0, r1
   34f08:	sxth	r0, r0
   34f0c:	asr	r1, r0, #31
   34f10:	str	r0, [fp, #-24]	; 0xffffffe8
   34f14:	str	r1, [fp, #-20]	; 0xffffffec
   34f18:	b	360d8 <__assert_fail@plt+0x24984>
   34f1c:	ldr	r0, [fp, #-12]
   34f20:	cmp	r0, #0
   34f24:	bge	3506c <__assert_fail@plt+0x23918>
   34f28:	ldr	r0, [fp, #-8]
   34f2c:	ldr	r0, [r0, #4]
   34f30:	cmn	r0, #1
   34f34:	bgt	34fdc <__assert_fail@plt+0x23888>
   34f38:	b	34f3c <__assert_fail@plt+0x237e8>
   34f3c:	b	34f40 <__assert_fail@plt+0x237ec>
   34f40:	ldr	r0, [fp, #-8]
   34f44:	ldr	r1, [r0]
   34f48:	ldr	r0, [r0, #4]
   34f4c:	ldr	r2, [fp, #-12]
   34f50:	movw	r3, #65535	; 0xffff
   34f54:	sdiv	r2, r3, r2
   34f58:	subs	r1, r1, r2
   34f5c:	sbcs	r0, r0, r2, asr #31
   34f60:	blt	3512c <__assert_fail@plt+0x239d8>
   34f64:	b	35150 <__assert_fail@plt+0x239fc>
   34f68:	b	34f6c <__assert_fail@plt+0x23818>
   34f6c:	ldr	r0, [pc, #2176]	; 357f4 <__assert_fail@plt+0x240a0>
   34f70:	ldr	r1, [fp, #-12]
   34f74:	cmp	r1, r0
   34f78:	blt	34f90 <__assert_fail@plt+0x2383c>
   34f7c:	b	34f9c <__assert_fail@plt+0x23848>
   34f80:	ldr	r0, [fp, #-12]
   34f84:	movw	r1, #0
   34f88:	cmp	r1, r0
   34f8c:	bge	34f9c <__assert_fail@plt+0x23848>
   34f90:	movw	r0, #0
   34f94:	str	r0, [fp, #-40]	; 0xffffffd8
   34f98:	b	34fb4 <__assert_fail@plt+0x23860>
   34f9c:	ldr	r0, [fp, #-12]
   34fa0:	movw	r1, #0
   34fa4:	sub	r0, r1, r0
   34fa8:	movw	r1, #65535	; 0xffff
   34fac:	sdiv	r0, r1, r0
   34fb0:	str	r0, [fp, #-40]	; 0xffffffd8
   34fb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   34fb8:	ldr	r1, [fp, #-8]
   34fbc:	ldr	r2, [r1]
   34fc0:	ldr	r1, [r1, #4]
   34fc4:	mvn	r1, r1
   34fc8:	mvn	r2, r2
   34fcc:	subs	r2, r2, r0
   34fd0:	sbcs	r0, r1, r0, asr #31
   34fd4:	bge	3512c <__assert_fail@plt+0x239d8>
   34fd8:	b	35150 <__assert_fail@plt+0x239fc>
   34fdc:	b	34fe0 <__assert_fail@plt+0x2388c>
   34fe0:	b	35050 <__assert_fail@plt+0x238fc>
   34fe4:	b	35050 <__assert_fail@plt+0x238fc>
   34fe8:	ldr	r0, [fp, #-12]
   34fec:	cmn	r0, #1
   34ff0:	bne	35050 <__assert_fail@plt+0x238fc>
   34ff4:	b	34ff8 <__assert_fail@plt+0x238a4>
   34ff8:	ldr	r0, [fp, #-8]
   34ffc:	ldr	r1, [r0]
   35000:	ldr	r0, [r0, #4]
   35004:	rsbs	r1, r1, #0
   35008:	rscs	r0, r0, #0
   3500c:	blt	3512c <__assert_fail@plt+0x239d8>
   35010:	b	35150 <__assert_fail@plt+0x239fc>
   35014:	ldr	r0, [fp, #-8]
   35018:	ldr	r1, [r0]
   3501c:	ldr	r0, [r0, #4]
   35020:	subs	r1, r1, #1
   35024:	sbcs	r0, r0, #0
   35028:	blt	35150 <__assert_fail@plt+0x239fc>
   3502c:	b	35030 <__assert_fail@plt+0x238dc>
   35030:	ldr	r0, [fp, #-8]
   35034:	ldr	r1, [r0]
   35038:	ldr	r0, [r0, #4]
   3503c:	subs	r1, r1, #1
   35040:	sbc	r0, r0, #0
   35044:	cmn	r0, #1
   35048:	bgt	3512c <__assert_fail@plt+0x239d8>
   3504c:	b	35150 <__assert_fail@plt+0x239fc>
   35050:	ldr	r0, [fp, #-8]
   35054:	ldr	r1, [r0]
   35058:	ldr	r0, [r0, #4]
   3505c:	rsbs	r1, r1, #0
   35060:	rscs	r0, r0, #0
   35064:	blt	3512c <__assert_fail@plt+0x239d8>
   35068:	b	35150 <__assert_fail@plt+0x239fc>
   3506c:	ldr	r0, [fp, #-12]
   35070:	cmp	r0, #0
   35074:	bne	3507c <__assert_fail@plt+0x23928>
   35078:	b	35150 <__assert_fail@plt+0x239fc>
   3507c:	ldr	r0, [fp, #-8]
   35080:	ldr	r0, [r0, #4]
   35084:	cmn	r0, #1
   35088:	bgt	35104 <__assert_fail@plt+0x239b0>
   3508c:	b	35090 <__assert_fail@plt+0x2393c>
   35090:	b	35094 <__assert_fail@plt+0x23940>
   35094:	b	350ec <__assert_fail@plt+0x23998>
   35098:	b	350ec <__assert_fail@plt+0x23998>
   3509c:	ldr	r0, [fp, #-8]
   350a0:	ldr	r1, [r0]
   350a4:	ldr	r0, [r0, #4]
   350a8:	and	r0, r1, r0
   350ac:	cmn	r0, #1
   350b0:	bne	350ec <__assert_fail@plt+0x23998>
   350b4:	b	350b8 <__assert_fail@plt+0x23964>
   350b8:	b	350bc <__assert_fail@plt+0x23968>
   350bc:	ldr	r0, [fp, #-12]
   350c0:	add	r0, r0, #0
   350c4:	movw	r1, #0
   350c8:	cmp	r1, r0
   350cc:	blt	3512c <__assert_fail@plt+0x239d8>
   350d0:	b	35150 <__assert_fail@plt+0x239fc>
   350d4:	ldr	r0, [fp, #-12]
   350d8:	sub	r0, r0, #1
   350dc:	mvn	r1, #0
   350e0:	cmp	r1, r0
   350e4:	blt	3512c <__assert_fail@plt+0x239d8>
   350e8:	b	35150 <__assert_fail@plt+0x239fc>
   350ec:	ldr	r0, [fp, #-12]
   350f0:	rsbs	r1, r0, #0
   350f4:	mov	r2, #0
   350f8:	sbcs	r0, r2, r0, asr #31
   350fc:	blt	3512c <__assert_fail@plt+0x239d8>
   35100:	b	35150 <__assert_fail@plt+0x239fc>
   35104:	ldr	r0, [fp, #-12]
   35108:	movw	r1, #65535	; 0xffff
   3510c:	sdiv	r0, r1, r0
   35110:	ldr	r1, [fp, #-8]
   35114:	ldr	r2, [r1]
   35118:	ldr	r1, [r1, #4]
   3511c:	subs	r2, r0, r2
   35120:	rscs	r0, r1, r0, asr #31
   35124:	bge	35150 <__assert_fail@plt+0x239fc>
   35128:	b	3512c <__assert_fail@plt+0x239d8>
   3512c:	ldr	r0, [fp, #-8]
   35130:	ldr	r0, [r0]
   35134:	ldr	r1, [fp, #-12]
   35138:	mul	r0, r0, r1
   3513c:	uxth	r0, r0
   35140:	mov	r1, #0
   35144:	str	r1, [fp, #-20]	; 0xffffffec
   35148:	str	r0, [fp, #-24]	; 0xffffffe8
   3514c:	b	360a4 <__assert_fail@plt+0x24950>
   35150:	ldr	r0, [fp, #-8]
   35154:	ldr	r0, [r0]
   35158:	ldr	r1, [fp, #-12]
   3515c:	mul	r0, r0, r1
   35160:	uxth	r0, r0
   35164:	mov	r1, #0
   35168:	str	r1, [fp, #-20]	; 0xffffffec
   3516c:	str	r0, [fp, #-24]	; 0xffffffe8
   35170:	b	360d8 <__assert_fail@plt+0x24984>
   35174:	b	35640 <__assert_fail@plt+0x23eec>
   35178:	b	3517c <__assert_fail@plt+0x23a28>
   3517c:	ldr	r0, [fp, #-12]
   35180:	cmp	r0, #0
   35184:	bge	352dc <__assert_fail@plt+0x23b88>
   35188:	ldr	r0, [fp, #-8]
   3518c:	ldr	r0, [r0, #4]
   35190:	cmn	r0, #1
   35194:	bgt	3523c <__assert_fail@plt+0x23ae8>
   35198:	b	3519c <__assert_fail@plt+0x23a48>
   3519c:	b	351a0 <__assert_fail@plt+0x23a4c>
   351a0:	ldr	r0, [fp, #-8]
   351a4:	ldr	r1, [r0]
   351a8:	ldr	r0, [r0, #4]
   351ac:	ldr	r2, [fp, #-12]
   351b0:	mvn	r3, #-2147483648	; 0x80000000
   351b4:	sdiv	r2, r3, r2
   351b8:	subs	r1, r1, r2
   351bc:	sbcs	r0, r0, r2, asr #31
   351c0:	blt	353b0 <__assert_fail@plt+0x23c5c>
   351c4:	b	353d0 <__assert_fail@plt+0x23c7c>
   351c8:	b	351cc <__assert_fail@plt+0x23a78>
   351cc:	ldr	r0, [pc, #3884]	; 36100 <__assert_fail@plt+0x249ac>
   351d0:	ldr	r1, [fp, #-12]
   351d4:	cmp	r1, r0
   351d8:	blt	351f0 <__assert_fail@plt+0x23a9c>
   351dc:	b	351fc <__assert_fail@plt+0x23aa8>
   351e0:	ldr	r0, [fp, #-12]
   351e4:	movw	r1, #0
   351e8:	cmp	r1, r0
   351ec:	bge	351fc <__assert_fail@plt+0x23aa8>
   351f0:	movw	r0, #0
   351f4:	str	r0, [fp, #-44]	; 0xffffffd4
   351f8:	b	35214 <__assert_fail@plt+0x23ac0>
   351fc:	ldr	r0, [pc, #3840]	; 36104 <__assert_fail@plt+0x249b0>
   35200:	ldr	r1, [fp, #-12]
   35204:	movw	r2, #0
   35208:	sub	r1, r2, r1
   3520c:	sdiv	r0, r0, r1
   35210:	str	r0, [fp, #-44]	; 0xffffffd4
   35214:	ldr	r0, [fp, #-44]	; 0xffffffd4
   35218:	ldr	r1, [fp, #-8]
   3521c:	ldr	r2, [r1]
   35220:	ldr	r1, [r1, #4]
   35224:	mvn	r1, r1
   35228:	mvn	r2, r2
   3522c:	subs	r2, r2, r0
   35230:	sbcs	r0, r1, r0, asr #31
   35234:	bge	353b0 <__assert_fail@plt+0x23c5c>
   35238:	b	353d0 <__assert_fail@plt+0x23c7c>
   3523c:	ldr	r0, [fp, #-12]
   35240:	cmn	r0, #1
   35244:	bne	352b4 <__assert_fail@plt+0x23b60>
   35248:	b	3524c <__assert_fail@plt+0x23af8>
   3524c:	ldr	r0, [fp, #-8]
   35250:	ldr	r1, [r0]
   35254:	ldr	r0, [r0, #4]
   35258:	adds	r1, r1, #-2147483648	; 0x80000000
   3525c:	sbc	r0, r0, #0
   35260:	rsbs	r1, r1, #0
   35264:	rscs	r0, r0, #0
   35268:	blt	353b0 <__assert_fail@plt+0x23c5c>
   3526c:	b	353d0 <__assert_fail@plt+0x23c7c>
   35270:	ldr	r0, [fp, #-8]
   35274:	ldr	r1, [r0]
   35278:	ldr	r0, [r0, #4]
   3527c:	subs	r1, r1, #1
   35280:	sbcs	r0, r0, #0
   35284:	blt	353d0 <__assert_fail@plt+0x23c7c>
   35288:	b	3528c <__assert_fail@plt+0x23b38>
   3528c:	ldr	r0, [fp, #-8]
   35290:	ldr	r1, [r0]
   35294:	ldr	r0, [r0, #4]
   35298:	subs	r1, r1, #1
   3529c:	sbc	r0, r0, #0
   352a0:	mvn	r2, #-2147483648	; 0x80000000
   352a4:	subs	r1, r2, r1
   352a8:	rscs	r0, r0, #0
   352ac:	blt	353b0 <__assert_fail@plt+0x23c5c>
   352b0:	b	353d0 <__assert_fail@plt+0x23c7c>
   352b4:	ldr	r0, [fp, #-12]
   352b8:	mov	r1, #-2147483648	; 0x80000000
   352bc:	sdiv	r0, r1, r0
   352c0:	ldr	r1, [fp, #-8]
   352c4:	ldr	r2, [r1]
   352c8:	ldr	r1, [r1, #4]
   352cc:	subs	r2, r0, r2
   352d0:	rscs	r0, r1, r0, asr #31
   352d4:	blt	353b0 <__assert_fail@plt+0x23c5c>
   352d8:	b	353d0 <__assert_fail@plt+0x23c7c>
   352dc:	ldr	r0, [fp, #-12]
   352e0:	cmp	r0, #0
   352e4:	bne	352ec <__assert_fail@plt+0x23b98>
   352e8:	b	353d0 <__assert_fail@plt+0x23c7c>
   352ec:	ldr	r0, [fp, #-8]
   352f0:	ldr	r0, [r0, #4]
   352f4:	cmn	r0, #1
   352f8:	bgt	35388 <__assert_fail@plt+0x23c34>
   352fc:	b	35300 <__assert_fail@plt+0x23bac>
   35300:	b	35304 <__assert_fail@plt+0x23bb0>
   35304:	b	3535c <__assert_fail@plt+0x23c08>
   35308:	b	3535c <__assert_fail@plt+0x23c08>
   3530c:	ldr	r0, [fp, #-8]
   35310:	ldr	r1, [r0]
   35314:	ldr	r0, [r0, #4]
   35318:	and	r0, r1, r0
   3531c:	cmn	r0, #1
   35320:	bne	3535c <__assert_fail@plt+0x23c08>
   35324:	b	35328 <__assert_fail@plt+0x23bd4>
   35328:	b	3532c <__assert_fail@plt+0x23bd8>
   3532c:	ldr	r0, [fp, #-12]
   35330:	add	r0, r0, #-2147483648	; 0x80000000
   35334:	movw	r1, #0
   35338:	cmp	r1, r0
   3533c:	blt	353b0 <__assert_fail@plt+0x23c5c>
   35340:	b	353d0 <__assert_fail@plt+0x23c7c>
   35344:	ldr	r0, [pc, #3512]	; 36104 <__assert_fail@plt+0x249b0>
   35348:	ldr	r1, [fp, #-12]
   3534c:	sub	r1, r1, #1
   35350:	cmp	r0, r1
   35354:	blt	353b0 <__assert_fail@plt+0x23c5c>
   35358:	b	353d0 <__assert_fail@plt+0x23c7c>
   3535c:	ldr	r0, [fp, #-8]
   35360:	ldr	r2, [r0]
   35364:	ldr	r3, [r0, #4]
   35368:	mov	r0, #-2147483648	; 0x80000000
   3536c:	mvn	r1, #0
   35370:	bl	3ba78 <__assert_fail@plt+0x2a324>
   35374:	ldr	r2, [fp, #-12]
   35378:	subs	r0, r0, r2
   3537c:	sbcs	r1, r1, r2, asr #31
   35380:	blt	353b0 <__assert_fail@plt+0x23c5c>
   35384:	b	353d0 <__assert_fail@plt+0x23c7c>
   35388:	ldr	r0, [fp, #-12]
   3538c:	mvn	r1, #-2147483648	; 0x80000000
   35390:	sdiv	r0, r1, r0
   35394:	ldr	r1, [fp, #-8]
   35398:	ldr	r2, [r1]
   3539c:	ldr	r1, [r1, #4]
   353a0:	subs	r2, r0, r2
   353a4:	rscs	r0, r1, r0, asr #31
   353a8:	bge	353d0 <__assert_fail@plt+0x23c7c>
   353ac:	b	353b0 <__assert_fail@plt+0x23c5c>
   353b0:	ldr	r0, [fp, #-8]
   353b4:	ldr	r0, [r0]
   353b8:	ldr	r1, [fp, #-12]
   353bc:	mul	r0, r0, r1
   353c0:	asr	r1, r0, #31
   353c4:	str	r0, [fp, #-24]	; 0xffffffe8
   353c8:	str	r1, [fp, #-20]	; 0xffffffec
   353cc:	b	360a4 <__assert_fail@plt+0x24950>
   353d0:	ldr	r0, [fp, #-8]
   353d4:	ldr	r0, [r0]
   353d8:	ldr	r1, [fp, #-12]
   353dc:	mul	r0, r0, r1
   353e0:	asr	r1, r0, #31
   353e4:	str	r0, [fp, #-24]	; 0xffffffe8
   353e8:	str	r1, [fp, #-20]	; 0xffffffec
   353ec:	b	360d8 <__assert_fail@plt+0x24984>
   353f0:	ldr	r0, [fp, #-12]
   353f4:	cmp	r0, #0
   353f8:	bge	35540 <__assert_fail@plt+0x23dec>
   353fc:	ldr	r0, [fp, #-8]
   35400:	ldr	r0, [r0, #4]
   35404:	cmn	r0, #1
   35408:	bgt	354b0 <__assert_fail@plt+0x23d5c>
   3540c:	b	35410 <__assert_fail@plt+0x23cbc>
   35410:	b	3543c <__assert_fail@plt+0x23ce8>
   35414:	ldr	r0, [fp, #-8]
   35418:	ldr	r1, [r0]
   3541c:	ldr	r0, [r0, #4]
   35420:	ldr	r2, [fp, #-12]
   35424:	mvn	r3, #0
   35428:	udiv	r2, r3, r2
   3542c:	subs	r1, r1, r2
   35430:	sbcs	r0, r0, #0
   35434:	blt	35600 <__assert_fail@plt+0x23eac>
   35438:	b	35620 <__assert_fail@plt+0x23ecc>
   3543c:	b	35440 <__assert_fail@plt+0x23cec>
   35440:	ldr	r0, [pc, #3256]	; 36100 <__assert_fail@plt+0x249ac>
   35444:	ldr	r1, [fp, #-12]
   35448:	cmp	r1, r0
   3544c:	blt	35464 <__assert_fail@plt+0x23d10>
   35450:	b	35470 <__assert_fail@plt+0x23d1c>
   35454:	ldr	r0, [fp, #-12]
   35458:	movw	r1, #0
   3545c:	cmp	r1, r0
   35460:	bge	35470 <__assert_fail@plt+0x23d1c>
   35464:	movw	r0, #1
   35468:	str	r0, [fp, #-48]	; 0xffffffd0
   3546c:	b	35488 <__assert_fail@plt+0x23d34>
   35470:	ldr	r0, [fp, #-12]
   35474:	movw	r1, #0
   35478:	sub	r0, r1, r0
   3547c:	mvn	r1, #0
   35480:	udiv	r0, r1, r0
   35484:	str	r0, [fp, #-48]	; 0xffffffd0
   35488:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3548c:	ldr	r1, [fp, #-8]
   35490:	ldr	r2, [r1]
   35494:	ldr	r1, [r1, #4]
   35498:	mvn	r1, r1
   3549c:	mvn	r2, r2
   354a0:	subs	r0, r2, r0
   354a4:	sbcs	r1, r1, #0
   354a8:	bge	35600 <__assert_fail@plt+0x23eac>
   354ac:	b	35620 <__assert_fail@plt+0x23ecc>
   354b0:	b	354b4 <__assert_fail@plt+0x23d60>
   354b4:	b	35524 <__assert_fail@plt+0x23dd0>
   354b8:	b	35524 <__assert_fail@plt+0x23dd0>
   354bc:	ldr	r0, [fp, #-12]
   354c0:	cmn	r0, #1
   354c4:	bne	35524 <__assert_fail@plt+0x23dd0>
   354c8:	b	354cc <__assert_fail@plt+0x23d78>
   354cc:	ldr	r0, [fp, #-8]
   354d0:	ldr	r1, [r0]
   354d4:	ldr	r0, [r0, #4]
   354d8:	rsbs	r1, r1, #0
   354dc:	rscs	r0, r0, #0
   354e0:	blt	35600 <__assert_fail@plt+0x23eac>
   354e4:	b	35620 <__assert_fail@plt+0x23ecc>
   354e8:	ldr	r0, [fp, #-8]
   354ec:	ldr	r1, [r0]
   354f0:	ldr	r0, [r0, #4]
   354f4:	subs	r1, r1, #1
   354f8:	sbcs	r0, r0, #0
   354fc:	blt	35620 <__assert_fail@plt+0x23ecc>
   35500:	b	35504 <__assert_fail@plt+0x23db0>
   35504:	ldr	r0, [fp, #-8]
   35508:	ldr	r1, [r0]
   3550c:	ldr	r0, [r0, #4]
   35510:	subs	r1, r1, #1
   35514:	sbc	r0, r0, #0
   35518:	cmn	r0, #1
   3551c:	bgt	35600 <__assert_fail@plt+0x23eac>
   35520:	b	35620 <__assert_fail@plt+0x23ecc>
   35524:	ldr	r0, [fp, #-8]
   35528:	ldr	r1, [r0]
   3552c:	ldr	r0, [r0, #4]
   35530:	rsbs	r1, r1, #0
   35534:	rscs	r0, r0, #0
   35538:	blt	35600 <__assert_fail@plt+0x23eac>
   3553c:	b	35620 <__assert_fail@plt+0x23ecc>
   35540:	ldr	r0, [fp, #-12]
   35544:	cmp	r0, #0
   35548:	bne	35550 <__assert_fail@plt+0x23dfc>
   3554c:	b	35620 <__assert_fail@plt+0x23ecc>
   35550:	ldr	r0, [fp, #-8]
   35554:	ldr	r0, [r0, #4]
   35558:	cmn	r0, #1
   3555c:	bgt	355d8 <__assert_fail@plt+0x23e84>
   35560:	b	35564 <__assert_fail@plt+0x23e10>
   35564:	b	35568 <__assert_fail@plt+0x23e14>
   35568:	b	355c0 <__assert_fail@plt+0x23e6c>
   3556c:	b	355c0 <__assert_fail@plt+0x23e6c>
   35570:	ldr	r0, [fp, #-8]
   35574:	ldr	r1, [r0]
   35578:	ldr	r0, [r0, #4]
   3557c:	and	r0, r1, r0
   35580:	cmn	r0, #1
   35584:	bne	355c0 <__assert_fail@plt+0x23e6c>
   35588:	b	3558c <__assert_fail@plt+0x23e38>
   3558c:	b	35590 <__assert_fail@plt+0x23e3c>
   35590:	ldr	r0, [fp, #-12]
   35594:	add	r0, r0, #0
   35598:	movw	r1, #0
   3559c:	cmp	r1, r0
   355a0:	blt	35600 <__assert_fail@plt+0x23eac>
   355a4:	b	35620 <__assert_fail@plt+0x23ecc>
   355a8:	ldr	r0, [fp, #-12]
   355ac:	sub	r0, r0, #1
   355b0:	mvn	r1, #0
   355b4:	cmp	r1, r0
   355b8:	blt	35600 <__assert_fail@plt+0x23eac>
   355bc:	b	35620 <__assert_fail@plt+0x23ecc>
   355c0:	ldr	r0, [fp, #-12]
   355c4:	rsbs	r1, r0, #0
   355c8:	mov	r2, #0
   355cc:	sbcs	r0, r2, r0, asr #31
   355d0:	blt	35600 <__assert_fail@plt+0x23eac>
   355d4:	b	35620 <__assert_fail@plt+0x23ecc>
   355d8:	ldr	r0, [fp, #-12]
   355dc:	mvn	r1, #0
   355e0:	udiv	r0, r1, r0
   355e4:	ldr	r1, [fp, #-8]
   355e8:	ldr	r2, [r1]
   355ec:	ldr	r1, [r1, #4]
   355f0:	subs	r0, r0, r2
   355f4:	rscs	r1, r1, #0
   355f8:	bge	35620 <__assert_fail@plt+0x23ecc>
   355fc:	b	35600 <__assert_fail@plt+0x23eac>
   35600:	ldr	r0, [fp, #-8]
   35604:	ldr	r0, [r0]
   35608:	ldr	r1, [fp, #-12]
   3560c:	mul	r0, r0, r1
   35610:	mov	r1, #0
   35614:	str	r1, [fp, #-20]	; 0xffffffec
   35618:	str	r0, [fp, #-24]	; 0xffffffe8
   3561c:	b	360a4 <__assert_fail@plt+0x24950>
   35620:	ldr	r0, [fp, #-8]
   35624:	ldr	r0, [r0]
   35628:	ldr	r1, [fp, #-12]
   3562c:	mul	r0, r0, r1
   35630:	mov	r1, #0
   35634:	str	r1, [fp, #-20]	; 0xffffffec
   35638:	str	r0, [fp, #-24]	; 0xffffffe8
   3563c:	b	360d8 <__assert_fail@plt+0x24984>
   35640:	b	35b10 <__assert_fail@plt+0x243bc>
   35644:	b	35648 <__assert_fail@plt+0x23ef4>
   35648:	ldr	r0, [fp, #-12]
   3564c:	cmp	r0, #0
   35650:	bge	357a8 <__assert_fail@plt+0x24054>
   35654:	ldr	r0, [fp, #-8]
   35658:	ldr	r0, [r0, #4]
   3565c:	cmn	r0, #1
   35660:	bgt	35708 <__assert_fail@plt+0x23fb4>
   35664:	b	35668 <__assert_fail@plt+0x23f14>
   35668:	b	3566c <__assert_fail@plt+0x23f18>
   3566c:	ldr	r0, [fp, #-8]
   35670:	ldr	r1, [r0]
   35674:	ldr	r0, [r0, #4]
   35678:	ldr	r2, [fp, #-12]
   3567c:	mvn	r3, #-2147483648	; 0x80000000
   35680:	sdiv	r2, r3, r2
   35684:	subs	r1, r1, r2
   35688:	sbcs	r0, r0, r2, asr #31
   3568c:	blt	35880 <__assert_fail@plt+0x2412c>
   35690:	b	358a0 <__assert_fail@plt+0x2414c>
   35694:	b	35698 <__assert_fail@plt+0x23f44>
   35698:	ldr	r0, [pc, #2656]	; 36100 <__assert_fail@plt+0x249ac>
   3569c:	ldr	r1, [fp, #-12]
   356a0:	cmp	r1, r0
   356a4:	blt	356bc <__assert_fail@plt+0x23f68>
   356a8:	b	356c8 <__assert_fail@plt+0x23f74>
   356ac:	ldr	r0, [fp, #-12]
   356b0:	movw	r1, #0
   356b4:	cmp	r1, r0
   356b8:	bge	356c8 <__assert_fail@plt+0x23f74>
   356bc:	movw	r0, #0
   356c0:	str	r0, [fp, #-52]	; 0xffffffcc
   356c4:	b	356e0 <__assert_fail@plt+0x23f8c>
   356c8:	ldr	r0, [pc, #2612]	; 36104 <__assert_fail@plt+0x249b0>
   356cc:	ldr	r1, [fp, #-12]
   356d0:	movw	r2, #0
   356d4:	sub	r1, r2, r1
   356d8:	sdiv	r0, r0, r1
   356dc:	str	r0, [fp, #-52]	; 0xffffffcc
   356e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   356e4:	ldr	r1, [fp, #-8]
   356e8:	ldr	r2, [r1]
   356ec:	ldr	r1, [r1, #4]
   356f0:	mvn	r1, r1
   356f4:	mvn	r2, r2
   356f8:	subs	r2, r2, r0
   356fc:	sbcs	r0, r1, r0, asr #31
   35700:	bge	35880 <__assert_fail@plt+0x2412c>
   35704:	b	358a0 <__assert_fail@plt+0x2414c>
   35708:	ldr	r0, [fp, #-12]
   3570c:	cmn	r0, #1
   35710:	bne	35780 <__assert_fail@plt+0x2402c>
   35714:	b	35718 <__assert_fail@plt+0x23fc4>
   35718:	ldr	r0, [fp, #-8]
   3571c:	ldr	r1, [r0]
   35720:	ldr	r0, [r0, #4]
   35724:	adds	r1, r1, #-2147483648	; 0x80000000
   35728:	sbc	r0, r0, #0
   3572c:	rsbs	r1, r1, #0
   35730:	rscs	r0, r0, #0
   35734:	blt	35880 <__assert_fail@plt+0x2412c>
   35738:	b	358a0 <__assert_fail@plt+0x2414c>
   3573c:	ldr	r0, [fp, #-8]
   35740:	ldr	r1, [r0]
   35744:	ldr	r0, [r0, #4]
   35748:	subs	r1, r1, #1
   3574c:	sbcs	r0, r0, #0
   35750:	blt	358a0 <__assert_fail@plt+0x2414c>
   35754:	b	35758 <__assert_fail@plt+0x24004>
   35758:	ldr	r0, [fp, #-8]
   3575c:	ldr	r1, [r0]
   35760:	ldr	r0, [r0, #4]
   35764:	subs	r1, r1, #1
   35768:	sbc	r0, r0, #0
   3576c:	mvn	r2, #-2147483648	; 0x80000000
   35770:	subs	r1, r2, r1
   35774:	rscs	r0, r0, #0
   35778:	blt	35880 <__assert_fail@plt+0x2412c>
   3577c:	b	358a0 <__assert_fail@plt+0x2414c>
   35780:	ldr	r0, [fp, #-12]
   35784:	mov	r1, #-2147483648	; 0x80000000
   35788:	sdiv	r0, r1, r0
   3578c:	ldr	r1, [fp, #-8]
   35790:	ldr	r2, [r1]
   35794:	ldr	r1, [r1, #4]
   35798:	subs	r2, r0, r2
   3579c:	rscs	r0, r1, r0, asr #31
   357a0:	blt	35880 <__assert_fail@plt+0x2412c>
   357a4:	b	358a0 <__assert_fail@plt+0x2414c>
   357a8:	ldr	r0, [fp, #-12]
   357ac:	cmp	r0, #0
   357b0:	bne	357b8 <__assert_fail@plt+0x24064>
   357b4:	b	358a0 <__assert_fail@plt+0x2414c>
   357b8:	ldr	r0, [fp, #-8]
   357bc:	ldr	r0, [r0, #4]
   357c0:	cmn	r0, #1
   357c4:	bgt	35858 <__assert_fail@plt+0x24104>
   357c8:	b	357cc <__assert_fail@plt+0x24078>
   357cc:	b	357d0 <__assert_fail@plt+0x2407c>
   357d0:	b	3582c <__assert_fail@plt+0x240d8>
   357d4:	b	3582c <__assert_fail@plt+0x240d8>
   357d8:	ldr	r0, [fp, #-8]
   357dc:	ldr	r1, [r0]
   357e0:	ldr	r0, [r0, #4]
   357e4:	and	r0, r1, r0
   357e8:	cmn	r0, #1
   357ec:	bne	3582c <__assert_fail@plt+0x240d8>
   357f0:	b	357f8 <__assert_fail@plt+0x240a4>
   357f4:	andhi	r0, r0, r1
   357f8:	b	357fc <__assert_fail@plt+0x240a8>
   357fc:	ldr	r0, [fp, #-12]
   35800:	add	r0, r0, #-2147483648	; 0x80000000
   35804:	movw	r1, #0
   35808:	cmp	r1, r0
   3580c:	blt	35880 <__assert_fail@plt+0x2412c>
   35810:	b	358a0 <__assert_fail@plt+0x2414c>
   35814:	ldr	r0, [pc, #2280]	; 36104 <__assert_fail@plt+0x249b0>
   35818:	ldr	r1, [fp, #-12]
   3581c:	sub	r1, r1, #1
   35820:	cmp	r0, r1
   35824:	blt	35880 <__assert_fail@plt+0x2412c>
   35828:	b	358a0 <__assert_fail@plt+0x2414c>
   3582c:	ldr	r0, [fp, #-8]
   35830:	ldr	r2, [r0]
   35834:	ldr	r3, [r0, #4]
   35838:	mov	r0, #-2147483648	; 0x80000000
   3583c:	mvn	r1, #0
   35840:	bl	3ba78 <__assert_fail@plt+0x2a324>
   35844:	ldr	r2, [fp, #-12]
   35848:	subs	r0, r0, r2
   3584c:	sbcs	r1, r1, r2, asr #31
   35850:	blt	35880 <__assert_fail@plt+0x2412c>
   35854:	b	358a0 <__assert_fail@plt+0x2414c>
   35858:	ldr	r0, [fp, #-12]
   3585c:	mvn	r1, #-2147483648	; 0x80000000
   35860:	sdiv	r0, r1, r0
   35864:	ldr	r1, [fp, #-8]
   35868:	ldr	r2, [r1]
   3586c:	ldr	r1, [r1, #4]
   35870:	subs	r2, r0, r2
   35874:	rscs	r0, r1, r0, asr #31
   35878:	bge	358a0 <__assert_fail@plt+0x2414c>
   3587c:	b	35880 <__assert_fail@plt+0x2412c>
   35880:	ldr	r0, [fp, #-8]
   35884:	ldr	r0, [r0]
   35888:	ldr	r1, [fp, #-12]
   3588c:	mul	r0, r0, r1
   35890:	asr	r1, r0, #31
   35894:	str	r0, [fp, #-24]	; 0xffffffe8
   35898:	str	r1, [fp, #-20]	; 0xffffffec
   3589c:	b	360a4 <__assert_fail@plt+0x24950>
   358a0:	ldr	r0, [fp, #-8]
   358a4:	ldr	r0, [r0]
   358a8:	ldr	r1, [fp, #-12]
   358ac:	mul	r0, r0, r1
   358b0:	asr	r1, r0, #31
   358b4:	str	r0, [fp, #-24]	; 0xffffffe8
   358b8:	str	r1, [fp, #-20]	; 0xffffffec
   358bc:	b	360d8 <__assert_fail@plt+0x24984>
   358c0:	ldr	r0, [fp, #-12]
   358c4:	cmp	r0, #0
   358c8:	bge	35a10 <__assert_fail@plt+0x242bc>
   358cc:	ldr	r0, [fp, #-8]
   358d0:	ldr	r0, [r0, #4]
   358d4:	cmn	r0, #1
   358d8:	bgt	35980 <__assert_fail@plt+0x2422c>
   358dc:	b	358e0 <__assert_fail@plt+0x2418c>
   358e0:	b	3590c <__assert_fail@plt+0x241b8>
   358e4:	ldr	r0, [fp, #-8]
   358e8:	ldr	r1, [r0]
   358ec:	ldr	r0, [r0, #4]
   358f0:	ldr	r2, [fp, #-12]
   358f4:	mvn	r3, #0
   358f8:	udiv	r2, r3, r2
   358fc:	subs	r1, r1, r2
   35900:	sbcs	r0, r0, #0
   35904:	blt	35ad0 <__assert_fail@plt+0x2437c>
   35908:	b	35af0 <__assert_fail@plt+0x2439c>
   3590c:	b	35910 <__assert_fail@plt+0x241bc>
   35910:	ldr	r0, [pc, #2024]	; 36100 <__assert_fail@plt+0x249ac>
   35914:	ldr	r1, [fp, #-12]
   35918:	cmp	r1, r0
   3591c:	blt	35934 <__assert_fail@plt+0x241e0>
   35920:	b	35940 <__assert_fail@plt+0x241ec>
   35924:	ldr	r0, [fp, #-12]
   35928:	movw	r1, #0
   3592c:	cmp	r1, r0
   35930:	bge	35940 <__assert_fail@plt+0x241ec>
   35934:	movw	r0, #1
   35938:	str	r0, [sp, #56]	; 0x38
   3593c:	b	35958 <__assert_fail@plt+0x24204>
   35940:	ldr	r0, [fp, #-12]
   35944:	movw	r1, #0
   35948:	sub	r0, r1, r0
   3594c:	mvn	r1, #0
   35950:	udiv	r0, r1, r0
   35954:	str	r0, [sp, #56]	; 0x38
   35958:	ldr	r0, [sp, #56]	; 0x38
   3595c:	ldr	r1, [fp, #-8]
   35960:	ldr	r2, [r1]
   35964:	ldr	r1, [r1, #4]
   35968:	mvn	r1, r1
   3596c:	mvn	r2, r2
   35970:	subs	r0, r2, r0
   35974:	sbcs	r1, r1, #0
   35978:	bge	35ad0 <__assert_fail@plt+0x2437c>
   3597c:	b	35af0 <__assert_fail@plt+0x2439c>
   35980:	b	35984 <__assert_fail@plt+0x24230>
   35984:	b	359f4 <__assert_fail@plt+0x242a0>
   35988:	b	359f4 <__assert_fail@plt+0x242a0>
   3598c:	ldr	r0, [fp, #-12]
   35990:	cmn	r0, #1
   35994:	bne	359f4 <__assert_fail@plt+0x242a0>
   35998:	b	3599c <__assert_fail@plt+0x24248>
   3599c:	ldr	r0, [fp, #-8]
   359a0:	ldr	r1, [r0]
   359a4:	ldr	r0, [r0, #4]
   359a8:	rsbs	r1, r1, #0
   359ac:	rscs	r0, r0, #0
   359b0:	blt	35ad0 <__assert_fail@plt+0x2437c>
   359b4:	b	35af0 <__assert_fail@plt+0x2439c>
   359b8:	ldr	r0, [fp, #-8]
   359bc:	ldr	r1, [r0]
   359c0:	ldr	r0, [r0, #4]
   359c4:	subs	r1, r1, #1
   359c8:	sbcs	r0, r0, #0
   359cc:	blt	35af0 <__assert_fail@plt+0x2439c>
   359d0:	b	359d4 <__assert_fail@plt+0x24280>
   359d4:	ldr	r0, [fp, #-8]
   359d8:	ldr	r1, [r0]
   359dc:	ldr	r0, [r0, #4]
   359e0:	subs	r1, r1, #1
   359e4:	sbc	r0, r0, #0
   359e8:	cmn	r0, #1
   359ec:	bgt	35ad0 <__assert_fail@plt+0x2437c>
   359f0:	b	35af0 <__assert_fail@plt+0x2439c>
   359f4:	ldr	r0, [fp, #-8]
   359f8:	ldr	r1, [r0]
   359fc:	ldr	r0, [r0, #4]
   35a00:	rsbs	r1, r1, #0
   35a04:	rscs	r0, r0, #0
   35a08:	blt	35ad0 <__assert_fail@plt+0x2437c>
   35a0c:	b	35af0 <__assert_fail@plt+0x2439c>
   35a10:	ldr	r0, [fp, #-12]
   35a14:	cmp	r0, #0
   35a18:	bne	35a20 <__assert_fail@plt+0x242cc>
   35a1c:	b	35af0 <__assert_fail@plt+0x2439c>
   35a20:	ldr	r0, [fp, #-8]
   35a24:	ldr	r0, [r0, #4]
   35a28:	cmn	r0, #1
   35a2c:	bgt	35aa8 <__assert_fail@plt+0x24354>
   35a30:	b	35a34 <__assert_fail@plt+0x242e0>
   35a34:	b	35a38 <__assert_fail@plt+0x242e4>
   35a38:	b	35a90 <__assert_fail@plt+0x2433c>
   35a3c:	b	35a90 <__assert_fail@plt+0x2433c>
   35a40:	ldr	r0, [fp, #-8]
   35a44:	ldr	r1, [r0]
   35a48:	ldr	r0, [r0, #4]
   35a4c:	and	r0, r1, r0
   35a50:	cmn	r0, #1
   35a54:	bne	35a90 <__assert_fail@plt+0x2433c>
   35a58:	b	35a5c <__assert_fail@plt+0x24308>
   35a5c:	b	35a60 <__assert_fail@plt+0x2430c>
   35a60:	ldr	r0, [fp, #-12]
   35a64:	add	r0, r0, #0
   35a68:	movw	r1, #0
   35a6c:	cmp	r1, r0
   35a70:	blt	35ad0 <__assert_fail@plt+0x2437c>
   35a74:	b	35af0 <__assert_fail@plt+0x2439c>
   35a78:	ldr	r0, [fp, #-12]
   35a7c:	sub	r0, r0, #1
   35a80:	mvn	r1, #0
   35a84:	cmp	r1, r0
   35a88:	blt	35ad0 <__assert_fail@plt+0x2437c>
   35a8c:	b	35af0 <__assert_fail@plt+0x2439c>
   35a90:	ldr	r0, [fp, #-12]
   35a94:	rsbs	r1, r0, #0
   35a98:	mov	r2, #0
   35a9c:	sbcs	r0, r2, r0, asr #31
   35aa0:	blt	35ad0 <__assert_fail@plt+0x2437c>
   35aa4:	b	35af0 <__assert_fail@plt+0x2439c>
   35aa8:	ldr	r0, [fp, #-12]
   35aac:	mvn	r1, #0
   35ab0:	udiv	r0, r1, r0
   35ab4:	ldr	r1, [fp, #-8]
   35ab8:	ldr	r2, [r1]
   35abc:	ldr	r1, [r1, #4]
   35ac0:	subs	r0, r0, r2
   35ac4:	rscs	r1, r1, #0
   35ac8:	bge	35af0 <__assert_fail@plt+0x2439c>
   35acc:	b	35ad0 <__assert_fail@plt+0x2437c>
   35ad0:	ldr	r0, [fp, #-8]
   35ad4:	ldr	r0, [r0]
   35ad8:	ldr	r1, [fp, #-12]
   35adc:	mul	r0, r0, r1
   35ae0:	mov	r1, #0
   35ae4:	str	r1, [fp, #-20]	; 0xffffffec
   35ae8:	str	r0, [fp, #-24]	; 0xffffffe8
   35aec:	b	360a4 <__assert_fail@plt+0x24950>
   35af0:	ldr	r0, [fp, #-8]
   35af4:	ldr	r0, [r0]
   35af8:	ldr	r1, [fp, #-12]
   35afc:	mul	r0, r0, r1
   35b00:	mov	r1, #0
   35b04:	str	r1, [fp, #-20]	; 0xffffffec
   35b08:	str	r0, [fp, #-24]	; 0xffffffe8
   35b0c:	b	360d8 <__assert_fail@plt+0x24984>
   35b10:	b	35b14 <__assert_fail@plt+0x243c0>
   35b14:	ldr	r0, [fp, #-12]
   35b18:	cmp	r0, #0
   35b1c:	bge	35cb8 <__assert_fail@plt+0x24564>
   35b20:	ldr	r0, [fp, #-8]
   35b24:	ldr	r0, [r0, #4]
   35b28:	cmn	r0, #1
   35b2c:	bgt	35c1c <__assert_fail@plt+0x244c8>
   35b30:	b	35b34 <__assert_fail@plt+0x243e0>
   35b34:	b	35b38 <__assert_fail@plt+0x243e4>
   35b38:	ldr	r0, [fp, #-8]
   35b3c:	ldr	r1, [r0]
   35b40:	ldr	r0, [r0, #4]
   35b44:	ldr	r2, [fp, #-12]
   35b48:	asr	r3, r2, #31
   35b4c:	mvn	ip, #0
   35b50:	mvn	lr, #-2147483648	; 0x80000000
   35b54:	str	r0, [sp, #52]	; 0x34
   35b58:	mov	r0, ip
   35b5c:	str	r1, [sp, #48]	; 0x30
   35b60:	mov	r1, lr
   35b64:	bl	3ba78 <__assert_fail@plt+0x2a324>
   35b68:	ldr	r2, [sp, #48]	; 0x30
   35b6c:	subs	r0, r2, r0
   35b70:	ldr	r2, [sp, #52]	; 0x34
   35b74:	sbcs	r1, r2, r1
   35b78:	blt	35d94 <__assert_fail@plt+0x24640>
   35b7c:	b	35dc0 <__assert_fail@plt+0x2466c>
   35b80:	b	35b84 <__assert_fail@plt+0x24430>
   35b84:	ldr	r0, [pc, #1396]	; 36100 <__assert_fail@plt+0x249ac>
   35b88:	ldr	r1, [fp, #-12]
   35b8c:	cmp	r1, r0
   35b90:	blt	35ba8 <__assert_fail@plt+0x24454>
   35b94:	b	35bbc <__assert_fail@plt+0x24468>
   35b98:	ldr	r0, [fp, #-12]
   35b9c:	movw	r1, #0
   35ba0:	cmp	r1, r0
   35ba4:	bge	35bbc <__assert_fail@plt+0x24468>
   35ba8:	mov	r0, #0
   35bac:	mvn	r1, #0
   35bb0:	str	r1, [sp, #44]	; 0x2c
   35bb4:	str	r0, [sp, #40]	; 0x28
   35bb8:	b	35bf0 <__assert_fail@plt+0x2449c>
   35bbc:	ldr	r0, [fp, #-12]
   35bc0:	rsb	r0, r0, #0
   35bc4:	asr	r3, r0, #31
   35bc8:	mvn	r1, #0
   35bcc:	mvn	r2, #-2147483648	; 0x80000000
   35bd0:	str	r0, [sp, #36]	; 0x24
   35bd4:	mov	r0, r1
   35bd8:	mov	r1, r2
   35bdc:	ldr	r2, [sp, #36]	; 0x24
   35be0:	bl	3ba78 <__assert_fail@plt+0x2a324>
   35be4:	str	r0, [sp, #44]	; 0x2c
   35be8:	str	r1, [sp, #40]	; 0x28
   35bec:	b	35bf0 <__assert_fail@plt+0x2449c>
   35bf0:	ldr	r0, [sp, #40]	; 0x28
   35bf4:	ldr	r1, [sp, #44]	; 0x2c
   35bf8:	ldr	r2, [fp, #-8]
   35bfc:	ldr	r3, [r2]
   35c00:	ldr	r2, [r2, #4]
   35c04:	mvn	r2, r2
   35c08:	mvn	r3, r3
   35c0c:	subs	r1, r3, r1
   35c10:	sbcs	r0, r2, r0
   35c14:	bge	35d94 <__assert_fail@plt+0x24640>
   35c18:	b	35dc0 <__assert_fail@plt+0x2466c>
   35c1c:	ldr	r0, [fp, #-12]
   35c20:	cmn	r0, #1
   35c24:	bne	35c78 <__assert_fail@plt+0x24524>
   35c28:	b	35c2c <__assert_fail@plt+0x244d8>
   35c2c:	ldr	r0, [fp, #-8]
   35c30:	ldr	r1, [r0]
   35c34:	ldr	r0, [r0, #4]
   35c38:	add	r0, r0, #-2147483648	; 0x80000000
   35c3c:	rsbs	r1, r1, #0
   35c40:	rscs	r0, r0, #0
   35c44:	blt	35d94 <__assert_fail@plt+0x24640>
   35c48:	b	35dc0 <__assert_fail@plt+0x2466c>
   35c4c:	ldr	r0, [fp, #-8]
   35c50:	ldr	r1, [r0]
   35c54:	ldr	r0, [r0, #4]
   35c58:	subs	r1, r1, #1
   35c5c:	sbcs	r0, r0, #0
   35c60:	blt	35dc0 <__assert_fail@plt+0x2466c>
   35c64:	b	35c68 <__assert_fail@plt+0x24514>
   35c68:	mov	r0, #0
   35c6c:	cmp	r0, #0
   35c70:	bne	35d94 <__assert_fail@plt+0x24640>
   35c74:	b	35dc0 <__assert_fail@plt+0x2466c>
   35c78:	ldr	r0, [fp, #-12]
   35c7c:	asr	r3, r0, #31
   35c80:	mov	r1, #0
   35c84:	mov	r2, #-2147483648	; 0x80000000
   35c88:	str	r0, [sp, #32]
   35c8c:	mov	r0, r1
   35c90:	mov	r1, r2
   35c94:	ldr	r2, [sp, #32]
   35c98:	bl	3ba78 <__assert_fail@plt+0x2a324>
   35c9c:	ldr	r2, [fp, #-8]
   35ca0:	ldr	r3, [r2]
   35ca4:	ldr	r2, [r2, #4]
   35ca8:	subs	r0, r0, r3
   35cac:	sbcs	r1, r1, r2
   35cb0:	blt	35d94 <__assert_fail@plt+0x24640>
   35cb4:	b	35dc0 <__assert_fail@plt+0x2466c>
   35cb8:	ldr	r0, [fp, #-12]
   35cbc:	cmp	r0, #0
   35cc0:	bne	35cc8 <__assert_fail@plt+0x24574>
   35cc4:	b	35dc0 <__assert_fail@plt+0x2466c>
   35cc8:	ldr	r0, [fp, #-8]
   35ccc:	ldr	r0, [r0, #4]
   35cd0:	cmn	r0, #1
   35cd4:	bgt	35d54 <__assert_fail@plt+0x24600>
   35cd8:	b	35cdc <__assert_fail@plt+0x24588>
   35cdc:	ldr	r0, [fp, #-8]
   35ce0:	ldr	r1, [r0]
   35ce4:	ldr	r0, [r0, #4]
   35ce8:	and	r0, r1, r0
   35cec:	cmn	r0, #1
   35cf0:	bne	35d28 <__assert_fail@plt+0x245d4>
   35cf4:	b	35cf8 <__assert_fail@plt+0x245a4>
   35cf8:	b	35cfc <__assert_fail@plt+0x245a8>
   35cfc:	ldr	r0, [fp, #-12]
   35d00:	mov	r1, #-2147483648	; 0x80000000
   35d04:	add	r1, r1, r0, asr #31
   35d08:	rsbs	r0, r0, #0
   35d0c:	rscs	r1, r1, #0
   35d10:	blt	35d94 <__assert_fail@plt+0x24640>
   35d14:	b	35dc0 <__assert_fail@plt+0x2466c>
   35d18:	mov	r0, #0
   35d1c:	cmp	r0, #0
   35d20:	bne	35d94 <__assert_fail@plt+0x24640>
   35d24:	b	35dc0 <__assert_fail@plt+0x2466c>
   35d28:	ldr	r0, [fp, #-8]
   35d2c:	ldr	r2, [r0]
   35d30:	ldr	r3, [r0, #4]
   35d34:	mov	r0, #0
   35d38:	mov	r1, #-2147483648	; 0x80000000
   35d3c:	bl	3ba78 <__assert_fail@plt+0x2a324>
   35d40:	ldr	r2, [fp, #-12]
   35d44:	subs	r0, r0, r2
   35d48:	sbcs	r1, r1, r2, asr #31
   35d4c:	blt	35d94 <__assert_fail@plt+0x24640>
   35d50:	b	35dc0 <__assert_fail@plt+0x2466c>
   35d54:	ldr	r0, [fp, #-12]
   35d58:	asr	r3, r0, #31
   35d5c:	mvn	r1, #0
   35d60:	mvn	r2, #-2147483648	; 0x80000000
   35d64:	str	r0, [sp, #28]
   35d68:	mov	r0, r1
   35d6c:	mov	r1, r2
   35d70:	ldr	r2, [sp, #28]
   35d74:	bl	3ba78 <__assert_fail@plt+0x2a324>
   35d78:	ldr	r2, [fp, #-8]
   35d7c:	ldr	r3, [r2]
   35d80:	ldr	r2, [r2, #4]
   35d84:	subs	r0, r0, r3
   35d88:	sbcs	r1, r1, r2
   35d8c:	bge	35dc0 <__assert_fail@plt+0x2466c>
   35d90:	b	35d94 <__assert_fail@plt+0x24640>
   35d94:	ldr	r0, [fp, #-8]
   35d98:	ldr	r1, [r0]
   35d9c:	ldr	r0, [r0, #4]
   35da0:	ldr	r2, [fp, #-12]
   35da4:	asr	r3, r2, #31
   35da8:	umull	ip, lr, r1, r2
   35dac:	mla	r1, r1, r3, lr
   35db0:	mla	r0, r0, r2, r1
   35db4:	str	ip, [fp, #-24]	; 0xffffffe8
   35db8:	str	r0, [fp, #-20]	; 0xffffffec
   35dbc:	b	360a4 <__assert_fail@plt+0x24950>
   35dc0:	ldr	r0, [fp, #-8]
   35dc4:	ldr	r1, [r0]
   35dc8:	ldr	r0, [r0, #4]
   35dcc:	ldr	r2, [fp, #-12]
   35dd0:	asr	r3, r2, #31
   35dd4:	umull	ip, lr, r1, r2
   35dd8:	mla	r1, r1, r3, lr
   35ddc:	mla	r0, r0, r2, r1
   35de0:	str	ip, [fp, #-24]	; 0xffffffe8
   35de4:	str	r0, [fp, #-20]	; 0xffffffec
   35de8:	b	360d8 <__assert_fail@plt+0x24984>
   35dec:	ldr	r0, [fp, #-12]
   35df0:	cmp	r0, #0
   35df4:	bge	35f7c <__assert_fail@plt+0x24828>
   35df8:	ldr	r0, [fp, #-8]
   35dfc:	ldr	r0, [r0, #4]
   35e00:	cmn	r0, #1
   35e04:	bgt	35eec <__assert_fail@plt+0x24798>
   35e08:	b	35e0c <__assert_fail@plt+0x246b8>
   35e0c:	b	35e58 <__assert_fail@plt+0x24704>
   35e10:			; <UNDEFINED> instruction: 0xffff8000
   35e14:	ldr	r0, [fp, #-8]
   35e18:	ldr	r1, [r0]
   35e1c:	ldr	r0, [r0, #4]
   35e20:	ldr	r2, [fp, #-12]
   35e24:	asr	r3, r2, #31
   35e28:	mvn	ip, #0
   35e2c:	str	r0, [sp, #24]
   35e30:	mov	r0, ip
   35e34:	str	r1, [sp, #20]
   35e38:	mov	r1, ip
   35e3c:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   35e40:	ldr	r2, [sp, #20]
   35e44:	subs	r0, r2, r0
   35e48:	ldr	r2, [sp, #24]
   35e4c:	sbcs	r1, r2, r1
   35e50:	bcc	3604c <__assert_fail@plt+0x248f8>
   35e54:	b	36078 <__assert_fail@plt+0x24924>
   35e58:	b	35e5c <__assert_fail@plt+0x24708>
   35e5c:	ldr	r0, [pc, #668]	; 36100 <__assert_fail@plt+0x249ac>
   35e60:	ldr	r1, [fp, #-12]
   35e64:	cmp	r1, r0
   35e68:	blt	35e80 <__assert_fail@plt+0x2472c>
   35e6c:	b	35e94 <__assert_fail@plt+0x24740>
   35e70:	ldr	r0, [fp, #-12]
   35e74:	movw	r1, #0
   35e78:	cmp	r1, r0
   35e7c:	bge	35e94 <__assert_fail@plt+0x24740>
   35e80:	mov	r0, #1
   35e84:	mvn	r1, #0
   35e88:	str	r1, [sp, #16]
   35e8c:	str	r0, [sp, #12]
   35e90:	b	35ec0 <__assert_fail@plt+0x2476c>
   35e94:	ldr	r0, [fp, #-12]
   35e98:	rsb	r0, r0, #0
   35e9c:	asr	r3, r0, #31
   35ea0:	mvn	r1, #0
   35ea4:	str	r0, [sp, #8]
   35ea8:	mov	r0, r1
   35eac:	ldr	r2, [sp, #8]
   35eb0:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   35eb4:	str	r0, [sp, #16]
   35eb8:	str	r1, [sp, #12]
   35ebc:	b	35ec0 <__assert_fail@plt+0x2476c>
   35ec0:	ldr	r0, [sp, #12]
   35ec4:	ldr	r1, [sp, #16]
   35ec8:	ldr	r2, [fp, #-8]
   35ecc:	ldr	r3, [r2]
   35ed0:	ldr	r2, [r2, #4]
   35ed4:	mvn	r2, r2
   35ed8:	mvn	r3, r3
   35edc:	subs	r1, r3, r1
   35ee0:	sbcs	r0, r2, r0
   35ee4:	bcs	3604c <__assert_fail@plt+0x248f8>
   35ee8:	b	36078 <__assert_fail@plt+0x24924>
   35eec:	b	35ef0 <__assert_fail@plt+0x2479c>
   35ef0:	b	35f60 <__assert_fail@plt+0x2480c>
   35ef4:	b	35f60 <__assert_fail@plt+0x2480c>
   35ef8:	ldr	r0, [fp, #-12]
   35efc:	cmn	r0, #1
   35f00:	bne	35f60 <__assert_fail@plt+0x2480c>
   35f04:	b	35f08 <__assert_fail@plt+0x247b4>
   35f08:	ldr	r0, [fp, #-8]
   35f0c:	ldr	r1, [r0]
   35f10:	ldr	r0, [r0, #4]
   35f14:	rsbs	r1, r1, #0
   35f18:	rscs	r0, r0, #0
   35f1c:	blt	3604c <__assert_fail@plt+0x248f8>
   35f20:	b	36078 <__assert_fail@plt+0x24924>
   35f24:	ldr	r0, [fp, #-8]
   35f28:	ldr	r1, [r0]
   35f2c:	ldr	r0, [r0, #4]
   35f30:	subs	r1, r1, #1
   35f34:	sbcs	r0, r0, #0
   35f38:	blt	36078 <__assert_fail@plt+0x24924>
   35f3c:	b	35f40 <__assert_fail@plt+0x247ec>
   35f40:	ldr	r0, [fp, #-8]
   35f44:	ldr	r1, [r0]
   35f48:	ldr	r0, [r0, #4]
   35f4c:	subs	r1, r1, #1
   35f50:	sbc	r0, r0, #0
   35f54:	cmn	r0, #1
   35f58:	bgt	3604c <__assert_fail@plt+0x248f8>
   35f5c:	b	36078 <__assert_fail@plt+0x24924>
   35f60:	ldr	r0, [fp, #-8]
   35f64:	ldr	r1, [r0]
   35f68:	ldr	r0, [r0, #4]
   35f6c:	rsbs	r1, r1, #0
   35f70:	rscs	r0, r0, #0
   35f74:	blt	3604c <__assert_fail@plt+0x248f8>
   35f78:	b	36078 <__assert_fail@plt+0x24924>
   35f7c:	ldr	r0, [fp, #-12]
   35f80:	cmp	r0, #0
   35f84:	bne	35f8c <__assert_fail@plt+0x24838>
   35f88:	b	36078 <__assert_fail@plt+0x24924>
   35f8c:	ldr	r0, [fp, #-8]
   35f90:	ldr	r0, [r0, #4]
   35f94:	cmn	r0, #1
   35f98:	bgt	36014 <__assert_fail@plt+0x248c0>
   35f9c:	b	35fa0 <__assert_fail@plt+0x2484c>
   35fa0:	b	35fa4 <__assert_fail@plt+0x24850>
   35fa4:	b	35ffc <__assert_fail@plt+0x248a8>
   35fa8:	b	35ffc <__assert_fail@plt+0x248a8>
   35fac:	ldr	r0, [fp, #-8]
   35fb0:	ldr	r1, [r0]
   35fb4:	ldr	r0, [r0, #4]
   35fb8:	and	r0, r1, r0
   35fbc:	cmn	r0, #1
   35fc0:	bne	35ffc <__assert_fail@plt+0x248a8>
   35fc4:	b	35fc8 <__assert_fail@plt+0x24874>
   35fc8:	b	35fcc <__assert_fail@plt+0x24878>
   35fcc:	ldr	r0, [fp, #-12]
   35fd0:	add	r0, r0, #0
   35fd4:	movw	r1, #0
   35fd8:	cmp	r1, r0
   35fdc:	blt	3604c <__assert_fail@plt+0x248f8>
   35fe0:	b	36078 <__assert_fail@plt+0x24924>
   35fe4:	ldr	r0, [fp, #-12]
   35fe8:	sub	r0, r0, #1
   35fec:	mvn	r1, #0
   35ff0:	cmp	r1, r0
   35ff4:	blt	3604c <__assert_fail@plt+0x248f8>
   35ff8:	b	36078 <__assert_fail@plt+0x24924>
   35ffc:	ldr	r0, [fp, #-12]
   36000:	rsbs	r1, r0, #0
   36004:	mov	r2, #0
   36008:	sbcs	r0, r2, r0, asr #31
   3600c:	blt	3604c <__assert_fail@plt+0x248f8>
   36010:	b	36078 <__assert_fail@plt+0x24924>
   36014:	ldr	r0, [fp, #-12]
   36018:	asr	r3, r0, #31
   3601c:	mvn	r1, #0
   36020:	str	r0, [sp, #4]
   36024:	mov	r0, r1
   36028:	ldr	r2, [sp, #4]
   3602c:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   36030:	ldr	r2, [fp, #-8]
   36034:	ldr	r3, [r2]
   36038:	ldr	r2, [r2, #4]
   3603c:	subs	r0, r0, r3
   36040:	sbcs	r1, r1, r2
   36044:	bcs	36078 <__assert_fail@plt+0x24924>
   36048:	b	3604c <__assert_fail@plt+0x248f8>
   3604c:	ldr	r0, [fp, #-8]
   36050:	ldr	r1, [r0]
   36054:	ldr	r0, [r0, #4]
   36058:	ldr	r2, [fp, #-12]
   3605c:	asr	r3, r2, #31
   36060:	umull	ip, lr, r1, r2
   36064:	mla	r1, r1, r3, lr
   36068:	mla	r0, r0, r2, r1
   3606c:	str	ip, [fp, #-24]	; 0xffffffe8
   36070:	str	r0, [fp, #-20]	; 0xffffffec
   36074:	b	360a4 <__assert_fail@plt+0x24950>
   36078:	ldr	r0, [fp, #-8]
   3607c:	ldr	r1, [r0]
   36080:	ldr	r0, [r0, #4]
   36084:	ldr	r2, [fp, #-12]
   36088:	asr	r3, r2, #31
   3608c:	umull	ip, lr, r1, r2
   36090:	mla	r1, r1, r3, lr
   36094:	mla	r0, r0, r2, r1
   36098:	str	ip, [fp, #-24]	; 0xffffffe8
   3609c:	str	r0, [fp, #-20]	; 0xffffffec
   360a0:	b	360d8 <__assert_fail@plt+0x24984>
   360a4:	ldr	r0, [fp, #-8]
   360a8:	ldr	r1, [r0, #4]
   360ac:	mvn	r2, #0
   360b0:	cmp	r1, #0
   360b4:	movwmi	r2, #0
   360b8:	mvn	r3, #-2147483648	; 0x80000000
   360bc:	cmp	r1, #0
   360c0:	movmi	r3, #-2147483648	; 0x80000000
   360c4:	str	r3, [r0, #4]
   360c8:	str	r2, [r0]
   360cc:	movw	r0, #1
   360d0:	str	r0, [fp, #-4]
   360d4:	b	360f4 <__assert_fail@plt+0x249a0>
   360d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   360dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   360e0:	ldr	r2, [fp, #-8]
   360e4:	str	r1, [r2, #4]
   360e8:	str	r0, [r2]
   360ec:	movw	r0, #0
   360f0:	str	r0, [fp, #-4]
   360f4:	ldr	r0, [fp, #-4]
   360f8:	mov	sp, fp
   360fc:	pop	{fp, pc}
   36100:	andhi	r0, r0, r1
   36104:	svcvc	0x00ffffff
   36108:	push	{fp, lr}
   3610c:	mov	fp, sp
   36110:	sub	sp, sp, #16
   36114:	str	r0, [fp, #-4]
   36118:	str	r1, [sp, #8]
   3611c:	str	r2, [sp, #4]
   36120:	movw	r0, #0
   36124:	str	r0, [sp]
   36128:	ldr	r0, [sp, #4]
   3612c:	mvn	r1, #0
   36130:	add	r1, r0, r1
   36134:	str	r1, [sp, #4]
   36138:	cmp	r0, #0
   3613c:	beq	3615c <__assert_fail@plt+0x24a08>
   36140:	ldr	r0, [fp, #-4]
   36144:	ldr	r1, [sp, #8]
   36148:	bl	34784 <__assert_fail@plt+0x23030>
   3614c:	ldr	r1, [sp]
   36150:	orr	r0, r1, r0
   36154:	str	r0, [sp]
   36158:	b	36128 <__assert_fail@plt+0x249d4>
   3615c:	ldr	r0, [sp]
   36160:	mov	sp, fp
   36164:	pop	{fp, pc}
   36168:	push	{fp, lr}
   3616c:	mov	fp, sp
   36170:	sub	sp, sp, #80	; 0x50
   36174:	ldr	ip, [fp, #8]
   36178:	str	r0, [fp, #-8]
   3617c:	str	r1, [fp, #-12]
   36180:	str	r2, [fp, #-16]
   36184:	str	r3, [fp, #-20]	; 0xffffffec
   36188:	movw	r0, #0
   3618c:	str	r0, [sp, #36]	; 0x24
   36190:	ldr	r1, [fp, #-16]
   36194:	cmp	r0, r1
   36198:	bgt	361ac <__assert_fail@plt+0x24a58>
   3619c:	ldr	r0, [fp, #-16]
   361a0:	cmp	r0, #36	; 0x24
   361a4:	bgt	361ac <__assert_fail@plt+0x24a58>
   361a8:	b	361cc <__assert_fail@plt+0x24a78>
   361ac:	movw	r0, #53139	; 0xcf93
   361b0:	movt	r0, #3
   361b4:	movw	r1, #53177	; 0xcfb9
   361b8:	movt	r1, #3
   361bc:	movw	r2, #85	; 0x55
   361c0:	movw	r3, #53271	; 0xd017
   361c4:	movt	r3, #3
   361c8:	bl	11754 <__assert_fail@plt>
   361cc:	ldr	r0, [fp, #-12]
   361d0:	movw	r1, #0
   361d4:	cmp	r0, r1
   361d8:	beq	361e8 <__assert_fail@plt+0x24a94>
   361dc:	ldr	r0, [fp, #-12]
   361e0:	str	r0, [sp, #12]
   361e4:	b	361f4 <__assert_fail@plt+0x24aa0>
   361e8:	sub	r0, fp, #24
   361ec:	str	r0, [sp, #12]
   361f0:	b	361f4 <__assert_fail@plt+0x24aa0>
   361f4:	ldr	r0, [sp, #12]
   361f8:	str	r0, [fp, #-28]	; 0xffffffe4
   361fc:	bl	11628 <__errno_location@plt>
   36200:	movw	r1, #0
   36204:	str	r1, [r0]
   36208:	ldr	r0, [fp, #-8]
   3620c:	str	r0, [sp, #32]
   36210:	ldr	r0, [sp, #32]
   36214:	ldrb	r0, [r0]
   36218:	strb	r0, [sp, #31]
   3621c:	bl	115e0 <__ctype_b_loc@plt>
   36220:	ldr	r0, [r0]
   36224:	ldrb	r1, [sp, #31]
   36228:	mov	r2, r1
   3622c:	add	r0, r0, r1, lsl #1
   36230:	ldrh	r0, [r0]
   36234:	and	r0, r0, #8192	; 0x2000
   36238:	cmp	r0, #0
   3623c:	beq	36258 <__assert_fail@plt+0x24b04>
   36240:	ldr	r0, [sp, #32]
   36244:	add	r1, r0, #1
   36248:	str	r1, [sp, #32]
   3624c:	ldrb	r0, [r0, #1]
   36250:	strb	r0, [sp, #31]
   36254:	b	3621c <__assert_fail@plt+0x24ac8>
   36258:	ldrb	r0, [sp, #31]
   3625c:	cmp	r0, #45	; 0x2d
   36260:	bne	36270 <__assert_fail@plt+0x24b1c>
   36264:	movw	r0, #4
   36268:	str	r0, [fp, #-4]
   3626c:	b	367ec <__assert_fail@plt+0x25098>
   36270:	ldr	r0, [fp, #-8]
   36274:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36278:	ldr	r2, [fp, #-16]
   3627c:	bl	1167c <strtoumax@plt>
   36280:	str	r1, [sp, #44]	; 0x2c
   36284:	str	r0, [sp, #40]	; 0x28
   36288:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3628c:	ldr	r0, [r0]
   36290:	ldr	r1, [fp, #-8]
   36294:	cmp	r0, r1
   36298:	bne	36304 <__assert_fail@plt+0x24bb0>
   3629c:	ldr	r0, [fp, #8]
   362a0:	movw	r1, #0
   362a4:	cmp	r0, r1
   362a8:	beq	362f4 <__assert_fail@plt+0x24ba0>
   362ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   362b0:	ldr	r0, [r0]
   362b4:	ldrb	r0, [r0]
   362b8:	cmp	r0, #0
   362bc:	beq	362f4 <__assert_fail@plt+0x24ba0>
   362c0:	ldr	r0, [fp, #8]
   362c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   362c8:	ldr	r1, [r1]
   362cc:	ldrb	r1, [r1]
   362d0:	bl	11610 <strchr@plt>
   362d4:	movw	r1, #0
   362d8:	cmp	r0, r1
   362dc:	beq	362f4 <__assert_fail@plt+0x24ba0>
   362e0:	mov	r0, #0
   362e4:	str	r0, [sp, #44]	; 0x2c
   362e8:	mov	r0, #1
   362ec:	str	r0, [sp, #40]	; 0x28
   362f0:	b	36300 <__assert_fail@plt+0x24bac>
   362f4:	movw	r0, #4
   362f8:	str	r0, [fp, #-4]
   362fc:	b	367ec <__assert_fail@plt+0x25098>
   36300:	b	3633c <__assert_fail@plt+0x24be8>
   36304:	bl	11628 <__errno_location@plt>
   36308:	ldr	r0, [r0]
   3630c:	cmp	r0, #0
   36310:	beq	36338 <__assert_fail@plt+0x24be4>
   36314:	bl	11628 <__errno_location@plt>
   36318:	ldr	r0, [r0]
   3631c:	cmp	r0, #34	; 0x22
   36320:	beq	36330 <__assert_fail@plt+0x24bdc>
   36324:	movw	r0, #4
   36328:	str	r0, [fp, #-4]
   3632c:	b	367ec <__assert_fail@plt+0x25098>
   36330:	movw	r0, #1
   36334:	str	r0, [sp, #36]	; 0x24
   36338:	b	3633c <__assert_fail@plt+0x24be8>
   3633c:	ldr	r0, [fp, #8]
   36340:	movw	r1, #0
   36344:	cmp	r0, r1
   36348:	bne	3636c <__assert_fail@plt+0x24c18>
   3634c:	ldr	r0, [sp, #40]	; 0x28
   36350:	ldr	r1, [sp, #44]	; 0x2c
   36354:	ldr	r2, [fp, #-20]	; 0xffffffec
   36358:	str	r1, [r2, #4]
   3635c:	str	r0, [r2]
   36360:	ldr	r0, [sp, #36]	; 0x24
   36364:	str	r0, [fp, #-4]
   36368:	b	367ec <__assert_fail@plt+0x25098>
   3636c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36370:	ldr	r0, [r0]
   36374:	ldrb	r0, [r0]
   36378:	cmp	r0, #0
   3637c:	beq	367d0 <__assert_fail@plt+0x2507c>
   36380:	movw	r0, #1024	; 0x400
   36384:	str	r0, [sp, #24]
   36388:	movw	r0, #1
   3638c:	str	r0, [sp, #20]
   36390:	ldr	r0, [fp, #8]
   36394:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36398:	ldr	r1, [r1]
   3639c:	ldrb	r1, [r1]
   363a0:	bl	11610 <strchr@plt>
   363a4:	movw	r1, #0
   363a8:	cmp	r0, r1
   363ac:	bne	363d4 <__assert_fail@plt+0x24c80>
   363b0:	ldr	r0, [sp, #40]	; 0x28
   363b4:	ldr	r1, [sp, #44]	; 0x2c
   363b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   363bc:	str	r1, [r2, #4]
   363c0:	str	r0, [r2]
   363c4:	ldr	r0, [sp, #36]	; 0x24
   363c8:	orr	r0, r0, #2
   363cc:	str	r0, [fp, #-4]
   363d0:	b	367ec <__assert_fail@plt+0x25098>
   363d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   363d8:	ldr	r0, [r0]
   363dc:	ldrb	r0, [r0]
   363e0:	sub	r0, r0, #69	; 0x45
   363e4:	cmp	r0, #47	; 0x2f
   363e8:	str	r0, [sp, #8]
   363ec:	bhi	36558 <__assert_fail@plt+0x24e04>
   363f0:	add	r0, pc, #8
   363f4:	ldr	r1, [sp, #8]
   363f8:	ldr	r0, [r0, r1, lsl #2]
   363fc:	mov	pc, r0
   36400:	andeq	r6, r3, r0, asr #9
   36404:	andeq	r6, r3, r8, asr r5
   36408:	andeq	r6, r3, r0, asr #9
   3640c:	andeq	r6, r3, r8, asr r5
   36410:	andeq	r6, r3, r8, asr r5
   36414:	andeq	r6, r3, r8, asr r5
   36418:	andeq	r6, r3, r0, asr #9
   3641c:	andeq	r6, r3, r8, asr r5
   36420:	andeq	r6, r3, r0, asr #9
   36424:	andeq	r6, r3, r8, asr r5
   36428:	andeq	r6, r3, r8, asr r5
   3642c:	andeq	r6, r3, r0, asr #9
   36430:	andeq	r6, r3, r8, asr r5
   36434:	andeq	r6, r3, r8, asr r5
   36438:	andeq	r6, r3, r8, asr r5
   3643c:	andeq	r6, r3, r0, asr #9
   36440:	andeq	r6, r3, r8, asr r5
   36444:	andeq	r6, r3, r8, asr r5
   36448:	andeq	r6, r3, r8, asr r5
   3644c:	andeq	r6, r3, r8, asr r5
   36450:	andeq	r6, r3, r0, asr #9
   36454:	andeq	r6, r3, r0, asr #9
   36458:	andeq	r6, r3, r8, asr r5
   3645c:	andeq	r6, r3, r8, asr r5
   36460:	andeq	r6, r3, r8, asr r5
   36464:	andeq	r6, r3, r8, asr r5
   36468:	andeq	r6, r3, r8, asr r5
   3646c:	andeq	r6, r3, r8, asr r5
   36470:	andeq	r6, r3, r8, asr r5
   36474:	andeq	r6, r3, r8, asr r5
   36478:	andeq	r6, r3, r8, asr r5
   3647c:	andeq	r6, r3, r8, asr r5
   36480:	andeq	r6, r3, r8, asr r5
   36484:	andeq	r6, r3, r8, asr r5
   36488:	andeq	r6, r3, r0, asr #9
   3648c:	andeq	r6, r3, r8, asr r5
   36490:	andeq	r6, r3, r8, asr r5
   36494:	andeq	r6, r3, r8, asr r5
   36498:	andeq	r6, r3, r0, asr #9
   3649c:	andeq	r6, r3, r8, asr r5
   364a0:	andeq	r6, r3, r0, asr #9
   364a4:	andeq	r6, r3, r8, asr r5
   364a8:	andeq	r6, r3, r8, asr r5
   364ac:	andeq	r6, r3, r8, asr r5
   364b0:	andeq	r6, r3, r8, asr r5
   364b4:	andeq	r6, r3, r8, asr r5
   364b8:	andeq	r6, r3, r8, asr r5
   364bc:	andeq	r6, r3, r0, asr #9
   364c0:	ldr	r0, [fp, #8]
   364c4:	movw	r1, #48	; 0x30
   364c8:	bl	11610 <strchr@plt>
   364cc:	movw	r1, #0
   364d0:	cmp	r0, r1
   364d4:	beq	36554 <__assert_fail@plt+0x24e00>
   364d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   364dc:	ldr	r0, [r0]
   364e0:	ldrb	r0, [r0, #1]
   364e4:	mov	r1, r0
   364e8:	cmp	r0, #66	; 0x42
   364ec:	str	r1, [sp, #4]
   364f0:	beq	3653c <__assert_fail@plt+0x24de8>
   364f4:	b	364f8 <__assert_fail@plt+0x24da4>
   364f8:	ldr	r0, [sp, #4]
   364fc:	cmp	r0, #68	; 0x44
   36500:	beq	3653c <__assert_fail@plt+0x24de8>
   36504:	b	36508 <__assert_fail@plt+0x24db4>
   36508:	ldr	r0, [sp, #4]
   3650c:	cmp	r0, #105	; 0x69
   36510:	bne	36550 <__assert_fail@plt+0x24dfc>
   36514:	b	36518 <__assert_fail@plt+0x24dc4>
   36518:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3651c:	ldr	r0, [r0]
   36520:	ldrb	r0, [r0, #2]
   36524:	cmp	r0, #66	; 0x42
   36528:	bne	36538 <__assert_fail@plt+0x24de4>
   3652c:	ldr	r0, [sp, #20]
   36530:	add	r0, r0, #2
   36534:	str	r0, [sp, #20]
   36538:	b	36550 <__assert_fail@plt+0x24dfc>
   3653c:	movw	r0, #1000	; 0x3e8
   36540:	str	r0, [sp, #24]
   36544:	ldr	r0, [sp, #20]
   36548:	add	r0, r0, #1
   3654c:	str	r0, [sp, #20]
   36550:	b	36554 <__assert_fail@plt+0x24e00>
   36554:	b	36558 <__assert_fail@plt+0x24e04>
   36558:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3655c:	ldr	r0, [r0]
   36560:	ldrb	r0, [r0]
   36564:	sub	r0, r0, #66	; 0x42
   36568:	cmp	r0, #53	; 0x35
   3656c:	str	r0, [sp]
   36570:	bhi	36764 <__assert_fail@plt+0x25010>
   36574:	add	r0, pc, #8
   36578:	ldr	r1, [sp]
   3657c:	ldr	r0, [r0, r1, lsl #2]
   36580:	mov	pc, r0
   36584:	andeq	r6, r3, r0, ror r6
   36588:	andeq	r6, r3, r4, ror #14
   3658c:	andeq	r6, r3, r4, ror #14
   36590:	muleq	r3, r0, r6
   36594:	andeq	r6, r3, r4, ror #14
   36598:	andeq	r6, r3, r8, lsr #13
   3659c:	andeq	r6, r3, r4, ror #14
   365a0:	andeq	r6, r3, r4, ror #14
   365a4:	andeq	r6, r3, r4, ror #14
   365a8:	andeq	r6, r3, r0, asr #13
   365ac:	andeq	r6, r3, r4, ror #14
   365b0:	ldrdeq	r6, [r3], -r8
   365b4:	andeq	r6, r3, r4, ror #14
   365b8:	andeq	r6, r3, r4, ror #14
   365bc:	strdeq	r6, [r3], -r0
   365c0:	andeq	r6, r3, r4, ror #14
   365c4:	andeq	r6, r3, r4, ror #14
   365c8:	andeq	r6, r3, r4, ror #14
   365cc:	andeq	r6, r3, r8, lsl #14
   365d0:	andeq	r6, r3, r4, ror #14
   365d4:	andeq	r6, r3, r4, ror #14
   365d8:	andeq	r6, r3, r4, ror #14
   365dc:	andeq	r6, r3, r4, ror #14
   365e0:	andeq	r6, r3, r4, lsr r7
   365e4:	andeq	r6, r3, ip, asr #14
   365e8:	andeq	r6, r3, r4, ror #14
   365ec:	andeq	r6, r3, r4, ror #14
   365f0:	andeq	r6, r3, r4, ror #14
   365f4:	andeq	r6, r3, r4, ror #14
   365f8:	andeq	r6, r3, r4, ror #14
   365fc:	andeq	r6, r3, r4, ror #14
   36600:	andeq	r6, r3, r4, ror #14
   36604:	andeq	r6, r3, ip, asr r6
   36608:	andeq	r6, r3, r4, lsl #13
   3660c:	andeq	r6, r3, r4, ror #14
   36610:	andeq	r6, r3, r4, ror #14
   36614:	andeq	r6, r3, r4, ror #14
   36618:	andeq	r6, r3, r8, lsr #13
   3661c:	andeq	r6, r3, r4, ror #14
   36620:	andeq	r6, r3, r4, ror #14
   36624:	andeq	r6, r3, r4, ror #14
   36628:	andeq	r6, r3, r0, asr #13
   3662c:	andeq	r6, r3, r4, ror #14
   36630:	ldrdeq	r6, [r3], -r8
   36634:	andeq	r6, r3, r4, ror #14
   36638:	andeq	r6, r3, r4, ror #14
   3663c:	andeq	r6, r3, r4, ror #14
   36640:	andeq	r6, r3, r4, ror #14
   36644:	andeq	r6, r3, r4, ror #14
   36648:	andeq	r6, r3, r4, ror #14
   3664c:	andeq	r6, r3, r8, lsl #14
   36650:	andeq	r6, r3, r4, ror #14
   36654:	andeq	r6, r3, r4, ror #14
   36658:	andeq	r6, r3, r0, lsr #14
   3665c:	add	r0, sp, #40	; 0x28
   36660:	movw	r1, #512	; 0x200
   36664:	bl	367f8 <__assert_fail@plt+0x250a4>
   36668:	str	r0, [sp, #16]
   3666c:	b	36788 <__assert_fail@plt+0x25034>
   36670:	add	r0, sp, #40	; 0x28
   36674:	movw	r1, #1024	; 0x400
   36678:	bl	367f8 <__assert_fail@plt+0x250a4>
   3667c:	str	r0, [sp, #16]
   36680:	b	36788 <__assert_fail@plt+0x25034>
   36684:	movw	r0, #0
   36688:	str	r0, [sp, #16]
   3668c:	b	36788 <__assert_fail@plt+0x25034>
   36690:	ldr	r1, [sp, #24]
   36694:	add	r0, sp, #40	; 0x28
   36698:	movw	r2, #6
   3669c:	bl	38070 <__assert_fail@plt+0x2691c>
   366a0:	str	r0, [sp, #16]
   366a4:	b	36788 <__assert_fail@plt+0x25034>
   366a8:	ldr	r1, [sp, #24]
   366ac:	add	r0, sp, #40	; 0x28
   366b0:	movw	r2, #3
   366b4:	bl	38070 <__assert_fail@plt+0x2691c>
   366b8:	str	r0, [sp, #16]
   366bc:	b	36788 <__assert_fail@plt+0x25034>
   366c0:	ldr	r1, [sp, #24]
   366c4:	add	r0, sp, #40	; 0x28
   366c8:	movw	r2, #1
   366cc:	bl	38070 <__assert_fail@plt+0x2691c>
   366d0:	str	r0, [sp, #16]
   366d4:	b	36788 <__assert_fail@plt+0x25034>
   366d8:	ldr	r1, [sp, #24]
   366dc:	add	r0, sp, #40	; 0x28
   366e0:	movw	r2, #2
   366e4:	bl	38070 <__assert_fail@plt+0x2691c>
   366e8:	str	r0, [sp, #16]
   366ec:	b	36788 <__assert_fail@plt+0x25034>
   366f0:	ldr	r1, [sp, #24]
   366f4:	add	r0, sp, #40	; 0x28
   366f8:	movw	r2, #5
   366fc:	bl	38070 <__assert_fail@plt+0x2691c>
   36700:	str	r0, [sp, #16]
   36704:	b	36788 <__assert_fail@plt+0x25034>
   36708:	ldr	r1, [sp, #24]
   3670c:	add	r0, sp, #40	; 0x28
   36710:	movw	r2, #4
   36714:	bl	38070 <__assert_fail@plt+0x2691c>
   36718:	str	r0, [sp, #16]
   3671c:	b	36788 <__assert_fail@plt+0x25034>
   36720:	add	r0, sp, #40	; 0x28
   36724:	movw	r1, #2
   36728:	bl	367f8 <__assert_fail@plt+0x250a4>
   3672c:	str	r0, [sp, #16]
   36730:	b	36788 <__assert_fail@plt+0x25034>
   36734:	ldr	r1, [sp, #24]
   36738:	add	r0, sp, #40	; 0x28
   3673c:	movw	r2, #8
   36740:	bl	38070 <__assert_fail@plt+0x2691c>
   36744:	str	r0, [sp, #16]
   36748:	b	36788 <__assert_fail@plt+0x25034>
   3674c:	ldr	r1, [sp, #24]
   36750:	add	r0, sp, #40	; 0x28
   36754:	movw	r2, #7
   36758:	bl	38070 <__assert_fail@plt+0x2691c>
   3675c:	str	r0, [sp, #16]
   36760:	b	36788 <__assert_fail@plt+0x25034>
   36764:	ldr	r0, [sp, #40]	; 0x28
   36768:	ldr	r1, [sp, #44]	; 0x2c
   3676c:	ldr	r2, [fp, #-20]	; 0xffffffec
   36770:	str	r1, [r2, #4]
   36774:	str	r0, [r2]
   36778:	ldr	r0, [sp, #36]	; 0x24
   3677c:	orr	r0, r0, #2
   36780:	str	r0, [fp, #-4]
   36784:	b	367ec <__assert_fail@plt+0x25098>
   36788:	ldr	r0, [sp, #16]
   3678c:	ldr	r1, [sp, #36]	; 0x24
   36790:	orr	r0, r1, r0
   36794:	str	r0, [sp, #36]	; 0x24
   36798:	ldr	r0, [sp, #20]
   3679c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   367a0:	ldr	r2, [r1]
   367a4:	add	r0, r2, r0
   367a8:	str	r0, [r1]
   367ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   367b0:	ldr	r0, [r0]
   367b4:	ldrsb	r0, [r0]
   367b8:	cmp	r0, #0
   367bc:	beq	367cc <__assert_fail@plt+0x25078>
   367c0:	ldr	r0, [sp, #36]	; 0x24
   367c4:	orr	r0, r0, #2
   367c8:	str	r0, [sp, #36]	; 0x24
   367cc:	b	367d0 <__assert_fail@plt+0x2507c>
   367d0:	ldr	r0, [sp, #40]	; 0x28
   367d4:	ldr	r1, [sp, #44]	; 0x2c
   367d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   367dc:	str	r1, [r2, #4]
   367e0:	str	r0, [r2]
   367e4:	ldr	r0, [sp, #36]	; 0x24
   367e8:	str	r0, [fp, #-4]
   367ec:	ldr	r0, [fp, #-4]
   367f0:	mov	sp, fp
   367f4:	pop	{fp, pc}
   367f8:	push	{fp, lr}
   367fc:	mov	fp, sp
   36800:	sub	sp, sp, #112	; 0x70
   36804:	str	r0, [fp, #-8]
   36808:	str	r1, [fp, #-12]
   3680c:	b	36cbc <__assert_fail@plt+0x25568>
   36810:	b	36a84 <__assert_fail@plt+0x25330>
   36814:	ldr	r0, [fp, #-12]
   36818:	cmp	r0, #0
   3681c:	bge	36974 <__assert_fail@plt+0x25220>
   36820:	mov	r0, #1
   36824:	cmp	r0, #0
   36828:	bne	368d0 <__assert_fail@plt+0x2517c>
   3682c:	b	36830 <__assert_fail@plt+0x250dc>
   36830:	b	36834 <__assert_fail@plt+0x250e0>
   36834:	ldr	r0, [fp, #-8]
   36838:	ldr	r1, [r0]
   3683c:	ldr	r0, [r0, #4]
   36840:	ldr	r2, [fp, #-12]
   36844:	mov	r3, #127	; 0x7f
   36848:	sdiv	r2, r3, r2
   3684c:	subs	r1, r1, r2
   36850:	sbcs	r0, r0, r2, asr #31
   36854:	bcc	36a3c <__assert_fail@plt+0x252e8>
   36858:	b	36a60 <__assert_fail@plt+0x2530c>
   3685c:	b	36860 <__assert_fail@plt+0x2510c>
   36860:	ldr	r0, [pc, #4076]	; 37854 <__assert_fail@plt+0x26100>
   36864:	ldr	r1, [fp, #-12]
   36868:	cmp	r1, r0
   3686c:	blt	36884 <__assert_fail@plt+0x25130>
   36870:	b	36890 <__assert_fail@plt+0x2513c>
   36874:	ldr	r0, [fp, #-12]
   36878:	movw	r1, #0
   3687c:	cmp	r1, r0
   36880:	bge	36890 <__assert_fail@plt+0x2513c>
   36884:	movw	r0, #0
   36888:	str	r0, [fp, #-28]	; 0xffffffe4
   3688c:	b	368a8 <__assert_fail@plt+0x25154>
   36890:	ldr	r0, [fp, #-12]
   36894:	movw	r1, #0
   36898:	sub	r0, r1, r0
   3689c:	movw	r1, #127	; 0x7f
   368a0:	sdiv	r0, r1, r0
   368a4:	str	r0, [fp, #-28]	; 0xffffffe4
   368a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   368ac:	ldr	r1, [fp, #-8]
   368b0:	ldr	r2, [r1]
   368b4:	ldr	r1, [r1, #4]
   368b8:	mvn	r1, r1
   368bc:	mvn	r2, r2
   368c0:	subs	r2, r2, r0
   368c4:	sbcs	r0, r1, r0, asr #31
   368c8:	bcs	36a3c <__assert_fail@plt+0x252e8>
   368cc:	b	36a60 <__assert_fail@plt+0x2530c>
   368d0:	b	368d4 <__assert_fail@plt+0x25180>
   368d4:	b	3694c <__assert_fail@plt+0x251f8>
   368d8:	b	3694c <__assert_fail@plt+0x251f8>
   368dc:	ldr	r0, [fp, #-12]
   368e0:	cmn	r0, #1
   368e4:	bne	3694c <__assert_fail@plt+0x251f8>
   368e8:	b	3690c <__assert_fail@plt+0x251b8>
   368ec:	ldr	r0, [fp, #-8]
   368f0:	ldr	r1, [r0]
   368f4:	ldr	r0, [r0, #4]
   368f8:	eor	r1, r1, #128	; 0x80
   368fc:	orr	r0, r1, r0
   36900:	cmp	r0, #0
   36904:	bne	36a3c <__assert_fail@plt+0x252e8>
   36908:	b	36a60 <__assert_fail@plt+0x2530c>
   3690c:	ldr	r0, [fp, #-8]
   36910:	ldr	r1, [r0]
   36914:	ldr	r0, [r0, #4]
   36918:	orr	r0, r1, r0
   3691c:	cmp	r0, #0
   36920:	beq	36a60 <__assert_fail@plt+0x2530c>
   36924:	b	36928 <__assert_fail@plt+0x251d4>
   36928:	ldr	r0, [fp, #-8]
   3692c:	ldr	r1, [r0]
   36930:	ldr	r0, [r0, #4]
   36934:	subs	r1, r1, #1
   36938:	sbc	r0, r0, #0
   3693c:	rsbs	r1, r1, #127	; 0x7f
   36940:	rscs	r0, r0, #0
   36944:	bcc	36a3c <__assert_fail@plt+0x252e8>
   36948:	b	36a60 <__assert_fail@plt+0x2530c>
   3694c:	ldr	r0, [fp, #-12]
   36950:	mvn	r1, #127	; 0x7f
   36954:	sdiv	r0, r1, r0
   36958:	ldr	r1, [fp, #-8]
   3695c:	ldr	r2, [r1]
   36960:	ldr	r1, [r1, #4]
   36964:	subs	r2, r0, r2
   36968:	rscs	r0, r1, r0, asr #31
   3696c:	bcc	36a3c <__assert_fail@plt+0x252e8>
   36970:	b	36a60 <__assert_fail@plt+0x2530c>
   36974:	ldr	r0, [fp, #-12]
   36978:	cmp	r0, #0
   3697c:	bne	36984 <__assert_fail@plt+0x25230>
   36980:	b	36a60 <__assert_fail@plt+0x2530c>
   36984:	mov	r0, #1
   36988:	cmp	r0, #0
   3698c:	bne	36a14 <__assert_fail@plt+0x252c0>
   36990:	b	36994 <__assert_fail@plt+0x25240>
   36994:	ldr	r0, [fp, #-8]
   36998:	ldr	r1, [r0]
   3699c:	ldr	r0, [r0, #4]
   369a0:	and	r0, r1, r0
   369a4:	cmn	r0, #1
   369a8:	bne	369e8 <__assert_fail@plt+0x25294>
   369ac:	b	369b0 <__assert_fail@plt+0x2525c>
   369b0:	b	369b4 <__assert_fail@plt+0x25260>
   369b4:	ldr	r0, [fp, #-12]
   369b8:	mvn	r1, #127	; 0x7f
   369bc:	add	r0, r0, r1
   369c0:	movw	r1, #0
   369c4:	cmp	r1, r0
   369c8:	blt	36a3c <__assert_fail@plt+0x252e8>
   369cc:	b	36a60 <__assert_fail@plt+0x2530c>
   369d0:	ldr	r0, [fp, #-12]
   369d4:	sub	r0, r0, #1
   369d8:	movw	r1, #127	; 0x7f
   369dc:	cmp	r1, r0
   369e0:	blt	36a3c <__assert_fail@plt+0x252e8>
   369e4:	b	36a60 <__assert_fail@plt+0x2530c>
   369e8:	ldr	r0, [fp, #-8]
   369ec:	ldr	r2, [r0]
   369f0:	ldr	r3, [r0, #4]
   369f4:	mvn	r0, #127	; 0x7f
   369f8:	mvn	r1, #0
   369fc:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   36a00:	ldr	r2, [fp, #-12]
   36a04:	subs	r0, r0, r2
   36a08:	sbcs	r1, r1, r2, asr #31
   36a0c:	bcc	36a3c <__assert_fail@plt+0x252e8>
   36a10:	b	36a60 <__assert_fail@plt+0x2530c>
   36a14:	ldr	r0, [fp, #-12]
   36a18:	mov	r1, #127	; 0x7f
   36a1c:	sdiv	r0, r1, r0
   36a20:	ldr	r1, [fp, #-8]
   36a24:	ldr	r2, [r1]
   36a28:	ldr	r1, [r1, #4]
   36a2c:	subs	r2, r0, r2
   36a30:	rscs	r0, r1, r0, asr #31
   36a34:	bcs	36a60 <__assert_fail@plt+0x2530c>
   36a38:	b	36a3c <__assert_fail@plt+0x252e8>
   36a3c:	ldr	r0, [fp, #-8]
   36a40:	ldr	r0, [r0]
   36a44:	ldr	r1, [fp, #-12]
   36a48:	mul	r0, r0, r1
   36a4c:	sxtb	r0, r0
   36a50:	asr	r1, r0, #31
   36a54:	str	r0, [fp, #-24]	; 0xffffffe8
   36a58:	str	r1, [fp, #-20]	; 0xffffffec
   36a5c:	b	38024 <__assert_fail@plt+0x268d0>
   36a60:	ldr	r0, [fp, #-8]
   36a64:	ldr	r0, [r0]
   36a68:	ldr	r1, [fp, #-12]
   36a6c:	mul	r0, r0, r1
   36a70:	sxtb	r0, r0
   36a74:	asr	r1, r0, #31
   36a78:	str	r0, [fp, #-24]	; 0xffffffe8
   36a7c:	str	r1, [fp, #-20]	; 0xffffffec
   36a80:	b	38040 <__assert_fail@plt+0x268ec>
   36a84:	ldr	r0, [fp, #-12]
   36a88:	cmp	r0, #0
   36a8c:	bge	36bc0 <__assert_fail@plt+0x2546c>
   36a90:	mov	r0, #1
   36a94:	cmp	r0, #0
   36a98:	bne	36b40 <__assert_fail@plt+0x253ec>
   36a9c:	b	36aa0 <__assert_fail@plt+0x2534c>
   36aa0:	b	36aa4 <__assert_fail@plt+0x25350>
   36aa4:	ldr	r0, [fp, #-8]
   36aa8:	ldr	r1, [r0]
   36aac:	ldr	r0, [r0, #4]
   36ab0:	ldr	r2, [fp, #-12]
   36ab4:	mov	r3, #255	; 0xff
   36ab8:	sdiv	r2, r3, r2
   36abc:	subs	r1, r1, r2
   36ac0:	sbcs	r0, r0, r2, asr #31
   36ac4:	bcc	36c74 <__assert_fail@plt+0x25520>
   36ac8:	b	36c98 <__assert_fail@plt+0x25544>
   36acc:	b	36ad0 <__assert_fail@plt+0x2537c>
   36ad0:	ldr	r0, [pc, #3452]	; 37854 <__assert_fail@plt+0x26100>
   36ad4:	ldr	r1, [fp, #-12]
   36ad8:	cmp	r1, r0
   36adc:	blt	36af4 <__assert_fail@plt+0x253a0>
   36ae0:	b	36b00 <__assert_fail@plt+0x253ac>
   36ae4:	ldr	r0, [fp, #-12]
   36ae8:	movw	r1, #0
   36aec:	cmp	r1, r0
   36af0:	bge	36b00 <__assert_fail@plt+0x253ac>
   36af4:	movw	r0, #0
   36af8:	str	r0, [fp, #-32]	; 0xffffffe0
   36afc:	b	36b18 <__assert_fail@plt+0x253c4>
   36b00:	ldr	r0, [fp, #-12]
   36b04:	movw	r1, #0
   36b08:	sub	r0, r1, r0
   36b0c:	movw	r1, #255	; 0xff
   36b10:	sdiv	r0, r1, r0
   36b14:	str	r0, [fp, #-32]	; 0xffffffe0
   36b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36b1c:	ldr	r1, [fp, #-8]
   36b20:	ldr	r2, [r1]
   36b24:	ldr	r1, [r1, #4]
   36b28:	mvn	r1, r1
   36b2c:	mvn	r2, r2
   36b30:	subs	r2, r2, r0
   36b34:	sbcs	r0, r1, r0, asr #31
   36b38:	bcs	36c74 <__assert_fail@plt+0x25520>
   36b3c:	b	36c98 <__assert_fail@plt+0x25544>
   36b40:	b	36b44 <__assert_fail@plt+0x253f0>
   36b44:	b	36ba4 <__assert_fail@plt+0x25450>
   36b48:	b	36ba4 <__assert_fail@plt+0x25450>
   36b4c:	ldr	r0, [fp, #-12]
   36b50:	cmn	r0, #1
   36b54:	bne	36ba4 <__assert_fail@plt+0x25450>
   36b58:	b	36b78 <__assert_fail@plt+0x25424>
   36b5c:	ldr	r0, [fp, #-8]
   36b60:	ldr	r1, [r0]
   36b64:	ldr	r0, [r0, #4]
   36b68:	orr	r0, r1, r0
   36b6c:	cmp	r0, #0
   36b70:	bne	36c74 <__assert_fail@plt+0x25520>
   36b74:	b	36c98 <__assert_fail@plt+0x25544>
   36b78:	ldr	r0, [fp, #-8]
   36b7c:	ldr	r1, [r0]
   36b80:	ldr	r0, [r0, #4]
   36b84:	orr	r0, r1, r0
   36b88:	cmp	r0, #0
   36b8c:	beq	36c98 <__assert_fail@plt+0x25544>
   36b90:	b	36b94 <__assert_fail@plt+0x25440>
   36b94:	mov	r0, #0
   36b98:	cmp	r0, #0
   36b9c:	bne	36c74 <__assert_fail@plt+0x25520>
   36ba0:	b	36c98 <__assert_fail@plt+0x25544>
   36ba4:	ldr	r0, [fp, #-8]
   36ba8:	ldr	r1, [r0]
   36bac:	ldr	r0, [r0, #4]
   36bb0:	orr	r0, r1, r0
   36bb4:	cmp	r0, #0
   36bb8:	bne	36c74 <__assert_fail@plt+0x25520>
   36bbc:	b	36c98 <__assert_fail@plt+0x25544>
   36bc0:	ldr	r0, [fp, #-12]
   36bc4:	cmp	r0, #0
   36bc8:	bne	36bd0 <__assert_fail@plt+0x2547c>
   36bcc:	b	36c98 <__assert_fail@plt+0x25544>
   36bd0:	mov	r0, #1
   36bd4:	cmp	r0, #0
   36bd8:	bne	36c4c <__assert_fail@plt+0x254f8>
   36bdc:	b	36be0 <__assert_fail@plt+0x2548c>
   36be0:	b	36be8 <__assert_fail@plt+0x25494>
   36be4:	b	36bec <__assert_fail@plt+0x25498>
   36be8:	b	36c3c <__assert_fail@plt+0x254e8>
   36bec:	ldr	r0, [fp, #-8]
   36bf0:	ldr	r1, [r0]
   36bf4:	ldr	r0, [r0, #4]
   36bf8:	and	r0, r1, r0
   36bfc:	cmn	r0, #1
   36c00:	bne	36c3c <__assert_fail@plt+0x254e8>
   36c04:	b	36c08 <__assert_fail@plt+0x254b4>
   36c08:	b	36c0c <__assert_fail@plt+0x254b8>
   36c0c:	ldr	r0, [fp, #-12]
   36c10:	add	r0, r0, #0
   36c14:	movw	r1, #0
   36c18:	cmp	r1, r0
   36c1c:	blt	36c74 <__assert_fail@plt+0x25520>
   36c20:	b	36c98 <__assert_fail@plt+0x25544>
   36c24:	ldr	r0, [fp, #-12]
   36c28:	sub	r0, r0, #1
   36c2c:	mvn	r1, #0
   36c30:	cmp	r1, r0
   36c34:	blt	36c74 <__assert_fail@plt+0x25520>
   36c38:	b	36c98 <__assert_fail@plt+0x25544>
   36c3c:	ldr	r0, [fp, #-12]
   36c40:	cmp	r0, #0
   36c44:	bne	36c74 <__assert_fail@plt+0x25520>
   36c48:	b	36c98 <__assert_fail@plt+0x25544>
   36c4c:	ldr	r0, [fp, #-12]
   36c50:	mov	r1, #255	; 0xff
   36c54:	sdiv	r0, r1, r0
   36c58:	ldr	r1, [fp, #-8]
   36c5c:	ldr	r2, [r1]
   36c60:	ldr	r1, [r1, #4]
   36c64:	subs	r2, r0, r2
   36c68:	rscs	r0, r1, r0, asr #31
   36c6c:	bcs	36c98 <__assert_fail@plt+0x25544>
   36c70:	b	36c74 <__assert_fail@plt+0x25520>
   36c74:	ldr	r0, [fp, #-8]
   36c78:	ldr	r0, [r0]
   36c7c:	ldr	r1, [fp, #-12]
   36c80:	mul	r0, r0, r1
   36c84:	uxtb	r0, r0
   36c88:	mov	r1, #0
   36c8c:	str	r1, [fp, #-20]	; 0xffffffec
   36c90:	str	r0, [fp, #-24]	; 0xffffffe8
   36c94:	b	38024 <__assert_fail@plt+0x268d0>
   36c98:	ldr	r0, [fp, #-8]
   36c9c:	ldr	r0, [r0]
   36ca0:	ldr	r1, [fp, #-12]
   36ca4:	mul	r0, r0, r1
   36ca8:	uxtb	r0, r0
   36cac:	mov	r1, #0
   36cb0:	str	r1, [fp, #-20]	; 0xffffffec
   36cb4:	str	r0, [fp, #-24]	; 0xffffffe8
   36cb8:	b	38040 <__assert_fail@plt+0x268ec>
   36cbc:	b	3717c <__assert_fail@plt+0x25a28>
   36cc0:	b	36f44 <__assert_fail@plt+0x257f0>
   36cc4:	ldr	r0, [fp, #-12]
   36cc8:	cmp	r0, #0
   36ccc:	bge	36e30 <__assert_fail@plt+0x256dc>
   36cd0:	mov	r0, #1
   36cd4:	cmp	r0, #0
   36cd8:	bne	36d80 <__assert_fail@plt+0x2562c>
   36cdc:	b	36ce0 <__assert_fail@plt+0x2558c>
   36ce0:	b	36ce4 <__assert_fail@plt+0x25590>
   36ce4:	ldr	r0, [fp, #-8]
   36ce8:	ldr	r1, [r0]
   36cec:	ldr	r0, [r0, #4]
   36cf0:	ldr	r2, [fp, #-12]
   36cf4:	movw	r3, #32767	; 0x7fff
   36cf8:	sdiv	r2, r3, r2
   36cfc:	subs	r1, r1, r2
   36d00:	sbcs	r0, r0, r2, asr #31
   36d04:	bcc	36efc <__assert_fail@plt+0x257a8>
   36d08:	b	36f20 <__assert_fail@plt+0x257cc>
   36d0c:	b	36d10 <__assert_fail@plt+0x255bc>
   36d10:	ldr	r0, [pc, #2876]	; 37854 <__assert_fail@plt+0x26100>
   36d14:	ldr	r1, [fp, #-12]
   36d18:	cmp	r1, r0
   36d1c:	blt	36d34 <__assert_fail@plt+0x255e0>
   36d20:	b	36d40 <__assert_fail@plt+0x255ec>
   36d24:	ldr	r0, [fp, #-12]
   36d28:	movw	r1, #0
   36d2c:	cmp	r1, r0
   36d30:	bge	36d40 <__assert_fail@plt+0x255ec>
   36d34:	movw	r0, #0
   36d38:	str	r0, [fp, #-36]	; 0xffffffdc
   36d3c:	b	36d58 <__assert_fail@plt+0x25604>
   36d40:	ldr	r0, [fp, #-12]
   36d44:	movw	r1, #0
   36d48:	sub	r0, r1, r0
   36d4c:	movw	r1, #32767	; 0x7fff
   36d50:	sdiv	r0, r1, r0
   36d54:	str	r0, [fp, #-36]	; 0xffffffdc
   36d58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36d5c:	ldr	r1, [fp, #-8]
   36d60:	ldr	r2, [r1]
   36d64:	ldr	r1, [r1, #4]
   36d68:	mvn	r1, r1
   36d6c:	mvn	r2, r2
   36d70:	subs	r2, r2, r0
   36d74:	sbcs	r0, r1, r0, asr #31
   36d78:	bcs	36efc <__assert_fail@plt+0x257a8>
   36d7c:	b	36f20 <__assert_fail@plt+0x257cc>
   36d80:	b	36d84 <__assert_fail@plt+0x25630>
   36d84:	b	36e04 <__assert_fail@plt+0x256b0>
   36d88:	b	36e04 <__assert_fail@plt+0x256b0>
   36d8c:	ldr	r0, [fp, #-12]
   36d90:	cmn	r0, #1
   36d94:	bne	36e04 <__assert_fail@plt+0x256b0>
   36d98:	b	36dbc <__assert_fail@plt+0x25668>
   36d9c:	ldr	r0, [fp, #-8]
   36da0:	ldr	r1, [r0]
   36da4:	ldr	r0, [r0, #4]
   36da8:	eor	r1, r1, #32768	; 0x8000
   36dac:	orr	r0, r1, r0
   36db0:	cmp	r0, #0
   36db4:	bne	36efc <__assert_fail@plt+0x257a8>
   36db8:	b	36f20 <__assert_fail@plt+0x257cc>
   36dbc:	ldr	r0, [fp, #-8]
   36dc0:	ldr	r1, [r0]
   36dc4:	ldr	r0, [r0, #4]
   36dc8:	orr	r0, r1, r0
   36dcc:	cmp	r0, #0
   36dd0:	beq	36f20 <__assert_fail@plt+0x257cc>
   36dd4:	b	36dd8 <__assert_fail@plt+0x25684>
   36dd8:	ldr	r0, [fp, #-8]
   36ddc:	ldr	r1, [r0]
   36de0:	ldr	r0, [r0, #4]
   36de4:	subs	r1, r1, #1
   36de8:	sbc	r0, r0, #0
   36dec:	lsr	r1, r1, #15
   36df0:	orr	r1, r1, r0, lsl #17
   36df4:	orr	r0, r1, r0, lsr #15
   36df8:	cmp	r0, #0
   36dfc:	bne	36efc <__assert_fail@plt+0x257a8>
   36e00:	b	36f20 <__assert_fail@plt+0x257cc>
   36e04:	ldr	r0, [fp, #-12]
   36e08:	movw	r1, #32768	; 0x8000
   36e0c:	movt	r1, #65535	; 0xffff
   36e10:	sdiv	r0, r1, r0
   36e14:	ldr	r1, [fp, #-8]
   36e18:	ldr	r2, [r1]
   36e1c:	ldr	r1, [r1, #4]
   36e20:	subs	r2, r0, r2
   36e24:	rscs	r0, r1, r0, asr #31
   36e28:	bcc	36efc <__assert_fail@plt+0x257a8>
   36e2c:	b	36f20 <__assert_fail@plt+0x257cc>
   36e30:	ldr	r0, [fp, #-12]
   36e34:	cmp	r0, #0
   36e38:	bne	36e40 <__assert_fail@plt+0x256ec>
   36e3c:	b	36f20 <__assert_fail@plt+0x257cc>
   36e40:	mov	r0, #1
   36e44:	cmp	r0, #0
   36e48:	bne	36ed4 <__assert_fail@plt+0x25780>
   36e4c:	b	36e50 <__assert_fail@plt+0x256fc>
   36e50:	ldr	r0, [fp, #-8]
   36e54:	ldr	r1, [r0]
   36e58:	ldr	r0, [r0, #4]
   36e5c:	and	r0, r1, r0
   36e60:	cmn	r0, #1
   36e64:	bne	36ea4 <__assert_fail@plt+0x25750>
   36e68:	b	36e6c <__assert_fail@plt+0x25718>
   36e6c:	b	36e70 <__assert_fail@plt+0x2571c>
   36e70:	ldr	r0, [pc, #4020]	; 37e2c <__assert_fail@plt+0x266d8>
   36e74:	ldr	r1, [fp, #-12]
   36e78:	add	r0, r1, r0
   36e7c:	movw	r1, #0
   36e80:	cmp	r1, r0
   36e84:	blt	36efc <__assert_fail@plt+0x257a8>
   36e88:	b	36f20 <__assert_fail@plt+0x257cc>
   36e8c:	ldr	r0, [fp, #-12]
   36e90:	sub	r0, r0, #1
   36e94:	movw	r1, #32767	; 0x7fff
   36e98:	cmp	r1, r0
   36e9c:	blt	36efc <__assert_fail@plt+0x257a8>
   36ea0:	b	36f20 <__assert_fail@plt+0x257cc>
   36ea4:	ldr	r0, [fp, #-8]
   36ea8:	ldr	r2, [r0]
   36eac:	ldr	r3, [r0, #4]
   36eb0:	movw	r0, #32768	; 0x8000
   36eb4:	movt	r0, #65535	; 0xffff
   36eb8:	mvn	r1, #0
   36ebc:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   36ec0:	ldr	r2, [fp, #-12]
   36ec4:	subs	r0, r0, r2
   36ec8:	sbcs	r1, r1, r2, asr #31
   36ecc:	bcc	36efc <__assert_fail@plt+0x257a8>
   36ed0:	b	36f20 <__assert_fail@plt+0x257cc>
   36ed4:	ldr	r0, [fp, #-12]
   36ed8:	movw	r1, #32767	; 0x7fff
   36edc:	sdiv	r0, r1, r0
   36ee0:	ldr	r1, [fp, #-8]
   36ee4:	ldr	r2, [r1]
   36ee8:	ldr	r1, [r1, #4]
   36eec:	subs	r2, r0, r2
   36ef0:	rscs	r0, r1, r0, asr #31
   36ef4:	bcs	36f20 <__assert_fail@plt+0x257cc>
   36ef8:	b	36efc <__assert_fail@plt+0x257a8>
   36efc:	ldr	r0, [fp, #-8]
   36f00:	ldr	r0, [r0]
   36f04:	ldr	r1, [fp, #-12]
   36f08:	mul	r0, r0, r1
   36f0c:	sxth	r0, r0
   36f10:	asr	r1, r0, #31
   36f14:	str	r0, [fp, #-24]	; 0xffffffe8
   36f18:	str	r1, [fp, #-20]	; 0xffffffec
   36f1c:	b	38024 <__assert_fail@plt+0x268d0>
   36f20:	ldr	r0, [fp, #-8]
   36f24:	ldr	r0, [r0]
   36f28:	ldr	r1, [fp, #-12]
   36f2c:	mul	r0, r0, r1
   36f30:	sxth	r0, r0
   36f34:	asr	r1, r0, #31
   36f38:	str	r0, [fp, #-24]	; 0xffffffe8
   36f3c:	str	r1, [fp, #-20]	; 0xffffffec
   36f40:	b	38040 <__assert_fail@plt+0x268ec>
   36f44:	ldr	r0, [fp, #-12]
   36f48:	cmp	r0, #0
   36f4c:	bge	37080 <__assert_fail@plt+0x2592c>
   36f50:	mov	r0, #1
   36f54:	cmp	r0, #0
   36f58:	bne	37000 <__assert_fail@plt+0x258ac>
   36f5c:	b	36f60 <__assert_fail@plt+0x2580c>
   36f60:	b	36f64 <__assert_fail@plt+0x25810>
   36f64:	ldr	r0, [fp, #-8]
   36f68:	ldr	r1, [r0]
   36f6c:	ldr	r0, [r0, #4]
   36f70:	ldr	r2, [fp, #-12]
   36f74:	movw	r3, #65535	; 0xffff
   36f78:	sdiv	r2, r3, r2
   36f7c:	subs	r1, r1, r2
   36f80:	sbcs	r0, r0, r2, asr #31
   36f84:	bcc	37134 <__assert_fail@plt+0x259e0>
   36f88:	b	37158 <__assert_fail@plt+0x25a04>
   36f8c:	b	36f90 <__assert_fail@plt+0x2583c>
   36f90:	ldr	r0, [pc, #2236]	; 37854 <__assert_fail@plt+0x26100>
   36f94:	ldr	r1, [fp, #-12]
   36f98:	cmp	r1, r0
   36f9c:	blt	36fb4 <__assert_fail@plt+0x25860>
   36fa0:	b	36fc0 <__assert_fail@plt+0x2586c>
   36fa4:	ldr	r0, [fp, #-12]
   36fa8:	movw	r1, #0
   36fac:	cmp	r1, r0
   36fb0:	bge	36fc0 <__assert_fail@plt+0x2586c>
   36fb4:	movw	r0, #0
   36fb8:	str	r0, [fp, #-40]	; 0xffffffd8
   36fbc:	b	36fd8 <__assert_fail@plt+0x25884>
   36fc0:	ldr	r0, [fp, #-12]
   36fc4:	movw	r1, #0
   36fc8:	sub	r0, r1, r0
   36fcc:	movw	r1, #65535	; 0xffff
   36fd0:	sdiv	r0, r1, r0
   36fd4:	str	r0, [fp, #-40]	; 0xffffffd8
   36fd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36fdc:	ldr	r1, [fp, #-8]
   36fe0:	ldr	r2, [r1]
   36fe4:	ldr	r1, [r1, #4]
   36fe8:	mvn	r1, r1
   36fec:	mvn	r2, r2
   36ff0:	subs	r2, r2, r0
   36ff4:	sbcs	r0, r1, r0, asr #31
   36ff8:	bcs	37134 <__assert_fail@plt+0x259e0>
   36ffc:	b	37158 <__assert_fail@plt+0x25a04>
   37000:	b	37004 <__assert_fail@plt+0x258b0>
   37004:	b	37064 <__assert_fail@plt+0x25910>
   37008:	b	37064 <__assert_fail@plt+0x25910>
   3700c:	ldr	r0, [fp, #-12]
   37010:	cmn	r0, #1
   37014:	bne	37064 <__assert_fail@plt+0x25910>
   37018:	b	37038 <__assert_fail@plt+0x258e4>
   3701c:	ldr	r0, [fp, #-8]
   37020:	ldr	r1, [r0]
   37024:	ldr	r0, [r0, #4]
   37028:	orr	r0, r1, r0
   3702c:	cmp	r0, #0
   37030:	bne	37134 <__assert_fail@plt+0x259e0>
   37034:	b	37158 <__assert_fail@plt+0x25a04>
   37038:	ldr	r0, [fp, #-8]
   3703c:	ldr	r1, [r0]
   37040:	ldr	r0, [r0, #4]
   37044:	orr	r0, r1, r0
   37048:	cmp	r0, #0
   3704c:	beq	37158 <__assert_fail@plt+0x25a04>
   37050:	b	37054 <__assert_fail@plt+0x25900>
   37054:	mov	r0, #0
   37058:	cmp	r0, #0
   3705c:	bne	37134 <__assert_fail@plt+0x259e0>
   37060:	b	37158 <__assert_fail@plt+0x25a04>
   37064:	ldr	r0, [fp, #-8]
   37068:	ldr	r1, [r0]
   3706c:	ldr	r0, [r0, #4]
   37070:	orr	r0, r1, r0
   37074:	cmp	r0, #0
   37078:	bne	37134 <__assert_fail@plt+0x259e0>
   3707c:	b	37158 <__assert_fail@plt+0x25a04>
   37080:	ldr	r0, [fp, #-12]
   37084:	cmp	r0, #0
   37088:	bne	37090 <__assert_fail@plt+0x2593c>
   3708c:	b	37158 <__assert_fail@plt+0x25a04>
   37090:	mov	r0, #1
   37094:	cmp	r0, #0
   37098:	bne	3710c <__assert_fail@plt+0x259b8>
   3709c:	b	370a0 <__assert_fail@plt+0x2594c>
   370a0:	b	370a8 <__assert_fail@plt+0x25954>
   370a4:	b	370ac <__assert_fail@plt+0x25958>
   370a8:	b	370fc <__assert_fail@plt+0x259a8>
   370ac:	ldr	r0, [fp, #-8]
   370b0:	ldr	r1, [r0]
   370b4:	ldr	r0, [r0, #4]
   370b8:	and	r0, r1, r0
   370bc:	cmn	r0, #1
   370c0:	bne	370fc <__assert_fail@plt+0x259a8>
   370c4:	b	370c8 <__assert_fail@plt+0x25974>
   370c8:	b	370cc <__assert_fail@plt+0x25978>
   370cc:	ldr	r0, [fp, #-12]
   370d0:	add	r0, r0, #0
   370d4:	movw	r1, #0
   370d8:	cmp	r1, r0
   370dc:	blt	37134 <__assert_fail@plt+0x259e0>
   370e0:	b	37158 <__assert_fail@plt+0x25a04>
   370e4:	ldr	r0, [fp, #-12]
   370e8:	sub	r0, r0, #1
   370ec:	mvn	r1, #0
   370f0:	cmp	r1, r0
   370f4:	blt	37134 <__assert_fail@plt+0x259e0>
   370f8:	b	37158 <__assert_fail@plt+0x25a04>
   370fc:	ldr	r0, [fp, #-12]
   37100:	cmp	r0, #0
   37104:	bne	37134 <__assert_fail@plt+0x259e0>
   37108:	b	37158 <__assert_fail@plt+0x25a04>
   3710c:	ldr	r0, [fp, #-12]
   37110:	movw	r1, #65535	; 0xffff
   37114:	sdiv	r0, r1, r0
   37118:	ldr	r1, [fp, #-8]
   3711c:	ldr	r2, [r1]
   37120:	ldr	r1, [r1, #4]
   37124:	subs	r2, r0, r2
   37128:	rscs	r0, r1, r0, asr #31
   3712c:	bcs	37158 <__assert_fail@plt+0x25a04>
   37130:	b	37134 <__assert_fail@plt+0x259e0>
   37134:	ldr	r0, [fp, #-8]
   37138:	ldr	r0, [r0]
   3713c:	ldr	r1, [fp, #-12]
   37140:	mul	r0, r0, r1
   37144:	uxth	r0, r0
   37148:	mov	r1, #0
   3714c:	str	r1, [fp, #-20]	; 0xffffffec
   37150:	str	r0, [fp, #-24]	; 0xffffffe8
   37154:	b	38024 <__assert_fail@plt+0x268d0>
   37158:	ldr	r0, [fp, #-8]
   3715c:	ldr	r0, [r0]
   37160:	ldr	r1, [fp, #-12]
   37164:	mul	r0, r0, r1
   37168:	uxth	r0, r0
   3716c:	mov	r1, #0
   37170:	str	r1, [fp, #-20]	; 0xffffffec
   37174:	str	r0, [fp, #-24]	; 0xffffffe8
   37178:	b	38040 <__assert_fail@plt+0x268ec>
   3717c:	b	37610 <__assert_fail@plt+0x25ebc>
   37180:	b	373e0 <__assert_fail@plt+0x25c8c>
   37184:	ldr	r0, [fp, #-12]
   37188:	cmp	r0, #0
   3718c:	bge	372dc <__assert_fail@plt+0x25b88>
   37190:	mov	r0, #1
   37194:	cmp	r0, #0
   37198:	bne	37240 <__assert_fail@plt+0x25aec>
   3719c:	b	371a0 <__assert_fail@plt+0x25a4c>
   371a0:	b	371a4 <__assert_fail@plt+0x25a50>
   371a4:	ldr	r0, [fp, #-8]
   371a8:	ldr	r1, [r0]
   371ac:	ldr	r0, [r0, #4]
   371b0:	ldr	r2, [fp, #-12]
   371b4:	mvn	r3, #-2147483648	; 0x80000000
   371b8:	sdiv	r2, r3, r2
   371bc:	subs	r1, r1, r2
   371c0:	sbcs	r0, r0, r2, asr #31
   371c4:	bcc	373a0 <__assert_fail@plt+0x25c4c>
   371c8:	b	373c0 <__assert_fail@plt+0x25c6c>
   371cc:	b	371d0 <__assert_fail@plt+0x25a7c>
   371d0:	ldr	r0, [pc, #3728]	; 38068 <__assert_fail@plt+0x26914>
   371d4:	ldr	r1, [fp, #-12]
   371d8:	cmp	r1, r0
   371dc:	blt	371f4 <__assert_fail@plt+0x25aa0>
   371e0:	b	37200 <__assert_fail@plt+0x25aac>
   371e4:	ldr	r0, [fp, #-12]
   371e8:	movw	r1, #0
   371ec:	cmp	r1, r0
   371f0:	bge	37200 <__assert_fail@plt+0x25aac>
   371f4:	movw	r0, #0
   371f8:	str	r0, [fp, #-44]	; 0xffffffd4
   371fc:	b	37218 <__assert_fail@plt+0x25ac4>
   37200:	ldr	r0, [pc, #3684]	; 3806c <__assert_fail@plt+0x26918>
   37204:	ldr	r1, [fp, #-12]
   37208:	movw	r2, #0
   3720c:	sub	r1, r2, r1
   37210:	sdiv	r0, r0, r1
   37214:	str	r0, [fp, #-44]	; 0xffffffd4
   37218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3721c:	ldr	r1, [fp, #-8]
   37220:	ldr	r2, [r1]
   37224:	ldr	r1, [r1, #4]
   37228:	mvn	r1, r1
   3722c:	mvn	r2, r2
   37230:	subs	r2, r2, r0
   37234:	sbcs	r0, r1, r0, asr #31
   37238:	bcs	373a0 <__assert_fail@plt+0x25c4c>
   3723c:	b	373c0 <__assert_fail@plt+0x25c6c>
   37240:	ldr	r0, [fp, #-12]
   37244:	cmn	r0, #1
   37248:	bne	372b4 <__assert_fail@plt+0x25b60>
   3724c:	b	37270 <__assert_fail@plt+0x25b1c>
   37250:	ldr	r0, [fp, #-8]
   37254:	ldr	r1, [r0]
   37258:	ldr	r0, [r0, #4]
   3725c:	eor	r1, r1, #-2147483648	; 0x80000000
   37260:	orr	r0, r1, r0
   37264:	cmp	r0, #0
   37268:	bne	373a0 <__assert_fail@plt+0x25c4c>
   3726c:	b	373c0 <__assert_fail@plt+0x25c6c>
   37270:	ldr	r0, [fp, #-8]
   37274:	ldr	r1, [r0]
   37278:	ldr	r0, [r0, #4]
   3727c:	orr	r0, r1, r0
   37280:	cmp	r0, #0
   37284:	beq	373c0 <__assert_fail@plt+0x25c6c>
   37288:	b	3728c <__assert_fail@plt+0x25b38>
   3728c:	ldr	r0, [fp, #-8]
   37290:	ldr	r1, [r0]
   37294:	ldr	r0, [r0, #4]
   37298:	subs	r1, r1, #1
   3729c:	sbc	r0, r0, #0
   372a0:	mvn	r2, #-2147483648	; 0x80000000
   372a4:	subs	r1, r2, r1
   372a8:	rscs	r0, r0, #0
   372ac:	bcc	373a0 <__assert_fail@plt+0x25c4c>
   372b0:	b	373c0 <__assert_fail@plt+0x25c6c>
   372b4:	ldr	r0, [fp, #-12]
   372b8:	mov	r1, #-2147483648	; 0x80000000
   372bc:	sdiv	r0, r1, r0
   372c0:	ldr	r1, [fp, #-8]
   372c4:	ldr	r2, [r1]
   372c8:	ldr	r1, [r1, #4]
   372cc:	subs	r2, r0, r2
   372d0:	rscs	r0, r1, r0, asr #31
   372d4:	bcc	373a0 <__assert_fail@plt+0x25c4c>
   372d8:	b	373c0 <__assert_fail@plt+0x25c6c>
   372dc:	ldr	r0, [fp, #-12]
   372e0:	cmp	r0, #0
   372e4:	bne	372ec <__assert_fail@plt+0x25b98>
   372e8:	b	373c0 <__assert_fail@plt+0x25c6c>
   372ec:	mov	r0, #1
   372f0:	cmp	r0, #0
   372f4:	bne	37378 <__assert_fail@plt+0x25c24>
   372f8:	b	372fc <__assert_fail@plt+0x25ba8>
   372fc:	ldr	r0, [fp, #-8]
   37300:	ldr	r1, [r0]
   37304:	ldr	r0, [r0, #4]
   37308:	and	r0, r1, r0
   3730c:	cmn	r0, #1
   37310:	bne	3734c <__assert_fail@plt+0x25bf8>
   37314:	b	37318 <__assert_fail@plt+0x25bc4>
   37318:	b	3731c <__assert_fail@plt+0x25bc8>
   3731c:	ldr	r0, [fp, #-12]
   37320:	add	r0, r0, #-2147483648	; 0x80000000
   37324:	movw	r1, #0
   37328:	cmp	r1, r0
   3732c:	blt	373a0 <__assert_fail@plt+0x25c4c>
   37330:	b	373c0 <__assert_fail@plt+0x25c6c>
   37334:	ldr	r0, [pc, #3376]	; 3806c <__assert_fail@plt+0x26918>
   37338:	ldr	r1, [fp, #-12]
   3733c:	sub	r1, r1, #1
   37340:	cmp	r0, r1
   37344:	blt	373a0 <__assert_fail@plt+0x25c4c>
   37348:	b	373c0 <__assert_fail@plt+0x25c6c>
   3734c:	ldr	r0, [fp, #-8]
   37350:	ldr	r2, [r0]
   37354:	ldr	r3, [r0, #4]
   37358:	mov	r0, #-2147483648	; 0x80000000
   3735c:	mvn	r1, #0
   37360:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   37364:	ldr	r2, [fp, #-12]
   37368:	subs	r0, r0, r2
   3736c:	sbcs	r1, r1, r2, asr #31
   37370:	bcc	373a0 <__assert_fail@plt+0x25c4c>
   37374:	b	373c0 <__assert_fail@plt+0x25c6c>
   37378:	ldr	r0, [fp, #-12]
   3737c:	mvn	r1, #-2147483648	; 0x80000000
   37380:	sdiv	r0, r1, r0
   37384:	ldr	r1, [fp, #-8]
   37388:	ldr	r2, [r1]
   3738c:	ldr	r1, [r1, #4]
   37390:	subs	r2, r0, r2
   37394:	rscs	r0, r1, r0, asr #31
   37398:	bcs	373c0 <__assert_fail@plt+0x25c6c>
   3739c:	b	373a0 <__assert_fail@plt+0x25c4c>
   373a0:	ldr	r0, [fp, #-8]
   373a4:	ldr	r0, [r0]
   373a8:	ldr	r1, [fp, #-12]
   373ac:	mul	r0, r0, r1
   373b0:	asr	r1, r0, #31
   373b4:	str	r0, [fp, #-24]	; 0xffffffe8
   373b8:	str	r1, [fp, #-20]	; 0xffffffec
   373bc:	b	38024 <__assert_fail@plt+0x268d0>
   373c0:	ldr	r0, [fp, #-8]
   373c4:	ldr	r0, [r0]
   373c8:	ldr	r1, [fp, #-12]
   373cc:	mul	r0, r0, r1
   373d0:	asr	r1, r0, #31
   373d4:	str	r0, [fp, #-24]	; 0xffffffe8
   373d8:	str	r1, [fp, #-20]	; 0xffffffec
   373dc:	b	38040 <__assert_fail@plt+0x268ec>
   373e0:	ldr	r0, [fp, #-12]
   373e4:	cmp	r0, #0
   373e8:	bge	3751c <__assert_fail@plt+0x25dc8>
   373ec:	mov	r0, #1
   373f0:	cmp	r0, #0
   373f4:	bne	3749c <__assert_fail@plt+0x25d48>
   373f8:	b	373fc <__assert_fail@plt+0x25ca8>
   373fc:	b	37428 <__assert_fail@plt+0x25cd4>
   37400:	ldr	r0, [fp, #-8]
   37404:	ldr	r1, [r0]
   37408:	ldr	r0, [r0, #4]
   3740c:	ldr	r2, [fp, #-12]
   37410:	mvn	r3, #0
   37414:	udiv	r2, r3, r2
   37418:	subs	r1, r1, r2
   3741c:	sbcs	r0, r0, #0
   37420:	bcc	375d0 <__assert_fail@plt+0x25e7c>
   37424:	b	375f0 <__assert_fail@plt+0x25e9c>
   37428:	b	3742c <__assert_fail@plt+0x25cd8>
   3742c:	ldr	r0, [pc, #3124]	; 38068 <__assert_fail@plt+0x26914>
   37430:	ldr	r1, [fp, #-12]
   37434:	cmp	r1, r0
   37438:	blt	37450 <__assert_fail@plt+0x25cfc>
   3743c:	b	3745c <__assert_fail@plt+0x25d08>
   37440:	ldr	r0, [fp, #-12]
   37444:	movw	r1, #0
   37448:	cmp	r1, r0
   3744c:	bge	3745c <__assert_fail@plt+0x25d08>
   37450:	movw	r0, #1
   37454:	str	r0, [fp, #-48]	; 0xffffffd0
   37458:	b	37474 <__assert_fail@plt+0x25d20>
   3745c:	ldr	r0, [fp, #-12]
   37460:	movw	r1, #0
   37464:	sub	r0, r1, r0
   37468:	mvn	r1, #0
   3746c:	udiv	r0, r1, r0
   37470:	str	r0, [fp, #-48]	; 0xffffffd0
   37474:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37478:	ldr	r1, [fp, #-8]
   3747c:	ldr	r2, [r1]
   37480:	ldr	r1, [r1, #4]
   37484:	mvn	r1, r1
   37488:	mvn	r2, r2
   3748c:	subs	r0, r2, r0
   37490:	sbcs	r1, r1, #0
   37494:	bcs	375d0 <__assert_fail@plt+0x25e7c>
   37498:	b	375f0 <__assert_fail@plt+0x25e9c>
   3749c:	b	374a0 <__assert_fail@plt+0x25d4c>
   374a0:	b	37500 <__assert_fail@plt+0x25dac>
   374a4:	b	37500 <__assert_fail@plt+0x25dac>
   374a8:	ldr	r0, [fp, #-12]
   374ac:	cmn	r0, #1
   374b0:	bne	37500 <__assert_fail@plt+0x25dac>
   374b4:	b	374d4 <__assert_fail@plt+0x25d80>
   374b8:	ldr	r0, [fp, #-8]
   374bc:	ldr	r1, [r0]
   374c0:	ldr	r0, [r0, #4]
   374c4:	orr	r0, r1, r0
   374c8:	cmp	r0, #0
   374cc:	bne	375d0 <__assert_fail@plt+0x25e7c>
   374d0:	b	375f0 <__assert_fail@plt+0x25e9c>
   374d4:	ldr	r0, [fp, #-8]
   374d8:	ldr	r1, [r0]
   374dc:	ldr	r0, [r0, #4]
   374e0:	orr	r0, r1, r0
   374e4:	cmp	r0, #0
   374e8:	beq	375f0 <__assert_fail@plt+0x25e9c>
   374ec:	b	374f0 <__assert_fail@plt+0x25d9c>
   374f0:	mov	r0, #0
   374f4:	cmp	r0, #0
   374f8:	bne	375d0 <__assert_fail@plt+0x25e7c>
   374fc:	b	375f0 <__assert_fail@plt+0x25e9c>
   37500:	ldr	r0, [fp, #-8]
   37504:	ldr	r1, [r0]
   37508:	ldr	r0, [r0, #4]
   3750c:	orr	r0, r1, r0
   37510:	cmp	r0, #0
   37514:	bne	375d0 <__assert_fail@plt+0x25e7c>
   37518:	b	375f0 <__assert_fail@plt+0x25e9c>
   3751c:	ldr	r0, [fp, #-12]
   37520:	cmp	r0, #0
   37524:	bne	3752c <__assert_fail@plt+0x25dd8>
   37528:	b	375f0 <__assert_fail@plt+0x25e9c>
   3752c:	mov	r0, #1
   37530:	cmp	r0, #0
   37534:	bne	375a8 <__assert_fail@plt+0x25e54>
   37538:	b	3753c <__assert_fail@plt+0x25de8>
   3753c:	b	37544 <__assert_fail@plt+0x25df0>
   37540:	b	37548 <__assert_fail@plt+0x25df4>
   37544:	b	37598 <__assert_fail@plt+0x25e44>
   37548:	ldr	r0, [fp, #-8]
   3754c:	ldr	r1, [r0]
   37550:	ldr	r0, [r0, #4]
   37554:	and	r0, r1, r0
   37558:	cmn	r0, #1
   3755c:	bne	37598 <__assert_fail@plt+0x25e44>
   37560:	b	37564 <__assert_fail@plt+0x25e10>
   37564:	b	37568 <__assert_fail@plt+0x25e14>
   37568:	ldr	r0, [fp, #-12]
   3756c:	add	r0, r0, #0
   37570:	movw	r1, #0
   37574:	cmp	r1, r0
   37578:	blt	375d0 <__assert_fail@plt+0x25e7c>
   3757c:	b	375f0 <__assert_fail@plt+0x25e9c>
   37580:	ldr	r0, [fp, #-12]
   37584:	sub	r0, r0, #1
   37588:	mvn	r1, #0
   3758c:	cmp	r1, r0
   37590:	blt	375d0 <__assert_fail@plt+0x25e7c>
   37594:	b	375f0 <__assert_fail@plt+0x25e9c>
   37598:	ldr	r0, [fp, #-12]
   3759c:	cmp	r0, #0
   375a0:	bne	375d0 <__assert_fail@plt+0x25e7c>
   375a4:	b	375f0 <__assert_fail@plt+0x25e9c>
   375a8:	ldr	r0, [fp, #-12]
   375ac:	mvn	r1, #0
   375b0:	udiv	r0, r1, r0
   375b4:	ldr	r1, [fp, #-8]
   375b8:	ldr	r2, [r1]
   375bc:	ldr	r1, [r1, #4]
   375c0:	subs	r0, r0, r2
   375c4:	rscs	r1, r1, #0
   375c8:	bcs	375f0 <__assert_fail@plt+0x25e9c>
   375cc:	b	375d0 <__assert_fail@plt+0x25e7c>
   375d0:	ldr	r0, [fp, #-8]
   375d4:	ldr	r0, [r0]
   375d8:	ldr	r1, [fp, #-12]
   375dc:	mul	r0, r0, r1
   375e0:	mov	r1, #0
   375e4:	str	r1, [fp, #-20]	; 0xffffffec
   375e8:	str	r0, [fp, #-24]	; 0xffffffe8
   375ec:	b	38024 <__assert_fail@plt+0x268d0>
   375f0:	ldr	r0, [fp, #-8]
   375f4:	ldr	r0, [r0]
   375f8:	ldr	r1, [fp, #-12]
   375fc:	mul	r0, r0, r1
   37600:	mov	r1, #0
   37604:	str	r1, [fp, #-20]	; 0xffffffec
   37608:	str	r0, [fp, #-24]	; 0xffffffe8
   3760c:	b	38040 <__assert_fail@plt+0x268ec>
   37610:	b	37aa8 <__assert_fail@plt+0x26354>
   37614:	b	37878 <__assert_fail@plt+0x26124>
   37618:	ldr	r0, [fp, #-12]
   3761c:	cmp	r0, #0
   37620:	bge	37770 <__assert_fail@plt+0x2601c>
   37624:	mov	r0, #1
   37628:	cmp	r0, #0
   3762c:	bne	376d4 <__assert_fail@plt+0x25f80>
   37630:	b	37634 <__assert_fail@plt+0x25ee0>
   37634:	b	37638 <__assert_fail@plt+0x25ee4>
   37638:	ldr	r0, [fp, #-8]
   3763c:	ldr	r1, [r0]
   37640:	ldr	r0, [r0, #4]
   37644:	ldr	r2, [fp, #-12]
   37648:	mvn	r3, #-2147483648	; 0x80000000
   3764c:	sdiv	r2, r3, r2
   37650:	subs	r1, r1, r2
   37654:	sbcs	r0, r0, r2, asr #31
   37658:	bcc	37834 <__assert_fail@plt+0x260e0>
   3765c:	b	37858 <__assert_fail@plt+0x26104>
   37660:	b	37664 <__assert_fail@plt+0x25f10>
   37664:	ldr	r0, [pc, #2556]	; 38068 <__assert_fail@plt+0x26914>
   37668:	ldr	r1, [fp, #-12]
   3766c:	cmp	r1, r0
   37670:	blt	37688 <__assert_fail@plt+0x25f34>
   37674:	b	37694 <__assert_fail@plt+0x25f40>
   37678:	ldr	r0, [fp, #-12]
   3767c:	movw	r1, #0
   37680:	cmp	r1, r0
   37684:	bge	37694 <__assert_fail@plt+0x25f40>
   37688:	movw	r0, #0
   3768c:	str	r0, [fp, #-52]	; 0xffffffcc
   37690:	b	376ac <__assert_fail@plt+0x25f58>
   37694:	ldr	r0, [pc, #2512]	; 3806c <__assert_fail@plt+0x26918>
   37698:	ldr	r1, [fp, #-12]
   3769c:	movw	r2, #0
   376a0:	sub	r1, r2, r1
   376a4:	sdiv	r0, r0, r1
   376a8:	str	r0, [fp, #-52]	; 0xffffffcc
   376ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   376b0:	ldr	r1, [fp, #-8]
   376b4:	ldr	r2, [r1]
   376b8:	ldr	r1, [r1, #4]
   376bc:	mvn	r1, r1
   376c0:	mvn	r2, r2
   376c4:	subs	r2, r2, r0
   376c8:	sbcs	r0, r1, r0, asr #31
   376cc:	bcs	37834 <__assert_fail@plt+0x260e0>
   376d0:	b	37858 <__assert_fail@plt+0x26104>
   376d4:	ldr	r0, [fp, #-12]
   376d8:	cmn	r0, #1
   376dc:	bne	37748 <__assert_fail@plt+0x25ff4>
   376e0:	b	37704 <__assert_fail@plt+0x25fb0>
   376e4:	ldr	r0, [fp, #-8]
   376e8:	ldr	r1, [r0]
   376ec:	ldr	r0, [r0, #4]
   376f0:	eor	r1, r1, #-2147483648	; 0x80000000
   376f4:	orr	r0, r1, r0
   376f8:	cmp	r0, #0
   376fc:	bne	37834 <__assert_fail@plt+0x260e0>
   37700:	b	37858 <__assert_fail@plt+0x26104>
   37704:	ldr	r0, [fp, #-8]
   37708:	ldr	r1, [r0]
   3770c:	ldr	r0, [r0, #4]
   37710:	orr	r0, r1, r0
   37714:	cmp	r0, #0
   37718:	beq	37858 <__assert_fail@plt+0x26104>
   3771c:	b	37720 <__assert_fail@plt+0x25fcc>
   37720:	ldr	r0, [fp, #-8]
   37724:	ldr	r1, [r0]
   37728:	ldr	r0, [r0, #4]
   3772c:	subs	r1, r1, #1
   37730:	sbc	r0, r0, #0
   37734:	mvn	r2, #-2147483648	; 0x80000000
   37738:	subs	r1, r2, r1
   3773c:	rscs	r0, r0, #0
   37740:	bcc	37834 <__assert_fail@plt+0x260e0>
   37744:	b	37858 <__assert_fail@plt+0x26104>
   37748:	ldr	r0, [fp, #-12]
   3774c:	mov	r1, #-2147483648	; 0x80000000
   37750:	sdiv	r0, r1, r0
   37754:	ldr	r1, [fp, #-8]
   37758:	ldr	r2, [r1]
   3775c:	ldr	r1, [r1, #4]
   37760:	subs	r2, r0, r2
   37764:	rscs	r0, r1, r0, asr #31
   37768:	bcc	37834 <__assert_fail@plt+0x260e0>
   3776c:	b	37858 <__assert_fail@plt+0x26104>
   37770:	ldr	r0, [fp, #-12]
   37774:	cmp	r0, #0
   37778:	bne	37780 <__assert_fail@plt+0x2602c>
   3777c:	b	37858 <__assert_fail@plt+0x26104>
   37780:	mov	r0, #1
   37784:	cmp	r0, #0
   37788:	bne	3780c <__assert_fail@plt+0x260b8>
   3778c:	b	37790 <__assert_fail@plt+0x2603c>
   37790:	ldr	r0, [fp, #-8]
   37794:	ldr	r1, [r0]
   37798:	ldr	r0, [r0, #4]
   3779c:	and	r0, r1, r0
   377a0:	cmn	r0, #1
   377a4:	bne	377e0 <__assert_fail@plt+0x2608c>
   377a8:	b	377ac <__assert_fail@plt+0x26058>
   377ac:	b	377b0 <__assert_fail@plt+0x2605c>
   377b0:	ldr	r0, [fp, #-12]
   377b4:	add	r0, r0, #-2147483648	; 0x80000000
   377b8:	movw	r1, #0
   377bc:	cmp	r1, r0
   377c0:	blt	37834 <__assert_fail@plt+0x260e0>
   377c4:	b	37858 <__assert_fail@plt+0x26104>
   377c8:	ldr	r0, [pc, #2204]	; 3806c <__assert_fail@plt+0x26918>
   377cc:	ldr	r1, [fp, #-12]
   377d0:	sub	r1, r1, #1
   377d4:	cmp	r0, r1
   377d8:	blt	37834 <__assert_fail@plt+0x260e0>
   377dc:	b	37858 <__assert_fail@plt+0x26104>
   377e0:	ldr	r0, [fp, #-8]
   377e4:	ldr	r2, [r0]
   377e8:	ldr	r3, [r0, #4]
   377ec:	mov	r0, #-2147483648	; 0x80000000
   377f0:	mvn	r1, #0
   377f4:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   377f8:	ldr	r2, [fp, #-12]
   377fc:	subs	r0, r0, r2
   37800:	sbcs	r1, r1, r2, asr #31
   37804:	bcc	37834 <__assert_fail@plt+0x260e0>
   37808:	b	37858 <__assert_fail@plt+0x26104>
   3780c:	ldr	r0, [fp, #-12]
   37810:	mvn	r1, #-2147483648	; 0x80000000
   37814:	sdiv	r0, r1, r0
   37818:	ldr	r1, [fp, #-8]
   3781c:	ldr	r2, [r1]
   37820:	ldr	r1, [r1, #4]
   37824:	subs	r2, r0, r2
   37828:	rscs	r0, r1, r0, asr #31
   3782c:	bcs	37858 <__assert_fail@plt+0x26104>
   37830:	b	37834 <__assert_fail@plt+0x260e0>
   37834:	ldr	r0, [fp, #-8]
   37838:	ldr	r0, [r0]
   3783c:	ldr	r1, [fp, #-12]
   37840:	mul	r0, r0, r1
   37844:	asr	r1, r0, #31
   37848:	str	r0, [fp, #-24]	; 0xffffffe8
   3784c:	str	r1, [fp, #-20]	; 0xffffffec
   37850:	b	38024 <__assert_fail@plt+0x268d0>
   37854:	andhi	r0, r0, r1
   37858:	ldr	r0, [fp, #-8]
   3785c:	ldr	r0, [r0]
   37860:	ldr	r1, [fp, #-12]
   37864:	mul	r0, r0, r1
   37868:	asr	r1, r0, #31
   3786c:	str	r0, [fp, #-24]	; 0xffffffe8
   37870:	str	r1, [fp, #-20]	; 0xffffffec
   37874:	b	38040 <__assert_fail@plt+0x268ec>
   37878:	ldr	r0, [fp, #-12]
   3787c:	cmp	r0, #0
   37880:	bge	379b4 <__assert_fail@plt+0x26260>
   37884:	mov	r0, #1
   37888:	cmp	r0, #0
   3788c:	bne	37934 <__assert_fail@plt+0x261e0>
   37890:	b	37894 <__assert_fail@plt+0x26140>
   37894:	b	378c0 <__assert_fail@plt+0x2616c>
   37898:	ldr	r0, [fp, #-8]
   3789c:	ldr	r1, [r0]
   378a0:	ldr	r0, [r0, #4]
   378a4:	ldr	r2, [fp, #-12]
   378a8:	mvn	r3, #0
   378ac:	udiv	r2, r3, r2
   378b0:	subs	r1, r1, r2
   378b4:	sbcs	r0, r0, #0
   378b8:	bcc	37a68 <__assert_fail@plt+0x26314>
   378bc:	b	37a88 <__assert_fail@plt+0x26334>
   378c0:	b	378c4 <__assert_fail@plt+0x26170>
   378c4:	ldr	r0, [pc, #1948]	; 38068 <__assert_fail@plt+0x26914>
   378c8:	ldr	r1, [fp, #-12]
   378cc:	cmp	r1, r0
   378d0:	blt	378e8 <__assert_fail@plt+0x26194>
   378d4:	b	378f4 <__assert_fail@plt+0x261a0>
   378d8:	ldr	r0, [fp, #-12]
   378dc:	movw	r1, #0
   378e0:	cmp	r1, r0
   378e4:	bge	378f4 <__assert_fail@plt+0x261a0>
   378e8:	movw	r0, #1
   378ec:	str	r0, [sp, #56]	; 0x38
   378f0:	b	3790c <__assert_fail@plt+0x261b8>
   378f4:	ldr	r0, [fp, #-12]
   378f8:	movw	r1, #0
   378fc:	sub	r0, r1, r0
   37900:	mvn	r1, #0
   37904:	udiv	r0, r1, r0
   37908:	str	r0, [sp, #56]	; 0x38
   3790c:	ldr	r0, [sp, #56]	; 0x38
   37910:	ldr	r1, [fp, #-8]
   37914:	ldr	r2, [r1]
   37918:	ldr	r1, [r1, #4]
   3791c:	mvn	r1, r1
   37920:	mvn	r2, r2
   37924:	subs	r0, r2, r0
   37928:	sbcs	r1, r1, #0
   3792c:	bcs	37a68 <__assert_fail@plt+0x26314>
   37930:	b	37a88 <__assert_fail@plt+0x26334>
   37934:	b	37938 <__assert_fail@plt+0x261e4>
   37938:	b	37998 <__assert_fail@plt+0x26244>
   3793c:	b	37998 <__assert_fail@plt+0x26244>
   37940:	ldr	r0, [fp, #-12]
   37944:	cmn	r0, #1
   37948:	bne	37998 <__assert_fail@plt+0x26244>
   3794c:	b	3796c <__assert_fail@plt+0x26218>
   37950:	ldr	r0, [fp, #-8]
   37954:	ldr	r1, [r0]
   37958:	ldr	r0, [r0, #4]
   3795c:	orr	r0, r1, r0
   37960:	cmp	r0, #0
   37964:	bne	37a68 <__assert_fail@plt+0x26314>
   37968:	b	37a88 <__assert_fail@plt+0x26334>
   3796c:	ldr	r0, [fp, #-8]
   37970:	ldr	r1, [r0]
   37974:	ldr	r0, [r0, #4]
   37978:	orr	r0, r1, r0
   3797c:	cmp	r0, #0
   37980:	beq	37a88 <__assert_fail@plt+0x26334>
   37984:	b	37988 <__assert_fail@plt+0x26234>
   37988:	mov	r0, #0
   3798c:	cmp	r0, #0
   37990:	bne	37a68 <__assert_fail@plt+0x26314>
   37994:	b	37a88 <__assert_fail@plt+0x26334>
   37998:	ldr	r0, [fp, #-8]
   3799c:	ldr	r1, [r0]
   379a0:	ldr	r0, [r0, #4]
   379a4:	orr	r0, r1, r0
   379a8:	cmp	r0, #0
   379ac:	bne	37a68 <__assert_fail@plt+0x26314>
   379b0:	b	37a88 <__assert_fail@plt+0x26334>
   379b4:	ldr	r0, [fp, #-12]
   379b8:	cmp	r0, #0
   379bc:	bne	379c4 <__assert_fail@plt+0x26270>
   379c0:	b	37a88 <__assert_fail@plt+0x26334>
   379c4:	mov	r0, #1
   379c8:	cmp	r0, #0
   379cc:	bne	37a40 <__assert_fail@plt+0x262ec>
   379d0:	b	379d4 <__assert_fail@plt+0x26280>
   379d4:	b	379dc <__assert_fail@plt+0x26288>
   379d8:	b	379e0 <__assert_fail@plt+0x2628c>
   379dc:	b	37a30 <__assert_fail@plt+0x262dc>
   379e0:	ldr	r0, [fp, #-8]
   379e4:	ldr	r1, [r0]
   379e8:	ldr	r0, [r0, #4]
   379ec:	and	r0, r1, r0
   379f0:	cmn	r0, #1
   379f4:	bne	37a30 <__assert_fail@plt+0x262dc>
   379f8:	b	379fc <__assert_fail@plt+0x262a8>
   379fc:	b	37a00 <__assert_fail@plt+0x262ac>
   37a00:	ldr	r0, [fp, #-12]
   37a04:	add	r0, r0, #0
   37a08:	movw	r1, #0
   37a0c:	cmp	r1, r0
   37a10:	blt	37a68 <__assert_fail@plt+0x26314>
   37a14:	b	37a88 <__assert_fail@plt+0x26334>
   37a18:	ldr	r0, [fp, #-12]
   37a1c:	sub	r0, r0, #1
   37a20:	mvn	r1, #0
   37a24:	cmp	r1, r0
   37a28:	blt	37a68 <__assert_fail@plt+0x26314>
   37a2c:	b	37a88 <__assert_fail@plt+0x26334>
   37a30:	ldr	r0, [fp, #-12]
   37a34:	cmp	r0, #0
   37a38:	bne	37a68 <__assert_fail@plt+0x26314>
   37a3c:	b	37a88 <__assert_fail@plt+0x26334>
   37a40:	ldr	r0, [fp, #-12]
   37a44:	mvn	r1, #0
   37a48:	udiv	r0, r1, r0
   37a4c:	ldr	r1, [fp, #-8]
   37a50:	ldr	r2, [r1]
   37a54:	ldr	r1, [r1, #4]
   37a58:	subs	r0, r0, r2
   37a5c:	rscs	r1, r1, #0
   37a60:	bcs	37a88 <__assert_fail@plt+0x26334>
   37a64:	b	37a68 <__assert_fail@plt+0x26314>
   37a68:	ldr	r0, [fp, #-8]
   37a6c:	ldr	r0, [r0]
   37a70:	ldr	r1, [fp, #-12]
   37a74:	mul	r0, r0, r1
   37a78:	mov	r1, #0
   37a7c:	str	r1, [fp, #-20]	; 0xffffffec
   37a80:	str	r0, [fp, #-24]	; 0xffffffe8
   37a84:	b	38024 <__assert_fail@plt+0x268d0>
   37a88:	ldr	r0, [fp, #-8]
   37a8c:	ldr	r0, [r0]
   37a90:	ldr	r1, [fp, #-12]
   37a94:	mul	r0, r0, r1
   37a98:	mov	r1, #0
   37a9c:	str	r1, [fp, #-20]	; 0xffffffec
   37aa0:	str	r0, [fp, #-24]	; 0xffffffe8
   37aa4:	b	38040 <__assert_fail@plt+0x268ec>
   37aa8:	b	37d8c <__assert_fail@plt+0x26638>
   37aac:	ldr	r0, [fp, #-12]
   37ab0:	cmp	r0, #0
   37ab4:	bge	37c5c <__assert_fail@plt+0x26508>
   37ab8:	mov	r0, #1
   37abc:	cmp	r0, #0
   37ac0:	bne	37bb0 <__assert_fail@plt+0x2645c>
   37ac4:	b	37ac8 <__assert_fail@plt+0x26374>
   37ac8:	b	37acc <__assert_fail@plt+0x26378>
   37acc:	ldr	r0, [fp, #-8]
   37ad0:	ldr	r1, [r0]
   37ad4:	ldr	r0, [r0, #4]
   37ad8:	ldr	r2, [fp, #-12]
   37adc:	asr	r3, r2, #31
   37ae0:	mvn	ip, #0
   37ae4:	mvn	lr, #-2147483648	; 0x80000000
   37ae8:	str	r0, [sp, #52]	; 0x34
   37aec:	mov	r0, ip
   37af0:	str	r1, [sp, #48]	; 0x30
   37af4:	mov	r1, lr
   37af8:	bl	3ba78 <__assert_fail@plt+0x2a324>
   37afc:	ldr	r2, [sp, #48]	; 0x30
   37b00:	subs	r0, r2, r0
   37b04:	ldr	r2, [sp, #52]	; 0x34
   37b08:	sbcs	r1, r2, r1
   37b0c:	bcc	37d34 <__assert_fail@plt+0x265e0>
   37b10:	b	37d60 <__assert_fail@plt+0x2660c>
   37b14:	b	37b18 <__assert_fail@plt+0x263c4>
   37b18:	ldr	r0, [pc, #1352]	; 38068 <__assert_fail@plt+0x26914>
   37b1c:	ldr	r1, [fp, #-12]
   37b20:	cmp	r1, r0
   37b24:	blt	37b3c <__assert_fail@plt+0x263e8>
   37b28:	b	37b50 <__assert_fail@plt+0x263fc>
   37b2c:	ldr	r0, [fp, #-12]
   37b30:	movw	r1, #0
   37b34:	cmp	r1, r0
   37b38:	bge	37b50 <__assert_fail@plt+0x263fc>
   37b3c:	mov	r0, #0
   37b40:	mvn	r1, #0
   37b44:	str	r1, [sp, #44]	; 0x2c
   37b48:	str	r0, [sp, #40]	; 0x28
   37b4c:	b	37b84 <__assert_fail@plt+0x26430>
   37b50:	ldr	r0, [fp, #-12]
   37b54:	rsb	r0, r0, #0
   37b58:	asr	r3, r0, #31
   37b5c:	mvn	r1, #0
   37b60:	mvn	r2, #-2147483648	; 0x80000000
   37b64:	str	r0, [sp, #36]	; 0x24
   37b68:	mov	r0, r1
   37b6c:	mov	r1, r2
   37b70:	ldr	r2, [sp, #36]	; 0x24
   37b74:	bl	3ba78 <__assert_fail@plt+0x2a324>
   37b78:	str	r0, [sp, #44]	; 0x2c
   37b7c:	str	r1, [sp, #40]	; 0x28
   37b80:	b	37b84 <__assert_fail@plt+0x26430>
   37b84:	ldr	r0, [sp, #40]	; 0x28
   37b88:	ldr	r1, [sp, #44]	; 0x2c
   37b8c:	ldr	r2, [fp, #-8]
   37b90:	ldr	r3, [r2]
   37b94:	ldr	r2, [r2, #4]
   37b98:	mvn	r2, r2
   37b9c:	mvn	r3, r3
   37ba0:	subs	r1, r3, r1
   37ba4:	sbcs	r0, r2, r0
   37ba8:	bcs	37d34 <__assert_fail@plt+0x265e0>
   37bac:	b	37d60 <__assert_fail@plt+0x2660c>
   37bb0:	ldr	r0, [fp, #-12]
   37bb4:	cmn	r0, #1
   37bb8:	bne	37c1c <__assert_fail@plt+0x264c8>
   37bbc:	b	37be0 <__assert_fail@plt+0x2648c>
   37bc0:	ldr	r0, [fp, #-8]
   37bc4:	ldr	r1, [r0]
   37bc8:	ldr	r0, [r0, #4]
   37bcc:	eor	r0, r0, #-2147483648	; 0x80000000
   37bd0:	orr	r0, r1, r0
   37bd4:	cmp	r0, #0
   37bd8:	bne	37d34 <__assert_fail@plt+0x265e0>
   37bdc:	b	37d60 <__assert_fail@plt+0x2660c>
   37be0:	ldr	r0, [fp, #-8]
   37be4:	ldr	r1, [r0]
   37be8:	ldr	r0, [r0, #4]
   37bec:	orr	r0, r1, r0
   37bf0:	cmp	r0, #0
   37bf4:	beq	37d60 <__assert_fail@plt+0x2660c>
   37bf8:	b	37bfc <__assert_fail@plt+0x264a8>
   37bfc:	ldr	r0, [fp, #-8]
   37c00:	ldr	r1, [r0]
   37c04:	ldr	r0, [r0, #4]
   37c08:	subs	r1, r1, #1
   37c0c:	sbc	r0, r0, #0
   37c10:	cmp	r0, #0
   37c14:	bmi	37d34 <__assert_fail@plt+0x265e0>
   37c18:	b	37d60 <__assert_fail@plt+0x2660c>
   37c1c:	ldr	r0, [fp, #-12]
   37c20:	asr	r3, r0, #31
   37c24:	mov	r1, #0
   37c28:	mov	r2, #-2147483648	; 0x80000000
   37c2c:	str	r0, [sp, #32]
   37c30:	mov	r0, r1
   37c34:	mov	r1, r2
   37c38:	ldr	r2, [sp, #32]
   37c3c:	bl	3ba78 <__assert_fail@plt+0x2a324>
   37c40:	ldr	r2, [fp, #-8]
   37c44:	ldr	r3, [r2]
   37c48:	ldr	r2, [r2, #4]
   37c4c:	subs	r0, r0, r3
   37c50:	sbcs	r1, r1, r2
   37c54:	bcc	37d34 <__assert_fail@plt+0x265e0>
   37c58:	b	37d60 <__assert_fail@plt+0x2660c>
   37c5c:	ldr	r0, [fp, #-12]
   37c60:	cmp	r0, #0
   37c64:	bne	37c6c <__assert_fail@plt+0x26518>
   37c68:	b	37d60 <__assert_fail@plt+0x2660c>
   37c6c:	mov	r0, #1
   37c70:	cmp	r0, #0
   37c74:	bne	37cf4 <__assert_fail@plt+0x265a0>
   37c78:	b	37c7c <__assert_fail@plt+0x26528>
   37c7c:	ldr	r0, [fp, #-8]
   37c80:	ldr	r1, [r0]
   37c84:	ldr	r0, [r0, #4]
   37c88:	and	r0, r1, r0
   37c8c:	cmn	r0, #1
   37c90:	bne	37cc8 <__assert_fail@plt+0x26574>
   37c94:	b	37c98 <__assert_fail@plt+0x26544>
   37c98:	b	37c9c <__assert_fail@plt+0x26548>
   37c9c:	ldr	r0, [fp, #-12]
   37ca0:	mov	r1, #-2147483648	; 0x80000000
   37ca4:	add	r1, r1, r0, asr #31
   37ca8:	rsbs	r0, r0, #0
   37cac:	rscs	r1, r1, #0
   37cb0:	blt	37d34 <__assert_fail@plt+0x265e0>
   37cb4:	b	37d60 <__assert_fail@plt+0x2660c>
   37cb8:	mov	r0, #0
   37cbc:	cmp	r0, #0
   37cc0:	bne	37d34 <__assert_fail@plt+0x265e0>
   37cc4:	b	37d60 <__assert_fail@plt+0x2660c>
   37cc8:	ldr	r0, [fp, #-8]
   37ccc:	ldr	r2, [r0]
   37cd0:	ldr	r3, [r0, #4]
   37cd4:	mov	r0, #0
   37cd8:	mov	r1, #-2147483648	; 0x80000000
   37cdc:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   37ce0:	ldr	r2, [fp, #-12]
   37ce4:	subs	r0, r0, r2
   37ce8:	sbcs	r1, r1, r2, asr #31
   37cec:	bcc	37d34 <__assert_fail@plt+0x265e0>
   37cf0:	b	37d60 <__assert_fail@plt+0x2660c>
   37cf4:	ldr	r0, [fp, #-12]
   37cf8:	asr	r3, r0, #31
   37cfc:	mvn	r1, #0
   37d00:	mvn	r2, #-2147483648	; 0x80000000
   37d04:	str	r0, [sp, #28]
   37d08:	mov	r0, r1
   37d0c:	mov	r1, r2
   37d10:	ldr	r2, [sp, #28]
   37d14:	bl	3ba78 <__assert_fail@plt+0x2a324>
   37d18:	ldr	r2, [fp, #-8]
   37d1c:	ldr	r3, [r2]
   37d20:	ldr	r2, [r2, #4]
   37d24:	subs	r0, r0, r3
   37d28:	sbcs	r1, r1, r2
   37d2c:	bcs	37d60 <__assert_fail@plt+0x2660c>
   37d30:	b	37d34 <__assert_fail@plt+0x265e0>
   37d34:	ldr	r0, [fp, #-8]
   37d38:	ldr	r1, [r0]
   37d3c:	ldr	r0, [r0, #4]
   37d40:	ldr	r2, [fp, #-12]
   37d44:	asr	r3, r2, #31
   37d48:	umull	ip, lr, r1, r2
   37d4c:	mla	r1, r1, r3, lr
   37d50:	mla	r0, r0, r2, r1
   37d54:	str	ip, [fp, #-24]	; 0xffffffe8
   37d58:	str	r0, [fp, #-20]	; 0xffffffec
   37d5c:	b	38024 <__assert_fail@plt+0x268d0>
   37d60:	ldr	r0, [fp, #-8]
   37d64:	ldr	r1, [r0]
   37d68:	ldr	r0, [r0, #4]
   37d6c:	ldr	r2, [fp, #-12]
   37d70:	asr	r3, r2, #31
   37d74:	umull	ip, lr, r1, r2
   37d78:	mla	r1, r1, r3, lr
   37d7c:	mla	r0, r0, r2, r1
   37d80:	str	ip, [fp, #-24]	; 0xffffffe8
   37d84:	str	r0, [fp, #-20]	; 0xffffffec
   37d88:	b	38040 <__assert_fail@plt+0x268ec>
   37d8c:	ldr	r0, [fp, #-12]
   37d90:	cmp	r0, #0
   37d94:	bge	37f08 <__assert_fail@plt+0x267b4>
   37d98:	mov	r0, #1
   37d9c:	cmp	r0, #0
   37da0:	bne	37e88 <__assert_fail@plt+0x26734>
   37da4:	b	37da8 <__assert_fail@plt+0x26654>
   37da8:	b	37df0 <__assert_fail@plt+0x2669c>
   37dac:	ldr	r0, [fp, #-8]
   37db0:	ldr	r1, [r0]
   37db4:	ldr	r0, [r0, #4]
   37db8:	ldr	r2, [fp, #-12]
   37dbc:	asr	r3, r2, #31
   37dc0:	mvn	ip, #0
   37dc4:	str	r0, [sp, #24]
   37dc8:	mov	r0, ip
   37dcc:	str	r1, [sp, #20]
   37dd0:	mov	r1, ip
   37dd4:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   37dd8:	ldr	r2, [sp, #20]
   37ddc:	subs	r0, r2, r0
   37de0:	ldr	r2, [sp, #24]
   37de4:	sbcs	r1, r2, r1
   37de8:	bcc	37fcc <__assert_fail@plt+0x26878>
   37dec:	b	37ff8 <__assert_fail@plt+0x268a4>
   37df0:	b	37df4 <__assert_fail@plt+0x266a0>
   37df4:	ldr	r0, [pc, #620]	; 38068 <__assert_fail@plt+0x26914>
   37df8:	ldr	r1, [fp, #-12]
   37dfc:	cmp	r1, r0
   37e00:	blt	37e18 <__assert_fail@plt+0x266c4>
   37e04:	b	37e30 <__assert_fail@plt+0x266dc>
   37e08:	ldr	r0, [fp, #-12]
   37e0c:	movw	r1, #0
   37e10:	cmp	r1, r0
   37e14:	bge	37e30 <__assert_fail@plt+0x266dc>
   37e18:	mov	r0, #1
   37e1c:	mvn	r1, #0
   37e20:	str	r1, [sp, #16]
   37e24:	str	r0, [sp, #12]
   37e28:	b	37e5c <__assert_fail@plt+0x26708>
   37e2c:			; <UNDEFINED> instruction: 0xffff8000
   37e30:	ldr	r0, [fp, #-12]
   37e34:	rsb	r0, r0, #0
   37e38:	asr	r3, r0, #31
   37e3c:	mvn	r1, #0
   37e40:	str	r0, [sp, #8]
   37e44:	mov	r0, r1
   37e48:	ldr	r2, [sp, #8]
   37e4c:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   37e50:	str	r0, [sp, #16]
   37e54:	str	r1, [sp, #12]
   37e58:	b	37e5c <__assert_fail@plt+0x26708>
   37e5c:	ldr	r0, [sp, #12]
   37e60:	ldr	r1, [sp, #16]
   37e64:	ldr	r2, [fp, #-8]
   37e68:	ldr	r3, [r2]
   37e6c:	ldr	r2, [r2, #4]
   37e70:	mvn	r2, r2
   37e74:	mvn	r3, r3
   37e78:	subs	r1, r3, r1
   37e7c:	sbcs	r0, r2, r0
   37e80:	bcs	37fcc <__assert_fail@plt+0x26878>
   37e84:	b	37ff8 <__assert_fail@plt+0x268a4>
   37e88:	b	37e8c <__assert_fail@plt+0x26738>
   37e8c:	b	37eec <__assert_fail@plt+0x26798>
   37e90:	b	37eec <__assert_fail@plt+0x26798>
   37e94:	ldr	r0, [fp, #-12]
   37e98:	cmn	r0, #1
   37e9c:	bne	37eec <__assert_fail@plt+0x26798>
   37ea0:	b	37ec0 <__assert_fail@plt+0x2676c>
   37ea4:	ldr	r0, [fp, #-8]
   37ea8:	ldr	r1, [r0]
   37eac:	ldr	r0, [r0, #4]
   37eb0:	orr	r0, r1, r0
   37eb4:	cmp	r0, #0
   37eb8:	bne	37fcc <__assert_fail@plt+0x26878>
   37ebc:	b	37ff8 <__assert_fail@plt+0x268a4>
   37ec0:	ldr	r0, [fp, #-8]
   37ec4:	ldr	r1, [r0]
   37ec8:	ldr	r0, [r0, #4]
   37ecc:	orr	r0, r1, r0
   37ed0:	cmp	r0, #0
   37ed4:	beq	37ff8 <__assert_fail@plt+0x268a4>
   37ed8:	b	37edc <__assert_fail@plt+0x26788>
   37edc:	mov	r0, #0
   37ee0:	cmp	r0, #0
   37ee4:	bne	37fcc <__assert_fail@plt+0x26878>
   37ee8:	b	37ff8 <__assert_fail@plt+0x268a4>
   37eec:	ldr	r0, [fp, #-8]
   37ef0:	ldr	r1, [r0]
   37ef4:	ldr	r0, [r0, #4]
   37ef8:	orr	r0, r1, r0
   37efc:	cmp	r0, #0
   37f00:	bne	37fcc <__assert_fail@plt+0x26878>
   37f04:	b	37ff8 <__assert_fail@plt+0x268a4>
   37f08:	ldr	r0, [fp, #-12]
   37f0c:	cmp	r0, #0
   37f10:	bne	37f18 <__assert_fail@plt+0x267c4>
   37f14:	b	37ff8 <__assert_fail@plt+0x268a4>
   37f18:	mov	r0, #1
   37f1c:	cmp	r0, #0
   37f20:	bne	37f94 <__assert_fail@plt+0x26840>
   37f24:	b	37f28 <__assert_fail@plt+0x267d4>
   37f28:	b	37f30 <__assert_fail@plt+0x267dc>
   37f2c:	b	37f34 <__assert_fail@plt+0x267e0>
   37f30:	b	37f84 <__assert_fail@plt+0x26830>
   37f34:	ldr	r0, [fp, #-8]
   37f38:	ldr	r1, [r0]
   37f3c:	ldr	r0, [r0, #4]
   37f40:	and	r0, r1, r0
   37f44:	cmn	r0, #1
   37f48:	bne	37f84 <__assert_fail@plt+0x26830>
   37f4c:	b	37f50 <__assert_fail@plt+0x267fc>
   37f50:	b	37f54 <__assert_fail@plt+0x26800>
   37f54:	ldr	r0, [fp, #-12]
   37f58:	add	r0, r0, #0
   37f5c:	movw	r1, #0
   37f60:	cmp	r1, r0
   37f64:	blt	37fcc <__assert_fail@plt+0x26878>
   37f68:	b	37ff8 <__assert_fail@plt+0x268a4>
   37f6c:	ldr	r0, [fp, #-12]
   37f70:	sub	r0, r0, #1
   37f74:	mvn	r1, #0
   37f78:	cmp	r1, r0
   37f7c:	blt	37fcc <__assert_fail@plt+0x26878>
   37f80:	b	37ff8 <__assert_fail@plt+0x268a4>
   37f84:	ldr	r0, [fp, #-12]
   37f88:	cmp	r0, #0
   37f8c:	bne	37fcc <__assert_fail@plt+0x26878>
   37f90:	b	37ff8 <__assert_fail@plt+0x268a4>
   37f94:	ldr	r0, [fp, #-12]
   37f98:	asr	r3, r0, #31
   37f9c:	mvn	r1, #0
   37fa0:	str	r0, [sp, #4]
   37fa4:	mov	r0, r1
   37fa8:	ldr	r2, [sp, #4]
   37fac:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   37fb0:	ldr	r2, [fp, #-8]
   37fb4:	ldr	r3, [r2]
   37fb8:	ldr	r2, [r2, #4]
   37fbc:	subs	r0, r0, r3
   37fc0:	sbcs	r1, r1, r2
   37fc4:	bcs	37ff8 <__assert_fail@plt+0x268a4>
   37fc8:	b	37fcc <__assert_fail@plt+0x26878>
   37fcc:	ldr	r0, [fp, #-8]
   37fd0:	ldr	r1, [r0]
   37fd4:	ldr	r0, [r0, #4]
   37fd8:	ldr	r2, [fp, #-12]
   37fdc:	asr	r3, r2, #31
   37fe0:	umull	ip, lr, r1, r2
   37fe4:	mla	r1, r1, r3, lr
   37fe8:	mla	r0, r0, r2, r1
   37fec:	str	ip, [fp, #-24]	; 0xffffffe8
   37ff0:	str	r0, [fp, #-20]	; 0xffffffec
   37ff4:	b	38024 <__assert_fail@plt+0x268d0>
   37ff8:	ldr	r0, [fp, #-8]
   37ffc:	ldr	r1, [r0]
   38000:	ldr	r0, [r0, #4]
   38004:	ldr	r2, [fp, #-12]
   38008:	asr	r3, r2, #31
   3800c:	umull	ip, lr, r1, r2
   38010:	mla	r1, r1, r3, lr
   38014:	mla	r0, r0, r2, r1
   38018:	str	ip, [fp, #-24]	; 0xffffffe8
   3801c:	str	r0, [fp, #-20]	; 0xffffffec
   38020:	b	38040 <__assert_fail@plt+0x268ec>
   38024:	ldr	r0, [fp, #-8]
   38028:	mvn	r1, #0
   3802c:	str	r1, [r0, #4]
   38030:	str	r1, [r0]
   38034:	movw	r0, #1
   38038:	str	r0, [fp, #-4]
   3803c:	b	3805c <__assert_fail@plt+0x26908>
   38040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38044:	ldr	r1, [fp, #-20]	; 0xffffffec
   38048:	ldr	r2, [fp, #-8]
   3804c:	str	r1, [r2, #4]
   38050:	str	r0, [r2]
   38054:	movw	r0, #0
   38058:	str	r0, [fp, #-4]
   3805c:	ldr	r0, [fp, #-4]
   38060:	mov	sp, fp
   38064:	pop	{fp, pc}
   38068:	andhi	r0, r0, r1
   3806c:	svcvc	0x00ffffff
   38070:	push	{fp, lr}
   38074:	mov	fp, sp
   38078:	sub	sp, sp, #16
   3807c:	str	r0, [fp, #-4]
   38080:	str	r1, [sp, #8]
   38084:	str	r2, [sp, #4]
   38088:	movw	r0, #0
   3808c:	str	r0, [sp]
   38090:	ldr	r0, [sp, #4]
   38094:	mvn	r1, #0
   38098:	add	r1, r0, r1
   3809c:	str	r1, [sp, #4]
   380a0:	cmp	r0, #0
   380a4:	beq	380c4 <__assert_fail@plt+0x26970>
   380a8:	ldr	r0, [fp, #-4]
   380ac:	ldr	r1, [sp, #8]
   380b0:	bl	367f8 <__assert_fail@plt+0x250a4>
   380b4:	ldr	r1, [sp]
   380b8:	orr	r0, r1, r0
   380bc:	str	r0, [sp]
   380c0:	b	38090 <__assert_fail@plt+0x2693c>
   380c4:	ldr	r0, [sp]
   380c8:	mov	sp, fp
   380cc:	pop	{fp, pc}
   380d0:	push	{fp, lr}
   380d4:	mov	fp, sp
   380d8:	sub	sp, sp, #16
   380dc:	str	r0, [sp, #8]
   380e0:	str	r1, [sp, #4]
   380e4:	ldr	r0, [sp, #8]
   380e8:	cmp	r0, #0
   380ec:	beq	380fc <__assert_fail@plt+0x269a8>
   380f0:	ldr	r0, [sp, #4]
   380f4:	cmp	r0, #0
   380f8:	bne	38108 <__assert_fail@plt+0x269b4>
   380fc:	movw	r0, #1
   38100:	str	r0, [sp, #4]
   38104:	str	r0, [sp, #8]
   38108:	ldr	r0, [sp, #4]
   3810c:	cmp	r0, #0
   38110:	beq	38144 <__assert_fail@plt+0x269f0>
   38114:	ldr	r0, [pc, #76]	; 38168 <__assert_fail@plt+0x26a14>
   38118:	ldr	r1, [sp, #4]
   3811c:	udiv	r0, r0, r1
   38120:	ldr	r1, [sp, #8]
   38124:	cmp	r0, r1
   38128:	bcs	38144 <__assert_fail@plt+0x269f0>
   3812c:	bl	11628 <__errno_location@plt>
   38130:	movw	r1, #12
   38134:	str	r1, [r0]
   38138:	movw	r0, #0
   3813c:	str	r0, [fp, #-4]
   38140:	b	3815c <__assert_fail@plt+0x26a08>
   38144:	ldr	r0, [sp, #8]
   38148:	ldr	r1, [sp, #4]
   3814c:	bl	113b8 <calloc@plt>
   38150:	str	r0, [sp]
   38154:	ldr	r0, [sp]
   38158:	str	r0, [fp, #-4]
   3815c:	ldr	r0, [fp, #-4]
   38160:	mov	sp, fp
   38164:	pop	{fp, pc}
   38168:	svcvc	0x00ffffff
   3816c:	push	{fp, lr}
   38170:	mov	fp, sp
   38174:	sub	sp, sp, #16
   38178:	str	r0, [sp, #8]
   3817c:	ldr	r0, [sp, #8]
   38180:	cmp	r0, #0
   38184:	bne	38190 <__assert_fail@plt+0x26a3c>
   38188:	movw	r0, #1
   3818c:	str	r0, [sp, #8]
   38190:	ldr	r0, [pc, #64]	; 381d8 <__assert_fail@plt+0x26a84>
   38194:	ldr	r1, [sp, #8]
   38198:	cmp	r0, r1
   3819c:	bcs	381b8 <__assert_fail@plt+0x26a64>
   381a0:	bl	11628 <__errno_location@plt>
   381a4:	movw	r1, #12
   381a8:	str	r1, [r0]
   381ac:	movw	r0, #0
   381b0:	str	r0, [fp, #-4]
   381b4:	b	381cc <__assert_fail@plt+0x26a78>
   381b8:	ldr	r0, [sp, #8]
   381bc:	bl	11598 <malloc@plt>
   381c0:	str	r0, [sp, #4]
   381c4:	ldr	r0, [sp, #4]
   381c8:	str	r0, [fp, #-4]
   381cc:	ldr	r0, [fp, #-4]
   381d0:	mov	sp, fp
   381d4:	pop	{fp, pc}
   381d8:	svcvc	0x00ffffff
   381dc:	push	{fp, lr}
   381e0:	mov	fp, sp
   381e4:	sub	sp, sp, #16
   381e8:	str	r0, [sp, #8]
   381ec:	str	r1, [sp, #4]
   381f0:	ldr	r0, [sp, #8]
   381f4:	movw	r1, #0
   381f8:	cmp	r0, r1
   381fc:	bne	38210 <__assert_fail@plt+0x26abc>
   38200:	ldr	r0, [sp, #4]
   38204:	bl	3816c <__assert_fail@plt+0x26a18>
   38208:	str	r0, [fp, #-4]
   3820c:	b	38270 <__assert_fail@plt+0x26b1c>
   38210:	ldr	r0, [sp, #4]
   38214:	cmp	r0, #0
   38218:	bne	38230 <__assert_fail@plt+0x26adc>
   3821c:	ldr	r0, [sp, #8]
   38220:	bl	15f68 <__assert_fail@plt+0x4814>
   38224:	movw	r0, #0
   38228:	str	r0, [fp, #-4]
   3822c:	b	38270 <__assert_fail@plt+0x26b1c>
   38230:	ldr	r0, [pc, #68]	; 3827c <__assert_fail@plt+0x26b28>
   38234:	ldr	r1, [sp, #4]
   38238:	cmp	r0, r1
   3823c:	bcs	38258 <__assert_fail@plt+0x26b04>
   38240:	bl	11628 <__errno_location@plt>
   38244:	movw	r1, #12
   38248:	str	r1, [r0]
   3824c:	movw	r0, #0
   38250:	str	r0, [fp, #-4]
   38254:	b	38270 <__assert_fail@plt+0x26b1c>
   38258:	ldr	r0, [sp, #8]
   3825c:	ldr	r1, [sp, #4]
   38260:	bl	114f0 <realloc@plt>
   38264:	str	r0, [sp]
   38268:	ldr	r0, [sp]
   3826c:	str	r0, [fp, #-4]
   38270:	ldr	r0, [fp, #-4]
   38274:	mov	sp, fp
   38278:	pop	{fp, pc}
   3827c:	svcvc	0x00ffffff
   38280:	push	{fp, lr}
   38284:	mov	fp, sp
   38288:	sub	sp, sp, #24
   3828c:	str	r0, [fp, #-8]
   38290:	str	r1, [sp, #12]
   38294:	ldr	r0, [fp, #-8]
   38298:	str	r0, [sp, #8]
   3829c:	ldr	r0, [sp, #12]
   382a0:	str	r0, [sp, #4]
   382a4:	ldr	r0, [sp, #8]
   382a8:	ldr	r1, [sp, #4]
   382ac:	cmp	r0, r1
   382b0:	bne	382c0 <__assert_fail@plt+0x26b6c>
   382b4:	movw	r0, #0
   382b8:	str	r0, [fp, #-4]
   382bc:	b	3832c <__assert_fail@plt+0x26bd8>
   382c0:	b	382c4 <__assert_fail@plt+0x26b70>
   382c4:	ldr	r0, [sp, #8]
   382c8:	ldrb	r0, [r0]
   382cc:	bl	3b7f8 <__assert_fail@plt+0x2a0a4>
   382d0:	strb	r0, [sp, #3]
   382d4:	ldr	r0, [sp, #4]
   382d8:	ldrb	r0, [r0]
   382dc:	bl	3b7f8 <__assert_fail@plt+0x2a0a4>
   382e0:	strb	r0, [sp, #2]
   382e4:	ldrb	r0, [sp, #3]
   382e8:	cmp	r0, #0
   382ec:	bne	382f4 <__assert_fail@plt+0x26ba0>
   382f0:	b	3831c <__assert_fail@plt+0x26bc8>
   382f4:	ldr	r0, [sp, #8]
   382f8:	add	r0, r0, #1
   382fc:	str	r0, [sp, #8]
   38300:	ldr	r0, [sp, #4]
   38304:	add	r0, r0, #1
   38308:	str	r0, [sp, #4]
   3830c:	ldrb	r0, [sp, #3]
   38310:	ldrb	r1, [sp, #2]
   38314:	cmp	r0, r1
   38318:	beq	382c4 <__assert_fail@plt+0x26b70>
   3831c:	ldrb	r0, [sp, #3]
   38320:	ldrb	r1, [sp, #2]
   38324:	sub	r0, r0, r1
   38328:	str	r0, [fp, #-4]
   3832c:	ldr	r0, [fp, #-4]
   38330:	mov	sp, fp
   38334:	pop	{fp, pc}
   38338:	push	{fp, lr}
   3833c:	mov	fp, sp
   38340:	sub	sp, sp, #16
   38344:	str	r0, [sp, #8]
   38348:	ldr	r0, [sp, #8]
   3834c:	bl	1155c <__fpending@plt>
   38350:	cmp	r0, #0
   38354:	movw	r0, #0
   38358:	movne	r0, #1
   3835c:	and	r0, r0, #1
   38360:	strb	r0, [sp, #7]
   38364:	ldr	r0, [sp, #8]
   38368:	bl	11568 <ferror_unlocked@plt>
   3836c:	cmp	r0, #0
   38370:	movw	r0, #0
   38374:	movne	r0, #1
   38378:	and	r0, r0, #1
   3837c:	strb	r0, [sp, #6]
   38380:	ldr	r0, [sp, #8]
   38384:	bl	15bfc <__assert_fail@plt+0x44a8>
   38388:	cmp	r0, #0
   3838c:	movw	r0, #0
   38390:	movne	r0, #1
   38394:	and	r0, r0, #1
   38398:	strb	r0, [sp, #5]
   3839c:	ldrb	r0, [sp, #6]
   383a0:	tst	r0, #1
   383a4:	bne	383d0 <__assert_fail@plt+0x26c7c>
   383a8:	ldrb	r0, [sp, #5]
   383ac:	tst	r0, #1
   383b0:	beq	383f4 <__assert_fail@plt+0x26ca0>
   383b4:	ldrb	r0, [sp, #7]
   383b8:	tst	r0, #1
   383bc:	bne	383d0 <__assert_fail@plt+0x26c7c>
   383c0:	bl	11628 <__errno_location@plt>
   383c4:	ldr	r0, [r0]
   383c8:	cmp	r0, #9
   383cc:	beq	383f4 <__assert_fail@plt+0x26ca0>
   383d0:	ldrb	r0, [sp, #5]
   383d4:	tst	r0, #1
   383d8:	bne	383e8 <__assert_fail@plt+0x26c94>
   383dc:	bl	11628 <__errno_location@plt>
   383e0:	movw	r1, #0
   383e4:	str	r1, [r0]
   383e8:	mvn	r0, #0
   383ec:	str	r0, [fp, #-4]
   383f0:	b	383fc <__assert_fail@plt+0x26ca8>
   383f4:	movw	r0, #0
   383f8:	str	r0, [fp, #-4]
   383fc:	ldr	r0, [fp, #-4]
   38400:	mov	sp, fp
   38404:	pop	{fp, pc}
   38408:	push	{fp, lr}
   3840c:	mov	fp, sp
   38410:	sub	sp, sp, #104	; 0x68
   38414:	str	r0, [fp, #-8]
   38418:	str	r1, [fp, #-12]
   3841c:	str	r2, [fp, #-16]
   38420:	str	r3, [fp, #-20]	; 0xffffffec
   38424:	ldr	r0, [fp, #-12]
   38428:	ldr	r1, [fp, #-8]
   3842c:	ldr	r1, [r1, #4]
   38430:	cmp	r0, r1
   38434:	bhi	38454 <__assert_fail@plt+0x26d00>
   38438:	ldr	r0, [fp, #-12]
   3843c:	ldr	r1, [fp, #-8]
   38440:	str	r0, [r1]
   38444:	movw	r0, #1
   38448:	and	r0, r0, #1
   3844c:	strb	r0, [fp, #-1]
   38450:	b	39824 <__assert_fail@plt+0x280d0>
   38454:	b	3880c <__assert_fail@plt+0x270b8>
   38458:	b	3862c <__assert_fail@plt+0x26ed8>
   3845c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38460:	cmp	r0, #0
   38464:	bcs	38568 <__assert_fail@plt+0x26e14>
   38468:	ldr	r0, [fp, #-12]
   3846c:	cmp	r0, #0
   38470:	bcs	384f8 <__assert_fail@plt+0x26da4>
   38474:	b	38494 <__assert_fail@plt+0x26d40>
   38478:	ldr	r0, [fp, #-12]
   3847c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38480:	movw	r2, #127	; 0x7f
   38484:	udiv	r1, r2, r1
   38488:	cmp	r0, r1
   3848c:	bcc	385fc <__assert_fail@plt+0x26ea8>
   38490:	b	38614 <__assert_fail@plt+0x26ec0>
   38494:	b	384a8 <__assert_fail@plt+0x26d54>
   38498:	ldr	r0, [fp, #-20]	; 0xffffffec
   3849c:	cmp	r0, #1
   384a0:	bcc	384b8 <__assert_fail@plt+0x26d64>
   384a4:	b	384c4 <__assert_fail@plt+0x26d70>
   384a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   384ac:	movw	r1, #0
   384b0:	cmp	r1, r0
   384b4:	bcs	384c4 <__assert_fail@plt+0x26d70>
   384b8:	movw	r0, #0
   384bc:	str	r0, [fp, #-32]	; 0xffffffe0
   384c0:	b	384dc <__assert_fail@plt+0x26d88>
   384c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   384c8:	movw	r1, #0
   384cc:	sub	r0, r1, r0
   384d0:	movw	r1, #127	; 0x7f
   384d4:	udiv	r0, r1, r0
   384d8:	str	r0, [fp, #-32]	; 0xffffffe0
   384dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   384e0:	ldr	r1, [fp, #-12]
   384e4:	mvn	r2, #0
   384e8:	sub	r1, r2, r1
   384ec:	cmp	r0, r1
   384f0:	bls	385fc <__assert_fail@plt+0x26ea8>
   384f4:	b	38614 <__assert_fail@plt+0x26ec0>
   384f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   384fc:	cmn	r0, #1
   38500:	bne	3854c <__assert_fail@plt+0x26df8>
   38504:	b	38524 <__assert_fail@plt+0x26dd0>
   38508:	ldr	r0, [fp, #-12]
   3850c:	mvn	r1, #127	; 0x7f
   38510:	add	r0, r0, r1
   38514:	movw	r1, #0
   38518:	cmp	r1, r0
   3851c:	bcc	385fc <__assert_fail@plt+0x26ea8>
   38520:	b	38614 <__assert_fail@plt+0x26ec0>
   38524:	ldr	r0, [fp, #-12]
   38528:	movw	r1, #0
   3852c:	cmp	r1, r0
   38530:	bcs	38614 <__assert_fail@plt+0x26ec0>
   38534:	ldr	r0, [fp, #-12]
   38538:	sub	r0, r0, #1
   3853c:	movw	r1, #127	; 0x7f
   38540:	cmp	r1, r0
   38544:	bcc	385fc <__assert_fail@plt+0x26ea8>
   38548:	b	38614 <__assert_fail@plt+0x26ec0>
   3854c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38550:	mvn	r1, #127	; 0x7f
   38554:	udiv	r0, r1, r0
   38558:	ldr	r1, [fp, #-12]
   3855c:	cmp	r0, r1
   38560:	bcc	385fc <__assert_fail@plt+0x26ea8>
   38564:	b	38614 <__assert_fail@plt+0x26ec0>
   38568:	ldr	r0, [fp, #-20]	; 0xffffffec
   3856c:	cmp	r0, #0
   38570:	bne	38578 <__assert_fail@plt+0x26e24>
   38574:	b	38614 <__assert_fail@plt+0x26ec0>
   38578:	ldr	r0, [fp, #-12]
   3857c:	cmp	r0, #0
   38580:	bcs	385e4 <__assert_fail@plt+0x26e90>
   38584:	ldr	r0, [fp, #-12]
   38588:	cmn	r0, #1
   3858c:	bne	385c8 <__assert_fail@plt+0x26e74>
   38590:	b	385b0 <__assert_fail@plt+0x26e5c>
   38594:	ldr	r0, [fp, #-20]	; 0xffffffec
   38598:	mvn	r1, #127	; 0x7f
   3859c:	add	r0, r0, r1
   385a0:	movw	r1, #0
   385a4:	cmp	r1, r0
   385a8:	bcc	385fc <__assert_fail@plt+0x26ea8>
   385ac:	b	38614 <__assert_fail@plt+0x26ec0>
   385b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   385b4:	sub	r0, r0, #1
   385b8:	movw	r1, #127	; 0x7f
   385bc:	cmp	r1, r0
   385c0:	bcc	385fc <__assert_fail@plt+0x26ea8>
   385c4:	b	38614 <__assert_fail@plt+0x26ec0>
   385c8:	ldr	r0, [fp, #-12]
   385cc:	mvn	r1, #127	; 0x7f
   385d0:	udiv	r0, r1, r0
   385d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   385d8:	cmp	r0, r1
   385dc:	bcc	385fc <__assert_fail@plt+0x26ea8>
   385e0:	b	38614 <__assert_fail@plt+0x26ec0>
   385e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   385e8:	movw	r1, #127	; 0x7f
   385ec:	udiv	r0, r1, r0
   385f0:	ldr	r1, [fp, #-12]
   385f4:	cmp	r0, r1
   385f8:	bcs	38614 <__assert_fail@plt+0x26ec0>
   385fc:	ldr	r0, [fp, #-12]
   38600:	ldr	r1, [fp, #-20]	; 0xffffffec
   38604:	mul	r0, r0, r1
   38608:	sxtb	r0, r0
   3860c:	str	r0, [fp, #-24]	; 0xffffffe8
   38610:	b	3973c <__assert_fail@plt+0x27fe8>
   38614:	ldr	r0, [fp, #-12]
   38618:	ldr	r1, [fp, #-20]	; 0xffffffec
   3861c:	mul	r0, r0, r1
   38620:	sxtb	r0, r0
   38624:	str	r0, [fp, #-24]	; 0xffffffe8
   38628:	b	39758 <__assert_fail@plt+0x28004>
   3862c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38630:	cmp	r0, #0
   38634:	bcs	38740 <__assert_fail@plt+0x26fec>
   38638:	ldr	r0, [fp, #-12]
   3863c:	cmp	r0, #0
   38640:	bcs	386c8 <__assert_fail@plt+0x26f74>
   38644:	b	38664 <__assert_fail@plt+0x26f10>
   38648:	ldr	r0, [fp, #-12]
   3864c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38650:	movw	r2, #255	; 0xff
   38654:	udiv	r1, r2, r1
   38658:	cmp	r0, r1
   3865c:	bcc	387dc <__assert_fail@plt+0x27088>
   38660:	b	387f4 <__assert_fail@plt+0x270a0>
   38664:	b	38678 <__assert_fail@plt+0x26f24>
   38668:	ldr	r0, [fp, #-20]	; 0xffffffec
   3866c:	cmp	r0, #1
   38670:	bcc	38688 <__assert_fail@plt+0x26f34>
   38674:	b	38694 <__assert_fail@plt+0x26f40>
   38678:	ldr	r0, [fp, #-20]	; 0xffffffec
   3867c:	movw	r1, #0
   38680:	cmp	r1, r0
   38684:	bcs	38694 <__assert_fail@plt+0x26f40>
   38688:	movw	r0, #0
   3868c:	str	r0, [fp, #-36]	; 0xffffffdc
   38690:	b	386ac <__assert_fail@plt+0x26f58>
   38694:	ldr	r0, [fp, #-20]	; 0xffffffec
   38698:	movw	r1, #0
   3869c:	sub	r0, r1, r0
   386a0:	movw	r1, #255	; 0xff
   386a4:	udiv	r0, r1, r0
   386a8:	str	r0, [fp, #-36]	; 0xffffffdc
   386ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   386b0:	ldr	r1, [fp, #-12]
   386b4:	mvn	r2, #0
   386b8:	sub	r1, r2, r1
   386bc:	cmp	r0, r1
   386c0:	bls	387dc <__assert_fail@plt+0x27088>
   386c4:	b	387f4 <__assert_fail@plt+0x270a0>
   386c8:	b	386d0 <__assert_fail@plt+0x26f7c>
   386cc:	b	386d4 <__assert_fail@plt+0x26f80>
   386d0:	b	38724 <__assert_fail@plt+0x26fd0>
   386d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   386d8:	cmn	r0, #1
   386dc:	bne	38724 <__assert_fail@plt+0x26fd0>
   386e0:	b	386fc <__assert_fail@plt+0x26fa8>
   386e4:	ldr	r0, [fp, #-12]
   386e8:	add	r0, r0, #0
   386ec:	movw	r1, #0
   386f0:	cmp	r1, r0
   386f4:	bcc	387dc <__assert_fail@plt+0x27088>
   386f8:	b	387f4 <__assert_fail@plt+0x270a0>
   386fc:	ldr	r0, [fp, #-12]
   38700:	movw	r1, #0
   38704:	cmp	r1, r0
   38708:	bcs	387f4 <__assert_fail@plt+0x270a0>
   3870c:	ldr	r0, [fp, #-12]
   38710:	sub	r0, r0, #1
   38714:	mvn	r1, #0
   38718:	cmp	r1, r0
   3871c:	bcc	387dc <__assert_fail@plt+0x27088>
   38720:	b	387f4 <__assert_fail@plt+0x270a0>
   38724:	ldr	r0, [fp, #-20]	; 0xffffffec
   38728:	movw	r1, #0
   3872c:	udiv	r0, r1, r0
   38730:	ldr	r1, [fp, #-12]
   38734:	cmp	r0, r1
   38738:	bcc	387dc <__assert_fail@plt+0x27088>
   3873c:	b	387f4 <__assert_fail@plt+0x270a0>
   38740:	ldr	r0, [fp, #-20]	; 0xffffffec
   38744:	cmp	r0, #0
   38748:	bne	38750 <__assert_fail@plt+0x26ffc>
   3874c:	b	387f4 <__assert_fail@plt+0x270a0>
   38750:	ldr	r0, [fp, #-12]
   38754:	cmp	r0, #0
   38758:	bcs	387c4 <__assert_fail@plt+0x27070>
   3875c:	b	38764 <__assert_fail@plt+0x27010>
   38760:	b	38768 <__assert_fail@plt+0x27014>
   38764:	b	387a8 <__assert_fail@plt+0x27054>
   38768:	ldr	r0, [fp, #-12]
   3876c:	cmn	r0, #1
   38770:	bne	387a8 <__assert_fail@plt+0x27054>
   38774:	b	38790 <__assert_fail@plt+0x2703c>
   38778:	ldr	r0, [fp, #-20]	; 0xffffffec
   3877c:	add	r0, r0, #0
   38780:	movw	r1, #0
   38784:	cmp	r1, r0
   38788:	bcc	387dc <__assert_fail@plt+0x27088>
   3878c:	b	387f4 <__assert_fail@plt+0x270a0>
   38790:	ldr	r0, [fp, #-20]	; 0xffffffec
   38794:	sub	r0, r0, #1
   38798:	mvn	r1, #0
   3879c:	cmp	r1, r0
   387a0:	bcc	387dc <__assert_fail@plt+0x27088>
   387a4:	b	387f4 <__assert_fail@plt+0x270a0>
   387a8:	ldr	r0, [fp, #-12]
   387ac:	movw	r1, #0
   387b0:	udiv	r0, r1, r0
   387b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   387b8:	cmp	r0, r1
   387bc:	bcc	387dc <__assert_fail@plt+0x27088>
   387c0:	b	387f4 <__assert_fail@plt+0x270a0>
   387c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   387c8:	movw	r1, #255	; 0xff
   387cc:	udiv	r0, r1, r0
   387d0:	ldr	r1, [fp, #-12]
   387d4:	cmp	r0, r1
   387d8:	bcs	387f4 <__assert_fail@plt+0x270a0>
   387dc:	ldr	r0, [fp, #-12]
   387e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   387e4:	mul	r0, r0, r1
   387e8:	and	r0, r0, #255	; 0xff
   387ec:	str	r0, [fp, #-24]	; 0xffffffe8
   387f0:	b	3973c <__assert_fail@plt+0x27fe8>
   387f4:	ldr	r0, [fp, #-12]
   387f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   387fc:	mul	r0, r0, r1
   38800:	and	r0, r0, #255	; 0xff
   38804:	str	r0, [fp, #-24]	; 0xffffffe8
   38808:	b	39758 <__assert_fail@plt+0x28004>
   3880c:	b	38bc4 <__assert_fail@plt+0x27470>
   38810:	b	389e4 <__assert_fail@plt+0x27290>
   38814:	ldr	r0, [fp, #-20]	; 0xffffffec
   38818:	cmp	r0, #0
   3881c:	bcs	38920 <__assert_fail@plt+0x271cc>
   38820:	ldr	r0, [fp, #-12]
   38824:	cmp	r0, #0
   38828:	bcs	388b0 <__assert_fail@plt+0x2715c>
   3882c:	b	3884c <__assert_fail@plt+0x270f8>
   38830:	ldr	r0, [fp, #-12]
   38834:	ldr	r1, [fp, #-20]	; 0xffffffec
   38838:	movw	r2, #32767	; 0x7fff
   3883c:	udiv	r1, r2, r1
   38840:	cmp	r0, r1
   38844:	bcc	389b4 <__assert_fail@plt+0x27260>
   38848:	b	389cc <__assert_fail@plt+0x27278>
   3884c:	b	38860 <__assert_fail@plt+0x2710c>
   38850:	ldr	r0, [fp, #-20]	; 0xffffffec
   38854:	cmp	r0, #1
   38858:	bcc	38870 <__assert_fail@plt+0x2711c>
   3885c:	b	3887c <__assert_fail@plt+0x27128>
   38860:	ldr	r0, [fp, #-20]	; 0xffffffec
   38864:	movw	r1, #0
   38868:	cmp	r1, r0
   3886c:	bcs	3887c <__assert_fail@plt+0x27128>
   38870:	movw	r0, #0
   38874:	str	r0, [fp, #-40]	; 0xffffffd8
   38878:	b	38894 <__assert_fail@plt+0x27140>
   3887c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38880:	movw	r1, #0
   38884:	sub	r0, r1, r0
   38888:	movw	r1, #32767	; 0x7fff
   3888c:	udiv	r0, r1, r0
   38890:	str	r0, [fp, #-40]	; 0xffffffd8
   38894:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38898:	ldr	r1, [fp, #-12]
   3889c:	mvn	r2, #0
   388a0:	sub	r1, r2, r1
   388a4:	cmp	r0, r1
   388a8:	bls	389b4 <__assert_fail@plt+0x27260>
   388ac:	b	389cc <__assert_fail@plt+0x27278>
   388b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   388b4:	cmn	r0, #1
   388b8:	bne	38904 <__assert_fail@plt+0x271b0>
   388bc:	b	388dc <__assert_fail@plt+0x27188>
   388c0:	ldr	r0, [pc, #3956]	; 3983c <__assert_fail@plt+0x280e8>
   388c4:	ldr	r1, [fp, #-12]
   388c8:	add	r0, r1, r0
   388cc:	movw	r1, #0
   388d0:	cmp	r1, r0
   388d4:	bcc	389b4 <__assert_fail@plt+0x27260>
   388d8:	b	389cc <__assert_fail@plt+0x27278>
   388dc:	ldr	r0, [fp, #-12]
   388e0:	movw	r1, #0
   388e4:	cmp	r1, r0
   388e8:	bcs	389cc <__assert_fail@plt+0x27278>
   388ec:	ldr	r0, [fp, #-12]
   388f0:	sub	r0, r0, #1
   388f4:	movw	r1, #32767	; 0x7fff
   388f8:	cmp	r1, r0
   388fc:	bcc	389b4 <__assert_fail@plt+0x27260>
   38900:	b	389cc <__assert_fail@plt+0x27278>
   38904:	ldr	r0, [pc, #3888]	; 3983c <__assert_fail@plt+0x280e8>
   38908:	ldr	r1, [fp, #-20]	; 0xffffffec
   3890c:	udiv	r0, r0, r1
   38910:	ldr	r1, [fp, #-12]
   38914:	cmp	r0, r1
   38918:	bcc	389b4 <__assert_fail@plt+0x27260>
   3891c:	b	389cc <__assert_fail@plt+0x27278>
   38920:	ldr	r0, [fp, #-20]	; 0xffffffec
   38924:	cmp	r0, #0
   38928:	bne	38930 <__assert_fail@plt+0x271dc>
   3892c:	b	389cc <__assert_fail@plt+0x27278>
   38930:	ldr	r0, [fp, #-12]
   38934:	cmp	r0, #0
   38938:	bcs	3899c <__assert_fail@plt+0x27248>
   3893c:	ldr	r0, [fp, #-12]
   38940:	cmn	r0, #1
   38944:	bne	38980 <__assert_fail@plt+0x2722c>
   38948:	b	38968 <__assert_fail@plt+0x27214>
   3894c:	ldr	r0, [pc, #3816]	; 3983c <__assert_fail@plt+0x280e8>
   38950:	ldr	r1, [fp, #-20]	; 0xffffffec
   38954:	add	r0, r1, r0
   38958:	movw	r1, #0
   3895c:	cmp	r1, r0
   38960:	bcc	389b4 <__assert_fail@plt+0x27260>
   38964:	b	389cc <__assert_fail@plt+0x27278>
   38968:	ldr	r0, [fp, #-20]	; 0xffffffec
   3896c:	sub	r0, r0, #1
   38970:	movw	r1, #32767	; 0x7fff
   38974:	cmp	r1, r0
   38978:	bcc	389b4 <__assert_fail@plt+0x27260>
   3897c:	b	389cc <__assert_fail@plt+0x27278>
   38980:	ldr	r0, [pc, #3764]	; 3983c <__assert_fail@plt+0x280e8>
   38984:	ldr	r1, [fp, #-12]
   38988:	udiv	r0, r0, r1
   3898c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38990:	cmp	r0, r1
   38994:	bcc	389b4 <__assert_fail@plt+0x27260>
   38998:	b	389cc <__assert_fail@plt+0x27278>
   3899c:	ldr	r0, [fp, #-20]	; 0xffffffec
   389a0:	movw	r1, #32767	; 0x7fff
   389a4:	udiv	r0, r1, r0
   389a8:	ldr	r1, [fp, #-12]
   389ac:	cmp	r0, r1
   389b0:	bcs	389cc <__assert_fail@plt+0x27278>
   389b4:	ldr	r0, [fp, #-12]
   389b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   389bc:	mul	r0, r0, r1
   389c0:	sxth	r0, r0
   389c4:	str	r0, [fp, #-24]	; 0xffffffe8
   389c8:	b	3973c <__assert_fail@plt+0x27fe8>
   389cc:	ldr	r0, [fp, #-12]
   389d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   389d4:	mul	r0, r0, r1
   389d8:	sxth	r0, r0
   389dc:	str	r0, [fp, #-24]	; 0xffffffe8
   389e0:	b	39758 <__assert_fail@plt+0x28004>
   389e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   389e8:	cmp	r0, #0
   389ec:	bcs	38af8 <__assert_fail@plt+0x273a4>
   389f0:	ldr	r0, [fp, #-12]
   389f4:	cmp	r0, #0
   389f8:	bcs	38a80 <__assert_fail@plt+0x2732c>
   389fc:	b	38a1c <__assert_fail@plt+0x272c8>
   38a00:	ldr	r0, [fp, #-12]
   38a04:	ldr	r1, [fp, #-20]	; 0xffffffec
   38a08:	movw	r2, #65535	; 0xffff
   38a0c:	udiv	r1, r2, r1
   38a10:	cmp	r0, r1
   38a14:	bcc	38b94 <__assert_fail@plt+0x27440>
   38a18:	b	38bac <__assert_fail@plt+0x27458>
   38a1c:	b	38a30 <__assert_fail@plt+0x272dc>
   38a20:	ldr	r0, [fp, #-20]	; 0xffffffec
   38a24:	cmp	r0, #1
   38a28:	bcc	38a40 <__assert_fail@plt+0x272ec>
   38a2c:	b	38a4c <__assert_fail@plt+0x272f8>
   38a30:	ldr	r0, [fp, #-20]	; 0xffffffec
   38a34:	movw	r1, #0
   38a38:	cmp	r1, r0
   38a3c:	bcs	38a4c <__assert_fail@plt+0x272f8>
   38a40:	movw	r0, #0
   38a44:	str	r0, [fp, #-44]	; 0xffffffd4
   38a48:	b	38a64 <__assert_fail@plt+0x27310>
   38a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38a50:	movw	r1, #0
   38a54:	sub	r0, r1, r0
   38a58:	movw	r1, #65535	; 0xffff
   38a5c:	udiv	r0, r1, r0
   38a60:	str	r0, [fp, #-44]	; 0xffffffd4
   38a64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38a68:	ldr	r1, [fp, #-12]
   38a6c:	mvn	r2, #0
   38a70:	sub	r1, r2, r1
   38a74:	cmp	r0, r1
   38a78:	bls	38b94 <__assert_fail@plt+0x27440>
   38a7c:	b	38bac <__assert_fail@plt+0x27458>
   38a80:	b	38a88 <__assert_fail@plt+0x27334>
   38a84:	b	38a8c <__assert_fail@plt+0x27338>
   38a88:	b	38adc <__assert_fail@plt+0x27388>
   38a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38a90:	cmn	r0, #1
   38a94:	bne	38adc <__assert_fail@plt+0x27388>
   38a98:	b	38ab4 <__assert_fail@plt+0x27360>
   38a9c:	ldr	r0, [fp, #-12]
   38aa0:	add	r0, r0, #0
   38aa4:	movw	r1, #0
   38aa8:	cmp	r1, r0
   38aac:	bcc	38b94 <__assert_fail@plt+0x27440>
   38ab0:	b	38bac <__assert_fail@plt+0x27458>
   38ab4:	ldr	r0, [fp, #-12]
   38ab8:	movw	r1, #0
   38abc:	cmp	r1, r0
   38ac0:	bcs	38bac <__assert_fail@plt+0x27458>
   38ac4:	ldr	r0, [fp, #-12]
   38ac8:	sub	r0, r0, #1
   38acc:	mvn	r1, #0
   38ad0:	cmp	r1, r0
   38ad4:	bcc	38b94 <__assert_fail@plt+0x27440>
   38ad8:	b	38bac <__assert_fail@plt+0x27458>
   38adc:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ae0:	movw	r1, #0
   38ae4:	udiv	r0, r1, r0
   38ae8:	ldr	r1, [fp, #-12]
   38aec:	cmp	r0, r1
   38af0:	bcc	38b94 <__assert_fail@plt+0x27440>
   38af4:	b	38bac <__assert_fail@plt+0x27458>
   38af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38afc:	cmp	r0, #0
   38b00:	bne	38b08 <__assert_fail@plt+0x273b4>
   38b04:	b	38bac <__assert_fail@plt+0x27458>
   38b08:	ldr	r0, [fp, #-12]
   38b0c:	cmp	r0, #0
   38b10:	bcs	38b7c <__assert_fail@plt+0x27428>
   38b14:	b	38b1c <__assert_fail@plt+0x273c8>
   38b18:	b	38b20 <__assert_fail@plt+0x273cc>
   38b1c:	b	38b60 <__assert_fail@plt+0x2740c>
   38b20:	ldr	r0, [fp, #-12]
   38b24:	cmn	r0, #1
   38b28:	bne	38b60 <__assert_fail@plt+0x2740c>
   38b2c:	b	38b48 <__assert_fail@plt+0x273f4>
   38b30:	ldr	r0, [fp, #-20]	; 0xffffffec
   38b34:	add	r0, r0, #0
   38b38:	movw	r1, #0
   38b3c:	cmp	r1, r0
   38b40:	bcc	38b94 <__assert_fail@plt+0x27440>
   38b44:	b	38bac <__assert_fail@plt+0x27458>
   38b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   38b4c:	sub	r0, r0, #1
   38b50:	mvn	r1, #0
   38b54:	cmp	r1, r0
   38b58:	bcc	38b94 <__assert_fail@plt+0x27440>
   38b5c:	b	38bac <__assert_fail@plt+0x27458>
   38b60:	ldr	r0, [fp, #-12]
   38b64:	movw	r1, #0
   38b68:	udiv	r0, r1, r0
   38b6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38b70:	cmp	r0, r1
   38b74:	bcc	38b94 <__assert_fail@plt+0x27440>
   38b78:	b	38bac <__assert_fail@plt+0x27458>
   38b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38b80:	movw	r1, #65535	; 0xffff
   38b84:	udiv	r0, r1, r0
   38b88:	ldr	r1, [fp, #-12]
   38b8c:	cmp	r0, r1
   38b90:	bcs	38bac <__assert_fail@plt+0x27458>
   38b94:	ldr	r0, [fp, #-12]
   38b98:	ldr	r1, [fp, #-20]	; 0xffffffec
   38b9c:	mul	r0, r0, r1
   38ba0:	uxth	r0, r0
   38ba4:	str	r0, [fp, #-24]	; 0xffffffe8
   38ba8:	b	3973c <__assert_fail@plt+0x27fe8>
   38bac:	ldr	r0, [fp, #-12]
   38bb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   38bb4:	mul	r0, r0, r1
   38bb8:	uxth	r0, r0
   38bbc:	str	r0, [fp, #-24]	; 0xffffffe8
   38bc0:	b	39758 <__assert_fail@plt+0x28004>
   38bc4:	b	38bc8 <__assert_fail@plt+0x27474>
   38bc8:	b	38d8c <__assert_fail@plt+0x27638>
   38bcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   38bd0:	cmp	r0, #0
   38bd4:	bcs	38cd4 <__assert_fail@plt+0x27580>
   38bd8:	ldr	r0, [fp, #-12]
   38bdc:	cmp	r0, #0
   38be0:	bcs	38c68 <__assert_fail@plt+0x27514>
   38be4:	b	38c04 <__assert_fail@plt+0x274b0>
   38be8:	ldr	r0, [pc, #3140]	; 39834 <__assert_fail@plt+0x280e0>
   38bec:	ldr	r1, [fp, #-12]
   38bf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   38bf4:	udiv	r0, r0, r2
   38bf8:	cmp	r1, r0
   38bfc:	bcc	38d64 <__assert_fail@plt+0x27610>
   38c00:	b	38d78 <__assert_fail@plt+0x27624>
   38c04:	b	38c18 <__assert_fail@plt+0x274c4>
   38c08:	ldr	r0, [fp, #-20]	; 0xffffffec
   38c0c:	cmp	r0, #1
   38c10:	bcc	38c28 <__assert_fail@plt+0x274d4>
   38c14:	b	38c34 <__assert_fail@plt+0x274e0>
   38c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   38c1c:	movw	r1, #0
   38c20:	cmp	r1, r0
   38c24:	bcs	38c34 <__assert_fail@plt+0x274e0>
   38c28:	movw	r0, #0
   38c2c:	str	r0, [fp, #-48]	; 0xffffffd0
   38c30:	b	38c4c <__assert_fail@plt+0x274f8>
   38c34:	ldr	r0, [pc, #3064]	; 39834 <__assert_fail@plt+0x280e0>
   38c38:	ldr	r1, [fp, #-20]	; 0xffffffec
   38c3c:	movw	r2, #0
   38c40:	sub	r1, r2, r1
   38c44:	udiv	r0, r0, r1
   38c48:	str	r0, [fp, #-48]	; 0xffffffd0
   38c4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38c50:	ldr	r1, [fp, #-12]
   38c54:	mvn	r2, #0
   38c58:	sub	r1, r2, r1
   38c5c:	cmp	r0, r1
   38c60:	bls	38d64 <__assert_fail@plt+0x27610>
   38c64:	b	38d78 <__assert_fail@plt+0x27624>
   38c68:	ldr	r0, [fp, #-20]	; 0xffffffec
   38c6c:	cmn	r0, #1
   38c70:	bne	38cb8 <__assert_fail@plt+0x27564>
   38c74:	b	38c90 <__assert_fail@plt+0x2753c>
   38c78:	ldr	r0, [fp, #-12]
   38c7c:	add	r0, r0, #-2147483648	; 0x80000000
   38c80:	movw	r1, #0
   38c84:	cmp	r1, r0
   38c88:	bcc	38d64 <__assert_fail@plt+0x27610>
   38c8c:	b	38d78 <__assert_fail@plt+0x27624>
   38c90:	ldr	r0, [fp, #-12]
   38c94:	movw	r1, #0
   38c98:	cmp	r1, r0
   38c9c:	bcs	38d78 <__assert_fail@plt+0x27624>
   38ca0:	ldr	r0, [pc, #2956]	; 39834 <__assert_fail@plt+0x280e0>
   38ca4:	ldr	r1, [fp, #-12]
   38ca8:	sub	r1, r1, #1
   38cac:	cmp	r0, r1
   38cb0:	bcc	38d64 <__assert_fail@plt+0x27610>
   38cb4:	b	38d78 <__assert_fail@plt+0x27624>
   38cb8:	ldr	r0, [pc, #2936]	; 39838 <__assert_fail@plt+0x280e4>
   38cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   38cc0:	udiv	r0, r0, r1
   38cc4:	ldr	r1, [fp, #-12]
   38cc8:	cmp	r0, r1
   38ccc:	bcc	38d64 <__assert_fail@plt+0x27610>
   38cd0:	b	38d78 <__assert_fail@plt+0x27624>
   38cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38cd8:	cmp	r0, #0
   38cdc:	bne	38ce4 <__assert_fail@plt+0x27590>
   38ce0:	b	38d78 <__assert_fail@plt+0x27624>
   38ce4:	ldr	r0, [fp, #-12]
   38ce8:	cmp	r0, #0
   38cec:	bcs	38d4c <__assert_fail@plt+0x275f8>
   38cf0:	ldr	r0, [fp, #-12]
   38cf4:	cmn	r0, #1
   38cf8:	bne	38d30 <__assert_fail@plt+0x275dc>
   38cfc:	b	38d18 <__assert_fail@plt+0x275c4>
   38d00:	ldr	r0, [fp, #-20]	; 0xffffffec
   38d04:	add	r0, r0, #-2147483648	; 0x80000000
   38d08:	movw	r1, #0
   38d0c:	cmp	r1, r0
   38d10:	bcc	38d64 <__assert_fail@plt+0x27610>
   38d14:	b	38d78 <__assert_fail@plt+0x27624>
   38d18:	ldr	r0, [pc, #2836]	; 39834 <__assert_fail@plt+0x280e0>
   38d1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d20:	sub	r1, r1, #1
   38d24:	cmp	r0, r1
   38d28:	bcc	38d64 <__assert_fail@plt+0x27610>
   38d2c:	b	38d78 <__assert_fail@plt+0x27624>
   38d30:	ldr	r0, [pc, #2816]	; 39838 <__assert_fail@plt+0x280e4>
   38d34:	ldr	r1, [fp, #-12]
   38d38:	udiv	r0, r0, r1
   38d3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d40:	cmp	r0, r1
   38d44:	bcc	38d64 <__assert_fail@plt+0x27610>
   38d48:	b	38d78 <__assert_fail@plt+0x27624>
   38d4c:	ldr	r0, [pc, #2784]	; 39834 <__assert_fail@plt+0x280e0>
   38d50:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d54:	udiv	r0, r0, r1
   38d58:	ldr	r1, [fp, #-12]
   38d5c:	cmp	r0, r1
   38d60:	bcs	38d78 <__assert_fail@plt+0x27624>
   38d64:	ldr	r0, [fp, #-12]
   38d68:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d6c:	mul	r0, r0, r1
   38d70:	str	r0, [fp, #-24]	; 0xffffffe8
   38d74:	b	3973c <__assert_fail@plt+0x27fe8>
   38d78:	ldr	r0, [fp, #-12]
   38d7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d80:	mul	r0, r0, r1
   38d84:	str	r0, [fp, #-24]	; 0xffffffe8
   38d88:	b	39758 <__assert_fail@plt+0x28004>
   38d8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38d90:	cmp	r0, #0
   38d94:	bcs	38ea0 <__assert_fail@plt+0x2774c>
   38d98:	ldr	r0, [fp, #-12]
   38d9c:	cmp	r0, #0
   38da0:	bcs	38e28 <__assert_fail@plt+0x276d4>
   38da4:	b	38dc4 <__assert_fail@plt+0x27670>
   38da8:	ldr	r0, [fp, #-12]
   38dac:	ldr	r1, [fp, #-20]	; 0xffffffec
   38db0:	mvn	r2, #0
   38db4:	udiv	r1, r2, r1
   38db8:	cmp	r0, r1
   38dbc:	bcc	38f3c <__assert_fail@plt+0x277e8>
   38dc0:	b	38f50 <__assert_fail@plt+0x277fc>
   38dc4:	b	38dd8 <__assert_fail@plt+0x27684>
   38dc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38dcc:	cmp	r0, #1
   38dd0:	bcc	38de8 <__assert_fail@plt+0x27694>
   38dd4:	b	38df4 <__assert_fail@plt+0x276a0>
   38dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ddc:	movw	r1, #0
   38de0:	cmp	r1, r0
   38de4:	bcs	38df4 <__assert_fail@plt+0x276a0>
   38de8:	movw	r0, #1
   38dec:	str	r0, [sp, #52]	; 0x34
   38df0:	b	38e0c <__assert_fail@plt+0x276b8>
   38df4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38df8:	movw	r1, #0
   38dfc:	sub	r0, r1, r0
   38e00:	mvn	r1, #0
   38e04:	udiv	r0, r1, r0
   38e08:	str	r0, [sp, #52]	; 0x34
   38e0c:	ldr	r0, [sp, #52]	; 0x34
   38e10:	ldr	r1, [fp, #-12]
   38e14:	mvn	r2, #0
   38e18:	sub	r1, r2, r1
   38e1c:	cmp	r0, r1
   38e20:	bls	38f3c <__assert_fail@plt+0x277e8>
   38e24:	b	38f50 <__assert_fail@plt+0x277fc>
   38e28:	b	38e30 <__assert_fail@plt+0x276dc>
   38e2c:	b	38e34 <__assert_fail@plt+0x276e0>
   38e30:	b	38e84 <__assert_fail@plt+0x27730>
   38e34:	ldr	r0, [fp, #-20]	; 0xffffffec
   38e38:	cmn	r0, #1
   38e3c:	bne	38e84 <__assert_fail@plt+0x27730>
   38e40:	b	38e5c <__assert_fail@plt+0x27708>
   38e44:	ldr	r0, [fp, #-12]
   38e48:	add	r0, r0, #0
   38e4c:	movw	r1, #0
   38e50:	cmp	r1, r0
   38e54:	bcc	38f3c <__assert_fail@plt+0x277e8>
   38e58:	b	38f50 <__assert_fail@plt+0x277fc>
   38e5c:	ldr	r0, [fp, #-12]
   38e60:	movw	r1, #0
   38e64:	cmp	r1, r0
   38e68:	bcs	38f50 <__assert_fail@plt+0x277fc>
   38e6c:	ldr	r0, [fp, #-12]
   38e70:	sub	r0, r0, #1
   38e74:	mvn	r1, #0
   38e78:	cmp	r1, r0
   38e7c:	bcc	38f3c <__assert_fail@plt+0x277e8>
   38e80:	b	38f50 <__assert_fail@plt+0x277fc>
   38e84:	ldr	r0, [fp, #-20]	; 0xffffffec
   38e88:	movw	r1, #0
   38e8c:	udiv	r0, r1, r0
   38e90:	ldr	r1, [fp, #-12]
   38e94:	cmp	r0, r1
   38e98:	bcc	38f3c <__assert_fail@plt+0x277e8>
   38e9c:	b	38f50 <__assert_fail@plt+0x277fc>
   38ea0:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ea4:	cmp	r0, #0
   38ea8:	bne	38eb0 <__assert_fail@plt+0x2775c>
   38eac:	b	38f50 <__assert_fail@plt+0x277fc>
   38eb0:	ldr	r0, [fp, #-12]
   38eb4:	cmp	r0, #0
   38eb8:	bcs	38f24 <__assert_fail@plt+0x277d0>
   38ebc:	b	38ec4 <__assert_fail@plt+0x27770>
   38ec0:	b	38ec8 <__assert_fail@plt+0x27774>
   38ec4:	b	38f08 <__assert_fail@plt+0x277b4>
   38ec8:	ldr	r0, [fp, #-12]
   38ecc:	cmn	r0, #1
   38ed0:	bne	38f08 <__assert_fail@plt+0x277b4>
   38ed4:	b	38ef0 <__assert_fail@plt+0x2779c>
   38ed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38edc:	add	r0, r0, #0
   38ee0:	movw	r1, #0
   38ee4:	cmp	r1, r0
   38ee8:	bcc	38f3c <__assert_fail@plt+0x277e8>
   38eec:	b	38f50 <__assert_fail@plt+0x277fc>
   38ef0:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ef4:	sub	r0, r0, #1
   38ef8:	mvn	r1, #0
   38efc:	cmp	r1, r0
   38f00:	bcc	38f3c <__assert_fail@plt+0x277e8>
   38f04:	b	38f50 <__assert_fail@plt+0x277fc>
   38f08:	ldr	r0, [fp, #-12]
   38f0c:	movw	r1, #0
   38f10:	udiv	r0, r1, r0
   38f14:	ldr	r1, [fp, #-20]	; 0xffffffec
   38f18:	cmp	r0, r1
   38f1c:	bcc	38f3c <__assert_fail@plt+0x277e8>
   38f20:	b	38f50 <__assert_fail@plt+0x277fc>
   38f24:	ldr	r0, [fp, #-20]	; 0xffffffec
   38f28:	mvn	r1, #0
   38f2c:	udiv	r0, r1, r0
   38f30:	ldr	r1, [fp, #-12]
   38f34:	cmp	r0, r1
   38f38:	bcs	38f50 <__assert_fail@plt+0x277fc>
   38f3c:	ldr	r0, [fp, #-12]
   38f40:	ldr	r1, [fp, #-20]	; 0xffffffec
   38f44:	mul	r0, r0, r1
   38f48:	str	r0, [fp, #-24]	; 0xffffffe8
   38f4c:	b	3973c <__assert_fail@plt+0x27fe8>
   38f50:	ldr	r0, [fp, #-12]
   38f54:	ldr	r1, [fp, #-20]	; 0xffffffec
   38f58:	mul	r0, r0, r1
   38f5c:	str	r0, [fp, #-24]	; 0xffffffe8
   38f60:	b	39758 <__assert_fail@plt+0x28004>
   38f64:	b	38f68 <__assert_fail@plt+0x27814>
   38f68:	b	3912c <__assert_fail@plt+0x279d8>
   38f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38f70:	cmp	r0, #0
   38f74:	bcs	39074 <__assert_fail@plt+0x27920>
   38f78:	ldr	r0, [fp, #-12]
   38f7c:	cmp	r0, #0
   38f80:	bcs	39008 <__assert_fail@plt+0x278b4>
   38f84:	b	38fa4 <__assert_fail@plt+0x27850>
   38f88:	ldr	r0, [pc, #2212]	; 39834 <__assert_fail@plt+0x280e0>
   38f8c:	ldr	r1, [fp, #-12]
   38f90:	ldr	r2, [fp, #-20]	; 0xffffffec
   38f94:	udiv	r0, r0, r2
   38f98:	cmp	r1, r0
   38f9c:	bcc	39104 <__assert_fail@plt+0x279b0>
   38fa0:	b	39118 <__assert_fail@plt+0x279c4>
   38fa4:	b	38fb8 <__assert_fail@plt+0x27864>
   38fa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38fac:	cmp	r0, #1
   38fb0:	bcc	38fc8 <__assert_fail@plt+0x27874>
   38fb4:	b	38fd4 <__assert_fail@plt+0x27880>
   38fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38fbc:	movw	r1, #0
   38fc0:	cmp	r1, r0
   38fc4:	bcs	38fd4 <__assert_fail@plt+0x27880>
   38fc8:	movw	r0, #0
   38fcc:	str	r0, [sp, #48]	; 0x30
   38fd0:	b	38fec <__assert_fail@plt+0x27898>
   38fd4:	ldr	r0, [pc, #2136]	; 39834 <__assert_fail@plt+0x280e0>
   38fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   38fdc:	movw	r2, #0
   38fe0:	sub	r1, r2, r1
   38fe4:	udiv	r0, r0, r1
   38fe8:	str	r0, [sp, #48]	; 0x30
   38fec:	ldr	r0, [sp, #48]	; 0x30
   38ff0:	ldr	r1, [fp, #-12]
   38ff4:	mvn	r2, #0
   38ff8:	sub	r1, r2, r1
   38ffc:	cmp	r0, r1
   39000:	bls	39104 <__assert_fail@plt+0x279b0>
   39004:	b	39118 <__assert_fail@plt+0x279c4>
   39008:	ldr	r0, [fp, #-20]	; 0xffffffec
   3900c:	cmn	r0, #1
   39010:	bne	39058 <__assert_fail@plt+0x27904>
   39014:	b	39030 <__assert_fail@plt+0x278dc>
   39018:	ldr	r0, [fp, #-12]
   3901c:	add	r0, r0, #-2147483648	; 0x80000000
   39020:	movw	r1, #0
   39024:	cmp	r1, r0
   39028:	bcc	39104 <__assert_fail@plt+0x279b0>
   3902c:	b	39118 <__assert_fail@plt+0x279c4>
   39030:	ldr	r0, [fp, #-12]
   39034:	movw	r1, #0
   39038:	cmp	r1, r0
   3903c:	bcs	39118 <__assert_fail@plt+0x279c4>
   39040:	ldr	r0, [pc, #2028]	; 39834 <__assert_fail@plt+0x280e0>
   39044:	ldr	r1, [fp, #-12]
   39048:	sub	r1, r1, #1
   3904c:	cmp	r0, r1
   39050:	bcc	39104 <__assert_fail@plt+0x279b0>
   39054:	b	39118 <__assert_fail@plt+0x279c4>
   39058:	ldr	r0, [pc, #2008]	; 39838 <__assert_fail@plt+0x280e4>
   3905c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39060:	udiv	r0, r0, r1
   39064:	ldr	r1, [fp, #-12]
   39068:	cmp	r0, r1
   3906c:	bcc	39104 <__assert_fail@plt+0x279b0>
   39070:	b	39118 <__assert_fail@plt+0x279c4>
   39074:	ldr	r0, [fp, #-20]	; 0xffffffec
   39078:	cmp	r0, #0
   3907c:	bne	39084 <__assert_fail@plt+0x27930>
   39080:	b	39118 <__assert_fail@plt+0x279c4>
   39084:	ldr	r0, [fp, #-12]
   39088:	cmp	r0, #0
   3908c:	bcs	390ec <__assert_fail@plt+0x27998>
   39090:	ldr	r0, [fp, #-12]
   39094:	cmn	r0, #1
   39098:	bne	390d0 <__assert_fail@plt+0x2797c>
   3909c:	b	390b8 <__assert_fail@plt+0x27964>
   390a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   390a4:	add	r0, r0, #-2147483648	; 0x80000000
   390a8:	movw	r1, #0
   390ac:	cmp	r1, r0
   390b0:	bcc	39104 <__assert_fail@plt+0x279b0>
   390b4:	b	39118 <__assert_fail@plt+0x279c4>
   390b8:	ldr	r0, [pc, #1908]	; 39834 <__assert_fail@plt+0x280e0>
   390bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   390c0:	sub	r1, r1, #1
   390c4:	cmp	r0, r1
   390c8:	bcc	39104 <__assert_fail@plt+0x279b0>
   390cc:	b	39118 <__assert_fail@plt+0x279c4>
   390d0:	ldr	r0, [pc, #1888]	; 39838 <__assert_fail@plt+0x280e4>
   390d4:	ldr	r1, [fp, #-12]
   390d8:	udiv	r0, r0, r1
   390dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   390e0:	cmp	r0, r1
   390e4:	bcc	39104 <__assert_fail@plt+0x279b0>
   390e8:	b	39118 <__assert_fail@plt+0x279c4>
   390ec:	ldr	r0, [pc, #1856]	; 39834 <__assert_fail@plt+0x280e0>
   390f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   390f4:	udiv	r0, r0, r1
   390f8:	ldr	r1, [fp, #-12]
   390fc:	cmp	r0, r1
   39100:	bcs	39118 <__assert_fail@plt+0x279c4>
   39104:	ldr	r0, [fp, #-12]
   39108:	ldr	r1, [fp, #-20]	; 0xffffffec
   3910c:	mul	r0, r0, r1
   39110:	str	r0, [fp, #-24]	; 0xffffffe8
   39114:	b	3973c <__assert_fail@plt+0x27fe8>
   39118:	ldr	r0, [fp, #-12]
   3911c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39120:	mul	r0, r0, r1
   39124:	str	r0, [fp, #-24]	; 0xffffffe8
   39128:	b	39758 <__assert_fail@plt+0x28004>
   3912c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39130:	cmp	r0, #0
   39134:	bcs	39240 <__assert_fail@plt+0x27aec>
   39138:	ldr	r0, [fp, #-12]
   3913c:	cmp	r0, #0
   39140:	bcs	391c8 <__assert_fail@plt+0x27a74>
   39144:	b	39164 <__assert_fail@plt+0x27a10>
   39148:	ldr	r0, [fp, #-12]
   3914c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39150:	mvn	r2, #0
   39154:	udiv	r1, r2, r1
   39158:	cmp	r0, r1
   3915c:	bcc	392dc <__assert_fail@plt+0x27b88>
   39160:	b	392f0 <__assert_fail@plt+0x27b9c>
   39164:	b	39178 <__assert_fail@plt+0x27a24>
   39168:	ldr	r0, [fp, #-20]	; 0xffffffec
   3916c:	cmp	r0, #1
   39170:	bcc	39188 <__assert_fail@plt+0x27a34>
   39174:	b	39194 <__assert_fail@plt+0x27a40>
   39178:	ldr	r0, [fp, #-20]	; 0xffffffec
   3917c:	movw	r1, #0
   39180:	cmp	r1, r0
   39184:	bcs	39194 <__assert_fail@plt+0x27a40>
   39188:	movw	r0, #1
   3918c:	str	r0, [sp, #44]	; 0x2c
   39190:	b	391ac <__assert_fail@plt+0x27a58>
   39194:	ldr	r0, [fp, #-20]	; 0xffffffec
   39198:	movw	r1, #0
   3919c:	sub	r0, r1, r0
   391a0:	mvn	r1, #0
   391a4:	udiv	r0, r1, r0
   391a8:	str	r0, [sp, #44]	; 0x2c
   391ac:	ldr	r0, [sp, #44]	; 0x2c
   391b0:	ldr	r1, [fp, #-12]
   391b4:	mvn	r2, #0
   391b8:	sub	r1, r2, r1
   391bc:	cmp	r0, r1
   391c0:	bls	392dc <__assert_fail@plt+0x27b88>
   391c4:	b	392f0 <__assert_fail@plt+0x27b9c>
   391c8:	b	391d0 <__assert_fail@plt+0x27a7c>
   391cc:	b	391d4 <__assert_fail@plt+0x27a80>
   391d0:	b	39224 <__assert_fail@plt+0x27ad0>
   391d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   391d8:	cmn	r0, #1
   391dc:	bne	39224 <__assert_fail@plt+0x27ad0>
   391e0:	b	391fc <__assert_fail@plt+0x27aa8>
   391e4:	ldr	r0, [fp, #-12]
   391e8:	add	r0, r0, #0
   391ec:	movw	r1, #0
   391f0:	cmp	r1, r0
   391f4:	bcc	392dc <__assert_fail@plt+0x27b88>
   391f8:	b	392f0 <__assert_fail@plt+0x27b9c>
   391fc:	ldr	r0, [fp, #-12]
   39200:	movw	r1, #0
   39204:	cmp	r1, r0
   39208:	bcs	392f0 <__assert_fail@plt+0x27b9c>
   3920c:	ldr	r0, [fp, #-12]
   39210:	sub	r0, r0, #1
   39214:	mvn	r1, #0
   39218:	cmp	r1, r0
   3921c:	bcc	392dc <__assert_fail@plt+0x27b88>
   39220:	b	392f0 <__assert_fail@plt+0x27b9c>
   39224:	ldr	r0, [fp, #-20]	; 0xffffffec
   39228:	movw	r1, #0
   3922c:	udiv	r0, r1, r0
   39230:	ldr	r1, [fp, #-12]
   39234:	cmp	r0, r1
   39238:	bcc	392dc <__assert_fail@plt+0x27b88>
   3923c:	b	392f0 <__assert_fail@plt+0x27b9c>
   39240:	ldr	r0, [fp, #-20]	; 0xffffffec
   39244:	cmp	r0, #0
   39248:	bne	39250 <__assert_fail@plt+0x27afc>
   3924c:	b	392f0 <__assert_fail@plt+0x27b9c>
   39250:	ldr	r0, [fp, #-12]
   39254:	cmp	r0, #0
   39258:	bcs	392c4 <__assert_fail@plt+0x27b70>
   3925c:	b	39264 <__assert_fail@plt+0x27b10>
   39260:	b	39268 <__assert_fail@plt+0x27b14>
   39264:	b	392a8 <__assert_fail@plt+0x27b54>
   39268:	ldr	r0, [fp, #-12]
   3926c:	cmn	r0, #1
   39270:	bne	392a8 <__assert_fail@plt+0x27b54>
   39274:	b	39290 <__assert_fail@plt+0x27b3c>
   39278:	ldr	r0, [fp, #-20]	; 0xffffffec
   3927c:	add	r0, r0, #0
   39280:	movw	r1, #0
   39284:	cmp	r1, r0
   39288:	bcc	392dc <__assert_fail@plt+0x27b88>
   3928c:	b	392f0 <__assert_fail@plt+0x27b9c>
   39290:	ldr	r0, [fp, #-20]	; 0xffffffec
   39294:	sub	r0, r0, #1
   39298:	mvn	r1, #0
   3929c:	cmp	r1, r0
   392a0:	bcc	392dc <__assert_fail@plt+0x27b88>
   392a4:	b	392f0 <__assert_fail@plt+0x27b9c>
   392a8:	ldr	r0, [fp, #-12]
   392ac:	movw	r1, #0
   392b0:	udiv	r0, r1, r0
   392b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   392b8:	cmp	r0, r1
   392bc:	bcc	392dc <__assert_fail@plt+0x27b88>
   392c0:	b	392f0 <__assert_fail@plt+0x27b9c>
   392c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   392c8:	mvn	r1, #0
   392cc:	udiv	r0, r1, r0
   392d0:	ldr	r1, [fp, #-12]
   392d4:	cmp	r0, r1
   392d8:	bcs	392f0 <__assert_fail@plt+0x27b9c>
   392dc:	ldr	r0, [fp, #-12]
   392e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   392e4:	mul	r0, r0, r1
   392e8:	str	r0, [fp, #-24]	; 0xffffffe8
   392ec:	b	3973c <__assert_fail@plt+0x27fe8>
   392f0:	ldr	r0, [fp, #-12]
   392f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   392f8:	mul	r0, r0, r1
   392fc:	str	r0, [fp, #-24]	; 0xffffffe8
   39300:	b	39758 <__assert_fail@plt+0x28004>
   39304:	b	39520 <__assert_fail@plt+0x27dcc>
   39308:	ldr	r0, [fp, #-20]	; 0xffffffec
   3930c:	cmp	r0, #0
   39310:	bcs	39450 <__assert_fail@plt+0x27cfc>
   39314:	ldr	r0, [fp, #-12]
   39318:	cmp	r0, #0
   3931c:	bcs	393dc <__assert_fail@plt+0x27c88>
   39320:	b	39324 <__assert_fail@plt+0x27bd0>
   39324:	ldr	r0, [fp, #-12]
   39328:	ldr	r2, [fp, #-20]	; 0xffffffec
   3932c:	mvn	r1, #0
   39330:	mvn	r3, #-2147483648	; 0x80000000
   39334:	mov	ip, #0
   39338:	str	r0, [sp, #40]	; 0x28
   3933c:	mov	r0, r1
   39340:	mov	r1, r3
   39344:	mov	r3, ip
   39348:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   3934c:	ldr	r2, [sp, #40]	; 0x28
   39350:	subs	r0, r2, r0
   39354:	rscs	r1, r1, #0
   39358:	blt	394f8 <__assert_fail@plt+0x27da4>
   3935c:	b	3950c <__assert_fail@plt+0x27db8>
   39360:	b	39374 <__assert_fail@plt+0x27c20>
   39364:	ldr	r0, [fp, #-20]	; 0xffffffec
   39368:	cmp	r0, #1
   3936c:	bcc	39384 <__assert_fail@plt+0x27c30>
   39370:	b	39398 <__assert_fail@plt+0x27c44>
   39374:	ldr	r0, [fp, #-20]	; 0xffffffec
   39378:	movw	r1, #0
   3937c:	cmp	r1, r0
   39380:	bcs	39398 <__assert_fail@plt+0x27c44>
   39384:	mov	r0, #0
   39388:	mvn	r1, #0
   3938c:	str	r1, [sp, #36]	; 0x24
   39390:	str	r0, [sp, #32]
   39394:	b	393bc <__assert_fail@plt+0x27c68>
   39398:	ldr	r0, [fp, #-20]	; 0xffffffec
   3939c:	rsb	r2, r0, #0
   393a0:	mvn	r0, #0
   393a4:	mvn	r1, #-2147483648	; 0x80000000
   393a8:	mov	r3, #0
   393ac:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   393b0:	str	r0, [sp, #36]	; 0x24
   393b4:	str	r1, [sp, #32]
   393b8:	b	393bc <__assert_fail@plt+0x27c68>
   393bc:	ldr	r0, [sp, #32]
   393c0:	ldr	r1, [sp, #36]	; 0x24
   393c4:	ldr	r2, [fp, #-12]
   393c8:	mvn	r2, r2
   393cc:	subs	r1, r2, r1
   393d0:	rscs	r0, r0, #0
   393d4:	bge	394f8 <__assert_fail@plt+0x27da4>
   393d8:	b	3950c <__assert_fail@plt+0x27db8>
   393dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   393e0:	cmn	r0, #1
   393e4:	bne	39424 <__assert_fail@plt+0x27cd0>
   393e8:	b	39404 <__assert_fail@plt+0x27cb0>
   393ec:	ldr	r0, [fp, #-12]
   393f0:	rsbs	r0, r0, #0
   393f4:	mov	r1, #0
   393f8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   393fc:	blt	394f8 <__assert_fail@plt+0x27da4>
   39400:	b	3950c <__assert_fail@plt+0x27db8>
   39404:	ldr	r0, [fp, #-12]
   39408:	movw	r1, #0
   3940c:	cmp	r1, r0
   39410:	bcs	3950c <__assert_fail@plt+0x27db8>
   39414:	mov	r0, #0
   39418:	cmp	r0, #0
   3941c:	bne	394f8 <__assert_fail@plt+0x27da4>
   39420:	b	3950c <__assert_fail@plt+0x27db8>
   39424:	ldr	r2, [fp, #-20]	; 0xffffffec
   39428:	mov	r1, #-2147483648	; 0x80000000
   3942c:	mov	r0, #0
   39430:	str	r0, [sp, #28]
   39434:	ldr	r3, [sp, #28]
   39438:	bl	3ba78 <__assert_fail@plt+0x2a324>
   3943c:	ldr	r2, [fp, #-12]
   39440:	subs	r0, r0, r2
   39444:	sbcs	r1, r1, #0
   39448:	blt	394f8 <__assert_fail@plt+0x27da4>
   3944c:	b	3950c <__assert_fail@plt+0x27db8>
   39450:	ldr	r0, [fp, #-20]	; 0xffffffec
   39454:	cmp	r0, #0
   39458:	bne	39460 <__assert_fail@plt+0x27d0c>
   3945c:	b	3950c <__assert_fail@plt+0x27db8>
   39460:	ldr	r0, [fp, #-12]
   39464:	cmp	r0, #0
   39468:	bcs	394d0 <__assert_fail@plt+0x27d7c>
   3946c:	ldr	r0, [fp, #-12]
   39470:	cmn	r0, #1
   39474:	bne	394a4 <__assert_fail@plt+0x27d50>
   39478:	b	39494 <__assert_fail@plt+0x27d40>
   3947c:	ldr	r0, [fp, #-20]	; 0xffffffec
   39480:	rsbs	r0, r0, #0
   39484:	mov	r1, #0
   39488:	sbcs	r1, r1, #-2147483648	; 0x80000000
   3948c:	blt	394f8 <__assert_fail@plt+0x27da4>
   39490:	b	3950c <__assert_fail@plt+0x27db8>
   39494:	mov	r0, #0
   39498:	cmp	r0, #0
   3949c:	bne	394f8 <__assert_fail@plt+0x27da4>
   394a0:	b	3950c <__assert_fail@plt+0x27db8>
   394a4:	ldr	r2, [fp, #-12]
   394a8:	mov	r1, #-2147483648	; 0x80000000
   394ac:	mov	r0, #0
   394b0:	str	r0, [sp, #24]
   394b4:	ldr	r3, [sp, #24]
   394b8:	bl	3ba78 <__assert_fail@plt+0x2a324>
   394bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   394c0:	subs	r0, r0, r2
   394c4:	sbcs	r1, r1, #0
   394c8:	blt	394f8 <__assert_fail@plt+0x27da4>
   394cc:	b	3950c <__assert_fail@plt+0x27db8>
   394d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   394d4:	mvn	r0, #0
   394d8:	mvn	r1, #-2147483648	; 0x80000000
   394dc:	mov	r3, #0
   394e0:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   394e4:	ldr	r2, [fp, #-12]
   394e8:	subs	r0, r0, r2
   394ec:	sbcs	r1, r1, #0
   394f0:	bge	3950c <__assert_fail@plt+0x27db8>
   394f4:	b	394f8 <__assert_fail@plt+0x27da4>
   394f8:	ldr	r0, [fp, #-12]
   394fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   39500:	mul	r0, r0, r1
   39504:	str	r0, [fp, #-24]	; 0xffffffe8
   39508:	b	3973c <__assert_fail@plt+0x27fe8>
   3950c:	ldr	r0, [fp, #-12]
   39510:	ldr	r1, [fp, #-20]	; 0xffffffec
   39514:	mul	r0, r0, r1
   39518:	str	r0, [fp, #-24]	; 0xffffffe8
   3951c:	b	39758 <__assert_fail@plt+0x28004>
   39520:	ldr	r0, [fp, #-20]	; 0xffffffec
   39524:	cmp	r0, #0
   39528:	bcs	39664 <__assert_fail@plt+0x27f10>
   3952c:	ldr	r0, [fp, #-12]
   39530:	cmp	r0, #0
   39534:	bcs	395ec <__assert_fail@plt+0x27e98>
   39538:	b	3956c <__assert_fail@plt+0x27e18>
   3953c:	ldr	r0, [fp, #-12]
   39540:	ldr	r2, [fp, #-20]	; 0xffffffec
   39544:	mvn	r1, #0
   39548:	mov	r3, #0
   3954c:	str	r0, [sp, #20]
   39550:	mov	r0, r1
   39554:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   39558:	ldr	r2, [sp, #20]
   3955c:	subs	r0, r2, r0
   39560:	rscs	r1, r1, #0
   39564:	bcc	39714 <__assert_fail@plt+0x27fc0>
   39568:	b	39728 <__assert_fail@plt+0x27fd4>
   3956c:	b	39580 <__assert_fail@plt+0x27e2c>
   39570:	ldr	r0, [fp, #-20]	; 0xffffffec
   39574:	cmp	r0, #1
   39578:	bcc	39590 <__assert_fail@plt+0x27e3c>
   3957c:	b	395a4 <__assert_fail@plt+0x27e50>
   39580:	ldr	r0, [fp, #-20]	; 0xffffffec
   39584:	movw	r1, #0
   39588:	cmp	r1, r0
   3958c:	bcs	395a4 <__assert_fail@plt+0x27e50>
   39590:	mov	r0, #1
   39594:	mvn	r1, #0
   39598:	str	r1, [sp, #16]
   3959c:	str	r0, [sp, #12]
   395a0:	b	395cc <__assert_fail@plt+0x27e78>
   395a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   395a8:	rsb	r2, r0, #0
   395ac:	mvn	r0, #0
   395b0:	mov	r3, #0
   395b4:	str	r0, [sp, #8]
   395b8:	ldr	r1, [sp, #8]
   395bc:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   395c0:	str	r0, [sp, #16]
   395c4:	str	r1, [sp, #12]
   395c8:	b	395cc <__assert_fail@plt+0x27e78>
   395cc:	ldr	r0, [sp, #12]
   395d0:	ldr	r1, [sp, #16]
   395d4:	ldr	r2, [fp, #-12]
   395d8:	mvn	r2, r2
   395dc:	subs	r1, r2, r1
   395e0:	rscs	r0, r0, #0
   395e4:	bcs	39714 <__assert_fail@plt+0x27fc0>
   395e8:	b	39728 <__assert_fail@plt+0x27fd4>
   395ec:	b	395f4 <__assert_fail@plt+0x27ea0>
   395f0:	b	395f8 <__assert_fail@plt+0x27ea4>
   395f4:	b	39648 <__assert_fail@plt+0x27ef4>
   395f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   395fc:	cmn	r0, #1
   39600:	bne	39648 <__assert_fail@plt+0x27ef4>
   39604:	b	39620 <__assert_fail@plt+0x27ecc>
   39608:	ldr	r0, [fp, #-12]
   3960c:	add	r0, r0, #0
   39610:	movw	r1, #0
   39614:	cmp	r1, r0
   39618:	bcc	39714 <__assert_fail@plt+0x27fc0>
   3961c:	b	39728 <__assert_fail@plt+0x27fd4>
   39620:	ldr	r0, [fp, #-12]
   39624:	movw	r1, #0
   39628:	cmp	r1, r0
   3962c:	bcs	39728 <__assert_fail@plt+0x27fd4>
   39630:	ldr	r0, [fp, #-12]
   39634:	sub	r0, r0, #1
   39638:	mvn	r1, #0
   3963c:	cmp	r1, r0
   39640:	bcc	39714 <__assert_fail@plt+0x27fc0>
   39644:	b	39728 <__assert_fail@plt+0x27fd4>
   39648:	ldr	r0, [fp, #-20]	; 0xffffffec
   3964c:	movw	r1, #0
   39650:	udiv	r0, r1, r0
   39654:	ldr	r1, [fp, #-12]
   39658:	cmp	r0, r1
   3965c:	bcc	39714 <__assert_fail@plt+0x27fc0>
   39660:	b	39728 <__assert_fail@plt+0x27fd4>
   39664:	ldr	r0, [fp, #-20]	; 0xffffffec
   39668:	cmp	r0, #0
   3966c:	bne	39674 <__assert_fail@plt+0x27f20>
   39670:	b	39728 <__assert_fail@plt+0x27fd4>
   39674:	ldr	r0, [fp, #-12]
   39678:	cmp	r0, #0
   3967c:	bcs	396e8 <__assert_fail@plt+0x27f94>
   39680:	b	39688 <__assert_fail@plt+0x27f34>
   39684:	b	3968c <__assert_fail@plt+0x27f38>
   39688:	b	396cc <__assert_fail@plt+0x27f78>
   3968c:	ldr	r0, [fp, #-12]
   39690:	cmn	r0, #1
   39694:	bne	396cc <__assert_fail@plt+0x27f78>
   39698:	b	396b4 <__assert_fail@plt+0x27f60>
   3969c:	ldr	r0, [fp, #-20]	; 0xffffffec
   396a0:	add	r0, r0, #0
   396a4:	movw	r1, #0
   396a8:	cmp	r1, r0
   396ac:	bcc	39714 <__assert_fail@plt+0x27fc0>
   396b0:	b	39728 <__assert_fail@plt+0x27fd4>
   396b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   396b8:	sub	r0, r0, #1
   396bc:	mvn	r1, #0
   396c0:	cmp	r1, r0
   396c4:	bcc	39714 <__assert_fail@plt+0x27fc0>
   396c8:	b	39728 <__assert_fail@plt+0x27fd4>
   396cc:	ldr	r0, [fp, #-12]
   396d0:	movw	r1, #0
   396d4:	udiv	r0, r1, r0
   396d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   396dc:	cmp	r0, r1
   396e0:	bcc	39714 <__assert_fail@plt+0x27fc0>
   396e4:	b	39728 <__assert_fail@plt+0x27fd4>
   396e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   396ec:	mvn	r0, #0
   396f0:	mov	r3, #0
   396f4:	str	r0, [sp, #4]
   396f8:	ldr	r1, [sp, #4]
   396fc:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   39700:	ldr	r2, [fp, #-12]
   39704:	subs	r0, r0, r2
   39708:	sbcs	r1, r1, #0
   3970c:	bcs	39728 <__assert_fail@plt+0x27fd4>
   39710:	b	39714 <__assert_fail@plt+0x27fc0>
   39714:	ldr	r0, [fp, #-12]
   39718:	ldr	r1, [fp, #-20]	; 0xffffffec
   3971c:	mul	r0, r0, r1
   39720:	str	r0, [fp, #-24]	; 0xffffffe8
   39724:	b	3973c <__assert_fail@plt+0x27fe8>
   39728:	ldr	r0, [fp, #-12]
   3972c:	ldr	r1, [fp, #-20]	; 0xffffffec
   39730:	mul	r0, r0, r1
   39734:	str	r0, [fp, #-24]	; 0xffffffe8
   39738:	b	39758 <__assert_fail@plt+0x28004>
   3973c:	bl	11628 <__errno_location@plt>
   39740:	movw	r1, #12
   39744:	str	r1, [r0]
   39748:	movw	r0, #0
   3974c:	and	r0, r0, #1
   39750:	strb	r0, [fp, #-1]
   39754:	b	39824 <__assert_fail@plt+0x280d0>
   39758:	ldr	r0, [fp, #-8]
   3975c:	ldr	r0, [r0, #8]
   39760:	ldr	r1, [fp, #-16]
   39764:	cmp	r0, r1
   39768:	bne	397c0 <__assert_fail@plt+0x2806c>
   3976c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39770:	bl	3816c <__assert_fail@plt+0x26a18>
   39774:	str	r0, [fp, #-28]	; 0xffffffe4
   39778:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3977c:	movw	r1, #0
   39780:	cmp	r0, r1
   39784:	beq	397bc <__assert_fail@plt+0x28068>
   39788:	ldr	r0, [fp, #-8]
   3978c:	ldr	r0, [r0, #8]
   39790:	movw	r1, #0
   39794:	cmp	r0, r1
   39798:	beq	397bc <__assert_fail@plt+0x28068>
   3979c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   397a0:	ldr	r1, [fp, #-8]
   397a4:	ldr	r1, [r1, #8]
   397a8:	ldr	r2, [fp, #-8]
   397ac:	ldr	r2, [r2]
   397b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   397b4:	mul	r2, r2, r3
   397b8:	bl	11478 <memcpy@plt>
   397bc:	b	397d4 <__assert_fail@plt+0x28080>
   397c0:	ldr	r0, [fp, #-8]
   397c4:	ldr	r0, [r0, #8]
   397c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   397cc:	bl	381dc <__assert_fail@plt+0x26a88>
   397d0:	str	r0, [fp, #-28]	; 0xffffffe4
   397d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   397d8:	movw	r1, #0
   397dc:	cmp	r0, r1
   397e0:	bne	397f4 <__assert_fail@plt+0x280a0>
   397e4:	movw	r0, #0
   397e8:	and	r0, r0, #1
   397ec:	strb	r0, [fp, #-1]
   397f0:	b	39824 <__assert_fail@plt+0x280d0>
   397f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   397f8:	ldr	r1, [fp, #-8]
   397fc:	str	r0, [r1, #8]
   39800:	ldr	r0, [fp, #-12]
   39804:	ldr	r1, [fp, #-8]
   39808:	str	r0, [r1, #4]
   3980c:	ldr	r0, [fp, #-12]
   39810:	ldr	r1, [fp, #-8]
   39814:	str	r0, [r1]
   39818:	movw	r0, #1
   3981c:	and	r0, r0, #1
   39820:	strb	r0, [fp, #-1]
   39824:	ldrb	r0, [fp, #-1]
   39828:	and	r0, r0, #1
   3982c:	mov	sp, fp
   39830:	pop	{fp, pc}
   39834:	svcvc	0x00ffffff
   39838:	andhi	r0, r0, r0
   3983c:			; <UNDEFINED> instruction: 0xffff8000
   39840:	sub	sp, sp, #8
   39844:	push	{fp, lr}
   39848:	mov	fp, sp
   3984c:	sub	sp, sp, #48	; 0x30
   39850:	str	r3, [fp, #12]
   39854:	str	r2, [fp, #8]
   39858:	str	r0, [fp, #-4]
   3985c:	str	r1, [fp, #-8]
   39860:	mvn	r0, #0
   39864:	str	r0, [fp, #-16]
   39868:	add	r0, fp, #8
   3986c:	str	r0, [fp, #-12]
   39870:	ldr	r0, [fp, #-8]
   39874:	cmp	r0, #0
   39878:	str	r0, [sp, #12]
   3987c:	beq	39898 <__assert_fail@plt+0x28144>
   39880:	b	39884 <__assert_fail@plt+0x28130>
   39884:	movw	r0, #1030	; 0x406
   39888:	ldr	r1, [sp, #12]
   3988c:	cmp	r1, r0
   39890:	beq	398c0 <__assert_fail@plt+0x2816c>
   39894:	b	398e8 <__assert_fail@plt+0x28194>
   39898:	ldr	r0, [fp, #-12]
   3989c:	add	r1, r0, #4
   398a0:	str	r1, [fp, #-12]
   398a4:	ldr	r0, [r0]
   398a8:	str	r0, [fp, #-20]	; 0xffffffec
   398ac:	ldr	r0, [fp, #-4]
   398b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   398b4:	bl	39a94 <__assert_fail@plt+0x28340>
   398b8:	str	r0, [fp, #-16]
   398bc:	b	39a74 <__assert_fail@plt+0x28320>
   398c0:	ldr	r0, [fp, #-12]
   398c4:	add	r1, r0, #4
   398c8:	str	r1, [fp, #-12]
   398cc:	ldr	r0, [r0]
   398d0:	str	r0, [sp, #24]
   398d4:	ldr	r0, [fp, #-4]
   398d8:	ldr	r1, [sp, #24]
   398dc:	bl	39ac8 <__assert_fail@plt+0x28374>
   398e0:	str	r0, [fp, #-16]
   398e4:	b	39a74 <__assert_fail@plt+0x28320>
   398e8:	ldr	r0, [fp, #-8]
   398ec:	cmp	r0, #0
   398f0:	str	r0, [sp, #8]
   398f4:	beq	39a1c <__assert_fail@plt+0x282c8>
   398f8:	b	398fc <__assert_fail@plt+0x281a8>
   398fc:	ldr	r0, [sp, #8]
   39900:	cmp	r0, #1
   39904:	beq	39a08 <__assert_fail@plt+0x282b4>
   39908:	b	3990c <__assert_fail@plt+0x281b8>
   3990c:	ldr	r0, [sp, #8]
   39910:	cmp	r0, #2
   39914:	beq	39a1c <__assert_fail@plt+0x282c8>
   39918:	b	3991c <__assert_fail@plt+0x281c8>
   3991c:	ldr	r0, [sp, #8]
   39920:	cmp	r0, #3
   39924:	beq	39a08 <__assert_fail@plt+0x282b4>
   39928:	b	3992c <__assert_fail@plt+0x281d8>
   3992c:	ldr	r0, [sp, #8]
   39930:	cmp	r0, #4
   39934:	beq	39a1c <__assert_fail@plt+0x282c8>
   39938:	b	3993c <__assert_fail@plt+0x281e8>
   3993c:	ldr	r0, [sp, #8]
   39940:	cmp	r0, #8
   39944:	beq	39a1c <__assert_fail@plt+0x282c8>
   39948:	b	3994c <__assert_fail@plt+0x281f8>
   3994c:	ldr	r0, [sp, #8]
   39950:	cmp	r0, #9
   39954:	beq	39a08 <__assert_fail@plt+0x282b4>
   39958:	b	3995c <__assert_fail@plt+0x28208>
   3995c:	ldr	r0, [sp, #8]
   39960:	cmp	r0, #10
   39964:	beq	39a1c <__assert_fail@plt+0x282c8>
   39968:	b	3996c <__assert_fail@plt+0x28218>
   3996c:	ldr	r0, [sp, #8]
   39970:	cmp	r0, #11
   39974:	beq	39a08 <__assert_fail@plt+0x282b4>
   39978:	b	3997c <__assert_fail@plt+0x28228>
   3997c:	ldr	r0, [sp, #8]
   39980:	cmp	r0, #1024	; 0x400
   39984:	beq	39a1c <__assert_fail@plt+0x282c8>
   39988:	b	3998c <__assert_fail@plt+0x28238>
   3998c:	movw	r0, #1025	; 0x401
   39990:	ldr	r1, [sp, #8]
   39994:	cmp	r1, r0
   39998:	beq	39a08 <__assert_fail@plt+0x282b4>
   3999c:	b	399a0 <__assert_fail@plt+0x2824c>
   399a0:	movw	r0, #1026	; 0x402
   399a4:	ldr	r1, [sp, #8]
   399a8:	cmp	r1, r0
   399ac:	beq	39a1c <__assert_fail@plt+0x282c8>
   399b0:	b	399b4 <__assert_fail@plt+0x28260>
   399b4:	movw	r0, #1030	; 0x406
   399b8:	ldr	r1, [sp, #8]
   399bc:	sub	r0, r1, r0
   399c0:	cmp	r0, #2
   399c4:	bcc	39a1c <__assert_fail@plt+0x282c8>
   399c8:	b	399cc <__assert_fail@plt+0x28278>
   399cc:	movw	r0, #1032	; 0x408
   399d0:	ldr	r1, [sp, #8]
   399d4:	cmp	r1, r0
   399d8:	beq	39a08 <__assert_fail@plt+0x282b4>
   399dc:	b	399e0 <__assert_fail@plt+0x2828c>
   399e0:	movw	r0, #1033	; 0x409
   399e4:	ldr	r1, [sp, #8]
   399e8:	cmp	r1, r0
   399ec:	beq	39a1c <__assert_fail@plt+0x282c8>
   399f0:	b	399f4 <__assert_fail@plt+0x282a0>
   399f4:	movw	r0, #1034	; 0x40a
   399f8:	ldr	r1, [sp, #8]
   399fc:	cmp	r1, r0
   39a00:	bne	39a48 <__assert_fail@plt+0x282f4>
   39a04:	b	39a08 <__assert_fail@plt+0x282b4>
   39a08:	ldr	r0, [fp, #-4]
   39a0c:	ldr	r1, [fp, #-8]
   39a10:	bl	116ac <fcntl64@plt>
   39a14:	str	r0, [fp, #-16]
   39a18:	b	39a70 <__assert_fail@plt+0x2831c>
   39a1c:	ldr	r0, [fp, #-12]
   39a20:	add	r1, r0, #4
   39a24:	str	r1, [fp, #-12]
   39a28:	ldr	r0, [r0]
   39a2c:	str	r0, [sp, #20]
   39a30:	ldr	r0, [fp, #-4]
   39a34:	ldr	r1, [fp, #-8]
   39a38:	ldr	r2, [sp, #20]
   39a3c:	bl	116ac <fcntl64@plt>
   39a40:	str	r0, [fp, #-16]
   39a44:	b	39a70 <__assert_fail@plt+0x2831c>
   39a48:	ldr	r0, [fp, #-12]
   39a4c:	add	r1, r0, #4
   39a50:	str	r1, [fp, #-12]
   39a54:	ldr	r0, [r0]
   39a58:	str	r0, [sp, #16]
   39a5c:	ldr	r0, [fp, #-4]
   39a60:	ldr	r1, [fp, #-8]
   39a64:	ldr	r2, [sp, #16]
   39a68:	bl	116ac <fcntl64@plt>
   39a6c:	str	r0, [fp, #-16]
   39a70:	b	39a74 <__assert_fail@plt+0x28320>
   39a74:	sub	r0, fp, #12
   39a78:	ldr	r1, [fp, #-16]
   39a7c:	str	r0, [sp, #4]
   39a80:	mov	r0, r1
   39a84:	mov	sp, fp
   39a88:	pop	{fp, lr}
   39a8c:	add	sp, sp, #8
   39a90:	bx	lr
   39a94:	push	{fp, lr}
   39a98:	mov	fp, sp
   39a9c:	sub	sp, sp, #16
   39aa0:	str	r0, [fp, #-4]
   39aa4:	str	r1, [sp, #8]
   39aa8:	ldr	r0, [fp, #-4]
   39aac:	ldr	r2, [sp, #8]
   39ab0:	movw	r1, #0
   39ab4:	bl	116ac <fcntl64@plt>
   39ab8:	str	r0, [sp, #4]
   39abc:	ldr	r0, [sp, #4]
   39ac0:	mov	sp, fp
   39ac4:	pop	{fp, pc}
   39ac8:	push	{fp, lr}
   39acc:	mov	fp, sp
   39ad0:	sub	sp, sp, #32
   39ad4:	str	r0, [fp, #-4]
   39ad8:	str	r1, [fp, #-8]
   39adc:	movw	r0, #58352	; 0xe3f0
   39ae0:	movt	r0, #4
   39ae4:	ldr	r0, [r0]
   39ae8:	movw	r1, #0
   39aec:	cmp	r1, r0
   39af0:	bgt	39b70 <__assert_fail@plt+0x2841c>
   39af4:	ldr	r0, [fp, #-4]
   39af8:	ldr	r2, [fp, #-8]
   39afc:	movw	r1, #1030	; 0x406
   39b00:	bl	116ac <fcntl64@plt>
   39b04:	str	r0, [fp, #-12]
   39b08:	ldr	r0, [fp, #-12]
   39b0c:	movw	r1, #0
   39b10:	cmp	r1, r0
   39b14:	ble	39b28 <__assert_fail@plt+0x283d4>
   39b18:	bl	11628 <__errno_location@plt>
   39b1c:	ldr	r0, [r0]
   39b20:	cmp	r0, #22
   39b24:	beq	39b3c <__assert_fail@plt+0x283e8>
   39b28:	movw	r0, #58352	; 0xe3f0
   39b2c:	movt	r0, #4
   39b30:	movw	r1, #1
   39b34:	str	r1, [r0]
   39b38:	b	39b6c <__assert_fail@plt+0x28418>
   39b3c:	ldr	r0, [fp, #-4]
   39b40:	ldr	r1, [fp, #-8]
   39b44:	bl	39a94 <__assert_fail@plt+0x28340>
   39b48:	str	r0, [fp, #-12]
   39b4c:	ldr	r0, [fp, #-12]
   39b50:	cmp	r0, #0
   39b54:	blt	39b68 <__assert_fail@plt+0x28414>
   39b58:	movw	r0, #58352	; 0xe3f0
   39b5c:	movt	r0, #4
   39b60:	mvn	r1, #0
   39b64:	str	r1, [r0]
   39b68:	b	39b6c <__assert_fail@plt+0x28418>
   39b6c:	b	39b80 <__assert_fail@plt+0x2842c>
   39b70:	ldr	r0, [fp, #-4]
   39b74:	ldr	r1, [fp, #-8]
   39b78:	bl	39a94 <__assert_fail@plt+0x28340>
   39b7c:	str	r0, [fp, #-12]
   39b80:	ldr	r0, [fp, #-12]
   39b84:	movw	r1, #0
   39b88:	cmp	r1, r0
   39b8c:	bgt	39c14 <__assert_fail@plt+0x284c0>
   39b90:	movw	r0, #58352	; 0xe3f0
   39b94:	movt	r0, #4
   39b98:	ldr	r0, [r0]
   39b9c:	cmn	r0, #1
   39ba0:	bne	39c14 <__assert_fail@plt+0x284c0>
   39ba4:	ldr	r0, [fp, #-12]
   39ba8:	movw	r1, #1
   39bac:	bl	116ac <fcntl64@plt>
   39bb0:	str	r0, [sp, #16]
   39bb4:	ldr	r0, [sp, #16]
   39bb8:	cmp	r0, #0
   39bbc:	blt	39bdc <__assert_fail@plt+0x28488>
   39bc0:	ldr	r0, [fp, #-12]
   39bc4:	ldr	r1, [sp, #16]
   39bc8:	orr	r2, r1, #1
   39bcc:	movw	r1, #2
   39bd0:	bl	116ac <fcntl64@plt>
   39bd4:	cmn	r0, #1
   39bd8:	bne	39c10 <__assert_fail@plt+0x284bc>
   39bdc:	bl	11628 <__errno_location@plt>
   39be0:	ldr	r0, [r0]
   39be4:	str	r0, [sp, #12]
   39be8:	ldr	r0, [fp, #-12]
   39bec:	bl	11748 <close@plt>
   39bf0:	ldr	r1, [sp, #12]
   39bf4:	str	r0, [sp, #8]
   39bf8:	str	r1, [sp, #4]
   39bfc:	bl	11628 <__errno_location@plt>
   39c00:	ldr	r1, [sp, #4]
   39c04:	str	r1, [r0]
   39c08:	mvn	r0, #0
   39c0c:	str	r0, [fp, #-12]
   39c10:	b	39c14 <__assert_fail@plt+0x284c0>
   39c14:	ldr	r0, [fp, #-12]
   39c18:	mov	sp, fp
   39c1c:	pop	{fp, pc}
   39c20:	push	{fp, lr}
   39c24:	mov	fp, sp
   39c28:	bl	11628 <__errno_location@plt>
   39c2c:	movw	r1, #12
   39c30:	str	r1, [r0]
   39c34:	movw	r0, #0
   39c38:	pop	{fp, pc}
   39c3c:	push	{fp, lr}
   39c40:	mov	fp, sp
   39c44:	sub	sp, sp, #8
   39c48:	str	r0, [sp, #4]
   39c4c:	ldr	r0, [sp, #4]
   39c50:	cmn	r0, #1
   39c54:	bhi	39c68 <__assert_fail@plt+0x28514>
   39c58:	ldr	r0, [sp, #4]
   39c5c:	bl	3816c <__assert_fail@plt+0x26a18>
   39c60:	str	r0, [sp]
   39c64:	b	39c70 <__assert_fail@plt+0x2851c>
   39c68:	bl	39c20 <__assert_fail@plt+0x284cc>
   39c6c:	str	r0, [sp]
   39c70:	ldr	r0, [sp]
   39c74:	mov	sp, fp
   39c78:	pop	{fp, pc}
   39c7c:	push	{fp, lr}
   39c80:	mov	fp, sp
   39c84:	sub	sp, sp, #16
   39c88:	str	r0, [fp, #-4]
   39c8c:	str	r1, [sp, #8]
   39c90:	ldr	r0, [sp, #8]
   39c94:	cmn	r0, #1
   39c98:	bhi	39cd0 <__assert_fail@plt+0x2857c>
   39c9c:	ldr	r0, [fp, #-4]
   39ca0:	ldr	r1, [sp, #8]
   39ca4:	ldr	r2, [sp, #8]
   39ca8:	cmp	r2, #0
   39cac:	movw	r2, #0
   39cb0:	movne	r2, #1
   39cb4:	mvn	r3, #0
   39cb8:	eor	r2, r2, r3
   39cbc:	and	r2, r2, #1
   39cc0:	orr	r1, r1, r2
   39cc4:	bl	381dc <__assert_fail@plt+0x26a88>
   39cc8:	str	r0, [sp, #4]
   39ccc:	b	39cd8 <__assert_fail@plt+0x28584>
   39cd0:	bl	39c20 <__assert_fail@plt+0x284cc>
   39cd4:	str	r0, [sp, #4]
   39cd8:	ldr	r0, [sp, #4]
   39cdc:	mov	sp, fp
   39ce0:	pop	{fp, pc}
   39ce4:	push	{fp, lr}
   39ce8:	mov	fp, sp
   39cec:	sub	sp, sp, #16
   39cf0:	str	r0, [sp, #8]
   39cf4:	str	r1, [sp, #4]
   39cf8:	ldr	r0, [sp, #8]
   39cfc:	mvn	r1, #0
   39d00:	cmp	r1, r0
   39d04:	bcs	39d28 <__assert_fail@plt+0x285d4>
   39d08:	ldr	r0, [sp, #4]
   39d0c:	cmp	r0, #0
   39d10:	beq	39d20 <__assert_fail@plt+0x285cc>
   39d14:	bl	39c20 <__assert_fail@plt+0x284cc>
   39d18:	str	r0, [fp, #-4]
   39d1c:	b	39d68 <__assert_fail@plt+0x28614>
   39d20:	movw	r0, #0
   39d24:	str	r0, [sp, #8]
   39d28:	ldr	r0, [sp, #4]
   39d2c:	mvn	r1, #0
   39d30:	cmp	r1, r0
   39d34:	bcs	39d58 <__assert_fail@plt+0x28604>
   39d38:	ldr	r0, [sp, #8]
   39d3c:	cmp	r0, #0
   39d40:	beq	39d50 <__assert_fail@plt+0x285fc>
   39d44:	bl	39c20 <__assert_fail@plt+0x284cc>
   39d48:	str	r0, [fp, #-4]
   39d4c:	b	39d68 <__assert_fail@plt+0x28614>
   39d50:	movw	r0, #0
   39d54:	str	r0, [sp, #4]
   39d58:	ldr	r0, [sp, #8]
   39d5c:	ldr	r1, [sp, #4]
   39d60:	bl	380d0 <__assert_fail@plt+0x2697c>
   39d64:	str	r0, [fp, #-4]
   39d68:	ldr	r0, [fp, #-4]
   39d6c:	mov	sp, fp
   39d70:	pop	{fp, pc}
   39d74:	push	{fp, lr}
   39d78:	mov	fp, sp
   39d7c:	sub	sp, sp, #16
   39d80:	str	r0, [fp, #-4]
   39d84:	str	r1, [sp, #8]
   39d88:	str	r2, [sp, #4]
   39d8c:	ldr	r0, [sp, #8]
   39d90:	cmp	r0, #0
   39d94:	beq	39da4 <__assert_fail@plt+0x28650>
   39d98:	ldr	r0, [sp, #4]
   39d9c:	cmp	r0, #0
   39da0:	bne	39db0 <__assert_fail@plt+0x2865c>
   39da4:	movw	r0, #1
   39da8:	str	r0, [sp, #4]
   39dac:	str	r0, [sp, #8]
   39db0:	ldr	r0, [sp, #8]
   39db4:	cmn	r0, #1
   39db8:	bhi	39de0 <__assert_fail@plt+0x2868c>
   39dbc:	ldr	r0, [sp, #4]
   39dc0:	cmn	r0, #1
   39dc4:	bhi	39de0 <__assert_fail@plt+0x2868c>
   39dc8:	ldr	r0, [fp, #-4]
   39dcc:	ldr	r1, [sp, #8]
   39dd0:	ldr	r2, [sp, #4]
   39dd4:	bl	39f00 <__assert_fail@plt+0x287ac>
   39dd8:	str	r0, [sp]
   39ddc:	b	39de8 <__assert_fail@plt+0x28694>
   39de0:	bl	39c20 <__assert_fail@plt+0x284cc>
   39de4:	str	r0, [sp]
   39de8:	ldr	r0, [sp]
   39dec:	mov	sp, fp
   39df0:	pop	{fp, pc}
   39df4:	push	{fp, lr}
   39df8:	mov	fp, sp
   39dfc:	sub	sp, sp, #8
   39e00:	movw	r0, #14
   39e04:	bl	116e8 <nl_langinfo@plt>
   39e08:	str	r0, [sp, #4]
   39e0c:	ldr	r0, [sp, #4]
   39e10:	movw	r1, #0
   39e14:	cmp	r0, r1
   39e18:	bne	39e28 <__assert_fail@plt+0x286d4>
   39e1c:	movw	r0, #49863	; 0xc2c7
   39e20:	movt	r0, #3
   39e24:	str	r0, [sp, #4]
   39e28:	ldr	r0, [sp, #4]
   39e2c:	ldrb	r0, [r0]
   39e30:	cmp	r0, #0
   39e34:	bne	39e44 <__assert_fail@plt+0x286f0>
   39e38:	movw	r0, #53350	; 0xd066
   39e3c:	movt	r0, #3
   39e40:	str	r0, [sp, #4]
   39e44:	ldr	r0, [sp, #4]
   39e48:	mov	sp, fp
   39e4c:	pop	{fp, pc}
   39e50:	push	{fp, lr}
   39e54:	mov	fp, sp
   39e58:	sub	sp, sp, #32
   39e5c:	str	r0, [fp, #-8]
   39e60:	str	r1, [fp, #-12]
   39e64:	str	r2, [sp, #16]
   39e68:	str	r3, [sp, #12]
   39e6c:	ldr	r0, [fp, #-8]
   39e70:	movw	r1, #0
   39e74:	cmp	r0, r1
   39e78:	bne	39e84 <__assert_fail@plt+0x28730>
   39e7c:	add	r0, sp, #4
   39e80:	str	r0, [fp, #-8]
   39e84:	ldr	r0, [fp, #-8]
   39e88:	ldr	r1, [fp, #-12]
   39e8c:	ldr	r2, [sp, #16]
   39e90:	ldr	r3, [sp, #12]
   39e94:	bl	11574 <mbrtowc@plt>
   39e98:	str	r0, [sp, #8]
   39e9c:	ldr	r0, [sp, #8]
   39ea0:	mvn	r1, #1
   39ea4:	cmp	r1, r0
   39ea8:	bhi	39eec <__assert_fail@plt+0x28798>
   39eac:	ldr	r0, [sp, #16]
   39eb0:	cmp	r0, #0
   39eb4:	beq	39eec <__assert_fail@plt+0x28798>
   39eb8:	movw	r0, #0
   39ebc:	bl	3b880 <__assert_fail@plt+0x2a12c>
   39ec0:	tst	r0, #1
   39ec4:	bne	39eec <__assert_fail@plt+0x28798>
   39ec8:	ldr	r0, [fp, #-12]
   39ecc:	ldrb	r0, [r0]
   39ed0:	strb	r0, [sp, #3]
   39ed4:	ldrb	r0, [sp, #3]
   39ed8:	ldr	r1, [fp, #-8]
   39edc:	str	r0, [r1]
   39ee0:	movw	r0, #1
   39ee4:	str	r0, [fp, #-4]
   39ee8:	b	39ef4 <__assert_fail@plt+0x287a0>
   39eec:	ldr	r0, [sp, #8]
   39ef0:	str	r0, [fp, #-4]
   39ef4:	ldr	r0, [fp, #-4]
   39ef8:	mov	sp, fp
   39efc:	pop	{fp, pc}
   39f00:	push	{fp, lr}
   39f04:	mov	fp, sp
   39f08:	sub	sp, sp, #96	; 0x60
   39f0c:	str	r0, [fp, #-8]
   39f10:	str	r1, [fp, #-12]
   39f14:	str	r2, [fp, #-16]
   39f18:	b	3a2d0 <__assert_fail@plt+0x28b7c>
   39f1c:	b	3a0f0 <__assert_fail@plt+0x2899c>
   39f20:	ldr	r0, [fp, #-16]
   39f24:	cmp	r0, #0
   39f28:	bcs	3a02c <__assert_fail@plt+0x288d8>
   39f2c:	ldr	r0, [fp, #-12]
   39f30:	cmp	r0, #0
   39f34:	bcs	39fbc <__assert_fail@plt+0x28868>
   39f38:	b	39f58 <__assert_fail@plt+0x28804>
   39f3c:	ldr	r0, [fp, #-12]
   39f40:	ldr	r1, [fp, #-16]
   39f44:	movw	r2, #127	; 0x7f
   39f48:	udiv	r1, r2, r1
   39f4c:	cmp	r0, r1
   39f50:	bcc	3a0c0 <__assert_fail@plt+0x2896c>
   39f54:	b	3a0d8 <__assert_fail@plt+0x28984>
   39f58:	b	39f6c <__assert_fail@plt+0x28818>
   39f5c:	ldr	r0, [fp, #-16]
   39f60:	cmp	r0, #1
   39f64:	bcc	39f7c <__assert_fail@plt+0x28828>
   39f68:	b	39f88 <__assert_fail@plt+0x28834>
   39f6c:	ldr	r0, [fp, #-16]
   39f70:	movw	r1, #0
   39f74:	cmp	r1, r0
   39f78:	bcs	39f88 <__assert_fail@plt+0x28834>
   39f7c:	movw	r0, #0
   39f80:	str	r0, [fp, #-24]	; 0xffffffe8
   39f84:	b	39fa0 <__assert_fail@plt+0x2884c>
   39f88:	ldr	r0, [fp, #-16]
   39f8c:	movw	r1, #0
   39f90:	sub	r0, r1, r0
   39f94:	movw	r1, #127	; 0x7f
   39f98:	udiv	r0, r1, r0
   39f9c:	str	r0, [fp, #-24]	; 0xffffffe8
   39fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39fa4:	ldr	r1, [fp, #-12]
   39fa8:	mvn	r2, #0
   39fac:	sub	r1, r2, r1
   39fb0:	cmp	r0, r1
   39fb4:	bls	3a0c0 <__assert_fail@plt+0x2896c>
   39fb8:	b	3a0d8 <__assert_fail@plt+0x28984>
   39fbc:	ldr	r0, [fp, #-16]
   39fc0:	cmn	r0, #1
   39fc4:	bne	3a010 <__assert_fail@plt+0x288bc>
   39fc8:	b	39fe8 <__assert_fail@plt+0x28894>
   39fcc:	ldr	r0, [fp, #-12]
   39fd0:	mvn	r1, #127	; 0x7f
   39fd4:	add	r0, r0, r1
   39fd8:	movw	r1, #0
   39fdc:	cmp	r1, r0
   39fe0:	bcc	3a0c0 <__assert_fail@plt+0x2896c>
   39fe4:	b	3a0d8 <__assert_fail@plt+0x28984>
   39fe8:	ldr	r0, [fp, #-12]
   39fec:	movw	r1, #0
   39ff0:	cmp	r1, r0
   39ff4:	bcs	3a0d8 <__assert_fail@plt+0x28984>
   39ff8:	ldr	r0, [fp, #-12]
   39ffc:	sub	r0, r0, #1
   3a000:	movw	r1, #127	; 0x7f
   3a004:	cmp	r1, r0
   3a008:	bcc	3a0c0 <__assert_fail@plt+0x2896c>
   3a00c:	b	3a0d8 <__assert_fail@plt+0x28984>
   3a010:	ldr	r0, [fp, #-16]
   3a014:	mvn	r1, #127	; 0x7f
   3a018:	udiv	r0, r1, r0
   3a01c:	ldr	r1, [fp, #-12]
   3a020:	cmp	r0, r1
   3a024:	bcc	3a0c0 <__assert_fail@plt+0x2896c>
   3a028:	b	3a0d8 <__assert_fail@plt+0x28984>
   3a02c:	ldr	r0, [fp, #-16]
   3a030:	cmp	r0, #0
   3a034:	bne	3a03c <__assert_fail@plt+0x288e8>
   3a038:	b	3a0d8 <__assert_fail@plt+0x28984>
   3a03c:	ldr	r0, [fp, #-12]
   3a040:	cmp	r0, #0
   3a044:	bcs	3a0a8 <__assert_fail@plt+0x28954>
   3a048:	ldr	r0, [fp, #-12]
   3a04c:	cmn	r0, #1
   3a050:	bne	3a08c <__assert_fail@plt+0x28938>
   3a054:	b	3a074 <__assert_fail@plt+0x28920>
   3a058:	ldr	r0, [fp, #-16]
   3a05c:	mvn	r1, #127	; 0x7f
   3a060:	add	r0, r0, r1
   3a064:	movw	r1, #0
   3a068:	cmp	r1, r0
   3a06c:	bcc	3a0c0 <__assert_fail@plt+0x2896c>
   3a070:	b	3a0d8 <__assert_fail@plt+0x28984>
   3a074:	ldr	r0, [fp, #-16]
   3a078:	sub	r0, r0, #1
   3a07c:	movw	r1, #127	; 0x7f
   3a080:	cmp	r1, r0
   3a084:	bcc	3a0c0 <__assert_fail@plt+0x2896c>
   3a088:	b	3a0d8 <__assert_fail@plt+0x28984>
   3a08c:	ldr	r0, [fp, #-12]
   3a090:	mvn	r1, #127	; 0x7f
   3a094:	udiv	r0, r1, r0
   3a098:	ldr	r1, [fp, #-16]
   3a09c:	cmp	r0, r1
   3a0a0:	bcc	3a0c0 <__assert_fail@plt+0x2896c>
   3a0a4:	b	3a0d8 <__assert_fail@plt+0x28984>
   3a0a8:	ldr	r0, [fp, #-16]
   3a0ac:	movw	r1, #127	; 0x7f
   3a0b0:	udiv	r0, r1, r0
   3a0b4:	ldr	r1, [fp, #-12]
   3a0b8:	cmp	r0, r1
   3a0bc:	bcs	3a0d8 <__assert_fail@plt+0x28984>
   3a0c0:	ldr	r0, [fp, #-12]
   3a0c4:	ldr	r1, [fp, #-16]
   3a0c8:	mul	r0, r0, r1
   3a0cc:	sxtb	r0, r0
   3a0d0:	str	r0, [fp, #-20]	; 0xffffffec
   3a0d4:	b	3b200 <__assert_fail@plt+0x29aac>
   3a0d8:	ldr	r0, [fp, #-12]
   3a0dc:	ldr	r1, [fp, #-16]
   3a0e0:	mul	r0, r0, r1
   3a0e4:	sxtb	r0, r0
   3a0e8:	str	r0, [fp, #-20]	; 0xffffffec
   3a0ec:	b	3b218 <__assert_fail@plt+0x29ac4>
   3a0f0:	ldr	r0, [fp, #-16]
   3a0f4:	cmp	r0, #0
   3a0f8:	bcs	3a204 <__assert_fail@plt+0x28ab0>
   3a0fc:	ldr	r0, [fp, #-12]
   3a100:	cmp	r0, #0
   3a104:	bcs	3a18c <__assert_fail@plt+0x28a38>
   3a108:	b	3a128 <__assert_fail@plt+0x289d4>
   3a10c:	ldr	r0, [fp, #-12]
   3a110:	ldr	r1, [fp, #-16]
   3a114:	movw	r2, #255	; 0xff
   3a118:	udiv	r1, r2, r1
   3a11c:	cmp	r0, r1
   3a120:	bcc	3a2a0 <__assert_fail@plt+0x28b4c>
   3a124:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a128:	b	3a13c <__assert_fail@plt+0x289e8>
   3a12c:	ldr	r0, [fp, #-16]
   3a130:	cmp	r0, #1
   3a134:	bcc	3a14c <__assert_fail@plt+0x289f8>
   3a138:	b	3a158 <__assert_fail@plt+0x28a04>
   3a13c:	ldr	r0, [fp, #-16]
   3a140:	movw	r1, #0
   3a144:	cmp	r1, r0
   3a148:	bcs	3a158 <__assert_fail@plt+0x28a04>
   3a14c:	movw	r0, #0
   3a150:	str	r0, [fp, #-28]	; 0xffffffe4
   3a154:	b	3a170 <__assert_fail@plt+0x28a1c>
   3a158:	ldr	r0, [fp, #-16]
   3a15c:	movw	r1, #0
   3a160:	sub	r0, r1, r0
   3a164:	movw	r1, #255	; 0xff
   3a168:	udiv	r0, r1, r0
   3a16c:	str	r0, [fp, #-28]	; 0xffffffe4
   3a170:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a174:	ldr	r1, [fp, #-12]
   3a178:	mvn	r2, #0
   3a17c:	sub	r1, r2, r1
   3a180:	cmp	r0, r1
   3a184:	bls	3a2a0 <__assert_fail@plt+0x28b4c>
   3a188:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a18c:	b	3a194 <__assert_fail@plt+0x28a40>
   3a190:	b	3a198 <__assert_fail@plt+0x28a44>
   3a194:	b	3a1e8 <__assert_fail@plt+0x28a94>
   3a198:	ldr	r0, [fp, #-16]
   3a19c:	cmn	r0, #1
   3a1a0:	bne	3a1e8 <__assert_fail@plt+0x28a94>
   3a1a4:	b	3a1c0 <__assert_fail@plt+0x28a6c>
   3a1a8:	ldr	r0, [fp, #-12]
   3a1ac:	add	r0, r0, #0
   3a1b0:	movw	r1, #0
   3a1b4:	cmp	r1, r0
   3a1b8:	bcc	3a2a0 <__assert_fail@plt+0x28b4c>
   3a1bc:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a1c0:	ldr	r0, [fp, #-12]
   3a1c4:	movw	r1, #0
   3a1c8:	cmp	r1, r0
   3a1cc:	bcs	3a2b8 <__assert_fail@plt+0x28b64>
   3a1d0:	ldr	r0, [fp, #-12]
   3a1d4:	sub	r0, r0, #1
   3a1d8:	mvn	r1, #0
   3a1dc:	cmp	r1, r0
   3a1e0:	bcc	3a2a0 <__assert_fail@plt+0x28b4c>
   3a1e4:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a1e8:	ldr	r0, [fp, #-16]
   3a1ec:	movw	r1, #0
   3a1f0:	udiv	r0, r1, r0
   3a1f4:	ldr	r1, [fp, #-12]
   3a1f8:	cmp	r0, r1
   3a1fc:	bcc	3a2a0 <__assert_fail@plt+0x28b4c>
   3a200:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a204:	ldr	r0, [fp, #-16]
   3a208:	cmp	r0, #0
   3a20c:	bne	3a214 <__assert_fail@plt+0x28ac0>
   3a210:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a214:	ldr	r0, [fp, #-12]
   3a218:	cmp	r0, #0
   3a21c:	bcs	3a288 <__assert_fail@plt+0x28b34>
   3a220:	b	3a228 <__assert_fail@plt+0x28ad4>
   3a224:	b	3a22c <__assert_fail@plt+0x28ad8>
   3a228:	b	3a26c <__assert_fail@plt+0x28b18>
   3a22c:	ldr	r0, [fp, #-12]
   3a230:	cmn	r0, #1
   3a234:	bne	3a26c <__assert_fail@plt+0x28b18>
   3a238:	b	3a254 <__assert_fail@plt+0x28b00>
   3a23c:	ldr	r0, [fp, #-16]
   3a240:	add	r0, r0, #0
   3a244:	movw	r1, #0
   3a248:	cmp	r1, r0
   3a24c:	bcc	3a2a0 <__assert_fail@plt+0x28b4c>
   3a250:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a254:	ldr	r0, [fp, #-16]
   3a258:	sub	r0, r0, #1
   3a25c:	mvn	r1, #0
   3a260:	cmp	r1, r0
   3a264:	bcc	3a2a0 <__assert_fail@plt+0x28b4c>
   3a268:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a26c:	ldr	r0, [fp, #-12]
   3a270:	movw	r1, #0
   3a274:	udiv	r0, r1, r0
   3a278:	ldr	r1, [fp, #-16]
   3a27c:	cmp	r0, r1
   3a280:	bcc	3a2a0 <__assert_fail@plt+0x28b4c>
   3a284:	b	3a2b8 <__assert_fail@plt+0x28b64>
   3a288:	ldr	r0, [fp, #-16]
   3a28c:	movw	r1, #255	; 0xff
   3a290:	udiv	r0, r1, r0
   3a294:	ldr	r1, [fp, #-12]
   3a298:	cmp	r0, r1
   3a29c:	bcs	3a2b8 <__assert_fail@plt+0x28b64>
   3a2a0:	ldr	r0, [fp, #-12]
   3a2a4:	ldr	r1, [fp, #-16]
   3a2a8:	mul	r0, r0, r1
   3a2ac:	and	r0, r0, #255	; 0xff
   3a2b0:	str	r0, [fp, #-20]	; 0xffffffec
   3a2b4:	b	3b200 <__assert_fail@plt+0x29aac>
   3a2b8:	ldr	r0, [fp, #-12]
   3a2bc:	ldr	r1, [fp, #-16]
   3a2c0:	mul	r0, r0, r1
   3a2c4:	and	r0, r0, #255	; 0xff
   3a2c8:	str	r0, [fp, #-20]	; 0xffffffec
   3a2cc:	b	3b218 <__assert_fail@plt+0x29ac4>
   3a2d0:	b	3a688 <__assert_fail@plt+0x28f34>
   3a2d4:	b	3a4a8 <__assert_fail@plt+0x28d54>
   3a2d8:	ldr	r0, [fp, #-16]
   3a2dc:	cmp	r0, #0
   3a2e0:	bcs	3a3e4 <__assert_fail@plt+0x28c90>
   3a2e4:	ldr	r0, [fp, #-12]
   3a2e8:	cmp	r0, #0
   3a2ec:	bcs	3a374 <__assert_fail@plt+0x28c20>
   3a2f0:	b	3a310 <__assert_fail@plt+0x28bbc>
   3a2f4:	ldr	r0, [fp, #-12]
   3a2f8:	ldr	r1, [fp, #-16]
   3a2fc:	movw	r2, #32767	; 0x7fff
   3a300:	udiv	r1, r2, r1
   3a304:	cmp	r0, r1
   3a308:	bcc	3a478 <__assert_fail@plt+0x28d24>
   3a30c:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a310:	b	3a324 <__assert_fail@plt+0x28bd0>
   3a314:	ldr	r0, [fp, #-16]
   3a318:	cmp	r0, #1
   3a31c:	bcc	3a334 <__assert_fail@plt+0x28be0>
   3a320:	b	3a340 <__assert_fail@plt+0x28bec>
   3a324:	ldr	r0, [fp, #-16]
   3a328:	movw	r1, #0
   3a32c:	cmp	r1, r0
   3a330:	bcs	3a340 <__assert_fail@plt+0x28bec>
   3a334:	movw	r0, #0
   3a338:	str	r0, [fp, #-32]	; 0xffffffe0
   3a33c:	b	3a358 <__assert_fail@plt+0x28c04>
   3a340:	ldr	r0, [fp, #-16]
   3a344:	movw	r1, #0
   3a348:	sub	r0, r1, r0
   3a34c:	movw	r1, #32767	; 0x7fff
   3a350:	udiv	r0, r1, r0
   3a354:	str	r0, [fp, #-32]	; 0xffffffe0
   3a358:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3a35c:	ldr	r1, [fp, #-12]
   3a360:	mvn	r2, #0
   3a364:	sub	r1, r2, r1
   3a368:	cmp	r0, r1
   3a36c:	bls	3a478 <__assert_fail@plt+0x28d24>
   3a370:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a374:	ldr	r0, [fp, #-16]
   3a378:	cmn	r0, #1
   3a37c:	bne	3a3c8 <__assert_fail@plt+0x28c74>
   3a380:	b	3a3a0 <__assert_fail@plt+0x28c4c>
   3a384:	ldr	r0, [pc, #3760]	; 3b23c <__assert_fail@plt+0x29ae8>
   3a388:	ldr	r1, [fp, #-12]
   3a38c:	add	r0, r1, r0
   3a390:	movw	r1, #0
   3a394:	cmp	r1, r0
   3a398:	bcc	3a478 <__assert_fail@plt+0x28d24>
   3a39c:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a3a0:	ldr	r0, [fp, #-12]
   3a3a4:	movw	r1, #0
   3a3a8:	cmp	r1, r0
   3a3ac:	bcs	3a490 <__assert_fail@plt+0x28d3c>
   3a3b0:	ldr	r0, [fp, #-12]
   3a3b4:	sub	r0, r0, #1
   3a3b8:	movw	r1, #32767	; 0x7fff
   3a3bc:	cmp	r1, r0
   3a3c0:	bcc	3a478 <__assert_fail@plt+0x28d24>
   3a3c4:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a3c8:	ldr	r0, [pc, #3692]	; 3b23c <__assert_fail@plt+0x29ae8>
   3a3cc:	ldr	r1, [fp, #-16]
   3a3d0:	udiv	r0, r0, r1
   3a3d4:	ldr	r1, [fp, #-12]
   3a3d8:	cmp	r0, r1
   3a3dc:	bcc	3a478 <__assert_fail@plt+0x28d24>
   3a3e0:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a3e4:	ldr	r0, [fp, #-16]
   3a3e8:	cmp	r0, #0
   3a3ec:	bne	3a3f4 <__assert_fail@plt+0x28ca0>
   3a3f0:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a3f4:	ldr	r0, [fp, #-12]
   3a3f8:	cmp	r0, #0
   3a3fc:	bcs	3a460 <__assert_fail@plt+0x28d0c>
   3a400:	ldr	r0, [fp, #-12]
   3a404:	cmn	r0, #1
   3a408:	bne	3a444 <__assert_fail@plt+0x28cf0>
   3a40c:	b	3a42c <__assert_fail@plt+0x28cd8>
   3a410:	ldr	r0, [pc, #3620]	; 3b23c <__assert_fail@plt+0x29ae8>
   3a414:	ldr	r1, [fp, #-16]
   3a418:	add	r0, r1, r0
   3a41c:	movw	r1, #0
   3a420:	cmp	r1, r0
   3a424:	bcc	3a478 <__assert_fail@plt+0x28d24>
   3a428:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a42c:	ldr	r0, [fp, #-16]
   3a430:	sub	r0, r0, #1
   3a434:	movw	r1, #32767	; 0x7fff
   3a438:	cmp	r1, r0
   3a43c:	bcc	3a478 <__assert_fail@plt+0x28d24>
   3a440:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a444:	ldr	r0, [pc, #3568]	; 3b23c <__assert_fail@plt+0x29ae8>
   3a448:	ldr	r1, [fp, #-12]
   3a44c:	udiv	r0, r0, r1
   3a450:	ldr	r1, [fp, #-16]
   3a454:	cmp	r0, r1
   3a458:	bcc	3a478 <__assert_fail@plt+0x28d24>
   3a45c:	b	3a490 <__assert_fail@plt+0x28d3c>
   3a460:	ldr	r0, [fp, #-16]
   3a464:	movw	r1, #32767	; 0x7fff
   3a468:	udiv	r0, r1, r0
   3a46c:	ldr	r1, [fp, #-12]
   3a470:	cmp	r0, r1
   3a474:	bcs	3a490 <__assert_fail@plt+0x28d3c>
   3a478:	ldr	r0, [fp, #-12]
   3a47c:	ldr	r1, [fp, #-16]
   3a480:	mul	r0, r0, r1
   3a484:	sxth	r0, r0
   3a488:	str	r0, [fp, #-20]	; 0xffffffec
   3a48c:	b	3b200 <__assert_fail@plt+0x29aac>
   3a490:	ldr	r0, [fp, #-12]
   3a494:	ldr	r1, [fp, #-16]
   3a498:	mul	r0, r0, r1
   3a49c:	sxth	r0, r0
   3a4a0:	str	r0, [fp, #-20]	; 0xffffffec
   3a4a4:	b	3b218 <__assert_fail@plt+0x29ac4>
   3a4a8:	ldr	r0, [fp, #-16]
   3a4ac:	cmp	r0, #0
   3a4b0:	bcs	3a5bc <__assert_fail@plt+0x28e68>
   3a4b4:	ldr	r0, [fp, #-12]
   3a4b8:	cmp	r0, #0
   3a4bc:	bcs	3a544 <__assert_fail@plt+0x28df0>
   3a4c0:	b	3a4e0 <__assert_fail@plt+0x28d8c>
   3a4c4:	ldr	r0, [fp, #-12]
   3a4c8:	ldr	r1, [fp, #-16]
   3a4cc:	movw	r2, #65535	; 0xffff
   3a4d0:	udiv	r1, r2, r1
   3a4d4:	cmp	r0, r1
   3a4d8:	bcc	3a658 <__assert_fail@plt+0x28f04>
   3a4dc:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a4e0:	b	3a4f4 <__assert_fail@plt+0x28da0>
   3a4e4:	ldr	r0, [fp, #-16]
   3a4e8:	cmp	r0, #1
   3a4ec:	bcc	3a504 <__assert_fail@plt+0x28db0>
   3a4f0:	b	3a510 <__assert_fail@plt+0x28dbc>
   3a4f4:	ldr	r0, [fp, #-16]
   3a4f8:	movw	r1, #0
   3a4fc:	cmp	r1, r0
   3a500:	bcs	3a510 <__assert_fail@plt+0x28dbc>
   3a504:	movw	r0, #0
   3a508:	str	r0, [fp, #-36]	; 0xffffffdc
   3a50c:	b	3a528 <__assert_fail@plt+0x28dd4>
   3a510:	ldr	r0, [fp, #-16]
   3a514:	movw	r1, #0
   3a518:	sub	r0, r1, r0
   3a51c:	movw	r1, #65535	; 0xffff
   3a520:	udiv	r0, r1, r0
   3a524:	str	r0, [fp, #-36]	; 0xffffffdc
   3a528:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3a52c:	ldr	r1, [fp, #-12]
   3a530:	mvn	r2, #0
   3a534:	sub	r1, r2, r1
   3a538:	cmp	r0, r1
   3a53c:	bls	3a658 <__assert_fail@plt+0x28f04>
   3a540:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a544:	b	3a54c <__assert_fail@plt+0x28df8>
   3a548:	b	3a550 <__assert_fail@plt+0x28dfc>
   3a54c:	b	3a5a0 <__assert_fail@plt+0x28e4c>
   3a550:	ldr	r0, [fp, #-16]
   3a554:	cmn	r0, #1
   3a558:	bne	3a5a0 <__assert_fail@plt+0x28e4c>
   3a55c:	b	3a578 <__assert_fail@plt+0x28e24>
   3a560:	ldr	r0, [fp, #-12]
   3a564:	add	r0, r0, #0
   3a568:	movw	r1, #0
   3a56c:	cmp	r1, r0
   3a570:	bcc	3a658 <__assert_fail@plt+0x28f04>
   3a574:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a578:	ldr	r0, [fp, #-12]
   3a57c:	movw	r1, #0
   3a580:	cmp	r1, r0
   3a584:	bcs	3a670 <__assert_fail@plt+0x28f1c>
   3a588:	ldr	r0, [fp, #-12]
   3a58c:	sub	r0, r0, #1
   3a590:	mvn	r1, #0
   3a594:	cmp	r1, r0
   3a598:	bcc	3a658 <__assert_fail@plt+0x28f04>
   3a59c:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a5a0:	ldr	r0, [fp, #-16]
   3a5a4:	movw	r1, #0
   3a5a8:	udiv	r0, r1, r0
   3a5ac:	ldr	r1, [fp, #-12]
   3a5b0:	cmp	r0, r1
   3a5b4:	bcc	3a658 <__assert_fail@plt+0x28f04>
   3a5b8:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a5bc:	ldr	r0, [fp, #-16]
   3a5c0:	cmp	r0, #0
   3a5c4:	bne	3a5cc <__assert_fail@plt+0x28e78>
   3a5c8:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a5cc:	ldr	r0, [fp, #-12]
   3a5d0:	cmp	r0, #0
   3a5d4:	bcs	3a640 <__assert_fail@plt+0x28eec>
   3a5d8:	b	3a5e0 <__assert_fail@plt+0x28e8c>
   3a5dc:	b	3a5e4 <__assert_fail@plt+0x28e90>
   3a5e0:	b	3a624 <__assert_fail@plt+0x28ed0>
   3a5e4:	ldr	r0, [fp, #-12]
   3a5e8:	cmn	r0, #1
   3a5ec:	bne	3a624 <__assert_fail@plt+0x28ed0>
   3a5f0:	b	3a60c <__assert_fail@plt+0x28eb8>
   3a5f4:	ldr	r0, [fp, #-16]
   3a5f8:	add	r0, r0, #0
   3a5fc:	movw	r1, #0
   3a600:	cmp	r1, r0
   3a604:	bcc	3a658 <__assert_fail@plt+0x28f04>
   3a608:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a60c:	ldr	r0, [fp, #-16]
   3a610:	sub	r0, r0, #1
   3a614:	mvn	r1, #0
   3a618:	cmp	r1, r0
   3a61c:	bcc	3a658 <__assert_fail@plt+0x28f04>
   3a620:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a624:	ldr	r0, [fp, #-12]
   3a628:	movw	r1, #0
   3a62c:	udiv	r0, r1, r0
   3a630:	ldr	r1, [fp, #-16]
   3a634:	cmp	r0, r1
   3a638:	bcc	3a658 <__assert_fail@plt+0x28f04>
   3a63c:	b	3a670 <__assert_fail@plt+0x28f1c>
   3a640:	ldr	r0, [fp, #-16]
   3a644:	movw	r1, #65535	; 0xffff
   3a648:	udiv	r0, r1, r0
   3a64c:	ldr	r1, [fp, #-12]
   3a650:	cmp	r0, r1
   3a654:	bcs	3a670 <__assert_fail@plt+0x28f1c>
   3a658:	ldr	r0, [fp, #-12]
   3a65c:	ldr	r1, [fp, #-16]
   3a660:	mul	r0, r0, r1
   3a664:	uxth	r0, r0
   3a668:	str	r0, [fp, #-20]	; 0xffffffec
   3a66c:	b	3b200 <__assert_fail@plt+0x29aac>
   3a670:	ldr	r0, [fp, #-12]
   3a674:	ldr	r1, [fp, #-16]
   3a678:	mul	r0, r0, r1
   3a67c:	uxth	r0, r0
   3a680:	str	r0, [fp, #-20]	; 0xffffffec
   3a684:	b	3b218 <__assert_fail@plt+0x29ac4>
   3a688:	b	3a68c <__assert_fail@plt+0x28f38>
   3a68c:	b	3a850 <__assert_fail@plt+0x290fc>
   3a690:	ldr	r0, [fp, #-16]
   3a694:	cmp	r0, #0
   3a698:	bcs	3a798 <__assert_fail@plt+0x29044>
   3a69c:	ldr	r0, [fp, #-12]
   3a6a0:	cmp	r0, #0
   3a6a4:	bcs	3a72c <__assert_fail@plt+0x28fd8>
   3a6a8:	b	3a6c8 <__assert_fail@plt+0x28f74>
   3a6ac:	ldr	r0, [pc, #2944]	; 3b234 <__assert_fail@plt+0x29ae0>
   3a6b0:	ldr	r1, [fp, #-12]
   3a6b4:	ldr	r2, [fp, #-16]
   3a6b8:	udiv	r0, r0, r2
   3a6bc:	cmp	r1, r0
   3a6c0:	bcc	3a828 <__assert_fail@plt+0x290d4>
   3a6c4:	b	3a83c <__assert_fail@plt+0x290e8>
   3a6c8:	b	3a6dc <__assert_fail@plt+0x28f88>
   3a6cc:	ldr	r0, [fp, #-16]
   3a6d0:	cmp	r0, #1
   3a6d4:	bcc	3a6ec <__assert_fail@plt+0x28f98>
   3a6d8:	b	3a6f8 <__assert_fail@plt+0x28fa4>
   3a6dc:	ldr	r0, [fp, #-16]
   3a6e0:	movw	r1, #0
   3a6e4:	cmp	r1, r0
   3a6e8:	bcs	3a6f8 <__assert_fail@plt+0x28fa4>
   3a6ec:	movw	r0, #0
   3a6f0:	str	r0, [fp, #-40]	; 0xffffffd8
   3a6f4:	b	3a710 <__assert_fail@plt+0x28fbc>
   3a6f8:	ldr	r0, [pc, #2868]	; 3b234 <__assert_fail@plt+0x29ae0>
   3a6fc:	ldr	r1, [fp, #-16]
   3a700:	movw	r2, #0
   3a704:	sub	r1, r2, r1
   3a708:	udiv	r0, r0, r1
   3a70c:	str	r0, [fp, #-40]	; 0xffffffd8
   3a710:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3a714:	ldr	r1, [fp, #-12]
   3a718:	mvn	r2, #0
   3a71c:	sub	r1, r2, r1
   3a720:	cmp	r0, r1
   3a724:	bls	3a828 <__assert_fail@plt+0x290d4>
   3a728:	b	3a83c <__assert_fail@plt+0x290e8>
   3a72c:	ldr	r0, [fp, #-16]
   3a730:	cmn	r0, #1
   3a734:	bne	3a77c <__assert_fail@plt+0x29028>
   3a738:	b	3a754 <__assert_fail@plt+0x29000>
   3a73c:	ldr	r0, [fp, #-12]
   3a740:	add	r0, r0, #-2147483648	; 0x80000000
   3a744:	movw	r1, #0
   3a748:	cmp	r1, r0
   3a74c:	bcc	3a828 <__assert_fail@plt+0x290d4>
   3a750:	b	3a83c <__assert_fail@plt+0x290e8>
   3a754:	ldr	r0, [fp, #-12]
   3a758:	movw	r1, #0
   3a75c:	cmp	r1, r0
   3a760:	bcs	3a83c <__assert_fail@plt+0x290e8>
   3a764:	ldr	r0, [pc, #2760]	; 3b234 <__assert_fail@plt+0x29ae0>
   3a768:	ldr	r1, [fp, #-12]
   3a76c:	sub	r1, r1, #1
   3a770:	cmp	r0, r1
   3a774:	bcc	3a828 <__assert_fail@plt+0x290d4>
   3a778:	b	3a83c <__assert_fail@plt+0x290e8>
   3a77c:	ldr	r0, [pc, #2740]	; 3b238 <__assert_fail@plt+0x29ae4>
   3a780:	ldr	r1, [fp, #-16]
   3a784:	udiv	r0, r0, r1
   3a788:	ldr	r1, [fp, #-12]
   3a78c:	cmp	r0, r1
   3a790:	bcc	3a828 <__assert_fail@plt+0x290d4>
   3a794:	b	3a83c <__assert_fail@plt+0x290e8>
   3a798:	ldr	r0, [fp, #-16]
   3a79c:	cmp	r0, #0
   3a7a0:	bne	3a7a8 <__assert_fail@plt+0x29054>
   3a7a4:	b	3a83c <__assert_fail@plt+0x290e8>
   3a7a8:	ldr	r0, [fp, #-12]
   3a7ac:	cmp	r0, #0
   3a7b0:	bcs	3a810 <__assert_fail@plt+0x290bc>
   3a7b4:	ldr	r0, [fp, #-12]
   3a7b8:	cmn	r0, #1
   3a7bc:	bne	3a7f4 <__assert_fail@plt+0x290a0>
   3a7c0:	b	3a7dc <__assert_fail@plt+0x29088>
   3a7c4:	ldr	r0, [fp, #-16]
   3a7c8:	add	r0, r0, #-2147483648	; 0x80000000
   3a7cc:	movw	r1, #0
   3a7d0:	cmp	r1, r0
   3a7d4:	bcc	3a828 <__assert_fail@plt+0x290d4>
   3a7d8:	b	3a83c <__assert_fail@plt+0x290e8>
   3a7dc:	ldr	r0, [pc, #2640]	; 3b234 <__assert_fail@plt+0x29ae0>
   3a7e0:	ldr	r1, [fp, #-16]
   3a7e4:	sub	r1, r1, #1
   3a7e8:	cmp	r0, r1
   3a7ec:	bcc	3a828 <__assert_fail@plt+0x290d4>
   3a7f0:	b	3a83c <__assert_fail@plt+0x290e8>
   3a7f4:	ldr	r0, [pc, #2620]	; 3b238 <__assert_fail@plt+0x29ae4>
   3a7f8:	ldr	r1, [fp, #-12]
   3a7fc:	udiv	r0, r0, r1
   3a800:	ldr	r1, [fp, #-16]
   3a804:	cmp	r0, r1
   3a808:	bcc	3a828 <__assert_fail@plt+0x290d4>
   3a80c:	b	3a83c <__assert_fail@plt+0x290e8>
   3a810:	ldr	r0, [pc, #2588]	; 3b234 <__assert_fail@plt+0x29ae0>
   3a814:	ldr	r1, [fp, #-16]
   3a818:	udiv	r0, r0, r1
   3a81c:	ldr	r1, [fp, #-12]
   3a820:	cmp	r0, r1
   3a824:	bcs	3a83c <__assert_fail@plt+0x290e8>
   3a828:	ldr	r0, [fp, #-12]
   3a82c:	ldr	r1, [fp, #-16]
   3a830:	mul	r0, r0, r1
   3a834:	str	r0, [fp, #-20]	; 0xffffffec
   3a838:	b	3b200 <__assert_fail@plt+0x29aac>
   3a83c:	ldr	r0, [fp, #-12]
   3a840:	ldr	r1, [fp, #-16]
   3a844:	mul	r0, r0, r1
   3a848:	str	r0, [fp, #-20]	; 0xffffffec
   3a84c:	b	3b218 <__assert_fail@plt+0x29ac4>
   3a850:	ldr	r0, [fp, #-16]
   3a854:	cmp	r0, #0
   3a858:	bcs	3a964 <__assert_fail@plt+0x29210>
   3a85c:	ldr	r0, [fp, #-12]
   3a860:	cmp	r0, #0
   3a864:	bcs	3a8ec <__assert_fail@plt+0x29198>
   3a868:	b	3a888 <__assert_fail@plt+0x29134>
   3a86c:	ldr	r0, [fp, #-12]
   3a870:	ldr	r1, [fp, #-16]
   3a874:	mvn	r2, #0
   3a878:	udiv	r1, r2, r1
   3a87c:	cmp	r0, r1
   3a880:	bcc	3aa00 <__assert_fail@plt+0x292ac>
   3a884:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a888:	b	3a89c <__assert_fail@plt+0x29148>
   3a88c:	ldr	r0, [fp, #-16]
   3a890:	cmp	r0, #1
   3a894:	bcc	3a8ac <__assert_fail@plt+0x29158>
   3a898:	b	3a8b8 <__assert_fail@plt+0x29164>
   3a89c:	ldr	r0, [fp, #-16]
   3a8a0:	movw	r1, #0
   3a8a4:	cmp	r1, r0
   3a8a8:	bcs	3a8b8 <__assert_fail@plt+0x29164>
   3a8ac:	movw	r0, #1
   3a8b0:	str	r0, [fp, #-44]	; 0xffffffd4
   3a8b4:	b	3a8d0 <__assert_fail@plt+0x2917c>
   3a8b8:	ldr	r0, [fp, #-16]
   3a8bc:	movw	r1, #0
   3a8c0:	sub	r0, r1, r0
   3a8c4:	mvn	r1, #0
   3a8c8:	udiv	r0, r1, r0
   3a8cc:	str	r0, [fp, #-44]	; 0xffffffd4
   3a8d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3a8d4:	ldr	r1, [fp, #-12]
   3a8d8:	mvn	r2, #0
   3a8dc:	sub	r1, r2, r1
   3a8e0:	cmp	r0, r1
   3a8e4:	bls	3aa00 <__assert_fail@plt+0x292ac>
   3a8e8:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a8ec:	b	3a8f4 <__assert_fail@plt+0x291a0>
   3a8f0:	b	3a8f8 <__assert_fail@plt+0x291a4>
   3a8f4:	b	3a948 <__assert_fail@plt+0x291f4>
   3a8f8:	ldr	r0, [fp, #-16]
   3a8fc:	cmn	r0, #1
   3a900:	bne	3a948 <__assert_fail@plt+0x291f4>
   3a904:	b	3a920 <__assert_fail@plt+0x291cc>
   3a908:	ldr	r0, [fp, #-12]
   3a90c:	add	r0, r0, #0
   3a910:	movw	r1, #0
   3a914:	cmp	r1, r0
   3a918:	bcc	3aa00 <__assert_fail@plt+0x292ac>
   3a91c:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a920:	ldr	r0, [fp, #-12]
   3a924:	movw	r1, #0
   3a928:	cmp	r1, r0
   3a92c:	bcs	3aa14 <__assert_fail@plt+0x292c0>
   3a930:	ldr	r0, [fp, #-12]
   3a934:	sub	r0, r0, #1
   3a938:	mvn	r1, #0
   3a93c:	cmp	r1, r0
   3a940:	bcc	3aa00 <__assert_fail@plt+0x292ac>
   3a944:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a948:	ldr	r0, [fp, #-16]
   3a94c:	movw	r1, #0
   3a950:	udiv	r0, r1, r0
   3a954:	ldr	r1, [fp, #-12]
   3a958:	cmp	r0, r1
   3a95c:	bcc	3aa00 <__assert_fail@plt+0x292ac>
   3a960:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a964:	ldr	r0, [fp, #-16]
   3a968:	cmp	r0, #0
   3a96c:	bne	3a974 <__assert_fail@plt+0x29220>
   3a970:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a974:	ldr	r0, [fp, #-12]
   3a978:	cmp	r0, #0
   3a97c:	bcs	3a9e8 <__assert_fail@plt+0x29294>
   3a980:	b	3a988 <__assert_fail@plt+0x29234>
   3a984:	b	3a98c <__assert_fail@plt+0x29238>
   3a988:	b	3a9cc <__assert_fail@plt+0x29278>
   3a98c:	ldr	r0, [fp, #-12]
   3a990:	cmn	r0, #1
   3a994:	bne	3a9cc <__assert_fail@plt+0x29278>
   3a998:	b	3a9b4 <__assert_fail@plt+0x29260>
   3a99c:	ldr	r0, [fp, #-16]
   3a9a0:	add	r0, r0, #0
   3a9a4:	movw	r1, #0
   3a9a8:	cmp	r1, r0
   3a9ac:	bcc	3aa00 <__assert_fail@plt+0x292ac>
   3a9b0:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a9b4:	ldr	r0, [fp, #-16]
   3a9b8:	sub	r0, r0, #1
   3a9bc:	mvn	r1, #0
   3a9c0:	cmp	r1, r0
   3a9c4:	bcc	3aa00 <__assert_fail@plt+0x292ac>
   3a9c8:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a9cc:	ldr	r0, [fp, #-12]
   3a9d0:	movw	r1, #0
   3a9d4:	udiv	r0, r1, r0
   3a9d8:	ldr	r1, [fp, #-16]
   3a9dc:	cmp	r0, r1
   3a9e0:	bcc	3aa00 <__assert_fail@plt+0x292ac>
   3a9e4:	b	3aa14 <__assert_fail@plt+0x292c0>
   3a9e8:	ldr	r0, [fp, #-16]
   3a9ec:	mvn	r1, #0
   3a9f0:	udiv	r0, r1, r0
   3a9f4:	ldr	r1, [fp, #-12]
   3a9f8:	cmp	r0, r1
   3a9fc:	bcs	3aa14 <__assert_fail@plt+0x292c0>
   3aa00:	ldr	r0, [fp, #-12]
   3aa04:	ldr	r1, [fp, #-16]
   3aa08:	mul	r0, r0, r1
   3aa0c:	str	r0, [fp, #-20]	; 0xffffffec
   3aa10:	b	3b200 <__assert_fail@plt+0x29aac>
   3aa14:	ldr	r0, [fp, #-12]
   3aa18:	ldr	r1, [fp, #-16]
   3aa1c:	mul	r0, r0, r1
   3aa20:	str	r0, [fp, #-20]	; 0xffffffec
   3aa24:	b	3b218 <__assert_fail@plt+0x29ac4>
   3aa28:	b	3aa2c <__assert_fail@plt+0x292d8>
   3aa2c:	b	3abf0 <__assert_fail@plt+0x2949c>
   3aa30:	ldr	r0, [fp, #-16]
   3aa34:	cmp	r0, #0
   3aa38:	bcs	3ab38 <__assert_fail@plt+0x293e4>
   3aa3c:	ldr	r0, [fp, #-12]
   3aa40:	cmp	r0, #0
   3aa44:	bcs	3aacc <__assert_fail@plt+0x29378>
   3aa48:	b	3aa68 <__assert_fail@plt+0x29314>
   3aa4c:	ldr	r0, [pc, #2016]	; 3b234 <__assert_fail@plt+0x29ae0>
   3aa50:	ldr	r1, [fp, #-12]
   3aa54:	ldr	r2, [fp, #-16]
   3aa58:	udiv	r0, r0, r2
   3aa5c:	cmp	r1, r0
   3aa60:	bcc	3abc8 <__assert_fail@plt+0x29474>
   3aa64:	b	3abdc <__assert_fail@plt+0x29488>
   3aa68:	b	3aa7c <__assert_fail@plt+0x29328>
   3aa6c:	ldr	r0, [fp, #-16]
   3aa70:	cmp	r0, #1
   3aa74:	bcc	3aa8c <__assert_fail@plt+0x29338>
   3aa78:	b	3aa98 <__assert_fail@plt+0x29344>
   3aa7c:	ldr	r0, [fp, #-16]
   3aa80:	movw	r1, #0
   3aa84:	cmp	r1, r0
   3aa88:	bcs	3aa98 <__assert_fail@plt+0x29344>
   3aa8c:	movw	r0, #0
   3aa90:	str	r0, [sp, #48]	; 0x30
   3aa94:	b	3aab0 <__assert_fail@plt+0x2935c>
   3aa98:	ldr	r0, [pc, #1940]	; 3b234 <__assert_fail@plt+0x29ae0>
   3aa9c:	ldr	r1, [fp, #-16]
   3aaa0:	movw	r2, #0
   3aaa4:	sub	r1, r2, r1
   3aaa8:	udiv	r0, r0, r1
   3aaac:	str	r0, [sp, #48]	; 0x30
   3aab0:	ldr	r0, [sp, #48]	; 0x30
   3aab4:	ldr	r1, [fp, #-12]
   3aab8:	mvn	r2, #0
   3aabc:	sub	r1, r2, r1
   3aac0:	cmp	r0, r1
   3aac4:	bls	3abc8 <__assert_fail@plt+0x29474>
   3aac8:	b	3abdc <__assert_fail@plt+0x29488>
   3aacc:	ldr	r0, [fp, #-16]
   3aad0:	cmn	r0, #1
   3aad4:	bne	3ab1c <__assert_fail@plt+0x293c8>
   3aad8:	b	3aaf4 <__assert_fail@plt+0x293a0>
   3aadc:	ldr	r0, [fp, #-12]
   3aae0:	add	r0, r0, #-2147483648	; 0x80000000
   3aae4:	movw	r1, #0
   3aae8:	cmp	r1, r0
   3aaec:	bcc	3abc8 <__assert_fail@plt+0x29474>
   3aaf0:	b	3abdc <__assert_fail@plt+0x29488>
   3aaf4:	ldr	r0, [fp, #-12]
   3aaf8:	movw	r1, #0
   3aafc:	cmp	r1, r0
   3ab00:	bcs	3abdc <__assert_fail@plt+0x29488>
   3ab04:	ldr	r0, [pc, #1832]	; 3b234 <__assert_fail@plt+0x29ae0>
   3ab08:	ldr	r1, [fp, #-12]
   3ab0c:	sub	r1, r1, #1
   3ab10:	cmp	r0, r1
   3ab14:	bcc	3abc8 <__assert_fail@plt+0x29474>
   3ab18:	b	3abdc <__assert_fail@plt+0x29488>
   3ab1c:	ldr	r0, [pc, #1812]	; 3b238 <__assert_fail@plt+0x29ae4>
   3ab20:	ldr	r1, [fp, #-16]
   3ab24:	udiv	r0, r0, r1
   3ab28:	ldr	r1, [fp, #-12]
   3ab2c:	cmp	r0, r1
   3ab30:	bcc	3abc8 <__assert_fail@plt+0x29474>
   3ab34:	b	3abdc <__assert_fail@plt+0x29488>
   3ab38:	ldr	r0, [fp, #-16]
   3ab3c:	cmp	r0, #0
   3ab40:	bne	3ab48 <__assert_fail@plt+0x293f4>
   3ab44:	b	3abdc <__assert_fail@plt+0x29488>
   3ab48:	ldr	r0, [fp, #-12]
   3ab4c:	cmp	r0, #0
   3ab50:	bcs	3abb0 <__assert_fail@plt+0x2945c>
   3ab54:	ldr	r0, [fp, #-12]
   3ab58:	cmn	r0, #1
   3ab5c:	bne	3ab94 <__assert_fail@plt+0x29440>
   3ab60:	b	3ab7c <__assert_fail@plt+0x29428>
   3ab64:	ldr	r0, [fp, #-16]
   3ab68:	add	r0, r0, #-2147483648	; 0x80000000
   3ab6c:	movw	r1, #0
   3ab70:	cmp	r1, r0
   3ab74:	bcc	3abc8 <__assert_fail@plt+0x29474>
   3ab78:	b	3abdc <__assert_fail@plt+0x29488>
   3ab7c:	ldr	r0, [pc, #1712]	; 3b234 <__assert_fail@plt+0x29ae0>
   3ab80:	ldr	r1, [fp, #-16]
   3ab84:	sub	r1, r1, #1
   3ab88:	cmp	r0, r1
   3ab8c:	bcc	3abc8 <__assert_fail@plt+0x29474>
   3ab90:	b	3abdc <__assert_fail@plt+0x29488>
   3ab94:	ldr	r0, [pc, #1692]	; 3b238 <__assert_fail@plt+0x29ae4>
   3ab98:	ldr	r1, [fp, #-12]
   3ab9c:	udiv	r0, r0, r1
   3aba0:	ldr	r1, [fp, #-16]
   3aba4:	cmp	r0, r1
   3aba8:	bcc	3abc8 <__assert_fail@plt+0x29474>
   3abac:	b	3abdc <__assert_fail@plt+0x29488>
   3abb0:	ldr	r0, [pc, #1660]	; 3b234 <__assert_fail@plt+0x29ae0>
   3abb4:	ldr	r1, [fp, #-16]
   3abb8:	udiv	r0, r0, r1
   3abbc:	ldr	r1, [fp, #-12]
   3abc0:	cmp	r0, r1
   3abc4:	bcs	3abdc <__assert_fail@plt+0x29488>
   3abc8:	ldr	r0, [fp, #-12]
   3abcc:	ldr	r1, [fp, #-16]
   3abd0:	mul	r0, r0, r1
   3abd4:	str	r0, [fp, #-20]	; 0xffffffec
   3abd8:	b	3b200 <__assert_fail@plt+0x29aac>
   3abdc:	ldr	r0, [fp, #-12]
   3abe0:	ldr	r1, [fp, #-16]
   3abe4:	mul	r0, r0, r1
   3abe8:	str	r0, [fp, #-20]	; 0xffffffec
   3abec:	b	3b218 <__assert_fail@plt+0x29ac4>
   3abf0:	ldr	r0, [fp, #-16]
   3abf4:	cmp	r0, #0
   3abf8:	bcs	3ad04 <__assert_fail@plt+0x295b0>
   3abfc:	ldr	r0, [fp, #-12]
   3ac00:	cmp	r0, #0
   3ac04:	bcs	3ac8c <__assert_fail@plt+0x29538>
   3ac08:	b	3ac28 <__assert_fail@plt+0x294d4>
   3ac0c:	ldr	r0, [fp, #-12]
   3ac10:	ldr	r1, [fp, #-16]
   3ac14:	mvn	r2, #0
   3ac18:	udiv	r1, r2, r1
   3ac1c:	cmp	r0, r1
   3ac20:	bcc	3ada0 <__assert_fail@plt+0x2964c>
   3ac24:	b	3adb4 <__assert_fail@plt+0x29660>
   3ac28:	b	3ac3c <__assert_fail@plt+0x294e8>
   3ac2c:	ldr	r0, [fp, #-16]
   3ac30:	cmp	r0, #1
   3ac34:	bcc	3ac4c <__assert_fail@plt+0x294f8>
   3ac38:	b	3ac58 <__assert_fail@plt+0x29504>
   3ac3c:	ldr	r0, [fp, #-16]
   3ac40:	movw	r1, #0
   3ac44:	cmp	r1, r0
   3ac48:	bcs	3ac58 <__assert_fail@plt+0x29504>
   3ac4c:	movw	r0, #1
   3ac50:	str	r0, [sp, #44]	; 0x2c
   3ac54:	b	3ac70 <__assert_fail@plt+0x2951c>
   3ac58:	ldr	r0, [fp, #-16]
   3ac5c:	movw	r1, #0
   3ac60:	sub	r0, r1, r0
   3ac64:	mvn	r1, #0
   3ac68:	udiv	r0, r1, r0
   3ac6c:	str	r0, [sp, #44]	; 0x2c
   3ac70:	ldr	r0, [sp, #44]	; 0x2c
   3ac74:	ldr	r1, [fp, #-12]
   3ac78:	mvn	r2, #0
   3ac7c:	sub	r1, r2, r1
   3ac80:	cmp	r0, r1
   3ac84:	bls	3ada0 <__assert_fail@plt+0x2964c>
   3ac88:	b	3adb4 <__assert_fail@plt+0x29660>
   3ac8c:	b	3ac94 <__assert_fail@plt+0x29540>
   3ac90:	b	3ac98 <__assert_fail@plt+0x29544>
   3ac94:	b	3ace8 <__assert_fail@plt+0x29594>
   3ac98:	ldr	r0, [fp, #-16]
   3ac9c:	cmn	r0, #1
   3aca0:	bne	3ace8 <__assert_fail@plt+0x29594>
   3aca4:	b	3acc0 <__assert_fail@plt+0x2956c>
   3aca8:	ldr	r0, [fp, #-12]
   3acac:	add	r0, r0, #0
   3acb0:	movw	r1, #0
   3acb4:	cmp	r1, r0
   3acb8:	bcc	3ada0 <__assert_fail@plt+0x2964c>
   3acbc:	b	3adb4 <__assert_fail@plt+0x29660>
   3acc0:	ldr	r0, [fp, #-12]
   3acc4:	movw	r1, #0
   3acc8:	cmp	r1, r0
   3accc:	bcs	3adb4 <__assert_fail@plt+0x29660>
   3acd0:	ldr	r0, [fp, #-12]
   3acd4:	sub	r0, r0, #1
   3acd8:	mvn	r1, #0
   3acdc:	cmp	r1, r0
   3ace0:	bcc	3ada0 <__assert_fail@plt+0x2964c>
   3ace4:	b	3adb4 <__assert_fail@plt+0x29660>
   3ace8:	ldr	r0, [fp, #-16]
   3acec:	movw	r1, #0
   3acf0:	udiv	r0, r1, r0
   3acf4:	ldr	r1, [fp, #-12]
   3acf8:	cmp	r0, r1
   3acfc:	bcc	3ada0 <__assert_fail@plt+0x2964c>
   3ad00:	b	3adb4 <__assert_fail@plt+0x29660>
   3ad04:	ldr	r0, [fp, #-16]
   3ad08:	cmp	r0, #0
   3ad0c:	bne	3ad14 <__assert_fail@plt+0x295c0>
   3ad10:	b	3adb4 <__assert_fail@plt+0x29660>
   3ad14:	ldr	r0, [fp, #-12]
   3ad18:	cmp	r0, #0
   3ad1c:	bcs	3ad88 <__assert_fail@plt+0x29634>
   3ad20:	b	3ad28 <__assert_fail@plt+0x295d4>
   3ad24:	b	3ad2c <__assert_fail@plt+0x295d8>
   3ad28:	b	3ad6c <__assert_fail@plt+0x29618>
   3ad2c:	ldr	r0, [fp, #-12]
   3ad30:	cmn	r0, #1
   3ad34:	bne	3ad6c <__assert_fail@plt+0x29618>
   3ad38:	b	3ad54 <__assert_fail@plt+0x29600>
   3ad3c:	ldr	r0, [fp, #-16]
   3ad40:	add	r0, r0, #0
   3ad44:	movw	r1, #0
   3ad48:	cmp	r1, r0
   3ad4c:	bcc	3ada0 <__assert_fail@plt+0x2964c>
   3ad50:	b	3adb4 <__assert_fail@plt+0x29660>
   3ad54:	ldr	r0, [fp, #-16]
   3ad58:	sub	r0, r0, #1
   3ad5c:	mvn	r1, #0
   3ad60:	cmp	r1, r0
   3ad64:	bcc	3ada0 <__assert_fail@plt+0x2964c>
   3ad68:	b	3adb4 <__assert_fail@plt+0x29660>
   3ad6c:	ldr	r0, [fp, #-12]
   3ad70:	movw	r1, #0
   3ad74:	udiv	r0, r1, r0
   3ad78:	ldr	r1, [fp, #-16]
   3ad7c:	cmp	r0, r1
   3ad80:	bcc	3ada0 <__assert_fail@plt+0x2964c>
   3ad84:	b	3adb4 <__assert_fail@plt+0x29660>
   3ad88:	ldr	r0, [fp, #-16]
   3ad8c:	mvn	r1, #0
   3ad90:	udiv	r0, r1, r0
   3ad94:	ldr	r1, [fp, #-12]
   3ad98:	cmp	r0, r1
   3ad9c:	bcs	3adb4 <__assert_fail@plt+0x29660>
   3ada0:	ldr	r0, [fp, #-12]
   3ada4:	ldr	r1, [fp, #-16]
   3ada8:	mul	r0, r0, r1
   3adac:	str	r0, [fp, #-20]	; 0xffffffec
   3adb0:	b	3b200 <__assert_fail@plt+0x29aac>
   3adb4:	ldr	r0, [fp, #-12]
   3adb8:	ldr	r1, [fp, #-16]
   3adbc:	mul	r0, r0, r1
   3adc0:	str	r0, [fp, #-20]	; 0xffffffec
   3adc4:	b	3b218 <__assert_fail@plt+0x29ac4>
   3adc8:	b	3afe4 <__assert_fail@plt+0x29890>
   3adcc:	ldr	r0, [fp, #-16]
   3add0:	cmp	r0, #0
   3add4:	bcs	3af14 <__assert_fail@plt+0x297c0>
   3add8:	ldr	r0, [fp, #-12]
   3addc:	cmp	r0, #0
   3ade0:	bcs	3aea0 <__assert_fail@plt+0x2974c>
   3ade4:	b	3ade8 <__assert_fail@plt+0x29694>
   3ade8:	ldr	r0, [fp, #-12]
   3adec:	ldr	r2, [fp, #-16]
   3adf0:	mvn	r1, #0
   3adf4:	mvn	r3, #-2147483648	; 0x80000000
   3adf8:	mov	ip, #0
   3adfc:	str	r0, [sp, #40]	; 0x28
   3ae00:	mov	r0, r1
   3ae04:	mov	r1, r3
   3ae08:	mov	r3, ip
   3ae0c:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   3ae10:	ldr	r2, [sp, #40]	; 0x28
   3ae14:	subs	r0, r2, r0
   3ae18:	rscs	r1, r1, #0
   3ae1c:	blt	3afbc <__assert_fail@plt+0x29868>
   3ae20:	b	3afd0 <__assert_fail@plt+0x2987c>
   3ae24:	b	3ae38 <__assert_fail@plt+0x296e4>
   3ae28:	ldr	r0, [fp, #-16]
   3ae2c:	cmp	r0, #1
   3ae30:	bcc	3ae48 <__assert_fail@plt+0x296f4>
   3ae34:	b	3ae5c <__assert_fail@plt+0x29708>
   3ae38:	ldr	r0, [fp, #-16]
   3ae3c:	movw	r1, #0
   3ae40:	cmp	r1, r0
   3ae44:	bcs	3ae5c <__assert_fail@plt+0x29708>
   3ae48:	mov	r0, #0
   3ae4c:	mvn	r1, #0
   3ae50:	str	r1, [sp, #36]	; 0x24
   3ae54:	str	r0, [sp, #32]
   3ae58:	b	3ae80 <__assert_fail@plt+0x2972c>
   3ae5c:	ldr	r0, [fp, #-16]
   3ae60:	rsb	r2, r0, #0
   3ae64:	mvn	r0, #0
   3ae68:	mvn	r1, #-2147483648	; 0x80000000
   3ae6c:	mov	r3, #0
   3ae70:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   3ae74:	str	r0, [sp, #36]	; 0x24
   3ae78:	str	r1, [sp, #32]
   3ae7c:	b	3ae80 <__assert_fail@plt+0x2972c>
   3ae80:	ldr	r0, [sp, #32]
   3ae84:	ldr	r1, [sp, #36]	; 0x24
   3ae88:	ldr	r2, [fp, #-12]
   3ae8c:	mvn	r2, r2
   3ae90:	subs	r1, r2, r1
   3ae94:	rscs	r0, r0, #0
   3ae98:	bge	3afbc <__assert_fail@plt+0x29868>
   3ae9c:	b	3afd0 <__assert_fail@plt+0x2987c>
   3aea0:	ldr	r0, [fp, #-16]
   3aea4:	cmn	r0, #1
   3aea8:	bne	3aee8 <__assert_fail@plt+0x29794>
   3aeac:	b	3aec8 <__assert_fail@plt+0x29774>
   3aeb0:	ldr	r0, [fp, #-12]
   3aeb4:	rsbs	r0, r0, #0
   3aeb8:	mov	r1, #0
   3aebc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   3aec0:	blt	3afbc <__assert_fail@plt+0x29868>
   3aec4:	b	3afd0 <__assert_fail@plt+0x2987c>
   3aec8:	ldr	r0, [fp, #-12]
   3aecc:	movw	r1, #0
   3aed0:	cmp	r1, r0
   3aed4:	bcs	3afd0 <__assert_fail@plt+0x2987c>
   3aed8:	mov	r0, #0
   3aedc:	cmp	r0, #0
   3aee0:	bne	3afbc <__assert_fail@plt+0x29868>
   3aee4:	b	3afd0 <__assert_fail@plt+0x2987c>
   3aee8:	ldr	r2, [fp, #-16]
   3aeec:	mov	r1, #-2147483648	; 0x80000000
   3aef0:	mov	r0, #0
   3aef4:	str	r0, [sp, #28]
   3aef8:	ldr	r3, [sp, #28]
   3aefc:	bl	3ba78 <__assert_fail@plt+0x2a324>
   3af00:	ldr	r2, [fp, #-12]
   3af04:	subs	r0, r0, r2
   3af08:	sbcs	r1, r1, #0
   3af0c:	blt	3afbc <__assert_fail@plt+0x29868>
   3af10:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af14:	ldr	r0, [fp, #-16]
   3af18:	cmp	r0, #0
   3af1c:	bne	3af24 <__assert_fail@plt+0x297d0>
   3af20:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af24:	ldr	r0, [fp, #-12]
   3af28:	cmp	r0, #0
   3af2c:	bcs	3af94 <__assert_fail@plt+0x29840>
   3af30:	ldr	r0, [fp, #-12]
   3af34:	cmn	r0, #1
   3af38:	bne	3af68 <__assert_fail@plt+0x29814>
   3af3c:	b	3af58 <__assert_fail@plt+0x29804>
   3af40:	ldr	r0, [fp, #-16]
   3af44:	rsbs	r0, r0, #0
   3af48:	mov	r1, #0
   3af4c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   3af50:	blt	3afbc <__assert_fail@plt+0x29868>
   3af54:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af58:	mov	r0, #0
   3af5c:	cmp	r0, #0
   3af60:	bne	3afbc <__assert_fail@plt+0x29868>
   3af64:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af68:	ldr	r2, [fp, #-12]
   3af6c:	mov	r1, #-2147483648	; 0x80000000
   3af70:	mov	r0, #0
   3af74:	str	r0, [sp, #24]
   3af78:	ldr	r3, [sp, #24]
   3af7c:	bl	3ba78 <__assert_fail@plt+0x2a324>
   3af80:	ldr	r2, [fp, #-16]
   3af84:	subs	r0, r0, r2
   3af88:	sbcs	r1, r1, #0
   3af8c:	blt	3afbc <__assert_fail@plt+0x29868>
   3af90:	b	3afd0 <__assert_fail@plt+0x2987c>
   3af94:	ldr	r2, [fp, #-16]
   3af98:	mvn	r0, #0
   3af9c:	mvn	r1, #-2147483648	; 0x80000000
   3afa0:	mov	r3, #0
   3afa4:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   3afa8:	ldr	r2, [fp, #-12]
   3afac:	subs	r0, r0, r2
   3afb0:	sbcs	r1, r1, #0
   3afb4:	bge	3afd0 <__assert_fail@plt+0x2987c>
   3afb8:	b	3afbc <__assert_fail@plt+0x29868>
   3afbc:	ldr	r0, [fp, #-12]
   3afc0:	ldr	r1, [fp, #-16]
   3afc4:	mul	r0, r0, r1
   3afc8:	str	r0, [fp, #-20]	; 0xffffffec
   3afcc:	b	3b200 <__assert_fail@plt+0x29aac>
   3afd0:	ldr	r0, [fp, #-12]
   3afd4:	ldr	r1, [fp, #-16]
   3afd8:	mul	r0, r0, r1
   3afdc:	str	r0, [fp, #-20]	; 0xffffffec
   3afe0:	b	3b218 <__assert_fail@plt+0x29ac4>
   3afe4:	ldr	r0, [fp, #-16]
   3afe8:	cmp	r0, #0
   3afec:	bcs	3b128 <__assert_fail@plt+0x299d4>
   3aff0:	ldr	r0, [fp, #-12]
   3aff4:	cmp	r0, #0
   3aff8:	bcs	3b0b0 <__assert_fail@plt+0x2995c>
   3affc:	b	3b030 <__assert_fail@plt+0x298dc>
   3b000:	ldr	r0, [fp, #-12]
   3b004:	ldr	r2, [fp, #-16]
   3b008:	mvn	r1, #0
   3b00c:	mov	r3, #0
   3b010:	str	r0, [sp, #20]
   3b014:	mov	r0, r1
   3b018:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   3b01c:	ldr	r2, [sp, #20]
   3b020:	subs	r0, r2, r0
   3b024:	rscs	r1, r1, #0
   3b028:	bcc	3b1d8 <__assert_fail@plt+0x29a84>
   3b02c:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b030:	b	3b044 <__assert_fail@plt+0x298f0>
   3b034:	ldr	r0, [fp, #-16]
   3b038:	cmp	r0, #1
   3b03c:	bcc	3b054 <__assert_fail@plt+0x29900>
   3b040:	b	3b068 <__assert_fail@plt+0x29914>
   3b044:	ldr	r0, [fp, #-16]
   3b048:	movw	r1, #0
   3b04c:	cmp	r1, r0
   3b050:	bcs	3b068 <__assert_fail@plt+0x29914>
   3b054:	mov	r0, #1
   3b058:	mvn	r1, #0
   3b05c:	str	r1, [sp, #16]
   3b060:	str	r0, [sp, #12]
   3b064:	b	3b090 <__assert_fail@plt+0x2993c>
   3b068:	ldr	r0, [fp, #-16]
   3b06c:	rsb	r2, r0, #0
   3b070:	mvn	r0, #0
   3b074:	mov	r3, #0
   3b078:	str	r0, [sp, #8]
   3b07c:	ldr	r1, [sp, #8]
   3b080:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   3b084:	str	r0, [sp, #16]
   3b088:	str	r1, [sp, #12]
   3b08c:	b	3b090 <__assert_fail@plt+0x2993c>
   3b090:	ldr	r0, [sp, #12]
   3b094:	ldr	r1, [sp, #16]
   3b098:	ldr	r2, [fp, #-12]
   3b09c:	mvn	r2, r2
   3b0a0:	subs	r1, r2, r1
   3b0a4:	rscs	r0, r0, #0
   3b0a8:	bcs	3b1d8 <__assert_fail@plt+0x29a84>
   3b0ac:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b0b0:	b	3b0b8 <__assert_fail@plt+0x29964>
   3b0b4:	b	3b0bc <__assert_fail@plt+0x29968>
   3b0b8:	b	3b10c <__assert_fail@plt+0x299b8>
   3b0bc:	ldr	r0, [fp, #-16]
   3b0c0:	cmn	r0, #1
   3b0c4:	bne	3b10c <__assert_fail@plt+0x299b8>
   3b0c8:	b	3b0e4 <__assert_fail@plt+0x29990>
   3b0cc:	ldr	r0, [fp, #-12]
   3b0d0:	add	r0, r0, #0
   3b0d4:	movw	r1, #0
   3b0d8:	cmp	r1, r0
   3b0dc:	bcc	3b1d8 <__assert_fail@plt+0x29a84>
   3b0e0:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b0e4:	ldr	r0, [fp, #-12]
   3b0e8:	movw	r1, #0
   3b0ec:	cmp	r1, r0
   3b0f0:	bcs	3b1ec <__assert_fail@plt+0x29a98>
   3b0f4:	ldr	r0, [fp, #-12]
   3b0f8:	sub	r0, r0, #1
   3b0fc:	mvn	r1, #0
   3b100:	cmp	r1, r0
   3b104:	bcc	3b1d8 <__assert_fail@plt+0x29a84>
   3b108:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b10c:	ldr	r0, [fp, #-16]
   3b110:	movw	r1, #0
   3b114:	udiv	r0, r1, r0
   3b118:	ldr	r1, [fp, #-12]
   3b11c:	cmp	r0, r1
   3b120:	bcc	3b1d8 <__assert_fail@plt+0x29a84>
   3b124:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b128:	ldr	r0, [fp, #-16]
   3b12c:	cmp	r0, #0
   3b130:	bne	3b138 <__assert_fail@plt+0x299e4>
   3b134:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b138:	ldr	r0, [fp, #-12]
   3b13c:	cmp	r0, #0
   3b140:	bcs	3b1ac <__assert_fail@plt+0x29a58>
   3b144:	b	3b14c <__assert_fail@plt+0x299f8>
   3b148:	b	3b150 <__assert_fail@plt+0x299fc>
   3b14c:	b	3b190 <__assert_fail@plt+0x29a3c>
   3b150:	ldr	r0, [fp, #-12]
   3b154:	cmn	r0, #1
   3b158:	bne	3b190 <__assert_fail@plt+0x29a3c>
   3b15c:	b	3b178 <__assert_fail@plt+0x29a24>
   3b160:	ldr	r0, [fp, #-16]
   3b164:	add	r0, r0, #0
   3b168:	movw	r1, #0
   3b16c:	cmp	r1, r0
   3b170:	bcc	3b1d8 <__assert_fail@plt+0x29a84>
   3b174:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b178:	ldr	r0, [fp, #-16]
   3b17c:	sub	r0, r0, #1
   3b180:	mvn	r1, #0
   3b184:	cmp	r1, r0
   3b188:	bcc	3b1d8 <__assert_fail@plt+0x29a84>
   3b18c:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b190:	ldr	r0, [fp, #-12]
   3b194:	movw	r1, #0
   3b198:	udiv	r0, r1, r0
   3b19c:	ldr	r1, [fp, #-16]
   3b1a0:	cmp	r0, r1
   3b1a4:	bcc	3b1d8 <__assert_fail@plt+0x29a84>
   3b1a8:	b	3b1ec <__assert_fail@plt+0x29a98>
   3b1ac:	ldr	r2, [fp, #-16]
   3b1b0:	mvn	r0, #0
   3b1b4:	mov	r3, #0
   3b1b8:	str	r0, [sp, #4]
   3b1bc:	ldr	r1, [sp, #4]
   3b1c0:	bl	3bb4c <__assert_fail@plt+0x2a3f8>
   3b1c4:	ldr	r2, [fp, #-12]
   3b1c8:	subs	r0, r0, r2
   3b1cc:	sbcs	r1, r1, #0
   3b1d0:	bcs	3b1ec <__assert_fail@plt+0x29a98>
   3b1d4:	b	3b1d8 <__assert_fail@plt+0x29a84>
   3b1d8:	ldr	r0, [fp, #-12]
   3b1dc:	ldr	r1, [fp, #-16]
   3b1e0:	mul	r0, r0, r1
   3b1e4:	str	r0, [fp, #-20]	; 0xffffffec
   3b1e8:	b	3b200 <__assert_fail@plt+0x29aac>
   3b1ec:	ldr	r0, [fp, #-12]
   3b1f0:	ldr	r1, [fp, #-16]
   3b1f4:	mul	r0, r0, r1
   3b1f8:	str	r0, [fp, #-20]	; 0xffffffec
   3b1fc:	b	3b218 <__assert_fail@plt+0x29ac4>
   3b200:	bl	11628 <__errno_location@plt>
   3b204:	movw	r1, #12
   3b208:	str	r1, [r0]
   3b20c:	movw	r0, #0
   3b210:	str	r0, [fp, #-4]
   3b214:	b	3b228 <__assert_fail@plt+0x29ad4>
   3b218:	ldr	r0, [fp, #-8]
   3b21c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b220:	bl	381dc <__assert_fail@plt+0x26a88>
   3b224:	str	r0, [fp, #-4]
   3b228:	ldr	r0, [fp, #-4]
   3b22c:	mov	sp, fp
   3b230:	pop	{fp, pc}
   3b234:	svcvc	0x00ffffff
   3b238:	andhi	r0, r0, r0
   3b23c:			; <UNDEFINED> instruction: 0xffff8000
   3b240:	sub	sp, sp, #12
   3b244:	str	r0, [sp, #4]
   3b248:	ldr	r0, [sp, #4]
   3b24c:	sub	r1, r0, #48	; 0x30
   3b250:	cmp	r1, #10
   3b254:	str	r0, [sp]
   3b258:	bcc	3b288 <__assert_fail@plt+0x29b34>
   3b25c:	b	3b260 <__assert_fail@plt+0x29b0c>
   3b260:	ldr	r0, [sp]
   3b264:	sub	r1, r0, #65	; 0x41
   3b268:	cmp	r1, #26
   3b26c:	bcc	3b288 <__assert_fail@plt+0x29b34>
   3b270:	b	3b274 <__assert_fail@plt+0x29b20>
   3b274:	ldr	r0, [sp]
   3b278:	sub	r1, r0, #97	; 0x61
   3b27c:	cmp	r1, #25
   3b280:	bhi	3b298 <__assert_fail@plt+0x29b44>
   3b284:	b	3b288 <__assert_fail@plt+0x29b34>
   3b288:	movw	r0, #1
   3b28c:	and	r0, r0, #1
   3b290:	strb	r0, [sp, #11]
   3b294:	b	3b2a4 <__assert_fail@plt+0x29b50>
   3b298:	movw	r0, #0
   3b29c:	and	r0, r0, #1
   3b2a0:	strb	r0, [sp, #11]
   3b2a4:	ldrb	r0, [sp, #11]
   3b2a8:	and	r0, r0, #1
   3b2ac:	add	sp, sp, #12
   3b2b0:	bx	lr
   3b2b4:	sub	sp, sp, #12
   3b2b8:	str	r0, [sp, #4]
   3b2bc:	ldr	r0, [sp, #4]
   3b2c0:	sub	r1, r0, #65	; 0x41
   3b2c4:	cmp	r1, #26
   3b2c8:	str	r0, [sp]
   3b2cc:	bcc	3b2e8 <__assert_fail@plt+0x29b94>
   3b2d0:	b	3b2d4 <__assert_fail@plt+0x29b80>
   3b2d4:	ldr	r0, [sp]
   3b2d8:	sub	r1, r0, #97	; 0x61
   3b2dc:	cmp	r1, #25
   3b2e0:	bhi	3b2f8 <__assert_fail@plt+0x29ba4>
   3b2e4:	b	3b2e8 <__assert_fail@plt+0x29b94>
   3b2e8:	movw	r0, #1
   3b2ec:	and	r0, r0, #1
   3b2f0:	strb	r0, [sp, #11]
   3b2f4:	b	3b304 <__assert_fail@plt+0x29bb0>
   3b2f8:	movw	r0, #0
   3b2fc:	and	r0, r0, #1
   3b300:	strb	r0, [sp, #11]
   3b304:	ldrb	r0, [sp, #11]
   3b308:	and	r0, r0, #1
   3b30c:	add	sp, sp, #12
   3b310:	bx	lr
   3b314:	sub	sp, sp, #8
   3b318:	str	r0, [sp]
   3b31c:	ldr	r0, [sp]
   3b320:	cmp	r0, #127	; 0x7f
   3b324:	bhi	3b33c <__assert_fail@plt+0x29be8>
   3b328:	b	3b32c <__assert_fail@plt+0x29bd8>
   3b32c:	movw	r0, #1
   3b330:	and	r0, r0, #1
   3b334:	strb	r0, [sp, #7]
   3b338:	b	3b348 <__assert_fail@plt+0x29bf4>
   3b33c:	movw	r0, #0
   3b340:	and	r0, r0, #1
   3b344:	strb	r0, [sp, #7]
   3b348:	ldrb	r0, [sp, #7]
   3b34c:	and	r0, r0, #1
   3b350:	add	sp, sp, #8
   3b354:	bx	lr
   3b358:	sub	sp, sp, #8
   3b35c:	str	r0, [sp, #4]
   3b360:	ldr	r0, [sp, #4]
   3b364:	cmp	r0, #32
   3b368:	movw	r0, #1
   3b36c:	str	r0, [sp]
   3b370:	beq	3b388 <__assert_fail@plt+0x29c34>
   3b374:	ldr	r0, [sp, #4]
   3b378:	cmp	r0, #9
   3b37c:	movw	r0, #0
   3b380:	moveq	r0, #1
   3b384:	str	r0, [sp]
   3b388:	ldr	r0, [sp]
   3b38c:	and	r0, r0, #1
   3b390:	add	sp, sp, #8
   3b394:	bx	lr
   3b398:	sub	sp, sp, #12
   3b39c:	str	r0, [sp, #4]
   3b3a0:	ldr	r0, [sp, #4]
   3b3a4:	cmp	r0, #32
   3b3a8:	str	r0, [sp]
   3b3ac:	bcc	3b3c4 <__assert_fail@plt+0x29c70>
   3b3b0:	b	3b3b4 <__assert_fail@plt+0x29c60>
   3b3b4:	ldr	r0, [sp]
   3b3b8:	cmp	r0, #127	; 0x7f
   3b3bc:	bne	3b3d4 <__assert_fail@plt+0x29c80>
   3b3c0:	b	3b3c4 <__assert_fail@plt+0x29c70>
   3b3c4:	movw	r0, #1
   3b3c8:	and	r0, r0, #1
   3b3cc:	strb	r0, [sp, #11]
   3b3d0:	b	3b3e0 <__assert_fail@plt+0x29c8c>
   3b3d4:	movw	r0, #0
   3b3d8:	and	r0, r0, #1
   3b3dc:	strb	r0, [sp, #11]
   3b3e0:	ldrb	r0, [sp, #11]
   3b3e4:	and	r0, r0, #1
   3b3e8:	add	sp, sp, #12
   3b3ec:	bx	lr
   3b3f0:	sub	sp, sp, #8
   3b3f4:	str	r0, [sp]
   3b3f8:	ldr	r0, [sp]
   3b3fc:	sub	r0, r0, #48	; 0x30
   3b400:	cmp	r0, #9
   3b404:	bhi	3b41c <__assert_fail@plt+0x29cc8>
   3b408:	b	3b40c <__assert_fail@plt+0x29cb8>
   3b40c:	movw	r0, #1
   3b410:	and	r0, r0, #1
   3b414:	strb	r0, [sp, #7]
   3b418:	b	3b428 <__assert_fail@plt+0x29cd4>
   3b41c:	movw	r0, #0
   3b420:	and	r0, r0, #1
   3b424:	strb	r0, [sp, #7]
   3b428:	ldrb	r0, [sp, #7]
   3b42c:	and	r0, r0, #1
   3b430:	add	sp, sp, #8
   3b434:	bx	lr
   3b438:	sub	sp, sp, #8
   3b43c:	str	r0, [sp]
   3b440:	ldr	r0, [sp]
   3b444:	sub	r0, r0, #33	; 0x21
   3b448:	cmp	r0, #93	; 0x5d
   3b44c:	bhi	3b464 <__assert_fail@plt+0x29d10>
   3b450:	b	3b454 <__assert_fail@plt+0x29d00>
   3b454:	movw	r0, #1
   3b458:	and	r0, r0, #1
   3b45c:	strb	r0, [sp, #7]
   3b460:	b	3b470 <__assert_fail@plt+0x29d1c>
   3b464:	movw	r0, #0
   3b468:	and	r0, r0, #1
   3b46c:	strb	r0, [sp, #7]
   3b470:	ldrb	r0, [sp, #7]
   3b474:	and	r0, r0, #1
   3b478:	add	sp, sp, #8
   3b47c:	bx	lr
   3b480:	sub	sp, sp, #8
   3b484:	str	r0, [sp]
   3b488:	ldr	r0, [sp]
   3b48c:	sub	r0, r0, #97	; 0x61
   3b490:	cmp	r0, #25
   3b494:	bhi	3b4ac <__assert_fail@plt+0x29d58>
   3b498:	b	3b49c <__assert_fail@plt+0x29d48>
   3b49c:	movw	r0, #1
   3b4a0:	and	r0, r0, #1
   3b4a4:	strb	r0, [sp, #7]
   3b4a8:	b	3b4b8 <__assert_fail@plt+0x29d64>
   3b4ac:	movw	r0, #0
   3b4b0:	and	r0, r0, #1
   3b4b4:	strb	r0, [sp, #7]
   3b4b8:	ldrb	r0, [sp, #7]
   3b4bc:	and	r0, r0, #1
   3b4c0:	add	sp, sp, #8
   3b4c4:	bx	lr
   3b4c8:	sub	sp, sp, #8
   3b4cc:	str	r0, [sp]
   3b4d0:	ldr	r0, [sp]
   3b4d4:	sub	r0, r0, #32
   3b4d8:	cmp	r0, #94	; 0x5e
   3b4dc:	bhi	3b4f4 <__assert_fail@plt+0x29da0>
   3b4e0:	b	3b4e4 <__assert_fail@plt+0x29d90>
   3b4e4:	movw	r0, #1
   3b4e8:	and	r0, r0, #1
   3b4ec:	strb	r0, [sp, #7]
   3b4f0:	b	3b500 <__assert_fail@plt+0x29dac>
   3b4f4:	movw	r0, #0
   3b4f8:	and	r0, r0, #1
   3b4fc:	strb	r0, [sp, #7]
   3b500:	ldrb	r0, [sp, #7]
   3b504:	and	r0, r0, #1
   3b508:	add	sp, sp, #8
   3b50c:	bx	lr
   3b510:	sub	sp, sp, #12
   3b514:	str	r0, [sp, #4]
   3b518:	ldr	r0, [sp, #4]
   3b51c:	sub	r0, r0, #33	; 0x21
   3b520:	cmp	r0, #93	; 0x5d
   3b524:	str	r0, [sp]
   3b528:	bhi	3b6c4 <__assert_fail@plt+0x29f70>
   3b52c:	add	r0, pc, #8
   3b530:	ldr	r1, [sp]
   3b534:	ldr	r0, [r0, r1, lsl #2]
   3b538:	mov	pc, r0
   3b53c:			; <UNDEFINED> instruction: 0x0003b6b4
   3b540:			; <UNDEFINED> instruction: 0x0003b6b4
   3b544:			; <UNDEFINED> instruction: 0x0003b6b4
   3b548:			; <UNDEFINED> instruction: 0x0003b6b4
   3b54c:			; <UNDEFINED> instruction: 0x0003b6b4
   3b550:			; <UNDEFINED> instruction: 0x0003b6b4
   3b554:			; <UNDEFINED> instruction: 0x0003b6b4
   3b558:			; <UNDEFINED> instruction: 0x0003b6b4
   3b55c:			; <UNDEFINED> instruction: 0x0003b6b4
   3b560:			; <UNDEFINED> instruction: 0x0003b6b4
   3b564:			; <UNDEFINED> instruction: 0x0003b6b4
   3b568:			; <UNDEFINED> instruction: 0x0003b6b4
   3b56c:			; <UNDEFINED> instruction: 0x0003b6b4
   3b570:			; <UNDEFINED> instruction: 0x0003b6b4
   3b574:			; <UNDEFINED> instruction: 0x0003b6b4
   3b578:	andeq	fp, r3, r4, asr #13
   3b57c:	andeq	fp, r3, r4, asr #13
   3b580:	andeq	fp, r3, r4, asr #13
   3b584:	andeq	fp, r3, r4, asr #13
   3b588:	andeq	fp, r3, r4, asr #13
   3b58c:	andeq	fp, r3, r4, asr #13
   3b590:	andeq	fp, r3, r4, asr #13
   3b594:	andeq	fp, r3, r4, asr #13
   3b598:	andeq	fp, r3, r4, asr #13
   3b59c:	andeq	fp, r3, r4, asr #13
   3b5a0:			; <UNDEFINED> instruction: 0x0003b6b4
   3b5a4:			; <UNDEFINED> instruction: 0x0003b6b4
   3b5a8:			; <UNDEFINED> instruction: 0x0003b6b4
   3b5ac:			; <UNDEFINED> instruction: 0x0003b6b4
   3b5b0:			; <UNDEFINED> instruction: 0x0003b6b4
   3b5b4:			; <UNDEFINED> instruction: 0x0003b6b4
   3b5b8:			; <UNDEFINED> instruction: 0x0003b6b4
   3b5bc:	andeq	fp, r3, r4, asr #13
   3b5c0:	andeq	fp, r3, r4, asr #13
   3b5c4:	andeq	fp, r3, r4, asr #13
   3b5c8:	andeq	fp, r3, r4, asr #13
   3b5cc:	andeq	fp, r3, r4, asr #13
   3b5d0:	andeq	fp, r3, r4, asr #13
   3b5d4:	andeq	fp, r3, r4, asr #13
   3b5d8:	andeq	fp, r3, r4, asr #13
   3b5dc:	andeq	fp, r3, r4, asr #13
   3b5e0:	andeq	fp, r3, r4, asr #13
   3b5e4:	andeq	fp, r3, r4, asr #13
   3b5e8:	andeq	fp, r3, r4, asr #13
   3b5ec:	andeq	fp, r3, r4, asr #13
   3b5f0:	andeq	fp, r3, r4, asr #13
   3b5f4:	andeq	fp, r3, r4, asr #13
   3b5f8:	andeq	fp, r3, r4, asr #13
   3b5fc:	andeq	fp, r3, r4, asr #13
   3b600:	andeq	fp, r3, r4, asr #13
   3b604:	andeq	fp, r3, r4, asr #13
   3b608:	andeq	fp, r3, r4, asr #13
   3b60c:	andeq	fp, r3, r4, asr #13
   3b610:	andeq	fp, r3, r4, asr #13
   3b614:	andeq	fp, r3, r4, asr #13
   3b618:	andeq	fp, r3, r4, asr #13
   3b61c:	andeq	fp, r3, r4, asr #13
   3b620:	andeq	fp, r3, r4, asr #13
   3b624:			; <UNDEFINED> instruction: 0x0003b6b4
   3b628:			; <UNDEFINED> instruction: 0x0003b6b4
   3b62c:			; <UNDEFINED> instruction: 0x0003b6b4
   3b630:			; <UNDEFINED> instruction: 0x0003b6b4
   3b634:			; <UNDEFINED> instruction: 0x0003b6b4
   3b638:			; <UNDEFINED> instruction: 0x0003b6b4
   3b63c:	andeq	fp, r3, r4, asr #13
   3b640:	andeq	fp, r3, r4, asr #13
   3b644:	andeq	fp, r3, r4, asr #13
   3b648:	andeq	fp, r3, r4, asr #13
   3b64c:	andeq	fp, r3, r4, asr #13
   3b650:	andeq	fp, r3, r4, asr #13
   3b654:	andeq	fp, r3, r4, asr #13
   3b658:	andeq	fp, r3, r4, asr #13
   3b65c:	andeq	fp, r3, r4, asr #13
   3b660:	andeq	fp, r3, r4, asr #13
   3b664:	andeq	fp, r3, r4, asr #13
   3b668:	andeq	fp, r3, r4, asr #13
   3b66c:	andeq	fp, r3, r4, asr #13
   3b670:	andeq	fp, r3, r4, asr #13
   3b674:	andeq	fp, r3, r4, asr #13
   3b678:	andeq	fp, r3, r4, asr #13
   3b67c:	andeq	fp, r3, r4, asr #13
   3b680:	andeq	fp, r3, r4, asr #13
   3b684:	andeq	fp, r3, r4, asr #13
   3b688:	andeq	fp, r3, r4, asr #13
   3b68c:	andeq	fp, r3, r4, asr #13
   3b690:	andeq	fp, r3, r4, asr #13
   3b694:	andeq	fp, r3, r4, asr #13
   3b698:	andeq	fp, r3, r4, asr #13
   3b69c:	andeq	fp, r3, r4, asr #13
   3b6a0:	andeq	fp, r3, r4, asr #13
   3b6a4:			; <UNDEFINED> instruction: 0x0003b6b4
   3b6a8:			; <UNDEFINED> instruction: 0x0003b6b4
   3b6ac:			; <UNDEFINED> instruction: 0x0003b6b4
   3b6b0:			; <UNDEFINED> instruction: 0x0003b6b4
   3b6b4:	movw	r0, #1
   3b6b8:	and	r0, r0, #1
   3b6bc:	strb	r0, [sp, #11]
   3b6c0:	b	3b6d0 <__assert_fail@plt+0x29f7c>
   3b6c4:	movw	r0, #0
   3b6c8:	and	r0, r0, #1
   3b6cc:	strb	r0, [sp, #11]
   3b6d0:	ldrb	r0, [sp, #11]
   3b6d4:	and	r0, r0, #1
   3b6d8:	add	sp, sp, #12
   3b6dc:	bx	lr
   3b6e0:	sub	sp, sp, #12
   3b6e4:	str	r0, [sp, #4]
   3b6e8:	ldr	r0, [sp, #4]
   3b6ec:	sub	r1, r0, #9
   3b6f0:	cmp	r1, #5
   3b6f4:	str	r0, [sp]
   3b6f8:	bcc	3b710 <__assert_fail@plt+0x29fbc>
   3b6fc:	b	3b700 <__assert_fail@plt+0x29fac>
   3b700:	ldr	r0, [sp]
   3b704:	cmp	r0, #32
   3b708:	bne	3b720 <__assert_fail@plt+0x29fcc>
   3b70c:	b	3b710 <__assert_fail@plt+0x29fbc>
   3b710:	movw	r0, #1
   3b714:	and	r0, r0, #1
   3b718:	strb	r0, [sp, #11]
   3b71c:	b	3b72c <__assert_fail@plt+0x29fd8>
   3b720:	movw	r0, #0
   3b724:	and	r0, r0, #1
   3b728:	strb	r0, [sp, #11]
   3b72c:	ldrb	r0, [sp, #11]
   3b730:	and	r0, r0, #1
   3b734:	add	sp, sp, #12
   3b738:	bx	lr
   3b73c:	sub	sp, sp, #8
   3b740:	str	r0, [sp]
   3b744:	ldr	r0, [sp]
   3b748:	sub	r0, r0, #65	; 0x41
   3b74c:	cmp	r0, #25
   3b750:	bhi	3b768 <__assert_fail@plt+0x2a014>
   3b754:	b	3b758 <__assert_fail@plt+0x2a004>
   3b758:	movw	r0, #1
   3b75c:	and	r0, r0, #1
   3b760:	strb	r0, [sp, #7]
   3b764:	b	3b774 <__assert_fail@plt+0x2a020>
   3b768:	movw	r0, #0
   3b76c:	and	r0, r0, #1
   3b770:	strb	r0, [sp, #7]
   3b774:	ldrb	r0, [sp, #7]
   3b778:	and	r0, r0, #1
   3b77c:	add	sp, sp, #8
   3b780:	bx	lr
   3b784:	sub	sp, sp, #12
   3b788:	str	r0, [sp, #4]
   3b78c:	ldr	r0, [sp, #4]
   3b790:	sub	r1, r0, #48	; 0x30
   3b794:	cmp	r1, #10
   3b798:	str	r0, [sp]
   3b79c:	bcc	3b7cc <__assert_fail@plt+0x2a078>
   3b7a0:	b	3b7a4 <__assert_fail@plt+0x2a050>
   3b7a4:	ldr	r0, [sp]
   3b7a8:	sub	r1, r0, #65	; 0x41
   3b7ac:	cmp	r1, #6
   3b7b0:	bcc	3b7cc <__assert_fail@plt+0x2a078>
   3b7b4:	b	3b7b8 <__assert_fail@plt+0x2a064>
   3b7b8:	ldr	r0, [sp]
   3b7bc:	sub	r1, r0, #97	; 0x61
   3b7c0:	cmp	r1, #5
   3b7c4:	bhi	3b7dc <__assert_fail@plt+0x2a088>
   3b7c8:	b	3b7cc <__assert_fail@plt+0x2a078>
   3b7cc:	movw	r0, #1
   3b7d0:	and	r0, r0, #1
   3b7d4:	strb	r0, [sp, #11]
   3b7d8:	b	3b7e8 <__assert_fail@plt+0x2a094>
   3b7dc:	movw	r0, #0
   3b7e0:	and	r0, r0, #1
   3b7e4:	strb	r0, [sp, #11]
   3b7e8:	ldrb	r0, [sp, #11]
   3b7ec:	and	r0, r0, #1
   3b7f0:	add	sp, sp, #12
   3b7f4:	bx	lr
   3b7f8:	sub	sp, sp, #8
   3b7fc:	str	r0, [sp]
   3b800:	ldr	r0, [sp]
   3b804:	sub	r0, r0, #65	; 0x41
   3b808:	cmp	r0, #25
   3b80c:	bhi	3b828 <__assert_fail@plt+0x2a0d4>
   3b810:	b	3b814 <__assert_fail@plt+0x2a0c0>
   3b814:	ldr	r0, [sp]
   3b818:	sub	r0, r0, #65	; 0x41
   3b81c:	add	r0, r0, #97	; 0x61
   3b820:	str	r0, [sp, #4]
   3b824:	b	3b830 <__assert_fail@plt+0x2a0dc>
   3b828:	ldr	r0, [sp]
   3b82c:	str	r0, [sp, #4]
   3b830:	ldr	r0, [sp, #4]
   3b834:	add	sp, sp, #8
   3b838:	bx	lr
   3b83c:	sub	sp, sp, #8
   3b840:	str	r0, [sp]
   3b844:	ldr	r0, [sp]
   3b848:	sub	r0, r0, #97	; 0x61
   3b84c:	cmp	r0, #25
   3b850:	bhi	3b86c <__assert_fail@plt+0x2a118>
   3b854:	b	3b858 <__assert_fail@plt+0x2a104>
   3b858:	ldr	r0, [sp]
   3b85c:	sub	r0, r0, #97	; 0x61
   3b860:	add	r0, r0, #65	; 0x41
   3b864:	str	r0, [sp, #4]
   3b868:	b	3b874 <__assert_fail@plt+0x2a120>
   3b86c:	ldr	r0, [sp]
   3b870:	str	r0, [sp, #4]
   3b874:	ldr	r0, [sp, #4]
   3b878:	add	sp, sp, #8
   3b87c:	bx	lr
   3b880:	push	{r4, r5, fp, lr}
   3b884:	add	fp, sp, #8
   3b888:	sub	sp, sp, #272	; 0x110
   3b88c:	add	r1, sp, #7
   3b890:	str	r0, [fp, #-16]
   3b894:	ldr	r0, [fp, #-16]
   3b898:	movw	r2, #257	; 0x101
   3b89c:	bl	3b91c <__assert_fail@plt+0x2a1c8>
   3b8a0:	cmp	r0, #0
   3b8a4:	beq	3b8b8 <__assert_fail@plt+0x2a164>
   3b8a8:	movw	r0, #0
   3b8ac:	and	r0, r0, #1
   3b8b0:	strb	r0, [fp, #-9]
   3b8b4:	b	3b90c <__assert_fail@plt+0x2a1b8>
   3b8b8:	add	r0, sp, #7
   3b8bc:	movw	r1, #53356	; 0xd06c
   3b8c0:	movt	r1, #3
   3b8c4:	bl	11400 <strcmp@plt>
   3b8c8:	cmp	r0, #0
   3b8cc:	movw	r0, #1
   3b8d0:	str	r0, [sp]
   3b8d4:	beq	3b8f8 <__assert_fail@plt+0x2a1a4>
   3b8d8:	add	r0, sp, #7
   3b8dc:	movw	r1, #53358	; 0xd06e
   3b8e0:	movt	r1, #3
   3b8e4:	bl	11400 <strcmp@plt>
   3b8e8:	cmp	r0, #0
   3b8ec:	movw	r0, #0
   3b8f0:	moveq	r0, #1
   3b8f4:	str	r0, [sp]
   3b8f8:	ldr	r0, [sp]
   3b8fc:	mvn	r1, #0
   3b900:	eor	r0, r0, r1
   3b904:	and	r0, r0, #1
   3b908:	strb	r0, [fp, #-9]
   3b90c:	ldrb	r0, [fp, #-9]
   3b910:	and	r0, r0, #1
   3b914:	sub	sp, fp, #8
   3b918:	pop	{r4, r5, fp, pc}
   3b91c:	push	{fp, lr}
   3b920:	mov	fp, sp
   3b924:	sub	sp, sp, #16
   3b928:	str	r0, [fp, #-4]
   3b92c:	str	r1, [sp, #8]
   3b930:	str	r2, [sp, #4]
   3b934:	ldr	r0, [fp, #-4]
   3b938:	ldr	r1, [sp, #8]
   3b93c:	ldr	r2, [sp, #4]
   3b940:	bl	3b94c <__assert_fail@plt+0x2a1f8>
   3b944:	mov	sp, fp
   3b948:	pop	{fp, pc}
   3b94c:	push	{fp, lr}
   3b950:	mov	fp, sp
   3b954:	sub	sp, sp, #24
   3b958:	str	r0, [fp, #-8]
   3b95c:	str	r1, [sp, #12]
   3b960:	str	r2, [sp, #8]
   3b964:	ldr	r0, [fp, #-8]
   3b968:	bl	3ba4c <__assert_fail@plt+0x2a2f8>
   3b96c:	str	r0, [sp, #4]
   3b970:	ldr	r0, [sp, #4]
   3b974:	movw	r1, #0
   3b978:	cmp	r0, r1
   3b97c:	bne	3b9a4 <__assert_fail@plt+0x2a250>
   3b980:	ldr	r0, [sp, #8]
   3b984:	cmp	r0, #0
   3b988:	bls	3b998 <__assert_fail@plt+0x2a244>
   3b98c:	ldr	r0, [sp, #12]
   3b990:	movw	r1, #0
   3b994:	strb	r1, [r0]
   3b998:	movw	r0, #22
   3b99c:	str	r0, [fp, #-4]
   3b9a0:	b	3ba20 <__assert_fail@plt+0x2a2cc>
   3b9a4:	ldr	r0, [sp, #4]
   3b9a8:	bl	11604 <strlen@plt>
   3b9ac:	str	r0, [sp]
   3b9b0:	ldr	r0, [sp]
   3b9b4:	ldr	r1, [sp, #8]
   3b9b8:	cmp	r0, r1
   3b9bc:	bcs	3b9e0 <__assert_fail@plt+0x2a28c>
   3b9c0:	ldr	r0, [sp, #12]
   3b9c4:	ldr	r1, [sp, #4]
   3b9c8:	ldr	r2, [sp]
   3b9cc:	add	r2, r2, #1
   3b9d0:	bl	11478 <memcpy@plt>
   3b9d4:	movw	r0, #0
   3b9d8:	str	r0, [fp, #-4]
   3b9dc:	b	3ba20 <__assert_fail@plt+0x2a2cc>
   3b9e0:	ldr	r0, [sp, #8]
   3b9e4:	cmp	r0, #0
   3b9e8:	bls	3ba18 <__assert_fail@plt+0x2a2c4>
   3b9ec:	ldr	r0, [sp, #12]
   3b9f0:	ldr	r1, [sp, #4]
   3b9f4:	ldr	r2, [sp, #8]
   3b9f8:	sub	r2, r2, #1
   3b9fc:	bl	11478 <memcpy@plt>
   3ba00:	ldr	r0, [sp, #12]
   3ba04:	ldr	r1, [sp, #8]
   3ba08:	sub	r1, r1, #1
   3ba0c:	add	r0, r0, r1
   3ba10:	movw	r1, #0
   3ba14:	strb	r1, [r0]
   3ba18:	movw	r0, #34	; 0x22
   3ba1c:	str	r0, [fp, #-4]
   3ba20:	ldr	r0, [fp, #-4]
   3ba24:	mov	sp, fp
   3ba28:	pop	{fp, pc}
   3ba2c:	push	{fp, lr}
   3ba30:	mov	fp, sp
   3ba34:	sub	sp, sp, #8
   3ba38:	str	r0, [sp, #4]
   3ba3c:	ldr	r0, [sp, #4]
   3ba40:	bl	3ba4c <__assert_fail@plt+0x2a2f8>
   3ba44:	mov	sp, fp
   3ba48:	pop	{fp, pc}
   3ba4c:	push	{fp, lr}
   3ba50:	mov	fp, sp
   3ba54:	sub	sp, sp, #8
   3ba58:	str	r0, [sp, #4]
   3ba5c:	ldr	r0, [sp, #4]
   3ba60:	movw	r1, #0
   3ba64:	bl	116b8 <setlocale@plt>
   3ba68:	str	r0, [sp]
   3ba6c:	ldr	r0, [sp]
   3ba70:	mov	sp, fp
   3ba74:	pop	{fp, pc}
   3ba78:	cmp	r3, #0
   3ba7c:	cmpeq	r2, #0
   3ba80:	bne	3baa4 <__assert_fail@plt+0x2a350>
   3ba84:	cmp	r1, #0
   3ba88:	movlt	r1, #-2147483648	; 0x80000000
   3ba8c:	movlt	r0, #0
   3ba90:	blt	3baa0 <__assert_fail@plt+0x2a34c>
   3ba94:	cmpeq	r0, #0
   3ba98:	mvnne	r1, #-2147483648	; 0x80000000
   3ba9c:	mvnne	r0, #0
   3baa0:	b	3bb88 <__assert_fail@plt+0x2a434>
   3baa4:	sub	sp, sp, #8
   3baa8:	push	{sp, lr}
   3baac:	cmp	r1, #0
   3bab0:	blt	3bad0 <__assert_fail@plt+0x2a37c>
   3bab4:	cmp	r3, #0
   3bab8:	blt	3bb04 <__assert_fail@plt+0x2a3b0>
   3babc:	bl	3bb98 <__assert_fail@plt+0x2a444>
   3bac0:	ldr	lr, [sp, #4]
   3bac4:	add	sp, sp, #8
   3bac8:	pop	{r2, r3}
   3bacc:	bx	lr
   3bad0:	rsbs	r0, r0, #0
   3bad4:	sbc	r1, r1, r1, lsl #1
   3bad8:	cmp	r3, #0
   3badc:	blt	3bb28 <__assert_fail@plt+0x2a3d4>
   3bae0:	bl	3bb98 <__assert_fail@plt+0x2a444>
   3bae4:	ldr	lr, [sp, #4]
   3bae8:	add	sp, sp, #8
   3baec:	pop	{r2, r3}
   3baf0:	rsbs	r0, r0, #0
   3baf4:	sbc	r1, r1, r1, lsl #1
   3baf8:	rsbs	r2, r2, #0
   3bafc:	sbc	r3, r3, r3, lsl #1
   3bb00:	bx	lr
   3bb04:	rsbs	r2, r2, #0
   3bb08:	sbc	r3, r3, r3, lsl #1
   3bb0c:	bl	3bb98 <__assert_fail@plt+0x2a444>
   3bb10:	ldr	lr, [sp, #4]
   3bb14:	add	sp, sp, #8
   3bb18:	pop	{r2, r3}
   3bb1c:	rsbs	r0, r0, #0
   3bb20:	sbc	r1, r1, r1, lsl #1
   3bb24:	bx	lr
   3bb28:	rsbs	r2, r2, #0
   3bb2c:	sbc	r3, r3, r3, lsl #1
   3bb30:	bl	3bb98 <__assert_fail@plt+0x2a444>
   3bb34:	ldr	lr, [sp, #4]
   3bb38:	add	sp, sp, #8
   3bb3c:	pop	{r2, r3}
   3bb40:	rsbs	r2, r2, #0
   3bb44:	sbc	r3, r3, r3, lsl #1
   3bb48:	bx	lr
   3bb4c:	cmp	r3, #0
   3bb50:	cmpeq	r2, #0
   3bb54:	bne	3bb6c <__assert_fail@plt+0x2a418>
   3bb58:	cmp	r1, #0
   3bb5c:	cmpeq	r0, #0
   3bb60:	mvnne	r1, #0
   3bb64:	mvnne	r0, #0
   3bb68:	b	3bb88 <__assert_fail@plt+0x2a434>
   3bb6c:	sub	sp, sp, #8
   3bb70:	push	{sp, lr}
   3bb74:	bl	3bb98 <__assert_fail@plt+0x2a444>
   3bb78:	ldr	lr, [sp, #4]
   3bb7c:	add	sp, sp, #8
   3bb80:	pop	{r2, r3}
   3bb84:	bx	lr
   3bb88:	push	{r1, lr}
   3bb8c:	mov	r0, #8
   3bb90:	bl	113dc <raise@plt>
   3bb94:	pop	{r1, pc}
   3bb98:	cmp	r1, r3
   3bb9c:	cmpeq	r0, r2
   3bba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bba4:	mov	r4, r0
   3bba8:	movcc	r0, #0
   3bbac:	mov	r5, r1
   3bbb0:	ldr	lr, [sp, #36]	; 0x24
   3bbb4:	movcc	r1, r0
   3bbb8:	bcc	3bcb4 <__assert_fail@plt+0x2a560>
   3bbbc:	cmp	r3, #0
   3bbc0:	clzeq	ip, r2
   3bbc4:	clzne	ip, r3
   3bbc8:	addeq	ip, ip, #32
   3bbcc:	cmp	r5, #0
   3bbd0:	clzeq	r1, r4
   3bbd4:	addeq	r1, r1, #32
   3bbd8:	clzne	r1, r5
   3bbdc:	sub	ip, ip, r1
   3bbe0:	sub	sl, ip, #32
   3bbe4:	lsl	r9, r3, ip
   3bbe8:	rsb	fp, ip, #32
   3bbec:	orr	r9, r9, r2, lsl sl
   3bbf0:	orr	r9, r9, r2, lsr fp
   3bbf4:	lsl	r8, r2, ip
   3bbf8:	cmp	r5, r9
   3bbfc:	cmpeq	r4, r8
   3bc00:	movcc	r0, #0
   3bc04:	movcc	r1, r0
   3bc08:	bcc	3bc24 <__assert_fail@plt+0x2a4d0>
   3bc0c:	mov	r0, #1
   3bc10:	subs	r4, r4, r8
   3bc14:	lsl	r1, r0, sl
   3bc18:	orr	r1, r1, r0, lsr fp
   3bc1c:	lsl	r0, r0, ip
   3bc20:	sbc	r5, r5, r9
   3bc24:	cmp	ip, #0
   3bc28:	beq	3bcb4 <__assert_fail@plt+0x2a560>
   3bc2c:	lsr	r6, r8, #1
   3bc30:	orr	r6, r6, r9, lsl #31
   3bc34:	lsr	r7, r9, #1
   3bc38:	mov	r2, ip
   3bc3c:	b	3bc60 <__assert_fail@plt+0x2a50c>
   3bc40:	subs	r3, r4, r6
   3bc44:	sbc	r8, r5, r7
   3bc48:	adds	r3, r3, r3
   3bc4c:	adc	r8, r8, r8
   3bc50:	adds	r4, r3, #1
   3bc54:	adc	r5, r8, #0
   3bc58:	subs	r2, r2, #1
   3bc5c:	beq	3bc7c <__assert_fail@plt+0x2a528>
   3bc60:	cmp	r5, r7
   3bc64:	cmpeq	r4, r6
   3bc68:	bcs	3bc40 <__assert_fail@plt+0x2a4ec>
   3bc6c:	adds	r4, r4, r4
   3bc70:	adc	r5, r5, r5
   3bc74:	subs	r2, r2, #1
   3bc78:	bne	3bc60 <__assert_fail@plt+0x2a50c>
   3bc7c:	lsr	r3, r4, ip
   3bc80:	orr	r3, r3, r5, lsl fp
   3bc84:	lsr	r2, r5, ip
   3bc88:	orr	r3, r3, r5, lsr sl
   3bc8c:	adds	r0, r0, r4
   3bc90:	mov	r4, r3
   3bc94:	lsl	r3, r2, ip
   3bc98:	orr	r3, r3, r4, lsl sl
   3bc9c:	lsl	ip, r4, ip
   3bca0:	orr	r3, r3, r4, lsr fp
   3bca4:	adc	r1, r1, r5
   3bca8:	subs	r0, r0, ip
   3bcac:	mov	r5, r2
   3bcb0:	sbc	r1, r1, r3
   3bcb4:	cmp	lr, #0
   3bcb8:	strdne	r4, [lr]
   3bcbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3bcc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3bcc4:	mov	r7, r0
   3bcc8:	ldr	r6, [pc, #72]	; 3bd18 <__assert_fail@plt+0x2a5c4>
   3bccc:	ldr	r5, [pc, #72]	; 3bd1c <__assert_fail@plt+0x2a5c8>
   3bcd0:	add	r6, pc, r6
   3bcd4:	add	r5, pc, r5
   3bcd8:	sub	r6, r6, r5
   3bcdc:	mov	r8, r1
   3bce0:	mov	r9, r2
   3bce4:	bl	11380 <pthread_mutex_unlock@plt-0x20>
   3bce8:	asrs	r6, r6, #2
   3bcec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3bcf0:	mov	r4, #0
   3bcf4:	add	r4, r4, #1
   3bcf8:	ldr	r3, [r5], #4
   3bcfc:	mov	r2, r9
   3bd00:	mov	r1, r8
   3bd04:	mov	r0, r7
   3bd08:	blx	r3
   3bd0c:	cmp	r6, r4
   3bd10:	bne	3bcf4 <__assert_fail@plt+0x2a5a0>
   3bd14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3bd18:	andeq	r2, r1, r4, lsr r2
   3bd1c:	andeq	r2, r1, ip, lsr #4
   3bd20:	bx	lr
   3bd24:	ldr	r3, [pc, #12]	; 3bd38 <__assert_fail@plt+0x2a5e4>
   3bd28:	mov	r1, #0
   3bd2c:	add	r3, pc, r3
   3bd30:	ldr	r2, [r3]
   3bd34:	b	1164c <__cxa_atexit@plt>
   3bd38:	andeq	r2, r1, r0, lsr #8

Disassembly of section .fini:

0003bd3c <.fini>:
   3bd3c:	push	{r3, lr}
   3bd40:	pop	{r3, pc}
