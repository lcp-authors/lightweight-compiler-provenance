
../repos/tbeu-matio-3dd266d/test/test_snprintf:     file format elf32-littlearm


Disassembly of section .init:

00010424 <.init>:
   10424:	push	{r3, lr}
   10428:	bl	104fc <abort@plt+0x4c>
   1042c:	pop	{r3, pc}

Disassembly of section .plt:

00010430 <strcmp@plt-0x14>:
   10430:	push	{lr}		; (str lr, [sp, #-4]!)
   10434:	ldr	lr, [pc, #4]	; 10440 <strcmp@plt-0x4>
   10438:	add	lr, pc, lr
   1043c:	ldr	pc, [lr, #8]!
   10440:	andeq	r0, r1, r0, asr #23

00010444 <strcmp@plt>:
   10444:	add	ip, pc, #0, 12
   10448:	add	ip, ip, #16, 20	; 0x10000
   1044c:	ldr	pc, [ip, #3008]!	; 0xbc0

00010450 <printf@plt>:
   10450:	add	ip, pc, #0, 12
   10454:	add	ip, ip, #16, 20	; 0x10000
   10458:	ldr	pc, [ip, #3000]!	; 0xbb8

0001045c <memcpy@plt>:
   1045c:	add	ip, pc, #0, 12
   10460:	add	ip, ip, #16, 20	; 0x10000
   10464:	ldr	pc, [ip, #2992]!	; 0xbb0

00010468 <pow@plt>:
   10468:	add	ip, pc, #0, 12
   1046c:	add	ip, ip, #16, 20	; 0x10000
   10470:	ldr	pc, [ip, #2984]!	; 0xba8

00010474 <puts@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #16, 20	; 0x10000
   1047c:	ldr	pc, [ip, #2976]!	; 0xba0

00010480 <__libc_start_main@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #16, 20	; 0x10000
   10488:	ldr	pc, [ip, #2968]!	; 0xb98

0001048c <__gmon_start__@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #16, 20	; 0x10000
   10494:	ldr	pc, [ip, #2960]!	; 0xb90

00010498 <snprintf@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2952]!	; 0xb88

000104a4 <sprintf@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2944]!	; 0xb80

000104b0 <abort@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2936]!	; 0xb78

Disassembly of section .text:

000104c0 <.text>:
   104c0:	mov	fp, #0
   104c4:	mov	lr, #0
   104c8:	pop	{r1}		; (ldr r1, [sp], #4)
   104cc:	mov	r2, sp
   104d0:	push	{r2}		; (str r2, [sp, #-4]!)
   104d4:	push	{r0}		; (str r0, [sp, #-4]!)
   104d8:	ldr	ip, [pc, #16]	; 104f0 <abort@plt+0x40>
   104dc:	push	{ip}		; (str ip, [sp, #-4]!)
   104e0:	ldr	r0, [pc, #12]	; 104f4 <abort@plt+0x44>
   104e4:	ldr	r3, [pc, #12]	; 104f8 <abort@plt+0x48>
   104e8:	bl	10480 <__libc_start_main@plt>
   104ec:	bl	104b0 <abort@plt>
   104f0:	muleq	r1, r8, sl
   104f4:	andeq	r0, r1, r8, ror #11
   104f8:	andeq	r0, r1, r8, lsr sl
   104fc:	ldr	r3, [pc, #20]	; 10518 <abort@plt+0x68>
   10500:	ldr	r2, [pc, #20]	; 1051c <abort@plt+0x6c>
   10504:	add	r3, pc, r3
   10508:	ldr	r2, [r3, r2]
   1050c:	cmp	r2, #0
   10510:	bxeq	lr
   10514:	b	1048c <__gmon_start__@plt>
   10518:	strdeq	r0, [r1], -r4
   1051c:	andeq	r0, r0, r4, lsr r0
   10520:	ldr	r3, [pc, #28]	; 10544 <abort@plt+0x94>
   10524:	ldr	r0, [pc, #28]	; 10548 <abort@plt+0x98>
   10528:	sub	r3, r3, r0
   1052c:	cmp	r3, #6
   10530:	bxls	lr
   10534:	ldr	r3, [pc, #16]	; 1054c <abort@plt+0x9c>
   10538:	cmp	r3, #0
   1053c:	bxeq	lr
   10540:	bx	r3
   10544:	andeq	r1, r2, r3, asr #32
   10548:	andeq	r1, r2, r0, asr #32
   1054c:	andeq	r0, r0, r0
   10550:	ldr	r1, [pc, #36]	; 1057c <abort@plt+0xcc>
   10554:	ldr	r0, [pc, #36]	; 10580 <abort@plt+0xd0>
   10558:	sub	r1, r1, r0
   1055c:	asr	r1, r1, #2
   10560:	add	r1, r1, r1, lsr #31
   10564:	asrs	r1, r1, #1
   10568:	bxeq	lr
   1056c:	ldr	r3, [pc, #16]	; 10584 <abort@plt+0xd4>
   10570:	cmp	r3, #0
   10574:	bxeq	lr
   10578:	bx	r3
   1057c:	andeq	r1, r2, r0, asr #32
   10580:	andeq	r1, r2, r0, asr #32
   10584:	andeq	r0, r0, r0
   10588:	push	{r4, lr}
   1058c:	ldr	r4, [pc, #24]	; 105ac <abort@plt+0xfc>
   10590:	ldrb	r3, [r4]
   10594:	cmp	r3, #0
   10598:	popne	{r4, pc}
   1059c:	bl	10520 <abort@plt+0x70>
   105a0:	mov	r3, #1
   105a4:	strb	r3, [r4]
   105a8:	pop	{r4, pc}
   105ac:	andeq	r1, r2, r0, asr #32
   105b0:	ldr	r0, [pc, #40]	; 105e0 <abort@plt+0x130>
   105b4:	ldr	r3, [r0]
   105b8:	cmp	r3, #0
   105bc:	bne	105c4 <abort@plt+0x114>
   105c0:	b	10550 <abort@plt+0xa0>
   105c4:	ldr	r3, [pc, #24]	; 105e4 <abort@plt+0x134>
   105c8:	cmp	r3, #0
   105cc:	beq	105c0 <abort@plt+0x110>
   105d0:	push	{r4, lr}
   105d4:	blx	r3
   105d8:	pop	{r4, lr}
   105dc:	b	10550 <abort@plt+0xa0>
   105e0:	andeq	r0, r2, ip, lsl #30
   105e4:	andeq	r0, r0, r0
   105e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   105ec:	vpush	{d8-d10}
   105f0:	sub	sp, sp, #2368	; 0x940
   105f4:	sub	sp, sp, #4
   105f8:	ldr	r4, [pc, #1048]	; 10a18 <abort@plt+0x568>
   105fc:	add	ip, sp, #256	; 0x100
   10600:	mov	lr, r4
   10604:	ldm	lr!, {r0, r1, r2, r3}
   10608:	stmia	ip!, {r0, r1, r2, r3}
   1060c:	ldm	lr!, {r0, r1, r2, r3}
   10610:	stmia	ip!, {r0, r1, r2, r3}
   10614:	ldm	lr!, {r0, r1, r2, r3}
   10618:	stmia	ip!, {r0, r1, r2, r3}
   1061c:	ldm	lr, {r0, r1, r2, r3}
   10620:	stm	ip, {r0, r1, r2, r3}
   10624:	mov	r2, #112	; 0x70
   10628:	add	r1, r4, #64	; 0x40
   1062c:	add	r0, sp, #144	; 0x90
   10630:	bl	1045c <memcpy@plt>
   10634:	add	ip, sp, #100	; 0x64
   10638:	add	lr, r4, #176	; 0xb0
   1063c:	ldm	lr!, {r0, r1, r2, r3}
   10640:	stmia	ip!, {r0, r1, r2, r3}
   10644:	ldm	lr!, {r0, r1, r2, r3}
   10648:	stmia	ip!, {r0, r1, r2, r3}
   1064c:	ldm	lr, {r0, r1, r2}
   10650:	stm	ip, {r0, r1, r2}
   10654:	add	ip, sp, #76	; 0x4c
   10658:	add	lr, r4, #220	; 0xdc
   1065c:	ldm	lr!, {r0, r1, r2, r3}
   10660:	stmia	ip!, {r0, r1, r2, r3}
   10664:	ldm	lr, {r0, r1}
   10668:	stm	ip, {r0, r1}
   1066c:	add	ip, sp, #32
   10670:	add	lr, r4, #244	; 0xf4
   10674:	ldm	lr!, {r0, r1, r2, r3}
   10678:	stmia	ip!, {r0, r1, r2, r3}
   1067c:	ldm	lr!, {r0, r1, r2, r3}
   10680:	stmia	ip!, {r0, r1, r2, r3}
   10684:	ldm	lr, {r0, r1, r2}
   10688:	stm	ip, {r0, r1, r2}
   1068c:	add	lr, sp, #12
   10690:	add	ip, r4, #288	; 0x120
   10694:	ldm	ip!, {r0, r1, r2, r3}
   10698:	stmia	lr!, {r0, r1, r2, r3}
   1069c:	ldr	r3, [ip]
   106a0:	str	r3, [lr]
   106a4:	ldr	r0, [pc, #880]	; 10a1c <abort@plt+0x56c>
   106a8:	bl	10474 <puts@plt>
   106ac:	ldr	r4, [sp, #256]	; 0x100
   106b0:	cmp	r4, #0
   106b4:	beq	1079c <abort@plt+0x2ec>
   106b8:	add	fp, sp, #256	; 0x100
   106bc:	mov	r5, #0
   106c0:	mov	r8, r5
   106c4:	vldr	d9, [pc, #820]	; 10a00 <abort@plt+0x550>
   106c8:	b	10780 <abort@plt+0x2d0>
   106cc:	add	r3, sp, #320	; 0x140
   106d0:	add	r2, sp, #1344	; 0x540
   106d4:	mov	r1, r4
   106d8:	ldr	r0, [pc, #832]	; 10a20 <abort@plt+0x570>
   106dc:	bl	10450 <printf@plt>
   106e0:	add	r8, r8, #1
   106e4:	b	10750 <abort@plt+0x2a0>
   106e8:	add	r5, r5, #1
   106ec:	vldmia	r9!, {d8}
   106f0:	vcmp.f64	d8, d9
   106f4:	vmrs	APSR_nzcv, fpscr
   106f8:	beq	10774 <abort@plt+0x2c4>
   106fc:	vstr	d8, [sp]
   10700:	mov	r2, r4
   10704:	mov	r1, #0
   10708:	mov	r0, r1
   1070c:	bl	10498 <snprintf@plt>
   10710:	mov	r6, r0
   10714:	vstr	d8, [sp]
   10718:	mov	r2, r4
   1071c:	mov	r1, sl
   10720:	add	r0, sp, #1344	; 0x540
   10724:	bl	10498 <snprintf@plt>
   10728:	mov	r7, r0
   1072c:	vmov	r2, r3, d8
   10730:	mov	r1, r4
   10734:	add	r0, sp, #320	; 0x140
   10738:	bl	104a4 <sprintf@plt>
   1073c:	add	r1, sp, #320	; 0x140
   10740:	add	r0, sp, #1344	; 0x540
   10744:	bl	10444 <strcmp@plt>
   10748:	cmp	r0, #0
   1074c:	bne	106cc <abort@plt+0x21c>
   10750:	cmp	r6, r7
   10754:	beq	106e8 <abort@plt+0x238>
   10758:	mov	r3, r4
   1075c:	mov	r2, r7
   10760:	mov	r1, r6
   10764:	ldr	r0, [pc, #696]	; 10a24 <abort@plt+0x574>
   10768:	bl	10450 <printf@plt>
   1076c:	add	r8, r8, #1
   10770:	b	106e8 <abort@plt+0x238>
   10774:	ldr	r4, [fp, #4]!
   10778:	cmp	r4, #0
   1077c:	beq	107a4 <abort@plt+0x2f4>
   10780:	vldr	d8, [sp, #144]	; 0x90
   10784:	vcmp.f64	d8, d9
   10788:	vmrs	APSR_nzcv, fpscr
   1078c:	beq	10774 <abort@plt+0x2c4>
   10790:	add	r9, sp, #152	; 0x98
   10794:	mov	sl, #1024	; 0x400
   10798:	b	106fc <abort@plt+0x24c>
   1079c:	mov	r5, #0
   107a0:	mov	r8, r5
   107a4:	ldr	r6, [sp, #100]	; 0x64
   107a8:	cmp	r6, #0
   107ac:	beq	1087c <abort@plt+0x3cc>
   107b0:	add	fp, sp, #100	; 0x64
   107b4:	b	10868 <abort@plt+0x3b8>
   107b8:	add	r3, sp, #320	; 0x140
   107bc:	add	r2, sp, #1344	; 0x540
   107c0:	mov	r1, r6
   107c4:	ldr	r0, [pc, #596]	; 10a20 <abort@plt+0x570>
   107c8:	bl	10450 <printf@plt>
   107cc:	add	r8, r8, #1
   107d0:	b	10838 <abort@plt+0x388>
   107d4:	add	r5, r5, #1
   107d8:	ldr	r4, [sl], #4
   107dc:	cmp	r4, #0
   107e0:	beq	1085c <abort@plt+0x3ac>
   107e4:	mov	r3, r4
   107e8:	mov	r2, r6
   107ec:	mov	r1, #0
   107f0:	mov	r0, r1
   107f4:	bl	10498 <snprintf@plt>
   107f8:	mov	r7, r0
   107fc:	mov	r3, r4
   10800:	mov	r2, r6
   10804:	mov	r1, #1024	; 0x400
   10808:	add	r0, sp, #1344	; 0x540
   1080c:	bl	10498 <snprintf@plt>
   10810:	mov	r9, r0
   10814:	mov	r2, r4
   10818:	mov	r1, r6
   1081c:	add	r0, sp, #320	; 0x140
   10820:	bl	104a4 <sprintf@plt>
   10824:	add	r1, sp, #320	; 0x140
   10828:	add	r0, sp, #1344	; 0x540
   1082c:	bl	10444 <strcmp@plt>
   10830:	cmp	r0, #0
   10834:	bne	107b8 <abort@plt+0x308>
   10838:	cmp	r7, r9
   1083c:	beq	107d4 <abort@plt+0x324>
   10840:	mov	r3, r6
   10844:	mov	r2, r9
   10848:	mov	r1, r7
   1084c:	ldr	r0, [pc, #464]	; 10a24 <abort@plt+0x574>
   10850:	bl	10450 <printf@plt>
   10854:	add	r8, r8, #1
   10858:	b	107d4 <abort@plt+0x324>
   1085c:	ldr	r6, [fp, #4]!
   10860:	cmp	r6, #0
   10864:	beq	1087c <abort@plt+0x3cc>
   10868:	ldr	r4, [sp, #76]	; 0x4c
   1086c:	cmp	r4, #0
   10870:	addne	sl, sp, #80	; 0x50
   10874:	bne	107e4 <abort@plt+0x334>
   10878:	b	1085c <abort@plt+0x3ac>
   1087c:	ldr	r6, [sp, #32]
   10880:	cmp	r6, #0
   10884:	beq	10954 <abort@plt+0x4a4>
   10888:	add	fp, sp, #32
   1088c:	b	10940 <abort@plt+0x490>
   10890:	add	r3, sp, #320	; 0x140
   10894:	add	r2, sp, #1344	; 0x540
   10898:	mov	r1, r6
   1089c:	ldr	r0, [pc, #380]	; 10a20 <abort@plt+0x570>
   108a0:	bl	10450 <printf@plt>
   108a4:	add	r8, r8, #1
   108a8:	b	10928 <abort@plt+0x478>
   108ac:	mov	r3, r6
   108b0:	mov	r2, r9
   108b4:	mov	r1, r7
   108b8:	ldr	r0, [pc, #356]	; 10a24 <abort@plt+0x574>
   108bc:	bl	10450 <printf@plt>
   108c0:	add	r8, r8, #1
   108c4:	add	r5, r5, #1
   108c8:	ldr	r4, [sl], #4
   108cc:	cmp	r4, #0
   108d0:	beq	10934 <abort@plt+0x484>
   108d4:	mov	r3, r4
   108d8:	mov	r2, r6
   108dc:	mov	r1, #0
   108e0:	mov	r0, r1
   108e4:	bl	10498 <snprintf@plt>
   108e8:	mov	r7, r0
   108ec:	mov	r3, r4
   108f0:	mov	r2, r6
   108f4:	mov	r1, #1024	; 0x400
   108f8:	add	r0, sp, #1344	; 0x540
   108fc:	bl	10498 <snprintf@plt>
   10900:	mov	r9, r0
   10904:	mov	r2, r4
   10908:	mov	r1, r6
   1090c:	add	r0, sp, #320	; 0x140
   10910:	bl	104a4 <sprintf@plt>
   10914:	add	r1, sp, #320	; 0x140
   10918:	add	r0, sp, #1344	; 0x540
   1091c:	bl	10444 <strcmp@plt>
   10920:	cmp	r0, #0
   10924:	bne	10890 <abort@plt+0x3e0>
   10928:	cmp	r7, r9
   1092c:	bne	108ac <abort@plt+0x3fc>
   10930:	b	108c4 <abort@plt+0x414>
   10934:	ldr	r6, [fp, #4]!
   10938:	cmp	r6, #0
   1093c:	beq	10954 <abort@plt+0x4a4>
   10940:	ldr	r4, [sp, #12]
   10944:	cmp	r4, #0
   10948:	addne	sl, sp, #16
   1094c:	bne	108d4 <abort@plt+0x424>
   10950:	b	10934 <abort@plt+0x484>
   10954:	mov	r2, r5
   10958:	mov	r1, r8
   1095c:	ldr	r0, [pc, #196]	; 10a28 <abort@plt+0x578>
   10960:	bl	10450 <printf@plt>
   10964:	ldr	r0, [pc, #192]	; 10a2c <abort@plt+0x57c>
   10968:	bl	10474 <puts@plt>
   1096c:	mov	r4, #0
   10970:	vldr	d10, [pc, #144]	; 10a08 <abort@plt+0x558>
   10974:	vldr	d9, [pc, #148]	; 10a10 <abort@plt+0x560>
   10978:	ldr	r5, [pc, #176]	; 10a30 <abort@plt+0x580>
   1097c:	mov	r6, #1024	; 0x400
   10980:	vmov	s15, r4
   10984:	vcvt.f64.s32	d1, s15
   10988:	vmov.f64	d0, d10
   1098c:	bl	10468 <pow@plt>
   10990:	vmul.f64	d8, d0, d9
   10994:	vstr	d8, [sp]
   10998:	mov	r2, r5
   1099c:	mov	r1, r6
   109a0:	add	r0, sp, #1344	; 0x540
   109a4:	bl	10498 <snprintf@plt>
   109a8:	vmov	r2, r3, d8
   109ac:	mov	r1, r5
   109b0:	add	r0, sp, #320	; 0x140
   109b4:	bl	104a4 <sprintf@plt>
   109b8:	add	r1, sp, #320	; 0x140
   109bc:	add	r0, sp, #1344	; 0x540
   109c0:	bl	10444 <strcmp@plt>
   109c4:	cmp	r0, #0
   109c8:	bne	109dc <abort@plt+0x52c>
   109cc:	add	r4, r4, #1
   109d0:	cmp	r4, #100	; 0x64
   109d4:	bne	10980 <abort@plt+0x4d0>
   109d8:	b	109e8 <abort@plt+0x538>
   109dc:	sub	r1, r4, #1
   109e0:	ldr	r0, [pc, #76]	; 10a34 <abort@plt+0x584>
   109e4:	bl	10450 <printf@plt>
   109e8:	mov	r0, #0
   109ec:	add	sp, sp, #2368	; 0x940
   109f0:	add	sp, sp, #4
   109f4:	vpop	{d8-d10}
   109f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109fc:	nop			; (mov r0, r0)
	...
   10a0c:	eormi	r0, r4, r0
   10a10:	smlsldcc	pc, r6, pc, r6	; <UNPREDICTABLE>
   10a14:	svccc	0x00bf9add
   10a18:			; <UNDEFINED> instruction: 0x00010ab0
   10a1c:	andeq	r0, r1, r4, ror #23
   10a20:	andeq	r0, r1, ip, lsl ip
   10a24:	andeq	r0, r1, r4, ror #24
   10a28:	andeq	r0, r1, r4, lsl #25
   10a2c:	andeq	r0, r1, r0, lsr #25
   10a30:	andeq	r0, r1, r4, asr #25
   10a34:	andeq	r0, r1, ip, asr #25
   10a38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a3c:	mov	r7, r0
   10a40:	ldr	r6, [pc, #72]	; 10a90 <abort@plt+0x5e0>
   10a44:	ldr	r5, [pc, #72]	; 10a94 <abort@plt+0x5e4>
   10a48:	add	r6, pc, r6
   10a4c:	add	r5, pc, r5
   10a50:	sub	r6, r6, r5
   10a54:	mov	r8, r1
   10a58:	mov	r9, r2
   10a5c:	bl	10424 <strcmp@plt-0x20>
   10a60:	asrs	r6, r6, #2
   10a64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a68:	mov	r4, #0
   10a6c:	add	r4, r4, #1
   10a70:	ldr	r3, [r5], #4
   10a74:	mov	r2, r9
   10a78:	mov	r1, r8
   10a7c:	mov	r0, r7
   10a80:	blx	r3
   10a84:	cmp	r6, r4
   10a88:	bne	10a6c <abort@plt+0x5bc>
   10a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a90:			; <UNDEFINED> instruction: 0x000104b8
   10a94:			; <UNDEFINED> instruction: 0x000104b0
   10a98:	bx	lr

Disassembly of section .fini:

00010a9c <.fini>:
   10a9c:	push	{r3, lr}
   10aa0:	pop	{r3, pc}
