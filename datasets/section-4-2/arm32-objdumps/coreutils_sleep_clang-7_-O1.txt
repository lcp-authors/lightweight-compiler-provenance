
../repos/coreutils/src/sleep:     file format elf32-littlearm


Disassembly of section .init:

00010cf0 <.init>:
   10cf0:	push	{r3, lr}
   10cf4:	bl	10f84 <abort@plt+0x4c>
   10cf8:	pop	{r3, pc}

Disassembly of section .plt:

00010cfc <calloc@plt-0x14>:
   10cfc:	push	{lr}		; (str lr, [sp, #-4]!)
   10d00:	ldr	lr, [pc, #4]	; 10d0c <calloc@plt-0x4>
   10d04:	add	lr, pc, lr
   10d08:	ldr	pc, [lr, #8]!
   10d0c:	strdeq	r5, [r1], -r4

00010d10 <calloc@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #86016	; 0x15000
   10d18:	ldr	pc, [ip, #756]!	; 0x2f4

00010d1c <fputs_unlocked@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #86016	; 0x15000
   10d24:	ldr	pc, [ip, #748]!	; 0x2ec

00010d28 <strcmp@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #86016	; 0x15000
   10d30:	ldr	pc, [ip, #740]!	; 0x2e4

00010d34 <pause@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #86016	; 0x15000
   10d3c:	ldr	pc, [ip, #732]!	; 0x2dc

00010d40 <fflush@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #86016	; 0x15000
   10d48:	ldr	pc, [ip, #724]!	; 0x2d4

00010d4c <free@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #716]!	; 0x2cc

00010d58 <nanosleep@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #708]!	; 0x2c4

00010d64 <_exit@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #700]!	; 0x2bc

00010d70 <memcpy@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #692]!	; 0x2b4

00010d7c <mbsinit@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #684]!	; 0x2ac

00010d88 <memcmp@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #676]!	; 0x2a4

00010d94 <dcgettext@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #668]!	; 0x29c

00010da0 <realloc@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #660]!	; 0x294

00010dac <textdomain@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #652]!	; 0x28c

00010db8 <iswprint@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #644]!	; 0x284

00010dc4 <fwrite@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #636]!	; 0x27c

00010dd0 <lseek64@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #628]!	; 0x274

00010ddc <__ctype_get_mb_cur_max@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #620]!	; 0x26c

00010de8 <__fpending@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #612]!	; 0x264

00010df4 <ferror_unlocked@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #604]!	; 0x25c

00010e00 <mbrtowc@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #596]!	; 0x254

00010e0c <error@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #588]!	; 0x24c

00010e18 <malloc@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #580]!	; 0x244

00010e24 <__libc_start_main@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #572]!	; 0x23c

00010e30 <__freading@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #564]!	; 0x234

00010e3c <__gmon_start__@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #556]!	; 0x22c

00010e48 <getopt_long@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #548]!	; 0x224

00010e54 <__ctype_b_loc@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #540]!	; 0x21c

00010e60 <exit@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #532]!	; 0x214

00010e6c <strlen@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #524]!	; 0x20c

00010e78 <__errno_location@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #516]!	; 0x204

00010e84 <__cxa_atexit@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e90 <memset@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #500]!	; 0x1f4

00010e9c <__printf_chk@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #492]!	; 0x1ec

00010ea8 <strtod@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #484]!	; 0x1e4

00010eb4 <fileno@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #476]!	; 0x1dc

00010ec0 <__fprintf_chk@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #468]!	; 0x1d4

00010ecc <fclose@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #460]!	; 0x1cc

00010ed8 <fseeko64@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ee4 <strtod_l@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #444]!	; 0x1bc

00010ef0 <setlocale@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #436]!	; 0x1b4

00010efc <strrchr@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #428]!	; 0x1ac

00010f08 <nl_langinfo@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #420]!	; 0x1a4

00010f14 <newlocale@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #412]!	; 0x19c

00010f20 <bindtextdomain@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #404]!	; 0x194

00010f2c <strncmp@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #396]!	; 0x18c

00010f38 <abort@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #388]!	; 0x184

Disassembly of section .text:

00010f48 <.text>:
   10f48:	mov	fp, #0
   10f4c:	mov	lr, #0
   10f50:	pop	{r1}		; (ldr r1, [sp], #4)
   10f54:	mov	r2, sp
   10f58:	push	{r2}		; (str r2, [sp, #-4]!)
   10f5c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f60:	ldr	ip, [pc, #16]	; 10f78 <abort@plt+0x40>
   10f64:	push	{ip}		; (str ip, [sp, #-4]!)
   10f68:	ldr	r0, [pc, #12]	; 10f7c <abort@plt+0x44>
   10f6c:	ldr	r3, [pc, #12]	; 10f80 <abort@plt+0x48>
   10f70:	bl	10e24 <__libc_start_main@plt>
   10f74:	bl	10f38 <abort@plt>
   10f78:	andeq	r4, r1, r4, lsl #19
   10f7c:	muleq	r1, r0, r2
   10f80:	andeq	r4, r1, r4, lsr #18
   10f84:	ldr	r3, [pc, #20]	; 10fa0 <abort@plt+0x68>
   10f88:	ldr	r2, [pc, #20]	; 10fa4 <abort@plt+0x6c>
   10f8c:	add	r3, pc, r3
   10f90:	ldr	r2, [r3, r2]
   10f94:	cmp	r2, #0
   10f98:	bxeq	lr
   10f9c:	b	10e3c <__gmon_start__@plt>
   10fa0:	andeq	r5, r1, ip, rrx
   10fa4:	andeq	r0, r0, r8, asr #1
   10fa8:	ldr	r0, [pc, #24]	; 10fc8 <abort@plt+0x90>
   10fac:	ldr	r3, [pc, #24]	; 10fcc <abort@plt+0x94>
   10fb0:	cmp	r3, r0
   10fb4:	bxeq	lr
   10fb8:	ldr	r3, [pc, #16]	; 10fd0 <abort@plt+0x98>
   10fbc:	cmp	r3, #0
   10fc0:	bxeq	lr
   10fc4:	bx	r3
   10fc8:	andeq	r6, r2, r0, lsr #2
   10fcc:	andeq	r6, r2, r0, lsr #2
   10fd0:	andeq	r0, r0, r0
   10fd4:	ldr	r0, [pc, #36]	; 11000 <abort@plt+0xc8>
   10fd8:	ldr	r1, [pc, #36]	; 11004 <abort@plt+0xcc>
   10fdc:	sub	r1, r1, r0
   10fe0:	asr	r1, r1, #2
   10fe4:	add	r1, r1, r1, lsr #31
   10fe8:	asrs	r1, r1, #1
   10fec:	bxeq	lr
   10ff0:	ldr	r3, [pc, #16]	; 11008 <abort@plt+0xd0>
   10ff4:	cmp	r3, #0
   10ff8:	bxeq	lr
   10ffc:	bx	r3
   11000:	andeq	r6, r2, r0, lsr #2
   11004:	andeq	r6, r2, r0, lsr #2
   11008:	andeq	r0, r0, r0
   1100c:	push	{r4, lr}
   11010:	ldr	r4, [pc, #24]	; 11030 <abort@plt+0xf8>
   11014:	ldrb	r3, [r4]
   11018:	cmp	r3, #0
   1101c:	popne	{r4, pc}
   11020:	bl	10fa8 <abort@plt+0x70>
   11024:	mov	r3, #1
   11028:	strb	r3, [r4]
   1102c:	pop	{r4, pc}
   11030:	andeq	r6, r2, ip, lsr r1
   11034:	b	10fd4 <abort@plt+0x9c>
   11038:	push	{fp, lr}
   1103c:	mov	fp, sp
   11040:	mov	r4, r0
   11044:	cmp	r0, #0
   11048:	bne	110c8 <abort@plt+0x190>
   1104c:	movw	r1, #18899	; 0x49d3
   11050:	movt	r1, #1
   11054:	mov	r0, #0
   11058:	mov	r2, #5
   1105c:	bl	10d94 <dcgettext@plt>
   11060:	mov	r1, r0
   11064:	movw	r0, #24904	; 0x6148
   11068:	movt	r0, #2
   1106c:	ldr	r2, [r0]
   11070:	mov	r0, #1
   11074:	mov	r3, r2
   11078:	bl	10e9c <__printf_chk@plt>
   1107c:	movw	r1, #19195	; 0x4afb
   11080:	movt	r1, #1
   11084:	mov	r0, #0
   11088:	mov	r2, #5
   1108c:	bl	10d94 <dcgettext@plt>
   11090:	movw	r5, #24884	; 0x6134
   11094:	movt	r5, #2
   11098:	ldr	r1, [r5]
   1109c:	bl	10d1c <fputs_unlocked@plt>
   110a0:	movw	r1, #19240	; 0x4b28
   110a4:	movt	r1, #1
   110a8:	mov	r0, #0
   110ac:	mov	r2, #5
   110b0:	bl	10d94 <dcgettext@plt>
   110b4:	ldr	r1, [r5]
   110b8:	bl	10d1c <fputs_unlocked@plt>
   110bc:	bl	1110c <abort@plt+0x1d4>
   110c0:	mov	r0, r4
   110c4:	bl	10e60 <exit@plt>
   110c8:	movw	r0, #24880	; 0x6130
   110cc:	movt	r0, #2
   110d0:	ldr	r5, [r0]
   110d4:	movw	r1, #18860	; 0x49ac
   110d8:	movt	r1, #1
   110dc:	mov	r0, #0
   110e0:	mov	r2, #5
   110e4:	bl	10d94 <dcgettext@plt>
   110e8:	mov	r2, r0
   110ec:	movw	r0, #24904	; 0x6148
   110f0:	movt	r0, #2
   110f4:	ldr	r3, [r0]
   110f8:	mov	r0, r5
   110fc:	mov	r1, #1
   11100:	bl	10ec0 <__fprintf_chk@plt>
   11104:	mov	r0, r4
   11108:	bl	10e60 <exit@plt>
   1110c:	push	{r4, r5, fp, lr}
   11110:	add	fp, sp, #8
   11114:	sub	sp, sp, #56	; 0x38
   11118:	movw	r0, #19744	; 0x4d20
   1111c:	movt	r0, #1
   11120:	add	r1, r0, #32
   11124:	mov	r5, sp
   11128:	mov	r2, #48	; 0x30
   1112c:	vld1.64	{d16-d17}, [r1]
   11130:	add	r1, r5, #32
   11134:	add	r3, r0, #16
   11138:	vld1.64	{d18-d19}, [r0], r2
   1113c:	vld1.64	{d20-d21}, [r3]
   11140:	vldr	d22, [r0]
   11144:	vst1.64	{d16-d17}, [r1]
   11148:	add	r0, r5, #16
   1114c:	vst1.64	{d20-d21}, [r0]
   11150:	mov	r0, r5
   11154:	vst1.64	{d18-d19}, [r0], r2
   11158:	vstr	d22, [r0]
   1115c:	ldr	r1, [sp]
   11160:	cmp	r1, #0
   11164:	beq	1118c <abort@plt+0x254>
   11168:	mov	r5, sp
   1116c:	movw	r4, #19294	; 0x4b5e
   11170:	movt	r4, #1
   11174:	mov	r0, r4
   11178:	bl	10d28 <strcmp@plt>
   1117c:	cmp	r0, #0
   11180:	ldrne	r1, [r5, #8]!
   11184:	cmpne	r1, #0
   11188:	bne	11174 <abort@plt+0x23c>
   1118c:	ldr	r4, [r5, #4]
   11190:	movw	r1, #19526	; 0x4c46
   11194:	movt	r1, #1
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	bl	10d94 <dcgettext@plt>
   111a4:	mov	r1, r0
   111a8:	movw	r2, #19324	; 0x4b7c
   111ac:	movt	r2, #1
   111b0:	movw	r3, #19549	; 0x4c5d
   111b4:	movt	r3, #1
   111b8:	mov	r0, #1
   111bc:	bl	10e9c <__printf_chk@plt>
   111c0:	movw	r5, #19294	; 0x4b5e
   111c4:	movt	r5, #1
   111c8:	cmp	r4, #0
   111cc:	moveq	r4, r5
   111d0:	mov	r0, #5
   111d4:	mov	r1, #0
   111d8:	bl	10ef0 <setlocale@plt>
   111dc:	cmp	r0, #0
   111e0:	beq	11220 <abort@plt+0x2e8>
   111e4:	movw	r1, #19589	; 0x4c85
   111e8:	movt	r1, #1
   111ec:	mov	r2, #3
   111f0:	bl	10f2c <strncmp@plt>
   111f4:	cmp	r0, #0
   111f8:	beq	11220 <abort@plt+0x2e8>
   111fc:	movw	r1, #19593	; 0x4c89
   11200:	movt	r1, #1
   11204:	mov	r0, #0
   11208:	mov	r2, #5
   1120c:	bl	10d94 <dcgettext@plt>
   11210:	movw	r1, #24884	; 0x6134
   11214:	movt	r1, #2
   11218:	ldr	r1, [r1]
   1121c:	bl	10d1c <fputs_unlocked@plt>
   11220:	movw	r1, #19664	; 0x4cd0
   11224:	movt	r1, #1
   11228:	mov	r0, #0
   1122c:	mov	r2, #5
   11230:	bl	10d94 <dcgettext@plt>
   11234:	mov	r1, r0
   11238:	movw	r2, #19549	; 0x4c5d
   1123c:	movt	r2, #1
   11240:	mov	r0, #1
   11244:	mov	r3, r5
   11248:	bl	10e9c <__printf_chk@plt>
   1124c:	movw	r1, #19691	; 0x4ceb
   11250:	movt	r1, #1
   11254:	mov	r0, #0
   11258:	mov	r2, #5
   1125c:	bl	10d94 <dcgettext@plt>
   11260:	mov	r1, r0
   11264:	movw	r0, #19459	; 0x4c03
   11268:	movt	r0, #1
   1126c:	movw	r3, #19194	; 0x4afa
   11270:	movt	r3, #1
   11274:	cmp	r4, r5
   11278:	moveq	r3, r0
   1127c:	mov	r0, #1
   11280:	mov	r2, r4
   11284:	bl	10e9c <__printf_chk@plt>
   11288:	sub	sp, fp, #8
   1128c:	pop	{r4, r5, fp, pc}
   11290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11294:	add	fp, sp, #28
   11298:	sub	sp, sp, #4
   1129c:	vpush	{d8}
   112a0:	sub	sp, sp, #40	; 0x28
   112a4:	mov	r7, r1
   112a8:	mov	r5, r0
   112ac:	ldr	r0, [r1]
   112b0:	bl	11864 <abort@plt+0x92c>
   112b4:	movw	r1, #19194	; 0x4afa
   112b8:	movt	r1, #1
   112bc:	mov	r0, #6
   112c0:	bl	10ef0 <setlocale@plt>
   112c4:	movw	r6, #19328	; 0x4b80
   112c8:	movt	r6, #1
   112cc:	movw	r1, #19300	; 0x4b64
   112d0:	movt	r1, #1
   112d4:	mov	r0, r6
   112d8:	bl	10f20 <bindtextdomain@plt>
   112dc:	mov	r0, r6
   112e0:	bl	10dac <textdomain@plt>
   112e4:	movw	r0, #5640	; 0x1608
   112e8:	movt	r0, #1
   112ec:	bl	14988 <abort@plt+0x3a50>
   112f0:	movw	r0, #24792	; 0x60d8
   112f4:	movt	r0, #2
   112f8:	ldr	r0, [r0]
   112fc:	mov	r1, #0
   11300:	movw	r2, #19351	; 0x4b97
   11304:	movt	r2, #1
   11308:	movw	r3, #19338	; 0x4b8a
   1130c:	movt	r3, #1
   11310:	movw	r6, #4152	; 0x1038
   11314:	movt	r6, #1
   11318:	mov	r4, #1
   1131c:	stm	sp, {r0, r4, r6}
   11320:	str	r3, [sp, #12]
   11324:	str	r2, [sp, #16]
   11328:	str	r1, [sp, #20]
   1132c:	movw	r2, #19294	; 0x4b5e
   11330:	movt	r2, #1
   11334:	movw	r3, #19324	; 0x4b7c
   11338:	movt	r3, #1
   1133c:	mov	r0, r5
   11340:	mov	r1, r7
   11344:	bl	1179c <abort@plt+0x864>
   11348:	cmp	r5, #1
   1134c:	beq	1148c <abort@plt+0x554>
   11350:	movw	r0, #24872	; 0x6128
   11354:	movt	r0, #2
   11358:	vmov.i32	d8, #0	; 0x00000000
   1135c:	ldr	r0, [r0]
   11360:	cmp	r0, r5
   11364:	bge	11440 <abort@plt+0x508>
   11368:	vmov.i32	d8, #0	; 0x00000000
   1136c:	sub	r4, r5, r0
   11370:	add	r6, r7, r0, lsl #2
   11374:	mov	r8, #1
   11378:	add	r9, sp, #28
   1137c:	add	r5, sp, #32
   11380:	movw	sl, #5480	; 0x1568
   11384:	movt	sl, #1
   11388:	ldr	r0, [r6]
   1138c:	mov	r1, r9
   11390:	mov	r2, r5
   11394:	mov	r3, sl
   11398:	bl	13e28 <abort@plt+0x2ef0>
   1139c:	cmp	r0, #0
   113a0:	bne	113b4 <abort@plt+0x47c>
   113a4:	bl	10e78 <__errno_location@plt>
   113a8:	ldr	r0, [r0]
   113ac:	cmp	r0, #34	; 0x22
   113b0:	bne	113ec <abort@plt+0x4b4>
   113b4:	vldr	d16, [sp, #32]
   113b8:	vcmpe.f64	d16, #0.0
   113bc:	vmrs	APSR_nzcv, fpscr
   113c0:	blt	113ec <abort@plt+0x4b4>
   113c4:	ldr	r0, [sp, #28]
   113c8:	ldrb	r1, [r0]
   113cc:	cmp	r1, #0
   113d0:	ldrbne	r0, [r0, #1]
   113d4:	cmpne	r0, #0
   113d8:	bne	113ec <abort@plt+0x4b4>
   113dc:	mov	r0, r5
   113e0:	bl	114b8 <abort@plt+0x580>
   113e4:	cmp	r0, #0
   113e8:	bne	11424 <abort@plt+0x4ec>
   113ec:	mov	r8, #0
   113f0:	mov	r0, #0
   113f4:	movw	r1, #19379	; 0x4bb3
   113f8:	movt	r1, #1
   113fc:	mov	r2, #5
   11400:	bl	10d94 <dcgettext@plt>
   11404:	mov	r7, r0
   11408:	ldr	r0, [r6]
   1140c:	bl	1309c <abort@plt+0x2164>
   11410:	mov	r3, r0
   11414:	mov	r0, #0
   11418:	mov	r1, #0
   1141c:	mov	r2, r7
   11420:	bl	10e0c <error@plt>
   11424:	vldr	d16, [sp, #32]
   11428:	vadd.f64	d8, d8, d16
   1142c:	subs	r4, r4, #1
   11430:	add	r6, r6, #4
   11434:	bne	11388 <abort@plt+0x450>
   11438:	tst	r8, #1
   1143c:	beq	114b0 <abort@plt+0x578>
   11440:	vorr	d0, d8, d8
   11444:	bl	13d68 <abort@plt+0x2e30>
   11448:	cmp	r0, #0
   1144c:	moveq	r0, #0
   11450:	subeq	sp, fp, #40	; 0x28
   11454:	vpopeq	{d8}
   11458:	addeq	sp, sp, #4
   1145c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11460:	bl	10e78 <__errno_location@plt>
   11464:	ldr	r4, [r0]
   11468:	movw	r1, #19404	; 0x4bcc
   1146c:	movt	r1, #1
   11470:	mov	r0, #0
   11474:	mov	r2, #5
   11478:	bl	10d94 <dcgettext@plt>
   1147c:	mov	r2, r0
   11480:	mov	r0, #1
   11484:	mov	r1, r4
   11488:	bl	10e0c <error@plt>
   1148c:	movw	r1, #19363	; 0x4ba3
   11490:	movt	r1, #1
   11494:	mov	r0, #0
   11498:	mov	r2, #5
   1149c:	bl	10d94 <dcgettext@plt>
   114a0:	mov	r2, r0
   114a4:	mov	r0, #0
   114a8:	mov	r1, #0
   114ac:	bl	10e0c <error@plt>
   114b0:	mov	r0, #1
   114b4:	bl	11038 <abort@plt+0x100>
   114b8:	vmov.f64	d16, #112	; 0x3f800000  1.0
   114bc:	sub	r3, r1, #100	; 0x64
   114c0:	mov	r2, #0
   114c4:	cmp	r3, #15
   114c8:	bhi	1151c <abort@plt+0x5e4>
   114cc:	add	r1, pc, #0
   114d0:	ldr	pc, [r1, r3, lsl #2]
   114d4:	andeq	r1, r1, r4, lsl r5
   114d8:	andeq	r1, r1, r4, lsr #10
   114dc:	andeq	r1, r1, r4, lsr #10
   114e0:	andeq	r1, r1, r4, lsr #10
   114e4:	andeq	r1, r1, ip, lsr #10
   114e8:	andeq	r1, r1, r4, lsr #10
   114ec:	andeq	r1, r1, r4, lsr #10
   114f0:	andeq	r1, r1, r4, lsr #10
   114f4:	andeq	r1, r1, r4, lsr #10
   114f8:	andeq	r1, r1, r4, lsr r5
   114fc:	andeq	r1, r1, r4, lsr #10
   11500:	andeq	r1, r1, r4, lsr #10
   11504:	andeq	r1, r1, r4, lsr #10
   11508:	andeq	r1, r1, r4, lsr #10
   1150c:	andeq	r1, r1, r4, lsr #10
   11510:	andeq	r1, r1, r8, lsr r5
   11514:	vldr	d16, [pc, #52]	; 11550 <abort@plt+0x618>
   11518:	b	11538 <abort@plt+0x600>
   1151c:	cmp	r1, #0
   11520:	beq	11538 <abort@plt+0x600>
   11524:	mov	r0, r2
   11528:	bx	lr
   1152c:	vldr	d16, [pc, #36]	; 11558 <abort@plt+0x620>
   11530:	b	11538 <abort@plt+0x600>
   11534:	vldr	d16, [pc, #36]	; 11560 <abort@plt+0x628>
   11538:	vldr	d17, [r0]
   1153c:	vmul.f64	d16, d16, d17
   11540:	vstr	d16, [r0]
   11544:	mov	r2, #1
   11548:	mov	r0, r2
   1154c:	bx	lr
   11550:	andeq	r0, r0, r0
   11554:	rscsmi	r1, r5, r0, lsl #16
   11558:	andeq	r0, r0, r0
   1155c:	adcmi	r2, ip, r0
   11560:	andeq	r0, r0, r0
   11564:	submi	r0, lr, r0
   11568:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1156c:	add	fp, sp, #24
   11570:	vpush	{d8}
   11574:	sub	sp, sp, #8
   11578:	mov	r4, r1
   1157c:	mov	r5, r0
   11580:	add	r1, sp, #4
   11584:	bl	10ea8 <strtod@plt>
   11588:	vmov.f64	d8, d0
   1158c:	ldr	r7, [sp, #4]
   11590:	ldrb	r0, [r7]
   11594:	cmp	r0, #0
   11598:	beq	115cc <abort@plt+0x694>
   1159c:	bl	10e78 <__errno_location@plt>
   115a0:	mov	r6, r0
   115a4:	ldr	r8, [r0]
   115a8:	mov	r1, sp
   115ac:	mov	r0, r5
   115b0:	bl	142c0 <abort@plt+0x3388>
   115b4:	ldr	r0, [sp]
   115b8:	cmp	r7, r0
   115bc:	bcs	115c8 <abort@plt+0x690>
   115c0:	str	r0, [sp, #4]
   115c4:	b	115d0 <abort@plt+0x698>
   115c8:	str	r8, [r6]
   115cc:	vmov.f64	d0, d8
   115d0:	cmp	r4, #0
   115d4:	ldrne	r0, [sp, #4]
   115d8:	strne	r0, [r4]
   115dc:	sub	sp, fp, #32
   115e0:	vpop	{d8}
   115e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   115e8:	movw	r1, #24896	; 0x6140
   115ec:	movt	r1, #2
   115f0:	str	r0, [r1]
   115f4:	bx	lr
   115f8:	movw	r1, #24900	; 0x6144
   115fc:	movt	r1, #2
   11600:	strb	r0, [r1]
   11604:	bx	lr
   11608:	push	{r4, r5, r6, sl, fp, lr}
   1160c:	add	fp, sp, #16
   11610:	sub	sp, sp, #8
   11614:	movw	r0, #24884	; 0x6134
   11618:	movt	r0, #2
   1161c:	ldr	r0, [r0]
   11620:	bl	14344 <abort@plt+0x340c>
   11624:	cmp	r0, #0
   11628:	beq	11650 <abort@plt+0x718>
   1162c:	movw	r0, #24900	; 0x6144
   11630:	movt	r0, #2
   11634:	ldrb	r0, [r0]
   11638:	cmp	r0, #0
   1163c:	beq	11670 <abort@plt+0x738>
   11640:	bl	10e78 <__errno_location@plt>
   11644:	ldr	r0, [r0]
   11648:	cmp	r0, #32
   1164c:	bne	11670 <abort@plt+0x738>
   11650:	movw	r0, #24880	; 0x6130
   11654:	movt	r0, #2
   11658:	ldr	r0, [r0]
   1165c:	bl	14344 <abort@plt+0x340c>
   11660:	cmp	r0, #0
   11664:	subeq	sp, fp, #16
   11668:	popeq	{r4, r5, r6, sl, fp, pc}
   1166c:	b	116e0 <abort@plt+0x7a8>
   11670:	movw	r1, #19815	; 0x4d67
   11674:	movt	r1, #1
   11678:	mov	r0, #0
   1167c:	mov	r2, #5
   11680:	bl	10d94 <dcgettext@plt>
   11684:	mov	r4, r0
   11688:	movw	r0, #24896	; 0x6140
   1168c:	movt	r0, #2
   11690:	ldr	r6, [r0]
   11694:	bl	10e78 <__errno_location@plt>
   11698:	ldr	r5, [r0]
   1169c:	cmp	r6, #0
   116a0:	bne	116bc <abort@plt+0x784>
   116a4:	movw	r2, #19831	; 0x4d77
   116a8:	movt	r2, #1
   116ac:	mov	r0, #0
   116b0:	mov	r1, r5
   116b4:	mov	r3, r4
   116b8:	b	116dc <abort@plt+0x7a4>
   116bc:	mov	r0, r6
   116c0:	bl	12f4c <abort@plt+0x2014>
   116c4:	mov	r3, r0
   116c8:	str	r4, [sp]
   116cc:	movw	r2, #19827	; 0x4d73
   116d0:	movt	r2, #1
   116d4:	mov	r0, #0
   116d8:	mov	r1, r5
   116dc:	bl	10e0c <error@plt>
   116e0:	movw	r0, #24796	; 0x60dc
   116e4:	movt	r0, #2
   116e8:	ldr	r0, [r0]
   116ec:	bl	10d64 <_exit@plt>
   116f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   116f4:	add	fp, sp, #24
   116f8:	sub	sp, sp, #8
   116fc:	movw	r6, #24888	; 0x6138
   11700:	movt	r6, #2
   11704:	ldr	r7, [r6]
   11708:	mov	r4, #0
   1170c:	str	r4, [r6]
   11710:	cmp	r0, #2
   11714:	bne	11784 <abort@plt+0x84c>
   11718:	mov	r8, r3
   1171c:	mov	r5, r2
   11720:	str	r4, [sp]
   11724:	movw	r2, #19834	; 0x4d7a
   11728:	movt	r2, #1
   1172c:	movw	r3, #19852	; 0x4d8c
   11730:	movt	r3, #1
   11734:	bl	10e48 <getopt_long@plt>
   11738:	cmp	r0, #104	; 0x68
   1173c:	beq	11778 <abort@plt+0x840>
   11740:	cmp	r0, #118	; 0x76
   11744:	bne	11784 <abort@plt+0x84c>
   11748:	ldr	r3, [fp, #8]
   1174c:	add	r1, fp, #16
   11750:	str	r1, [sp, #4]
   11754:	movw	r0, #24884	; 0x6134
   11758:	movt	r0, #2
   1175c:	ldr	r0, [r0]
   11760:	str	r1, [sp]
   11764:	mov	r1, r5
   11768:	mov	r2, r8
   1176c:	bl	13820 <abort@plt+0x28e8>
   11770:	mov	r0, #0
   11774:	bl	10e60 <exit@plt>
   11778:	ldr	r1, [fp, #12]
   1177c:	mov	r0, #0
   11780:	blx	r1
   11784:	movw	r0, #24872	; 0x6128
   11788:	movt	r0, #2
   1178c:	str	r4, [r0]
   11790:	str	r7, [r6]
   11794:	sub	sp, fp, #24
   11798:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1179c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   117a0:	add	fp, sp, #24
   117a4:	sub	sp, sp, #8
   117a8:	mov	r8, r3
   117ac:	mov	r5, r2
   117b0:	movw	r6, #24888	; 0x6138
   117b4:	movt	r6, #2
   117b8:	ldr	r7, [r6]
   117bc:	mov	r2, #1
   117c0:	str	r2, [r6]
   117c4:	mov	r2, #0
   117c8:	str	r2, [sp]
   117cc:	ldr	r3, [fp, #12]
   117d0:	movw	r4, #19194	; 0x4afa
   117d4:	movt	r4, #1
   117d8:	movw	r2, #19834	; 0x4d7a
   117dc:	movt	r2, #1
   117e0:	cmp	r3, #0
   117e4:	movne	r2, r4
   117e8:	movw	r3, #19852	; 0x4d8c
   117ec:	movt	r3, #1
   117f0:	bl	10e48 <getopt_long@plt>
   117f4:	cmn	r0, #1
   117f8:	beq	11828 <abort@plt+0x8f0>
   117fc:	ldr	r1, [fp, #16]
   11800:	cmp	r0, #104	; 0x68
   11804:	beq	11820 <abort@plt+0x8e8>
   11808:	cmp	r0, #118	; 0x76
   1180c:	beq	11834 <abort@plt+0x8fc>
   11810:	movw	r0, #24796	; 0x60dc
   11814:	movt	r0, #2
   11818:	ldr	r0, [r0]
   1181c:	b	11824 <abort@plt+0x8ec>
   11820:	mov	r0, #0
   11824:	blx	r1
   11828:	str	r7, [r6]
   1182c:	sub	sp, fp, #24
   11830:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11834:	ldr	r3, [fp, #8]
   11838:	add	r1, fp, #20
   1183c:	str	r1, [sp, #4]
   11840:	movw	r0, #24884	; 0x6134
   11844:	movt	r0, #2
   11848:	ldr	r0, [r0]
   1184c:	str	r1, [sp]
   11850:	mov	r1, r5
   11854:	mov	r2, r8
   11858:	bl	13820 <abort@plt+0x28e8>
   1185c:	mov	r0, #0
   11860:	bl	10e60 <exit@plt>
   11864:	push	{r4, r5, fp, lr}
   11868:	add	fp, sp, #8
   1186c:	cmp	r0, #0
   11870:	beq	11904 <abort@plt+0x9cc>
   11874:	mov	r4, r0
   11878:	mov	r1, #47	; 0x2f
   1187c:	bl	10efc <strrchr@plt>
   11880:	cmp	r0, #0
   11884:	mov	r5, r4
   11888:	addne	r5, r0, #1
   1188c:	sub	r0, r5, r4
   11890:	cmp	r0, #7
   11894:	blt	118e8 <abort@plt+0x9b0>
   11898:	sub	r0, r5, #7
   1189c:	movw	r1, #19956	; 0x4df4
   118a0:	movt	r1, #1
   118a4:	mov	r2, #7
   118a8:	bl	10f2c <strncmp@plt>
   118ac:	cmp	r0, #0
   118b0:	bne	118e8 <abort@plt+0x9b0>
   118b4:	movw	r1, #19964	; 0x4dfc
   118b8:	movt	r1, #1
   118bc:	mov	r0, r5
   118c0:	mov	r2, #3
   118c4:	bl	10f2c <strncmp@plt>
   118c8:	cmp	r0, #0
   118cc:	beq	118d8 <abort@plt+0x9a0>
   118d0:	mov	r4, r5
   118d4:	b	118e8 <abort@plt+0x9b0>
   118d8:	add	r4, r5, #3
   118dc:	movw	r0, #24864	; 0x6120
   118e0:	movt	r0, #2
   118e4:	str	r4, [r0]
   118e8:	movw	r0, #24868	; 0x6124
   118ec:	movt	r0, #2
   118f0:	str	r4, [r0]
   118f4:	movw	r0, #24904	; 0x6148
   118f8:	movt	r0, #2
   118fc:	str	r4, [r0]
   11900:	pop	{r4, r5, fp, pc}
   11904:	movw	r0, #24880	; 0x6130
   11908:	movt	r0, #2
   1190c:	ldr	r3, [r0]
   11910:	movw	r0, #19900	; 0x4dbc
   11914:	movt	r0, #1
   11918:	mov	r1, #55	; 0x37
   1191c:	mov	r2, #1
   11920:	bl	10dc4 <fwrite@plt>
   11924:	bl	10f38 <abort@plt>
   11928:	push	{r4, r5, r6, sl, fp, lr}
   1192c:	add	fp, sp, #16
   11930:	mov	r4, r0
   11934:	movw	r0, #24912	; 0x6150
   11938:	movt	r0, #2
   1193c:	cmp	r4, #0
   11940:	moveq	r4, r0
   11944:	bl	10e78 <__errno_location@plt>
   11948:	mov	r5, r0
   1194c:	ldr	r6, [r0]
   11950:	mov	r0, r4
   11954:	mov	r1, #48	; 0x30
   11958:	bl	13c68 <abort@plt+0x2d30>
   1195c:	str	r6, [r5]
   11960:	pop	{r4, r5, r6, sl, fp, pc}
   11964:	movw	r1, #24912	; 0x6150
   11968:	movt	r1, #2
   1196c:	cmp	r0, #0
   11970:	movne	r1, r0
   11974:	ldr	r0, [r1]
   11978:	bx	lr
   1197c:	movw	r2, #24912	; 0x6150
   11980:	movt	r2, #2
   11984:	cmp	r0, #0
   11988:	movne	r2, r0
   1198c:	str	r1, [r2]
   11990:	bx	lr
   11994:	movw	r3, #24912	; 0x6150
   11998:	movt	r3, #2
   1199c:	cmp	r0, #0
   119a0:	movne	r3, r0
   119a4:	ubfx	r0, r1, #5, #3
   119a8:	add	r0, r3, r0, lsl #2
   119ac:	ldr	r3, [r0, #8]
   119b0:	and	r1, r1, #31
   119b4:	eor	r2, r2, r3, lsr r1
   119b8:	and	r2, r2, #1
   119bc:	eor	r2, r3, r2, lsl r1
   119c0:	str	r2, [r0, #8]
   119c4:	mov	r0, #1
   119c8:	and	r0, r0, r3, lsr r1
   119cc:	bx	lr
   119d0:	movw	r2, #24912	; 0x6150
   119d4:	movt	r2, #2
   119d8:	cmp	r0, #0
   119dc:	movne	r2, r0
   119e0:	ldr	r0, [r2, #4]
   119e4:	str	r1, [r2, #4]
   119e8:	bx	lr
   119ec:	movw	r3, #24912	; 0x6150
   119f0:	movt	r3, #2
   119f4:	cmp	r0, #0
   119f8:	movne	r3, r0
   119fc:	mov	r0, #10
   11a00:	str	r0, [r3]
   11a04:	cmp	r1, #0
   11a08:	cmpne	r2, #0
   11a0c:	bne	11a1c <abort@plt+0xae4>
   11a10:	push	{fp, lr}
   11a14:	mov	fp, sp
   11a18:	bl	10f38 <abort@plt>
   11a1c:	str	r1, [r3, #40]	; 0x28
   11a20:	str	r2, [r3, #44]	; 0x2c
   11a24:	bx	lr
   11a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a2c:	add	fp, sp, #28
   11a30:	sub	sp, sp, #20
   11a34:	mov	r8, r3
   11a38:	mov	r9, r2
   11a3c:	mov	sl, r1
   11a40:	mov	r7, r0
   11a44:	ldr	r0, [fp, #8]
   11a48:	movw	r5, #24912	; 0x6150
   11a4c:	movt	r5, #2
   11a50:	cmp	r0, #0
   11a54:	movne	r5, r0
   11a58:	bl	10e78 <__errno_location@plt>
   11a5c:	mov	r4, r0
   11a60:	ldm	r5, {r0, r1}
   11a64:	ldr	r2, [r5, #40]	; 0x28
   11a68:	ldr	r3, [r5, #44]	; 0x2c
   11a6c:	ldr	r6, [r4]
   11a70:	add	r5, r5, #8
   11a74:	stm	sp, {r0, r1, r5}
   11a78:	str	r2, [sp, #12]
   11a7c:	str	r3, [sp, #16]
   11a80:	mov	r0, r7
   11a84:	mov	r1, sl
   11a88:	mov	r2, r9
   11a8c:	mov	r3, r8
   11a90:	bl	11aa0 <abort@plt+0xb68>
   11a94:	str	r6, [r4]
   11a98:	sub	sp, fp, #28
   11a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11aa4:	add	fp, sp, #28
   11aa8:	sub	sp, sp, #156	; 0x9c
   11aac:	mov	r9, r3
   11ab0:	str	r2, [fp, #-84]	; 0xffffffac
   11ab4:	mov	r6, r1
   11ab8:	mov	r7, r0
   11abc:	ldr	r0, [fp, #12]
   11ac0:	and	r1, r0, #4
   11ac4:	str	r1, [sp, #32]
   11ac8:	and	r1, r0, #1
   11acc:	str	r1, [sp, #36]	; 0x24
   11ad0:	ubfx	sl, r0, #1, #1
   11ad4:	bl	10ddc <__ctype_get_mb_cur_max@plt>
   11ad8:	str	r0, [sp, #40]	; 0x28
   11adc:	ldr	r0, [fp, #24]
   11ae0:	str	r0, [sp, #76]	; 0x4c
   11ae4:	ldr	r0, [fp, #20]
   11ae8:	str	r0, [sp, #68]	; 0x44
   11aec:	ldr	r0, [fp, #8]
   11af0:	str	r0, [fp, #-60]	; 0xffffffc4
   11af4:	mov	r0, #0
   11af8:	str	r0, [sp, #72]	; 0x48
   11afc:	mov	r0, #0
   11b00:	str	r0, [sp, #92]	; 0x5c
   11b04:	mov	r0, #0
   11b08:	str	r0, [fp, #-72]	; 0xffffffb8
   11b0c:	mov	r0, #0
   11b10:	mov	r1, #0
   11b14:	str	r1, [fp, #-56]	; 0xffffffc8
   11b18:	mov	r1, #0
   11b1c:	str	r1, [sp, #56]	; 0x38
   11b20:	mov	r5, #1
   11b24:	str	r7, [sp, #80]	; 0x50
   11b28:	mov	r4, r6
   11b2c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11b30:	cmp	r6, #10
   11b34:	bhi	12a9c <abort@plt+0x1b64>
   11b38:	add	r1, pc, #20
   11b3c:	mov	r8, #0
   11b40:	mov	r2, #1
   11b44:	mov	r3, #0
   11b48:	ldr	ip, [fp, #-84]	; 0xffffffac
   11b4c:	mov	lr, r9
   11b50:	ldr	pc, [r1, r6, lsl #2]
   11b54:	andeq	r1, r1, ip, lsr #24
   11b58:	andeq	r1, r1, ip, asr ip
   11b5c:	andeq	r1, r1, ip, lsl ip
   11b60:	andeq	r1, r1, r4, lsl ip
   11b64:	andeq	r1, r1, r0, asr ip
   11b68:			; <UNDEFINED> instruction: 0x00011cb0
   11b6c:	andeq	r1, r1, ip, lsr ip
   11b70:	andeq	r1, r1, ip, lsl #26
   11b74:	andeq	r1, r1, r0, lsl #23
   11b78:	andeq	r1, r1, r0, lsl #23
   11b7c:	andeq	r1, r1, r8, lsr #23
   11b80:	movw	r0, #20048	; 0x4e50
   11b84:	movt	r0, #1
   11b88:	mov	r1, r6
   11b8c:	bl	130a8 <abort@plt+0x2170>
   11b90:	str	r0, [sp, #68]	; 0x44
   11b94:	movw	r0, #20050	; 0x4e52
   11b98:	movt	r0, #1
   11b9c:	mov	r1, r6
   11ba0:	bl	130a8 <abort@plt+0x2170>
   11ba4:	str	r0, [sp, #76]	; 0x4c
   11ba8:	mov	r8, #0
   11bac:	tst	sl, #1
   11bb0:	bne	11be8 <abort@plt+0xcb0>
   11bb4:	ldr	r0, [sp, #68]	; 0x44
   11bb8:	ldrb	r0, [r0]
   11bbc:	cmp	r0, #0
   11bc0:	beq	11be8 <abort@plt+0xcb0>
   11bc4:	ldr	r1, [sp, #68]	; 0x44
   11bc8:	add	r1, r1, #1
   11bcc:	mov	r8, #0
   11bd0:	cmp	r8, r4
   11bd4:	strbcc	r0, [r7, r8]
   11bd8:	ldrb	r0, [r1, r8]
   11bdc:	add	r8, r8, #1
   11be0:	cmp	r0, #0
   11be4:	bne	11bd0 <abort@plt+0xc98>
   11be8:	ldr	r6, [sp, #76]	; 0x4c
   11bec:	mov	r0, r6
   11bf0:	bl	10e6c <strlen@plt>
   11bf4:	str	r0, [fp, #-72]	; 0xffffffb8
   11bf8:	str	r6, [sp, #92]	; 0x5c
   11bfc:	mov	r2, #1
   11c00:	mov	r3, sl
   11c04:	ldr	ip, [fp, #-84]	; 0xffffffac
   11c08:	mov	lr, r9
   11c0c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11c10:	b	11d0c <abort@plt+0xdd4>
   11c14:	mov	r0, #1
   11c18:	b	11c5c <abort@plt+0xd24>
   11c1c:	tst	sl, #1
   11c20:	bne	11c5c <abort@plt+0xd24>
   11c24:	mov	r2, r0
   11c28:	b	11c84 <abort@plt+0xd4c>
   11c2c:	mov	r6, #0
   11c30:	mov	r8, #0
   11c34:	mov	r2, r0
   11c38:	b	11d08 <abort@plt+0xdd0>
   11c3c:	mov	r0, #1
   11c40:	str	r0, [fp, #-72]	; 0xffffffb8
   11c44:	mov	r8, #0
   11c48:	mov	r6, #5
   11c4c:	b	11cc8 <abort@plt+0xd90>
   11c50:	mov	r2, #1
   11c54:	tst	sl, #1
   11c58:	beq	11c84 <abort@plt+0xd4c>
   11c5c:	mov	r1, #1
   11c60:	str	r1, [fp, #-72]	; 0xffffffb8
   11c64:	mov	r8, #0
   11c68:	mov	r6, #2
   11c6c:	movw	r1, #20050	; 0x4e52
   11c70:	movt	r1, #1
   11c74:	str	r1, [sp, #92]	; 0x5c
   11c78:	mov	r2, r0
   11c7c:	mov	r3, #1
   11c80:	b	11d0c <abort@plt+0xdd4>
   11c84:	mov	r8, #1
   11c88:	mov	r6, #2
   11c8c:	cmp	r4, #0
   11c90:	movne	r0, #39	; 0x27
   11c94:	strbne	r0, [r7]
   11c98:	movw	r0, #20050	; 0x4e52
   11c9c:	movt	r0, #1
   11ca0:	str	r0, [sp, #92]	; 0x5c
   11ca4:	mov	r0, #1
   11ca8:	str	r0, [fp, #-72]	; 0xffffffb8
   11cac:	b	11d08 <abort@plt+0xdd0>
   11cb0:	mov	r6, #5
   11cb4:	tst	sl, #1
   11cb8:	beq	11ce0 <abort@plt+0xda8>
   11cbc:	mov	r0, #1
   11cc0:	str	r0, [fp, #-72]	; 0xffffffb8
   11cc4:	mov	r8, #0
   11cc8:	movw	r0, #20046	; 0x4e4e
   11ccc:	movt	r0, #1
   11cd0:	str	r0, [sp, #92]	; 0x5c
   11cd4:	mov	r2, #1
   11cd8:	mov	r3, #1
   11cdc:	b	11d0c <abort@plt+0xdd4>
   11ce0:	cmp	r4, #0
   11ce4:	movne	r0, #34	; 0x22
   11ce8:	strbne	r0, [r7]
   11cec:	mov	r8, #1
   11cf0:	movw	r0, #20046	; 0x4e4e
   11cf4:	movt	r0, #1
   11cf8:	str	r0, [sp, #92]	; 0x5c
   11cfc:	mov	r0, #1
   11d00:	str	r0, [fp, #-72]	; 0xffffffb8
   11d04:	mov	r2, #1
   11d08:	mov	r3, #0
   11d0c:	ldr	r0, [fp, #16]
   11d10:	cmp	r0, #0
   11d14:	movwne	r0, #1
   11d18:	and	r0, r0, r3
   11d1c:	str	r0, [fp, #-88]	; 0xffffffa8
   11d20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11d24:	cmp	r0, #0
   11d28:	movwne	r0, #1
   11d2c:	and	r1, r0, r3
   11d30:	and	r1, r2, r1
   11d34:	str	r1, [sp, #48]	; 0x30
   11d38:	str	r6, [fp, #-60]	; 0xffffffc4
   11d3c:	subs	r6, r6, #2
   11d40:	clz	r1, r6
   11d44:	lsr	r1, r1, #5
   11d48:	and	r1, r1, r3
   11d4c:	str	r1, [sp, #60]	; 0x3c
   11d50:	str	r6, [fp, #-80]	; 0xffffffb0
   11d54:	mov	r1, r6
   11d58:	movwne	r1, #1
   11d5c:	str	r3, [fp, #-76]	; 0xffffffb4
   11d60:	eor	r3, r3, #1
   11d64:	str	r3, [sp, #88]	; 0x58
   11d68:	orr	r3, r1, r3
   11d6c:	str	r3, [sp, #64]	; 0x40
   11d70:	and	r1, r1, r2
   11d74:	str	r1, [fp, #-68]	; 0xffffffbc
   11d78:	and	r0, r0, r1
   11d7c:	str	r0, [fp, #-64]	; 0xffffffc0
   11d80:	str	r2, [sp, #84]	; 0x54
   11d84:	eor	r0, r2, #1
   11d88:	str	r0, [sp, #52]	; 0x34
   11d8c:	mov	r6, #0
   11d90:	cmn	lr, #1
   11d94:	beq	11da4 <abort@plt+0xe6c>
   11d98:	cmp	r6, lr
   11d9c:	bne	11db0 <abort@plt+0xe78>
   11da0:	b	1291c <abort@plt+0x19e4>
   11da4:	ldrb	r0, [ip, r6]
   11da8:	cmp	r0, #0
   11dac:	beq	1291c <abort@plt+0x19e4>
   11db0:	str	r5, [fp, #-48]	; 0xffffffd0
   11db4:	mov	sl, #0
   11db8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11dbc:	cmp	r0, #0
   11dc0:	beq	11df4 <abort@plt+0xebc>
   11dc4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11dc8:	add	r5, r6, r0
   11dcc:	cmp	r0, #2
   11dd0:	bcc	11dec <abort@plt+0xeb4>
   11dd4:	cmn	lr, #1
   11dd8:	bne	11dec <abort@plt+0xeb4>
   11ddc:	mov	r0, ip
   11de0:	bl	10e6c <strlen@plt>
   11de4:	ldr	ip, [fp, #-84]	; 0xffffffac
   11de8:	mov	lr, r0
   11dec:	cmp	r5, lr
   11df0:	bls	11e00 <abort@plt+0xec8>
   11df4:	mov	r0, #0
   11df8:	str	r0, [fp, #-52]	; 0xffffffcc
   11dfc:	b	11e4c <abort@plt+0xf14>
   11e00:	mov	r5, r4
   11e04:	mov	r4, lr
   11e08:	add	r0, ip, r6
   11e0c:	ldr	r1, [sp, #92]	; 0x5c
   11e10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11e14:	bl	10d88 <memcmp@plt>
   11e18:	cmp	r0, #0
   11e1c:	mov	r1, r0
   11e20:	movwne	r1, #1
   11e24:	ldr	r2, [sp, #88]	; 0x58
   11e28:	orr	r1, r1, r2
   11e2c:	tst	r1, #1
   11e30:	beq	129e0 <abort@plt+0x1aa8>
   11e34:	clz	r0, r0
   11e38:	lsr	r0, r0, #5
   11e3c:	str	r0, [fp, #-52]	; 0xffffffcc
   11e40:	ldr	ip, [fp, #-84]	; 0xffffffac
   11e44:	mov	lr, r4
   11e48:	mov	r4, r5
   11e4c:	ldrb	r5, [ip, r6]
   11e50:	cmp	r5, #126	; 0x7e
   11e54:	bhi	12210 <abort@plt+0x12d8>
   11e58:	mov	r9, #1
   11e5c:	mov	r2, #110	; 0x6e
   11e60:	mov	r0, #97	; 0x61
   11e64:	add	r3, pc, #4
   11e68:	mov	r1, #0
   11e6c:	ldr	pc, [r3, r5, lsl #2]
   11e70:	andeq	r2, r1, r8, lsl #2
   11e74:	andeq	r2, r1, r0, lsl r2
   11e78:	andeq	r2, r1, r0, lsl r2
   11e7c:	andeq	r2, r1, r0, lsl r2
   11e80:	andeq	r2, r1, r0, lsl r2
   11e84:	andeq	r2, r1, r0, lsl r2
   11e88:	andeq	r2, r1, r0, lsl r2
   11e8c:	ldrdeq	r2, [r1], -r4
   11e90:	andeq	r2, r1, r8, ror #1
   11e94:	andeq	r2, r1, r0, ror #1
   11e98:	strdeq	r2, [r1], -r4
   11e9c:	andeq	r2, r1, r8, ror r1
   11ea0:	ldrdeq	r2, [r1], -r8
   11ea4:	strdeq	r2, [r1], -r0
   11ea8:	andeq	r2, r1, r0, lsl r2
   11eac:	andeq	r2, r1, r0, lsl r2
   11eb0:	andeq	r2, r1, r0, lsl r2
   11eb4:	andeq	r2, r1, r0, lsl r2
   11eb8:	andeq	r2, r1, r0, lsl r2
   11ebc:	andeq	r2, r1, r0, lsl r2
   11ec0:	andeq	r2, r1, r0, lsl r2
   11ec4:	andeq	r2, r1, r0, lsl r2
   11ec8:	andeq	r2, r1, r0, lsl r2
   11ecc:	andeq	r2, r1, r0, lsl r2
   11ed0:	andeq	r2, r1, r0, lsl r2
   11ed4:	andeq	r2, r1, r0, lsl r2
   11ed8:	andeq	r2, r1, r0, lsl r2
   11edc:	andeq	r2, r1, r0, lsl r2
   11ee0:	andeq	r2, r1, r0, lsl r2
   11ee4:	andeq	r2, r1, r0, lsl r2
   11ee8:	andeq	r2, r1, r0, lsl r2
   11eec:	andeq	r2, r1, r0, lsl r2
   11ef0:	andeq	r2, r1, r4, lsl #5
   11ef4:	andeq	r2, r1, r8, lsl #5
   11ef8:	andeq	r2, r1, r8, lsl #5
   11efc:	andeq	r2, r1, r0, lsl #1
   11f00:	andeq	r2, r1, r8, lsl #5
   11f04:	andeq	r2, r1, ip, rrx
   11f08:	andeq	r2, r1, r8, lsl #5
   11f0c:	andeq	r2, r1, r0, lsl #3
   11f10:	andeq	r2, r1, r8, lsl #5
   11f14:	andeq	r2, r1, r8, lsl #5
   11f18:	andeq	r2, r1, r8, lsl #5
   11f1c:	andeq	r2, r1, ip, rrx
   11f20:	andeq	r2, r1, ip, rrx
   11f24:	andeq	r2, r1, ip, rrx
   11f28:	andeq	r2, r1, ip, rrx
   11f2c:	andeq	r2, r1, ip, rrx
   11f30:	andeq	r2, r1, ip, rrx
   11f34:	andeq	r2, r1, ip, rrx
   11f38:	andeq	r2, r1, ip, rrx
   11f3c:	andeq	r2, r1, ip, rrx
   11f40:	andeq	r2, r1, ip, rrx
   11f44:	andeq	r2, r1, ip, rrx
   11f48:	andeq	r2, r1, ip, rrx
   11f4c:	andeq	r2, r1, ip, rrx
   11f50:	andeq	r2, r1, ip, rrx
   11f54:	andeq	r2, r1, ip, rrx
   11f58:	andeq	r2, r1, ip, rrx
   11f5c:	andeq	r2, r1, r8, lsl #5
   11f60:	andeq	r2, r1, r8, lsl #5
   11f64:	andeq	r2, r1, r8, lsl #5
   11f68:	andeq	r2, r1, r8, lsl #5
   11f6c:	andeq	r2, r1, r8, asr #2
   11f70:	andeq	r2, r1, r0, lsl r2
   11f74:	andeq	r2, r1, ip, rrx
   11f78:	andeq	r2, r1, ip, rrx
   11f7c:	andeq	r2, r1, ip, rrx
   11f80:	andeq	r2, r1, ip, rrx
   11f84:	andeq	r2, r1, ip, rrx
   11f88:	andeq	r2, r1, ip, rrx
   11f8c:	andeq	r2, r1, ip, rrx
   11f90:	andeq	r2, r1, ip, rrx
   11f94:	andeq	r2, r1, ip, rrx
   11f98:	andeq	r2, r1, ip, rrx
   11f9c:	andeq	r2, r1, ip, rrx
   11fa0:	andeq	r2, r1, ip, rrx
   11fa4:	andeq	r2, r1, ip, rrx
   11fa8:	andeq	r2, r1, ip, rrx
   11fac:	andeq	r2, r1, ip, rrx
   11fb0:	andeq	r2, r1, ip, rrx
   11fb4:	andeq	r2, r1, ip, rrx
   11fb8:	andeq	r2, r1, ip, rrx
   11fbc:	andeq	r2, r1, ip, rrx
   11fc0:	andeq	r2, r1, ip, rrx
   11fc4:	andeq	r2, r1, ip, rrx
   11fc8:	andeq	r2, r1, ip, rrx
   11fcc:	andeq	r2, r1, ip, rrx
   11fd0:	andeq	r2, r1, ip, rrx
   11fd4:	andeq	r2, r1, ip, rrx
   11fd8:	andeq	r2, r1, ip, rrx
   11fdc:	andeq	r2, r1, r8, lsl #5
   11fe0:	strheq	r2, [r1], -r4
   11fe4:	andeq	r2, r1, ip, rrx
   11fe8:	andeq	r2, r1, r8, lsl #5
   11fec:	andeq	r2, r1, ip, rrx
   11ff0:	andeq	r2, r1, r8, lsl #5
   11ff4:	andeq	r2, r1, ip, rrx
   11ff8:	andeq	r2, r1, ip, rrx
   11ffc:	andeq	r2, r1, ip, rrx
   12000:	andeq	r2, r1, ip, rrx
   12004:	andeq	r2, r1, ip, rrx
   12008:	andeq	r2, r1, ip, rrx
   1200c:	andeq	r2, r1, ip, rrx
   12010:	andeq	r2, r1, ip, rrx
   12014:	andeq	r2, r1, ip, rrx
   12018:	andeq	r2, r1, ip, rrx
   1201c:	andeq	r2, r1, ip, rrx
   12020:	andeq	r2, r1, ip, rrx
   12024:	andeq	r2, r1, ip, rrx
   12028:	andeq	r2, r1, ip, rrx
   1202c:	andeq	r2, r1, ip, rrx
   12030:	andeq	r2, r1, ip, rrx
   12034:	andeq	r2, r1, ip, rrx
   12038:	andeq	r2, r1, ip, rrx
   1203c:	andeq	r2, r1, ip, rrx
   12040:	andeq	r2, r1, ip, rrx
   12044:	andeq	r2, r1, ip, rrx
   12048:	andeq	r2, r1, ip, rrx
   1204c:	andeq	r2, r1, ip, rrx
   12050:	andeq	r2, r1, ip, rrx
   12054:	andeq	r2, r1, ip, rrx
   12058:	andeq	r2, r1, ip, rrx
   1205c:	muleq	r1, r4, r0
   12060:	andeq	r2, r1, r8, lsl #5
   12064:	muleq	r1, r4, r0
   12068:	andeq	r2, r1, r0, lsl #1
   1206c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12070:	cmp	r0, #0
   12074:	beq	122e8 <abort@plt+0x13b0>
   12078:	ldr	r0, [fp, #16]
   1207c:	b	122ec <abort@plt+0x13b4>
   12080:	mov	r9, #0
   12084:	cmp	r6, #0
   12088:	beq	12284 <abort@plt+0x134c>
   1208c:	mov	sl, #0
   12090:	b	1206c <abort@plt+0x1134>
   12094:	mov	r9, #0
   12098:	cmn	lr, #1
   1209c:	beq	12268 <abort@plt+0x1330>
   120a0:	cmp	r6, #0
   120a4:	bne	1208c <abort@plt+0x1154>
   120a8:	cmp	lr, #1
   120ac:	beq	12284 <abort@plt+0x134c>
   120b0:	b	1208c <abort@plt+0x1154>
   120b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   120b8:	cmp	r0, #2
   120bc:	bne	122b0 <abort@plt+0x1378>
   120c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   120c4:	tst	r0, #1
   120c8:	bne	129f8 <abort@plt+0x1ac0>
   120cc:	mov	sl, #0
   120d0:	mov	r0, #92	; 0x5c
   120d4:	b	122c4 <abort@plt+0x138c>
   120d8:	mov	r0, #102	; 0x66
   120dc:	b	122d4 <abort@plt+0x139c>
   120e0:	mov	r2, #116	; 0x74
   120e4:	b	120f4 <abort@plt+0x11bc>
   120e8:	mov	r0, #98	; 0x62
   120ec:	b	122d4 <abort@plt+0x139c>
   120f0:	mov	r2, #114	; 0x72
   120f4:	ldr	r0, [sp, #64]	; 0x40
   120f8:	tst	r0, #1
   120fc:	mov	r0, r2
   12100:	bne	122d4 <abort@plt+0x139c>
   12104:	b	129f8 <abort@plt+0x1ac0>
   12108:	ldr	r0, [sp, #84]	; 0x54
   1210c:	tst	r0, #1
   12110:	beq	123c4 <abort@plt+0x148c>
   12114:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12118:	tst	r0, #1
   1211c:	bne	129f8 <abort@plt+0x1ac0>
   12120:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12124:	cmp	r0, #2
   12128:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1212c:	movwne	r0, #1
   12130:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12134:	orr	r0, r0, r2
   12138:	tst	r0, #1
   1213c:	beq	127b8 <abort@plt+0x1880>
   12140:	mov	r0, r8
   12144:	b	127ec <abort@plt+0x18b4>
   12148:	mov	sl, #0
   1214c:	mov	r5, #63	; 0x3f
   12150:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12154:	cmp	r0, #5
   12158:	beq	12578 <abort@plt+0x1640>
   1215c:	cmp	r0, #2
   12160:	bne	12618 <abort@plt+0x16e0>
   12164:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12168:	tst	r0, #1
   1216c:	mov	r9, #0
   12170:	beq	1206c <abort@plt+0x1134>
   12174:	b	129f8 <abort@plt+0x1ac0>
   12178:	mov	r0, #118	; 0x76
   1217c:	b	122d4 <abort@plt+0x139c>
   12180:	mov	r5, #39	; 0x27
   12184:	mov	r0, #1
   12188:	str	r0, [sp, #56]	; 0x38
   1218c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12190:	cmp	r0, #2
   12194:	bne	123e4 <abort@plt+0x14ac>
   12198:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1219c:	tst	r0, #1
   121a0:	bne	129f8 <abort@plt+0x1ac0>
   121a4:	ldr	r2, [sp, #72]	; 0x48
   121a8:	cmp	r2, #0
   121ac:	mov	r0, r2
   121b0:	movwne	r0, #1
   121b4:	clz	r1, r4
   121b8:	lsr	r1, r1, #5
   121bc:	orrs	r0, r0, r1
   121c0:	moveq	r2, r4
   121c4:	str	r2, [sp, #72]	; 0x48
   121c8:	moveq	r4, r0
   121cc:	cmp	r8, r4
   121d0:	movcc	r0, #39	; 0x27
   121d4:	strbcc	r0, [r7, r8]
   121d8:	add	r0, r8, #1
   121dc:	cmp	r0, r4
   121e0:	movcc	r1, #92	; 0x5c
   121e4:	strbcc	r1, [r7, r0]
   121e8:	add	r0, r8, #2
   121ec:	cmp	r0, r4
   121f0:	movcc	r1, #39	; 0x27
   121f4:	strbcc	r1, [r7, r0]
   121f8:	add	r8, r8, #3
   121fc:	mov	r0, #0
   12200:	str	r0, [fp, #-56]	; 0xffffffc8
   12204:	mov	sl, #0
   12208:	mov	r9, #1
   1220c:	b	1206c <abort@plt+0x1134>
   12210:	str	r4, [sp, #24]
   12214:	ldr	r0, [sp, #40]	; 0x28
   12218:	cmp	r0, #1
   1221c:	bne	123ec <abort@plt+0x14b4>
   12220:	str	lr, [sp, #28]
   12224:	bl	10e54 <__ctype_b_loc@plt>
   12228:	ldr	ip, [fp, #-84]	; 0xffffffac
   1222c:	ldr	r0, [r0]
   12230:	add	r0, r0, r5, lsl #1
   12234:	ldrb	r0, [r0, #1]
   12238:	ubfx	r9, r0, #6, #1
   1223c:	mov	r1, #1
   12240:	ldr	r4, [sp, #24]
   12244:	ldr	r0, [sp, #52]	; 0x34
   12248:	orr	r0, r9, r0
   1224c:	mov	r2, r1
   12250:	cmp	r1, #1
   12254:	bhi	12620 <abort@plt+0x16e8>
   12258:	tst	r0, #1
   1225c:	beq	12620 <abort@plt+0x16e8>
   12260:	ldr	lr, [sp, #28]
   12264:	b	1206c <abort@plt+0x1134>
   12268:	cmp	r6, #0
   1226c:	ldrbeq	r0, [ip, #1]
   12270:	cmpeq	r0, #0
   12274:	beq	12284 <abort@plt+0x134c>
   12278:	mvn	lr, #0
   1227c:	mov	sl, #0
   12280:	b	1206c <abort@plt+0x1134>
   12284:	mov	r1, #1
   12288:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1228c:	cmp	r0, #2
   12290:	bne	122a8 <abort@plt+0x1370>
   12294:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12298:	tst	r0, #1
   1229c:	mov	r9, r1
   122a0:	beq	1206c <abort@plt+0x1134>
   122a4:	b	129f8 <abort@plt+0x1ac0>
   122a8:	mov	r9, r1
   122ac:	b	1206c <abort@plt+0x1134>
   122b0:	mov	sl, #0
   122b4:	mov	r0, #92	; 0x5c
   122b8:	ldr	r1, [sp, #48]	; 0x30
   122bc:	cmp	r1, #0
   122c0:	beq	122d4 <abort@plt+0x139c>
   122c4:	mov	r9, #0
   122c8:	cmp	sl, #0
   122cc:	beq	12884 <abort@plt+0x194c>
   122d0:	b	128c0 <abort@plt+0x1988>
   122d4:	mov	r9, #0
   122d8:	ldr	r1, [sp, #84]	; 0x54
   122dc:	tst	r1, #1
   122e0:	mov	sl, #0
   122e4:	bne	12324 <abort@plt+0x13ec>
   122e8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   122ec:	cmp	r0, #0
   122f0:	mov	r0, r5
   122f4:	beq	12318 <abort@plt+0x13e0>
   122f8:	ubfx	r0, r5, #5, #3
   122fc:	ldr	r1, [fp, #16]
   12300:	ldr	r0, [r1, r0, lsl #2]
   12304:	and	r1, r5, #31
   12308:	mov	r2, #1
   1230c:	tst	r0, r2, lsl r1
   12310:	mov	r0, r5
   12314:	bne	12324 <abort@plt+0x13ec>
   12318:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1231c:	cmp	r1, #0
   12320:	beq	1287c <abort@plt+0x1944>
   12324:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12328:	tst	r1, #1
   1232c:	bne	129f8 <abort@plt+0x1ac0>
   12330:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12334:	cmp	r1, #2
   12338:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1233c:	movwne	r1, #1
   12340:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12344:	orr	r1, r1, r2
   12348:	tst	r1, #1
   1234c:	beq	12358 <abort@plt+0x1420>
   12350:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12354:	b	12394 <abort@plt+0x145c>
   12358:	cmp	r8, r4
   1235c:	movcc	r1, #39	; 0x27
   12360:	strbcc	r1, [r7, r8]
   12364:	add	r1, r8, #1
   12368:	cmp	r1, r4
   1236c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12370:	movcc	r2, #36	; 0x24
   12374:	strbcc	r2, [r7, r1]
   12378:	add	r1, r8, #2
   1237c:	cmp	r1, r4
   12380:	movcc	r2, #39	; 0x27
   12384:	strbcc	r2, [r7, r1]
   12388:	add	r8, r8, #3
   1238c:	mov	r1, #1
   12390:	str	r1, [fp, #-56]	; 0xffffffc8
   12394:	cmp	r8, r4
   12398:	movcc	r1, #92	; 0x5c
   1239c:	strbcc	r1, [r7, r8]
   123a0:	add	r8, r8, #1
   123a4:	cmp	r8, r4
   123a8:	strbcc	r0, [r7, r8]
   123ac:	and	r5, r5, r9
   123b0:	add	r8, r8, #1
   123b4:	add	r6, r6, #1
   123b8:	cmn	lr, #1
   123bc:	bne	11d98 <abort@plt+0xe60>
   123c0:	b	11da4 <abort@plt+0xe6c>
   123c4:	mov	r9, #0
   123c8:	ldr	r0, [sp, #36]	; 0x24
   123cc:	cmp	r0, #0
   123d0:	mov	sl, #0
   123d4:	mov	r5, #0
   123d8:	beq	122e8 <abort@plt+0x13b0>
   123dc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   123e0:	b	123b4 <abort@plt+0x147c>
   123e4:	mov	r9, #1
   123e8:	b	1206c <abort@plt+0x1134>
   123ec:	mov	r0, #0
   123f0:	str	r0, [fp, #-36]	; 0xffffffdc
   123f4:	str	r0, [fp, #-40]	; 0xffffffd8
   123f8:	cmn	lr, #1
   123fc:	bne	12410 <abort@plt+0x14d8>
   12400:	mov	r0, ip
   12404:	bl	10e6c <strlen@plt>
   12408:	ldr	ip, [fp, #-84]	; 0xffffffac
   1240c:	mov	lr, r0
   12410:	add	r0, ip, r6
   12414:	str	r0, [sp, #20]
   12418:	mov	r9, #1
   1241c:	mov	r7, #0
   12420:	sub	r4, fp, #40	; 0x28
   12424:	str	lr, [sp, #28]
   12428:	str	r7, [sp, #44]	; 0x2c
   1242c:	add	r7, r7, r6
   12430:	add	r1, ip, r7
   12434:	sub	r2, lr, r7
   12438:	sub	r0, fp, #44	; 0x2c
   1243c:	mov	r3, r4
   12440:	bl	146f4 <abort@plt+0x37bc>
   12444:	cmp	r0, #0
   12448:	beq	12908 <abort@plt+0x19d0>
   1244c:	cmn	r0, #1
   12450:	beq	128c8 <abort@plt+0x1990>
   12454:	cmn	r0, #2
   12458:	ldr	lr, [sp, #28]
   1245c:	beq	128d0 <abort@plt+0x1998>
   12460:	cmp	r0, #2
   12464:	mov	r1, #0
   12468:	movwcc	r1, #1
   1246c:	ldr	r2, [sp, #60]	; 0x3c
   12470:	eor	r2, r2, #1
   12474:	orrs	r1, r2, r1
   12478:	ldr	r4, [sp, #24]
   1247c:	bne	1253c <abort@plt+0x1604>
   12480:	ldr	r1, [sp, #44]	; 0x2c
   12484:	ldr	r2, [sp, #20]
   12488:	add	r1, r2, r1
   1248c:	mov	r2, #1
   12490:	ldrb	r3, [r1, r2]
   12494:	sub	r3, r3, #91	; 0x5b
   12498:	cmp	r3, #33	; 0x21
   1249c:	bhi	12530 <abort@plt+0x15f8>
   124a0:	add	r7, pc, #0
   124a4:	ldr	pc, [r7, r3, lsl #2]
   124a8:	strdeq	r2, [r1], -r0
   124ac:	strdeq	r2, [r1], -r0
   124b0:	andeq	r2, r1, r0, lsr r5
   124b4:	strdeq	r2, [r1], -r0
   124b8:	andeq	r2, r1, r0, lsr r5
   124bc:	strdeq	r2, [r1], -r0
   124c0:	andeq	r2, r1, r0, lsr r5
   124c4:	andeq	r2, r1, r0, lsr r5
   124c8:	andeq	r2, r1, r0, lsr r5
   124cc:	andeq	r2, r1, r0, lsr r5
   124d0:	andeq	r2, r1, r0, lsr r5
   124d4:	andeq	r2, r1, r0, lsr r5
   124d8:	andeq	r2, r1, r0, lsr r5
   124dc:	andeq	r2, r1, r0, lsr r5
   124e0:	andeq	r2, r1, r0, lsr r5
   124e4:	andeq	r2, r1, r0, lsr r5
   124e8:	andeq	r2, r1, r0, lsr r5
   124ec:	andeq	r2, r1, r0, lsr r5
   124f0:	andeq	r2, r1, r0, lsr r5
   124f4:	andeq	r2, r1, r0, lsr r5
   124f8:	andeq	r2, r1, r0, lsr r5
   124fc:	andeq	r2, r1, r0, lsr r5
   12500:	andeq	r2, r1, r0, lsr r5
   12504:	andeq	r2, r1, r0, lsr r5
   12508:	andeq	r2, r1, r0, lsr r5
   1250c:	andeq	r2, r1, r0, lsr r5
   12510:	andeq	r2, r1, r0, lsr r5
   12514:	andeq	r2, r1, r0, lsr r5
   12518:	andeq	r2, r1, r0, lsr r5
   1251c:	andeq	r2, r1, r0, lsr r5
   12520:	andeq	r2, r1, r0, lsr r5
   12524:	andeq	r2, r1, r0, lsr r5
   12528:	andeq	r2, r1, r0, lsr r5
   1252c:	strdeq	r2, [r1], -r0
   12530:	add	r2, r2, #1
   12534:	cmp	r2, r0
   12538:	bcc	12490 <abort@plt+0x1558>
   1253c:	ldr	r7, [sp, #44]	; 0x2c
   12540:	add	r7, r0, r7
   12544:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12548:	bl	10db8 <iswprint@plt>
   1254c:	cmp	r0, #0
   12550:	movwne	r0, #1
   12554:	and	r9, r9, r0
   12558:	sub	r4, fp, #40	; 0x28
   1255c:	mov	r0, r4
   12560:	bl	10d7c <mbsinit@plt>
   12564:	ldr	lr, [sp, #28]
   12568:	cmp	r0, #0
   1256c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12570:	beq	12428 <abort@plt+0x14f0>
   12574:	b	12910 <abort@plt+0x19d8>
   12578:	ldr	r0, [sp, #32]
   1257c:	cmp	r0, #0
   12580:	beq	12618 <abort@plt+0x16e0>
   12584:	add	r0, r6, #2
   12588:	cmp	r0, lr
   1258c:	bcs	12618 <abort@plt+0x16e0>
   12590:	add	r1, ip, r6
   12594:	ldrb	r1, [r1, #1]
   12598:	cmp	r1, #63	; 0x3f
   1259c:	bne	12618 <abort@plt+0x16e0>
   125a0:	ldrb	r9, [ip, r0]
   125a4:	sub	r2, r9, #33	; 0x21
   125a8:	cmp	r2, #29
   125ac:	bhi	12618 <abort@plt+0x16e0>
   125b0:	mov	r3, #1
   125b4:	movw	r1, #20929	; 0x51c1
   125b8:	movt	r1, #14336	; 0x3800
   125bc:	tst	r1, r3, lsl r2
   125c0:	beq	12618 <abort@plt+0x16e0>
   125c4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   125c8:	tst	r1, #1
   125cc:	bne	129f8 <abort@plt+0x1ac0>
   125d0:	cmp	r8, r4
   125d4:	movcc	r1, #63	; 0x3f
   125d8:	strbcc	r1, [r7, r8]
   125dc:	add	r2, r8, #1
   125e0:	cmp	r2, r4
   125e4:	movcc	r1, #34	; 0x22
   125e8:	strbcc	r1, [r7, r2]
   125ec:	add	r2, r8, #2
   125f0:	cmp	r2, r4
   125f4:	movcc	r1, #34	; 0x22
   125f8:	strbcc	r1, [r7, r2]
   125fc:	add	r2, r8, #3
   12600:	cmp	r2, r4
   12604:	movcc	r1, #63	; 0x3f
   12608:	strbcc	r1, [r7, r2]
   1260c:	add	r8, r8, #4
   12610:	mov	r6, r0
   12614:	mov	r5, r9
   12618:	mov	r9, #0
   1261c:	b	1206c <abort@plt+0x1134>
   12620:	add	r1, r2, r6
   12624:	str	r1, [sp, #44]	; 0x2c
   12628:	add	r1, r6, #1
   1262c:	mov	r3, #0
   12630:	ldr	lr, [sp, #28]
   12634:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12638:	tst	r0, #1
   1263c:	bne	12730 <abort@plt+0x17f8>
   12640:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12644:	tst	r2, #1
   12648:	bne	129f8 <abort@plt+0x1ac0>
   1264c:	cmp	r6, #2
   12650:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12654:	movwne	r3, #1
   12658:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1265c:	orr	r3, r3, r2
   12660:	tst	r3, #1
   12664:	bne	126a0 <abort@plt+0x1768>
   12668:	cmp	r8, r4
   1266c:	movcc	r2, #39	; 0x27
   12670:	strbcc	r2, [r7, r8]
   12674:	add	r3, r8, #1
   12678:	cmp	r3, r4
   1267c:	movcc	r2, #36	; 0x24
   12680:	strbcc	r2, [r7, r3]
   12684:	add	r3, r8, #2
   12688:	cmp	r3, r4
   1268c:	movcc	r2, #39	; 0x27
   12690:	strbcc	r2, [r7, r3]
   12694:	add	r8, r8, #3
   12698:	mov	r2, #1
   1269c:	str	r2, [fp, #-56]	; 0xffffffc8
   126a0:	cmp	r8, r4
   126a4:	movcc	r2, #92	; 0x5c
   126a8:	strbcc	r2, [r7, r8]
   126ac:	add	r3, r8, #1
   126b0:	cmp	r3, r4
   126b4:	bcs	126d4 <abort@plt+0x179c>
   126b8:	and	r7, r5, #192	; 0xc0
   126bc:	mov	r2, #48	; 0x30
   126c0:	orr	r7, r2, r7, lsr #6
   126c4:	ldr	r6, [sp, #80]	; 0x50
   126c8:	strb	r7, [r6, r3]
   126cc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   126d0:	ldr	r7, [sp, #80]	; 0x50
   126d4:	add	r3, r8, #2
   126d8:	cmp	r3, r4
   126dc:	bcs	126fc <abort@plt+0x17c4>
   126e0:	lsr	r7, r5, #3
   126e4:	mov	r2, #6
   126e8:	bfi	r7, r2, #3, #29
   126ec:	ldr	r6, [sp, #80]	; 0x50
   126f0:	strb	r7, [r6, r3]
   126f4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   126f8:	ldr	r7, [sp, #80]	; 0x50
   126fc:	mov	r2, #6
   12700:	bfi	r5, r2, #3, #29
   12704:	add	r8, r8, #3
   12708:	mov	r3, #1
   1270c:	b	12754 <abort@plt+0x181c>
   12710:	ldr	r7, [sp, #80]	; 0x50
   12714:	cmp	r8, r4
   12718:	strbcc	r5, [r7, r8]
   1271c:	ldrb	r5, [ip, r1]
   12720:	add	r1, r1, #1
   12724:	add	r8, r8, #1
   12728:	tst	r0, #1
   1272c:	beq	12640 <abort@plt+0x1708>
   12730:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12734:	tst	r2, #1
   12738:	beq	1274c <abort@plt+0x1814>
   1273c:	cmp	r8, r4
   12740:	movcc	r2, #92	; 0x5c
   12744:	strbcc	r2, [r7, r8]
   12748:	add	r8, r8, #1
   1274c:	mov	r2, #0
   12750:	str	r2, [fp, #-52]	; 0xffffffcc
   12754:	and	sl, r3, #1
   12758:	ldr	r2, [sp, #44]	; 0x2c
   1275c:	cmp	r2, r1
   12760:	bls	1286c <abort@plt+0x1934>
   12764:	cmp	sl, #0
   12768:	movwne	sl, #1
   1276c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12770:	mvn	r7, r2
   12774:	orr	r7, r7, sl
   12778:	tst	r7, #1
   1277c:	bne	12710 <abort@plt+0x17d8>
   12780:	cmp	r8, r4
   12784:	ldrcc	r7, [sp, #80]	; 0x50
   12788:	movcc	r2, #39	; 0x27
   1278c:	strbcc	r2, [r7, r8]
   12790:	add	r7, r8, #1
   12794:	cmp	r7, r4
   12798:	ldrcc	r6, [sp, #80]	; 0x50
   1279c:	movcc	r2, #39	; 0x27
   127a0:	strbcc	r2, [r6, r7]
   127a4:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   127a8:	add	r8, r8, #2
   127ac:	mov	r2, #0
   127b0:	str	r2, [fp, #-56]	; 0xffffffc8
   127b4:	b	12710 <abort@plt+0x17d8>
   127b8:	cmp	r8, r4
   127bc:	movcc	r0, #39	; 0x27
   127c0:	strbcc	r0, [r7, r8]
   127c4:	add	r0, r8, #1
   127c8:	cmp	r0, r4
   127cc:	movcc	r1, #36	; 0x24
   127d0:	strbcc	r1, [r7, r0]
   127d4:	add	r0, r8, #2
   127d8:	cmp	r0, r4
   127dc:	movcc	r1, #39	; 0x27
   127e0:	strbcc	r1, [r7, r0]
   127e4:	add	r0, r8, #3
   127e8:	mov	r2, #1
   127ec:	cmp	r0, r4
   127f0:	movcc	r1, #92	; 0x5c
   127f4:	strbcc	r1, [r7, r0]
   127f8:	str	r2, [fp, #-56]	; 0xffffffc8
   127fc:	add	r8, r0, #1
   12800:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12804:	cmp	r1, #2
   12808:	beq	1285c <abort@plt+0x1924>
   1280c:	add	r1, r6, #1
   12810:	mov	r9, #0
   12814:	mov	sl, #1
   12818:	mov	r5, #48	; 0x30
   1281c:	cmp	r1, lr
   12820:	bcs	1206c <abort@plt+0x1134>
   12824:	ldrb	r1, [ip, r1]
   12828:	sub	r1, r1, #48	; 0x30
   1282c:	uxtb	r1, r1
   12830:	cmp	r1, #9
   12834:	bhi	1206c <abort@plt+0x1134>
   12838:	cmp	r8, r4
   1283c:	movcc	r1, #48	; 0x30
   12840:	strbcc	r1, [r7, r8]
   12844:	add	r1, r0, #2
   12848:	cmp	r1, r4
   1284c:	movcc	r2, #48	; 0x30
   12850:	strbcc	r2, [r7, r1]
   12854:	add	r8, r0, #3
   12858:	b	1206c <abort@plt+0x1134>
   1285c:	mov	r0, #48	; 0x30
   12860:	mov	sl, #1
   12864:	mov	r9, #0
   12868:	b	12318 <abort@plt+0x13e0>
   1286c:	sub	r6, r1, #1
   12870:	cmp	sl, #0
   12874:	movwne	sl, #1
   12878:	mov	r0, r5
   1287c:	cmp	sl, #0
   12880:	bne	128c0 <abort@plt+0x1988>
   12884:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12888:	tst	r1, #1
   1288c:	beq	128c0 <abort@plt+0x1988>
   12890:	cmp	r8, r4
   12894:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12898:	movcc	r1, #39	; 0x27
   1289c:	strbcc	r1, [r7, r8]
   128a0:	add	r1, r8, #1
   128a4:	cmp	r1, r4
   128a8:	movcc	r2, #39	; 0x27
   128ac:	strbcc	r2, [r7, r1]
   128b0:	add	r8, r8, #2
   128b4:	mov	r1, #0
   128b8:	str	r1, [fp, #-56]	; 0xffffffc8
   128bc:	b	123a4 <abort@plt+0x146c>
   128c0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   128c4:	b	123a4 <abort@plt+0x146c>
   128c8:	mov	r9, #0
   128cc:	b	12908 <abort@plt+0x19d0>
   128d0:	mov	r9, #0
   128d4:	cmp	r7, lr
   128d8:	bcs	12908 <abort@plt+0x19d0>
   128dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   128e0:	ldr	r7, [sp, #44]	; 0x2c
   128e4:	ldr	r0, [sp, #20]
   128e8:	ldrb	r0, [r0, r7]
   128ec:	cmp	r0, #0
   128f0:	beq	12910 <abort@plt+0x19d8>
   128f4:	add	r7, r7, #1
   128f8:	add	r0, r6, r7
   128fc:	cmp	r0, lr
   12900:	bcc	128e4 <abort@plt+0x19ac>
   12904:	b	12910 <abort@plt+0x19d8>
   12908:	ldr	ip, [fp, #-84]	; 0xffffffac
   1290c:	ldr	r7, [sp, #44]	; 0x2c
   12910:	mov	r1, r7
   12914:	ldr	r7, [sp, #80]	; 0x50
   12918:	b	12240 <abort@plt+0x1308>
   1291c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12920:	eor	r0, r1, #2
   12924:	orr	r0, r0, r8
   12928:	clz	r0, r0
   1292c:	lsr	r0, r0, #5
   12930:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12934:	tst	r2, r0
   12938:	bne	129f8 <abort@plt+0x1ac0>
   1293c:	cmp	r1, #2
   12940:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12944:	movwne	r0, #1
   12948:	orr	r0, r2, r0
   1294c:	tst	r0, #1
   12950:	ldreq	r0, [sp, #56]	; 0x38
   12954:	eoreq	r0, r0, #1
   12958:	tsteq	r0, #1
   1295c:	bne	12990 <abort@plt+0x1a58>
   12960:	mov	r9, lr
   12964:	tst	r5, #1
   12968:	bne	12a60 <abort@plt+0x1b28>
   1296c:	ldr	r0, [sp, #72]	; 0x48
   12970:	cmp	r0, #0
   12974:	beq	12990 <abort@plt+0x1a58>
   12978:	mov	r5, #0
   1297c:	cmp	r4, #0
   12980:	ldr	r0, [sp, #84]	; 0x54
   12984:	mov	sl, r2
   12988:	ldr	r6, [sp, #72]	; 0x48
   1298c:	beq	11b28 <abort@plt+0xbf0>
   12990:	ldr	r1, [sp, #92]	; 0x5c
   12994:	clz	r0, r1
   12998:	lsr	r0, r0, #5
   1299c:	orr	r0, r0, r2
   129a0:	tst	r0, #1
   129a4:	bne	129d0 <abort@plt+0x1a98>
   129a8:	ldrb	r0, [r1]
   129ac:	cmp	r0, #0
   129b0:	beq	129d0 <abort@plt+0x1a98>
   129b4:	add	r1, r1, #1
   129b8:	cmp	r8, r4
   129bc:	strbcc	r0, [r7, r8]
   129c0:	add	r8, r8, #1
   129c4:	ldrb	r0, [r1], #1
   129c8:	cmp	r0, #0
   129cc:	bne	129b8 <abort@plt+0x1a80>
   129d0:	cmp	r8, r4
   129d4:	movcc	r0, #0
   129d8:	strbcc	r0, [r7, r8]
   129dc:	b	12a54 <abort@plt+0x1b1c>
   129e0:	ldr	ip, [fp, #-84]	; 0xffffffac
   129e4:	mov	lr, r4
   129e8:	mov	r4, r5
   129ec:	b	129f8 <abort@plt+0x1ac0>
   129f0:	ldr	r7, [sp, #80]	; 0x50
   129f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   129f8:	mov	r0, #0
   129fc:	ldr	r1, [fp, #12]
   12a00:	bic	r1, r1, #2
   12a04:	ldr	r2, [sp, #84]	; 0x54
   12a08:	tst	r2, #1
   12a0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12a10:	mov	r2, r3
   12a14:	movwne	r2, #4
   12a18:	cmp	r3, #2
   12a1c:	movne	r2, r3
   12a20:	str	r2, [sp]
   12a24:	str	r1, [sp, #4]
   12a28:	str	r0, [sp, #8]
   12a2c:	ldr	r0, [sp, #68]	; 0x44
   12a30:	str	r0, [sp, #12]
   12a34:	ldr	r0, [sp, #76]	; 0x4c
   12a38:	str	r0, [sp, #16]
   12a3c:	mov	r0, r7
   12a40:	mov	r1, r4
   12a44:	mov	r2, ip
   12a48:	mov	r3, lr
   12a4c:	bl	11aa0 <abort@plt+0xb68>
   12a50:	mov	r8, r0
   12a54:	mov	r0, r8
   12a58:	sub	sp, fp, #28
   12a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a60:	mov	r0, #5
   12a64:	str	r0, [sp]
   12a68:	ldr	r0, [fp, #12]
   12a6c:	str	r0, [sp, #4]
   12a70:	ldr	r0, [fp, #16]
   12a74:	str	r0, [sp, #8]
   12a78:	ldr	r0, [sp, #68]	; 0x44
   12a7c:	str	r0, [sp, #12]
   12a80:	ldr	r0, [sp, #76]	; 0x4c
   12a84:	str	r0, [sp, #16]
   12a88:	mov	r0, r7
   12a8c:	ldr	r1, [sp, #72]	; 0x48
   12a90:	ldr	r2, [fp, #-84]	; 0xffffffac
   12a94:	mov	r3, r9
   12a98:	b	12a4c <abort@plt+0x1b14>
   12a9c:	bl	10f38 <abort@plt>
   12aa0:	mov	r3, r2
   12aa4:	mov	r2, #0
   12aa8:	b	12aac <abort@plt+0x1b74>
   12aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ab0:	add	fp, sp, #28
   12ab4:	sub	sp, sp, #36	; 0x24
   12ab8:	mov	r4, r2
   12abc:	str	r2, [sp, #24]
   12ac0:	mov	r5, r1
   12ac4:	mov	r6, r0
   12ac8:	str	r0, [sp, #20]
   12acc:	movw	r8, #24912	; 0x6150
   12ad0:	movt	r8, #2
   12ad4:	cmp	r3, #0
   12ad8:	movne	r8, r3
   12adc:	bl	10e78 <__errno_location@plt>
   12ae0:	str	r0, [sp, #28]
   12ae4:	ldm	r8, {r3, r9}
   12ae8:	ldr	r1, [r8, #40]	; 0x28
   12aec:	ldr	r2, [r8, #44]	; 0x2c
   12af0:	ldr	r7, [r0]
   12af4:	str	r7, [sp, #32]
   12af8:	add	sl, r8, #8
   12afc:	cmp	r4, #0
   12b00:	orreq	r9, r9, #1
   12b04:	stm	sp, {r3, r9, sl}
   12b08:	str	r1, [sp, #12]
   12b0c:	str	r2, [sp, #16]
   12b10:	mov	r0, #0
   12b14:	mov	r1, #0
   12b18:	mov	r2, r6
   12b1c:	mov	r3, r5
   12b20:	mov	r7, r5
   12b24:	bl	11aa0 <abort@plt+0xb68>
   12b28:	mov	r5, r0
   12b2c:	add	r4, r0, #1
   12b30:	mov	r0, r4
   12b34:	bl	139b0 <abort@plt+0x2a78>
   12b38:	mov	r6, r0
   12b3c:	ldr	r0, [r8]
   12b40:	ldr	r1, [r8, #40]	; 0x28
   12b44:	ldr	r2, [r8, #44]	; 0x2c
   12b48:	stm	sp, {r0, r9, sl}
   12b4c:	str	r1, [sp, #12]
   12b50:	str	r2, [sp, #16]
   12b54:	mov	r0, r6
   12b58:	mov	r1, r4
   12b5c:	ldr	r2, [sp, #20]
   12b60:	mov	r3, r7
   12b64:	bl	11aa0 <abort@plt+0xb68>
   12b68:	ldr	r0, [sp, #24]
   12b6c:	ldr	r1, [sp, #32]
   12b70:	ldr	r2, [sp, #28]
   12b74:	str	r1, [r2]
   12b78:	cmp	r0, #0
   12b7c:	strne	r5, [r0]
   12b80:	mov	r0, r6
   12b84:	sub	sp, fp, #28
   12b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b90:	add	fp, sp, #24
   12b94:	movw	r8, #24800	; 0x60e0
   12b98:	movt	r8, #2
   12b9c:	ldr	r4, [r8]
   12ba0:	movw	r5, #24804	; 0x60e4
   12ba4:	movt	r5, #2
   12ba8:	ldr	r0, [r5]
   12bac:	cmp	r0, #2
   12bb0:	blt	12bdc <abort@plt+0x1ca4>
   12bb4:	add	r7, r4, #12
   12bb8:	mov	r6, #0
   12bbc:	ldr	r0, [r7, r6, lsl #3]
   12bc0:	bl	145a0 <abort@plt+0x3668>
   12bc4:	add	r0, r6, #1
   12bc8:	ldr	r1, [r5]
   12bcc:	add	r2, r6, #2
   12bd0:	cmp	r2, r1
   12bd4:	mov	r6, r0
   12bd8:	blt	12bbc <abort@plt+0x1c84>
   12bdc:	ldr	r0, [r4, #4]
   12be0:	movw	r7, #24960	; 0x6180
   12be4:	movt	r7, #2
   12be8:	cmp	r0, r7
   12bec:	beq	12c04 <abort@plt+0x1ccc>
   12bf0:	bl	145a0 <abort@plt+0x3668>
   12bf4:	movw	r0, #24808	; 0x60e8
   12bf8:	movt	r0, #2
   12bfc:	mov	r6, #256	; 0x100
   12c00:	strd	r6, [r0]
   12c04:	movw	r6, #24808	; 0x60e8
   12c08:	movt	r6, #2
   12c0c:	cmp	r4, r6
   12c10:	beq	12c20 <abort@plt+0x1ce8>
   12c14:	mov	r0, r4
   12c18:	bl	145a0 <abort@plt+0x3668>
   12c1c:	str	r6, [r8]
   12c20:	mov	r0, #1
   12c24:	str	r0, [r5]
   12c28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c2c:	movw	r3, #24912	; 0x6150
   12c30:	movt	r3, #2
   12c34:	mvn	r2, #0
   12c38:	b	12c3c <abort@plt+0x1d04>
   12c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c40:	add	fp, sp, #28
   12c44:	sub	sp, sp, #44	; 0x2c
   12c48:	mov	r7, r3
   12c4c:	str	r2, [sp, #36]	; 0x24
   12c50:	str	r1, [sp, #32]
   12c54:	mov	r5, r0
   12c58:	bl	10e78 <__errno_location@plt>
   12c5c:	cmp	r5, #0
   12c60:	blt	12dcc <abort@plt+0x1e94>
   12c64:	cmn	r5, #-2147483647	; 0x80000001
   12c68:	beq	12dcc <abort@plt+0x1e94>
   12c6c:	movw	r4, #24800	; 0x60e0
   12c70:	movt	r4, #2
   12c74:	ldr	r6, [r4]
   12c78:	str	r0, [sp, #28]
   12c7c:	ldr	r0, [r0]
   12c80:	str	r0, [sp, #24]
   12c84:	movw	r8, #24804	; 0x60e4
   12c88:	movt	r8, #2
   12c8c:	ldr	r1, [r8]
   12c90:	cmp	r1, r5
   12c94:	ble	12ca0 <abort@plt+0x1d68>
   12c98:	mov	sl, r6
   12c9c:	b	12d08 <abort@plt+0x1dd0>
   12ca0:	str	r1, [fp, #-32]	; 0xffffffe0
   12ca4:	mov	r0, #8
   12ca8:	str	r0, [sp]
   12cac:	movw	r9, #24808	; 0x60e8
   12cb0:	movt	r9, #2
   12cb4:	subs	r0, r6, r9
   12cb8:	movne	r0, r6
   12cbc:	add	r2, r5, #1
   12cc0:	sub	r2, r2, r1
   12cc4:	sub	r1, fp, #32
   12cc8:	mvn	r3, #-2147483648	; 0x80000000
   12ccc:	bl	13a98 <abort@plt+0x2b60>
   12cd0:	mov	sl, r0
   12cd4:	str	r0, [r4]
   12cd8:	cmp	r6, r9
   12cdc:	ldrdeq	r0, [r9]
   12ce0:	stmeq	sl, {r0, r1}
   12ce4:	ldr	r1, [r8]
   12ce8:	add	r0, sl, r1, lsl #3
   12cec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12cf0:	sub	r1, r2, r1
   12cf4:	lsl	r2, r1, #3
   12cf8:	mov	r1, #0
   12cfc:	bl	10e90 <memset@plt>
   12d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d04:	str	r0, [r8]
   12d08:	mov	r9, sl
   12d0c:	ldr	r6, [r9, r5, lsl #3]!
   12d10:	ldr	r4, [r9, #4]!
   12d14:	ldm	r7, {r0, r1}
   12d18:	ldr	r2, [r7, #40]	; 0x28
   12d1c:	ldr	r3, [r7, #44]	; 0x2c
   12d20:	orr	r8, r1, #1
   12d24:	add	r1, r7, #8
   12d28:	stm	sp, {r0, r8}
   12d2c:	str	r1, [sp, #20]
   12d30:	add	r0, sp, #8
   12d34:	stm	r0, {r1, r2, r3}
   12d38:	mov	r0, r4
   12d3c:	mov	r1, r6
   12d40:	ldr	r2, [sp, #32]
   12d44:	ldr	r3, [sp, #36]	; 0x24
   12d48:	bl	11aa0 <abort@plt+0xb68>
   12d4c:	cmp	r6, r0
   12d50:	bhi	12db4 <abort@plt+0x1e7c>
   12d54:	add	r6, r0, #1
   12d58:	str	r6, [sl, r5, lsl #3]
   12d5c:	movw	r0, #24960	; 0x6180
   12d60:	movt	r0, #2
   12d64:	cmp	r4, r0
   12d68:	beq	12d74 <abort@plt+0x1e3c>
   12d6c:	mov	r0, r4
   12d70:	bl	145a0 <abort@plt+0x3668>
   12d74:	mov	r0, r6
   12d78:	bl	139b0 <abort@plt+0x2a78>
   12d7c:	mov	r4, r0
   12d80:	str	r0, [r9]
   12d84:	ldr	r0, [r7]
   12d88:	ldr	r1, [r7, #40]	; 0x28
   12d8c:	ldr	r2, [r7, #44]	; 0x2c
   12d90:	stm	sp, {r0, r8}
   12d94:	ldr	r0, [sp, #20]
   12d98:	add	r3, sp, #8
   12d9c:	stm	r3, {r0, r1, r2}
   12da0:	mov	r0, r4
   12da4:	mov	r1, r6
   12da8:	ldr	r2, [sp, #32]
   12dac:	ldr	r3, [sp, #36]	; 0x24
   12db0:	bl	11aa0 <abort@plt+0xb68>
   12db4:	ldr	r0, [sp, #28]
   12db8:	ldr	r1, [sp, #24]
   12dbc:	str	r1, [r0]
   12dc0:	mov	r0, r4
   12dc4:	sub	sp, fp, #28
   12dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dcc:	bl	10f38 <abort@plt>
   12dd0:	movw	r3, #24912	; 0x6150
   12dd4:	movt	r3, #2
   12dd8:	b	12c3c <abort@plt+0x1d04>
   12ddc:	mov	r1, r0
   12de0:	mov	r0, #0
   12de4:	b	12c2c <abort@plt+0x1cf4>
   12de8:	mov	r2, r1
   12dec:	mov	r1, r0
   12df0:	mov	r0, #0
   12df4:	b	12dd0 <abort@plt+0x1e98>
   12df8:	push	{r4, r5, r6, sl, fp, lr}
   12dfc:	add	fp, sp, #16
   12e00:	sub	sp, sp, #48	; 0x30
   12e04:	mov	r4, r2
   12e08:	mov	r5, r0
   12e0c:	mov	r6, sp
   12e10:	mov	r0, r6
   12e14:	bl	12e34 <abort@plt+0x1efc>
   12e18:	mov	r0, r5
   12e1c:	mov	r1, r4
   12e20:	mvn	r2, #0
   12e24:	mov	r3, r6
   12e28:	bl	12c3c <abort@plt+0x1d04>
   12e2c:	sub	sp, fp, #16
   12e30:	pop	{r4, r5, r6, sl, fp, pc}
   12e34:	vmov.i32	q8, #0	; 0x00000000
   12e38:	mov	r2, #32
   12e3c:	mov	r3, r0
   12e40:	vst1.32	{d16-d17}, [r3], r2
   12e44:	vst1.32	{d16-d17}, [r3]
   12e48:	add	r2, r0, #16
   12e4c:	vst1.32	{d16-d17}, [r2]
   12e50:	cmp	r1, #10
   12e54:	strne	r1, [r0]
   12e58:	bxne	lr
   12e5c:	push	{fp, lr}
   12e60:	mov	fp, sp
   12e64:	bl	10f38 <abort@plt>
   12e68:	push	{r4, r5, r6, r7, fp, lr}
   12e6c:	add	fp, sp, #16
   12e70:	sub	sp, sp, #48	; 0x30
   12e74:	mov	r4, r3
   12e78:	mov	r5, r2
   12e7c:	mov	r6, r0
   12e80:	mov	r7, sp
   12e84:	mov	r0, r7
   12e88:	bl	12e34 <abort@plt+0x1efc>
   12e8c:	mov	r0, r6
   12e90:	mov	r1, r5
   12e94:	mov	r2, r4
   12e98:	mov	r3, r7
   12e9c:	bl	12c3c <abort@plt+0x1d04>
   12ea0:	sub	sp, fp, #16
   12ea4:	pop	{r4, r5, r6, r7, fp, pc}
   12ea8:	mov	r2, r1
   12eac:	mov	r1, r0
   12eb0:	mov	r0, #0
   12eb4:	b	12df8 <abort@plt+0x1ec0>
   12eb8:	mov	r3, r2
   12ebc:	mov	r2, r1
   12ec0:	mov	r1, r0
   12ec4:	mov	r0, #0
   12ec8:	b	12e68 <abort@plt+0x1f30>
   12ecc:	push	{r4, r5, r6, sl, fp, lr}
   12ed0:	add	fp, sp, #16
   12ed4:	sub	sp, sp, #48	; 0x30
   12ed8:	mov	r4, r1
   12edc:	mov	r5, r0
   12ee0:	mov	r0, #32
   12ee4:	movw	r1, #24912	; 0x6150
   12ee8:	movt	r1, #2
   12eec:	add	r3, r1, #16
   12ef0:	vld1.64	{d16-d17}, [r1], r0
   12ef4:	mov	r6, sp
   12ef8:	vld1.64	{d18-d19}, [r3]
   12efc:	add	r3, r6, #16
   12f00:	vld1.64	{d20-d21}, [r1]
   12f04:	vst1.64	{d18-d19}, [r3]
   12f08:	mov	r1, r6
   12f0c:	vst1.64	{d16-d17}, [r1], r0
   12f10:	vst1.64	{d20-d21}, [r1]
   12f14:	mov	r0, r6
   12f18:	mov	r1, r2
   12f1c:	mov	r2, #1
   12f20:	bl	11994 <abort@plt+0xa5c>
   12f24:	mov	r0, #0
   12f28:	mov	r1, r5
   12f2c:	mov	r2, r4
   12f30:	mov	r3, r6
   12f34:	bl	12c3c <abort@plt+0x1d04>
   12f38:	sub	sp, fp, #16
   12f3c:	pop	{r4, r5, r6, sl, fp, pc}
   12f40:	mov	r2, r1
   12f44:	mvn	r1, #0
   12f48:	b	12ecc <abort@plt+0x1f94>
   12f4c:	mov	r1, #58	; 0x3a
   12f50:	b	12f40 <abort@plt+0x2008>
   12f54:	mov	r2, #58	; 0x3a
   12f58:	b	12ecc <abort@plt+0x1f94>
   12f5c:	push	{r4, r5, r6, sl, fp, lr}
   12f60:	add	fp, sp, #16
   12f64:	sub	sp, sp, #48	; 0x30
   12f68:	mov	r4, r2
   12f6c:	mov	r5, r0
   12f70:	mov	r6, sp
   12f74:	mov	r0, r6
   12f78:	bl	12e34 <abort@plt+0x1efc>
   12f7c:	mov	r0, r6
   12f80:	mov	r1, #58	; 0x3a
   12f84:	mov	r2, #1
   12f88:	bl	11994 <abort@plt+0xa5c>
   12f8c:	mov	r0, r5
   12f90:	mov	r1, r4
   12f94:	mvn	r2, #0
   12f98:	mov	r3, r6
   12f9c:	bl	12c3c <abort@plt+0x1d04>
   12fa0:	sub	sp, fp, #16
   12fa4:	pop	{r4, r5, r6, sl, fp, pc}
   12fa8:	push	{fp, lr}
   12fac:	mov	fp, sp
   12fb0:	sub	sp, sp, #8
   12fb4:	mvn	ip, #0
   12fb8:	str	ip, [sp]
   12fbc:	bl	12fc8 <abort@plt+0x2090>
   12fc0:	mov	sp, fp
   12fc4:	pop	{fp, pc}
   12fc8:	push	{r4, r5, r6, r7, fp, lr}
   12fcc:	add	fp, sp, #16
   12fd0:	sub	sp, sp, #48	; 0x30
   12fd4:	mov	r7, r3
   12fd8:	mov	r5, r0
   12fdc:	mov	r0, #32
   12fe0:	movw	r3, #24912	; 0x6150
   12fe4:	movt	r3, #2
   12fe8:	add	r4, r3, #16
   12fec:	vld1.64	{d16-d17}, [r3], r0
   12ff0:	mov	r6, sp
   12ff4:	vld1.64	{d18-d19}, [r4]
   12ff8:	add	r4, r6, #16
   12ffc:	vld1.64	{d20-d21}, [r3]
   13000:	vst1.64	{d18-d19}, [r4]
   13004:	mov	r3, r6
   13008:	vst1.64	{d16-d17}, [r3], r0
   1300c:	vst1.64	{d20-d21}, [r3]
   13010:	mov	r0, r6
   13014:	bl	119ec <abort@plt+0xab4>
   13018:	ldr	r2, [fp, #8]
   1301c:	mov	r0, r5
   13020:	mov	r1, r7
   13024:	mov	r3, r6
   13028:	bl	12c3c <abort@plt+0x1d04>
   1302c:	sub	sp, fp, #16
   13030:	pop	{r4, r5, r6, r7, fp, pc}
   13034:	mov	r3, r2
   13038:	mov	r2, r1
   1303c:	mov	r1, r0
   13040:	mov	r0, #0
   13044:	b	12fa8 <abort@plt+0x2070>
   13048:	push	{fp, lr}
   1304c:	mov	fp, sp
   13050:	sub	sp, sp, #8
   13054:	mov	ip, r2
   13058:	mov	r2, r1
   1305c:	mov	r1, r0
   13060:	str	r3, [sp]
   13064:	mov	r0, #0
   13068:	mov	r3, ip
   1306c:	bl	12fc8 <abort@plt+0x2090>
   13070:	mov	sp, fp
   13074:	pop	{fp, pc}
   13078:	movw	r3, #24816	; 0x60f0
   1307c:	movt	r3, #2
   13080:	b	12c3c <abort@plt+0x1d04>
   13084:	mov	r2, r1
   13088:	mov	r1, r0
   1308c:	mov	r0, #0
   13090:	b	13078 <abort@plt+0x2140>
   13094:	mvn	r2, #0
   13098:	b	13078 <abort@plt+0x2140>
   1309c:	mov	r1, r0
   130a0:	mov	r0, #0
   130a4:	b	13094 <abort@plt+0x215c>
   130a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   130ac:	add	fp, sp, #24
   130b0:	sub	sp, sp, #16
   130b4:	mov	r4, r1
   130b8:	mov	r5, r0
   130bc:	mov	r7, #0
   130c0:	mov	r0, #0
   130c4:	mov	r1, r5
   130c8:	mov	r2, #5
   130cc:	bl	10d94 <dcgettext@plt>
   130d0:	cmp	r0, r5
   130d4:	beq	130e0 <abort@plt+0x21a8>
   130d8:	sub	sp, fp, #24
   130dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   130e0:	bl	146bc <abort@plt+0x3784>
   130e4:	mov	r6, r0
   130e8:	mov	r8, #56	; 0x38
   130ec:	mov	r0, #45	; 0x2d
   130f0:	stm	sp, {r0, r8}
   130f4:	str	r7, [sp, #8]
   130f8:	str	r7, [sp, #12]
   130fc:	mov	r0, r6
   13100:	mov	r1, #85	; 0x55
   13104:	mov	r2, #84	; 0x54
   13108:	mov	r3, #70	; 0x46
   1310c:	bl	131a4 <abort@plt+0x226c>
   13110:	cmp	r0, #0
   13114:	beq	13130 <abort@plt+0x21f8>
   13118:	ldrb	r1, [r5]
   1311c:	movw	r2, #20052	; 0x4e54
   13120:	movt	r2, #1
   13124:	movw	r0, #20056	; 0x4e58
   13128:	movt	r0, #1
   1312c:	b	13174 <abort@plt+0x223c>
   13130:	mov	r0, #48	; 0x30
   13134:	mov	r1, #51	; 0x33
   13138:	str	r8, [sp]
   1313c:	stmib	sp, {r0, r1}
   13140:	str	r0, [sp, #12]
   13144:	mov	r0, r6
   13148:	mov	r1, #71	; 0x47
   1314c:	mov	r2, #66	; 0x42
   13150:	mov	r3, #49	; 0x31
   13154:	bl	131a4 <abort@plt+0x226c>
   13158:	cmp	r0, #0
   1315c:	beq	13184 <abort@plt+0x224c>
   13160:	ldrb	r1, [r5]
   13164:	movw	r2, #20060	; 0x4e5c
   13168:	movt	r2, #1
   1316c:	movw	r0, #20064	; 0x4e60
   13170:	movt	r0, #1
   13174:	cmp	r1, #96	; 0x60
   13178:	moveq	r0, r2
   1317c:	sub	sp, fp, #24
   13180:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13184:	movw	r1, #20046	; 0x4e4e
   13188:	movt	r1, #1
   1318c:	movw	r0, #20050	; 0x4e52
   13190:	movt	r0, #1
   13194:	cmp	r4, #9
   13198:	moveq	r0, r1
   1319c:	sub	sp, fp, #24
   131a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131a4:	push	{r4, r5, r6, r7, fp, lr}
   131a8:	add	fp, sp, #16
   131ac:	sub	sp, sp, #16
   131b0:	mov	r4, r3
   131b4:	mov	r5, r2
   131b8:	mov	r7, r1
   131bc:	mov	r6, r0
   131c0:	mov	r0, r1
   131c4:	bl	14250 <abort@plt+0x3318>
   131c8:	ldrb	r1, [r6]
   131cc:	cmp	r0, #0
   131d0:	andne	r1, r1, #223	; 0xdf
   131d4:	mov	r0, #0
   131d8:	cmp	r1, r7
   131dc:	bne	1321c <abort@plt+0x22e4>
   131e0:	cmp	r7, #0
   131e4:	moveq	r0, #1
   131e8:	subeq	sp, fp, #16
   131ec:	popeq	{r4, r5, r6, r7, fp, pc}
   131f0:	ldr	r0, [fp, #20]
   131f4:	ldr	r1, [fp, #16]
   131f8:	ldr	r2, [fp, #12]
   131fc:	ldr	r3, [fp, #8]
   13200:	str	r2, [sp]
   13204:	str	r1, [sp, #4]
   13208:	str	r0, [sp, #8]
   1320c:	mov	r0, r6
   13210:	mov	r1, r5
   13214:	mov	r2, r4
   13218:	bl	13224 <abort@plt+0x22ec>
   1321c:	sub	sp, fp, #16
   13220:	pop	{r4, r5, r6, r7, fp, pc}
   13224:	push	{r4, r5, r6, r7, fp, lr}
   13228:	add	fp, sp, #16
   1322c:	sub	sp, sp, #8
   13230:	mov	r4, r3
   13234:	mov	r5, r2
   13238:	mov	r7, r1
   1323c:	mov	r6, r0
   13240:	mov	r0, r1
   13244:	bl	14250 <abort@plt+0x3318>
   13248:	ldrb	r1, [r6, #1]
   1324c:	cmp	r0, #0
   13250:	andne	r1, r1, #223	; 0xdf
   13254:	mov	r0, #0
   13258:	cmp	r1, r7
   1325c:	bne	13294 <abort@plt+0x235c>
   13260:	cmp	r7, #0
   13264:	moveq	r0, #1
   13268:	subeq	sp, fp, #16
   1326c:	popeq	{r4, r5, r6, r7, fp, pc}
   13270:	ldr	r0, [fp, #16]
   13274:	ldr	r1, [fp, #12]
   13278:	ldr	r3, [fp, #8]
   1327c:	str	r1, [sp]
   13280:	str	r0, [sp, #4]
   13284:	mov	r0, r6
   13288:	mov	r1, r5
   1328c:	mov	r2, r4
   13290:	bl	1329c <abort@plt+0x2364>
   13294:	sub	sp, fp, #16
   13298:	pop	{r4, r5, r6, r7, fp, pc}
   1329c:	push	{r4, r5, r6, r7, fp, lr}
   132a0:	add	fp, sp, #16
   132a4:	sub	sp, sp, #8
   132a8:	mov	r4, r3
   132ac:	mov	r5, r2
   132b0:	mov	r7, r1
   132b4:	mov	r6, r0
   132b8:	mov	r0, r1
   132bc:	bl	14250 <abort@plt+0x3318>
   132c0:	ldrb	r1, [r6, #2]
   132c4:	cmp	r0, #0
   132c8:	andne	r1, r1, #223	; 0xdf
   132cc:	mov	r0, #0
   132d0:	cmp	r1, r7
   132d4:	bne	13304 <abort@plt+0x23cc>
   132d8:	cmp	r7, #0
   132dc:	moveq	r0, #1
   132e0:	subeq	sp, fp, #16
   132e4:	popeq	{r4, r5, r6, r7, fp, pc}
   132e8:	ldr	r0, [fp, #12]
   132ec:	ldr	r3, [fp, #8]
   132f0:	str	r0, [sp]
   132f4:	mov	r0, r6
   132f8:	mov	r1, r5
   132fc:	mov	r2, r4
   13300:	bl	1330c <abort@plt+0x23d4>
   13304:	sub	sp, fp, #16
   13308:	pop	{r4, r5, r6, r7, fp, pc}
   1330c:	push	{r4, r5, r6, r7, fp, lr}
   13310:	add	fp, sp, #16
   13314:	mov	r4, r3
   13318:	mov	r5, r2
   1331c:	mov	r7, r1
   13320:	mov	r6, r0
   13324:	mov	r0, r1
   13328:	bl	14250 <abort@plt+0x3318>
   1332c:	ldrb	r1, [r6, #3]
   13330:	ldr	r3, [fp, #8]
   13334:	cmp	r0, #0
   13338:	andne	r1, r1, #223	; 0xdf
   1333c:	mov	r0, #0
   13340:	cmp	r1, r7
   13344:	popne	{r4, r5, r6, r7, fp, pc}
   13348:	cmp	r7, #0
   1334c:	beq	13364 <abort@plt+0x242c>
   13350:	mov	r0, r6
   13354:	mov	r1, r5
   13358:	mov	r2, r4
   1335c:	pop	{r4, r5, r6, r7, fp, lr}
   13360:	b	1336c <abort@plt+0x2434>
   13364:	mov	r0, #1
   13368:	pop	{r4, r5, r6, r7, fp, pc}
   1336c:	push	{r4, r5, r6, r7, fp, lr}
   13370:	add	fp, sp, #16
   13374:	mov	r4, r3
   13378:	mov	r5, r2
   1337c:	mov	r7, r1
   13380:	mov	r6, r0
   13384:	mov	r0, r1
   13388:	bl	14250 <abort@plt+0x3318>
   1338c:	ldrb	r1, [r6, #4]
   13390:	cmp	r0, #0
   13394:	andne	r1, r1, #223	; 0xdf
   13398:	mov	r0, #0
   1339c:	cmp	r1, r7
   133a0:	popne	{r4, r5, r6, r7, fp, pc}
   133a4:	cmp	r7, #0
   133a8:	beq	133c0 <abort@plt+0x2488>
   133ac:	mov	r0, r6
   133b0:	mov	r1, r5
   133b4:	mov	r2, r4
   133b8:	pop	{r4, r5, r6, r7, fp, lr}
   133bc:	b	133c8 <abort@plt+0x2490>
   133c0:	mov	r0, #1
   133c4:	pop	{r4, r5, r6, r7, fp, pc}
   133c8:	push	{r4, r5, r6, sl, fp, lr}
   133cc:	add	fp, sp, #16
   133d0:	mov	r4, r2
   133d4:	mov	r6, r1
   133d8:	mov	r5, r0
   133dc:	mov	r0, r1
   133e0:	bl	14250 <abort@plt+0x3318>
   133e4:	ldrb	r1, [r5, #5]
   133e8:	cmp	r0, #0
   133ec:	andne	r1, r1, #223	; 0xdf
   133f0:	mov	r0, #0
   133f4:	cmp	r1, r6
   133f8:	popne	{r4, r5, r6, sl, fp, pc}
   133fc:	cmp	r6, #0
   13400:	beq	13414 <abort@plt+0x24dc>
   13404:	mov	r0, r5
   13408:	mov	r1, r4
   1340c:	pop	{r4, r5, r6, sl, fp, lr}
   13410:	b	1341c <abort@plt+0x24e4>
   13414:	mov	r0, #1
   13418:	pop	{r4, r5, r6, sl, fp, pc}
   1341c:	push	{r4, r5, fp, lr}
   13420:	add	fp, sp, #8
   13424:	mov	r5, r1
   13428:	mov	r4, r0
   1342c:	mov	r0, r1
   13430:	bl	14250 <abort@plt+0x3318>
   13434:	ldrb	r1, [r4, #6]
   13438:	cmp	r0, #0
   1343c:	andne	r1, r1, #223	; 0xdf
   13440:	mov	r0, #0
   13444:	cmp	r1, r5
   13448:	popne	{r4, r5, fp, pc}
   1344c:	cmp	r5, #0
   13450:	beq	13460 <abort@plt+0x2528>
   13454:	mov	r0, r4
   13458:	pop	{r4, r5, fp, lr}
   1345c:	b	13468 <abort@plt+0x2530>
   13460:	mov	r0, #1
   13464:	pop	{r4, r5, fp, pc}
   13468:	push	{r4, sl, fp, lr}
   1346c:	add	fp, sp, #8
   13470:	mov	r4, r0
   13474:	mov	r0, #0
   13478:	bl	14250 <abort@plt+0x3318>
   1347c:	ldrb	r1, [r4, #7]
   13480:	cmp	r0, #0
   13484:	beq	1349c <abort@plt+0x2564>
   13488:	tst	r1, #223	; 0xdf
   1348c:	moveq	r0, #1
   13490:	popeq	{r4, sl, fp, pc}
   13494:	mov	r0, #0
   13498:	pop	{r4, sl, fp, pc}
   1349c:	cmp	r1, #0
   134a0:	moveq	r0, #1
   134a4:	popeq	{r4, sl, fp, pc}
   134a8:	mov	r0, #0
   134ac:	pop	{r4, sl, fp, pc}
   134b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   134b4:	add	fp, sp, #24
   134b8:	sub	sp, sp, #32
   134bc:	mov	r4, r2
   134c0:	mov	r8, r0
   134c4:	ldr	r6, [fp, #12]
   134c8:	ldr	r7, [fp, #8]
   134cc:	cmp	r1, #0
   134d0:	beq	134f8 <abort@plt+0x25c0>
   134d4:	mov	r5, r1
   134d8:	str	r4, [sp]
   134dc:	str	r3, [sp, #4]
   134e0:	movw	r2, #20152	; 0x4eb8
   134e4:	movt	r2, #1
   134e8:	mov	r0, r8
   134ec:	mov	r1, #1
   134f0:	mov	r3, r5
   134f4:	b	13510 <abort@plt+0x25d8>
   134f8:	str	r3, [sp]
   134fc:	movw	r2, #20164	; 0x4ec4
   13500:	movt	r2, #1
   13504:	mov	r0, r8
   13508:	mov	r1, #1
   1350c:	mov	r3, r4
   13510:	bl	10ec0 <__fprintf_chk@plt>
   13514:	movw	r1, #20171	; 0x4ecb
   13518:	movt	r1, #1
   1351c:	mov	r0, #0
   13520:	mov	r2, #5
   13524:	bl	10d94 <dcgettext@plt>
   13528:	mov	r3, r0
   1352c:	movw	r0, #2022	; 0x7e6
   13530:	str	r0, [sp]
   13534:	movw	r2, #20889	; 0x5199
   13538:	movt	r2, #1
   1353c:	mov	r0, r8
   13540:	mov	r1, #1
   13544:	bl	10ec0 <__fprintf_chk@plt>
   13548:	movw	r4, #19193	; 0x4af9
   1354c:	movt	r4, #1
   13550:	mov	r0, r4
   13554:	mov	r1, r8
   13558:	bl	10d1c <fputs_unlocked@plt>
   1355c:	movw	r1, #20175	; 0x4ecf
   13560:	movt	r1, #1
   13564:	mov	r0, #0
   13568:	mov	r2, #5
   1356c:	bl	10d94 <dcgettext@plt>
   13570:	mov	r2, r0
   13574:	movw	r3, #20346	; 0x4f7a
   13578:	movt	r3, #1
   1357c:	mov	r0, r8
   13580:	mov	r1, #1
   13584:	bl	10ec0 <__fprintf_chk@plt>
   13588:	mov	r0, r4
   1358c:	mov	r1, r8
   13590:	bl	10d1c <fputs_unlocked@plt>
   13594:	cmp	r6, #9
   13598:	bhi	135d4 <abort@plt+0x269c>
   1359c:	add	r0, pc, #0
   135a0:	ldr	pc, [r0, r6, lsl #2]
   135a4:	andeq	r3, r1, ip, asr #11
   135a8:	andeq	r3, r1, r0, ror #11
   135ac:	andeq	r3, r1, r0, lsl r6
   135b0:	andeq	r3, r1, r8, lsr r6
   135b4:	andeq	r3, r1, r0, ror #12
   135b8:	andeq	r3, r1, r8, lsl #13
   135bc:			; <UNDEFINED> instruction: 0x000136b0
   135c0:	andeq	r3, r1, r8, ror #13
   135c4:	andeq	r3, r1, r8, lsl #15
   135c8:	andeq	r3, r1, r0, lsr r7
   135cc:	sub	sp, fp, #24
   135d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   135d4:	movw	r1, #20699	; 0x50db
   135d8:	movt	r1, #1
   135dc:	b	13738 <abort@plt+0x2800>
   135e0:	movw	r1, #20380	; 0x4f9c
   135e4:	movt	r1, #1
   135e8:	mov	r0, #0
   135ec:	mov	r2, #5
   135f0:	bl	10d94 <dcgettext@plt>
   135f4:	mov	r2, r0
   135f8:	ldr	r3, [r7]
   135fc:	mov	r0, r8
   13600:	mov	r1, #1
   13604:	sub	sp, fp, #24
   13608:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1360c:	b	10ec0 <__fprintf_chk@plt>
   13610:	movw	r1, #20396	; 0x4fac
   13614:	movt	r1, #1
   13618:	mov	r0, #0
   1361c:	mov	r2, #5
   13620:	bl	10d94 <dcgettext@plt>
   13624:	mov	r2, r0
   13628:	ldr	r3, [r7]
   1362c:	ldr	r0, [r7, #4]
   13630:	str	r0, [sp]
   13634:	b	13724 <abort@plt+0x27ec>
   13638:	movw	r1, #20419	; 0x4fc3
   1363c:	movt	r1, #1
   13640:	mov	r0, #0
   13644:	mov	r2, #5
   13648:	bl	10d94 <dcgettext@plt>
   1364c:	mov	r2, r0
   13650:	ldr	r3, [r7]
   13654:	ldmib	r7, {r0, r1}
   13658:	stm	sp, {r0, r1}
   1365c:	b	13724 <abort@plt+0x27ec>
   13660:	movw	r1, #20447	; 0x4fdf
   13664:	movt	r1, #1
   13668:	mov	r0, #0
   1366c:	mov	r2, #5
   13670:	bl	10d94 <dcgettext@plt>
   13674:	mov	r2, r0
   13678:	ldr	r3, [r7]
   1367c:	ldmib	r7, {r0, r1, r7}
   13680:	stm	sp, {r0, r1, r7}
   13684:	b	13724 <abort@plt+0x27ec>
   13688:	movw	r1, #20479	; 0x4fff
   1368c:	movt	r1, #1
   13690:	mov	r0, #0
   13694:	mov	r2, #5
   13698:	bl	10d94 <dcgettext@plt>
   1369c:	mov	r2, r0
   136a0:	ldr	r3, [r7]
   136a4:	ldmib	r7, {r0, r1, r6, r7}
   136a8:	stm	sp, {r0, r1, r6, r7}
   136ac:	b	13724 <abort@plt+0x27ec>
   136b0:	movw	r1, #20515	; 0x5023
   136b4:	movt	r1, #1
   136b8:	mov	r0, #0
   136bc:	mov	r2, #5
   136c0:	bl	10d94 <dcgettext@plt>
   136c4:	mov	r2, r0
   136c8:	ldr	r3, [r7]
   136cc:	ldmib	r7, {r0, r1, r6}
   136d0:	ldr	r5, [r7, #16]
   136d4:	ldr	r7, [r7, #20]
   136d8:	stm	sp, {r0, r1, r6}
   136dc:	str	r5, [sp, #12]
   136e0:	str	r7, [sp, #16]
   136e4:	b	13724 <abort@plt+0x27ec>
   136e8:	movw	r1, #20555	; 0x504b
   136ec:	movt	r1, #1
   136f0:	mov	r0, #0
   136f4:	mov	r2, #5
   136f8:	bl	10d94 <dcgettext@plt>
   136fc:	mov	r2, r0
   13700:	ldr	r3, [r7]
   13704:	ldmib	r7, {r0, r1, r6}
   13708:	ldr	r5, [r7, #16]
   1370c:	ldr	r4, [r7, #20]
   13710:	ldr	r7, [r7, #24]
   13714:	stm	sp, {r0, r1, r6}
   13718:	str	r5, [sp, #12]
   1371c:	str	r4, [sp, #16]
   13720:	str	r7, [sp, #20]
   13724:	mov	r0, r8
   13728:	mov	r1, #1
   1372c:	b	137d8 <abort@plt+0x28a0>
   13730:	movw	r1, #20647	; 0x50a7
   13734:	movt	r1, #1
   13738:	mov	r0, #0
   1373c:	mov	r2, #5
   13740:	bl	10d94 <dcgettext@plt>
   13744:	mov	ip, r0
   13748:	ldr	r3, [r7]
   1374c:	ldr	r0, [r7, #4]
   13750:	ldr	r1, [r7, #8]
   13754:	ldr	r6, [r7, #12]
   13758:	ldr	r5, [r7, #16]
   1375c:	ldr	r4, [r7, #20]
   13760:	ldr	r2, [r7, #24]
   13764:	ldr	lr, [r7, #28]
   13768:	ldr	r7, [r7, #32]
   1376c:	stm	sp, {r0, r1, r6}
   13770:	str	r5, [sp, #12]
   13774:	str	r4, [sp, #16]
   13778:	str	r2, [sp, #20]
   1377c:	str	lr, [sp, #24]
   13780:	str	r7, [sp, #28]
   13784:	b	137cc <abort@plt+0x2894>
   13788:	movw	r1, #20599	; 0x5077
   1378c:	movt	r1, #1
   13790:	mov	r0, #0
   13794:	mov	r2, #5
   13798:	bl	10d94 <dcgettext@plt>
   1379c:	mov	ip, r0
   137a0:	ldr	r3, [r7]
   137a4:	ldmib	r7, {r0, r1, r6}
   137a8:	ldr	r5, [r7, #16]
   137ac:	ldr	r4, [r7, #20]
   137b0:	ldr	r2, [r7, #24]
   137b4:	ldr	r7, [r7, #28]
   137b8:	stm	sp, {r0, r1, r6}
   137bc:	str	r5, [sp, #12]
   137c0:	str	r4, [sp, #16]
   137c4:	str	r2, [sp, #20]
   137c8:	str	r7, [sp, #24]
   137cc:	mov	r0, r8
   137d0:	mov	r1, #1
   137d4:	mov	r2, ip
   137d8:	bl	10ec0 <__fprintf_chk@plt>
   137dc:	sub	sp, fp, #24
   137e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137e4:	push	{r4, sl, fp, lr}
   137e8:	add	fp, sp, #8
   137ec:	sub	sp, sp, #8
   137f0:	mov	lr, #0
   137f4:	ldr	ip, [fp, #8]
   137f8:	ldr	r4, [ip, lr, lsl #2]
   137fc:	add	lr, lr, #1
   13800:	cmp	r4, #0
   13804:	bne	137f8 <abort@plt+0x28c0>
   13808:	sub	r4, lr, #1
   1380c:	str	ip, [sp]
   13810:	str	r4, [sp, #4]
   13814:	bl	134b0 <abort@plt+0x2578>
   13818:	sub	sp, fp, #8
   1381c:	pop	{r4, sl, fp, pc}
   13820:	push	{r4, r5, fp, lr}
   13824:	add	fp, sp, #8
   13828:	sub	sp, sp, #48	; 0x30
   1382c:	mov	ip, #0
   13830:	ldr	r4, [fp, #8]
   13834:	add	lr, sp, #8
   13838:	ldr	r5, [r4]
   1383c:	str	r5, [lr, ip, lsl #2]
   13840:	cmp	r5, #0
   13844:	beq	13858 <abort@plt+0x2920>
   13848:	add	ip, ip, #1
   1384c:	add	r4, r4, #4
   13850:	cmp	ip, #10
   13854:	bcc	13838 <abort@plt+0x2900>
   13858:	str	lr, [sp]
   1385c:	str	ip, [sp, #4]
   13860:	bl	134b0 <abort@plt+0x2578>
   13864:	sub	sp, fp, #8
   13868:	pop	{r4, r5, fp, pc}
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	sub	sp, sp, #8
   13878:	add	ip, fp, #8
   1387c:	str	ip, [sp, #4]
   13880:	str	ip, [sp]
   13884:	bl	13820 <abort@plt+0x28e8>
   13888:	mov	sp, fp
   1388c:	pop	{fp, pc}
   13890:	push	{fp, lr}
   13894:	mov	fp, sp
   13898:	movw	r0, #24884	; 0x6134
   1389c:	movt	r0, #2
   138a0:	ldr	r1, [r0]
   138a4:	movw	r0, #19193	; 0x4af9
   138a8:	movt	r0, #1
   138ac:	bl	10d1c <fputs_unlocked@plt>
   138b0:	movw	r1, #20759	; 0x5117
   138b4:	movt	r1, #1
   138b8:	mov	r0, #0
   138bc:	mov	r2, #5
   138c0:	bl	10d94 <dcgettext@plt>
   138c4:	mov	r1, r0
   138c8:	movw	r2, #20779	; 0x512b
   138cc:	movt	r2, #1
   138d0:	mov	r0, #1
   138d4:	bl	10e9c <__printf_chk@plt>
   138d8:	movw	r1, #20801	; 0x5141
   138dc:	movt	r1, #1
   138e0:	mov	r0, #0
   138e4:	mov	r2, #5
   138e8:	bl	10d94 <dcgettext@plt>
   138ec:	mov	r1, r0
   138f0:	movw	r2, #19324	; 0x4b7c
   138f4:	movt	r2, #1
   138f8:	movw	r3, #19549	; 0x4c5d
   138fc:	movt	r3, #1
   13900:	mov	r0, #1
   13904:	bl	10e9c <__printf_chk@plt>
   13908:	movw	r1, #20821	; 0x5155
   1390c:	movt	r1, #1
   13910:	mov	r0, #0
   13914:	mov	r2, #5
   13918:	bl	10d94 <dcgettext@plt>
   1391c:	mov	r1, r0
   13920:	movw	r2, #20860	; 0x517c
   13924:	movt	r2, #1
   13928:	mov	r0, #1
   1392c:	pop	{fp, lr}
   13930:	b	10e9c <__printf_chk@plt>
   13934:	b	13938 <abort@plt+0x2a00>
   13938:	push	{r4, r5, r6, sl, fp, lr}
   1393c:	add	fp, sp, #16
   13940:	mov	r4, r2
   13944:	mov	r5, r1
   13948:	mov	r6, r0
   1394c:	bl	14754 <abort@plt+0x381c>
   13950:	cmp	r0, #0
   13954:	popne	{r4, r5, r6, sl, fp, pc}
   13958:	cmp	r6, #0
   1395c:	beq	13970 <abort@plt+0x2a38>
   13960:	cmp	r5, #0
   13964:	cmpne	r4, #0
   13968:	bne	13970 <abort@plt+0x2a38>
   1396c:	pop	{r4, r5, r6, sl, fp, pc}
   13970:	bl	13d24 <abort@plt+0x2dec>
   13974:	push	{fp, lr}
   13978:	mov	fp, sp
   1397c:	bl	13f18 <abort@plt+0x2fe0>
   13980:	bl	13988 <abort@plt+0x2a50>
   13984:	pop	{fp, pc}
   13988:	cmp	r0, #0
   1398c:	bxne	lr
   13990:	push	{fp, lr}
   13994:	mov	fp, sp
   13998:	bl	13d24 <abort@plt+0x2dec>
   1399c:	push	{fp, lr}
   139a0:	mov	fp, sp
   139a4:	bl	14688 <abort@plt+0x3750>
   139a8:	bl	13988 <abort@plt+0x2a50>
   139ac:	pop	{fp, pc}
   139b0:	b	13974 <abort@plt+0x2a3c>
   139b4:	push	{r4, r5, fp, lr}
   139b8:	add	fp, sp, #8
   139bc:	mov	r4, r1
   139c0:	mov	r5, r0
   139c4:	bl	13f48 <abort@plt+0x3010>
   139c8:	cmp	r0, #0
   139cc:	popne	{r4, r5, fp, pc}
   139d0:	cmp	r5, #0
   139d4:	beq	139e4 <abort@plt+0x2aac>
   139d8:	cmp	r4, #0
   139dc:	bne	139e4 <abort@plt+0x2aac>
   139e0:	pop	{r4, r5, fp, pc}
   139e4:	bl	13d24 <abort@plt+0x2dec>
   139e8:	push	{fp, lr}
   139ec:	mov	fp, sp
   139f0:	bl	1468c <abort@plt+0x3754>
   139f4:	bl	13988 <abort@plt+0x2a50>
   139f8:	pop	{fp, pc}
   139fc:	push	{fp, lr}
   13a00:	mov	fp, sp
   13a04:	bl	1469c <abort@plt+0x3764>
   13a08:	bl	13988 <abort@plt+0x2a50>
   13a0c:	pop	{fp, pc}
   13a10:	push	{fp, lr}
   13a14:	mov	fp, sp
   13a18:	mov	r2, r1
   13a1c:	mov	r1, r0
   13a20:	mov	r0, #0
   13a24:	bl	13938 <abort@plt+0x2a00>
   13a28:	pop	{fp, pc}
   13a2c:	mov	r2, r1
   13a30:	mov	r1, r0
   13a34:	mov	r0, #0
   13a38:	b	139fc <abort@plt+0x2ac4>
   13a3c:	mov	r2, #1
   13a40:	b	13a44 <abort@plt+0x2b0c>
   13a44:	push	{r4, r5, fp, lr}
   13a48:	add	fp, sp, #8
   13a4c:	mov	r4, r1
   13a50:	ldr	r5, [r1]
   13a54:	cmp	r0, #0
   13a58:	beq	13a70 <abort@plt+0x2b38>
   13a5c:	mov	r1, #1
   13a60:	add	r1, r1, r5, lsr #1
   13a64:	adds	r5, r5, r1
   13a68:	bcc	13a88 <abort@plt+0x2b50>
   13a6c:	bl	13d24 <abort@plt+0x2dec>
   13a70:	cmp	r5, #0
   13a74:	bne	13a88 <abort@plt+0x2b50>
   13a78:	mov	r1, #64	; 0x40
   13a7c:	udiv	r5, r1, r2
   13a80:	cmp	r2, #64	; 0x40
   13a84:	addhi	r5, r5, #1
   13a88:	mov	r1, r5
   13a8c:	bl	13938 <abort@plt+0x2a00>
   13a90:	str	r5, [r4]
   13a94:	pop	{r4, r5, fp, pc}
   13a98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a9c:	add	fp, sp, #24
   13aa0:	mov	r8, r1
   13aa4:	ldr	r6, [r1]
   13aa8:	add	r1, r6, r6, asr #1
   13aac:	cmp	r1, r6
   13ab0:	mvnvs	r1, #-2147483648	; 0x80000000
   13ab4:	cmp	r1, r3
   13ab8:	mov	r5, r1
   13abc:	movgt	r5, r3
   13ac0:	cmn	r3, #1
   13ac4:	movle	r5, r1
   13ac8:	ldr	r4, [fp, #8]
   13acc:	cmn	r4, #1
   13ad0:	ble	13af8 <abort@plt+0x2bc0>
   13ad4:	cmp	r4, #0
   13ad8:	beq	13b4c <abort@plt+0x2c14>
   13adc:	cmn	r5, #1
   13ae0:	ble	13b20 <abort@plt+0x2be8>
   13ae4:	mvn	r7, #-2147483648	; 0x80000000
   13ae8:	udiv	r1, r7, r4
   13aec:	cmp	r1, r5
   13af0:	bge	13b4c <abort@plt+0x2c14>
   13af4:	b	13b5c <abort@plt+0x2c24>
   13af8:	cmn	r5, #1
   13afc:	ble	13b3c <abort@plt+0x2c04>
   13b00:	cmn	r4, #1
   13b04:	beq	13b4c <abort@plt+0x2c14>
   13b08:	mov	r1, #-2147483648	; 0x80000000
   13b0c:	sdiv	r1, r1, r4
   13b10:	mvn	r7, #-2147483648	; 0x80000000
   13b14:	cmp	r1, r5
   13b18:	bge	13b4c <abort@plt+0x2c14>
   13b1c:	b	13b5c <abort@plt+0x2c24>
   13b20:	beq	13b4c <abort@plt+0x2c14>
   13b24:	mov	r1, #-2147483648	; 0x80000000
   13b28:	sdiv	r1, r1, r5
   13b2c:	mvn	r7, #-2147483648	; 0x80000000
   13b30:	cmp	r1, r4
   13b34:	bge	13b4c <abort@plt+0x2c14>
   13b38:	b	13b5c <abort@plt+0x2c24>
   13b3c:	mvn	r7, #-2147483648	; 0x80000000
   13b40:	sdiv	r1, r7, r4
   13b44:	cmp	r5, r1
   13b48:	blt	13b5c <abort@plt+0x2c24>
   13b4c:	mul	r1, r5, r4
   13b50:	mov	r7, #64	; 0x40
   13b54:	cmp	r1, #63	; 0x3f
   13b58:	bgt	13b64 <abort@plt+0x2c2c>
   13b5c:	sdiv	r5, r7, r4
   13b60:	mul	r1, r5, r4
   13b64:	cmp	r0, #0
   13b68:	moveq	r7, #0
   13b6c:	streq	r7, [r8]
   13b70:	sub	r7, r5, r6
   13b74:	cmp	r7, r2
   13b78:	bge	13c24 <abort@plt+0x2cec>
   13b7c:	add	r5, r6, r2
   13b80:	mov	r1, #0
   13b84:	cmp	r5, r3
   13b88:	mov	r2, #0
   13b8c:	movwgt	r2, #1
   13b90:	cmn	r3, #1
   13b94:	movwgt	r1, #1
   13b98:	cmp	r5, r6
   13b9c:	bvs	13c0c <abort@plt+0x2cd4>
   13ba0:	ands	r1, r1, r2
   13ba4:	bne	13c0c <abort@plt+0x2cd4>
   13ba8:	cmn	r4, #1
   13bac:	ble	13bd4 <abort@plt+0x2c9c>
   13bb0:	cmp	r4, #0
   13bb4:	beq	13c20 <abort@plt+0x2ce8>
   13bb8:	cmn	r5, #1
   13bbc:	ble	13bf8 <abort@plt+0x2cc0>
   13bc0:	mvn	r1, #-2147483648	; 0x80000000
   13bc4:	udiv	r1, r1, r4
   13bc8:	cmp	r1, r5
   13bcc:	bge	13c20 <abort@plt+0x2ce8>
   13bd0:	b	13c0c <abort@plt+0x2cd4>
   13bd4:	cmn	r5, #1
   13bd8:	ble	13c10 <abort@plt+0x2cd8>
   13bdc:	cmn	r4, #1
   13be0:	beq	13c20 <abort@plt+0x2ce8>
   13be4:	mov	r1, #-2147483648	; 0x80000000
   13be8:	sdiv	r1, r1, r4
   13bec:	cmp	r1, r5
   13bf0:	bge	13c20 <abort@plt+0x2ce8>
   13bf4:	b	13c0c <abort@plt+0x2cd4>
   13bf8:	beq	13c20 <abort@plt+0x2ce8>
   13bfc:	mov	r1, #-2147483648	; 0x80000000
   13c00:	sdiv	r1, r1, r5
   13c04:	cmp	r1, r4
   13c08:	bge	13c20 <abort@plt+0x2ce8>
   13c0c:	bl	13d24 <abort@plt+0x2dec>
   13c10:	mvn	r1, #-2147483648	; 0x80000000
   13c14:	sdiv	r1, r1, r4
   13c18:	cmp	r5, r1
   13c1c:	blt	13c0c <abort@plt+0x2cd4>
   13c20:	mul	r1, r5, r4
   13c24:	bl	139b4 <abort@plt+0x2a7c>
   13c28:	str	r5, [r8]
   13c2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c30:	mov	r1, #1
   13c34:	b	13c38 <abort@plt+0x2d00>
   13c38:	push	{fp, lr}
   13c3c:	mov	fp, sp
   13c40:	bl	13ec4 <abort@plt+0x2f8c>
   13c44:	bl	13988 <abort@plt+0x2a50>
   13c48:	pop	{fp, pc}
   13c4c:	mov	r1, #1
   13c50:	b	13c54 <abort@plt+0x2d1c>
   13c54:	push	{fp, lr}
   13c58:	mov	fp, sp
   13c5c:	bl	14698 <abort@plt+0x3760>
   13c60:	bl	13988 <abort@plt+0x2a50>
   13c64:	pop	{fp, pc}
   13c68:	push	{r4, r5, r6, sl, fp, lr}
   13c6c:	add	fp, sp, #16
   13c70:	mov	r4, r1
   13c74:	mov	r5, r0
   13c78:	mov	r0, r1
   13c7c:	bl	13974 <abort@plt+0x2a3c>
   13c80:	mov	r6, r0
   13c84:	mov	r1, r5
   13c88:	mov	r2, r4
   13c8c:	bl	10d70 <memcpy@plt>
   13c90:	mov	r0, r6
   13c94:	pop	{r4, r5, r6, sl, fp, pc}
   13c98:	push	{r4, r5, r6, sl, fp, lr}
   13c9c:	add	fp, sp, #16
   13ca0:	mov	r4, r1
   13ca4:	mov	r5, r0
   13ca8:	mov	r0, r1
   13cac:	bl	1399c <abort@plt+0x2a64>
   13cb0:	mov	r6, r0
   13cb4:	mov	r1, r5
   13cb8:	mov	r2, r4
   13cbc:	bl	10d70 <memcpy@plt>
   13cc0:	mov	r0, r6
   13cc4:	pop	{r4, r5, r6, sl, fp, pc}
   13cc8:	push	{r4, r5, r6, sl, fp, lr}
   13ccc:	add	fp, sp, #16
   13cd0:	mov	r4, r1
   13cd4:	mov	r5, r0
   13cd8:	add	r0, r1, #1
   13cdc:	bl	1399c <abort@plt+0x2a64>
   13ce0:	mov	r6, r0
   13ce4:	mov	r0, #0
   13ce8:	strb	r0, [r6, r4]
   13cec:	mov	r0, r6
   13cf0:	mov	r1, r5
   13cf4:	mov	r2, r4
   13cf8:	bl	10d70 <memcpy@plt>
   13cfc:	mov	r0, r6
   13d00:	pop	{r4, r5, r6, sl, fp, pc}
   13d04:	push	{r4, sl, fp, lr}
   13d08:	add	fp, sp, #8
   13d0c:	mov	r4, r0
   13d10:	bl	10e6c <strlen@plt>
   13d14:	add	r1, r0, #1
   13d18:	mov	r0, r4
   13d1c:	pop	{r4, sl, fp, lr}
   13d20:	b	13c68 <abort@plt+0x2d30>
   13d24:	push	{fp, lr}
   13d28:	mov	fp, sp
   13d2c:	movw	r0, #24796	; 0x60dc
   13d30:	movt	r0, #2
   13d34:	ldr	r4, [r0]
   13d38:	movw	r1, #20936	; 0x51c8
   13d3c:	movt	r1, #1
   13d40:	mov	r0, #0
   13d44:	mov	r2, #5
   13d48:	bl	10d94 <dcgettext@plt>
   13d4c:	mov	r3, r0
   13d50:	movw	r2, #19831	; 0x4d77
   13d54:	movt	r2, #1
   13d58:	mov	r0, r4
   13d5c:	mov	r1, #0
   13d60:	bl	10e0c <error@plt>
   13d64:	bl	10f38 <abort@plt>
   13d68:	push	{r4, r5, r6, sl, fp, lr}
   13d6c:	add	fp, sp, #16
   13d70:	vpush	{d8}
   13d74:	sub	sp, sp, #8
   13d78:	vmov.f64	d8, d0
   13d7c:	vldr	d16, [pc, #156]	; 13e20 <abort@plt+0x2ee8>
   13d80:	vcmpe.f64	d0, d16
   13d84:	vmrs	APSR_nzcv, fpscr
   13d88:	blt	13da0 <abort@plt+0x2e68>
   13d8c:	bl	10d34 <pause@plt>
   13d90:	bl	10e78 <__errno_location@plt>
   13d94:	ldr	r0, [r0]
   13d98:	cmp	r0, #4
   13d9c:	beq	13d8c <abort@plt+0x2e54>
   13da0:	mov	r6, sp
   13da4:	mov	r0, r6
   13da8:	vmov.f64	d0, d8
   13dac:	bl	143d0 <abort@plt+0x3498>
   13db0:	bl	10e78 <__errno_location@plt>
   13db4:	mov	r4, r0
   13db8:	mov	r5, #0
   13dbc:	str	r5, [r0]
   13dc0:	mov	r0, r6
   13dc4:	mov	r1, r6
   13dc8:	bl	10d58 <nanosleep@plt>
   13dcc:	cmp	r0, #0
   13dd0:	beq	13e0c <abort@plt+0x2ed4>
   13dd4:	mov	r6, sp
   13dd8:	mov	r5, #0
   13ddc:	ldr	r0, [r4]
   13de0:	orr	r0, r0, #4
   13de4:	cmp	r0, #4
   13de8:	bne	13e08 <abort@plt+0x2ed0>
   13dec:	str	r5, [r4]
   13df0:	mov	r0, r6
   13df4:	mov	r1, r6
   13df8:	bl	10d58 <nanosleep@plt>
   13dfc:	cmp	r0, #0
   13e00:	bne	13ddc <abort@plt+0x2ea4>
   13e04:	b	13e0c <abort@plt+0x2ed4>
   13e08:	mvn	r5, #0
   13e0c:	mov	r0, r5
   13e10:	sub	sp, fp, #24
   13e14:	vpop	{d8}
   13e18:	pop	{r4, r5, r6, sl, fp, pc}
   13e1c:	nop	{0}
   13e20:	andeq	r0, r0, r0
   13e24:	mvnmi	r0, r0
   13e28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e2c:	add	fp, sp, #24
   13e30:	sub	sp, sp, #8
   13e34:	mov	r4, r3
   13e38:	mov	r8, r2
   13e3c:	mov	r9, r1
   13e40:	mov	r5, r0
   13e44:	bl	10e78 <__errno_location@plt>
   13e48:	mov	r7, r0
   13e4c:	mov	r6, #0
   13e50:	str	r6, [r0]
   13e54:	add	r1, sp, #4
   13e58:	mov	r0, r5
   13e5c:	blx	r4
   13e60:	ldr	r0, [sp, #4]
   13e64:	cmp	r0, r5
   13e68:	beq	13ea8 <abort@plt+0x2f70>
   13e6c:	cmp	r9, #0
   13e70:	beq	13e90 <abort@plt+0x2f58>
   13e74:	vcmp.f64	d0, #0.0
   13e78:	vmrs	APSR_nzcv, fpscr
   13e7c:	beq	13ea4 <abort@plt+0x2f6c>
   13e80:	ldr	r0, [r7]
   13e84:	subs	r6, r0, #34	; 0x22
   13e88:	movwne	r6, #1
   13e8c:	b	13ea8 <abort@plt+0x2f70>
   13e90:	ldrb	r0, [r0]
   13e94:	mov	r6, #0
   13e98:	cmp	r0, #0
   13e9c:	bne	13eb4 <abort@plt+0x2f7c>
   13ea0:	b	13e74 <abort@plt+0x2f3c>
   13ea4:	mov	r6, #1
   13ea8:	cmp	r9, #0
   13eac:	ldrne	r0, [sp, #4]
   13eb0:	strne	r0, [r9]
   13eb4:	vstr	d0, [r8]
   13eb8:	mov	r0, r6
   13ebc:	sub	sp, fp, #24
   13ec0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ec4:	clz	r2, r1
   13ec8:	lsr	r2, r2, #5
   13ecc:	clz	r3, r0
   13ed0:	lsr	r3, r3, #5
   13ed4:	orrs	r2, r3, r2
   13ed8:	movwne	r1, #1
   13edc:	movwne	r0, #1
   13ee0:	cmp	r1, #0
   13ee4:	beq	13f14 <abort@plt+0x2fdc>
   13ee8:	mvn	r2, #-2147483648	; 0x80000000
   13eec:	udiv	r2, r2, r1
   13ef0:	cmp	r2, r0
   13ef4:	bcs	13f14 <abort@plt+0x2fdc>
   13ef8:	push	{fp, lr}
   13efc:	mov	fp, sp
   13f00:	bl	10e78 <__errno_location@plt>
   13f04:	mov	r1, #12
   13f08:	str	r1, [r0]
   13f0c:	mov	r0, #0
   13f10:	pop	{fp, pc}
   13f14:	b	10d10 <calloc@plt>
   13f18:	cmp	r0, #0
   13f1c:	movweq	r0, #1
   13f20:	cmn	r0, #1
   13f24:	ble	13f2c <abort@plt+0x2ff4>
   13f28:	b	10e18 <malloc@plt>
   13f2c:	push	{fp, lr}
   13f30:	mov	fp, sp
   13f34:	bl	10e78 <__errno_location@plt>
   13f38:	mov	r1, #12
   13f3c:	str	r1, [r0]
   13f40:	mov	r0, #0
   13f44:	pop	{fp, pc}
   13f48:	push	{fp, lr}
   13f4c:	mov	fp, sp
   13f50:	cmp	r0, #0
   13f54:	beq	13f70 <abort@plt+0x3038>
   13f58:	cmp	r1, #0
   13f5c:	beq	13f7c <abort@plt+0x3044>
   13f60:	cmn	r1, #1
   13f64:	ble	13f88 <abort@plt+0x3050>
   13f68:	pop	{fp, lr}
   13f6c:	b	10da0 <realloc@plt>
   13f70:	mov	r0, r1
   13f74:	pop	{fp, lr}
   13f78:	b	13f18 <abort@plt+0x2fe0>
   13f7c:	bl	145a0 <abort@plt+0x3668>
   13f80:	mov	r0, #0
   13f84:	pop	{fp, pc}
   13f88:	bl	10e78 <__errno_location@plt>
   13f8c:	mov	r1, #12
   13f90:	str	r1, [r0]
   13f94:	mov	r0, #0
   13f98:	pop	{fp, pc}
   13f9c:	mov	r1, r0
   13fa0:	sub	r2, r0, #65	; 0x41
   13fa4:	mov	r0, #1
   13fa8:	cmp	r2, #26
   13fac:	subcs	r2, r1, #97	; 0x61
   13fb0:	cmpcs	r2, #26
   13fb4:	bcs	13fbc <abort@plt+0x3084>
   13fb8:	bx	lr
   13fbc:	sub	r1, r1, #48	; 0x30
   13fc0:	cmp	r1, #10
   13fc4:	movcs	r0, #0
   13fc8:	bx	lr
   13fcc:	mov	r1, r0
   13fd0:	sub	r2, r0, #65	; 0x41
   13fd4:	mov	r0, #1
   13fd8:	cmp	r2, #26
   13fdc:	subcs	r1, r1, #97	; 0x61
   13fe0:	cmpcs	r1, #26
   13fe4:	movcs	r0, #0
   13fe8:	bx	lr
   13fec:	mov	r1, #0
   13ff0:	cmp	r0, #128	; 0x80
   13ff4:	movwcc	r1, #1
   13ff8:	mov	r0, r1
   13ffc:	bx	lr
   14000:	sub	r1, r0, #9
   14004:	clz	r1, r1
   14008:	lsr	r1, r1, #5
   1400c:	sub	r0, r0, #32
   14010:	clz	r0, r0
   14014:	lsr	r0, r0, #5
   14018:	orr	r0, r0, r1
   1401c:	bx	lr
   14020:	mov	r1, r0
   14024:	mov	r0, #1
   14028:	cmp	r1, #32
   1402c:	bxcc	lr
   14030:	cmp	r1, #127	; 0x7f
   14034:	movne	r0, #0
   14038:	bx	lr
   1403c:	sub	r1, r0, #48	; 0x30
   14040:	mov	r0, #0
   14044:	cmp	r1, #10
   14048:	movwcc	r0, #1
   1404c:	bx	lr
   14050:	sub	r1, r0, #33	; 0x21
   14054:	mov	r0, #0
   14058:	cmp	r1, #94	; 0x5e
   1405c:	movwcc	r0, #1
   14060:	bx	lr
   14064:	sub	r1, r0, #97	; 0x61
   14068:	mov	r0, #0
   1406c:	cmp	r1, #26
   14070:	movwcc	r0, #1
   14074:	bx	lr
   14078:	sub	r1, r0, #32
   1407c:	mov	r0, #0
   14080:	cmp	r1, #95	; 0x5f
   14084:	movwcc	r0, #1
   14088:	bx	lr
   1408c:	sub	r1, r0, #33	; 0x21
   14090:	cmp	r1, #93	; 0x5d
   14094:	bhi	14220 <abort@plt+0x32e8>
   14098:	mov	r0, #1
   1409c:	add	r2, pc, #0
   140a0:	ldr	pc, [r2, r1, lsl #2]
   140a4:	andeq	r4, r1, ip, lsl r2
   140a8:	andeq	r4, r1, ip, lsl r2
   140ac:	andeq	r4, r1, ip, lsl r2
   140b0:	andeq	r4, r1, ip, lsl r2
   140b4:	andeq	r4, r1, ip, lsl r2
   140b8:	andeq	r4, r1, ip, lsl r2
   140bc:	andeq	r4, r1, ip, lsl r2
   140c0:	andeq	r4, r1, ip, lsl r2
   140c4:	andeq	r4, r1, ip, lsl r2
   140c8:	andeq	r4, r1, ip, lsl r2
   140cc:	andeq	r4, r1, ip, lsl r2
   140d0:	andeq	r4, r1, ip, lsl r2
   140d4:	andeq	r4, r1, ip, lsl r2
   140d8:	andeq	r4, r1, ip, lsl r2
   140dc:	andeq	r4, r1, ip, lsl r2
   140e0:	andeq	r4, r1, r0, lsr #4
   140e4:	andeq	r4, r1, r0, lsr #4
   140e8:	andeq	r4, r1, r0, lsr #4
   140ec:	andeq	r4, r1, r0, lsr #4
   140f0:	andeq	r4, r1, r0, lsr #4
   140f4:	andeq	r4, r1, r0, lsr #4
   140f8:	andeq	r4, r1, r0, lsr #4
   140fc:	andeq	r4, r1, r0, lsr #4
   14100:	andeq	r4, r1, r0, lsr #4
   14104:	andeq	r4, r1, r0, lsr #4
   14108:	andeq	r4, r1, ip, lsl r2
   1410c:	andeq	r4, r1, ip, lsl r2
   14110:	andeq	r4, r1, ip, lsl r2
   14114:	andeq	r4, r1, ip, lsl r2
   14118:	andeq	r4, r1, ip, lsl r2
   1411c:	andeq	r4, r1, ip, lsl r2
   14120:	andeq	r4, r1, ip, lsl r2
   14124:	andeq	r4, r1, r0, lsr #4
   14128:	andeq	r4, r1, r0, lsr #4
   1412c:	andeq	r4, r1, r0, lsr #4
   14130:	andeq	r4, r1, r0, lsr #4
   14134:	andeq	r4, r1, r0, lsr #4
   14138:	andeq	r4, r1, r0, lsr #4
   1413c:	andeq	r4, r1, r0, lsr #4
   14140:	andeq	r4, r1, r0, lsr #4
   14144:	andeq	r4, r1, r0, lsr #4
   14148:	andeq	r4, r1, r0, lsr #4
   1414c:	andeq	r4, r1, r0, lsr #4
   14150:	andeq	r4, r1, r0, lsr #4
   14154:	andeq	r4, r1, r0, lsr #4
   14158:	andeq	r4, r1, r0, lsr #4
   1415c:	andeq	r4, r1, r0, lsr #4
   14160:	andeq	r4, r1, r0, lsr #4
   14164:	andeq	r4, r1, r0, lsr #4
   14168:	andeq	r4, r1, r0, lsr #4
   1416c:	andeq	r4, r1, r0, lsr #4
   14170:	andeq	r4, r1, r0, lsr #4
   14174:	andeq	r4, r1, r0, lsr #4
   14178:	andeq	r4, r1, r0, lsr #4
   1417c:	andeq	r4, r1, r0, lsr #4
   14180:	andeq	r4, r1, r0, lsr #4
   14184:	andeq	r4, r1, r0, lsr #4
   14188:	andeq	r4, r1, r0, lsr #4
   1418c:	andeq	r4, r1, ip, lsl r2
   14190:	andeq	r4, r1, ip, lsl r2
   14194:	andeq	r4, r1, ip, lsl r2
   14198:	andeq	r4, r1, ip, lsl r2
   1419c:	andeq	r4, r1, ip, lsl r2
   141a0:	andeq	r4, r1, ip, lsl r2
   141a4:	andeq	r4, r1, r0, lsr #4
   141a8:	andeq	r4, r1, r0, lsr #4
   141ac:	andeq	r4, r1, r0, lsr #4
   141b0:	andeq	r4, r1, r0, lsr #4
   141b4:	andeq	r4, r1, r0, lsr #4
   141b8:	andeq	r4, r1, r0, lsr #4
   141bc:	andeq	r4, r1, r0, lsr #4
   141c0:	andeq	r4, r1, r0, lsr #4
   141c4:	andeq	r4, r1, r0, lsr #4
   141c8:	andeq	r4, r1, r0, lsr #4
   141cc:	andeq	r4, r1, r0, lsr #4
   141d0:	andeq	r4, r1, r0, lsr #4
   141d4:	andeq	r4, r1, r0, lsr #4
   141d8:	andeq	r4, r1, r0, lsr #4
   141dc:	andeq	r4, r1, r0, lsr #4
   141e0:	andeq	r4, r1, r0, lsr #4
   141e4:	andeq	r4, r1, r0, lsr #4
   141e8:	andeq	r4, r1, r0, lsr #4
   141ec:	andeq	r4, r1, r0, lsr #4
   141f0:	andeq	r4, r1, r0, lsr #4
   141f4:	andeq	r4, r1, r0, lsr #4
   141f8:	andeq	r4, r1, r0, lsr #4
   141fc:	andeq	r4, r1, r0, lsr #4
   14200:	andeq	r4, r1, r0, lsr #4
   14204:	andeq	r4, r1, r0, lsr #4
   14208:	andeq	r4, r1, r0, lsr #4
   1420c:	andeq	r4, r1, ip, lsl r2
   14210:	andeq	r4, r1, ip, lsl r2
   14214:	andeq	r4, r1, ip, lsl r2
   14218:	andeq	r4, r1, ip, lsl r2
   1421c:	bx	lr
   14220:	mov	r0, #0
   14224:	bx	lr
   14228:	sub	r0, r0, #9
   1422c:	cmp	r0, #23
   14230:	movhi	r0, #0
   14234:	bxhi	lr
   14238:	bic	r0, r0, #-16777216	; 0xff000000
   1423c:	movw	r1, #31
   14240:	movt	r1, #128	; 0x80
   14244:	mov	r2, #1
   14248:	and	r0, r2, r1, lsr r0
   1424c:	bx	lr
   14250:	sub	r1, r0, #65	; 0x41
   14254:	mov	r0, #0
   14258:	cmp	r1, #26
   1425c:	movwcc	r0, #1
   14260:	bx	lr
   14264:	mov	r1, r0
   14268:	sub	r2, r0, #48	; 0x30
   1426c:	mov	r0, #1
   14270:	cmp	r2, #22
   14274:	bhi	1428c <abort@plt+0x3354>
   14278:	mov	ip, #1
   1427c:	movw	r3, #1023	; 0x3ff
   14280:	movt	r3, #126	; 0x7e
   14284:	tst	r3, ip, lsl r2
   14288:	bxne	lr
   1428c:	sub	r1, r1, #97	; 0x61
   14290:	cmp	r1, #6
   14294:	movcs	r0, #0
   14298:	bxcs	lr
   1429c:	bx	lr
   142a0:	sub	r1, r0, #65	; 0x41
   142a4:	cmp	r1, #26
   142a8:	addcc	r0, r0, #32
   142ac:	bx	lr
   142b0:	sub	r1, r0, #97	; 0x61
   142b4:	cmp	r1, #26
   142b8:	subcc	r0, r0, #32
   142bc:	bx	lr
   142c0:	push	{r4, r5, fp, lr}
   142c4:	add	fp, sp, #8
   142c8:	mov	r4, r1
   142cc:	mov	r5, r0
   142d0:	bl	14300 <abort@plt+0x33c8>
   142d4:	cmp	r0, #0
   142d8:	beq	142f0 <abort@plt+0x33b8>
   142dc:	mov	r2, r0
   142e0:	mov	r0, r5
   142e4:	mov	r1, r4
   142e8:	pop	{r4, r5, fp, lr}
   142ec:	b	10ee4 <strtod_l@plt>
   142f0:	cmp	r4, #0
   142f4:	strne	r5, [r4]
   142f8:	vmov.i32	d0, #0	; 0x00000000
   142fc:	pop	{r4, r5, fp, pc}
   14300:	push	{r4, sl, fp, lr}
   14304:	add	fp, sp, #8
   14308:	movw	r4, #25216	; 0x6280
   1430c:	movt	r4, #2
   14310:	ldr	r0, [r4]
   14314:	cmp	r0, #0
   14318:	beq	14324 <abort@plt+0x33ec>
   1431c:	ldr	r0, [r4]
   14320:	pop	{r4, sl, fp, pc}
   14324:	movw	r1, #20953	; 0x51d9
   14328:	movt	r1, #1
   1432c:	movw	r0, #8127	; 0x1fbf
   14330:	mov	r2, #0
   14334:	bl	10f14 <newlocale@plt>
   14338:	str	r0, [r4]
   1433c:	ldr	r0, [r4]
   14340:	pop	{r4, sl, fp, pc}
   14344:	push	{r4, r5, r6, sl, fp, lr}
   14348:	add	fp, sp, #16
   1434c:	mov	r4, r0
   14350:	bl	10de8 <__fpending@plt>
   14354:	mov	r5, r0
   14358:	mov	r0, r4
   1435c:	bl	10df4 <ferror_unlocked@plt>
   14360:	mov	r6, r0
   14364:	mov	r0, r4
   14368:	bl	14498 <abort@plt+0x3560>
   1436c:	cmp	r6, #0
   14370:	beq	14390 <abort@plt+0x3458>
   14374:	mvn	r4, #0
   14378:	cmp	r0, #0
   1437c:	bne	143c4 <abort@plt+0x348c>
   14380:	bl	10e78 <__errno_location@plt>
   14384:	mov	r1, #0
   14388:	str	r1, [r0]
   1438c:	b	143c4 <abort@plt+0x348c>
   14390:	cmp	r0, #0
   14394:	mov	r4, r0
   14398:	mvnne	r4, #0
   1439c:	cmp	r5, #0
   143a0:	bne	143c4 <abort@plt+0x348c>
   143a4:	cmp	r0, #0
   143a8:	beq	143c4 <abort@plt+0x348c>
   143ac:	bl	10e78 <__errno_location@plt>
   143b0:	ldr	r0, [r0]
   143b4:	subs	r4, r0, #9
   143b8:	mvnne	r4, #0
   143bc:	mov	r0, r4
   143c0:	pop	{r4, r5, r6, sl, fp, pc}
   143c4:	mov	r0, r4
   143c8:	pop	{r4, r5, r6, sl, fp, pc}
   143cc:	andeq	r0, r0, r0
   143d0:	push	{fp, lr}
   143d4:	mov	fp, sp
   143d8:	vldr	d16, [pc, #160]	; 14480 <abort@plt+0x3548>
   143dc:	vcmpe.f64	d0, d16
   143e0:	vmrs	APSR_nzcv, fpscr
   143e4:	ble	14460 <abort@plt+0x3528>
   143e8:	vldr	d16, [pc, #152]	; 14488 <abort@plt+0x3550>
   143ec:	movw	ip, #51712	; 0xca00
   143f0:	movt	ip, #15258	; 0x3b9a
   143f4:	vcmpe.f64	d0, d16
   143f8:	vmrs	APSR_nzcv, fpscr
   143fc:	bpl	14470 <abort@plt+0x3538>
   14400:	vcvt.s32.f64	s2, d0
   14404:	vldr	d16, [pc, #132]	; 14490 <abort@plt+0x3558>
   14408:	vmov	lr, s2
   1440c:	vcvt.f64.s32	d17, s2
   14410:	vsub.f64	d17, d0, d17
   14414:	vmul.f64	d16, d17, d16
   14418:	vcvt.s32.f64	s0, d16
   1441c:	vmov	r2, s0
   14420:	vcvt.f64.s32	d17, s0
   14424:	vcmpe.f64	d16, d17
   14428:	vmrs	APSR_nzcv, fpscr
   1442c:	addgt	r2, r2, #1
   14430:	movw	r3, #12193	; 0x2fa1
   14434:	movt	r3, #17592	; 0x44b8
   14438:	smmul	r3, r2, r3
   1443c:	asr	r1, r3, #28
   14440:	add	r1, r1, r3, lsr #31
   14444:	mls	r2, r1, ip, r2
   14448:	add	r1, r1, lr
   1444c:	add	r1, r1, r2, asr #31
   14450:	cmp	r2, #0
   14454:	addlt	r2, r2, ip
   14458:	bl	14790 <abort@plt+0x3858>
   1445c:	pop	{fp, pc}
   14460:	mov	r1, #-2147483648	; 0x80000000
   14464:	mov	r2, #0
   14468:	bl	14790 <abort@plt+0x3858>
   1446c:	pop	{fp, pc}
   14470:	sub	r2, ip, #1
   14474:	mvn	r1, #-2147483648	; 0x80000000
   14478:	bl	14790 <abort@plt+0x3858>
   1447c:	pop	{fp, pc}
   14480:	andeq	r0, r0, r0
   14484:	mvngt	r0, r0
   14488:	andeq	r0, r0, r0
   1448c:	mvnmi	r0, r0
   14490:	andeq	r0, r0, r0
   14494:	bicmi	ip, sp, r5, ror #26
   14498:	push	{r4, r5, fp, lr}
   1449c:	add	fp, sp, #8
   144a0:	sub	sp, sp, #8
   144a4:	mov	r4, r0
   144a8:	bl	10eb4 <fileno@plt>
   144ac:	cmn	r0, #1
   144b0:	ble	14528 <abort@plt+0x35f0>
   144b4:	mov	r0, r4
   144b8:	bl	10e30 <__freading@plt>
   144bc:	cmp	r0, #0
   144c0:	beq	144ec <abort@plt+0x35b4>
   144c4:	mov	r0, r4
   144c8:	bl	10eb4 <fileno@plt>
   144cc:	mov	r1, #1
   144d0:	str	r1, [sp]
   144d4:	mov	r2, #0
   144d8:	mov	r3, #0
   144dc:	bl	10dd0 <lseek64@plt>
   144e0:	and	r0, r0, r1
   144e4:	cmn	r0, #1
   144e8:	beq	14528 <abort@plt+0x35f0>
   144ec:	mov	r0, r4
   144f0:	bl	14538 <abort@plt+0x3600>
   144f4:	cmp	r0, #0
   144f8:	beq	14528 <abort@plt+0x35f0>
   144fc:	bl	10e78 <__errno_location@plt>
   14500:	ldr	r5, [r0]
   14504:	mov	r0, r4
   14508:	bl	10ecc <fclose@plt>
   1450c:	cmp	r5, #0
   14510:	beq	14520 <abort@plt+0x35e8>
   14514:	bl	10e78 <__errno_location@plt>
   14518:	str	r5, [r0]
   1451c:	mvn	r0, #0
   14520:	sub	sp, fp, #8
   14524:	pop	{r4, r5, fp, pc}
   14528:	mov	r0, r4
   1452c:	sub	sp, fp, #8
   14530:	pop	{r4, r5, fp, lr}
   14534:	b	10ecc <fclose@plt>
   14538:	push	{r4, sl, fp, lr}
   1453c:	add	fp, sp, #8
   14540:	mov	r4, r0
   14544:	cmp	r0, #0
   14548:	beq	14560 <abort@plt+0x3628>
   1454c:	mov	r0, r4
   14550:	bl	10e30 <__freading@plt>
   14554:	cmp	r0, #0
   14558:	movne	r0, r4
   1455c:	blne	1456c <abort@plt+0x3634>
   14560:	mov	r0, r4
   14564:	pop	{r4, sl, fp, lr}
   14568:	b	10d40 <fflush@plt>
   1456c:	ldrb	r1, [r0, #1]
   14570:	tst	r1, #1
   14574:	bxeq	lr
   14578:	push	{fp, lr}
   1457c:	mov	fp, sp
   14580:	sub	sp, sp, #8
   14584:	mov	r1, #1
   14588:	str	r1, [sp]
   1458c:	mov	r2, #0
   14590:	mov	r3, #0
   14594:	bl	145c8 <abort@plt+0x3690>
   14598:	mov	sp, fp
   1459c:	pop	{fp, pc}
   145a0:	push	{r4, r5, r6, sl, fp, lr}
   145a4:	add	fp, sp, #16
   145a8:	mov	r4, r0
   145ac:	bl	10e78 <__errno_location@plt>
   145b0:	mov	r5, r0
   145b4:	ldr	r6, [r0]
   145b8:	mov	r0, r4
   145bc:	bl	10d4c <free@plt>
   145c0:	str	r6, [r5]
   145c4:	pop	{r4, r5, r6, sl, fp, pc}
   145c8:	push	{r4, r5, r6, r7, fp, lr}
   145cc:	add	fp, sp, #16
   145d0:	sub	sp, sp, #8
   145d4:	mov	r5, r3
   145d8:	mov	r6, r2
   145dc:	mov	r4, r0
   145e0:	ldr	r0, [r0, #4]
   145e4:	ldr	r1, [r4, #8]
   145e8:	cmp	r1, r0
   145ec:	bne	14608 <abort@plt+0x36d0>
   145f0:	ldrd	r0, [r4, #16]
   145f4:	cmp	r1, r0
   145f8:	bne	14608 <abort@plt+0x36d0>
   145fc:	ldr	r0, [r4, #36]	; 0x24
   14600:	cmp	r0, #0
   14604:	beq	14620 <abort@plt+0x36e8>
   14608:	mov	r0, r4
   1460c:	mov	r2, r6
   14610:	mov	r3, r5
   14614:	sub	sp, fp, #16
   14618:	pop	{r4, r5, r6, r7, fp, lr}
   1461c:	b	10ed8 <fseeko64@plt>
   14620:	ldr	r7, [fp, #8]
   14624:	mov	r0, r4
   14628:	bl	10eb4 <fileno@plt>
   1462c:	str	r7, [sp]
   14630:	mov	r2, r6
   14634:	mov	r3, r5
   14638:	bl	10dd0 <lseek64@plt>
   1463c:	and	r2, r0, r1
   14640:	cmn	r2, #1
   14644:	mvneq	r0, #0
   14648:	subeq	sp, fp, #16
   1464c:	popeq	{r4, r5, r6, r7, fp, pc}
   14650:	strd	r0, [r4, #80]	; 0x50
   14654:	ldr	r0, [r4]
   14658:	bic	r0, r0, #16
   1465c:	str	r0, [r4]
   14660:	mov	r0, #0
   14664:	sub	sp, fp, #16
   14668:	pop	{r4, r5, r6, r7, fp, pc}
   1466c:	push	{fp, lr}
   14670:	mov	fp, sp
   14674:	bl	10e78 <__errno_location@plt>
   14678:	mov	r1, #12
   1467c:	str	r1, [r0]
   14680:	mov	r0, #0
   14684:	pop	{fp, pc}
   14688:	b	13f18 <abort@plt+0x2fe0>
   1468c:	cmp	r1, #0
   14690:	orreq	r1, r1, #1
   14694:	b	13f48 <abort@plt+0x3010>
   14698:	b	13ec4 <abort@plt+0x2f8c>
   1469c:	clz	r3, r2
   146a0:	lsr	ip, r3, #5
   146a4:	clz	r3, r1
   146a8:	lsr	r3, r3, #5
   146ac:	orrs	r3, r3, ip
   146b0:	movwne	r1, #1
   146b4:	movwne	r2, #1
   146b8:	b	14754 <abort@plt+0x381c>
   146bc:	push	{fp, lr}
   146c0:	mov	fp, sp
   146c4:	mov	r0, #14
   146c8:	bl	10f08 <nl_langinfo@plt>
   146cc:	movw	r1, #19194	; 0x4afa
   146d0:	movt	r1, #1
   146d4:	cmp	r0, #0
   146d8:	movne	r1, r0
   146dc:	ldrb	r2, [r1]
   146e0:	movw	r0, #20955	; 0x51db
   146e4:	movt	r0, #1
   146e8:	cmp	r2, #0
   146ec:	movne	r0, r1
   146f0:	pop	{fp, pc}
   146f4:	push	{r4, r5, r6, r7, fp, lr}
   146f8:	add	fp, sp, #16
   146fc:	sub	sp, sp, #8
   14700:	mov	r7, r2
   14704:	mov	r4, r1
   14708:	add	r5, sp, #4
   1470c:	cmp	r0, #0
   14710:	movne	r5, r0
   14714:	mov	r0, r5
   14718:	bl	10e00 <mbrtowc@plt>
   1471c:	mov	r6, r0
   14720:	cmp	r7, #0
   14724:	beq	14748 <abort@plt+0x3810>
   14728:	cmn	r6, #2
   1472c:	bcc	14748 <abort@plt+0x3810>
   14730:	mov	r0, #0
   14734:	bl	14818 <abort@plt+0x38e0>
   14738:	cmp	r0, #0
   1473c:	ldrbeq	r0, [r4]
   14740:	streq	r0, [r5]
   14744:	moveq	r6, #1
   14748:	mov	r0, r6
   1474c:	sub	sp, fp, #16
   14750:	pop	{r4, r5, r6, r7, fp, pc}
   14754:	cmp	r2, #0
   14758:	beq	14788 <abort@plt+0x3850>
   1475c:	mvn	r3, #0
   14760:	udiv	r3, r3, r2
   14764:	cmp	r3, r1
   14768:	bcs	14788 <abort@plt+0x3850>
   1476c:	push	{fp, lr}
   14770:	mov	fp, sp
   14774:	bl	10e78 <__errno_location@plt>
   14778:	mov	r1, #12
   1477c:	str	r1, [r0]
   14780:	mov	r0, #0
   14784:	pop	{fp, pc}
   14788:	mul	r1, r2, r1
   1478c:	b	13f48 <abort@plt+0x3010>
   14790:	stm	r0, {r1, r2}
   14794:	bx	lr
   14798:	mov	ip, #0
   1479c:	cmp	r0, r2
   147a0:	mov	r0, #0
   147a4:	movwgt	r0, #1
   147a8:	sublt	r0, r0, #1
   147ac:	cmp	r1, r3
   147b0:	movwgt	ip, #1
   147b4:	sublt	ip, ip, #1
   147b8:	add	r0, ip, r0, lsl #1
   147bc:	bx	lr
   147c0:	mov	r2, #1
   147c4:	asr	r3, r0, #31
   147c8:	cmp	r0, #0
   147cc:	addgt	r3, r2, r0, asr #31
   147d0:	cmp	r1, #0
   147d4:	movwne	r1, #1
   147d8:	clz	r0, r0
   147dc:	lsr	r0, r0, #5
   147e0:	and	r0, r0, r1
   147e4:	add	r0, r3, r0
   147e8:	bx	lr
   147ec:	nop	{0}
   147f0:	vldr	d16, [pc, #24]	; 14810 <abort@plt+0x38d8>
   147f4:	vmov	s0, r1
   147f8:	vcvt.f64.s32	d17, s0
   147fc:	vmov	s0, r0
   14800:	vcvt.f64.s32	d18, s0
   14804:	vdiv.f64	d16, d17, d16
   14808:	vadd.f64	d0, d16, d18
   1480c:	bx	lr
   14810:	andeq	r0, r0, r0
   14814:	bicmi	ip, sp, r5, ror #26
   14818:	push	{r4, sl, fp, lr}
   1481c:	add	fp, sp, #8
   14820:	sub	sp, sp, #264	; 0x108
   14824:	add	r1, sp, #7
   14828:	movw	r2, #257	; 0x101
   1482c:	bl	1487c <abort@plt+0x3944>
   14830:	mov	r4, #0
   14834:	cmp	r0, #0
   14838:	bne	14870 <abort@plt+0x3938>
   1483c:	add	r0, sp, #7
   14840:	movw	r1, #20953	; 0x51d9
   14844:	movt	r1, #1
   14848:	bl	10d28 <strcmp@plt>
   1484c:	cmp	r0, #0
   14850:	beq	14870 <abort@plt+0x3938>
   14854:	add	r0, sp, #7
   14858:	movw	r1, #20961	; 0x51e1
   1485c:	movt	r1, #1
   14860:	bl	10d28 <strcmp@plt>
   14864:	mov	r4, r0
   14868:	cmp	r0, #0
   1486c:	movwne	r4, #1
   14870:	mov	r0, r4
   14874:	sub	sp, fp, #8
   14878:	pop	{r4, sl, fp, pc}
   1487c:	b	14880 <abort@plt+0x3948>
   14880:	push	{r4, r5, r6, r7, fp, lr}
   14884:	add	fp, sp, #16
   14888:	mov	r6, r2
   1488c:	mov	r4, r1
   14890:	bl	1491c <abort@plt+0x39e4>
   14894:	cmp	r0, #0
   14898:	beq	148c8 <abort@plt+0x3990>
   1489c:	mov	r7, r0
   148a0:	bl	10e6c <strlen@plt>
   148a4:	cmp	r0, r6
   148a8:	bcs	148e8 <abort@plt+0x39b0>
   148ac:	add	r2, r0, #1
   148b0:	mov	r0, r4
   148b4:	mov	r1, r7
   148b8:	bl	10d70 <memcpy@plt>
   148bc:	mov	r5, #0
   148c0:	mov	r0, r5
   148c4:	pop	{r4, r5, r6, r7, fp, pc}
   148c8:	mov	r5, #22
   148cc:	cmp	r6, #0
   148d0:	movne	r0, #0
   148d4:	strbne	r0, [r4]
   148d8:	movne	r0, r5
   148dc:	popne	{r4, r5, r6, r7, fp, pc}
   148e0:	mov	r0, r5
   148e4:	pop	{r4, r5, r6, r7, fp, pc}
   148e8:	mov	r5, #34	; 0x22
   148ec:	cmp	r6, #0
   148f0:	beq	14910 <abort@plt+0x39d8>
   148f4:	sub	r6, r6, #1
   148f8:	mov	r0, r4
   148fc:	mov	r1, r7
   14900:	mov	r2, r6
   14904:	bl	10d70 <memcpy@plt>
   14908:	mov	r0, #0
   1490c:	strb	r0, [r4, r6]
   14910:	mov	r0, r5
   14914:	pop	{r4, r5, r6, r7, fp, pc}
   14918:	b	1491c <abort@plt+0x39e4>
   1491c:	mov	r1, #0
   14920:	b	10ef0 <setlocale@plt>
   14924:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14928:	mov	r7, r0
   1492c:	ldr	r6, [pc, #72]	; 1497c <abort@plt+0x3a44>
   14930:	ldr	r5, [pc, #72]	; 14980 <abort@plt+0x3a48>
   14934:	add	r6, pc, r6
   14938:	add	r5, pc, r5
   1493c:	sub	r6, r6, r5
   14940:	mov	r8, r1
   14944:	mov	r9, r2
   14948:	bl	10cf0 <calloc@plt-0x20>
   1494c:	asrs	r6, r6, #2
   14950:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14954:	mov	r4, #0
   14958:	add	r4, r4, #1
   1495c:	ldr	r3, [r5], #4
   14960:	mov	r2, r9
   14964:	mov	r1, r8
   14968:	mov	r0, r7
   1496c:	blx	r3
   14970:	cmp	r6, r4
   14974:	bne	14958 <abort@plt+0x3a20>
   14978:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1497c:	ldrdeq	r1, [r1], -r0
   14980:	andeq	r1, r1, r8, asr #11
   14984:	bx	lr
   14988:	ldr	r3, [pc, #12]	; 1499c <abort@plt+0x3a64>
   1498c:	mov	r1, #0
   14990:	add	r3, pc, r3
   14994:	ldr	r2, [r3]
   14998:	b	10e84 <__cxa_atexit@plt>
   1499c:	andeq	r1, r1, ip, lsr r7

Disassembly of section .fini:

000149a0 <.fini>:
   149a0:	push	{r3, lr}
   149a4:	pop	{r3, pc}
