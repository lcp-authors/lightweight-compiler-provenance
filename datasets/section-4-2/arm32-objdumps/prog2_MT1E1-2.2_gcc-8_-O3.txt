
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

000106fc <.init>:
   106fc:	push	{r3, lr}
   10700:	bl	108d4 <_start@@Base+0x3c>
   10704:	pop	{r3, pc}

Disassembly of section .plt:

00010708 <strcmp@plt-0x14>:
   10708:	push	{lr}		; (str lr, [sp, #-4]!)
   1070c:	ldr	lr, [pc, #4]	; 10718 <strcmp@plt-0x4>
   10710:	add	lr, pc, lr
   10714:	ldr	pc, [lr, #8]!
   10718:	andeq	r0, r1, r8, ror #17

0001071c <strcmp@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2280]!	; 0x8e8

00010728 <__isoc99_fscanf@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #16, 20	; 0x10000
   10730:	ldr	pc, [ip, #2272]!	; 0x8e0

00010734 <fopen@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #16, 20	; 0x10000
   1073c:	ldr	pc, [ip, #2264]!	; 0x8d8

00010740 <free@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #16, 20	; 0x10000
   10748:	ldr	pc, [ip, #2256]!	; 0x8d0

0001074c <realloc@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #16, 20	; 0x10000
   10754:	ldr	pc, [ip, #2248]!	; 0x8c8

00010758 <fwrite@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #16, 20	; 0x10000
   10760:	ldr	pc, [ip, #2240]!	; 0x8c0

00010764 <strcpy@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #16, 20	; 0x10000
   1076c:	ldr	pc, [ip, #2232]!	; 0x8b8

00010770 <malloc@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #16, 20	; 0x10000
   10778:	ldr	pc, [ip, #2224]!	; 0x8b0

0001077c <__libc_start_main@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #16, 20	; 0x10000
   10784:	ldr	pc, [ip, #2216]!	; 0x8a8

00010788 <__gmon_start__@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #16, 20	; 0x10000
   10790:	ldr	pc, [ip, #2208]!	; 0x8a0

00010794 <strlen@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #16, 20	; 0x10000
   1079c:	ldr	pc, [ip, #2200]!	; 0x898

000107a0 <fprintf@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #16, 20	; 0x10000
   107a8:	ldr	pc, [ip, #2192]!	; 0x890

000107ac <fclose@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #16, 20	; 0x10000
   107b4:	ldr	pc, [ip, #2184]!	; 0x888

000107b8 <abort@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #16, 20	; 0x10000
   107c0:	ldr	pc, [ip, #2176]!	; 0x880

Disassembly of section .text:

000107c4 <main@@Base>:
   107c4:	movw	r1, #3020	; 0xbcc
   107c8:	movt	r1, #1
   107cc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   107d0:	movw	r0, #3024	; 0xbd0
   107d4:	movt	r0, #1
   107d8:	strd	r6, [sp, #8]
   107dc:	mov	r5, #0
   107e0:	strd	r8, [sp, #16]
   107e4:	movw	r6, #4176	; 0x1050
   107e8:	movt	r6, #2
   107ec:	str	lr, [sp, #24]
   107f0:	sub	sp, sp, #12
   107f4:	bl	10734 <fopen@plt>
   107f8:	add	r1, sp, #4
   107fc:	mov	r9, r0
   10800:	str	r5, [sp, #4]
   10804:	bl	10988 <conta_vitorias@@Base>
   10808:	mov	r8, r0
   1080c:	mov	r2, #12
   10810:	ldr	r3, [r6]
   10814:	movw	r0, #3032	; 0xbd8
   10818:	movt	r0, #1
   1081c:	mov	r1, #1
   10820:	bl	10758 <fwrite@plt>
   10824:	cmp	r8, r5
   10828:	beq	1086c <main@@Base+0xa8>
   1082c:	ldr	r3, [sp, #4]
   10830:	cmp	r3, r5
   10834:	ble	1086c <main@@Base+0xa8>
   10838:	movw	r7, #3048	; 0xbe8
   1083c:	movt	r7, #1
   10840:	mov	r4, r8
   10844:	mov	r2, r4
   10848:	mov	r1, r7
   1084c:	ldr	r0, [r6]
   10850:	add	r5, r5, #1
   10854:	add	r4, r4, #20
   10858:	ldr	r3, [r4, #-4]
   1085c:	bl	107a0 <fprintf@plt>
   10860:	ldr	r3, [sp, #4]
   10864:	cmp	r3, r5
   10868:	bgt	10844 <main@@Base+0x80>
   1086c:	mov	r0, r8
   10870:	bl	10740 <free@plt>
   10874:	mov	r0, r9
   10878:	bl	107ac <fclose@plt>
   1087c:	mov	r0, #0
   10880:	add	sp, sp, #12
   10884:	ldrd	r4, [sp]
   10888:	ldrd	r6, [sp, #8]
   1088c:	ldrd	r8, [sp, #16]
   10890:	add	sp, sp, #24
   10894:	pop	{pc}		; (ldr pc, [sp], #4)

00010898 <_start@@Base>:
   10898:	mov	fp, #0
   1089c:	mov	lr, #0
   108a0:	pop	{r1}		; (ldr r1, [sp], #4)
   108a4:	mov	r2, sp
   108a8:	push	{r2}		; (str r2, [sp, #-4]!)
   108ac:	push	{r0}		; (str r0, [sp, #-4]!)
   108b0:	ldr	ip, [pc, #16]	; 108c8 <_start@@Base+0x30>
   108b4:	push	{ip}		; (str ip, [sp, #-4]!)
   108b8:	ldr	r0, [pc, #12]	; 108cc <_start@@Base+0x34>
   108bc:	ldr	r3, [pc, #12]	; 108d0 <_start@@Base+0x38>
   108c0:	bl	1077c <__libc_start_main@plt>
   108c4:	bl	107b8 <abort@plt>
   108c8:			; <UNDEFINED> instruction: 0x00010bb8
   108cc:	andeq	r0, r1, r4, asr #15
   108d0:	andeq	r0, r1, r8, asr fp
   108d4:	ldr	r3, [pc, #20]	; 108f0 <_start@@Base+0x58>
   108d8:	ldr	r2, [pc, #20]	; 108f4 <_start@@Base+0x5c>
   108dc:	add	r3, pc, r3
   108e0:	ldr	r2, [r3, r2]
   108e4:	cmp	r2, #0
   108e8:	bxeq	lr
   108ec:	b	10788 <__gmon_start__@plt>
   108f0:	andeq	r0, r1, ip, lsl r7
   108f4:	andeq	r0, r0, r4, asr #32
   108f8:	ldr	r0, [pc, #24]	; 10918 <_start@@Base+0x80>
   108fc:	ldr	r3, [pc, #24]	; 1091c <_start@@Base+0x84>
   10900:	cmp	r3, r0
   10904:	bxeq	lr
   10908:	ldr	r3, [pc, #16]	; 10920 <_start@@Base+0x88>
   1090c:	cmp	r3, #0
   10910:	bxeq	lr
   10914:	bx	r3
   10918:	andeq	r1, r2, r0, asr r0
   1091c:	andeq	r1, r2, r0, asr r0
   10920:	andeq	r0, r0, r0
   10924:	ldr	r0, [pc, #36]	; 10950 <_start@@Base+0xb8>
   10928:	ldr	r1, [pc, #36]	; 10954 <_start@@Base+0xbc>
   1092c:	sub	r1, r1, r0
   10930:	asr	r1, r1, #2
   10934:	add	r1, r1, r1, lsr #31
   10938:	asrs	r1, r1, #1
   1093c:	bxeq	lr
   10940:	ldr	r3, [pc, #16]	; 10958 <_start@@Base+0xc0>
   10944:	cmp	r3, #0
   10948:	bxeq	lr
   1094c:	bx	r3
   10950:	andeq	r1, r2, r0, asr r0
   10954:	andeq	r1, r2, r0, asr r0
   10958:	andeq	r0, r0, r0
   1095c:	push	{r4, lr}
   10960:	ldr	r4, [pc, #24]	; 10980 <_start@@Base+0xe8>
   10964:	ldrb	r3, [r4]
   10968:	cmp	r3, #0
   1096c:	popne	{r4, pc}
   10970:	bl	108f8 <_start@@Base+0x60>
   10974:	mov	r3, #1
   10978:	strb	r3, [r4]
   1097c:	pop	{r4, pc}
   10980:	andeq	r1, r2, r4, asr r0
   10984:	b	10924 <_start@@Base+0x8c>

00010988 <conta_vitorias@@Base>:
   10988:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1098c:	strd	r6, [sp, #8]
   10990:	mov	r7, r1
   10994:	strd	r8, [sp, #16]
   10998:	mov	r9, r0
   1099c:	mov	r0, #20
   109a0:	strd	sl, [sp, #24]
   109a4:	str	lr, [sp, #32]
   109a8:	sub	sp, sp, #44	; 0x2c
   109ac:	bl	10770 <malloc@plt>
   109b0:	subs	r4, r0, #0
   109b4:	beq	10b50 <conta_vitorias@@Base+0x1c8>
   109b8:	mov	r3, #0
   109bc:	movw	r8, #3016	; 0xbc8
   109c0:	movt	r8, #1
   109c4:	mov	sl, r3
   109c8:	str	r3, [r7]
   109cc:	add	r2, sp, #4
   109d0:	mov	r1, r8
   109d4:	mov	r0, r9
   109d8:	bl	10728 <__isoc99_fscanf@plt>
   109dc:	cmp	r0, #1
   109e0:	bne	10a90 <conta_vitorias@@Base+0x108>
   109e4:	add	r0, sp, #4
   109e8:	bl	10794 <strlen@plt>
   109ec:	ldr	r6, [r7]
   109f0:	add	r3, sp, #40	; 0x28
   109f4:	add	r0, r3, r0
   109f8:	strb	sl, [r0, #-36]	; 0xffffffdc
   109fc:	cmp	r6, #0
   10a00:	ble	10b48 <conta_vitorias@@Base+0x1c0>
   10a04:	mov	r5, r4
   10a08:	mov	fp, #0
   10a0c:	b	10a1c <conta_vitorias@@Base+0x94>
   10a10:	cmp	r6, fp
   10a14:	add	r5, r5, #20
   10a18:	beq	10a44 <conta_vitorias@@Base+0xbc>
   10a1c:	mov	r1, r5
   10a20:	add	r0, sp, #4
   10a24:	bl	1071c <strcmp@plt>
   10a28:	cmp	r0, #0
   10a2c:	add	fp, fp, #1
   10a30:	bne	10a10 <conta_vitorias@@Base+0x88>
   10a34:	ldr	r3, [r5, #16]
   10a38:	add	r3, r3, #1
   10a3c:	str	r3, [r5, #16]
   10a40:	b	109cc <conta_vitorias@@Base+0x44>
   10a44:	mov	r5, r6
   10a48:	add	r6, r6, #1
   10a4c:	mov	r0, r4
   10a50:	add	r6, r6, r6, lsl #2
   10a54:	lsl	r1, r6, #2
   10a58:	bl	1074c <realloc@plt>
   10a5c:	subs	r4, r0, #0
   10a60:	beq	10b50 <conta_vitorias@@Base+0x1c8>
   10a64:	add	r5, r5, r5, lsl #2
   10a68:	add	r1, sp, #4
   10a6c:	add	r5, r4, r5, lsl #2
   10a70:	mov	r0, r5
   10a74:	bl	10764 <strcpy@plt>
   10a78:	ldr	r3, [r7]
   10a7c:	mov	r2, #1
   10a80:	str	r2, [r5, #16]
   10a84:	add	r3, r3, r2
   10a88:	str	r3, [r7]
   10a8c:	b	109cc <conta_vitorias@@Base+0x44>
   10a90:	ldr	r6, [r7]
   10a94:	cmp	r6, #1
   10a98:	ble	10b28 <conta_vitorias@@Base+0x1a0>
   10a9c:	add	lr, r4, #20
   10aa0:	mov	r5, #1
   10aa4:	ldrd	r0, [lr]
   10aa8:	mov	r3, lr
   10aac:	mov	r2, r5
   10ab0:	ldrd	r8, [lr, #8]
   10ab4:	ldr	ip, [lr, #16]
   10ab8:	strd	r0, [sp, #20]
   10abc:	strd	r8, [sp, #28]
   10ac0:	str	ip, [sp, #36]	; 0x24
   10ac4:	ldr	r1, [r3, #-4]
   10ac8:	mov	r8, r3
   10acc:	sub	r7, r3, #20
   10ad0:	cmp	r1, ip
   10ad4:	bge	10b00 <conta_vitorias@@Base+0x178>
   10ad8:	ldrd	r0, [r3, #-20]	; 0xffffffec
   10adc:	subs	r2, r2, #1
   10ae0:	strd	r0, [r3]
   10ae4:	ldrd	r0, [r7, #8]
   10ae8:	strd	r0, [r3, #8]
   10aec:	ldr	r1, [r7, #16]
   10af0:	str	r1, [r3, #16]
   10af4:	mov	r3, r7
   10af8:	bne	10ac4 <conta_vitorias@@Base+0x13c>
   10afc:	mov	r8, r4
   10b00:	ldrd	r2, [sp, #20]
   10b04:	add	r5, r5, #1
   10b08:	add	lr, lr, #20
   10b0c:	cmp	r6, r5
   10b10:	ldrd	r0, [sp, #28]
   10b14:	ldr	ip, [sp, #36]	; 0x24
   10b18:	strd	r2, [r8]
   10b1c:	strd	r0, [r8, #8]
   10b20:	str	ip, [r8, #16]
   10b24:	bne	10aa4 <conta_vitorias@@Base+0x11c>
   10b28:	mov	r0, r4
   10b2c:	add	sp, sp, #44	; 0x2c
   10b30:	ldrd	r4, [sp]
   10b34:	ldrd	r6, [sp, #8]
   10b38:	ldrd	r8, [sp, #16]
   10b3c:	ldrd	sl, [sp, #24]
   10b40:	add	sp, sp, #32
   10b44:	pop	{pc}		; (ldr pc, [sp], #4)
   10b48:	mov	r5, #0
   10b4c:	b	10a48 <conta_vitorias@@Base+0xc0>
   10b50:	mov	r4, #0
   10b54:	b	10b28 <conta_vitorias@@Base+0x1a0>

00010b58 <__libc_csu_init@@Base>:
   10b58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b5c:	mov	r7, r0
   10b60:	ldr	r6, [pc, #72]	; 10bb0 <__libc_csu_init@@Base+0x58>
   10b64:	ldr	r5, [pc, #72]	; 10bb4 <__libc_csu_init@@Base+0x5c>
   10b68:	add	r6, pc, r6
   10b6c:	add	r5, pc, r5
   10b70:	sub	r6, r6, r5
   10b74:	mov	r8, r1
   10b78:	mov	r9, r2
   10b7c:	bl	106fc <strcmp@plt-0x20>
   10b80:	asrs	r6, r6, #2
   10b84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b88:	mov	r4, #0
   10b8c:	add	r4, r4, #1
   10b90:	ldr	r3, [r5], #4
   10b94:	mov	r2, r9
   10b98:	mov	r1, r8
   10b9c:	mov	r0, r7
   10ba0:	blx	r3
   10ba4:	cmp	r6, r4
   10ba8:	bne	10b8c <__libc_csu_init@@Base+0x34>
   10bac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bb0:	andeq	r0, r1, r4, lsr #7
   10bb4:	muleq	r1, ip, r3

00010bb8 <__libc_csu_fini@@Base>:
   10bb8:	bx	lr

Disassembly of section .fini:

00010bbc <.fini>:
   10bbc:	push	{r3, lr}
   10bc0:	pop	{r3, pc}
