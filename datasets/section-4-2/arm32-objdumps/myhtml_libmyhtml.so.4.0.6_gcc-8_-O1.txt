
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

0000fb4c <.init>:
    fb4c:	push	{r3, lr}
    fb50:	bl	11048 <mythread_init@plt+0xc>
    fb54:	pop	{r3, pc}

Disassembly of section .plt:

0000fb58 <pthread_mutex_unlock@plt-0x14>:
    fb58:	push	{lr}		; (str lr, [sp, #-4]!)
    fb5c:	ldr	lr, [pc, #4]	; fb68 <pthread_mutex_unlock@plt-0x4>
    fb60:	add	lr, pc, lr
    fb64:	ldr	pc, [lr, #8]!
    fb68:	mulseq	r0, r8, r4

0000fb6c <pthread_mutex_unlock@plt>:
    fb6c:	add	ip, pc, #1048576	; 0x100000
    fb70:	add	ip, ip, #40960	; 0xa000
    fb74:	ldr	pc, [ip, #1176]!	; 0x498

0000fb78 <myhtml_get_nodes_by_attribute_value_recursion@plt>:
    fb78:	add	ip, pc, #1048576	; 0x100000
    fb7c:	add	ip, ip, #40960	; 0xa000
    fb80:	ldr	pc, [ip, #1168]!	; 0x490

0000fb84 <mycore_realloc@plt>:
    fb84:	add	ip, pc, #1048576	; 0x100000
    fb88:	add	ip, ip, #40960	; 0xa000
    fb8c:	ldr	pc, [ip, #1160]!	; 0x488

0000fb90 <calloc@plt>:
    fb90:	add	ip, pc, #1048576	; 0x100000
    fb94:	add	ip, ip, #40960	; 0xa000
    fb98:	ldr	pc, [ip, #1152]!	; 0x480

0000fb9c <mycore_strcmp@plt>:
    fb9c:	add	ip, pc, #1048576	; 0x100000
    fba0:	add	ip, ip, #40960	; 0xa000
    fba4:	ldr	pc, [ip, #1144]!	; 0x478

0000fba8 <myhtml_tree_node_insert_root@plt>:
    fba8:	add	ip, pc, #1048576	; 0x100000
    fbac:	add	ip, ip, #40960	; 0xa000
    fbb0:	ldr	pc, [ip, #1136]!	; 0x470

0000fbb4 <mythread_queue_list_entry_delete@plt>:
    fbb4:	add	ip, pc, #1048576	; 0x100000
    fbb8:	add	ip, ip, #40960	; 0xa000
    fbbc:	ldr	pc, [ip, #1128]!	; 0x468

0000fbc0 <myencoding_string_append_chunk@plt>:
    fbc0:	add	ip, pc, #1048576	; 0x100000
    fbc4:	add	ip, ip, #40960	; 0xa000
    fbc8:	ldr	pc, [ip, #1120]!	; 0x460

0000fbcc <myhtml_token_release_and_check_doctype_attributes@plt>:
    fbcc:	add	ip, pc, #1048576	; 0x100000
    fbd0:	add	ip, ip, #40960	; 0xa000
    fbd4:	ldr	pc, [ip, #1112]!	; 0x458

0000fbd8 <myhtml_token_doctype_check_xhtml_1_1@plt>:
    fbd8:	add	ip, pc, #1048576	; 0x100000
    fbdc:	add	ip, ip, #40960	; 0xa000
    fbe0:	ldr	pc, [ip, #1104]!	; 0x450

0000fbe4 <myencoding_detect_unicode@plt>:
    fbe4:	add	ip, pc, #1048576	; 0x100000
    fbe8:	add	ip, ip, #40960	; 0xa000
    fbec:	ldr	pc, [ip, #1096]!	; 0x448

0000fbf0 <myhtml_tree_element_in_scope_by_node@plt>:
    fbf0:	add	ip, pc, #1048576	; 0x100000
    fbf4:	add	ip, ip, #40960	; 0xa000
    fbf8:	ldr	pc, [ip, #1088]!	; 0x440

0000fbfc <mythread_nanosleep_clean@plt>:
    fbfc:	add	ip, pc, #1048576	; 0x100000
    fc00:	add	ip, ip, #40960	; 0xa000
    fc04:	ldr	pc, [ip, #1080]!	; 0x438

0000fc08 <myhtml_tree_node_insert_html_element@plt>:
    fc08:	add	ip, pc, #1048576	; 0x100000
    fc0c:	add	ip, ip, #40960	; 0xa000
    fc10:	ldr	pc, [ip, #1072]!	; 0x430

0000fc14 <myhtml_tree_token_list_destroy@plt>:
    fc14:	add	ip, pc, #1048576	; 0x100000
    fc18:	add	ip, ip, #40960	; 0xa000
    fc1c:	ldr	pc, [ip, #1064]!	; 0x428

0000fc20 <mcobject_async_init@plt>:
    fc20:	add	ip, pc, #1048576	; 0x100000
    fc24:	add	ip, ip, #40960	; 0xa000
    fc28:	ldr	pc, [ip, #1056]!	; 0x420

0000fc2c <myhtml_tree_temp_tag_name_append@plt>:
    fc2c:	add	ip, pc, #1048576	; 0x100000
    fc30:	add	ip, ip, #40960	; 0xa000
    fc34:	ldr	pc, [ip, #1048]!	; 0x418

0000fc38 <myhtml_tokenizer_fragment_init@plt>:
    fc38:	add	ip, pc, #1048576	; 0x100000
    fc3c:	add	ip, ip, #40960	; 0xa000
    fc40:	ldr	pc, [ip, #1040]!	; 0x410

0000fc44 <mythread_nanosleep_create@plt>:
    fc44:	add	ip, pc, #1048576	; 0x100000
    fc48:	add	ip, ip, #40960	; 0xa000
    fc4c:	ldr	pc, [ip, #1032]!	; 0x408

0000fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
    fc50:	add	ip, pc, #1048576	; 0x100000
    fc54:	add	ip, ip, #40960	; 0xa000
    fc58:	ldr	pc, [ip, #1024]!	; 0x400

0000fc5c <myhtml_tokenizer_state_init@plt>:
    fc5c:	add	ip, pc, #1048576	; 0x100000
    fc60:	add	ip, ip, #40960	; 0xa000
    fc64:	ldr	pc, [ip, #1016]!	; 0x3f8

0000fc68 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
    fc68:	add	ip, pc, #1048576	; 0x100000
    fc6c:	add	ip, ip, #40960	; 0xa000
    fc70:	ldr	pc, [ip, #1008]!	; 0x3f0

0000fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
    fc74:	add	ip, pc, #1048576	; 0x100000
    fc78:	add	ip, ip, #40960	; 0xa000
    fc7c:	ldr	pc, [ip, #1000]!	; 0x3e8

0000fc80 <myhtml_tree_wait_for_last_done_token@plt>:
    fc80:	add	ip, pc, #1048576	; 0x100000
    fc84:	add	ip, ip, #40960	; 0xa000
    fc88:	ldr	pc, [ip, #992]!	; 0x3e0

0000fc8c <mythread_queue_get_prev_node@plt>:
    fc8c:	add	ip, pc, #1048576	; 0x100000
    fc90:	add	ip, ip, #40960	; 0xa000
    fc94:	ldr	pc, [ip, #984]!	; 0x3d8

0000fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>:
    fc98:	add	ip, pc, #1048576	; 0x100000
    fc9c:	add	ip, ip, #40960	; 0xa000
    fca0:	ldr	pc, [ip, #976]!	; 0x3d0

0000fca4 <setbuf@plt>:
    fca4:	add	ip, pc, #1048576	; 0x100000
    fca8:	add	ip, ip, #40960	; 0xa000
    fcac:	ldr	pc, [ip, #968]!	; 0x3c8

0000fcb0 <mycore_utils_avl_tree_find_min@plt>:
    fcb0:	add	ip, pc, #1048576	; 0x100000
    fcb4:	add	ip, ip, #40960	; 0xa000
    fcb8:	ldr	pc, [ip, #960]!	; 0x3c0

0000fcbc <myhtml_insertion_mode_in_body_other_end_tag@plt>:
    fcbc:	add	ip, pc, #1048576	; 0x100000
    fcc0:	add	ip, ip, #40960	; 0xa000
    fcc4:	ldr	pc, [ip, #952]!	; 0x3b8

0000fcc8 <myhtml_stream_buffer_destroy@plt>:
    fcc8:	add	ip, pc, #1048576	; 0x100000
    fccc:	add	ip, ip, #40960	; 0xa000
    fcd0:	ldr	pc, [ip, #944]!	; 0x3b0

0000fcd4 <myhtml_token_attr_match_case@plt>:
    fcd4:	add	ip, pc, #1048576	; 0x100000
    fcd8:	add	ip, ip, #40960	; 0xa000
    fcdc:	ldr	pc, [ip, #936]!	; 0x3a8

0000fce0 <__cxa_finalize@plt>:
    fce0:	add	ip, pc, #1048576	; 0x100000
    fce4:	add	ip, ip, #40960	; 0xa000
    fce8:	ldr	pc, [ip, #928]!	; 0x3a0

0000fcec <mycore_utils_avl_tree_node_rotate_right@plt>:
    fcec:	add	ip, pc, #1048576	; 0x100000
    fcf0:	add	ip, ip, #40960	; 0xa000
    fcf4:	ldr	pc, [ip, #920]!	; 0x398

0000fcf8 <mcobject_async_create@plt>:
    fcf8:	add	ip, pc, #1048576	; 0x100000
    fcfc:	add	ip, ip, #40960	; 0xa000
    fd00:	ldr	pc, [ip, #912]!	; 0x390

0000fd04 <mythread_queue_clean@plt>:
    fd04:	add	ip, pc, #1048576	; 0x100000
    fd08:	add	ip, ip, #40960	; 0xa000
    fd0c:	ldr	pc, [ip, #904]!	; 0x388

0000fd10 <mcsync_mutex_destroy@plt>:
    fd10:	add	ip, pc, #1048576	; 0x100000
    fd14:	add	ip, ip, #40960	; 0xa000
    fd18:	ldr	pc, [ip, #896]!	; 0x380

0000fd1c <myhtml_parser_worker@plt>:
    fd1c:	add	ip, pc, #1048576	; 0x100000
    fd20:	add	ip, ip, #40960	; 0xa000
    fd24:	ldr	pc, [ip, #888]!	; 0x378

0000fd28 <mythread_thread_create@plt>:
    fd28:	add	ip, pc, #1048576	; 0x100000
    fd2c:	add	ip, ip, #40960	; 0xa000
    fd30:	ldr	pc, [ip, #880]!	; 0x370

0000fd34 <mcsync_create@plt>:
    fd34:	add	ip, pc, #1048576	; 0x100000
    fd38:	add	ip, ip, #40960	; 0xa000
    fd3c:	ldr	pc, [ip, #872]!	; 0x368

0000fd40 <myhtml_insertion_mode_in_template@plt>:
    fd40:	add	ip, pc, #1048576	; 0x100000
    fd44:	add	ip, ip, #40960	; 0xa000
    fd48:	ldr	pc, [ip, #864]!	; 0x360

0000fd4c <mycore_utils_avl_tree_node_balance_factor@plt>:
    fd4c:	add	ip, pc, #1048576	; 0x100000
    fd50:	add	ip, ip, #40960	; 0xa000
    fd54:	ldr	pc, [ip, #856]!	; 0x358

0000fd58 <fopen@plt>:
    fd58:	add	ip, pc, #1048576	; 0x100000
    fd5c:	add	ip, ip, #40960	; 0xa000
    fd60:	ldr	pc, [ip, #848]!	; 0x350

0000fd64 <mcobject_async_mem_malloc@plt>:
    fd64:	add	ip, pc, #1048576	; 0x100000
    fd68:	add	ip, ip, #40960	; 0xa000
    fd6c:	ldr	pc, [ip, #840]!	; 0x348

0000fd70 <mcobject_destroy@plt>:
    fd70:	add	ip, pc, #1048576	; 0x100000
    fd74:	add	ip, ip, #40960	; 0xa000
    fd78:	ldr	pc, [ip, #832]!	; 0x340

0000fd7c <pthread_attr_destroy@plt>:
    fd7c:	add	ip, pc, #1048576	; 0x100000
    fd80:	add	ip, ip, #40960	; 0xa000
    fd84:	ldr	pc, [ip, #824]!	; 0x338

0000fd88 <myhtml_clean@plt>:
    fd88:	add	ip, pc, #1048576	; 0x100000
    fd8c:	add	ip, ip, #40960	; 0xa000
    fd90:	ldr	pc, [ip, #816]!	; 0x330

0000fd94 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
    fd94:	add	ip, pc, #1048576	; 0x100000
    fd98:	add	ip, ip, #40960	; 0xa000
    fd9c:	ldr	pc, [ip, #808]!	; 0x328

0000fda0 <pthread_mutex_destroy@plt>:
    fda0:	add	ip, pc, #1048576	; 0x100000
    fda4:	add	ip, ip, #40960	; 0xa000
    fda8:	ldr	pc, [ip, #800]!	; 0x320

0000fdac <fflush@plt>:
    fdac:	add	ip, pc, #1048576	; 0x100000
    fdb0:	add	ip, ip, #40960	; 0xa000
    fdb4:	ldr	pc, [ip, #792]!	; 0x318

0000fdb8 <mythread_create@plt>:
    fdb8:	add	ip, pc, #1048576	; 0x100000
    fdbc:	add	ip, ip, #40960	; 0xa000
    fdc0:	ldr	pc, [ip, #784]!	; 0x310

0000fdc4 <myhtml_insertion_mode_in_foreign_content@plt>:
    fdc4:	add	ip, pc, #1048576	; 0x100000
    fdc8:	add	ip, ip, #40960	; 0xa000
    fdcc:	ldr	pc, [ip, #776]!	; 0x308

0000fdd0 <myhtml_tree_generate_all_implied_end_tags@plt>:
    fdd0:	add	ip, pc, #1048576	; 0x100000
    fdd4:	add	ip, ip, #40960	; 0xa000
    fdd8:	ldr	pc, [ip, #768]!	; 0x300

0000fddc <myencoding_string_append_lowercase_ascii@plt>:
    fddc:	add	ip, pc, #1048576	; 0x100000
    fde0:	add	ip, ip, #40960	; 0xa000
    fde4:	ldr	pc, [ip, #760]!	; 0x2f8

0000fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>:
    fde8:	add	ip, pc, #1048576	; 0x100000
    fdec:	add	ip, ip, #40960	; 0xa000
    fdf0:	ldr	pc, [ip, #752]!	; 0x2f0

0000fdf4 <myhread_increase_id_by_entry_id@plt>:
    fdf4:	add	ip, pc, #1048576	; 0x100000
    fdf8:	add	ip, ip, #40960	; 0xa000
    fdfc:	ldr	pc, [ip, #744]!	; 0x2e8

0000fe00 <myhtml_tree_incomming_buffer_make_data@plt>:
    fe00:	add	ip, pc, #1048576	; 0x100000
    fe04:	add	ip, ip, #40960	; 0xa000
    fe08:	ldr	pc, [ip, #736]!	; 0x2e0

0000fe0c <_myhtml_token_create_copy_srt@plt>:
    fe0c:	add	ip, pc, #1048576	; 0x100000
    fe10:	add	ip, ip, #40960	; 0xa000
    fe14:	ldr	pc, [ip, #728]!	; 0x2d8

0000fe18 <memmove@plt>:
    fe18:	add	ip, pc, #1048576	; 0x100000
    fe1c:	add	ip, ip, #40960	; 0xa000
    fe20:	ldr	pc, [ip, #720]!	; 0x2d0

0000fe24 <mythread_thread_attr_init@plt>:
    fe24:	add	ip, pc, #1048576	; 0x100000
    fe28:	add	ip, ip, #40960	; 0xa000
    fe2c:	ldr	pc, [ip, #712]!	; 0x2c8

0000fe30 <myhtml_insertion_mode_in_foreign_content_start_other@plt>:
    fe30:	add	ip, pc, #1048576	; 0x100000
    fe34:	add	ip, ip, #40960	; 0xa000
    fe38:	ldr	pc, [ip, #704]!	; 0x2c0

0000fe3c <myhtml_rules_tree_dispatcher@plt>:
    fe3c:	add	ip, pc, #1048576	; 0x100000
    fe40:	add	ip, ip, #40960	; 0xa000
    fe44:	ldr	pc, [ip, #696]!	; 0x2b8

0000fe48 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
    fe48:	add	ip, pc, #1048576	; 0x100000
    fe4c:	add	ip, ip, #40960	; 0xa000
    fe50:	ldr	pc, [ip, #688]!	; 0x2b0

0000fe54 <free@plt>:
    fe54:	add	ip, pc, #1048576	; 0x100000
    fe58:	add	ip, ip, #40960	; 0xa000
    fe5c:	ldr	pc, [ip, #680]!	; 0x2a8

0000fe60 <mchar_async_cache_malloc@plt>:
    fe60:	add	ip, pc, #1048576	; 0x100000
    fe64:	add	ip, ip, #40960	; 0xa000
    fe68:	ldr	pc, [ip, #672]!	; 0x2a0

0000fe6c <mythread_function_see_opt@plt>:
    fe6c:	add	ip, pc, #1048576	; 0x100000
    fe70:	add	ip, ip, #40960	; 0xa000
    fe74:	ldr	pc, [ip, #664]!	; 0x298

0000fe78 <myencoding_detect_utf_16@plt>:
    fe78:	add	ip, pc, #1048576	; 0x100000
    fe7c:	add	ip, ip, #40960	; 0xa000
    fe80:	ldr	pc, [ip, #656]!	; 0x290

0000fe84 <mcobject_chunk_malloc@plt>:
    fe84:	add	ip, pc, #1048576	; 0x100000
    fe88:	add	ip, ip, #40960	; 0xa000
    fe8c:	ldr	pc, [ip, #648]!	; 0x288

0000fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
    fe90:	add	ip, pc, #1048576	; 0x100000
    fe94:	add	ip, ip, #40960	; 0xa000
    fe98:	ldr	pc, [ip, #640]!	; 0x280

0000fe9c <mcsync_mutex_unlock@plt>:
    fe9c:	add	ip, pc, #1048576	; 0x100000
    fea0:	add	ip, ip, #40960	; 0xa000
    fea4:	ldr	pc, [ip, #632]!	; 0x278

0000fea8 <pthread_mutex_lock@plt>:
    fea8:	add	ip, pc, #1048576	; 0x100000
    feac:	add	ip, ip, #40960	; 0xa000
    feb0:	ldr	pc, [ip, #624]!	; 0x270

0000feb4 <mycore_calloc@plt>:
    feb4:	add	ip, pc, #1048576	; 0x100000
    feb8:	add	ip, ip, #40960	; 0xa000
    febc:	ldr	pc, [ip, #616]!	; 0x268

0000fec0 <nanosleep@plt>:
    fec0:	add	ip, pc, #1048576	; 0x100000
    fec4:	add	ip, ip, #40960	; 0xa000
    fec8:	ldr	pc, [ip, #608]!	; 0x260

0000fecc <myhtml_token_node_clone@plt>:
    fecc:	add	ip, pc, #1048576	; 0x100000
    fed0:	add	ip, ip, #40960	; 0xa000
    fed4:	ldr	pc, [ip, #600]!	; 0x258

0000fed8 <myhtml_get_nodes_by_tag_id_in_scope@plt>:
    fed8:	add	ip, pc, #1048576	; 0x100000
    fedc:	add	ip, ip, #40960	; 0xa000
    fee0:	ldr	pc, [ip, #592]!	; 0x250

0000fee4 <mchar_sync_chunk_insert_after@plt>:
    fee4:	add	ip, pc, #1048576	; 0x100000
    fee8:	add	ip, ip, #40960	; 0xa000
    feec:	ldr	pc, [ip, #584]!	; 0x248

0000fef0 <ferror@plt>:
    fef0:	add	ip, pc, #1048576	; 0x100000
    fef4:	add	ip, ip, #40960	; 0xa000
    fef8:	ldr	pc, [ip, #576]!	; 0x240

0000fefc <memcpy@plt>:
    fefc:	add	ip, pc, #1048576	; 0x100000
    ff00:	add	ip, ip, #40960	; 0xa000
    ff04:	ldr	pc, [ip, #568]!	; 0x238

0000ff08 <myencoding_name_entry_by_name@plt>:
    ff08:	add	ip, pc, #1048576	; 0x100000
    ff0c:	add	ip, ip, #40960	; 0xa000
    ff10:	ldr	pc, [ip, #560]!	; 0x230

0000ff14 <myhtml_token_adjust_mathml_attributes@plt>:
    ff14:	add	ip, pc, #1048576	; 0x100000
    ff18:	add	ip, ip, #40960	; 0xa000
    ff1c:	ldr	pc, [ip, #552]!	; 0x228

0000ff20 <mcobject_free@plt>:
    ff20:	add	ip, pc, #1048576	; 0x100000
    ff24:	add	ip, ip, #40960	; 0xa000
    ff28:	ldr	pc, [ip, #544]!	; 0x220

0000ff2c <myhtml_tree_node_insert_text@plt>:
    ff2c:	add	ip, pc, #1048576	; 0x100000
    ff30:	add	ip, ip, #40960	; 0xa000
    ff34:	ldr	pc, [ip, #536]!	; 0x218

0000ff38 <myhtml_tag_set_category@plt>:
    ff38:	add	ip, pc, #1048576	; 0x100000
    ff3c:	add	ip, ip, #40960	; 0xa000
    ff40:	ldr	pc, [ip, #528]!	; 0x210

0000ff44 <mcsync_spin_destroy@plt>:
    ff44:	add	ip, pc, #1048576	; 0x100000
    ff48:	add	ip, ip, #40960	; 0xa000
    ff4c:	ldr	pc, [ip, #520]!	; 0x208

0000ff50 <myhtml_tree_template_insertion_append@plt>:
    ff50:	add	ip, pc, #1048576	; 0x100000
    ff54:	add	ip, ip, #40960	; 0xa000
    ff58:	ldr	pc, [ip, #512]!	; 0x200

0000ff5c <mchar_async_realloc@plt>:
    ff5c:	add	ip, pc, #1048576	; 0x100000
    ff60:	add	ip, ip, #40960	; 0xa000
    ff64:	ldr	pc, [ip, #504]!	; 0x1f8

0000ff68 <pthread_mutex_init@plt>:
    ff68:	add	ip, pc, #1048576	; 0x100000
    ff6c:	add	ip, ip, #40960	; 0xa000
    ff70:	ldr	pc, [ip, #496]!	; 0x1f0

0000ff74 <myhtml_tokenizer_state_bogus_comment@plt>:
    ff74:	add	ip, pc, #1048576	; 0x100000
    ff78:	add	ip, ip, #40960	; 0xa000
    ff7c:	ldr	pc, [ip, #488]!	; 0x1e8

0000ff80 <myhtml_tree_node_create@plt>:
    ff80:	add	ip, pc, #1048576	; 0x100000
    ff84:	add	ip, ip, #40960	; 0xa000
    ff88:	ldr	pc, [ip, #480]!	; 0x1e0

0000ff8c <myhtml_tree_node_delete_recursive@plt>:
    ff8c:	add	ip, pc, #1048576	; 0x100000
    ff90:	add	ip, ip, #40960	; 0xa000
    ff94:	ldr	pc, [ip, #472]!	; 0x1d8

0000ff98 <myhtml_tag_static_get_by_id@plt>:
    ff98:	add	ip, pc, #1048576	; 0x100000
    ff9c:	add	ip, ip, #40960	; 0xa000
    ffa0:	ldr	pc, [ip, #464]!	; 0x1d0

0000ffa4 <myhtml_token_attr_clean@plt>:
    ffa4:	add	ip, pc, #1048576	; 0x100000
    ffa8:	add	ip, ip, #40960	; 0xa000
    ffac:	ldr	pc, [ip, #456]!	; 0x1c8

0000ffb0 <myhtml_tag_add@plt>:
    ffb0:	add	ip, pc, #1048576	; 0x100000
    ffb4:	add	ip, ip, #40960	; 0xa000
    ffb8:	ldr	pc, [ip, #448]!	; 0x1c0

0000ffbc <mcobject_create@plt>:
    ffbc:	add	ip, pc, #1048576	; 0x100000
    ffc0:	add	ip, ip, #40960	; 0xa000
    ffc4:	ldr	pc, [ip, #440]!	; 0x1b8

0000ffc8 <myhtml_queue_add@plt>:
    ffc8:	add	ip, pc, #1048576	; 0x100000
    ffcc:	add	ip, ip, #40960	; 0xa000
    ffd0:	ldr	pc, [ip, #432]!	; 0x1b0

0000ffd4 <pthread_mutex_trylock@plt>:
    ffd4:	add	ip, pc, #1048576	; 0x100000
    ffd8:	add	ip, ip, #40960	; 0xa000
    ffdc:	ldr	pc, [ip, #424]!	; 0x1a8

0000ffe0 <myhtml_tree_is_mathml_integration_point@plt>:
    ffe0:	add	ip, pc, #1048576	; 0x100000
    ffe4:	add	ip, ip, #40960	; 0xa000
    ffe8:	ldr	pc, [ip, #416]!	; 0x1a0

0000ffec <mcobject_async_free@plt>:
    ffec:	add	ip, pc, #1048576	; 0x100000
    fff0:	add	ip, ip, #40960	; 0xa000
    fff4:	ldr	pc, [ip, #408]!	; 0x198

0000fff8 <myhtml_insertion_mode_in_head@plt>:
    fff8:	add	ip, pc, #1048576	; 0x100000
    fffc:	add	ip, ip, #40960	; 0xa000
   10000:	ldr	pc, [ip, #400]!	; 0x190

00010004 <ftell@plt>:
   10004:	add	ip, pc, #1048576	; 0x100000
   10008:	add	ip, ip, #40960	; 0xa000
   1000c:	ldr	pc, [ip, #392]!	; 0x188

00010010 <memcmp@plt>:
   10010:	add	ip, pc, #1048576	; 0x100000
   10014:	add	ip, ip, #40960	; 0xa000
   10018:	ldr	pc, [ip, #384]!	; 0x180

0001001c <mycore_utils_mhash_hash@plt>:
   1001c:	add	ip, pc, #1048576	; 0x100000
   10020:	add	ip, ip, #40960	; 0xa000
   10024:	ldr	pc, [ip, #376]!	; 0x178

00010028 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>:
   10028:	add	ip, pc, #1048576	; 0x100000
   1002c:	add	ip, ip, #40960	; 0xa000
   10030:	ldr	pc, [ip, #368]!	; 0x170

00010034 <mycore_incoming_buffer_add@plt>:
   10034:	add	ip, pc, #1048576	; 0x100000
   10038:	add	ip, ip, #40960	; 0xa000
   1003c:	ldr	pc, [ip, #360]!	; 0x168

00010040 <mythread_nanosleep_sleep@plt>:
   10040:	add	ip, pc, #1048576	; 0x100000
   10044:	add	ip, ip, #40960	; 0xa000
   10048:	ldr	pc, [ip, #352]!	; 0x160

0001004c <mctree_insert_before@plt>:
   1004c:	add	ip, pc, #1048576	; 0x100000
   10050:	add	ip, ip, #40960	; 0xa000
   10054:	ldr	pc, [ip, #344]!	; 0x158

00010058 <mctree_destroy@plt>:
   10058:	add	ip, pc, #1048576	; 0x100000
   1005c:	add	ip, ip, #40960	; 0xa000
   10060:	ldr	pc, [ip, #336]!	; 0x150

00010064 <myhtml_tokenizer_chunk@plt>:
   10064:	add	ip, pc, #1048576	; 0x100000
   10068:	add	ip, ip, #40960	; 0xa000
   1006c:	ldr	pc, [ip, #328]!	; 0x148

00010070 <myhtml_tree_active_formatting_append@plt>:
   10070:	add	ip, pc, #1048576	; 0x100000
   10074:	add	ip, ip, #40960	; 0xa000
   10078:	ldr	pc, [ip, #320]!	; 0x140

0001007c <myhtml_tree_active_formatting_destroy@plt>:
   1007c:	add	ip, pc, #1048576	; 0x100000
   10080:	add	ip, ip, #40960	; 0xa000
   10084:	ldr	pc, [ip, #312]!	; 0x138

00010088 <mythread_suspend@plt>:
   10088:	add	ip, pc, #1048576	; 0x100000
   1008c:	add	ip, ip, #40960	; 0xa000
   10090:	ldr	pc, [ip, #304]!	; 0x130

00010094 <myhtml_tokenizer_state_destroy@plt>:
   10094:	add	ip, pc, #1048576	; 0x100000
   10098:	add	ip, ip, #40960	; 0xa000
   1009c:	ldr	pc, [ip, #296]!	; 0x128

000100a0 <mycore_incoming_buffer_find_by_position@plt>:
   100a0:	add	ip, pc, #1048576	; 0x100000
   100a4:	add	ip, ip, #40960	; 0xa000
   100a8:	ldr	pc, [ip, #288]!	; 0x120

000100ac <mcobject_async_chunk_malloc@plt>:
   100ac:	add	ip, pc, #1048576	; 0x100000
   100b0:	add	ip, ip, #40960	; 0xa000
   100b4:	ldr	pc, [ip, #280]!	; 0x118

000100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   100b8:	add	ip, pc, #1048576	; 0x100000
   100bc:	add	ip, ip, #40960	; 0xa000
   100c0:	ldr	pc, [ip, #272]!	; 0x110

000100c4 <myhtml_tree_active_formatting_find@plt>:
   100c4:	add	ip, pc, #1048576	; 0x100000
   100c8:	add	ip, ip, #40960	; 0xa000
   100cc:	ldr	pc, [ip, #264]!	; 0x108

000100d0 <mythread_queue_list_destroy@plt>:
   100d0:	add	ip, pc, #1048576	; 0x100000
   100d4:	add	ip, ip, #40960	; 0xa000
   100d8:	ldr	pc, [ip, #256]!	; 0x100

000100dc <myhtml_tree_open_elements_pop_until_by_node@plt>:
   100dc:	add	ip, pc, #1048576	; 0x100000
   100e0:	add	ip, ip, #40960	; 0xa000
   100e4:	ldr	pc, [ip, #248]!	; 0xf8

000100e8 <myhtml_stream_buffer_entry_destroy@plt>:
   100e8:	add	ip, pc, #1048576	; 0x100000
   100ec:	add	ip, ip, #40960	; 0xa000
   100f0:	ldr	pc, [ip, #240]!	; 0xf0

000100f4 <myhtml_tokenizer_begin@plt>:
   100f4:	add	ip, pc, #1048576	; 0x100000
   100f8:	add	ip, ip, #40960	; 0xa000
   100fc:	ldr	pc, [ip, #232]!	; 0xe8

00010100 <mchar_async_create@plt>:
   10100:	add	ip, pc, #1048576	; 0x100000
   10104:	add	ip, ip, #40960	; 0xa000
   10108:	ldr	pc, [ip, #224]!	; 0xe0

0001010c <mycore_string_copy@plt>:
   1010c:	add	ip, pc, #1048576	; 0x100000
   10110:	add	ip, ip, #40960	; 0xa000
   10114:	ldr	pc, [ip, #216]!	; 0xd8

00010118 <myhtml_insertion_mode_in_table@plt>:
   10118:	add	ip, pc, #1048576	; 0x100000
   1011c:	add	ip, ip, #40960	; 0xa000
   10120:	ldr	pc, [ip, #208]!	; 0xd0

00010124 <mythread_queue_list_entry_push@plt>:
   10124:	add	ip, pc, #1048576	; 0x100000
   10128:	add	ip, ip, #40960	; 0xa000
   1012c:	ldr	pc, [ip, #200]!	; 0xc8

00010130 <mythread_queue_get_current_node@plt>:
   10130:	add	ip, pc, #1048576	; 0x100000
   10134:	add	ip, ip, #40960	; 0xa000
   10138:	ldr	pc, [ip, #192]!	; 0xc0

0001013c <mcobject_async_chunk_up@plt>:
   1013c:	add	ip, pc, #1048576	; 0x100000
   10140:	add	ip, ip, #40960	; 0xa000
   10144:	ldr	pc, [ip, #184]!	; 0xb8

00010148 <myhtml_tree_open_elements_pop@plt>:
   10148:	add	ip, pc, #1048576	; 0x100000
   1014c:	add	ip, ip, #40960	; 0xa000
   10150:	ldr	pc, [ip, #176]!	; 0xb0

00010154 <mcsync_destroy@plt>:
   10154:	add	ip, pc, #1048576	; 0x100000
   10158:	add	ip, ip, #40960	; 0xa000
   1015c:	ldr	pc, [ip, #168]!	; 0xa8

00010160 <myencoding_result_clean@plt>:
   10160:	add	ip, pc, #1048576	; 0x100000
   10164:	add	ip, ip, #40960	; 0xa000
   10168:	ldr	pc, [ip, #160]!	; 0xa0

0001016c <myhtml_string_append_with_preprocessing@plt>:
   1016c:	add	ip, pc, #1048576	; 0x100000
   10170:	add	ip, ip, #40960	; 0xa000
   10174:	ldr	pc, [ip, #152]!	; 0x98

00010178 <myhtml_token_adjust_svg_attributes@plt>:
   10178:	add	ip, pc, #1048576	; 0x100000
   1017c:	add	ip, ip, #40960	; 0xa000
   10180:	ldr	pc, [ip, #144]!	; 0x90

00010184 <realloc@plt>:
   10184:	add	ip, pc, #1048576	; 0x100000
   10188:	add	ip, ip, #40960	; 0xa000
   1018c:	ldr	pc, [ip, #136]!	; 0x88

00010190 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   10190:	add	ip, pc, #1048576	; 0x100000
   10194:	add	ip, ip, #40960	; 0xa000
   10198:	ldr	pc, [ip, #128]!	; 0x80

0001019c <myhtml_tree_is_html_integration_point@plt>:
   1019c:	add	ip, pc, #1048576	; 0x100000
   101a0:	add	ip, ip, #40960	; 0xa000
   101a4:	ldr	pc, [ip, #120]!	; 0x78

000101a8 <myhtml_namespace_name_entry_by_name@plt>:
   101a8:	add	ip, pc, #1048576	; 0x100000
   101ac:	add	ip, ip, #40960	; 0xa000
   101b0:	ldr	pc, [ip, #112]!	; 0x70

000101b4 <myencoding_detect_bom@plt>:
   101b4:	add	ip, pc, #1048576	; 0x100000
   101b8:	add	ip, ip, #40960	; 0xa000
   101bc:	ldr	pc, [ip, #104]!	; 0x68

000101c0 <myhtml_tree_list_append@plt>:
   101c0:	add	ip, pc, #1048576	; 0x100000
   101c4:	add	ip, ip, #40960	; 0xa000
   101c8:	ldr	pc, [ip, #96]!	; 0x60

000101cc <myhtml_tokenizer_calc_current_namespace@plt>:
   101cc:	add	ip, pc, #1048576	; 0x100000
   101d0:	add	ip, ip, #40960	; 0xa000
   101d4:	ldr	pc, [ip, #88]!	; 0x58

000101d8 <myhtml_tree_open_elements_remove@plt>:
   101d8:	add	ip, pc, #1048576	; 0x100000
   101dc:	add	ip, ip, #40960	; 0xa000
   101e0:	ldr	pc, [ip, #80]!	; 0x50

000101e4 <mctree_insert_child@plt>:
   101e4:	add	ip, pc, #1048576	; 0x100000
   101e8:	add	ip, ip, #40960	; 0xa000
   101ec:	ldr	pc, [ip, #72]!	; 0x48

000101f0 <mcsimple_clean@plt>:
   101f0:	add	ip, pc, #1048576	; 0x100000
   101f4:	add	ip, ip, #40960	; 0xa000
   101f8:	ldr	pc, [ip, #64]!	; 0x40

000101fc <myhtml_tree_node_insert_comment@plt>:
   101fc:	add	ip, pc, #1048576	; 0x100000
   10200:	add	ip, ip, #40960	; 0xa000
   10204:	ldr	pc, [ip, #56]!	; 0x38

00010208 <myhtml_tokenizer_end@plt>:
   10208:	add	ip, pc, #1048576	; 0x100000
   1020c:	add	ip, ip, #40960	; 0xa000
   10210:	ldr	pc, [ip, #48]!	; 0x30

00010214 <myhtml_tree_temp_tag_name_clean@plt>:
   10214:	add	ip, pc, #1048576	; 0x100000
   10218:	add	ip, ip, #40960	; 0xa000
   1021c:	ldr	pc, [ip, #40]!	; 0x28

00010220 <myhtml_tree_list_clean@plt>:
   10220:	add	ip, pc, #1048576	; 0x100000
   10224:	add	ip, ip, #40960	; 0xa000
   10228:	ldr	pc, [ip, #32]!

0001022c <mchar_async_node_add@plt>:
   1022c:	add	ip, pc, #1048576	; 0x100000
   10230:	add	ip, ip, #40960	; 0xa000
   10234:	ldr	pc, [ip, #24]!

00010238 <mycore_strncasecmp@plt>:
   10238:	add	ip, pc, #1048576	; 0x100000
   1023c:	add	ip, ip, #40960	; 0xa000
   10240:	ldr	pc, [ip, #16]!

00010244 <myhtml_tokenizer_post@plt>:
   10244:	add	ip, pc, #1048576	; 0x100000
   10248:	add	ip, ip, #40960	; 0xa000
   1024c:	ldr	pc, [ip, #8]!

00010250 <myhtml_tree_list_insert_by_index@plt>:
   10250:	add	ip, pc, #1048576	; 0x100000
   10254:	add	ip, ip, #40960	; 0xa000
   10258:	ldr	pc, [ip, #0]!

0001025c <mcsimple_create@plt>:
   1025c:	add	ip, pc, #1048576	; 0x100000
   10260:	add	ip, ip, #36864	; 0x9000
   10264:	ldr	pc, [ip, #4088]!	; 0xff8

00010268 <mythread_queue_destroy@plt>:
   10268:	add	ip, pc, #1048576	; 0x100000
   1026c:	add	ip, ip, #36864	; 0x9000
   10270:	ldr	pc, [ip, #4080]!	; 0xff0

00010274 <mycore_string_raw_copy@plt>:
   10274:	add	ip, pc, #1048576	; 0x100000
   10278:	add	ip, ip, #36864	; 0x9000
   1027c:	ldr	pc, [ip, #4072]!	; 0xfe8

00010280 <mycore_string_stay_only_whitespace@plt>:
   10280:	add	ip, pc, #1048576	; 0x100000
   10284:	add	ip, ip, #36864	; 0x9000
   10288:	ldr	pc, [ip, #4064]!	; 0xfe0

0001028c <mctree_clean@plt>:
   1028c:	add	ip, pc, #1048576	; 0x100000
   10290:	add	ip, ip, #36864	; 0x9000
   10294:	ldr	pc, [ip, #4056]!	; 0xfd8

00010298 <myhtml_collection_create@plt>:
   10298:	add	ip, pc, #1048576	; 0x100000
   1029c:	add	ip, ip, #36864	; 0x9000
   102a0:	ldr	pc, [ip, #4048]!	; 0xfd0

000102a4 <myhtml_rules_stop_parsing@plt>:
   102a4:	add	ip, pc, #1048576	; 0x100000
   102a8:	add	ip, ip, #36864	; 0x9000
   102ac:	ldr	pc, [ip, #4040]!	; 0xfc8

000102b0 <myhtml_get_nodes_by_tag_id@plt>:
   102b0:	add	ip, pc, #1048576	; 0x100000
   102b4:	add	ip, ip, #36864	; 0x9000
   102b8:	ldr	pc, [ip, #4032]!	; 0xfc0

000102bc <myhtml_serialization_tree_buffer@plt>:
   102bc:	add	ip, pc, #1048576	; 0x100000
   102c0:	add	ip, ip, #36864	; 0x9000
   102c4:	ldr	pc, [ip, #4024]!	; 0xfb8

000102c8 <myhtml_token_set_replacement_character_for_null_token@plt>:
   102c8:	add	ip, pc, #1048576	; 0x100000
   102cc:	add	ip, ip, #36864	; 0x9000
   102d0:	ldr	pc, [ip, #4016]!	; 0xfb0

000102d4 <fwrite@plt>:
   102d4:	add	ip, pc, #1048576	; 0x100000
   102d8:	add	ip, ip, #36864	; 0x9000
   102dc:	ldr	pc, [ip, #4008]!	; 0xfa8

000102e0 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   102e0:	add	ip, pc, #1048576	; 0x100000
   102e4:	add	ip, ip, #36864	; 0x9000
   102e8:	ldr	pc, [ip, #4000]!	; 0xfa0

000102ec <myhtml_tree_node_insert_by_mode@plt>:
   102ec:	add	ip, pc, #1048576	; 0x100000
   102f0:	add	ip, ip, #36864	; 0x9000
   102f4:	ldr	pc, [ip, #3992]!	; 0xf98

000102f8 <myhtml_tree_node_insert_after@plt>:
   102f8:	add	ip, pc, #1048576	; 0x100000
   102fc:	add	ip, ip, #36864	; 0x9000
   10300:	ldr	pc, [ip, #3984]!	; 0xf90

00010304 <myhtml_data_process_state_end@plt>:
   10304:	add	ip, pc, #1048576	; 0x100000
   10308:	add	ip, ip, #36864	; 0x9000
   1030c:	ldr	pc, [ip, #3976]!	; 0xf88

00010310 <myhtml_serialization_reallocate@plt>:
   10310:	add	ip, pc, #1048576	; 0x100000
   10314:	add	ip, ip, #36864	; 0x9000
   10318:	ldr	pc, [ip, #3968]!	; 0xf80

0001031c <mycore_string_append_with_replacement_null_characters@plt>:
   1031c:	add	ip, pc, #1048576	; 0x100000
   10320:	add	ip, ip, #36864	; 0x9000
   10324:	ldr	pc, [ip, #3960]!	; 0xf78

00010328 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   10328:	add	ip, pc, #1048576	; 0x100000
   1032c:	add	ip, ip, #36864	; 0x9000
   10330:	ldr	pc, [ip, #3952]!	; 0xf70

00010334 <mcsimple_destroy@plt>:
   10334:	add	ip, pc, #1048576	; 0x100000
   10338:	add	ip, ip, #36864	; 0x9000
   1033c:	ldr	pc, [ip, #3944]!	; 0xf68

00010340 <myhtml_token_doctype_check_html_4_01@plt>:
   10340:	add	ip, pc, #1048576	; 0x100000
   10344:	add	ip, ip, #36864	; 0x9000
   10348:	ldr	pc, [ip, #3936]!	; 0xf60

0001034c <__mtree_insert_to_start@plt>:
   1034c:	add	ip, pc, #1048576	; 0x100000
   10350:	add	ip, ip, #36864	; 0x9000
   10354:	ldr	pc, [ip, #3928]!	; 0xf58

00010358 <myhtml_insertion_mode_in_select@plt>:
   10358:	add	ip, pc, #1048576	; 0x100000
   1035c:	add	ip, ip, #36864	; 0x9000
   10360:	ldr	pc, [ip, #3920]!	; 0xf50

00010364 <fread@plt>:
   10364:	add	ip, pc, #1048576	; 0x100000
   10368:	add	ip, ip, #36864	; 0x9000
   1036c:	ldr	pc, [ip, #3912]!	; 0xf48

00010370 <pthread_create@plt>:
   10370:	add	ip, pc, #1048576	; 0x100000
   10374:	add	ip, ip, #36864	; 0x9000
   10378:	ldr	pc, [ip, #3904]!	; 0xf40

0001037c <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   1037c:	add	ip, pc, #1048576	; 0x100000
   10380:	add	ip, ip, #36864	; 0x9000
   10384:	ldr	pc, [ip, #3896]!	; 0xf38

00010388 <myhtml_tree_node_insert_before@plt>:
   10388:	add	ip, pc, #1048576	; 0x100000
   1038c:	add	ip, ip, #36864	; 0x9000
   10390:	ldr	pc, [ip, #3888]!	; 0xf30

00010394 <myhtml_parser_token_data_to_string_charef@plt>:
   10394:	add	ip, pc, #1048576	; 0x100000
   10398:	add	ip, ip, #36864	; 0x9000
   1039c:	ldr	pc, [ip, #3880]!	; 0xf28

000103a0 <mythread_thread_attr_clean@plt>:
   103a0:	add	ip, pc, #1048576	; 0x100000
   103a4:	add	ip, ip, #36864	; 0x9000
   103a8:	ldr	pc, [ip, #3872]!	; 0xf20

000103ac <myhtml_tree_clear_stack_back_table_row_context@plt>:
   103ac:	add	ip, pc, #1048576	; 0x100000
   103b0:	add	ip, ip, #36864	; 0x9000
   103b4:	ldr	pc, [ip, #3864]!	; 0xf18

000103b8 <myhtml_tree_template_insertion_clean@plt>:
   103b8:	add	ip, pc, #1048576	; 0x100000
   103bc:	add	ip, ip, #36864	; 0x9000
   103c0:	ldr	pc, [ip, #3856]!	; 0xf10

000103c4 <myhtml_tokenizer_chunk_process@plt>:
   103c4:	add	ip, pc, #1048576	; 0x100000
   103c8:	add	ip, ip, #36864	; 0x9000
   103cc:	ldr	pc, [ip, #3848]!	; 0xf08

000103d0 <myhtml_stream_create@plt>:
   103d0:	add	ip, pc, #1048576	; 0x100000
   103d4:	add	ip, ip, #36864	; 0x9000
   103d8:	ldr	pc, [ip, #3840]!	; 0xf00

000103dc <myhtml_tree_tags_close_p@plt>:
   103dc:	add	ip, pc, #1048576	; 0x100000
   103e0:	add	ip, ip, #36864	; 0x9000
   103e4:	ldr	pc, [ip, #3832]!	; 0xef8

000103e8 <mcsimple_init@plt>:
   103e8:	add	ip, pc, #1048576	; 0x100000
   103ec:	add	ip, ip, #36864	; 0x9000
   103f0:	ldr	pc, [ip, #3824]!	; 0xef0

000103f4 <myencoding_string_append@plt>:
   103f4:	add	ip, pc, #1048576	; 0x100000
   103f8:	add	ip, ip, #36864	; 0x9000
   103fc:	ldr	pc, [ip, #3816]!	; 0xee8

00010400 <myhtml_stream_buffer_clean@plt>:
   10400:	add	ip, pc, #1048576	; 0x100000
   10404:	add	ip, ip, #36864	; 0x9000
   10408:	ldr	pc, [ip, #3808]!	; 0xee0

0001040c <mycore_utils_avl_tree_rotate_for_delete@plt>:
   1040c:	add	ip, pc, #1048576	; 0x100000
   10410:	add	ip, ip, #36864	; 0x9000
   10414:	ldr	pc, [ip, #3800]!	; 0xed8

00010418 <myhtml_token_merged_two_token_string@plt>:
   10418:	add	ip, pc, #1048576	; 0x100000
   1041c:	add	ip, ip, #36864	; 0x9000
   10420:	ldr	pc, [ip, #3792]!	; 0xed0

00010424 <myhtml_attribute_value@plt>:
   10424:	add	ip, pc, #1048576	; 0x100000
   10428:	add	ip, ip, #36864	; 0x9000
   1042c:	ldr	pc, [ip, #3784]!	; 0xec8

00010430 <myhtml_token_strict_doctype_by_token@plt>:
   10430:	add	ip, pc, #1048576	; 0x100000
   10434:	add	ip, ip, #36864	; 0x9000
   10438:	ldr	pc, [ip, #3776]!	; 0xec0

0001043c <mchar_async_init@plt>:
   1043c:	add	ip, pc, #1048576	; 0x100000
   10440:	add	ip, ip, #36864	; 0x9000
   10444:	ldr	pc, [ip, #3768]!	; 0xeb8

00010448 <mycore_string_crop_whitespace_from_begin@plt>:
   10448:	add	ip, pc, #1048576	; 0x100000
   1044c:	add	ip, ip, #36864	; 0x9000
   10450:	ldr	pc, [ip, #3760]!	; 0xeb0

00010454 <mythread_resume@plt>:
   10454:	add	ip, pc, #1048576	; 0x100000
   10458:	add	ip, ip, #36864	; 0x9000
   1045c:	ldr	pc, [ip, #3752]!	; 0xea8

00010460 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   10460:	add	ip, pc, #1048576	; 0x100000
   10464:	add	ip, ip, #36864	; 0x9000
   10468:	ldr	pc, [ip, #3744]!	; 0xea0

0001046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   1046c:	add	ip, pc, #1048576	; 0x100000
   10470:	add	ip, ip, #36864	; 0x9000
   10474:	ldr	pc, [ip, #3736]!	; 0xe98

00010478 <myhtml_create_stream_and_batch@plt>:
   10478:	add	ip, pc, #1048576	; 0x100000
   1047c:	add	ip, ip, #36864	; 0x9000
   10480:	ldr	pc, [ip, #3728]!	; 0xe90

00010484 <myhtml_data_process_entry_clean@plt>:
   10484:	add	ip, pc, #1048576	; 0x100000
   10488:	add	ip, ip, #36864	; 0x9000
   1048c:	ldr	pc, [ip, #3720]!	; 0xe88

00010490 <mcsync_spin_init@plt>:
   10490:	add	ip, pc, #1048576	; 0x100000
   10494:	add	ip, ip, #36864	; 0x9000
   10498:	ldr	pc, [ip, #3712]!	; 0xe80

0001049c <malloc@plt>:
   1049c:	add	ip, pc, #1048576	; 0x100000
   104a0:	add	ip, ip, #36864	; 0x9000
   104a4:	ldr	pc, [ip, #3704]!	; 0xe78

000104a8 <mythread_check_status@plt>:
   104a8:	add	ip, pc, #1048576	; 0x100000
   104ac:	add	ip, ip, #36864	; 0x9000
   104b0:	ldr	pc, [ip, #3696]!	; 0xe70

000104b4 <myhtml_token_doctype_check_html_4_0@plt>:
   104b4:	add	ip, pc, #1048576	; 0x100000
   104b8:	add	ip, ip, #36864	; 0x9000
   104bc:	ldr	pc, [ip, #3688]!	; 0xe68

000104c0 <mycore_strcasecmp@plt>:
   104c0:	add	ip, pc, #1048576	; 0x100000
   104c4:	add	ip, ip, #36864	; 0x9000
   104c8:	ldr	pc, [ip, #3680]!	; 0xe60

000104cc <mythread_queue_node_malloc_round@plt>:
   104cc:	add	ip, pc, #1048576	; 0x100000
   104d0:	add	ip, ip, #36864	; 0x9000
   104d4:	ldr	pc, [ip, #3672]!	; 0xe58

000104d8 <myhtml_tree_active_formatting_reconstruction@plt>:
   104d8:	add	ip, pc, #1048576	; 0x100000
   104dc:	add	ip, ip, #36864	; 0x9000
   104e0:	ldr	pc, [ip, #3664]!	; 0xe50

000104e4 <myhtml_token_set_done@plt>:
   104e4:	add	ip, pc, #1048576	; 0x100000
   104e8:	add	ip, ip, #36864	; 0x9000
   104ec:	ldr	pc, [ip, #3656]!	; 0xe48

000104f0 <mcsync_spin_create@plt>:
   104f0:	add	ip, pc, #1048576	; 0x100000
   104f4:	add	ip, ip, #36864	; 0x9000
   104f8:	ldr	pc, [ip, #3648]!	; 0xe40

000104fc <mythread_thread_join@plt>:
   104fc:	add	ip, pc, #1048576	; 0x100000
   10500:	add	ip, ip, #36864	; 0x9000
   10504:	ldr	pc, [ip, #3640]!	; 0xe38

00010508 <myhtml_token_attr_remove@plt>:
   10508:	add	ip, pc, #1048576	; 0x100000
   1050c:	add	ip, ip, #36864	; 0x9000
   10510:	ldr	pc, [ip, #3632]!	; 0xe30

00010514 <myhtml_token_node_attr_copy@plt>:
   10514:	add	ip, pc, #1048576	; 0x100000
   10518:	add	ip, ip, #36864	; 0x9000
   1051c:	ldr	pc, [ip, #3624]!	; 0xe28

00010520 <mythread_quit@plt>:
   10520:	add	ip, pc, #1048576	; 0x100000
   10524:	add	ip, ip, #36864	; 0x9000
   10528:	ldr	pc, [ip, #3616]!	; 0xe20

0001052c <myhtml_batch_create@plt>:
   1052c:	add	ip, pc, #1048576	; 0x100000
   10530:	add	ip, ip, #36864	; 0x9000
   10534:	ldr	pc, [ip, #3608]!	; 0xe18

00010538 <myhtml_parse_chunk_fragment@plt>:
   10538:	add	ip, pc, #1048576	; 0x100000
   1053c:	add	ip, ip, #36864	; 0x9000
   10540:	ldr	pc, [ip, #3600]!	; 0xe10

00010544 <mcsync_spin_lock@plt>:
   10544:	add	ip, pc, #1048576	; 0x100000
   10548:	add	ip, ip, #36864	; 0x9000
   1054c:	ldr	pc, [ip, #3592]!	; 0xe08

00010550 <myhtml_token_clean@plt>:
   10550:	add	ip, pc, #1048576	; 0x100000
   10554:	add	ip, ip, #36864	; 0x9000
   10558:	ldr	pc, [ip, #3584]!	; 0xe00

0001055c <mythread_queue_list_get_count@plt>:
   1055c:	add	ip, pc, #1048576	; 0x100000
   10560:	add	ip, ip, #36864	; 0x9000
   10564:	ldr	pc, [ip, #3576]!	; 0xdf8

00010568 <mythread_queue_list_see_for_done_by_thread@plt>:
   10568:	add	ip, pc, #1048576	; 0x100000
   1056c:	add	ip, ip, #36864	; 0x9000
   10570:	ldr	pc, [ip, #3568]!	; 0xdf0

00010574 <__gmon_start__@plt>:
   10574:	add	ip, pc, #1048576	; 0x100000
   10578:	add	ip, ip, #36864	; 0x9000
   1057c:	ldr	pc, [ip, #3560]!	; 0xde8

00010580 <myhtml_tokenizer_pause@plt>:
   10580:	add	ip, pc, #1048576	; 0x100000
   10584:	add	ip, ip, #36864	; 0x9000
   10588:	ldr	pc, [ip, #3552]!	; 0xde0

0001058c <myhtml_tokenizer_set_first_settings@plt>:
   1058c:	add	ip, pc, #1048576	; 0x100000
   10590:	add	ip, ip, #36864	; 0x9000
   10594:	ldr	pc, [ip, #3544]!	; 0xdd8

00010598 <myhtml_tree_temp_tag_name_init@plt>:
   10598:	add	ip, pc, #1048576	; 0x100000
   1059c:	add	ip, ip, #36864	; 0x9000
   105a0:	ldr	pc, [ip, #3536]!	; 0xdd0

000105a4 <mycore_string_init@plt>:
   105a4:	add	ip, pc, #1048576	; 0x100000
   105a8:	add	ip, ip, #36864	; 0x9000
   105ac:	ldr	pc, [ip, #3528]!	; 0xdc8

000105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>:
   105b0:	add	ip, pc, #1048576	; 0x100000
   105b4:	add	ip, ip, #36864	; 0x9000
   105b8:	ldr	pc, [ip, #3520]!	; 0xdc0

000105bc <myhtml_tree_current_node@plt>:
   105bc:	add	ip, pc, #1048576	; 0x100000
   105c0:	add	ip, ip, #36864	; 0x9000
   105c4:	ldr	pc, [ip, #3512]!	; 0xdb8

000105c8 <mythread_mutex_close@plt>:
   105c8:	add	ip, pc, #1048576	; 0x100000
   105cc:	add	ip, ip, #36864	; 0x9000
   105d0:	ldr	pc, [ip, #3504]!	; 0xdb0

000105d4 <myhtml_insertion_mode_in_body@plt>:
   105d4:	add	ip, pc, #1048576	; 0x100000
   105d8:	add	ip, ip, #36864	; 0x9000
   105dc:	ldr	pc, [ip, #3496]!	; 0xda8

000105e0 <myhtml_tree_active_formatting_between_last_marker@plt>:
   105e0:	add	ip, pc, #1048576	; 0x100000
   105e4:	add	ip, ip, #36864	; 0x9000
   105e8:	ldr	pc, [ip, #3488]!	; 0xda0

000105ec <mctree_create@plt>:
   105ec:	add	ip, pc, #1048576	; 0x100000
   105f0:	add	ip, ip, #36864	; 0x9000
   105f4:	ldr	pc, [ip, #3480]!	; 0xd98

000105f8 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   105f8:	add	ip, pc, #1048576	; 0x100000
   105fc:	add	ip, ip, #36864	; 0x9000
   10600:	ldr	pc, [ip, #3472]!	; 0xd90

00010604 <strlen@plt>:
   10604:	add	ip, pc, #1048576	; 0x100000
   10608:	add	ip, ip, #36864	; 0x9000
   1060c:	ldr	pc, [ip, #3464]!	; 0xd88

00010610 <myhtml_token_node_wait_for_done@plt>:
   10610:	add	ip, pc, #1048576	; 0x100000
   10614:	add	ip, ip, #36864	; 0x9000
   10618:	ldr	pc, [ip, #3456]!	; 0xd80

0001061c <mycore_string_append_lowercase@plt>:
   1061c:	add	ip, pc, #1048576	; 0x100000
   10620:	add	ip, ip, #36864	; 0x9000
   10624:	ldr	pc, [ip, #3448]!	; 0xd78

00010628 <myhtml_token_node_attr_copy_with_check@plt>:
   10628:	add	ip, pc, #1048576	; 0x100000
   1062c:	add	ip, ip, #36864	; 0x9000
   10630:	ldr	pc, [ip, #3440]!	; 0xd70

00010634 <myhtml_encoding_set@plt>:
   10634:	add	ip, pc, #1048576	; 0x100000
   10638:	add	ip, ip, #36864	; 0x9000
   1063c:	ldr	pc, [ip, #3432]!	; 0xd68

00010640 <mythread_queue_init@plt>:
   10640:	add	ip, pc, #1048576	; 0x100000
   10644:	add	ip, ip, #36864	; 0x9000
   10648:	ldr	pc, [ip, #3424]!	; 0xd60

0001064c <myhtml_tree_node_add_child@plt>:
   1064c:	add	ip, pc, #1048576	; 0x100000
   10650:	add	ip, ip, #36864	; 0x9000
   10654:	ldr	pc, [ip, #3416]!	; 0xd58

00010658 <mycore_utils_avl_tree_node_set_height@plt>:
   10658:	add	ip, pc, #1048576	; 0x100000
   1065c:	add	ip, ip, #36864	; 0x9000
   10660:	ldr	pc, [ip, #3408]!	; 0xd50

00010664 <myhtml_tree_clean@plt>:
   10664:	add	ip, pc, #1048576	; 0x100000
   10668:	add	ip, ip, #36864	; 0x9000
   1066c:	ldr	pc, [ip, #3400]!	; 0xd48

00010670 <myhtml_tree_generate_implied_end_tags@plt>:
   10670:	add	ip, pc, #1048576	; 0x100000
   10674:	add	ip, ip, #36864	; 0x9000
   10678:	ldr	pc, [ip, #3392]!	; 0xd40

0001067c <mchar_async_node_clean@plt>:
   1067c:	add	ip, pc, #1048576	; 0x100000
   10680:	add	ip, ip, #36864	; 0x9000
   10684:	ldr	pc, [ip, #3384]!	; 0xd38

00010688 <myhtml_tree_list_destroy@plt>:
   10688:	add	ip, pc, #1048576	; 0x100000
   1068c:	add	ip, ip, #36864	; 0x9000
   10690:	ldr	pc, [ip, #3376]!	; 0xd30

00010694 <myhtml_serialization_node_callback@plt>:
   10694:	add	ip, pc, #1048576	; 0x100000
   10698:	add	ip, ip, #36864	; 0x9000
   1069c:	ldr	pc, [ip, #3368]!	; 0xd28

000106a0 <myencoding_detect_by_trigram@plt>:
   106a0:	add	ip, pc, #1048576	; 0x100000
   106a4:	add	ip, ip, #36864	; 0x9000
   106a8:	ldr	pc, [ip, #3360]!	; 0xd20

000106ac <mchar_async_free@plt>:
   106ac:	add	ip, pc, #1048576	; 0x100000
   106b0:	add	ip, ip, #36864	; 0x9000
   106b4:	ldr	pc, [ip, #3352]!	; 0xd18

000106b8 <mchar_async_cache_clean@plt>:
   106b8:	add	ip, pc, #1048576	; 0x100000
   106bc:	add	ip, ip, #36864	; 0x9000
   106c0:	ldr	pc, [ip, #3344]!	; 0xd10

000106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   106c4:	add	ip, pc, #1048576	; 0x100000
   106c8:	add	ip, ip, #36864	; 0x9000
   106cc:	ldr	pc, [ip, #3336]!	; 0xd08

000106d0 <mcsimple_malloc@plt>:
   106d0:	add	ip, pc, #1048576	; 0x100000
   106d4:	add	ip, ip, #36864	; 0x9000
   106d8:	ldr	pc, [ip, #3328]!	; 0xd00

000106dc <mctree_search_lowercase@plt>:
   106dc:	add	ip, pc, #1048576	; 0x100000
   106e0:	add	ip, ip, #36864	; 0x9000
   106e4:	ldr	pc, [ip, #3320]!	; 0xcf8

000106e8 <myhtml_data_process@plt>:
   106e8:	add	ip, pc, #1048576	; 0x100000
   106ec:	add	ip, ip, #36864	; 0x9000
   106f0:	ldr	pc, [ip, #3312]!	; 0xcf0

000106f4 <myhtml_token_attr_copy@plt>:
   106f4:	add	ip, pc, #1048576	; 0x100000
   106f8:	add	ip, ip, #36864	; 0x9000
   106fc:	ldr	pc, [ip, #3304]!	; 0xce8

00010700 <myhtml_tree_node_insert_by_node@plt>:
   10700:	add	ip, pc, #1048576	; 0x100000
   10704:	add	ip, ip, #36864	; 0x9000
   10708:	ldr	pc, [ip, #3296]!	; 0xce0

0001070c <mcobject_init@plt>:
   1070c:	add	ip, pc, #1048576	; 0x100000
   10710:	add	ip, ip, #36864	; 0x9000
   10714:	ldr	pc, [ip, #3288]!	; 0xcd8

00010718 <myhtml_token_destroy@plt>:
   10718:	add	ip, pc, #1048576	; 0x100000
   1071c:	add	ip, ip, #36864	; 0x9000
   10720:	ldr	pc, [ip, #3280]!	; 0xcd0

00010724 <myhtml_destroy_marker@plt>:
   10724:	add	ip, pc, #1048576	; 0x100000
   10728:	add	ip, ip, #36864	; 0x9000
   1072c:	ldr	pc, [ip, #3272]!	; 0xcc8

00010730 <pthread_attr_init@plt>:
   10730:	add	ip, pc, #1048576	; 0x100000
   10734:	add	ip, ip, #36864	; 0x9000
   10738:	ldr	pc, [ip, #3264]!	; 0xcc0

0001073c <myhtml_attribute_free@plt>:
   1073c:	add	ip, pc, #1048576	; 0x100000
   10740:	add	ip, ip, #36864	; 0x9000
   10744:	ldr	pc, [ip, #3256]!	; 0xcb8

00010748 <myhtml_serialization_node_buffer@plt>:
   10748:	add	ip, pc, #1048576	; 0x100000
   1074c:	add	ip, ip, #36864	; 0x9000
   10750:	ldr	pc, [ip, #3248]!	; 0xcb0

00010754 <myhtml_charef_find_by_pos@plt>:
   10754:	add	ip, pc, #1048576	; 0x100000
   10758:	add	ip, ip, #36864	; 0x9000
   1075c:	ldr	pc, [ip, #3240]!	; 0xca8

00010760 <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   10760:	add	ip, pc, #1048576	; 0x100000
   10764:	add	ip, ip, #36864	; 0x9000
   10768:	ldr	pc, [ip, #3232]!	; 0xca0

0001076c <mythread_queue_list_create@plt>:
   1076c:	add	ip, pc, #1048576	; 0x100000
   10770:	add	ip, ip, #36864	; 0x9000
   10774:	ldr	pc, [ip, #3224]!	; 0xc98

00010778 <myhtml_token_attr_delete_all@plt>:
   10778:	add	ip, pc, #1048576	; 0x100000
   1077c:	add	ip, ip, #36864	; 0x9000
   10780:	ldr	pc, [ip, #3216]!	; 0xc90

00010784 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   10784:	add	ip, pc, #1048576	; 0x100000
   10788:	add	ip, ip, #36864	; 0x9000
   1078c:	ldr	pc, [ip, #3208]!	; 0xc88

00010790 <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   10790:	add	ip, pc, #1048576	; 0x100000
   10794:	add	ip, ip, #36864	; 0x9000
   10798:	ldr	pc, [ip, #3200]!	; 0xc80

0001079c <myhtml_stream_buffer_entry_init@plt>:
   1079c:	add	ip, pc, #1048576	; 0x100000
   107a0:	add	ip, ip, #36864	; 0x9000
   107a4:	ldr	pc, [ip, #3192]!	; 0xc78

000107a8 <myhtml_tree_active_formatting_append_with_check@plt>:
   107a8:	add	ip, pc, #1048576	; 0x100000
   107ac:	add	ip, ip, #36864	; 0x9000
   107b0:	ldr	pc, [ip, #3184]!	; 0xc70

000107b4 <myhtml_tree_active_formatting_clean@plt>:
   107b4:	add	ip, pc, #1048576	; 0x100000
   107b8:	add	ip, ip, #36864	; 0x9000
   107bc:	ldr	pc, [ip, #3176]!	; 0xc68

000107c0 <myencoding_get_function_by_id@plt>:
   107c0:	add	ip, pc, #1048576	; 0x100000
   107c4:	add	ip, ip, #36864	; 0x9000
   107c8:	ldr	pc, [ip, #3168]!	; 0xc60

000107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   107cc:	add	ip, pc, #1048576	; 0x100000
   107d0:	add	ip, ip, #36864	; 0x9000
   107d4:	ldr	pc, [ip, #3160]!	; 0xc58

000107d8 <myhtml_tree_active_formatting_remove_by_index@plt>:
   107d8:	add	ip, pc, #1048576	; 0x100000
   107dc:	add	ip, ip, #36864	; 0x9000
   107e0:	ldr	pc, [ip, #3152]!	; 0xc50

000107e4 <mcsync_lock@plt>:
   107e4:	add	ip, pc, #1048576	; 0x100000
   107e8:	add	ip, ip, #36864	; 0x9000
   107ec:	ldr	pc, [ip, #3144]!	; 0xc48

000107f0 <myhtml_tree_list_init@plt>:
   107f0:	add	ip, pc, #1048576	; 0x100000
   107f4:	add	ip, ip, #36864	; 0x9000
   107f8:	ldr	pc, [ip, #3136]!	; 0xc40

000107fc <mcsync_init@plt>:
   107fc:	add	ip, pc, #1048576	; 0x100000
   10800:	add	ip, ip, #36864	; 0x9000
   10804:	ldr	pc, [ip, #3128]!	; 0xc38

00010808 <myhtml_tree_active_formatting_is_marker@plt>:
   10808:	add	ip, pc, #1048576	; 0x100000
   1080c:	add	ip, ip, #36864	; 0x9000
   10810:	ldr	pc, [ip, #3120]!	; 0xc30

00010814 <mcobject_async_node_clean@plt>:
   10814:	add	ip, pc, #1048576	; 0x100000
   10818:	add	ip, ip, #36864	; 0x9000
   1081c:	ldr	pc, [ip, #3112]!	; 0xc28

00010820 <mchar_async_cache_destroy@plt>:
   10820:	add	ip, pc, #1048576	; 0x100000
   10824:	add	ip, ip, #36864	; 0x9000
   10828:	ldr	pc, [ip, #3104]!	; 0xc20

0001082c <myhtml_tree_adoption_agency_algorithm@plt>:
   1082c:	add	ip, pc, #1048576	; 0x100000
   10830:	add	ip, ip, #36864	; 0x9000
   10834:	ldr	pc, [ip, #3096]!	; 0xc18

00010838 <myhtml_tree_active_formatting_remove@plt>:
   10838:	add	ip, pc, #1048576	; 0x100000
   1083c:	add	ip, ip, #36864	; 0x9000
   10840:	ldr	pc, [ip, #3088]!	; 0xc10

00010844 <memset@plt>:
   10844:	add	ip, pc, #1048576	; 0x100000
   10848:	add	ip, ip, #36864	; 0x9000
   1084c:	ldr	pc, [ip, #3080]!	; 0xc08

00010850 <myhread_entry_create@plt>:
   10850:	add	ip, pc, #1048576	; 0x100000
   10854:	add	ip, ip, #36864	; 0x9000
   10858:	ldr	pc, [ip, #3072]!	; 0xc00

0001085c <mcsync_mutex_create@plt>:
   1085c:	add	ip, pc, #1048576	; 0x100000
   10860:	add	ip, ip, #36864	; 0x9000
   10864:	ldr	pc, [ip, #3064]!	; 0xbf8

00010868 <mycore_string_append@plt>:
   10868:	add	ip, pc, #1048576	; 0x100000
   1086c:	add	ip, ip, #36864	; 0x9000
   10870:	ldr	pc, [ip, #3056]!	; 0xbf0

00010874 <mcobject_async_chunk_malloc_without_lock@plt>:
   10874:	add	ip, pc, #1048576	; 0x100000
   10878:	add	ip, ip, #36864	; 0x9000
   1087c:	ldr	pc, [ip, #3048]!	; 0xbe8

00010880 <strncpy@plt>:
   10880:	add	ip, pc, #1048576	; 0x100000
   10884:	add	ip, ip, #36864	; 0x9000
   10888:	ldr	pc, [ip, #3040]!	; 0xbe0

0001088c <pthread_cancel@plt>:
   1088c:	add	ip, pc, #1048576	; 0x100000
   10890:	add	ip, ip, #36864	; 0x9000
   10894:	ldr	pc, [ip, #3032]!	; 0xbd8

00010898 <myhtml_token_attr_create@plt>:
   10898:	add	ip, pc, #1048576	; 0x100000
   1089c:	add	ip, ip, #36864	; 0x9000
   108a0:	ldr	pc, [ip, #3024]!	; 0xbd0

000108a4 <mchar_async_malloc@plt>:
   108a4:	add	ip, pc, #1048576	; 0x100000
   108a8:	add	ip, ip, #36864	; 0x9000
   108ac:	ldr	pc, [ip, #3016]!	; 0xbc8

000108b0 <myhtml_tag_static_search@plt>:
   108b0:	add	ip, pc, #1048576	; 0x100000
   108b4:	add	ip, ip, #36864	; 0x9000
   108b8:	ldr	pc, [ip, #3008]!	; 0xbc0

000108bc <myhtml_data_process_end@plt>:
   108bc:	add	ip, pc, #1048576	; 0x100000
   108c0:	add	ip, ip, #36864	; 0x9000
   108c4:	ldr	pc, [ip, #3000]!	; 0xbb8

000108c8 <myhtml_stream_buffer_add_entry@plt>:
   108c8:	add	ip, pc, #1048576	; 0x100000
   108cc:	add	ip, ip, #36864	; 0x9000
   108d0:	ldr	pc, [ip, #2992]!	; 0xbb0

000108d4 <myhtml_tree_temp_tag_name_destroy@plt>:
   108d4:	add	ip, pc, #1048576	; 0x100000
   108d8:	add	ip, ip, #36864	; 0x9000
   108dc:	ldr	pc, [ip, #2984]!	; 0xba8

000108e0 <myhtml_tree_open_elements_pop_until@plt>:
   108e0:	add	ip, pc, #1048576	; 0x100000
   108e4:	add	ip, ip, #36864	; 0x9000
   108e8:	ldr	pc, [ip, #2976]!	; 0xba0

000108ec <mctree_insert@plt>:
   108ec:	add	ip, pc, #1048576	; 0x100000
   108f0:	add	ip, ip, #36864	; 0x9000
   108f4:	ldr	pc, [ip, #2968]!	; 0xb98

000108f8 <mycore_string_realloc@plt>:
   108f8:	add	ip, pc, #1048576	; 0x100000
   108fc:	add	ip, ip, #36864	; 0x9000
   10900:	ldr	pc, [ip, #2960]!	; 0xb90

00010904 <myhtml_tree_node_insert@plt>:
   10904:	add	ip, pc, #1048576	; 0x100000
   10908:	add	ip, ip, #36864	; 0x9000
   1090c:	ldr	pc, [ip, #2952]!	; 0xb88

00010910 <mythread_queue_list_entry_wait_for_done@plt>:
   10910:	add	ip, pc, #1048576	; 0x100000
   10914:	add	ip, ip, #36864	; 0x9000
   10918:	ldr	pc, [ip, #2944]!	; 0xb80

0001091c <myhtml_tree_open_elements_append@plt>:
   1091c:	add	ip, pc, #1048576	; 0x100000
   10920:	add	ip, ip, #36864	; 0x9000
   10924:	ldr	pc, [ip, #2936]!	; 0xb78

00010928 <mcsimple_init_list_entries@plt>:
   10928:	add	ip, pc, #1048576	; 0x100000
   1092c:	add	ip, ip, #36864	; 0x9000
   10930:	ldr	pc, [ip, #2928]!	; 0xb70

00010934 <mythread_queue_list_entry_clean@plt>:
   10934:	add	ip, pc, #1048576	; 0x100000
   10938:	add	ip, ip, #36864	; 0x9000
   1093c:	ldr	pc, [ip, #2920]!	; 0xb68

00010940 <mythread_destroy@plt>:
   10940:	add	ip, pc, #1048576	; 0x100000
   10944:	add	ip, ip, #36864	; 0x9000
   10948:	ldr	pc, [ip, #2912]!	; 0xb60

0001094c <myhtml_tree_token_list_init@plt>:
   1094c:	add	ip, pc, #1048576	; 0x100000
   10950:	add	ip, ip, #36864	; 0x9000
   10954:	ldr	pc, [ip, #2904]!	; 0xb58

00010958 <myhtml_tree_list_append_after_index@plt>:
   10958:	add	ip, pc, #1048576	; 0x100000
   1095c:	add	ip, ip, #36864	; 0x9000
   10960:	ldr	pc, [ip, #2896]!	; 0xb50

00010964 <mchar_async_chunk_malloc@plt>:
   10964:	add	ip, pc, #1048576	; 0x100000
   10968:	add	ip, ip, #36864	; 0x9000
   1096c:	ldr	pc, [ip, #2888]!	; 0xb48

00010970 <myhtml_tree_template_insertion_pop@plt>:
   10970:	add	ip, pc, #1048576	; 0x100000
   10974:	add	ip, ip, #36864	; 0x9000
   10978:	ldr	pc, [ip, #2880]!	; 0xb40

0001097c <__mtree_search_to_start@plt>:
   1097c:	add	ip, pc, #1048576	; 0x100000
   10980:	add	ip, ip, #36864	; 0x9000
   10984:	ldr	pc, [ip, #2872]!	; 0xb38

00010988 <mythread_thread_destroy@plt>:
   10988:	add	ip, pc, #1048576	; 0x100000
   1098c:	add	ip, ip, #36864	; 0x9000
   10990:	ldr	pc, [ip, #2864]!	; 0xb30

00010994 <fclose@plt>:
   10994:	add	ip, pc, #1048576	; 0x100000
   10998:	add	ip, ip, #36864	; 0x9000
   1099c:	ldr	pc, [ip, #2856]!	; 0xb28

000109a0 <myhtml_token_node_create@plt>:
   109a0:	add	ip, pc, #1048576	; 0x100000
   109a4:	add	ip, ip, #36864	; 0x9000
   109a8:	ldr	pc, [ip, #2848]!	; 0xb20

000109ac <mycore_utils_avl_tree_node_balance@plt>:
   109ac:	add	ip, pc, #1048576	; 0x100000
   109b0:	add	ip, ip, #36864	; 0x9000
   109b4:	ldr	pc, [ip, #2840]!	; 0xb18

000109b8 <myhtml_tag_get_by_id@plt>:
   109b8:	add	ip, pc, #1048576	; 0x100000
   109bc:	add	ip, ip, #36864	; 0x9000
   109c0:	ldr	pc, [ip, #2832]!	; 0xb10

000109c4 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   109c4:	add	ip, pc, #1048576	; 0x100000
   109c8:	add	ip, ip, #36864	; 0x9000
   109cc:	ldr	pc, [ip, #2824]!	; 0xb08

000109d0 <myhtml_parse_chunk@plt>:
   109d0:	add	ip, pc, #1048576	; 0x100000
   109d4:	add	ip, ip, #36864	; 0x9000
   109d8:	ldr	pc, [ip, #2816]!	; 0xb00

000109dc <mycore_utils_mhash_rebuld@plt>:
   109dc:	add	ip, pc, #1048576	; 0x100000
   109e0:	add	ip, ip, #36864	; 0x9000
   109e4:	ldr	pc, [ip, #2808]!	; 0xaf8

000109e8 <myhtml_charef_get_first_position@plt>:
   109e8:	add	ip, pc, #1048576	; 0x100000
   109ec:	add	ip, ip, #36864	; 0x9000
   109f0:	ldr	pc, [ip, #2800]!	; 0xaf0

000109f4 <mcobject_malloc@plt>:
   109f4:	add	ip, pc, #1048576	; 0x100000
   109f8:	add	ip, ip, #36864	; 0x9000
   109fc:	ldr	pc, [ip, #2792]!	; 0xae8

00010a00 <myencoding_detect_unicode_has_end@plt>:
   10a00:	add	ip, pc, #1048576	; 0x100000
   10a04:	add	ip, ip, #36864	; 0x9000
   10a08:	ldr	pc, [ip, #2784]!	; 0xae0

00010a0c <mcsync_spin_clean@plt>:
   10a0c:	add	ip, pc, #1048576	; 0x100000
   10a10:	add	ip, ip, #36864	; 0x9000
   10a14:	ldr	pc, [ip, #2776]!	; 0xad8

00010a18 <mythread_queue_create@plt>:
   10a18:	add	ip, pc, #1048576	; 0x100000
   10a1c:	add	ip, ip, #36864	; 0x9000
   10a20:	ldr	pc, [ip, #2768]!	; 0xad0

00010a24 <mcobject_async_node_add@plt>:
   10a24:	add	ip, pc, #1048576	; 0x100000
   10a28:	add	ip, ip, #36864	; 0x9000
   10a2c:	ldr	pc, [ip, #2760]!	; 0xac8

00010a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   10a30:	add	ip, pc, #1048576	; 0x100000
   10a34:	add	ip, ip, #36864	; 0x9000
   10a38:	ldr	pc, [ip, #2752]!	; 0xac0

00010a3c <myhtml_is_html_node@plt>:
   10a3c:	add	ip, pc, #1048576	; 0x100000
   10a40:	add	ip, ip, #36864	; 0x9000
   10a44:	ldr	pc, [ip, #2744]!	; 0xab8

00010a48 <myhtml_init_marker@plt>:
   10a48:	add	ip, pc, #1048576	; 0x100000
   10a4c:	add	ip, ip, #36864	; 0x9000
   10a50:	ldr	pc, [ip, #2736]!	; 0xab0

00010a54 <myhtml_tree_active_formatting_init@plt>:
   10a54:	add	ip, pc, #1048576	; 0x100000
   10a58:	add	ip, ip, #36864	; 0x9000
   10a5c:	ldr	pc, [ip, #2728]!	; 0xaa8

00010a60 <myhtml_parser_token_data_to_string@plt>:
   10a60:	add	ip, pc, #1048576	; 0x100000
   10a64:	add	ip, ip, #36864	; 0x9000
   10a68:	ldr	pc, [ip, #2720]!	; 0xaa0

00010a6c <mythread_stop@plt>:
   10a6c:	add	ip, pc, #1048576	; 0x100000
   10a70:	add	ip, ip, #36864	; 0x9000
   10a74:	ldr	pc, [ip, #2712]!	; 0xa98

00010a78 <mythread_option_set@plt>:
   10a78:	add	ip, pc, #1048576	; 0x100000
   10a7c:	add	ip, ip, #36864	; 0x9000
   10a80:	ldr	pc, [ip, #2704]!	; 0xa90

00010a84 <myhtml_tag_name_by_id@plt>:
   10a84:	add	ip, pc, #1048576	; 0x100000
   10a88:	add	ip, ip, #36864	; 0x9000
   10a8c:	ldr	pc, [ip, #2696]!	; 0xa88

00010a90 <mythread_mutex_create@plt>:
   10a90:	add	ip, pc, #1048576	; 0x100000
   10a94:	add	ip, ip, #36864	; 0x9000
   10a98:	ldr	pc, [ip, #2688]!	; 0xa80

00010a9c <myhtml_attribute_key@plt>:
   10a9c:	add	ip, pc, #1048576	; 0x100000
   10aa0:	add	ip, ip, #36864	; 0x9000
   10aa4:	ldr	pc, [ip, #2680]!	; 0xa78

00010aa8 <mchar_sync_chunk_find_by_size@plt>:
   10aa8:	add	ip, pc, #1048576	; 0x100000
   10aac:	add	ip, ip, #36864	; 0x9000
   10ab0:	ldr	pc, [ip, #2672]!	; 0xa70

00010ab4 <mcobject_async_destroy@plt>:
   10ab4:	add	ip, pc, #1048576	; 0x100000
   10ab8:	add	ip, ip, #36864	; 0x9000
   10abc:	ldr	pc, [ip, #2664]!	; 0xa68

00010ac0 <myhtml_token_attr_compare@plt>:
   10ac0:	add	ip, pc, #1048576	; 0x100000
   10ac4:	add	ip, ip, #36864	; 0x9000
   10ac8:	ldr	pc, [ip, #2656]!	; 0xa60

00010acc <_myhtml_get_nodes_by_attribute_value@plt>:
   10acc:	add	ip, pc, #1048576	; 0x100000
   10ad0:	add	ip, ip, #36864	; 0x9000
   10ad4:	ldr	pc, [ip, #2648]!	; 0xa58

00010ad8 <myhtml_tokenizer_set_state@plt>:
   10ad8:	add	ip, pc, #1048576	; 0x100000
   10adc:	add	ip, ip, #36864	; 0x9000
   10ae0:	ldr	pc, [ip, #2640]!	; 0xa50

00010ae4 <mcsync_mutex_init@plt>:
   10ae4:	add	ip, pc, #1048576	; 0x100000
   10ae8:	add	ip, ip, #36864	; 0x9000
   10aec:	ldr	pc, [ip, #2632]!	; 0xa48

00010af0 <myhtml_tag_init@plt>:
   10af0:	add	ip, pc, #1048576	; 0x100000
   10af4:	add	ip, ip, #36864	; 0x9000
   10af8:	ldr	pc, [ip, #2624]!	; 0xa40

00010afc <pthread_join@plt>:
   10afc:	add	ip, pc, #1048576	; 0x100000
   10b00:	add	ip, ip, #36864	; 0x9000
   10b04:	ldr	pc, [ip, #2616]!	; 0xa38

00010b08 <myhtml_tag_get_by_name@plt>:
   10b08:	add	ip, pc, #1048576	; 0x100000
   10b0c:	add	ip, ip, #36864	; 0x9000
   10b10:	ldr	pc, [ip, #2608]!	; 0xa30

00010b14 <myhtml_stream_buffer_current_entry@plt>:
   10b14:	add	ip, pc, #1048576	; 0x100000
   10b18:	add	ip, ip, #36864	; 0x9000
   10b1c:	ldr	pc, [ip, #2600]!	; 0xa28

00010b20 <myencoding_prescan_stream_to_determine_encoding_with_found@plt>:
   10b20:	add	ip, pc, #1048576	; 0x100000
   10b24:	add	ip, ip, #36864	; 0x9000
   10b28:	ldr	pc, [ip, #2592]!	; 0xa20

00010b2c <myhtml_tokenizer_chunk_with_stream_buffer@plt>:
   10b2c:	add	ip, pc, #1048576	; 0x100000
   10b30:	add	ip, ip, #36864	; 0x9000
   10b34:	ldr	pc, [ip, #2584]!	; 0xa18

00010b38 <mchar_async_chunk_malloc_without_lock@plt>:
   10b38:	add	ip, pc, #1048576	; 0x100000
   10b3c:	add	ip, ip, #36864	; 0x9000
   10b40:	ldr	pc, [ip, #2576]!	; 0xa10

00010b44 <myhtml_tree_open_elements_init@plt>:
   10b44:	add	ip, pc, #1048576	; 0x100000
   10b48:	add	ip, ip, #36864	; 0x9000
   10b4c:	ldr	pc, [ip, #2568]!	; 0xa08

00010b50 <mcobject_async_malloc@plt>:
   10b50:	add	ip, pc, #1048576	; 0x100000
   10b54:	add	ip, ip, #36864	; 0x9000
   10b58:	ldr	pc, [ip, #2560]!	; 0xa00

00010b5c <mchar_async_clean@plt>:
   10b5c:	add	ip, pc, #1048576	; 0x100000
   10b60:	add	ip, ip, #36864	; 0x9000
   10b64:	ldr	pc, [ip, #2552]!	; 0x9f8

00010b68 <myencoding_decode_shared_utf_16@plt>:
   10b68:	add	ip, pc, #1048576	; 0x100000
   10b6c:	add	ip, ip, #36864	; 0x9000
   10b70:	ldr	pc, [ip, #2544]!	; 0x9f0

00010b74 <myhtml_token_adjust_foreign_attributes@plt>:
   10b74:	add	ip, pc, #1048576	; 0x100000
   10b78:	add	ip, ip, #36864	; 0x9000
   10b7c:	ldr	pc, [ip, #2536]!	; 0x9e8

00010b80 <myhtml_rules_init@plt>:
   10b80:	add	ip, pc, #1048576	; 0x100000
   10b84:	add	ip, ip, #36864	; 0x9000
   10b88:	ldr	pc, [ip, #2528]!	; 0x9e0

00010b8c <myencoding_decode_gb18030@plt>:
   10b8c:	add	ip, pc, #1048576	; 0x100000
   10b90:	add	ip, ip, #36864	; 0x9000
   10b94:	ldr	pc, [ip, #2520]!	; 0x9d8

00010b98 <mythread_nanosleep_destroy@plt>:
   10b98:	add	ip, pc, #1048576	; 0x100000
   10b9c:	add	ip, ip, #36864	; 0x9000
   10ba0:	ldr	pc, [ip, #2512]!	; 0x9d0

00010ba4 <mycore_utils_avl_tree_node_rotate_left@plt>:
   10ba4:	add	ip, pc, #1048576	; 0x100000
   10ba8:	add	ip, ip, #36864	; 0x9000
   10bac:	ldr	pc, [ip, #2504]!	; 0x9c8

00010bb0 <myhtml_string_before_append_any_preprocessing@plt>:
   10bb0:	add	ip, pc, #1048576	; 0x100000
   10bb4:	add	ip, ip, #36864	; 0x9000
   10bb8:	ldr	pc, [ip, #2496]!	; 0x9c0

00010bbc <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   10bbc:	add	ip, pc, #1048576	; 0x100000
   10bc0:	add	ip, ip, #36864	; 0x9000
   10bc4:	ldr	pc, [ip, #2488]!	; 0x9b8

00010bc8 <mchar_async_cache_init@plt>:
   10bc8:	add	ip, pc, #1048576	; 0x100000
   10bcc:	add	ip, ip, #36864	; 0x9000
   10bd0:	ldr	pc, [ip, #2480]!	; 0x9b0

00010bd4 <myhtml_check_tag_parser@plt>:
   10bd4:	add	ip, pc, #1048576	; 0x100000
   10bd8:	add	ip, ip, #36864	; 0x9000
   10bdc:	ldr	pc, [ip, #2472]!	; 0x9a8

00010be0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   10be0:	add	ip, pc, #1048576	; 0x100000
   10be4:	add	ip, ip, #36864	; 0x9000
   10be8:	ldr	pc, [ip, #2464]!	; 0x9a0

00010bec <mchar_async_node_delete@plt>:
   10bec:	add	ip, pc, #1048576	; 0x100000
   10bf0:	add	ip, ip, #36864	; 0x9000
   10bf4:	ldr	pc, [ip, #2456]!	; 0x998

00010bf8 <mchar_async_crop_first_chars_without_cache@plt>:
   10bf8:	add	ip, pc, #1048576	; 0x100000
   10bfc:	add	ip, ip, #36864	; 0x9000
   10c00:	ldr	pc, [ip, #2448]!	; 0x990

00010c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   10c04:	add	ip, pc, #1048576	; 0x100000
   10c08:	add	ip, ip, #36864	; 0x9000
   10c0c:	ldr	pc, [ip, #2440]!	; 0x988

00010c10 <mchar_async_cache_add@plt>:
   10c10:	add	ip, pc, #1048576	; 0x100000
   10c14:	add	ip, ip, #36864	; 0x9000
   10c18:	ldr	pc, [ip, #2432]!	; 0x980

00010c1c <myencoding_string_append_chunk_lowercase_ascii@plt>:
   10c1c:	add	ip, pc, #1048576	; 0x100000
   10c20:	add	ip, ip, #36864	; 0x9000
   10c24:	ldr	pc, [ip, #2424]!	; 0x978

00010c28 <mycore_malloc@plt>:
   10c28:	add	ip, pc, #1048576	; 0x100000
   10c2c:	add	ip, ip, #36864	; 0x9000
   10c30:	ldr	pc, [ip, #2416]!	; 0x970

00010c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   10c34:	add	ip, pc, #1048576	; 0x100000
   10c38:	add	ip, ip, #36864	; 0x9000
   10c3c:	ldr	pc, [ip, #2408]!	; 0x968

00010c40 <mythread_queue_node_malloc_limit@plt>:
   10c40:	add	ip, pc, #1048576	; 0x100000
   10c44:	add	ip, ip, #36864	; 0x9000
   10c48:	ldr	pc, [ip, #2400]!	; 0x960

00010c4c <myhtml_tree_node_insert_by_token@plt>:
   10c4c:	add	ip, pc, #1048576	; 0x100000
   10c50:	add	ip, ip, #36864	; 0x9000
   10c54:	ldr	pc, [ip, #2392]!	; 0x958

00010c58 <mctree_insert_after@plt>:
   10c58:	add	ip, pc, #1048576	; 0x100000
   10c5c:	add	ip, ip, #36864	; 0x9000
   10c60:	ldr	pc, [ip, #2384]!	; 0x950

00010c64 <myencoding_by_name@plt>:
   10c64:	add	ip, pc, #1048576	; 0x100000
   10c68:	add	ip, ip, #36864	; 0x9000
   10c6c:	ldr	pc, [ip, #2376]!	; 0x948

00010c70 <myhtml_tree_template_insertion_init@plt>:
   10c70:	add	ip, pc, #1048576	; 0x100000
   10c74:	add	ip, ip, #36864	; 0x9000
   10c78:	ldr	pc, [ip, #2368]!	; 0x940

00010c7c <myhtml_tree_open_elements_destroy@plt>:
   10c7c:	add	ip, pc, #1048576	; 0x100000
   10c80:	add	ip, ip, #36864	; 0x9000
   10c84:	ldr	pc, [ip, #2360]!	; 0x938

00010c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   10c88:	add	ip, pc, #1048576	; 0x100000
   10c8c:	add	ip, ip, #36864	; 0x9000
   10c90:	ldr	pc, [ip, #2352]!	; 0x930

00010c94 <myhtml_tree_node_free@plt>:
   10c94:	add	ip, pc, #1048576	; 0x100000
   10c98:	add	ip, ip, #36864	; 0x9000
   10c9c:	ldr	pc, [ip, #2344]!	; 0x928

00010ca0 <mythread_mutex_post@plt>:
   10ca0:	add	ip, pc, #1048576	; 0x100000
   10ca4:	add	ip, ip, #36864	; 0x9000
   10ca8:	ldr	pc, [ip, #2336]!	; 0x920

00010cac <mycore_string_clean@plt>:
   10cac:	add	ip, pc, #1048576	; 0x100000
   10cb0:	add	ip, ip, #36864	; 0x9000
   10cb4:	ldr	pc, [ip, #2328]!	; 0x918

00010cb8 <mythread_queue_list_entry_make_batch@plt>:
   10cb8:	add	ip, pc, #1048576	; 0x100000
   10cbc:	add	ip, ip, #36864	; 0x9000
   10cc0:	ldr	pc, [ip, #2320]!	; 0x910

00010cc4 <myhtml_tag_create@plt>:
   10cc4:	add	ip, pc, #1048576	; 0x100000
   10cc8:	add	ip, ip, #36864	; 0x9000
   10ccc:	ldr	pc, [ip, #2312]!	; 0x908

00010cd0 <myhtml_tree_close_cell@plt>:
   10cd0:	add	ip, pc, #1048576	; 0x100000
   10cd4:	add	ip, ip, #36864	; 0x9000
   10cd8:	ldr	pc, [ip, #2304]!	; 0x900

00010cdc <myhtml_tree_adjusted_current_node@plt>:
   10cdc:	add	ip, pc, #1048576	; 0x100000
   10ce0:	add	ip, ip, #36864	; 0x9000
   10ce4:	ldr	pc, [ip, #2296]!	; 0x8f8

00010ce8 <myencoding_detect_russian_has_end@plt>:
   10ce8:	add	ip, pc, #1048576	; 0x100000
   10cec:	add	ip, ip, #36864	; 0x9000
   10cf0:	ldr	pc, [ip, #2288]!	; 0x8f0

00010cf4 <myhtml_rules_check_for_first_newline@plt>:
   10cf4:	add	ip, pc, #1048576	; 0x100000
   10cf8:	add	ip, ip, #36864	; 0x9000
   10cfc:	ldr	pc, [ip, #2280]!	; 0x8e8

00010d00 <myhtml_stream_buffer_init@plt>:
   10d00:	add	ip, pc, #1048576	; 0x100000
   10d04:	add	ip, ip, #36864	; 0x9000
   10d08:	ldr	pc, [ip, #2272]!	; 0x8e0

00010d0c <mythread_queue_node_clean@plt>:
   10d0c:	add	ip, pc, #1048576	; 0x100000
   10d10:	add	ip, ip, #36864	; 0x9000
   10d14:	ldr	pc, [ip, #2264]!	; 0x8d8

00010d18 <myhtml_tree_node_insert_foreign_element@plt>:
   10d18:	add	ip, pc, #1048576	; 0x100000
   10d1c:	add	ip, ip, #36864	; 0x9000
   10d20:	ldr	pc, [ip, #2256]!	; 0x8d0

00010d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   10d24:	add	ip, pc, #1048576	; 0x100000
   10d28:	add	ip, ip, #36864	; 0x9000
   10d2c:	ldr	pc, [ip, #2248]!	; 0x8c8

00010d30 <mythread_mutex_wait@plt>:
   10d30:	add	ip, pc, #1048576	; 0x100000
   10d34:	add	ip, ip, #36864	; 0x9000
   10d38:	ldr	pc, [ip, #2240]!	; 0x8c0

00010d3c <mchar_async_destroy@plt>:
   10d3c:	add	ip, pc, #1048576	; 0x100000
   10d40:	add	ip, ip, #36864	; 0x9000
   10d44:	ldr	pc, [ip, #2232]!	; 0x8b8

00010d48 <mycore_utils_mhash_add_with_choice@plt>:
   10d48:	add	ip, pc, #1048576	; 0x100000
   10d4c:	add	ip, ip, #36864	; 0x9000
   10d50:	ldr	pc, [ip, #2224]!	; 0x8b0

00010d54 <myhtml_tree_node_delete@plt>:
   10d54:	add	ip, pc, #1048576	; 0x100000
   10d58:	add	ip, ip, #36864	; 0x9000
   10d5c:	ldr	pc, [ip, #2216]!	; 0x8a8

00010d60 <mycore_free@plt>:
   10d60:	add	ip, pc, #1048576	; 0x100000
   10d64:	add	ip, ip, #36864	; 0x9000
   10d68:	ldr	pc, [ip, #2208]!	; 0x8a0

00010d6c <mythread_queue_list_wait_for_done@plt>:
   10d6c:	add	ip, pc, #1048576	; 0x100000
   10d70:	add	ip, ip, #36864	; 0x9000
   10d74:	ldr	pc, [ip, #2200]!	; 0x898

00010d78 <mycore_string_whitespace_from_begin@plt>:
   10d78:	add	ip, pc, #1048576	; 0x100000
   10d7c:	add	ip, ip, #36864	; 0x9000
   10d80:	ldr	pc, [ip, #2192]!	; 0x890

00010d84 <myhtml_tree_node_remove@plt>:
   10d84:	add	ip, pc, #1048576	; 0x100000
   10d88:	add	ip, ip, #36864	; 0x9000
   10d8c:	ldr	pc, [ip, #2184]!	; 0x888

00010d90 <myhtml_collection_check_size@plt>:
   10d90:	add	ip, pc, #1048576	; 0x100000
   10d94:	add	ip, ip, #36864	; 0x9000
   10d98:	ldr	pc, [ip, #2176]!	; 0x880

00010d9c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   10d9c:	add	ip, pc, #1048576	; 0x100000
   10da0:	add	ip, ip, #36864	; 0x9000
   10da4:	ldr	pc, [ip, #2168]!	; 0x878

00010da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   10da8:	add	ip, pc, #1048576	; 0x100000
   10dac:	add	ip, ip, #36864	; 0x9000
   10db0:	ldr	pc, [ip, #2160]!	; 0x870

00010db4 <myhtml_tree_open_elements_clean@plt>:
   10db4:	add	ip, pc, #1048576	; 0x100000
   10db8:	add	ip, ip, #36864	; 0x9000
   10dbc:	ldr	pc, [ip, #2152]!	; 0x868

00010dc0 <myhtml_tree_node_insert_doctype@plt>:
   10dc0:	add	ip, pc, #1048576	; 0x100000
   10dc4:	add	ip, ip, #36864	; 0x9000
   10dc8:	ldr	pc, [ip, #2144]!	; 0x860

00010dcc <myhtml_tree_template_insertion_destroy@plt>:
   10dcc:	add	ip, pc, #1048576	; 0x100000
   10dd0:	add	ip, ip, #36864	; 0x9000
   10dd4:	ldr	pc, [ip, #2136]!	; 0x858

00010dd8 <myhtml_tag_destroy@plt>:
   10dd8:	add	ip, pc, #1048576	; 0x100000
   10ddc:	add	ip, ip, #36864	; 0x9000
   10de0:	ldr	pc, [ip, #2128]!	; 0x850

00010de4 <mcsync_mutex_clean@plt>:
   10de4:	add	ip, pc, #1048576	; 0x100000
   10de8:	add	ip, ip, #36864	; 0x9000
   10dec:	ldr	pc, [ip, #2120]!	; 0x848

00010df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   10df0:	add	ip, pc, #1048576	; 0x100000
   10df4:	add	ip, ip, #36864	; 0x9000
   10df8:	ldr	pc, [ip, #2112]!	; 0x840

00010dfc <myhtml_serialization_tree_callback@plt>:
   10dfc:	add	ip, pc, #1048576	; 0x100000
   10e00:	add	ip, ip, #36864	; 0x9000
   10e04:	ldr	pc, [ip, #2104]!	; 0x838

00010e08 <myhtml_stream_buffer_create@plt>:
   10e08:	add	ip, pc, #1048576	; 0x100000
   10e0c:	add	ip, ip, #36864	; 0x9000
   10e10:	ldr	pc, [ip, #2096]!	; 0x830

00010e14 <myhtml_tree_appropriate_place_inserting@plt>:
   10e14:	add	ip, pc, #1048576	; 0x100000
   10e18:	add	ip, ip, #36864	; 0x9000
   10e1c:	ldr	pc, [ip, #2088]!	; 0x828

00010e20 <myencoding_codepoint_to_ascii_utf_8@plt>:
   10e20:	add	ip, pc, #1048576	; 0x100000
   10e24:	add	ip, ip, #36864	; 0x9000
   10e28:	ldr	pc, [ip, #2080]!	; 0x820

00010e2c <myhtml_token_attr_remove_by_name@plt>:
   10e2c:	add	ip, pc, #1048576	; 0x100000
   10e30:	add	ip, ip, #36864	; 0x9000
   10e34:	ldr	pc, [ip, #2072]!	; 0x818

00010e38 <mycore_utils_mhash_rebuild_add_entry@plt>:
   10e38:	add	ip, pc, #1048576	; 0x100000
   10e3c:	add	ip, ip, #36864	; 0x9000
   10e40:	ldr	pc, [ip, #2064]!	; 0x810

00010e44 <myhtml_token_attr_by_name@plt>:
   10e44:	add	ip, pc, #1048576	; 0x100000
   10e48:	add	ip, ip, #36864	; 0x9000
   10e4c:	ldr	pc, [ip, #2056]!	; 0x808

00010e50 <mcsync_unlock@plt>:
   10e50:	add	ip, pc, #1048576	; 0x100000
   10e54:	add	ip, ip, #36864	; 0x9000
   10e58:	ldr	pc, [ip, #2048]!	; 0x800

00010e5c <myhtml_tree_token_list_append@plt>:
   10e5c:	add	ip, pc, #1048576	; 0x100000
   10e60:	add	ip, ip, #36864	; 0x9000
   10e64:	ldr	pc, [ip, #2040]!	; 0x7f8

00010e68 <mycore_utils_avl_tree_node_create_root@plt>:
   10e68:	add	ip, pc, #1048576	; 0x100000
   10e6c:	add	ip, ip, #36864	; 0x9000
   10e70:	ldr	pc, [ip, #2032]!	; 0x7f0

00010e74 <mythread_queue_list_entry_make_stream@plt>:
   10e74:	add	ip, pc, #1048576	; 0x100000
   10e78:	add	ip, ip, #36864	; 0x9000
   10e7c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010e80 <mycore_strncmp@plt>:
   10e80:	add	ip, pc, #1048576	; 0x100000
   10e84:	add	ip, ip, #36864	; 0x9000
   10e88:	ldr	pc, [ip, #2016]!	; 0x7e0

00010e8c <mycore_utils_mhash_create_entry@plt>:
   10e8c:	add	ip, pc, #1048576	; 0x100000
   10e90:	add	ip, ip, #36864	; 0x9000
   10e94:	ldr	pc, [ip, #2008]!	; 0x7d8

00010e98 <myhtml_tree_element_in_scope@plt>:
   10e98:	add	ip, pc, #1048576	; 0x100000
   10e9c:	add	ip, ip, #36864	; 0x9000
   10ea0:	ldr	pc, [ip, #2000]!	; 0x7d0

00010ea4 <myencoding_index_gb18030_ranges_code_point@plt>:
   10ea4:	add	ip, pc, #1048576	; 0x100000
   10ea8:	add	ip, ip, #36864	; 0x9000
   10eac:	ldr	pc, [ip, #1992]!	; 0x7c8

00010eb0 <__mtree_search_lowercase_to_start@plt>:
   10eb0:	add	ip, pc, #1048576	; 0x100000
   10eb4:	add	ip, ip, #36864	; 0x9000
   10eb8:	ldr	pc, [ip, #1984]!	; 0x7c0

00010ebc <fseek@plt>:
   10ebc:	add	ip, pc, #1048576	; 0x100000
   10ec0:	add	ip, ip, #36864	; 0x9000
   10ec4:	ldr	pc, [ip, #1976]!	; 0x7b8

00010ec8 <myhtml_node_clone@plt>:
   10ec8:	add	ip, pc, #1048576	; 0x100000
   10ecc:	add	ip, ip, #36864	; 0x9000
   10ed0:	ldr	pc, [ip, #1968]!	; 0x7b0

00010ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   10ed4:	add	ip, pc, #1048576	; 0x100000
   10ed8:	add	ip, ip, #36864	; 0x9000
   10edc:	ldr	pc, [ip, #1960]!	; 0x7a8

00010ee0 <myencoding_detect_russian@plt>:
   10ee0:	add	ip, pc, #1048576	; 0x100000
   10ee4:	add	ip, ip, #36864	; 0x9000
   10ee8:	ldr	pc, [ip, #1952]!	; 0x7a0

00010eec <pthread_attr_setdetachstate@plt>:
   10eec:	add	ip, pc, #1048576	; 0x100000
   10ef0:	add	ip, ip, #36864	; 0x9000
   10ef4:	ldr	pc, [ip, #1944]!	; 0x798

00010ef8 <mchar_async_cache_delete@plt>:
   10ef8:	add	ip, pc, #1048576	; 0x100000
   10efc:	add	ip, ip, #36864	; 0x9000
   10f00:	ldr	pc, [ip, #1936]!	; 0x790

00010f04 <mcobject_clean@plt>:
   10f04:	add	ip, pc, #1048576	; 0x100000
   10f08:	add	ip, ip, #36864	; 0x9000
   10f0c:	ldr	pc, [ip, #1928]!	; 0x788

00010f10 <myhtml_token_node_clean@plt>:
   10f10:	add	ip, pc, #1048576	; 0x100000
   10f14:	add	ip, ip, #36864	; 0x9000
   10f18:	ldr	pc, [ip, #1920]!	; 0x780

00010f1c <myhtml_token_delete@plt>:
   10f1c:	add	ip, pc, #1048576	; 0x100000
   10f20:	add	ip, ip, #36864	; 0x9000
   10f24:	ldr	pc, [ip, #1912]!	; 0x778

00010f28 <strncmp@plt>:
   10f28:	add	ip, pc, #1048576	; 0x100000
   10f2c:	add	ip, ip, #36864	; 0x9000
   10f30:	ldr	pc, [ip, #1904]!	; 0x770

00010f34 <mcsimple_get_by_absolute_position@plt>:
   10f34:	add	ip, pc, #1048576	; 0x100000
   10f38:	add	ip, ip, #36864	; 0x9000
   10f3c:	ldr	pc, [ip, #1896]!	; 0x768

00010f40 <mcsync_mutex_try_lock@plt>:
   10f40:	add	ip, pc, #1048576	; 0x100000
   10f44:	add	ip, ip, #36864	; 0x9000
   10f48:	ldr	pc, [ip, #1888]!	; 0x760

00010f4c <mycore_utils_avl_tree_node_height@plt>:
   10f4c:	add	ip, pc, #1048576	; 0x100000
   10f50:	add	ip, ip, #36864	; 0x9000
   10f54:	ldr	pc, [ip, #1880]!	; 0x758

00010f58 <mycore_utils_avl_tree_node_clean@plt>:
   10f58:	add	ip, pc, #1048576	; 0x100000
   10f5c:	add	ip, ip, #36864	; 0x9000
   10f60:	ldr	pc, [ip, #1872]!	; 0x750

00010f64 <myhtml_tree_clear_stack_back_table_context@plt>:
   10f64:	add	ip, pc, #1048576	; 0x100000
   10f68:	add	ip, ip, #36864	; 0x9000
   10f6c:	ldr	pc, [ip, #1864]!	; 0x748

00010f70 <myhtml_tree_node_clone@plt>:
   10f70:	add	ip, pc, #1048576	; 0x100000
   10f74:	add	ip, ip, #36864	; 0x9000
   10f78:	ldr	pc, [ip, #1856]!	; 0x740

00010f7c <myhtml_tree_token_list_clean@plt>:
   10f7c:	add	ip, pc, #1048576	; 0x100000
   10f80:	add	ip, ip, #36864	; 0x9000
   10f84:	ldr	pc, [ip, #1848]!	; 0x738

00010f88 <myhtml_parser_stream@plt>:
   10f88:	add	ip, pc, #1048576	; 0x100000
   10f8c:	add	ip, ip, #36864	; 0x9000
   10f90:	ldr	pc, [ip, #1840]!	; 0x730

00010f94 <myhtml_token_create@plt>:
   10f94:	add	ip, pc, #1048576	; 0x100000
   10f98:	add	ip, ip, #36864	; 0x9000
   10f9c:	ldr	pc, [ip, #1832]!	; 0x728

00010fa0 <myhtml_parser_token_data_to_string_lowercase@plt>:
   10fa0:	add	ip, pc, #1048576	; 0x100000
   10fa4:	add	ip, ip, #36864	; 0x9000
   10fa8:	ldr	pc, [ip, #1824]!	; 0x720

00010fac <myencoding_detect_utf_8@plt>:
   10fac:	add	ip, pc, #1048576	; 0x100000
   10fb0:	add	ip, ip, #36864	; 0x9000
   10fb4:	ldr	pc, [ip, #1816]!	; 0x718

00010fb8 <mcsync_spin_unlock@plt>:
   10fb8:	add	ip, pc, #1048576	; 0x100000
   10fbc:	add	ip, ip, #36864	; 0x9000
   10fc0:	ldr	pc, [ip, #1808]!	; 0x710

00010fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   10fc4:	add	ip, pc, #1048576	; 0x100000
   10fc8:	add	ip, ip, #36864	; 0x9000
   10fcc:	ldr	pc, [ip, #1800]!	; 0x708

00010fd0 <mcsync_mutex_lock@plt>:
   10fd0:	add	ip, pc, #1048576	; 0x100000
   10fd4:	add	ip, ip, #36864	; 0x9000
   10fd8:	ldr	pc, [ip, #1792]!	; 0x700

00010fdc <myhtml_tree_open_elements_find@plt>:
   10fdc:	add	ip, pc, #1048576	; 0x100000
   10fe0:	add	ip, ip, #36864	; 0x9000
   10fe4:	ldr	pc, [ip, #1784]!	; 0x6f8

00010fe8 <mcobject_async_clean@plt>:
   10fe8:	add	ip, pc, #1048576	; 0x100000
   10fec:	add	ip, ip, #36864	; 0x9000
   10ff0:	ldr	pc, [ip, #1776]!	; 0x6f0

00010ff4 <mchar_async_mem_malloc@plt>:
   10ff4:	add	ip, pc, #1048576	; 0x100000
   10ff8:	add	ip, ip, #36864	; 0x9000
   10ffc:	ldr	pc, [ip, #1768]!	; 0x6e8

00011000 <myhtml_data_process_string_append_char@plt>:
   11000:	add	ip, pc, #1048576	; 0x100000
   11004:	add	ip, ip, #36864	; 0x9000
   11008:	ldr	pc, [ip, #1760]!	; 0x6e0

0001100c <myhtml_tag_clean@plt>:
   1100c:	add	ip, pc, #1048576	; 0x100000
   11010:	add	ip, ip, #36864	; 0x9000
   11014:	ldr	pc, [ip, #1752]!	; 0x6d8

00011018 <mythread_thread_attr_destroy@plt>:
   11018:	add	ip, pc, #1048576	; 0x100000
   1101c:	add	ip, ip, #36864	; 0x9000
   11020:	ldr	pc, [ip, #1744]!	; 0x6d0

00011024 <mycore_string_clean_all@plt>:
   11024:	add	ip, pc, #1048576	; 0x100000
   11028:	add	ip, ip, #36864	; 0x9000
   1102c:	ldr	pc, [ip, #1736]!	; 0x6c8

00011030 <myhtml_tree_node_clean@plt>:
   11030:	add	ip, pc, #1048576	; 0x100000
   11034:	add	ip, ip, #36864	; 0x9000
   11038:	ldr	pc, [ip, #1728]!	; 0x6c0

0001103c <mythread_init@plt>:
   1103c:	add	ip, pc, #1048576	; 0x100000
   11040:	add	ip, ip, #36864	; 0x9000
   11044:	ldr	pc, [ip, #1720]!	; 0x6b8

Disassembly of section .text:

00011048 <mycore_incoming_buffer_add@@Base-0x124>:
   11048:	ldr	r3, [pc, #20]	; 11064 <mythread_init@plt+0x28>
   1104c:	ldr	r2, [pc, #20]	; 11068 <mythread_init@plt+0x2c>
   11050:	add	r3, pc, r3
   11054:	ldr	r2, [r3, r2]
   11058:	cmp	r2, #0
   1105c:	bxeq	lr
   11060:	b	10574 <__gmon_start__@plt>
   11064:	andseq	r8, r0, r8, lsr #31
   11068:	andeq	r0, r0, r0, ror r8
   1106c:	ldr	r0, [pc, #44]	; 110a0 <mythread_init@plt+0x64>
   11070:	ldr	r3, [pc, #44]	; 110a4 <mythread_init@plt+0x68>
   11074:	add	r0, pc, r0
   11078:	add	r3, pc, r3
   1107c:	cmp	r3, r0
   11080:	ldr	r3, [pc, #32]	; 110a8 <mythread_init@plt+0x6c>
   11084:	add	r3, pc, r3
   11088:	bxeq	lr
   1108c:	ldr	r2, [pc, #24]	; 110ac <mythread_init@plt+0x70>
   11090:	ldr	r3, [r3, r2]
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andseq	r9, r0, r0, asr r9
   110a4:	andseq	r9, r0, ip, asr #18
   110a8:	andseq	r8, r0, r4, ror pc
   110ac:	andeq	r0, r0, ip, lsr r7
   110b0:	ldr	r0, [pc, #56]	; 110f0 <mythread_init@plt+0xb4>
   110b4:	ldr	r3, [pc, #56]	; 110f4 <mythread_init@plt+0xb8>
   110b8:	add	r0, pc, r0
   110bc:	add	r3, pc, r3
   110c0:	sub	r1, r3, r0
   110c4:	ldr	r3, [pc, #44]	; 110f8 <mythread_init@plt+0xbc>
   110c8:	asr	r1, r1, #2
   110cc:	add	r3, pc, r3
   110d0:	add	r1, r1, r1, lsr #31
   110d4:	asrs	r1, r1, #1
   110d8:	bxeq	lr
   110dc:	ldr	r2, [pc, #24]	; 110fc <mythread_init@plt+0xc0>
   110e0:	ldr	r3, [r3, r2]
   110e4:	cmp	r3, #0
   110e8:	bxeq	lr
   110ec:	bx	r3
   110f0:	andseq	r9, r0, ip, lsl #18
   110f4:	andseq	r9, r0, r8, lsl #18
   110f8:	andseq	r8, r0, ip, lsr #30
   110fc:	andeq	r0, r0, r0, lsl #19
   11100:	ldr	r3, [pc, #76]	; 11154 <mythread_init@plt+0x118>
   11104:	ldr	r2, [pc, #76]	; 11158 <mythread_init@plt+0x11c>
   11108:	add	r3, pc, r3
   1110c:	add	r2, pc, r2
   11110:	ldrb	r3, [r3]
   11114:	cmp	r3, #0
   11118:	bxne	lr
   1111c:	ldr	r3, [pc, #56]	; 1115c <mythread_init@plt+0x120>
   11120:	push	{r4, lr}
   11124:	ldr	r3, [r2, r3]
   11128:	cmp	r3, #0
   1112c:	beq	1113c <mythread_init@plt+0x100>
   11130:	ldr	r3, [pc, #40]	; 11160 <mythread_init@plt+0x124>
   11134:	ldr	r0, [pc, r3]
   11138:	bl	fce0 <__cxa_finalize@plt>
   1113c:	bl	1106c <mythread_init@plt+0x30>
   11140:	ldr	r3, [pc, #28]	; 11164 <mythread_init@plt+0x128>
   11144:	mov	r2, #1
   11148:	add	r3, pc, r3
   1114c:	strb	r2, [r3]
   11150:	pop	{r4, pc}
   11154:			; <UNDEFINED> instruction: 0x001098bc
   11158:	andseq	r8, r0, ip, ror #29
   1115c:	andeq	r0, r0, r8, lsr #14
   11160:	andseq	r9, r0, ip, lsl #17
   11164:	andseq	r9, r0, ip, ror r8
   11168:	b	110b0 <mythread_init@plt+0x74>

0001116c <mycore_incoming_buffer_add@@Base>:
   1116c:	strd	r4, [sp, #-16]!
   11170:	str	r6, [sp, #8]
   11174:	str	lr, [sp, #12]
   11178:	mov	r4, r0
   1117c:	mov	r0, r1
   11180:	mov	r5, r2
   11184:	mov	r6, r3
   11188:	mov	r1, #0
   1118c:	bl	109f4 <mcobject_malloc@plt>
   11190:	str	r6, [r0, #8]
   11194:	mov	r3, #0
   11198:	str	r3, [r0, #4]
   1119c:	str	r5, [r0]
   111a0:	cmp	r4, r3
   111a4:	beq	111d8 <mycore_incoming_buffer_add@@Base+0x6c>
   111a8:	ldr	r3, [r4, #12]
   111ac:	ldr	r2, [r4, #8]
   111b0:	add	r3, r3, r2
   111b4:	str	r3, [r0, #12]
   111b8:	str	r0, [r4, #20]
   111bc:	str	r4, [r0, #16]
   111c0:	mov	r3, #0
   111c4:	str	r3, [r0, #20]
   111c8:	ldrd	r4, [sp]
   111cc:	ldr	r6, [sp, #8]
   111d0:	add	sp, sp, #12
   111d4:	pop	{pc}		; (ldr pc, [sp], #4)
   111d8:	mov	r3, #0
   111dc:	str	r3, [r0, #12]
   111e0:	b	111bc <mycore_incoming_buffer_add@@Base+0x50>

000111e4 <mycore_incoming_buffer_clean@@Base>:
   111e4:	mov	r3, #0
   111e8:	str	r3, [r0]
   111ec:	str	r3, [r0, #4]
   111f0:	str	r3, [r0, #8]
   111f4:	str	r3, [r0, #12]
   111f8:	str	r3, [r0, #16]
   111fc:	str	r3, [r0, #20]
   11200:	bx	lr

00011204 <mycore_incoming_buffer_split@@Base>:
   11204:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11208:	strd	r6, [sp, #8]
   1120c:	str	r8, [sp, #16]
   11210:	str	lr, [sp, #20]
   11214:	mov	r4, r0
   11218:	mov	r0, r1
   1121c:	mov	r7, r2
   11220:	ldr	r5, [r4, #12]
   11224:	sub	r6, r2, r5
   11228:	mov	r1, #0
   1122c:	bl	109f4 <mcobject_malloc@plt>
   11230:	ldr	r2, [r4, #8]
   11234:	add	r5, r5, r2
   11238:	sub	r5, r5, r7
   1123c:	str	r5, [r0, #8]
   11240:	str	r5, [r0, #4]
   11244:	ldr	r2, [r4]
   11248:	add	r2, r2, r6
   1124c:	str	r2, [r0]
   11250:	ldr	r2, [r4, #12]
   11254:	add	r2, r2, r6
   11258:	str	r2, [r0, #12]
   1125c:	mov	r2, #0
   11260:	str	r2, [r0, #20]
   11264:	str	r4, [r0, #16]
   11268:	str	r0, [r4, #20]
   1126c:	str	r6, [r4, #8]
   11270:	str	r6, [r4, #4]
   11274:	ldrd	r4, [sp]
   11278:	ldrd	r6, [sp, #8]
   1127c:	ldr	r8, [sp, #16]
   11280:	add	sp, sp, #20
   11284:	pop	{pc}		; (ldr pc, [sp], #4)

00011288 <mycore_incoming_buffer_find_by_position@@Base>:
   11288:	ldr	r3, [r0, #12]
   1128c:	cmp	r3, r1
   11290:	bcc	112b8 <mycore_incoming_buffer_find_by_position@@Base+0x30>
   11294:	bls	112b4 <mycore_incoming_buffer_find_by_position@@Base+0x2c>
   11298:	ldr	r0, [r0, #16]
   1129c:	cmp	r0, #0
   112a0:	beq	112b0 <mycore_incoming_buffer_find_by_position@@Base+0x28>
   112a4:	ldr	r3, [r0, #12]
   112a8:	cmp	r3, r1
   112ac:	bhi	11298 <mycore_incoming_buffer_find_by_position@@Base+0x10>
   112b0:	bx	lr
   112b4:	bx	lr
   112b8:	ldr	r2, [r0, #8]
   112bc:	add	r3, r3, r2
   112c0:	cmp	r1, r3
   112c4:	bls	112b0 <mycore_incoming_buffer_find_by_position@@Base+0x28>
   112c8:	ldr	r0, [r0, #20]
   112cc:	cmp	r0, #0
   112d0:	beq	112b0 <mycore_incoming_buffer_find_by_position@@Base+0x28>
   112d4:	ldr	r3, [r0, #12]
   112d8:	ldr	r2, [r0, #8]
   112dc:	add	r3, r3, r2
   112e0:	cmp	r3, r1
   112e4:	bcc	112c8 <mycore_incoming_buffer_find_by_position@@Base+0x40>
   112e8:	bx	lr

000112ec <mycore_incoming_buffer_data@@Base>:
   112ec:	ldr	r0, [r0]
   112f0:	bx	lr

000112f4 <mycore_incoming_buffer_length@@Base>:
   112f4:	ldr	r0, [r0, #4]
   112f8:	bx	lr

000112fc <mycore_incoming_buffer_size@@Base>:
   112fc:	ldr	r0, [r0, #8]
   11300:	bx	lr

00011304 <mycore_incoming_buffer_offset@@Base>:
   11304:	ldr	r0, [r0, #12]
   11308:	bx	lr

0001130c <mycore_incoming_buffer_relative_begin@@Base>:
   1130c:	ldr	r0, [r0, #12]
   11310:	sub	r0, r1, r0
   11314:	bx	lr

00011318 <mycore_incoming_buffer_available_length@@Base>:
   11318:	ldr	r3, [r0, #8]
   1131c:	add	r0, r1, r2
   11320:	cmp	r0, r3
   11324:	subhi	r2, r3, r1
   11328:	mov	r0, r2
   1132c:	bx	lr

00011330 <mycore_incoming_buffer_next@@Base>:
   11330:	ldr	r0, [r0, #20]
   11334:	bx	lr

00011338 <mycore_incoming_buffer_prev@@Base>:
   11338:	ldr	r0, [r0, #16]
   1133c:	bx	lr

00011340 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   11340:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11344:	strd	r6, [sp, #8]
   11348:	strd	r8, [sp, #16]
   1134c:	str	sl, [sp, #24]
   11350:	str	lr, [sp, #28]
   11354:	mov	r8, r0
   11358:	ldr	lr, [r0]
   1135c:	ldr	r2, [r1]
   11360:	ldr	r3, [lr, #8]
   11364:	cmp	r2, r3
   11368:	bcc	11378 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x38>
   1136c:	mov	r3, #0
   11370:	str	r3, [r1]
   11374:	ldr	lr, [lr, #20]
   11378:	ldr	r5, [lr]
   1137c:	ldr	r3, [r1]
   11380:	ldrb	r2, [r5, r3]
   11384:	ldr	r0, [pc, #180]	; 11440 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x100>
   11388:	add	r0, pc, r0
   1138c:	ldrb	r0, [r0, r2]
   11390:	cmp	r0, #255	; 0xff
   11394:	moveq	r0, #0
   11398:	beq	11424 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xe4>
   1139c:	mov	r0, #0
   113a0:	mov	r4, r0
   113a4:	ldr	r6, [pc, #152]	; 11444 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x104>
   113a8:	add	r6, pc, r6
   113ac:	mov	r9, r0
   113b0:	ldr	r7, [pc, #144]	; 11448 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x108>
   113b4:	add	r7, pc, r7
   113b8:	b	113e0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xa0>
   113bc:	ldr	r3, [r1]
   113c0:	ldrb	r2, [r5, r3]
   113c4:	ldrb	sl, [r7, r2]
   113c8:	subs	ip, sl, #255	; 0xff
   113cc:	movne	ip, #1
   113d0:	cmp	r4, #5
   113d4:	movhi	ip, #0
   113d8:	cmp	ip, #0
   113dc:	beq	11424 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xe4>
   113e0:	add	r2, r6, r2
   113e4:	ldrb	r2, [r2, #256]	; 0x100
   113e8:	orr	r0, r2, r0, lsl #4
   113ec:	add	r4, r4, #1
   113f0:	add	r3, r3, #1
   113f4:	str	r3, [r1]
   113f8:	ldr	r2, [lr, #8]
   113fc:	cmp	r3, r2
   11400:	bcc	113bc <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x7c>
   11404:	ldr	r3, [lr, #20]
   11408:	cmp	r3, #0
   1140c:	beq	11424 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xe4>
   11410:	str	r9, [r1]
   11414:	ldr	r5, [lr]
   11418:	ldr	lr, [lr, #20]
   1141c:	cmp	lr, #0
   11420:	bne	113bc <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x7c>
   11424:	str	lr, [r8]
   11428:	ldrd	r4, [sp]
   1142c:	ldrd	r6, [sp, #8]
   11430:	ldrd	r8, [sp, #16]
   11434:	ldr	sl, [sp, #24]
   11438:	add	sp, sp, #28
   1143c:	pop	{pc}		; (ldr pc, [sp], #4)
   11440:	strdeq	r1, [r2], -r8
   11444:	ldrdeq	r1, [r2], -r8
   11448:	andeq	r1, r2, ip, asr #13

0001144c <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   1144c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11450:	strd	r6, [sp, #8]
   11454:	strd	r8, [sp, #16]
   11458:	strd	sl, [sp, #24]
   1145c:	str	lr, [sp, #32]
   11460:	sub	sp, sp, #12
   11464:	ldr	ip, [r0]
   11468:	str	ip, [sp, #4]
   1146c:	ldr	r4, [r3]
   11470:	ldr	lr, [ip, #8]
   11474:	cmp	r4, lr
   11478:	bcc	1149c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x50>
   1147c:	ldr	lr, [ip, #20]
   11480:	cmp	lr, #0
   11484:	moveq	r0, r2
   11488:	beq	115a0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x154>
   1148c:	mov	lr, #0
   11490:	str	lr, [r3]
   11494:	ldr	ip, [ip, #20]
   11498:	str	ip, [sp, #4]
   1149c:	mov	r5, r3
   114a0:	mov	r7, r2
   114a4:	mov	r8, r1
   114a8:	mov	sl, r0
   114ac:	ldr	r3, [sp, #4]
   114b0:	ldr	r0, [r3]
   114b4:	cmp	r2, #0
   114b8:	beq	11590 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x144>
   114bc:	mov	r4, #0
   114c0:	ldr	r6, [pc, #244]	; 115bc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x170>
   114c4:	add	r6, pc, r6
   114c8:	add	fp, sp, #4
   114cc:	ldr	r9, [pc, #236]	; 115c0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x174>
   114d0:	add	r9, pc, r9
   114d4:	b	11524 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xd8>
   114d8:	add	r3, r3, #1
   114dc:	str	r3, [r5]
   114e0:	mov	r1, r5
   114e4:	mov	r0, fp
   114e8:	bl	10190 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   114ec:	cmp	r0, #255	; 0xff
   114f0:	bhi	11594 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x148>
   114f4:	add	r0, r9, r0
   114f8:	ldrb	r3, [r8, r4]
   114fc:	add	r3, r9, r3
   11500:	ldrb	r2, [r0, #512]	; 0x200
   11504:	ldrb	r3, [r3, #512]	; 0x200
   11508:	cmp	r2, r3
   1150c:	bne	11594 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x148>
   11510:	ldr	r3, [sp, #4]
   11514:	ldr	r0, [r3]
   11518:	b	11558 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x10c>
   1151c:	cmp	r7, r4
   11520:	beq	11594 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x148>
   11524:	ldr	r3, [r5]
   11528:	ldrb	r2, [r0, r3]
   1152c:	cmp	r2, #92	; 0x5c
   11530:	beq	114d8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x8c>
   11534:	add	r2, r6, r2
   11538:	ldrb	r1, [r8, r4]
   1153c:	add	r1, r6, r1
   11540:	ldrb	ip, [r2, #512]	; 0x200
   11544:	ldrb	r2, [r1, #512]	; 0x200
   11548:	cmp	ip, r2
   1154c:	bne	11594 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x148>
   11550:	add	r3, r3, #1
   11554:	str	r3, [r5]
   11558:	add	r4, r4, #1
   1155c:	ldr	r3, [sp, #4]
   11560:	ldr	r1, [r5]
   11564:	ldr	r2, [r3, #8]
   11568:	cmp	r1, r2
   1156c:	bcc	1151c <mycore_incoming_buffer_escaped_case_cmp@@Base+0xd0>
   11570:	ldr	r3, [r3, #20]
   11574:	cmp	r3, #0
   11578:	beq	11594 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x148>
   1157c:	str	r3, [sp, #4]
   11580:	ldr	r0, [r3]
   11584:	mov	r3, #0
   11588:	str	r3, [r5]
   1158c:	b	1151c <mycore_incoming_buffer_escaped_case_cmp@@Base+0xd0>
   11590:	mov	r4, r2
   11594:	ldr	r3, [sp, #4]
   11598:	str	r3, [sl]
   1159c:	sub	r0, r7, r4
   115a0:	add	sp, sp, #12
   115a4:	ldrd	r4, [sp]
   115a8:	ldrd	r6, [sp, #8]
   115ac:	ldrd	r8, [sp, #16]
   115b0:	ldrd	sl, [sp, #24]
   115b4:	add	sp, sp, #32
   115b8:	pop	{pc}		; (ldr pc, [sp], #4)
   115bc:			; <UNDEFINED> instruction: 0x000215bc
   115c0:			; <UNDEFINED> instruction: 0x000215b0

000115c4 <mycore_string_clean@@Base>:
   115c4:	mov	r3, #0
   115c8:	str	r3, [r0, #8]
   115cc:	bx	lr

000115d0 <mycore_string_init@@Base>:
   115d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   115d4:	strd	r6, [sp, #8]
   115d8:	str	r8, [sp, #16]
   115dc:	str	lr, [sp, #20]
   115e0:	mov	r6, r0
   115e4:	mov	r7, r1
   115e8:	mov	r4, r2
   115ec:	mov	r5, r3
   115f0:	mov	r2, r3
   115f4:	bl	108a4 <mchar_async_malloc@plt>
   115f8:	str	r0, [r4]
   115fc:	str	r5, [r4, #4]
   11600:	str	r7, [r4, #16]
   11604:	str	r6, [r4, #12]
   11608:	mov	r0, r4
   1160c:	bl	10cac <mycore_string_clean@plt>
   11610:	ldr	r0, [r4]
   11614:	ldrd	r4, [sp]
   11618:	ldrd	r6, [sp, #8]
   1161c:	ldr	r8, [sp, #16]
   11620:	add	sp, sp, #20
   11624:	pop	{pc}		; (ldr pc, [sp], #4)

00011628 <mycore_string_clean_all@@Base>:
   11628:	mov	r3, #0
   1162c:	str	r3, [r0]
   11630:	str	r3, [r0, #4]
   11634:	str	r3, [r0, #8]
   11638:	str	r3, [r0, #12]
   1163c:	str	r3, [r0, #16]
   11640:	bx	lr

00011644 <mycore_string_destroy@@Base>:
   11644:	strd	r4, [sp, #-16]!
   11648:	str	r6, [sp, #8]
   1164c:	str	lr, [sp, #12]
   11650:	subs	r4, r0, #0
   11654:	beq	11684 <mycore_string_destroy@@Base+0x40>
   11658:	mov	r5, r1
   1165c:	ldr	r2, [r4]
   11660:	cmp	r2, #0
   11664:	beq	1167c <mycore_string_destroy@@Base+0x38>
   11668:	ldr	r0, [r4, #12]
   1166c:	cmp	r0, #0
   11670:	beq	1167c <mycore_string_destroy@@Base+0x38>
   11674:	ldr	r1, [r4, #16]
   11678:	bl	106ac <mchar_async_free@plt>
   1167c:	cmp	r5, #0
   11680:	bne	11698 <mycore_string_destroy@@Base+0x54>
   11684:	mov	r0, r4
   11688:	ldrd	r4, [sp]
   1168c:	ldr	r6, [sp, #8]
   11690:	add	sp, sp, #12
   11694:	pop	{pc}		; (ldr pc, [sp], #4)
   11698:	mov	r0, r4
   1169c:	bl	10d60 <mycore_free@plt>
   116a0:	mov	r4, #0
   116a4:	b	11684 <mycore_string_destroy@@Base+0x40>

000116a8 <mycore_string_raw_clean@@Base>:
   116a8:	mov	r3, #0
   116ac:	str	r3, [r0, #8]
   116b0:	bx	lr

000116b4 <mycore_string_raw_clean_all@@Base>:
   116b4:	mov	r3, #0
   116b8:	str	r3, [r0]
   116bc:	str	r3, [r0, #4]
   116c0:	str	r3, [r0, #8]
   116c4:	bx	lr

000116c8 <mycore_string_raw_destroy@@Base>:
   116c8:	strd	r4, [sp, #-16]!
   116cc:	str	r6, [sp, #8]
   116d0:	str	lr, [sp, #12]
   116d4:	subs	r4, r0, #0
   116d8:	beq	11700 <mycore_string_raw_destroy@@Base+0x38>
   116dc:	mov	r5, r1
   116e0:	ldr	r0, [r4]
   116e4:	cmp	r0, #0
   116e8:	beq	116f8 <mycore_string_raw_destroy@@Base+0x30>
   116ec:	bl	10d60 <mycore_free@plt>
   116f0:	mov	r3, #0
   116f4:	str	r3, [r4]
   116f8:	cmp	r5, #0
   116fc:	bne	11714 <mycore_string_raw_destroy@@Base+0x4c>
   11700:	mov	r0, r4
   11704:	ldrd	r4, [sp]
   11708:	ldr	r6, [sp, #8]
   1170c:	add	sp, sp, #12
   11710:	pop	{pc}		; (ldr pc, [sp], #4)
   11714:	mov	r0, r4
   11718:	bl	10d60 <mycore_free@plt>
   1171c:	mov	r4, #0
   11720:	b	11700 <mycore_string_raw_destroy@@Base+0x38>

00011724 <mycore_string_realloc@@Base>:
   11724:	strd	r4, [sp, #-12]!
   11728:	str	lr, [sp, #8]
   1172c:	sub	sp, sp, #12
   11730:	subs	r4, r0, #0
   11734:	moveq	r0, r4
   11738:	beq	11764 <mycore_string_realloc@@Base+0x40>
   1173c:	mov	r5, r1
   11740:	str	r1, [sp]
   11744:	ldr	r3, [r4, #8]
   11748:	ldr	r2, [r4]
   1174c:	ldr	r1, [r4, #16]
   11750:	ldr	r0, [r4, #12]
   11754:	bl	ff5c <mchar_async_realloc@plt>
   11758:	cmp	r0, #0
   1175c:	strne	r5, [r4, #4]
   11760:	strne	r0, [r4]
   11764:	add	sp, sp, #12
   11768:	ldrd	r4, [sp]
   1176c:	add	sp, sp, #8
   11770:	pop	{pc}		; (ldr pc, [sp], #4)

00011774 <mycore_string_data_alloc@@Base>:
   11774:	str	r4, [sp, #-8]!
   11778:	str	lr, [sp, #4]
   1177c:	bl	108a4 <mchar_async_malloc@plt>
   11780:	ldr	r4, [sp]
   11784:	add	sp, sp, #4
   11788:	pop	{pc}		; (ldr pc, [sp], #4)

0001178c <mycore_string_data_realloc@@Base>:
   1178c:	push	{lr}		; (str lr, [sp, #-4]!)
   11790:	sub	sp, sp, #12
   11794:	ldr	ip, [sp, #16]
   11798:	str	ip, [sp]
   1179c:	bl	ff5c <mchar_async_realloc@plt>
   117a0:	add	sp, sp, #12
   117a4:	pop	{pc}		; (ldr pc, [sp], #4)

000117a8 <mycore_string_data_free@@Base>:
   117a8:	str	r4, [sp, #-8]!
   117ac:	str	lr, [sp, #4]
   117b0:	bl	106ac <mchar_async_free@plt>
   117b4:	ldr	r4, [sp]
   117b8:	add	sp, sp, #4
   117bc:	pop	{pc}		; (ldr pc, [sp], #4)

000117c0 <mycore_string_data@@Base>:
   117c0:	cmp	r0, #0
   117c4:	ldrne	r0, [r0]
   117c8:	bx	lr

000117cc <mycore_string_length@@Base>:
   117cc:	cmp	r0, #0
   117d0:	ldrne	r0, [r0, #8]
   117d4:	moveq	r0, #0
   117d8:	bx	lr

000117dc <mycore_string_size@@Base>:
   117dc:	cmp	r0, #0
   117e0:	ldrne	r0, [r0, #4]
   117e4:	moveq	r0, #0
   117e8:	bx	lr

000117ec <mycore_string_data_set@@Base>:
   117ec:	cmp	r0, #0
   117f0:	strne	r1, [r0]
   117f4:	movne	r0, r1
   117f8:	bx	lr

000117fc <mycore_string_size_set@@Base>:
   117fc:	cmp	r0, #0
   11800:	strne	r1, [r0, #4]
   11804:	movne	r0, r1
   11808:	moveq	r0, #0
   1180c:	bx	lr

00011810 <mycore_string_length_set@@Base>:
   11810:	cmp	r0, #0
   11814:	strne	r1, [r0, #8]
   11818:	movne	r0, r1
   1181c:	moveq	r0, #0
   11820:	bx	lr

00011824 <mycore_string_append@@Base>:
   11824:	strd	r4, [sp, #-16]!
   11828:	str	r6, [sp, #8]
   1182c:	str	lr, [sp, #12]
   11830:	mov	r4, r0
   11834:	mov	r6, r1
   11838:	mov	r5, r2
   1183c:	add	r1, r2, #1
   11840:	ldr	r3, [r0, #8]
   11844:	add	r1, r1, r3
   11848:	ldr	r3, [r0, #4]
   1184c:	cmp	r1, r3
   11850:	bcs	11894 <mycore_string_append@@Base+0x70>
   11854:	ldr	r0, [r4]
   11858:	ldr	r3, [r4, #8]
   1185c:	mov	r2, r5
   11860:	mov	r1, r6
   11864:	add	r0, r0, r3
   11868:	bl	fefc <memcpy@plt>
   1186c:	ldr	r3, [r4, #8]
   11870:	add	r5, r5, r3
   11874:	str	r5, [r4, #8]
   11878:	ldr	r3, [r4]
   1187c:	mov	r2, #0
   11880:	strb	r2, [r3, r5]
   11884:	ldrd	r4, [sp]
   11888:	ldr	r6, [sp, #8]
   1188c:	add	sp, sp, #12
   11890:	pop	{pc}		; (ldr pc, [sp], #4)
   11894:	bl	108f8 <mycore_string_realloc@plt>
   11898:	b	11854 <mycore_string_append@@Base+0x30>

0001189c <mycore_string_append_one@@Base>:
   1189c:	strd	r4, [sp, #-16]!
   118a0:	str	r6, [sp, #8]
   118a4:	str	lr, [sp, #12]
   118a8:	mov	r4, r0
   118ac:	mov	r5, r1
   118b0:	ldr	r1, [r0, #8]
   118b4:	add	r2, r1, #2
   118b8:	ldr	r3, [r0, #4]
   118bc:	cmp	r2, r3
   118c0:	bcs	118f8 <mycore_string_append_one@@Base+0x5c>
   118c4:	ldr	r2, [r4]
   118c8:	ldr	r3, [r4, #8]
   118cc:	strb	r5, [r2, r3]
   118d0:	ldr	r3, [r4, #8]
   118d4:	add	r3, r3, #1
   118d8:	str	r3, [r4, #8]
   118dc:	ldr	r2, [r4]
   118e0:	mov	r1, #0
   118e4:	strb	r1, [r2, r3]
   118e8:	ldrd	r4, [sp]
   118ec:	ldr	r6, [sp, #8]
   118f0:	add	sp, sp, #12
   118f4:	pop	{pc}		; (ldr pc, [sp], #4)
   118f8:	add	r1, r1, #3
   118fc:	bl	108f8 <mycore_string_realloc@plt>
   11900:	b	118c4 <mycore_string_append_one@@Base+0x28>

00011904 <mycore_string_append_lowercase@@Base>:
   11904:	strd	r4, [sp, #-16]!
   11908:	str	r6, [sp, #8]
   1190c:	str	lr, [sp, #12]
   11910:	mov	r5, r0
   11914:	mov	r4, r1
   11918:	mov	r6, r2
   1191c:	add	r1, r2, #1
   11920:	ldr	r3, [r0, #8]
   11924:	add	r1, r1, r3
   11928:	ldr	r3, [r0, #4]
   1192c:	cmp	r1, r3
   11930:	bcs	1199c <mycore_string_append_lowercase@@Base+0x98>
   11934:	ldr	lr, [r5]
   11938:	ldr	r3, [r5, #8]
   1193c:	add	lr, lr, r3
   11940:	cmp	r6, #0
   11944:	beq	119a4 <mycore_string_append_lowercase@@Base+0xa0>
   11948:	sub	r3, r4, #1
   1194c:	sub	r2, lr, #1
   11950:	add	r1, r4, r6
   11954:	sub	r1, r1, #1
   11958:	ldr	ip, [pc, #76]	; 119ac <mycore_string_append_lowercase@@Base+0xa8>
   1195c:	add	ip, pc, ip
   11960:	ldrb	r0, [r3, #1]!
   11964:	ldrb	r0, [ip, r0]
   11968:	strb	r0, [r2, #1]!
   1196c:	cmp	r3, r1
   11970:	bne	11960 <mycore_string_append_lowercase@@Base+0x5c>
   11974:	mov	r2, r6
   11978:	mov	r3, #0
   1197c:	strb	r3, [lr, r2]
   11980:	ldr	r3, [r5, #8]
   11984:	add	r6, r3, r6
   11988:	str	r6, [r5, #8]
   1198c:	ldrd	r4, [sp]
   11990:	ldr	r6, [sp, #8]
   11994:	add	sp, sp, #12
   11998:	pop	{pc}		; (ldr pc, [sp], #4)
   1199c:	bl	108f8 <mycore_string_realloc@plt>
   119a0:	b	11934 <mycore_string_append_lowercase@@Base+0x30>
   119a4:	mov	r2, r6
   119a8:	b	11978 <mycore_string_append_lowercase@@Base+0x74>
   119ac:	andeq	r1, r2, r4, lsr #8

000119b0 <mycore_string_copy@@Base>:
   119b0:	str	r4, [sp, #-8]!
   119b4:	str	lr, [sp, #4]
   119b8:	ldr	r2, [r1, #8]
   119bc:	ldr	r1, [r1]
   119c0:	bl	10868 <mycore_string_append@plt>
   119c4:	ldr	r4, [sp]
   119c8:	add	sp, sp, #4
   119cc:	pop	{pc}		; (ldr pc, [sp], #4)

000119d0 <mycore_string_raw_copy@@Base>:
   119d0:	add	r3, r0, r2
   119d4:	mov	ip, #0
   119d8:	strb	ip, [r0, r2]
   119dc:	cmp	r2, ip
   119e0:	beq	119f8 <mycore_string_raw_copy@@Base+0x28>
   119e4:	add	r2, r1, r2
   119e8:	ldrb	r0, [r2, #-1]!
   119ec:	strb	r0, [r3, #-1]!
   119f0:	cmp	r2, r1
   119f4:	bne	119e8 <mycore_string_raw_copy@@Base+0x18>
   119f8:	mov	r0, #0
   119fc:	bx	lr

00011a00 <mycore_string_raw_set_replacement_character@@Base>:
   11a00:	ldr	r3, [r0]
   11a04:	mvn	r2, #16
   11a08:	strb	r2, [r3, r1]
   11a0c:	ldr	r3, [r0]
   11a10:	add	r3, r3, r1
   11a14:	mvn	r2, #64	; 0x40
   11a18:	strb	r2, [r3, #1]
   11a1c:	ldr	r3, [r0]
   11a20:	add	r3, r3, r1
   11a24:	mvn	r2, #66	; 0x42
   11a28:	strb	r2, [r3, #2]
   11a2c:	mov	r0, #3
   11a30:	bx	lr

00011a34 <mycore_string_append_with_replacement_null_characters@@Base>:
   11a34:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11a38:	strd	r6, [sp, #8]
   11a3c:	strd	r8, [sp, #16]
   11a40:	str	sl, [sp, #24]
   11a44:	str	lr, [sp, #28]
   11a48:	mov	r4, r0
   11a4c:	mov	r6, r1
   11a50:	mov	r7, r2
   11a54:	add	r1, r2, #1
   11a58:	ldr	r3, [r0, #8]
   11a5c:	add	r1, r1, r3
   11a60:	ldr	r3, [r0, #4]
   11a64:	cmp	r1, r3
   11a68:	bcs	11a94 <mycore_string_append_with_replacement_null_characters@@Base+0x60>
   11a6c:	ldr	r0, [r4]
   11a70:	cmp	r7, #0
   11a74:	beq	11b04 <mycore_string_append_with_replacement_null_characters@@Base+0xd0>
   11a78:	sub	r5, r6, #1
   11a7c:	add	r6, r6, r7
   11a80:	sub	r6, r6, #1
   11a84:	mvn	r9, #16
   11a88:	mvn	r8, #64	; 0x40
   11a8c:	mvn	r7, #66	; 0x42
   11a90:	b	11aec <mycore_string_append_with_replacement_null_characters@@Base+0xb8>
   11a94:	bl	108f8 <mycore_string_realloc@plt>
   11a98:	b	11a6c <mycore_string_append_with_replacement_null_characters@@Base+0x38>
   11a9c:	ldr	r1, [r4, #4]
   11aa0:	add	r1, r1, #5
   11aa4:	mov	r0, r4
   11aa8:	bl	108f8 <mycore_string_realloc@plt>
   11aac:	ldr	r0, [r4]
   11ab0:	ldr	r3, [r4, #8]
   11ab4:	strb	r9, [r0, r3]
   11ab8:	ldr	r3, [r4, #8]
   11abc:	add	r3, r3, #1
   11ac0:	str	r3, [r4, #8]
   11ac4:	strb	r8, [r0, r3]
   11ac8:	ldr	r3, [r4, #8]
   11acc:	add	r3, r3, #1
   11ad0:	str	r3, [r4, #8]
   11ad4:	strb	r7, [r0, r3]
   11ad8:	ldr	r3, [r4, #8]
   11adc:	add	r3, r3, #1
   11ae0:	str	r3, [r4, #8]
   11ae4:	cmp	r5, r6
   11ae8:	beq	11b04 <mycore_string_append_with_replacement_null_characters@@Base+0xd0>
   11aec:	ldrb	r3, [r5, #1]!
   11af0:	cmp	r3, #0
   11af4:	beq	11a9c <mycore_string_append_with_replacement_null_characters@@Base+0x68>
   11af8:	ldr	r2, [r4, #8]
   11afc:	strb	r3, [r0, r2]
   11b00:	b	11ad8 <mycore_string_append_with_replacement_null_characters@@Base+0xa4>
   11b04:	ldr	r2, [r4]
   11b08:	ldr	r3, [r4, #8]
   11b0c:	mov	r1, #0
   11b10:	strb	r1, [r2, r3]
   11b14:	ldrd	r4, [sp]
   11b18:	ldrd	r6, [sp, #8]
   11b1c:	ldrd	r8, [sp, #16]
   11b20:	ldr	sl, [sp, #24]
   11b24:	add	sp, sp, #28
   11b28:	pop	{pc}		; (ldr pc, [sp], #4)

00011b2c <mycore_string_stay_only_whitespace@@Base>:
   11b2c:	strd	r4, [sp, #-12]!
   11b30:	str	lr, [sp, #8]
   11b34:	ldr	r4, [r0]
   11b38:	ldr	lr, [r0, #8]
   11b3c:	cmp	lr, #0
   11b40:	beq	11ba0 <mycore_string_stay_only_whitespace@@Base+0x74>
   11b44:	sub	r2, r4, #1
   11b48:	mov	lr, #0
   11b4c:	add	r5, r2, #1
   11b50:	ldrb	r1, [r2, #1]
   11b54:	sub	r3, r1, #9
   11b58:	uxtb	r3, r3
   11b5c:	sub	ip, r1, #12
   11b60:	uxtb	ip, ip
   11b64:	cmp	ip, #1
   11b68:	cmphi	r3, #1
   11b6c:	movls	r3, #1
   11b70:	movhi	r3, #0
   11b74:	cmp	r1, #32
   11b78:	orreq	r3, r3, #1
   11b7c:	cmp	r3, #0
   11b80:	strbne	r1, [r4, lr]
   11b84:	addne	lr, lr, #1
   11b88:	add	r2, r2, #2
   11b8c:	sub	r3, r2, r4
   11b90:	mov	r2, r5
   11b94:	ldr	r1, [r0, #8]
   11b98:	cmp	r1, r3
   11b9c:	bhi	11b4c <mycore_string_stay_only_whitespace@@Base+0x20>
   11ba0:	str	lr, [r0, #8]
   11ba4:	ldrd	r4, [sp]
   11ba8:	add	sp, sp, #8
   11bac:	pop	{pc}		; (ldr pc, [sp], #4)

00011bb0 <mycore_string_crop_whitespace_from_begin@@Base>:
   11bb0:	strd	r4, [sp, #-16]!
   11bb4:	str	r6, [sp, #8]
   11bb8:	str	lr, [sp, #12]
   11bbc:	mov	r5, r0
   11bc0:	ldr	r0, [r0]
   11bc4:	ldr	r4, [r5, #8]
   11bc8:	cmp	r4, #0
   11bcc:	beq	11c64 <mycore_string_crop_whitespace_from_begin@@Base+0xb4>
   11bd0:	ldrb	r2, [r0]
   11bd4:	sub	r3, r2, #9
   11bd8:	uxtb	r3, r3
   11bdc:	sub	r1, r2, #12
   11be0:	uxtb	r1, r1
   11be4:	cmp	r3, #1
   11be8:	cmphi	r1, #1
   11bec:	movhi	r3, #1
   11bf0:	movls	r3, #0
   11bf4:	cmp	r2, #32
   11bf8:	moveq	r3, #0
   11bfc:	andne	r3, r3, #1
   11c00:	cmp	r3, #0
   11c04:	bne	11c94 <mycore_string_crop_whitespace_from_begin@@Base+0xe4>
   11c08:	sub	r4, r4, #1
   11c0c:	add	lr, r4, r0
   11c10:	mov	r2, r0
   11c14:	rsb	r6, r0, #1
   11c18:	add	r4, r6, r2
   11c1c:	cmp	r2, lr
   11c20:	beq	11c5c <mycore_string_crop_whitespace_from_begin@@Base+0xac>
   11c24:	ldrb	r1, [r2, #1]!
   11c28:	sub	r3, r1, #9
   11c2c:	uxtb	r3, r3
   11c30:	sub	ip, r1, #12
   11c34:	uxtb	ip, ip
   11c38:	cmp	r3, #1
   11c3c:	cmphi	ip, #1
   11c40:	movhi	r3, #1
   11c44:	movls	r3, #0
   11c48:	cmp	r1, #32
   11c4c:	moveq	r3, #0
   11c50:	andne	r3, r3, #1
   11c54:	cmp	r3, #0
   11c58:	beq	11c18 <mycore_string_crop_whitespace_from_begin@@Base+0x68>
   11c5c:	cmp	r4, #0
   11c60:	bne	11c84 <mycore_string_crop_whitespace_from_begin@@Base+0xd4>
   11c64:	ldr	r3, [r5, #8]
   11c68:	sub	r3, r3, r4
   11c6c:	str	r3, [r5, #8]
   11c70:	mov	r0, r4
   11c74:	ldrd	r4, [sp]
   11c78:	ldr	r6, [sp, #8]
   11c7c:	add	sp, sp, #12
   11c80:	pop	{pc}		; (ldr pc, [sp], #4)
   11c84:	mov	r1, r4
   11c88:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   11c8c:	str	r0, [r5]
   11c90:	b	11c64 <mycore_string_crop_whitespace_from_begin@@Base+0xb4>
   11c94:	mov	r4, #0
   11c98:	b	11c64 <mycore_string_crop_whitespace_from_begin@@Base+0xb4>

00011c9c <mycore_string_whitespace_from_begin@@Base>:
   11c9c:	str	r4, [sp, #-8]!
   11ca0:	str	lr, [sp, #4]
   11ca4:	ldr	lr, [r0]
   11ca8:	ldr	r0, [r0, #8]
   11cac:	cmp	r0, #0
   11cb0:	beq	11d40 <mycore_string_whitespace_from_begin@@Base+0xa4>
   11cb4:	ldrb	r2, [lr]
   11cb8:	sub	r3, r2, #9
   11cbc:	uxtb	r3, r3
   11cc0:	sub	r1, r2, #12
   11cc4:	uxtb	r1, r1
   11cc8:	cmp	r3, #1
   11ccc:	cmphi	r1, #1
   11cd0:	movhi	r3, #1
   11cd4:	movls	r3, #0
   11cd8:	cmp	r2, #32
   11cdc:	moveq	r3, #0
   11ce0:	andne	r3, r3, #1
   11ce4:	cmp	r3, #0
   11ce8:	bne	11d4c <mycore_string_whitespace_from_begin@@Base+0xb0>
   11cec:	sub	r0, r0, #1
   11cf0:	add	r4, lr, r0
   11cf4:	mov	r2, lr
   11cf8:	rsb	lr, lr, #1
   11cfc:	add	r0, lr, r2
   11d00:	cmp	r2, r4
   11d04:	beq	11d40 <mycore_string_whitespace_from_begin@@Base+0xa4>
   11d08:	ldrb	r1, [r2, #1]!
   11d0c:	sub	r3, r1, #9
   11d10:	uxtb	r3, r3
   11d14:	sub	ip, r1, #12
   11d18:	uxtb	ip, ip
   11d1c:	cmp	r3, #1
   11d20:	cmphi	ip, #1
   11d24:	movhi	r3, #1
   11d28:	movls	r3, #0
   11d2c:	cmp	r1, #32
   11d30:	moveq	r3, #0
   11d34:	andne	r3, r3, #1
   11d38:	cmp	r3, #0
   11d3c:	beq	11cfc <mycore_string_whitespace_from_begin@@Base+0x60>
   11d40:	ldr	r4, [sp]
   11d44:	add	sp, sp, #4
   11d48:	pop	{pc}		; (ldr pc, [sp], #4)
   11d4c:	mov	r0, #0
   11d50:	b	11d40 <mycore_string_whitespace_from_begin@@Base+0xa4>

00011d54 <mythread_create@@Base>:
   11d54:	str	r4, [sp, #-8]!
   11d58:	str	lr, [sp, #4]
   11d5c:	mov	r1, #40	; 0x28
   11d60:	mov	r0, #1
   11d64:	bl	feb4 <mycore_calloc@plt>
   11d68:	ldr	r4, [sp]
   11d6c:	add	sp, sp, #4
   11d70:	pop	{pc}		; (ldr pc, [sp], #4)

00011d74 <mythread_init@@Base>:
   11d74:	cmp	r2, #0
   11d78:	bne	11d84 <mythread_init@@Base+0x10>
   11d7c:	mov	r0, #1
   11d80:	bx	lr
   11d84:	str	r4, [sp, #-8]!
   11d88:	str	lr, [sp, #4]
   11d8c:	mov	r4, r0
   11d90:	str	r2, [r0, #8]
   11d94:	mov	r0, #0
   11d98:	str	r0, [r4, #4]
   11d9c:	str	r3, [r4, #12]
   11da0:	str	r1, [r4, #32]
   11da4:	mov	r1, #40	; 0x28
   11da8:	mov	r0, r2
   11dac:	bl	feb4 <mycore_calloc@plt>
   11db0:	str	r0, [r4]
   11db4:	cmp	r0, #0
   11db8:	moveq	r0, #2
   11dbc:	beq	11de8 <mythread_init@@Base+0x74>
   11dc0:	mov	r0, r4
   11dc4:	bl	fe24 <mythread_thread_attr_init@plt>
   11dc8:	str	r0, [r4, #20]
   11dcc:	cmp	r0, #0
   11dd0:	moveq	r0, #12
   11dd4:	beq	11de8 <mythread_init@@Base+0x74>
   11dd8:	mov	r0, r4
   11ddc:	bl	fc44 <mythread_nanosleep_create@plt>
   11de0:	str	r0, [r4, #24]
   11de4:	mov	r0, #0
   11de8:	ldr	r4, [sp]
   11dec:	add	sp, sp, #4
   11df0:	pop	{pc}		; (ldr pc, [sp], #4)

00011df4 <mythread_clean@@Base>:
   11df4:	str	r4, [sp, #-8]!
   11df8:	str	lr, [sp, #4]
   11dfc:	mov	r4, r0
   11e00:	ldr	r1, [r0, #20]
   11e04:	bl	103a0 <mythread_thread_attr_clean@plt>
   11e08:	ldr	r0, [r4, #24]
   11e0c:	bl	fbfc <mythread_nanosleep_clean@plt>
   11e10:	mov	r3, #0
   11e14:	str	r3, [r4, #28]
   11e18:	ldr	r4, [sp]
   11e1c:	add	sp, sp, #4
   11e20:	pop	{pc}		; (ldr pc, [sp], #4)

00011e24 <myhread_entry_create@@Base>:
   11e24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11e28:	strd	r6, [sp, #8]
   11e2c:	strd	r8, [sp, #16]
   11e30:	str	sl, [sp, #24]
   11e34:	str	lr, [sp, #28]
   11e38:	mov	ip, #0
   11e3c:	str	ip, [r0, #28]
   11e40:	ldr	ip, [r0, #4]
   11e44:	ldr	lr, [r0, #8]
   11e48:	cmp	ip, lr
   11e4c:	movcs	r9, #15
   11e50:	bcs	11eec <myhread_entry_create@@Base+0xc8>
   11e54:	mov	r7, r1
   11e58:	mov	r4, r0
   11e5c:	add	ip, ip, ip, lsl #2
   11e60:	lsl	r6, ip, #3
   11e64:	ldr	r8, [r0]
   11e68:	add	r5, r8, r6
   11e6c:	str	r0, [r5, #32]
   11e70:	str	r2, [r5, #8]
   11e74:	ldr	r2, [r0, #4]
   11e78:	str	r2, [r5, #4]
   11e7c:	ldr	r2, [r0, #8]
   11e80:	str	r2, [r5, #12]
   11e84:	str	r3, [r5, #16]
   11e88:	mov	r3, #0
   11e8c:	str	r3, [r5, #20]
   11e90:	bl	fc44 <mythread_nanosleep_create@plt>
   11e94:	str	r0, [r5, #28]
   11e98:	mov	r0, r4
   11e9c:	bl	10a90 <mythread_mutex_create@plt>
   11ea0:	str	r0, [r5, #24]
   11ea4:	cmp	r0, #0
   11ea8:	moveq	r9, #71	; 0x47
   11eac:	beq	11eec <myhread_entry_create@@Base+0xc8>
   11eb0:	mov	r1, r0
   11eb4:	mov	r0, r4
   11eb8:	bl	10d30 <mythread_mutex_wait@plt>
   11ebc:	subs	r9, r0, #0
   11ec0:	bne	11f08 <myhread_entry_create@@Base+0xe4>
   11ec4:	add	r2, r5, #4
   11ec8:	mov	r1, r7
   11ecc:	mov	r0, r4
   11ed0:	bl	fd28 <mythread_thread_create@plt>
   11ed4:	str	r0, [r8, r6]
   11ed8:	cmp	r0, #0
   11edc:	beq	11f1c <myhread_entry_create@@Base+0xf8>
   11ee0:	ldr	r3, [r4, #4]
   11ee4:	add	r3, r3, #1
   11ee8:	str	r3, [r4, #4]
   11eec:	mov	r0, r9
   11ef0:	ldrd	r4, [sp]
   11ef4:	ldrd	r6, [sp, #8]
   11ef8:	ldrd	r8, [sp, #16]
   11efc:	ldr	sl, [sp, #24]
   11f00:	add	sp, sp, #28
   11f04:	pop	{pc}		; (ldr pc, [sp], #4)
   11f08:	ldr	r1, [r5, #24]
   11f0c:	mov	r0, r4
   11f10:	bl	105c8 <mythread_mutex_close@plt>
   11f14:	mov	r9, #72	; 0x48
   11f18:	b	11eec <myhread_entry_create@@Base+0xc8>
   11f1c:	ldr	r1, [r5, #24]
   11f20:	mov	r0, r4
   11f24:	bl	105c8 <mythread_mutex_close@plt>
   11f28:	mov	r9, #1
   11f2c:	b	11eec <myhread_entry_create@@Base+0xc8>

00011f30 <myhread_increase_id_by_entry_id@@Base>:
   11f30:	ldr	r0, [r0, #12]
   11f34:	add	r0, r1, r0
   11f38:	bx	lr

00011f3c <mythread_join@@Base>:
   11f3c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11f40:	strd	r6, [sp, #8]
   11f44:	str	r8, [sp, #16]
   11f48:	str	lr, [sp, #20]
   11f4c:	mov	r5, r0
   11f50:	ldr	r0, [r0, #4]
   11f54:	cmp	r0, #0
   11f58:	beq	11fc0 <mythread_join@@Base+0x84>
   11f5c:	mov	r7, r2
   11f60:	mov	r6, r1
   11f64:	mov	r4, #0
   11f68:	b	11f98 <mythread_join@@Base+0x5c>
   11f6c:	ldr	r3, [r5]
   11f70:	add	r1, r4, r4, lsl #2
   11f74:	ldr	r1, [r3, r1, lsl #3]
   11f78:	mov	r0, r5
   11f7c:	bl	104fc <mythread_thread_join@plt>
   11f80:	cmp	r0, #0
   11f84:	bne	11fbc <mythread_join@@Base+0x80>
   11f88:	add	r4, r4, #1
   11f8c:	ldr	r3, [r5, #4]
   11f90:	cmp	r3, r4
   11f94:	bls	11fc0 <mythread_join@@Base+0x84>
   11f98:	cmp	r6, #0
   11f9c:	beq	11f6c <mythread_join@@Base+0x30>
   11fa0:	add	r3, r4, r4, lsl #2
   11fa4:	ldr	r1, [r5]
   11fa8:	mov	r2, r7
   11fac:	add	r1, r1, r3, lsl #3
   11fb0:	mov	r0, r5
   11fb4:	blx	r6
   11fb8:	b	11f6c <mythread_join@@Base+0x30>
   11fbc:	mov	r0, #1
   11fc0:	ldrd	r4, [sp]
   11fc4:	ldrd	r6, [sp, #8]
   11fc8:	ldr	r8, [sp, #16]
   11fcc:	add	sp, sp, #20
   11fd0:	pop	{pc}		; (ldr pc, [sp], #4)

00011fd4 <mythread_check_status@@Base>:
   11fd4:	ldr	ip, [r0, #4]
   11fd8:	cmp	ip, #0
   11fdc:	beq	1201c <mythread_check_status@@Base+0x48>
   11fe0:	ldr	r3, [r0]
   11fe4:	ldr	r0, [r3, #20]
   11fe8:	cmp	r0, #0
   11fec:	bne	12014 <mythread_check_status@@Base+0x40>
   11ff0:	mov	r2, r0
   11ff4:	add	r2, r2, #1
   11ff8:	cmp	r2, ip
   11ffc:	beq	12018 <mythread_check_status@@Base+0x44>
   12000:	add	r3, r3, #40	; 0x28
   12004:	ldr	r1, [r3, #20]
   12008:	cmp	r1, #0
   1200c:	beq	11ff4 <mythread_check_status@@Base+0x20>
   12010:	mov	r0, r1
   12014:	bx	lr
   12018:	bx	lr
   1201c:	mov	r0, ip
   12020:	bx	lr

00012024 <mythread_option@@Base>:
   12024:	ldr	r0, [r0, #36]	; 0x24
   12028:	bx	lr

0001202c <mythread_option_set@@Base>:
   1202c:	str	r1, [r0, #36]	; 0x24
   12030:	bx	lr

00012034 <mythread_quit@@Base>:
   12034:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12038:	strd	r6, [sp, #8]
   1203c:	str	r8, [sp, #16]
   12040:	str	lr, [sp, #20]
   12044:	mov	r4, r0
   12048:	mov	r7, r1
   1204c:	mov	r8, r2
   12050:	mov	r1, #2
   12054:	bl	10a78 <mythread_option_set@plt>
   12058:	ldr	r0, [r4, #4]
   1205c:	cmp	r0, #0
   12060:	beq	120d8 <mythread_quit@@Base+0xa4>
   12064:	mov	r5, #0
   12068:	b	120b0 <mythread_quit@@Base+0x7c>
   1206c:	add	r6, r5, r5, lsl #2
   12070:	ldr	r3, [r4]
   12074:	ldr	r1, [r3, r6, lsl #3]
   12078:	mov	r0, r4
   1207c:	bl	104fc <mythread_thread_join@plt>
   12080:	cmp	r0, #0
   12084:	bne	120d4 <mythread_quit@@Base+0xa0>
   12088:	ldr	r3, [r4]
   1208c:	ldr	r1, [r3, r6, lsl #3]
   12090:	mov	r0, r4
   12094:	bl	10988 <mythread_thread_destroy@plt>
   12098:	cmp	r0, #0
   1209c:	bne	120ec <mythread_quit@@Base+0xb8>
   120a0:	add	r5, r5, #1
   120a4:	ldr	r3, [r4, #4]
   120a8:	cmp	r3, r5
   120ac:	bls	120d8 <mythread_quit@@Base+0xa4>
   120b0:	cmp	r7, #0
   120b4:	beq	1206c <mythread_quit@@Base+0x38>
   120b8:	add	r1, r5, r5, lsl #2
   120bc:	ldr	r3, [r4]
   120c0:	mov	r2, r8
   120c4:	add	r1, r3, r1, lsl #3
   120c8:	mov	r0, r4
   120cc:	blx	r7
   120d0:	b	1206c <mythread_quit@@Base+0x38>
   120d4:	mov	r0, #1
   120d8:	ldrd	r4, [sp]
   120dc:	ldrd	r6, [sp, #8]
   120e0:	ldr	r8, [sp, #16]
   120e4:	add	sp, sp, #20
   120e8:	pop	{pc}		; (ldr pc, [sp], #4)
   120ec:	mov	r0, #1
   120f0:	b	120d8 <mythread_quit@@Base+0xa4>

000120f4 <mythread_stop@@Base>:
   120f4:	strd	r4, [sp, #-16]!
   120f8:	str	r6, [sp, #8]
   120fc:	str	lr, [sp, #12]
   12100:	ldr	r6, [r0, #36]	; 0x24
   12104:	ands	r6, r6, #4
   12108:	beq	12120 <mythread_stop@@Base+0x2c>
   1210c:	mov	r0, #0
   12110:	ldrd	r4, [sp]
   12114:	ldr	r6, [sp, #8]
   12118:	add	sp, sp, #12
   1211c:	pop	{pc}		; (ldr pc, [sp], #4)
   12120:	mov	r4, r0
   12124:	mov	r1, #4
   12128:	bl	10a78 <mythread_option_set@plt>
   1212c:	ldr	r3, [r4, #4]
   12130:	cmp	r3, #0
   12134:	movne	r5, r6
   12138:	bne	12154 <mythread_stop@@Base+0x60>
   1213c:	b	1210c <mythread_stop@@Base+0x18>
   12140:	add	r6, r6, #1
   12144:	add	r5, r5, #40	; 0x28
   12148:	ldr	r3, [r4, #4]
   1214c:	cmp	r3, r6
   12150:	bls	1210c <mythread_stop@@Base+0x18>
   12154:	ldr	r3, [r4]
   12158:	add	r3, r3, r5
   1215c:	ldr	r3, [r3, #16]
   12160:	tst	r3, #4
   12164:	bne	12140 <mythread_stop@@Base+0x4c>
   12168:	ldr	r0, [r4, #24]
   1216c:	bl	10040 <mythread_nanosleep_sleep@plt>
   12170:	ldr	r3, [r4]
   12174:	add	r3, r3, r5
   12178:	ldr	r3, [r3, #16]
   1217c:	tst	r3, #4
   12180:	beq	12168 <mythread_stop@@Base+0x74>
   12184:	b	12140 <mythread_stop@@Base+0x4c>

00012188 <mythread_suspend@@Base>:
   12188:	strd	r4, [sp, #-16]!
   1218c:	str	r6, [sp, #8]
   12190:	str	lr, [sp, #12]
   12194:	ldr	r6, [r0, #36]	; 0x24
   12198:	ands	r6, r6, #1
   1219c:	beq	121b4 <mythread_suspend@@Base+0x2c>
   121a0:	mov	r0, #0
   121a4:	ldrd	r4, [sp]
   121a8:	ldr	r6, [sp, #8]
   121ac:	add	sp, sp, #12
   121b0:	pop	{pc}		; (ldr pc, [sp], #4)
   121b4:	mov	r4, r0
   121b8:	mov	r1, #1
   121bc:	bl	10a78 <mythread_option_set@plt>
   121c0:	ldr	r3, [r4, #4]
   121c4:	cmp	r3, #0
   121c8:	movne	r5, r6
   121cc:	bne	121e8 <mythread_suspend@@Base+0x60>
   121d0:	b	121a0 <mythread_suspend@@Base+0x18>
   121d4:	add	r6, r6, #1
   121d8:	add	r5, r5, #40	; 0x28
   121dc:	ldr	r3, [r4, #4]
   121e0:	cmp	r3, r6
   121e4:	bls	121a0 <mythread_suspend@@Base+0x18>
   121e8:	ldr	r3, [r4]
   121ec:	add	r3, r3, r5
   121f0:	ldr	r2, [r3, #16]
   121f4:	tst	r2, #4
   121f8:	bne	121d4 <mythread_suspend@@Base+0x4c>
   121fc:	ldr	r3, [r3, #16]
   12200:	tst	r3, #1
   12204:	bne	121d4 <mythread_suspend@@Base+0x4c>
   12208:	ldr	r0, [r4, #24]
   1220c:	bl	10040 <mythread_nanosleep_sleep@plt>
   12210:	ldr	r3, [r4]
   12214:	add	r3, r3, r5
   12218:	ldr	r2, [r3, #16]
   1221c:	tst	r2, #4
   12220:	bne	121d4 <mythread_suspend@@Base+0x4c>
   12224:	ldr	r3, [r3, #16]
   12228:	tst	r3, #1
   1222c:	beq	12208 <mythread_suspend@@Base+0x80>
   12230:	b	121d4 <mythread_suspend@@Base+0x4c>

00012234 <mythread_resume@@Base>:
   12234:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12238:	strd	r6, [sp, #8]
   1223c:	str	r8, [sp, #16]
   12240:	str	lr, [sp, #20]
   12244:	mov	r5, r0
   12248:	mov	r8, r1
   1224c:	ldr	r7, [r0, #36]	; 0x24
   12250:	ands	r7, r7, #1
   12254:	bne	12274 <mythread_resume@@Base+0x40>
   12258:	bl	10a78 <mythread_option_set@plt>
   1225c:	ldr	r3, [r5, #4]
   12260:	cmp	r3, #0
   12264:	beq	122e4 <mythread_resume@@Base+0xb0>
   12268:	mov	r4, r7
   1226c:	mov	r6, r7
   12270:	b	122a8 <mythread_resume@@Base+0x74>
   12274:	bl	10a78 <mythread_option_set@plt>
   12278:	mov	r7, #0
   1227c:	mov	r0, r7
   12280:	ldrd	r4, [sp]
   12284:	ldrd	r6, [sp, #8]
   12288:	ldr	r8, [sp, #16]
   1228c:	add	sp, sp, #20
   12290:	pop	{pc}		; (ldr pc, [sp], #4)
   12294:	add	r6, r6, #1
   12298:	add	r4, r4, #40	; 0x28
   1229c:	ldr	r3, [r5, #4]
   122a0:	cmp	r3, r6
   122a4:	bls	1227c <mythread_resume@@Base+0x48>
   122a8:	ldr	r3, [r5]
   122ac:	add	r3, r3, r4
   122b0:	ldr	r2, [r3, #16]
   122b4:	tst	r2, #4
   122b8:	beq	12294 <mythread_resume@@Base+0x60>
   122bc:	str	r8, [r3, #16]
   122c0:	ldr	r3, [r5]
   122c4:	add	r3, r3, r4
   122c8:	ldr	r1, [r3, #24]
   122cc:	mov	r0, r5
   122d0:	bl	10ca0 <mythread_mutex_post@plt>
   122d4:	cmp	r0, #0
   122d8:	beq	12294 <mythread_resume@@Base+0x60>
   122dc:	mov	r7, #1
   122e0:	b	1227c <mythread_resume@@Base+0x48>
   122e4:	mov	r7, r3
   122e8:	b	1227c <mythread_resume@@Base+0x48>

000122ec <mythread_destroy@@Base>:
   122ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   122f0:	strd	r6, [sp, #8]
   122f4:	str	r8, [sp, #16]
   122f8:	str	lr, [sp, #20]
   122fc:	subs	r4, r0, #0
   12300:	beq	1235c <mythread_destroy@@Base+0x70>
   12304:	mov	r6, r1
   12308:	mov	r7, r2
   1230c:	mov	r5, r3
   12310:	ldr	r3, [r4]
   12314:	cmp	r3, #0
   12318:	beq	12340 <mythread_destroy@@Base+0x54>
   1231c:	mov	r1, #2
   12320:	mov	r0, r4
   12324:	bl	10454 <mythread_resume@plt>
   12328:	mov	r2, r7
   1232c:	mov	r1, r6
   12330:	mov	r0, r4
   12334:	bl	10520 <mythread_quit@plt>
   12338:	ldr	r0, [r4]
   1233c:	bl	10d60 <mycore_free@plt>
   12340:	ldr	r1, [r4, #20]
   12344:	mov	r0, r4
   12348:	bl	11018 <mythread_thread_attr_destroy@plt>
   1234c:	ldr	r0, [r4, #24]
   12350:	bl	10b98 <mythread_nanosleep_destroy@plt>
   12354:	cmp	r5, #0
   12358:	bne	12374 <mythread_destroy@@Base+0x88>
   1235c:	mov	r0, r4
   12360:	ldrd	r4, [sp]
   12364:	ldrd	r6, [sp, #8]
   12368:	ldr	r8, [sp, #16]
   1236c:	add	sp, sp, #20
   12370:	pop	{pc}		; (ldr pc, [sp], #4)
   12374:	mov	r0, r4
   12378:	bl	10d60 <mycore_free@plt>
   1237c:	mov	r4, #0
   12380:	b	1235c <mythread_destroy@@Base+0x70>

00012384 <mythread_entry_join@@Base>:
   12384:	str	r4, [sp, #-8]!
   12388:	str	lr, [sp, #4]
   1238c:	mov	r4, r0
   12390:	subs	r3, r1, #0
   12394:	beq	123a4 <mythread_entry_join@@Base+0x20>
   12398:	mov	r1, r0
   1239c:	ldr	r0, [r0, #32]
   123a0:	blx	r3
   123a4:	ldr	r1, [r4]
   123a8:	ldr	r0, [r4, #32]
   123ac:	bl	104fc <mythread_thread_join@plt>
   123b0:	adds	r0, r0, #0
   123b4:	movne	r0, #1
   123b8:	ldr	r4, [sp]
   123bc:	add	sp, sp, #4
   123c0:	pop	{pc}		; (ldr pc, [sp], #4)

000123c4 <mythread_entry_quit@@Base>:
   123c4:	str	r4, [sp, #-8]!
   123c8:	str	lr, [sp, #4]
   123cc:	mov	r4, r0
   123d0:	subs	r3, r1, #0
   123d4:	beq	123e4 <mythread_entry_quit@@Base+0x20>
   123d8:	mov	r1, r0
   123dc:	ldr	r0, [r0, #32]
   123e0:	blx	r3
   123e4:	ldr	r1, [r4]
   123e8:	ldr	r0, [r4, #32]
   123ec:	bl	104fc <mythread_thread_join@plt>
   123f0:	cmp	r0, #0
   123f4:	movne	r0, #1
   123f8:	beq	12408 <mythread_entry_quit@@Base+0x44>
   123fc:	ldr	r4, [sp]
   12400:	add	sp, sp, #4
   12404:	pop	{pc}		; (ldr pc, [sp], #4)
   12408:	ldr	r1, [r4]
   1240c:	ldr	r0, [r4, #32]
   12410:	bl	10988 <mythread_thread_destroy@plt>
   12414:	adds	r0, r0, #0
   12418:	movne	r0, #1
   1241c:	b	123fc <mythread_entry_quit@@Base+0x38>

00012420 <mythread_entry_stop@@Base>:
   12420:	ldr	r3, [r0, #16]
   12424:	tst	r3, #4
   12428:	bne	12474 <mythread_entry_stop@@Base+0x54>
   1242c:	str	r4, [sp, #-8]!
   12430:	str	lr, [sp, #4]
   12434:	mov	r4, r0
   12438:	mov	r3, #4
   1243c:	str	r3, [r0, #16]
   12440:	ldr	r3, [r0, #16]
   12444:	tst	r3, #4
   12448:	bne	12464 <mythread_entry_stop@@Base+0x44>
   1244c:	ldr	r3, [r4, #32]
   12450:	ldr	r0, [r3, #24]
   12454:	bl	10040 <mythread_nanosleep_sleep@plt>
   12458:	ldr	r3, [r4, #16]
   1245c:	tst	r3, #4
   12460:	beq	1244c <mythread_entry_stop@@Base+0x2c>
   12464:	mov	r0, #0
   12468:	ldr	r4, [sp]
   1246c:	add	sp, sp, #4
   12470:	pop	{pc}		; (ldr pc, [sp], #4)
   12474:	mov	r0, #0
   12478:	bx	lr

0001247c <mythread_entry_suspend@@Base>:
   1247c:	ldr	r3, [r0, #16]
   12480:	tst	r3, #1
   12484:	bne	124e8 <mythread_entry_suspend@@Base+0x6c>
   12488:	mov	r3, #1
   1248c:	str	r3, [r0, #16]
   12490:	ldr	r3, [r0, #16]
   12494:	tst	r3, #4
   12498:	bne	124e8 <mythread_entry_suspend@@Base+0x6c>
   1249c:	str	r4, [sp, #-8]!
   124a0:	str	lr, [sp, #4]
   124a4:	mov	r4, r0
   124a8:	ldr	r3, [r0, #16]
   124ac:	tst	r3, #1
   124b0:	bne	124d8 <mythread_entry_suspend@@Base+0x5c>
   124b4:	ldr	r3, [r4, #32]
   124b8:	ldr	r0, [r3, #24]
   124bc:	bl	10040 <mythread_nanosleep_sleep@plt>
   124c0:	ldr	r3, [r4, #16]
   124c4:	tst	r3, #4
   124c8:	bne	124d8 <mythread_entry_suspend@@Base+0x5c>
   124cc:	ldr	r3, [r4, #16]
   124d0:	tst	r3, #1
   124d4:	beq	124b4 <mythread_entry_suspend@@Base+0x38>
   124d8:	mov	r0, #0
   124dc:	ldr	r4, [sp]
   124e0:	add	sp, sp, #4
   124e4:	pop	{pc}		; (ldr pc, [sp], #4)
   124e8:	mov	r0, #0
   124ec:	bx	lr

000124f0 <mythread_entry_resume@@Base>:
   124f0:	mov	r3, r0
   124f4:	ldr	r2, [r0, #16]
   124f8:	tst	r2, #1
   124fc:	beq	1250c <mythread_entry_resume@@Base+0x1c>
   12500:	str	r1, [r0, #16]
   12504:	mov	r0, #0
   12508:	bx	lr
   1250c:	ldr	r0, [r0, #16]
   12510:	ands	r0, r0, #4
   12514:	bne	12520 <mythread_entry_resume@@Base+0x30>
   12518:	str	r1, [r3, #16]
   1251c:	bx	lr
   12520:	str	r4, [sp, #-8]!
   12524:	str	lr, [sp, #4]
   12528:	str	r1, [r3, #16]
   1252c:	ldr	r1, [r3, #24]
   12530:	ldr	r0, [r3, #32]
   12534:	bl	10ca0 <mythread_mutex_post@plt>
   12538:	adds	r0, r0, #0
   1253c:	movne	r0, #1
   12540:	ldr	r4, [sp]
   12544:	add	sp, sp, #4
   12548:	pop	{pc}		; (ldr pc, [sp], #4)

0001254c <mythread_entry_status@@Base>:
   1254c:	ldr	r0, [r0, #20]
   12550:	bx	lr

00012554 <mythread_entry_mythread@@Base>:
   12554:	ldr	r0, [r0, #32]
   12558:	bx	lr

0001255c <mythread_callback_quit@@Base>:
   1255c:	strd	r4, [sp, #-16]!
   12560:	str	r6, [sp, #8]
   12564:	str	lr, [sp, #12]
   12568:	mov	r5, r0
   1256c:	mov	r4, r1
   12570:	ldr	r3, [r1, #16]
   12574:	tst	r3, #2
   12578:	bne	12590 <mythread_callback_quit@@Base+0x34>
   1257c:	ldr	r0, [r5, #24]
   12580:	bl	10040 <mythread_nanosleep_sleep@plt>
   12584:	ldr	r3, [r4, #16]
   12588:	tst	r3, #2
   1258c:	beq	1257c <mythread_callback_quit@@Base+0x20>
   12590:	ldrd	r4, [sp]
   12594:	ldr	r6, [sp, #8]
   12598:	add	sp, sp, #12
   1259c:	pop	{pc}		; (ldr pc, [sp], #4)

000125a0 <mythread_queue_create@@Base>:
   125a0:	str	r4, [sp, #-8]!
   125a4:	str	lr, [sp, #4]
   125a8:	mov	r1, #28
   125ac:	mov	r0, #1
   125b0:	bl	feb4 <mycore_calloc@plt>
   125b4:	ldr	r4, [sp]
   125b8:	add	sp, sp, #4
   125bc:	pop	{pc}		; (ldr pc, [sp], #4)

000125c0 <mythread_queue_init@@Base>:
   125c0:	strd	r4, [sp, #-16]!
   125c4:	str	r6, [sp, #8]
   125c8:	str	lr, [sp, #12]
   125cc:	mov	r4, r0
   125d0:	cmp	r1, #32
   125d4:	movcc	r1, #32
   125d8:	mov	r0, #512	; 0x200
   125dc:	str	r0, [r4, #8]
   125e0:	str	r1, [r4, #20]
   125e4:	mov	r1, #4
   125e8:	bl	feb4 <mycore_calloc@plt>
   125ec:	str	r0, [r4]
   125f0:	cmp	r0, #0
   125f4:	moveq	r0, #61	; 0x3d
   125f8:	beq	12630 <mythread_queue_init@@Base+0x70>
   125fc:	mov	r5, r0
   12600:	ldr	r0, [r4, #20]
   12604:	ldr	r6, [r4, #4]
   12608:	add	r0, r0, r0, lsl #1
   1260c:	lsl	r0, r0, #2
   12610:	bl	10c28 <mycore_malloc@plt>
   12614:	str	r0, [r5, r6, lsl #2]
   12618:	ldr	r0, [r4]
   1261c:	ldr	r3, [r4, #4]
   12620:	ldr	r3, [r0, r3, lsl #2]
   12624:	cmp	r3, #0
   12628:	movne	r0, #0
   1262c:	beq	12640 <mythread_queue_init@@Base+0x80>
   12630:	ldrd	r4, [sp]
   12634:	ldr	r6, [sp, #8]
   12638:	add	sp, sp, #12
   1263c:	pop	{pc}		; (ldr pc, [sp], #4)
   12640:	bl	10d60 <mycore_free@plt>
   12644:	str	r0, [r4]
   12648:	mov	r0, #62	; 0x3e
   1264c:	b	12630 <mythread_queue_init@@Base+0x70>

00012650 <mythread_queue_clean@@Base>:
   12650:	mov	r3, #0
   12654:	str	r3, [r0, #12]
   12658:	str	r3, [r0, #4]
   1265c:	str	r3, [r0, #24]
   12660:	str	r3, [r0, #16]
   12664:	bx	lr

00012668 <mythread_queue_destroy@@Base>:
   12668:	strd	r4, [sp, #-16]!
   1266c:	str	r6, [sp, #8]
   12670:	str	lr, [sp, #12]
   12674:	subs	r5, r0, #0
   12678:	beq	126b8 <mythread_queue_destroy@@Base+0x50>
   1267c:	ldr	r3, [r5]
   12680:	cmp	r3, #0
   12684:	beq	126b0 <mythread_queue_destroy@@Base+0x48>
   12688:	mov	r4, #0
   1268c:	ldr	r3, [r5]
   12690:	ldr	r0, [r3, r4, lsl #2]
   12694:	bl	10d60 <mycore_free@plt>
   12698:	add	r4, r4, #1
   1269c:	ldr	r3, [r5, #4]
   126a0:	cmp	r3, r4
   126a4:	bcs	1268c <mythread_queue_destroy@@Base+0x24>
   126a8:	ldr	r0, [r5]
   126ac:	bl	10d60 <mycore_free@plt>
   126b0:	mov	r0, r5
   126b4:	bl	10d60 <mycore_free@plt>
   126b8:	mov	r0, #0
   126bc:	ldrd	r4, [sp]
   126c0:	ldr	r6, [sp, #8]
   126c4:	add	sp, sp, #12
   126c8:	pop	{pc}		; (ldr pc, [sp], #4)

000126cc <mythread_queue_node_clean@@Base>:
   126cc:	mov	r3, #0
   126d0:	str	r3, [r0]
   126d4:	str	r3, [r0, #4]
   126d8:	str	r3, [r0, #8]
   126dc:	bx	lr

000126e0 <mythread_queue_get_prev_node@@Base>:
   126e0:	ldr	r0, [r0, #8]
   126e4:	bx	lr

000126e8 <mythread_queue_get_current_node@@Base>:
   126e8:	ldr	r2, [r0, #4]
   126ec:	ldr	r3, [r0]
   126f0:	ldr	r0, [r0, #12]
   126f4:	add	r0, r0, r0, lsl #1
   126f8:	ldr	r3, [r3, r2, lsl #2]
   126fc:	add	r0, r3, r0, lsl #2
   12700:	bx	lr

00012704 <mythread_queue_get_first_node@@Base>:
   12704:	ldr	r3, [r0]
   12708:	ldr	r0, [r3]
   1270c:	bx	lr

00012710 <mythread_queue_count_used_node@@Base>:
   12710:	ldr	r0, [r0, #16]
   12714:	bx	lr

00012718 <mythread_queue_list_create@@Base>:
   12718:	str	r4, [sp, #-8]!
   1271c:	str	lr, [sp, #4]
   12720:	mov	r1, #12
   12724:	mov	r0, #1
   12728:	bl	feb4 <mycore_calloc@plt>
   1272c:	ldr	r4, [sp]
   12730:	add	sp, sp, #4
   12734:	pop	{pc}		; (ldr pc, [sp], #4)

00012738 <mythread_queue_list_destroy@@Base>:
   12738:	cmp	r0, #0
   1273c:	bxeq	lr
   12740:	str	r4, [sp, #-8]!
   12744:	str	lr, [sp, #4]
   12748:	bl	10d60 <mycore_free@plt>
   1274c:	ldr	r4, [sp]
   12750:	add	sp, sp, #4
   12754:	pop	{pc}		; (ldr pc, [sp], #4)

00012758 <mythread_queue_list_get_count@@Base>:
   12758:	ldr	r0, [r0, #8]
   1275c:	bx	lr

00012760 <mythread_queue_list_wait_for_done@@Base>:
   12760:	cmp	r1, #0
   12764:	bxeq	lr
   12768:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1276c:	strd	r6, [sp, #8]
   12770:	str	r8, [sp, #16]
   12774:	str	lr, [sp, #20]
   12778:	mov	r5, r0
   1277c:	ldr	r4, [r1]
   12780:	cmp	r4, #0
   12784:	bne	127f8 <mythread_queue_list_wait_for_done@@Base+0x98>
   12788:	ldrd	r4, [sp]
   1278c:	ldrd	r6, [sp, #8]
   12790:	ldr	r8, [sp, #16]
   12794:	add	sp, sp, #20
   12798:	pop	{pc}		; (ldr pc, [sp], #4)
   1279c:	add	r7, r7, #1
   127a0:	ldr	r3, [r5, #4]
   127a4:	cmp	r3, r7
   127a8:	bls	127ec <mythread_queue_list_wait_for_done@@Base+0x8c>
   127ac:	lsl	r6, r7, #2
   127b0:	ldr	r3, [r4, #4]
   127b4:	ldr	r2, [r3, r7, lsl #2]
   127b8:	ldr	r3, [r4]
   127bc:	ldr	r3, [r3, #16]
   127c0:	cmp	r2, r3
   127c4:	bcs	1279c <mythread_queue_list_wait_for_done@@Base+0x3c>
   127c8:	ldr	r0, [r5, #24]
   127cc:	bl	10040 <mythread_nanosleep_sleep@plt>
   127d0:	ldr	r3, [r4, #4]
   127d4:	ldr	r2, [r3, r6]
   127d8:	ldr	r3, [r4]
   127dc:	ldr	r3, [r3, #16]
   127e0:	cmp	r2, r3
   127e4:	bcc	127c8 <mythread_queue_list_wait_for_done@@Base+0x68>
   127e8:	b	1279c <mythread_queue_list_wait_for_done@@Base+0x3c>
   127ec:	ldr	r4, [r4, #12]
   127f0:	cmp	r4, #0
   127f4:	beq	12788 <mythread_queue_list_wait_for_done@@Base+0x28>
   127f8:	ldr	r3, [r5, #4]
   127fc:	cmp	r3, #0
   12800:	movne	r7, #0
   12804:	bne	127ac <mythread_queue_list_wait_for_done@@Base+0x4c>
   12808:	b	127ec <mythread_queue_list_wait_for_done@@Base+0x8c>

0001280c <mythread_queue_node_malloc@@Base>:
   1280c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12810:	strd	r6, [sp, #8]
   12814:	str	r8, [sp, #16]
   12818:	str	lr, [sp, #20]
   1281c:	mov	r4, r1
   12820:	mov	r6, r2
   12824:	ldr	r3, [r1, #12]
   12828:	add	r3, r3, #1
   1282c:	str	r3, [r1, #12]
   12830:	ldr	r2, [r1, #20]
   12834:	cmp	r3, r2
   12838:	bcc	128bc <mythread_queue_node_malloc@@Base+0xb0>
   1283c:	ldr	r3, [r1, #4]
   12840:	add	r3, r3, #1
   12844:	str	r3, [r1, #4]
   12848:	ldr	r2, [r1, #8]
   1284c:	cmp	r3, r2
   12850:	bcc	128a0 <mythread_queue_node_malloc@@Base+0x94>
   12854:	cmp	r0, #0
   12858:	beq	12864 <mythread_queue_node_malloc@@Base+0x58>
   1285c:	ldr	r1, [r0, #16]
   12860:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   12864:	ldr	r7, [r4, #8]
   12868:	add	r7, r7, #512	; 0x200
   1286c:	lsl	r1, r7, #2
   12870:	ldr	r0, [r4]
   12874:	bl	fb84 <mycore_realloc@plt>
   12878:	subs	r5, r0, #0
   1287c:	beq	128f8 <mythread_queue_node_malloc@@Base+0xec>
   12880:	ldr	r0, [r4, #4]
   12884:	sub	r2, r7, r0
   12888:	lsl	r2, r2, #2
   1288c:	mov	r1, #0
   12890:	add	r0, r5, r0, lsl #2
   12894:	bl	10844 <memset@plt>
   12898:	str	r5, [r4]
   1289c:	str	r7, [r4, #8]
   128a0:	ldr	r7, [r4, #4]
   128a4:	ldr	r5, [r4]
   128a8:	ldr	r3, [r5, r7, lsl #2]
   128ac:	cmp	r3, #0
   128b0:	beq	12910 <mythread_queue_node_malloc@@Base+0x104>
   128b4:	mov	r3, #0
   128b8:	str	r3, [r4, #12]
   128bc:	ldr	r3, [r4, #16]
   128c0:	add	r3, r3, #1
   128c4:	str	r3, [r4, #16]
   128c8:	ldr	r2, [r4, #4]
   128cc:	ldr	r3, [r4]
   128d0:	ldr	r0, [r4, #12]
   128d4:	add	r0, r0, r0, lsl #1
   128d8:	ldr	r5, [r3, r2, lsl #2]
   128dc:	add	r5, r5, r0, lsl #2
   128e0:	mov	r0, r5
   128e4:	ldrd	r4, [sp]
   128e8:	ldrd	r6, [sp, #8]
   128ec:	ldr	r8, [sp, #16]
   128f0:	add	sp, sp, #20
   128f4:	pop	{pc}		; (ldr pc, [sp], #4)
   128f8:	cmp	r6, #0
   128fc:	moveq	r5, r6
   12900:	beq	128e0 <mythread_queue_node_malloc@@Base+0xd4>
   12904:	mov	r3, #61	; 0x3d
   12908:	str	r3, [r6]
   1290c:	b	128e0 <mythread_queue_node_malloc@@Base+0xd4>
   12910:	ldr	r0, [r4, #20]
   12914:	add	r0, r0, r0, lsl #1
   12918:	lsl	r0, r0, #2
   1291c:	bl	10c28 <mycore_malloc@plt>
   12920:	str	r0, [r5, r7, lsl #2]
   12924:	ldr	r2, [r4, #4]
   12928:	ldr	r3, [r4]
   1292c:	ldr	r5, [r3, r2, lsl #2]
   12930:	cmp	r5, #0
   12934:	bne	128b4 <mythread_queue_node_malloc@@Base+0xa8>
   12938:	cmp	r6, #0
   1293c:	moveq	r5, r6
   12940:	beq	128e0 <mythread_queue_node_malloc@@Base+0xd4>
   12944:	mov	r3, #62	; 0x3e
   12948:	str	r3, [r6]
   1294c:	b	128e0 <mythread_queue_node_malloc@@Base+0xd4>

00012950 <mythread_queue_node_malloc_limit@@Base>:
   12950:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12954:	strd	r6, [sp, #8]
   12958:	str	r8, [sp, #16]
   1295c:	str	lr, [sp, #20]
   12960:	mov	r4, r1
   12964:	mov	r6, r3
   12968:	ldr	r3, [r1, #12]
   1296c:	add	r3, r3, #1
   12970:	str	r3, [r1, #12]
   12974:	ldr	r1, [r1, #16]
   12978:	cmp	r1, r2
   1297c:	bcc	129ec <mythread_queue_node_malloc_limit@@Base+0x9c>
   12980:	ldr	r3, [r4, #16]
   12984:	add	r3, r3, #1
   12988:	str	r3, [r4, #16]
   1298c:	cmp	r0, #0
   12990:	beq	1299c <mythread_queue_node_malloc_limit@@Base+0x4c>
   12994:	ldr	r1, [r0, #16]
   12998:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   1299c:	mov	r3, #0
   129a0:	str	r3, [r4, #12]
   129a4:	str	r3, [r4, #4]
   129a8:	str	r3, [r4, #24]
   129ac:	str	r3, [r4, #16]
   129b0:	ldr	r3, [r4, #16]
   129b4:	add	r3, r3, #1
   129b8:	str	r3, [r4, #16]
   129bc:	ldr	r2, [r4, #4]
   129c0:	ldr	r3, [r4]
   129c4:	ldr	r0, [r4, #12]
   129c8:	add	r0, r0, r0, lsl #1
   129cc:	ldr	r5, [r3, r2, lsl #2]
   129d0:	add	r5, r5, r0, lsl #2
   129d4:	mov	r0, r5
   129d8:	ldrd	r4, [sp]
   129dc:	ldrd	r6, [sp, #8]
   129e0:	ldr	r8, [sp, #16]
   129e4:	add	sp, sp, #20
   129e8:	pop	{pc}		; (ldr pc, [sp], #4)
   129ec:	ldr	r2, [r4, #20]
   129f0:	cmp	r3, r2
   129f4:	bcc	129b0 <mythread_queue_node_malloc_limit@@Base+0x60>
   129f8:	ldr	r3, [r4, #4]
   129fc:	add	r3, r3, #1
   12a00:	str	r3, [r4, #4]
   12a04:	ldr	r2, [r4, #8]
   12a08:	cmp	r3, r2
   12a0c:	bcc	12a5c <mythread_queue_node_malloc_limit@@Base+0x10c>
   12a10:	cmp	r0, #0
   12a14:	beq	12a20 <mythread_queue_node_malloc_limit@@Base+0xd0>
   12a18:	ldr	r1, [r0, #16]
   12a1c:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   12a20:	ldr	r7, [r4, #8]
   12a24:	add	r7, r7, #512	; 0x200
   12a28:	lsl	r1, r7, #2
   12a2c:	ldr	r0, [r4]
   12a30:	bl	fb84 <mycore_realloc@plt>
   12a34:	subs	r5, r0, #0
   12a38:	beq	12a7c <mythread_queue_node_malloc_limit@@Base+0x12c>
   12a3c:	ldr	r0, [r4, #4]
   12a40:	sub	r2, r7, r0
   12a44:	lsl	r2, r2, #2
   12a48:	mov	r1, #0
   12a4c:	add	r0, r5, r0, lsl #2
   12a50:	bl	10844 <memset@plt>
   12a54:	str	r5, [r4]
   12a58:	str	r7, [r4, #8]
   12a5c:	ldr	r7, [r4, #4]
   12a60:	ldr	r5, [r4]
   12a64:	ldr	r3, [r5, r7, lsl #2]
   12a68:	cmp	r3, #0
   12a6c:	beq	12a94 <mythread_queue_node_malloc_limit@@Base+0x144>
   12a70:	mov	r3, #0
   12a74:	str	r3, [r4, #12]
   12a78:	b	129b0 <mythread_queue_node_malloc_limit@@Base+0x60>
   12a7c:	cmp	r6, #0
   12a80:	moveq	r5, r6
   12a84:	beq	129d4 <mythread_queue_node_malloc_limit@@Base+0x84>
   12a88:	mov	r3, #61	; 0x3d
   12a8c:	str	r3, [r6]
   12a90:	b	129d4 <mythread_queue_node_malloc_limit@@Base+0x84>
   12a94:	ldr	r0, [r4, #20]
   12a98:	add	r0, r0, r0, lsl #1
   12a9c:	lsl	r0, r0, #2
   12aa0:	bl	10c28 <mycore_malloc@plt>
   12aa4:	str	r0, [r5, r7, lsl #2]
   12aa8:	ldr	r2, [r4, #4]
   12aac:	ldr	r3, [r4]
   12ab0:	ldr	r5, [r3, r2, lsl #2]
   12ab4:	cmp	r5, #0
   12ab8:	bne	12a70 <mythread_queue_node_malloc_limit@@Base+0x120>
   12abc:	cmp	r6, #0
   12ac0:	moveq	r5, r6
   12ac4:	beq	129d4 <mythread_queue_node_malloc_limit@@Base+0x84>
   12ac8:	mov	r3, #62	; 0x3e
   12acc:	str	r3, [r6]
   12ad0:	b	129d4 <mythread_queue_node_malloc_limit@@Base+0x84>

00012ad4 <mythread_queue_list_see_for_done@@Base>:
   12ad4:	cmp	r1, #0
   12ad8:	beq	12b5c <mythread_queue_list_see_for_done@@Base+0x88>
   12adc:	str	r4, [sp, #-8]!
   12ae0:	str	lr, [sp, #4]
   12ae4:	ldr	r4, [r1]
   12ae8:	cmp	r4, #0
   12aec:	beq	12b64 <mythread_queue_list_see_for_done@@Base+0x90>
   12af0:	ldr	ip, [r0, #4]
   12af4:	cmp	ip, #0
   12af8:	beq	12b48 <mythread_queue_list_see_for_done@@Base+0x74>
   12afc:	ldr	r2, [r4, #4]
   12b00:	ldr	r1, [r2]
   12b04:	ldr	lr, [r4]
   12b08:	ldr	r3, [lr, #16]
   12b0c:	cmp	r1, r3
   12b10:	bcc	12b6c <mythread_queue_list_see_for_done@@Base+0x98>
   12b14:	add	r2, r2, #4
   12b18:	mov	r3, #0
   12b1c:	add	r3, r3, #1
   12b20:	cmp	r3, ip
   12b24:	beq	12b48 <mythread_queue_list_see_for_done@@Base+0x74>
   12b28:	ldr	r0, [r2], #4
   12b2c:	ldr	r1, [lr, #16]
   12b30:	cmp	r0, r1
   12b34:	bcs	12b1c <mythread_queue_list_see_for_done@@Base+0x48>
   12b38:	mov	r0, #0
   12b3c:	ldr	r4, [sp]
   12b40:	add	sp, sp, #4
   12b44:	pop	{pc}		; (ldr pc, [sp], #4)
   12b48:	ldr	r4, [r4, #12]
   12b4c:	cmp	r4, #0
   12b50:	bne	12af4 <mythread_queue_list_see_for_done@@Base+0x20>
   12b54:	mov	r0, #1
   12b58:	b	12b3c <mythread_queue_list_see_for_done@@Base+0x68>
   12b5c:	mov	r0, #1
   12b60:	bx	lr
   12b64:	mov	r0, #1
   12b68:	b	12b3c <mythread_queue_list_see_for_done@@Base+0x68>
   12b6c:	mov	r0, #0
   12b70:	b	12b3c <mythread_queue_list_see_for_done@@Base+0x68>

00012b74 <mythread_queue_list_see_for_done_by_thread@@Base>:
   12b74:	cmp	r1, #0
   12b78:	beq	12bd8 <mythread_queue_list_see_for_done_by_thread@@Base+0x64>
   12b7c:	ldr	r3, [r1]
   12b80:	cmp	r3, #0
   12b84:	beq	12be0 <mythread_queue_list_see_for_done_by_thread@@Base+0x6c>
   12b88:	lsl	r0, r2, #2
   12b8c:	ldr	r1, [r3, #4]
   12b90:	ldr	r1, [r1, r2, lsl #2]
   12b94:	ldr	r2, [r3]
   12b98:	ldr	r2, [r2, #16]
   12b9c:	cmp	r1, r2
   12ba0:	bcc	12be8 <mythread_queue_list_see_for_done_by_thread@@Base+0x74>
   12ba4:	ldr	r3, [r3, #12]
   12ba8:	cmp	r3, #0
   12bac:	beq	12bd0 <mythread_queue_list_see_for_done_by_thread@@Base+0x5c>
   12bb0:	ldr	r2, [r3, #4]
   12bb4:	ldr	r1, [r2, r0]
   12bb8:	ldr	r2, [r3]
   12bbc:	ldr	r2, [r2, #16]
   12bc0:	cmp	r1, r2
   12bc4:	bcs	12ba4 <mythread_queue_list_see_for_done_by_thread@@Base+0x30>
   12bc8:	mov	r0, #0
   12bcc:	bx	lr
   12bd0:	mov	r0, #1
   12bd4:	bx	lr
   12bd8:	mov	r0, #1
   12bdc:	bx	lr
   12be0:	mov	r0, #1
   12be4:	bx	lr
   12be8:	mov	r0, #0
   12bec:	bx	lr

00012bf0 <mythread_queue_list_entry_delete@@Base>:
   12bf0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12bf4:	strd	r6, [sp, #8]
   12bf8:	strd	r8, [sp, #16]
   12bfc:	str	sl, [sp, #24]
   12c00:	str	lr, [sp, #28]
   12c04:	mov	r5, r0
   12c08:	mov	r8, r2
   12c0c:	mov	r7, r3
   12c10:	subs	r9, r1, #0
   12c14:	beq	12c40 <mythread_queue_list_entry_delete@@Base+0x50>
   12c18:	mov	r4, r0
   12c1c:	add	r6, r0, r9, lsl #2
   12c20:	b	12c30 <mythread_queue_list_entry_delete@@Base+0x40>
   12c24:	bl	10088 <mythread_suspend@plt>
   12c28:	cmp	r4, r6
   12c2c:	beq	12c40 <mythread_queue_list_entry_delete@@Base+0x50>
   12c30:	ldr	r0, [r4], #4
   12c34:	cmp	r0, #0
   12c38:	bne	12c24 <mythread_queue_list_entry_delete@@Base+0x34>
   12c3c:	b	12c28 <mythread_queue_list_entry_delete@@Base+0x38>
   12c40:	ldr	r2, [r7, #12]
   12c44:	ldr	r3, [r7, #16]
   12c48:	cmp	r3, #0
   12c4c:	strne	r2, [r3, #12]
   12c50:	cmp	r2, #0
   12c54:	strne	r3, [r2, #16]
   12c58:	ldr	r1, [r8]
   12c5c:	cmp	r1, r7
   12c60:	streq	r2, [r8]
   12c64:	ldr	r2, [r8, #4]
   12c68:	cmp	r2, r7
   12c6c:	streq	r3, [r8, #4]
   12c70:	ldr	r3, [r8, #8]
   12c74:	sub	r3, r3, #1
   12c78:	str	r3, [r8, #8]
   12c7c:	cmp	r9, #0
   12c80:	beq	12cb4 <mythread_queue_list_entry_delete@@Base+0xc4>
   12c84:	mov	r4, r5
   12c88:	add	r5, r5, r9, lsl #2
   12c8c:	mov	r6, #0
   12c90:	b	12ca4 <mythread_queue_list_entry_delete@@Base+0xb4>
   12c94:	mov	r1, r6
   12c98:	bl	10454 <mythread_resume@plt>
   12c9c:	cmp	r4, r5
   12ca0:	beq	12cb4 <mythread_queue_list_entry_delete@@Base+0xc4>
   12ca4:	ldr	r0, [r4], #4
   12ca8:	cmp	r0, #0
   12cac:	bne	12c94 <mythread_queue_list_entry_delete@@Base+0xa4>
   12cb0:	b	12c9c <mythread_queue_list_entry_delete@@Base+0xac>
   12cb4:	ldrb	r3, [sp, #32]
   12cb8:	cmp	r3, #0
   12cbc:	beq	12cd0 <mythread_queue_list_entry_delete@@Base+0xe0>
   12cc0:	ldr	r0, [r7]
   12cc4:	cmp	r0, #0
   12cc8:	beq	12cd0 <mythread_queue_list_entry_delete@@Base+0xe0>
   12ccc:	bl	10268 <mythread_queue_destroy@plt>
   12cd0:	ldr	r0, [r7, #4]
   12cd4:	cmp	r0, #0
   12cd8:	beq	12ce0 <mythread_queue_list_entry_delete@@Base+0xf0>
   12cdc:	bl	10d60 <mycore_free@plt>
   12ce0:	mov	r0, r7
   12ce4:	bl	10d60 <mycore_free@plt>
   12ce8:	mov	r0, #0
   12cec:	ldrd	r4, [sp]
   12cf0:	ldrd	r6, [sp, #8]
   12cf4:	ldrd	r8, [sp, #16]
   12cf8:	ldr	sl, [sp, #24]
   12cfc:	add	sp, sp, #28
   12d00:	pop	{pc}		; (ldr pc, [sp], #4)

00012d04 <mythread_queue_list_entry_clean@@Base>:
   12d04:	cmp	r0, #0
   12d08:	bxeq	lr
   12d0c:	str	r4, [sp, #-8]!
   12d10:	str	lr, [sp, #4]
   12d14:	ldr	r0, [r0]
   12d18:	bl	fd04 <mythread_queue_clean@plt>
   12d1c:	ldr	r4, [sp]
   12d20:	add	sp, sp, #4
   12d24:	pop	{pc}		; (ldr pc, [sp], #4)

00012d28 <mythread_queue_list_entry_wait_for_done@@Base>:
   12d28:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12d2c:	strd	r6, [sp, #8]
   12d30:	str	r8, [sp, #16]
   12d34:	str	lr, [sp, #20]
   12d38:	subs	r4, r1, #0
   12d3c:	beq	12d54 <mythread_queue_list_entry_wait_for_done@@Base+0x2c>
   12d40:	ldr	r3, [r4, #8]
   12d44:	cmp	r3, #0
   12d48:	movne	r6, r0
   12d4c:	movne	r7, #0
   12d50:	bne	12d78 <mythread_queue_list_entry_wait_for_done@@Base+0x50>
   12d54:	ldrd	r4, [sp]
   12d58:	ldrd	r6, [sp, #8]
   12d5c:	ldr	r8, [sp, #16]
   12d60:	add	sp, sp, #20
   12d64:	pop	{pc}		; (ldr pc, [sp], #4)
   12d68:	add	r7, r7, #1
   12d6c:	ldr	r3, [r4, #8]
   12d70:	cmp	r3, r7
   12d74:	bls	12d54 <mythread_queue_list_entry_wait_for_done@@Base+0x2c>
   12d78:	lsl	r5, r7, #2
   12d7c:	ldr	r3, [r4, #4]
   12d80:	ldr	r2, [r3, r7, lsl #2]
   12d84:	ldr	r3, [r4]
   12d88:	ldr	r3, [r3, #16]
   12d8c:	cmp	r2, r3
   12d90:	bcs	12d68 <mythread_queue_list_entry_wait_for_done@@Base+0x40>
   12d94:	ldr	r0, [r6, #24]
   12d98:	bl	10040 <mythread_nanosleep_sleep@plt>
   12d9c:	ldr	r3, [r4, #4]
   12da0:	ldr	r2, [r3, r5]
   12da4:	ldr	r3, [r4]
   12da8:	ldr	r3, [r3, #16]
   12dac:	cmp	r2, r3
   12db0:	bcc	12d94 <mythread_queue_list_entry_wait_for_done@@Base+0x6c>
   12db4:	b	12d68 <mythread_queue_list_entry_wait_for_done@@Base+0x40>

00012db8 <mythread_queue_node_malloc_round@@Base>:
   12db8:	strd	r4, [sp, #-16]!
   12dbc:	str	r6, [sp, #8]
   12dc0:	str	lr, [sp, #12]
   12dc4:	ldr	r4, [r1]
   12dc8:	ldr	r3, [r4, #12]
   12dcc:	add	r3, r3, #1
   12dd0:	str	r3, [r4, #12]
   12dd4:	ldr	r2, [r4, #20]
   12dd8:	cmp	r3, r2
   12ddc:	bcc	12e2c <mythread_queue_node_malloc_round@@Base+0x74>
   12de0:	mov	r5, r1
   12de4:	ldr	r3, [r4, #16]
   12de8:	add	r3, r3, #1
   12dec:	str	r3, [r4, #16]
   12df0:	cmp	r0, #0
   12df4:	beq	12dfc <mythread_queue_node_malloc_round@@Base+0x44>
   12df8:	bl	10910 <mythread_queue_list_entry_wait_for_done@plt>
   12dfc:	mov	r0, r5
   12e00:	bl	10934 <mythread_queue_list_entry_clean@plt>
   12e04:	ldr	r2, [r4, #4]
   12e08:	ldr	r3, [r4]
   12e0c:	ldr	r0, [r4, #12]
   12e10:	add	r0, r0, r0, lsl #1
   12e14:	ldr	r3, [r3, r2, lsl #2]
   12e18:	add	r0, r3, r0, lsl #2
   12e1c:	ldrd	r4, [sp]
   12e20:	ldr	r6, [sp, #8]
   12e24:	add	sp, sp, #12
   12e28:	pop	{pc}		; (ldr pc, [sp], #4)
   12e2c:	ldr	r3, [r4, #16]
   12e30:	add	r3, r3, #1
   12e34:	str	r3, [r4, #16]
   12e38:	b	12e04 <mythread_queue_node_malloc_round@@Base+0x4c>

00012e3c <mythread_queue_list_entry_see_for_done@@Base>:
   12e3c:	cmp	r0, #0
   12e40:	beq	12ea0 <mythread_queue_list_entry_see_for_done@@Base+0x64>
   12e44:	ldr	ip, [r0, #8]
   12e48:	cmp	ip, #0
   12e4c:	beq	12ea8 <mythread_queue_list_entry_see_for_done@@Base+0x6c>
   12e50:	push	{lr}		; (str lr, [sp, #-4]!)
   12e54:	ldr	r2, [r0, #4]
   12e58:	ldr	r1, [r2]
   12e5c:	ldr	lr, [r0]
   12e60:	ldr	r3, [lr, #16]
   12e64:	cmp	r1, r3
   12e68:	bcc	12eb0 <mythread_queue_list_entry_see_for_done@@Base+0x74>
   12e6c:	add	r2, r2, #4
   12e70:	mov	r3, #0
   12e74:	add	r3, r3, #1
   12e78:	cmp	r3, ip
   12e7c:	beq	12e98 <mythread_queue_list_entry_see_for_done@@Base+0x5c>
   12e80:	ldr	r0, [r2], #4
   12e84:	ldr	r1, [lr, #16]
   12e88:	cmp	r0, r1
   12e8c:	bcs	12e74 <mythread_queue_list_entry_see_for_done@@Base+0x38>
   12e90:	mov	r0, #0
   12e94:	b	12e9c <mythread_queue_list_entry_see_for_done@@Base+0x60>
   12e98:	mov	r0, #1
   12e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   12ea0:	mov	r0, #1
   12ea4:	bx	lr
   12ea8:	mov	r0, #1
   12eac:	bx	lr
   12eb0:	mov	r0, #0
   12eb4:	b	12e9c <mythread_queue_list_entry_see_for_done@@Base+0x60>

00012eb8 <mythread_queue_list_entry_make_batch@@Base>:
   12eb8:	cmp	r1, #0
   12ebc:	beq	12ef0 <mythread_queue_list_entry_make_batch@@Base+0x38>
   12ec0:	ldr	r3, [r0, #12]
   12ec4:	ldr	r2, [r0, #4]
   12ec8:	cmp	r3, r2
   12ecc:	bhi	12ef0 <mythread_queue_list_entry_make_batch@@Base+0x38>
   12ed0:	mov	r2, #0
   12ed4:	ldr	ip, [r1, #4]
   12ed8:	str	r2, [ip, r3, lsl #2]
   12edc:	add	r2, r2, #1
   12ee0:	add	r3, r3, #1
   12ee4:	ldr	ip, [r0, #4]
   12ee8:	cmp	ip, r3
   12eec:	bcs	12ed4 <mythread_queue_list_entry_make_batch@@Base+0x1c>
   12ef0:	bx	lr

00012ef4 <mythread_queue_list_entry_make_stream@@Base>:
   12ef4:	cmp	r1, #0
   12ef8:	beq	12f28 <mythread_queue_list_entry_make_stream@@Base+0x34>
   12efc:	ldr	r3, [r0, #12]
   12f00:	ldr	r2, [r0, #4]
   12f04:	cmp	r3, r2
   12f08:	bhi	12f28 <mythread_queue_list_entry_make_stream@@Base+0x34>
   12f0c:	mov	ip, #0
   12f10:	ldr	r2, [r1, #4]
   12f14:	str	ip, [r2, r3, lsl #2]
   12f18:	add	r3, r3, #1
   12f1c:	ldr	r2, [r0, #4]
   12f20:	cmp	r2, r3
   12f24:	bcs	12f10 <mythread_queue_list_entry_make_stream@@Base+0x1c>
   12f28:	bx	lr

00012f2c <mythread_queue_list_entry_push@@Base>:
   12f2c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12f30:	strd	r6, [sp, #8]
   12f34:	strd	r8, [sp, #16]
   12f38:	str	sl, [sp, #24]
   12f3c:	str	lr, [sp, #28]
   12f40:	mov	r6, r0
   12f44:	mov	r8, r1
   12f48:	mov	r9, r2
   12f4c:	mov	sl, r3
   12f50:	ldr	r4, [sp, #32]
   12f54:	ldr	r7, [sp, #36]	; 0x24
   12f58:	cmp	r7, #0
   12f5c:	beq	130a0 <mythread_queue_list_entry_push@@Base+0x174>
   12f60:	mov	r3, #0
   12f64:	str	r3, [r7]
   12f68:	mov	r1, #20
   12f6c:	mov	r0, #1
   12f70:	bl	feb4 <mycore_calloc@plt>
   12f74:	subs	r5, r0, #0
   12f78:	moveq	r3, #60	; 0x3c
   12f7c:	streq	r3, [r7]
   12f80:	beq	130b4 <mythread_queue_list_entry_push@@Base+0x188>
   12f84:	str	r4, [r5, #8]
   12f88:	cmp	r4, #0
   12f8c:	moveq	r3, #0
   12f90:	streq	r3, [r5, #4]
   12f94:	bne	12fb0 <mythread_queue_list_entry_push@@Base+0x84>
   12f98:	str	sl, [r5]
   12f9c:	cmp	r8, #0
   12fa0:	beq	13030 <mythread_queue_list_entry_push@@Base+0x104>
   12fa4:	mov	r4, r6
   12fa8:	add	r7, r6, r8, lsl #2
   12fac:	b	13008 <mythread_queue_list_entry_push@@Base+0xdc>
   12fb0:	mov	r1, #4
   12fb4:	mov	r0, r4
   12fb8:	bl	feb4 <mycore_calloc@plt>
   12fbc:	mov	r4, r0
   12fc0:	str	r0, [r5, #4]
   12fc4:	cmp	r0, #0
   12fc8:	bne	12f98 <mythread_queue_list_entry_push@@Base+0x6c>
   12fcc:	mov	r0, r5
   12fd0:	bl	10d60 <mycore_free@plt>
   12fd4:	cmp	r7, #0
   12fd8:	moveq	r5, r7
   12fdc:	beq	130b4 <mythread_queue_list_entry_push@@Base+0x188>
   12fe0:	mov	r3, #60	; 0x3c
   12fe4:	str	r3, [r7]
   12fe8:	mov	r5, r4
   12fec:	b	130b4 <mythread_queue_list_entry_push@@Base+0x188>
   12ff0:	mov	r1, r5
   12ff4:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   12ff8:	b	13020 <mythread_queue_list_entry_push@@Base+0xf4>
   12ffc:	bl	10088 <mythread_suspend@plt>
   13000:	cmp	r4, r7
   13004:	beq	13030 <mythread_queue_list_entry_push@@Base+0x104>
   13008:	ldr	r0, [r4], #4
   1300c:	ldr	r3, [r0, #32]
   13010:	cmp	r3, #1
   13014:	beq	12ff0 <mythread_queue_list_entry_push@@Base+0xc4>
   13018:	mov	r1, r5
   1301c:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   13020:	ldr	r0, [r4, #-4]
   13024:	cmp	r0, #0
   13028:	bne	12ffc <mythread_queue_list_entry_push@@Base+0xd0>
   1302c:	b	13000 <mythread_queue_list_entry_push@@Base+0xd4>
   13030:	ldr	r3, [r9]
   13034:	cmp	r3, #0
   13038:	beq	13074 <mythread_queue_list_entry_push@@Base+0x148>
   1303c:	ldr	r3, [r9, #4]
   13040:	str	r5, [r3, #12]
   13044:	ldr	r3, [r9, #4]
   13048:	str	r3, [r5, #16]
   1304c:	str	r5, [r9, #4]
   13050:	ldr	r3, [r9, #8]
   13054:	add	r3, r3, #1
   13058:	str	r3, [r9, #8]
   1305c:	cmp	r8, #0
   13060:	beq	130b4 <mythread_queue_list_entry_push@@Base+0x188>
   13064:	mov	r4, r6
   13068:	add	r6, r6, r8, lsl #2
   1306c:	mov	r7, #0
   13070:	b	13090 <mythread_queue_list_entry_push@@Base+0x164>
   13074:	str	r5, [r9]
   13078:	str	r5, [r9, #4]
   1307c:	b	13050 <mythread_queue_list_entry_push@@Base+0x124>
   13080:	mov	r1, r7
   13084:	bl	10454 <mythread_resume@plt>
   13088:	cmp	r4, r6
   1308c:	beq	130b4 <mythread_queue_list_entry_push@@Base+0x188>
   13090:	ldr	r0, [r4], #4
   13094:	cmp	r0, #0
   13098:	bne	13080 <mythread_queue_list_entry_push@@Base+0x154>
   1309c:	b	13088 <mythread_queue_list_entry_push@@Base+0x15c>
   130a0:	mov	r1, #20
   130a4:	mov	r0, #1
   130a8:	bl	feb4 <mycore_calloc@plt>
   130ac:	subs	r5, r0, #0
   130b0:	bne	12f84 <mythread_queue_list_entry_push@@Base+0x58>
   130b4:	mov	r0, r5
   130b8:	ldrd	r4, [sp]
   130bc:	ldrd	r6, [sp, #8]
   130c0:	ldrd	r8, [sp, #16]
   130c4:	ldr	sl, [sp, #24]
   130c8:	add	sp, sp, #28
   130cc:	pop	{pc}		; (ldr pc, [sp], #4)

000130d0 <mythread_function_see_opt@@Base>:
   130d0:	strd	r4, [sp, #-16]!
   130d4:	str	r6, [sp, #8]
   130d8:	str	lr, [sp, #12]
   130dc:	sub	sp, sp, #8
   130e0:	str	r1, [sp, #4]
   130e4:	ldr	r5, [r0, #28]
   130e8:	ldr	r1, [r5, #16]
   130ec:	ldr	ip, [r1, #8]
   130f0:	cmp	ip, r3
   130f4:	movne	r6, #0
   130f8:	bne	13124 <mythread_function_see_opt@@Base+0x54>
   130fc:	mov	r4, r0
   13100:	ldr	r3, [sp, #4]
   13104:	tst	r3, #4
   13108:	bne	1313c <mythread_function_see_opt@@Base+0x6c>
   1310c:	ldr	r3, [sp, #4]
   13110:	tst	r3, #2
   13114:	bne	1316c <mythread_function_see_opt@@Base+0x9c>
   13118:	ldr	r0, [sp, #24]
   1311c:	bl	10040 <mythread_nanosleep_sleep@plt>
   13120:	mov	r6, #0
   13124:	mov	r0, r6
   13128:	add	sp, sp, #8
   1312c:	ldrd	r4, [sp]
   13130:	ldr	r6, [sp, #8]
   13134:	add	sp, sp, #12
   13138:	pop	{pc}		; (ldr pc, [sp], #4)
   1313c:	mov	r0, r5
   13140:	bl	10568 <mythread_queue_list_see_for_done_by_thread@plt>
   13144:	cmp	r0, #0
   13148:	beq	13118 <mythread_function_see_opt@@Base+0x48>
   1314c:	mov	r3, #4
   13150:	str	r3, [r4, #12]
   13154:	ldr	r1, [r4, #20]
   13158:	mov	r0, r5
   1315c:	bl	10d30 <mythread_mutex_wait@plt>
   13160:	mov	r6, #0
   13164:	str	r6, [r4, #12]
   13168:	b	13124 <mythread_function_see_opt@@Base+0x54>
   1316c:	mov	r0, r5
   13170:	bl	10568 <mythread_queue_list_see_for_done_by_thread@plt>
   13174:	subs	r6, r0, #0
   13178:	beq	13118 <mythread_function_see_opt@@Base+0x48>
   1317c:	ldr	r1, [r4, #20]
   13180:	mov	r0, r5
   13184:	bl	105c8 <mythread_mutex_close@plt>
   13188:	ldr	r0, [r4, #24]
   1318c:	bl	10b98 <mythread_nanosleep_destroy@plt>
   13190:	mov	r3, #2
   13194:	str	r3, [r4, #12]
   13198:	b	13124 <mythread_function_see_opt@@Base+0x54>

0001319c <mythread_function_queue_batch@@Base>:
   1319c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   131a0:	strd	r6, [sp, #8]
   131a4:	strd	r8, [sp, #16]
   131a8:	strd	sl, [sp, #24]
   131ac:	str	lr, [sp, #32]
   131b0:	sub	sp, sp, #20
   131b4:	mov	r7, r0
   131b8:	ldr	r9, [r0, #28]
   131bc:	ldr	sl, [r9, #16]
   131c0:	ldr	r1, [r0]
   131c4:	mov	r0, r9
   131c8:	bl	fdf4 <myhread_increase_id_by_entry_id@plt>
   131cc:	mov	r4, r0
   131d0:	str	r0, [sp, #12]
   131d4:	ldr	r1, [r7, #20]
   131d8:	mov	r0, r9
   131dc:	bl	10d30 <mythread_mutex_wait@plt>
   131e0:	lsl	r6, r4, #2
   131e4:	mov	fp, #1
   131e8:	b	132a0 <mythread_function_queue_batch@@Base+0x104>
   131ec:	str	fp, [r7, #12]
   131f0:	ldr	r3, [r9, #36]	; 0x24
   131f4:	tst	r3, #1
   131f8:	beq	13210 <mythread_function_queue_batch@@Base+0x74>
   131fc:	ldr	r0, [r7, #24]
   13200:	bl	10040 <mythread_nanosleep_sleep@plt>
   13204:	ldr	r3, [r9, #36]	; 0x24
   13208:	tst	r3, #1
   1320c:	bne	131fc <mythread_function_queue_batch@@Base+0x60>
   13210:	mov	r3, #0
   13214:	str	r3, [r7, #12]
   13218:	b	132ac <mythread_function_queue_batch@@Base+0x110>
   1321c:	ldr	r4, [r4, #12]
   13220:	cmp	r4, #0
   13224:	beq	13294 <mythread_function_queue_batch@@Base+0xf8>
   13228:	ldr	r5, [r4, #4]
   1322c:	ldr	r1, [r5, r6]
   13230:	ldr	r3, [r4]
   13234:	ldr	r2, [r3, #16]
   13238:	cmp	r1, r2
   1323c:	addcs	r8, r8, #1
   13240:	bcs	1321c <mythread_function_queue_batch@@Base+0x80>
   13244:	ldr	r1, [r5, r6]
   13248:	ldr	r2, [r3, #20]
   1324c:	ldr	ip, [r5, r6]
   13250:	ldr	r0, [r3, #20]
   13254:	udiv	r2, r1, r2
   13258:	ldr	r3, [r3]
   1325c:	udiv	r1, ip, r0
   13260:	mls	r1, r0, r1, ip
   13264:	add	r1, r1, r1, lsl #1
   13268:	ldr	r2, [r3, r2, lsl #2]
   1326c:	ldr	r3, [r7, #4]
   13270:	add	r1, r2, r1, lsl #2
   13274:	ldr	r0, [r7]
   13278:	blx	r3
   1327c:	ldr	r3, [r5, r6]
   13280:	ldr	r2, [r9, #4]
   13284:	add	r3, r3, r2
   13288:	str	r3, [r5, r6]
   1328c:	b	1321c <mythread_function_queue_batch@@Base+0x80>
   13290:	mov	r8, #0
   13294:	ldr	r3, [sl, #8]
   13298:	cmp	r3, r8
   1329c:	beq	132c0 <mythread_function_queue_batch@@Base+0x124>
   132a0:	ldr	r3, [r9, #36]	; 0x24
   132a4:	tst	r3, #1
   132a8:	bne	131ec <mythread_function_queue_batch@@Base+0x50>
   132ac:	ldr	r4, [sl]
   132b0:	cmp	r4, #0
   132b4:	beq	13290 <mythread_function_queue_batch@@Base+0xf4>
   132b8:	mov	r8, #0
   132bc:	b	13228 <mythread_function_queue_batch@@Base+0x8c>
   132c0:	ldr	r1, [r9, #36]	; 0x24
   132c4:	ldr	r3, [r7, #24]
   132c8:	str	r3, [sp]
   132cc:	mov	r3, r8
   132d0:	ldr	r2, [sp, #12]
   132d4:	mov	r0, r7
   132d8:	bl	fe6c <mythread_function_see_opt@plt>
   132dc:	cmp	r0, #0
   132e0:	beq	132a0 <mythread_function_queue_batch@@Base+0x104>
   132e4:	mov	r0, #0
   132e8:	add	sp, sp, #20
   132ec:	ldrd	r4, [sp]
   132f0:	ldrd	r6, [sp, #8]
   132f4:	ldrd	r8, [sp, #16]
   132f8:	ldrd	sl, [sp, #24]
   132fc:	add	sp, sp, #32
   13300:	pop	{pc}		; (ldr pc, [sp], #4)

00013304 <mythread_function_queue_stream@@Base>:
   13304:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13308:	strd	r6, [sp, #8]
   1330c:	strd	r8, [sp, #16]
   13310:	strd	sl, [sp, #24]
   13314:	str	lr, [sp, #32]
   13318:	sub	sp, sp, #20
   1331c:	mov	r7, r0
   13320:	ldr	r9, [r0, #28]
   13324:	ldr	sl, [r9, #16]
   13328:	ldr	r1, [r0]
   1332c:	mov	r0, r9
   13330:	bl	fdf4 <myhread_increase_id_by_entry_id@plt>
   13334:	mov	r4, r0
   13338:	str	r0, [sp, #12]
   1333c:	ldr	r1, [r7, #20]
   13340:	mov	r0, r9
   13344:	bl	10d30 <mythread_mutex_wait@plt>
   13348:	lsl	r6, r4, #2
   1334c:	mov	fp, #1
   13350:	b	13404 <mythread_function_queue_stream@@Base+0x100>
   13354:	str	fp, [r7, #12]
   13358:	ldr	r3, [r9, #36]	; 0x24
   1335c:	tst	r3, #1
   13360:	beq	13378 <mythread_function_queue_stream@@Base+0x74>
   13364:	ldr	r0, [r7, #24]
   13368:	bl	10040 <mythread_nanosleep_sleep@plt>
   1336c:	ldr	r3, [r9, #36]	; 0x24
   13370:	tst	r3, #1
   13374:	bne	13364 <mythread_function_queue_stream@@Base+0x60>
   13378:	mov	r3, #0
   1337c:	str	r3, [r7, #12]
   13380:	b	13410 <mythread_function_queue_stream@@Base+0x10c>
   13384:	ldr	r4, [r4, #12]
   13388:	cmp	r4, #0
   1338c:	beq	133f8 <mythread_function_queue_stream@@Base+0xf4>
   13390:	ldr	r5, [r4, #4]
   13394:	ldr	r1, [r5, r6]
   13398:	ldr	r3, [r4]
   1339c:	ldr	r2, [r3, #16]
   133a0:	cmp	r1, r2
   133a4:	addcs	r8, r8, #1
   133a8:	bcs	13384 <mythread_function_queue_stream@@Base+0x80>
   133ac:	ldr	r1, [r5, r6]
   133b0:	ldr	r2, [r3, #20]
   133b4:	ldr	ip, [r5, r6]
   133b8:	ldr	r0, [r3, #20]
   133bc:	udiv	r2, r1, r2
   133c0:	ldr	r3, [r3]
   133c4:	udiv	r1, ip, r0
   133c8:	mls	r1, r0, r1, ip
   133cc:	add	r1, r1, r1, lsl #1
   133d0:	ldr	r2, [r3, r2, lsl #2]
   133d4:	ldr	r3, [r7, #4]
   133d8:	add	r1, r2, r1, lsl #2
   133dc:	ldr	r0, [r7]
   133e0:	blx	r3
   133e4:	ldr	r3, [r5, r6]
   133e8:	add	r3, r3, #1
   133ec:	str	r3, [r5, r6]
   133f0:	b	13384 <mythread_function_queue_stream@@Base+0x80>
   133f4:	mov	r8, #0
   133f8:	ldr	r3, [sl, #8]
   133fc:	cmp	r3, r8
   13400:	beq	13424 <mythread_function_queue_stream@@Base+0x120>
   13404:	ldr	r3, [r9, #36]	; 0x24
   13408:	tst	r3, #1
   1340c:	bne	13354 <mythread_function_queue_stream@@Base+0x50>
   13410:	ldr	r4, [sl]
   13414:	cmp	r4, #0
   13418:	beq	133f4 <mythread_function_queue_stream@@Base+0xf0>
   1341c:	mov	r8, #0
   13420:	b	13390 <mythread_function_queue_stream@@Base+0x8c>
   13424:	ldr	r1, [r9, #36]	; 0x24
   13428:	ldr	r3, [r7, #24]
   1342c:	str	r3, [sp]
   13430:	mov	r3, r8
   13434:	ldr	r2, [sp, #12]
   13438:	mov	r0, r7
   1343c:	bl	fe6c <mythread_function_see_opt@plt>
   13440:	cmp	r0, #0
   13444:	beq	13404 <mythread_function_queue_stream@@Base+0x100>
   13448:	mov	r0, #0
   1344c:	add	sp, sp, #20
   13450:	ldrd	r4, [sp]
   13454:	ldrd	r6, [sp, #8]
   13458:	ldrd	r8, [sp, #16]
   1345c:	ldrd	sl, [sp, #24]
   13460:	add	sp, sp, #32
   13464:	pop	{pc}		; (ldr pc, [sp], #4)

00013468 <mythread_function@@Base>:
   13468:	strd	r4, [sp, #-16]!
   1346c:	str	r6, [sp, #8]
   13470:	str	lr, [sp, #12]
   13474:	mov	r4, r0
   13478:	ldr	r5, [r0, #28]
   1347c:	ldr	r1, [r0, #20]
   13480:	mov	r0, r5
   13484:	bl	10d30 <mythread_mutex_wait@plt>
   13488:	mov	r6, #0
   1348c:	b	134cc <mythread_function@@Base+0x64>
   13490:	ldr	r3, [r4, #12]
   13494:	tst	r3, #1
   13498:	beq	134b0 <mythread_function@@Base+0x48>
   1349c:	ldr	r0, [r4, #24]
   134a0:	bl	10040 <mythread_nanosleep_sleep@plt>
   134a4:	ldr	r3, [r4, #12]
   134a8:	tst	r3, #1
   134ac:	bne	1349c <mythread_function@@Base+0x34>
   134b0:	ldr	r3, [r5, #36]	; 0x24
   134b4:	tst	r3, #2
   134b8:	bne	13510 <mythread_function@@Base+0xa8>
   134bc:	ldr	r3, [r4, #12]
   134c0:	tst	r3, #2
   134c4:	bne	13510 <mythread_function@@Base+0xa8>
   134c8:	str	r6, [r4, #12]
   134cc:	ldr	r3, [r4, #4]
   134d0:	mov	r1, r4
   134d4:	ldr	r0, [r4]
   134d8:	blx	r3
   134dc:	ldr	r3, [r4, #12]
   134e0:	orr	r3, r3, #8
   134e4:	str	r3, [r4, #12]
   134e8:	ldr	r3, [r4, #12]
   134ec:	tst	r3, #1
   134f0:	bne	13490 <mythread_function@@Base+0x28>
   134f4:	ldr	r3, [r4, #12]
   134f8:	orr	r3, r3, #4
   134fc:	str	r3, [r4, #12]
   13500:	ldr	r1, [r4, #20]
   13504:	mov	r0, r5
   13508:	bl	10d30 <mythread_mutex_wait@plt>
   1350c:	b	134b0 <mythread_function@@Base+0x48>
   13510:	ldr	r1, [r4, #20]
   13514:	mov	r0, r5
   13518:	bl	105c8 <mythread_mutex_close@plt>
   1351c:	ldr	r0, [r4, #24]
   13520:	bl	10b98 <mythread_nanosleep_destroy@plt>
   13524:	mov	r3, #2
   13528:	str	r3, [r4, #12]
   1352c:	mov	r0, #0
   13530:	ldrd	r4, [sp]
   13534:	ldr	r6, [sp, #8]
   13538:	add	sp, sp, #12
   1353c:	pop	{pc}		; (ldr pc, [sp], #4)

00013540 <mycore_power@@Base>:
   13540:	mov	r3, r0
   13544:	cmp	r1, #0
   13548:	beq	13568 <mycore_power@@Base+0x28>
   1354c:	mov	r0, #1
   13550:	tst	r1, #1
   13554:	mulne	r0, r3, r0
   13558:	mul	r3, r3, r3
   1355c:	lsrs	r1, r1, #1
   13560:	bne	13550 <mycore_power@@Base+0x10>
   13564:	bx	lr
   13568:	mov	r0, #1
   1356c:	bx	lr

00013570 <mycore_strncasecmp@@Base>:
   13570:	mov	r3, r0
   13574:	mov	ip, r1
   13578:	cmp	r1, #0
   1357c:	cmpne	r0, #0
   13580:	beq	1360c <mycore_strncasecmp@@Base+0x9c>
   13584:	cmp	r2, #0
   13588:	beq	13628 <mycore_strncasecmp@@Base+0xb8>
   1358c:	strd	r4, [sp, #-16]!
   13590:	str	r6, [sp, #8]
   13594:	str	lr, [sp, #12]
   13598:	ldr	r1, [pc, #144]	; 13630 <mycore_strncasecmp@@Base+0xc0>
   1359c:	add	r1, pc, r1
   135a0:	ldrb	r0, [r0]
   135a4:	ldrb	lr, [ip]
   135a8:	ldrb	r0, [r1, r0]
   135ac:	ldrb	r1, [r1, lr]
   135b0:	cmp	r0, r1
   135b4:	bne	13618 <mycore_strncasecmp@@Base+0xa8>
   135b8:	mov	r0, r3
   135bc:	sub	r5, r2, #1
   135c0:	add	r5, ip, r5
   135c4:	mov	r3, ip
   135c8:	rsb	r1, ip, #1
   135cc:	ldr	ip, [pc, #96]	; 13634 <mycore_strncasecmp@@Base+0xc4>
   135d0:	add	ip, pc, ip
   135d4:	add	r6, r1, r3
   135d8:	cmp	r3, r5
   135dc:	beq	13620 <mycore_strncasecmp@@Base+0xb0>
   135e0:	ldrb	r4, [r0, #1]!
   135e4:	ldrb	lr, [r3, #1]!
   135e8:	ldrb	r4, [ip, r4]
   135ec:	ldrb	lr, [ip, lr]
   135f0:	cmp	r4, lr
   135f4:	beq	135d4 <mycore_strncasecmp@@Base+0x64>
   135f8:	sub	r0, r2, r6
   135fc:	ldrd	r4, [sp]
   13600:	ldr	r6, [sp, #8]
   13604:	add	sp, sp, #12
   13608:	pop	{pc}		; (ldr pc, [sp], #4)
   1360c:	subs	r0, r0, r1
   13610:	movne	r0, #1
   13614:	bx	lr
   13618:	mov	r6, #0
   1361c:	b	135f8 <mycore_strncasecmp@@Base+0x88>
   13620:	mov	r0, #0
   13624:	b	135fc <mycore_strncasecmp@@Base+0x8c>
   13628:	mov	r0, r2
   1362c:	bx	lr
   13630:	andeq	pc, r1, r4, ror #17
   13634:			; <UNDEFINED> instruction: 0x0001f8b0

00013638 <mycore_strcasecmp@@Base>:
   13638:	mov	r2, r0
   1363c:	mov	r3, r1
   13640:	cmp	r1, #0
   13644:	cmpne	r0, #0
   13648:	bne	13658 <mycore_strcasecmp@@Base+0x20>
   1364c:	subs	r0, r0, r1
   13650:	movne	r0, #1
   13654:	bx	lr
   13658:	strd	r4, [sp, #-12]!
   1365c:	str	lr, [sp, #8]
   13660:	ldrb	r0, [r0]
   13664:	ldr	r1, [pc, #120]	; 136e4 <mycore_strcasecmp@@Base+0xac>
   13668:	add	r1, pc, r1
   1366c:	ldrb	lr, [r3]
   13670:	ldrb	ip, [r1, r0]
   13674:	ldrb	r1, [r1, lr]
   13678:	cmp	ip, r1
   1367c:	bne	136c8 <mycore_strcasecmp@@Base+0x90>
   13680:	cmp	r0, #0
   13684:	beq	136dc <mycore_strcasecmp@@Base+0xa4>
   13688:	mov	r1, r3
   1368c:	mov	r3, r2
   13690:	rsb	r0, r2, #1
   13694:	ldr	ip, [pc, #76]	; 136e8 <mycore_strcasecmp@@Base+0xb0>
   13698:	add	ip, pc, ip
   1369c:	add	r5, r0, r3
   136a0:	ldrb	r2, [r3, #1]!
   136a4:	ldrb	lr, [r1, #1]!
   136a8:	ldrb	r4, [ip, r2]
   136ac:	ldrb	lr, [ip, lr]
   136b0:	cmp	r4, lr
   136b4:	bne	136cc <mycore_strcasecmp@@Base+0x94>
   136b8:	cmp	r2, #0
   136bc:	bne	1369c <mycore_strcasecmp@@Base+0x64>
   136c0:	mov	r0, #0
   136c4:	b	136d0 <mycore_strcasecmp@@Base+0x98>
   136c8:	mov	r5, #0
   136cc:	add	r0, r5, #1
   136d0:	ldrd	r4, [sp]
   136d4:	add	sp, sp, #8
   136d8:	pop	{pc}		; (ldr pc, [sp], #4)
   136dc:	mov	r0, #0
   136e0:	b	136d0 <mycore_strcasecmp@@Base+0x98>
   136e4:	andeq	pc, r1, r8, lsl r8	; <UNPREDICTABLE>
   136e8:	andeq	pc, r1, r8, ror #15

000136ec <mycore_strncmp@@Base>:
   136ec:	mov	r3, r0
   136f0:	mov	ip, r1
   136f4:	cmp	r1, #0
   136f8:	cmpne	r0, #0
   136fc:	beq	13760 <mycore_strncmp@@Base+0x74>
   13700:	cmp	r2, #0
   13704:	beq	1377c <mycore_strncmp@@Base+0x90>
   13708:	strd	r4, [sp, #-12]!
   1370c:	str	lr, [sp, #8]
   13710:	ldrb	r0, [r0]
   13714:	ldrb	r1, [r1]
   13718:	cmp	r0, r1
   1371c:	bne	1376c <mycore_strncmp@@Base+0x80>
   13720:	mov	r0, r3
   13724:	sub	r4, r2, #1
   13728:	add	r4, ip, r4
   1372c:	mov	r3, ip
   13730:	rsb	r1, ip, #1
   13734:	add	r5, r1, r3
   13738:	cmp	r3, r4
   1373c:	beq	13774 <mycore_strncmp@@Base+0x88>
   13740:	ldrb	lr, [r0, #1]!
   13744:	ldrb	ip, [r3, #1]!
   13748:	cmp	lr, ip
   1374c:	beq	13734 <mycore_strncmp@@Base+0x48>
   13750:	sub	r0, r2, r5
   13754:	ldrd	r4, [sp]
   13758:	add	sp, sp, #8
   1375c:	pop	{pc}		; (ldr pc, [sp], #4)
   13760:	subs	r0, r0, r1
   13764:	movne	r0, #1
   13768:	bx	lr
   1376c:	mov	r5, #0
   13770:	b	13750 <mycore_strncmp@@Base+0x64>
   13774:	mov	r0, #0
   13778:	b	13754 <mycore_strncmp@@Base+0x68>
   1377c:	mov	r0, r2
   13780:	bx	lr

00013784 <mycore_strcmp@@Base>:
   13784:	mov	r2, r0
   13788:	mov	r3, r1
   1378c:	cmp	r1, #0
   13790:	cmpne	r0, #0
   13794:	bne	137a4 <mycore_strcmp@@Base+0x20>
   13798:	subs	r0, r0, r1
   1379c:	movne	r0, #1
   137a0:	bx	lr
   137a4:	push	{lr}		; (str lr, [sp, #-4]!)
   137a8:	ldrb	r1, [r0]
   137ac:	ldrb	r0, [r3]
   137b0:	cmp	r0, r1
   137b4:	bne	137f0 <mycore_strcmp@@Base+0x6c>
   137b8:	cmp	r1, #0
   137bc:	beq	137fc <mycore_strcmp@@Base+0x78>
   137c0:	mov	r1, r3
   137c4:	mov	r3, r2
   137c8:	rsb	r0, r2, #1
   137cc:	add	lr, r0, r3
   137d0:	ldrb	r2, [r3, #1]!
   137d4:	ldrb	ip, [r1, #1]!
   137d8:	cmp	ip, r2
   137dc:	bne	137f4 <mycore_strcmp@@Base+0x70>
   137e0:	cmp	r2, #0
   137e4:	bne	137cc <mycore_strcmp@@Base+0x48>
   137e8:	mov	r0, #0
   137ec:	b	137f8 <mycore_strcmp@@Base+0x74>
   137f0:	mov	lr, #0
   137f4:	add	r0, lr, #1
   137f8:	pop	{pc}		; (ldr pc, [sp], #4)
   137fc:	mov	r0, #0
   13800:	b	137f8 <mycore_strcmp@@Base+0x74>

00013804 <mycore_strcmp_ws@@Base>:
   13804:	mov	r2, r0
   13808:	mov	r3, r1
   1380c:	cmp	r1, #0
   13810:	cmpne	r0, #0
   13814:	bne	13824 <mycore_strcmp_ws@@Base+0x20>
   13818:	subs	r0, r0, r1
   1381c:	movne	r0, #1
   13820:	bx	lr
   13824:	ldrb	r0, [r0]
   13828:	ldrb	r1, [r1]
   1382c:	cmp	r1, r0
   13830:	bne	138d0 <mycore_strcmp_ws@@Base+0xcc>
   13834:	sub	r1, r0, #9
   13838:	uxtb	r1, r1
   1383c:	sub	ip, r0, #12
   13840:	uxtb	ip, ip
   13844:	cmp	ip, #1
   13848:	cmphi	r1, #1
   1384c:	movls	r1, #1
   13850:	movhi	r1, #0
   13854:	tst	r0, #223	; 0xdf
   13858:	moveq	r1, #1
   1385c:	cmp	r1, #0
   13860:	bne	138c8 <mycore_strcmp_ws@@Base+0xc4>
   13864:	push	{lr}		; (str lr, [sp, #-4]!)
   13868:	mov	r1, r3
   1386c:	mov	lr, r2
   13870:	rsb	r0, r2, #1
   13874:	add	r3, r0, lr
   13878:	ldrb	r2, [lr, #1]!
   1387c:	ldrb	ip, [r1, #1]!
   13880:	cmp	ip, r2
   13884:	bne	138c0 <mycore_strcmp_ws@@Base+0xbc>
   13888:	sub	r3, r2, #12
   1388c:	uxtb	r3, r3
   13890:	sub	ip, r2, #9
   13894:	uxtb	ip, ip
   13898:	cmp	ip, #1
   1389c:	cmphi	r3, #1
   138a0:	movls	r3, #1
   138a4:	movhi	r3, #0
   138a8:	tst	r2, #223	; 0xdf
   138ac:	moveq	r3, #1
   138b0:	cmp	r3, #0
   138b4:	beq	13874 <mycore_strcmp_ws@@Base+0x70>
   138b8:	mov	r0, #0
   138bc:	pop	{pc}		; (ldr pc, [sp], #4)
   138c0:	add	r0, r3, #1
   138c4:	b	138bc <mycore_strcmp_ws@@Base+0xb8>
   138c8:	mov	r0, #0
   138cc:	bx	lr
   138d0:	mov	r3, #0
   138d4:	add	r0, r3, #1
   138d8:	bx	lr

000138dc <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   138dc:	ldrb	r2, [r0]
   138e0:	cmp	r2, #0
   138e4:	beq	13950 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x74>
   138e8:	ldr	r3, [pc, #120]	; 13968 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x8c>
   138ec:	add	r3, pc, r3
   138f0:	ldrb	ip, [r1]
   138f4:	ldrb	r2, [r3, r2]
   138f8:	ldrb	r3, [r3, ip]
   138fc:	cmp	r2, r3
   13900:	bne	13958 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x7c>
   13904:	ldr	r2, [pc, #96]	; 1396c <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x90>
   13908:	add	r2, pc, r2
   1390c:	ldrb	r3, [r0, #1]!
   13910:	cmp	r3, #0
   13914:	beq	13960 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x84>
   13918:	push	{lr}		; (str lr, [sp, #-4]!)
   1391c:	b	1392c <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x50>
   13920:	ldrb	r3, [r0, #1]!
   13924:	cmp	r3, #0
   13928:	beq	13948 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x6c>
   1392c:	ldrb	lr, [r1, #1]!
   13930:	ldrb	ip, [r2, r3]
   13934:	ldrb	r3, [r2, lr]
   13938:	cmp	ip, r3
   1393c:	beq	13920 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x44>
   13940:	mov	r0, #0
   13944:	b	1394c <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x70>
   13948:	mov	r0, #1
   1394c:	pop	{pc}		; (ldr pc, [sp], #4)
   13950:	mov	r0, #1
   13954:	bx	lr
   13958:	mov	r0, #0
   1395c:	bx	lr
   13960:	mov	r0, #1
   13964:	bx	lr
   13968:	muleq	r1, r4, r5
   1396c:	andeq	pc, r1, r8, ror r5	; <UNPREDICTABLE>

00013970 <mycore_utils_avl_tree_create@@Base>:
   13970:	str	r4, [sp, #-8]!
   13974:	str	lr, [sp, #4]
   13978:	mov	r1, #4
   1397c:	mov	r0, #1
   13980:	bl	feb4 <mycore_calloc@plt>
   13984:	ldr	r4, [sp]
   13988:	add	sp, sp, #4
   1398c:	pop	{pc}		; (ldr pc, [sp], #4)

00013990 <mycore_utils_avl_tree_init@@Base>:
   13990:	str	r4, [sp, #-8]!
   13994:	str	lr, [sp, #4]
   13998:	mov	r4, r0
   1399c:	bl	ffbc <mcobject_create@plt>
   139a0:	str	r0, [r4]
   139a4:	cmp	r0, #0
   139a8:	moveq	r0, #2
   139ac:	beq	139c4 <mycore_utils_avl_tree_init@@Base+0x34>
   139b0:	mov	r2, #24
   139b4:	mov	r1, #256	; 0x100
   139b8:	bl	1070c <mcobject_init@plt>
   139bc:	adds	r0, r0, #0
   139c0:	movne	r0, #1
   139c4:	ldr	r4, [sp]
   139c8:	add	sp, sp, #4
   139cc:	pop	{pc}		; (ldr pc, [sp], #4)

000139d0 <mycore_utils_avl_tree_clean@@Base>:
   139d0:	str	r4, [sp, #-8]!
   139d4:	str	lr, [sp, #4]
   139d8:	ldr	r0, [r0]
   139dc:	bl	10f04 <mcobject_clean@plt>
   139e0:	ldr	r4, [sp]
   139e4:	add	sp, sp, #4
   139e8:	pop	{pc}		; (ldr pc, [sp], #4)

000139ec <mycore_utils_avl_tree_destroy@@Base>:
   139ec:	strd	r4, [sp, #-16]!
   139f0:	str	r6, [sp, #8]
   139f4:	str	lr, [sp, #12]
   139f8:	subs	r4, r0, #0
   139fc:	beq	13a18 <mycore_utils_avl_tree_destroy@@Base+0x2c>
   13a00:	mov	r5, r1
   13a04:	mov	r1, #1
   13a08:	ldr	r0, [r4]
   13a0c:	bl	fd70 <mcobject_destroy@plt>
   13a10:	cmp	r5, #0
   13a14:	bne	13a2c <mycore_utils_avl_tree_destroy@@Base+0x40>
   13a18:	mov	r0, r4
   13a1c:	ldrd	r4, [sp]
   13a20:	ldr	r6, [sp, #8]
   13a24:	add	sp, sp, #12
   13a28:	pop	{pc}		; (ldr pc, [sp], #4)
   13a2c:	mov	r0, r4
   13a30:	bl	10d60 <mycore_free@plt>
   13a34:	mov	r4, #0
   13a38:	b	13a18 <mycore_utils_avl_tree_destroy@@Base+0x2c>

00013a3c <mycore_utils_avl_tree_node_create_root@@Base>:
   13a3c:	strd	r4, [sp, #-16]!
   13a40:	str	r6, [sp, #8]
   13a44:	str	lr, [sp, #12]
   13a48:	mov	r5, r1
   13a4c:	mov	r4, r2
   13a50:	mov	r1, #0
   13a54:	ldr	r0, [r0]
   13a58:	bl	109f4 <mcobject_malloc@plt>
   13a5c:	mov	r2, #0
   13a60:	str	r2, [r0, #8]
   13a64:	str	r2, [r0, #12]
   13a68:	str	r2, [r0, #16]
   13a6c:	str	r2, [r0, #20]
   13a70:	str	r5, [r0, #4]
   13a74:	str	r4, [r0]
   13a78:	ldrd	r4, [sp]
   13a7c:	ldr	r6, [sp, #8]
   13a80:	add	sp, sp, #12
   13a84:	pop	{pc}		; (ldr pc, [sp], #4)

00013a88 <mycore_utils_avl_tree_node_clean@@Base>:
   13a88:	mov	r3, #0
   13a8c:	str	r3, [r0]
   13a90:	str	r3, [r0, #4]
   13a94:	str	r3, [r0, #8]
   13a98:	str	r3, [r0, #12]
   13a9c:	str	r3, [r0, #16]
   13aa0:	str	r3, [r0, #20]
   13aa4:	bx	lr

00013aa8 <mycore_utils_avl_tree_node_height@@Base>:
   13aa8:	cmp	r0, #0
   13aac:	ldrshne	r0, [r0, #20]
   13ab0:	moveq	r0, #0
   13ab4:	bx	lr

00013ab8 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   13ab8:	strd	r4, [sp, #-16]!
   13abc:	str	r6, [sp, #8]
   13ac0:	str	lr, [sp, #12]
   13ac4:	mov	r5, r0
   13ac8:	ldr	r0, [r0, #12]
   13acc:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13ad0:	mov	r4, r0
   13ad4:	ldr	r0, [r5, #8]
   13ad8:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13adc:	sub	r0, r4, r0
   13ae0:	sxth	r0, r0
   13ae4:	ldrd	r4, [sp]
   13ae8:	ldr	r6, [sp, #8]
   13aec:	add	sp, sp, #12
   13af0:	pop	{pc}		; (ldr pc, [sp], #4)

00013af4 <mycore_utils_avl_tree_node_set_height@@Base>:
   13af4:	strd	r4, [sp, #-16]!
   13af8:	str	r6, [sp, #8]
   13afc:	str	lr, [sp, #12]
   13b00:	mov	r5, r0
   13b04:	ldr	r0, [r0, #8]
   13b08:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13b0c:	mov	r4, r0
   13b10:	ldr	r0, [r5, #12]
   13b14:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13b18:	cmp	r4, r0
   13b1c:	movge	r0, r4
   13b20:	add	r0, r0, #1
   13b24:	strh	r0, [r5, #20]
   13b28:	ldrd	r4, [sp]
   13b2c:	ldr	r6, [sp, #8]
   13b30:	add	sp, sp, #12
   13b34:	pop	{pc}		; (ldr pc, [sp], #4)

00013b38 <mycore_utils_avl_tree_node_rotate_right@@Base>:
   13b38:	str	r4, [sp, #-8]!
   13b3c:	str	lr, [sp, #4]
   13b40:	ldr	r4, [r0, #8]
   13b44:	ldr	r3, [r0, #16]
   13b48:	str	r3, [r4, #16]
   13b4c:	ldr	r3, [r4, #12]
   13b50:	cmp	r3, #0
   13b54:	strne	r0, [r3, #16]
   13b58:	ldr	r3, [r4, #12]
   13b5c:	str	r3, [r0, #8]
   13b60:	str	r4, [r0, #16]
   13b64:	str	r0, [r4, #12]
   13b68:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13b6c:	mov	r0, r4
   13b70:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13b74:	mov	r0, r4
   13b78:	ldr	r4, [sp]
   13b7c:	add	sp, sp, #4
   13b80:	pop	{pc}		; (ldr pc, [sp], #4)

00013b84 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   13b84:	str	r4, [sp, #-8]!
   13b88:	str	lr, [sp, #4]
   13b8c:	ldr	r4, [r0, #12]
   13b90:	ldr	r3, [r0, #16]
   13b94:	str	r3, [r4, #16]
   13b98:	ldr	r3, [r4, #8]
   13b9c:	cmp	r3, #0
   13ba0:	strne	r0, [r3, #16]
   13ba4:	ldr	r3, [r4, #8]
   13ba8:	str	r3, [r0, #12]
   13bac:	str	r4, [r0, #16]
   13bb0:	str	r0, [r4, #8]
   13bb4:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13bb8:	mov	r0, r4
   13bbc:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13bc0:	mov	r0, r4
   13bc4:	ldr	r4, [sp]
   13bc8:	add	sp, sp, #4
   13bcc:	pop	{pc}		; (ldr pc, [sp], #4)

00013bd0 <mycore_utils_avl_tree_node_balance@@Base>:
   13bd0:	strd	r4, [sp, #-16]!
   13bd4:	str	r6, [sp, #8]
   13bd8:	str	lr, [sp, #12]
   13bdc:	mov	r4, r0
   13be0:	mov	r6, r1
   13be4:	ldr	r0, [r0, #8]
   13be8:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13bec:	mov	r5, r0
   13bf0:	ldr	r0, [r4, #12]
   13bf4:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13bf8:	cmp	r5, r0
   13bfc:	movge	r3, r5
   13c00:	movlt	r3, r0
   13c04:	add	r3, r3, #1
   13c08:	strh	r3, [r4, #20]
   13c0c:	sub	r0, r0, r5
   13c10:	cmn	r0, #2
   13c14:	beq	13c84 <mycore_utils_avl_tree_node_balance@@Base+0xb4>
   13c18:	cmp	r0, #2
   13c1c:	bne	13ce8 <mycore_utils_avl_tree_node_balance@@Base+0x118>
   13c20:	ldr	r0, [r4, #12]
   13c24:	bl	fd4c <mycore_utils_avl_tree_node_balance_factor@plt>
   13c28:	cmp	r0, #0
   13c2c:	blt	13c58 <mycore_utils_avl_tree_node_balance@@Base+0x88>
   13c30:	ldr	r5, [r4, #16]
   13c34:	cmp	r5, #0
   13c38:	beq	13c78 <mycore_utils_avl_tree_node_balance@@Base+0xa8>
   13c3c:	ldr	r3, [r5, #12]
   13c40:	cmp	r3, r4
   13c44:	beq	13c68 <mycore_utils_avl_tree_node_balance@@Base+0x98>
   13c48:	mov	r0, r4
   13c4c:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   13c50:	str	r0, [r5, #8]
   13c54:	b	13cf8 <mycore_utils_avl_tree_node_balance@@Base+0x128>
   13c58:	ldr	r0, [r4, #12]
   13c5c:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13c60:	str	r0, [r4, #12]
   13c64:	b	13c30 <mycore_utils_avl_tree_node_balance@@Base+0x60>
   13c68:	mov	r0, r4
   13c6c:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   13c70:	str	r0, [r5, #12]
   13c74:	b	13cf8 <mycore_utils_avl_tree_node_balance@@Base+0x128>
   13c78:	mov	r0, r4
   13c7c:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   13c80:	b	13cf8 <mycore_utils_avl_tree_node_balance@@Base+0x128>
   13c84:	ldr	r0, [r4, #8]
   13c88:	bl	fd4c <mycore_utils_avl_tree_node_balance_factor@plt>
   13c8c:	cmp	r0, #0
   13c90:	bgt	13cbc <mycore_utils_avl_tree_node_balance@@Base+0xec>
   13c94:	ldr	r5, [r4, #16]
   13c98:	cmp	r5, #0
   13c9c:	beq	13cdc <mycore_utils_avl_tree_node_balance@@Base+0x10c>
   13ca0:	ldr	r3, [r5, #12]
   13ca4:	cmp	r3, r4
   13ca8:	beq	13ccc <mycore_utils_avl_tree_node_balance@@Base+0xfc>
   13cac:	mov	r0, r4
   13cb0:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13cb4:	str	r0, [r5, #8]
   13cb8:	b	13cf8 <mycore_utils_avl_tree_node_balance@@Base+0x128>
   13cbc:	ldr	r0, [r4, #8]
   13cc0:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   13cc4:	str	r0, [r4, #8]
   13cc8:	b	13c94 <mycore_utils_avl_tree_node_balance@@Base+0xc4>
   13ccc:	mov	r0, r4
   13cd0:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13cd4:	str	r0, [r5, #12]
   13cd8:	b	13cf8 <mycore_utils_avl_tree_node_balance@@Base+0x128>
   13cdc:	mov	r0, r4
   13ce0:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13ce4:	b	13cf8 <mycore_utils_avl_tree_node_balance@@Base+0x128>
   13ce8:	ldr	r3, [r4, #16]
   13cec:	cmp	r3, #0
   13cf0:	streq	r4, [r6]
   13cf4:	ldr	r0, [r4, #16]
   13cf8:	ldrd	r4, [sp]
   13cfc:	ldr	r6, [sp, #8]
   13d00:	add	sp, sp, #12
   13d04:	pop	{pc}		; (ldr pc, [sp], #4)

00013d08 <mycore_utils_avl_tree_add@@Base>:
   13d08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13d0c:	strd	r6, [sp, #8]
   13d10:	str	r8, [sp, #16]
   13d14:	str	lr, [sp, #20]
   13d18:	mov	r7, r1
   13d1c:	mov	r5, r2
   13d20:	mov	r8, r3
   13d24:	ldr	r4, [r1]
   13d28:	cmp	r4, #0
   13d2c:	beq	13d48 <mycore_utils_avl_tree_add@@Base+0x40>
   13d30:	mov	r1, #0
   13d34:	ldr	r0, [r0]
   13d38:	bl	109f4 <mcobject_malloc@plt>
   13d3c:	mov	r6, r0
   13d40:	bl	10f58 <mycore_utils_avl_tree_node_clean@plt>
   13d44:	b	13d84 <mycore_utils_avl_tree_add@@Base+0x7c>
   13d48:	mov	r2, r3
   13d4c:	mov	r1, r5
   13d50:	bl	10e68 <mycore_utils_avl_tree_node_create_root@plt>
   13d54:	str	r0, [r7]
   13d58:	b	13d60 <mycore_utils_avl_tree_add@@Base+0x58>
   13d5c:	str	r8, [r4]
   13d60:	ldrd	r4, [sp]
   13d64:	ldrd	r6, [sp, #8]
   13d68:	ldr	r8, [sp, #16]
   13d6c:	add	sp, sp, #20
   13d70:	pop	{pc}		; (ldr pc, [sp], #4)
   13d74:	ldr	r3, [r4, #12]
   13d78:	cmp	r3, #0
   13d7c:	beq	13dcc <mycore_utils_avl_tree_add@@Base+0xc4>
   13d80:	mov	r4, r3
   13d84:	ldr	r3, [r4, #4]
   13d88:	cmp	r3, r5
   13d8c:	beq	13d5c <mycore_utils_avl_tree_add@@Base+0x54>
   13d90:	cmp	r3, r5
   13d94:	bls	13d74 <mycore_utils_avl_tree_add@@Base+0x6c>
   13d98:	ldr	r3, [r4, #8]
   13d9c:	cmp	r3, #0
   13da0:	bne	13d80 <mycore_utils_avl_tree_add@@Base+0x78>
   13da4:	str	r6, [r4, #8]
   13da8:	str	r4, [r6, #16]
   13dac:	str	r5, [r6, #4]
   13db0:	str	r8, [r6]
   13db4:	mov	r1, r7
   13db8:	mov	r0, r6
   13dbc:	bl	109ac <mycore_utils_avl_tree_node_balance@plt>
   13dc0:	subs	r6, r0, #0
   13dc4:	bne	13db4 <mycore_utils_avl_tree_add@@Base+0xac>
   13dc8:	b	13d60 <mycore_utils_avl_tree_add@@Base+0x58>
   13dcc:	str	r6, [r4, #12]
   13dd0:	str	r4, [r6, #16]
   13dd4:	str	r5, [r6, #4]
   13dd8:	str	r8, [r6]
   13ddc:	b	13db4 <mycore_utils_avl_tree_add@@Base+0xac>

00013de0 <mycore_utils_avl_tree_find_min@@Base>:
   13de0:	cmp	r0, #0
   13de4:	bne	13df0 <mycore_utils_avl_tree_find_min@@Base+0x10>
   13de8:	bx	lr
   13dec:	mov	r0, r3
   13df0:	ldr	r3, [r0, #12]
   13df4:	cmp	r3, #0
   13df8:	bne	13dec <mycore_utils_avl_tree_find_min@@Base+0xc>
   13dfc:	bx	lr

00013e00 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   13e00:	str	r4, [sp, #-8]!
   13e04:	str	lr, [sp, #4]
   13e08:	mov	r3, r0
   13e0c:	mov	r4, r2
   13e10:	cmp	r1, #0
   13e14:	beq	13ecc <mycore_utils_avl_tree_rotate_for_delete@@Base+0xcc>
   13e18:	ldr	r2, [r0, #8]
   13e1c:	cmp	r2, r1
   13e20:	beq	13ea4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xa4>
   13e24:	ldr	r2, [r1, #16]
   13e28:	mov	r0, #0
   13e2c:	str	r0, [r2, #12]
   13e30:	ldr	r2, [r3, #16]
   13e34:	str	r2, [r1, #16]
   13e38:	ldr	r2, [r3, #12]
   13e3c:	str	r2, [r1, #12]
   13e40:	ldr	r2, [r3, #8]
   13e44:	str	r2, [r1, #8]
   13e48:	cmp	r2, r0
   13e4c:	strne	r1, [r2, #16]
   13e50:	ldr	r2, [r3, #12]
   13e54:	cmp	r2, #0
   13e58:	strne	r1, [r2, #16]
   13e5c:	mov	r0, r1
   13e60:	ldr	r2, [r3, #16]
   13e64:	cmp	r2, #0
   13e68:	streq	r1, [r4]
   13e6c:	beq	13e80 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x80>
   13e70:	ldr	ip, [r2, #8]
   13e74:	cmp	ip, r3
   13e78:	streq	r1, [r2, #8]
   13e7c:	strne	r1, [r2, #12]
   13e80:	cmp	r0, #0
   13e84:	beq	13e98 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x98>
   13e88:	mov	r1, r4
   13e8c:	bl	109ac <mycore_utils_avl_tree_node_balance@plt>
   13e90:	cmp	r0, #0
   13e94:	bne	13e88 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x88>
   13e98:	ldr	r4, [sp]
   13e9c:	add	sp, sp, #4
   13ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ea4:	ldr	r0, [r1, #8]
   13ea8:	cmp	r0, #0
   13eac:	moveq	r0, r1
   13eb0:	ldr	r2, [r3, #16]
   13eb4:	str	r2, [r1, #16]
   13eb8:	ldr	r2, [r3, #12]
   13ebc:	str	r2, [r1, #12]
   13ec0:	cmp	r2, #0
   13ec4:	strne	r1, [r2, #16]
   13ec8:	b	13e60 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x60>
   13ecc:	ldr	r0, [r0, #16]
   13ed0:	cmp	r0, #0
   13ed4:	beq	13ef0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xf0>
   13ed8:	ldr	r2, [r0, #8]
   13edc:	cmp	r2, r3
   13ee0:	ldr	r3, [r3, #12]
   13ee4:	streq	r3, [r0, #8]
   13ee8:	strne	r3, [r0, #12]
   13eec:	b	13e88 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x88>
   13ef0:	ldr	r3, [r3, #12]
   13ef4:	str	r3, [r2]
   13ef8:	b	13e98 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x98>

00013efc <mycore_utils_avl_tree_delete@@Base>:
   13efc:	strd	r4, [sp, #-16]!
   13f00:	str	r6, [sp, #8]
   13f04:	str	lr, [sp, #12]
   13f08:	ldr	r4, [r1]
   13f0c:	cmp	r4, #0
   13f10:	beq	13f74 <mycore_utils_avl_tree_delete@@Base+0x78>
   13f14:	ldr	r3, [r4, #4]
   13f18:	cmp	r2, r3
   13f1c:	beq	13f40 <mycore_utils_avl_tree_delete@@Base+0x44>
   13f20:	cmp	r2, r3
   13f24:	ldrcc	r4, [r4, #8]
   13f28:	ldrcs	r4, [r4, #12]
   13f2c:	cmp	r4, #0
   13f30:	beq	13f74 <mycore_utils_avl_tree_delete@@Base+0x78>
   13f34:	ldr	r3, [r4, #4]
   13f38:	cmp	r3, r2
   13f3c:	bne	13f20 <mycore_utils_avl_tree_delete@@Base+0x24>
   13f40:	mov	r5, r1
   13f44:	mov	r6, r0
   13f48:	ldr	r0, [r4, #8]
   13f4c:	bl	fcb0 <mycore_utils_avl_tree_find_min@plt>
   13f50:	mov	r2, r5
   13f54:	mov	r1, r0
   13f58:	mov	r0, r4
   13f5c:	bl	1040c <mycore_utils_avl_tree_rotate_for_delete@plt>
   13f60:	ldr	r5, [r4]
   13f64:	mov	r1, r4
   13f68:	ldr	r0, [r6]
   13f6c:	bl	ff20 <mcobject_free@plt>
   13f70:	mov	r4, r5
   13f74:	mov	r0, r4
   13f78:	ldrd	r4, [sp]
   13f7c:	ldr	r6, [sp, #8]
   13f80:	add	sp, sp, #12
   13f84:	pop	{pc}		; (ldr pc, [sp], #4)

00013f88 <mycore_utils_avl_tree_search_by_type@@Base>:
   13f88:	subs	r0, r1, #0
   13f8c:	beq	13fbc <mycore_utils_avl_tree_search_by_type@@Base+0x34>
   13f90:	ldr	r3, [r0, #4]
   13f94:	cmp	r2, r3
   13f98:	beq	13fc0 <mycore_utils_avl_tree_search_by_type@@Base+0x38>
   13f9c:	cmp	r2, r3
   13fa0:	ldrcc	r0, [r0, #8]
   13fa4:	ldrcs	r0, [r0, #12]
   13fa8:	cmp	r0, #0
   13fac:	beq	13fbc <mycore_utils_avl_tree_search_by_type@@Base+0x34>
   13fb0:	ldr	r3, [r0, #4]
   13fb4:	cmp	r3, r2
   13fb8:	bne	13f9c <mycore_utils_avl_tree_search_by_type@@Base+0x14>
   13fbc:	bx	lr
   13fc0:	bx	lr

00013fc4 <mycore_utils_avl_tree_list_all_nodes@@Base>:
   13fc4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13fc8:	strd	r6, [sp, #8]
   13fcc:	str	r8, [sp, #16]
   13fd0:	str	lr, [sp, #20]
   13fd4:	subs	r4, r1, #0
   13fd8:	beq	1401c <mycore_utils_avl_tree_list_all_nodes@@Base+0x58>
   13fdc:	mov	r6, r3
   13fe0:	mov	r5, r2
   13fe4:	mov	r7, r0
   13fe8:	mov	r1, r3
   13fec:	mov	r0, r4
   13ff0:	blx	r2
   13ff4:	mov	r3, r6
   13ff8:	mov	r2, r5
   13ffc:	ldr	r1, [r4, #8]
   14000:	mov	r0, r7
   14004:	bl	13fc4 <mycore_utils_avl_tree_list_all_nodes@@Base>
   14008:	mov	r3, r6
   1400c:	mov	r2, r5
   14010:	ldr	r1, [r4, #12]
   14014:	mov	r0, r7
   14018:	bl	13fc4 <mycore_utils_avl_tree_list_all_nodes@@Base>
   1401c:	ldrd	r4, [sp]
   14020:	ldrd	r6, [sp, #8]
   14024:	ldr	r8, [sp, #16]
   14028:	add	sp, sp, #20
   1402c:	pop	{pc}		; (ldr pc, [sp], #4)

00014030 <mchar_async_create@@Base>:
   14030:	str	r4, [sp, #-8]!
   14034:	str	lr, [sp, #4]
   14038:	mov	r1, #84	; 0x54
   1403c:	mov	r0, #1
   14040:	bl	feb4 <mycore_calloc@plt>
   14044:	ldr	r4, [sp]
   14048:	add	sp, sp, #4
   1404c:	pop	{pc}		; (ldr pc, [sp], #4)

00014050 <mchar_async_mem_malloc@@Base>:
   14050:	strd	r4, [sp, #-16]!
   14054:	str	r6, [sp, #8]
   14058:	str	lr, [sp, #12]
   1405c:	subs	r4, r2, #0
   14060:	beq	1408c <mchar_async_mem_malloc@@Base+0x3c>
   14064:	mov	r5, r3
   14068:	mov	r6, r0
   1406c:	ldr	r0, [r4]
   14070:	cmp	r0, #0
   14074:	beq	140b8 <mchar_async_mem_malloc@@Base+0x68>
   14078:	ldr	r3, [r4, #8]
   1407c:	cmp	r3, r5
   14080:	bcc	1409c <mchar_async_mem_malloc@@Base+0x4c>
   14084:	mov	r3, #0
   14088:	str	r3, [r4, #4]
   1408c:	ldrd	r4, [sp]
   14090:	ldr	r6, [sp, #8]
   14094:	add	sp, sp, #12
   14098:	pop	{pc}		; (ldr pc, [sp], #4)
   1409c:	bl	10d60 <mycore_free@plt>
   140a0:	ldr	r0, [r6]
   140a4:	add	r0, r5, r0
   140a8:	str	r0, [r4, #8]
   140ac:	bl	10c28 <mycore_malloc@plt>
   140b0:	str	r0, [r4]
   140b4:	b	14084 <mchar_async_mem_malloc@@Base+0x34>
   140b8:	ldr	r0, [r6]
   140bc:	cmp	r0, r3
   140c0:	movcc	r0, r3
   140c4:	str	r0, [r4, #8]
   140c8:	bl	10c28 <mycore_malloc@plt>
   140cc:	str	r0, [r4]
   140d0:	b	14084 <mchar_async_mem_malloc@@Base+0x34>

000140d4 <mchar_sync_chunk_find_by_size@@Base>:
   140d4:	ldr	r3, [r0]
   140d8:	ldr	r0, [r3, #12]
   140dc:	cmp	r0, #0
   140e0:	beq	14108 <mchar_sync_chunk_find_by_size@@Base+0x34>
   140e4:	ldr	r3, [r0, #8]
   140e8:	cmp	r1, r3
   140ec:	bls	1410c <mchar_sync_chunk_find_by_size@@Base+0x38>
   140f0:	ldr	r0, [r0, #12]
   140f4:	cmp	r0, #0
   140f8:	beq	14108 <mchar_sync_chunk_find_by_size@@Base+0x34>
   140fc:	ldr	r3, [r0, #8]
   14100:	cmp	r3, r1
   14104:	bcc	140f0 <mchar_sync_chunk_find_by_size@@Base+0x1c>
   14108:	bx	lr
   1410c:	bx	lr

00014110 <mchar_sync_chunk_insert_after@@Base>:
   14110:	ldr	r3, [r0, #12]
   14114:	cmp	r3, r1
   14118:	beq	14158 <mchar_sync_chunk_insert_after@@Base+0x48>
   1411c:	ldr	r3, [r1, #16]
   14120:	cmp	r3, #0
   14124:	ldrne	r2, [r1, #12]
   14128:	strne	r2, [r3, #12]
   1412c:	ldr	r3, [r1, #12]
   14130:	cmp	r3, #0
   14134:	ldrne	r2, [r1, #16]
   14138:	strne	r2, [r3, #16]
   1413c:	ldr	r3, [r0, #12]
   14140:	cmp	r3, #0
   14144:	strne	r1, [r3, #16]
   14148:	ldr	r3, [r0, #12]
   1414c:	str	r3, [r1, #12]
   14150:	str	r0, [r1, #16]
   14154:	str	r1, [r0, #12]
   14158:	bx	lr

0001415c <mchar_async_crop_first_chars_without_cache@@Base>:
   1415c:	subs	r2, r0, #0
   14160:	beq	14178 <mchar_async_crop_first_chars_without_cache@@Base+0x1c>
   14164:	add	r0, r2, r1
   14168:	ldr	r3, [r2, #-4]
   1416c:	sub	r3, r3, r1
   14170:	str	r3, [r0, #-4]
   14174:	bx	lr
   14178:	mov	r0, r2
   1417c:	bx	lr

00014180 <mchar_async_get_size_by_data@@Base>:
   14180:	cmp	r0, #0
   14184:	ldrne	r0, [r0, #-4]
   14188:	moveq	r0, #0
   1418c:	bx	lr

00014190 <mchar_async_cache_init@@Base>:
   14190:	str	r4, [sp, #-8]!
   14194:	str	lr, [sp, #4]
   14198:	mov	r4, r0
   1419c:	mov	r3, #0
   141a0:	str	r3, [r0, #16]
   141a4:	str	r3, [r0, #12]
   141a8:	mov	r3, #1
   141ac:	str	r3, [r0, #8]
   141b0:	mov	r3, #1024	; 0x400
   141b4:	str	r3, [r0, #4]
   141b8:	mov	r0, #20480	; 0x5000
   141bc:	bl	10c28 <mycore_malloc@plt>
   141c0:	str	r0, [r4]
   141c4:	cmp	r0, #0
   141c8:	moveq	r0, #2
   141cc:	beq	14214 <mchar_async_cache_init@@Base+0x84>
   141d0:	mov	r3, #0
   141d4:	str	r3, [r0, #8]
   141d8:	ldr	r2, [r4]
   141dc:	str	r3, [r2, #12]
   141e0:	ldr	r2, [r4]
   141e4:	str	r3, [r2, #4]
   141e8:	ldr	r2, [r4]
   141ec:	str	r3, [r2]
   141f0:	str	r3, [r4, #24]
   141f4:	ldr	r0, [r4, #4]
   141f8:	str	r0, [r4, #28]
   141fc:	lsl	r0, r0, #2
   14200:	bl	10c28 <mycore_malloc@plt>
   14204:	str	r0, [r4, #20]
   14208:	cmp	r0, #0
   1420c:	movne	r0, #0
   14210:	beq	14220 <mchar_async_cache_init@@Base+0x90>
   14214:	ldr	r4, [sp]
   14218:	add	sp, sp, #4
   1421c:	pop	{pc}		; (ldr pc, [sp], #4)
   14220:	ldr	r0, [r4]
   14224:	bl	10d60 <mycore_free@plt>
   14228:	str	r0, [r4]
   1422c:	mov	r0, #2
   14230:	b	14214 <mchar_async_cache_init@@Base+0x84>

00014234 <mchar_async_cache_clean@@Base>:
   14234:	mov	r3, #0
   14238:	str	r3, [r0, #16]
   1423c:	str	r3, [r0, #12]
   14240:	mov	r2, #1
   14244:	str	r2, [r0, #8]
   14248:	str	r3, [r0, #24]
   1424c:	ldr	r2, [r0]
   14250:	cmp	r2, r3
   14254:	beq	14274 <mchar_async_cache_clean@@Base+0x40>
   14258:	str	r3, [r2, #8]
   1425c:	ldr	r2, [r0]
   14260:	str	r3, [r2, #12]
   14264:	ldr	r2, [r0]
   14268:	str	r3, [r2, #4]
   1426c:	ldr	r2, [r0]
   14270:	str	r3, [r2]
   14274:	bx	lr

00014278 <mchar_async_node_clean@@Base>:
   14278:	ldr	r3, [r0, #60]	; 0x3c
   1427c:	cmp	r3, r1
   14280:	bxls	lr
   14284:	str	r4, [sp, #-8]!
   14288:	str	lr, [sp, #4]
   1428c:	add	r1, r1, r1, lsl #3
   14290:	lsl	r1, r1, #2
   14294:	ldr	r3, [r0, #56]	; 0x38
   14298:	add	r0, r3, r1
   1429c:	ldr	r2, [r3, r1]
   142a0:	ldr	r3, [r2, #16]
   142a4:	cmp	r3, #0
   142a8:	bne	142b8 <mchar_async_node_clean@@Base+0x40>
   142ac:	mov	r3, r2
   142b0:	b	142c8 <mchar_async_node_clean@@Base+0x50>
   142b4:	mov	r3, r2
   142b8:	str	r3, [r0]
   142bc:	ldr	r2, [r3, #16]
   142c0:	cmp	r2, #0
   142c4:	bne	142b4 <mchar_async_node_clean@@Base+0x3c>
   142c8:	mov	r2, #0
   142cc:	str	r2, [r3, #4]
   142d0:	add	r0, r0, #4
   142d4:	bl	106b8 <mchar_async_cache_clean@plt>
   142d8:	ldr	r4, [sp]
   142dc:	add	sp, sp, #4
   142e0:	pop	{pc}		; (ldr pc, [sp], #4)

000142e4 <mchar_async_cache_destroy@@Base>:
   142e4:	strd	r4, [sp, #-16]!
   142e8:	str	r6, [sp, #8]
   142ec:	str	lr, [sp, #12]
   142f0:	subs	r4, r0, #0
   142f4:	beq	14324 <mchar_async_cache_destroy@@Base+0x40>
   142f8:	mov	r5, r1
   142fc:	ldr	r0, [r4]
   14300:	cmp	r0, #0
   14304:	beq	1430c <mchar_async_cache_destroy@@Base+0x28>
   14308:	bl	10d60 <mycore_free@plt>
   1430c:	ldr	r0, [r4, #20]
   14310:	cmp	r0, #0
   14314:	beq	1431c <mchar_async_cache_destroy@@Base+0x38>
   14318:	bl	10d60 <mycore_free@plt>
   1431c:	cmp	r5, #0
   14320:	bne	14338 <mchar_async_cache_destroy@@Base+0x54>
   14324:	mov	r0, r4
   14328:	ldrd	r4, [sp]
   1432c:	ldr	r6, [sp, #8]
   14330:	add	sp, sp, #12
   14334:	pop	{pc}		; (ldr pc, [sp], #4)
   14338:	mov	r0, r4
   1433c:	bl	10d60 <mycore_free@plt>
   14340:	mov	r4, #0
   14344:	b	14324 <mchar_async_cache_destroy@@Base+0x40>

00014348 <mchar_async_destroy@@Base>:
   14348:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1434c:	strd	r6, [sp, #8]
   14350:	strd	r8, [sp, #16]
   14354:	str	sl, [sp, #24]
   14358:	str	lr, [sp, #28]
   1435c:	subs	r4, r0, #0
   14360:	beq	144ac <mchar_async_destroy@@Base+0x164>
   14364:	mov	r9, r1
   14368:	ldr	r3, [r4, #56]	; 0x38
   1436c:	cmp	r3, #0
   14370:	beq	143c4 <mchar_async_destroy@@Base+0x7c>
   14374:	ldr	r3, [r4, #60]	; 0x3c
   14378:	cmp	r3, #0
   1437c:	beq	143b4 <mchar_async_destroy@@Base+0x6c>
   14380:	mov	r5, #0
   14384:	mov	r6, r5
   14388:	mov	r7, r5
   1438c:	ldr	r0, [r4, #56]	; 0x38
   14390:	add	r0, r0, r5
   14394:	mov	r1, r7
   14398:	add	r0, r0, #4
   1439c:	bl	10820 <mchar_async_cache_destroy@plt>
   143a0:	add	r6, r6, #1
   143a4:	add	r5, r5, #36	; 0x24
   143a8:	ldr	r3, [r4, #60]	; 0x3c
   143ac:	cmp	r3, r6
   143b0:	bhi	1438c <mchar_async_destroy@@Base+0x44>
   143b4:	ldr	r0, [r4, #56]	; 0x38
   143b8:	bl	10d60 <mycore_free@plt>
   143bc:	mov	r3, #0
   143c0:	str	r3, [r4, #56]	; 0x38
   143c4:	ldr	r0, [r4, #68]	; 0x44
   143c8:	cmp	r0, #0
   143cc:	beq	143d4 <mchar_async_destroy@@Base+0x8c>
   143d0:	bl	10d60 <mycore_free@plt>
   143d4:	ldr	r3, [r4, #4]
   143d8:	cmp	r3, #0
   143dc:	beq	1447c <mchar_async_destroy@@Base+0x134>
   143e0:	ldr	r3, [r4, #12]
   143e4:	cmp	r3, #0
   143e8:	beq	1446c <mchar_async_destroy@@Base+0x124>
   143ec:	mov	r8, #0
   143f0:	b	14440 <mchar_async_destroy@@Base+0xf8>
   143f4:	bl	10d60 <mycore_free@plt>
   143f8:	add	r6, r6, #1
   143fc:	add	r5, r5, #20
   14400:	ldr	r3, [r4, #16]
   14404:	cmp	r3, r6
   14408:	bls	14424 <mchar_async_destroy@@Base+0xdc>
   1440c:	ldr	r3, [r4, #4]
   14410:	ldr	r3, [r3, r7]
   14414:	ldr	r0, [r3, r5]
   14418:	cmp	r0, #0
   1441c:	bne	143f4 <mchar_async_destroy@@Base+0xac>
   14420:	b	143f8 <mchar_async_destroy@@Base+0xb0>
   14424:	ldr	r3, [r4, #4]
   14428:	ldr	r0, [r3, r7]
   1442c:	bl	10d60 <mycore_free@plt>
   14430:	add	r8, r8, #1
   14434:	ldr	r3, [r4, #12]
   14438:	cmp	r3, r8
   1443c:	bls	1446c <mchar_async_destroy@@Base+0x124>
   14440:	lsl	r7, r8, #2
   14444:	ldr	r3, [r4, #4]
   14448:	ldr	r3, [r3, r8, lsl #2]
   1444c:	cmp	r3, #0
   14450:	beq	14430 <mchar_async_destroy@@Base+0xe8>
   14454:	ldr	r3, [r4, #16]
   14458:	cmp	r3, #0
   1445c:	beq	14424 <mchar_async_destroy@@Base+0xdc>
   14460:	mov	r5, #0
   14464:	mov	r6, r5
   14468:	b	1440c <mchar_async_destroy@@Base+0xc4>
   1446c:	ldr	r0, [r4, #4]
   14470:	bl	10d60 <mycore_free@plt>
   14474:	mov	r3, #0
   14478:	str	r3, [r4, #4]
   1447c:	mov	r1, #0
   14480:	add	r0, r4, #24
   14484:	bl	10820 <mchar_async_cache_destroy@plt>
   14488:	mov	r1, #1
   1448c:	ldr	r0, [r4, #80]	; 0x50
   14490:	bl	10154 <mcsync_destroy@plt>
   14494:	mov	r2, #84	; 0x54
   14498:	mov	r1, #0
   1449c:	mov	r0, r4
   144a0:	bl	10844 <memset@plt>
   144a4:	cmp	r9, #0
   144a8:	bne	144c8 <mchar_async_destroy@@Base+0x180>
   144ac:	mov	r0, r4
   144b0:	ldrd	r4, [sp]
   144b4:	ldrd	r6, [sp, #8]
   144b8:	ldrd	r8, [sp, #16]
   144bc:	ldr	sl, [sp, #24]
   144c0:	add	sp, sp, #28
   144c4:	pop	{pc}		; (ldr pc, [sp], #4)
   144c8:	mov	r0, r4
   144cc:	bl	10d60 <mycore_free@plt>
   144d0:	mov	r4, #0
   144d4:	b	144ac <mchar_async_destroy@@Base+0x164>

000144d8 <mchar_async_cache_malloc@@Base>:
   144d8:	ldr	r3, [r0, #24]
   144dc:	cmp	r3, #0
   144e0:	bne	1451c <mchar_async_cache_malloc@@Base+0x44>
   144e4:	str	r4, [sp, #-8]!
   144e8:	str	lr, [sp, #4]
   144ec:	mov	r4, r0
   144f0:	ldr	r3, [r0, #8]
   144f4:	add	r3, r3, #1
   144f8:	str	r3, [r0, #8]
   144fc:	ldr	r1, [r0, #4]
   14500:	cmp	r3, r1
   14504:	bcs	14530 <mchar_async_cache_malloc@@Base+0x58>
   14508:	ldr	r0, [r4, #8]
   1450c:	sub	r0, r0, #1
   14510:	ldr	r4, [sp]
   14514:	add	sp, sp, #4
   14518:	pop	{pc}		; (ldr pc, [sp], #4)
   1451c:	sub	r3, r3, #1
   14520:	str	r3, [r0, #24]
   14524:	ldr	r2, [r0, #20]
   14528:	ldr	r0, [r2, r3, lsl #2]
   1452c:	bx	lr
   14530:	lsl	r3, r1, #1
   14534:	str	r3, [r0, #4]
   14538:	add	r1, r3, r1, lsl #3
   1453c:	lsl	r1, r1, #2
   14540:	ldr	r0, [r0]
   14544:	bl	fb84 <mycore_realloc@plt>
   14548:	cmp	r0, #0
   1454c:	strne	r0, [r4]
   14550:	b	14508 <mchar_async_cache_malloc@@Base+0x30>

00014554 <mchar_async_cache_delete@@Base>:
   14554:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14558:	strd	r6, [sp, #8]
   1455c:	strd	r8, [sp, #16]
   14560:	str	sl, [sp, #24]
   14564:	str	lr, [sp, #28]
   14568:	ldr	r2, [r0]
   1456c:	ldr	r4, [r0, #12]
   14570:	cmp	r4, #0
   14574:	beq	14780 <mchar_async_cache_delete@@Base+0x22c>
   14578:	add	r3, r4, r4, lsl #2
   1457c:	add	r3, r2, r3, lsl #2
   14580:	ldr	ip, [r3, #4]
   14584:	cmp	ip, r1
   14588:	bcs	145b4 <mchar_async_cache_delete@@Base+0x60>
   1458c:	ldr	r4, [r3, #12]
   14590:	cmp	r4, #0
   14594:	beq	14780 <mchar_async_cache_delete@@Base+0x22c>
   14598:	add	r3, r4, r4, lsl #2
   1459c:	add	r3, r2, r3, lsl #2
   145a0:	ldr	ip, [r3, #4]
   145a4:	cmp	ip, r1
   145a8:	bcc	1458c <mchar_async_cache_delete@@Base+0x38>
   145ac:	b	145b4 <mchar_async_cache_delete@@Base+0x60>
   145b0:	mov	r4, r5
   145b4:	add	r3, r4, r4, lsl #2
   145b8:	add	r3, r2, r3, lsl #2
   145bc:	ldr	r5, [r3, #12]
   145c0:	add	ip, r5, r5, lsl #2
   145c4:	add	ip, r2, ip, lsl #2
   145c8:	ldr	lr, [ip, #4]
   145cc:	cmp	lr, r1
   145d0:	beq	145b0 <mchar_async_cache_delete@@Base+0x5c>
   145d4:	ldr	r1, [r3, #16]
   145d8:	cmp	r1, #0
   145dc:	beq	146e8 <mchar_async_cache_delete@@Base+0x194>
   145e0:	add	r6, r1, r1, lsl #2
   145e4:	add	r6, r2, r6, lsl #2
   145e8:	ldr	lr, [r6, #8]
   145ec:	cmp	lr, r4
   145f0:	beq	14620 <mchar_async_cache_delete@@Base+0xcc>
   145f4:	ldr	lr, [r3, #8]
   145f8:	cmp	lr, #0
   145fc:	streq	r5, [r6, #12]
   14600:	streq	r1, [ip, #16]
   14604:	beq	1474c <mchar_async_cache_delete@@Base+0x1f8>
   14608:	cmp	r5, #0
   1460c:	beq	146d0 <mchar_async_cache_delete@@Base+0x17c>
   14610:	add	lr, lr, lr, lsl #2
   14614:	add	r9, r2, lr, lsl #2
   14618:	ldr	r7, [r9, #12]
   1461c:	b	146ac <mchar_async_cache_delete@@Base+0x158>
   14620:	cmp	r5, #0
   14624:	beq	1468c <mchar_async_cache_delete@@Base+0x138>
   14628:	ldr	r8, [r3, #8]
   1462c:	cmp	r8, #0
   14630:	beq	14674 <mchar_async_cache_delete@@Base+0x120>
   14634:	ldr	r5, [ip, #8]
   14638:	b	14640 <mchar_async_cache_delete@@Base+0xec>
   1463c:	mov	r5, r7
   14640:	add	lr, r5, r5, lsl #2
   14644:	add	lr, r2, lr, lsl #2
   14648:	ldr	r7, [lr, #8]
   1464c:	cmp	r7, #0
   14650:	bne	1463c <mchar_async_cache_delete@@Base+0xe8>
   14654:	cmp	r5, #0
   14658:	streq	r8, [ip, #8]
   1465c:	beq	14674 <mchar_async_cache_delete@@Base+0x120>
   14660:	str	r8, [lr, #8]
   14664:	ldr	ip, [r3, #8]
   14668:	add	ip, ip, ip, lsl #2
   1466c:	add	ip, r2, ip, lsl #2
   14670:	str	r5, [ip, #16]
   14674:	ldr	r3, [r3, #12]
   14678:	str	r3, [r6, #8]
   1467c:	add	r3, r3, r3, lsl #2
   14680:	add	r2, r2, r3, lsl #2
   14684:	str	r1, [r2, #16]
   14688:	b	1474c <mchar_async_cache_delete@@Base+0x1f8>
   1468c:	ldr	ip, [r3, #8]
   14690:	str	ip, [r6, #8]
   14694:	ldr	r3, [r3, #8]
   14698:	add	r3, r3, r3, lsl #2
   1469c:	add	r2, r2, r3, lsl #2
   146a0:	str	r1, [r2, #16]
   146a4:	b	1474c <mchar_async_cache_delete@@Base+0x1f8>
   146a8:	mov	r7, r8
   146ac:	add	lr, r7, r7, lsl #2
   146b0:	add	lr, r2, lr, lsl #2
   146b4:	ldr	r8, [lr, #12]
   146b8:	cmp	r8, #0
   146bc:	bne	146a8 <mchar_async_cache_delete@@Base+0x154>
   146c0:	cmp	r7, #0
   146c4:	strne	r5, [lr, #12]
   146c8:	strne	r7, [ip, #16]
   146cc:	streq	r5, [r9, #12]
   146d0:	ldr	r3, [r3, #8]
   146d4:	str	r3, [r6, #12]
   146d8:	add	r3, r3, r3, lsl #2
   146dc:	add	r2, r2, r3, lsl #2
   146e0:	str	r1, [r2, #16]
   146e4:	b	1474c <mchar_async_cache_delete@@Base+0x1f8>
   146e8:	ldr	r1, [r3, #8]
   146ec:	cmp	r1, #0
   146f0:	beq	1479c <mchar_async_cache_delete@@Base+0x248>
   146f4:	cmp	r5, #0
   146f8:	beq	14734 <mchar_async_cache_delete@@Base+0x1e0>
   146fc:	add	r1, r1, r1, lsl #2
   14700:	add	r7, r2, r1, lsl #2
   14704:	ldr	lr, [r7, #12]
   14708:	b	14710 <mchar_async_cache_delete@@Base+0x1bc>
   1470c:	mov	lr, r6
   14710:	add	r1, lr, lr, lsl #2
   14714:	add	r1, r2, r1, lsl #2
   14718:	ldr	r6, [r1, #12]
   1471c:	cmp	r6, #0
   14720:	bne	1470c <mchar_async_cache_delete@@Base+0x1b8>
   14724:	cmp	lr, #0
   14728:	strne	r5, [r1, #12]
   1472c:	strne	lr, [ip, #16]
   14730:	streq	r5, [r7, #12]
   14734:	ldr	r3, [r3, #8]
   14738:	str	r3, [r0, #12]
   1473c:	add	r3, r3, r3, lsl #2
   14740:	add	r2, r2, r3, lsl #2
   14744:	mov	r3, #0
   14748:	str	r3, [r2, #16]
   1474c:	mov	r5, r0
   14750:	ldr	r2, [r0, #24]
   14754:	ldr	r3, [r0, #20]
   14758:	str	r4, [r3, r2, lsl #2]
   1475c:	ldr	r3, [r0, #24]
   14760:	add	r3, r3, #1
   14764:	str	r3, [r0, #24]
   14768:	ldr	r1, [r0, #28]
   1476c:	cmp	r3, r1
   14770:	bcs	147ac <mchar_async_cache_delete@@Base+0x258>
   14774:	ldr	r3, [r5, #16]
   14778:	sub	r3, r3, #1
   1477c:	str	r3, [r5, #16]
   14780:	mov	r0, r4
   14784:	ldrd	r4, [sp]
   14788:	ldrd	r6, [sp, #8]
   1478c:	ldrd	r8, [sp, #16]
   14790:	ldr	sl, [sp, #24]
   14794:	add	sp, sp, #28
   14798:	pop	{pc}		; (ldr pc, [sp], #4)
   1479c:	str	r5, [r0, #12]
   147a0:	mov	r3, #0
   147a4:	str	r3, [ip, #16]
   147a8:	b	1474c <mchar_async_cache_delete@@Base+0x1f8>
   147ac:	lsl	r6, r1, #1
   147b0:	lsl	r1, r1, #3
   147b4:	ldr	r0, [r0, #20]
   147b8:	bl	fb84 <mycore_realloc@plt>
   147bc:	cmp	r0, #0
   147c0:	moveq	r4, #0
   147c4:	beq	14780 <mchar_async_cache_delete@@Base+0x22c>
   147c8:	str	r0, [r5, #20]
   147cc:	str	r6, [r5, #28]
   147d0:	b	14774 <mchar_async_cache_delete@@Base+0x220>

000147d4 <mchar_async_chunk_malloc_without_lock@@Base>:
   147d4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   147d8:	strd	r6, [sp, #8]
   147dc:	strd	r8, [sp, #16]
   147e0:	str	sl, [sp, #24]
   147e4:	str	lr, [sp, #28]
   147e8:	mov	r4, r0
   147ec:	mov	r7, r2
   147f0:	ldr	r3, [r0, #40]	; 0x28
   147f4:	cmp	r3, #0
   147f8:	bne	148a4 <mchar_async_chunk_malloc_without_lock@@Base+0xd0>
   147fc:	mov	r8, r1
   14800:	ldr	r2, [r0, #20]
   14804:	ldr	r3, [r0, #16]
   14808:	cmp	r2, r3
   1480c:	bcc	14840 <mchar_async_chunk_malloc_without_lock@@Base+0x6c>
   14810:	ldr	r6, [r0, #12]
   14814:	add	r3, r6, #1
   14818:	str	r3, [r0, #12]
   1481c:	ldr	r1, [r0, #8]
   14820:	cmp	r3, r1
   14824:	bcs	148cc <mchar_async_chunk_malloc_without_lock@@Base+0xf8>
   14828:	ldr	r3, [r4, #4]
   1482c:	ldr	r3, [r3, r6, lsl #2]
   14830:	cmp	r3, #0
   14834:	beq	1490c <mchar_async_chunk_malloc_without_lock@@Base+0x138>
   14838:	mov	r3, #0
   1483c:	str	r3, [r4, #20]
   14840:	ldr	r3, [r4, #20]
   14844:	ldr	r2, [r4, #12]
   14848:	sub	r2, r2, #-1073741823	; 0xc0000001
   1484c:	ldr	r1, [r4, #4]
   14850:	add	r6, r3, r3, lsl #2
   14854:	lsl	r6, r6, #2
   14858:	ldr	r9, [r1, r2, lsl #2]
   1485c:	add	r5, r9, r6
   14860:	add	r3, r3, #1
   14864:	str	r3, [r4, #20]
   14868:	mov	r3, r7
   1486c:	mov	r2, r5
   14870:	mov	r1, r8
   14874:	mov	r0, r4
   14878:	bl	10ff4 <mchar_async_mem_malloc@plt>
   1487c:	ldr	r3, [r9, r6]
   14880:	cmp	r3, #0
   14884:	moveq	r5, r3
   14888:	mov	r0, r5
   1488c:	ldrd	r4, [sp]
   14890:	ldrd	r6, [sp, #8]
   14894:	ldrd	r8, [sp, #16]
   14898:	ldr	sl, [sp, #24]
   1489c:	add	sp, sp, #28
   148a0:	pop	{pc}		; (ldr pc, [sp], #4)
   148a4:	mov	r1, r2
   148a8:	add	r0, r0, #24
   148ac:	bl	10ef8 <mchar_async_cache_delete@plt>
   148b0:	cmp	r0, #0
   148b4:	moveq	r5, #0
   148b8:	beq	14888 <mchar_async_chunk_malloc_without_lock@@Base+0xb4>
   148bc:	ldr	r3, [r4, #24]
   148c0:	add	r0, r0, r0, lsl #2
   148c4:	ldr	r5, [r3, r0, lsl #2]
   148c8:	b	14888 <mchar_async_chunk_malloc_without_lock@@Base+0xb4>
   148cc:	lsl	r3, r1, #1
   148d0:	str	r3, [r0, #8]
   148d4:	lsl	r1, r1, #3
   148d8:	ldr	r0, [r0, #4]
   148dc:	bl	fb84 <mycore_realloc@plt>
   148e0:	subs	r5, r0, #0
   148e4:	beq	14888 <mchar_async_chunk_malloc_without_lock@@Base+0xb4>
   148e8:	ldr	r0, [r4, #12]
   148ec:	ldr	r2, [r4, #8]
   148f0:	sub	r2, r2, r0
   148f4:	lsl	r2, r2, #2
   148f8:	mov	r1, #0
   148fc:	add	r0, r5, r0, lsl #2
   14900:	bl	10844 <memset@plt>
   14904:	str	r5, [r4, #4]
   14908:	b	14828 <mchar_async_chunk_malloc_without_lock@@Base+0x54>
   1490c:	mov	r1, #20
   14910:	ldr	r0, [r4, #16]
   14914:	bl	feb4 <mycore_calloc@plt>
   14918:	subs	r5, r0, #0
   1491c:	beq	14888 <mchar_async_chunk_malloc_without_lock@@Base+0xb4>
   14920:	ldr	r3, [r4, #4]
   14924:	str	r5, [r3, r6, lsl #2]
   14928:	b	14838 <mchar_async_chunk_malloc_without_lock@@Base+0x64>

0001492c <mchar_async_chunk_malloc@@Base>:
   1492c:	strd	r4, [sp, #-16]!
   14930:	str	r6, [sp, #8]
   14934:	str	lr, [sp, #12]
   14938:	mov	r4, r0
   1493c:	mov	r5, r1
   14940:	mov	r6, r2
   14944:	ldr	r0, [r0, #80]	; 0x50
   14948:	bl	107e4 <mcsync_lock@plt>
   1494c:	mov	r2, r6
   14950:	mov	r1, r5
   14954:	mov	r0, r4
   14958:	bl	10b38 <mchar_async_chunk_malloc_without_lock@plt>
   1495c:	mov	r5, r0
   14960:	ldr	r0, [r4, #80]	; 0x50
   14964:	bl	10e50 <mcsync_unlock@plt>
   14968:	mov	r0, r5
   1496c:	ldrd	r4, [sp]
   14970:	ldr	r6, [sp, #8]
   14974:	add	sp, sp, #12
   14978:	pop	{pc}		; (ldr pc, [sp], #4)

0001497c <mchar_async_clean@@Base>:
   1497c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14980:	strd	r6, [sp, #8]
   14984:	strd	r8, [sp, #16]
   14988:	str	sl, [sp, #24]
   1498c:	str	lr, [sp, #28]
   14990:	mov	r4, r0
   14994:	mov	r3, #0
   14998:	str	r3, [r0, #20]
   1499c:	mov	r3, #1
   149a0:	str	r3, [r0, #12]
   149a4:	add	r0, r0, #24
   149a8:	bl	106b8 <mchar_async_cache_clean@plt>
   149ac:	ldr	r0, [r4, #60]	; 0x3c
   149b0:	cmp	r0, #0
   149b4:	beq	14a14 <mchar_async_clean@@Base+0x98>
   149b8:	mov	r5, #0
   149bc:	mov	r8, r5
   149c0:	mov	r9, r5
   149c4:	ldr	r6, [r4, #56]	; 0x38
   149c8:	add	r7, r6, r5
   149cc:	add	r0, r7, #4
   149d0:	bl	106b8 <mchar_async_cache_clean@plt>
   149d4:	ldr	r2, [r4]
   149d8:	mov	r1, r7
   149dc:	mov	r0, r4
   149e0:	bl	10964 <mchar_async_chunk_malloc@plt>
   149e4:	str	r0, [r6, r5]
   149e8:	cmp	r0, #0
   149ec:	beq	14a10 <mchar_async_clean@@Base+0x94>
   149f0:	str	r9, [r0, #16]
   149f4:	add	r8, r8, #1
   149f8:	add	r5, r5, #36	; 0x24
   149fc:	ldr	r3, [r4, #60]	; 0x3c
   14a00:	cmp	r3, r8
   14a04:	bhi	149c4 <mchar_async_clean@@Base+0x48>
   14a08:	mov	r0, #0
   14a0c:	b	14a14 <mchar_async_clean@@Base+0x98>
   14a10:	mov	r0, #2
   14a14:	ldrd	r4, [sp]
   14a18:	ldrd	r6, [sp, #8]
   14a1c:	ldrd	r8, [sp, #16]
   14a20:	ldr	sl, [sp, #24]
   14a24:	add	sp, sp, #28
   14a28:	pop	{pc}		; (ldr pc, [sp], #4)

00014a2c <mchar_async_init@@Base>:
   14a2c:	strd	r4, [sp, #-16]!
   14a30:	str	r6, [sp, #8]
   14a34:	str	lr, [sp, #12]
   14a38:	mov	r4, r0
   14a3c:	cmp	r2, #4096	; 0x1000
   14a40:	movcc	r2, #4096	; 0x1000
   14a44:	str	r2, [r0]
   14a48:	str	r1, [r0, #16]
   14a4c:	mov	r0, #1024	; 0x400
   14a50:	str	r0, [r4, #8]
   14a54:	mov	r1, #4
   14a58:	bl	feb4 <mycore_calloc@plt>
   14a5c:	str	r0, [r4, #4]
   14a60:	cmp	r0, #0
   14a64:	moveq	r5, #2
   14a68:	beq	14b38 <mchar_async_init@@Base+0x10c>
   14a6c:	mov	r5, r0
   14a70:	mov	r1, #20
   14a74:	ldr	r0, [r4, #16]
   14a78:	bl	feb4 <mycore_calloc@plt>
   14a7c:	str	r0, [r5]
   14a80:	ldr	r0, [r4, #4]
   14a84:	ldr	r3, [r0]
   14a88:	cmp	r3, #0
   14a8c:	beq	14b10 <mchar_async_init@@Base+0xe4>
   14a90:	add	r0, r4, #24
   14a94:	bl	10bc8 <mchar_async_cache_init@plt>
   14a98:	subs	r5, r0, #0
   14a9c:	bne	14b20 <mchar_async_init@@Base+0xf4>
   14aa0:	mov	r3, #0
   14aa4:	str	r3, [r4, #60]	; 0x3c
   14aa8:	mov	r0, #64	; 0x40
   14aac:	str	r0, [r4, #64]	; 0x40
   14ab0:	mov	r1, #36	; 0x24
   14ab4:	bl	feb4 <mycore_calloc@plt>
   14ab8:	str	r0, [r4, #56]	; 0x38
   14abc:	cmp	r0, #0
   14ac0:	beq	14b38 <mchar_async_init@@Base+0x10c>
   14ac4:	mov	r3, #0
   14ac8:	str	r3, [r4, #72]	; 0x48
   14acc:	ldr	r0, [r4, #64]	; 0x40
   14ad0:	str	r0, [r4, #76]	; 0x4c
   14ad4:	lsl	r0, r0, #2
   14ad8:	bl	10c28 <mycore_malloc@plt>
   14adc:	str	r0, [r4, #68]	; 0x44
   14ae0:	cmp	r0, #0
   14ae4:	beq	14b38 <mchar_async_init@@Base+0x10c>
   14ae8:	mov	r0, r4
   14aec:	bl	10b5c <mchar_async_clean@plt>
   14af0:	bl	fd34 <mcsync_create@plt>
   14af4:	str	r0, [r4, #80]	; 0x50
   14af8:	cmp	r0, #0
   14afc:	moveq	r5, #2
   14b00:	beq	14b38 <mchar_async_init@@Base+0x10c>
   14b04:	bl	107fc <mcsync_init@plt>
   14b08:	mov	r5, r0
   14b0c:	b	14b38 <mchar_async_init@@Base+0x10c>
   14b10:	bl	10d60 <mycore_free@plt>
   14b14:	str	r0, [r4, #4]
   14b18:	mov	r5, #2
   14b1c:	b	14b38 <mchar_async_init@@Base+0x10c>
   14b20:	ldr	r3, [r4, #4]
   14b24:	ldr	r0, [r3]
   14b28:	bl	10d60 <mycore_free@plt>
   14b2c:	ldr	r0, [r4, #4]
   14b30:	bl	10d60 <mycore_free@plt>
   14b34:	str	r0, [r4, #4]
   14b38:	mov	r0, r5
   14b3c:	ldrd	r4, [sp]
   14b40:	ldr	r6, [sp, #8]
   14b44:	add	sp, sp, #12
   14b48:	pop	{pc}		; (ldr pc, [sp], #4)

00014b4c <mchar_async_node_add@@Base>:
   14b4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14b50:	strd	r6, [sp, #8]
   14b54:	strd	r8, [sp, #16]
   14b58:	strd	sl, [sp, #24]
   14b5c:	str	lr, [sp, #32]
   14b60:	sub	sp, sp, #4
   14b64:	mov	r4, r0
   14b68:	mov	r7, r1
   14b6c:	ldr	r0, [r0, #80]	; 0x50
   14b70:	bl	107e4 <mcsync_lock@plt>
   14b74:	subs	r6, r0, #0
   14b78:	bne	14bec <mchar_async_node_add@@Base+0xa0>
   14b7c:	ldr	r5, [r4, #72]	; 0x48
   14b80:	cmp	r5, #0
   14b84:	beq	14c08 <mchar_async_node_add@@Base+0xbc>
   14b88:	sub	r5, r5, #1
   14b8c:	str	r5, [r4, #72]	; 0x48
   14b90:	ldr	r3, [r4, #68]	; 0x44
   14b94:	ldr	r9, [r3, r5, lsl #2]
   14b98:	add	r5, r9, r9, lsl #3
   14b9c:	lsl	r5, r5, #2
   14ba0:	ldr	sl, [r4, #56]	; 0x38
   14ba4:	add	r8, sl, r5
   14ba8:	add	r0, r8, #4
   14bac:	bl	10bc8 <mchar_async_cache_init@plt>
   14bb0:	subs	fp, r0, #0
   14bb4:	beq	14c3c <mchar_async_node_add@@Base+0xf0>
   14bb8:	cmp	r7, #0
   14bbc:	movne	r3, #2
   14bc0:	strne	r3, [r7]
   14bc4:	ldr	r0, [r4, #80]	; 0x50
   14bc8:	bl	10e50 <mcsync_unlock@plt>
   14bcc:	mov	r0, r6
   14bd0:	add	sp, sp, #4
   14bd4:	ldrd	r4, [sp]
   14bd8:	ldrd	r6, [sp, #8]
   14bdc:	ldrd	r8, [sp, #16]
   14be0:	ldrd	sl, [sp, #24]
   14be4:	add	sp, sp, #32
   14be8:	pop	{pc}		; (ldr pc, [sp], #4)
   14bec:	cmp	r7, #0
   14bf0:	moveq	r6, #0
   14bf4:	beq	14bcc <mchar_async_node_add@@Base+0x80>
   14bf8:	mov	r3, #96	; 0x60
   14bfc:	str	r3, [r7]
   14c00:	mov	r6, #0
   14c04:	b	14bcc <mchar_async_node_add@@Base+0x80>
   14c08:	ldr	r9, [r4, #60]	; 0x3c
   14c0c:	ldr	r3, [r4, #64]	; 0x40
   14c10:	cmp	r9, r3
   14c14:	addcc	r3, r9, #1
   14c18:	strcc	r3, [r4, #60]	; 0x3c
   14c1c:	bcc	14b98 <mchar_async_node_add@@Base+0x4c>
   14c20:	cmp	r7, #0
   14c24:	movne	r3, #98	; 0x62
   14c28:	strne	r3, [r7]
   14c2c:	ldr	r0, [r4, #80]	; 0x50
   14c30:	bl	10e50 <mcsync_unlock@plt>
   14c34:	mov	r6, r5
   14c38:	b	14bcc <mchar_async_node_add@@Base+0x80>
   14c3c:	ldr	r2, [r4]
   14c40:	mov	r1, r8
   14c44:	mov	r0, r4
   14c48:	bl	10b38 <mchar_async_chunk_malloc_without_lock@plt>
   14c4c:	str	r0, [sl, r5]
   14c50:	cmp	r0, #0
   14c54:	beq	14c84 <mchar_async_node_add@@Base+0x138>
   14c58:	mov	r3, #0
   14c5c:	str	r3, [r0, #12]
   14c60:	ldr	r2, [sl, r5]
   14c64:	str	r3, [r2, #16]
   14c68:	ldr	r0, [r4, #80]	; 0x50
   14c6c:	bl	10e50 <mcsync_unlock@plt>
   14c70:	cmp	r7, #0
   14c74:	movne	r3, #0
   14c78:	strne	r3, [r7]
   14c7c:	mov	r6, r9
   14c80:	b	14bcc <mchar_async_node_add@@Base+0x80>
   14c84:	cmp	r7, #0
   14c88:	movne	r3, #2
   14c8c:	strne	r3, [r7]
   14c90:	ldr	r0, [r4, #80]	; 0x50
   14c94:	bl	10e50 <mcsync_unlock@plt>
   14c98:	mov	r6, fp
   14c9c:	b	14bcc <mchar_async_node_add@@Base+0x80>

00014ca0 <mchar_async_cache_add@@Base>:
   14ca0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14ca4:	strd	r6, [sp, #8]
   14ca8:	str	r8, [sp, #16]
   14cac:	str	lr, [sp, #20]
   14cb0:	mov	r5, r0
   14cb4:	mov	r6, r1
   14cb8:	mov	r4, r2
   14cbc:	ldr	r3, [r0, #16]
   14cc0:	add	r3, r3, #1
   14cc4:	str	r3, [r0, #16]
   14cc8:	ldr	r7, [r0, #12]
   14ccc:	cmp	r7, #0
   14cd0:	beq	14d08 <mchar_async_cache_add@@Base+0x68>
   14cd4:	bl	fe60 <mchar_async_cache_malloc@plt>
   14cd8:	ldr	ip, [r5]
   14cdc:	add	r2, r7, r7, lsl #2
   14ce0:	add	r3, ip, r2, lsl #2
   14ce4:	ldr	r2, [r3, #4]
   14ce8:	cmp	r4, r2
   14cec:	beq	14dcc <mchar_async_cache_add@@Base+0x12c>
   14cf0:	bcc	14e34 <mchar_async_cache_add@@Base+0x194>
   14cf4:	ldr	r1, [r3, #12]
   14cf8:	cmp	r1, #0
   14cfc:	bne	14d78 <mchar_async_cache_add@@Base+0xd8>
   14d00:	mov	r1, r7
   14d04:	b	14da0 <mchar_async_cache_add@@Base+0x100>
   14d08:	ldr	r7, [r0]
   14d0c:	bl	fe60 <mchar_async_cache_malloc@plt>
   14d10:	str	r0, [r5, #12]
   14d14:	add	r0, r0, r0, lsl #2
   14d18:	add	r0, r7, r0, lsl #2
   14d1c:	mov	r2, #0
   14d20:	str	r2, [r0, #16]
   14d24:	ldr	r3, [r5, #12]
   14d28:	add	r3, r3, r3, lsl #2
   14d2c:	add	r3, r7, r3, lsl #2
   14d30:	str	r2, [r3, #8]
   14d34:	ldr	r3, [r5, #12]
   14d38:	add	r3, r3, r3, lsl #2
   14d3c:	add	r3, r7, r3, lsl #2
   14d40:	str	r2, [r3, #12]
   14d44:	ldr	r3, [r5, #12]
   14d48:	add	r3, r3, r3, lsl #2
   14d4c:	add	r3, r7, r3, lsl #2
   14d50:	str	r4, [r3, #4]
   14d54:	ldr	r3, [r5, #12]
   14d58:	add	r3, r3, r3, lsl #2
   14d5c:	str	r6, [r7, r3, lsl #2]
   14d60:	ldrd	r4, [sp]
   14d64:	ldrd	r6, [sp, #8]
   14d68:	ldr	r8, [sp, #16]
   14d6c:	add	sp, sp, #20
   14d70:	pop	{pc}		; (ldr pc, [sp], #4)
   14d74:	mov	r1, r2
   14d78:	add	r3, r1, r1, lsl #2
   14d7c:	add	r3, ip, r3, lsl #2
   14d80:	ldr	r2, [r3, #4]
   14d84:	cmp	r2, r4
   14d88:	beq	14dd0 <mchar_async_cache_add@@Base+0x130>
   14d8c:	cmp	r2, r4
   14d90:	bhi	14e38 <mchar_async_cache_add@@Base+0x198>
   14d94:	ldr	r2, [r3, #12]
   14d98:	cmp	r2, #0
   14d9c:	bne	14d74 <mchar_async_cache_add@@Base+0xd4>
   14da0:	str	r0, [r3, #12]
   14da4:	add	r3, r0, r0, lsl #2
   14da8:	lsl	r3, r3, #2
   14dac:	add	r2, ip, r3
   14db0:	mov	r0, #0
   14db4:	str	r0, [r2, #12]
   14db8:	str	r0, [r2, #8]
   14dbc:	str	r1, [r2, #16]
   14dc0:	str	r4, [r2, #4]
   14dc4:	str	r6, [ip, r3]
   14dc8:	b	14d60 <mchar_async_cache_add@@Base+0xc0>
   14dcc:	mov	r1, r7
   14dd0:	ldr	r2, [r3, #12]
   14dd4:	cmp	r2, #0
   14dd8:	beq	14e20 <mchar_async_cache_add@@Base+0x180>
   14ddc:	add	lr, r0, r0, lsl #2
   14de0:	add	lr, ip, lr, lsl #2
   14de4:	str	r2, [lr, #12]
   14de8:	ldr	r2, [r3, #12]
   14dec:	add	r2, r2, r2, lsl #2
   14df0:	add	r2, ip, r2, lsl #2
   14df4:	str	r0, [r2, #16]
   14df8:	str	r0, [r3, #12]
   14dfc:	add	r3, r0, r0, lsl #2
   14e00:	lsl	r3, r3, #2
   14e04:	add	r2, ip, r3
   14e08:	str	r1, [r2, #16]
   14e0c:	mov	r1, #0
   14e10:	str	r1, [r2, #8]
   14e14:	str	r4, [r2, #4]
   14e18:	str	r6, [ip, r3]
   14e1c:	b	14d60 <mchar_async_cache_add@@Base+0xc0>
   14e20:	add	r2, r0, r0, lsl #2
   14e24:	add	r2, ip, r2, lsl #2
   14e28:	mov	lr, #0
   14e2c:	str	lr, [r2, #12]
   14e30:	b	14df8 <mchar_async_cache_add@@Base+0x158>
   14e34:	mov	r1, r7
   14e38:	ldr	r2, [r3, #16]
   14e3c:	cmp	r2, #0
   14e40:	beq	14e90 <mchar_async_cache_add@@Base+0x1f0>
   14e44:	add	lr, r2, r2, lsl #2
   14e48:	add	lr, ip, lr, lsl #2
   14e4c:	ldr	r5, [lr, #8]
   14e50:	cmp	r5, r1
   14e54:	streq	r0, [lr, #8]
   14e58:	strne	r0, [lr, #12]
   14e5c:	add	lr, r0, r0, lsl #2
   14e60:	add	lr, ip, lr, lsl #2
   14e64:	str	r2, [lr, #16]
   14e68:	str	r0, [r3, #16]
   14e6c:	add	r3, r0, r0, lsl #2
   14e70:	lsl	r3, r3, #2
   14e74:	add	r2, ip, r3
   14e78:	str	r1, [r2, #12]
   14e7c:	mov	r1, #0
   14e80:	str	r1, [r2, #8]
   14e84:	str	r4, [r2, #4]
   14e88:	str	r6, [ip, r3]
   14e8c:	b	14d60 <mchar_async_cache_add@@Base+0xc0>
   14e90:	str	r0, [r5, #12]
   14e94:	add	r2, r0, r0, lsl #2
   14e98:	add	r2, ip, r2, lsl #2
   14e9c:	mov	lr, #0
   14ea0:	str	lr, [r2, #16]
   14ea4:	b	14e68 <mchar_async_cache_add@@Base+0x1c8>

00014ea8 <mchar_async_node_delete@@Base>:
   14ea8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14eac:	strd	r6, [sp, #8]
   14eb0:	str	r8, [sp, #16]
   14eb4:	str	lr, [sp, #20]
   14eb8:	mov	r5, r0
   14ebc:	mov	r7, r1
   14ec0:	ldr	r0, [r0, #80]	; 0x50
   14ec4:	bl	107e4 <mcsync_lock@plt>
   14ec8:	ldr	r3, [r5, #60]	; 0x3c
   14ecc:	cmp	r3, r7
   14ed0:	bls	14eec <mchar_async_node_delete@@Base+0x44>
   14ed4:	add	r3, r7, r7, lsl #3
   14ed8:	lsl	r3, r3, #2
   14edc:	ldr	r2, [r5, #56]	; 0x38
   14ee0:	add	r8, r2, r3
   14ee4:	ldr	r4, [r2, r3]
   14ee8:	b	14efc <mchar_async_node_delete@@Base+0x54>
   14eec:	ldr	r0, [r5, #80]	; 0x50
   14ef0:	bl	10e50 <mcsync_unlock@plt>
   14ef4:	b	14f80 <mchar_async_node_delete@@Base+0xd8>
   14ef8:	mov	r4, r3
   14efc:	ldr	r3, [r4, #12]
   14f00:	cmp	r3, #0
   14f04:	bne	14ef8 <mchar_async_node_delete@@Base+0x50>
   14f08:	add	r6, r5, #24
   14f0c:	ldr	r2, [r4, #8]
   14f10:	mov	r1, r4
   14f14:	mov	r0, r6
   14f18:	bl	10c10 <mchar_async_cache_add@plt>
   14f1c:	ldr	r4, [r4, #16]
   14f20:	cmp	r4, #0
   14f24:	bne	14f0c <mchar_async_node_delete@@Base+0x64>
   14f28:	ldr	r3, [r8, #4]
   14f2c:	cmp	r3, #0
   14f30:	beq	14f40 <mchar_async_node_delete@@Base+0x98>
   14f34:	mov	r1, #0
   14f38:	add	r0, r8, #4
   14f3c:	bl	10820 <mchar_async_cache_destroy@plt>
   14f40:	mov	r2, #36	; 0x24
   14f44:	mov	r1, #0
   14f48:	mov	r0, r8
   14f4c:	bl	10844 <memset@plt>
   14f50:	ldr	r4, [r5, #76]	; 0x4c
   14f54:	ldr	r3, [r5, #72]	; 0x48
   14f58:	cmp	r3, r4
   14f5c:	bcs	14f94 <mchar_async_node_delete@@Base+0xec>
   14f60:	ldr	r2, [r5, #72]	; 0x48
   14f64:	ldr	r3, [r5, #68]	; 0x44
   14f68:	str	r7, [r3, r2, lsl #2]
   14f6c:	ldr	r3, [r5, #72]	; 0x48
   14f70:	add	r3, r3, #1
   14f74:	str	r3, [r5, #72]	; 0x48
   14f78:	ldr	r0, [r5, #80]	; 0x50
   14f7c:	bl	10e50 <mcsync_unlock@plt>
   14f80:	ldrd	r4, [sp]
   14f84:	ldrd	r6, [sp, #8]
   14f88:	ldr	r8, [sp, #16]
   14f8c:	add	sp, sp, #20
   14f90:	pop	{pc}		; (ldr pc, [sp], #4)
   14f94:	lsl	r1, r4, #2
   14f98:	ldr	r0, [r5, #68]	; 0x44
   14f9c:	bl	fb84 <mycore_realloc@plt>
   14fa0:	cmp	r0, #0
   14fa4:	beq	14f60 <mchar_async_node_delete@@Base+0xb8>
   14fa8:	str	r0, [r5, #68]	; 0x44
   14fac:	lsl	r4, r4, #1
   14fb0:	str	r4, [r5, #76]	; 0x4c
   14fb4:	b	14f60 <mchar_async_node_delete@@Base+0xb8>

00014fb8 <mchar_async_malloc@@Base>:
   14fb8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14fbc:	strd	r6, [sp, #8]
   14fc0:	strd	r8, [sp, #16]
   14fc4:	str	sl, [sp, #24]
   14fc8:	str	lr, [sp, #28]
   14fcc:	subs	r6, r2, #0
   14fd0:	moveq	r0, #0
   14fd4:	beq	15078 <mchar_async_malloc@@Base+0xc0>
   14fd8:	mov	r7, r0
   14fdc:	add	r1, r1, r1, lsl #3
   14fe0:	lsl	r4, r1, #2
   14fe4:	ldr	r8, [r0, #56]	; 0x38
   14fe8:	add	sl, r8, r4
   14fec:	ldr	r5, [r8, r4]
   14ff0:	ldr	r3, [sl, #20]
   14ff4:	cmp	r3, #0
   14ff8:	bne	15090 <mchar_async_malloc@@Base+0xd8>
   14ffc:	ldr	r3, [r5, #4]
   15000:	add	r9, r6, #4
   15004:	ldr	r2, [r5, #8]
   15008:	add	r1, r3, r9
   1500c:	cmp	r2, r1
   15010:	bcs	15058 <mchar_async_malloc@@Base+0xa0>
   15014:	add	r1, r3, #4
   15018:	cmp	r2, r1
   1501c:	bls	1502c <mchar_async_malloc@@Base+0x74>
   15020:	sub	r2, r2, #4
   15024:	subs	r2, r2, r3
   15028:	bne	150b4 <mchar_async_malloc@@Base+0xfc>
   1502c:	mov	r1, r9
   15030:	mov	r0, sl
   15034:	bl	10aa8 <mchar_sync_chunk_find_by_size@plt>
   15038:	subs	r5, r0, #0
   1503c:	beq	150d4 <mchar_async_malloc@@Base+0x11c>
   15040:	mov	r3, #0
   15044:	str	r3, [r5, #4]
   15048:	mov	r1, r5
   1504c:	ldr	r0, [r8, r4]
   15050:	bl	fee4 <mchar_sync_chunk_insert_after@plt>
   15054:	str	r5, [r8, r4]
   15058:	ldr	r2, [r5]
   1505c:	ldr	r3, [r5, #4]
   15060:	add	r0, r3, #4
   15064:	add	r0, r2, r0
   15068:	str	r6, [r2, r3]
   1506c:	ldr	r1, [r5, #4]
   15070:	add	r1, r1, r9
   15074:	str	r1, [r5, #4]
   15078:	ldrd	r4, [sp]
   1507c:	ldrd	r6, [sp, #8]
   15080:	ldrd	r8, [sp, #16]
   15084:	ldr	sl, [sp, #24]
   15088:	add	sp, sp, #28
   1508c:	pop	{pc}		; (ldr pc, [sp], #4)
   15090:	mov	r1, r6
   15094:	add	r0, sl, #4
   15098:	bl	10ef8 <mchar_async_cache_delete@plt>
   1509c:	cmp	r0, #0
   150a0:	beq	14ffc <mchar_async_malloc@@Base+0x44>
   150a4:	ldr	r3, [sl, #4]
   150a8:	add	r0, r0, r0, lsl #2
   150ac:	ldr	r0, [r3, r0, lsl #2]
   150b0:	b	15078 <mchar_async_malloc@@Base+0xc0>
   150b4:	ldr	r0, [r5]
   150b8:	str	r2, [r0, r3]
   150bc:	ldr	r3, [r5, #8]
   150c0:	str	r3, [r5, #4]
   150c4:	add	r1, r0, r1
   150c8:	add	r0, sl, #4
   150cc:	bl	10c10 <mchar_async_cache_add@plt>
   150d0:	b	1502c <mchar_async_malloc@@Base+0x74>
   150d4:	ldr	r2, [r7]
   150d8:	cmp	r2, r9
   150dc:	addcc	r2, r2, r9
   150e0:	mov	r1, sl
   150e4:	mov	r0, r7
   150e8:	bl	10964 <mchar_async_chunk_malloc@plt>
   150ec:	mov	r5, r0
   150f0:	b	15048 <mchar_async_malloc@@Base+0x90>

000150f4 <mchar_async_realloc@@Base>:
   150f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   150f8:	strd	r6, [sp, #8]
   150fc:	strd	r8, [sp, #16]
   15100:	str	sl, [sp, #24]
   15104:	str	lr, [sp, #28]
   15108:	ldr	lr, [sp, #32]
   1510c:	cmp	r2, #0
   15110:	beq	151d4 <mchar_async_realloc@@Base+0xe0>
   15114:	ldr	r5, [r2, #-4]
   15118:	cmp	r5, lr
   1511c:	movcs	r4, r2
   15120:	bcs	15190 <mchar_async_realloc@@Base+0x9c>
   15124:	add	ip, r1, r1, lsl #3
   15128:	lsl	ip, ip, #2
   1512c:	ldr	r6, [r0, #56]	; 0x38
   15130:	add	r7, r6, ip
   15134:	ldr	r8, [r6, ip]
   15138:	ldr	r4, [r8, #4]
   1513c:	cmp	r4, r5
   15140:	bcc	15158 <mchar_async_realloc@@Base+0x64>
   15144:	ldr	r9, [r8]
   15148:	sub	r4, r4, r5
   1514c:	add	sl, r9, r4
   15150:	cmp	r2, sl
   15154:	beq	151ac <mchar_async_realloc@@Base+0xb8>
   15158:	mov	r8, r2
   1515c:	mov	r6, r3
   15160:	mov	r2, lr
   15164:	bl	108a4 <mchar_async_malloc@plt>
   15168:	subs	r4, r0, #0
   1516c:	beq	15190 <mchar_async_realloc@@Base+0x9c>
   15170:	mov	r2, r6
   15174:	mov	r1, r8
   15178:	mov	r0, r4
   1517c:	bl	fefc <memcpy@plt>
   15180:	mov	r2, r5
   15184:	mov	r1, r8
   15188:	add	r0, r7, #4
   1518c:	bl	10c10 <mchar_async_cache_add@plt>
   15190:	mov	r0, r4
   15194:	ldrd	r4, [sp]
   15198:	ldrd	r6, [sp, #8]
   1519c:	ldrd	r8, [sp, #16]
   151a0:	ldr	sl, [sp, #24]
   151a4:	add	sp, sp, #28
   151a8:	pop	{pc}		; (ldr pc, [sp], #4)
   151ac:	add	sl, r4, lr
   151b0:	ldr	r8, [r8, #8]
   151b4:	cmp	r8, sl
   151b8:	bcc	15158 <mchar_async_realloc@@Base+0x64>
   151bc:	add	r4, r9, r4
   151c0:	str	lr, [r4, #-4]
   151c4:	ldr	r3, [r6, ip]
   151c8:	str	sl, [r3, #4]
   151cc:	mov	r4, r2
   151d0:	b	15190 <mchar_async_realloc@@Base+0x9c>
   151d4:	mov	r4, r2
   151d8:	b	15190 <mchar_async_realloc@@Base+0x9c>

000151dc <mchar_async_crop_first_chars@@Base>:
   151dc:	str	r4, [sp, #-8]!
   151e0:	str	lr, [sp, #4]
   151e4:	cmp	r2, #0
   151e8:	beq	15240 <mchar_async_crop_first_chars@@Base+0x64>
   151ec:	add	r4, r2, r3
   151f0:	ldr	ip, [r2, #-4]
   151f4:	sub	ip, ip, r3
   151f8:	str	ip, [r4, #-4]
   151fc:	add	ip, r3, #4
   15200:	cmp	ip, #4
   15204:	bhi	15218 <mchar_async_crop_first_chars@@Base+0x3c>
   15208:	mov	r0, r4
   1520c:	ldr	r4, [sp]
   15210:	add	sp, sp, #4
   15214:	pop	{pc}		; (ldr pc, [sp], #4)
   15218:	mov	ip, r2
   1521c:	sub	r2, r3, #4
   15220:	str	r2, [ip, #-4]
   15224:	add	r1, r1, r1, lsl #3
   15228:	ldr	r0, [r0, #56]	; 0x38
   1522c:	add	r0, r0, r1, lsl #2
   15230:	mov	r1, ip
   15234:	add	r0, r0, #4
   15238:	bl	10c10 <mchar_async_cache_add@plt>
   1523c:	b	15208 <mchar_async_crop_first_chars@@Base+0x2c>
   15240:	mov	r4, r2
   15244:	b	15208 <mchar_async_crop_first_chars@@Base+0x2c>

00015248 <mchar_async_free@@Base>:
   15248:	subs	ip, r2, #0
   1524c:	bxeq	lr
   15250:	str	r4, [sp, #-8]!
   15254:	str	lr, [sp, #4]
   15258:	add	r3, r1, r1, lsl #3
   1525c:	ldr	r0, [r0, #56]	; 0x38
   15260:	add	r0, r0, r3, lsl #2
   15264:	ldr	r2, [ip, #-4]
   15268:	mov	r1, ip
   1526c:	add	r0, r0, #4
   15270:	bl	10c10 <mchar_async_cache_add@plt>
   15274:	ldr	r4, [sp]
   15278:	add	sp, sp, #4
   1527c:	pop	{pc}		; (ldr pc, [sp], #4)

00015280 <mcobject_create@@Base>:
   15280:	str	r4, [sp, #-8]!
   15284:	str	lr, [sp, #4]
   15288:	mov	r1, #24
   1528c:	mov	r0, #1
   15290:	bl	feb4 <mycore_calloc@plt>
   15294:	ldr	r4, [sp]
   15298:	add	sp, sp, #4
   1529c:	pop	{pc}		; (ldr pc, [sp], #4)

000152a0 <mcobject_init@@Base>:
   152a0:	str	r4, [sp, #-8]!
   152a4:	str	lr, [sp, #4]
   152a8:	mov	r4, r0
   152ac:	str	r2, [r0, #16]
   152b0:	str	r1, [r0, #20]
   152b4:	mov	r3, #0
   152b8:	str	r3, [r0]
   152bc:	str	r3, [r0, #12]
   152c0:	str	r1, [r0, #8]
   152c4:	lsl	r0, r1, #2
   152c8:	bl	10c28 <mycore_malloc@plt>
   152cc:	str	r0, [r4, #4]
   152d0:	cmp	r0, #0
   152d4:	movne	r0, #0
   152d8:	moveq	r0, #85	; 0x55
   152dc:	ldr	r4, [sp]
   152e0:	add	sp, sp, #4
   152e4:	pop	{pc}		; (ldr pc, [sp], #4)

000152e8 <mcobject_clean@@Base>:
   152e8:	strd	r4, [sp, #-16]!
   152ec:	str	r6, [sp, #8]
   152f0:	str	lr, [sp, #12]
   152f4:	mov	r6, r0
   152f8:	ldr	r4, [r0]
   152fc:	cmp	r4, #0
   15300:	bne	1530c <mcobject_clean@@Base+0x24>
   15304:	b	15354 <mcobject_clean@@Base+0x6c>
   15308:	mov	r4, r3
   1530c:	ldr	r3, [r4, #12]
   15310:	cmp	r3, #0
   15314:	bne	15308 <mcobject_clean@@Base+0x20>
   15318:	b	15334 <mcobject_clean@@Base+0x4c>
   1531c:	bl	10d60 <mycore_free@plt>
   15320:	mov	r0, r4
   15324:	bl	10d60 <mycore_free@plt>
   15328:	mov	r4, r5
   1532c:	cmp	r5, #0
   15330:	beq	15348 <mcobject_clean@@Base+0x60>
   15334:	ldr	r5, [r4, #16]
   15338:	ldr	r0, [r4]
   1533c:	cmp	r0, #0
   15340:	bne	1531c <mcobject_clean@@Base+0x34>
   15344:	b	15320 <mcobject_clean@@Base+0x38>
   15348:	mov	r3, #0
   1534c:	str	r3, [r6]
   15350:	str	r3, [r6, #12]
   15354:	ldrd	r4, [sp]
   15358:	ldr	r6, [sp, #8]
   1535c:	add	sp, sp, #12
   15360:	pop	{pc}		; (ldr pc, [sp], #4)

00015364 <mcobject_destroy@@Base>:
   15364:	strd	r4, [sp, #-16]!
   15368:	str	r6, [sp, #8]
   1536c:	str	lr, [sp, #12]
   15370:	subs	r4, r0, #0
   15374:	beq	153a4 <mcobject_destroy@@Base+0x40>
   15378:	mov	r5, r1
   1537c:	mov	r0, r4
   15380:	bl	10f04 <mcobject_clean@plt>
   15384:	ldr	r0, [r4, #4]
   15388:	cmp	r0, #0
   1538c:	beq	1539c <mcobject_destroy@@Base+0x38>
   15390:	bl	10d60 <mycore_free@plt>
   15394:	mov	r3, #0
   15398:	str	r3, [r4, #4]
   1539c:	cmp	r5, #0
   153a0:	bne	153b8 <mcobject_destroy@@Base+0x54>
   153a4:	mov	r0, r4
   153a8:	ldrd	r4, [sp]
   153ac:	ldr	r6, [sp, #8]
   153b0:	add	sp, sp, #12
   153b4:	pop	{pc}		; (ldr pc, [sp], #4)
   153b8:	mov	r0, r4
   153bc:	bl	10d60 <mycore_free@plt>
   153c0:	mov	r4, #0
   153c4:	b	153a4 <mcobject_destroy@@Base+0x40>

000153c8 <mcobject_chunk_malloc@@Base>:
   153c8:	strd	r4, [sp, #-16]!
   153cc:	str	r6, [sp, #8]
   153d0:	str	lr, [sp, #12]
   153d4:	subs	r5, r1, #0
   153d8:	movne	r3, #0
   153dc:	strne	r3, [r5]
   153e0:	ldr	r3, [r0]
   153e4:	cmp	r3, #0
   153e8:	beq	15414 <mcobject_chunk_malloc@@Base+0x4c>
   153ec:	ldr	r3, [r3, #12]
   153f0:	cmp	r3, #0
   153f4:	beq	15414 <mcobject_chunk_malloc@@Base+0x4c>
   153f8:	str	r3, [r0]
   153fc:	mov	r2, #0
   15400:	str	r2, [r3, #4]
   15404:	ldrd	r4, [sp]
   15408:	ldr	r6, [sp, #8]
   1540c:	add	sp, sp, #12
   15410:	pop	{pc}		; (ldr pc, [sp], #4)
   15414:	mov	r4, r0
   15418:	mov	r1, #20
   1541c:	mov	r0, #1
   15420:	bl	feb4 <mycore_calloc@plt>
   15424:	subs	r6, r0, #0
   15428:	beq	15468 <mcobject_chunk_malloc@@Base+0xa0>
   1542c:	ldr	r3, [r4, #16]
   15430:	ldr	r0, [r4, #20]
   15434:	mul	r0, r0, r3
   15438:	bl	10c28 <mycore_malloc@plt>
   1543c:	str	r0, [r6]
   15440:	cmp	r0, #0
   15444:	beq	1547c <mcobject_chunk_malloc@@Base+0xb4>
   15448:	ldr	r3, [r4, #20]
   1544c:	str	r3, [r6, #8]
   15450:	ldr	r3, [r4]
   15454:	cmp	r3, #0
   15458:	strne	r3, [r6, #16]
   1545c:	strne	r6, [r3, #12]
   15460:	str	r6, [r4]
   15464:	b	15404 <mcobject_chunk_malloc@@Base+0x3c>
   15468:	cmp	r5, #0
   1546c:	beq	15404 <mcobject_chunk_malloc@@Base+0x3c>
   15470:	mov	r3, #86	; 0x56
   15474:	str	r3, [r5]
   15478:	b	15404 <mcobject_chunk_malloc@@Base+0x3c>
   1547c:	cmp	r5, #0
   15480:	movne	r3, #87	; 0x57
   15484:	strne	r3, [r5]
   15488:	mov	r0, r6
   1548c:	bl	10d60 <mycore_free@plt>
   15490:	b	15404 <mcobject_chunk_malloc@@Base+0x3c>

00015494 <mcobject_malloc@@Base>:
   15494:	ldr	r3, [r0, #12]
   15498:	cmp	r3, #0
   1549c:	bne	15520 <mcobject_malloc@@Base+0x8c>
   154a0:	strd	r4, [sp, #-12]!
   154a4:	str	lr, [sp, #8]
   154a8:	sub	sp, sp, #12
   154ac:	mov	r4, r1
   154b0:	mov	r5, r0
   154b4:	ldr	r3, [r0]
   154b8:	cmp	r3, #0
   154bc:	beq	154d0 <mcobject_malloc@@Base+0x3c>
   154c0:	ldr	r1, [r3, #4]
   154c4:	ldr	r2, [r3, #8]
   154c8:	cmp	r1, r2
   154cc:	bcc	154ec <mcobject_malloc@@Base+0x58>
   154d0:	add	r1, sp, #4
   154d4:	mov	r0, r5
   154d8:	bl	fe84 <mcobject_chunk_malloc@plt>
   154dc:	ldr	r3, [sp, #4]
   154e0:	cmp	r3, #0
   154e4:	bne	15544 <mcobject_malloc@@Base+0xb0>
   154e8:	ldr	r3, [r5]
   154ec:	cmp	r4, #0
   154f0:	movne	r2, #0
   154f4:	strne	r2, [r4]
   154f8:	ldr	r2, [r3, #4]
   154fc:	add	r1, r2, #1
   15500:	str	r1, [r3, #4]
   15504:	ldr	r1, [r5, #16]
   15508:	ldr	r0, [r3]
   1550c:	mla	r0, r1, r2, r0
   15510:	add	sp, sp, #12
   15514:	ldrd	r4, [sp]
   15518:	add	sp, sp, #8
   1551c:	pop	{pc}		; (ldr pc, [sp], #4)
   15520:	cmp	r1, #0
   15524:	movne	r3, #0
   15528:	strne	r3, [r1]
   1552c:	ldr	r3, [r0, #12]
   15530:	sub	r3, r3, #1
   15534:	str	r3, [r0, #12]
   15538:	ldr	r2, [r0, #4]
   1553c:	ldr	r0, [r2, r3, lsl #2]
   15540:	bx	lr
   15544:	cmp	r4, #0
   15548:	strne	r3, [r4]
   1554c:	mov	r0, #0
   15550:	b	15510 <mcobject_malloc@@Base+0x7c>

00015554 <mcobject_free@@Base>:
   15554:	strd	r4, [sp, #-16]!
   15558:	str	r6, [sp, #8]
   1555c:	str	lr, [sp, #12]
   15560:	mov	r4, r0
   15564:	mov	r5, r1
   15568:	ldr	r1, [r0, #8]
   1556c:	ldr	r3, [r0, #12]
   15570:	cmp	r3, r1
   15574:	bcs	155a4 <mcobject_free@@Base+0x50>
   15578:	ldr	r2, [r4, #12]
   1557c:	ldr	r3, [r4, #4]
   15580:	str	r5, [r3, r2, lsl #2]
   15584:	ldr	r3, [r4, #12]
   15588:	add	r3, r3, #1
   1558c:	str	r3, [r4, #12]
   15590:	mov	r0, #0
   15594:	ldrd	r4, [sp]
   15598:	ldr	r6, [sp, #8]
   1559c:	add	sp, sp, #12
   155a0:	pop	{pc}		; (ldr pc, [sp], #4)
   155a4:	lsl	r6, r1, #1
   155a8:	lsl	r1, r1, #3
   155ac:	ldr	r0, [r0, #4]
   155b0:	bl	fb84 <mycore_realloc@plt>
   155b4:	cmp	r0, #0
   155b8:	beq	155c8 <mcobject_free@@Base+0x74>
   155bc:	str	r0, [r4, #4]
   155c0:	str	r6, [r4, #8]
   155c4:	b	15578 <mcobject_free@@Base+0x24>
   155c8:	mov	r0, #88	; 0x58
   155cc:	b	15594 <mcobject_free@@Base+0x40>

000155d0 <mcobject_async_create@@Base>:
   155d0:	str	r4, [sp, #-8]!
   155d4:	str	lr, [sp, #4]
   155d8:	mov	r1, #72	; 0x48
   155dc:	mov	r0, #1
   155e0:	bl	feb4 <mycore_calloc@plt>
   155e4:	ldr	r4, [sp]
   155e8:	add	sp, sp, #4
   155ec:	pop	{pc}		; (ldr pc, [sp], #4)

000155f0 <mcobject_async_chunk_up@@Base>:
   155f0:	strd	r4, [sp, #-16]!
   155f4:	str	r6, [sp, #8]
   155f8:	str	lr, [sp, #12]
   155fc:	mov	r3, #0
   15600:	str	r3, [r0, #40]	; 0x28
   15604:	ldr	r6, [r0, #32]
   15608:	ldr	r5, [r0, #24]
   1560c:	ldr	r3, [r5, r6, lsl #2]
   15610:	cmp	r3, #0
   15614:	movne	r0, #0
   15618:	beq	1562c <mcobject_async_chunk_up@@Base+0x3c>
   1561c:	ldrd	r4, [sp]
   15620:	ldr	r6, [sp, #8]
   15624:	add	sp, sp, #12
   15628:	pop	{pc}		; (ldr pc, [sp], #4)
   1562c:	mov	r4, r0
   15630:	mov	r1, #20
   15634:	ldr	r0, [r0, #36]	; 0x24
   15638:	bl	feb4 <mycore_calloc@plt>
   1563c:	str	r0, [r5, r6, lsl #2]
   15640:	ldr	r2, [r4, #32]
   15644:	ldr	r3, [r4, #24]
   15648:	ldr	r3, [r3, r2, lsl #2]
   1564c:	cmp	r3, #0
   15650:	movne	r0, #0
   15654:	moveq	r0, #2
   15658:	b	1561c <mcobject_async_chunk_up@@Base+0x2c>

0001565c <mcobject_async_destroy@@Base>:
   1565c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15660:	strd	r6, [sp, #8]
   15664:	strd	r8, [sp, #16]
   15668:	str	sl, [sp, #24]
   1566c:	str	lr, [sp, #28]
   15670:	subs	r4, r0, #0
   15674:	beq	157b4 <mcobject_async_destroy@@Base+0x158>
   15678:	mov	r9, r1
   1567c:	ldr	r3, [r4, #44]	; 0x2c
   15680:	cmp	r3, #0
   15684:	beq	156d0 <mcobject_async_destroy@@Base+0x74>
   15688:	ldr	r3, [r4, #48]	; 0x30
   1568c:	cmp	r3, #0
   15690:	beq	156c8 <mcobject_async_destroy@@Base+0x6c>
   15694:	mov	r5, #0
   15698:	b	156b0 <mcobject_async_destroy@@Base+0x54>
   1569c:	bl	10d60 <mycore_free@plt>
   156a0:	add	r5, r5, #1
   156a4:	ldr	r3, [r4, #48]	; 0x30
   156a8:	cmp	r3, r5
   156ac:	bls	156c8 <mcobject_async_destroy@@Base+0x6c>
   156b0:	ldr	r3, [r4, #44]	; 0x2c
   156b4:	add	r3, r3, r5, lsl #4
   156b8:	ldr	r0, [r3, #4]
   156bc:	cmp	r0, #0
   156c0:	bne	1569c <mcobject_async_destroy@@Base+0x40>
   156c4:	b	156a0 <mcobject_async_destroy@@Base+0x44>
   156c8:	ldr	r0, [r4, #44]	; 0x2c
   156cc:	bl	10d60 <mycore_free@plt>
   156d0:	ldr	r0, [r4, #56]	; 0x38
   156d4:	cmp	r0, #0
   156d8:	beq	156e0 <mcobject_async_destroy@@Base+0x84>
   156dc:	bl	10d60 <mycore_free@plt>
   156e0:	ldr	r3, [r4, #24]
   156e4:	cmp	r3, #0
   156e8:	beq	15780 <mcobject_async_destroy@@Base+0x124>
   156ec:	ldr	r3, [r4, #32]
   156f0:	cmp	r3, #0
   156f4:	beq	15778 <mcobject_async_destroy@@Base+0x11c>
   156f8:	mov	r8, #0
   156fc:	b	1574c <mcobject_async_destroy@@Base+0xf0>
   15700:	bl	10d60 <mycore_free@plt>
   15704:	add	r6, r6, #1
   15708:	add	r5, r5, #20
   1570c:	ldr	r3, [r4, #36]	; 0x24
   15710:	cmp	r3, r6
   15714:	bls	15730 <mcobject_async_destroy@@Base+0xd4>
   15718:	ldr	r3, [r4, #24]
   1571c:	ldr	r3, [r3, r7]
   15720:	ldr	r0, [r3, r5]
   15724:	cmp	r0, #0
   15728:	bne	15700 <mcobject_async_destroy@@Base+0xa4>
   1572c:	b	15704 <mcobject_async_destroy@@Base+0xa8>
   15730:	ldr	r3, [r4, #24]
   15734:	ldr	r0, [r3, r7]
   15738:	bl	10d60 <mycore_free@plt>
   1573c:	add	r8, r8, #1
   15740:	ldr	r3, [r4, #32]
   15744:	cmp	r3, r8
   15748:	bls	15778 <mcobject_async_destroy@@Base+0x11c>
   1574c:	lsl	r7, r8, #2
   15750:	ldr	r3, [r4, #24]
   15754:	ldr	r3, [r3, r8, lsl #2]
   15758:	cmp	r3, #0
   1575c:	beq	1573c <mcobject_async_destroy@@Base+0xe0>
   15760:	ldr	r3, [r4, #36]	; 0x24
   15764:	cmp	r3, #0
   15768:	beq	15730 <mcobject_async_destroy@@Base+0xd4>
   1576c:	mov	r5, #0
   15770:	mov	r6, r5
   15774:	b	15718 <mcobject_async_destroy@@Base+0xbc>
   15778:	ldr	r0, [r4, #24]
   1577c:	bl	10d60 <mycore_free@plt>
   15780:	ldr	r0, [r4, #12]
   15784:	cmp	r0, #0
   15788:	beq	15790 <mcobject_async_destroy@@Base+0x134>
   1578c:	bl	10d60 <mycore_free@plt>
   15790:	mov	r1, #1
   15794:	ldr	r0, [r4, #68]	; 0x44
   15798:	bl	10154 <mcsync_destroy@plt>
   1579c:	mov	r2, #72	; 0x48
   157a0:	mov	r1, #0
   157a4:	mov	r0, r4
   157a8:	bl	10844 <memset@plt>
   157ac:	cmp	r9, #0
   157b0:	bne	157d0 <mcobject_async_destroy@@Base+0x174>
   157b4:	mov	r0, r4
   157b8:	ldrd	r4, [sp]
   157bc:	ldrd	r6, [sp, #8]
   157c0:	ldrd	r8, [sp, #16]
   157c4:	ldr	sl, [sp, #24]
   157c8:	add	sp, sp, #28
   157cc:	pop	{pc}		; (ldr pc, [sp], #4)
   157d0:	mov	r0, r4
   157d4:	bl	10d60 <mycore_free@plt>
   157d8:	mov	r4, #0
   157dc:	b	157b4 <mcobject_async_destroy@@Base+0x158>

000157e0 <mcobject_async_mem_malloc@@Base>:
   157e0:	strd	r4, [sp, #-16]!
   157e4:	str	r6, [sp, #8]
   157e8:	str	lr, [sp, #12]
   157ec:	mov	r6, r0
   157f0:	mov	r4, r1
   157f4:	mov	r5, r2
   157f8:	ldr	r0, [r1]
   157fc:	cmp	r0, #0
   15800:	beq	1585c <mcobject_async_mem_malloc@@Base+0x7c>
   15804:	ldr	r3, [r1, #8]
   15808:	cmp	r3, r2
   1580c:	bcc	15838 <mcobject_async_mem_malloc@@Base+0x58>
   15810:	mov	r3, #0
   15814:	str	r3, [r4, #4]
   15818:	ldr	r3, [r4]
   1581c:	cmp	r3, #0
   15820:	movne	r0, #0
   15824:	moveq	r0, #2
   15828:	ldrd	r4, [sp]
   1582c:	ldr	r6, [sp, #8]
   15830:	add	sp, sp, #12
   15834:	pop	{pc}		; (ldr pc, [sp], #4)
   15838:	bl	10d60 <mycore_free@plt>
   1583c:	ldr	r0, [r6]
   15840:	add	r5, r5, r0
   15844:	str	r5, [r4, #8]
   15848:	ldr	r0, [r6, #8]
   1584c:	mul	r0, r0, r5
   15850:	bl	10c28 <mycore_malloc@plt>
   15854:	str	r0, [r4]
   15858:	b	15810 <mcobject_async_mem_malloc@@Base+0x30>
   1585c:	ldr	r0, [r6]
   15860:	cmp	r0, r2
   15864:	addcc	r0, r0, r2
   15868:	str	r0, [r1, #8]
   1586c:	ldr	r3, [r1, #8]
   15870:	ldr	r0, [r6, #8]
   15874:	mul	r0, r0, r3
   15878:	bl	10c28 <mycore_malloc@plt>
   1587c:	str	r0, [r4]
   15880:	b	15810 <mcobject_async_mem_malloc@@Base+0x30>

00015884 <mcobject_async_chunk_malloc_without_lock@@Base>:
   15884:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15888:	strd	r6, [sp, #8]
   1588c:	str	r8, [sp, #16]
   15890:	str	lr, [sp, #20]
   15894:	subs	r6, r2, #0
   15898:	movne	r3, #0
   1589c:	strne	r3, [r6]
   158a0:	ldr	r3, [r0, #20]
   158a4:	cmp	r3, #0
   158a8:	bne	1598c <mcobject_async_chunk_malloc_without_lock@@Base+0x108>
   158ac:	mov	r7, r1
   158b0:	mov	r4, r0
   158b4:	ldr	r2, [r0, #40]	; 0x28
   158b8:	ldr	r3, [r0, #36]	; 0x24
   158bc:	cmp	r2, r3
   158c0:	bcc	15928 <mcobject_async_chunk_malloc_without_lock@@Base+0xa4>
   158c4:	ldr	r1, [r0, #28]
   158c8:	ldr	r3, [r0, #32]
   158cc:	cmp	r3, r1
   158d0:	bcc	1590c <mcobject_async_chunk_malloc_without_lock@@Base+0x88>
   158d4:	lsl	r8, r1, #1
   158d8:	lsl	r1, r1, #3
   158dc:	ldr	r0, [r0, #24]
   158e0:	bl	fb84 <mycore_realloc@plt>
   158e4:	subs	r5, r0, #0
   158e8:	beq	159d4 <mcobject_async_chunk_malloc_without_lock@@Base+0x150>
   158ec:	ldr	r0, [r4, #32]
   158f0:	sub	r2, r8, r0
   158f4:	lsl	r2, r2, #2
   158f8:	mov	r1, #0
   158fc:	add	r0, r5, r0, lsl #2
   15900:	bl	10844 <memset@plt>
   15904:	str	r8, [r4, #28]
   15908:	str	r5, [r4, #24]
   1590c:	mov	r0, r4
   15910:	bl	1013c <mcobject_async_chunk_up@plt>
   15914:	cmp	r0, #0
   15918:	bne	159ec <mcobject_async_chunk_malloc_without_lock@@Base+0x168>
   1591c:	ldr	r3, [r4, #32]
   15920:	add	r3, r3, #1
   15924:	str	r3, [r4, #32]
   15928:	ldr	r3, [r4, #40]	; 0x28
   1592c:	ldr	r2, [r4, #32]
   15930:	sub	r2, r2, #-1073741823	; 0xc0000001
   15934:	ldr	r0, [r4, #24]
   15938:	add	r1, r3, r3, lsl #2
   1593c:	ldr	r5, [r0, r2, lsl #2]
   15940:	add	r5, r5, r1, lsl #2
   15944:	add	r3, r3, #1
   15948:	str	r3, [r4, #40]	; 0x28
   1594c:	mov	r3, #0
   15950:	str	r3, [r5, #12]
   15954:	str	r3, [r5, #16]
   15958:	cmp	r6, r3
   1595c:	beq	15a08 <mcobject_async_chunk_malloc_without_lock@@Base+0x184>
   15960:	mov	r2, r7
   15964:	mov	r1, r5
   15968:	mov	r0, r4
   1596c:	bl	fd64 <mcobject_async_mem_malloc@plt>
   15970:	str	r0, [r6]
   15974:	mov	r0, r5
   15978:	ldrd	r4, [sp]
   1597c:	ldrd	r6, [sp, #8]
   15980:	ldr	r8, [sp, #16]
   15984:	add	sp, sp, #20
   15988:	pop	{pc}		; (ldr pc, [sp], #4)
   1598c:	sub	r3, r3, #1
   15990:	str	r3, [r0, #20]
   15994:	ldr	r2, [r0, #12]
   15998:	ldr	r2, [r2, r3, lsl #2]
   1599c:	mov	r3, #0
   159a0:	str	r3, [r2, #4]
   159a4:	ldr	r1, [r0, #20]
   159a8:	ldr	r2, [r0, #12]
   159ac:	ldr	r2, [r2, r1, lsl #2]
   159b0:	str	r3, [r2, #12]
   159b4:	ldr	r1, [r0, #20]
   159b8:	ldr	r2, [r0, #12]
   159bc:	ldr	r2, [r2, r1, lsl #2]
   159c0:	str	r3, [r2, #16]
   159c4:	ldr	r2, [r0, #20]
   159c8:	ldr	r3, [r0, #12]
   159cc:	ldr	r5, [r3, r2, lsl #2]
   159d0:	b	15974 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   159d4:	cmp	r6, #0
   159d8:	moveq	r5, r6
   159dc:	beq	15974 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   159e0:	mov	r3, #2
   159e4:	str	r3, [r6]
   159e8:	b	15974 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   159ec:	cmp	r6, #0
   159f0:	moveq	r5, r6
   159f4:	beq	15974 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   159f8:	mov	r3, #2
   159fc:	str	r3, [r6]
   15a00:	mov	r5, #0
   15a04:	b	15974 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   15a08:	mov	r2, r7
   15a0c:	mov	r1, r5
   15a10:	mov	r0, r4
   15a14:	bl	fd64 <mcobject_async_mem_malloc@plt>
   15a18:	b	15974 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>

00015a1c <mcobject_async_chunk_malloc@@Base>:
   15a1c:	strd	r4, [sp, #-16]!
   15a20:	str	r6, [sp, #8]
   15a24:	str	lr, [sp, #12]
   15a28:	mov	r5, r0
   15a2c:	mov	r6, r1
   15a30:	mov	r4, r2
   15a34:	ldr	r0, [r0, #68]	; 0x44
   15a38:	bl	107e4 <mcsync_lock@plt>
   15a3c:	cmp	r0, #0
   15a40:	bne	15a74 <mcobject_async_chunk_malloc@@Base+0x58>
   15a44:	mov	r2, r4
   15a48:	mov	r1, r6
   15a4c:	mov	r0, r5
   15a50:	bl	10874 <mcobject_async_chunk_malloc_without_lock@plt>
   15a54:	mov	r4, r0
   15a58:	ldr	r0, [r5, #68]	; 0x44
   15a5c:	bl	10e50 <mcsync_unlock@plt>
   15a60:	mov	r0, r4
   15a64:	ldrd	r4, [sp]
   15a68:	ldr	r6, [sp, #8]
   15a6c:	add	sp, sp, #12
   15a70:	pop	{pc}		; (ldr pc, [sp], #4)
   15a74:	cmp	r4, #0
   15a78:	beq	15a60 <mcobject_async_chunk_malloc@@Base+0x44>
   15a7c:	mov	r3, #1
   15a80:	str	r3, [r4]
   15a84:	mov	r4, #0
   15a88:	b	15a60 <mcobject_async_chunk_malloc@@Base+0x44>

00015a8c <mcobject_async_clean@@Base>:
   15a8c:	ldr	r3, [r0, #24]
   15a90:	ldr	r3, [r3]
   15a94:	adds	r3, r3, #0
   15a98:	movne	r3, #1
   15a9c:	str	r3, [r0, #32]
   15aa0:	mov	r3, #0
   15aa4:	str	r3, [r0, #40]	; 0x28
   15aa8:	str	r3, [r0, #20]
   15aac:	ldr	r3, [r0, #48]	; 0x30
   15ab0:	cmp	r3, #0
   15ab4:	bxeq	lr
   15ab8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15abc:	strd	r6, [sp, #8]
   15ac0:	str	r8, [sp, #16]
   15ac4:	str	lr, [sp, #20]
   15ac8:	mov	r5, r0
   15acc:	mov	r4, #0
   15ad0:	mov	r7, r4
   15ad4:	b	15afc <mcobject_async_clean@@Base+0x70>
   15ad8:	mov	r2, r7
   15adc:	ldr	r1, [r5]
   15ae0:	mov	r0, r5
   15ae4:	bl	100ac <mcobject_async_chunk_malloc@plt>
   15ae8:	str	r0, [r6, r4, lsl #4]
   15aec:	add	r4, r4, #1
   15af0:	ldr	r3, [r5, #48]	; 0x30
   15af4:	cmp	r3, r4
   15af8:	bls	15b18 <mcobject_async_clean@@Base+0x8c>
   15afc:	ldr	r6, [r5, #44]	; 0x2c
   15b00:	add	r3, r6, r4, lsl #4
   15b04:	str	r7, [r3, #12]
   15b08:	ldr	r3, [r6, r4, lsl #4]
   15b0c:	cmp	r3, #0
   15b10:	bne	15ad8 <mcobject_async_clean@@Base+0x4c>
   15b14:	b	15aec <mcobject_async_clean@@Base+0x60>
   15b18:	ldrd	r4, [sp]
   15b1c:	ldrd	r6, [sp, #8]
   15b20:	ldr	r8, [sp, #16]
   15b24:	add	sp, sp, #20
   15b28:	pop	{pc}		; (ldr pc, [sp], #4)

00015b2c <mcobject_async_init@@Base>:
   15b2c:	str	r4, [sp, #-8]!
   15b30:	str	lr, [sp, #4]
   15b34:	mov	r4, r0
   15b38:	str	r2, [r0]
   15b3c:	str	r3, [r0, #4]
   15b40:	add	r3, r3, #4
   15b44:	str	r3, [r0, #8]
   15b48:	mov	r3, #0
   15b4c:	str	r3, [r0, #32]
   15b50:	mov	r0, #128	; 0x80
   15b54:	str	r0, [r4, #28]
   15b58:	str	r1, [r4, #36]	; 0x24
   15b5c:	mov	r1, #4
   15b60:	bl	feb4 <mycore_calloc@plt>
   15b64:	str	r0, [r4, #24]
   15b68:	cmp	r0, #0
   15b6c:	moveq	r0, #2
   15b70:	beq	15c14 <mcobject_async_init@@Base+0xe8>
   15b74:	mov	r0, r4
   15b78:	bl	1013c <mcobject_async_chunk_up@plt>
   15b7c:	ldr	r0, [r4, #36]	; 0x24
   15b80:	str	r0, [r4, #16]
   15b84:	mov	r1, #4
   15b88:	bl	feb4 <mycore_calloc@plt>
   15b8c:	str	r0, [r4, #12]
   15b90:	cmp	r0, #0
   15b94:	moveq	r0, #3
   15b98:	beq	15c14 <mcobject_async_init@@Base+0xe8>
   15b9c:	mov	r3, #0
   15ba0:	str	r3, [r4, #48]	; 0x30
   15ba4:	mov	r0, #64	; 0x40
   15ba8:	str	r0, [r4, #52]	; 0x34
   15bac:	mov	r1, #16
   15bb0:	bl	feb4 <mycore_calloc@plt>
   15bb4:	str	r0, [r4, #44]	; 0x2c
   15bb8:	cmp	r0, #0
   15bbc:	moveq	r0, #4
   15bc0:	beq	15c14 <mcobject_async_init@@Base+0xe8>
   15bc4:	mov	r3, #0
   15bc8:	str	r3, [r4, #60]	; 0x3c
   15bcc:	ldr	r0, [r4, #52]	; 0x34
   15bd0:	str	r0, [r4, #64]	; 0x40
   15bd4:	lsl	r0, r0, #2
   15bd8:	bl	10c28 <mycore_malloc@plt>
   15bdc:	str	r0, [r4, #56]	; 0x38
   15be0:	cmp	r0, #0
   15be4:	moveq	r0, #4
   15be8:	beq	15c14 <mcobject_async_init@@Base+0xe8>
   15bec:	mov	r0, r4
   15bf0:	bl	10fe8 <mcobject_async_clean@plt>
   15bf4:	bl	fd34 <mcsync_create@plt>
   15bf8:	str	r0, [r4, #68]	; 0x44
   15bfc:	cmp	r0, #0
   15c00:	moveq	r0, #1
   15c04:	beq	15c14 <mcobject_async_init@@Base+0xe8>
   15c08:	bl	107fc <mcsync_init@plt>
   15c0c:	adds	r0, r0, #0
   15c10:	movne	r0, #1
   15c14:	ldr	r4, [sp]
   15c18:	add	sp, sp, #4
   15c1c:	pop	{pc}		; (ldr pc, [sp], #4)

00015c20 <mcobject_async_node_add@@Base>:
   15c20:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15c24:	strd	r6, [sp, #8]
   15c28:	strd	r8, [sp, #16]
   15c2c:	str	sl, [sp, #24]
   15c30:	str	lr, [sp, #28]
   15c34:	mov	r4, r0
   15c38:	mov	r5, r1
   15c3c:	ldr	r0, [r0, #68]	; 0x44
   15c40:	bl	107e4 <mcsync_lock@plt>
   15c44:	cmp	r5, #0
   15c48:	movne	r3, #0
   15c4c:	strne	r3, [r5]
   15c50:	ldr	r7, [r4, #60]	; 0x3c
   15c54:	cmp	r7, #0
   15c58:	beq	15cf4 <mcobject_async_node_add@@Base+0xd4>
   15c5c:	sub	r7, r7, #1
   15c60:	str	r7, [r4, #60]	; 0x3c
   15c64:	ldr	r3, [r4, #56]	; 0x38
   15c68:	ldr	r6, [r3, r7, lsl #2]
   15c6c:	lsl	r9, r6, #4
   15c70:	ldr	r7, [r4, #44]	; 0x2c
   15c74:	add	r8, r7, r9
   15c78:	mov	r2, r5
   15c7c:	ldr	r1, [r4]
   15c80:	mov	r0, r4
   15c84:	bl	10874 <mcobject_async_chunk_malloc_without_lock@plt>
   15c88:	str	r0, [r7, r6, lsl #4]
   15c8c:	cmp	r5, #0
   15c90:	beq	15d44 <mcobject_async_node_add@@Base+0x124>
   15c94:	ldr	r3, [r5]
   15c98:	cmp	r3, #0
   15c9c:	bne	15d1c <mcobject_async_node_add@@Base+0xfc>
   15ca0:	mov	r3, #0
   15ca4:	str	r3, [r0, #12]
   15ca8:	ldr	r2, [r7, r9]
   15cac:	str	r3, [r2, #16]
   15cb0:	str	r3, [r8, #12]
   15cb4:	ldr	r0, [r4]
   15cb8:	str	r0, [r8, #8]
   15cbc:	lsl	r0, r0, #2
   15cc0:	bl	10c28 <mycore_malloc@plt>
   15cc4:	str	r0, [r8, #4]
   15cc8:	cmp	r0, #0
   15ccc:	beq	15d2c <mcobject_async_node_add@@Base+0x10c>
   15cd0:	ldr	r0, [r4, #68]	; 0x44
   15cd4:	bl	10e50 <mcsync_unlock@plt>
   15cd8:	mov	r0, r6
   15cdc:	ldrd	r4, [sp]
   15ce0:	ldrd	r6, [sp, #8]
   15ce4:	ldrd	r8, [sp, #16]
   15ce8:	ldr	sl, [sp, #24]
   15cec:	add	sp, sp, #28
   15cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   15cf4:	ldr	r6, [r4, #48]	; 0x30
   15cf8:	ldr	r3, [r4, #52]	; 0x34
   15cfc:	cmp	r6, r3
   15d00:	addcc	r3, r6, #1
   15d04:	strcc	r3, [r4, #48]	; 0x30
   15d08:	bcc	15c6c <mcobject_async_node_add@@Base+0x4c>
   15d0c:	ldr	r0, [r4, #68]	; 0x44
   15d10:	bl	10e50 <mcsync_unlock@plt>
   15d14:	mov	r6, r7
   15d18:	b	15cd8 <mcobject_async_node_add@@Base+0xb8>
   15d1c:	ldr	r0, [r4, #68]	; 0x44
   15d20:	bl	10e50 <mcsync_unlock@plt>
   15d24:	mov	r6, #0
   15d28:	b	15cd8 <mcobject_async_node_add@@Base+0xb8>
   15d2c:	mov	r3, #3
   15d30:	str	r3, [r5]
   15d34:	ldr	r0, [r4, #68]	; 0x44
   15d38:	bl	10e50 <mcsync_unlock@plt>
   15d3c:	mov	r6, #0
   15d40:	b	15cd8 <mcobject_async_node_add@@Base+0xb8>
   15d44:	mov	r3, #0
   15d48:	str	r3, [r0, #12]
   15d4c:	ldr	r2, [r7, r6, lsl #4]
   15d50:	str	r3, [r2, #16]
   15d54:	str	r3, [r8, #12]
   15d58:	ldr	r0, [r4]
   15d5c:	str	r0, [r8, #8]
   15d60:	lsl	r0, r0, #2
   15d64:	bl	10c28 <mycore_malloc@plt>
   15d68:	str	r0, [r8, #4]
   15d6c:	cmp	r0, #0
   15d70:	bne	15cd0 <mcobject_async_node_add@@Base+0xb0>
   15d74:	b	15d34 <mcobject_async_node_add@@Base+0x114>

00015d78 <mcobject_async_node_clean@@Base>:
   15d78:	ldr	r3, [r0, #48]	; 0x30
   15d7c:	cmp	r3, r1
   15d80:	bls	15dd4 <mcobject_async_node_clean@@Base+0x5c>
   15d84:	ldr	r3, [r0, #44]	; 0x2c
   15d88:	add	r0, r3, r1, lsl #4
   15d8c:	mov	r2, #0
   15d90:	str	r2, [r0, #12]
   15d94:	ldr	r2, [r3, r1, lsl #4]
   15d98:	cmp	r2, #0
   15d9c:	beq	15dd4 <mcobject_async_node_clean@@Base+0x5c>
   15da0:	ldr	r3, [r2, #16]
   15da4:	cmp	r3, #0
   15da8:	bne	15db8 <mcobject_async_node_clean@@Base+0x40>
   15dac:	mov	r3, r2
   15db0:	b	15dc8 <mcobject_async_node_clean@@Base+0x50>
   15db4:	mov	r3, r2
   15db8:	str	r3, [r0]
   15dbc:	ldr	r2, [r3, #16]
   15dc0:	cmp	r2, #0
   15dc4:	bne	15db4 <mcobject_async_node_clean@@Base+0x3c>
   15dc8:	mov	r2, #0
   15dcc:	str	r2, [r3, #4]
   15dd0:	str	r2, [r0, #12]
   15dd4:	bx	lr

00015dd8 <mcobject_async_node_all_clean@@Base>:
   15dd8:	ldr	r3, [r0, #48]	; 0x30
   15ddc:	cmp	r3, #0
   15de0:	bxeq	lr
   15de4:	strd	r4, [sp, #-16]!
   15de8:	str	r6, [sp, #8]
   15dec:	str	lr, [sp, #12]
   15df0:	mov	r5, r0
   15df4:	mov	r4, #0
   15df8:	mov	r1, r4
   15dfc:	mov	r0, r5
   15e00:	bl	10814 <mcobject_async_node_clean@plt>
   15e04:	add	r4, r4, #1
   15e08:	ldr	r3, [r5, #48]	; 0x30
   15e0c:	cmp	r3, r4
   15e10:	bhi	15df8 <mcobject_async_node_all_clean@@Base+0x20>
   15e14:	ldrd	r4, [sp]
   15e18:	ldr	r6, [sp, #8]
   15e1c:	add	sp, sp, #12
   15e20:	pop	{pc}		; (ldr pc, [sp], #4)

00015e24 <mcobject_async_node_delete@@Base>:
   15e24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15e28:	strd	r6, [sp, #8]
   15e2c:	strd	r8, [sp, #16]
   15e30:	str	sl, [sp, #24]
   15e34:	str	lr, [sp, #28]
   15e38:	mov	r4, r0
   15e3c:	mov	r6, r1
   15e40:	ldr	r0, [r0, #68]	; 0x44
   15e44:	bl	107e4 <mcsync_lock@plt>
   15e48:	ldr	r3, [r4, #48]	; 0x30
   15e4c:	cmp	r3, r6
   15e50:	bls	15e64 <mcobject_async_node_delete@@Base+0x40>
   15e54:	ldr	r8, [r4, #44]	; 0x2c
   15e58:	add	r7, r8, r6, lsl #4
   15e5c:	ldr	r5, [r8, r6, lsl #4]
   15e60:	b	15e74 <mcobject_async_node_delete@@Base+0x50>
   15e64:	ldr	r0, [r4, #68]	; 0x44
   15e68:	bl	10e50 <mcsync_unlock@plt>
   15e6c:	b	15f3c <mcobject_async_node_delete@@Base+0x118>
   15e70:	mov	r5, r3
   15e74:	ldr	r3, [r5, #12]
   15e78:	cmp	r3, #0
   15e7c:	bne	15e70 <mcobject_async_node_delete@@Base+0x4c>
   15e80:	b	15eb4 <mcobject_async_node_delete@@Base+0x90>
   15e84:	ldr	r0, [r4, #68]	; 0x44
   15e88:	bl	10e50 <mcsync_unlock@plt>
   15e8c:	b	15f3c <mcobject_async_node_delete@@Base+0x118>
   15e90:	ldr	r2, [r4, #20]
   15e94:	ldr	r3, [r4, #12]
   15e98:	str	r5, [r3, r2, lsl #2]
   15e9c:	ldr	r3, [r4, #20]
   15ea0:	add	r3, r3, #1
   15ea4:	str	r3, [r4, #20]
   15ea8:	ldr	r5, [r5, #16]
   15eac:	cmp	r5, #0
   15eb0:	beq	15ee8 <mcobject_async_node_delete@@Base+0xc4>
   15eb4:	ldr	r1, [r4, #16]
   15eb8:	ldr	r3, [r4, #20]
   15ebc:	cmp	r3, r1
   15ec0:	bcc	15e90 <mcobject_async_node_delete@@Base+0x6c>
   15ec4:	lsl	r9, r1, #1
   15ec8:	lsl	r1, r1, #3
   15ecc:	ldr	r0, [r4, #12]
   15ed0:	bl	fb84 <mycore_realloc@plt>
   15ed4:	cmp	r0, #0
   15ed8:	beq	15e84 <mcobject_async_node_delete@@Base+0x60>
   15edc:	str	r9, [r4, #16]
   15ee0:	str	r0, [r4, #12]
   15ee4:	b	15e90 <mcobject_async_node_delete@@Base+0x6c>
   15ee8:	ldr	r0, [r7, #4]
   15eec:	cmp	r0, #0
   15ef0:	beq	15ef8 <mcobject_async_node_delete@@Base+0xd4>
   15ef4:	bl	10d60 <mycore_free@plt>
   15ef8:	mov	r3, #0
   15efc:	str	r3, [r8, r6, lsl #4]
   15f00:	str	r3, [r7, #4]
   15f04:	str	r3, [r7, #8]
   15f08:	str	r3, [r7, #12]
   15f0c:	ldr	r5, [r4, #64]	; 0x40
   15f10:	ldr	r3, [r4, #60]	; 0x3c
   15f14:	cmp	r3, r5
   15f18:	bcs	15f54 <mcobject_async_node_delete@@Base+0x130>
   15f1c:	ldr	r2, [r4, #60]	; 0x3c
   15f20:	ldr	r3, [r4, #56]	; 0x38
   15f24:	str	r6, [r3, r2, lsl #2]
   15f28:	ldr	r3, [r4, #60]	; 0x3c
   15f2c:	add	r3, r3, #1
   15f30:	str	r3, [r4, #60]	; 0x3c
   15f34:	ldr	r0, [r4, #68]	; 0x44
   15f38:	bl	10e50 <mcsync_unlock@plt>
   15f3c:	ldrd	r4, [sp]
   15f40:	ldrd	r6, [sp, #8]
   15f44:	ldrd	r8, [sp, #16]
   15f48:	ldr	sl, [sp, #24]
   15f4c:	add	sp, sp, #28
   15f50:	pop	{pc}		; (ldr pc, [sp], #4)
   15f54:	lsl	r1, r5, #2
   15f58:	ldr	r0, [r4, #56]	; 0x38
   15f5c:	bl	fb84 <mycore_realloc@plt>
   15f60:	cmp	r0, #0
   15f64:	beq	15f1c <mcobject_async_node_delete@@Base+0xf8>
   15f68:	str	r0, [r4, #56]	; 0x38
   15f6c:	lsl	r5, r5, #1
   15f70:	str	r5, [r4, #64]	; 0x40
   15f74:	b	15f1c <mcobject_async_node_delete@@Base+0xf8>

00015f78 <mcobject_async_malloc@@Base>:
   15f78:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15f7c:	strd	r6, [sp, #8]
   15f80:	str	r8, [sp, #16]
   15f84:	str	lr, [sp, #20]
   15f88:	sub	sp, sp, #8
   15f8c:	ldr	r5, [r0, #44]	; 0x2c
   15f90:	add	r3, r5, r1, lsl #4
   15f94:	ldr	ip, [r3, #12]
   15f98:	cmp	ip, #0
   15f9c:	bne	16038 <mcobject_async_malloc@@Base+0xc0>
   15fa0:	mov	r8, r2
   15fa4:	mov	r4, r1
   15fa8:	mov	r7, r0
   15fac:	ldr	r3, [r5, r1, lsl #4]
   15fb0:	ldr	r1, [r3, #4]
   15fb4:	ldr	r2, [r3, #8]
   15fb8:	cmp	r1, r2
   15fbc:	bcc	15fd8 <mcobject_async_malloc@@Base+0x60>
   15fc0:	ldr	r6, [r3, #12]
   15fc4:	cmp	r6, #0
   15fc8:	beq	1605c <mcobject_async_malloc@@Base+0xe4>
   15fcc:	str	r6, [r5, r4, lsl #4]
   15fd0:	mov	r3, #0
   15fd4:	str	r3, [r6, #4]
   15fd8:	cmp	r8, #0
   15fdc:	movne	r3, #0
   15fe0:	strne	r3, [r8]
   15fe4:	ldr	r3, [r5, r4, lsl #4]
   15fe8:	ldr	r2, [r3, #4]
   15fec:	ldr	r0, [r7, #8]
   15ff0:	mul	r0, r0, r2
   15ff4:	ldr	r3, [r3]
   15ff8:	str	r4, [r3, r0]
   15ffc:	ldr	r2, [r5, r4, lsl #4]
   16000:	ldr	r3, [r2, #4]
   16004:	add	r3, r3, #1
   16008:	str	r3, [r2, #4]
   1600c:	ldr	r3, [r5, r4, lsl #4]
   16010:	add	r0, r0, #4
   16014:	ldr	r6, [r3]
   16018:	add	r6, r6, r0
   1601c:	mov	r0, r6
   16020:	add	sp, sp, #8
   16024:	ldrd	r4, [sp]
   16028:	ldrd	r6, [sp, #8]
   1602c:	ldr	r8, [sp, #16]
   16030:	add	sp, sp, #20
   16034:	pop	{pc}		; (ldr pc, [sp], #4)
   16038:	cmp	r2, #0
   1603c:	movne	r1, #0
   16040:	strne	r1, [r2]
   16044:	ldr	r2, [r3, #12]
   16048:	sub	r2, r2, #1
   1604c:	str	r2, [r3, #12]
   16050:	ldr	r3, [r3, #4]
   16054:	ldr	r6, [r3, r2, lsl #2]
   16058:	b	1601c <mcobject_async_malloc@@Base+0xa4>
   1605c:	add	r2, sp, #4
   16060:	ldr	r1, [r0]
   16064:	bl	100ac <mcobject_async_chunk_malloc@plt>
   16068:	ldr	r3, [sp, #4]
   1606c:	cmp	r3, #0
   16070:	bne	16088 <mcobject_async_malloc@@Base+0x110>
   16074:	ldr	r3, [r5, r4, lsl #4]
   16078:	str	r3, [r0, #16]
   1607c:	str	r0, [r3, #12]
   16080:	str	r0, [r5, r4, lsl #4]
   16084:	b	15fd8 <mcobject_async_malloc@@Base+0x60>
   16088:	cmp	r8, #0
   1608c:	strne	r3, [r8]
   16090:	b	1601c <mcobject_async_malloc@@Base+0xa4>

00016094 <mcobject_async_free@@Base>:
   16094:	ldr	r3, [r1, #-4]
   16098:	ldr	r2, [r0, #48]	; 0x30
   1609c:	cmp	r2, r3
   160a0:	bls	1611c <mcobject_async_free@@Base+0x88>
   160a4:	strd	r4, [sp, #-16]!
   160a8:	str	r6, [sp, #8]
   160ac:	str	lr, [sp, #12]
   160b0:	mov	r5, r1
   160b4:	ldr	r4, [r0, #44]	; 0x2c
   160b8:	add	r4, r4, r3, lsl #4
   160bc:	ldr	r1, [r4, #8]
   160c0:	ldr	r3, [r4, #12]
   160c4:	cmp	r3, r1
   160c8:	bcs	160f8 <mcobject_async_free@@Base+0x64>
   160cc:	ldr	r2, [r4, #12]
   160d0:	ldr	r3, [r4, #4]
   160d4:	str	r5, [r3, r2, lsl #2]
   160d8:	ldr	r3, [r4, #12]
   160dc:	add	r3, r3, #1
   160e0:	str	r3, [r4, #12]
   160e4:	mov	r0, #0
   160e8:	ldrd	r4, [sp]
   160ec:	ldr	r6, [sp, #8]
   160f0:	add	sp, sp, #12
   160f4:	pop	{pc}		; (ldr pc, [sp], #4)
   160f8:	lsl	r6, r1, #1
   160fc:	lsl	r1, r1, #3
   16100:	ldr	r0, [r4, #4]
   16104:	bl	fb84 <mycore_realloc@plt>
   16108:	cmp	r0, #0
   1610c:	beq	16124 <mcobject_async_free@@Base+0x90>
   16110:	str	r0, [r4, #4]
   16114:	str	r6, [r4, #8]
   16118:	b	160cc <mcobject_async_free@@Base+0x38>
   1611c:	mov	r0, #5
   16120:	bx	lr
   16124:	mov	r0, #6
   16128:	b	160e8 <mcobject_async_free@@Base+0x54>

0001612c <mcsimple_create@@Base>:
   1612c:	str	r4, [sp, #-8]!
   16130:	str	lr, [sp, #4]
   16134:	mov	r1, #28
   16138:	mov	r0, #1
   1613c:	bl	feb4 <mycore_calloc@plt>
   16140:	ldr	r4, [sp]
   16144:	add	sp, sp, #4
   16148:	pop	{pc}		; (ldr pc, [sp], #4)

0001614c <mcsimple_clean@@Base>:
   1614c:	mov	r3, #0
   16150:	str	r3, [r0, #24]
   16154:	str	r3, [r0, #12]
   16158:	bx	lr

0001615c <mcsimple_destroy@@Base>:
   1615c:	strd	r4, [sp, #-16]!
   16160:	str	r6, [sp, #8]
   16164:	str	lr, [sp, #12]
   16168:	subs	r5, r0, #0
   1616c:	beq	161cc <mcsimple_destroy@@Base+0x70>
   16170:	mov	r6, r1
   16174:	ldr	r3, [r5, #4]
   16178:	cmp	r3, #0
   1617c:	beq	161c4 <mcsimple_destroy@@Base+0x68>
   16180:	ldr	r3, [r5, #16]
   16184:	cmp	r3, #0
   16188:	beq	161bc <mcsimple_destroy@@Base+0x60>
   1618c:	mov	r4, #0
   16190:	b	161a8 <mcsimple_destroy@@Base+0x4c>
   16194:	bl	10d60 <mycore_free@plt>
   16198:	add	r4, r4, #1
   1619c:	ldr	r3, [r5, #16]
   161a0:	cmp	r3, r4
   161a4:	bls	161bc <mcsimple_destroy@@Base+0x60>
   161a8:	ldr	r3, [r5, #4]
   161ac:	ldr	r0, [r3, r4, lsl #2]
   161b0:	cmp	r0, #0
   161b4:	bne	16194 <mcsimple_destroy@@Base+0x38>
   161b8:	b	16198 <mcsimple_destroy@@Base+0x3c>
   161bc:	ldr	r0, [r5, #4]
   161c0:	bl	10d60 <mycore_free@plt>
   161c4:	cmp	r6, #0
   161c8:	bne	161e0 <mcsimple_destroy@@Base+0x84>
   161cc:	mov	r0, r5
   161d0:	ldrd	r4, [sp]
   161d4:	ldr	r6, [sp, #8]
   161d8:	add	sp, sp, #12
   161dc:	pop	{pc}		; (ldr pc, [sp], #4)
   161e0:	mov	r0, r5
   161e4:	bl	10d60 <mycore_free@plt>
   161e8:	mov	r5, #0
   161ec:	b	161cc <mcsimple_destroy@@Base+0x70>

000161f0 <mcsimple_init_list_entries@@Base>:
   161f0:	strd	r4, [sp, #-16]!
   161f4:	str	r6, [sp, #8]
   161f8:	str	lr, [sp, #12]
   161fc:	mov	r4, r0
   16200:	mov	r5, r1
   16204:	ldr	r1, [r0, #8]
   16208:	ldr	r3, [r0, #12]
   1620c:	cmp	r3, r1
   16210:	bcs	16244 <mcsimple_init_list_entries@@Base+0x54>
   16214:	mov	r3, #0
   16218:	str	r3, [r4, #24]
   1621c:	ldr	r6, [r4, #4]
   16220:	ldr	r3, [r6, r5, lsl #2]
   16224:	cmp	r3, #0
   16228:	beq	16280 <mcsimple_init_list_entries@@Base+0x90>
   1622c:	ldr	r3, [r4, #4]
   16230:	ldr	r0, [r3, r5, lsl #2]
   16234:	ldrd	r4, [sp]
   16238:	ldr	r6, [sp, #8]
   1623c:	add	sp, sp, #12
   16240:	pop	{pc}		; (ldr pc, [sp], #4)
   16244:	add	r6, r1, #128	; 0x80
   16248:	lsl	r1, r1, #2
   1624c:	ldr	r0, [r0, #4]
   16250:	bl	fb84 <mycore_realloc@plt>
   16254:	cmp	r0, #0
   16258:	beq	16234 <mcsimple_init_list_entries@@Base+0x44>
   1625c:	str	r0, [r4, #4]
   16260:	ldr	r2, [r4, #8]
   16264:	sub	r2, r6, r2
   16268:	lsl	r2, r2, #2
   1626c:	mov	r1, #0
   16270:	add	r0, r0, r5, lsl #2
   16274:	bl	10844 <memset@plt>
   16278:	str	r6, [r4, #8]
   1627c:	b	16214 <mcsimple_init_list_entries@@Base+0x24>
   16280:	ldr	r3, [r4, #16]
   16284:	add	r3, r3, #1
   16288:	str	r3, [r4, #16]
   1628c:	ldr	r0, [r4, #20]
   16290:	bl	10c28 <mycore_malloc@plt>
   16294:	str	r0, [r6, r5, lsl #2]
   16298:	b	1622c <mcsimple_init_list_entries@@Base+0x3c>

0001629c <mcsimple_init@@Base>:
   1629c:	strd	r4, [sp, #-16]!
   162a0:	str	r6, [sp, #8]
   162a4:	str	lr, [sp, #12]
   162a8:	mov	r4, r0
   162ac:	mov	r0, r1
   162b0:	mov	r5, r2
   162b4:	mov	r6, r3
   162b8:	str	r3, [r4]
   162bc:	mov	r3, #0
   162c0:	str	r3, [r4, #16]
   162c4:	str	r3, [r4, #12]
   162c8:	str	r1, [r4, #8]
   162cc:	mov	r1, #4
   162d0:	bl	feb4 <mycore_calloc@plt>
   162d4:	str	r0, [r4, #4]
   162d8:	cmp	r0, #0
   162dc:	beq	162f4 <mcsimple_init@@Base+0x58>
   162e0:	mul	r5, r5, r6
   162e4:	str	r5, [r4, #20]
   162e8:	ldr	r1, [r4, #12]
   162ec:	mov	r0, r4
   162f0:	bl	10928 <mcsimple_init_list_entries@plt>
   162f4:	ldrd	r4, [sp]
   162f8:	ldr	r6, [sp, #8]
   162fc:	add	sp, sp, #12
   16300:	pop	{pc}		; (ldr pc, [sp], #4)

00016304 <mcsimple_malloc@@Base>:
   16304:	str	r4, [sp, #-8]!
   16308:	str	lr, [sp, #4]
   1630c:	mov	r4, r0
   16310:	ldr	r2, [r0, #24]
   16314:	ldr	r3, [r0, #20]
   16318:	cmp	r2, r3
   1631c:	bcs	1634c <mcsimple_malloc@@Base+0x48>
   16320:	ldr	r2, [r4, #24]
   16324:	ldr	r3, [r4]
   16328:	add	r3, r3, r2
   1632c:	str	r3, [r4, #24]
   16330:	ldr	r1, [r4, #12]
   16334:	ldr	r3, [r4, #4]
   16338:	ldr	r0, [r3, r1, lsl #2]
   1633c:	add	r0, r0, r2
   16340:	ldr	r4, [sp]
   16344:	add	sp, sp, #4
   16348:	pop	{pc}		; (ldr pc, [sp], #4)
   1634c:	ldr	r1, [r0, #12]
   16350:	add	r1, r1, #1
   16354:	str	r1, [r0, #12]
   16358:	bl	10928 <mcsimple_init_list_entries@plt>
   1635c:	cmp	r0, #0
   16360:	bne	16320 <mcsimple_malloc@@Base+0x1c>
   16364:	b	16340 <mcsimple_malloc@@Base+0x3c>

00016368 <mcsimple_get_by_absolute_position@@Base>:
   16368:	ldr	r3, [r0]
   1636c:	mul	r1, r3, r1
   16370:	ldr	r3, [r0, #20]
   16374:	udiv	r2, r1, r3
   16378:	ldr	ip, [r0, #16]
   1637c:	cmp	ip, r2
   16380:	bls	16398 <mcsimple_get_by_absolute_position@@Base+0x30>
   16384:	ldr	ip, [r0, #4]
   16388:	mls	r1, r3, r2, r1
   1638c:	ldr	r0, [ip, r2, lsl #2]
   16390:	add	r0, r0, r1
   16394:	bx	lr
   16398:	mov	r0, #0
   1639c:	bx	lr

000163a0 <mcsync_create@@Base>:
   163a0:	str	r4, [sp, #-8]!
   163a4:	str	lr, [sp, #4]
   163a8:	mov	r1, #8
   163ac:	mov	r0, #1
   163b0:	bl	feb4 <mycore_calloc@plt>
   163b4:	ldr	r4, [sp]
   163b8:	add	sp, sp, #4
   163bc:	pop	{pc}		; (ldr pc, [sp], #4)

000163c0 <mcsync_init@@Base>:
   163c0:	strd	r4, [sp, #-16]!
   163c4:	str	r6, [sp, #8]
   163c8:	str	lr, [sp, #12]
   163cc:	mov	r4, r0
   163d0:	bl	104f0 <mcsync_spin_create@plt>
   163d4:	str	r0, [r4]
   163d8:	cmp	r0, #0
   163dc:	moveq	r5, #1
   163e0:	beq	16410 <mcsync_init@@Base+0x50>
   163e4:	bl	10490 <mcsync_spin_init@plt>
   163e8:	subs	r5, r0, #0
   163ec:	bne	16424 <mcsync_init@@Base+0x64>
   163f0:	bl	1085c <mcsync_mutex_create@plt>
   163f4:	str	r0, [r4, #4]
   163f8:	cmp	r0, #0
   163fc:	moveq	r5, #1
   16400:	beq	16410 <mcsync_init@@Base+0x50>
   16404:	bl	10ae4 <mcsync_mutex_init@plt>
   16408:	subs	r5, r0, #0
   1640c:	bne	16430 <mcsync_init@@Base+0x70>
   16410:	mov	r0, r5
   16414:	ldrd	r4, [sp]
   16418:	ldr	r6, [sp, #8]
   1641c:	add	sp, sp, #12
   16420:	pop	{pc}		; (ldr pc, [sp], #4)
   16424:	ldr	r0, [r4]
   16428:	bl	ff44 <mcsync_spin_destroy@plt>
   1642c:	b	16410 <mcsync_init@@Base+0x50>
   16430:	ldr	r0, [r4]
   16434:	bl	ff44 <mcsync_spin_destroy@plt>
   16438:	ldr	r0, [r4, #4]
   1643c:	bl	fd10 <mcsync_mutex_destroy@plt>
   16440:	b	16410 <mcsync_init@@Base+0x50>

00016444 <mcsync_clean@@Base>:
   16444:	str	r4, [sp, #-8]!
   16448:	str	lr, [sp, #4]
   1644c:	mov	r4, r0
   16450:	ldr	r0, [r0]
   16454:	bl	10a0c <mcsync_spin_clean@plt>
   16458:	ldr	r0, [r4, #4]
   1645c:	bl	10de4 <mcsync_mutex_clean@plt>
   16460:	ldr	r4, [sp]
   16464:	add	sp, sp, #4
   16468:	pop	{pc}		; (ldr pc, [sp], #4)

0001646c <mcsync_destroy@@Base>:
   1646c:	strd	r4, [sp, #-16]!
   16470:	str	r6, [sp, #8]
   16474:	str	lr, [sp, #12]
   16478:	subs	r4, r0, #0
   1647c:	beq	1649c <mcsync_destroy@@Base+0x30>
   16480:	mov	r5, r1
   16484:	ldr	r0, [r4]
   16488:	bl	ff44 <mcsync_spin_destroy@plt>
   1648c:	ldr	r0, [r4, #4]
   16490:	bl	fd10 <mcsync_mutex_destroy@plt>
   16494:	cmp	r5, #0
   16498:	bne	164b0 <mcsync_destroy@@Base+0x44>
   1649c:	mov	r0, r4
   164a0:	ldrd	r4, [sp]
   164a4:	ldr	r6, [sp, #8]
   164a8:	add	sp, sp, #12
   164ac:	pop	{pc}		; (ldr pc, [sp], #4)
   164b0:	mov	r0, r4
   164b4:	bl	10d60 <mycore_free@plt>
   164b8:	mov	r4, #0
   164bc:	b	1649c <mcsync_destroy@@Base+0x30>

000164c0 <mcsync_lock@@Base>:
   164c0:	str	r4, [sp, #-8]!
   164c4:	str	lr, [sp, #4]
   164c8:	ldr	r0, [r0]
   164cc:	bl	10544 <mcsync_spin_lock@plt>
   164d0:	ldr	r4, [sp]
   164d4:	add	sp, sp, #4
   164d8:	pop	{pc}		; (ldr pc, [sp], #4)

000164dc <mcsync_unlock@@Base>:
   164dc:	str	r4, [sp, #-8]!
   164e0:	str	lr, [sp, #4]
   164e4:	ldr	r0, [r0]
   164e8:	bl	10fb8 <mcsync_spin_unlock@plt>
   164ec:	ldr	r4, [sp]
   164f0:	add	sp, sp, #4
   164f4:	pop	{pc}		; (ldr pc, [sp], #4)

000164f8 <mctree_create@@Base>:
   164f8:	strd	r4, [sp, #-16]!
   164fc:	str	r6, [sp, #8]
   16500:	str	lr, [sp, #12]
   16504:	mov	r5, r0
   16508:	mov	r0, #16
   1650c:	bl	10c28 <mycore_malloc@plt>
   16510:	subs	r4, r0, #0
   16514:	beq	16544 <mctree_create@@Base+0x4c>
   16518:	add	r0, r5, #512	; 0x200
   1651c:	str	r0, [r4, #8]
   16520:	add	r3, r5, #1
   16524:	str	r3, [r4, #4]
   16528:	mov	r1, #28
   1652c:	bl	feb4 <mycore_calloc@plt>
   16530:	mov	r6, r0
   16534:	str	r0, [r4]
   16538:	cmp	r0, #0
   1653c:	strne	r5, [r4, #12]
   16540:	beq	16558 <mctree_create@@Base+0x60>
   16544:	mov	r0, r4
   16548:	ldrd	r4, [sp]
   1654c:	ldr	r6, [sp, #8]
   16550:	add	sp, sp, #12
   16554:	pop	{pc}		; (ldr pc, [sp], #4)
   16558:	mov	r0, r4
   1655c:	bl	10d60 <mycore_free@plt>
   16560:	mov	r4, r6
   16564:	b	16544 <mctree_create@@Base+0x4c>

00016568 <mctree_clean@@Base>:
   16568:	str	r4, [sp, #-8]!
   1656c:	str	lr, [sp, #4]
   16570:	ldr	r3, [r0, #12]
   16574:	add	r3, r3, #1
   16578:	str	r3, [r0, #4]
   1657c:	ldr	r2, [r0, #8]
   16580:	rsb	r2, r2, r2, lsl #3
   16584:	lsl	r2, r2, #2
   16588:	mov	r1, #0
   1658c:	ldr	r0, [r0]
   16590:	bl	10844 <memset@plt>
   16594:	ldr	r4, [sp]
   16598:	add	sp, sp, #4
   1659c:	pop	{pc}		; (ldr pc, [sp], #4)

000165a0 <mctree_destroy@@Base>:
   165a0:	str	r4, [sp, #-8]!
   165a4:	str	lr, [sp, #4]
   165a8:	subs	r4, r0, #0
   165ac:	beq	165c8 <mctree_destroy@@Base+0x28>
   165b0:	ldr	r0, [r4]
   165b4:	cmp	r0, #0
   165b8:	beq	165c0 <mctree_destroy@@Base+0x20>
   165bc:	bl	10d60 <mycore_free@plt>
   165c0:	mov	r0, r4
   165c4:	bl	10d60 <mycore_free@plt>
   165c8:	mov	r0, #0
   165cc:	ldr	r4, [sp]
   165d0:	add	sp, sp, #4
   165d4:	pop	{pc}		; (ldr pc, [sp], #4)

000165d8 <__mtree_search_lowercase_to_start@@Base>:
   165d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   165dc:	strd	r6, [sp, #8]
   165e0:	str	r8, [sp, #16]
   165e4:	str	lr, [sp, #20]
   165e8:	mov	r8, r2
   165ec:	mov	r6, r3
   165f0:	ldr	r7, [r0]
   165f4:	subs	r4, r1, #0
   165f8:	bne	16644 <__mtree_search_lowercase_to_start@@Base+0x6c>
   165fc:	mov	r0, r4
   16600:	b	16684 <__mtree_search_lowercase_to_start@@Base+0xac>
   16604:	mov	r2, r6
   16608:	ldr	r1, [r7, r1, lsl #2]
   1660c:	mov	r0, r8
   16610:	bl	10238 <mycore_strncasecmp@plt>
   16614:	cmp	r0, #0
   16618:	beq	16698 <__mtree_search_lowercase_to_start@@Base+0xc0>
   1661c:	ldr	r4, [r5, #24]
   16620:	b	1663c <__mtree_search_lowercase_to_start@@Base+0x64>
   16624:	ldr	r4, [r5, #16]
   16628:	rsb	r3, r4, r4, lsl #3
   1662c:	add	r3, r7, r3, lsl #2
   16630:	ldr	r3, [r3, #4]
   16634:	cmp	r3, r6
   16638:	bcc	166a0 <__mtree_search_lowercase_to_start@@Base+0xc8>
   1663c:	cmp	r4, #0
   16640:	beq	16680 <__mtree_search_lowercase_to_start@@Base+0xa8>
   16644:	rsb	r1, r4, r4, lsl #3
   16648:	add	r5, r7, r1, lsl #2
   1664c:	ldr	r3, [r5, #4]
   16650:	cmp	r3, r6
   16654:	beq	16604 <__mtree_search_lowercase_to_start@@Base+0x2c>
   16658:	cmp	r3, r6
   1665c:	bcs	16624 <__mtree_search_lowercase_to_start@@Base+0x4c>
   16660:	ldr	r4, [r5, #20]
   16664:	rsb	r3, r4, r4, lsl #3
   16668:	add	r3, r7, r3, lsl #2
   1666c:	ldr	r3, [r3, #4]
   16670:	cmp	r3, r6
   16674:	bls	1663c <__mtree_search_lowercase_to_start@@Base+0x64>
   16678:	mov	r0, #0
   1667c:	b	16684 <__mtree_search_lowercase_to_start@@Base+0xac>
   16680:	mov	r0, r4
   16684:	ldrd	r4, [sp]
   16688:	ldrd	r6, [sp, #8]
   1668c:	ldr	r8, [sp, #16]
   16690:	add	sp, sp, #20
   16694:	pop	{pc}		; (ldr pc, [sp], #4)
   16698:	mov	r0, r4
   1669c:	b	16684 <__mtree_search_lowercase_to_start@@Base+0xac>
   166a0:	mov	r0, #0
   166a4:	b	16684 <__mtree_search_lowercase_to_start@@Base+0xac>

000166a8 <__mtree_search_to_start@@Base>:
   166a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   166ac:	strd	r6, [sp, #8]
   166b0:	str	r8, [sp, #16]
   166b4:	str	lr, [sp, #20]
   166b8:	mov	r8, r2
   166bc:	mov	r6, r3
   166c0:	ldr	r7, [r0]
   166c4:	subs	r4, r1, #0
   166c8:	bne	166f8 <__mtree_search_to_start@@Base+0x50>
   166cc:	mov	r0, r4
   166d0:	b	16758 <__mtree_search_to_start@@Base+0xb0>
   166d4:	mov	r2, r6
   166d8:	ldr	r1, [r7, r1, lsl #2]
   166dc:	mov	r0, r8
   166e0:	bl	10010 <memcmp@plt>
   166e4:	cmp	r0, #0
   166e8:	beq	1676c <__mtree_search_to_start@@Base+0xc4>
   166ec:	ldr	r4, [r5, #24]
   166f0:	cmp	r4, #0
   166f4:	beq	16754 <__mtree_search_to_start@@Base+0xac>
   166f8:	rsb	r1, r4, r4, lsl #3
   166fc:	add	r5, r7, r1, lsl #2
   16700:	ldr	r3, [r5, #4]
   16704:	cmp	r3, r6
   16708:	beq	166d4 <__mtree_search_to_start@@Base+0x2c>
   1670c:	cmp	r3, r6
   16710:	bcs	16734 <__mtree_search_to_start@@Base+0x8c>
   16714:	ldr	r4, [r5, #20]
   16718:	rsb	r3, r4, r4, lsl #3
   1671c:	add	r3, r7, r3, lsl #2
   16720:	ldr	r3, [r3, #4]
   16724:	cmp	r3, r6
   16728:	bls	166f0 <__mtree_search_to_start@@Base+0x48>
   1672c:	mov	r0, #0
   16730:	b	16758 <__mtree_search_to_start@@Base+0xb0>
   16734:	ldr	r4, [r5, #16]
   16738:	rsb	r3, r4, r4, lsl #3
   1673c:	add	r3, r7, r3, lsl #2
   16740:	ldr	r3, [r3, #4]
   16744:	cmp	r3, r6
   16748:	bcs	166f0 <__mtree_search_to_start@@Base+0x48>
   1674c:	mov	r0, #0
   16750:	b	16758 <__mtree_search_to_start@@Base+0xb0>
   16754:	mov	r0, r4
   16758:	ldrd	r4, [sp]
   1675c:	ldrd	r6, [sp, #8]
   16760:	ldr	r8, [sp, #16]
   16764:	add	sp, sp, #20
   16768:	pop	{pc}		; (ldr pc, [sp], #4)
   1676c:	mov	r0, r4
   16770:	b	16758 <__mtree_search_to_start@@Base+0xb0>

00016774 <mctree_insert_child@@Base>:
   16774:	strd	r4, [sp, #-16]!
   16778:	str	r6, [sp, #8]
   1677c:	str	lr, [sp, #12]
   16780:	mov	r4, r0
   16784:	ldr	r0, [r0]
   16788:	ldr	r5, [r4, #4]
   1678c:	rsb	r1, r1, r1, lsl #3
   16790:	add	r1, r0, r1, lsl #2
   16794:	str	r5, [r1, #24]
   16798:	rsb	r1, r5, r5, lsl #3
   1679c:	lsl	r1, r1, #2
   167a0:	add	ip, r0, r1
   167a4:	str	r2, [r0, r1]
   167a8:	str	r3, [ip, #4]
   167ac:	ldr	r3, [sp, #16]
   167b0:	str	r3, [ip, #8]
   167b4:	ldr	r1, [r4, #4]
   167b8:	add	r3, r1, #1
   167bc:	str	r3, [r4, #4]
   167c0:	ldr	r2, [r4, #8]
   167c4:	cmp	r3, r2
   167c8:	bcs	1685c <mctree_insert_child@@Base+0xe8>
   167cc:	ldr	r3, [r4, #4]
   167d0:	ldr	r1, [r4]
   167d4:	rsb	r3, r3, r3, lsl #3
   167d8:	lsl	r2, r3, #2
   167dc:	mov	r3, #0
   167e0:	str	r3, [r1, r2]
   167e4:	ldr	r2, [r4, #4]
   167e8:	ldr	r1, [r4]
   167ec:	rsb	r2, r2, r2, lsl #3
   167f0:	add	r2, r1, r2, lsl #2
   167f4:	str	r3, [r2, #8]
   167f8:	ldr	r2, [r4, #4]
   167fc:	ldr	r1, [r4]
   16800:	rsb	r2, r2, r2, lsl #3
   16804:	add	r2, r1, r2, lsl #2
   16808:	str	r3, [r2, #12]
   1680c:	ldr	r2, [r4, #4]
   16810:	ldr	r1, [r4]
   16814:	rsb	r2, r2, r2, lsl #3
   16818:	add	r2, r1, r2, lsl #2
   1681c:	str	r3, [r2, #16]
   16820:	ldr	r2, [r4, #4]
   16824:	ldr	r1, [r4]
   16828:	rsb	r2, r2, r2, lsl #3
   1682c:	add	r2, r1, r2, lsl #2
   16830:	str	r3, [r2, #20]
   16834:	ldr	r2, [r4, #4]
   16838:	ldr	r1, [r4]
   1683c:	rsb	r2, r2, r2, lsl #3
   16840:	add	r2, r1, r2, lsl #2
   16844:	str	r3, [r2, #24]
   16848:	mov	r0, r5
   1684c:	ldrd	r4, [sp]
   16850:	ldr	r6, [sp, #8]
   16854:	add	sp, sp, #12
   16858:	pop	{pc}		; (ldr pc, [sp], #4)
   1685c:	add	r1, r1, #4096	; 0x1000
   16860:	add	r1, r1, #1
   16864:	str	r1, [r4, #8]
   16868:	rsb	r1, r1, r1, lsl #3
   1686c:	lsl	r1, r1, #2
   16870:	ldr	r0, [r4]
   16874:	bl	fb84 <mycore_realloc@plt>
   16878:	str	r0, [r4]
   1687c:	b	167cc <mctree_insert_child@@Base+0x58>

00016880 <mctree_insert_after@@Base>:
   16880:	strd	r4, [sp, #-16]!
   16884:	str	r6, [sp, #8]
   16888:	str	lr, [sp, #12]
   1688c:	mov	r4, r0
   16890:	ldr	ip, [r0]
   16894:	ldr	r5, [r0, #4]
   16898:	rsb	r0, r1, r1, lsl #3
   1689c:	add	r0, ip, r0, lsl #2
   168a0:	ldr	lr, [r0, #20]
   168a4:	cmp	lr, #0
   168a8:	beq	168c8 <mctree_insert_after@@Base+0x48>
   168ac:	rsb	lr, lr, lr, lsl #3
   168b0:	add	lr, ip, lr, lsl #2
   168b4:	str	r5, [lr, #16]
   168b8:	ldr	r6, [r0, #20]
   168bc:	rsb	lr, r5, r5, lsl #3
   168c0:	add	lr, ip, lr, lsl #2
   168c4:	str	r6, [lr, #20]
   168c8:	str	r5, [r0, #20]
   168cc:	rsb	r0, r5, r5, lsl #3
   168d0:	lsl	r0, r0, #2
   168d4:	add	lr, ip, r0
   168d8:	str	r1, [lr, #16]
   168dc:	str	r2, [ip, r0]
   168e0:	str	r3, [lr, #4]
   168e4:	ldr	r3, [sp, #16]
   168e8:	str	r3, [lr, #8]
   168ec:	ldr	r1, [r4, #4]
   168f0:	add	r3, r1, #1
   168f4:	str	r3, [r4, #4]
   168f8:	ldr	r2, [r4, #8]
   168fc:	cmp	r3, r2
   16900:	bcs	16994 <mctree_insert_after@@Base+0x114>
   16904:	ldr	r3, [r4, #4]
   16908:	ldr	r1, [r4]
   1690c:	rsb	r3, r3, r3, lsl #3
   16910:	lsl	r2, r3, #2
   16914:	mov	r3, #0
   16918:	str	r3, [r1, r2]
   1691c:	ldr	r2, [r4, #4]
   16920:	ldr	r1, [r4]
   16924:	rsb	r2, r2, r2, lsl #3
   16928:	add	r2, r1, r2, lsl #2
   1692c:	str	r3, [r2, #8]
   16930:	ldr	r2, [r4, #4]
   16934:	ldr	r1, [r4]
   16938:	rsb	r2, r2, r2, lsl #3
   1693c:	add	r2, r1, r2, lsl #2
   16940:	str	r3, [r2, #12]
   16944:	ldr	r2, [r4, #4]
   16948:	ldr	r1, [r4]
   1694c:	rsb	r2, r2, r2, lsl #3
   16950:	add	r2, r1, r2, lsl #2
   16954:	str	r3, [r2, #16]
   16958:	ldr	r2, [r4, #4]
   1695c:	ldr	r1, [r4]
   16960:	rsb	r2, r2, r2, lsl #3
   16964:	add	r2, r1, r2, lsl #2
   16968:	str	r3, [r2, #20]
   1696c:	ldr	r2, [r4, #4]
   16970:	ldr	r1, [r4]
   16974:	rsb	r2, r2, r2, lsl #3
   16978:	add	r2, r1, r2, lsl #2
   1697c:	str	r3, [r2, #24]
   16980:	mov	r0, r5
   16984:	ldrd	r4, [sp]
   16988:	ldr	r6, [sp, #8]
   1698c:	add	sp, sp, #12
   16990:	pop	{pc}		; (ldr pc, [sp], #4)
   16994:	add	r1, r1, #4096	; 0x1000
   16998:	add	r1, r1, #1
   1699c:	str	r1, [r4, #8]
   169a0:	rsb	r1, r1, r1, lsl #3
   169a4:	lsl	r1, r1, #2
   169a8:	ldr	r0, [r4]
   169ac:	bl	fb84 <mycore_realloc@plt>
   169b0:	str	r0, [r4]
   169b4:	b	16904 <mctree_insert_after@@Base+0x84>

000169b8 <mctree_insert_before@@Base>:
   169b8:	strd	r4, [sp, #-16]!
   169bc:	str	r6, [sp, #8]
   169c0:	str	lr, [sp, #12]
   169c4:	mov	r4, r0
   169c8:	ldr	ip, [r0]
   169cc:	ldr	r5, [r0, #4]
   169d0:	rsb	r0, r1, r1, lsl #3
   169d4:	add	r0, ip, r0, lsl #2
   169d8:	ldr	lr, [r0, #16]
   169dc:	cmp	lr, #0
   169e0:	beq	16a00 <mctree_insert_before@@Base+0x48>
   169e4:	rsb	lr, lr, lr, lsl #3
   169e8:	add	lr, ip, lr, lsl #2
   169ec:	str	r5, [lr, #20]
   169f0:	ldr	r6, [r0, #16]
   169f4:	rsb	lr, r5, r5, lsl #3
   169f8:	add	lr, ip, lr, lsl #2
   169fc:	str	r6, [lr, #16]
   16a00:	str	r5, [r0, #16]
   16a04:	rsb	r0, r5, r5, lsl #3
   16a08:	lsl	r0, r0, #2
   16a0c:	add	lr, ip, r0
   16a10:	str	r1, [lr, #20]
   16a14:	str	r2, [ip, r0]
   16a18:	str	r3, [lr, #4]
   16a1c:	ldr	r3, [sp, #16]
   16a20:	str	r3, [lr, #8]
   16a24:	ldr	r1, [r4, #4]
   16a28:	add	r3, r1, #1
   16a2c:	str	r3, [r4, #4]
   16a30:	ldr	r2, [r4, #8]
   16a34:	cmp	r3, r2
   16a38:	bcs	16acc <mctree_insert_before@@Base+0x114>
   16a3c:	ldr	r3, [r4, #4]
   16a40:	ldr	r1, [r4]
   16a44:	rsb	r3, r3, r3, lsl #3
   16a48:	lsl	r2, r3, #2
   16a4c:	mov	r3, #0
   16a50:	str	r3, [r1, r2]
   16a54:	ldr	r2, [r4, #4]
   16a58:	ldr	r1, [r4]
   16a5c:	rsb	r2, r2, r2, lsl #3
   16a60:	add	r2, r1, r2, lsl #2
   16a64:	str	r3, [r2, #8]
   16a68:	ldr	r2, [r4, #4]
   16a6c:	ldr	r1, [r4]
   16a70:	rsb	r2, r2, r2, lsl #3
   16a74:	add	r2, r1, r2, lsl #2
   16a78:	str	r3, [r2, #12]
   16a7c:	ldr	r2, [r4, #4]
   16a80:	ldr	r1, [r4]
   16a84:	rsb	r2, r2, r2, lsl #3
   16a88:	add	r2, r1, r2, lsl #2
   16a8c:	str	r3, [r2, #16]
   16a90:	ldr	r2, [r4, #4]
   16a94:	ldr	r1, [r4]
   16a98:	rsb	r2, r2, r2, lsl #3
   16a9c:	add	r2, r1, r2, lsl #2
   16aa0:	str	r3, [r2, #20]
   16aa4:	ldr	r2, [r4, #4]
   16aa8:	ldr	r1, [r4]
   16aac:	rsb	r2, r2, r2, lsl #3
   16ab0:	add	r2, r1, r2, lsl #2
   16ab4:	str	r3, [r2, #24]
   16ab8:	mov	r0, r5
   16abc:	ldrd	r4, [sp]
   16ac0:	ldr	r6, [sp, #8]
   16ac4:	add	sp, sp, #12
   16ac8:	pop	{pc}		; (ldr pc, [sp], #4)
   16acc:	add	r1, r1, #4096	; 0x1000
   16ad0:	add	r1, r1, #1
   16ad4:	str	r1, [r4, #8]
   16ad8:	rsb	r1, r1, r1, lsl #3
   16adc:	lsl	r1, r1, #2
   16ae0:	ldr	r0, [r4]
   16ae4:	bl	fb84 <mycore_realloc@plt>
   16ae8:	str	r0, [r4]
   16aec:	b	16a3c <mctree_insert_before@@Base+0x84>

00016af0 <__mtree_insert_to_start@@Base>:
   16af0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   16af4:	strd	r6, [sp, #8]
   16af8:	strd	r8, [sp, #16]
   16afc:	str	lr, [sp, #24]
   16b00:	sub	sp, sp, #12
   16b04:	mov	r9, r0
   16b08:	mov	r8, r2
   16b0c:	mov	r6, r3
   16b10:	ldr	r7, [r0]
   16b14:	subs	r4, r1, #0
   16b18:	bne	16b4c <__mtree_insert_to_start@@Base+0x5c>
   16b1c:	mov	r0, r4
   16b20:	b	16c20 <__mtree_insert_to_start@@Base+0x130>
   16b24:	mov	r2, r6
   16b28:	ldr	r1, [r7, r1, lsl #2]
   16b2c:	mov	r0, r8
   16b30:	bl	10010 <memcmp@plt>
   16b34:	cmp	r0, #0
   16b38:	beq	16b90 <__mtree_insert_to_start@@Base+0xa0>
   16b3c:	ldr	r3, [r5, #24]
   16b40:	cmp	r3, #0
   16b44:	beq	16bac <__mtree_insert_to_start@@Base+0xbc>
   16b48:	mov	r4, r3
   16b4c:	rsb	r1, r4, r4, lsl #3
   16b50:	add	r5, r7, r1, lsl #2
   16b54:	ldr	r3, [r5, #4]
   16b58:	cmp	r3, r6
   16b5c:	beq	16b24 <__mtree_insert_to_start@@Base+0x34>
   16b60:	cmp	r3, r6
   16b64:	bcs	16c38 <__mtree_insert_to_start@@Base+0x148>
   16b68:	ldr	r3, [r5, #20]
   16b6c:	cmp	r3, #0
   16b70:	beq	16be8 <__mtree_insert_to_start@@Base+0xf8>
   16b74:	rsb	r2, r3, r3, lsl #3
   16b78:	add	r2, r7, r2, lsl #2
   16b7c:	ldr	r2, [r2, #4]
   16b80:	cmp	r2, r6
   16b84:	bhi	16be8 <__mtree_insert_to_start@@Base+0xf8>
   16b88:	mov	r4, r3
   16b8c:	b	16b4c <__mtree_insert_to_start@@Base+0x5c>
   16b90:	ldr	r3, [sp, #40]	; 0x28
   16b94:	cmp	r3, #0
   16b98:	moveq	r0, r4
   16b9c:	beq	16c20 <__mtree_insert_to_start@@Base+0x130>
   16ba0:	str	r3, [r5, #8]
   16ba4:	mov	r0, r4
   16ba8:	b	16c20 <__mtree_insert_to_start@@Base+0x130>
   16bac:	ldr	r3, [sp, #44]	; 0x2c
   16bb0:	cmp	r3, #0
   16bb4:	beq	16bc8 <__mtree_insert_to_start@@Base+0xd8>
   16bb8:	add	r2, sp, #40	; 0x28
   16bbc:	mov	r1, r6
   16bc0:	mov	r0, r8
   16bc4:	blx	r3
   16bc8:	ldr	r3, [sp, #40]	; 0x28
   16bcc:	str	r3, [sp]
   16bd0:	mov	r3, r6
   16bd4:	mov	r2, r8
   16bd8:	mov	r1, r4
   16bdc:	mov	r0, r9
   16be0:	bl	101e4 <mctree_insert_child@plt>
   16be4:	b	16c20 <__mtree_insert_to_start@@Base+0x130>
   16be8:	ldr	r3, [sp, #44]	; 0x2c
   16bec:	cmp	r3, #0
   16bf0:	beq	16c04 <__mtree_insert_to_start@@Base+0x114>
   16bf4:	add	r2, sp, #40	; 0x28
   16bf8:	mov	r1, r6
   16bfc:	mov	r0, r8
   16c00:	blx	r3
   16c04:	ldr	r3, [sp, #40]	; 0x28
   16c08:	str	r3, [sp]
   16c0c:	mov	r3, r6
   16c10:	mov	r2, r8
   16c14:	mov	r1, r4
   16c18:	mov	r0, r9
   16c1c:	bl	10c58 <mctree_insert_after@plt>
   16c20:	add	sp, sp, #12
   16c24:	ldrd	r4, [sp]
   16c28:	ldrd	r6, [sp, #8]
   16c2c:	ldrd	r8, [sp, #16]
   16c30:	add	sp, sp, #24
   16c34:	pop	{pc}		; (ldr pc, [sp], #4)
   16c38:	ldr	r3, [r5, #16]
   16c3c:	cmp	r3, #0
   16c40:	beq	16c60 <__mtree_insert_to_start@@Base+0x170>
   16c44:	rsb	r2, r3, r3, lsl #3
   16c48:	add	r2, r7, r2, lsl #2
   16c4c:	ldr	r2, [r2, #4]
   16c50:	cmp	r2, r6
   16c54:	bcc	16c60 <__mtree_insert_to_start@@Base+0x170>
   16c58:	mov	r4, r3
   16c5c:	b	16b4c <__mtree_insert_to_start@@Base+0x5c>
   16c60:	ldr	r3, [sp, #44]	; 0x2c
   16c64:	cmp	r3, #0
   16c68:	beq	16c7c <__mtree_insert_to_start@@Base+0x18c>
   16c6c:	add	r2, sp, #40	; 0x28
   16c70:	mov	r1, r6
   16c74:	mov	r0, r8
   16c78:	blx	r3
   16c7c:	ldr	r3, [sp, #40]	; 0x28
   16c80:	str	r3, [sp]
   16c84:	mov	r3, r6
   16c88:	mov	r2, r8
   16c8c:	mov	r1, r4
   16c90:	mov	r0, r9
   16c94:	bl	1004c <mctree_insert_before@plt>
   16c98:	b	16c20 <__mtree_insert_to_start@@Base+0x130>

00016c9c <mctree_insert@@Base>:
   16c9c:	strd	r4, [sp, #-20]!	; 0xffffffec
   16ca0:	strd	r6, [sp, #8]
   16ca4:	str	lr, [sp, #16]
   16ca8:	sub	sp, sp, #20
   16cac:	str	r3, [sp, #12]
   16cb0:	subs	r5, r2, #0
   16cb4:	beq	16d44 <mctree_insert@@Base+0xa8>
   16cb8:	mov	r7, r0
   16cbc:	mov	r6, r1
   16cc0:	ldr	r2, [pc, #184]	; 16d80 <mctree_insert@@Base+0xe4>
   16cc4:	add	r2, pc, r2
   16cc8:	add	r3, r1, r5
   16ccc:	ldrb	r3, [r3, #-1]
   16cd0:	ldrb	r3, [r2, r3]
   16cd4:	ldrb	r1, [r1]
   16cd8:	ldrb	r4, [r2, r1]
   16cdc:	add	r3, r3, r4
   16ce0:	ldr	r2, [r0, #12]
   16ce4:	udiv	r4, r3, r2
   16ce8:	mls	r4, r2, r4, r3
   16cec:	add	r4, r4, #1
   16cf0:	ldr	r3, [r0]
   16cf4:	rsb	r2, r4, r4, lsl #3
   16cf8:	add	r3, r3, r2, lsl #2
   16cfc:	ldr	r1, [r3, #24]
   16d00:	cmp	r1, #0
   16d04:	bne	16d5c <mctree_insert@@Base+0xc0>
   16d08:	ldr	r3, [sp, #40]	; 0x28
   16d0c:	cmp	r3, #0
   16d10:	beq	16d24 <mctree_insert@@Base+0x88>
   16d14:	add	r2, sp, #12
   16d18:	mov	r1, r5
   16d1c:	mov	r0, r6
   16d20:	blx	r3
   16d24:	ldr	r3, [sp, #12]
   16d28:	str	r3, [sp]
   16d2c:	mov	r3, r5
   16d30:	mov	r2, r6
   16d34:	mov	r1, r4
   16d38:	mov	r0, r7
   16d3c:	bl	101e4 <mctree_insert_child@plt>
   16d40:	mov	r5, r0
   16d44:	mov	r0, r5
   16d48:	add	sp, sp, #20
   16d4c:	ldrd	r4, [sp]
   16d50:	ldrd	r6, [sp, #8]
   16d54:	add	sp, sp, #16
   16d58:	pop	{pc}		; (ldr pc, [sp], #4)
   16d5c:	ldr	r3, [sp, #40]	; 0x28
   16d60:	str	r3, [sp, #4]
   16d64:	ldr	r3, [sp, #12]
   16d68:	str	r3, [sp]
   16d6c:	mov	r3, r5
   16d70:	mov	r2, r6
   16d74:	bl	1034c <__mtree_insert_to_start@plt>
   16d78:	mov	r5, r0
   16d7c:	b	16d44 <mctree_insert@@Base+0xa8>
   16d80:			; <UNDEFINED> instruction: 0x0001c2bc

00016d84 <mctree_search@@Base>:
   16d84:	subs	r3, r2, #0
   16d88:	beq	16e04 <mctree_search@@Base+0x80>
   16d8c:	str	r4, [sp, #-8]!
   16d90:	str	lr, [sp, #4]
   16d94:	ldr	r2, [pc, #112]	; 16e0c <mctree_search@@Base+0x88>
   16d98:	add	r2, pc, r2
   16d9c:	add	ip, r1, r3
   16da0:	ldrb	ip, [ip, #-1]
   16da4:	ldrb	ip, [r2, ip]
   16da8:	ldrb	lr, [r1]
   16dac:	ldrb	r2, [r2, lr]
   16db0:	add	r2, ip, r2
   16db4:	ldr	lr, [r0, #12]
   16db8:	udiv	ip, r2, lr
   16dbc:	mls	ip, lr, ip, r2
   16dc0:	add	ip, ip, #1
   16dc4:	ldr	r2, [r0]
   16dc8:	rsb	ip, ip, ip, lsl #3
   16dcc:	add	ip, r2, ip, lsl #2
   16dd0:	ldr	ip, [ip, #24]
   16dd4:	cmp	ip, #0
   16dd8:	moveq	r3, ip
   16ddc:	bne	16df0 <mctree_search@@Base+0x6c>
   16de0:	mov	r0, r3
   16de4:	ldr	r4, [sp]
   16de8:	add	sp, sp, #4
   16dec:	pop	{pc}		; (ldr pc, [sp], #4)
   16df0:	mov	r2, r1
   16df4:	mov	r1, ip
   16df8:	bl	1097c <__mtree_search_to_start@plt>
   16dfc:	mov	r3, r0
   16e00:	b	16de0 <mctree_search@@Base+0x5c>
   16e04:	mov	r0, r3
   16e08:	bx	lr
   16e0c:	andeq	ip, r1, r8, ror #3

00016e10 <mctree_search_lowercase@@Base>:
   16e10:	subs	r3, r2, #0
   16e14:	beq	16e90 <mctree_search_lowercase@@Base+0x80>
   16e18:	str	r4, [sp, #-8]!
   16e1c:	str	lr, [sp, #4]
   16e20:	ldr	r2, [pc, #112]	; 16e98 <mctree_search_lowercase@@Base+0x88>
   16e24:	add	r2, pc, r2
   16e28:	add	ip, r1, r3
   16e2c:	ldrb	ip, [ip, #-1]
   16e30:	ldrb	ip, [r2, ip]
   16e34:	ldrb	lr, [r1]
   16e38:	ldrb	r2, [r2, lr]
   16e3c:	add	r2, ip, r2
   16e40:	ldr	lr, [r0, #12]
   16e44:	udiv	ip, r2, lr
   16e48:	mls	ip, lr, ip, r2
   16e4c:	add	ip, ip, #1
   16e50:	ldr	r2, [r0]
   16e54:	rsb	ip, ip, ip, lsl #3
   16e58:	add	ip, r2, ip, lsl #2
   16e5c:	ldr	ip, [ip, #24]
   16e60:	cmp	ip, #0
   16e64:	moveq	r3, ip
   16e68:	bne	16e7c <mctree_search_lowercase@@Base+0x6c>
   16e6c:	mov	r0, r3
   16e70:	ldr	r4, [sp]
   16e74:	add	sp, sp, #4
   16e78:	pop	{pc}		; (ldr pc, [sp], #4)
   16e7c:	mov	r2, r1
   16e80:	mov	r1, ip
   16e84:	bl	10eb0 <__mtree_search_lowercase_to_start@plt>
   16e88:	mov	r3, r0
   16e8c:	b	16e6c <mctree_search_lowercase@@Base+0x5c>
   16e90:	mov	r0, r3
   16e94:	bx	lr
   16e98:	andeq	ip, r1, ip, asr r1

00016e9c <mycore_utils_mhash_hash@@Base>:
   16e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   16ea0:	cmp	r1, #0
   16ea4:	beq	16ed0 <mycore_utils_mhash_hash@@Base+0x34>
   16ea8:	sub	r3, r0, #1
   16eac:	add	r1, r0, r1
   16eb0:	sub	lr, r1, #1
   16eb4:	mov	r1, #0
   16eb8:	ldrb	ip, [r3, #1]!
   16ebc:	add	r1, ip, r1
   16ec0:	add	r1, r1, r1, lsl #10
   16ec4:	eor	r1, r1, r1, lsr #6
   16ec8:	cmp	r3, lr
   16ecc:	bne	16eb8 <mycore_utils_mhash_hash@@Base+0x1c>
   16ed0:	add	r1, r1, r1, lsl #3
   16ed4:	eor	r1, r1, r1, lsr #11
   16ed8:	add	r1, r1, r1, lsl #15
   16edc:	udiv	r0, r1, r2
   16ee0:	mls	r0, r2, r0, r1
   16ee4:	pop	{pc}		; (ldr pc, [sp], #4)

00016ee8 <mycore_utils_mhash_create@@Base>:
   16ee8:	str	r4, [sp, #-8]!
   16eec:	str	lr, [sp, #4]
   16ef0:	mov	r1, #24
   16ef4:	mov	r0, #1
   16ef8:	bl	feb4 <mycore_calloc@plt>
   16efc:	ldr	r4, [sp]
   16f00:	add	sp, sp, #4
   16f04:	pop	{pc}		; (ldr pc, [sp], #4)

00016f08 <mycore_utils_mhash_init@@Base>:
   16f08:	strd	r4, [sp, #-20]!	; 0xffffffec
   16f0c:	strd	r6, [sp, #8]
   16f10:	str	lr, [sp, #16]
   16f14:	sub	sp, sp, #12
   16f18:	mov	r5, r0
   16f1c:	mov	r6, r1
   16f20:	mov	r7, r2
   16f24:	bl	10100 <mchar_async_create@plt>
   16f28:	str	r0, [r5]
   16f2c:	cmp	r0, #0
   16f30:	moveq	r4, #2
   16f34:	beq	16f54 <mycore_utils_mhash_init@@Base+0x4c>
   16f38:	mov	r2, #4096	; 0x1000
   16f3c:	mov	r1, #128	; 0x80
   16f40:	bl	1043c <mchar_async_init@plt>
   16f44:	mov	r4, r0
   16f48:	str	r0, [sp, #4]
   16f4c:	cmp	r0, #0
   16f50:	beq	16f6c <mycore_utils_mhash_init@@Base+0x64>
   16f54:	mov	r0, r4
   16f58:	add	sp, sp, #12
   16f5c:	ldrd	r4, [sp]
   16f60:	ldrd	r6, [sp, #8]
   16f64:	add	sp, sp, #16
   16f68:	pop	{pc}		; (ldr pc, [sp], #4)
   16f6c:	add	r1, sp, #4
   16f70:	ldr	r0, [r5]
   16f74:	bl	1022c <mchar_async_node_add@plt>
   16f78:	str	r0, [r5, #4]
   16f7c:	ldr	r4, [sp, #4]
   16f80:	cmp	r4, #0
   16f84:	bne	16f54 <mycore_utils_mhash_init@@Base+0x4c>
   16f88:	cmp	r6, #128	; 0x80
   16f8c:	movcc	r6, #128	; 0x80
   16f90:	mov	r1, #4
   16f94:	mov	r0, r6
   16f98:	bl	feb4 <mycore_calloc@plt>
   16f9c:	str	r0, [r5, #8]
   16fa0:	cmp	r0, #0
   16fa4:	beq	16fbc <mycore_utils_mhash_init@@Base+0xb4>
   16fa8:	cmp	r7, #0
   16fac:	moveq	r7, #1
   16fb0:	str	r7, [r5, #20]
   16fb4:	str	r6, [r5, #12]
   16fb8:	b	16f54 <mycore_utils_mhash_init@@Base+0x4c>
   16fbc:	mov	r4, #2
   16fc0:	b	16f54 <mycore_utils_mhash_init@@Base+0x4c>

00016fc4 <mycore_utils_mhash_clean@@Base>:
   16fc4:	str	r4, [sp, #-8]!
   16fc8:	str	lr, [sp, #4]
   16fcc:	mov	r4, r0
   16fd0:	ldr	r0, [r0]
   16fd4:	bl	10b5c <mchar_async_clean@plt>
   16fd8:	ldr	r2, [r4, #12]
   16fdc:	lsl	r2, r2, #2
   16fe0:	mov	r1, #0
   16fe4:	ldr	r0, [r4, #8]
   16fe8:	bl	10844 <memset@plt>
   16fec:	ldr	r4, [sp]
   16ff0:	add	sp, sp, #4
   16ff4:	pop	{pc}		; (ldr pc, [sp], #4)

00016ff8 <mycore_utils_mhash_destroy@@Base>:
   16ff8:	strd	r4, [sp, #-16]!
   16ffc:	str	r6, [sp, #8]
   17000:	str	lr, [sp, #12]
   17004:	subs	r4, r0, #0
   17008:	beq	17030 <mycore_utils_mhash_destroy@@Base+0x38>
   1700c:	mov	r5, r1
   17010:	ldr	r0, [r4, #8]
   17014:	cmp	r0, #0
   17018:	beq	17028 <mycore_utils_mhash_destroy@@Base+0x30>
   1701c:	bl	10d60 <mycore_free@plt>
   17020:	mov	r3, #0
   17024:	str	r3, [r4, #8]
   17028:	cmp	r5, #0
   1702c:	bne	17044 <mycore_utils_mhash_destroy@@Base+0x4c>
   17030:	mov	r0, r4
   17034:	ldrd	r4, [sp]
   17038:	ldr	r6, [sp, #8]
   1703c:	add	sp, sp, #12
   17040:	pop	{pc}		; (ldr pc, [sp], #4)
   17044:	ldr	r0, [r4, #8]
   17048:	bl	10d60 <mycore_free@plt>
   1704c:	mov	r4, #0
   17050:	b	17030 <mycore_utils_mhash_destroy@@Base+0x38>

00017054 <mycore_utils_mhash_create_entry@@Base>:
   17054:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17058:	strd	r6, [sp, #8]
   1705c:	strd	r8, [sp, #16]
   17060:	str	sl, [sp, #24]
   17064:	str	lr, [sp, #28]
   17068:	mov	r5, r0
   1706c:	mov	r9, r1
   17070:	mov	r6, r2
   17074:	mov	r8, r3
   17078:	mov	r2, #16
   1707c:	ldr	r1, [r0, #4]
   17080:	ldr	r0, [r0]
   17084:	bl	108a4 <mchar_async_malloc@plt>
   17088:	mov	r4, r0
   1708c:	add	r2, r6, #1
   17090:	ldr	r1, [r5, #4]
   17094:	ldr	r0, [r5]
   17098:	bl	108a4 <mchar_async_malloc@plt>
   1709c:	mov	r7, r0
   170a0:	str	r0, [r4]
   170a4:	cmp	r0, #0
   170a8:	beq	170ec <mycore_utils_mhash_create_entry@@Base+0x98>
   170ac:	mov	r2, r6
   170b0:	mov	r1, r9
   170b4:	bl	fefc <memcpy@plt>
   170b8:	ldr	r2, [r4]
   170bc:	mov	r3, #0
   170c0:	strb	r3, [r2, r6]
   170c4:	str	r6, [r4, #4]
   170c8:	str	r8, [r4, #8]
   170cc:	str	r3, [r4, #12]
   170d0:	mov	r0, r4
   170d4:	ldrd	r4, [sp]
   170d8:	ldrd	r6, [sp, #8]
   170dc:	ldrd	r8, [sp, #16]
   170e0:	ldr	sl, [sp, #24]
   170e4:	add	sp, sp, #28
   170e8:	pop	{pc}		; (ldr pc, [sp], #4)
   170ec:	mov	r2, r4
   170f0:	ldr	r1, [r5, #4]
   170f4:	ldr	r0, [r5]
   170f8:	bl	106ac <mchar_async_free@plt>
   170fc:	mov	r4, r7
   17100:	b	170d0 <mycore_utils_mhash_create_entry@@Base+0x7c>

00017104 <mycore_utils_mhash_search@@Base>:
   17104:	strd	r4, [sp, #-16]!
   17108:	str	r6, [sp, #8]
   1710c:	str	lr, [sp, #12]
   17110:	cmp	r2, #0
   17114:	cmpne	r1, #0
   17118:	moveq	r4, #0
   1711c:	beq	17180 <mycore_utils_mhash_search@@Base+0x7c>
   17120:	mov	r6, r1
   17124:	mov	r5, r2
   17128:	mov	r4, r0
   1712c:	ldr	r2, [r0, #12]
   17130:	mov	r1, r5
   17134:	mov	r0, r6
   17138:	bl	1001c <mycore_utils_mhash_hash@plt>
   1713c:	ldr	r3, [r4, #8]
   17140:	ldr	r4, [r3, r0, lsl #2]
   17144:	cmp	r4, #0
   17148:	bne	1715c <mycore_utils_mhash_search@@Base+0x58>
   1714c:	b	17180 <mycore_utils_mhash_search@@Base+0x7c>
   17150:	ldr	r4, [r4, #12]
   17154:	cmp	r4, #0
   17158:	beq	17180 <mycore_utils_mhash_search@@Base+0x7c>
   1715c:	ldr	r3, [r4, #4]
   17160:	cmp	r3, r5
   17164:	bne	17150 <mycore_utils_mhash_search@@Base+0x4c>
   17168:	mov	r2, r5
   1716c:	mov	r1, r6
   17170:	ldr	r0, [r4]
   17174:	bl	10f28 <strncmp@plt>
   17178:	cmp	r0, #0
   1717c:	bne	17150 <mycore_utils_mhash_search@@Base+0x4c>
   17180:	mov	r0, r4
   17184:	ldrd	r4, [sp]
   17188:	ldr	r6, [sp, #8]
   1718c:	add	sp, sp, #12
   17190:	pop	{pc}		; (ldr pc, [sp], #4)

00017194 <mycore_utils_mhash_entry_by_id@@Base>:
   17194:	ldr	r3, [r0, #12]
   17198:	cmp	r3, r1
   1719c:	ldrhi	r3, [r0, #8]
   171a0:	ldrhi	r0, [r3, r1, lsl #2]
   171a4:	movls	r0, #0
   171a8:	bx	lr

000171ac <mycore_utils_mhash_get_table_size@@Base>:
   171ac:	ldr	r0, [r0, #12]
   171b0:	bx	lr

000171b4 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   171b4:	cmp	r2, #0
   171b8:	cmpne	r1, #0
   171bc:	beq	17230 <mycore_utils_mhash_rebuild_add_entry@@Base+0x7c>
   171c0:	strd	r4, [sp, #-16]!
   171c4:	str	r6, [sp, #8]
   171c8:	str	lr, [sp, #12]
   171cc:	mov	r5, r0
   171d0:	mov	r0, r1
   171d4:	mov	r1, r2
   171d8:	mov	r4, r3
   171dc:	mov	r3, #0
   171e0:	str	r3, [r4, #12]
   171e4:	ldr	r2, [r5, #12]
   171e8:	bl	1001c <mycore_utils_mhash_hash@plt>
   171ec:	ldr	r3, [r5, #8]
   171f0:	ldr	r1, [r3, r0, lsl #2]
   171f4:	cmp	r1, #0
   171f8:	streq	r4, [r3, r0, lsl #2]
   171fc:	moveq	r0, r4
   17200:	bne	1720c <mycore_utils_mhash_rebuild_add_entry@@Base+0x58>
   17204:	b	17220 <mycore_utils_mhash_rebuild_add_entry@@Base+0x6c>
   17208:	mov	r1, r2
   1720c:	ldr	r2, [r1, #12]
   17210:	cmp	r2, #0
   17214:	bne	17208 <mycore_utils_mhash_rebuild_add_entry@@Base+0x54>
   17218:	str	r4, [r1, #12]
   1721c:	mov	r0, r4
   17220:	ldrd	r4, [sp]
   17224:	ldr	r6, [sp, #8]
   17228:	add	sp, sp, #12
   1722c:	pop	{pc}		; (ldr pc, [sp], #4)
   17230:	mov	r0, #0
   17234:	bx	lr

00017238 <mycore_utils_mhash_rebuld@@Base>:
   17238:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1723c:	strd	r6, [sp, #8]
   17240:	str	r8, [sp, #16]
   17244:	str	lr, [sp, #20]
   17248:	mov	r5, r0
   1724c:	ldr	r8, [r0, #8]
   17250:	ldr	r4, [r0, #12]
   17254:	lsl	r0, r4, #1
   17258:	str	r0, [r5, #12]
   1725c:	mov	r1, #4
   17260:	bl	feb4 <mycore_calloc@plt>
   17264:	str	r0, [r5, #8]
   17268:	cmp	r0, #0
   1726c:	beq	172a4 <mycore_utils_mhash_rebuld@@Base+0x6c>
   17270:	ldr	r3, [r5, #12]
   17274:	cmp	r3, #0
   17278:	subne	r7, r8, #4
   1727c:	movne	r6, #0
   17280:	bne	172c0 <mycore_utils_mhash_rebuld@@Base+0x88>
   17284:	mov	r0, r8
   17288:	bl	10d60 <mycore_free@plt>
   1728c:	ldr	r0, [r5, #8]
   17290:	ldrd	r4, [sp]
   17294:	ldrd	r6, [sp, #8]
   17298:	ldr	r8, [sp, #16]
   1729c:	add	sp, sp, #20
   172a0:	pop	{pc}		; (ldr pc, [sp], #4)
   172a4:	str	r8, [r5, #8]
   172a8:	str	r4, [r5, #12]
   172ac:	b	17290 <mycore_utils_mhash_rebuld@@Base+0x58>
   172b0:	add	r6, r6, #1
   172b4:	ldr	r3, [r5, #12]
   172b8:	cmp	r3, r6
   172bc:	bls	17284 <mycore_utils_mhash_rebuld@@Base+0x4c>
   172c0:	ldr	r4, [r7, #4]!
   172c4:	cmp	r4, #0
   172c8:	beq	172b0 <mycore_utils_mhash_rebuld@@Base+0x78>
   172cc:	mov	r3, r4
   172d0:	ldr	r2, [r4, #4]
   172d4:	ldr	r1, [r4]
   172d8:	mov	r0, r5
   172dc:	bl	10e38 <mycore_utils_mhash_rebuild_add_entry@plt>
   172e0:	ldr	r4, [r4, #12]
   172e4:	cmp	r4, #0
   172e8:	bne	172cc <mycore_utils_mhash_rebuld@@Base+0x94>
   172ec:	b	172b0 <mycore_utils_mhash_rebuld@@Base+0x78>

000172f0 <mycore_utils_mhash_add_with_choice@@Base>:
   172f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   172f4:	strd	r6, [sp, #8]
   172f8:	str	r8, [sp, #16]
   172fc:	str	lr, [sp, #20]
   17300:	cmp	r2, #0
   17304:	cmpne	r1, #0
   17308:	moveq	r6, #0
   1730c:	beq	173f0 <mycore_utils_mhash_add_with_choice@@Base+0x100>
   17310:	mov	r7, r1
   17314:	mov	r6, r2
   17318:	mov	r8, r0
   1731c:	ldr	r2, [r0, #12]
   17320:	mov	r1, r6
   17324:	mov	r0, r7
   17328:	bl	1001c <mycore_utils_mhash_hash@plt>
   1732c:	mov	r5, r0
   17330:	ldr	r3, [r8, #8]
   17334:	ldr	r4, [r3, r0, lsl #2]
   17338:	cmp	r4, #0
   1733c:	movne	r5, #0
   17340:	bne	173a0 <mycore_utils_mhash_add_with_choice@@Base+0xb0>
   17344:	ldr	r3, [r8, #12]
   17348:	sub	r3, r3, r3, lsr #2
   1734c:	ldr	r2, [r8, #16]
   17350:	cmp	r2, r3
   17354:	bcs	17380 <mycore_utils_mhash_add_with_choice@@Base+0x90>
   17358:	ldr	r4, [r8, #8]
   1735c:	mov	r3, #0
   17360:	mov	r2, r6
   17364:	mov	r1, r7
   17368:	mov	r0, r8
   1736c:	bl	10e8c <mycore_utils_mhash_create_entry@plt>
   17370:	str	r0, [r4, r5, lsl #2]
   17374:	ldr	r3, [r8, #8]
   17378:	ldr	r6, [r3, r5, lsl #2]
   1737c:	b	173f0 <mycore_utils_mhash_add_with_choice@@Base+0x100>
   17380:	mov	r0, r8
   17384:	bl	109dc <mycore_utils_mhash_rebuld@plt>
   17388:	b	17358 <mycore_utils_mhash_add_with_choice@@Base+0x68>
   1738c:	ldr	r3, [r4, #12]
   17390:	cmp	r3, #0
   17394:	beq	173cc <mycore_utils_mhash_add_with_choice@@Base+0xdc>
   17398:	add	r5, r5, #1
   1739c:	mov	r4, r3
   173a0:	ldr	r3, [r4, #4]
   173a4:	cmp	r3, r6
   173a8:	bne	1738c <mycore_utils_mhash_add_with_choice@@Base+0x9c>
   173ac:	mov	r2, r6
   173b0:	mov	r1, r7
   173b4:	ldr	r0, [r4]
   173b8:	bl	10f28 <strncmp@plt>
   173bc:	cmp	r0, #0
   173c0:	bne	1738c <mycore_utils_mhash_add_with_choice@@Base+0x9c>
   173c4:	mov	r6, r4
   173c8:	b	173f0 <mycore_utils_mhash_add_with_choice@@Base+0x100>
   173cc:	mov	r2, r6
   173d0:	mov	r1, r7
   173d4:	mov	r0, r8
   173d8:	bl	10e8c <mycore_utils_mhash_create_entry@plt>
   173dc:	mov	r6, r0
   173e0:	str	r0, [r4, #12]
   173e4:	ldr	r3, [r8, #20]
   173e8:	cmp	r3, r5
   173ec:	bcc	17408 <mycore_utils_mhash_add_with_choice@@Base+0x118>
   173f0:	mov	r0, r6
   173f4:	ldrd	r4, [sp]
   173f8:	ldrd	r6, [sp, #8]
   173fc:	ldr	r8, [sp, #16]
   17400:	add	sp, sp, #20
   17404:	pop	{pc}		; (ldr pc, [sp], #4)
   17408:	mov	r0, r8
   1740c:	bl	109dc <mycore_utils_mhash_rebuld@plt>
   17410:	b	173f0 <mycore_utils_mhash_add_with_choice@@Base+0x100>

00017414 <mycore_utils_mhash_add@@Base>:
   17414:	str	r4, [sp, #-8]!
   17418:	str	lr, [sp, #4]
   1741c:	mov	r4, r3
   17420:	bl	10d48 <mycore_utils_mhash_add_with_choice@plt>
   17424:	cmp	r0, #0
   17428:	strne	r4, [r0, #8]
   1742c:	ldr	r4, [sp]
   17430:	add	sp, sp, #4
   17434:	pop	{pc}		; (ldr pc, [sp], #4)

00017438 <myencoding_detect_by_trigram@@Base>:
   17438:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1743c:	strd	r6, [sp, #8]
   17440:	strd	r8, [sp, #16]
   17444:	strd	sl, [sp, #24]
   17448:	str	lr, [sp, #32]
   1744c:	sub	sp, sp, #28
   17450:	str	r0, [sp, #16]
   17454:	str	r2, [sp, #20]
   17458:	str	r3, [sp, #12]
   1745c:	ldr	r9, [sp, #64]	; 0x40
   17460:	subs	fp, r2, #3
   17464:	beq	17500 <myencoding_detect_by_trigram@@Base+0xc8>
   17468:	mov	r8, r1
   1746c:	mov	sl, #0
   17470:	str	sl, [sp, #8]
   17474:	mov	r6, sl
   17478:	b	174b0 <myencoding_detect_by_trigram@@Base+0x78>
   1747c:	ldr	r3, [sp, #4]
   17480:	ldr	r3, [r3, #4]
   17484:	add	sl, sl, r3
   17488:	ldr	r3, [sp, #8]
   1748c:	add	r3, r3, #1
   17490:	str	r3, [sp, #8]
   17494:	ldr	r3, [sp, #20]
   17498:	ldr	r2, [sp, #68]	; 0x44
   1749c:	cmp	sl, r2
   174a0:	movcs	r6, r3
   174a4:	add	r6, r6, #1
   174a8:	cmp	r6, fp
   174ac:	bcs	17508 <myencoding_detect_by_trigram@@Base+0xd0>
   174b0:	add	r7, r8, r6
   174b4:	ldrsb	r3, [r8, r6]
   174b8:	cmp	r3, #0
   174bc:	bge	174a4 <myencoding_detect_by_trigram@@Base+0x6c>
   174c0:	cmp	r9, #0
   174c4:	beq	174a4 <myencoding_detect_by_trigram@@Base+0x6c>
   174c8:	ldr	r4, [sp, #12]
   174cc:	mov	r5, #0
   174d0:	str	r4, [sp, #4]
   174d4:	mov	r2, #3
   174d8:	mov	r1, r7
   174dc:	mov	r0, r4
   174e0:	bl	10010 <memcmp@plt>
   174e4:	cmp	r0, #0
   174e8:	beq	1747c <myencoding_detect_by_trigram@@Base+0x44>
   174ec:	add	r5, r5, #1
   174f0:	add	r4, r4, #8
   174f4:	cmp	r9, r5
   174f8:	bne	174d0 <myencoding_detect_by_trigram@@Base+0x98>
   174fc:	b	174a4 <myencoding_detect_by_trigram@@Base+0x6c>
   17500:	mov	sl, fp
   17504:	str	fp, [sp, #8]
   17508:	ldr	r3, [sp, #16]
   1750c:	ldr	r2, [sp, #8]
   17510:	str	r2, [r3]
   17514:	str	sl, [r3, #4]
   17518:	mov	r0, r3
   1751c:	add	sp, sp, #28
   17520:	ldrd	r4, [sp]
   17524:	ldrd	r6, [sp, #8]
   17528:	ldrd	r8, [sp, #16]
   1752c:	ldrd	sl, [sp, #24]
   17530:	add	sp, sp, #32
   17534:	pop	{pc}		; (ldr pc, [sp], #4)

00017538 <myencoding_detect_russian_has_end@@Base>:
   17538:	ldr	r3, [r0, #4]
   1753c:	cmp	r3, r2
   17540:	bcs	17558 <myencoding_detect_russian_has_end@@Base+0x20>
   17544:	ldr	r0, [r0]
   17548:	cmp	r0, r1
   1754c:	movcc	r0, #0
   17550:	movcs	r0, #1
   17554:	bx	lr
   17558:	mov	r0, #1
   1755c:	bx	lr

00017560 <myencoding_detect_unicode_has_end@@Base>:
   17560:	ldr	r3, [r0, #4]
   17564:	cmp	r3, #0
   17568:	bne	1757c <myencoding_detect_unicode_has_end@@Base+0x1c>
   1756c:	ldr	r0, [r0, #8]
   17570:	clz	r0, r0
   17574:	lsr	r0, r0, #5
   17578:	bx	lr
   1757c:	ldr	r2, [r0, #8]
   17580:	cmp	r2, #0
   17584:	beq	175a4 <myencoding_detect_unicode_has_end@@Base+0x44>
   17588:	mov	r0, #100	; 0x64
   1758c:	mul	r0, r0, r2
   17590:	udiv	r0, r0, r3
   17594:	cmp	r0, r1
   17598:	movcs	r0, #0
   1759c:	movcc	r0, #1
   175a0:	bx	lr
   175a4:	mov	r0, #1
   175a8:	bx	lr

000175ac <myencoding_detect_utf_8@@Base>:
   175ac:	strd	r4, [sp, #-16]!
   175b0:	str	r6, [sp, #8]
   175b4:	str	lr, [sp, #12]
   175b8:	cmp	r2, #0
   175bc:	beq	17718 <myencoding_detect_utf_8@@Base+0x16c>
   175c0:	mov	r4, #0
   175c4:	mov	r6, r4
   175c8:	mov	lr, r4
   175cc:	mov	r3, r4
   175d0:	b	176b0 <myencoding_detect_utf_8@@Base+0x104>
   175d4:	add	ip, r3, #2
   175d8:	cmp	r2, ip
   175dc:	bls	17724 <myencoding_detect_utf_8@@Base+0x178>
   175e0:	add	r3, r1, r3
   175e4:	ldrb	r3, [r3, #1]
   175e8:	tst	r3, #128	; 0x80
   175ec:	bne	175fc <myencoding_detect_utf_8@@Base+0x50>
   175f0:	add	r4, r4, #1
   175f4:	mov	r3, ip
   175f8:	b	176b0 <myencoding_detect_utf_8@@Base+0x104>
   175fc:	tst	r3, #64	; 0x40
   17600:	addeq	r6, r6, #1
   17604:	moveq	r3, ip
   17608:	beq	176b0 <myencoding_detect_utf_8@@Base+0x104>
   1760c:	b	175f0 <myencoding_detect_utf_8@@Base+0x44>
   17610:	add	ip, r3, #3
   17614:	cmp	r2, ip
   17618:	bls	17724 <myencoding_detect_utf_8@@Base+0x178>
   1761c:	add	r5, r1, r3
   17620:	ldrb	r5, [r5, #2]
   17624:	tst	r5, #128	; 0x80
   17628:	bne	17638 <myencoding_detect_utf_8@@Base+0x8c>
   1762c:	add	r4, r4, #1
   17630:	mov	r3, ip
   17634:	b	176b0 <myencoding_detect_utf_8@@Base+0x104>
   17638:	tst	r5, #64	; 0x40
   1763c:	bne	1762c <myencoding_detect_utf_8@@Base+0x80>
   17640:	add	r3, r1, r3
   17644:	ldrb	r3, [r3, #1]
   17648:	tst	r3, #128	; 0x80
   1764c:	beq	1762c <myencoding_detect_utf_8@@Base+0x80>
   17650:	tst	r3, #64	; 0x40
   17654:	addeq	r6, r6, #1
   17658:	moveq	r3, ip
   1765c:	beq	176b0 <myencoding_detect_utf_8@@Base+0x104>
   17660:	b	1762c <myencoding_detect_utf_8@@Base+0x80>
   17664:	tst	r5, #64	; 0x40
   17668:	bne	1770c <myencoding_detect_utf_8@@Base+0x160>
   1766c:	add	r5, r1, r3
   17670:	ldrb	r5, [r5, #2]
   17674:	tst	r5, #128	; 0x80
   17678:	beq	1770c <myencoding_detect_utf_8@@Base+0x160>
   1767c:	tst	r5, #64	; 0x40
   17680:	bne	1770c <myencoding_detect_utf_8@@Base+0x160>
   17684:	add	r3, r1, r3
   17688:	ldrb	r3, [r3, #1]
   1768c:	tst	r3, #128	; 0x80
   17690:	beq	1770c <myencoding_detect_utf_8@@Base+0x160>
   17694:	tst	r3, #64	; 0x40
   17698:	addeq	r6, r6, #1
   1769c:	moveq	r3, ip
   176a0:	beq	176b0 <myencoding_detect_utf_8@@Base+0x104>
   176a4:	b	1770c <myencoding_detect_utf_8@@Base+0x160>
   176a8:	cmp	r3, r2
   176ac:	bcs	17724 <myencoding_detect_utf_8@@Base+0x178>
   176b0:	ldrb	ip, [r1, r3]
   176b4:	tst	ip, #128	; 0x80
   176b8:	addeq	r3, r3, #1
   176bc:	addeq	lr, lr, #1
   176c0:	beq	176a8 <myencoding_detect_utf_8@@Base+0xfc>
   176c4:	and	r5, ip, #224	; 0xe0
   176c8:	cmp	r5, #192	; 0xc0
   176cc:	beq	175d4 <myencoding_detect_utf_8@@Base+0x28>
   176d0:	and	r5, ip, #240	; 0xf0
   176d4:	cmp	r5, #224	; 0xe0
   176d8:	beq	17610 <myencoding_detect_utf_8@@Base+0x64>
   176dc:	and	ip, ip, #248	; 0xf8
   176e0:	cmp	ip, #240	; 0xf0
   176e4:	addne	r3, r3, #1
   176e8:	addne	r4, r4, #1
   176ec:	bne	176a8 <myencoding_detect_utf_8@@Base+0xfc>
   176f0:	add	ip, r3, #4
   176f4:	cmp	r2, ip
   176f8:	bls	17724 <myencoding_detect_utf_8@@Base+0x178>
   176fc:	add	r5, r1, r3
   17700:	ldrb	r5, [r5, #3]
   17704:	tst	r5, #128	; 0x80
   17708:	bne	17664 <myencoding_detect_utf_8@@Base+0xb8>
   1770c:	add	r4, r4, #1
   17710:	mov	r3, ip
   17714:	b	176b0 <myencoding_detect_utf_8@@Base+0x104>
   17718:	mov	r4, r2
   1771c:	mov	r6, r2
   17720:	mov	lr, r2
   17724:	str	lr, [r0]
   17728:	str	r6, [r0, #4]
   1772c:	str	r4, [r0, #8]
   17730:	ldrd	r4, [sp]
   17734:	ldr	r6, [sp, #8]
   17738:	add	sp, sp, #12
   1773c:	pop	{pc}		; (ldr pc, [sp], #4)

00017740 <myencoding_detect_utf_16@@Base>:
   17740:	strd	r4, [sp, #-16]!
   17744:	str	r6, [sp, #8]
   17748:	str	lr, [sp, #12]
   1774c:	cmp	r2, #0
   17750:	beq	177c4 <myencoding_detect_utf_16@@Base+0x84>
   17754:	sub	r3, r1, #1
   17758:	mov	r5, #0
   1775c:	mov	r6, r5
   17760:	rsb	r1, r1, #1
   17764:	b	17788 <myencoding_detect_utf_16@@Base+0x48>
   17768:	ldrb	ip, [r3, #-1]
   1776c:	sub	ip, ip, #32
   17770:	uxtb	ip, ip
   17774:	cmp	ip, #94	; 0x5e
   17778:	addls	r6, r6, #1
   1777c:	add	ip, r1, r3
   17780:	cmp	ip, r2
   17784:	bcs	177cc <myencoding_detect_utf_16@@Base+0x8c>
   17788:	add	lr, r1, r3
   1778c:	add	r3, r3, #1
   17790:	ldrb	ip, [r3]
   17794:	cmp	ip, #0
   17798:	addne	ip, r1, r3
   1779c:	bne	17780 <myencoding_detect_utf_16@@Base+0x40>
   177a0:	tst	lr, #1
   177a4:	bne	17768 <myencoding_detect_utf_16@@Base+0x28>
   177a8:	add	ip, r1, r3
   177ac:	ldrb	lr, [r3, #1]
   177b0:	sub	lr, lr, #32
   177b4:	uxtb	lr, lr
   177b8:	cmp	lr, #94	; 0x5e
   177bc:	addls	r5, r5, #1
   177c0:	b	17780 <myencoding_detect_utf_16@@Base+0x40>
   177c4:	mov	r5, r2
   177c8:	mov	r6, r2
   177cc:	mov	r3, #0
   177d0:	str	r3, [r0]
   177d4:	str	r6, [r0, #4]
   177d8:	str	r5, [r0, #8]
   177dc:	ldrd	r4, [sp]
   177e0:	ldr	r6, [sp, #8]
   177e4:	add	sp, sp, #12
   177e8:	pop	{pc}		; (ldr pc, [sp], #4)

000177ec <myencoding_detect_bom@@Base>:
   177ec:	cmp	r1, #2
   177f0:	bls	17860 <myencoding_detect_bom@@Base+0x74>
   177f4:	ldrb	r3, [r0]
   177f8:	cmp	r3, #239	; 0xef
   177fc:	beq	17828 <myencoding_detect_bom@@Base+0x3c>
   17800:	ldrb	r3, [r0]
   17804:	cmp	r3, #254	; 0xfe
   17808:	beq	17870 <myencoding_detect_bom@@Base+0x84>
   1780c:	cmp	r3, #255	; 0xff
   17810:	bne	178a4 <myencoding_detect_bom@@Base+0xb8>
   17814:	ldrb	r3, [r0, #1]
   17818:	cmp	r3, #254	; 0xfe
   1781c:	beq	17894 <myencoding_detect_bom@@Base+0xa8>
   17820:	mov	r0, #0
   17824:	bx	lr
   17828:	ldrb	r3, [r0, #1]
   1782c:	cmp	r3, #187	; 0xbb
   17830:	beq	1783c <myencoding_detect_bom@@Base+0x50>
   17834:	mov	r0, #0
   17838:	bx	lr
   1783c:	ldrb	r3, [r0, #2]
   17840:	cmp	r3, #191	; 0xbf
   17844:	beq	17850 <myencoding_detect_bom@@Base+0x64>
   17848:	mov	r0, #0
   1784c:	bx	lr
   17850:	mov	r3, #0
   17854:	str	r3, [r2]
   17858:	mov	r0, #1
   1785c:	bx	lr
   17860:	cmp	r1, #2
   17864:	beq	17800 <myencoding_detect_bom@@Base+0x14>
   17868:	mov	r0, #0
   1786c:	bx	lr
   17870:	ldrb	r3, [r0, #1]
   17874:	cmp	r3, #255	; 0xff
   17878:	beq	17884 <myencoding_detect_bom@@Base+0x98>
   1787c:	mov	r0, #0
   17880:	bx	lr
   17884:	mov	r3, #5
   17888:	str	r3, [r2]
   1788c:	mov	r0, #1
   17890:	bx	lr
   17894:	mov	r3, #4
   17898:	str	r3, [r2]
   1789c:	mov	r0, #1
   178a0:	bx	lr
   178a4:	mov	r0, #0
   178a8:	bx	lr

000178ac <myencoding_detect_and_cut_bom@@Base>:
   178ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   178b0:	strd	r6, [sp, #8]
   178b4:	str	r8, [sp, #16]
   178b8:	str	lr, [sp, #20]
   178bc:	mov	r5, r0
   178c0:	mov	r4, r1
   178c4:	mov	r7, r2
   178c8:	mov	r6, r3
   178cc:	bl	101b4 <myencoding_detect_bom@plt>
   178d0:	cmp	r0, #0
   178d4:	bne	178ec <myencoding_detect_and_cut_bom@@Base+0x40>
   178d8:	ldrd	r4, [sp]
   178dc:	ldrd	r6, [sp, #8]
   178e0:	ldr	r8, [sp, #16]
   178e4:	add	sp, sp, #20
   178e8:	pop	{pc}		; (ldr pc, [sp], #4)
   178ec:	ldr	r3, [r7]
   178f0:	cmp	r3, #0
   178f4:	bne	17910 <myencoding_detect_and_cut_bom@@Base+0x64>
   178f8:	add	r5, r5, #3
   178fc:	str	r5, [r6]
   17900:	sub	r4, r4, #3
   17904:	ldr	r3, [sp, #24]
   17908:	str	r4, [r3]
   1790c:	b	178d8 <myencoding_detect_and_cut_bom@@Base+0x2c>
   17910:	add	r5, r5, #2
   17914:	str	r5, [r6]
   17918:	sub	r4, r4, #2
   1791c:	ldr	r3, [sp, #24]
   17920:	str	r4, [r3]
   17924:	b	178d8 <myencoding_detect_and_cut_bom@@Base+0x2c>

00017928 <myencoding_detect_unicode@@Base>:
   17928:	strd	r4, [sp, #-16]!
   1792c:	str	r6, [sp, #8]
   17930:	str	lr, [sp, #12]
   17934:	sub	sp, sp, #32
   17938:	mov	r4, r0
   1793c:	mov	r5, r1
   17940:	mov	r6, r2
   17944:	mov	r3, #0
   17948:	str	r3, [r2]
   1794c:	mov	r2, r1
   17950:	mov	r1, r0
   17954:	add	r0, sp, #20
   17958:	bl	fe78 <myencoding_detect_utf_16@plt>
   1795c:	ldr	r3, [sp, #28]
   17960:	cmp	r3, #0
   17964:	bne	17984 <myencoding_detect_unicode@@Base+0x5c>
   17968:	ldr	r3, [sp, #24]
   1796c:	cmp	r3, #2
   17970:	movhi	r3, #4
   17974:	strhi	r3, [r6]
   17978:	movhi	r0, #1
   1797c:	bls	179a4 <myencoding_detect_unicode@@Base+0x7c>
   17980:	b	179e0 <myencoding_detect_unicode@@Base+0xb8>
   17984:	cmp	r3, #2
   17988:	bls	179a4 <myencoding_detect_unicode@@Base+0x7c>
   1798c:	ldr	r3, [sp, #24]
   17990:	cmp	r3, #0
   17994:	moveq	r3, #5
   17998:	streq	r3, [r6]
   1799c:	moveq	r0, #1
   179a0:	beq	179e0 <myencoding_detect_unicode@@Base+0xb8>
   179a4:	mov	r2, r5
   179a8:	mov	r1, r4
   179ac:	mov	r4, sp
   179b0:	mov	r0, r4
   179b4:	bl	10fac <myencoding_detect_utf_8@plt>
   179b8:	add	r0, sp, #20
   179bc:	ldrd	r2, [sp]
   179c0:	strd	r2, [sp, #20]
   179c4:	ldr	r3, [r4, #8]
   179c8:	str	r3, [r0, #8]
   179cc:	mov	r1, #10
   179d0:	bl	10a00 <myencoding_detect_unicode_has_end@plt>
   179d4:	cmp	r0, #0
   179d8:	movne	r3, #0
   179dc:	strne	r3, [r6]
   179e0:	add	sp, sp, #32
   179e4:	ldrd	r4, [sp]
   179e8:	ldr	r6, [sp, #8]
   179ec:	add	sp, sp, #12
   179f0:	pop	{pc}		; (ldr pc, [sp], #4)

000179f4 <myencoding_detect_russian@@Base>:
   179f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   179f8:	strd	r6, [sp, #8]
   179fc:	str	r8, [sp, #16]
   17a00:	str	lr, [sp, #20]
   17a04:	sub	sp, sp, #24
   17a08:	mov	r7, r0
   17a0c:	mov	r8, r1
   17a10:	mov	r6, r2
   17a14:	mov	r3, #0
   17a18:	str	r3, [r2]
   17a1c:	movw	r5, #34464	; 0x86a0
   17a20:	movt	r5, #1
   17a24:	str	r5, [sp, #4]
   17a28:	mov	r3, #1000	; 0x3e8
   17a2c:	str	r3, [sp]
   17a30:	ldr	r3, [pc, #516]	; 17c3c <myencoding_detect_russian@@Base+0x248>
   17a34:	add	r3, pc, r3
   17a38:	mov	r2, r1
   17a3c:	mov	r1, r0
   17a40:	add	r4, sp, #16
   17a44:	mov	r0, r4
   17a48:	bl	106a0 <myencoding_detect_by_trigram@plt>
   17a4c:	mov	r2, r5
   17a50:	mov	r1, #50	; 0x32
   17a54:	mov	r0, r4
   17a58:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   17a5c:	cmp	r0, #0
   17a60:	movne	r3, #32
   17a64:	strne	r3, [r6]
   17a68:	bne	17c24 <myencoding_detect_russian@@Base+0x230>
   17a6c:	ldr	r4, [sp, #20]
   17a70:	cmp	r4, #0
   17a74:	movne	r3, #32
   17a78:	strne	r3, [r6]
   17a7c:	movw	r5, #34464	; 0x86a0
   17a80:	movt	r5, #1
   17a84:	str	r5, [sp, #4]
   17a88:	mov	r3, #1000	; 0x3e8
   17a8c:	str	r3, [sp]
   17a90:	ldr	r3, [pc, #424]	; 17c40 <myencoding_detect_russian@@Base+0x24c>
   17a94:	add	r3, pc, r3
   17a98:	mov	r2, r8
   17a9c:	mov	r1, r7
   17aa0:	add	r0, sp, #8
   17aa4:	bl	106a0 <myencoding_detect_by_trigram@plt>
   17aa8:	ldrd	r2, [sp, #8]
   17aac:	strd	r2, [sp, #16]
   17ab0:	mov	r2, r5
   17ab4:	mov	r1, #50	; 0x32
   17ab8:	add	r0, sp, #16
   17abc:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   17ac0:	cmp	r0, #0
   17ac4:	movne	r3, #27
   17ac8:	strne	r3, [r6]
   17acc:	bne	17c24 <myencoding_detect_russian@@Base+0x230>
   17ad0:	ldr	r3, [sp, #20]
   17ad4:	cmp	r3, r4
   17ad8:	bls	17ae8 <myencoding_detect_russian@@Base+0xf4>
   17adc:	mov	r2, #27
   17ae0:	str	r2, [r6]
   17ae4:	mov	r4, r3
   17ae8:	movw	r5, #34464	; 0x86a0
   17aec:	movt	r5, #1
   17af0:	str	r5, [sp, #4]
   17af4:	mov	r3, #1000	; 0x3e8
   17af8:	str	r3, [sp]
   17afc:	ldr	r3, [pc, #320]	; 17c44 <myencoding_detect_russian@@Base+0x250>
   17b00:	add	r3, pc, r3
   17b04:	mov	r2, r8
   17b08:	mov	r1, r7
   17b0c:	add	r0, sp, #8
   17b10:	bl	106a0 <myencoding_detect_by_trigram@plt>
   17b14:	ldrd	r2, [sp, #8]
   17b18:	strd	r2, [sp, #16]
   17b1c:	mov	r2, r5
   17b20:	mov	r1, #50	; 0x32
   17b24:	add	r0, sp, #16
   17b28:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   17b2c:	cmp	r0, #0
   17b30:	movne	r3, #22
   17b34:	strne	r3, [r6]
   17b38:	bne	17c24 <myencoding_detect_russian@@Base+0x230>
   17b3c:	ldr	r3, [sp, #20]
   17b40:	cmp	r3, r4
   17b44:	bls	17b54 <myencoding_detect_russian@@Base+0x160>
   17b48:	mov	r2, #22
   17b4c:	str	r2, [r6]
   17b50:	mov	r4, r3
   17b54:	movw	r5, #34464	; 0x86a0
   17b58:	movt	r5, #1
   17b5c:	str	r5, [sp, #4]
   17b60:	mov	r3, #1000	; 0x3e8
   17b64:	str	r3, [sp]
   17b68:	ldr	r3, [pc, #216]	; 17c48 <myencoding_detect_russian@@Base+0x254>
   17b6c:	add	r3, pc, r3
   17b70:	mov	r2, r8
   17b74:	mov	r1, r7
   17b78:	add	r0, sp, #8
   17b7c:	bl	106a0 <myencoding_detect_by_trigram@plt>
   17b80:	ldrd	r2, [sp, #8]
   17b84:	strd	r2, [sp, #16]
   17b88:	mov	r2, r5
   17b8c:	mov	r1, #50	; 0x32
   17b90:	add	r0, sp, #16
   17b94:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   17b98:	cmp	r0, #0
   17b9c:	movne	r3, #41	; 0x29
   17ba0:	strne	r3, [r6]
   17ba4:	bne	17c24 <myencoding_detect_russian@@Base+0x230>
   17ba8:	ldr	r3, [sp, #20]
   17bac:	cmp	r3, r4
   17bb0:	bls	17bc0 <myencoding_detect_russian@@Base+0x1cc>
   17bb4:	mov	r2, #41	; 0x29
   17bb8:	str	r2, [r6]
   17bbc:	mov	r4, r3
   17bc0:	movw	r5, #34464	; 0x86a0
   17bc4:	movt	r5, #1
   17bc8:	str	r5, [sp, #4]
   17bcc:	mov	r3, #1000	; 0x3e8
   17bd0:	str	r3, [sp]
   17bd4:	ldr	r3, [pc, #112]	; 17c4c <myencoding_detect_russian@@Base+0x258>
   17bd8:	add	r3, pc, r3
   17bdc:	mov	r2, r8
   17be0:	mov	r1, r7
   17be4:	add	r0, sp, #8
   17be8:	bl	106a0 <myencoding_detect_by_trigram@plt>
   17bec:	ldrd	r2, [sp, #8]
   17bf0:	strd	r2, [sp, #16]
   17bf4:	mov	r2, r5
   17bf8:	mov	r1, #50	; 0x32
   17bfc:	add	r0, sp, #16
   17c00:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   17c04:	cmp	r0, #0
   17c08:	movne	r3, #12
   17c0c:	strne	r3, [r6]
   17c10:	bne	17c24 <myencoding_detect_russian@@Base+0x230>
   17c14:	ldr	r3, [sp, #20]
   17c18:	cmp	r3, r4
   17c1c:	movhi	r3, #12
   17c20:	strhi	r3, [r6]
   17c24:	add	sp, sp, #24
   17c28:	ldrd	r4, [sp]
   17c2c:	ldrd	r6, [sp, #8]
   17c30:	ldr	r8, [sp, #16]
   17c34:	add	sp, sp, #20
   17c38:	pop	{pc}		; (ldr pc, [sp], #4)
   17c3c:			; <UNDEFINED> instruction: 0x0001d7bc
   17c40:	andeq	pc, r1, ip, asr #13
   17c44:	ldrdeq	r1, [r2], -r0
   17c48:	andeq	fp, r1, r4, lsl r7
   17c4c:	andeq	r3, r2, r8, ror #8

00017c50 <myencoding_detect@@Base>:
   17c50:	strd	r4, [sp, #-16]!
   17c54:	str	r6, [sp, #8]
   17c58:	str	lr, [sp, #12]
   17c5c:	mov	r5, r0
   17c60:	mov	r6, r1
   17c64:	mov	r4, r2
   17c68:	mov	r3, #0
   17c6c:	str	r3, [r2]
   17c70:	bl	fbe4 <myencoding_detect_unicode@plt>
   17c74:	cmp	r0, #0
   17c78:	beq	17c8c <myencoding_detect@@Base+0x3c>
   17c7c:	ldrd	r4, [sp]
   17c80:	ldr	r6, [sp, #8]
   17c84:	add	sp, sp, #12
   17c88:	pop	{pc}		; (ldr pc, [sp], #4)
   17c8c:	mov	r2, r4
   17c90:	mov	r1, r6
   17c94:	mov	r0, r5
   17c98:	bl	10ee0 <myencoding_detect_russian@plt>
   17c9c:	b	17c7c <myencoding_detect@@Base+0x2c>

00017ca0 <myencoding_name_entry_by_name@@Base>:
   17ca0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17ca4:	strd	r6, [sp, #8]
   17ca8:	strd	r8, [sp, #16]
   17cac:	str	sl, [sp, #24]
   17cb0:	str	lr, [sp, #28]
   17cb4:	mov	r9, r0
   17cb8:	mov	r5, r1
   17cbc:	ldr	r3, [pc, #256]	; 17dc4 <myencoding_name_entry_by_name@@Base+0x124>
   17cc0:	add	r3, pc, r3
   17cc4:	add	r2, r0, r1
   17cc8:	ldrb	r2, [r2, #-1]
   17ccc:	ldrb	r2, [r3, r2]
   17cd0:	ldrb	r1, [r0]
   17cd4:	ldrb	r4, [r3, r1]
   17cd8:	mul	r4, r4, r2
   17cdc:	mul	r2, r5, r4
   17ce0:	movw	r3, #11575	; 0x2d37
   17ce4:	movt	r3, #14546	; 0x38d2
   17ce8:	umull	r1, r3, r3, r2
   17cec:	sub	r4, r2, r3
   17cf0:	add	r4, r3, r4, lsr #1
   17cf4:	lsr	r4, r4, #8
   17cf8:	movw	r3, #419	; 0x1a3
   17cfc:	mls	r4, r3, r4, r2
   17d00:	add	r4, r4, #1
   17d04:	ldr	r6, [pc, #188]	; 17dc8 <myencoding_name_entry_by_name@@Base+0x128>
   17d08:	add	r6, pc, r6
   17d0c:	ldr	r7, [pc, #184]	; 17dcc <myencoding_name_entry_by_name@@Base+0x12c>
   17d10:	add	r7, pc, r7
   17d14:	ldr	r8, [pc, #180]	; 17dd0 <myencoding_name_entry_by_name@@Base+0x130>
   17d18:	add	r8, pc, r8
   17d1c:	b	17d78 <myencoding_name_entry_by_name@@Base+0xd8>
   17d20:	mov	r2, r5
   17d24:	mov	r1, r9
   17d28:	bl	10238 <mycore_strncasecmp@plt>
   17d2c:	cmp	r0, #0
   17d30:	beq	17d58 <myencoding_name_entry_by_name@@Base+0xb8>
   17d34:	rsb	r4, r4, r4, lsl #3
   17d38:	ldr	r3, [pc, #148]	; 17dd4 <myencoding_name_entry_by_name@@Base+0x134>
   17d3c:	add	r3, pc, r3
   17d40:	add	r4, r3, r4, lsl #2
   17d44:	ldr	r4, [r4, #20]
   17d48:	cmp	r4, #0
   17d4c:	bne	17d78 <myencoding_name_entry_by_name@@Base+0xd8>
   17d50:	mov	r0, #0
   17d54:	b	17dac <myencoding_name_entry_by_name@@Base+0x10c>
   17d58:	rsb	r4, r4, r4, lsl #3
   17d5c:	ldr	r0, [pc, #116]	; 17dd8 <myencoding_name_entry_by_name@@Base+0x138>
   17d60:	add	r0, pc, r0
   17d64:	add	r0, r0, r4, lsl #2
   17d68:	b	17dac <myencoding_name_entry_by_name@@Base+0x10c>
   17d6c:	rsb	r4, r4, r4, lsl #3
   17d70:	add	r4, r8, r4, lsl #2
   17d74:	ldr	r4, [r4, #20]
   17d78:	rsb	r3, r4, r4, lsl #3
   17d7c:	add	r3, r6, r3, lsl #2
   17d80:	ldr	r0, [r3, #8]
   17d84:	cmp	r0, #0
   17d88:	beq	17dac <myencoding_name_entry_by_name@@Base+0x10c>
   17d8c:	rsb	r3, r4, r4, lsl #3
   17d90:	add	r3, r7, r3, lsl #2
   17d94:	ldr	r3, [r3, #12]
   17d98:	cmp	r3, r5
   17d9c:	beq	17d20 <myencoding_name_entry_by_name@@Base+0x80>
   17da0:	cmp	r3, r5
   17da4:	bls	17d6c <myencoding_name_entry_by_name@@Base+0xcc>
   17da8:	mov	r0, #0
   17dac:	ldrd	r4, [sp]
   17db0:	ldrd	r6, [sp, #8]
   17db4:	ldrd	r8, [sp, #16]
   17db8:	ldr	sl, [sp, #24]
   17dbc:	add	sp, sp, #28
   17dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   17dc4:	andeq	fp, r1, r0, asr #7
   17dc8:	andeq	sl, pc, r4, lsr r0	; <UNPREDICTABLE>
   17dcc:	andeq	sl, pc, ip, lsr #32
   17dd0:	andeq	sl, pc, r4, lsr #32
   17dd4:	andeq	sl, pc, r0
   17dd8:	ldrdeq	r9, [pc], -ip

00017ddc <myencoding_by_name@@Base>:
   17ddc:	str	r4, [sp, #-8]!
   17de0:	str	lr, [sp, #4]
   17de4:	mov	r4, r2
   17de8:	bl	ff08 <myencoding_name_entry_by_name@plt>
   17dec:	cmp	r0, #0
   17df0:	moveq	r0, #0
   17df4:	beq	17e08 <myencoding_by_name@@Base+0x2c>
   17df8:	cmp	r4, #0
   17dfc:	ldrne	r3, [r0, #16]
   17e00:	strne	r3, [r4]
   17e04:	mov	r0, #1
   17e08:	ldr	r4, [sp]
   17e0c:	add	sp, sp, #4
   17e10:	pop	{pc}		; (ldr pc, [sp], #4)

00017e14 <myencoding_name_by_id@@Base>:
   17e14:	cmp	r0, #41	; 0x29
   17e18:	bhi	17e48 <myencoding_name_by_id@@Base+0x34>
   17e1c:	cmp	r1, #0
   17e20:	beq	17e38 <myencoding_name_by_id@@Base+0x24>
   17e24:	ldr	r3, [pc, #56]	; 17e64 <myencoding_name_by_id@@Base+0x50>
   17e28:	add	r3, pc, r3
   17e2c:	add	r3, r3, r0, lsl #3
   17e30:	ldr	r3, [r3, #4]
   17e34:	str	r3, [r1]
   17e38:	ldr	r3, [pc, #40]	; 17e68 <myencoding_name_by_id@@Base+0x54>
   17e3c:	add	r3, pc, r3
   17e40:	ldr	r0, [r3, r0, lsl #3]
   17e44:	bx	lr
   17e48:	cmp	r1, #0
   17e4c:	beq	17e5c <myencoding_name_by_id@@Base+0x48>
   17e50:	mov	r0, #0
   17e54:	str	r0, [r1]
   17e58:	bx	lr
   17e5c:	mov	r0, r1
   17e60:	bx	lr
   17e64:			; <UNDEFINED> instruction: 0x000f9dbc
   17e68:	andeq	r9, pc, r8, lsr #27

00017e6c <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   17e6c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17e70:	strd	r6, [sp, #8]
   17e74:	strd	r8, [sp, #16]
   17e78:	strd	sl, [sp, #24]
   17e7c:	str	lr, [sp, #32]
   17e80:	sub	sp, sp, #12
   17e84:	ldr	fp, [sp, #48]	; 0x30
   17e88:	mov	ip, #2
   17e8c:	str	ip, [r2]
   17e90:	subs	sl, r3, #0
   17e94:	movne	r3, #0
   17e98:	strne	r3, [sl]
   17e9c:	cmp	fp, #0
   17ea0:	movne	r3, #0
   17ea4:	strne	r3, [fp]
   17ea8:	cmp	r1, #7
   17eac:	bls	1826c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x400>
   17eb0:	str	r2, [sp, #4]
   17eb4:	mov	r8, r1
   17eb8:	mov	r7, r0
   17ebc:	mov	r6, #0
   17ec0:	mov	r4, #7
   17ec4:	ldr	r9, [pc, #960]	; 1828c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x420>
   17ec8:	add	r9, pc, r9
   17ecc:	sub	r5, r1, #1
   17ed0:	add	r5, r5, r0
   17ed4:	b	17ef4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x88>
   17ed8:	ldrb	r3, [r7, r4]
   17edc:	cmp	r3, #61	; 0x3d
   17ee0:	beq	17f9c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x130>
   17ee4:	add	r6, r4, #1
   17ee8:	add	r4, r4, #8
   17eec:	cmp	r4, r8
   17ef0:	bcs	1826c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x400>
   17ef4:	add	r1, r7, r6
   17ef8:	mov	r0, r9
   17efc:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17f00:	cmp	r0, #0
   17f04:	moveq	r4, r6
   17f08:	beq	17ee4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x78>
   17f0c:	cmp	r8, r4
   17f10:	bls	17ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6c>
   17f14:	add	r2, r7, r4
   17f18:	ldrb	r1, [r7, r4]
   17f1c:	sub	r3, r1, #12
   17f20:	uxtb	r3, r3
   17f24:	sub	r0, r1, #9
   17f28:	uxtb	r0, r0
   17f2c:	cmp	r3, #1
   17f30:	cmphi	r0, #1
   17f34:	movhi	r3, #1
   17f38:	movls	r3, #0
   17f3c:	cmp	r1, #32
   17f40:	moveq	r3, #0
   17f44:	andne	r3, r3, #1
   17f48:	cmp	r3, #0
   17f4c:	bne	17ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6c>
   17f50:	rsb	r1, r7, #1
   17f54:	add	r4, r1, r2
   17f58:	cmp	r2, r5
   17f5c:	beq	17ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6c>
   17f60:	ldrb	r0, [r2, #1]!
   17f64:	sub	r3, r0, #9
   17f68:	uxtb	r3, r3
   17f6c:	sub	ip, r0, #12
   17f70:	uxtb	ip, ip
   17f74:	cmp	r3, #1
   17f78:	cmphi	ip, #1
   17f7c:	movhi	r3, #1
   17f80:	movls	r3, #0
   17f84:	cmp	r0, #32
   17f88:	moveq	r3, #0
   17f8c:	andne	r3, r3, #1
   17f90:	cmp	r3, #0
   17f94:	beq	17f54 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xe8>
   17f98:	b	17ed8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6c>
   17f9c:	add	r4, r4, #1
   17fa0:	cmp	r8, r4
   17fa4:	bls	1824c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3e0>
   17fa8:	add	r2, r7, r4
   17fac:	ldrb	r3, [r7, r4]
   17fb0:	sub	r0, r3, #12
   17fb4:	uxtb	r0, r0
   17fb8:	sub	r1, r3, #9
   17fbc:	uxtb	r1, r1
   17fc0:	cmp	r0, #1
   17fc4:	cmphi	r1, #1
   17fc8:	movhi	r0, #1
   17fcc:	movls	r0, #0
   17fd0:	cmp	r3, #32
   17fd4:	moveq	r0, #0
   17fd8:	andne	r0, r0, #1
   17fdc:	cmp	r0, #0
   17fe0:	bne	18034 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c8>
   17fe4:	sub	r1, r8, #1
   17fe8:	add	r1, r1, r7
   17fec:	rsb	ip, r7, #1
   17ff0:	add	r4, ip, r2
   17ff4:	cmp	r2, r1
   17ff8:	beq	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   17ffc:	ldrb	lr, [r2, #1]!
   18000:	sub	r3, lr, #9
   18004:	uxtb	r3, r3
   18008:	sub	r5, lr, #12
   1800c:	uxtb	r5, r5
   18010:	cmp	r3, #1
   18014:	cmphi	r5, #1
   18018:	movhi	r3, #1
   1801c:	movls	r3, #0
   18020:	cmp	lr, #32
   18024:	moveq	r3, #0
   18028:	andne	r3, r3, #1
   1802c:	cmp	r3, #0
   18030:	beq	17ff0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x184>
   18034:	add	ip, r7, r4
   18038:	ldrb	r3, [r7, r4]
   1803c:	cmp	r3, #34	; 0x22
   18040:	beq	1812c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2c0>
   18044:	cmp	r3, #39	; 0x27
   18048:	beq	181a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x338>
   1804c:	cmp	r4, r8
   18050:	bcs	1825c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3f0>
   18054:	sub	r0, r3, #12
   18058:	uxtb	r0, r0
   1805c:	sub	r2, r3, #9
   18060:	uxtb	r2, r2
   18064:	cmp	r0, #1
   18068:	cmphi	r2, #1
   1806c:	movhi	r0, #1
   18070:	movls	r0, #0
   18074:	cmp	r3, #32
   18078:	moveq	r0, #0
   1807c:	andne	r0, r0, #1
   18080:	cmp	r0, #0
   18084:	addeq	r1, r4, #1
   18088:	addeq	r1, r7, r1
   1808c:	bne	180d8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x26c>
   18090:	add	r4, r4, #1
   18094:	cmp	r8, r4
   18098:	beq	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   1809c:	mov	ip, r1
   180a0:	ldrb	r2, [r1], #1
   180a4:	sub	r3, r2, #9
   180a8:	uxtb	r3, r3
   180ac:	sub	lr, r2, #12
   180b0:	uxtb	lr, lr
   180b4:	cmp	r3, #1
   180b8:	cmphi	lr, #1
   180bc:	movhi	r3, #1
   180c0:	movls	r3, #0
   180c4:	cmp	r2, #32
   180c8:	moveq	r3, #0
   180cc:	andne	r3, r3, #1
   180d0:	cmp	r3, #0
   180d4:	beq	18090 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x224>
   180d8:	add	r3, r7, r4
   180dc:	ldrb	r2, [r7, r4]
   180e0:	cmp	r2, #59	; 0x3b
   180e4:	movne	r1, r4
   180e8:	beq	1821c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3b0>
   180ec:	add	r1, r1, #1
   180f0:	cmp	r8, r1
   180f4:	bls	18224 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3b8>
   180f8:	ldrb	r2, [r3, #1]!
   180fc:	cmp	r2, #59	; 0x3b
   18100:	bne	180ec <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x280>
   18104:	cmp	sl, #0
   18108:	strne	ip, [sl]
   1810c:	cmp	fp, #0
   18110:	subne	r3, r1, r4
   18114:	strne	r3, [fp]
   18118:	ldr	r2, [sp, #4]
   1811c:	sub	r1, r1, r4
   18120:	mov	r0, ip
   18124:	bl	10c64 <myencoding_by_name@plt>
   18128:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   1812c:	add	r4, r4, #1
   18130:	cmp	r8, r4
   18134:	bls	18254 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3e8>
   18138:	add	r0, r7, r4
   1813c:	ldrb	r3, [r7, r4]
   18140:	cmp	r3, #34	; 0x22
   18144:	movne	r3, r0
   18148:	subne	ip, r8, #1
   1814c:	addne	ip, r7, ip
   18150:	rsbne	r7, r7, #1
   18154:	beq	18194 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x328>
   18158:	add	r1, r7, r3
   1815c:	cmp	r3, ip
   18160:	beq	1819c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x330>
   18164:	ldrb	r2, [r3, #1]!
   18168:	cmp	r2, #34	; 0x22
   1816c:	bne	18158 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2ec>
   18170:	cmp	sl, #0
   18174:	strne	r0, [sl]
   18178:	cmp	fp, #0
   1817c:	subne	r3, r1, r4
   18180:	strne	r3, [fp]
   18184:	ldr	r2, [sp, #4]
   18188:	sub	r1, r1, r4
   1818c:	bl	10c64 <myencoding_by_name@plt>
   18190:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   18194:	mov	r1, r4
   18198:	b	18170 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x304>
   1819c:	mov	r0, #0
   181a0:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   181a4:	add	r4, r4, #1
   181a8:	cmp	r8, r4
   181ac:	bls	18264 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3f8>
   181b0:	add	r0, r7, r4
   181b4:	ldrb	r3, [r7, r4]
   181b8:	cmp	r3, #39	; 0x27
   181bc:	movne	r3, r0
   181c0:	subne	ip, r8, #1
   181c4:	addne	ip, r7, ip
   181c8:	rsbne	r7, r7, #1
   181cc:	beq	1820c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3a0>
   181d0:	add	r1, r7, r3
   181d4:	cmp	ip, r3
   181d8:	beq	18214 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3a8>
   181dc:	ldrb	r2, [r3, #1]!
   181e0:	cmp	r2, #39	; 0x27
   181e4:	bne	181d0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x364>
   181e8:	cmp	sl, #0
   181ec:	strne	r0, [sl]
   181f0:	cmp	fp, #0
   181f4:	subne	r3, r1, r4
   181f8:	strne	r3, [fp]
   181fc:	ldr	r2, [sp, #4]
   18200:	sub	r1, r1, r4
   18204:	bl	10c64 <myencoding_by_name@plt>
   18208:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   1820c:	mov	r1, r4
   18210:	b	181e8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x37c>
   18214:	mov	r0, #0
   18218:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   1821c:	mov	r1, r4
   18220:	b	18104 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x298>
   18224:	cmp	sl, #0
   18228:	strne	ip, [sl]
   1822c:	cmp	fp, #0
   18230:	subne	r3, r1, r4
   18234:	strne	r3, [fp]
   18238:	ldr	r2, [sp, #4]
   1823c:	sub	r1, r1, r4
   18240:	mov	r0, ip
   18244:	bl	10c64 <myencoding_by_name@plt>
   18248:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   1824c:	mov	r0, #0
   18250:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   18254:	mov	r0, #0
   18258:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   1825c:	mov	r0, #0
   18260:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   18264:	mov	r0, #0
   18268:	b	18270 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   1826c:	mov	r0, #0
   18270:	add	sp, sp, #12
   18274:	ldrd	r4, [sp]
   18278:	ldrd	r6, [sp, #8]
   1827c:	ldrd	r8, [sp, #16]
   18280:	ldrd	sl, [sp, #24]
   18284:	add	sp, sp, #32
   18288:	pop	{pc}		; (ldr pc, [sp], #4)
   1828c:	andeq	r5, r2, r8, ror #1

00018290 <myencoding_extracting_character_encoding_from_charset@@Base>:
   18290:	push	{lr}		; (str lr, [sp, #-4]!)
   18294:	sub	sp, sp, #12
   18298:	mov	r3, #0
   1829c:	str	r3, [sp]
   182a0:	bl	107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   182a4:	add	sp, sp, #12
   182a8:	pop	{pc}		; (ldr pc, [sp], #4)

000182ac <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   182ac:	strd	r4, [sp, #-16]!
   182b0:	str	r6, [sp, #8]
   182b4:	str	lr, [sp, #12]
   182b8:	ldr	r4, [r1]
   182bc:	ldr	ip, [r3]
   182c0:	sub	ip, r4, ip
   182c4:	str	ip, [r3, #4]
   182c8:	cmp	r4, r2
   182cc:	bcs	18398 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xec>
   182d0:	add	ip, r0, r4
   182d4:	ldrb	r3, [r0, r4]
   182d8:	cmp	r3, #32
   182dc:	cmpne	r3, #47	; 0x2f
   182e0:	movne	lr, #1
   182e4:	moveq	lr, #0
   182e8:	sub	r5, r3, #9
   182ec:	uxtb	r5, r5
   182f0:	cmp	r5, #1
   182f4:	movls	lr, #0
   182f8:	andhi	lr, lr, #1
   182fc:	sub	r3, r3, #12
   18300:	uxtb	r3, r3
   18304:	cmp	r3, #1
   18308:	movls	r3, #0
   1830c:	andhi	r3, lr, #1
   18310:	cmp	r3, #0
   18314:	bne	18374 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xc8>
   18318:	add	r2, r2, r0
   1831c:	sub	r5, r2, #1
   18320:	rsb	r6, r0, #1
   18324:	add	r4, r6, ip
   18328:	cmp	ip, r5
   1832c:	beq	18398 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xec>
   18330:	ldrb	r3, [ip, #1]!
   18334:	cmp	r3, #32
   18338:	cmpne	r3, #47	; 0x2f
   1833c:	movne	r2, #1
   18340:	moveq	r2, #0
   18344:	sub	lr, r3, #9
   18348:	uxtb	lr, lr
   1834c:	cmp	lr, #1
   18350:	movls	r2, #0
   18354:	andhi	r2, r2, #1
   18358:	sub	r3, r3, #12
   1835c:	uxtb	r3, r3
   18360:	cmp	r3, #1
   18364:	movls	r3, #0
   18368:	andhi	r3, r2, #1
   1836c:	cmp	r3, #0
   18370:	beq	18324 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x78>
   18374:	ldrb	r3, [r0, r4]
   18378:	cmp	r3, #61	; 0x3d
   1837c:	strne	r4, [r1]
   18380:	movne	r0, #0
   18384:	bne	183a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xf4>
   18388:	add	r4, r4, #1
   1838c:	str	r4, [r1]
   18390:	mov	r0, #1
   18394:	b	183a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xf4>
   18398:	str	r4, [r1]
   1839c:	mov	r0, #0
   183a0:	ldrd	r4, [sp]
   183a4:	ldr	r6, [sp, #8]
   183a8:	add	sp, sp, #12
   183ac:	pop	{pc}		; (ldr pc, [sp], #4)

000183b0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   183b0:	strd	r4, [sp, #-20]!	; 0xffffffec
   183b4:	strd	r6, [sp, #8]
   183b8:	str	lr, [sp, #16]
   183bc:	cmp	r1, r2
   183c0:	bcs	185d4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x224>
   183c4:	mov	r6, r0
   183c8:	add	ip, r0, r1
   183cc:	ldrb	r0, [r0, r1]
   183d0:	sub	lr, r0, #9
   183d4:	uxtb	lr, lr
   183d8:	sub	r4, r0, #12
   183dc:	uxtb	r4, r4
   183e0:	cmp	lr, #1
   183e4:	cmphi	r4, #1
   183e8:	movhi	lr, #1
   183ec:	movls	lr, #0
   183f0:	cmp	r0, #32
   183f4:	moveq	lr, #0
   183f8:	andne	lr, lr, #1
   183fc:	cmp	lr, #0
   18400:	bne	185f4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x244>
   18404:	add	r5, r2, r6
   18408:	sub	r5, r5, #1
   1840c:	rsb	r7, r6, #1
   18410:	add	r0, r7, ip
   18414:	cmp	ip, r5
   18418:	beq	185d8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x228>
   1841c:	ldrb	lr, [ip, #1]!
   18420:	sub	r1, lr, #9
   18424:	uxtb	r1, r1
   18428:	sub	r4, lr, #12
   1842c:	uxtb	r4, r4
   18430:	cmp	r1, #1
   18434:	cmphi	r4, #1
   18438:	movhi	r1, #1
   1843c:	movls	r1, #0
   18440:	cmp	lr, #32
   18444:	moveq	r1, #0
   18448:	andne	r1, r1, #1
   1844c:	cmp	r1, #0
   18450:	beq	18410 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x60>
   18454:	add	ip, r6, r0
   18458:	ldrb	r1, [r6, r0]
   1845c:	cmp	r1, #39	; 0x27
   18460:	beq	18534 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x184>
   18464:	cmp	r1, #62	; 0x3e
   18468:	beq	18594 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e4>
   1846c:	cmp	r1, #34	; 0x22
   18470:	beq	18620 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x270>
   18474:	str	r0, [r3, #8]
   18478:	cmp	r2, r0
   1847c:	bls	185b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x204>
   18480:	ldrb	r1, [ip]
   18484:	cmp	r1, #62	; 0x3e
   18488:	cmpne	r1, #32
   1848c:	moveq	lr, #1
   18490:	movne	lr, #0
   18494:	sub	r4, r1, #9
   18498:	uxtb	r4, r4
   1849c:	cmp	r4, #1
   184a0:	orrls	lr, lr, #1
   184a4:	sub	r1, r1, #12
   184a8:	uxtb	r1, r1
   184ac:	cmp	r1, #1
   184b0:	movhi	r1, lr
   184b4:	orrls	r1, lr, #1
   184b8:	cmp	r1, #0
   184bc:	addeq	r2, r6, r2
   184c0:	subeq	r4, r2, #1
   184c4:	rsbeq	r6, r6, #1
   184c8:	bne	185a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1f8>
   184cc:	add	r5, r6, ip
   184d0:	cmp	ip, r4
   184d4:	beq	185b0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x200>
   184d8:	ldrb	r2, [ip, #1]!
   184dc:	cmp	r2, #62	; 0x3e
   184e0:	cmpne	r2, #32
   184e4:	moveq	r1, #1
   184e8:	movne	r1, #0
   184ec:	sub	lr, r2, #9
   184f0:	uxtb	lr, lr
   184f4:	cmp	lr, #1
   184f8:	orrls	r1, r1, #1
   184fc:	sub	r2, r2, #12
   18500:	uxtb	r2, r2
   18504:	cmp	r2, #1
   18508:	movhi	r2, r1
   1850c:	orrls	r2, r1, #1
   18510:	cmp	r2, #0
   18514:	beq	184cc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x11c>
   18518:	sub	r0, r5, r0
   1851c:	str	r0, [r3, #12]
   18520:	add	r0, r5, #1
   18524:	b	185e4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x234>
   18528:	mov	r0, lr
   1852c:	b	18664 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2b4>
   18530:	mov	r0, r1
   18534:	add	lr, r0, #1
   18538:	str	lr, [r3, #8]
   1853c:	cmp	r2, lr
   18540:	bls	185cc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x21c>
   18544:	add	r1, r6, lr
   18548:	ldrb	r0, [r6, lr]
   1854c:	cmp	r0, #39	; 0x27
   18550:	addne	r2, r6, r2
   18554:	subne	ip, r2, #1
   18558:	rsbne	r6, r6, #1
   1855c:	beq	18588 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1d8>
   18560:	add	r0, r6, r1
   18564:	cmp	r1, ip
   18568:	beq	185b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x204>
   1856c:	ldrb	r2, [r1, #1]!
   18570:	cmp	r2, #39	; 0x27
   18574:	bne	18560 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1b0>
   18578:	sub	lr, r0, lr
   1857c:	str	lr, [r3, #12]
   18580:	add	r0, r0, #1
   18584:	b	185e4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x234>
   18588:	mov	r0, lr
   1858c:	b	18578 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1c8>
   18590:	mov	r0, r1
   18594:	mov	r3, #1
   18598:	ldr	r2, [sp, #20]
   1859c:	strb	r3, [r2]
   185a0:	add	r0, r0, r3
   185a4:	b	185e4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x234>
   185a8:	mov	r5, r0
   185ac:	b	18518 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x168>
   185b0:	mov	r0, r5
   185b4:	ldr	r2, [r3, #8]
   185b8:	sub	r2, r0, r2
   185bc:	str	r2, [r3, #12]
   185c0:	b	185e4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x234>
   185c4:	mov	r0, lr
   185c8:	b	185b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x204>
   185cc:	mov	r0, lr
   185d0:	b	185b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x204>
   185d4:	mov	r0, r1
   185d8:	mov	r3, #1
   185dc:	ldr	r2, [sp, #20]
   185e0:	strb	r3, [r2]
   185e4:	ldrd	r4, [sp]
   185e8:	ldrd	r6, [sp, #8]
   185ec:	add	sp, sp, #16
   185f0:	pop	{pc}		; (ldr pc, [sp], #4)
   185f4:	add	ip, r6, r1
   185f8:	ldrb	r0, [r6, r1]
   185fc:	cmp	r0, #39	; 0x27
   18600:	beq	18530 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x180>
   18604:	cmp	r0, #62	; 0x3e
   18608:	beq	18590 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e0>
   1860c:	cmp	r0, #34	; 0x22
   18610:	strne	r1, [r3, #8]
   18614:	movne	r0, r1
   18618:	bne	18480 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xd0>
   1861c:	mov	r0, r1
   18620:	add	lr, r0, #1
   18624:	str	lr, [r3, #8]
   18628:	cmp	r2, lr
   1862c:	bls	185c4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x214>
   18630:	add	r1, r6, lr
   18634:	ldrb	r0, [r6, lr]
   18638:	cmp	r0, #34	; 0x22
   1863c:	addne	r2, r6, r2
   18640:	subne	ip, r2, #1
   18644:	rsbne	r6, r6, #1
   18648:	beq	18528 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x178>
   1864c:	add	r0, r6, r1
   18650:	cmp	r1, ip
   18654:	beq	185b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x204>
   18658:	ldrb	r2, [r1, #1]!
   1865c:	cmp	r2, #34	; 0x22
   18660:	bne	1864c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x29c>
   18664:	sub	lr, r0, lr
   18668:	str	lr, [r3, #12]
   1866c:	add	r0, r0, #1
   18670:	b	185e4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x234>

00018674 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   18674:	strd	r4, [sp, #-20]!	; 0xffffffec
   18678:	strd	r6, [sp, #8]
   1867c:	str	lr, [sp, #16]
   18680:	sub	sp, sp, #20
   18684:	mov	r5, r0
   18688:	str	r1, [sp, #12]
   1868c:	mov	r4, r3
   18690:	mov	r3, #0
   18694:	str	r3, [r4]
   18698:	str	r3, [r4, #4]
   1869c:	str	r3, [r4, #8]
   186a0:	str	r3, [r4, #12]
   186a4:	str	r3, [r4, #16]
   186a8:	mov	r0, r1
   186ac:	cmp	r2, r1
   186b0:	bls	18880 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x20c>
   186b4:	mov	r6, r2
   186b8:	add	ip, r5, r1
   186bc:	ldrb	r3, [r5, r1]
   186c0:	cmp	r3, #32
   186c4:	cmpne	r3, #47	; 0x2f
   186c8:	movne	r2, #1
   186cc:	moveq	r2, #0
   186d0:	sub	r1, r3, #9
   186d4:	uxtb	r1, r1
   186d8:	cmp	r1, #1
   186dc:	movls	r2, #0
   186e0:	andhi	r2, r2, #1
   186e4:	sub	r3, r3, #12
   186e8:	uxtb	r3, r3
   186ec:	cmp	r3, #1
   186f0:	movls	r3, #0
   186f4:	andhi	r3, r2, #1
   186f8:	cmp	r3, #0
   186fc:	bne	18760 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xec>
   18700:	add	r1, r6, r5
   18704:	sub	r1, r1, #1
   18708:	rsb	r7, r5, #1
   1870c:	add	r0, r7, ip
   18710:	cmp	ip, r1
   18714:	beq	18880 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x20c>
   18718:	ldrb	r3, [ip, #1]!
   1871c:	cmp	r3, #32
   18720:	cmpne	r3, #47	; 0x2f
   18724:	movne	r2, #1
   18728:	moveq	r2, #0
   1872c:	sub	lr, r3, #9
   18730:	uxtb	lr, lr
   18734:	cmp	lr, #1
   18738:	movls	r2, #0
   1873c:	andhi	r2, r2, #1
   18740:	sub	r3, r3, #12
   18744:	uxtb	r3, r3
   18748:	cmp	r3, #1
   1874c:	movls	r3, #0
   18750:	andhi	r3, r2, #1
   18754:	cmp	r3, #0
   18758:	beq	1870c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x98>
   1875c:	str	r0, [sp, #12]
   18760:	ldrb	r3, [r5, r0]
   18764:	cmp	r3, #62	; 0x3e
   18768:	beq	188a0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x22c>
   1876c:	str	r0, [r4]
   18770:	ldr	r3, [sp, #12]
   18774:	cmp	r6, r3
   18778:	bls	18974 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x300>
   1877c:	sub	r2, r3, #1
   18780:	add	r2, r5, r2
   18784:	add	r3, r6, r5
   18788:	sub	ip, r3, #1
   1878c:	rsb	lr, r5, #1
   18790:	add	r1, lr, r2
   18794:	ldrb	r3, [r2, #1]!
   18798:	sub	r3, r3, #9
   1879c:	cmp	r3, #53	; 0x35
   187a0:	addls	pc, pc, r3, lsl #2
   187a4:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187a8:	b	188c0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x24c>
   187ac:	b	188c0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x24c>
   187b0:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187b4:	b	188c0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x24c>
   187b8:	b	188c0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x24c>
   187bc:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187c0:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187c4:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187c8:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187cc:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187d0:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187d4:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187d8:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187dc:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187e0:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187e4:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187e8:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187ec:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187f0:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187f4:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187f8:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   187fc:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18800:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18804:	b	188c0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x24c>
   18808:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   1880c:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18810:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18814:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18818:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   1881c:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18820:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18824:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18828:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   1882c:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18830:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18834:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18838:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   1883c:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18840:	b	18944 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2d0>
   18844:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18848:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   1884c:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18850:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18854:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18858:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   1885c:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18860:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18864:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18868:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   1886c:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18870:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18874:	b	18964 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   18878:	b	188b4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x240>
   1887c:	b	18944 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2d0>
   18880:	mov	r3, #1
   18884:	ldr	r2, [sp, #40]	; 0x28
   18888:	strb	r3, [r2]
   1888c:	add	sp, sp, #20
   18890:	ldrd	r4, [sp]
   18894:	ldrd	r6, [sp, #8]
   18898:	add	sp, sp, #16
   1889c:	pop	{pc}		; (ldr pc, [sp], #4)
   188a0:	mov	r3, #1
   188a4:	ldr	r2, [sp, #40]	; 0x28
   188a8:	strb	r3, [r2]
   188ac:	add	r0, r0, r3
   188b0:	b	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x218>
   188b4:	sub	r3, r1, #1
   188b8:	cmp	r3, r0
   188bc:	bne	188f8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   188c0:	add	r1, r1, #1
   188c4:	str	r1, [sp, #12]
   188c8:	mov	r3, r4
   188cc:	mov	r2, r6
   188d0:	add	r1, sp, #12
   188d4:	mov	r0, r5
   188d8:	bl	10460 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   188dc:	cmp	r0, #0
   188e0:	bne	18924 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2b0>
   188e4:	mov	r3, #1
   188e8:	ldr	r2, [sp, #40]	; 0x28
   188ec:	strb	r3, [r2]
   188f0:	ldr	r0, [sp, #12]
   188f4:	b	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x218>
   188f8:	sub	r0, r1, r0
   188fc:	str	r0, [r4, #4]
   18900:	add	r1, r1, #1
   18904:	str	r1, [sp, #12]
   18908:	ldr	r3, [sp, #40]	; 0x28
   1890c:	str	r3, [sp]
   18910:	mov	r3, r4
   18914:	mov	r2, r6
   18918:	mov	r0, r5
   1891c:	bl	fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   18920:	b	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x218>
   18924:	ldr	r3, [sp, #40]	; 0x28
   18928:	str	r3, [sp]
   1892c:	mov	r3, r4
   18930:	mov	r2, r6
   18934:	ldr	r1, [sp, #12]
   18938:	mov	r0, r5
   1893c:	bl	fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   18940:	b	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x218>
   18944:	mov	r3, #1
   18948:	ldr	r2, [sp, #40]	; 0x28
   1894c:	strb	r3, [r2]
   18950:	ldr	r3, [r4]
   18954:	sub	r3, r1, r3
   18958:	str	r3, [r4, #4]
   1895c:	add	r0, r1, #1
   18960:	b	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x218>
   18964:	add	r3, lr, r2
   18968:	cmp	r2, ip
   1896c:	bne	18790 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x11c>
   18970:	str	r3, [sp, #12]
   18974:	mov	r3, r4
   18978:	mov	r2, r6
   1897c:	add	r1, sp, #12
   18980:	mov	r0, r5
   18984:	bl	10460 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   18988:	cmp	r0, #0
   1898c:	bne	189a4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x330>
   18990:	mov	r3, #1
   18994:	ldr	r2, [sp, #40]	; 0x28
   18998:	strb	r3, [r2]
   1899c:	ldr	r0, [sp, #12]
   189a0:	b	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x218>
   189a4:	ldr	r3, [sp, #40]	; 0x28
   189a8:	str	r3, [sp]
   189ac:	mov	r3, r4
   189b0:	mov	r2, r6
   189b4:	ldr	r1, [sp, #12]
   189b8:	mov	r0, r5
   189bc:	bl	fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   189c0:	b	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x218>

000189c4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   189c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   189c8:	strd	r6, [sp, #8]
   189cc:	strd	r8, [sp, #16]
   189d0:	strd	sl, [sp, #24]
   189d4:	str	lr, [sp, #32]
   189d8:	sub	sp, sp, #44	; 0x2c
   189dc:	mov	r6, r0
   189e0:	mov	r5, r1
   189e4:	mov	r4, r2
   189e8:	mov	r9, r3
   189ec:	mov	r3, #0
   189f0:	strb	r3, [sp, #19]
   189f4:	mov	r7, r3
   189f8:	mov	r8, r3
   189fc:	str	r3, [sp, #12]
   18a00:	ldr	fp, [pc, #520]	; 18c10 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x24c>
   18a04:	add	fp, pc, fp
   18a08:	ldr	r3, [pc, #516]	; 18c14 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x250>
   18a0c:	add	r3, pc, r3
   18a10:	str	r3, [sp, #8]
   18a14:	ldr	sl, [pc, #508]	; 18c18 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x254>
   18a18:	add	sl, pc, sl
   18a1c:	b	18b00 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x13c>
   18a20:	ldr	r1, [sp, #20]
   18a24:	add	r1, r6, r1
   18a28:	mov	r0, sl
   18a2c:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18a30:	cmp	r0, #0
   18a34:	beq	18b34 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x170>
   18a38:	tst	r7, #1
   18a3c:	bne	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18a40:	orr	r7, r7, #1
   18a44:	ldr	r3, [sp, #32]
   18a48:	cmp	r3, #12
   18a4c:	bne	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18a50:	ldr	r1, [sp, #28]
   18a54:	add	r1, r6, r1
   18a58:	ldr	r0, [pc, #444]	; 18c1c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   18a5c:	add	r0, pc, r0
   18a60:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18a64:	ldr	r3, [sp, #12]
   18a68:	cmp	r0, #0
   18a6c:	movne	r3, r0
   18a70:	str	r3, [sp, #12]
   18a74:	b	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18a78:	ldr	r3, [sp, #24]
   18a7c:	cmp	r3, #7
   18a80:	bne	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18a84:	ldr	r1, [sp, #20]
   18a88:	add	r1, r6, r1
   18a8c:	ldr	r0, [sp, #8]
   18a90:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18a94:	cmp	r0, #0
   18a98:	beq	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18a9c:	tst	r7, #4
   18aa0:	bne	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18aa4:	orr	r7, r7, #4
   18aa8:	ldr	r3, [sp, #80]	; 0x50
   18aac:	cmp	r3, #0
   18ab0:	beq	18ac4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x100>
   18ab4:	ldr	r3, [sp, #28]
   18ab8:	add	r3, r6, r3
   18abc:	ldr	r2, [sp, #80]	; 0x50
   18ac0:	str	r3, [r2]
   18ac4:	ldr	r3, [sp, #84]	; 0x54
   18ac8:	cmp	r3, #0
   18acc:	beq	18adc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x118>
   18ad0:	ldr	r3, [sp, #32]
   18ad4:	ldr	r2, [sp, #84]	; 0x54
   18ad8:	str	r3, [r2]
   18adc:	mov	r2, r9
   18ae0:	ldr	r1, [sp, #32]
   18ae4:	ldr	r0, [sp, #28]
   18ae8:	add	r0, r6, r0
   18aec:	bl	10c64 <myencoding_by_name@plt>
   18af0:	mov	r8, #1
   18af4:	ldrb	r3, [sp, #19]
   18af8:	cmp	r3, #0
   18afc:	bne	18b90 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1cc>
   18b00:	ldr	r1, [r5]
   18b04:	cmp	r1, r4
   18b08:	bcs	18b90 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1cc>
   18b0c:	add	r3, sp, #19
   18b10:	str	r3, [sp]
   18b14:	add	r3, sp, #20
   18b18:	mov	r2, r4
   18b1c:	mov	r0, r6
   18b20:	bl	10c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18b24:	str	r0, [r5]
   18b28:	ldr	r3, [sp, #24]
   18b2c:	cmp	r3, #10
   18b30:	beq	18a20 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x5c>
   18b34:	ldr	r3, [sp, #24]
   18b38:	cmp	r3, #7
   18b3c:	bne	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18b40:	ldr	r1, [sp, #20]
   18b44:	add	r1, r6, r1
   18b48:	mov	r0, fp
   18b4c:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18b50:	cmp	r0, #0
   18b54:	beq	18a78 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xb4>
   18b58:	tst	r7, #2
   18b5c:	bne	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18b60:	orr	r7, r7, #2
   18b64:	ldr	r3, [sp, #84]	; 0x54
   18b68:	str	r3, [sp]
   18b6c:	ldr	r3, [sp, #80]	; 0x50
   18b70:	mov	r2, r9
   18b74:	ldr	r1, [sp, #32]
   18b78:	ldr	r0, [sp, #28]
   18b7c:	add	r0, r6, r0
   18b80:	bl	107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   18b84:	cmp	r0, #0
   18b88:	movne	r8, #2
   18b8c:	b	18af4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18b90:	cmp	r8, #0
   18b94:	beq	18bd8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x214>
   18b98:	ldr	r3, [sp, #12]
   18b9c:	eor	r3, r3, #1
   18ba0:	cmp	r8, #2
   18ba4:	movne	r8, #0
   18ba8:	andeq	r8, r3, #1
   18bac:	cmp	r8, #0
   18bb0:	bne	18bd8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x214>
   18bb4:	ldr	r3, [r9]
   18bb8:	sub	r2, r3, #4
   18bbc:	cmp	r2, #1
   18bc0:	bls	18c00 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x23c>
   18bc4:	cmp	r3, #6
   18bc8:	moveq	r3, #33	; 0x21
   18bcc:	streq	r3, [r9]
   18bd0:	mov	r0, #1
   18bd4:	b	18be4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x220>
   18bd8:	mov	r3, #2
   18bdc:	str	r3, [r9]
   18be0:	mov	r0, #0
   18be4:	add	sp, sp, #44	; 0x2c
   18be8:	ldrd	r4, [sp]
   18bec:	ldrd	r6, [sp, #8]
   18bf0:	ldrd	r8, [sp, #16]
   18bf4:	ldrd	sl, [sp, #24]
   18bf8:	add	sp, sp, #32
   18bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   18c00:	mov	r3, #0
   18c04:	str	r3, [r9]
   18c08:	mov	r0, #1
   18c0c:	b	18be4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x220>
   18c10:	ldrdeq	r4, [r2], -r0
   18c14:	andeq	r4, r2, r4, lsr #11
   18c18:	andeq	r4, r2, r0, lsr #11
   18c1c:	andeq	r4, r2, r8, ror #10

00018c20 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   18c20:	cmp	r1, r2
   18c24:	bcs	18d50 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x130>
   18c28:	strd	r4, [sp, #-20]!	; 0xffffffec
   18c2c:	strd	r6, [sp, #8]
   18c30:	str	lr, [sp, #16]
   18c34:	sub	sp, sp, #36	; 0x24
   18c38:	add	ip, r0, r1
   18c3c:	ldrb	lr, [r0, r1]
   18c40:	sub	r3, lr, #12
   18c44:	uxtb	r3, r3
   18c48:	sub	r4, lr, #9
   18c4c:	uxtb	r4, r4
   18c50:	cmp	r3, #1
   18c54:	cmphi	r4, #1
   18c58:	movhi	r3, #1
   18c5c:	movls	r3, #0
   18c60:	cmp	lr, #32
   18c64:	moveq	r3, #0
   18c68:	andne	r3, r3, #1
   18c6c:	cmp	r3, #0
   18c70:	bne	18d34 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x114>
   18c74:	add	r5, r2, r0
   18c78:	sub	r5, r5, #1
   18c7c:	rsb	r6, r0, #1
   18c80:	add	r1, r6, ip
   18c84:	cmp	ip, r5
   18c88:	beq	18d1c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xfc>
   18c8c:	ldrb	lr, [ip, #1]!
   18c90:	sub	r3, lr, #9
   18c94:	uxtb	r3, r3
   18c98:	sub	r4, lr, #12
   18c9c:	uxtb	r4, r4
   18ca0:	cmp	r3, #1
   18ca4:	cmphi	r4, #1
   18ca8:	movhi	r3, #1
   18cac:	movls	r3, #0
   18cb0:	cmp	lr, #32
   18cb4:	moveq	r3, #0
   18cb8:	andne	r3, r3, #1
   18cbc:	cmp	r3, #0
   18cc0:	beq	18c80 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x60>
   18cc4:	ldrb	r3, [r0, r1]
   18cc8:	cmp	r3, #62	; 0x3e
   18ccc:	beq	18d48 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x128>
   18cd0:	mov	r3, #0
   18cd4:	strb	r3, [sp, #11]
   18cd8:	cmp	r2, r1
   18cdc:	bls	18d1c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xfc>
   18ce0:	mov	r4, r2
   18ce4:	mov	r7, r0
   18ce8:	add	r6, sp, #12
   18cec:	add	r5, sp, #11
   18cf0:	str	r5, [sp]
   18cf4:	mov	r3, r6
   18cf8:	mov	r2, r4
   18cfc:	mov	r0, r7
   18d00:	bl	10c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18d04:	mov	r1, r0
   18d08:	ldrb	r3, [sp, #11]
   18d0c:	cmp	r3, #0
   18d10:	bne	18d1c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xfc>
   18d14:	cmp	r4, r0
   18d18:	bhi	18cf0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xd0>
   18d1c:	mov	r0, r1
   18d20:	add	sp, sp, #36	; 0x24
   18d24:	ldrd	r4, [sp]
   18d28:	ldrd	r6, [sp, #8]
   18d2c:	add	sp, sp, #16
   18d30:	pop	{pc}		; (ldr pc, [sp], #4)
   18d34:	ldrb	r3, [r0, r1]
   18d38:	cmp	r3, #62	; 0x3e
   18d3c:	movne	r3, #0
   18d40:	strbne	r3, [sp, #11]
   18d44:	bne	18ce0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xc0>
   18d48:	add	r1, r1, #1
   18d4c:	b	18d1c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xfc>
   18d50:	mov	r0, r1
   18d54:	bx	lr

00018d58 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   18d58:	str	r4, [sp, #-8]!
   18d5c:	str	lr, [sp, #4]
   18d60:	mov	r3, r0
   18d64:	add	ip, r0, r1
   18d68:	ldrb	r0, [r0, r1]
   18d6c:	cmp	r0, #47	; 0x2f
   18d70:	beq	18dcc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x74>
   18d74:	cmp	r0, #33	; 0x21
   18d78:	beq	18e3c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe4>
   18d7c:	cmp	r0, #63	; 0x3f
   18d80:	bne	18f00 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1a8>
   18d84:	add	r0, r1, #1
   18d88:	cmp	r2, r0
   18d8c:	bls	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18d90:	add	r1, r3, r0
   18d94:	ldrb	ip, [r3, r0]
   18d98:	cmp	ip, #62	; 0x3e
   18d9c:	subeq	r2, r2, #1
   18da0:	addeq	r2, r3, r2
   18da4:	rsbeq	r3, r3, #1
   18da8:	bne	18dc4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   18dac:	add	r0, r3, r1
   18db0:	cmp	r1, r2
   18db4:	beq	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18db8:	ldrb	ip, [r1, #1]!
   18dbc:	cmp	ip, #62	; 0x3e
   18dc0:	beq	18dac <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   18dc4:	add	r0, r0, #1
   18dc8:	b	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18dcc:	add	r0, r1, #1
   18dd0:	cmp	r0, r2
   18dd4:	bcs	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18dd8:	add	r1, r3, r0
   18ddc:	ldrb	lr, [r3, r0]
   18de0:	ldr	ip, [pc, #300]	; 18f14 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1bc>
   18de4:	add	ip, pc, ip
   18de8:	add	ip, ip, lr
   18dec:	ldrb	ip, [ip, #256]	; 0x100
   18df0:	cmp	ip, #1
   18df4:	beq	18e2c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xd4>
   18df8:	cmp	lr, #62	; 0x3e
   18dfc:	subeq	r2, r2, #1
   18e00:	addeq	r2, r3, r2
   18e04:	rsbeq	r3, r3, #1
   18e08:	bne	18e24 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xcc>
   18e0c:	add	r0, r3, r1
   18e10:	cmp	r1, r2
   18e14:	beq	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18e18:	ldrb	ip, [r1, #1]!
   18e1c:	cmp	ip, #62	; 0x3e
   18e20:	beq	18e0c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xb4>
   18e24:	add	r0, r0, #1
   18e28:	b	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18e2c:	mov	r1, r0
   18e30:	mov	r0, r3
   18e34:	bl	10028 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   18e38:	b	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18e3c:	add	r0, r1, #1
   18e40:	add	lr, r1, #3
   18e44:	cmp	lr, r2
   18e48:	bcs	18e58 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x100>
   18e4c:	ldrb	lr, [r3, r0]
   18e50:	cmp	lr, #45	; 0x2d
   18e54:	beq	18e9c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x144>
   18e58:	cmp	r2, r0
   18e5c:	bls	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18e60:	add	r1, r3, r0
   18e64:	ldrb	ip, [r3, r0]
   18e68:	cmp	ip, #62	; 0x3e
   18e6c:	subeq	r2, r2, #1
   18e70:	addeq	r2, r3, r2
   18e74:	rsbeq	r3, r3, #1
   18e78:	bne	18e94 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x13c>
   18e7c:	add	r0, r3, r1
   18e80:	cmp	r1, r2
   18e84:	beq	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18e88:	ldrb	ip, [r1, #1]!
   18e8c:	cmp	ip, #62	; 0x3e
   18e90:	beq	18e7c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18e94:	add	r0, r0, #1
   18e98:	b	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18e9c:	add	r3, r3, r1
   18ea0:	ldrb	r3, [r3, #2]
   18ea4:	cmp	r3, #45	; 0x2d
   18ea8:	beq	18eb8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x160>
   18eac:	cmp	r2, r0
   18eb0:	bls	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18eb4:	b	18e94 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x13c>
   18eb8:	cmp	r2, r0
   18ebc:	bhi	18ed4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x17c>
   18ec0:	b	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18ec4:	add	r0, r0, #1
   18ec8:	add	ip, ip, #1
   18ecc:	cmp	r2, r0
   18ed0:	bls	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18ed4:	ldrb	r3, [ip, #1]
   18ed8:	cmp	r3, #62	; 0x3e
   18edc:	beq	18ec4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x16c>
   18ee0:	ldrb	r3, [ip]
   18ee4:	cmp	r3, #45	; 0x2d
   18ee8:	bne	18ec4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x16c>
   18eec:	ldrb	r3, [ip, #-1]
   18ef0:	cmp	r3, #45	; 0x2d
   18ef4:	bne	18ec4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x16c>
   18ef8:	add	r0, r0, #1
   18efc:	b	18f08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1b0>
   18f00:	mov	r0, r3
   18f04:	bl	10028 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   18f08:	ldr	r4, [sp]
   18f0c:	add	sp, sp, #4
   18f10:	pop	{pc}		; (ldr pc, [sp], #4)
   18f14:	muleq	r1, ip, r2

00018f18 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   18f18:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18f1c:	strd	r6, [sp, #8]
   18f20:	strd	r8, [sp, #16]
   18f24:	str	sl, [sp, #24]
   18f28:	str	lr, [sp, #28]
   18f2c:	sub	sp, sp, #16
   18f30:	mov	r4, r0
   18f34:	mov	r5, r1
   18f38:	mov	r7, r3
   18f3c:	mov	r3, #2
   18f40:	str	r3, [sp, #12]
   18f44:	subs	r8, r2, #0
   18f48:	movne	r3, #0
   18f4c:	strne	r3, [r8]
   18f50:	cmp	r7, #0
   18f54:	movne	r3, #0
   18f58:	strne	r3, [r7]
   18f5c:	mov	r3, #0
   18f60:	str	r3, [sp, #8]
   18f64:	ldr	r6, [pc, #296]	; 19094 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x17c>
   18f68:	add	r6, pc, r6
   18f6c:	add	sl, sp, #12
   18f70:	add	r9, sp, #8
   18f74:	b	1900c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xf4>
   18f78:	ldr	r0, [sp, #12]
   18f7c:	b	19078 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x160>
   18f80:	mov	r1, r2
   18f84:	mov	r0, r6
   18f88:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18f8c:	cmp	r0, #0
   18f90:	beq	1900c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xf4>
   18f94:	ldr	r1, [sp, #8]
   18f98:	add	r3, r1, #4
   18f9c:	str	r3, [sp, #8]
   18fa0:	ldrb	r3, [r4, r3]
   18fa4:	cmp	r3, #47	; 0x2f
   18fa8:	cmpne	r3, #32
   18fac:	moveq	r2, #1
   18fb0:	movne	r2, #0
   18fb4:	sub	r0, r3, #9
   18fb8:	uxtb	r0, r0
   18fbc:	cmp	r0, #1
   18fc0:	orrls	r2, r2, #1
   18fc4:	sub	r3, r3, #12
   18fc8:	uxtb	r3, r3
   18fcc:	cmp	r3, #1
   18fd0:	movhi	r3, r2
   18fd4:	orrls	r3, r2, #1
   18fd8:	cmp	r3, #0
   18fdc:	beq	1900c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xf4>
   18fe0:	add	r1, r1, #5
   18fe4:	str	r1, [sp, #8]
   18fe8:	str	r7, [sp, #4]
   18fec:	str	r8, [sp]
   18ff0:	mov	r3, sl
   18ff4:	mov	r2, r5
   18ff8:	mov	r1, r9
   18ffc:	mov	r0, r4
   19000:	bl	1037c <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   19004:	cmp	r0, #0
   19008:	bne	1906c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x154>
   1900c:	ldr	r1, [sp, #8]
   19010:	cmp	r1, r5
   19014:	bcs	19074 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x15c>
   19018:	ldrb	r3, [r4, r1]
   1901c:	cmp	r3, #60	; 0x3c
   19020:	addne	r1, r1, #1
   19024:	strne	r1, [sp, #8]
   19028:	bne	1900c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xf4>
   1902c:	add	r3, r1, #5
   19030:	cmp	r3, r5
   19034:	bcs	18f78 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x60>
   19038:	add	r1, r1, #1
   1903c:	str	r1, [sp, #8]
   19040:	add	r2, r4, r1
   19044:	ldrb	r3, [r4, r1]
   19048:	cmp	r3, #77	; 0x4d
   1904c:	beq	18f80 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   19050:	cmp	r3, #109	; 0x6d
   19054:	beq	18f80 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x68>
   19058:	mov	r2, r5
   1905c:	mov	r0, r4
   19060:	bl	102e0 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   19064:	str	r0, [sp, #8]
   19068:	b	1900c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xf4>
   1906c:	ldr	r0, [sp, #12]
   19070:	b	19078 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x160>
   19074:	ldr	r0, [sp, #12]
   19078:	add	sp, sp, #16
   1907c:	ldrd	r4, [sp]
   19080:	ldrd	r6, [sp, #8]
   19084:	ldrd	r8, [sp, #16]
   19088:	ldr	sl, [sp, #24]
   1908c:	add	sp, sp, #28
   19090:	pop	{pc}		; (ldr pc, [sp], #4)
   19094:	andeq	r4, r2, r4, ror r0

00019098 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   19098:	str	r4, [sp, #-8]!
   1909c:	str	lr, [sp, #4]
   190a0:	mov	r3, #0
   190a4:	mov	r2, r3
   190a8:	bl	10b20 <myencoding_prescan_stream_to_determine_encoding_with_found@plt>
   190ac:	ldr	r4, [sp]
   190b0:	add	sp, sp, #4
   190b4:	pop	{pc}		; (ldr pc, [sp], #4)

000190b8 <myencoding_decode_utf_8@@Base>:
   190b8:	ldr	r3, [r1, #20]
   190bc:	cmp	r3, #0
   190c0:	bne	19198 <myencoding_decode_utf_8@@Base+0xe0>
   190c4:	tst	r0, #128	; 0x80
   190c8:	streq	r0, [r1, #12]
   190cc:	beq	19160 <myencoding_decode_utf_8@@Base+0xa8>
   190d0:	add	r3, r0, #62	; 0x3e
   190d4:	uxtb	r3, r3
   190d8:	cmp	r3, #29
   190dc:	bls	19134 <myencoding_decode_utf_8@@Base+0x7c>
   190e0:	add	r3, r0, #32
   190e4:	uxtb	r3, r3
   190e8:	cmp	r3, #15
   190ec:	bls	19168 <myencoding_decode_utf_8@@Base+0xb0>
   190f0:	add	r3, r0, #16
   190f4:	uxtb	r3, r3
   190f8:	cmp	r3, #4
   190fc:	movhi	r3, #1
   19100:	bhi	19160 <myencoding_decode_utf_8@@Base+0xa8>
   19104:	cmp	r0, #240	; 0xf0
   19108:	moveq	r3, #144	; 0x90
   1910c:	streq	r3, [r1]
   19110:	beq	19120 <myencoding_decode_utf_8@@Base+0x68>
   19114:	cmp	r0, #244	; 0xf4
   19118:	moveq	r3, #143	; 0x8f
   1911c:	streq	r3, [r1, #4]
   19120:	mov	r3, #2
   19124:	str	r3, [r1, #20]
   19128:	sub	r0, r0, #240	; 0xf0
   1912c:	str	r0, [r1, #12]
   19130:	b	19144 <myencoding_decode_utf_8@@Base+0x8c>
   19134:	mov	r3, #1
   19138:	str	r3, [r1, #20]
   1913c:	sub	r0, r0, #192	; 0xc0
   19140:	str	r0, [r1, #12]
   19144:	ldr	r3, [r1, #20]
   19148:	add	r3, r3, r3, lsl #1
   1914c:	lsl	r3, r3, #1
   19150:	ldr	r2, [r1, #12]
   19154:	lsl	r3, r2, r3
   19158:	str	r3, [r1, #12]
   1915c:	mov	r3, #2
   19160:	mov	r0, r3
   19164:	bx	lr
   19168:	cmp	r0, #224	; 0xe0
   1916c:	moveq	r3, #160	; 0xa0
   19170:	streq	r3, [r1]
   19174:	beq	19184 <myencoding_decode_utf_8@@Base+0xcc>
   19178:	cmp	r0, #237	; 0xed
   1917c:	moveq	r3, #159	; 0x9f
   19180:	streq	r3, [r1, #4]
   19184:	mov	r3, #2
   19188:	str	r3, [r1, #20]
   1918c:	sub	r0, r0, #224	; 0xe0
   19190:	str	r0, [r1, #12]
   19194:	b	19144 <myencoding_decode_utf_8@@Base+0x8c>
   19198:	ldr	r2, [r1]
   1919c:	cmp	r0, r2
   191a0:	bcs	191b0 <myencoding_decode_utf_8@@Base+0xf8>
   191a4:	ldr	r2, [r1, #4]
   191a8:	cmp	r0, r2
   191ac:	bhi	19208 <myencoding_decode_utf_8@@Base+0x150>
   191b0:	push	{lr}		; (str lr, [sp, #-4]!)
   191b4:	mov	r2, #128	; 0x80
   191b8:	str	r2, [r1]
   191bc:	mov	r2, #191	; 0xbf
   191c0:	str	r2, [r1, #4]
   191c4:	ldr	ip, [r1, #8]
   191c8:	add	ip, ip, #1
   191cc:	str	ip, [r1, #8]
   191d0:	sub	r0, r0, #128	; 0x80
   191d4:	sub	r2, r3, ip
   191d8:	add	r2, r2, r2, lsl #1
   191dc:	lsl	r2, r2, #1
   191e0:	ldr	lr, [r1, #12]
   191e4:	add	r0, lr, r0, lsl r2
   191e8:	str	r0, [r1, #12]
   191ec:	cmp	r3, ip
   191f0:	moveq	r3, #0
   191f4:	streq	r3, [r1, #20]
   191f8:	streq	r3, [r1, #8]
   191fc:	movne	r3, #2
   19200:	mov	r0, r3
   19204:	pop	{pc}		; (ldr pc, [sp], #4)
   19208:	mov	r3, #0
   1920c:	str	r3, [r1, #12]
   19210:	str	r3, [r1, #20]
   19214:	str	r3, [r1, #8]
   19218:	mov	r3, #128	; 0x80
   1921c:	str	r3, [r1]
   19220:	mov	r3, #191	; 0xbf
   19224:	str	r3, [r1, #4]
   19228:	mov	r3, #5
   1922c:	b	19160 <myencoding_decode_utf_8@@Base+0xa8>

00019230 <myencoding_decode_ibm866@@Base>:
   19230:	tst	r0, #128	; 0x80
   19234:	bne	19244 <myencoding_decode_ibm866@@Base+0x14>
   19238:	str	r0, [r1, #12]
   1923c:	mov	r0, #0
   19240:	bx	lr
   19244:	sub	r0, r0, #128	; 0x80
   19248:	ldr	r3, [pc, #8]	; 19258 <myencoding_decode_ibm866@@Base+0x28>
   1924c:	add	r3, pc, r3
   19250:	ldr	r0, [r3, r0, lsl #2]
   19254:	b	19238 <myencoding_decode_ibm866@@Base+0x8>
   19258:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>

0001925c <myencoding_decode_iso_8859_2@@Base>:
   1925c:	tst	r0, #128	; 0x80
   19260:	bne	19270 <myencoding_decode_iso_8859_2@@Base+0x14>
   19264:	str	r0, [r1, #12]
   19268:	mov	r0, #0
   1926c:	bx	lr
   19270:	ldr	r3, [pc, #8]	; 19280 <myencoding_decode_iso_8859_2@@Base+0x24>
   19274:	add	r3, pc, r3
   19278:	ldr	r0, [r3, r0, lsl #2]
   1927c:	b	19264 <myencoding_decode_iso_8859_2@@Base+0x8>
   19280:	andeq	r4, r2, ip, asr #17

00019284 <myencoding_decode_iso_8859_3@@Base>:
   19284:	tst	r0, #128	; 0x80
   19288:	bne	19298 <myencoding_decode_iso_8859_3@@Base+0x14>
   1928c:	str	r0, [r1, #12]
   19290:	mov	r0, #0
   19294:	bx	lr
   19298:	ldr	r3, [pc, #12]	; 192ac <myencoding_decode_iso_8859_3@@Base+0x28>
   1929c:	add	r3, pc, r3
   192a0:	add	r0, r3, r0, lsl #2
   192a4:	ldr	r0, [r0, #512]	; 0x200
   192a8:	b	1928c <myencoding_decode_iso_8859_3@@Base+0x8>
   192ac:	andeq	r4, r2, r4, lsr #17

000192b0 <myencoding_decode_iso_8859_4@@Base>:
   192b0:	tst	r0, #128	; 0x80
   192b4:	bne	192c4 <myencoding_decode_iso_8859_4@@Base+0x14>
   192b8:	str	r0, [r1, #12]
   192bc:	mov	r0, #0
   192c0:	bx	lr
   192c4:	ldr	r3, [pc, #12]	; 192d8 <myencoding_decode_iso_8859_4@@Base+0x28>
   192c8:	add	r3, pc, r3
   192cc:	add	r0, r3, r0, lsl #2
   192d0:	ldr	r0, [r0, #1024]	; 0x400
   192d4:	b	192b8 <myencoding_decode_iso_8859_4@@Base+0x8>
   192d8:	andeq	r4, r2, r8, ror r8

000192dc <myencoding_decode_iso_8859_5@@Base>:
   192dc:	tst	r0, #128	; 0x80
   192e0:	bne	192f0 <myencoding_decode_iso_8859_5@@Base+0x14>
   192e4:	str	r0, [r1, #12]
   192e8:	mov	r0, #0
   192ec:	bx	lr
   192f0:	ldr	r3, [pc, #12]	; 19304 <myencoding_decode_iso_8859_5@@Base+0x28>
   192f4:	add	r3, pc, r3
   192f8:	add	r0, r3, r0, lsl #2
   192fc:	ldr	r0, [r0, #1536]	; 0x600
   19300:	b	192e4 <myencoding_decode_iso_8859_5@@Base+0x8>
   19304:	andeq	r4, r2, ip, asr #16

00019308 <myencoding_decode_iso_8859_6@@Base>:
   19308:	tst	r0, #128	; 0x80
   1930c:	bne	1931c <myencoding_decode_iso_8859_6@@Base+0x14>
   19310:	str	r0, [r1, #12]
   19314:	mov	r0, #0
   19318:	bx	lr
   1931c:	ldr	r3, [pc, #12]	; 19330 <myencoding_decode_iso_8859_6@@Base+0x28>
   19320:	add	r3, pc, r3
   19324:	add	r0, r3, r0, lsl #2
   19328:	ldr	r0, [r0, #2048]	; 0x800
   1932c:	b	19310 <myencoding_decode_iso_8859_6@@Base+0x8>
   19330:	andeq	r4, r2, r0, lsr #16

00019334 <myencoding_decode_iso_8859_7@@Base>:
   19334:	tst	r0, #128	; 0x80
   19338:	bne	19348 <myencoding_decode_iso_8859_7@@Base+0x14>
   1933c:	str	r0, [r1, #12]
   19340:	mov	r0, #0
   19344:	bx	lr
   19348:	ldr	r3, [pc, #12]	; 1935c <myencoding_decode_iso_8859_7@@Base+0x28>
   1934c:	add	r3, pc, r3
   19350:	add	r0, r3, r0, lsl #2
   19354:	ldr	r0, [r0, #2560]	; 0xa00
   19358:	b	1933c <myencoding_decode_iso_8859_7@@Base+0x8>
   1935c:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>

00019360 <myencoding_decode_iso_8859_8@@Base>:
   19360:	tst	r0, #128	; 0x80
   19364:	bne	19374 <myencoding_decode_iso_8859_8@@Base+0x14>
   19368:	str	r0, [r1, #12]
   1936c:	mov	r0, #0
   19370:	bx	lr
   19374:	ldr	r3, [pc, #12]	; 19388 <myencoding_decode_iso_8859_8@@Base+0x28>
   19378:	add	r3, pc, r3
   1937c:	add	r0, r3, r0, lsl #2
   19380:	ldr	r0, [r0, #3072]	; 0xc00
   19384:	b	19368 <myencoding_decode_iso_8859_8@@Base+0x8>
   19388:	andeq	r4, r2, r8, asr #15

0001938c <myencoding_decode_iso_8859_8_i@@Base>:
   1938c:	tst	r0, #128	; 0x80
   19390:	bne	193a0 <myencoding_decode_iso_8859_8_i@@Base+0x14>
   19394:	str	r0, [r1, #12]
   19398:	mov	r0, #0
   1939c:	bx	lr
   193a0:	ldr	r3, [pc, #12]	; 193b4 <myencoding_decode_iso_8859_8_i@@Base+0x28>
   193a4:	add	r3, pc, r3
   193a8:	add	r0, r3, r0, lsl #2
   193ac:	ldr	r0, [r0, #3072]	; 0xc00
   193b0:	b	19394 <myencoding_decode_iso_8859_8_i@@Base+0x8>
   193b4:	muleq	r2, ip, r7

000193b8 <myencoding_decode_iso_8859_10@@Base>:
   193b8:	tst	r0, #128	; 0x80
   193bc:	bne	193cc <myencoding_decode_iso_8859_10@@Base+0x14>
   193c0:	str	r0, [r1, #12]
   193c4:	mov	r0, #0
   193c8:	bx	lr
   193cc:	sub	r0, r0, #128	; 0x80
   193d0:	ldr	r3, [pc, #12]	; 193e4 <myencoding_decode_iso_8859_10@@Base+0x2c>
   193d4:	add	r3, pc, r3
   193d8:	add	r0, r3, r0, lsl #2
   193dc:	ldr	r0, [r0, #-4088]	; 0xfffff008
   193e0:	b	193c0 <myencoding_decode_iso_8859_10@@Base+0x8>
   193e4:	andeq	r6, r2, r4, ror #14

000193e8 <myencoding_decode_iso_8859_13@@Base>:
   193e8:	tst	r0, #128	; 0x80
   193ec:	bne	193fc <myencoding_decode_iso_8859_13@@Base+0x14>
   193f0:	str	r0, [r1, #12]
   193f4:	mov	r0, #0
   193f8:	bx	lr
   193fc:	ldr	r3, [pc, #12]	; 19410 <myencoding_decode_iso_8859_13@@Base+0x28>
   19400:	add	r3, pc, r3
   19404:	add	r0, r3, r0, lsl #2
   19408:	ldr	r0, [r0, #-4088]	; 0xfffff008
   1940c:	b	193f0 <myencoding_decode_iso_8859_13@@Base+0x8>
   19410:	andeq	r6, r2, r8, lsr r7

00019414 <myencoding_decode_iso_8859_14@@Base>:
   19414:	tst	r0, #128	; 0x80
   19418:	bne	19428 <myencoding_decode_iso_8859_14@@Base+0x14>
   1941c:	str	r0, [r1, #12]
   19420:	mov	r0, #0
   19424:	bx	lr
   19428:	ldr	r3, [pc, #12]	; 1943c <myencoding_decode_iso_8859_14@@Base+0x28>
   1942c:	add	r3, pc, r3
   19430:	add	r0, r3, r0, lsl #2
   19434:	ldr	r0, [r0, #-3576]	; 0xfffff208
   19438:	b	1941c <myencoding_decode_iso_8859_14@@Base+0x8>
   1943c:	andeq	r6, r2, ip, lsl #14

00019440 <myencoding_decode_iso_8859_15@@Base>:
   19440:	tst	r0, #128	; 0x80
   19444:	bne	19454 <myencoding_decode_iso_8859_15@@Base+0x14>
   19448:	str	r0, [r1, #12]
   1944c:	mov	r0, #0
   19450:	bx	lr
   19454:	ldr	r3, [pc, #12]	; 19468 <myencoding_decode_iso_8859_15@@Base+0x28>
   19458:	add	r3, pc, r3
   1945c:	add	r0, r3, r0, lsl #2
   19460:	ldr	r0, [r0, #-3064]	; 0xfffff408
   19464:	b	19448 <myencoding_decode_iso_8859_15@@Base+0x8>
   19468:	andeq	r6, r2, r0, ror #13

0001946c <myencoding_decode_iso_8859_16@@Base>:
   1946c:	tst	r0, #128	; 0x80
   19470:	bne	19480 <myencoding_decode_iso_8859_16@@Base+0x14>
   19474:	str	r0, [r1, #12]
   19478:	mov	r0, #0
   1947c:	bx	lr
   19480:	ldr	r3, [pc, #12]	; 19494 <myencoding_decode_iso_8859_16@@Base+0x28>
   19484:	add	r3, pc, r3
   19488:	add	r0, r3, r0, lsl #2
   1948c:	ldr	r0, [r0, #-2552]	; 0xfffff608
   19490:	b	19474 <myencoding_decode_iso_8859_16@@Base+0x8>
   19494:			; <UNDEFINED> instruction: 0x000266b4

00019498 <myencoding_decode_koi8_r@@Base>:
   19498:	tst	r0, #128	; 0x80
   1949c:	bne	194ac <myencoding_decode_koi8_r@@Base+0x14>
   194a0:	str	r0, [r1, #12]
   194a4:	mov	r0, #0
   194a8:	bx	lr
   194ac:	ldr	r3, [pc, #12]	; 194c0 <myencoding_decode_koi8_r@@Base+0x28>
   194b0:	add	r3, pc, r3
   194b4:	add	r0, r3, r0, lsl #2
   194b8:	ldr	r0, [r0, #-2040]	; 0xfffff808
   194bc:	b	194a0 <myencoding_decode_koi8_r@@Base+0x8>
   194c0:	andeq	r6, r2, r8, lsl #13

000194c4 <myencoding_decode_koi8_u@@Base>:
   194c4:	tst	r0, #128	; 0x80
   194c8:	bne	194d8 <myencoding_decode_koi8_u@@Base+0x14>
   194cc:	str	r0, [r1, #12]
   194d0:	mov	r0, #0
   194d4:	bx	lr
   194d8:	ldr	r3, [pc, #12]	; 194ec <myencoding_decode_koi8_u@@Base+0x28>
   194dc:	add	r3, pc, r3
   194e0:	add	r0, r3, r0, lsl #2
   194e4:	ldr	r0, [r0, #-1528]	; 0xfffffa08
   194e8:	b	194cc <myencoding_decode_koi8_u@@Base+0x8>
   194ec:	andeq	r6, r2, ip, asr r6

000194f0 <myencoding_decode_macintosh@@Base>:
   194f0:	tst	r0, #128	; 0x80
   194f4:	bne	19504 <myencoding_decode_macintosh@@Base+0x14>
   194f8:	str	r0, [r1, #12]
   194fc:	mov	r0, #0
   19500:	bx	lr
   19504:	ldr	r3, [pc, #12]	; 19518 <myencoding_decode_macintosh@@Base+0x28>
   19508:	add	r3, pc, r3
   1950c:	add	r0, r3, r0, lsl #2
   19510:	ldr	r0, [r0, #-1016]	; 0xfffffc08
   19514:	b	194f8 <myencoding_decode_macintosh@@Base+0x8>
   19518:	andeq	r6, r2, r0, lsr r6

0001951c <myencoding_decode_windows_874@@Base>:
   1951c:	tst	r0, #128	; 0x80
   19520:	bne	19530 <myencoding_decode_windows_874@@Base+0x14>
   19524:	str	r0, [r1, #12]
   19528:	mov	r0, #0
   1952c:	bx	lr
   19530:	ldr	r3, [pc, #12]	; 19544 <myencoding_decode_windows_874@@Base+0x28>
   19534:	add	r3, pc, r3
   19538:	add	r0, r3, r0, lsl #2
   1953c:	ldr	r0, [r0, #-504]	; 0xfffffe08
   19540:	b	19524 <myencoding_decode_windows_874@@Base+0x8>
   19544:	andeq	r6, r2, r4, lsl #12

00019548 <myencoding_decode_windows_1250@@Base>:
   19548:	tst	r0, #128	; 0x80
   1954c:	bne	1955c <myencoding_decode_windows_1250@@Base+0x14>
   19550:	str	r0, [r1, #12]
   19554:	mov	r0, #0
   19558:	bx	lr
   1955c:	ldr	r3, [pc, #12]	; 19570 <myencoding_decode_windows_1250@@Base+0x28>
   19560:	add	r3, pc, r3
   19564:	add	r0, r3, r0, lsl #2
   19568:	ldr	r0, [r0, #8]
   1956c:	b	19550 <myencoding_decode_windows_1250@@Base+0x8>
   19570:	ldrdeq	r6, [r2], -r8

00019574 <myencoding_decode_windows_1251@@Base>:
   19574:	tst	r0, #128	; 0x80
   19578:	bne	19588 <myencoding_decode_windows_1251@@Base+0x14>
   1957c:	str	r0, [r1, #12]
   19580:	mov	r0, #0
   19584:	bx	lr
   19588:	ldr	r3, [pc, #12]	; 1959c <myencoding_decode_windows_1251@@Base+0x28>
   1958c:	add	r3, pc, r3
   19590:	add	r0, r3, r0, lsl #2
   19594:	ldr	r0, [r0, #520]	; 0x208
   19598:	b	1957c <myencoding_decode_windows_1251@@Base+0x8>
   1959c:	andeq	r6, r2, ip, lsr #11

000195a0 <myencoding_decode_windows_1252@@Base>:
   195a0:	tst	r0, #128	; 0x80
   195a4:	bne	195b4 <myencoding_decode_windows_1252@@Base+0x14>
   195a8:	str	r0, [r1, #12]
   195ac:	mov	r0, #0
   195b0:	bx	lr
   195b4:	ldr	r3, [pc, #12]	; 195c8 <myencoding_decode_windows_1252@@Base+0x28>
   195b8:	add	r3, pc, r3
   195bc:	add	r0, r3, r0, lsl #2
   195c0:	ldr	r0, [r0, #1032]	; 0x408
   195c4:	b	195a8 <myencoding_decode_windows_1252@@Base+0x8>
   195c8:	andeq	r6, r2, r0, lsl #11

000195cc <myencoding_decode_windows_1253@@Base>:
   195cc:	tst	r0, #128	; 0x80
   195d0:	bne	195e0 <myencoding_decode_windows_1253@@Base+0x14>
   195d4:	str	r0, [r1, #12]
   195d8:	mov	r0, #0
   195dc:	bx	lr
   195e0:	ldr	r3, [pc, #12]	; 195f4 <myencoding_decode_windows_1253@@Base+0x28>
   195e4:	add	r3, pc, r3
   195e8:	add	r0, r3, r0, lsl #2
   195ec:	ldr	r0, [r0, #1544]	; 0x608
   195f0:	b	195d4 <myencoding_decode_windows_1253@@Base+0x8>
   195f4:	andeq	r6, r2, r4, asr r5

000195f8 <myencoding_decode_windows_1254@@Base>:
   195f8:	tst	r0, #128	; 0x80
   195fc:	bne	1960c <myencoding_decode_windows_1254@@Base+0x14>
   19600:	str	r0, [r1, #12]
   19604:	mov	r0, #0
   19608:	bx	lr
   1960c:	ldr	r3, [pc, #12]	; 19620 <myencoding_decode_windows_1254@@Base+0x28>
   19610:	add	r3, pc, r3
   19614:	add	r0, r3, r0, lsl #2
   19618:	ldr	r0, [r0, #2056]	; 0x808
   1961c:	b	19600 <myencoding_decode_windows_1254@@Base+0x8>
   19620:	andeq	r6, r2, r8, lsr #10

00019624 <myencoding_decode_windows_1255@@Base>:
   19624:	tst	r0, #128	; 0x80
   19628:	bne	19638 <myencoding_decode_windows_1255@@Base+0x14>
   1962c:	str	r0, [r1, #12]
   19630:	mov	r0, #0
   19634:	bx	lr
   19638:	ldr	r3, [pc, #12]	; 1964c <myencoding_decode_windows_1255@@Base+0x28>
   1963c:	add	r3, pc, r3
   19640:	add	r0, r3, r0, lsl #2
   19644:	ldr	r0, [r0, #2568]	; 0xa08
   19648:	b	1962c <myencoding_decode_windows_1255@@Base+0x8>
   1964c:	strdeq	r6, [r2], -ip

00019650 <myencoding_decode_windows_1256@@Base>:
   19650:	tst	r0, #128	; 0x80
   19654:	bne	19664 <myencoding_decode_windows_1256@@Base+0x14>
   19658:	str	r0, [r1, #12]
   1965c:	mov	r0, #0
   19660:	bx	lr
   19664:	ldr	r3, [pc, #12]	; 19678 <myencoding_decode_windows_1256@@Base+0x28>
   19668:	add	r3, pc, r3
   1966c:	add	r0, r3, r0, lsl #2
   19670:	ldr	r0, [r0, #3080]	; 0xc08
   19674:	b	19658 <myencoding_decode_windows_1256@@Base+0x8>
   19678:	ldrdeq	r6, [r2], -r0

0001967c <myencoding_decode_windows_1257@@Base>:
   1967c:	tst	r0, #128	; 0x80
   19680:	bne	19690 <myencoding_decode_windows_1257@@Base+0x14>
   19684:	str	r0, [r1, #12]
   19688:	mov	r0, #0
   1968c:	bx	lr
   19690:	sub	r0, r0, #128	; 0x80
   19694:	ldr	r3, [pc, #12]	; 196a8 <myencoding_decode_windows_1257@@Base+0x2c>
   19698:	add	r3, pc, r3
   1969c:	add	r0, r3, r0, lsl #2
   196a0:	ldr	r0, [r0, #-4080]	; 0xfffff010
   196a4:	b	19684 <myencoding_decode_windows_1257@@Base+0x8>
   196a8:	muleq	r2, r8, r4

000196ac <myencoding_decode_windows_1258@@Base>:
   196ac:	tst	r0, #128	; 0x80
   196b0:	bne	196c0 <myencoding_decode_windows_1258@@Base+0x14>
   196b4:	str	r0, [r1, #12]
   196b8:	mov	r0, #0
   196bc:	bx	lr
   196c0:	ldr	r3, [pc, #12]	; 196d4 <myencoding_decode_windows_1258@@Base+0x28>
   196c4:	add	r3, pc, r3
   196c8:	add	r0, r3, r0, lsl #2
   196cc:	ldr	r0, [r0, #-4080]	; 0xfffff010
   196d0:	b	196b4 <myencoding_decode_windows_1258@@Base+0x8>
   196d4:	andeq	r8, r2, ip, ror #8

000196d8 <myencoding_decode_x_mac_cyrillic@@Base>:
   196d8:	tst	r0, #128	; 0x80
   196dc:	bne	196ec <myencoding_decode_x_mac_cyrillic@@Base+0x14>
   196e0:	str	r0, [r1, #12]
   196e4:	mov	r0, #0
   196e8:	bx	lr
   196ec:	ldr	r3, [pc, #12]	; 19700 <myencoding_decode_x_mac_cyrillic@@Base+0x28>
   196f0:	add	r3, pc, r3
   196f4:	add	r0, r3, r0, lsl #2
   196f8:	ldr	r0, [r0, #-3568]	; 0xfffff210
   196fc:	b	196e0 <myencoding_decode_x_mac_cyrillic@@Base+0x8>
   19700:	andeq	r8, r2, r0, asr #8

00019704 <myencoding_decode_big5@@Base>:
   19704:	ldr	r3, [r1]
   19708:	cmp	r3, #0
   1970c:	beq	19880 <myencoding_decode_big5@@Base+0x17c>
   19710:	push	{lr}		; (str lr, [sp, #-4]!)
   19714:	mov	r2, #0
   19718:	str	r2, [r1]
   1971c:	cmp	r0, #127	; 0x7f
   19720:	movcc	lr, #64	; 0x40
   19724:	movcs	lr, #98	; 0x62
   19728:	sub	ip, r0, #64	; 0x40
   1972c:	uxtb	ip, ip
   19730:	add	r2, r0, #95	; 0x5f
   19734:	uxtb	r2, r2
   19738:	cmp	r2, #93	; 0x5d
   1973c:	cmphi	ip, #62	; 0x3e
   19740:	movhi	r3, #1
   19744:	bhi	19878 <myencoding_decode_big5@@Base+0x174>
   19748:	sub	r0, r0, #20224	; 0x4f00
   1974c:	sub	r0, r0, #29
   19750:	mov	r2, #157	; 0x9d
   19754:	mla	r3, r2, r3, r0
   19758:	sub	r3, r3, lr
   1975c:	sub	r2, r3, #1120	; 0x460
   19760:	sub	r2, r2, #13
   19764:	cmp	r2, #33	; 0x21
   19768:	addls	pc, pc, r2, lsl #2
   1976c:	b	19858 <myencoding_decode_big5@@Base+0x154>
   19770:	b	197f8 <myencoding_decode_big5@@Base+0xf4>
   19774:	b	19858 <myencoding_decode_big5@@Base+0x154>
   19778:	b	19810 <myencoding_decode_big5@@Base+0x10c>
   1977c:	b	19858 <myencoding_decode_big5@@Base+0x154>
   19780:	b	19858 <myencoding_decode_big5@@Base+0x154>
   19784:	b	19858 <myencoding_decode_big5@@Base+0x154>
   19788:	b	19858 <myencoding_decode_big5@@Base+0x154>
   1978c:	b	19858 <myencoding_decode_big5@@Base+0x154>
   19790:	b	19858 <myencoding_decode_big5@@Base+0x154>
   19794:	b	19858 <myencoding_decode_big5@@Base+0x154>
   19798:	b	19858 <myencoding_decode_big5@@Base+0x154>
   1979c:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197a0:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197a4:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197a8:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197ac:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197b0:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197b4:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197b8:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197bc:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197c0:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197c4:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197c8:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197cc:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197d0:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197d4:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197d8:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197dc:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197e0:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197e4:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197e8:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197ec:	b	19828 <myencoding_decode_big5@@Base+0x124>
   197f0:	b	19858 <myencoding_decode_big5@@Base+0x154>
   197f4:	b	19840 <myencoding_decode_big5@@Base+0x13c>
   197f8:	mov	r3, #202	; 0xca
   197fc:	str	r3, [r1, #12]
   19800:	mov	r3, #772	; 0x304
   19804:	str	r3, [r1, #16]
   19808:	mov	r3, #0
   1980c:	b	19878 <myencoding_decode_big5@@Base+0x174>
   19810:	mov	r3, #202	; 0xca
   19814:	str	r3, [r1, #12]
   19818:	mov	r3, #780	; 0x30c
   1981c:	str	r3, [r1, #16]
   19820:	mov	r3, #0
   19824:	b	19878 <myencoding_decode_big5@@Base+0x174>
   19828:	mov	r3, #234	; 0xea
   1982c:	str	r3, [r1, #12]
   19830:	mov	r3, #772	; 0x304
   19834:	str	r3, [r1, #16]
   19838:	mov	r3, #0
   1983c:	b	19878 <myencoding_decode_big5@@Base+0x174>
   19840:	mov	r3, #234	; 0xea
   19844:	str	r3, [r1, #12]
   19848:	mov	r3, #780	; 0x30c
   1984c:	str	r3, [r1, #16]
   19850:	mov	r3, #0
   19854:	b	19878 <myencoding_decode_big5@@Base+0x174>
   19858:	cmp	r3, #0
   1985c:	beq	198ac <myencoding_decode_big5@@Base+0x1a8>
   19860:	ldr	r2, [pc, #76]	; 198b4 <myencoding_decode_big5@@Base+0x1b0>
   19864:	add	r2, pc, r2
   19868:	ldr	r3, [r2, r3, lsl #2]
   1986c:	str	r3, [r1, #12]
   19870:	mov	r3, #0
   19874:	str	r3, [r1, #16]
   19878:	mov	r0, r3
   1987c:	pop	{pc}		; (ldr pc, [sp], #4)
   19880:	tst	r0, #128	; 0x80
   19884:	streq	r0, [r1, #12]
   19888:	beq	198a4 <myencoding_decode_big5@@Base+0x1a0>
   1988c:	add	r3, r0, #127	; 0x7f
   19890:	uxtb	r3, r3
   19894:	cmp	r3, #125	; 0x7d
   19898:	strls	r0, [r1]
   1989c:	movls	r3, #2
   198a0:	movhi	r3, #1
   198a4:	mov	r0, r3
   198a8:	bx	lr
   198ac:	mov	r3, #1
   198b0:	b	19878 <myencoding_decode_big5@@Base+0x174>
   198b4:	andeq	sl, r6, r4, asr #13

000198b8 <myencoding_decode_euc_jp@@Base>:
   198b8:	ldr	r3, [r1]
   198bc:	cmp	r3, #142	; 0x8e
   198c0:	beq	19904 <myencoding_decode_euc_jp@@Base+0x4c>
   198c4:	cmp	r3, #143	; 0x8f
   198c8:	beq	19930 <myencoding_decode_euc_jp@@Base+0x78>
   198cc:	cmp	r3, #0
   198d0:	bne	19960 <myencoding_decode_euc_jp@@Base+0xa8>
   198d4:	tst	r0, #128	; 0x80
   198d8:	beq	199d4 <myencoding_decode_euc_jp@@Base+0x11c>
   198dc:	add	r2, r0, #114	; 0x72
   198e0:	uxtb	r2, r2
   198e4:	add	r3, r0, #95	; 0x5f
   198e8:	uxtb	r3, r3
   198ec:	cmp	r3, #93	; 0x5d
   198f0:	cmphi	r2, #1
   198f4:	strls	r0, [r1]
   198f8:	movls	r0, #2
   198fc:	movhi	r0, #1
   19900:	bx	lr
   19904:	add	r3, r0, #95	; 0x5f
   19908:	uxtb	r3, r3
   1990c:	cmp	r3, #62	; 0x3e
   19910:	bhi	19940 <myencoding_decode_euc_jp@@Base+0x88>
   19914:	mov	r3, #0
   19918:	str	r3, [r1]
   1991c:	add	r0, r0, #65024	; 0xfe00
   19920:	add	r0, r0, #192	; 0xc0
   19924:	str	r0, [r1, #12]
   19928:	mov	r0, r3
   1992c:	bx	lr
   19930:	add	r3, r0, #95	; 0x5f
   19934:	uxtb	r3, r3
   19938:	cmp	r3, #93	; 0x5d
   1993c:	bls	1994c <myencoding_decode_euc_jp@@Base+0x94>
   19940:	mov	r3, #0
   19944:	str	r3, [r1]
   19948:	b	198d4 <myencoding_decode_euc_jp@@Base+0x1c>
   1994c:	mov	r3, #1
   19950:	str	r3, [r1, #20]
   19954:	str	r0, [r1]
   19958:	mov	r0, #2
   1995c:	bx	lr
   19960:	mov	r2, #0
   19964:	str	r2, [r1]
   19968:	sub	r2, r3, #161	; 0xa1
   1996c:	cmp	r2, #93	; 0x5d
   19970:	bhi	198d4 <myencoding_decode_euc_jp@@Base+0x1c>
   19974:	add	r2, r0, #95	; 0x5f
   19978:	uxtb	r2, r2
   1997c:	cmp	r2, #93	; 0x5d
   19980:	bhi	198d4 <myencoding_decode_euc_jp@@Base+0x1c>
   19984:	sub	r0, r0, #15232	; 0x3b80
   19988:	sub	r0, r0, #63	; 0x3f
   1998c:	mov	r2, #94	; 0x5e
   19990:	mla	r3, r2, r3, r0
   19994:	ldr	r2, [r1, #20]
   19998:	cmp	r2, #0
   1999c:	beq	199c4 <myencoding_decode_euc_jp@@Base+0x10c>
   199a0:	ldr	r2, [pc, #56]	; 199e0 <myencoding_decode_euc_jp@@Base+0x128>
   199a4:	add	r2, pc, r2
   199a8:	ldr	r0, [r2, r3, lsl #2]
   199ac:	str	r0, [r1, #12]
   199b0:	mov	r3, #0
   199b4:	str	r3, [r1, #20]
   199b8:	clz	r0, r0
   199bc:	lsr	r0, r0, #5
   199c0:	bx	lr
   199c4:	ldr	r2, [pc, #24]	; 199e4 <myencoding_decode_euc_jp@@Base+0x12c>
   199c8:	add	r2, pc, r2
   199cc:	ldr	r0, [r2, r3, lsl #2]
   199d0:	b	199ac <myencoding_decode_euc_jp@@Base+0xf4>
   199d4:	str	r0, [r1, #12]
   199d8:	mov	r0, #0
   199dc:	bx	lr
   199e0:	andeq	r7, r2, r4, lsl pc
   199e4:	andeq	r0, r3, r0, lsl #18

000199e8 <myencoding_decode_iso_2022_jp@@Base>:
   199e8:	ldr	r3, [r1, #4]
   199ec:	cmp	r3, #7
   199f0:	addls	pc, pc, r3, lsl #2
   199f4:	b	19cdc <myencoding_decode_iso_2022_jp@@Base+0x2f4>
   199f8:	b	19a18 <myencoding_decode_iso_2022_jp@@Base+0x30>
   199fc:	b	19a6c <myencoding_decode_iso_2022_jp@@Base+0x84>
   19a00:	b	19cdc <myencoding_decode_iso_2022_jp@@Base+0x2f4>
   19a04:	b	19af4 <myencoding_decode_iso_2022_jp@@Base+0x10c>
   19a08:	b	19b34 <myencoding_decode_iso_2022_jp@@Base+0x14c>
   19a0c:	b	19b80 <myencoding_decode_iso_2022_jp@@Base+0x198>
   19a10:	b	19bec <myencoding_decode_iso_2022_jp@@Base+0x204>
   19a14:	b	19c24 <myencoding_decode_iso_2022_jp@@Base+0x23c>
   19a18:	cmp	r0, #27
   19a1c:	moveq	r3, #6
   19a20:	streq	r3, [r1, #4]
   19a24:	moveq	r3, #2
   19a28:	beq	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19a2c:	sub	r2, r0, #14
   19a30:	uxtb	ip, r2
   19a34:	mvn	r2, r0
   19a38:	ubfx	r2, r2, #7, #1
   19a3c:	cmp	ip, #1
   19a40:	movls	r2, #0
   19a44:	andhi	r2, r2, #1
   19a48:	cmp	r2, #0
   19a4c:	movne	r2, #0
   19a50:	strne	r2, [r1, #20]
   19a54:	strne	r0, [r1, #12]
   19a58:	bne	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19a5c:	mov	r3, #0
   19a60:	str	r3, [r1, #20]
   19a64:	mov	r3, #1
   19a68:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19a6c:	cmp	r0, #27
   19a70:	moveq	r3, #6
   19a74:	streq	r3, [r1, #4]
   19a78:	moveq	r3, #2
   19a7c:	beq	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19a80:	cmp	r0, #92	; 0x5c
   19a84:	beq	19acc <myencoding_decode_iso_2022_jp@@Base+0xe4>
   19a88:	cmp	r0, #126	; 0x7e
   19a8c:	beq	19ae0 <myencoding_decode_iso_2022_jp@@Base+0xf8>
   19a90:	sub	r2, r0, #14
   19a94:	uxtb	ip, r2
   19a98:	mvn	r2, r0
   19a9c:	ubfx	r2, r2, #7, #1
   19aa0:	cmp	ip, #1
   19aa4:	movls	r2, #0
   19aa8:	andhi	r2, r2, #1
   19aac:	cmp	r2, #0
   19ab0:	movne	r3, #0
   19ab4:	strne	r3, [r1, #20]
   19ab8:	strne	r0, [r1, #12]
   19abc:	bne	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19ac0:	mov	r2, #0
   19ac4:	str	r2, [r1, #20]
   19ac8:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19acc:	mov	r3, #0
   19ad0:	str	r3, [r1, #20]
   19ad4:	mov	r2, #165	; 0xa5
   19ad8:	str	r2, [r1, #12]
   19adc:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19ae0:	mov	r3, #0
   19ae4:	str	r3, [r1, #20]
   19ae8:	movw	r2, #8254	; 0x203e
   19aec:	str	r2, [r1, #12]
   19af0:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19af4:	cmp	r0, #27
   19af8:	moveq	r3, #6
   19afc:	streq	r3, [r1, #4]
   19b00:	moveq	r3, #2
   19b04:	beq	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19b08:	sub	r3, r0, #33	; 0x21
   19b0c:	uxtb	r3, r3
   19b10:	cmp	r3, #62	; 0x3e
   19b14:	mov	r3, #0
   19b18:	str	r3, [r1, #20]
   19b1c:	addls	r0, r0, #65280	; 0xff00
   19b20:	addls	r0, r0, #64	; 0x40
   19b24:	strls	r0, [r1, #12]
   19b28:	movhi	r3, #1
   19b2c:	mov	r0, r3
   19b30:	bx	lr
   19b34:	cmp	r0, #27
   19b38:	moveq	r3, #6
   19b3c:	streq	r3, [r1, #4]
   19b40:	moveq	r3, #2
   19b44:	beq	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19b48:	sub	r3, r0, #33	; 0x21
   19b4c:	uxtb	r3, r3
   19b50:	cmp	r3, #93	; 0x5d
   19b54:	movhi	r3, #0
   19b58:	strhi	r3, [r1, #20]
   19b5c:	movhi	r3, #1
   19b60:	bhi	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19b64:	mov	r3, #0
   19b68:	str	r3, [r1, #20]
   19b6c:	str	r0, [r1]
   19b70:	mov	r3, #5
   19b74:	str	r3, [r1, #4]
   19b78:	mov	r3, #2
   19b7c:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19b80:	cmp	r0, #27
   19b84:	moveq	r3, #6
   19b88:	streq	r3, [r1, #4]
   19b8c:	moveq	r3, #3
   19b90:	beq	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19b94:	sub	r3, r0, #33	; 0x21
   19b98:	uxtb	r3, r3
   19b9c:	cmp	r3, #93	; 0x5d
   19ba0:	bhi	19bdc <myencoding_decode_iso_2022_jp@@Base+0x1f4>
   19ba4:	mov	r3, #4
   19ba8:	str	r3, [r1, #4]
   19bac:	ldr	r3, [r1]
   19bb0:	sub	r0, r0, #3120	; 0xc30
   19bb4:	sub	r0, r0, #15
   19bb8:	mov	r2, #94	; 0x5e
   19bbc:	mla	r3, r2, r3, r0
   19bc0:	ldr	r2, [pc, #284]	; 19ce4 <myencoding_decode_iso_2022_jp@@Base+0x2fc>
   19bc4:	add	r2, pc, r2
   19bc8:	ldr	r3, [r2, r3, lsl #2]
   19bcc:	str	r3, [r1, #12]
   19bd0:	clz	r3, r3
   19bd4:	lsr	r3, r3, #5
   19bd8:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19bdc:	mov	r3, #4
   19be0:	str	r3, [r1, #4]
   19be4:	mov	r3, #1
   19be8:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19bec:	sub	r3, r0, #36	; 0x24
   19bf0:	tst	r3, #251	; 0xfb
   19bf4:	beq	19c10 <myencoding_decode_iso_2022_jp@@Base+0x228>
   19bf8:	mov	r3, #0
   19bfc:	str	r3, [r1, #20]
   19c00:	ldr	r3, [r1, #8]
   19c04:	str	r3, [r1, #4]
   19c08:	mov	r3, #1
   19c0c:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19c10:	str	r0, [r1]
   19c14:	mov	r3, #7
   19c18:	str	r3, [r1, #4]
   19c1c:	mov	r3, #2
   19c20:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19c24:	ldr	r3, [r1]
   19c28:	mov	r2, #0
   19c2c:	str	r2, [r1]
   19c30:	str	r2, [r1, #4]
   19c34:	cmp	r3, #40	; 0x28
   19c38:	movne	r2, #0
   19c3c:	moveq	r2, #1
   19c40:	cmp	r0, #66	; 0x42
   19c44:	cmpeq	r3, #40	; 0x28
   19c48:	beq	19c8c <myencoding_decode_iso_2022_jp@@Base+0x2a4>
   19c4c:	cmp	r0, #74	; 0x4a
   19c50:	movne	ip, #0
   19c54:	andeq	ip, r2, #1
   19c58:	cmp	ip, #0
   19c5c:	movne	r3, #1
   19c60:	strne	r3, [r1, #4]
   19c64:	bne	19cb8 <myencoding_decode_iso_2022_jp@@Base+0x2d0>
   19c68:	cmp	r0, #73	; 0x49
   19c6c:	movne	r2, #0
   19c70:	andeq	r2, r2, #1
   19c74:	cmp	r2, #0
   19c78:	movne	r3, #2
   19c7c:	strne	r3, [r1, #4]
   19c80:	bne	19cb8 <myencoding_decode_iso_2022_jp@@Base+0x2d0>
   19c84:	cmp	r3, #36	; 0x24
   19c88:	beq	19ca4 <myencoding_decode_iso_2022_jp@@Base+0x2bc>
   19c8c:	mov	r3, #0
   19c90:	str	r3, [r1, #20]
   19c94:	ldr	r3, [r1, #8]
   19c98:	str	r3, [r1, #4]
   19c9c:	mov	r3, #1
   19ca0:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19ca4:	and	r0, r0, #253	; 0xfd
   19ca8:	cmp	r0, #64	; 0x40
   19cac:	moveq	r3, #4
   19cb0:	streq	r3, [r1, #4]
   19cb4:	bne	19c8c <myencoding_decode_iso_2022_jp@@Base+0x2a4>
   19cb8:	ldr	r3, [r1, #4]
   19cbc:	str	r3, [r1, #8]
   19cc0:	ldr	r3, [r1, #20]
   19cc4:	mov	r2, #1
   19cc8:	str	r2, [r1, #20]
   19ccc:	cmp	r3, #0
   19cd0:	movne	r3, r2
   19cd4:	moveq	r3, #2
   19cd8:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19cdc:	mov	r3, #0
   19ce0:	b	19b2c <myencoding_decode_iso_2022_jp@@Base+0x144>
   19ce4:	andeq	r0, r3, r4, lsl #14

00019ce8 <myencoding_decode_shift_jis@@Base>:
   19ce8:	ldr	r3, [r1]
   19cec:	cmp	r3, #0
   19cf0:	beq	19da8 <myencoding_decode_shift_jis@@Base+0xc0>
   19cf4:	str	r4, [sp, #-8]!
   19cf8:	str	lr, [sp, #4]
   19cfc:	cmp	r0, #127	; 0x7f
   19d00:	movcc	ip, #64	; 0x40
   19d04:	movcs	ip, #65	; 0x41
   19d08:	cmp	r3, #160	; 0xa0
   19d0c:	movcc	r4, #129	; 0x81
   19d10:	movcs	r4, #193	; 0xc1
   19d14:	sub	r2, r0, #64	; 0x40
   19d18:	uxtb	r2, r2
   19d1c:	eor	lr, r0, #128	; 0x80
   19d20:	cmp	lr, #124	; 0x7c
   19d24:	cmphi	r2, #62	; 0x3e
   19d28:	movhi	r3, #0
   19d2c:	strhi	r3, [r1, #12]
   19d30:	bhi	19d68 <myencoding_decode_shift_jis@@Base+0x80>
   19d34:	sub	r3, r3, r4
   19d38:	mov	r2, #188	; 0xbc
   19d3c:	sub	r0, r0, ip
   19d40:	mlas	ip, r2, r3, r0
   19d44:	moveq	r3, #0
   19d48:	streq	r3, [r1, #12]
   19d4c:	beq	19d68 <myencoding_decode_shift_jis@@Base+0x80>
   19d50:	ldr	r2, [pc, #164]	; 19dfc <myencoding_decode_shift_jis@@Base+0x114>
   19d54:	add	r2, pc, r2
   19d58:	ldr	r2, [r2, ip, lsl #2]
   19d5c:	str	r2, [r1, #12]
   19d60:	cmp	r2, #0
   19d64:	beq	19d84 <myencoding_decode_shift_jis@@Base+0x9c>
   19d68:	ldr	r3, [r1, #12]
   19d6c:	clz	r3, r3
   19d70:	lsr	r3, r3, #5
   19d74:	mov	r0, r3
   19d78:	ldr	r4, [sp]
   19d7c:	add	sp, sp, #4
   19d80:	pop	{pc}		; (ldr pc, [sp], #4)
   19d84:	sub	r2, ip, #8832	; 0x2280
   19d88:	sub	r2, r2, #4
   19d8c:	movw	r0, #1692	; 0x69c
   19d90:	cmp	r2, r0
   19d94:	bhi	19d68 <myencoding_decode_shift_jis@@Base+0x80>
   19d98:	add	r3, ip, #48384	; 0xbd00
   19d9c:	add	r3, r3, #124	; 0x7c
   19da0:	str	r3, [r1, #12]
   19da4:	b	19d68 <myencoding_decode_shift_jis@@Base+0x80>
   19da8:	cmp	r0, #128	; 0x80
   19dac:	strls	r0, [r1, #12]
   19db0:	bls	19df4 <myencoding_decode_shift_jis@@Base+0x10c>
   19db4:	add	r2, r0, #95	; 0x5f
   19db8:	uxtb	r2, r2
   19dbc:	cmp	r2, #62	; 0x3e
   19dc0:	addls	r0, r0, #65024	; 0xfe00
   19dc4:	addls	r0, r0, #192	; 0xc0
   19dc8:	strls	r0, [r1, #12]
   19dcc:	bls	19df4 <myencoding_decode_shift_jis@@Base+0x10c>
   19dd0:	add	r2, r0, #127	; 0x7f
   19dd4:	uxtb	r2, r2
   19dd8:	add	r3, r0, #32
   19ddc:	uxtb	r3, r3
   19de0:	cmp	r3, #28
   19de4:	cmphi	r2, #30
   19de8:	strls	r0, [r1]
   19dec:	movls	r3, #2
   19df0:	movhi	r3, #1
   19df4:	mov	r0, r3
   19df8:	bx	lr
   19dfc:	andeq	r0, r3, r4, ror r5

00019e00 <myencoding_decode_euc_kr@@Base>:
   19e00:	ldr	ip, [r1]
   19e04:	cmp	ip, #0
   19e08:	beq	19e5c <myencoding_decode_euc_kr@@Base+0x5c>
   19e0c:	mov	r2, #0
   19e10:	str	r2, [r1]
   19e14:	sub	r2, r0, #65	; 0x41
   19e18:	uxtb	r2, r2
   19e1c:	cmp	r2, #189	; 0xbd
   19e20:	bhi	19e48 <myencoding_decode_euc_kr@@Base+0x48>
   19e24:	mov	r2, #190	; 0xbe
   19e28:	sub	r0, r0, #24320	; 0x5f00
   19e2c:	sub	r0, r0, #255	; 0xff
   19e30:	mlas	r3, r2, ip, r0
   19e34:	beq	19e48 <myencoding_decode_euc_kr@@Base+0x48>
   19e38:	ldr	r2, [pc, #68]	; 19e84 <myencoding_decode_euc_kr@@Base+0x84>
   19e3c:	add	r2, pc, r2
   19e40:	ldr	r3, [r2, r3, lsl #2]
   19e44:	str	r3, [r1, #12]
   19e48:	ldr	r3, [r1, #12]
   19e4c:	clz	ip, r3
   19e50:	lsr	ip, ip, #5
   19e54:	mov	r0, ip
   19e58:	bx	lr
   19e5c:	tst	r0, #128	; 0x80
   19e60:	streq	r0, [r1, #12]
   19e64:	beq	19e54 <myencoding_decode_euc_kr@@Base+0x54>
   19e68:	add	r3, r0, #127	; 0x7f
   19e6c:	uxtb	r3, r3
   19e70:	cmp	r3, #125	; 0x7d
   19e74:	strls	r0, [r1]
   19e78:	movls	ip, #2
   19e7c:	movhi	ip, #1
   19e80:	b	19e54 <myencoding_decode_euc_kr@@Base+0x54>
   19e84:	ldrdeq	r2, [r5], -ip

00019e88 <myencoding_decode_x_user_defined@@Base>:
   19e88:	tst	r0, #128	; 0x80
   19e8c:	addne	r0, r0, #63232	; 0xf700
   19e90:	str	r0, [r1, #12]
   19e94:	mov	r0, #0
   19e98:	bx	lr

00019e9c <myencoding_get_function_by_id@@Base>:
   19e9c:	ldr	r3, [pc, #8]	; 19eac <myencoding_get_function_by_id@@Base+0x10>
   19ea0:	add	r3, pc, r3
   19ea4:	ldr	r0, [r3, r0, lsl #2]
   19ea8:	bx	lr
   19eac:			; <UNDEFINED> instruction: 0x000fffbc

00019eb0 <myencoding_index_gb18030_ranges_code_point@@Base>:
   19eb0:	sub	r2, r0, #39168	; 0x9900
   19eb4:	sub	r2, r2, #252	; 0xfc
   19eb8:	movw	r1, #18507	; 0x484b
   19ebc:	movt	r1, #2
   19ec0:	movw	r3, #57927	; 0xe247
   19ec4:	movt	r3, #18
   19ec8:	cmp	r0, r3
   19ecc:	movls	r3, #0
   19ed0:	movhi	r3, #1
   19ed4:	cmp	r2, r1
   19ed8:	orrls	r3, r3, #1
   19edc:	cmp	r3, #0
   19ee0:	bne	19f50 <myencoding_index_gb18030_ranges_code_point@@Base+0xa0>
   19ee4:	movw	r3, #7457	; 0x1d21
   19ee8:	cmp	r0, r3
   19eec:	beq	19f58 <myencoding_index_gb18030_ranges_code_point@@Base+0xa8>
   19ef0:	movw	r3, #57927	; 0xe247
   19ef4:	movt	r3, #2
   19ef8:	cmp	r0, r3
   19efc:	bhi	19f30 <myencoding_index_gb18030_ranges_code_point@@Base+0x80>
   19f00:	mov	r3, #206	; 0xce
   19f04:	ldr	r1, [pc, #84]	; 19f60 <myencoding_index_gb18030_ranges_code_point@@Base+0xb0>
   19f08:	add	r1, pc, r1
   19f0c:	sub	r1, r1, #2544	; 0x9f0
   19f10:	sub	r3, r3, #1
   19f14:	ldr	r2, [r1, r3, lsl #3]
   19f18:	cmp	r2, r0
   19f1c:	bls	19f34 <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   19f20:	cmp	r3, #0
   19f24:	bne	19f10 <myencoding_index_gb18030_ranges_code_point@@Base+0x60>
   19f28:	mov	r2, r3
   19f2c:	b	19f44 <myencoding_index_gb18030_ranges_code_point@@Base+0x94>
   19f30:	mov	r3, #206	; 0xce
   19f34:	ldr	r2, [pc, #40]	; 19f64 <myencoding_index_gb18030_ranges_code_point@@Base+0xb4>
   19f38:	add	r2, pc, r2
   19f3c:	add	r2, r2, r3, lsl #3
   19f40:	ldr	r2, [r2, #-2540]	; 0xfffff614
   19f44:	add	r0, r2, r0
   19f48:	sub	r0, r0, r3
   19f4c:	bx	lr
   19f50:	mov	r0, #0
   19f54:	bx	lr
   19f58:	movw	r0, #59335	; 0xe7c7
   19f5c:	bx	lr
   19f60:	andeq	r7, r2, r8, lsr #24
   19f64:	strdeq	r7, [r2], -r8

00019f68 <myencoding_decode_gb18030@@Base>:
   19f68:	str	r4, [sp, #-8]!
   19f6c:	str	lr, [sp, #4]
   19f70:	ldr	r2, [r1, #8]
   19f74:	cmp	r2, #0
   19f78:	beq	19ff4 <myencoding_decode_gb18030@@Base+0x8c>
   19f7c:	mov	r4, r1
   19f80:	sub	r1, r0, #48	; 0x30
   19f84:	uxtb	r1, r1
   19f88:	cmp	r1, #9
   19f8c:	bls	19fbc <myencoding_decode_gb18030@@Base+0x54>
   19f90:	mov	r3, #0
   19f94:	str	r3, [r4]
   19f98:	str	r3, [r4, #4]
   19f9c:	str	r3, [r4, #8]
   19fa0:	ldr	r3, [r4, #12]
   19fa4:	clz	r3, r3
   19fa8:	lsr	r3, r3, #5
   19fac:	mov	r0, r3
   19fb0:	ldr	r4, [sp]
   19fb4:	add	sp, sp, #4
   19fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   19fbc:	ldr	r3, [r4]
   19fc0:	add	r1, r3, r3, lsl #2
   19fc4:	ldr	r3, [r4, #4]
   19fc8:	add	r3, r3, r1, lsl #1
   19fcc:	rsb	r3, r3, r3, lsl #6
   19fd0:	add	r2, r2, r3, lsl #1
   19fd4:	add	r2, r2, r2, lsl #2
   19fd8:	movw	r3, #16718	; 0x414e
   19fdc:	movt	r3, #65510	; 0xffe6
   19fe0:	add	r3, r0, r3
   19fe4:	add	r0, r3, r2, lsl #1
   19fe8:	bl	10ea4 <myencoding_index_gb18030_ranges_code_point@plt>
   19fec:	str	r0, [r4, #12]
   19ff0:	b	19f90 <myencoding_decode_gb18030@@Base+0x28>
   19ff4:	ldr	r2, [r1, #4]
   19ff8:	cmp	r2, #0
   19ffc:	beq	1a02c <myencoding_decode_gb18030@@Base+0xc4>
   1a000:	add	r3, r0, #127	; 0x7f
   1a004:	uxtb	r3, r3
   1a008:	cmp	r3, #125	; 0x7d
   1a00c:	strls	r0, [r1, #8]
   1a010:	movls	r3, #2
   1a014:	bls	19fac <myencoding_decode_gb18030@@Base+0x44>
   1a018:	mov	r3, #0
   1a01c:	str	r3, [r1]
   1a020:	str	r3, [r1, #4]
   1a024:	mov	r3, #1
   1a028:	b	19fac <myencoding_decode_gb18030@@Base+0x44>
   1a02c:	ldr	r3, [r1]
   1a030:	cmp	r3, #0
   1a034:	beq	1a0ac <myencoding_decode_gb18030@@Base+0x144>
   1a038:	sub	ip, r0, #48	; 0x30
   1a03c:	uxtb	ip, ip
   1a040:	cmp	ip, #9
   1a044:	strls	r0, [r1, #4]
   1a048:	movls	r3, #2
   1a04c:	bls	19fac <myencoding_decode_gb18030@@Base+0x44>
   1a050:	mov	ip, #0
   1a054:	str	ip, [r1]
   1a058:	cmp	r0, #127	; 0x7f
   1a05c:	movcc	lr, #64	; 0x40
   1a060:	movcs	lr, #65	; 0x41
   1a064:	sub	ip, r0, #64	; 0x40
   1a068:	uxtb	ip, ip
   1a06c:	eor	r4, r0, #128	; 0x80
   1a070:	cmp	r4, #126	; 0x7e
   1a074:	cmphi	ip, #62	; 0x3e
   1a078:	movhi	r3, #1
   1a07c:	bhi	19fac <myencoding_decode_gb18030@@Base+0x44>
   1a080:	sub	r0, r0, lr
   1a084:	mov	ip, #190	; 0xbe
   1a088:	mla	r3, ip, r3, r0
   1a08c:	sub	r3, r3, #24320	; 0x5f00
   1a090:	sub	r3, r3, #190	; 0xbe
   1a094:	ldr	r0, [pc, #72]	; 1a0e4 <myencoding_decode_gb18030@@Base+0x17c>
   1a098:	add	r0, pc, r0
   1a09c:	ldr	r3, [r0, r3, lsl #2]
   1a0a0:	str	r3, [r1, #12]
   1a0a4:	mov	r3, r2
   1a0a8:	b	19fac <myencoding_decode_gb18030@@Base+0x44>
   1a0ac:	tst	r0, #128	; 0x80
   1a0b0:	streq	r0, [r1, #12]
   1a0b4:	beq	19fac <myencoding_decode_gb18030@@Base+0x44>
   1a0b8:	cmp	r0, #128	; 0x80
   1a0bc:	movweq	r2, #8364	; 0x20ac
   1a0c0:	streq	r2, [r1, #12]
   1a0c4:	beq	19fac <myencoding_decode_gb18030@@Base+0x44>
   1a0c8:	add	r3, r0, #127	; 0x7f
   1a0cc:	uxtb	r3, r3
   1a0d0:	cmp	r3, #125	; 0x7d
   1a0d4:	strls	r0, [r1]
   1a0d8:	movls	r3, #2
   1a0dc:	movhi	r3, #1
   1a0e0:	b	19fac <myencoding_decode_gb18030@@Base+0x44>
   1a0e4:	andeq	fp, r3, r0, ror r2

0001a0e8 <myencoding_decode_gbk@@Base>:
   1a0e8:	str	r4, [sp, #-8]!
   1a0ec:	str	lr, [sp, #4]
   1a0f0:	bl	10b8c <myencoding_decode_gb18030@plt>
   1a0f4:	ldr	r4, [sp]
   1a0f8:	add	sp, sp, #4
   1a0fc:	pop	{pc}		; (ldr pc, [sp], #4)

0001a100 <myencoding_decode_shared_utf_16@@Base>:
   1a100:	ldr	r3, [r1]
   1a104:	cmp	r3, #0
   1a108:	beq	1a15c <myencoding_decode_shared_utf_16@@Base+0x5c>
   1a10c:	ldr	r2, [r1, #20]
   1a110:	cmp	r2, #0
   1a114:	addne	r3, r0, r3, lsl #8
   1a118:	addeq	r3, r3, r0, lsl #8
   1a11c:	mov	r0, #0
   1a120:	str	r0, [r1]
   1a124:	ldr	r0, [r1, #4]
   1a128:	cmp	r0, #0
   1a12c:	beq	1a1a4 <myencoding_decode_shared_utf_16@@Base+0xa4>
   1a130:	mov	ip, #0
   1a134:	str	ip, [r1, #4]
   1a138:	sub	ip, r3, #56320	; 0xdc00
   1a13c:	cmp	ip, #1024	; 0x400
   1a140:	bcs	1a168 <myencoding_decode_shared_utf_16@@Base+0x68>
   1a144:	add	r3, r3, r0, lsl #10
   1a148:	sub	r3, r3, #56360960	; 0x35c0000
   1a14c:	sub	r3, r3, #252928	; 0x3dc00
   1a150:	str	r3, [r1, #12]
   1a154:	mov	r0, #0
   1a158:	bx	lr
   1a15c:	str	r0, [r1]
   1a160:	mov	r0, #2
   1a164:	bx	lr
   1a168:	lsr	r0, r3, #8
   1a16c:	cmp	r2, #0
   1a170:	beq	1a18c <myencoding_decode_shared_utf_16@@Base+0x8c>
   1a174:	uxtb	r0, r0
   1a178:	str	r0, [r1, #12]
   1a17c:	uxtb	r3, r3
   1a180:	str	r3, [r1, #16]
   1a184:	mov	r0, #5
   1a188:	bx	lr
   1a18c:	uxtb	r3, r3
   1a190:	str	r3, [r1, #12]
   1a194:	uxtb	r0, r0
   1a198:	str	r0, [r1, #16]
   1a19c:	mov	r0, #5
   1a1a0:	bx	lr
   1a1a4:	sub	r2, r3, #55296	; 0xd800
   1a1a8:	cmp	r2, #1024	; 0x400
   1a1ac:	bcc	1a1c4 <myencoding_decode_shared_utf_16@@Base+0xc4>
   1a1b0:	sub	r2, r3, #56320	; 0xdc00
   1a1b4:	cmp	r2, #1024	; 0x400
   1a1b8:	strcs	r3, [r1, #12]
   1a1bc:	movcc	r0, #1
   1a1c0:	bx	lr
   1a1c4:	str	r3, [r1, #4]
   1a1c8:	mov	r0, #2
   1a1cc:	bx	lr

0001a1d0 <myencoding_decode_utf_16be@@Base>:
   1a1d0:	str	r4, [sp, #-8]!
   1a1d4:	str	lr, [sp, #4]
   1a1d8:	ldr	r3, [r1, #20]
   1a1dc:	cmp	r3, #0
   1a1e0:	moveq	r3, #1
   1a1e4:	streq	r3, [r1, #20]
   1a1e8:	bl	10b68 <myencoding_decode_shared_utf_16@plt>
   1a1ec:	ldr	r4, [sp]
   1a1f0:	add	sp, sp, #4
   1a1f4:	pop	{pc}		; (ldr pc, [sp], #4)

0001a1f8 <myencoding_decode_utf_16le@@Base>:
   1a1f8:	str	r4, [sp, #-8]!
   1a1fc:	str	lr, [sp, #4]
   1a200:	ldr	r3, [r1, #20]
   1a204:	cmp	r3, #0
   1a208:	movne	r3, #0
   1a20c:	strne	r3, [r1, #20]
   1a210:	bl	10b68 <myencoding_decode_shared_utf_16@plt>
   1a214:	ldr	r4, [sp]
   1a218:	add	sp, sp, #4
   1a21c:	pop	{pc}		; (ldr pc, [sp], #4)

0001a220 <myencoding_result_clean@@Base>:
   1a220:	mov	r3, #0
   1a224:	str	r3, [r0]
   1a228:	str	r3, [r0, #4]
   1a22c:	str	r3, [r0, #8]
   1a230:	str	r3, [r0, #12]
   1a234:	str	r3, [r0, #16]
   1a238:	str	r3, [r0, #20]
   1a23c:	bx	lr

0001a240 <myencoding_codepoint_ascii_length@@Base>:
   1a240:	cmp	r0, #127	; 0x7f
   1a244:	bls	1a278 <myencoding_codepoint_ascii_length@@Base+0x38>
   1a248:	cmp	r0, #2048	; 0x800
   1a24c:	bcc	1a280 <myencoding_codepoint_ascii_length@@Base+0x40>
   1a250:	cmp	r0, #65536	; 0x10000
   1a254:	bcc	1a288 <myencoding_codepoint_ascii_length@@Base+0x48>
   1a258:	cmp	r0, #2097152	; 0x200000
   1a25c:	bcc	1a290 <myencoding_codepoint_ascii_length@@Base+0x50>
   1a260:	cmn	r0, #-67108863	; 0xfc000001
   1a264:	bls	1a298 <myencoding_codepoint_ascii_length@@Base+0x58>
   1a268:	cmp	r0, #0
   1a26c:	movlt	r0, #0
   1a270:	movge	r0, #6
   1a274:	bx	lr
   1a278:	mov	r0, #1
   1a27c:	bx	lr
   1a280:	mov	r0, #2
   1a284:	bx	lr
   1a288:	mov	r0, #3
   1a28c:	bx	lr
   1a290:	mov	r0, #4
   1a294:	bx	lr
   1a298:	mov	r0, #5
   1a29c:	bx	lr

0001a2a0 <myencoding_ascii_utf_8_length@@Base>:
   1a2a0:	tst	r0, #128	; 0x80
   1a2a4:	beq	1a2e8 <myencoding_ascii_utf_8_length@@Base+0x48>
   1a2a8:	and	r3, r0, #224	; 0xe0
   1a2ac:	cmp	r3, #192	; 0xc0
   1a2b0:	beq	1a2f0 <myencoding_ascii_utf_8_length@@Base+0x50>
   1a2b4:	and	r3, r0, #240	; 0xf0
   1a2b8:	cmp	r3, #224	; 0xe0
   1a2bc:	beq	1a2f8 <myencoding_ascii_utf_8_length@@Base+0x58>
   1a2c0:	and	r3, r0, #248	; 0xf8
   1a2c4:	cmp	r3, #240	; 0xf0
   1a2c8:	beq	1a300 <myencoding_ascii_utf_8_length@@Base+0x60>
   1a2cc:	and	r3, r0, #252	; 0xfc
   1a2d0:	cmp	r3, #248	; 0xf8
   1a2d4:	beq	1a308 <myencoding_ascii_utf_8_length@@Base+0x68>
   1a2d8:	cmp	r0, #252	; 0xfc
   1a2dc:	movne	r0, #0
   1a2e0:	moveq	r0, #6
   1a2e4:	bx	lr
   1a2e8:	mov	r0, #1
   1a2ec:	bx	lr
   1a2f0:	mov	r0, #2
   1a2f4:	bx	lr
   1a2f8:	mov	r0, #3
   1a2fc:	bx	lr
   1a300:	mov	r0, #4
   1a304:	bx	lr
   1a308:	mov	r0, #5
   1a30c:	bx	lr

0001a310 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   1a310:	cmp	r0, #127	; 0x7f
   1a314:	bls	1a338 <myencoding_codepoint_to_ascii_utf_8@@Base+0x28>
   1a318:	cmp	r0, #2048	; 0x800
   1a31c:	bcc	1a344 <myencoding_codepoint_to_ascii_utf_8@@Base+0x34>
   1a320:	cmp	r0, #65536	; 0x10000
   1a324:	bcc	1a368 <myencoding_codepoint_to_ascii_utf_8@@Base+0x58>
   1a328:	cmp	r0, #2097152	; 0x200000
   1a32c:	bcc	1a398 <myencoding_codepoint_to_ascii_utf_8@@Base+0x88>
   1a330:	mov	r0, #0
   1a334:	bx	lr
   1a338:	strb	r0, [r1]
   1a33c:	mov	r0, #1
   1a340:	bx	lr
   1a344:	mvn	r3, #63	; 0x3f
   1a348:	orr	r3, r3, r0, lsr #6
   1a34c:	strb	r3, [r1]
   1a350:	and	r0, r0, #63	; 0x3f
   1a354:	mvn	r0, r0, lsl #25
   1a358:	mvn	r0, r0, lsr #25
   1a35c:	strb	r0, [r1, #1]
   1a360:	mov	r0, #2
   1a364:	bx	lr
   1a368:	mvn	r3, #31
   1a36c:	orr	r3, r3, r0, lsr #12
   1a370:	strb	r3, [r1]
   1a374:	ubfx	r2, r0, #6, #6
   1a378:	mvn	r3, #127	; 0x7f
   1a37c:	orr	r2, r3, r2
   1a380:	strb	r2, [r1, #1]
   1a384:	and	r0, r0, #63	; 0x3f
   1a388:	orr	r3, r3, r0
   1a38c:	strb	r3, [r1, #2]
   1a390:	mov	r0, #3
   1a394:	bx	lr
   1a398:	mvn	r3, #15
   1a39c:	orr	r3, r3, r0, lsr #18
   1a3a0:	strb	r3, [r1]
   1a3a4:	ubfx	r2, r0, #12, #6
   1a3a8:	mvn	r3, #127	; 0x7f
   1a3ac:	orr	r2, r3, r2
   1a3b0:	strb	r2, [r1, #1]
   1a3b4:	ubfx	r2, r0, #6, #6
   1a3b8:	orr	r2, r3, r2
   1a3bc:	strb	r2, [r1, #2]
   1a3c0:	and	r0, r0, #63	; 0x3f
   1a3c4:	orr	r0, r3, r0
   1a3c8:	strb	r0, [r1, #3]
   1a3cc:	mov	r0, #4
   1a3d0:	bx	lr

0001a3d4 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   1a3d4:	cmp	r0, #127	; 0x7f
   1a3d8:	bls	1a3fc <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x28>
   1a3dc:	cmp	r0, #2048	; 0x800
   1a3e0:	bcc	1a418 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x44>
   1a3e4:	cmp	r0, #65536	; 0x10000
   1a3e8:	bcc	1a43c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x68>
   1a3ec:	cmp	r0, #2097152	; 0x200000
   1a3f0:	bcc	1a46c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x98>
   1a3f4:	mov	r0, #0
   1a3f8:	bx	lr
   1a3fc:	ldr	r3, [pc, #164]	; 1a4a8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd4>
   1a400:	add	r3, pc, r3
   1a404:	add	r0, r3, r0
   1a408:	ldrb	r3, [r0, #-888]	; 0xfffffc88
   1a40c:	strb	r3, [r1]
   1a410:	mov	r0, #1
   1a414:	bx	lr
   1a418:	mvn	r3, #63	; 0x3f
   1a41c:	orr	r3, r3, r0, lsr #6
   1a420:	strb	r3, [r1]
   1a424:	and	r0, r0, #63	; 0x3f
   1a428:	mvn	r0, r0, lsl #25
   1a42c:	mvn	r0, r0, lsr #25
   1a430:	strb	r0, [r1, #1]
   1a434:	mov	r0, #2
   1a438:	bx	lr
   1a43c:	mvn	r3, #31
   1a440:	orr	r3, r3, r0, lsr #12
   1a444:	strb	r3, [r1]
   1a448:	ubfx	r2, r0, #6, #6
   1a44c:	mvn	r3, #127	; 0x7f
   1a450:	orr	r2, r3, r2
   1a454:	strb	r2, [r1, #1]
   1a458:	and	r0, r0, #63	; 0x3f
   1a45c:	orr	r3, r3, r0
   1a460:	strb	r3, [r1, #2]
   1a464:	mov	r0, #3
   1a468:	bx	lr
   1a46c:	mvn	r3, #15
   1a470:	orr	r3, r3, r0, lsr #18
   1a474:	strb	r3, [r1]
   1a478:	ubfx	r2, r0, #12, #6
   1a47c:	mvn	r3, #127	; 0x7f
   1a480:	orr	r2, r3, r2
   1a484:	strb	r2, [r1, #1]
   1a488:	ubfx	r2, r0, #6, #6
   1a48c:	orr	r2, r3, r2
   1a490:	strb	r2, [r1, #2]
   1a494:	and	r0, r0, #63	; 0x3f
   1a498:	orr	r0, r3, r0
   1a49c:	strb	r0, [r1, #3]
   1a4a0:	mov	r0, #4
   1a4a4:	bx	lr
   1a4a8:	andeq	r7, r2, r0, lsr r7

0001a4ac <myencoding_ascii_utf_8_to_codepoint@@Base>:
   1a4ac:	ldrb	r3, [r0]
   1a4b0:	tst	r3, #128	; 0x80
   1a4b4:	beq	1a4e4 <myencoding_ascii_utf_8_to_codepoint@@Base+0x38>
   1a4b8:	and	r2, r3, #224	; 0xe0
   1a4bc:	cmp	r2, #192	; 0xc0
   1a4c0:	beq	1a4f0 <myencoding_ascii_utf_8_to_codepoint@@Base+0x44>
   1a4c4:	and	r2, r3, #240	; 0xf0
   1a4c8:	cmp	r2, #224	; 0xe0
   1a4cc:	beq	1a514 <myencoding_ascii_utf_8_to_codepoint@@Base+0x68>
   1a4d0:	and	r2, r3, #248	; 0xf8
   1a4d4:	cmp	r2, #240	; 0xf0
   1a4d8:	beq	1a54c <myencoding_ascii_utf_8_to_codepoint@@Base+0xa0>
   1a4dc:	mov	r0, #0
   1a4e0:	bx	lr
   1a4e4:	str	r3, [r1]
   1a4e8:	mov	r0, #1
   1a4ec:	bx	lr
   1a4f0:	lsl	r3, r3, #6
   1a4f4:	and	r3, r3, #4032	; 0xfc0
   1a4f8:	str	r3, [r1]
   1a4fc:	ldrb	r2, [r0, #1]
   1a500:	and	r2, r2, #127	; 0x7f
   1a504:	orr	r3, r2, r3
   1a508:	str	r3, [r1]
   1a50c:	mov	r0, #2
   1a510:	bx	lr
   1a514:	lsl	r3, r3, #12
   1a518:	and	r3, r3, #126976	; 0x1f000
   1a51c:	str	r3, [r1]
   1a520:	ldrb	r2, [r0, #1]
   1a524:	lsl	r2, r2, #6
   1a528:	and	r2, r2, #8128	; 0x1fc0
   1a52c:	orr	r3, r2, r3
   1a530:	str	r3, [r1]
   1a534:	ldrb	r2, [r0, #2]
   1a538:	and	r2, r2, #127	; 0x7f
   1a53c:	orr	r3, r2, r3
   1a540:	str	r3, [r1]
   1a544:	mov	r0, #3
   1a548:	bx	lr
   1a54c:	lsl	r3, r3, #18
   1a550:	and	r3, r3, #3932160	; 0x3c0000
   1a554:	str	r3, [r1]
   1a558:	ldrb	r2, [r0, #1]
   1a55c:	lsl	r2, r2, #12
   1a560:	and	r2, r2, #520192	; 0x7f000
   1a564:	orr	r2, r2, r3
   1a568:	str	r2, [r1]
   1a56c:	ldrb	r3, [r0, #2]
   1a570:	lsl	r3, r3, #6
   1a574:	and	r3, r3, #8128	; 0x1fc0
   1a578:	orr	r3, r3, r2
   1a57c:	str	r3, [r1]
   1a580:	ldrb	r2, [r0, #3]
   1a584:	and	r2, r2, #127	; 0x7f
   1a588:	orr	r3, r2, r3
   1a58c:	str	r3, [r1]
   1a590:	mov	r0, #4
   1a594:	bx	lr

0001a598 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   1a598:	lsrs	r3, r0, #16
   1a59c:	bne	1a5b4 <myencoding_codepoint_to_ascii_utf_16@@Base+0x1c>
   1a5a0:	lsr	r3, r0, #8
   1a5a4:	strb	r3, [r1]
   1a5a8:	strb	r0, [r1, #1]
   1a5ac:	mov	r0, #2
   1a5b0:	bx	lr
   1a5b4:	sub	r0, r0, #65536	; 0x10000
   1a5b8:	lsr	r3, r0, #10
   1a5bc:	orr	r3, r3, #55296	; 0xd800
   1a5c0:	ubfx	r0, r0, #0, #10
   1a5c4:	orr	r0, r0, #56320	; 0xdc00
   1a5c8:	lsr	r2, r3, #8
   1a5cc:	strb	r2, [r1]
   1a5d0:	strb	r3, [r1, #1]
   1a5d4:	lsr	r3, r0, #8
   1a5d8:	strb	r3, [r1, #2]
   1a5dc:	strb	r0, [r1, #3]
   1a5e0:	mov	r0, #4
   1a5e4:	bx	lr

0001a5e8 <myencoding_convert_to_ascii_utf_8@@Base>:
   1a5e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a5ec:	strd	r6, [sp, #8]
   1a5f0:	strd	r8, [sp, #16]
   1a5f4:	strd	sl, [sp, #24]
   1a5f8:	str	lr, [sp, #32]
   1a5fc:	sub	sp, sp, #36	; 0x24
   1a600:	mov	r6, r0
   1a604:	mov	r9, r1
   1a608:	mov	r4, r2
   1a60c:	mov	r5, r3
   1a610:	ldr	r3, [r0]
   1a614:	cmp	r3, #0
   1a618:	beq	1a66c <myencoding_convert_to_ascii_utf_8@@Base+0x84>
   1a61c:	mov	r0, #0
   1a620:	mov	r1, #0
   1a624:	strd	r0, [sp, #8]
   1a628:	strd	r0, [sp, #16]
   1a62c:	strd	r0, [sp, #24]
   1a630:	mov	r0, r5
   1a634:	bl	107c0 <myencoding_get_function_by_id@plt>
   1a638:	mov	sl, r0
   1a63c:	cmp	r4, #0
   1a640:	beq	1a68c <myencoding_convert_to_ascii_utf_8@@Base+0xa4>
   1a644:	lsr	r3, r4, #1
   1a648:	add	r3, r3, #6
   1a64c:	str	r3, [sp, #4]
   1a650:	sub	r5, r9, #1
   1a654:	mov	fp, r9
   1a658:	add	r9, r9, r4
   1a65c:	sub	r9, r9, #1
   1a660:	add	r3, sp, #8
   1a664:	str	r3, [sp]
   1a668:	b	1a6e0 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>
   1a66c:	add	r0, r2, #1
   1a670:	str	r0, [r6, #4]
   1a674:	str	r3, [r6, #8]
   1a678:	bl	10c28 <mycore_malloc@plt>
   1a67c:	str	r0, [r6]
   1a680:	cmp	r0, #0
   1a684:	moveq	r4, #0
   1a688:	bne	1a61c <myencoding_convert_to_ascii_utf_8@@Base+0x34>
   1a68c:	mov	r0, r4
   1a690:	add	sp, sp, #36	; 0x24
   1a694:	ldrd	r4, [sp]
   1a698:	ldrd	r6, [sp, #8]
   1a69c:	ldrd	r8, [sp, #16]
   1a6a0:	ldrd	sl, [sp, #24]
   1a6a4:	add	sp, sp, #32
   1a6a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6ac:	ldr	r1, [r6]
   1a6b0:	ldr	r3, [r6, #8]
   1a6b4:	add	r1, r1, r3
   1a6b8:	ldr	r0, [sp, #20]
   1a6bc:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a6c0:	ldr	r3, [r6, #8]
   1a6c4:	add	r0, r3, r0
   1a6c8:	str	r0, [r6, #8]
   1a6cc:	add	r4, r5, #2
   1a6d0:	sub	r4, r4, fp
   1a6d4:	mov	r5, r7
   1a6d8:	cmp	r7, r9
   1a6dc:	beq	1a68c <myencoding_convert_to_ascii_utf_8@@Base+0xa4>
   1a6e0:	add	r7, r5, #1
   1a6e4:	ldr	r1, [sp]
   1a6e8:	ldrb	r0, [r5, #1]
   1a6ec:	blx	sl
   1a6f0:	subs	r4, r0, #0
   1a6f4:	bne	1a6cc <myencoding_convert_to_ascii_utf_8@@Base+0xe4>
   1a6f8:	ldr	r8, [r6, #8]
   1a6fc:	add	r2, r8, #6
   1a700:	ldr	r3, [r6, #4]
   1a704:	cmp	r2, r3
   1a708:	bcc	1a6ac <myencoding_convert_to_ascii_utf_8@@Base+0xc4>
   1a70c:	ldr	r3, [sp, #4]
   1a710:	add	r8, r8, r3
   1a714:	mov	r1, r8
   1a718:	ldr	r0, [r6]
   1a71c:	bl	fb84 <mycore_realloc@plt>
   1a720:	cmp	r0, #0
   1a724:	beq	1a68c <myencoding_convert_to_ascii_utf_8@@Base+0xa4>
   1a728:	str	r0, [r6]
   1a72c:	str	r8, [r6, #4]
   1a730:	b	1a6ac <myencoding_convert_to_ascii_utf_8@@Base+0xc4>

0001a734 <myencoding_string_append_chunk@@Base>:
   1a734:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a738:	strd	r6, [sp, #8]
   1a73c:	strd	r8, [sp, #16]
   1a740:	str	sl, [sp, #24]
   1a744:	str	lr, [sp, #28]
   1a748:	mov	r4, r0
   1a74c:	mov	r6, r1
   1a750:	mov	r7, r2
   1a754:	mov	r9, r3
   1a758:	ldr	r0, [sp, #32]
   1a75c:	bl	107c0 <myencoding_get_function_by_id@plt>
   1a760:	cmp	r9, #0
   1a764:	beq	1a7d8 <myencoding_string_append_chunk@@Base+0xa4>
   1a768:	mov	r8, r0
   1a76c:	sub	r5, r7, #1
   1a770:	sub	r9, r9, #1
   1a774:	add	r7, r7, r9
   1a778:	b	1a7ac <myencoding_string_append_chunk@@Base+0x78>
   1a77c:	mov	r0, r4
   1a780:	bl	108f8 <mycore_string_realloc@plt>
   1a784:	ldr	r1, [r4]
   1a788:	ldr	r3, [r4, #8]
   1a78c:	add	r1, r1, r3
   1a790:	ldr	r0, [r6, #12]
   1a794:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a798:	ldr	r1, [r4, #8]
   1a79c:	add	r0, r1, r0
   1a7a0:	str	r0, [r4, #8]
   1a7a4:	cmp	r5, r7
   1a7a8:	beq	1a7d8 <myencoding_string_append_chunk@@Base+0xa4>
   1a7ac:	mov	r1, r6
   1a7b0:	ldrb	r0, [r5, #1]!
   1a7b4:	blx	r8
   1a7b8:	cmp	r0, #0
   1a7bc:	bne	1a7a4 <myencoding_string_append_chunk@@Base+0x70>
   1a7c0:	ldr	r1, [r4, #8]
   1a7c4:	add	r1, r1, #5
   1a7c8:	ldr	r3, [r4, #4]
   1a7cc:	cmp	r1, r3
   1a7d0:	bcc	1a784 <myencoding_string_append_chunk@@Base+0x50>
   1a7d4:	b	1a77c <myencoding_string_append_chunk@@Base+0x48>
   1a7d8:	ldr	r1, [r4, #8]
   1a7dc:	ldr	r3, [r4, #4]
   1a7e0:	cmp	r1, r3
   1a7e4:	bcs	1a810 <myencoding_string_append_chunk@@Base+0xdc>
   1a7e8:	ldr	r2, [r4]
   1a7ec:	ldr	r3, [r4, #8]
   1a7f0:	mov	r1, #0
   1a7f4:	strb	r1, [r2, r3]
   1a7f8:	ldrd	r4, [sp]
   1a7fc:	ldrd	r6, [sp, #8]
   1a800:	ldrd	r8, [sp, #16]
   1a804:	ldr	sl, [sp, #24]
   1a808:	add	sp, sp, #28
   1a80c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a810:	add	r1, r1, #1
   1a814:	mov	r0, r4
   1a818:	bl	108f8 <mycore_string_realloc@plt>
   1a81c:	b	1a7e8 <myencoding_string_append_chunk@@Base+0xb4>

0001a820 <myencoding_string_append@@Base>:
   1a820:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a824:	strd	r6, [sp, #8]
   1a828:	str	r8, [sp, #16]
   1a82c:	str	lr, [sp, #20]
   1a830:	sub	sp, sp, #32
   1a834:	mov	r5, r0
   1a838:	mov	r6, r1
   1a83c:	mov	r7, r2
   1a840:	mov	r8, r3
   1a844:	add	r4, sp, #8
   1a848:	mov	r0, r4
   1a84c:	bl	10160 <myencoding_result_clean@plt>
   1a850:	str	r8, [sp]
   1a854:	mov	r3, r7
   1a858:	mov	r2, r6
   1a85c:	mov	r1, r4
   1a860:	mov	r0, r5
   1a864:	bl	fbc0 <myencoding_string_append_chunk@plt>
   1a868:	add	sp, sp, #32
   1a86c:	ldrd	r4, [sp]
   1a870:	ldrd	r6, [sp, #8]
   1a874:	ldr	r8, [sp, #16]
   1a878:	add	sp, sp, #20
   1a87c:	pop	{pc}		; (ldr pc, [sp], #4)

0001a880 <myencoding_string_append_one@@Base>:
   1a880:	strd	r4, [sp, #-16]!
   1a884:	str	r6, [sp, #8]
   1a888:	str	lr, [sp, #12]
   1a88c:	mov	r4, r0
   1a890:	mov	r5, r1
   1a894:	mov	r6, r2
   1a898:	mov	r0, r3
   1a89c:	bl	107c0 <myencoding_get_function_by_id@plt>
   1a8a0:	mov	r3, r0
   1a8a4:	mov	r1, r5
   1a8a8:	mov	r0, r6
   1a8ac:	blx	r3
   1a8b0:	cmp	r0, #0
   1a8b4:	bne	1a8f8 <myencoding_string_append_one@@Base+0x78>
   1a8b8:	ldr	r1, [r4, #8]
   1a8bc:	add	r1, r1, #5
   1a8c0:	ldr	r3, [r4, #4]
   1a8c4:	cmp	r1, r3
   1a8c8:	bcs	1a908 <myencoding_string_append_one@@Base+0x88>
   1a8cc:	ldr	r1, [r4]
   1a8d0:	ldr	r3, [r4, #8]
   1a8d4:	add	r1, r1, r3
   1a8d8:	ldr	r0, [r5, #12]
   1a8dc:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a8e0:	ldr	r3, [r4, #8]
   1a8e4:	add	r0, r0, r3
   1a8e8:	str	r0, [r4, #8]
   1a8ec:	ldr	r3, [r4]
   1a8f0:	mov	r2, #0
   1a8f4:	strb	r2, [r3, r0]
   1a8f8:	ldrd	r4, [sp]
   1a8fc:	ldr	r6, [sp, #8]
   1a900:	add	sp, sp, #12
   1a904:	pop	{pc}		; (ldr pc, [sp], #4)
   1a908:	mov	r0, r4
   1a90c:	bl	108f8 <mycore_string_realloc@plt>
   1a910:	b	1a8cc <myencoding_string_append_one@@Base+0x4c>

0001a914 <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1a914:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a918:	strd	r6, [sp, #8]
   1a91c:	strd	r8, [sp, #16]
   1a920:	str	sl, [sp, #24]
   1a924:	str	lr, [sp, #28]
   1a928:	mov	r5, r0
   1a92c:	mov	r6, r1
   1a930:	mov	r7, r2
   1a934:	mov	r9, r3
   1a938:	ldr	r0, [sp, #32]
   1a93c:	bl	107c0 <myencoding_get_function_by_id@plt>
   1a940:	cmp	r9, #0
   1a944:	beq	1a9ec <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd8>
   1a948:	mov	r8, r0
   1a94c:	sub	r4, r7, #1
   1a950:	sub	r9, r9, #1
   1a954:	add	r7, r7, r9
   1a958:	ldr	r9, [pc, #212]	; 1aa34 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x120>
   1a95c:	add	r9, pc, r9
   1a960:	b	1a988 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x74>
   1a964:	add	r1, r1, #6
   1a968:	mov	r0, r5
   1a96c:	bl	108f8 <mycore_string_realloc@plt>
   1a970:	b	1a9b8 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xa4>
   1a974:	ldr	r1, [r5, #8]
   1a978:	add	r1, r1, r0
   1a97c:	str	r1, [r5, #8]
   1a980:	cmp	r4, r7
   1a984:	beq	1a9ec <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd8>
   1a988:	add	r4, r4, #1
   1a98c:	mov	sl, r4
   1a990:	mov	r1, r6
   1a994:	ldrb	r0, [r4]
   1a998:	blx	r8
   1a99c:	cmp	r0, #0
   1a9a0:	bne	1a980 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x6c>
   1a9a4:	ldr	r1, [r5, #8]
   1a9a8:	add	r2, r1, #5
   1a9ac:	ldr	r3, [r5, #4]
   1a9b0:	cmp	r2, r3
   1a9b4:	bcs	1a964 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x50>
   1a9b8:	ldr	r1, [r5]
   1a9bc:	ldr	r3, [r5, #8]
   1a9c0:	add	r1, r1, r3
   1a9c4:	ldr	r0, [r6, #12]
   1a9c8:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a9cc:	cmp	r0, #1
   1a9d0:	bne	1a974 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x60>
   1a9d4:	ldr	r2, [r5]
   1a9d8:	ldr	r3, [r5, #8]
   1a9dc:	ldrb	r1, [sl]
   1a9e0:	ldrb	r1, [r9, r1]
   1a9e4:	strb	r1, [r2, r3]
   1a9e8:	b	1a974 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x60>
   1a9ec:	ldr	r1, [r5, #8]
   1a9f0:	ldr	r3, [r5, #4]
   1a9f4:	cmp	r1, r3
   1a9f8:	bcs	1aa24 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x110>
   1a9fc:	ldr	r2, [r5]
   1aa00:	ldr	r3, [r5, #8]
   1aa04:	mov	r1, #0
   1aa08:	strb	r1, [r2, r3]
   1aa0c:	ldrd	r4, [sp]
   1aa10:	ldrd	r6, [sp, #8]
   1aa14:	ldrd	r8, [sp, #16]
   1aa18:	ldr	sl, [sp, #24]
   1aa1c:	add	sp, sp, #28
   1aa20:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa24:	add	r1, r1, #1
   1aa28:	mov	r0, r5
   1aa2c:	bl	108f8 <mycore_string_realloc@plt>
   1aa30:	b	1a9fc <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe8>
   1aa34:	andeq	ip, r7, r4, ror #21

0001aa38 <myencoding_string_append_lowercase_ascii@@Base>:
   1aa38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1aa3c:	strd	r6, [sp, #8]
   1aa40:	str	r8, [sp, #16]
   1aa44:	str	lr, [sp, #20]
   1aa48:	sub	sp, sp, #32
   1aa4c:	mov	r5, r0
   1aa50:	mov	r6, r1
   1aa54:	mov	r7, r2
   1aa58:	mov	r8, r3
   1aa5c:	add	r4, sp, #8
   1aa60:	mov	r0, r4
   1aa64:	bl	10160 <myencoding_result_clean@plt>
   1aa68:	str	r8, [sp]
   1aa6c:	mov	r3, r7
   1aa70:	mov	r2, r6
   1aa74:	mov	r1, r4
   1aa78:	mov	r0, r5
   1aa7c:	bl	10c1c <myencoding_string_append_chunk_lowercase_ascii@plt>
   1aa80:	add	sp, sp, #32
   1aa84:	ldrd	r4, [sp]
   1aa88:	ldrd	r6, [sp, #8]
   1aa8c:	ldr	r8, [sp, #16]
   1aa90:	add	sp, sp, #20
   1aa94:	pop	{pc}		; (ldr pc, [sp], #4)

0001aa98 <myhtml_callback_before_token_done@@Base>:
   1aa98:	ldr	r0, [r0, #220]	; 0xdc
   1aa9c:	bx	lr

0001aaa0 <myhtml_callback_after_token_done@@Base>:
   1aaa0:	ldr	r0, [r0, #224]	; 0xe0
   1aaa4:	bx	lr

0001aaa8 <myhtml_callback_before_token_done_set@@Base>:
   1aaa8:	str	r1, [r0, #220]	; 0xdc
   1aaac:	str	r2, [r0, #228]	; 0xe4
   1aab0:	bx	lr

0001aab4 <myhtml_callback_after_token_done_set@@Base>:
   1aab4:	str	r1, [r0, #224]	; 0xe0
   1aab8:	str	r2, [r0, #232]	; 0xe8
   1aabc:	bx	lr

0001aac0 <myhtml_callback_tree_node_insert@@Base>:
   1aac0:	ldr	r0, [r0, #236]	; 0xec
   1aac4:	bx	lr

0001aac8 <myhtml_callback_tree_node_remove@@Base>:
   1aac8:	ldr	r0, [r0, #240]	; 0xf0
   1aacc:	bx	lr

0001aad0 <myhtml_callback_tree_node_insert_set@@Base>:
   1aad0:	str	r1, [r0, #236]	; 0xec
   1aad4:	str	r2, [r0, #244]	; 0xf4
   1aad8:	bx	lr

0001aadc <myhtml_callback_tree_node_remove_set@@Base>:
   1aadc:	str	r1, [r0, #240]	; 0xf0
   1aae0:	str	r2, [r0, #248]	; 0xf8
   1aae4:	bx	lr

0001aae8 <myhtml_charef_find@@Base>:
   1aae8:	strd	r4, [sp, #-20]!	; 0xffffffec
   1aaec:	strd	r6, [sp, #8]
   1aaf0:	str	lr, [sp, #16]
   1aaf4:	ldrb	ip, [r0]
   1aaf8:	ldr	r6, [pc, #212]	; 1abd4 <myhtml_charef_find@@Base+0xec>
   1aafc:	add	r6, pc, r6
   1ab00:	ldr	r7, [pc, #208]	; 1abd8 <myhtml_charef_find@@Base+0xf0>
   1ab04:	add	r7, pc, r7
   1ab08:	b	1ab6c <myhtml_charef_find@@Base+0x84>
   1ab0c:	add	r4, r4, #1
   1ab10:	str	r4, [r1]
   1ab14:	add	lr, ip, ip, lsl #1
   1ab18:	add	lr, r7, lr, lsl #3
   1ab1c:	ldr	lr, [lr, #4]
   1ab20:	cmp	lr, #0
   1ab24:	cmpne	r4, r2
   1ab28:	bcs	1ab34 <myhtml_charef_find@@Base+0x4c>
   1ab2c:	mov	ip, lr
   1ab30:	b	1ab6c <myhtml_charef_find@@Base+0x84>
   1ab34:	cmp	r3, #0
   1ab38:	beq	1ab54 <myhtml_charef_find@@Base+0x6c>
   1ab3c:	add	r2, ip, ip, lsl #1
   1ab40:	ldr	r1, [pc, #148]	; 1abdc <myhtml_charef_find@@Base+0xf4>
   1ab44:	add	r1, pc, r1
   1ab48:	add	r2, r1, r2, lsl #3
   1ab4c:	ldr	r2, [r2, #20]
   1ab50:	str	r2, [r3]
   1ab54:	add	ip, ip, ip, lsl #1
   1ab58:	ldr	r0, [pc, #128]	; 1abe0 <myhtml_charef_find@@Base+0xf8>
   1ab5c:	add	r0, pc, r0
   1ab60:	add	r0, r0, ip, lsl #3
   1ab64:	b	1abc4 <myhtml_charef_find@@Base+0xdc>
   1ab68:	add	ip, ip, #1
   1ab6c:	add	lr, ip, ip, lsl #1
   1ab70:	ldrb	lr, [r6, lr, lsl #3]
   1ab74:	cmp	lr, #0
   1ab78:	beq	1ab94 <myhtml_charef_find@@Base+0xac>
   1ab7c:	ldr	r4, [r1]
   1ab80:	ldrb	r5, [r0, r4]
   1ab84:	cmp	r5, lr
   1ab88:	beq	1ab0c <myhtml_charef_find@@Base+0x24>
   1ab8c:	cmp	r5, lr
   1ab90:	bhi	1ab68 <myhtml_charef_find@@Base+0x80>
   1ab94:	cmp	r3, #0
   1ab98:	beq	1abb4 <myhtml_charef_find@@Base+0xcc>
   1ab9c:	add	r2, ip, ip, lsl #1
   1aba0:	ldr	r1, [pc, #60]	; 1abe4 <myhtml_charef_find@@Base+0xfc>
   1aba4:	add	r1, pc, r1
   1aba8:	add	r2, r1, r2, lsl #3
   1abac:	ldr	r2, [r2, #20]
   1abb0:	str	r2, [r3]
   1abb4:	add	ip, ip, ip, lsl #1
   1abb8:	ldr	r0, [pc, #40]	; 1abe8 <myhtml_charef_find@@Base+0x100>
   1abbc:	add	r0, pc, r0
   1abc0:	add	r0, r0, ip, lsl #3
   1abc4:	ldrd	r4, [sp]
   1abc8:	ldrd	r6, [sp, #8]
   1abcc:	add	sp, sp, #16
   1abd0:	pop	{pc}		; (ldr pc, [sp], #4)
   1abd4:	andeq	ip, r7, r4, asr #20
   1abd8:	andeq	ip, r7, ip, lsr sl
   1abdc:	strdeq	ip, [r7], -ip	; <UNPREDICTABLE>
   1abe0:	andeq	ip, r7, r4, ror #19
   1abe4:	muleq	r7, ip, r9
   1abe8:	andeq	ip, r7, r4, lsl #19

0001abec <myhtml_charef_get_first_position@@Base>:
   1abec:	add	r0, r0, r0, lsl #1
   1abf0:	ldr	r3, [pc, #8]	; 1ac00 <myhtml_charef_get_first_position@@Base+0x14>
   1abf4:	add	r3, pc, r3
   1abf8:	add	r0, r3, r0, lsl #3
   1abfc:	bx	lr
   1ac00:	andeq	ip, r7, ip, asr #18

0001ac04 <myhtml_charef_find_by_pos@@Base>:
   1ac04:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1ac08:	strd	r6, [sp, #8]
   1ac0c:	strd	r8, [sp, #16]
   1ac10:	str	lr, [sp, #24]
   1ac14:	ldr	r6, [sp, #28]
   1ac18:	ldr	ip, [r2]
   1ac1c:	ldrb	ip, [r1, ip]
   1ac20:	cmp	ip, #38	; 0x26
   1ac24:	beq	1ac54 <myhtml_charef_find_by_pos@@Base+0x50>
   1ac28:	mov	ip, #0
   1ac2c:	str	ip, [r6, #12]
   1ac30:	ldr	r5, [pc, #504]	; 1ae30 <myhtml_charef_find_by_pos@@Base+0x22c>
   1ac34:	add	r5, pc, r5
   1ac38:	ldr	r7, [pc, #500]	; 1ae34 <myhtml_charef_find_by_pos@@Base+0x230>
   1ac3c:	add	r7, pc, r7
   1ac40:	ldr	r8, [pc, #496]	; 1ae38 <myhtml_charef_find_by_pos@@Base+0x234>
   1ac44:	add	r8, pc, r8
   1ac48:	ldr	r9, [pc, #492]	; 1ae3c <myhtml_charef_find_by_pos@@Base+0x238>
   1ac4c:	add	r9, pc, r9
   1ac50:	b	1adac <myhtml_charef_find_by_pos@@Base+0x1a8>
   1ac54:	mov	r3, #1
   1ac58:	str	r3, [r6, #12]
   1ac5c:	ldr	r3, [r6]
   1ac60:	ldr	r1, [r3, #20]
   1ac64:	cmp	r1, #0
   1ac68:	bne	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ac6c:	ldr	r3, [r6, #4]
   1ac70:	cmp	r3, #0
   1ac74:	beq	1ae0c <myhtml_charef_find_by_pos@@Base+0x208>
   1ac78:	ldr	r3, [r6, #8]
   1ac7c:	str	r3, [r2]
   1ac80:	ldr	r3, [r6, #4]
   1ac84:	b	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ac88:	cmp	lr, #59	; 0x3b
   1ac8c:	beq	1acf0 <myhtml_charef_find_by_pos@@Base+0xec>
   1ac90:	add	r4, r4, #1
   1ac94:	str	r4, [r2]
   1ac98:	add	ip, r0, r0, lsl #1
   1ac9c:	add	ip, r7, ip, lsl #3
   1aca0:	ldr	lr, [ip, #4]
   1aca4:	cmp	lr, #0
   1aca8:	beq	1ad10 <myhtml_charef_find_by_pos@@Base+0x10c>
   1acac:	cmp	r4, r3
   1acb0:	bcs	1ad2c <myhtml_charef_find_by_pos@@Base+0x128>
   1acb4:	ldrb	ip, [r1, r4]
   1acb8:	cmp	ip, #38	; 0x26
   1acbc:	beq	1ad60 <myhtml_charef_find_by_pos@@Base+0x15c>
   1acc0:	add	ip, r0, r0, lsl #1
   1acc4:	add	ip, r8, ip, lsl #3
   1acc8:	ldr	ip, [ip, #20]
   1accc:	cmp	ip, #0
   1acd0:	moveq	r0, lr
   1acd4:	beq	1adac <myhtml_charef_find_by_pos@@Base+0x1a8>
   1acd8:	str	r4, [r6, #8]
   1acdc:	add	r0, r0, r0, lsl #1
   1ace0:	add	r0, r9, r0, lsl #3
   1ace4:	str	r0, [r6, #4]
   1ace8:	mov	r0, lr
   1acec:	b	1adac <myhtml_charef_find_by_pos@@Base+0x1a8>
   1acf0:	mov	r3, #1
   1acf4:	str	r3, [r6, #12]
   1acf8:	add	r0, r0, r0, lsl r3
   1acfc:	ldr	r3, [pc, #316]	; 1ae40 <myhtml_charef_find_by_pos@@Base+0x23c>
   1ad00:	add	r3, pc, r3
   1ad04:	add	r3, r3, r0, lsl #3
   1ad08:	str	r3, [r6]
   1ad0c:	b	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ad10:	mov	r3, #1
   1ad14:	str	r3, [r6, #12]
   1ad18:	add	r0, r0, r0, lsl r3
   1ad1c:	ldr	r3, [pc, #288]	; 1ae44 <myhtml_charef_find_by_pos@@Base+0x240>
   1ad20:	add	r3, pc, r3
   1ad24:	add	r3, r3, r0, lsl #3
   1ad28:	b	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ad2c:	lsl	ip, r0, #1
   1ad30:	add	r3, ip, r0
   1ad34:	ldr	r1, [pc, #268]	; 1ae48 <myhtml_charef_find_by_pos@@Base+0x244>
   1ad38:	add	r1, pc, r1
   1ad3c:	add	r3, r1, r3, lsl #3
   1ad40:	str	r3, [r6]
   1ad44:	ldr	r1, [r3, #20]
   1ad48:	cmp	r1, #0
   1ad4c:	beq	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ad50:	ldr	r2, [r2]
   1ad54:	str	r2, [r6, #8]
   1ad58:	str	r3, [r6, #4]
   1ad5c:	b	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ad60:	mov	r3, #1
   1ad64:	str	r3, [r6, #12]
   1ad68:	lsl	ip, r0, r3
   1ad6c:	add	r3, ip, r0
   1ad70:	ldr	r1, [pc, #212]	; 1ae4c <myhtml_charef_find_by_pos@@Base+0x248>
   1ad74:	add	r1, pc, r1
   1ad78:	add	r3, r1, r3, lsl #3
   1ad7c:	str	r3, [r6]
   1ad80:	ldr	r1, [r3, #20]
   1ad84:	cmp	r1, #0
   1ad88:	bne	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ad8c:	ldr	r3, [r6, #4]
   1ad90:	cmp	r3, #0
   1ad94:	beq	1ae18 <myhtml_charef_find_by_pos@@Base+0x214>
   1ad98:	ldr	r3, [r6, #8]
   1ad9c:	str	r3, [r2]
   1ada0:	ldr	r3, [r6, #4]
   1ada4:	b	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ada8:	add	r0, r0, #1
   1adac:	add	ip, r0, r0, lsl #1
   1adb0:	ldrb	ip, [r5, ip, lsl #3]
   1adb4:	cmp	ip, #0
   1adb8:	beq	1add4 <myhtml_charef_find_by_pos@@Base+0x1d0>
   1adbc:	ldr	r4, [r2]
   1adc0:	ldrb	lr, [r1, r4]
   1adc4:	cmp	lr, ip
   1adc8:	beq	1ac88 <myhtml_charef_find_by_pos@@Base+0x84>
   1adcc:	cmp	lr, ip
   1add0:	bhi	1ada8 <myhtml_charef_find_by_pos@@Base+0x1a4>
   1add4:	mov	r3, #1
   1add8:	str	r3, [r6, #12]
   1addc:	ldr	r3, [r6, #4]
   1ade0:	cmp	r3, #0
   1ade4:	beq	1ae24 <myhtml_charef_find_by_pos@@Base+0x220>
   1ade8:	ldr	r3, [r6, #8]
   1adec:	str	r3, [r2]
   1adf0:	ldr	r3, [r6, #4]
   1adf4:	mov	r0, r3
   1adf8:	ldrd	r4, [sp]
   1adfc:	ldrd	r6, [sp, #8]
   1ae00:	ldrd	r8, [sp, #16]
   1ae04:	add	sp, sp, #24
   1ae08:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae0c:	ldr	r3, [pc, #60]	; 1ae50 <myhtml_charef_find_by_pos@@Base+0x24c>
   1ae10:	add	r3, pc, r3
   1ae14:	b	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ae18:	ldr	r3, [pc, #52]	; 1ae54 <myhtml_charef_find_by_pos@@Base+0x250>
   1ae1c:	add	r3, pc, r3
   1ae20:	b	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ae24:	ldr	r3, [pc, #44]	; 1ae58 <myhtml_charef_find_by_pos@@Base+0x254>
   1ae28:	add	r3, pc, r3
   1ae2c:	b	1adf4 <myhtml_charef_find_by_pos@@Base+0x1f0>
   1ae30:	andeq	ip, r7, ip, lsl #18
   1ae34:	andeq	ip, r7, r4, lsl #18
   1ae38:	strdeq	ip, [r7], -ip	; <UNPREDICTABLE>
   1ae3c:	strdeq	ip, [r7], -r4
   1ae40:	andeq	ip, r7, r0, asr #16
   1ae44:	andeq	ip, r7, r0, lsr #16
   1ae48:	andeq	ip, r7, r8, lsl #16
   1ae4c:	andeq	ip, r7, ip, asr #15
   1ae50:	andeq	ip, r7, r0, lsr r7
   1ae54:	andeq	ip, r7, r4, lsr #14
   1ae58:	andeq	ip, r7, r8, lsl r7

0001ae5c <myhtml_data_process_state_ampersand_data@@Base>:
   1ae5c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1ae60:	strd	r6, [sp, #8]
   1ae64:	strd	r8, [sp, #16]
   1ae68:	str	lr, [sp, #24]
   1ae6c:	sub	sp, sp, #20
   1ae70:	mov	r4, r0
   1ae74:	mov	r5, r1
   1ae78:	mov	r7, r2
   1ae7c:	str	r3, [sp, #12]
   1ae80:	ldr	r9, [pc, #640]	; 1b108 <myhtml_data_process_state_ampersand_data@@Base+0x2ac>
   1ae84:	add	r9, pc, r9
   1ae88:	mov	r6, r3
   1ae8c:	mov	r3, r0
   1ae90:	ldr	r2, [r3, #44]!	; 0x2c
   1ae94:	ldr	r0, [r2, #4]
   1ae98:	str	r3, [sp]
   1ae9c:	ldr	r3, [sp, #48]	; 0x30
   1aea0:	add	r2, sp, #12
   1aea4:	mov	r1, r7
   1aea8:	bl	10754 <myhtml_charef_find_by_pos@plt>
   1aeac:	ldr	r3, [r4, #56]	; 0x38
   1aeb0:	cmp	r3, #0
   1aeb4:	beq	1b090 <myhtml_data_process_state_ampersand_data@@Base+0x234>
   1aeb8:	mov	r8, r0
   1aebc:	ldr	r3, [pc, #584]	; 1b10c <myhtml_data_process_state_ampersand_data@@Base+0x2b0>
   1aec0:	ldr	r3, [r9, r3]
   1aec4:	str	r3, [r4]
   1aec8:	ldr	r2, [sp, #12]
   1aecc:	ldrb	r3, [r7, r2]
   1aed0:	cmp	r3, #59	; 0x3b
   1aed4:	addeq	r2, r2, #1
   1aed8:	streq	r2, [sp, #12]
   1aedc:	beq	1af80 <myhtml_data_process_state_ampersand_data@@Base+0x124>
   1aee0:	ldrb	r1, [r4, #60]	; 0x3c
   1aee4:	cmp	r1, #0
   1aee8:	beq	1af80 <myhtml_data_process_state_ampersand_data@@Base+0x124>
   1aeec:	cmp	r3, #61	; 0x3d
   1aef0:	beq	1af08 <myhtml_data_process_state_ampersand_data@@Base+0xac>
   1aef4:	ldr	r1, [pc, #532]	; 1b110 <myhtml_data_process_state_ampersand_data@@Base+0x2b4>
   1aef8:	add	r1, pc, r1
   1aefc:	ldr	r3, [r1, r3, lsl #2]
   1af00:	cmp	r3, #255	; 0xff
   1af04:	beq	1af80 <myhtml_data_process_state_ampersand_data@@Base+0x124>
   1af08:	ldr	r3, [r4, #32]
   1af0c:	sub	r2, r2, r6
   1af10:	add	r1, r7, r6
   1af14:	mov	r0, r5
   1af18:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1af1c:	add	r0, r6, r0
   1af20:	ldr	r2, [sp, #12]
   1af24:	cmp	r2, r0
   1af28:	beq	1af50 <myhtml_data_process_state_ampersand_data@@Base+0xf4>
   1af2c:	ldr	r3, [r4, #4]
   1af30:	cmp	r3, #0
   1af34:	bne	1af58 <myhtml_data_process_state_ampersand_data@@Base+0xfc>
   1af38:	ldrb	r3, [r4, #61]	; 0x3d
   1af3c:	sub	r2, r2, r0
   1af40:	add	r1, r7, r0
   1af44:	mov	r0, r5
   1af48:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1af4c:	str	r0, [r4, #32]
   1af50:	ldr	r0, [sp, #12]
   1af54:	b	1aff4 <myhtml_data_process_state_ampersand_data@@Base+0x198>
   1af58:	ldrb	r1, [r4, #61]	; 0x3d
   1af5c:	str	r1, [sp, #4]
   1af60:	str	r3, [sp]
   1af64:	sub	r3, r2, r0
   1af68:	add	r2, r7, r0
   1af6c:	add	r1, r4, #8
   1af70:	mov	r0, r5
   1af74:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1af78:	str	r0, [r4, #32]
   1af7c:	b	1af50 <myhtml_data_process_state_ampersand_data@@Base+0xf4>
   1af80:	ldr	r3, [r8, #20]
   1af84:	cmp	r3, #0
   1af88:	beq	1b018 <myhtml_data_process_state_ampersand_data@@Base+0x1bc>
   1af8c:	add	r7, r8, #12
   1af90:	mov	r6, #0
   1af94:	ldr	r1, [r5, #8]
   1af98:	add	r1, r1, #5
   1af9c:	ldr	r3, [r5, #4]
   1afa0:	cmp	r1, r3
   1afa4:	bcs	1b00c <myhtml_data_process_state_ampersand_data@@Base+0x1b0>
   1afa8:	ldr	r1, [r5]
   1afac:	ldr	r3, [r4, #36]	; 0x24
   1afb0:	add	r1, r1, r3
   1afb4:	ldr	r0, [r7], #4
   1afb8:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1afbc:	ldr	r3, [r4, #36]	; 0x24
   1afc0:	add	r0, r0, r3
   1afc4:	str	r0, [r4, #36]	; 0x24
   1afc8:	add	r6, r6, #1
   1afcc:	ldr	r3, [r8, #20]
   1afd0:	cmp	r3, r6
   1afd4:	bhi	1af94 <myhtml_data_process_state_ampersand_data@@Base+0x138>
   1afd8:	str	r0, [r5, #8]
   1afdc:	ldr	r3, [r5]
   1afe0:	mov	r2, #0
   1afe4:	strb	r2, [r3, r0]
   1afe8:	mov	r3, #0
   1afec:	str	r3, [r4, #48]	; 0x30
   1aff0:	ldr	r0, [sp, #12]
   1aff4:	add	sp, sp, #20
   1aff8:	ldrd	r4, [sp]
   1affc:	ldrd	r6, [sp, #8]
   1b000:	ldrd	r8, [sp, #16]
   1b004:	add	sp, sp, #24
   1b008:	pop	{pc}		; (ldr pc, [sp], #4)
   1b00c:	mov	r0, r5
   1b010:	bl	108f8 <mycore_string_realloc@plt>
   1b014:	b	1afa8 <myhtml_data_process_state_ampersand_data@@Base+0x14c>
   1b018:	ldr	r3, [r4, #32]
   1b01c:	ldr	r2, [sp, #12]
   1b020:	sub	r2, r2, r6
   1b024:	add	r1, r7, r6
   1b028:	mov	r0, r5
   1b02c:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b030:	add	r0, r6, r0
   1b034:	ldr	r2, [sp, #12]
   1b038:	cmp	r2, r0
   1b03c:	beq	1afe8 <myhtml_data_process_state_ampersand_data@@Base+0x18c>
   1b040:	ldr	r3, [r4, #4]
   1b044:	cmp	r3, #0
   1b048:	bne	1b068 <myhtml_data_process_state_ampersand_data@@Base+0x20c>
   1b04c:	ldrb	r3, [r4, #61]	; 0x3d
   1b050:	sub	r2, r2, r0
   1b054:	add	r1, r7, r0
   1b058:	mov	r0, r5
   1b05c:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b060:	str	r0, [r4, #32]
   1b064:	b	1afe8 <myhtml_data_process_state_ampersand_data@@Base+0x18c>
   1b068:	ldrb	r1, [r4, #61]	; 0x3d
   1b06c:	str	r1, [sp, #4]
   1b070:	str	r3, [sp]
   1b074:	sub	r3, r2, r0
   1b078:	add	r2, r7, r0
   1b07c:	add	r1, r4, #8
   1b080:	mov	r0, r5
   1b084:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b088:	str	r0, [r4, #32]
   1b08c:	b	1afe8 <myhtml_data_process_state_ampersand_data@@Base+0x18c>
   1b090:	ldr	r3, [r4, #32]
   1b094:	ldr	r2, [sp, #12]
   1b098:	sub	r2, r2, r6
   1b09c:	add	r1, r7, r6
   1b0a0:	mov	r0, r5
   1b0a4:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b0a8:	add	r0, r6, r0
   1b0ac:	ldr	r2, [sp, #12]
   1b0b0:	cmp	r2, r0
   1b0b4:	beq	1aff0 <myhtml_data_process_state_ampersand_data@@Base+0x194>
   1b0b8:	ldr	r3, [r4, #4]
   1b0bc:	cmp	r3, #0
   1b0c0:	bne	1b0e0 <myhtml_data_process_state_ampersand_data@@Base+0x284>
   1b0c4:	ldrb	r3, [r4, #61]	; 0x3d
   1b0c8:	sub	r2, r2, r0
   1b0cc:	add	r1, r7, r0
   1b0d0:	mov	r0, r5
   1b0d4:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b0d8:	str	r0, [r4, #32]
   1b0dc:	b	1aff0 <myhtml_data_process_state_ampersand_data@@Base+0x194>
   1b0e0:	ldrb	r1, [r4, #61]	; 0x3d
   1b0e4:	str	r1, [sp, #4]
   1b0e8:	str	r3, [sp]
   1b0ec:	sub	r3, r2, r0
   1b0f0:	add	r2, r7, r0
   1b0f4:	add	r1, r4, #8
   1b0f8:	mov	r0, r5
   1b0fc:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b100:	str	r0, [r4, #32]
   1b104:	b	1aff0 <myhtml_data_process_state_ampersand_data@@Base+0x194>
   1b108:	andeq	pc, pc, r4, ror r1	; <UNPREDICTABLE>
   1b10c:	andeq	r0, r0, ip, lsr #19
   1b110:			; <UNDEFINED> instruction: 0x000e49b8

0001b114 <myhtml_data_process_entry_clean@@Base>:
   1b114:	strd	r4, [sp, #-16]!
   1b118:	str	r6, [sp, #8]
   1b11c:	str	lr, [sp, #12]
   1b120:	mov	r4, r0
   1b124:	ldr	r5, [pc, #44]	; 1b158 <myhtml_data_process_entry_clean@@Base+0x44>
   1b128:	add	r5, pc, r5
   1b12c:	mov	r2, #60	; 0x3c
   1b130:	mov	r1, #0
   1b134:	add	r0, r0, #4
   1b138:	bl	10844 <memset@plt>
   1b13c:	ldr	r3, [pc, #24]	; 1b15c <myhtml_data_process_entry_clean@@Base+0x48>
   1b140:	ldr	r3, [r5, r3]
   1b144:	str	r3, [r4]
   1b148:	ldrd	r4, [sp]
   1b14c:	ldr	r6, [sp, #8]
   1b150:	add	sp, sp, #12
   1b154:	pop	{pc}		; (ldr pc, [sp], #4)
   1b158:	ldrdeq	lr, [pc], -r0
   1b15c:	andeq	r0, r0, ip, lsr #19

0001b160 <myhtml_data_process_string_append_char@@Base>:
   1b160:	strd	r4, [sp, #-16]!
   1b164:	str	r6, [sp, #8]
   1b168:	str	lr, [sp, #12]
   1b16c:	mov	r4, r0
   1b170:	mov	r5, r1
   1b174:	ldr	r1, [r0, #8]
   1b178:	add	r1, r1, #2
   1b17c:	ldr	r3, [r0, #4]
   1b180:	cmp	r1, r3
   1b184:	bcs	1b1bc <myhtml_data_process_string_append_char@@Base+0x5c>
   1b188:	ldr	r2, [r4]
   1b18c:	ldr	r3, [r4, #8]
   1b190:	strb	r5, [r2, r3]
   1b194:	ldr	r3, [r4, #8]
   1b198:	add	r3, r3, #1
   1b19c:	str	r3, [r4, #8]
   1b1a0:	ldr	r2, [r4]
   1b1a4:	mov	r1, #0
   1b1a8:	strb	r1, [r2, r3]
   1b1ac:	ldrd	r4, [sp]
   1b1b0:	ldr	r6, [sp, #8]
   1b1b4:	add	sp, sp, #12
   1b1b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1bc:	bl	108f8 <mycore_string_realloc@plt>
   1b1c0:	b	1b188 <myhtml_data_process_string_append_char@@Base+0x28>

0001b1c4 <myhtml_data_process_state_data@@Base>:
   1b1c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b1c8:	strd	r6, [sp, #8]
   1b1cc:	strd	r8, [sp, #16]
   1b1d0:	str	sl, [sp, #24]
   1b1d4:	str	lr, [sp, #28]
   1b1d8:	sub	sp, sp, #8
   1b1dc:	mov	r6, r0
   1b1e0:	mov	r8, r1
   1b1e4:	mov	r7, r2
   1b1e8:	mov	r5, r3
   1b1ec:	ldr	r0, [sp, #40]	; 0x28
   1b1f0:	ldr	r9, [pc, #380]	; 1b374 <myhtml_data_process_state_data@@Base+0x1b0>
   1b1f4:	add	r9, pc, r9
   1b1f8:	cmp	r3, r0
   1b1fc:	bcs	1b300 <myhtml_data_process_state_data@@Base+0x13c>
   1b200:	add	r1, r2, r3
   1b204:	ldrb	r3, [r2, r3]
   1b208:	cmp	r3, #38	; 0x26
   1b20c:	addne	r3, r5, #1
   1b210:	addne	r3, r2, r3
   1b214:	movne	r4, r5
   1b218:	beq	1b2c0 <myhtml_data_process_state_data@@Base+0xfc>
   1b21c:	add	r4, r4, #1
   1b220:	cmp	r0, r4
   1b224:	beq	1b304 <myhtml_data_process_state_data@@Base+0x140>
   1b228:	mov	sl, r3
   1b22c:	add	r3, r3, #1
   1b230:	ldrb	r2, [sl]
   1b234:	cmp	r2, #38	; 0x26
   1b238:	bne	1b21c <myhtml_data_process_state_data@@Base+0x58>
   1b23c:	ldr	r3, [r6, #32]
   1b240:	sub	r2, r4, r5
   1b244:	mov	r0, r8
   1b248:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b24c:	add	r0, r5, r0
   1b250:	cmp	r0, r4
   1b254:	beq	1b27c <myhtml_data_process_state_data@@Base+0xb8>
   1b258:	ldr	r3, [r6, #4]
   1b25c:	cmp	r3, #0
   1b260:	bne	1b2cc <myhtml_data_process_state_data@@Base+0x108>
   1b264:	ldrb	r3, [r6, #61]	; 0x3d
   1b268:	sub	r2, r4, r0
   1b26c:	add	r1, r7, r0
   1b270:	mov	r0, r8
   1b274:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b278:	str	r0, [r6, #32]
   1b27c:	ldr	r3, [r8, #8]
   1b280:	str	r3, [r6, #36]	; 0x24
   1b284:	ldr	r3, [pc, #236]	; 1b378 <myhtml_data_process_state_data@@Base+0x1b4>
   1b288:	ldr	r3, [r9, r3]
   1b28c:	str	r3, [r6]
   1b290:	ldrb	r1, [sl]
   1b294:	mov	r0, r8
   1b298:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1b29c:	add	r4, r4, #1
   1b2a0:	mov	r0, r4
   1b2a4:	add	sp, sp, #8
   1b2a8:	ldrd	r4, [sp]
   1b2ac:	ldrd	r6, [sp, #8]
   1b2b0:	ldrd	r8, [sp, #16]
   1b2b4:	ldr	sl, [sp, #24]
   1b2b8:	add	sp, sp, #28
   1b2bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2c0:	mov	r4, r5
   1b2c4:	mov	sl, r1
   1b2c8:	b	1b23c <myhtml_data_process_state_data@@Base+0x78>
   1b2cc:	add	r5, r6, #8
   1b2d0:	ldrb	r2, [r6, #61]	; 0x3d
   1b2d4:	str	r2, [sp, #4]
   1b2d8:	str	r3, [sp]
   1b2dc:	sub	r3, r4, r0
   1b2e0:	add	r2, r7, r0
   1b2e4:	mov	r1, r5
   1b2e8:	mov	r0, r8
   1b2ec:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b2f0:	str	r0, [r6, #32]
   1b2f4:	mov	r0, r5
   1b2f8:	bl	10160 <myencoding_result_clean@plt>
   1b2fc:	b	1b27c <myhtml_data_process_state_data@@Base+0xb8>
   1b300:	mov	r4, r3
   1b304:	ldr	r3, [r6, #32]
   1b308:	sub	r2, r4, r5
   1b30c:	add	r1, r7, r5
   1b310:	mov	r0, r8
   1b314:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b318:	add	r0, r5, r0
   1b31c:	cmp	r0, r4
   1b320:	beq	1b2a0 <myhtml_data_process_state_data@@Base+0xdc>
   1b324:	ldr	r3, [r6, #4]
   1b328:	cmp	r3, #0
   1b32c:	bne	1b34c <myhtml_data_process_state_data@@Base+0x188>
   1b330:	ldrb	r3, [r6, #61]	; 0x3d
   1b334:	sub	r2, r4, r0
   1b338:	add	r1, r7, r0
   1b33c:	mov	r0, r8
   1b340:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b344:	str	r0, [r6, #32]
   1b348:	b	1b2a0 <myhtml_data_process_state_data@@Base+0xdc>
   1b34c:	ldrb	r2, [r6, #61]	; 0x3d
   1b350:	str	r2, [sp, #4]
   1b354:	str	r3, [sp]
   1b358:	sub	r3, r4, r0
   1b35c:	add	r2, r7, r0
   1b360:	add	r1, r6, #8
   1b364:	mov	r0, r8
   1b368:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b36c:	str	r0, [r6, #32]
   1b370:	b	1b2a0 <myhtml_data_process_state_data@@Base+0xdc>
   1b374:	andeq	lr, pc, r4, lsl #28
   1b378:	andeq	r0, r0, r0, ror r9

0001b37c <myhtml_data_process_state_ampersand@@Base>:
   1b37c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b380:	strd	r6, [sp, #8]
   1b384:	str	r8, [sp, #16]
   1b388:	str	lr, [sp, #20]
   1b38c:	mov	r5, r0
   1b390:	mov	r8, r1
   1b394:	mov	r6, r2
   1b398:	mov	r4, r3
   1b39c:	ldr	r7, [pc, #224]	; 1b484 <myhtml_data_process_state_ampersand@@Base+0x108>
   1b3a0:	add	r7, pc, r7
   1b3a4:	ldrb	r3, [r2, r3]
   1b3a8:	cmp	r3, #35	; 0x23
   1b3ac:	beq	1b3f4 <myhtml_data_process_state_ampersand@@Base+0x78>
   1b3b0:	mov	r3, #0
   1b3b4:	str	r3, [r0, #48]	; 0x30
   1b3b8:	ldrb	r0, [r2, r4]
   1b3bc:	bl	109e8 <myhtml_charef_get_first_position@plt>
   1b3c0:	str	r0, [r5, #44]	; 0x2c
   1b3c4:	ldrb	r3, [r0]
   1b3c8:	cmp	r3, #0
   1b3cc:	bne	1b464 <myhtml_data_process_state_ampersand@@Base+0xe8>
   1b3d0:	ldr	r3, [pc, #176]	; 1b488 <myhtml_data_process_state_ampersand@@Base+0x10c>
   1b3d4:	ldr	r3, [r7, r3]
   1b3d8:	str	r3, [r5]
   1b3dc:	mov	r0, r4
   1b3e0:	ldrd	r4, [sp]
   1b3e4:	ldrd	r6, [sp, #8]
   1b3e8:	ldr	r8, [sp, #16]
   1b3ec:	add	sp, sp, #20
   1b3f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3f4:	mov	r1, #35	; 0x23
   1b3f8:	mov	r0, r8
   1b3fc:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1b400:	add	r0, r4, #1
   1b404:	mov	r3, #0
   1b408:	str	r3, [r5, #40]	; 0x28
   1b40c:	ldr	r3, [sp, #24]
   1b410:	cmp	r0, r3
   1b414:	bcs	1b438 <myhtml_data_process_state_ampersand@@Base+0xbc>
   1b418:	ldrb	r1, [r6, r0]
   1b41c:	and	r3, r1, #223	; 0xdf
   1b420:	cmp	r3, #88	; 0x58
   1b424:	beq	1b448 <myhtml_data_process_state_ampersand@@Base+0xcc>
   1b428:	ldr	r3, [pc, #92]	; 1b48c <myhtml_data_process_state_ampersand@@Base+0x110>
   1b42c:	ldr	r3, [r7, r3]
   1b430:	str	r3, [r5]
   1b434:	b	1b3e0 <myhtml_data_process_state_ampersand@@Base+0x64>
   1b438:	ldr	r3, [pc, #80]	; 1b490 <myhtml_data_process_state_ampersand@@Base+0x114>
   1b43c:	ldr	r3, [r7, r3]
   1b440:	str	r3, [r5]
   1b444:	b	1b3e0 <myhtml_data_process_state_ampersand@@Base+0x64>
   1b448:	mov	r0, r8
   1b44c:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1b450:	add	r0, r4, #2
   1b454:	ldr	r3, [pc, #56]	; 1b494 <myhtml_data_process_state_ampersand@@Base+0x118>
   1b458:	ldr	r3, [r7, r3]
   1b45c:	str	r3, [r5]
   1b460:	b	1b3e0 <myhtml_data_process_state_ampersand@@Base+0x64>
   1b464:	ldr	r3, [pc, #44]	; 1b498 <myhtml_data_process_state_ampersand@@Base+0x11c>
   1b468:	ldr	r3, [r7, r3]
   1b46c:	str	r3, [r5]
   1b470:	ldrb	r1, [r6, r4]
   1b474:	mov	r0, r8
   1b478:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1b47c:	add	r0, r4, #1
   1b480:	b	1b3e0 <myhtml_data_process_state_ampersand@@Base+0x64>
   1b484:	andeq	lr, pc, r8, asr ip	; <UNPREDICTABLE>
   1b488:	andeq	r0, r0, ip, lsr #19
   1b48c:	muleq	r0, r4, r9
   1b490:	andeq	r0, r0, r8, ror #14
   1b494:	andeq	r0, r0, r0, ror r7
   1b498:	andeq	r0, r0, r4, asr #16

0001b49c <myhtml_data_process_state_ampersand_hash@@Base>:
   1b49c:	strd	r4, [sp, #-16]!
   1b4a0:	str	r6, [sp, #8]
   1b4a4:	str	lr, [sp, #12]
   1b4a8:	ldr	r5, [pc, #92]	; 1b50c <myhtml_data_process_state_ampersand_hash@@Base+0x70>
   1b4ac:	add	r5, pc, r5
   1b4b0:	ldrb	r2, [r2, r3]
   1b4b4:	and	ip, r2, #223	; 0xdf
   1b4b8:	cmp	ip, #88	; 0x58
   1b4bc:	beq	1b4e0 <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   1b4c0:	ldr	r2, [pc, #72]	; 1b510 <myhtml_data_process_state_ampersand_hash@@Base+0x74>
   1b4c4:	ldr	r2, [r5, r2]
   1b4c8:	str	r2, [r0]
   1b4cc:	mov	r0, r3
   1b4d0:	ldrd	r4, [sp]
   1b4d4:	ldr	r6, [sp, #8]
   1b4d8:	add	sp, sp, #12
   1b4dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4e0:	mov	r4, r3
   1b4e4:	mov	r3, r1
   1b4e8:	mov	r6, r0
   1b4ec:	mov	r1, r2
   1b4f0:	mov	r0, r3
   1b4f4:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1b4f8:	add	r0, r4, #1
   1b4fc:	ldr	r3, [pc, #16]	; 1b514 <myhtml_data_process_state_ampersand_hash@@Base+0x78>
   1b500:	ldr	r3, [r5, r3]
   1b504:	str	r3, [r6]
   1b508:	b	1b4d0 <myhtml_data_process_state_ampersand_hash@@Base+0x34>
   1b50c:	andeq	lr, pc, ip, asr #22
   1b510:	muleq	r0, r4, r9
   1b514:	andeq	r0, r0, r0, ror r7

0001b518 <myhtml_data_process_state_end@@Base>:
   1b518:	strd	r4, [sp, #-16]!
   1b51c:	str	r6, [sp, #8]
   1b520:	str	lr, [sp, #12]
   1b524:	mov	r6, r0
   1b528:	mov	r4, r1
   1b52c:	ldr	r1, [r1, #8]
   1b530:	add	r1, r1, #5
   1b534:	ldr	r3, [r4, #4]
   1b538:	cmp	r1, r3
   1b53c:	bcs	1b598 <myhtml_data_process_state_end@@Base+0x80>
   1b540:	ldr	r3, [r6, #40]	; 0x28
   1b544:	cmp	r3, #159	; 0x9f
   1b548:	bhi	1b5a4 <myhtml_data_process_state_end@@Base+0x8c>
   1b54c:	ldr	r2, [pc, #116]	; 1b5c8 <myhtml_data_process_state_end@@Base+0xb0>
   1b550:	add	r2, pc, r2
   1b554:	add	r3, r2, r3, lsl #2
   1b558:	ldr	r3, [r3, #1024]	; 0x400
   1b55c:	str	r3, [r6, #40]	; 0x28
   1b560:	ldr	r5, [r6, #36]	; 0x24
   1b564:	ldr	r1, [r4]
   1b568:	add	r1, r1, r5
   1b56c:	ldr	r0, [r6, #40]	; 0x28
   1b570:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1b574:	add	r0, r5, r0
   1b578:	str	r0, [r4, #8]
   1b57c:	ldr	r3, [r4]
   1b580:	mov	r2, #0
   1b584:	strb	r2, [r3, r0]
   1b588:	ldrd	r4, [sp]
   1b58c:	ldr	r6, [sp, #8]
   1b590:	add	sp, sp, #12
   1b594:	pop	{pc}		; (ldr pc, [sp], #4)
   1b598:	mov	r0, r4
   1b59c:	bl	108f8 <mycore_string_realloc@plt>
   1b5a0:	b	1b540 <myhtml_data_process_state_end@@Base+0x28>
   1b5a4:	sub	r2, r3, #55296	; 0xd800
   1b5a8:	cmp	r2, #2048	; 0x800
   1b5ac:	movwcc	r3, #65533	; 0xfffd
   1b5b0:	strcc	r3, [r6, #40]	; 0x28
   1b5b4:	bcc	1b560 <myhtml_data_process_state_end@@Base+0x48>
   1b5b8:	cmp	r3, #1114112	; 0x110000
   1b5bc:	movwcs	r3, #65533	; 0xfffd
   1b5c0:	strcs	r3, [r6, #40]	; 0x28
   1b5c4:	b	1b560 <myhtml_data_process_state_end@@Base+0x48>
   1b5c8:	andeq	r4, lr, r0, ror #6

0001b5cc <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1b5cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b5d0:	strd	r6, [sp, #8]
   1b5d4:	strd	r8, [sp, #16]
   1b5d8:	strd	sl, [sp, #24]
   1b5dc:	str	lr, [sp, #32]
   1b5e0:	sub	sp, sp, #12
   1b5e4:	mov	r5, r0
   1b5e8:	mov	r8, r1
   1b5ec:	mov	r7, r2
   1b5f0:	mov	r6, r3
   1b5f4:	ldr	ip, [sp, #48]	; 0x30
   1b5f8:	ldr	sl, [pc, #460]	; 1b7cc <myhtml_data_process_state_ampersand_hash_data@@Base+0x200>
   1b5fc:	add	sl, pc, sl
   1b600:	cmp	r3, ip
   1b604:	bcs	1b704 <myhtml_data_process_state_ampersand_hash_data@@Base+0x138>
   1b608:	add	r1, r2, r3
   1b60c:	ldrb	r2, [r2, r3]
   1b610:	ldr	r3, [pc, #440]	; 1b7d0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x204>
   1b614:	add	r3, pc, r3
   1b618:	add	r3, r3, r2
   1b61c:	ldrb	fp, [r3, #1664]	; 0x680
   1b620:	cmp	fp, #255	; 0xff
   1b624:	beq	1b778 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1ac>
   1b628:	add	r2, r6, #1
   1b62c:	add	r2, r7, r2
   1b630:	mov	r0, r6
   1b634:	movw	lr, #65535	; 0xffff
   1b638:	movt	lr, #16
   1b63c:	ldr	r9, [pc, #400]	; 1b7d4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x208>
   1b640:	add	r9, pc, r9
   1b644:	b	1b6e8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x11c>
   1b648:	ldr	r2, [pc, #392]	; 1b7d8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x20c>
   1b64c:	ldr	r2, [sl, r2]
   1b650:	str	r2, [r5]
   1b654:	cmp	r6, r4
   1b658:	beq	1b788 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1bc>
   1b65c:	ldrb	r3, [r3]
   1b660:	cmp	r3, #59	; 0x3b
   1b664:	addeq	r4, r0, #2
   1b668:	mov	r1, r8
   1b66c:	mov	r0, r5
   1b670:	bl	10304 <myhtml_data_process_state_end@plt>
   1b674:	mov	r0, r4
   1b678:	add	sp, sp, #12
   1b67c:	ldrd	r4, [sp]
   1b680:	ldrd	r6, [sp, #8]
   1b684:	ldrd	r8, [sp, #16]
   1b688:	ldrd	sl, [sp, #24]
   1b68c:	add	sp, sp, #32
   1b690:	pop	{pc}		; (ldr pc, [sp], #4)
   1b694:	ldrb	r2, [r5, #61]	; 0x3d
   1b698:	str	r2, [sp, #4]
   1b69c:	str	r3, [sp]
   1b6a0:	sub	r3, r4, r1
   1b6a4:	add	r2, r7, r1
   1b6a8:	add	r1, r5, #8
   1b6ac:	mov	r0, r8
   1b6b0:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b6b4:	str	r0, [r5, #32]
   1b6b8:	b	1b674 <myhtml_data_process_state_ampersand_hash_data@@Base+0xa8>
   1b6bc:	add	r4, r0, #1
   1b6c0:	cmp	ip, r4
   1b6c4:	beq	1b708 <myhtml_data_process_state_ampersand_hash_data@@Base+0x13c>
   1b6c8:	mov	r3, r2
   1b6cc:	add	r2, r2, #1
   1b6d0:	ldrb	fp, [r3]
   1b6d4:	add	fp, r9, fp
   1b6d8:	ldrb	fp, [fp, #1664]	; 0x680
   1b6dc:	cmp	fp, #255	; 0xff
   1b6e0:	beq	1b648 <myhtml_data_process_state_ampersand_hash_data@@Base+0x7c>
   1b6e4:	mov	r0, r4
   1b6e8:	ldr	r3, [r5, #40]	; 0x28
   1b6ec:	cmp	r3, lr
   1b6f0:	bhi	1b6bc <myhtml_data_process_state_ampersand_hash_data@@Base+0xf0>
   1b6f4:	add	r3, r3, r3, lsl #2
   1b6f8:	add	r3, fp, r3, lsl #1
   1b6fc:	str	r3, [r5, #40]	; 0x28
   1b700:	b	1b6bc <myhtml_data_process_state_ampersand_hash_data@@Base+0xf0>
   1b704:	mov	r4, r3
   1b708:	ldr	r3, [r5, #32]
   1b70c:	sub	r2, r4, r6
   1b710:	add	r1, r7, r6
   1b714:	mov	r0, r8
   1b718:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b71c:	add	r0, r6, r0
   1b720:	cmp	r0, r4
   1b724:	beq	1b674 <myhtml_data_process_state_ampersand_hash_data@@Base+0xa8>
   1b728:	ldr	r3, [r5, #4]
   1b72c:	cmp	r3, #0
   1b730:	bne	1b750 <myhtml_data_process_state_ampersand_hash_data@@Base+0x184>
   1b734:	ldrb	r3, [r5, #61]	; 0x3d
   1b738:	sub	r2, r4, r0
   1b73c:	add	r1, r7, r0
   1b740:	mov	r0, r8
   1b744:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b748:	str	r0, [r5, #32]
   1b74c:	b	1b674 <myhtml_data_process_state_ampersand_hash_data@@Base+0xa8>
   1b750:	ldrb	r2, [r5, #61]	; 0x3d
   1b754:	str	r2, [sp, #4]
   1b758:	str	r3, [sp]
   1b75c:	sub	r3, r4, r0
   1b760:	add	r2, r7, r0
   1b764:	add	r1, r5, #8
   1b768:	mov	r0, r8
   1b76c:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b770:	str	r0, [r5, #32]
   1b774:	b	1b674 <myhtml_data_process_state_ampersand_hash_data@@Base+0xa8>
   1b778:	ldr	r3, [pc, #88]	; 1b7d8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x20c>
   1b77c:	ldr	r3, [sl, r3]
   1b780:	str	r3, [r0]
   1b784:	mov	r4, r6
   1b788:	ldr	r3, [r5, #32]
   1b78c:	mov	r2, #0
   1b790:	mov	r0, r8
   1b794:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b798:	add	r1, r6, r0
   1b79c:	cmp	r1, r4
   1b7a0:	beq	1b674 <myhtml_data_process_state_ampersand_hash_data@@Base+0xa8>
   1b7a4:	ldr	r3, [r5, #4]
   1b7a8:	cmp	r3, #0
   1b7ac:	bne	1b694 <myhtml_data_process_state_ampersand_hash_data@@Base+0xc8>
   1b7b0:	ldrb	r3, [r5, #61]	; 0x3d
   1b7b4:	sub	r2, r4, r1
   1b7b8:	add	r1, r7, r1
   1b7bc:	mov	r0, r8
   1b7c0:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b7c4:	str	r0, [r5, #32]
   1b7c8:	b	1b674 <myhtml_data_process_state_ampersand_hash_data@@Base+0xa8>
   1b7cc:	strdeq	lr, [pc], -ip
   1b7d0:	muleq	lr, ip, r2
   1b7d4:	andeq	r4, lr, r0, ror r2
   1b7d8:	andeq	r0, r0, ip, lsr #19

0001b7dc <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1b7dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b7e0:	strd	r6, [sp, #8]
   1b7e4:	strd	r8, [sp, #16]
   1b7e8:	strd	sl, [sp, #24]
   1b7ec:	str	lr, [sp, #32]
   1b7f0:	sub	sp, sp, #20
   1b7f4:	mov	r5, r0
   1b7f8:	str	r1, [sp, #12]
   1b7fc:	mov	r7, r2
   1b800:	mov	r6, r3
   1b804:	ldr	lr, [sp, #56]	; 0x38
   1b808:	ldr	fp, [pc, #492]	; 1b9fc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x220>
   1b80c:	add	fp, pc, fp
   1b810:	cmp	r3, lr
   1b814:	bcs	1b92c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x150>
   1b818:	add	r1, r2, r3
   1b81c:	ldrb	r2, [r2, r3]
   1b820:	ldr	r3, [pc, #472]	; 1ba00 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x224>
   1b824:	add	r3, pc, r3
   1b828:	add	r3, r3, r2
   1b82c:	ldrb	r3, [r3, #1920]	; 0x780
   1b830:	cmp	r3, #255	; 0xff
   1b834:	beq	1b9a4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1c8>
   1b838:	add	r2, r6, #1
   1b83c:	add	r2, r7, r2
   1b840:	mov	r0, r6
   1b844:	movw	r8, #65535	; 0xffff
   1b848:	movt	r8, #16
   1b84c:	ldr	sl, [pc, #432]	; 1ba04 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x228>
   1b850:	add	sl, pc, sl
   1b854:	ldr	r9, [pc, #428]	; 1ba08 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x22c>
   1b858:	add	r9, pc, r9
   1b85c:	b	1b900 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x124>
   1b860:	ldr	r3, [pc, #420]	; 1ba0c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x230>
   1b864:	ldr	r3, [fp, r3]
   1b868:	str	r3, [r5]
   1b86c:	cmp	r6, r4
   1b870:	beq	1b9b4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1d8>
   1b874:	ldrb	r3, [ip]
   1b878:	cmp	r3, #59	; 0x3b
   1b87c:	addeq	r4, r0, #2
   1b880:	ldr	r1, [sp, #12]
   1b884:	mov	r0, r5
   1b888:	bl	10304 <myhtml_data_process_state_end@plt>
   1b88c:	mov	r0, r4
   1b890:	add	sp, sp, #20
   1b894:	ldrd	r4, [sp]
   1b898:	ldrd	r6, [sp, #8]
   1b89c:	ldrd	r8, [sp, #16]
   1b8a0:	ldrd	sl, [sp, #24]
   1b8a4:	add	sp, sp, #32
   1b8a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8ac:	ldrb	r2, [r5, #61]	; 0x3d
   1b8b0:	str	r2, [sp, #4]
   1b8b4:	str	r3, [sp]
   1b8b8:	sub	r3, r4, r1
   1b8bc:	add	r2, r7, r1
   1b8c0:	add	r1, r5, #8
   1b8c4:	ldr	r0, [sp, #12]
   1b8c8:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b8cc:	str	r0, [r5, #32]
   1b8d0:	b	1b88c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb0>
   1b8d4:	add	r4, r0, #1
   1b8d8:	cmp	lr, r4
   1b8dc:	beq	1b930 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x154>
   1b8e0:	mov	ip, r2
   1b8e4:	add	r2, r2, #1
   1b8e8:	ldrb	r3, [ip]
   1b8ec:	add	r3, r9, r3
   1b8f0:	ldrb	r3, [r3, #1920]	; 0x780
   1b8f4:	cmp	r3, #255	; 0xff
   1b8f8:	beq	1b860 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x84>
   1b8fc:	mov	r0, r4
   1b900:	ldr	r3, [r5, #40]	; 0x28
   1b904:	cmp	r3, r8
   1b908:	bhi	1b8d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xf8>
   1b90c:	lsl	r3, r3, #4
   1b910:	str	r3, [r5, #40]	; 0x28
   1b914:	ldrb	ip, [r7, r0]
   1b918:	add	ip, sl, ip
   1b91c:	ldrb	ip, [ip, #1920]	; 0x780
   1b920:	orr	r3, ip, r3
   1b924:	str	r3, [r5, #40]	; 0x28
   1b928:	b	1b8d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xf8>
   1b92c:	mov	r4, r3
   1b930:	ldr	r3, [r5, #32]
   1b934:	sub	r2, r4, r6
   1b938:	add	r1, r7, r6
   1b93c:	ldr	r8, [sp, #12]
   1b940:	mov	r0, r8
   1b944:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b948:	add	r0, r6, r0
   1b94c:	cmp	r0, r4
   1b950:	beq	1b88c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb0>
   1b954:	ldr	r3, [r5, #4]
   1b958:	cmp	r3, #0
   1b95c:	bne	1b97c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1a0>
   1b960:	ldrb	r3, [r5, #61]	; 0x3d
   1b964:	sub	r2, r4, r0
   1b968:	add	r1, r7, r0
   1b96c:	mov	r0, r8
   1b970:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b974:	str	r0, [r5, #32]
   1b978:	b	1b88c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb0>
   1b97c:	ldrb	r2, [r5, #61]	; 0x3d
   1b980:	str	r2, [sp, #4]
   1b984:	str	r3, [sp]
   1b988:	sub	r3, r4, r0
   1b98c:	add	r2, r7, r0
   1b990:	add	r1, r5, #8
   1b994:	ldr	r0, [sp, #12]
   1b998:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b99c:	str	r0, [r5, #32]
   1b9a0:	b	1b88c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb0>
   1b9a4:	ldr	r3, [pc, #96]	; 1ba0c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x230>
   1b9a8:	ldr	r3, [fp, r3]
   1b9ac:	str	r3, [r0]
   1b9b0:	mov	r4, r6
   1b9b4:	ldr	r3, [r5, #32]
   1b9b8:	mov	r2, #0
   1b9bc:	ldr	r8, [sp, #12]
   1b9c0:	mov	r0, r8
   1b9c4:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b9c8:	add	r1, r6, r0
   1b9cc:	cmp	r1, r4
   1b9d0:	beq	1b88c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb0>
   1b9d4:	ldr	r3, [r5, #4]
   1b9d8:	cmp	r3, #0
   1b9dc:	bne	1b8ac <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd0>
   1b9e0:	ldrb	r3, [r5, #61]	; 0x3d
   1b9e4:	sub	r2, r4, r1
   1b9e8:	add	r1, r7, r1
   1b9ec:	mov	r0, r8
   1b9f0:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1b9f4:	str	r0, [r5, #32]
   1b9f8:	b	1b88c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb0>
   1b9fc:	andeq	lr, pc, ip, ror #15
   1ba00:	andeq	r4, lr, ip, lsl #1
   1ba04:	andeq	r4, lr, r0, rrx
   1ba08:	andeq	r4, lr, r8, asr r0
   1ba0c:	andeq	r0, r0, ip, lsr #19

0001ba10 <myhtml_data_process@@Base>:
   1ba10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ba14:	strd	r6, [sp, #8]
   1ba18:	str	r8, [sp, #16]
   1ba1c:	str	lr, [sp, #20]
   1ba20:	sub	sp, sp, #8
   1ba24:	subs	r5, r3, #0
   1ba28:	beq	1ba60 <myhtml_data_process@@Base+0x50>
   1ba2c:	mov	r8, r2
   1ba30:	mov	r7, r1
   1ba34:	mov	r4, r0
   1ba38:	mov	r3, #0
   1ba3c:	str	r5, [sp]
   1ba40:	ldr	r6, [r4]
   1ba44:	mov	r2, r8
   1ba48:	mov	r1, r7
   1ba4c:	mov	r0, r4
   1ba50:	blx	r6
   1ba54:	mov	r3, r0
   1ba58:	cmp	r5, r0
   1ba5c:	bhi	1ba3c <myhtml_data_process@@Base+0x2c>
   1ba60:	add	sp, sp, #8
   1ba64:	ldrd	r4, [sp]
   1ba68:	ldrd	r6, [sp, #8]
   1ba6c:	ldr	r8, [sp, #16]
   1ba70:	add	sp, sp, #20
   1ba74:	pop	{pc}		; (ldr pc, [sp], #4)

0001ba78 <myhtml_data_process_end@@Base>:
   1ba78:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ba7c:	strd	r6, [sp, #8]
   1ba80:	str	r8, [sp, #16]
   1ba84:	str	lr, [sp, #20]
   1ba88:	mov	r4, r0
   1ba8c:	mov	r5, r1
   1ba90:	ldr	r3, [pc, #280]	; 1bbb0 <myhtml_data_process_end@@Base+0x138>
   1ba94:	add	r3, pc, r3
   1ba98:	ldr	r2, [r0]
   1ba9c:	ldr	r1, [pc, #272]	; 1bbb4 <myhtml_data_process_end@@Base+0x13c>
   1baa0:	ldr	r1, [r3, r1]
   1baa4:	cmp	r2, r1
   1baa8:	beq	1bae0 <myhtml_data_process_end@@Base+0x68>
   1baac:	ldr	r1, [pc, #260]	; 1bbb8 <myhtml_data_process_end@@Base+0x140>
   1bab0:	ldr	r1, [r3, r1]
   1bab4:	cmp	r2, r1
   1bab8:	beq	1bb68 <myhtml_data_process_end@@Base+0xf0>
   1babc:	ldr	r1, [pc, #248]	; 1bbbc <myhtml_data_process_end@@Base+0x144>
   1bac0:	ldr	r3, [r3, r1]
   1bac4:	cmp	r2, r3
   1bac8:	beq	1bb8c <myhtml_data_process_end@@Base+0x114>
   1bacc:	ldrd	r4, [sp]
   1bad0:	ldrd	r6, [sp, #8]
   1bad4:	ldr	r8, [sp, #16]
   1bad8:	add	sp, sp, #20
   1badc:	pop	{pc}		; (ldr pc, [sp], #4)
   1bae0:	ldr	r6, [r0, #48]	; 0x30
   1bae4:	cmp	r6, #0
   1bae8:	beq	1baac <myhtml_data_process_end@@Base+0x34>
   1baec:	ldr	r3, [r6, #20]
   1baf0:	cmp	r3, #0
   1baf4:	beq	1bb44 <myhtml_data_process_end@@Base+0xcc>
   1baf8:	add	r8, r6, #12
   1bafc:	mov	r7, #0
   1bb00:	ldr	r1, [r5, #8]
   1bb04:	add	r1, r1, #5
   1bb08:	ldr	r3, [r5, #4]
   1bb0c:	cmp	r1, r3
   1bb10:	bcs	1bb5c <myhtml_data_process_end@@Base+0xe4>
   1bb14:	ldr	r1, [r5]
   1bb18:	ldr	r3, [r4, #36]	; 0x24
   1bb1c:	add	r1, r1, r3
   1bb20:	ldr	r0, [r8], #4
   1bb24:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1bb28:	ldr	r3, [r4, #36]	; 0x24
   1bb2c:	add	r0, r3, r0
   1bb30:	str	r0, [r4, #36]	; 0x24
   1bb34:	add	r7, r7, #1
   1bb38:	ldr	r3, [r6, #20]
   1bb3c:	cmp	r3, r7
   1bb40:	bhi	1bb00 <myhtml_data_process_end@@Base+0x88>
   1bb44:	ldr	r3, [r4, #36]	; 0x24
   1bb48:	str	r3, [r5, #8]
   1bb4c:	ldr	r2, [r5]
   1bb50:	mov	r1, #0
   1bb54:	strb	r1, [r2, r3]
   1bb58:	b	1bacc <myhtml_data_process_end@@Base+0x54>
   1bb5c:	mov	r0, r5
   1bb60:	bl	108f8 <mycore_string_realloc@plt>
   1bb64:	b	1bb14 <myhtml_data_process_end@@Base+0x9c>
   1bb68:	ldr	r3, [r5, #8]
   1bb6c:	ldr	r2, [r4, #36]	; 0x24
   1bb70:	sub	r3, r3, r2
   1bb74:	cmp	r3, #2
   1bb78:	beq	1bacc <myhtml_data_process_end@@Base+0x54>
   1bb7c:	mov	r1, r5
   1bb80:	mov	r0, r4
   1bb84:	bl	10304 <myhtml_data_process_state_end@plt>
   1bb88:	b	1bacc <myhtml_data_process_end@@Base+0x54>
   1bb8c:	ldr	r3, [r5, #8]
   1bb90:	ldr	r2, [r4, #36]	; 0x24
   1bb94:	sub	r3, r3, r2
   1bb98:	cmp	r3, #3
   1bb9c:	beq	1bacc <myhtml_data_process_end@@Base+0x54>
   1bba0:	mov	r1, r5
   1bba4:	mov	r0, r4
   1bba8:	bl	10304 <myhtml_data_process_state_end@plt>
   1bbac:	b	1bacc <myhtml_data_process_end@@Base+0x54>
   1bbb0:	andeq	lr, pc, r4, ror #10
   1bbb4:	andeq	r0, r0, r4, asr #16
   1bbb8:	muleq	r0, r4, r9
   1bbbc:	andeq	r0, r0, r0, ror r7

0001bbc0 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1bbc0:	ldr	r3, [r0, #8]
   1bbc4:	cmp	r3, r2
   1bbc8:	beq	1bbd4 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base+0x14>
   1bbcc:	mov	r0, #0
   1bbd0:	bx	lr
   1bbd4:	str	r4, [sp, #-8]!
   1bbd8:	str	lr, [sp, #4]
   1bbdc:	ldr	r0, [r0]
   1bbe0:	bl	10238 <mycore_strncasecmp@plt>
   1bbe4:	clz	r0, r0
   1bbe8:	lsr	r0, r0, #5
   1bbec:	ldr	r4, [sp]
   1bbf0:	add	sp, sp, #4
   1bbf4:	pop	{pc}		; (ldr pc, [sp], #4)

0001bbf8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1bbf8:	ldr	r3, [r0, #8]
   1bbfc:	cmp	r3, r2
   1bc00:	bcs	1bc0c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14>
   1bc04:	mov	r0, #0
   1bc08:	bx	lr
   1bc0c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bc10:	strd	r6, [sp, #8]
   1bc14:	strd	r8, [sp, #16]
   1bc18:	str	sl, [sp, #24]
   1bc1c:	str	lr, [sp, #28]
   1bc20:	mov	r7, r2
   1bc24:	mov	r9, r1
   1bc28:	mov	r8, r0
   1bc2c:	ldr	r5, [r0]
   1bc30:	mov	r0, r5
   1bc34:	bl	10238 <mycore_strncasecmp@plt>
   1bc38:	cmp	r0, #0
   1bc3c:	beq	1bc5c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x64>
   1bc40:	ldr	r3, [r8, #8]
   1bc44:	sub	r3, r3, #1
   1bc48:	cmp	r7, r3
   1bc4c:	movhi	r0, #0
   1bc50:	bhi	1bd64 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x16c>
   1bc54:	mov	r6, #1
   1bc58:	b	1bcd4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xdc>
   1bc5c:	ldr	r3, [r8, #8]
   1bc60:	cmp	r3, r7
   1bc64:	bls	1bca0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xa8>
   1bc68:	ldrb	r3, [r5, r7]
   1bc6c:	sub	r0, r3, #9
   1bc70:	uxtb	r0, r0
   1bc74:	sub	r2, r3, #12
   1bc78:	uxtb	r2, r2
   1bc7c:	cmp	r2, #1
   1bc80:	cmphi	r0, #1
   1bc84:	movls	r0, #1
   1bc88:	movhi	r0, #0
   1bc8c:	cmp	r3, #32
   1bc90:	orreq	r0, r0, #1
   1bc94:	cmp	r0, #0
   1bc98:	bne	1bd64 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x16c>
   1bc9c:	b	1bc40 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x48>
   1bca0:	cmp	r3, r7
   1bca4:	bne	1bc40 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x48>
   1bca8:	mov	r0, #1
   1bcac:	b	1bd64 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x16c>
   1bcb0:	ldr	r3, [r8, #8]
   1bcb4:	sub	r3, r3, r6
   1bcb8:	cmp	r3, r7
   1bcbc:	beq	1bd7c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x184>
   1bcc0:	add	r6, r6, #1
   1bcc4:	ldr	r3, [r8, #8]
   1bcc8:	sub	r3, r3, r6
   1bccc:	cmp	r3, r7
   1bcd0:	bcc	1bd60 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x168>
   1bcd4:	ldrb	r3, [r5], #1
   1bcd8:	sub	r4, r3, #9
   1bcdc:	uxtb	r4, r4
   1bce0:	sub	r2, r3, #12
   1bce4:	uxtb	r2, r2
   1bce8:	cmp	r2, #1
   1bcec:	cmphi	r4, #1
   1bcf0:	movls	r4, #1
   1bcf4:	movhi	r4, #0
   1bcf8:	cmp	r3, #32
   1bcfc:	orreq	r4, r4, #1
   1bd00:	cmp	r4, #0
   1bd04:	beq	1bcc0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xc8>
   1bd08:	mov	r2, r7
   1bd0c:	mov	r1, r9
   1bd10:	mov	r0, r5
   1bd14:	bl	10238 <mycore_strncasecmp@plt>
   1bd18:	cmp	r0, #0
   1bd1c:	bne	1bcc0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xc8>
   1bd20:	cmp	r7, r6
   1bd24:	bcs	1bcb0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb8>
   1bd28:	ldrb	r3, [r5, r7]
   1bd2c:	sub	r0, r3, #9
   1bd30:	uxtb	r0, r0
   1bd34:	sub	r2, r3, #12
   1bd38:	uxtb	r2, r2
   1bd3c:	cmp	r2, #1
   1bd40:	cmphi	r0, #1
   1bd44:	movls	r0, #1
   1bd48:	movhi	r0, #0
   1bd4c:	cmp	r3, #32
   1bd50:	orreq	r0, r0, #1
   1bd54:	cmp	r0, #0
   1bd58:	beq	1bcb0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb8>
   1bd5c:	b	1bd64 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x16c>
   1bd60:	mov	r0, #0
   1bd64:	ldrd	r4, [sp]
   1bd68:	ldrd	r6, [sp, #8]
   1bd6c:	ldrd	r8, [sp, #16]
   1bd70:	ldr	sl, [sp, #24]
   1bd74:	add	sp, sp, #28
   1bd78:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd7c:	mov	r0, r4
   1bd80:	b	1bd64 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x16c>

0001bd84 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1bd84:	ldr	r3, [r0, #8]
   1bd88:	cmp	r3, r2
   1bd8c:	bcs	1bd98 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base+0x14>
   1bd90:	mov	r0, #0
   1bd94:	bx	lr
   1bd98:	str	r4, [sp, #-8]!
   1bd9c:	str	lr, [sp, #4]
   1bda0:	ldr	r0, [r0]
   1bda4:	bl	10238 <mycore_strncasecmp@plt>
   1bda8:	clz	r0, r0
   1bdac:	lsr	r0, r0, #5
   1bdb0:	ldr	r4, [sp]
   1bdb4:	add	sp, sp, #4
   1bdb8:	pop	{pc}		; (ldr pc, [sp], #4)

0001bdbc <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1bdbc:	ldr	r3, [r0, #8]
   1bdc0:	cmp	r3, r2
   1bdc4:	bcs	1bdd0 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x14>
   1bdc8:	mov	r0, #0
   1bdcc:	bx	lr
   1bdd0:	str	r4, [sp, #-8]!
   1bdd4:	str	lr, [sp, #4]
   1bdd8:	sub	r3, r3, r2
   1bddc:	ldr	r0, [r0]
   1bde0:	add	r0, r0, r3
   1bde4:	bl	10238 <mycore_strncasecmp@plt>
   1bde8:	clz	r0, r0
   1bdec:	lsr	r0, r0, #5
   1bdf0:	ldr	r4, [sp]
   1bdf4:	add	sp, sp, #4
   1bdf8:	pop	{pc}		; (ldr pc, [sp], #4)

0001bdfc <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1bdfc:	ldr	r3, [r0, #8]
   1be00:	cmp	r3, r2
   1be04:	bcc	1be60 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x64>
   1be08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1be0c:	strd	r6, [sp, #8]
   1be10:	str	r8, [sp, #16]
   1be14:	str	lr, [sp, #20]
   1be18:	mov	r5, r2
   1be1c:	mov	r7, r1
   1be20:	mov	r6, r0
   1be24:	ldr	r8, [r0]
   1be28:	mov	r4, #0
   1be2c:	mov	r2, r5
   1be30:	mov	r1, r7
   1be34:	add	r0, r8, r4
   1be38:	bl	10238 <mycore_strncasecmp@plt>
   1be3c:	cmp	r0, #0
   1be40:	beq	1be68 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x6c>
   1be44:	add	r4, r4, #1
   1be48:	ldr	r3, [r6, #8]
   1be4c:	sub	r3, r3, r4
   1be50:	cmp	r3, r5
   1be54:	bcs	1be2c <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x30>
   1be58:	mov	r0, #0
   1be5c:	b	1be6c <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x70>
   1be60:	mov	r0, #0
   1be64:	bx	lr
   1be68:	mov	r0, #1
   1be6c:	ldrd	r4, [sp]
   1be70:	ldrd	r6, [sp, #8]
   1be74:	ldr	r8, [sp, #16]
   1be78:	add	sp, sp, #20
   1be7c:	pop	{pc}		; (ldr pc, [sp], #4)

0001be80 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1be80:	ldr	r3, [r0, #8]
   1be84:	cmp	r3, r2
   1be88:	bcc	1befc <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x7c>
   1be8c:	strd	r4, [sp, #-16]!
   1be90:	str	r6, [sp, #8]
   1be94:	str	lr, [sp, #12]
   1be98:	mov	r4, r2
   1be9c:	mov	r5, r1
   1bea0:	ldr	r6, [r0]
   1bea4:	beq	1bee4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x64>
   1bea8:	mov	r2, r4
   1beac:	mov	r1, r5
   1beb0:	mov	r0, r6
   1beb4:	bl	10238 <mycore_strncasecmp@plt>
   1beb8:	cmp	r0, #0
   1bebc:	movne	r0, #0
   1bec0:	bne	1bed4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x54>
   1bec4:	ldrb	r0, [r6, r4]
   1bec8:	cmp	r0, #45	; 0x2d
   1becc:	movne	r0, #0
   1bed0:	moveq	r0, #1
   1bed4:	ldrd	r4, [sp]
   1bed8:	ldr	r6, [sp, #8]
   1bedc:	add	sp, sp, #12
   1bee0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bee4:	mov	r0, r6
   1bee8:	bl	10238 <mycore_strncasecmp@plt>
   1beec:	cmp	r0, #0
   1bef0:	moveq	r0, #1
   1bef4:	bne	1bea8 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x28>
   1bef8:	b	1bed4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x54>
   1befc:	mov	r0, #0
   1bf00:	bx	lr

0001bf04 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1bf04:	ldr	r3, [r0, #8]
   1bf08:	cmp	r3, r2
   1bf0c:	beq	1bf18 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base+0x14>
   1bf10:	mov	r0, #0
   1bf14:	bx	lr
   1bf18:	str	r4, [sp, #-8]!
   1bf1c:	str	lr, [sp, #4]
   1bf20:	ldr	r0, [r0]
   1bf24:	bl	10e80 <mycore_strncmp@plt>
   1bf28:	clz	r0, r0
   1bf2c:	lsr	r0, r0, #5
   1bf30:	ldr	r4, [sp]
   1bf34:	add	sp, sp, #4
   1bf38:	pop	{pc}		; (ldr pc, [sp], #4)

0001bf3c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1bf3c:	ldr	r3, [r0, #8]
   1bf40:	cmp	r3, r2
   1bf44:	bcs	1bf50 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14>
   1bf48:	mov	r0, #0
   1bf4c:	bx	lr
   1bf50:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bf54:	strd	r6, [sp, #8]
   1bf58:	strd	r8, [sp, #16]
   1bf5c:	str	sl, [sp, #24]
   1bf60:	str	lr, [sp, #28]
   1bf64:	mov	r7, r2
   1bf68:	mov	r9, r1
   1bf6c:	mov	r8, r0
   1bf70:	ldr	r5, [r0]
   1bf74:	mov	r0, r5
   1bf78:	bl	10e80 <mycore_strncmp@plt>
   1bf7c:	cmp	r0, #0
   1bf80:	beq	1bfa0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x64>
   1bf84:	ldr	r3, [r8, #8]
   1bf88:	sub	r3, r3, #1
   1bf8c:	cmp	r7, r3
   1bf90:	movhi	r0, #0
   1bf94:	bhi	1c0a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x16c>
   1bf98:	mov	r6, #1
   1bf9c:	b	1c018 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xdc>
   1bfa0:	ldr	r3, [r8, #8]
   1bfa4:	cmp	r3, r7
   1bfa8:	bls	1bfe4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xa8>
   1bfac:	ldrb	r3, [r5, r7]
   1bfb0:	sub	r0, r3, #9
   1bfb4:	uxtb	r0, r0
   1bfb8:	sub	r2, r3, #12
   1bfbc:	uxtb	r2, r2
   1bfc0:	cmp	r2, #1
   1bfc4:	cmphi	r0, #1
   1bfc8:	movls	r0, #1
   1bfcc:	movhi	r0, #0
   1bfd0:	cmp	r3, #32
   1bfd4:	orreq	r0, r0, #1
   1bfd8:	cmp	r0, #0
   1bfdc:	bne	1c0a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x16c>
   1bfe0:	b	1bf84 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x48>
   1bfe4:	cmp	r3, r7
   1bfe8:	bne	1bf84 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x48>
   1bfec:	mov	r0, #1
   1bff0:	b	1c0a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x16c>
   1bff4:	ldr	r3, [r8, #8]
   1bff8:	sub	r3, r3, r6
   1bffc:	cmp	r3, r7
   1c000:	beq	1c0c0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x184>
   1c004:	add	r6, r6, #1
   1c008:	ldr	r3, [r8, #8]
   1c00c:	sub	r3, r3, r6
   1c010:	cmp	r3, r7
   1c014:	bcc	1c0a4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x168>
   1c018:	ldrb	r3, [r5], #1
   1c01c:	sub	r4, r3, #9
   1c020:	uxtb	r4, r4
   1c024:	sub	r2, r3, #12
   1c028:	uxtb	r2, r2
   1c02c:	cmp	r2, #1
   1c030:	cmphi	r4, #1
   1c034:	movls	r4, #1
   1c038:	movhi	r4, #0
   1c03c:	cmp	r3, #32
   1c040:	orreq	r4, r4, #1
   1c044:	cmp	r4, #0
   1c048:	beq	1c004 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xc8>
   1c04c:	mov	r2, r7
   1c050:	mov	r1, r9
   1c054:	mov	r0, r5
   1c058:	bl	10e80 <mycore_strncmp@plt>
   1c05c:	cmp	r0, #0
   1c060:	bne	1c004 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xc8>
   1c064:	cmp	r7, r6
   1c068:	bcs	1bff4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb8>
   1c06c:	ldrb	r3, [r5, r7]
   1c070:	sub	r0, r3, #9
   1c074:	uxtb	r0, r0
   1c078:	sub	r2, r3, #12
   1c07c:	uxtb	r2, r2
   1c080:	cmp	r2, #1
   1c084:	cmphi	r0, #1
   1c088:	movls	r0, #1
   1c08c:	movhi	r0, #0
   1c090:	cmp	r3, #32
   1c094:	orreq	r0, r0, #1
   1c098:	cmp	r0, #0
   1c09c:	beq	1bff4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb8>
   1c0a0:	b	1c0a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x16c>
   1c0a4:	mov	r0, #0
   1c0a8:	ldrd	r4, [sp]
   1c0ac:	ldrd	r6, [sp, #8]
   1c0b0:	ldrd	r8, [sp, #16]
   1c0b4:	ldr	sl, [sp, #24]
   1c0b8:	add	sp, sp, #28
   1c0bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0c0:	mov	r0, r4
   1c0c4:	b	1c0a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x16c>

0001c0c8 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1c0c8:	ldr	r3, [r0, #8]
   1c0cc:	cmp	r3, r2
   1c0d0:	bcs	1c0dc <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base+0x14>
   1c0d4:	mov	r0, #0
   1c0d8:	bx	lr
   1c0dc:	str	r4, [sp, #-8]!
   1c0e0:	str	lr, [sp, #4]
   1c0e4:	ldr	r0, [r0]
   1c0e8:	bl	10e80 <mycore_strncmp@plt>
   1c0ec:	clz	r0, r0
   1c0f0:	lsr	r0, r0, #5
   1c0f4:	ldr	r4, [sp]
   1c0f8:	add	sp, sp, #4
   1c0fc:	pop	{pc}		; (ldr pc, [sp], #4)

0001c100 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1c100:	ldr	r3, [r0, #8]
   1c104:	cmp	r3, r2
   1c108:	bcs	1c114 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x14>
   1c10c:	mov	r0, #0
   1c110:	bx	lr
   1c114:	str	r4, [sp, #-8]!
   1c118:	str	lr, [sp, #4]
   1c11c:	sub	r3, r3, r2
   1c120:	ldr	r0, [r0]
   1c124:	add	r0, r0, r3
   1c128:	bl	10e80 <mycore_strncmp@plt>
   1c12c:	clz	r0, r0
   1c130:	lsr	r0, r0, #5
   1c134:	ldr	r4, [sp]
   1c138:	add	sp, sp, #4
   1c13c:	pop	{pc}		; (ldr pc, [sp], #4)

0001c140 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1c140:	ldr	r3, [r0, #8]
   1c144:	cmp	r3, r2
   1c148:	bcc	1c1a4 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x64>
   1c14c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c150:	strd	r6, [sp, #8]
   1c154:	str	r8, [sp, #16]
   1c158:	str	lr, [sp, #20]
   1c15c:	mov	r5, r2
   1c160:	mov	r7, r1
   1c164:	mov	r6, r0
   1c168:	ldr	r8, [r0]
   1c16c:	mov	r4, #0
   1c170:	mov	r2, r5
   1c174:	mov	r1, r7
   1c178:	add	r0, r8, r4
   1c17c:	bl	10e80 <mycore_strncmp@plt>
   1c180:	cmp	r0, #0
   1c184:	beq	1c1ac <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x6c>
   1c188:	add	r4, r4, #1
   1c18c:	ldr	r3, [r6, #8]
   1c190:	sub	r3, r3, r4
   1c194:	cmp	r3, r5
   1c198:	bcs	1c170 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x30>
   1c19c:	mov	r0, #0
   1c1a0:	b	1c1b0 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x70>
   1c1a4:	mov	r0, #0
   1c1a8:	bx	lr
   1c1ac:	mov	r0, #1
   1c1b0:	ldrd	r4, [sp]
   1c1b4:	ldrd	r6, [sp, #8]
   1c1b8:	ldr	r8, [sp, #16]
   1c1bc:	add	sp, sp, #20
   1c1c0:	pop	{pc}		; (ldr pc, [sp], #4)

0001c1c4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1c1c4:	ldr	r3, [r0, #8]
   1c1c8:	cmp	r3, r2
   1c1cc:	bcc	1c240 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x7c>
   1c1d0:	strd	r4, [sp, #-16]!
   1c1d4:	str	r6, [sp, #8]
   1c1d8:	str	lr, [sp, #12]
   1c1dc:	mov	r4, r2
   1c1e0:	mov	r5, r1
   1c1e4:	ldr	r6, [r0]
   1c1e8:	beq	1c228 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x64>
   1c1ec:	mov	r2, r4
   1c1f0:	mov	r1, r5
   1c1f4:	mov	r0, r6
   1c1f8:	bl	10e80 <mycore_strncmp@plt>
   1c1fc:	cmp	r0, #0
   1c200:	movne	r0, #0
   1c204:	bne	1c218 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x54>
   1c208:	ldrb	r0, [r6, r4]
   1c20c:	cmp	r0, #45	; 0x2d
   1c210:	movne	r0, #0
   1c214:	moveq	r0, #1
   1c218:	ldrd	r4, [sp]
   1c21c:	ldr	r6, [sp, #8]
   1c220:	add	sp, sp, #12
   1c224:	pop	{pc}		; (ldr pc, [sp], #4)
   1c228:	mov	r0, r6
   1c22c:	bl	10e80 <mycore_strncmp@plt>
   1c230:	cmp	r0, #0
   1c234:	moveq	r0, #1
   1c238:	bne	1c1ec <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x28>
   1c23c:	b	1c218 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x54>
   1c240:	mov	r0, #0
   1c244:	bx	lr

0001c248 <myhtml_init_marker@@Base>:
   1c248:	str	r4, [sp, #-8]!
   1c24c:	str	lr, [sp, #4]
   1c250:	mov	r4, r0
   1c254:	mov	r0, #44	; 0x2c
   1c258:	bl	10c28 <mycore_malloc@plt>
   1c25c:	str	r0, [r4, #36]	; 0x24
   1c260:	cmp	r0, #0
   1c264:	beq	1c26c <myhtml_init_marker@@Base+0x24>
   1c268:	bl	11030 <myhtml_tree_node_clean@plt>
   1c26c:	ldr	r4, [sp]
   1c270:	add	sp, sp, #4
   1c274:	pop	{pc}		; (ldr pc, [sp], #4)

0001c278 <myhtml_destroy_marker@@Base>:
   1c278:	ldr	r0, [r0, #36]	; 0x24
   1c27c:	cmp	r0, #0
   1c280:	bxeq	lr
   1c284:	str	r4, [sp, #-8]!
   1c288:	str	lr, [sp, #4]
   1c28c:	bl	10d60 <mycore_free@plt>
   1c290:	ldr	r4, [sp]
   1c294:	add	sp, sp, #4
   1c298:	pop	{pc}		; (ldr pc, [sp], #4)

0001c29c <myhtml_stream_create@@Base>:
   1c29c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c2a0:	strd	r6, [sp, #8]
   1c2a4:	str	r8, [sp, #16]
   1c2a8:	str	lr, [sp, #20]
   1c2ac:	subs	r4, r2, #0
   1c2b0:	bne	1c2d8 <myhtml_stream_create@@Base+0x3c>
   1c2b4:	mov	r3, #0
   1c2b8:	str	r3, [r0]
   1c2bc:	str	r3, [r1]
   1c2c0:	mov	r0, r4
   1c2c4:	ldrd	r4, [sp]
   1c2c8:	ldrd	r6, [sp, #8]
   1c2cc:	ldr	r8, [sp, #16]
   1c2d0:	add	sp, sp, #20
   1c2d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2d8:	mov	r7, r3
   1c2dc:	mov	r6, r1
   1c2e0:	mov	r5, r0
   1c2e4:	bl	fdb8 <mythread_create@plt>
   1c2e8:	str	r0, [r5]
   1c2ec:	cmp	r0, #0
   1c2f0:	moveq	r3, #9
   1c2f4:	streq	r3, [r6]
   1c2f8:	mov	r3, r7
   1c2fc:	mov	r2, r4
   1c300:	mov	r1, #0
   1c304:	ldr	r0, [r5]
   1c308:	bl	1103c <mythread_init@plt>
   1c30c:	str	r0, [r6]
   1c310:	cmp	r0, #0
   1c314:	bne	1c320 <myhtml_stream_create@@Base+0x84>
   1c318:	ldr	r0, [r6]
   1c31c:	b	1c2c4 <myhtml_stream_create@@Base+0x28>
   1c320:	mov	r3, #1
   1c324:	mov	r2, #0
   1c328:	mov	r1, r2
   1c32c:	ldr	r0, [r5]
   1c330:	bl	10940 <mythread_destroy@plt>
   1c334:	str	r0, [r5]
   1c338:	b	1c318 <myhtml_stream_create@@Base+0x7c>

0001c33c <myhtml_batch_create@@Base>:
   1c33c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c340:	strd	r6, [sp, #8]
   1c344:	str	r8, [sp, #16]
   1c348:	str	lr, [sp, #20]
   1c34c:	subs	r5, r2, #0
   1c350:	bne	1c378 <myhtml_batch_create@@Base+0x3c>
   1c354:	mov	r3, #0
   1c358:	str	r3, [r0, #4]
   1c35c:	str	r3, [r1]
   1c360:	mov	r0, r5
   1c364:	ldrd	r4, [sp]
   1c368:	ldrd	r6, [sp, #8]
   1c36c:	ldr	r8, [sp, #16]
   1c370:	add	sp, sp, #20
   1c374:	pop	{pc}		; (ldr pc, [sp], #4)
   1c378:	mov	r7, r3
   1c37c:	mov	r6, r1
   1c380:	mov	r4, r0
   1c384:	bl	fdb8 <mythread_create@plt>
   1c388:	str	r0, [r4, #4]
   1c38c:	ldr	r3, [r4]
   1c390:	cmp	r3, #0
   1c394:	beq	1c3c0 <myhtml_batch_create@@Base+0x84>
   1c398:	mov	r3, r7
   1c39c:	mov	r2, r5
   1c3a0:	mov	r1, #1
   1c3a4:	ldr	r0, [r4, #4]
   1c3a8:	bl	1103c <mythread_init@plt>
   1c3ac:	str	r0, [r6]
   1c3b0:	cmp	r0, #0
   1c3b4:	bne	1c3e4 <myhtml_batch_create@@Base+0xa8>
   1c3b8:	ldr	r0, [r6]
   1c3bc:	b	1c364 <myhtml_batch_create@@Base+0x28>
   1c3c0:	mov	r3, #1
   1c3c4:	mov	r2, #0
   1c3c8:	mov	r1, r2
   1c3cc:	mov	r0, r2
   1c3d0:	bl	10940 <mythread_destroy@plt>
   1c3d4:	str	r0, [r4]
   1c3d8:	mov	r3, #9
   1c3dc:	str	r3, [r6]
   1c3e0:	b	1c398 <myhtml_batch_create@@Base+0x5c>
   1c3e4:	mov	r3, #1
   1c3e8:	mov	r2, #0
   1c3ec:	mov	r1, r2
   1c3f0:	ldr	r0, [r4, #4]
   1c3f4:	bl	10940 <mythread_destroy@plt>
   1c3f8:	str	r0, [r4, #4]
   1c3fc:	b	1c3b8 <myhtml_batch_create@@Base+0x7c>

0001c400 <myhtml_create_stream_and_batch@@Base>:
   1c400:	strd	r4, [sp, #-16]!
   1c404:	str	r6, [sp, #8]
   1c408:	str	lr, [sp, #12]
   1c40c:	sub	sp, sp, #8
   1c410:	mov	r5, r0
   1c414:	mov	r4, r1
   1c418:	mov	r6, r2
   1c41c:	mov	r3, #0
   1c420:	mov	r2, r1
   1c424:	add	r1, sp, #4
   1c428:	bl	103d0 <myhtml_stream_create@plt>
   1c42c:	cmp	r0, #0
   1c430:	beq	1c44c <myhtml_create_stream_and_batch@@Base+0x4c>
   1c434:	ldr	r0, [sp, #4]
   1c438:	add	sp, sp, #8
   1c43c:	ldrd	r4, [sp]
   1c440:	ldr	r6, [sp, #8]
   1c444:	add	sp, sp, #12
   1c448:	pop	{pc}		; (ldr pc, [sp], #4)
   1c44c:	mov	r3, r4
   1c450:	mov	r2, r6
   1c454:	add	r1, sp, #4
   1c458:	mov	r0, r5
   1c45c:	bl	1052c <myhtml_batch_create@plt>
   1c460:	cmp	r0, #0
   1c464:	bne	1c470 <myhtml_create_stream_and_batch@@Base+0x70>
   1c468:	ldr	r0, [sp, #4]
   1c46c:	b	1c438 <myhtml_create_stream_and_batch@@Base+0x38>
   1c470:	mov	r3, #1
   1c474:	mov	r2, #0
   1c478:	mov	r1, r2
   1c47c:	ldr	r0, [r5]
   1c480:	bl	10940 <mythread_destroy@plt>
   1c484:	str	r0, [r5]
   1c488:	ldr	r0, [sp, #4]
   1c48c:	b	1c438 <myhtml_create_stream_and_batch@@Base+0x38>

0001c490 <myhtml_create@@Base>:
   1c490:	str	r4, [sp, #-8]!
   1c494:	str	lr, [sp, #4]
   1c498:	mov	r1, #40	; 0x28
   1c49c:	mov	r0, #1
   1c4a0:	bl	feb4 <mycore_calloc@plt>
   1c4a4:	ldr	r4, [sp]
   1c4a8:	add	sp, sp, #4
   1c4ac:	pop	{pc}		; (ldr pc, [sp], #4)

0001c4b0 <myhtml_clean@@Base>:
   1c4b0:	bx	lr

0001c4b4 <myhtml_init@@Base>:
   1c4b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c4b8:	strd	r6, [sp, #8]
   1c4bc:	str	r8, [sp, #16]
   1c4c0:	str	lr, [sp, #20]
   1c4c4:	sub	sp, sp, #16
   1c4c8:	mov	r5, r0
   1c4cc:	mov	r6, r1
   1c4d0:	mov	r7, r2
   1c4d4:	ldr	r8, [pc, #532]	; 1c6f0 <myhtml_init@@Base+0x23c>
   1c4d8:	add	r8, pc, r8
   1c4dc:	str	r1, [r0, #32]
   1c4e0:	bl	10a48 <myhtml_init_marker@plt>
   1c4e4:	mov	r0, r5
   1c4e8:	bl	fc5c <myhtml_tokenizer_state_init@plt>
   1c4ec:	mov	r4, r0
   1c4f0:	str	r0, [sp, #12]
   1c4f4:	cmp	r0, #0
   1c4f8:	beq	1c518 <myhtml_init@@Base+0x64>
   1c4fc:	mov	r0, r4
   1c500:	add	sp, sp, #16
   1c504:	ldrd	r4, [sp]
   1c508:	ldrd	r6, [sp, #8]
   1c50c:	ldr	r8, [sp, #16]
   1c510:	add	sp, sp, #20
   1c514:	pop	{pc}		; (ldr pc, [sp], #4)
   1c518:	mov	r0, r5
   1c51c:	bl	10b80 <myhtml_rules_init@plt>
   1c520:	mov	r4, r0
   1c524:	str	r0, [sp, #12]
   1c528:	cmp	r0, #0
   1c52c:	bne	1c4fc <myhtml_init@@Base+0x48>
   1c530:	cmp	r7, #0
   1c534:	moveq	r7, #1
   1c538:	cmp	r6, #1
   1c53c:	beq	1c62c <myhtml_init@@Base+0x178>
   1c540:	cmp	r6, #2
   1c544:	beq	1c684 <myhtml_init@@Base+0x1d0>
   1c548:	cmp	r7, #2
   1c54c:	movcc	r7, #2
   1c550:	sub	r2, r7, #1
   1c554:	mov	r1, #1
   1c558:	mov	r0, r5
   1c55c:	bl	10478 <myhtml_create_stream_and_batch@plt>
   1c560:	mov	r4, r0
   1c564:	str	r0, [sp, #12]
   1c568:	cmp	r0, #0
   1c56c:	bne	1c4fc <myhtml_init@@Base+0x48>
   1c570:	ldr	r4, [r5]
   1c574:	add	r0, sp, #12
   1c578:	bl	1076c <mythread_queue_list_create@plt>
   1c57c:	str	r0, [r4, #16]
   1c580:	ldr	r3, [r5, #4]
   1c584:	ldr	r2, [r5]
   1c588:	ldr	r2, [r2, #16]
   1c58c:	str	r2, [r3, #16]
   1c590:	ldr	r3, [pc, #348]	; 1c6f4 <myhtml_init@@Base+0x240>
   1c594:	ldr	r3, [r8, r3]
   1c598:	str	r3, [sp]
   1c59c:	ldr	r3, [pc, #340]	; 1c6f8 <myhtml_init@@Base+0x244>
   1c5a0:	ldr	r3, [r8, r3]
   1c5a4:	str	r3, [sp, #4]
   1c5a8:	mov	r3, #4
   1c5ac:	ldr	r2, [sp]
   1c5b0:	ldr	r1, [sp, #4]
   1c5b4:	ldr	r0, [r5]
   1c5b8:	bl	10850 <myhread_entry_create@plt>
   1c5bc:	mov	r4, r0
   1c5c0:	str	r0, [sp, #12]
   1c5c4:	cmp	r0, #0
   1c5c8:	bne	1c4fc <myhtml_init@@Base+0x48>
   1c5cc:	ldr	r0, [r5, #4]
   1c5d0:	ldr	r3, [r0, #8]
   1c5d4:	cmp	r3, #0
   1c5d8:	beq	1c64c <myhtml_init@@Base+0x198>
   1c5dc:	ldr	r3, [pc, #280]	; 1c6fc <myhtml_init@@Base+0x248>
   1c5e0:	ldr	r3, [r8, r3]
   1c5e4:	str	r3, [sp]
   1c5e8:	ldr	r3, [pc, #272]	; 1c700 <myhtml_init@@Base+0x24c>
   1c5ec:	ldr	r3, [r8, r3]
   1c5f0:	str	r3, [sp, #4]
   1c5f4:	mov	r6, #4
   1c5f8:	mov	r3, r6
   1c5fc:	ldr	r2, [sp]
   1c600:	ldr	r1, [sp, #4]
   1c604:	bl	10850 <myhread_entry_create@plt>
   1c608:	str	r0, [sp, #12]
   1c60c:	cmp	r0, #0
   1c610:	bne	1c6e8 <myhtml_init@@Base+0x234>
   1c614:	add	r4, r4, #1
   1c618:	ldr	r0, [r5, #4]
   1c61c:	ldr	r3, [r0, #8]
   1c620:	cmp	r3, r4
   1c624:	bhi	1c5f8 <myhtml_init@@Base+0x144>
   1c628:	b	1c64c <myhtml_init@@Base+0x198>
   1c62c:	mov	r2, #0
   1c630:	mov	r1, r2
   1c634:	mov	r0, r5
   1c638:	bl	10478 <myhtml_create_stream_and_batch@plt>
   1c63c:	mov	r4, r0
   1c640:	str	r0, [sp, #12]
   1c644:	cmp	r0, #0
   1c648:	bne	1c4fc <myhtml_init@@Base+0x48>
   1c64c:	str	r7, [r5, #20]
   1c650:	ldr	r3, [r5]
   1c654:	str	r3, [r5, #8]
   1c658:	ldr	r3, [r5, #4]
   1c65c:	str	r3, [r5, #12]
   1c660:	mov	r3, #0
   1c664:	str	r3, [r5, #16]
   1c668:	ldr	r4, [sp, #12]
   1c66c:	cmp	r4, r3
   1c670:	bne	1c4fc <myhtml_init@@Base+0x48>
   1c674:	mov	r0, r5
   1c678:	bl	fd88 <myhtml_clean@plt>
   1c67c:	ldr	r4, [sp, #12]
   1c680:	b	1c4fc <myhtml_init@@Base+0x48>
   1c684:	mov	r2, #0
   1c688:	mov	r1, #1
   1c68c:	mov	r0, r5
   1c690:	bl	10478 <myhtml_create_stream_and_batch@plt>
   1c694:	mov	r4, r0
   1c698:	str	r0, [sp, #12]
   1c69c:	cmp	r0, #0
   1c6a0:	bne	1c4fc <myhtml_init@@Base+0x48>
   1c6a4:	ldr	r4, [r5]
   1c6a8:	add	r0, sp, #12
   1c6ac:	bl	1076c <mythread_queue_list_create@plt>
   1c6b0:	str	r0, [r4, #16]
   1c6b4:	ldr	r3, [pc, #72]	; 1c704 <myhtml_init@@Base+0x250>
   1c6b8:	ldr	r3, [r8, r3]
   1c6bc:	str	r3, [sp]
   1c6c0:	ldr	r3, [pc, #48]	; 1c6f8 <myhtml_init@@Base+0x244>
   1c6c4:	ldr	r3, [r8, r3]
   1c6c8:	str	r3, [sp, #4]
   1c6cc:	mov	r3, #4
   1c6d0:	ldr	r2, [sp]
   1c6d4:	ldr	r1, [sp, #4]
   1c6d8:	ldr	r0, [r5]
   1c6dc:	bl	10850 <myhread_entry_create@plt>
   1c6e0:	str	r0, [sp, #12]
   1c6e4:	b	1c64c <myhtml_init@@Base+0x198>
   1c6e8:	mov	r4, r0
   1c6ec:	b	1c4fc <myhtml_init@@Base+0x48>
   1c6f0:	andeq	sp, pc, r0, lsr #22
   1c6f4:	andeq	r0, r0, r0, asr #19
   1c6f8:	andeq	r0, r0, r8, lsr r7
   1c6fc:	andeq	r0, r0, ip, asr #14
   1c700:	andeq	r0, r0, ip, lsr #14
   1c704:	andeq	r0, r0, r4, asr #14

0001c708 <myhtml_destroy@@Base>:
   1c708:	strd	r4, [sp, #-16]!
   1c70c:	str	r6, [sp, #8]
   1c710:	str	lr, [sp, #12]
   1c714:	sub	sp, sp, #8
   1c718:	ldr	r5, [pc, #272]	; 1c830 <myhtml_destroy@@Base+0x128>
   1c71c:	add	r5, pc, r5
   1c720:	subs	r4, r0, #0
   1c724:	beq	1c7c8 <myhtml_destroy@@Base+0xc0>
   1c728:	mov	r0, r4
   1c72c:	bl	10724 <myhtml_destroy_marker@plt>
   1c730:	ldr	r0, [r4]
   1c734:	cmp	r0, #0
   1c738:	beq	1c7a8 <myhtml_destroy@@Base+0xa0>
   1c73c:	ldr	r6, [r0, #16]
   1c740:	cmp	r6, #0
   1c744:	beq	1c7e0 <myhtml_destroy@@Base+0xd8>
   1c748:	mov	r1, r6
   1c74c:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   1c750:	ldr	r3, [pc, #220]	; 1c834 <myhtml_destroy@@Base+0x12c>
   1c754:	ldr	r3, [r5, r3]
   1c758:	str	r3, [sp, #4]
   1c75c:	mov	r3, #1
   1c760:	mov	r2, #0
   1c764:	ldr	r1, [sp, #4]
   1c768:	ldr	r0, [r4]
   1c76c:	bl	10940 <mythread_destroy@plt>
   1c770:	str	r0, [r4]
   1c774:	ldr	r0, [r4, #4]
   1c778:	cmp	r0, #0
   1c77c:	beq	1c7a0 <myhtml_destroy@@Base+0x98>
   1c780:	ldr	r3, [pc, #172]	; 1c834 <myhtml_destroy@@Base+0x12c>
   1c784:	ldr	r3, [r5, r3]
   1c788:	str	r3, [sp, #4]
   1c78c:	mov	r3, #1
   1c790:	mov	r2, #0
   1c794:	ldr	r1, [sp, #4]
   1c798:	bl	10940 <mythread_destroy@plt>
   1c79c:	str	r0, [r4, #4]
   1c7a0:	mov	r0, r6
   1c7a4:	bl	100d0 <mythread_queue_list_destroy@plt>
   1c7a8:	mov	r0, r4
   1c7ac:	bl	10094 <myhtml_tokenizer_state_destroy@plt>
   1c7b0:	ldr	r0, [r4, #28]
   1c7b4:	cmp	r0, #0
   1c7b8:	beq	1c7c0 <myhtml_destroy@@Base+0xb8>
   1c7bc:	bl	10d60 <mycore_free@plt>
   1c7c0:	mov	r0, r4
   1c7c4:	bl	10d60 <mycore_free@plt>
   1c7c8:	mov	r0, #0
   1c7cc:	add	sp, sp, #8
   1c7d0:	ldrd	r4, [sp]
   1c7d4:	ldr	r6, [sp, #8]
   1c7d8:	add	sp, sp, #12
   1c7dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7e0:	ldr	r3, [pc, #76]	; 1c834 <myhtml_destroy@@Base+0x12c>
   1c7e4:	ldr	r3, [r5, r3]
   1c7e8:	str	r3, [sp, #4]
   1c7ec:	mov	r3, #1
   1c7f0:	mov	r2, #0
   1c7f4:	ldr	r1, [sp, #4]
   1c7f8:	bl	10940 <mythread_destroy@plt>
   1c7fc:	str	r0, [r4]
   1c800:	ldr	r0, [r4, #4]
   1c804:	cmp	r0, #0
   1c808:	beq	1c7a8 <myhtml_destroy@@Base+0xa0>
   1c80c:	ldr	r3, [pc, #32]	; 1c834 <myhtml_destroy@@Base+0x12c>
   1c810:	ldr	r3, [r5, r3]
   1c814:	str	r3, [sp, #4]
   1c818:	mov	r3, #1
   1c81c:	mov	r2, #0
   1c820:	ldr	r1, [sp, #4]
   1c824:	bl	10940 <mythread_destroy@plt>
   1c828:	str	r0, [r4, #4]
   1c82c:	b	1c7a8 <myhtml_destroy@@Base+0xa0>
   1c830:	ldrdeq	sp, [pc], -ip
   1c834:	andeq	r0, r0, r0, ror #16

0001c838 <myhtml_parse_chunk@@Base>:
   1c838:	strd	r4, [sp, #-16]!
   1c83c:	str	r6, [sp, #8]
   1c840:	str	lr, [sp, #12]
   1c844:	mov	r4, r0
   1c848:	mov	r5, r1
   1c84c:	mov	r6, r2
   1c850:	ldr	r3, [r0, #180]	; 0xb4
   1c854:	tst	r3, #32
   1c858:	bne	1c87c <myhtml_parse_chunk@@Base+0x44>
   1c85c:	mov	r2, r6
   1c860:	mov	r1, r5
   1c864:	mov	r0, r4
   1c868:	bl	10064 <myhtml_tokenizer_chunk@plt>
   1c86c:	ldrd	r4, [sp]
   1c870:	ldr	r6, [sp, #8]
   1c874:	add	sp, sp, #12
   1c878:	pop	{pc}		; (ldr pc, [sp], #4)
   1c87c:	bl	10664 <myhtml_tree_clean@plt>
   1c880:	b	1c85c <myhtml_parse_chunk@@Base+0x24>

0001c884 <myhtml_parse_chunk_fragment@@Base>:
   1c884:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c888:	strd	r6, [sp, #8]
   1c88c:	str	r8, [sp, #16]
   1c890:	str	lr, [sp, #20]
   1c894:	mov	r5, r0
   1c898:	mov	r7, r1
   1c89c:	mov	r8, r2
   1c8a0:	mov	r4, r3
   1c8a4:	ldr	r6, [sp, #24]
   1c8a8:	ldr	r3, [r0, #180]	; 0xb4
   1c8ac:	tst	r3, #32
   1c8b0:	bne	1c904 <myhtml_parse_chunk_fragment@@Base+0x80>
   1c8b4:	cmp	r4, #0
   1c8b8:	moveq	r4, #42	; 0x2a
   1c8bc:	cmp	r6, #0
   1c8c0:	movne	r2, r6
   1c8c4:	moveq	r2, #1
   1c8c8:	mov	r1, r4
   1c8cc:	mov	r0, r5
   1c8d0:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   1c8d4:	cmp	r0, #0
   1c8d8:	movweq	r0, #37165	; 0x912d
   1c8dc:	beq	1c8f0 <myhtml_parse_chunk_fragment@@Base+0x6c>
   1c8e0:	mov	r2, r8
   1c8e4:	mov	r1, r7
   1c8e8:	mov	r0, r5
   1c8ec:	bl	10064 <myhtml_tokenizer_chunk@plt>
   1c8f0:	ldrd	r4, [sp]
   1c8f4:	ldrd	r6, [sp, #8]
   1c8f8:	ldr	r8, [sp, #16]
   1c8fc:	add	sp, sp, #20
   1c900:	pop	{pc}		; (ldr pc, [sp], #4)
   1c904:	bl	10664 <myhtml_tree_clean@plt>
   1c908:	b	1c8b4 <myhtml_parse_chunk_fragment@@Base+0x30>

0001c90c <myhtml_parse_chunk_single@@Base>:
   1c90c:	str	r4, [sp, #-8]!
   1c910:	str	lr, [sp, #4]
   1c914:	ldr	r3, [r0, #180]	; 0xb4
   1c918:	tst	r3, #16
   1c91c:	bne	1c92c <myhtml_parse_chunk_single@@Base+0x20>
   1c920:	ldr	r3, [r0, #180]	; 0xb4
   1c924:	orr	r3, r3, #16
   1c928:	str	r3, [r0, #180]	; 0xb4
   1c92c:	bl	109d0 <myhtml_parse_chunk@plt>
   1c930:	ldr	r4, [sp]
   1c934:	add	sp, sp, #4
   1c938:	pop	{pc}		; (ldr pc, [sp], #4)

0001c93c <myhtml_parse_chunk_fragment_single@@Base>:
   1c93c:	push	{lr}		; (str lr, [sp, #-4]!)
   1c940:	sub	sp, sp, #12
   1c944:	ldr	ip, [r0, #180]	; 0xb4
   1c948:	tst	ip, #16
   1c94c:	bne	1c95c <myhtml_parse_chunk_fragment_single@@Base+0x20>
   1c950:	ldr	ip, [r0, #180]	; 0xb4
   1c954:	orr	ip, ip, #16
   1c958:	str	ip, [r0, #180]	; 0xb4
   1c95c:	ldr	ip, [sp, #16]
   1c960:	str	ip, [sp]
   1c964:	bl	10538 <myhtml_parse_chunk_fragment@plt>
   1c968:	add	sp, sp, #12
   1c96c:	pop	{pc}		; (ldr pc, [sp], #4)

0001c970 <myhtml_parse_chunk_end@@Base>:
   1c970:	str	r4, [sp, #-8]!
   1c974:	str	lr, [sp, #4]
   1c978:	bl	10208 <myhtml_tokenizer_end@plt>
   1c97c:	ldr	r4, [sp]
   1c980:	add	sp, sp, #4
   1c984:	pop	{pc}		; (ldr pc, [sp], #4)

0001c988 <myhtml_encoding_set@@Base>:
   1c988:	cmp	r1, #41	; 0x29
   1c98c:	strls	r1, [r0, #204]	; 0xcc
   1c990:	strls	r1, [r0, #200]	; 0xc8
   1c994:	bx	lr

0001c998 <myhtml_parse@@Base>:
   1c998:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c99c:	strd	r6, [sp, #8]
   1c9a0:	str	r8, [sp, #16]
   1c9a4:	str	lr, [sp, #20]
   1c9a8:	mov	r4, r0
   1c9ac:	mov	r7, r1
   1c9b0:	mov	r5, r2
   1c9b4:	mov	r6, r3
   1c9b8:	ldr	r3, [r0, #180]	; 0xb4
   1c9bc:	tst	r3, #32
   1c9c0:	bne	1c9fc <myhtml_parse@@Base+0x64>
   1c9c4:	mov	r1, r7
   1c9c8:	mov	r0, r4
   1c9cc:	bl	10634 <myhtml_encoding_set@plt>
   1c9d0:	mov	r2, r6
   1c9d4:	mov	r1, r5
   1c9d8:	mov	r0, r4
   1c9dc:	bl	100f4 <myhtml_tokenizer_begin@plt>
   1c9e0:	cmp	r0, #0
   1c9e4:	beq	1ca04 <myhtml_parse@@Base+0x6c>
   1c9e8:	ldrd	r4, [sp]
   1c9ec:	ldrd	r6, [sp, #8]
   1c9f0:	ldr	r8, [sp, #16]
   1c9f4:	add	sp, sp, #20
   1c9f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9fc:	bl	10664 <myhtml_tree_clean@plt>
   1ca00:	b	1c9c4 <myhtml_parse@@Base+0x2c>
   1ca04:	mov	r0, r4
   1ca08:	bl	10208 <myhtml_tokenizer_end@plt>
   1ca0c:	b	1c9e8 <myhtml_parse@@Base+0x50>

0001ca10 <myhtml_parse_fragment@@Base>:
   1ca10:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ca14:	strd	r6, [sp, #8]
   1ca18:	strd	r8, [sp, #16]
   1ca1c:	str	sl, [sp, #24]
   1ca20:	str	lr, [sp, #28]
   1ca24:	mov	r4, r0
   1ca28:	mov	r9, r1
   1ca2c:	mov	r7, r2
   1ca30:	mov	r8, r3
   1ca34:	ldr	r5, [sp, #32]
   1ca38:	ldr	r6, [sp, #36]	; 0x24
   1ca3c:	ldr	r3, [r0, #180]	; 0xb4
   1ca40:	tst	r3, #32
   1ca44:	bne	1cab0 <myhtml_parse_fragment@@Base+0xa0>
   1ca48:	cmp	r5, #0
   1ca4c:	moveq	r5, #42	; 0x2a
   1ca50:	cmp	r6, #0
   1ca54:	movne	r2, r6
   1ca58:	moveq	r2, #1
   1ca5c:	mov	r1, r5
   1ca60:	mov	r0, r4
   1ca64:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   1ca68:	cmp	r0, #0
   1ca6c:	movweq	r0, #37165	; 0x912d
   1ca70:	beq	1ca98 <myhtml_parse_fragment@@Base+0x88>
   1ca74:	mov	r1, r9
   1ca78:	mov	r0, r4
   1ca7c:	bl	10634 <myhtml_encoding_set@plt>
   1ca80:	mov	r2, r8
   1ca84:	mov	r1, r7
   1ca88:	mov	r0, r4
   1ca8c:	bl	100f4 <myhtml_tokenizer_begin@plt>
   1ca90:	cmp	r0, #0
   1ca94:	beq	1cab8 <myhtml_parse_fragment@@Base+0xa8>
   1ca98:	ldrd	r4, [sp]
   1ca9c:	ldrd	r6, [sp, #8]
   1caa0:	ldrd	r8, [sp, #16]
   1caa4:	ldr	sl, [sp, #24]
   1caa8:	add	sp, sp, #28
   1caac:	pop	{pc}		; (ldr pc, [sp], #4)
   1cab0:	bl	10664 <myhtml_tree_clean@plt>
   1cab4:	b	1ca48 <myhtml_parse_fragment@@Base+0x38>
   1cab8:	mov	r0, r4
   1cabc:	bl	10208 <myhtml_tokenizer_end@plt>
   1cac0:	b	1ca98 <myhtml_parse_fragment@@Base+0x88>

0001cac4 <myhtml_parse_single@@Base>:
   1cac4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1cac8:	strd	r6, [sp, #8]
   1cacc:	str	r8, [sp, #16]
   1cad0:	str	lr, [sp, #20]
   1cad4:	mov	r4, r0
   1cad8:	mov	r7, r1
   1cadc:	mov	r5, r2
   1cae0:	mov	r6, r3
   1cae4:	ldr	r3, [r0, #180]	; 0xb4
   1cae8:	tst	r3, #32
   1caec:	bne	1cb34 <myhtml_parse_single@@Base+0x70>
   1caf0:	ldr	r3, [r4, #180]	; 0xb4
   1caf4:	orr	r3, r3, #16
   1caf8:	str	r3, [r4, #180]	; 0xb4
   1cafc:	mov	r1, r7
   1cb00:	mov	r0, r4
   1cb04:	bl	10634 <myhtml_encoding_set@plt>
   1cb08:	mov	r2, r6
   1cb0c:	mov	r1, r5
   1cb10:	mov	r0, r4
   1cb14:	bl	100f4 <myhtml_tokenizer_begin@plt>
   1cb18:	cmp	r0, #0
   1cb1c:	beq	1cb3c <myhtml_parse_single@@Base+0x78>
   1cb20:	ldrd	r4, [sp]
   1cb24:	ldrd	r6, [sp, #8]
   1cb28:	ldr	r8, [sp, #16]
   1cb2c:	add	sp, sp, #20
   1cb30:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb34:	bl	10664 <myhtml_tree_clean@plt>
   1cb38:	b	1caf0 <myhtml_parse_single@@Base+0x2c>
   1cb3c:	mov	r0, r4
   1cb40:	bl	10208 <myhtml_tokenizer_end@plt>
   1cb44:	b	1cb20 <myhtml_parse_single@@Base+0x5c>

0001cb48 <myhtml_parse_fragment_single@@Base>:
   1cb48:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1cb4c:	strd	r6, [sp, #8]
   1cb50:	strd	r8, [sp, #16]
   1cb54:	str	sl, [sp, #24]
   1cb58:	str	lr, [sp, #28]
   1cb5c:	mov	r4, r0
   1cb60:	mov	r9, r1
   1cb64:	mov	r7, r2
   1cb68:	mov	r8, r3
   1cb6c:	ldr	r5, [sp, #32]
   1cb70:	ldr	r6, [sp, #36]	; 0x24
   1cb74:	ldr	r3, [r0, #180]	; 0xb4
   1cb78:	tst	r3, #32
   1cb7c:	bne	1cbf4 <myhtml_parse_fragment_single@@Base+0xac>
   1cb80:	cmp	r5, #0
   1cb84:	moveq	r5, #42	; 0x2a
   1cb88:	cmp	r6, #0
   1cb8c:	ldr	r3, [r4, #180]	; 0xb4
   1cb90:	orr	r3, r3, #16
   1cb94:	str	r3, [r4, #180]	; 0xb4
   1cb98:	movne	r2, r6
   1cb9c:	moveq	r2, #1
   1cba0:	mov	r1, r5
   1cba4:	mov	r0, r4
   1cba8:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   1cbac:	cmp	r0, #0
   1cbb0:	movweq	r0, #37165	; 0x912d
   1cbb4:	beq	1cbdc <myhtml_parse_fragment_single@@Base+0x94>
   1cbb8:	mov	r1, r9
   1cbbc:	mov	r0, r4
   1cbc0:	bl	10634 <myhtml_encoding_set@plt>
   1cbc4:	mov	r2, r8
   1cbc8:	mov	r1, r7
   1cbcc:	mov	r0, r4
   1cbd0:	bl	100f4 <myhtml_tokenizer_begin@plt>
   1cbd4:	cmp	r0, #0
   1cbd8:	beq	1cbfc <myhtml_parse_fragment_single@@Base+0xb4>
   1cbdc:	ldrd	r4, [sp]
   1cbe0:	ldrd	r6, [sp, #8]
   1cbe4:	ldrd	r8, [sp, #16]
   1cbe8:	ldr	sl, [sp, #24]
   1cbec:	add	sp, sp, #28
   1cbf0:	pop	{pc}		; (ldr pc, [sp], #4)
   1cbf4:	bl	10664 <myhtml_tree_clean@plt>
   1cbf8:	b	1cb80 <myhtml_parse_fragment_single@@Base+0x38>
   1cbfc:	mov	r0, r4
   1cc00:	bl	10208 <myhtml_tokenizer_end@plt>
   1cc04:	b	1cbdc <myhtml_parse_fragment_single@@Base+0x94>

0001cc08 <myhtml_encoding_get@@Base>:
   1cc08:	ldr	r0, [r0, #200]	; 0xc8
   1cc0c:	bx	lr

0001cc10 <myhtml_node_first@@Base>:
   1cc10:	ldr	r3, [r0, #88]	; 0x58
   1cc14:	cmp	r3, #0
   1cc18:	beq	1cc3c <myhtml_node_first@@Base+0x2c>
   1cc1c:	ldr	r0, [r0, #84]	; 0x54
   1cc20:	cmp	r0, #0
   1cc24:	beq	1cc48 <myhtml_node_first@@Base+0x38>
   1cc28:	ldr	r0, [r0, #20]
   1cc2c:	cmp	r0, #0
   1cc30:	beq	1cc48 <myhtml_node_first@@Base+0x38>
   1cc34:	ldr	r0, [r0, #20]
   1cc38:	bx	lr
   1cc3c:	ldr	r0, [r0, #84]	; 0x54
   1cc40:	cmp	r0, #0
   1cc44:	ldrne	r0, [r0, #20]
   1cc48:	bx	lr

0001cc4c <myhtml_node_next@@Base>:
   1cc4c:	ldr	r0, [r0, #16]
   1cc50:	bx	lr

0001cc54 <myhtml_node_prev@@Base>:
   1cc54:	ldr	r0, [r0, #12]
   1cc58:	bx	lr

0001cc5c <myhtml_node_parent@@Base>:
   1cc5c:	ldr	r0, [r0, #24]
   1cc60:	bx	lr

0001cc64 <myhtml_node_child@@Base>:
   1cc64:	ldr	r0, [r0, #20]
   1cc68:	bx	lr

0001cc6c <myhtml_node_last_child@@Base>:
   1cc6c:	ldr	r0, [r0, #28]
   1cc70:	bx	lr

0001cc74 <myhtml_node_create@@Base>:
   1cc74:	strd	r4, [sp, #-16]!
   1cc78:	str	r6, [sp, #8]
   1cc7c:	str	lr, [sp, #12]
   1cc80:	mov	r5, r1
   1cc84:	mov	r4, r2
   1cc88:	bl	ff80 <myhtml_tree_node_create@plt>
   1cc8c:	str	r5, [r0, #4]
   1cc90:	str	r4, [r0, #8]
   1cc94:	ldrd	r4, [sp]
   1cc98:	ldr	r6, [sp, #8]
   1cc9c:	add	sp, sp, #12
   1cca0:	pop	{pc}		; (ldr pc, [sp], #4)

0001cca4 <myhtml_node_remove@@Base>:
   1cca4:	str	r4, [sp, #-8]!
   1cca8:	str	lr, [sp, #4]
   1ccac:	bl	10d84 <myhtml_tree_node_remove@plt>
   1ccb0:	ldr	r4, [sp]
   1ccb4:	add	sp, sp, #4
   1ccb8:	pop	{pc}		; (ldr pc, [sp], #4)

0001ccbc <myhtml_node_delete@@Base>:
   1ccbc:	str	r4, [sp, #-8]!
   1ccc0:	str	lr, [sp, #4]
   1ccc4:	bl	10d54 <myhtml_tree_node_delete@plt>
   1ccc8:	ldr	r4, [sp]
   1cccc:	add	sp, sp, #4
   1ccd0:	pop	{pc}		; (ldr pc, [sp], #4)

0001ccd4 <myhtml_node_delete_recursive@@Base>:
   1ccd4:	str	r4, [sp, #-8]!
   1ccd8:	str	lr, [sp, #4]
   1ccdc:	bl	ff8c <myhtml_tree_node_delete_recursive@plt>
   1cce0:	ldr	r4, [sp]
   1cce4:	add	sp, sp, #4
   1cce8:	pop	{pc}		; (ldr pc, [sp], #4)

0001ccec <myhtml_node_free@@Base>:
   1ccec:	str	r4, [sp, #-8]!
   1ccf0:	str	lr, [sp, #4]
   1ccf4:	bl	10c94 <myhtml_tree_node_free@plt>
   1ccf8:	ldr	r4, [sp]
   1ccfc:	add	sp, sp, #4
   1cd00:	pop	{pc}		; (ldr pc, [sp], #4)

0001cd04 <myhtml_node_insert_before@@Base>:
   1cd04:	cmp	r1, #0
   1cd08:	cmpne	r0, #0
   1cd0c:	beq	1cd30 <myhtml_node_insert_before@@Base+0x2c>
   1cd10:	str	r4, [sp, #-8]!
   1cd14:	str	lr, [sp, #4]
   1cd18:	mov	r4, r1
   1cd1c:	bl	10388 <myhtml_tree_node_insert_before@plt>
   1cd20:	mov	r0, r4
   1cd24:	ldr	r4, [sp]
   1cd28:	add	sp, sp, #4
   1cd2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd30:	mov	r0, #0
   1cd34:	bx	lr

0001cd38 <myhtml_node_insert_after@@Base>:
   1cd38:	cmp	r1, #0
   1cd3c:	cmpne	r0, #0
   1cd40:	beq	1cd64 <myhtml_node_insert_after@@Base+0x2c>
   1cd44:	str	r4, [sp, #-8]!
   1cd48:	str	lr, [sp, #4]
   1cd4c:	mov	r4, r1
   1cd50:	bl	102f8 <myhtml_tree_node_insert_after@plt>
   1cd54:	mov	r0, r4
   1cd58:	ldr	r4, [sp]
   1cd5c:	add	sp, sp, #4
   1cd60:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd64:	mov	r0, #0
   1cd68:	bx	lr

0001cd6c <myhtml_node_append_child@@Base>:
   1cd6c:	cmp	r1, #0
   1cd70:	cmpne	r0, #0
   1cd74:	beq	1cd98 <myhtml_node_append_child@@Base+0x2c>
   1cd78:	str	r4, [sp, #-8]!
   1cd7c:	str	lr, [sp, #4]
   1cd80:	mov	r4, r1
   1cd84:	bl	1064c <myhtml_tree_node_add_child@plt>
   1cd88:	mov	r0, r4
   1cd8c:	ldr	r4, [sp]
   1cd90:	add	sp, sp, #4
   1cd94:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd98:	mov	r0, #0
   1cd9c:	bx	lr

0001cda0 <myhtml_node_insert_to_appropriate_place@@Base>:
   1cda0:	cmp	r1, #0
   1cda4:	cmpne	r0, #0
   1cda8:	beq	1cdfc <myhtml_node_insert_to_appropriate_place@@Base+0x5c>
   1cdac:	str	r4, [sp, #-8]!
   1cdb0:	str	lr, [sp, #4]
   1cdb4:	sub	sp, sp, #8
   1cdb8:	mov	r4, r1
   1cdbc:	ldr	r3, [r0, #40]	; 0x28
   1cdc0:	mov	r2, #1
   1cdc4:	strb	r2, [r3, #188]	; 0xbc
   1cdc8:	add	r1, sp, #4
   1cdcc:	bl	109c4 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1cdd0:	ldr	r3, [r0, #40]	; 0x28
   1cdd4:	mov	r2, #0
   1cdd8:	strb	r2, [r3, #188]	; 0xbc
   1cddc:	ldr	r2, [sp, #4]
   1cde0:	mov	r1, r4
   1cde4:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   1cde8:	mov	r0, r4
   1cdec:	add	sp, sp, #8
   1cdf0:	ldr	r4, [sp]
   1cdf4:	add	sp, sp, #4
   1cdf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cdfc:	mov	r0, #0
   1ce00:	bx	lr

0001ce04 <myhtml_node_text_set@@Base>:
   1ce04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ce08:	strd	r6, [sp, #8]
   1ce0c:	str	r8, [sp, #16]
   1ce10:	str	lr, [sp, #20]
   1ce14:	mov	r4, r0
   1ce18:	clz	r0, r0
   1ce1c:	lsr	r0, r0, #5
   1ce20:	cmp	r3, #41	; 0x29
   1ce24:	orrhi	r0, r0, #1
   1ce28:	cmp	r0, #0
   1ce2c:	movne	r0, #0
   1ce30:	bne	1ceb0 <myhtml_node_text_set@@Base+0xac>
   1ce34:	mov	r6, r3
   1ce38:	mov	r5, r2
   1ce3c:	mov	r7, r1
   1ce40:	ldr	r8, [r4, #40]	; 0x28
   1ce44:	ldr	r3, [r4, #32]
   1ce48:	cmp	r3, #0
   1ce4c:	beq	1cec4 <myhtml_node_text_set@@Base+0xc0>
   1ce50:	ldr	r0, [r4, #32]
   1ce54:	ldr	r2, [r0, #4]
   1ce58:	cmp	r2, #0
   1ce5c:	beq	1ceec <myhtml_node_text_set@@Base+0xe8>
   1ce60:	ldr	r3, [r0, #8]
   1ce64:	cmp	r3, r5
   1ce68:	movcs	r3, #0
   1ce6c:	strcs	r3, [r0, #12]
   1ce70:	bcc	1cf04 <myhtml_node_text_set@@Base+0x100>
   1ce74:	cmp	r6, #0
   1ce78:	beq	1cf2c <myhtml_node_text_set@@Base+0x128>
   1ce7c:	ldr	r0, [r4, #32]
   1ce80:	mov	r3, r6
   1ce84:	mov	r2, r5
   1ce88:	mov	r1, r7
   1ce8c:	add	r0, r0, #4
   1ce90:	bl	103f4 <myencoding_string_append@plt>
   1ce94:	ldr	r2, [r4, #32]
   1ce98:	mov	r3, #0
   1ce9c:	str	r3, [r2, #24]
   1cea0:	ldr	r2, [r4, #32]
   1cea4:	str	r3, [r2, #28]
   1cea8:	ldr	r0, [r4, #32]
   1ceac:	add	r0, r0, #4
   1ceb0:	ldrd	r4, [sp]
   1ceb4:	ldrd	r6, [sp, #8]
   1ceb8:	ldr	r8, [sp, #16]
   1cebc:	add	sp, sp, #20
   1cec0:	pop	{pc}		; (ldr pc, [sp], #4)
   1cec4:	ldr	r1, [r8, #40]	; 0x28
   1cec8:	ldr	r0, [r8, #8]
   1cecc:	bl	109a0 <myhtml_token_node_create@plt>
   1ced0:	str	r0, [r4, #32]
   1ced4:	cmp	r0, #0
   1ced8:	beq	1ceb0 <myhtml_node_text_set@@Base+0xac>
   1cedc:	ldr	r3, [r0, #48]	; 0x30
   1cee0:	orr	r3, r3, #4
   1cee4:	str	r3, [r0, #48]	; 0x30
   1cee8:	b	1ce50 <myhtml_node_text_set@@Base+0x4c>
   1ceec:	add	r3, r5, #2
   1cef0:	add	r2, r0, #4
   1cef4:	ldr	r1, [r8, #52]	; 0x34
   1cef8:	ldr	r0, [r8, #4]
   1cefc:	bl	105a4 <mycore_string_init@plt>
   1cf00:	b	1ce74 <myhtml_node_text_set@@Base+0x70>
   1cf04:	ldr	r1, [r0, #20]
   1cf08:	ldr	r0, [r8, #4]
   1cf0c:	bl	106ac <mchar_async_free@plt>
   1cf10:	ldr	r2, [r4, #32]
   1cf14:	mov	r3, r5
   1cf18:	add	r2, r2, #4
   1cf1c:	ldr	r1, [r8, #52]	; 0x34
   1cf20:	ldr	r0, [r8, #4]
   1cf24:	bl	105a4 <mycore_string_init@plt>
   1cf28:	b	1ce74 <myhtml_node_text_set@@Base+0x70>
   1cf2c:	ldr	r0, [r4, #32]
   1cf30:	mov	r2, r5
   1cf34:	mov	r1, r7
   1cf38:	add	r0, r0, #4
   1cf3c:	bl	10868 <mycore_string_append@plt>
   1cf40:	b	1ce94 <myhtml_node_text_set@@Base+0x90>

0001cf44 <myhtml_node_text_set_with_charef@@Base>:
   1cf44:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1cf48:	strd	r6, [sp, #8]
   1cf4c:	str	r8, [sp, #16]
   1cf50:	str	lr, [sp, #20]
   1cf54:	sub	sp, sp, #64	; 0x40
   1cf58:	mov	r4, r0
   1cf5c:	clz	r0, r0
   1cf60:	lsr	r0, r0, #5
   1cf64:	cmp	r3, #41	; 0x29
   1cf68:	orrhi	r0, r0, #1
   1cf6c:	cmp	r0, #0
   1cf70:	movne	r0, #0
   1cf74:	bne	1d014 <myhtml_node_text_set_with_charef@@Base+0xd0>
   1cf78:	mov	r7, r3
   1cf7c:	mov	r5, r2
   1cf80:	mov	r8, r1
   1cf84:	ldr	r6, [r4, #40]	; 0x28
   1cf88:	ldr	r3, [r4, #32]
   1cf8c:	cmp	r3, #0
   1cf90:	beq	1d02c <myhtml_node_text_set_with_charef@@Base+0xe8>
   1cf94:	ldr	r0, [r4, #32]
   1cf98:	ldr	r2, [r0, #4]
   1cf9c:	cmp	r2, #0
   1cfa0:	beq	1d054 <myhtml_node_text_set_with_charef@@Base+0x110>
   1cfa4:	ldr	r3, [r0, #8]
   1cfa8:	cmp	r3, r5
   1cfac:	movcs	r3, #0
   1cfb0:	strcs	r3, [r0, #12]
   1cfb4:	bcc	1d06c <myhtml_node_text_set_with_charef@@Base+0x128>
   1cfb8:	mov	r6, sp
   1cfbc:	mov	r0, r6
   1cfc0:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1cfc4:	str	r7, [sp, #4]
   1cfc8:	add	r0, sp, #8
   1cfcc:	bl	10160 <myencoding_result_clean@plt>
   1cfd0:	ldr	r1, [r4, #32]
   1cfd4:	mov	r3, r5
   1cfd8:	mov	r2, r8
   1cfdc:	add	r1, r1, #4
   1cfe0:	mov	r0, r6
   1cfe4:	bl	106e8 <myhtml_data_process@plt>
   1cfe8:	ldr	r1, [r4, #32]
   1cfec:	add	r1, r1, #4
   1cff0:	mov	r0, r6
   1cff4:	bl	108bc <myhtml_data_process_end@plt>
   1cff8:	ldr	r2, [r4, #32]
   1cffc:	mov	r3, #0
   1d000:	str	r3, [r2, #24]
   1d004:	ldr	r2, [r4, #32]
   1d008:	str	r3, [r2, #28]
   1d00c:	ldr	r0, [r4, #32]
   1d010:	add	r0, r0, #4
   1d014:	add	sp, sp, #64	; 0x40
   1d018:	ldrd	r4, [sp]
   1d01c:	ldrd	r6, [sp, #8]
   1d020:	ldr	r8, [sp, #16]
   1d024:	add	sp, sp, #20
   1d028:	pop	{pc}		; (ldr pc, [sp], #4)
   1d02c:	ldr	r1, [r6, #40]	; 0x28
   1d030:	ldr	r0, [r6, #8]
   1d034:	bl	109a0 <myhtml_token_node_create@plt>
   1d038:	str	r0, [r4, #32]
   1d03c:	cmp	r0, #0
   1d040:	beq	1d014 <myhtml_node_text_set_with_charef@@Base+0xd0>
   1d044:	ldr	r3, [r0, #48]	; 0x30
   1d048:	orr	r3, r3, #4
   1d04c:	str	r3, [r0, #48]	; 0x30
   1d050:	b	1cf94 <myhtml_node_text_set_with_charef@@Base+0x50>
   1d054:	add	r3, r5, #2
   1d058:	add	r2, r0, #4
   1d05c:	ldr	r1, [r6, #52]	; 0x34
   1d060:	ldr	r0, [r6, #4]
   1d064:	bl	105a4 <mycore_string_init@plt>
   1d068:	b	1cfb8 <myhtml_node_text_set_with_charef@@Base+0x74>
   1d06c:	ldr	r1, [r0, #20]
   1d070:	ldr	r0, [r6, #4]
   1d074:	bl	106ac <mchar_async_free@plt>
   1d078:	ldr	r2, [r4, #32]
   1d07c:	mov	r3, r5
   1d080:	add	r2, r2, #4
   1d084:	ldr	r1, [r6, #52]	; 0x34
   1d088:	ldr	r0, [r6, #4]
   1d08c:	bl	105a4 <mycore_string_init@plt>
   1d090:	b	1cfb8 <myhtml_node_text_set_with_charef@@Base+0x74>

0001d094 <myhtml_node_token@@Base>:
   1d094:	ldr	r0, [r0, #32]
   1d098:	bx	lr

0001d09c <myhtml_node_namespace@@Base>:
   1d09c:	ldr	r0, [r0, #8]
   1d0a0:	bx	lr

0001d0a4 <myhtml_node_namespace_set@@Base>:
   1d0a4:	str	r1, [r0, #8]
   1d0a8:	bx	lr

0001d0ac <myhtml_node_tag_id@@Base>:
   1d0ac:	ldr	r0, [r0, #4]
   1d0b0:	bx	lr

0001d0b4 <myhtml_tag_name_by_id@@Base>:
   1d0b4:	str	r4, [sp, #-8]!
   1d0b8:	str	lr, [sp, #4]
   1d0bc:	subs	r4, r2, #0
   1d0c0:	movne	r3, #0
   1d0c4:	strne	r3, [r4]
   1d0c8:	cmp	r0, #0
   1d0cc:	beq	1d0f8 <myhtml_tag_name_by_id@@Base+0x44>
   1d0d0:	ldr	r0, [r0, #28]
   1d0d4:	cmp	r0, #0
   1d0d8:	beq	1d0f8 <myhtml_tag_name_by_id@@Base+0x44>
   1d0dc:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1d0e0:	cmp	r0, #0
   1d0e4:	beq	1d0f8 <myhtml_tag_name_by_id@@Base+0x44>
   1d0e8:	cmp	r4, #0
   1d0ec:	ldrne	r3, [r0, #8]
   1d0f0:	strne	r3, [r4]
   1d0f4:	ldr	r0, [r0, #4]
   1d0f8:	ldr	r4, [sp]
   1d0fc:	add	sp, sp, #4
   1d100:	pop	{pc}		; (ldr pc, [sp], #4)

0001d104 <myhtml_tag_id_by_name@@Base>:
   1d104:	cmp	r0, #0
   1d108:	beq	1d13c <myhtml_tag_id_by_name@@Base+0x38>
   1d10c:	ldr	r0, [r0, #28]
   1d110:	cmp	r0, #0
   1d114:	beq	1d144 <myhtml_tag_id_by_name@@Base+0x40>
   1d118:	str	r4, [sp, #-8]!
   1d11c:	str	lr, [sp, #4]
   1d120:	bl	10b08 <myhtml_tag_get_by_name@plt>
   1d124:	cmp	r0, #0
   1d128:	moveq	r0, #0
   1d12c:	ldrne	r0, [r0]
   1d130:	ldr	r4, [sp]
   1d134:	add	sp, sp, #4
   1d138:	pop	{pc}		; (ldr pc, [sp], #4)
   1d13c:	mov	r0, #0
   1d140:	bx	lr
   1d144:	mov	r0, #0
   1d148:	bx	lr

0001d14c <myhtml_node_is_close_self@@Base>:
   1d14c:	ldr	r3, [r0, #32]
   1d150:	cmp	r3, #0
   1d154:	ldrne	r0, [r3, #48]	; 0x30
   1d158:	ubfxne	r0, r0, #1, #1
   1d15c:	moveq	r0, #0
   1d160:	bx	lr

0001d164 <myhtml_node_is_void_element@@Base>:
   1d164:	ldr	r3, [r0, #4]
   1d168:	sub	r3, r3, #10
   1d16c:	cmp	r3, #132	; 0x84
   1d170:	addls	pc, pc, r3, lsl #2
   1d174:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d178:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d17c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d180:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d184:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d188:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d18c:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d190:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d194:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d198:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d19c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1a0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1a4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1a8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1ac:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1b0:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d1b4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1b8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1bc:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1c0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1c4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1c8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1cc:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d1d0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1d4:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d1d8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1dc:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1e0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1e4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1e8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1ec:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1f0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1f4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1f8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d1fc:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d200:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d204:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d208:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d20c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d210:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d214:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d218:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d21c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d220:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d224:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d228:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d22c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d230:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d234:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d238:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d23c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d240:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d244:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d248:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d24c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d250:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d254:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d258:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d25c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d260:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d264:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d268:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d26c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d270:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d274:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d278:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d27c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d280:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d284:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d288:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d28c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d290:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d294:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d298:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d29c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2a0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2a4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2a8:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d2ac:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2b0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2b4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2b8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2bc:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2c0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2c4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2c8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2cc:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2d0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2d4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2d8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2dc:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2e0:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d2e4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2e8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2ec:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2f0:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2f4:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2f8:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d2fc:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d300:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d304:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d308:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d30c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d310:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d314:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d318:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d31c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d320:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d324:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d328:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d32c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d330:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d334:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d338:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d33c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d340:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d344:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d348:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d34c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d350:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d354:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d358:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d35c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d360:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d364:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d368:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d36c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d370:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d374:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d378:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d37c:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d380:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d384:	b	1d38c <myhtml_node_is_void_element@@Base+0x228>
   1d388:	b	1d394 <myhtml_node_is_void_element@@Base+0x230>
   1d38c:	mov	r0, #0
   1d390:	bx	lr
   1d394:	mov	r0, #1
   1d398:	bx	lr

0001d39c <myhtml_node_attribute_first@@Base>:
   1d39c:	ldr	r0, [r0, #32]
   1d3a0:	cmp	r0, #0
   1d3a4:	ldrne	r0, [r0, #40]	; 0x28
   1d3a8:	bx	lr

0001d3ac <myhtml_node_attribute_last@@Base>:
   1d3ac:	ldr	r0, [r0, #32]
   1d3b0:	cmp	r0, #0
   1d3b4:	ldrne	r0, [r0, #44]	; 0x2c
   1d3b8:	bx	lr

0001d3bc <myhtml_node_text@@Base>:
   1d3bc:	ldr	r3, [r0, #32]
   1d3c0:	cmp	r3, #0
   1d3c4:	beq	1d3f4 <myhtml_node_text@@Base+0x38>
   1d3c8:	ldr	r2, [r3, #12]
   1d3cc:	cmp	r2, #0
   1d3d0:	beq	1d3f4 <myhtml_node_text@@Base+0x38>
   1d3d4:	ldr	r3, [r3, #4]
   1d3d8:	cmp	r3, #0
   1d3dc:	beq	1d3f4 <myhtml_node_text@@Base+0x38>
   1d3e0:	cmp	r1, #0
   1d3e4:	strne	r2, [r1]
   1d3e8:	ldr	r3, [r0, #32]
   1d3ec:	ldr	r0, [r3, #4]
   1d3f0:	bx	lr
   1d3f4:	cmp	r1, #0
   1d3f8:	movne	r0, #0
   1d3fc:	strne	r0, [r1]
   1d400:	moveq	r0, r1
   1d404:	bx	lr

0001d408 <myhtml_node_string@@Base>:
   1d408:	cmp	r0, #0
   1d40c:	beq	1d41c <myhtml_node_string@@Base+0x14>
   1d410:	ldr	r0, [r0, #32]
   1d414:	cmp	r0, #0
   1d418:	addne	r0, r0, #4
   1d41c:	bx	lr

0001d420 <myhtml_node_raw_position@@Base>:
   1d420:	cmp	r1, #0
   1d424:	beq	1d448 <myhtml_node_raw_position@@Base+0x28>
   1d428:	ldr	r3, [r1, #32]
   1d42c:	cmp	r3, #0
   1d430:	beq	1d448 <myhtml_node_raw_position@@Base+0x28>
   1d434:	ldr	r2, [r3, #28]
   1d438:	ldr	r3, [r3, #24]
   1d43c:	str	r3, [r0]
   1d440:	str	r2, [r0, #4]
   1d444:	bx	lr
   1d448:	mov	r3, #0
   1d44c:	str	r3, [r0]
   1d450:	str	r3, [r0, #4]
   1d454:	bx	lr

0001d458 <myhtml_node_element_position@@Base>:
   1d458:	cmp	r1, #0
   1d45c:	beq	1d480 <myhtml_node_element_position@@Base+0x28>
   1d460:	ldr	r3, [r1, #32]
   1d464:	cmp	r3, #0
   1d468:	beq	1d480 <myhtml_node_element_position@@Base+0x28>
   1d46c:	ldr	r2, [r3, #36]	; 0x24
   1d470:	ldr	r3, [r3, #32]
   1d474:	str	r3, [r0]
   1d478:	str	r2, [r0, #4]
   1d47c:	bx	lr
   1d480:	mov	r3, #0
   1d484:	str	r3, [r0]
   1d488:	str	r3, [r0, #4]
   1d48c:	bx	lr

0001d490 <myhtml_node_set_data@@Base>:
   1d490:	str	r1, [r0, #36]	; 0x24
   1d494:	bx	lr

0001d498 <myhtml_node_get_data@@Base>:
   1d498:	ldr	r0, [r0, #36]	; 0x24
   1d49c:	bx	lr

0001d4a0 <myhtml_node_tree@@Base>:
   1d4a0:	ldr	r0, [r0, #40]	; 0x28
   1d4a4:	bx	lr

0001d4a8 <myhtml_attribute_next@@Base>:
   1d4a8:	ldr	r0, [r0]
   1d4ac:	bx	lr

0001d4b0 <myhtml_attribute_prev@@Base>:
   1d4b0:	ldr	r0, [r0, #4]
   1d4b4:	bx	lr

0001d4b8 <myhtml_attribute_namespace@@Base>:
   1d4b8:	ldr	r0, [r0, #64]	; 0x40
   1d4bc:	bx	lr

0001d4c0 <myhtml_attribute_namespace_set@@Base>:
   1d4c0:	str	r1, [r0, #64]	; 0x40
   1d4c4:	bx	lr

0001d4c8 <myhtml_attribute_key@@Base>:
   1d4c8:	ldr	r3, [r0, #8]
   1d4cc:	cmp	r3, #0
   1d4d0:	beq	1d4e0 <myhtml_attribute_key@@Base+0x18>
   1d4d4:	ldr	r3, [r0, #16]
   1d4d8:	cmp	r3, #0
   1d4dc:	bne	1d4f4 <myhtml_attribute_key@@Base+0x2c>
   1d4e0:	cmp	r1, #0
   1d4e4:	movne	r0, #0
   1d4e8:	strne	r0, [r1]
   1d4ec:	moveq	r0, r1
   1d4f0:	bx	lr
   1d4f4:	cmp	r1, #0
   1d4f8:	strne	r3, [r1]
   1d4fc:	ldr	r0, [r0, #8]
   1d500:	bx	lr

0001d504 <myhtml_attribute_value@@Base>:
   1d504:	ldr	r3, [r0, #28]
   1d508:	cmp	r3, #0
   1d50c:	beq	1d51c <myhtml_attribute_value@@Base+0x18>
   1d510:	ldr	r3, [r0, #36]	; 0x24
   1d514:	cmp	r3, #0
   1d518:	bne	1d530 <myhtml_attribute_value@@Base+0x2c>
   1d51c:	cmp	r1, #0
   1d520:	movne	r0, #0
   1d524:	strne	r0, [r1]
   1d528:	moveq	r0, r1
   1d52c:	bx	lr
   1d530:	cmp	r1, #0
   1d534:	strne	r3, [r1]
   1d538:	ldr	r0, [r0, #28]
   1d53c:	bx	lr

0001d540 <myhtml_attribute_key_string@@Base>:
   1d540:	cmp	r0, #0
   1d544:	addne	r0, r0, #8
   1d548:	bx	lr

0001d54c <myhtml_attribute_value_string@@Base>:
   1d54c:	cmp	r0, #0
   1d550:	addne	r0, r0, #28
   1d554:	bx	lr

0001d558 <myhtml_attribute_by_key@@Base>:
   1d558:	cmp	r0, #0
   1d55c:	bxeq	lr
   1d560:	ldr	r0, [r0, #32]
   1d564:	cmp	r0, #0
   1d568:	bxeq	lr
   1d56c:	str	r4, [sp, #-8]!
   1d570:	str	lr, [sp, #4]
   1d574:	bl	10e44 <myhtml_token_attr_by_name@plt>
   1d578:	ldr	r4, [sp]
   1d57c:	add	sp, sp, #4
   1d580:	pop	{pc}		; (ldr pc, [sp], #4)

0001d584 <myhtml_attribute_add@@Base>:
   1d584:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d588:	strd	r6, [sp, #8]
   1d58c:	str	r8, [sp, #16]
   1d590:	str	lr, [sp, #20]
   1d594:	sub	sp, sp, #16
   1d598:	subs	r4, r0, #0
   1d59c:	beq	1d62c <myhtml_attribute_add@@Base+0xa8>
   1d5a0:	mov	r8, r3
   1d5a4:	mov	r7, r2
   1d5a8:	mov	r6, r1
   1d5ac:	ldr	r5, [r4, #40]	; 0x28
   1d5b0:	ldr	r3, [r4, #32]
   1d5b4:	cmp	r3, #0
   1d5b8:	beq	1d604 <myhtml_attribute_add@@Base+0x80>
   1d5bc:	ldr	r0, [r5, #8]
   1d5c0:	ldr	r3, [sp, #44]	; 0x2c
   1d5c4:	str	r3, [sp, #12]
   1d5c8:	ldr	r3, [r5, #40]	; 0x28
   1d5cc:	str	r3, [sp, #8]
   1d5d0:	ldr	r3, [sp, #40]	; 0x28
   1d5d4:	str	r3, [sp, #4]
   1d5d8:	str	r8, [sp]
   1d5dc:	mov	r3, r7
   1d5e0:	mov	r2, r6
   1d5e4:	ldr	r1, [r4, #32]
   1d5e8:	bl	10784 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1d5ec:	add	sp, sp, #16
   1d5f0:	ldrd	r4, [sp]
   1d5f4:	ldrd	r6, [sp, #8]
   1d5f8:	ldr	r8, [sp, #16]
   1d5fc:	add	sp, sp, #20
   1d600:	pop	{pc}		; (ldr pc, [sp], #4)
   1d604:	ldr	r1, [r5, #40]	; 0x28
   1d608:	ldr	r0, [r5, #8]
   1d60c:	bl	109a0 <myhtml_token_node_create@plt>
   1d610:	str	r0, [r4, #32]
   1d614:	cmp	r0, #0
   1d618:	beq	1d5ec <myhtml_attribute_add@@Base+0x68>
   1d61c:	ldr	r3, [r0, #48]	; 0x30
   1d620:	orr	r3, r3, #4
   1d624:	str	r3, [r0, #48]	; 0x30
   1d628:	b	1d5bc <myhtml_attribute_add@@Base+0x38>
   1d62c:	mov	r0, r4
   1d630:	b	1d5ec <myhtml_attribute_add@@Base+0x68>

0001d634 <myhtml_attribute_remove@@Base>:
   1d634:	cmp	r0, #0
   1d638:	bxeq	lr
   1d63c:	ldr	r0, [r0, #32]
   1d640:	cmp	r0, #0
   1d644:	bxeq	lr
   1d648:	str	r4, [sp, #-8]!
   1d64c:	str	lr, [sp, #4]
   1d650:	bl	10508 <myhtml_token_attr_remove@plt>
   1d654:	ldr	r4, [sp]
   1d658:	add	sp, sp, #4
   1d65c:	pop	{pc}		; (ldr pc, [sp], #4)

0001d660 <myhtml_attribute_remove_by_key@@Base>:
   1d660:	cmp	r0, #0
   1d664:	bxeq	lr
   1d668:	ldr	r0, [r0, #32]
   1d66c:	cmp	r0, #0
   1d670:	bxeq	lr
   1d674:	str	r4, [sp, #-8]!
   1d678:	str	lr, [sp, #4]
   1d67c:	bl	10e2c <myhtml_token_attr_remove_by_name@plt>
   1d680:	ldr	r4, [sp]
   1d684:	add	sp, sp, #4
   1d688:	pop	{pc}		; (ldr pc, [sp], #4)

0001d68c <myhtml_attribute_free@@Base>:
   1d68c:	strd	r4, [sp, #-16]!
   1d690:	str	r6, [sp, #8]
   1d694:	str	lr, [sp, #12]
   1d698:	mov	r5, r0
   1d69c:	mov	r4, r1
   1d6a0:	ldr	r2, [r1, #8]
   1d6a4:	cmp	r2, #0
   1d6a8:	beq	1d6b8 <myhtml_attribute_free@@Base+0x2c>
   1d6ac:	ldr	r1, [r1, #24]
   1d6b0:	ldr	r0, [r4, #20]
   1d6b4:	bl	106ac <mchar_async_free@plt>
   1d6b8:	ldr	r2, [r4, #28]
   1d6bc:	cmp	r2, #0
   1d6c0:	beq	1d6d0 <myhtml_attribute_free@@Base+0x44>
   1d6c4:	ldr	r1, [r4, #44]	; 0x2c
   1d6c8:	ldr	r0, [r4, #40]	; 0x28
   1d6cc:	bl	106ac <mchar_async_free@plt>
   1d6d0:	ldr	r3, [r5, #8]
   1d6d4:	mov	r1, r4
   1d6d8:	ldr	r0, [r3, #8]
   1d6dc:	bl	ffec <mcobject_async_free@plt>
   1d6e0:	ldrd	r4, [sp]
   1d6e4:	ldr	r6, [sp, #8]
   1d6e8:	add	sp, sp, #12
   1d6ec:	pop	{pc}		; (ldr pc, [sp], #4)

0001d6f0 <myhtml_attribute_delete@@Base>:
   1d6f0:	cmp	r1, #0
   1d6f4:	bxeq	lr
   1d6f8:	ldr	r3, [r1, #32]
   1d6fc:	cmp	r3, #0
   1d700:	bxeq	lr
   1d704:	strd	r4, [sp, #-16]!
   1d708:	str	r6, [sp, #8]
   1d70c:	str	lr, [sp, #12]
   1d710:	mov	r4, r2
   1d714:	mov	r5, r0
   1d718:	mov	r1, r2
   1d71c:	mov	r0, r3
   1d720:	bl	10508 <myhtml_token_attr_remove@plt>
   1d724:	mov	r1, r4
   1d728:	mov	r0, r5
   1d72c:	bl	1073c <myhtml_attribute_free@plt>
   1d730:	ldrd	r4, [sp]
   1d734:	ldr	r6, [sp, #8]
   1d738:	add	sp, sp, #12
   1d73c:	pop	{pc}		; (ldr pc, [sp], #4)

0001d740 <myhtml_attribute_key_raw_position@@Base>:
   1d740:	cmp	r1, #0
   1d744:	beq	1d75c <myhtml_attribute_key_raw_position@@Base+0x1c>
   1d748:	ldr	r3, [r1, #52]	; 0x34
   1d74c:	ldr	r2, [r1, #48]	; 0x30
   1d750:	str	r2, [r0]
   1d754:	str	r3, [r0, #4]
   1d758:	bx	lr
   1d75c:	mov	r3, #0
   1d760:	str	r3, [r0]
   1d764:	str	r3, [r0, #4]
   1d768:	bx	lr

0001d76c <myhtml_attribute_value_raw_position@@Base>:
   1d76c:	cmp	r1, #0
   1d770:	beq	1d788 <myhtml_attribute_value_raw_position@@Base+0x1c>
   1d774:	ldr	r3, [r1, #60]	; 0x3c
   1d778:	ldr	r2, [r1, #56]	; 0x38
   1d77c:	str	r2, [r0]
   1d780:	str	r3, [r0, #4]
   1d784:	bx	lr
   1d788:	mov	r3, #0
   1d78c:	str	r3, [r0]
   1d790:	str	r3, [r0, #4]
   1d794:	bx	lr

0001d798 <myhtml_collection_create@@Base>:
   1d798:	strd	r4, [sp, #-16]!
   1d79c:	str	r6, [sp, #8]
   1d7a0:	str	lr, [sp, #12]
   1d7a4:	mov	r6, r0
   1d7a8:	mov	r5, r1
   1d7ac:	mov	r0, #12
   1d7b0:	bl	10c28 <mycore_malloc@plt>
   1d7b4:	subs	r4, r0, #0
   1d7b8:	beq	1d800 <myhtml_collection_create@@Base+0x68>
   1d7bc:	str	r6, [r4, #4]
   1d7c0:	mov	r3, #0
   1d7c4:	str	r3, [r4, #8]
   1d7c8:	lsl	r0, r6, #2
   1d7cc:	bl	10c28 <mycore_malloc@plt>
   1d7d0:	mov	r6, r0
   1d7d4:	str	r0, [r4]
   1d7d8:	cmp	r0, #0
   1d7dc:	beq	1d818 <myhtml_collection_create@@Base+0x80>
   1d7e0:	cmp	r5, #0
   1d7e4:	movne	r3, #0
   1d7e8:	strne	r3, [r5]
   1d7ec:	mov	r0, r4
   1d7f0:	ldrd	r4, [sp]
   1d7f4:	ldr	r6, [sp, #8]
   1d7f8:	add	sp, sp, #12
   1d7fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1d800:	cmp	r5, #0
   1d804:	moveq	r4, r5
   1d808:	beq	1d7ec <myhtml_collection_create@@Base+0x54>
   1d80c:	mov	r3, #2
   1d810:	str	r3, [r5]
   1d814:	b	1d7ec <myhtml_collection_create@@Base+0x54>
   1d818:	mov	r0, r4
   1d81c:	bl	10d60 <mycore_free@plt>
   1d820:	cmp	r5, #0
   1d824:	moveq	r4, r5
   1d828:	beq	1d7ec <myhtml_collection_create@@Base+0x54>
   1d82c:	mov	r3, #2
   1d830:	str	r3, [r5]
   1d834:	mov	r4, r6
   1d838:	b	1d7ec <myhtml_collection_create@@Base+0x54>

0001d83c <myhtml_collection_check_size@@Base>:
   1d83c:	ldr	r3, [r0, #8]
   1d840:	add	r1, r1, r3
   1d844:	ldr	r3, [r0, #4]
   1d848:	cmp	r1, r3
   1d84c:	bcs	1d858 <myhtml_collection_check_size@@Base+0x1c>
   1d850:	mov	r0, #0
   1d854:	bx	lr
   1d858:	strd	r4, [sp, #-16]!
   1d85c:	str	r6, [sp, #8]
   1d860:	str	lr, [sp, #12]
   1d864:	mov	r4, r0
   1d868:	add	r2, r2, #1
   1d86c:	add	r5, r2, r1
   1d870:	lsl	r1, r5, #2
   1d874:	ldr	r0, [r0]
   1d878:	bl	fb84 <mycore_realloc@plt>
   1d87c:	cmp	r0, #0
   1d880:	beq	1d8a0 <myhtml_collection_check_size@@Base+0x64>
   1d884:	str	r5, [r4, #4]
   1d888:	str	r0, [r4]
   1d88c:	mov	r0, #0
   1d890:	ldrd	r4, [sp]
   1d894:	ldr	r6, [sp, #8]
   1d898:	add	sp, sp, #12
   1d89c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d8a0:	mov	r0, #2
   1d8a4:	b	1d890 <myhtml_collection_check_size@@Base+0x54>

0001d8a8 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1d8a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d8ac:	strd	r6, [sp, #8]
   1d8b0:	str	r8, [sp, #16]
   1d8b4:	str	lr, [sp, #20]
   1d8b8:	subs	r4, r0, #0
   1d8bc:	beq	1d960 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xb8>
   1d8c0:	mov	r5, r1
   1d8c4:	mov	r6, r2
   1d8c8:	mov	r8, #0
   1d8cc:	mov	r7, #1024	; 0x400
   1d8d0:	b	1d92c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x84>
   1d8d4:	ldr	r2, [r5, #8]
   1d8d8:	ldr	r3, [r5]
   1d8dc:	str	r4, [r3, r2, lsl #2]
   1d8e0:	ldr	r3, [r5, #8]
   1d8e4:	add	r3, r3, #1
   1d8e8:	str	r3, [r5, #8]
   1d8ec:	ldr	r2, [r5, #4]
   1d8f0:	cmp	r3, r2
   1d8f4:	bcc	1d938 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x90>
   1d8f8:	mov	r2, r8
   1d8fc:	mov	r1, r7
   1d900:	mov	r0, r5
   1d904:	bl	10d90 <myhtml_collection_check_size@plt>
   1d908:	cmp	r0, #0
   1d90c:	beq	1d938 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x90>
   1d910:	b	1d94c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xa4>
   1d914:	mov	r2, r6
   1d918:	mov	r1, r5
   1d91c:	bl	1d8a8 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>
   1d920:	ldr	r4, [r4, #16]
   1d924:	cmp	r4, #0
   1d928:	beq	1d948 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xa0>
   1d92c:	ldr	r3, [r4, #4]
   1d930:	cmp	r3, r6
   1d934:	beq	1d8d4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x2c>
   1d938:	ldr	r0, [r4, #20]
   1d93c:	cmp	r0, #0
   1d940:	bne	1d914 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x6c>
   1d944:	b	1d920 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x78>
   1d948:	mov	r0, #0
   1d94c:	ldrd	r4, [sp]
   1d950:	ldrd	r6, [sp, #8]
   1d954:	ldr	r8, [sp, #16]
   1d958:	add	sp, sp, #20
   1d95c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d960:	mov	r0, #0
   1d964:	b	1d94c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xa4>

0001d968 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1d968:	strd	r4, [sp, #-20]!	; 0xffffffec
   1d96c:	strd	r6, [sp, #8]
   1d970:	str	lr, [sp, #16]
   1d974:	sub	sp, sp, #12
   1d978:	ldr	r5, [sp, #32]
   1d97c:	subs	r6, r2, #0
   1d980:	beq	1da20 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xb8>
   1d984:	mov	r4, r1
   1d988:	mov	r7, r3
   1d98c:	mov	r3, #0
   1d990:	str	r3, [sp, #4]
   1d994:	cmp	r1, r3
   1d998:	beq	1d9f4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x8c>
   1d99c:	ldr	r0, [r6, #20]
   1d9a0:	cmp	r0, #0
   1d9a4:	beq	1d9b8 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>
   1d9a8:	mov	r2, r7
   1d9ac:	mov	r1, r4
   1d9b0:	bl	10be0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1d9b4:	str	r0, [sp, #4]
   1d9b8:	ldr	r2, [r4, #8]
   1d9bc:	ldr	r3, [r4]
   1d9c0:	mov	r1, #0
   1d9c4:	str	r1, [r3, r2, lsl #2]
   1d9c8:	cmp	r5, r1
   1d9cc:	moveq	r0, r4
   1d9d0:	beq	1d9e0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>
   1d9d4:	ldr	r3, [sp, #4]
   1d9d8:	str	r3, [r5]
   1d9dc:	mov	r0, r4
   1d9e0:	add	sp, sp, #12
   1d9e4:	ldrd	r4, [sp]
   1d9e8:	ldrd	r6, [sp, #8]
   1d9ec:	add	sp, sp, #16
   1d9f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d9f4:	add	r1, sp, #4
   1d9f8:	mov	r0, #1024	; 0x400
   1d9fc:	bl	10298 <myhtml_collection_create@plt>
   1da00:	ldr	r3, [sp, #4]
   1da04:	cmp	r3, #0
   1da08:	beq	1da18 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xb0>
   1da0c:	cmp	r5, #0
   1da10:	strne	r3, [r5]
   1da14:	b	1d9e0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>
   1da18:	mov	r4, r0
   1da1c:	b	1d99c <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x34>
   1da20:	mov	r0, r6
   1da24:	b	1d9e0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>

0001da28 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1da28:	strd	r4, [sp, #-16]!
   1da2c:	str	r6, [sp, #8]
   1da30:	str	lr, [sp, #12]
   1da34:	sub	sp, sp, #8
   1da38:	mov	r4, r0
   1da3c:	mov	r5, r1
   1da40:	mov	r6, r2
   1da44:	ldr	r2, [sp, #24]
   1da48:	mov	r1, r3
   1da4c:	ldr	r0, [r0, #28]
   1da50:	bl	10b08 <myhtml_tag_get_by_name@plt>
   1da54:	cmp	r0, #0
   1da58:	beq	1da78 <myhtml_get_nodes_by_name_in_scope@@Base+0x50>
   1da5c:	ldr	r3, [r0]
   1da60:	ldr	r2, [sp, #28]
   1da64:	str	r2, [sp]
   1da68:	mov	r2, r6
   1da6c:	mov	r1, r5
   1da70:	mov	r0, r4
   1da74:	bl	fed8 <myhtml_get_nodes_by_tag_id_in_scope@plt>
   1da78:	add	sp, sp, #8
   1da7c:	ldrd	r4, [sp]
   1da80:	ldr	r6, [sp, #8]
   1da84:	add	sp, sp, #12
   1da88:	pop	{pc}		; (ldr pc, [sp], #4)

0001da8c <myhtml_get_nodes_by_tag_id@@Base>:
   1da8c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1da90:	strd	r6, [sp, #8]
   1da94:	strd	r8, [sp, #16]
   1da98:	str	sl, [sp, #24]
   1da9c:	str	lr, [sp, #28]
   1daa0:	mov	r9, r0
   1daa4:	mov	r6, r2
   1daa8:	mov	sl, r3
   1daac:	subs	r5, r1, #0
   1dab0:	beq	1dacc <myhtml_get_nodes_by_tag_id@@Base+0x40>
   1dab4:	ldr	r4, [r9, #96]	; 0x60
   1dab8:	cmp	r4, #0
   1dabc:	beq	1db7c <myhtml_get_nodes_by_tag_id@@Base+0xf0>
   1dac0:	mov	r8, #1024	; 0x400
   1dac4:	mov	r7, #1
   1dac8:	b	1db04 <myhtml_get_nodes_by_tag_id@@Base+0x78>
   1dacc:	mov	r0, #1024	; 0x400
   1dad0:	bl	10298 <myhtml_collection_create@plt>
   1dad4:	subs	r5, r0, #0
   1dad8:	bne	1dab4 <myhtml_get_nodes_by_tag_id@@Base+0x28>
   1dadc:	b	1dba4 <myhtml_get_nodes_by_tag_id@@Base+0x118>
   1dae0:	cmp	sl, #0
   1dae4:	beq	1dba4 <myhtml_get_nodes_by_tag_id@@Base+0x118>
   1dae8:	mov	r3, #2
   1daec:	str	r3, [sl]
   1daf0:	b	1dba4 <myhtml_get_nodes_by_tag_id@@Base+0x118>
   1daf4:	ldr	r3, [r4, #20]
   1daf8:	cmp	r3, #0
   1dafc:	beq	1db44 <myhtml_get_nodes_by_tag_id@@Base+0xb8>
   1db00:	mov	r4, r3
   1db04:	ldr	r3, [r4, #4]
   1db08:	cmp	r3, r6
   1db0c:	bne	1daf4 <myhtml_get_nodes_by_tag_id@@Base+0x68>
   1db10:	mov	r2, r8
   1db14:	mov	r1, r7
   1db18:	mov	r0, r5
   1db1c:	bl	10d90 <myhtml_collection_check_size@plt>
   1db20:	cmp	r0, #0
   1db24:	bne	1dae0 <myhtml_get_nodes_by_tag_id@@Base+0x54>
   1db28:	ldr	r2, [r5, #8]
   1db2c:	ldr	r3, [r5]
   1db30:	str	r4, [r3, r2, lsl #2]
   1db34:	ldr	r3, [r5, #8]
   1db38:	add	r3, r3, #1
   1db3c:	str	r3, [r5, #8]
   1db40:	b	1daf4 <myhtml_get_nodes_by_tag_id@@Base+0x68>
   1db44:	ldr	r2, [r9, #96]	; 0x60
   1db48:	cmp	r2, r4
   1db4c:	beq	1db7c <myhtml_get_nodes_by_tag_id@@Base+0xf0>
   1db50:	ldr	r3, [r4, #16]
   1db54:	cmp	r3, #0
   1db58:	bne	1db74 <myhtml_get_nodes_by_tag_id@@Base+0xe8>
   1db5c:	ldr	r4, [r4, #24]
   1db60:	cmp	r4, r2
   1db64:	beq	1db7c <myhtml_get_nodes_by_tag_id@@Base+0xf0>
   1db68:	ldr	r3, [r4, #16]
   1db6c:	cmp	r3, #0
   1db70:	beq	1db5c <myhtml_get_nodes_by_tag_id@@Base+0xd0>
   1db74:	ldr	r3, [r4, #16]
   1db78:	b	1db00 <myhtml_get_nodes_by_tag_id@@Base+0x74>
   1db7c:	mov	r2, #1024	; 0x400
   1db80:	mov	r1, #1
   1db84:	mov	r0, r5
   1db88:	bl	10d90 <myhtml_collection_check_size@plt>
   1db8c:	cmp	r0, #0
   1db90:	bne	1dbc0 <myhtml_get_nodes_by_tag_id@@Base+0x134>
   1db94:	ldr	r2, [r5, #8]
   1db98:	ldr	r3, [r5]
   1db9c:	mov	r1, #0
   1dba0:	str	r1, [r3, r2, lsl #2]
   1dba4:	mov	r0, r5
   1dba8:	ldrd	r4, [sp]
   1dbac:	ldrd	r6, [sp, #8]
   1dbb0:	ldrd	r8, [sp, #16]
   1dbb4:	ldr	sl, [sp, #24]
   1dbb8:	add	sp, sp, #28
   1dbbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1dbc0:	cmp	sl, #0
   1dbc4:	beq	1dba4 <myhtml_get_nodes_by_tag_id@@Base+0x118>
   1dbc8:	mov	r3, #2
   1dbcc:	str	r3, [sl]
   1dbd0:	b	1dba4 <myhtml_get_nodes_by_tag_id@@Base+0x118>

0001dbd4 <myhtml_get_nodes_by_name@@Base>:
   1dbd4:	strd	r4, [sp, #-16]!
   1dbd8:	str	r6, [sp, #8]
   1dbdc:	str	lr, [sp, #12]
   1dbe0:	mov	r4, r0
   1dbe4:	mov	r5, r1
   1dbe8:	mov	r1, r2
   1dbec:	mov	r2, r3
   1dbf0:	ldr	r0, [r0, #28]
   1dbf4:	bl	10b08 <myhtml_tag_get_by_name@plt>
   1dbf8:	cmp	r0, #0
   1dbfc:	beq	1dc14 <myhtml_get_nodes_by_name@@Base+0x40>
   1dc00:	ldr	r3, [sp, #16]
   1dc04:	ldr	r2, [r0]
   1dc08:	mov	r1, r5
   1dc0c:	mov	r0, r4
   1dc10:	bl	102b0 <myhtml_get_nodes_by_tag_id@plt>
   1dc14:	ldrd	r4, [sp]
   1dc18:	ldr	r6, [sp, #8]
   1dc1c:	add	sp, sp, #12
   1dc20:	pop	{pc}		; (ldr pc, [sp], #4)

0001dc24 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1dc24:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1dc28:	strd	r6, [sp, #8]
   1dc2c:	strd	r8, [sp, #16]
   1dc30:	strd	sl, [sp, #24]
   1dc34:	str	lr, [sp, #32]
   1dc38:	sub	sp, sp, #4
   1dc3c:	subs	r8, r0, #0
   1dc40:	beq	1dd34 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x110>
   1dc44:	mov	r6, r3
   1dc48:	mov	r9, r2
   1dc4c:	mov	r7, r1
   1dc50:	mov	r5, r8
   1dc54:	mov	fp, #0
   1dc58:	mov	sl, #1024	; 0x400
   1dc5c:	b	1dce0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xbc>
   1dc60:	ldr	r4, [r4]
   1dc64:	cmp	r4, #0
   1dc68:	beq	1dcd0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1dc6c:	ldr	r3, [r4, #16]
   1dc70:	cmp	r3, r6
   1dc74:	bne	1dc60 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x3c>
   1dc78:	mov	r2, r6
   1dc7c:	mov	r1, r9
   1dc80:	ldr	r0, [r4, #8]
   1dc84:	bl	10238 <mycore_strncasecmp@plt>
   1dc88:	cmp	r0, #0
   1dc8c:	bne	1dc60 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x3c>
   1dc90:	ldr	r2, [r7, #8]
   1dc94:	ldr	r3, [r7]
   1dc98:	str	r5, [r3, r2, lsl #2]
   1dc9c:	ldr	r3, [r7, #8]
   1dca0:	add	r3, r3, #1
   1dca4:	str	r3, [r7, #8]
   1dca8:	ldr	r2, [r7, #4]
   1dcac:	cmp	r3, r2
   1dcb0:	bcc	1dc60 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x3c>
   1dcb4:	mov	r2, fp
   1dcb8:	mov	r1, sl
   1dcbc:	mov	r0, r7
   1dcc0:	bl	10d90 <myhtml_collection_check_size@plt>
   1dcc4:	cmp	r0, #0
   1dcc8:	beq	1dc60 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x3c>
   1dccc:	b	1dd18 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xf4>
   1dcd0:	ldr	r3, [r5, #20]
   1dcd4:	cmp	r3, #0
   1dcd8:	beq	1dcfc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd8>
   1dcdc:	mov	r5, r3
   1dce0:	ldr	r3, [r5, #32]
   1dce4:	cmp	r3, #0
   1dce8:	beq	1dcd0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1dcec:	ldr	r4, [r3, #40]	; 0x28
   1dcf0:	cmp	r4, #0
   1dcf4:	beq	1dcd0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1dcf8:	b	1dc6c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x48>
   1dcfc:	ldr	r3, [r5, #16]
   1dd00:	cmp	r3, #0
   1dd04:	bne	1dcdc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xb8>
   1dd08:	ldr	r5, [r5, #24]
   1dd0c:	cmp	r8, r5
   1dd10:	bne	1dcfc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd8>
   1dd14:	mov	r0, #0
   1dd18:	add	sp, sp, #4
   1dd1c:	ldrd	r4, [sp]
   1dd20:	ldrd	r6, [sp, #8]
   1dd24:	ldrd	r8, [sp, #16]
   1dd28:	ldrd	sl, [sp, #24]
   1dd2c:	add	sp, sp, #32
   1dd30:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd34:	mov	r0, #0
   1dd38:	b	1dd18 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xf4>

0001dd3c <myhtml_get_nodes_by_attribute_key@@Base>:
   1dd3c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1dd40:	strd	r6, [sp, #8]
   1dd44:	str	r8, [sp, #16]
   1dd48:	str	lr, [sp, #20]
   1dd4c:	mov	r8, r0
   1dd50:	mov	r4, r2
   1dd54:	mov	r7, r3
   1dd58:	ldr	r6, [sp, #28]
   1dd5c:	subs	r5, r1, #0
   1dd60:	beq	1dda4 <myhtml_get_nodes_by_attribute_key@@Base+0x68>
   1dd64:	cmp	r4, #0
   1dd68:	ldreq	r4, [r8, #96]	; 0x60
   1dd6c:	ldr	r3, [sp, #24]
   1dd70:	mov	r2, r7
   1dd74:	mov	r1, r5
   1dd78:	mov	r0, r4
   1dd7c:	bl	fe48 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1dd80:	cmp	r0, #0
   1dd84:	cmpne	r6, #0
   1dd88:	strne	r0, [r6]
   1dd8c:	mov	r0, r5
   1dd90:	ldrd	r4, [sp]
   1dd94:	ldrd	r6, [sp, #8]
   1dd98:	ldr	r8, [sp, #16]
   1dd9c:	add	sp, sp, #20
   1dda0:	pop	{pc}		; (ldr pc, [sp], #4)
   1dda4:	mov	r1, r6
   1dda8:	mov	r0, #1024	; 0x400
   1ddac:	bl	10298 <myhtml_collection_create@plt>
   1ddb0:	cmp	r6, #0
   1ddb4:	beq	1ddc4 <myhtml_get_nodes_by_attribute_key@@Base+0x88>
   1ddb8:	ldr	r3, [r6]
   1ddbc:	cmp	r3, #0
   1ddc0:	bne	1dd8c <myhtml_get_nodes_by_attribute_key@@Base+0x50>
   1ddc4:	cmp	r0, #0
   1ddc8:	beq	1ddd4 <myhtml_get_nodes_by_attribute_key@@Base+0x98>
   1ddcc:	mov	r5, r0
   1ddd0:	b	1dd64 <myhtml_get_nodes_by_attribute_key@@Base+0x28>
   1ddd4:	mov	r5, r0
   1ddd8:	b	1dd8c <myhtml_get_nodes_by_attribute_key@@Base+0x50>

0001dddc <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1dddc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1dde0:	strd	r6, [sp, #8]
   1dde4:	strd	r8, [sp, #16]
   1dde8:	strd	sl, [sp, #24]
   1ddec:	str	lr, [sp, #32]
   1ddf0:	sub	sp, sp, #4
   1ddf4:	ldr	r9, [sp, #40]	; 0x28
   1ddf8:	subs	sl, r0, #0
   1ddfc:	beq	1dee0 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x104>
   1de00:	mov	r8, r3
   1de04:	mov	r7, r2
   1de08:	mov	r5, r1
   1de0c:	mov	r6, sl
   1de10:	mov	fp, #0
   1de14:	b	1de8c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb0>
   1de18:	ldr	r4, [r4]
   1de1c:	cmp	r4, #0
   1de20:	beq	1de7c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa0>
   1de24:	mov	r2, r9
   1de28:	mov	r1, r8
   1de2c:	add	r0, r4, #28
   1de30:	blx	r7
   1de34:	cmp	r0, #0
   1de38:	beq	1de18 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x3c>
   1de3c:	ldr	r2, [r5, #8]
   1de40:	ldr	r3, [r5]
   1de44:	str	r6, [r3, r2, lsl #2]
   1de48:	ldr	r3, [r5, #8]
   1de4c:	add	r3, r3, #1
   1de50:	str	r3, [r5, #8]
   1de54:	ldr	r2, [r5, #4]
   1de58:	cmp	r3, r2
   1de5c:	bcc	1de18 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x3c>
   1de60:	mov	r2, fp
   1de64:	mov	r1, #1024	; 0x400
   1de68:	mov	r0, r5
   1de6c:	bl	10d90 <myhtml_collection_check_size@plt>
   1de70:	cmp	r0, #0
   1de74:	beq	1de18 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x3c>
   1de78:	b	1dec4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xe8>
   1de7c:	ldr	r3, [r6, #20]
   1de80:	cmp	r3, #0
   1de84:	beq	1dea8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xcc>
   1de88:	mov	r6, r3
   1de8c:	ldr	r3, [r6, #32]
   1de90:	cmp	r3, #0
   1de94:	beq	1de7c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa0>
   1de98:	ldr	r4, [r3, #40]	; 0x28
   1de9c:	cmp	r4, #0
   1dea0:	beq	1de7c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa0>
   1dea4:	b	1de24 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x48>
   1dea8:	ldr	r3, [r6, #16]
   1deac:	cmp	r3, #0
   1deb0:	bne	1de88 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xac>
   1deb4:	ldr	r6, [r6, #24]
   1deb8:	cmp	sl, r6
   1debc:	bne	1dea8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xcc>
   1dec0:	mov	r0, #0
   1dec4:	add	sp, sp, #4
   1dec8:	ldrd	r4, [sp]
   1decc:	ldrd	r6, [sp, #8]
   1ded0:	ldrd	r8, [sp, #16]
   1ded4:	ldrd	sl, [sp, #24]
   1ded8:	add	sp, sp, #32
   1dedc:	pop	{pc}		; (ldr pc, [sp], #4)
   1dee0:	mov	r0, #0
   1dee4:	b	1dec4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xe8>

0001dee8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1dee8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1deec:	strd	r6, [sp, #8]
   1def0:	strd	r8, [sp, #16]
   1def4:	strd	sl, [sp, #24]
   1def8:	str	lr, [sp, #32]
   1defc:	sub	sp, sp, #4
   1df00:	ldr	r6, [sp, #40]	; 0x28
   1df04:	subs	r8, r0, #0
   1df08:	beq	1e010 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x128>
   1df0c:	mov	r9, r3
   1df10:	mov	sl, r2
   1df14:	mov	r7, r1
   1df18:	mov	r5, r8
   1df1c:	mov	fp, #0
   1df20:	b	1dfbc <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd4>
   1df24:	ldr	r4, [r4]
   1df28:	cmp	r4, #0
   1df2c:	beq	1dfac <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc4>
   1df30:	ldr	r3, [r4, #16]
   1df34:	cmp	r3, r6
   1df38:	bne	1df24 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x3c>
   1df3c:	mov	r2, r6
   1df40:	mov	r1, r9
   1df44:	ldr	r0, [r4, #8]
   1df48:	bl	10238 <mycore_strncasecmp@plt>
   1df4c:	cmp	r0, #0
   1df50:	bne	1df24 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x3c>
   1df54:	ldr	r2, [sp, #48]	; 0x30
   1df58:	ldr	r1, [sp, #44]	; 0x2c
   1df5c:	add	r0, r4, #28
   1df60:	blx	sl
   1df64:	cmp	r0, #0
   1df68:	beq	1df24 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x3c>
   1df6c:	ldr	r2, [r7, #8]
   1df70:	ldr	r3, [r7]
   1df74:	str	r5, [r3, r2, lsl #2]
   1df78:	ldr	r3, [r7, #8]
   1df7c:	add	r3, r3, #1
   1df80:	str	r3, [r7, #8]
   1df84:	ldr	r2, [r7, #4]
   1df88:	cmp	r3, r2
   1df8c:	bcc	1df24 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x3c>
   1df90:	mov	r2, fp
   1df94:	mov	r1, #1024	; 0x400
   1df98:	mov	r0, r7
   1df9c:	bl	10d90 <myhtml_collection_check_size@plt>
   1dfa0:	cmp	r0, #0
   1dfa4:	beq	1df24 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x3c>
   1dfa8:	b	1dff4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x10c>
   1dfac:	ldr	r3, [r5, #20]
   1dfb0:	cmp	r3, #0
   1dfb4:	beq	1dfd8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf0>
   1dfb8:	mov	r5, r3
   1dfbc:	ldr	r3, [r5, #32]
   1dfc0:	cmp	r3, #0
   1dfc4:	beq	1dfac <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc4>
   1dfc8:	ldr	r4, [r3, #40]	; 0x28
   1dfcc:	cmp	r4, #0
   1dfd0:	beq	1dfac <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc4>
   1dfd4:	b	1df30 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1dfd8:	ldr	r3, [r5, #16]
   1dfdc:	cmp	r3, #0
   1dfe0:	bne	1dfb8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd0>
   1dfe4:	ldr	r5, [r5, #24]
   1dfe8:	cmp	r8, r5
   1dfec:	bne	1dfd8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf0>
   1dff0:	mov	r0, #0
   1dff4:	add	sp, sp, #4
   1dff8:	ldrd	r4, [sp]
   1dffc:	ldrd	r6, [sp, #8]
   1e000:	ldrd	r8, [sp, #16]
   1e004:	ldrd	sl, [sp, #24]
   1e008:	add	sp, sp, #32
   1e00c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e010:	mov	r0, #0
   1e014:	b	1dff4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x10c>

0001e018 <_myhtml_get_nodes_by_attribute_value@@Base>:
   1e018:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e01c:	strd	r6, [sp, #8]
   1e020:	strd	r8, [sp, #16]
   1e024:	str	sl, [sp, #24]
   1e028:	str	lr, [sp, #28]
   1e02c:	sub	sp, sp, #16
   1e030:	mov	sl, r0
   1e034:	mov	r4, r2
   1e038:	mov	r9, r3
   1e03c:	ldr	r7, [sp, #48]	; 0x30
   1e040:	ldr	r8, [sp, #52]	; 0x34
   1e044:	ldr	r6, [sp, #64]	; 0x40
   1e048:	subs	r5, r1, #0
   1e04c:	beq	1e0b8 <_myhtml_get_nodes_by_attribute_value@@Base+0xa0>
   1e050:	cmp	r4, #0
   1e054:	ldreq	r4, [sl, #96]	; 0x60
   1e058:	cmp	r7, #0
   1e05c:	cmpne	r8, #0
   1e060:	beq	1e0e8 <_myhtml_get_nodes_by_attribute_value@@Base+0xd0>
   1e064:	ldr	r3, [sp, #60]	; 0x3c
   1e068:	str	r3, [sp, #8]
   1e06c:	ldr	r3, [sp, #56]	; 0x38
   1e070:	str	r3, [sp, #4]
   1e074:	str	r8, [sp]
   1e078:	mov	r3, r7
   1e07c:	mov	r2, r9
   1e080:	mov	r1, r5
   1e084:	mov	r0, r4
   1e088:	bl	fd94 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1e08c:	cmp	r0, #0
   1e090:	cmpne	r6, #0
   1e094:	strne	r0, [r6]
   1e098:	mov	r0, r5
   1e09c:	add	sp, sp, #16
   1e0a0:	ldrd	r4, [sp]
   1e0a4:	ldrd	r6, [sp, #8]
   1e0a8:	ldrd	r8, [sp, #16]
   1e0ac:	ldr	sl, [sp, #24]
   1e0b0:	add	sp, sp, #28
   1e0b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e0b8:	mov	r1, r6
   1e0bc:	mov	r0, #1024	; 0x400
   1e0c0:	bl	10298 <myhtml_collection_create@plt>
   1e0c4:	cmp	r6, #0
   1e0c8:	beq	1e0d8 <_myhtml_get_nodes_by_attribute_value@@Base+0xc0>
   1e0cc:	ldr	r3, [r6]
   1e0d0:	cmp	r3, #0
   1e0d4:	bne	1e098 <_myhtml_get_nodes_by_attribute_value@@Base+0x80>
   1e0d8:	cmp	r0, #0
   1e0dc:	beq	1e108 <_myhtml_get_nodes_by_attribute_value@@Base+0xf0>
   1e0e0:	mov	r5, r0
   1e0e4:	b	1e050 <_myhtml_get_nodes_by_attribute_value@@Base+0x38>
   1e0e8:	ldr	r3, [sp, #60]	; 0x3c
   1e0ec:	str	r3, [sp]
   1e0f0:	ldr	r3, [sp, #56]	; 0x38
   1e0f4:	mov	r2, r9
   1e0f8:	mov	r1, r5
   1e0fc:	mov	r0, r4
   1e100:	bl	fb78 <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1e104:	b	1e08c <_myhtml_get_nodes_by_attribute_value@@Base+0x74>
   1e108:	mov	r5, r0
   1e10c:	b	1e098 <_myhtml_get_nodes_by_attribute_value@@Base+0x80>

0001e110 <myhtml_get_nodes_by_attribute_value@@Base>:
   1e110:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e114:	strd	r6, [sp, #8]
   1e118:	str	lr, [sp, #16]
   1e11c:	sub	sp, sp, #36	; 0x24
   1e120:	ldr	lr, [sp, #56]	; 0x38
   1e124:	ldr	r4, [sp, #60]	; 0x3c
   1e128:	ldr	r5, [sp, #64]	; 0x40
   1e12c:	ldr	r6, [sp, #68]	; 0x44
   1e130:	ldr	r7, [sp, #72]	; 0x48
   1e134:	ldr	ip, [pc, #104]	; 1e1a4 <myhtml_get_nodes_by_attribute_value@@Base+0x94>
   1e138:	add	ip, pc, ip
   1e13c:	cmp	r3, #0
   1e140:	bne	1e17c <myhtml_get_nodes_by_attribute_value@@Base+0x6c>
   1e144:	ldr	r3, [pc, #92]	; 1e1a8 <myhtml_get_nodes_by_attribute_value@@Base+0x98>
   1e148:	ldr	r3, [ip, r3]
   1e14c:	str	r3, [sp, #28]
   1e150:	str	r7, [sp, #16]
   1e154:	str	r6, [sp, #12]
   1e158:	str	r5, [sp, #8]
   1e15c:	str	r4, [sp, #4]
   1e160:	str	lr, [sp]
   1e164:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e168:	add	sp, sp, #36	; 0x24
   1e16c:	ldrd	r4, [sp]
   1e170:	ldrd	r6, [sp, #8]
   1e174:	add	sp, sp, #16
   1e178:	pop	{pc}		; (ldr pc, [sp], #4)
   1e17c:	ldr	r3, [pc, #40]	; 1e1ac <myhtml_get_nodes_by_attribute_value@@Base+0x9c>
   1e180:	ldr	r3, [ip, r3]
   1e184:	str	r3, [sp, #28]
   1e188:	str	r7, [sp, #16]
   1e18c:	str	r6, [sp, #12]
   1e190:	str	r5, [sp, #8]
   1e194:	str	r4, [sp, #4]
   1e198:	str	lr, [sp]
   1e19c:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e1a0:	b	1e168 <myhtml_get_nodes_by_attribute_value@@Base+0x58>
   1e1a4:	andeq	fp, pc, r0, asr #29
   1e1a8:	andeq	r0, r0, r4, lsr #17
   1e1ac:	andeq	r0, r0, ip, ror r8

0001e1b0 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1e1b0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e1b4:	strd	r6, [sp, #8]
   1e1b8:	str	lr, [sp, #16]
   1e1bc:	sub	sp, sp, #36	; 0x24
   1e1c0:	ldr	lr, [sp, #56]	; 0x38
   1e1c4:	ldr	r4, [sp, #60]	; 0x3c
   1e1c8:	ldr	r5, [sp, #64]	; 0x40
   1e1cc:	ldr	r6, [sp, #68]	; 0x44
   1e1d0:	ldr	r7, [sp, #72]	; 0x48
   1e1d4:	ldr	ip, [pc, #104]	; 1e244 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x94>
   1e1d8:	add	ip, pc, ip
   1e1dc:	cmp	r3, #0
   1e1e0:	bne	1e21c <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x6c>
   1e1e4:	ldr	r3, [pc, #92]	; 1e248 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x98>
   1e1e8:	ldr	r3, [ip, r3]
   1e1ec:	str	r3, [sp, #28]
   1e1f0:	str	r7, [sp, #16]
   1e1f4:	str	r6, [sp, #12]
   1e1f8:	str	r5, [sp, #8]
   1e1fc:	str	r4, [sp, #4]
   1e200:	str	lr, [sp]
   1e204:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e208:	add	sp, sp, #36	; 0x24
   1e20c:	ldrd	r4, [sp]
   1e210:	ldrd	r6, [sp, #8]
   1e214:	add	sp, sp, #16
   1e218:	pop	{pc}		; (ldr pc, [sp], #4)
   1e21c:	ldr	r3, [pc, #40]	; 1e24c <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x9c>
   1e220:	ldr	r3, [ip, r3]
   1e224:	str	r3, [sp, #28]
   1e228:	str	r7, [sp, #16]
   1e22c:	str	r6, [sp, #12]
   1e230:	str	r5, [sp, #8]
   1e234:	str	r4, [sp, #4]
   1e238:	str	lr, [sp]
   1e23c:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e240:	b	1e208 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x58>
   1e244:	andeq	fp, pc, r0, lsr #28
   1e248:	andeq	r0, r0, r0, lsr #18
   1e24c:	andeq	r0, r0, r0, lsl r7

0001e250 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1e250:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e254:	strd	r6, [sp, #8]
   1e258:	str	lr, [sp, #16]
   1e25c:	sub	sp, sp, #36	; 0x24
   1e260:	ldr	lr, [sp, #56]	; 0x38
   1e264:	ldr	r4, [sp, #60]	; 0x3c
   1e268:	ldr	r5, [sp, #64]	; 0x40
   1e26c:	ldr	r6, [sp, #68]	; 0x44
   1e270:	ldr	r7, [sp, #72]	; 0x48
   1e274:	ldr	ip, [pc, #104]	; 1e2e4 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x94>
   1e278:	add	ip, pc, ip
   1e27c:	cmp	r3, #0
   1e280:	bne	1e2bc <myhtml_get_nodes_by_attribute_value_begin@@Base+0x6c>
   1e284:	ldr	r3, [pc, #92]	; 1e2e8 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x98>
   1e288:	ldr	r3, [ip, r3]
   1e28c:	str	r3, [sp, #28]
   1e290:	str	r7, [sp, #16]
   1e294:	str	r6, [sp, #12]
   1e298:	str	r5, [sp, #8]
   1e29c:	str	r4, [sp, #4]
   1e2a0:	str	lr, [sp]
   1e2a4:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e2a8:	add	sp, sp, #36	; 0x24
   1e2ac:	ldrd	r4, [sp]
   1e2b0:	ldrd	r6, [sp, #8]
   1e2b4:	add	sp, sp, #16
   1e2b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e2bc:	ldr	r3, [pc, #40]	; 1e2ec <myhtml_get_nodes_by_attribute_value_begin@@Base+0x9c>
   1e2c0:	ldr	r3, [ip, r3]
   1e2c4:	str	r3, [sp, #28]
   1e2c8:	str	r7, [sp, #16]
   1e2cc:	str	r6, [sp, #12]
   1e2d0:	str	r5, [sp, #8]
   1e2d4:	str	r4, [sp, #4]
   1e2d8:	str	lr, [sp]
   1e2dc:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e2e0:	b	1e2a8 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x58>
   1e2e4:	andeq	fp, pc, r0, lsl #27
   1e2e8:	andeq	r0, r0, ip, asr r7
   1e2ec:	andeq	r0, r0, ip, ror #14

0001e2f0 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1e2f0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e2f4:	strd	r6, [sp, #8]
   1e2f8:	str	lr, [sp, #16]
   1e2fc:	sub	sp, sp, #36	; 0x24
   1e300:	ldr	lr, [sp, #56]	; 0x38
   1e304:	ldr	r4, [sp, #60]	; 0x3c
   1e308:	ldr	r5, [sp, #64]	; 0x40
   1e30c:	ldr	r6, [sp, #68]	; 0x44
   1e310:	ldr	r7, [sp, #72]	; 0x48
   1e314:	ldr	ip, [pc, #104]	; 1e384 <myhtml_get_nodes_by_attribute_value_end@@Base+0x94>
   1e318:	add	ip, pc, ip
   1e31c:	cmp	r3, #0
   1e320:	bne	1e35c <myhtml_get_nodes_by_attribute_value_end@@Base+0x6c>
   1e324:	ldr	r3, [pc, #92]	; 1e388 <myhtml_get_nodes_by_attribute_value_end@@Base+0x98>
   1e328:	ldr	r3, [ip, r3]
   1e32c:	str	r3, [sp, #28]
   1e330:	str	r7, [sp, #16]
   1e334:	str	r6, [sp, #12]
   1e338:	str	r5, [sp, #8]
   1e33c:	str	r4, [sp, #4]
   1e340:	str	lr, [sp]
   1e344:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e348:	add	sp, sp, #36	; 0x24
   1e34c:	ldrd	r4, [sp]
   1e350:	ldrd	r6, [sp, #8]
   1e354:	add	sp, sp, #16
   1e358:	pop	{pc}		; (ldr pc, [sp], #4)
   1e35c:	ldr	r3, [pc, #40]	; 1e38c <myhtml_get_nodes_by_attribute_value_end@@Base+0x9c>
   1e360:	ldr	r3, [ip, r3]
   1e364:	str	r3, [sp, #28]
   1e368:	str	r7, [sp, #16]
   1e36c:	str	r6, [sp, #12]
   1e370:	str	r5, [sp, #8]
   1e374:	str	r4, [sp, #4]
   1e378:	str	lr, [sp]
   1e37c:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e380:	b	1e348 <myhtml_get_nodes_by_attribute_value_end@@Base+0x58>
   1e384:	andeq	fp, pc, r0, ror #25
   1e388:	andeq	r0, r0, ip, ror #15
   1e38c:	andeq	r0, r0, r8, ror r9

0001e390 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1e390:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e394:	strd	r6, [sp, #8]
   1e398:	str	lr, [sp, #16]
   1e39c:	sub	sp, sp, #36	; 0x24
   1e3a0:	ldr	lr, [sp, #56]	; 0x38
   1e3a4:	ldr	r4, [sp, #60]	; 0x3c
   1e3a8:	ldr	r5, [sp, #64]	; 0x40
   1e3ac:	ldr	r6, [sp, #68]	; 0x44
   1e3b0:	ldr	r7, [sp, #72]	; 0x48
   1e3b4:	ldr	ip, [pc, #104]	; 1e424 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x94>
   1e3b8:	add	ip, pc, ip
   1e3bc:	cmp	r3, #0
   1e3c0:	bne	1e3fc <myhtml_get_nodes_by_attribute_value_contain@@Base+0x6c>
   1e3c4:	ldr	r3, [pc, #92]	; 1e428 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x98>
   1e3c8:	ldr	r3, [ip, r3]
   1e3cc:	str	r3, [sp, #28]
   1e3d0:	str	r7, [sp, #16]
   1e3d4:	str	r6, [sp, #12]
   1e3d8:	str	r5, [sp, #8]
   1e3dc:	str	r4, [sp, #4]
   1e3e0:	str	lr, [sp]
   1e3e4:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e3e8:	add	sp, sp, #36	; 0x24
   1e3ec:	ldrd	r4, [sp]
   1e3f0:	ldrd	r6, [sp, #8]
   1e3f4:	add	sp, sp, #16
   1e3f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3fc:	ldr	r3, [pc, #40]	; 1e42c <myhtml_get_nodes_by_attribute_value_contain@@Base+0x9c>
   1e400:	ldr	r3, [ip, r3]
   1e404:	str	r3, [sp, #28]
   1e408:	str	r7, [sp, #16]
   1e40c:	str	r6, [sp, #12]
   1e410:	str	r5, [sp, #8]
   1e414:	str	r4, [sp, #4]
   1e418:	str	lr, [sp]
   1e41c:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e420:	b	1e3e8 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x58>
   1e424:	andeq	fp, pc, r0, asr #24
   1e428:	andeq	r0, r0, r0, lsl #17
   1e42c:	andeq	r0, r0, r0, ror #14

0001e430 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1e430:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e434:	strd	r6, [sp, #8]
   1e438:	str	lr, [sp, #16]
   1e43c:	sub	sp, sp, #36	; 0x24
   1e440:	ldr	lr, [sp, #56]	; 0x38
   1e444:	ldr	r4, [sp, #60]	; 0x3c
   1e448:	ldr	r5, [sp, #64]	; 0x40
   1e44c:	ldr	r6, [sp, #68]	; 0x44
   1e450:	ldr	r7, [sp, #72]	; 0x48
   1e454:	ldr	ip, [pc, #104]	; 1e4c4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x94>
   1e458:	add	ip, pc, ip
   1e45c:	cmp	r3, #0
   1e460:	bne	1e49c <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x6c>
   1e464:	ldr	r3, [pc, #92]	; 1e4c8 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x98>
   1e468:	ldr	r3, [ip, r3]
   1e46c:	str	r3, [sp, #28]
   1e470:	str	r7, [sp, #16]
   1e474:	str	r6, [sp, #12]
   1e478:	str	r5, [sp, #8]
   1e47c:	str	r4, [sp, #4]
   1e480:	str	lr, [sp]
   1e484:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e488:	add	sp, sp, #36	; 0x24
   1e48c:	ldrd	r4, [sp]
   1e490:	ldrd	r6, [sp, #8]
   1e494:	add	sp, sp, #16
   1e498:	pop	{pc}		; (ldr pc, [sp], #4)
   1e49c:	ldr	r3, [pc, #40]	; 1e4cc <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x9c>
   1e4a0:	ldr	r3, [ip, r3]
   1e4a4:	str	r3, [sp, #28]
   1e4a8:	str	r7, [sp, #16]
   1e4ac:	str	r6, [sp, #12]
   1e4b0:	str	r5, [sp, #8]
   1e4b4:	str	r4, [sp, #4]
   1e4b8:	str	lr, [sp]
   1e4bc:	bl	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1e4c0:	b	1e488 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x58>
   1e4c4:	andeq	fp, pc, r0, lsr #23
   1e4c8:	andeq	r0, r0, r8, ror #16
   1e4cc:	strdeq	r0, [r0], -ip

0001e4d0 <myhtml_collection_clean@@Base>:
   1e4d0:	cmp	r0, #0
   1e4d4:	movne	r3, #0
   1e4d8:	strne	r3, [r0, #8]
   1e4dc:	bx	lr

0001e4e0 <myhtml_collection_destroy@@Base>:
   1e4e0:	str	r4, [sp, #-8]!
   1e4e4:	str	lr, [sp, #4]
   1e4e8:	subs	r4, r0, #0
   1e4ec:	beq	1e508 <myhtml_collection_destroy@@Base+0x28>
   1e4f0:	ldr	r0, [r4]
   1e4f4:	cmp	r0, #0
   1e4f8:	beq	1e500 <myhtml_collection_destroy@@Base+0x20>
   1e4fc:	bl	10d60 <mycore_free@plt>
   1e500:	mov	r0, r4
   1e504:	bl	10d60 <mycore_free@plt>
   1e508:	mov	r0, #0
   1e50c:	ldr	r4, [sp]
   1e510:	add	sp, sp, #4
   1e514:	pop	{pc}		; (ldr pc, [sp], #4)

0001e518 <myhtml_queue_add@@Base>:
   1e518:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1e51c:	strd	r6, [sp, #8]
   1e520:	str	r8, [sp, #16]
   1e524:	str	lr, [sp, #20]
   1e528:	mov	r4, r0
   1e52c:	mov	r7, r1
   1e530:	ldr	r6, [r0, #68]	; 0x44
   1e534:	ldr	r3, [r0, #184]	; 0xb8
   1e538:	mov	r8, r2
   1e53c:	adds	r5, r2, #0
   1e540:	movne	r5, #1
   1e544:	ubfx	r3, r3, #2, #1
   1e548:	tst	r5, r3
   1e54c:	bne	1e5f8 <myhtml_queue_add@@Base+0xe0>
   1e550:	ldr	r3, [r4, #180]	; 0xb4
   1e554:	tst	r3, #16
   1e558:	beq	1e650 <myhtml_queue_add@@Base+0x138>
   1e55c:	cmp	r6, #0
   1e560:	movne	r3, r5
   1e564:	moveq	r3, #0
   1e568:	cmp	r3, #0
   1e56c:	bne	1e630 <myhtml_queue_add@@Base+0x118>
   1e570:	ldr	r0, [r4]
   1e574:	mov	r3, #0
   1e578:	mov	r2, #4
   1e57c:	ldr	r1, [r4, #24]
   1e580:	ldr	r0, [r0]
   1e584:	bl	10c40 <mythread_queue_node_malloc_limit@plt>
   1e588:	str	r0, [r4, #68]	; 0x44
   1e58c:	ldr	r3, [r4, #68]	; 0x44
   1e590:	cmp	r3, #0
   1e594:	beq	1e6b0 <myhtml_queue_add@@Base+0x198>
   1e598:	str	r4, [r3]
   1e59c:	ldr	r3, [r4, #68]	; 0x44
   1e5a0:	str	r6, [r3, #8]
   1e5a4:	cmp	r6, #0
   1e5a8:	moveq	r5, #0
   1e5ac:	cmp	r5, #0
   1e5b0:	bne	1e6a0 <myhtml_queue_add@@Base+0x188>
   1e5b4:	ldr	r0, [r4, #8]
   1e5b8:	ldr	r1, [r0, #12]
   1e5bc:	bl	109a0 <myhtml_token_node_create@plt>
   1e5c0:	str	r0, [r4, #64]	; 0x40
   1e5c4:	cmp	r0, #0
   1e5c8:	beq	1e6b8 <myhtml_queue_add@@Base+0x1a0>
   1e5cc:	ldr	r1, [r4, #192]	; 0xc0
   1e5d0:	add	r1, r7, r1
   1e5d4:	str	r1, [r0, #32]
   1e5d8:	ldr	r3, [r4, #64]	; 0x40
   1e5dc:	str	r1, [r3, #24]
   1e5e0:	mov	r0, #0
   1e5e4:	ldrd	r4, [sp]
   1e5e8:	ldrd	r6, [sp, #8]
   1e5ec:	ldr	r8, [sp, #16]
   1e5f0:	add	sp, sp, #20
   1e5f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e5f8:	ldr	r3, [r2]
   1e5fc:	cmp	r3, #1
   1e600:	bne	1e550 <myhtml_queue_add@@Base+0x38>
   1e604:	ldr	r3, [r2, #48]	; 0x30
   1e608:	tst	r3, #8
   1e60c:	beq	1e550 <myhtml_queue_add@@Base+0x38>
   1e610:	mov	r0, r2
   1e614:	bl	10f10 <myhtml_token_node_clean@plt>
   1e618:	ldr	r1, [r4, #192]	; 0xc0
   1e61c:	add	r1, r7, r1
   1e620:	str	r1, [r8, #32]
   1e624:	str	r1, [r8, #24]
   1e628:	mov	r0, #0
   1e62c:	b	1e5e4 <myhtml_queue_add@@Base+0xcc>
   1e630:	str	r8, [r6, #4]
   1e634:	mov	r1, r6
   1e638:	mov	r0, #0
   1e63c:	bl	fd1c <myhtml_parser_worker@plt>
   1e640:	mov	r1, r6
   1e644:	mov	r0, #0
   1e648:	bl	10f88 <myhtml_parser_stream@plt>
   1e64c:	b	1e570 <myhtml_queue_add@@Base+0x58>
   1e650:	cmp	r6, #0
   1e654:	strne	r8, [r6, #4]
   1e658:	ldr	r3, [r4]
   1e65c:	ldr	r1, [r4, #20]
   1e660:	ldr	r0, [r3]
   1e664:	bl	104cc <mythread_queue_node_malloc_round@plt>
   1e668:	str	r0, [r4, #68]	; 0x44
   1e66c:	ldr	r1, [r4, #20]
   1e670:	ldr	r3, [r1]
   1e674:	ldr	r3, [r3, #12]
   1e678:	cmp	r3, #0
   1e67c:	bne	1e58c <myhtml_queue_add@@Base+0x74>
   1e680:	ldr	r3, [r4]
   1e684:	ldr	r0, [r3, #4]
   1e688:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   1e68c:	ldr	r3, [r4]
   1e690:	ldr	r1, [r4, #20]
   1e694:	ldr	r0, [r3]
   1e698:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   1e69c:	b	1e58c <myhtml_queue_add@@Base+0x74>
   1e6a0:	mov	r1, r8
   1e6a4:	mov	r0, r4
   1e6a8:	bl	101cc <myhtml_tokenizer_calc_current_namespace@plt>
   1e6ac:	b	1e5b4 <myhtml_queue_add@@Base+0x9c>
   1e6b0:	mov	r0, #2
   1e6b4:	b	1e5e4 <myhtml_queue_add@@Base+0xcc>
   1e6b8:	mov	r0, #2
   1e6bc:	b	1e5e4 <myhtml_queue_add@@Base+0xcc>

0001e6c0 <myhtml_utils_strcmp@@Base>:
   1e6c0:	cmp	r2, #0
   1e6c4:	beq	1e708 <myhtml_utils_strcmp@@Base+0x48>
   1e6c8:	sub	ip, r1, #1
   1e6cc:	sub	r0, r0, #1
   1e6d0:	add	r1, r1, r2
   1e6d4:	sub	r1, r1, #1
   1e6d8:	ldrb	r3, [ip, #1]!
   1e6dc:	sub	r2, r3, #65	; 0x41
   1e6e0:	uxtb	r2, r2
   1e6e4:	cmp	r2, #25
   1e6e8:	orrls	r3, r3, #96	; 0x60
   1e6ec:	ldrb	r2, [r0, #1]!
   1e6f0:	cmp	r2, r3
   1e6f4:	bne	1e710 <myhtml_utils_strcmp@@Base+0x50>
   1e6f8:	cmp	ip, r1
   1e6fc:	bne	1e6d8 <myhtml_utils_strcmp@@Base+0x18>
   1e700:	mov	r0, #1
   1e704:	bx	lr
   1e708:	mov	r0, #1
   1e70c:	bx	lr
   1e710:	mov	r0, #0
   1e714:	bx	lr

0001e718 <myhtml_is_html_node@@Base>:
   1e718:	cmp	r0, #0
   1e71c:	beq	1e748 <myhtml_is_html_node@@Base+0x30>
   1e720:	ldr	r3, [r0, #4]
   1e724:	cmp	r3, r1
   1e728:	beq	1e734 <myhtml_is_html_node@@Base+0x1c>
   1e72c:	mov	r0, #0
   1e730:	bx	lr
   1e734:	ldr	r0, [r0, #8]
   1e738:	cmp	r0, #1
   1e73c:	movne	r0, #0
   1e740:	moveq	r0, #1
   1e744:	bx	lr
   1e748:	mov	r0, #0
   1e74c:	bx	lr

0001e750 <myhtml_version@@Base>:
   1e750:	strd	r4, [sp, #-8]!
   1e754:	ldr	r2, [pc, #28]	; 1e778 <myhtml_version@@Base+0x28>
   1e758:	add	r2, pc, r2
   1e75c:	ldrd	r4, [r2]
   1e760:	strd	r4, [r0]
   1e764:	ldr	r2, [r2, #8]
   1e768:	str	r2, [r0, #8]
   1e76c:	ldrd	r4, [sp]
   1e770:	add	sp, sp, #8
   1e774:	bx	lr
   1e778:	ldrdeq	r1, [lr], -r8

0001e77c <myhtml_node_clone@@Base>:
   1e77c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1e780:	strd	r6, [sp, #8]
   1e784:	strd	r8, [sp, #16]
   1e788:	str	lr, [sp, #24]
   1e78c:	sub	sp, sp, #12
   1e790:	mov	r6, r0
   1e794:	mov	r5, r1
   1e798:	bl	ff80 <myhtml_tree_node_create@plt>
   1e79c:	mov	r4, r0
   1e7a0:	ldr	r7, [r5, #4]
   1e7a4:	cmp	r7, #251	; 0xfb
   1e7a8:	bhi	1e808 <myhtml_node_clone@@Base+0x8c>
   1e7ac:	ldr	r3, [r6, #44]	; 0x2c
   1e7b0:	ldr	r2, [r6, #40]	; 0x28
   1e7b4:	ldr	r1, [r5, #32]
   1e7b8:	ldr	r0, [r6, #8]
   1e7bc:	bl	fecc <myhtml_token_node_clone@plt>
   1e7c0:	str	r0, [r4, #32]
   1e7c4:	str	r7, [r4, #4]
   1e7c8:	ldr	r3, [r5, #8]
   1e7cc:	str	r3, [r4, #8]
   1e7d0:	cmp	r0, #0
   1e7d4:	beq	1e7ec <myhtml_node_clone@@Base+0x70>
   1e7d8:	str	r7, [r0]
   1e7dc:	ldr	r2, [r4, #32]
   1e7e0:	ldr	r3, [r2, #48]	; 0x30
   1e7e4:	orr	r3, r3, #4
   1e7e8:	str	r3, [r2, #48]	; 0x30
   1e7ec:	mov	r0, r4
   1e7f0:	add	sp, sp, #12
   1e7f4:	ldrd	r4, [sp]
   1e7f8:	ldrd	r6, [sp, #8]
   1e7fc:	ldrd	r8, [sp, #16]
   1e800:	add	sp, sp, #24
   1e804:	pop	{pc}		; (ldr pc, [sp], #4)
   1e808:	mov	r1, r7
   1e80c:	ldr	r0, [r6, #28]
   1e810:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1e814:	mov	r9, r0
   1e818:	ldr	r3, [r5, #40]	; 0x28
   1e81c:	ldr	r1, [r5, #4]
   1e820:	ldr	r0, [r3, #28]
   1e824:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1e828:	mov	r8, r0
   1e82c:	cmp	r9, #0
   1e830:	beq	1e844 <myhtml_node_clone@@Base+0xc8>
   1e834:	ldr	r2, [r0, #8]
   1e838:	ldr	r3, [r9, #8]
   1e83c:	cmp	r3, r2
   1e840:	beq	1e868 <myhtml_node_clone@@Base+0xec>
   1e844:	ldr	r2, [r8, #8]
   1e848:	ldr	r1, [r8, #4]
   1e84c:	mov	r3, #1
   1e850:	str	r3, [sp]
   1e854:	mov	r3, #0
   1e858:	ldr	r0, [r6, #28]
   1e85c:	bl	ffb0 <myhtml_tag_add@plt>
   1e860:	mov	r7, r0
   1e864:	b	1e7ac <myhtml_node_clone@@Base+0x30>
   1e868:	ldr	r1, [r0, #4]
   1e86c:	ldr	r0, [r9, #4]
   1e870:	bl	10e80 <mycore_strncmp@plt>
   1e874:	cmp	r0, #0
   1e878:	beq	1e7ac <myhtml_node_clone@@Base+0x30>
   1e87c:	b	1e844 <myhtml_node_clone@@Base+0xc8>

0001e880 <myhtml_node_clone_deep@@Base>:
   1e880:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e884:	strd	r6, [sp, #8]
   1e888:	strd	r8, [sp, #16]
   1e88c:	str	sl, [sp, #24]
   1e890:	str	lr, [sp, #28]
   1e894:	mov	r8, r0
   1e898:	subs	r7, r1, #0
   1e89c:	moveq	r4, r7
   1e8a0:	beq	1e8c4 <myhtml_node_clone_deep@@Base+0x44>
   1e8a4:	ldr	r3, [r7, #40]	; 0x28
   1e8a8:	cmp	r3, #0
   1e8ac:	moveq	r4, r7
   1e8b0:	beq	1e8c4 <myhtml_node_clone_deep@@Base+0x44>
   1e8b4:	ldr	r3, [r3, #84]	; 0x54
   1e8b8:	cmp	r3, r7
   1e8bc:	movne	r4, r7
   1e8c0:	ldreq	r4, [r7, #20]
   1e8c4:	mov	r1, r4
   1e8c8:	mov	r0, r8
   1e8cc:	bl	10ec8 <myhtml_node_clone@plt>
   1e8d0:	subs	r9, r0, #0
   1e8d4:	beq	1e8f0 <myhtml_node_clone_deep@@Base+0x70>
   1e8d8:	ldr	r4, [r4, #20]
   1e8dc:	cmp	r4, #0
   1e8e0:	beq	1e8f0 <myhtml_node_clone_deep@@Base+0x70>
   1e8e4:	mov	r5, r9
   1e8e8:	b	1e91c <myhtml_node_clone_deep@@Base+0x9c>
   1e8ec:	mov	r9, r6
   1e8f0:	mov	r0, r9
   1e8f4:	ldrd	r4, [sp]
   1e8f8:	ldrd	r6, [sp, #8]
   1e8fc:	ldrd	r8, [sp, #16]
   1e900:	ldr	sl, [sp, #24]
   1e904:	add	sp, sp, #28
   1e908:	pop	{pc}		; (ldr pc, [sp], #4)
   1e90c:	ldr	r3, [r4, #16]
   1e910:	mov	r6, r5
   1e914:	mov	r5, r6
   1e918:	mov	r4, r3
   1e91c:	mov	r1, r4
   1e920:	mov	r0, r8
   1e924:	bl	10ec8 <myhtml_node_clone@plt>
   1e928:	subs	r6, r0, #0
   1e92c:	beq	1e8ec <myhtml_node_clone_deep@@Base+0x6c>
   1e930:	mov	r1, r6
   1e934:	mov	r0, r5
   1e938:	bl	1064c <myhtml_tree_node_add_child@plt>
   1e93c:	ldr	r3, [r4, #20]
   1e940:	cmp	r3, #0
   1e944:	bne	1e914 <myhtml_node_clone_deep@@Base+0x94>
   1e948:	cmp	r7, r4
   1e94c:	beq	1e8f0 <myhtml_node_clone_deep@@Base+0x70>
   1e950:	ldr	r3, [r4, #16]
   1e954:	cmp	r3, #0
   1e958:	bne	1e90c <myhtml_node_clone_deep@@Base+0x8c>
   1e95c:	ldr	r5, [r5, #24]
   1e960:	ldr	r4, [r4, #24]
   1e964:	cmp	r7, r4
   1e968:	beq	1e8f0 <myhtml_node_clone_deep@@Base+0x70>
   1e96c:	ldr	r3, [r4, #16]
   1e970:	cmp	r3, #0
   1e974:	beq	1e95c <myhtml_node_clone_deep@@Base+0xdc>
   1e978:	b	1e90c <myhtml_node_clone_deep@@Base+0x8c>

0001e97c <myhtml_namespace_name_entry_by_name@@Base>:
   1e97c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e980:	strd	r6, [sp, #8]
   1e984:	strd	r8, [sp, #16]
   1e988:	str	sl, [sp, #24]
   1e98c:	str	lr, [sp, #28]
   1e990:	mov	r9, r0
   1e994:	mov	r5, r1
   1e998:	ldr	r3, [pc, #252]	; 1ea9c <myhtml_namespace_name_entry_by_name@@Base+0x120>
   1e99c:	add	r3, pc, r3
   1e9a0:	add	r2, r0, r1
   1e9a4:	ldrb	r2, [r2, #-1]
   1e9a8:	ldrb	r2, [r3, r2]
   1e9ac:	ldrb	r1, [r0]
   1e9b0:	ldrb	r4, [r3, r1]
   1e9b4:	mul	r4, r4, r2
   1e9b8:	mul	r2, r5, r4
   1e9bc:	movw	r3, #27595	; 0x6bcb
   1e9c0:	movt	r3, #44840	; 0xaf28
   1e9c4:	umull	r1, r3, r3, r2
   1e9c8:	sub	r4, r2, r3
   1e9cc:	add	r4, r3, r4, lsr #1
   1e9d0:	lsr	r4, r4, #4
   1e9d4:	mov	r3, #19
   1e9d8:	mls	r4, r3, r4, r2
   1e9dc:	add	r4, r4, #1
   1e9e0:	ldr	r6, [pc, #184]	; 1eaa0 <myhtml_namespace_name_entry_by_name@@Base+0x124>
   1e9e4:	add	r6, pc, r6
   1e9e8:	ldr	r7, [pc, #180]	; 1eaa4 <myhtml_namespace_name_entry_by_name@@Base+0x128>
   1e9ec:	add	r7, pc, r7
   1e9f0:	ldr	r8, [pc, #176]	; 1eaa8 <myhtml_namespace_name_entry_by_name@@Base+0x12c>
   1e9f4:	add	r8, pc, r8
   1e9f8:	b	1ea54 <myhtml_namespace_name_entry_by_name@@Base+0xd8>
   1e9fc:	mov	r2, r5
   1ea00:	mov	r1, r9
   1ea04:	bl	10238 <mycore_strncasecmp@plt>
   1ea08:	cmp	r0, #0
   1ea0c:	beq	1ea34 <myhtml_namespace_name_entry_by_name@@Base+0xb8>
   1ea10:	add	r4, r4, r4, lsl #2
   1ea14:	ldr	r3, [pc, #144]	; 1eaac <myhtml_namespace_name_entry_by_name@@Base+0x130>
   1ea18:	add	r3, pc, r3
   1ea1c:	add	r4, r3, r4, lsl #2
   1ea20:	ldr	r4, [r4, #12]
   1ea24:	cmp	r4, #0
   1ea28:	bne	1ea54 <myhtml_namespace_name_entry_by_name@@Base+0xd8>
   1ea2c:	mov	r0, #0
   1ea30:	b	1ea84 <myhtml_namespace_name_entry_by_name@@Base+0x108>
   1ea34:	add	r4, r4, r4, lsl #2
   1ea38:	ldr	r0, [pc, #112]	; 1eab0 <myhtml_namespace_name_entry_by_name@@Base+0x134>
   1ea3c:	add	r0, pc, r0
   1ea40:	add	r0, r0, r4, lsl #2
   1ea44:	b	1ea84 <myhtml_namespace_name_entry_by_name@@Base+0x108>
   1ea48:	add	r4, r4, r4, lsl #2
   1ea4c:	add	r4, r8, r4, lsl #2
   1ea50:	ldr	r4, [r4, #12]
   1ea54:	add	r3, r4, r4, lsl #2
   1ea58:	ldr	r0, [r6, r3, lsl #2]
   1ea5c:	cmp	r0, #0
   1ea60:	beq	1ea84 <myhtml_namespace_name_entry_by_name@@Base+0x108>
   1ea64:	add	r3, r4, r4, lsl #2
   1ea68:	add	r3, r7, r3, lsl #2
   1ea6c:	ldr	r3, [r3, #4]
   1ea70:	cmp	r3, r5
   1ea74:	beq	1e9fc <myhtml_namespace_name_entry_by_name@@Base+0x80>
   1ea78:	cmp	r3, r5
   1ea7c:	bls	1ea48 <myhtml_namespace_name_entry_by_name@@Base+0xcc>
   1ea80:	mov	r0, #0
   1ea84:	ldrd	r4, [sp]
   1ea88:	ldrd	r6, [sp, #8]
   1ea8c:	ldrd	r8, [sp, #16]
   1ea90:	ldr	sl, [sp, #24]
   1ea94:	add	sp, sp, #28
   1ea98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea9c:	andeq	r1, lr, r0, lsr #15
   1eaa0:	andeq	r6, pc, r0, ror #18
   1eaa4:	andeq	r6, pc, r8, asr r9	; <UNPREDICTABLE>
   1eaa8:	andeq	r6, pc, r0, asr r9	; <UNPREDICTABLE>
   1eaac:	andeq	r6, pc, ip, lsr #18
   1eab0:	andeq	r6, pc, r8, lsl #18

0001eab4 <myhtml_namespace_id_by_name@@Base>:
   1eab4:	str	r4, [sp, #-8]!
   1eab8:	str	lr, [sp, #4]
   1eabc:	mov	r4, r2
   1eac0:	bl	101a8 <myhtml_namespace_name_entry_by_name@plt>
   1eac4:	cmp	r0, #0
   1eac8:	moveq	r0, #0
   1eacc:	beq	1eae0 <myhtml_namespace_id_by_name@@Base+0x2c>
   1ead0:	cmp	r4, #0
   1ead4:	ldrne	r3, [r0, #8]
   1ead8:	strne	r3, [r4]
   1eadc:	mov	r0, #1
   1eae0:	ldr	r4, [sp]
   1eae4:	add	sp, sp, #4
   1eae8:	pop	{pc}		; (ldr pc, [sp], #4)

0001eaec <myhtml_namespace_name_by_id@@Base>:
   1eaec:	strd	r4, [sp, #-16]!
   1eaf0:	str	r6, [sp, #8]
   1eaf4:	str	lr, [sp, #12]
   1eaf8:	cmp	r0, #7
   1eafc:	bhi	1eb3c <myhtml_namespace_name_by_id@@Base+0x50>
   1eb00:	ldr	r4, [pc, #76]	; 1eb54 <myhtml_namespace_name_by_id@@Base+0x68>
   1eb04:	add	r4, pc, r4
   1eb08:	add	r4, r4, #256	; 0x100
   1eb0c:	add	r4, r4, r0, lsl #3
   1eb10:	cmp	r1, #0
   1eb14:	beq	1eb28 <myhtml_namespace_name_by_id@@Base+0x3c>
   1eb18:	mov	r5, r1
   1eb1c:	mov	r0, r4
   1eb20:	bl	10604 <strlen@plt>
   1eb24:	str	r0, [r5]
   1eb28:	mov	r0, r4
   1eb2c:	ldrd	r4, [sp]
   1eb30:	ldr	r6, [sp, #8]
   1eb34:	add	sp, sp, #12
   1eb38:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb3c:	cmp	r1, #0
   1eb40:	moveq	r4, r1
   1eb44:	beq	1eb28 <myhtml_namespace_name_by_id@@Base+0x3c>
   1eb48:	mov	r4, #0
   1eb4c:	str	r4, [r1]
   1eb50:	b	1eb28 <myhtml_namespace_name_by_id@@Base+0x3c>
   1eb54:	andeq	r1, lr, r8, lsr r6

0001eb58 <myhtml_namespace_url_by_id@@Base>:
   1eb58:	cmp	r0, #7
   1eb5c:	bhi	1eb98 <myhtml_namespace_url_by_id@@Base+0x40>
   1eb60:	cmp	r1, #0
   1eb64:	beq	1eb80 <myhtml_namespace_url_by_id@@Base+0x28>
   1eb68:	add	r3, r0, r0, lsl #1
   1eb6c:	ldr	r2, [pc, #64]	; 1ebb4 <myhtml_namespace_url_by_id@@Base+0x5c>
   1eb70:	add	r2, pc, r2
   1eb74:	add	r3, r2, r3, lsl #2
   1eb78:	ldr	r3, [r3, #404]	; 0x194
   1eb7c:	str	r3, [r1]
   1eb80:	add	r0, r0, r0, lsl #1
   1eb84:	ldr	r3, [pc, #44]	; 1ebb8 <myhtml_namespace_url_by_id@@Base+0x60>
   1eb88:	add	r3, pc, r3
   1eb8c:	add	r0, r3, r0, lsl #2
   1eb90:	ldr	r0, [r0, #400]	; 0x190
   1eb94:	bx	lr
   1eb98:	cmp	r1, #0
   1eb9c:	beq	1ebac <myhtml_namespace_url_by_id@@Base+0x54>
   1eba0:	mov	r0, #0
   1eba4:	str	r0, [r1]
   1eba8:	bx	lr
   1ebac:	mov	r0, r1
   1ebb0:	bx	lr
   1ebb4:	ldrdeq	r6, [pc], -r4
   1ebb8:			; <UNDEFINED> instruction: 0x000f67bc

0001ebbc <myhtml_namespace_id_by_url@@Base>:
   1ebbc:	mov	r0, #0
   1ebc0:	bx	lr

0001ebc4 <myhtml_string_append_with_preprocessing@@Base>:
   1ebc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ebc8:	strd	r6, [sp, #8]
   1ebcc:	strd	r8, [sp, #16]
   1ebd0:	strd	sl, [sp, #24]
   1ebd4:	str	lr, [sp, #32]
   1ebd8:	sub	sp, sp, #4
   1ebdc:	mov	r5, r0
   1ebe0:	mov	r6, r1
   1ebe4:	mov	r7, r2
   1ebe8:	mov	r8, r3
   1ebec:	add	r1, r2, #1
   1ebf0:	ldr	r3, [r0, #8]
   1ebf4:	add	r1, r1, r3
   1ebf8:	ldr	r3, [r0, #4]
   1ebfc:	cmp	r1, r3
   1ec00:	bcs	1ec24 <myhtml_string_append_with_preprocessing@@Base+0x60>
   1ec04:	ldr	r2, [r5]
   1ec08:	cmp	r7, #0
   1ec0c:	beq	1ed20 <myhtml_string_append_with_preprocessing@@Base+0x15c>
   1ec10:	mov	r4, #0
   1ec14:	mvn	fp, #16
   1ec18:	mvn	sl, #64	; 0x40
   1ec1c:	mvn	r9, #66	; 0x42
   1ec20:	b	1ecf4 <myhtml_string_append_with_preprocessing@@Base+0x130>
   1ec24:	bl	108f8 <mycore_string_realloc@plt>
   1ec28:	b	1ec04 <myhtml_string_append_with_preprocessing@@Base+0x40>
   1ec2c:	ldr	r3, [r5, #8]
   1ec30:	mov	r1, #10
   1ec34:	strb	r1, [r2, r3]
   1ec38:	add	r4, r4, #1
   1ec3c:	cmp	r4, r7
   1ec40:	bcs	1ec60 <myhtml_string_append_with_preprocessing@@Base+0x9c>
   1ec44:	ldrb	r3, [r6, r4]
   1ec48:	cmp	r3, r1
   1ec4c:	beq	1ecdc <myhtml_string_append_with_preprocessing@@Base+0x118>
   1ec50:	ldr	r3, [r5, #8]
   1ec54:	add	r3, r3, #1
   1ec58:	str	r3, [r5, #8]
   1ec5c:	b	1ecf4 <myhtml_string_append_with_preprocessing@@Base+0x130>
   1ec60:	ldr	r1, [r5, #8]
   1ec64:	add	r3, r1, #1
   1ec68:	str	r3, [r5, #8]
   1ec6c:	ldr	r2, [r5, #4]
   1ec70:	cmp	r3, r2
   1ec74:	bcs	1ec90 <myhtml_string_append_with_preprocessing@@Base+0xcc>
   1ec78:	ldr	r2, [r5]
   1ec7c:	ldr	r3, [r5, #8]
   1ec80:	mov	r1, #0
   1ec84:	strb	r1, [r2, r3]
   1ec88:	ldr	r0, [r5, #8]
   1ec8c:	b	1ed30 <myhtml_string_append_with_preprocessing@@Base+0x16c>
   1ec90:	add	r1, r1, #3
   1ec94:	mov	r0, r5
   1ec98:	bl	108f8 <mycore_string_realloc@plt>
   1ec9c:	b	1ec78 <myhtml_string_append_with_preprocessing@@Base+0xb4>
   1eca0:	ldr	r1, [r5, #4]
   1eca4:	add	r1, r1, #5
   1eca8:	mov	r0, r5
   1ecac:	bl	108f8 <mycore_string_realloc@plt>
   1ecb0:	ldr	r2, [r5]
   1ecb4:	ldr	r3, [r5, #8]
   1ecb8:	strb	fp, [r2, r3]
   1ecbc:	ldr	r3, [r5, #8]
   1ecc0:	add	r3, r3, #1
   1ecc4:	str	r3, [r5, #8]
   1ecc8:	strb	sl, [r2, r3]
   1eccc:	ldr	r3, [r5, #8]
   1ecd0:	add	r3, r3, #1
   1ecd4:	str	r3, [r5, #8]
   1ecd8:	strb	r9, [r2, r3]
   1ecdc:	ldr	r3, [r5, #8]
   1ece0:	add	r3, r3, #1
   1ece4:	str	r3, [r5, #8]
   1ece8:	add	r4, r4, #1
   1ecec:	cmp	r7, r4
   1ecf0:	bls	1ed20 <myhtml_string_append_with_preprocessing@@Base+0x15c>
   1ecf4:	ldrb	r3, [r6, r4]
   1ecf8:	cmp	r3, #13
   1ecfc:	beq	1ec2c <myhtml_string_append_with_preprocessing@@Base+0x68>
   1ed00:	cmp	r3, #0
   1ed04:	moveq	r1, r8
   1ed08:	orrne	r1, r8, #1
   1ed0c:	cmp	r1, #0
   1ed10:	beq	1eca0 <myhtml_string_append_with_preprocessing@@Base+0xdc>
   1ed14:	ldr	r1, [r5, #8]
   1ed18:	strb	r3, [r2, r1]
   1ed1c:	b	1ecdc <myhtml_string_append_with_preprocessing@@Base+0x118>
   1ed20:	ldr	r2, [r5]
   1ed24:	ldr	r3, [r5, #8]
   1ed28:	mov	r0, #0
   1ed2c:	strb	r0, [r2, r3]
   1ed30:	add	sp, sp, #4
   1ed34:	ldrd	r4, [sp]
   1ed38:	ldrd	r6, [sp, #8]
   1ed3c:	ldrd	r8, [sp, #16]
   1ed40:	ldrd	sl, [sp, #24]
   1ed44:	add	sp, sp, #32
   1ed48:	pop	{pc}		; (ldr pc, [sp], #4)

0001ed4c <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1ed4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ed50:	strd	r6, [sp, #8]
   1ed54:	strd	r8, [sp, #16]
   1ed58:	strd	sl, [sp, #24]
   1ed5c:	str	lr, [sp, #32]
   1ed60:	sub	sp, sp, #4
   1ed64:	mov	r5, r0
   1ed68:	mov	r6, r1
   1ed6c:	mov	r7, r2
   1ed70:	mov	r8, r3
   1ed74:	add	r1, r2, #1
   1ed78:	ldr	r3, [r0, #8]
   1ed7c:	add	r1, r1, r3
   1ed80:	ldr	r3, [r0, #4]
   1ed84:	cmp	r1, r3
   1ed88:	bcs	1edb0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x64>
   1ed8c:	ldr	r2, [r5]
   1ed90:	cmp	r7, #0
   1ed94:	beq	1eeb4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x168>
   1ed98:	mov	r4, #0
   1ed9c:	ldr	r9, [pc, #316]	; 1eee0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x194>
   1eda0:	add	r9, pc, r9
   1eda4:	mvn	fp, #16
   1eda8:	mvn	sl, #64	; 0x40
   1edac:	b	1ee84 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x138>
   1edb0:	bl	108f8 <mycore_string_realloc@plt>
   1edb4:	b	1ed8c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x40>
   1edb8:	ldr	r3, [r5, #8]
   1edbc:	mov	r1, #10
   1edc0:	strb	r1, [r2, r3]
   1edc4:	add	r4, r4, #1
   1edc8:	cmp	r4, r7
   1edcc:	bcs	1edec <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa0>
   1edd0:	ldrb	r3, [r6, r4]
   1edd4:	cmp	r3, r1
   1edd8:	beq	1ee6c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x120>
   1eddc:	ldr	r3, [r5, #8]
   1ede0:	add	r3, r3, #1
   1ede4:	str	r3, [r5, #8]
   1ede8:	b	1ee84 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x138>
   1edec:	ldr	r1, [r5, #8]
   1edf0:	add	r3, r1, #1
   1edf4:	str	r3, [r5, #8]
   1edf8:	ldr	r2, [r5, #4]
   1edfc:	cmp	r3, r2
   1ee00:	bcs	1ee1c <myhtml_string_append_lowercase_with_preprocessing@@Base+0xd0>
   1ee04:	ldr	r2, [r5]
   1ee08:	ldr	r3, [r5, #8]
   1ee0c:	mov	r1, #0
   1ee10:	strb	r1, [r2, r3]
   1ee14:	ldr	r0, [r5, #8]
   1ee18:	b	1eec4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x178>
   1ee1c:	add	r1, r1, #3
   1ee20:	mov	r0, r5
   1ee24:	bl	108f8 <mycore_string_realloc@plt>
   1ee28:	b	1ee04 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xb8>
   1ee2c:	ldr	r1, [r5, #4]
   1ee30:	add	r1, r1, #5
   1ee34:	mov	r0, r5
   1ee38:	bl	108f8 <mycore_string_realloc@plt>
   1ee3c:	ldr	r2, [r5]
   1ee40:	ldr	r3, [r5, #8]
   1ee44:	strb	fp, [r2, r3]
   1ee48:	ldr	r3, [r5, #8]
   1ee4c:	add	r3, r3, #1
   1ee50:	str	r3, [r5, #8]
   1ee54:	strb	sl, [r2, r3]
   1ee58:	ldr	r3, [r5, #8]
   1ee5c:	add	r3, r3, #1
   1ee60:	str	r3, [r5, #8]
   1ee64:	mvn	r1, #66	; 0x42
   1ee68:	strb	r1, [r2, r3]
   1ee6c:	ldr	r3, [r5, #8]
   1ee70:	add	r3, r3, #1
   1ee74:	str	r3, [r5, #8]
   1ee78:	add	r4, r4, #1
   1ee7c:	cmp	r7, r4
   1ee80:	bls	1eeb4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x168>
   1ee84:	ldrb	r3, [r6, r4]
   1ee88:	cmp	r3, #13
   1ee8c:	beq	1edb8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x6c>
   1ee90:	cmp	r3, #0
   1ee94:	moveq	r1, r8
   1ee98:	orrne	r1, r8, #1
   1ee9c:	cmp	r1, #0
   1eea0:	beq	1ee2c <myhtml_string_append_lowercase_with_preprocessing@@Base+0xe0>
   1eea4:	ldr	r1, [r5, #8]
   1eea8:	ldrb	r3, [r9, r3]
   1eeac:	strb	r3, [r2, r1]
   1eeb0:	b	1ee6c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x120>
   1eeb4:	ldr	r2, [r5]
   1eeb8:	ldr	r3, [r5, #8]
   1eebc:	mov	r0, #0
   1eec0:	strb	r0, [r2, r3]
   1eec4:	add	sp, sp, #4
   1eec8:	ldrd	r4, [sp]
   1eecc:	ldrd	r6, [sp, #8]
   1eed0:	ldrd	r8, [sp, #16]
   1eed4:	ldrd	sl, [sp, #24]
   1eed8:	add	sp, sp, #32
   1eedc:	pop	{pc}		; (ldr pc, [sp], #4)
   1eee0:	ldrdeq	r1, [lr], -r4

0001eee4 <myhtml_string_before_append_any_preprocessing@@Base>:
   1eee4:	cmp	r2, #0
   1eee8:	cmpne	r3, #0
   1eeec:	beq	1ef04 <myhtml_string_before_append_any_preprocessing@@Base+0x20>
   1eef0:	ldrb	r0, [r1]
   1eef4:	cmp	r0, #10
   1eef8:	movne	r0, #0
   1eefc:	moveq	r0, #1
   1ef00:	bx	lr
   1ef04:	mov	r0, #0
   1ef08:	bx	lr

0001ef0c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1ef0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ef10:	strd	r6, [sp, #8]
   1ef14:	strd	r8, [sp, #16]
   1ef18:	strd	sl, [sp, #24]
   1ef1c:	str	lr, [sp, #32]
   1ef20:	sub	sp, sp, #4
   1ef24:	mov	r5, r0
   1ef28:	mov	r6, r1
   1ef2c:	mov	r9, r2
   1ef30:	mov	r8, r3
   1ef34:	ldrb	fp, [sp, #44]	; 0x2c
   1ef38:	add	r1, r3, #1
   1ef3c:	ldr	r3, [r0, #8]
   1ef40:	add	r1, r1, r3
   1ef44:	ldr	r3, [r0, #4]
   1ef48:	cmp	r1, r3
   1ef4c:	bcs	1ef6c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x60>
   1ef50:	ldr	r0, [sp, #40]	; 0x28
   1ef54:	bl	107c0 <myencoding_get_function_by_id@plt>
   1ef58:	mov	sl, r0
   1ef5c:	cmp	r8, #0
   1ef60:	beq	1f0c0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>
   1ef64:	mov	r4, #0
   1ef68:	b	1efbc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xb0>
   1ef6c:	bl	108f8 <mycore_string_realloc@plt>
   1ef70:	b	1ef50 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x44>
   1ef74:	add	r1, r1, #6
   1ef78:	mov	r0, r5
   1ef7c:	bl	108f8 <mycore_string_realloc@plt>
   1ef80:	b	1efe4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xd8>
   1ef84:	mov	r3, #10
   1ef88:	strb	r3, [r1, r2]
   1ef8c:	add	r3, r4, #1
   1ef90:	cmp	r3, r8
   1ef94:	bcs	1f080 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x174>
   1ef98:	ldrb	r2, [r9, r3]
   1ef9c:	cmp	r2, #10
   1efa0:	moveq	r4, r3
   1efa4:	ldr	r0, [r5, #8]
   1efa8:	add	r0, r0, r7
   1efac:	str	r0, [r5, #8]
   1efb0:	add	r4, r4, #1
   1efb4:	cmp	r8, r4
   1efb8:	bls	1f0c0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>
   1efbc:	mov	r1, r6
   1efc0:	ldrb	r0, [r9, r4]
   1efc4:	blx	sl
   1efc8:	cmp	r0, #0
   1efcc:	bne	1efb0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xa4>
   1efd0:	ldr	r1, [r5, #8]
   1efd4:	add	r2, r1, #5
   1efd8:	ldr	r3, [r5, #4]
   1efdc:	cmp	r2, r3
   1efe0:	bcs	1ef74 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x68>
   1efe4:	ldr	r1, [r5]
   1efe8:	ldr	r3, [r5, #8]
   1efec:	add	r1, r1, r3
   1eff0:	ldr	r0, [r6, #12]
   1eff4:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1eff8:	mov	r7, r0
   1effc:	cmp	r0, #1
   1f000:	bne	1efa4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x98>
   1f004:	ldr	r1, [r5]
   1f008:	ldr	r2, [r5, #8]
   1f00c:	ldrb	r3, [r1, r2]
   1f010:	cmp	r3, #13
   1f014:	beq	1ef84 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1f018:	cmp	r3, #0
   1f01c:	moveq	r3, fp
   1f020:	orrne	r3, fp, #1
   1f024:	cmp	r3, #0
   1f028:	bne	1efa4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x98>
   1f02c:	ldr	r1, [r5, #4]
   1f030:	add	r1, r1, #5
   1f034:	mov	r0, r5
   1f038:	bl	108f8 <mycore_string_realloc@plt>
   1f03c:	ldr	r2, [r5]
   1f040:	ldr	r3, [r5, #8]
   1f044:	mvn	r1, #16
   1f048:	strb	r1, [r2, r3]
   1f04c:	ldr	r3, [r5, #8]
   1f050:	add	r3, r3, #1
   1f054:	str	r3, [r5, #8]
   1f058:	ldr	r2, [r5]
   1f05c:	mvn	r1, #64	; 0x40
   1f060:	strb	r1, [r2, r3]
   1f064:	ldr	r3, [r5, #8]
   1f068:	add	r3, r3, #1
   1f06c:	str	r3, [r5, #8]
   1f070:	ldr	r2, [r5]
   1f074:	mvn	r1, #66	; 0x42
   1f078:	strb	r1, [r2, r3]
   1f07c:	b	1efa4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x98>
   1f080:	ldr	r1, [r5, #8]
   1f084:	add	r3, r1, #1
   1f088:	str	r3, [r5, #8]
   1f08c:	ldr	r2, [r5, #4]
   1f090:	cmp	r3, r2
   1f094:	bcs	1f0b0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a4>
   1f098:	ldr	r2, [r5]
   1f09c:	ldr	r3, [r5, #8]
   1f0a0:	mov	r1, #0
   1f0a4:	strb	r1, [r2, r3]
   1f0a8:	ldr	r0, [r5, #8]
   1f0ac:	b	1f0e0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1d4>
   1f0b0:	add	r1, r1, #3
   1f0b4:	mov	r0, r5
   1f0b8:	bl	108f8 <mycore_string_realloc@plt>
   1f0bc:	b	1f098 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x18c>
   1f0c0:	ldr	r1, [r5, #8]
   1f0c4:	ldr	r3, [r5, #4]
   1f0c8:	cmp	r1, r3
   1f0cc:	bcs	1f0fc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1f0>
   1f0d0:	ldr	r2, [r5]
   1f0d4:	ldr	r3, [r5, #8]
   1f0d8:	mov	r0, #0
   1f0dc:	strb	r0, [r2, r3]
   1f0e0:	add	sp, sp, #4
   1f0e4:	ldrd	r4, [sp]
   1f0e8:	ldrd	r6, [sp, #8]
   1f0ec:	ldrd	r8, [sp, #16]
   1f0f0:	ldrd	sl, [sp, #24]
   1f0f4:	add	sp, sp, #32
   1f0f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1f0fc:	add	r1, r1, #1
   1f100:	mov	r0, r5
   1f104:	bl	108f8 <mycore_string_realloc@plt>
   1f108:	b	1f0d0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c4>

0001f10c <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1f10c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f110:	strd	r6, [sp, #8]
   1f114:	str	r8, [sp, #16]
   1f118:	str	lr, [sp, #20]
   1f11c:	sub	sp, sp, #32
   1f120:	mov	r5, r0
   1f124:	mov	r6, r1
   1f128:	mov	r7, r2
   1f12c:	mov	r8, r3
   1f130:	add	r4, sp, #8
   1f134:	mov	r0, r4
   1f138:	bl	10160 <myencoding_result_clean@plt>
   1f13c:	ldrb	r3, [sp, #56]	; 0x38
   1f140:	str	r3, [sp, #4]
   1f144:	str	r8, [sp]
   1f148:	mov	r3, r7
   1f14c:	mov	r2, r6
   1f150:	mov	r1, r4
   1f154:	mov	r0, r5
   1f158:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1f15c:	add	sp, sp, #32
   1f160:	ldrd	r4, [sp]
   1f164:	ldrd	r6, [sp, #8]
   1f168:	ldr	r8, [sp, #16]
   1f16c:	add	sp, sp, #20
   1f170:	pop	{pc}		; (ldr pc, [sp], #4)

0001f174 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1f174:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f178:	strd	r6, [sp, #8]
   1f17c:	strd	r8, [sp, #16]
   1f180:	strd	sl, [sp, #24]
   1f184:	str	lr, [sp, #32]
   1f188:	sub	sp, sp, #4
   1f18c:	mov	r5, r0
   1f190:	mov	r6, r1
   1f194:	mov	r9, r2
   1f198:	mov	r8, r3
   1f19c:	ldrb	fp, [sp, #44]	; 0x2c
   1f1a0:	add	r1, r3, #1
   1f1a4:	ldr	r3, [r0, #8]
   1f1a8:	add	r1, r1, r3
   1f1ac:	ldr	r3, [r0, #4]
   1f1b0:	cmp	r1, r3
   1f1b4:	bcs	1f1d4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x60>
   1f1b8:	ldr	r0, [sp, #40]	; 0x28
   1f1bc:	bl	107c0 <myencoding_get_function_by_id@plt>
   1f1c0:	mov	sl, r0
   1f1c4:	cmp	r8, #0
   1f1c8:	beq	1f328 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>
   1f1cc:	mov	r4, #0
   1f1d0:	b	1f224 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xb0>
   1f1d4:	bl	108f8 <mycore_string_realloc@plt>
   1f1d8:	b	1f1b8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x44>
   1f1dc:	add	r1, r1, #6
   1f1e0:	mov	r0, r5
   1f1e4:	bl	108f8 <mycore_string_realloc@plt>
   1f1e8:	b	1f24c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xd8>
   1f1ec:	mov	r3, #10
   1f1f0:	strb	r3, [r1, r2]
   1f1f4:	add	r3, r4, #1
   1f1f8:	cmp	r3, r8
   1f1fc:	bcs	1f2e8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x174>
   1f200:	ldrb	r2, [r9, r3]
   1f204:	cmp	r2, #10
   1f208:	moveq	r4, r3
   1f20c:	ldr	r0, [r5, #8]
   1f210:	add	r0, r0, r7
   1f214:	str	r0, [r5, #8]
   1f218:	add	r4, r4, #1
   1f21c:	cmp	r8, r4
   1f220:	bls	1f328 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>
   1f224:	mov	r1, r6
   1f228:	ldrb	r0, [r9, r4]
   1f22c:	blx	sl
   1f230:	cmp	r0, #0
   1f234:	bne	1f218 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xa4>
   1f238:	ldr	r1, [r5, #8]
   1f23c:	add	r2, r1, #5
   1f240:	ldr	r3, [r5, #4]
   1f244:	cmp	r2, r3
   1f248:	bcs	1f1dc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x68>
   1f24c:	ldr	r1, [r5]
   1f250:	ldr	r3, [r5, #8]
   1f254:	add	r1, r1, r3
   1f258:	ldr	r0, [r6, #12]
   1f25c:	bl	fc68 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1f260:	mov	r7, r0
   1f264:	cmp	r0, #1
   1f268:	bne	1f20c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x98>
   1f26c:	ldr	r1, [r5]
   1f270:	ldr	r2, [r5, #8]
   1f274:	ldrb	r3, [r1, r2]
   1f278:	cmp	r3, #13
   1f27c:	beq	1f1ec <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1f280:	cmp	r3, #0
   1f284:	moveq	r3, fp
   1f288:	orrne	r3, fp, #1
   1f28c:	cmp	r3, #0
   1f290:	bne	1f20c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x98>
   1f294:	ldr	r1, [r5, #4]
   1f298:	add	r1, r1, #5
   1f29c:	mov	r0, r5
   1f2a0:	bl	108f8 <mycore_string_realloc@plt>
   1f2a4:	ldr	r2, [r5]
   1f2a8:	ldr	r3, [r5, #8]
   1f2ac:	mvn	r1, #16
   1f2b0:	strb	r1, [r2, r3]
   1f2b4:	ldr	r3, [r5, #8]
   1f2b8:	add	r3, r3, #1
   1f2bc:	str	r3, [r5, #8]
   1f2c0:	ldr	r2, [r5]
   1f2c4:	mvn	r1, #64	; 0x40
   1f2c8:	strb	r1, [r2, r3]
   1f2cc:	ldr	r3, [r5, #8]
   1f2d0:	add	r3, r3, #1
   1f2d4:	str	r3, [r5, #8]
   1f2d8:	ldr	r2, [r5]
   1f2dc:	mvn	r1, #66	; 0x42
   1f2e0:	strb	r1, [r2, r3]
   1f2e4:	b	1f20c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x98>
   1f2e8:	ldr	r1, [r5, #8]
   1f2ec:	add	r3, r1, #1
   1f2f0:	str	r3, [r5, #8]
   1f2f4:	ldr	r2, [r5, #4]
   1f2f8:	cmp	r3, r2
   1f2fc:	bcs	1f318 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a4>
   1f300:	ldr	r2, [r5]
   1f304:	ldr	r3, [r5, #8]
   1f308:	mov	r1, #0
   1f30c:	strb	r1, [r2, r3]
   1f310:	ldr	r0, [r5, #8]
   1f314:	b	1f348 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1d4>
   1f318:	add	r1, r1, #3
   1f31c:	mov	r0, r5
   1f320:	bl	108f8 <mycore_string_realloc@plt>
   1f324:	b	1f300 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x18c>
   1f328:	ldr	r1, [r5, #8]
   1f32c:	ldr	r3, [r5, #4]
   1f330:	cmp	r1, r3
   1f334:	bcs	1f364 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1f0>
   1f338:	ldr	r2, [r5]
   1f33c:	ldr	r3, [r5, #8]
   1f340:	mov	r0, #0
   1f344:	strb	r0, [r2, r3]
   1f348:	add	sp, sp, #4
   1f34c:	ldrd	r4, [sp]
   1f350:	ldrd	r6, [sp, #8]
   1f354:	ldrd	r8, [sp, #16]
   1f358:	ldrd	sl, [sp, #24]
   1f35c:	add	sp, sp, #32
   1f360:	pop	{pc}		; (ldr pc, [sp], #4)
   1f364:	add	r1, r1, #1
   1f368:	mov	r0, r5
   1f36c:	bl	108f8 <mycore_string_realloc@plt>
   1f370:	b	1f338 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c4>

0001f374 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1f374:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f378:	strd	r6, [sp, #8]
   1f37c:	str	r8, [sp, #16]
   1f380:	str	lr, [sp, #20]
   1f384:	sub	sp, sp, #32
   1f388:	mov	r5, r0
   1f38c:	mov	r6, r1
   1f390:	mov	r7, r2
   1f394:	mov	r8, r3
   1f398:	add	r4, sp, #8
   1f39c:	mov	r0, r4
   1f3a0:	bl	10160 <myencoding_result_clean@plt>
   1f3a4:	ldrb	r3, [sp, #56]	; 0x38
   1f3a8:	str	r3, [sp, #4]
   1f3ac:	str	r8, [sp]
   1f3b0:	mov	r3, r7
   1f3b4:	mov	r2, r6
   1f3b8:	mov	r1, r4
   1f3bc:	mov	r0, r5
   1f3c0:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1f3c4:	add	sp, sp, #32
   1f3c8:	ldrd	r4, [sp]
   1f3cc:	ldrd	r6, [sp, #8]
   1f3d0:	ldr	r8, [sp, #16]
   1f3d4:	add	sp, sp, #20
   1f3d8:	pop	{pc}		; (ldr pc, [sp], #4)

0001f3dc <myhtml_parser_stream@@Base>:
   1f3dc:	str	r4, [sp, #-8]!
   1f3e0:	str	lr, [sp, #4]
   1f3e4:	mov	r4, r1
   1f3e8:	ldr	r3, [r1]
   1f3ec:	ldr	r3, [r3, #184]	; 0xb8
   1f3f0:	tst	r3, #1
   1f3f4:	bne	1f40c <myhtml_parser_stream@@Base+0x30>
   1f3f8:	ldr	r1, [r4, #4]
   1f3fc:	ldr	r0, [r4]
   1f400:	bl	fe3c <myhtml_rules_tree_dispatcher@plt>
   1f404:	cmp	r0, #0
   1f408:	bne	1f3f8 <myhtml_parser_stream@@Base+0x1c>
   1f40c:	ldr	r4, [sp]
   1f410:	add	sp, sp, #4
   1f414:	pop	{pc}		; (ldr pc, [sp], #4)

0001f418 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1f418:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f41c:	strd	r6, [sp, #8]
   1f420:	strd	r8, [sp, #16]
   1f424:	strd	sl, [sp, #24]
   1f428:	str	lr, [sp, #32]
   1f42c:	sub	sp, sp, #20
   1f430:	mov	fp, r0
   1f434:	mov	r8, r1
   1f438:	mov	sl, r2
   1f43c:	mov	r4, r3
   1f440:	ldr	r6, [sp, #56]	; 0x38
   1f444:	mov	r1, r3
   1f448:	ldr	r0, [r0, #80]	; 0x50
   1f44c:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1f450:	mov	r5, r0
   1f454:	ldr	r2, [r0, #12]
   1f458:	sub	r4, r4, r2
   1f45c:	ldr	r3, [r0, #8]
   1f460:	add	r2, r4, r6
   1f464:	cmp	r2, r3
   1f468:	movhi	r9, #0
   1f46c:	addhi	r2, sl, #8
   1f470:	strhi	r2, [sp, #12]
   1f474:	bhi	1f51c <myhtml_parser_token_data_to_string_lowercase@@Base+0x104>
   1f478:	ldr	r3, [fp, #200]	; 0xc8
   1f47c:	cmp	r3, #0
   1f480:	bne	1f4a4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x8c>
   1f484:	ldr	r1, [r0]
   1f488:	ldrb	r3, [sl, #61]	; 0x3d
   1f48c:	mov	r2, r6
   1f490:	add	r1, r1, r4
   1f494:	mov	r0, r8
   1f498:	bl	10fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1f49c:	ldr	r0, [r8, #8]
   1f4a0:	b	1f5bc <myhtml_parser_token_data_to_string_lowercase@@Base+0x1a4>
   1f4a4:	ldr	r2, [r0]
   1f4a8:	ldrb	r3, [sl, #61]	; 0x3d
   1f4ac:	str	r3, [sp, #4]
   1f4b0:	ldr	r3, [sl, #4]
   1f4b4:	str	r3, [sp]
   1f4b8:	mov	r3, r6
   1f4bc:	add	r2, r2, r4
   1f4c0:	add	r1, sl, #8
   1f4c4:	mov	r0, r8
   1f4c8:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1f4cc:	b	1f49c <myhtml_parser_token_data_to_string_lowercase@@Base+0x84>
   1f4d0:	add	r4, r0, r4
   1f4d4:	ldr	r2, [r5]
   1f4d8:	ldrb	r3, [sl, #61]	; 0x3d
   1f4dc:	str	r3, [sp, #4]
   1f4e0:	ldr	r3, [sl, #4]
   1f4e4:	str	r3, [sp]
   1f4e8:	sub	r3, r7, r0
   1f4ec:	add	r2, r2, r4
   1f4f0:	ldr	r1, [sp, #12]
   1f4f4:	mov	r0, r8
   1f4f8:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1f4fc:	mov	r9, r0
   1f500:	ldr	r5, [r5, #20]
   1f504:	cmp	r5, #0
   1f508:	beq	1f5b8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1a0>
   1f50c:	ldr	r3, [r5, #8]
   1f510:	mov	r4, #0
   1f514:	cmp	r3, r6
   1f518:	bcs	1f578 <myhtml_parser_token_data_to_string_lowercase@@Base+0x160>
   1f51c:	sub	r7, r3, r4
   1f520:	sub	r3, r4, r3
   1f524:	add	r6, r6, r3
   1f528:	ldr	r1, [r5]
   1f52c:	mov	r3, r9
   1f530:	mov	r2, r7
   1f534:	add	r1, r1, r4
   1f538:	mov	r0, r8
   1f53c:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1f540:	cmp	r7, #0
   1f544:	beq	1f500 <myhtml_parser_token_data_to_string_lowercase@@Base+0xe8>
   1f548:	ldr	r3, [fp, #200]	; 0xc8
   1f54c:	cmp	r3, #0
   1f550:	bne	1f4d0 <myhtml_parser_token_data_to_string_lowercase@@Base+0xb8>
   1f554:	add	r4, r0, r4
   1f558:	ldr	r1, [r5]
   1f55c:	ldrb	r3, [sl, #61]	; 0x3d
   1f560:	sub	r2, r7, r0
   1f564:	add	r1, r1, r4
   1f568:	mov	r0, r8
   1f56c:	bl	10fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1f570:	mov	r9, r0
   1f574:	b	1f500 <myhtml_parser_token_data_to_string_lowercase@@Base+0xe8>
   1f578:	mov	r3, r9
   1f57c:	mov	r2, r6
   1f580:	ldr	r1, [r5]
   1f584:	mov	r0, r8
   1f588:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1f58c:	cmp	r6, #0
   1f590:	beq	1f5b8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1a0>
   1f594:	ldr	r3, [fp, #200]	; 0xc8
   1f598:	cmp	r3, #0
   1f59c:	bne	1f5d8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1c0>
   1f5a0:	ldr	r1, [r5]
   1f5a4:	ldrb	r3, [sl, #61]	; 0x3d
   1f5a8:	sub	r2, r6, r0
   1f5ac:	add	r1, r1, r0
   1f5b0:	mov	r0, r8
   1f5b4:	bl	10fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1f5b8:	ldr	r0, [r8, #8]
   1f5bc:	add	sp, sp, #20
   1f5c0:	ldrd	r4, [sp]
   1f5c4:	ldrd	r6, [sp, #8]
   1f5c8:	ldrd	r8, [sp, #16]
   1f5cc:	ldrd	sl, [sp, #24]
   1f5d0:	add	sp, sp, #32
   1f5d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1f5d8:	ldr	r2, [r5]
   1f5dc:	ldrb	r3, [sl, #61]	; 0x3d
   1f5e0:	str	r3, [sp, #4]
   1f5e4:	ldr	r3, [sl, #4]
   1f5e8:	str	r3, [sp]
   1f5ec:	sub	r3, r6, r0
   1f5f0:	add	r2, r2, r0
   1f5f4:	add	r1, sl, #8
   1f5f8:	mov	r0, r8
   1f5fc:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1f600:	b	1f5b8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1a0>

0001f604 <myhtml_parser_token_data_to_string@@Base>:
   1f604:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f608:	strd	r6, [sp, #8]
   1f60c:	strd	r8, [sp, #16]
   1f610:	strd	sl, [sp, #24]
   1f614:	str	lr, [sp, #32]
   1f618:	sub	sp, sp, #20
   1f61c:	mov	fp, r0
   1f620:	mov	r8, r1
   1f624:	mov	sl, r2
   1f628:	mov	r4, r3
   1f62c:	ldr	r6, [sp, #56]	; 0x38
   1f630:	mov	r1, r3
   1f634:	ldr	r0, [r0, #80]	; 0x50
   1f638:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1f63c:	mov	r5, r0
   1f640:	ldr	r2, [r0, #12]
   1f644:	sub	r4, r4, r2
   1f648:	ldr	r3, [r0, #8]
   1f64c:	add	r2, r4, r6
   1f650:	cmp	r2, r3
   1f654:	movhi	r9, #0
   1f658:	addhi	r2, sl, #8
   1f65c:	strhi	r2, [sp, #12]
   1f660:	bhi	1f708 <myhtml_parser_token_data_to_string@@Base+0x104>
   1f664:	ldr	r3, [fp, #200]	; 0xc8
   1f668:	cmp	r3, #0
   1f66c:	bne	1f690 <myhtml_parser_token_data_to_string@@Base+0x8c>
   1f670:	ldr	r1, [r0]
   1f674:	ldrb	r3, [sl, #61]	; 0x3d
   1f678:	mov	r2, r6
   1f67c:	add	r1, r1, r4
   1f680:	mov	r0, r8
   1f684:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1f688:	ldr	r0, [r8, #8]
   1f68c:	b	1f7a8 <myhtml_parser_token_data_to_string@@Base+0x1a4>
   1f690:	ldr	r2, [r0]
   1f694:	ldrb	r3, [sl, #61]	; 0x3d
   1f698:	str	r3, [sp, #4]
   1f69c:	ldr	r3, [sl, #4]
   1f6a0:	str	r3, [sp]
   1f6a4:	mov	r3, r6
   1f6a8:	add	r2, r2, r4
   1f6ac:	add	r1, sl, #8
   1f6b0:	mov	r0, r8
   1f6b4:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1f6b8:	b	1f688 <myhtml_parser_token_data_to_string@@Base+0x84>
   1f6bc:	add	r4, r0, r4
   1f6c0:	ldr	r2, [r5]
   1f6c4:	ldrb	r3, [sl, #61]	; 0x3d
   1f6c8:	str	r3, [sp, #4]
   1f6cc:	ldr	r3, [sl, #4]
   1f6d0:	str	r3, [sp]
   1f6d4:	sub	r3, r7, r0
   1f6d8:	add	r2, r2, r4
   1f6dc:	ldr	r1, [sp, #12]
   1f6e0:	mov	r0, r8
   1f6e4:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1f6e8:	mov	r9, r0
   1f6ec:	ldr	r5, [r5, #20]
   1f6f0:	cmp	r5, #0
   1f6f4:	beq	1f7a4 <myhtml_parser_token_data_to_string@@Base+0x1a0>
   1f6f8:	ldr	r3, [r5, #8]
   1f6fc:	mov	r4, #0
   1f700:	cmp	r3, r6
   1f704:	bcs	1f764 <myhtml_parser_token_data_to_string@@Base+0x160>
   1f708:	sub	r7, r3, r4
   1f70c:	sub	r3, r4, r3
   1f710:	add	r6, r6, r3
   1f714:	ldr	r1, [r5]
   1f718:	mov	r3, r9
   1f71c:	mov	r2, r7
   1f720:	add	r1, r1, r4
   1f724:	mov	r0, r8
   1f728:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1f72c:	cmp	r7, #0
   1f730:	beq	1f6ec <myhtml_parser_token_data_to_string@@Base+0xe8>
   1f734:	ldr	r3, [fp, #200]	; 0xc8
   1f738:	cmp	r3, #0
   1f73c:	bne	1f6bc <myhtml_parser_token_data_to_string@@Base+0xb8>
   1f740:	add	r4, r0, r4
   1f744:	ldr	r1, [r5]
   1f748:	ldrb	r3, [sl, #61]	; 0x3d
   1f74c:	sub	r2, r7, r0
   1f750:	add	r1, r1, r4
   1f754:	mov	r0, r8
   1f758:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1f75c:	mov	r9, r0
   1f760:	b	1f6ec <myhtml_parser_token_data_to_string@@Base+0xe8>
   1f764:	mov	r3, r9
   1f768:	mov	r2, r6
   1f76c:	ldr	r1, [r5]
   1f770:	mov	r0, r8
   1f774:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1f778:	cmp	r6, #0
   1f77c:	beq	1f7a4 <myhtml_parser_token_data_to_string@@Base+0x1a0>
   1f780:	ldr	r3, [fp, #200]	; 0xc8
   1f784:	cmp	r3, #0
   1f788:	bne	1f7c4 <myhtml_parser_token_data_to_string@@Base+0x1c0>
   1f78c:	ldr	r1, [r5]
   1f790:	ldrb	r3, [sl, #61]	; 0x3d
   1f794:	sub	r2, r6, r0
   1f798:	add	r1, r1, r0
   1f79c:	mov	r0, r8
   1f7a0:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1f7a4:	ldr	r0, [r8, #8]
   1f7a8:	add	sp, sp, #20
   1f7ac:	ldrd	r4, [sp]
   1f7b0:	ldrd	r6, [sp, #8]
   1f7b4:	ldrd	r8, [sp, #16]
   1f7b8:	ldrd	sl, [sp, #24]
   1f7bc:	add	sp, sp, #32
   1f7c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1f7c4:	ldr	r2, [r5]
   1f7c8:	ldrb	r3, [sl, #61]	; 0x3d
   1f7cc:	str	r3, [sp, #4]
   1f7d0:	ldr	r3, [sl, #4]
   1f7d4:	str	r3, [sp]
   1f7d8:	sub	r3, r6, r0
   1f7dc:	add	r2, r2, r0
   1f7e0:	add	r1, sl, #8
   1f7e4:	mov	r0, r8
   1f7e8:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1f7ec:	b	1f7a4 <myhtml_parser_token_data_to_string@@Base+0x1a0>

0001f7f0 <myhtml_parser_token_data_to_string_charef@@Base>:
   1f7f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f7f4:	strd	r6, [sp, #8]
   1f7f8:	str	r8, [sp, #16]
   1f7fc:	str	lr, [sp, #20]
   1f800:	mov	r7, r1
   1f804:	mov	r8, r2
   1f808:	mov	r5, r3
   1f80c:	ldr	r6, [sp, #24]
   1f810:	mov	r1, r3
   1f814:	ldr	r0, [r0, #80]	; 0x50
   1f818:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1f81c:	mov	r4, r0
   1f820:	ldr	r1, [r0, #12]
   1f824:	sub	r1, r5, r1
   1f828:	ldr	r3, [r0, #8]
   1f82c:	add	r2, r1, r6
   1f830:	cmp	r2, r3
   1f834:	movhi	r5, #0
   1f838:	bls	1f8b0 <myhtml_parser_token_data_to_string_charef@@Base+0xc0>
   1f83c:	sub	r2, r1, r3
   1f840:	add	r6, r6, r2
   1f844:	ldr	r2, [r4]
   1f848:	sub	r3, r3, r1
   1f84c:	add	r2, r2, r1
   1f850:	mov	r1, r7
   1f854:	mov	r0, r8
   1f858:	bl	106e8 <myhtml_data_process@plt>
   1f85c:	ldr	r4, [r4, #20]
   1f860:	cmp	r4, #0
   1f864:	beq	1f88c <myhtml_parser_token_data_to_string_charef@@Base+0x9c>
   1f868:	ldr	r3, [r4, #8]
   1f86c:	mov	r1, r5
   1f870:	cmp	r3, r6
   1f874:	bcc	1f83c <myhtml_parser_token_data_to_string_charef@@Base+0x4c>
   1f878:	mov	r3, r6
   1f87c:	ldr	r2, [r4]
   1f880:	mov	r1, r7
   1f884:	mov	r0, r8
   1f888:	bl	106e8 <myhtml_data_process@plt>
   1f88c:	mov	r1, r7
   1f890:	mov	r0, r8
   1f894:	bl	108bc <myhtml_data_process_end@plt>
   1f898:	ldr	r0, [r7, #8]
   1f89c:	ldrd	r4, [sp]
   1f8a0:	ldrd	r6, [sp, #8]
   1f8a4:	ldr	r8, [sp, #16]
   1f8a8:	add	sp, sp, #20
   1f8ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1f8b0:	ldr	r2, [r0]
   1f8b4:	mov	r3, r6
   1f8b8:	add	r2, r2, r1
   1f8bc:	mov	r1, r7
   1f8c0:	mov	r0, r8
   1f8c4:	bl	106e8 <myhtml_data_process@plt>
   1f8c8:	mov	r1, r7
   1f8cc:	mov	r0, r8
   1f8d0:	bl	108bc <myhtml_data_process_end@plt>
   1f8d4:	ldr	r0, [r7, #8]
   1f8d8:	b	1f89c <myhtml_parser_token_data_to_string_charef@@Base+0xac>

0001f8dc <myhtml_parser_worker@@Base>:
   1f8dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f8e0:	strd	r6, [sp, #8]
   1f8e4:	strd	r8, [sp, #16]
   1f8e8:	str	sl, [sp, #24]
   1f8ec:	str	lr, [sp, #28]
   1f8f0:	sub	sp, sp, #72	; 0x48
   1f8f4:	ldr	r5, [r1]
   1f8f8:	ldr	r6, [r1, #4]
   1f8fc:	ldr	r3, [r5, #184]	; 0xb8
   1f900:	tst	r3, #3
   1f904:	beq	1f914 <myhtml_parser_worker@@Base+0x38>
   1f908:	ldr	r3, [r5, #184]	; 0xb8
   1f90c:	tst	r3, #2
   1f910:	bne	1f98c <myhtml_parser_worker@@Base+0xb0>
   1f914:	ldr	r3, [r5]
   1f918:	ldr	r3, [r3, #4]
   1f91c:	cmp	r3, #0
   1f920:	ldrne	r3, [r3, #12]
   1f924:	addne	r0, r0, r3
   1f928:	ldr	r3, [r5, #144]	; 0x90
   1f92c:	ldr	r9, [r3, r0, lsl #2]
   1f930:	ldr	r3, [r5, #220]	; 0xdc
   1f934:	cmp	r3, #0
   1f938:	beq	1f950 <myhtml_parser_worker@@Base+0x74>
   1f93c:	ldr	r2, [r5, #228]	; 0xe4
   1f940:	mov	r1, r6
   1f944:	mov	r0, r5
   1f948:	blx	r3
   1f94c:	str	r0, [r5, #228]	; 0xe4
   1f950:	ldr	r3, [r6]
   1f954:	sub	r3, r3, #1
   1f958:	cmp	r3, #1
   1f95c:	bls	1f9dc <myhtml_parser_worker@@Base+0x100>
   1f960:	ldr	r3, [r6, #40]	; 0x28
   1f964:	cmp	r3, #0
   1f968:	beq	1fb70 <myhtml_parser_worker@@Base+0x294>
   1f96c:	add	r0, r6, #4
   1f970:	bl	11024 <mycore_string_clean_all@plt>
   1f974:	ldr	r4, [r6, #40]	; 0x28
   1f978:	cmp	r4, #0
   1f97c:	beq	1fb80 <myhtml_parser_worker@@Base+0x2a4>
   1f980:	add	r8, sp, #8
   1f984:	mov	sl, #1
   1f988:	b	1fac0 <myhtml_parser_worker@@Base+0x1e4>
   1f98c:	ldr	r3, [r5, #220]	; 0xdc
   1f990:	cmp	r3, #0
   1f994:	beq	1f9ac <myhtml_parser_worker@@Base+0xd0>
   1f998:	ldr	r2, [r5, #228]	; 0xe4
   1f99c:	mov	r1, r6
   1f9a0:	mov	r0, r5
   1f9a4:	blx	r3
   1f9a8:	str	r0, [r5, #228]	; 0xe4
   1f9ac:	ldr	r3, [r6, #48]	; 0x30
   1f9b0:	orr	r3, r3, #4
   1f9b4:	str	r3, [r6, #48]	; 0x30
   1f9b8:	ldr	r3, [r5, #224]	; 0xe0
   1f9bc:	cmp	r3, #0
   1f9c0:	beq	1fbac <myhtml_parser_worker@@Base+0x2d0>
   1f9c4:	ldr	r2, [r5, #232]	; 0xe8
   1f9c8:	mov	r1, r6
   1f9cc:	mov	r0, r5
   1f9d0:	blx	r3
   1f9d4:	str	r0, [r5, #232]	; 0xe8
   1f9d8:	b	1fbac <myhtml_parser_worker@@Base+0x2d0>
   1f9dc:	add	r4, r6, #4
   1f9e0:	ldr	r3, [r6, #28]
   1f9e4:	add	r3, r3, #1
   1f9e8:	mov	r2, r4
   1f9ec:	mov	r1, r9
   1f9f0:	ldr	r0, [r5, #4]
   1f9f4:	bl	105a4 <mycore_string_init@plt>
   1f9f8:	mov	r3, #0
   1f9fc:	str	r3, [r6, #40]	; 0x28
   1fa00:	str	r3, [r6, #44]	; 0x2c
   1fa04:	add	r0, sp, #8
   1fa08:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1fa0c:	ldr	r3, [r5, #200]	; 0xc8
   1fa10:	str	r3, [sp, #12]
   1fa14:	ldr	r3, [r6, #48]	; 0x30
   1fa18:	tst	r3, #512	; 0x200
   1fa1c:	bne	1fa58 <myhtml_parser_worker@@Base+0x17c>
   1fa20:	ldr	r3, [r6, #48]	; 0x30
   1fa24:	tst	r3, #16
   1fa28:	bne	1fa38 <myhtml_parser_worker@@Base+0x15c>
   1fa2c:	ldr	r3, [r6, #48]	; 0x30
   1fa30:	tst	r3, #256	; 0x100
   1fa34:	beq	1fa80 <myhtml_parser_worker@@Base+0x1a4>
   1fa38:	ldr	r3, [r6, #24]
   1fa3c:	ldr	r2, [r6, #28]
   1fa40:	str	r2, [sp]
   1fa44:	add	r2, sp, #8
   1fa48:	mov	r1, r4
   1fa4c:	mov	r0, r5
   1fa50:	bl	10394 <myhtml_parser_token_data_to_string_charef@plt>
   1fa54:	b	1fb80 <myhtml_parser_worker@@Base+0x2a4>
   1fa58:	mov	r3, #1
   1fa5c:	strb	r3, [sp, #69]	; 0x45
   1fa60:	ldr	r3, [r6, #24]
   1fa64:	ldr	r2, [r6, #28]
   1fa68:	str	r2, [sp]
   1fa6c:	add	r2, sp, #8
   1fa70:	mov	r1, r4
   1fa74:	mov	r0, r5
   1fa78:	bl	10394 <myhtml_parser_token_data_to_string_charef@plt>
   1fa7c:	b	1fb80 <myhtml_parser_worker@@Base+0x2a4>
   1fa80:	ldr	r3, [r6, #24]
   1fa84:	ldr	r2, [r6, #28]
   1fa88:	str	r2, [sp]
   1fa8c:	add	r2, sp, #8
   1fa90:	mov	r1, r4
   1fa94:	mov	r0, r5
   1fa98:	bl	10a60 <myhtml_parser_token_data_to_string@plt>
   1fa9c:	b	1fb80 <myhtml_parser_worker@@Base+0x2a4>
   1faa0:	add	r0, r4, #8
   1faa4:	bl	11024 <mycore_string_clean_all@plt>
   1faa8:	b	1fb14 <myhtml_parser_worker@@Base+0x238>
   1faac:	add	r0, r4, #28
   1fab0:	bl	11024 <mycore_string_clean_all@plt>
   1fab4:	ldr	r4, [r4]
   1fab8:	cmp	r4, #0
   1fabc:	beq	1fb80 <myhtml_parser_worker@@Base+0x2a4>
   1fac0:	ldr	r3, [r4, #52]	; 0x34
   1fac4:	cmp	r3, #0
   1fac8:	beq	1faa0 <myhtml_parser_worker@@Base+0x1c4>
   1facc:	mov	r0, r8
   1fad0:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1fad4:	ldr	r3, [r5, #200]	; 0xc8
   1fad8:	str	r3, [sp, #12]
   1fadc:	add	r7, r4, #8
   1fae0:	ldr	r3, [r4, #52]	; 0x34
   1fae4:	add	r3, r3, #1
   1fae8:	mov	r2, r7
   1faec:	mov	r1, r9
   1faf0:	ldr	r0, [r5, #4]
   1faf4:	bl	105a4 <mycore_string_init@plt>
   1faf8:	ldr	r3, [r4, #48]	; 0x30
   1fafc:	ldr	r2, [r4, #52]	; 0x34
   1fb00:	str	r2, [sp]
   1fb04:	mov	r2, r8
   1fb08:	mov	r1, r7
   1fb0c:	mov	r0, r5
   1fb10:	bl	10fa0 <myhtml_parser_token_data_to_string_lowercase@plt>
   1fb14:	ldr	r3, [r4, #60]	; 0x3c
   1fb18:	cmp	r3, #0
   1fb1c:	beq	1faac <myhtml_parser_worker@@Base+0x1d0>
   1fb20:	mov	r0, r8
   1fb24:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1fb28:	ldr	r3, [r5, #200]	; 0xc8
   1fb2c:	str	r3, [sp, #12]
   1fb30:	strb	sl, [sp, #68]	; 0x44
   1fb34:	add	r7, r4, #28
   1fb38:	ldr	r3, [r4, #60]	; 0x3c
   1fb3c:	add	r3, r3, #1
   1fb40:	mov	r2, r7
   1fb44:	mov	r1, r9
   1fb48:	ldr	r0, [r5, #4]
   1fb4c:	bl	105a4 <mycore_string_init@plt>
   1fb50:	ldr	r3, [r4, #56]	; 0x38
   1fb54:	ldr	r2, [r4, #60]	; 0x3c
   1fb58:	str	r2, [sp]
   1fb5c:	mov	r2, r8
   1fb60:	mov	r1, r7
   1fb64:	mov	r0, r5
   1fb68:	bl	10394 <myhtml_parser_token_data_to_string_charef@plt>
   1fb6c:	b	1fab4 <myhtml_parser_worker@@Base+0x1d8>
   1fb70:	mov	r3, #0
   1fb74:	str	r3, [r6, #44]	; 0x2c
   1fb78:	add	r0, r6, #4
   1fb7c:	bl	11024 <mycore_string_clean_all@plt>
   1fb80:	ldr	r3, [r6, #48]	; 0x30
   1fb84:	orr	r3, r3, #4
   1fb88:	str	r3, [r6, #48]	; 0x30
   1fb8c:	ldr	r3, [r5, #224]	; 0xe0
   1fb90:	cmp	r3, #0
   1fb94:	beq	1fbac <myhtml_parser_worker@@Base+0x2d0>
   1fb98:	ldr	r2, [r5, #232]	; 0xe8
   1fb9c:	mov	r1, r6
   1fba0:	mov	r0, r5
   1fba4:	blx	r3
   1fba8:	str	r0, [r5, #232]	; 0xe8
   1fbac:	add	sp, sp, #72	; 0x48
   1fbb0:	ldrd	r4, [sp]
   1fbb4:	ldrd	r6, [sp, #8]
   1fbb8:	ldrd	r8, [sp, #16]
   1fbbc:	ldr	sl, [sp, #24]
   1fbc0:	add	sp, sp, #28
   1fbc4:	pop	{pc}		; (ldr pc, [sp], #4)

0001fbc8 <myhtml_parser_worker_stream@@Base>:
   1fbc8:	strd	r4, [sp, #-16]!
   1fbcc:	str	r6, [sp, #8]
   1fbd0:	str	lr, [sp, #12]
   1fbd4:	mov	r4, r0
   1fbd8:	mov	r5, r1
   1fbdc:	bl	fd1c <myhtml_parser_worker@plt>
   1fbe0:	mov	r1, r5
   1fbe4:	mov	r0, r4
   1fbe8:	bl	10f88 <myhtml_parser_stream@plt>
   1fbec:	ldrd	r4, [sp]
   1fbf0:	ldr	r6, [sp, #8]
   1fbf4:	add	sp, sp, #12
   1fbf8:	pop	{pc}		; (ldr pc, [sp], #4)

0001fbfc <myhtml_insertion_mode_text@@Base>:
   1fbfc:	str	r4, [sp, #-8]!
   1fc00:	str	lr, [sp, #4]
   1fc04:	mov	r4, r0
   1fc08:	ldr	r3, [r1, #48]	; 0x30
   1fc0c:	tst	r3, #1
   1fc10:	beq	1fc30 <myhtml_insertion_mode_text@@Base+0x34>
   1fc14:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1fc18:	ldr	r3, [r4, #172]	; 0xac
   1fc1c:	str	r3, [r4, #168]	; 0xa8
   1fc20:	mov	r0, #0
   1fc24:	ldr	r4, [sp]
   1fc28:	add	sp, sp, #4
   1fc2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1fc30:	ldr	r3, [r1]
   1fc34:	cmp	r3, #251	; 0xfb
   1fc38:	beq	1fc48 <myhtml_insertion_mode_text@@Base+0x4c>
   1fc3c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1fc40:	mov	r0, #0
   1fc44:	b	1fc24 <myhtml_insertion_mode_text@@Base+0x28>
   1fc48:	bl	105bc <myhtml_tree_current_node@plt>
   1fc4c:	ldr	r3, [r0, #4]
   1fc50:	cmp	r3, #112	; 0x70
   1fc54:	beq	1fc70 <myhtml_insertion_mode_text@@Base+0x74>
   1fc58:	mov	r0, r4
   1fc5c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1fc60:	ldr	r3, [r4, #172]	; 0xac
   1fc64:	str	r3, [r4, #168]	; 0xa8
   1fc68:	mov	r0, #1
   1fc6c:	b	1fc24 <myhtml_insertion_mode_text@@Base+0x28>
   1fc70:	ldr	r3, [r0]
   1fc74:	orr	r3, r3, #8
   1fc78:	str	r3, [r0]
   1fc7c:	b	1fc58 <myhtml_insertion_mode_text@@Base+0x5c>

0001fc80 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1fc80:	str	r4, [sp, #-8]!
   1fc84:	str	lr, [sp, #4]
   1fc88:	mov	r4, r1
   1fc8c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1fc90:	add	r0, r4, #4
   1fc94:	bl	10448 <mycore_string_crop_whitespace_from_begin@plt>
   1fc98:	ldr	r4, [sp]
   1fc9c:	add	sp, sp, #4
   1fca0:	pop	{pc}		; (ldr pc, [sp], #4)

0001fca4 <myhtml_insertion_mode_initial@@Base>:
   1fca4:	strd	r4, [sp, #-16]!
   1fca8:	str	r6, [sp, #8]
   1fcac:	str	lr, [sp, #12]
   1fcb0:	mov	r4, r0
   1fcb4:	mov	r5, r1
   1fcb8:	ldr	r3, [r1]
   1fcbc:	cmp	r3, #2
   1fcc0:	beq	1fd18 <myhtml_insertion_mode_initial@@Base+0x74>
   1fcc4:	cmp	r3, #3
   1fcc8:	beq	1fd28 <myhtml_insertion_mode_initial@@Base+0x84>
   1fccc:	cmp	r3, #1
   1fcd0:	movne	r0, #1
   1fcd4:	strne	r0, [r4, #176]	; 0xb0
   1fcd8:	strne	r0, [r4, #168]	; 0xa8
   1fcdc:	beq	1fcf0 <myhtml_insertion_mode_initial@@Base+0x4c>
   1fce0:	ldrd	r4, [sp]
   1fce4:	ldr	r6, [sp, #8]
   1fce8:	add	sp, sp, #12
   1fcec:	pop	{pc}		; (ldr pc, [sp], #4)
   1fcf0:	ldr	r3, [r1, #48]	; 0x30
   1fcf4:	tst	r3, #8
   1fcf8:	movne	r0, #0
   1fcfc:	bne	1fce0 <myhtml_insertion_mode_initial@@Base+0x3c>
   1fd00:	ldr	r0, [r4, #8]
   1fd04:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1fd08:	mov	r0, #1
   1fd0c:	str	r0, [r4, #176]	; 0xb0
   1fd10:	str	r0, [r4, #168]	; 0xa8
   1fd14:	b	1fce0 <myhtml_insertion_mode_initial@@Base+0x3c>
   1fd18:	ldr	r2, [r0, #84]	; 0x54
   1fd1c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1fd20:	mov	r0, #0
   1fd24:	b	1fce0 <myhtml_insertion_mode_initial@@Base+0x3c>
   1fd28:	ldr	r0, [r0, #8]
   1fd2c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1fd30:	add	r2, r4, #108	; 0x6c
   1fd34:	mov	r1, r5
   1fd38:	ldr	r0, [r4, #8]
   1fd3c:	bl	fbcc <myhtml_token_release_and_check_doctype_attributes@plt>
   1fd40:	ldr	r3, [r4, #184]	; 0xb8
   1fd44:	tst	r3, #8
   1fd48:	beq	1fd88 <myhtml_insertion_mode_initial@@Base+0xe4>
   1fd4c:	ldrb	r3, [r4, #108]	; 0x6c
   1fd50:	cmp	r3, #0
   1fd54:	bne	1fd78 <myhtml_insertion_mode_initial@@Base+0xd4>
   1fd58:	ldr	r3, [r4, #116]	; 0x74
   1fd5c:	cmp	r3, #0
   1fd60:	beq	1fd70 <myhtml_insertion_mode_initial@@Base+0xcc>
   1fd64:	ldr	r3, [r4, #120]	; 0x78
   1fd68:	cmp	r3, #0
   1fd6c:	bne	1fd78 <myhtml_insertion_mode_initial@@Base+0xd4>
   1fd70:	mov	r3, #1
   1fd74:	str	r3, [r4, #176]	; 0xb0
   1fd78:	mov	r3, #1
   1fd7c:	str	r3, [r4, #168]	; 0xa8
   1fd80:	mov	r0, #0
   1fd84:	b	1fce0 <myhtml_insertion_mode_initial@@Base+0x3c>
   1fd88:	mov	r1, r5
   1fd8c:	mov	r0, r4
   1fd90:	bl	10dc0 <myhtml_tree_node_insert_doctype@plt>
   1fd94:	b	1fd4c <myhtml_insertion_mode_initial@@Base+0xa8>

0001fd98 <myhtml_insertion_mode_before_html@@Base>:
   1fd98:	str	r4, [sp, #-8]!
   1fd9c:	str	lr, [sp, #4]
   1fda0:	mov	r4, r0
   1fda4:	ldr	r3, [r1, #48]	; 0x30
   1fda8:	tst	r3, #1
   1fdac:	beq	1fe08 <myhtml_insertion_mode_before_html@@Base+0x70>
   1fdb0:	ldr	r3, [r1]
   1fdb4:	cmp	r3, #61	; 0x3d
   1fdb8:	beq	1fde8 <myhtml_insertion_mode_before_html@@Base+0x50>
   1fdbc:	bhi	1fddc <myhtml_insertion_mode_before_html@@Base+0x44>
   1fdc0:	sub	r3, r3, #23
   1fdc4:	cmp	r3, #1
   1fdc8:	movhi	r0, #0
   1fdcc:	bls	1fde8 <myhtml_insertion_mode_before_html@@Base+0x50>
   1fdd0:	ldr	r4, [sp]
   1fdd4:	add	sp, sp, #4
   1fdd8:	pop	{pc}		; (ldr pc, [sp], #4)
   1fddc:	cmp	r3, #65	; 0x41
   1fde0:	movne	r0, #0
   1fde4:	bne	1fdd0 <myhtml_insertion_mode_before_html@@Base+0x38>
   1fde8:	mov	r2, #1
   1fdec:	mov	r1, #0
   1fdf0:	mov	r0, r4
   1fdf4:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   1fdf8:	mov	r3, #2
   1fdfc:	str	r3, [r4, #168]	; 0xa8
   1fe00:	mov	r0, #1
   1fe04:	b	1fdd0 <myhtml_insertion_mode_before_html@@Base+0x38>
   1fe08:	ldr	r3, [r1]
   1fe0c:	cmp	r3, #2
   1fe10:	beq	1fe88 <myhtml_insertion_mode_before_html@@Base+0xf0>
   1fe14:	bls	1fe48 <myhtml_insertion_mode_before_html@@Base+0xb0>
   1fe18:	cmp	r3, #3
   1fe1c:	moveq	r0, #0
   1fe20:	beq	1fdd0 <myhtml_insertion_mode_before_html@@Base+0x38>
   1fe24:	cmp	r3, #65	; 0x41
   1fe28:	bne	1fe98 <myhtml_insertion_mode_before_html@@Base+0x100>
   1fe2c:	mov	r2, #1
   1fe30:	mov	r0, r4
   1fe34:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   1fe38:	mov	r3, #2
   1fe3c:	str	r3, [r4, #168]	; 0xa8
   1fe40:	mov	r0, #0
   1fe44:	b	1fdd0 <myhtml_insertion_mode_before_html@@Base+0x38>
   1fe48:	cmp	r3, #1
   1fe4c:	bne	1fe98 <myhtml_insertion_mode_before_html@@Base+0x100>
   1fe50:	ldr	r3, [r1, #48]	; 0x30
   1fe54:	tst	r3, #8
   1fe58:	movne	r0, #0
   1fe5c:	bne	1fdd0 <myhtml_insertion_mode_before_html@@Base+0x38>
   1fe60:	ldr	r0, [r4, #8]
   1fe64:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1fe68:	mov	r2, #1
   1fe6c:	mov	r1, #0
   1fe70:	mov	r0, r4
   1fe74:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   1fe78:	mov	r3, #2
   1fe7c:	str	r3, [r4, #168]	; 0xa8
   1fe80:	mov	r0, #1
   1fe84:	b	1fdd0 <myhtml_insertion_mode_before_html@@Base+0x38>
   1fe88:	ldr	r2, [r0, #84]	; 0x54
   1fe8c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1fe90:	mov	r0, #0
   1fe94:	b	1fdd0 <myhtml_insertion_mode_before_html@@Base+0x38>
   1fe98:	mov	r2, #1
   1fe9c:	mov	r1, #0
   1fea0:	mov	r0, r4
   1fea4:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   1fea8:	mov	r3, #2
   1feac:	str	r3, [r4, #168]	; 0xa8
   1feb0:	mov	r0, #1
   1feb4:	b	1fdd0 <myhtml_insertion_mode_before_html@@Base+0x38>

0001feb8 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1feb8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1febc:	strd	r6, [sp, #8]
   1fec0:	str	r8, [sp, #16]
   1fec4:	str	lr, [sp, #20]
   1fec8:	mov	r5, r0
   1fecc:	mov	r4, r1
   1fed0:	ldr	r0, [r0, #8]
   1fed4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1fed8:	add	r0, r4, #4
   1fedc:	bl	10d78 <mycore_string_whitespace_from_begin@plt>
   1fee0:	subs	r7, r0, #0
   1fee4:	moveq	r6, #0
   1fee8:	beq	1ff50 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x98>
   1feec:	ldr	r1, [r5, #40]	; 0x28
   1fef0:	ldr	r0, [r5, #8]
   1fef4:	bl	109a0 <myhtml_token_node_create@plt>
   1fef8:	subs	r6, r0, #0
   1fefc:	beq	1ff50 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x98>
   1ff00:	add	r8, r6, #4
   1ff04:	add	r3, r7, #2
   1ff08:	mov	r2, r8
   1ff0c:	ldr	r1, [r5, #52]	; 0x34
   1ff10:	ldr	r0, [r5, #4]
   1ff14:	bl	105a4 <mycore_string_init@plt>
   1ff18:	mov	r2, r7
   1ff1c:	ldr	r1, [r4, #4]
   1ff20:	mov	r0, r8
   1ff24:	bl	10868 <mycore_string_append@plt>
   1ff28:	ldr	r3, [r6, #48]	; 0x30
   1ff2c:	orr	r3, r3, #4
   1ff30:	str	r3, [r6, #48]	; 0x30
   1ff34:	mov	r1, r7
   1ff38:	ldr	r0, [r4, #4]
   1ff3c:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   1ff40:	str	r0, [r4, #4]
   1ff44:	ldr	r3, [r4, #12]
   1ff48:	sub	r7, r3, r7
   1ff4c:	str	r7, [r4, #12]
   1ff50:	mov	r0, r6
   1ff54:	ldrd	r4, [sp]
   1ff58:	ldrd	r6, [sp, #8]
   1ff5c:	ldr	r8, [sp, #16]
   1ff60:	add	sp, sp, #20
   1ff64:	pop	{pc}		; (ldr pc, [sp], #4)

0001ff68 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1ff68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1ff6c:	strd	r6, [sp, #8]
   1ff70:	str	r8, [sp, #16]
   1ff74:	str	lr, [sp, #20]
   1ff78:	mov	r6, r1
   1ff7c:	ldr	r0, [r0, #8]
   1ff80:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1ff84:	ldr	r5, [r6, #12]
   1ff88:	cmp	r5, #0
   1ff8c:	beq	20060 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xf8>
   1ff90:	mov	r2, #0
   1ff94:	mov	r7, r2
   1ff98:	sub	r8, r5, #1
   1ff9c:	b	1ffe0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x78>
   1ffa0:	mov	r1, r2
   1ffa4:	ldr	r3, [r6, #12]
   1ffa8:	add	r3, r2, r3
   1ffac:	sub	r3, r3, r1
   1ffb0:	str	r3, [r6, #12]
   1ffb4:	mov	r4, r1
   1ffb8:	sub	r0, r2, r7
   1ffbc:	sub	r2, r4, r1
   1ffc0:	add	r1, ip, r1
   1ffc4:	add	r0, ip, r0
   1ffc8:	bl	fe18 <memmove@plt>
   1ffcc:	sub	r2, r4, #1
   1ffd0:	add	r7, r7, #1
   1ffd4:	add	r2, r2, #1
   1ffd8:	cmp	r5, r2
   1ffdc:	bls	20060 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xf8>
   1ffe0:	ldr	ip, [r6, #4]
   1ffe4:	add	r3, ip, r2
   1ffe8:	ldrb	r1, [ip, r2]
   1ffec:	cmp	r1, #0
   1fff0:	bne	1ffd4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x6c>
   1fff4:	cmp	r5, r2
   1fff8:	bls	1ffa0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x38>
   1fffc:	add	r4, r8, ip
   20000:	rsb	lr, ip, #1
   20004:	add	r1, lr, r3
   20008:	cmp	r3, r4
   2000c:	beq	1ffa4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x3c>
   20010:	ldrb	r0, [r3, #1]!
   20014:	cmp	r0, #0
   20018:	beq	20004 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x9c>
   2001c:	ldr	r3, [r6, #12]
   20020:	add	r3, r2, r3
   20024:	sub	r3, r3, r1
   20028:	str	r3, [r6, #12]
   2002c:	add	r3, ip, r1
   20030:	ldrb	r0, [ip, r1]
   20034:	cmp	r0, #0
   20038:	moveq	r4, r1
   2003c:	beq	1ffb8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x50>
   20040:	mov	r4, r1
   20044:	add	r4, r4, #1
   20048:	cmp	r5, r4
   2004c:	bls	1ffb8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x50>
   20050:	ldrb	r0, [r3, #1]!
   20054:	cmp	r0, #0
   20058:	bne	20044 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xdc>
   2005c:	b	1ffb8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x50>
   20060:	ldrd	r4, [sp]
   20064:	ldrd	r6, [sp, #8]
   20068:	ldr	r8, [sp, #16]
   2006c:	add	sp, sp, #20
   20070:	pop	{pc}		; (ldr pc, [sp], #4)

00020074 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   20074:	strd	r4, [sp, #-24]!	; 0xffffffe8
   20078:	strd	r6, [sp, #8]
   2007c:	str	r8, [sp, #16]
   20080:	str	lr, [sp, #20]
   20084:	mov	r6, r0
   20088:	mov	r7, r1
   2008c:	ldr	r3, [r0, #128]	; 0x80
   20090:	ldr	r4, [r3, #4]
   20094:	cmp	r4, #0
   20098:	bne	200c4 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x50>
   2009c:	b	20114 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   200a0:	ldr	r0, [r6, #28]
   200a4:	bl	109b8 <myhtml_tag_get_by_id@plt>
   200a8:	ldr	r3, [r5, #8]
   200ac:	add	r3, r3, #4
   200b0:	ldr	r3, [r0, r3, lsl #2]
   200b4:	tst	r3, #2
   200b8:	bne	20114 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   200bc:	cmp	r4, #0
   200c0:	beq	20114 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   200c4:	sub	r4, r4, #1
   200c8:	ldr	r3, [r6, #128]	; 0x80
   200cc:	ldr	r3, [r3]
   200d0:	ldr	r5, [r3, r4, lsl #2]
   200d4:	ldr	r1, [r5, #4]
   200d8:	ldr	r3, [r7]
   200dc:	cmp	r1, r3
   200e0:	bne	200a0 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x2c>
   200e4:	ldr	r2, [r5, #8]
   200e8:	cmp	r2, #1
   200ec:	bne	200a0 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x2c>
   200f0:	mov	r1, r3
   200f4:	mov	r0, r6
   200f8:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   200fc:	mov	r0, r6
   20100:	bl	105bc <myhtml_tree_current_node@plt>
   20104:	mov	r2, #0
   20108:	mov	r1, r5
   2010c:	mov	r0, r6
   20110:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   20114:	mov	r0, #0
   20118:	ldrd	r4, [sp]
   2011c:	ldrd	r6, [sp, #8]
   20120:	ldr	r8, [sp, #16]
   20124:	add	sp, sp, #20
   20128:	pop	{pc}		; (ldr pc, [sp], #4)

0002012c <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   2012c:	strd	r4, [sp, #-16]!
   20130:	str	r6, [sp, #8]
   20134:	str	lr, [sp, #12]
   20138:	ldr	ip, [r0, #128]	; 0x80
   2013c:	ldr	r3, [ip, #4]
   20140:	cmp	r3, #0
   20144:	beq	201bc <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x90>
   20148:	ldr	r3, [ip]
   2014c:	ldr	r4, [ip, #4]
   20150:	subs	ip, r4, #1
   20154:	beq	201bc <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x90>
   20158:	ldr	r5, [r2]
   2015c:	lsl	r1, ip, #2
   20160:	ldr	lr, [r3, ip, lsl #2]
   20164:	ldr	ip, [lr, #4]
   20168:	cmp	r5, ip
   2016c:	beq	201e4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xb8>
   20170:	sub	ip, r4, #2
   20174:	add	r1, r3, r1
   20178:	ldr	r1, [r1, #-4]
   2017c:	ldr	r1, [r1, #8]
   20180:	cmp	r1, #1
   20184:	beq	201bc <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x90>
   20188:	sub	r4, r4, #-1073741822	; 0xc0000002
   2018c:	add	r3, r3, r4, lsl #2
   20190:	cmp	ip, #0
   20194:	beq	201bc <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x90>
   20198:	ldr	lr, [r3]
   2019c:	ldr	r4, [lr, #4]
   201a0:	cmp	r5, r4
   201a4:	beq	201e4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xb8>
   201a8:	sub	ip, ip, #1
   201ac:	ldr	lr, [r3, #-4]!
   201b0:	ldr	lr, [lr, #8]
   201b4:	cmp	lr, #1
   201b8:	bne	20190 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x64>
   201bc:	ldr	r3, [r0]
   201c0:	ldr	r1, [r0, #168]	; 0xa8
   201c4:	ldr	r3, [r3, #28]
   201c8:	ldr	r3, [r3, r1, lsl #2]
   201cc:	mov	r1, r2
   201d0:	blx	r3
   201d4:	ldrd	r4, [sp]
   201d8:	ldr	r6, [sp, #8]
   201dc:	add	sp, sp, #12
   201e0:	pop	{pc}		; (ldr pc, [sp], #4)
   201e4:	mov	r2, #0
   201e8:	mov	r1, lr
   201ec:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   201f0:	mov	r0, #0
   201f4:	b	201d4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xa8>

000201f8 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   201f8:	strd	r4, [sp, #-16]!
   201fc:	str	r6, [sp, #8]
   20200:	str	lr, [sp, #12]
   20204:	mov	r6, r0
   20208:	mov	r4, r1
   2020c:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   20210:	mov	r5, r0
   20214:	mov	r1, r4
   20218:	ldr	r0, [r6, #8]
   2021c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   20220:	ldr	r3, [r5, #8]
   20224:	cmp	r3, #2
   20228:	beq	20294 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x9c>
   2022c:	cmp	r3, #3
   20230:	beq	202a0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xa8>
   20234:	mov	r0, r4
   20238:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   2023c:	mov	r1, r4
   20240:	mov	r0, r6
   20244:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   20248:	ldr	r3, [r5, #8]
   2024c:	str	r3, [r0, #8]
   20250:	ldr	r2, [r4, #48]	; 0x30
   20254:	tst	r2, #2
   20258:	moveq	r5, #0
   2025c:	beq	20280 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x88>
   20260:	ldr	r5, [r4]
   20264:	cmp	r5, #112	; 0x70
   20268:	cmpeq	r3, #3
   2026c:	moveq	r5, #1
   20270:	movne	r5, #0
   20274:	beq	202ac <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xb4>
   20278:	mov	r0, r6
   2027c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   20280:	mov	r0, r5
   20284:	ldrd	r4, [sp]
   20288:	ldr	r6, [sp, #8]
   2028c:	add	sp, sp, #12
   20290:	pop	{pc}		; (ldr pc, [sp], #4)
   20294:	mov	r0, r4
   20298:	bl	ff14 <myhtml_token_adjust_mathml_attributes@plt>
   2029c:	b	20234 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x3c>
   202a0:	mov	r0, r4
   202a4:	bl	10178 <myhtml_token_adjust_svg_attributes@plt>
   202a8:	b	20234 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x3c>
   202ac:	mov	r0, r6
   202b0:	bl	105bc <myhtml_tree_current_node@plt>
   202b4:	mov	r2, r4
   202b8:	mov	r1, r0
   202bc:	mov	r0, r6
   202c0:	bl	fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   202c4:	mov	r5, r0
   202c8:	b	20280 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x88>

000202cc <myhtml_insertion_mode_in_foreign_content@@Base>:
   202cc:	strd	r4, [sp, #-16]!
   202d0:	str	r6, [sp, #8]
   202d4:	str	lr, [sp, #12]
   202d8:	mov	r5, r0
   202dc:	mov	r4, r1
   202e0:	ldr	r3, [r1, #48]	; 0x30
   202e4:	tst	r3, #1
   202e8:	bne	20530 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   202ec:	ldr	r2, [r1]
   202f0:	sub	r3, r2, #1
   202f4:	cmp	r3, #139	; 0x8b
   202f8:	addls	pc, pc, r3, lsl #2
   202fc:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20300:	b	20588 <myhtml_insertion_mode_in_foreign_content@@Base+0x2bc>
   20304:	b	205e4 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   20308:	b	206d8 <myhtml_insertion_mode_in_foreign_content@@Base+0x40c>
   2030c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20310:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20314:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20318:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2031c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20320:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20324:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20328:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2032c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20330:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20334:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20338:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2033c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20340:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20344:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20348:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2034c:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20350:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20354:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20358:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   2035c:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20360:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20364:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20368:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2036c:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20370:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20374:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20378:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2037c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20380:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20384:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20388:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2038c:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20390:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20394:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20398:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2039c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203a0:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203a4:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203a8:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203ac:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203b0:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203b4:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203b8:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203bc:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203c0:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203c4:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203c8:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203cc:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203d0:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203d4:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203d8:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203dc:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203e0:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203e4:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203e8:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203ec:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203f0:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   203f4:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203f8:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   203fc:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20400:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20404:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20408:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2040c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20410:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20414:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20418:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2041c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20420:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20424:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20428:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2042c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20430:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20434:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20438:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   2043c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20440:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20444:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20448:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2044c:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20450:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20454:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20458:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2045c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20460:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20464:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20468:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2046c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20470:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20474:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20478:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   2047c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20480:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20484:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20488:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   2048c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20490:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20494:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20498:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2049c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204a0:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204a4:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204a8:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204ac:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204b0:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204b4:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204b8:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204bc:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204c0:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204c4:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204c8:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204cc:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204d0:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204d4:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204d8:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204dc:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204e0:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204e4:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204e8:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204ec:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204f0:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   204f4:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204f8:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   204fc:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20500:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20504:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20508:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2050c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20510:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20514:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20518:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   2051c:	b	20608 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   20520:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20524:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20528:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   2052c:	b	205f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x328>
   20530:	bl	105bc <myhtml_tree_current_node@plt>
   20534:	ldr	r3, [r4]
   20538:	cmp	r3, #112	; 0x70
   2053c:	bne	20558 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   20540:	ldr	r3, [r0, #4]
   20544:	cmp	r3, #112	; 0x70
   20548:	bne	20558 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   2054c:	ldr	r3, [r0, #8]
   20550:	cmp	r3, #3
   20554:	beq	20578 <myhtml_insertion_mode_in_foreign_content@@Base+0x2ac>
   20558:	mov	r2, r4
   2055c:	mov	r1, r0
   20560:	mov	r0, r5
   20564:	bl	fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   20568:	ldrd	r4, [sp]
   2056c:	ldr	r6, [sp, #8]
   20570:	add	sp, sp, #12
   20574:	pop	{pc}		; (ldr pc, [sp], #4)
   20578:	mov	r0, r5
   2057c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   20580:	mov	r0, #0
   20584:	b	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   20588:	ldr	r3, [r1, #48]	; 0x30
   2058c:	tst	r3, #2048	; 0x800
   20590:	bne	205cc <myhtml_insertion_mode_in_foreign_content@@Base+0x300>
   20594:	mov	r1, r4
   20598:	mov	r0, r5
   2059c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   205a0:	ldr	r3, [r4, #48]	; 0x30
   205a4:	tst	r3, #8
   205a8:	movne	r0, #0
   205ac:	bne	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   205b0:	ldr	r3, [r5, #180]	; 0xb4
   205b4:	ldr	r2, [r5, #180]	; 0xb4
   205b8:	and	r3, r3, #2
   205bc:	eor	r3, r3, r2
   205c0:	str	r3, [r5, #180]	; 0xb4
   205c4:	mov	r0, #0
   205c8:	b	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   205cc:	ldr	r0, [r0, #8]
   205d0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   205d4:	mov	r1, r4
   205d8:	mov	r0, r5
   205dc:	bl	102c8 <myhtml_token_set_replacement_character_for_null_token@plt>
   205e0:	b	20594 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c8>
   205e4:	mov	r2, #0
   205e8:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   205ec:	mov	r0, #0
   205f0:	b	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   205f4:	cmp	r2, #50	; 0x32
   205f8:	beq	20618 <myhtml_insertion_mode_in_foreign_content@@Base+0x34c>
   205fc:	ldr	r3, [r5, #88]	; 0x58
   20600:	cmp	r3, #0
   20604:	beq	20684 <myhtml_insertion_mode_in_foreign_content@@Base+0x3b8>
   20608:	mov	r1, r4
   2060c:	mov	r0, r5
   20610:	bl	fe30 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   20614:	b	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   20618:	ldr	r0, [r0, #8]
   2061c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   20620:	mov	r2, #5
   20624:	ldr	r1, [pc, #188]	; 206e8 <myhtml_insertion_mode_in_foreign_content@@Base+0x41c>
   20628:	add	r1, pc, r1
   2062c:	mov	r0, r4
   20630:	bl	10e44 <myhtml_token_attr_by_name@plt>
   20634:	cmp	r0, #0
   20638:	bne	205fc <myhtml_insertion_mode_in_foreign_content@@Base+0x330>
   2063c:	mov	r2, #4
   20640:	ldr	r1, [pc, #164]	; 206ec <myhtml_insertion_mode_in_foreign_content@@Base+0x420>
   20644:	add	r1, pc, r1
   20648:	mov	r0, r4
   2064c:	bl	10e44 <myhtml_token_attr_by_name@plt>
   20650:	cmp	r0, #0
   20654:	bne	205fc <myhtml_insertion_mode_in_foreign_content@@Base+0x330>
   20658:	mov	r2, #4
   2065c:	ldr	r1, [pc, #140]	; 206f0 <myhtml_insertion_mode_in_foreign_content@@Base+0x424>
   20660:	add	r1, pc, r1
   20664:	mov	r0, r4
   20668:	bl	10e44 <myhtml_token_attr_by_name@plt>
   2066c:	cmp	r0, #0
   20670:	bne	205fc <myhtml_insertion_mode_in_foreign_content@@Base+0x330>
   20674:	mov	r1, r4
   20678:	mov	r0, r5
   2067c:	bl	fe30 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   20680:	b	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   20684:	mov	r0, r5
   20688:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2068c:	mov	r0, r5
   20690:	bl	105bc <myhtml_tree_current_node@plt>
   20694:	subs	r4, r0, #0
   20698:	beq	206e0 <myhtml_insertion_mode_in_foreign_content@@Base+0x414>
   2069c:	mov	r1, r4
   206a0:	mov	r0, r5
   206a4:	bl	ffe0 <myhtml_tree_is_mathml_integration_point@plt>
   206a8:	cmp	r0, #0
   206ac:	bne	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   206b0:	mov	r1, r4
   206b4:	mov	r0, r5
   206b8:	bl	1019c <myhtml_tree_is_html_integration_point@plt>
   206bc:	cmp	r0, #0
   206c0:	bne	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   206c4:	ldr	r3, [r4, #8]
   206c8:	cmp	r3, #1
   206cc:	bne	20684 <myhtml_insertion_mode_in_foreign_content@@Base+0x3b8>
   206d0:	mov	r0, #1
   206d4:	b	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   206d8:	mov	r0, #0
   206dc:	b	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   206e0:	mov	r0, #1
   206e4:	b	20568 <myhtml_insertion_mode_in_foreign_content@@Base+0x29c>
   206e8:	andeq	pc, sp, ip, asr #28
   206ec:	andeq	pc, sp, r8, lsr lr	; <UNPREDICTABLE>
   206f0:	andeq	pc, sp, r4, lsr #28

000206f4 <myhtml_rules_stop_parsing@@Base>:
   206f4:	bx	lr

000206f8 <myhtml_insertion_mode_in_template@@Base>:
   206f8:	str	r4, [sp, #-8]!
   206fc:	str	lr, [sp, #4]
   20700:	mov	r4, r0
   20704:	ldr	r3, [r1, #48]	; 0x30
   20708:	tst	r3, #1
   2070c:	beq	20738 <myhtml_insertion_mode_in_template@@Base+0x40>
   20710:	ldr	r3, [r1]
   20714:	cmp	r3, #128	; 0x80
   20718:	movne	r0, #0
   2071c:	beq	2072c <myhtml_insertion_mode_in_template@@Base+0x34>
   20720:	ldr	r4, [sp]
   20724:	add	sp, sp, #4
   20728:	pop	{pc}		; (ldr pc, [sp], #4)
   2072c:	mov	r0, r4
   20730:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   20734:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   20738:	ldr	r3, [r1]
   2073c:	cmp	r3, #92	; 0x5c
   20740:	beq	20854 <myhtml_insertion_mode_in_template@@Base+0x15c>
   20744:	bls	207b4 <myhtml_insertion_mode_in_template@@Base+0xbc>
   20748:	cmp	r3, #130	; 0x82
   2074c:	beq	208c8 <myhtml_insertion_mode_in_template@@Base+0x1d0>
   20750:	bls	20860 <myhtml_insertion_mode_in_template@@Base+0x168>
   20754:	cmp	r3, #134	; 0x86
   20758:	beq	20854 <myhtml_insertion_mode_in_template@@Base+0x15c>
   2075c:	bls	208b8 <myhtml_insertion_mode_in_template@@Base+0x1c0>
   20760:	cmp	r3, #135	; 0x87
   20764:	beq	208ec <myhtml_insertion_mode_in_template@@Base+0x1f4>
   20768:	cmp	r3, #251	; 0xfb
   2076c:	bne	20820 <myhtml_insertion_mode_in_template@@Base+0x128>
   20770:	mov	r3, #0
   20774:	mov	r2, #1
   20778:	mov	r1, #128	; 0x80
   2077c:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20780:	subs	r1, r0, #0
   20784:	beq	2090c <myhtml_insertion_mode_in_template@@Base+0x214>
   20788:	mov	r2, #0
   2078c:	mov	r0, r4
   20790:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   20794:	mov	r0, r4
   20798:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2079c:	mov	r0, r4
   207a0:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   207a4:	mov	r0, r4
   207a8:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   207ac:	mov	r0, #1
   207b0:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   207b4:	cmp	r3, #19
   207b8:	beq	20854 <myhtml_insertion_mode_in_template@@Base+0x15c>
   207bc:	bls	207fc <myhtml_insertion_mode_in_template@@Base+0x104>
   207c0:	cmp	r3, #32
   207c4:	beq	208c8 <myhtml_insertion_mode_in_template@@Base+0x1d0>
   207c8:	bhi	20844 <myhtml_insertion_mode_in_template@@Base+0x14c>
   207cc:	cmp	r3, #27
   207d0:	beq	208c8 <myhtml_insertion_mode_in_template@@Base+0x1d0>
   207d4:	cmp	r3, #31
   207d8:	bne	20820 <myhtml_insertion_mode_in_template@@Base+0x128>
   207dc:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   207e0:	mov	r1, #11
   207e4:	mov	r0, r4
   207e8:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   207ec:	mov	r3, #11
   207f0:	str	r3, [r4, #168]	; 0xa8
   207f4:	mov	r0, #1
   207f8:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   207fc:	cmp	r3, #0
   20800:	beq	20820 <myhtml_insertion_mode_in_template@@Base+0x128>
   20804:	cmp	r3, #3
   20808:	bhi	20814 <myhtml_insertion_mode_in_template@@Base+0x11c>
   2080c:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   20810:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   20814:	sub	r3, r3, #15
   20818:	cmp	r3, #1
   2081c:	bls	20854 <myhtml_insertion_mode_in_template@@Base+0x15c>
   20820:	mov	r0, r4
   20824:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   20828:	mov	r1, #6
   2082c:	mov	r0, r4
   20830:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   20834:	mov	r3, #6
   20838:	str	r3, [r4, #168]	; 0xa8
   2083c:	mov	r0, #1
   20840:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   20844:	cmp	r3, #78	; 0x4e
   20848:	beq	20854 <myhtml_insertion_mode_in_template@@Base+0x15c>
   2084c:	cmp	r3, #86	; 0x56
   20850:	bne	20820 <myhtml_insertion_mode_in_template@@Base+0x128>
   20854:	mov	r0, r4
   20858:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   2085c:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   20860:	cmp	r3, #126	; 0x7e
   20864:	beq	208c8 <myhtml_insertion_mode_in_template@@Base+0x1d0>
   20868:	bls	20898 <myhtml_insertion_mode_in_template@@Base+0x1a0>
   2086c:	cmp	r3, #127	; 0x7f
   20870:	bne	208ac <myhtml_insertion_mode_in_template@@Base+0x1b4>
   20874:	mov	r0, r4
   20878:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   2087c:	mov	r1, #13
   20880:	mov	r0, r4
   20884:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   20888:	mov	r3, #13
   2088c:	str	r3, [r4, #168]	; 0xa8
   20890:	mov	r0, #1
   20894:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   20898:	cmp	r3, #112	; 0x70
   2089c:	beq	20854 <myhtml_insertion_mode_in_template@@Base+0x15c>
   208a0:	cmp	r3, #120	; 0x78
   208a4:	bne	20820 <myhtml_insertion_mode_in_template@@Base+0x128>
   208a8:	b	20854 <myhtml_insertion_mode_in_template@@Base+0x15c>
   208ac:	cmp	r3, #128	; 0x80
   208b0:	bne	20820 <myhtml_insertion_mode_in_template@@Base+0x128>
   208b4:	b	20854 <myhtml_insertion_mode_in_template@@Base+0x15c>
   208b8:	cmp	r3, #131	; 0x83
   208bc:	beq	20874 <myhtml_insertion_mode_in_template@@Base+0x17c>
   208c0:	cmp	r3, #132	; 0x84
   208c4:	bne	20820 <myhtml_insertion_mode_in_template@@Base+0x128>
   208c8:	mov	r0, r4
   208cc:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   208d0:	mov	r1, #8
   208d4:	mov	r0, r4
   208d8:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   208dc:	mov	r3, #8
   208e0:	str	r3, [r4, #168]	; 0xa8
   208e4:	mov	r0, #1
   208e8:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   208ec:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   208f0:	mov	r1, #12
   208f4:	mov	r0, r4
   208f8:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   208fc:	mov	r3, #12
   20900:	str	r3, [r4, #168]	; 0xa8
   20904:	mov	r0, #1
   20908:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>
   2090c:	mov	r0, r4
   20910:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   20914:	mov	r0, #0
   20918:	b	20720 <myhtml_insertion_mode_in_template@@Base+0x28>

0002091c <myhtml_insertion_mode_in_body@@Base>:
   2091c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   20920:	strd	r6, [sp, #8]
   20924:	strd	r8, [sp, #16]
   20928:	str	sl, [sp, #24]
   2092c:	str	lr, [sp, #28]
   20930:	sub	sp, sp, #8
   20934:	mov	r4, r0
   20938:	mov	r5, r1
   2093c:	ldr	r3, [r1, #48]	; 0x30
   20940:	tst	r3, #1
   20944:	beq	21074 <myhtml_insertion_mode_in_body@@Base+0x758>
   20948:	ldr	r1, [r1]
   2094c:	sub	r3, r1, #4
   20950:	cmp	r3, #135	; 0x87
   20954:	addls	pc, pc, r3, lsl #2
   20958:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   2095c:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20960:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20964:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20968:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   2096c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20970:	b	20fb0 <myhtml_insertion_mode_in_body@@Base+0x694>
   20974:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20978:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   2097c:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20980:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20984:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20988:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   2098c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20990:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20994:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20998:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   2099c:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   209a0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209a4:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   209a8:	b	20ba8 <myhtml_insertion_mode_in_body@@Base+0x28c>
   209ac:	b	2100c <myhtml_insertion_mode_in_body@@Base+0x6f0>
   209b0:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   209b4:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209b8:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209bc:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   209c0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209c4:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   209c8:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209cc:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209d0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209d4:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209d8:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209dc:	b	20e00 <myhtml_insertion_mode_in_body@@Base+0x4e4>
   209e0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209e4:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   209e8:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   209ec:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   209f0:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   209f4:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   209f8:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   209fc:	b	20e00 <myhtml_insertion_mode_in_body@@Base+0x4e4>
   20a00:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20a04:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a08:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20a0c:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20a10:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20a14:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20a18:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20a1c:	b	20c9c <myhtml_insertion_mode_in_body@@Base+0x380>
   20a20:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a24:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a28:	b	20e54 <myhtml_insertion_mode_in_body@@Base+0x538>
   20a2c:	b	20e54 <myhtml_insertion_mode_in_body@@Base+0x538>
   20a30:	b	20e54 <myhtml_insertion_mode_in_body@@Base+0x538>
   20a34:	b	20e54 <myhtml_insertion_mode_in_body@@Base+0x538>
   20a38:	b	20e54 <myhtml_insertion_mode_in_body@@Base+0x538>
   20a3c:	b	20e54 <myhtml_insertion_mode_in_body@@Base+0x538>
   20a40:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a44:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20a48:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20a4c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a50:	b	20bf8 <myhtml_insertion_mode_in_body@@Base+0x2dc>
   20a54:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20a58:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a5c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a60:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a64:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a68:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a6c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a70:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a74:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a78:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a7c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a80:	b	20da8 <myhtml_insertion_mode_in_body@@Base+0x48c>
   20a84:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a88:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20a8c:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20a90:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a94:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20a98:	b	20fb0 <myhtml_insertion_mode_in_body@@Base+0x694>
   20a9c:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20aa0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20aa4:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20aa8:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20aac:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20ab0:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20ab4:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20ab8:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20abc:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20ac0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20ac4:	b	20fb0 <myhtml_insertion_mode_in_body@@Base+0x694>
   20ac8:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20acc:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20ad0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20ad4:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20ad8:	b	20d68 <myhtml_insertion_mode_in_body@@Base+0x44c>
   20adc:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20ae0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20ae4:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20ae8:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20aec:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20af0:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20af4:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20af8:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20afc:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b00:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b04:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20b08:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b0c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b10:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20b14:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b18:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20b1c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b20:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b24:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20b28:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20b2c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b30:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b34:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20b38:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b3c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b40:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b44:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b48:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b4c:	b	20b7c <myhtml_insertion_mode_in_body@@Base+0x260>
   20b50:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b54:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b58:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b5c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b60:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b64:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b68:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b6c:	b	21064 <myhtml_insertion_mode_in_body@@Base+0x748>
   20b70:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20b74:	b	20f9c <myhtml_insertion_mode_in_body@@Base+0x680>
   20b78:	b	20c48 <myhtml_insertion_mode_in_body@@Base+0x32c>
   20b7c:	mov	r1, r5
   20b80:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   20b84:	mov	r6, r0
   20b88:	mov	r0, r6
   20b8c:	add	sp, sp, #8
   20b90:	ldrd	r4, [sp]
   20b94:	ldrd	r6, [sp, #8]
   20b98:	ldrd	r8, [sp, #16]
   20b9c:	ldr	sl, [sp, #24]
   20ba0:	add	sp, sp, #28
   20ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   20ba8:	mov	r3, #8
   20bac:	mov	r2, #1
   20bb0:	mov	r1, #23
   20bb4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20bb8:	cmp	r0, #0
   20bbc:	moveq	r6, #0
   20bc0:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20bc4:	ldr	r1, [r4, #128]	; 0x80
   20bc8:	ldr	r3, [r1, #4]
   20bcc:	cmp	r3, #0
   20bd0:	beq	20be8 <myhtml_insertion_mode_in_body@@Base+0x2cc>
   20bd4:	mov	r3, #0
   20bd8:	add	r3, r3, #1
   20bdc:	ldr	r2, [r1, #4]
   20be0:	cmp	r2, r3
   20be4:	bhi	20bd8 <myhtml_insertion_mode_in_body@@Base+0x2bc>
   20be8:	mov	r3, #18
   20bec:	str	r3, [r4, #168]	; 0xa8
   20bf0:	mov	r6, #0
   20bf4:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20bf8:	mov	r3, #8
   20bfc:	mov	r2, #1
   20c00:	mov	r1, #23
   20c04:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20c08:	cmp	r0, #0
   20c0c:	moveq	r6, #0
   20c10:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20c14:	ldr	r1, [r4, #128]	; 0x80
   20c18:	ldr	r3, [r1, #4]
   20c1c:	cmp	r3, #0
   20c20:	beq	20c38 <myhtml_insertion_mode_in_body@@Base+0x31c>
   20c24:	mov	r3, #0
   20c28:	add	r3, r3, #1
   20c2c:	ldr	r2, [r1, #4]
   20c30:	cmp	r2, r3
   20c34:	bhi	20c28 <myhtml_insertion_mode_in_body@@Base+0x30c>
   20c38:	mov	r3, #18
   20c3c:	str	r3, [r4, #168]	; 0xa8
   20c40:	mov	r6, #1
   20c44:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20c48:	mov	r3, #8
   20c4c:	mov	r2, #1
   20c50:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20c54:	cmp	r0, #0
   20c58:	moveq	r6, #0
   20c5c:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20c60:	mov	r2, #0
   20c64:	mov	r1, r2
   20c68:	mov	r0, r4
   20c6c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20c70:	mov	r0, r4
   20c74:	bl	105bc <myhtml_tree_current_node@plt>
   20c78:	ldr	r1, [r5]
   20c7c:	bl	10a3c <myhtml_is_html_node@plt>
   20c80:	mov	r3, #0
   20c84:	mov	r2, #1
   20c88:	ldr	r1, [r5]
   20c8c:	mov	r0, r4
   20c90:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20c94:	mov	r6, #0
   20c98:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20c9c:	mov	r3, #0
   20ca0:	mov	r2, #1
   20ca4:	mov	r1, #128	; 0x80
   20ca8:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20cac:	cmp	r0, #0
   20cb0:	beq	20d10 <myhtml_insertion_mode_in_body@@Base+0x3f4>
   20cb4:	mov	r3, #8
   20cb8:	mov	r2, #1
   20cbc:	mov	r1, #52	; 0x34
   20cc0:	mov	r0, r4
   20cc4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20cc8:	cmp	r0, #0
   20ccc:	moveq	r6, #0
   20cd0:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20cd4:	mov	r2, #0
   20cd8:	mov	r1, r2
   20cdc:	mov	r0, r4
   20ce0:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20ce4:	mov	r0, r4
   20ce8:	bl	105bc <myhtml_tree_current_node@plt>
   20cec:	mov	r1, #52	; 0x34
   20cf0:	bl	10a3c <myhtml_is_html_node@plt>
   20cf4:	mov	r3, #0
   20cf8:	mov	r2, #1
   20cfc:	mov	r1, #52	; 0x34
   20d00:	mov	r0, r4
   20d04:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20d08:	mov	r6, #0
   20d0c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20d10:	ldr	r5, [r4, #104]	; 0x68
   20d14:	mov	r3, #0
   20d18:	str	r3, [r4, #104]	; 0x68
   20d1c:	cmp	r5, r3
   20d20:	moveq	r6, #0
   20d24:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20d28:	mov	r1, #8
   20d2c:	mov	r0, r5
   20d30:	bl	fbf0 <myhtml_tree_element_in_scope_by_node@plt>
   20d34:	subs	r6, r0, #0
   20d38:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20d3c:	mov	r2, #0
   20d40:	mov	r1, r2
   20d44:	mov	r0, r4
   20d48:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20d4c:	mov	r0, r4
   20d50:	bl	105bc <myhtml_tree_current_node@plt>
   20d54:	mov	r1, r5
   20d58:	mov	r0, r4
   20d5c:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   20d60:	mov	r6, #0
   20d64:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20d68:	mov	r3, #32
   20d6c:	mov	r2, #1
   20d70:	mov	r1, #99	; 0x63
   20d74:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20d78:	cmp	r0, #0
   20d7c:	beq	20d94 <myhtml_insertion_mode_in_body@@Base+0x478>
   20d80:	mov	r1, r5
   20d84:	mov	r0, r4
   20d88:	bl	103dc <myhtml_tree_tags_close_p@plt>
   20d8c:	mov	r6, #0
   20d90:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20d94:	mov	r2, #1
   20d98:	mov	r1, #99	; 0x63
   20d9c:	mov	r0, r4
   20da0:	bl	10904 <myhtml_tree_node_insert@plt>
   20da4:	b	20d80 <myhtml_insertion_mode_in_body@@Base+0x464>
   20da8:	mov	r3, #16
   20dac:	mov	r2, #1
   20db0:	mov	r1, #77	; 0x4d
   20db4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20db8:	cmp	r0, #0
   20dbc:	moveq	r6, #0
   20dc0:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20dc4:	mov	r2, #1
   20dc8:	mov	r1, #77	; 0x4d
   20dcc:	mov	r0, r4
   20dd0:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20dd4:	mov	r0, r4
   20dd8:	bl	105bc <myhtml_tree_current_node@plt>
   20ddc:	mov	r1, #77	; 0x4d
   20de0:	bl	10a3c <myhtml_is_html_node@plt>
   20de4:	mov	r3, #0
   20de8:	mov	r2, #1
   20dec:	mov	r1, #77	; 0x4d
   20df0:	mov	r0, r4
   20df4:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20df8:	mov	r6, #0
   20dfc:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20e00:	mov	r3, #8
   20e04:	mov	r2, #1
   20e08:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20e0c:	cmp	r0, #0
   20e10:	moveq	r6, #0
   20e14:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20e18:	mov	r2, #1
   20e1c:	ldr	r1, [r5]
   20e20:	mov	r0, r4
   20e24:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20e28:	mov	r0, r4
   20e2c:	bl	105bc <myhtml_tree_current_node@plt>
   20e30:	ldr	r1, [r5]
   20e34:	bl	10a3c <myhtml_is_html_node@plt>
   20e38:	mov	r3, #0
   20e3c:	mov	r2, #1
   20e40:	ldr	r1, [r5]
   20e44:	mov	r0, r4
   20e48:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20e4c:	mov	r6, #0
   20e50:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20e54:	ldr	r3, [r0, #128]	; 0x80
   20e58:	ldr	r8, [r3]
   20e5c:	ldr	r6, [r3, #4]
   20e60:	cmp	r6, #0
   20e64:	beq	22274 <myhtml_insertion_mode_in_body@@Base+0x1958>
   20e68:	add	r7, r8, r6, lsl #2
   20e6c:	b	20e8c <myhtml_insertion_mode_in_body@@Base+0x570>
   20e70:	ldr	r3, [r2, #8]
   20e74:	add	r3, r3, #4
   20e78:	ldr	r3, [r0, r3, lsl #2]
   20e7c:	tst	r3, #8
   20e80:	bne	22274 <myhtml_insertion_mode_in_body@@Base+0x1958>
   20e84:	cmp	r6, #0
   20e88:	beq	22274 <myhtml_insertion_mode_in_body@@Base+0x1958>
   20e8c:	sub	r6, r6, #1
   20e90:	ldr	r3, [r7, #-4]!
   20e94:	ldr	r1, [r3, #4]
   20e98:	ldr	r0, [r4, #28]
   20e9c:	bl	109b8 <myhtml_tag_get_by_id@plt>
   20ea0:	ldr	r2, [r7]
   20ea4:	ldr	r3, [r2, #4]
   20ea8:	sub	r3, r3, #55	; 0x37
   20eac:	cmp	r3, #5
   20eb0:	bhi	20e70 <myhtml_insertion_mode_in_body@@Base+0x554>
   20eb4:	ldr	r3, [r2, #8]
   20eb8:	cmp	r3, #1
   20ebc:	bne	20e70 <myhtml_insertion_mode_in_body@@Base+0x554>
   20ec0:	mov	r2, #0
   20ec4:	mov	r1, r2
   20ec8:	mov	r0, r4
   20ecc:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20ed0:	mov	r0, r4
   20ed4:	bl	105bc <myhtml_tree_current_node@plt>
   20ed8:	ldr	r1, [r5]
   20edc:	bl	10a3c <myhtml_is_html_node@plt>
   20ee0:	b	20ef8 <myhtml_insertion_mode_in_body@@Base+0x5dc>
   20ee4:	ldr	r3, [r3, #4]
   20ee8:	ldr	r3, [r8, r3, lsl #2]
   20eec:	ldr	r3, [r3, #8]
   20ef0:	cmp	r3, #1
   20ef4:	beq	22264 <myhtml_insertion_mode_in_body@@Base+0x1948>
   20ef8:	ldr	r3, [r4, #128]	; 0x80
   20efc:	ldr	r2, [r3, #4]
   20f00:	cmp	r2, #0
   20f04:	beq	20f94 <myhtml_insertion_mode_in_body@@Base+0x678>
   20f08:	ldr	r2, [r3, #4]
   20f0c:	sub	r2, r2, #1
   20f10:	str	r2, [r3, #4]
   20f14:	ldr	r3, [r4, #128]	; 0x80
   20f18:	ldr	r2, [r3, #4]
   20f1c:	ldr	r2, [r8, r2, lsl #2]
   20f20:	ldr	r2, [r2, #4]
   20f24:	cmp	r2, #55	; 0x37
   20f28:	beq	20ee4 <myhtml_insertion_mode_in_body@@Base+0x5c8>
   20f2c:	ldr	r2, [r3, #4]
   20f30:	ldr	r2, [r8, r2, lsl #2]
   20f34:	ldr	r2, [r2, #4]
   20f38:	cmp	r2, #56	; 0x38
   20f3c:	beq	20ee4 <myhtml_insertion_mode_in_body@@Base+0x5c8>
   20f40:	ldr	r2, [r3, #4]
   20f44:	ldr	r2, [r8, r2, lsl #2]
   20f48:	ldr	r2, [r2, #4]
   20f4c:	cmp	r2, #57	; 0x39
   20f50:	beq	20ee4 <myhtml_insertion_mode_in_body@@Base+0x5c8>
   20f54:	ldr	r2, [r3, #4]
   20f58:	ldr	r2, [r8, r2, lsl #2]
   20f5c:	ldr	r2, [r2, #4]
   20f60:	cmp	r2, #58	; 0x3a
   20f64:	beq	20ee4 <myhtml_insertion_mode_in_body@@Base+0x5c8>
   20f68:	ldr	r2, [r3, #4]
   20f6c:	ldr	r2, [r8, r2, lsl #2]
   20f70:	ldr	r2, [r2, #4]
   20f74:	cmp	r2, #59	; 0x3b
   20f78:	beq	20ee4 <myhtml_insertion_mode_in_body@@Base+0x5c8>
   20f7c:	ldr	r2, [r3, #4]
   20f80:	ldr	r2, [r8, r2, lsl #2]
   20f84:	ldr	r2, [r2, #4]
   20f88:	cmp	r2, #60	; 0x3c
   20f8c:	bne	20ef8 <myhtml_insertion_mode_in_body@@Base+0x5dc>
   20f90:	b	20ee4 <myhtml_insertion_mode_in_body@@Base+0x5c8>
   20f94:	mov	r6, #0
   20f98:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20f9c:	mov	r2, r1
   20fa0:	mov	r1, r5
   20fa4:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   20fa8:	mov	r6, #0
   20fac:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20fb0:	mov	r3, #8
   20fb4:	mov	r2, #1
   20fb8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   20fbc:	cmp	r0, #0
   20fc0:	moveq	r6, #0
   20fc4:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   20fc8:	mov	r2, #0
   20fcc:	mov	r1, r2
   20fd0:	mov	r0, r4
   20fd4:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   20fd8:	mov	r0, r4
   20fdc:	bl	105bc <myhtml_tree_current_node@plt>
   20fe0:	ldr	r1, [r5]
   20fe4:	bl	10a3c <myhtml_is_html_node@plt>
   20fe8:	mov	r3, #0
   20fec:	mov	r2, #1
   20ff0:	ldr	r1, [r5]
   20ff4:	mov	r0, r4
   20ff8:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   20ffc:	mov	r0, r4
   21000:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   21004:	mov	r6, #0
   21008:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2100c:	ldr	r3, [r5, #40]	; 0x28
   21010:	cmp	r3, #0
   21014:	movne	r3, #0
   21018:	strne	r3, [r5, #40]	; 0x28
   2101c:	ldr	r3, [r5, #44]	; 0x2c
   21020:	cmp	r3, #0
   21024:	movne	r3, #0
   21028:	strne	r3, [r5, #44]	; 0x2c
   2102c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21030:	mov	r6, #0
   21034:	str	r6, [r5, #48]	; 0x30
   21038:	mov	r1, r5
   2103c:	mov	r0, r4
   21040:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21044:	mov	r0, r4
   21048:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2104c:	ldr	r3, [r4, #180]	; 0xb4
   21050:	ldr	r2, [r4, #180]	; 0xb4
   21054:	and	r3, r3, #2
   21058:	eor	r3, r3, r2
   2105c:	str	r3, [r4, #180]	; 0xb4
   21060:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21064:	mov	r1, r5
   21068:	bl	fcbc <myhtml_insertion_mode_in_body_other_end_tag@plt>
   2106c:	mov	r6, r0
   21070:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21074:	ldr	r3, [r1]
   21078:	sub	r3, r3, #1
   2107c:	cmp	r3, #250	; 0xfa
   21080:	addls	pc, pc, r3, lsl #2
   21084:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21088:	b	21474 <myhtml_insertion_mode_in_body@@Base+0xb58>
   2108c:	b	21510 <myhtml_insertion_mode_in_body@@Base+0xbf4>
   21090:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   21094:	b	21c50 <myhtml_insertion_mode_in_body@@Base+0x1334>
   21098:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2109c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   210a0:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   210a4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   210a8:	b	21d48 <myhtml_insertion_mode_in_body@@Base+0x142c>
   210ac:	b	21de8 <myhtml_insertion_mode_in_body@@Base+0x14cc>
   210b0:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   210b4:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   210b8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   210bc:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   210c0:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   210c4:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   210c8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   210cc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   210d0:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   210d4:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   210d8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   210dc:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   210e0:	b	215ac <myhtml_insertion_mode_in_body@@Base+0xc90>
   210e4:	b	21de8 <myhtml_insertion_mode_in_body@@Base+0x14cc>
   210e8:	b	21be4 <myhtml_insertion_mode_in_body@@Base+0x12c8>
   210ec:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   210f0:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   210f4:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   210f8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   210fc:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   21100:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   21104:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   21108:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2110c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21110:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21114:	b	21a34 <myhtml_insertion_mode_in_body@@Base+0x1118>
   21118:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2111c:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21120:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21124:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21128:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   2112c:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21130:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21134:	b	21a34 <myhtml_insertion_mode_in_body@@Base+0x1118>
   21138:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   2113c:	b	21de8 <myhtml_insertion_mode_in_body@@Base+0x14cc>
   21140:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21144:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21148:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   2114c:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   21150:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21154:	b	2189c <myhtml_insertion_mode_in_body@@Base+0xf80>
   21158:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   2115c:	b	2167c <myhtml_insertion_mode_in_body@@Base+0xd60>
   21160:	b	217dc <myhtml_insertion_mode_in_body@@Base+0xec0>
   21164:	b	217dc <myhtml_insertion_mode_in_body@@Base+0xec0>
   21168:	b	217dc <myhtml_insertion_mode_in_body@@Base+0xec0>
   2116c:	b	217dc <myhtml_insertion_mode_in_body@@Base+0xec0>
   21170:	b	217dc <myhtml_insertion_mode_in_body@@Base+0xec0>
   21174:	b	217dc <myhtml_insertion_mode_in_body@@Base+0xec0>
   21178:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   2117c:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21180:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21184:	b	21ea8 <myhtml_insertion_mode_in_body@@Base+0x158c>
   21188:	b	21520 <myhtml_insertion_mode_in_body@@Base+0xc04>
   2118c:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   21190:	b	21fd0 <myhtml_insertion_mode_in_body@@Base+0x16b4>
   21194:	b	21f20 <myhtml_insertion_mode_in_body@@Base+0x1604>
   21198:	b	21de8 <myhtml_insertion_mode_in_body@@Base+0x14cc>
   2119c:	b	21e1c <myhtml_insertion_mode_in_body@@Base+0x1500>
   211a0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211a4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211a8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211ac:	b	21de8 <myhtml_insertion_mode_in_body@@Base+0x14cc>
   211b0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211b4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211b8:	b	21914 <myhtml_insertion_mode_in_body@@Base+0xff8>
   211bc:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   211c0:	b	21844 <myhtml_insertion_mode_in_body@@Base+0xf28>
   211c4:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   211c8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211cc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211d0:	b	21d48 <myhtml_insertion_mode_in_body@@Base+0x142c>
   211d4:	b	21780 <myhtml_insertion_mode_in_body@@Base+0xe64>
   211d8:	b	220e0 <myhtml_insertion_mode_in_body@@Base+0x17c4>
   211dc:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   211e0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211e4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   211e8:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   211ec:	b	21cf0 <myhtml_insertion_mode_in_body@@Base+0x13d4>
   211f0:	b	21ff8 <myhtml_insertion_mode_in_body@@Base+0x16dc>
   211f4:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   211f8:	b	2200c <myhtml_insertion_mode_in_body@@Base+0x16f0>
   211fc:	b	21d48 <myhtml_insertion_mode_in_body@@Base+0x142c>
   21200:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21204:	b	220a4 <myhtml_insertion_mode_in_body@@Base+0x1788>
   21208:	b	220a4 <myhtml_insertion_mode_in_body@@Base+0x1788>
   2120c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21210:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21214:	b	21e94 <myhtml_insertion_mode_in_body@@Base+0x1578>
   21218:	b	21ba4 <myhtml_insertion_mode_in_body@@Base+0x1288>
   2121c:	b	21844 <myhtml_insertion_mode_in_body@@Base+0xf28>
   21220:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21224:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21228:	b	2211c <myhtml_insertion_mode_in_body@@Base+0x1800>
   2122c:	b	22160 <myhtml_insertion_mode_in_body@@Base+0x1844>
   21230:	b	22160 <myhtml_insertion_mode_in_body@@Base+0x1844>
   21234:	b	2211c <myhtml_insertion_mode_in_body@@Base+0x1800>
   21238:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2123c:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   21240:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21244:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   21248:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   2124c:	b	22044 <myhtml_insertion_mode_in_body@@Base+0x1728>
   21250:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   21254:	b	21e94 <myhtml_insertion_mode_in_body@@Base+0x1578>
   21258:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2125c:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   21260:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   21264:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   21268:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2126c:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   21270:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21274:	b	221f8 <myhtml_insertion_mode_in_body@@Base+0x18dc>
   21278:	b	21d84 <myhtml_insertion_mode_in_body@@Base+0x1468>
   2127c:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   21280:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   21284:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   21288:	b	21f30 <myhtml_insertion_mode_in_body@@Base+0x1614>
   2128c:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   21290:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   21294:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   21298:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2129c:	b	215a0 <myhtml_insertion_mode_in_body@@Base+0xc84>
   212a0:	b	2226c <myhtml_insertion_mode_in_body@@Base+0x1950>
   212a4:	b	21e94 <myhtml_insertion_mode_in_body@@Base+0x1578>
   212a8:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   212ac:	b	21ccc <myhtml_insertion_mode_in_body@@Base+0x13b0>
   212b0:	b	21748 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   212b4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212b8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212bc:	b	21de8 <myhtml_insertion_mode_in_body@@Base+0x14cc>
   212c0:	b	21f74 <myhtml_insertion_mode_in_body@@Base+0x1658>
   212c4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212c8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212cc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212d0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212d4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212d8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212dc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212e0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212e4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212e8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212ec:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212f0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212f4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212f8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   212fc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21300:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21304:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21308:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2130c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21310:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21314:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21318:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2131c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21320:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21324:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21328:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2132c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21330:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21334:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21338:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2133c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21340:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21344:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21348:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2134c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21350:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21354:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21358:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2135c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21360:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21364:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21368:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2136c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21370:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21374:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21378:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2137c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21380:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21384:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21388:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2138c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21390:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21394:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21398:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2139c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213a0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213a4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213a8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213ac:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213b0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213b4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213b8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213bc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213c0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213c4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213c8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213cc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213d0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213d4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213d8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213dc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213e0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213e4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213e8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213ec:	b	221a4 <myhtml_insertion_mode_in_body@@Base+0x1888>
   213f0:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213f4:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213f8:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   213fc:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21400:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21404:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21408:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2140c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21410:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21414:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21418:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2141c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21420:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21424:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21428:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2142c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21430:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21434:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21438:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2143c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21440:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21444:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21448:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2144c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21450:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21454:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21458:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2145c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21460:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21464:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21468:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   2146c:	b	2224c <myhtml_insertion_mode_in_body@@Base+0x1930>
   21470:	b	216fc <myhtml_insertion_mode_in_body@@Base+0xde0>
   21474:	ldr	r3, [r1, #48]	; 0x30
   21478:	tst	r3, #2048	; 0x800
   2147c:	beq	214d4 <myhtml_insertion_mode_in_body@@Base+0xbb8>
   21480:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   21484:	ldr	r3, [r5, #12]
   21488:	cmp	r3, #0
   2148c:	moveq	r6, #0
   21490:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21494:	mov	r0, r4
   21498:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   2149c:	mov	r1, r5
   214a0:	mov	r0, r4
   214a4:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   214a8:	ldr	r3, [r5, #48]	; 0x30
   214ac:	tst	r3, #8
   214b0:	movne	r6, #0
   214b4:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   214b8:	ldr	r3, [r4, #180]	; 0xb4
   214bc:	ldr	r2, [r4, #180]	; 0xb4
   214c0:	and	r3, r3, #2
   214c4:	eor	r3, r3, r2
   214c8:	str	r3, [r4, #180]	; 0xb4
   214cc:	mov	r6, #0
   214d0:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   214d4:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   214d8:	mov	r1, r5
   214dc:	mov	r0, r4
   214e0:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   214e4:	ldr	r3, [r5, #48]	; 0x30
   214e8:	tst	r3, #8
   214ec:	movne	r6, #0
   214f0:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   214f4:	ldr	r3, [r4, #180]	; 0xb4
   214f8:	ldr	r2, [r4, #180]	; 0xb4
   214fc:	and	r3, r3, #2
   21500:	eor	r3, r3, r2
   21504:	str	r3, [r4, #180]	; 0xb4
   21508:	mov	r6, #0
   2150c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21510:	mov	r2, #0
   21514:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   21518:	mov	r6, #0
   2151c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21520:	mov	r3, #0
   21524:	mov	r2, #1
   21528:	mov	r1, #128	; 0x80
   2152c:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   21530:	cmp	r0, #0
   21534:	movne	r6, #0
   21538:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2153c:	ldr	r3, [r4, #128]	; 0x80
   21540:	ldr	r2, [r3, #4]
   21544:	cmp	r2, #0
   21548:	moveq	r6, #0
   2154c:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21550:	ldr	r3, [r3]
   21554:	ldr	r6, [r3]
   21558:	ldr	r3, [r6, #32]
   2155c:	cmp	r3, #0
   21560:	streq	r5, [r6, #32]
   21564:	moveq	r6, #0
   21568:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2156c:	mov	r1, r5
   21570:	ldr	r0, [r4, #8]
   21574:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   21578:	ldr	r1, [r6, #32]
   2157c:	ldr	r0, [r4, #8]
   21580:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   21584:	ldr	r3, [r4, #44]	; 0x2c
   21588:	ldr	r2, [r6, #32]
   2158c:	mov	r1, r5
   21590:	ldr	r0, [r4, #8]
   21594:	bl	10628 <myhtml_token_node_attr_copy_with_check@plt>
   21598:	mov	r6, #0
   2159c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   215a0:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   215a4:	mov	r6, r0
   215a8:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   215ac:	ldr	r3, [r0, #128]	; 0x80
   215b0:	ldr	r2, [r3, #4]
   215b4:	cmp	r2, #1
   215b8:	movls	r6, #0
   215bc:	bls	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   215c0:	ldr	r3, [r3]
   215c4:	ldr	r3, [r3, #4]
   215c8:	ldr	r2, [r3, #4]
   215cc:	cmp	r2, #23
   215d0:	movne	r6, #0
   215d4:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   215d8:	ldr	r3, [r3, #8]
   215dc:	cmp	r3, #1
   215e0:	movne	r6, #0
   215e4:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   215e8:	mov	r3, #0
   215ec:	mov	r2, #1
   215f0:	mov	r1, #128	; 0x80
   215f4:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   215f8:	cmp	r0, #0
   215fc:	movne	r6, #0
   21600:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21604:	ldr	r3, [r4, #180]	; 0xb4
   21608:	ldr	r2, [r4, #180]	; 0xb4
   2160c:	and	r3, r3, #2
   21610:	eor	r3, r3, r2
   21614:	str	r3, [r4, #180]	; 0xb4
   21618:	ldr	r3, [r4, #128]	; 0x80
   2161c:	ldr	r2, [r3, #4]
   21620:	cmp	r2, #1
   21624:	movls	r6, #0
   21628:	bls	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2162c:	ldr	r3, [r3]
   21630:	ldr	r6, [r3, #4]
   21634:	ldr	r3, [r6, #32]
   21638:	cmp	r3, #0
   2163c:	streq	r5, [r6, #32]
   21640:	moveq	r6, #0
   21644:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21648:	mov	r1, r5
   2164c:	ldr	r0, [r4, #8]
   21650:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   21654:	ldr	r1, [r6, #32]
   21658:	ldr	r0, [r4, #8]
   2165c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   21660:	ldr	r3, [r4, #44]	; 0x2c
   21664:	ldr	r2, [r6, #32]
   21668:	mov	r1, r5
   2166c:	ldr	r0, [r4, #8]
   21670:	bl	10628 <myhtml_token_node_attr_copy_with_check@plt>
   21674:	mov	r6, #0
   21678:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2167c:	ldr	r3, [r0, #128]	; 0x80
   21680:	ldr	r2, [r3, #4]
   21684:	cmp	r2, #1
   21688:	movls	r6, #0
   2168c:	bls	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21690:	ldr	r3, [r3]
   21694:	ldr	r0, [r3, #4]
   21698:	ldr	r3, [r0, #4]
   2169c:	cmp	r3, #23
   216a0:	movne	r6, #0
   216a4:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   216a8:	ldr	r3, [r0, #8]
   216ac:	cmp	r3, #1
   216b0:	movne	r6, #0
   216b4:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   216b8:	ldr	r3, [r4, #180]	; 0xb4
   216bc:	tst	r3, #2
   216c0:	moveq	r6, #0
   216c4:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   216c8:	bl	10d84 <myhtml_tree_node_remove@plt>
   216cc:	mov	r3, #1
   216d0:	mov	r2, r3
   216d4:	mov	r1, #65	; 0x41
   216d8:	mov	r0, r4
   216dc:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   216e0:	mov	r1, r5
   216e4:	mov	r0, r4
   216e8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   216ec:	mov	r3, #19
   216f0:	str	r3, [r4, #168]	; 0xa8
   216f4:	mov	r6, #0
   216f8:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   216fc:	ldr	r3, [r0, #140]	; 0x8c
   21700:	ldr	r3, [r3, #4]
   21704:	cmp	r3, #0
   21708:	bne	2173c <myhtml_insertion_mode_in_body@@Base+0xe20>
   2170c:	ldr	r1, [r0, #128]	; 0x80
   21710:	ldr	r2, [r1, #4]
   21714:	cmp	r2, #0
   21718:	beq	2172c <myhtml_insertion_mode_in_body@@Base+0xe10>
   2171c:	add	r3, r3, #1
   21720:	ldr	r2, [r1, #4]
   21724:	cmp	r2, r3
   21728:	bhi	2171c <myhtml_insertion_mode_in_body@@Base+0xe00>
   2172c:	mov	r0, r4
   21730:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   21734:	mov	r6, #0
   21738:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2173c:	bl	fd40 <myhtml_insertion_mode_in_template@plt>
   21740:	mov	r6, r0
   21744:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21748:	mov	r3, #32
   2174c:	mov	r2, #1
   21750:	mov	r1, #99	; 0x63
   21754:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21758:	cmp	r0, #0
   2175c:	beq	2176c <myhtml_insertion_mode_in_body@@Base+0xe50>
   21760:	mov	r1, r5
   21764:	mov	r0, r4
   21768:	bl	103dc <myhtml_tree_tags_close_p@plt>
   2176c:	mov	r1, r5
   21770:	mov	r0, r4
   21774:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21778:	mov	r6, #0
   2177c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21780:	mov	r3, #32
   21784:	mov	r2, #1
   21788:	mov	r1, #99	; 0x63
   2178c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21790:	cmp	r0, #0
   21794:	beq	217a4 <myhtml_insertion_mode_in_body@@Base+0xe88>
   21798:	mov	r1, r5
   2179c:	mov	r0, r4
   217a0:	bl	103dc <myhtml_tree_tags_close_p@plt>
   217a4:	mov	r0, r4
   217a8:	bl	105bc <myhtml_tree_current_node@plt>
   217ac:	mov	r1, #85	; 0x55
   217b0:	bl	10a3c <myhtml_is_html_node@plt>
   217b4:	cmp	r0, #0
   217b8:	bne	217d0 <myhtml_insertion_mode_in_body@@Base+0xeb4>
   217bc:	mov	r1, r5
   217c0:	mov	r0, r4
   217c4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   217c8:	mov	r6, #0
   217cc:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   217d0:	mov	r0, r4
   217d4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   217d8:	b	217bc <myhtml_insertion_mode_in_body@@Base+0xea0>
   217dc:	mov	r3, #32
   217e0:	mov	r2, #1
   217e4:	mov	r1, #99	; 0x63
   217e8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   217ec:	cmp	r0, #0
   217f0:	beq	21800 <myhtml_insertion_mode_in_body@@Base+0xee4>
   217f4:	mov	r1, r5
   217f8:	mov	r0, r4
   217fc:	bl	103dc <myhtml_tree_tags_close_p@plt>
   21800:	mov	r0, r4
   21804:	bl	105bc <myhtml_tree_current_node@plt>
   21808:	ldr	r3, [r0, #4]
   2180c:	sub	r3, r3, #55	; 0x37
   21810:	cmp	r3, #5
   21814:	bhi	21824 <myhtml_insertion_mode_in_body@@Base+0xf08>
   21818:	ldr	r3, [r0, #8]
   2181c:	cmp	r3, #1
   21820:	beq	21838 <myhtml_insertion_mode_in_body@@Base+0xf1c>
   21824:	mov	r1, r5
   21828:	mov	r0, r4
   2182c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21830:	mov	r6, #0
   21834:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21838:	mov	r0, r4
   2183c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21840:	b	21824 <myhtml_insertion_mode_in_body@@Base+0xf08>
   21844:	mov	r3, #32
   21848:	mov	r2, #1
   2184c:	mov	r1, #99	; 0x63
   21850:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21854:	cmp	r0, #0
   21858:	beq	21868 <myhtml_insertion_mode_in_body@@Base+0xf4c>
   2185c:	mov	r1, r5
   21860:	mov	r0, r4
   21864:	bl	103dc <myhtml_tree_tags_close_p@plt>
   21868:	mov	r1, r5
   2186c:	mov	r0, r4
   21870:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21874:	ldr	r3, [r4, #180]	; 0xb4
   21878:	orr	r3, r3, #192	; 0xc0
   2187c:	str	r3, [r4, #180]	; 0xb4
   21880:	ldr	r3, [r4, #180]	; 0xb4
   21884:	ldr	r2, [r4, #180]	; 0xb4
   21888:	and	r3, r3, #2
   2188c:	eor	r3, r3, r2
   21890:	str	r3, [r4, #180]	; 0xb4
   21894:	mov	r6, #0
   21898:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2189c:	mov	r3, #0
   218a0:	mov	r2, #1
   218a4:	mov	r1, #128	; 0x80
   218a8:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   218ac:	ldr	r6, [r4, #104]	; 0x68
   218b0:	mov	r7, r0
   218b4:	clz	r0, r0
   218b8:	lsr	r0, r0, #5
   218bc:	cmp	r6, #0
   218c0:	movne	r6, r0
   218c4:	moveq	r6, #0
   218c8:	cmp	r6, #0
   218cc:	movne	r6, #0
   218d0:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   218d4:	mov	r3, #32
   218d8:	mov	r2, #1
   218dc:	mov	r1, #99	; 0x63
   218e0:	mov	r0, r4
   218e4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   218e8:	cmp	r0, #0
   218ec:	beq	218fc <myhtml_insertion_mode_in_body@@Base+0xfe0>
   218f0:	mov	r1, r5
   218f4:	mov	r0, r4
   218f8:	bl	103dc <myhtml_tree_tags_close_p@plt>
   218fc:	mov	r1, r5
   21900:	mov	r0, r4
   21904:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21908:	cmp	r7, #0
   2190c:	streq	r0, [r4, #104]	; 0x68
   21910:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21914:	ldr	r3, [r0, #180]	; 0xb4
   21918:	ldr	r2, [r0, #180]	; 0xb4
   2191c:	and	r3, r3, #2
   21920:	eor	r3, r3, r2
   21924:	str	r3, [r0, #180]	; 0xb4
   21928:	ldr	r3, [r0, #128]	; 0x80
   2192c:	ldr	r7, [r3, #4]
   21930:	cmp	r7, #0
   21934:	beq	21974 <myhtml_insertion_mode_in_body@@Base+0x1058>
   21938:	mov	r8, #77	; 0x4d
   2193c:	b	219b8 <myhtml_insertion_mode_in_body@@Base+0x109c>
   21940:	mov	r2, #1
   21944:	mov	r1, #77	; 0x4d
   21948:	mov	r0, r4
   2194c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   21950:	mov	r0, r4
   21954:	bl	105bc <myhtml_tree_current_node@plt>
   21958:	mov	r1, #77	; 0x4d
   2195c:	bl	10a3c <myhtml_is_html_node@plt>
   21960:	mov	r3, #0
   21964:	mov	r2, #1
   21968:	mov	r1, #77	; 0x4d
   2196c:	mov	r0, r4
   21970:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   21974:	mov	r3, #32
   21978:	mov	r2, #1
   2197c:	mov	r1, #99	; 0x63
   21980:	mov	r0, r4
   21984:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21988:	cmp	r0, #0
   2198c:	beq	2199c <myhtml_insertion_mode_in_body@@Base+0x1080>
   21990:	mov	r1, r5
   21994:	mov	r0, r4
   21998:	bl	103dc <myhtml_tree_tags_close_p@plt>
   2199c:	mov	r1, r5
   219a0:	mov	r0, r4
   219a4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   219a8:	mov	r6, #0
   219ac:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   219b0:	cmp	r7, #0
   219b4:	beq	21974 <myhtml_insertion_mode_in_body@@Base+0x1058>
   219b8:	sub	r7, r7, #1
   219bc:	ldr	r3, [r4, #128]	; 0x80
   219c0:	ldr	r3, [r3]
   219c4:	ldr	r6, [r3, r7, lsl #2]
   219c8:	ldr	r1, [r6, #4]
   219cc:	ldr	r0, [r4, #28]
   219d0:	bl	109b8 <myhtml_tag_get_by_id@plt>
   219d4:	mov	r9, r0
   219d8:	mov	r1, r8
   219dc:	mov	r0, r6
   219e0:	bl	10a3c <myhtml_is_html_node@plt>
   219e4:	cmp	r0, #0
   219e8:	bne	21940 <myhtml_insertion_mode_in_body@@Base+0x1024>
   219ec:	ldr	r3, [r6, #8]
   219f0:	add	r2, r3, #4
   219f4:	ldr	r2, [r9, r2, lsl #2]
   219f8:	tst	r2, #2
   219fc:	beq	219b0 <myhtml_insertion_mode_in_body@@Base+0x1094>
   21a00:	ldr	r1, [r6, #4]
   21a04:	cmp	r1, #7
   21a08:	cmpne	r1, #42	; 0x2a
   21a0c:	movne	r2, #1
   21a10:	moveq	r2, #0
   21a14:	cmp	r1, #99	; 0x63
   21a18:	moveq	r2, #0
   21a1c:	andne	r2, r2, #1
   21a20:	cmp	r2, #0
   21a24:	bne	21974 <myhtml_insertion_mode_in_body@@Base+0x1058>
   21a28:	cmp	r3, #1
   21a2c:	beq	219b0 <myhtml_insertion_mode_in_body@@Base+0x1094>
   21a30:	b	21974 <myhtml_insertion_mode_in_body@@Base+0x1058>
   21a34:	ldr	r3, [r0, #180]	; 0xb4
   21a38:	ldr	r2, [r0, #180]	; 0xb4
   21a3c:	and	r3, r3, #2
   21a40:	eor	r3, r3, r2
   21a44:	str	r3, [r0, #180]	; 0xb4
   21a48:	ldr	r3, [r0, #128]	; 0x80
   21a4c:	ldr	r7, [r3, #4]
   21a50:	cmp	r7, #0
   21a54:	beq	21a98 <myhtml_insertion_mode_in_body@@Base+0x117c>
   21a58:	mov	r8, #36	; 0x24
   21a5c:	mov	r9, #44	; 0x2c
   21a60:	b	21b14 <myhtml_insertion_mode_in_body@@Base+0x11f8>
   21a64:	mov	r2, #1
   21a68:	mov	r1, #36	; 0x24
   21a6c:	mov	r0, r4
   21a70:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   21a74:	mov	r0, r4
   21a78:	bl	105bc <myhtml_tree_current_node@plt>
   21a7c:	mov	r1, #36	; 0x24
   21a80:	bl	10a3c <myhtml_is_html_node@plt>
   21a84:	mov	r3, #0
   21a88:	mov	r2, #1
   21a8c:	mov	r1, #36	; 0x24
   21a90:	mov	r0, r4
   21a94:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   21a98:	mov	r3, #32
   21a9c:	mov	r2, #1
   21aa0:	mov	r1, #99	; 0x63
   21aa4:	mov	r0, r4
   21aa8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21aac:	cmp	r0, #0
   21ab0:	beq	21ac0 <myhtml_insertion_mode_in_body@@Base+0x11a4>
   21ab4:	mov	r1, r5
   21ab8:	mov	r0, r4
   21abc:	bl	103dc <myhtml_tree_tags_close_p@plt>
   21ac0:	mov	r1, r5
   21ac4:	mov	r0, r4
   21ac8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21acc:	mov	r6, #0
   21ad0:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21ad4:	mov	r2, #1
   21ad8:	mov	r1, #44	; 0x2c
   21adc:	mov	r0, r4
   21ae0:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   21ae4:	mov	r0, r4
   21ae8:	bl	105bc <myhtml_tree_current_node@plt>
   21aec:	mov	r1, #44	; 0x2c
   21af0:	bl	10a3c <myhtml_is_html_node@plt>
   21af4:	mov	r3, #0
   21af8:	mov	r2, #1
   21afc:	mov	r1, #44	; 0x2c
   21b00:	mov	r0, r4
   21b04:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   21b08:	b	21a98 <myhtml_insertion_mode_in_body@@Base+0x117c>
   21b0c:	cmp	r7, #0
   21b10:	beq	21a98 <myhtml_insertion_mode_in_body@@Base+0x117c>
   21b14:	sub	r7, r7, #1
   21b18:	ldr	r3, [r4, #128]	; 0x80
   21b1c:	ldr	r3, [r3]
   21b20:	ldr	r6, [r3, r7, lsl #2]
   21b24:	ldr	r1, [r6, #4]
   21b28:	ldr	r0, [r4, #28]
   21b2c:	bl	109b8 <myhtml_tag_get_by_id@plt>
   21b30:	mov	sl, r0
   21b34:	mov	r1, r8
   21b38:	mov	r0, r6
   21b3c:	bl	10a3c <myhtml_is_html_node@plt>
   21b40:	cmp	r0, #0
   21b44:	bne	21a64 <myhtml_insertion_mode_in_body@@Base+0x1148>
   21b48:	mov	r1, r9
   21b4c:	mov	r0, r6
   21b50:	bl	10a3c <myhtml_is_html_node@plt>
   21b54:	cmp	r0, #0
   21b58:	bne	21ad4 <myhtml_insertion_mode_in_body@@Base+0x11b8>
   21b5c:	ldr	r3, [r6, #8]
   21b60:	add	r2, r3, #4
   21b64:	ldr	r2, [sl, r2, lsl #2]
   21b68:	tst	r2, #2
   21b6c:	beq	21b0c <myhtml_insertion_mode_in_body@@Base+0x11f0>
   21b70:	ldr	r1, [r6, #4]
   21b74:	cmp	r1, #7
   21b78:	cmpne	r1, #42	; 0x2a
   21b7c:	movne	r2, #1
   21b80:	moveq	r2, #0
   21b84:	cmp	r1, #99	; 0x63
   21b88:	moveq	r2, #0
   21b8c:	andne	r2, r2, #1
   21b90:	cmp	r2, #0
   21b94:	bne	21a98 <myhtml_insertion_mode_in_body@@Base+0x117c>
   21b98:	cmp	r3, #1
   21b9c:	beq	21b0c <myhtml_insertion_mode_in_body@@Base+0x11f0>
   21ba0:	b	21a98 <myhtml_insertion_mode_in_body@@Base+0x117c>
   21ba4:	mov	r3, #32
   21ba8:	mov	r2, #1
   21bac:	mov	r1, #99	; 0x63
   21bb0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21bb4:	cmp	r0, #0
   21bb8:	beq	21bc8 <myhtml_insertion_mode_in_body@@Base+0x12ac>
   21bbc:	mov	r1, r5
   21bc0:	mov	r0, r4
   21bc4:	bl	103dc <myhtml_tree_tags_close_p@plt>
   21bc8:	mov	r1, r5
   21bcc:	mov	r0, r4
   21bd0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21bd4:	mov	r3, #6
   21bd8:	str	r3, [r4, #164]	; 0xa4
   21bdc:	mov	r6, #0
   21be0:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21be4:	mov	r3, #8
   21be8:	mov	r2, #1
   21bec:	mov	r1, #25
   21bf0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21bf4:	cmp	r0, #0
   21bf8:	beq	21c20 <myhtml_insertion_mode_in_body@@Base+0x1304>
   21bfc:	mov	r2, #0
   21c00:	mov	r1, r2
   21c04:	mov	r0, r4
   21c08:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   21c0c:	mov	r3, #0
   21c10:	mov	r2, #1
   21c14:	mov	r1, #25
   21c18:	mov	r0, r4
   21c1c:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   21c20:	mov	r0, r4
   21c24:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21c28:	mov	r1, r5
   21c2c:	mov	r0, r4
   21c30:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21c34:	ldr	r3, [r4, #180]	; 0xb4
   21c38:	ldr	r2, [r4, #180]	; 0xb4
   21c3c:	and	r3, r3, #2
   21c40:	eor	r3, r3, r2
   21c44:	str	r3, [r4, #180]	; 0xb4
   21c48:	mov	r6, #0
   21c4c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21c50:	mov	r2, #0
   21c54:	mov	r1, #4
   21c58:	bl	105e0 <myhtml_tree_active_formatting_between_last_marker@plt>
   21c5c:	cmp	r0, #0
   21c60:	beq	21ca4 <myhtml_insertion_mode_in_body@@Base+0x1388>
   21c64:	mov	r2, #4
   21c68:	mov	r1, r5
   21c6c:	mov	r0, r4
   21c70:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   21c74:	mov	r2, #0
   21c78:	mov	r1, #4
   21c7c:	mov	r0, r4
   21c80:	bl	105e0 <myhtml_tree_active_formatting_between_last_marker@plt>
   21c84:	subs	r6, r0, #0
   21c88:	beq	21ca4 <myhtml_insertion_mode_in_body@@Base+0x1388>
   21c8c:	mov	r1, r6
   21c90:	mov	r0, r4
   21c94:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   21c98:	mov	r1, r6
   21c9c:	mov	r0, r4
   21ca0:	bl	10838 <myhtml_tree_active_formatting_remove@plt>
   21ca4:	mov	r0, r4
   21ca8:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21cac:	mov	r1, r5
   21cb0:	mov	r0, r4
   21cb4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21cb8:	mov	r1, r0
   21cbc:	mov	r0, r4
   21cc0:	bl	107a8 <myhtml_tree_active_formatting_append_with_check@plt>
   21cc4:	mov	r6, #0
   21cc8:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21ccc:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21cd0:	mov	r1, r5
   21cd4:	mov	r0, r4
   21cd8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21cdc:	mov	r1, r0
   21ce0:	mov	r0, r4
   21ce4:	bl	107a8 <myhtml_tree_active_formatting_append_with_check@plt>
   21ce8:	mov	r6, #0
   21cec:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21cf0:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21cf4:	mov	r3, #8
   21cf8:	mov	r2, #1
   21cfc:	mov	r1, #90	; 0x5a
   21d00:	mov	r0, r4
   21d04:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21d08:	cmp	r0, #0
   21d0c:	beq	21d28 <myhtml_insertion_mode_in_body@@Base+0x140c>
   21d10:	mov	r2, #90	; 0x5a
   21d14:	mov	r1, r5
   21d18:	mov	r0, r4
   21d1c:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   21d20:	mov	r0, r4
   21d24:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21d28:	mov	r1, r5
   21d2c:	mov	r0, r4
   21d30:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21d34:	mov	r1, r0
   21d38:	mov	r0, r4
   21d3c:	bl	107a8 <myhtml_tree_active_formatting_append_with_check@plt>
   21d40:	mov	r6, #0
   21d44:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21d48:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21d4c:	mov	r1, r5
   21d50:	mov	r0, r4
   21d54:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21d58:	ldr	r3, [r4]
   21d5c:	ldr	r1, [r3, #36]	; 0x24
   21d60:	mov	r0, r4
   21d64:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   21d68:	ldr	r3, [r4, #180]	; 0xb4
   21d6c:	ldr	r2, [r4, #180]	; 0xb4
   21d70:	and	r3, r3, #2
   21d74:	eor	r3, r3, r2
   21d78:	str	r3, [r4, #180]	; 0xb4
   21d7c:	mov	r6, #0
   21d80:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21d84:	ldr	r3, [r0, #176]	; 0xb0
   21d88:	tst	r3, #1
   21d8c:	beq	21dc0 <myhtml_insertion_mode_in_body@@Base+0x14a4>
   21d90:	mov	r1, r5
   21d94:	mov	r0, r4
   21d98:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21d9c:	ldr	r3, [r4, #180]	; 0xb4
   21da0:	ldr	r2, [r4, #180]	; 0xb4
   21da4:	and	r3, r3, #2
   21da8:	eor	r3, r3, r2
   21dac:	str	r3, [r4, #180]	; 0xb4
   21db0:	mov	r3, #8
   21db4:	str	r3, [r4, #168]	; 0xa8
   21db8:	mov	r6, #0
   21dbc:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21dc0:	mov	r3, #32
   21dc4:	mov	r2, #1
   21dc8:	mov	r1, #99	; 0x63
   21dcc:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21dd0:	cmp	r0, #0
   21dd4:	beq	21d90 <myhtml_insertion_mode_in_body@@Base+0x1474>
   21dd8:	mov	r1, r5
   21ddc:	mov	r0, r4
   21de0:	bl	103dc <myhtml_tree_tags_close_p@plt>
   21de4:	b	21d90 <myhtml_insertion_mode_in_body@@Base+0x1474>
   21de8:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21dec:	mov	r1, r5
   21df0:	mov	r0, r4
   21df4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21df8:	mov	r0, r4
   21dfc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21e00:	ldr	r3, [r4, #180]	; 0xb4
   21e04:	ldr	r2, [r4, #180]	; 0xb4
   21e08:	and	r3, r3, #2
   21e0c:	eor	r3, r3, r2
   21e10:	str	r3, [r4, #180]	; 0xb4
   21e14:	mov	r6, #0
   21e18:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21e1c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21e20:	mov	r1, r5
   21e24:	mov	r0, r4
   21e28:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21e2c:	mov	r0, r4
   21e30:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21e34:	mov	r1, r5
   21e38:	ldr	r0, [r4, #8]
   21e3c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   21e40:	mov	r3, #6
   21e44:	str	r3, [sp, #4]
   21e48:	ldr	r3, [pc, #1068]	; 2227c <myhtml_insertion_mode_in_body@@Base+0x1960>
   21e4c:	add	r3, pc, r3
   21e50:	str	r3, [sp]
   21e54:	mov	r3, #4
   21e58:	ldr	r2, [pc, #1056]	; 22280 <myhtml_insertion_mode_in_body@@Base+0x1964>
   21e5c:	add	r2, pc, r2
   21e60:	mov	r1, r5
   21e64:	ldr	r0, [r4, #8]
   21e68:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   21e6c:	cmp	r0, #0
   21e70:	movne	r6, #0
   21e74:	bne	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21e78:	ldr	r3, [r4, #180]	; 0xb4
   21e7c:	ldr	r2, [r4, #180]	; 0xb4
   21e80:	and	r3, r3, #2
   21e84:	eor	r3, r3, r2
   21e88:	str	r3, [r4, #180]	; 0xb4
   21e8c:	mov	r6, #0
   21e90:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21e94:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21e98:	mov	r0, r4
   21e9c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21ea0:	mov	r6, #0
   21ea4:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21ea8:	mov	r3, #32
   21eac:	mov	r2, #1
   21eb0:	mov	r1, #99	; 0x63
   21eb4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21eb8:	cmp	r0, #0
   21ebc:	beq	21ecc <myhtml_insertion_mode_in_body@@Base+0x15b0>
   21ec0:	mov	r1, r5
   21ec4:	mov	r0, r4
   21ec8:	bl	103dc <myhtml_tree_tags_close_p@plt>
   21ecc:	mov	r0, r4
   21ed0:	bl	105bc <myhtml_tree_current_node@plt>
   21ed4:	mov	r1, #85	; 0x55
   21ed8:	bl	10a3c <myhtml_is_html_node@plt>
   21edc:	cmp	r0, #0
   21ee0:	bne	21f14 <myhtml_insertion_mode_in_body@@Base+0x15f8>
   21ee4:	mov	r1, r5
   21ee8:	mov	r0, r4
   21eec:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21ef0:	mov	r0, r4
   21ef4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21ef8:	ldr	r3, [r4, #180]	; 0xb4
   21efc:	ldr	r2, [r4, #180]	; 0xb4
   21f00:	and	r3, r3, #2
   21f04:	eor	r3, r3, r2
   21f08:	str	r3, [r4, #180]	; 0xb4
   21f0c:	mov	r6, #0
   21f10:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21f14:	mov	r0, r4
   21f18:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   21f1c:	b	21ee4 <myhtml_insertion_mode_in_body@@Base+0x15c8>
   21f20:	mov	r3, #69	; 0x45
   21f24:	str	r3, [r1]
   21f28:	mov	r6, #1
   21f2c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21f30:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   21f34:	ldr	r3, [r4, #180]	; 0xb4
   21f38:	orr	r3, r3, #192	; 0xc0
   21f3c:	str	r3, [r4, #180]	; 0xb4
   21f40:	ldr	r3, [r4, #168]	; 0xa8
   21f44:	str	r3, [r4, #172]	; 0xac
   21f48:	ldr	r3, [r4, #180]	; 0xb4
   21f4c:	ldr	r2, [r4, #180]	; 0xb4
   21f50:	and	r3, r3, #2
   21f54:	eor	r3, r3, r2
   21f58:	str	r3, [r4, #180]	; 0xb4
   21f5c:	mov	r3, #7
   21f60:	str	r3, [r4, #168]	; 0xa8
   21f64:	mov	r3, #2
   21f68:	str	r3, [r4, #164]	; 0xa4
   21f6c:	mov	r6, #0
   21f70:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21f74:	mov	r3, #32
   21f78:	mov	r2, #1
   21f7c:	mov	r1, #99	; 0x63
   21f80:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   21f84:	cmp	r0, #0
   21f88:	beq	21f98 <myhtml_insertion_mode_in_body@@Base+0x167c>
   21f8c:	mov	r1, r5
   21f90:	mov	r0, r4
   21f94:	bl	103dc <myhtml_tree_tags_close_p@plt>
   21f98:	mov	r0, r4
   21f9c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   21fa0:	ldr	r3, [r4, #180]	; 0xb4
   21fa4:	ldr	r2, [r4, #180]	; 0xb4
   21fa8:	and	r3, r3, #2
   21fac:	eor	r3, r3, r2
   21fb0:	str	r3, [r4, #180]	; 0xb4
   21fb4:	mov	r3, #4
   21fb8:	str	r3, [r4, #164]	; 0xa4
   21fbc:	mov	r1, r5
   21fc0:	mov	r0, r4
   21fc4:	bl	10ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   21fc8:	mov	r6, #0
   21fcc:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21fd0:	ldr	r3, [r0, #180]	; 0xb4
   21fd4:	ldr	r2, [r0, #180]	; 0xb4
   21fd8:	and	r3, r3, #2
   21fdc:	eor	r3, r3, r2
   21fe0:	str	r3, [r0, #180]	; 0xb4
   21fe4:	mov	r3, #4
   21fe8:	str	r3, [r0, #164]	; 0xa4
   21fec:	bl	10ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   21ff0:	mov	r6, #0
   21ff4:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   21ff8:	mov	r3, #4
   21ffc:	str	r3, [r0, #164]	; 0xa4
   22000:	bl	10ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   22004:	mov	r6, #0
   22008:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2200c:	ldr	r3, [r0, #180]	; 0xb4
   22010:	tst	r3, #1
   22014:	beq	2202c <myhtml_insertion_mode_in_body@@Base+0x1710>
   22018:	mov	r3, #4
   2201c:	str	r3, [r0, #164]	; 0xa4
   22020:	bl	10ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   22024:	mov	r6, #0
   22028:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2202c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   22030:	mov	r1, r5
   22034:	mov	r0, r4
   22038:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2203c:	mov	r6, #0
   22040:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   22044:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   22048:	mov	r1, r5
   2204c:	mov	r0, r4
   22050:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22054:	ldr	r3, [r4, #180]	; 0xb4
   22058:	ldr	r2, [r4, #180]	; 0xb4
   2205c:	and	r3, r3, #2
   22060:	eor	r3, r3, r2
   22064:	str	r3, [r4, #180]	; 0xb4
   22068:	ldr	r3, [r4, #168]	; 0xa8
   2206c:	bic	r6, r3, #2
   22070:	sub	r3, r3, #12
   22074:	cmp	r6, #8
   22078:	cmpne	r3, #2
   2207c:	movls	r6, #1
   22080:	movhi	r6, #0
   22084:	bhi	22098 <myhtml_insertion_mode_in_body@@Base+0x177c>
   22088:	mov	r3, #16
   2208c:	str	r3, [r4, #168]	; 0xa8
   22090:	mov	r6, #0
   22094:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   22098:	mov	r3, #15
   2209c:	str	r3, [r4, #168]	; 0xa8
   220a0:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   220a4:	bl	105bc <myhtml_tree_current_node@plt>
   220a8:	mov	r1, #97	; 0x61
   220ac:	bl	10a3c <myhtml_is_html_node@plt>
   220b0:	cmp	r0, #0
   220b4:	bne	220d4 <myhtml_insertion_mode_in_body@@Base+0x17b8>
   220b8:	mov	r0, r4
   220bc:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   220c0:	mov	r1, r5
   220c4:	mov	r0, r4
   220c8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   220cc:	mov	r6, #0
   220d0:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   220d4:	mov	r0, r4
   220d8:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   220dc:	b	220b8 <myhtml_insertion_mode_in_body@@Base+0x179c>
   220e0:	bl	105bc <myhtml_tree_current_node@plt>
   220e4:	mov	r1, #85	; 0x55
   220e8:	bl	10a3c <myhtml_is_html_node@plt>
   220ec:	cmp	r0, #0
   220f0:	bne	22110 <myhtml_insertion_mode_in_body@@Base+0x17f4>
   220f4:	mov	r0, r4
   220f8:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   220fc:	mov	r1, r5
   22100:	mov	r0, r4
   22104:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22108:	mov	r6, #0
   2210c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   22110:	mov	r0, r4
   22114:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22118:	b	220f4 <myhtml_insertion_mode_in_body@@Base+0x17d8>
   2211c:	mov	r3, #8
   22120:	mov	r2, #1
   22124:	mov	r1, #109	; 0x6d
   22128:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2212c:	cmp	r0, #0
   22130:	beq	22144 <myhtml_insertion_mode_in_body@@Base+0x1828>
   22134:	mov	r2, #0
   22138:	mov	r1, r2
   2213c:	mov	r0, r4
   22140:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   22144:	mov	r0, r4
   22148:	bl	105bc <myhtml_tree_current_node@plt>
   2214c:	mov	r1, r5
   22150:	mov	r0, r4
   22154:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22158:	mov	r6, #0
   2215c:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   22160:	mov	r3, #8
   22164:	mov	r2, #1
   22168:	mov	r1, #109	; 0x6d
   2216c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   22170:	cmp	r0, #0
   22174:	beq	22188 <myhtml_insertion_mode_in_body@@Base+0x186c>
   22178:	mov	r2, #1
   2217c:	mov	r1, #108	; 0x6c
   22180:	mov	r0, r4
   22184:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   22188:	mov	r0, r4
   2218c:	bl	105bc <myhtml_tree_current_node@plt>
   22190:	mov	r1, r5
   22194:	mov	r0, r4
   22198:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2219c:	mov	r6, #0
   221a0:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   221a4:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   221a8:	mov	r1, r5
   221ac:	ldr	r0, [r4, #8]
   221b0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   221b4:	mov	r0, r5
   221b8:	bl	ff14 <myhtml_token_adjust_mathml_attributes@plt>
   221bc:	mov	r0, r5
   221c0:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   221c4:	mov	r1, r5
   221c8:	mov	r0, r4
   221cc:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   221d0:	mov	r3, #2
   221d4:	str	r3, [r0, #8]
   221d8:	ldr	r3, [r5, #48]	; 0x30
   221dc:	tst	r3, #2
   221e0:	moveq	r6, #0
   221e4:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   221e8:	mov	r0, r4
   221ec:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   221f0:	mov	r6, #0
   221f4:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   221f8:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   221fc:	mov	r1, r5
   22200:	ldr	r0, [r4, #8]
   22204:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   22208:	mov	r0, r5
   2220c:	bl	10178 <myhtml_token_adjust_svg_attributes@plt>
   22210:	mov	r0, r5
   22214:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   22218:	mov	r1, r5
   2221c:	mov	r0, r4
   22220:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   22224:	mov	r3, #3
   22228:	str	r3, [r0, #8]
   2222c:	ldr	r3, [r5, #48]	; 0x30
   22230:	tst	r3, #2
   22234:	moveq	r6, #0
   22238:	beq	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2223c:	mov	r0, r4
   22240:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22244:	mov	r6, #0
   22248:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2224c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   22250:	mov	r1, r5
   22254:	mov	r0, r4
   22258:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2225c:	mov	r6, #0
   22260:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   22264:	mov	r6, #0
   22268:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2226c:	mov	r6, #0
   22270:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   22274:	mov	r6, #0
   22278:	b	20b88 <myhtml_insertion_mode_in_body@@Base+0x26c>
   2227c:	andeq	lr, sp, r0, asr #12
   22280:	andeq	fp, r1, r0, ror r1

00022284 <myhtml_insertion_mode_before_head@@Base>:
   22284:	str	r4, [sp, #-8]!
   22288:	str	lr, [sp, #4]
   2228c:	mov	r4, r0
   22290:	ldr	r3, [r1, #48]	; 0x30
   22294:	tst	r3, #1
   22298:	beq	222f8 <myhtml_insertion_mode_before_head@@Base+0x74>
   2229c:	ldr	r3, [r1]
   222a0:	cmp	r3, #61	; 0x3d
   222a4:	beq	222d4 <myhtml_insertion_mode_before_head@@Base+0x50>
   222a8:	bhi	222c8 <myhtml_insertion_mode_before_head@@Base+0x44>
   222ac:	sub	r3, r3, #23
   222b0:	cmp	r3, #1
   222b4:	movhi	r0, #0
   222b8:	bls	222d4 <myhtml_insertion_mode_before_head@@Base+0x50>
   222bc:	ldr	r4, [sp]
   222c0:	add	sp, sp, #4
   222c4:	pop	{pc}		; (ldr pc, [sp], #4)
   222c8:	cmp	r3, #65	; 0x41
   222cc:	movne	r0, #0
   222d0:	bne	222bc <myhtml_insertion_mode_before_head@@Base+0x38>
   222d4:	mov	r2, #1
   222d8:	mov	r1, #61	; 0x3d
   222dc:	mov	r0, r4
   222e0:	bl	10904 <myhtml_tree_node_insert@plt>
   222e4:	str	r0, [r4, #92]	; 0x5c
   222e8:	mov	r3, #3
   222ec:	str	r3, [r4, #168]	; 0xa8
   222f0:	mov	r0, #1
   222f4:	b	222bc <myhtml_insertion_mode_before_head@@Base+0x38>
   222f8:	ldr	r3, [r1]
   222fc:	cmp	r3, #3
   22300:	moveq	r0, #0
   22304:	beq	222bc <myhtml_insertion_mode_before_head@@Base+0x38>
   22308:	bls	22328 <myhtml_insertion_mode_before_head@@Base+0xa4>
   2230c:	cmp	r3, #61	; 0x3d
   22310:	beq	22388 <myhtml_insertion_mode_before_head@@Base+0x104>
   22314:	cmp	r3, #65	; 0x41
   22318:	bne	223a4 <myhtml_insertion_mode_before_head@@Base+0x120>
   2231c:	mov	r0, r4
   22320:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   22324:	b	222bc <myhtml_insertion_mode_before_head@@Base+0x38>
   22328:	cmp	r3, #1
   2232c:	beq	2234c <myhtml_insertion_mode_before_head@@Base+0xc8>
   22330:	cmp	r3, #2
   22334:	bne	223a4 <myhtml_insertion_mode_before_head@@Base+0x120>
   22338:	mov	r2, #0
   2233c:	mov	r0, r4
   22340:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   22344:	mov	r0, #0
   22348:	b	222bc <myhtml_insertion_mode_before_head@@Base+0x38>
   2234c:	ldr	r3, [r1, #48]	; 0x30
   22350:	tst	r3, #8
   22354:	movne	r0, #0
   22358:	bne	222bc <myhtml_insertion_mode_before_head@@Base+0x38>
   2235c:	ldr	r0, [r4, #8]
   22360:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   22364:	mov	r2, #1
   22368:	mov	r1, #61	; 0x3d
   2236c:	mov	r0, r4
   22370:	bl	10904 <myhtml_tree_node_insert@plt>
   22374:	str	r0, [r4, #92]	; 0x5c
   22378:	mov	r3, #3
   2237c:	str	r3, [r4, #168]	; 0xa8
   22380:	mov	r0, #1
   22384:	b	222bc <myhtml_insertion_mode_before_head@@Base+0x38>
   22388:	mov	r0, r4
   2238c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22390:	str	r0, [r4, #92]	; 0x5c
   22394:	mov	r3, #3
   22398:	str	r3, [r4, #168]	; 0xa8
   2239c:	mov	r0, #0
   223a0:	b	222bc <myhtml_insertion_mode_before_head@@Base+0x38>
   223a4:	mov	r2, #1
   223a8:	mov	r1, #61	; 0x3d
   223ac:	mov	r0, r4
   223b0:	bl	10904 <myhtml_tree_node_insert@plt>
   223b4:	str	r0, [r4, #92]	; 0x5c
   223b8:	mov	r3, #3
   223bc:	str	r3, [r4, #168]	; 0xa8
   223c0:	mov	r0, #1
   223c4:	b	222bc <myhtml_insertion_mode_before_head@@Base+0x38>

000223c8 <myhtml_insertion_mode_in_head@@Base>:
   223c8:	strd	r4, [sp, #-20]!	; 0xffffffec
   223cc:	strd	r6, [sp, #8]
   223d0:	str	lr, [sp, #16]
   223d4:	sub	sp, sp, #12
   223d8:	mov	r4, r0
   223dc:	mov	r5, r1
   223e0:	ldr	r3, [r1, #48]	; 0x30
   223e4:	tst	r3, #1
   223e8:	beq	224c8 <myhtml_insertion_mode_in_head@@Base+0x100>
   223ec:	ldr	r3, [r1]
   223f0:	cmp	r3, #61	; 0x3d
   223f4:	beq	224a4 <myhtml_insertion_mode_in_head@@Base+0xdc>
   223f8:	bls	2247c <myhtml_insertion_mode_in_head@@Base+0xb4>
   223fc:	cmp	r3, #65	; 0x41
   22400:	beq	2248c <myhtml_insertion_mode_in_head@@Base+0xc4>
   22404:	cmp	r3, #128	; 0x80
   22408:	movne	r0, #0
   2240c:	bne	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22410:	mov	r3, #0
   22414:	mov	r2, #1
   22418:	mov	r1, #128	; 0x80
   2241c:	mov	r0, r4
   22420:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   22424:	cmp	r0, #0
   22428:	moveq	r0, #0
   2242c:	beq	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22430:	mov	r2, #0
   22434:	mov	r1, r2
   22438:	mov	r0, r4
   2243c:	bl	fdd0 <myhtml_tree_generate_all_implied_end_tags@plt>
   22440:	mov	r0, r4
   22444:	bl	105bc <myhtml_tree_current_node@plt>
   22448:	mov	r3, #0
   2244c:	mov	r2, #1
   22450:	mov	r1, #128	; 0x80
   22454:	mov	r0, r4
   22458:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   2245c:	mov	r0, r4
   22460:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22464:	mov	r0, r4
   22468:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   2246c:	mov	r0, r4
   22470:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22474:	mov	r0, #0
   22478:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   2247c:	sub	r3, r3, #23
   22480:	cmp	r3, #1
   22484:	movhi	r0, #0
   22488:	bhi	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   2248c:	mov	r0, r4
   22490:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22494:	mov	r3, #5
   22498:	str	r3, [r4, #168]	; 0xa8
   2249c:	mov	r0, #1
   224a0:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   224a4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   224a8:	mov	r3, #5
   224ac:	str	r3, [r4, #168]	; 0xa8
   224b0:	mov	r0, #0
   224b4:	add	sp, sp, #12
   224b8:	ldrd	r4, [sp]
   224bc:	ldrd	r6, [sp, #8]
   224c0:	add	sp, sp, #16
   224c4:	pop	{pc}		; (ldr pc, [sp], #4)
   224c8:	ldr	r3, [r1]
   224cc:	sub	r3, r3, #1
   224d0:	cmp	r3, #133	; 0x85
   224d4:	addls	pc, pc, r3, lsl #2
   224d8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   224dc:	b	226f4 <myhtml_insertion_mode_in_head@@Base+0x32c>
   224e0:	b	22738 <myhtml_insertion_mode_in_head@@Base+0x370>
   224e4:	b	228cc <myhtml_insertion_mode_in_head@@Base+0x504>
   224e8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   224ec:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   224f0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   224f4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   224f8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   224fc:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22500:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22504:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22508:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2250c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22510:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22514:	b	22750 <myhtml_insertion_mode_in_head@@Base+0x388>
   22518:	b	22750 <myhtml_insertion_mode_in_head@@Base+0x388>
   2251c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22520:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22524:	b	22750 <myhtml_insertion_mode_in_head@@Base+0x388>
   22528:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2252c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22530:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22534:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22538:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2253c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22540:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22544:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22548:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2254c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22550:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22554:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22558:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2255c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22560:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22564:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22568:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2256c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22570:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22574:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22578:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2257c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22580:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22584:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22588:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2258c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22590:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22594:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22598:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2259c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225a0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225a4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225a8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225ac:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225b0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225b4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225b8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225bc:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225c0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225c4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225c8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225cc:	b	228cc <myhtml_insertion_mode_in_head@@Base+0x504>
   225d0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225d4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225d8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225dc:	b	22748 <myhtml_insertion_mode_in_head@@Base+0x380>
   225e0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225e4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225e8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225ec:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225f0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225f4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225f8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   225fc:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22600:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22604:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22608:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2260c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22610:	b	22750 <myhtml_insertion_mode_in_head@@Base+0x388>
   22614:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22618:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2261c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22620:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22624:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22628:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2262c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22630:	b	22764 <myhtml_insertion_mode_in_head@@Base+0x39c>
   22634:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22638:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2263c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22640:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22644:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22648:	b	227e0 <myhtml_insertion_mode_in_head@@Base+0x418>
   2264c:	b	2279c <myhtml_insertion_mode_in_head@@Base+0x3d4>
   22650:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22654:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22658:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2265c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22660:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22664:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22668:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2266c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22670:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22674:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22678:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2267c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22680:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22684:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22688:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   2268c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22690:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22694:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   22698:	b	22804 <myhtml_insertion_mode_in_head@@Base+0x43c>
   2269c:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226a0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226a4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226a8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226ac:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226b0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226b4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226b8:	b	227e0 <myhtml_insertion_mode_in_head@@Base+0x418>
   226bc:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226c0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226c4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226c8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226cc:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226d0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226d4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226d8:	b	22878 <myhtml_insertion_mode_in_head@@Base+0x4b0>
   226dc:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226e0:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226e4:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226e8:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226ec:	b	228b8 <myhtml_insertion_mode_in_head@@Base+0x4f0>
   226f0:	b	22778 <myhtml_insertion_mode_in_head@@Base+0x3b0>
   226f4:	ldr	r3, [r1, #48]	; 0x30
   226f8:	tst	r3, #8
   226fc:	beq	2270c <myhtml_insertion_mode_in_head@@Base+0x344>
   22700:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   22704:	mov	r0, #0
   22708:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   2270c:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   22710:	subs	r1, r0, #0
   22714:	beq	22720 <myhtml_insertion_mode_in_head@@Base+0x358>
   22718:	mov	r0, r4
   2271c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   22720:	mov	r0, r4
   22724:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22728:	mov	r3, #5
   2272c:	str	r3, [r4, #168]	; 0xa8
   22730:	mov	r0, #1
   22734:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22738:	mov	r2, #0
   2273c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   22740:	mov	r0, #0
   22744:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22748:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   2274c:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22750:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22754:	mov	r0, r4
   22758:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2275c:	mov	r0, #0
   22760:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22764:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22768:	mov	r0, r4
   2276c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22770:	mov	r0, #0
   22774:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22778:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2277c:	ldr	r3, [r4, #168]	; 0xa8
   22780:	str	r3, [r4, #172]	; 0xac
   22784:	mov	r3, #7
   22788:	str	r3, [r4, #168]	; 0xa8
   2278c:	mov	r3, #2
   22790:	str	r3, [r4, #164]	; 0xa4
   22794:	mov	r0, #0
   22798:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   2279c:	ldr	r3, [r0, #180]	; 0xb4
   227a0:	tst	r3, #1
   227a4:	beq	227cc <myhtml_insertion_mode_in_head@@Base+0x404>
   227a8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   227ac:	ldr	r3, [r4, #168]	; 0xa8
   227b0:	str	r3, [r4, #172]	; 0xac
   227b4:	mov	r3, #7
   227b8:	str	r3, [r4, #168]	; 0xa8
   227bc:	mov	r3, #4
   227c0:	str	r3, [r4, #164]	; 0xa4
   227c4:	mov	r0, #0
   227c8:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   227cc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   227d0:	mov	r3, #4
   227d4:	str	r3, [r4, #168]	; 0xa8
   227d8:	mov	r0, #0
   227dc:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   227e0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   227e4:	ldr	r3, [r4, #168]	; 0xa8
   227e8:	str	r3, [r4, #172]	; 0xac
   227ec:	mov	r3, #7
   227f0:	str	r3, [r4, #168]	; 0xa8
   227f4:	mov	r3, #4
   227f8:	str	r3, [r4, #164]	; 0xa4
   227fc:	mov	r0, #0
   22800:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22804:	add	r2, sp, #4
   22808:	mov	r1, #0
   2280c:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   22810:	mov	r7, r0
   22814:	mov	r0, r4
   22818:	bl	ff80 <myhtml_tree_node_create@plt>
   2281c:	mov	r6, r0
   22820:	mov	r3, #112	; 0x70
   22824:	str	r3, [r0, #4]
   22828:	str	r5, [r0, #32]
   2282c:	mov	r3, #1
   22830:	str	r3, [r0, #8]
   22834:	mov	r3, #3
   22838:	str	r3, [r0]
   2283c:	ldr	r2, [sp, #4]
   22840:	mov	r1, r0
   22844:	mov	r0, r7
   22848:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2284c:	mov	r1, r6
   22850:	mov	r0, r4
   22854:	bl	1091c <myhtml_tree_open_elements_append@plt>
   22858:	ldr	r3, [r4, #168]	; 0xa8
   2285c:	str	r3, [r4, #172]	; 0xac
   22860:	mov	r3, #7
   22864:	str	r3, [r4, #168]	; 0xa8
   22868:	mov	r3, #5
   2286c:	str	r3, [r4, #164]	; 0xa4
   22870:	mov	r0, #0
   22874:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   22878:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   2287c:	ldr	r3, [r4]
   22880:	ldr	r1, [r3, #36]	; 0x24
   22884:	mov	r0, r4
   22888:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   2288c:	ldr	r3, [r4, #180]	; 0xb4
   22890:	ldr	r2, [r4, #180]	; 0xb4
   22894:	and	r3, r3, #2
   22898:	eor	r3, r3, r2
   2289c:	str	r3, [r4, #180]	; 0xb4
   228a0:	mov	r1, #17
   228a4:	str	r1, [r4, #168]	; 0xa8
   228a8:	mov	r0, r4
   228ac:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   228b0:	mov	r0, #0
   228b4:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   228b8:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   228bc:	mov	r3, #5
   228c0:	str	r3, [r4, #168]	; 0xa8
   228c4:	mov	r0, #1
   228c8:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>
   228cc:	mov	r0, #0
   228d0:	b	224b4 <myhtml_insertion_mode_in_head@@Base+0xec>

000228d4 <myhtml_insertion_mode_in_head_noscript@@Base>:
   228d4:	str	r4, [sp, #-8]!
   228d8:	str	lr, [sp, #4]
   228dc:	mov	r4, r0
   228e0:	ldr	r3, [r1, #48]	; 0x30
   228e4:	tst	r3, #1
   228e8:	beq	22938 <myhtml_insertion_mode_in_head_noscript@@Base+0x64>
   228ec:	ldr	r3, [r1]
   228f0:	cmp	r3, #24
   228f4:	beq	22924 <myhtml_insertion_mode_in_head_noscript@@Base+0x50>
   228f8:	cmp	r3, #93	; 0x5d
   228fc:	movne	r0, #0
   22900:	bne	22918 <myhtml_insertion_mode_in_head_noscript@@Base+0x44>
   22904:	mov	r0, r4
   22908:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2290c:	mov	r3, #3
   22910:	str	r3, [r4, #168]	; 0xa8
   22914:	mov	r0, #0
   22918:	ldr	r4, [sp]
   2291c:	add	sp, sp, #4
   22920:	pop	{pc}		; (ldr pc, [sp], #4)
   22924:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22928:	mov	r3, #3
   2292c:	str	r3, [r4, #168]	; 0xa8
   22930:	mov	r0, #1
   22934:	b	22918 <myhtml_insertion_mode_in_head_noscript@@Base+0x44>
   22938:	ldr	r3, [r1]
   2293c:	sub	r3, r3, #1
   22940:	cmp	r3, #119	; 0x77
   22944:	addls	pc, pc, r3, lsl #2
   22948:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   2294c:	b	22b34 <myhtml_insertion_mode_in_head_noscript@@Base+0x260>
   22950:	b	22b5c <myhtml_insertion_mode_in_head_noscript@@Base+0x288>
   22954:	b	22b78 <myhtml_insertion_mode_in_head_noscript@@Base+0x2a4>
   22958:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   2295c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22960:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22964:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22968:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   2296c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22970:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22974:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22978:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   2297c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22980:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22984:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22988:	b	22b5c <myhtml_insertion_mode_in_head_noscript@@Base+0x288>
   2298c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22990:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22994:	b	22b5c <myhtml_insertion_mode_in_head_noscript@@Base+0x288>
   22998:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   2299c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229a0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229a4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229a8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229ac:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229b0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229b4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229b8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229bc:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229c0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229c4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229c8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229cc:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229d0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229d4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229d8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229dc:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229e0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229e4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229e8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229ec:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229f0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229f4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229f8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   229fc:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a00:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a04:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a08:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a0c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a10:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a14:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a18:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a1c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a20:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a24:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a28:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a2c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a30:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a34:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a38:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a3c:	b	22b78 <myhtml_insertion_mode_in_head_noscript@@Base+0x2a4>
   22a40:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a44:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a48:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a4c:	b	22b2c <myhtml_insertion_mode_in_head_noscript@@Base+0x258>
   22a50:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a54:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a58:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a5c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a60:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a64:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a68:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a6c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a70:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a74:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a78:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a7c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a80:	b	22b5c <myhtml_insertion_mode_in_head_noscript@@Base+0x288>
   22a84:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a88:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a8c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a90:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a94:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a98:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22a9c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22aa0:	b	22b5c <myhtml_insertion_mode_in_head_noscript@@Base+0x288>
   22aa4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22aa8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22aac:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ab0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ab4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ab8:	b	22b5c <myhtml_insertion_mode_in_head_noscript@@Base+0x288>
   22abc:	b	22b78 <myhtml_insertion_mode_in_head_noscript@@Base+0x2a4>
   22ac0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ac4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ac8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22acc:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ad0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ad4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ad8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22adc:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ae0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ae4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22ae8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22aec:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22af0:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22af4:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22af8:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22afc:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b00:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b04:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b08:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b0c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b10:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b14:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b18:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b1c:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b20:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b24:	b	22b64 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   22b28:	b	22b5c <myhtml_insertion_mode_in_head_noscript@@Base+0x288>
   22b2c:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   22b30:	b	22918 <myhtml_insertion_mode_in_head_noscript@@Base+0x44>
   22b34:	ldr	r3, [r1, #48]	; 0x30
   22b38:	tst	r3, #8
   22b3c:	beq	22b48 <myhtml_insertion_mode_in_head_noscript@@Base+0x274>
   22b40:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   22b44:	b	22918 <myhtml_insertion_mode_in_head_noscript@@Base+0x44>
   22b48:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22b4c:	mov	r3, #3
   22b50:	str	r3, [r4, #168]	; 0xa8
   22b54:	mov	r0, #1
   22b58:	b	22918 <myhtml_insertion_mode_in_head_noscript@@Base+0x44>
   22b5c:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   22b60:	b	22918 <myhtml_insertion_mode_in_head_noscript@@Base+0x44>
   22b64:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   22b68:	mov	r3, #3
   22b6c:	str	r3, [r4, #168]	; 0xa8
   22b70:	mov	r0, #1
   22b74:	b	22918 <myhtml_insertion_mode_in_head_noscript@@Base+0x44>
   22b78:	mov	r0, #0
   22b7c:	b	22918 <myhtml_insertion_mode_in_head_noscript@@Base+0x44>

00022b80 <myhtml_insertion_mode_after_head@@Base>:
   22b80:	strd	r4, [sp, #-16]!
   22b84:	str	r6, [sp, #8]
   22b88:	str	lr, [sp, #12]
   22b8c:	mov	r5, r0
   22b90:	mov	r4, r1
   22b94:	ldr	r3, [r1, #48]	; 0x30
   22b98:	tst	r3, #1
   22b9c:	beq	22c08 <myhtml_insertion_mode_after_head@@Base+0x88>
   22ba0:	ldr	r3, [r1]
   22ba4:	cmp	r3, #65	; 0x41
   22ba8:	beq	22bd8 <myhtml_insertion_mode_after_head@@Base+0x58>
   22bac:	bls	22bc8 <myhtml_insertion_mode_after_head@@Base+0x48>
   22bb0:	cmp	r3, #128	; 0x80
   22bb4:	movne	r0, #0
   22bb8:	bne	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22bbc:	mov	r0, r5
   22bc0:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   22bc4:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22bc8:	sub	r3, r3, #23
   22bcc:	cmp	r3, #1
   22bd0:	movhi	r0, #0
   22bd4:	bhi	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22bd8:	mov	r2, #1
   22bdc:	mov	r1, #23
   22be0:	mov	r0, r5
   22be4:	bl	10904 <myhtml_tree_node_insert@plt>
   22be8:	str	r0, [r5, #100]	; 0x64
   22bec:	mov	r3, #6
   22bf0:	str	r3, [r5, #168]	; 0xa8
   22bf4:	mov	r0, #1
   22bf8:	ldrd	r4, [sp]
   22bfc:	ldr	r6, [sp, #8]
   22c00:	add	sp, sp, #12
   22c04:	pop	{pc}		; (ldr pc, [sp], #4)
   22c08:	ldr	r3, [r1]
   22c0c:	sub	r3, r3, #1
   22c10:	cmp	r3, #133	; 0x85
   22c14:	addls	pc, pc, r3, lsl #2
   22c18:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c1c:	b	22e34 <myhtml_insertion_mode_after_head@@Base+0x2b4>
   22c20:	b	22e84 <myhtml_insertion_mode_after_head@@Base+0x304>
   22c24:	b	22f24 <myhtml_insertion_mode_after_head@@Base+0x3a4>
   22c28:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c2c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c30:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c34:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c38:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c3c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c40:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c44:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c48:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c4c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c50:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c54:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22c58:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22c5c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c60:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c64:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22c68:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c6c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c70:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c74:	b	22e9c <myhtml_insertion_mode_after_head@@Base+0x31c>
   22c78:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c7c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c80:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c84:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c88:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c8c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c90:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c94:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c98:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22c9c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22ca0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22ca4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22ca8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cac:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cb0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cb4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cb8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cbc:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cc0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cc4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cc8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22ccc:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cd0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cd4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cd8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cdc:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22ce0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22ce4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22ce8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cec:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cf0:	b	22ec8 <myhtml_insertion_mode_after_head@@Base+0x348>
   22cf4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cf8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22cfc:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d00:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d04:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d08:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d0c:	b	22f24 <myhtml_insertion_mode_after_head@@Base+0x3a4>
   22d10:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d14:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d18:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d1c:	b	22e94 <myhtml_insertion_mode_after_head@@Base+0x314>
   22d20:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d24:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d28:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d2c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d30:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d34:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d38:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d3c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d40:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d44:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d48:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d4c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d50:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22d54:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d58:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d5c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d60:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d64:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d68:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d6c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d70:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22d74:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d78:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d7c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d80:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d84:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d88:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22d8c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d90:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d94:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d98:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22d9c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22da0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22da4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22da8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dac:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22db0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22db4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22db8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dbc:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dc0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dc4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dc8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dcc:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dd0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dd4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dd8:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22ddc:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22de0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22de4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22de8:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22dec:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22df0:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22df4:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22df8:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22dfc:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e00:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e04:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e08:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e0c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e10:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e14:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e18:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22e1c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e20:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e24:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e28:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e2c:	b	22f04 <myhtml_insertion_mode_after_head@@Base+0x384>
   22e30:	b	22edc <myhtml_insertion_mode_after_head@@Base+0x35c>
   22e34:	ldr	r3, [r1, #48]	; 0x30
   22e38:	tst	r3, #8
   22e3c:	beq	22e4c <myhtml_insertion_mode_after_head@@Base+0x2cc>
   22e40:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   22e44:	mov	r0, #0
   22e48:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22e4c:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   22e50:	subs	r1, r0, #0
   22e54:	beq	22e60 <myhtml_insertion_mode_after_head@@Base+0x2e0>
   22e58:	mov	r0, r5
   22e5c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   22e60:	mov	r2, #1
   22e64:	mov	r1, #23
   22e68:	mov	r0, r5
   22e6c:	bl	10904 <myhtml_tree_node_insert@plt>
   22e70:	str	r0, [r5, #100]	; 0x64
   22e74:	mov	r3, #6
   22e78:	str	r3, [r5, #168]	; 0xa8
   22e7c:	mov	r0, #1
   22e80:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22e84:	mov	r2, #0
   22e88:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   22e8c:	mov	r0, #0
   22e90:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22e94:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   22e98:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22e9c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22ea0:	str	r0, [r5, #100]	; 0x64
   22ea4:	ldr	r3, [r5, #180]	; 0xb4
   22ea8:	ldr	r2, [r5, #180]	; 0xb4
   22eac:	and	r3, r3, #2
   22eb0:	eor	r3, r3, r2
   22eb4:	str	r3, [r5, #180]	; 0xb4
   22eb8:	mov	r3, #6
   22ebc:	str	r3, [r5, #168]	; 0xa8
   22ec0:	mov	r0, #0
   22ec4:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22ec8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   22ecc:	mov	r3, #19
   22ed0:	str	r3, [r5, #168]	; 0xa8
   22ed4:	mov	r0, #0
   22ed8:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22edc:	ldr	r1, [r0, #92]	; 0x5c
   22ee0:	bl	1091c <myhtml_tree_open_elements_append@plt>
   22ee4:	mov	r1, r4
   22ee8:	mov	r0, r5
   22eec:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   22ef0:	ldr	r1, [r5, #92]	; 0x5c
   22ef4:	mov	r0, r5
   22ef8:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   22efc:	mov	r0, #0
   22f00:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22f04:	mov	r2, #1
   22f08:	mov	r1, #23
   22f0c:	bl	10904 <myhtml_tree_node_insert@plt>
   22f10:	str	r0, [r5, #100]	; 0x64
   22f14:	mov	r3, #6
   22f18:	str	r3, [r5, #168]	; 0xa8
   22f1c:	mov	r0, #1
   22f20:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>
   22f24:	mov	r0, #0
   22f28:	b	22bf8 <myhtml_insertion_mode_after_head@@Base+0x78>

00022f2c <myhtml_insertion_mode_in_table@@Base>:
   22f2c:	strd	r4, [sp, #-16]!
   22f30:	str	r6, [sp, #8]
   22f34:	str	lr, [sp, #12]
   22f38:	sub	sp, sp, #8
   22f3c:	mov	r6, r0
   22f40:	mov	r4, r1
   22f44:	ldr	r3, [r1, #48]	; 0x30
   22f48:	tst	r3, #1
   22f4c:	beq	23184 <myhtml_insertion_mode_in_table@@Base+0x258>
   22f50:	ldr	r3, [r1]
   22f54:	sub	r3, r3, #23
   22f58:	cmp	r3, #112	; 0x70
   22f5c:	addls	pc, pc, r3, lsl #2
   22f60:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f64:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   22f68:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f6c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f70:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f74:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   22f78:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f7c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f80:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f84:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   22f88:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   22f8c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f90:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f94:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f98:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22f9c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fa0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fa4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fa8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fac:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fb0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fb4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fb8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fbc:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fc0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fc4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fc8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fcc:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fd0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fd4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fd8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fdc:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fe0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fe4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fe8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22fec:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22ff0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22ff4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22ff8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   22ffc:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23000:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23004:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23008:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2300c:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   23010:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23014:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23018:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2301c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23020:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23024:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23028:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2302c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23030:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23034:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23038:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2303c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23040:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23044:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23048:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2304c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23050:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23054:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23058:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2305c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23060:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23064:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23068:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2306c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23070:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23074:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23078:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2307c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23080:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23084:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23088:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2308c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23090:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23094:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23098:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   2309c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230a0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230a4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230a8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230ac:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230b0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230b4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230b8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230bc:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230c0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230c4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230c8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230cc:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230d0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230d4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230d8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230dc:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230e0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230e4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230e8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230ec:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230f0:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230f4:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230f8:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   230fc:	b	23128 <myhtml_insertion_mode_in_table@@Base+0x1fc>
   23100:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   23104:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   23108:	b	23160 <myhtml_insertion_mode_in_table@@Base+0x234>
   2310c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23110:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   23114:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   23118:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   2311c:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23120:	b	2316c <myhtml_insertion_mode_in_table@@Base+0x240>
   23124:	b	234c8 <myhtml_insertion_mode_in_table@@Base+0x59c>
   23128:	mov	r3, #64	; 0x40
   2312c:	mov	r2, #1
   23130:	mov	r1, #125	; 0x7d
   23134:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23138:	subs	r1, r0, #0
   2313c:	moveq	r5, #0
   23140:	beq	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   23144:	mov	r2, #0
   23148:	mov	r0, r6
   2314c:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   23150:	mov	r0, r6
   23154:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23158:	mov	r5, #0
   2315c:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   23160:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   23164:	mov	r5, r0
   23168:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   2316c:	mov	r3, #1
   23170:	strb	r3, [r0, #188]	; 0xbc
   23174:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   23178:	mov	r5, #0
   2317c:	strb	r5, [r6, #188]	; 0xbc
   23180:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   23184:	ldr	r3, [r1]
   23188:	cmp	r3, #120	; 0x78
   2318c:	beq	232fc <myhtml_insertion_mode_in_table@@Base+0x3d0>
   23190:	bhi	23310 <myhtml_insertion_mode_in_table@@Base+0x3e4>
   23194:	cmp	r3, #31
   23198:	beq	233fc <myhtml_insertion_mode_in_table@@Base+0x4d0>
   2319c:	bhi	23254 <myhtml_insertion_mode_in_table@@Base+0x328>
   231a0:	cmp	r3, #2
   231a4:	beq	233ec <myhtml_insertion_mode_in_table@@Base+0x4c0>
   231a8:	bls	231f0 <myhtml_insertion_mode_in_table@@Base+0x2c4>
   231ac:	cmp	r3, #3
   231b0:	moveq	r5, #0
   231b4:	beq	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   231b8:	cmp	r3, #27
   231bc:	bne	233b0 <myhtml_insertion_mode_in_table@@Base+0x484>
   231c0:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   231c4:	mov	r1, r4
   231c8:	mov	r0, r6
   231cc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   231d0:	ldr	r3, [r6]
   231d4:	ldr	r1, [r3, #36]	; 0x24
   231d8:	mov	r0, r6
   231dc:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   231e0:	mov	r3, #10
   231e4:	str	r3, [r6, #168]	; 0xa8
   231e8:	mov	r5, #0
   231ec:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   231f0:	cmp	r3, #1
   231f4:	bne	233b0 <myhtml_insertion_mode_in_table@@Base+0x484>
   231f8:	bl	105bc <myhtml_tree_current_node@plt>
   231fc:	ldr	r3, [r0, #4]
   23200:	sub	r5, r3, #125	; 0x7d
   23204:	cmp	r3, #135	; 0x87
   23208:	cmpne	r5, #1
   2320c:	movls	r5, #1
   23210:	movhi	r5, #0
   23214:	sub	r3, r3, #130	; 0x82
   23218:	bics	r3, r3, #2
   2321c:	moveq	r5, #1
   23220:	cmp	r5, #0
   23224:	beq	23234 <myhtml_insertion_mode_in_table@@Base+0x308>
   23228:	ldr	r3, [r0, #8]
   2322c:	cmp	r3, #1
   23230:	beq	233d0 <myhtml_insertion_mode_in_table@@Base+0x4a4>
   23234:	mov	r3, #1
   23238:	strb	r3, [r6, #188]	; 0xbc
   2323c:	mov	r1, r4
   23240:	mov	r0, r6
   23244:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   23248:	mov	r5, #0
   2324c:	strb	r5, [r6, #188]	; 0xbc
   23250:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   23254:	cmp	r3, #52	; 0x34
   23258:	beq	2348c <myhtml_insertion_mode_in_table@@Base+0x560>
   2325c:	bls	232cc <myhtml_insertion_mode_in_table@@Base+0x3a0>
   23260:	cmp	r3, #70	; 0x46
   23264:	bne	232f4 <myhtml_insertion_mode_in_table@@Base+0x3c8>
   23268:	ldr	r0, [r0, #8]
   2326c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   23270:	mov	r3, #6
   23274:	str	r3, [sp, #4]
   23278:	ldr	r3, [pc, #612]	; 234e4 <myhtml_insertion_mode_in_table@@Base+0x5b8>
   2327c:	add	r3, pc, r3
   23280:	str	r3, [sp]
   23284:	mov	r3, #4
   23288:	ldr	r2, [pc, #600]	; 234e8 <myhtml_insertion_mode_in_table@@Base+0x5bc>
   2328c:	add	r2, pc, r2
   23290:	mov	r1, r4
   23294:	ldr	r0, [r6, #8]
   23298:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   2329c:	cmp	r0, #0
   232a0:	beq	2346c <myhtml_insertion_mode_in_table@@Base+0x540>
   232a4:	mov	r1, r4
   232a8:	mov	r0, r6
   232ac:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   232b0:	mov	r0, r6
   232b4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   232b8:	ldr	r3, [r4, #48]	; 0x30
   232bc:	orr	r3, r3, #2
   232c0:	str	r3, [r4, #48]	; 0x30
   232c4:	mov	r5, #0
   232c8:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   232cc:	cmp	r3, #32
   232d0:	bne	233b0 <myhtml_insertion_mode_in_table@@Base+0x484>
   232d4:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   232d8:	mov	r1, r4
   232dc:	mov	r0, r6
   232e0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   232e4:	mov	r3, #11
   232e8:	str	r3, [r6, #168]	; 0xa8
   232ec:	mov	r5, #0
   232f0:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   232f4:	cmp	r3, #112	; 0x70
   232f8:	bne	233b0 <myhtml_insertion_mode_in_table@@Base+0x484>
   232fc:	mov	r1, r4
   23300:	mov	r0, r6
   23304:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   23308:	mov	r5, r0
   2330c:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   23310:	cmp	r3, #130	; 0x82
   23314:	beq	23420 <myhtml_insertion_mode_in_table@@Base+0x4f4>
   23318:	bls	2334c <myhtml_insertion_mode_in_table@@Base+0x420>
   2331c:	cmp	r3, #132	; 0x84
   23320:	beq	23420 <myhtml_insertion_mode_in_table@@Base+0x4f4>
   23324:	bcc	23444 <myhtml_insertion_mode_in_table@@Base+0x518>
   23328:	cmp	r3, #135	; 0x87
   2332c:	beq	23444 <myhtml_insertion_mode_in_table@@Base+0x518>
   23330:	cmp	r3, #251	; 0xfb
   23334:	bne	233b0 <myhtml_insertion_mode_in_table@@Base+0x484>
   23338:	mov	r1, r4
   2333c:	mov	r0, r6
   23340:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   23344:	mov	r5, r0
   23348:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   2334c:	cmp	r3, #126	; 0x7e
   23350:	beq	23420 <myhtml_insertion_mode_in_table@@Base+0x4f4>
   23354:	bhi	233a0 <myhtml_insertion_mode_in_table@@Base+0x474>
   23358:	cmp	r3, #125	; 0x7d
   2335c:	bne	233b0 <myhtml_insertion_mode_in_table@@Base+0x484>
   23360:	mov	r3, #64	; 0x40
   23364:	mov	r2, #1
   23368:	mov	r1, #125	; 0x7d
   2336c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23370:	cmp	r0, #0
   23374:	moveq	r5, #0
   23378:	beq	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   2337c:	mov	r3, #0
   23380:	mov	r2, #1
   23384:	mov	r1, #125	; 0x7d
   23388:	mov	r0, r6
   2338c:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   23390:	mov	r0, r6
   23394:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23398:	mov	r5, #1
   2339c:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   233a0:	cmp	r3, #127	; 0x7f
   233a4:	beq	23444 <myhtml_insertion_mode_in_table@@Base+0x518>
   233a8:	cmp	r3, #128	; 0x80
   233ac:	beq	232fc <myhtml_insertion_mode_in_table@@Base+0x3d0>
   233b0:	mov	r3, #1
   233b4:	strb	r3, [r6, #188]	; 0xbc
   233b8:	mov	r1, r4
   233bc:	mov	r0, r6
   233c0:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   233c4:	mov	r5, #0
   233c8:	strb	r5, [r6, #188]	; 0xbc
   233cc:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   233d0:	ldr	r0, [r6, #136]	; 0x88
   233d4:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   233d8:	ldr	r3, [r6, #168]	; 0xa8
   233dc:	str	r3, [r6, #172]	; 0xac
   233e0:	mov	r3, #9
   233e4:	str	r3, [r6, #168]	; 0xa8
   233e8:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   233ec:	mov	r2, #0
   233f0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   233f4:	mov	r5, #0
   233f8:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   233fc:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   23400:	mov	r2, #1
   23404:	mov	r1, #32
   23408:	mov	r0, r6
   2340c:	bl	10904 <myhtml_tree_node_insert@plt>
   23410:	mov	r3, #11
   23414:	str	r3, [r6, #168]	; 0xa8
   23418:	mov	r5, #1
   2341c:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   23420:	mov	r0, r6
   23424:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   23428:	mov	r1, r4
   2342c:	mov	r0, r6
   23430:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   23434:	mov	r3, #12
   23438:	str	r3, [r6, #168]	; 0xa8
   2343c:	mov	r5, #0
   23440:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   23444:	mov	r0, r6
   23448:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   2344c:	mov	r2, #1
   23450:	mov	r1, #126	; 0x7e
   23454:	mov	r0, r6
   23458:	bl	10904 <myhtml_tree_node_insert@plt>
   2345c:	mov	r3, #12
   23460:	str	r3, [r6, #168]	; 0xa8
   23464:	mov	r5, #1
   23468:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   2346c:	mov	r3, #1
   23470:	strb	r3, [r6, #188]	; 0xbc
   23474:	mov	r1, r4
   23478:	mov	r0, r6
   2347c:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   23480:	mov	r5, #0
   23484:	strb	r5, [r6, #188]	; 0xbc
   23488:	b	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   2348c:	mov	r3, #0
   23490:	mov	r2, #1
   23494:	mov	r1, #128	; 0x80
   23498:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   2349c:	ldr	r3, [r6, #104]	; 0x68
   234a0:	orrs	r3, r3, r0
   234a4:	movne	r5, #0
   234a8:	bne	234cc <myhtml_insertion_mode_in_table@@Base+0x5a0>
   234ac:	mov	r1, r4
   234b0:	mov	r0, r6
   234b4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   234b8:	str	r0, [r6, #104]	; 0x68
   234bc:	mov	r0, r6
   234c0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   234c4:	b	23338 <myhtml_insertion_mode_in_table@@Base+0x40c>
   234c8:	mov	r5, #0
   234cc:	mov	r0, r5
   234d0:	add	sp, sp, #8
   234d4:	ldrd	r4, [sp]
   234d8:	ldr	r6, [sp, #8]
   234dc:	add	sp, sp, #12
   234e0:	pop	{pc}		; (ldr pc, [sp], #4)
   234e4:	andeq	sp, sp, r0, lsl r2
   234e8:	andeq	r9, r1, r0, asr #26

000234ec <myhtml_insertion_mode_in_table_body@@Base>:
   234ec:	strd	r4, [sp, #-16]!
   234f0:	str	r6, [sp, #8]
   234f4:	str	lr, [sp, #12]
   234f8:	mov	r4, r0
   234fc:	mov	r5, r1
   23500:	ldr	r3, [r1, #48]	; 0x30
   23504:	tst	r3, #1
   23508:	beq	23798 <myhtml_insertion_mode_in_table_body@@Base+0x2ac>
   2350c:	ldr	r1, [r1]
   23510:	sub	r3, r1, #23
   23514:	cmp	r3, #112	; 0x70
   23518:	addls	pc, pc, r3, lsl #2
   2351c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23520:	b	238bc <myhtml_insertion_mode_in_table_body@@Base+0x3d0>
   23524:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23528:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2352c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23530:	b	238bc <myhtml_insertion_mode_in_table_body@@Base+0x3d0>
   23534:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23538:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2353c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23540:	b	238bc <myhtml_insertion_mode_in_table_body@@Base+0x3d0>
   23544:	b	238bc <myhtml_insertion_mode_in_table_body@@Base+0x3d0>
   23548:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2354c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23550:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23554:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23558:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2355c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23560:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23564:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23568:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2356c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23570:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23574:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23578:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2357c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23580:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23584:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23588:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2358c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23590:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23594:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23598:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2359c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235a0:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235a4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235a8:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235ac:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235b0:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235b4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235b8:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235bc:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235c0:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235c4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235c8:	b	238bc <myhtml_insertion_mode_in_table_body@@Base+0x3d0>
   235cc:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235d0:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235d4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235d8:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235dc:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235e0:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235e4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235e8:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235ec:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235f0:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235f4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235f8:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   235fc:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23600:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23604:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23608:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2360c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23610:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23614:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23618:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2361c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23620:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23624:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23628:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2362c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23630:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23634:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23638:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2363c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23640:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23644:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23648:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2364c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23650:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23654:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23658:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2365c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23660:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23664:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23668:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2366c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23670:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23674:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23678:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2367c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23680:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23684:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23688:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2368c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23690:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23694:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   23698:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   2369c:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236a0:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236a4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236a8:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236ac:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236b0:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236b4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236b8:	b	2371c <myhtml_insertion_mode_in_table_body@@Base+0x230>
   236bc:	b	236e4 <myhtml_insertion_mode_in_table_body@@Base+0x1f8>
   236c0:	b	238bc <myhtml_insertion_mode_in_table_body@@Base+0x3d0>
   236c4:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236c8:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236cc:	b	236e4 <myhtml_insertion_mode_in_table_body@@Base+0x1f8>
   236d0:	b	238bc <myhtml_insertion_mode_in_table_body@@Base+0x3d0>
   236d4:	b	236e4 <myhtml_insertion_mode_in_table_body@@Base+0x1f8>
   236d8:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236dc:	b	2378c <myhtml_insertion_mode_in_table_body@@Base+0x2a0>
   236e0:	b	238bc <myhtml_insertion_mode_in_table_body@@Base+0x3d0>
   236e4:	mov	r3, #64	; 0x40
   236e8:	mov	r2, #1
   236ec:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   236f0:	cmp	r0, #0
   236f4:	moveq	r0, #0
   236f8:	beq	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   236fc:	mov	r0, r4
   23700:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   23704:	mov	r0, r4
   23708:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2370c:	mov	r3, #8
   23710:	str	r3, [r4, #168]	; 0xa8
   23714:	mov	r0, #0
   23718:	b	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   2371c:	mov	r3, #64	; 0x40
   23720:	mov	r2, #1
   23724:	mov	r1, #126	; 0x7e
   23728:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2372c:	mov	r5, r0
   23730:	mov	r3, #64	; 0x40
   23734:	mov	r2, #1
   23738:	mov	r1, #130	; 0x82
   2373c:	mov	r0, r4
   23740:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23744:	mov	r6, r0
   23748:	mov	r3, #64	; 0x40
   2374c:	mov	r2, #1
   23750:	mov	r1, #132	; 0x84
   23754:	mov	r0, r4
   23758:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   2375c:	orr	r5, r5, r6
   23760:	orrs	r3, r0, r5
   23764:	moveq	r0, #0
   23768:	beq	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   2376c:	mov	r0, r4
   23770:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   23774:	mov	r0, r4
   23778:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2377c:	mov	r3, #8
   23780:	str	r3, [r4, #168]	; 0xa8
   23784:	mov	r0, #1
   23788:	b	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   2378c:	mov	r1, r5
   23790:	bl	10118 <myhtml_insertion_mode_in_table@plt>
   23794:	b	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   23798:	ldr	r3, [r1]
   2379c:	cmp	r3, #127	; 0x7f
   237a0:	beq	23894 <myhtml_insertion_mode_in_table_body@@Base+0x3a8>
   237a4:	bls	237e4 <myhtml_insertion_mode_in_table_body@@Base+0x2f8>
   237a8:	cmp	r3, #131	; 0x83
   237ac:	beq	23894 <myhtml_insertion_mode_in_table_body@@Base+0x3a8>
   237b0:	bls	23888 <myhtml_insertion_mode_in_table_body@@Base+0x39c>
   237b4:	cmp	r3, #132	; 0x84
   237b8:	beq	23814 <myhtml_insertion_mode_in_table_body@@Base+0x328>
   237bc:	cmp	r3, #135	; 0x87
   237c0:	bne	237fc <myhtml_insertion_mode_in_table_body@@Base+0x310>
   237c4:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   237c8:	mov	r1, r5
   237cc:	mov	r0, r4
   237d0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   237d4:	mov	r3, #13
   237d8:	str	r3, [r4, #168]	; 0xa8
   237dc:	mov	r0, #0
   237e0:	b	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   237e4:	cmp	r3, #32
   237e8:	bhi	2380c <myhtml_insertion_mode_in_table_body@@Base+0x320>
   237ec:	cmp	r3, #31
   237f0:	bcs	23814 <myhtml_insertion_mode_in_table_body@@Base+0x328>
   237f4:	cmp	r3, #27
   237f8:	beq	23814 <myhtml_insertion_mode_in_table_body@@Base+0x328>
   237fc:	mov	r1, r5
   23800:	mov	r0, r4
   23804:	bl	10118 <myhtml_insertion_mode_in_table@plt>
   23808:	b	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   2380c:	cmp	r3, #126	; 0x7e
   23810:	bne	237fc <myhtml_insertion_mode_in_table_body@@Base+0x310>
   23814:	mov	r3, #64	; 0x40
   23818:	mov	r2, #1
   2381c:	mov	r1, #126	; 0x7e
   23820:	mov	r0, r4
   23824:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23828:	mov	r5, r0
   2382c:	mov	r3, #64	; 0x40
   23830:	mov	r2, #1
   23834:	mov	r1, #130	; 0x82
   23838:	mov	r0, r4
   2383c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23840:	mov	r6, r0
   23844:	mov	r3, #64	; 0x40
   23848:	mov	r2, #1
   2384c:	mov	r1, #132	; 0x84
   23850:	mov	r0, r4
   23854:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23858:	orr	r5, r5, r6
   2385c:	orrs	r3, r0, r5
   23860:	moveq	r0, #0
   23864:	beq	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   23868:	mov	r0, r4
   2386c:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   23870:	mov	r0, r4
   23874:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   23878:	mov	r3, #8
   2387c:	str	r3, [r4, #168]	; 0xa8
   23880:	mov	r0, #1
   23884:	b	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   23888:	cmp	r3, #130	; 0x82
   2388c:	bne	237fc <myhtml_insertion_mode_in_table_body@@Base+0x310>
   23890:	b	23814 <myhtml_insertion_mode_in_table_body@@Base+0x328>
   23894:	mov	r0, r4
   23898:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   2389c:	mov	r2, #1
   238a0:	mov	r1, #135	; 0x87
   238a4:	mov	r0, r4
   238a8:	bl	10904 <myhtml_tree_node_insert@plt>
   238ac:	mov	r3, #13
   238b0:	str	r3, [r4, #168]	; 0xa8
   238b4:	mov	r0, #1
   238b8:	b	238c0 <myhtml_insertion_mode_in_table_body@@Base+0x3d4>
   238bc:	mov	r0, #0
   238c0:	ldrd	r4, [sp]
   238c4:	ldr	r6, [sp, #8]
   238c8:	add	sp, sp, #12
   238cc:	pop	{pc}		; (ldr pc, [sp], #4)

000238d0 <myhtml_insertion_mode_in_row@@Base>:
   238d0:	strd	r4, [sp, #-16]!
   238d4:	str	r6, [sp, #8]
   238d8:	str	lr, [sp, #12]
   238dc:	mov	r5, r0
   238e0:	mov	r4, r1
   238e4:	ldr	r3, [r1, #48]	; 0x30
   238e8:	tst	r3, #1
   238ec:	beq	23ba4 <myhtml_insertion_mode_in_row@@Base+0x2d4>
   238f0:	ldr	r1, [r1]
   238f4:	sub	r3, r1, #23
   238f8:	cmp	r3, #112	; 0x70
   238fc:	addls	pc, pc, r3, lsl #2
   23900:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23904:	b	23c90 <myhtml_insertion_mode_in_row@@Base+0x3c0>
   23908:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2390c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23910:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23914:	b	23c90 <myhtml_insertion_mode_in_row@@Base+0x3c0>
   23918:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2391c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23920:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23924:	b	23c90 <myhtml_insertion_mode_in_row@@Base+0x3c0>
   23928:	b	23c90 <myhtml_insertion_mode_in_row@@Base+0x3c0>
   2392c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23930:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23934:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23938:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2393c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23940:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23944:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23948:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2394c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23950:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23954:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23958:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2395c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23960:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23964:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23968:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2396c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23970:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23974:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23978:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2397c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23980:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23984:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23988:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2398c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23990:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23994:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23998:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   2399c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239a0:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239a4:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239a8:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239ac:	b	23c90 <myhtml_insertion_mode_in_row@@Base+0x3c0>
   239b0:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239b4:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239b8:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239bc:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239c0:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239c4:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239c8:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239cc:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239d0:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239d4:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239d8:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239dc:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239e0:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239e4:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239e8:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239ec:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239f0:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239f4:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239f8:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   239fc:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a00:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a04:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a08:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a0c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a10:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a14:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a18:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a1c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a20:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a24:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a28:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a2c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a30:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a34:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a38:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a3c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a40:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a44:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a48:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a4c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a50:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a54:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a58:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a5c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a60:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a64:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a68:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a6c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a70:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a74:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a78:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a7c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a80:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a84:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a88:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a8c:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a90:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a94:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a98:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23a9c:	b	23b04 <myhtml_insertion_mode_in_row@@Base+0x234>
   23aa0:	b	23b40 <myhtml_insertion_mode_in_row@@Base+0x270>
   23aa4:	b	23c90 <myhtml_insertion_mode_in_row@@Base+0x3c0>
   23aa8:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23aac:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23ab0:	b	23b40 <myhtml_insertion_mode_in_row@@Base+0x270>
   23ab4:	b	23c90 <myhtml_insertion_mode_in_row@@Base+0x3c0>
   23ab8:	b	23b40 <myhtml_insertion_mode_in_row@@Base+0x270>
   23abc:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23ac0:	b	23b98 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   23ac4:	b	23ac8 <myhtml_insertion_mode_in_row@@Base+0x1f8>
   23ac8:	mov	r3, #64	; 0x40
   23acc:	mov	r2, #1
   23ad0:	mov	r1, #135	; 0x87
   23ad4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23ad8:	cmp	r0, #0
   23adc:	moveq	r0, #0
   23ae0:	beq	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23ae4:	mov	r0, r5
   23ae8:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   23aec:	mov	r0, r5
   23af0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   23af4:	mov	r3, #12
   23af8:	str	r3, [r5, #168]	; 0xa8
   23afc:	mov	r0, #0
   23b00:	b	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23b04:	mov	r3, #64	; 0x40
   23b08:	mov	r2, #1
   23b0c:	mov	r1, #135	; 0x87
   23b10:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23b14:	cmp	r0, #0
   23b18:	moveq	r0, #0
   23b1c:	beq	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23b20:	mov	r0, r5
   23b24:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   23b28:	mov	r0, r5
   23b2c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   23b30:	mov	r3, #12
   23b34:	str	r3, [r5, #168]	; 0xa8
   23b38:	mov	r0, #1
   23b3c:	b	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23b40:	mov	r3, #64	; 0x40
   23b44:	mov	r2, #1
   23b48:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23b4c:	cmp	r0, #0
   23b50:	moveq	r0, #0
   23b54:	beq	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23b58:	mov	r3, #64	; 0x40
   23b5c:	mov	r2, #1
   23b60:	mov	r1, #135	; 0x87
   23b64:	mov	r0, r5
   23b68:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23b6c:	cmp	r0, #0
   23b70:	moveq	r0, #0
   23b74:	beq	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23b78:	mov	r0, r5
   23b7c:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   23b80:	mov	r0, r5
   23b84:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   23b88:	mov	r3, #12
   23b8c:	str	r3, [r5, #168]	; 0xa8
   23b90:	mov	r0, #1
   23b94:	b	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23b98:	mov	r1, r4
   23b9c:	bl	10118 <myhtml_insertion_mode_in_table@plt>
   23ba0:	b	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23ba4:	ldr	r3, [r1]
   23ba8:	cmp	r3, #127	; 0x7f
   23bac:	beq	23c50 <myhtml_insertion_mode_in_row@@Base+0x380>
   23bb0:	bls	23bd4 <myhtml_insertion_mode_in_row@@Base+0x304>
   23bb4:	cmp	r3, #131	; 0x83
   23bb8:	beq	23c50 <myhtml_insertion_mode_in_row@@Base+0x380>
   23bbc:	bls	23c44 <myhtml_insertion_mode_in_row@@Base+0x374>
   23bc0:	cmp	r3, #132	; 0x84
   23bc4:	beq	23c04 <myhtml_insertion_mode_in_row@@Base+0x334>
   23bc8:	cmp	r3, #135	; 0x87
   23bcc:	bne	23bec <myhtml_insertion_mode_in_row@@Base+0x31c>
   23bd0:	b	23c04 <myhtml_insertion_mode_in_row@@Base+0x334>
   23bd4:	cmp	r3, #32
   23bd8:	bhi	23bfc <myhtml_insertion_mode_in_row@@Base+0x32c>
   23bdc:	cmp	r3, #31
   23be0:	bcs	23c04 <myhtml_insertion_mode_in_row@@Base+0x334>
   23be4:	cmp	r3, #27
   23be8:	beq	23c04 <myhtml_insertion_mode_in_row@@Base+0x334>
   23bec:	mov	r1, r4
   23bf0:	mov	r0, r5
   23bf4:	bl	10118 <myhtml_insertion_mode_in_table@plt>
   23bf8:	b	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23bfc:	cmp	r3, #126	; 0x7e
   23c00:	bne	23bec <myhtml_insertion_mode_in_row@@Base+0x31c>
   23c04:	mov	r3, #64	; 0x40
   23c08:	mov	r2, #1
   23c0c:	mov	r1, #135	; 0x87
   23c10:	mov	r0, r5
   23c14:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23c18:	cmp	r0, #0
   23c1c:	moveq	r0, #0
   23c20:	beq	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23c24:	mov	r0, r5
   23c28:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   23c2c:	mov	r0, r5
   23c30:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   23c34:	mov	r3, #12
   23c38:	str	r3, [r5, #168]	; 0xa8
   23c3c:	mov	r0, #1
   23c40:	b	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   23c44:	cmp	r3, #130	; 0x82
   23c48:	bne	23bec <myhtml_insertion_mode_in_row@@Base+0x31c>
   23c4c:	b	23c04 <myhtml_insertion_mode_in_row@@Base+0x334>
   23c50:	mov	r0, r5
   23c54:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   23c58:	mov	r1, r4
   23c5c:	mov	r0, r5
   23c60:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   23c64:	ldr	r3, [r5]
   23c68:	ldr	r1, [r3, #36]	; 0x24
   23c6c:	mov	r0, r5
   23c70:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   23c74:	mov	r3, #14
   23c78:	str	r3, [r5, #168]	; 0xa8
   23c7c:	mov	r0, #0
   23c80:	ldrd	r4, [sp]
   23c84:	ldr	r6, [sp, #8]
   23c88:	add	sp, sp, #12
   23c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   23c90:	mov	r0, #0
   23c94:	b	23c80 <myhtml_insertion_mode_in_row@@Base+0x3b0>

00023c98 <myhtml_insertion_mode_in_table_text@@Base>:
   23c98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   23c9c:	strd	r6, [sp, #8]
   23ca0:	str	r8, [sp, #16]
   23ca4:	str	lr, [sp, #20]
   23ca8:	mov	r5, r0
   23cac:	ldr	r3, [r1]
   23cb0:	cmp	r3, #1
   23cb4:	bne	23d00 <myhtml_insertion_mode_in_table_text@@Base+0x68>
   23cb8:	mov	r4, r1
   23cbc:	ldr	r3, [r1, #48]	; 0x30
   23cc0:	tst	r3, #2048	; 0x800
   23cc4:	beq	23cf0 <myhtml_insertion_mode_in_table_text@@Base+0x58>
   23cc8:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   23ccc:	ldr	r3, [r4, #12]
   23cd0:	cmp	r3, #0
   23cd4:	moveq	r0, #0
   23cd8:	beq	23d80 <myhtml_insertion_mode_in_table_text@@Base+0xe8>
   23cdc:	mov	r1, r4
   23ce0:	ldr	r0, [r5, #136]	; 0x88
   23ce4:	bl	10e5c <myhtml_tree_token_list_append@plt>
   23ce8:	mov	r0, #0
   23cec:	b	23d80 <myhtml_insertion_mode_in_table_text@@Base+0xe8>
   23cf0:	ldr	r0, [r0, #136]	; 0x88
   23cf4:	bl	10e5c <myhtml_tree_token_list_append@plt>
   23cf8:	mov	r0, #0
   23cfc:	b	23d80 <myhtml_insertion_mode_in_table_text@@Base+0xe8>
   23d00:	ldr	r6, [r0, #136]	; 0x88
   23d04:	ldr	r0, [r6, #4]
   23d08:	cmp	r0, #0
   23d0c:	beq	23d74 <myhtml_insertion_mode_in_table_text@@Base+0xdc>
   23d10:	ldr	r2, [r6]
   23d14:	ldr	r3, [r2]
   23d18:	ldr	r4, [r3, #48]	; 0x30
   23d1c:	ands	r4, r4, #8
   23d20:	beq	23d44 <myhtml_insertion_mode_in_table_text@@Base+0xac>
   23d24:	mov	r3, #0
   23d28:	add	r3, r3, #1
   23d2c:	cmp	r3, r0
   23d30:	beq	23d94 <myhtml_insertion_mode_in_table_text@@Base+0xfc>
   23d34:	ldr	r1, [r2, #4]!
   23d38:	ldr	r4, [r1, #48]	; 0x30
   23d3c:	ands	r4, r4, #8
   23d40:	bne	23d28 <myhtml_insertion_mode_in_table_text@@Base+0x90>
   23d44:	mov	r8, #1
   23d48:	mov	r7, #0
   23d4c:	strb	r8, [r5, #188]	; 0xbc
   23d50:	ldr	r3, [r6]
   23d54:	ldr	r1, [r3, r4, lsl #2]
   23d58:	mov	r0, r5
   23d5c:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   23d60:	strb	r7, [r5, #188]	; 0xbc
   23d64:	add	r4, r4, #1
   23d68:	ldr	r3, [r6, #4]
   23d6c:	cmp	r3, r4
   23d70:	bhi	23d4c <myhtml_insertion_mode_in_table_text@@Base+0xb4>
   23d74:	ldr	r3, [r5, #172]	; 0xac
   23d78:	str	r3, [r5, #168]	; 0xa8
   23d7c:	mov	r0, #1
   23d80:	ldrd	r4, [sp]
   23d84:	ldrd	r6, [sp, #8]
   23d88:	ldr	r8, [sp, #16]
   23d8c:	add	sp, sp, #20
   23d90:	pop	{pc}		; (ldr pc, [sp], #4)
   23d94:	mov	r4, #0
   23d98:	ldr	r3, [r6]
   23d9c:	ldr	r1, [r3, r4, lsl #2]
   23da0:	mov	r0, r5
   23da4:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   23da8:	add	r4, r4, #1
   23dac:	ldr	r3, [r6, #4]
   23db0:	cmp	r3, r4
   23db4:	bhi	23d98 <myhtml_insertion_mode_in_table_text@@Base+0x100>
   23db8:	b	23d74 <myhtml_insertion_mode_in_table_text@@Base+0xdc>

00023dbc <myhtml_insertion_mode_in_caption@@Base>:
   23dbc:	str	r4, [sp, #-8]!
   23dc0:	str	lr, [sp, #4]
   23dc4:	mov	r4, r0
   23dc8:	ldr	r3, [r1, #48]	; 0x30
   23dcc:	tst	r3, #1
   23dd0:	beq	23f1c <myhtml_insertion_mode_in_caption@@Base+0x160>
   23dd4:	ldr	r3, [r1]
   23dd8:	cmp	r3, #125	; 0x7d
   23ddc:	beq	23eb4 <myhtml_insertion_mode_in_caption@@Base+0xf8>
   23de0:	bhi	23e80 <myhtml_insertion_mode_in_caption@@Base+0xc4>
   23de4:	cmp	r3, #32
   23de8:	bhi	23e6c <myhtml_insertion_mode_in_caption@@Base+0xb0>
   23dec:	cmp	r3, #31
   23df0:	bcs	23fe4 <myhtml_insertion_mode_in_caption@@Base+0x228>
   23df4:	cmp	r3, #23
   23df8:	beq	23fec <myhtml_insertion_mode_in_caption@@Base+0x230>
   23dfc:	cmp	r3, #27
   23e00:	bne	23e74 <myhtml_insertion_mode_in_caption@@Base+0xb8>
   23e04:	mov	r3, #64	; 0x40
   23e08:	mov	r2, #1
   23e0c:	mov	r1, #27
   23e10:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23e14:	cmp	r0, #0
   23e18:	moveq	r0, #0
   23e1c:	beq	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23e20:	mov	r2, #0
   23e24:	mov	r1, r2
   23e28:	mov	r0, r4
   23e2c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   23e30:	mov	r0, r4
   23e34:	bl	105bc <myhtml_tree_current_node@plt>
   23e38:	mov	r1, #27
   23e3c:	bl	10a3c <myhtml_is_html_node@plt>
   23e40:	mov	r3, #0
   23e44:	mov	r2, #1
   23e48:	mov	r1, #27
   23e4c:	mov	r0, r4
   23e50:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   23e54:	mov	r0, r4
   23e58:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   23e5c:	mov	r3, #8
   23e60:	str	r3, [r4, #168]	; 0xa8
   23e64:	mov	r0, #0
   23e68:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23e6c:	cmp	r3, #65	; 0x41
   23e70:	beq	23ff4 <myhtml_insertion_mode_in_caption@@Base+0x238>
   23e74:	mov	r0, r4
   23e78:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   23e7c:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23e80:	cmp	r3, #132	; 0x84
   23e84:	bhi	23ea4 <myhtml_insertion_mode_in_caption@@Base+0xe8>
   23e88:	cmp	r3, #130	; 0x82
   23e8c:	movcs	r0, #0
   23e90:	bcs	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23e94:	cmp	r3, #127	; 0x7f
   23e98:	movls	r0, #0
   23e9c:	bhi	23e74 <myhtml_insertion_mode_in_caption@@Base+0xb8>
   23ea0:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23ea4:	cmp	r3, #135	; 0x87
   23ea8:	bne	23e74 <myhtml_insertion_mode_in_caption@@Base+0xb8>
   23eac:	mov	r0, #0
   23eb0:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23eb4:	mov	r3, #64	; 0x40
   23eb8:	mov	r2, #1
   23ebc:	mov	r1, #27
   23ec0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23ec4:	cmp	r0, #0
   23ec8:	moveq	r0, #0
   23ecc:	beq	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23ed0:	mov	r2, #0
   23ed4:	mov	r1, r2
   23ed8:	mov	r0, r4
   23edc:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   23ee0:	mov	r0, r4
   23ee4:	bl	105bc <myhtml_tree_current_node@plt>
   23ee8:	mov	r1, #27
   23eec:	bl	10a3c <myhtml_is_html_node@plt>
   23ef0:	mov	r3, #0
   23ef4:	mov	r2, #1
   23ef8:	mov	r1, #27
   23efc:	mov	r0, r4
   23f00:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   23f04:	mov	r0, r4
   23f08:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   23f0c:	mov	r3, #8
   23f10:	str	r3, [r4, #168]	; 0xa8
   23f14:	mov	r0, #1
   23f18:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23f1c:	ldr	r3, [r1]
   23f20:	cmp	r3, #127	; 0x7f
   23f24:	bhi	23f74 <myhtml_insertion_mode_in_caption@@Base+0x1b8>
   23f28:	cmp	r3, #126	; 0x7e
   23f2c:	bcs	23f48 <myhtml_insertion_mode_in_caption@@Base+0x18c>
   23f30:	cmp	r3, #27
   23f34:	beq	23f48 <myhtml_insertion_mode_in_caption@@Base+0x18c>
   23f38:	bcc	23f8c <myhtml_insertion_mode_in_caption@@Base+0x1d0>
   23f3c:	sub	r3, r3, #31
   23f40:	cmp	r3, #1
   23f44:	bhi	23f8c <myhtml_insertion_mode_in_caption@@Base+0x1d0>
   23f48:	mov	r3, #64	; 0x40
   23f4c:	mov	r2, #1
   23f50:	mov	r1, #27
   23f54:	mov	r0, r4
   23f58:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   23f5c:	cmp	r0, #0
   23f60:	moveq	r0, #0
   23f64:	bne	23f98 <myhtml_insertion_mode_in_caption@@Base+0x1dc>
   23f68:	ldr	r4, [sp]
   23f6c:	add	sp, sp, #4
   23f70:	pop	{pc}		; (ldr pc, [sp], #4)
   23f74:	cmp	r3, #130	; 0x82
   23f78:	bcc	23f8c <myhtml_insertion_mode_in_caption@@Base+0x1d0>
   23f7c:	cmp	r3, #132	; 0x84
   23f80:	bls	23f48 <myhtml_insertion_mode_in_caption@@Base+0x18c>
   23f84:	cmp	r3, #135	; 0x87
   23f88:	beq	23f48 <myhtml_insertion_mode_in_caption@@Base+0x18c>
   23f8c:	mov	r0, r4
   23f90:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   23f94:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23f98:	mov	r2, #0
   23f9c:	mov	r1, r2
   23fa0:	mov	r0, r4
   23fa4:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   23fa8:	mov	r0, r4
   23fac:	bl	105bc <myhtml_tree_current_node@plt>
   23fb0:	mov	r1, #27
   23fb4:	bl	10a3c <myhtml_is_html_node@plt>
   23fb8:	mov	r3, #0
   23fbc:	mov	r2, #1
   23fc0:	mov	r1, #27
   23fc4:	mov	r0, r4
   23fc8:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   23fcc:	mov	r0, r4
   23fd0:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   23fd4:	mov	r3, #8
   23fd8:	str	r3, [r4, #168]	; 0xa8
   23fdc:	mov	r0, #1
   23fe0:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23fe4:	mov	r0, #0
   23fe8:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23fec:	mov	r0, #0
   23ff0:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>
   23ff4:	mov	r0, #0
   23ff8:	b	23f68 <myhtml_insertion_mode_in_caption@@Base+0x1ac>

00023ffc <myhtml_insertion_mode_in_column_group@@Base>:
   23ffc:	strd	r4, [sp, #-16]!
   24000:	str	r6, [sp, #8]
   24004:	str	lr, [sp, #12]
   24008:	mov	r5, r0
   2400c:	ldr	r3, [r1, #48]	; 0x30
   24010:	tst	r3, #1
   24014:	beq	240ac <myhtml_insertion_mode_in_column_group@@Base+0xb0>
   24018:	ldr	r3, [r1]
   2401c:	cmp	r3, #32
   24020:	beq	24068 <myhtml_insertion_mode_in_column_group@@Base+0x6c>
   24024:	cmp	r3, #128	; 0x80
   24028:	beq	240a0 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   2402c:	cmp	r3, #31
   24030:	beq	241d4 <myhtml_insertion_mode_in_column_group@@Base+0x1d8>
   24034:	bl	105bc <myhtml_tree_current_node@plt>
   24038:	cmp	r0, #0
   2403c:	moveq	r4, #0
   24040:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24044:	mov	r1, #32
   24048:	bl	10a3c <myhtml_is_html_node@plt>
   2404c:	subs	r4, r0, #0
   24050:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24054:	mov	r0, r5
   24058:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2405c:	mov	r3, #8
   24060:	str	r3, [r5, #168]	; 0xa8
   24064:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24068:	bl	105bc <myhtml_tree_current_node@plt>
   2406c:	cmp	r0, #0
   24070:	moveq	r4, #0
   24074:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24078:	mov	r1, #32
   2407c:	bl	10a3c <myhtml_is_html_node@plt>
   24080:	subs	r4, r0, #0
   24084:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24088:	mov	r0, r5
   2408c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   24090:	mov	r3, #8
   24094:	str	r3, [r5, #168]	; 0xa8
   24098:	mov	r4, #0
   2409c:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   240a0:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   240a4:	mov	r4, r0
   240a8:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   240ac:	ldr	r3, [r1]
   240b0:	cmp	r3, #31
   240b4:	beq	241a8 <myhtml_insertion_mode_in_column_group@@Base+0x1ac>
   240b8:	bhi	24110 <myhtml_insertion_mode_in_column_group@@Base+0x114>
   240bc:	cmp	r3, #2
   240c0:	beq	24198 <myhtml_insertion_mode_in_column_group@@Base+0x19c>
   240c4:	cmp	r3, #3
   240c8:	moveq	r4, #0
   240cc:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   240d0:	cmp	r3, #1
   240d4:	beq	24134 <myhtml_insertion_mode_in_column_group@@Base+0x138>
   240d8:	mov	r0, r5
   240dc:	bl	105bc <myhtml_tree_current_node@plt>
   240e0:	cmp	r0, #0
   240e4:	moveq	r4, #0
   240e8:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   240ec:	mov	r1, #32
   240f0:	bl	10a3c <myhtml_is_html_node@plt>
   240f4:	subs	r4, r0, #0
   240f8:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   240fc:	mov	r0, r5
   24100:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   24104:	mov	r3, #8
   24108:	str	r3, [r5, #168]	; 0xa8
   2410c:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24110:	cmp	r3, #128	; 0x80
   24114:	beq	241bc <myhtml_insertion_mode_in_column_group@@Base+0x1c0>
   24118:	cmp	r3, #251	; 0xfb
   2411c:	beq	241c8 <myhtml_insertion_mode_in_column_group@@Base+0x1cc>
   24120:	cmp	r3, #65	; 0x41
   24124:	bne	240d8 <myhtml_insertion_mode_in_column_group@@Base+0xdc>
   24128:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   2412c:	mov	r4, r0
   24130:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24134:	ldr	r3, [r1, #48]	; 0x30
   24138:	tst	r3, #8
   2413c:	beq	2414c <myhtml_insertion_mode_in_column_group@@Base+0x150>
   24140:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   24144:	mov	r4, #0
   24148:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   2414c:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   24150:	subs	r1, r0, #0
   24154:	beq	24160 <myhtml_insertion_mode_in_column_group@@Base+0x164>
   24158:	mov	r0, r5
   2415c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   24160:	mov	r0, r5
   24164:	bl	105bc <myhtml_tree_current_node@plt>
   24168:	cmp	r0, #0
   2416c:	moveq	r4, #0
   24170:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24174:	mov	r1, #32
   24178:	bl	10a3c <myhtml_is_html_node@plt>
   2417c:	subs	r4, r0, #0
   24180:	beq	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24184:	mov	r0, r5
   24188:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2418c:	mov	r3, #8
   24190:	str	r3, [r5, #168]	; 0xa8
   24194:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   24198:	mov	r2, #0
   2419c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   241a0:	mov	r4, #0
   241a4:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   241a8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   241ac:	mov	r0, r5
   241b0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   241b4:	mov	r4, #0
   241b8:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   241bc:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   241c0:	mov	r4, r0
   241c4:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   241c8:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   241cc:	mov	r4, r0
   241d0:	b	241d8 <myhtml_insertion_mode_in_column_group@@Base+0x1dc>
   241d4:	mov	r4, #0
   241d8:	mov	r0, r4
   241dc:	ldrd	r4, [sp]
   241e0:	ldr	r6, [sp, #8]
   241e4:	add	sp, sp, #12
   241e8:	pop	{pc}		; (ldr pc, [sp], #4)

000241ec <myhtml_insertion_mode_in_cell@@Base>:
   241ec:	strd	r4, [sp, #-16]!
   241f0:	str	r6, [sp, #8]
   241f4:	str	lr, [sp, #12]
   241f8:	mov	r5, r0
   241fc:	mov	r4, r1
   24200:	ldr	r3, [r1, #48]	; 0x30
   24204:	tst	r3, #1
   24208:	beq	244d0 <myhtml_insertion_mode_in_cell@@Base+0x2e4>
   2420c:	ldr	r1, [r1]
   24210:	sub	r3, r1, #23
   24214:	cmp	r3, #112	; 0x70
   24218:	addls	pc, pc, r3, lsl #2
   2421c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24220:	b	2458c <myhtml_insertion_mode_in_cell@@Base+0x3a0>
   24224:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24228:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2422c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24230:	b	2458c <myhtml_insertion_mode_in_cell@@Base+0x3a0>
   24234:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24238:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2423c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24240:	b	2458c <myhtml_insertion_mode_in_cell@@Base+0x3a0>
   24244:	b	2458c <myhtml_insertion_mode_in_cell@@Base+0x3a0>
   24248:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2424c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24250:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24254:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24258:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2425c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24260:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24264:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24268:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2426c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24270:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24274:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24278:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2427c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24280:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24284:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24288:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2428c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24290:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24294:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24298:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2429c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242a0:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242a4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242a8:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242ac:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242b0:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242b4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242b8:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242bc:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242c0:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242c4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242c8:	b	2458c <myhtml_insertion_mode_in_cell@@Base+0x3a0>
   242cc:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242d0:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242d4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242d8:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242dc:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242e0:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242e4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242e8:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242ec:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242f0:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242f4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242f8:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   242fc:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24300:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24304:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24308:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2430c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24310:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24314:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24318:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2431c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24320:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24324:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24328:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2432c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24330:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24334:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24338:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2433c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24340:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24344:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24348:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2434c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24350:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24354:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24358:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2435c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24360:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24364:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24368:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2436c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24370:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24374:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24378:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2437c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24380:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24384:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24388:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2438c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24390:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24394:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   24398:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   2439c:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243a0:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243a4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243a8:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243ac:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243b0:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243b4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243b8:	b	24448 <myhtml_insertion_mode_in_cell@@Base+0x25c>
   243bc:	b	24448 <myhtml_insertion_mode_in_cell@@Base+0x25c>
   243c0:	b	243e4 <myhtml_insertion_mode_in_cell@@Base+0x1f8>
   243c4:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243c8:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243cc:	b	24448 <myhtml_insertion_mode_in_cell@@Base+0x25c>
   243d0:	b	243e4 <myhtml_insertion_mode_in_cell@@Base+0x1f8>
   243d4:	b	24448 <myhtml_insertion_mode_in_cell@@Base+0x25c>
   243d8:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243dc:	b	244c4 <myhtml_insertion_mode_in_cell@@Base+0x2d8>
   243e0:	b	24448 <myhtml_insertion_mode_in_cell@@Base+0x25c>
   243e4:	mov	r3, #64	; 0x40
   243e8:	mov	r2, #1
   243ec:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   243f0:	cmp	r0, #0
   243f4:	moveq	r0, #0
   243f8:	beq	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   243fc:	mov	r2, #0
   24400:	mov	r1, r2
   24404:	mov	r0, r5
   24408:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   2440c:	mov	r0, r5
   24410:	bl	105bc <myhtml_tree_current_node@plt>
   24414:	ldr	r1, [r4]
   24418:	bl	10a3c <myhtml_is_html_node@plt>
   2441c:	mov	r3, #0
   24420:	mov	r2, #1
   24424:	ldr	r1, [r4]
   24428:	mov	r0, r5
   2442c:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   24430:	mov	r0, r5
   24434:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   24438:	mov	r3, #13
   2443c:	str	r3, [r5, #168]	; 0xa8
   24440:	mov	r0, #0
   24444:	b	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   24448:	mov	r3, #64	; 0x40
   2444c:	mov	r2, #1
   24450:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   24454:	cmp	r0, #0
   24458:	moveq	r0, #0
   2445c:	beq	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   24460:	mov	r3, #64	; 0x40
   24464:	mov	r2, #1
   24468:	mov	r1, #127	; 0x7f
   2446c:	mov	r0, r5
   24470:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   24474:	subs	r1, r0, #0
   24478:	beq	24490 <myhtml_insertion_mode_in_cell@@Base+0x2a4>
   2447c:	mov	r2, r4
   24480:	mov	r0, r5
   24484:	bl	10cd0 <myhtml_tree_close_cell@plt>
   24488:	mov	r0, #1
   2448c:	b	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   24490:	mov	r3, #64	; 0x40
   24494:	mov	r2, #1
   24498:	mov	r1, #131	; 0x83
   2449c:	mov	r0, r5
   244a0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   244a4:	subs	r1, r0, #0
   244a8:	moveq	r0, #1
   244ac:	beq	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   244b0:	mov	r2, r4
   244b4:	mov	r0, r5
   244b8:	bl	10cd0 <myhtml_tree_close_cell@plt>
   244bc:	mov	r0, #1
   244c0:	b	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   244c4:	mov	r1, r4
   244c8:	bl	10118 <myhtml_insertion_mode_in_table@plt>
   244cc:	b	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   244d0:	ldr	r3, [r1]
   244d4:	cmp	r3, #127	; 0x7f
   244d8:	bhi	24544 <myhtml_insertion_mode_in_cell@@Base+0x358>
   244dc:	cmp	r3, #126	; 0x7e
   244e0:	bcs	244fc <myhtml_insertion_mode_in_cell@@Base+0x310>
   244e4:	cmp	r3, #27
   244e8:	beq	244fc <myhtml_insertion_mode_in_cell@@Base+0x310>
   244ec:	bcc	2455c <myhtml_insertion_mode_in_cell@@Base+0x370>
   244f0:	sub	r3, r3, #31
   244f4:	cmp	r3, #1
   244f8:	bhi	2455c <myhtml_insertion_mode_in_cell@@Base+0x370>
   244fc:	mov	r3, #64	; 0x40
   24500:	mov	r2, #1
   24504:	mov	r1, #127	; 0x7f
   24508:	mov	r0, r5
   2450c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   24510:	mov	r6, r0
   24514:	mov	r3, #64	; 0x40
   24518:	mov	r2, #1
   2451c:	mov	r1, #131	; 0x83
   24520:	mov	r0, r5
   24524:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   24528:	orrs	r3, r6, r0
   2452c:	moveq	r0, #0
   24530:	bne	2456c <myhtml_insertion_mode_in_cell@@Base+0x380>
   24534:	ldrd	r4, [sp]
   24538:	ldr	r6, [sp, #8]
   2453c:	add	sp, sp, #12
   24540:	pop	{pc}		; (ldr pc, [sp], #4)
   24544:	cmp	r3, #130	; 0x82
   24548:	bcc	2455c <myhtml_insertion_mode_in_cell@@Base+0x370>
   2454c:	cmp	r3, #132	; 0x84
   24550:	bls	244fc <myhtml_insertion_mode_in_cell@@Base+0x310>
   24554:	cmp	r3, #135	; 0x87
   24558:	beq	244fc <myhtml_insertion_mode_in_cell@@Base+0x310>
   2455c:	mov	r1, r4
   24560:	mov	r0, r5
   24564:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24568:	b	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2456c:	mov	r2, r4
   24570:	cmp	r6, #0
   24574:	movne	r1, r6
   24578:	moveq	r1, r0
   2457c:	mov	r0, r5
   24580:	bl	10cd0 <myhtml_tree_close_cell@plt>
   24584:	mov	r0, #1
   24588:	b	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2458c:	mov	r0, #0
   24590:	b	24534 <myhtml_insertion_mode_in_cell@@Base+0x348>

00024594 <myhtml_insertion_mode_in_select@@Base>:
   24594:	strd	r4, [sp, #-16]!
   24598:	str	r6, [sp, #8]
   2459c:	str	lr, [sp, #12]
   245a0:	mov	r5, r0
   245a4:	mov	r4, r1
   245a8:	ldr	r3, [r1, #48]	; 0x30
   245ac:	tst	r3, #1
   245b0:	beq	24728 <myhtml_insertion_mode_in_select@@Base+0x194>
   245b4:	ldr	r3, [r1]
   245b8:	sub	r3, r3, #96	; 0x60
   245bc:	cmp	r3, #32
   245c0:	addls	pc, pc, r3, lsl #2
   245c4:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245c8:	b	2464c <myhtml_insertion_mode_in_select@@Base+0xb8>
   245cc:	b	246c4 <myhtml_insertion_mode_in_select@@Base+0x130>
   245d0:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245d4:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245d8:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245dc:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245e0:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245e4:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245e8:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245ec:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245f0:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245f4:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245f8:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   245fc:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24600:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24604:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24608:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   2460c:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24610:	b	246e8 <myhtml_insertion_mode_in_select@@Base+0x154>
   24614:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24618:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   2461c:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24620:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24624:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24628:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   2462c:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24630:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24634:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24638:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   2463c:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24640:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24644:	b	24940 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   24648:	b	24720 <myhtml_insertion_mode_in_select@@Base+0x18c>
   2464c:	bl	105bc <myhtml_tree_current_node@plt>
   24650:	mov	r1, #97	; 0x61
   24654:	bl	10a3c <myhtml_is_html_node@plt>
   24658:	cmp	r0, #0
   2465c:	beq	24670 <myhtml_insertion_mode_in_select@@Base+0xdc>
   24660:	ldr	r3, [r5, #128]	; 0x80
   24664:	ldr	r2, [r3, #4]
   24668:	cmp	r2, #1
   2466c:	bhi	24698 <myhtml_insertion_mode_in_select@@Base+0x104>
   24670:	mov	r0, r5
   24674:	bl	105bc <myhtml_tree_current_node@plt>
   24678:	mov	r1, #96	; 0x60
   2467c:	bl	10a3c <myhtml_is_html_node@plt>
   24680:	cmp	r0, #0
   24684:	beq	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24688:	mov	r0, r5
   2468c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   24690:	mov	r0, #0
   24694:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24698:	ldr	r2, [r3, #4]
   2469c:	sub	r2, r2, #-1073741822	; 0xc0000002
   246a0:	ldr	r3, [r3]
   246a4:	mov	r1, #96	; 0x60
   246a8:	ldr	r0, [r3, r2, lsl #2]
   246ac:	bl	10a3c <myhtml_is_html_node@plt>
   246b0:	cmp	r0, #0
   246b4:	beq	24670 <myhtml_insertion_mode_in_select@@Base+0xdc>
   246b8:	mov	r0, r5
   246bc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   246c0:	b	24670 <myhtml_insertion_mode_in_select@@Base+0xdc>
   246c4:	bl	105bc <myhtml_tree_current_node@plt>
   246c8:	mov	r1, #97	; 0x61
   246cc:	bl	10a3c <myhtml_is_html_node@plt>
   246d0:	cmp	r0, #0
   246d4:	beq	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   246d8:	mov	r0, r5
   246dc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   246e0:	mov	r0, #0
   246e4:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   246e8:	mov	r3, #128	; 0x80
   246ec:	mov	r2, #1
   246f0:	mov	r1, #114	; 0x72
   246f4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   246f8:	subs	r1, r0, #0
   246fc:	moveq	r0, #0
   24700:	beq	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24704:	mov	r2, #0
   24708:	mov	r0, r5
   2470c:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   24710:	mov	r0, r5
   24714:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   24718:	mov	r0, #0
   2471c:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24720:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   24724:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24728:	ldr	r3, [r1]
   2472c:	cmp	r3, #96	; 0x60
   24730:	beq	2489c <myhtml_insertion_mode_in_select@@Base+0x308>
   24734:	bls	2475c <myhtml_insertion_mode_in_select@@Base+0x1c8>
   24738:	cmp	r3, #114	; 0x72
   2473c:	beq	24908 <myhtml_insertion_mode_in_select@@Base+0x374>
   24740:	bls	247e0 <myhtml_insertion_mode_in_select@@Base+0x24c>
   24744:	cmp	r3, #129	; 0x81
   24748:	beq	247a4 <myhtml_insertion_mode_in_select@@Base+0x210>
   2474c:	cmp	r3, #251	; 0xfb
   24750:	bne	2482c <myhtml_insertion_mode_in_select@@Base+0x298>
   24754:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24758:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   2475c:	cmp	r3, #65	; 0x41
   24760:	beq	24888 <myhtml_insertion_mode_in_select@@Base+0x2f4>
   24764:	bhi	24790 <myhtml_insertion_mode_in_select@@Base+0x1fc>
   24768:	cmp	r3, #1
   2476c:	beq	24848 <myhtml_insertion_mode_in_select@@Base+0x2b4>
   24770:	cmp	r3, #2
   24774:	movne	r0, #0
   24778:	bne	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   2477c:	mov	r2, #0
   24780:	mov	r0, r5
   24784:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   24788:	mov	r0, #0
   2478c:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24790:	cmp	r3, #70	; 0x46
   24794:	beq	247a4 <myhtml_insertion_mode_in_select@@Base+0x210>
   24798:	cmp	r3, #74	; 0x4a
   2479c:	movne	r0, #0
   247a0:	bne	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   247a4:	mov	r3, #128	; 0x80
   247a8:	mov	r2, #1
   247ac:	mov	r1, #114	; 0x72
   247b0:	mov	r0, r5
   247b4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   247b8:	subs	r1, r0, #0
   247bc:	moveq	r0, #0
   247c0:	beq	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   247c4:	mov	r2, #0
   247c8:	mov	r0, r5
   247cc:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   247d0:	mov	r0, r5
   247d4:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   247d8:	mov	r0, #1
   247dc:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   247e0:	cmp	r3, #97	; 0x61
   247e4:	bne	24810 <myhtml_insertion_mode_in_select@@Base+0x27c>
   247e8:	bl	105bc <myhtml_tree_current_node@plt>
   247ec:	ldr	r1, [r4]
   247f0:	bl	10a3c <myhtml_is_html_node@plt>
   247f4:	cmp	r0, #0
   247f8:	bne	24890 <myhtml_insertion_mode_in_select@@Base+0x2fc>
   247fc:	mov	r1, r4
   24800:	mov	r0, r5
   24804:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   24808:	mov	r0, #0
   2480c:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24810:	cmp	r3, #112	; 0x70
   24814:	movne	r0, #0
   24818:	bne	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   2481c:	mov	r1, r4
   24820:	mov	r0, r5
   24824:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   24828:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   2482c:	cmp	r3, #128	; 0x80
   24830:	movne	r0, #0
   24834:	beq	2481c <myhtml_insertion_mode_in_select@@Base+0x288>
   24838:	ldrd	r4, [sp]
   2483c:	ldr	r6, [sp, #8]
   24840:	add	sp, sp, #12
   24844:	pop	{pc}		; (ldr pc, [sp], #4)
   24848:	ldr	r3, [r1, #48]	; 0x30
   2484c:	tst	r3, #2048	; 0x800
   24850:	beq	2487c <myhtml_insertion_mode_in_select@@Base+0x2e8>
   24854:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   24858:	ldr	r3, [r4, #12]
   2485c:	cmp	r3, #0
   24860:	moveq	r0, #0
   24864:	beq	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24868:	mov	r1, r4
   2486c:	mov	r0, r5
   24870:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   24874:	mov	r0, #0
   24878:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   2487c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   24880:	mov	r0, #0
   24884:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24888:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   2488c:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24890:	mov	r0, r5
   24894:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   24898:	b	247fc <myhtml_insertion_mode_in_select@@Base+0x268>
   2489c:	bl	105bc <myhtml_tree_current_node@plt>
   248a0:	ldr	r3, [r0, #4]
   248a4:	cmp	r3, #97	; 0x61
   248a8:	beq	248d8 <myhtml_insertion_mode_in_select@@Base+0x344>
   248ac:	mov	r0, r5
   248b0:	bl	105bc <myhtml_tree_current_node@plt>
   248b4:	ldr	r2, [r0, #4]
   248b8:	ldr	r3, [r4]
   248bc:	cmp	r2, r3
   248c0:	beq	248f0 <myhtml_insertion_mode_in_select@@Base+0x35c>
   248c4:	mov	r1, r4
   248c8:	mov	r0, r5
   248cc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   248d0:	mov	r0, #0
   248d4:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   248d8:	ldr	r3, [r0, #8]
   248dc:	cmp	r3, #1
   248e0:	bne	248ac <myhtml_insertion_mode_in_select@@Base+0x318>
   248e4:	mov	r0, r5
   248e8:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   248ec:	b	248ac <myhtml_insertion_mode_in_select@@Base+0x318>
   248f0:	ldr	r3, [r0, #8]
   248f4:	cmp	r3, #1
   248f8:	bne	248c4 <myhtml_insertion_mode_in_select@@Base+0x330>
   248fc:	mov	r0, r5
   24900:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   24904:	b	248c4 <myhtml_insertion_mode_in_select@@Base+0x330>
   24908:	mov	r3, #128	; 0x80
   2490c:	mov	r2, #1
   24910:	mov	r1, #114	; 0x72
   24914:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   24918:	subs	r1, r0, #0
   2491c:	moveq	r0, #0
   24920:	beq	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24924:	mov	r2, #0
   24928:	mov	r0, r5
   2492c:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   24930:	mov	r0, r5
   24934:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   24938:	mov	r0, #0
   2493c:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>
   24940:	mov	r0, #0
   24944:	b	24838 <myhtml_insertion_mode_in_select@@Base+0x2a4>

00024948 <myhtml_insertion_mode_in_select_in_table@@Base>:
   24948:	str	r4, [sp, #-8]!
   2494c:	str	lr, [sp, #4]
   24950:	mov	r4, r0
   24954:	ldr	r3, [r1, #48]	; 0x30
   24958:	tst	r3, #1
   2495c:	beq	249e4 <myhtml_insertion_mode_in_select_in_table@@Base+0x9c>
   24960:	ldr	r0, [r1]
   24964:	cmp	r0, #127	; 0x7f
   24968:	bhi	24988 <myhtml_insertion_mode_in_select_in_table@@Base+0x40>
   2496c:	cmp	r0, #125	; 0x7d
   24970:	bcs	249a0 <myhtml_insertion_mode_in_select_in_table@@Base+0x58>
   24974:	cmp	r0, #27
   24978:	beq	249a0 <myhtml_insertion_mode_in_select_in_table@@Base+0x58>
   2497c:	mov	r0, r4
   24980:	bl	10358 <myhtml_insertion_mode_in_select@plt>
   24984:	b	24a44 <myhtml_insertion_mode_in_select_in_table@@Base+0xfc>
   24988:	cmp	r0, #130	; 0x82
   2498c:	bcc	2497c <myhtml_insertion_mode_in_select_in_table@@Base+0x34>
   24990:	cmp	r0, #132	; 0x84
   24994:	bls	249a0 <myhtml_insertion_mode_in_select_in_table@@Base+0x58>
   24998:	cmp	r0, #135	; 0x87
   2499c:	bne	2497c <myhtml_insertion_mode_in_select_in_table@@Base+0x34>
   249a0:	mov	r3, #64	; 0x40
   249a4:	mov	r2, #1
   249a8:	mov	r1, r0
   249ac:	mov	r0, r4
   249b0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   249b4:	cmp	r0, #0
   249b8:	moveq	r0, #0
   249bc:	beq	24a44 <myhtml_insertion_mode_in_select_in_table@@Base+0xfc>
   249c0:	mov	r3, #0
   249c4:	mov	r2, #1
   249c8:	mov	r1, #114	; 0x72
   249cc:	mov	r0, r4
   249d0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   249d4:	mov	r0, r4
   249d8:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   249dc:	mov	r0, #1
   249e0:	b	24a44 <myhtml_insertion_mode_in_select_in_table@@Base+0xfc>
   249e4:	ldr	r3, [r1]
   249e8:	cmp	r3, #127	; 0x7f
   249ec:	bhi	24a0c <myhtml_insertion_mode_in_select_in_table@@Base+0xc4>
   249f0:	cmp	r3, #125	; 0x7d
   249f4:	bcs	24a24 <myhtml_insertion_mode_in_select_in_table@@Base+0xdc>
   249f8:	cmp	r3, #27
   249fc:	beq	24a24 <myhtml_insertion_mode_in_select_in_table@@Base+0xdc>
   24a00:	mov	r0, r4
   24a04:	bl	10358 <myhtml_insertion_mode_in_select@plt>
   24a08:	b	24a44 <myhtml_insertion_mode_in_select_in_table@@Base+0xfc>
   24a0c:	cmp	r3, #130	; 0x82
   24a10:	bcc	24a00 <myhtml_insertion_mode_in_select_in_table@@Base+0xb8>
   24a14:	cmp	r3, #132	; 0x84
   24a18:	bls	24a24 <myhtml_insertion_mode_in_select_in_table@@Base+0xdc>
   24a1c:	cmp	r3, #135	; 0x87
   24a20:	bne	24a00 <myhtml_insertion_mode_in_select_in_table@@Base+0xb8>
   24a24:	mov	r3, #0
   24a28:	mov	r2, #1
   24a2c:	mov	r1, #114	; 0x72
   24a30:	mov	r0, r4
   24a34:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   24a38:	mov	r0, r4
   24a3c:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   24a40:	mov	r0, #1
   24a44:	ldr	r4, [sp]
   24a48:	add	sp, sp, #4
   24a4c:	pop	{pc}		; (ldr pc, [sp], #4)

00024a50 <myhtml_insertion_mode_after_body@@Base>:
   24a50:	ldr	r3, [r1, #48]	; 0x30
   24a54:	tst	r3, #1
   24a58:	beq	24a9c <myhtml_insertion_mode_after_body@@Base+0x4c>
   24a5c:	ldr	r3, [r1]
   24a60:	cmp	r3, #65	; 0x41
   24a64:	bne	24a8c <myhtml_insertion_mode_after_body@@Base+0x3c>
   24a68:	ldr	r3, [r0, #88]	; 0x58
   24a6c:	cmp	r3, #0
   24a70:	beq	24a7c <myhtml_insertion_mode_after_body@@Base+0x2c>
   24a74:	mov	r0, #0
   24a78:	bx	lr
   24a7c:	mov	r3, #21
   24a80:	str	r3, [r0, #168]	; 0xa8
   24a84:	mov	r0, #0
   24a88:	bx	lr
   24a8c:	mov	r3, #6
   24a90:	str	r3, [r0, #168]	; 0xa8
   24a94:	mov	r0, #1
   24a98:	bx	lr
   24a9c:	ldr	r3, [r1]
   24aa0:	cmp	r3, #3
   24aa4:	beq	24b74 <myhtml_insertion_mode_after_body@@Base+0x124>
   24aa8:	strd	r4, [sp, #-16]!
   24aac:	str	r6, [sp, #8]
   24ab0:	str	lr, [sp, #12]
   24ab4:	mov	r4, r1
   24ab8:	bls	24ad8 <myhtml_insertion_mode_after_body@@Base+0x88>
   24abc:	cmp	r3, #65	; 0x41
   24ac0:	beq	24b50 <myhtml_insertion_mode_after_body@@Base+0x100>
   24ac4:	cmp	r3, #251	; 0xfb
   24ac8:	bne	24b64 <myhtml_insertion_mode_after_body@@Base+0x114>
   24acc:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   24ad0:	mov	r0, #0
   24ad4:	b	24b54 <myhtml_insertion_mode_after_body@@Base+0x104>
   24ad8:	cmp	r3, #1
   24adc:	beq	24b30 <myhtml_insertion_mode_after_body@@Base+0xe0>
   24ae0:	cmp	r3, #2
   24ae4:	bne	24b64 <myhtml_insertion_mode_after_body@@Base+0x114>
   24ae8:	ldr	r3, [r0, #128]	; 0x80
   24aec:	ldr	r2, [r3, #4]
   24af0:	cmp	r2, #0
   24af4:	moveq	r0, #0
   24af8:	beq	24b54 <myhtml_insertion_mode_after_body@@Base+0x104>
   24afc:	ldr	r3, [r3]
   24b00:	ldr	r5, [r3]
   24b04:	bl	ff80 <myhtml_tree_node_create@plt>
   24b08:	mov	r1, r0
   24b0c:	mov	r3, #2
   24b10:	str	r3, [r0, #4]
   24b14:	str	r4, [r0, #32]
   24b18:	ldr	r3, [r5, #8]
   24b1c:	str	r3, [r0, #8]
   24b20:	mov	r0, r5
   24b24:	bl	1064c <myhtml_tree_node_add_child@plt>
   24b28:	mov	r0, #0
   24b2c:	b	24b54 <myhtml_insertion_mode_after_body@@Base+0x104>
   24b30:	ldr	r3, [r1, #48]	; 0x30
   24b34:	tst	r3, #8
   24b38:	moveq	r3, #6
   24b3c:	streq	r3, [r0, #168]	; 0xa8
   24b40:	moveq	r0, #1
   24b44:	beq	24b54 <myhtml_insertion_mode_after_body@@Base+0x104>
   24b48:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24b4c:	b	24b54 <myhtml_insertion_mode_after_body@@Base+0x104>
   24b50:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24b54:	ldrd	r4, [sp]
   24b58:	ldr	r6, [sp, #8]
   24b5c:	add	sp, sp, #12
   24b60:	pop	{pc}		; (ldr pc, [sp], #4)
   24b64:	mov	r3, #6
   24b68:	str	r3, [r0, #168]	; 0xa8
   24b6c:	mov	r0, #1
   24b70:	b	24b54 <myhtml_insertion_mode_after_body@@Base+0x104>
   24b74:	mov	r0, #0
   24b78:	bx	lr

00024b7c <myhtml_insertion_mode_in_frameset@@Base>:
   24b7c:	strd	r4, [sp, #-16]!
   24b80:	str	r6, [sp, #8]
   24b84:	str	lr, [sp, #12]
   24b88:	mov	r5, r0
   24b8c:	mov	r4, r1
   24b90:	ldr	r3, [r1, #48]	; 0x30
   24b94:	tst	r3, #1
   24b98:	beq	24c28 <myhtml_insertion_mode_in_frameset@@Base+0xac>
   24b9c:	ldr	r3, [r1]
   24ba0:	cmp	r3, #54	; 0x36
   24ba4:	movne	r0, #0
   24ba8:	beq	24bbc <myhtml_insertion_mode_in_frameset@@Base+0x40>
   24bac:	ldrd	r4, [sp]
   24bb0:	ldr	r6, [sp, #8]
   24bb4:	add	sp, sp, #12
   24bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   24bbc:	mov	r0, r5
   24bc0:	bl	105bc <myhtml_tree_current_node@plt>
   24bc4:	ldr	r3, [r5, #84]	; 0x54
   24bc8:	ldr	r3, [r3, #20]
   24bcc:	cmp	r3, r0
   24bd0:	moveq	r0, #0
   24bd4:	beq	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24bd8:	mov	r0, r5
   24bdc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   24be0:	mov	r0, r5
   24be4:	bl	105bc <myhtml_tree_current_node@plt>
   24be8:	ldr	r3, [r5, #88]	; 0x58
   24bec:	cmp	r3, #0
   24bf0:	movne	r0, #0
   24bf4:	bne	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24bf8:	ldr	r3, [r0, #4]
   24bfc:	cmp	r3, #54	; 0x36
   24c00:	beq	24c14 <myhtml_insertion_mode_in_frameset@@Base+0x98>
   24c04:	mov	r3, #20
   24c08:	str	r3, [r5, #168]	; 0xa8
   24c0c:	mov	r0, #0
   24c10:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24c14:	ldr	r3, [r0, #8]
   24c18:	cmp	r3, #1
   24c1c:	moveq	r0, #0
   24c20:	bne	24c04 <myhtml_insertion_mode_in_frameset@@Base+0x88>
   24c24:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24c28:	ldr	r3, [r1]
   24c2c:	cmp	r3, #54	; 0x36
   24c30:	beq	24cdc <myhtml_insertion_mode_in_frameset@@Base+0x160>
   24c34:	bhi	24c70 <myhtml_insertion_mode_in_frameset@@Base+0xf4>
   24c38:	cmp	r3, #2
   24c3c:	beq	24ccc <myhtml_insertion_mode_in_frameset@@Base+0x150>
   24c40:	cmp	r3, #53	; 0x35
   24c44:	beq	24ce8 <myhtml_insertion_mode_in_frameset@@Base+0x16c>
   24c48:	cmp	r3, #1
   24c4c:	movne	r0, #0
   24c50:	bne	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24c54:	ldr	r3, [r1, #48]	; 0x30
   24c58:	tst	r3, #8
   24c5c:	beq	24c98 <myhtml_insertion_mode_in_frameset@@Base+0x11c>
   24c60:	mov	r0, r5
   24c64:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   24c68:	mov	r0, #0
   24c6c:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24c70:	cmp	r3, #92	; 0x5c
   24c74:	beq	24cfc <myhtml_insertion_mode_in_frameset@@Base+0x180>
   24c78:	cmp	r3, #251	; 0xfb
   24c7c:	beq	24d04 <myhtml_insertion_mode_in_frameset@@Base+0x188>
   24c80:	cmp	r3, #65	; 0x41
   24c84:	movne	r0, #0
   24c88:	bne	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24c8c:	mov	r0, r5
   24c90:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24c94:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24c98:	ldr	r0, [r5, #8]
   24c9c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   24ca0:	add	r0, r4, #4
   24ca4:	bl	10280 <mycore_string_stay_only_whitespace@plt>
   24ca8:	ldr	r3, [r4, #12]
   24cac:	cmp	r3, #0
   24cb0:	moveq	r0, #0
   24cb4:	beq	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24cb8:	mov	r1, r4
   24cbc:	mov	r0, r5
   24cc0:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   24cc4:	mov	r0, #0
   24cc8:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24ccc:	mov	r2, #0
   24cd0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   24cd4:	mov	r0, #0
   24cd8:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24cdc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   24ce0:	mov	r0, #0
   24ce4:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24ce8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   24cec:	mov	r0, r5
   24cf0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   24cf4:	mov	r0, #0
   24cf8:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24cfc:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   24d00:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>
   24d04:	bl	105bc <myhtml_tree_current_node@plt>
   24d08:	mov	r0, r5
   24d0c:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   24d10:	mov	r0, #0
   24d14:	b	24bac <myhtml_insertion_mode_in_frameset@@Base+0x30>

00024d18 <myhtml_insertion_mode_after_frameset@@Base>:
   24d18:	ldr	r3, [r1, #48]	; 0x30
   24d1c:	tst	r3, #1
   24d20:	beq	24d48 <myhtml_insertion_mode_after_frameset@@Base+0x30>
   24d24:	ldr	r3, [r1]
   24d28:	cmp	r3, #65	; 0x41
   24d2c:	beq	24d38 <myhtml_insertion_mode_after_frameset@@Base+0x20>
   24d30:	mov	r0, #0
   24d34:	bx	lr
   24d38:	mov	r3, #22
   24d3c:	str	r3, [r0, #168]	; 0xa8
   24d40:	mov	r0, #0
   24d44:	bx	lr
   24d48:	strd	r4, [sp, #-16]!
   24d4c:	str	r6, [sp, #8]
   24d50:	str	lr, [sp, #12]
   24d54:	mov	r4, r1
   24d58:	mov	r5, r0
   24d5c:	ldr	r3, [r1]
   24d60:	cmp	r3, #65	; 0x41
   24d64:	beq	24e10 <myhtml_insertion_mode_after_frameset@@Base+0xf8>
   24d68:	bls	24d90 <myhtml_insertion_mode_after_frameset@@Base+0x78>
   24d6c:	cmp	r3, #92	; 0x5c
   24d70:	beq	24e18 <myhtml_insertion_mode_after_frameset@@Base+0x100>
   24d74:	cmp	r3, #251	; 0xfb
   24d78:	movne	r0, #0
   24d7c:	bne	24db4 <myhtml_insertion_mode_after_frameset@@Base+0x9c>
   24d80:	mov	r0, r5
   24d84:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   24d88:	mov	r0, #0
   24d8c:	b	24db4 <myhtml_insertion_mode_after_frameset@@Base+0x9c>
   24d90:	cmp	r3, #1
   24d94:	beq	24dc4 <myhtml_insertion_mode_after_frameset@@Base+0xac>
   24d98:	cmp	r3, #2
   24d9c:	movne	r0, #0
   24da0:	bne	24db4 <myhtml_insertion_mode_after_frameset@@Base+0x9c>
   24da4:	mov	r2, #0
   24da8:	mov	r0, r5
   24dac:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   24db0:	mov	r0, #0
   24db4:	ldrd	r4, [sp]
   24db8:	ldr	r6, [sp, #8]
   24dbc:	add	sp, sp, #12
   24dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   24dc4:	ldr	r3, [r1, #48]	; 0x30
   24dc8:	tst	r3, #8
   24dcc:	beq	24ddc <myhtml_insertion_mode_after_frameset@@Base+0xc4>
   24dd0:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   24dd4:	mov	r0, #0
   24dd8:	b	24db4 <myhtml_insertion_mode_after_frameset@@Base+0x9c>
   24ddc:	ldr	r0, [r0, #8]
   24de0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   24de4:	add	r0, r4, #4
   24de8:	bl	10280 <mycore_string_stay_only_whitespace@plt>
   24dec:	ldr	r3, [r4, #12]
   24df0:	cmp	r3, #0
   24df4:	moveq	r0, #0
   24df8:	beq	24db4 <myhtml_insertion_mode_after_frameset@@Base+0x9c>
   24dfc:	mov	r1, r4
   24e00:	mov	r0, r5
   24e04:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   24e08:	mov	r0, #0
   24e0c:	b	24db4 <myhtml_insertion_mode_after_frameset@@Base+0x9c>
   24e10:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24e14:	b	24db4 <myhtml_insertion_mode_after_frameset@@Base+0x9c>
   24e18:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   24e1c:	b	24db4 <myhtml_insertion_mode_after_frameset@@Base+0x9c>

00024e20 <myhtml_insertion_mode_after_after_body@@Base>:
   24e20:	ldr	r3, [r1, #48]	; 0x30
   24e24:	tst	r3, #1
   24e28:	bne	24e98 <myhtml_insertion_mode_after_after_body@@Base+0x78>
   24e2c:	strd	r4, [sp, #-16]!
   24e30:	str	r6, [sp, #8]
   24e34:	str	lr, [sp, #12]
   24e38:	mov	r4, r1
   24e3c:	ldr	r3, [r1]
   24e40:	cmp	r3, #3
   24e44:	beq	24ee4 <myhtml_insertion_mode_after_after_body@@Base+0xc4>
   24e48:	bhi	24ea8 <myhtml_insertion_mode_after_after_body@@Base+0x88>
   24e4c:	cmp	r3, #1
   24e50:	beq	24ec4 <myhtml_insertion_mode_after_after_body@@Base+0xa4>
   24e54:	cmp	r3, #2
   24e58:	bne	24ef0 <myhtml_insertion_mode_after_after_body@@Base+0xd0>
   24e5c:	ldr	r5, [r0, #84]	; 0x54
   24e60:	bl	ff80 <myhtml_tree_node_create@plt>
   24e64:	mov	r1, r0
   24e68:	mov	r3, #2
   24e6c:	str	r3, [r0, #4]
   24e70:	str	r4, [r0, #32]
   24e74:	ldr	r3, [r5, #8]
   24e78:	str	r3, [r0, #8]
   24e7c:	mov	r0, r5
   24e80:	bl	1064c <myhtml_tree_node_add_child@plt>
   24e84:	mov	r0, #0
   24e88:	ldrd	r4, [sp]
   24e8c:	ldr	r6, [sp, #8]
   24e90:	add	sp, sp, #12
   24e94:	pop	{pc}		; (ldr pc, [sp], #4)
   24e98:	mov	r3, #6
   24e9c:	str	r3, [r0, #168]	; 0xa8
   24ea0:	mov	r0, #1
   24ea4:	bx	lr
   24ea8:	cmp	r3, #65	; 0x41
   24eac:	beq	24ee4 <myhtml_insertion_mode_after_after_body@@Base+0xc4>
   24eb0:	cmp	r3, #251	; 0xfb
   24eb4:	bne	24ef0 <myhtml_insertion_mode_after_after_body@@Base+0xd0>
   24eb8:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   24ebc:	mov	r0, #0
   24ec0:	b	24e88 <myhtml_insertion_mode_after_after_body@@Base+0x68>
   24ec4:	ldr	r3, [r1, #48]	; 0x30
   24ec8:	tst	r3, #8
   24ecc:	moveq	r3, #6
   24ed0:	streq	r3, [r0, #168]	; 0xa8
   24ed4:	moveq	r0, #1
   24ed8:	beq	24e88 <myhtml_insertion_mode_after_after_body@@Base+0x68>
   24edc:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24ee0:	b	24e88 <myhtml_insertion_mode_after_after_body@@Base+0x68>
   24ee4:	mov	r1, r4
   24ee8:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24eec:	b	24e88 <myhtml_insertion_mode_after_after_body@@Base+0x68>
   24ef0:	mov	r3, #6
   24ef4:	str	r3, [r0, #168]	; 0xa8
   24ef8:	mov	r0, #1
   24efc:	b	24e88 <myhtml_insertion_mode_after_after_body@@Base+0x68>

00024f00 <myhtml_insertion_mode_after_after_frameset@@Base>:
   24f00:	ldr	r3, [r1, #48]	; 0x30
   24f04:	tst	r3, #1
   24f08:	bne	24ff8 <myhtml_insertion_mode_after_after_frameset@@Base+0xf8>
   24f0c:	strd	r4, [sp, #-16]!
   24f10:	str	r6, [sp, #8]
   24f14:	str	lr, [sp, #12]
   24f18:	mov	r4, r1
   24f1c:	mov	r5, r0
   24f20:	ldr	r3, [r1]
   24f24:	cmp	r3, #3
   24f28:	beq	24fd4 <myhtml_insertion_mode_after_after_frameset@@Base+0xd4>
   24f2c:	bls	24f5c <myhtml_insertion_mode_after_after_frameset@@Base+0x5c>
   24f30:	cmp	r3, #92	; 0x5c
   24f34:	beq	24ff0 <myhtml_insertion_mode_after_after_frameset@@Base+0xf0>
   24f38:	cmp	r3, #251	; 0xfb
   24f3c:	beq	24fe4 <myhtml_insertion_mode_after_after_frameset@@Base+0xe4>
   24f40:	cmp	r3, #65	; 0x41
   24f44:	movne	r0, #0
   24f48:	beq	24fd4 <myhtml_insertion_mode_after_after_frameset@@Base+0xd4>
   24f4c:	ldrd	r4, [sp]
   24f50:	ldr	r6, [sp, #8]
   24f54:	add	sp, sp, #12
   24f58:	pop	{pc}		; (ldr pc, [sp], #4)
   24f5c:	cmp	r3, #1
   24f60:	beq	24fa4 <myhtml_insertion_mode_after_after_frameset@@Base+0xa4>
   24f64:	cmp	r3, #2
   24f68:	movne	r0, #0
   24f6c:	bne	24f4c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   24f70:	ldr	r6, [r5, #84]	; 0x54
   24f74:	mov	r0, r5
   24f78:	bl	ff80 <myhtml_tree_node_create@plt>
   24f7c:	mov	r1, r0
   24f80:	mov	r3, #2
   24f84:	str	r3, [r0, #4]
   24f88:	str	r4, [r0, #32]
   24f8c:	ldr	r3, [r6, #8]
   24f90:	str	r3, [r0, #8]
   24f94:	mov	r0, r6
   24f98:	bl	1064c <myhtml_tree_node_add_child@plt>
   24f9c:	mov	r0, #0
   24fa0:	b	24f4c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   24fa4:	ldr	r3, [r1, #48]	; 0x30
   24fa8:	tst	r3, #8
   24fac:	bne	24fcc <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   24fb0:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   24fb4:	subs	r1, r0, #0
   24fb8:	moveq	r0, #0
   24fbc:	beq	24f4c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   24fc0:	mov	r0, r5
   24fc4:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24fc8:	b	24f4c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   24fcc:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24fd0:	b	24f4c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   24fd4:	mov	r1, r4
   24fd8:	mov	r0, r5
   24fdc:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   24fe0:	b	24f4c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   24fe4:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   24fe8:	mov	r0, #0
   24fec:	b	24f4c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   24ff0:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   24ff4:	b	24f4c <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   24ff8:	mov	r0, #0
   24ffc:	bx	lr

00025000 <myhtml_rules_check_for_first_newline@@Base>:
   25000:	ldr	r3, [r0, #180]	; 0xb4
   25004:	tst	r3, #64	; 0x40
   25008:	beq	250c4 <myhtml_rules_check_for_first_newline@@Base+0xc4>
   2500c:	strd	r4, [sp, #-16]!
   25010:	str	r6, [sp, #8]
   25014:	str	lr, [sp, #12]
   25018:	mov	r5, r1
   2501c:	mov	r4, r0
   25020:	ldr	r3, [r0, #180]	; 0xb4
   25024:	tst	r3, #128	; 0x80
   25028:	beq	25038 <myhtml_rules_check_for_first_newline@@Base+0x38>
   2502c:	ldr	r3, [r1]
   25030:	cmp	r3, #1
   25034:	beq	25060 <myhtml_rules_check_for_first_newline@@Base+0x60>
   25038:	ldr	r3, [r4, #180]	; 0xb4
   2503c:	ldr	r2, [r4, #180]	; 0xb4
   25040:	and	r3, r3, #64	; 0x40
   25044:	eor	r3, r3, r2
   25048:	str	r3, [r4, #180]	; 0xb4
   2504c:	mov	r0, #0
   25050:	ldrd	r4, [sp]
   25054:	ldr	r6, [sp, #8]
   25058:	add	sp, sp, #12
   2505c:	pop	{pc}		; (ldr pc, [sp], #4)
   25060:	ldr	r0, [r0, #8]
   25064:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   25068:	ldr	r3, [r5, #12]
   2506c:	cmp	r3, #0
   25070:	moveq	r0, #1
   25074:	beq	25050 <myhtml_rules_check_for_first_newline@@Base+0x50>
   25078:	ldr	r0, [r5, #4]
   2507c:	ldrb	r3, [r0]
   25080:	cmp	r3, #10
   25084:	bne	25038 <myhtml_rules_check_for_first_newline@@Base+0x38>
   25088:	mov	r1, #1
   2508c:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   25090:	str	r0, [r5, #4]
   25094:	ldr	r3, [r5, #12]
   25098:	sub	r3, r3, #1
   2509c:	str	r3, [r5, #12]
   250a0:	cmp	r3, #0
   250a4:	bne	25038 <myhtml_rules_check_for_first_newline@@Base+0x38>
   250a8:	ldr	r3, [r4, #180]	; 0xb4
   250ac:	ldr	r2, [r4, #180]	; 0xb4
   250b0:	and	r3, r3, #64	; 0x40
   250b4:	eor	r3, r3, r2
   250b8:	str	r3, [r4, #180]	; 0xb4
   250bc:	mov	r0, #1
   250c0:	b	25050 <myhtml_rules_check_for_first_newline@@Base+0x50>
   250c4:	mov	r0, #0
   250c8:	bx	lr

000250cc <myhtml_rules_tree_dispatcher@@Base>:
   250cc:	strd	r4, [sp, #-16]!
   250d0:	str	r6, [sp, #8]
   250d4:	str	lr, [sp, #12]
   250d8:	mov	r4, r0
   250dc:	mov	r5, r1
   250e0:	bl	10cf4 <myhtml_rules_check_for_first_newline@plt>
   250e4:	cmp	r0, #0
   250e8:	strne	r5, [r4, #152]	; 0x98
   250ec:	movne	r0, #0
   250f0:	bne	25150 <myhtml_rules_tree_dispatcher@@Base+0x84>
   250f4:	ldr	r3, [r4, #164]	; 0xa4
   250f8:	cmp	r3, #0
   250fc:	movne	r3, #0
   25100:	strne	r3, [r4, #164]	; 0xa4
   25104:	mov	r0, r4
   25108:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   2510c:	mov	r6, r0
   25110:	ldr	r3, [r4, #128]	; 0x80
   25114:	ldr	r3, [r3, #4]
   25118:	cmp	r3, #0
   2511c:	beq	2512c <myhtml_rules_tree_dispatcher@@Base+0x60>
   25120:	ldr	r3, [r0, #8]
   25124:	cmp	r3, #1
   25128:	bne	25160 <myhtml_rules_tree_dispatcher@@Base+0x94>
   2512c:	ldr	r3, [r4]
   25130:	ldr	r2, [r4, #168]	; 0xa8
   25134:	ldr	r3, [r3, #28]
   25138:	ldr	r3, [r3, r2, lsl #2]
   2513c:	mov	r1, r5
   25140:	mov	r0, r4
   25144:	blx	r3
   25148:	cmp	r0, #0
   2514c:	streq	r5, [r4, #152]	; 0x98
   25150:	ldrd	r4, [sp]
   25154:	ldr	r6, [sp, #8]
   25158:	add	sp, sp, #12
   2515c:	pop	{pc}		; (ldr pc, [sp], #4)
   25160:	mov	r1, r0
   25164:	mov	r0, r4
   25168:	bl	ffe0 <myhtml_tree_is_mathml_integration_point@plt>
   2516c:	cmp	r0, #0
   25170:	beq	251b8 <myhtml_rules_tree_dispatcher@@Base+0xec>
   25174:	ldr	r3, [r5]
   25178:	cmp	r3, #1
   2517c:	beq	2518c <myhtml_rules_tree_dispatcher@@Base+0xc0>
   25180:	cmp	r3, #226	; 0xe2
   25184:	cmpne	r3, #221	; 0xdd
   25188:	beq	251b8 <myhtml_rules_tree_dispatcher@@Base+0xec>
   2518c:	ldr	r3, [r5, #48]	; 0x30
   25190:	tst	r3, #1
   25194:	bne	251b8 <myhtml_rules_tree_dispatcher@@Base+0xec>
   25198:	ldr	r3, [r4]
   2519c:	ldr	r2, [r4, #168]	; 0xa8
   251a0:	ldr	r3, [r3, #28]
   251a4:	ldr	r3, [r3, r2, lsl #2]
   251a8:	mov	r1, r5
   251ac:	mov	r0, r4
   251b0:	blx	r3
   251b4:	b	25148 <myhtml_rules_tree_dispatcher@@Base+0x7c>
   251b8:	ldr	r3, [r6, #4]
   251bc:	cmp	r3, #8
   251c0:	bne	251d0 <myhtml_rules_tree_dispatcher@@Base+0x104>
   251c4:	ldr	r3, [r6, #8]
   251c8:	cmp	r3, #2
   251cc:	beq	25228 <myhtml_rules_tree_dispatcher@@Base+0x15c>
   251d0:	mov	r1, r6
   251d4:	mov	r0, r4
   251d8:	bl	1019c <myhtml_tree_is_html_integration_point@plt>
   251dc:	cmp	r0, #0
   251e0:	beq	251fc <myhtml_rules_tree_dispatcher@@Base+0x130>
   251e4:	ldr	r3, [r5, #48]	; 0x30
   251e8:	tst	r3, #1
   251ec:	beq	25260 <myhtml_rules_tree_dispatcher@@Base+0x194>
   251f0:	ldr	r3, [r5]
   251f4:	cmp	r3, #1
   251f8:	beq	25260 <myhtml_rules_tree_dispatcher@@Base+0x194>
   251fc:	ldr	r3, [r5]
   25200:	cmp	r3, #251	; 0xfb
   25204:	bne	25280 <myhtml_rules_tree_dispatcher@@Base+0x1b4>
   25208:	ldr	r3, [r4]
   2520c:	ldr	r2, [r4, #168]	; 0xa8
   25210:	ldr	r3, [r3, #28]
   25214:	ldr	r3, [r3, r2, lsl #2]
   25218:	mov	r1, r5
   2521c:	mov	r0, r4
   25220:	blx	r3
   25224:	b	25148 <myhtml_rules_tree_dispatcher@@Base+0x7c>
   25228:	ldr	r3, [r5]
   2522c:	cmp	r3, #124	; 0x7c
   25230:	bne	251d0 <myhtml_rules_tree_dispatcher@@Base+0x104>
   25234:	ldr	r3, [r5, #48]	; 0x30
   25238:	tst	r3, #1
   2523c:	bne	251d0 <myhtml_rules_tree_dispatcher@@Base+0x104>
   25240:	ldr	r3, [r4]
   25244:	ldr	r2, [r4, #168]	; 0xa8
   25248:	ldr	r3, [r3, #28]
   2524c:	ldr	r3, [r3, r2, lsl #2]
   25250:	mov	r1, r5
   25254:	mov	r0, r4
   25258:	blx	r3
   2525c:	b	25148 <myhtml_rules_tree_dispatcher@@Base+0x7c>
   25260:	ldr	r3, [r4]
   25264:	ldr	r2, [r4, #168]	; 0xa8
   25268:	ldr	r3, [r3, #28]
   2526c:	ldr	r3, [r3, r2, lsl #2]
   25270:	mov	r1, r5
   25274:	mov	r0, r4
   25278:	blx	r3
   2527c:	b	25148 <myhtml_rules_tree_dispatcher@@Base+0x7c>
   25280:	mov	r1, r5
   25284:	mov	r0, r4
   25288:	bl	fdc4 <myhtml_insertion_mode_in_foreign_content@plt>
   2528c:	b	25148 <myhtml_rules_tree_dispatcher@@Base+0x7c>

00025290 <myhtml_rules_init@@Base>:
   25290:	strd	r4, [sp, #-16]!
   25294:	str	r6, [sp, #8]
   25298:	str	lr, [sp, #12]
   2529c:	mov	r5, r0
   252a0:	ldr	r4, [pc, #412]	; 25444 <myhtml_rules_init@@Base+0x1b4>
   252a4:	add	r4, pc, r4
   252a8:	mov	r0, #92	; 0x5c
   252ac:	bl	10c28 <mycore_malloc@plt>
   252b0:	str	r0, [r5, #28]
   252b4:	cmp	r0, #0
   252b8:	beq	2543c <myhtml_rules_init@@Base+0x1ac>
   252bc:	ldr	r3, [pc, #388]	; 25448 <myhtml_rules_init@@Base+0x1b8>
   252c0:	ldr	r3, [r4, r3]
   252c4:	str	r3, [r0]
   252c8:	ldr	r3, [r5, #28]
   252cc:	ldr	r2, [pc, #376]	; 2544c <myhtml_rules_init@@Base+0x1bc>
   252d0:	ldr	r2, [r4, r2]
   252d4:	str	r2, [r3, #4]
   252d8:	ldr	r3, [r5, #28]
   252dc:	ldr	r2, [pc, #364]	; 25450 <myhtml_rules_init@@Base+0x1c0>
   252e0:	ldr	r2, [r4, r2]
   252e4:	str	r2, [r3, #8]
   252e8:	ldr	r3, [r5, #28]
   252ec:	ldr	r2, [pc, #352]	; 25454 <myhtml_rules_init@@Base+0x1c4>
   252f0:	ldr	r2, [r4, r2]
   252f4:	str	r2, [r3, #12]
   252f8:	ldr	r3, [r5, #28]
   252fc:	ldr	r2, [pc, #340]	; 25458 <myhtml_rules_init@@Base+0x1c8>
   25300:	ldr	r2, [r4, r2]
   25304:	str	r2, [r3, #16]
   25308:	ldr	r3, [r5, #28]
   2530c:	ldr	r2, [pc, #328]	; 2545c <myhtml_rules_init@@Base+0x1cc>
   25310:	ldr	r2, [r4, r2]
   25314:	str	r2, [r3, #20]
   25318:	ldr	r3, [r5, #28]
   2531c:	ldr	r2, [pc, #316]	; 25460 <myhtml_rules_init@@Base+0x1d0>
   25320:	ldr	r2, [r4, r2]
   25324:	str	r2, [r3, #24]
   25328:	ldr	r3, [r5, #28]
   2532c:	ldr	r2, [pc, #304]	; 25464 <myhtml_rules_init@@Base+0x1d4>
   25330:	ldr	r2, [r4, r2]
   25334:	str	r2, [r3, #28]
   25338:	ldr	r3, [r5, #28]
   2533c:	ldr	r2, [pc, #292]	; 25468 <myhtml_rules_init@@Base+0x1d8>
   25340:	ldr	r2, [r4, r2]
   25344:	str	r2, [r3, #32]
   25348:	ldr	r3, [r5, #28]
   2534c:	ldr	r2, [pc, #280]	; 2546c <myhtml_rules_init@@Base+0x1dc>
   25350:	ldr	r2, [r4, r2]
   25354:	str	r2, [r3, #36]	; 0x24
   25358:	ldr	r3, [r5, #28]
   2535c:	ldr	r2, [pc, #268]	; 25470 <myhtml_rules_init@@Base+0x1e0>
   25360:	ldr	r2, [r4, r2]
   25364:	str	r2, [r3, #40]	; 0x28
   25368:	ldr	r3, [r5, #28]
   2536c:	ldr	r2, [pc, #256]	; 25474 <myhtml_rules_init@@Base+0x1e4>
   25370:	ldr	r2, [r4, r2]
   25374:	str	r2, [r3, #44]	; 0x2c
   25378:	ldr	r3, [r5, #28]
   2537c:	ldr	r2, [pc, #244]	; 25478 <myhtml_rules_init@@Base+0x1e8>
   25380:	ldr	r2, [r4, r2]
   25384:	str	r2, [r3, #48]	; 0x30
   25388:	ldr	r3, [r5, #28]
   2538c:	ldr	r2, [pc, #232]	; 2547c <myhtml_rules_init@@Base+0x1ec>
   25390:	ldr	r2, [r4, r2]
   25394:	str	r2, [r3, #52]	; 0x34
   25398:	ldr	r3, [r5, #28]
   2539c:	ldr	r2, [pc, #220]	; 25480 <myhtml_rules_init@@Base+0x1f0>
   253a0:	ldr	r2, [r4, r2]
   253a4:	str	r2, [r3, #56]	; 0x38
   253a8:	ldr	r3, [r5, #28]
   253ac:	ldr	r2, [pc, #208]	; 25484 <myhtml_rules_init@@Base+0x1f4>
   253b0:	ldr	r2, [r4, r2]
   253b4:	str	r2, [r3, #60]	; 0x3c
   253b8:	ldr	r3, [r5, #28]
   253bc:	ldr	r2, [pc, #196]	; 25488 <myhtml_rules_init@@Base+0x1f8>
   253c0:	ldr	r2, [r4, r2]
   253c4:	str	r2, [r3, #64]	; 0x40
   253c8:	ldr	r3, [r5, #28]
   253cc:	ldr	r2, [pc, #184]	; 2548c <myhtml_rules_init@@Base+0x1fc>
   253d0:	ldr	r2, [r4, r2]
   253d4:	str	r2, [r3, #68]	; 0x44
   253d8:	ldr	r3, [r5, #28]
   253dc:	ldr	r2, [pc, #172]	; 25490 <myhtml_rules_init@@Base+0x200>
   253e0:	ldr	r2, [r4, r2]
   253e4:	str	r2, [r3, #72]	; 0x48
   253e8:	ldr	r3, [r5, #28]
   253ec:	ldr	r2, [pc, #160]	; 25494 <myhtml_rules_init@@Base+0x204>
   253f0:	ldr	r2, [r4, r2]
   253f4:	str	r2, [r3, #76]	; 0x4c
   253f8:	ldr	r3, [r5, #28]
   253fc:	ldr	r2, [pc, #148]	; 25498 <myhtml_rules_init@@Base+0x208>
   25400:	ldr	r2, [r4, r2]
   25404:	str	r2, [r3, #80]	; 0x50
   25408:	ldr	r3, [r5, #28]
   2540c:	ldr	r2, [pc, #136]	; 2549c <myhtml_rules_init@@Base+0x20c>
   25410:	ldr	r2, [r4, r2]
   25414:	str	r2, [r3, #84]	; 0x54
   25418:	ldr	r3, [r5, #28]
   2541c:	ldr	r2, [pc, #124]	; 254a0 <myhtml_rules_init@@Base+0x210>
   25420:	ldr	r2, [r4, r2]
   25424:	str	r2, [r3, #88]	; 0x58
   25428:	mov	r0, #0
   2542c:	ldrd	r4, [sp]
   25430:	ldr	r6, [sp, #8]
   25434:	add	sp, sp, #12
   25438:	pop	{pc}		; (ldr pc, [sp], #4)
   2543c:	movw	r0, #36964	; 0x9064
   25440:	b	2542c <myhtml_rules_init@@Base+0x19c>
   25444:	andeq	r4, pc, r4, asr sp	; <UNPREDICTABLE>
   25448:	andeq	r0, r0, r0, lsr #16
   2544c:	andeq	r0, r0, ip, asr #18
   25450:	andeq	r0, r0, r8, asr r9
   25454:	andeq	r0, r0, r4, lsr #15
   25458:	strdeq	r0, [r0], -r8
   2545c:	andeq	r0, r0, r4, lsr #18
   25460:	muleq	r0, r0, r8
   25464:	strdeq	r0, [r0], -r8
   25468:	ldrdeq	r0, [r0], -r4
   2546c:	ldrdeq	r0, [r0], -ip
   25470:	andeq	r0, r0, ip, lsl r9
   25474:	andeq	r0, r0, ip, lsl #18
   25478:	andeq	r0, r0, r4, lsl r9
   2547c:	andeq	r0, r0, r0, lsr #15
   25480:	muleq	r0, ip, r9
   25484:	andeq	r0, r0, r0, lsr r8
   25488:	muleq	r0, r4, r8
   2548c:	andeq	r0, r0, r8, asr r7
   25490:	andeq	r0, r0, r4, asr #19
   25494:	andeq	r0, r0, r8, ror #18
   25498:	andeq	r0, r0, ip, lsl r7
   2549c:	andeq	r0, r0, r8, lsl r7
   254a0:	andeq	r0, r0, r8, lsl r8
   254a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   254a8:	strd	r6, [sp, #8]
   254ac:	strd	r8, [sp, #16]
   254b0:	strd	sl, [sp, #24]
   254b4:	str	lr, [sp, #32]
   254b8:	sub	sp, sp, #12
   254bc:	subs	r6, r1, #0
   254c0:	beq	2569c <myhtml_rules_init@@Base+0x40c>
   254c4:	mov	r8, r3
   254c8:	mov	r7, r2
   254cc:	mov	r9, r0
   254d0:	sub	r4, r0, #1
   254d4:	mov	r5, #0
   254d8:	mov	r1, r5
   254dc:	ldr	fp, [pc, #480]	; 256c4 <myhtml_rules_init@@Base+0x434>
   254e0:	add	fp, pc, fp
   254e4:	ldr	sl, [pc, #476]	; 256c8 <myhtml_rules_init@@Base+0x438>
   254e8:	add	sl, pc, sl
   254ec:	ldr	r3, [pc, #472]	; 256cc <myhtml_rules_init@@Base+0x43c>
   254f0:	add	r3, pc, r3
   254f4:	str	r3, [sp, #4]
   254f8:	b	2561c <myhtml_rules_init@@Base+0x38c>
   254fc:	cmp	r3, #38	; 0x26
   25500:	bne	2560c <myhtml_rules_init@@Base+0x37c>
   25504:	cmp	r1, #0
   25508:	beq	25524 <myhtml_rules_init@@Base+0x294>
   2550c:	sub	r0, r5, r1
   25510:	mov	r2, r8
   25514:	add	r0, r9, r0
   25518:	blx	r7
   2551c:	cmp	r0, #0
   25520:	bne	256a4 <myhtml_rules_init@@Base+0x414>
   25524:	mov	r2, r8
   25528:	mov	r1, #5
   2552c:	ldr	r0, [pc, #412]	; 256d0 <myhtml_rules_init@@Base+0x440>
   25530:	add	r0, pc, r0
   25534:	blx	r7
   25538:	subs	r1, r0, #0
   2553c:	beq	25610 <myhtml_rules_init@@Base+0x380>
   25540:	mov	r1, #2
   25544:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   25548:	cmp	r1, #0
   2554c:	beq	25568 <myhtml_rules_init@@Base+0x2d8>
   25550:	sub	r0, r5, r1
   25554:	mov	r2, r8
   25558:	add	r0, r9, r0
   2555c:	blx	r7
   25560:	cmp	r0, #0
   25564:	bne	256ac <myhtml_rules_init@@Base+0x41c>
   25568:	mov	r2, r8
   2556c:	mov	r1, #4
   25570:	mov	r0, fp
   25574:	blx	r7
   25578:	subs	r1, r0, #0
   2557c:	beq	25610 <myhtml_rules_init@@Base+0x380>
   25580:	mov	r1, #2
   25584:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   25588:	cmp	r1, #0
   2558c:	beq	255a8 <myhtml_rules_init@@Base+0x318>
   25590:	sub	r0, r5, r1
   25594:	mov	r2, r8
   25598:	add	r0, r9, r0
   2559c:	blx	r7
   255a0:	cmp	r0, #0
   255a4:	bne	256b4 <myhtml_rules_init@@Base+0x424>
   255a8:	mov	r2, r8
   255ac:	mov	r1, #4
   255b0:	mov	r0, sl
   255b4:	blx	r7
   255b8:	subs	r1, r0, #0
   255bc:	beq	25610 <myhtml_rules_init@@Base+0x380>
   255c0:	mov	r1, #2
   255c4:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   255c8:	cmp	r1, #0
   255cc:	beq	255ec <myhtml_rules_init@@Base+0x35c>
   255d0:	sub	r0, r5, r1
   255d4:	mov	r2, r8
   255d8:	sub	r1, r1, #1
   255dc:	add	r0, r9, r0
   255e0:	blx	r7
   255e4:	cmp	r0, #0
   255e8:	bne	256bc <myhtml_rules_init@@Base+0x42c>
   255ec:	mov	r2, r8
   255f0:	mov	r1, #6
   255f4:	ldr	r0, [sp, #4]
   255f8:	blx	r7
   255fc:	subs	r1, r0, #0
   25600:	beq	25610 <myhtml_rules_init@@Base+0x380>
   25604:	mov	r1, #2
   25608:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   2560c:	add	r1, r1, #1
   25610:	add	r5, r5, #1
   25614:	cmp	r6, r5
   25618:	beq	2565c <myhtml_rules_init@@Base+0x3cc>
   2561c:	add	r4, r4, #1
   25620:	ldrb	r3, [r4]
   25624:	cmp	r3, #60	; 0x3c
   25628:	beq	25548 <myhtml_rules_init@@Base+0x2b8>
   2562c:	bls	254fc <myhtml_rules_init@@Base+0x26c>
   25630:	cmp	r3, #62	; 0x3e
   25634:	beq	25588 <myhtml_rules_init@@Base+0x2f8>
   25638:	cmp	r3, #160	; 0xa0
   2563c:	bne	2560c <myhtml_rules_init@@Base+0x37c>
   25640:	cmp	r5, #0
   25644:	beq	25654 <myhtml_rules_init@@Base+0x3c4>
   25648:	ldrb	r3, [r4, #-1]
   2564c:	cmp	r3, #194	; 0xc2
   25650:	beq	255c8 <myhtml_rules_init@@Base+0x338>
   25654:	add	r1, r1, #1
   25658:	b	25610 <myhtml_rules_init@@Base+0x380>
   2565c:	cmp	r1, #0
   25660:	beq	2567c <myhtml_rules_init@@Base+0x3ec>
   25664:	sub	r5, r5, r1
   25668:	mov	r2, r8
   2566c:	add	r0, r9, r5
   25670:	blx	r7
   25674:	subs	r1, r0, #0
   25678:	movne	r1, #2
   2567c:	mov	r0, r1
   25680:	add	sp, sp, #12
   25684:	ldrd	r4, [sp]
   25688:	ldrd	r6, [sp, #8]
   2568c:	ldrd	r8, [sp, #16]
   25690:	ldrd	sl, [sp, #24]
   25694:	add	sp, sp, #32
   25698:	pop	{pc}		; (ldr pc, [sp], #4)
   2569c:	mov	r1, r6
   256a0:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   256a4:	mov	r1, #2
   256a8:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   256ac:	mov	r1, #2
   256b0:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   256b4:	mov	r1, #2
   256b8:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   256bc:	mov	r1, #2
   256c0:	b	2567c <myhtml_rules_init@@Base+0x3ec>
   256c4:			; <UNDEFINED> instruction: 0x000dafbc
   256c8:			; <UNDEFINED> instruction: 0x000dafbc
   256cc:			; <UNDEFINED> instruction: 0x000dafbc
   256d0:	andeq	sl, sp, r4, ror #30
   256d4:	ldr	ip, [r0, #4]
   256d8:	sub	r3, ip, #1
   256dc:	cmp	r3, #141	; 0x8d
   256e0:	addls	pc, pc, r3, lsl #2
   256e4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   256e8:	b	259c4 <myhtml_rules_init@@Base+0x734>
   256ec:	b	259c4 <myhtml_rules_init@@Base+0x734>
   256f0:	b	259c4 <myhtml_rules_init@@Base+0x734>
   256f4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   256f8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   256fc:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25700:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25704:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25708:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2570c:	b	25920 <myhtml_rules_init@@Base+0x690>
   25710:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25714:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25718:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2571c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25720:	b	25920 <myhtml_rules_init@@Base+0x690>
   25724:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25728:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2572c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25730:	b	25920 <myhtml_rules_init@@Base+0x690>
   25734:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25738:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2573c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25740:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25744:	b	25920 <myhtml_rules_init@@Base+0x690>
   25748:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2574c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25750:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25754:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25758:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2575c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25760:	b	25920 <myhtml_rules_init@@Base+0x690>
   25764:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25768:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2576c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25770:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25774:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25778:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2577c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25780:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25784:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25788:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2578c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25790:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25794:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25798:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2579c:	b	25920 <myhtml_rules_init@@Base+0x690>
   257a0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257a4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257a8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257ac:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257b0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257b4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257b8:	b	25920 <myhtml_rules_init@@Base+0x690>
   257bc:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257c0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257c4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257c8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257cc:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257d0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257d4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257d8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257dc:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257e0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257e4:	b	25920 <myhtml_rules_init@@Base+0x690>
   257e8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257ec:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257f0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257f4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   257f8:	b	25920 <myhtml_rules_init@@Base+0x690>
   257fc:	b	25920 <myhtml_rules_init@@Base+0x690>
   25800:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25804:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25808:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2580c:	b	25920 <myhtml_rules_init@@Base+0x690>
   25810:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25814:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25818:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2581c:	b	25920 <myhtml_rules_init@@Base+0x690>
   25820:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25824:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25828:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2582c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25830:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25834:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25838:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2583c:	b	25920 <myhtml_rules_init@@Base+0x690>
   25840:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25844:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25848:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2584c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25850:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25854:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25858:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2585c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25860:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25864:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25868:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2586c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25870:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25874:	b	25920 <myhtml_rules_init@@Base+0x690>
   25878:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2587c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25880:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25884:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25888:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2588c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25890:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25894:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25898:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2589c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258a0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258a4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258a8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258ac:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258b0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258b4:	b	25920 <myhtml_rules_init@@Base+0x690>
   258b8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258bc:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258c0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258c4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258c8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258cc:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258d0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258d4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258d8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258dc:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258e0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258e4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258e8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258ec:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258f0:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258f4:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258f8:	b	2592c <myhtml_rules_init@@Base+0x69c>
   258fc:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25900:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25904:	b	25920 <myhtml_rules_init@@Base+0x690>
   25908:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2590c:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25910:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25914:	b	2592c <myhtml_rules_init@@Base+0x69c>
   25918:	b	2592c <myhtml_rules_init@@Base+0x69c>
   2591c:	b	25920 <myhtml_rules_init@@Base+0x690>
   25920:	ldr	r3, [r0, #8]
   25924:	cmp	r3, #1
   25928:	beq	259cc <myhtml_rules_init@@Base+0x73c>
   2592c:	strd	r4, [sp, #-16]!
   25930:	str	r6, [sp, #8]
   25934:	str	lr, [sp, #12]
   25938:	sub	sp, sp, #8
   2593c:	mov	r5, r2
   25940:	mov	r4, r1
   25944:	add	r2, sp, #4
   25948:	mov	r1, ip
   2594c:	ldr	r0, [r0, #40]	; 0x28
   25950:	bl	10a84 <myhtml_tag_name_by_id@plt>
   25954:	mov	r6, r0
   25958:	mov	r2, r5
   2595c:	mov	r1, #2
   25960:	ldr	r0, [pc, #108]	; 259d4 <myhtml_rules_init@@Base+0x744>
   25964:	add	r0, pc, r0
   25968:	blx	r4
   2596c:	cmp	r0, #0
   25970:	movne	r0, #2
   25974:	bne	259b0 <myhtml_rules_init@@Base+0x720>
   25978:	mov	r2, r5
   2597c:	ldr	r1, [sp, #4]
   25980:	mov	r0, r6
   25984:	blx	r4
   25988:	cmp	r0, #0
   2598c:	movne	r0, #2
   25990:	bne	259b0 <myhtml_rules_init@@Base+0x720>
   25994:	mov	r2, r5
   25998:	mov	r1, #1
   2599c:	ldr	r0, [pc, #52]	; 259d8 <myhtml_rules_init@@Base+0x748>
   259a0:	add	r0, pc, r0
   259a4:	blx	r4
   259a8:	cmp	r0, #0
   259ac:	movne	r0, #2
   259b0:	add	sp, sp, #8
   259b4:	ldrd	r4, [sp]
   259b8:	ldr	r6, [sp, #8]
   259bc:	add	sp, sp, #12
   259c0:	pop	{pc}		; (ldr pc, [sp], #4)
   259c4:	mov	r0, #0
   259c8:	bx	lr
   259cc:	mov	r0, #0
   259d0:	bx	lr
   259d4:	andeq	sl, sp, r0, asr fp
   259d8:	andeq	sl, sp, r8, lsl fp

000259dc <myhtml_serialization_node_callback@@Base>:
   259dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   259e0:	strd	r6, [sp, #8]
   259e4:	strd	r8, [sp, #16]
   259e8:	strd	sl, [sp, #24]
   259ec:	str	lr, [sp, #32]
   259f0:	sub	sp, sp, #28
   259f4:	mov	r7, r0
   259f8:	mov	r4, r1
   259fc:	mov	r5, r2
   25a00:	ldr	r6, [r0, #4]
   25a04:	cmp	r6, #2
   25a08:	beq	25b84 <myhtml_serialization_node_callback@@Base+0x1a8>
   25a0c:	cmp	r6, #3
   25a10:	beq	25bf0 <myhtml_serialization_node_callback@@Base+0x214>
   25a14:	cmp	r6, #1
   25a18:	beq	25ab0 <myhtml_serialization_node_callback@@Base+0xd4>
   25a1c:	add	r2, sp, #16
   25a20:	mov	r1, r6
   25a24:	ldr	r0, [r0, #40]	; 0x28
   25a28:	bl	10a84 <myhtml_tag_name_by_id@plt>
   25a2c:	mov	r6, r0
   25a30:	mov	r2, r5
   25a34:	mov	r1, #1
   25a38:	ldr	r0, [pc, #1652]	; 260b4 <myhtml_serialization_node_callback@@Base+0x6d8>
   25a3c:	add	r0, pc, r0
   25a40:	blx	r4
   25a44:	cmp	r0, #0
   25a48:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25a4c:	mov	r2, r5
   25a50:	ldr	r1, [sp, #16]
   25a54:	mov	r0, r6
   25a58:	blx	r4
   25a5c:	cmp	r0, #0
   25a60:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25a64:	ldr	r3, [r7, #32]
   25a68:	cmp	r3, #0
   25a6c:	beq	26094 <myhtml_serialization_node_callback@@Base+0x6b8>
   25a70:	ldr	r7, [r3, #40]	; 0x28
   25a74:	cmp	r7, #0
   25a78:	beq	26094 <myhtml_serialization_node_callback@@Base+0x6b8>
   25a7c:	ldr	r3, [pc, #1588]	; 260b8 <myhtml_serialization_node_callback@@Base+0x6dc>
   25a80:	add	r3, pc, r3
   25a84:	str	r3, [sp, #4]
   25a88:	ldr	r3, [pc, #1580]	; 260bc <myhtml_serialization_node_callback@@Base+0x6e0>
   25a8c:	add	r3, pc, r3
   25a90:	str	r3, [sp, #12]
   25a94:	ldr	r3, [pc, #1572]	; 260c0 <myhtml_serialization_node_callback@@Base+0x6e4>
   25a98:	add	r3, pc, r3
   25a9c:	str	r3, [sp]
   25aa0:	ldr	r3, [pc, #1564]	; 260c4 <myhtml_serialization_node_callback@@Base+0x6e8>
   25aa4:	add	r3, pc, r3
   25aa8:	str	r3, [sp, #8]
   25aac:	b	25fe8 <myhtml_serialization_node_callback@@Base+0x60c>
   25ab0:	ldr	r1, [r0, #32]
   25ab4:	cmp	r1, #0
   25ab8:	beq	25b64 <myhtml_serialization_node_callback@@Base+0x188>
   25abc:	ldr	r0, [r1, #4]
   25ac0:	cmp	r0, #0
   25ac4:	beq	25b64 <myhtml_serialization_node_callback@@Base+0x188>
   25ac8:	ldr	r3, [r7, #24]
   25acc:	cmp	r3, #0
   25ad0:	beq	25b18 <myhtml_serialization_node_callback@@Base+0x13c>
   25ad4:	ldr	r3, [r3, #4]
   25ad8:	cmp	r3, #101	; 0x65
   25adc:	beq	25b50 <myhtml_serialization_node_callback@@Base+0x174>
   25ae0:	bls	25b38 <myhtml_serialization_node_callback@@Base+0x15c>
   25ae4:	cmp	r3, #120	; 0x78
   25ae8:	beq	25b50 <myhtml_serialization_node_callback@@Base+0x174>
   25aec:	cmp	r3, #143	; 0x8f
   25af0:	beq	25b50 <myhtml_serialization_node_callback@@Base+0x174>
   25af4:	cmp	r3, #112	; 0x70
   25af8:	beq	25b50 <myhtml_serialization_node_callback@@Base+0x174>
   25afc:	mov	r3, r5
   25b00:	mov	r2, r4
   25b04:	ldr	r1, [r1, #12]
   25b08:	bl	254a4 <myhtml_rules_init@@Base+0x214>
   25b0c:	cmp	r0, #0
   25b10:	beq	25b64 <myhtml_serialization_node_callback@@Base+0x188>
   25b14:	b	25b30 <myhtml_serialization_node_callback@@Base+0x154>
   25b18:	mov	r3, r2
   25b1c:	mov	r2, r4
   25b20:	ldr	r1, [r1, #12]
   25b24:	bl	254a4 <myhtml_rules_init@@Base+0x214>
   25b28:	cmp	r0, #0
   25b2c:	beq	25b64 <myhtml_serialization_node_callback@@Base+0x188>
   25b30:	mov	r0, #2
   25b34:	b	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25b38:	cmp	r3, #67	; 0x43
   25b3c:	beq	25b50 <myhtml_serialization_node_callback@@Base+0x174>
   25b40:	bcc	25afc <myhtml_serialization_node_callback@@Base+0x120>
   25b44:	sub	r3, r3, #91	; 0x5b
   25b48:	cmp	r3, #1
   25b4c:	bhi	25afc <myhtml_serialization_node_callback@@Base+0x120>
   25b50:	mov	r2, r5
   25b54:	ldr	r1, [r1, #12]
   25b58:	blx	r4
   25b5c:	cmp	r0, #0
   25b60:	bne	25b30 <myhtml_serialization_node_callback@@Base+0x154>
   25b64:	mov	r0, #0
   25b68:	add	sp, sp, #28
   25b6c:	ldrd	r4, [sp]
   25b70:	ldrd	r6, [sp, #8]
   25b74:	ldrd	r8, [sp, #16]
   25b78:	ldrd	sl, [sp, #24]
   25b7c:	add	sp, sp, #32
   25b80:	pop	{pc}		; (ldr pc, [sp], #4)
   25b84:	mov	r1, #4
   25b88:	ldr	r0, [pc, #1336]	; 260c8 <myhtml_serialization_node_callback@@Base+0x6ec>
   25b8c:	add	r0, pc, r0
   25b90:	blx	r4
   25b94:	cmp	r0, #0
   25b98:	movne	r0, r6
   25b9c:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25ba0:	ldr	r3, [r7, #32]
   25ba4:	cmp	r3, #0
   25ba8:	beq	25bd0 <myhtml_serialization_node_callback@@Base+0x1f4>
   25bac:	ldr	r0, [r3, #4]
   25bb0:	cmp	r0, #0
   25bb4:	beq	25bd0 <myhtml_serialization_node_callback@@Base+0x1f4>
   25bb8:	mov	r2, r5
   25bbc:	ldr	r1, [r3, #12]
   25bc0:	blx	r4
   25bc4:	cmp	r0, #0
   25bc8:	movne	r0, r6
   25bcc:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25bd0:	mov	r2, r5
   25bd4:	mov	r1, #3
   25bd8:	ldr	r0, [pc, #1260]	; 260cc <myhtml_serialization_node_callback@@Base+0x6f0>
   25bdc:	add	r0, pc, r0
   25be0:	blx	r4
   25be4:	cmp	r0, #0
   25be8:	movne	r0, r6
   25bec:	b	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25bf0:	mov	r1, #9
   25bf4:	ldr	r0, [pc, #1236]	; 260d0 <myhtml_serialization_node_callback@@Base+0x6f4>
   25bf8:	add	r0, pc, r0
   25bfc:	blx	r4
   25c00:	cmp	r0, #0
   25c04:	movne	r0, #2
   25c08:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25c0c:	mov	r2, r5
   25c10:	mov	r1, #1
   25c14:	ldr	r0, [pc, #1208]	; 260d4 <myhtml_serialization_node_callback@@Base+0x6f8>
   25c18:	add	r0, pc, r0
   25c1c:	blx	r4
   25c20:	cmp	r0, #0
   25c24:	movne	r0, #2
   25c28:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25c2c:	ldr	r3, [r7, #32]
   25c30:	cmp	r3, #0
   25c34:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25c38:	ldr	r6, [r3, #40]	; 0x28
   25c3c:	cmp	r6, #0
   25c40:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25c44:	ldr	r0, [r6, #8]
   25c48:	cmp	r0, #0
   25c4c:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25c50:	ldr	r1, [r6, #16]
   25c54:	cmp	r1, #0
   25c58:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25c5c:	mov	r2, r5
   25c60:	blx	r4
   25c64:	cmp	r0, #0
   25c68:	movne	r0, #2
   25c6c:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25c70:	ldr	r6, [r6]
   25c74:	cmp	r6, #0
   25c78:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25c7c:	ldr	r3, [r6, #36]	; 0x24
   25c80:	cmp	r3, #6
   25c84:	beq	25ca8 <myhtml_serialization_node_callback@@Base+0x2cc>
   25c88:	mov	r2, r5
   25c8c:	mov	r1, #1
   25c90:	ldr	r0, [pc, #1088]	; 260d8 <myhtml_serialization_node_callback@@Base+0x6fc>
   25c94:	add	r0, pc, r0
   25c98:	blx	r4
   25c9c:	cmp	r0, #0
   25ca0:	movne	r0, #2
   25ca4:	b	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25ca8:	ldr	r1, [pc, #1068]	; 260dc <myhtml_serialization_node_callback@@Base+0x700>
   25cac:	add	r1, pc, r1
   25cb0:	ldr	r0, [r6, #28]
   25cb4:	bl	104c0 <mycore_strcasecmp@plt>
   25cb8:	cmp	r0, #0
   25cbc:	bne	25d80 <myhtml_serialization_node_callback@@Base+0x3a4>
   25cc0:	ldr	r6, [r6]
   25cc4:	mov	r7, #0
   25cc8:	cmp	r6, #0
   25ccc:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25cd0:	ldr	r3, [r6, #36]	; 0x24
   25cd4:	cmp	r3, #0
   25cd8:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25cdc:	cmp	r7, #0
   25ce0:	beq	25cf0 <myhtml_serialization_node_callback@@Base+0x314>
   25ce4:	ldr	r3, [r7, #36]	; 0x24
   25ce8:	cmp	r3, #0
   25cec:	bne	25d10 <myhtml_serialization_node_callback@@Base+0x334>
   25cf0:	mov	r2, r5
   25cf4:	mov	r1, #7
   25cf8:	ldr	r0, [pc, #992]	; 260e0 <myhtml_serialization_node_callback@@Base+0x704>
   25cfc:	add	r0, pc, r0
   25d00:	blx	r4
   25d04:	cmp	r0, #0
   25d08:	movne	r0, #2
   25d0c:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25d10:	mov	r2, r5
   25d14:	mov	r1, #2
   25d18:	ldr	r0, [pc, #964]	; 260e4 <myhtml_serialization_node_callback@@Base+0x708>
   25d1c:	add	r0, pc, r0
   25d20:	blx	r4
   25d24:	cmp	r0, #0
   25d28:	movne	r0, #2
   25d2c:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25d30:	ldr	r0, [r6, #28]
   25d34:	cmp	r0, #0
   25d38:	beq	25d5c <myhtml_serialization_node_callback@@Base+0x380>
   25d3c:	ldr	r1, [r6, #36]	; 0x24
   25d40:	cmp	r1, #0
   25d44:	beq	25d5c <myhtml_serialization_node_callback@@Base+0x380>
   25d48:	mov	r2, r5
   25d4c:	blx	r4
   25d50:	cmp	r0, #0
   25d54:	movne	r0, #2
   25d58:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25d5c:	mov	r2, r5
   25d60:	mov	r1, #1
   25d64:	ldr	r0, [pc, #892]	; 260e8 <myhtml_serialization_node_callback@@Base+0x70c>
   25d68:	add	r0, pc, r0
   25d6c:	blx	r4
   25d70:	cmp	r0, #0
   25d74:	movne	r0, #2
   25d78:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25d7c:	b	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25d80:	ldr	r1, [pc, #868]	; 260ec <myhtml_serialization_node_callback@@Base+0x710>
   25d84:	add	r1, pc, r1
   25d88:	ldr	r0, [r6, #28]
   25d8c:	bl	104c0 <mycore_strcasecmp@plt>
   25d90:	cmp	r0, #0
   25d94:	bne	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25d98:	ldr	r7, [r6]
   25d9c:	cmp	r7, #0
   25da0:	beq	25c88 <myhtml_serialization_node_callback@@Base+0x2ac>
   25da4:	ldr	r6, [r7]
   25da8:	ldr	r3, [r7, #36]	; 0x24
   25dac:	cmp	r3, #0
   25db0:	beq	25cc8 <myhtml_serialization_node_callback@@Base+0x2ec>
   25db4:	mov	r2, r5
   25db8:	mov	r1, #9
   25dbc:	ldr	r0, [pc, #812]	; 260f0 <myhtml_serialization_node_callback@@Base+0x714>
   25dc0:	add	r0, pc, r0
   25dc4:	blx	r4
   25dc8:	cmp	r0, #0
   25dcc:	movne	r0, #2
   25dd0:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25dd4:	mov	r2, r5
   25dd8:	ldr	r1, [r7, #36]	; 0x24
   25ddc:	ldr	r0, [r7, #28]
   25de0:	blx	r4
   25de4:	cmp	r0, #0
   25de8:	movne	r0, #2
   25dec:	bne	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25df0:	mov	r2, r5
   25df4:	mov	r1, #1
   25df8:	ldr	r0, [pc, #756]	; 260f4 <myhtml_serialization_node_callback@@Base+0x718>
   25dfc:	add	r0, pc, r0
   25e00:	blx	r4
   25e04:	cmp	r0, #0
   25e08:	movne	r0, #2
   25e0c:	beq	25cc8 <myhtml_serialization_node_callback@@Base+0x2ec>
   25e10:	b	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25e14:	mov	r2, r5
   25e18:	mov	r1, #4
   25e1c:	ldr	r0, [sp, #12]
   25e20:	blx	r4
   25e24:	cmp	r0, #0
   25e28:	beq	2601c <myhtml_serialization_node_callback@@Base+0x640>
   25e2c:	b	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25e30:	ldr	r0, [r7, #8]
   25e34:	cmp	r0, #0
   25e38:	beq	2601c <myhtml_serialization_node_callback@@Base+0x640>
   25e3c:	ldr	r3, [r7, #16]
   25e40:	cmp	r3, #5
   25e44:	bne	2601c <myhtml_serialization_node_callback@@Base+0x640>
   25e48:	ldr	r1, [pc, #680]	; 260f8 <myhtml_serialization_node_callback@@Base+0x71c>
   25e4c:	add	r1, pc, r1
   25e50:	bl	fb9c <mycore_strcmp@plt>
   25e54:	cmp	r0, #0
   25e58:	beq	2601c <myhtml_serialization_node_callback@@Base+0x640>
   25e5c:	mov	r2, r5
   25e60:	mov	r1, #6
   25e64:	ldr	r0, [pc, #656]	; 260fc <myhtml_serialization_node_callback@@Base+0x720>
   25e68:	add	r0, pc, r0
   25e6c:	blx	r4
   25e70:	cmp	r0, #0
   25e74:	beq	2601c <myhtml_serialization_node_callback@@Base+0x640>
   25e78:	b	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25e7c:	mov	r2, r5
   25e80:	mov	r1, #6
   25e84:	ldr	r0, [pc, #628]	; 26100 <myhtml_serialization_node_callback@@Base+0x724>
   25e88:	add	r0, pc, r0
   25e8c:	blx	r4
   25e90:	cmp	r0, #0
   25e94:	beq	2601c <myhtml_serialization_node_callback@@Base+0x640>
   25e98:	b	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25e9c:	cmp	r1, #0
   25ea0:	beq	25ebc <myhtml_serialization_node_callback@@Base+0x4e0>
   25ea4:	sub	r0, r6, r1
   25ea8:	mov	r2, r5
   25eac:	add	r0, r9, r0
   25eb0:	blx	r4
   25eb4:	cmp	r0, #0
   25eb8:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25ebc:	mov	r2, r5
   25ec0:	mov	r1, #5
   25ec4:	ldr	r0, [sp]
   25ec8:	blx	r4
   25ecc:	subs	r1, r0, #0
   25ed0:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25ed4:	add	r6, r6, #1
   25ed8:	cmp	sl, r6
   25edc:	beq	25fa0 <myhtml_serialization_node_callback@@Base+0x5c4>
   25ee0:	add	r8, r8, #1
   25ee4:	ldrb	r3, [r8]
   25ee8:	cmp	r3, #38	; 0x26
   25eec:	beq	25e9c <myhtml_serialization_node_callback@@Base+0x4c0>
   25ef0:	cmp	r3, #160	; 0xa0
   25ef4:	beq	25f44 <myhtml_serialization_node_callback@@Base+0x568>
   25ef8:	cmp	r3, #34	; 0x22
   25efc:	addne	r1, r1, #1
   25f00:	bne	25ed4 <myhtml_serialization_node_callback@@Base+0x4f8>
   25f04:	cmp	r1, #0
   25f08:	beq	25f24 <myhtml_serialization_node_callback@@Base+0x548>
   25f0c:	sub	r0, r6, r1
   25f10:	mov	r2, r5
   25f14:	add	r0, r9, r0
   25f18:	blx	r4
   25f1c:	cmp	r0, #0
   25f20:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25f24:	mov	r2, r5
   25f28:	mov	r1, #6
   25f2c:	mov	r0, fp
   25f30:	blx	r4
   25f34:	subs	r1, r0, #0
   25f38:	beq	25ed4 <myhtml_serialization_node_callback@@Base+0x4f8>
   25f3c:	mov	r0, #2
   25f40:	b	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   25f44:	cmp	r6, #0
   25f48:	beq	25f58 <myhtml_serialization_node_callback@@Base+0x57c>
   25f4c:	ldrb	r3, [r8, #-1]
   25f50:	cmp	r3, #194	; 0xc2
   25f54:	beq	25f60 <myhtml_serialization_node_callback@@Base+0x584>
   25f58:	add	r1, r1, #1
   25f5c:	b	25ed4 <myhtml_serialization_node_callback@@Base+0x4f8>
   25f60:	cmp	r1, #0
   25f64:	beq	25f84 <myhtml_serialization_node_callback@@Base+0x5a8>
   25f68:	sub	r0, r6, r1
   25f6c:	mov	r2, r5
   25f70:	sub	r1, r1, #1
   25f74:	add	r0, r9, r0
   25f78:	blx	r4
   25f7c:	cmp	r0, #0
   25f80:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25f84:	mov	r2, r5
   25f88:	mov	r1, #6
   25f8c:	ldr	r0, [sp, #8]
   25f90:	blx	r4
   25f94:	subs	r1, r0, #0
   25f98:	beq	25ed4 <myhtml_serialization_node_callback@@Base+0x4f8>
   25f9c:	b	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25fa0:	cmp	r1, #0
   25fa4:	beq	25fc0 <myhtml_serialization_node_callback@@Base+0x5e4>
   25fa8:	sub	r0, sl, r1
   25fac:	mov	r2, r5
   25fb0:	add	r0, r9, r0
   25fb4:	blx	r4
   25fb8:	cmp	r0, #0
   25fbc:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25fc0:	mov	r2, r5
   25fc4:	mov	r1, #1
   25fc8:	ldr	r0, [pc, #308]	; 26104 <myhtml_serialization_node_callback@@Base+0x728>
   25fcc:	add	r0, pc, r0
   25fd0:	blx	r4
   25fd4:	cmp	r0, #0
   25fd8:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   25fdc:	ldr	r7, [r7]
   25fe0:	cmp	r7, #0
   25fe4:	beq	26094 <myhtml_serialization_node_callback@@Base+0x6b8>
   25fe8:	mov	r2, r5
   25fec:	mov	r1, #1
   25ff0:	ldr	r0, [sp, #4]
   25ff4:	blx	r4
   25ff8:	cmp	r0, #0
   25ffc:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   26000:	ldr	r3, [r7, #64]	; 0x40
   26004:	cmp	r3, #5
   26008:	beq	25e14 <myhtml_serialization_node_callback@@Base+0x438>
   2600c:	cmp	r3, #6
   26010:	beq	25e30 <myhtml_serialization_node_callback@@Base+0x454>
   26014:	cmp	r3, #4
   26018:	beq	25e7c <myhtml_serialization_node_callback@@Base+0x4a0>
   2601c:	add	r1, sp, #20
   26020:	mov	r0, r7
   26024:	bl	10a9c <myhtml_attribute_key@plt>
   26028:	cmp	r0, #0
   2602c:	beq	26044 <myhtml_serialization_node_callback@@Base+0x668>
   26030:	mov	r2, r5
   26034:	ldr	r1, [sp, #20]
   26038:	blx	r4
   2603c:	cmp	r0, #0
   26040:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   26044:	mov	r2, r5
   26048:	mov	r1, #2
   2604c:	ldr	r0, [pc, #180]	; 26108 <myhtml_serialization_node_callback@@Base+0x72c>
   26050:	add	r0, pc, r0
   26054:	blx	r4
   26058:	subs	r6, r0, #0
   2605c:	bne	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   26060:	add	r1, sp, #20
   26064:	mov	r0, r7
   26068:	bl	10424 <myhtml_attribute_value@plt>
   2606c:	subs	r9, r0, #0
   26070:	beq	25fc0 <myhtml_serialization_node_callback@@Base+0x5e4>
   26074:	ldr	sl, [sp, #20]
   26078:	cmp	sl, #0
   2607c:	beq	25fc0 <myhtml_serialization_node_callback@@Base+0x5e4>
   26080:	sub	r8, r9, #1
   26084:	mov	r1, r6
   26088:	ldr	fp, [pc, #124]	; 2610c <myhtml_serialization_node_callback@@Base+0x730>
   2608c:	add	fp, pc, fp
   26090:	b	25ee0 <myhtml_serialization_node_callback@@Base+0x504>
   26094:	mov	r2, r5
   26098:	mov	r1, #1
   2609c:	ldr	r0, [pc, #108]	; 26110 <myhtml_serialization_node_callback@@Base+0x734>
   260a0:	add	r0, pc, r0
   260a4:	blx	r4
   260a8:	cmp	r0, #0
   260ac:	beq	25b68 <myhtml_serialization_node_callback@@Base+0x18c>
   260b0:	b	25f3c <myhtml_serialization_node_callback@@Base+0x560>
   260b4:	andeq	sl, sp, r4, asr #21
   260b8:	andeq	sl, sp, r4, asr sl
   260bc:	andeq	sl, sp, r8, ror sl
   260c0:	strdeq	sl, [sp], -ip
   260c4:	andeq	sl, sp, r8, lsl #20
   260c8:	andeq	sl, sp, r0, lsr r9
   260cc:	andeq	sl, sp, r8, ror #17
   260d0:	ldrdeq	sl, [sp], -r0
   260d4:			; <UNDEFINED> instruction: 0x000da8bc
   260d8:	andeq	sl, sp, r4, lsr #16
   260dc:	andeq	sl, sp, ip, lsr #16
   260e0:	strdeq	sl, [sp], -r8
   260e4:	andeq	sl, sp, r0, ror #15
   260e8:	andeq	sl, sp, r8, lsl #15
   260ec:	andeq	sl, sp, ip, asr r7
   260f0:	andeq	sl, sp, r8, lsr #14
   260f4:	strdeq	sl, [sp], -r4
   260f8:	andeq	sl, sp, r0, asr #13
   260fc:	andeq	sl, sp, ip, lsr #13
   26100:	muleq	sp, r4, r6
   26104:	andeq	sl, sp, r4, lsr #10
   26108:	ldrdeq	sl, [sp], -r4
   2610c:	muleq	sp, ip, r4
   26110:	andeq	sl, sp, r8, lsl r4

00026114 <myhtml_serialization_tree_callback@@Base>:
   26114:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26118:	strd	r6, [sp, #8]
   2611c:	str	r8, [sp, #16]
   26120:	str	lr, [sp, #20]
   26124:	subs	r8, r0, #0
   26128:	moveq	r7, #0
   2612c:	beq	26200 <myhtml_serialization_tree_callback@@Base+0xec>
   26130:	mov	r6, r2
   26134:	mov	r5, r1
   26138:	ldr	r3, [r8, #40]	; 0x28
   2613c:	cmp	r3, #0
   26140:	moveq	r4, r8
   26144:	beq	26158 <myhtml_serialization_tree_callback@@Base+0x44>
   26148:	ldr	r3, [r3, #84]	; 0x54
   2614c:	cmp	r3, r8
   26150:	movne	r4, r8
   26154:	beq	26168 <myhtml_serialization_tree_callback@@Base+0x54>
   26158:	cmp	r4, #0
   2615c:	bne	26174 <myhtml_serialization_tree_callback@@Base+0x60>
   26160:	mov	r7, #0
   26164:	b	26200 <myhtml_serialization_tree_callback@@Base+0xec>
   26168:	ldr	r4, [r8, #20]
   2616c:	b	26158 <myhtml_serialization_tree_callback@@Base+0x44>
   26170:	mov	r4, r3
   26174:	mov	r2, r6
   26178:	mov	r1, r5
   2617c:	mov	r0, r4
   26180:	bl	10694 <myhtml_serialization_node_callback@plt>
   26184:	subs	r7, r0, #0
   26188:	bne	261fc <myhtml_serialization_tree_callback@@Base+0xe8>
   2618c:	ldr	r3, [r4, #20]
   26190:	cmp	r3, #0
   26194:	bne	26170 <myhtml_serialization_tree_callback@@Base+0x5c>
   26198:	cmp	r8, r4
   2619c:	beq	26228 <myhtml_serialization_tree_callback@@Base+0x114>
   261a0:	ldr	r3, [r4, #16]
   261a4:	cmp	r3, #0
   261a8:	bne	261dc <myhtml_serialization_tree_callback@@Base+0xc8>
   261ac:	mov	r2, r6
   261b0:	mov	r1, r5
   261b4:	mov	r0, r4
   261b8:	bl	256d4 <myhtml_rules_init@@Base+0x444>
   261bc:	cmp	r0, #0
   261c0:	bne	26218 <myhtml_serialization_tree_callback@@Base+0x104>
   261c4:	ldr	r4, [r4, #24]
   261c8:	cmp	r8, r4
   261cc:	beq	26228 <myhtml_serialization_tree_callback@@Base+0x114>
   261d0:	ldr	r3, [r4, #16]
   261d4:	cmp	r3, #0
   261d8:	beq	261ac <myhtml_serialization_tree_callback@@Base+0x98>
   261dc:	mov	r2, r6
   261e0:	mov	r1, r5
   261e4:	mov	r0, r4
   261e8:	bl	256d4 <myhtml_rules_init@@Base+0x444>
   261ec:	cmp	r0, #0
   261f0:	bne	26220 <myhtml_serialization_tree_callback@@Base+0x10c>
   261f4:	ldr	r4, [r4, #16]
   261f8:	b	26158 <myhtml_serialization_tree_callback@@Base+0x44>
   261fc:	mov	r7, #2
   26200:	mov	r0, r7
   26204:	ldrd	r4, [sp]
   26208:	ldrd	r6, [sp, #8]
   2620c:	ldr	r8, [sp, #16]
   26210:	add	sp, sp, #20
   26214:	pop	{pc}		; (ldr pc, [sp], #4)
   26218:	mov	r7, #2
   2621c:	b	26200 <myhtml_serialization_tree_callback@@Base+0xec>
   26220:	mov	r7, #2
   26224:	b	26200 <myhtml_serialization_tree_callback@@Base+0xec>
   26228:	ldr	r3, [r4, #40]	; 0x28
   2622c:	ldr	r3, [r3, #84]	; 0x54
   26230:	cmp	r3, r4
   26234:	beq	26200 <myhtml_serialization_tree_callback@@Base+0xec>
   26238:	mov	r2, r6
   2623c:	mov	r1, r5
   26240:	mov	r0, r4
   26244:	bl	256d4 <myhtml_rules_init@@Base+0x444>
   26248:	subs	r7, r0, #0
   2624c:	movne	r7, #2
   26250:	b	26200 <myhtml_serialization_tree_callback@@Base+0xec>

00026254 <myhtml_serialization_reallocate@@Base>:
   26254:	strd	r4, [sp, #-16]!
   26258:	str	r6, [sp, #8]
   2625c:	str	lr, [sp, #12]
   26260:	mov	r4, r0
   26264:	mov	r5, r1
   26268:	ldr	r0, [r0]
   2626c:	bl	fb84 <mycore_realloc@plt>
   26270:	cmp	r0, #0
   26274:	strne	r0, [r4]
   26278:	strne	r5, [r4, #4]
   2627c:	movne	r0, #0
   26280:	beq	26294 <myhtml_serialization_reallocate@@Base+0x40>
   26284:	ldrd	r4, [sp]
   26288:	ldr	r6, [sp, #8]
   2628c:	add	sp, sp, #12
   26290:	pop	{pc}		; (ldr pc, [sp], #4)
   26294:	mov	r3, #0
   26298:	str	r3, [r4]
   2629c:	str	r3, [r4, #4]
   262a0:	str	r3, [r4, #8]
   262a4:	mov	r0, #2
   262a8:	b	26284 <myhtml_serialization_reallocate@@Base+0x30>

000262ac <myhtml_serialization_concatenate@@Base>:
   262ac:	strd	r4, [sp, #-16]!
   262b0:	str	r6, [sp, #8]
   262b4:	str	lr, [sp, #12]
   262b8:	mov	r6, r0
   262bc:	mov	r5, r1
   262c0:	mov	r4, r2
   262c4:	ldr	r1, [r2, #8]
   262c8:	add	r1, r5, r1
   262cc:	ldr	r3, [r2, #4]
   262d0:	cmp	r1, r3
   262d4:	bcc	262f0 <myhtml_serialization_concatenate@@Base+0x44>
   262d8:	add	r1, r1, #4096	; 0x1000
   262dc:	mov	r0, r2
   262e0:	bl	10310 <myhtml_serialization_reallocate@plt>
   262e4:	cmp	r0, #0
   262e8:	movne	r0, #2
   262ec:	bne	26320 <myhtml_serialization_concatenate@@Base+0x74>
   262f0:	ldr	r0, [r4]
   262f4:	ldr	r3, [r4, #8]
   262f8:	mov	r2, r5
   262fc:	mov	r1, r6
   26300:	add	r0, r0, r3
   26304:	bl	10880 <strncpy@plt>
   26308:	ldr	r3, [r4, #8]
   2630c:	add	r5, r5, r3
   26310:	str	r5, [r4, #8]
   26314:	ldr	r3, [r4]
   26318:	mov	r0, #0
   2631c:	strb	r0, [r3, r5]
   26320:	ldrd	r4, [sp]
   26324:	ldr	r6, [sp, #8]
   26328:	add	sp, sp, #12
   2632c:	pop	{pc}		; (ldr pc, [sp], #4)

00026330 <myhtml_serialization_tree_buffer@@Base>:
   26330:	strd	r4, [sp, #-16]!
   26334:	str	r6, [sp, #8]
   26338:	str	lr, [sp, #12]
   2633c:	sub	sp, sp, #8
   26340:	ldr	r6, [pc, #120]	; 263c0 <myhtml_serialization_tree_buffer@@Base+0x90>
   26344:	add	r6, pc, r6
   26348:	subs	r4, r1, #0
   2634c:	moveq	r0, #0
   26350:	beq	26380 <myhtml_serialization_tree_buffer@@Base+0x50>
   26354:	mov	r5, r0
   26358:	ldr	r3, [r4]
   2635c:	cmp	r3, #0
   26360:	beq	26394 <myhtml_serialization_tree_buffer@@Base+0x64>
   26364:	ldr	r3, [pc, #88]	; 263c4 <myhtml_serialization_tree_buffer@@Base+0x94>
   26368:	ldr	r3, [r6, r3]
   2636c:	str	r3, [sp, #4]
   26370:	mov	r2, r4
   26374:	mov	r1, r3
   26378:	mov	r0, r5
   2637c:	bl	10dfc <myhtml_serialization_tree_callback@plt>
   26380:	add	sp, sp, #8
   26384:	ldrd	r4, [sp]
   26388:	ldr	r6, [sp, #8]
   2638c:	add	sp, sp, #12
   26390:	pop	{pc}		; (ldr pc, [sp], #4)
   26394:	movw	r0, #20490	; 0x500a
   26398:	str	r0, [r4, #4]
   2639c:	str	r3, [r4, #8]
   263a0:	bl	10c28 <mycore_malloc@plt>
   263a4:	str	r0, [r4]
   263a8:	cmp	r0, #0
   263ac:	moveq	r3, #0
   263b0:	streq	r3, [r4, #4]
   263b4:	moveq	r0, #2
   263b8:	bne	26364 <myhtml_serialization_tree_buffer@@Base+0x34>
   263bc:	b	26380 <myhtml_serialization_tree_buffer@@Base+0x50>
   263c0:			; <UNDEFINED> instruction: 0x000f3cb4
   263c4:	andeq	r0, r0, r0, lsr #17

000263c8 <myhtml_serialization@@Base>:
   263c8:	str	r4, [sp, #-8]!
   263cc:	str	lr, [sp, #4]
   263d0:	bl	102bc <myhtml_serialization_tree_buffer@plt>
   263d4:	ldr	r4, [sp]
   263d8:	add	sp, sp, #4
   263dc:	pop	{pc}		; (ldr pc, [sp], #4)

000263e0 <myhtml_serialization_node_buffer@@Base>:
   263e0:	strd	r4, [sp, #-16]!
   263e4:	str	r6, [sp, #8]
   263e8:	str	lr, [sp, #12]
   263ec:	sub	sp, sp, #8
   263f0:	ldr	r6, [pc, #112]	; 26468 <myhtml_serialization_node_buffer@@Base+0x88>
   263f4:	add	r6, pc, r6
   263f8:	subs	r4, r1, #0
   263fc:	moveq	r0, #0
   26400:	beq	26430 <myhtml_serialization_node_buffer@@Base+0x50>
   26404:	mov	r5, r0
   26408:	ldr	r3, [r4]
   2640c:	cmp	r3, #0
   26410:	beq	26444 <myhtml_serialization_node_buffer@@Base+0x64>
   26414:	ldr	r3, [pc, #80]	; 2646c <myhtml_serialization_node_buffer@@Base+0x8c>
   26418:	ldr	r3, [r6, r3]
   2641c:	str	r3, [sp, #4]
   26420:	mov	r2, r4
   26424:	mov	r1, r3
   26428:	mov	r0, r5
   2642c:	bl	10694 <myhtml_serialization_node_callback@plt>
   26430:	add	sp, sp, #8
   26434:	ldrd	r4, [sp]
   26438:	ldr	r6, [sp, #8]
   2643c:	add	sp, sp, #12
   26440:	pop	{pc}		; (ldr pc, [sp], #4)
   26444:	mov	r0, #2048	; 0x800
   26448:	str	r0, [r4, #4]
   2644c:	str	r3, [r4, #8]
   26450:	bl	10c28 <mycore_malloc@plt>
   26454:	str	r0, [r4]
   26458:	cmp	r0, #0
   2645c:	streq	r0, [r4, #4]
   26460:	bne	26414 <myhtml_serialization_node_buffer@@Base+0x34>
   26464:	b	26430 <myhtml_serialization_node_buffer@@Base+0x50>
   26468:	andeq	r3, pc, r4, lsl #24
   2646c:	andeq	r0, r0, r0, lsr #17

00026470 <myhtml_serialization_node@@Base>:
   26470:	str	r4, [sp, #-8]!
   26474:	str	lr, [sp, #4]
   26478:	bl	10748 <myhtml_serialization_node_buffer@plt>
   2647c:	ldr	r4, [sp]
   26480:	add	sp, sp, #4
   26484:	pop	{pc}		; (ldr pc, [sp], #4)

00026488 <myhtml_stream_buffer_create@@Base>:
   26488:	str	r4, [sp, #-8]!
   2648c:	str	lr, [sp, #4]
   26490:	mov	r1, #36	; 0x24
   26494:	mov	r0, #1
   26498:	bl	feb4 <mycore_calloc@plt>
   2649c:	ldr	r4, [sp]
   264a0:	add	sp, sp, #4
   264a4:	pop	{pc}		; (ldr pc, [sp], #4)

000264a8 <myhtml_stream_buffer_init@@Base>:
   264a8:	str	r4, [sp, #-8]!
   264ac:	str	lr, [sp, #4]
   264b0:	mov	r4, r0
   264b4:	mov	r0, r1
   264b8:	mov	r3, #0
   264bc:	str	r3, [r4, #4]
   264c0:	str	r1, [r4, #8]
   264c4:	mov	r1, #12
   264c8:	bl	feb4 <mycore_calloc@plt>
   264cc:	str	r0, [r4]
   264d0:	cmp	r0, #0
   264d4:	movw	r0, #37633	; 0x9301
   264d8:	movne	r0, #0
   264dc:	ldr	r4, [sp]
   264e0:	add	sp, sp, #4
   264e4:	pop	{pc}		; (ldr pc, [sp], #4)

000264e8 <myhtml_stream_buffer_entry_init@@Base>:
   264e8:	strd	r4, [sp, #-16]!
   264ec:	str	r6, [sp, #8]
   264f0:	str	lr, [sp, #12]
   264f4:	mov	r4, r0
   264f8:	mov	r5, r1
   264fc:	ldr	r0, [r0]
   26500:	cmp	r0, #0
   26504:	beq	2651c <myhtml_stream_buffer_entry_init@@Base+0x34>
   26508:	ldr	r3, [r4, #8]
   2650c:	cmp	r3, r1
   26510:	movcs	r0, #0
   26514:	bcs	26540 <myhtml_stream_buffer_entry_init@@Base+0x58>
   26518:	bl	10d60 <mycore_free@plt>
   2651c:	mov	r3, #0
   26520:	str	r3, [r4, #4]
   26524:	str	r5, [r4, #8]
   26528:	mov	r0, r5
   2652c:	bl	10c28 <mycore_malloc@plt>
   26530:	str	r0, [r4]
   26534:	cmp	r0, #0
   26538:	movw	r0, #37635	; 0x9303
   2653c:	movne	r0, #0
   26540:	ldrd	r4, [sp]
   26544:	ldr	r6, [sp, #8]
   26548:	add	sp, sp, #12
   2654c:	pop	{pc}		; (ldr pc, [sp], #4)

00026550 <myhtml_stream_buffer_entry_clean@@Base>:
   26550:	cmp	r0, #0
   26554:	movne	r3, #0
   26558:	strne	r3, [r0, #4]
   2655c:	bx	lr

00026560 <myhtml_stream_buffer_entry_destroy@@Base>:
   26560:	strd	r4, [sp, #-16]!
   26564:	str	r6, [sp, #8]
   26568:	str	lr, [sp, #12]
   2656c:	subs	r4, r0, #0
   26570:	beq	26590 <myhtml_stream_buffer_entry_destroy@@Base+0x30>
   26574:	mov	r5, r1
   26578:	ldr	r0, [r4]
   2657c:	cmp	r0, #0
   26580:	beq	26588 <myhtml_stream_buffer_entry_destroy@@Base+0x28>
   26584:	bl	10d60 <mycore_free@plt>
   26588:	cmp	r5, #0
   2658c:	bne	265a4 <myhtml_stream_buffer_entry_destroy@@Base+0x44>
   26590:	mov	r0, r4
   26594:	ldrd	r4, [sp]
   26598:	ldr	r6, [sp, #8]
   2659c:	add	sp, sp, #12
   265a0:	pop	{pc}		; (ldr pc, [sp], #4)
   265a4:	mov	r0, r4
   265a8:	bl	10d60 <mycore_free@plt>
   265ac:	mov	r4, #0
   265b0:	b	26590 <myhtml_stream_buffer_entry_destroy@@Base+0x30>

000265b4 <myhtml_stream_buffer_clean@@Base>:
   265b4:	cmp	r0, #0
   265b8:	movne	r3, #0
   265bc:	strne	r3, [r0, #4]
   265c0:	bx	lr

000265c4 <myhtml_stream_buffer_destroy@@Base>:
   265c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   265c8:	strd	r6, [sp, #8]
   265cc:	str	r8, [sp, #16]
   265d0:	str	lr, [sp, #20]
   265d4:	subs	r6, r0, #0
   265d8:	beq	26638 <myhtml_stream_buffer_destroy@@Base+0x74>
   265dc:	mov	r8, r1
   265e0:	ldr	r3, [r6]
   265e4:	cmp	r3, #0
   265e8:	beq	26630 <myhtml_stream_buffer_destroy@@Base+0x6c>
   265ec:	ldr	r3, [r6, #4]
   265f0:	cmp	r3, #0
   265f4:	beq	26628 <myhtml_stream_buffer_destroy@@Base+0x64>
   265f8:	mov	r4, #0
   265fc:	mov	r5, r4
   26600:	mov	r7, r4
   26604:	ldr	r0, [r6]
   26608:	mov	r1, r7
   2660c:	add	r0, r0, r4
   26610:	bl	100e8 <myhtml_stream_buffer_entry_destroy@plt>
   26614:	add	r5, r5, #1
   26618:	add	r4, r4, #12
   2661c:	ldr	r3, [r6, #4]
   26620:	cmp	r3, r5
   26624:	bhi	26604 <myhtml_stream_buffer_destroy@@Base+0x40>
   26628:	ldr	r0, [r6]
   2662c:	bl	10d60 <mycore_free@plt>
   26630:	cmp	r8, #0
   26634:	bne	26650 <myhtml_stream_buffer_destroy@@Base+0x8c>
   26638:	mov	r0, r6
   2663c:	ldrd	r4, [sp]
   26640:	ldrd	r6, [sp, #8]
   26644:	ldr	r8, [sp, #16]
   26648:	add	sp, sp, #20
   2664c:	pop	{pc}		; (ldr pc, [sp], #4)
   26650:	mov	r0, r6
   26654:	bl	10d60 <mycore_free@plt>
   26658:	mov	r6, #0
   2665c:	b	26638 <myhtml_stream_buffer_destroy@@Base+0x74>

00026660 <myhtml_stream_buffer_add_entry@@Base>:
   26660:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26664:	strd	r6, [sp, #8]
   26668:	str	r8, [sp, #16]
   2666c:	str	lr, [sp, #20]
   26670:	mov	r4, r0
   26674:	mov	r6, r1
   26678:	ldr	r1, [r0, #8]
   2667c:	ldr	r3, [r0, #4]
   26680:	cmp	r3, r1
   26684:	bcc	266c0 <myhtml_stream_buffer_add_entry@@Base+0x60>
   26688:	lsl	r7, r1, #1
   2668c:	add	r1, r7, r1, lsl #2
   26690:	lsl	r1, r1, #2
   26694:	bl	fb84 <mycore_realloc@plt>
   26698:	subs	r5, r0, #0
   2669c:	beq	266f0 <myhtml_stream_buffer_add_entry@@Base+0x90>
   266a0:	ldr	r2, [r4, #8]
   266a4:	add	r0, r2, r2, lsl #1
   266a8:	sub	r2, r7, r2
   266ac:	mov	r1, #0
   266b0:	add	r0, r5, r0, lsl #2
   266b4:	bl	10844 <memset@plt>
   266b8:	str	r5, [r4]
   266bc:	str	r7, [r4, #8]
   266c0:	ldr	r5, [r4, #4]
   266c4:	add	r3, r5, r5, lsl #1
   266c8:	ldr	r5, [r4]
   266cc:	add	r5, r5, r3, lsl #2
   266d0:	mov	r1, r6
   266d4:	mov	r0, r5
   266d8:	bl	1079c <myhtml_stream_buffer_entry_init@plt>
   266dc:	cmp	r0, #0
   266e0:	ldreq	r3, [r4, #4]
   266e4:	addeq	r3, r3, #1
   266e8:	streq	r3, [r4, #4]
   266ec:	movne	r5, #0
   266f0:	mov	r0, r5
   266f4:	ldrd	r4, [sp]
   266f8:	ldrd	r6, [sp, #8]
   266fc:	ldr	r8, [sp, #16]
   26700:	add	sp, sp, #20
   26704:	pop	{pc}		; (ldr pc, [sp], #4)

00026708 <myhtml_stream_buffer_current_entry@@Base>:
   26708:	ldr	r3, [r0, #4]
   2670c:	cmp	r3, #0
   26710:	beq	2672c <myhtml_stream_buffer_current_entry@@Base+0x24>
   26714:	add	r3, r3, r3, lsl #1
   26718:	lsl	r3, r3, #2
   2671c:	sub	r3, r3, #12
   26720:	ldr	r0, [r0]
   26724:	add	r0, r0, r3
   26728:	bx	lr
   2672c:	mov	r0, #0
   26730:	bx	lr

00026734 <myhtml_tag_create@@Base>:
   26734:	str	r4, [sp, #-8]!
   26738:	str	lr, [sp, #4]
   2673c:	mov	r0, #20
   26740:	bl	10c28 <mycore_malloc@plt>
   26744:	ldr	r4, [sp]
   26748:	add	sp, sp, #4
   2674c:	pop	{pc}		; (ldr pc, [sp], #4)

00026750 <myhtml_tag_clean@@Base>:
   26750:	str	r4, [sp, #-8]!
   26754:	str	lr, [sp, #4]
   26758:	mov	r4, r0
   2675c:	mov	r3, #252	; 0xfc
   26760:	str	r3, [r0, #8]
   26764:	ldr	r0, [r0, #4]
   26768:	bl	101f0 <mcsimple_clean@plt>
   2676c:	ldr	r1, [r4, #12]
   26770:	ldr	r0, [r4, #16]
   26774:	bl	1067c <mchar_async_node_clean@plt>
   26778:	ldr	r0, [r4]
   2677c:	bl	1028c <mctree_clean@plt>
   26780:	ldr	r4, [sp]
   26784:	add	sp, sp, #4
   26788:	pop	{pc}		; (ldr pc, [sp], #4)

0002678c <myhtml_tag_init@@Base>:
   2678c:	strd	r4, [sp, #-12]!
   26790:	str	lr, [sp, #8]
   26794:	sub	sp, sp, #12
   26798:	mov	r5, r0
   2679c:	mov	r4, r1
   267a0:	bl	1025c <mcsimple_create@plt>
   267a4:	str	r0, [r4, #4]
   267a8:	cmp	r0, #0
   267ac:	movweq	r5, #37264	; 0x9190
   267b0:	beq	26810 <myhtml_tag_init@@Base+0x84>
   267b4:	mov	r3, #44	; 0x2c
   267b8:	mov	r2, #1024	; 0x400
   267bc:	mov	r1, #128	; 0x80
   267c0:	bl	103e8 <mcsimple_init@plt>
   267c4:	add	r1, sp, #4
   267c8:	ldr	r0, [r5, #4]
   267cc:	bl	1022c <mchar_async_node_add@plt>
   267d0:	str	r0, [r4, #12]
   267d4:	mov	r0, #2
   267d8:	bl	105ec <mctree_create@plt>
   267dc:	str	r0, [r4]
   267e0:	ldr	r3, [r5, #4]
   267e4:	str	r3, [r4, #16]
   267e8:	mov	r3, #252	; 0xfc
   267ec:	str	r3, [r4, #8]
   267f0:	ldr	r5, [sp, #4]
   267f4:	cmp	r5, #0
   267f8:	bne	26810 <myhtml_tag_init@@Base+0x84>
   267fc:	cmp	r0, #0
   26800:	moveq	r5, #2
   26804:	beq	26810 <myhtml_tag_init@@Base+0x84>
   26808:	mov	r0, r4
   2680c:	bl	1100c <myhtml_tag_clean@plt>
   26810:	mov	r0, r5
   26814:	add	sp, sp, #12
   26818:	ldrd	r4, [sp]
   2681c:	add	sp, sp, #8
   26820:	pop	{pc}		; (ldr pc, [sp], #4)

00026824 <myhtml_tag_destroy@@Base>:
   26824:	str	r4, [sp, #-8]!
   26828:	str	lr, [sp, #4]
   2682c:	subs	r4, r0, #0
   26830:	beq	26864 <myhtml_tag_destroy@@Base+0x40>
   26834:	ldr	r0, [r4]
   26838:	bl	10058 <mctree_destroy@plt>
   2683c:	str	r0, [r4]
   26840:	mov	r1, #1
   26844:	ldr	r0, [r4, #4]
   26848:	bl	10334 <mcsimple_destroy@plt>
   2684c:	str	r0, [r4, #4]
   26850:	ldr	r1, [r4, #12]
   26854:	ldr	r0, [r4, #16]
   26858:	bl	10bec <mchar_async_node_delete@plt>
   2685c:	mov	r0, r4
   26860:	bl	10d60 <mycore_free@plt>
   26864:	mov	r0, #0
   26868:	ldr	r4, [sp]
   2686c:	add	sp, sp, #4
   26870:	pop	{pc}		; (ldr pc, [sp], #4)

00026874 <myhtml_tag_add@@Base>:
   26874:	strd	r4, [sp, #-28]!	; 0xffffffe4
   26878:	strd	r6, [sp, #8]
   2687c:	strd	r8, [sp, #16]
   26880:	str	lr, [sp, #24]
   26884:	sub	sp, sp, #12
   26888:	mov	r4, r0
   2688c:	mov	r8, r1
   26890:	mov	r5, r2
   26894:	mov	r7, r3
   26898:	add	r2, r2, #1
   2689c:	ldr	r1, [r0, #12]
   268a0:	ldr	r0, [r0, #16]
   268a4:	bl	108a4 <mchar_async_malloc@plt>
   268a8:	mov	r6, r0
   268ac:	ldrb	r3, [sp, #40]	; 0x28
   268b0:	cmp	r3, #0
   268b4:	beq	26980 <myhtml_tag_add@@Base+0x10c>
   268b8:	cmp	r5, #0
   268bc:	beq	26978 <myhtml_tag_add@@Base+0x104>
   268c0:	sub	r1, r8, #1
   268c4:	sub	r0, r0, #1
   268c8:	add	ip, r1, r5
   268cc:	ldrb	r3, [r1, #1]!
   268d0:	sub	r2, r3, #65	; 0x41
   268d4:	uxtb	r2, r2
   268d8:	cmp	r2, #25
   268dc:	orrls	r3, r3, #96	; 0x60
   268e0:	strb	r3, [r0, #1]!
   268e4:	cmp	r1, ip
   268e8:	bne	268cc <myhtml_tag_add@@Base+0x58>
   268ec:	mov	r2, r5
   268f0:	mov	r3, #0
   268f4:	strb	r3, [r6, r2]
   268f8:	ldr	r0, [r4, #4]
   268fc:	bl	106d0 <mcsimple_malloc@plt>
   26900:	mov	r8, r0
   26904:	mov	r9, #0
   26908:	str	r9, [sp]
   2690c:	mov	r3, r0
   26910:	mov	r2, r5
   26914:	mov	r1, r6
   26918:	ldr	r0, [r4]
   2691c:	bl	108ec <mctree_insert@plt>
   26920:	ldr	r3, [r4, #8]
   26924:	str	r3, [r8]
   26928:	str	r6, [r8, #4]
   2692c:	str	r5, [r8, #8]
   26930:	str	r7, [r8, #12]
   26934:	ldr	r3, [r4, #8]
   26938:	add	r3, r3, #1
   2693c:	str	r3, [r4, #8]
   26940:	str	r9, [r8, #16]
   26944:	str	r9, [r8, #20]
   26948:	str	r9, [r8, #24]
   2694c:	str	r9, [r8, #28]
   26950:	str	r9, [r8, #32]
   26954:	str	r9, [r8, #36]	; 0x24
   26958:	str	r9, [r8, #40]	; 0x28
   2695c:	ldr	r0, [r8]
   26960:	add	sp, sp, #12
   26964:	ldrd	r4, [sp]
   26968:	ldrd	r6, [sp, #8]
   2696c:	ldrd	r8, [sp, #16]
   26970:	add	sp, sp, #24
   26974:	pop	{pc}		; (ldr pc, [sp], #4)
   26978:	mov	r2, r5
   2697c:	b	268f0 <myhtml_tag_add@@Base+0x7c>
   26980:	mov	r2, r5
   26984:	mov	r1, r8
   26988:	bl	10880 <strncpy@plt>
   2698c:	mov	r3, #0
   26990:	strb	r3, [r6, r5]
   26994:	b	268f8 <myhtml_tag_add@@Base+0x84>

00026998 <myhtml_tag_set_category@@Base>:
   26998:	cmp	r1, #251	; 0xfb
   2699c:	bxls	lr
   269a0:	strd	r4, [sp, #-16]!
   269a4:	str	r6, [sp, #8]
   269a8:	str	lr, [sp, #12]
   269ac:	mov	r5, r3
   269b0:	mov	r4, r2
   269b4:	sub	r1, r1, #252	; 0xfc
   269b8:	ldr	r0, [r0, #4]
   269bc:	bl	10f34 <mcsimple_get_by_absolute_position@plt>
   269c0:	add	r2, r4, #4
   269c4:	str	r5, [r0, r2, lsl #2]
   269c8:	ldrd	r4, [sp]
   269cc:	ldr	r6, [sp, #8]
   269d0:	add	sp, sp, #12
   269d4:	pop	{pc}		; (ldr pc, [sp], #4)

000269d8 <myhtml_tag_get_by_id@@Base>:
   269d8:	str	r4, [sp, #-8]!
   269dc:	str	lr, [sp, #4]
   269e0:	cmp	r1, #251	; 0xfb
   269e4:	bhi	269fc <myhtml_tag_get_by_id@@Base+0x24>
   269e8:	mov	r0, r1
   269ec:	bl	ff98 <myhtml_tag_static_get_by_id@plt>
   269f0:	ldr	r4, [sp]
   269f4:	add	sp, sp, #4
   269f8:	pop	{pc}		; (ldr pc, [sp], #4)
   269fc:	sub	r1, r1, #252	; 0xfc
   26a00:	ldr	r0, [r0, #4]
   26a04:	bl	10f34 <mcsimple_get_by_absolute_position@plt>
   26a08:	b	269f0 <myhtml_tag_get_by_id@@Base+0x18>

00026a0c <myhtml_tag_get_by_name@@Base>:
   26a0c:	strd	r4, [sp, #-16]!
   26a10:	str	r6, [sp, #8]
   26a14:	str	lr, [sp, #12]
   26a18:	mov	r6, r0
   26a1c:	mov	r4, r1
   26a20:	mov	r5, r2
   26a24:	mov	r1, r2
   26a28:	mov	r0, r4
   26a2c:	bl	108b0 <myhtml_tag_static_search@plt>
   26a30:	cmp	r0, #0
   26a34:	beq	26a48 <myhtml_tag_get_by_name@@Base+0x3c>
   26a38:	ldrd	r4, [sp]
   26a3c:	ldr	r6, [sp, #8]
   26a40:	add	sp, sp, #12
   26a44:	pop	{pc}		; (ldr pc, [sp], #4)
   26a48:	mov	r2, r5
   26a4c:	mov	r1, r4
   26a50:	ldr	r0, [r6]
   26a54:	bl	106dc <mctree_search_lowercase@plt>
   26a58:	ldr	r3, [r6]
   26a5c:	ldr	r3, [r3]
   26a60:	rsb	r0, r0, r0, lsl #3
   26a64:	add	r3, r3, r0, lsl #2
   26a68:	ldr	r0, [r3, #8]
   26a6c:	b	26a38 <myhtml_tag_get_by_name@@Base+0x2c>

00026a70 <myhtml_tag_static_search@@Base>:
   26a70:	strd	r4, [sp, #-32]!	; 0xffffffe0
   26a74:	strd	r6, [sp, #8]
   26a78:	strd	r8, [sp, #16]
   26a7c:	str	sl, [sp, #24]
   26a80:	str	lr, [sp, #28]
   26a84:	mov	r9, r0
   26a88:	mov	r6, r1
   26a8c:	ldr	r3, [pc, #224]	; 26b74 <myhtml_tag_static_search@@Base+0x104>
   26a90:	add	r3, pc, r3
   26a94:	add	r2, r0, r1
   26a98:	ldrb	r2, [r2, #-1]
   26a9c:	ldrb	r2, [r3, r2]
   26aa0:	ldrb	r1, [r0]
   26aa4:	ldrb	r4, [r3, r1]
   26aa8:	mul	r4, r4, r2
   26aac:	mul	r2, r6, r4
   26ab0:	movw	r3, #411	; 0x19b
   26ab4:	movt	r3, #4515	; 0x11a3
   26ab8:	umull	r1, r3, r3, r2
   26abc:	sub	r4, r2, r3
   26ac0:	add	r4, r3, r4, lsr #1
   26ac4:	lsr	r4, r4, #8
   26ac8:	movw	r3, #479	; 0x1df
   26acc:	mls	r4, r3, r4, r2
   26ad0:	add	r4, r4, #1
   26ad4:	ldr	r7, [pc, #156]	; 26b78 <myhtml_tag_static_search@@Base+0x108>
   26ad8:	add	r7, pc, r7
   26adc:	ldr	r8, [pc, #152]	; 26b7c <myhtml_tag_static_search@@Base+0x10c>
   26ae0:	add	r8, pc, r8
   26ae4:	ldr	sl, [pc, #148]	; 26b80 <myhtml_tag_static_search@@Base+0x110>
   26ae8:	add	sl, pc, sl
   26aec:	b	26b30 <myhtml_tag_static_search@@Base+0xc0>
   26af0:	mov	r2, r6
   26af4:	mov	r1, r9
   26af8:	ldr	r0, [r5, #4]
   26afc:	bl	10238 <mycore_strncasecmp@plt>
   26b00:	cmp	r0, #0
   26b04:	beq	26b58 <myhtml_tag_static_search@@Base+0xe8>
   26b08:	add	r4, r4, r4, lsl #1
   26b0c:	add	r4, sl, r4, lsl #2
   26b10:	ldr	r4, [r4, #4]
   26b14:	cmp	r4, #0
   26b18:	bne	26b30 <myhtml_tag_static_search@@Base+0xc0>
   26b1c:	mov	r5, #0
   26b20:	b	26b58 <myhtml_tag_static_search@@Base+0xe8>
   26b24:	add	r4, r4, r4, lsl #1
   26b28:	add	r4, r8, r4, lsl #2
   26b2c:	ldr	r4, [r4, #4]
   26b30:	add	r3, r4, r4, lsl #1
   26b34:	ldr	r5, [r7, r3, lsl #2]
   26b38:	cmp	r5, #0
   26b3c:	beq	26b58 <myhtml_tag_static_search@@Base+0xe8>
   26b40:	ldr	r3, [r5, #8]
   26b44:	cmp	r3, r6
   26b48:	beq	26af0 <myhtml_tag_static_search@@Base+0x80>
   26b4c:	cmp	r3, r6
   26b50:	bls	26b24 <myhtml_tag_static_search@@Base+0xb4>
   26b54:	mov	r5, #0
   26b58:	mov	r0, r5
   26b5c:	ldrd	r4, [sp]
   26b60:	ldrd	r6, [sp, #8]
   26b64:	ldrd	r8, [sp, #16]
   26b68:	ldr	sl, [sp, #24]
   26b6c:	add	sp, sp, #28
   26b70:	pop	{pc}		; (ldr pc, [sp], #4)
   26b74:	andeq	r9, sp, r0, lsr #21
   26b78:	andeq	lr, lr, ip, asr sl
   26b7c:	andeq	lr, lr, r4, asr sl
   26b80:	andeq	lr, lr, ip, asr #20

00026b84 <myhtml_tag_static_get_by_id@@Base>:
   26b84:	mov	r2, #44	; 0x2c
   26b88:	ldr	r3, [pc, #8]	; 26b98 <myhtml_tag_static_get_by_id@@Base+0x14>
   26b8c:	add	r3, pc, r3
   26b90:	mla	r0, r2, r0, r3
   26b94:	bx	lr
   26b98:	andeq	r0, pc, r4, lsl #6

00026b9c <myhtml_token_create@@Base>:
   26b9c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   26ba0:	strd	r6, [sp, #8]
   26ba4:	str	r8, [sp, #16]
   26ba8:	str	lr, [sp, #20]
   26bac:	mov	r7, r0
   26bb0:	subs	r5, r1, #0
   26bb4:	moveq	r5, #4096	; 0x1000
   26bb8:	mov	r0, #24
   26bbc:	bl	10c28 <mycore_malloc@plt>
   26bc0:	subs	r4, r0, #0
   26bc4:	beq	26c3c <myhtml_token_create@@Base+0xa0>
   26bc8:	bl	fcf8 <mcobject_async_create@plt>
   26bcc:	mov	r6, r0
   26bd0:	str	r0, [r4, #4]
   26bd4:	cmp	r0, #0
   26bd8:	beq	26c54 <myhtml_token_create@@Base+0xb8>
   26bdc:	bl	fcf8 <mcobject_async_create@plt>
   26be0:	mov	r6, r0
   26be4:	str	r0, [r4, #8]
   26be8:	cmp	r0, #0
   26bec:	beq	26c64 <myhtml_token_create@@Base+0xc8>
   26bf0:	mov	r3, #52	; 0x34
   26bf4:	mov	r2, r5
   26bf8:	mov	r1, #128	; 0x80
   26bfc:	ldr	r0, [r4, #4]
   26c00:	bl	fc20 <mcobject_async_init@plt>
   26c04:	mov	r3, #68	; 0x44
   26c08:	mov	r2, r5
   26c0c:	mov	r1, #128	; 0x80
   26c10:	ldr	r0, [r4, #8]
   26c14:	bl	fc20 <mcobject_async_init@plt>
   26c18:	mov	r1, #0
   26c1c:	ldr	r0, [r4, #4]
   26c20:	bl	10a24 <mcobject_async_node_add@plt>
   26c24:	str	r0, [r4, #12]
   26c28:	mov	r1, #0
   26c2c:	ldr	r0, [r4, #8]
   26c30:	bl	10a24 <mcobject_async_node_add@plt>
   26c34:	str	r0, [r4, #16]
   26c38:	str	r7, [r4]
   26c3c:	mov	r0, r4
   26c40:	ldrd	r4, [sp]
   26c44:	ldrd	r6, [sp, #8]
   26c48:	ldr	r8, [sp, #16]
   26c4c:	add	sp, sp, #20
   26c50:	pop	{pc}		; (ldr pc, [sp], #4)
   26c54:	mov	r0, r4
   26c58:	bl	10d60 <mycore_free@plt>
   26c5c:	mov	r4, r6
   26c60:	b	26c3c <myhtml_token_create@@Base+0xa0>
   26c64:	ldr	r0, [r4, #4]
   26c68:	bl	10d60 <mycore_free@plt>
   26c6c:	mov	r0, r4
   26c70:	bl	10d60 <mycore_free@plt>
   26c74:	mov	r4, r6
   26c78:	b	26c3c <myhtml_token_create@@Base+0xa0>

00026c7c <myhtml_token_clean@@Base>:
   26c7c:	str	r4, [sp, #-8]!
   26c80:	str	lr, [sp, #4]
   26c84:	mov	r4, r0
   26c88:	ldr	r1, [r0, #12]
   26c8c:	ldr	r0, [r0, #4]
   26c90:	bl	10814 <mcobject_async_node_clean@plt>
   26c94:	ldr	r1, [r4, #16]
   26c98:	ldr	r0, [r4, #8]
   26c9c:	bl	10814 <mcobject_async_node_clean@plt>
   26ca0:	ldr	r4, [sp]
   26ca4:	add	sp, sp, #4
   26ca8:	pop	{pc}		; (ldr pc, [sp], #4)

00026cac <myhtml_token_clean_all@@Base>:
   26cac:	str	r4, [sp, #-8]!
   26cb0:	str	lr, [sp, #4]
   26cb4:	mov	r4, r0
   26cb8:	ldr	r0, [r0, #4]
   26cbc:	bl	10fe8 <mcobject_async_clean@plt>
   26cc0:	ldr	r0, [r4, #8]
   26cc4:	bl	10fe8 <mcobject_async_clean@plt>
   26cc8:	ldr	r4, [sp]
   26ccc:	add	sp, sp, #4
   26cd0:	pop	{pc}		; (ldr pc, [sp], #4)

00026cd4 <myhtml_token_destroy@@Base>:
   26cd4:	str	r4, [sp, #-8]!
   26cd8:	str	lr, [sp, #4]
   26cdc:	subs	r4, r0, #0
   26ce0:	beq	26d1c <myhtml_token_destroy@@Base+0x48>
   26ce4:	ldr	r0, [r4, #4]
   26ce8:	cmp	r0, #0
   26cec:	beq	26cfc <myhtml_token_destroy@@Base+0x28>
   26cf0:	mov	r1, #1
   26cf4:	bl	10ab4 <mcobject_async_destroy@plt>
   26cf8:	str	r0, [r4, #4]
   26cfc:	ldr	r0, [r4, #8]
   26d00:	cmp	r0, #0
   26d04:	beq	26d14 <myhtml_token_destroy@@Base+0x40>
   26d08:	mov	r1, #1
   26d0c:	bl	10ab4 <mcobject_async_destroy@plt>
   26d10:	str	r0, [r4, #8]
   26d14:	mov	r0, r4
   26d18:	bl	10d60 <mycore_free@plt>
   26d1c:	mov	r0, #0
   26d20:	ldr	r4, [sp]
   26d24:	add	sp, sp, #4
   26d28:	pop	{pc}		; (ldr pc, [sp], #4)

00026d2c <myhtml_token_node_clean@@Base>:
   26d2c:	str	r4, [sp, #-8]!
   26d30:	str	lr, [sp, #4]
   26d34:	mov	r4, r0
   26d38:	mov	r2, #48	; 0x30
   26d3c:	mov	r1, #0
   26d40:	bl	10844 <memset@plt>
   26d44:	mov	r3, #8
   26d48:	str	r3, [r4, #48]	; 0x30
   26d4c:	add	r0, r4, #4
   26d50:	bl	11024 <mycore_string_clean_all@plt>
   26d54:	ldr	r4, [sp]
   26d58:	add	sp, sp, #4
   26d5c:	pop	{pc}		; (ldr pc, [sp], #4)

00026d60 <myhtml_token_node_create@@Base>:
   26d60:	str	r4, [sp, #-8]!
   26d64:	str	lr, [sp, #4]
   26d68:	mov	r2, #0
   26d6c:	ldr	r0, [r0, #4]
   26d70:	bl	10b50 <mcobject_async_malloc@plt>
   26d74:	subs	r4, r0, #0
   26d78:	beq	26d84 <myhtml_token_node_create@@Base+0x24>
   26d7c:	mov	r0, r4
   26d80:	bl	10f10 <myhtml_token_node_clean@plt>
   26d84:	mov	r0, r4
   26d88:	ldr	r4, [sp]
   26d8c:	add	sp, sp, #4
   26d90:	pop	{pc}		; (ldr pc, [sp], #4)

00026d94 <myhtml_token_attr_clean@@Base>:
   26d94:	str	r4, [sp, #-8]!
   26d98:	str	lr, [sp, #4]
   26d9c:	mov	r4, r0
   26da0:	mov	r2, #64	; 0x40
   26da4:	mov	r1, #0
   26da8:	bl	10844 <memset@plt>
   26dac:	mov	r3, #1
   26db0:	str	r3, [r4, #64]	; 0x40
   26db4:	add	r0, r4, #8
   26db8:	bl	11024 <mycore_string_clean_all@plt>
   26dbc:	add	r0, r4, #28
   26dc0:	bl	11024 <mycore_string_clean_all@plt>
   26dc4:	ldr	r4, [sp]
   26dc8:	add	sp, sp, #4
   26dcc:	pop	{pc}		; (ldr pc, [sp], #4)

00026dd0 <myhtml_token_attr_create@@Base>:
   26dd0:	str	r4, [sp, #-8]!
   26dd4:	str	lr, [sp, #4]
   26dd8:	mov	r2, #0
   26ddc:	ldr	r0, [r0, #8]
   26de0:	bl	10b50 <mcobject_async_malloc@plt>
   26de4:	subs	r4, r0, #0
   26de8:	beq	26df4 <myhtml_token_attr_create@@Base+0x24>
   26dec:	mov	r0, r4
   26df0:	bl	ffa4 <myhtml_token_attr_clean@plt>
   26df4:	mov	r0, r4
   26df8:	ldr	r4, [sp]
   26dfc:	add	sp, sp, #4
   26e00:	pop	{pc}		; (ldr pc, [sp], #4)

00026e04 <myhtml_token_node_tag_id@@Base>:
   26e04:	ldr	r0, [r0]
   26e08:	bx	lr

00026e0c <myhtml_token_node_raw_position@@Base>:
   26e0c:	cmp	r1, #0
   26e10:	beq	26e28 <myhtml_token_node_raw_position@@Base+0x1c>
   26e14:	ldr	r3, [r1, #28]
   26e18:	ldr	r2, [r1, #24]
   26e1c:	str	r2, [r0]
   26e20:	str	r3, [r0, #4]
   26e24:	bx	lr
   26e28:	mov	r3, #0
   26e2c:	str	r3, [r0]
   26e30:	str	r3, [r0, #4]
   26e34:	bx	lr

00026e38 <myhtml_token_node_element_position@@Base>:
   26e38:	cmp	r1, #0
   26e3c:	beq	26e54 <myhtml_token_node_element_position@@Base+0x1c>
   26e40:	ldr	r3, [r1, #36]	; 0x24
   26e44:	ldr	r2, [r1, #32]
   26e48:	str	r2, [r0]
   26e4c:	str	r3, [r0, #4]
   26e50:	bx	lr
   26e54:	mov	r3, #0
   26e58:	str	r3, [r0]
   26e5c:	str	r3, [r0, #4]
   26e60:	bx	lr

00026e64 <myhtml_token_node_attribute_first@@Base>:
   26e64:	ldr	r0, [r0, #40]	; 0x28
   26e68:	bx	lr

00026e6c <myhtml_token_node_attribute_last@@Base>:
   26e6c:	ldr	r0, [r0, #44]	; 0x2c
   26e70:	bx	lr

00026e74 <myhtml_token_node_text@@Base>:
   26e74:	cmp	r1, #0
   26e78:	ldrne	r3, [r0, #12]
   26e7c:	strne	r3, [r1]
   26e80:	ldr	r0, [r0, #4]
   26e84:	bx	lr

00026e88 <myhtml_token_node_string@@Base>:
   26e88:	add	r0, r0, #4
   26e8c:	bx	lr

00026e90 <myhtml_token_node_is_close@@Base>:
   26e90:	ldr	r0, [r0, #48]	; 0x30
   26e94:	and	r0, r0, #1
   26e98:	bx	lr

00026e9c <myhtml_token_node_is_close_self@@Base>:
   26e9c:	ldr	r0, [r0, #48]	; 0x30
   26ea0:	ubfx	r0, r0, #1, #1
   26ea4:	bx	lr

00026ea8 <myhtml_token_node_wait_for_done@@Base>:
   26ea8:	strd	r4, [sp, #-16]!
   26eac:	str	r6, [sp, #8]
   26eb0:	str	lr, [sp, #12]
   26eb4:	mov	r5, r0
   26eb8:	mov	r4, r1
   26ebc:	ldr	r3, [r1, #48]	; 0x30
   26ec0:	tst	r3, #4
   26ec4:	bne	26ee8 <myhtml_token_node_wait_for_done@@Base+0x40>
   26ec8:	ldr	r3, [r5]
   26ecc:	ldr	r3, [r3]
   26ed0:	ldr	r3, [r3]
   26ed4:	ldr	r0, [r3, #24]
   26ed8:	bl	10040 <mythread_nanosleep_sleep@plt>
   26edc:	ldr	r3, [r4, #48]	; 0x30
   26ee0:	tst	r3, #4
   26ee4:	beq	26ec8 <myhtml_token_node_wait_for_done@@Base+0x20>
   26ee8:	ldrd	r4, [sp]
   26eec:	ldr	r6, [sp, #8]
   26ef0:	add	sp, sp, #12
   26ef4:	pop	{pc}		; (ldr pc, [sp], #4)

00026ef8 <myhtml_token_set_done@@Base>:
   26ef8:	ldr	r3, [r0, #48]	; 0x30
   26efc:	orr	r3, r3, #4
   26f00:	str	r3, [r0, #48]	; 0x30
   26f04:	bx	lr

00026f08 <myhtml_token_node_text_append@@Base>:
   26f08:	strd	r4, [sp, #-16]!
   26f0c:	str	r6, [sp, #8]
   26f10:	str	lr, [sp, #12]
   26f14:	mov	r6, r2
   26f18:	mov	r5, r3
   26f1c:	ldr	r0, [r0]
   26f20:	add	r4, r1, #4
   26f24:	add	r3, r3, #2
   26f28:	mov	r2, r4
   26f2c:	ldr	r1, [r0, #52]	; 0x34
   26f30:	ldr	r0, [r0, #4]
   26f34:	bl	105a4 <mycore_string_init@plt>
   26f38:	mov	r2, r5
   26f3c:	mov	r1, r6
   26f40:	mov	r0, r4
   26f44:	bl	10868 <mycore_string_append@plt>
   26f48:	ldrd	r4, [sp]
   26f4c:	ldr	r6, [sp, #8]
   26f50:	add	sp, sp, #12
   26f54:	pop	{pc}		; (ldr pc, [sp], #4)

00026f58 <myhtml_token_node_attr_append@@Base>:
   26f58:	strd	r4, [sp, #-32]!	; 0xffffffe0
   26f5c:	strd	r6, [sp, #8]
   26f60:	strd	r8, [sp, #16]
   26f64:	str	sl, [sp, #24]
   26f68:	str	lr, [sp, #28]
   26f6c:	mov	r7, r0
   26f70:	mov	r5, r1
   26f74:	mov	sl, r2
   26f78:	mov	r8, r3
   26f7c:	ldr	r6, [sp, #36]	; 0x24
   26f80:	mov	r2, #0
   26f84:	ldr	r1, [sp, #40]	; 0x28
   26f88:	ldr	r0, [r0, #8]
   26f8c:	bl	10b50 <mcobject_async_malloc@plt>
   26f90:	mov	r4, r0
   26f94:	mov	r3, #0
   26f98:	str	r3, [r0]
   26f9c:	cmp	r8, r3
   26fa0:	beq	27054 <myhtml_token_node_attr_append@@Base+0xfc>
   26fa4:	ldr	r0, [r7]
   26fa8:	add	r9, r4, #8
   26fac:	add	r3, r8, #1
   26fb0:	mov	r2, r9
   26fb4:	ldr	r1, [r0, #52]	; 0x34
   26fb8:	ldr	r0, [r0, #4]
   26fbc:	bl	105a4 <mycore_string_init@plt>
   26fc0:	mov	r2, r8
   26fc4:	mov	r1, sl
   26fc8:	mov	r0, r9
   26fcc:	bl	1061c <mycore_string_append_lowercase@plt>
   26fd0:	cmp	r6, #0
   26fd4:	beq	27060 <myhtml_token_node_attr_append@@Base+0x108>
   26fd8:	ldr	r0, [r7]
   26fdc:	add	r7, r4, #28
   26fe0:	add	r3, r6, #1
   26fe4:	mov	r2, r7
   26fe8:	ldr	r1, [r0, #52]	; 0x34
   26fec:	ldr	r0, [r0, #4]
   26ff0:	bl	105a4 <mycore_string_init@plt>
   26ff4:	mov	r2, r6
   26ff8:	ldr	r1, [sp, #32]
   26ffc:	mov	r0, r7
   27000:	bl	10868 <mycore_string_append@plt>
   27004:	ldr	r3, [r5, #40]	; 0x28
   27008:	cmp	r3, #0
   2700c:	streq	r3, [r4, #4]
   27010:	streq	r4, [r5, #40]	; 0x28
   27014:	streq	r4, [r5, #44]	; 0x2c
   27018:	beq	27030 <myhtml_token_node_attr_append@@Base+0xd8>
   2701c:	ldr	r3, [r5, #44]	; 0x2c
   27020:	str	r4, [r3]
   27024:	ldr	r3, [r5, #44]	; 0x2c
   27028:	str	r3, [r4, #4]
   2702c:	str	r4, [r5, #44]	; 0x2c
   27030:	mov	r3, #1
   27034:	str	r3, [r4, #64]	; 0x40
   27038:	mov	r0, r4
   2703c:	ldrd	r4, [sp]
   27040:	ldrd	r6, [sp, #8]
   27044:	ldrd	r8, [sp, #16]
   27048:	ldr	sl, [sp, #24]
   2704c:	add	sp, sp, #28
   27050:	pop	{pc}		; (ldr pc, [sp], #4)
   27054:	add	r0, r0, #8
   27058:	bl	11024 <mycore_string_clean_all@plt>
   2705c:	b	26fd0 <myhtml_token_node_attr_append@@Base+0x78>
   27060:	add	r0, r4, #28
   27064:	bl	11024 <mycore_string_clean_all@plt>
   27068:	b	27004 <myhtml_token_node_attr_append@@Base+0xac>

0002706c <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   2706c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   27070:	strd	r6, [sp, #8]
   27074:	strd	r8, [sp, #16]
   27078:	str	sl, [sp, #24]
   2707c:	str	lr, [sp, #28]
   27080:	mov	r7, r0
   27084:	mov	r5, r1
   27088:	mov	sl, r2
   2708c:	mov	r8, r3
   27090:	ldr	r6, [sp, #36]	; 0x24
   27094:	mov	r2, #0
   27098:	ldr	r1, [sp, #40]	; 0x28
   2709c:	ldr	r0, [r0, #8]
   270a0:	bl	10b50 <mcobject_async_malloc@plt>
   270a4:	mov	r4, r0
   270a8:	mov	r3, #0
   270ac:	str	r3, [r0]
   270b0:	cmp	r8, r3
   270b4:	beq	2719c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x130>
   270b8:	ldr	r0, [r7]
   270bc:	add	r9, r4, #8
   270c0:	add	r3, r8, #1
   270c4:	mov	r2, r9
   270c8:	ldr	r1, [r0, #52]	; 0x34
   270cc:	ldr	r0, [r0, #4]
   270d0:	bl	105a4 <mycore_string_init@plt>
   270d4:	ldr	r3, [sp, #44]	; 0x2c
   270d8:	cmp	r3, #0
   270dc:	bne	27128 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xbc>
   270e0:	mov	r2, r8
   270e4:	mov	r1, sl
   270e8:	mov	r0, r9
   270ec:	bl	1061c <mycore_string_append_lowercase@plt>
   270f0:	cmp	r6, #0
   270f4:	beq	27144 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   270f8:	ldr	r0, [r7]
   270fc:	add	r7, r4, #28
   27100:	add	r3, r6, #1
   27104:	mov	r2, r7
   27108:	ldr	r1, [r0, #52]	; 0x34
   2710c:	ldr	r0, [r0, #4]
   27110:	bl	105a4 <mycore_string_init@plt>
   27114:	mov	r2, r6
   27118:	ldr	r1, [sp, #32]
   2711c:	mov	r0, r7
   27120:	bl	10868 <mycore_string_append@plt>
   27124:	b	2714c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe0>
   27128:	ldr	r3, [sp, #44]	; 0x2c
   2712c:	mov	r2, r8
   27130:	mov	r1, sl
   27134:	mov	r0, r9
   27138:	bl	fddc <myencoding_string_append_lowercase_ascii@plt>
   2713c:	cmp	r6, #0
   27140:	bne	271ec <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x180>
   27144:	add	r0, r4, #28
   27148:	bl	11024 <mycore_string_clean_all@plt>
   2714c:	ldr	r3, [r5, #40]	; 0x28
   27150:	cmp	r3, #0
   27154:	streq	r3, [r4, #4]
   27158:	streq	r4, [r5, #40]	; 0x28
   2715c:	streq	r4, [r5, #44]	; 0x2c
   27160:	beq	27178 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x10c>
   27164:	ldr	r3, [r5, #44]	; 0x2c
   27168:	str	r4, [r3]
   2716c:	ldr	r3, [r5, #44]	; 0x2c
   27170:	str	r3, [r4, #4]
   27174:	str	r4, [r5, #44]	; 0x2c
   27178:	mov	r3, #1
   2717c:	str	r3, [r4, #64]	; 0x40
   27180:	mov	r0, r4
   27184:	ldrd	r4, [sp]
   27188:	ldrd	r6, [sp, #8]
   2718c:	ldrd	r8, [sp, #16]
   27190:	ldr	sl, [sp, #24]
   27194:	add	sp, sp, #28
   27198:	pop	{pc}		; (ldr pc, [sp], #4)
   2719c:	add	r0, r0, #8
   271a0:	bl	11024 <mycore_string_clean_all@plt>
   271a4:	cmp	r6, #0
   271a8:	beq	27144 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   271ac:	ldr	r0, [r7]
   271b0:	add	r7, r4, #28
   271b4:	add	r3, r6, #1
   271b8:	mov	r2, r7
   271bc:	ldr	r1, [r0, #52]	; 0x34
   271c0:	ldr	r0, [r0, #4]
   271c4:	bl	105a4 <mycore_string_init@plt>
   271c8:	ldr	r3, [sp, #44]	; 0x2c
   271cc:	cmp	r3, #0
   271d0:	beq	27114 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xa8>
   271d4:	ldr	r3, [sp, #44]	; 0x2c
   271d8:	mov	r2, r6
   271dc:	ldr	r1, [sp, #32]
   271e0:	mov	r0, r7
   271e4:	bl	103f4 <myencoding_string_append@plt>
   271e8:	b	2714c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe0>
   271ec:	ldr	r0, [r7]
   271f0:	add	r7, r4, #28
   271f4:	add	r3, r6, #1
   271f8:	mov	r2, r7
   271fc:	ldr	r1, [r0, #52]	; 0x34
   27200:	ldr	r0, [r0, #4]
   27204:	bl	105a4 <mycore_string_init@plt>
   27208:	b	271d4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x168>

0002720c <myhtml_token_attr_copy@@Base>:
   2720c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   27210:	strd	r6, [sp, #8]
   27214:	str	r8, [sp, #16]
   27218:	str	lr, [sp, #20]
   2721c:	mov	r7, r0
   27220:	mov	r5, r1
   27224:	mov	r6, r2
   27228:	mov	r2, #0
   2722c:	mov	r1, r3
   27230:	ldr	r0, [r0, #8]
   27234:	bl	10b50 <mcobject_async_malloc@plt>
   27238:	mov	r4, r0
   2723c:	mov	r3, #0
   27240:	str	r3, [r0]
   27244:	ldr	r3, [r5, #16]
   27248:	cmp	r3, #0
   2724c:	beq	27300 <myhtml_token_attr_copy@@Base+0xf4>
   27250:	ldr	r0, [r7]
   27254:	add	r8, r4, #8
   27258:	add	r3, r3, #1
   2725c:	mov	r2, r8
   27260:	ldr	r1, [r0, #52]	; 0x34
   27264:	ldr	r0, [r0, #4]
   27268:	bl	105a4 <mycore_string_init@plt>
   2726c:	ldr	r2, [r5, #16]
   27270:	ldr	r1, [r5, #8]
   27274:	mov	r0, r8
   27278:	bl	1061c <mycore_string_append_lowercase@plt>
   2727c:	ldr	r3, [r5, #36]	; 0x24
   27280:	cmp	r3, #0
   27284:	beq	2730c <myhtml_token_attr_copy@@Base+0x100>
   27288:	ldr	r0, [r7]
   2728c:	add	r7, r4, #28
   27290:	add	r3, r3, #1
   27294:	mov	r2, r7
   27298:	ldr	r1, [r0, #52]	; 0x34
   2729c:	ldr	r0, [r0, #4]
   272a0:	bl	105a4 <mycore_string_init@plt>
   272a4:	ldr	r2, [r5, #36]	; 0x24
   272a8:	ldr	r1, [r5, #28]
   272ac:	mov	r0, r7
   272b0:	bl	10868 <mycore_string_append@plt>
   272b4:	ldr	r3, [r6, #40]	; 0x28
   272b8:	cmp	r3, #0
   272bc:	streq	r3, [r4, #4]
   272c0:	streq	r4, [r6, #40]	; 0x28
   272c4:	streq	r4, [r6, #44]	; 0x2c
   272c8:	beq	272e0 <myhtml_token_attr_copy@@Base+0xd4>
   272cc:	ldr	r3, [r6, #44]	; 0x2c
   272d0:	str	r4, [r3]
   272d4:	ldr	r3, [r6, #44]	; 0x2c
   272d8:	str	r3, [r4, #4]
   272dc:	str	r4, [r6, #44]	; 0x2c
   272e0:	ldr	r3, [r5, #64]	; 0x40
   272e4:	str	r3, [r4, #64]	; 0x40
   272e8:	mov	r0, #1
   272ec:	ldrd	r4, [sp]
   272f0:	ldrd	r6, [sp, #8]
   272f4:	ldr	r8, [sp, #16]
   272f8:	add	sp, sp, #20
   272fc:	pop	{pc}		; (ldr pc, [sp], #4)
   27300:	add	r0, r0, #8
   27304:	bl	11024 <mycore_string_clean_all@plt>
   27308:	b	2727c <myhtml_token_attr_copy@@Base+0x70>
   2730c:	add	r0, r4, #28
   27310:	bl	11024 <mycore_string_clean_all@plt>
   27314:	b	272b4 <myhtml_token_attr_copy@@Base+0xa8>

00027318 <myhtml_token_node_attr_copy@@Base>:
   27318:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2731c:	strd	r6, [sp, #8]
   27320:	str	r8, [sp, #16]
   27324:	str	lr, [sp, #20]
   27328:	mov	r7, r0
   2732c:	mov	r6, r2
   27330:	mov	r5, r3
   27334:	ldr	r4, [r1, #40]	; 0x28
   27338:	cmp	r4, #0
   2733c:	beq	27360 <myhtml_token_node_attr_copy@@Base+0x48>
   27340:	mov	r3, r5
   27344:	mov	r2, r6
   27348:	mov	r1, r4
   2734c:	mov	r0, r7
   27350:	bl	106f4 <myhtml_token_attr_copy@plt>
   27354:	ldr	r4, [r4]
   27358:	cmp	r4, #0
   2735c:	bne	27340 <myhtml_token_node_attr_copy@@Base+0x28>
   27360:	ldrd	r4, [sp]
   27364:	ldrd	r6, [sp, #8]
   27368:	ldr	r8, [sp, #16]
   2736c:	add	sp, sp, #20
   27370:	pop	{pc}		; (ldr pc, [sp], #4)

00027374 <myhtml_token_node_clone@@Base>:
   27374:	strd	r4, [sp, #-32]!	; 0xffffffe0
   27378:	strd	r6, [sp, #8]
   2737c:	strd	r8, [sp, #16]
   27380:	str	sl, [sp, #24]
   27384:	str	lr, [sp, #28]
   27388:	subs	r4, r1, #0
   2738c:	moveq	r5, r4
   27390:	beq	27434 <myhtml_token_node_clone@@Base+0xc0>
   27394:	mov	r7, r3
   27398:	mov	r1, r2
   2739c:	mov	r6, r0
   273a0:	ldr	r8, [r0]
   273a4:	bl	109a0 <myhtml_token_node_create@plt>
   273a8:	subs	r5, r0, #0
   273ac:	beq	27434 <myhtml_token_node_clone@@Base+0xc0>
   273b0:	ldr	r3, [r4]
   273b4:	str	r3, [r5]
   273b8:	ldr	r3, [r4, #48]	; 0x30
   273bc:	str	r3, [r5, #48]	; 0x30
   273c0:	mov	r3, #0
   273c4:	str	r3, [r5, #40]	; 0x28
   273c8:	str	r3, [r5, #44]	; 0x2c
   273cc:	ldr	r3, [r4, #24]
   273d0:	str	r3, [r5, #24]
   273d4:	ldr	r3, [r4, #28]
   273d8:	str	r3, [r5, #28]
   273dc:	ldr	r3, [r4, #32]
   273e0:	str	r3, [r5, #32]
   273e4:	ldr	r3, [r4, #36]	; 0x24
   273e8:	str	r3, [r5, #36]	; 0x24
   273ec:	ldr	r3, [r4, #12]
   273f0:	cmp	r3, #0
   273f4:	beq	27450 <myhtml_token_node_clone@@Base+0xdc>
   273f8:	add	r9, r5, #4
   273fc:	add	r3, r3, #1
   27400:	mov	r2, r9
   27404:	ldr	r1, [r8, #52]	; 0x34
   27408:	ldr	r0, [r8, #4]
   2740c:	bl	105a4 <mycore_string_init@plt>
   27410:	ldr	r2, [r4, #12]
   27414:	ldr	r1, [r4, #4]
   27418:	mov	r0, r9
   2741c:	bl	10868 <mycore_string_append@plt>
   27420:	mov	r3, r7
   27424:	mov	r2, r5
   27428:	mov	r1, r4
   2742c:	mov	r0, r6
   27430:	bl	10514 <myhtml_token_node_attr_copy@plt>
   27434:	mov	r0, r5
   27438:	ldrd	r4, [sp]
   2743c:	ldrd	r6, [sp, #8]
   27440:	ldrd	r8, [sp, #16]
   27444:	ldr	sl, [sp, #24]
   27448:	add	sp, sp, #28
   2744c:	pop	{pc}		; (ldr pc, [sp], #4)
   27450:	add	r0, r5, #4
   27454:	bl	11024 <mycore_string_clean_all@plt>
   27458:	b	27420 <myhtml_token_node_clone@@Base+0xac>

0002745c <myhtml_token_attr_match@@Base>:
   2745c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   27460:	strd	r6, [sp, #8]
   27464:	str	r8, [sp, #16]
   27468:	str	lr, [sp, #20]
   2746c:	mov	r7, r2
   27470:	mov	r5, r3
   27474:	ldr	r6, [sp, #28]
   27478:	ldr	r4, [r1, #40]	; 0x28
   2747c:	cmp	r4, #0
   27480:	bne	27494 <myhtml_token_attr_match@@Base+0x38>
   27484:	b	274d4 <myhtml_token_attr_match@@Base+0x78>
   27488:	ldr	r4, [r4]
   2748c:	cmp	r4, #0
   27490:	beq	274d4 <myhtml_token_attr_match@@Base+0x78>
   27494:	ldr	r3, [r4, #16]
   27498:	cmp	r3, r5
   2749c:	bne	27488 <myhtml_token_attr_match@@Base+0x2c>
   274a0:	ldr	r3, [r4, #36]	; 0x24
   274a4:	cmp	r3, r6
   274a8:	bne	27488 <myhtml_token_attr_match@@Base+0x2c>
   274ac:	mov	r1, r7
   274b0:	ldr	r0, [r4, #8]
   274b4:	bl	fb9c <mycore_strcmp@plt>
   274b8:	cmp	r0, #0
   274bc:	bne	27488 <myhtml_token_attr_match@@Base+0x2c>
   274c0:	ldr	r1, [sp, #24]
   274c4:	ldr	r0, [r4, #28]
   274c8:	bl	fb9c <mycore_strcmp@plt>
   274cc:	cmp	r0, #0
   274d0:	movne	r4, #0
   274d4:	mov	r0, r4
   274d8:	ldrd	r4, [sp]
   274dc:	ldrd	r6, [sp, #8]
   274e0:	ldr	r8, [sp, #16]
   274e4:	add	sp, sp, #20
   274e8:	pop	{pc}		; (ldr pc, [sp], #4)

000274ec <myhtml_token_attr_match_case@@Base>:
   274ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   274f0:	strd	r6, [sp, #8]
   274f4:	str	r8, [sp, #16]
   274f8:	str	lr, [sp, #20]
   274fc:	mov	r7, r2
   27500:	mov	r5, r3
   27504:	ldr	r6, [sp, #28]
   27508:	ldr	r4, [r1, #40]	; 0x28
   2750c:	cmp	r4, #0
   27510:	bne	27524 <myhtml_token_attr_match_case@@Base+0x38>
   27514:	b	27564 <myhtml_token_attr_match_case@@Base+0x78>
   27518:	ldr	r4, [r4]
   2751c:	cmp	r4, #0
   27520:	beq	27564 <myhtml_token_attr_match_case@@Base+0x78>
   27524:	ldr	r3, [r4, #16]
   27528:	cmp	r3, r5
   2752c:	bne	27518 <myhtml_token_attr_match_case@@Base+0x2c>
   27530:	ldr	r3, [r4, #36]	; 0x24
   27534:	cmp	r3, r6
   27538:	bne	27518 <myhtml_token_attr_match_case@@Base+0x2c>
   2753c:	mov	r1, r7
   27540:	ldr	r0, [r4, #8]
   27544:	bl	fb9c <mycore_strcmp@plt>
   27548:	cmp	r0, #0
   2754c:	bne	27518 <myhtml_token_attr_match_case@@Base+0x2c>
   27550:	ldr	r1, [sp, #24]
   27554:	ldr	r0, [r4, #28]
   27558:	bl	104c0 <mycore_strcasecmp@plt>
   2755c:	cmp	r0, #0
   27560:	movne	r4, #0
   27564:	mov	r0, r4
   27568:	ldrd	r4, [sp]
   2756c:	ldrd	r6, [sp, #8]
   27570:	ldr	r8, [sp, #16]
   27574:	add	sp, sp, #20
   27578:	pop	{pc}		; (ldr pc, [sp], #4)

0002757c <_myhtml_token_create_copy_srt@@Base>:
   2757c:	strd	r4, [sp, #-16]!
   27580:	str	r6, [sp, #8]
   27584:	str	lr, [sp, #12]
   27588:	mov	r5, r1
   2758c:	mov	r4, r2
   27590:	mov	r6, r3
   27594:	ldr	r3, [r0]
   27598:	add	r2, r2, #2
   2759c:	ldr	r1, [r3, #52]	; 0x34
   275a0:	ldr	r0, [r3, #4]
   275a4:	bl	108a4 <mchar_async_malloc@plt>
   275a8:	str	r0, [r6]
   275ac:	mov	r2, r4
   275b0:	mov	r1, r5
   275b4:	bl	10274 <mycore_string_raw_copy@plt>
   275b8:	ldrd	r4, [sp]
   275bc:	ldr	r6, [sp, #8]
   275c0:	add	sp, sp, #12
   275c4:	pop	{pc}		; (ldr pc, [sp], #4)

000275c8 <myhtml_token_strict_doctype_by_token@@Base>:
   275c8:	strd	r4, [sp, #-16]!
   275cc:	str	r6, [sp, #8]
   275d0:	str	lr, [sp, #12]
   275d4:	mov	r6, r0
   275d8:	mov	r4, r2
   275dc:	ldr	r5, [r1, #40]	; 0x28
   275e0:	cmp	r5, #0
   275e4:	beq	275f4 <myhtml_token_strict_doctype_by_token@@Base+0x2c>
   275e8:	ldr	r2, [r5, #16]
   275ec:	cmp	r2, #0
   275f0:	bne	27654 <myhtml_token_strict_doctype_by_token@@Base+0x8c>
   275f4:	mov	r3, r4
   275f8:	mov	r2, #0
   275fc:	strb	r2, [r3], #4
   27600:	mov	r2, #1
   27604:	ldr	r1, [pc, #544]	; 2782c <myhtml_token_strict_doctype_by_token@@Base+0x264>
   27608:	add	r1, pc, r1
   2760c:	mov	r0, r6
   27610:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   27614:	ldr	r0, [r4, #8]
   27618:	cmp	r0, #0
   2761c:	beq	27624 <myhtml_token_strict_doctype_by_token@@Base+0x5c>
   27620:	bl	10d60 <mycore_free@plt>
   27624:	mov	r3, #0
   27628:	str	r3, [r4, #8]
   2762c:	ldr	r0, [r4, #12]
   27630:	cmp	r0, r3
   27634:	beq	2763c <myhtml_token_strict_doctype_by_token@@Base+0x74>
   27638:	bl	10d60 <mycore_free@plt>
   2763c:	mov	r3, #0
   27640:	str	r3, [r4, #12]
   27644:	ldrd	r4, [sp]
   27648:	ldr	r6, [sp, #8]
   2764c:	add	sp, sp, #12
   27650:	pop	{pc}		; (ldr pc, [sp], #4)
   27654:	add	r3, r4, #4
   27658:	ldr	r1, [r5, #8]
   2765c:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   27660:	ldr	r1, [r4, #4]
   27664:	ldr	r0, [pc, #452]	; 27830 <myhtml_token_strict_doctype_by_token@@Base+0x268>
   27668:	add	r0, pc, r0
   2766c:	bl	fb9c <mycore_strcmp@plt>
   27670:	clz	r0, r0
   27674:	lsr	r0, r0, #5
   27678:	strb	r0, [r4]
   2767c:	ldr	r5, [r5]
   27680:	cmp	r5, #0
   27684:	beq	27644 <myhtml_token_strict_doctype_by_token@@Base+0x7c>
   27688:	ldr	r3, [r5, #36]	; 0x24
   2768c:	cmp	r3, #0
   27690:	beq	27644 <myhtml_token_strict_doctype_by_token@@Base+0x7c>
   27694:	ldr	r1, [pc, #408]	; 27834 <myhtml_token_strict_doctype_by_token@@Base+0x26c>
   27698:	add	r1, pc, r1
   2769c:	ldr	r0, [r5, #28]
   276a0:	bl	104c0 <mycore_strcasecmp@plt>
   276a4:	cmp	r0, #0
   276a8:	bne	27760 <myhtml_token_strict_doctype_by_token@@Base+0x198>
   276ac:	ldr	r5, [r5]
   276b0:	cmp	r5, #0
   276b4:	beq	276c4 <myhtml_token_strict_doctype_by_token@@Base+0xfc>
   276b8:	ldr	r2, [r5, #36]	; 0x24
   276bc:	cmp	r2, #0
   276c0:	bne	276f8 <myhtml_token_strict_doctype_by_token@@Base+0x130>
   276c4:	ldr	r0, [r4, #8]
   276c8:	cmp	r0, #0
   276cc:	beq	276d4 <myhtml_token_strict_doctype_by_token@@Base+0x10c>
   276d0:	bl	10d60 <mycore_free@plt>
   276d4:	mov	r3, #0
   276d8:	str	r3, [r4, #8]
   276dc:	ldr	r0, [r4, #12]
   276e0:	cmp	r0, r3
   276e4:	beq	276ec <myhtml_token_strict_doctype_by_token@@Base+0x124>
   276e8:	bl	10d60 <mycore_free@plt>
   276ec:	mov	r3, #0
   276f0:	str	r3, [r4, #12]
   276f4:	b	27644 <myhtml_token_strict_doctype_by_token@@Base+0x7c>
   276f8:	add	r3, r4, #8
   276fc:	ldr	r1, [r5, #28]
   27700:	mov	r0, r6
   27704:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   27708:	ldr	r1, [r5]
   2770c:	cmp	r1, #0
   27710:	beq	27720 <myhtml_token_strict_doctype_by_token@@Base+0x158>
   27714:	ldr	r2, [r1, #36]	; 0x24
   27718:	cmp	r2, #0
   2771c:	bne	2774c <myhtml_token_strict_doctype_by_token@@Base+0x184>
   27720:	ldr	r0, [r4, #12]
   27724:	cmp	r0, #0
   27728:	beq	27730 <myhtml_token_strict_doctype_by_token@@Base+0x168>
   2772c:	bl	10d60 <mycore_free@plt>
   27730:	add	r3, r4, #12
   27734:	mov	r2, #1
   27738:	ldr	r1, [pc, #248]	; 27838 <myhtml_token_strict_doctype_by_token@@Base+0x270>
   2773c:	add	r1, pc, r1
   27740:	mov	r0, r6
   27744:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   27748:	b	27644 <myhtml_token_strict_doctype_by_token@@Base+0x7c>
   2774c:	add	r3, r4, #12
   27750:	ldr	r1, [r1, #28]
   27754:	mov	r0, r6
   27758:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   2775c:	b	27644 <myhtml_token_strict_doctype_by_token@@Base+0x7c>
   27760:	ldr	r2, [r5, #36]	; 0x24
   27764:	ldr	r1, [pc, #208]	; 2783c <myhtml_token_strict_doctype_by_token@@Base+0x274>
   27768:	add	r1, pc, r1
   2776c:	ldr	r0, [r5, #28]
   27770:	bl	10238 <mycore_strncasecmp@plt>
   27774:	cmp	r0, #0
   27778:	bne	277f8 <myhtml_token_strict_doctype_by_token@@Base+0x230>
   2777c:	ldr	r5, [r5]
   27780:	cmp	r5, #0
   27784:	beq	27794 <myhtml_token_strict_doctype_by_token@@Base+0x1cc>
   27788:	ldr	r3, [r5, #36]	; 0x24
   2778c:	cmp	r3, #0
   27790:	bne	277c8 <myhtml_token_strict_doctype_by_token@@Base+0x200>
   27794:	ldr	r0, [r4, #8]
   27798:	cmp	r0, #0
   2779c:	beq	277a4 <myhtml_token_strict_doctype_by_token@@Base+0x1dc>
   277a0:	bl	10d60 <mycore_free@plt>
   277a4:	mov	r3, #0
   277a8:	str	r3, [r4, #8]
   277ac:	ldr	r0, [r4, #12]
   277b0:	cmp	r0, r3
   277b4:	beq	277bc <myhtml_token_strict_doctype_by_token@@Base+0x1f4>
   277b8:	bl	10d60 <mycore_free@plt>
   277bc:	mov	r3, #0
   277c0:	str	r3, [r4, #12]
   277c4:	b	27644 <myhtml_token_strict_doctype_by_token@@Base+0x7c>
   277c8:	add	r3, r4, #8
   277cc:	mov	r2, #1
   277d0:	ldr	r1, [pc, #104]	; 27840 <myhtml_token_strict_doctype_by_token@@Base+0x278>
   277d4:	add	r1, pc, r1
   277d8:	mov	r0, r6
   277dc:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   277e0:	add	r3, r4, #12
   277e4:	ldr	r2, [r5, #36]	; 0x24
   277e8:	ldr	r1, [r5, #28]
   277ec:	mov	r0, r6
   277f0:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   277f4:	b	27644 <myhtml_token_strict_doctype_by_token@@Base+0x7c>
   277f8:	ldr	r0, [r4, #8]
   277fc:	cmp	r0, #0
   27800:	beq	27808 <myhtml_token_strict_doctype_by_token@@Base+0x240>
   27804:	bl	10d60 <mycore_free@plt>
   27808:	mov	r3, #0
   2780c:	str	r3, [r4, #8]
   27810:	ldr	r0, [r4, #12]
   27814:	cmp	r0, r3
   27818:	beq	27820 <myhtml_token_strict_doctype_by_token@@Base+0x258>
   2781c:	bl	10d60 <mycore_free@plt>
   27820:	mov	r3, #0
   27824:	str	r3, [r4, #12]
   27828:	b	27644 <myhtml_token_strict_doctype_by_token@@Base+0x7c>
   2782c:	andeq	r9, sp, r4, asr #16
   27830:	andeq	r8, sp, r4, lsr ip
   27834:	andeq	r8, sp, r8, asr #28
   27838:	andeq	r9, sp, r0, lsl r7
   2783c:	andeq	r8, sp, r0, ror sp
   27840:	andeq	r9, sp, r8, ror r6

00027844 <myhtml_token_doctype_check_html_4_0@@Base>:
   27844:	str	r4, [sp, #-8]!
   27848:	str	lr, [sp, #4]
   2784c:	mov	r4, r0
   27850:	ldr	r1, [pc, #68]	; 2789c <myhtml_token_doctype_check_html_4_0@@Base+0x58>
   27854:	add	r1, pc, r1
   27858:	ldr	r0, [r0, #8]
   2785c:	bl	fb9c <mycore_strcmp@plt>
   27860:	cmp	r0, #0
   27864:	moveq	r0, #0
   27868:	beq	27890 <myhtml_token_doctype_check_html_4_0@@Base+0x4c>
   2786c:	ldr	r0, [r4, #12]
   27870:	cmp	r0, #0
   27874:	moveq	r0, #1
   27878:	beq	27890 <myhtml_token_doctype_check_html_4_0@@Base+0x4c>
   2787c:	ldr	r1, [pc, #28]	; 278a0 <myhtml_token_doctype_check_html_4_0@@Base+0x5c>
   27880:	add	r1, pc, r1
   27884:	bl	fb9c <mycore_strcmp@plt>
   27888:	adds	r0, r0, #0
   2788c:	movne	r0, #1
   27890:	ldr	r4, [sp]
   27894:	add	sp, sp, #4
   27898:	pop	{pc}		; (ldr pc, [sp], #4)
   2789c:	strdeq	r9, [sp], -ip
   278a0:	andeq	r9, sp, ip, ror #11

000278a4 <myhtml_token_doctype_check_html_4_01@@Base>:
   278a4:	str	r4, [sp, #-8]!
   278a8:	str	lr, [sp, #4]
   278ac:	mov	r4, r0
   278b0:	ldr	r1, [pc, #68]	; 278fc <myhtml_token_doctype_check_html_4_01@@Base+0x58>
   278b4:	add	r1, pc, r1
   278b8:	ldr	r0, [r0, #8]
   278bc:	bl	fb9c <mycore_strcmp@plt>
   278c0:	cmp	r0, #0
   278c4:	moveq	r0, #0
   278c8:	beq	278f0 <myhtml_token_doctype_check_html_4_01@@Base+0x4c>
   278cc:	ldr	r0, [r4, #12]
   278d0:	cmp	r0, #0
   278d4:	moveq	r0, #1
   278d8:	beq	278f0 <myhtml_token_doctype_check_html_4_01@@Base+0x4c>
   278dc:	ldr	r1, [pc, #28]	; 27900 <myhtml_token_doctype_check_html_4_01@@Base+0x5c>
   278e0:	add	r1, pc, r1
   278e4:	bl	fb9c <mycore_strcmp@plt>
   278e8:	adds	r0, r0, #0
   278ec:	movne	r0, #1
   278f0:	ldr	r4, [sp]
   278f4:	add	sp, sp, #4
   278f8:	pop	{pc}		; (ldr pc, [sp], #4)
   278fc:	andeq	r9, sp, r4, ror #11
   27900:	ldrdeq	r9, [sp], -r4

00027904 <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   27904:	ldr	r3, [r0, #12]
   27908:	cmp	r3, #0
   2790c:	beq	27960 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x5c>
   27910:	str	r4, [sp, #-8]!
   27914:	str	lr, [sp, #4]
   27918:	mov	r4, r0
   2791c:	ldr	r1, [pc, #68]	; 27968 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x64>
   27920:	add	r1, pc, r1
   27924:	ldr	r0, [r0, #8]
   27928:	bl	fb9c <mycore_strcmp@plt>
   2792c:	cmp	r0, #0
   27930:	moveq	r0, #0
   27934:	bne	27944 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x40>
   27938:	ldr	r4, [sp]
   2793c:	add	sp, sp, #4
   27940:	pop	{pc}		; (ldr pc, [sp], #4)
   27944:	ldr	r1, [pc, #32]	; 2796c <myhtml_token_doctype_check_xhtml_1_0@@Base+0x68>
   27948:	add	r1, pc, r1
   2794c:	ldr	r0, [r4, #12]
   27950:	bl	fb9c <mycore_strcmp@plt>
   27954:	adds	r0, r0, #0
   27958:	movne	r0, #1
   2795c:	b	27938 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x34>
   27960:	mov	r0, #1
   27964:	bx	lr
   27968:			; <UNDEFINED> instruction: 0x000d95bc
   2796c:			; <UNDEFINED> instruction: 0x000d95b8

00027970 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   27970:	ldr	r3, [r0, #12]
   27974:	cmp	r3, #0
   27978:	beq	279cc <myhtml_token_doctype_check_xhtml_1_1@@Base+0x5c>
   2797c:	str	r4, [sp, #-8]!
   27980:	str	lr, [sp, #4]
   27984:	mov	r4, r0
   27988:	ldr	r1, [pc, #68]	; 279d4 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x64>
   2798c:	add	r1, pc, r1
   27990:	ldr	r0, [r0, #8]
   27994:	bl	fb9c <mycore_strcmp@plt>
   27998:	cmp	r0, #0
   2799c:	moveq	r0, #0
   279a0:	bne	279b0 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x40>
   279a4:	ldr	r4, [sp]
   279a8:	add	sp, sp, #4
   279ac:	pop	{pc}		; (ldr pc, [sp], #4)
   279b0:	ldr	r1, [pc, #32]	; 279d8 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x68>
   279b4:	add	r1, pc, r1
   279b8:	ldr	r0, [r4, #12]
   279bc:	bl	fb9c <mycore_strcmp@plt>
   279c0:	adds	r0, r0, #0
   279c4:	movne	r0, #1
   279c8:	b	279a4 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x34>
   279cc:	mov	r0, #1
   279d0:	bx	lr
   279d4:	andeq	r9, sp, r8, lsr #11
   279d8:	muleq	sp, ip, r5

000279dc <myhtml_token_release_and_check_doctype_attributes@@Base>:
   279dc:	strd	r4, [sp, #-16]!
   279e0:	str	r6, [sp, #8]
   279e4:	str	lr, [sp, #12]
   279e8:	subs	r4, r2, #0
   279ec:	moveq	r5, #0
   279f0:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   279f4:	mov	r2, r4
   279f8:	bl	10430 <myhtml_token_strict_doctype_by_token@plt>
   279fc:	ldr	r3, [r4, #4]
   27a00:	cmp	r3, #0
   27a04:	moveq	r5, #0
   27a08:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27a0c:	ldrb	r5, [r4]
   27a10:	cmp	r5, #0
   27a14:	bne	27a84 <myhtml_token_release_and_check_doctype_attributes@@Base+0xa8>
   27a18:	ldr	r3, [r4, #8]
   27a1c:	cmp	r3, #0
   27a20:	movne	r5, #1
   27a24:	beq	27a3c <myhtml_token_release_and_check_doctype_attributes@@Base+0x60>
   27a28:	mov	r0, r5
   27a2c:	ldrd	r4, [sp]
   27a30:	ldr	r6, [sp, #8]
   27a34:	add	sp, sp, #12
   27a38:	pop	{pc}		; (ldr pc, [sp], #4)
   27a3c:	ldr	r0, [r4, #12]
   27a40:	cmp	r0, #0
   27a44:	moveq	r5, #1
   27a48:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27a4c:	ldr	r1, [pc, #140]	; 27ae0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x104>
   27a50:	add	r1, pc, r1
   27a54:	bl	fb9c <mycore_strcmp@plt>
   27a58:	cmp	r0, #0
   27a5c:	moveq	r5, #1
   27a60:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27a64:	ldr	r3, [r4, #8]
   27a68:	cmp	r3, #0
   27a6c:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27a70:	ldrb	r3, [r4]
   27a74:	cmp	r3, #0
   27a78:	moveq	r5, #1
   27a7c:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27a80:	b	27a94 <myhtml_token_release_and_check_doctype_attributes@@Base+0xb8>
   27a84:	ldr	r3, [r4, #8]
   27a88:	cmp	r3, #0
   27a8c:	moveq	r5, #0
   27a90:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27a94:	mov	r0, r4
   27a98:	bl	104b4 <myhtml_token_doctype_check_html_4_0@plt>
   27a9c:	subs	r5, r0, #0
   27aa0:	moveq	r5, #1
   27aa4:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27aa8:	mov	r0, r4
   27aac:	bl	10340 <myhtml_token_doctype_check_html_4_01@plt>
   27ab0:	subs	r6, r0, #0
   27ab4:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27ab8:	mov	r0, r4
   27abc:	bl	105f8 <myhtml_token_doctype_check_xhtml_1_0@plt>
   27ac0:	cmp	r0, #0
   27ac4:	moveq	r5, r6
   27ac8:	beq	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27acc:	mov	r0, r4
   27ad0:	bl	fbd8 <myhtml_token_doctype_check_xhtml_1_1@plt>
   27ad4:	eor	r0, r0, #1
   27ad8:	uxtb	r5, r0
   27adc:	b	27a28 <myhtml_token_release_and_check_doctype_attributes@@Base+0x4c>
   27ae0:	andeq	r9, sp, r0, lsr r5

00027ae4 <myhtml_token_attr_compare@@Base>:
   27ae4:	cmp	r1, #0
   27ae8:	cmpne	r0, #0
   27aec:	beq	27ba8 <myhtml_token_attr_compare@@Base+0xc4>
   27af0:	strd	r4, [sp, #-16]!
   27af4:	str	r6, [sp, #8]
   27af8:	str	lr, [sp, #12]
   27afc:	ldr	r5, [r0, #40]	; 0x28
   27b00:	ldr	r4, [r1, #40]	; 0x28
   27b04:	cmp	r5, #0
   27b08:	cmpne	r4, #0
   27b0c:	beq	27b8c <myhtml_token_attr_compare@@Base+0xa8>
   27b10:	ldr	r2, [r5, #16]
   27b14:	ldr	r3, [r4, #16]
   27b18:	cmp	r2, r3
   27b1c:	bne	27b8c <myhtml_token_attr_compare@@Base+0xa8>
   27b20:	ldr	r2, [r5, #36]	; 0x24
   27b24:	ldr	r3, [r4, #36]	; 0x24
   27b28:	cmp	r2, r3
   27b2c:	bne	27b8c <myhtml_token_attr_compare@@Base+0xa8>
   27b30:	ldr	r1, [r4, #8]
   27b34:	ldr	r0, [r5, #8]
   27b38:	bl	fb9c <mycore_strcmp@plt>
   27b3c:	cmp	r0, #0
   27b40:	bne	27b8c <myhtml_token_attr_compare@@Base+0xa8>
   27b44:	ldr	r1, [r4, #28]
   27b48:	ldr	r0, [r5, #28]
   27b4c:	bl	104c0 <mycore_strcasecmp@plt>
   27b50:	cmp	r0, #0
   27b54:	bne	27b8c <myhtml_token_attr_compare@@Base+0xa8>
   27b58:	ldr	r5, [r5]
   27b5c:	ldr	r4, [r4]
   27b60:	cmp	r5, #0
   27b64:	cmpne	r4, #0
   27b68:	beq	27b8c <myhtml_token_attr_compare@@Base+0xa8>
   27b6c:	ldr	r2, [r5, #16]
   27b70:	ldr	r3, [r4, #16]
   27b74:	cmp	r2, r3
   27b78:	bne	27b8c <myhtml_token_attr_compare@@Base+0xa8>
   27b7c:	ldr	r2, [r5, #36]	; 0x24
   27b80:	ldr	r3, [r4, #36]	; 0x24
   27b84:	cmp	r2, r3
   27b88:	beq	27b30 <myhtml_token_attr_compare@@Base+0x4c>
   27b8c:	orrs	r3, r5, r4
   27b90:	moveq	r0, #1
   27b94:	movne	r0, #0
   27b98:	ldrd	r4, [sp]
   27b9c:	ldr	r6, [sp, #8]
   27ba0:	add	sp, sp, #12
   27ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   27ba8:	mov	r0, #0
   27bac:	bx	lr

00027bb0 <myhtml_token_attr_by_name@@Base>:
   27bb0:	strd	r4, [sp, #-16]!
   27bb4:	str	r6, [sp, #8]
   27bb8:	str	lr, [sp, #12]
   27bbc:	mov	r6, r1
   27bc0:	mov	r5, r2
   27bc4:	ldr	r4, [r0, #40]	; 0x28
   27bc8:	cmp	r4, #0
   27bcc:	bne	27be0 <myhtml_token_attr_by_name@@Base+0x30>
   27bd0:	b	27c00 <myhtml_token_attr_by_name@@Base+0x50>
   27bd4:	ldr	r4, [r4]
   27bd8:	cmp	r4, #0
   27bdc:	beq	27c00 <myhtml_token_attr_by_name@@Base+0x50>
   27be0:	ldr	r3, [r4, #16]
   27be4:	cmp	r3, r5
   27be8:	bne	27bd4 <myhtml_token_attr_by_name@@Base+0x24>
   27bec:	mov	r1, r6
   27bf0:	ldr	r0, [r4, #8]
   27bf4:	bl	fb9c <mycore_strcmp@plt>
   27bf8:	cmp	r0, #0
   27bfc:	bne	27bd4 <myhtml_token_attr_by_name@@Base+0x24>
   27c00:	mov	r0, r4
   27c04:	ldrd	r4, [sp]
   27c08:	ldr	r6, [sp, #8]
   27c0c:	add	sp, sp, #12
   27c10:	pop	{pc}		; (ldr pc, [sp], #4)

00027c14 <myhtml_token_node_attr_copy_with_check@@Base>:
   27c14:	strd	r4, [sp, #-24]!	; 0xffffffe8
   27c18:	strd	r6, [sp, #8]
   27c1c:	str	r8, [sp, #16]
   27c20:	str	lr, [sp, #20]
   27c24:	mov	r7, r0
   27c28:	mov	r5, r2
   27c2c:	mov	r6, r3
   27c30:	ldr	r4, [r1, #40]	; 0x28
   27c34:	cmp	r4, #0
   27c38:	bne	27c5c <myhtml_token_node_attr_copy_with_check@@Base+0x48>
   27c3c:	ldrd	r4, [sp]
   27c40:	ldrd	r6, [sp, #8]
   27c44:	ldr	r8, [sp, #16]
   27c48:	add	sp, sp, #20
   27c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   27c50:	ldr	r4, [r4]
   27c54:	cmp	r4, #0
   27c58:	beq	27c3c <myhtml_token_node_attr_copy_with_check@@Base+0x28>
   27c5c:	ldr	r2, [r4, #16]
   27c60:	cmp	r2, #0
   27c64:	beq	27c50 <myhtml_token_node_attr_copy_with_check@@Base+0x3c>
   27c68:	ldr	r1, [r4, #8]
   27c6c:	mov	r0, r5
   27c70:	bl	10e44 <myhtml_token_attr_by_name@plt>
   27c74:	cmp	r0, #0
   27c78:	bne	27c50 <myhtml_token_node_attr_copy_with_check@@Base+0x3c>
   27c7c:	mov	r3, r6
   27c80:	mov	r2, r5
   27c84:	mov	r1, r4
   27c88:	mov	r0, r7
   27c8c:	bl	106f4 <myhtml_token_attr_copy@plt>
   27c90:	b	27c50 <myhtml_token_node_attr_copy_with_check@@Base+0x3c>

00027c94 <myhtml_token_adjust_mathml_attributes@@Base>:
   27c94:	str	r4, [sp, #-8]!
   27c98:	str	lr, [sp, #4]
   27c9c:	mov	r2, #13
   27ca0:	ldr	r1, [pc, #68]	; 27cec <myhtml_token_adjust_mathml_attributes@@Base+0x58>
   27ca4:	add	r1, pc, r1
   27ca8:	bl	10e44 <myhtml_token_attr_by_name@plt>
   27cac:	cmp	r0, #0
   27cb0:	beq	27ce0 <myhtml_token_adjust_mathml_attributes@@Base+0x4c>
   27cb4:	ldr	r3, [r0, #8]
   27cb8:	ldr	r2, [pc, #48]	; 27cf0 <myhtml_token_adjust_mathml_attributes@@Base+0x5c>
   27cbc:	add	r2, pc, r2
   27cc0:	ldr	r0, [r2]
   27cc4:	ldr	r1, [r2, #4]
   27cc8:	str	r0, [r3]
   27ccc:	str	r1, [r3, #4]
   27cd0:	ldr	r1, [r2, #8]
   27cd4:	str	r1, [r3, #8]
   27cd8:	ldrb	r2, [r2, #12]
   27cdc:	strb	r2, [r3, #12]
   27ce0:	ldr	r4, [sp]
   27ce4:	add	sp, sp, #4
   27ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   27cec:	strdeq	r9, [sp], -r0
   27cf0:	andeq	r9, sp, r8, ror #5

00027cf4 <myhtml_token_adjust_svg_attributes@@Base>:
   27cf4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   27cf8:	strd	r6, [sp, #8]
   27cfc:	str	r8, [sp, #16]
   27d00:	str	lr, [sp, #20]
   27d04:	mov	r7, r0
   27d08:	ldr	r6, [pc, #100]	; 27d74 <myhtml_token_adjust_svg_attributes@@Base+0x80>
   27d0c:	add	r6, pc, r6
   27d10:	mov	r4, r6
   27d14:	add	r6, r6, #928	; 0x3a0
   27d18:	b	27d44 <myhtml_token_adjust_svg_attributes@@Base+0x50>
   27d1c:	add	r5, r0, #8
   27d20:	mov	r0, r5
   27d24:	bl	10cac <mycore_string_clean@plt>
   27d28:	ldr	r2, [r4, #12]
   27d2c:	ldr	r1, [r4, #8]
   27d30:	mov	r0, r5
   27d34:	bl	10868 <mycore_string_append@plt>
   27d38:	add	r4, r4, #16
   27d3c:	cmp	r4, r6
   27d40:	beq	27d60 <myhtml_token_adjust_svg_attributes@@Base+0x6c>
   27d44:	ldr	r2, [r4, #4]
   27d48:	ldr	r1, [r4]
   27d4c:	mov	r0, r7
   27d50:	bl	10e44 <myhtml_token_attr_by_name@plt>
   27d54:	cmp	r0, #0
   27d58:	bne	27d1c <myhtml_token_adjust_svg_attributes@@Base+0x28>
   27d5c:	b	27d38 <myhtml_token_adjust_svg_attributes@@Base+0x44>
   27d60:	ldrd	r4, [sp]
   27d64:	ldrd	r6, [sp, #8]
   27d68:	ldr	r8, [sp, #16]
   27d6c:	add	sp, sp, #20
   27d70:	pop	{pc}		; (ldr pc, [sp], #4)
   27d74:	ldrdeq	r1, [pc], -r4

00027d78 <myhtml_token_adjust_foreign_attributes@@Base>:
   27d78:	strd	r4, [sp, #-24]!	; 0xffffffe8
   27d7c:	strd	r6, [sp, #8]
   27d80:	str	r8, [sp, #16]
   27d84:	str	lr, [sp, #20]
   27d88:	mov	r8, r0
   27d8c:	ldr	r4, [pc, #108]	; 27e00 <myhtml_token_adjust_foreign_attributes@@Base+0x88>
   27d90:	add	r4, pc, r4
   27d94:	add	r4, r4, #928	; 0x3a0
   27d98:	add	r7, r4, #220	; 0xdc
   27d9c:	b	27dd0 <myhtml_token_adjust_foreign_attributes@@Base+0x58>
   27da0:	add	r6, r5, #8
   27da4:	mov	r0, r6
   27da8:	bl	10cac <mycore_string_clean@plt>
   27dac:	ldr	r2, [r4, #12]
   27db0:	ldr	r1, [r4, #8]
   27db4:	mov	r0, r6
   27db8:	bl	10868 <mycore_string_append@plt>
   27dbc:	ldr	r3, [r4, #16]
   27dc0:	str	r3, [r5, #64]	; 0x40
   27dc4:	add	r4, r4, #20
   27dc8:	cmp	r4, r7
   27dcc:	beq	27dec <myhtml_token_adjust_foreign_attributes@@Base+0x74>
   27dd0:	ldr	r2, [r4, #4]
   27dd4:	ldr	r1, [r4]
   27dd8:	mov	r0, r8
   27ddc:	bl	10e44 <myhtml_token_attr_by_name@plt>
   27de0:	subs	r5, r0, #0
   27de4:	bne	27da0 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   27de8:	b	27dc4 <myhtml_token_adjust_foreign_attributes@@Base+0x4c>
   27dec:	ldrd	r4, [sp]
   27df0:	ldrd	r6, [sp, #8]
   27df4:	ldr	r8, [sp, #16]
   27df8:	add	sp, sp, #20
   27dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   27e00:	andeq	r1, pc, r0, asr ip	; <UNPREDICTABLE>

00027e04 <myhtml_token_delete@@Base>:
   27e04:	strd	r4, [sp, #-16]!
   27e08:	str	r6, [sp, #8]
   27e0c:	str	lr, [sp, #12]
   27e10:	mov	r5, r0
   27e14:	mov	r4, r1
   27e18:	ldr	r2, [r1, #4]
   27e1c:	cmp	r2, #0
   27e20:	beq	27e38 <myhtml_token_delete@@Base+0x34>
   27e24:	ldr	r0, [r1, #16]
   27e28:	cmp	r0, #0
   27e2c:	beq	27e38 <myhtml_token_delete@@Base+0x34>
   27e30:	ldr	r1, [r1, #20]
   27e34:	bl	106ac <mchar_async_free@plt>
   27e38:	mov	r1, r4
   27e3c:	ldr	r0, [r5, #4]
   27e40:	bl	ffec <mcobject_async_free@plt>
   27e44:	ldrd	r4, [sp]
   27e48:	ldr	r6, [sp, #8]
   27e4c:	add	sp, sp, #12
   27e50:	pop	{pc}		; (ldr pc, [sp], #4)

00027e54 <myhtml_token_attr_delete_all@@Base>:
   27e54:	str	r4, [sp, #-8]!
   27e58:	str	lr, [sp, #4]
   27e5c:	ldr	r4, [r1, #40]	; 0x28
   27e60:	cmp	r4, #0
   27e64:	bne	27e88 <myhtml_token_attr_delete_all@@Base+0x34>
   27e68:	ldr	r4, [sp]
   27e6c:	add	sp, sp, #4
   27e70:	pop	{pc}		; (ldr pc, [sp], #4)
   27e74:	ldr	r1, [r4, #44]	; 0x2c
   27e78:	bl	106ac <mchar_async_free@plt>
   27e7c:	ldr	r4, [r4]
   27e80:	cmp	r4, #0
   27e84:	beq	27e68 <myhtml_token_attr_delete_all@@Base+0x14>
   27e88:	ldr	r2, [r4, #8]
   27e8c:	cmp	r2, #0
   27e90:	beq	27ea8 <myhtml_token_attr_delete_all@@Base+0x54>
   27e94:	ldr	r0, [r4, #20]
   27e98:	cmp	r0, #0
   27e9c:	beq	27ea8 <myhtml_token_attr_delete_all@@Base+0x54>
   27ea0:	ldr	r1, [r4, #24]
   27ea4:	bl	106ac <mchar_async_free@plt>
   27ea8:	ldr	r2, [r4, #28]
   27eac:	cmp	r2, #0
   27eb0:	beq	27e7c <myhtml_token_attr_delete_all@@Base+0x28>
   27eb4:	ldr	r0, [r4, #40]	; 0x28
   27eb8:	cmp	r0, #0
   27ebc:	bne	27e74 <myhtml_token_attr_delete_all@@Base+0x20>
   27ec0:	b	27e7c <myhtml_token_attr_delete_all@@Base+0x28>

00027ec4 <myhtml_token_attr_remove@@Base>:
   27ec4:	cmp	r1, #0
   27ec8:	beq	27f08 <myhtml_token_attr_remove@@Base+0x44>
   27ecc:	ldr	r3, [r1, #4]
   27ed0:	cmp	r3, #0
   27ed4:	ldrne	r2, [r1]
   27ed8:	strne	r2, [r3]
   27edc:	ldreq	r3, [r1]
   27ee0:	streq	r3, [r0, #40]	; 0x28
   27ee4:	ldr	r3, [r1]
   27ee8:	cmp	r3, #0
   27eec:	ldrne	r2, [r1, #4]
   27ef0:	strne	r2, [r3, #4]
   27ef4:	ldreq	r3, [r1, #4]
   27ef8:	streq	r3, [r0, #44]	; 0x2c
   27efc:	mov	r3, #0
   27f00:	str	r3, [r1]
   27f04:	str	r3, [r1, #4]
   27f08:	mov	r0, r1
   27f0c:	bx	lr

00027f10 <myhtml_token_attr_remove_by_name@@Base>:
   27f10:	str	r4, [sp, #-8]!
   27f14:	str	lr, [sp, #4]
   27f18:	mov	r4, r0
   27f1c:	bl	10e44 <myhtml_token_attr_by_name@plt>
   27f20:	mov	r1, r0
   27f24:	mov	r0, r4
   27f28:	bl	10508 <myhtml_token_attr_remove@plt>
   27f2c:	ldr	r4, [sp]
   27f30:	add	sp, sp, #4
   27f34:	pop	{pc}		; (ldr pc, [sp], #4)

00027f38 <myhtml_token_merged_two_token_string@@Base>:
   27f38:	strd	r4, [sp, #-28]!	; 0xffffffe4
   27f3c:	strd	r6, [sp, #8]
   27f40:	strd	r8, [sp, #16]
   27f44:	str	lr, [sp, #24]
   27f48:	sub	sp, sp, #28
   27f4c:	mov	r6, r0
   27f50:	mov	r4, r1
   27f54:	mov	r5, r2
   27f58:	mov	r7, r3
   27f5c:	ldr	r0, [r0, #8]
   27f60:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   27f64:	mov	r1, r5
   27f68:	ldr	r0, [r6, #8]
   27f6c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   27f70:	add	r9, r4, #4
   27f74:	add	r8, r5, #4
   27f78:	mov	r3, #0
   27f7c:	str	r3, [r4, #24]
   27f80:	str	r3, [r4, #28]
   27f84:	ldr	r1, [r6, #52]	; 0x34
   27f88:	ldr	r3, [r4, #20]
   27f8c:	cmp	r3, r1
   27f90:	beq	28014 <myhtml_token_merged_two_token_string@@Base+0xdc>
   27f94:	ldr	r3, [r5, #20]
   27f98:	cmp	r1, r3
   27f9c:	beq	28034 <myhtml_token_merged_two_token_string@@Base+0xfc>
   27fa0:	ldr	r3, [r5, #12]
   27fa4:	add	r3, r3, #2
   27fa8:	ldr	r2, [r4, #12]
   27fac:	add	r3, r3, r2
   27fb0:	add	r2, sp, #4
   27fb4:	ldr	r0, [r6, #4]
   27fb8:	bl	105a4 <mycore_string_init@plt>
   27fbc:	cmp	r7, #0
   27fc0:	beq	28054 <myhtml_token_merged_two_token_string@@Base+0x11c>
   27fc4:	mov	r1, r8
   27fc8:	add	r5, sp, #4
   27fcc:	mov	r0, r5
   27fd0:	bl	1010c <mycore_string_copy@plt>
   27fd4:	mov	r1, r9
   27fd8:	mov	r0, r5
   27fdc:	bl	1010c <mycore_string_copy@plt>
   27fe0:	ldrd	r0, [sp, #4]
   27fe4:	strd	r0, [r4, #4]
   27fe8:	ldrd	r0, [sp, #12]
   27fec:	strd	r0, [r4, #12]
   27ff0:	ldr	r2, [sp, #20]
   27ff4:	str	r2, [r4, #20]
   27ff8:	mov	r0, r4
   27ffc:	add	sp, sp, #28
   28000:	ldrd	r4, [sp]
   28004:	ldrd	r6, [sp, #8]
   28008:	ldrd	r8, [sp, #16]
   2800c:	add	sp, sp, #24
   28010:	pop	{pc}		; (ldr pc, [sp], #4)
   28014:	cmp	r7, #0
   28018:	movne	r0, r4
   2801c:	bne	27ffc <myhtml_token_merged_two_token_string@@Base+0xc4>
   28020:	mov	r1, r8
   28024:	mov	r0, r9
   28028:	bl	1010c <mycore_string_copy@plt>
   2802c:	mov	r0, r4
   28030:	b	27ffc <myhtml_token_merged_two_token_string@@Base+0xc4>
   28034:	cmp	r7, #0
   28038:	movne	r1, r9
   2803c:	movne	r0, r8
   28040:	moveq	r1, r8
   28044:	moveq	r0, r9
   28048:	bl	1010c <mycore_string_copy@plt>
   2804c:	mov	r0, r5
   28050:	b	27ffc <myhtml_token_merged_two_token_string@@Base+0xc4>
   28054:	mov	r1, r9
   28058:	add	r5, sp, #4
   2805c:	mov	r0, r5
   28060:	bl	1010c <mycore_string_copy@plt>
   28064:	mov	r1, r8
   28068:	mov	r0, r5
   2806c:	bl	1010c <mycore_string_copy@plt>
   28070:	b	27fe0 <myhtml_token_merged_two_token_string@@Base+0xa8>

00028074 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   28074:	strd	r4, [sp, #-16]!
   28078:	str	r6, [sp, #8]
   2807c:	str	lr, [sp, #12]
   28080:	sub	sp, sp, #24
   28084:	mov	r4, r0
   28088:	mov	r6, r1
   2808c:	ldr	r0, [r0, #8]
   28090:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   28094:	ldr	r3, [r6, #12]
   28098:	add	r5, sp, #4
   2809c:	add	r3, r3, #2
   280a0:	mov	r2, r5
   280a4:	ldr	r1, [r4, #52]	; 0x34
   280a8:	ldr	r0, [r4, #4]
   280ac:	bl	105a4 <mycore_string_init@plt>
   280b0:	mov	r4, r6
   280b4:	ldr	r2, [r6, #12]
   280b8:	ldr	r1, [r4, #4]!
   280bc:	mov	r0, r5
   280c0:	bl	1031c <mycore_string_append_with_replacement_null_characters@plt>
   280c4:	ldrd	r2, [sp, #4]
   280c8:	strd	r2, [r6, #4]
   280cc:	ldrd	r2, [r5, #8]
   280d0:	strd	r2, [r4, #8]
   280d4:	ldr	r3, [r5, #16]
   280d8:	str	r3, [r4, #16]
   280dc:	add	sp, sp, #24
   280e0:	ldrd	r4, [sp]
   280e4:	ldr	r6, [sp, #8]
   280e8:	add	sp, sp, #12
   280ec:	pop	{pc}		; (ldr pc, [sp], #4)

000280f0 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   280f0:	ldrb	r2, [r2, r3]
   280f4:	cmp	r2, #47	; 0x2f
   280f8:	addeq	r3, r3, #1
   280fc:	moveq	r2, #11
   28100:	movne	r2, #2
   28104:	str	r2, [r0, #160]	; 0xa0
   28108:	mov	r0, r3
   2810c:	bx	lr

00028110 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   28110:	ldrb	r2, [r2, r3]
   28114:	ldr	r1, [pc, #28]	; 28138 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   28118:	add	r1, pc, r1
   2811c:	ldrb	r2, [r1, r2]
   28120:	cmp	r2, #1
   28124:	moveq	r2, #12
   28128:	movne	r2, #2
   2812c:	str	r2, [r0, #160]	; 0xa0
   28130:	mov	r0, r3
   28134:	bx	lr
   28138:	ldrdeq	r9, [sp], -r0

0002813c <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   2813c:	ldrb	r2, [r2, r3]
   28140:	cmp	r2, #47	; 0x2f
   28144:	addeq	r3, r3, #1
   28148:	moveq	r2, #14
   2814c:	movne	r2, #4
   28150:	str	r2, [r0, #160]	; 0xa0
   28154:	mov	r0, r3
   28158:	bx	lr

0002815c <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   2815c:	ldrb	r2, [r2, r3]
   28160:	ldr	r1, [pc, #28]	; 28184 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   28164:	add	r1, pc, r1
   28168:	ldrb	r2, [r1, r2]
   2816c:	cmp	r2, #1
   28170:	moveq	r2, #15
   28174:	movne	r2, #4
   28178:	str	r2, [r0, #160]	; 0xa0
   2817c:	mov	r0, r3
   28180:	bx	lr
   28184:	andeq	r9, sp, r4, lsl #11

00028188 <myhtml_tokenizer_state_data@@Base>:
   28188:	strd	r4, [sp, #-12]!
   2818c:	str	lr, [sp, #8]
   28190:	ldr	r4, [sp, #12]
   28194:	cmp	r3, r4
   28198:	bcs	281dc <myhtml_tokenizer_state_data@@Base+0x54>
   2819c:	add	ip, r2, r3
   281a0:	ldrb	lr, [r2, r3]
   281a4:	cmp	lr, #60	; 0x3c
   281a8:	beq	281c4 <myhtml_tokenizer_state_data@@Base+0x3c>
   281ac:	add	r4, r2, r4
   281b0:	sub	r4, r4, #1
   281b4:	ldr	r5, [pc, #180]	; 28270 <myhtml_tokenizer_state_data@@Base+0xe8>
   281b8:	add	r5, pc, r5
   281bc:	rsb	r2, r2, #1
   281c0:	b	2824c <myhtml_tokenizer_state_data@@Base+0xc4>
   281c4:	ldr	r2, [r0, #192]	; 0xc0
   281c8:	add	r2, r2, r3
   281cc:	str	r2, [r1, #32]
   281d0:	add	r3, r3, #1
   281d4:	mov	r2, #7
   281d8:	str	r2, [r0, #160]	; 0xa0
   281dc:	mov	r0, r3
   281e0:	ldrd	r4, [sp]
   281e4:	add	sp, sp, #8
   281e8:	pop	{pc}		; (ldr pc, [sp], #4)
   281ec:	ldr	r3, [r1, #48]	; 0x30
   281f0:	tst	r3, #8
   281f4:	beq	28234 <myhtml_tokenizer_state_data@@Base+0xac>
   281f8:	ldrb	r3, [r5, lr]
   281fc:	cmp	r3, #2
   28200:	beq	28234 <myhtml_tokenizer_state_data@@Base+0xac>
   28204:	b	28214 <myhtml_tokenizer_state_data@@Base+0x8c>
   28208:	ldr	r3, [r1, #48]	; 0x30
   2820c:	tst	r3, #8
   28210:	beq	28234 <myhtml_tokenizer_state_data@@Base+0xac>
   28214:	ldr	r3, [r1, #48]	; 0x30
   28218:	ldr	lr, [r1, #48]	; 0x30
   2821c:	and	r3, r3, #8
   28220:	eor	r3, r3, lr
   28224:	str	r3, [r1, #48]	; 0x30
   28228:	ldr	r3, [r1, #48]	; 0x30
   2822c:	orr	r3, r3, #512	; 0x200
   28230:	str	r3, [r1, #48]	; 0x30
   28234:	add	r3, r2, ip
   28238:	cmp	ip, r4
   2823c:	beq	281dc <myhtml_tokenizer_state_data@@Base+0x54>
   28240:	ldrb	lr, [ip, #1]!
   28244:	cmp	lr, #60	; 0x3c
   28248:	beq	281c4 <myhtml_tokenizer_state_data@@Base+0x3c>
   2824c:	cmp	lr, #0
   28250:	bne	281ec <myhtml_tokenizer_state_data@@Base+0x64>
   28254:	ldr	r3, [r1, #48]	; 0x30
   28258:	tst	r3, #2048	; 0x800
   2825c:	bne	28208 <myhtml_tokenizer_state_data@@Base+0x80>
   28260:	ldr	r3, [r1, #48]	; 0x30
   28264:	orr	r3, r3, #2048	; 0x800
   28268:	str	r3, [r1, #48]	; 0x30
   2826c:	b	28234 <myhtml_tokenizer_state_data@@Base+0xac>
   28270:	andeq	r9, sp, r0, lsr r5

00028274 <myhtml_tokenizer_state_comment@@Base>:
   28274:	push	{lr}		; (str lr, [sp, #-4]!)
   28278:	ldr	lr, [sp, #4]
   2827c:	mov	ip, #2
   28280:	str	ip, [r1]
   28284:	cmp	r3, lr
   28288:	bcs	282cc <myhtml_tokenizer_state_comment@@Base+0x58>
   2828c:	add	r1, r2, r3
   28290:	ldrb	ip, [r2, r3]
   28294:	cmp	ip, #45	; 0x2d
   28298:	addne	lr, r2, lr
   2829c:	subne	lr, lr, #1
   282a0:	rsbne	r2, r2, #1
   282a4:	beq	282c0 <myhtml_tokenizer_state_comment@@Base+0x4c>
   282a8:	add	r3, r2, r1
   282ac:	cmp	r1, lr
   282b0:	beq	282cc <myhtml_tokenizer_state_comment@@Base+0x58>
   282b4:	ldrb	ip, [r1, #1]!
   282b8:	cmp	ip, #45	; 0x2d
   282bc:	bne	282a8 <myhtml_tokenizer_state_comment@@Base+0x34>
   282c0:	mov	r2, #48	; 0x30
   282c4:	str	r2, [r0, #160]	; 0xa0
   282c8:	add	r3, r3, #1
   282cc:	mov	r0, r3
   282d0:	pop	{pc}		; (ldr pc, [sp], #4)

000282d4 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   282d4:	ldrb	r2, [r2, r3]
   282d8:	cmp	r2, #45	; 0x2d
   282dc:	add	r3, r3, #1
   282e0:	moveq	r2, #49	; 0x31
   282e4:	movne	r2, #47	; 0x2f
   282e8:	str	r2, [r0, #160]	; 0xa0
   282ec:	mov	r0, r3
   282f0:	bx	lr

000282f4 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   282f4:	movw	r3, #37164	; 0x912c
   282f8:	str	r3, [r0, #196]	; 0xc4
   282fc:	ldr	r0, [sp]
   28300:	bx	lr

00028304 <myhtml_tokenizer_state_plaintext@@Base>:
   28304:	strd	r4, [sp, #-16]!
   28308:	str	r6, [sp, #8]
   2830c:	str	lr, [sp, #12]
   28310:	mov	r4, r0
   28314:	mov	r2, r1
   28318:	ldr	r5, [sp, #16]
   2831c:	ldr	r1, [r1, #48]	; 0x30
   28320:	tst	r1, #128	; 0x80
   28324:	bne	28334 <myhtml_tokenizer_state_plaintext@@Base+0x30>
   28328:	ldr	r1, [r2, #48]	; 0x30
   2832c:	orr	r1, r1, #128	; 0x80
   28330:	str	r1, [r2, #48]	; 0x30
   28334:	ldr	r1, [r2, #48]	; 0x30
   28338:	ldr	r0, [r2, #48]	; 0x30
   2833c:	and	r1, r1, #8
   28340:	eor	r1, r1, r0
   28344:	str	r1, [r2, #48]	; 0x30
   28348:	ldr	r1, [r4, #192]	; 0xc0
   2834c:	add	r1, r3, r1
   28350:	str	r1, [r2, #24]
   28354:	ldr	r3, [r4, #192]	; 0xc0
   28358:	add	r3, r5, r3
   2835c:	sub	r3, r3, r1
   28360:	str	r3, [r2, #36]	; 0x24
   28364:	str	r3, [r2, #28]
   28368:	mov	r3, #1
   2836c:	str	r3, [r2]
   28370:	mov	r3, #0
   28374:	str	r3, [r4, #160]	; 0xa0
   28378:	mov	r1, r5
   2837c:	mov	r0, r4
   28380:	bl	ffc8 <myhtml_queue_add@plt>
   28384:	cmp	r0, #0
   28388:	bne	283a0 <myhtml_tokenizer_state_plaintext@@Base+0x9c>
   2838c:	mov	r0, r5
   28390:	ldrd	r4, [sp]
   28394:	ldr	r6, [sp, #8]
   28398:	add	sp, sp, #12
   2839c:	pop	{pc}		; (ldr pc, [sp], #4)
   283a0:	mov	r3, #69	; 0x45
   283a4:	str	r3, [r4, #160]	; 0xa0
   283a8:	mov	r5, #0
   283ac:	b	2838c <myhtml_tokenizer_state_plaintext@@Base+0x88>

000283b0 <myhtml_tokenizer_state_comment_start@@Base>:
   283b0:	strd	r4, [sp, #-16]!
   283b4:	str	r6, [sp, #8]
   283b8:	str	lr, [sp, #12]
   283bc:	mov	ip, #2
   283c0:	str	ip, [r1]
   283c4:	ldrb	r2, [r2, r3]
   283c8:	cmp	r2, #45	; 0x2d
   283cc:	moveq	r2, #46	; 0x2e
   283d0:	streq	r2, [r0, #160]	; 0xa0
   283d4:	beq	283e8 <myhtml_tokenizer_state_comment_start@@Base+0x38>
   283d8:	cmp	r2, #62	; 0x3e
   283dc:	movne	r2, #47	; 0x2f
   283e0:	strne	r2, [r0, #160]	; 0xa0
   283e4:	beq	28400 <myhtml_tokenizer_state_comment_start@@Base+0x50>
   283e8:	add	r4, r3, #1
   283ec:	mov	r0, r4
   283f0:	ldrd	r4, [sp]
   283f4:	ldr	r6, [sp, #8]
   283f8:	add	sp, sp, #12
   283fc:	pop	{pc}		; (ldr pc, [sp], #4)
   28400:	mov	r2, r1
   28404:	mov	r5, r0
   28408:	add	r4, r3, #1
   2840c:	ldr	r3, [r0, #192]	; 0xc0
   28410:	add	r3, r4, r3
   28414:	ldr	r1, [r1, #32]
   28418:	sub	r3, r3, r1
   2841c:	str	r3, [r2, #36]	; 0x24
   28420:	mov	r3, #0
   28424:	str	r3, [r2, #28]
   28428:	mov	r1, r4
   2842c:	bl	ffc8 <myhtml_queue_add@plt>
   28430:	cmp	r0, #0
   28434:	moveq	r3, #0
   28438:	streq	r3, [r5, #160]	; 0xa0
   2843c:	beq	283ec <myhtml_tokenizer_state_comment_start@@Base+0x3c>
   28440:	mov	r3, #69	; 0x45
   28444:	str	r3, [r5, #160]	; 0xa0
   28448:	mov	r4, #0
   2844c:	b	283ec <myhtml_tokenizer_state_comment_start@@Base+0x3c>

00028450 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   28450:	strd	r4, [sp, #-16]!
   28454:	str	r6, [sp, #8]
   28458:	str	lr, [sp, #12]
   2845c:	mov	ip, #2
   28460:	str	ip, [r1]
   28464:	ldrb	r2, [r2, r3]
   28468:	cmp	r2, #45	; 0x2d
   2846c:	moveq	r2, #49	; 0x31
   28470:	streq	r2, [r0, #160]	; 0xa0
   28474:	beq	28488 <myhtml_tokenizer_state_comment_start_dash@@Base+0x38>
   28478:	cmp	r2, #62	; 0x3e
   2847c:	movne	r2, #47	; 0x2f
   28480:	strne	r2, [r0, #160]	; 0xa0
   28484:	beq	284a0 <myhtml_tokenizer_state_comment_start_dash@@Base+0x50>
   28488:	add	r4, r3, #1
   2848c:	mov	r0, r4
   28490:	ldrd	r4, [sp]
   28494:	ldr	r6, [sp, #8]
   28498:	add	sp, sp, #12
   2849c:	pop	{pc}		; (ldr pc, [sp], #4)
   284a0:	mov	r2, r1
   284a4:	mov	r5, r0
   284a8:	add	r4, r3, #1
   284ac:	ldr	r3, [r0, #192]	; 0xc0
   284b0:	add	r3, r4, r3
   284b4:	ldr	r1, [r1, #32]
   284b8:	sub	r3, r3, r1
   284bc:	str	r3, [r2, #36]	; 0x24
   284c0:	mov	r3, #0
   284c4:	str	r3, [r2, #28]
   284c8:	mov	r1, r4
   284cc:	bl	ffc8 <myhtml_queue_add@plt>
   284d0:	cmp	r0, #0
   284d4:	moveq	r3, #0
   284d8:	streq	r3, [r5, #160]	; 0xa0
   284dc:	beq	2848c <myhtml_tokenizer_state_comment_start_dash@@Base+0x3c>
   284e0:	mov	r3, #69	; 0x45
   284e4:	str	r3, [r5, #160]	; 0xa0
   284e8:	mov	r4, #0
   284ec:	b	2848c <myhtml_tokenizer_state_comment_start_dash@@Base+0x3c>

000284f0 <myhtml_tokenizer_state_comment_end@@Base>:
   284f0:	strd	r4, [sp, #-16]!
   284f4:	str	r6, [sp, #8]
   284f8:	str	lr, [sp, #12]
   284fc:	ldrb	r2, [r2, r3]
   28500:	cmp	r2, #62	; 0x3e
   28504:	beq	28540 <myhtml_tokenizer_state_comment_end@@Base+0x50>
   28508:	cmp	r2, #33	; 0x21
   2850c:	addeq	r4, r3, #1
   28510:	moveq	r3, #50	; 0x32
   28514:	streq	r3, [r0, #160]	; 0xa0
   28518:	beq	2852c <myhtml_tokenizer_state_comment_end@@Base+0x3c>
   2851c:	cmp	r2, #45	; 0x2d
   28520:	add	r4, r3, #1
   28524:	movne	r3, #47	; 0x2f
   28528:	strne	r3, [r0, #160]	; 0xa0
   2852c:	mov	r0, r4
   28530:	ldrd	r4, [sp]
   28534:	ldr	r6, [sp, #8]
   28538:	add	sp, sp, #12
   2853c:	pop	{pc}		; (ldr pc, [sp], #4)
   28540:	ldr	r2, [r0, #192]	; 0xc0
   28544:	ldr	ip, [r1, #24]
   28548:	sub	r2, r2, ip
   2854c:	add	r2, r2, r3
   28550:	cmp	r2, #1
   28554:	subhi	ip, r2, #2
   28558:	movls	ip, #0
   2855c:	mov	r2, r1
   28560:	mov	r5, r0
   28564:	str	ip, [r1, #28]
   28568:	add	r4, r3, #1
   2856c:	ldr	r3, [r0, #192]	; 0xc0
   28570:	ldr	r1, [r1, #32]
   28574:	sub	r3, r3, r1
   28578:	add	r3, r3, r4
   2857c:	str	r3, [r2, #36]	; 0x24
   28580:	mov	r1, r4
   28584:	bl	ffc8 <myhtml_queue_add@plt>
   28588:	cmp	r0, #0
   2858c:	movne	r3, #69	; 0x45
   28590:	strne	r3, [r5, #160]	; 0xa0
   28594:	movne	r4, #0
   28598:	bne	2852c <myhtml_tokenizer_state_comment_end@@Base+0x3c>
   2859c:	mov	r3, #0
   285a0:	str	r3, [r5, #160]	; 0xa0
   285a4:	b	2852c <myhtml_tokenizer_state_comment_end@@Base+0x3c>

000285a8 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   285a8:	strd	r4, [sp, #-16]!
   285ac:	str	r6, [sp, #8]
   285b0:	str	lr, [sp, #12]
   285b4:	ldrb	r2, [r2, r3]
   285b8:	cmp	r2, #62	; 0x3e
   285bc:	beq	285e8 <myhtml_tokenizer_state_comment_end_bang@@Base+0x40>
   285c0:	cmp	r2, #45	; 0x2d
   285c4:	add	r4, r3, #1
   285c8:	moveq	r3, #48	; 0x30
   285cc:	movne	r3, #47	; 0x2f
   285d0:	str	r3, [r0, #160]	; 0xa0
   285d4:	mov	r0, r4
   285d8:	ldrd	r4, [sp]
   285dc:	ldr	r6, [sp, #8]
   285e0:	add	sp, sp, #12
   285e4:	pop	{pc}		; (ldr pc, [sp], #4)
   285e8:	mov	r2, r1
   285ec:	mov	r5, r0
   285f0:	ldr	r1, [r0, #192]	; 0xc0
   285f4:	add	r0, r1, r3
   285f8:	ldr	ip, [r2, #24]
   285fc:	sub	lr, r0, #3
   28600:	cmp	lr, ip
   28604:	bcc	28658 <myhtml_tokenizer_state_comment_end_bang@@Base+0xb0>
   28608:	sub	r0, r0, ip
   2860c:	sub	r0, r0, #3
   28610:	str	r0, [r2, #28]
   28614:	add	r4, r3, #1
   28618:	ldr	r3, [r5, #192]	; 0xc0
   2861c:	ldr	r1, [r2, #32]
   28620:	sub	r3, r3, r1
   28624:	add	r3, r3, r4
   28628:	str	r3, [r2, #36]	; 0x24
   2862c:	mov	r1, r4
   28630:	mov	r0, r5
   28634:	bl	ffc8 <myhtml_queue_add@plt>
   28638:	cmp	r0, #0
   2863c:	movne	r3, #69	; 0x45
   28640:	strne	r3, [r5, #160]	; 0xa0
   28644:	movne	r4, #0
   28648:	bne	285d4 <myhtml_tokenizer_state_comment_end_bang@@Base+0x2c>
   2864c:	mov	r3, #0
   28650:	str	r3, [r5, #160]	; 0xa0
   28654:	b	285d4 <myhtml_tokenizer_state_comment_end_bang@@Base+0x2c>
   28658:	add	r4, r3, #1
   2865c:	ldr	r3, [r2, #32]
   28660:	sub	r1, r1, r3
   28664:	add	r1, r1, r4
   28668:	str	r1, [r2, #36]	; 0x24
   2866c:	mov	r3, #0
   28670:	str	r3, [r2, #28]
   28674:	mov	r1, r4
   28678:	mov	r0, r5
   2867c:	bl	ffc8 <myhtml_queue_add@plt>
   28680:	cmp	r0, #0
   28684:	movne	r3, #69	; 0x45
   28688:	strne	r3, [r5, #160]	; 0xa0
   2868c:	movne	r4, #0
   28690:	beq	2864c <myhtml_tokenizer_state_comment_end_bang@@Base+0xa4>
   28694:	b	285d4 <myhtml_tokenizer_state_comment_end_bang@@Base+0x2c>

00028698 <myhtml_tokenizer_state_bogus_comment@@Base>:
   28698:	strd	r4, [sp, #-16]!
   2869c:	str	r6, [sp, #8]
   286a0:	str	lr, [sp, #12]
   286a4:	ldr	r5, [sp, #16]
   286a8:	mov	ip, #2
   286ac:	str	ip, [r1]
   286b0:	ldr	ip, [r1, #48]	; 0x30
   286b4:	orr	ip, ip, #1024	; 0x400
   286b8:	str	ip, [r1, #48]	; 0x30
   286bc:	cmp	r3, r5
   286c0:	bcs	2876c <myhtml_tokenizer_state_bogus_comment@@Base+0xd4>
   286c4:	add	ip, r2, r3
   286c8:	ldrb	lr, [r2, r3]
   286cc:	cmp	lr, #62	; 0x3e
   286d0:	addne	r5, r2, r5
   286d4:	subne	r5, r5, #1
   286d8:	rsbne	lr, r2, #1
   286dc:	beq	28764 <myhtml_tokenizer_state_bogus_comment@@Base+0xcc>
   286e0:	add	r4, lr, ip
   286e4:	cmp	ip, r5
   286e8:	beq	28750 <myhtml_tokenizer_state_bogus_comment@@Base+0xb8>
   286ec:	ldrb	r3, [ip, #1]!
   286f0:	cmp	r3, #62	; 0x3e
   286f4:	bne	286e0 <myhtml_tokenizer_state_bogus_comment@@Base+0x48>
   286f8:	mov	r2, r1
   286fc:	mov	r5, r0
   28700:	ldr	r3, [r0, #192]	; 0xc0
   28704:	ldr	r1, [r1, #24]
   28708:	sub	r3, r3, r1
   2870c:	add	r3, r3, r4
   28710:	str	r3, [r2, #28]
   28714:	add	r4, r4, #1
   28718:	ldr	r3, [r0, #192]	; 0xc0
   2871c:	ldr	r1, [r2, #32]
   28720:	sub	r3, r3, r1
   28724:	add	r3, r3, r4
   28728:	str	r3, [r2, #36]	; 0x24
   2872c:	mov	r1, r4
   28730:	bl	ffc8 <myhtml_queue_add@plt>
   28734:	cmp	r0, #0
   28738:	movne	r3, #69	; 0x45
   2873c:	strne	r3, [r5, #160]	; 0xa0
   28740:	movne	r4, #0
   28744:	bne	28750 <myhtml_tokenizer_state_bogus_comment@@Base+0xb8>
   28748:	mov	r3, #0
   2874c:	str	r3, [r5, #160]	; 0xa0
   28750:	mov	r0, r4
   28754:	ldrd	r4, [sp]
   28758:	ldr	r6, [sp, #8]
   2875c:	add	sp, sp, #12
   28760:	pop	{pc}		; (ldr pc, [sp], #4)
   28764:	mov	r4, r3
   28768:	b	286f8 <myhtml_tokenizer_state_bogus_comment@@Base+0x60>
   2876c:	mov	r4, r3
   28770:	b	28750 <myhtml_tokenizer_state_bogus_comment@@Base+0xb8>

00028774 <myhtml_tokenizer_state_cdata_section@@Base>:
   28774:	strd	r4, [sp, #-32]!	; 0xffffffe0
   28778:	strd	r6, [sp, #8]
   2877c:	strd	r8, [sp, #16]
   28780:	str	sl, [sp, #24]
   28784:	str	lr, [sp, #28]
   28788:	ldr	r6, [sp, #32]
   2878c:	ldr	ip, [r1, #48]	; 0x30
   28790:	tst	ip, #256	; 0x100
   28794:	bne	287a4 <myhtml_tokenizer_state_cdata_section@@Base+0x30>
   28798:	ldr	ip, [r1, #48]	; 0x30
   2879c:	orr	ip, ip, #256	; 0x100
   287a0:	str	ip, [r1, #48]	; 0x30
   287a4:	cmp	r3, r6
   287a8:	bcs	288b8 <myhtml_tokenizer_state_cdata_section@@Base+0x144>
   287ac:	mov	r4, r3
   287b0:	mov	r8, r1
   287b4:	mov	r7, r0
   287b8:	sub	r0, r3, #1
   287bc:	add	r2, r2, r0
   287c0:	mov	r9, #2
   287c4:	b	28830 <myhtml_tokenizer_state_cdata_section@@Base+0xbc>
   287c8:	ldr	r1, [r7, #192]	; 0xc0
   287cc:	sub	r1, r1, #2
   287d0:	mov	r2, r9
   287d4:	add	r1, r1, r4
   287d8:	mov	r0, r7
   287dc:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   287e0:	b	2884c <myhtml_tokenizer_state_cdata_section@@Base+0xd8>
   287e4:	ldr	r3, [r7, #192]	; 0xc0
   287e8:	ldr	r2, [r8, #32]
   287ec:	sub	r3, r3, r2
   287f0:	add	r3, r3, r4
   287f4:	str	r3, [r8, #36]	; 0x24
   287f8:	mov	r2, r8
   287fc:	mov	r1, r4
   28800:	mov	r0, r7
   28804:	bl	ffc8 <myhtml_queue_add@plt>
   28808:	cmp	r0, #0
   2880c:	movne	r3, #69	; 0x45
   28810:	strne	r3, [r7, #160]	; 0xa0
   28814:	movne	r4, #0
   28818:	beq	28894 <myhtml_tokenizer_state_cdata_section@@Base+0x120>
   2881c:	b	2889c <myhtml_tokenizer_state_cdata_section@@Base+0x128>
   28820:	add	r4, r4, #1
   28824:	mov	r2, r5
   28828:	cmp	r6, r4
   2882c:	beq	2889c <myhtml_tokenizer_state_cdata_section@@Base+0x128>
   28830:	add	r5, r2, #1
   28834:	ldrb	r3, [r2, #1]
   28838:	cmp	r3, #62	; 0x3e
   2883c:	bne	28820 <myhtml_tokenizer_state_cdata_section@@Base+0xac>
   28840:	cmp	r4, #1
   28844:	subhi	r0, r2, #1
   28848:	bls	287c8 <myhtml_tokenizer_state_cdata_section@@Base+0x54>
   2884c:	ldrb	r3, [r0]
   28850:	cmp	r3, #93	; 0x5d
   28854:	bne	28820 <myhtml_tokenizer_state_cdata_section@@Base+0xac>
   28858:	ldrb	r3, [r0, #1]
   2885c:	cmp	r3, #93	; 0x5d
   28860:	bne	28820 <myhtml_tokenizer_state_cdata_section@@Base+0xac>
   28864:	ldr	r3, [r7, #192]	; 0xc0
   28868:	sub	r3, r3, #2
   2886c:	ldr	r2, [r8, #24]
   28870:	sub	r3, r3, r2
   28874:	add	r3, r3, r4
   28878:	str	r3, [r8, #28]
   2887c:	add	r4, r4, #1
   28880:	cmp	r3, #0
   28884:	bne	287e4 <myhtml_tokenizer_state_cdata_section@@Base+0x70>
   28888:	ldr	r3, [r7, #192]	; 0xc0
   2888c:	add	r3, r3, r4
   28890:	str	r3, [r8, #24]
   28894:	mov	r3, #0
   28898:	str	r3, [r7, #160]	; 0xa0
   2889c:	mov	r0, r4
   288a0:	ldrd	r4, [sp]
   288a4:	ldrd	r6, [sp, #8]
   288a8:	ldrd	r8, [sp, #16]
   288ac:	ldr	sl, [sp, #24]
   288b0:	add	sp, sp, #28
   288b4:	pop	{pc}		; (ldr pc, [sp], #4)
   288b8:	mov	r4, r3
   288bc:	b	2889c <myhtml_tokenizer_state_cdata_section@@Base+0x128>

000288c0 <myhtml_tokenizer_state_rcdata@@Base>:
   288c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   288c4:	strd	r6, [sp, #8]
   288c8:	str	r8, [sp, #16]
   288cc:	str	lr, [sp, #20]
   288d0:	mov	r5, r0
   288d4:	mov	r6, r1
   288d8:	mov	r7, r2
   288dc:	mov	r4, r3
   288e0:	ldr	r8, [sp, #24]
   288e4:	ldr	r3, [r0, #60]	; 0x3c
   288e8:	cmp	r3, #0
   288ec:	beq	28958 <myhtml_tokenizer_state_rcdata@@Base+0x98>
   288f0:	cmp	r4, r8
   288f4:	bcs	289a8 <myhtml_tokenizer_state_rcdata@@Base+0xe8>
   288f8:	add	r1, r7, r4
   288fc:	ldrb	r3, [r7, r4]
   28900:	cmp	r3, #60	; 0x3c
   28904:	addne	r3, r7, r8
   28908:	subne	r3, r3, #1
   2890c:	rsbne	r2, r7, #1
   28910:	beq	289a0 <myhtml_tokenizer_state_rcdata@@Base+0xe0>
   28914:	add	r0, r2, r1
   28918:	cmp	r1, r3
   2891c:	beq	28944 <myhtml_tokenizer_state_rcdata@@Base+0x84>
   28920:	ldrb	ip, [r1, #1]!
   28924:	cmp	ip, #60	; 0x3c
   28928:	bne	28914 <myhtml_tokenizer_state_rcdata@@Base+0x54>
   2892c:	ldr	r3, [r5, #192]	; 0xc0
   28930:	add	r3, r3, r0
   28934:	str	r3, [r6, #32]
   28938:	add	r0, r0, #1
   2893c:	mov	r3, #10
   28940:	str	r3, [r5, #160]	; 0xa0
   28944:	ldrd	r4, [sp]
   28948:	ldrd	r6, [sp, #8]
   2894c:	ldr	r8, [sp, #16]
   28950:	add	sp, sp, #20
   28954:	pop	{pc}		; (ldr pc, [sp], #4)
   28958:	ldr	r3, [r0, #192]	; 0xc0
   2895c:	add	r3, r3, r4
   28960:	str	r3, [r1, #24]
   28964:	ldr	r0, [r0, #68]	; 0x44
   28968:	bl	fc8c <mythread_queue_get_prev_node@plt>
   2896c:	cmp	r0, #0
   28970:	beq	2898c <myhtml_tokenizer_state_rcdata@@Base+0xcc>
   28974:	ldr	r3, [r0, #4]
   28978:	cmp	r3, #0
   2897c:	beq	2898c <myhtml_tokenizer_state_rcdata@@Base+0xcc>
   28980:	ldr	r3, [r3]
   28984:	str	r3, [r5, #60]	; 0x3c
   28988:	b	288f0 <myhtml_tokenizer_state_rcdata@@Base+0x30>
   2898c:	ldr	r3, [r5, #88]	; 0x58
   28990:	cmp	r3, #0
   28994:	ldrne	r3, [r3, #4]
   28998:	strne	r3, [r5, #60]	; 0x3c
   2899c:	b	288f0 <myhtml_tokenizer_state_rcdata@@Base+0x30>
   289a0:	mov	r0, r4
   289a4:	b	2892c <myhtml_tokenizer_state_rcdata@@Base+0x6c>
   289a8:	mov	r0, r4
   289ac:	b	28944 <myhtml_tokenizer_state_rcdata@@Base+0x84>

000289b0 <myhtml_tokenizer_state_rawtext@@Base>:
   289b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   289b4:	strd	r6, [sp, #8]
   289b8:	str	r8, [sp, #16]
   289bc:	str	lr, [sp, #20]
   289c0:	mov	r5, r0
   289c4:	mov	r6, r1
   289c8:	mov	r7, r2
   289cc:	mov	r4, r3
   289d0:	ldr	r8, [sp, #24]
   289d4:	ldr	r3, [r0, #60]	; 0x3c
   289d8:	cmp	r3, #0
   289dc:	beq	28a48 <myhtml_tokenizer_state_rawtext@@Base+0x98>
   289e0:	cmp	r4, r8
   289e4:	bcs	28a98 <myhtml_tokenizer_state_rawtext@@Base+0xe8>
   289e8:	add	r1, r7, r4
   289ec:	ldrb	r3, [r7, r4]
   289f0:	cmp	r3, #60	; 0x3c
   289f4:	addne	r3, r7, r8
   289f8:	subne	r3, r3, #1
   289fc:	rsbne	r2, r7, #1
   28a00:	beq	28a90 <myhtml_tokenizer_state_rawtext@@Base+0xe0>
   28a04:	add	r0, r2, r1
   28a08:	cmp	r1, r3
   28a0c:	beq	28a34 <myhtml_tokenizer_state_rawtext@@Base+0x84>
   28a10:	ldrb	ip, [r1, #1]!
   28a14:	cmp	ip, #60	; 0x3c
   28a18:	bne	28a04 <myhtml_tokenizer_state_rawtext@@Base+0x54>
   28a1c:	ldr	r3, [r5, #192]	; 0xc0
   28a20:	add	r3, r3, r0
   28a24:	str	r3, [r6, #32]
   28a28:	add	r0, r0, #1
   28a2c:	mov	r3, #13
   28a30:	str	r3, [r5, #160]	; 0xa0
   28a34:	ldrd	r4, [sp]
   28a38:	ldrd	r6, [sp, #8]
   28a3c:	ldr	r8, [sp, #16]
   28a40:	add	sp, sp, #20
   28a44:	pop	{pc}		; (ldr pc, [sp], #4)
   28a48:	ldr	r3, [r0, #192]	; 0xc0
   28a4c:	add	r3, r3, r4
   28a50:	str	r3, [r1, #24]
   28a54:	ldr	r0, [r0, #68]	; 0x44
   28a58:	bl	fc8c <mythread_queue_get_prev_node@plt>
   28a5c:	cmp	r0, #0
   28a60:	beq	28a7c <myhtml_tokenizer_state_rawtext@@Base+0xcc>
   28a64:	ldr	r3, [r0, #4]
   28a68:	cmp	r3, #0
   28a6c:	beq	28a7c <myhtml_tokenizer_state_rawtext@@Base+0xcc>
   28a70:	ldr	r3, [r3]
   28a74:	str	r3, [r5, #60]	; 0x3c
   28a78:	b	289e0 <myhtml_tokenizer_state_rawtext@@Base+0x30>
   28a7c:	ldr	r3, [r5, #88]	; 0x58
   28a80:	cmp	r3, #0
   28a84:	ldrne	r3, [r3, #4]
   28a88:	strne	r3, [r5, #60]	; 0x3c
   28a8c:	b	289e0 <myhtml_tokenizer_state_rawtext@@Base+0x30>
   28a90:	mov	r0, r4
   28a94:	b	28a1c <myhtml_tokenizer_state_rawtext@@Base+0x6c>
   28a98:	mov	r0, r4
   28a9c:	b	28a34 <myhtml_tokenizer_state_rawtext@@Base+0x84>

00028aa0 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   28aa0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   28aa4:	strd	r6, [sp, #8]
   28aa8:	str	r8, [sp, #16]
   28aac:	str	lr, [sp, #20]
   28ab0:	ldr	r5, [sp, #24]
   28ab4:	ldr	ip, [r1, #24]
   28ab8:	add	lr, ip, #2
   28abc:	ldr	r2, [r0, #192]	; 0xc0
   28ac0:	add	r2, r5, r2
   28ac4:	cmp	lr, r2
   28ac8:	bls	28aec <myhtml_tokenizer_state_markup_declaration_open@@Base+0x4c>
   28acc:	ldr	r2, [r0, #76]	; 0x4c
   28ad0:	str	r3, [r2, #4]
   28ad4:	mov	r0, r5
   28ad8:	ldrd	r4, [sp]
   28adc:	ldrd	r6, [sp, #8]
   28ae0:	ldr	r8, [sp, #16]
   28ae4:	add	sp, sp, #20
   28ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   28aec:	mov	r6, r3
   28af0:	mov	r7, r1
   28af4:	mov	r4, r0
   28af8:	mov	r2, #2
   28afc:	mov	r1, ip
   28b00:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   28b04:	ldrb	r3, [r0]
   28b08:	cmp	r3, #45	; 0x2d
   28b0c:	beq	28b38 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x98>
   28b10:	ldr	r1, [r7, #24]
   28b14:	add	r2, r1, #7
   28b18:	ldr	r3, [r4, #192]	; 0xc0
   28b1c:	add	r3, r5, r3
   28b20:	cmp	r2, r3
   28b24:	bls	28b64 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xc4>
   28b28:	ldr	r3, [r4, #76]	; 0x4c
   28b2c:	str	r6, [r3, #4]
   28b30:	mov	r0, r5
   28b34:	b	28ad8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x38>
   28b38:	ldrb	r3, [r0, #1]
   28b3c:	cmp	r3, #45	; 0x2d
   28b40:	bne	28b10 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x70>
   28b44:	str	r3, [r4, #160]	; 0xa0
   28b48:	add	r0, r6, #2
   28b4c:	ldr	r3, [r4, #192]	; 0xc0
   28b50:	add	r3, r3, r0
   28b54:	str	r3, [r7, #24]
   28b58:	mov	r3, #0
   28b5c:	str	r3, [r7, #28]
   28b60:	b	28ad8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x38>
   28b64:	mov	r2, #7
   28b68:	mov	r0, r4
   28b6c:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   28b70:	mov	r5, r0
   28b74:	mov	r2, #7
   28b78:	ldr	r1, [pc, #248]	; 28c78 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1d8>
   28b7c:	add	r1, pc, r1
   28b80:	bl	10238 <mycore_strncasecmp@plt>
   28b84:	cmp	r0, #0
   28b88:	beq	28c30 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   28b8c:	mov	r2, #7
   28b90:	ldr	r1, [pc, #228]	; 28c7c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1dc>
   28b94:	add	r1, pc, r1
   28b98:	mov	r0, r5
   28b9c:	bl	10f28 <strncmp@plt>
   28ba0:	cmp	r0, #0
   28ba4:	bne	28c60 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c0>
   28ba8:	ldr	r3, [r4, #68]	; 0x44
   28bac:	ldr	r3, [r3, #8]
   28bb0:	cmp	r3, #0
   28bb4:	beq	28c60 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c0>
   28bb8:	ldr	r1, [r3, #4]
   28bbc:	cmp	r1, #0
   28bc0:	beq	28c60 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c0>
   28bc4:	mov	r0, r4
   28bc8:	bl	fc80 <myhtml_tree_wait_for_last_done_token@plt>
   28bcc:	mov	r0, r4
   28bd0:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   28bd4:	cmp	r0, #0
   28bd8:	beq	28c60 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c0>
   28bdc:	ldr	r3, [r0, #8]
   28be0:	cmp	r3, #1
   28be4:	beq	28c60 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c0>
   28be8:	mov	r3, #67	; 0x43
   28bec:	str	r3, [r4, #160]	; 0xa0
   28bf0:	ldr	r3, [r7, #24]
   28bf4:	add	r3, r3, #7
   28bf8:	ldr	r2, [r4, #76]	; 0x4c
   28bfc:	ldr	r0, [r2, #12]
   28c00:	sub	r0, r3, r0
   28c04:	str	r3, [r7, #24]
   28c08:	mov	r3, #0
   28c0c:	str	r3, [r7, #28]
   28c10:	mov	r3, #1
   28c14:	str	r3, [r7]
   28c18:	ldr	r3, [r7, #48]	; 0x30
   28c1c:	ldr	r2, [r7, #48]	; 0x30
   28c20:	and	r3, r3, #8
   28c24:	eor	r3, r3, r2
   28c28:	str	r3, [r7, #48]	; 0x30
   28c2c:	b	28ad8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x38>
   28c30:	mov	r3, #51	; 0x33
   28c34:	str	r3, [r4, #160]	; 0xa0
   28c38:	ldr	r0, [r7, #24]
   28c3c:	add	r0, r0, #7
   28c40:	ldr	r3, [r4, #76]	; 0x4c
   28c44:	ldr	r3, [r3, #12]
   28c48:	sub	r0, r0, r3
   28c4c:	mov	r3, #7
   28c50:	str	r3, [r7, #28]
   28c54:	mov	r3, #3
   28c58:	str	r3, [r7]
   28c5c:	b	28ad8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x38>
   28c60:	mov	r3, #0
   28c64:	str	r3, [r7, #28]
   28c68:	mov	r3, #43	; 0x2b
   28c6c:	str	r3, [r4, #160]	; 0xa0
   28c70:	mov	r0, r6
   28c74:	b	28ad8 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x38>
   28c78:	andeq	r8, sp, ip, ror #24
   28c7c:	andeq	r8, sp, ip, asr ip

00028c80 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   28c80:	strd	r4, [sp, #-16]!
   28c84:	str	r6, [sp, #8]
   28c88:	str	lr, [sp, #12]
   28c8c:	ldr	ip, [sp, #16]
   28c90:	cmp	r3, ip
   28c94:	bcs	28d34 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0xb4>
   28c98:	add	r1, r2, r3
   28c9c:	ldrb	lr, [r2, r3]
   28ca0:	cmp	lr, #34	; 0x22
   28ca4:	subne	r3, r2, #1
   28ca8:	addne	r3, r3, ip
   28cac:	rsbne	r2, r2, #1
   28cb0:	beq	28d2c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0xac>
   28cb4:	add	r4, r2, r1
   28cb8:	cmp	r1, r3
   28cbc:	beq	28d18 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x98>
   28cc0:	ldrb	ip, [r1, #1]!
   28cc4:	cmp	ip, #34	; 0x22
   28cc8:	bne	28cb4 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x34>
   28ccc:	mov	r5, r0
   28cd0:	ldr	r2, [r0, #56]	; 0x38
   28cd4:	ldr	r3, [r0, #192]	; 0xc0
   28cd8:	ldr	r1, [r2, #56]	; 0x38
   28cdc:	sub	r3, r3, r1
   28ce0:	add	r3, r3, r4
   28ce4:	str	r3, [r2, #60]	; 0x3c
   28ce8:	ldr	r0, [r0, #8]
   28cec:	ldr	r1, [r0, #16]
   28cf0:	bl	10898 <myhtml_token_attr_create@plt>
   28cf4:	str	r0, [r5, #56]	; 0x38
   28cf8:	cmp	r0, #0
   28cfc:	moveq	r3, #69	; 0x45
   28d00:	streq	r3, [r5, #160]	; 0xa0
   28d04:	moveq	r4, #0
   28d08:	beq	28d18 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x98>
   28d0c:	mov	r3, #41	; 0x29
   28d10:	str	r3, [r5, #160]	; 0xa0
   28d14:	add	r4, r4, #1
   28d18:	mov	r0, r4
   28d1c:	ldrd	r4, [sp]
   28d20:	ldr	r6, [sp, #8]
   28d24:	add	sp, sp, #12
   28d28:	pop	{pc}		; (ldr pc, [sp], #4)
   28d2c:	mov	r4, r3
   28d30:	b	28ccc <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x4c>
   28d34:	mov	r4, r3
   28d38:	b	28d18 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x98>

00028d3c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   28d3c:	strd	r4, [sp, #-16]!
   28d40:	str	r6, [sp, #8]
   28d44:	str	lr, [sp, #12]
   28d48:	ldr	ip, [sp, #16]
   28d4c:	cmp	r3, ip
   28d50:	bcs	28df0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0xb4>
   28d54:	add	r1, r2, r3
   28d58:	ldrb	lr, [r2, r3]
   28d5c:	cmp	lr, #39	; 0x27
   28d60:	subne	r3, r2, #1
   28d64:	addne	r3, r3, ip
   28d68:	rsbne	r2, r2, #1
   28d6c:	beq	28de8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0xac>
   28d70:	add	r4, r2, r1
   28d74:	cmp	r1, r3
   28d78:	beq	28dd4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x98>
   28d7c:	ldrb	ip, [r1, #1]!
   28d80:	cmp	ip, #39	; 0x27
   28d84:	bne	28d70 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x34>
   28d88:	mov	r5, r0
   28d8c:	ldr	r2, [r0, #56]	; 0x38
   28d90:	ldr	r3, [r0, #192]	; 0xc0
   28d94:	ldr	r1, [r2, #56]	; 0x38
   28d98:	sub	r3, r3, r1
   28d9c:	add	r3, r3, r4
   28da0:	str	r3, [r2, #60]	; 0x3c
   28da4:	ldr	r0, [r0, #8]
   28da8:	ldr	r1, [r0, #16]
   28dac:	bl	10898 <myhtml_token_attr_create@plt>
   28db0:	str	r0, [r5, #56]	; 0x38
   28db4:	cmp	r0, #0
   28db8:	moveq	r3, #69	; 0x45
   28dbc:	streq	r3, [r5, #160]	; 0xa0
   28dc0:	moveq	r4, #0
   28dc4:	beq	28dd4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x98>
   28dc8:	mov	r3, #41	; 0x29
   28dcc:	str	r3, [r5, #160]	; 0xa0
   28dd0:	add	r4, r4, #1
   28dd4:	mov	r0, r4
   28dd8:	ldrd	r4, [sp]
   28ddc:	ldr	r6, [sp, #8]
   28de0:	add	sp, sp, #12
   28de4:	pop	{pc}		; (ldr pc, [sp], #4)
   28de8:	mov	r4, r3
   28dec:	b	28d88 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x4c>
   28df0:	mov	r4, r3
   28df4:	b	28dd4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x98>

00028df8 <myhtml_tokenizer_set_first_settings@@Base>:
   28df8:	str	r4, [sp, #-8]!
   28dfc:	str	lr, [sp, #4]
   28e00:	mov	r4, r0
   28e04:	ldr	r0, [r0, #24]
   28e08:	bl	10130 <mythread_queue_get_current_node@plt>
   28e0c:	str	r0, [r4, #68]	; 0x44
   28e10:	bl	10d0c <mythread_queue_node_clean@plt>
   28e14:	ldr	r3, [r4, #68]	; 0x44
   28e18:	str	r4, [r3]
   28e1c:	ldr	r0, [r4, #8]
   28e20:	ldr	r1, [r0, #12]
   28e24:	bl	109a0 <myhtml_token_node_create@plt>
   28e28:	str	r0, [r4, #64]	; 0x40
   28e2c:	cmp	r0, #0
   28e30:	ldrne	r3, [r4, #76]	; 0x4c
   28e34:	strne	r3, [r4, #80]	; 0x50
   28e38:	movne	r0, #0
   28e3c:	moveq	r0, #2
   28e40:	ldr	r4, [sp]
   28e44:	add	sp, sp, #4
   28e48:	pop	{pc}		; (ldr pc, [sp], #4)

00028e4c <myhtml_tokenizer_fragment_init@@Base>:
   28e4c:	strd	r4, [sp, #-16]!
   28e50:	str	r6, [sp, #8]
   28e54:	str	lr, [sp, #12]
   28e58:	mov	r4, r0
   28e5c:	mov	r6, r1
   28e60:	mov	r5, r2
   28e64:	bl	ff80 <myhtml_tree_node_create@plt>
   28e68:	str	r0, [r4, #88]	; 0x58
   28e6c:	str	r5, [r0, #8]
   28e70:	ldr	r3, [r4, #88]	; 0x58
   28e74:	str	r6, [r3, #4]
   28e78:	cmp	r5, #1
   28e7c:	beq	28ef0 <myhtml_tokenizer_fragment_init@@Base+0xa4>
   28e80:	ldr	r0, [r4, #8]
   28e84:	ldr	r5, [r4, #88]	; 0x58
   28e88:	ldr	r1, [r0, #12]
   28e8c:	bl	109a0 <myhtml_token_node_create@plt>
   28e90:	str	r0, [r5, #32]
   28e94:	ldr	r3, [r4, #88]	; 0x58
   28e98:	ldr	r5, [r3, #32]
   28e9c:	cmp	r5, #0
   28ea0:	beq	28edc <myhtml_tokenizer_fragment_init@@Base+0x90>
   28ea4:	mov	r0, r5
   28ea8:	bl	104e4 <myhtml_token_set_done@plt>
   28eac:	ldr	r3, [r4, #88]	; 0x58
   28eb0:	ldr	r3, [r3, #32]
   28eb4:	str	r3, [r4, #156]	; 0x9c
   28eb8:	mov	r2, #1
   28ebc:	mov	r1, #0
   28ec0:	mov	r0, r4
   28ec4:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   28ec8:	mov	r5, r0
   28ecc:	cmp	r6, #128	; 0x80
   28ed0:	beq	28f74 <myhtml_tokenizer_fragment_init@@Base+0x128>
   28ed4:	mov	r0, r4
   28ed8:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   28edc:	mov	r0, r5
   28ee0:	ldrd	r4, [sp]
   28ee4:	ldr	r6, [sp, #8]
   28ee8:	add	sp, sp, #12
   28eec:	pop	{pc}		; (ldr pc, [sp], #4)
   28ef0:	cmp	r6, #93	; 0x5d
   28ef4:	bne	28f5c <myhtml_tokenizer_fragment_init@@Base+0x110>
   28ef8:	ldr	r3, [r4, #180]	; 0xb4
   28efc:	tst	r3, #1
   28f00:	movne	r3, #4
   28f04:	moveq	r3, #0
   28f08:	str	r3, [r4, #160]	; 0xa0
   28f0c:	ldr	r0, [r4, #8]
   28f10:	ldr	r5, [r4, #88]	; 0x58
   28f14:	ldr	r1, [r0, #12]
   28f18:	bl	109a0 <myhtml_token_node_create@plt>
   28f1c:	str	r0, [r5, #32]
   28f20:	ldr	r3, [r4, #88]	; 0x58
   28f24:	ldr	r5, [r3, #32]
   28f28:	cmp	r5, #0
   28f2c:	beq	28edc <myhtml_tokenizer_fragment_init@@Base+0x90>
   28f30:	mov	r0, r5
   28f34:	bl	104e4 <myhtml_token_set_done@plt>
   28f38:	ldr	r3, [r4, #88]	; 0x58
   28f3c:	ldr	r3, [r3, #32]
   28f40:	str	r3, [r4, #156]	; 0x9c
   28f44:	mov	r2, #1
   28f48:	mov	r1, #0
   28f4c:	mov	r0, r4
   28f50:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   28f54:	mov	r5, r0
   28f58:	b	28ed4 <myhtml_tokenizer_fragment_init@@Base+0x88>
   28f5c:	mov	r1, r6
   28f60:	ldr	r0, [r4, #28]
   28f64:	bl	109b8 <myhtml_tag_get_by_id@plt>
   28f68:	ldr	r3, [r0, #12]
   28f6c:	str	r3, [r4, #160]	; 0xa0
   28f70:	b	28e80 <myhtml_tokenizer_fragment_init@@Base+0x34>
   28f74:	mov	r1, #17
   28f78:	mov	r0, r4
   28f7c:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   28f80:	b	28ed4 <myhtml_tokenizer_fragment_init@@Base+0x88>

00028f84 <myhtml_tokenizer_wait@@Base>:
   28f84:	ldr	r3, [r0]
   28f88:	ldr	r2, [r3]
   28f8c:	cmp	r2, #0
   28f90:	bxeq	lr
   28f94:	str	r4, [sp, #-8]!
   28f98:	str	lr, [sp, #4]
   28f9c:	ldr	r1, [r0, #20]
   28fa0:	mov	r0, r2
   28fa4:	bl	10910 <mythread_queue_list_entry_wait_for_done@plt>
   28fa8:	ldr	r4, [sp]
   28fac:	add	sp, sp, #4
   28fb0:	pop	{pc}		; (ldr pc, [sp], #4)

00028fb4 <myhtml_tokenizer_post@@Base>:
   28fb4:	str	r4, [sp, #-8]!
   28fb8:	str	lr, [sp, #4]
   28fbc:	mov	r4, r0
   28fc0:	ldr	r3, [r0]
   28fc4:	ldr	r0, [r3]
   28fc8:	cmp	r0, #0
   28fcc:	beq	28fd8 <myhtml_tokenizer_post@@Base+0x24>
   28fd0:	mov	r1, #0
   28fd4:	bl	10454 <mythread_resume@plt>
   28fd8:	ldr	r3, [r4]
   28fdc:	ldr	r0, [r3, #4]
   28fe0:	cmp	r0, #0
   28fe4:	beq	28ff0 <myhtml_tokenizer_post@@Base+0x3c>
   28fe8:	mov	r1, #0
   28fec:	bl	10454 <mythread_resume@plt>
   28ff0:	ldr	r4, [sp]
   28ff4:	add	sp, sp, #4
   28ff8:	pop	{pc}		; (ldr pc, [sp], #4)

00028ffc <myhtml_tokenizer_chunk_process@@Base>:
   28ffc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29000:	strd	r6, [sp, #8]
   29004:	str	r8, [sp, #16]
   29008:	str	lr, [sp, #20]
   2900c:	sub	sp, sp, #16
   29010:	mov	r4, r0
   29014:	mov	r7, r1
   29018:	mov	r5, r2
   2901c:	ldr	r6, [r0]
   29020:	ldr	r8, [r6, #24]
   29024:	mov	r3, r2
   29028:	mov	r2, r1
   2902c:	ldr	r1, [r0, #72]	; 0x48
   29030:	ldr	r0, [r0, #76]	; 0x4c
   29034:	bl	10034 <mycore_incoming_buffer_add@plt>
   29038:	str	r0, [r4, #76]	; 0x4c
   2903c:	ldr	r3, [r6, #32]
   29040:	tst	r3, #1
   29044:	beq	29054 <myhtml_tokenizer_chunk_process@@Base+0x58>
   29048:	ldr	r3, [r4, #180]	; 0xb4
   2904c:	orr	r3, r3, #16
   29050:	str	r3, [r4, #180]	; 0xb4
   29054:	ldr	r3, [r4, #180]	; 0xb4
   29058:	tst	r3, #16
   2905c:	bne	29074 <myhtml_tokenizer_chunk_process@@Base+0x78>
   29060:	ldr	r3, [r4, #20]
   29064:	cmp	r3, #0
   29068:	beq	290dc <myhtml_tokenizer_chunk_process@@Base+0xe0>
   2906c:	mov	r0, r4
   29070:	bl	10244 <myhtml_tokenizer_post@plt>
   29074:	ldr	r3, [r4, #68]	; 0x44
   29078:	cmp	r3, #0
   2907c:	beq	2911c <myhtml_tokenizer_chunk_process@@Base+0x120>
   29080:	cmp	r5, #0
   29084:	beq	290b4 <myhtml_tokenizer_chunk_process@@Base+0xb8>
   29088:	mov	r3, #0
   2908c:	ldr	r2, [r4, #160]	; 0xa0
   29090:	str	r5, [sp]
   29094:	ldr	r6, [r8, r2, lsl #2]
   29098:	mov	r2, r7
   2909c:	ldr	r1, [r4, #64]	; 0x40
   290a0:	mov	r0, r4
   290a4:	blx	r6
   290a8:	mov	r3, r0
   290ac:	cmp	r5, r0
   290b0:	bhi	2908c <myhtml_tokenizer_chunk_process@@Base+0x90>
   290b4:	ldr	r3, [r4, #192]	; 0xc0
   290b8:	add	r5, r3, r5
   290bc:	str	r5, [r4, #192]	; 0xc0
   290c0:	mov	r0, #0
   290c4:	add	sp, sp, #16
   290c8:	ldrd	r4, [sp]
   290cc:	ldrd	r6, [sp, #8]
   290d0:	ldr	r8, [sp, #16]
   290d4:	add	sp, sp, #20
   290d8:	pop	{pc}		; (ldr pc, [sp], #4)
   290dc:	str	r3, [sp, #12]
   290e0:	mov	r0, r6
   290e4:	ldr	r3, [r0], #8
   290e8:	ldr	r2, [r3, #16]
   290ec:	add	r3, sp, #12
   290f0:	str	r3, [sp, #4]
   290f4:	ldr	r3, [r6, #20]
   290f8:	str	r3, [sp]
   290fc:	ldr	r3, [r4, #24]
   29100:	mov	r1, #2
   29104:	bl	10124 <mythread_queue_list_entry_push@plt>
   29108:	str	r0, [r4, #20]
   2910c:	ldr	r0, [sp, #12]
   29110:	cmp	r0, #0
   29114:	beq	2906c <myhtml_tokenizer_chunk_process@@Base+0x70>
   29118:	b	290c4 <myhtml_tokenizer_chunk_process@@Base+0xc8>
   2911c:	mov	r2, r5
   29120:	mov	r1, r7
   29124:	mov	r0, r4
   29128:	bl	1058c <myhtml_tokenizer_set_first_settings@plt>
   2912c:	cmp	r0, #0
   29130:	beq	29080 <myhtml_tokenizer_chunk_process@@Base+0x84>
   29134:	b	290c4 <myhtml_tokenizer_chunk_process@@Base+0xc8>

00029138 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   29138:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2913c:	strd	r6, [sp, #8]
   29140:	strd	r8, [sp, #16]
   29144:	strd	sl, [sp, #24]
   29148:	str	lr, [sp, #32]
   2914c:	sub	sp, sp, #12
   29150:	mov	r9, r0
   29154:	mov	r6, r1
   29158:	mov	fp, r2
   2915c:	ldr	r0, [r0, #200]	; 0xc8
   29160:	bl	107c0 <myencoding_get_function_by_id@plt>
   29164:	mov	r7, r0
   29168:	ldr	r3, [r9, #148]	; 0x94
   2916c:	cmp	r3, #0
   29170:	beq	291ac <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x74>
   29174:	ldr	r8, [r9, #148]	; 0x94
   29178:	mov	r0, r8
   2917c:	bl	10b14 <myhtml_stream_buffer_current_entry@plt>
   29180:	mov	r4, r0
   29184:	ldr	sl, [r0, #4]
   29188:	cmp	fp, #0
   2918c:	beq	292c4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x18c>
   29190:	sub	r5, r6, #1
   29194:	sub	fp, fp, #1
   29198:	add	r6, r6, fp
   2919c:	add	r3, r8, #12
   291a0:	str	r3, [sp, #4]
   291a4:	mov	fp, #0
   291a8:	b	29214 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xdc>
   291ac:	bl	10e08 <myhtml_stream_buffer_create@plt>
   291b0:	str	r0, [r9, #148]	; 0x94
   291b4:	cmp	r0, #0
   291b8:	moveq	r0, #37632	; 0x9300
   291bc:	beq	292a8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x170>
   291c0:	mov	r1, #1024	; 0x400
   291c4:	bl	10d00 <myhtml_stream_buffer_init@plt>
   291c8:	cmp	r0, #0
   291cc:	bne	292a8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x170>
   291d0:	mov	r1, #16384	; 0x4000
   291d4:	ldr	r0, [r9, #148]	; 0x94
   291d8:	bl	108c8 <myhtml_stream_buffer_add_entry@plt>
   291dc:	cmp	r0, #0
   291e0:	bne	29174 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x3c>
   291e4:	movw	r0, #37636	; 0x9304
   291e8:	b	292a8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x170>
   291ec:	ldr	r1, [r4]
   291f0:	ldr	r3, [r4, #4]
   291f4:	add	r1, r1, r3
   291f8:	ldr	r0, [r8, #24]
   291fc:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   29200:	ldr	r3, [r4, #4]
   29204:	add	r0, r3, r0
   29208:	str	r0, [r4, #4]
   2920c:	cmp	r5, r6
   29210:	beq	29274 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x13c>
   29214:	ldr	r1, [sp, #4]
   29218:	ldrb	r0, [r5, #1]!
   2921c:	blx	r7
   29220:	cmp	r0, #0
   29224:	bne	2920c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xd4>
   29228:	ldr	r3, [r4, #4]
   2922c:	add	r3, r3, #4
   29230:	ldr	r2, [r4, #8]
   29234:	cmp	r3, r2
   29238:	bcc	291ec <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xb4>
   2923c:	str	fp, [r9, #200]	; 0xc8
   29240:	ldr	r2, [r4, #4]
   29244:	ldr	r1, [r4]
   29248:	sub	r2, r2, sl
   2924c:	add	r1, r1, sl
   29250:	mov	r0, r9
   29254:	bl	103c4 <myhtml_tokenizer_chunk_process@plt>
   29258:	mov	r1, #16384	; 0x4000
   2925c:	mov	r0, r8
   29260:	bl	108c8 <myhtml_stream_buffer_add_entry@plt>
   29264:	subs	r4, r0, #0
   29268:	beq	292cc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x194>
   2926c:	ldr	sl, [r4, #4]
   29270:	b	291ec <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xb4>
   29274:	ldr	r3, [r4, #4]
   29278:	cmp	r3, sl
   2927c:	moveq	r0, #0
   29280:	beq	292a8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x170>
   29284:	mov	r5, #0
   29288:	str	r5, [r9, #200]	; 0xc8
   2928c:	ldr	r2, [r4, #4]
   29290:	ldr	r1, [r4]
   29294:	sub	r2, r2, sl
   29298:	add	r1, r1, sl
   2929c:	mov	r0, r9
   292a0:	bl	103c4 <myhtml_tokenizer_chunk_process@plt>
   292a4:	mov	r0, r5
   292a8:	add	sp, sp, #12
   292ac:	ldrd	r4, [sp]
   292b0:	ldrd	r6, [sp, #8]
   292b4:	ldrd	r8, [sp, #16]
   292b8:	ldrd	sl, [sp, #24]
   292bc:	add	sp, sp, #32
   292c0:	pop	{pc}		; (ldr pc, [sp], #4)
   292c4:	mov	r0, fp
   292c8:	b	292a8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x170>
   292cc:	movw	r0, #37636	; 0x9304
   292d0:	b	292a8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x170>

000292d4 <myhtml_tokenizer_chunk@@Base>:
   292d4:	str	r4, [sp, #-8]!
   292d8:	str	lr, [sp, #4]
   292dc:	ldr	r3, [r0, #204]	; 0xcc
   292e0:	sub	r3, r3, #4
   292e4:	cmp	r3, #1
   292e8:	bls	292fc <myhtml_tokenizer_chunk@@Base+0x28>
   292ec:	bl	103c4 <myhtml_tokenizer_chunk_process@plt>
   292f0:	ldr	r4, [sp]
   292f4:	add	sp, sp, #4
   292f8:	pop	{pc}		; (ldr pc, [sp], #4)
   292fc:	bl	10b2c <myhtml_tokenizer_chunk_with_stream_buffer@plt>
   29300:	b	292f0 <myhtml_tokenizer_chunk@@Base+0x1c>

00029304 <myhtml_tokenizer_begin@@Base>:
   29304:	str	r4, [sp, #-8]!
   29308:	str	lr, [sp, #4]
   2930c:	bl	10064 <myhtml_tokenizer_chunk@plt>
   29310:	ldr	r4, [sp]
   29314:	add	sp, sp, #4
   29318:	pop	{pc}		; (ldr pc, [sp], #4)

0002931c <myhtml_tokenizer_pause@@Base>:
   2931c:	str	r4, [sp, #-8]!
   29320:	str	lr, [sp, #4]
   29324:	mov	r4, r0
   29328:	ldr	r3, [r0]
   2932c:	ldr	r0, [r3]
   29330:	cmp	r0, #0
   29334:	beq	2933c <myhtml_tokenizer_pause@@Base+0x20>
   29338:	bl	10a6c <mythread_stop@plt>
   2933c:	ldr	r3, [r4]
   29340:	ldr	r0, [r3, #4]
   29344:	cmp	r0, #0
   29348:	beq	29350 <myhtml_tokenizer_pause@@Base+0x34>
   2934c:	bl	10a6c <mythread_stop@plt>
   29350:	ldr	r4, [sp]
   29354:	add	sp, sp, #4
   29358:	pop	{pc}		; (ldr pc, [sp], #4)

0002935c <myhtml_tokenizer_end@@Base>:
   2935c:	strd	r4, [sp, #-12]!
   29360:	str	lr, [sp, #8]
   29364:	sub	sp, sp, #12
   29368:	mov	r4, r0
   2936c:	ldr	r2, [r0, #76]	; 0x4c
   29370:	cmp	r2, #0
   29374:	beq	293b4 <myhtml_tokenizer_end@@Base+0x58>
   29378:	ldr	r3, [r0, #192]	; 0xc0
   2937c:	ldr	r1, [r2, #8]
   29380:	sub	r3, r3, r1
   29384:	str	r3, [r0, #192]	; 0xc0
   29388:	ldr	r3, [r2, #8]
   2938c:	ldr	r2, [r2]
   29390:	ldr	r0, [r0]
   29394:	ldr	r1, [r4, #160]	; 0xa0
   29398:	add	r1, r1, #70	; 0x46
   2939c:	ldr	r0, [r0, #24]
   293a0:	str	r3, [sp]
   293a4:	ldr	r5, [r0, r1, lsl #2]
   293a8:	ldr	r1, [r4, #64]	; 0x40
   293ac:	mov	r0, r4
   293b0:	blx	r5
   293b4:	ldr	r3, [r4, #64]	; 0x40
   293b8:	mov	r2, #251	; 0xfb
   293bc:	str	r2, [r3]
   293c0:	ldr	r2, [r4, #64]	; 0x40
   293c4:	mov	r1, #0
   293c8:	mov	r0, r4
   293cc:	bl	ffc8 <myhtml_queue_add@plt>
   293d0:	cmp	r0, #0
   293d4:	movne	r3, #2
   293d8:	strne	r3, [r4, #196]	; 0xc4
   293dc:	ldr	r5, [r4, #196]	; 0xc4
   293e0:	ldr	r3, [r4, #180]	; 0xb4
   293e4:	tst	r3, #16
   293e8:	beq	2940c <myhtml_tokenizer_end@@Base+0xb0>
   293ec:	ldr	r3, [r4, #180]	; 0xb4
   293f0:	orr	r3, r3, #32
   293f4:	str	r3, [r4, #180]	; 0xb4
   293f8:	mov	r0, r5
   293fc:	add	sp, sp, #12
   29400:	ldrd	r4, [sp]
   29404:	add	sp, sp, #8
   29408:	pop	{pc}		; (ldr pc, [sp], #4)
   2940c:	ldr	r3, [r4]
   29410:	ldr	r1, [r4, #20]
   29414:	ldr	r0, [r3]
   29418:	bl	10910 <mythread_queue_list_entry_wait_for_done@plt>
   2941c:	ldr	r0, [r4]
   29420:	ldr	r3, [r0], #8
   29424:	ldr	r2, [r3, #16]
   29428:	mov	r3, #0
   2942c:	str	r3, [sp]
   29430:	ldr	r3, [r4, #20]
   29434:	mov	r1, #2
   29438:	bl	fbb4 <mythread_queue_list_entry_delete@plt>
   2943c:	str	r0, [r4, #20]
   29440:	ldr	r3, [r4]
   29444:	ldr	r3, [r3]
   29448:	ldr	r0, [r3, #16]
   2944c:	bl	1055c <mythread_queue_list_get_count@plt>
   29450:	cmp	r0, #0
   29454:	beq	29474 <myhtml_tokenizer_end@@Base+0x118>
   29458:	cmp	r5, #0
   2945c:	bne	293ec <myhtml_tokenizer_end@@Base+0x90>
   29460:	ldr	r3, [r4]
   29464:	ldr	r0, [r3]
   29468:	bl	104a8 <mythread_check_status@plt>
   2946c:	mov	r5, r0
   29470:	b	293ec <myhtml_tokenizer_end@@Base+0x90>
   29474:	mov	r0, r4
   29478:	bl	10580 <myhtml_tokenizer_pause@plt>
   2947c:	b	29458 <myhtml_tokenizer_end@@Base+0xfc>

00029480 <myhtml_tokenizer_calc_current_namespace@@Base>:
   29480:	ldr	r3, [r0, #184]	; 0xb8
   29484:	tst	r3, #1
   29488:	bxne	lr
   2948c:	ldr	r3, [r0, #180]	; 0xb4
   29490:	tst	r3, #16
   29494:	beq	294a4 <myhtml_tokenizer_calc_current_namespace@@Base+0x24>
   29498:	ldr	r3, [r0, #164]	; 0xa4
   2949c:	str	r3, [r0, #160]	; 0xa0
   294a0:	bx	lr
   294a4:	ldr	r3, [r1]
   294a8:	cmp	r3, #124	; 0x7c
   294ac:	cmpne	r3, #218	; 0xda
   294b0:	moveq	r2, #1
   294b4:	movne	r2, #0
   294b8:	cmp	r3, #54	; 0x36
   294bc:	orreq	r2, r2, #1
   294c0:	cmp	r2, #0
   294c4:	beq	294d0 <myhtml_tokenizer_calc_current_namespace@@Base+0x50>
   294c8:	str	r1, [r0, #156]	; 0x9c
   294cc:	bx	lr
   294d0:	ldr	r2, [r0, #156]	; 0x9c
   294d4:	cmp	r2, #0
   294d8:	bxeq	lr
   294dc:	ldr	r2, [r1, #48]	; 0x30
   294e0:	tst	r2, #1
   294e4:	bxne	lr
   294e8:	strd	r4, [sp, #-16]!
   294ec:	str	r6, [sp, #8]
   294f0:	str	lr, [sp, #12]
   294f4:	mov	r5, r1
   294f8:	mov	r4, r0
   294fc:	mov	r1, r3
   29500:	ldr	r0, [r0, #28]
   29504:	bl	109b8 <myhtml_tag_get_by_id@plt>
   29508:	ldr	r3, [r0, #12]
   2950c:	cmp	r3, #0
   29510:	bne	29524 <myhtml_tokenizer_calc_current_namespace@@Base+0xa4>
   29514:	ldrd	r4, [sp]
   29518:	ldr	r6, [sp, #8]
   2951c:	add	sp, sp, #12
   29520:	pop	{pc}		; (ldr pc, [sp], #4)
   29524:	mov	r1, r5
   29528:	mov	r0, r4
   2952c:	bl	fc80 <myhtml_tree_wait_for_last_done_token@plt>
   29530:	ldr	r3, [r4, #164]	; 0xa4
   29534:	str	r3, [r4, #160]	; 0xa0
   29538:	b	29514 <myhtml_tokenizer_calc_current_namespace@@Base+0x94>

0002953c <myhtml_check_tag_parser@@Base>:
   2953c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29540:	strd	r6, [sp, #8]
   29544:	str	r8, [sp, #16]
   29548:	str	lr, [sp, #20]
   2954c:	sub	sp, sp, #8
   29550:	mov	r5, r0
   29554:	mov	r4, r1
   29558:	mov	r8, r2
   2955c:	mov	r7, r3
   29560:	ldr	r6, [r0, #28]
   29564:	ldr	r2, [r1, #28]
   29568:	cmp	r2, r3
   2956c:	bls	295b0 <myhtml_check_tag_parser@@Base+0x74>
   29570:	ldr	r1, [r1, #24]
   29574:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   29578:	ldr	r2, [r4, #28]
   2957c:	mov	r1, r0
   29580:	mov	r0, r6
   29584:	bl	10b08 <myhtml_tag_get_by_name@plt>
   29588:	cmp	r0, #0
   2958c:	beq	295cc <myhtml_check_tag_parser@@Base+0x90>
   29590:	ldr	r3, [r0]
   29594:	str	r3, [r4]
   29598:	add	sp, sp, #8
   2959c:	ldrd	r4, [sp]
   295a0:	ldrd	r6, [sp, #8]
   295a4:	ldr	r8, [sp, #16]
   295a8:	add	sp, sp, #20
   295ac:	pop	{pc}		; (ldr pc, [sp], #4)
   295b0:	ldr	r1, [r1, #24]
   295b4:	ldr	r3, [r0, #192]	; 0xc0
   295b8:	sub	r1, r1, r3
   295bc:	add	r1, r8, r1
   295c0:	mov	r0, r6
   295c4:	bl	10b08 <myhtml_tag_get_by_name@plt>
   295c8:	b	29588 <myhtml_check_tag_parser@@Base+0x4c>
   295cc:	ldr	r2, [r4, #28]
   295d0:	cmp	r2, r7
   295d4:	bls	2961c <myhtml_check_tag_parser@@Base+0xe0>
   295d8:	ldr	r1, [r4, #24]
   295dc:	mov	r0, r5
   295e0:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   295e4:	mov	r3, #1
   295e8:	str	r3, [sp]
   295ec:	mov	r3, #0
   295f0:	ldr	r2, [r4, #28]
   295f4:	mov	r1, r0
   295f8:	mov	r0, r6
   295fc:	bl	ffb0 <myhtml_tag_add@plt>
   29600:	str	r0, [r4]
   29604:	mov	r3, #1
   29608:	mov	r2, r3
   2960c:	ldr	r1, [r4]
   29610:	mov	r0, r6
   29614:	bl	ff38 <myhtml_tag_set_category@plt>
   29618:	b	29598 <myhtml_check_tag_parser@@Base+0x5c>
   2961c:	ldr	r1, [r4, #24]
   29620:	ldr	r3, [r5, #192]	; 0xc0
   29624:	sub	r1, r1, r3
   29628:	mov	r3, #1
   2962c:	str	r3, [sp]
   29630:	mov	r3, #0
   29634:	add	r1, r8, r1
   29638:	mov	r0, r6
   2963c:	bl	ffb0 <myhtml_tag_add@plt>
   29640:	str	r0, [r4]
   29644:	b	29604 <myhtml_check_tag_parser@@Base+0xc8>

00029648 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   29648:	str	r4, [sp, #-8]!
   2964c:	str	lr, [sp, #4]
   29650:	mov	r4, r0
   29654:	mov	r0, r1
   29658:	ldr	r2, [r1]
   2965c:	cmp	r2, #0
   29660:	bne	29670 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x28>
   29664:	ldr	r2, [r1, #24]
   29668:	cmp	r2, r3
   2966c:	bcc	2967c <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x34>
   29670:	ldr	r4, [sp]
   29674:	add	sp, sp, #4
   29678:	pop	{pc}		; (ldr pc, [sp], #4)
   2967c:	ldr	r1, [r1, #32]
   29680:	ldr	ip, [r0, #48]	; 0x30
   29684:	ldr	lr, [sp, #8]
   29688:	orr	ip, ip, lr
   2968c:	str	ip, [r0, #48]	; 0x30
   29690:	mov	ip, #1
   29694:	str	ip, [r0]
   29698:	str	r2, [r0, #32]
   2969c:	sub	r3, r3, r2
   296a0:	str	r3, [r0, #36]	; 0x24
   296a4:	str	r3, [r0, #28]
   296a8:	mov	r2, r0
   296ac:	mov	r0, r4
   296b0:	bl	ffc8 <myhtml_queue_add@plt>
   296b4:	cmp	r0, #0
   296b8:	ldreq	r0, [r4, #64]	; 0x40
   296bc:	movne	r0, #0
   296c0:	b	29670 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x28>

000296c4 <myhtml_tokenizer_state_tag_open@@Base>:
   296c4:	strd	r4, [sp, #-12]!
   296c8:	str	lr, [sp, #8]
   296cc:	sub	sp, sp, #12
   296d0:	mov	r5, r0
   296d4:	mov	r4, r3
   296d8:	ldrb	r3, [r2, r3]
   296dc:	ldr	r0, [pc, #320]	; 29824 <myhtml_tokenizer_state_tag_open@@Base+0x160>
   296e0:	add	r0, pc, r0
   296e4:	ldrb	r0, [r0, r3]
   296e8:	cmp	r0, #1
   296ec:	beq	29744 <myhtml_tokenizer_state_tag_open@@Base+0x80>
   296f0:	cmp	r3, #33	; 0x21
   296f4:	beq	29790 <myhtml_tokenizer_state_tag_open@@Base+0xcc>
   296f8:	cmp	r3, #47	; 0x2f
   296fc:	addeq	r0, r4, #1
   29700:	moveq	r3, #8
   29704:	streq	r3, [r5, #160]	; 0xa0
   29708:	beq	29734 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   2970c:	cmp	r3, #63	; 0x3f
   29710:	beq	297d8 <myhtml_tokenizer_state_tag_open@@Base+0x114>
   29714:	ldr	r3, [r1, #48]	; 0x30
   29718:	ldr	r2, [r1, #48]	; 0x30
   2971c:	and	r3, r3, #8
   29720:	eor	r3, r3, r2
   29724:	str	r3, [r1, #48]	; 0x30
   29728:	mov	r3, #0
   2972c:	str	r3, [r5, #160]	; 0xa0
   29730:	mov	r0, r4
   29734:	add	sp, sp, #12
   29738:	ldrd	r4, [sp]
   2973c:	add	sp, sp, #8
   29740:	pop	{pc}		; (ldr pc, [sp], #4)
   29744:	ldr	r3, [r5, #192]	; 0xc0
   29748:	sub	r3, r3, #1
   2974c:	mov	r0, #512	; 0x200
   29750:	str	r0, [sp]
   29754:	add	r3, r3, r4
   29758:	mov	r0, r5
   2975c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29760:	cmp	r0, #0
   29764:	moveq	r3, #69	; 0x45
   29768:	streq	r3, [r5, #160]	; 0xa0
   2976c:	moveq	r0, #0
   29770:	beq	29734 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   29774:	ldr	r3, [r5, #192]	; 0xc0
   29778:	add	r3, r3, r4
   2977c:	str	r3, [r0, #24]
   29780:	mov	r3, #9
   29784:	str	r3, [r5, #160]	; 0xa0
   29788:	mov	r0, r4
   2978c:	b	29734 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   29790:	ldr	r3, [r5, #192]	; 0xc0
   29794:	sub	r3, r3, #1
   29798:	mov	r0, #512	; 0x200
   2979c:	str	r0, [sp]
   297a0:	add	r3, r3, r4
   297a4:	mov	r0, r5
   297a8:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   297ac:	subs	r2, r0, #0
   297b0:	moveq	r3, #69	; 0x45
   297b4:	streq	r3, [r5, #160]	; 0xa0
   297b8:	beq	29734 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   297bc:	add	r0, r4, #1
   297c0:	ldr	r3, [r5, #192]	; 0xc0
   297c4:	add	r3, r3, r0
   297c8:	str	r3, [r2, #24]
   297cc:	mov	r3, #44	; 0x2c
   297d0:	str	r3, [r5, #160]	; 0xa0
   297d4:	b	29734 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   297d8:	ldr	r3, [r5, #192]	; 0xc0
   297dc:	sub	r3, r3, #1
   297e0:	mov	r0, #512	; 0x200
   297e4:	str	r0, [sp]
   297e8:	add	r3, r3, r4
   297ec:	mov	r0, r5
   297f0:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   297f4:	cmp	r0, #0
   297f8:	moveq	r3, #69	; 0x45
   297fc:	streq	r3, [r5, #160]	; 0xa0
   29800:	moveq	r0, #0
   29804:	beq	29734 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   29808:	ldr	r3, [r5, #192]	; 0xc0
   2980c:	add	r3, r3, r4
   29810:	str	r3, [r0, #24]
   29814:	mov	r3, #43	; 0x2b
   29818:	str	r3, [r5, #160]	; 0xa0
   2981c:	mov	r0, r4
   29820:	b	29734 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   29824:	andeq	r8, sp, r8

00029828 <myhtml_tokenizer_state_end_tag_open@@Base>:
   29828:	strd	r4, [sp, #-12]!
   2982c:	str	lr, [sp, #8]
   29830:	sub	sp, sp, #12
   29834:	mov	r5, r0
   29838:	mov	r4, r3
   2983c:	ldrb	r3, [r2, r3]
   29840:	ldr	r0, [pc, #208]	; 29918 <myhtml_tokenizer_state_end_tag_open@@Base+0xf0>
   29844:	add	r0, pc, r0
   29848:	ldrb	r0, [r0, r3]
   2984c:	cmp	r0, #1
   29850:	beq	29878 <myhtml_tokenizer_state_end_tag_open@@Base+0x50>
   29854:	cmp	r3, #62	; 0x3e
   29858:	bne	298cc <myhtml_tokenizer_state_end_tag_open@@Base+0xa4>
   2985c:	add	r0, r4, #1
   29860:	mov	r3, #0
   29864:	str	r3, [r5, #160]	; 0xa0
   29868:	add	sp, sp, #12
   2986c:	ldrd	r4, [sp]
   29870:	add	sp, sp, #8
   29874:	pop	{pc}		; (ldr pc, [sp], #4)
   29878:	ldr	r3, [r5, #192]	; 0xc0
   2987c:	sub	r3, r3, #2
   29880:	mov	r0, #512	; 0x200
   29884:	str	r0, [sp]
   29888:	add	r3, r3, r4
   2988c:	mov	r0, r5
   29890:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29894:	cmp	r0, #0
   29898:	moveq	r3, #69	; 0x45
   2989c:	streq	r3, [r5, #160]	; 0xa0
   298a0:	moveq	r0, #0
   298a4:	beq	29868 <myhtml_tokenizer_state_end_tag_open@@Base+0x40>
   298a8:	ldr	r3, [r5, #192]	; 0xc0
   298ac:	add	r3, r3, r4
   298b0:	str	r3, [r0, #24]
   298b4:	mov	r3, #1
   298b8:	str	r3, [r0, #48]	; 0x30
   298bc:	mov	r3, #9
   298c0:	str	r3, [r5, #160]	; 0xa0
   298c4:	mov	r0, r4
   298c8:	b	29868 <myhtml_tokenizer_state_end_tag_open@@Base+0x40>
   298cc:	ldr	r3, [r5, #192]	; 0xc0
   298d0:	sub	r3, r3, #2
   298d4:	mov	r0, #512	; 0x200
   298d8:	str	r0, [sp]
   298dc:	add	r3, r3, r4
   298e0:	mov	r0, r5
   298e4:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   298e8:	cmp	r0, #0
   298ec:	moveq	r3, #69	; 0x45
   298f0:	streq	r3, [r5, #160]	; 0xa0
   298f4:	moveq	r0, #0
   298f8:	beq	29868 <myhtml_tokenizer_state_end_tag_open@@Base+0x40>
   298fc:	ldr	r3, [r5, #192]	; 0xc0
   29900:	add	r3, r3, r4
   29904:	str	r3, [r0, #24]
   29908:	mov	r3, #43	; 0x2b
   2990c:	str	r3, [r5, #160]	; 0xa0
   29910:	mov	r0, r4
   29914:	b	29868 <myhtml_tokenizer_state_end_tag_open@@Base+0x40>
   29918:	andeq	r7, sp, r4, lsr #29

0002991c <myhtml_tokenizer_set_state@@Base>:
   2991c:	ldr	r3, [r1, #48]	; 0x30
   29920:	tst	r3, #1
   29924:	bne	29974 <myhtml_tokenizer_set_state@@Base+0x58>
   29928:	ldr	r1, [r1]
   2992c:	cmp	r1, #93	; 0x5d
   29930:	bne	2994c <myhtml_tokenizer_set_state@@Base+0x30>
   29934:	ldr	r3, [r0, #180]	; 0xb4
   29938:	tst	r3, #1
   2993c:	bne	2994c <myhtml_tokenizer_set_state@@Base+0x30>
   29940:	mov	r3, #0
   29944:	str	r3, [r0, #160]	; 0xa0
   29948:	bx	lr
   2994c:	str	r4, [sp, #-8]!
   29950:	str	lr, [sp, #4]
   29954:	mov	r4, r0
   29958:	ldr	r0, [r0, #28]
   2995c:	bl	109b8 <myhtml_tag_get_by_id@plt>
   29960:	ldr	r3, [r0, #12]
   29964:	str	r3, [r4, #160]	; 0xa0
   29968:	ldr	r4, [sp]
   2996c:	add	sp, sp, #4
   29970:	pop	{pc}		; (ldr pc, [sp], #4)
   29974:	mov	r3, #0
   29978:	str	r3, [r0, #160]	; 0xa0
   2997c:	bx	lr

00029980 <myhtml_tokenizer_state_tag_name@@Base>:
   29980:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29984:	strd	r6, [sp, #8]
   29988:	str	r8, [sp, #16]
   2998c:	str	lr, [sp, #20]
   29990:	ldr	ip, [sp, #24]
   29994:	cmp	r3, ip
   29998:	bcs	29afc <myhtml_tokenizer_state_tag_name@@Base+0x17c>
   2999c:	mov	r4, r3
   299a0:	mov	r6, r1
   299a4:	mov	r7, r0
   299a8:	add	r3, r2, r3
   299ac:	ldrb	r1, [r2, r4]
   299b0:	ldr	r0, [pc, #332]	; 29b04 <myhtml_tokenizer_state_tag_name@@Base+0x184>
   299b4:	add	r0, pc, r0
   299b8:	ldrb	r0, [r0, r1]
   299bc:	cmp	r0, #2
   299c0:	beq	29a80 <myhtml_tokenizer_state_tag_name@@Base+0x100>
   299c4:	cmp	r1, #47	; 0x2f
   299c8:	beq	29ac8 <myhtml_tokenizer_state_tag_name@@Base+0x148>
   299cc:	cmp	r1, #62	; 0x3e
   299d0:	beq	29a14 <myhtml_tokenizer_state_tag_name@@Base+0x94>
   299d4:	sub	r5, r2, #1
   299d8:	add	r5, r5, ip
   299dc:	rsb	r1, r2, #1
   299e0:	ldr	r0, [pc, #288]	; 29b08 <myhtml_tokenizer_state_tag_name@@Base+0x188>
   299e4:	add	r0, pc, r0
   299e8:	add	r4, r1, r3
   299ec:	cmp	r3, r5
   299f0:	beq	29ab0 <myhtml_tokenizer_state_tag_name@@Base+0x130>
   299f4:	ldrb	ip, [r3, #1]!
   299f8:	ldrb	lr, [r0, ip]
   299fc:	cmp	lr, #2
   29a00:	beq	29a80 <myhtml_tokenizer_state_tag_name@@Base+0x100>
   29a04:	cmp	ip, #47	; 0x2f
   29a08:	beq	29ac8 <myhtml_tokenizer_state_tag_name@@Base+0x148>
   29a0c:	cmp	ip, #62	; 0x3e
   29a10:	bne	299e8 <myhtml_tokenizer_state_tag_name@@Base+0x68>
   29a14:	ldr	r3, [r7, #192]	; 0xc0
   29a18:	ldr	r1, [r6, #24]
   29a1c:	sub	r3, r3, r1
   29a20:	add	r3, r3, r4
   29a24:	str	r3, [r6, #28]
   29a28:	mov	r3, r4
   29a2c:	mov	r1, r6
   29a30:	mov	r0, r7
   29a34:	bl	10bd4 <myhtml_check_tag_parser@plt>
   29a38:	mov	r1, r6
   29a3c:	mov	r0, r7
   29a40:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   29a44:	add	r4, r4, #1
   29a48:	ldr	r3, [r7, #192]	; 0xc0
   29a4c:	ldr	r2, [r6, #32]
   29a50:	sub	r3, r3, r2
   29a54:	add	r3, r3, r4
   29a58:	str	r3, [r6, #36]	; 0x24
   29a5c:	mov	r2, r6
   29a60:	mov	r1, r4
   29a64:	mov	r0, r7
   29a68:	bl	ffc8 <myhtml_queue_add@plt>
   29a6c:	cmp	r0, #0
   29a70:	movne	r3, #69	; 0x45
   29a74:	strne	r3, [r7, #160]	; 0xa0
   29a78:	movne	r4, #0
   29a7c:	b	29ab0 <myhtml_tokenizer_state_tag_name@@Base+0x130>
   29a80:	ldr	r3, [r7, #192]	; 0xc0
   29a84:	ldr	r1, [r6, #24]
   29a88:	sub	r3, r3, r1
   29a8c:	add	r3, r3, r4
   29a90:	str	r3, [r6, #28]
   29a94:	mov	r3, r4
   29a98:	mov	r1, r6
   29a9c:	mov	r0, r7
   29aa0:	bl	10bd4 <myhtml_check_tag_parser@plt>
   29aa4:	add	r4, r4, #1
   29aa8:	mov	r3, #33	; 0x21
   29aac:	str	r3, [r7, #160]	; 0xa0
   29ab0:	mov	r0, r4
   29ab4:	ldrd	r4, [sp]
   29ab8:	ldrd	r6, [sp, #8]
   29abc:	ldr	r8, [sp, #16]
   29ac0:	add	sp, sp, #20
   29ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   29ac8:	ldr	r3, [r7, #192]	; 0xc0
   29acc:	ldr	r1, [r6, #24]
   29ad0:	sub	r3, r3, r1
   29ad4:	add	r3, r3, r4
   29ad8:	str	r3, [r6, #28]
   29adc:	mov	r3, r4
   29ae0:	mov	r1, r6
   29ae4:	mov	r0, r7
   29ae8:	bl	10bd4 <myhtml_check_tag_parser@plt>
   29aec:	add	r4, r4, #1
   29af0:	mov	r3, #42	; 0x2a
   29af4:	str	r3, [r7, #160]	; 0xa0
   29af8:	b	29ab0 <myhtml_tokenizer_state_tag_name@@Base+0x130>
   29afc:	mov	r4, r3
   29b00:	b	29ab0 <myhtml_tokenizer_state_tag_name@@Base+0x130>
   29b04:	andeq	r7, sp, r4, lsr sp
   29b08:	andeq	r7, sp, r4, lsl #26

00029b0c <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   29b0c:	strd	r4, [sp, #-16]!
   29b10:	str	r6, [sp, #8]
   29b14:	str	lr, [sp, #12]
   29b18:	ldrb	r2, [r2, r3]
   29b1c:	cmp	r2, #62	; 0x3e
   29b20:	movne	r2, #33	; 0x21
   29b24:	strne	r2, [r0, #160]	; 0xa0
   29b28:	movne	r4, r3
   29b2c:	beq	29b44 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x38>
   29b30:	mov	r0, r4
   29b34:	ldrd	r4, [sp]
   29b38:	ldr	r6, [sp, #8]
   29b3c:	add	sp, sp, #12
   29b40:	pop	{pc}		; (ldr pc, [sp], #4)
   29b44:	mov	r4, r3
   29b48:	mov	r6, r1
   29b4c:	mov	r5, r0
   29b50:	ldr	r3, [r1, #48]	; 0x30
   29b54:	orr	r3, r3, #2
   29b58:	str	r3, [r1, #48]	; 0x30
   29b5c:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   29b60:	add	r4, r4, #1
   29b64:	ldr	r3, [r5, #192]	; 0xc0
   29b68:	ldr	r2, [r6, #32]
   29b6c:	sub	r3, r3, r2
   29b70:	add	r3, r3, r4
   29b74:	str	r3, [r6, #36]	; 0x24
   29b78:	mov	r2, r6
   29b7c:	mov	r1, r4
   29b80:	mov	r0, r5
   29b84:	bl	ffc8 <myhtml_queue_add@plt>
   29b88:	cmp	r0, #0
   29b8c:	movne	r3, #69	; 0x45
   29b90:	strne	r3, [r5, #160]	; 0xa0
   29b94:	movne	r4, #0
   29b98:	b	29b30 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x24>

00029b9c <myhtml_tokenizer_state_before_attribute_name@@Base>:
   29b9c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   29ba0:	strd	r6, [sp, #8]
   29ba4:	str	r8, [sp, #16]
   29ba8:	str	lr, [sp, #20]
   29bac:	mov	r5, r0
   29bb0:	mov	r6, r1
   29bb4:	mov	r4, r3
   29bb8:	ldr	lr, [sp, #24]
   29bbc:	add	r0, r2, r3
   29bc0:	ldrb	r1, [r2, r3]
   29bc4:	sub	r3, r1, #9
   29bc8:	uxtb	r3, r3
   29bcc:	cmp	r1, #32
   29bd0:	cmpne	r3, #1
   29bd4:	movls	r3, #1
   29bd8:	movhi	r3, #0
   29bdc:	sub	r1, r1, #12
   29be0:	uxtb	r1, r1
   29be4:	cmp	r1, #1
   29be8:	orrls	r3, r3, #1
   29bec:	cmp	r3, #0
   29bf0:	beq	29c4c <myhtml_tokenizer_state_before_attribute_name@@Base+0xb0>
   29bf4:	cmp	r4, lr
   29bf8:	bcs	29ce8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x14c>
   29bfc:	sub	lr, lr, #1
   29c00:	add	lr, lr, r2
   29c04:	rsb	r7, r2, #1
   29c08:	add	r4, r7, r0
   29c0c:	cmp	lr, r0
   29c10:	beq	29ce8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x14c>
   29c14:	ldrb	r3, [r0, #1]!
   29c18:	sub	r1, r3, #9
   29c1c:	uxtb	r1, r1
   29c20:	sub	ip, r3, #12
   29c24:	uxtb	ip, ip
   29c28:	cmp	ip, #1
   29c2c:	cmphi	r1, #1
   29c30:	movls	r1, #1
   29c34:	movhi	r1, #0
   29c38:	cmp	r3, #32
   29c3c:	orreq	r1, r1, #1
   29c40:	cmp	r1, #0
   29c44:	bne	29c08 <myhtml_tokenizer_state_before_attribute_name@@Base+0x6c>
   29c48:	b	29c54 <myhtml_tokenizer_state_before_attribute_name@@Base+0xb8>
   29c4c:	cmp	r4, lr
   29c50:	bcs	29ce8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x14c>
   29c54:	add	r1, r2, r4
   29c58:	ldrb	r3, [r2, r4]
   29c5c:	cmp	r3, #62	; 0x3e
   29c60:	beq	29d00 <myhtml_tokenizer_state_before_attribute_name@@Base+0x164>
   29c64:	cmp	r3, #47	; 0x2f
   29c68:	beq	29d48 <myhtml_tokenizer_state_before_attribute_name@@Base+0x1ac>
   29c6c:	ldr	r3, [r6, #40]	; 0x28
   29c70:	cmp	r3, #0
   29c74:	beq	29d5c <myhtml_tokenizer_state_before_attribute_name@@Base+0x1c0>
   29c78:	ldr	r3, [r6, #44]	; 0x2c
   29c7c:	ldr	r2, [r5, #56]	; 0x38
   29c80:	str	r2, [r3]
   29c84:	ldr	r3, [r6, #44]	; 0x2c
   29c88:	ldr	r2, [r3]
   29c8c:	str	r3, [r2, #4]
   29c90:	ldr	r3, [r3]
   29c94:	str	r3, [r6, #44]	; 0x2c
   29c98:	mov	r2, #0
   29c9c:	str	r2, [r3]
   29ca0:	ldr	r3, [r6, #44]	; 0x2c
   29ca4:	str	r3, [r5, #56]	; 0x38
   29ca8:	ldr	r2, [r5, #56]	; 0x38
   29cac:	ldr	r3, [r5, #192]	; 0xc0
   29cb0:	add	r3, r3, r4
   29cb4:	str	r3, [r2, #48]	; 0x30
   29cb8:	ldr	r2, [r5, #56]	; 0x38
   29cbc:	mov	r3, #0
   29cc0:	str	r3, [r2, #52]	; 0x34
   29cc4:	ldr	r2, [r5, #56]	; 0x38
   29cc8:	str	r3, [r2, #56]	; 0x38
   29ccc:	ldr	r2, [r5, #56]	; 0x38
   29cd0:	str	r3, [r2, #60]	; 0x3c
   29cd4:	ldrb	r3, [r1]
   29cd8:	cmp	r3, #61	; 0x3d
   29cdc:	addeq	r4, r4, #1
   29ce0:	mov	r3, #34	; 0x22
   29ce4:	str	r3, [r5, #160]	; 0xa0
   29ce8:	mov	r0, r4
   29cec:	ldrd	r4, [sp]
   29cf0:	ldrd	r6, [sp, #8]
   29cf4:	ldr	r8, [sp, #16]
   29cf8:	add	sp, sp, #20
   29cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   29d00:	mov	r1, r6
   29d04:	mov	r0, r5
   29d08:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   29d0c:	add	r4, r4, #1
   29d10:	ldr	r3, [r5, #192]	; 0xc0
   29d14:	ldr	r2, [r6, #32]
   29d18:	sub	r3, r3, r2
   29d1c:	add	r3, r3, r4
   29d20:	str	r3, [r6, #36]	; 0x24
   29d24:	mov	r2, r6
   29d28:	mov	r1, r4
   29d2c:	mov	r0, r5
   29d30:	bl	ffc8 <myhtml_queue_add@plt>
   29d34:	cmp	r0, #0
   29d38:	movne	r3, #69	; 0x45
   29d3c:	strne	r3, [r5, #160]	; 0xa0
   29d40:	movne	r4, #0
   29d44:	b	29ce8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x14c>
   29d48:	ldr	r3, [r6, #48]	; 0x30
   29d4c:	orr	r3, r3, #2
   29d50:	str	r3, [r6, #48]	; 0x30
   29d54:	add	r4, r4, #1
   29d58:	b	29ce8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x14c>
   29d5c:	ldr	r3, [r5, #56]	; 0x38
   29d60:	str	r3, [r6, #40]	; 0x28
   29d64:	str	r3, [r6, #44]	; 0x2c
   29d68:	str	r3, [r5, #56]	; 0x38
   29d6c:	mov	r2, #0
   29d70:	str	r2, [r3]
   29d74:	ldr	r3, [r5, #56]	; 0x38
   29d78:	str	r2, [r3, #4]
   29d7c:	b	29ca8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x10c>

00029d80 <myhtml_tokenizer_state_attribute_name@@Base>:
   29d80:	strd	r4, [sp, #-16]!
   29d84:	str	r6, [sp, #8]
   29d88:	str	lr, [sp, #12]
   29d8c:	mov	r4, r3
   29d90:	ldr	ip, [sp, #16]
   29d94:	cmp	r3, ip
   29d98:	bcs	29ecc <myhtml_tokenizer_state_attribute_name@@Base+0x14c>
   29d9c:	mov	r5, r0
   29da0:	mov	r6, r1
   29da4:	add	r0, r2, r3
   29da8:	ldrb	r2, [r2, r3]
   29dac:	sub	r3, r2, #9
   29db0:	uxtb	r3, r3
   29db4:	sub	r1, r2, #12
   29db8:	uxtb	r1, r1
   29dbc:	cmp	r1, #1
   29dc0:	cmphi	r3, #1
   29dc4:	movls	r3, #1
   29dc8:	movhi	r3, #0
   29dcc:	cmp	r2, #32
   29dd0:	orreq	r3, r3, #1
   29dd4:	cmp	r3, #0
   29dd8:	bne	29ea8 <myhtml_tokenizer_state_attribute_name@@Base+0x128>
   29ddc:	cmp	r2, #61	; 0x3d
   29de0:	beq	29ee0 <myhtml_tokenizer_state_attribute_name@@Base+0x160>
   29de4:	cmp	r2, #62	; 0x3e
   29de8:	beq	29e44 <myhtml_tokenizer_state_attribute_name@@Base+0xc4>
   29dec:	cmp	r2, #47	; 0x2f
   29df0:	beq	29f2c <myhtml_tokenizer_state_attribute_name@@Base+0x1ac>
   29df4:	add	r4, r4, #1
   29df8:	cmp	ip, r4
   29dfc:	beq	29ecc <myhtml_tokenizer_state_attribute_name@@Base+0x14c>
   29e00:	ldrb	r2, [r0, #1]!
   29e04:	sub	r3, r2, #9
   29e08:	uxtb	r3, r3
   29e0c:	sub	r1, r2, #12
   29e10:	uxtb	r1, r1
   29e14:	cmp	r1, #1
   29e18:	cmphi	r3, #1
   29e1c:	movls	r3, #1
   29e20:	movhi	r3, #0
   29e24:	cmp	r2, #32
   29e28:	orreq	r3, r3, #1
   29e2c:	cmp	r3, #0
   29e30:	bne	29ea8 <myhtml_tokenizer_state_attribute_name@@Base+0x128>
   29e34:	cmp	r2, #61	; 0x3d
   29e38:	beq	29ee0 <myhtml_tokenizer_state_attribute_name@@Base+0x160>
   29e3c:	cmp	r2, #62	; 0x3e
   29e40:	bne	29dec <myhtml_tokenizer_state_attribute_name@@Base+0x6c>
   29e44:	ldr	r2, [r5, #56]	; 0x38
   29e48:	ldr	r3, [r5, #192]	; 0xc0
   29e4c:	ldr	r1, [r2, #48]	; 0x30
   29e50:	sub	r3, r3, r1
   29e54:	add	r3, r3, r4
   29e58:	str	r3, [r2, #52]	; 0x34
   29e5c:	mov	r1, r6
   29e60:	mov	r0, r5
   29e64:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   29e68:	add	r4, r4, #1
   29e6c:	ldr	r3, [r5, #192]	; 0xc0
   29e70:	ldr	r2, [r6, #32]
   29e74:	sub	r3, r3, r2
   29e78:	add	r3, r3, r4
   29e7c:	str	r3, [r6, #36]	; 0x24
   29e80:	mov	r2, r6
   29e84:	mov	r1, r4
   29e88:	mov	r0, r5
   29e8c:	bl	ffc8 <myhtml_queue_add@plt>
   29e90:	subs	r6, r0, #0
   29e94:	beq	29f08 <myhtml_tokenizer_state_attribute_name@@Base+0x188>
   29e98:	mov	r3, #69	; 0x45
   29e9c:	str	r3, [r5, #160]	; 0xa0
   29ea0:	mov	r4, #0
   29ea4:	b	29ecc <myhtml_tokenizer_state_attribute_name@@Base+0x14c>
   29ea8:	ldr	r2, [r5, #56]	; 0x38
   29eac:	ldr	r3, [r5, #192]	; 0xc0
   29eb0:	ldr	r1, [r2, #48]	; 0x30
   29eb4:	sub	r3, r3, r1
   29eb8:	add	r3, r3, r4
   29ebc:	str	r3, [r2, #52]	; 0x34
   29ec0:	mov	r3, #35	; 0x23
   29ec4:	str	r3, [r5, #160]	; 0xa0
   29ec8:	add	r4, r4, #1
   29ecc:	mov	r0, r4
   29ed0:	ldrd	r4, [sp]
   29ed4:	ldr	r6, [sp, #8]
   29ed8:	add	sp, sp, #12
   29edc:	pop	{pc}		; (ldr pc, [sp], #4)
   29ee0:	ldr	r2, [r5, #56]	; 0x38
   29ee4:	ldr	r3, [r5, #192]	; 0xc0
   29ee8:	ldr	r1, [r2, #48]	; 0x30
   29eec:	sub	r3, r3, r1
   29ef0:	add	r3, r3, r4
   29ef4:	str	r3, [r2, #52]	; 0x34
   29ef8:	mov	r3, #36	; 0x24
   29efc:	str	r3, [r5, #160]	; 0xa0
   29f00:	add	r4, r4, #1
   29f04:	b	29ecc <myhtml_tokenizer_state_attribute_name@@Base+0x14c>
   29f08:	ldr	r0, [r5, #8]
   29f0c:	ldr	r1, [r0, #16]
   29f10:	bl	10898 <myhtml_token_attr_create@plt>
   29f14:	str	r0, [r5, #56]	; 0x38
   29f18:	cmp	r0, #0
   29f1c:	moveq	r3, #69	; 0x45
   29f20:	streq	r3, [r5, #160]	; 0xa0
   29f24:	moveq	r4, r6
   29f28:	b	29ecc <myhtml_tokenizer_state_attribute_name@@Base+0x14c>
   29f2c:	ldr	r2, [r5, #56]	; 0x38
   29f30:	ldr	r3, [r5, #192]	; 0xc0
   29f34:	ldr	r1, [r2, #48]	; 0x30
   29f38:	sub	r3, r3, r1
   29f3c:	add	r3, r3, r4
   29f40:	str	r3, [r2, #52]	; 0x34
   29f44:	ldr	r3, [r6, #48]	; 0x30
   29f48:	orr	r3, r3, #2
   29f4c:	str	r3, [r6, #48]	; 0x30
   29f50:	mov	r3, #33	; 0x21
   29f54:	str	r3, [r5, #160]	; 0xa0
   29f58:	ldr	r0, [r5, #8]
   29f5c:	ldr	r1, [r0, #16]
   29f60:	bl	10898 <myhtml_token_attr_create@plt>
   29f64:	str	r0, [r5, #56]	; 0x38
   29f68:	cmp	r0, #0
   29f6c:	moveq	r3, #69	; 0x45
   29f70:	streq	r3, [r5, #160]	; 0xa0
   29f74:	moveq	r4, #0
   29f78:	addne	r4, r4, #1
   29f7c:	b	29ecc <myhtml_tokenizer_state_attribute_name@@Base+0x14c>

00029f80 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   29f80:	strd	r4, [sp, #-16]!
   29f84:	str	r6, [sp, #8]
   29f88:	str	lr, [sp, #12]
   29f8c:	mov	r4, r3
   29f90:	ldr	ip, [sp, #16]
   29f94:	cmp	r3, ip
   29f98:	bcs	2a0e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x160>
   29f9c:	mov	r5, r0
   29fa0:	mov	r6, r1
   29fa4:	add	r0, r2, r3
   29fa8:	ldrb	r3, [r2, r3]
   29fac:	cmp	r3, #61	; 0x3d
   29fb0:	beq	2a0f4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x174>
   29fb4:	cmp	r3, #62	; 0x3e
   29fb8:	beq	2a104 <myhtml_tokenizer_state_after_attribute_name@@Base+0x184>
   29fbc:	cmp	r3, #39	; 0x27
   29fc0:	cmpne	r3, #34	; 0x22
   29fc4:	moveq	r2, #1
   29fc8:	movne	r2, #0
   29fcc:	cmp	r3, #60	; 0x3c
   29fd0:	orreq	r2, r2, #1
   29fd4:	cmp	r2, #0
   29fd8:	bne	2a050 <myhtml_tokenizer_state_after_attribute_name@@Base+0xd0>
   29fdc:	sub	r2, r3, #9
   29fe0:	uxtb	r2, r2
   29fe4:	sub	r1, r3, #12
   29fe8:	uxtb	r1, r1
   29fec:	cmp	r2, #1
   29ff0:	cmphi	r1, #1
   29ff4:	movhi	r2, #1
   29ff8:	movls	r2, #0
   29ffc:	cmp	r3, #32
   2a000:	moveq	r3, #0
   2a004:	andne	r3, r2, #1
   2a008:	cmp	r3, #0
   2a00c:	bne	2a190 <myhtml_tokenizer_state_after_attribute_name@@Base+0x210>
   2a010:	add	r4, r4, #1
   2a014:	cmp	ip, r4
   2a018:	beq	2a0e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x160>
   2a01c:	ldrb	r3, [r0, #1]!
   2a020:	cmp	r3, #61	; 0x3d
   2a024:	beq	2a0f4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x174>
   2a028:	cmp	r3, #62	; 0x3e
   2a02c:	beq	2a104 <myhtml_tokenizer_state_after_attribute_name@@Base+0x184>
   2a030:	cmp	r3, #39	; 0x27
   2a034:	cmpne	r3, #34	; 0x22
   2a038:	moveq	r2, #1
   2a03c:	movne	r2, #0
   2a040:	cmp	r3, #60	; 0x3c
   2a044:	orreq	r2, r2, #1
   2a048:	cmp	r2, #0
   2a04c:	beq	29fdc <myhtml_tokenizer_state_after_attribute_name@@Base+0x5c>
   2a050:	ldr	r0, [r5, #8]
   2a054:	ldr	r1, [r0, #16]
   2a058:	bl	10898 <myhtml_token_attr_create@plt>
   2a05c:	str	r0, [r5, #56]	; 0x38
   2a060:	cmp	r0, #0
   2a064:	moveq	r3, #69	; 0x45
   2a068:	streq	r3, [r5, #160]	; 0xa0
   2a06c:	moveq	r4, #0
   2a070:	beq	2a0e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x160>
   2a074:	ldr	r3, [r6, #40]	; 0x28
   2a078:	cmp	r3, #0
   2a07c:	beq	2a174 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f4>
   2a080:	ldr	r3, [r6, #44]	; 0x2c
   2a084:	str	r0, [r3]
   2a088:	ldr	r3, [r6, #44]	; 0x2c
   2a08c:	ldr	r2, [r3]
   2a090:	str	r3, [r2, #4]
   2a094:	ldr	r3, [r3]
   2a098:	str	r3, [r6, #44]	; 0x2c
   2a09c:	mov	r2, #0
   2a0a0:	str	r2, [r3]
   2a0a4:	ldr	r3, [r6, #44]	; 0x2c
   2a0a8:	str	r3, [r5, #56]	; 0x38
   2a0ac:	ldr	r2, [r5, #56]	; 0x38
   2a0b0:	ldr	r3, [r5, #192]	; 0xc0
   2a0b4:	add	r3, r3, r4
   2a0b8:	str	r3, [r2, #48]	; 0x30
   2a0bc:	ldr	r2, [r5, #56]	; 0x38
   2a0c0:	mov	r3, #0
   2a0c4:	str	r3, [r2, #52]	; 0x34
   2a0c8:	ldr	r2, [r5, #56]	; 0x38
   2a0cc:	str	r3, [r2, #56]	; 0x38
   2a0d0:	ldr	r2, [r5, #56]	; 0x38
   2a0d4:	str	r3, [r2, #60]	; 0x3c
   2a0d8:	mov	r3, #34	; 0x22
   2a0dc:	str	r3, [r5, #160]	; 0xa0
   2a0e0:	mov	r0, r4
   2a0e4:	ldrd	r4, [sp]
   2a0e8:	ldr	r6, [sp, #8]
   2a0ec:	add	sp, sp, #12
   2a0f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a0f4:	mov	r3, #36	; 0x24
   2a0f8:	str	r3, [r5, #160]	; 0xa0
   2a0fc:	add	r4, r4, #1
   2a100:	b	2a0e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x160>
   2a104:	mov	r1, r6
   2a108:	mov	r0, r5
   2a10c:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   2a110:	add	r4, r4, #1
   2a114:	ldr	r3, [r5, #192]	; 0xc0
   2a118:	ldr	r2, [r6, #32]
   2a11c:	sub	r3, r3, r2
   2a120:	add	r3, r3, r4
   2a124:	str	r3, [r6, #36]	; 0x24
   2a128:	mov	r2, r6
   2a12c:	mov	r1, r4
   2a130:	mov	r0, r5
   2a134:	bl	ffc8 <myhtml_queue_add@plt>
   2a138:	subs	r6, r0, #0
   2a13c:	beq	2a150 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1d0>
   2a140:	mov	r3, #69	; 0x45
   2a144:	str	r3, [r5, #160]	; 0xa0
   2a148:	mov	r4, #0
   2a14c:	b	2a0e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x160>
   2a150:	ldr	r0, [r5, #8]
   2a154:	ldr	r1, [r0, #16]
   2a158:	bl	10898 <myhtml_token_attr_create@plt>
   2a15c:	str	r0, [r5, #56]	; 0x38
   2a160:	cmp	r0, #0
   2a164:	moveq	r3, #69	; 0x45
   2a168:	streq	r3, [r5, #160]	; 0xa0
   2a16c:	moveq	r4, r6
   2a170:	b	2a0e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x160>
   2a174:	str	r0, [r6, #40]	; 0x28
   2a178:	str	r0, [r6, #44]	; 0x2c
   2a17c:	str	r0, [r5, #56]	; 0x38
   2a180:	str	r3, [r0]
   2a184:	ldr	r2, [r5, #56]	; 0x38
   2a188:	str	r3, [r2, #4]
   2a18c:	b	2a0ac <myhtml_tokenizer_state_after_attribute_name@@Base+0x12c>
   2a190:	ldr	r0, [r5, #8]
   2a194:	ldr	r1, [r0, #16]
   2a198:	bl	10898 <myhtml_token_attr_create@plt>
   2a19c:	str	r0, [r5, #56]	; 0x38
   2a1a0:	cmp	r0, #0
   2a1a4:	moveq	r3, #69	; 0x45
   2a1a8:	streq	r3, [r5, #160]	; 0xa0
   2a1ac:	moveq	r4, #0
   2a1b0:	beq	2a0e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x160>
   2a1b4:	ldr	r3, [r6, #40]	; 0x28
   2a1b8:	cmp	r3, #0
   2a1bc:	beq	2a224 <myhtml_tokenizer_state_after_attribute_name@@Base+0x2a4>
   2a1c0:	ldr	r3, [r6, #44]	; 0x2c
   2a1c4:	str	r0, [r3]
   2a1c8:	ldr	r3, [r6, #44]	; 0x2c
   2a1cc:	ldr	r2, [r3]
   2a1d0:	str	r3, [r2, #4]
   2a1d4:	ldr	r3, [r3]
   2a1d8:	str	r3, [r6, #44]	; 0x2c
   2a1dc:	mov	r2, #0
   2a1e0:	str	r2, [r3]
   2a1e4:	ldr	r3, [r6, #44]	; 0x2c
   2a1e8:	str	r3, [r5, #56]	; 0x38
   2a1ec:	ldr	r2, [r5, #56]	; 0x38
   2a1f0:	ldr	r3, [r5, #192]	; 0xc0
   2a1f4:	add	r3, r3, r4
   2a1f8:	str	r3, [r2, #48]	; 0x30
   2a1fc:	ldr	r2, [r5, #56]	; 0x38
   2a200:	mov	r3, #0
   2a204:	str	r3, [r2, #52]	; 0x34
   2a208:	ldr	r2, [r5, #56]	; 0x38
   2a20c:	str	r3, [r2, #56]	; 0x38
   2a210:	ldr	r2, [r5, #56]	; 0x38
   2a214:	str	r3, [r2, #60]	; 0x3c
   2a218:	mov	r3, #34	; 0x22
   2a21c:	str	r3, [r5, #160]	; 0xa0
   2a220:	b	2a0e0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x160>
   2a224:	str	r0, [r6, #40]	; 0x28
   2a228:	str	r0, [r6, #44]	; 0x2c
   2a22c:	str	r0, [r5, #56]	; 0x38
   2a230:	str	r3, [r0]
   2a234:	ldr	r2, [r5, #56]	; 0x38
   2a238:	str	r3, [r2, #4]
   2a23c:	b	2a1ec <myhtml_tokenizer_state_after_attribute_name@@Base+0x26c>

0002a240 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   2a240:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a244:	strd	r6, [sp, #8]
   2a248:	str	r8, [sp, #16]
   2a24c:	str	lr, [sp, #20]
   2a250:	ldr	r6, [sp, #24]
   2a254:	cmp	r3, r6
   2a258:	bcs	2a3c4 <myhtml_tokenizer_state_before_attribute_value@@Base+0x184>
   2a25c:	add	lr, r2, r3
   2a260:	ldrb	ip, [r2, r3]
   2a264:	cmp	ip, #62	; 0x3e
   2a268:	beq	2a334 <myhtml_tokenizer_state_before_attribute_value@@Base+0xf4>
   2a26c:	sub	r4, ip, #9
   2a270:	uxtb	r4, r4
   2a274:	sub	r5, ip, #12
   2a278:	uxtb	r5, r5
   2a27c:	cmp	r4, #1
   2a280:	cmphi	r5, #1
   2a284:	movhi	r4, #1
   2a288:	movls	r4, #0
   2a28c:	cmp	ip, #32
   2a290:	moveq	r4, #0
   2a294:	andne	r4, r4, #1
   2a298:	cmp	r4, #0
   2a29c:	subeq	r7, r2, #1
   2a2a0:	addeq	r7, r7, r6
   2a2a4:	rsbeq	r6, r2, #1
   2a2a8:	bne	2a3bc <myhtml_tokenizer_state_before_attribute_value@@Base+0x17c>
   2a2ac:	add	r5, r6, lr
   2a2b0:	cmp	r7, lr
   2a2b4:	beq	2a380 <myhtml_tokenizer_state_before_attribute_value@@Base+0x140>
   2a2b8:	ldrb	ip, [lr, #1]!
   2a2bc:	cmp	ip, #62	; 0x3e
   2a2c0:	beq	2a338 <myhtml_tokenizer_state_before_attribute_value@@Base+0xf8>
   2a2c4:	sub	r3, ip, #9
   2a2c8:	uxtb	r3, r3
   2a2cc:	sub	r4, ip, #12
   2a2d0:	uxtb	r4, r4
   2a2d4:	cmp	r3, #1
   2a2d8:	cmphi	r4, #1
   2a2dc:	movhi	r3, #1
   2a2e0:	movls	r3, #0
   2a2e4:	cmp	ip, #32
   2a2e8:	moveq	r3, #0
   2a2ec:	andne	r3, r3, #1
   2a2f0:	cmp	r3, #0
   2a2f4:	beq	2a2ac <myhtml_tokenizer_state_before_attribute_value@@Base+0x6c>
   2a2f8:	cmp	ip, #34	; 0x22
   2a2fc:	addeq	r5, r5, #1
   2a300:	moveq	r3, #37	; 0x25
   2a304:	streq	r3, [r0, #160]	; 0xa0
   2a308:	beq	2a320 <myhtml_tokenizer_state_before_attribute_value@@Base+0xe0>
   2a30c:	cmp	ip, #39	; 0x27
   2a310:	addeq	r5, r5, #1
   2a314:	moveq	r3, #38	; 0x26
   2a318:	movne	r3, #39	; 0x27
   2a31c:	str	r3, [r0, #160]	; 0xa0
   2a320:	ldr	r2, [r0, #56]	; 0x38
   2a324:	ldr	r3, [r0, #192]	; 0xc0
   2a328:	add	r3, r3, r5
   2a32c:	str	r3, [r2, #56]	; 0x38
   2a330:	b	2a380 <myhtml_tokenizer_state_before_attribute_value@@Base+0x140>
   2a334:	mov	r5, r3
   2a338:	mov	r6, r1
   2a33c:	mov	r4, r0
   2a340:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   2a344:	add	r5, r5, #1
   2a348:	ldr	r3, [r4, #192]	; 0xc0
   2a34c:	ldr	r2, [r6, #32]
   2a350:	sub	r3, r3, r2
   2a354:	add	r3, r3, r5
   2a358:	str	r3, [r6, #36]	; 0x24
   2a35c:	mov	r2, r6
   2a360:	mov	r1, r5
   2a364:	mov	r0, r4
   2a368:	bl	ffc8 <myhtml_queue_add@plt>
   2a36c:	subs	r6, r0, #0
   2a370:	beq	2a398 <myhtml_tokenizer_state_before_attribute_value@@Base+0x158>
   2a374:	mov	r3, #69	; 0x45
   2a378:	str	r3, [r4, #160]	; 0xa0
   2a37c:	mov	r5, #0
   2a380:	mov	r0, r5
   2a384:	ldrd	r4, [sp]
   2a388:	ldrd	r6, [sp, #8]
   2a38c:	ldr	r8, [sp, #16]
   2a390:	add	sp, sp, #20
   2a394:	pop	{pc}		; (ldr pc, [sp], #4)
   2a398:	ldr	r0, [r4, #8]
   2a39c:	ldr	r1, [r0, #16]
   2a3a0:	bl	10898 <myhtml_token_attr_create@plt>
   2a3a4:	str	r0, [r4, #56]	; 0x38
   2a3a8:	cmp	r0, #0
   2a3ac:	moveq	r3, #69	; 0x45
   2a3b0:	streq	r3, [r4, #160]	; 0xa0
   2a3b4:	moveq	r5, r6
   2a3b8:	b	2a380 <myhtml_tokenizer_state_before_attribute_value@@Base+0x140>
   2a3bc:	mov	r5, r3
   2a3c0:	b	2a2f8 <myhtml_tokenizer_state_before_attribute_value@@Base+0xb8>
   2a3c4:	mov	r5, r3
   2a3c8:	b	2a380 <myhtml_tokenizer_state_before_attribute_value@@Base+0x140>

0002a3cc <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   2a3cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a3d0:	strd	r6, [sp, #8]
   2a3d4:	str	r8, [sp, #16]
   2a3d8:	str	lr, [sp, #20]
   2a3dc:	ldr	r7, [sp, #24]
   2a3e0:	cmp	r3, r7
   2a3e4:	bcs	2a574 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1a8>
   2a3e8:	mov	r6, r1
   2a3ec:	mov	r5, r0
   2a3f0:	add	r1, r2, r3
   2a3f4:	ldrb	ip, [r2, r3]
   2a3f8:	sub	r0, ip, #9
   2a3fc:	uxtb	r0, r0
   2a400:	sub	r4, ip, #12
   2a404:	uxtb	r4, r4
   2a408:	cmp	r4, #1
   2a40c:	cmphi	r0, #1
   2a410:	movls	r0, #1
   2a414:	movhi	r0, #0
   2a418:	cmp	ip, #32
   2a41c:	orreq	r0, r0, #1
   2a420:	cmp	r0, #0
   2a424:	bne	2a4e8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x11c>
   2a428:	cmp	ip, #62	; 0x3e
   2a42c:	subne	lr, r2, #1
   2a430:	addne	lr, lr, r7
   2a434:	rsbne	ip, r2, #1
   2a438:	beq	2a548 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x17c>
   2a43c:	add	r4, ip, r1
   2a440:	cmp	lr, r1
   2a444:	beq	2a530 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x164>
   2a448:	ldrb	r2, [r1, #1]!
   2a44c:	sub	r3, r2, #9
   2a450:	uxtb	r3, r3
   2a454:	sub	r0, r2, #12
   2a458:	uxtb	r0, r0
   2a45c:	cmp	r0, #1
   2a460:	cmphi	r3, #1
   2a464:	movls	r3, #1
   2a468:	movhi	r3, #0
   2a46c:	cmp	r2, #32
   2a470:	orreq	r3, r3, #1
   2a474:	cmp	r3, #0
   2a478:	bne	2a4ec <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x120>
   2a47c:	cmp	r2, #62	; 0x3e
   2a480:	bne	2a43c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x70>
   2a484:	ldr	r2, [r5, #56]	; 0x38
   2a488:	ldr	r3, [r5, #192]	; 0xc0
   2a48c:	ldr	r1, [r2, #56]	; 0x38
   2a490:	sub	r3, r3, r1
   2a494:	add	r3, r3, r4
   2a498:	str	r3, [r2, #60]	; 0x3c
   2a49c:	mov	r1, r6
   2a4a0:	mov	r0, r5
   2a4a4:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   2a4a8:	add	r4, r4, #1
   2a4ac:	ldr	r3, [r5, #192]	; 0xc0
   2a4b0:	ldr	r2, [r6, #32]
   2a4b4:	sub	r3, r3, r2
   2a4b8:	add	r3, r3, r4
   2a4bc:	str	r3, [r6, #36]	; 0x24
   2a4c0:	mov	r2, r6
   2a4c4:	mov	r1, r4
   2a4c8:	mov	r0, r5
   2a4cc:	bl	ffc8 <myhtml_queue_add@plt>
   2a4d0:	subs	r6, r0, #0
   2a4d4:	beq	2a550 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x184>
   2a4d8:	mov	r3, #69	; 0x45
   2a4dc:	str	r3, [r5, #160]	; 0xa0
   2a4e0:	mov	r4, #0
   2a4e4:	b	2a530 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x164>
   2a4e8:	mov	r4, r3
   2a4ec:	mov	r3, #33	; 0x21
   2a4f0:	str	r3, [r5, #160]	; 0xa0
   2a4f4:	ldr	r2, [r5, #56]	; 0x38
   2a4f8:	ldr	r3, [r5, #192]	; 0xc0
   2a4fc:	ldr	r1, [r2, #56]	; 0x38
   2a500:	sub	r3, r3, r1
   2a504:	add	r3, r3, r4
   2a508:	str	r3, [r2, #60]	; 0x3c
   2a50c:	ldr	r0, [r5, #8]
   2a510:	ldr	r1, [r0, #16]
   2a514:	bl	10898 <myhtml_token_attr_create@plt>
   2a518:	str	r0, [r5, #56]	; 0x38
   2a51c:	cmp	r0, #0
   2a520:	moveq	r3, #69	; 0x45
   2a524:	streq	r3, [r5, #160]	; 0xa0
   2a528:	moveq	r4, #0
   2a52c:	addne	r4, r4, #1
   2a530:	mov	r0, r4
   2a534:	ldrd	r4, [sp]
   2a538:	ldrd	r6, [sp, #8]
   2a53c:	ldr	r8, [sp, #16]
   2a540:	add	sp, sp, #20
   2a544:	pop	{pc}		; (ldr pc, [sp], #4)
   2a548:	mov	r4, r3
   2a54c:	b	2a484 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xb8>
   2a550:	ldr	r0, [r5, #8]
   2a554:	ldr	r1, [r0, #16]
   2a558:	bl	10898 <myhtml_token_attr_create@plt>
   2a55c:	str	r0, [r5, #56]	; 0x38
   2a560:	cmp	r0, #0
   2a564:	moveq	r3, #69	; 0x45
   2a568:	streq	r3, [r5, #160]	; 0xa0
   2a56c:	moveq	r4, r6
   2a570:	b	2a530 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x164>
   2a574:	mov	r4, r3
   2a578:	b	2a530 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x164>

0002a57c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   2a57c:	strd	r4, [sp, #-16]!
   2a580:	str	r6, [sp, #8]
   2a584:	str	lr, [sp, #12]
   2a588:	ldrb	lr, [r2, r3]
   2a58c:	sub	ip, lr, #9
   2a590:	uxtb	ip, ip
   2a594:	sub	r4, lr, #12
   2a598:	uxtb	r4, r4
   2a59c:	cmp	r4, #1
   2a5a0:	cmphi	ip, #1
   2a5a4:	movls	ip, #1
   2a5a8:	movhi	ip, #0
   2a5ac:	cmp	lr, #32
   2a5b0:	orreq	ip, ip, #1
   2a5b4:	cmp	ip, #0
   2a5b8:	beq	2a5dc <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x60>
   2a5bc:	mov	r2, #33	; 0x21
   2a5c0:	str	r2, [r0, #160]	; 0xa0
   2a5c4:	add	r4, r3, #1
   2a5c8:	mov	r0, r4
   2a5cc:	ldrd	r4, [sp]
   2a5d0:	ldr	r6, [sp, #8]
   2a5d4:	add	sp, sp, #12
   2a5d8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a5dc:	cmp	lr, #47	; 0x2f
   2a5e0:	moveq	r2, #42	; 0x2a
   2a5e4:	streq	r2, [r0, #160]	; 0xa0
   2a5e8:	addeq	r4, r3, #1
   2a5ec:	beq	2a5c8 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>
   2a5f0:	cmp	lr, #62	; 0x3e
   2a5f4:	movne	r2, #33	; 0x21
   2a5f8:	strne	r2, [r0, #160]	; 0xa0
   2a5fc:	movne	r4, r3
   2a600:	bne	2a5c8 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>
   2a604:	mov	r4, r3
   2a608:	mov	r5, r1
   2a60c:	mov	r6, r0
   2a610:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   2a614:	add	r4, r4, #1
   2a618:	ldr	r3, [r6, #192]	; 0xc0
   2a61c:	ldr	r2, [r5, #32]
   2a620:	sub	r3, r3, r2
   2a624:	add	r3, r3, r4
   2a628:	str	r3, [r5, #36]	; 0x24
   2a62c:	mov	r2, r5
   2a630:	mov	r1, r4
   2a634:	mov	r0, r6
   2a638:	bl	ffc8 <myhtml_queue_add@plt>
   2a63c:	cmp	r0, #0
   2a640:	movne	r3, #69	; 0x45
   2a644:	strne	r3, [r6, #160]	; 0xa0
   2a648:	movne	r4, #0
   2a64c:	b	2a5c8 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x4c>

0002a650 <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   2a650:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2a654:	strd	r6, [sp, #8]
   2a658:	strd	r8, [sp, #16]
   2a65c:	str	sl, [sp, #24]
   2a660:	str	lr, [sp, #28]
   2a664:	mov	r5, r0
   2a668:	mov	r4, r1
   2a66c:	mov	r6, r3
   2a670:	ldr	r7, [sp, #32]
   2a674:	ldr	r3, [r0, #192]	; 0xc0
   2a678:	ldr	ip, [r1, #24]
   2a67c:	sub	r3, r3, ip
   2a680:	ldr	ip, [r6]
   2a684:	add	r3, r3, ip
   2a688:	str	r3, [r1, #28]
   2a68c:	ldr	r3, [r6]
   2a690:	bl	10bd4 <myhtml_check_tag_parser@plt>
   2a694:	ldr	r2, [r4]
   2a698:	ldr	r3, [r5, #60]	; 0x3c
   2a69c:	cmp	r2, r3
   2a6a0:	beq	2a6dc <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x8c>
   2a6a4:	str	r7, [r4, #24]
   2a6a8:	mov	r0, #0
   2a6ac:	str	r0, [r4, #28]
   2a6b0:	mov	r3, #2
   2a6b4:	str	r3, [r5, #160]	; 0xa0
   2a6b8:	ldr	r3, [r6]
   2a6bc:	add	r3, r3, #1
   2a6c0:	str	r3, [r6]
   2a6c4:	ldrd	r4, [sp]
   2a6c8:	ldrd	r6, [sp, #8]
   2a6cc:	ldrd	r8, [sp, #16]
   2a6d0:	ldr	sl, [sp, #24]
   2a6d4:	add	sp, sp, #28
   2a6d8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a6dc:	ldr	r8, [r4, #24]
   2a6e0:	sub	r3, r8, #2
   2a6e4:	cmp	r3, r7
   2a6e8:	bhi	2a720 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xd0>
   2a6ec:	ldr	r3, [r5, #60]	; 0x3c
   2a6f0:	str	r3, [r4]
   2a6f4:	ldr	r3, [r4, #48]	; 0x30
   2a6f8:	orr	r3, r3, #1
   2a6fc:	str	r3, [r4, #48]	; 0x30
   2a700:	ldr	r3, [r5, #192]	; 0xc0
   2a704:	ldr	r2, [r6]
   2a708:	add	r3, r3, r2
   2a70c:	ldr	r2, [r4, #24]
   2a710:	sub	r3, r3, r2
   2a714:	str	r3, [r4, #28]
   2a718:	mov	r0, #1
   2a71c:	b	2a6c4 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x74>
   2a720:	ldr	r9, [r4, #32]
   2a724:	sub	r3, r8, r7
   2a728:	sub	r3, r3, #2
   2a72c:	str	r3, [r4, #28]
   2a730:	str	r7, [r4, #24]
   2a734:	str	r7, [r4, #32]
   2a738:	str	r3, [r4, #36]	; 0x24
   2a73c:	ldr	r3, [r4, #48]	; 0x30
   2a740:	ldr	r2, [sp, #36]	; 0x24
   2a744:	orr	r3, r3, r2
   2a748:	str	r3, [r4, #48]	; 0x30
   2a74c:	ldr	r3, [r4, #48]	; 0x30
   2a750:	ldr	r2, [r4, #48]	; 0x30
   2a754:	and	r3, r3, #8
   2a758:	eor	r3, r3, r2
   2a75c:	str	r3, [r4, #48]	; 0x30
   2a760:	mov	r3, #1
   2a764:	str	r3, [r4]
   2a768:	mov	r2, r4
   2a76c:	ldr	r1, [r6]
   2a770:	mov	r0, r5
   2a774:	bl	ffc8 <myhtml_queue_add@plt>
   2a778:	ldr	r4, [r5, #64]	; 0x40
   2a77c:	str	r9, [r4, #32]
   2a780:	str	r8, [r4, #24]
   2a784:	b	2a6ec <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x9c>

0002a788 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   2a788:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a78c:	strd	r6, [sp, #8]
   2a790:	str	r8, [sp, #16]
   2a794:	str	lr, [sp, #20]
   2a798:	sub	sp, sp, #16
   2a79c:	mov	r4, r1
   2a7a0:	str	r3, [sp, #12]
   2a7a4:	ldr	ip, [sp, #40]	; 0x28
   2a7a8:	ldr	r6, [r1, #24]
   2a7ac:	ldr	r1, [r0, #192]	; 0xc0
   2a7b0:	add	r1, r1, r3
   2a7b4:	str	r1, [r4, #24]
   2a7b8:	cmp	r3, ip
   2a7bc:	bcs	2a850 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc8>
   2a7c0:	mov	r5, r0
   2a7c4:	add	r1, r2, r3
   2a7c8:	ldrb	r3, [r2, r3]
   2a7cc:	ldr	r0, [pc, #428]	; 2a980 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1f8>
   2a7d0:	add	r0, pc, r0
   2a7d4:	ldrb	r0, [r0, r3]
   2a7d8:	cmp	r0, #2
   2a7dc:	beq	2a874 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xec>
   2a7e0:	cmp	r3, #62	; 0x3e
   2a7e4:	beq	2a8b8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x130>
   2a7e8:	cmp	r3, #47	; 0x2f
   2a7ec:	beq	2a938 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b0>
   2a7f0:	cmp	r0, #1
   2a7f4:	bne	2a848 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   2a7f8:	mov	r3, r1
   2a7fc:	add	ip, ip, r2
   2a800:	sub	ip, ip, #1
   2a804:	rsb	lr, r2, #1
   2a808:	ldr	r8, [pc, #372]	; 2a984 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1fc>
   2a80c:	add	r8, pc, r8
   2a810:	add	r7, lr, r3
   2a814:	cmp	r3, ip
   2a818:	beq	2a978 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1f0>
   2a81c:	ldrb	r1, [r3, #1]!
   2a820:	ldrb	r0, [r8, r1]
   2a824:	cmp	r0, #2
   2a828:	beq	2a870 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xe8>
   2a82c:	cmp	r1, #62	; 0x3e
   2a830:	beq	2a8b4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x12c>
   2a834:	cmp	r1, #47	; 0x2f
   2a838:	beq	2a934 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1ac>
   2a83c:	cmp	r0, #1
   2a840:	beq	2a810 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x88>
   2a844:	str	r7, [sp, #12]
   2a848:	mov	r3, #2
   2a84c:	str	r3, [r5, #160]	; 0xa0
   2a850:	str	r6, [r4, #24]
   2a854:	ldr	r0, [sp, #12]
   2a858:	add	sp, sp, #16
   2a85c:	ldrd	r4, [sp]
   2a860:	ldrd	r6, [sp, #8]
   2a864:	ldr	r8, [sp, #16]
   2a868:	add	sp, sp, #20
   2a86c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a870:	str	r7, [sp, #12]
   2a874:	mov	r3, #16
   2a878:	str	r3, [sp, #4]
   2a87c:	str	r6, [sp]
   2a880:	add	r3, sp, #12
   2a884:	mov	r1, r4
   2a888:	mov	r0, r5
   2a88c:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2a890:	cmp	r0, #0
   2a894:	beq	2a850 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc8>
   2a898:	mov	r3, #33	; 0x21
   2a89c:	str	r3, [r5, #160]	; 0xa0
   2a8a0:	mov	r3, #0
   2a8a4:	str	r3, [r5, #60]	; 0x3c
   2a8a8:	ldr	r0, [sp, #12]
   2a8ac:	add	r0, r0, #1
   2a8b0:	b	2a858 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xd0>
   2a8b4:	str	r7, [sp, #12]
   2a8b8:	mov	r3, #16
   2a8bc:	str	r3, [sp, #4]
   2a8c0:	str	r6, [sp]
   2a8c4:	add	r3, sp, #12
   2a8c8:	mov	r1, r4
   2a8cc:	mov	r0, r5
   2a8d0:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2a8d4:	cmp	r0, #0
   2a8d8:	beq	2a850 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc8>
   2a8dc:	ldr	r1, [sp, #12]
   2a8e0:	add	r1, r1, #1
   2a8e4:	str	r1, [sp, #12]
   2a8e8:	ldr	r2, [r5, #64]	; 0x40
   2a8ec:	ldr	r3, [r5, #192]	; 0xc0
   2a8f0:	add	r3, r1, r3
   2a8f4:	ldr	r0, [r2, #32]
   2a8f8:	sub	r3, r3, r0
   2a8fc:	str	r3, [r2, #36]	; 0x24
   2a900:	mov	r0, r5
   2a904:	bl	ffc8 <myhtml_queue_add@plt>
   2a908:	cmp	r0, #0
   2a90c:	beq	2a920 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x198>
   2a910:	mov	r3, #69	; 0x45
   2a914:	str	r3, [r5, #160]	; 0xa0
   2a918:	mov	r0, #0
   2a91c:	b	2a858 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xd0>
   2a920:	mov	r3, #0
   2a924:	str	r3, [r5, #60]	; 0x3c
   2a928:	str	r3, [r5, #160]	; 0xa0
   2a92c:	ldr	r0, [sp, #12]
   2a930:	b	2a858 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xd0>
   2a934:	str	r7, [sp, #12]
   2a938:	mov	r3, #16
   2a93c:	str	r3, [sp, #4]
   2a940:	str	r6, [sp]
   2a944:	add	r3, sp, #12
   2a948:	mov	r1, r4
   2a94c:	mov	r0, r5
   2a950:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2a954:	cmp	r0, #0
   2a958:	beq	2a850 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc8>
   2a95c:	mov	r3, #33	; 0x21
   2a960:	str	r3, [r5, #160]	; 0xa0
   2a964:	mov	r3, #0
   2a968:	str	r3, [r5, #60]	; 0x3c
   2a96c:	ldr	r0, [sp, #12]
   2a970:	add	r0, r0, #1
   2a974:	b	2a858 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xd0>
   2a978:	str	r7, [sp, #12]
   2a97c:	b	2a850 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc8>
   2a980:	andeq	r6, sp, r8, lsl pc
   2a984:	ldrdeq	r6, [sp], -ip

0002a988 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   2a988:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2a98c:	strd	r6, [sp, #8]
   2a990:	str	r8, [sp, #16]
   2a994:	str	lr, [sp, #20]
   2a998:	sub	sp, sp, #16
   2a99c:	mov	r5, r0
   2a9a0:	str	r3, [sp, #12]
   2a9a4:	ldr	r0, [sp, #40]	; 0x28
   2a9a8:	ldr	r7, [r1, #24]
   2a9ac:	ldr	ip, [r5, #192]	; 0xc0
   2a9b0:	add	ip, ip, r3
   2a9b4:	str	ip, [r1, #24]
   2a9b8:	cmp	r3, r0
   2a9bc:	bcs	2ab5c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d4>
   2a9c0:	add	ip, r2, r3
   2a9c4:	ldrb	lr, [r2, r3]
   2a9c8:	ldr	r4, [pc, #428]	; 2ab7c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1f4>
   2a9cc:	add	r4, pc, r4
   2a9d0:	ldrb	r4, [r4, lr]
   2a9d4:	cmp	r4, #2
   2a9d8:	beq	2aa50 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc8>
   2a9dc:	cmp	lr, #62	; 0x3e
   2a9e0:	beq	2aa98 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x110>
   2a9e4:	cmp	lr, #47	; 0x2f
   2a9e8:	beq	2ab18 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x190>
   2a9ec:	cmp	r4, #1
   2a9f0:	bne	2aa3c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb4>
   2a9f4:	add	r0, r0, r2
   2a9f8:	sub	r0, r0, #1
   2a9fc:	rsb	r6, r2, #1
   2aa00:	ldr	r8, [pc, #376]	; 2ab80 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1f8>
   2aa04:	add	r8, pc, r8
   2aa08:	add	r3, r6, ip
   2aa0c:	cmp	ip, r0
   2aa10:	beq	2ab5c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d4>
   2aa14:	ldrb	lr, [ip, #1]!
   2aa18:	ldrb	r4, [r8, lr]
   2aa1c:	cmp	r4, #2
   2aa20:	beq	2aa4c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc4>
   2aa24:	cmp	lr, #62	; 0x3e
   2aa28:	beq	2aa94 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x10c>
   2aa2c:	cmp	lr, #47	; 0x2f
   2aa30:	beq	2ab14 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x18c>
   2aa34:	cmp	r4, #1
   2aa38:	beq	2aa08 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x80>
   2aa3c:	str	r7, [r1, #24]
   2aa40:	mov	r2, #4
   2aa44:	str	r2, [r5, #160]	; 0xa0
   2aa48:	b	2ab60 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d8>
   2aa4c:	str	r3, [sp, #12]
   2aa50:	mov	r3, #32
   2aa54:	str	r3, [sp, #4]
   2aa58:	str	r7, [sp]
   2aa5c:	add	r3, sp, #12
   2aa60:	mov	r0, r5
   2aa64:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2aa68:	cmp	r0, #0
   2aa6c:	beq	2aa8c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x104>
   2aa70:	mov	r3, #33	; 0x21
   2aa74:	str	r3, [r5, #160]	; 0xa0
   2aa78:	mov	r3, #0
   2aa7c:	str	r3, [r5, #60]	; 0x3c
   2aa80:	ldr	r3, [sp, #12]
   2aa84:	add	r3, r3, #1
   2aa88:	str	r3, [sp, #12]
   2aa8c:	ldr	r3, [sp, #12]
   2aa90:	b	2ab60 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d8>
   2aa94:	str	r3, [sp, #12]
   2aa98:	mov	r3, #32
   2aa9c:	str	r3, [sp, #4]
   2aaa0:	str	r7, [sp]
   2aaa4:	add	r3, sp, #12
   2aaa8:	mov	r0, r5
   2aaac:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2aab0:	cmp	r0, #0
   2aab4:	bne	2aac0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x138>
   2aab8:	ldr	r3, [sp, #12]
   2aabc:	b	2ab60 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d8>
   2aac0:	ldr	r1, [sp, #12]
   2aac4:	add	r1, r1, #1
   2aac8:	str	r1, [sp, #12]
   2aacc:	ldr	r2, [r5, #64]	; 0x40
   2aad0:	ldr	r3, [r5, #192]	; 0xc0
   2aad4:	add	r3, r1, r3
   2aad8:	ldr	r0, [r2, #32]
   2aadc:	sub	r3, r3, r0
   2aae0:	str	r3, [r2, #36]	; 0x24
   2aae4:	mov	r0, r5
   2aae8:	bl	ffc8 <myhtml_queue_add@plt>
   2aaec:	cmp	r0, #0
   2aaf0:	beq	2ab04 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x17c>
   2aaf4:	mov	r3, #69	; 0x45
   2aaf8:	str	r3, [r5, #160]	; 0xa0
   2aafc:	mov	r3, #0
   2ab00:	b	2ab60 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d8>
   2ab04:	mov	r3, #0
   2ab08:	str	r3, [r5, #60]	; 0x3c
   2ab0c:	str	r3, [r5, #160]	; 0xa0
   2ab10:	b	2aab8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x130>
   2ab14:	str	r3, [sp, #12]
   2ab18:	mov	r3, #32
   2ab1c:	str	r3, [sp, #4]
   2ab20:	str	r7, [sp]
   2ab24:	add	r3, sp, #12
   2ab28:	mov	r0, r5
   2ab2c:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2ab30:	cmp	r0, #0
   2ab34:	beq	2ab54 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1cc>
   2ab38:	mov	r3, #33	; 0x21
   2ab3c:	str	r3, [r5, #160]	; 0xa0
   2ab40:	mov	r3, #0
   2ab44:	str	r3, [r5, #60]	; 0x3c
   2ab48:	ldr	r3, [sp, #12]
   2ab4c:	add	r3, r3, #1
   2ab50:	str	r3, [sp, #12]
   2ab54:	ldr	r3, [sp, #12]
   2ab58:	b	2ab60 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d8>
   2ab5c:	str	r7, [r1, #24]
   2ab60:	mov	r0, r3
   2ab64:	add	sp, sp, #16
   2ab68:	ldrd	r4, [sp]
   2ab6c:	ldrd	r6, [sp, #8]
   2ab70:	ldr	r8, [sp, #16]
   2ab74:	add	sp, sp, #20
   2ab78:	pop	{pc}		; (ldr pc, [sp], #4)
   2ab7c:	andeq	r6, sp, ip, lsl sp
   2ab80:	andeq	r6, sp, r4, ror #25

0002ab84 <myhtml_tokenizer_state_init@@Base>:
   2ab84:	strd	r4, [sp, #-16]!
   2ab88:	str	r6, [sp, #8]
   2ab8c:	str	lr, [sp, #12]
   2ab90:	mov	r5, r0
   2ab94:	ldr	r4, [pc, #2060]	; 2b3a8 <myhtml_tokenizer_state_init@@Base+0x824>
   2ab98:	add	r4, pc, r4
   2ab9c:	movw	r0, #19604	; 0x4c94
   2aba0:	bl	10c28 <mycore_malloc@plt>
   2aba4:	str	r0, [r5, #24]
   2aba8:	cmp	r0, #0
   2abac:	beq	2b3a0 <myhtml_tokenizer_state_init@@Base+0x81c>
   2abb0:	ldr	r3, [pc, #2036]	; 2b3ac <myhtml_tokenizer_state_init@@Base+0x828>
   2abb4:	ldr	r3, [r4, r3]
   2abb8:	str	r3, [r0]
   2abbc:	ldr	r3, [r5, #24]
   2abc0:	ldr	r2, [pc, #2024]	; 2b3b0 <myhtml_tokenizer_state_init@@Base+0x82c>
   2abc4:	ldr	r2, [r4, r2]
   2abc8:	str	r2, [r3, #28]
   2abcc:	ldr	r3, [r5, #24]
   2abd0:	ldr	r2, [pc, #2012]	; 2b3b4 <myhtml_tokenizer_state_init@@Base+0x830>
   2abd4:	ldr	r2, [r4, r2]
   2abd8:	str	r2, [r3, #36]	; 0x24
   2abdc:	ldr	r3, [r5, #24]
   2abe0:	ldr	r2, [pc, #2000]	; 2b3b8 <myhtml_tokenizer_state_init@@Base+0x834>
   2abe4:	ldr	r2, [r4, r2]
   2abe8:	str	r2, [r3, #32]
   2abec:	ldr	r3, [r5, #24]
   2abf0:	ldr	r2, [pc, #1988]	; 2b3bc <myhtml_tokenizer_state_init@@Base+0x838>
   2abf4:	ldr	r2, [r4, r2]
   2abf8:	str	r2, [r3, #168]	; 0xa8
   2abfc:	ldr	r3, [r5, #24]
   2ac00:	ldr	r2, [pc, #1976]	; 2b3c0 <myhtml_tokenizer_state_init@@Base+0x83c>
   2ac04:	ldr	r2, [r4, r2]
   2ac08:	str	r2, [r3, #176]	; 0xb0
   2ac0c:	ldr	r3, [r5, #24]
   2ac10:	ldr	r2, [pc, #1964]	; 2b3c4 <myhtml_tokenizer_state_init@@Base+0x840>
   2ac14:	ldr	r2, [r4, r2]
   2ac18:	str	r2, [r3, #132]	; 0x84
   2ac1c:	ldr	r3, [r5, #24]
   2ac20:	ldr	r2, [pc, #1952]	; 2b3c8 <myhtml_tokenizer_state_init@@Base+0x844>
   2ac24:	ldr	r2, [r4, r2]
   2ac28:	str	r2, [r3, #136]	; 0x88
   2ac2c:	ldr	r3, [r5, #24]
   2ac30:	ldr	r2, [pc, #1940]	; 2b3cc <myhtml_tokenizer_state_init@@Base+0x848>
   2ac34:	ldr	r2, [r4, r2]
   2ac38:	str	r2, [r3, #140]	; 0x8c
   2ac3c:	ldr	r3, [r5, #24]
   2ac40:	ldr	r2, [pc, #1928]	; 2b3d0 <myhtml_tokenizer_state_init@@Base+0x84c>
   2ac44:	ldr	r2, [r4, r2]
   2ac48:	str	r2, [r3, #144]	; 0x90
   2ac4c:	ldr	r3, [r5, #24]
   2ac50:	ldr	r2, [pc, #1916]	; 2b3d4 <myhtml_tokenizer_state_init@@Base+0x850>
   2ac54:	ldr	r2, [r4, r2]
   2ac58:	str	r2, [r3, #164]	; 0xa4
   2ac5c:	ldr	r3, [r5, #24]
   2ac60:	ldr	r2, [pc, #1904]	; 2b3d8 <myhtml_tokenizer_state_init@@Base+0x854>
   2ac64:	ldr	r2, [r4, r2]
   2ac68:	str	r2, [r3, #148]	; 0x94
   2ac6c:	ldr	r3, [r5, #24]
   2ac70:	ldr	r2, [pc, #1892]	; 2b3dc <myhtml_tokenizer_state_init@@Base+0x858>
   2ac74:	ldr	r2, [r4, r2]
   2ac78:	str	r2, [r3, #152]	; 0x98
   2ac7c:	ldr	r3, [r5, #24]
   2ac80:	ldr	r2, [pc, #1880]	; 2b3e0 <myhtml_tokenizer_state_init@@Base+0x85c>
   2ac84:	ldr	r2, [r4, r2]
   2ac88:	str	r2, [r3, #156]	; 0x9c
   2ac8c:	ldr	r3, [r5, #24]
   2ac90:	ldr	r2, [pc, #1868]	; 2b3e4 <myhtml_tokenizer_state_init@@Base+0x860>
   2ac94:	ldr	r2, [r4, r2]
   2ac98:	str	r2, [r3, #180]	; 0xb4
   2ac9c:	ldr	r3, [r5, #24]
   2aca0:	ldr	r2, [pc, #1856]	; 2b3e8 <myhtml_tokenizer_state_init@@Base+0x864>
   2aca4:	ldr	r2, [r4, r2]
   2aca8:	str	r2, [r3, #184]	; 0xb8
   2acac:	ldr	r3, [r5, #24]
   2acb0:	ldr	r2, [pc, #1844]	; 2b3ec <myhtml_tokenizer_state_init@@Base+0x868>
   2acb4:	ldr	r2, [r4, r2]
   2acb8:	str	r2, [r3, #188]	; 0xbc
   2acbc:	ldr	r3, [r5, #24]
   2acc0:	ldr	r2, [pc, #1832]	; 2b3f0 <myhtml_tokenizer_state_init@@Base+0x86c>
   2acc4:	ldr	r2, [r4, r2]
   2acc8:	str	r2, [r3, #196]	; 0xc4
   2accc:	ldr	r3, [r5, #24]
   2acd0:	ldr	r2, [pc, #1820]	; 2b3f4 <myhtml_tokenizer_state_init@@Base+0x870>
   2acd4:	ldr	r2, [r4, r2]
   2acd8:	str	r2, [r3, #192]	; 0xc0
   2acdc:	ldr	r3, [r5, #24]
   2ace0:	ldr	r2, [pc, #1808]	; 2b3f8 <myhtml_tokenizer_state_init@@Base+0x874>
   2ace4:	ldr	r2, [r4, r2]
   2ace8:	str	r2, [r3, #200]	; 0xc8
   2acec:	ldr	r3, [r5, #24]
   2acf0:	ldr	r2, [pc, #1796]	; 2b3fc <myhtml_tokenizer_state_init@@Base+0x878>
   2acf4:	ldr	r2, [r4, r2]
   2acf8:	str	r2, [r3, #172]	; 0xac
   2acfc:	ldr	r3, [r5, #24]
   2ad00:	ldr	r2, [pc, #1784]	; 2b400 <myhtml_tokenizer_state_init@@Base+0x87c>
   2ad04:	ldr	r2, [r4, r2]
   2ad08:	str	r2, [r3, #268]	; 0x10c
   2ad0c:	ldr	r3, [r5, #24]
   2ad10:	ldr	r2, [pc, #1772]	; 2b404 <myhtml_tokenizer_state_init@@Base+0x880>
   2ad14:	ldr	r2, [r4, r2]
   2ad18:	str	r2, [r3, #8]
   2ad1c:	ldr	r3, [r5, #24]
   2ad20:	ldr	r2, [pc, #1760]	; 2b408 <myhtml_tokenizer_state_init@@Base+0x884>
   2ad24:	ldr	r2, [r4, r2]
   2ad28:	str	r2, [r3, #40]	; 0x28
   2ad2c:	ldr	r3, [r5, #24]
   2ad30:	ldr	r2, [pc, #1748]	; 2b40c <myhtml_tokenizer_state_init@@Base+0x888>
   2ad34:	ldr	r2, [r4, r2]
   2ad38:	str	r2, [r3, #44]	; 0x2c
   2ad3c:	ldr	r3, [r5, #24]
   2ad40:	ldr	r2, [pc, #1736]	; 2b410 <myhtml_tokenizer_state_init@@Base+0x88c>
   2ad44:	ldr	r2, [r4, r2]
   2ad48:	str	r2, [r3, #48]	; 0x30
   2ad4c:	ldr	r3, [r5, #24]
   2ad50:	ldr	r2, [pc, #1724]	; 2b414 <myhtml_tokenizer_state_init@@Base+0x890>
   2ad54:	ldr	r2, [r4, r2]
   2ad58:	str	r2, [r3, #16]
   2ad5c:	ldr	r3, [r5, #24]
   2ad60:	ldr	r2, [pc, #1712]	; 2b418 <myhtml_tokenizer_state_init@@Base+0x894>
   2ad64:	ldr	r2, [r4, r2]
   2ad68:	str	r2, [r3, #52]	; 0x34
   2ad6c:	ldr	r3, [r5, #24]
   2ad70:	ldr	r2, [pc, #1700]	; 2b41c <myhtml_tokenizer_state_init@@Base+0x898>
   2ad74:	ldr	r2, [r4, r2]
   2ad78:	str	r2, [r3, #56]	; 0x38
   2ad7c:	ldr	r3, [r5, #24]
   2ad80:	ldr	r2, [pc, #1688]	; 2b420 <myhtml_tokenizer_state_init@@Base+0x89c>
   2ad84:	ldr	r2, [r4, r2]
   2ad88:	str	r2, [r3, #60]	; 0x3c
   2ad8c:	ldr	r3, [r5, #24]
   2ad90:	ldr	r2, [pc, #1676]	; 2b424 <myhtml_tokenizer_state_init@@Base+0x8a0>
   2ad94:	ldr	r2, [r4, r2]
   2ad98:	str	r2, [r3, #24]
   2ad9c:	ldr	r3, [r5, #24]
   2ada0:	ldr	r2, [pc, #1664]	; 2b428 <myhtml_tokenizer_state_init@@Base+0x8a4>
   2ada4:	ldr	r2, [r4, r2]
   2ada8:	str	r2, [r3, #204]	; 0xcc
   2adac:	ldr	r3, [r5, #24]
   2adb0:	ldr	r2, [pc, #1652]	; 2b42c <myhtml_tokenizer_state_init@@Base+0x8a8>
   2adb4:	ldr	r2, [r4, r2]
   2adb8:	str	r2, [r3, #208]	; 0xd0
   2adbc:	ldr	r3, [r5, #24]
   2adc0:	ldr	r2, [pc, #1640]	; 2b430 <myhtml_tokenizer_state_init@@Base+0x8ac>
   2adc4:	ldr	r2, [r4, r2]
   2adc8:	str	r2, [r3, #212]	; 0xd4
   2adcc:	ldr	r3, [r5, #24]
   2add0:	ldr	r2, [pc, #1628]	; 2b434 <myhtml_tokenizer_state_init@@Base+0x8b0>
   2add4:	ldr	r2, [r4, r2]
   2add8:	str	r2, [r3, #216]	; 0xd8
   2addc:	ldr	r3, [r5, #24]
   2ade0:	ldr	r2, [pc, #1616]	; 2b438 <myhtml_tokenizer_state_init@@Base+0x8b4>
   2ade4:	ldr	r2, [r4, r2]
   2ade8:	str	r2, [r3, #272]	; 0x110
   2adec:	ldr	r3, [r5, #24]
   2adf0:	ldr	r2, [pc, #1604]	; 2b43c <myhtml_tokenizer_state_init@@Base+0x8b8>
   2adf4:	ldr	r2, [r4, r2]
   2adf8:	str	r2, [r3, #224]	; 0xe0
   2adfc:	ldr	r3, [r5, #24]
   2ae00:	ldr	r2, [pc, #1592]	; 2b440 <myhtml_tokenizer_state_init@@Base+0x8bc>
   2ae04:	ldr	r2, [r4, r2]
   2ae08:	str	r2, [r3, #228]	; 0xe4
   2ae0c:	ldr	r3, [r5, #24]
   2ae10:	ldr	r2, [pc, #1580]	; 2b444 <myhtml_tokenizer_state_init@@Base+0x8c0>
   2ae14:	ldr	r2, [r4, r2]
   2ae18:	str	r2, [r3, #232]	; 0xe8
   2ae1c:	ldr	r3, [r5, #24]
   2ae20:	ldr	r2, [pc, #1568]	; 2b448 <myhtml_tokenizer_state_init@@Base+0x8c4>
   2ae24:	ldr	r2, [r4, r2]
   2ae28:	str	r2, [r3, #236]	; 0xec
   2ae2c:	ldr	r3, [r5, #24]
   2ae30:	ldr	r2, [pc, #1556]	; 2b44c <myhtml_tokenizer_state_init@@Base+0x8c8>
   2ae34:	ldr	r2, [r4, r2]
   2ae38:	str	r2, [r3, #252]	; 0xfc
   2ae3c:	ldr	r3, [r5, #24]
   2ae40:	ldr	r2, [pc, #1544]	; 2b450 <myhtml_tokenizer_state_init@@Base+0x8cc>
   2ae44:	ldr	r2, [r4, r2]
   2ae48:	str	r2, [r3, #256]	; 0x100
   2ae4c:	ldr	r3, [r5, #24]
   2ae50:	ldr	r2, [pc, #1532]	; 2b454 <myhtml_tokenizer_state_init@@Base+0x8d0>
   2ae54:	ldr	r2, [r4, r2]
   2ae58:	str	r2, [r3, #260]	; 0x104
   2ae5c:	ldr	r3, [r5, #24]
   2ae60:	ldr	r2, [pc, #1520]	; 2b458 <myhtml_tokenizer_state_init@@Base+0x8d4>
   2ae64:	ldr	r2, [r4, r2]
   2ae68:	str	r2, [r3, #264]	; 0x108
   2ae6c:	ldr	r3, [r5, #24]
   2ae70:	ldr	r2, [pc, #1508]	; 2b45c <myhtml_tokenizer_state_init@@Base+0x8d8>
   2ae74:	ldr	r2, [r4, r2]
   2ae78:	str	r2, [r3, #20]
   2ae7c:	ldr	r3, [r5, #24]
   2ae80:	ldr	r2, [pc, #1496]	; 2b460 <myhtml_tokenizer_state_init@@Base+0x8dc>
   2ae84:	ldr	r2, [r4, r2]
   2ae88:	str	r2, [r3, #64]	; 0x40
   2ae8c:	ldr	r3, [r5, #24]
   2ae90:	ldr	r2, [pc, #1484]	; 2b464 <myhtml_tokenizer_state_init@@Base+0x8e0>
   2ae94:	ldr	r2, [r4, r2]
   2ae98:	str	r2, [r3, #68]	; 0x44
   2ae9c:	ldr	r3, [r5, #24]
   2aea0:	ldr	r2, [pc, #1472]	; 2b468 <myhtml_tokenizer_state_init@@Base+0x8e4>
   2aea4:	ldr	r2, [r4, r2]
   2aea8:	str	r2, [r3, #72]	; 0x48
   2aeac:	ldr	r3, [r5, #24]
   2aeb0:	ldr	r2, [pc, #1460]	; 2b46c <myhtml_tokenizer_state_init@@Base+0x8e8>
   2aeb4:	ldr	r2, [r4, r2]
   2aeb8:	str	r2, [r3, #76]	; 0x4c
   2aebc:	ldr	r3, [r5, #24]
   2aec0:	ldr	r2, [pc, #1448]	; 2b470 <myhtml_tokenizer_state_init@@Base+0x8ec>
   2aec4:	ldr	r2, [r4, r2]
   2aec8:	str	r2, [r3, #80]	; 0x50
   2aecc:	ldr	r3, [r5, #24]
   2aed0:	ldr	r2, [pc, #1436]	; 2b474 <myhtml_tokenizer_state_init@@Base+0x8f0>
   2aed4:	ldr	r2, [r4, r2]
   2aed8:	str	r2, [r3, #84]	; 0x54
   2aedc:	ldr	r3, [r5, #24]
   2aee0:	ldr	r2, [pc, #1424]	; 2b478 <myhtml_tokenizer_state_init@@Base+0x8f4>
   2aee4:	ldr	r2, [r4, r2]
   2aee8:	str	r2, [r3, #88]	; 0x58
   2aeec:	ldr	r3, [r5, #24]
   2aef0:	ldr	r2, [pc, #1412]	; 2b47c <myhtml_tokenizer_state_init@@Base+0x8f8>
   2aef4:	ldr	r2, [r4, r2]
   2aef8:	str	r2, [r3, #92]	; 0x5c
   2aefc:	ldr	r3, [r5, #24]
   2af00:	ldr	r2, [pc, #1400]	; 2b480 <myhtml_tokenizer_state_init@@Base+0x8fc>
   2af04:	ldr	r2, [r4, r2]
   2af08:	str	r2, [r3, #96]	; 0x60
   2af0c:	ldr	r3, [r5, #24]
   2af10:	ldr	r2, [pc, #1388]	; 2b484 <myhtml_tokenizer_state_init@@Base+0x900>
   2af14:	ldr	r2, [r4, r2]
   2af18:	str	r2, [r3, #100]	; 0x64
   2af1c:	ldr	r3, [r5, #24]
   2af20:	ldr	r2, [pc, #1376]	; 2b488 <myhtml_tokenizer_state_init@@Base+0x904>
   2af24:	ldr	r2, [r4, r2]
   2af28:	str	r2, [r3, #104]	; 0x68
   2af2c:	ldr	r3, [r5, #24]
   2af30:	ldr	r2, [pc, #1364]	; 2b48c <myhtml_tokenizer_state_init@@Base+0x908>
   2af34:	ldr	r2, [r4, r2]
   2af38:	str	r2, [r3, #108]	; 0x6c
   2af3c:	ldr	r3, [r5, #24]
   2af40:	ldr	r2, [pc, #1352]	; 2b490 <myhtml_tokenizer_state_init@@Base+0x90c>
   2af44:	ldr	r2, [r4, r2]
   2af48:	str	r2, [r3, #112]	; 0x70
   2af4c:	ldr	r3, [r5, #24]
   2af50:	ldr	r2, [pc, #1340]	; 2b494 <myhtml_tokenizer_state_init@@Base+0x910>
   2af54:	ldr	r2, [r4, r2]
   2af58:	str	r2, [r3, #116]	; 0x74
   2af5c:	ldr	r3, [r5, #24]
   2af60:	ldr	r2, [pc, #1328]	; 2b498 <myhtml_tokenizer_state_init@@Base+0x914>
   2af64:	ldr	r2, [r4, r2]
   2af68:	str	r2, [r3, #120]	; 0x78
   2af6c:	ldr	r3, [r5, #24]
   2af70:	ldr	r2, [pc, #1316]	; 2b49c <myhtml_tokenizer_state_init@@Base+0x918>
   2af74:	ldr	r2, [r4, r2]
   2af78:	str	r2, [r3, #124]	; 0x7c
   2af7c:	ldr	r3, [r5, #24]
   2af80:	ldr	r2, [pc, #1304]	; 2b4a0 <myhtml_tokenizer_state_init@@Base+0x91c>
   2af84:	ldr	r2, [r4, r2]
   2af88:	str	r2, [r3, #128]	; 0x80
   2af8c:	ldr	r3, [r5, #24]
   2af90:	ldr	r2, [pc, #1292]	; 2b4a4 <myhtml_tokenizer_state_init@@Base+0x920>
   2af94:	ldr	r2, [r4, r2]
   2af98:	str	r2, [r3, #276]	; 0x114
   2af9c:	ldr	r3, [r5, #24]
   2afa0:	ldr	r2, [pc, #1280]	; 2b4a8 <myhtml_tokenizer_state_init@@Base+0x924>
   2afa4:	ldr	r2, [r4, r2]
   2afa8:	str	r2, [r3, #280]	; 0x118
   2afac:	ldr	r3, [r5, #24]
   2afb0:	ldr	r2, [pc, #1268]	; 2b4ac <myhtml_tokenizer_state_init@@Base+0x928>
   2afb4:	ldr	r2, [r4, r2]
   2afb8:	str	r2, [r3, #308]	; 0x134
   2afbc:	ldr	r3, [r5, #24]
   2afc0:	ldr	r2, [pc, #1256]	; 2b4b0 <myhtml_tokenizer_state_init@@Base+0x92c>
   2afc4:	ldr	r2, [r4, r2]
   2afc8:	str	r2, [r3, #316]	; 0x13c
   2afcc:	ldr	r3, [r5, #24]
   2afd0:	ldr	r2, [pc, #1244]	; 2b4b4 <myhtml_tokenizer_state_init@@Base+0x930>
   2afd4:	ldr	r2, [r4, r2]
   2afd8:	str	r2, [r3, #312]	; 0x138
   2afdc:	ldr	r3, [r5, #24]
   2afe0:	ldr	r2, [pc, #1232]	; 2b4b8 <myhtml_tokenizer_state_init@@Base+0x934>
   2afe4:	ldr	r2, [r4, r2]
   2afe8:	str	r2, [r3, #448]	; 0x1c0
   2afec:	ldr	r3, [r5, #24]
   2aff0:	ldr	r2, [pc, #1220]	; 2b4bc <myhtml_tokenizer_state_init@@Base+0x938>
   2aff4:	ldr	r2, [r4, r2]
   2aff8:	str	r2, [r3, #456]	; 0x1c8
   2affc:	ldr	r3, [r5, #24]
   2b000:	ldr	r2, [pc, #1208]	; 2b4c0 <myhtml_tokenizer_state_init@@Base+0x93c>
   2b004:	ldr	r2, [r4, r2]
   2b008:	str	r2, [r3, #412]	; 0x19c
   2b00c:	ldr	r3, [r5, #24]
   2b010:	ldr	r2, [pc, #1196]	; 2b4c4 <myhtml_tokenizer_state_init@@Base+0x940>
   2b014:	ldr	r2, [r4, r2]
   2b018:	str	r2, [r3, #416]	; 0x1a0
   2b01c:	ldr	r3, [r5, #24]
   2b020:	ldr	r2, [pc, #1184]	; 2b4c8 <myhtml_tokenizer_state_init@@Base+0x944>
   2b024:	ldr	r2, [r4, r2]
   2b028:	str	r2, [r3, #420]	; 0x1a4
   2b02c:	ldr	r3, [r5, #24]
   2b030:	ldr	r2, [pc, #1172]	; 2b4cc <myhtml_tokenizer_state_init@@Base+0x948>
   2b034:	ldr	r2, [r4, r2]
   2b038:	str	r2, [r3, #424]	; 0x1a8
   2b03c:	ldr	r3, [r5, #24]
   2b040:	ldr	r2, [pc, #1160]	; 2b4d0 <myhtml_tokenizer_state_init@@Base+0x94c>
   2b044:	ldr	r2, [r4, r2]
   2b048:	str	r2, [r3, #428]	; 0x1ac
   2b04c:	ldr	r3, [r5, #24]
   2b050:	ldr	r2, [pc, #1148]	; 2b4d4 <myhtml_tokenizer_state_init@@Base+0x950>
   2b054:	ldr	r2, [r4, r2]
   2b058:	str	r2, [r3, #432]	; 0x1b0
   2b05c:	ldr	r3, [r5, #24]
   2b060:	ldr	r2, [pc, #1136]	; 2b4d8 <myhtml_tokenizer_state_init@@Base+0x954>
   2b064:	ldr	r2, [r4, r2]
   2b068:	str	r2, [r3, #436]	; 0x1b4
   2b06c:	ldr	r3, [r5, #24]
   2b070:	ldr	r2, [pc, #1124]	; 2b4dc <myhtml_tokenizer_state_init@@Base+0x958>
   2b074:	ldr	r2, [r4, r2]
   2b078:	str	r2, [r3, #444]	; 0x1bc
   2b07c:	ldr	r3, [r5, #24]
   2b080:	ldr	r2, [pc, #1112]	; 2b4e0 <myhtml_tokenizer_state_init@@Base+0x95c>
   2b084:	ldr	r2, [r4, r2]
   2b088:	str	r2, [r3, #460]	; 0x1cc
   2b08c:	ldr	r3, [r5, #24]
   2b090:	ldr	r2, [pc, #1100]	; 2b4e4 <myhtml_tokenizer_state_init@@Base+0x960>
   2b094:	ldr	r2, [r4, r2]
   2b098:	str	r2, [r3, #464]	; 0x1d0
   2b09c:	ldr	r3, [r5, #24]
   2b0a0:	ldr	r2, [pc, #1088]	; 2b4e8 <myhtml_tokenizer_state_init@@Base+0x964>
   2b0a4:	ldr	r2, [r4, r2]
   2b0a8:	str	r2, [r3, #468]	; 0x1d4
   2b0ac:	ldr	r3, [r5, #24]
   2b0b0:	ldr	r2, [pc, #1076]	; 2b4ec <myhtml_tokenizer_state_init@@Base+0x968>
   2b0b4:	ldr	r2, [r4, r2]
   2b0b8:	str	r2, [r3, #476]	; 0x1dc
   2b0bc:	ldr	r3, [r5, #24]
   2b0c0:	ldr	r2, [pc, #1064]	; 2b4f0 <myhtml_tokenizer_state_init@@Base+0x96c>
   2b0c4:	ldr	r2, [r4, r2]
   2b0c8:	str	r2, [r3, #472]	; 0x1d8
   2b0cc:	ldr	r3, [r5, #24]
   2b0d0:	ldr	r2, [pc, #1052]	; 2b4f4 <myhtml_tokenizer_state_init@@Base+0x970>
   2b0d4:	ldr	r2, [r4, r2]
   2b0d8:	str	r2, [r3, #480]	; 0x1e0
   2b0dc:	ldr	r3, [r5, #24]
   2b0e0:	ldr	r2, [pc, #1040]	; 2b4f8 <myhtml_tokenizer_state_init@@Base+0x974>
   2b0e4:	ldr	r2, [r4, r2]
   2b0e8:	str	r2, [r3, #452]	; 0x1c4
   2b0ec:	ldr	r3, [r5, #24]
   2b0f0:	ldr	r2, [pc, #1028]	; 2b4fc <myhtml_tokenizer_state_init@@Base+0x978>
   2b0f4:	ldr	r2, [r4, r2]
   2b0f8:	str	r2, [r3, #548]	; 0x224
   2b0fc:	ldr	r3, [r5, #24]
   2b100:	ldr	r2, [pc, #1016]	; 2b500 <myhtml_tokenizer_state_init@@Base+0x97c>
   2b104:	ldr	r2, [r4, r2]
   2b108:	str	r2, [r3, #288]	; 0x120
   2b10c:	ldr	r3, [r5, #24]
   2b110:	ldr	r2, [pc, #1004]	; 2b504 <myhtml_tokenizer_state_init@@Base+0x980>
   2b114:	ldr	r2, [r4, r2]
   2b118:	str	r2, [r3, #320]	; 0x140
   2b11c:	ldr	r3, [r5, #24]
   2b120:	ldr	r2, [pc, #992]	; 2b508 <myhtml_tokenizer_state_init@@Base+0x984>
   2b124:	ldr	r2, [r4, r2]
   2b128:	str	r2, [r3, #324]	; 0x144
   2b12c:	ldr	r3, [r5, #24]
   2b130:	ldr	r2, [pc, #980]	; 2b50c <myhtml_tokenizer_state_init@@Base+0x988>
   2b134:	ldr	r2, [r4, r2]
   2b138:	str	r2, [r3, #328]	; 0x148
   2b13c:	ldr	r3, [r5, #24]
   2b140:	ldr	r2, [pc, #968]	; 2b510 <myhtml_tokenizer_state_init@@Base+0x98c>
   2b144:	ldr	r2, [r4, r2]
   2b148:	str	r2, [r3, #296]	; 0x128
   2b14c:	ldr	r3, [r5, #24]
   2b150:	ldr	r2, [pc, #956]	; 2b514 <myhtml_tokenizer_state_init@@Base+0x990>
   2b154:	ldr	r2, [r4, r2]
   2b158:	str	r2, [r3, #332]	; 0x14c
   2b15c:	ldr	r3, [r5, #24]
   2b160:	ldr	r2, [pc, #944]	; 2b518 <myhtml_tokenizer_state_init@@Base+0x994>
   2b164:	ldr	r2, [r4, r2]
   2b168:	str	r2, [r3, #336]	; 0x150
   2b16c:	ldr	r3, [r5, #24]
   2b170:	ldr	r2, [pc, #932]	; 2b51c <myhtml_tokenizer_state_init@@Base+0x998>
   2b174:	ldr	r2, [r4, r2]
   2b178:	str	r2, [r3, #340]	; 0x154
   2b17c:	ldr	r3, [r5, #24]
   2b180:	ldr	r2, [pc, #920]	; 2b520 <myhtml_tokenizer_state_init@@Base+0x99c>
   2b184:	ldr	r2, [r4, r2]
   2b188:	str	r2, [r3, #304]	; 0x130
   2b18c:	ldr	r3, [r5, #24]
   2b190:	ldr	r2, [pc, #908]	; 2b524 <myhtml_tokenizer_state_init@@Base+0x9a0>
   2b194:	ldr	r2, [r4, r2]
   2b198:	str	r2, [r3, #484]	; 0x1e4
   2b19c:	ldr	r3, [r5, #24]
   2b1a0:	ldr	r2, [pc, #896]	; 2b528 <myhtml_tokenizer_state_init@@Base+0x9a4>
   2b1a4:	ldr	r2, [r4, r2]
   2b1a8:	str	r2, [r3, #488]	; 0x1e8
   2b1ac:	ldr	r3, [r5, #24]
   2b1b0:	ldr	r2, [pc, #884]	; 2b52c <myhtml_tokenizer_state_init@@Base+0x9a8>
   2b1b4:	ldr	r2, [r4, r2]
   2b1b8:	str	r2, [r3, #492]	; 0x1ec
   2b1bc:	ldr	r3, [r5, #24]
   2b1c0:	ldr	r2, [pc, #872]	; 2b530 <myhtml_tokenizer_state_init@@Base+0x9ac>
   2b1c4:	ldr	r2, [r4, r2]
   2b1c8:	str	r2, [r3, #496]	; 0x1f0
   2b1cc:	ldr	r3, [r5, #24]
   2b1d0:	ldr	r2, [pc, #860]	; 2b534 <myhtml_tokenizer_state_init@@Base+0x9b0>
   2b1d4:	ldr	r2, [r4, r2]
   2b1d8:	str	r2, [r3, #552]	; 0x228
   2b1dc:	ldr	r3, [r5, #24]
   2b1e0:	ldr	r2, [pc, #848]	; 2b538 <myhtml_tokenizer_state_init@@Base+0x9b4>
   2b1e4:	ldr	r2, [r4, r2]
   2b1e8:	str	r2, [r3, #504]	; 0x1f8
   2b1ec:	ldr	r3, [r5, #24]
   2b1f0:	ldr	r2, [pc, #836]	; 2b53c <myhtml_tokenizer_state_init@@Base+0x9b8>
   2b1f4:	ldr	r2, [r4, r2]
   2b1f8:	str	r2, [r3, #508]	; 0x1fc
   2b1fc:	ldr	r3, [r5, #24]
   2b200:	ldr	r2, [pc, #824]	; 2b540 <myhtml_tokenizer_state_init@@Base+0x9bc>
   2b204:	ldr	r2, [r4, r2]
   2b208:	str	r2, [r3, #512]	; 0x200
   2b20c:	ldr	r3, [r5, #24]
   2b210:	ldr	r2, [pc, #812]	; 2b544 <myhtml_tokenizer_state_init@@Base+0x9c0>
   2b214:	ldr	r2, [r4, r2]
   2b218:	str	r2, [r3, #516]	; 0x204
   2b21c:	ldr	r3, [r5, #24]
   2b220:	ldr	r2, [pc, #800]	; 2b548 <myhtml_tokenizer_state_init@@Base+0x9c4>
   2b224:	ldr	r2, [r4, r2]
   2b228:	str	r2, [r3, #532]	; 0x214
   2b22c:	ldr	r3, [r5, #24]
   2b230:	ldr	r2, [pc, #788]	; 2b54c <myhtml_tokenizer_state_init@@Base+0x9c8>
   2b234:	ldr	r2, [r4, r2]
   2b238:	str	r2, [r3, #536]	; 0x218
   2b23c:	ldr	r3, [r5, #24]
   2b240:	ldr	r2, [pc, #776]	; 2b550 <myhtml_tokenizer_state_init@@Base+0x9cc>
   2b244:	ldr	r2, [r4, r2]
   2b248:	str	r2, [r3, #540]	; 0x21c
   2b24c:	ldr	r3, [r5, #24]
   2b250:	ldr	r2, [pc, #764]	; 2b554 <myhtml_tokenizer_state_init@@Base+0x9d0>
   2b254:	ldr	r2, [r4, r2]
   2b258:	str	r2, [r3, #544]	; 0x220
   2b25c:	ldr	r3, [r5, #24]
   2b260:	ldr	r2, [pc, #752]	; 2b558 <myhtml_tokenizer_state_init@@Base+0x9d4>
   2b264:	ldr	r2, [r4, r2]
   2b268:	str	r2, [r3, #300]	; 0x12c
   2b26c:	ldr	r3, [r5, #24]
   2b270:	ldr	r2, [pc, #740]	; 2b55c <myhtml_tokenizer_state_init@@Base+0x9d8>
   2b274:	ldr	r2, [r4, r2]
   2b278:	str	r2, [r3, #344]	; 0x158
   2b27c:	ldr	r3, [r5, #24]
   2b280:	ldr	r2, [pc, #728]	; 2b560 <myhtml_tokenizer_state_init@@Base+0x9dc>
   2b284:	ldr	r2, [r4, r2]
   2b288:	str	r2, [r3, #348]	; 0x15c
   2b28c:	ldr	r3, [r5, #24]
   2b290:	ldr	r2, [pc, #716]	; 2b564 <myhtml_tokenizer_state_init@@Base+0x9e0>
   2b294:	ldr	r2, [r4, r2]
   2b298:	str	r2, [r3, #352]	; 0x160
   2b29c:	ldr	r3, [r5, #24]
   2b2a0:	ldr	r2, [pc, #704]	; 2b568 <myhtml_tokenizer_state_init@@Base+0x9e4>
   2b2a4:	ldr	r2, [r4, r2]
   2b2a8:	str	r2, [r3, #356]	; 0x164
   2b2ac:	ldr	r3, [r5, #24]
   2b2b0:	ldr	r2, [pc, #692]	; 2b56c <myhtml_tokenizer_state_init@@Base+0x9e8>
   2b2b4:	ldr	r2, [r4, r2]
   2b2b8:	str	r2, [r3, #360]	; 0x168
   2b2bc:	ldr	r3, [r5, #24]
   2b2c0:	ldr	r2, [pc, #680]	; 2b570 <myhtml_tokenizer_state_init@@Base+0x9ec>
   2b2c4:	ldr	r2, [r4, r2]
   2b2c8:	str	r2, [r3, #364]	; 0x16c
   2b2cc:	ldr	r3, [r5, #24]
   2b2d0:	ldr	r2, [pc, #668]	; 2b574 <myhtml_tokenizer_state_init@@Base+0x9f0>
   2b2d4:	ldr	r2, [r4, r2]
   2b2d8:	str	r2, [r3, #368]	; 0x170
   2b2dc:	ldr	r3, [r5, #24]
   2b2e0:	ldr	r2, [pc, #656]	; 2b578 <myhtml_tokenizer_state_init@@Base+0x9f4>
   2b2e4:	ldr	r2, [r4, r2]
   2b2e8:	str	r2, [r3, #372]	; 0x174
   2b2ec:	ldr	r3, [r5, #24]
   2b2f0:	ldr	r2, [pc, #644]	; 2b57c <myhtml_tokenizer_state_init@@Base+0x9f8>
   2b2f4:	ldr	r2, [r4, r2]
   2b2f8:	str	r2, [r3, #376]	; 0x178
   2b2fc:	ldr	r3, [r5, #24]
   2b300:	ldr	r2, [pc, #632]	; 2b580 <myhtml_tokenizer_state_init@@Base+0x9fc>
   2b304:	ldr	r2, [r4, r2]
   2b308:	str	r2, [r3, #380]	; 0x17c
   2b30c:	ldr	r3, [r5, #24]
   2b310:	ldr	r2, [pc, #620]	; 2b584 <myhtml_tokenizer_state_init@@Base+0xa00>
   2b314:	ldr	r2, [r4, r2]
   2b318:	str	r2, [r3, #384]	; 0x180
   2b31c:	ldr	r3, [r5, #24]
   2b320:	ldr	r2, [pc, #608]	; 2b588 <myhtml_tokenizer_state_init@@Base+0xa04>
   2b324:	ldr	r2, [r4, r2]
   2b328:	str	r2, [r3, #388]	; 0x184
   2b32c:	ldr	r3, [r5, #24]
   2b330:	ldr	r2, [pc, #596]	; 2b58c <myhtml_tokenizer_state_init@@Base+0xa08>
   2b334:	ldr	r2, [r4, r2]
   2b338:	str	r2, [r3, #392]	; 0x188
   2b33c:	ldr	r3, [r5, #24]
   2b340:	ldr	r2, [pc, #584]	; 2b590 <myhtml_tokenizer_state_init@@Base+0xa0c>
   2b344:	ldr	r2, [r4, r2]
   2b348:	str	r2, [r3, #396]	; 0x18c
   2b34c:	ldr	r3, [r5, #24]
   2b350:	ldr	r2, [pc, #572]	; 2b594 <myhtml_tokenizer_state_init@@Base+0xa10>
   2b354:	ldr	r2, [r4, r2]
   2b358:	str	r2, [r3, #400]	; 0x190
   2b35c:	ldr	r3, [r5, #24]
   2b360:	ldr	r2, [pc, #560]	; 2b598 <myhtml_tokenizer_state_init@@Base+0xa14>
   2b364:	ldr	r2, [r4, r2]
   2b368:	str	r2, [r3, #404]	; 0x194
   2b36c:	ldr	r3, [r5, #24]
   2b370:	ldr	r2, [pc, #548]	; 2b59c <myhtml_tokenizer_state_init@@Base+0xa18>
   2b374:	ldr	r2, [r4, r2]
   2b378:	str	r2, [r3, #408]	; 0x198
   2b37c:	ldr	r3, [r5, #24]
   2b380:	ldr	r2, [pc, #536]	; 2b5a0 <myhtml_tokenizer_state_init@@Base+0xa1c>
   2b384:	ldr	r2, [r4, r2]
   2b388:	str	r2, [r3, #556]	; 0x22c
   2b38c:	mov	r0, #0
   2b390:	ldrd	r4, [sp]
   2b394:	ldr	r6, [sp, #8]
   2b398:	add	sp, sp, #12
   2b39c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b3a0:	movw	r0, #37164	; 0x912c
   2b3a4:	b	2b390 <myhtml_tokenizer_state_init@@Base+0x80c>
   2b3a8:	andeq	pc, lr, r0, ror #8
   2b3ac:	andeq	r0, r0, r8, lsl #15
   2b3b0:	andeq	r0, r0, r8, lsr #18
   2b3b4:	andeq	r0, r0, r4, ror #17
   2b3b8:	andeq	r0, r0, r0, asr r9
   2b3bc:	andeq	r0, r0, r8, ror r7
   2b3c0:	andeq	r0, r0, r8, ror #15
   2b3c4:	andeq	r0, r0, r4, asr #17
   2b3c8:	andeq	r0, r0, r0, lsl #14
   2b3cc:	andeq	r0, r0, r0, lsr r9
   2b3d0:	andeq	r0, r0, ip, ror #18
   2b3d4:	andeq	r0, r0, r8, lsl r9
   2b3d8:	andeq	r0, r0, r4, lsl #18
   2b3dc:	andeq	r0, r0, r8, asr #18
   2b3e0:	andeq	r0, r0, r4, lsr r8
   2b3e4:	andeq	r0, r0, r0, ror #18
   2b3e8:	andeq	r0, r0, r4, asr r8
   2b3ec:	andeq	r0, r0, r0, lsl #18
   2b3f0:	andeq	r0, r0, r4, lsl #14
   2b3f4:	andeq	r0, r0, r8, lsr #15
   2b3f8:	andeq	r0, r0, ip, lsl #17
   2b3fc:	muleq	r0, r0, r7
   2b400:			; <UNDEFINED> instruction: 0x000009bc
   2b404:	muleq	r0, ip, r8
   2b408:	andeq	r0, r0, r0, asr #15
   2b40c:	andeq	r0, r0, r4, lsr #14
   2b410:	andeq	r0, r0, r4, asr #15
   2b414:	andeq	r0, r0, r4, ror r7
   2b418:	andeq	r0, r0, r4, ror #15
   2b41c:	andeq	r0, r0, r0, asr r7
   2b420:	andeq	r0, r0, r4, asr r9
   2b424:	andeq	r0, r0, r4, lsr #19
   2b428:	andeq	r0, r0, r4, lsl #16
   2b42c:	andeq	r0, r0, ip, lsl #14
   2b430:	andeq	r0, r0, ip, asr #16
   2b434:	andeq	r0, r0, r4, lsl #19
   2b438:	andeq	r0, r0, r4, ror r8
   2b43c:	andeq	r0, r0, ip, lsr #15
   2b440:	andeq	r0, r0, r4, ror #16
   2b444:	andeq	r0, r0, r8, ror r8
   2b448:			; <UNDEFINED> instruction: 0x000009b4
   2b44c:	andeq	r0, r0, r4, ror #14
   2b450:	andeq	r0, r0, r4, lsl r8
   2b454:			; <UNDEFINED> instruction: 0x000007b8
   2b458:	andeq	r0, r0, r4, lsr #16
   2b45c:			; <UNDEFINED> instruction: 0x000007b4
   2b460:	andeq	r0, r0, ip, lsl r8
   2b464:	ldrdeq	r0, [r0], -r8
   2b468:	andeq	r0, r0, ip, asr r9
   2b46c:	strdeq	r0, [r0], -r4
   2b470:	andeq	r0, r0, r0, asr r8
   2b474:	strdeq	r0, [r0], -ip
   2b478:	andeq	r0, r0, r8, lsr #16
   2b47c:	andeq	r0, r0, r8, asr #16
   2b480:	muleq	r0, r0, r9
   2b484:	andeq	r0, r0, ip, lsl #15
   2b488:	muleq	r0, r8, r7
   2b48c:	andeq	r0, r0, r0, lsl r8
   2b490:	andeq	r0, r0, r0, asr #18
   2b494:	andeq	r0, r0, r0, lsr r7
   2b498:	andeq	r0, r0, r8, asr #15
   2b49c:			; <UNDEFINED> instruction: 0x000007bc
   2b4a0:	andeq	r0, r0, r8, lsl #18
   2b4a4:	muleq	r0, ip, r7
   2b4a8:	andeq	r0, r0, r0, ror #15
   2b4ac:	andeq	r0, r0, r8, lsl #16
   2b4b0:	andeq	r0, r0, r8, lsl #19
   2b4b4:	andeq	r0, r0, ip, lsl #19
   2b4b8:	andeq	r0, r0, ip, asr #17
   2b4bc:	andeq	r0, r0, r8, ror #17
   2b4c0:	andeq	r0, r0, ip, ror #17
   2b4c4:	andeq	r0, r0, r4, lsr r9
   2b4c8:	andeq	r0, r0, r4, asr r7
   2b4cc:	andeq	r0, r0, r8, lsr #17
   2b4d0:	andeq	r0, r0, ip, lsr #16
   2b4d4:	strdeq	r0, [r0], -r4
   2b4d8:	ldrdeq	r0, [r0], -ip
   2b4dc:			; <UNDEFINED> instruction: 0x000008bc
   2b4e0:	andeq	r0, r0, r4, ror #18
   2b4e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2b4e8:	muleq	r0, r8, r8
   2b4ec:	andeq	r0, r0, r4, lsl #15
   2b4f0:	andeq	r0, r0, r0, lsr #19
   2b4f4:	andeq	r0, r0, ip, ror r7
   2b4f8:	andeq	r0, r0, ip, asr r8
   2b4fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2b500:	andeq	r0, r0, r4, asr #18
   2b504:	muleq	r0, r4, r7
   2b508:	ldrdeq	r0, [r0], -r8
   2b50c:			; <UNDEFINED> instruction: 0x000008b4
   2b510:	andeq	r0, r0, ip, ror #16
   2b514:			; <UNDEFINED> instruction: 0x000009b8
   2b518:	andeq	r0, r0, r0, ror #17
   2b51c:	andeq	r0, r0, ip, lsr #17
   2b520:	andeq	r0, r0, r0, asr #16
   2b524:	andeq	r0, r0, r4, lsl r7
   2b528:	andeq	r0, r0, r0, lsl r9
   2b52c:	andeq	r0, r0, r0, lsr #14
   2b530:	andeq	r0, r0, r4, lsr r7
   2b534:	andeq	r0, r0, r0, asr #14
   2b538:	andeq	r0, r0, r4, lsl #17
   2b53c:	andeq	r0, r0, ip, lsr r9
   2b540:	andeq	r0, r0, r0, lsl #15
   2b544:	andeq	r0, r0, r8, lsr #19
   2b548:	andeq	r0, r0, ip, ror r9
   2b54c:			; <UNDEFINED> instruction: 0x000008b0
   2b550:	andeq	r0, r0, r4, ror r9
   2b554:	andeq	r0, r0, r8, asr r8
   2b558:			; <UNDEFINED> instruction: 0x000007b0
   2b55c:	andeq	r0, r0, r8, lsl #17
   2b560:	ldrdeq	r0, [r0], -r4
   2b564:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2b568:	andeq	r0, r0, ip, lsr #18
   2b56c:	andeq	r0, r0, ip, lsl #16
   2b570:	andeq	r0, r0, r8, lsl #14
   2b574:	muleq	r0, r8, r9
   2b578:	andeq	r0, r0, r8, asr #17
   2b57c:			; <UNDEFINED> instruction: 0x000009b0
   2b580:	andeq	r0, r0, r8, asr #14
   2b584:	andeq	r0, r0, r0, asr #17
   2b588:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2b58c:	andeq	r0, r0, ip, lsr r8
   2b590:	andeq	r0, r0, r8, lsr r9
   2b594:	andeq	r0, r0, r8, lsr r8
   2b598:			; <UNDEFINED> instruction: 0x000008b8
   2b59c:	andeq	r0, r0, ip, asr #15
   2b5a0:	andeq	r0, r0, r0, lsl #16

0002b5a4 <myhtml_tokenizer_state_destroy@@Base>:
   2b5a4:	ldr	r0, [r0, #24]
   2b5a8:	cmp	r0, #0
   2b5ac:	bxeq	lr
   2b5b0:	str	r4, [sp, #-8]!
   2b5b4:	str	lr, [sp, #4]
   2b5b8:	bl	10d60 <mycore_free@plt>
   2b5bc:	ldr	r4, [sp]
   2b5c0:	add	sp, sp, #4
   2b5c4:	pop	{pc}		; (ldr pc, [sp], #4)

0002b5c8 <myhtml_tokenizer_state_doctype@@Base>:
   2b5c8:	mov	r2, #52	; 0x34
   2b5cc:	str	r2, [r0, #160]	; 0xa0
   2b5d0:	mov	r0, r3
   2b5d4:	bx	lr

0002b5d8 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   2b5d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b5dc:	strd	r6, [sp, #8]
   2b5e0:	str	r8, [sp, #16]
   2b5e4:	str	lr, [sp, #20]
   2b5e8:	mov	r5, r0
   2b5ec:	ldr	r6, [sp, #24]
   2b5f0:	add	ip, r2, r3
   2b5f4:	ldrb	lr, [r2, r3]
   2b5f8:	sub	r0, lr, #9
   2b5fc:	uxtb	r0, r0
   2b600:	cmp	lr, #32
   2b604:	cmpne	r0, #1
   2b608:	movls	r0, #1
   2b60c:	movhi	r0, #0
   2b610:	sub	lr, lr, #12
   2b614:	uxtb	lr, lr
   2b618:	cmp	lr, #1
   2b61c:	orrls	r0, r0, #1
   2b620:	cmp	r0, #0
   2b624:	beq	2b684 <myhtml_tokenizer_state_before_doctype_name@@Base+0xac>
   2b628:	cmp	r3, r6
   2b62c:	bcs	2b7ac <myhtml_tokenizer_state_before_doctype_name@@Base+0x1d4>
   2b630:	sub	r6, r6, #1
   2b634:	add	r6, r6, r2
   2b638:	rsb	r7, r2, #1
   2b63c:	add	r4, r7, ip
   2b640:	cmp	r6, ip
   2b644:	beq	2b6f0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x118>
   2b648:	ldrb	lr, [ip, #1]!
   2b64c:	sub	r0, lr, #9
   2b650:	uxtb	r0, r0
   2b654:	sub	r3, lr, #12
   2b658:	uxtb	r3, r3
   2b65c:	cmp	r3, #1
   2b660:	cmphi	r0, #1
   2b664:	movls	r0, #1
   2b668:	movhi	r0, #0
   2b66c:	cmp	lr, #32
   2b670:	orreq	r0, r0, #1
   2b674:	cmp	r0, #0
   2b678:	bne	2b63c <myhtml_tokenizer_state_before_doctype_name@@Base+0x64>
   2b67c:	mov	r3, r4
   2b680:	b	2b68c <myhtml_tokenizer_state_before_doctype_name@@Base+0xb4>
   2b684:	cmp	r3, r6
   2b688:	bcs	2b7a4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x1cc>
   2b68c:	ldrb	r2, [r2, r3]
   2b690:	cmp	r2, #62	; 0x3e
   2b694:	beq	2b708 <myhtml_tokenizer_state_before_doctype_name@@Base+0x130>
   2b698:	ldr	r2, [r1, #40]	; 0x28
   2b69c:	cmp	r2, #0
   2b6a0:	beq	2b780 <myhtml_tokenizer_state_before_doctype_name@@Base+0x1a8>
   2b6a4:	ldr	r2, [r1, #44]	; 0x2c
   2b6a8:	ldr	r0, [r5, #56]	; 0x38
   2b6ac:	str	r0, [r2]
   2b6b0:	ldr	r2, [r1, #44]	; 0x2c
   2b6b4:	ldr	r0, [r2]
   2b6b8:	str	r2, [r0, #4]
   2b6bc:	ldr	r2, [r2]
   2b6c0:	str	r2, [r1, #44]	; 0x2c
   2b6c4:	mov	r0, #0
   2b6c8:	str	r0, [r2]
   2b6cc:	ldr	r2, [r1, #44]	; 0x2c
   2b6d0:	str	r2, [r5, #56]	; 0x38
   2b6d4:	ldr	r1, [r5, #56]	; 0x38
   2b6d8:	ldr	r2, [r5, #192]	; 0xc0
   2b6dc:	add	r2, r2, r3
   2b6e0:	str	r2, [r1, #48]	; 0x30
   2b6e4:	mov	r2, #53	; 0x35
   2b6e8:	str	r2, [r5, #160]	; 0xa0
   2b6ec:	mov	r4, r3
   2b6f0:	mov	r0, r4
   2b6f4:	ldrd	r4, [sp]
   2b6f8:	ldrd	r6, [sp, #8]
   2b6fc:	ldr	r8, [sp, #16]
   2b700:	add	sp, sp, #20
   2b704:	pop	{pc}		; (ldr pc, [sp], #4)
   2b708:	mov	r2, #1
   2b70c:	str	r2, [r5, #176]	; 0xb0
   2b710:	add	r4, r3, r2
   2b714:	ldr	r3, [r5, #192]	; 0xc0
   2b718:	ldr	r2, [r1, #32]
   2b71c:	sub	r3, r3, r2
   2b720:	add	r3, r3, r4
   2b724:	str	r3, [r1, #36]	; 0x24
   2b728:	mov	r2, r1
   2b72c:	mov	r1, r4
   2b730:	mov	r0, r5
   2b734:	bl	ffc8 <myhtml_queue_add@plt>
   2b738:	subs	r6, r0, #0
   2b73c:	beq	2b750 <myhtml_tokenizer_state_before_doctype_name@@Base+0x178>
   2b740:	mov	r3, #69	; 0x45
   2b744:	str	r3, [r5, #160]	; 0xa0
   2b748:	mov	r4, #0
   2b74c:	b	2b6f0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x118>
   2b750:	ldr	r0, [r5, #8]
   2b754:	ldr	r1, [r0, #16]
   2b758:	bl	10898 <myhtml_token_attr_create@plt>
   2b75c:	str	r0, [r5, #56]	; 0x38
   2b760:	cmp	r0, #0
   2b764:	moveq	r3, #69	; 0x45
   2b768:	streq	r3, [r5, #160]	; 0xa0
   2b76c:	moveq	r4, r6
   2b770:	beq	2b6f0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x118>
   2b774:	mov	r3, #0
   2b778:	str	r3, [r5, #160]	; 0xa0
   2b77c:	b	2b6f0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x118>
   2b780:	ldr	r2, [r5, #56]	; 0x38
   2b784:	str	r2, [r1, #40]	; 0x28
   2b788:	str	r2, [r1, #44]	; 0x2c
   2b78c:	str	r2, [r5, #56]	; 0x38
   2b790:	mov	r1, #0
   2b794:	str	r1, [r2]
   2b798:	ldr	r2, [r5, #56]	; 0x38
   2b79c:	str	r1, [r2, #4]
   2b7a0:	b	2b6d4 <myhtml_tokenizer_state_before_doctype_name@@Base+0xfc>
   2b7a4:	mov	r4, r3
   2b7a8:	b	2b6f0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x118>
   2b7ac:	mov	r4, r3
   2b7b0:	b	2b6f0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x118>

0002b7b4 <myhtml_tokenizer_state_doctype_name@@Base>:
   2b7b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b7b8:	strd	r6, [sp, #8]
   2b7bc:	str	r8, [sp, #16]
   2b7c0:	str	lr, [sp, #20]
   2b7c4:	ldr	r4, [sp, #24]
   2b7c8:	cmp	r3, r4
   2b7cc:	bcs	2b960 <myhtml_tokenizer_state_doctype_name@@Base+0x1ac>
   2b7d0:	mov	r6, r2
   2b7d4:	mov	r5, r0
   2b7d8:	add	lr, r2, r3
   2b7dc:	ldrb	r0, [r2, r3]
   2b7e0:	cmp	r0, #62	; 0x3e
   2b7e4:	beq	2b8cc <myhtml_tokenizer_state_doctype_name@@Base+0x118>
   2b7e8:	sub	r2, r0, #9
   2b7ec:	uxtb	r2, r2
   2b7f0:	sub	ip, r0, #12
   2b7f4:	uxtb	ip, ip
   2b7f8:	cmp	ip, #1
   2b7fc:	cmphi	r2, #1
   2b800:	movls	r2, #1
   2b804:	movhi	r2, #0
   2b808:	cmp	r0, #32
   2b80c:	orreq	r2, r2, #1
   2b810:	cmp	r2, #0
   2b814:	subeq	r7, r6, #1
   2b818:	addeq	r7, r7, r4
   2b81c:	rsbeq	r6, r6, #1
   2b820:	bne	2b958 <myhtml_tokenizer_state_doctype_name@@Base+0x1a4>
   2b824:	add	r4, r6, lr
   2b828:	cmp	lr, r7
   2b82c:	beq	2b8b4 <myhtml_tokenizer_state_doctype_name@@Base+0x100>
   2b830:	ldrb	ip, [lr, #1]!
   2b834:	cmp	ip, #62	; 0x3e
   2b838:	beq	2b8d0 <myhtml_tokenizer_state_doctype_name@@Base+0x11c>
   2b83c:	sub	r3, ip, #9
   2b840:	uxtb	r3, r3
   2b844:	sub	r0, ip, #12
   2b848:	uxtb	r0, r0
   2b84c:	cmp	r0, #1
   2b850:	cmphi	r3, #1
   2b854:	movls	r3, #1
   2b858:	movhi	r3, #0
   2b85c:	cmp	ip, #32
   2b860:	orreq	r3, r3, #1
   2b864:	cmp	r3, #0
   2b868:	beq	2b824 <myhtml_tokenizer_state_doctype_name@@Base+0x70>
   2b86c:	ldr	r2, [r5, #56]	; 0x38
   2b870:	ldr	r3, [r5, #192]	; 0xc0
   2b874:	ldr	r1, [r2, #48]	; 0x30
   2b878:	sub	r3, r3, r1
   2b87c:	add	r3, r3, r4
   2b880:	str	r3, [r2, #52]	; 0x34
   2b884:	ldr	r0, [r5, #8]
   2b888:	ldr	r1, [r0, #16]
   2b88c:	bl	10898 <myhtml_token_attr_create@plt>
   2b890:	str	r0, [r5, #56]	; 0x38
   2b894:	cmp	r0, #0
   2b898:	moveq	r3, #69	; 0x45
   2b89c:	streq	r3, [r5, #160]	; 0xa0
   2b8a0:	moveq	r4, #0
   2b8a4:	beq	2b8b4 <myhtml_tokenizer_state_doctype_name@@Base+0x100>
   2b8a8:	mov	r3, #54	; 0x36
   2b8ac:	str	r3, [r5, #160]	; 0xa0
   2b8b0:	add	r4, r4, #1
   2b8b4:	mov	r0, r4
   2b8b8:	ldrd	r4, [sp]
   2b8bc:	ldrd	r6, [sp, #8]
   2b8c0:	ldr	r8, [sp, #16]
   2b8c4:	add	sp, sp, #20
   2b8c8:	pop	{pc}		; (ldr pc, [sp], #4)
   2b8cc:	mov	r4, r3
   2b8d0:	ldr	r2, [r5, #56]	; 0x38
   2b8d4:	ldr	r3, [r5, #192]	; 0xc0
   2b8d8:	ldr	r0, [r2, #48]	; 0x30
   2b8dc:	sub	r3, r3, r0
   2b8e0:	add	r3, r3, r4
   2b8e4:	str	r3, [r2, #52]	; 0x34
   2b8e8:	add	r4, r4, #1
   2b8ec:	ldr	r3, [r5, #192]	; 0xc0
   2b8f0:	ldr	r2, [r1, #32]
   2b8f4:	sub	r3, r3, r2
   2b8f8:	add	r3, r3, r4
   2b8fc:	str	r3, [r1, #36]	; 0x24
   2b900:	mov	r2, r1
   2b904:	mov	r1, r4
   2b908:	mov	r0, r5
   2b90c:	bl	ffc8 <myhtml_queue_add@plt>
   2b910:	subs	r6, r0, #0
   2b914:	beq	2b928 <myhtml_tokenizer_state_doctype_name@@Base+0x174>
   2b918:	mov	r3, #69	; 0x45
   2b91c:	str	r3, [r5, #160]	; 0xa0
   2b920:	mov	r4, #0
   2b924:	b	2b8b4 <myhtml_tokenizer_state_doctype_name@@Base+0x100>
   2b928:	ldr	r0, [r5, #8]
   2b92c:	ldr	r1, [r0, #16]
   2b930:	bl	10898 <myhtml_token_attr_create@plt>
   2b934:	str	r0, [r5, #56]	; 0x38
   2b938:	cmp	r0, #0
   2b93c:	moveq	r3, #69	; 0x45
   2b940:	streq	r3, [r5, #160]	; 0xa0
   2b944:	moveq	r4, r6
   2b948:	beq	2b8b4 <myhtml_tokenizer_state_doctype_name@@Base+0x100>
   2b94c:	mov	r3, #0
   2b950:	str	r3, [r5, #160]	; 0xa0
   2b954:	b	2b8b4 <myhtml_tokenizer_state_doctype_name@@Base+0x100>
   2b958:	mov	r4, r3
   2b95c:	b	2b86c <myhtml_tokenizer_state_doctype_name@@Base+0xb8>
   2b960:	mov	r4, r3
   2b964:	b	2b8b4 <myhtml_tokenizer_state_doctype_name@@Base+0x100>

0002b968 <myhtml_tokenizer_state_after_doctype_name@@Base>:
   2b968:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b96c:	strd	r6, [sp, #8]
   2b970:	str	r8, [sp, #16]
   2b974:	str	lr, [sp, #20]
   2b978:	mov	r5, r0
   2b97c:	ldr	r6, [sp, #24]
   2b980:	add	ip, r2, r3
   2b984:	ldrb	lr, [r2, r3]
   2b988:	sub	r0, lr, #9
   2b98c:	uxtb	r0, r0
   2b990:	cmp	lr, #32
   2b994:	cmpne	r0, #1
   2b998:	movls	r0, #1
   2b99c:	movhi	r0, #0
   2b9a0:	sub	lr, lr, #12
   2b9a4:	uxtb	lr, lr
   2b9a8:	cmp	lr, #1
   2b9ac:	orrls	r0, r0, #1
   2b9b0:	cmp	r0, #0
   2b9b4:	beq	2ba14 <myhtml_tokenizer_state_after_doctype_name@@Base+0xac>
   2b9b8:	cmp	r3, r6
   2b9bc:	bcs	2baa8 <myhtml_tokenizer_state_after_doctype_name@@Base+0x140>
   2b9c0:	sub	r6, r6, #1
   2b9c4:	add	r6, r6, r2
   2b9c8:	rsb	r7, r2, #1
   2b9cc:	add	r4, r7, ip
   2b9d0:	cmp	r6, ip
   2b9d4:	beq	2ba40 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd8>
   2b9d8:	ldrb	lr, [ip, #1]!
   2b9dc:	sub	r0, lr, #9
   2b9e0:	uxtb	r0, r0
   2b9e4:	sub	r3, lr, #12
   2b9e8:	uxtb	r3, r3
   2b9ec:	cmp	r3, #1
   2b9f0:	cmphi	r0, #1
   2b9f4:	movls	r0, #1
   2b9f8:	movhi	r0, #0
   2b9fc:	cmp	lr, #32
   2ba00:	orreq	r0, r0, #1
   2ba04:	cmp	r0, #0
   2ba08:	bne	2b9cc <myhtml_tokenizer_state_after_doctype_name@@Base+0x64>
   2ba0c:	mov	r3, r4
   2ba10:	b	2ba1c <myhtml_tokenizer_state_after_doctype_name@@Base+0xb4>
   2ba14:	cmp	r3, r6
   2ba18:	bcs	2baa0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x138>
   2ba1c:	ldrb	r2, [r2, r3]
   2ba20:	cmp	r2, #62	; 0x3e
   2ba24:	beq	2ba58 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf0>
   2ba28:	ldr	r2, [r5, #192]	; 0xc0
   2ba2c:	add	r2, r2, r3
   2ba30:	str	r2, [r1, #12]
   2ba34:	mov	r2, #68	; 0x44
   2ba38:	str	r2, [r5, #160]	; 0xa0
   2ba3c:	mov	r4, r3
   2ba40:	mov	r0, r4
   2ba44:	ldrd	r4, [sp]
   2ba48:	ldrd	r6, [sp, #8]
   2ba4c:	ldr	r8, [sp, #16]
   2ba50:	add	sp, sp, #20
   2ba54:	pop	{pc}		; (ldr pc, [sp], #4)
   2ba58:	add	r4, r3, #1
   2ba5c:	ldr	r3, [r5, #192]	; 0xc0
   2ba60:	ldr	r2, [r1, #32]
   2ba64:	sub	r3, r3, r2
   2ba68:	add	r3, r3, r4
   2ba6c:	str	r3, [r1, #36]	; 0x24
   2ba70:	mov	r2, r1
   2ba74:	mov	r1, r4
   2ba78:	mov	r0, r5
   2ba7c:	bl	ffc8 <myhtml_queue_add@plt>
   2ba80:	cmp	r0, #0
   2ba84:	moveq	r3, #0
   2ba88:	streq	r3, [r5, #160]	; 0xa0
   2ba8c:	beq	2ba40 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd8>
   2ba90:	mov	r3, #69	; 0x45
   2ba94:	str	r3, [r5, #160]	; 0xa0
   2ba98:	mov	r4, #0
   2ba9c:	b	2ba40 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd8>
   2baa0:	mov	r4, r3
   2baa4:	b	2ba40 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd8>
   2baa8:	mov	r4, r3
   2baac:	b	2ba40 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd8>

0002bab0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   2bab0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2bab4:	strd	r6, [sp, #8]
   2bab8:	str	r8, [sp, #16]
   2babc:	str	lr, [sp, #20]
   2bac0:	ldr	r6, [sp, #24]
   2bac4:	ldr	ip, [r1, #12]
   2bac8:	add	lr, ip, #6
   2bacc:	ldr	r2, [r0, #192]	; 0xc0
   2bad0:	add	r2, r6, r2
   2bad4:	cmp	lr, r2
   2bad8:	bls	2baf4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x44>
   2badc:	mov	r0, r6
   2bae0:	ldrd	r4, [sp]
   2bae4:	ldrd	r6, [sp, #8]
   2bae8:	ldr	r8, [sp, #16]
   2baec:	add	sp, sp, #20
   2baf0:	pop	{pc}		; (ldr pc, [sp], #4)
   2baf4:	mov	r7, r3
   2baf8:	mov	r5, r1
   2bafc:	mov	r4, r0
   2bb00:	mov	r2, #6
   2bb04:	mov	r1, ip
   2bb08:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2bb0c:	mov	r8, r0
   2bb10:	mov	r2, #6
   2bb14:	ldr	r1, [pc, #432]	; 2bccc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x21c>
   2bb18:	add	r1, pc, r1
   2bb1c:	bl	10238 <mycore_strncasecmp@plt>
   2bb20:	subs	r6, r0, #0
   2bb24:	bne	2bbe0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x130>
   2bb28:	ldr	r3, [r5, #40]	; 0x28
   2bb2c:	cmp	r3, #0
   2bb30:	beq	2bbbc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x10c>
   2bb34:	ldr	r3, [r5, #44]	; 0x2c
   2bb38:	ldr	r2, [r4, #56]	; 0x38
   2bb3c:	str	r2, [r3]
   2bb40:	ldr	r3, [r5, #44]	; 0x2c
   2bb44:	ldr	r2, [r3]
   2bb48:	str	r3, [r2, #4]
   2bb4c:	ldr	r3, [r3]
   2bb50:	str	r3, [r5, #44]	; 0x2c
   2bb54:	mov	r2, #0
   2bb58:	str	r2, [r3]
   2bb5c:	ldr	r3, [r5, #44]	; 0x2c
   2bb60:	str	r3, [r4, #56]	; 0x38
   2bb64:	ldr	r3, [r4, #56]	; 0x38
   2bb68:	ldr	r2, [r5, #12]
   2bb6c:	str	r2, [r3, #56]	; 0x38
   2bb70:	ldr	r3, [r4, #56]	; 0x38
   2bb74:	mov	r2, #6
   2bb78:	str	r2, [r3, #60]	; 0x3c
   2bb7c:	ldr	r0, [r4, #8]
   2bb80:	ldr	r1, [r0, #16]
   2bb84:	bl	10898 <myhtml_token_attr_create@plt>
   2bb88:	str	r0, [r4, #56]	; 0x38
   2bb8c:	cmp	r0, #0
   2bb90:	moveq	r3, #69	; 0x45
   2bb94:	streq	r3, [r4, #160]	; 0xa0
   2bb98:	beq	2badc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x2c>
   2bb9c:	mov	r3, #56	; 0x38
   2bba0:	str	r3, [r4, #160]	; 0xa0
   2bba4:	ldr	r6, [r5, #12]
   2bba8:	add	r6, r6, #6
   2bbac:	ldr	r3, [r4, #76]	; 0x4c
   2bbb0:	ldr	r3, [r3, #12]
   2bbb4:	sub	r6, r6, r3
   2bbb8:	b	2badc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x2c>
   2bbbc:	ldr	r3, [r4, #56]	; 0x38
   2bbc0:	str	r3, [r5, #40]	; 0x28
   2bbc4:	str	r3, [r5, #44]	; 0x2c
   2bbc8:	str	r3, [r4, #56]	; 0x38
   2bbcc:	mov	r2, #0
   2bbd0:	str	r2, [r3]
   2bbd4:	ldr	r3, [r4, #56]	; 0x38
   2bbd8:	str	r2, [r3, #4]
   2bbdc:	b	2bb64 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb4>
   2bbe0:	mov	r2, #6
   2bbe4:	ldr	r1, [pc, #228]	; 2bcd0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x220>
   2bbe8:	add	r1, pc, r1
   2bbec:	mov	r0, r8
   2bbf0:	bl	10238 <mycore_strncasecmp@plt>
   2bbf4:	subs	r6, r0, #0
   2bbf8:	bne	2bcb4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x204>
   2bbfc:	ldr	r3, [r5, #40]	; 0x28
   2bc00:	cmp	r3, #0
   2bc04:	beq	2bc90 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1e0>
   2bc08:	ldr	r3, [r5, #44]	; 0x2c
   2bc0c:	ldr	r2, [r4, #56]	; 0x38
   2bc10:	str	r2, [r3]
   2bc14:	ldr	r3, [r5, #44]	; 0x2c
   2bc18:	ldr	r2, [r3]
   2bc1c:	str	r3, [r2, #4]
   2bc20:	ldr	r3, [r3]
   2bc24:	str	r3, [r5, #44]	; 0x2c
   2bc28:	mov	r2, #0
   2bc2c:	str	r2, [r3]
   2bc30:	ldr	r3, [r5, #44]	; 0x2c
   2bc34:	str	r3, [r4, #56]	; 0x38
   2bc38:	ldr	r3, [r4, #56]	; 0x38
   2bc3c:	ldr	r2, [r5, #12]
   2bc40:	str	r2, [r3, #56]	; 0x38
   2bc44:	ldr	r3, [r4, #56]	; 0x38
   2bc48:	mov	r2, #6
   2bc4c:	str	r2, [r3, #60]	; 0x3c
   2bc50:	ldr	r0, [r4, #8]
   2bc54:	ldr	r1, [r0, #16]
   2bc58:	bl	10898 <myhtml_token_attr_create@plt>
   2bc5c:	str	r0, [r4, #56]	; 0x38
   2bc60:	cmp	r0, #0
   2bc64:	moveq	r3, #69	; 0x45
   2bc68:	streq	r3, [r4, #160]	; 0xa0
   2bc6c:	beq	2badc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x2c>
   2bc70:	mov	r3, #59	; 0x3b
   2bc74:	str	r3, [r4, #160]	; 0xa0
   2bc78:	ldr	r6, [r5, #12]
   2bc7c:	add	r6, r6, #6
   2bc80:	ldr	r3, [r4, #76]	; 0x4c
   2bc84:	ldr	r3, [r3, #12]
   2bc88:	sub	r6, r6, r3
   2bc8c:	b	2badc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x2c>
   2bc90:	ldr	r3, [r4, #56]	; 0x38
   2bc94:	str	r3, [r5, #40]	; 0x28
   2bc98:	str	r3, [r5, #44]	; 0x2c
   2bc9c:	str	r3, [r4, #56]	; 0x38
   2bca0:	mov	r2, #0
   2bca4:	str	r2, [r3]
   2bca8:	ldr	r3, [r4, #56]	; 0x38
   2bcac:	str	r2, [r3, #4]
   2bcb0:	b	2bc38 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x188>
   2bcb4:	mov	r3, #1
   2bcb8:	str	r3, [r4, #176]	; 0xb0
   2bcbc:	mov	r3, #66	; 0x42
   2bcc0:	str	r3, [r4, #160]	; 0xa0
   2bcc4:	mov	r6, r7
   2bcc8:	b	2badc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x2c>
   2bccc:	andeq	r4, sp, r8, asr #19
   2bcd0:	strdeq	r4, [sp], -r0

0002bcd4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   2bcd4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2bcd8:	strd	r6, [sp, #8]
   2bcdc:	str	r8, [sp, #16]
   2bce0:	str	lr, [sp, #20]
   2bce4:	mov	r5, r0
   2bce8:	ldr	r6, [sp, #24]
   2bcec:	add	ip, r2, r3
   2bcf0:	ldrb	lr, [r2, r3]
   2bcf4:	sub	r0, lr, #9
   2bcf8:	uxtb	r0, r0
   2bcfc:	cmp	lr, #32
   2bd00:	cmpne	r0, #1
   2bd04:	movls	r0, #1
   2bd08:	movhi	r0, #0
   2bd0c:	sub	lr, lr, #12
   2bd10:	uxtb	lr, lr
   2bd14:	cmp	lr, #1
   2bd18:	orrls	r0, r0, #1
   2bd1c:	cmp	r0, #0
   2bd20:	beq	2bd80 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xac>
   2bd24:	cmp	r3, r6
   2bd28:	bcs	2be80 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x1ac>
   2bd2c:	sub	r6, r6, #1
   2bd30:	add	r6, r6, r2
   2bd34:	rsb	r7, r2, #1
   2bd38:	add	r4, r7, ip
   2bd3c:	cmp	r6, ip
   2bd40:	beq	2bdb8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe4>
   2bd44:	ldrb	lr, [ip, #1]!
   2bd48:	sub	r0, lr, #9
   2bd4c:	uxtb	r0, r0
   2bd50:	sub	r3, lr, #12
   2bd54:	uxtb	r3, r3
   2bd58:	cmp	r3, #1
   2bd5c:	cmphi	r0, #1
   2bd60:	movls	r0, #1
   2bd64:	movhi	r0, #0
   2bd68:	cmp	lr, #32
   2bd6c:	orreq	r0, r0, #1
   2bd70:	cmp	r0, #0
   2bd74:	bne	2bd38 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x64>
   2bd78:	mov	r3, r4
   2bd7c:	b	2bd88 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xb4>
   2bd80:	cmp	r3, r6
   2bd84:	bcs	2be78 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x1a4>
   2bd88:	ldrb	r2, [r2, r3]
   2bd8c:	cmp	r2, #34	; 0x22
   2bd90:	beq	2bdd0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xfc>
   2bd94:	cmp	r2, #39	; 0x27
   2bd98:	beq	2bdfc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x128>
   2bd9c:	cmp	r2, #62	; 0x3e
   2bda0:	beq	2be28 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x154>
   2bda4:	mov	r2, #1
   2bda8:	str	r2, [r5, #176]	; 0xb0
   2bdac:	mov	r2, #66	; 0x42
   2bdb0:	str	r2, [r5, #160]	; 0xa0
   2bdb4:	add	r4, r3, #1
   2bdb8:	mov	r0, r4
   2bdbc:	ldrd	r4, [sp]
   2bdc0:	ldrd	r6, [sp, #8]
   2bdc4:	ldr	r8, [sp, #16]
   2bdc8:	add	sp, sp, #20
   2bdcc:	pop	{pc}		; (ldr pc, [sp], #4)
   2bdd0:	ldr	r1, [r5, #56]	; 0x38
   2bdd4:	ldr	r2, [r5, #192]	; 0xc0
   2bdd8:	add	r2, r2, #1
   2bddc:	add	r2, r2, r3
   2bde0:	str	r2, [r1, #56]	; 0x38
   2bde4:	ldr	r2, [r5, #56]	; 0x38
   2bde8:	mov	r1, #0
   2bdec:	str	r1, [r2, #60]	; 0x3c
   2bdf0:	mov	r2, #57	; 0x39
   2bdf4:	str	r2, [r5, #160]	; 0xa0
   2bdf8:	b	2bdb4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe0>
   2bdfc:	ldr	r1, [r5, #56]	; 0x38
   2be00:	ldr	r2, [r5, #192]	; 0xc0
   2be04:	add	r2, r2, #1
   2be08:	add	r2, r2, r3
   2be0c:	str	r2, [r1, #56]	; 0x38
   2be10:	ldr	r2, [r5, #56]	; 0x38
   2be14:	mov	r1, #0
   2be18:	str	r1, [r2, #60]	; 0x3c
   2be1c:	mov	r2, #58	; 0x3a
   2be20:	str	r2, [r5, #160]	; 0xa0
   2be24:	b	2bdb4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe0>
   2be28:	mov	r2, #1
   2be2c:	str	r2, [r5, #176]	; 0xb0
   2be30:	add	r4, r3, r2
   2be34:	ldr	r3, [r5, #192]	; 0xc0
   2be38:	ldr	r2, [r1, #32]
   2be3c:	sub	r3, r3, r2
   2be40:	add	r3, r3, r4
   2be44:	str	r3, [r1, #36]	; 0x24
   2be48:	mov	r2, r1
   2be4c:	mov	r1, r4
   2be50:	mov	r0, r5
   2be54:	bl	ffc8 <myhtml_queue_add@plt>
   2be58:	cmp	r0, #0
   2be5c:	moveq	r3, #0
   2be60:	streq	r3, [r5, #160]	; 0xa0
   2be64:	beq	2bdb8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe4>
   2be68:	mov	r3, #69	; 0x45
   2be6c:	str	r3, [r5, #160]	; 0xa0
   2be70:	mov	r4, #0
   2be74:	b	2bdb8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe4>
   2be78:	mov	r4, r3
   2be7c:	b	2bdb8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe4>
   2be80:	mov	r4, r3
   2be84:	b	2bdb8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe4>

0002be88 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   2be88:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2be8c:	strd	r6, [sp, #8]
   2be90:	str	r8, [sp, #16]
   2be94:	str	lr, [sp, #20]
   2be98:	ldr	r7, [sp, #24]
   2be9c:	ldrb	lr, [sp, #28]
   2bea0:	cmp	r3, r7
   2bea4:	bcs	2c0ac <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x224>
   2bea8:	mov	r4, r3
   2beac:	mov	r6, r1
   2beb0:	mov	r5, r0
   2beb4:	add	ip, r2, r3
   2beb8:	ldrb	r3, [r2, r3]
   2bebc:	cmp	lr, r3
   2bec0:	beq	2bfc8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x140>
   2bec4:	cmp	r3, #62	; 0x3e
   2bec8:	subne	r1, r2, #1
   2becc:	addne	r1, r1, r7
   2bed0:	rsbne	r3, r2, #1
   2bed4:	beq	2bef8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x70>
   2bed8:	add	r4, r3, ip
   2bedc:	cmp	ip, r1
   2bee0:	beq	2c04c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1c4>
   2bee4:	ldrb	r2, [ip, #1]!
   2bee8:	cmp	r2, lr
   2beec:	beq	2bfc8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x140>
   2bef0:	cmp	r2, #62	; 0x3e
   2bef4:	bne	2bed8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x50>
   2bef8:	mov	r3, #1
   2befc:	str	r3, [r5, #176]	; 0xb0
   2bf00:	ldr	r2, [r5, #56]	; 0x38
   2bf04:	ldr	r1, [r2, #56]	; 0x38
   2bf08:	ldr	r3, [r5, #192]	; 0xc0
   2bf0c:	add	r3, r4, r3
   2bf10:	cmp	r1, r3
   2bf14:	bcs	2bf80 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf8>
   2bf18:	sub	r3, r3, r1
   2bf1c:	str	r3, [r2, #60]	; 0x3c
   2bf20:	ldr	r3, [r6, #40]	; 0x28
   2bf24:	cmp	r3, #0
   2bf28:	beq	2c088 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x200>
   2bf2c:	ldr	r3, [r6, #44]	; 0x2c
   2bf30:	ldr	r2, [r5, #56]	; 0x38
   2bf34:	str	r2, [r3]
   2bf38:	ldr	r3, [r6, #44]	; 0x2c
   2bf3c:	ldr	r2, [r3]
   2bf40:	str	r3, [r2, #4]
   2bf44:	ldr	r3, [r3]
   2bf48:	str	r3, [r6, #44]	; 0x2c
   2bf4c:	mov	r2, #0
   2bf50:	str	r2, [r3]
   2bf54:	ldr	r3, [r6, #44]	; 0x2c
   2bf58:	str	r3, [r5, #56]	; 0x38
   2bf5c:	ldr	r0, [r5, #8]
   2bf60:	ldr	r1, [r0, #16]
   2bf64:	bl	10898 <myhtml_token_attr_create@plt>
   2bf68:	str	r0, [r5, #56]	; 0x38
   2bf6c:	cmp	r0, #0
   2bf70:	moveq	r3, #69	; 0x45
   2bf74:	streq	r3, [r5, #160]	; 0xa0
   2bf78:	moveq	r4, #0
   2bf7c:	beq	2c04c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1c4>
   2bf80:	add	r4, r4, #1
   2bf84:	ldr	r3, [r5, #192]	; 0xc0
   2bf88:	ldr	r2, [r6, #32]
   2bf8c:	sub	r3, r3, r2
   2bf90:	add	r3, r3, r4
   2bf94:	str	r3, [r6, #36]	; 0x24
   2bf98:	mov	r2, r6
   2bf9c:	mov	r1, r4
   2bfa0:	mov	r0, r5
   2bfa4:	bl	ffc8 <myhtml_queue_add@plt>
   2bfa8:	cmp	r0, #0
   2bfac:	movne	r3, #69	; 0x45
   2bfb0:	strne	r3, [r5, #160]	; 0xa0
   2bfb4:	movne	r4, #0
   2bfb8:	bne	2c04c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1c4>
   2bfbc:	mov	r3, #0
   2bfc0:	str	r3, [r5, #160]	; 0xa0
   2bfc4:	b	2c04c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1c4>
   2bfc8:	ldr	r2, [r5, #56]	; 0x38
   2bfcc:	ldr	r3, [r5, #192]	; 0xc0
   2bfd0:	ldr	r1, [r2, #56]	; 0x38
   2bfd4:	sub	r3, r3, r1
   2bfd8:	add	r3, r3, r4
   2bfdc:	str	r3, [r2, #60]	; 0x3c
   2bfe0:	ldr	r3, [r6, #40]	; 0x28
   2bfe4:	cmp	r3, #0
   2bfe8:	beq	2c064 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1dc>
   2bfec:	ldr	r3, [r6, #44]	; 0x2c
   2bff0:	ldr	r2, [r5, #56]	; 0x38
   2bff4:	str	r2, [r3]
   2bff8:	ldr	r3, [r6, #44]	; 0x2c
   2bffc:	ldr	r2, [r3]
   2c000:	str	r3, [r2, #4]
   2c004:	ldr	r3, [r3]
   2c008:	str	r3, [r6, #44]	; 0x2c
   2c00c:	mov	r2, #0
   2c010:	str	r2, [r3]
   2c014:	ldr	r3, [r6, #44]	; 0x2c
   2c018:	str	r3, [r5, #56]	; 0x38
   2c01c:	ldr	r0, [r5, #8]
   2c020:	ldr	r1, [r0, #16]
   2c024:	bl	10898 <myhtml_token_attr_create@plt>
   2c028:	str	r0, [r5, #56]	; 0x38
   2c02c:	cmp	r0, #0
   2c030:	moveq	r3, #69	; 0x45
   2c034:	streq	r3, [r5, #160]	; 0xa0
   2c038:	moveq	r4, #0
   2c03c:	beq	2c04c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1c4>
   2c040:	mov	r3, #59	; 0x3b
   2c044:	str	r3, [r5, #160]	; 0xa0
   2c048:	add	r4, r4, #1
   2c04c:	mov	r0, r4
   2c050:	ldrd	r4, [sp]
   2c054:	ldrd	r6, [sp, #8]
   2c058:	ldr	r8, [sp, #16]
   2c05c:	add	sp, sp, #20
   2c060:	pop	{pc}		; (ldr pc, [sp], #4)
   2c064:	ldr	r3, [r5, #56]	; 0x38
   2c068:	str	r3, [r6, #40]	; 0x28
   2c06c:	str	r3, [r6, #44]	; 0x2c
   2c070:	str	r3, [r5, #56]	; 0x38
   2c074:	mov	r2, #0
   2c078:	str	r2, [r3]
   2c07c:	ldr	r3, [r5, #56]	; 0x38
   2c080:	str	r2, [r3, #4]
   2c084:	b	2c01c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x194>
   2c088:	ldr	r3, [r5, #56]	; 0x38
   2c08c:	str	r3, [r6, #40]	; 0x28
   2c090:	str	r3, [r6, #44]	; 0x2c
   2c094:	str	r3, [r5, #56]	; 0x38
   2c098:	mov	r2, #0
   2c09c:	str	r2, [r3]
   2c0a0:	ldr	r3, [r5, #56]	; 0x38
   2c0a4:	str	r2, [r3, #4]
   2c0a8:	b	2bf5c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xd4>
   2c0ac:	mov	r4, r3
   2c0b0:	b	2c04c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1c4>

0002c0b4 <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   2c0b4:	push	{lr}		; (str lr, [sp, #-4]!)
   2c0b8:	sub	sp, sp, #12
   2c0bc:	mov	ip, #34	; 0x22
   2c0c0:	str	ip, [sp, #4]
   2c0c4:	ldr	ip, [sp, #16]
   2c0c8:	str	ip, [sp]
   2c0cc:	bl	1046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2c0d0:	add	sp, sp, #12
   2c0d4:	pop	{pc}		; (ldr pc, [sp], #4)

0002c0d8 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   2c0d8:	push	{lr}		; (str lr, [sp, #-4]!)
   2c0dc:	sub	sp, sp, #12
   2c0e0:	mov	ip, #39	; 0x27
   2c0e4:	str	ip, [sp, #4]
   2c0e8:	ldr	ip, [sp, #16]
   2c0ec:	str	ip, [sp]
   2c0f0:	bl	1046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2c0f4:	add	sp, sp, #12
   2c0f8:	pop	{pc}		; (ldr pc, [sp], #4)

0002c0fc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   2c0fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c100:	strd	r6, [sp, #8]
   2c104:	str	r8, [sp, #16]
   2c108:	str	lr, [sp, #20]
   2c10c:	mov	r5, r0
   2c110:	ldr	r6, [sp, #24]
   2c114:	add	ip, r2, r3
   2c118:	ldrb	lr, [r2, r3]
   2c11c:	sub	r0, lr, #9
   2c120:	uxtb	r0, r0
   2c124:	cmp	lr, #32
   2c128:	cmpne	r0, #1
   2c12c:	movls	r0, #1
   2c130:	movhi	r0, #0
   2c134:	sub	lr, lr, #12
   2c138:	uxtb	lr, lr
   2c13c:	cmp	lr, #1
   2c140:	orrls	r0, r0, #1
   2c144:	cmp	r0, #0
   2c148:	beq	2c1a8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xac>
   2c14c:	cmp	r3, r6
   2c150:	bcs	2c2a4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x1a8>
   2c154:	sub	r6, r6, #1
   2c158:	add	r6, r6, r2
   2c15c:	rsb	r7, r2, #1
   2c160:	add	r4, r7, ip
   2c164:	cmp	r6, ip
   2c168:	beq	2c210 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x114>
   2c16c:	ldrb	lr, [ip, #1]!
   2c170:	sub	r0, lr, #9
   2c174:	uxtb	r0, r0
   2c178:	sub	r3, lr, #12
   2c17c:	uxtb	r3, r3
   2c180:	cmp	r3, #1
   2c184:	cmphi	r0, #1
   2c188:	movls	r0, #1
   2c18c:	movhi	r0, #0
   2c190:	cmp	lr, #32
   2c194:	orreq	r0, r0, #1
   2c198:	cmp	r0, #0
   2c19c:	bne	2c160 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x64>
   2c1a0:	mov	r3, r4
   2c1a4:	b	2c1b0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xb4>
   2c1a8:	cmp	r3, r6
   2c1ac:	bcs	2c29c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x1a0>
   2c1b0:	ldrb	r2, [r2, r3]
   2c1b4:	cmp	r2, #34	; 0x22
   2c1b8:	beq	2c1e4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe8>
   2c1bc:	cmp	r2, #39	; 0x27
   2c1c0:	beq	2c228 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x12c>
   2c1c4:	cmp	r2, #62	; 0x3e
   2c1c8:	beq	2c254 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x158>
   2c1cc:	mov	r2, #1
   2c1d0:	str	r2, [r5, #176]	; 0xb0
   2c1d4:	mov	r2, #66	; 0x42
   2c1d8:	str	r2, [r5, #160]	; 0xa0
   2c1dc:	mov	r4, r3
   2c1e0:	b	2c210 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x114>
   2c1e4:	ldr	r1, [r5, #56]	; 0x38
   2c1e8:	ldr	r2, [r5, #192]	; 0xc0
   2c1ec:	add	r2, r2, #1
   2c1f0:	add	r2, r2, r3
   2c1f4:	str	r2, [r1, #56]	; 0x38
   2c1f8:	ldr	r2, [r5, #56]	; 0x38
   2c1fc:	mov	r1, #0
   2c200:	str	r1, [r2, #60]	; 0x3c
   2c204:	mov	r2, #63	; 0x3f
   2c208:	str	r2, [r5, #160]	; 0xa0
   2c20c:	add	r4, r3, #1
   2c210:	mov	r0, r4
   2c214:	ldrd	r4, [sp]
   2c218:	ldrd	r6, [sp, #8]
   2c21c:	ldr	r8, [sp, #16]
   2c220:	add	sp, sp, #20
   2c224:	pop	{pc}		; (ldr pc, [sp], #4)
   2c228:	ldr	r1, [r5, #56]	; 0x38
   2c22c:	ldr	r2, [r5, #192]	; 0xc0
   2c230:	add	r2, r2, #1
   2c234:	add	r2, r2, r3
   2c238:	str	r2, [r1, #56]	; 0x38
   2c23c:	ldr	r2, [r5, #56]	; 0x38
   2c240:	mov	r1, #0
   2c244:	str	r1, [r2, #60]	; 0x3c
   2c248:	mov	r2, #64	; 0x40
   2c24c:	str	r2, [r5, #160]	; 0xa0
   2c250:	b	2c20c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x110>
   2c254:	add	r4, r3, #1
   2c258:	ldr	r3, [r5, #192]	; 0xc0
   2c25c:	ldr	r2, [r1, #32]
   2c260:	sub	r3, r3, r2
   2c264:	add	r3, r3, r4
   2c268:	str	r3, [r1, #36]	; 0x24
   2c26c:	mov	r2, r1
   2c270:	mov	r1, r4
   2c274:	mov	r0, r5
   2c278:	bl	ffc8 <myhtml_queue_add@plt>
   2c27c:	cmp	r0, #0
   2c280:	moveq	r3, #0
   2c284:	streq	r3, [r5, #160]	; 0xa0
   2c288:	beq	2c210 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x114>
   2c28c:	mov	r3, #69	; 0x45
   2c290:	str	r3, [r5, #160]	; 0xa0
   2c294:	mov	r4, #0
   2c298:	b	2c210 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x114>
   2c29c:	mov	r4, r3
   2c2a0:	b	2c210 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x114>
   2c2a4:	mov	r4, r3
   2c2a8:	b	2c210 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x114>

0002c2ac <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   2c2ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c2b0:	strd	r6, [sp, #8]
   2c2b4:	str	r8, [sp, #16]
   2c2b8:	str	lr, [sp, #20]
   2c2bc:	ldr	r7, [sp, #24]
   2c2c0:	ldrb	lr, [sp, #28]
   2c2c4:	cmp	r3, r7
   2c2c8:	bcs	2c4d0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x224>
   2c2cc:	mov	r4, r3
   2c2d0:	mov	r6, r1
   2c2d4:	mov	r5, r0
   2c2d8:	add	ip, r2, r3
   2c2dc:	ldrb	r3, [r2, r3]
   2c2e0:	cmp	lr, r3
   2c2e4:	beq	2c3ec <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x140>
   2c2e8:	cmp	r3, #62	; 0x3e
   2c2ec:	subne	r1, r2, #1
   2c2f0:	addne	r1, r1, r7
   2c2f4:	rsbne	r3, r2, #1
   2c2f8:	beq	2c31c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x70>
   2c2fc:	add	r4, r3, ip
   2c300:	cmp	ip, r1
   2c304:	beq	2c470 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1c4>
   2c308:	ldrb	r2, [ip, #1]!
   2c30c:	cmp	r2, lr
   2c310:	beq	2c3ec <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x140>
   2c314:	cmp	r2, #62	; 0x3e
   2c318:	bne	2c2fc <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x50>
   2c31c:	mov	r3, #1
   2c320:	str	r3, [r5, #176]	; 0xb0
   2c324:	ldr	r2, [r5, #56]	; 0x38
   2c328:	ldr	r1, [r2, #56]	; 0x38
   2c32c:	ldr	r3, [r5, #192]	; 0xc0
   2c330:	add	r3, r4, r3
   2c334:	cmp	r1, r3
   2c338:	bcs	2c3a4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf8>
   2c33c:	sub	r3, r3, r1
   2c340:	str	r3, [r2, #60]	; 0x3c
   2c344:	ldr	r3, [r6, #40]	; 0x28
   2c348:	cmp	r3, #0
   2c34c:	beq	2c4ac <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x200>
   2c350:	ldr	r3, [r6, #44]	; 0x2c
   2c354:	ldr	r2, [r5, #56]	; 0x38
   2c358:	str	r2, [r3]
   2c35c:	ldr	r3, [r6, #44]	; 0x2c
   2c360:	ldr	r2, [r3]
   2c364:	str	r3, [r2, #4]
   2c368:	ldr	r3, [r3]
   2c36c:	str	r3, [r6, #44]	; 0x2c
   2c370:	mov	r2, #0
   2c374:	str	r2, [r3]
   2c378:	ldr	r3, [r6, #44]	; 0x2c
   2c37c:	str	r3, [r5, #56]	; 0x38
   2c380:	ldr	r0, [r5, #8]
   2c384:	ldr	r1, [r0, #16]
   2c388:	bl	10898 <myhtml_token_attr_create@plt>
   2c38c:	str	r0, [r5, #56]	; 0x38
   2c390:	cmp	r0, #0
   2c394:	moveq	r3, #69	; 0x45
   2c398:	streq	r3, [r5, #160]	; 0xa0
   2c39c:	moveq	r4, #0
   2c3a0:	beq	2c470 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1c4>
   2c3a4:	add	r4, r4, #1
   2c3a8:	ldr	r3, [r5, #192]	; 0xc0
   2c3ac:	ldr	r2, [r6, #32]
   2c3b0:	sub	r3, r3, r2
   2c3b4:	add	r3, r3, r4
   2c3b8:	str	r3, [r6, #36]	; 0x24
   2c3bc:	mov	r2, r6
   2c3c0:	mov	r1, r4
   2c3c4:	mov	r0, r5
   2c3c8:	bl	ffc8 <myhtml_queue_add@plt>
   2c3cc:	cmp	r0, #0
   2c3d0:	movne	r3, #69	; 0x45
   2c3d4:	strne	r3, [r5, #160]	; 0xa0
   2c3d8:	movne	r4, #0
   2c3dc:	bne	2c470 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1c4>
   2c3e0:	mov	r3, #0
   2c3e4:	str	r3, [r5, #160]	; 0xa0
   2c3e8:	b	2c470 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1c4>
   2c3ec:	ldr	r2, [r5, #56]	; 0x38
   2c3f0:	ldr	r3, [r5, #192]	; 0xc0
   2c3f4:	ldr	r1, [r2, #56]	; 0x38
   2c3f8:	sub	r3, r3, r1
   2c3fc:	add	r3, r3, r4
   2c400:	str	r3, [r2, #60]	; 0x3c
   2c404:	ldr	r3, [r6, #40]	; 0x28
   2c408:	cmp	r3, #0
   2c40c:	beq	2c488 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1dc>
   2c410:	ldr	r3, [r6, #44]	; 0x2c
   2c414:	ldr	r2, [r5, #56]	; 0x38
   2c418:	str	r2, [r3]
   2c41c:	ldr	r3, [r6, #44]	; 0x2c
   2c420:	ldr	r2, [r3]
   2c424:	str	r3, [r2, #4]
   2c428:	ldr	r3, [r3]
   2c42c:	str	r3, [r6, #44]	; 0x2c
   2c430:	mov	r2, #0
   2c434:	str	r2, [r3]
   2c438:	ldr	r3, [r6, #44]	; 0x2c
   2c43c:	str	r3, [r5, #56]	; 0x38
   2c440:	ldr	r0, [r5, #8]
   2c444:	ldr	r1, [r0, #16]
   2c448:	bl	10898 <myhtml_token_attr_create@plt>
   2c44c:	str	r0, [r5, #56]	; 0x38
   2c450:	cmp	r0, #0
   2c454:	moveq	r3, #69	; 0x45
   2c458:	streq	r3, [r5, #160]	; 0xa0
   2c45c:	moveq	r4, #0
   2c460:	beq	2c470 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1c4>
   2c464:	mov	r3, #65	; 0x41
   2c468:	str	r3, [r5, #160]	; 0xa0
   2c46c:	add	r4, r4, #1
   2c470:	mov	r0, r4
   2c474:	ldrd	r4, [sp]
   2c478:	ldrd	r6, [sp, #8]
   2c47c:	ldr	r8, [sp, #16]
   2c480:	add	sp, sp, #20
   2c484:	pop	{pc}		; (ldr pc, [sp], #4)
   2c488:	ldr	r3, [r5, #56]	; 0x38
   2c48c:	str	r3, [r6, #40]	; 0x28
   2c490:	str	r3, [r6, #44]	; 0x2c
   2c494:	str	r3, [r5, #56]	; 0x38
   2c498:	mov	r2, #0
   2c49c:	str	r2, [r3]
   2c4a0:	ldr	r3, [r5, #56]	; 0x38
   2c4a4:	str	r2, [r3, #4]
   2c4a8:	b	2c440 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x194>
   2c4ac:	ldr	r3, [r5, #56]	; 0x38
   2c4b0:	str	r3, [r6, #40]	; 0x28
   2c4b4:	str	r3, [r6, #44]	; 0x2c
   2c4b8:	str	r3, [r5, #56]	; 0x38
   2c4bc:	mov	r2, #0
   2c4c0:	str	r2, [r3]
   2c4c4:	ldr	r3, [r5, #56]	; 0x38
   2c4c8:	str	r2, [r3, #4]
   2c4cc:	b	2c380 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xd4>
   2c4d0:	mov	r4, r3
   2c4d4:	b	2c470 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1c4>

0002c4d8 <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   2c4d8:	push	{lr}		; (str lr, [sp, #-4]!)
   2c4dc:	sub	sp, sp, #12
   2c4e0:	mov	ip, #34	; 0x22
   2c4e4:	str	ip, [sp, #4]
   2c4e8:	ldr	ip, [sp, #16]
   2c4ec:	str	ip, [sp]
   2c4f0:	bl	10a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2c4f4:	add	sp, sp, #12
   2c4f8:	pop	{pc}		; (ldr pc, [sp], #4)

0002c4fc <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   2c4fc:	push	{lr}		; (str lr, [sp, #-4]!)
   2c500:	sub	sp, sp, #12
   2c504:	mov	ip, #39	; 0x27
   2c508:	str	ip, [sp, #4]
   2c50c:	ldr	ip, [sp, #16]
   2c510:	str	ip, [sp]
   2c514:	bl	10a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2c518:	add	sp, sp, #12
   2c51c:	pop	{pc}		; (ldr pc, [sp], #4)

0002c520 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   2c520:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c524:	strd	r6, [sp, #8]
   2c528:	str	r8, [sp, #16]
   2c52c:	str	lr, [sp, #20]
   2c530:	mov	r5, r0
   2c534:	ldr	r6, [sp, #24]
   2c538:	add	ip, r2, r3
   2c53c:	ldrb	lr, [r2, r3]
   2c540:	sub	r0, lr, #9
   2c544:	uxtb	r0, r0
   2c548:	cmp	lr, #32
   2c54c:	cmpne	r0, #1
   2c550:	movls	r0, #1
   2c554:	movhi	r0, #0
   2c558:	sub	lr, lr, #12
   2c55c:	uxtb	lr, lr
   2c560:	cmp	lr, #1
   2c564:	orrls	r0, r0, #1
   2c568:	cmp	r0, #0
   2c56c:	beq	2c5cc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xac>
   2c570:	cmp	r3, r6
   2c574:	bcs	2c654 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x134>
   2c578:	sub	r6, r6, #1
   2c57c:	add	r6, r6, r2
   2c580:	rsb	r7, r2, #1
   2c584:	add	r4, r7, ip
   2c588:	cmp	r6, ip
   2c58c:	beq	2c5ec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xcc>
   2c590:	ldrb	lr, [ip, #1]!
   2c594:	sub	r0, lr, #9
   2c598:	uxtb	r0, r0
   2c59c:	sub	r3, lr, #12
   2c5a0:	uxtb	r3, r3
   2c5a4:	cmp	r3, #1
   2c5a8:	cmphi	r0, #1
   2c5ac:	movls	r0, #1
   2c5b0:	movhi	r0, #0
   2c5b4:	cmp	lr, #32
   2c5b8:	orreq	r0, r0, #1
   2c5bc:	cmp	r0, #0
   2c5c0:	bne	2c584 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x64>
   2c5c4:	mov	r3, r4
   2c5c8:	b	2c5d4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xb4>
   2c5cc:	cmp	r3, r6
   2c5d0:	bcs	2c64c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x12c>
   2c5d4:	ldrb	r2, [r2, r3]
   2c5d8:	cmp	r2, #62	; 0x3e
   2c5dc:	movne	r2, #66	; 0x42
   2c5e0:	strne	r2, [r5, #160]	; 0xa0
   2c5e4:	movne	r4, r3
   2c5e8:	beq	2c604 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe4>
   2c5ec:	mov	r0, r4
   2c5f0:	ldrd	r4, [sp]
   2c5f4:	ldrd	r6, [sp, #8]
   2c5f8:	ldr	r8, [sp, #16]
   2c5fc:	add	sp, sp, #20
   2c600:	pop	{pc}		; (ldr pc, [sp], #4)
   2c604:	add	r4, r3, #1
   2c608:	ldr	r3, [r5, #192]	; 0xc0
   2c60c:	ldr	r2, [r1, #32]
   2c610:	sub	r3, r3, r2
   2c614:	add	r3, r3, r4
   2c618:	str	r3, [r1, #36]	; 0x24
   2c61c:	mov	r2, r1
   2c620:	mov	r1, r4
   2c624:	mov	r0, r5
   2c628:	bl	ffc8 <myhtml_queue_add@plt>
   2c62c:	cmp	r0, #0
   2c630:	movne	r3, #69	; 0x45
   2c634:	strne	r3, [r5, #160]	; 0xa0
   2c638:	movne	r4, #0
   2c63c:	bne	2c5ec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xcc>
   2c640:	mov	r3, #0
   2c644:	str	r3, [r5, #160]	; 0xa0
   2c648:	b	2c5ec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xcc>
   2c64c:	mov	r4, r3
   2c650:	b	2c5ec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xcc>
   2c654:	mov	r4, r3
   2c658:	b	2c5ec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xcc>

0002c65c <myhtml_tokenizer_state_bogus_doctype@@Base>:
   2c65c:	strd	r4, [sp, #-16]!
   2c660:	str	r6, [sp, #8]
   2c664:	str	lr, [sp, #12]
   2c668:	ldr	lr, [sp, #16]
   2c66c:	cmp	r3, lr
   2c670:	bcs	2c708 <myhtml_tokenizer_state_bogus_doctype@@Base+0xac>
   2c674:	add	ip, r2, r3
   2c678:	ldrb	r4, [r2, r3]
   2c67c:	cmp	r4, #62	; 0x3e
   2c680:	subne	r5, r2, #1
   2c684:	addne	r5, r5, lr
   2c688:	rsbne	r3, r2, #1
   2c68c:	beq	2c700 <myhtml_tokenizer_state_bogus_doctype@@Base+0xa4>
   2c690:	add	r4, r3, ip
   2c694:	cmp	ip, r5
   2c698:	beq	2c6ec <myhtml_tokenizer_state_bogus_doctype@@Base+0x90>
   2c69c:	ldrb	lr, [ip, #1]!
   2c6a0:	cmp	lr, #62	; 0x3e
   2c6a4:	bne	2c690 <myhtml_tokenizer_state_bogus_doctype@@Base+0x34>
   2c6a8:	mov	r2, r1
   2c6ac:	mov	r5, r0
   2c6b0:	add	r4, r4, #1
   2c6b4:	ldr	r3, [r0, #192]	; 0xc0
   2c6b8:	ldr	r1, [r1, #32]
   2c6bc:	sub	r3, r3, r1
   2c6c0:	add	r3, r3, r4
   2c6c4:	str	r3, [r2, #36]	; 0x24
   2c6c8:	mov	r1, r4
   2c6cc:	bl	ffc8 <myhtml_queue_add@plt>
   2c6d0:	cmp	r0, #0
   2c6d4:	movne	r3, #69	; 0x45
   2c6d8:	strne	r3, [r5, #160]	; 0xa0
   2c6dc:	movne	r4, #0
   2c6e0:	bne	2c6ec <myhtml_tokenizer_state_bogus_doctype@@Base+0x90>
   2c6e4:	mov	r3, #0
   2c6e8:	str	r3, [r5, #160]	; 0xa0
   2c6ec:	mov	r0, r4
   2c6f0:	ldrd	r4, [sp]
   2c6f4:	ldr	r6, [sp, #8]
   2c6f8:	add	sp, sp, #12
   2c6fc:	pop	{pc}		; (ldr pc, [sp], #4)
   2c700:	mov	r4, r3
   2c704:	b	2c6a8 <myhtml_tokenizer_state_bogus_doctype@@Base+0x4c>
   2c708:	mov	r4, r3
   2c70c:	b	2c6ec <myhtml_tokenizer_state_bogus_doctype@@Base+0x90>

0002c710 <myhtml_tokenizer_end_state_data@@Base>:
   2c710:	strd	r4, [sp, #-16]!
   2c714:	str	r6, [sp, #8]
   2c718:	str	lr, [sp, #12]
   2c71c:	sub	sp, sp, #8
   2c720:	mov	r5, r3
   2c724:	ldr	r3, [sp, #24]
   2c728:	ldr	ip, [r1, #32]
   2c72c:	sub	ip, r3, ip
   2c730:	ldr	r6, [r0, #192]	; 0xc0
   2c734:	add	ip, ip, r6
   2c738:	str	ip, [r1, #36]	; 0x24
   2c73c:	ldr	ip, [r0, #192]	; 0xc0
   2c740:	mov	lr, #512	; 0x200
   2c744:	str	lr, [sp]
   2c748:	add	r3, r3, ip
   2c74c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c750:	mov	r0, r5
   2c754:	add	sp, sp, #8
   2c758:	ldrd	r4, [sp]
   2c75c:	ldr	r6, [sp, #8]
   2c760:	add	sp, sp, #12
   2c764:	pop	{pc}		; (ldr pc, [sp], #4)

0002c768 <myhtml_tokenizer_end_state_tag_open@@Base>:
   2c768:	strd	r4, [sp, #-16]!
   2c76c:	str	r6, [sp, #8]
   2c770:	str	lr, [sp, #12]
   2c774:	sub	sp, sp, #8
   2c778:	mov	r5, r0
   2c77c:	mov	r4, r1
   2c780:	mov	r6, r3
   2c784:	ldr	r3, [sp, #24]
   2c788:	ldr	r1, [r1, #32]
   2c78c:	sub	r1, r3, r1
   2c790:	ldr	r0, [r0, #192]	; 0xc0
   2c794:	add	r1, r1, r0
   2c798:	str	r1, [r4, #36]	; 0x24
   2c79c:	ldr	r1, [r4, #24]
   2c7a0:	ldr	r0, [r5, #192]	; 0xc0
   2c7a4:	add	ip, r0, r3
   2c7a8:	cmp	r1, ip
   2c7ac:	bcs	2c7f4 <myhtml_tokenizer_end_state_tag_open@@Base+0x8c>
   2c7b0:	cmp	r1, #0
   2c7b4:	beq	2c80c <myhtml_tokenizer_end_state_tag_open@@Base+0xa4>
   2c7b8:	sub	r1, r6, r1
   2c7bc:	add	r1, r1, r0
   2c7c0:	str	r1, [r4, #28]
   2c7c4:	mov	r3, r6
   2c7c8:	mov	r1, r4
   2c7cc:	mov	r0, r5
   2c7d0:	bl	10bd4 <myhtml_check_tag_parser@plt>
   2c7d4:	mov	r2, r4
   2c7d8:	mov	r1, r6
   2c7dc:	mov	r0, r5
   2c7e0:	bl	ffc8 <myhtml_queue_add@plt>
   2c7e4:	cmp	r0, #0
   2c7e8:	movne	r3, #69	; 0x45
   2c7ec:	strne	r3, [r5, #160]	; 0xa0
   2c7f0:	movne	r6, #0
   2c7f4:	mov	r0, r6
   2c7f8:	add	sp, sp, #8
   2c7fc:	ldrd	r4, [sp]
   2c800:	ldr	r6, [sp, #8]
   2c804:	add	sp, sp, #12
   2c808:	pop	{pc}		; (ldr pc, [sp], #4)
   2c80c:	ldr	r1, [r4, #48]	; 0x30
   2c810:	ldr	r0, [r4, #48]	; 0x30
   2c814:	and	r1, r1, #8
   2c818:	eor	r1, r1, r0
   2c81c:	str	r1, [r4, #48]	; 0x30
   2c820:	ldr	r1, [r5, #192]	; 0xc0
   2c824:	mov	r0, #512	; 0x200
   2c828:	str	r0, [sp]
   2c82c:	add	r3, r3, r1
   2c830:	mov	r1, r4
   2c834:	mov	r0, r5
   2c838:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c83c:	b	2c7f4 <myhtml_tokenizer_end_state_tag_open@@Base+0x8c>

0002c840 <myhtml_tokenizer_end_state_tag_name@@Base>:
   2c840:	strd	r4, [sp, #-16]!
   2c844:	str	r6, [sp, #8]
   2c848:	str	lr, [sp, #12]
   2c84c:	sub	sp, sp, #8
   2c850:	mov	r5, r3
   2c854:	ldr	r3, [sp, #24]
   2c858:	ldr	ip, [r1, #32]
   2c85c:	sub	ip, r3, ip
   2c860:	ldr	r6, [r0, #192]	; 0xc0
   2c864:	add	ip, ip, r6
   2c868:	str	ip, [r1, #36]	; 0x24
   2c86c:	ldr	ip, [r0, #192]	; 0xc0
   2c870:	mov	lr, #512	; 0x200
   2c874:	str	lr, [sp]
   2c878:	add	r3, r3, ip
   2c87c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c880:	mov	r0, r5
   2c884:	add	sp, sp, #8
   2c888:	ldrd	r4, [sp]
   2c88c:	ldr	r6, [sp, #8]
   2c890:	add	sp, sp, #12
   2c894:	pop	{pc}		; (ldr pc, [sp], #4)

0002c898 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2c898:	strd	r4, [sp, #-12]!
   2c89c:	str	lr, [sp, #8]
   2c8a0:	sub	sp, sp, #12
   2c8a4:	mov	r4, r3
   2c8a8:	ldr	r3, [sp, #24]
   2c8ac:	ldr	ip, [r1, #32]
   2c8b0:	sub	ip, r3, ip
   2c8b4:	ldr	lr, [r0, #192]	; 0xc0
   2c8b8:	add	ip, ip, lr
   2c8bc:	str	ip, [r1, #36]	; 0x24
   2c8c0:	ldr	ip, [r1, #24]
   2c8c4:	ldr	lr, [r0, #192]	; 0xc0
   2c8c8:	add	r5, lr, r3
   2c8cc:	cmp	ip, r5
   2c8d0:	bcc	2c8e8 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x50>
   2c8d4:	mov	r0, r4
   2c8d8:	add	sp, sp, #12
   2c8dc:	ldrd	r4, [sp]
   2c8e0:	add	sp, sp, #8
   2c8e4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c8e8:	sub	ip, r4, ip
   2c8ec:	add	ip, ip, lr
   2c8f0:	str	ip, [r1, #28]
   2c8f4:	ldr	ip, [r1, #48]	; 0x30
   2c8f8:	ldr	lr, [r1, #48]	; 0x30
   2c8fc:	and	ip, ip, #8
   2c900:	eor	ip, ip, lr
   2c904:	str	ip, [r1, #48]	; 0x30
   2c908:	ldr	ip, [r0, #192]	; 0xc0
   2c90c:	mov	lr, #512	; 0x200
   2c910:	str	lr, [sp]
   2c914:	add	r3, r3, ip
   2c918:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c91c:	b	2c8d4 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x3c>

0002c920 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   2c920:	strd	r4, [sp, #-16]!
   2c924:	str	r6, [sp, #8]
   2c928:	str	lr, [sp, #12]
   2c92c:	sub	sp, sp, #8
   2c930:	mov	r5, r3
   2c934:	ldr	r3, [sp, #24]
   2c938:	ldr	ip, [r1, #32]
   2c93c:	sub	ip, r3, ip
   2c940:	ldr	r6, [r0, #192]	; 0xc0
   2c944:	add	ip, ip, r6
   2c948:	str	ip, [r1, #36]	; 0x24
   2c94c:	ldr	ip, [r0, #192]	; 0xc0
   2c950:	mov	lr, #512	; 0x200
   2c954:	str	lr, [sp]
   2c958:	add	r3, r3, ip
   2c95c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2c960:	mov	r0, r5
   2c964:	add	sp, sp, #8
   2c968:	ldrd	r4, [sp]
   2c96c:	ldr	r6, [sp, #8]
   2c970:	add	sp, sp, #12
   2c974:	pop	{pc}		; (ldr pc, [sp], #4)

0002c978 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2c978:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c97c:	strd	r6, [sp, #8]
   2c980:	str	r8, [sp, #16]
   2c984:	str	lr, [sp, #20]
   2c988:	sub	sp, sp, #8
   2c98c:	mov	r4, r1
   2c990:	mov	r7, r3
   2c994:	ldr	r6, [sp, #32]
   2c998:	ldr	r3, [r1, #32]
   2c99c:	sub	r3, r6, r3
   2c9a0:	ldr	r1, [r0, #192]	; 0xc0
   2c9a4:	add	r3, r3, r1
   2c9a8:	str	r3, [r4, #36]	; 0x24
   2c9ac:	ldr	r3, [r4, #24]
   2c9b0:	cmp	r3, #1
   2c9b4:	bhi	2c9d4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x5c>
   2c9b8:	mov	r0, r7
   2c9bc:	add	sp, sp, #8
   2c9c0:	ldrd	r4, [sp]
   2c9c4:	ldrd	r6, [sp, #8]
   2c9c8:	ldr	r8, [sp, #16]
   2c9cc:	add	sp, sp, #20
   2c9d0:	pop	{pc}		; (ldr pc, [sp], #4)
   2c9d4:	mov	r5, r0
   2c9d8:	ldr	r8, [r0, #76]	; 0x4c
   2c9dc:	str	r6, [sp]
   2c9e0:	mov	r1, r4
   2c9e4:	bl	ff74 <myhtml_tokenizer_state_bogus_comment@plt>
   2c9e8:	str	r0, [r8, #4]
   2c9ec:	ldr	r2, [r5, #64]	; 0x40
   2c9f0:	cmp	r2, r4
   2c9f4:	beq	2ca6c <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xf4>
   2c9f8:	ldr	r1, [r2, #24]
   2c9fc:	ldr	r3, [r5, #192]	; 0xc0
   2ca00:	add	r3, r6, r3
   2ca04:	sub	r3, r3, r1
   2ca08:	str	r3, [r2, #28]
   2ca0c:	cmp	r3, #0
   2ca10:	beq	2c9b8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x40>
   2ca14:	ldr	r3, [r2, #48]	; 0x30
   2ca18:	ldr	r0, [r2, #48]	; 0x30
   2ca1c:	and	r3, r3, #8
   2ca20:	eor	r3, r3, r0
   2ca24:	str	r3, [r2, #48]	; 0x30
   2ca28:	mov	r3, #1
   2ca2c:	str	r3, [r2]
   2ca30:	ldr	r3, [r2, #48]	; 0x30
   2ca34:	orr	r3, r3, #512	; 0x200
   2ca38:	str	r3, [r2, #48]	; 0x30
   2ca3c:	ldr	r3, [r5, #192]	; 0xc0
   2ca40:	add	r6, r6, r3
   2ca44:	sub	r1, r6, r1
   2ca48:	str	r1, [r2, #28]
   2ca4c:	mov	r1, r7
   2ca50:	mov	r0, r5
   2ca54:	bl	ffc8 <myhtml_queue_add@plt>
   2ca58:	cmp	r0, #0
   2ca5c:	movne	r3, #69	; 0x45
   2ca60:	strne	r3, [r5, #160]	; 0xa0
   2ca64:	movne	r7, #0
   2ca68:	b	2c9b8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x40>
   2ca6c:	ldr	r3, [r4, #48]	; 0x30
   2ca70:	ldr	r2, [r4, #48]	; 0x30
   2ca74:	and	r3, r3, #8
   2ca78:	eor	r3, r3, r2
   2ca7c:	str	r3, [r4, #48]	; 0x30
   2ca80:	mov	r3, #2
   2ca84:	str	r3, [r4]
   2ca88:	ldr	r3, [r4, #48]	; 0x30
   2ca8c:	orr	r3, r3, #1024	; 0x400
   2ca90:	str	r3, [r4, #48]	; 0x30
   2ca94:	ldr	r3, [r4, #24]
   2ca98:	sub	r6, r6, r3
   2ca9c:	ldr	r3, [r5, #192]	; 0xc0
   2caa0:	add	r6, r6, r3
   2caa4:	str	r6, [r4, #28]
   2caa8:	mov	r2, r4
   2caac:	mov	r1, r7
   2cab0:	mov	r0, r5
   2cab4:	bl	ffc8 <myhtml_queue_add@plt>
   2cab8:	cmp	r0, #0
   2cabc:	beq	2c9b8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x40>
   2cac0:	mov	r3, #69	; 0x45
   2cac4:	str	r3, [r5, #160]	; 0xa0
   2cac8:	mov	r7, #0
   2cacc:	b	2c9b8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x40>

0002cad0 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2cad0:	strd	r4, [sp, #-16]!
   2cad4:	str	r6, [sp, #8]
   2cad8:	str	lr, [sp, #12]
   2cadc:	mov	r5, r0
   2cae0:	mov	r2, r1
   2cae4:	mov	r4, r3
   2cae8:	ldr	r1, [r1, #32]
   2caec:	ldr	r3, [sp, #16]
   2caf0:	sub	r3, r3, r1
   2caf4:	ldr	r1, [r0, #192]	; 0xc0
   2caf8:	add	r3, r3, r1
   2cafc:	str	r3, [r2, #36]	; 0x24
   2cb00:	mov	r1, r4
   2cb04:	bl	ffc8 <myhtml_queue_add@plt>
   2cb08:	cmp	r0, #0
   2cb0c:	bne	2cb24 <myhtml_tokenizer_end_state_before_attribute_name@@Base+0x54>
   2cb10:	mov	r0, r4
   2cb14:	ldrd	r4, [sp]
   2cb18:	ldr	r6, [sp, #8]
   2cb1c:	add	sp, sp, #12
   2cb20:	pop	{pc}		; (ldr pc, [sp], #4)
   2cb24:	mov	r3, #69	; 0x45
   2cb28:	str	r3, [r5, #160]	; 0xa0
   2cb2c:	mov	r4, #0
   2cb30:	b	2cb10 <myhtml_tokenizer_end_state_before_attribute_name@@Base+0x40>

0002cb34 <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2cb34:	strd	r4, [sp, #-16]!
   2cb38:	str	r6, [sp, #8]
   2cb3c:	str	lr, [sp, #12]
   2cb40:	mov	r5, r0
   2cb44:	mov	r2, r1
   2cb48:	mov	r4, r3
   2cb4c:	ldr	r1, [r1, #32]
   2cb50:	ldr	r3, [sp, #16]
   2cb54:	sub	r3, r3, r1
   2cb58:	ldr	r1, [r0, #192]	; 0xc0
   2cb5c:	add	r3, r3, r1
   2cb60:	str	r3, [r2, #36]	; 0x24
   2cb64:	ldr	r1, [r0, #56]	; 0x38
   2cb68:	ldr	r3, [r0, #192]	; 0xc0
   2cb6c:	add	r3, r4, r3
   2cb70:	ldr	ip, [r1, #48]	; 0x30
   2cb74:	sub	r3, r3, ip
   2cb78:	str	r3, [r1, #52]	; 0x34
   2cb7c:	mov	r1, r4
   2cb80:	bl	ffc8 <myhtml_queue_add@plt>
   2cb84:	cmp	r0, #0
   2cb88:	bne	2cba0 <myhtml_tokenizer_end_state_attribute_name@@Base+0x6c>
   2cb8c:	mov	r0, r4
   2cb90:	ldrd	r4, [sp]
   2cb94:	ldr	r6, [sp, #8]
   2cb98:	add	sp, sp, #12
   2cb9c:	pop	{pc}		; (ldr pc, [sp], #4)
   2cba0:	mov	r3, #69	; 0x45
   2cba4:	str	r3, [r5, #160]	; 0xa0
   2cba8:	mov	r4, #0
   2cbac:	b	2cb8c <myhtml_tokenizer_end_state_attribute_name@@Base+0x58>

0002cbb0 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   2cbb0:	strd	r4, [sp, #-16]!
   2cbb4:	str	r6, [sp, #8]
   2cbb8:	str	lr, [sp, #12]
   2cbbc:	mov	r5, r0
   2cbc0:	mov	r2, r1
   2cbc4:	mov	r4, r3
   2cbc8:	ldr	r1, [r1, #32]
   2cbcc:	ldr	r3, [sp, #16]
   2cbd0:	sub	r3, r3, r1
   2cbd4:	ldr	r1, [r0, #192]	; 0xc0
   2cbd8:	add	r3, r3, r1
   2cbdc:	str	r3, [r2, #36]	; 0x24
   2cbe0:	mov	r1, r4
   2cbe4:	bl	ffc8 <myhtml_queue_add@plt>
   2cbe8:	cmp	r0, #0
   2cbec:	bne	2cc04 <myhtml_tokenizer_end_state_after_attribute_name@@Base+0x54>
   2cbf0:	mov	r0, r4
   2cbf4:	ldrd	r4, [sp]
   2cbf8:	ldr	r6, [sp, #8]
   2cbfc:	add	sp, sp, #12
   2cc00:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc04:	mov	r3, #69	; 0x45
   2cc08:	str	r3, [r5, #160]	; 0xa0
   2cc0c:	mov	r4, #0
   2cc10:	b	2cbf0 <myhtml_tokenizer_end_state_after_attribute_name@@Base+0x40>

0002cc14 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2cc14:	strd	r4, [sp, #-16]!
   2cc18:	str	r6, [sp, #8]
   2cc1c:	str	lr, [sp, #12]
   2cc20:	mov	r4, r0
   2cc24:	mov	r2, r1
   2cc28:	mov	r6, r3
   2cc2c:	ldr	r1, [r1, #32]
   2cc30:	ldr	r3, [sp, #16]
   2cc34:	sub	r3, r3, r1
   2cc38:	ldr	r1, [r0, #192]	; 0xc0
   2cc3c:	add	r3, r3, r1
   2cc40:	str	r3, [r2, #36]	; 0x24
   2cc44:	mov	r1, r6
   2cc48:	bl	ffc8 <myhtml_queue_add@plt>
   2cc4c:	subs	r5, r0, #0
   2cc50:	beq	2cc74 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2cc54:	mov	r3, #69	; 0x45
   2cc58:	str	r3, [r4, #160]	; 0xa0
   2cc5c:	mov	r5, #0
   2cc60:	mov	r0, r5
   2cc64:	ldrd	r4, [sp]
   2cc68:	ldr	r6, [sp, #8]
   2cc6c:	add	sp, sp, #12
   2cc70:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc74:	ldr	r0, [r4, #8]
   2cc78:	ldr	r1, [r0, #16]
   2cc7c:	bl	10898 <myhtml_token_attr_create@plt>
   2cc80:	str	r0, [r4, #56]	; 0x38
   2cc84:	cmp	r0, #0
   2cc88:	moveq	r3, #69	; 0x45
   2cc8c:	streq	r3, [r4, #160]	; 0xa0
   2cc90:	movne	r5, r6
   2cc94:	b	2cc60 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x4c>

0002cc98 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2cc98:	ldr	ip, [r1, #32]
   2cc9c:	ldr	r2, [sp]
   2cca0:	sub	r2, r2, ip
   2cca4:	ldr	r0, [r0, #192]	; 0xc0
   2cca8:	add	r2, r2, r0
   2ccac:	str	r2, [r1, #36]	; 0x24
   2ccb0:	mov	r0, r3
   2ccb4:	bx	lr

0002ccb8 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   2ccb8:	ldr	ip, [r1, #32]
   2ccbc:	ldr	r2, [sp]
   2ccc0:	sub	r2, r2, ip
   2ccc4:	ldr	r0, [r0, #192]	; 0xc0
   2ccc8:	add	r2, r2, r0
   2cccc:	str	r2, [r1, #36]	; 0x24
   2ccd0:	mov	r0, r3
   2ccd4:	bx	lr

0002ccd8 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   2ccd8:	strd	r4, [sp, #-16]!
   2ccdc:	str	r6, [sp, #8]
   2cce0:	str	lr, [sp, #12]
   2cce4:	mov	r4, r0
   2cce8:	mov	r2, r1
   2ccec:	mov	r5, r3
   2ccf0:	ldr	r1, [r1, #32]
   2ccf4:	ldr	r3, [sp, #16]
   2ccf8:	sub	r3, r3, r1
   2ccfc:	ldr	r1, [r0, #192]	; 0xc0
   2cd00:	add	r3, r3, r1
   2cd04:	str	r3, [r2, #36]	; 0x24
   2cd08:	ldr	r1, [r0, #56]	; 0x38
   2cd0c:	ldr	r3, [r0, #192]	; 0xc0
   2cd10:	add	r3, r5, r3
   2cd14:	ldr	ip, [r1, #56]	; 0x38
   2cd18:	sub	r3, r3, ip
   2cd1c:	str	r3, [r1, #60]	; 0x3c
   2cd20:	mov	r1, r5
   2cd24:	bl	ffc8 <myhtml_queue_add@plt>
   2cd28:	subs	r6, r0, #0
   2cd2c:	beq	2cd50 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x78>
   2cd30:	mov	r3, #69	; 0x45
   2cd34:	str	r3, [r4, #160]	; 0xa0
   2cd38:	mov	r6, #0
   2cd3c:	mov	r0, r6
   2cd40:	ldrd	r4, [sp]
   2cd44:	ldr	r6, [sp, #8]
   2cd48:	add	sp, sp, #12
   2cd4c:	pop	{pc}		; (ldr pc, [sp], #4)
   2cd50:	ldr	r0, [r4, #8]
   2cd54:	ldr	r1, [r0, #16]
   2cd58:	bl	10898 <myhtml_token_attr_create@plt>
   2cd5c:	str	r0, [r4, #56]	; 0x38
   2cd60:	cmp	r0, #0
   2cd64:	moveq	r3, #69	; 0x45
   2cd68:	streq	r3, [r4, #160]	; 0xa0
   2cd6c:	movne	r6, r5
   2cd70:	b	2cd3c <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x64>

0002cd74 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2cd74:	strd	r4, [sp, #-16]!
   2cd78:	str	r6, [sp, #8]
   2cd7c:	str	lr, [sp, #12]
   2cd80:	mov	r5, r0
   2cd84:	mov	r2, r1
   2cd88:	mov	r4, r3
   2cd8c:	ldr	r1, [r1, #32]
   2cd90:	ldr	r3, [sp, #16]
   2cd94:	sub	r3, r3, r1
   2cd98:	ldr	r1, [r0, #192]	; 0xc0
   2cd9c:	add	r3, r3, r1
   2cda0:	str	r3, [r2, #36]	; 0x24
   2cda4:	ldr	r3, [r2, #24]
   2cda8:	sub	r3, r4, r3
   2cdac:	ldr	r1, [r0, #192]	; 0xc0
   2cdb0:	add	r3, r3, r1
   2cdb4:	str	r3, [r2, #28]
   2cdb8:	mov	r1, r4
   2cdbc:	bl	ffc8 <myhtml_queue_add@plt>
   2cdc0:	cmp	r0, #0
   2cdc4:	bne	2cddc <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base+0x68>
   2cdc8:	mov	r0, r4
   2cdcc:	ldrd	r4, [sp]
   2cdd0:	ldr	r6, [sp, #8]
   2cdd4:	add	sp, sp, #12
   2cdd8:	pop	{pc}		; (ldr pc, [sp], #4)
   2cddc:	mov	r3, #69	; 0x45
   2cde0:	str	r3, [r5, #160]	; 0xa0
   2cde4:	mov	r4, #0
   2cde8:	b	2cdc8 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base+0x54>

0002cdec <myhtml_tokenizer_end_state_comment_start@@Base>:
   2cdec:	strd	r4, [sp, #-16]!
   2cdf0:	str	r6, [sp, #8]
   2cdf4:	str	lr, [sp, #12]
   2cdf8:	mov	r5, r0
   2cdfc:	mov	r2, r1
   2ce00:	mov	r4, r3
   2ce04:	ldr	r1, [r1, #32]
   2ce08:	ldr	r3, [sp, #16]
   2ce0c:	sub	r3, r3, r1
   2ce10:	ldr	r1, [r0, #192]	; 0xc0
   2ce14:	add	r3, r3, r1
   2ce18:	str	r3, [r2, #36]	; 0x24
   2ce1c:	ldr	r3, [r2, #24]
   2ce20:	sub	r3, r4, r3
   2ce24:	ldr	r1, [r0, #192]	; 0xc0
   2ce28:	add	r3, r3, r1
   2ce2c:	str	r3, [r2, #28]
   2ce30:	mov	r1, r4
   2ce34:	bl	ffc8 <myhtml_queue_add@plt>
   2ce38:	cmp	r0, #0
   2ce3c:	bne	2ce54 <myhtml_tokenizer_end_state_comment_start@@Base+0x68>
   2ce40:	mov	r0, r4
   2ce44:	ldrd	r4, [sp]
   2ce48:	ldr	r6, [sp, #8]
   2ce4c:	add	sp, sp, #12
   2ce50:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce54:	mov	r3, #69	; 0x45
   2ce58:	str	r3, [r5, #160]	; 0xa0
   2ce5c:	mov	r4, #0
   2ce60:	b	2ce40 <myhtml_tokenizer_end_state_comment_start@@Base+0x54>

0002ce64 <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2ce64:	strd	r4, [sp, #-16]!
   2ce68:	str	r6, [sp, #8]
   2ce6c:	str	lr, [sp, #12]
   2ce70:	mov	r5, r0
   2ce74:	mov	r2, r1
   2ce78:	mov	r4, r3
   2ce7c:	ldr	r1, [r1, #32]
   2ce80:	ldr	r3, [sp, #16]
   2ce84:	sub	r3, r3, r1
   2ce88:	ldr	r1, [r0, #192]	; 0xc0
   2ce8c:	add	r3, r3, r1
   2ce90:	str	r3, [r2, #36]	; 0x24
   2ce94:	ldr	r3, [r2, #24]
   2ce98:	sub	r3, r4, r3
   2ce9c:	ldr	r1, [r0, #192]	; 0xc0
   2cea0:	add	r3, r3, r1
   2cea4:	str	r3, [r2, #28]
   2cea8:	mov	r1, r4
   2ceac:	bl	ffc8 <myhtml_queue_add@plt>
   2ceb0:	cmp	r0, #0
   2ceb4:	bne	2cecc <myhtml_tokenizer_end_state_comment_start_dash@@Base+0x68>
   2ceb8:	mov	r0, r4
   2cebc:	ldrd	r4, [sp]
   2cec0:	ldr	r6, [sp, #8]
   2cec4:	add	sp, sp, #12
   2cec8:	pop	{pc}		; (ldr pc, [sp], #4)
   2cecc:	mov	r3, #69	; 0x45
   2ced0:	str	r3, [r5, #160]	; 0xa0
   2ced4:	mov	r4, #0
   2ced8:	b	2ceb8 <myhtml_tokenizer_end_state_comment_start_dash@@Base+0x54>

0002cedc <myhtml_tokenizer_end_state_comment@@Base>:
   2cedc:	strd	r4, [sp, #-16]!
   2cee0:	str	r6, [sp, #8]
   2cee4:	str	lr, [sp, #12]
   2cee8:	mov	r5, r0
   2ceec:	mov	r2, r1
   2cef0:	mov	r4, r3
   2cef4:	ldr	r1, [r1, #32]
   2cef8:	ldr	r3, [sp, #16]
   2cefc:	sub	r3, r3, r1
   2cf00:	ldr	r1, [r0, #192]	; 0xc0
   2cf04:	add	r3, r3, r1
   2cf08:	str	r3, [r2, #36]	; 0x24
   2cf0c:	ldr	r3, [r2, #24]
   2cf10:	sub	r3, r4, r3
   2cf14:	ldr	r1, [r0, #192]	; 0xc0
   2cf18:	add	r3, r3, r1
   2cf1c:	str	r3, [r2, #28]
   2cf20:	mov	r1, r4
   2cf24:	bl	ffc8 <myhtml_queue_add@plt>
   2cf28:	cmp	r0, #0
   2cf2c:	bne	2cf44 <myhtml_tokenizer_end_state_comment@@Base+0x68>
   2cf30:	mov	r0, r4
   2cf34:	ldrd	r4, [sp]
   2cf38:	ldr	r6, [sp, #8]
   2cf3c:	add	sp, sp, #12
   2cf40:	pop	{pc}		; (ldr pc, [sp], #4)
   2cf44:	mov	r3, #69	; 0x45
   2cf48:	str	r3, [r5, #160]	; 0xa0
   2cf4c:	mov	r4, #0
   2cf50:	b	2cf30 <myhtml_tokenizer_end_state_comment@@Base+0x54>

0002cf54 <myhtml_tokenizer_end_state_comment_end@@Base>:
   2cf54:	strd	r4, [sp, #-16]!
   2cf58:	str	r6, [sp, #8]
   2cf5c:	str	lr, [sp, #12]
   2cf60:	mov	r4, r3
   2cf64:	ldr	r2, [r1, #32]
   2cf68:	ldr	r3, [sp, #16]
   2cf6c:	sub	r3, r3, r2
   2cf70:	ldr	r2, [r0, #192]	; 0xc0
   2cf74:	add	r3, r3, r2
   2cf78:	str	r3, [r1, #36]	; 0x24
   2cf7c:	ldr	r3, [r1, #24]
   2cf80:	sub	r3, r4, r3
   2cf84:	ldr	r2, [r0, #192]	; 0xc0
   2cf88:	add	r3, r3, r2
   2cf8c:	cmp	r3, #2
   2cf90:	strls	r3, [r1, #28]
   2cf94:	bhi	2cfac <myhtml_tokenizer_end_state_comment_end@@Base+0x58>
   2cf98:	mov	r0, r4
   2cf9c:	ldrd	r4, [sp]
   2cfa0:	ldr	r6, [sp, #8]
   2cfa4:	add	sp, sp, #12
   2cfa8:	pop	{pc}		; (ldr pc, [sp], #4)
   2cfac:	mov	r5, r0
   2cfb0:	sub	r3, r3, #2
   2cfb4:	str	r3, [r1, #28]
   2cfb8:	mov	r2, r1
   2cfbc:	mov	r1, r4
   2cfc0:	bl	ffc8 <myhtml_queue_add@plt>
   2cfc4:	cmp	r0, #0
   2cfc8:	beq	2cf98 <myhtml_tokenizer_end_state_comment_end@@Base+0x44>
   2cfcc:	mov	r3, #69	; 0x45
   2cfd0:	str	r3, [r5, #160]	; 0xa0
   2cfd4:	mov	r4, #0
   2cfd8:	b	2cf98 <myhtml_tokenizer_end_state_comment_end@@Base+0x44>

0002cfdc <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2cfdc:	strd	r4, [sp, #-16]!
   2cfe0:	str	r6, [sp, #8]
   2cfe4:	str	lr, [sp, #12]
   2cfe8:	mov	r5, r0
   2cfec:	mov	r2, r1
   2cff0:	mov	r4, r3
   2cff4:	ldr	r1, [r1, #32]
   2cff8:	ldr	r3, [sp, #16]
   2cffc:	sub	r3, r3, r1
   2d000:	ldr	r1, [r0, #192]	; 0xc0
   2d004:	add	r3, r3, r1
   2d008:	str	r3, [r2, #36]	; 0x24
   2d00c:	ldr	r3, [r2, #24]
   2d010:	sub	r3, r4, r3
   2d014:	ldr	r1, [r0, #192]	; 0xc0
   2d018:	add	r3, r3, r1
   2d01c:	str	r3, [r2, #28]
   2d020:	mov	r1, r4
   2d024:	bl	ffc8 <myhtml_queue_add@plt>
   2d028:	cmp	r0, #0
   2d02c:	bne	2d044 <myhtml_tokenizer_end_state_comment_end_dash@@Base+0x68>
   2d030:	mov	r0, r4
   2d034:	ldrd	r4, [sp]
   2d038:	ldr	r6, [sp, #8]
   2d03c:	add	sp, sp, #12
   2d040:	pop	{pc}		; (ldr pc, [sp], #4)
   2d044:	mov	r3, #69	; 0x45
   2d048:	str	r3, [r5, #160]	; 0xa0
   2d04c:	mov	r4, #0
   2d050:	b	2d030 <myhtml_tokenizer_end_state_comment_end_dash@@Base+0x54>

0002d054 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2d054:	strd	r4, [sp, #-16]!
   2d058:	str	r6, [sp, #8]
   2d05c:	str	lr, [sp, #12]
   2d060:	mov	r5, r0
   2d064:	mov	r2, r1
   2d068:	mov	r4, r3
   2d06c:	ldr	r1, [r1, #32]
   2d070:	ldr	r3, [sp, #16]
   2d074:	sub	r3, r3, r1
   2d078:	ldr	r1, [r0, #192]	; 0xc0
   2d07c:	add	r3, r3, r1
   2d080:	str	r3, [r2, #36]	; 0x24
   2d084:	ldr	r3, [r2, #24]
   2d088:	sub	r3, r4, r3
   2d08c:	ldr	r1, [r0, #192]	; 0xc0
   2d090:	add	r3, r3, r1
   2d094:	str	r3, [r2, #28]
   2d098:	mov	r1, r4
   2d09c:	bl	ffc8 <myhtml_queue_add@plt>
   2d0a0:	cmp	r0, #0
   2d0a4:	bne	2d0bc <myhtml_tokenizer_end_state_comment_end_bang@@Base+0x68>
   2d0a8:	mov	r0, r4
   2d0ac:	ldrd	r4, [sp]
   2d0b0:	ldr	r6, [sp, #8]
   2d0b4:	add	sp, sp, #12
   2d0b8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d0bc:	mov	r3, #69	; 0x45
   2d0c0:	str	r3, [r5, #160]	; 0xa0
   2d0c4:	mov	r4, #0
   2d0c8:	b	2d0a8 <myhtml_tokenizer_end_state_comment_end_bang@@Base+0x54>

0002d0cc <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2d0cc:	strd	r4, [sp, #-16]!
   2d0d0:	str	r6, [sp, #8]
   2d0d4:	str	lr, [sp, #12]
   2d0d8:	mov	r5, r0
   2d0dc:	mov	r2, r1
   2d0e0:	mov	r4, r3
   2d0e4:	ldr	r1, [r1, #32]
   2d0e8:	ldr	r3, [sp, #16]
   2d0ec:	sub	r3, r3, r1
   2d0f0:	ldr	r1, [r0, #192]	; 0xc0
   2d0f4:	add	r3, r3, r1
   2d0f8:	str	r3, [r2, #36]	; 0x24
   2d0fc:	ldr	r3, [r2, #24]
   2d100:	sub	r3, r4, r3
   2d104:	ldr	r1, [r0, #192]	; 0xc0
   2d108:	add	r3, r3, r1
   2d10c:	str	r3, [r2, #28]
   2d110:	mov	r1, r4
   2d114:	bl	ffc8 <myhtml_queue_add@plt>
   2d118:	cmp	r0, #0
   2d11c:	bne	2d134 <myhtml_tokenizer_end_state_bogus_comment@@Base+0x68>
   2d120:	mov	r0, r4
   2d124:	ldrd	r4, [sp]
   2d128:	ldr	r6, [sp, #8]
   2d12c:	add	sp, sp, #12
   2d130:	pop	{pc}		; (ldr pc, [sp], #4)
   2d134:	mov	r3, #69	; 0x45
   2d138:	str	r3, [r5, #160]	; 0xa0
   2d13c:	mov	r4, #0
   2d140:	b	2d120 <myhtml_tokenizer_end_state_bogus_comment@@Base+0x54>

0002d144 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2d144:	strd	r4, [sp, #-16]!
   2d148:	str	r6, [sp, #8]
   2d14c:	str	lr, [sp, #12]
   2d150:	mov	r4, r3
   2d154:	ldr	r2, [r1, #32]
   2d158:	ldr	r3, [sp, #16]
   2d15c:	sub	r3, r3, r2
   2d160:	ldr	r2, [r0, #192]	; 0xc0
   2d164:	add	r3, r3, r2
   2d168:	str	r3, [r1, #36]	; 0x24
   2d16c:	ldr	r3, [r1, #24]
   2d170:	sub	r3, r4, r3
   2d174:	ldr	r2, [r0, #192]	; 0xc0
   2d178:	add	r3, r3, r2
   2d17c:	str	r3, [r1, #28]
   2d180:	cmp	r3, #0
   2d184:	bne	2d19c <myhtml_tokenizer_end_state_cdata_section@@Base+0x58>
   2d188:	mov	r0, r4
   2d18c:	ldrd	r4, [sp]
   2d190:	ldr	r6, [sp, #8]
   2d194:	add	sp, sp, #12
   2d198:	pop	{pc}		; (ldr pc, [sp], #4)
   2d19c:	mov	r5, r0
   2d1a0:	mov	r2, r1
   2d1a4:	mov	r1, r4
   2d1a8:	bl	ffc8 <myhtml_queue_add@plt>
   2d1ac:	cmp	r0, #0
   2d1b0:	beq	2d188 <myhtml_tokenizer_end_state_cdata_section@@Base+0x44>
   2d1b4:	mov	r3, #69	; 0x45
   2d1b8:	str	r3, [r5, #160]	; 0xa0
   2d1bc:	mov	r4, #0
   2d1c0:	b	2d188 <myhtml_tokenizer_end_state_cdata_section@@Base+0x44>

0002d1c4 <myhtml_tokenizer_end_state_rcdata@@Base>:
   2d1c4:	strd	r4, [sp, #-16]!
   2d1c8:	str	r6, [sp, #8]
   2d1cc:	str	lr, [sp, #12]
   2d1d0:	mov	r4, r0
   2d1d4:	mov	r5, r3
   2d1d8:	ldr	r2, [sp, #16]
   2d1dc:	ldr	r3, [r1, #32]
   2d1e0:	sub	r3, r2, r3
   2d1e4:	ldr	r0, [r0, #192]	; 0xc0
   2d1e8:	add	r3, r3, r0
   2d1ec:	str	r3, [r1, #36]	; 0x24
   2d1f0:	ldr	r0, [r1, #24]
   2d1f4:	ldr	r3, [r4, #192]	; 0xc0
   2d1f8:	add	r3, r2, r3
   2d1fc:	cmp	r0, r3
   2d200:	bcc	2d218 <myhtml_tokenizer_end_state_rcdata@@Base+0x54>
   2d204:	mov	r0, r5
   2d208:	ldrd	r4, [sp]
   2d20c:	ldr	r6, [sp, #8]
   2d210:	add	sp, sp, #12
   2d214:	pop	{pc}		; (ldr pc, [sp], #4)
   2d218:	ldr	r3, [r1, #48]	; 0x30
   2d21c:	orr	r3, r3, #16
   2d220:	str	r3, [r1, #48]	; 0x30
   2d224:	mov	r3, #1
   2d228:	str	r3, [r1]
   2d22c:	sub	r2, r2, r0
   2d230:	ldr	r3, [r4, #192]	; 0xc0
   2d234:	add	r2, r3, r2
   2d238:	str	r2, [r1, #28]
   2d23c:	mov	r2, r1
   2d240:	mov	r1, #0
   2d244:	mov	r0, r4
   2d248:	bl	ffc8 <myhtml_queue_add@plt>
   2d24c:	cmp	r0, #0
   2d250:	beq	2d204 <myhtml_tokenizer_end_state_rcdata@@Base+0x40>
   2d254:	mov	r3, #69	; 0x45
   2d258:	str	r3, [r4, #160]	; 0xa0
   2d25c:	mov	r5, #0
   2d260:	b	2d204 <myhtml_tokenizer_end_state_rcdata@@Base+0x40>

0002d264 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   2d264:	strd	r4, [sp, #-12]!
   2d268:	str	lr, [sp, #8]
   2d26c:	sub	sp, sp, #12
   2d270:	mov	r4, r3
   2d274:	ldr	r5, [r1, #32]
   2d278:	ldr	r3, [sp, #24]
   2d27c:	sub	r3, r3, r5
   2d280:	ldr	r5, [r0, #192]	; 0xc0
   2d284:	add	r3, r3, r5
   2d288:	str	r3, [r1, #36]	; 0x24
   2d28c:	ldr	r3, [r0, #192]	; 0xc0
   2d290:	mov	ip, #16
   2d294:	str	ip, [sp]
   2d298:	add	r3, r4, r3
   2d29c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d2a0:	mov	r0, r4
   2d2a4:	add	sp, sp, #12
   2d2a8:	ldrd	r4, [sp]
   2d2ac:	add	sp, sp, #8
   2d2b0:	pop	{pc}		; (ldr pc, [sp], #4)

0002d2b4 <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2d2b4:	strd	r4, [sp, #-12]!
   2d2b8:	str	lr, [sp, #8]
   2d2bc:	sub	sp, sp, #12
   2d2c0:	mov	r4, r3
   2d2c4:	ldr	r5, [r1, #32]
   2d2c8:	ldr	r3, [sp, #24]
   2d2cc:	sub	r3, r3, r5
   2d2d0:	ldr	r5, [r0, #192]	; 0xc0
   2d2d4:	add	r3, r3, r5
   2d2d8:	str	r3, [r1, #36]	; 0x24
   2d2dc:	ldr	r3, [r0, #192]	; 0xc0
   2d2e0:	mov	ip, #16
   2d2e4:	str	ip, [sp]
   2d2e8:	add	r3, r4, r3
   2d2ec:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d2f0:	mov	r0, r4
   2d2f4:	add	sp, sp, #12
   2d2f8:	ldrd	r4, [sp]
   2d2fc:	add	sp, sp, #8
   2d300:	pop	{pc}		; (ldr pc, [sp], #4)

0002d304 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   2d304:	strd	r4, [sp, #-12]!
   2d308:	str	lr, [sp, #8]
   2d30c:	sub	sp, sp, #12
   2d310:	mov	r4, r3
   2d314:	ldr	r5, [r1, #32]
   2d318:	ldr	r3, [sp, #24]
   2d31c:	sub	r3, r3, r5
   2d320:	ldr	r5, [r0, #192]	; 0xc0
   2d324:	add	r3, r3, r5
   2d328:	str	r3, [r1, #36]	; 0x24
   2d32c:	ldr	r3, [r0, #192]	; 0xc0
   2d330:	mov	ip, #16
   2d334:	str	ip, [sp]
   2d338:	add	r3, r4, r3
   2d33c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d340:	mov	r0, r4
   2d344:	add	sp, sp, #12
   2d348:	ldrd	r4, [sp]
   2d34c:	add	sp, sp, #8
   2d350:	pop	{pc}		; (ldr pc, [sp], #4)

0002d354 <myhtml_tokenizer_end_state_rawtext@@Base>:
   2d354:	strd	r4, [sp, #-12]!
   2d358:	str	lr, [sp, #8]
   2d35c:	sub	sp, sp, #12
   2d360:	mov	r4, r3
   2d364:	ldr	r5, [r1, #32]
   2d368:	ldr	r3, [sp, #24]
   2d36c:	sub	r3, r3, r5
   2d370:	ldr	r5, [r0, #192]	; 0xc0
   2d374:	add	r3, r3, r5
   2d378:	str	r3, [r1, #36]	; 0x24
   2d37c:	ldr	r3, [r0, #192]	; 0xc0
   2d380:	mov	ip, #32
   2d384:	str	ip, [sp]
   2d388:	add	r3, r4, r3
   2d38c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d390:	mov	r0, r4
   2d394:	add	sp, sp, #12
   2d398:	ldrd	r4, [sp]
   2d39c:	add	sp, sp, #8
   2d3a0:	pop	{pc}		; (ldr pc, [sp], #4)

0002d3a4 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   2d3a4:	strd	r4, [sp, #-12]!
   2d3a8:	str	lr, [sp, #8]
   2d3ac:	sub	sp, sp, #12
   2d3b0:	mov	r4, r3
   2d3b4:	ldr	r5, [r1, #32]
   2d3b8:	ldr	r3, [sp, #24]
   2d3bc:	sub	r3, r3, r5
   2d3c0:	ldr	r5, [r0, #192]	; 0xc0
   2d3c4:	add	r3, r3, r5
   2d3c8:	str	r3, [r1, #36]	; 0x24
   2d3cc:	ldr	r3, [r0, #192]	; 0xc0
   2d3d0:	mov	ip, #32
   2d3d4:	str	ip, [sp]
   2d3d8:	add	r3, r4, r3
   2d3dc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d3e0:	mov	r0, r4
   2d3e4:	add	sp, sp, #12
   2d3e8:	ldrd	r4, [sp]
   2d3ec:	add	sp, sp, #8
   2d3f0:	pop	{pc}		; (ldr pc, [sp], #4)

0002d3f4 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   2d3f4:	strd	r4, [sp, #-12]!
   2d3f8:	str	lr, [sp, #8]
   2d3fc:	sub	sp, sp, #12
   2d400:	mov	r4, r3
   2d404:	ldr	r5, [r1, #32]
   2d408:	ldr	r3, [sp, #24]
   2d40c:	sub	r3, r3, r5
   2d410:	ldr	r5, [r0, #192]	; 0xc0
   2d414:	add	r3, r3, r5
   2d418:	str	r3, [r1, #36]	; 0x24
   2d41c:	ldr	r3, [r0, #192]	; 0xc0
   2d420:	mov	ip, #32
   2d424:	str	ip, [sp]
   2d428:	add	r3, r4, r3
   2d42c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d430:	mov	r0, r4
   2d434:	add	sp, sp, #12
   2d438:	ldrd	r4, [sp]
   2d43c:	add	sp, sp, #8
   2d440:	pop	{pc}		; (ldr pc, [sp], #4)

0002d444 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   2d444:	strd	r4, [sp, #-12]!
   2d448:	str	lr, [sp, #8]
   2d44c:	sub	sp, sp, #12
   2d450:	mov	r4, r3
   2d454:	ldr	r5, [r1, #32]
   2d458:	ldr	r3, [sp, #24]
   2d45c:	sub	r3, r3, r5
   2d460:	ldr	r5, [r0, #192]	; 0xc0
   2d464:	add	r3, r3, r5
   2d468:	str	r3, [r1, #36]	; 0x24
   2d46c:	ldr	r3, [r0, #192]	; 0xc0
   2d470:	mov	ip, #32
   2d474:	str	ip, [sp]
   2d478:	add	r3, r4, r3
   2d47c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d480:	mov	r0, r4
   2d484:	add	sp, sp, #12
   2d488:	ldrd	r4, [sp]
   2d48c:	add	sp, sp, #8
   2d490:	pop	{pc}		; (ldr pc, [sp], #4)

0002d494 <myhtml_tokenizer_end_state_plaintext@@Base>:
   2d494:	ldr	ip, [r1, #32]
   2d498:	ldr	r2, [sp]
   2d49c:	sub	r2, r2, ip
   2d4a0:	ldr	r0, [r0, #192]	; 0xc0
   2d4a4:	add	r2, r2, r0
   2d4a8:	str	r2, [r1, #36]	; 0x24
   2d4ac:	mov	r0, r3
   2d4b0:	bx	lr

0002d4b4 <myhtml_tokenizer_end_state_doctype@@Base>:
   2d4b4:	strd	r4, [sp, #-12]!
   2d4b8:	str	lr, [sp, #8]
   2d4bc:	sub	sp, sp, #12
   2d4c0:	mov	r4, r3
   2d4c4:	ldr	r5, [r1, #32]
   2d4c8:	ldr	r3, [sp, #24]
   2d4cc:	sub	r3, r3, r5
   2d4d0:	ldr	r5, [r0, #192]	; 0xc0
   2d4d4:	add	r3, r3, r5
   2d4d8:	str	r3, [r1, #36]	; 0x24
   2d4dc:	ldr	r3, [r0, #192]	; 0xc0
   2d4e0:	mov	ip, #32
   2d4e4:	str	ip, [sp]
   2d4e8:	add	r3, r4, r3
   2d4ec:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d4f0:	mov	r0, r4
   2d4f4:	add	sp, sp, #12
   2d4f8:	ldrd	r4, [sp]
   2d4fc:	add	sp, sp, #8
   2d500:	pop	{pc}		; (ldr pc, [sp], #4)

0002d504 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   2d504:	strd	r4, [sp, #-16]!
   2d508:	str	r6, [sp, #8]
   2d50c:	str	lr, [sp, #12]
   2d510:	mov	r5, r0
   2d514:	mov	r2, r1
   2d518:	mov	r4, r3
   2d51c:	ldr	r1, [r1, #32]
   2d520:	ldr	r3, [sp, #16]
   2d524:	sub	r3, r3, r1
   2d528:	ldr	r1, [r0, #192]	; 0xc0
   2d52c:	add	r3, r3, r1
   2d530:	str	r3, [r2, #36]	; 0x24
   2d534:	mov	r3, #1
   2d538:	str	r3, [r0, #176]	; 0xb0
   2d53c:	mov	r1, r4
   2d540:	bl	ffc8 <myhtml_queue_add@plt>
   2d544:	cmp	r0, #0
   2d548:	bne	2d560 <myhtml_tokenizer_end_state_before_doctype_name@@Base+0x5c>
   2d54c:	mov	r0, r4
   2d550:	ldrd	r4, [sp]
   2d554:	ldr	r6, [sp, #8]
   2d558:	add	sp, sp, #12
   2d55c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d560:	mov	r3, #69	; 0x45
   2d564:	str	r3, [r5, #160]	; 0xa0
   2d568:	mov	r4, #0
   2d56c:	b	2d54c <myhtml_tokenizer_end_state_before_doctype_name@@Base+0x48>

0002d570 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   2d570:	strd	r4, [sp, #-16]!
   2d574:	str	r6, [sp, #8]
   2d578:	str	lr, [sp, #12]
   2d57c:	mov	r5, r0
   2d580:	mov	r2, r1
   2d584:	mov	r4, r3
   2d588:	ldr	r1, [r1, #32]
   2d58c:	ldr	r3, [sp, #16]
   2d590:	sub	r3, r3, r1
   2d594:	ldr	r1, [r0, #192]	; 0xc0
   2d598:	add	r3, r3, r1
   2d59c:	str	r3, [r2, #36]	; 0x24
   2d5a0:	ldr	r1, [r0, #56]	; 0x38
   2d5a4:	ldr	r3, [r0, #192]	; 0xc0
   2d5a8:	add	r3, r4, r3
   2d5ac:	ldr	ip, [r1, #48]	; 0x30
   2d5b0:	sub	r3, r3, ip
   2d5b4:	str	r3, [r1, #52]	; 0x34
   2d5b8:	mov	r1, r4
   2d5bc:	bl	ffc8 <myhtml_queue_add@plt>
   2d5c0:	cmp	r0, #0
   2d5c4:	bne	2d5dc <myhtml_tokenizer_end_state_doctype_name@@Base+0x6c>
   2d5c8:	mov	r0, r4
   2d5cc:	ldrd	r4, [sp]
   2d5d0:	ldr	r6, [sp, #8]
   2d5d4:	add	sp, sp, #12
   2d5d8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d5dc:	mov	r3, #69	; 0x45
   2d5e0:	str	r3, [r5, #160]	; 0xa0
   2d5e4:	mov	r4, #0
   2d5e8:	b	2d5c8 <myhtml_tokenizer_end_state_doctype_name@@Base+0x58>

0002d5ec <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   2d5ec:	strd	r4, [sp, #-16]!
   2d5f0:	str	r6, [sp, #8]
   2d5f4:	str	lr, [sp, #12]
   2d5f8:	mov	r5, r0
   2d5fc:	mov	r2, r1
   2d600:	mov	r4, r3
   2d604:	ldr	r1, [r1, #32]
   2d608:	ldr	r3, [sp, #16]
   2d60c:	sub	r3, r3, r1
   2d610:	ldr	r1, [r0, #192]	; 0xc0
   2d614:	add	r3, r3, r1
   2d618:	str	r3, [r2, #36]	; 0x24
   2d61c:	mov	r1, r4
   2d620:	bl	ffc8 <myhtml_queue_add@plt>
   2d624:	cmp	r0, #0
   2d628:	bne	2d640 <myhtml_tokenizer_end_state_after_doctype_name@@Base+0x54>
   2d62c:	mov	r0, r4
   2d630:	ldrd	r4, [sp]
   2d634:	ldr	r6, [sp, #8]
   2d638:	add	sp, sp, #12
   2d63c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d640:	mov	r3, #69	; 0x45
   2d644:	str	r3, [r5, #160]	; 0xa0
   2d648:	mov	r4, #0
   2d64c:	b	2d62c <myhtml_tokenizer_end_state_after_doctype_name@@Base+0x40>

0002d650 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   2d650:	strd	r4, [sp, #-16]!
   2d654:	str	r6, [sp, #8]
   2d658:	str	lr, [sp, #12]
   2d65c:	mov	r5, r0
   2d660:	mov	r2, r1
   2d664:	mov	r4, r3
   2d668:	ldr	r1, [r1, #32]
   2d66c:	ldr	r3, [sp, #16]
   2d670:	sub	r3, r3, r1
   2d674:	ldr	r1, [r0, #192]	; 0xc0
   2d678:	add	r3, r3, r1
   2d67c:	str	r3, [r2, #36]	; 0x24
   2d680:	mov	r1, r4
   2d684:	bl	ffc8 <myhtml_queue_add@plt>
   2d688:	cmp	r0, #0
   2d68c:	bne	2d6a4 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base+0x54>
   2d690:	mov	r0, r4
   2d694:	ldrd	r4, [sp]
   2d698:	ldr	r6, [sp, #8]
   2d69c:	add	sp, sp, #12
   2d6a0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d6a4:	mov	r3, #69	; 0x45
   2d6a8:	str	r3, [r5, #160]	; 0xa0
   2d6ac:	mov	r4, #0
   2d6b0:	b	2d690 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base+0x40>

0002d6b4 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   2d6b4:	strd	r4, [sp, #-16]!
   2d6b8:	str	r6, [sp, #8]
   2d6bc:	str	lr, [sp, #12]
   2d6c0:	mov	r5, r0
   2d6c4:	mov	r2, r1
   2d6c8:	mov	r4, r3
   2d6cc:	ldr	r1, [r1, #32]
   2d6d0:	ldr	r3, [sp, #16]
   2d6d4:	sub	r3, r3, r1
   2d6d8:	ldr	r1, [r0, #192]	; 0xc0
   2d6dc:	add	r3, r3, r1
   2d6e0:	str	r3, [r2, #36]	; 0x24
   2d6e4:	mov	r3, #1
   2d6e8:	str	r3, [r0, #176]	; 0xb0
   2d6ec:	mov	r1, r4
   2d6f0:	bl	ffc8 <myhtml_queue_add@plt>
   2d6f4:	cmp	r0, #0
   2d6f8:	bne	2d710 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base+0x5c>
   2d6fc:	mov	r0, r4
   2d700:	ldrd	r4, [sp]
   2d704:	ldr	r6, [sp, #8]
   2d708:	add	sp, sp, #12
   2d70c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d710:	mov	r3, #69	; 0x45
   2d714:	str	r3, [r5, #160]	; 0xa0
   2d718:	mov	r4, #0
   2d71c:	b	2d6fc <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base+0x48>

0002d720 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   2d720:	strd	r4, [sp, #-16]!
   2d724:	str	r6, [sp, #8]
   2d728:	str	lr, [sp, #12]
   2d72c:	mov	r4, r0
   2d730:	mov	r2, r1
   2d734:	mov	r5, r3
   2d738:	ldr	r1, [sp, #16]
   2d73c:	ldr	r3, [r2, #32]
   2d740:	sub	r3, r1, r3
   2d744:	ldr	r0, [r0, #192]	; 0xc0
   2d748:	add	r3, r3, r0
   2d74c:	str	r3, [r2, #36]	; 0x24
   2d750:	mov	r3, #1
   2d754:	str	r3, [r4, #176]	; 0xb0
   2d758:	ldr	r3, [r4, #56]	; 0x38
   2d75c:	ldr	r0, [r3, #48]	; 0x30
   2d760:	cmp	r1, #0
   2d764:	cmpne	r0, #0
   2d768:	bne	2d794 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x74>
   2d76c:	mov	r1, r5
   2d770:	mov	r0, r4
   2d774:	bl	ffc8 <myhtml_queue_add@plt>
   2d778:	cmp	r0, #0
   2d77c:	bne	2d7a8 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x88>
   2d780:	mov	r0, r5
   2d784:	ldrd	r4, [sp]
   2d788:	ldr	r6, [sp, #8]
   2d78c:	add	sp, sp, #12
   2d790:	pop	{pc}		; (ldr pc, [sp], #4)
   2d794:	ldr	r1, [r4, #192]	; 0xc0
   2d798:	add	r1, r5, r1
   2d79c:	sub	r0, r1, r0
   2d7a0:	str	r0, [r3, #52]	; 0x34
   2d7a4:	b	2d76c <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x4c>
   2d7a8:	mov	r3, #69	; 0x45
   2d7ac:	str	r3, [r4, #160]	; 0xa0
   2d7b0:	mov	r5, #0
   2d7b4:	b	2d780 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x60>

0002d7b8 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   2d7b8:	strd	r4, [sp, #-16]!
   2d7bc:	str	r6, [sp, #8]
   2d7c0:	str	lr, [sp, #12]
   2d7c4:	sub	sp, sp, #8
   2d7c8:	mov	r4, r3
   2d7cc:	ldr	ip, [sp, #24]
   2d7d0:	ldr	r3, [r1, #32]
   2d7d4:	sub	r3, ip, r3
   2d7d8:	ldr	r6, [r0, #192]	; 0xc0
   2d7dc:	add	r3, r3, r6
   2d7e0:	str	r3, [r1, #36]	; 0x24
   2d7e4:	ldr	r3, [r0, #192]	; 0xc0
   2d7e8:	str	ip, [sp]
   2d7ec:	add	r3, r4, r3
   2d7f0:	bl	10bbc <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   2d7f4:	mov	r0, r4
   2d7f8:	add	sp, sp, #8
   2d7fc:	ldrd	r4, [sp]
   2d800:	ldr	r6, [sp, #8]
   2d804:	add	sp, sp, #12
   2d808:	pop	{pc}		; (ldr pc, [sp], #4)

0002d80c <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2d80c:	strd	r4, [sp, #-16]!
   2d810:	str	r6, [sp, #8]
   2d814:	str	lr, [sp, #12]
   2d818:	mov	r5, r0
   2d81c:	mov	r2, r1
   2d820:	mov	r4, r3
   2d824:	ldr	r1, [r1, #32]
   2d828:	ldr	r3, [sp, #16]
   2d82c:	sub	r3, r3, r1
   2d830:	ldr	r1, [r0, #192]	; 0xc0
   2d834:	add	r3, r3, r1
   2d838:	str	r3, [r2, #36]	; 0x24
   2d83c:	mov	r1, r4
   2d840:	bl	ffc8 <myhtml_queue_add@plt>
   2d844:	cmp	r0, #0
   2d848:	bne	2d860 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base+0x54>
   2d84c:	mov	r0, r4
   2d850:	ldrd	r4, [sp]
   2d854:	ldr	r6, [sp, #8]
   2d858:	add	sp, sp, #12
   2d85c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d860:	mov	r3, #69	; 0x45
   2d864:	str	r3, [r5, #160]	; 0xa0
   2d868:	mov	r4, #0
   2d86c:	b	2d84c <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base+0x40>

0002d870 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2d870:	strd	r4, [sp, #-16]!
   2d874:	str	r6, [sp, #8]
   2d878:	str	lr, [sp, #12]
   2d87c:	mov	r4, r0
   2d880:	mov	r2, r1
   2d884:	mov	r5, r3
   2d888:	ldr	r1, [sp, #16]
   2d88c:	ldr	r3, [r2, #32]
   2d890:	sub	r3, r1, r3
   2d894:	ldr	r0, [r0, #192]	; 0xc0
   2d898:	add	r3, r3, r0
   2d89c:	str	r3, [r2, #36]	; 0x24
   2d8a0:	mov	r3, #1
   2d8a4:	str	r3, [r4, #176]	; 0xb0
   2d8a8:	ldr	r3, [r4, #56]	; 0x38
   2d8ac:	ldr	r0, [r3, #48]	; 0x30
   2d8b0:	cmp	r1, #0
   2d8b4:	cmpne	r0, #0
   2d8b8:	bne	2d8e4 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x74>
   2d8bc:	mov	r1, r5
   2d8c0:	mov	r0, r4
   2d8c4:	bl	ffc8 <myhtml_queue_add@plt>
   2d8c8:	cmp	r0, #0
   2d8cc:	bne	2d8f8 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x88>
   2d8d0:	mov	r0, r5
   2d8d4:	ldrd	r4, [sp]
   2d8d8:	ldr	r6, [sp, #8]
   2d8dc:	add	sp, sp, #12
   2d8e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d8e4:	ldr	r1, [r4, #192]	; 0xc0
   2d8e8:	add	r1, r5, r1
   2d8ec:	sub	r0, r1, r0
   2d8f0:	str	r0, [r3, #52]	; 0x34
   2d8f4:	b	2d8bc <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x4c>
   2d8f8:	mov	r3, #69	; 0x45
   2d8fc:	str	r3, [r4, #160]	; 0xa0
   2d900:	mov	r5, #0
   2d904:	b	2d8d0 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x60>

0002d908 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   2d908:	strd	r4, [sp, #-16]!
   2d90c:	str	r6, [sp, #8]
   2d910:	str	lr, [sp, #12]
   2d914:	sub	sp, sp, #8
   2d918:	mov	r4, r3
   2d91c:	ldr	ip, [sp, #24]
   2d920:	ldr	r3, [r1, #32]
   2d924:	sub	r3, ip, r3
   2d928:	ldr	r6, [r0, #192]	; 0xc0
   2d92c:	add	r3, r3, r6
   2d930:	str	r3, [r1, #36]	; 0x24
   2d934:	ldr	r3, [r0, #192]	; 0xc0
   2d938:	str	ip, [sp]
   2d93c:	add	r3, r4, r3
   2d940:	bl	10d9c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   2d944:	mov	r0, r4
   2d948:	add	sp, sp, #8
   2d94c:	ldrd	r4, [sp]
   2d950:	ldr	r6, [sp, #8]
   2d954:	add	sp, sp, #12
   2d958:	pop	{pc}		; (ldr pc, [sp], #4)

0002d95c <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   2d95c:	strd	r4, [sp, #-16]!
   2d960:	str	r6, [sp, #8]
   2d964:	str	lr, [sp, #12]
   2d968:	mov	r5, r0
   2d96c:	mov	r2, r1
   2d970:	mov	r4, r3
   2d974:	ldr	r1, [r1, #32]
   2d978:	ldr	r3, [sp, #16]
   2d97c:	sub	r3, r3, r1
   2d980:	ldr	r1, [r0, #192]	; 0xc0
   2d984:	add	r3, r3, r1
   2d988:	str	r3, [r2, #36]	; 0x24
   2d98c:	mov	r1, r4
   2d990:	bl	ffc8 <myhtml_queue_add@plt>
   2d994:	cmp	r0, #0
   2d998:	bne	2d9b0 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base+0x54>
   2d99c:	mov	r0, r4
   2d9a0:	ldrd	r4, [sp]
   2d9a4:	ldr	r6, [sp, #8]
   2d9a8:	add	sp, sp, #12
   2d9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2d9b0:	mov	r3, #69	; 0x45
   2d9b4:	str	r3, [r5, #160]	; 0xa0
   2d9b8:	mov	r4, #0
   2d9bc:	b	2d99c <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base+0x40>

0002d9c0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   2d9c0:	strd	r4, [sp, #-16]!
   2d9c4:	str	r6, [sp, #8]
   2d9c8:	str	lr, [sp, #12]
   2d9cc:	mov	r5, r0
   2d9d0:	mov	r2, r1
   2d9d4:	mov	r4, r3
   2d9d8:	ldr	r1, [r1, #32]
   2d9dc:	ldr	r3, [sp, #16]
   2d9e0:	sub	r3, r3, r1
   2d9e4:	ldr	r1, [r0, #192]	; 0xc0
   2d9e8:	add	r3, r3, r1
   2d9ec:	str	r3, [r2, #36]	; 0x24
   2d9f0:	mov	r1, r4
   2d9f4:	bl	ffc8 <myhtml_queue_add@plt>
   2d9f8:	cmp	r0, #0
   2d9fc:	bne	2da14 <myhtml_tokenizer_end_state_bogus_doctype@@Base+0x54>
   2da00:	mov	r0, r4
   2da04:	ldrd	r4, [sp]
   2da08:	ldr	r6, [sp, #8]
   2da0c:	add	sp, sp, #12
   2da10:	pop	{pc}		; (ldr pc, [sp], #4)
   2da14:	mov	r3, #69	; 0x45
   2da18:	str	r3, [r5, #160]	; 0xa0
   2da1c:	mov	r4, #0
   2da20:	b	2da00 <myhtml_tokenizer_end_state_bogus_doctype@@Base+0x40>

0002da24 <myhtml_tokenizer_end_state_script_data@@Base>:
   2da24:	strd	r4, [sp, #-12]!
   2da28:	str	lr, [sp, #8]
   2da2c:	sub	sp, sp, #12
   2da30:	mov	r4, r3
   2da34:	ldr	r5, [r1, #32]
   2da38:	ldr	r3, [sp, #24]
   2da3c:	sub	r3, r3, r5
   2da40:	ldr	r5, [r0, #192]	; 0xc0
   2da44:	add	r3, r3, r5
   2da48:	str	r3, [r1, #36]	; 0x24
   2da4c:	ldr	r3, [r0, #192]	; 0xc0
   2da50:	mov	ip, #64	; 0x40
   2da54:	str	ip, [sp]
   2da58:	add	r3, r4, r3
   2da5c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2da60:	mov	r0, r4
   2da64:	add	sp, sp, #12
   2da68:	ldrd	r4, [sp]
   2da6c:	add	sp, sp, #8
   2da70:	pop	{pc}		; (ldr pc, [sp], #4)

0002da74 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   2da74:	strd	r4, [sp, #-12]!
   2da78:	str	lr, [sp, #8]
   2da7c:	sub	sp, sp, #12
   2da80:	mov	r4, r3
   2da84:	ldr	r5, [r1, #32]
   2da88:	ldr	r3, [sp, #24]
   2da8c:	sub	r3, r3, r5
   2da90:	ldr	r5, [r0, #192]	; 0xc0
   2da94:	add	r3, r3, r5
   2da98:	str	r3, [r1, #36]	; 0x24
   2da9c:	ldr	r3, [r0, #192]	; 0xc0
   2daa0:	mov	ip, #64	; 0x40
   2daa4:	str	ip, [sp]
   2daa8:	add	r3, r4, r3
   2daac:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dab0:	mov	r0, r4
   2dab4:	add	sp, sp, #12
   2dab8:	ldrd	r4, [sp]
   2dabc:	add	sp, sp, #8
   2dac0:	pop	{pc}		; (ldr pc, [sp], #4)

0002dac4 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   2dac4:	strd	r4, [sp, #-12]!
   2dac8:	str	lr, [sp, #8]
   2dacc:	sub	sp, sp, #12
   2dad0:	mov	r4, r3
   2dad4:	ldr	r5, [r1, #32]
   2dad8:	ldr	r3, [sp, #24]
   2dadc:	sub	r3, r3, r5
   2dae0:	ldr	r5, [r0, #192]	; 0xc0
   2dae4:	add	r3, r3, r5
   2dae8:	str	r3, [r1, #36]	; 0x24
   2daec:	ldr	r3, [r0, #192]	; 0xc0
   2daf0:	mov	ip, #64	; 0x40
   2daf4:	str	ip, [sp]
   2daf8:	add	r3, r4, r3
   2dafc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2db00:	mov	r0, r4
   2db04:	add	sp, sp, #12
   2db08:	ldrd	r4, [sp]
   2db0c:	add	sp, sp, #8
   2db10:	pop	{pc}		; (ldr pc, [sp], #4)

0002db14 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   2db14:	strd	r4, [sp, #-12]!
   2db18:	str	lr, [sp, #8]
   2db1c:	sub	sp, sp, #12
   2db20:	mov	r4, r3
   2db24:	ldr	r5, [r1, #32]
   2db28:	ldr	r3, [sp, #24]
   2db2c:	sub	r3, r3, r5
   2db30:	ldr	r5, [r0, #192]	; 0xc0
   2db34:	add	r3, r3, r5
   2db38:	str	r3, [r1, #36]	; 0x24
   2db3c:	ldr	r3, [r0, #192]	; 0xc0
   2db40:	mov	ip, #64	; 0x40
   2db44:	str	ip, [sp]
   2db48:	add	r3, r4, r3
   2db4c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2db50:	mov	r0, r4
   2db54:	add	sp, sp, #12
   2db58:	ldrd	r4, [sp]
   2db5c:	add	sp, sp, #8
   2db60:	pop	{pc}		; (ldr pc, [sp], #4)

0002db64 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2db64:	strd	r4, [sp, #-12]!
   2db68:	str	lr, [sp, #8]
   2db6c:	sub	sp, sp, #12
   2db70:	mov	r4, r3
   2db74:	ldr	r5, [r1, #32]
   2db78:	ldr	r3, [sp, #24]
   2db7c:	sub	r3, r3, r5
   2db80:	ldr	r5, [r0, #192]	; 0xc0
   2db84:	add	r3, r3, r5
   2db88:	str	r3, [r1, #36]	; 0x24
   2db8c:	ldr	r3, [r0, #192]	; 0xc0
   2db90:	mov	ip, #64	; 0x40
   2db94:	str	ip, [sp]
   2db98:	add	r3, r4, r3
   2db9c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dba0:	mov	r0, r4
   2dba4:	add	sp, sp, #12
   2dba8:	ldrd	r4, [sp]
   2dbac:	add	sp, sp, #8
   2dbb0:	pop	{pc}		; (ldr pc, [sp], #4)

0002dbb4 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2dbb4:	strd	r4, [sp, #-12]!
   2dbb8:	str	lr, [sp, #8]
   2dbbc:	sub	sp, sp, #12
   2dbc0:	mov	r4, r3
   2dbc4:	ldr	r5, [r1, #32]
   2dbc8:	ldr	r3, [sp, #24]
   2dbcc:	sub	r3, r3, r5
   2dbd0:	ldr	r5, [r0, #192]	; 0xc0
   2dbd4:	add	r3, r3, r5
   2dbd8:	str	r3, [r1, #36]	; 0x24
   2dbdc:	ldr	r3, [r0, #192]	; 0xc0
   2dbe0:	mov	ip, #64	; 0x40
   2dbe4:	str	ip, [sp]
   2dbe8:	add	r3, r4, r3
   2dbec:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dbf0:	mov	r0, r4
   2dbf4:	add	sp, sp, #12
   2dbf8:	ldrd	r4, [sp]
   2dbfc:	add	sp, sp, #8
   2dc00:	pop	{pc}		; (ldr pc, [sp], #4)

0002dc04 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   2dc04:	strd	r4, [sp, #-12]!
   2dc08:	str	lr, [sp, #8]
   2dc0c:	sub	sp, sp, #12
   2dc10:	mov	r4, r3
   2dc14:	ldr	r5, [r1, #32]
   2dc18:	ldr	r3, [sp, #24]
   2dc1c:	sub	r3, r3, r5
   2dc20:	ldr	r5, [r0, #192]	; 0xc0
   2dc24:	add	r3, r3, r5
   2dc28:	str	r3, [r1, #36]	; 0x24
   2dc2c:	ldr	r3, [r0, #192]	; 0xc0
   2dc30:	mov	ip, #64	; 0x40
   2dc34:	str	ip, [sp]
   2dc38:	add	r3, r4, r3
   2dc3c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dc40:	mov	r0, r4
   2dc44:	add	sp, sp, #12
   2dc48:	ldrd	r4, [sp]
   2dc4c:	add	sp, sp, #8
   2dc50:	pop	{pc}		; (ldr pc, [sp], #4)

0002dc54 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   2dc54:	strd	r4, [sp, #-12]!
   2dc58:	str	lr, [sp, #8]
   2dc5c:	sub	sp, sp, #12
   2dc60:	mov	r4, r3
   2dc64:	ldr	r5, [r1, #32]
   2dc68:	ldr	r3, [sp, #24]
   2dc6c:	sub	r3, r3, r5
   2dc70:	ldr	r5, [r0, #192]	; 0xc0
   2dc74:	add	r3, r3, r5
   2dc78:	str	r3, [r1, #36]	; 0x24
   2dc7c:	ldr	r3, [r0, #192]	; 0xc0
   2dc80:	mov	ip, #64	; 0x40
   2dc84:	str	ip, [sp]
   2dc88:	add	r3, r4, r3
   2dc8c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dc90:	mov	r0, r4
   2dc94:	add	sp, sp, #12
   2dc98:	ldrd	r4, [sp]
   2dc9c:	add	sp, sp, #8
   2dca0:	pop	{pc}		; (ldr pc, [sp], #4)

0002dca4 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   2dca4:	strd	r4, [sp, #-12]!
   2dca8:	str	lr, [sp, #8]
   2dcac:	sub	sp, sp, #12
   2dcb0:	mov	r4, r3
   2dcb4:	ldr	r5, [r1, #32]
   2dcb8:	ldr	r3, [sp, #24]
   2dcbc:	sub	r3, r3, r5
   2dcc0:	ldr	r5, [r0, #192]	; 0xc0
   2dcc4:	add	r3, r3, r5
   2dcc8:	str	r3, [r1, #36]	; 0x24
   2dccc:	ldr	r3, [r0, #192]	; 0xc0
   2dcd0:	mov	ip, #64	; 0x40
   2dcd4:	str	ip, [sp]
   2dcd8:	add	r3, r4, r3
   2dcdc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dce0:	mov	r0, r4
   2dce4:	add	sp, sp, #12
   2dce8:	ldrd	r4, [sp]
   2dcec:	add	sp, sp, #8
   2dcf0:	pop	{pc}		; (ldr pc, [sp], #4)

0002dcf4 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2dcf4:	strd	r4, [sp, #-12]!
   2dcf8:	str	lr, [sp, #8]
   2dcfc:	sub	sp, sp, #12
   2dd00:	mov	r4, r3
   2dd04:	ldr	r5, [r1, #32]
   2dd08:	ldr	r3, [sp, #24]
   2dd0c:	sub	r3, r3, r5
   2dd10:	ldr	r5, [r0, #192]	; 0xc0
   2dd14:	add	r3, r3, r5
   2dd18:	str	r3, [r1, #36]	; 0x24
   2dd1c:	ldr	r3, [r0, #192]	; 0xc0
   2dd20:	mov	ip, #64	; 0x40
   2dd24:	str	ip, [sp]
   2dd28:	add	r3, r4, r3
   2dd2c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dd30:	mov	r0, r4
   2dd34:	add	sp, sp, #12
   2dd38:	ldrd	r4, [sp]
   2dd3c:	add	sp, sp, #8
   2dd40:	pop	{pc}		; (ldr pc, [sp], #4)

0002dd44 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   2dd44:	strd	r4, [sp, #-12]!
   2dd48:	str	lr, [sp, #8]
   2dd4c:	sub	sp, sp, #12
   2dd50:	mov	r4, r3
   2dd54:	ldr	r5, [r1, #32]
   2dd58:	ldr	r3, [sp, #24]
   2dd5c:	sub	r3, r3, r5
   2dd60:	ldr	r5, [r0, #192]	; 0xc0
   2dd64:	add	r3, r3, r5
   2dd68:	str	r3, [r1, #36]	; 0x24
   2dd6c:	ldr	r3, [r0, #192]	; 0xc0
   2dd70:	mov	ip, #64	; 0x40
   2dd74:	str	ip, [sp]
   2dd78:	add	r3, r4, r3
   2dd7c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dd80:	mov	r0, r4
   2dd84:	add	sp, sp, #12
   2dd88:	ldrd	r4, [sp]
   2dd8c:	add	sp, sp, #8
   2dd90:	pop	{pc}		; (ldr pc, [sp], #4)

0002dd94 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   2dd94:	strd	r4, [sp, #-12]!
   2dd98:	str	lr, [sp, #8]
   2dd9c:	sub	sp, sp, #12
   2dda0:	mov	r4, r3
   2dda4:	ldr	r5, [r1, #32]
   2dda8:	ldr	r3, [sp, #24]
   2ddac:	sub	r3, r3, r5
   2ddb0:	ldr	r5, [r0, #192]	; 0xc0
   2ddb4:	add	r3, r3, r5
   2ddb8:	str	r3, [r1, #36]	; 0x24
   2ddbc:	ldr	r3, [r0, #192]	; 0xc0
   2ddc0:	mov	ip, #64	; 0x40
   2ddc4:	str	ip, [sp]
   2ddc8:	add	r3, r4, r3
   2ddcc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ddd0:	mov	r0, r4
   2ddd4:	add	sp, sp, #12
   2ddd8:	ldrd	r4, [sp]
   2dddc:	add	sp, sp, #8
   2dde0:	pop	{pc}		; (ldr pc, [sp], #4)

0002dde4 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   2dde4:	strd	r4, [sp, #-12]!
   2dde8:	str	lr, [sp, #8]
   2ddec:	sub	sp, sp, #12
   2ddf0:	mov	r4, r3
   2ddf4:	ldr	r5, [r1, #32]
   2ddf8:	ldr	r3, [sp, #24]
   2ddfc:	sub	r3, r3, r5
   2de00:	ldr	r5, [r0, #192]	; 0xc0
   2de04:	add	r3, r3, r5
   2de08:	str	r3, [r1, #36]	; 0x24
   2de0c:	ldr	r3, [r0, #192]	; 0xc0
   2de10:	mov	ip, #64	; 0x40
   2de14:	str	ip, [sp]
   2de18:	add	r3, r4, r3
   2de1c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2de20:	mov	r0, r4
   2de24:	add	sp, sp, #12
   2de28:	ldrd	r4, [sp]
   2de2c:	add	sp, sp, #8
   2de30:	pop	{pc}		; (ldr pc, [sp], #4)

0002de34 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2de34:	strd	r4, [sp, #-12]!
   2de38:	str	lr, [sp, #8]
   2de3c:	sub	sp, sp, #12
   2de40:	mov	r4, r3
   2de44:	ldr	r5, [r1, #32]
   2de48:	ldr	r3, [sp, #24]
   2de4c:	sub	r3, r3, r5
   2de50:	ldr	r5, [r0, #192]	; 0xc0
   2de54:	add	r3, r3, r5
   2de58:	str	r3, [r1, #36]	; 0x24
   2de5c:	ldr	r3, [r0, #192]	; 0xc0
   2de60:	mov	ip, #64	; 0x40
   2de64:	str	ip, [sp]
   2de68:	add	r3, r4, r3
   2de6c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2de70:	mov	r0, r4
   2de74:	add	sp, sp, #12
   2de78:	ldrd	r4, [sp]
   2de7c:	add	sp, sp, #8
   2de80:	pop	{pc}		; (ldr pc, [sp], #4)

0002de84 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   2de84:	strd	r4, [sp, #-12]!
   2de88:	str	lr, [sp, #8]
   2de8c:	sub	sp, sp, #12
   2de90:	mov	r4, r3
   2de94:	ldr	r5, [r1, #32]
   2de98:	ldr	r3, [sp, #24]
   2de9c:	sub	r3, r3, r5
   2dea0:	ldr	r5, [r0, #192]	; 0xc0
   2dea4:	add	r3, r3, r5
   2dea8:	str	r3, [r1, #36]	; 0x24
   2deac:	ldr	r3, [r0, #192]	; 0xc0
   2deb0:	mov	ip, #64	; 0x40
   2deb4:	str	ip, [sp]
   2deb8:	add	r3, r4, r3
   2debc:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dec0:	mov	r0, r4
   2dec4:	add	sp, sp, #12
   2dec8:	ldrd	r4, [sp]
   2decc:	add	sp, sp, #8
   2ded0:	pop	{pc}		; (ldr pc, [sp], #4)

0002ded4 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   2ded4:	strd	r4, [sp, #-12]!
   2ded8:	str	lr, [sp, #8]
   2dedc:	sub	sp, sp, #12
   2dee0:	mov	r4, r3
   2dee4:	ldr	r5, [r1, #32]
   2dee8:	ldr	r3, [sp, #24]
   2deec:	sub	r3, r3, r5
   2def0:	ldr	r5, [r0, #192]	; 0xc0
   2def4:	add	r3, r3, r5
   2def8:	str	r3, [r1, #36]	; 0x24
   2defc:	ldr	r3, [r0, #192]	; 0xc0
   2df00:	mov	ip, #64	; 0x40
   2df04:	str	ip, [sp]
   2df08:	add	r3, r4, r3
   2df0c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2df10:	mov	r0, r4
   2df14:	add	sp, sp, #12
   2df18:	ldrd	r4, [sp]
   2df1c:	add	sp, sp, #8
   2df20:	pop	{pc}		; (ldr pc, [sp], #4)

0002df24 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   2df24:	strd	r4, [sp, #-12]!
   2df28:	str	lr, [sp, #8]
   2df2c:	sub	sp, sp, #12
   2df30:	mov	r4, r3
   2df34:	ldr	r5, [r1, #32]
   2df38:	ldr	r3, [sp, #24]
   2df3c:	sub	r3, r3, r5
   2df40:	ldr	r5, [r0, #192]	; 0xc0
   2df44:	add	r3, r3, r5
   2df48:	str	r3, [r1, #36]	; 0x24
   2df4c:	ldr	r3, [r0, #192]	; 0xc0
   2df50:	mov	ip, #64	; 0x40
   2df54:	str	ip, [sp]
   2df58:	add	r3, r4, r3
   2df5c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2df60:	mov	r0, r4
   2df64:	add	sp, sp, #12
   2df68:	ldrd	r4, [sp]
   2df6c:	add	sp, sp, #8
   2df70:	pop	{pc}		; (ldr pc, [sp], #4)

0002df74 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2df74:	strd	r4, [sp, #-12]!
   2df78:	str	lr, [sp, #8]
   2df7c:	sub	sp, sp, #12
   2df80:	mov	r4, r3
   2df84:	ldr	r5, [r1, #32]
   2df88:	ldr	r3, [sp, #24]
   2df8c:	sub	r3, r3, r5
   2df90:	ldr	r5, [r0, #192]	; 0xc0
   2df94:	add	r3, r3, r5
   2df98:	str	r3, [r1, #36]	; 0x24
   2df9c:	ldr	r3, [r0, #192]	; 0xc0
   2dfa0:	mov	ip, #64	; 0x40
   2dfa4:	str	ip, [sp]
   2dfa8:	add	r3, r4, r3
   2dfac:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2dfb0:	mov	r0, r4
   2dfb4:	add	sp, sp, #12
   2dfb8:	ldrd	r4, [sp]
   2dfbc:	add	sp, sp, #8
   2dfc0:	pop	{pc}		; (ldr pc, [sp], #4)

0002dfc4 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   2dfc4:	ldr	r0, [sp]
   2dfc8:	bx	lr

0002dfcc <myhtml_tokenizer_state_script_data@@Base>:
   2dfcc:	str	r4, [sp, #-8]!
   2dfd0:	str	lr, [sp, #4]
   2dfd4:	ldr	lr, [sp, #8]
   2dfd8:	cmp	r3, lr
   2dfdc:	bcs	2e02c <myhtml_tokenizer_state_script_data@@Base+0x60>
   2dfe0:	add	ip, r2, r3
   2dfe4:	ldrb	r4, [r2, r3]
   2dfe8:	cmp	r4, #60	; 0x3c
   2dfec:	subne	r4, r2, #1
   2dff0:	addne	r4, r4, lr
   2dff4:	rsbne	r2, r2, #1
   2dff8:	beq	2e014 <myhtml_tokenizer_state_script_data@@Base+0x48>
   2dffc:	add	r3, r2, ip
   2e000:	cmp	ip, r4
   2e004:	beq	2e02c <myhtml_tokenizer_state_script_data@@Base+0x60>
   2e008:	ldrb	lr, [ip, #1]!
   2e00c:	cmp	lr, #60	; 0x3c
   2e010:	bne	2dffc <myhtml_tokenizer_state_script_data@@Base+0x30>
   2e014:	ldr	r2, [r0, #192]	; 0xc0
   2e018:	add	r2, r2, r3
   2e01c:	str	r2, [r1, #32]
   2e020:	add	r3, r3, #1
   2e024:	mov	r2, #16
   2e028:	str	r2, [r0, #160]	; 0xa0
   2e02c:	mov	r0, r3
   2e030:	ldr	r4, [sp]
   2e034:	add	sp, sp, #4
   2e038:	pop	{pc}		; (ldr pc, [sp], #4)

0002e03c <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   2e03c:	ldrb	r2, [r2, r3]
   2e040:	cmp	r2, #47	; 0x2f
   2e044:	addeq	r3, r3, #1
   2e048:	moveq	r2, #17
   2e04c:	streq	r2, [r0, #160]	; 0xa0
   2e050:	beq	2e068 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x2c>
   2e054:	cmp	r2, #33	; 0x21
   2e058:	addeq	r3, r3, #1
   2e05c:	moveq	r2, #19
   2e060:	movne	r2, #5
   2e064:	str	r2, [r0, #160]	; 0xa0
   2e068:	mov	r0, r3
   2e06c:	bx	lr

0002e070 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   2e070:	ldrb	r2, [r2, r3]
   2e074:	cmp	r2, #45	; 0x2d
   2e078:	addeq	r3, r3, #1
   2e07c:	moveq	r2, #20
   2e080:	movne	r2, #5
   2e084:	str	r2, [r0, #160]	; 0xa0
   2e088:	mov	r0, r3
   2e08c:	bx	lr

0002e090 <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   2e090:	ldrb	r2, [r2, r3]
   2e094:	cmp	r2, #45	; 0x2d
   2e098:	addeq	r3, r3, #1
   2e09c:	moveq	r2, #23
   2e0a0:	movne	r2, #5
   2e0a4:	str	r2, [r0, #160]	; 0xa0
   2e0a8:	mov	r0, r3
   2e0ac:	bx	lr

0002e0b0 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   2e0b0:	ldrb	r2, [r2, r3]
   2e0b4:	bic	r2, r2, #32
   2e0b8:	sub	r2, r2, #65	; 0x41
   2e0bc:	uxtb	r2, r2
   2e0c0:	cmp	r2, #25
   2e0c4:	movhi	r2, #5
   2e0c8:	strhi	r2, [r0, #160]	; 0xa0
   2e0cc:	bhi	2e0e4 <myhtml_tokenizer_state_script_data_end_tag_open@@Base+0x34>
   2e0d0:	ldr	r2, [r0, #192]	; 0xc0
   2e0d4:	add	r2, r2, r3
   2e0d8:	str	r2, [r1, #12]
   2e0dc:	mov	r2, #18
   2e0e0:	str	r2, [r0, #160]	; 0xa0
   2e0e4:	mov	r0, r3
   2e0e8:	bx	lr

0002e0ec <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   2e0ec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2e0f0:	strd	r6, [sp, #8]
   2e0f4:	strd	r8, [sp, #16]
   2e0f8:	str	lr, [sp, #24]
   2e0fc:	sub	sp, sp, #12
   2e100:	mov	r6, r0
   2e104:	mov	r4, r3
   2e108:	ldr	r0, [sp, #40]	; 0x28
   2e10c:	cmp	r3, r0
   2e110:	bcs	2e460 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x374>
   2e114:	mov	r7, r1
   2e118:	mov	r5, r2
   2e11c:	add	r1, r2, r3
   2e120:	ldrb	r3, [r2, r3]
   2e124:	sub	r2, r3, #9
   2e128:	uxtb	r2, r2
   2e12c:	sub	ip, r3, #12
   2e130:	uxtb	ip, ip
   2e134:	cmp	ip, #1
   2e138:	cmphi	r2, #1
   2e13c:	movls	r2, #1
   2e140:	movhi	r2, #0
   2e144:	cmp	r3, #32
   2e148:	orreq	r2, r2, #1
   2e14c:	cmp	r2, #0
   2e150:	bne	2e1f0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x104>
   2e154:	cmp	r3, #47	; 0x2f
   2e158:	beq	2e2c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d8>
   2e15c:	cmp	r3, #62	; 0x3e
   2e160:	beq	2e1c8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xdc>
   2e164:	bic	r3, r3, #32
   2e168:	sub	r3, r3, #65	; 0x41
   2e16c:	uxtb	r3, r3
   2e170:	cmp	r3, #25
   2e174:	bhi	2e448 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x35c>
   2e178:	add	r4, r4, #1
   2e17c:	cmp	r0, r4
   2e180:	beq	2e458 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x36c>
   2e184:	ldrb	r3, [r1, #1]!
   2e188:	sub	r2, r3, #9
   2e18c:	uxtb	r2, r2
   2e190:	sub	ip, r3, #12
   2e194:	uxtb	ip, ip
   2e198:	cmp	ip, #1
   2e19c:	cmphi	r2, #1
   2e1a0:	movls	r2, #1
   2e1a4:	movhi	r2, #0
   2e1a8:	cmp	r3, #32
   2e1ac:	orreq	r2, r2, #1
   2e1b0:	cmp	r2, #0
   2e1b4:	bne	2e1f0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x104>
   2e1b8:	cmp	r3, #47	; 0x2f
   2e1bc:	beq	2e2c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1d8>
   2e1c0:	cmp	r3, #62	; 0x3e
   2e1c4:	bne	2e164 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x78>
   2e1c8:	ldr	r8, [r7, #12]
   2e1cc:	ldr	r3, [r6, #192]	; 0xc0
   2e1d0:	sub	r3, r3, r8
   2e1d4:	add	r3, r3, r4
   2e1d8:	cmp	r3, #6
   2e1dc:	beq	2e380 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2e1e0:	mov	r3, #5
   2e1e4:	str	r3, [r6, #160]	; 0xa0
   2e1e8:	add	r9, r4, #1
   2e1ec:	b	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e1f0:	ldr	r8, [r7, #12]
   2e1f4:	ldr	r3, [r6, #192]	; 0xc0
   2e1f8:	sub	r3, r3, r8
   2e1fc:	add	r3, r3, r4
   2e200:	cmp	r3, #6
   2e204:	beq	2e230 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x144>
   2e208:	mov	r3, #5
   2e20c:	str	r3, [r6, #160]	; 0xa0
   2e210:	add	r9, r4, #1
   2e214:	mov	r0, r9
   2e218:	add	sp, sp, #12
   2e21c:	ldrd	r4, [sp]
   2e220:	ldrd	r6, [sp, #8]
   2e224:	ldrd	r8, [sp, #16]
   2e228:	add	sp, sp, #24
   2e22c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e230:	mov	r2, #6
   2e234:	mov	r1, r8
   2e238:	mov	r0, r6
   2e23c:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2e240:	mov	r2, #6
   2e244:	ldr	r1, [pc, #540]	; 2e468 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x37c>
   2e248:	add	r1, pc, r1
   2e24c:	bl	10238 <mycore_strncasecmp@plt>
   2e250:	subs	r9, r0, #0
   2e254:	movne	r3, #5
   2e258:	strne	r3, [r6, #160]	; 0xa0
   2e25c:	beq	2e268 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x17c>
   2e260:	add	r9, r4, #1
   2e264:	b	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e268:	ldr	r3, [r6, #192]	; 0xc0
   2e26c:	sub	r3, r3, #8
   2e270:	mov	r2, #64	; 0x40
   2e274:	str	r2, [sp]
   2e278:	add	r3, r3, r4
   2e27c:	mov	r2, r5
   2e280:	mov	r1, r7
   2e284:	mov	r0, r6
   2e288:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e28c:	cmp	r0, #0
   2e290:	moveq	r3, #69	; 0x45
   2e294:	streq	r3, [r6, #160]	; 0xa0
   2e298:	beq	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e29c:	str	r8, [r0, #24]
   2e2a0:	mov	r3, #6
   2e2a4:	str	r3, [r0, #28]
   2e2a8:	mov	r3, #112	; 0x70
   2e2ac:	str	r3, [r0]
   2e2b0:	mov	r3, #1
   2e2b4:	str	r3, [r0, #48]	; 0x30
   2e2b8:	mov	r3, #33	; 0x21
   2e2bc:	str	r3, [r6, #160]	; 0xa0
   2e2c0:	b	2e260 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x174>
   2e2c4:	ldr	r8, [r7, #12]
   2e2c8:	ldr	r3, [r6, #192]	; 0xc0
   2e2cc:	sub	r3, r3, r8
   2e2d0:	add	r3, r3, r4
   2e2d4:	cmp	r3, #6
   2e2d8:	beq	2e2ec <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x200>
   2e2dc:	mov	r3, #5
   2e2e0:	str	r3, [r6, #160]	; 0xa0
   2e2e4:	add	r9, r4, #1
   2e2e8:	b	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e2ec:	mov	r2, #6
   2e2f0:	mov	r1, r8
   2e2f4:	mov	r0, r6
   2e2f8:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2e2fc:	mov	r2, #6
   2e300:	ldr	r1, [pc, #356]	; 2e46c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x380>
   2e304:	add	r1, pc, r1
   2e308:	bl	10238 <mycore_strncasecmp@plt>
   2e30c:	subs	r9, r0, #0
   2e310:	movne	r3, #5
   2e314:	strne	r3, [r6, #160]	; 0xa0
   2e318:	beq	2e324 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x238>
   2e31c:	add	r9, r4, #1
   2e320:	b	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e324:	ldr	r3, [r6, #192]	; 0xc0
   2e328:	sub	r3, r3, #8
   2e32c:	mov	r2, #64	; 0x40
   2e330:	str	r2, [sp]
   2e334:	add	r3, r3, r4
   2e338:	mov	r2, r5
   2e33c:	mov	r1, r7
   2e340:	mov	r0, r6
   2e344:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e348:	cmp	r0, #0
   2e34c:	moveq	r3, #69	; 0x45
   2e350:	streq	r3, [r6, #160]	; 0xa0
   2e354:	beq	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e358:	str	r8, [r0, #24]
   2e35c:	mov	r3, #6
   2e360:	str	r3, [r0, #28]
   2e364:	mov	r3, #112	; 0x70
   2e368:	str	r3, [r0]
   2e36c:	mov	r3, #3
   2e370:	str	r3, [r0, #48]	; 0x30
   2e374:	mov	r3, #33	; 0x21
   2e378:	str	r3, [r6, #160]	; 0xa0
   2e37c:	b	2e31c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x230>
   2e380:	mov	r2, #6
   2e384:	mov	r1, r8
   2e388:	mov	r0, r6
   2e38c:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2e390:	mov	r2, #6
   2e394:	ldr	r1, [pc, #212]	; 2e470 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x384>
   2e398:	add	r1, pc, r1
   2e39c:	bl	10238 <mycore_strncasecmp@plt>
   2e3a0:	subs	r9, r0, #0
   2e3a4:	movne	r3, #5
   2e3a8:	strne	r3, [r6, #160]	; 0xa0
   2e3ac:	addne	r9, r4, #1
   2e3b0:	bne	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e3b4:	ldr	r3, [r6, #192]	; 0xc0
   2e3b8:	sub	r3, r3, #8
   2e3bc:	mov	r2, #64	; 0x40
   2e3c0:	str	r2, [sp]
   2e3c4:	add	r3, r3, r4
   2e3c8:	mov	r2, r5
   2e3cc:	mov	r1, r7
   2e3d0:	mov	r0, r6
   2e3d4:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e3d8:	subs	r2, r0, #0
   2e3dc:	moveq	r3, #69	; 0x45
   2e3e0:	streq	r3, [r6, #160]	; 0xa0
   2e3e4:	beq	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e3e8:	str	r8, [r2, #24]
   2e3ec:	mov	r3, #6
   2e3f0:	str	r3, [r2, #28]
   2e3f4:	mov	r3, #112	; 0x70
   2e3f8:	str	r3, [r2]
   2e3fc:	mov	r3, #1
   2e400:	str	r3, [r2, #48]	; 0x30
   2e404:	add	r4, r4, r3
   2e408:	ldr	r3, [r6, #192]	; 0xc0
   2e40c:	add	r3, r4, r3
   2e410:	ldr	r1, [r2, #32]
   2e414:	sub	r3, r3, r1
   2e418:	str	r3, [r2, #36]	; 0x24
   2e41c:	mov	r1, r4
   2e420:	mov	r0, r6
   2e424:	bl	ffc8 <myhtml_queue_add@plt>
   2e428:	cmp	r0, #0
   2e42c:	movne	r3, #69	; 0x45
   2e430:	strne	r3, [r6, #160]	; 0xa0
   2e434:	bne	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e438:	mov	r3, #0
   2e43c:	str	r3, [r6, #160]	; 0xa0
   2e440:	mov	r9, r4
   2e444:	b	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e448:	mov	r3, #5
   2e44c:	str	r3, [r6, #160]	; 0xa0
   2e450:	mov	r9, r4
   2e454:	b	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e458:	mov	r9, r4
   2e45c:	b	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e460:	mov	r9, r3
   2e464:	b	2e214 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x128>
   2e468:	ldrdeq	r2, [sp], -r0
   2e46c:	andeq	r2, sp, r4, lsl r6
   2e470:	andeq	r2, sp, r0, lsl #11

0002e474 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   2e474:	ldrb	r2, [r2, r3]
   2e478:	cmp	r2, #45	; 0x2d
   2e47c:	beq	2e4a8 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x34>
   2e480:	cmp	r2, #60	; 0x3c
   2e484:	moveq	r2, #24
   2e488:	streq	r2, [r0, #160]	; 0xa0
   2e48c:	beq	2e4a0 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   2e490:	cmp	r2, #62	; 0x3e
   2e494:	moveq	r2, #5
   2e498:	movne	r2, #21
   2e49c:	str	r2, [r0, #160]	; 0xa0
   2e4a0:	add	r0, r3, #1
   2e4a4:	bx	lr
   2e4a8:	add	r0, r3, #1
   2e4ac:	bx	lr

0002e4b0 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   2e4b0:	ldrb	r2, [r2, r3]
   2e4b4:	cmp	r2, #47	; 0x2f
   2e4b8:	beq	2e4ec <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x3c>
   2e4bc:	bic	r2, r2, #32
   2e4c0:	sub	r2, r2, #65	; 0x41
   2e4c4:	uxtb	r2, r2
   2e4c8:	cmp	r2, #25
   2e4cc:	bhi	2e4fc <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x4c>
   2e4d0:	ldr	r2, [r0, #192]	; 0xc0
   2e4d4:	add	r2, r2, r3
   2e4d8:	str	r2, [r1, #12]
   2e4dc:	mov	r2, #27
   2e4e0:	str	r2, [r0, #160]	; 0xa0
   2e4e4:	mov	r0, r3
   2e4e8:	bx	lr
   2e4ec:	mov	r2, #25
   2e4f0:	str	r2, [r0, #160]	; 0xa0
   2e4f4:	add	r0, r3, #1
   2e4f8:	bx	lr
   2e4fc:	mov	r2, #21
   2e500:	str	r2, [r0, #160]	; 0xa0
   2e504:	mov	r0, r3
   2e508:	bx	lr

0002e50c <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   2e50c:	ldrb	r2, [r2, r3]
   2e510:	bic	r2, r2, #32
   2e514:	sub	r2, r2, #65	; 0x41
   2e518:	uxtb	r2, r2
   2e51c:	cmp	r2, #25
   2e520:	movhi	r2, #21
   2e524:	strhi	r2, [r0, #160]	; 0xa0
   2e528:	bhi	2e540 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base+0x34>
   2e52c:	ldr	r2, [r0, #192]	; 0xc0
   2e530:	add	r2, r2, r3
   2e534:	str	r2, [r1, #12]
   2e538:	mov	r2, #26
   2e53c:	str	r2, [r0, #160]	; 0xa0
   2e540:	mov	r0, r3
   2e544:	bx	lr

0002e548 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   2e548:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2e54c:	strd	r6, [sp, #8]
   2e550:	strd	r8, [sp, #16]
   2e554:	str	sl, [sp, #24]
   2e558:	str	lr, [sp, #28]
   2e55c:	sub	sp, sp, #8
   2e560:	mov	r6, r0
   2e564:	mov	r4, r3
   2e568:	ldr	r0, [sp, #40]	; 0x28
   2e56c:	cmp	r3, r0
   2e570:	bcs	2e8c4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x37c>
   2e574:	mov	r7, r1
   2e578:	mov	r5, r2
   2e57c:	add	r1, r2, r3
   2e580:	ldrb	r3, [r2, r3]
   2e584:	sub	r2, r3, #9
   2e588:	uxtb	r2, r2
   2e58c:	sub	ip, r3, #12
   2e590:	uxtb	ip, ip
   2e594:	cmp	ip, #1
   2e598:	cmphi	r2, #1
   2e59c:	movls	r2, #1
   2e5a0:	movhi	r2, #0
   2e5a4:	cmp	r3, #32
   2e5a8:	orreq	r2, r2, #1
   2e5ac:	cmp	r2, #0
   2e5b0:	bne	2e650 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x108>
   2e5b4:	cmp	r3, #47	; 0x2f
   2e5b8:	beq	2e728 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1e0>
   2e5bc:	cmp	r3, #62	; 0x3e
   2e5c0:	beq	2e628 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe0>
   2e5c4:	bic	r3, r3, #32
   2e5c8:	sub	r3, r3, #65	; 0x41
   2e5cc:	uxtb	r3, r3
   2e5d0:	cmp	r3, #25
   2e5d4:	bhi	2e8ac <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x364>
   2e5d8:	add	r4, r4, #1
   2e5dc:	cmp	r0, r4
   2e5e0:	beq	2e8bc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x374>
   2e5e4:	ldrb	r3, [r1, #1]!
   2e5e8:	sub	r2, r3, #9
   2e5ec:	uxtb	r2, r2
   2e5f0:	sub	ip, r3, #12
   2e5f4:	uxtb	ip, ip
   2e5f8:	cmp	ip, #1
   2e5fc:	cmphi	r2, #1
   2e600:	movls	r2, #1
   2e604:	movhi	r2, #0
   2e608:	cmp	r3, #32
   2e60c:	orreq	r2, r2, #1
   2e610:	cmp	r2, #0
   2e614:	bne	2e650 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x108>
   2e618:	cmp	r3, #47	; 0x2f
   2e61c:	beq	2e728 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1e0>
   2e620:	cmp	r3, #62	; 0x3e
   2e624:	bne	2e5c4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x7c>
   2e628:	ldr	r8, [r7, #12]
   2e62c:	ldr	r3, [r6, #192]	; 0xc0
   2e630:	sub	r3, r3, r8
   2e634:	add	r3, r3, r4
   2e638:	cmp	r3, #6
   2e63c:	beq	2e7e4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x29c>
   2e640:	mov	r3, #21
   2e644:	str	r3, [r6, #160]	; 0xa0
   2e648:	add	r9, r4, #1
   2e64c:	b	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e650:	ldr	r8, [r7, #12]
   2e654:	ldr	r3, [r6, #192]	; 0xc0
   2e658:	sub	r3, r3, r8
   2e65c:	add	r3, r3, r4
   2e660:	cmp	r3, #6
   2e664:	beq	2e694 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x14c>
   2e668:	mov	r3, #21
   2e66c:	str	r3, [r6, #160]	; 0xa0
   2e670:	add	r9, r4, #1
   2e674:	mov	r0, r9
   2e678:	add	sp, sp, #8
   2e67c:	ldrd	r4, [sp]
   2e680:	ldrd	r6, [sp, #8]
   2e684:	ldrd	r8, [sp, #16]
   2e688:	ldr	sl, [sp, #24]
   2e68c:	add	sp, sp, #28
   2e690:	pop	{pc}		; (ldr pc, [sp], #4)
   2e694:	mov	r2, #6
   2e698:	mov	r1, r8
   2e69c:	mov	r0, r6
   2e6a0:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2e6a4:	mov	r2, #6
   2e6a8:	ldr	r1, [pc, #540]	; 2e8cc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x384>
   2e6ac:	add	r1, pc, r1
   2e6b0:	bl	10238 <mycore_strncasecmp@plt>
   2e6b4:	subs	r9, r0, #0
   2e6b8:	movne	r3, #21
   2e6bc:	strne	r3, [r6, #160]	; 0xa0
   2e6c0:	beq	2e6cc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x184>
   2e6c4:	add	r9, r4, #1
   2e6c8:	b	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e6cc:	ldr	r3, [r6, #192]	; 0xc0
   2e6d0:	sub	r3, r3, #8
   2e6d4:	mov	r2, #64	; 0x40
   2e6d8:	str	r2, [sp]
   2e6dc:	add	r3, r3, r4
   2e6e0:	mov	r2, r5
   2e6e4:	mov	r1, r7
   2e6e8:	mov	r0, r6
   2e6ec:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e6f0:	cmp	r0, #0
   2e6f4:	moveq	r3, #69	; 0x45
   2e6f8:	streq	r3, [r6, #160]	; 0xa0
   2e6fc:	beq	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e700:	str	r8, [r0, #24]
   2e704:	mov	r3, #6
   2e708:	str	r3, [r0, #28]
   2e70c:	mov	r3, #112	; 0x70
   2e710:	str	r3, [r0]
   2e714:	mov	r3, #1
   2e718:	str	r3, [r0, #48]	; 0x30
   2e71c:	mov	r3, #33	; 0x21
   2e720:	str	r3, [r6, #160]	; 0xa0
   2e724:	b	2e6c4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x17c>
   2e728:	ldr	r8, [r7, #12]
   2e72c:	ldr	r3, [r6, #192]	; 0xc0
   2e730:	sub	r3, r3, r8
   2e734:	add	r3, r3, r4
   2e738:	cmp	r3, #6
   2e73c:	beq	2e750 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x208>
   2e740:	mov	r3, #21
   2e744:	str	r3, [r6, #160]	; 0xa0
   2e748:	add	r9, r4, #1
   2e74c:	b	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e750:	mov	r2, #6
   2e754:	mov	r1, r8
   2e758:	mov	r0, r6
   2e75c:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2e760:	mov	r2, #6
   2e764:	ldr	r1, [pc, #356]	; 2e8d0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x388>
   2e768:	add	r1, pc, r1
   2e76c:	bl	10238 <mycore_strncasecmp@plt>
   2e770:	subs	r9, r0, #0
   2e774:	movne	r3, #21
   2e778:	strne	r3, [r6, #160]	; 0xa0
   2e77c:	beq	2e788 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x240>
   2e780:	add	r9, r4, #1
   2e784:	b	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e788:	ldr	r3, [r6, #192]	; 0xc0
   2e78c:	sub	r3, r3, #8
   2e790:	mov	r2, #64	; 0x40
   2e794:	str	r2, [sp]
   2e798:	add	r3, r3, r4
   2e79c:	mov	r2, r5
   2e7a0:	mov	r1, r7
   2e7a4:	mov	r0, r6
   2e7a8:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e7ac:	cmp	r0, #0
   2e7b0:	moveq	r3, #69	; 0x45
   2e7b4:	streq	r3, [r6, #160]	; 0xa0
   2e7b8:	beq	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e7bc:	str	r8, [r0, #24]
   2e7c0:	mov	r3, #6
   2e7c4:	str	r3, [r0, #28]
   2e7c8:	mov	r3, #112	; 0x70
   2e7cc:	str	r3, [r0]
   2e7d0:	mov	r3, #3
   2e7d4:	str	r3, [r0, #48]	; 0x30
   2e7d8:	mov	r3, #33	; 0x21
   2e7dc:	str	r3, [r6, #160]	; 0xa0
   2e7e0:	b	2e780 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x238>
   2e7e4:	mov	r2, #6
   2e7e8:	mov	r1, r8
   2e7ec:	mov	r0, r6
   2e7f0:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2e7f4:	mov	r2, #6
   2e7f8:	ldr	r1, [pc, #212]	; 2e8d4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x38c>
   2e7fc:	add	r1, pc, r1
   2e800:	bl	10238 <mycore_strncasecmp@plt>
   2e804:	subs	sl, r0, #0
   2e808:	movne	r3, #21
   2e80c:	strne	r3, [r6, #160]	; 0xa0
   2e810:	addne	r9, r4, #1
   2e814:	bne	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e818:	ldr	r3, [r6, #192]	; 0xc0
   2e81c:	sub	r3, r3, #8
   2e820:	mov	r2, #64	; 0x40
   2e824:	str	r2, [sp]
   2e828:	add	r3, r3, r4
   2e82c:	mov	r2, r5
   2e830:	mov	r1, r7
   2e834:	mov	r0, r6
   2e838:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e83c:	subs	r2, r0, #0
   2e840:	moveq	r3, #69	; 0x45
   2e844:	streq	r3, [r6, #160]	; 0xa0
   2e848:	moveq	r9, sl
   2e84c:	beq	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e850:	str	r8, [r2, #24]
   2e854:	mov	r3, #6
   2e858:	str	r3, [r2, #28]
   2e85c:	mov	r3, #112	; 0x70
   2e860:	str	r3, [r2]
   2e864:	mov	r3, #1
   2e868:	str	r3, [r2, #48]	; 0x30
   2e86c:	mov	r3, #0
   2e870:	str	r3, [r6, #160]	; 0xa0
   2e874:	add	r9, r4, #1
   2e878:	ldr	r3, [r6, #192]	; 0xc0
   2e87c:	add	r3, r9, r3
   2e880:	ldr	r1, [r2, #32]
   2e884:	sub	r3, r3, r1
   2e888:	str	r3, [r2, #36]	; 0x24
   2e88c:	mov	r1, r9
   2e890:	mov	r0, r6
   2e894:	bl	ffc8 <myhtml_queue_add@plt>
   2e898:	cmp	r0, #0
   2e89c:	movne	r3, #69	; 0x45
   2e8a0:	strne	r3, [r6, #160]	; 0xa0
   2e8a4:	movne	r9, sl
   2e8a8:	b	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e8ac:	mov	r3, #21
   2e8b0:	str	r3, [r6, #160]	; 0xa0
   2e8b4:	mov	r9, r4
   2e8b8:	b	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e8bc:	mov	r9, r4
   2e8c0:	b	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e8c4:	mov	r9, r3
   2e8c8:	b	2e674 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x12c>
   2e8cc:	andeq	r2, sp, ip, ror #4
   2e8d0:			; <UNDEFINED> instruction: 0x000d21b0
   2e8d4:	andeq	r2, sp, ip, lsl r1

0002e8d8 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2e8d8:	str	r4, [sp, #-8]!
   2e8dc:	str	lr, [sp, #4]
   2e8e0:	ldr	lr, [sp, #8]
   2e8e4:	cmp	r3, lr
   2e8e8:	bcs	2e96c <myhtml_tokenizer_state_script_data_escaped@@Base+0x94>
   2e8ec:	mov	r4, r0
   2e8f0:	add	r1, r2, r3
   2e8f4:	ldrb	ip, [r2, r3]
   2e8f8:	cmp	ip, #45	; 0x2d
   2e8fc:	beq	2e948 <myhtml_tokenizer_state_script_data_escaped@@Base+0x70>
   2e900:	cmp	ip, #60	; 0x3c
   2e904:	movne	r3, r1
   2e908:	subne	ip, r2, #1
   2e90c:	addne	ip, ip, lr
   2e910:	rsbne	r2, r2, #1
   2e914:	beq	2e964 <myhtml_tokenizer_state_script_data_escaped@@Base+0x8c>
   2e918:	add	r0, r2, r3
   2e91c:	cmp	r3, ip
   2e920:	beq	2e958 <myhtml_tokenizer_state_script_data_escaped@@Base+0x80>
   2e924:	ldrb	r1, [r3, #1]!
   2e928:	cmp	r1, #45	; 0x2d
   2e92c:	beq	2e94c <myhtml_tokenizer_state_script_data_escaped@@Base+0x74>
   2e930:	cmp	r1, #60	; 0x3c
   2e934:	bne	2e918 <myhtml_tokenizer_state_script_data_escaped@@Base+0x40>
   2e938:	mov	r3, #24
   2e93c:	str	r3, [r4, #160]	; 0xa0
   2e940:	add	r0, r0, #1
   2e944:	b	2e958 <myhtml_tokenizer_state_script_data_escaped@@Base+0x80>
   2e948:	mov	r0, r3
   2e94c:	mov	r3, #22
   2e950:	str	r3, [r4, #160]	; 0xa0
   2e954:	add	r0, r0, #1
   2e958:	ldr	r4, [sp]
   2e95c:	add	sp, sp, #4
   2e960:	pop	{pc}		; (ldr pc, [sp], #4)
   2e964:	mov	r0, r3
   2e968:	b	2e938 <myhtml_tokenizer_state_script_data_escaped@@Base+0x60>
   2e96c:	mov	r0, r3
   2e970:	b	2e958 <myhtml_tokenizer_state_script_data_escaped@@Base+0x80>

0002e974 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2e974:	ldrb	r2, [r2, r3]
   2e978:	cmp	r2, #45	; 0x2d
   2e97c:	beq	2e9a0 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x2c>
   2e980:	cmp	r2, #60	; 0x3c
   2e984:	beq	2e9b0 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   2e988:	cmp	r2, #0
   2e98c:	mov	r2, #21
   2e990:	str	r2, [r0, #160]	; 0xa0
   2e994:	moveq	r0, r3
   2e998:	addne	r0, r3, #1
   2e99c:	bx	lr
   2e9a0:	mov	r2, #23
   2e9a4:	str	r2, [r0, #160]	; 0xa0
   2e9a8:	add	r0, r3, #1
   2e9ac:	bx	lr
   2e9b0:	mov	r2, #24
   2e9b4:	str	r2, [r0, #160]	; 0xa0
   2e9b8:	mov	r0, r3
   2e9bc:	bx	lr

0002e9c0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   2e9c0:	strd	r4, [sp, #-16]!
   2e9c4:	str	r6, [sp, #8]
   2e9c8:	str	lr, [sp, #12]
   2e9cc:	mov	r4, r3
   2e9d0:	ldr	lr, [sp, #16]
   2e9d4:	cmp	r3, lr
   2e9d8:	bcs	2eb0c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x14c>
   2e9dc:	mov	r5, r0
   2e9e0:	add	ip, r2, r3
   2e9e4:	ldrb	r3, [r2, r3]
   2e9e8:	cmp	r3, #47	; 0x2f
   2e9ec:	cmpne	r3, #32
   2e9f0:	moveq	r2, #1
   2e9f4:	movne	r2, #0
   2e9f8:	cmp	r3, #62	; 0x3e
   2e9fc:	orreq	r2, r2, #1
   2ea00:	sub	r0, r3, #9
   2ea04:	uxtb	r0, r0
   2ea08:	cmp	r0, #1
   2ea0c:	orrls	r2, r2, #1
   2ea10:	sub	r0, r3, #12
   2ea14:	uxtb	r0, r0
   2ea18:	cmp	r0, #1
   2ea1c:	orrls	r2, r2, #1
   2ea20:	cmp	r2, #0
   2ea24:	bne	2ea8c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xcc>
   2ea28:	bic	r3, r3, #32
   2ea2c:	sub	r3, r3, #65	; 0x41
   2ea30:	uxtb	r3, r3
   2ea34:	cmp	r3, #25
   2ea38:	bhi	2eaf4 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x134>
   2ea3c:	add	r4, r4, #1
   2ea40:	cmp	lr, r4
   2ea44:	beq	2eb04 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x144>
   2ea48:	ldrb	r3, [ip, #1]!
   2ea4c:	cmp	r3, #47	; 0x2f
   2ea50:	cmpne	r3, #32
   2ea54:	moveq	r2, #1
   2ea58:	movne	r2, #0
   2ea5c:	cmp	r3, #62	; 0x3e
   2ea60:	orreq	r2, r2, #1
   2ea64:	sub	r0, r3, #9
   2ea68:	uxtb	r0, r0
   2ea6c:	cmp	r0, #1
   2ea70:	orrls	r2, r2, #1
   2ea74:	sub	r0, r3, #12
   2ea78:	uxtb	r0, r0
   2ea7c:	cmp	r0, #1
   2ea80:	orrls	r2, r2, #1
   2ea84:	cmp	r2, #0
   2ea88:	beq	2ea28 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x68>
   2ea8c:	ldr	r1, [r1, #12]
   2ea90:	ldr	r3, [r5, #192]	; 0xc0
   2ea94:	sub	r3, r3, r1
   2ea98:	add	r3, r3, r4
   2ea9c:	cmp	r3, #6
   2eaa0:	beq	2eac0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x100>
   2eaa4:	mov	r3, #21
   2eaa8:	str	r3, [r5, #160]	; 0xa0
   2eaac:	add	r0, r4, #1
   2eab0:	ldrd	r4, [sp]
   2eab4:	ldr	r6, [sp, #8]
   2eab8:	add	sp, sp, #12
   2eabc:	pop	{pc}		; (ldr pc, [sp], #4)
   2eac0:	mov	r2, #6
   2eac4:	mov	r0, r5
   2eac8:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2eacc:	mov	r2, #6
   2ead0:	ldr	r1, [pc, #60]	; 2eb14 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x154>
   2ead4:	add	r1, pc, r1
   2ead8:	bl	10238 <mycore_strncasecmp@plt>
   2eadc:	cmp	r0, #0
   2eae0:	moveq	r3, #28
   2eae4:	movne	r3, #21
   2eae8:	str	r3, [r5, #160]	; 0xa0
   2eaec:	add	r0, r4, #1
   2eaf0:	b	2eab0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xf0>
   2eaf4:	mov	r3, #21
   2eaf8:	str	r3, [r5, #160]	; 0xa0
   2eafc:	mov	r0, r4
   2eb00:	b	2eab0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xf0>
   2eb04:	mov	r0, r4
   2eb08:	b	2eab0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xf0>
   2eb0c:	mov	r0, r3
   2eb10:	b	2eab0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xf0>
   2eb14:	andeq	r1, sp, r4, asr #28

0002eb18 <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2eb18:	str	r4, [sp, #-8]!
   2eb1c:	str	lr, [sp, #4]
   2eb20:	ldr	lr, [sp, #8]
   2eb24:	cmp	r3, lr
   2eb28:	bcs	2ebac <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x94>
   2eb2c:	mov	r4, r0
   2eb30:	add	r1, r2, r3
   2eb34:	ldrb	ip, [r2, r3]
   2eb38:	cmp	ip, #45	; 0x2d
   2eb3c:	beq	2eb88 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x70>
   2eb40:	cmp	ip, #60	; 0x3c
   2eb44:	movne	r3, r1
   2eb48:	subne	ip, r2, #1
   2eb4c:	addne	ip, ip, lr
   2eb50:	rsbne	r2, r2, #1
   2eb54:	beq	2eba4 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x8c>
   2eb58:	add	r0, r2, r3
   2eb5c:	cmp	r3, ip
   2eb60:	beq	2eb98 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x80>
   2eb64:	ldrb	r1, [r3, #1]!
   2eb68:	cmp	r1, #45	; 0x2d
   2eb6c:	beq	2eb8c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x74>
   2eb70:	cmp	r1, #60	; 0x3c
   2eb74:	bne	2eb58 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x40>
   2eb78:	mov	r3, #31
   2eb7c:	str	r3, [r4, #160]	; 0xa0
   2eb80:	add	r0, r0, #1
   2eb84:	b	2eb98 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x80>
   2eb88:	mov	r0, r3
   2eb8c:	mov	r3, #29
   2eb90:	str	r3, [r4, #160]	; 0xa0
   2eb94:	add	r0, r0, #1
   2eb98:	ldr	r4, [sp]
   2eb9c:	add	sp, sp, #4
   2eba0:	pop	{pc}		; (ldr pc, [sp], #4)
   2eba4:	mov	r0, r3
   2eba8:	b	2eb78 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x60>
   2ebac:	mov	r0, r3
   2ebb0:	b	2eb98 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x80>

0002ebb4 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2ebb4:	ldrb	r2, [r2, r3]
   2ebb8:	cmp	r2, #45	; 0x2d
   2ebbc:	moveq	r2, #30
   2ebc0:	streq	r2, [r0, #160]	; 0xa0
   2ebc4:	beq	2ebd8 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x24>
   2ebc8:	cmp	r2, #60	; 0x3c
   2ebcc:	moveq	r2, #31
   2ebd0:	movne	r2, #28
   2ebd4:	str	r2, [r0, #160]	; 0xa0
   2ebd8:	add	r0, r3, #1
   2ebdc:	bx	lr

0002ebe0 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   2ebe0:	ldrb	r2, [r2, r3]
   2ebe4:	cmp	r2, #45	; 0x2d
   2ebe8:	beq	2ec14 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x34>
   2ebec:	cmp	r2, #60	; 0x3c
   2ebf0:	moveq	r2, #31
   2ebf4:	streq	r2, [r0, #160]	; 0xa0
   2ebf8:	beq	2ec0c <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   2ebfc:	cmp	r2, #62	; 0x3e
   2ec00:	moveq	r2, #5
   2ec04:	movne	r2, #28
   2ec08:	str	r2, [r0, #160]	; 0xa0
   2ec0c:	add	r0, r3, #1
   2ec10:	bx	lr
   2ec14:	add	r0, r3, #1
   2ec18:	bx	lr

0002ec1c <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   2ec1c:	ldrb	r2, [r2, r3]
   2ec20:	cmp	r2, #47	; 0x2f
   2ec24:	movne	r2, #28
   2ec28:	strne	r2, [r0, #160]	; 0xa0
   2ec2c:	beq	2ec38 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base+0x1c>
   2ec30:	mov	r0, r3
   2ec34:	bx	lr
   2ec38:	mov	r2, #32
   2ec3c:	str	r2, [r0, #160]	; 0xa0
   2ec40:	add	r3, r3, #1
   2ec44:	ldr	r2, [r0, #192]	; 0xc0
   2ec48:	add	r2, r2, r3
   2ec4c:	str	r2, [r1, #12]
   2ec50:	b	2ec30 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base+0x14>

0002ec54 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   2ec54:	strd	r4, [sp, #-16]!
   2ec58:	str	r6, [sp, #8]
   2ec5c:	str	lr, [sp, #12]
   2ec60:	mov	r4, r3
   2ec64:	ldr	lr, [sp, #16]
   2ec68:	cmp	r3, lr
   2ec6c:	bcs	2eda0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x14c>
   2ec70:	mov	r5, r0
   2ec74:	add	ip, r2, r3
   2ec78:	ldrb	r3, [r2, r3]
   2ec7c:	cmp	r3, #47	; 0x2f
   2ec80:	cmpne	r3, #32
   2ec84:	moveq	r2, #1
   2ec88:	movne	r2, #0
   2ec8c:	cmp	r3, #62	; 0x3e
   2ec90:	orreq	r2, r2, #1
   2ec94:	sub	r0, r3, #9
   2ec98:	uxtb	r0, r0
   2ec9c:	cmp	r0, #1
   2eca0:	orrls	r2, r2, #1
   2eca4:	sub	r0, r3, #12
   2eca8:	uxtb	r0, r0
   2ecac:	cmp	r0, #1
   2ecb0:	orrls	r2, r2, #1
   2ecb4:	cmp	r2, #0
   2ecb8:	bne	2ed20 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xcc>
   2ecbc:	bic	r3, r3, #32
   2ecc0:	sub	r3, r3, #65	; 0x41
   2ecc4:	uxtb	r3, r3
   2ecc8:	cmp	r3, #25
   2eccc:	bhi	2ed88 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x134>
   2ecd0:	add	r4, r4, #1
   2ecd4:	cmp	lr, r4
   2ecd8:	beq	2ed98 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x144>
   2ecdc:	ldrb	r3, [ip, #1]!
   2ece0:	cmp	r3, #47	; 0x2f
   2ece4:	cmpne	r3, #32
   2ece8:	moveq	r2, #1
   2ecec:	movne	r2, #0
   2ecf0:	cmp	r3, #62	; 0x3e
   2ecf4:	orreq	r2, r2, #1
   2ecf8:	sub	r0, r3, #9
   2ecfc:	uxtb	r0, r0
   2ed00:	cmp	r0, #1
   2ed04:	orrls	r2, r2, #1
   2ed08:	sub	r0, r3, #12
   2ed0c:	uxtb	r0, r0
   2ed10:	cmp	r0, #1
   2ed14:	orrls	r2, r2, #1
   2ed18:	cmp	r2, #0
   2ed1c:	beq	2ecbc <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x68>
   2ed20:	ldr	r1, [r1, #12]
   2ed24:	ldr	r3, [r5, #192]	; 0xc0
   2ed28:	sub	r3, r3, r1
   2ed2c:	add	r3, r3, r4
   2ed30:	cmp	r3, #6
   2ed34:	beq	2ed54 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x100>
   2ed38:	mov	r3, #28
   2ed3c:	str	r3, [r5, #160]	; 0xa0
   2ed40:	add	r0, r4, #1
   2ed44:	ldrd	r4, [sp]
   2ed48:	ldr	r6, [sp, #8]
   2ed4c:	add	sp, sp, #12
   2ed50:	pop	{pc}		; (ldr pc, [sp], #4)
   2ed54:	mov	r2, #6
   2ed58:	mov	r0, r5
   2ed5c:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   2ed60:	mov	r2, #6
   2ed64:	ldr	r1, [pc, #60]	; 2eda8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x154>
   2ed68:	add	r1, pc, r1
   2ed6c:	bl	10238 <mycore_strncasecmp@plt>
   2ed70:	cmp	r0, #0
   2ed74:	moveq	r3, #21
   2ed78:	movne	r3, #28
   2ed7c:	str	r3, [r5, #160]	; 0xa0
   2ed80:	add	r0, r4, #1
   2ed84:	b	2ed44 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xf0>
   2ed88:	mov	r3, #28
   2ed8c:	str	r3, [r5, #160]	; 0xa0
   2ed90:	mov	r0, r4
   2ed94:	b	2ed44 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xf0>
   2ed98:	mov	r0, r4
   2ed9c:	b	2ed44 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xf0>
   2eda0:	mov	r0, r3
   2eda4:	b	2ed44 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xf0>
   2eda8:			; <UNDEFINED> instruction: 0x000d1bb0

0002edac <myhtml_tree_create@@Base>:
   2edac:	str	r4, [sp, #-8]!
   2edb0:	str	lr, [sp, #4]
   2edb4:	mov	r1, #252	; 0xfc
   2edb8:	mov	r0, #1
   2edbc:	bl	feb4 <mycore_calloc@plt>
   2edc0:	ldr	r4, [sp]
   2edc4:	add	sp, sp, #4
   2edc8:	pop	{pc}		; (ldr pc, [sp], #4)

0002edcc <myhtml_tree_node_clean@@Base>:
   2edcc:	str	r4, [sp, #-8]!
   2edd0:	str	lr, [sp, #4]
   2edd4:	mov	r4, r0
   2edd8:	mov	r2, #44	; 0x2c
   2eddc:	mov	r1, #0
   2ede0:	bl	10844 <memset@plt>
   2ede4:	mov	r3, #1
   2ede8:	str	r3, [r4, #8]
   2edec:	ldr	r4, [sp]
   2edf0:	add	sp, sp, #4
   2edf4:	pop	{pc}		; (ldr pc, [sp], #4)

0002edf8 <myhtml_tree_parse_flags@@Base>:
   2edf8:	ldr	r0, [r0, #184]	; 0xb8
   2edfc:	bx	lr

0002ee00 <myhtml_tree_parse_flags_set@@Base>:
   2ee00:	str	r1, [r0, #184]	; 0xb8
   2ee04:	bx	lr

0002ee08 <myhtml_tree_get_myhtml@@Base>:
   2ee08:	cmp	r0, #0
   2ee0c:	ldrne	r0, [r0]
   2ee10:	bx	lr

0002ee14 <myhtml_tree_get_tag@@Base>:
   2ee14:	cmp	r0, #0
   2ee18:	ldrne	r0, [r0, #28]
   2ee1c:	bx	lr

0002ee20 <myhtml_tree_get_document@@Base>:
   2ee20:	ldr	r0, [r0, #84]	; 0x54
   2ee24:	bx	lr

0002ee28 <myhtml_tree_get_node_html@@Base>:
   2ee28:	ldr	r0, [r0, #96]	; 0x60
   2ee2c:	bx	lr

0002ee30 <myhtml_tree_get_node_body@@Base>:
   2ee30:	ldr	r0, [r0, #100]	; 0x64
   2ee34:	bx	lr

0002ee38 <myhtml_tree_get_node_head@@Base>:
   2ee38:	ldr	r0, [r0, #92]	; 0x5c
   2ee3c:	bx	lr

0002ee40 <myhtml_tree_get_mchar@@Base>:
   2ee40:	ldr	r0, [r0, #4]
   2ee44:	bx	lr

0002ee48 <myhtml_tree_get_mchar_node_id@@Base>:
   2ee48:	ldr	r0, [r0, #52]	; 0x34
   2ee4c:	bx	lr

0002ee50 <myhtml_tree_node_create@@Base>:
   2ee50:	strd	r4, [sp, #-16]!
   2ee54:	str	r6, [sp, #8]
   2ee58:	str	lr, [sp, #12]
   2ee5c:	mov	r4, r0
   2ee60:	mov	r2, #0
   2ee64:	ldr	r1, [r0, #48]	; 0x30
   2ee68:	ldr	r0, [r0, #12]
   2ee6c:	bl	10b50 <mcobject_async_malloc@plt>
   2ee70:	mov	r5, r0
   2ee74:	bl	11030 <myhtml_tree_node_clean@plt>
   2ee78:	str	r4, [r5, #40]	; 0x28
   2ee7c:	mov	r0, r5
   2ee80:	ldrd	r4, [sp]
   2ee84:	ldr	r6, [sp, #8]
   2ee88:	add	sp, sp, #12
   2ee8c:	pop	{pc}		; (ldr pc, [sp], #4)

0002ee90 <myhtml_tree_node_add_child@@Base>:
   2ee90:	ldr	r3, [r0, #28]
   2ee94:	cmp	r3, #0
   2ee98:	strne	r1, [r3, #16]
   2ee9c:	ldrne	r3, [r0, #28]
   2eea0:	strne	r3, [r1, #12]
   2eea4:	streq	r1, [r0, #20]
   2eea8:	str	r0, [r1, #24]
   2eeac:	str	r1, [r0, #28]
   2eeb0:	ldr	r0, [r1, #40]	; 0x28
   2eeb4:	ldr	r3, [r0, #236]	; 0xec
   2eeb8:	cmp	r3, #0
   2eebc:	bxeq	lr
   2eec0:	str	r4, [sp, #-8]!
   2eec4:	str	lr, [sp, #4]
   2eec8:	ldr	r2, [r0, #244]	; 0xf4
   2eecc:	blx	r3
   2eed0:	ldr	r4, [sp]
   2eed4:	add	sp, sp, #4
   2eed8:	pop	{pc}		; (ldr pc, [sp], #4)

0002eedc <myhtml_tree_node_insert_before@@Base>:
   2eedc:	ldr	r3, [r0, #12]
   2eee0:	cmp	r3, #0
   2eee4:	beq	2ef30 <myhtml_tree_node_insert_before@@Base+0x54>
   2eee8:	str	r1, [r3, #16]
   2eeec:	ldr	r3, [r0, #12]
   2eef0:	str	r3, [r1, #12]
   2eef4:	ldr	r3, [r0, #24]
   2eef8:	str	r3, [r1, #24]
   2eefc:	str	r0, [r1, #16]
   2ef00:	str	r1, [r0, #12]
   2ef04:	ldr	r0, [r1, #40]	; 0x28
   2ef08:	ldr	r3, [r0, #236]	; 0xec
   2ef0c:	cmp	r3, #0
   2ef10:	bxeq	lr
   2ef14:	str	r4, [sp, #-8]!
   2ef18:	str	lr, [sp, #4]
   2ef1c:	ldr	r2, [r0, #244]	; 0xf4
   2ef20:	blx	r3
   2ef24:	ldr	r4, [sp]
   2ef28:	add	sp, sp, #4
   2ef2c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ef30:	ldr	r3, [r0, #24]
   2ef34:	str	r1, [r3, #20]
   2ef38:	b	2eef4 <myhtml_tree_node_insert_before@@Base+0x18>

0002ef3c <myhtml_tree_node_insert_after@@Base>:
   2ef3c:	ldr	r3, [r0, #16]
   2ef40:	cmp	r3, #0
   2ef44:	beq	2ef90 <myhtml_tree_node_insert_after@@Base+0x54>
   2ef48:	str	r1, [r3, #12]
   2ef4c:	ldr	r3, [r0, #16]
   2ef50:	str	r3, [r1, #16]
   2ef54:	ldr	r3, [r0, #24]
   2ef58:	str	r3, [r1, #24]
   2ef5c:	str	r0, [r1, #12]
   2ef60:	str	r1, [r0, #16]
   2ef64:	ldr	r0, [r1, #40]	; 0x28
   2ef68:	ldr	r3, [r0, #236]	; 0xec
   2ef6c:	cmp	r3, #0
   2ef70:	bxeq	lr
   2ef74:	str	r4, [sp, #-8]!
   2ef78:	str	lr, [sp, #4]
   2ef7c:	ldr	r2, [r0, #244]	; 0xf4
   2ef80:	blx	r3
   2ef84:	ldr	r4, [sp]
   2ef88:	add	sp, sp, #4
   2ef8c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ef90:	ldr	r3, [r0, #24]
   2ef94:	str	r1, [r3, #28]
   2ef98:	b	2ef54 <myhtml_tree_node_insert_after@@Base+0x18>

0002ef9c <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   2ef9c:	ldr	r0, [r0, #24]
   2efa0:	cmp	r0, #0
   2efa4:	beq	2efcc <myhtml_tree_node_find_parent_by_tag_id@@Base+0x30>
   2efa8:	ldr	r3, [r0, #4]
   2efac:	cmp	r1, r3
   2efb0:	beq	2efcc <myhtml_tree_node_find_parent_by_tag_id@@Base+0x30>
   2efb4:	ldr	r0, [r0, #24]
   2efb8:	cmp	r0, #0
   2efbc:	beq	2efcc <myhtml_tree_node_find_parent_by_tag_id@@Base+0x30>
   2efc0:	ldr	r3, [r0, #4]
   2efc4:	cmp	r3, r1
   2efc8:	bne	2efb4 <myhtml_tree_node_find_parent_by_tag_id@@Base+0x18>
   2efcc:	bx	lr

0002efd0 <myhtml_tree_node_remove@@Base>:
   2efd0:	str	r4, [sp, #-8]!
   2efd4:	str	lr, [sp, #4]
   2efd8:	mov	r4, r0
   2efdc:	ldr	r3, [r0, #16]
   2efe0:	cmp	r3, #0
   2efe4:	beq	2f040 <myhtml_tree_node_remove@@Base+0x70>
   2efe8:	ldr	r2, [r0, #12]
   2efec:	str	r2, [r3, #12]
   2eff0:	ldr	r3, [r4, #12]
   2eff4:	cmp	r3, #0
   2eff8:	beq	2f058 <myhtml_tree_node_remove@@Base+0x88>
   2effc:	ldr	r2, [r4, #16]
   2f000:	str	r2, [r3, #16]
   2f004:	ldr	r0, [r4, #40]	; 0x28
   2f008:	ldr	r3, [r0, #240]	; 0xf0
   2f00c:	cmp	r3, #0
   2f010:	beq	2f020 <myhtml_tree_node_remove@@Base+0x50>
   2f014:	ldr	r2, [r0, #248]	; 0xf8
   2f018:	mov	r1, r4
   2f01c:	blx	r3
   2f020:	mov	r3, #0
   2f024:	str	r3, [r4, #16]
   2f028:	str	r3, [r4, #12]
   2f02c:	str	r3, [r4, #24]
   2f030:	mov	r0, r4
   2f034:	ldr	r4, [sp]
   2f038:	add	sp, sp, #4
   2f03c:	pop	{pc}		; (ldr pc, [sp], #4)
   2f040:	ldr	r3, [r0, #24]
   2f044:	cmp	r3, #0
   2f048:	beq	2f06c <myhtml_tree_node_remove@@Base+0x9c>
   2f04c:	ldr	r2, [r0, #12]
   2f050:	str	r2, [r3, #28]
   2f054:	b	2eff0 <myhtml_tree_node_remove@@Base+0x20>
   2f058:	ldr	r3, [r4, #24]
   2f05c:	cmp	r3, #0
   2f060:	ldrne	r2, [r4, #16]
   2f064:	strne	r2, [r3, #20]
   2f068:	b	2f004 <myhtml_tree_node_remove@@Base+0x34>
   2f06c:	ldr	r3, [r0, #12]
   2f070:	cmp	r3, #0
   2f074:	bne	2effc <myhtml_tree_node_remove@@Base+0x2c>
   2f078:	b	2f004 <myhtml_tree_node_remove@@Base+0x34>

0002f07c <myhtml_tree_node_free@@Base>:
   2f07c:	str	r4, [sp, #-8]!
   2f080:	str	lr, [sp, #4]
   2f084:	subs	r4, r0, #0
   2f088:	beq	2f0c4 <myhtml_tree_node_free@@Base+0x48>
   2f08c:	ldr	r1, [r4, #32]
   2f090:	cmp	r1, #0
   2f094:	beq	2f0b4 <myhtml_tree_node_free@@Base+0x38>
   2f098:	ldr	r3, [r4, #40]	; 0x28
   2f09c:	ldr	r0, [r3, #8]
   2f0a0:	bl	10778 <myhtml_token_attr_delete_all@plt>
   2f0a4:	ldr	r3, [r4, #40]	; 0x28
   2f0a8:	ldr	r1, [r4, #32]
   2f0ac:	ldr	r0, [r3, #8]
   2f0b0:	bl	10f1c <myhtml_token_delete@plt>
   2f0b4:	ldr	r3, [r4, #40]	; 0x28
   2f0b8:	mov	r1, r4
   2f0bc:	ldr	r0, [r3, #12]
   2f0c0:	bl	ffec <mcobject_async_free@plt>
   2f0c4:	ldr	r4, [sp]
   2f0c8:	add	sp, sp, #4
   2f0cc:	pop	{pc}		; (ldr pc, [sp], #4)

0002f0d0 <myhtml_tree_node_delete@@Base>:
   2f0d0:	str	r4, [sp, #-8]!
   2f0d4:	str	lr, [sp, #4]
   2f0d8:	subs	r4, r0, #0
   2f0dc:	beq	2f0f0 <myhtml_tree_node_delete@@Base+0x20>
   2f0e0:	mov	r0, r4
   2f0e4:	bl	10d84 <myhtml_tree_node_remove@plt>
   2f0e8:	mov	r0, r4
   2f0ec:	bl	10c94 <myhtml_tree_node_free@plt>
   2f0f0:	ldr	r4, [sp]
   2f0f4:	add	sp, sp, #4
   2f0f8:	pop	{pc}		; (ldr pc, [sp], #4)
   2f0fc:	str	r4, [sp, #-8]!
   2f100:	str	lr, [sp, #4]
   2f104:	subs	r4, r0, #0
   2f108:	bne	2f130 <myhtml_tree_node_delete@@Base+0x60>
   2f10c:	ldr	r4, [sp]
   2f110:	add	sp, sp, #4
   2f114:	pop	{pc}		; (ldr pc, [sp], #4)
   2f118:	bl	2f0fc <myhtml_tree_node_delete@@Base+0x2c>
   2f11c:	ldr	r4, [r4, #16]
   2f120:	mov	r0, r4
   2f124:	bl	10d54 <myhtml_tree_node_delete@plt>
   2f128:	cmp	r4, #0
   2f12c:	beq	2f10c <myhtml_tree_node_delete@@Base+0x3c>
   2f130:	ldr	r0, [r4, #20]
   2f134:	cmp	r0, #0
   2f138:	bne	2f118 <myhtml_tree_node_delete@@Base+0x48>
   2f13c:	b	2f11c <myhtml_tree_node_delete@@Base+0x4c>

0002f140 <myhtml_tree_node_delete_recursive@@Base>:
   2f140:	str	r4, [sp, #-8]!
   2f144:	str	lr, [sp, #4]
   2f148:	subs	r4, r0, #0
   2f14c:	beq	2f168 <myhtml_tree_node_delete_recursive@@Base+0x28>
   2f150:	ldr	r0, [r4, #20]
   2f154:	cmp	r0, #0
   2f158:	beq	2f160 <myhtml_tree_node_delete_recursive@@Base+0x20>
   2f15c:	bl	2f0fc <myhtml_tree_node_delete@@Base+0x2c>
   2f160:	mov	r0, r4
   2f164:	bl	10d54 <myhtml_tree_node_delete@plt>
   2f168:	ldr	r4, [sp]
   2f16c:	add	sp, sp, #4
   2f170:	pop	{pc}		; (ldr pc, [sp], #4)

0002f174 <myhtml_tree_node_clone@@Base>:
   2f174:	strd	r4, [sp, #-16]!
   2f178:	str	r6, [sp, #8]
   2f17c:	str	lr, [sp, #12]
   2f180:	mov	r4, r0
   2f184:	ldr	r0, [r0, #40]	; 0x28
   2f188:	bl	ff80 <myhtml_tree_node_create@plt>
   2f18c:	mov	r5, r0
   2f190:	ldr	r1, [r4, #32]
   2f194:	cmp	r1, #0
   2f198:	beq	2f1a8 <myhtml_tree_node_clone@@Base+0x34>
   2f19c:	ldr	r3, [r4, #40]	; 0x28
   2f1a0:	ldr	r0, [r3, #8]
   2f1a4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   2f1a8:	ldr	r0, [r4, #40]	; 0x28
   2f1ac:	ldr	r3, [r0, #44]	; 0x2c
   2f1b0:	ldr	r2, [r0, #40]	; 0x28
   2f1b4:	ldr	r1, [r4, #32]
   2f1b8:	ldr	r0, [r0, #8]
   2f1bc:	bl	fecc <myhtml_token_node_clone@plt>
   2f1c0:	str	r0, [r5, #32]
   2f1c4:	ldr	r3, [r4, #4]
   2f1c8:	str	r3, [r5, #4]
   2f1cc:	ldr	r3, [r4, #8]
   2f1d0:	str	r3, [r5, #8]
   2f1d4:	cmp	r0, #0
   2f1d8:	beq	2f1e8 <myhtml_tree_node_clone@@Base+0x74>
   2f1dc:	ldr	r3, [r0, #48]	; 0x30
   2f1e0:	orr	r3, r3, #4
   2f1e4:	str	r3, [r0, #48]	; 0x30
   2f1e8:	mov	r0, r5
   2f1ec:	ldrd	r4, [sp]
   2f1f0:	ldr	r6, [sp, #8]
   2f1f4:	add	sp, sp, #12
   2f1f8:	pop	{pc}		; (ldr pc, [sp], #4)

0002f1fc <myhtml_tree_node_insert_by_mode@@Base>:
   2f1fc:	str	r4, [sp, #-8]!
   2f200:	str	lr, [sp, #4]
   2f204:	cmp	r2, #0
   2f208:	beq	2f224 <myhtml_tree_node_insert_by_mode@@Base+0x28>
   2f20c:	cmp	r2, #1
   2f210:	beq	2f22c <myhtml_tree_node_insert_by_mode@@Base+0x30>
   2f214:	bl	102f8 <myhtml_tree_node_insert_after@plt>
   2f218:	ldr	r4, [sp]
   2f21c:	add	sp, sp, #4
   2f220:	pop	{pc}		; (ldr pc, [sp], #4)
   2f224:	bl	1064c <myhtml_tree_node_add_child@plt>
   2f228:	b	2f218 <myhtml_tree_node_insert_by_mode@@Base+0x1c>
   2f22c:	bl	10388 <myhtml_tree_node_insert_before@plt>
   2f230:	b	2f218 <myhtml_tree_node_insert_by_mode@@Base+0x1c>

0002f234 <myhtml_tree_node_insert_doctype@@Base>:
   2f234:	strd	r4, [sp, #-16]!
   2f238:	str	r6, [sp, #8]
   2f23c:	str	lr, [sp, #12]
   2f240:	mov	r5, r0
   2f244:	mov	r6, r1
   2f248:	bl	ff80 <myhtml_tree_node_create@plt>
   2f24c:	mov	r4, r0
   2f250:	str	r6, [r0, #32]
   2f254:	mov	r3, #1
   2f258:	str	r3, [r0, #8]
   2f25c:	mov	r3, #3
   2f260:	str	r3, [r0, #4]
   2f264:	mov	r1, r0
   2f268:	ldr	r0, [r5, #84]	; 0x54
   2f26c:	bl	1064c <myhtml_tree_node_add_child@plt>
   2f270:	mov	r0, r4
   2f274:	ldrd	r4, [sp]
   2f278:	ldr	r6, [sp, #8]
   2f27c:	add	sp, sp, #12
   2f280:	pop	{pc}		; (ldr pc, [sp], #4)

0002f284 <myhtml_tree_element_in_scope@@Base>:
   2f284:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2f288:	strd	r6, [sp, #8]
   2f28c:	strd	r8, [sp, #16]
   2f290:	str	sl, [sp, #24]
   2f294:	str	lr, [sp, #28]
   2f298:	ldr	ip, [r0, #128]	; 0x80
   2f29c:	ldr	r4, [ip]
   2f2a0:	ldr	r5, [ip, #4]
   2f2a4:	cmp	r5, #0
   2f2a8:	beq	2f360 <myhtml_tree_element_in_scope@@Base+0xdc>
   2f2ac:	mov	r6, r3
   2f2b0:	mov	r9, r2
   2f2b4:	mov	r8, r1
   2f2b8:	mov	r7, r0
   2f2bc:	add	r4, r4, r5, lsl #2
   2f2c0:	b	2f2f8 <myhtml_tree_element_in_scope@@Base+0x74>
   2f2c4:	cmp	r9, #0
   2f2c8:	beq	2f344 <myhtml_tree_element_in_scope@@Base+0xc0>
   2f2cc:	ldr	r3, [ip, #8]
   2f2d0:	cmp	r3, r9
   2f2d4:	bne	2f31c <myhtml_tree_element_in_scope@@Base+0x98>
   2f2d8:	b	2f344 <myhtml_tree_element_in_scope@@Base+0xc0>
   2f2dc:	ldr	r3, [ip, #8]
   2f2e0:	add	r3, r3, #4
   2f2e4:	ldr	r3, [r0, r3, lsl #2]
   2f2e8:	tst	r3, #128	; 0x80
   2f2ec:	beq	2f368 <myhtml_tree_element_in_scope@@Base+0xe4>
   2f2f0:	cmp	r5, #0
   2f2f4:	beq	2f340 <myhtml_tree_element_in_scope@@Base+0xbc>
   2f2f8:	sub	r5, r5, #1
   2f2fc:	ldr	r3, [r4, #-4]!
   2f300:	ldr	r1, [r3, #4]
   2f304:	ldr	r0, [r7, #28]
   2f308:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2f30c:	ldr	ip, [r4]
   2f310:	ldr	r3, [ip, #4]
   2f314:	cmp	r3, r8
   2f318:	beq	2f2c4 <myhtml_tree_element_in_scope@@Base+0x40>
   2f31c:	cmp	r6, #128	; 0x80
   2f320:	beq	2f2dc <myhtml_tree_element_in_scope@@Base+0x58>
   2f324:	ldr	ip, [ip, #8]
   2f328:	add	ip, ip, #4
   2f32c:	ldr	r3, [r0, ip, lsl #2]
   2f330:	tst	r6, r3
   2f334:	beq	2f2f0 <myhtml_tree_element_in_scope@@Base+0x6c>
   2f338:	mov	ip, #0
   2f33c:	b	2f344 <myhtml_tree_element_in_scope@@Base+0xc0>
   2f340:	mov	ip, #0
   2f344:	mov	r0, ip
   2f348:	ldrd	r4, [sp]
   2f34c:	ldrd	r6, [sp, #8]
   2f350:	ldrd	r8, [sp, #16]
   2f354:	ldr	sl, [sp, #24]
   2f358:	add	sp, sp, #28
   2f35c:	pop	{pc}		; (ldr pc, [sp], #4)
   2f360:	mov	ip, #0
   2f364:	b	2f344 <myhtml_tree_element_in_scope@@Base+0xc0>
   2f368:	mov	ip, #0
   2f36c:	b	2f344 <myhtml_tree_element_in_scope@@Base+0xc0>

0002f370 <myhtml_tree_element_in_scope_by_node@@Base>:
   2f370:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2f374:	strd	r6, [sp, #8]
   2f378:	str	r8, [sp, #16]
   2f37c:	str	lr, [sp, #20]
   2f380:	ldr	r8, [r0, #40]	; 0x28
   2f384:	ldr	r3, [r8, #128]	; 0x80
   2f388:	ldr	r4, [r3]
   2f38c:	ldr	r5, [r3, #4]
   2f390:	cmp	r5, #0
   2f394:	beq	2f410 <myhtml_tree_element_in_scope_by_node@@Base+0xa0>
   2f398:	mov	r6, r1
   2f39c:	mov	r7, r0
   2f3a0:	add	r4, r4, r5, lsl #2
   2f3a4:	b	2f3c4 <myhtml_tree_element_in_scope_by_node@@Base+0x54>
   2f3a8:	ldr	r3, [r3, #8]
   2f3ac:	add	r3, r3, #4
   2f3b0:	ldr	r3, [r0, r3, lsl #2]
   2f3b4:	tst	r3, #128	; 0x80
   2f3b8:	beq	2f430 <myhtml_tree_element_in_scope_by_node@@Base+0xc0>
   2f3bc:	cmp	r5, #0
   2f3c0:	beq	2f408 <myhtml_tree_element_in_scope_by_node@@Base+0x98>
   2f3c4:	sub	r5, r5, #1
   2f3c8:	ldr	r3, [r4, #-4]!
   2f3cc:	ldr	r1, [r3, #4]
   2f3d0:	ldr	r0, [r8, #28]
   2f3d4:	bl	109b8 <myhtml_tag_get_by_id@plt>
   2f3d8:	ldr	r3, [r4]
   2f3dc:	cmp	r3, r7
   2f3e0:	beq	2f418 <myhtml_tree_element_in_scope_by_node@@Base+0xa8>
   2f3e4:	cmp	r6, #128	; 0x80
   2f3e8:	beq	2f3a8 <myhtml_tree_element_in_scope_by_node@@Base+0x38>
   2f3ec:	ldr	r3, [r3, #8]
   2f3f0:	add	r3, r3, #4
   2f3f4:	ldr	r3, [r0, r3, lsl #2]
   2f3f8:	tst	r6, r3
   2f3fc:	beq	2f3bc <myhtml_tree_element_in_scope_by_node@@Base+0x4c>
   2f400:	mov	r0, #0
   2f404:	b	2f41c <myhtml_tree_element_in_scope_by_node@@Base+0xac>
   2f408:	mov	r0, #0
   2f40c:	b	2f41c <myhtml_tree_element_in_scope_by_node@@Base+0xac>
   2f410:	mov	r0, #0
   2f414:	b	2f41c <myhtml_tree_element_in_scope_by_node@@Base+0xac>
   2f418:	mov	r0, #1
   2f41c:	ldrd	r4, [sp]
   2f420:	ldrd	r6, [sp, #8]
   2f424:	ldr	r8, [sp, #16]
   2f428:	add	sp, sp, #20
   2f42c:	pop	{pc}		; (ldr pc, [sp], #4)
   2f430:	mov	r0, #0
   2f434:	b	2f41c <myhtml_tree_element_in_scope_by_node@@Base+0xac>

0002f438 <myhtml_tree_list_init@@Base>:
   2f438:	str	r4, [sp, #-8]!
   2f43c:	str	lr, [sp, #4]
   2f440:	mov	r0, #12
   2f444:	bl	10c28 <mycore_malloc@plt>
   2f448:	mov	r4, r0
   2f44c:	mov	r3, #0
   2f450:	str	r3, [r0, #4]
   2f454:	mov	r3, #4096	; 0x1000
   2f458:	str	r3, [r0, #8]
   2f45c:	mov	r0, #16384	; 0x4000
   2f460:	bl	10c28 <mycore_malloc@plt>
   2f464:	str	r0, [r4]
   2f468:	mov	r0, r4
   2f46c:	ldr	r4, [sp]
   2f470:	add	sp, sp, #4
   2f474:	pop	{pc}		; (ldr pc, [sp], #4)

0002f478 <myhtml_tree_list_clean@@Base>:
   2f478:	mov	r3, #0
   2f47c:	str	r3, [r0, #4]
   2f480:	bx	lr

0002f484 <myhtml_tree_list_destroy@@Base>:
   2f484:	strd	r4, [sp, #-16]!
   2f488:	str	r6, [sp, #8]
   2f48c:	str	lr, [sp, #12]
   2f490:	subs	r4, r0, #0
   2f494:	beq	2f4b4 <myhtml_tree_list_destroy@@Base+0x30>
   2f498:	mov	r5, r1
   2f49c:	ldr	r0, [r4]
   2f4a0:	cmp	r0, #0
   2f4a4:	beq	2f4ac <myhtml_tree_list_destroy@@Base+0x28>
   2f4a8:	bl	10d60 <mycore_free@plt>
   2f4ac:	cmp	r5, #0
   2f4b0:	bne	2f4c8 <myhtml_tree_list_destroy@@Base+0x44>
   2f4b4:	mov	r0, r4
   2f4b8:	ldrd	r4, [sp]
   2f4bc:	ldr	r6, [sp, #8]
   2f4c0:	add	sp, sp, #12
   2f4c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2f4c8:	mov	r0, r4
   2f4cc:	bl	10d60 <mycore_free@plt>
   2f4d0:	mov	r4, #0
   2f4d4:	b	2f4b4 <myhtml_tree_list_destroy@@Base+0x30>

0002f4d8 <myhtml_tree_list_append@@Base>:
   2f4d8:	strd	r4, [sp, #-16]!
   2f4dc:	str	r6, [sp, #8]
   2f4e0:	str	lr, [sp, #12]
   2f4e4:	mov	r4, r0
   2f4e8:	mov	r5, r1
   2f4ec:	ldr	r3, [r0, #4]
   2f4f0:	ldr	r1, [r0, #8]
   2f4f4:	cmp	r3, r1
   2f4f8:	bcs	2f524 <myhtml_tree_list_append@@Base+0x4c>
   2f4fc:	ldr	r2, [r4, #4]
   2f500:	ldr	r3, [r4]
   2f504:	str	r5, [r3, r2, lsl #2]
   2f508:	ldr	r3, [r4, #4]
   2f50c:	add	r3, r3, #1
   2f510:	str	r3, [r4, #4]
   2f514:	ldrd	r4, [sp]
   2f518:	ldr	r6, [sp, #8]
   2f51c:	add	sp, sp, #12
   2f520:	pop	{pc}		; (ldr pc, [sp], #4)
   2f524:	lsl	r3, r1, #1
   2f528:	str	r3, [r0, #8]
   2f52c:	lsl	r1, r1, #3
   2f530:	ldr	r0, [r0]
   2f534:	bl	fb84 <mycore_realloc@plt>
   2f538:	cmp	r0, #0
   2f53c:	strne	r0, [r4]
   2f540:	b	2f4fc <myhtml_tree_list_append@@Base+0x24>

0002f544 <myhtml_tree_list_insert_by_index@@Base>:
   2f544:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2f548:	strd	r6, [sp, #8]
   2f54c:	str	r8, [sp, #16]
   2f550:	str	lr, [sp, #20]
   2f554:	mov	r4, r0
   2f558:	mov	r6, r1
   2f55c:	mov	r7, r2
   2f560:	ldr	r3, [r0, #4]
   2f564:	ldr	r1, [r0, #8]
   2f568:	cmp	r3, r1
   2f56c:	bcs	2f5c0 <myhtml_tree_list_insert_by_index@@Base+0x7c>
   2f570:	ldr	r0, [r4]
   2f574:	add	r3, r7, #1
   2f578:	lsl	r3, r3, #2
   2f57c:	sub	r5, r3, #4
   2f580:	ldr	r2, [r4, #4]
   2f584:	sub	r2, r2, r7
   2f588:	lsl	r2, r2, #2
   2f58c:	add	r1, r0, r5
   2f590:	add	r0, r0, r3
   2f594:	bl	fe18 <memmove@plt>
   2f598:	ldr	r3, [r4]
   2f59c:	str	r6, [r3, r5]
   2f5a0:	ldr	r3, [r4, #4]
   2f5a4:	add	r3, r3, #1
   2f5a8:	str	r3, [r4, #4]
   2f5ac:	ldrd	r4, [sp]
   2f5b0:	ldrd	r6, [sp, #8]
   2f5b4:	ldr	r8, [sp, #16]
   2f5b8:	add	sp, sp, #20
   2f5bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2f5c0:	lsl	r3, r1, #1
   2f5c4:	str	r3, [r0, #8]
   2f5c8:	lsl	r1, r1, #3
   2f5cc:	ldr	r0, [r0]
   2f5d0:	bl	fb84 <mycore_realloc@plt>
   2f5d4:	cmp	r0, #0
   2f5d8:	strne	r0, [r4]
   2f5dc:	b	2f570 <myhtml_tree_list_insert_by_index@@Base+0x2c>

0002f5e0 <myhtml_tree_list_append_after_index@@Base>:
   2f5e0:	str	r4, [sp, #-8]!
   2f5e4:	str	lr, [sp, #4]
   2f5e8:	add	r2, r2, #1
   2f5ec:	bl	10250 <myhtml_tree_list_insert_by_index@plt>
   2f5f0:	ldr	r4, [sp]
   2f5f4:	add	sp, sp, #4
   2f5f8:	pop	{pc}		; (ldr pc, [sp], #4)

0002f5fc <myhtml_tree_list_current_node@@Base>:
   2f5fc:	ldr	r3, [r0, #4]
   2f600:	cmp	r3, #0
   2f604:	beq	2f61c <myhtml_tree_list_current_node@@Base+0x20>
   2f608:	ldr	r3, [r0, #4]
   2f60c:	sub	r3, r3, #-1073741823	; 0xc0000001
   2f610:	ldr	r2, [r0]
   2f614:	ldr	r0, [r2, r3, lsl #2]
   2f618:	bx	lr
   2f61c:	mov	r0, #0
   2f620:	bx	lr

0002f624 <myhtml_tree_open_elements_init@@Base>:
   2f624:	str	r4, [sp, #-8]!
   2f628:	str	lr, [sp, #4]
   2f62c:	bl	107f0 <myhtml_tree_list_init@plt>
   2f630:	ldr	r4, [sp]
   2f634:	add	sp, sp, #4
   2f638:	pop	{pc}		; (ldr pc, [sp], #4)

0002f63c <myhtml_tree_open_elements_clean@@Base>:
   2f63c:	ldr	r3, [r0, #128]	; 0x80
   2f640:	mov	r2, #0
   2f644:	str	r2, [r3, #4]
   2f648:	bx	lr

0002f64c <myhtml_tree_open_elements_destroy@@Base>:
   2f64c:	str	r4, [sp, #-8]!
   2f650:	str	lr, [sp, #4]
   2f654:	mov	r1, #1
   2f658:	ldr	r0, [r0, #128]	; 0x80
   2f65c:	bl	10688 <myhtml_tree_list_destroy@plt>
   2f660:	ldr	r4, [sp]
   2f664:	add	sp, sp, #4
   2f668:	pop	{pc}		; (ldr pc, [sp], #4)

0002f66c <myhtml_tree_current_node@@Base>:
   2f66c:	ldr	r3, [r0, #128]	; 0x80
   2f670:	ldr	r2, [r3, #4]
   2f674:	cmp	r2, #0
   2f678:	beq	2f690 <myhtml_tree_current_node@@Base+0x24>
   2f67c:	ldr	r2, [r3, #4]
   2f680:	sub	r2, r2, #-1073741823	; 0xc0000001
   2f684:	ldr	r3, [r3]
   2f688:	ldr	r0, [r3, r2, lsl #2]
   2f68c:	bx	lr
   2f690:	mov	r0, #0
   2f694:	bx	lr

0002f698 <myhtml_tree_adjusted_current_node@@Base>:
   2f698:	mov	r3, r0
   2f69c:	ldr	r2, [r0, #128]	; 0x80
   2f6a0:	ldr	r2, [r2, #4]
   2f6a4:	cmp	r2, #1
   2f6a8:	bne	2f6b8 <myhtml_tree_adjusted_current_node@@Base+0x20>
   2f6ac:	ldr	r0, [r0, #88]	; 0x58
   2f6b0:	cmp	r0, #0
   2f6b4:	bxne	lr
   2f6b8:	str	r4, [sp, #-8]!
   2f6bc:	str	lr, [sp, #4]
   2f6c0:	mov	r0, r3
   2f6c4:	bl	105bc <myhtml_tree_current_node@plt>
   2f6c8:	ldr	r4, [sp]
   2f6cc:	add	sp, sp, #4
   2f6d0:	pop	{pc}		; (ldr pc, [sp], #4)

0002f6d4 <myhtml_tree_open_elements_append@@Base>:
   2f6d4:	str	r4, [sp, #-8]!
   2f6d8:	str	lr, [sp, #4]
   2f6dc:	ldr	r0, [r0, #128]	; 0x80
   2f6e0:	bl	101c0 <myhtml_tree_list_append@plt>
   2f6e4:	ldr	r4, [sp]
   2f6e8:	add	sp, sp, #4
   2f6ec:	pop	{pc}		; (ldr pc, [sp], #4)

0002f6f0 <myhtml_tree_node_insert_root@@Base>:
   2f6f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2f6f4:	strd	r6, [sp, #8]
   2f6f8:	str	r8, [sp, #16]
   2f6fc:	str	lr, [sp, #20]
   2f700:	mov	r5, r0
   2f704:	mov	r6, r1
   2f708:	mov	r7, r2
   2f70c:	bl	ff80 <myhtml_tree_node_create@plt>
   2f710:	mov	r4, r0
   2f714:	cmp	r6, #0
   2f718:	ldrne	r3, [r6]
   2f71c:	moveq	r3, #65	; 0x41
   2f720:	str	r3, [r0, #4]
   2f724:	str	r6, [r0, #32]
   2f728:	str	r7, [r0, #8]
   2f72c:	mov	r1, r0
   2f730:	ldr	r0, [r5, #84]	; 0x54
   2f734:	bl	1064c <myhtml_tree_node_add_child@plt>
   2f738:	mov	r1, r4
   2f73c:	mov	r0, r5
   2f740:	bl	1091c <myhtml_tree_open_elements_append@plt>
   2f744:	str	r4, [r5, #96]	; 0x60
   2f748:	mov	r0, r4
   2f74c:	ldrd	r4, [sp]
   2f750:	ldrd	r6, [sp, #8]
   2f754:	ldr	r8, [sp, #16]
   2f758:	add	sp, sp, #20
   2f75c:	pop	{pc}		; (ldr pc, [sp], #4)

0002f760 <myhtml_tree_open_elements_append_after_index@@Base>:
   2f760:	str	r4, [sp, #-8]!
   2f764:	str	lr, [sp, #4]
   2f768:	ldr	r0, [r0, #128]	; 0x80
   2f76c:	bl	10958 <myhtml_tree_list_append_after_index@plt>
   2f770:	ldr	r4, [sp]
   2f774:	add	sp, sp, #4
   2f778:	pop	{pc}		; (ldr pc, [sp], #4)

0002f77c <myhtml_tree_open_elements_pop@@Base>:
   2f77c:	ldr	r3, [r0, #128]	; 0x80
   2f780:	ldr	r2, [r3, #4]
   2f784:	cmp	r2, #0
   2f788:	beq	2f798 <myhtml_tree_open_elements_pop@@Base+0x1c>
   2f78c:	ldr	r2, [r3, #4]
   2f790:	sub	r2, r2, #1
   2f794:	str	r2, [r3, #4]
   2f798:	bx	lr

0002f79c <myhtml_tree_open_elements_remove@@Base>:
   2f79c:	strd	r4, [sp, #-16]!
   2f7a0:	str	r6, [sp, #8]
   2f7a4:	str	lr, [sp, #12]
   2f7a8:	ldr	r6, [r0, #128]	; 0x80
   2f7ac:	ldr	r5, [r6]
   2f7b0:	ldr	r3, [r6, #4]
   2f7b4:	cmp	r3, #0
   2f7b8:	beq	2f834 <myhtml_tree_open_elements_remove@@Base+0x98>
   2f7bc:	sub	ip, r3, #1
   2f7c0:	add	lr, r5, ip, lsl #2
   2f7c4:	ldr	r2, [r5, ip, lsl #2]
   2f7c8:	cmp	r1, r2
   2f7cc:	subne	r3, r3, #-1073741822	; 0xc0000002
   2f7d0:	addne	r3, r5, r3, lsl #2
   2f7d4:	beq	2f800 <myhtml_tree_open_elements_remove@@Base+0x64>
   2f7d8:	cmp	ip, #0
   2f7dc:	beq	2f834 <myhtml_tree_open_elements_remove@@Base+0x98>
   2f7e0:	sub	r2, ip, #1
   2f7e4:	mov	lr, r3
   2f7e8:	sub	r3, r3, #4
   2f7ec:	ldr	r4, [lr]
   2f7f0:	cmp	r4, r1
   2f7f4:	beq	2f808 <myhtml_tree_open_elements_remove@@Base+0x6c>
   2f7f8:	mov	ip, r2
   2f7fc:	b	2f7d8 <myhtml_tree_open_elements_remove@@Base+0x3c>
   2f800:	mov	r2, ip
   2f804:	mov	ip, r3
   2f808:	mov	r4, r0
   2f80c:	ldr	r3, [r6, #4]
   2f810:	sub	r2, r3, r2
   2f814:	lsl	r2, r2, #2
   2f818:	add	r1, r5, ip, lsl #2
   2f81c:	mov	r0, lr
   2f820:	bl	fe18 <memmove@plt>
   2f824:	ldr	r2, [r4, #128]	; 0x80
   2f828:	ldr	r3, [r2, #4]
   2f82c:	sub	r3, r3, #1
   2f830:	str	r3, [r2, #4]
   2f834:	ldrd	r4, [sp]
   2f838:	ldr	r6, [sp, #8]
   2f83c:	add	sp, sp, #12
   2f840:	pop	{pc}		; (ldr pc, [sp], #4)

0002f844 <myhtml_tree_open_elements_pop_until@@Base>:
   2f844:	str	r4, [sp, #-8]!
   2f848:	str	lr, [sp, #4]
   2f84c:	ldr	ip, [r0, #128]	; 0x80
   2f850:	ldr	r4, [ip]
   2f854:	ldr	ip, [r0, #128]	; 0x80
   2f858:	ldr	lr, [ip, #4]
   2f85c:	cmp	lr, #0
   2f860:	beq	2f8b8 <myhtml_tree_open_elements_pop_until@@Base+0x74>
   2f864:	ldr	lr, [ip, #4]
   2f868:	sub	lr, lr, #1
   2f86c:	str	lr, [ip, #4]
   2f870:	ldr	ip, [r0, #128]	; 0x80
   2f874:	ldr	lr, [ip, #4]
   2f878:	ldr	lr, [r4, lr, lsl #2]
   2f87c:	ldr	lr, [lr, #4]
   2f880:	cmp	lr, r1
   2f884:	bne	2f854 <myhtml_tree_open_elements_pop_until@@Base+0x10>
   2f888:	cmp	r2, #0
   2f88c:	beq	2f8a4 <myhtml_tree_open_elements_pop_until@@Base+0x60>
   2f890:	ldr	lr, [ip, #4]
   2f894:	ldr	lr, [r4, lr, lsl #2]
   2f898:	ldr	lr, [lr, #8]
   2f89c:	cmp	lr, r2
   2f8a0:	bne	2f854 <myhtml_tree_open_elements_pop_until@@Base+0x10>
   2f8a4:	cmp	r3, #0
   2f8a8:	beq	2f8b8 <myhtml_tree_open_elements_pop_until@@Base+0x74>
   2f8ac:	ldr	r3, [ip, #4]
   2f8b0:	add	r3, r3, #1
   2f8b4:	str	r3, [ip, #4]
   2f8b8:	ldr	r4, [sp]
   2f8bc:	add	sp, sp, #4
   2f8c0:	pop	{pc}		; (ldr pc, [sp], #4)

0002f8c4 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   2f8c4:	push	{lr}		; (str lr, [sp, #-4]!)
   2f8c8:	ldr	r3, [r0, #128]	; 0x80
   2f8cc:	ldr	lr, [r3]
   2f8d0:	ldr	r3, [r0, #128]	; 0x80
   2f8d4:	ldr	ip, [r3, #4]
   2f8d8:	cmp	ip, #0
   2f8dc:	beq	2f914 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x50>
   2f8e0:	ldr	ip, [r3, #4]
   2f8e4:	sub	ip, ip, #1
   2f8e8:	str	ip, [r3, #4]
   2f8ec:	ldr	r3, [r0, #128]	; 0x80
   2f8f0:	ldr	ip, [r3, #4]
   2f8f4:	ldr	ip, [lr, ip, lsl #2]
   2f8f8:	cmp	ip, r1
   2f8fc:	bne	2f8d0 <myhtml_tree_open_elements_pop_until_by_node@@Base+0xc>
   2f900:	cmp	r2, #0
   2f904:	beq	2f914 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x50>
   2f908:	ldr	r2, [r3, #4]
   2f90c:	add	r2, r2, #1
   2f910:	str	r2, [r3, #4]
   2f914:	pop	{pc}		; (ldr pc, [sp], #4)

0002f918 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   2f918:	ldr	r3, [r0, #128]	; 0x80
   2f91c:	ldr	ip, [r3, #4]
   2f920:	cmp	ip, #0
   2f924:	beq	2f95c <myhtml_tree_open_elements_pop_until_by_index@@Base+0x44>
   2f928:	ldr	ip, [r3, #4]
   2f92c:	sub	ip, ip, #1
   2f930:	str	ip, [r3, #4]
   2f934:	ldr	r3, [r0, #128]	; 0x80
   2f938:	ldr	ip, [r3, #4]
   2f93c:	cmp	ip, r1
   2f940:	bne	2f918 <myhtml_tree_open_elements_pop_until_by_index@@Base>
   2f944:	cmp	r2, #0
   2f948:	beq	2f95c <myhtml_tree_open_elements_pop_until_by_index@@Base+0x44>
   2f94c:	ldr	r2, [r3, #4]
   2f950:	add	r2, r2, #1
   2f954:	str	r2, [r3, #4]
   2f958:	bx	lr
   2f95c:	bx	lr

0002f960 <myhtml_tree_open_elements_find_reverse@@Base>:
   2f960:	ldr	r3, [r0, #128]	; 0x80
   2f964:	ldr	ip, [r3]
   2f968:	ldr	r3, [r3, #4]
   2f96c:	cmp	r3, #0
   2f970:	beq	2f9b8 <myhtml_tree_open_elements_find_reverse@@Base+0x58>
   2f974:	sub	r3, r3, #1
   2f978:	ldr	r0, [ip, r3, lsl #2]
   2f97c:	cmp	r1, r0
   2f980:	beq	2f99c <myhtml_tree_open_elements_find_reverse@@Base+0x3c>
   2f984:	cmp	r3, #0
   2f988:	beq	2f9b0 <myhtml_tree_open_elements_find_reverse@@Base+0x50>
   2f98c:	sub	r3, r3, #1
   2f990:	ldr	r0, [ip, r3, lsl #2]
   2f994:	cmp	r0, r1
   2f998:	bne	2f984 <myhtml_tree_open_elements_find_reverse@@Base+0x24>
   2f99c:	cmp	r2, #0
   2f9a0:	beq	2f9c0 <myhtml_tree_open_elements_find_reverse@@Base+0x60>
   2f9a4:	str	r3, [r2]
   2f9a8:	mov	r0, #1
   2f9ac:	bx	lr
   2f9b0:	mov	r0, #0
   2f9b4:	bx	lr
   2f9b8:	mov	r0, #0
   2f9bc:	bx	lr
   2f9c0:	mov	r0, #1
   2f9c4:	bx	lr

0002f9c8 <myhtml_tree_open_elements_find@@Base>:
   2f9c8:	push	{lr}		; (str lr, [sp, #-4]!)
   2f9cc:	ldr	lr, [r0, #128]	; 0x80
   2f9d0:	ldr	r0, [lr]
   2f9d4:	ldr	r3, [lr, #4]
   2f9d8:	cmp	r3, #0
   2f9dc:	beq	2fa34 <myhtml_tree_open_elements_find@@Base+0x6c>
   2f9e0:	ldr	r3, [r0]
   2f9e4:	cmp	r1, r3
   2f9e8:	movne	r3, #0
   2f9ec:	beq	2fa24 <myhtml_tree_open_elements_find@@Base+0x5c>
   2f9f0:	add	r3, r3, #1
   2f9f4:	ldr	ip, [lr, #4]
   2f9f8:	cmp	ip, r3
   2f9fc:	bls	2fa2c <myhtml_tree_open_elements_find@@Base+0x64>
   2fa00:	ldr	ip, [r0, #4]!
   2fa04:	cmp	ip, r1
   2fa08:	bne	2f9f0 <myhtml_tree_open_elements_find@@Base+0x28>
   2fa0c:	cmp	r2, #0
   2fa10:	moveq	r0, #1
   2fa14:	beq	2fa30 <myhtml_tree_open_elements_find@@Base+0x68>
   2fa18:	str	r3, [r2]
   2fa1c:	mov	r0, #1
   2fa20:	b	2fa30 <myhtml_tree_open_elements_find@@Base+0x68>
   2fa24:	mov	r3, #0
   2fa28:	b	2fa0c <myhtml_tree_open_elements_find@@Base+0x44>
   2fa2c:	mov	r0, #0
   2fa30:	pop	{pc}		; (ldr pc, [sp], #4)
   2fa34:	mov	r0, #0
   2fa38:	b	2fa30 <myhtml_tree_open_elements_find@@Base+0x68>

0002fa3c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2fa3c:	ldr	ip, [r0, #128]	; 0x80
   2fa40:	ldr	r0, [ip]
   2fa44:	ldr	ip, [ip, #4]
   2fa48:	cmp	ip, #0
   2fa4c:	beq	2fab8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x7c>
   2fa50:	strd	r4, [sp, #-12]!
   2fa54:	str	lr, [sp, #8]
   2fa58:	sub	lr, ip, #-1073741823	; 0xc0000001
   2fa5c:	add	r0, r0, lr, lsl #2
   2fa60:	b	2fa6c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x30>
   2fa64:	cmp	ip, #0
   2fa68:	beq	2faa8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x6c>
   2fa6c:	sub	ip, ip, #1
   2fa70:	mov	r5, r0
   2fa74:	ldr	lr, [r0], #-4
   2fa78:	ldr	r4, [lr, #4]
   2fa7c:	cmp	r4, r1
   2fa80:	bne	2fa64 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x28>
   2fa84:	cmp	r2, #0
   2fa88:	beq	2fa98 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x5c>
   2fa8c:	ldr	lr, [lr, #8]
   2fa90:	cmp	lr, r2
   2fa94:	bne	2fa64 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x28>
   2fa98:	cmp	r3, #0
   2fa9c:	strne	ip, [r3]
   2faa0:	ldr	r0, [r5]
   2faa4:	b	2faac <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x70>
   2faa8:	mov	r0, #0
   2faac:	ldrd	r4, [sp]
   2fab0:	add	sp, sp, #8
   2fab4:	pop	{pc}		; (ldr pc, [sp], #4)
   2fab8:	mov	r0, #0
   2fabc:	bx	lr

0002fac0 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   2fac0:	strd	r4, [sp, #-16]!
   2fac4:	str	r6, [sp, #8]
   2fac8:	str	lr, [sp, #12]
   2facc:	ldr	r5, [r0, #128]	; 0x80
   2fad0:	ldr	r0, [r5]
   2fad4:	ldr	ip, [r5, #4]
   2fad8:	cmp	ip, #0
   2fadc:	beq	2fb44 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x84>
   2fae0:	mov	ip, #0
   2fae4:	b	2faf8 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x38>
   2fae8:	add	ip, ip, #1
   2faec:	ldr	lr, [r5, #4]
   2faf0:	cmp	lr, ip
   2faf4:	bls	2fb30 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x70>
   2faf8:	mov	r6, r0
   2fafc:	ldr	lr, [r0], #4
   2fb00:	ldr	r4, [lr, #4]
   2fb04:	cmp	r4, r1
   2fb08:	bne	2fae8 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x28>
   2fb0c:	cmp	r2, #0
   2fb10:	beq	2fb20 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x60>
   2fb14:	ldr	lr, [lr, #8]
   2fb18:	cmp	lr, r2
   2fb1c:	bne	2fae8 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x28>
   2fb20:	cmp	r3, #0
   2fb24:	strne	ip, [r3]
   2fb28:	ldr	r0, [r6]
   2fb2c:	b	2fb34 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x74>
   2fb30:	mov	r0, #0
   2fb34:	ldrd	r4, [sp]
   2fb38:	ldr	r6, [sp, #8]
   2fb3c:	add	sp, sp, #12
   2fb40:	pop	{pc}		; (ldr pc, [sp], #4)
   2fb44:	mov	r0, #0
   2fb48:	b	2fb34 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x74>

0002fb4c <myhtml_tree_generate_implied_end_tags@@Base>:
   2fb4c:	ldr	r3, [r0, #128]	; 0x80
   2fb50:	ldr	ip, [r3, #4]
   2fb54:	cmp	ip, #0
   2fb58:	bxeq	lr
   2fb5c:	strd	r4, [sp, #-16]!
   2fb60:	str	r6, [sp, #8]
   2fb64:	str	lr, [sp, #12]
   2fb68:	mov	r5, r2
   2fb6c:	mov	r6, r1
   2fb70:	mov	r4, r0
   2fb74:	ldr	r3, [r3, #4]
   2fb78:	cmp	r3, #0
   2fb7c:	bne	2fbc4 <myhtml_tree_generate_implied_end_tags@@Base+0x78>
   2fb80:	ldrd	r4, [sp]
   2fb84:	ldr	r6, [sp, #8]
   2fb88:	add	sp, sp, #12
   2fb8c:	pop	{pc}		; (ldr pc, [sp], #4)
   2fb90:	cmp	ip, r6
   2fb94:	bne	2fbac <myhtml_tree_generate_implied_end_tags@@Base+0x60>
   2fb98:	cmp	r5, #0
   2fb9c:	beq	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fba0:	ldr	r3, [r0, #8]
   2fba4:	cmp	r3, r5
   2fba8:	beq	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbac:	mov	r0, r4
   2fbb0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2fbb4:	ldr	r3, [r4, #128]	; 0x80
   2fbb8:	ldr	r3, [r3, #4]
   2fbbc:	cmp	r3, #0
   2fbc0:	beq	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbc4:	mov	r0, r4
   2fbc8:	bl	105bc <myhtml_tree_current_node@plt>
   2fbcc:	ldr	ip, [r0, #4]
   2fbd0:	sub	r3, ip, #36	; 0x24
   2fbd4:	cmp	r3, #72	; 0x48
   2fbd8:	addls	pc, pc, r3, lsl #2
   2fbdc:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbe0:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fbe4:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbe8:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbec:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbf0:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbf4:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbf8:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fbfc:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc00:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fc04:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc08:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc0c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc10:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc14:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc18:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc1c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc20:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc24:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc28:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc2c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc30:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc34:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc38:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc3c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc40:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc44:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc48:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc4c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc50:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc54:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc58:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc5c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc60:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc64:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc68:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc6c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc70:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc74:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc78:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc7c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc80:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc84:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fc88:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc8c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc90:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc94:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc98:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fc9c:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fca0:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fca4:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fca8:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcac:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcb0:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcb4:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcb8:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcbc:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcc0:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcc4:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcc8:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fccc:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcd0:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fcd4:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fcd8:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcdc:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fce0:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fce4:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fce8:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcec:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcf0:	b	2fb80 <myhtml_tree_generate_implied_end_tags@@Base+0x34>
   2fcf4:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fcf8:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fcfc:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>
   2fd00:	b	2fb90 <myhtml_tree_generate_implied_end_tags@@Base+0x44>

0002fd04 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   2fd04:	ldr	r3, [r0, #128]	; 0x80
   2fd08:	ldr	ip, [r3, #4]
   2fd0c:	cmp	ip, #0
   2fd10:	bxeq	lr
   2fd14:	strd	r4, [sp, #-16]!
   2fd18:	str	r6, [sp, #8]
   2fd1c:	str	lr, [sp, #12]
   2fd20:	mov	r5, r2
   2fd24:	mov	r6, r1
   2fd28:	mov	r4, r0
   2fd2c:	ldr	r3, [r3, #4]
   2fd30:	cmp	r3, #0
   2fd34:	bne	2fd7c <myhtml_tree_generate_all_implied_end_tags@@Base+0x78>
   2fd38:	ldrd	r4, [sp]
   2fd3c:	ldr	r6, [sp, #8]
   2fd40:	add	sp, sp, #12
   2fd44:	pop	{pc}		; (ldr pc, [sp], #4)
   2fd48:	cmp	ip, r6
   2fd4c:	bne	2fd64 <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   2fd50:	cmp	r5, #0
   2fd54:	beq	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fd58:	ldr	r3, [r0, #8]
   2fd5c:	cmp	r3, r5
   2fd60:	beq	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fd64:	mov	r0, r4
   2fd68:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2fd6c:	ldr	r3, [r4, #128]	; 0x80
   2fd70:	ldr	r3, [r3, #4]
   2fd74:	cmp	r3, #0
   2fd78:	beq	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fd7c:	mov	r0, r4
   2fd80:	bl	105bc <myhtml_tree_current_node@plt>
   2fd84:	ldr	ip, [r0, #4]
   2fd88:	sub	r3, ip, #27
   2fd8c:	cmp	r3, #108	; 0x6c
   2fd90:	addls	pc, pc, r3, lsl #2
   2fd94:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fd98:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fd9c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fda0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fda4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fda8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdac:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fdb0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdb4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdb8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdbc:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fdc0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdc4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdc8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdcc:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdd0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdd4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdd8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fddc:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fde0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fde4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fde8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdec:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdf0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdf4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdf8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fdfc:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe00:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe04:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe08:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe0c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe10:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe14:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe18:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe1c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe20:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe24:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe28:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe2c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe30:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe34:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe38:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe3c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe40:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe44:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe48:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe4c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe50:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe54:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe58:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe5c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe60:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fe64:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe68:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe6c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe70:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe74:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe78:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe7c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe80:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe84:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe88:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe8c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe90:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe94:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe98:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fe9c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fea0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fea4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fea8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2feac:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2feb0:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2feb4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2feb8:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2febc:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fec0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fec4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fec8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fecc:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fed0:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fed4:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fed8:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fedc:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2fee0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fee4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fee8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2feec:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fef0:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fef4:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fef8:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2fefc:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff00:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff04:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff08:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff0c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff10:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff14:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff18:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff1c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff20:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff24:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2ff28:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2ff2c:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff30:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff34:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2ff38:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2ff3c:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>
   2ff40:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff44:	b	2fd38 <myhtml_tree_generate_all_implied_end_tags@@Base+0x34>
   2ff48:	b	2fd48 <myhtml_tree_generate_all_implied_end_tags@@Base+0x44>

0002ff4c <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   2ff4c:	ldr	r2, [r0, #128]	; 0x80
   2ff50:	ldr	r3, [r2, #4]
   2ff54:	cmp	r3, #0
   2ff58:	bxeq	lr
   2ff5c:	strd	r4, [sp, #-16]!
   2ff60:	str	r6, [sp, #8]
   2ff64:	str	lr, [sp, #12]
   2ff68:	ldr	r3, [r2, #4]
   2ff6c:	ldr	r4, [r2]
   2ff70:	cmp	r3, #0
   2ff74:	beq	30124 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1d8>
   2ff78:	add	r1, r4, r3, lsl #2
   2ff7c:	mov	r6, #1
   2ff80:	mov	r5, #0
   2ff84:	ldr	r2, [r1, #-4]!
   2ff88:	subs	ip, r3, #1
   2ff8c:	beq	2ffb0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x64>
   2ff90:	ldr	lr, [r2, #8]
   2ff94:	cmp	lr, #1
   2ff98:	moveq	lr, r5
   2ff9c:	beq	30134 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1e8>
   2ffa0:	mov	r3, ip
   2ffa4:	b	2ff84 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x38>
   2ffa8:	mov	r3, ip
   2ffac:	b	2ff84 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x38>
   2ffb0:	ldr	lr, [r0, #88]	; 0x58
   2ffb4:	cmp	lr, #0
   2ffb8:	movne	r2, lr
   2ffbc:	ldr	lr, [r2, #8]
   2ffc0:	cmp	lr, #1
   2ffc4:	beq	30130 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1e4>
   2ffc8:	mov	r3, #6
   2ffcc:	str	r3, [r0, #168]	; 0xa8
   2ffd0:	ldrd	r4, [sp]
   2ffd4:	ldr	r6, [sp, #8]
   2ffd8:	add	sp, sp, #12
   2ffdc:	pop	{pc}		; (ldr pc, [sp], #4)
   2ffe0:	cmp	lr, #0
   2ffe4:	movne	r3, #15
   2ffe8:	strne	r3, [r0, #168]	; 0xa8
   2ffec:	bne	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   2fff0:	cmp	ip, #0
   2fff4:	beq	30044 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xf8>
   2fff8:	sub	r3, r3, #2
   2fffc:	ldr	r2, [r4, r3, lsl #2]
   30000:	ldr	r2, [r2, #4]
   30004:	cmp	r2, #128	; 0x80
   30008:	beq	30050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x104>
   3000c:	cmp	r2, #125	; 0x7d
   30010:	beq	30038 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xec>
   30014:	cmp	r3, #0
   30018:	beq	30044 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xf8>
   3001c:	sub	r3, r3, #1
   30020:	ldr	r2, [r4, r3, lsl #2]
   30024:	ldr	r2, [r2, #4]
   30028:	cmp	r2, #128	; 0x80
   3002c:	beq	30050 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x104>
   30030:	cmp	r2, #125	; 0x7d
   30034:	bne	30014 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xc8>
   30038:	mov	r3, #16
   3003c:	str	r3, [r0, #168]	; 0xa8
   30040:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   30044:	mov	r3, #15
   30048:	str	r3, [r0, #168]	; 0xa8
   3004c:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   30050:	mov	r3, #15
   30054:	str	r3, [r0, #168]	; 0xa8
   30058:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   3005c:	cmp	lr, #0
   30060:	moveq	r3, #14
   30064:	streq	r3, [r0, #168]	; 0xa8
   30068:	beq	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   3006c:	mov	r3, #6
   30070:	str	r3, [r0, #168]	; 0xa8
   30074:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   30078:	mov	r3, #13
   3007c:	str	r3, [r0, #168]	; 0xa8
   30080:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   30084:	mov	r3, #12
   30088:	str	r3, [r0, #168]	; 0xa8
   3008c:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   30090:	mov	r3, #10
   30094:	str	r3, [r0, #168]	; 0xa8
   30098:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   3009c:	mov	r3, #11
   300a0:	str	r3, [r0, #168]	; 0xa8
   300a4:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   300a8:	mov	r3, #8
   300ac:	str	r3, [r0, #168]	; 0xa8
   300b0:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   300b4:	ldr	r2, [r0, #140]	; 0x8c
   300b8:	ldr	r3, [r2, #4]
   300bc:	sub	r3, r3, #-1073741823	; 0xc0000001
   300c0:	ldr	r2, [r2]
   300c4:	ldr	r3, [r2, r3, lsl #2]
   300c8:	str	r3, [r0, #168]	; 0xa8
   300cc:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   300d0:	cmp	lr, #0
   300d4:	moveq	r3, #3
   300d8:	streq	r3, [r0, #168]	; 0xa8
   300dc:	bne	3006c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x120>
   300e0:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   300e4:	mov	r3, #6
   300e8:	str	r3, [r0, #168]	; 0xa8
   300ec:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   300f0:	mov	r3, #19
   300f4:	str	r3, [r0, #168]	; 0xa8
   300f8:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   300fc:	ldr	r3, [r0, #92]	; 0x5c
   30100:	cmp	r3, #0
   30104:	movne	r3, #5
   30108:	moveq	r3, #2
   3010c:	str	r3, [r0, #168]	; 0xa8
   30110:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   30114:	cmp	lr, #0
   30118:	bne	3006c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x120>
   3011c:	cmp	ip, #0
   30120:	bne	2ffa8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x5c>
   30124:	mov	r3, #0
   30128:	str	r3, [r0, #168]	; 0xa8
   3012c:	b	2ffd0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x84>
   30130:	mov	lr, r6
   30134:	ldr	r2, [r2, #4]
   30138:	cmp	r2, #114	; 0x72
   3013c:	beq	2ffe0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x94>
   30140:	sub	r2, r2, #23
   30144:	cmp	r2, #112	; 0x70
   30148:	addls	pc, pc, r2, lsl #2
   3014c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30150:	b	300e4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x198>
   30154:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30158:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3015c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30160:	b	30090 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x144>
   30164:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30168:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3016c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30170:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30174:	b	3009c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x150>
   30178:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3017c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30180:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30184:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30188:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3018c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30190:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30194:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30198:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3019c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301a0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301a4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301a8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301ac:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301b0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301b4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301b8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301bc:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301c0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301c4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301c8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301cc:	b	300f0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1a4>
   301d0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301d4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301d8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301dc:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301e0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301e4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301e8:	b	300d0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x184>
   301ec:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301f0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301f4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   301f8:	b	300fc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1b0>
   301fc:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30200:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30204:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30208:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3020c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30210:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30214:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30218:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3021c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30220:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30224:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30228:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3022c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30230:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30234:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30238:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3023c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30240:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30244:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30248:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3024c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30250:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30254:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30258:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3025c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30260:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30264:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30268:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3026c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30270:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30274:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30278:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3027c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30280:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30284:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30288:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3028c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30290:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30294:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30298:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3029c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302a0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302a4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302a8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302ac:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302b0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302b4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302b8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302bc:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302c0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302c4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302c8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302cc:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302d0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302d4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302d8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302dc:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302e0:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302e4:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302e8:	b	300a8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x15c>
   302ec:	b	30084 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x138>
   302f0:	b	3005c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x110>
   302f4:	b	300b4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x168>
   302f8:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   302fc:	b	30084 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x138>
   30300:	b	3005c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x110>
   30304:	b	30084 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x138>
   30308:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   3030c:	b	30114 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1c8>
   30310:	b	30078 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x12c>

00030314 <myhtml_tree_active_formatting_init@@Base>:
   30314:	str	r4, [sp, #-8]!
   30318:	str	lr, [sp, #4]
   3031c:	bl	107f0 <myhtml_tree_list_init@plt>
   30320:	ldr	r4, [sp]
   30324:	add	sp, sp, #4
   30328:	pop	{pc}		; (ldr pc, [sp], #4)

0003032c <myhtml_tree_active_formatting_clean@@Base>:
   3032c:	ldr	r3, [r0, #124]	; 0x7c
   30330:	mov	r2, #0
   30334:	str	r2, [r3, #4]
   30338:	bx	lr

0003033c <myhtml_tree_active_formatting_destroy@@Base>:
   3033c:	str	r4, [sp, #-8]!
   30340:	str	lr, [sp, #4]
   30344:	mov	r1, #1
   30348:	ldr	r0, [r0, #124]	; 0x7c
   3034c:	bl	10688 <myhtml_tree_list_destroy@plt>
   30350:	ldr	r4, [sp]
   30354:	add	sp, sp, #4
   30358:	pop	{pc}		; (ldr pc, [sp], #4)

0003035c <myhtml_tree_active_formatting_is_marker@@Base>:
   3035c:	ldr	r3, [r0]
   30360:	ldr	r3, [r3, #36]	; 0x24
   30364:	cmp	r3, r1
   30368:	beq	303bc <myhtml_tree_active_formatting_is_marker@@Base+0x60>
   3036c:	ldr	r0, [r1, #4]
   30370:	cmp	r0, #83	; 0x53
   30374:	beq	303c4 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   30378:	bhi	3039c <myhtml_tree_active_formatting_is_marker@@Base+0x40>
   3037c:	cmp	r0, #25
   30380:	beq	303cc <myhtml_tree_active_formatting_is_marker@@Base+0x70>
   30384:	cmp	r0, #27
   30388:	beq	303d4 <myhtml_tree_active_formatting_is_marker@@Base+0x78>
   3038c:	cmp	r0, #9
   30390:	movne	r0, #0
   30394:	moveq	r0, #1
   30398:	bx	lr
   3039c:	cmp	r0, #127	; 0x7f
   303a0:	beq	303dc <myhtml_tree_active_formatting_is_marker@@Base+0x80>
   303a4:	cmp	r0, #131	; 0x83
   303a8:	beq	303e4 <myhtml_tree_active_formatting_is_marker@@Base+0x88>
   303ac:	cmp	r0, #94	; 0x5e
   303b0:	movne	r0, #0
   303b4:	moveq	r0, #1
   303b8:	bx	lr
   303bc:	mov	r0, #1
   303c0:	bx	lr
   303c4:	mov	r0, #1
   303c8:	bx	lr
   303cc:	mov	r0, #1
   303d0:	bx	lr
   303d4:	mov	r0, #1
   303d8:	bx	lr
   303dc:	mov	r0, #1
   303e0:	bx	lr
   303e4:	mov	r0, #1
   303e8:	bx	lr

000303ec <myhtml_tree_active_formatting_append@@Base>:
   303ec:	str	r4, [sp, #-8]!
   303f0:	str	lr, [sp, #4]
   303f4:	ldr	r0, [r0, #124]	; 0x7c
   303f8:	bl	101c0 <myhtml_tree_list_append@plt>
   303fc:	ldr	r4, [sp]
   30400:	add	sp, sp, #4
   30404:	pop	{pc}		; (ldr pc, [sp], #4)

00030408 <myhtml_tree_active_formatting_pop@@Base>:
   30408:	ldr	r3, [r0, #124]	; 0x7c
   3040c:	ldr	r2, [r3, #4]
   30410:	cmp	r2, #0
   30414:	beq	30424 <myhtml_tree_active_formatting_pop@@Base+0x1c>
   30418:	ldr	r2, [r3, #4]
   3041c:	sub	r2, r2, #1
   30420:	str	r2, [r3, #4]
   30424:	bx	lr

00030428 <myhtml_tree_active_formatting_remove@@Base>:
   30428:	strd	r4, [sp, #-16]!
   3042c:	str	r6, [sp, #8]
   30430:	str	lr, [sp, #12]
   30434:	ldr	r6, [r0, #124]	; 0x7c
   30438:	ldr	r5, [r6]
   3043c:	ldr	r3, [r6, #4]
   30440:	cmp	r3, #0
   30444:	beq	304c0 <myhtml_tree_active_formatting_remove@@Base+0x98>
   30448:	sub	ip, r3, #1
   3044c:	add	lr, r5, ip, lsl #2
   30450:	ldr	r2, [r5, ip, lsl #2]
   30454:	cmp	r1, r2
   30458:	subne	r3, r3, #-1073741822	; 0xc0000002
   3045c:	addne	r3, r5, r3, lsl #2
   30460:	beq	3048c <myhtml_tree_active_formatting_remove@@Base+0x64>
   30464:	cmp	ip, #0
   30468:	beq	304c0 <myhtml_tree_active_formatting_remove@@Base+0x98>
   3046c:	sub	r2, ip, #1
   30470:	mov	lr, r3
   30474:	sub	r3, r3, #4
   30478:	ldr	r4, [lr]
   3047c:	cmp	r4, r1
   30480:	beq	30494 <myhtml_tree_active_formatting_remove@@Base+0x6c>
   30484:	mov	ip, r2
   30488:	b	30464 <myhtml_tree_active_formatting_remove@@Base+0x3c>
   3048c:	mov	r2, ip
   30490:	mov	ip, r3
   30494:	mov	r4, r0
   30498:	ldr	r3, [r6, #4]
   3049c:	sub	r2, r3, r2
   304a0:	lsl	r2, r2, #2
   304a4:	add	r1, r5, ip, lsl #2
   304a8:	mov	r0, lr
   304ac:	bl	fe18 <memmove@plt>
   304b0:	ldr	r2, [r4, #124]	; 0x7c
   304b4:	ldr	r3, [r2, #4]
   304b8:	sub	r3, r3, #1
   304bc:	str	r3, [r2, #4]
   304c0:	ldrd	r4, [sp]
   304c4:	ldr	r6, [sp, #8]
   304c8:	add	sp, sp, #12
   304cc:	pop	{pc}		; (ldr pc, [sp], #4)

000304d0 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   304d0:	str	r4, [sp, #-8]!
   304d4:	str	lr, [sp, #4]
   304d8:	mov	r4, r0
   304dc:	ldr	r2, [r0, #124]	; 0x7c
   304e0:	ldr	r0, [r2]
   304e4:	lsl	r3, r1, #2
   304e8:	ldr	r2, [r2, #4]
   304ec:	sub	r2, r2, r1
   304f0:	add	r1, r3, #4
   304f4:	lsl	r2, r2, #2
   304f8:	add	r1, r0, r1
   304fc:	add	r0, r0, r3
   30500:	bl	fe18 <memmove@plt>
   30504:	ldr	r2, [r4, #124]	; 0x7c
   30508:	ldr	r3, [r2, #4]
   3050c:	sub	r3, r3, #1
   30510:	str	r3, [r2, #4]
   30514:	ldr	r4, [sp]
   30518:	add	sp, sp, #4
   3051c:	pop	{pc}		; (ldr pc, [sp], #4)

00030520 <myhtml_tree_active_formatting_append_with_check@@Base>:
   30520:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30524:	strd	r6, [sp, #8]
   30528:	strd	r8, [sp, #16]
   3052c:	str	sl, [sp, #24]
   30530:	str	lr, [sp, #28]
   30534:	mov	r6, r0
   30538:	mov	r7, r1
   3053c:	ldr	r3, [r0, #124]	; 0x7c
   30540:	ldr	r5, [r3, #4]
   30544:	cmp	r5, #0
   30548:	beq	305fc <myhtml_tree_active_formatting_append_with_check@@Base+0xdc>
   3054c:	sub	sl, r5, #1
   30550:	ldr	r4, [r3]
   30554:	add	r4, r4, r5, lsl #2
   30558:	mov	r9, #0
   3055c:	b	30568 <myhtml_tree_active_formatting_append_with_check@@Base+0x48>
   30560:	cmp	r5, #0
   30564:	beq	305f4 <myhtml_tree_active_formatting_append_with_check@@Base+0xd4>
   30568:	sub	r5, r5, #1
   3056c:	sub	r4, r4, #4
   30570:	ldr	r1, [r4]
   30574:	mov	r0, r6
   30578:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   3057c:	cmp	r0, #0
   30580:	bne	305f4 <myhtml_tree_active_formatting_append_with_check@@Base+0xd4>
   30584:	ldr	r3, [r4]
   30588:	ldr	r1, [r3, #32]
   3058c:	cmp	r1, #0
   30590:	beq	30560 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   30594:	ldr	r3, [r7, #32]
   30598:	cmp	r3, #0
   3059c:	beq	30560 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   305a0:	ldr	r0, [r6, #8]
   305a4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   305a8:	ldr	r1, [r7, #32]
   305ac:	ldr	r0, [r6, #8]
   305b0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   305b4:	ldr	r3, [r4]
   305b8:	ldr	r1, [r3, #8]
   305bc:	ldr	r2, [r7, #8]
   305c0:	cmp	r1, r2
   305c4:	bne	30560 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   305c8:	ldr	r1, [r3, #4]
   305cc:	ldr	r2, [r7, #4]
   305d0:	cmp	r1, r2
   305d4:	bne	30560 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   305d8:	ldr	r1, [r7, #32]
   305dc:	ldr	r0, [r3, #32]
   305e0:	bl	10ac0 <myhtml_token_attr_compare@plt>
   305e4:	cmp	r0, #0
   305e8:	addne	r9, r9, #1
   305ec:	movne	sl, r5
   305f0:	b	30560 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   305f4:	cmp	r9, #2
   305f8:	bhi	30620 <myhtml_tree_active_formatting_append_with_check@@Base+0x100>
   305fc:	mov	r1, r7
   30600:	mov	r0, r6
   30604:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   30608:	ldrd	r4, [sp]
   3060c:	ldrd	r6, [sp, #8]
   30610:	ldrd	r8, [sp, #16]
   30614:	ldr	sl, [sp, #24]
   30618:	add	sp, sp, #28
   3061c:	pop	{pc}		; (ldr pc, [sp], #4)
   30620:	mov	r1, sl
   30624:	mov	r0, r6
   30628:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   3062c:	b	305fc <myhtml_tree_active_formatting_append_with_check@@Base+0xdc>

00030630 <myhtml_tree_active_formatting_current_node@@Base>:
   30630:	ldr	r3, [r0, #124]	; 0x7c
   30634:	ldr	r2, [r3, #4]
   30638:	cmp	r2, #0
   3063c:	beq	30654 <myhtml_tree_active_formatting_current_node@@Base+0x24>
   30640:	ldr	r2, [r3, #4]
   30644:	sub	r2, r2, #-1073741823	; 0xc0000001
   30648:	ldr	r3, [r3]
   3064c:	ldr	r0, [r3, r2, lsl #2]
   30650:	bx	lr
   30654:	mov	r0, #0
   30658:	bx	lr

0003065c <myhtml_tree_active_formatting_find@@Base>:
   3065c:	ldr	r3, [r0, #124]	; 0x7c
   30660:	ldr	ip, [r3]
   30664:	ldr	r3, [r3, #4]
   30668:	cmp	r3, #0
   3066c:	beq	306b4 <myhtml_tree_active_formatting_find@@Base+0x58>
   30670:	sub	r3, r3, #1
   30674:	ldr	r0, [ip, r3, lsl #2]
   30678:	cmp	r1, r0
   3067c:	beq	30698 <myhtml_tree_active_formatting_find@@Base+0x3c>
   30680:	cmp	r3, #0
   30684:	beq	306ac <myhtml_tree_active_formatting_find@@Base+0x50>
   30688:	sub	r3, r3, #1
   3068c:	ldr	r0, [ip, r3, lsl #2]
   30690:	cmp	r0, r1
   30694:	bne	30680 <myhtml_tree_active_formatting_find@@Base+0x24>
   30698:	cmp	r2, #0
   3069c:	beq	306bc <myhtml_tree_active_formatting_find@@Base+0x60>
   306a0:	str	r3, [r2]
   306a4:	mov	r0, #1
   306a8:	bx	lr
   306ac:	mov	r0, #0
   306b0:	bx	lr
   306b4:	mov	r0, #0
   306b8:	bx	lr
   306bc:	mov	r0, #1
   306c0:	bx	lr

000306c4 <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   306c4:	ldr	r3, [r0, #124]	; 0x7c
   306c8:	ldr	r2, [r3, #4]
   306cc:	cmp	r2, #0
   306d0:	bxeq	lr
   306d4:	strd	r4, [sp, #-16]!
   306d8:	str	r6, [sp, #8]
   306dc:	str	lr, [sp, #12]
   306e0:	mov	r4, r0
   306e4:	ldr	r5, [r3]
   306e8:	ldr	r3, [r4, #124]	; 0x7c
   306ec:	ldr	r2, [r3, #4]
   306f0:	cmp	r2, #0
   306f4:	beq	30720 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x5c>
   306f8:	ldr	r2, [r3, #4]
   306fc:	sub	r2, r2, #1
   30700:	str	r2, [r3, #4]
   30704:	ldr	r3, [r4, #124]	; 0x7c
   30708:	ldr	r3, [r3, #4]
   3070c:	ldr	r1, [r5, r3, lsl #2]
   30710:	mov	r0, r4
   30714:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   30718:	cmp	r0, #0
   3071c:	beq	306e8 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x24>
   30720:	ldrd	r4, [sp]
   30724:	ldr	r6, [sp, #8]
   30728:	add	sp, sp, #12
   3072c:	pop	{pc}		; (ldr pc, [sp], #4)

00030730 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   30730:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30734:	strd	r6, [sp, #8]
   30738:	strd	r8, [sp, #16]
   3073c:	str	sl, [sp, #24]
   30740:	str	lr, [sp, #28]
   30744:	ldr	r3, [r0, #124]	; 0x7c
   30748:	ldr	r4, [r3]
   3074c:	ldr	r5, [r3, #4]
   30750:	cmp	r5, #0
   30754:	beq	307cc <myhtml_tree_active_formatting_between_last_marker@@Base+0x9c>
   30758:	mov	r9, r2
   3075c:	mov	r8, r1
   30760:	mov	r7, r0
   30764:	sub	r3, r5, #-1073741823	; 0xc0000001
   30768:	add	r4, r4, r3, lsl #2
   3076c:	b	30778 <myhtml_tree_active_formatting_between_last_marker@@Base+0x48>
   30770:	cmp	r5, #0
   30774:	beq	307c4 <myhtml_tree_active_formatting_between_last_marker@@Base+0x94>
   30778:	sub	r5, r5, #1
   3077c:	mov	r6, r4
   30780:	sub	r4, r4, #4
   30784:	ldr	r1, [r6]
   30788:	mov	r0, r7
   3078c:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   30790:	cmp	r0, #0
   30794:	bne	307d4 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   30798:	ldr	r3, [r4, #4]
   3079c:	ldr	ip, [r3, #4]
   307a0:	cmp	ip, r8
   307a4:	bne	30770 <myhtml_tree_active_formatting_between_last_marker@@Base+0x40>
   307a8:	ldr	r3, [r3, #8]
   307ac:	cmp	r3, #1
   307b0:	bne	30770 <myhtml_tree_active_formatting_between_last_marker@@Base+0x40>
   307b4:	cmp	r9, #0
   307b8:	strne	r5, [r9]
   307bc:	ldr	r0, [r6]
   307c0:	b	307d8 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa8>
   307c4:	mov	r0, #0
   307c8:	b	307d8 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa8>
   307cc:	mov	r0, #0
   307d0:	b	307d8 <myhtml_tree_active_formatting_between_last_marker@@Base+0xa8>
   307d4:	mov	r0, #0
   307d8:	ldrd	r4, [sp]
   307dc:	ldrd	r6, [sp, #8]
   307e0:	ldrd	r8, [sp, #16]
   307e4:	ldr	sl, [sp, #24]
   307e8:	add	sp, sp, #28
   307ec:	pop	{pc}		; (ldr pc, [sp], #4)

000307f0 <myhtml_tree_appropriate_place_inserting@@Base>:
   307f0:	strd	r4, [sp, #-16]!
   307f4:	str	r6, [sp, #8]
   307f8:	str	lr, [sp, #12]
   307fc:	sub	sp, sp, #8
   30800:	mov	r5, r0
   30804:	mov	r6, r2
   30808:	mov	r3, #0
   3080c:	str	r3, [r2]
   30810:	subs	r4, r1, #0
   30814:	beq	30870 <myhtml_tree_appropriate_place_inserting@@Base+0x80>
   30818:	ldrb	r3, [r5, #188]	; 0xbc
   3081c:	cmp	r3, #0
   30820:	beq	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30824:	ldr	r3, [r4, #8]
   30828:	cmp	r3, #1
   3082c:	bne	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30830:	ldr	r3, [r4, #4]
   30834:	sub	r3, r3, #125	; 0x7d
   30838:	cmp	r3, #10
   3083c:	addls	pc, pc, r3, lsl #2
   30840:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30844:	b	3087c <myhtml_tree_appropriate_place_inserting@@Base+0x8c>
   30848:	b	3087c <myhtml_tree_appropriate_place_inserting@@Base+0x8c>
   3084c:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30850:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30854:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30858:	b	3087c <myhtml_tree_appropriate_place_inserting@@Base+0x8c>
   3085c:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30860:	b	3087c <myhtml_tree_appropriate_place_inserting@@Base+0x8c>
   30864:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30868:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   3086c:	b	3087c <myhtml_tree_appropriate_place_inserting@@Base+0x8c>
   30870:	bl	105bc <myhtml_tree_current_node@plt>
   30874:	mov	r4, r0
   30878:	b	30818 <myhtml_tree_appropriate_place_inserting@@Base+0x28>
   3087c:	mov	r3, sp
   30880:	mov	r2, #1
   30884:	mov	r1, #128	; 0x80
   30888:	mov	r0, r5
   3088c:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   30890:	mov	r4, r0
   30894:	add	r3, sp, #4
   30898:	mov	r2, #1
   3089c:	mov	r1, #125	; 0x7d
   308a0:	mov	r0, r5
   308a4:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   308a8:	cmp	r4, #0
   308ac:	beq	30900 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   308b0:	cmp	r0, #0
   308b4:	beq	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   308b8:	ldr	r2, [sp]
   308bc:	ldr	r3, [sp, #4]
   308c0:	cmp	r2, r3
   308c4:	bhi	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   308c8:	ldr	r3, [r0, #24]
   308cc:	cmp	r3, #0
   308d0:	beq	30928 <myhtml_tree_appropriate_place_inserting@@Base+0x138>
   308d4:	ldr	r4, [r0, #12]
   308d8:	cmp	r4, #0
   308dc:	beq	30918 <myhtml_tree_appropriate_place_inserting@@Base+0x128>
   308e0:	mov	r3, #2
   308e4:	str	r3, [r6]
   308e8:	mov	r0, r4
   308ec:	add	sp, sp, #8
   308f0:	ldrd	r4, [sp]
   308f4:	ldr	r6, [sp, #8]
   308f8:	add	sp, sp, #12
   308fc:	pop	{pc}		; (ldr pc, [sp], #4)
   30900:	cmp	r0, #0
   30904:	bne	308c8 <myhtml_tree_appropriate_place_inserting@@Base+0xd8>
   30908:	ldr	r3, [r5, #128]	; 0x80
   3090c:	ldr	r3, [r3]
   30910:	ldr	r4, [r3]
   30914:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30918:	mov	r3, #1
   3091c:	str	r3, [r6]
   30920:	mov	r4, r0
   30924:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30928:	ldr	r2, [r5, #128]	; 0x80
   3092c:	ldr	r3, [sp, #4]
   30930:	sub	r3, r3, #-1073741823	; 0xc0000001
   30934:	ldr	r2, [r2]
   30938:	ldr	r4, [r2, r3, lsl #2]
   3093c:	b	308e8 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>

00030940 <myhtml_tree_node_insert_by_token@@Base>:
   30940:	strd	r4, [sp, #-20]!	; 0xffffffec
   30944:	strd	r6, [sp, #8]
   30948:	str	lr, [sp, #16]
   3094c:	sub	sp, sp, #12
   30950:	mov	r5, r0
   30954:	mov	r6, r1
   30958:	mov	r7, r2
   3095c:	bl	ff80 <myhtml_tree_node_create@plt>
   30960:	mov	r4, r0
   30964:	ldr	r3, [r6]
   30968:	str	r3, [r0, #4]
   3096c:	str	r6, [r0, #32]
   30970:	str	r7, [r0, #8]
   30974:	add	r2, sp, #4
   30978:	mov	r1, #0
   3097c:	mov	r0, r5
   30980:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   30984:	ldr	r2, [sp, #4]
   30988:	mov	r1, r4
   3098c:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   30990:	mov	r1, r4
   30994:	mov	r0, r5
   30998:	bl	1091c <myhtml_tree_open_elements_append@plt>
   3099c:	mov	r0, r4
   309a0:	add	sp, sp, #12
   309a4:	ldrd	r4, [sp]
   309a8:	ldrd	r6, [sp, #8]
   309ac:	add	sp, sp, #16
   309b0:	pop	{pc}		; (ldr pc, [sp], #4)

000309b4 <myhtml_tree_node_insert@@Base>:
   309b4:	strd	r4, [sp, #-20]!	; 0xffffffec
   309b8:	strd	r6, [sp, #8]
   309bc:	str	lr, [sp, #16]
   309c0:	sub	sp, sp, #12
   309c4:	mov	r5, r0
   309c8:	mov	r7, r1
   309cc:	mov	r6, r2
   309d0:	bl	ff80 <myhtml_tree_node_create@plt>
   309d4:	mov	r4, r0
   309d8:	mov	r1, #0
   309dc:	str	r1, [r0, #32]
   309e0:	str	r7, [r0, #4]
   309e4:	str	r6, [r0, #8]
   309e8:	add	r2, sp, #4
   309ec:	mov	r0, r5
   309f0:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   309f4:	ldr	r2, [sp, #4]
   309f8:	mov	r1, r4
   309fc:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   30a00:	mov	r1, r4
   30a04:	mov	r0, r5
   30a08:	bl	1091c <myhtml_tree_open_elements_append@plt>
   30a0c:	mov	r0, r4
   30a10:	add	sp, sp, #12
   30a14:	ldrd	r4, [sp]
   30a18:	ldrd	r6, [sp, #8]
   30a1c:	add	sp, sp, #16
   30a20:	pop	{pc}		; (ldr pc, [sp], #4)

00030a24 <myhtml_tree_node_insert_comment@@Base>:
   30a24:	strd	r4, [sp, #-20]!	; 0xffffffec
   30a28:	strd	r6, [sp, #8]
   30a2c:	str	lr, [sp, #16]
   30a30:	sub	sp, sp, #12
   30a34:	mov	r7, r0
   30a38:	mov	r6, r1
   30a3c:	mov	r5, r2
   30a40:	bl	ff80 <myhtml_tree_node_create@plt>
   30a44:	mov	r4, r0
   30a48:	str	r6, [r0, #32]
   30a4c:	mov	r3, #2
   30a50:	str	r3, [r0, #4]
   30a54:	mov	r3, #0
   30a58:	str	r3, [sp, #4]
   30a5c:	cmp	r5, r3
   30a60:	beq	30a94 <myhtml_tree_node_insert_comment@@Base+0x70>
   30a64:	ldr	r2, [sp, #4]
   30a68:	mov	r1, r4
   30a6c:	mov	r0, r5
   30a70:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   30a74:	ldr	r3, [r5, #8]
   30a78:	str	r3, [r4, #8]
   30a7c:	mov	r0, r4
   30a80:	add	sp, sp, #12
   30a84:	ldrd	r4, [sp]
   30a88:	ldrd	r6, [sp, #8]
   30a8c:	add	sp, sp, #16
   30a90:	pop	{pc}		; (ldr pc, [sp], #4)
   30a94:	add	r2, sp, #4
   30a98:	mov	r1, r3
   30a9c:	mov	r0, r7
   30aa0:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   30aa4:	mov	r5, r0
   30aa8:	b	30a64 <myhtml_tree_node_insert_comment@@Base+0x40>

00030aac <myhtml_tree_node_insert_text@@Base>:
   30aac:	strd	r4, [sp, #-16]!
   30ab0:	str	r6, [sp, #8]
   30ab4:	str	lr, [sp, #12]
   30ab8:	sub	sp, sp, #8
   30abc:	mov	r4, r0
   30ac0:	mov	r6, r1
   30ac4:	add	r2, sp, #4
   30ac8:	mov	r1, #0
   30acc:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   30ad0:	ldr	r3, [r4, #84]	; 0x54
   30ad4:	cmp	r3, r0
   30ad8:	beq	30bd4 <myhtml_tree_node_insert_text@@Base+0x128>
   30adc:	mov	r5, r0
   30ae0:	ldr	r3, [sp, #4]
   30ae4:	cmp	r3, #2
   30ae8:	beq	30b30 <myhtml_tree_node_insert_text@@Base+0x84>
   30aec:	cmp	r3, #1
   30af0:	beq	30ba8 <myhtml_tree_node_insert_text@@Base+0xfc>
   30af4:	ldr	r3, [r0, #28]
   30af8:	cmp	r3, #0
   30afc:	beq	30b3c <myhtml_tree_node_insert_text@@Base+0x90>
   30b00:	ldr	r2, [r3, #4]
   30b04:	cmp	r2, #1
   30b08:	bne	30b3c <myhtml_tree_node_insert_text@@Base+0x90>
   30b0c:	ldr	r1, [r3, #32]
   30b10:	cmp	r1, #0
   30b14:	beq	30b3c <myhtml_tree_node_insert_text@@Base+0x90>
   30b18:	mov	r3, #0
   30b1c:	mov	r2, r6
   30b20:	mov	r0, r4
   30b24:	bl	10418 <myhtml_token_merged_two_token_string@plt>
   30b28:	ldr	r4, [r5, #28]
   30b2c:	b	30b6c <myhtml_tree_node_insert_text@@Base+0xc0>
   30b30:	ldr	r3, [r0, #4]
   30b34:	cmp	r3, #1
   30b38:	beq	30b84 <myhtml_tree_node_insert_text@@Base+0xd8>
   30b3c:	mov	r0, r4
   30b40:	bl	ff80 <myhtml_tree_node_create@plt>
   30b44:	mov	r4, r0
   30b48:	mov	r3, #1
   30b4c:	str	r3, [r0, #4]
   30b50:	str	r6, [r0, #32]
   30b54:	ldr	r3, [r5, #8]
   30b58:	str	r3, [r0, #8]
   30b5c:	ldr	r2, [sp, #4]
   30b60:	mov	r1, r0
   30b64:	mov	r0, r5
   30b68:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   30b6c:	mov	r0, r4
   30b70:	add	sp, sp, #8
   30b74:	ldrd	r4, [sp]
   30b78:	ldr	r6, [sp, #8]
   30b7c:	add	sp, sp, #12
   30b80:	pop	{pc}		; (ldr pc, [sp], #4)
   30b84:	ldr	r1, [r0, #32]
   30b88:	cmp	r1, #0
   30b8c:	beq	30b3c <myhtml_tree_node_insert_text@@Base+0x90>
   30b90:	mov	r3, #0
   30b94:	mov	r2, r6
   30b98:	mov	r0, r4
   30b9c:	bl	10418 <myhtml_token_merged_two_token_string@plt>
   30ba0:	mov	r4, r5
   30ba4:	b	30b6c <myhtml_tree_node_insert_text@@Base+0xc0>
   30ba8:	ldr	r3, [r0, #4]
   30bac:	cmp	r3, #1
   30bb0:	bne	30b3c <myhtml_tree_node_insert_text@@Base+0x90>
   30bb4:	ldr	r2, [r0, #32]
   30bb8:	cmp	r2, #0
   30bbc:	beq	30b3c <myhtml_tree_node_insert_text@@Base+0x90>
   30bc0:	mov	r1, r6
   30bc4:	mov	r0, r4
   30bc8:	bl	10418 <myhtml_token_merged_two_token_string@plt>
   30bcc:	mov	r4, r5
   30bd0:	b	30b6c <myhtml_tree_node_insert_text@@Base+0xc0>
   30bd4:	mov	r4, #0
   30bd8:	b	30b6c <myhtml_tree_node_insert_text@@Base+0xc0>

00030bdc <myhtml_tree_node_insert_by_node@@Base>:
   30bdc:	strd	r4, [sp, #-12]!
   30be0:	str	lr, [sp, #8]
   30be4:	sub	sp, sp, #12
   30be8:	mov	r5, r0
   30bec:	mov	r4, r1
   30bf0:	add	r2, sp, #4
   30bf4:	mov	r1, #0
   30bf8:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   30bfc:	ldr	r2, [sp, #4]
   30c00:	mov	r1, r4
   30c04:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   30c08:	mov	r1, r4
   30c0c:	mov	r0, r5
   30c10:	bl	1091c <myhtml_tree_open_elements_append@plt>
   30c14:	mov	r0, r4
   30c18:	add	sp, sp, #12
   30c1c:	ldrd	r4, [sp]
   30c20:	add	sp, sp, #8
   30c24:	pop	{pc}		; (ldr pc, [sp], #4)

00030c28 <myhtml_tree_active_formatting_reconstruction@@Base>:
   30c28:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30c2c:	strd	r6, [sp, #8]
   30c30:	strd	r8, [sp, #16]
   30c34:	str	sl, [sp, #24]
   30c38:	str	lr, [sp, #28]
   30c3c:	ldr	r8, [r0, #124]	; 0x7c
   30c40:	ldr	r3, [r8, #4]
   30c44:	cmp	r3, #0
   30c48:	bne	30c64 <myhtml_tree_active_formatting_reconstruction@@Base+0x3c>
   30c4c:	ldrd	r4, [sp]
   30c50:	ldrd	r6, [sp, #8]
   30c54:	ldrd	r8, [sp, #16]
   30c58:	ldr	sl, [sp, #24]
   30c5c:	add	sp, sp, #28
   30c60:	pop	{pc}		; (ldr pc, [sp], #4)
   30c64:	mov	r5, r0
   30c68:	ldr	r7, [r8]
   30c6c:	ldr	r6, [r8, #4]
   30c70:	sub	r4, r6, #1
   30c74:	ldr	r1, [r7, r4, lsl #2]
   30c78:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   30c7c:	cmp	r0, #0
   30c80:	bne	30c4c <myhtml_tree_active_formatting_reconstruction@@Base+0x24>
   30c84:	mov	r2, #0
   30c88:	ldr	r1, [r7, r4, lsl #2]
   30c8c:	mov	r0, r5
   30c90:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   30c94:	cmp	r0, #0
   30c98:	bne	30c4c <myhtml_tree_active_formatting_reconstruction@@Base+0x24>
   30c9c:	cmp	r4, #0
   30ca0:	beq	30cec <myhtml_tree_active_formatting_reconstruction@@Base+0xc4>
   30ca4:	sub	r6, r6, #-1073741823	; 0xc0000001
   30ca8:	add	r6, r7, r6, lsl #2
   30cac:	mov	sl, #0
   30cb0:	sub	r9, r4, #1
   30cb4:	ldr	r1, [r6, #-4]!
   30cb8:	mov	r0, r5
   30cbc:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   30cc0:	cmp	r0, #0
   30cc4:	bne	30cec <myhtml_tree_active_formatting_reconstruction@@Base+0xc4>
   30cc8:	mov	r2, sl
   30ccc:	ldr	r1, [r6]
   30cd0:	mov	r0, r5
   30cd4:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   30cd8:	cmp	r0, #0
   30cdc:	bne	30cec <myhtml_tree_active_formatting_reconstruction@@Base+0xc4>
   30ce0:	mov	r4, r9
   30ce4:	cmp	r9, #0
   30ce8:	bne	30cb0 <myhtml_tree_active_formatting_reconstruction@@Base+0x88>
   30cec:	ldr	r3, [r8, #4]
   30cf0:	cmp	r4, r3
   30cf4:	bcs	30c4c <myhtml_tree_active_formatting_reconstruction@@Base+0x24>
   30cf8:	add	r6, r7, r4, lsl #2
   30cfc:	ldr	r0, [r6]
   30d00:	bl	10f70 <myhtml_tree_node_clone@plt>
   30d04:	mov	r7, r0
   30d08:	mov	r1, r0
   30d0c:	mov	r0, r5
   30d10:	bl	10700 <myhtml_tree_node_insert_by_node@plt>
   30d14:	str	r7, [r6], #4
   30d18:	add	r4, r4, #1
   30d1c:	ldr	r3, [r8, #4]
   30d20:	cmp	r3, r4
   30d24:	bhi	30cfc <myhtml_tree_active_formatting_reconstruction@@Base+0xd4>
   30d28:	b	30c4c <myhtml_tree_active_formatting_reconstruction@@Base+0x24>

00030d2c <myhtml_tree_node_insert_foreign_element@@Base>:
   30d2c:	strd	r4, [sp, #-20]!	; 0xffffffec
   30d30:	strd	r6, [sp, #8]
   30d34:	str	lr, [sp, #16]
   30d38:	sub	sp, sp, #12
   30d3c:	mov	r5, r0
   30d40:	mov	r7, r1
   30d44:	add	r2, sp, #4
   30d48:	mov	r1, #0
   30d4c:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   30d50:	mov	r6, r0
   30d54:	mov	r0, r5
   30d58:	bl	ff80 <myhtml_tree_node_create@plt>
   30d5c:	mov	r4, r0
   30d60:	ldr	r3, [r7]
   30d64:	str	r3, [r0, #4]
   30d68:	str	r7, [r0, #32]
   30d6c:	ldr	r3, [r6, #8]
   30d70:	str	r3, [r0, #8]
   30d74:	ldr	r2, [sp, #4]
   30d78:	mov	r1, r0
   30d7c:	mov	r0, r6
   30d80:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   30d84:	mov	r1, r4
   30d88:	mov	r0, r5
   30d8c:	bl	1091c <myhtml_tree_open_elements_append@plt>
   30d90:	mov	r0, r4
   30d94:	add	sp, sp, #12
   30d98:	ldrd	r4, [sp]
   30d9c:	ldrd	r6, [sp, #8]
   30da0:	add	sp, sp, #16
   30da4:	pop	{pc}		; (ldr pc, [sp], #4)

00030da8 <myhtml_tree_node_insert_html_element@@Base>:
   30da8:	strd	r4, [sp, #-20]!	; 0xffffffec
   30dac:	strd	r6, [sp, #8]
   30db0:	str	lr, [sp, #16]
   30db4:	sub	sp, sp, #12
   30db8:	mov	r5, r0
   30dbc:	mov	r6, r1
   30dc0:	add	r2, sp, #4
   30dc4:	mov	r1, #0
   30dc8:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   30dcc:	mov	r7, r0
   30dd0:	mov	r0, r5
   30dd4:	bl	ff80 <myhtml_tree_node_create@plt>
   30dd8:	mov	r4, r0
   30ddc:	ldr	r3, [r6]
   30de0:	str	r3, [r0, #4]
   30de4:	str	r6, [r0, #32]
   30de8:	mov	r3, #1
   30dec:	str	r3, [r0, #8]
   30df0:	ldr	r2, [sp, #4]
   30df4:	mov	r1, r0
   30df8:	mov	r0, r7
   30dfc:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   30e00:	mov	r1, r4
   30e04:	mov	r0, r5
   30e08:	bl	1091c <myhtml_tree_open_elements_append@plt>
   30e0c:	mov	r0, r4
   30e10:	add	sp, sp, #12
   30e14:	ldrd	r4, [sp]
   30e18:	ldrd	r6, [sp, #8]
   30e1c:	add	sp, sp, #16
   30e20:	pop	{pc}		; (ldr pc, [sp], #4)

00030e24 <myhtml_tree_adoption_agency_algorithm@@Base>:
   30e24:	strd	r4, [sp, #-36]!	; 0xffffffdc
   30e28:	strd	r6, [sp, #8]
   30e2c:	strd	r8, [sp, #16]
   30e30:	strd	sl, [sp, #24]
   30e34:	str	lr, [sp, #32]
   30e38:	sub	sp, sp, #60	; 0x3c
   30e3c:	ldr	r3, [r0, #128]	; 0x80
   30e40:	ldr	r1, [r3, #4]
   30e44:	cmp	r1, #0
   30e48:	moveq	sl, #0
   30e4c:	beq	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   30e50:	str	r2, [sp, #20]
   30e54:	mov	fp, r0
   30e58:	ldr	r2, [r3, #4]
   30e5c:	ldr	r9, [r3]
   30e60:	ldr	r3, [r0, #124]	; 0x7c
   30e64:	ldr	r3, [r3]
   30e68:	str	r3, [sp, #16]
   30e6c:	sub	r3, r2, #1
   30e70:	ldr	r1, [r9, r3, lsl #2]
   30e74:	ldr	r3, [r1, #8]
   30e78:	cmp	r3, #1
   30e7c:	beq	30ef8 <myhtml_tree_adoption_agency_algorithm@@Base+0xd4>
   30e80:	mov	r3, #8
   30e84:	str	r3, [sp, #24]
   30e88:	add	r3, sp, #52	; 0x34
   30e8c:	str	r3, [sp, #8]
   30e90:	mov	r3, #0
   30e94:	str	r3, [sp, #36]	; 0x24
   30e98:	ldr	r3, [fp, #124]	; 0x7c
   30e9c:	ldr	r4, [r3]
   30ea0:	ldr	r5, [r3, #4]
   30ea4:	cmp	r5, #0
   30ea8:	beq	30ef0 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   30eac:	sub	r3, r5, #-1073741823	; 0xc0000001
   30eb0:	add	r4, r4, r3, lsl #2
   30eb4:	ldr	r7, [sp, #20]
   30eb8:	sub	r5, r5, #1
   30ebc:	mov	r6, r4
   30ec0:	sub	r4, r4, #4
   30ec4:	ldr	r1, [r6]
   30ec8:	mov	r0, fp
   30ecc:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   30ed0:	cmp	r0, #0
   30ed4:	bne	3126c <myhtml_tree_adoption_agency_algorithm@@Base+0x448>
   30ed8:	ldr	r3, [r4, #4]
   30edc:	ldr	r3, [r3, #4]
   30ee0:	cmp	r3, r7
   30ee4:	beq	30f24 <myhtml_tree_adoption_agency_algorithm@@Base+0x100>
   30ee8:	cmp	r5, #0
   30eec:	bne	30eb8 <myhtml_tree_adoption_agency_algorithm@@Base+0x94>
   30ef0:	mov	sl, #1
   30ef4:	b	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   30ef8:	ldr	r3, [r1, #4]
   30efc:	ldr	r2, [sp, #20]
   30f00:	cmp	r3, r2
   30f04:	bne	30e80 <myhtml_tree_adoption_agency_algorithm@@Base+0x5c>
   30f08:	mov	r2, #0
   30f0c:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   30f10:	subs	sl, r0, #0
   30f14:	bne	30e80 <myhtml_tree_adoption_agency_algorithm@@Base+0x5c>
   30f18:	mov	r0, fp
   30f1c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   30f20:	b	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   30f24:	mov	sl, r0
   30f28:	str	r5, [sp, #36]	; 0x24
   30f2c:	ldr	r3, [r6]
   30f30:	str	r3, [sp]
   30f34:	cmp	r3, #0
   30f38:	beq	31290 <myhtml_tree_adoption_agency_algorithm@@Base+0x46c>
   30f3c:	add	r2, sp, #40	; 0x28
   30f40:	ldr	r1, [sp]
   30f44:	mov	r0, fp
   30f48:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   30f4c:	cmp	r0, #0
   30f50:	beq	30fec <myhtml_tree_adoption_agency_algorithm@@Base+0x1c8>
   30f54:	mov	r1, #8
   30f58:	ldr	r0, [sp]
   30f5c:	bl	fbf0 <myhtml_tree_element_in_scope_by_node@plt>
   30f60:	cmp	r0, #0
   30f64:	beq	31298 <myhtml_tree_adoption_agency_algorithm@@Base+0x474>
   30f68:	mov	r0, fp
   30f6c:	bl	105bc <myhtml_tree_current_node@plt>
   30f70:	ldr	r4, [sp, #40]	; 0x28
   30f74:	str	r4, [sp, #44]	; 0x2c
   30f78:	ldr	r3, [fp, #128]	; 0x80
   30f7c:	ldr	r3, [r3, #4]
   30f80:	cmp	r4, r3
   30f84:	bcs	30fcc <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   30f88:	ldr	r3, [r9, r4, lsl #2]
   30f8c:	ldr	r1, [r3, #4]
   30f90:	ldr	r0, [fp, #28]
   30f94:	bl	109b8 <myhtml_tag_get_by_id@plt>
   30f98:	ldr	r4, [sp, #44]	; 0x2c
   30f9c:	ldr	r7, [r9, r4, lsl #2]
   30fa0:	ldr	r3, [r7, #8]
   30fa4:	add	r3, r3, #4
   30fa8:	ldr	r3, [r0, r3, lsl #2]
   30fac:	tst	r3, #2
   30fb0:	bne	3101c <myhtml_tree_adoption_agency_algorithm@@Base+0x1f8>
   30fb4:	add	r4, r4, #1
   30fb8:	str	r4, [sp, #44]	; 0x2c
   30fbc:	ldr	r3, [fp, #128]	; 0x80
   30fc0:	ldr	r3, [r3, #4]
   30fc4:	cmp	r4, r3
   30fc8:	bcc	30f88 <myhtml_tree_adoption_agency_algorithm@@Base+0x164>
   30fcc:	mov	r0, fp
   30fd0:	bl	105bc <myhtml_tree_current_node@plt>
   30fd4:	ldr	r3, [sp]
   30fd8:	cmp	r3, r0
   30fdc:	beq	31004 <myhtml_tree_adoption_agency_algorithm@@Base+0x1e0>
   30fe0:	mov	r0, fp
   30fe4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   30fe8:	b	30fcc <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   30fec:	mov	r4, r0
   30ff0:	ldr	r1, [sp]
   30ff4:	mov	r0, fp
   30ff8:	bl	10838 <myhtml_tree_active_formatting_remove@plt>
   30ffc:	mov	sl, r4
   31000:	b	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   31004:	mov	r0, fp
   31008:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   3100c:	ldr	r1, [sp]
   31010:	mov	r0, fp
   31014:	bl	10838 <myhtml_tree_active_formatting_remove@plt>
   31018:	b	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   3101c:	ldr	r3, [sp, #40]	; 0x28
   31020:	sub	r3, r3, #-1073741823	; 0xc0000001
   31024:	ldr	r3, [r9, r3, lsl #2]
   31028:	str	r3, [sp, #28]
   3102c:	ldr	r3, [sp, #36]	; 0x24
   31030:	add	r3, r3, #1
   31034:	str	r3, [sp, #12]
   31038:	mov	r8, r7
   3103c:	mov	r5, r7
   31040:	mov	r6, #0
   31044:	add	r3, sp, #48	; 0x30
   31048:	str	r3, [sp, #4]
   3104c:	b	310a4 <myhtml_tree_adoption_agency_algorithm@@Base+0x280>
   31050:	ldr	r1, [sp, #52]	; 0x34
   31054:	mov	r0, fp
   31058:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   3105c:	ldr	r3, [sp, #52]	; 0x34
   31060:	ldr	r2, [sp, #12]
   31064:	cmp	r3, r2
   31068:	subcc	r3, r2, #1
   3106c:	strcc	r3, [sp, #12]
   31070:	b	310a4 <myhtml_tree_adoption_agency_algorithm@@Base+0x280>
   31074:	mov	r1, r5
   31078:	mov	r0, fp
   3107c:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   31080:	b	310a4 <myhtml_tree_adoption_agency_algorithm@@Base+0x280>
   31084:	ldr	r3, [sp, #52]	; 0x34
   31088:	add	r3, r3, #1
   3108c:	str	r3, [sp, #12]
   31090:	b	31140 <myhtml_tree_adoption_agency_algorithm@@Base+0x31c>
   31094:	mov	r1, r8
   31098:	mov	r0, r5
   3109c:	bl	1064c <myhtml_tree_node_add_child@plt>
   310a0:	mov	r8, r5
   310a4:	add	r6, r6, #1
   310a8:	ldr	r2, [sp, #4]
   310ac:	mov	r1, r5
   310b0:	mov	r0, fp
   310b4:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   310b8:	cmp	r0, #0
   310bc:	streq	r4, [sp, #48]	; 0x30
   310c0:	ldr	r4, [sp, #48]	; 0x30
   310c4:	cmp	r4, #0
   310c8:	beq	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   310cc:	sub	r4, r4, #1
   310d0:	str	r4, [sp, #48]	; 0x30
   310d4:	ldr	r5, [r9, r4, lsl #2]
   310d8:	ldr	r3, [sp]
   310dc:	cmp	r3, r5
   310e0:	beq	31158 <myhtml_tree_adoption_agency_algorithm@@Base+0x334>
   310e4:	ldr	r2, [sp, #8]
   310e8:	mov	r1, r5
   310ec:	mov	r0, fp
   310f0:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   310f4:	cmp	r6, #3
   310f8:	movle	r3, #0
   310fc:	andgt	r3, r0, #1
   31100:	cmp	r3, #0
   31104:	bne	31050 <myhtml_tree_adoption_agency_algorithm@@Base+0x22c>
   31108:	cmp	r0, #0
   3110c:	beq	31074 <myhtml_tree_adoption_agency_algorithm@@Base+0x250>
   31110:	mov	r0, r5
   31114:	bl	10f70 <myhtml_tree_node_clone@plt>
   31118:	mov	r5, r0
   3111c:	mov	r3, #1
   31120:	str	r3, [r0, #8]
   31124:	ldr	r3, [sp, #52]	; 0x34
   31128:	ldr	r2, [sp, #16]
   3112c:	str	r0, [r2, r3, lsl #2]
   31130:	ldr	r3, [sp, #48]	; 0x30
   31134:	str	r0, [r9, r3, lsl #2]
   31138:	cmp	r7, r8
   3113c:	beq	31084 <myhtml_tree_adoption_agency_algorithm@@Base+0x260>
   31140:	ldr	r3, [r8, #24]
   31144:	cmp	r3, #0
   31148:	beq	31094 <myhtml_tree_adoption_agency_algorithm@@Base+0x270>
   3114c:	mov	r0, r8
   31150:	bl	10d84 <myhtml_tree_node_remove@plt>
   31154:	b	31094 <myhtml_tree_adoption_agency_algorithm@@Base+0x270>
   31158:	ldr	r3, [r8, #24]
   3115c:	cmp	r3, #0
   31160:	beq	3116c <myhtml_tree_adoption_agency_algorithm@@Base+0x348>
   31164:	mov	r0, r8
   31168:	bl	10d84 <myhtml_tree_node_remove@plt>
   3116c:	ldr	r2, [sp, #8]
   31170:	ldr	r1, [sp, #28]
   31174:	mov	r0, fp
   31178:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   3117c:	ldr	r2, [sp, #52]	; 0x34
   31180:	mov	r1, r8
   31184:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   31188:	mov	r0, r5
   3118c:	bl	10f70 <myhtml_tree_node_clone@plt>
   31190:	mov	r8, r0
   31194:	mov	r3, #1
   31198:	str	r3, [r0, #8]
   3119c:	ldr	r4, [r7, #20]
   311a0:	cmp	r4, #0
   311a4:	beq	311cc <myhtml_tree_adoption_agency_algorithm@@Base+0x3a8>
   311a8:	ldr	r6, [r4, #16]
   311ac:	mov	r0, r4
   311b0:	bl	10d84 <myhtml_tree_node_remove@plt>
   311b4:	mov	r1, r4
   311b8:	mov	r0, r8
   311bc:	bl	1064c <myhtml_tree_node_add_child@plt>
   311c0:	mov	r4, r6
   311c4:	cmp	r6, #0
   311c8:	bne	311a8 <myhtml_tree_adoption_agency_algorithm@@Base+0x384>
   311cc:	mov	r1, r8
   311d0:	mov	r0, r7
   311d4:	bl	1064c <myhtml_tree_node_add_child@plt>
   311d8:	add	r2, sp, #36	; 0x24
   311dc:	mov	r1, r5
   311e0:	mov	r0, fp
   311e4:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   311e8:	cmp	r0, #0
   311ec:	beq	312a0 <myhtml_tree_adoption_agency_algorithm@@Base+0x47c>
   311f0:	ldr	r1, [sp, #36]	; 0x24
   311f4:	ldr	r3, [sp, #12]
   311f8:	cmp	r1, r3
   311fc:	subcc	r3, r3, #1
   31200:	strcc	r3, [sp, #12]
   31204:	mov	r0, fp
   31208:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   3120c:	ldr	r2, [sp, #12]
   31210:	mov	r1, r8
   31214:	ldr	r0, [fp, #124]	; 0x7c
   31218:	bl	10250 <myhtml_tree_list_insert_by_index@plt>
   3121c:	mov	r1, r5
   31220:	mov	r0, fp
   31224:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   31228:	add	r2, sp, #44	; 0x2c
   3122c:	mov	r1, r7
   31230:	mov	r0, fp
   31234:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   31238:	cmp	r0, #0
   3123c:	bne	31254 <myhtml_tree_adoption_agency_algorithm@@Base+0x430>
   31240:	ldr	r3, [sp, #24]
   31244:	subs	r3, r3, #1
   31248:	str	r3, [sp, #24]
   3124c:	bne	30e90 <myhtml_tree_adoption_agency_algorithm@@Base+0x6c>
   31250:	b	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   31254:	ldr	r2, [sp, #44]	; 0x2c
   31258:	add	r2, r2, #1
   3125c:	mov	r1, r8
   31260:	ldr	r0, [fp, #128]	; 0x80
   31264:	bl	10250 <myhtml_tree_list_insert_by_index@plt>
   31268:	b	31240 <myhtml_tree_adoption_agency_algorithm@@Base+0x41c>
   3126c:	mov	sl, #0
   31270:	mov	r0, sl
   31274:	add	sp, sp, #60	; 0x3c
   31278:	ldrd	r4, [sp]
   3127c:	ldrd	r6, [sp, #8]
   31280:	ldrd	r8, [sp, #16]
   31284:	ldrd	sl, [sp, #24]
   31288:	add	sp, sp, #32
   3128c:	pop	{pc}		; (ldr pc, [sp], #4)
   31290:	mov	sl, #1
   31294:	b	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   31298:	mov	sl, r0
   3129c:	b	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   312a0:	mov	sl, r0
   312a4:	b	31270 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>

000312a8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   312a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   312ac:	strd	r6, [sp, #8]
   312b0:	str	r8, [sp, #16]
   312b4:	str	lr, [sp, #20]
   312b8:	mov	r4, r0
   312bc:	mov	r5, r1
   312c0:	mov	r3, #1
   312c4:	str	r3, [r1]
   312c8:	ldr	r3, [r0, #40]	; 0x28
   312cc:	ldrb	r3, [r3, #188]	; 0xbc
   312d0:	cmp	r3, #0
   312d4:	beq	31388 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe0>
   312d8:	ldr	r3, [r0, #8]
   312dc:	cmp	r3, #1
   312e0:	bne	31390 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>
   312e4:	ldr	r3, [r0, #4]
   312e8:	sub	r3, r3, #125	; 0x7d
   312ec:	cmp	r3, #10
   312f0:	addls	pc, pc, r3, lsl #2
   312f4:	b	3137c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd4>
   312f8:	b	31324 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x7c>
   312fc:	b	31324 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x7c>
   31300:	b	3137c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd4>
   31304:	b	3137c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd4>
   31308:	b	3137c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd4>
   3130c:	b	31324 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x7c>
   31310:	b	3137c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd4>
   31314:	b	31324 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x7c>
   31318:	b	3137c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd4>
   3131c:	b	3137c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd4>
   31320:	b	31324 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x7c>
   31324:	mov	r1, #128	; 0x80
   31328:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   3132c:	mov	r7, r0
   31330:	mov	r1, #125	; 0x7d
   31334:	mov	r0, r4
   31338:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   3133c:	mov	r6, r0
   31340:	cmp	r7, #0
   31344:	beq	313a8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x100>
   31348:	mov	r1, #125	; 0x7d
   3134c:	mov	r0, r7
   31350:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   31354:	subs	r0, r6, r0
   31358:	movne	r0, #1
   3135c:	cmp	r6, #0
   31360:	moveq	r0, #1
   31364:	cmp	r0, #0
   31368:	beq	313b0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x108>
   3136c:	mov	r3, #0
   31370:	str	r3, [r5]
   31374:	mov	r4, r7
   31378:	b	31390 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>
   3137c:	mov	r3, #0
   31380:	str	r3, [r1]
   31384:	b	31390 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>
   31388:	mov	r3, #0
   3138c:	str	r3, [r1]
   31390:	mov	r0, r4
   31394:	ldrd	r4, [sp]
   31398:	ldrd	r6, [sp, #8]
   3139c:	ldr	r8, [sp, #16]
   313a0:	add	sp, sp, #20
   313a4:	pop	{pc}		; (ldr pc, [sp], #4)
   313a8:	cmp	r0, #0
   313ac:	beq	31390 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>
   313b0:	ldr	r3, [r6, #24]
   313b4:	cmp	r3, #0
   313b8:	beq	31390 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>
   313bc:	ldr	r4, [r6, #12]
   313c0:	cmp	r4, #0
   313c4:	moveq	r4, r6
   313c8:	beq	31390 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>
   313cc:	mov	r3, #2
   313d0:	str	r3, [r5]
   313d4:	b	31390 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>

000313d8 <myhtml_tree_template_insertion_init@@Base>:
   313d8:	strd	r4, [sp, #-16]!
   313dc:	str	r6, [sp, #8]
   313e0:	str	lr, [sp, #12]
   313e4:	mov	r5, r0
   313e8:	mov	r0, #12
   313ec:	bl	10c28 <mycore_malloc@plt>
   313f0:	mov	r4, r0
   313f4:	mov	r3, #0
   313f8:	str	r3, [r0, #4]
   313fc:	mov	r3, #1024	; 0x400
   31400:	str	r3, [r0, #8]
   31404:	mov	r0, #4096	; 0x1000
   31408:	bl	10c28 <mycore_malloc@plt>
   3140c:	str	r0, [r4]
   31410:	str	r4, [r5, #140]	; 0x8c
   31414:	mov	r0, r4
   31418:	ldrd	r4, [sp]
   3141c:	ldr	r6, [sp, #8]
   31420:	add	sp, sp, #12
   31424:	pop	{pc}		; (ldr pc, [sp], #4)

00031428 <myhtml_tree_template_insertion_clean@@Base>:
   31428:	ldr	r3, [r0, #140]	; 0x8c
   3142c:	mov	r2, #0
   31430:	str	r2, [r3, #4]
   31434:	bx	lr

00031438 <myhtml_tree_template_insertion_destroy@@Base>:
   31438:	ldr	r3, [r0, #140]	; 0x8c
   3143c:	cmp	r3, #0
   31440:	beq	31484 <myhtml_tree_template_insertion_destroy@@Base+0x4c>
   31444:	str	r4, [sp, #-8]!
   31448:	str	lr, [sp, #4]
   3144c:	mov	r4, r0
   31450:	ldr	r0, [r3]
   31454:	cmp	r0, #0
   31458:	beq	3146c <myhtml_tree_template_insertion_destroy@@Base+0x34>
   3145c:	bl	10d60 <mycore_free@plt>
   31460:	ldr	r3, [r4, #140]	; 0x8c
   31464:	cmp	r3, #0
   31468:	beq	31474 <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   3146c:	mov	r0, r3
   31470:	bl	10d60 <mycore_free@plt>
   31474:	mov	r0, #0
   31478:	ldr	r4, [sp]
   3147c:	add	sp, sp, #4
   31480:	pop	{pc}		; (ldr pc, [sp], #4)
   31484:	mov	r0, #0
   31488:	bx	lr

0003148c <myhtml_tree_template_insertion_append@@Base>:
   3148c:	strd	r4, [sp, #-16]!
   31490:	str	r6, [sp, #8]
   31494:	str	lr, [sp, #12]
   31498:	mov	r5, r1
   3149c:	ldr	r4, [r0, #140]	; 0x8c
   314a0:	ldr	r1, [r4, #8]
   314a4:	ldr	r3, [r4, #4]
   314a8:	cmp	r3, r1
   314ac:	bcs	314d8 <myhtml_tree_template_insertion_append@@Base+0x4c>
   314b0:	ldr	r2, [r4, #4]
   314b4:	ldr	r3, [r4]
   314b8:	str	r5, [r3, r2, lsl #2]
   314bc:	ldr	r3, [r4, #4]
   314c0:	add	r3, r3, #1
   314c4:	str	r3, [r4, #4]
   314c8:	ldrd	r4, [sp]
   314cc:	ldr	r6, [sp, #8]
   314d0:	add	sp, sp, #12
   314d4:	pop	{pc}		; (ldr pc, [sp], #4)
   314d8:	lsl	r3, r1, #1
   314dc:	str	r3, [r4, #8]
   314e0:	lsl	r1, r1, #3
   314e4:	ldr	r0, [r4]
   314e8:	bl	fb84 <mycore_realloc@plt>
   314ec:	cmp	r0, #0
   314f0:	strne	r0, [r4]
   314f4:	b	314b0 <myhtml_tree_template_insertion_append@@Base+0x24>

000314f8 <myhtml_tree_template_insertion_pop@@Base>:
   314f8:	ldr	r2, [r0, #140]	; 0x8c
   314fc:	ldr	r3, [r2, #4]
   31500:	cmp	r3, #0
   31504:	subne	r3, r3, #1
   31508:	strne	r3, [r2, #4]
   3150c:	bx	lr

00031510 <myhtml_tree_template_insertion_length@@Base>:
   31510:	ldr	r3, [r0, #140]	; 0x8c
   31514:	ldr	r0, [r3, #4]
   31518:	bx	lr

0003151c <myhtml_tree_token_list_init@@Base>:
   3151c:	str	r4, [sp, #-8]!
   31520:	str	lr, [sp, #4]
   31524:	mov	r0, #12
   31528:	bl	10c28 <mycore_malloc@plt>
   3152c:	mov	r4, r0
   31530:	mov	r3, #0
   31534:	str	r3, [r0, #4]
   31538:	mov	r3, #4096	; 0x1000
   3153c:	str	r3, [r0, #8]
   31540:	mov	r0, #16384	; 0x4000
   31544:	bl	10c28 <mycore_malloc@plt>
   31548:	str	r0, [r4]
   3154c:	mov	r0, r4
   31550:	ldr	r4, [sp]
   31554:	add	sp, sp, #4
   31558:	pop	{pc}		; (ldr pc, [sp], #4)

0003155c <myhtml_tree_token_list_clean@@Base>:
   3155c:	mov	r3, #0
   31560:	str	r3, [r0, #4]
   31564:	bx	lr

00031568 <myhtml_tree_clean@@Base>:
   31568:	strd	r4, [sp, #-16]!
   3156c:	str	r6, [sp, #8]
   31570:	str	lr, [sp, #12]
   31574:	mov	r4, r0
   31578:	ldr	r6, [r0]
   3157c:	ldr	r3, [r6, #20]
   31580:	cmp	r3, #0
   31584:	beq	315ac <myhtml_tree_clean@@Base+0x44>
   31588:	mov	r5, #0
   3158c:	ldr	r3, [r4, #144]	; 0x90
   31590:	ldr	r1, [r3, r5, lsl #2]
   31594:	ldr	r0, [r4, #4]
   31598:	bl	1067c <mchar_async_node_clean@plt>
   3159c:	add	r5, r5, #1
   315a0:	ldr	r3, [r6, #20]
   315a4:	cmp	r3, r5
   315a8:	bhi	3158c <myhtml_tree_clean@@Base+0x24>
   315ac:	ldr	r1, [r4, #48]	; 0x30
   315b0:	ldr	r0, [r4, #12]
   315b4:	bl	10814 <mcobject_async_node_clean@plt>
   315b8:	ldr	r3, [r4, #8]
   315bc:	ldr	r1, [r4, #40]	; 0x28
   315c0:	ldr	r0, [r3, #4]
   315c4:	bl	10814 <mcobject_async_node_clean@plt>
   315c8:	ldr	r3, [r4, #8]
   315cc:	ldr	r1, [r4, #44]	; 0x2c
   315d0:	ldr	r0, [r3, #8]
   315d4:	bl	10814 <mcobject_async_node_clean@plt>
   315d8:	ldr	r0, [r4, #20]
   315dc:	bl	10934 <mythread_queue_list_entry_clean@plt>
   315e0:	ldr	r3, [r4]
   315e4:	ldr	r1, [r4, #20]
   315e8:	ldr	r0, [r3, #4]
   315ec:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   315f0:	ldr	r3, [r4]
   315f4:	ldr	r1, [r4, #20]
   315f8:	ldr	r0, [r3]
   315fc:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   31600:	ldr	r0, [r4, #8]
   31604:	bl	10550 <myhtml_token_clean@plt>
   31608:	mov	r0, r4
   3160c:	bl	ff80 <myhtml_tree_node_create@plt>
   31610:	mov	r0, r4
   31614:	bl	ff80 <myhtml_tree_node_create@plt>
   31618:	str	r0, [r4, #84]	; 0x54
   3161c:	mov	r3, #0
   31620:	str	r3, [r4, #88]	; 0x58
   31624:	strb	r3, [r4, #108]	; 0x6c
   31628:	str	r3, [r4, #112]	; 0x70
   3162c:	str	r3, [r4, #116]	; 0x74
   31630:	str	r3, [r4, #120]	; 0x78
   31634:	str	r3, [r4, #96]	; 0x60
   31638:	str	r3, [r4, #100]	; 0x64
   3163c:	str	r3, [r4, #92]	; 0x5c
   31640:	str	r3, [r4, #104]	; 0x68
   31644:	str	r3, [r4, #160]	; 0xa0
   31648:	str	r3, [r4, #164]	; 0xa4
   3164c:	str	r3, [r4, #168]	; 0xa8
   31650:	str	r3, [r4, #172]	; 0xac
   31654:	str	r3, [r4, #176]	; 0xb0
   31658:	str	r3, [r4, #60]	; 0x3c
   3165c:	mov	r2, #2
   31660:	str	r2, [r4, #180]	; 0xb4
   31664:	strb	r3, [r4, #188]	; 0xbc
   31668:	str	r3, [r4, #156]	; 0x9c
   3166c:	str	r3, [r4, #76]	; 0x4c
   31670:	str	r3, [r4, #80]	; 0x50
   31674:	str	r3, [r4, #192]	; 0xc0
   31678:	str	r3, [r4, #68]	; 0x44
   3167c:	str	r3, [r4, #152]	; 0x98
   31680:	str	r3, [r4, #196]	; 0xc4
   31684:	str	r3, [r4, #200]	; 0xc8
   31688:	str	r3, [r4, #204]	; 0xcc
   3168c:	ldr	r0, [r4, #148]	; 0x94
   31690:	bl	10400 <myhtml_stream_buffer_clean@plt>
   31694:	mov	r0, r4
   31698:	bl	107b4 <myhtml_tree_active_formatting_clean@plt>
   3169c:	mov	r0, r4
   316a0:	bl	10db4 <myhtml_tree_open_elements_clean@plt>
   316a4:	ldr	r0, [r4, #132]	; 0x84
   316a8:	bl	10220 <myhtml_tree_list_clean@plt>
   316ac:	ldr	r0, [r4, #136]	; 0x88
   316b0:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   316b4:	mov	r0, r4
   316b8:	bl	103b8 <myhtml_tree_template_insertion_clean@plt>
   316bc:	ldr	r0, [r4, #72]	; 0x48
   316c0:	bl	10f04 <mcobject_clean@plt>
   316c4:	ldr	r0, [r4, #28]
   316c8:	bl	1100c <myhtml_tag_clean@plt>
   316cc:	ldr	r0, [r4, #24]
   316d0:	bl	fd04 <mythread_queue_clean@plt>
   316d4:	ldr	r0, [r4, #8]
   316d8:	ldr	r1, [r0, #16]
   316dc:	bl	10898 <myhtml_token_attr_create@plt>
   316e0:	str	r0, [r4, #56]	; 0x38
   316e4:	ldrd	r4, [sp]
   316e8:	ldr	r6, [sp, #8]
   316ec:	add	sp, sp, #12
   316f0:	pop	{pc}		; (ldr pc, [sp], #4)

000316f4 <myhtml_tree_init@@Base>:
   316f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   316f8:	strd	r6, [sp, #8]
   316fc:	str	r8, [sp, #16]
   31700:	str	lr, [sp, #20]
   31704:	sub	sp, sp, #8
   31708:	mov	r4, r0
   3170c:	mov	r5, r1
   31710:	mov	r3, #0
   31714:	str	r3, [sp, #4]
   31718:	str	r1, [r0]
   3171c:	mov	r1, #512	; 0x200
   31720:	bl	10f94 <myhtml_token_create@plt>
   31724:	str	r0, [r4, #8]
   31728:	cmp	r0, #0
   3172c:	beq	3198c <myhtml_tree_init@@Base+0x298>
   31730:	mov	r3, #0
   31734:	str	r3, [r4, #208]	; 0xd0
   31738:	str	r3, [r4, #148]	; 0x94
   3173c:	str	r3, [r4, #184]	; 0xb8
   31740:	str	r3, [r4, #36]	; 0x24
   31744:	str	r3, [r4, #220]	; 0xdc
   31748:	str	r3, [r4, #224]	; 0xe0
   3174c:	str	r3, [r4, #228]	; 0xe4
   31750:	str	r3, [r4, #232]	; 0xe8
   31754:	str	r3, [r4, #236]	; 0xec
   31758:	str	r3, [r4, #240]	; 0xf0
   3175c:	str	r3, [r4, #244]	; 0xf4
   31760:	str	r3, [r4, #248]	; 0xf8
   31764:	ldr	r0, [sp, #4]
   31768:	cmp	r0, r3
   3176c:	beq	31788 <myhtml_tree_init@@Base+0x94>
   31770:	add	sp, sp, #8
   31774:	ldrd	r4, [sp]
   31778:	ldrd	r6, [sp, #8]
   3177c:	ldr	r8, [sp, #16]
   31780:	add	sp, sp, #20
   31784:	pop	{pc}		; (ldr pc, [sp], #4)
   31788:	bl	10a18 <mythread_queue_create@plt>
   3178c:	str	r0, [r4, #24]
   31790:	cmp	r0, #0
   31794:	moveq	r0, #2
   31798:	beq	31770 <myhtml_tree_init@@Base+0x7c>
   3179c:	movw	r1, #9182	; 0x23de
   317a0:	bl	10640 <mythread_queue_init@plt>
   317a4:	str	r0, [sp, #4]
   317a8:	cmp	r0, #0
   317ac:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   317b0:	bl	ffbc <mcobject_create@plt>
   317b4:	str	r0, [r4, #72]	; 0x48
   317b8:	cmp	r0, #0
   317bc:	movweq	r0, #37368	; 0x91f8
   317c0:	beq	31770 <myhtml_tree_init@@Base+0x7c>
   317c4:	mov	r2, #24
   317c8:	mov	r1, #256	; 0x100
   317cc:	bl	1070c <mcobject_init@plt>
   317d0:	str	r0, [sp, #4]
   317d4:	cmp	r0, #0
   317d8:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   317dc:	bl	fcf8 <mcobject_async_create@plt>
   317e0:	str	r0, [r4, #12]
   317e4:	cmp	r0, #0
   317e8:	movweq	r0, #37365	; 0x91f5
   317ec:	beq	31770 <myhtml_tree_init@@Base+0x7c>
   317f0:	mov	r3, #44	; 0x2c
   317f4:	mov	r2, #1024	; 0x400
   317f8:	mov	r1, #128	; 0x80
   317fc:	bl	fc20 <mcobject_async_init@plt>
   31800:	str	r0, [sp]
   31804:	cmp	r0, #0
   31808:	movwne	r0, #37366	; 0x91f6
   3180c:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   31810:	bl	10100 <mchar_async_create@plt>
   31814:	str	r0, [r4, #4]
   31818:	mov	r0, r4
   3181c:	bl	10a54 <myhtml_tree_active_formatting_init@plt>
   31820:	str	r0, [r4, #124]	; 0x7c
   31824:	mov	r0, r4
   31828:	bl	10b44 <myhtml_tree_open_elements_init@plt>
   3182c:	str	r0, [r4, #128]	; 0x80
   31830:	bl	107f0 <myhtml_tree_list_init@plt>
   31834:	str	r0, [r4, #132]	; 0x84
   31838:	bl	1094c <myhtml_tree_token_list_init@plt>
   3183c:	str	r0, [r4, #136]	; 0x88
   31840:	mov	r0, r4
   31844:	bl	10c70 <myhtml_tree_template_insertion_init@plt>
   31848:	str	r0, [r4, #140]	; 0x8c
   3184c:	ldr	r0, [r4, #4]
   31850:	cmp	r0, #0
   31854:	moveq	r0, #2
   31858:	beq	31770 <myhtml_tree_init@@Base+0x7c>
   3185c:	mov	r2, #20480	; 0x5000
   31860:	mov	r1, #128	; 0x80
   31864:	bl	1043c <mchar_async_init@plt>
   31868:	str	r0, [sp, #4]
   3186c:	cmp	r0, #0
   31870:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   31874:	mov	r1, sp
   31878:	ldr	r0, [r4, #12]
   3187c:	bl	10a24 <mcobject_async_node_add@plt>
   31880:	str	r0, [r4, #48]	; 0x30
   31884:	ldr	r3, [sp]
   31888:	cmp	r3, #0
   3188c:	movwne	r0, #37367	; 0x91f7
   31890:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   31894:	ldr	r3, [r4, #8]
   31898:	mov	r1, sp
   3189c:	ldr	r0, [r3, #4]
   318a0:	bl	10a24 <mcobject_async_node_add@plt>
   318a4:	str	r0, [r4, #40]	; 0x28
   318a8:	ldr	r3, [sp]
   318ac:	cmp	r3, #0
   318b0:	movwne	r0, #37367	; 0x91f7
   318b4:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   318b8:	ldr	r3, [r4, #8]
   318bc:	mov	r1, sp
   318c0:	ldr	r0, [r3, #8]
   318c4:	bl	10a24 <mcobject_async_node_add@plt>
   318c8:	str	r0, [r4, #44]	; 0x2c
   318cc:	ldr	r6, [sp]
   318d0:	cmp	r6, #0
   318d4:	movwne	r0, #37367	; 0x91f7
   318d8:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   318dc:	mov	r1, #4
   318e0:	ldr	r0, [r5, #20]
   318e4:	bl	feb4 <mycore_calloc@plt>
   318e8:	str	r0, [r4, #144]	; 0x90
   318ec:	cmp	r0, #0
   318f0:	beq	31994 <myhtml_tree_init@@Base+0x2a0>
   318f4:	ldr	r3, [r5, #20]
   318f8:	cmp	r3, #0
   318fc:	beq	31934 <myhtml_tree_init@@Base+0x240>
   31900:	add	r8, sp, #4
   31904:	ldr	r7, [r4, #144]	; 0x90
   31908:	mov	r1, r8
   3190c:	ldr	r0, [r4, #4]
   31910:	bl	1022c <mchar_async_node_add@plt>
   31914:	str	r0, [r7, r6, lsl #2]
   31918:	ldr	r0, [sp, #4]
   3191c:	cmp	r0, #0
   31920:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   31924:	add	r6, r6, #1
   31928:	ldr	r3, [r5, #20]
   3192c:	cmp	r3, r6
   31930:	bhi	31904 <myhtml_tree_init@@Base+0x210>
   31934:	ldr	r3, [r4, #144]	; 0x90
   31938:	ldr	r3, [r3]
   3193c:	str	r3, [r4, #52]	; 0x34
   31940:	bl	fd34 <mcsync_create@plt>
   31944:	str	r0, [r4, #16]
   31948:	cmp	r0, #0
   3194c:	moveq	r0, #2
   31950:	beq	31770 <myhtml_tree_init@@Base+0x7c>
   31954:	bl	107fc <mcsync_init@plt>
   31958:	cmp	r0, #0
   3195c:	movne	r0, #2
   31960:	bne	31770 <myhtml_tree_init@@Base+0x7c>
   31964:	bl	10cc4 <myhtml_tag_create@plt>
   31968:	mov	r1, r0
   3196c:	str	r0, [r4, #28]
   31970:	mov	r0, r4
   31974:	bl	10af0 <myhtml_tag_init@plt>
   31978:	str	r0, [sp, #4]
   3197c:	mov	r0, r4
   31980:	bl	10664 <myhtml_tree_clean@plt>
   31984:	ldr	r0, [sp, #4]
   31988:	b	31770 <myhtml_tree_init@@Base+0x7c>
   3198c:	movw	r0, #37164	; 0x912c
   31990:	b	31770 <myhtml_tree_init@@Base+0x7c>
   31994:	mov	r0, #2
   31998:	b	31770 <myhtml_tree_init@@Base+0x7c>

0003199c <myhtml_tree_clean_all@@Base>:
   3199c:	str	r4, [sp, #-8]!
   319a0:	str	lr, [sp, #4]
   319a4:	mov	r4, r0
   319a8:	ldr	r0, [r0, #12]
   319ac:	bl	10fe8 <mcobject_async_clean@plt>
   319b0:	ldr	r0, [r4, #8]
   319b4:	bl	10550 <myhtml_token_clean@plt>
   319b8:	ldr	r0, [r4, #4]
   319bc:	bl	10b5c <mchar_async_clean@plt>
   319c0:	mov	r0, r4
   319c4:	bl	ff80 <myhtml_tree_node_create@plt>
   319c8:	mov	r0, r4
   319cc:	bl	ff80 <myhtml_tree_node_create@plt>
   319d0:	str	r0, [r4, #84]	; 0x54
   319d4:	mov	r3, #0
   319d8:	str	r3, [r4, #88]	; 0x58
   319dc:	strb	r3, [r4, #108]	; 0x6c
   319e0:	str	r3, [r4, #112]	; 0x70
   319e4:	str	r3, [r4, #116]	; 0x74
   319e8:	str	r3, [r4, #120]	; 0x78
   319ec:	str	r3, [r4, #96]	; 0x60
   319f0:	str	r3, [r4, #100]	; 0x64
   319f4:	str	r3, [r4, #92]	; 0x5c
   319f8:	str	r3, [r4, #104]	; 0x68
   319fc:	str	r3, [r4, #160]	; 0xa0
   31a00:	str	r3, [r4, #164]	; 0xa4
   31a04:	str	r3, [r4, #168]	; 0xa8
   31a08:	str	r3, [r4, #172]	; 0xac
   31a0c:	str	r3, [r4, #176]	; 0xb0
   31a10:	str	r3, [r4, #60]	; 0x3c
   31a14:	mov	r2, #2
   31a18:	str	r2, [r4, #180]	; 0xb4
   31a1c:	strb	r3, [r4, #188]	; 0xbc
   31a20:	str	r3, [r4, #156]	; 0x9c
   31a24:	str	r3, [r4, #76]	; 0x4c
   31a28:	str	r3, [r4, #80]	; 0x50
   31a2c:	str	r3, [r4, #192]	; 0xc0
   31a30:	str	r3, [r4, #68]	; 0x44
   31a34:	str	r3, [r4, #152]	; 0x98
   31a38:	str	r3, [r4, #196]	; 0xc4
   31a3c:	str	r3, [r4, #200]	; 0xc8
   31a40:	str	r3, [r4, #204]	; 0xcc
   31a44:	ldr	r0, [r4, #148]	; 0x94
   31a48:	bl	10400 <myhtml_stream_buffer_clean@plt>
   31a4c:	mov	r0, r4
   31a50:	bl	107b4 <myhtml_tree_active_formatting_clean@plt>
   31a54:	mov	r0, r4
   31a58:	bl	10db4 <myhtml_tree_open_elements_clean@plt>
   31a5c:	ldr	r0, [r4, #132]	; 0x84
   31a60:	bl	10220 <myhtml_tree_list_clean@plt>
   31a64:	ldr	r0, [r4, #136]	; 0x88
   31a68:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   31a6c:	mov	r0, r4
   31a70:	bl	103b8 <myhtml_tree_template_insertion_clean@plt>
   31a74:	ldr	r0, [r4, #72]	; 0x48
   31a78:	bl	10f04 <mcobject_clean@plt>
   31a7c:	ldr	r0, [r4, #28]
   31a80:	bl	1100c <myhtml_tag_clean@plt>
   31a84:	ldr	r0, [r4, #20]
   31a88:	bl	10934 <mythread_queue_list_entry_clean@plt>
   31a8c:	ldr	r3, [r4]
   31a90:	ldr	r1, [r4, #20]
   31a94:	ldr	r0, [r3, #4]
   31a98:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   31a9c:	ldr	r3, [r4]
   31aa0:	ldr	r1, [r4, #20]
   31aa4:	ldr	r0, [r3]
   31aa8:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   31aac:	ldr	r0, [r4, #8]
   31ab0:	ldr	r1, [r0, #16]
   31ab4:	bl	10898 <myhtml_token_attr_create@plt>
   31ab8:	str	r0, [r4, #56]	; 0x38
   31abc:	ldr	r4, [sp]
   31ac0:	add	sp, sp, #4
   31ac4:	pop	{pc}		; (ldr pc, [sp], #4)

00031ac8 <myhtml_tree_token_list_destroy@@Base>:
   31ac8:	strd	r4, [sp, #-16]!
   31acc:	str	r6, [sp, #8]
   31ad0:	str	lr, [sp, #12]
   31ad4:	subs	r4, r0, #0
   31ad8:	beq	31af8 <myhtml_tree_token_list_destroy@@Base+0x30>
   31adc:	mov	r5, r1
   31ae0:	ldr	r0, [r4]
   31ae4:	cmp	r0, #0
   31ae8:	beq	31af0 <myhtml_tree_token_list_destroy@@Base+0x28>
   31aec:	bl	10d60 <mycore_free@plt>
   31af0:	cmp	r5, #0
   31af4:	bne	31b0c <myhtml_tree_token_list_destroy@@Base+0x44>
   31af8:	mov	r0, r4
   31afc:	ldrd	r4, [sp]
   31b00:	ldr	r6, [sp, #8]
   31b04:	add	sp, sp, #12
   31b08:	pop	{pc}		; (ldr pc, [sp], #4)
   31b0c:	mov	r0, r4
   31b10:	bl	10d60 <mycore_free@plt>
   31b14:	mov	r4, #0
   31b18:	b	31af8 <myhtml_tree_token_list_destroy@@Base+0x30>

00031b1c <myhtml_tree_token_list_append@@Base>:
   31b1c:	strd	r4, [sp, #-16]!
   31b20:	str	r6, [sp, #8]
   31b24:	str	lr, [sp, #12]
   31b28:	mov	r4, r0
   31b2c:	mov	r5, r1
   31b30:	ldr	r1, [r0, #8]
   31b34:	ldr	r3, [r0, #4]
   31b38:	cmp	r3, r1
   31b3c:	bcs	31b68 <myhtml_tree_token_list_append@@Base+0x4c>
   31b40:	ldr	r2, [r4, #4]
   31b44:	ldr	r3, [r4]
   31b48:	str	r5, [r3, r2, lsl #2]
   31b4c:	ldr	r3, [r4, #4]
   31b50:	add	r3, r3, #1
   31b54:	str	r3, [r4, #4]
   31b58:	ldrd	r4, [sp]
   31b5c:	ldr	r6, [sp, #8]
   31b60:	add	sp, sp, #12
   31b64:	pop	{pc}		; (ldr pc, [sp], #4)
   31b68:	lsl	r3, r1, #1
   31b6c:	str	r3, [r0, #8]
   31b70:	lsl	r1, r1, #3
   31b74:	ldr	r0, [r0]
   31b78:	bl	fb84 <mycore_realloc@plt>
   31b7c:	cmp	r0, #0
   31b80:	strne	r0, [r4]
   31b84:	b	31b40 <myhtml_tree_token_list_append@@Base+0x24>

00031b88 <myhtml_tree_token_list_append_after_index@@Base>:
   31b88:	strd	r4, [sp, #-16]!
   31b8c:	str	r6, [sp, #8]
   31b90:	str	lr, [sp, #12]
   31b94:	mov	r4, r0
   31b98:	mov	r6, r1
   31b9c:	mov	r5, r2
   31ba0:	ldr	r1, [r0, #8]
   31ba4:	ldr	r3, [r0, #4]
   31ba8:	cmp	r3, r1
   31bac:	bcs	31c08 <myhtml_tree_token_list_append_after_index@@Base+0x80>
   31bb0:	ldr	r3, [r4]
   31bb4:	ldr	r2, [r4, #4]
   31bb8:	cmp	r5, r2
   31bbc:	bls	31be0 <myhtml_tree_token_list_append_after_index@@Base+0x58>
   31bc0:	add	r3, r3, r5, lsl #2
   31bc4:	mov	r2, r5
   31bc8:	add	r2, r2, #1
   31bcc:	ldr	r1, [r3]
   31bd0:	str	r1, [r3, #4]!
   31bd4:	ldr	r1, [r4, #4]
   31bd8:	cmp	r2, r1
   31bdc:	bhi	31bc8 <myhtml_tree_token_list_append_after_index@@Base+0x40>
   31be0:	add	r5, r5, #1
   31be4:	ldr	r3, [r4]
   31be8:	str	r6, [r3, r5, lsl #2]
   31bec:	ldr	r3, [r4, #4]
   31bf0:	add	r3, r3, #1
   31bf4:	str	r3, [r4, #4]
   31bf8:	ldrd	r4, [sp]
   31bfc:	ldr	r6, [sp, #8]
   31c00:	add	sp, sp, #12
   31c04:	pop	{pc}		; (ldr pc, [sp], #4)
   31c08:	lsl	r3, r1, #1
   31c0c:	str	r3, [r0, #8]
   31c10:	lsl	r1, r1, #3
   31c14:	ldr	r0, [r0]
   31c18:	bl	fb84 <mycore_realloc@plt>
   31c1c:	cmp	r0, #0
   31c20:	strne	r0, [r4]
   31c24:	b	31bb0 <myhtml_tree_token_list_append_after_index@@Base+0x28>

00031c28 <myhtml_tree_token_list_current_node@@Base>:
   31c28:	ldr	r3, [r0, #4]
   31c2c:	cmp	r3, #0
   31c30:	subne	r3, r3, #-1073741823	; 0xc0000001
   31c34:	ldrne	r2, [r0]
   31c38:	ldrne	r0, [r2, r3, lsl #2]
   31c3c:	moveq	r0, #0
   31c40:	bx	lr

00031c44 <myhtml_tree_tags_close_p@@Base>:
   31c44:	str	r4, [sp, #-8]!
   31c48:	str	lr, [sp, #4]
   31c4c:	mov	r4, r0
   31c50:	mov	r2, #1
   31c54:	mov	r1, #99	; 0x63
   31c58:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   31c5c:	mov	r0, r4
   31c60:	bl	105bc <myhtml_tree_current_node@plt>
   31c64:	mov	r1, #99	; 0x63
   31c68:	bl	10a3c <myhtml_is_html_node@plt>
   31c6c:	mov	r3, #0
   31c70:	mov	r2, #1
   31c74:	mov	r1, #99	; 0x63
   31c78:	mov	r0, r4
   31c7c:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   31c80:	ldr	r4, [sp]
   31c84:	add	sp, sp, #4
   31c88:	pop	{pc}		; (ldr pc, [sp], #4)

00031c8c <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   31c8c:	str	r4, [sp, #-8]!
   31c90:	str	lr, [sp, #4]
   31c94:	mov	r4, r0
   31c98:	mov	r2, #1
   31c9c:	bl	10c4c <myhtml_tree_node_insert_by_token@plt>
   31ca0:	ldr	r3, [r4, #168]	; 0xa8
   31ca4:	str	r3, [r4, #172]	; 0xac
   31ca8:	mov	r3, #7
   31cac:	str	r3, [r4, #168]	; 0xa8
   31cb0:	ldr	r4, [sp]
   31cb4:	add	sp, sp, #4
   31cb8:	pop	{pc}		; (ldr pc, [sp], #4)

00031cbc <myhtml_tree_clear_stack_back_table_context@@Base>:
   31cbc:	str	r4, [sp, #-8]!
   31cc0:	str	lr, [sp, #4]
   31cc4:	mov	r4, r0
   31cc8:	bl	105bc <myhtml_tree_current_node@plt>
   31ccc:	b	31ce0 <myhtml_tree_clear_stack_back_table_context@@Base+0x24>
   31cd0:	mov	r0, r4
   31cd4:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   31cd8:	mov	r0, r4
   31cdc:	bl	105bc <myhtml_tree_current_node@plt>
   31ce0:	ldr	r2, [r0, #4]
   31ce4:	cmp	r2, #125	; 0x7d
   31ce8:	cmpne	r2, #128	; 0x80
   31cec:	movne	r3, #1
   31cf0:	moveq	r3, #0
   31cf4:	cmp	r2, #65	; 0x41
   31cf8:	moveq	r3, #0
   31cfc:	andne	r3, r3, #1
   31d00:	cmp	r3, #0
   31d04:	bne	31cd0 <myhtml_tree_clear_stack_back_table_context@@Base+0x14>
   31d08:	ldr	r3, [r0, #8]
   31d0c:	cmp	r3, #1
   31d10:	bne	31cd0 <myhtml_tree_clear_stack_back_table_context@@Base+0x14>
   31d14:	ldr	r4, [sp]
   31d18:	add	sp, sp, #4
   31d1c:	pop	{pc}		; (ldr pc, [sp], #4)

00031d20 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   31d20:	str	r4, [sp, #-8]!
   31d24:	str	lr, [sp, #4]
   31d28:	mov	r4, r0
   31d2c:	bl	105bc <myhtml_tree_current_node@plt>
   31d30:	b	31d44 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x24>
   31d34:	mov	r0, r4
   31d38:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   31d3c:	mov	r0, r4
   31d40:	bl	105bc <myhtml_tree_current_node@plt>
   31d44:	ldr	r3, [r0, #4]
   31d48:	cmp	r3, #126	; 0x7e
   31d4c:	cmpne	r3, #132	; 0x84
   31d50:	movne	r2, #1
   31d54:	moveq	r2, #0
   31d58:	cmp	r3, #65	; 0x41
   31d5c:	moveq	r2, #0
   31d60:	andne	r2, r2, #1
   31d64:	bic	r3, r3, #2
   31d68:	cmp	r3, #128	; 0x80
   31d6c:	moveq	r3, #0
   31d70:	andne	r3, r2, #1
   31d74:	cmp	r3, #0
   31d78:	bne	31d34 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x14>
   31d7c:	ldr	r3, [r0, #8]
   31d80:	cmp	r3, #1
   31d84:	bne	31d34 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x14>
   31d88:	ldr	r4, [sp]
   31d8c:	add	sp, sp, #4
   31d90:	pop	{pc}		; (ldr pc, [sp], #4)

00031d94 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   31d94:	str	r4, [sp, #-8]!
   31d98:	str	lr, [sp, #4]
   31d9c:	mov	r4, r0
   31da0:	bl	105bc <myhtml_tree_current_node@plt>
   31da4:	b	31db8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x24>
   31da8:	mov	r0, r4
   31dac:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   31db0:	mov	r0, r4
   31db4:	bl	105bc <myhtml_tree_current_node@plt>
   31db8:	ldr	r2, [r0, #4]
   31dbc:	cmp	r2, #135	; 0x87
   31dc0:	cmpne	r2, #128	; 0x80
   31dc4:	movne	r3, #1
   31dc8:	moveq	r3, #0
   31dcc:	cmp	r2, #65	; 0x41
   31dd0:	moveq	r3, #0
   31dd4:	andne	r3, r3, #1
   31dd8:	cmp	r3, #0
   31ddc:	bne	31da8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x14>
   31de0:	ldr	r3, [r0, #8]
   31de4:	cmp	r3, #1
   31de8:	bne	31da8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x14>
   31dec:	ldr	r4, [sp]
   31df0:	add	sp, sp, #4
   31df4:	pop	{pc}		; (ldr pc, [sp], #4)

00031df8 <myhtml_tree_close_cell@@Base>:
   31df8:	strd	r4, [sp, #-16]!
   31dfc:	str	r6, [sp, #8]
   31e00:	str	lr, [sp, #12]
   31e04:	mov	r4, r0
   31e08:	mov	r5, r1
   31e0c:	mov	r2, #0
   31e10:	mov	r1, r2
   31e14:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   31e18:	mov	r0, r4
   31e1c:	bl	105bc <myhtml_tree_current_node@plt>
   31e20:	mov	r3, #0
   31e24:	ldr	r2, [r5, #8]
   31e28:	ldr	r1, [r5, #4]
   31e2c:	mov	r0, r4
   31e30:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   31e34:	mov	r0, r4
   31e38:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   31e3c:	mov	r3, #13
   31e40:	str	r3, [r4, #168]	; 0xa8
   31e44:	ldrd	r4, [sp]
   31e48:	ldr	r6, [sp, #8]
   31e4c:	add	sp, sp, #12
   31e50:	pop	{pc}		; (ldr pc, [sp], #4)

00031e54 <myhtml_tree_is_mathml_integration_point@@Base>:
   31e54:	ldr	r3, [r1, #8]
   31e58:	cmp	r3, #2
   31e5c:	beq	31e68 <myhtml_tree_is_mathml_integration_point@@Base+0x14>
   31e60:	mov	r0, #0
   31e64:	bx	lr
   31e68:	ldr	r3, [r1, #4]
   31e6c:	cmp	r3, #238	; 0xee
   31e70:	cmpne	r3, #227	; 0xe3
   31e74:	moveq	r0, #1
   31e78:	movne	r0, #0
   31e7c:	cmp	r3, #88	; 0x58
   31e80:	orreq	r0, r0, #1
   31e84:	sub	r3, r3, #231	; 0xe7
   31e88:	cmp	r3, #1
   31e8c:	orrls	r0, r0, #1
   31e90:	bx	lr

00031e94 <myhtml_tree_is_html_integration_point@@Base>:
   31e94:	ldr	r3, [r1, #8]
   31e98:	cmp	r3, #3
   31e9c:	beq	31eb0 <myhtml_tree_is_html_integration_point@@Base+0x1c>
   31ea0:	cmp	r3, #2
   31ea4:	beq	31ed0 <myhtml_tree_is_html_integration_point@@Base+0x3c>
   31ea8:	mov	r0, #0
   31eac:	bx	lr
   31eb0:	ldr	r3, [r1, #4]
   31eb4:	cmp	r3, #156	; 0x9c
   31eb8:	cmpne	r3, #189	; 0xbd
   31ebc:	moveq	r0, #1
   31ec0:	movne	r0, #0
   31ec4:	cmp	r3, #134	; 0x86
   31ec8:	orreq	r0, r0, #1
   31ecc:	bx	lr
   31ed0:	ldr	r3, [r1, #4]
   31ed4:	cmp	r3, #8
   31ed8:	beq	31ee4 <myhtml_tree_is_html_integration_point@@Base+0x50>
   31edc:	mov	r0, #0
   31ee0:	bx	lr
   31ee4:	ldr	r3, [r1, #32]
   31ee8:	cmp	r3, #0
   31eec:	beq	31fa4 <myhtml_tree_is_html_integration_point@@Base+0x110>
   31ef0:	ldr	r2, [r3, #48]	; 0x30
   31ef4:	tst	r2, #1
   31ef8:	beq	31f04 <myhtml_tree_is_html_integration_point@@Base+0x70>
   31efc:	mov	r0, #0
   31f00:	bx	lr
   31f04:	strd	r4, [sp, #-12]!
   31f08:	str	lr, [sp, #8]
   31f0c:	sub	sp, sp, #12
   31f10:	mov	r4, r1
   31f14:	mov	r5, r0
   31f18:	mov	r1, r3
   31f1c:	ldr	r0, [r0, #8]
   31f20:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   31f24:	mov	r3, #9
   31f28:	str	r3, [sp, #4]
   31f2c:	ldr	r3, [pc, #120]	; 31fac <myhtml_tree_is_html_integration_point@@Base+0x118>
   31f30:	add	r3, pc, r3
   31f34:	str	r3, [sp]
   31f38:	mov	r3, #8
   31f3c:	ldr	r2, [pc, #108]	; 31fb0 <myhtml_tree_is_html_integration_point@@Base+0x11c>
   31f40:	add	r2, pc, r2
   31f44:	ldr	r1, [r4, #32]
   31f48:	ldr	r0, [r5, #8]
   31f4c:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   31f50:	cmp	r0, #0
   31f54:	movne	r0, #1
   31f58:	beq	31f6c <myhtml_tree_is_html_integration_point@@Base+0xd8>
   31f5c:	add	sp, sp, #12
   31f60:	ldrd	r4, [sp]
   31f64:	add	sp, sp, #8
   31f68:	pop	{pc}		; (ldr pc, [sp], #4)
   31f6c:	mov	r3, #21
   31f70:	str	r3, [sp, #4]
   31f74:	ldr	r3, [pc, #56]	; 31fb4 <myhtml_tree_is_html_integration_point@@Base+0x120>
   31f78:	add	r3, pc, r3
   31f7c:	str	r3, [sp]
   31f80:	mov	r3, #8
   31f84:	ldr	r2, [pc, #44]	; 31fb8 <myhtml_tree_is_html_integration_point@@Base+0x124>
   31f88:	add	r2, pc, r2
   31f8c:	ldr	r1, [r4, #32]
   31f90:	ldr	r0, [r5, #8]
   31f94:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   31f98:	adds	r0, r0, #0
   31f9c:	movne	r0, #1
   31fa0:	b	31f5c <myhtml_tree_is_html_integration_point@@Base+0xc8>
   31fa4:	mov	r0, #0
   31fa8:	bx	lr
   31fac:	ldrdeq	pc, [ip], -r4
   31fb0:			; <UNDEFINED> instruction: 0x000cf8b8
   31fb4:	muleq	ip, r8, r8
   31fb8:	andeq	pc, ip, r0, ror r8	; <UNPREDICTABLE>

00031fbc <myhtml_tree_temp_tag_name_init@@Base>:
   31fbc:	str	r4, [sp, #-8]!
   31fc0:	str	lr, [sp, #4]
   31fc4:	mov	r4, r0
   31fc8:	mov	r0, #1024	; 0x400
   31fcc:	str	r0, [r4, #8]
   31fd0:	mov	r3, #0
   31fd4:	str	r3, [r4, #4]
   31fd8:	bl	10c28 <mycore_malloc@plt>
   31fdc:	str	r0, [r4]
   31fe0:	cmp	r0, #0
   31fe4:	movne	r0, #0
   31fe8:	moveq	r0, #2
   31fec:	ldr	r4, [sp]
   31ff0:	add	sp, sp, #4
   31ff4:	pop	{pc}		; (ldr pc, [sp], #4)

00031ff8 <myhtml_tree_temp_tag_name_clean@@Base>:
   31ff8:	mov	r3, #0
   31ffc:	str	r3, [r0, #4]
   32000:	bx	lr

00032004 <myhtml_tree_temp_tag_name_destroy@@Base>:
   32004:	strd	r4, [sp, #-16]!
   32008:	str	r6, [sp, #8]
   3200c:	str	lr, [sp, #12]
   32010:	subs	r4, r0, #0
   32014:	beq	3203c <myhtml_tree_temp_tag_name_destroy@@Base+0x38>
   32018:	mov	r5, r1
   3201c:	ldr	r0, [r4]
   32020:	cmp	r0, #0
   32024:	beq	32034 <myhtml_tree_temp_tag_name_destroy@@Base+0x30>
   32028:	bl	10d60 <mycore_free@plt>
   3202c:	mov	r3, #0
   32030:	str	r3, [r4]
   32034:	cmp	r5, #0
   32038:	bne	32050 <myhtml_tree_temp_tag_name_destroy@@Base+0x4c>
   3203c:	mov	r0, r4
   32040:	ldrd	r4, [sp]
   32044:	ldr	r6, [sp, #8]
   32048:	add	sp, sp, #12
   3204c:	pop	{pc}		; (ldr pc, [sp], #4)
   32050:	mov	r0, r4
   32054:	bl	10d60 <mycore_free@plt>
   32058:	mov	r4, #0
   3205c:	b	3203c <myhtml_tree_temp_tag_name_destroy@@Base+0x38>

00032060 <myhtml_tree_destroy@@Base>:
   32060:	str	r4, [sp, #-8]!
   32064:	str	lr, [sp, #4]
   32068:	subs	r4, r0, #0
   3206c:	beq	32144 <myhtml_tree_destroy@@Base+0xe4>
   32070:	ldr	r0, [r4, #28]
   32074:	bl	10dd8 <myhtml_tag_destroy@plt>
   32078:	str	r0, [r4, #28]
   3207c:	mov	r0, r4
   32080:	bl	1007c <myhtml_tree_active_formatting_destroy@plt>
   32084:	str	r0, [r4, #124]	; 0x7c
   32088:	mov	r0, r4
   3208c:	bl	10c7c <myhtml_tree_open_elements_destroy@plt>
   32090:	str	r0, [r4, #128]	; 0x80
   32094:	mov	r1, #1
   32098:	ldr	r0, [r4, #132]	; 0x84
   3209c:	bl	10688 <myhtml_tree_list_destroy@plt>
   320a0:	str	r0, [r4, #132]	; 0x84
   320a4:	mov	r1, #1
   320a8:	ldr	r0, [r4, #136]	; 0x88
   320ac:	bl	fc14 <myhtml_tree_token_list_destroy@plt>
   320b0:	str	r0, [r4, #136]	; 0x88
   320b4:	mov	r0, r4
   320b8:	bl	10dcc <myhtml_tree_template_insertion_destroy@plt>
   320bc:	str	r0, [r4, #140]	; 0x8c
   320c0:	mov	r1, #1
   320c4:	ldr	r0, [r4, #16]
   320c8:	bl	10154 <mcsync_destroy@plt>
   320cc:	str	r0, [r4, #16]
   320d0:	mov	r1, #1
   320d4:	ldr	r0, [r4, #12]
   320d8:	bl	10ab4 <mcobject_async_destroy@plt>
   320dc:	str	r0, [r4, #12]
   320e0:	ldr	r0, [r4, #8]
   320e4:	bl	10718 <myhtml_token_destroy@plt>
   320e8:	str	r0, [r4, #8]
   320ec:	mov	r1, #1
   320f0:	ldr	r0, [r4, #4]
   320f4:	bl	10d3c <mchar_async_destroy@plt>
   320f8:	str	r0, [r4, #4]
   320fc:	mov	r1, #1
   32100:	ldr	r0, [r4, #148]	; 0x94
   32104:	bl	fcc8 <myhtml_stream_buffer_destroy@plt>
   32108:	str	r0, [r4, #148]	; 0x94
   3210c:	ldr	r0, [r4, #24]
   32110:	bl	10268 <mythread_queue_destroy@plt>
   32114:	str	r0, [r4, #24]
   32118:	mov	r1, #1
   3211c:	ldr	r0, [r4, #72]	; 0x48
   32120:	bl	fd70 <mcobject_destroy@plt>
   32124:	str	r0, [r4, #72]	; 0x48
   32128:	mov	r1, #0
   3212c:	add	r0, r4, #208	; 0xd0
   32130:	bl	108d4 <myhtml_tree_temp_tag_name_destroy@plt>
   32134:	ldr	r0, [r4, #144]	; 0x90
   32138:	bl	10d60 <mycore_free@plt>
   3213c:	mov	r0, r4
   32140:	bl	10d60 <mycore_free@plt>
   32144:	mov	r0, #0
   32148:	ldr	r4, [sp]
   3214c:	add	sp, sp, #4
   32150:	pop	{pc}		; (ldr pc, [sp], #4)

00032154 <myhtml_tree_temp_tag_name_append_one@@Base>:
   32154:	strd	r4, [sp, #-16]!
   32158:	str	r6, [sp, #8]
   3215c:	str	lr, [sp, #12]
   32160:	mov	r4, r0
   32164:	mov	r6, r1
   32168:	ldr	r1, [r0, #8]
   3216c:	ldr	r3, [r0, #4]
   32170:	cmp	r3, r1
   32174:	bcs	321a4 <myhtml_tree_temp_tag_name_append_one@@Base+0x50>
   32178:	ldr	r2, [r4]
   3217c:	ldr	r3, [r4, #4]
   32180:	strb	r6, [r2, r3]
   32184:	ldr	r3, [r4, #4]
   32188:	add	r3, r3, #1
   3218c:	str	r3, [r4, #4]
   32190:	mov	r0, #0
   32194:	ldrd	r4, [sp]
   32198:	ldr	r6, [sp, #8]
   3219c:	add	sp, sp, #12
   321a0:	pop	{pc}		; (ldr pc, [sp], #4)
   321a4:	lsl	r5, r1, #1
   321a8:	mov	r1, r5
   321ac:	ldr	r0, [r0]
   321b0:	bl	fb84 <mycore_realloc@plt>
   321b4:	cmp	r0, #0
   321b8:	beq	321c8 <myhtml_tree_temp_tag_name_append_one@@Base+0x74>
   321bc:	str	r5, [r4, #8]
   321c0:	str	r0, [r4]
   321c4:	b	32178 <myhtml_tree_temp_tag_name_append_one@@Base+0x24>
   321c8:	mov	r0, #2
   321cc:	b	32194 <myhtml_tree_temp_tag_name_append_one@@Base+0x40>

000321d0 <myhtml_tree_temp_tag_name_append@@Base>:
   321d0:	ldr	r3, [r0]
   321d4:	cmp	r3, #0
   321d8:	cmpne	r2, #0
   321dc:	beq	3226c <myhtml_tree_temp_tag_name_append@@Base+0x9c>
   321e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   321e4:	strd	r6, [sp, #8]
   321e8:	str	r8, [sp, #16]
   321ec:	str	lr, [sp, #20]
   321f0:	mov	r5, r2
   321f4:	mov	r6, r1
   321f8:	mov	r4, r0
   321fc:	ldr	r1, [r0, #8]
   32200:	ldr	r2, [r0, #4]
   32204:	add	r2, r5, r2
   32208:	cmp	r2, r1
   3220c:	bcc	32230 <myhtml_tree_temp_tag_name_append@@Base+0x60>
   32210:	add	r7, r5, r1, lsl #1
   32214:	mov	r1, r7
   32218:	mov	r0, r3
   3221c:	bl	fb84 <mycore_realloc@plt>
   32220:	cmp	r0, #0
   32224:	beq	32274 <myhtml_tree_temp_tag_name_append@@Base+0xa4>
   32228:	str	r7, [r4, #8]
   3222c:	str	r0, [r4]
   32230:	ldr	r0, [r4]
   32234:	ldr	r3, [r4, #4]
   32238:	mov	r2, r5
   3223c:	mov	r1, r6
   32240:	add	r0, r0, r3
   32244:	bl	fefc <memcpy@plt>
   32248:	ldr	r3, [r4, #4]
   3224c:	add	r5, r3, r5
   32250:	str	r5, [r4, #4]
   32254:	mov	r0, #0
   32258:	ldrd	r4, [sp]
   3225c:	ldrd	r6, [sp, #8]
   32260:	ldr	r8, [sp, #16]
   32264:	add	sp, sp, #20
   32268:	pop	{pc}		; (ldr pc, [sp], #4)
   3226c:	mov	r0, #0
   32270:	bx	lr
   32274:	mov	r0, #2
   32278:	b	32258 <myhtml_tree_temp_tag_name_append@@Base+0x88>

0003227c <myhtml_tree_wait_for_last_done_token@@Base>:
   3227c:	strd	r4, [sp, #-16]!
   32280:	str	r6, [sp, #8]
   32284:	str	lr, [sp, #12]
   32288:	mov	r4, r0
   3228c:	mov	r5, r1
   32290:	ldr	r3, [r0, #152]	; 0x98
   32294:	cmp	r1, r3
   32298:	beq	322b8 <myhtml_tree_wait_for_last_done_token@@Base+0x3c>
   3229c:	ldr	r3, [r4]
   322a0:	ldr	r3, [r3]
   322a4:	ldr	r0, [r3, #24]
   322a8:	bl	10040 <mythread_nanosleep_sleep@plt>
   322ac:	ldr	r3, [r4, #152]	; 0x98
   322b0:	cmp	r3, r5
   322b4:	bne	3229c <myhtml_tree_wait_for_last_done_token@@Base+0x20>
   322b8:	ldrd	r4, [sp]
   322bc:	ldr	r6, [sp, #8]
   322c0:	add	sp, sp, #12
   322c4:	pop	{pc}		; (ldr pc, [sp], #4)

000322c8 <myhtml_tree_special_list_init@@Base>:
   322c8:	str	r4, [sp, #-8]!
   322cc:	str	lr, [sp, #4]
   322d0:	mov	r4, r0
   322d4:	mov	r3, #1024	; 0x400
   322d8:	str	r3, [r0, #8]
   322dc:	mov	r3, #0
   322e0:	str	r3, [r0, #4]
   322e4:	mov	r0, #8192	; 0x2000
   322e8:	bl	10c28 <mycore_malloc@plt>
   322ec:	str	r0, [r4]
   322f0:	cmp	r0, #0
   322f4:	movne	r0, #0
   322f8:	moveq	r0, #2
   322fc:	ldr	r4, [sp]
   32300:	add	sp, sp, #4
   32304:	pop	{pc}		; (ldr pc, [sp], #4)

00032308 <myhtml_tree_special_list_clean@@Base>:
   32308:	mov	r3, #0
   3230c:	str	r3, [r0, #4]
   32310:	bx	lr

00032314 <myhtml_tree_special_list_destroy@@Base>:
   32314:	strd	r4, [sp, #-16]!
   32318:	str	r6, [sp, #8]
   3231c:	str	lr, [sp, #12]
   32320:	subs	r4, r0, #0
   32324:	beq	3234c <myhtml_tree_special_list_destroy@@Base+0x38>
   32328:	mov	r5, r1
   3232c:	ldr	r0, [r4]
   32330:	cmp	r0, #0
   32334:	beq	32344 <myhtml_tree_special_list_destroy@@Base+0x30>
   32338:	bl	10d60 <mycore_free@plt>
   3233c:	mov	r3, #0
   32340:	str	r3, [r4]
   32344:	cmp	r5, #0
   32348:	bne	32360 <myhtml_tree_special_list_destroy@@Base+0x4c>
   3234c:	mov	r0, r4
   32350:	ldrd	r4, [sp]
   32354:	ldr	r6, [sp, #8]
   32358:	add	sp, sp, #12
   3235c:	pop	{pc}		; (ldr pc, [sp], #4)
   32360:	mov	r0, r4
   32364:	bl	10d60 <mycore_free@plt>
   32368:	mov	r4, #0
   3236c:	b	3234c <myhtml_tree_special_list_destroy@@Base+0x38>

00032370 <myhtml_tree_special_list_append@@Base>:
   32370:	strd	r4, [sp, #-24]!	; 0xffffffe8
   32374:	strd	r6, [sp, #8]
   32378:	str	r8, [sp, #16]
   3237c:	str	lr, [sp, #20]
   32380:	mov	r4, r0
   32384:	mov	r5, r1
   32388:	mov	r6, r2
   3238c:	ldr	r1, [r0, #8]
   32390:	ldr	r3, [r0, #4]
   32394:	cmp	r3, r1
   32398:	bcs	323dc <myhtml_tree_special_list_append@@Base+0x6c>
   3239c:	ldr	r2, [r4, #4]
   323a0:	ldr	r3, [r4]
   323a4:	add	r3, r3, r2, lsl #3
   323a8:	str	r6, [r3, #4]
   323ac:	ldr	r2, [r4, #4]
   323b0:	ldr	r3, [r4]
   323b4:	str	r5, [r3, r2, lsl #3]
   323b8:	ldr	r3, [r4, #4]
   323bc:	add	r3, r3, #1
   323c0:	str	r3, [r4, #4]
   323c4:	mov	r0, #0
   323c8:	ldrd	r4, [sp]
   323cc:	ldrd	r6, [sp, #8]
   323d0:	ldr	r8, [sp, #16]
   323d4:	add	sp, sp, #20
   323d8:	pop	{pc}		; (ldr pc, [sp], #4)
   323dc:	lsl	r7, r1, #1
   323e0:	lsl	r1, r1, #4
   323e4:	ldr	r0, [r0]
   323e8:	bl	fb84 <mycore_realloc@plt>
   323ec:	cmp	r0, #0
   323f0:	beq	32400 <myhtml_tree_special_list_append@@Base+0x90>
   323f4:	str	r7, [r4, #8]
   323f8:	str	r0, [r4]
   323fc:	b	3239c <myhtml_tree_special_list_append@@Base+0x2c>
   32400:	mov	r0, #2
   32404:	b	323c8 <myhtml_tree_special_list_append@@Base+0x58>

00032408 <myhtml_tree_special_list_length@@Base>:
   32408:	ldr	r0, [r0, #4]
   3240c:	bx	lr

00032410 <myhtml_tree_special_list_pop@@Base>:
   32410:	ldr	r3, [r0, #4]
   32414:	cmp	r3, #0
   32418:	subne	r3, r3, #1
   3241c:	strne	r3, [r0, #4]
   32420:	ldr	r0, [r0, #4]
   32424:	bx	lr

00032428 <myhtml_tree_special_list_get_last@@Base>:
   32428:	ldr	r3, [r0, #4]
   3242c:	cmp	r3, #0
   32430:	ldrne	r0, [r0]
   32434:	addne	r0, r0, r3, lsl #3
   32438:	moveq	r0, #0
   3243c:	bx	lr

00032440 <myhtml_tree_incoming_buffer_first@@Base>:
   32440:	ldr	r0, [r0, #80]	; 0x50
   32444:	bx	lr

00032448 <myhtml_tree_incomming_buffer_make_data@@Base>:
   32448:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3244c:	strd	r6, [sp, #8]
   32450:	strd	r8, [sp, #16]
   32454:	str	sl, [sp, #24]
   32458:	str	lr, [sp, #28]
   3245c:	mov	r9, r0
   32460:	mov	r5, r1
   32464:	mov	r6, r2
   32468:	ldr	r0, [r0, #80]	; 0x50
   3246c:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   32470:	mov	r4, r0
   32474:	ldr	r0, [r0, #12]
   32478:	sub	r5, r5, r0
   3247c:	add	r7, r5, r6
   32480:	ldr	r3, [r4, #8]
   32484:	cmp	r7, r3
   32488:	bls	32520 <myhtml_tree_incomming_buffer_make_data@@Base+0xd8>
   3248c:	ldr	r3, [r9, #208]	; 0xd0
   32490:	cmp	r3, #0
   32494:	beq	3252c <myhtml_tree_incomming_buffer_make_data@@Base+0xe4>
   32498:	add	r0, r9, #208	; 0xd0
   3249c:	bl	10214 <myhtml_tree_temp_tag_name_clean@plt>
   324a0:	ldr	r2, [r4, #8]
   324a4:	cmp	r7, r2
   324a8:	bls	324f0 <myhtml_tree_incomming_buffer_make_data@@Base+0xa8>
   324ac:	add	r7, r9, #208	; 0xd0
   324b0:	mov	r8, #0
   324b4:	sub	r3, r5, r2
   324b8:	add	r6, r6, r3
   324bc:	ldr	r1, [r4]
   324c0:	sub	r2, r2, r5
   324c4:	add	r1, r1, r5
   324c8:	mov	r0, r7
   324cc:	bl	fc2c <myhtml_tree_temp_tag_name_append@plt>
   324d0:	ldr	r4, [r4, #20]
   324d4:	cmp	r4, #0
   324d8:	beq	32504 <myhtml_tree_incomming_buffer_make_data@@Base+0xbc>
   324dc:	ldr	r2, [r4, #8]
   324e0:	mov	r5, r8
   324e4:	cmp	r2, r6
   324e8:	bcc	324b4 <myhtml_tree_incomming_buffer_make_data@@Base+0x6c>
   324ec:	mov	r5, #0
   324f0:	ldr	r1, [r4]
   324f4:	mov	r2, r6
   324f8:	add	r1, r1, r5
   324fc:	add	r0, r9, #208	; 0xd0
   32500:	bl	fc2c <myhtml_tree_temp_tag_name_append@plt>
   32504:	ldr	r0, [r9, #208]	; 0xd0
   32508:	ldrd	r4, [sp]
   3250c:	ldrd	r6, [sp, #8]
   32510:	ldrd	r8, [sp, #16]
   32514:	ldr	sl, [sp, #24]
   32518:	add	sp, sp, #28
   3251c:	pop	{pc}		; (ldr pc, [sp], #4)
   32520:	ldr	r0, [r4]
   32524:	add	r0, r0, r5
   32528:	b	32508 <myhtml_tree_incomming_buffer_make_data@@Base+0xc0>
   3252c:	add	r0, r9, #208	; 0xd0
   32530:	bl	10598 <myhtml_tree_temp_tag_name_init@plt>
   32534:	b	324a0 <myhtml_tree_incomming_buffer_make_data@@Base+0x58>

00032538 <mycore_fopen@@Base>:
   32538:	str	r4, [sp, #-8]!
   3253c:	str	lr, [sp, #4]
   32540:	bl	fd58 <fopen@plt>
   32544:	ldr	r4, [sp]
   32548:	add	sp, sp, #4
   3254c:	pop	{pc}		; (ldr pc, [sp], #4)

00032550 <mycore_fclose@@Base>:
   32550:	str	r4, [sp, #-8]!
   32554:	str	lr, [sp, #4]
   32558:	bl	10994 <fclose@plt>
   3255c:	ldr	r4, [sp]
   32560:	add	sp, sp, #4
   32564:	pop	{pc}		; (ldr pc, [sp], #4)

00032568 <mycore_fread@@Base>:
   32568:	str	r4, [sp, #-8]!
   3256c:	str	lr, [sp, #4]
   32570:	bl	10364 <fread@plt>
   32574:	ldr	r4, [sp]
   32578:	add	sp, sp, #4
   3257c:	pop	{pc}		; (ldr pc, [sp], #4)

00032580 <mycore_fwrite@@Base>:
   32580:	str	r4, [sp, #-8]!
   32584:	str	lr, [sp, #4]
   32588:	bl	102d4 <fwrite@plt>
   3258c:	ldr	r4, [sp]
   32590:	add	sp, sp, #4
   32594:	pop	{pc}		; (ldr pc, [sp], #4)

00032598 <mycore_fflush@@Base>:
   32598:	str	r4, [sp, #-8]!
   3259c:	str	lr, [sp, #4]
   325a0:	bl	fdac <fflush@plt>
   325a4:	ldr	r4, [sp]
   325a8:	add	sp, sp, #4
   325ac:	pop	{pc}		; (ldr pc, [sp], #4)

000325b0 <mycore_fseek@@Base>:
   325b0:	str	r4, [sp, #-8]!
   325b4:	str	lr, [sp, #4]
   325b8:	bl	10ebc <fseek@plt>
   325bc:	ldr	r4, [sp]
   325c0:	add	sp, sp, #4
   325c4:	pop	{pc}		; (ldr pc, [sp], #4)

000325c8 <mycore_ftell@@Base>:
   325c8:	str	r4, [sp, #-8]!
   325cc:	str	lr, [sp, #4]
   325d0:	bl	10004 <ftell@plt>
   325d4:	ldr	r4, [sp]
   325d8:	add	sp, sp, #4
   325dc:	pop	{pc}		; (ldr pc, [sp], #4)

000325e0 <mycore_ferror@@Base>:
   325e0:	str	r4, [sp, #-8]!
   325e4:	str	lr, [sp, #4]
   325e8:	bl	fef0 <ferror@plt>
   325ec:	ldr	r4, [sp]
   325f0:	add	sp, sp, #4
   325f4:	pop	{pc}		; (ldr pc, [sp], #4)

000325f8 <mycore_setbuf@@Base>:
   325f8:	str	r4, [sp, #-8]!
   325fc:	str	lr, [sp, #4]
   32600:	bl	fca4 <setbuf@plt>
   32604:	ldr	r4, [sp]
   32608:	add	sp, sp, #4
   3260c:	pop	{pc}		; (ldr pc, [sp], #4)

00032610 <mycore_malloc@@Base>:
   32610:	str	r4, [sp, #-8]!
   32614:	str	lr, [sp, #4]
   32618:	bl	1049c <malloc@plt>
   3261c:	ldr	r4, [sp]
   32620:	add	sp, sp, #4
   32624:	pop	{pc}		; (ldr pc, [sp], #4)

00032628 <mycore_realloc@@Base>:
   32628:	str	r4, [sp, #-8]!
   3262c:	str	lr, [sp, #4]
   32630:	bl	10184 <realloc@plt>
   32634:	ldr	r4, [sp]
   32638:	add	sp, sp, #4
   3263c:	pop	{pc}		; (ldr pc, [sp], #4)

00032640 <mycore_calloc@@Base>:
   32640:	str	r4, [sp, #-8]!
   32644:	str	lr, [sp, #4]
   32648:	bl	fb90 <calloc@plt>
   3264c:	ldr	r4, [sp]
   32650:	add	sp, sp, #4
   32654:	pop	{pc}		; (ldr pc, [sp], #4)

00032658 <mycore_free@@Base>:
   32658:	str	r4, [sp, #-8]!
   3265c:	str	lr, [sp, #4]
   32660:	bl	fe54 <free@plt>
   32664:	mov	r0, #0
   32668:	ldr	r4, [sp]
   3266c:	add	sp, sp, #4
   32670:	pop	{pc}		; (ldr pc, [sp], #4)

00032674 <mythread_thread_create@@Base>:
   32674:	strd	r4, [sp, #-24]!	; 0xffffffe8
   32678:	strd	r6, [sp, #8]
   3267c:	str	r8, [sp, #16]
   32680:	str	lr, [sp, #20]
   32684:	mov	r5, r0
   32688:	mov	r6, r1
   3268c:	mov	r7, r2
   32690:	mov	r1, #4
   32694:	mov	r0, #1
   32698:	bl	feb4 <mycore_calloc@plt>
   3269c:	subs	r4, r0, #0
   326a0:	beq	326c0 <mythread_thread_create@@Base+0x4c>
   326a4:	mov	r3, r7
   326a8:	mov	r2, r6
   326ac:	ldr	r1, [r5, #20]
   326b0:	mov	r0, r4
   326b4:	bl	10370 <pthread_create@plt>
   326b8:	cmp	r0, #0
   326bc:	movne	r4, #0
   326c0:	mov	r0, r4
   326c4:	ldrd	r4, [sp]
   326c8:	ldrd	r6, [sp, #8]
   326cc:	ldr	r8, [sp, #16]
   326d0:	add	sp, sp, #20
   326d4:	pop	{pc}		; (ldr pc, [sp], #4)

000326d8 <mythread_thread_join@@Base>:
   326d8:	str	r4, [sp, #-8]!
   326dc:	str	lr, [sp, #4]
   326e0:	ldr	r0, [r1]
   326e4:	mov	r1, #0
   326e8:	bl	10afc <pthread_join@plt>
   326ec:	adds	r0, r0, #0
   326f0:	movne	r0, #1
   326f4:	ldr	r4, [sp]
   326f8:	add	sp, sp, #4
   326fc:	pop	{pc}		; (ldr pc, [sp], #4)

00032700 <mythread_thread_cancel@@Base>:
   32700:	str	r4, [sp, #-8]!
   32704:	str	lr, [sp, #4]
   32708:	ldr	r0, [r1]
   3270c:	bl	1088c <pthread_cancel@plt>
   32710:	adds	r0, r0, #0
   32714:	movne	r0, #1
   32718:	ldr	r4, [sp]
   3271c:	add	sp, sp, #4
   32720:	pop	{pc}		; (ldr pc, [sp], #4)

00032724 <mythread_thread_destroy@@Base>:
   32724:	str	r4, [sp, #-8]!
   32728:	str	lr, [sp, #4]
   3272c:	mov	r0, r1
   32730:	bl	10d60 <mycore_free@plt>
   32734:	mov	r0, #0
   32738:	ldr	r4, [sp]
   3273c:	add	sp, sp, #4
   32740:	pop	{pc}		; (ldr pc, [sp], #4)

00032744 <mythread_thread_attr_init@@Base>:
   32744:	strd	r4, [sp, #-16]!
   32748:	str	r6, [sp, #8]
   3274c:	str	lr, [sp, #12]
   32750:	mov	r5, r0
   32754:	mov	r1, #36	; 0x24
   32758:	mov	r0, #1
   3275c:	bl	feb4 <mycore_calloc@plt>
   32760:	subs	r4, r0, #0
   32764:	beq	32794 <mythread_thread_attr_init@@Base+0x50>
   32768:	mov	r0, r4
   3276c:	bl	10730 <pthread_attr_init@plt>
   32770:	str	r0, [r5, #28]
   32774:	cmp	r0, #0
   32778:	bne	327a8 <mythread_thread_attr_init@@Base+0x64>
   3277c:	mov	r1, #0
   32780:	mov	r0, r4
   32784:	bl	10eec <pthread_attr_setdetachstate@plt>
   32788:	str	r0, [r5, #28]
   3278c:	cmp	r0, #0
   32790:	bne	327b8 <mythread_thread_attr_init@@Base+0x74>
   32794:	mov	r0, r4
   32798:	ldrd	r4, [sp]
   3279c:	ldr	r6, [sp, #8]
   327a0:	add	sp, sp, #12
   327a4:	pop	{pc}		; (ldr pc, [sp], #4)
   327a8:	mov	r0, r4
   327ac:	bl	10d60 <mycore_free@plt>
   327b0:	mov	r4, #0
   327b4:	b	32794 <mythread_thread_attr_init@@Base+0x50>
   327b8:	mov	r0, r4
   327bc:	bl	10d60 <mycore_free@plt>
   327c0:	mov	r4, #0
   327c4:	b	32794 <mythread_thread_attr_init@@Base+0x50>

000327c8 <mythread_thread_attr_clean@@Base>:
   327c8:	bx	lr

000327cc <mythread_thread_attr_destroy@@Base>:
   327cc:	strd	r4, [sp, #-16]!
   327d0:	str	r6, [sp, #8]
   327d4:	str	lr, [sp, #12]
   327d8:	subs	r4, r1, #0
   327dc:	beq	327f8 <mythread_thread_attr_destroy@@Base+0x2c>
   327e0:	mov	r5, r0
   327e4:	mov	r0, r4
   327e8:	bl	fd7c <pthread_attr_destroy@plt>
   327ec:	str	r0, [r5, #28]
   327f0:	mov	r0, r4
   327f4:	bl	10d60 <mycore_free@plt>
   327f8:	ldrd	r4, [sp]
   327fc:	ldr	r6, [sp, #8]
   32800:	add	sp, sp, #12
   32804:	pop	{pc}		; (ldr pc, [sp], #4)

00032808 <mythread_mutex_create@@Base>:
   32808:	str	r4, [sp, #-8]!
   3280c:	str	lr, [sp, #4]
   32810:	bl	1085c <mcsync_mutex_create@plt>
   32814:	subs	r4, r0, #0
   32818:	beq	3282c <mythread_mutex_create@@Base+0x24>
   3281c:	mov	r0, r4
   32820:	bl	10ae4 <mcsync_mutex_init@plt>
   32824:	cmp	r0, #0
   32828:	bne	3283c <mythread_mutex_create@@Base+0x34>
   3282c:	mov	r0, r4
   32830:	ldr	r4, [sp]
   32834:	add	sp, sp, #4
   32838:	pop	{pc}		; (ldr pc, [sp], #4)
   3283c:	mov	r0, r4
   32840:	bl	10d60 <mycore_free@plt>
   32844:	mov	r4, #0
   32848:	b	3282c <mythread_mutex_create@@Base+0x24>

0003284c <mythread_mutex_post@@Base>:
   3284c:	str	r4, [sp, #-8]!
   32850:	str	lr, [sp, #4]
   32854:	mov	r0, r1
   32858:	bl	fe9c <mcsync_mutex_unlock@plt>
   3285c:	ldr	r4, [sp]
   32860:	add	sp, sp, #4
   32864:	pop	{pc}		; (ldr pc, [sp], #4)

00032868 <mythread_mutex_wait@@Base>:
   32868:	str	r4, [sp, #-8]!
   3286c:	str	lr, [sp, #4]
   32870:	mov	r0, r1
   32874:	bl	10fd0 <mcsync_mutex_lock@plt>
   32878:	ldr	r4, [sp]
   3287c:	add	sp, sp, #4
   32880:	pop	{pc}		; (ldr pc, [sp], #4)

00032884 <mythread_mutex_try_wait@@Base>:
   32884:	str	r4, [sp, #-8]!
   32888:	str	lr, [sp, #4]
   3288c:	mov	r0, r1
   32890:	bl	10f40 <mcsync_mutex_try_lock@plt>
   32894:	ldr	r4, [sp]
   32898:	add	sp, sp, #4
   3289c:	pop	{pc}		; (ldr pc, [sp], #4)

000328a0 <mythread_mutex_close@@Base>:
   328a0:	str	r4, [sp, #-8]!
   328a4:	str	lr, [sp, #4]
   328a8:	mov	r0, r1
   328ac:	bl	fd10 <mcsync_mutex_destroy@plt>
   328b0:	ldr	r4, [sp]
   328b4:	add	sp, sp, #4
   328b8:	pop	{pc}		; (ldr pc, [sp], #4)

000328bc <mythread_nanosleep_create@@Base>:
   328bc:	str	r4, [sp, #-8]!
   328c0:	str	lr, [sp, #4]
   328c4:	mov	r1, #8
   328c8:	mov	r0, #1
   328cc:	bl	feb4 <mycore_calloc@plt>
   328d0:	ldr	r4, [sp]
   328d4:	add	sp, sp, #4
   328d8:	pop	{pc}		; (ldr pc, [sp], #4)

000328dc <mythread_nanosleep_clean@@Base>:
   328dc:	mov	r3, #0
   328e0:	str	r3, [r0]
   328e4:	str	r3, [r0, #4]
   328e8:	bx	lr

000328ec <mythread_nanosleep_destroy@@Base>:
   328ec:	str	r4, [sp, #-8]!
   328f0:	str	lr, [sp, #4]
   328f4:	bl	10d60 <mycore_free@plt>
   328f8:	ldr	r4, [sp]
   328fc:	add	sp, sp, #4
   32900:	pop	{pc}		; (ldr pc, [sp], #4)

00032904 <mythread_nanosleep_sleep@@Base>:
   32904:	str	r4, [sp, #-8]!
   32908:	str	lr, [sp, #4]
   3290c:	mov	r1, #0
   32910:	bl	fec0 <nanosleep@plt>
   32914:	adds	r0, r0, #0
   32918:	movne	r0, #1
   3291c:	ldr	r4, [sp]
   32920:	add	sp, sp, #4
   32924:	pop	{pc}		; (ldr pc, [sp], #4)

00032928 <mcsync_spin_create@@Base>:
   32928:	str	r4, [sp, #-8]!
   3292c:	str	lr, [sp, #4]
   32930:	mov	r1, #4
   32934:	mov	r0, #1
   32938:	bl	feb4 <mycore_calloc@plt>
   3293c:	ldr	r4, [sp]
   32940:	add	sp, sp, #4
   32944:	pop	{pc}		; (ldr pc, [sp], #4)

00032948 <mcsync_spin_init@@Base>:
   32948:	mov	r0, #0
   3294c:	bx	lr

00032950 <mcsync_spin_clean@@Base>:
   32950:	mov	r3, #0
   32954:	str	r3, [r0]
   32958:	bx	lr

0003295c <mcsync_spin_destroy@@Base>:
   3295c:	str	r4, [sp, #-8]!
   32960:	str	lr, [sp, #4]
   32964:	bl	10d60 <mycore_free@plt>
   32968:	ldr	r4, [sp]
   3296c:	add	sp, sp, #4
   32970:	pop	{pc}		; (ldr pc, [sp], #4)

00032974 <mcsync_spin_lock@@Base>:
   32974:	mov	r3, #0
   32978:	mov	r2, #1
   3297c:	ldaex	r1, [r0]
   32980:	cmp	r1, r3
   32984:	bne	32994 <mcsync_spin_lock@@Base+0x20>
   32988:	stlex	ip, r2, [r0]
   3298c:	cmp	ip, #0
   32990:	bne	3297c <mcsync_spin_lock@@Base+0x8>
   32994:	mov	r3, r1
   32998:	bne	3297c <mcsync_spin_lock@@Base+0x8>
   3299c:	mov	r0, #0
   329a0:	bx	lr

000329a4 <mcsync_spin_unlock@@Base>:
   329a4:	mov	r3, #0
   329a8:	stl	r3, [r0]
   329ac:	mov	r0, r3
   329b0:	bx	lr

000329b4 <mcsync_mutex_create@@Base>:
   329b4:	str	r4, [sp, #-8]!
   329b8:	str	lr, [sp, #4]
   329bc:	mov	r1, #24
   329c0:	mov	r0, #1
   329c4:	bl	feb4 <mycore_calloc@plt>
   329c8:	ldr	r4, [sp]
   329cc:	add	sp, sp, #4
   329d0:	pop	{pc}		; (ldr pc, [sp], #4)

000329d4 <mcsync_mutex_init@@Base>:
   329d4:	str	r4, [sp, #-8]!
   329d8:	str	lr, [sp, #4]
   329dc:	mov	r1, #0
   329e0:	bl	ff68 <pthread_mutex_init@plt>
   329e4:	adds	r0, r0, #0
   329e8:	movne	r0, #1
   329ec:	ldr	r4, [sp]
   329f0:	add	sp, sp, #4
   329f4:	pop	{pc}		; (ldr pc, [sp], #4)

000329f8 <mcsync_mutex_clean@@Base>:
   329f8:	bx	lr

000329fc <mcsync_mutex_destroy@@Base>:
   329fc:	str	r4, [sp, #-8]!
   32a00:	str	lr, [sp, #4]
   32a04:	mov	r4, r0
   32a08:	bl	fda0 <pthread_mutex_destroy@plt>
   32a0c:	mov	r0, r4
   32a10:	bl	10d60 <mycore_free@plt>
   32a14:	ldr	r4, [sp]
   32a18:	add	sp, sp, #4
   32a1c:	pop	{pc}		; (ldr pc, [sp], #4)

00032a20 <mcsync_mutex_lock@@Base>:
   32a20:	str	r4, [sp, #-8]!
   32a24:	str	lr, [sp, #4]
   32a28:	bl	fea8 <pthread_mutex_lock@plt>
   32a2c:	adds	r0, r0, #0
   32a30:	movne	r0, #1
   32a34:	ldr	r4, [sp]
   32a38:	add	sp, sp, #4
   32a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00032a40 <mcsync_mutex_try_lock@@Base>:
   32a40:	str	r4, [sp, #-8]!
   32a44:	str	lr, [sp, #4]
   32a48:	bl	ffd4 <pthread_mutex_trylock@plt>
   32a4c:	adds	r0, r0, #0
   32a50:	movne	r0, #1
   32a54:	ldr	r4, [sp]
   32a58:	add	sp, sp, #4
   32a5c:	pop	{pc}		; (ldr pc, [sp], #4)

00032a60 <mcsync_mutex_unlock@@Base>:
   32a60:	str	r4, [sp, #-8]!
   32a64:	str	lr, [sp, #4]
   32a68:	bl	fb6c <pthread_mutex_unlock@plt>
   32a6c:	adds	r0, r0, #0
   32a70:	movne	r0, #1
   32a74:	ldr	r4, [sp]
   32a78:	add	sp, sp, #4
   32a7c:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00032a80 <.fini>:
   32a80:	push	{r3, lr}
   32a84:	pop	{r3, pc}
