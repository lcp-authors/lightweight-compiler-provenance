
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

00010760 <.init>:
   10760:	push	{r3, lr}
   10764:	bl	108f8 <_start@@Base+0x3c>
   10768:	pop	{r3, pc}

Disassembly of section .plt:

0001076c <strcmp@plt-0x14>:
   1076c:	push	{lr}		; (str lr, [sp, #-4]!)
   10770:	ldr	lr, [pc, #4]	; 1077c <strcmp@plt-0x4>
   10774:	add	lr, pc, lr
   10778:	ldr	pc, [lr, #8]!
   1077c:	andeq	r1, r1, r4, lsl #17

00010780 <strcmp@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2180]!	; 0x884

0001078c <printf@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2172]!	; 0x87c

00010798 <fopen@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2164]!	; 0x874

000107a4 <free@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2156]!	; 0x86c

000107b0 <ftell@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2148]!	; 0x864

000107bc <rewind@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2140]!	; 0x85c

000107c8 <fwrite@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2132]!	; 0x854

000107d4 <fread@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2124]!	; 0x84c

000107e0 <puts@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2116]!	; 0x844

000107ec <malloc@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2108]!	; 0x83c

000107f8 <__libc_start_main@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2100]!	; 0x834

00010804 <__gmon_start__@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2092]!	; 0x82c

00010810 <exit@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2084]!	; 0x824

0001081c <fclose@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2076]!	; 0x81c

00010828 <fseek@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2068]!	; 0x814

00010834 <abort@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2060]!	; 0x80c

00010840 <__assert_fail@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2052]!	; 0x804

Disassembly of section .text:

0001084c <main@@Base>:
   1084c:	ldr	r3, [pc, #88]	; 108ac <main@@Base+0x60>
   10850:	sub	r2, r0, #1
   10854:	cmp	r2, #1
   10858:	add	r3, pc, r3
   1085c:	bhi	1087c <main@@Base+0x30>
   10860:	ldr	r2, [pc, #72]	; 108b0 <main@@Base+0x64>
   10864:	cmp	r0, #2
   10868:	ldreq	r1, [r1, #4]
   1086c:	ldr	r3, [r3, r2]
   10870:	streq	r1, [r3]
   10874:	ldr	r0, [r3]
   10878:	b	10b68 <test_schema@@Base>
   1087c:	ldr	ip, [pc, #48]	; 108b4 <main@@Base+0x68>
   10880:	mov	r2, #64	; 0x40
   10884:	mov	r1, #1
   10888:	str	r4, [sp, #-8]!
   1088c:	ldr	r0, [pc, #36]	; 108b8 <main@@Base+0x6c>
   10890:	str	lr, [sp, #4]
   10894:	ldr	r3, [r3, ip]
   10898:	add	r0, pc, r0
   1089c:	ldr	r3, [r3]
   108a0:	bl	107c8 <fwrite@plt>
   108a4:	mov	r0, #1
   108a8:	bl	10810 <exit@plt>
   108ac:	andeq	r1, r1, r0, lsr #15
   108b0:	andeq	r0, r0, r8, asr r0
   108b4:	andeq	r0, r0, r0, asr r0
   108b8:	andeq	r1, r0, ip, asr #7

000108bc <_start@@Base>:
   108bc:	mov	fp, #0
   108c0:	mov	lr, #0
   108c4:	pop	{r1}		; (ldr r1, [sp], #4)
   108c8:	mov	r2, sp
   108cc:	push	{r2}		; (str r2, [sp, #-4]!)
   108d0:	push	{r0}		; (str r0, [sp, #-4]!)
   108d4:	ldr	ip, [pc, #16]	; 108ec <_start@@Base+0x30>
   108d8:	push	{ip}		; (str ip, [sp, #-4]!)
   108dc:	ldr	r0, [pc, #12]	; 108f0 <_start@@Base+0x34>
   108e0:	ldr	r3, [pc, #12]	; 108f4 <_start@@Base+0x38>
   108e4:	bl	107f8 <__libc_start_main@plt>
   108e8:	bl	10834 <abort@plt>
   108ec:	andeq	r1, r1, r4, asr r8
   108f0:	andeq	r0, r1, ip, asr #16
   108f4:	strdeq	r1, [r1], -r4
   108f8:	ldr	r3, [pc, #20]	; 10914 <_start@@Base+0x58>
   108fc:	ldr	r2, [pc, #20]	; 10918 <_start@@Base+0x5c>
   10900:	add	r3, pc, r3
   10904:	ldr	r2, [r3, r2]
   10908:	cmp	r2, #0
   1090c:	bxeq	lr
   10910:	b	10804 <__gmon_start__@plt>
   10914:	strdeq	r1, [r1], -r8
   10918:	andeq	r0, r0, r4, asr r0
   1091c:	ldr	r0, [pc, #24]	; 1093c <_start@@Base+0x80>
   10920:	ldr	r3, [pc, #24]	; 10940 <_start@@Base+0x84>
   10924:	cmp	r3, r0
   10928:	bxeq	lr
   1092c:	ldr	r3, [pc, #16]	; 10944 <_start@@Base+0x88>
   10930:	cmp	r3, #0
   10934:	bxeq	lr
   10938:	bx	r3
   1093c:	andeq	r2, r2, r8, rrx
   10940:	andeq	r2, r2, r8, rrx
   10944:	andeq	r0, r0, r0
   10948:	ldr	r0, [pc, #36]	; 10974 <_start@@Base+0xb8>
   1094c:	ldr	r1, [pc, #36]	; 10978 <_start@@Base+0xbc>
   10950:	sub	r1, r1, r0
   10954:	asr	r1, r1, #2
   10958:	add	r1, r1, r1, lsr #31
   1095c:	asrs	r1, r1, #1
   10960:	bxeq	lr
   10964:	ldr	r3, [pc, #16]	; 1097c <_start@@Base+0xc0>
   10968:	cmp	r3, #0
   1096c:	bxeq	lr
   10970:	bx	r3
   10974:	andeq	r2, r2, r8, rrx
   10978:	andeq	r2, r2, r8, rrx
   1097c:	andeq	r0, r0, r0
   10980:	push	{r4, lr}
   10984:	ldr	r4, [pc, #24]	; 109a4 <_start@@Base+0xe8>
   10988:	ldrb	r3, [r4]
   1098c:	cmp	r3, #0
   10990:	popne	{r4, pc}
   10994:	bl	1091c <_start@@Base+0x60>
   10998:	mov	r3, #1
   1099c:	strb	r3, [r4]
   109a0:	pop	{r4, pc}
   109a4:	andeq	r2, r2, r8, rrx
   109a8:	b	10948 <_start@@Base+0x8c>
   109ac:	ldr	r3, [pc, #32]	; 109d4 <_start@@Base+0x118>
   109b0:	mov	r2, #215	; 0xd7
   109b4:	str	r4, [sp, #-8]!
   109b8:	ldr	r1, [pc, #24]	; 109d8 <_start@@Base+0x11c>
   109bc:	str	lr, [sp, #4]
   109c0:	ldr	r0, [pc, #20]	; 109dc <_start@@Base+0x120>
   109c4:	add	r3, pc, r3
   109c8:	add	r1, pc, r1
   109cc:	add	r0, pc, r0
   109d0:	bl	10840 <__assert_fail@plt>
   109d4:	muleq	r0, r8, lr
   109d8:	andeq	r0, r0, r0, lsr #31
   109dc:	andeq	r1, r0, r4, lsl r0
   109e0:	ldr	r3, [pc, #36]	; 10a0c <_start@@Base+0x150>
   109e4:	mov	r2, #218	; 0xda
   109e8:	str	r4, [sp, #-8]!
   109ec:	ldr	r1, [pc, #28]	; 10a10 <_start@@Base+0x154>
   109f0:	str	lr, [sp, #4]
   109f4:	ldr	r0, [pc, #24]	; 10a14 <_start@@Base+0x158>
   109f8:	add	r3, pc, r3
   109fc:	add	r3, r3, #28
   10a00:	add	r1, pc, r1
   10a04:	add	r0, pc, r0
   10a08:	bl	10840 <__assert_fail@plt>
   10a0c:	andeq	r0, r0, r4, ror #28
   10a10:	andeq	r0, r0, r8, ror #30
   10a14:	andeq	r1, r0, r4, lsl r0
   10a18:	ldr	r3, [pc, #36]	; 10a44 <_start@@Base+0x188>
   10a1c:	mov	r2, #195	; 0xc3
   10a20:	str	r4, [sp, #-8]!
   10a24:	ldr	r1, [pc, #28]	; 10a48 <_start@@Base+0x18c>
   10a28:	str	lr, [sp, #4]
   10a2c:	ldr	r0, [pc, #24]	; 10a4c <_start@@Base+0x190>
   10a30:	add	r3, pc, r3
   10a34:	add	r3, r3, #52	; 0x34
   10a38:	add	r1, pc, r1
   10a3c:	add	r0, pc, r0
   10a40:	bl	10840 <__assert_fail@plt>
   10a44:	andeq	r0, r0, ip, lsr #28
   10a48:	andeq	r0, r0, r0, lsr pc
   10a4c:	ldrdeq	r0, [r0], -ip
   10a50:	ldr	r3, [pc, #36]	; 10a7c <_start@@Base+0x1c0>
   10a54:	mov	r2, #204	; 0xcc
   10a58:	str	r4, [sp, #-8]!
   10a5c:	ldr	r1, [pc, #28]	; 10a80 <_start@@Base+0x1c4>
   10a60:	str	lr, [sp, #4]
   10a64:	ldr	r0, [pc, #24]	; 10a84 <_start@@Base+0x1c8>
   10a68:	add	r3, pc, r3
   10a6c:	add	r3, r3, #76	; 0x4c
   10a70:	add	r1, pc, r1
   10a74:	add	r0, pc, r0
   10a78:	bl	10840 <__assert_fail@plt>
   10a7c:	strdeq	r0, [r0], -r4
   10a80:	strdeq	r0, [r0], -r8
   10a84:	andeq	r0, r0, r4, lsr #31
   10a88:	ldr	r3, [pc, #36]	; 10ab4 <_start@@Base+0x1f8>
   10a8c:	mov	r2, #192	; 0xc0
   10a90:	str	r4, [sp, #-8]!
   10a94:	ldr	r1, [pc, #28]	; 10ab8 <_start@@Base+0x1fc>
   10a98:	str	lr, [sp, #4]
   10a9c:	ldr	r0, [pc, #24]	; 10abc <_start@@Base+0x200>
   10aa0:	add	r3, pc, r3
   10aa4:	add	r3, r3, #112	; 0x70
   10aa8:	add	r1, pc, r1
   10aac:	add	r0, pc, r0
   10ab0:	bl	10840 <__assert_fail@plt>
   10ab4:			; <UNDEFINED> instruction: 0x00000dbc
   10ab8:	andeq	r0, r0, r0, asr #29
   10abc:	andeq	r0, r0, r4, lsr pc
   10ac0:	ldr	r3, [pc, #36]	; 10aec <_start@@Base+0x230>
   10ac4:	mov	r2, #201	; 0xc9
   10ac8:	str	r4, [sp, #-8]!
   10acc:	ldr	r1, [pc, #28]	; 10af0 <_start@@Base+0x234>
   10ad0:	str	lr, [sp, #4]
   10ad4:	ldr	r0, [pc, #24]	; 10af4 <_start@@Base+0x238>
   10ad8:	add	r3, pc, r3
   10adc:	add	r3, r3, #136	; 0x88
   10ae0:	add	r1, pc, r1
   10ae4:	add	r0, pc, r0
   10ae8:	bl	10840 <__assert_fail@plt>
   10aec:	andeq	r0, r0, r4, lsl #27
   10af0:	andeq	r0, r0, r8, lsl #29
   10af4:	andeq	r0, r0, r4, lsr pc
   10af8:	ldr	r3, [pc, #36]	; 10b24 <_start@@Base+0x268>
   10afc:	mov	r2, #147	; 0x93
   10b00:	str	r4, [sp, #-8]!
   10b04:	ldr	r1, [pc, #28]	; 10b28 <_start@@Base+0x26c>
   10b08:	str	lr, [sp, #4]
   10b0c:	ldr	r0, [pc, #24]	; 10b2c <_start@@Base+0x270>
   10b10:	add	r3, pc, r3
   10b14:	add	r3, r3, #160	; 0xa0
   10b18:	add	r1, pc, r1
   10b1c:	add	r0, pc, r0
   10b20:	bl	10840 <__assert_fail@plt>
   10b24:	andeq	r0, r0, ip, asr #26
   10b28:	andeq	r0, r0, r0, asr lr
   10b2c:	strdeq	r0, [r0], -ip
   10b30:	ldr	r3, [pc, #36]	; 10b5c <_start@@Base+0x2a0>
   10b34:	mov	r2, #149	; 0x95
   10b38:	str	r4, [sp, #-8]!
   10b3c:	ldr	r1, [pc, #28]	; 10b60 <_start@@Base+0x2a4>
   10b40:	str	lr, [sp, #4]
   10b44:	ldr	r0, [pc, #24]	; 10b64 <_start@@Base+0x2a8>
   10b48:	add	r3, pc, r3
   10b4c:	add	r3, r3, #188	; 0xbc
   10b50:	add	r1, pc, r1
   10b54:	add	r0, pc, r0
   10b58:	bl	10840 <__assert_fail@plt>
   10b5c:	andeq	r0, r0, r4, lsl sp
   10b60:	andeq	r0, r0, r8, lsl lr
   10b64:	andeq	r0, r0, r4, asr #29

00010b68 <test_schema@@Base>:
   10b68:	ldr	r1, [pc, #2984]	; 11718 <test_schema@@Base+0xbb0>
   10b6c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10b70:	strd	r6, [sp, #8]
   10b74:	strd	r8, [sp, #16]
   10b78:	strd	sl, [sp, #24]
   10b7c:	add	r1, pc, r1
   10b80:	str	lr, [sp, #32]
   10b84:	sub	sp, sp, #20
   10b88:	bl	10798 <fopen@plt>
   10b8c:	subs	r6, r0, #0
   10b90:	beq	10ea8 <test_schema@@Base+0x340>
   10b94:	mov	r2, #2
   10b98:	mov	r1, #0
   10b9c:	bl	10828 <fseek@plt>
   10ba0:	mov	r0, r6
   10ba4:	bl	107b0 <ftell@plt>
   10ba8:	mov	r7, r0
   10bac:	movw	r3, #10000	; 0x2710
   10bb0:	cmp	r7, r3
   10bb4:	mov	r0, r6
   10bb8:	bhi	10ea4 <test_schema@@Base+0x33c>
   10bbc:	bl	107bc <rewind@plt>
   10bc0:	cmp	r7, #0
   10bc4:	movne	r0, r7
   10bc8:	moveq	r0, #1
   10bcc:	bl	107ec <malloc@plt>
   10bd0:	subs	r5, r0, #0
   10bd4:	str	r5, [sp, #4]
   10bd8:	beq	10ea0 <test_schema@@Base+0x338>
   10bdc:	mov	r4, #0
   10be0:	b	10be8 <test_schema@@Base+0x80>
   10be4:	add	r4, r4, r0
   10be8:	mov	r3, r6
   10bec:	sub	r2, r7, r4
   10bf0:	mov	r1, #1
   10bf4:	add	r0, r5, r4
   10bf8:	bl	107d4 <fread@plt>
   10bfc:	cmp	r0, #0
   10c00:	bne	10be4 <test_schema@@Base+0x7c>
   10c04:	cmp	r7, r4
   10c08:	mov	r5, r0
   10c0c:	mov	r0, r6
   10c10:	bne	10e80 <test_schema@@Base+0x318>
   10c14:	bl	1081c <fclose@plt>
   10c18:	ldr	r3, [sp, #4]
   10c1c:	ldr	r2, [r3, #4]
   10c20:	movw	r3, #17986	; 0x4642
   10c24:	movt	r3, #21314	; 0x5342
   10c28:	cmp	r2, r3
   10c2c:	beq	10c54 <test_schema@@Base+0xec>
   10c30:	ldr	r3, [pc, #2788]	; 1171c <test_schema@@Base+0xbb4>
   10c34:	mov	r2, #237	; 0xed
   10c38:	ldr	r1, [pc, #2784]	; 11720 <test_schema@@Base+0xbb8>
   10c3c:	ldr	r0, [pc, #2784]	; 11724 <test_schema@@Base+0xbbc>
   10c40:	add	r3, pc, r3
   10c44:	add	r3, r3, #212	; 0xd4
   10c48:	add	r1, pc, r1
   10c4c:	add	r0, pc, r0
   10c50:	bl	10840 <__assert_fail@plt>
   10c54:	ldr	r3, [sp, #4]
   10c58:	ldr	r2, [r3]
   10c5c:	adds	r3, r3, r2
   10c60:	beq	10c30 <test_schema@@Base+0xc8>
   10c64:	ldr	r1, [sp, #4]
   10c68:	ldr	r2, [r1, r2]
   10c6c:	sub	r2, r3, r2
   10c70:	ldrh	r1, [r2]
   10c74:	cmp	r1, #5
   10c78:	bls	116e4 <test_schema@@Base+0xb7c>
   10c7c:	ldrh	r1, [r2, #4]
   10c80:	cmp	r1, #0
   10c84:	beq	116e4 <test_schema@@Base+0xb7c>
   10c88:	ldr	r2, [r3, r1]
   10c8c:	add	r3, r3, r1
   10c90:	add	r2, r2, #4
   10c94:	adds	r4, r3, r2
   10c98:	beq	10d78 <test_schema@@Base+0x210>
   10c9c:	ldr	r1, [r4, #-4]
   10ca0:	cmp	r1, #0
   10ca4:	beq	10d78 <test_schema@@Base+0x210>
   10ca8:	ldr	r3, [r3, r2]
   10cac:	adds	r0, r4, r3
   10cb0:	beq	10d48 <test_schema@@Base+0x1e0>
   10cb4:	ldr	r3, [r4, r3]
   10cb8:	sub	r3, r0, r3
   10cbc:	ldrh	r2, [r3]
   10cc0:	cmp	r2, #5
   10cc4:	bls	11600 <test_schema@@Base+0xa98>
   10cc8:	ldrh	r2, [r3, #4]
   10ccc:	cmp	r2, #0
   10cd0:	beq	11600 <test_schema@@Base+0xa98>
   10cd4:	ldr	r7, [pc, #2636]	; 11728 <test_schema@@Base+0xbc0>
   10cd8:	add	r8, r4, #4
   10cdc:	mov	r6, #0
   10ce0:	add	r7, pc, r7
   10ce4:	b	10d08 <test_schema@@Base+0x1a0>
   10ce8:	ldr	r3, [r3, r2]
   10cec:	sub	r3, r0, r3
   10cf0:	ldrh	r2, [r3]
   10cf4:	cmp	r2, #5
   10cf8:	bls	11600 <test_schema@@Base+0xa98>
   10cfc:	ldrh	r2, [r3, #4]
   10d00:	cmp	r2, #0
   10d04:	beq	11600 <test_schema@@Base+0xa98>
   10d08:	ldr	r3, [r0, r2]
   10d0c:	add	r2, r0, r2
   10d10:	mov	r1, r6
   10d14:	mov	r0, r7
   10d18:	add	r6, r6, #1
   10d1c:	add	r3, r3, #4
   10d20:	add	r2, r2, r3
   10d24:	bl	1078c <printf@plt>
   10d28:	ldr	fp, [r4, #-4]
   10d2c:	cmp	r6, fp
   10d30:	bcs	10db0 <test_schema@@Base+0x248>
   10d34:	mov	r3, r8
   10d38:	add	r8, r8, #4
   10d3c:	ldr	r2, [r3]
   10d40:	adds	r0, r3, r2
   10d44:	bne	10ce8 <test_schema@@Base+0x180>
   10d48:	ldr	r3, [pc, #2524]	; 1172c <test_schema@@Base+0xbc4>
   10d4c:	mov	r2, #218	; 0xda
   10d50:	ldr	r1, [pc, #2520]	; 11730 <test_schema@@Base+0xbc8>
   10d54:	ldr	r0, [pc, #2520]	; 11734 <test_schema@@Base+0xbcc>
   10d58:	add	r3, pc, r3
   10d5c:	add	r3, r3, #28
   10d60:	add	r1, pc, r1
   10d64:	add	r0, pc, r0
   10d68:	bl	10840 <__assert_fail@plt>
   10d6c:	mov	sl, r7
   10d70:	cmp	r6, sl
   10d74:	beq	10ebc <test_schema@@Base+0x354>
   10d78:	ldr	r0, [pc, #2488]	; 11738 <test_schema@@Base+0xbd0>
   10d7c:	mvn	r5, #0
   10d80:	add	r0, pc, r0
   10d84:	bl	107e0 <puts@plt>
   10d88:	ldr	r0, [sp, #4]
   10d8c:	bl	107a4 <free@plt>
   10d90:	mov	r0, r5
   10d94:	add	sp, sp, #20
   10d98:	ldrd	r4, [sp]
   10d9c:	ldrd	r6, [sp, #8]
   10da0:	ldrd	r8, [sp, #16]
   10da4:	ldrd	sl, [sp, #24]
   10da8:	add	sp, sp, #32
   10dac:	pop	{pc}		; (ldr pc, [sp], #4)
   10db0:	cmp	fp, #0
   10db4:	beq	10d78 <test_schema@@Base+0x210>
   10db8:	ldr	r8, [pc, #2428]	; 1173c <test_schema@@Base+0xbd4>
   10dbc:	sub	r7, fp, #1
   10dc0:	mov	r6, #0
   10dc4:	add	r8, pc, r8
   10dc8:	cmp	r6, r7
   10dcc:	bcs	10d6c <test_schema@@Base+0x204>
   10dd0:	sub	sl, r7, r6
   10dd4:	add	sl, r6, sl, lsr #1
   10dd8:	cmp	fp, sl
   10ddc:	add	r2, r4, sl, lsl #2
   10de0:	bls	11678 <test_schema@@Base+0xb10>
   10de4:	ldr	r3, [r4, sl, lsl #2]
   10de8:	adds	r1, r2, r3
   10dec:	beq	10d48 <test_schema@@Base+0x1e0>
   10df0:	ldr	r2, [r2, r3]
   10df4:	sub	r2, r1, r2
   10df8:	ldrh	r3, [r2]
   10dfc:	cmp	r3, #5
   10e00:	bhi	10e4c <test_schema@@Base+0x2e4>
   10e04:	b	11600 <test_schema@@Base+0xa98>
   10e08:	cmp	r6, sl
   10e0c:	bcs	10d70 <test_schema@@Base+0x208>
   10e10:	sub	r3, sl, r6
   10e14:	add	r3, r6, r3, lsr #1
   10e18:	cmp	fp, r3
   10e1c:	add	r0, r4, r3, lsl #2
   10e20:	bls	11678 <test_schema@@Base+0xb10>
   10e24:	ldr	r2, [r4, r3, lsl #2]
   10e28:	adds	r1, r0, r2
   10e2c:	beq	10d48 <test_schema@@Base+0x1e0>
   10e30:	ldr	r2, [r0, r2]
   10e34:	mov	r7, sl
   10e38:	sub	r2, r1, r2
   10e3c:	ldrh	r0, [r2]
   10e40:	cmp	r0, #5
   10e44:	bls	11600 <test_schema@@Base+0xa98>
   10e48:	mov	sl, r3
   10e4c:	ldrh	r0, [r2, #4]
   10e50:	cmp	r0, #0
   10e54:	beq	11600 <test_schema@@Base+0xa98>
   10e58:	ldr	r3, [r1, r0]
   10e5c:	add	r0, r1, r0
   10e60:	mov	r1, r8
   10e64:	add	r3, r3, #4
   10e68:	add	r0, r0, r3
   10e6c:	bl	10780 <strcmp@plt>
   10e70:	cmp	r0, #0
   10e74:	bge	10e08 <test_schema@@Base+0x2a0>
   10e78:	add	r6, sl, #1
   10e7c:	b	10dc8 <test_schema@@Base+0x260>
   10e80:	bl	1081c <fclose@plt>
   10e84:	ldr	r0, [sp, #4]
   10e88:	mvn	r5, #0
   10e8c:	bl	107a4 <free@plt>
   10e90:	ldr	r0, [pc, #2216]	; 11740 <test_schema@@Base+0xbd8>
   10e94:	add	r0, pc, r0
   10e98:	bl	107e0 <puts@plt>
   10e9c:	b	10d90 <test_schema@@Base+0x228>
   10ea0:	mov	r0, r6
   10ea4:	bl	1081c <fclose@plt>
   10ea8:	ldr	r0, [pc, #2196]	; 11744 <test_schema@@Base+0xbdc>
   10eac:	mvn	r5, #0
   10eb0:	add	r0, pc, r0
   10eb4:	bl	107e0 <puts@plt>
   10eb8:	b	10d90 <test_schema@@Base+0x228>
   10ebc:	cmp	fp, r6
   10ec0:	add	r2, r4, r6, lsl #2
   10ec4:	bls	1170c <test_schema@@Base+0xba4>
   10ec8:	ldr	r3, [r4, r6, lsl #2]
   10ecc:	adds	r4, r2, r3
   10ed0:	beq	11708 <test_schema@@Base+0xba0>
   10ed4:	ldr	r7, [r2, r3]
   10ed8:	sub	r7, r4, r7
   10edc:	ldrh	r8, [r7]
   10ee0:	cmp	r8, #5
   10ee4:	bls	11600 <test_schema@@Base+0xa98>
   10ee8:	ldrh	r0, [r7, #4]
   10eec:	cmp	r0, #0
   10ef0:	beq	11600 <test_schema@@Base+0xa98>
   10ef4:	ldr	r3, [r4, r0]
   10ef8:	add	r0, r4, r0
   10efc:	ldr	r1, [pc, #2116]	; 11748 <test_schema@@Base+0xbe0>
   10f00:	add	r3, r3, #4
   10f04:	add	r0, r0, r3
   10f08:	add	r1, pc, r1
   10f0c:	bl	10780 <strcmp@plt>
   10f10:	cmp	r0, #0
   10f14:	bne	10d78 <test_schema@@Base+0x210>
   10f18:	cmp	r8, #7
   10f1c:	bls	116c0 <test_schema@@Base+0xb58>
   10f20:	ldrh	r2, [r7, #6]
   10f24:	cmp	r2, #0
   10f28:	beq	116c0 <test_schema@@Base+0xb58>
   10f2c:	ldr	r3, [r4, r2]
   10f30:	add	r4, r4, r2
   10f34:	add	r3, r3, #4
   10f38:	adds	r4, r4, r3
   10f3c:	beq	11034 <test_schema@@Base+0x4cc>
   10f40:	ldr	r7, [r4, #-4]
   10f44:	cmp	r7, #0
   10f48:	beq	11034 <test_schema@@Base+0x4cc>
   10f4c:	ldr	r3, [pc, #2040]	; 1174c <test_schema@@Base+0xbe4>
   10f50:	sub	r8, r7, #1
   10f54:	mov	r9, #0
   10f58:	mov	sl, r8
   10f5c:	str	r5, [sp, #8]
   10f60:	mov	r5, r4
   10f64:	add	r3, pc, r3
   10f68:	mov	r4, r3
   10f6c:	cmp	r9, sl
   10f70:	bcs	115a8 <test_schema@@Base+0xa40>
   10f74:	sub	fp, sl, r9
   10f78:	add	fp, r9, fp, lsr #1
   10f7c:	cmp	r7, fp
   10f80:	add	r1, r5, fp, lsl #2
   10f84:	bls	11654 <test_schema@@Base+0xaec>
   10f88:	ldr	r3, [r5, fp, lsl #2]
   10f8c:	adds	ip, r1, r3
   10f90:	beq	11630 <test_schema@@Base+0xac8>
   10f94:	ldr	r1, [r1, r3]
   10f98:	sub	r1, ip, r1
   10f9c:	ldrh	r3, [r1]
   10fa0:	cmp	r3, #5
   10fa4:	bhi	10ff0 <test_schema@@Base+0x488>
   10fa8:	b	115c8 <test_schema@@Base+0xa60>
   10fac:	cmp	r9, fp
   10fb0:	bcs	11024 <test_schema@@Base+0x4bc>
   10fb4:	sub	r3, fp, r9
   10fb8:	add	r3, r9, r3, lsr #1
   10fbc:	cmp	r7, r3
   10fc0:	add	r0, r5, r3, lsl #2
   10fc4:	bls	11654 <test_schema@@Base+0xaec>
   10fc8:	ldr	r1, [r5, r3, lsl #2]
   10fcc:	adds	ip, r0, r1
   10fd0:	beq	11630 <test_schema@@Base+0xac8>
   10fd4:	ldr	r1, [r0, r1]
   10fd8:	mov	sl, fp
   10fdc:	sub	r1, ip, r1
   10fe0:	ldrh	r0, [r1]
   10fe4:	cmp	r0, #5
   10fe8:	bls	115c8 <test_schema@@Base+0xa60>
   10fec:	mov	fp, r3
   10ff0:	ldrh	r0, [r1, #4]
   10ff4:	cmp	r0, #0
   10ff8:	beq	115c8 <test_schema@@Base+0xa60>
   10ffc:	ldr	r3, [ip, r0]
   11000:	add	r0, ip, r0
   11004:	mov	r1, r4
   11008:	add	r3, r3, #4
   1100c:	add	r0, r0, r3
   11010:	bl	10780 <strcmp@plt>
   11014:	cmp	r0, #0
   11018:	bge	10fac <test_schema@@Base+0x444>
   1101c:	add	r9, fp, #1
   11020:	b	10f6c <test_schema@@Base+0x404>
   11024:	mov	r4, r5
   11028:	ldr	r5, [sp, #8]
   1102c:	cmp	r9, fp
   11030:	beq	11048 <test_schema@@Base+0x4e0>
   11034:	ldr	r0, [pc, #1812]	; 11750 <test_schema@@Base+0xbe8>
   11038:	mvn	r5, #0
   1103c:	add	r0, pc, r0
   11040:	bl	107e0 <puts@plt>
   11044:	b	10d88 <test_schema@@Base+0x220>
   11048:	cmp	r7, r9
   1104c:	add	r2, r4, r9, lsl #2
   11050:	bls	11714 <test_schema@@Base+0xbac>
   11054:	ldr	r9, [r4, r9, lsl #2]
   11058:	adds	sl, r2, r9
   1105c:	beq	11710 <test_schema@@Base+0xba8>
   11060:	ldr	fp, [r2, r9]
   11064:	str	r2, [sp, #12]
   11068:	sub	fp, sl, fp
   1106c:	ldrh	r3, [fp]
   11070:	cmp	r3, #5
   11074:	str	r3, [sp, #8]
   11078:	bls	115c8 <test_schema@@Base+0xa60>
   1107c:	ldrh	r1, [fp, #4]
   11080:	cmp	r1, #0
   11084:	beq	115c8 <test_schema@@Base+0xa60>
   11088:	ldr	ip, [sl, r1]
   1108c:	add	r0, sl, r1
   11090:	ldr	r1, [pc, #1724]	; 11754 <test_schema@@Base+0xbec>
   11094:	add	ip, ip, #4
   11098:	add	r0, r0, ip
   1109c:	add	r1, pc, r1
   110a0:	bl	10780 <strcmp@plt>
   110a4:	cmp	r0, #0
   110a8:	ldr	r3, [sp, #8]
   110ac:	ldr	r2, [sp, #12]
   110b0:	bne	11034 <test_schema@@Base+0x4cc>
   110b4:	cmp	r3, #13
   110b8:	bhi	11148 <test_schema@@Base+0x5e0>
   110bc:	ldr	r0, [pc, #1684]	; 11758 <test_schema@@Base+0xbf0>
   110c0:	str	r2, [sp, #8]
   110c4:	add	r0, pc, r0
   110c8:	bl	107e0 <puts@plt>
   110cc:	ldr	r2, [sp, #8]
   110d0:	ldr	r3, [r2, r9]
   110d4:	sub	r3, sl, r3
   110d8:	ldrh	r1, [r3]
   110dc:	cmp	r1, #5
   110e0:	bls	115c8 <test_schema@@Base+0xa60>
   110e4:	ldrh	r3, [r3, #4]
   110e8:	cmp	r3, #0
   110ec:	beq	115c8 <test_schema@@Base+0xa60>
   110f0:	ldr	r1, [sl, r3]
   110f4:	add	r3, sl, r3
   110f8:	ldr	r0, [pc, #1628]	; 1175c <test_schema@@Base+0xbf4>
   110fc:	add	r1, r1, #4
   11100:	add	r1, r3, r1
   11104:	add	r0, pc, r0
   11108:	bl	1078c <printf@plt>
   1110c:	ldr	r2, [sp, #8]
   11110:	ldr	r3, [r2, r9]
   11114:	sub	r3, sl, r3
   11118:	ldrh	r2, [r3]
   1111c:	cmp	r2, #13
   11120:	bls	11624 <test_schema@@Base+0xabc>
   11124:	ldrh	r3, [r3, #12]
   11128:	cmp	r3, #0
   1112c:	beq	11624 <test_schema@@Base+0xabc>
   11130:	ldrd	r2, [r3, sl]
   11134:	mvn	r5, #0
   11138:	ldr	r0, [pc, #1568]	; 11760 <test_schema@@Base+0xbf8>
   1113c:	add	r0, pc, r0
   11140:	bl	1078c <printf@plt>
   11144:	b	10d88 <test_schema@@Base+0x220>
   11148:	ldrh	r3, [fp, #12]
   1114c:	cmp	r3, #0
   11150:	beq	110bc <test_schema@@Base+0x554>
   11154:	ldrd	r0, [sl, r3]
   11158:	cmp	r1, #0
   1115c:	cmpeq	r0, #150	; 0x96
   11160:	bne	110bc <test_schema@@Base+0x554>
   11164:	ldrh	r2, [fp, #6]
   11168:	cmp	r2, #0
   1116c:	beq	11698 <test_schema@@Base+0xb30>
   11170:	ldr	r3, [sl, r2]
   11174:	add	sl, sl, r2
   11178:	adds	r2, sl, r3
   1117c:	beq	116bc <test_schema@@Base+0xb54>
   11180:	ldr	r3, [sl, r3]
   11184:	sub	r3, r2, r3
   11188:	ldrh	r1, [r3]
   1118c:	cmp	r1, #5
   11190:	bhi	111a8 <test_schema@@Base+0x640>
   11194:	ldr	r0, [pc, #1480]	; 11764 <test_schema@@Base+0xbfc>
   11198:	mvn	r5, #0
   1119c:	add	r0, pc, r0
   111a0:	bl	107e0 <puts@plt>
   111a4:	b	10d88 <test_schema@@Base+0x220>
   111a8:	ldrh	r3, [r3, #4]
   111ac:	cmp	r3, #0
   111b0:	beq	11194 <test_schema@@Base+0x62c>
   111b4:	ldrsb	r3, [r2, r3]
   111b8:	cmp	r3, #5
   111bc:	bne	11194 <test_schema@@Base+0x62c>
   111c0:	ldr	r3, [pc, #1440]	; 11768 <test_schema@@Base+0xc00>
   111c4:	mov	sl, r8
   111c8:	mov	r9, #0
   111cc:	str	r5, [sp, #8]
   111d0:	mov	r5, r4
   111d4:	add	r3, pc, r3
   111d8:	mov	r4, r3
   111dc:	cmp	r9, sl
   111e0:	bcs	115b8 <test_schema@@Base+0xa50>
   111e4:	sub	fp, sl, r9
   111e8:	add	fp, r9, fp, lsr #1
   111ec:	cmp	r7, fp
   111f0:	add	r1, r5, fp, lsl #2
   111f4:	bls	11654 <test_schema@@Base+0xaec>
   111f8:	ldr	r3, [r5, fp, lsl #2]
   111fc:	adds	ip, r1, r3
   11200:	beq	11630 <test_schema@@Base+0xac8>
   11204:	ldr	r1, [r1, r3]
   11208:	sub	r1, ip, r1
   1120c:	ldrh	r3, [r1]
   11210:	cmp	r3, #5
   11214:	bhi	11260 <test_schema@@Base+0x6f8>
   11218:	b	115c8 <test_schema@@Base+0xa60>
   1121c:	cmp	r9, fp
   11220:	bcs	11294 <test_schema@@Base+0x72c>
   11224:	sub	r3, fp, r9
   11228:	add	r3, r9, r3, lsr #1
   1122c:	cmp	r7, r3
   11230:	add	r0, r5, r3, lsl #2
   11234:	bls	11654 <test_schema@@Base+0xaec>
   11238:	ldr	r1, [r5, r3, lsl #2]
   1123c:	adds	ip, r0, r1
   11240:	beq	11630 <test_schema@@Base+0xac8>
   11244:	ldr	r1, [r0, r1]
   11248:	mov	sl, fp
   1124c:	sub	r1, ip, r1
   11250:	ldrh	r0, [r1]
   11254:	cmp	r0, #5
   11258:	bls	115c8 <test_schema@@Base+0xa60>
   1125c:	mov	fp, r3
   11260:	ldrh	r0, [r1, #4]
   11264:	cmp	r0, #0
   11268:	beq	115c8 <test_schema@@Base+0xa60>
   1126c:	ldr	r3, [ip, r0]
   11270:	add	r0, ip, r0
   11274:	mov	r1, r4
   11278:	add	r3, r3, #4
   1127c:	add	r0, r0, r3
   11280:	bl	10780 <strcmp@plt>
   11284:	cmp	r0, #0
   11288:	bge	1121c <test_schema@@Base+0x6b4>
   1128c:	add	r9, fp, #1
   11290:	b	111dc <test_schema@@Base+0x674>
   11294:	mov	r4, r5
   11298:	ldr	r5, [sp, #8]
   1129c:	cmp	fp, r9
   112a0:	beq	112b8 <test_schema@@Base+0x750>
   112a4:	ldr	r0, [pc, #1216]	; 1176c <test_schema@@Base+0xc04>
   112a8:	mvn	r5, #0
   112ac:	add	r0, pc, r0
   112b0:	bl	107e0 <puts@plt>
   112b4:	b	10d88 <test_schema@@Base+0x220>
   112b8:	cmp	r7, fp
   112bc:	add	r2, r4, fp, lsl #2
   112c0:	bls	11714 <test_schema@@Base+0xbac>
   112c4:	ldr	r3, [r4, fp, lsl #2]
   112c8:	adds	sl, r2, r3
   112cc:	beq	11710 <test_schema@@Base+0xba8>
   112d0:	ldr	fp, [r2, r3]
   112d4:	sub	fp, sl, fp
   112d8:	ldrh	r3, [fp]
   112dc:	cmp	r3, #5
   112e0:	str	r3, [sp, #8]
   112e4:	bls	115c8 <test_schema@@Base+0xa60>
   112e8:	ldrh	r2, [fp, #4]
   112ec:	cmp	r2, #0
   112f0:	beq	115c8 <test_schema@@Base+0xa60>
   112f4:	ldr	r0, [sl, r2]
   112f8:	add	r2, sl, r2
   112fc:	ldr	r1, [pc, #1132]	; 11770 <test_schema@@Base+0xc08>
   11300:	add	r0, r0, #4
   11304:	add	r0, r2, r0
   11308:	add	r1, pc, r1
   1130c:	bl	10780 <strcmp@plt>
   11310:	cmp	r0, #0
   11314:	ldr	r3, [sp, #8]
   11318:	bne	112a4 <test_schema@@Base+0x73c>
   1131c:	cmp	r3, #7
   11320:	bls	11698 <test_schema@@Base+0xb30>
   11324:	ldrh	r3, [fp, #6]
   11328:	cmp	r3, #0
   1132c:	beq	11698 <test_schema@@Base+0xb30>
   11330:	ldr	r2, [sl, r3]
   11334:	add	r3, sl, r3
   11338:	adds	r1, r3, r2
   1133c:	beq	116bc <test_schema@@Base+0xb54>
   11340:	ldr	r3, [r3, r2]
   11344:	sub	r3, r1, r3
   11348:	ldrh	r2, [r3]
   1134c:	cmp	r2, #5
   11350:	bhi	11368 <test_schema@@Base+0x800>
   11354:	ldr	r0, [pc, #1048]	; 11774 <test_schema@@Base+0xc0c>
   11358:	mvn	r5, #0
   1135c:	add	r0, pc, r0
   11360:	bl	107e0 <puts@plt>
   11364:	b	10d88 <test_schema@@Base+0x220>
   11368:	ldrh	r0, [r3, #4]
   1136c:	cmp	r0, #0
   11370:	beq	11354 <test_schema@@Base+0x7ec>
   11374:	ldrsb	r0, [r1, r0]
   11378:	cmp	r0, #15
   1137c:	bne	11354 <test_schema@@Base+0x7ec>
   11380:	cmp	r2, #9
   11384:	bls	115ec <test_schema@@Base+0xa84>
   11388:	ldrh	r3, [r3, #8]
   1138c:	cmp	r3, #0
   11390:	beq	115ec <test_schema@@Base+0xa84>
   11394:	ldr	r3, [r1, r3]
   11398:	cmp	r3, r6
   1139c:	bne	115ec <test_schema@@Base+0xa84>
   113a0:	ldr	sl, [pc, #976]	; 11778 <test_schema@@Base+0xc10>
   113a4:	add	sl, pc, sl
   113a8:	cmp	r5, r8
   113ac:	bcs	11460 <test_schema@@Base+0x8f8>
   113b0:	sub	fp, r8, r5
   113b4:	add	fp, r5, fp, lsr #1
   113b8:	cmp	r7, fp
   113bc:	add	r2, r4, fp, lsl #2
   113c0:	bls	11654 <test_schema@@Base+0xaec>
   113c4:	ldr	r3, [r4, fp, lsl #2]
   113c8:	adds	r1, r2, r3
   113cc:	beq	11630 <test_schema@@Base+0xac8>
   113d0:	ldr	r2, [r2, r3]
   113d4:	sub	r2, r1, r2
   113d8:	ldrh	r3, [r2]
   113dc:	cmp	r3, #5
   113e0:	bhi	1142c <test_schema@@Base+0x8c4>
   113e4:	b	115c8 <test_schema@@Base+0xa60>
   113e8:	cmp	r5, fp
   113ec:	bcs	11464 <test_schema@@Base+0x8fc>
   113f0:	sub	r3, fp, r5
   113f4:	add	r3, r5, r3, lsr #1
   113f8:	cmp	r7, r3
   113fc:	add	r0, r4, r3, lsl #2
   11400:	bls	11654 <test_schema@@Base+0xaec>
   11404:	ldr	r2, [r4, r3, lsl #2]
   11408:	adds	r1, r0, r2
   1140c:	beq	11630 <test_schema@@Base+0xac8>
   11410:	ldr	r2, [r0, r2]
   11414:	mov	r8, fp
   11418:	sub	r2, r1, r2
   1141c:	ldrh	r0, [r2]
   11420:	cmp	r0, #5
   11424:	bls	115c8 <test_schema@@Base+0xa60>
   11428:	mov	fp, r3
   1142c:	ldrh	r0, [r2, #4]
   11430:	cmp	r0, #0
   11434:	beq	115c8 <test_schema@@Base+0xa60>
   11438:	ldr	r3, [r1, r0]
   1143c:	add	r0, r1, r0
   11440:	mov	r1, sl
   11444:	add	r3, r3, #4
   11448:	add	r0, r0, r3
   1144c:	bl	10780 <strcmp@plt>
   11450:	cmp	r0, #0
   11454:	bge	113e8 <test_schema@@Base+0x880>
   11458:	add	r5, fp, #1
   1145c:	b	113a8 <test_schema@@Base+0x840>
   11460:	mov	fp, r8
   11464:	cmp	r5, fp
   11468:	beq	11480 <test_schema@@Base+0x918>
   1146c:	ldr	r0, [pc, #776]	; 1177c <test_schema@@Base+0xc14>
   11470:	mvn	r5, #0
   11474:	add	r0, pc, r0
   11478:	bl	107e0 <puts@plt>
   1147c:	b	10d88 <test_schema@@Base+0x220>
   11480:	cmp	r7, r5
   11484:	add	r2, r4, r5, lsl #2
   11488:	bls	11714 <test_schema@@Base+0xbac>
   1148c:	ldr	r3, [r4, r5, lsl #2]
   11490:	adds	r4, r2, r3
   11494:	beq	11710 <test_schema@@Base+0xba8>
   11498:	ldr	r7, [r2, r3]
   1149c:	sub	r7, r4, r7
   114a0:	ldrh	r8, [r7]
   114a4:	cmp	r8, #5
   114a8:	bls	115c8 <test_schema@@Base+0xa60>
   114ac:	ldrh	r3, [r7, #4]
   114b0:	cmp	r3, #0
   114b4:	beq	115c8 <test_schema@@Base+0xa60>
   114b8:	ldr	r0, [r4, r3]
   114bc:	add	r3, r4, r3
   114c0:	ldr	r1, [pc, #696]	; 11780 <test_schema@@Base+0xc18>
   114c4:	add	r0, r0, #4
   114c8:	add	r0, r3, r0
   114cc:	add	r1, pc, r1
   114d0:	bl	10780 <strcmp@plt>
   114d4:	subs	r5, r0, #0
   114d8:	bne	1146c <test_schema@@Base+0x904>
   114dc:	cmp	r8, #7
   114e0:	bls	11698 <test_schema@@Base+0xb30>
   114e4:	ldrh	r3, [r7, #6]
   114e8:	cmp	r3, #0
   114ec:	beq	11698 <test_schema@@Base+0xb30>
   114f0:	ldr	r2, [r4, r3]
   114f4:	add	r3, r4, r3
   114f8:	adds	r1, r3, r2
   114fc:	beq	116bc <test_schema@@Base+0xb54>
   11500:	ldr	r3, [r3, r2]
   11504:	sub	r3, r1, r3
   11508:	ldrh	r2, [r3]
   1150c:	cmp	r2, #5
   11510:	bhi	11528 <test_schema@@Base+0x9c0>
   11514:	ldr	r0, [pc, #616]	; 11784 <test_schema@@Base+0xc1c>
   11518:	mvn	r5, #0
   1151c:	add	r0, pc, r0
   11520:	bl	107e0 <puts@plt>
   11524:	b	10d88 <test_schema@@Base+0x220>
   11528:	ldrh	r0, [r3, #4]
   1152c:	cmp	r0, #0
   11530:	beq	11514 <test_schema@@Base+0x9ac>
   11534:	ldrsb	r0, [r1, r0]
   11538:	cmp	r0, #14
   1153c:	bne	11514 <test_schema@@Base+0x9ac>
   11540:	cmp	r2, #7
   11544:	bhi	1155c <test_schema@@Base+0x9f4>
   11548:	ldr	r0, [pc, #568]	; 11788 <test_schema@@Base+0xc20>
   1154c:	mvn	r5, #0
   11550:	add	r0, pc, r0
   11554:	bl	107e0 <puts@plt>
   11558:	b	10d88 <test_schema@@Base+0x220>
   1155c:	ldrh	r0, [r3, #6]
   11560:	cmp	r0, #0
   11564:	beq	11548 <test_schema@@Base+0x9e0>
   11568:	ldrsb	r0, [r1, r0]
   1156c:	cmp	r0, #15
   11570:	bne	11548 <test_schema@@Base+0x9e0>
   11574:	cmp	r2, #9
   11578:	bls	11594 <test_schema@@Base+0xa2c>
   1157c:	ldrh	r3, [r3, #8]
   11580:	cmp	r3, #0
   11584:	beq	11594 <test_schema@@Base+0xa2c>
   11588:	ldr	r3, [r1, r3]
   1158c:	cmp	r3, r6
   11590:	beq	10d88 <test_schema@@Base+0x220>
   11594:	ldr	r0, [pc, #496]	; 1178c <test_schema@@Base+0xc24>
   11598:	mvn	r5, #0
   1159c:	add	r0, pc, r0
   115a0:	bl	107e0 <puts@plt>
   115a4:	b	10d88 <test_schema@@Base+0x220>
   115a8:	mov	r4, r5
   115ac:	mov	fp, sl
   115b0:	ldr	r5, [sp, #8]
   115b4:	b	1102c <test_schema@@Base+0x4c4>
   115b8:	mov	r4, r5
   115bc:	mov	fp, sl
   115c0:	ldr	r5, [sp, #8]
   115c4:	b	1129c <test_schema@@Base+0x734>
   115c8:	ldr	r3, [pc, #448]	; 11790 <test_schema@@Base+0xc28>
   115cc:	mov	r2, #195	; 0xc3
   115d0:	ldr	r1, [pc, #444]	; 11794 <test_schema@@Base+0xc2c>
   115d4:	ldr	r0, [pc, #444]	; 11798 <test_schema@@Base+0xc30>
   115d8:	add	r3, pc, r3
   115dc:	add	r3, r3, #52	; 0x34
   115e0:	add	r1, pc, r1
   115e4:	add	r0, pc, r0
   115e8:	bl	10840 <__assert_fail@plt>
   115ec:	ldr	r0, [pc, #424]	; 1179c <test_schema@@Base+0xc34>
   115f0:	mvn	r5, #0
   115f4:	add	r0, pc, r0
   115f8:	bl	107e0 <puts@plt>
   115fc:	b	10d88 <test_schema@@Base+0x220>
   11600:	ldr	r3, [pc, #408]	; 117a0 <test_schema@@Base+0xc38>
   11604:	mov	r2, #218	; 0xda
   11608:	ldr	r1, [pc, #404]	; 117a4 <test_schema@@Base+0xc3c>
   1160c:	ldr	r0, [pc, #404]	; 117a8 <test_schema@@Base+0xc40>
   11610:	add	r3, pc, r3
   11614:	add	r3, r3, #28
   11618:	add	r1, pc, r1
   1161c:	add	r0, pc, r0
   11620:	bl	10840 <__assert_fail@plt>
   11624:	mov	r2, #0
   11628:	mov	r3, #0
   1162c:	b	11134 <test_schema@@Base+0x5cc>
   11630:	ldr	r3, [pc, #372]	; 117ac <test_schema@@Base+0xc44>
   11634:	mov	r2, #195	; 0xc3
   11638:	ldr	r1, [pc, #368]	; 117b0 <test_schema@@Base+0xc48>
   1163c:	ldr	r0, [pc, #368]	; 117b4 <test_schema@@Base+0xc4c>
   11640:	add	r3, pc, r3
   11644:	add	r3, r3, #52	; 0x34
   11648:	add	r1, pc, r1
   1164c:	add	r0, pc, r0
   11650:	bl	10840 <__assert_fail@plt>
   11654:	ldr	r3, [pc, #348]	; 117b8 <test_schema@@Base+0xc50>
   11658:	mov	r2, #192	; 0xc0
   1165c:	ldr	r1, [pc, #344]	; 117bc <test_schema@@Base+0xc54>
   11660:	ldr	r0, [pc, #344]	; 117c0 <test_schema@@Base+0xc58>
   11664:	add	r3, pc, r3
   11668:	add	r3, r3, #112	; 0x70
   1166c:	add	r1, pc, r1
   11670:	add	r0, pc, r0
   11674:	bl	10840 <__assert_fail@plt>
   11678:	ldr	r3, [pc, #324]	; 117c4 <test_schema@@Base+0xc5c>
   1167c:	mov	r2, #215	; 0xd7
   11680:	ldr	r1, [pc, #320]	; 117c8 <test_schema@@Base+0xc60>
   11684:	ldr	r0, [pc, #320]	; 117cc <test_schema@@Base+0xc64>
   11688:	add	r3, pc, r3
   1168c:	add	r1, pc, r1
   11690:	add	r0, pc, r0
   11694:	bl	10840 <__assert_fail@plt>
   11698:	ldr	r3, [pc, #304]	; 117d0 <test_schema@@Base+0xc68>
   1169c:	mov	r2, #201	; 0xc9
   116a0:	ldr	r1, [pc, #300]	; 117d4 <test_schema@@Base+0xc6c>
   116a4:	ldr	r0, [pc, #300]	; 117d8 <test_schema@@Base+0xc70>
   116a8:	add	r3, pc, r3
   116ac:	add	r3, r3, #136	; 0x88
   116b0:	add	r1, pc, r1
   116b4:	add	r0, pc, r0
   116b8:	bl	10840 <__assert_fail@plt>
   116bc:	bl	10af8 <_start@@Base+0x23c>
   116c0:	ldr	r3, [pc, #276]	; 117dc <test_schema@@Base+0xc74>
   116c4:	mov	r2, #224	; 0xe0
   116c8:	ldr	r1, [pc, #272]	; 117e0 <test_schema@@Base+0xc78>
   116cc:	ldr	r0, [pc, #272]	; 117e4 <test_schema@@Base+0xc7c>
   116d0:	add	r3, pc, r3
   116d4:	add	r3, r3, #240	; 0xf0
   116d8:	add	r1, pc, r1
   116dc:	add	r0, pc, r0
   116e0:	bl	10840 <__assert_fail@plt>
   116e4:	ldr	r3, [pc, #252]	; 117e8 <test_schema@@Base+0xc80>
   116e8:	mov	r2, #237	; 0xed
   116ec:	ldr	r1, [pc, #248]	; 117ec <test_schema@@Base+0xc84>
   116f0:	ldr	r0, [pc, #248]	; 117f0 <test_schema@@Base+0xc88>
   116f4:	add	r3, pc, r3
   116f8:	add	r3, r3, #212	; 0xd4
   116fc:	add	r1, pc, r1
   11700:	add	r0, pc, r0
   11704:	bl	10840 <__assert_fail@plt>
   11708:	bl	109e0 <_start@@Base+0x124>
   1170c:	bl	109ac <_start@@Base+0xf0>
   11710:	bl	10a18 <_start@@Base+0x15c>
   11714:	bl	10a88 <_start@@Base+0x1cc>
   11718:	andeq	r0, r0, r4, asr #29
   1171c:	andeq	r0, r0, ip, lsl ip
   11720:	andeq	r0, r0, r0, lsr #26
   11724:	andeq	r0, r0, ip, asr #27
   11728:	andeq	r0, r0, r8, lsl #27
   1172c:	andeq	r0, r0, r4, lsl #22
   11730:	andeq	r0, r0, r8, lsl #24
   11734:			; <UNDEFINED> instruction: 0x00000cb4
   11738:	andeq	r0, r0, r4, lsl sp
   1173c:			; <UNDEFINED> instruction: 0x00000cb8
   11740:			; <UNDEFINED> instruction: 0x00000db0
   11744:	muleq	r0, r4, sp
   11748:	andeq	r0, r0, r4, ror fp
   1174c:	andeq	r0, r0, r4, asr fp
   11750:	andeq	r0, r0, r4, lsl #21
   11754:	andeq	r0, r0, ip, lsl sl
   11758:	andeq	r0, r0, r8, lsr #20
   1175c:	andeq	r0, r0, ip, lsl #20
   11760:	andeq	r0, r0, r4, ror #19
   11764:	andeq	r0, r0, ip, lsl #19
   11768:	andeq	r0, r0, r0, ror r9
   1176c:	andeq	r0, r0, r0, lsr #17
   11770:	andeq	r0, r0, ip, lsr r8
   11774:	andeq	r0, r0, r8, lsl #16
   11778:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1177c:	andeq	r0, r0, r4, lsr r7
   11780:	andeq	r0, r0, r8, asr #13
   11784:	andeq	r0, r0, r8, lsr #13
   11788:	muleq	r0, ip, r6
   1178c:	andeq	r0, r0, r0, lsl #13
   11790:	andeq	r0, r0, r4, lsl #5
   11794:	andeq	r0, r0, r8, lsl #7
   11798:	andeq	r0, r0, r0, ror #8
   1179c:	andeq	r0, r0, r8, lsl #11
   117a0:	andeq	r0, r0, ip, asr #4
   117a4:	andeq	r0, r0, r0, asr r3
   117a8:	andeq	r0, r0, r8, lsr #8
   117ac:	andeq	r0, r0, ip, lsl r2
   117b0:	andeq	r0, r0, r0, lsr #6
   117b4:	andeq	r0, r0, ip, asr #7
   117b8:	strdeq	r0, [r0], -r8
   117bc:	strdeq	r0, [r0], -ip
   117c0:	andeq	r0, r0, r0, ror r3
   117c4:	ldrdeq	r0, [r0], -r4
   117c8:	ldrdeq	r0, [r0], -ip
   117cc:	andeq	r0, r0, r0, asr r3
   117d0:			; <UNDEFINED> instruction: 0x000001b4
   117d4:			; <UNDEFINED> instruction: 0x000002b8
   117d8:	muleq	r0, r0, r3
   117dc:	andeq	r0, r0, ip, lsl #3
   117e0:	muleq	r0, r0, r2
   117e4:	andeq	r0, r0, r8, ror #6
   117e8:	andeq	r0, r0, r8, ror #2
   117ec:	andeq	r0, r0, ip, ror #4
   117f0:	andeq	r0, r0, r4, asr #6

000117f4 <__libc_csu_init@@Base>:
   117f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117f8:	mov	r7, r0
   117fc:	ldr	r6, [pc, #72]	; 1184c <__libc_csu_init@@Base+0x58>
   11800:	ldr	r5, [pc, #72]	; 11850 <__libc_csu_init@@Base+0x5c>
   11804:	add	r6, pc, r6
   11808:	add	r5, pc, r5
   1180c:	sub	r6, r6, r5
   11810:	mov	r8, r1
   11814:	mov	r9, r2
   11818:	bl	10760 <strcmp@plt-0x20>
   1181c:	asrs	r6, r6, #2
   11820:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11824:	mov	r4, #0
   11828:	add	r4, r4, #1
   1182c:	ldr	r3, [r5], #4
   11830:	mov	r2, r9
   11834:	mov	r1, r8
   11838:	mov	r0, r7
   1183c:	blx	r3
   11840:	cmp	r6, r4
   11844:	bne	11828 <__libc_csu_init@@Base+0x34>
   11848:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1184c:	andeq	r0, r1, r8, lsl #14
   11850:	andeq	r0, r1, r0, lsl #14

00011854 <__libc_csu_fini@@Base>:
   11854:	bx	lr

Disassembly of section .fini:

00011858 <.fini>:
   11858:	push	{r3, lr}
   1185c:	pop	{r3, pc}
